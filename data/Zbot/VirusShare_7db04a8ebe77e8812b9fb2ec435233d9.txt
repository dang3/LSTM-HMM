push
add
mov
addr16
or
inc
movsl
shrl
mov
mov
pusha
call
add
shll
inc
and
test
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
hlt
movsb
push
dec
pop
or
movsl
adc
andnps
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
nop
and
push
jp
repz
cmp
int3
mov
lock
icebp
rcrb
aas
adc
push
popf
dec
push
dec
call
in
dec
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
push
pop
push
pop
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
sub
cmp
jne
mov
pop
ret
add
add
mov
loop
adcb
out
fiaddl
aad
data16
lds
aad
pop
xchg
lcall
popa
out
fbstp
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
iret
mov
jb
mov
jp
pusha
jo
aas
clc
fbld
loopne
jle
icebp
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
adc
test
mov
xchg
adc
jle
jge
mov
pop
sbb
xchg
into
cmp
adc
push
rorb
push
mov
test
int3
jb
out
push
xchg
cli
mov
mov
inc
out
ret
int
inc
pusha
aam
cmpsb
mov
shlb
rorb
fdivrl
adc
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
cmpsl
shlb
mov
fcomip
sub
inc
sub
aaa
xor
xchg
sarl
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
push
xchg
inc
in
push
std
mov
adc
imul
pop
lahf
lahf
push
push
cmp
jo
fldcw
std
inc
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
mov
and
add
and
add
and
add
add
and
add
and
add
add
and
add
and
add
add
lods
and
add
add
mov
and
add
add
clc
and
add
add
add
and
add
add
xchg
and
add
add
and
add
and
add
and
add
add
andb
add
and
add
add
add
add
call
and
add
add
or
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
and
add
and
add
and
add
add
and
add
and
add
add
and
add
and
add
add
lods
and
add
add
mov
and
add
add
clc
and
add
add
add
and
add
add
xchg
and
add
add
and
add
and
add
and
add
add
andb
add
and
add
add
add
add
call
and
add
add
or
add
add
add
gs
enter
jae
gs
popa
insb
jne
add
add
gs
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
outsl
outsb
jae
insb
gs
add
roll
dec
gs
jo
jb
add
dec
add
insb
outsb
inc
add
add
inc
gs
outsl
imul
jbe
jae
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
push
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
lock
imul
jb
je
arpl
aam
inc
gs
jb
jbe
push
jns
gs
add
add
outsb
fs
je
insl
push
add
add
fs
imul
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
push
add
inc
add
outsl
jae
dec
popa
outsb
fs
gs
add
insb
gs
jae
dec
jne
gs
add
fs
outsl
outsb
jae
insb
gs
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
imul
jae
inc
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jge
add
jnp
lods
lods
stos
add
cmpsl
push
mov
mov
mov
lret
lret
int3
int
rcl
shr
rcl
shl
iret
iret
shl
int3
int3
int
leave
enter
leave
enter
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
out
lret
lret
rcl
cld
xlat
fcom
std
fcom
aad
aam
iret
iret
iret
dec
int3
int
aam
aad
iret
rcl
inc
ret
mov
mov
lods
iret
movsb
movsb
movsl
xchg
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
sbb
mov
jnp
mov
sar
vpaddd
lret
iret
rcl
aam
xlat
xlat
call
xlat
call
aad
into
int3
int3
dec
int
call
aam
dec
into
int
mov
mov
mov
std
cmpsl
cmpsl
test
xchg
xchg
xchg
mov
pop
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
mov
call
rcl
call
xlat
fcom
fdivr
aad
aad
into
int3
into
dec
leave
leave
dec
into
into
inc
mov
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
fs
cmp
push
das
femms
push
sub
aaa
aaa
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
mov
sar
aad
aad
aam
aam
iret
rcl
inc
mov
inc
ret
mov
mov
ljmp
mov
sahf
xchg
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jge
jge
jg
jno
jno
arpl
mov
cmp
inc
mov
outsl
outsl
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
dec
leave
leave
inc
mov
mov
scas
scas
scas
jmp
fwait
cltd
call
xchg
xchg
xchg
xchg
xchg
fwait
cltd
cltd
in
addb
push
femms
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
outsb
add
pop
or
jnp
nop
mov
xchg
xchg
xchg
incb
jl
jl
jl
jo
outsb
out
addr16
fdivs
je
jg
jge
jp
js
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
xchg
incl
addb
xchg
xchg
sahf
lahf
sahf
sti
mov
xchg
xchg
mov
jns
jp
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
popf
in
mov
mov
addb
decb
xchg
loope
jo
enter
mov
addb
xchg
push
cmp
ss
and
jle
jge
cltd
lcall
test
lods
lods
sti
stos
stos
lods
lods
stos
lods
test
movsb
movsl
std
lcall
decl
jge
jns
jns
jnp
jnp
mov
xchg
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
femms
rdmsr
inc
inc
inc
dec
insb
insb
imul
test
lcall
out
cltd
lcall
mov
incl
mov
fwait
lcall
lods
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
pushf
std
movsb
mov
mov
in
nop
nop
xchg
in
xchg
push
jne
or
add
or
inc
sub
es
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
xchg
std
nop
nop
decb
xchg
xchg
lcall
movsl
cmpsl
ljmp
test
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
sahf
xchg
lcall
mov
call
nop
xchg
xchg
xchg
xchg
popf
sahf
sahf
movsb
movsb
movsb
stos
stos
stos
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
popa
arpl
jb
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
ja
mov
movsl
mov
mov
lods
lods
mov
mov
add
shll
xchg
lea
ljmp
popf
decl
xchg
xchg
call
xchg
xchg
call
xchg
cwtl
lcall
sahf
mov
movsb
std
mov
cltd
cltd
out
nop
xchg
nop
xchg
les
cltd
lcall
xchg
cmc
xchg
xchg
std
xchg
je
cltd
push
cmp
dec
cmp
inc
jnp
mov
jnp
mov
jb
mov
insl
ljmp
adc
stos
or
lods
or
mov
jle
mov
mov
stos
pushf
movsl
mov
mov
add
pop
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
sahf
popf
lcall
sahf
popf
lcall
xchg
cwtl
call
xchg
xchg
call
xchg
lcall
cltd
lahf
stc
mov
xchg
xchg
push
xchg
push
jle
xchg
dec
jns
lcall
sahf
push
push
jmp
adc
stos
adc
adc
lods
pcmpgtw
scas
adc
mov
imul
mov
insb
mov
cltd
lods
mov
lods
lods
scas
movsb
movsb
mov
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
jmp
movsl
mov
call
xchg
decl
test
xchg
jbe
fwait
jno
fwait
bound
call
sub
decl
adc
or
call
add
lcall
jmp
sbb
mov
outsl
pushl
push
jo
mov
and
and
shll
mov
xchg
scas
mov
lods
scas
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
mov
lcall
mov
test
jmp
stos
test
cmpsl
test
lcall
decl
jno
mov
imul
sub
mov
pop
incl
add
incl
add
mov
push
decl
add
lcall
ljmp
push
outsl
pushl
sub
mov
sub
ret
sub
lds
dec
das
jg
enter
mov
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
jmp
test
lods
ljmp
mov
scas
scas
lods
jmp
mov
xchg
incl
or
incl
add
push
incl
push
incl
add
popl
push
call
add
lahf
add
add
lods
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsb
ljmp
popf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
mov
jo
ret
cmp
int
call
inc
mov
rorl
call
dec
xchg
call
dec
xchg
fisttpl
fisttpl
fsts
call
xchg
mov
mov
movsb
movsb
movsb
arpl
mov
add
add
add
fwait
cwtl
cltd
add
dec
adc
jl
lahf
mov
lcall
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
xchg
sbb
mov
pop
decl
push
call
add
sahf
add
mov
add
test
popa
pushl
es
into
dec
mov
aad
xchg
call
push
cltd
fistl
fistl
fistps
ficoms
jmp
pop
lahf
jmp
pop
mov
fadds
ret
mov
mov
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jns
sahf
lcall
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
and
xchg
and
call
and
xchg
sbb
nop
add
xchg
add
fwait
add
mov
add
lods
add
mov
data16
mov
xor
fcomps
jmp
arpl
jecxz
cmpsb
jmp
cmpsl
call
push
cmpsl
call
test
mov
cmpsl
test
lahf
mov
sahf
add
inc
aas
adc
jb
fwait
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
cltd
xor
cltd
outsl
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
call
inc
nop
fsubrl
jmp
jo
jmp
outsl
stos
jmp
jo
jmp
jne
in
jae
out
je
in
jbe
out
je
jmp
mov
mov
cmpsl
test
mov
sahf
sahf
add
add
insb
outsb
js
mov
popf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
lahf
aaa
jne
sahf
cmp
sahf
xor
fwait
push
call
pop
lcall
add
add
mov
popa
pushl
add
leave
sbb
fistl
in
mov
ljmp
jmp
mov
out
cmpb
lock
push
test
call
mov
mov
test
cmpsl
popf
popf
sahf
daa
sahf
lahf
lahf
add
add
add
pusha
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
sahf
outsb
mov
cltd
cmp
movsb
inc
jge
mov
cmp
fwait
pop
arpl
xchg
add
sahf
add
add
stos
add
lods
add
add
add
les
imul
fisubs
jmp
mov
push
mov
push
xchg
ret
xchg
ret
xchg
push
nop
xchg
mov
out
nop
sar
mov
inc
ret
stos
lods
stos
mov
popf
pushf
xor
pushf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
sarb
ret
mov
jge
lcall
cmp
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
call
xchg
ret
push
cltd
push
lcall
negb
lret
popf
lret
cli
sahf
int
cli
popf
int3
cld
cltd
lret
push
xchg
ret
fidivrs
cli
mov
mov
lahf
mov
nop
add
add
add
cmp
or
cmp
outsb
push
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
ret
mov
leave
inc
mov
mov
ljmp
xchg
movsl
sub
cltd
push
pop
lcall
add
lods
add
mov
arpl
mov
add
enter
rorl
jne
fiadds
out
mov
push
movsb
int3
push
movsb
int
clc
cmpsb
iret
cli
test
iret
cli
test
test
sar
std
cmpsl
iret
push
sahf
mov
int
mov
mov
lahf
lahf
lahf
dec
xchg
xchg
xchg
add
cltd
fwait
add
add
add
xor
add
sub
or
bound
pop
xlat
jae
jno
mov
sarb
mov
ret
ret
ret
ret
leave
enter
ret
xchg
cmpsb
jmp
mov
scas
dec
test
lahf
sbb
popf
add
jmp
arpl
mov
mov
add
int
outsl
call
add
ficoms
jnp
out
pop
cmpsb
push
lahf
lret
cli
lods
sar
sti
mov
cli
mov
sti
mov
cld
mov
std
mov
mov
mov
std
mov
cld
mov
push
movsl
jmp
mov
call
lret
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
sbb
outsb
jo
mov
fcom
jmp
xlat
not
rcl
std
lret
int3
int
leave
lret
lret
dec
lret
leave
dec
lret
lret
leave
mov
scas
jmp
push
mov
stos
cmp
jmp
add
add
mov
mov
add
roll
outsl
call
add
add
jmp
jb
sti
lods
sar
std
mov
fcos
cld
mov
fcos
std
mov
xlat
mov
fdivr
mov
fdivr
stc
mov
call
leave
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
leave
movl
ljmp
loop
loop
fucom
xlat
cli
fcom
std
into
iret
into
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
fldl
jne
jecxz
jbe
in
xor
cld
mov
loope
inc
loope
std
inc
loopne
inc
fdivrp
std
fdivrp
dec
fdivrp
std
leave
dec
fdivrp
dec
loope
cli
mov
leave
call
leave
iret
mov
mov
xchg
adc
add
add
std
add
incb
incb
repz
or
out
jmp
in
in
in
sub
out
in
dec
ljmp
xchg
call
out
aad
fstp
jmp
mov
xchg
cmpsb
cmp
movsl
push
jmp
ljmp
add
mov
add
into
add
fadds
jb
fiadds
jbe
call
inc
popf
sti
mov
in
cld
lret
in
dec
out
dec
in
dec
loop
dec
loope
dec
loopne
call
in
call
in
shl
shl
sti
in
mov
inc
ret
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
lcall
std
std
add
std
add
stc
testb
repz
add
repz
out
lock
in
lock
out
in
pop
loopne
loope
les
sti
lahf
es
sahf
push
pop
jmp
pusha
pushl
add
leave
add
rolb
jno
flds
jne
jecxz
jns
jmp
jl
cmc
pop
stos
cli
mov
shl
cld
shl
shr
call
call
call
out
call
call
fucomi
fucompp
dec
loop
hlt
jmp
aad
dec
lret
test
xchg
xchg
and
cwtl
xchg
add
cli
add
std
stc
add
cld
cli
add
cmc
hlt
or
aam
mov
jb
negb
add
cmpsl
add
scas
add
mov
add
lret
call
add
fldl
ja
out
js
out
sbb
stc
jbe
cli
ret
loopne
std
xlat
call
fucomi
fucomi
std
fldpi
fucomi
fucomp
fsubr
fsubrp
fucomip
fsubrp
aam
push
aad
out
iret
iret
sar
lods
stos
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
mov
loopne
add
leave
sbb
lods
jge
repnz
pop
lcallw
add
mov
mov
add
int3
add
aad
jno
loopne
je
ljmp
cld
nop
aam
loopne
fsubr
fldl2t
fldpi
jmp
aam
cli
shl
cld
iret
loope
stc
iret
clc
int3
fdivr
test
out
mov
fcom
fdivr
mov
mov
lcall
add
add
add
aad
ror
adc
scas
mov
lcall
add
mov
arpl
mov
add
iret
add
xlat
add
loope
jp
jmp
aaa
xchg
sti
xchg
enter
loopne
cli
lret
loop
cld
stc
rcr
cmc
mov
sar
repnz
iret
out
mov
lret
jmp
ret
call
shl
jmp
loopne
in
mov
mov
xchg
add
add
add
int
mov
sarl
lahf
xor
jmp
add
mov
gs
mov
add
into
pop
jb
rorl
jne
ficoml
jns
loopne
cmp
ljmp
call
scas
std
loop
cld
loopne
ret
cli
enter
leave
ljmp
into
into
shl
aad
out
loopne
in
in
test
in
out
popf
ljmp
push
lods
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
ret
ret
popf
stos
aam
dec
jg
popf
sbb
cmpsb
sbb
scas
es
mov
js
mov
inc
xchg
ret
push
mov
lret
gs
test
mov
sarl
rcl
mov
lret
rcl
int
aad
shll
rcl
jg
jb
fnstsw
gs
in
out
call
xor
div
cmc
and
lock
fcmovnu
or
mov
int3
add
add
add
mov
roll
mov
stos
xchg
lock
sbbl
sarb
test
mov
mov
cmpsl
mov
enter
int3
jp
into
shlb
ror
push
rcl
rorl
xlat
inc
rcl
xor
fcmovnu
daa
xlat
sbb
adc
in
push
in
call
repnz
add
sti
testb
std
cld
add
incl
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
leave
xor
int
daa
lret
rcl
and
aad
sbb
rcll
rcl
rorl
rcl
push
rcr
fadds
add
in
add
jmp
add
xlat
aad
std
std
add
mov
add
rol
ret
sub
mov
mov
push
rol
or
leave
movb
leave
movl
lret
rolb
rcl
add
aam
aam
aad
xlat
aad
add
fsub
add
fildl
loopne
loop
fiadds
in
out
icebp
lock
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
mov
mov
mov
stos
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
scas
mov
adc
mov
aam
iret
into
jmp
rcl
cmc
rcl
aam
iret
ror
cli
int
int3
stc
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
iret
xlat
aad
call
xlat
xlat
call
ror
dec
int
dec
lret
rol
mov
mov
lods
stos
stos
icebp
cwtl
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
je
jne
fs
inc
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
call
rcl
call
aam
dec
lret
mov
sar
mov
ljmp
sahf
sahf
xchg
cwtl
xchg
jmp
jno
xchg
pop
push
adc
xor
add
add
add
add
addl
subl
imul
pop
pop
movsb
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
ret
mov
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
cltd
cltd
cltd
out
addb
wrmsr
add
add
add
add
add
pop
fwait
lcall
fwait
cwtl
cwtl
fcoml
addb
jl
jge
jns
js
jnp
jns
jp
jns
jae
jae
push
push
push
cmp
jae
popf
popf
pushf
mov
scas
scas
repz
lods
lods
sti
lods
lods
scas
std
test
cmpsl
std
pushf
sahf
popf
call
test
call
mov
lods
jmp
lods
lods
leave
cmpsb
cmpsb
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
outsb
outsb
pop
nop
mov
mov
xchg
std
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
lea
call
sahf
popf
ljmp
stos
mov
mov
scas
mov
mov
mov
cmpsb
mov
addl
add
add
pop
pusha
pop
or
scas
mov
cmpsb
lahf
movsb
decl
lea
call
popf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
push
push
outsl
imul
jg
subl
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
lods
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cwtl
cwtl
cltd
cwtl
fwait
cltd
pushf
lcall
xchg
cltd
jmp
xchg
xchg
aam
mov
nop
jbe
notb
pop
cmp
dec
jl
mov
xor
je
mov
outsl
ljmp
sbb
mov
mov
mov
scas
mov
movsl
mov
add
add
add
pop
popa
pusha
or
mov
in
movsl
test
cltd
xchg
cwtl
lcall
mov
mov
decl
addl
xchg
jno
cld
cwtl
pusha
cmp
dec
js
nop
cmp
nop
daa
push
call
punpckldq
cmpsl
pop
ljmp
pushl
sbb
mov
and
mov
stos
mov
scas
scas
lods
xchg
sahf
popf
popf
adc
add
add
pusha
popa
pusha
or
lods
mov
stos
mov
mov
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
push
mov
arpl
mov
pusha
incl
or
mov
push
call
add
cmpsb
or
pushl
jp
mov
jg,pn
xor
leave
xor
inc
stos
mov
scas
scas
mov
test
test
pop
pusha
pop
or
movsl
test
cmpsl
mov
cmpsl
pushl
mov
pushl
cwtl
mov
decl
push
pop
incl
push
push
decl
add
xchg
add
lahf
add
add
mov
insb
inc
ss
inc
mov
into
inc
call
inc
nop
call
inc
xchg
fimull
call
arpl
stc
mov
mov
movsb
movsl
movsl
daa
std
std
add
add
add
popa
or
popf
mov
ljmp
mov
mov
mov
mov
movsb
test
call
sbb
adc
pop
decl
add
lahf
add
cmpsl
add
scas
add
and
rorb
fsts
fcompl
fistps
loopne
mov
fildll
dec
test
cld
mov
mov
cmpsb
lods
cmpsb
xor
add
add
dec
pop
jl
jnp
fwait
xchg
lcall
lods
scas
pushl
mov
mov
lcall
cs
lcall
and
xchg
push
pop
call
add
test
pop
pushl
push
push
fisubl
jmp
insl
stos
jmp
outsb
stos
call
jb
in
jb
call
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
insl
outsb
push
mov
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
xchg
or
fwait
add
movsb
add
lods
add
mov
inc
or
call
inc
xchg
jmp
jp
ljmp
push
test
push
mov
fldcw
mov
push
lcall
add
sub
push
push
dec
pop
pushw
loopne
mov
mov
sarb
mov
xchg
test
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
cwtl
cwtl
stc
cltd
lret
lcall
jecxz
inc
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
inc
pushl
pop
mov
stos
dec
test
mov
add
popa
pushl
add
lret
fldenv
cmp
jnp
push
mov
sar
cli
test
sar
sti
lods
sar
cld
stos
sar
cli
test
jmp
mov
inc
rol
test
popf
pushf
or
add
add
push
push
dec
aaa
jb
jae
test
int
out
iret
lret
cmc
leave
int3
int3
sti
lret
std
enter
mov
mov
stos
bound
jmp
add
mov
gs
add
iret
add
flds
jmp
xchg
std
mov
cld
mov
fdivr
cld
mov
xlat
std
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
or
aam
dec
jecxz
loope
fcmovnu
fcmovnb
fcmovnu
aad
fsubr
mov
addr16
cmpsl
je,pn
movsb
pop
pop
pushl
add
leave
add
add
or
dec
mov
cld
ret
loopne
inc
loope
std
loope
dec
loopne
dec
fdivrp
dec
loope
sti
out
mov
lret
divb
popf
sbb
add
add
std
add
std
add
ljmp
jmp
in
xor
loope
jecxz
mov
mov
mov
add
mov
inc
add
into
add
faddl
jne
ljmp
cld
ret
std
shl
call
out
call
in
aam
call
call
std
shl
push
xlat
fmul
sar
mov
mov
add
incl
std
std
add
incb
aam
aam
mov
pop
xchg
lahf
or
test
pusha
pushl
add
roll
jno
loopne
jne
in
and
std
shl
std
fucompp
std
fsubr
cld
fld1
cld
fsubr
cld
fsubr
std
xlat
out
cld
shl
push
enter
iret
aad
mov
sahf
popf
das
add
add
into
int
or
arpl
ljmp
add
movl
jb
loope
jns
out
xor
sti
lret
loope
clc
lret
test
repnz
aad
icebp
ret
lock
sar
in
in
aad
in
shl
in
fucomp
enter
test
stos
das
incb
push
mov
je
or
mov
imul
sbb
int3
and
sub
pushf
clc
in
mov
out
loop
lret
jmp
fidivrs
lret
sarl
jecxz
fcompl
out
jmp
rorb
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
fidivrl
andb
int
mov
shll
jge
int
ror
iret
pop
rcl
iret
dec
xlat
cmp
das
jecxz
fisubs
jecxz
icebp
adc
jmp
or
std
incl
std
std
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
leave
and
aam
pop
mov
rcl
or
fnstsw
or
int3
into
add
incl
std
std
add
add
add
int3
into
pextrw
or
int3
int3
int
stos
lods
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
cltd
add
rol
mov
enter
mov
ret
ret
mov
scas
insb
lods
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
iret
iret
std
mov
mov
sarl
gs
sbb
add
add
add
add
add
add
add
add
jno
jb
addr16
inc
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
int
rcl
aad
into
int
inc
mov
mov
scas
scas
lcall
mov
push
add
add
add
add
je
jae
test
adc
outsb
outsl
ret
popa
mov
push
outsb
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
and
add
pop
add
add
jae
jae
fwait
xchg
pushf
mov
test
mov
xchg
test
addl
push
push
push
inc
mov
popf
into
mov
lahf
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
popf
popf
popf
cmc
lcall
mov
push
push
imul
jle
mov
xchg
notl
mov
mov
fwait
pushl
jo
mov
scas
lods
push
stos
lods
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
cltd
cltd
call
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
nop
fs
push
jnp
fwait
inc
jne
movsl
ss
scas
sub
and
mov
outsb
pushl
popf
lods
lock
mov
imul
int
add
add
test
pop
scas
movsb
stos
test
popf
pushf
lahf
jmp
movsl
call
jl
lea
popl
decb
popa
call
or
mov
push
outsb
pushl
and
inc
sub
les
xchg
rcrb
subl
jae
push
mov
movsb
test
test
scas
scas
pushl
xchg
decl
or
mov
decl
add
mov
adc
shll
lret
call
inc
mov
aam
call
push
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
movsb
push
add
add
push
push
test
lahf
movsb
cld
scas
lods
scas
pushl
mov
movsl
call
pop
decl
pop
push
call
add
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsl
call
fwait
mov
mov
mov
cmpsl
cmpsl
cmpsl
pop
add
add
arpl
adc
popf
lcall
mov
mov
scas
lcall
jb
lcall
lcall
add
mov
addr16
xor
jmp
outsl
stos
jmp
jl
push
jge
push
jle
ficompl
mov
and
add
add
adc
imul
mov
mov
mov
ret
sar
mov
jmp
inc
jl
sahf
and
popf
add
pusha
pushl
pop
insb
fisttpl
in
mov
push
xchg
push
xchg
enter
enter
inc
mov
movsl
sub
aas
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
gs
add
adc
in
outsb
scas
push
test
stc
stos
sar
cli
scas
sar
std
scas
sar
cld
lods
sar
ljmp
fldenv
incl
xor
xor
inc
scas
mov
mov
aad
mov
aam
rcl
out
lret
leave
lret
xchg
jmp
add
les
push
aam
jb
call
mov
mov
fdivr
cld
ret
cld
ret
cld
rcr
icebp
mov
ret
in
test
addb
add
add
in
or
call
out
outsb
fcomp
movsb
es
ljmp
add
int3
add
add
out
aaa
xchg
cli
mov
std
iret
out
dec
out
shl
std
aam
std
shl
push
leave
fdivr
aam
into
in
lods
scas
lods
popa
addb
add
incb
std
std
std
push
int3
int
sub
sahf
sbb
stos
add
mov
add
jecxz
js
cmc
push
cmpsl
std
loopne
cld
call
cld
shl
cld
shl
cli
shl
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
mov
mov
cld
scas
add
imul
or
jg
ljmp
cli
in
mov
into
bnd
ret
out
aam
jmp
scas
fwait
lcall
mov
sahf
stos
xchg
dec
and
push
mov
shll
ja
mov
fdivrs
adc
int3
outsl
fmul
into
pop
fst
aad
in
loope
call
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
cs
mov
lret
sbb
bswap
int3
int
aam
aad
incb
addl
add
stos
incb
rol
add
std
incb
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
inc
push
mov
lods
negb
mov
jge
push
dec
lcall
dec
stos
mov
xchg
es
pop
adc
dec
mov
sub
mov
mov
sub
jne
and
cmpsb
or
out
es
xchg
movsb
cmp
cmc
or
mov
shlb
mov
inc
xchg
jge
test
sub
pop
sbb
sbb
cmpsl
or
inc
dec
mov
pushf
std
pop
jp
packuswb
hlt
xchg
shlb
cmp
enter
outsb
jl
cmp
jb
inc
rorl
rolb
into
cmpsl
inc
push
sub
add
xor
push
push
cmp
andb
push
sahf
inc
sbb
sbb
outsb
or
jns
addb
lea
hlt
and
cltd
scas
ja
sub
jb
aaa
xchg
xorb
repnz
jmp
stc
push
sti
xchg
mov
sub
std
lock
push
jbe
popf
sti
std
dec
gs
or
fsubl
in
pushf
nop
test
rorb
or
fnstsw
lret
lret
xchg
xchg
inc
add
imul
in
jp
jmp
or
inc
into
xchg
xchg
pop
mov
out
pop
ds
xchg
leave
aaa
fwait
addr16
mov
sti
lahf
xchg
cmp
xlat
jae
sub
lret
mov
xor
or
add
and
arpl
into
bound
add
or
test
cmp
xchg
jae
fidivl
enter
and
push
lcall
movsb
stc
pop
movl
mov
mov
out
fisttps
je
or
push
jle
imul
xchg
cmp
out
push
psllq
movsl
sub
insl
repnz
fs
movsl
sub
imul
js
in
inc
cld
inc
in
mov
jmp
inc
push
enter
xor
rolb
cmpsb
addr16
mov
push
mov
cld
repz
bound
stos
imul
rolb
or
rorl
mov
mov
lret
enter
sub
cli
push
or
test
sub
mov
mov
gs
pop
jae
jmp
test
dec
inc
mov
enter
movsb
push
cmp
out
popa
xacquire
xchg
sbb
sbb
pushf
js
aad
dec
mov
movsl
pop
clc
inc
or
lret
mov
pop
test
adc
mov
push
stos
bound
push
mov
rorb
pop
stos
push
and
addr16
push
fwait
or
sbb
lret
jae
js
xadd
aam
int
mov
mov
aad
mov
ljmp
pop
lret
dec
dec
adc
mov
fidivrs
push
rclb
stos
jmp
adcb
not
fidivrl
cltd
dec
or
orb
fdivrl
push
jecxz
rol
sbb
ljmp
fsub
adc
mov
fildll
fmul
pop
std
jge
sbb
pop
clc
sbb
out
shlb
push
mov
adc
xchg
ret
xchg
add
xchg
cmp
decb
ret
popf
xlat
xchg
push
scas
iret
aam
adc
cmp
xor
gs
jecxz
scas
ss
clc
push
cmp
ret
imul
jmp
lret
je
movsl
xor
test
or
jmp
xchg
push
out
lahf
inc
dec
pop
and
negb
mov
insl
mov
std
dec
sbb
or
push
inc
sbb
movsl
inc
sbb
and
mov
lods
inc
out
scas
frstor
std
sbb
add
int3
bound
aam
insb
mov
sti
pop
jp
jae
int
std
sub
cltd
jmp
call
das
pop
dec
lods
mov
xchg
cmpsb
ret
jnp
shrb
xchg
stc
jne
gs
das
adc
test
cmpsb
pop
xchg
mov
daa
or
xchg
mov
mov
repz
xlat
int3
cli
mov
pop
push
fadds
inc
inc
add
push
mov
lcall
jns
jbe
lahf
mov
mov
jecxz
push
xor
mov
xchg
insb
mov
aas
out
pop
cmp
test
test
push
inc
inc
roll
out
inc
inc
test
dec
xchg
sub
loopne
fs
movsl
mov
out
pop
shl
dec
sub
dec
dec
fisubs
or
jmp
loop
push
jmp
inc
stos
jp
xchg
andb
shll
mov
inc
aaa
mov
cmp
pop
ds
cmp
cmpsl
or
out
insl
cmpsl
jnp
fisttpll
xchg
lods
int3
push
aam
je
adc
loope
btc
cmp
adc
inc
fsubl
inc
cld
lods
roll
cli
fiaddl
cltd
push
enter
mov
pop
or
push
and
mov
sti
adc
sbb
les
pop
in
insb
or
in
lods
or
ss
cmp
rclb
mov
pop
out
adc
jne
arpl
lret
adcl
adc
dec
pop
movsb
or
aad
shlb
imulb
and
inc
dec
fnstcw
xchg
notl
imul
jns
adc
mov
cmp
cmp
inc
sub
cmp
outsl
out
dec
in
sbb
xchg
pop
clc
popaw
fnstcw
out
lock
push
clc
add
xchg
unpckhps
js
mov
pop
outsb
movsb
xchg
test
dec
adc
popf
scas
pop
and
jne
outsl
xor
insl
sahf
js
fldt
xchg
das
dec
pop
xlat
cmp
pop
sbb
js
addr16
mov
fs
lahf
iret
push
jo
orl
fadds
push
out
out
adc
int
clc
movsb
and
psllq
adc
dec
sbb
dec
dec
mov
das
xchg
mov
jle
out
push
test
daa
pop
dec
repz
out
fnstcw
cs
pop
push
mov
adc
lret
jmp
ss
jg
test
jae
fwait
decb
sub
pop
aas
mov
push
movsb
loopne
movswl
pop
ret
std
jae
enter
fdiv
loopne
filds
jecxz
jmp
pusha
outsb
call
imul
out
lcall
clc
stos
cmp
in
jg
movswl
pop
fildl
add
jecxz
lret
fildll
mov
pop
out
aaa
mov
sti
cmpsl
sti
out
push
fists
aaa
jecxz
cmpsl
popl
aas
dec
and
leave
dec
je
pop
scas
sar
cmp
aad
iret
out
imul
fildl
xchg
fimuls
outsb
int
in
add
call
jb
cltd
std
xchg
inc
sbb
pop
loopne
int3
outsb
pop
sub
es
leave
sbb
mov
push
fstps
cmp
cmp
push
aad
mov
popf
or
in
mov
mov
enter
jge
xchg
cmpl
jae
sbb
cli
xchg
pop
jo
je
jp
scas
stos
ret
sti
xchg
cmc
int3
ss
push
sbb
push
cmp
insb
jno
mov
lea
mov
loopne
sub
push
push
in
inc
xor
or
mov
jmp
dec
inc
lds
sahf
mulb
xchg
pop
es
jge
lret
lahf
or
pop
icebp
es
mov
inc
mov
and
or
cs
pop
lods
lods
inc
filds
lret
bound
rcrl
add
outsb
inc
sbbb
jno
rcll
es
mov
jmp
sub
popf
jns
cmc
and
pop
inc
inc
fdivrs
push
mov
cltd
pop
test
cmp
popa
push
nop
push
fstpt
adcb
xchg
jno
les
es
in
mov
call
xor
jo
mov
frstor
mov
fisubrl
inc
sub
shrb
mov
lret
stos
adc
xchg
cld
xor
sub
dec
dec
out
or
add
pop
inc
fimull
mov
clc
loop
stos
inc
js
adcb
cltd
enter
popf
xor
in
data16
sub
rcr
mov
push
loopne
ljmp
cmpl
push
mov
dec
out
lods
in
in
loope
sub
ja
fnstsw
fwait
and
pushf
in
mov
ret
push
fwait
add
adc
sub
sub
xor
scas
popa
clc
fistps
dec
out
add
add
push
sahf
xor
mulb
stos
inc
dec
stc
fidivl
imul
popf
dec
clc
jle
out
lock
push
lods
rclb
add
lret
and
xchg
inc
push
jmp
out
jo
or
cmp
mov
lea
lods
inc
insl
scas
pushf
xor
mov
popa
rolb
push
xor
call
jo
xor
popf
gs
mov
xchg
mov
adc
enter
xlat
insb
sub
pop
lea
mov
adc
inc
ror
bound
fs
xchg
and
adcb
pop
ss
movsl
cmpsl
repnz
cld
or
int
adc
loopne
or
jae
ss
xchg
ss
out
movlps
loope
cltd
mov
imul
fldcw
aas
insb
stos
inc
xchg
pusha
push
mov
or
sbbl
cwtl
test
testl
scas
inc
mov
setl
aas
dec
ds
cmp
rolb
cmp
call
cwtl
testb
add
push
cmp
sbb
jns
fbstp
lcall
dec
sub
adc
rclb
dec
shl
ja
push
and
fcomps
js
jo
lcall
or
sbb
dec
nop
daa
jnp
stc
nop
adc
lds
dec
loop
dec
aam
jge
adc
popa
fbstp
cmp
lahf
insl
jmp
ret
cld
cs
jl
mov
push
jmp
inc
mov
lods
inc
test
mov
ret
addr16
mov
mov
jmp
insl
ljmp
insl
cld
pop
out
xor
mov
add
mov
or
movsl
pop
outsl
push
mov
mov
jne
fxch
pusha
lret
pop
mov
jl
insl
fisubs
mov
pop
call
dec
jl
cmpsb
cmp
movsb
jecxz
push
cmp
gs
push
popf
test
scas
inc
addr16
movsb
cmp
fsub
jns
aas
push
jmp
loopne
les
add
mov
bound
mov
int
imul
aas
sub
jge
ds
fbstp
fbstp
pop
pop
icebp
dec
std
mov
and
xor
mov
inc
pop
and
inc
fiadds
test
lret
insl
inc
cmp
mov
add
pop
inc
loopne
and
pusha
or
in
xlat
outsb
sbb
and
into
cltd
inc
fisttpll
rclb
scas
or
xchg
and
xor
sbbl
push
fidivs
lods
aad
ljmp
push
fnstcw
dec
push
and
std
xchg
cmpsl
ds
shrl
jmp
cmp
and
xorb
mov
sub
sbbb
pop
dec
inc
sbb
pop
daa
xor
bound
imul
nop
sbb
sub
adc
stos
mov
and
divb
imul
pop
cmp
dec
icebp
jmp
xchg
popa
jg
sub
repz
out
xchg
cmpsb
cmpsl
inc
fstpl
sti
sbb
lods
addb
mov
loope
pushf
adc
adc
mov
in
pushf
adc
sub
js
and
or
test
fimuls
sub
loopne
push
stc
inc
std
dec
out
fs
loop
lret
pop
hlt
cli
jbe
test
push
ljmp
pop
hlt
xchg
sbb
aaa
aaa
into
push
clc
and
mov
inc
clc
xor
fs
push
push
jb
inc
mov
xchg
out
push
mov
fistpll
jnp
addb
in
call
pop
stos
and
rclb
mov
cmpsb
and
push
call
xor
push
mov
in
ljmp
daa
pop
lahf
pop
repnz
cmp
cmp
inc
add
aad
xchg
punpckhdq
dec
mov
inc
sub
loopne
decb
into
cmp
xchg
sub
jle
mov
outsb
nop
daa
pusha
dec
xchg
sub
and
pop
adc
in
sub
rclb
jg
lods
xchg
adc
mov
loopne
fcmovbe
cmpsb
cmp
in
cld
xchg
addb
adc
jne
or
call
mov
fnstcw
cmp
stos
push
jmp
orl
inc
fsubl
and
sti
leave
hlt
mov
sbb
fidivl
mov
int3
and
xchg
xchg
inc
gs
xor
ds
push
hlt
mov
jno
push
stos
inc
pop
hlt
lret
bound
mov
ret
pop
ljmp
mov
xchg
ss
xor
leave
and
adc
aaa
fsubrp
test
lea
test
imul
mov
pop
mov
sarl
pop
les
xchg
aad
add
lds
mov
xchg
pop
push
call
sub
dec
out
dec
xlat
outsb
cmp
sub
inc
dec
insb
aaa
into
xchg
jo
test
ss
insb
adcb
or
test
inc
fldenv
cmpsl
in
test
enter
cmp
xchg
lods
fwait
insl
ror
cld
xchg
mov
loopne
xchg
rorb
xor
and
in
ja
outsl
push
cmp
jge
or
in
test
mov
xchg
sub
push
cmpsb
cmp
scas
fs
ljmp
and
xor
dec
loopne
sbb
mov
pop
mov
scas
pop
mov
scas
popf
xor
inc
adc
xor
popa
push
montmul
cmpsb
inc
add
aas
push
add
pop
push
mov
sti
lret
or
sti
xchg
in
mov
dec
and
shlb
das
scas
push
pop
inc
dec
add
and
mov
ret
jmp
adc
outsl
push
and
sub
int3
outsl
push
repnz
jg
cmp
dec
in
insb
fwait
xor
jno,pn
pop
jle
outsl
repnz
ss
xchg
jge
add
mov
pop
repz
test
mov
mov
jnp
jg
fsubl
dec
and
dec
push
jle
inc
outsl
or
addb
repz
xchg
sub
xchg
mov
sbb
adc
adc
insl
int3
and
aas
faddp
pop
rcr
insl
add
icebp
or
int3
add
sub
inc
push
out
jge
jmp
add
mov
movsb
cmp
push
adc
sub
bound
xchg
push
push
jmp
cli
es
push
sbb
jge
add
lret
pushf
xor
jmp
sar
sahf
xor
lock
es
lcall
pop
jp
bound
dec
or
mov
pop
mov
js
or
mov
or
sub
cmc
jg
push
xchg
mov
sbbb
or
insl
clc
scas
inc
jmp
pop
stos
mov
jle
or
jnp
sub
lret
test
clc
push
ljmp
loope
or
sbb
jge
mov
gs
xlat
int
xchg
aaa
fwait
loope
arpl
lock
mov
push
neg
xlat
sub
cmpsb
insl
mov
mov
pop
mov
push
mov
imul
inc
push
cmp
jbe
stos
adc
fs
pop
das
in
es
loop
mov
push
cld
lahf
or
dec
shll
mov
adc
dec
negl
jb
push
arpl
rcrb
je
inc
adc
sub
or
out
cmpsl
mov
stos
inc
mov
jne
and
or
xchg
fldcw
test
sub
jne
cmp
aad
pop
enter
xchg
mov
rclb
in
pop
mov
out
push
add
mov
leave
pop
cmpsl
addr16
inc
or
xor
into
and
pop
push
movsl
lock
in
movsl
xor
mov
stc
pop
mov
add
xchg
dec
movsl
xor
pop
pop
ds
mov
movsl
xor
push
cli
pop
xor
ljmp
add
mov
cli
pop
fsubr
call
xor
xlat
movsl
xor
outsb
in
push
push
nop
sbb
imul
clc
mov
ficoms
lods
ja
xor
lcall
enter
cmp
orb
xchg
sub
lods
mov
sbb
mov
hlt
add
cltd
test
fisttpl
loop
int3
inc
lahf
xchg
push
into
mov
lods
outsl
aam
fs
and
cmpb
ficoms
mov
shl
mov
fistpll
cmpb
mov
fdivl
lods
test
fisubs
cli
xchg
pop
jmp
scas
stos
push
rclb
ss
movsl
fidivs
push
push
in
dec
clc
cld
xchg
sub
or
les
iret
into
pop
mov
dec
out
push
in
and
gs
inc
je
jae
in
xor
xchg
sub
adc
mov
sbb
xchg
cmp
gs
mov
fsubp
in
cmpl
or
iret
cli
pushf
popa
jns
pop
mov
imul
jge
lret
mov
mov
pop
lahf
jg
inc
scas
mov
lret
lret
gs
pushf
sub
dec
ljmp
test
mov
int3
xchg
call
mov
cs
sub
in
add
lcall
and
or
adc
jl
xor
cmp
xor
movsb
mov
je
clc
insl
sub
xchg
outsb
dec
hlt
mov
sbb
iret
loope
into
adc
xor
and
in
xchg
mov
fsts
and
sub
test
outsb
or
mov
pop
rcl
addb
or
addr16
mov
mov
fidivrl
aad
push
fs
dec
sub
repz
jo
xchg
rol
or
repnz
mov
adc
rep
inc
and
inc
leave
pusha
js
mov
cli
lret
out
fucomi
data16
sbb
fidivl
xor
mov
mov
fimull
xor
stos
inc
pop
push
xchg
sub
movsl
xor
iret
or
add
lea
and
inc
push
dec
mov
jge
or
mov
mov
adc
out
into
dec
xchg
inc
daa
int3
fnsave
mov
pop
mov
and
and
pushf
aam
repnz
or
mov
inc
sti
dec
loop
fstl
xchg
stos
push
sbb
decl
xchg
xchg
mov
push
jns
rcr
dec
mov
mov
mov
xor
jbe
out
and
jecxz
data16
cmp
shlb
jne
inc
cs
pop
sti
add
in
mov
cmp
and
iret
lret
scas
dec
subb
push
imul
sbb
shr
imul
jnp
and
inc
int3
rclb
mov
pop
push
add
es
cmp
dec
jl
and
jb
adc
push
or
xchg
pop
or
das
jle
cwtl
and
jb
test
pop
sub
test
cli
jmp
aad
jg
mov
mov
enter
pop
pop
jbe
lcall
test
mov
xchg
xor
push
push
pop
call
outsb
xor
testb
movsl
push
lods
aad
push
mov
cmc
ss
and
dec
push
jmp
lret
stc
lcall
dec
pause
sub
outsb
sahf
xor
mov
lds
fbstp
call
xchg
xor
sbb
fistl
mov
pop
bnd
jp
inc
popf
js
into
gs
xor
mov
push
call
or
bound
xchg
leave
pusha
enter
mov
cld
xchg
sbb
or
xor
dec
jecxz
xor
pushf
xchg
dec
ss
out
lcall
out
fldl
jge
cmp
xchg
gs
je
sbbb
xchg
data16
sub
add
sub
cmpsl
pop
jne
sahf
cmpsb
inc
dec
lahf
cmp
pusha
mov
mov
push
lods
lods
adc
es
stc
inc
vunpcklps
test
repnz
shlb
lock
fndisi(8087
int3
dec
in
je
or
xor
mov
xor
int
jbe
jg
aas
jge
mov
adcb
cs
nop
mov
mov
push
lods
lea
aam
cmp
sahf
lods
add
cmp
jmp
cmpsl
fisubl
cmp
xchg
mov
xlat
inc
push
sub
mov
xor
repnz
repnz
xor
push
xor
test
add
cmp
xlat
mov
lds
out
jbe
mov
sbb
mov
out
xchg
xor
int3
inc
pop
sub
data16
ja
push
mov
in
sti
insb
int3
popa
inc
fnstcw
rorl
pop
aam
scas
xlat
push
pop
adc
inc
mov
ja
arpl
jle
arpl
js
dec
mov
jbe
pop
hlt
sub
dec
sbb
cltd
into
and
sarl
pop
jmp
mov
popf
push
jno
lret
xor
push
pop
dec
mov
movsl
dec
dec
push
pushf
idivl
mov
jmp
cmpsl
shll
cltd
loop
leave
mov
enter
sub
repnz
mov
cmp
enter
inc
jmp
int
jne
dec
in
xchg
enter
dec
in
jmp
xsha256
cmpsb
or
dec
jecxz
scas
mov
and
cmp
js
adc
je
push
lret
bound
jl
in
imul
pop
cmp
int
mov
mov
ret
pop
inc
mov
push
jmp
push
jecxz
xchg
aam
lret
subb
hlt
jecxz
or
or
sub
ljmp
pop
repnz
and
xchg
xor
mov
adc
test
fistpll
jmp
cld
and
insb
add
aas
sti
dec
test
mov
pop
lcall
insb
out
xchg
gs
outsb
add
in
lock
lods
push
cltd
adc
stos
imul
dec
in
movsb
call
test
sbb
jnp
daa
mov
add
andb
pop
mov
out
pop
sbb
mov
jns
jge
fidivrl
jecxz
pop
lahf
jne
in
subb
lahf
std
mov
ret
xlat
outsb
iret
adc
lds
mov
sub
leave
pusha
mov
fisttpl
sarb
xor
imul
dec
out
inc
dec
in
cs
mov
pop
and
sahf
lock
stc
loop
lods
inc
xchg
sahf
decb
inc
or
shll
xchg
fs
dec
in
or
test
shlb
loopne
add
or
ss
adc
jecxz
in
push
mov
test
bound
sub
inc
sahf
lahf
xor
sub
jp
out
sub
nop
orb
jnp
aaa
into
rcrb
mov
hlt
adc
nop
adc
lret
bound
scas
imul
fwait
call
fwait
xor
adc
popl
pop
xchg
sub
jmp
movsb
out
test
xchg
es
mov
or
inc
fstpl
fs
pop
jnp
call
jno
mov
mov
adc
mov
xchg
leave
cmc
xor
cmpsb
gs
sub
xchg
test
pop
movsl
jge
push
hlt
fsub
xchg
mov
in
and
inc
push
sbb
mov
push
aas
loope
sbb
sbb
sbb
fcmovb
pop
or
xchg
pop
je
dec
cmpsb
jnp
xchg
dec
in
mov
pop
xor
or
pop
jnp
cld
pop
cmp
testb
repnz
orl
cli
mov
sub
dec
cmp
add
adc
jge
pop
and
cmpsb
add
jp
cltd
inc
fmul
push
das
out
aam
mov
lret
and
cmp
insb
fsubrs
stc
nop
mov
xchg
xor
fidivrl
dec
stos
inc
dec
lcall
pop
insl
sub
jno
pop
fstps
mov
and
cmpsb
dec
mov
cld
pop
ss
mov
out
mov
mov
cmp
jno
lcall
andl
sub
mov
repnz
insl
sbb
outsb
mov
jbe
xor
out
mov
adc
ss
popa
adc
lods
mov
mov
mov
inc
mov
jae
push
rclb
add
mov
push
cli
inc
lock
das
fwait
inc
push
stos
push
outsl
push
inc
lret
test
insl
aam
xor
stos
jbe
jle
pop
cmp
pop
gs
jmp
jl
sub
sbb
sbb
fwait
shrb
inc
and
pop
or
addr16
test
les
mov
fxch
fwait
mov
jg
push
sarb
mov
dec
jmp
insb
push
cli
cld
jg
push
jns
stc
rcll
jne
bound
sub
das
cs
in
lahf
jb
adc
inc
fstps
push
adc
xchg
inc
fldln2
bound
xchg
push
sub
mov
cmpsb
iret
loopne
sub
fdivl
sub
test
lcall
xchg
ljmp
xor
xor
xor
aaa
mov
mov
test
test
mov
sbb
xchg
dec
xchg
cld
mov
inc
xchg
hlt
shlb
popf
xor
insb
inc
outsb
adc
iret
pop
repnz
stos
pop
jge
es
add
cs
jge
in
cwtl
adc
mov
sbb
jg
aad
inc
shll
inc
inc
or
or
cwtl
movsl
jbe
ljmp
aam
les
mov
dec
lret
sbb
daa
rcrb
xor
sub
adc
inc
cltd
or
xor
test
jnp
mov
lahf
xor
or
cmp
imul
and
outsl
lret
arpl
fisubs
pop
and
fadds
mov
int
out
jno
es
std
addl
adc
xchg
dec
mov
pop
pushf
xor
popf
pop
cmp
mov
int3
push
add
lcall
std
inc
das
fdivrl
int
push
fdivrs
dec
jbe
imul
das
sub
pop
stos
xor
movaps
orb
das
fucompp
shl
stos
je
cld
and
idiv
ret
jl
call
icebp
icebp
call
mov
xchg
sahf
out
xchg
mov
popf
add
pusha
stos
fcoml
mov
xchg
testb
mov
out
ficoms
pop
loope
or
aad
sahf
rcrl
daa
pop
clc
xchg
adc
data16
je
jnp
scas
pop
push
mov
jne
cmp
les
into
or
jl
das
mov
fildll
cmp
mov
outsb
incb
dec
and
pushf
xor
dec
cmp
push
pusha
hlt
ljmp
out
xchg
sub
cmpsb
andl
cmp
pusha
test
outsl
and
cmp
pop
mov
fisttps
adc
mov
outsb
mov
sub
fistl
or
and
cld
mov
cmpsb
pop
xchg
hlt
inc
mov
mov
fistl
test
adc
inc
push
inc
testb
xlat
xchg
mov
ret
call
enter
std
ret
out
mov
out
mov
shl
jno
push
sbb
mov
popf
push
in
out
ja
xchg
scas
lods
pslld
fcmovnbe
movsb
push
mov
pushf
or
jne
pop
cmpsl
std
push
test
mov
push
pop
popa
adc
mov
pop
lods
pop
mov
push
int
sbb
test
mov
cmp
push
mov
inc
mov
mov
xchg
mov
loopne
cs
pusha
mov
sbb
pop
repnz
mov
xor
jp
lahf
lods
sbb
jno
sbb
mov
cmp
cwtl
cmpsb
lcall
shl
mov
dec
ljmp
xchg
jno
or
cmc
and
mov
rolb
fbld
leave
sahf
addr16
test
sub
jle
fwait
lods
inc
int
push
popf
cmp
jmp
push
aam
bound
sbb
sbb
push
mov
pusha
inc
nop
outsb
orb
sub
jnp
mov
cmp
adc
xchg
push
movsl
push
mov
xchg
mov
mov
cmp
cli
mov
mov
out
stos
popa
dec
in
ror
test
test
xor
sub
data16
xor
mov
scas
xchg
gs
inc
test
popf
adc
into
mov
jb
in
ss
mov
in
xor
stc
aas
xchg
mov
push
hlt
dec
adcb
int
pop
iret
shrl
lock
and
add
mov
pop
mov
adc
outsl
fldt
lods
outsl
push
movsb
mov
jl
out
sub
int3
rcrl
and
ficoml
int3
cld
dec
cwtl
jecxz
js
xchg
sbb
out
hlt
movsb
add
cli
pop
fnstenv
or
jle,pt
xchg
fwait
xor
cmp
inc
add
dec
nop
sub
xor
std
cli
mov
mov
lea
mov
movsb
stos
fisubrl
outsl
fs
loope
inc
insb
inc
push
leave
in
mov
sub
push
cmp
pop
push
bound
adc
mov
jae
mov
inc
fisubs
pop
push
inc
cld
add
aad
outsb
cmpsl
sbb
pop
push
push
icebp
pushf
jp
push
and
push
cwtl
sub
sub
mov
iret
jg
ja
mov
dec
inc
mov
adc
mov
jbe
cld
stc
add
ficomps
out
fnstenv
cmc
or
xor
inc
ds
imul
and
xchg
adc
or
dec
loop
xchg
sbb
add
fs
cmpsl
stos
add
jge
scas
les
dec
jle
mov
push
dec
mov
add
add
sbbb
lds
or
xchg
daa
les
test
or
pop
mov
fisubs
lcall
out
ret
out
or
jns
pop
in
dec
call
aad
lcall
mov
mov
movsl
inc
fcmovbe
xor
sub
and
xlat
data16
out
lock
stos
mov
pminsw
xor
add
jg
mov
ret
jnp
scas
xchg
test
mov
xchg
fisubrs
stc
jecxz
sbb
cmp
test
adc
jle
cmpb
or
inc
adc
xor
mov
jb
ds
xchg
arpl
mov
ret
pusha
mov
mov
mov
fmul
stos
jno
or
push
add
iret
mov
rorb
and
shlb
aaa
dec
cmp
or
sbb
and
xor
ja
outsb
add
fdivs
mov
dec
or
jbe
xchg
xchg
and
jl
pop
jnp
mov
js
jnp
mov
test
xchg
fisubl
or
orl
jbe
cmp
imul
jns
int
and
jns
cmpb
inc
iret
push
or
or
jge
gs
cld
and
cmp
call
movsl
inc
xor
insb
adc
data16
fiaddl
mov
out
lcall
pop
rclb
jmp
jne
fiaddl
hlt
pop
sub
outsl
mov
sub
fnstcw
mov
int
pop
cmpsb
out
jmp
xor
cltd
push
jnp
cli
jne
inc
ficompl
push
and
out
xchg
data16
test
mov
in
or
sub
push
jg
sbb
nop
push
xlat
sub
mov
and
popf
pushf
mov
mov
dec
pop
lret
mov
int3
mov
lret
loopne
add
outsb
cmp
stos
dec
loopne
loope
shlb
cli
xchg
das
jg
pop
popa
xchg
sbbl
orb
movsb
pushf
das
mov
leave
hlt
xadd
add
dec
lahf
popf
lcall
jecxz
cmp
mov
pop
and
aam
stos
cld
enter
sub
mov
push
mov
int
cwtl
inc
jae
jns
jnp
mov
mov
loopne
ret
lret
pusha
or
decb
and
popa
mov
mov
jmp
andl
inc
push
ja
push
in
movl
jmp
testb
sub
lcall
aam
ss
ret
sbb
mov
add
mov
gs
xchg
mov
push
les
inc
jle
push
test
jnp
lret
xchg
add
xor
inc
fisubs
pop
fwait
clc
mov
and
popa
sub
adc
pop
pop
pushf
inc
jns
adc
aam
push
out
sub
out
mov
popa
dec
push
push
cli
fwait
jb
incb
push
sub
xor
mov
xchg
stc
adc
in
pop
es
jp
dec
mov
out
fwait
mov
mov
insb
fadds
nop/reserved
cld
sbb
mov
icebp
mov
dec
mov
mov
xor
shl
cli
sbbb
mov
dec
repz
jo
add
lods
cwtl
and
push
add
mov
xchg
xor
fadds
lods
into
cmp
xor
sbb
bound
gs
and
and
pop
jg
xchg
pop
js
lods
jns
inc
xchg
mov
mov
lods
xor
pop
cmpsb
jg
jae
inc
push
fcompl
shlb
icebp
outsl
rcrb
sub
cmpsb
gs
fldt
sub
jle
call
insb
sbb
xchg
dec
pop
jge
mov
sarl
mov
cmp
out
fildll
pop
dec
in
dec
aad
fucomi
popa
imul
lods
in
and
sbb
cltd
jnp
mov
in
sbb
aad
insl
mov
int
call
pop
aas
idivl
cmp
shll
insl
jmp
fisttpll
jnp
std
outsb
jbe
mov
cld
xor
popa
or
not
loopne
popl
dec
mov
push
clc
sub
mov
lods
inc
pop
jg
sub
lcall
ss
fidivl
xchg
cmpsl
sti
mov
push
popa
cmc
scas
mov
outsl
loop
mov
sarl
push
ljmp
repnz
add
jecxz
sahf
and
pop
and
mov
jns
stos
testl
repnz
cmpsb
popa
sbbb
pop
sub
sub
mov
xor
pop
sbb
push
in
adc
xor
cmpsb
fs
jae
test
mov
mov
fisubrl
mov
add
arpl
test
movsb
clc
dec
in
mov
inc
pop
mov
mov
testb
mov
xor
lock
std
mov
xor
sbb
fucomp
fs
inc
sahf
loop
scas
jo
inc
cwtl
hlt
ret
push
pop
xchg
xlat
mov
push
jne
hlt
repnz
cmp
adc
adc
inc
fxam
out
scas
insl
cmp
mov
jbe
in
loop
out
lods
inc
and
cmp
sbbb
cmp
shrb
push
push
cmp
inc
adc
movsl
icebp
loope
popa
pop
loop
xchg
mov
shlb
out
arpl
loope
add
std
and
lods
inc
cmovbe
jne
mov
es
aam
push
test
addb
int3
and
cmp
xor
sub
stos
and
pop
mov
sub
mov
mov
mov
stc
jnp
rcl
pop
cmc
daa
add
pop
push
loopne
push
addb
adc
mov
test
and
in
test
sbb
rclb
push
xchg
test
dec
pop
or
pop
aad
and
cs
int
lds
dec
dec
cmc
fstpt
into
pop
and
mov
les
mov
les
aad
mov
pop
ljmp
jp
pop
mov
mov
in
int3
fwait
mov
fbld
outsb
add
adc
and
orb
add
icebp
gs
jno
imul
mov
mov
dec
cmp
icebp
lret
shrb
mov
imul
cli
testb
push
bswap
ficompl
mov
or
outsb
rclb
inc
inc
mov
das
aaa
into
pusha
insl
adc
mov
inc
loop
loopne
sti
push
in
sbb
xchg
mov
mov
bound
pop
jnp
jle
sub
cmp
das
out
lea
adc
lds
inc
sub
or
out
pop
sbb
xchg
adc
or
cmp
int3
jb
shlb
and
xchg
push
lcall
ret
shll
jmp
aam
popa
adc
bound
and
scas
mov
add
js
jecxz
cmpsb
push
cmp
in
cmp
cmp
pop
xchg
dec
mov
ror
lret
jbe
mov
and
cmpsb
xchg
jmp
out
dec
aam
mov
jge
jne
push
push
jmp
dec
xchg
inc
lret
push
inc
roll
jg
into
mov
mov
or
test
xlat
dec
js
pop
jno
or
jge
mov
dec
xor
clc
orb
add
xor
push
je
cmp
pop
hlt
cvtdq2ps
gs
bnd
fucomip
mov
cmp
push
in
jl
mov
push
and
jae
xor
popa
xchg
mov
push
out
sub
add
dec
mov
test
out
or
test
popf
xor
subl
sbb
fnsave
xor
sbb
jo
adc
xor
push
decl
jecxz
or
push
aas
lods
sub
or
sbb
into
cltd
and
xor
sub
movsl
jl
jae
stos
aaa
ficoms
cld
mov
mov
adc
scas
push
pop
pushf
rcrb
add
out
lret
inc
jns
fidivl
lcall
loopne
nop
jp
scas
loopne
and
cmpsb
mov
outsl
add
cmp
jg
pop
pop
jmp
dec
scas
sbb
cmp
iret
cli
xchg
mov
fstps
int3
or
jp
mov
sbb
sub
jo
pop
cli
outsl
cmp
arpl
lahf
fldt
add
outsb
mov
lahf
pminsw
shrb
and
xchg
loopne
sbb
aam
jl
push
lods
inc
xchg
xor
jl
insl
inc
jg
jns
arpl
pop
xor
dec
outsl
push
lds
rclb
mov
sbb
ds
jo
loopne
push
xchg
ljmp
inc
or
stos
test
push
mov
je
cmc
jnp
mov
flds
sub
inc
dec
gs
pop
mov
cmp
dec
pop
lret
bound
scas
inc
insl
xchg
cs
gs
xor
aas
push
adc
dec
xor
push
hlt
mov
sbb
and
xchg
les
cmc
inc
inc
sarb
les
stos
pop
leave
dec
loop
imul
sahf
or
jle,pt
stc
nop
inc
in
lods
jg
dec
dec
aam
icebp
mov
iret
xchg
fbstp
int3
add
pop
cwtl
and
fiaddl
cmc
mov
imul
popa
pop
cltd
xor
xchg
mov
arpl
fcmovnu
movsl
cmp
std
sbbl
pop
push
lahf
ss
sub
mov
aam
sub
subb
dec
out
bound
inc
pextrw
pop
inc
popa
pop
icebp
inc
bound
xchg
andl
movsb
ss
outsb
arpl
lahf
roll
rol
data16
and
adcb
inc
dec
jecxz
ficomps
sub
and
hlt
mov
stc
data16
pop
imul
dec
stc
xchg
sub
out
loopne
mov
mov
stc
xchg
mov
les
stos
cmc
mov
mov
int3
mov
dec
loopne
and
push
test
lret
shr
adc
out
movsl
rorb
fimuls
clc
loope
fisttpl
mov
lods
jne
pop
idiv
fs
cs
xchg
test
dec
test
stos
std
xchg
fldl
test
outsl
push
mov
xor
mov
mov
push
inc
push
lods
ss
or
movb
lods
inc
pop
inc
pop
out
cmp
loope
loope
adc
add
mov
xlat
outsb
mov
daa
jge
xchg
mov
sar
lock
insw
aam
popa
testl
loope
xor
adc
test
xor
push
cmp
scas
ja
cmc
xchg
rcll
xchg
movsb
call
mov
iret
sub
xchg
sub
iret
push
mov
mov
aaa
bswap
lds
div
lret
fisubl
mov
out
jne
gs
pop
lock
daa
sti
pop
fldcw
or
ljmp
jne
inc
inc
mov
inc
xchg
addr16
pop
enter
xor
xchg
adc
mov
fldcw
subl
repz
into
int
data16
out
xchg
addr16
repz
loop
lods
inc
sbb
andl
adc
out
xlat
fnstsw
fsubrs
add
out
jge
sub
sub
in
ljmp
pop
pop
cmp
addr16
cmc
pop
mov
in
mov
pop
adc
adc
popa
pusha
pushl
aaa
xor
gs
out
push
add
dec
and
fnsave
ret
inc
cmp
xchg
xchg
sub
sub
cmp
lret
shrl
pop
xor
pop
cmp
push
jo
aam
stos
xor
jno
sub
xor
mov
and
mov
fdivrl
xchg
sbb
imulb
inc
bound
das
jne
jo
icebp
pop
pop
xor
dec
push
xchg
add
cmpl
sub
ljmp
cmp
cmpsl
adc
outsl
and
sbb
sbb
sub
sub
sbbb
xor
test
dec
mov
cmp
lock
lret
scas
push
cmp
iret
cmp
sbb
int3
movlhps
fnsave
mov
jl
stos
inc
jne
shrl
xchg
mov
adc
ss
sub
in
orl
int3
pop
std
xor
cmovno
xor
pop
jne
icebp
mov
cmpsb
add
push
call
cmp
stos
cmpsl
push
or
lcall
js
inc
cli
sub
rcrl
shlb
xchg
fbstp
mov
loop
sbb
fwait
push
movsl
int3
mov
imul
cmpl
pusha
lods
nop
rclb
out
push
dec
lds
inc
mov
jnp
addr16
cmp
jp
push
mov
das
sbb
adc
push
stc
adc
dec
fistpll
mov
fldlg2
sarb
stc
sbb
mov
fdivs
mov
es
mov
test
pusha
cmp
sub
mov
mov
invd
into
sbbl
sub
stc
ds
cmp
aad
out
scas
shll
ds
icebp
jmp
xchg
fsubrs
dec
pusha
mov
or
cmp
add
sbbl
mov
cwtl
stc
and
pop
push
lods
jae
ficoms
dec
pop
fdiv
mov
mov
add
loopne
mov
stc
mov
sub
ja
cmpsl
gs
xor
pushf
sbbl
jecxz
jle
mov
jge
adc
lds
add
mov
push
stos
jno
jp
int3
fwait
xor
clc
negb
pop
push
pop
es
scas
push
roll
pop
imul
ja
pop
cmc
loopne
bound
or
dec
mov
and
pop
mov
xor
addl
mov
test
push
js
dec
jae
push
das
adc
push
aas
aas
or
push
push
call
scas
inc
inc
mov
mov
jno
imul
or
std
jg
inc
cmp
jle
jae
lahf
xchg
js
dec
sahf
xor
pop
cmp
xor
cld
xor
jmp
outsb
and
jbe
xlat
nop
insb
sub
les
jne
js
daa
xchg
out
sub
xchg
push
dec
mov
jo
imul
xor
xchg
xor
popf
xor
push
sbbl
ja
jnp
mov
popf
mov
movsl
mov
jl
sbb
daa
lahf
loope
sbb
add
aaa
fwait
outsb
push
mov
fwait
jo
sti
mov
ret
mov
loopne
jge
lods
sbb
ljmp
inc
xchg
stos
add
dec
cmc
push
sbbb
push
lcall
int3
fdivl
dec
adcb
adc
jb
push
lret
mov
lcall
addr16
arpl
mov
fsubrl
cs
stos
inc
fistps
nop
push
mov
push
mov
fbstp
daa
mov
dec
mov
ficompl
dec
dec
movntq
imul
outsl
dec
call
push
jge
out
lea
sub
and
mov
insl
add
mov
xchg
add
aaa
cmpsb
imul
imul
or
jecxz
pop
out
jae
mov
ficoms
jb
or
imul
cmp
adc
fsubrs
xor
mov
pop
fisttps
ret
add
pop
popf
mov
mov
pop
adcb
inc
cwtl
mov
mov
in
sub
jae
or
mov
push
add
mov
pop
andb
xchg
and
add
jae
jle
sub
and
cmp
jge
out
xchg
sub
jle
das
inc
in
out
mov
aad
cwtl
xlat
lcall
or
arpl
lcall
sbb
js
dec
clc
pusha
leave
fnsave
jle
mov
sti
xchg
enter
jmp
or
push
push
jmp
mov
mov
inc
shrl
das
dec
in
mov
call
jb
outsl
push
push
xchg
xchg
sub
jbe
xchg
into
imul
and
xchg
test
adc
jg
or
xor
xchg
andb
aaa
mov
or
mov
pop
lock
jg
fdivp
sbb
es
xchg
inc
dec
jecxz
xchg
enter
icebp
jbe
test
xchg
or
pop
ljmp
data16
mov
xchg
mov
addr16
cltd
xor
sub
leave
jne
xchg
xor
mov
outsl
push
sbb
mov
dec
cmp
push
popf
mov
rcr
ror
repz
pop
mov
adc
cmp
mov
into
mov
jns
and
xchg
je,pn
gs
nop
xchg
mov
mov
sbb
call
mov
mov
rorb
cmpsb
add
sub
pop
xor
sbb
mov
cmpsb
es
adc
dec
pop
icebp
shlb
rcll
js
ljmp
fadds
jmp
add
es
xchg
arpl
popf
mov
mov
call
cmp
cmp
push
lret
repz
jg
stos
or
push
movsb
sbb
add
insl
mov
and
mov
pop
test
pop
push
hlt
dec
mov
xchg
clc
outsl
jecxz
pusha
jo
pusha
jecxz
in
test
xor
leave
sbb
or
aaa
aaa
push
divb
jnp
out
mov
mov
xchg
outsl
outsl
lret
pop
cmp
mov
call
dec
into
inc
in
lods
fcomps
mov
out
fisubl
iret
jb
shlb
mov
cli
cmp
inc
cmovne
xlat
shll
sbbb
adc
add
dec
loop
stos
dec
loope
mov
sti
scas
sbbb
nop
mov
push
enter
sub
insb
jno
push
jmp
ja
adc
jne
cmp
push
jae
xor
push
pop
pop
hlt
js
lret
push
cmp
adc
mov
sbb
inc
sbb
call
jg
jo
andb
xchg
dec
jp
insl
jb
push
rorb
xor
aas
pop
fisttpl
jg
adc
pop
popf
push
mov
sub
mov
adc
cmc
jnp
test
jmp
movsb
mov
pop
xor
arpl
pop
gs
fsubs
sti
sbb
dec
and
test
ror
clc
adc
pop
hlt
and
mov
add
xchg
pop
outsl
fs
pop
xchg
testl
mov
fisubrs
pop
into
enter
cmp
loop
sbb
cmpsl
in
jle
fstps
testb
xchg
sub
mov
scas
xchg
inc
gs
mov
pusha
and
cmpsb
jg
pop
mov
add
lods
add
daa
pop
stos
fsts
cmp
ja
cmpsl
rolb
pop
repz
jb
ja
aas
imul
push
dec
test
pop
lods
mov
out
sbb
add
test
adc
ss
es
adc
arpl
loop
addr16
loope
sti
test
xchg
pop
fs
push
dec
inc
mov
sbb
mov
sarl
daa
sarb
fnsave
mov
shrl
push
push
mov
daa
pminub
notl
andl
pop
xchg
xor
insb
xor
fucomi
or
cmp
arpl
adc
cmpb
mov
dec
pop
push
aas
lock
ljmp
mov
xor
addr16
stos
mov
lds
popf
xor
sub
or
xchg
hlt
mov
pop
sahf
lods
jns
mov
in
mov
xor
sbb
ljmp
in
pushf
push
mov
cmc
out
jp
mov
mov
orl
sub
scas
dec
jmp
data16
sbb
inc
ja
popa
cld
pop
scas
mov
push
stos
inc
dec
fsubrl
mov
lahf
jecxz
dec
adcl
cltd
nop
insl
clc
adc
xorl
arpl
ficoml
fs
outsl
xorl
mov
lds
in
in
test
movsl
cmp
mov
dec
pop
sahf
mov
pop
out
push
push
in
cmp
lcall
add
cmpsb
or
xor
and
hlt
fstps
fcmove
popa
lods
pop
inc
out
popa
clc
xchg
loop
xor
mov
push
push
cmp
mov
mov
das
aad
fidivrl
ja
out
movsl
jle
or
mov
es
pushl
mov
insb
ret
xchg
imul
ja
mov
icebp
rclb
enter
dec
loop
xchg
adc
jnp
cltd
sbbb
clc
xor
xor
fnstsw
popa
push
fiadds
xor
lret
in
jne
xor
push
push
or
dec
sbb
leave
shr
cmpsl
sti
sti
and
cwtl
ficompl
sti
pop
jb
dec
fstps
out
pusha
lret
daa
jne
jl
jae
push
xchg
pop
mov
add
es
ds
push
sbb
or
sub
and
movsl
push
xor
div
fsubl
jmp
subl
mov
xchg
hlt
movl
shll
repnz
ficomps
or
loop
aaa
rcll
test
mov
pop
out
cld
mov
sbb
dec
lcall
rorl
call
mov
xor
addb
jmp
mov
dec
mov
dec
xor
shrb
sub
ljmp
mov
or
push
sub
leave
es
adc
cmpsl
testl
mov
ret
stos
hlt
pop
cmp
jb
cld
cli
mov
pop
lea
mov
stos
cld
imul
pushf
sub
lods
repnz
xor
test
or
cmpb
xchg
and
inc
lahf
jne
lock
in
clc
or
mov
mov
mov
jae
je
arpl
inc
pusha
fldenv
sti
jno
aaa
push
loope
and
push
clc
into
sub
fistpll
cmc
sbb
lods
imul
int3
mov
xchg
sub
mov
shl
push
add
inc
cmp
jo
add
popf
mov
or
cmovno
push
ljmp
pop
push
bound
push
movsb
cld
inc
add
sub
push
and
notb
in
and
xchg
adc
mov
pop
rcrb
xor
cmp
fsubp
lahf
int
out
sub
repz
jbe
jg
bound
test
xor
or
ret
or
ss
aaa
add
dec
scas
ret
pusha
into
arpl
cmp
mov
add
xor
push
mov
ds
cwtl
call
or
js
sub
test
stos
mov
fisubs
pusha
aaa
inc
addb
mov
cmp
clc
pop
sub
dec
jne
dec
mov
mov
ret
pop
inc
fstpt
in
loope
jbe
mov
cld
adc
xchg
inc
dec
pop
add
pop
icebp
pop
mov
aas
lea
xor
jle
sbb
loopne
mov
lret
out
cmpsl
addr16
fcoms
cmc
mov
dec
rcrb
sub
mov
add
adc
int3
xor
dec
nop
push
mov
inc
inc
test
adc
cwtl
cwtl
outsb
dec
lock
xchg
add
sbb
push
mov
hlt
jbe
popa
jge
cld
cmp
add
adcb
in
cli
movsb
gs
adc
ret
rclb
dec
jp
sarl
shll
pop
imul
mov
push
in
push
and
andl
pushf
xchg
stc
ret
jne
xor
sbb
adc
test
cmp
stos
mov
mov
test
arpl
test
mov
les
adcb
into
fidivrl
dec
gs
movsl
inc
mov
je
lods
fstl
cmp
push
jno
xor
jno
push
mov
fs
xor
mov
movsl
js
push
popa
scas
mov
test
mov
sbb
mov
pop
mov
lea
jg
nop
in
adc
adc
mov
inc
stc
xlat
jns
xchg
ret
movsl
fs
pop
divb
mov
aas
dec
and
mov
xlat
out
pusha
aas
in
push
or
push
xchg
pushf
test
jno
adc
mov
mov
lock
push
or
push
xlat
sbb
inc
push
cmp
add
jo
lcall
shll
jnp
pop
sti
xchg
cmp
mov
fs
add
cmpsl
mov
fs
loope
inc
push
test
or
out
sahf
and
jl
or
jmp
pop
imul
int3
arpl
loop
fs
int3
mov
and
scas
push
sbb
sar
in
pop
push
add
add
test
shlb
dec
adc
inc
push
das
icebp
es
mov
movsb
rcr
jecxz
dec
in
mov
fcoml
jle
js
adc
mov
fwait
mov
les
inc
mov
sbb
or
bound
es
cmc
push
add
incl
and
xchg
mov
inc
lea
mov
loope
mov
inc
jno
movsl
aam
sbb
cmp
rcrl
push
add
mov
outsl
mov
add
or
push
sub
push
mov
mov
int3
cmp
aaa
push
jge
adc
push
push
jae
icebp
out
mov
inc
lods
popf
jp
loope
mov
pop
mov
jle
sbb
aad
cmp
and
or
inc
fnsave
xchg
xchg
inc
fcmovb
flds
sbb
repz
loop
mov
add
push
popf
fistpl
rorl
cli
fistpll
mov
js
mov
out
scas
xor
mov
mov
jbe
ret
sbb
dec
add
xchg
into
cld
mov
push
push
dec
cmpsb
push
neg
int3
and
hlt
mov
pop
scas
or
xchg
subl
sbb
sahf
imul
cltd
mov
jno
jg
push
ljmp
jno
lret
fisubrl
hlt
add
fdivs
scas
add
push
testl
loopne
dec
in
bound
mov
add
mov
lahf
cmpsl
push
xor
dec
push
inc
in
push
mov
in
and
out
or
hlt
cmp
mov
sbb
cwtl
adc
aam
arpl
mov
mov
repz
cmp
jne
ret
repz
inc
fwait
jo
int
out
sti
js
ficoml
mov
mov
mov
sub
out
mov
in
push
pushl
or
xchg
dec
lods
mov
sub
es
fs
insb
or
cmp
dec
inc
inc
mov
js
pop
adc
xor
rclb
pop
push
ds
arpl
repnz
and
jp
add
cmp
addb
icebp
ret
test
je
xchg
add
mov
lcall
xchg
nop
fisttpl
pop
fs
push
cs
xchg
pop
addr16
loope
jl
imul
aam
jns
sbb
mov
gs
sub
push
sub
movsb
shl
xor
insl
push
xchg
jo,pn
push
sbb
xchg
mov
mov
out
loope
add
leave
xor
push
mov
es
cmpsl
fisubs
inc
adc
or
das
cmp
aaa
in
cmpsb
mov
mov
out
nop
xchg
lods
imul
mov
lds
repnz
mov
jnp
test
add
cmp
mov
mov
dec
test
jl
push
movsl
jnp
mov
cmp
push
cmp
or
daa
dec
in
push
push
mov
insb
add
stos
je
je
adc
jbe
mov
and
icebp
enter
bound
mov
sub
sub
or
pusha
loope
inc
adc
xchg
mov
mov
xchg
daa
test
gs
aam
cmc
lcall
mov
je
sarl
xchg
and
jb
lret
xchg
or
sahf
ja
js
sarl
aam
xchg
mov
lret
jecxz
sub
pop
mov
repnz
es
lods
push
popa
sbb
outsb
pop
out
cmp
push
insb
ds
in
adc
je
mov
xor
in
sti
les
lods
orb
insl
sub
inc
test
std
ret
imul
push
out
mov
mov
pop
hlt
mov
cmpsb
pop
cwtl
fdivrs
lcall
push
test
push
inc
mov
pop
es
in
jbe
gs
daa
mov
push
sub
sbb
negl
movl
arpl
xchg
push
idivb
cmpsb
cmp
les
leave
icebp
ss
insb
out
into
pmaxsw
cmc
mov
shr
and
repnz
add
in
xor
pusha
mov
push
or
bound
cmp
mov
cmpsl
push
ffree
jge
pop
icebp
mov
jecxz
fidivs
cltd
or
jle
jecxz
in
test
lret
jnp
gs
aas
pushf
dec
xchg
adc
and
inc
in
cmp
mov
aaa
movb
fists
loopne
xchg
jmp
lds
test
jge
in
dec
push
cltd
mov
pop
lock
ret
fxtract
adc
leave
sbb
rorb
call
lds
ret
pop
pop
xchg
js
nop
daa
xchg
insl
aaa
ret
xor
push
sbb
jbe
clc
mov
pop
jp
dec
jmp
sub
insl
jbe
cmp
cmpsb
sbb
ror
sbb
dec
outsb
dec
in
jnp
adc
imul
jnp
mov
out
adcl
sti
fidivl
sbb
mov
clc
fs
fidivl
sub
add
add
xor
insb
push
cmp
jo
adc
mov
sti
jbe
outsl
enter
jmp
sub
pop
jmp
out
lods
inc
and
cmc
inc
insb
insb
lret
xchg
pushf
dec
nop
mov
inc
mov
fcmovne
popa
movsb
inc
cltd
sub
jae
xor
sbb
sahf
sar
lods
mov
cmc
sub
push
pop
daa
addb
fsubs
movsb
jno
subl
xor
push
mov
jne
adc
cmp
mov
aam
sbb
popf
shl
into
pop
les
fstpt
dec
jge
and
push
dec
ja
mov
adcb
mov
mov
test
sub
mov
int
xlat
push
addr16
push
xchg
push
jge
xchg
sbb
add
lds
jb
mov
jnp,pn
lcall
inc
mov
xor
mov
sub
or
lahf
xchg
mov
mov
jg
sti
mov
dec
mov
fsts
mov
arpl
mov
xchg
sub
dec
xor
xchg
rolb
call
lods
and
into
popa
pop
and
inc
mov
hlt
mov
and
out
pop
std
cmpsl
mov
jg
mov
xchg
jmp
jge
mov
jge
cmpsl
adc
cmovbe
mov
hlt
jno
adc
and
fs
out
xor
add
dec
popa
mov
fcompl
dec
sarb
pop
dec
bound
pop
hlt
inc
dec
in
sbbl
lods
int3
mov
push
push
into
xor
ror
and
mov
stc
or
bound
and
lahf
xchg
scas
or
push
mov
adc
push
cmp
mov
or
into
cmp
testl
xchg
andb
xchg
or
sub
mov
insb
push
xor
hlt
scas
rorl
mov
cmc
call
push
insb
das
shrl
into
sbb
push
sbb
rclb
ds
bound
enter
adc
pop
imul
lahf
mov
dec
filds
push
cmp
add
or
or
dec
mov
mov
sbb
iret
fisubl
inc
outsb
adc
push
test
dec
mov
mov
dec
xchg
cwtl
xor
xchg
inc
adc
and
aaa
dec
push
xchg
out
jcxz
int3
aad
pop
jae
lea
xchg
sub
jae
inc
in
in
inc
xor
mov
popf
add
jno
sbb
popf
les
jecxz
jecxz
fyl2x
mov
iret
lcall
cmp
pop
jecxz
test
mov
out
add
mov
imul
add
sahf
push
aaa
fdivs
xor
xor
cmp
dec
cltd
jo
mov
xor
enter
cmp
push
sub
jecxz
mov
jl
jle
ja
push
pop
sbbl
mov
mov
add
arpl
mov
aas
fnsave
sbb
xorb
add
cmpsb
pop
cwtl
push
jge
cmc
mov
stos
movsl
push
dec
xchg
rsm
arpl
xor
lcall
adc
popf
sti
stc
lods
out
inc
inc
popf
cmpsl
in
ficomps
dec
mov
lods
dec
pop
fildll
cmpsl
mov
sbb
push
jo
fs
mov
inc
pop
lods
cld
aad
or
mov
jmp
xor
insb
jge
jbe
inc
lahf
or
inc
bound
xchg
mov
jnp
out
mov
inc
add
fistpll
push
gs
mov
ret
into
repz
pushf
fsubrp
pop
jmp
hlt
in
pop
mov
stos
fistpl
adc
mov
test
rcr
and
push
addl
loop
test
mov
arpl
lret
cli
ret
das
jns
ss
call
jnp
sub
mov
cltd
xchg
aas
mov
adc
das
add
clc
andl
or
mov
hlt
push
jns
ja
test
xchg
fcmovbe
ss
jb
shll
ret
cs
adc
jo
adc
loop
mov
adc
test
stos
int
and
scas
insl
aad
and
test
rcl
mov
pushf
ret
movb
cmp
ret
andb
mov
cmp
adc
stc
cmp
inc
pushf
sbb
aaa
dec
jmp
loopne
xor
addr16
stos
das
fnsave
or
mov
mov
data16
pop
push
push
or
cmp
pop
das
into
xchg
push
push
icebp
dec
ret
dec
xchg
idivl
pop
in
shrb
pop
ds
data16
arpl
out
ret
mov
shrl
pop
add
or
jns
js
or
push
xor
cmpsb
dec
nop
inc
xchg
stc
in
notb
insb
and
inc
js
stc
mov
cmpsb
insl
mov
jo
jg
sub
in
clc
dec
jl
mov
xlat
ret
add
in
mov
xchg
mov
jno
int3
push
sahf
ja
sbb
xor
pop
inc
cmpsl
push
stos
jae
or
sub
hlt
mov
movsl
test
cmp
or
jg
je
or
pop
push
push
loop
idiv
xchg
push
pop
mov
mov
or
loop
aam
pop
hlt
cltd
cmc
inc
fpatan
cmp
mov
or
cs
push
lods
cwtl
xlat
negl
or
stos
test
mov
fimuls
fwait
xor
lret
in
add
push
xchg
inc
jmp
xchg
test
loop
xchg
xor
ret
sub
pop
xchg
aad
xchg
test
adc
addr16
xor
ds
sub
pop
dec
push
int
inc
in
scas
test
js
adc
xchg
dec
into
jp
out
sbb
or
xchg
psubw
inc
jecxz
stos
adc
xlat
shlb
sbb
pop
lock
mov
ja
cmp
ljmp
js
adc
jbe
and
lock
movntq
out
fbld
pop
sbb
fildll
push
leave
mov
pop
je
aad
xchg
orl
sub
pop
cmc
xchg
std
mov
cmpsl
insl
dec
sarb
push
out
push
js
lds
ret
ss
fcomps
pop
push
lcall
xchg
cs
ja
inc
xor
loope
jmp
add
xor
cmc
mov
cli
mov
mov
mov
adc
stc
pop
inc
cli
jne
js
inc
mov
mov
imul
or
mov
das
loope
fsubl
jnp
mov
push
lods
adc
daa
iret
mov
jp
mov
stos
xlat
sub
mov
ficomps
xchg
lahf
stos
lds
fidivrl
lret
push
adc
pop
xchg
mov
cmp
push
sub
pusha
mov
jo
movsb
gs
and
clc
adc
and
scas
fisttpll
adc
or
mov
ds
push
pop
aad
xchg
and
sahf
sub
movsb
scas
mov
xor
add
jmp
mov
xchg
mov
jle
jecxz
shrb
xchg
icebp
mov
sti
mov
out
inc
stos
mov
outsl
fists
rcll
pop
clc
ret
and
mov
stc
dec
ljmp
jge
add
pop
dec
add
in
js
jmp
shl
mov
jb
inc
push
bound
adc
insb
idiv
insb
stos
or
cmp
jmp
cld
idivl
int
fs
push
adc
push
xor
ds
xchg
addl
mov
jae
sub
mov
xor
in
dec
repz
push
bound
inc
or
adc
lea
inc
loop
or
xor
lods
or
add
cs
sti
dec
fldenv
inc
out
xorb
loop
and
sarl
insl
jl
sti
nop
in
or
dec
xchg
xor
nop
xchg
loope
movsb
jecxz
mov
xchg
jl
and
sahf
add
test
push
add
adc
adc
inc
inc
lods
movsl
push
pop
sbb
xchg
data16
or
mov
data16
ret
sbb
and
xchg
cmp
shlb
sub
aam
bound
repnz
shll
lret
leave
ret
adc
scas
outsl
out
shl
insb
dec
loope
pop
out
insb
mov
push
xchg
cmpsb
inc
mov
mov
sbb
ret
mov
rdtsc
std
stos
inc
push
adc
inc
in
fistpll
adc
add
mov
pop
mov
cmpsb
push
jnp
and
xor
dec
jbe
jp
ror
dec
popf
or
or
pusha
or
push
jne
sub
xchg
push
or
pusha
data16
push
adc
or
sub
stos
dec
mov
dec
inc
inc
aad
arpl
xchg
pusha
or
inc
fs
cmp
int3
inc
xchg
aaa
pop
bound
cmpsl
inc
repnz
mov
out
xchg
push
test
aas
rcll
add
js
mov
outsb
or
imul
mov
cmpl
or
pusha
mov
test
int3
dec
and
ss
inc
pop
inc
push
popa
clc
mov
in
mov
sub
out
mov
mov
ss
sbb
lods
cltd
popf
ja
mov
sbb
dec
hlt
add
loopne
adc
dec
ret
pop
cmpsl
jb
test
fucomp
test
fidivl
ret
add
andl
and
xor
lret
mov
jbe
pop
dec
pop
push
rolb
sbb
sbb
outsl
mov
mov
dec
push
ret
fcomip
xor
mov
jg
xor
pop
cmp
shrb
dec
lods
push
inc
lds
jmp
cmpl
lock
out
popa
dec
fs
loop
add
mov
repnz
inc
fcomp
mov
je
pop
mov
sti
fxch
pop
mov
ret
les
int
mov
dec
push
out
nop
sbb
jecxz
push
dec
dec
jnp
mov
mov
or
and
out
cmp
addb
in
jl
lds
imul
js
push
push
adc
call
mov
add
pop
cs
pop
and
hlt
jnp
int3
mov
push
jbe
add
fdivl
sbb
ret
bound
mov
mov
fcmove
orb
or
mov
mov
jle
push
mov
sub
into
jne
cmp
sub
sbb
jge
ret
btr
je
jp
mov
lods
adc
xor
mov
push
inc
repnz
pop
jns
insb
aas
or
sub
pop
out
sbbb
out
fwait
testl
das
repnz
andb
xchg
icebp
test
xor
sbb
push
popf
xor
rclb
mov
cmp
pop
push
loop
pop
jno
add
lea
cmp
aaa
outsl
arpl
sbb
dec
hlt
or
xor
cwtl
or
aad
sub
mov
cs
push
roll
add
xchg
and
loope
nop
stos
cmp
int
hlt
sbb
stos
and
mov
fs
push
cltd
std
mov
outsl
and
in
mov
push
add
ljmp
movsl
mov
xchg
and
xchg
cmpsl
mov
xlat
clc
inc
mov
sub
sbb
inc
fildl
test
dec
fimull
scas
cmp
daa
ret
mov
icebp
movsl
aas
jae
add
jbe
sbb
cmp
data16
testb
insl
stc
stos
mov
inc
leave
jb
repnz
push
dec
ret
jb
fwait
stos
jnp
mov
push
sub
js
in
mov
fbld
fisttpll
adc
inc
mov
shl
or
mov
and
cld
fcmovnu
xchg
sub
ja
repnz
cltd
and
sbb
or
lea
xchg
sub
test
cmpsl
pop
adc
stos
xchg
sub
cmp
mov
push
int
adc
lods
ss
sbb
xchg
mov
cmp
xor
test
icebp
sbb
clc
mov
xor
outsb
adc
pop
push
mov
out
push
sub
ds
push
popf
repz
outsl
push
jbe
sub
sbb
mov
lcall
mov
dec
pop
dec
mov
xchg
dec
push
repnz
ss
int3
fsubs
inc
pop
insb
dec
xor
outsb
out
inc
lret
in
sahf
in
shrl
mov
jb
lods
imul
jmp
insl
mov
pop
xchg
cmc
movsb
imul
pop
push
ret
add
fcmovnb
pop
sub
push
inc
andl
bound
sbb
sbb
fistps
testb
mov
scas
loopne
shrb
cli
sub
push
sub
dec
fnsave
lds
or
mov
push
cmp
rclb
je
sub
cwtl
mov
or
xchg
jle
lcall
add
mov
test
xchg
test
out
xlat
lods
dec
fisttpl
add
scas
sub
out
int
inc
lahf
hlt
mov
push
in
sbb
add
sbb
pop
lds
int3
or
pop
jno
aaa
and
aad
cmp
add
pop
push
mov
aad
mov
negl
daa
push
inc
sbb
andb
aad
and
enter
in
inc
enter
aad
add
mov
xchg
jns
cltd
xor
sbb
dec
dec
mov
scas
out
xlat
jb
dec
xor
cmpb
sub
pushf
or
js
shrl
dec
rcll
mov
jns
jmp
or
cmp
dec
mov
loopne
pop
mov
fbstp
mov
mov
mov
inc
lret
cmp
sub
out
pop
ret
inc
test
lock
dec
data16
ja
jno
xor
push
mov
ret
adc
inc
cmp
imul
xor
icebp
jns
cmpsl
cmp
xchg
test
lret
push
add
xor
mov
mov
mov
pop
inc
push
xchg
lret
cmpsl
std
movsl
aas
mov
mov
or
xchg
mov
bound
sbb
je
fldenv
add
push
imul
sbb
or
push
mov
push
test
mov
loopne
cmp
ret
lahf
dec
mov
jmp
mov
and
lods
inc
cmpsb
inc
clc
sahf
idivl
jb
sub
daa
hlt
cmp
mov
push
mov
cld
adc
lods
pop
push
in
pop
mov
lods
jge
mov
push
xchg
pushl
mov
jno
xchg
jae
pusha
fsubrs
xlat
inc
dec
push
sbb
lret
les
add
sti
jne
out
fwait
stc
xchg
stc
je
xchg
sbb
test
sbbb
mov
int3
cmp
add
mov
hlt
sub
push
mov
notl
push
cmpsl
in
jne
cltd
lret
cmpsl
sarl
out
test
add
shrb
mov
repnz
add
je
lret
mov
pushf
jmp
xchg
xor
jg
cmp
mov
xchg
push
pop
decb
xchg
out
ss
aaa
jnp
push
mov
pop
xor
dec
cmp
cld
movsb
mov
outsb
test
ret
lock
out
out
mov
je
cmpsl
dec
mov
movsl
das
and
dec
popa
xorl
push
movsb
and
and
adc
outsb
sbb
xchg
xchg
push
fcoms
jne
test
cmp
loope
fwait
xlat
ljmp
mov
fs
clc
xor
arpl
out
lock
lods
scas
lcall
arpl
insb
add
test
gs
mov
bound
pop
cmp
aaa
test
push
and
xor
xor
pop
push
push
mov
orb
fnsave
push
out
sahf
into
sub
xchg
pop
dec
incl
sub
inc
call
jns
xlat
cmp
add
in
lret
add
pop
mov
and
cltd
imul
or
movsb
inc
and
sub
aas
dec
das
mov
nop
mov
insb
test
sarb
push
divb
mov
aad
outsl
dec
js
in
lods
sub
lret
mov
in
mov
jle
and
xor
shll
lret
aam
push
xchg
sub
push
test
fbstp
mov
mov
mov
pop
adc
jns
cs
pop
rcrb
xchg
rclb
cmp
imul
leave
jl
mov
push
push
pushf
loopne
push
push
or
sti
add
sti
and
xor
pushf
xchg
push
in
xor
mulb
mov
sbb
xchg
dec
out
stc
jge
arpl
xchg
mov
jne
notl
popf
xchg
and
insb
sti
hlt
decl
pop
cwtl
pop
sub
outsl
xchg
loop
mov
ja
repz
xchg
mov
mov
data16
fimull
sbb
int3
imull
testb
add
sahf
cld
push
scas
inc
xchg
xchg
out
xor
xor
push
jl
int
cmp
and
jo
into
inc
mov
pop
cmc
mov
and
ss
mov
insl
xor
mov
dec
daa
leave
fwait
xchg
aad
sarl
or
mov
hlt
in
stc
popa
push
lds
stos
mov
inc
jo
jg
movsb
dec
lcall
sbb
fs
ffree
leave
xchg
shr
cmp
dec
mov
popf
add
shll
aam
out
inc
aad
cmp
adc
arpl
js
popa
lea
scas
cli
and
xchg
enter
pop
stc
fldcw
jo
add
ret
fists
and
imulb
mov
adc
pop
pop
mov
popf
cmpsl
pop
inc
push
or
fwait
jmp
and
mov
in
jmp
shrb
dec
sub
dec
andl
scas
dec
dec
add
xlat
dec
stos
inc
jle
xlat
jb
mov
adc
mov
dec
int3
push
je
pop
and
cwtl
test
and
fs
mov
das
int
jg
lds
out
fstps
cmpsb
mov
cli
dec
inc
mov
ret
bound
fsubs
sub
lahf
fidivs
cmpsl
xor
and
or
mov
sub
xchg
push
add
mov
or
gs
stos
jge
loope
inc
stc
push
sub
pop
aaa
xchg
in
or
or
test
shrb
xor
scas
fs
xor
out
icebp
sti
adc
and
inc
add
inc
jle
sti
mov
cmp
aaa
repz
push
in
repz
popf
loop
in
mov
loope
xchg
mov
push
shlb
jb
mov
mov
sbb
ret
popa
xor
pop
int3
dec
movsl
jbe
and
stos
xor
push
adc
mov
lret
push
imul
sub
ja
loopne
adc
dec
add
sub
cmpsb
add
loopne
out
mov
sub
out
push
cmpsl
lods
inc
aad
or
fadds
push
sub
mov
push
popf
pop
xchg
aam
jmp
or
movsl
or
daa
add
fdivrl
push
or
cmp
push
mov
and
sub
out
aam
lcall
out
adc
lds
rcrl
enter
pop
cld
xor
jbe
cwtl
in
push
dec
cmp
jp
add
aad
push
mov
jge
insl
scas
push
cmp
enter
push
dec
fadds
shrb
cld
xlat
sub
int
out
into
push
adc
jne
andl
test
or
rolb
outsl
pop
and
imul
lock
dec
movb
int
popa
ljmp
inc
sbb
sbbl
test
sub
addps
hlt
cmp
repnz
popf
int
daa
enter
mov
mov
xlat
data16
sub
dec
and
stos
je
cmp
out
mov
jno
loopne
mov
add
fs
scas
sbb
into
enter
mov
ss
ja
aaa
jp
or
jns
pop
pop
subl
loop
add
add
movd
mov
cmpsl
pop
adc
in
imul
lock
dec
push
lds
or
mov
and
xor
aas
loop
mov
hlt
xor
dec
push
jae
cld
inc
pop
push
mov
les
aas
mov
out
mov
rcrb
dec
rcr
pusha
jg
jp
pop
ret
insl
lods
mov
sbb
push
mov
push
add
outsl
dec
pop
push
adcb
inc
pop
movsb
jnp
jcxz
bound
mov
sti
push
in
fs
cltd
idiv
and
mov
push
ret
mov
sbb
sbb
push
outsb
cmp
sbb
xchg
and
xchg
jbe
aam
cmp
mov
test
es
out
add
stos
test
les
lea
shlb
in
dec
dec
cmp
xor
aam
ljmp
pushf
cmc
mov
les
adc
movsl
lretw
lahf
fsubrs
mov
push
push
mov
mov
cld
lcall
push
mov
mov
ret
push
out
xchg
ds
pushf
xor
jno
sbb
sbb
movhlps
mov
sti
cli
push
inc
in
loopne
sub
lret
cld
lahf
loope
dec
sub
cs
and
adc
pop
movsb
sub
repz
fldl
mov
into
and
or
dec
popf
adc
in
aas
inc
setb
push
andl
ds
dec
pushf
nop
sub
mov
xchg
adc
mov
sbb
iret
loop
jb
and
out
xchg
jg
jbe
dec
xor
ss
inc
bound
or
or
js
xchg
mov
mov
out
dec
mov
pushf
inc
ret
cmpsl
jp
addr16
xchg
nop
in
cmp
fdivl
cmpb
pop
hlt
cmp
cld
push
add
mov
arpl
lret
inc
scas
in
fidivl
shlb
es
sbb
sbbl
sub
push
ljmp
push
cmp
cld
dec
sti
rcl
add
aaa
into
mov
sahf
rcrl
pop
mov
xchg
jecxz
sbb
push
mov
mov
cmp
pop
xor
scas
repz
mov
shl
sarl
ja
push
insl
call
cmpsl
push
cld
pop
ret
pop
lods
dec
cmp
adc
movsb
clc
mov
mov
cwtl
out
sbb
ja
inc
xor
std
and
push
pusha
fildl
mov
lock
mov
sub
les
fdivrs
imul
mov
inc
jmp
add
rorl
push
lods
jg
fadd
push
fwait
pusha
or
cmpsb
cmp
mov
ss
nop
rcrb
mov
lods
push
jecxz
push
sbb
outsb
sbb
mov
fldenv
sub
jecxz
mov
aas
inc
push
jo
aad
test
pop
xchg
cli
xchg
lret
inc
adc
jb
scas
cld
cmc
js
andb
sub
sahf
roll
shl
sub
cmp
cmc
ret
movsl
out
cmp
sbb
and
movsl
fs
pusha
js
jmp
repnz
mov
mov
pop
icebp
push
imul
xchg
ret
jle
xchg
jle
dec
js
inc
aad
pop
idiv
dec
fwait
mov
pop
stc
nop
nop
xchg
xchg
jecxz
mov
psubq
outsb
loope
leave
cmpsl
sbb
push
shrl
cmpsb
test
fxch
mov
inc
push
and
xchg
pop
sbb
loopne,pt
dec
sbb
xchg
xor
push
push
stc
fsubr
sub
iret
shrw
jmp
hlt
in
pushf
and
pop
mov
xchg
jmp
sarl
jae
in
ret
stos
inc
mov
cwtl
jae
lcall
dec
xchg
in
shrb
push
and
je
jae
jb
and
push
or
cltd
or
repz
test
repz
movsl
sbb
xchg
clc
push
sbb
cli
nopl
shlb
fcoms
mov
cltd
lock
jnp
push
jo
xor
aaa
or
scas
inc
sbb
clc
cmpsl
inc
xchg
loop
and
inc
ret
daa
andb
scas
dec
cmp
cmp
push
adc
jp
add
cwtl
xchg
push
pop
cmp
stos
cmp
lret
nop
mov
cmp
jo
add
xor
pop
inc
xlat
push
aaa
jns
in
pop
cmc
sub
add
push
rolb
addb
scas
inc
test
jp
fisubl
sub
push
mov
xor
addl
into
push
and
inc
daa
xchg
sub
jecxz
dec
push
mov
jno
jge
popa
cmp
jbe
dec
xlat
xor
orl
or
mov
pop
mov
jge
xchg
and
sub
clc
inc
push
sub
sbb
dec
mov
xchg
sub
cmp
sahf
xchg
shlb
jnp
push
stos
dec
or
inc
sbb
and
arpl
out
ret
xor
xor
outsb
in
and
pop
xor
mov
dec
sbb
lret
hlt
pop
jp
lea
sbb
jo
xlat
xchg
andb
into
mov
loopne
or
repnz
cmp
adc
pop
inc
pop
xor
jae
inc
test
orl
cmpb
cmpsb
sbb
pop
xchg
call
lret
int
bound
mov
jo
movsb
es
xor
sbbb
cmp
jne
pop
cltd
loop
pop
mov
bound
ss
and
xor
pop
or
xor
xchg
ud2
xchg
mov
jle
hlt
out
fnstenv
cmpsb
dec
clc
pop
jmp
jl
and
sbb
jo
and
fwait
xchg
aad
adc
flds
dec
fbld
jno
xchg
or
and
or
aas
add
test
lcall
or
xor
jmp
mov
inc
xlat
xchg
xor
dec
clc
in
xor
jns
and
inc
xchg
xchg
arpl
sbb
mov
inc
adc
pusha
stc
rorb
sbbb
push
stos
insl
push
sahf
bswap
pushf
xor
inc
cld
inc
jb
cmp
cmp
dec
adcl
ljmp
jle
mov
nop
inc
fucomip
inc
mov
sub
rorb
xor
data16
out
or
pop
mov
adc
push
jb
add
cmp
push
sarb
out
stos
in
jmp
cmp
ret
sbb
sub
xor
pop
sub
faddl
xchg
or
fadd
pushl
jo
sub
or
push
ljmp
fnstcw
mov
fcoml
cmp
mov
data16
inc
xor
in
popf
lret
pop
repnz
in
shrb
xchg
add
lods
mov
rcrl
push
movsl
dec
hlt
add
incb
lock
add
cwtl
xchg
or
xor
and
leave
push
cli
mov
rcll
ficoms
es
cwtl
mov
or
xchg
push
mov
aad
xlat
or
xchg
in
andl
sbb
inc
cmp
xchg
push
mov
int
push
leave
ret
sarl
mov
subb
fadds
xchg
fwait
push
lcall
push
fcomps
stos
dec
repz
lods
movsb
jne
adc
or
push
xchg
scas
aas
dec
push
push
cmp
cmc
xchg
and
push
push
add
outsb
adc
sbbb
cwtl
inc
pop
leave
jnp
jae
pop
xrstor
je
sahf
movsl
xchg
jmp
inc
lret
call
repnz
mov
sbb
insl
sbb
testb
add
push
movsl
ljmp
pusha
sahf
cmc
adc
mov
pop
jno
stos
mov
jbe
mov
gs
xlat
pop
add
movsb
bound
or
shl
adc
fdiv
cmpb
xlat
pushf
and
iret
dec
pop
jl
jmp
mov
cwtl
jnp
lods
or
cmc
out
mov
imul
fbstp
out
call
out
fldl
sbb
or
jp
mov
testl
adcb
push
jle
jns
adc
lods
imul
in
icebp
neg
inc
push
or
jno
ljmp
incb
shl
mov
cmpsb
js
push
dec
shlb
imul
cmp
mov
ss
xlat
adc
cltd
std
ljmp
test
xchg
xchg
xor
inc
push
mov
inc
push
jmp
sbb
aas
jns
dec
es
pop
ret
out
dec
xchg
js
outsl
mov
jle
add
jp
xor
push
pop
mov
push
arpl
pop
cmp
xchg
in
inc
shl
repz
pop
push
sbb
sub
push
fadds
icebp
in
notl
cmp
inc
pop
sub
mov
lea
inc
dec
gs
push
insl
aam
ret
out
or
int3
or
data16
adc
xchg
scas
jns
int3
mov
xchg
dec
dec
jmp
dec
inc
mov
setl
ja
out
loopne
lods
inc
scas
jl
pop
daa
push
sub
lods
stc
dec
scas
sub
adc
pop
enter
cmpsb
stos
ficompl
mov
inc
ljmp
ficoms
sbb
and
in
enter
cmc
icebp
push
adc
sbb
mov
jl
stc
insl
repnz
mov
add
xchg
jg
ja
push
fdivp
dec
test
sysenter
mul
outsb
cmp
add
or
sti
popa
mov
jb
pop
clc
pop
jbe
arpl
xchg
dec
cmpsl
dec
loop
xchg
rclb
add
jl
into
flds
and
xchg
xor
pusha
mov
jp
pushf
lods
dec
and
lds
pop
cmp
push
mov
dec
mov
cmp
std
cmp
mov
pop
jl
cmpsb
push
insl
imul
insl
test
jnp
pop
mov
adc
xor
cmp
pop
adc
xchg
mov
inc
loopne
lcall
hlt
sub
outsl
add
cmp
inc
insl
roll
inc
fsubs
push
rorl
pop
xchg
xor
mov
jl
into
ficoms
mov
jmp
jle
add
xchg
adc
mov
jbe
fstps
xchg
sbb
mov
mov
and
mov
out
shll
cmp
bnd
outsl
or
or
jle
mov
mov
or
sub
mov
adc
and
xchg
mov
repnz
mov
int3
or
test
mov
out
popa
les
mov
cli
cmc
in
imul
imul
aas
mov
das
mov
lahf
cmp
lahf
jmp
cwtl
add
lcall
mov
xchg
in
xlat
push
mov
pop
icebp
imul
jns
inc
sbb
enter
scas
dec
lahf
jae
shrb
test
or
lods
movsl
push
cmpps
add
jns
test
out
cmp
xchg
sbb
push
dec
or
mov
fbld
sbb
in
les
loop
out
xchg
jl
and
sub
mov
out
popf
js
fistps
xchg
push
pop
imul
ds
cmpsb
cmp
dec
add
mov
test
mov
pusha
lods
xor
jb
jo
das
cmp
outsl
push
lock
into
jne
push
adc
lahf
inc
addb
xchg
imulb
fnsave
sbb
cmc
lea
ja
sti
or
inc
lret
push
out
fwait
dec
outsb
xchg
adc
aas
lret
sbb
sub
or
aas
popa
cmp
mov
mov
fcompp
insb
fimull
dec
jae
sbb
lock
mov
gs
push
mov
xchg
sbb
or
out
fwait
push
add
xor
xchg
scas
jnp
add
fdivl
xchg
cmp
mov
leave
sbb
push
xor
inc
in
out
xor
xchg
loopne
ret
jb
xchg
call
repnz
fwait
xchg
insb
sub
test
test
dec
lcall
mov
pop
divl
mov
adc
push
pop
lret
lahf
cvtps2pi
xchg
lret
imul
arpl
xor
and
cmp
push
jne
dec
test
dec
stos
das
jmp
aad
add
cmp
mov
push
cmp
shrw
repz
jae
mov
jle
aam
leave
cmp
jb
test
mov
ret
adc
cld
lcall
push
mov
push
popf
sbb
leave
mov
pop
jl
and
pop
and
push
ret
push
cmpsb
iret
sub
xchg
lcall
fisubrl
or
loopne
imul
jmp
adc
and
loope
jl
or
pop
dec
dec
add
xchg
mov
enter
inc
enter
add
xor
aad
sbb
sub
dec
fs
xchg
bound
fs
outsl
cmp
repnz
inc
cs
sub
leave
jo
psubusb
daa
or
jnp
clc
mov
roll
gs
pop
mov
test
sub
js
repz
mov
hlt
or
xchg
add
lahf
xchg
imul
push
cmp
aaa
testl
dec
dec
cmp
mov
adc
push
jnp
push
pop
and
xchg
jno
fwait
and
add
clc
nop
xor
cmp
push
adc
cmp
movsb
cmp
imul
xchg
sti
sbb
sub
push
push
jg
jb
mov
sbb
imul
rep
or
aam
fisttpll
scas
and
push
movsl
es
add
mov
xchg
cmp
mov
rcr
adc
pop
mov
inc
adc
outsl
sbb
mov
xor
cwtl
mov
jno
pusha
push
fsubl
and
fdivrs
loope
lret
mov
cs
hlt
push
pop
jp
mov
xor
mov
imul
repnz
dec
les
lahf
cs
xchg
aas
sbb
jae
dec
xchg
ljmp
insb
rolb
and
xor
dec
std
cmp
out
and
push
inc
jge
push
mov
iret
fcomi
jl
push
mov
mov
push
sub
mov
mov
icebp
call
outsl
cmp
fwait
cmp
sbb
dec
in
and
movb
sar
push
inc
lods
mov
out
jae
push
movsl
mov
xchg
aam
pop
hlt
add
xor
and
jnp
lret
lock
push
pop
or
sub
push
addr16
cli
inc
fsubr
jbe
cmp
inc
dec
mov
aam
dec
loope
sarb
aad
adc
jge
inc
ret
cmp
pushf
jne
loopne
test
and
bnd
adc
imul
cmp
jae
lahf
sub
fnstcw
int3
or
dec
in
fwait
push
sub
testb
mov
fnstenv
sti
inc
test
adc
sbbl
pop
out
enter
push
pusha
lods
jae
sbb
jo
jl
push
or
movsb
movsb
pop
adc
add
mov
les
je
in
xchg
pop
pop
push
add
je
mov
xchg
mov
int
cli
mov
or
repz
cmp
rcrb
jae
imul
mov
subl
out
pop
stos
ret
daa
mov
mov
cmp
push
mov
sub
pop
cs
pop
pop
jne
in
push
push
jge
or
or
sbb
add
icebp
mov
push
pusha
cmp
sbb
or
dec
push
xor
cmp
lock
enter
jecxz
mov
dec
mov
popf
dec
pusha
iret
jmp
and
mov
ljmp
jno
xchg
mov
mov
sbb
push
and
inc
fcomps
xor
jmp
in
xchg
shrb
cmpps
pop
jmp
adc
jnp
call
test
sub
popf
xor
mov
outsb
mov
outsl
pushf
mov
in
add
mov
pushf
pop
arpl
jp
xor
pop
or
adc
xor
dec
mov
out
or
out
push
lock
fnstcw
or
mov
mov
dec
fiadds
and
mov
and
jl
mov
dec
insl
mov
hlt
mov
in
cmpsb
xchg
and
xor
sub
or
ret
mov
add
shl
jmp
cmp
dec
lock
daa
aaa
add
popl
and
lcall
push
adc
aaa
push
cltd
std
cmpb
sahf
mov
mov
cmp
adc
xchg
cmp
stos
push
idivb
push
cmpsb
cmp
xlat
inc
dec
dec
out
jae
das
push
xor
push
popa
push
imul
add
addl
jl
icebp
lea
iret
jb
jns
lock
inc
and
cli
push
pop
or
dec
inc
pop
cmp
pop
repnz
dec
and
inc
jns
es
fsubrs
test
aaa
push
push
scas
mov
outsb
mov
test
test
es
leave
pop
repnz
fdivrp
adc
lcall
loopne
idivl
pop
insb
or
rcl
push
mov
push
lret
call
or
jno
insb
pop
jo
sbb
inc
jb
cmpsb
mov
pop
mov
lret
insb
add
xchg
lret
mov
js
fsubrs
inc
or
jne
je
push
out
push
shlb
sbbb
in
mov
mov
push
lcall
ljmp
loope
hlt
mov
pop
xor
mov
adc
gs
insb
ret
dec
ljmp
push
xchg
mov
les
into
fidivl
sub
lods
push
jno
mov
into
aam
jns
dec
mov
adc
arpl
pop
clc
push
ja
icebp
push
jno
jns
jmp
sbb
push
les
hlt
insl
cltd
stos
jl
cmpsb
lock
mov
lahf
pop
fidivrs
in
and
cmc
adc
mov
fucomp
jle
mov
cmpb
cmp
adc
xchg
dec
std
fldcw
ljmp
je
in
popa
sbb
sahf
data16
scas
mov
adc
dec
lahf
daa
shlb
xor
jecxz
cli
push
mov
hlt
pop
js
dec
lods
in
and
push
popf
mov
sub
mov
add
aas
rcrb
popa
jl
sbb
or
and
hlt
jecxz
es
push
lods
and
rol
sbb
psrad
pop
shrb
aas
dec
pusha
out
mov
test
lret
xchg
jns
call
pop
mov
pop
inc
das
out
je
int3
push
jbe
push
std
and
mov
pop
ds
out
pop
pushf
pop
sahf
jmp
sahf
popa
adc
in
dec
xor
adc
xor
pop
jb
mov
imul
repz
repz
leave
jno
icebp
add
xor
loope
add
inc
dec
fidivl
mov
sub
xor
mov
scas
xchg
fucomp
lcall
mov
mov
daa
mov
outsb
jl
mov
mov
rorl
fstl
adc
jb
gs
cs
pushf
cli
sub
push
insl
shlb
inc
ja
imul
cmp
call
cli
subb
mov
sti
mov
pop
jecxz
les
call
loop
jo
push
jo
popf
sbb
out
ss
adc
mov
mov
sarb
mov
push
leave
sbbb
hlt
dec
push
scas
movsb
mov
jne
jl
xor
aad
xor
dec
cmp
cltd
je
jae
jp
lods
mov
repnz
testl
fucomi
in
mov
mov
lods
popf
xor
adc
insl
cmpsl
dec
ds
xchg
jo
pushf
sbb
lret
adc
mov
in
stc
or
or
mov
or
lcall
cmp
dec
movsl
cltd
jo
outsl
sbbl
loopne
mov
cmpsb
lock
adc
arpl
das
movb
mov
push
push
jl
ds
out
loope
inc
int3
xchg
test
int
dec
notl
mov
or
or
xor
stos
hlt
hlt
sub
ret
lods
cmp
push
icebp
addr16
pop
lcall
pop
cmp
ret
jbe
fdivl
inc
xchg
dec
pusha
lahf
mov
shl
cmpsb
sbb
lea
lret
hlt
xchg
jns
rorl
cwtl
stos
loope
icebp
iret
mov
jo
fldl
mov
sbb
fisttps
js
bound
xchg
cwtl
dec
divl
or
test
into
pushf
dec
jne
lret
xchg
rclb
dec
jg
loope
out
pop
jecxz
addb
pop
movsl
or
push
add
xchg
call
or
jl
dec
xlat
mov
frstor
mov
jmp
shl
shrb
icebp
mov
sarl
cmpsl
mov
loope
sbb
scas
push
fdivrl
or
add
je
mov
inc
pop
inc
popa
scas
and
xchg
cs
xchg
sbb
mov
dec
out
or
pop
pop
cs
xchg
pop
or
mov
cmp
jmp
cld
repz
jbe
mov
mov
jb
es
scas
xor
mov
pop
push
icebp
pop
pop
mov
mov
popf
cmp
jne
outsb
xor
fildll
lcall
in
inc
mov
scas
cmp
sbb
xchg
sub
sub
pop
or
fsubrl
jl
subl
or
jg,pn
push
xchg
xchg
test
pushf
bound
iret
shr
sbb
hlt
and
pop
xor
test
lds
pop
ss
sahf
cmp
pop
xlat
imul
ret
mov
push
mov
jl
mov
jl
ljmp
mov
xor
leave
mov
jmp
daa
lcall
lcall
mov
fildl
js
and
lea
and
jl
cs
dec
pusha
faddl
jo
test
xchg
sar
push
mov
jbe
push
push
cmp
mov
cs
mov
loopne
add
insl
cs
cmpsb
stc
inc
popa
mov
out
insb
xor
pop
pop
das
std
or
test
int3
stc
mov
repnz
push
aas
xchg
inc
fiadds
jge
sub
icebp
adc
fdivl
movl
sbb
xor
pop
jo
in
jg
movb
ss
fisttpll
xor
push
aam
cmpsl
aas
cs
leave
loop
cli
or
or
aaa
cmp
sub
and
rcrl
mov
xor
call
mov
and
adc
cmpsl
in
js
imul
push
ljmp
call
jo
inc
shll
xlat
jmp
dec
js
and
fs
pop
xchg
dec
cmpsl
push
aad
mov
jno
xchg
xchg
das
stos
into
clc
popl
jb
int
pop
push
lahf
dec
mov
mov
fcmovbe
enter
or
orb
ss
add
sub
mov
cmp
jl
pop
shrl
push
jne
test
lock
fidivrs
adc
mov
or
dec
sbb
jo
mov
ds
mov
pop
movsb
lock
or
jns
sti
jbe
sahf
push
xchg
xchg
dec
push
int3
push
out
jne
pop
subl
pushf
movsb
loopne
jle
jne
mov
sbb
sbb
mov
sub
jne
jns
lret
lock
out
hlt
xchg
xor
gs
push
in
cmp
inc
lret
pop
add
bound
sbb
inc
fsubp
pop
push
outsb
mov
inc
mov
test
mov
xor
lret
jl
aam
push
mov
andl
inc
cmp
pop
outsb
and
cmp
cmc
shld
cmp
sub
mov
xchg
stc
int
decl
ljmp
lods
mov
mov
inc
dec
add
adc
in
mov
rcl
pop
scas
push
dec
xor
cmpsl
sbb
aad
push
inc
push
sbb
push
push
dec
dec
orl
sub
test
dec
cmpsl
pop
addr16
jns
rcll
mov
outsb
std
inc
and
outsb
push
lods
jge
fisttpll
nop
hlt
and
mov
cli
pop
jmp
dec
sub
ss
xchg
icebp
sbbb
adc
mov
rclb
xchg
call
push
xchg
adc
mov
dec
xor
je
jg
aam
out
fists
es
incl
lock
mov
xchg
lea
xchg
popf
fdivl
lods
enter
sbbl
mov
js
out
mov
xchg
dec
enter
push
jmp
fstl
adc
lods
mov
sub
dec
mov
cmpb
ljmp
ret
in
test
sub
frstor
mov
mov
cmp
cmp
or
xchg
fwait
jne
push
dec
add
xor
inc
xlat
les
popf
push
hlt
jnp
jo
push
mov
jmp
mov
push
loop
into
gs
or
inc
dec
in
cmpl
repnz
adc
jns
xchg
cs
mov
jno
dec
mov
sbb
dec
dec
push
add
xchg
sub
jb
mov
jge
push
sti
push
adc
insb
sbb
iret
and
xchg
mov
imul
repnz
mov
xchg
call
loope
mov
addr16
add
cmp
inc
es
cmp
in
or
jns
inc
pop
into
cs
push
fistpl
ja
int3
cli
js
hlt
jmp
sub
jmp
out
dec
xor
rorl
jmp
enter
mov
pop
repz
mov
and
dec
arpl
or
pushf
into
xchg
imul
inc
pop
cmp
mov
pop
mov
dec
dec
jp
movsb
cmpsb
insb
mov
ffreep
push
daa
mov
out
cli
or
pop
jnp
nop
lea
stc
add
testl
test
loope
iret
stos
in
test
push
or
test
sub
in
adc
xchg
push
call
fdivrl
and
cmpsb
aam
xlat
push
sbb
add
sbb
dec
cld
out
jp
sub
jmp
sub
or
cs
and
push
mov
mov
call
push
cmpsl
sbbl
jno
adc
pushl
push
mulb
sbb
stos
dec
or
cmpsl
in
clc
mov
ja
cmp
loope
sbb
dec
dec
shl
out
test
push
xchg
jae
or
ss
push
lcall
push
mov
adc
iret
outsl
jg
push
sti
adcl
es
das
pop
cli
setge
test
lds
fwait
jne
scas
mov
int3
push
mov
and
out
out
test
adc
gs
fsubr
stos
stos
xor
fcompl
push
pushf
jns
dec
stos
lret
add
in
xor
jbe
shrb
pop
push
ds
cmp
and
push
ds
add
fimuls
pop
sub
hlt
jp
xchg
mov
fwait
xor
inc
lds
lcall
and
repnz
cmp
ret
or
call
enter
xor
inc
dec
pop
lds
or
jo
xchg
jp
insl
cmpsb
sbb
inc
loope
jb
aam
push
insl
aas
aad
scas
mov
push
mov
sti
pop
xchg
sub
lds
test
mov
mov
ja
arpl
inc
jnp
jmp
mov
movsl
lahf
ss
or
push
es
ficomps
cmp
imul
jne
das
cwtl
jnp
or
in
insl
add
add
jp
xor
push
and
sub
inc
push
adc
mov
aam
outsl
clc
fcomps
mov
lcall
xor
movsl
ret
push
jp
int
push
lret
call
mov
test
std
pop
andb
and
inc
xor
and
jnp
dec
rorl
dec
pop
jl
pop
scas
adc
or
xor
inc
in
mov
mov
mov
push
lret
andl
dec
push
dec
jge
in
imul
andb
pop
inc
push
xchg
adc
arpl
mov
in
insl
adc
mov
sbb
push
push
mov
adc
xor
jb
pushf
mov
les
testl
leave
mov
loope
ret
adc
push
jae
lret
and
push
pop
mov
dec
cmc
dec
inc
aad
lds
adc
sarb
pop
cmp
xlat
mov
ror
sbb
and
int
popf
dec
push
leave
xchg
push
sub
xor
fwait
xchg
inc
ffree
in
or
lods
in
ret
subb
pop
lds
mov
cmp
sbbb
xchg
adc
call
or
mov
jl
lret
lock
adc
push
lds
cwtl
push
daa
testl
cmpsl
clc
sub
fistpl
cli
push
push
jl
add
test
test
push
add
push
inc
push
push
aad
iret
fwait
repz
jb
pop
aaa
iret
cmpsl
or
addr16
xor
out
jns
sbb
xchg
stos
mov
popf
mov
jno
xchg
jnp
test
pop
xchg
xchg
jg
inc
mov
push
inc
faddl
push
and
jae
push
mov
mov
push
in
lret
pop
fbstp
push
mov
data16
mov
fmul
mov
dec
add
lds
lahf
mov
xchg
out
inc
xor
mov
jns
mov
add
push
out
stos
andl
aas
aad
gs
cltd
lret
addr16
sbb
out
test
pop
jp
pop
inc
ficomps
sti
gs
repnz
sub
mov
addr16
adc
and
icebp
mov
add
mov
fdivl
push
xrelease
aas
cmp
xchg
jmp
jge
out
nop
and
cmpsb
insb
lds
iret
sbb
and
push
pop
xchg
cmp
push
mov
sub
sti
dec
or
xchg
fldl2e
jnp
xchg
cli
sbb
pop
out
inc
bswap
aaa
inc
jl
mov
push
popf
loop
xchg
into
jns
shl
mov
std
mov
sub
xor
insl
jns
mov
dec
lcall
rcll
mov
imul
out
shrb
mov
filds
push
add
adc
push
xchg
inc
push
mov
lahf
scas
sub
jecxz
sbb
icebp
adcb
mov
enter
movl
pop
mov
or
xchg
jge
dec
pusha
add
pop
in
in
adc
ljmp
mov
mov
jo
lock
sti
xchg
cmp
sbb
jp
cltd
movsb
pop
xchg
adc
enter
lcall
das
aaa
das
test
es
and
inc
scas
inc
xor
jae
nop
faddl
fnstcw
pop
pop
pop
call
icebp
xchg
sbb
cmc
jmp
xchg
jne
movsl
mov
push
sbb
cmp
call
loopne
addr16
lods
loop
or
sbb
mov
add
lret
pop
push
jmp
xchg
imulb
pushl
adc
or
mov
fnstenv
sbb
cltd
cmp
rol
icebp
and
hlt
xchg
and
jb
ds
pop
xor
mov
neg
dec
or
js
or
imul
or
jle
test
pushf
iret
pop
fwait
mov
lock
and
dec
in
sbb
mov
adc
rol
fnstenv
fmul
adc
mov
sbb
inc
dec
pop
push
mov
adc
xchg
cs
dec
ljmp
jno
jnp
cmp
imul
gs
lods
push
pushl
push
sub
fstpt
inc
lret
lcall
sub
in
test
xchg
notb
sub
les
enter
ret
xlat
mov
pop
cmp
outsl
inc
xchg
xchg
mov
fiaddl
pop
int3
lret
pop
inc
ja
mov
or
ja
jns
xor
out
jp
fcoms
inc
push
mov
jnp
subl
cwtl
enter
int3
arpl
andb
loope
int
sub
pushl
mov
sbb
pop
loope
stc
dec
add
dec
lret
in
and
popa
fs
xchg
xor
pusha
add
mov
lcall
pop
xchg
xchg
fadds
push
pusha
sahf
pushf
add
rorb
dec
or
pop
mov
cmpsb
and
inc
sub
ret
inc
ljmp
or
sbb
out
arpl
mov
daa
xorb
dec
mov
jp
lea
inc
std
push
hlt
jle
sub
inc
mov
push
rcll
jne
dec
lret
mov
ret
rclb
andl
xor
call
rcl
jno
adc
mov
test
push
fnstcw
xchg
fidivl
ljmp
sub
hlt
jp
xor
or
and
push
mov
or
lcall
push
das
mov
lcall
xchg
dec
cmpsb
or
dec
and
mov
pop
lock
lock
ljmp
xchg
and
vmread
test
mov
mov
cmp
lock
mov
mov
sarb
fs
movsb
daa
mov
subb
adc
fwait
sbb
loopne
movsb
dec
adc
jno
pop
push
cmp
aas
inc
in
lods
jbe
inc
sub
stos
fnstcw
push
or
outsb
mov
fdivp
xchg
push
shlb
add
popa
daa
xchg
or
imul
or
das
mov
inc
loop
mov
scas
xor
jnp
pop
hlt
ss
rcll
pop
stos
cmpb
pop
cmp
out
sbb
mov
cltd
mov
lods
inc
fstpt
outsl
mov
int
push
jmp
imul
mov
mov
into
in
daa
mov
gs
stc
mov
or
sub
mov
mov
test
push
in
fidivrl
mov
adc
sub
mov
inc
mov
mov
jns
jnp
mov
and
dec
mov
inc
pop
sbb
out
lea
andb
leave
insl
jnp
and
lea
sahf
or
stos
adc
int3
or
bound
jbe
movsb
xchg
fstl
xor
adc
test
dec
push
sahf
mulb
fcompl
hlt
inc
movsb
mov
jg
mov
add
aaa
and
rclb
pop
push
or
pop
std
add
and
push
out
scas
push
pop
fisubl
stc
or
lods
push
sbb
out
cmp
rolb
xchg
xor
mov
cmp
cwtl
es
fmull
jns
aad
pop
push
pop
sub
mov
inc
fildl
or
jae
add
or
mov
fdivs
fstps
imul
icebp
xchg
mov
and
pop
jle
or
dec
mov
mov
ret
push
out
xchg
movsl
mov
ds
ljmp
scas
inc
jl
sub
insl
mov
aas
mov
cli
add
jge
sbbl
cs
in
cmp
lods
pop
mov
pop
mov
sub
pop
adc
mov
enter
pop
pushl
push
out
xchg
xchg
push
lret
mov
xchg
jo
je
fadd
fidivs
mov
jecxz
push
mov
inc
stc
cmpb
je
push
fmull
jmp
cs
or
xor
mov
jmp
or
imul
jecxz
scas
inc
fistps
stc
fidivl
sub
inc
loopne
mov
mov
dec
lods
xor
loop
dec
or
fistpl
test
push
pushf
xor
fucompp
inc
cld
nop
inc
loope
sbb
cwtl
xor
jmp
lret
jg
cmp
in
pop
push
lock
inc
sbb
sub
xchg
aad
mov
add
cld
inc
push
es
xchg
bound
imul
call
out
mov
cmc
movsl
fwait
or
mov
xor
jnp
sbb
xchg
and
out
xor
mov
fildl
dec
and
in
sub
jno
fisubl
jl
das
cmp
stos
mov
sbb
sar
pushf
pop
lods
insl
rcl
ljmp
test
fs
adc
ds
inc
sbbl
mov
sbb
push
pop
pushf
lahf
stos
mov
sub
je
sub
add
int3
pop
xchg
mov
ret
and
jle
cmp
addr16
and
fmull
lahf
push
test
adc
fbld
mov
dec
jne
das
arpl
inc
rclb
mov
add
fwait
test
lret
sti
lcall
xchg
xorb
ss
lock
jge
pop
ja
add
push
shrl
pop
mov
fcomps
cmc
mov
les
adc
mov
cmp
push
les
pop
mov
inc
pop
lret
mov
shrb
adc
or
loop
es
arpl
jb
mov
bound
push
mov
or
sbbb
mov
push
cmp
xchg
fists
lea
adcb
test
jle
xchg
mov
lahf
mov
xor
adc
and
sbb
data16
or
inc
inc
mov
jge
iret
outsb
xchg
sub
cmpb
mov
xor
xchg
or
or
gs
lcall
jecxz
jae
sub
mov
scas
add
sbb
xchg
outsl
test
xor
das
idiv
and
leave
test
sti
addr16
pop
add
mov
aas
pop
xor
xor
icebp
ljmp
pop
add
cmp
push
mov
ficoml
sub
add
mov
xchg
jecxz
out
and
movsl
push
mov
fs
jno
dec
scas
lds
stos
ja
jne
inc
lods
jecxz
adc
mov
and
sub
je
outsb
out
pop
xchg
mov
inc
adc
mov
push
lods
call
inc
inc
out
pop
in
rolb
ss
addr16
ja
fcoml
xchg
xchg
sub
repz
andl
mov
shrb
ja
xchg
push
mov
xchg
in
or
add
mov
pop
adc
sub
sbb
in
add
inc
ret
jl
fs
cmpl
jne
enter
sbb
cmp
mov
adc
pop
pop
sbb
dec
pop
out
dec
aas
lods
cmp
bound
sbb
sub
pop
inc
pusha
push
mov
or
mov
mov
out
aad
xchg
sbb
ljmp
mov
cld
jae
adc
enter
into
add
mov
mov
mov
push
push
pop
addr16
adc
add
xchg
add
pop
dec
fs
jg
fcomps
dec
add
test
sbb
adc
jecxz
mov
fmul
icebp
enter
push
mov
fadds
add
pop
xchg
mov
int3
das
inc
xchg
stc
fsubrl
mov
mov
pop
imul
aas
mov
lcall
pop
pop
call
gs
adc
xlat
inc
insb
add
push
xorl
push
flds
and
pop
jb
jmp
cmc
or
pop
and
mov
dec
aaa
or
movsl
insb
mov
inc
nop
pusha
mov
out
in
pop
pop
ds
dec
pop
inc
fsubs
inc
pop
sbb
dec
dec
cltd
mov
insl
fdivl
iret
pop
ljmp
push
mov
test
sub
test
ja
sbb
arpl
imul
sahf
imul
mov
dec
mov
xchg
push
mulb
aaa
push
sub
jbe
fldt
cmp
xchg
cli
pusha
icebp
jo
ljmp
cmp
jae
lods
sub
mov
pop
jnp
mov
lahf
jb
push
clc
pop
mov
sbb
fwait
inc
gs
lock
mov
insb
lock
popa
inc
ret
arpl
outsl
loop
dec
leave
and
out
jge
push
push
mov
data16
mov
xchg
add
mov
popf
sub
ret
xor
addb
aaa
pushf
lret
popa
icebp
sbb
xchg
xor
loopne
xchg
dec
aad
les
cmpsl
mov
pop
push
fstpl
push
scas
jns
std
stos
test
in
jg
add
mov
dec
mov
jl
lret
push
xchg
add
cmp
mov
cmp
sub
dec
sub
stos
mov
shl
adc
rcrl
ja
sub
dec
mov
jp
xchg
inc
std
adc
and
cli
insb
mov
das
dec
lods
pop
stc
vzeroupper
negl
out
push
mov
sub
inc
xlat
mov
fimull
stos
mov
push
in
and
adc
adc
imul
shl
add
pushf
or
xchg
ss
repnz
mov
imul
inc
mov
cmp
ljmp
cmp
ret
fisubs
add
lcall
fwait
sti
sbb
pop
in
push
jle
pop
jo
data16
mov
mov
lods
outsl
or
mov
push
pop
sub
lahf
ret
xor
lds
popf
ss
adc
imul
pop
stos
icebp
xchg
push
or
push
xchg
in
repnz
add
sub
sbb
and
cmp
jnp
enter
mov
or
testl
in
bound
add
aas
pop
repz
mov
adc
xor
inc
scas
push
call
xor
lcall
sub
addr16
ret
sub
sbb
dec
xor
jno
dec
sahf
mov
dec
outsl
test
xchg
imul
push
mov
and
sbb
pop
movsb
dec
dec
xchg
mov
sbb
ret
mov
dec
shrb
lret
jl
test
dec
or
into
and
sub
lret
and
and
dec
sub
test
dec
lahf
sub
test
mov
fcomps
movsl
out
jbe
add
jecxz
andl
mov
into
icebp
es
push
jle
fstpl
push
mov
push
lods
arpl
push
je
rorb
movsb
rolb
popa
mov
push
ret
sbb
lds
andb
outsw
sbb
test
andb
push
mov
xchg
add
ds
and
push
mov
pop
xor
dec
out
dec
or
les
mov
push
xchg
clc
pop
rolb
mov
faddp
in
pop
or
jl
sub
shlb
cmp
int3
icebp
movsl
fs
jmp
fsubrl
push
leave
push
mov
jp
mov
xchg
dec
jg
das
add
pusha
in
mov
lods
fnstcw
jle
adc
adc
pop
ss
pop
hlt
sub
fcompl
dec
adc
aaa
test
jge
mov
test
arpl
pop
stc
dec
sub
sbb
adc
adc
mov
dec
fbld
les
mov
hlt
xchg
cli
stos
push
jmp
test
sbb
not
lock
sub
mov
scas
les
lods
lods
ds
ret
pop
xchg
mov
loope
icebp
jns
mov
add
mov
mov
testl
jae
inc
fstpl
insl
add
shrl
cwtl
xor
jne
push
pop
mov
nop
and
or
aad
and
imul
pop
daa
or
add
xchg
mov
in
mov
sbb
mov
mov
aaa
mov
push
xor
xchg
push
gs
fidivl
lret
adc
or
fsubrl
mov
lods
sub
arpl
popf
mov
and
xchg
sbb
mov
mov
std
dec
lods
jg
fisubs
pop
in
push
push
cmp
loope
pop
pop
jle
and
push
loopne
ljmp
insb
jno
or
add
lcall
aam
cmp
dec
insl
lret
dec
mov
xorl
add
and
dec
and
and
ret
sahf
sub
mov
mov
and
rolb
scas
cmp
add
or
jne
movsb
pop
mov
fsubrl
ljmp
negb
mov
mov
add
iret
jmp
aad
push
clc
mov
pop
repnz
dec
aas
js
aam
mov
ja
or
ss
imul
xchg
jg
fidivl
dec
push
mull
dec
xor
aam
aas
cld
repnz
fstpl
cmpsl
mov
fldt
push
or
mov
movsl
ffreep
fbstp
add
ret
shrl
movsb
lahf
mov
test
arpl
das
sbb
adc
sub
loop
aas
and
ficompl
into
jle
pop
es
xor
mov
dec
lock
add
push
jne
sbb
dec
mov
je
xor
inc
push
push
repz
lods
sub
dec
xchg
jge
call
loope
imul
dec
add
movsl
iret
add
xchg
je,pn
fmuls
stos
or
mov
loopne
fidivrl
cwtl
lds
jp
pop
lods
ds
inc
pop
outsb
jae
dec
or
iret
fldt
cwtl
imul
insl
pop
cmc
popf
jecxz
sbb
push
dec
mov
mov
out
xor
test
mov
xor
jbe
sbb
jb
pushl
test
arpl
mov
lcall
mov
lcall
cltd
cmp
shr
popf
inc
mov
addb
pusha
pushf
sti
adc
pushf
cmp
cmpl
add
adc
fwait
sbb
jae
cmp
adc
xlat
xchg
divb
lods
jmp
imul
jmp
sbb
sub
push
and
jae
loop
add
and
int3
dec
lahf
push
jmp
push
jns
mov
gs
in
or
sbb
xchg
jbe
push
je
sbb
insb
cmpsl
popa
ror
jbe
inc
loope
dec
sbb
push
int
mov
inc
out
fstps
pop
das
ljmp
add
xor
pop
andl
aaa
add
mov
inc
pushl
inc
pop
pusha
xchg
adc
in
lea
mov
pop
jge
cmp
xchg
sbb
jne
push
aad
scas
adc
jmp
push
pop
sub
pop
out
and
jae
fisttpll
pushf
jecxz
sbb
repnz
test
push
sbb
ss
cmp
hlt
xchg
pop
jb
aad
sahf
cmp
mov
je
pushf
js
aaa
inc
in
testb
pop
xchg
std
cmpl
scas
mov
jge
outsb
hlt
jo
add
or
add
push
mov
js
into
xchg
cld
shrw
sbb
ficoml
rclb
cmp
push
push
mov
or
pop
mov
pushf
sub
dec
dec
inc
divl
movsb
out
cmp
ss
and
jae
xor
test
stos
cmpsb
xor
lock
xchg
inc
loope
jno
enter
jb
in
insb
dec
sbb
mov
xchg
or
xchg
jno
sbb
mov
add
or
sti
popf
add
pop
fwait
push
and
jl
xchg
test
mov
imul
fidivrs
push
adcb
lcall
mov
push
ret
jnp
sahf
xor
xor
mov
pop
mov
cmp
cmp
movsl
clc
aad
sub
add
cmp
inc
rolb
movsl
in
jb
imul
sahf
sbb
pop
popf
rolb
push
jmp
jl
add
jb
aam
mov
mov
add
cld
jle
pushf
push
stc
sub
and
dec
jp
xlat
lods
xor
or
cli
mov
cli
mov
les
dec
pusha
sbb
mov
in
xor
cmp
xchg
dec
in
cmp
pop
cmc
pop
insl
add
lret
mov
mov
add
mov
inc
adc
add
movsl
cmp
pop
stc
xchg
or
ret
rorl
cmpsb
mov
inc
sub
jo
movsb
adc
pop
push
add
add
sbb
pop
test
enter
cld
pop
sti
dec
dec
stos
jnp
mov
inc
mov
jne
jb
dec
cwtl
test
enter
lods
jmp
xchg
push
pop
lods
rclb
xor
mov
jmp
dec
test
push
jle
dec
movsb
mov
sub
sub
jl
test
loopne
adc
addr16
aad
xor
push
popf
stc
push
orl
inc
arpl
pop
sbb
pop
push
imul
mov
jns
arpl
jo
cltd
lea
dec
xor
fs
xchg
cmpsb
mov
xorl
in
mov
mov
mov
jge
jns
sbb
mov
push
scas
ret
loope
jb
lahf
jge
cmpsl
imul
repz
or
into
and
sub
icebp
ret
pop
and
loop
push
or
sbb
shrl
sbb
push
imul
pop
in
adcb
cmpsb
ds
lds
xchg
jecxz
shl
jmp
xchg
mov
out
mov
icebp
mov
mov
pop
insb
das
mov
mov
cmp
pop
insb
pop
mov
mov
and
stos
test
fnsave
sub
dec
jp
dec
lods
push
and
adcb
push
les
shlb
pushl
or
leave
cld
lcall
in
test
jmp
test
fwait
and
push
out
cld
cltd
inc
stc
cwtl
jne
sbb
adc
pop
repz
jp
test
mov
add
cmpsl
outsb
xchg
icebp
sahf
xor
xor
sub
mov
pmuludq
cmpsb
clc
imull
sbb
and
sub
sub
and
lret
lea
push
push
sahf
xor
mov
rorb
cmpb
jecxz
fsts
cmp
subb
and
mov
popf
jecxz
add
jle
adc
xchg
jmp
mov
push
inc
filds
xor
lods
and
push
shl
test
ret
mov
sbb
sbb
dec
sti
push
stc
add
mov
repnz
je
fstpt
shl
jecxz
pop
int
cmpsl
jecxz
inc
movlps
xlat
cs
jge
mov
mov
dec
mov
mov
mov
add
dec
pop
mov
dec
out
repnz
pop
enter
inc
lock
xchg
lahf
imul
leave
test
dec
sub
sbbb
inc
insb
shrb
test
push
lods
xor
mov
stc
je
insb
popf
imull
jno
sti
lahf
divl
mov
popl
pop
adc
mov
stos
cmp
push
sub
les
fimuls
mov
pop
and
out
xchg
push
test
mov
lahf
in
inc
mov
loopne
es
in
mov
aaa
jns
jno
roll
mov
xor
xor
push
rorl
imul
or
xchg
mov
push
fldcw
lret
pop
mov
lds
insb
jnp
add
push
ret
dec
mov
inc
mov
ret
push
test
add
and
aam
scas
push
ja
inc
stos
std
dec
jne
xchg
test
stos
sbb
cmpsl
push
mov
test
mov
mov
push
mov
jb
sbb
dec
shll
add
push
divb
rcrl
fildl
out
mov
in
mov
cmp
adc
sub
lahf
in
test
out
icebp
pop
adc
or
jb
and
gs
inc
cmp
or
insb
xchg
shrb
test
inc
shrl
rcrb
sar
xor
loope
nop
data16
push
push
xor
cmp
es
dec
xor
push
push
cmp
aad
push
xchg
lahf
sti
dec
pop
ss
dec
dec
fdiv
in
sbb
xlat
dec
xchg
mov
sub
cmpsb
and
dec
in
stos
cmpsl
jb
push
imul
lcall
or
scas
xchg
rolb
cmp
push
pop
int3
arpl
push
repnz
das
fbstp
cs
and
mov
xlat
pop
mov
push
mov
ds
lds
push
iret
cmp
dec
scas
clc
js
jge
mov
sbb
les
push
jo
mov
xor
adc
clc
dec
inc
fstpt
lcall
mov
cmp
pop
xchg
dec
loopne
pop
clc
stos
dec
sbb
jecxz
out
rcr
fildl
or
stos
lahf
mov
imul
lds
sti
jnp
cmp
out
test
inc
in
add
ds
call
adc
xlat
mov
inc
call
pop
push
out
xchg
jle
outsb
leave
dec
jmp
stos
sbb
dec
in
pop
cmpsb
test
mov
jae
loope
lds
pop
fstpl
push
ret
iret
xchg
xor
icebp
dec
call
test
ja
mov
and
or
jne
icebp
adc
sbb
mov
pop
pushf
out
iret
jp
clc
mov
push
cmp
add
rcr
outsl
or
jb
out
mov
es
test
mov
sbb
cmp
insb
dec
mov
mov
xchg
neg
fwait
out
stos
pop
jmp
xor
cmp
test
les
mov
dec
outsb
xor
int3
sub
pop
test
lds
enter
add
add
sub
cmpsl
add
sub
cmp
or
pop
xor
ja,pn
xchg
adc
cmp
hlt
xorl
cld
outsl
ret
lods
ss
fsub
push
scas
inc
je
out
repnz
xchg
int3
arpl
xor
adc
aam
ret
xor
sbb
fadd
shrb
jbe
loopne
dec
in
pop
cld
push
cmpsb
cmp
xchg
addl
mov
mov
dec
or
loope
fcoms
lea
xchg
mov
into
gs
pop
cwtl
jbe
loop
and
sahf
jne,pn
fnstsw
lret
daa
xor
jp
or
fstpl
mov
inc
fisubs
shll
jno
ret
push
stos
adc
adc
ret
dec
dec
pop
dec
push
pop
out
cmp
lcall
sbb
int
mov
je
jo
cmc
mov
rorl
xacquire
not
int3
sarb
xor
bound
insl
add
out
stc
push
xchg
sub
jp
inc
lods
inc
aaa
iret
jl
dec
loope
int
mov
push
mov
mov
xchg
jb
xchg
pusha
pop
scas
icebp
mov
dec
mov
shll
pop
icebp
notl
xlat
enter
js
fs
lcall
in
add
sub
out
scas
std
cltd
mov
add
add
push
fisubl
aam
mov
mov
dec
jecxz
js
rcll
mov
dec
shlb
or
popf
ret
xchg
dec
sub
movsb
pop
insb
pop
lods
popa
lcall
lds
inc
jecxz
loop
out
out
test
lea
cwtl
add
and
rol
add
xor
adc
xlat
xlat
pop
imul
sub
repz
mov
sub
stos
iret
fcmovnu
push
push
or
idiv
dec
mov
xchg
lods
repz
rcr
das
mov
xchg
sub
xchg
pop
aad
daa
negl
cmp
insb
xchg
es
dec
pop
testl
mov
xor
mov
lea
mov
rorb
xchg
iret
retw
mov
dec
push
addb
jno
loope
mov
jns
div
dec
inc
push
xchg
sub
mov
imul
sbb
mov
pop
mov
push
cmc
pop
enter
inc
lret
adc
and
hlt
mov
hlt
enter
daa
cmpsb
push
pop
pop
leave
add
arpl
int3
or
pusha
pop
pop
into
ficomps
cmp
xchg
fmull
mov
ret
push
pop
fisttps
test
fildl
jp
fsub
sbb
imul
mov
dec
jecxz
dec
mov
sub
imul
jle
mov
add
cmp
push
in
mov
aaa
push
imul
in
pop
lds
mov
jecxz
loope
dec
test
xchg
push
fucomip
and
loope
fisttpl
fcomip
inc
fnstenv
rolb
lea
pop
adc
rorl
cmc
mov
lcall
arpl
out
lcall
outsl
sti
mov
movsb
nop
push
lock
int
cmc
lods
inc
lock
in
stos
stos
mov
push
cmc
test
cmp
pusha
scas
pusha
ds
repz
gs
inc
pop
xor
call
jno
cwtl
leave
sub
or
data16
dec
pop
cmc
jg
pop
aas
fcoms
push
out
pop
stos
repz
aaa
xchg
sub
sub
xor
inc
inc
cmp
imul
dec
mov
rcl
imul
adc
jb
sbb
sahf
mov
cwtl
in
fsts
test
outsl
daa
sub
inc
cltd
or
insb
daa
xchg
arpl
lahf
pop
pop
out
and
jbe
je
rol
fwait
push
xchg
sub
loopne
in
pop
mov
roll
mov
cmp
cmpsl
xchg
jge
stos
inc
negl
sbb
icebp
lock
shll
mov
or
mov
push
xchg
add
andb
push
inc
fdivrl
push
arpl
lea
sbb
movsb
adcl
pop
jg
push
mov
testl
rol
or
adc
ss
sti
aam
enter
pop
pop
icebp
xor
js
call
cmp
subb
mov
test
aad
outsl
mov
ficoms
push
xor
outsb
outsl
push
mov
cmp
lret
sbb
stos
dec
dec
ds
inc
mov
hlt
lcall
sbb
and
sub
cltd
lret
push
clc
ficompl
add
dec
pop
mov
xchg
sub
stc
add
addb
inc
loope
push
out
mov
push
mov
fcmovne
popa
or
and
pop
and
jg
push
cli
cmp
je
ret
push
push
in
ja
mov
mov
mov
and
mov
push
imul
pop
mov
sbb
addr16
add
ds
pop
mov
cmp
cmp
cmp
jmp
ret
fsubs
mov
push
sahf
into
shlb
mov
add
out
push
in
ja
adc
adc
aam
jns
pop
cmp
xchg
add
xchg
mov
sbb
mov
xchg
pop
rolb
sbb
outsb
mov
mov
jb
nop
inc
xor
cmpsl
cld
xchg
sub
enter
mov
lahf
xor
sbb
add
or
inc
cli
in
pop
xchg
cs
dec
sbb
add
cmc
das
movsl
icebp
or
adc
sbb
xchg
add
xchg
xchg
out
test
mov
out
xor
and
shl
fucom
ljmp
lret
mov
xor
push
push
mov
mov
fistpll
sub
or
in
pop
sub
in
jge
pop
sbb
add
mov
adc
es
mov
leave
fdivrl
pushf
jg
add
inc
fistpl
popf
inc
out
repnz
stos
cli
aad
xor
add
pop
mov
xchg
push
addr16
xor
mov
cmpsl
out
push
or
mov
popfw
inc
mov
push
loop
sahf
fimuls
sbb
outsl
cmp
mov
loop
pop
fucomi
lahf
add
adc
inc
negl
mov
cmc
mov
stos
push
js
ljmp
jb
dec
dec
fnstsw
or
mov
sub
test
push
aas
fwait
imul
jae
cld
mov
mov
rolb
test
mov
testb
aaa
cmp
or
cmp
rcll
add
xchg
andl
or
shrl
mov
inc
push
imul
add
sub
ss
xor
insl
shlb
fsubp
addr16
adc
int3
pop
pop
jae
int3
pushf
fildll
jge
mov
mov
loope
adc
addr16
sarb
and
daa
sbb
je
mov
fistl
lea
rcrl
sub
dec
jmp
incl
call
or
xor
int
xchg
jns
fdivrs
lretw
or
mov
out
ja
fidivl
into
rclb
sbb
lods
sub
bound
or
ljmp
das
dec
out
mov
mov
pop
sub
insl
sahf
pop
shrl
out
push
ja
cmp
lods
adc
sbb
loop
shrl
adc
lcall
fcoml
mov
rol
dec
fistpll
jl
xor
into
gs
scas
popa
clc
pop
das
es
mov
push
mov
pop
cld
shll
les
cmp
lods
inc
and
pop
repz
int3
das
jp
mov
imul
inc
les
inc
fsubl
arpl
mov
ret
mov
loop
mov
xchg
testl
daa
add
lahf
jae
fidivs
lds
mov
shrl
cld
dec
in
mov
xchg
jnp
sub
cmpsl
stos
inc
sbb
les
test
ja
popa
clc
ret
mov
push
push
pop
hlt
ja
or
ret
test
leave
adc
push
mov
fstps
mov
repz
push
pop
mov
adc
fsts
push
mov
lock
mov
jb
aas
aad
dec
or
inc
add
sahf
cld
dec
push
icebp
mov
in
insl
mov
enter
loopne
sub
inc
pop
jmp
mov
lcall
stos
mov
sbb
push
lods
mov
or
jnp
sbb
sub
or
out
fcom
push
in
push
add
inc
int
lret
mov
addr16
sbbl
jmp
rcll
aam
fs
push
xchg
cs
dec
out
cmp
out
inc
fcomp
push
scas
inc
inc
dec
push
jmp
sarb
cmp
jmp
inc
enter
rclb
shll
push
pop
shlb
fcmovnb
pop
int
data16
mov
xor
xor
pusha
notl
aas
iret
mov
dec
inc
pop
mov
pop
lret
aad
pop
push
add
inc
pop
clc
push
fidivrl
ror
lret
daa
mov
inc
gs
cs
fstpl
into
iret
inc
fadd
pop
out
dec
pop
lahf
ss
aam
lret
ds
jnp
push
call
cli
or
cmp
inc
push
or
or
inc
movsb
mov
mov
dec
outsb
imul
fwait
pop
cmc
lea
push
add
in
xor
push
or
jns
adcb
adc
clc
test
insb
push
inc
into
out
mov
stos
scas
push
out
ret
fsubr
std
inc
jmp
call
push
fs
xor
stos
das
lods
fcoml
mov
jmp
mov
xchg
lock
insb
cli
aas
iret
mov
or
push
leave
sbb
adc
test
inc
sti
movsb
inc
ja
es
aad
shlb
movsb
mov
mov
sbb
push
sub
sub
shl
hlt
dec
or
dec
hlt
jnp
or
sahf
lea
jo
scas
sbb
loope
idivl
rcrl
inc
hlt
jo
sbb
mov
pop
imul
xchg
dec
and
mov
popf
mov
pop
or
cmp
test
pop
pop
adc
out
sub
inc
lcall
xor
dec
jge
je
add
fistps
cli
stos
mov
pusha
lret
fstpl
push
xor
inc
movsb
cmp
cmp
ret
pop
xchg
push
loope
add
and
add
add
cli
or
imul
cmp
call
dec
gs
and
push
mov
lds
pop
pop
mov
fstpt
xor
bound
jnp
cmp
movsl
sti
xor
in
shll
test
xor
adc
jns
out
jle
loop
xchg
out
pop
inc
jge
jnp
adc
cwtl
lea
cmp
lahf
test
in
les
cld
fwait
bnd
mov
cmc
dec
ror
movsb
scas
jbe
repz
hlt
adc
jns
adc
lock
lcall
mov
or
mov
or
shlb
inc
out
fisubs
movups
es
insl
cld
xchg
lahf
test
jb
add
je
gs
scas
push
xor
int
test
arpl
out
sbb
and
call
mov
pop
icebp
loopne
add
mov
inc
inc
fidivs
xor
or
mov
sbb
loopne
ss
sub
shrb
cltd
leave
cmc
inc
adc
push
dec
in
add
adc
or
xchg
sub
mov
add
or
test
sub
pop
cwtl
pop
jno
xor
jle
push
adc
out
lock
pop
cmp
mov
sbb
hlt
ficoml
repnz
cmp
inc
into
out
mov
push
xor
lods
inc
mov
pusha
push
jo
dec
jae
pop
xlat
jnp
jg
nop
push
mov
sub
mov
stos
ret
jg
pop
adc
fmull
mov
aaa
push
outsl
push
inc
lret
pushf
mov
add
push
adc
adc
mov
das
ja
pop
adc
mov
aad
mov
jne
inc
or
jae
cwtl
pop
stos
popa
lods
push
or
xchg
out
int3
cld
sub
adc
rorl
cmpsb
add
push
ss
pop
mov
inc
testl
sarl
enter
push
fwait
xor
loopne
xor
mov
call
xchg
add
or
data16
cwtl
mov
add
and
jbe
dec
cmpsl
insb
out
cli
pushf
push
xchg
les
mov
mov
pop
sub
mov
out
test
mov
push
cltd
mov
ss
stos
cmp
inc
fs
adc
cmp
add
je
ss
das
lods
cld
lret
ret
les
cld
test
repnz
sub
xor
aas
lcall
adc
sub
mov
dec
dec
in
int3
mov
jl
xchg
movsb
and
cmp
ret
repz
gs
js
sbb
push
mov
dec
adc
pop
shll
mov
scas
inc
fninit
push
cmpb
test
push
mov
pop
add
stos
mov
mov
mov
gs
in
jno
jle
push
sbb
or
loop
mov
push
ljmp
jno
lds
pushf
hlt
outsl
xor
mov
mov
ds
and
mov
movsl
dec
sti
cltd
dec
mov
rep
pop
bnd
mov
fcomps
push
les
stc
jno
jae
fldenv
jecxz
leave
add
push
cmpsb
js
btr
enter
jns
inc
fsubrl
sbb
or
dec
arpl
mov
ret
das
xor
xor
pop
xchg
mov
popf
push
xchg
pop
mov
lret
and
adc
xchg
stos
xor
fistpl
dec
out
call
hlt
mov
push
jp
js
xchg
clc
repz
cltd
xor
jle
fbld
add
fiaddl
mov
test
iret
pop
sbb
or
inc
jge
jne
jo
mov
jl
push
adc
xchg
sub
ret
popa
fadd
xchg
mov
and
dec
xor
pop
imul
lock
push
mov
sbb
and
shll
or
ficoms
js
lods
jbe
fnstcw
dec
cs
mov
cmc
dec
scas
inc
lret
std
and
push
stos
mov
into
in
imul
js
jne
mov
leave
testb
push
pop
ret
leave
inc
in
mov
xor
jge
push
push
and
mov
ja
mov
int
test
jo
lds
jp
sub
jb
movsl
or
in
mov
incb
bswap
push
stos
insl
sbb
mov
jmp
mov
sbb
jg
dec
dec
sti
dec
jnp
xlat
jmp
sar
nop
add
aas
mov
test
sbb
sub
and
mov
xchg
in
movsl
mov
push
cwtl
in
insl
jo
dec
lcall
sbb
ss
inc
pusha
ss
gs
pusha
push
out
shl
mov
push
outsl
out
mov
ljmp
push
or
push
adc
add
hlt
jl
stos
cmc
stc
scas
sub
sub
imul
outsb
pop
test
popf
lock
andb
sub
cwtl
dec
sub
mov
dec
dec
mov
fwait
sahf
inc
idivl
xor
ja
pop
lret
mov
lock
inc
xor
arpl
adcb
xchg
fsubl
fdivp
mov
sarl
dec
xchg
inc
sbb
fsubs
fs
cmp
xchg
dec
hlt
int3
xchg
ja
mov
test
out
pop
mov
or
dec
loope
push
adc
mov
and
scas
and
inc
dec
aaa
inc
ss
xchg
insb
xchg
fidivrl
sbb
in
sbb
repnz
or
mov
je
mulb
fisttpll
loope
xor
test
je
int
mov
mov
cmc
sbb
lcall
cmpl
lea
inc
cmc
inc
dec
fadd
into
and
in
pop
cmp
lods
hlt
mov
xor
xchg
loop
mov
out
push
mov
stos
cmp
and
popa
ss
lret
out
into
fsubr
push
es
in
pop
sub
pop
sbbl
jmp
lea
jmp
mov
add
cmpsl
ds
inc
push
xor
lcall
lret
mov
mov
sbb
out
and
mov
push
lahf
lahf
icebp
adc
lods
mov
aad
sbb
push
shl
hlt
inc
and
xchg
popa
mov
pop
dec
xchg
imul
xlat
in
das
outsb
hlt
adc
add
pop
hlt
aad
add
scas
inc
cmp
rcr
cmp
pop
lods
mov
ja
pop
loopne
mov
in
cmp
int
mov
push
adc
mov
xor
popf
jae
xchg
inc
shlb
mov
aas
stos
and
cmp
xchg
sub
icebp
out
jl
adc
mov
aas
aas
shlb
mov
lret
adc
insb
test
jmp
test
sub
int3
gs
push
jmp
inc
sub
jmp
test
loopne
aaa
jne
cs
jmp
push
pop
call
mov
popa
addl
aam
cli
and
fwait
out
lret
loop
sub
fadds
test
dec
dec
fistpll
mov
xchg
fimull
mov
daa
pop
xchg
pusha
xor
sbb
jno
popa
mov
lcall
cwtl
pop
fimull
je
cmp
ficomps
inc
ficoms
das
popa
test
adc
std
test
js
lods
fnstenv
cmc
test
sub
mov
fwait
les
cmpb
rorb
stos
and
out
fsts
sub
add
rorb
xchg
jb
je
hlt
xchg
sbb
or
arpl
xchg
xchg
ret
xor
sbb
popa
inc
arpl
jae
jle
jo
clc
sahf
and
adc
mov
aam
daa
or
pop
imul
pop
sahf
or
dec
or
leave
insl
std
mov
inc
insb
mov
jae
stos
mov
sub
inc
test
xor
mov
cmp
pop
popf
xor
sti
adc
out
ret
loop
sub
test
xor
call
pop
push
sub
outsl
push
lods
fdivl
mov
mov
bnd
jl
xor
iret
mov
mov
adc
push
sub
lods
pop
and
xor
inc
inc
fucomip
out
pop
aaa
rorb
push
push
imull
sub
add
dec
cmp
sub
mov
mov
into
enter
clc
pop
push
gs
enter
and
and
lods
push
inc
scas
daa
mov
out
push
fs
cltd
jo
xchg
clc
xchg
idivl
iret
mov
aam
sbb
mov
int3
fildll
lods
fdivrs
jo
cmpsb
push
mov
outsb
cmp
cld
push
fwait
cmp
xchg
mov
fidivl
mov
outsb
jo
and
or
sub
out
scas
lock
adc
lods
mov
aad
jbe
sub
pop
outsb
add
xchg
test
in
imulb
flds
xor
unpcklps
lahf
pushf
imul
mov
les
ljmp
adc
imul
mov
jnp
outsb
mov
xor
push
movl
mov
push
cmp
cmc
xor
test
jmp
sub
adcl
cltd
out
mov
or
pop
jle
sbb
clc
jg
lods
sub
xor
mov
add
push
clc
xchg
cmp
xchg
movsl
ret
hlt
jmp
and
sub
div
dec
repnz
mov
pop
enter
stos
rcl
jo
jne
repz
push
scas
xor
repnz
out
gs
mov
jmp
sti
xchg
inc
sub
pop
call
loop
add
sub
cmpb
lock
stc
lods
adc
daa
mov
and
cli
adc
cltd
fs
movsl
xchg
les
loopne
outsl
push
sti
mov
insb
cmpsl
loop
and
pop
cld
jbe
cmp
inc
jg
sub
orl
and
pusha
inc
mov
jb
mov
pop
repz
in
cld
aam
mov
out
aad
icebp
jns
scas
cmpsl
adc
mov
sub
pop
insb
outsb
loop
mov
adc
rclb
shlb
push
out
dec
dec
mov
pop
mov
push
xchg
into
lods
mov
gs
mov
mov
adc
dec
adcb
xor
push
dec
lock
int3
sti
popl
scas
cli
leave
adc
leave
es
sub
cmpsl
or
cltd
in
das
stos
adc
aaa
xchg
orb
ret
in
mov
fsubs
lods
xor
jmp
test
lods
aaa
mov
and
mov
mov
mov
add
xchg
rcll
pop
out
fs
mov
add
pushf
mov
dec
sbb
or
lahf
ss
popf
jecxz
movsb
dec
in
mov
add
fisttpll
xorb
sbb
cmp
pop
sbb
iret
jmp
mov
or
push
inc
andb
xchg
pop
mov
lods
sti
sub
mov
dec
in
add
stos
or
or
outsl
jge
push
pop
pop
fcomps
in
jne
cmp
popa
xchg
add
push
les
sub
ret
pop
imul
lods
mov
pop
jno
mov
sub
or
aas
aam
mov
inc
cmp
ret
hlt
adc
lret
not
into
in
cmp
inc
pop
jb
je
rcl
inc
fistpl
and
mov
repz
insl
cmc
cmp
dec
inc
lods
dec
and
xor
das
data16
sub
mov
or
fiaddl
nop
push
mov
jge
ss
andb
push
outsb
fldl
fucomip
xchg
mov
jno
cmp
dec
and
in
mov
clc
cld
stos
into
and
push
fnsave
and
jg
dec
xor
adc
xchg
mov
repz
pop
jo
add
sbbl
fwait
cmpsl
or
mov
jmp
bound
pop
inc
adc
or
mov
xor
test
jo
sbb
jo
jecxz
cmp
je
pushf
fldcw
xlat
cmp
leave
pushf
xsha1
cmpsb
int
jo
clc
jecxz
mov
enter
ds
rorb
icebp
mov
aaa
test
sbb
arpl
mov
ds
add
imul
xor
and
or
jb
sbb
fdivrp
sub
imul
filds
aam
pop
ljmp
jg,pn
incl
iret
outsb
jl
xchg
inc
iret
in
call
xor
pop
and
mov
ficompl
inc
loope
adc
xlat
xor
sbb
enter
fbld
dec
adc
scas
mov
adc
rcll
pop
out
mov
je
push
lahf
mov
sub
xchg
insl
xchg
inc
nop
pop
fidivrl
adcb
fwait
or
push
sbb
push
sbb
aam
scas
cwtl
out
nop
mov
test
aam
lods
cwtl
and
movsb
fcmovbe
lret
adc
cmp
mov
pop
cmp
rorl
push
push
sbb
adc
jae
dec
movsl
xchg
dec
inc
mov
pop
push
add
add
lods
int
scas
mov
dec
xor
jg
aad
push
cld
pop
lds
sbb
xchg
stos
insb
jb
inc
mov
adc
sbbl
fbstp
push
data16
das
push
mov
lret
out
aas
lss
icebp
pop
add
ja
mov
inc
push
in
dec
mov
and
ss
sti
inc
inc
xor
mov
decb
inc
inc
cli
in
and
push
mov
jmp
sub
int
pop
sub
daa
popa
dec
mov
sub
out
mov
ds
xor
cld
pop
mov
shl
push
call
and
filds
adc
cmp
pop
mov
mov
pop
fbstp
or
bound
jno
test
outsl
in
add
out
cmp
shll
stc
dec
or
xchg
loopne
mov
inc
push
cs
nop
inc
icebp
adc
out
mov
test
pop
cmpsb
sbb
xor
popa
rcrl
fdivs
popf
shrl
rcrl
mov
jb
dec
dec
sub
or
push
xlat
ret
sub
ds
sbb
aam
in
pushf
in
aam
sbb
addl
jne
dec
add
dec
xor
xchg
sub
add
cltd
dec
cmc
adc
push
rcr
jmp
popf
sahf
cmp
inc
fdivs
mov
imul
outsl
add
es
pop
mov
into
inc
and
enter
out
int
sbb
cmp
jge
test
xchg
out
in
aas
mov
cmp
daa
mov
jg
cmpsl
jl
std
enter
xchg
cmp
mov
mov
sbb
sti
xlat
and
in
int3
sbb
sahf
sbb
fsub
jno
mov
fwait
test
ss
data16
fmuls
xchg
pop
enter
sub
mov
mov
and
in
jne
pop
out
jg
jge
add
out
scas
je
sub
mov
cld
lcall
push
sub
mov
movb
and
push
enter
daa
adc
mov
je
cmp
pop
ds
hlt
aas
and
push
or
jp
jg
movsb
fwait
xchg
add
clc
xchg
sub
cltd
test
les
inc
in
cmpsl
lods
insl
sbb
inc
pop
or
in
scas
popf
pop
ret
lods
imul
icebp
mov
mov
xor
int3
xor
shrb
roll
pop
adc
jb
xor
xchg
call
pop
cmpsb
adc
movsb
mov
or
sbb
cmc
pop
push
jge
je
js
add
movsl
mov
mov
cmp
jl
aad
jae
inc
ret
jle
es
in
imul
mov
push
out
lds
mov
scas
out
pushf
aaa
push
ret
sbb
jo
xor
add
sbbb
test
pop
int
insl
popa
les
jg
movsl
xchg
pop
xlat
adc
leave
dec
xchg
scas
jp
mov
sbb
sar
push
clc
fwait
movsl
andl
mov
loope
jae
xor
aad
pop
cs
sbb
sbb
add
xchg
xchg
pushf
jecxz
bound
push
mov
sub
popa
pop
repnz
adc
ret
push
mov
jl
mov
sbb
gs
call
test
out
jp
imul
std
sub
sbb
pusha
dec
gs
int3
cmp
test
pop
testb
aas
rol
cli
jge
stos
rcrl
test
lock
loop
xchg
leave
fnstcw
pop
out
xchg
add
sub
jp
dec
pop
in
jg
push
jl
inc
daa
jae
mov
int
push
mov
fbstp
pop
adcb
adcb
sub
xor
add
add
push
sub
lds
shr
push
push
sub
xor
sahf
sub
scas
inc
jnp
loop
cmp
and
sub
outsl
pop
adc
mov
out
mov
pop
sub
pop
insl
push
inc
and
out
and
shrl
stos
or
faddl
aad
fdivrl
fidivrs
mov
dec
cld
and
daa
sub
xchg
jg
fldt
mov
in
clc
aad
dec
les
add
xchg
cmp
sahf
stc
mov
add
mov
fcompl
dec
dec
and
in
sbb
jp
inc
lcall
jo
rcll
pop
out
divl
cmc
push
cmp
mov
nop
stos
outsb
out
sbb
pop
repnz
lods
add
push
data16
push
push
call
cmpsl
mov
cmc
int
lcall
push
fwait
cmp
scas
test
in
call
cltd
push
icebp
mov
in
js
push
mov
hlt
mov
sbb
addr16
rcrl
imul
iret
enter
icebp
shl
jns
es
xor
mov
gs
popa
and
inc
icebp
and
jb
inc
inc
adc
pop
sub
mov
les
mov
pop
mov
mov
pop
insb
sbb
popa
fidivs
popf
jge
dec
lea
pusha
push
cmp
inc
lods
adc
orw
push
mov
fwait
xlat
xor
aad
mov
inc
inc
dec
lock
sbb
in
ja
pop
inc
rcrb
inc
cmp
hlt
mov
inc
clc
test
jae
push
push
sti
xor
push
push
sti
popf
pop
shll
xchg
mov
or
sbb
xchg
pop
mov
mov
lods
stc
push
cmp
cmp
pop
cmp
sub
xchg
mov
scas
add
std
jbe
mov
or
sbb
es
aad
xchg
lds
fwait
cmpsl
cwtl
ror
sbb
and
addl
xchg
out
mov
mov
lret
or
idivb
xchg
sub
or
add
cltd
jge
sti
inc
cmpsl
jp
and
lea
in
gs
stos
gs
pop
rcrl
sarl
xacquire
mov
mov
xlat
cmp
addb
xor
push
jae
push
pushf
or
out
xlat
xor
add
sbb
adc
shlb
cmpsl
pop
sti
mov
lods
gs
mov
fcmovnb
sbb
mov
inc
fisubl
push
inc
mov
jmp
ret
jmp
testl
or
sbb
insl
inc
jl
cmp
fsubrl
sub
int
or
jbe
cwtl
iret
pop
mov
loop
inc
xlat
cmpsb
cmp
or
cli
lods
sub
xor
dec
lret
pop
fadd
sbbb
fists
mov
orl
and
popf
ucomiss
pusha
push
cwtl
cld
imul
es
mov
mov
inc
sbb
cmpsl
aam
out
repnz
lea
das
cmpsb
loope
popf
lds
mov
mov
and
mov
lock
pop
rcrl
xor
scas
les
ja
cmp
xchg
es
shll
daa
cmp
sub
jne
mov
cwtl
mov
push
mov
add
xchg
cwtl
mov
leave
and
lods
shlb
stos
inc
sub
push
inc
int
sub
dec
inc
fdivrl
dec
mov
sbb
int3
imul
out
lret
test
cmp
pop
icebp
shll
pop
cs
dec
cmp
inc
shr
dec
adc
insb
jl
shlb
sbb
sbb
lret
lds
mov
loop
cmp
xchg
adc
cmpsl
inc
pminub
jo
rcrb
adc
ljmp
dec
xor
push
add
out
or
xchg
sub
inc
pop
addb
jnp
mov
out
ja
pop
mov
dec
daa
or
in
inc
sub
cmpsl
pop
mov
fists
jae
inc
jmp
pop
pusha
fldt
xchg
and
mov
mov
xor
mov
dec
dec
and
jne
jno
in
xchg
test
loop
pop
adc
test
xor
lret
xchg
out
test
sti
xchg
repz
punpcklbw
mov
fdivrl
dec
inc
cwtl
cli
pop
loop
cmpsb
addr16
push
shrl
mov
test
push
daa
jle
mov
in
cwtl
pop
or
data16
data16
push
sbb
inc
xor
xchg
cmp
pop
in
mov
push
xor
and
adc
pushf
dec
in
andb
sub
ret
bound
adc
xchg
cs
sbbb
and
mov
cld
test
pop
mov
jo
loopne
sahf
imul
mov
out
xchg
nop
cmp
pop
out
mov
negl
nop
out
jae
inc
lock
jbe
in
and
clc
leave
dec
xchg
mov
jecxz
xchg
and
call
sub
push
rorb
mov
aad
jecxz
dec
jge
aad
push
xchg
imul
inc
aam
mov
lds
sbb
dec
xchg
dec
test
mov
mov
ss
int3
daa
or
push
scas
int
cmp
int3
sub
scas
repz
mov
or
les
mov
sti
mov
mov
sbb
in
subl
push
or
pop
orb
and
or
leave
cmp
aam
add
and
test
mov
mov
iret
ret
sbb
adc
sub
sbb
leave
fs
mov
mov
cs
fidivs
push
or
test
push
aam
dec
movsb
mov
sub
inc
cmp
mov
cltd
nop
lea
test
stc
cwtl
xor
mov
ret
ss
lds
stc
xchg
mov
in
cli
lods
add
fscale
jae
xor
call
mov
mov
pusha
cmp
jmp
repz
adc
xor
repnz
pop
and
adc
cltd
and
adc
inc
inc
fs
push
sti
cmp
je
test
clc
xorb
mov
hlt
xchg
inc
push
imul
icebp
xchg
cmpsl
mov
mov
roll
jecxz
xor
fidivs
pop
xchg
ficomps
pop
mov
jo
mov
fmuls
mov
outsb
pop
sbb
cltd
cmpsl
pop
sbbb
add
daa
xchg
inc
ljmp
cmpsb
nop
daa
adc
and
hlt
or
movsl
cmp
jg
cmp
mov
dec
test
inc
shr
fidivs
mov
jl
gs
dec
adcb
adcl
sbb
jg
cmp
sbb
test
xlat
xchg
nop
popa
push
and
push
sbb
pop
sbb
enter
pop
mov
scas
pop
or
int3
pop
add
xlat
mov
mov
pop
mov
jmp
out
bound
pop
enter
jp
push
lods
lahf
and
scas
repnz
inc
mov
push
and
lds
mul
pop
lcall
and
movsb
and
sub
and
push
pusha
mov
shlb
scas
mov
ret
fildl
push
lcall
test
outsl
iret
aad
nop
mov
inc
xchg
sub
insb
imul
add
outsl
xchg
cli
xchg
clc
insb
add
iret
fwait
or
lock
mov
mov
mov
lods
mov
push
mov
inc
out
lock
je
adc
cli
inc
in
sub
fprem
push
xchg
add
mov
xchg
mov
call
pop
addr16
pop
mov
pop
xchg
das
jo
sub
out
sbb
push
popf
xor
mov
fstl
ds
jo
mov
sbb
mov
mov
imul
lretw
jge
sub
into
add
jae
arpl
add
adc
xchg
xchg
cwtl
push
or
sub
lret
pop
sub
cmp
pop
lds
cmp
out
imul
arpl
adc
mov
mov
xor
push
adc
add
std
sub
mov
jno
aam
push
inc
notb
add
and
test
lods
inc
das
sahf
in
in
mov
mov
push
push
aaa
lods
insl
add
ljmp
rorl
or
push
loopne
xlat
adc
scas
xor
inc
add
pop
xorl
inc
jmp
out
mov
cld
stos
sbb
and
test
repz
xchg
mov
sarl
push
add
xchg
sub
mov
lock
pop
sbbl
rolb
jns
lods
add
lcall
sbb
jae
cmp
aaa
insb
or
sbb
imul
mov
jne
test
fcomps
add
mov
mov
cld
test
mov
andl
stos
xchg
ja
mov
out
inc
dec
cmp
and
cli
out
push
aas
ljmp
adc
call
lcall
lahf
ljmp
pop
stos
cmpsl
ja
and
enter
ljmp
lods
cmp
or
jge,pn
pop
lret
cmp
das
or
push
movsl
cmc
movsb
fildll
push
mov
pusha
test
push
ds
push
lahf
add
cmp
add
jb
mov
test
ror
jmp
xor
push
pop
inc
mov
mov
sbb
mov
fimuls
cli
lret
pop
das
adc
subb
clc
mov
pop
insl
sub
ds
pop
mov
sub
adc
sub
lret
sub
shlb
sbb
cld
jge
imul
insl
mull
roll
mov
adc
std
cmp
pop
imul
ss
xchg
fldl2t
jnp
ljmp
mov
jecxz
cs
jl
push
divb
mov
lret
aam
addr16
push
push
je
jns
das
idivl
sbb
std
jg
insb
out
xchg
loop
mov
insb
push
jmp
mov
sbb
pop
popa
jl
mov
push
sbb
cmp
cmpsb
insl
fs
test
mov
sti
gs
stos
xchg
or
cmp
mov
in
add
push
mov
loopne
xchg
popf
hlt
jno
jecxz
arpl
rorl
repnz
add
xor
test
out
popf
outsl
xchg
add
lea
mov
pop
add
mov
dec
mov
dec
adc
push
cltd
leave
int3
add
dec
fisubrs
mov
movsb
mov
push
cmpl
jnp
add
sub
jb
ds
int3
jns
shlb
shrb
xlat
mov
pop
mov
andl
cmc
pop
out
lds
ret
cmc
lahf
loop
xchg
push
addr16
sub
adc
and
leave
and
jbe
adc
adc
lods
fsubrp
lahf
mov
movsb
popa
iret
repz
mov
scas
les
mov
push
std
decl
out
pop
pop
sub
adc
cli
pusha
shll
inc
adc
rclb
loope
inc
push
jmp
pop
jbe
dec
das
jge
pop
jle
aam
lock
jmp
sub
fisttpll
inc
lds
push
clc
xchg
pop
mov
sbb
lods
xor
mov
in
mov
mov
push
repz
push
mov
push
and
shrb
inc
xchg
scas
in
mov
inc
mov
sbbl
sti
fists
pushf
and
nop
fnstcw
insb
fistps
out
mov
jle
test
test
les
mov
cli
pop
outsl
insb
push
or
add
and
mov
addl
fnstsw
push
repnz
inc
adc
mov
xor
aas
xchg
aas
mov
mov
icebp
mov
push
adc
fs
mov
into
push
sub
cmp
lods
inc
sbb
sbb
idivb
push
fistpl
xor
push
repz
mov
icebp
leave
push
push
or
gs
fcmovu
xchg
call
loope
cwtl
and
fidivs
mov
sbb
fists
adc
or
pushf
mov
push
inc
stos
sbbb
push
inc
mov
xchg
mov
cwtl
vpsubsw
adc
and
pop
mov
add
cmp
push
inc
cld
jb
adc
xor
jo
and
movsl
adc
and
pop
sbb
dec
sarb
add
xchg
cmp
clc
test
stc
outsl
into
add
jge
stc
push
fs
cltd
pushf
xchg
test
push
jno
lods
sub
ja
pusha
cmp
dec
xchg
add
insl
push
cld
dec
dec
ss
or
enter
mov
mov
ficoms
aad
in
popa
sbb
push
inc
jle
jg
lea
mov
xor
dec
mov
inc
mov
inc
dec
dec
cs
out
push
sub
cmc
push
leave
fisubrl
out
je
jns
dec
or
fld
outsl
inc
jne
insl
push
inc
jnp
sub
pop
js
inc
subb
aam
mov
aad
dec
shll
mov
or
xor
push
xor
es
add
orb
cmp
adc
or
das
or
push
fdivl
scas
xchg
inc
test
pop
aas
test
cmc
rorb
xor
pop
inc
dec
mov
jp
inc
fsubl
ret
pop
add
inc
fstpl
push
dec
test
daa
xor
js
test
xchg
push
jp
enter
orb
push
dec
imul
pop
mov
mov
shrb
mov
sbb
orb
cmpsb
sub
sbb
push
or
ja
sbbb
fsubs
out
inc
sbb
ror
out
dec
cld
or
inc
fdivrl
aam
inc
push
fldt
jp
pop
les
dec
loopne
push
imul
sub
jl
inc
adc
mov
push
test
movsl
adc
sbb
pop
inc
sbbb
out
rorb
mov
lock
mov
xchg
or
shll
addr16
inc
shrl
jbe
cld
jl
lret
push
mov
mov
push
mov
or
cmp
push
and
push
xor
ljmp
mov
mov
jae
xchg
sub
rol
pop
cmp
push
aam
add
lea
roll
add
cmc
push
jbe
jecxz
sbb
jp
xchg
sub
push
cmp
js
mov
mov
outsb
sbb
pop
out
sar
adc
cltd
pop
sub
xchg
pop
loop
sub
push
fcomps
or
jl
mov
sbbl
scas
divl
jp
cmp
sub
fsubrs
sub
jecxz
dec
lahf
addr16
xchg
adc
and
pop
scas
rcr
dec
and
test
insb
mov
sbb
lods
xor
jns
fnstenv
add
fcomip
fwait
gs
jno
adc
mov
pop
or
sub
jg
xlat
and
jecxz
cwtl
adc
roll
push
bound
pop
popa
sub
push
fcmovb
shll
fbld
inc
test
shlb
and
out
cmp
aaa
pop
inc
aam
mov
je
pop
xchg
sbb
mov
int3
lock
mov
lret
jge
xor
inc
jns
in
cmp
lahf
fdivrs
jle
call
mov
out
orb
cli
mov
pop
repnz
out
jns
xchg
jecxz
pusha
cmp
pop
xchg
cmp
mov
ret
shl
insl
das
jge
mov
sbb
sbb
ja
testb
in
das
cmc
add
mov
pop
rclb
xor
dec
mov
pop
mov
push
scas
int
cmc
sti
or
repnz
mov
icebp
add
arpl
or
push
cmp
xchg
scas
inc
push
xchg
inc
cs
jno
arpl
dec
pop
mov
in
daa
or
sti
cmp
je
or
xchg
mov
push
pop
jne
jns
filds
add
add
push
dec
filds
sub
inc
mov
into
lods
fdivs
stc
inc
sub
cmc
push
in
xchg
insl
cmpsl
movsb
mov
jae
jl
flds
pop
xchg
xchg
data16
insl
xchg
dec
or
cmp
gs
int
jmp
jae
movsl
inc
push
sti
ja
pushf
icebp
jg
xchg
pop
mov
jno
aad
add
cld
mov
add
push
mov
mov
mov
scas
cs
adc
jp
mov
dec
out
js
and
fwait
gs
ja
jne
cli
inc
jmp
out
je
out
mov
iret
iret
mov
rcll
or
in
inc
fiadds
into
mov
sub
sbb
push
scas
inc
mov
mov
bound
xchg
test
xor
mov
push
movsb
std
mov
mov
cld
ror
out
jnp
inc
lret
cld
dec
push
out
pop
dec
pop
mov
cmc
dec
movsb
lahf
mov
adc
add
in
sbbb
mov
andb
sub
jnp
cmp
xchg
mov
mov
lahf
xorl
pop
sbb
push
inc
pusha
out
popa
mov
rorb
push
mov
pop
inc
inc
int
int
in
xchg
lahf
push
and
fucomp
jl
mov
popf
sub
mov
dec
adc
lea
xchg
mov
xchg
shl
sbb
insb
sbb
sahf
clc
pop
and
mov
fisubrs
fsubrs
add
imul
or
jmp
pop
movsl
shll
pushf
lahf
addb
mov
fnstenv
icebp
inc
sbb
out
lcall
fs
pop
push
test
add
jns
dec
and
add
test
xrelease
rclb
adc
or
ljmp
filds
jge
cmc
xor
push
js
int3
ds
nop
aaa
jo
or
xor
int3
sti
cmp
testb
mov
pop
ja
add
dec
icebp
jmp
cmp
cmp
mov
pop
jno
or
xchg
in
les
ret
xchg
mov
and
push
inc
lods
xchg
add
mov
push
pop
insb
xchg
icebp
mov
loopne
hlt
adc
xor
mov
xor
xor
ja
in
jne
into
popa
fwait
xchg
dec
lods
scas
jl
xchg
cmp
adc
stos
sub
mov
ret
lds
dec
jecxz
xchg
fsubp
ss
adc
mov
cs
out
cltd
lods
push
out
hlt
cmp
xor
insb
xchg
fnsave
iret
fsin
add
and
andl
dec
call
add
outsl
mov
ret
sbb
sbb
jg
sti
mov
and
push
dec
push
xchg
js
dec
xor
in
jae
sbb
mov
mov
call
pop
jb
lock
inc
mov
pop
sbb
push
iret
shrl
ffreep
cmp
push
popf
mov
aam
mov
xchg
pop
addr16
nop
shrl
ret
inc
out
sub
in
mov
push
cli
or
fs
js
and
push
adc
pushf
loope
dec
lock
pop
cmc
data16
cltd
and
add
add
pop
gs
inc
addr16
add
mov
xlat
push
cmc
add
int3
sti
xor
push
in
dec
nop
sub
std
out
out
aam
ss
cmp
adc
fcomps
sub
cmpsb
sahf
mov
pop
imul
pop
mov
mov
cmpsl
jg
cmp
xchg
lds
into
popf
lcall
std
mov
adc
push
lds
sub
pop
mov
mov
cmp
cmpsl
mov
add
scas
mov
fs
add
or
nop
add
int3
inc
shrb
add
pop
dec
fisttps
popf
ss
jge
dec
pop
addr16
push
mov
into
in
imul
andl
xor
jo
dec
lea
jecxz
fdivl
sbb
aas
cmpsl
lods
mov
mov
jmp
add
sbb
mov
sub
add
loopne
mov
fisttpll
cld
mov
pop
out
and
jns
add
xor
cmpsl
mov
scas
js
iret
lahf
out
sub
xor
shrb
pop
loop
test
lret
add
jmp
inc
mov
mov
xor
push
pop
cmp
inc
fstpt
or
xor
inc
imul
orb
and
pushf
loop
mov
pushl
adc
imul
xor
rcrl
sub
push
xor
push
fadds
adc
lds
dec
pop
repz
adc
sar
xchg
mov
adcb
scas
push
jb
hlt
sahf
push
mov
ret
pop
pop
sbb
shll
rcrl
fsubrl
pop
inc
bnd
andb
mov
mov
les
sbb
mov
lds
mov
mov
sbb
mov
aaa
stc
or
test
mov
cmpsb
xchg
and
cs
movsl
fimuls
loope
or
xor
and
ljmp
pusha
xorb
shrb
idivb
mov
adc
cmp
cltd
insb
pop
adc
xor
sar
fsubrl
mov
daa
sbb
xchg
pushf
push
ret
scas
push
jp
dec
negb
fcoml
leave
lret
into
mov
jno
sbb
ja
adc
ret
push
std
and
mov
xchg
arpl
sbb
and
out
cmp
xchg
test
dec
fwait
je
dec
test
aam
add
pop
or
jecxz
or
clc
ljmp
or
adc
lret
xchg
call
in
insl
sti
adc
inc
ret
cmp
inc
push
fnstenv
data16
data16
sbb
mov
imul
out
add
add
jmp
mov
outsl
xchg
add
pop
mov
loopne
daa
inc
push
or
sub
in
jg
push
inc
je
mov
adc
lret
xchg
ljmp
xchg
jecxz
pop
and
xchg
mov
divl
jo
xlat
inc
sbb
loop
cmp
xchg
testl
push
or
push
mov
ret
sti
inc
or
jle
jo
sahf
shll
dec
dec
testl
mov
and
adc
std
xor
sub
push
pop
cmp
aas
mov
shll
jns
jecxz
jle
xorl
or
nop
inc
dec
xor
jns
inc
inc
jnp
pop
mov
cmc
add
sub
cmp
mov
loop
cmp
cmp
sahf
movsb
push
adc
outsl
cmp
testb
xor
pop
ss
js
dec
popf
add
jl
ficoml
mov
insb
insl
testl
out
les
popf
xor
inc
mov
enter
pop
pushl
jge
pop
sti
sbbb
cmp
pop
out
out
inc
fmull
fs
xor
or
addr16
mov
pop
sub
cmp
insb
xor
pop
or
cs
popf
pop
ljmp
pop
rolb
xchg
sbb
xor
sub
add
cmp
adc
enter
and
arpl
mov
or
inc
dec
cmp
pop
mov
mov
pop
js
mov
xor
xlat
adc
and
cmpsl
nop
inc
push
sub
loopne
insl
xchg
icebp
jnp
mov
jl
mov
in
mov
fists
int
ljmp
popa
int
cwtl
scas
mov
loope
pop
test
test
movsb
xor
pop
jns,pt
sbb
hlt
adc
add
lahf
dec
push
sbb
add
jg
iret
in
and
enter
orb
jle
insb
or
fisubrl
rcll
pop
out
dec
or
insb
and
fistps
pop
idivb
sbb
rclb
fisttpll
in
mov
xchg
pop
mov
adc
mov
ljmp
mov
lret
std
mov
fcmovnb
pop
aas
jl
mov
popa
loop
xor
sub
xor
mov
push
and
mov
cmp
out
popw
and
lcall
sbb
stos
fidivrl
int
add
adc
pop
std
rep
inc
test
mov
mov
loop
rorl
dec
dec
pop
ds
xchg
push
mov
mov
add
mov
icebp
dec
pop
pop
push
jb
jge
mov
push
xor
sahf
clc
cwtl
js
enter
call
dec
shrb
test
cmp
cs
push
mov
js
or
jbe
mov
inc
xchg
cmp
cwtl
std
ja
repz
out
push
adc
jbe
mov
std
xchg
rcll
or
xor
or
mov
sub
lods
mov
jbe
adc
in
das
cmp
lret
cwtl
or
mov
test
lods
or
cld
rcrb
sbb
xchg
sub
jp
mov
mov
cmc
mov
mov
sub
xchg
mov
dec
push
xchg
sub
jl
repnz
xor
sub
pop
xor
push
outsl
jne
lea
pushf
inc
dec
hlt
pop
push
add
and
xchg
cmpsl
ds
mov
shl
jle
pushf
xor
xchg
fmuls
mov
pop
pop
call
dec
and
push
loopne
mov
incb
pop
mov
stc
jecxz
adc
cmpsl
push
pop
cmc
add
sub
iret
dec
fcmovu
repz
adc
test
out
pop
cmp
loop
add
rcr
xor
aaa
pushw
lret
add
test
jmp
xchg
ljmp
mov
lahf
inc
fs
cmp
add
mov
gs
das
or
popa
jl
subb
or
pusha
ret
repz
rcll
pop
cli
xchg
sbb
dec
push
mov
scas
and
in
sbb
xor
mov
out
in
cmpl
in
in
call
xchg
xchg
ror
cmpsl
or
push
pop
xor
jne
xchg
outsl
push
ret
jo
aad
and
jmp
stos
inc
or
shlb
mov
add
notl
test
mov
insb
out
pop
call
test
mov
mov
aad
popa
cmp
negb
fadds
aam
inc
cltd
mov
push
jmp
cli
adc
out
or
dec
mov
jl
xor
dec
ret
jne
lcall
lahf
jns
divb
repnz
mov
jp
pop
sub
pushf
add
mov
and
pop
dec
mov
xchg
aas
push
xor
sbb
movsl
sarb
dec
mov
iret
adc
cmp
outsl
sbb
adc
in
xchg
sub
jbe
sub
mov
xchg
dec
jne
adc
aad
inc
aam
mov
fstpt
push
insl
testb
inc
mov
pop
and
neg
je
xchg
dec
sbb
add
adc
xor
aas
push
mov
in
mov
or
out
cmp
cmp
inc
mov
pop
fidivl
jecxz
jne
mov
add
pop
mov
and
shrl
mov
scas
xchg
or
xchg
cmp
dec
or
fmul
in
andl
jle
cmp
fmul
and
pop
iret
rclb
xchg
enter
aad
imul
out
int
or
ret
pop
divb
mov
cmpsl
mov
cmpb
pop
adc
push
push
jb
mov
and
call
jl
xlat
lods
mov
jae
jns
or
pop
fbstp
repz
pop
mov
shrb
jnp
mov
add
sti
clc
test
mov
faddl
and
jns
shrl
inc
mov
dec
and
out
jp
inc
popf
sbb
inc
ja
outsb
sbbl
leave
mov
scas
push
out
sarl
xchg
rcr
arpl
add
xor
mov
popa
call
dec
pop
jae
imul
js
stc
mov
sarl
sbb
add
or
ss
sahf
sahf
push
fucomp
repz
jae
push
pop
inc
xor
or
jnp
fisubl
mov
sbb
mov
xchg
sbb
pop
cli
mov
gs
aam
pop
sbb
int3
mov
or
sbb
jecxz
sub
jecxz
sub
jp
pop
sub
or
mov
dec
addl
sub
xchg
cmp
jge
das
popa
push
icebp
push
lds
jecxz
cmp
inc
repnz
cmc
ja
adc
inc
mov
shll
lock
inc
fcmovb
xor
out
fistpl
push
pop
dec
lods
leave
lods
cmp
jge
decb
ret
fisttps
into
xor
les
cmp
adc
hlt
and
jmp
stos
lret
cld
lret
jge
and
or
push
ud0
inc
jbe
filds
mov
xor
adc
test
mov
rcll
cmp
sbb
sub
nop
outsl
subl
jge
mov
xor
incb
jp
mov
jne
shlb
movb
sub
mov
or
shll
dec
sbb
mov
adc
pusha
movb
les
test
mov
push
sub
xchg
into
pushf
shlb
movsl
loop
lahf
and
pop
xchg
aam
cltd
xor
sbb
and
das
popf
inc
idivl
push
into
xor
in
push
shll
pop
add
lahf
idiv
jg
sub
inc
aas
cmp
loop
push
sbb
pop
sbb
insb
add
mov
mov
mov
and
xchg
pop
arpl
jb
fdivrp
or
inc
cmp
call
push
push
loop
pop
xchg
sub
cld
xchg
mov
or
push
xchg
test
sbb
inc
fs
movsl
mov
pop
pop
enter
add
and
fcmovu
movsb
cmp
fsubs
xor
ret
fildll
inc
movsl
imul
out
push
push
xor
pop
shll
xor
mov
sbb
sub
leave
lock
lret
test
repnz
or
or
and
enter
imull
les
sbb
stos
ret
outsl
addr16
mov
xlat
inc
es
cs
lret
cmpl
dec
adc
aad
inc
outsb
out
bound
pop
ret
add
lods
mov
loopne
int
pop
pusha
idiv
mov
adc
or
mov
int
sub
fidivrl
test
mov
loop
in
test
int
addr16
cltd
pop
aam
stos
decb
mov
mov
or
cmp
sti
test
mov
adc
lret
into
imul
or
or
frndint
push
mov
je
push
xor
std
mov
out
pop
repnz
fnstsw
into
jp
dec
pushf
or
xchg
cmp
push
add
lds
mov
das
inc
lcall
leave
shrb
ret
xor
xor
dec
mov
jl
inc
fbstp
out
in
pop
jb
loop
mov
mov
fs
or
test
rol
pop
dec
icebp
jl
mov
push
lods
or
and
mov
sahf
mov
es
mov
jns
inc
fld
mov
movsb
sub
xchg
xor
cmp
mov
test
aam
shl
nop
inc
mov
ret
insb
mov
mov
mov
mov
pop
mov
jle
movsb
scas
cmp
xchg
push
lods
addr16
xor
repz
rorb
rdmsr
jnp
xor
add
lret
stc
or
popa
sahf
jbe
rolb
pushf
dec
adc
mov
jmp
or
fs
int
pop
mov
ja
xor
inc
sbb
cmpb
loopne
pusha
push
cli
shrl
mov
in
shr
repz
xchg
sub
rcll
adc
cli
cmp
adc
in
test
cmpsl
jne
mov
add
mov
mov
pop
and
and
adc
in
add
testb
add
mov
ret
loope
pop
ljmp
movsb
sub
clc
inc
sbb
ret
adc
repnz
sar
mov
hlt
arpl
lods
jp
add
add
xchg
push
xor
add
lret
pop
lea
rcrb
mov
js
push
call
loopne
imul
dec
int
cmp
mov
jmp
mov
out
scas
and
or
cmp
call
js
pop
or
dec
es
dec
and
push
xchg
jl
push
mov
or
mov
loopne
stos
pushf
fcmovu
jge
mov
inc
inc
push
push
and
lret
inc
call
jbe
mov
test
xchg
add
imul
and
and
mov
inc
int
jne
adc
es
inc
pop
mov
divl
cmpsb
dec
movsl
pop
push
and
xor
arpl
daa
jle
nop
ljmp
shl
pop
into
hlt
dec
loope
outsl
xor
fidivl
cmp
mov
push
sbb
dec
pop
add
pop
insb
dec
int3
cld
into
aad
inc
or
xchg
sub
jecxz
cmp
addr16
cmp
adc
xor
push
mov
mov
sbb
mov
add
pop
rclb
movd
fidivs
shll
nop
mov
mov
aad
mov
frstor
popf
mov
in
fwait
xchg
pusha
and
or
mov
xchg
ljmp
mov
filds
push
aad
jne
mov
ror
fildl
cmp
xor
mov
xor
loop
sahf
adc
mov
test
gs
mov
dec
pop
je
test
fwait
pushl
es
imul
in
jl
ljmp
mov
shrl
adcl
sbb
sbb
dec
scas
mov
push
or
inc
loop
cmp
and
pop
enter
inc
daa
push
cmp
xchg
sub
int
mov
ss
movsb
cmp
add
xchg
sub
fstpl
cwtl
decb
enter
lahf
mov
test
pop
push
js
std
mov
sub
dec
jo
outsl
rcl
mov
outsl
imul
jmp
mov
pop
mov
orl
jbe
and
mov
push
sbb
sub
cmp
ret
negb
aad
add
aas
pop
jl
repz
lahf
out
sub
xchg
mov
rorb
addb
or
aad
or
cmpsl
pop
mov
xchg
enter
add
in
fnstenv
fcmovu
movsb
push
jo
cli
test
mov
sub
sub
sbb
shl
add
mov
stos
dec
dec
push
add
outsb
xor
dec
push
sub
divb
push
testl
dec
dec
add
inc
stc
and
rorl
mov
push
and
xchg
cmc
cmp
sub
or
mov
sbb
fwait
inc
rorb
xchg
fadds
mov
cmp
push
jge
rcl
mov
sub
out
lods
pop
in
arpl
fsubs
mov
das
and
sti
aas
iret
adc
das
hlt
cmpsl
ds
push
mov
sbb
lock
sbb
jno
xchg
jge
adc
jl
out
scas
mov
jmp
test
lahf
xor
sbb
out
hlt
fldcw
cwtl
aas
add
lahf
mov
or
dec
pusha
imull
mov
inc
in
out
jno
cwtl
mov
jg
mov
scas
test
cld
mov
cli
popf
pop
outsb
xchg
xchg
sbb
push
mov
adc
mov
push
loopne
sub
mov
cmp
push
mov
fisttps
int3
imul
aad
adc
add
popa
into
xor
sti
stos
jo
rcl
scas
cmc
mov
lds
or
lock
aas
ret
mov
insb
fiaddl
ret
cmp
pop
pop
cmpsl
mov
fdivl
sub
pop
pushf
sub
into
sub
push
inc
cmc
sahf
jge
enter
sub
cmc
lea
push
mov
movsb
or
in
icebp
xchg
das
stos
add
cmpsl
dec
dec
mov
jg
pushl
out
daa
div
out
push
movsl
pop
ret
mov
loopne
sahf
inc
pop
sarb
and
xor
inc
sbb
and
xor
fldl2t
xlat
cli
in
sub
cmc
push
aam
xchg
sub
pop
mov
in
mov
jns
insl
push
and
jne
cmp
ds
test
int
es
inc
fildl
pop
pop
movsl
rcl
aam
mov
ss
ljmp
pop
repz
call
or
or
es
push
mov
dec
sub
jecxz
fnstsw
or
repnz
pop
pop
es
mov
pop
aaa
ficoml
dec
push
dec
rcrb
mov
ret
es
push
mov
jp
aam
push
xchg
add
divl
dec
pop
shll
add
pop
outsl
and
push
push
and
dec
gs
test
lret
inc
mov
jae
pop
jp
pop
mov
jl
mov
or
into
and
push
sub
sub
and
xchg
sbb
sbb
stos
popf
notl
iret
or
mov
push
mov
jb
mov
pushf
xor
stos
or
loop
sbb
mov
cmp
adc
repz
dec
fs
inc
add
jmp
test
jns
push
stos
cmp
cld
je
inc
push
cmp
pop
jp
mov
cmpsl
adc
adc
jo
mov
mov
dec
mov
pop
outsl
fnstcw
mov
add
outsb
shlb
mov
je
sub
aad
ffree
jp
lret
cmp
lahf
insl
call
fwait
xor
mov
je
or
adc
mov
cmp
popf
scas
pop
cmc
mov
rcl
and
cmp
push
cltd
xchg
shlb
jae
int3
nop
sub
push
aam
test
xchg
hlt
inc
addb
pop
xor
pop
mov
or
das
repnz
scas
insl
jge
sbb
dec
fs
push
pop
stos
inc
lock
mov
jne
mov
mov
fnstcw
loopne
fildll
aas
dec
xchg
pop
inc
stos
mov
imul
pushf
inc
jae
lock
add
sbb
cmp
insl
push
scas
cmp
sarb
cmp
push
cmp
lea
addl
mov
je
sbb
mov
stos
xchg
pop
fadds
jl
jo
pop
cmc
xor
push
call
clc
lea
ds
xchg
add
in
fdivl
inc
adc
mov
or
inc
imul
and
subl
in
sahf
es
sub
sbb
cltd
push
stc
dec
xor
xlat
insl
or
loopne
cmpsb
pop
lods
pop
adc
sub
adc
dec
sbb
iret
hlt
sbb
sbb
movsl
jecxz
and
push
and
pop
mov
iret
pop
cs
add
push
pop
xchg
ss
mov
fwait
xor
stos
mov
and
rcr
in
sub
jp
xor
mov
inc
sbbl
add
mov
jae
add
xchg
jne
pop
out
popf
mov
adc
sub
or
mov
jg
in
mov
shr
dec
and
jnp
jmp
or
push
test
add
sub
cli
jl
sete
mov
dec
jmp
in
loop
scas
shlb
xor
xor
nop
cmp
push
or
addr16
fbstp
sbbl
mov
fisttps
sub
and
add
and
sub
mov
repnz
loopne
push
pop
add
ret
pop
mov
movsl
out
adcb
cld
in
insb
and
push
into
testl
pop
jb
pushf
xchg
popf
mov
nop
mov
adc
mov
jns
sub
push
jle
push
cwtl
xchg
add
repnz
rclb
jmp
cwtl
loopne
pushf
jae
mov
cli
inc
cmpsb
pop
ds
fwait
xor
out
push
loop
lahf
and
cld
scas
inc
out
pop
pop
cld
lahf
mov
dec
mov
push
movsl
inc
and
lret
in
jmp
dec
jnp
adcl
in
xchg
aas
sub
adc
gs
mov
inc
inc
fnstenv
add
jle
push
cmp
lods
mov
movsl
or
mov
cmc
add
jle
hlt
and
fwait
mov
lods
mov
bound
mov
pusha
mov
xchg
aas
add
adcl
lods
loop
mov
loopne
leave
or
inc
popa
lea
lods
mov
mov
lcall
xor
dec
into
mov
jg
cmp
insl
mov
adc
fcmovnu
inc
or
cmpsl
fldt
pusha
stc
jg
repz
xchg
adc
and
aaa
jno
cmpsb
loop
pop
mov
sub
push
push
fnstenv
inc
test
jle
icebp
jnp
dec
push
in
cmp
cmp
xor
ljmp
mov
je
cmp
fnsave
sbb
mov
mov
sub
jge
dec
xchg
push
pushf
jle
adc
arpl
aaa
testl
sub
jle
fisubrs
mov
dec
cmp
jecxz
mov
push
add
pop
cmp
push
mov
adc
aaa
or
dec
mov
ret
pop
sbb
jnp
out
cmpsl
xor
push
insl
jmp
sbb
mov
mov
les
or
scas
inc
push
and
xor
stos
in
cld
out
outsl
lds
lret
mov
popa
mov
push
jmp
test
and
push
pop
imul
sub
shr
xor
int3
gs
add
pop
xlat
adcl
out
inc
mov
or
mov
in
xchg
test
les
cmc
xor
imulb
fisubl
push
cmpsb
mov
dec
pop
cli
mov
xchg
sub
pop
mov
cld
and
das
rorb
xchg
lea
fisubs
lds
lods
test
movsl
jl
cmc
inc
lret
pop
or
mov
xlat
outsb
pusha
sub
sti
sbb
idivb
cmp
push
dec
iret
clc
sahf
adc
xor
jno
fs
les
pushf
adc
cmp
inc
cs
mov
rcll
jmp
into
xor
cmp
push
fisttpll
xor
fs
inc
cmc
mov
mov
and
lret
or
addr16
jne
outsb
pop
push
jmp
sbb
rcl
cmp
dec
add
pop
stc
adc
roll
sub
add
and
sbb
inc
repz
add
or
ljmp
cs
sbb
stos
jne
sbbb
fstl
stos
into
ret
and
mov
adc
inc
subb
fwait
arpl
xlat
outsl
add
jge
mov
jl
xlat
scas
in
movsb
out
pop
mov
cmc
mov
mov
inc
sub
xor
jne
pop
test
pusha
stos
adc
es
mov
cmpsl
out
into
xchg
sub
xor
add
cmp
les
xchg
rclb
test
rclb
lahf
mov
call
arpl
push
or
test
xchg
mov
lea
xchg
jg
sbb
jmp
and
movsb
cwtl
mov
push
dec
loope
js
lods
ds
jmp
inc
nop
jg
test
leave
incl
mov
cltd
inc
lea
loope
imul
cmpsl
mov
ljmp
imul
rorl
pop
aam
xor
ds
and
jmp
cld
push
outsb
cwtl
push
pop
lea
add
add
xchg
sbb
pop
out
sbb
addr16
cmc
pop
movsl
mov
cmp
xor
push
or
dec
add
mov
stos
cmp
cmpsb
call
push
out
mov
inc
and
into
out
sbb
jp
lods
add
cltd
je
test
xlat
outsb
sahf
das
out
jns
mov
mov
hlt
fsubrs
or
dec
adc
mov
push
lea
fistpl
cmp
daa
xor
push
shll
rcll
cmpsl
ljmp
lock
call
lock
lcall
lret
popf
mov
pop
inc
inc
iret
fs
jmp
push
and
mov
inc
insl
xor
jge
cltd
inc
pusha
inc
xchg
les
or
jns
popf
sbb
mov
ss
insb
lret
sti
lea
xchg
int3
inc
pop
mov
and
jecxz
inc
sti
and
push
stos
add
push
outsb
mov
into
xor
movsl
pop
call
pusha
cmpb
fdivl
adc
adc
ret
jp
mov
aad
inc
sbb
jo
pop
push
dec
pop
jae
cmp
xlat
fbstp
push
or
xchg
jg
dec
pop
mov
dec
xchg
push
sahf
cld
pop
mov
sub
cmp
je
dec
call
movsb
repz
inc
mov
ds
pop
mov
fucom
addb
ret
aas
stc
out
sub
cmpsl
popf
int
mov
sarb
aaa
or
cmp
fadds
adc
fcoml
lret
pop
inc
subl
cmp
outsl
cmp
and
mov
cmp
movsb
mov
fcoml
test
inc
scas
xor
lds
push
out
jb
lods
pop
rcll
xchg
adc
cmp
mov
sahf
xlat
and
xchg
jnp
adc
mov
loopne
fcomps
outsl
sbb
sbb
je
cmp
clc
in
in
cltd
mov
mov
scas
mov
mov
js
test
inc
pusha
xchg
and
cmp
sahf
repz
test
mov
ss
add
test
imul
dec
and
sbb
mov
shlb
pushf
outsl
cmp
sahf
mov
int
or
or
cmc
orl
push
ss
sbb
and
rclb
sub
or
sbb
popf
sub
lods
sbb
das
call
repnz
jns
arpl
pop
sbb
pop
mov
inc
lahf
loope
mov
decb
mov
std
pop
jo
mov
fisttpl
call
mov
mov
sbb
adc
mov
fwait
gs
dec
mov
mov
cmpsb
adc
shl
pop
jbe
jns
sbb
ret
sbb
pusha
or
imul
dec
in
outsl
repz
mov
insb
sub
jmp
gs
es
or
loopne
icebp
in
ljmp
and
inc
rcll
lods
mov
mov
cltd
aam
push
andl
sub
ss
lahf
outsb
add
inc
cmp
les
add
sub
enter
in
sti
cmp
mov
fdivrs
shll
xor
popa
pminub
nop
xor
mov
add
xor
sub
jnp
inc
int
out
cmp
lea
sub
cld
xchg
pop
dec
daa
mov
xchg
mov
dec
dec
sbb
sbb
cmp
mov
aaa
scas
sti
xorb
cli
xchg
dec
pop
add
movsb
inc
sub
je
pop
out
aad
imull
repz
rcl
int
adc
inc
lods
cmp
mov
sbb
daa
pop
dec
sbb
lahf
ss
jne
xchg
xor
inc
and
nop
push
fwait
roll
ja
push
xchg
sub
mov
xchg
xor
or
xchg
ss
mov
in
or
push
loope
sbb
frstor
adc
jg
arpl
mov
inc
ja
sub
sub
je
sub
pop
movsb
lcall
aad
xchg
push
insb
mul
cmp
fbld
jnp
add
xchg
divl
fdiv
and
or
out
enter
add
inc
xor
shlb
push
je
pushf
pop
cli
xchg
in
adc
jb
ret
xchg
lods
sbbb
add
pop
push
sub
dec
mov
es
pop
adc
cmp
dec
jmp
jg
xor
cld
lea
adc
xorb
enter
js
shll
mov
mov
insl
cmpxchg
mov
mov
sbb
shl
das
mov
mov
xchg
jge
adcb
int
andl
popf
mov
subl
cmp
inc
push
fcoml
xor
mov
cmp
xor
js
pusha
ss
pushf
mov
and
jns
add
pusha
cmp
jl
cmc
decl
and
sti
shl
repz
sub
xchg
xchg
cs
mov
testl
sahf
mov
sbb
je
call
rcll
add
ss
inc
add
pop
rorb
clc
jnp
sub
popf
xor
es
aas
dec
scas
outsl
sbb
fcmovne
mov
push
mov
into
shlb
mov
mov
int
ret
xchg
ret
xor
xchg
hlt
ds
mov
sti
cmp
testl
xchg
dec
and
sti
cs
pop
sbb
shll
dec
mov
mov
jl
cmp
sahf
mov
lods
jp
pop
lret
fidivrl
sbb
mov
or
jbe
add
lods
and
pop
push
inc
inc
nop
sbb
insb
mov
lret
std
jbe
or
pop
sub
stos
push
push
mov
add
inc
stc
movsl
xchg
ret
mov
jmp
fucomp
jecxz
sub
add
lods
add
sbb
bound
cmc
adc
outsb
jne
pusha
mov
movsb
movl
mov
scas
pop
cmc
or
push
fistps
in
and
mov
push
adc
inc
fiaddl
cmp
call
or
ja
push
inc
cltd
jbe
jmp
mov
add
or
shl
mov
decb
insl
movsl
fldl
push
clc
mov
std
sub
sub
or
lea
cmpsb
dec
xchg
bound
inc
or
out
xchg
push
pusha
and
pop
cli
push
ljmp
jno
inc
adc
xchg
sti
fwait
sub
incb
dec
push
jne
pop
scas
adc
test
in
jmp
hlt
jmp
or
imul
out
xor
pusha
mov
inc
imull
ret
pop
sahf
mov
loopne
sbb
dec
pop
mov
jge
mov
shlb
pop
push
hlt
add
fstpl
mov
arpl
fists
loopne
icebp
test
mov
mov
ficoml
scas
insl
fidivrl
stos
mov
negl
rcrb
push
mov
pusha
stos
dec
pop
inc
dec
lret
xchg
sub
stc
push
jno
mov
clc
rcrb
or
lods
and
repnz
insl
into
xor
jnp
aad
cmp
ret
and
adc
mov
or
jno
xlat
sub
xchg
clc
test
stos
cmp
dec
ss
dec
push
stos
xchg
dec
mov
or
add
dec
orb
imul
decb
imul
sub
cli
inc
inc
push
sahf
push
cltd
hlt
jg
testb
xchg
mov
pusha
sub
jge
aas
push
cmp
xchg
pop
sbb
xchg
imul
loope
xor
dec
mov
xor
jb
inc
fs
js
mov
push
mov
in
ret
fdivs
fnsave
ds
jb
fs
sahf
jge
dec
and
in
iret
idivl
push
push
sbb
cmp
xor
pop
dec
jg
adc
popf
lods
add
cmp
mov
hlt
jns
mov
es
mov
mov
and
fbld
cmc
sahf
insl
sahf
cli
std
sub
xchg
and
rcrb
add
jmp
and
sbb
jae
jl
xor
ffree
aas
sub
pop
loop
nop
ds
mov
dec
mov
cli
ficompl
or
xor
dec
loope
push
adc
addr16
out
mov
sar
lahf
fnstsw
inc
aad
push
push
pop
pop
scas
aaa
stc
icebp
enter
or
add
or
mov
dec
cmpl
push
push
cltd
mov
push
pop
imul
and
adc
loopne
popf
add
mov
and
mov
adc
in
mov
dec
stos
jb
push
std
xchg
xor
inc
imul
rcrb
dec
data16
mov
aaa
cmp
cltd
out
pop
out
arpl
xor
loope
pop
adc
inc
arpl
pop
mov
xor
lret
or
idiv
pusha
imull
sbb
insl
nop
add
in
hlt
addr16
lea
mov
sbb
insl
cmp
pushf
repz
push
pop
xchg
repnz
and
pop
sarb
jne
lahf
sub
std
test
cmp
xor
popa
dec
adc
subb
jbe
stos
mov
loopne
push
or
xchg
sub
shrl
inc
data16
inc
dec
jns
fwait
xchg
fcom
loopne
sub
pop
notb
data16
push
pushf
hlt
cld
xchg
daa
out
pop
dec
inc
mov
mov
mov
adc
mov
fdivr
cmpsl
push
jecxz
push
outsb
jne,pn
mov
loopne
push
lds
arpl
pop
data16
lods
adc
cmp
into
xchg
xchg
ja
mov
rolb
imul
divb
push
cmp
clc
imul
shlb
ja
jne
sbb
incl
sub
and
pusha
in
or
add
cmp
dec
mov
mov
pop
in
inc
fsubl
or
adc
nop
sub
dec
shll
jno
loopne
xchg
jle
sbb
enter
or
cmpsb
cmp
sbb
pushf
mov
cli
mov
add
stos
test
cld
pop
arpl
cmp
add
adc
sub
loopne
andl
aaa
in
pop
lahf
pop
xchg
add
lcall
idivl
push
nop
hlt
sub
shll
sbb
cltd
imul
ficoms
mov
adc
jbe
jbe
in
dec
mov
fs
sbb
xor
jp
icebp
xor
and
mov
and
aas
ljmp
out
fstpl
mov
mov
and
jg
mov
cmp
ficoml
lods
into
xchg
fisubs
or
mov
imul
inc
int
jmp
out
or
pop
test
push
lods
scas
imul
sbb
cwtl
mov
lret
lods
cmpsw
dec
mov
mov
sbb
and
xchg
sub
dec
scas
mov
mov
push
xchg
xchg
fcoms
test
xor
jmp
fisttpll
push
insl
inc
ljmp
xor
loopne
sub
mov
or
ss
or
fnsave
mov
pop
mov
dec
loop
mov
push
xchg
outsb
clc
jne
sbb
pop
adc
std
push
ljmp
jno
in
mov
pop
out
icebp
add
cs
and
aas
mov
out
mov
xchg
loopne
push
std
jb
or
jno
xlat
outsb
xor
push
cmc
dec
js
ljmp
mov
loop
out
hlt
add
adc
cmp
jae
jb
test
add
cmp
mov
mov
int3
mov
sbb
push
imul
cmp
test
sbbl
dec
add
lods
je
xlat
add
mov
test
outsb
xor
call
fiadds
iret
or
fcoml
mov
shrl
fstps
adc
push
iret
es
mov
lods
and
inc
mov
add
scas
push
dec
mov
xchg
leave
push
movsb
cwtl
push
pop
leave
jnp
addr16
inc
push
cwtl
inc
sub
mov
ficoml
push
sub
movsl
mov
mov
mov
fimuls
xchg
hlt
popf
bound
hlt
jg
push
push
and
xor
and
sbb
xchg
sbb
stos
inc
fisubrs
fmull
jne
jmp
shlb
arpl
clc
push
lods
lds
xchg
repz
dec
movsl
aam
sub
sarl
popl
mov
ret
sbb
and
sahf
or
dec
ljmp
lods
push
push
pusha
int3
and
daa
inc
addr16
sbb
mov
jns
push
lds
pop
mov
xchg
ficompl
xor
fsubrs
adc
jae
outsl
push
lahf
mov
movsl
mov
and
loope
je
roll
movb
and
das
das
int
mov
mov
push
xor
jecxz
sbb
in
jae
mov
cmp
out
test
repz
xlat
push
aas
pop
mov
int
cmp
sub
jp
add
dec
loope
mov
enter
sub
mov
lret
and
dec
adc
bound
xchg
out
adcl
sub
jl
mov
aad
cmpsl
mov
xchg
or
rolb
mov
xchg
pop
mulb
xchg
xor
popf
mov
cmp
leave
sahf
jae
xchg
jns
pop
sbb
fs
mov
and
jno
out
rcll
xor
mov
mov
in
ret
enter
sub
arpl
popa
push
pusha
mov
sbb
mov
hlt
jnp
shrl
and
pop
repnz
ret
adc
mov
jb
aaa
sub
lret
mov
mov
outsl
sbb
or
and
mov
xchg
sub
loope
pop
mov
pop
fisttpl
pop
mov
pop
repz
and
out
dec
roll
sarb
daa
iret
pop
pop
adcl
xchg
fsts
cmpsl
lret
mov
mov
cs
cwtl
pusha
imul
imul
test
and
xor
adcl
shlb
or
stos
adc
xor
push
les
popf
ljmp
pushf
out
pop
sahf
inc
push
or
mull
push
cltd
sbb
pop
xor
xor
jo
xchg
push
ljmp
mov
lahf
xor
and
cwtl
xchg
out
stos
lahf
out
fildl
jno
dec
fisttps
lods
popa
shrl
je
adc
dec
lods
mov
shrb
mov
movsl
addr16
std
fimull
scas
adc
xchg
cmp
les
jbe
xchg
mov
inc
shrl
mov
and
scas
pop
mov
mov
insl
ficoms
into
fisubs
jbe
je
adc
call
jns
sti
lods
cli
mov
adc
sbbl
outsb
loopne
enter
shr
dec
mov
pop
sub
pop
cmpb
lods
hlt
cmp
inc
dec
aam
iret
pop
and
iret
fldt
add
ja
hlt
mov
nop
fdivl
push
jg
insb
cmp
jl
lock
gs
xchg
push
adc
mov
pop
lret
or
jle
hlt
xchg
cltd
xor
or
lock
aam
pushl
lea
jb
xacquire
sbb
movsl
out
inc
sbb
dec
outsl
popf
adc
into
lret
nop
jae
aam
mov
fwait
or
repnz
ja
sbb
pop
sub
out
into
sahf
push
cli
mov
adc
mov
stos
pusha
repnz
jecxz
cmc
adc
pushf
add
sarb
mov
mov
and
fstpt
lret
jp
ret
ret
xchg
shl
sahf
xor
shrb
xchg
lock
jl
or
dec
xchg
jecxz
sbb
fadd
xlat
or
sahf
cmp
out
into
and
ret
mov
jmp
cmp
rclb
ljmp
enter
xor
push
dec
std
icebp
push
ljmp
jmp
ffree
clc
mov
jg
cmp
addr16
and
out
push
mov
jno
mov
dec
fmull
mov
sub
stos
outsl
jmp
loopne
test
cmpsl
xchg
push
ficomps
jae
dec
jo
mulb
ja
inc
jo
xchg
sbb
or
repz
insl
jge
cmp
push
push
pop
mov
loop
movsl
adc
sub
xorb
xchg
fnsave
jmp
mov
mov
jae
int
push
out
out
das
mov
inc
pop
cmp
aas
shll
loop
repnz
clc
cmpsl
xor
out
mov
jnp
jmp
loop
movl
testl
ss
add
pop
and
fstps
loop
test
pushf
cld
lret
fdivrl
xor
xchg
fs
sahf
xor
sti
or
adc
xor
fwait
repz
sbb
orl
repnz
sub
xchg
mov
mov
js
cld
sub
sub
loop
bound
add
mov
in
adc
lds
mov
lcall
das
push
or
jae
add
jbe
subl
les
iret
sbb
mov
inc
jle
mov
pop
dec
aad
jns
xchg
jl
sbb
fsubr
mov
fsubs
xor
jg
dec
sub
pop
scas
push
popa
shll
push
jne
pop
iret
jg
mov
push
jle
mov
sti
pop
mov
lret
shl
pop
imul
jbe
mov
stos
mov
push
add
push
dec
dec
mov
sarb
loop
movsb
loope
daa
push
movsb
jecxz
and
rorb
ja
arpl
imul
test
xchg
stos
mov
add
ss
outsl
scas
xchg
outsb
cmp
test
adcl
jg
mov
pushf
mov
push
lods
lret
mov
jge
xlat
nop
and
cmc
jnp
loope
adc
outsb
stos
push
pop
pushf
jecxz
inc
jge
pop
xor
cltd
mov
nop
out
leave
xor
iret
pop
adc
negl
sub
in
sub
ljmp
hlt
mov
or
dec
or
lahf
cmpxchg
nop
loopne
lahf
adc
clc
stos
mulb
push
or
lcall
pop
xchg
sbb
std
mov
mov
insl
addb
daa
add
xchg
push
xchg
xor
inc
mov
push
stos
into
fidivl
loope
xor
mov
sti
sbb
outsb
mov
xor
in
xor
sbbb
insl
push
call
addr16
pop
addl
pushf
jns
or
imul
fwait
cmp
sbb
or
scas
jg
jae
pusha
popf
call
popa
clc
add
or
ja
push
push
outsl
jbe
fwait
shl
mov
jne
cmpsb
das
in
andb
pop
sbb
dec
push
ljmp
call
mov
lret
bound
push
movb
jmp
and
mov
fistpll
repnz
or
outsl
cmp
mov
dec
jnp
jnp
fbstp
mov
fs
std
pop
test
rcrb
jnp
xor
push
inc
mov
scas
inc
ja
aam
add
ljmp
je
insl
and
pop
out
xor
in
hlt
sbb
cmc
jmp
inc
sbb
aas
mov
mov
dec
add
push
xor
mov
jp
dec
ret
cmp
pop
inc
and
arpl
jb
mov
dec
sbb
xor
fdivrs
ror
fs
jbe
xchg
pop
mov
popa
and
sbb
or
xor
sub
cmpsl
out
jnp
or
sbb
xchg
inc
cmp
out
xor
and
pusha
dec
xchg
into
gs
mov
lcall
rcl
jl
fidivl
lods
mov
adc
adc
push
es
inc
mov
cmp
cld
sti
jae
jno
pop
add
lods
lock
inc
jge
repnz
jle
mov
in
add
shll
lret
aas
int3
in
lea
fistl
push
in
nop
daa
jo
mov
roll
out
int3
xchg
ljmp
cmp
add
int
lods
and
test
xchg
dec
cmp
jecxz
mov
inc
loopne
or
sahf
push
fdivrp
push
or
js
cmpsb
repnz
movsl
js
das
loopne
fildl
dec
add
mov
insl
mov
sbbb
cmp
adcb
pop
jno
out
popa
orl
jp
les
adc
loop
pop
leave
adc
testb
in
sub
pop
ret
and
push
pop
faddl
in
dec
adc
pop
mov
loop
lahf
push
int3
jg
add
lds
dec
mov
jbe
or
shlb
adcl
lahf
mov
and
sbb
mov
mov
mov
rcrb
xor
cli
lods
dec
sbb
jp
std
js
mov
mov
inc
aam
add
out
mov
xor
in
jns
adc
xor
jl
mov
xlat
jbe
imul
mov
test
mov
dec
xchg
dec
push
sarb
stc
lock
imul
sbbb
fistpl
jp
cmp
jmp
xchg
jle
dec
js
pop
and
and
repnz
sub
sub
bound
jno
pop
inc
popa
add
into
inc
pop
push
repnz
jp
sti
xchg
std
adcb
imul
in
push
push
fucomp
jmp
mov
and
inc
xchg
xor
repnz
dec
xlat
mov
nop
mov
test
xor
mov
xchg
cmp
adc
push
stc
or
ret
dec
daa
nopl
pop
push
sahf
fdivl
test
jle
dec
leave
shlb
or
std
pop
je
lods
subl
xchg
cmp
aam
jecxz
stc
es
xor
xchg
packuswb
mov
addb
push
pop
lock
sub
cltd
int
mov
jmp
and
mov
xorl
push
mov
test
fnstenv
lods
or
mov
cmpsb
cli
push
insl
xchg
in
lret
mov
div
movaps
lods
cs
pop
lea
loop
daa
cmp
mov
cmp
and
sub
ss
fwait
sbb
ja
enter
cmc
in
xorb
inc
sbb
in
add
lock
sbb
mov
or
sub
pop
jae
jbe
lret
pop
mov
jnp
mov
sbb
cmp
or
pop
nop
xchg
clc
xor
mov
or
ret
mulb
fidivrs
jg
sub
out
push
adc
jl
data16
jge
and
shlb
out
rcr
test
cmp
movsb
in
mov
fdivs
pop
dec
pop
or
jge
fiaddl
std
bswap
jmp
sbb
mov
dec
add
cmp
mov
sbb
std
mov
mov
rcrb
xor
sub
in
mov
ljmp
cmp
lds
mov
jo
lret
subb
mov
add
in
jmp
insl
push
ljmp
push
loope
leave
rcll
or
push
inc
aad
jns
add
sbb
pop
and
nop
dec
jmp
test
xchg
xor
push
adc
test
jmp
popa
add
and
cmp
push
add
sbb
ss
mov
ret
xchg
add
out
jns
add
add
ret
inc
xchg
ret
shrl
sub
mov
jae
test
or
xlat
cmpsl
pop
negb
rcrb
aas
adc
mov
or
mov
mov
push
fdiv
lcall
cld
mov
imul
xchg
cli
cmpl
or
inc
jb
lcall
jbe
push
cmp
mov
cmp
mov
cmc
aad
daa
scas
inc
adc
add
popf
cltd
xor
dec
cld
or
dec
cmp
dec
mov
out
xlat
outsb
shlb
cmc
mov
cmp
adc
and
jbe
mov
adc
es
test
mov
lods
aas
addr16
mov
xor
mov
mov
bound
cmpsl
mov
insl
scas
stc
out
repz
jmp
scas
sbb
nop
clc
test
push
std
jo
cld
clc
popf
jmp
add
stc
lods
xchg
dec
push
and
mov
mov
int3
loope
inc
mov
lret
rolb
jns
mov
xchg
xchg
jp
xchg
lahf
pop
mov
aam
shlb
dec
mov
shlb
jnp
enter
jge
sti
mov
mov
call
sbbl
rcrl
lds
or
fdivr
divb
into
test
mov
add
jne
mov
leave
mov
std
xchg
mov
stos
mov
adc
dec
mov
add
cli
jns
add
xlat
mov
incl
mov
inc
stc
sbbb
pop
repnz
aad
sub
mov
xlat
outsb
aas
les
add
push
cmpl
and
movl
mov
adc
lret
ret
lcall
andl
cmp
dec
imul
fdiv
lcall
adc
cli
add
aad
stos
pop
daa
push
rclb
loopne
rorb
lds
cmp
push
loop
adc
mov
scas
lock
push
mov
pushf
xor
and
and
aas
push
movsb
adc
mov
cmc
mov
push
xchg
inc
or
mov
popa
and
addb
pop
sarl
inc
pushf
adc
mov
pop
jo
popa
jnp
enter
push
mov
mov
addb
enter
fisubl
push
jb
fnstsw
sbb
mov
or
cltd
sbbb
popa
push
xchg
mov
test
pop
jnp
iret
xor
cwtl
mov
mov
cld
loop
ss
fldt
lcall
jns
testb
fwait
adc
jnp
hlt
add
gs
jge
mov
push
test
lds
aas
clc
sub
pop
sbb
iret
pop
or
lea
clc
xchg
xor
push
xchg
lock
hlt
mov
jae
xchg
and
sbb
inc
fldt
or
cmpsl
jp
jnp
push
pop
xchg
in
dec
das
adc
xor
lds
nop
imul
xor
sahf
lods
popf
jle
dec
xor
cmp
scas
mov
pop
dec
ret
jb
into
xchg
outsl
dec
stc
clc
and
es
push
stos
jg
out
dec
fsts
aaa
lret
mov
jg
push
test
dec
xchg
lret
cmp
into
gs
or
lods
jne
ret
sub
inc
stos
rcll
pop
cmp
scas
stos
aam
pop
pop
and
sbbb
arpl
imul
out
push
mov
loop
jb
or
in
movsl
jae
xchg
aaa
sbb
pop
mov
fidivs
inc
stos
pop
insl
sub
sub
call
mov
sub
test
sbb
dec
or
dec
mov
dec
arpl
lret
sub
int3
je
or
sub
fwait
push
cmp
lret
aaa
aaa
cmpsb
inc
sub
sub
push
pop
pop
push
jl
iret
lods
out
icebp
je
mov
push
lock
sbb
xlat
arpl
fistl
jecxz
xchg
cmp
add
dec
jg
sbb
xchg
loop
pop
repnz
sbb
int
dec
sbb
cmp
xor
sarl
shlb
xlat
lea
push
adc
jne
cmpsl
xchg
js
sahf
lods
cmp
fbld
jo
in
cmpsl
aas
adc
seta
mov
cmpsb
xor
pop
mov
movsl
popa
imul
data16
cwtl
dec
lahf
push
lcall
lock
jno
mov
popa
cmpsl
nop
jo
sbb
xchg
jns
sti
sub
jno
and
pop
clc
xchg
push
cmp
ljmp
sbb
inc
xlat
sbb
xchg
add
movsb
pop
hlt
popa
stc
test
rcll
add
push
icebp
je
aad
test
mov
xchg
mov
sub
addr16
mov
lret
bound
and
hlt
sbb
fwait
pop
mov
loop
cmp
xlat
sahf
mov
add
xchg
xor
sub
fwait
test
lds
cwtl
push
pop
fldenv
ja
inc
inc
repz
imul
push
or
jns
loope
inc
lcall
push
lds
outsl
adc
inc
sbb
lock
data16
jno
mov
test
mul
rcrl
imul
push
jb
ss
mov
xchg
xchg
mov
cmp
cwtl
mov
je
mov
fistpl
ja
pop
jle
cltd
mov
dec
xor
push
rcrl
mov
das
mov
inc
jbe
push
sub
xchg
std
test
mov
leave
outsb
or
xchg
xchg
je
dec
add
pop
in
xor
lock
and
repz
ss
bound
iret
add
movb
or
pop
cmp
push
jp
dec
dec
pop
cmpsl
pushf
push
hlt
lret
xchg
xchg
sbb
cmp
int
xor
js
repz
and
pop
cmc
jo
mov
xchg
scas
xchg
push
xor
jnp
ret
sbb
je
jno
dec
xchg
mov
loopne
btc
outsl
jns
pop
pop
fildll
movsb
ja
mov
ficoml
or
or
popf
mov
mov
jge
lret
addb
cmc
jl
pop
cmc
xchg
adc
dec
dec
xor
add
push
rclb
sub
dec
popa
mov
sarb
scas
inc
mov
mov
sub
cmp
mov
fcoml
or
jle
or
inc
syscall
ss
pop
xchg
adc
xor
jne
out
jns
enter
mov
sbbl
add
cld
inc
rcrb
pop
jnp
sub
inc
movsb
cltd
xchg
sub
jge
and
push
sbbb
js
pushl
cld
subl
fwait
dec
nop
xchg
inc
push
call
xchg
jno
lds
lea
xchg
aas
push
lods
out
add
roll
and
xchg
rorl
push
mov
imul
sbb
lahf
inc
add
inc
ss
ret
pop
sarl
lret
push
xchg
pusha
out
imul
sbb
or
push
sti
dec
out
pop
add
sub
aaa
pop
sbb
add
daa
mov
insb
pop
loop
mov
je
dec
out
adc
lret
cwtl
insl
mov
add
dec
cmp
int
push
shll
shrl
mov
pusha
outsl
icebp
test
movsl
lods
mov
jnp
into
sub
js
iret
mov
fsubl
cmp
mov
test
push
in
in
mov
xchg
leave
insl
add
pop
mov
xor
arpl
iret
data16
xchg
sbb
sbb
orl
jp
xchg
hlt
loopne
mov
mov
ss
das
stos
pop
pop
into
adc
dec
pop
add
pop
jnp
lods
imul
or
pop
mov
adc
cmpsl
cs
and
mov
mov
fiaddl
fsubr
push
fs
jae
xchg
xor
or
sub
adc
or
mov
dec
sti
mov
repnz
stos
xchg
mov
cmp
push
xchg
pushf
add
test
clc
lea
push
lea
adc
aam
inc
call
outsl
inc
push
adc
pop
push
and
es
pop
pop
decb
jp
out
sub
je
sbb
hlt
pop
cmp
imul
xchg
pop
cmp
mov
add
and
adc
in
adc
es
push
push
jl
xchg
mov
int3
xor
faddl
jnp
xchg
loopne
jo
outsb
inc
insb
ja
dec
loopne
js
in
inc
push
push
iret
cmpsb
add
aas
adc
pop
jno
gs
mov
fnsave
into
jmp
xchg
or
pop
mov
add
or
roll
cmp
fidivrl
xor
inc
insl
dec
into
xor
cmp
xchg
fdivrs
fcoml
leave
test
out
cs
push
fwait
mov
cwtl
dec
in
daa
out
inc
or
int3
xor
aas
jge
andl
and
dec
aas
dec
lock
sub
in
sub
rcr
in
inc
or
fistpl
add
or
out
lods
xor
cmp
adc
jbe
pop
idivb
pop
xor
jle
or
dec
cwtl
aas
jno
in
mov
ret
push
out
or
insl
nop
inc
stos
or
imul
call
mov
add
sbb
insl
xchg
cmp
pusha
pop
out
inc
mov
mov
ss
repnz
inc
js
jbe
arpl
and
push
push
in
addl
sub
or
sahf
push
dec
inc
xchg
aas
jae
lods
cmp
imul
pop
push
cli
mov
or
repnz
push
addr16
mov
lahf
fsubrp
mov
ss
sbb
mov
lcall
or
cmpsl
pop
adc
dec
push
fisttps
out
xchg
in
push
ljmp
mov
jl
mov
in
dec
into
mov
loopne
sub
in
sub
lcall
idivb
fldl
mov
cltd
xor
mov
sbb
shll
in
nop
mov
dec
ficompl
lods
dec
lea
fidivl
std
push
mov
add
jmp
fiaddl
and
fidivl
repz
cwtl
pop
clc
mov
mov
in
clc
pop
jmp
xor
sarl
push
xor
pop
pop
shrl
lcall
pusha
les
mov
mov
adc
inc
fstl
jns
call
add
mov
mov
mov
sub
sub
adc
mov
sti
test
xchg
cltd
jbe
incl
jmp
nop
and
subb
pop
xor
push
jmp
shl
mov
es
xchg
shll
jae
aad
sub
out
mov
int
aaa
push
mov
xlat
xor
mov
xchg
lods
cmp
xchg
inc
clc
inc
add
lcall
push
mov
scas
mov
push
xchg
arpl
lcall
fstpl
mov
iret
incl
dec
lods
and
or
or
testl
aad
jne
insl
xchg
pop
xor
or
aad
fsubl
movsb
inc
inc
roll
inc
jmp
inc
dec
dec
or
mov
xor
pop
ret
fmull
pushf
pusha
mov
xchg
pop
pusha
testl
cs
shrl
push
inc
jno
cli
xor
lcall
std
cmp
scas
xchg
sbb
dec
test
loopne
sbb
stc
dec
mov
push
jecxz
inc
rcl
sub
push
mov
sub
movsl
dec
jb
jg
test
out
mov
insl
movsb
stos
sbb
mov
addr16
and
outsb
mov
andb
add
dec
neg
jmp
inc
and
rcll
ret
mov
xchg
lds
add
mov
sub
call
sti
pop
mov
jnp
subb
fucomi
hlt
test
cmpsb
leave
icebp
sub
ret
mov
shll
lret
mov
pushf
fildl
cwtl
push
les
jmp
xchg
mov
in
xchg
push
sti
es
popf
fistps
pop
mov
mov
and
jbe
mov
sti
call
mov
enter
cli
inc
or
inc
loope
imul
fisubrs
dec
cmp
cltd
pop
pop
jg
jg
out
in
jecxz
xchg
clc
shr
mov
pop
mov
pop
mov
fsubrs
mov
lahf
jne
dec
cmpsl
mov
bound
sub
std
mov
leave
popa
mov
mov
mov
es
ret
dec
movsb
fmull
daa
shll
xor
push
test
xchg
inc
xchg
loop
sbb
add
and
mov
add
sbb
shrb
adcl
or
inc
mov
mov
loopne
mov
stos
mov
sbb
push
dec
or
and
mov
sbb
cmp
push
insl
daa
or
mov
lcall
in
inc
dec
mov
push
and
add
in
cmp
jb
divl
inc
mov
clc
dec
pop
fbld
cmp
pop
push
and
in
lcall
out
clc
cmp
xor
lea
popf
ss
dec
mov
pushf
mov
add
out
mov
xchg
sub
mov
lcall
clc
jmp
pushl
push
sbb
xchg
lods
imul
lods
scas
or
ror
mov
in
push
pop
hlt
jl
jb
push
movsl
incb
js
push
xlat
stos
cltd
cmp
push
or
insb
stc
mov
punpckhdq
aas
arpl
inc
movsb
add
int3
insl
scas
sub
adc
or
lds
inc
mov
fimull
jle
push
inc
mov
imul
xchg
xor
test
aam
sbb
xchg
in
add
inc
arpl
or
jbe
lds
pop
cltd
shlb
push
adc
adc
dec
lahf
fwait
cmp
fsubrl
or
repnz
scas
and
jnp
mov
pop
pop
mov
pop
push
cmpb
sub
xchg
cmp
xor
mov
xor
lea
popf
mov
and
jle
cmpsl
mov
push
shrl
lahf
lds
testl
push
xor
sub
mov
cmpb
jge
jns
cltd
jo
jle
mov
movsl
divl
sbb
xor
pop
mov
repnz
sub
ds
test
negb
fwait
pop
sbb
inc
iret
sub
addr16
aas
mov
js
mov
ret
sbb
scas
dec
test
lds
int3
fcoms
dec
pop
dec
push
mov
aad
inc
and
push
mov
xchg
mov
xchg
pop
mov
sti
lret
mov
sub
jne
les
xor
inc
ljmp
pushf
inc
into
jmp
jle
inc
sbb
jg
sbb
ret
and
repz
jns
jns
stc
popf
sbbl
jge
setp
loop
jns
ja
xor
sbb
xor
xchg
ss
add
fucomip
push
aas
adc
scas
outsl
mov
adc
pop
xor
loop
push
jl
dec
inc
or
enter
es
je
lea
fdivr
push
sbbl
cmp
cmpsb
cmp
js
inc
gs
inc
mov
fs
mov
dec
sbb
jl
cmp
xor
repz
mov
idivb
dec
and
dec
sahf
cwtl
push
xchg
add
mov
jne
cld
sbb
add
mov
sbb
shrl
cmpsl
sti
xchg
cmc
jb
jmp
push
sbb
mov
push
cwtl
outsl
cmpsb
mov
into
out
cmc
mov
mov
and
dec
popa
jge
xor
sub
jnp
lds
xor
iret
data16
dec
xchg
cmc
mov
mov
push
mov
or
mov
fisttpll
dec
mov
insl
add
aam
popf
sti
es
or
add
jb
data16
fistpll
xchg
sub
and
add
jg
rolb
jg
pop
out
xchg
jo
clc
xor
inc
fisttpl
daa
xchg
in
out
mov
xchg
jl
stc
popa
lock
adc
imul
xor
arpl
dec
loopne
push
repz
test
shl
pusha
shlb
or
mov
mov
xchg
pop
fimuls
into
je
popf
out
ret
mov
dec
and
fbld
add
bound
pop
xchg
and
xchg
xchg
rcrl
scas
imul
negl
clc
xor
lahf
std
mov
pusha
fdivrl
xchg
xchg
xchg
xor
mov
popf
aaa
stos
loope
xor
ret
lcall
jmp
pusha
je
push
stos
lds
or
pop
xlat
pop
fistps
pop
push
mov
stc
mov
flds
arpl
mov
call
mov
scas
mov
in
xchg
cltd
das
fsubrl
mov
or
pop
test
mov
inc
aaa
js
sub
lret
push
ret
xchg
pop
ret
dec
inc
cmp
lds
notb
pop
cld
cltd
jo
push
rcrb
inc
sub
in
mov
leave
xchg
cmp
pop
out
push
cld
pop
js,pn
or
and
flds
shr
sub
cltd
adc
lock
inc
dec
std
sbb
test
cli
or
popa
scas
ret
cmp
sbbb
hlt
arpl
mov
jg
mov
mov
mov
or
xchg
push
mov
icebp
mov
xchg
sbb
rcr
mov
pop
sub
fcompl
pop
xor
inc
and
jne
lods
inc
mov
inc
push
addr16
inc
inc
fsubs
xor
test
xchg
adc
cmpsb
mov
push
je
aaa
cmpsl
add
repz
out
dec
push
popf
jp
pop
and
mov
test
dec
andb
pusha
xchg
xchg
clc
rcrl
icebp
mov
inc
aaa
bound
or
jg
cmc
push
lret
cld
mov
mov
or
movsb
orl
hlt
fs
in
push
sahf
xchg
adc
mov
push
idivb
pop
jle
subb
pop
aam
push
fstps
jg
mov
jg
sub
sbb
pushf
lods
sbb
fldenv
push
je
inc
lret
jl
xor
fldcw
loopne
push
mov
mov
ljmp
inc
in
fbld
sub
xchg
out
pop
sub
ror
jne
jp
add
repz
mov
cli
cmp
imul
cmpsb
dec
jp
sbb
loopne
imul
pop
lods
inc
mov
ss
fldt
loop
leave
xchg
scas
mov
aas
cltd
dec
rcrl
mov
cwtl
inc
add
pop
sub
jne
std
xchg
sub
mov
adc
hlt
dec
stc
xor
mov
dec
adcl
cld
clc
les
out
int3
ror
xor
mov
lock
lods
lods
pop
aad
bound
inc
inc
dec
xorl
sbb
lcall
mov
and
add
push
lods
lods
inc
fiadds
and
dec
mov
xor
ljmp
out
popf
lock
int
xor
fucomip
clc
call
jbe
inc
fsubrp
and
fstps
fidivs
jbe
and
addl
xorb
out
cmp
xchg
lea
scas
sub
cmpsb
xor
pop
movsb
push
in
add
jno
cmp
sti
inc
cwtl
xlat
movl
pushf
fimull
cld
test
test
and
adc
das
iret
loop
pop
jmp
clc
or
fisubl
repz
shrb
jle
pop
jl
mov
mov
fucom
rcrb
fnsave
dec
or
add
cwtl
push
xor
pop
repz
outsb
popa
add
or
sub
sub
pop
outsb
mov
ljmp
pop
xchg
dec
stc
mov
jecxz
jg
stc
das
or
insl
jge
insl
std
fidivl
pop
add
dec
push
and
dec
out
mov
pop
enter
pop
out
dec
jae
ja
sub
dec
aam
jge
or
pop
mov
enter
and
cli
xchg
pusha
dec
shl
inc
les
je
stos
out
jmp
dec
mov
mov
mov
sbbl
sub
sub
test
outsb
mov
aaa
int
xor
push
test
leave
or
push
stc
movsl
xchg
imul
fwait
xchg
sub
jns
mov
adc
loop
call
or
pop
dec
arpl
aad
push
jne
testb
sub
dec
scas
inc
cmp
js
pop
push
cmpb
cmp
in
dec
push
adc
popf
push
leave
hlt
xor
add
loope
jno
pushf
aaa
adc
jnp
lcall
mov
pop
mov
or
jl
sbb
xchg
sub
mov
inc
fcmove
sub
mov
push
xchg
dec
icebp
imul
pop
adc
setp
cmc
xor
popa
into
ss
sbb
clc
stos
dec
cmp
xor
insl
out
xsha256
cmpsb
aam
shll
out
pop
rclb
sti
dec
lea
icebp
add
and
xor
inc
sub
jb
fwait
jb
sbb
adc
inc
hlt
inc
hlt
pop
mov
xchg
inc
push
or
cmp
popa
shl
out
mov
dec
push
add
pop
scas
mov
js
jp
push
cmpsb
lea
in
sub
inc
pop
stc
dec
mov
data16
pop
mov
arpl
ljmp
sub
sbb
not
mov
xchg
dec
mov
jne
scas
and
and
mov
loopne
popa
nop
inc
scas
out
xor
cli
adc
dec
int3
das
add
cld
daa
and
cmc
test
gs
mov
sub
xor
decl
mov
insl
cmp
jne
sbb
mov
fcmove
inc
xchg
gs
mov
mov
popf
push
sub
lea
cmp
cmpsl
ds
std
cmp
mov
les
les
mov
and
mov
cli
xchg
xor
stos
mov
aam
jg
icebp
jge
pop
shlb
push
out
aas
xor
sahf
jmp
iret
lock
pop
popa
add
nop
fisubrl
inc
sti
cld
in
cmpsl
jle
test
xchg
push
xchg
rcrb
adc
mov
stos
ficoml
jnp
fucomp
xchg
adc
dec
and
sbbb
je
xchg
sub
mov
adc
popa
pop
dec
loope
jg
mov
dec
leave
bound
sub
clc
jb
inc
push
int3
into
and
ljmp
loopne
add
dec
into
adc
mov
xor
jge
in
movsl
mov
js
jb
inc
divb
shr
nop
stos
std
pop
jle
pop
pop
ret
jnp
mov
sub
repnz
cmp
inc
add
es
je
jecxz
mov
xchg
cmpb
xchg
imul
outsl
mov
fnstenv
dec
add
lods
mov
shll
mov
push
stos
stos
push
jmp
adc
pop
movsl
xor
mov
jns
lods
cmpsb
mov
mov
test
pop
add
andl
push
or
pop
cmpsl
fnstsw
lds
enter
icebp
insb
fnstenv
sti
inc
cli
jecxz
lea
dec
xor
mulb
into
gs
repz
lcall
in
lret
pop
addb
test
pusha
notl
inc
insl
mov
mov
inc
inc
mov
and
xor
xlat
gs
push
and
inc
outsl
call
sub
lret
sub
leave
lcall
xor
jl
xlat
sub
push
cmpsb
stc
pop
jp
or
mov
jb
popf
add
es
pop
sbb
and
xchg
mov
pushf
cmpsl
inc
popf
loope
insl
push
lea
lret
add
inc
jle
repnz
adc
aaa
or
push
mov
push
je
or
fdivrl
push
lahf
mov
lret
ljmp
push
loopne
mov
jb
fwait
sub
dec
mov
inc
in
sbbl
add
shlb
lods
pop
mov
imul
pop
pop
hlt
mov
es
mov
insl
or
ljmp
xor
lcall
cmp
cs
jbe,pn
mov
out
inc
mov
mov
xchg
mov
pop
stos
dec
fwait
xor
pop
loop
aam
cmp
repnz
pop
dec
in
test
add
movsb
dec
sub
inc
mov
pop
inc
jne
js
xchg
jno
insl
cld
es
les
dec
push
mov
les
cltd
lods
iret
pop
pop
flds
movsl
cmpsb
cmp
add
cmp
jp
cmc
push
cmpsl
fcmovnu
jbe
cmpsl
inc
rol
jmp
nopl
subb
clc
call
jl
outsb
movsb
inc
roll
pop
scas
cmpl
jle
xor
mov
xlat
dec
lret
clc
mov
divb
sub
push
jno
shr
imulb
ret
filds
mov
xorl
mov
cmc
cmpsb
and
cmc
test
or
gs
pop
decl
leave
int
das
pop
lock
pop
ja
and
adc
mov
es
mov
mov
fmull
mov
daa
bound
mov
mov
shll
loopne
sub
push
pop
inc
inc
test
leave
cmp
gs
cmp
insb
push
mov
test
jo
icebp
adc
aam
divl
std
sti
stos
fs
mov
add
movsb
fstpt
js
sbb
fwait
mov
les
xchg
pop
lds
pop
outsb
mov
int3
test
fs
mov
adc
cmpb
hlt
mov
lock
cmp
movsb
pop
lea
mov
imul
push
push
in
dec
mov
repnz
dec
nop
stos
cmp
xlat
adc
mov
dec
int3
pop
bound
imul
shll
std
adc
std
jo
setno
push
inc
out
pop
xchg
jnp
push
jnp
pop
icebp
orl
daa
jle
pop
inc
fwait
scas
and
and
std
rcll
xchg
arpl
repnz
mov
push
mov
inc
cld
orb
jns
jge
sbb
mov
push
mov
movsl
leave
fxch
jle
push
or
sub
add
lods
cltd
dec
xchg
mov
mov
xor
or
mov
add
imul
imul
stos
or
mov
mov
lcall
pop
icebp
push
cmp
mov
push
xchg
pop
aad
push
push
ja
pusha
into
into
divl
movsb
je
mov
fs
xor
jo
adc
lea
mov
xchg
iret
sub
push
aad
xor
pop
lock
fwait
pop
ljmp
out
test
mov
sub
ja
mov
jmp
jecxz
jg
sbb
add
movsl
mov
popf
hlt
mov
push
push
or
stc
ja
cmc
pop
lds
mov
adc
pop
sbb
dec
jo
jmp
out
gs
faddp
jle
mov
cmpsb
pusha
hlt
mov
addb
adc
push
jecxz
dec
cmp
insb
add
push
mov
test
cmp
aad
in
sti
movsl
cmp
sub
push
outsb
xor
fbstp
push
inc
out
inc
jns
jae
cwtl
mov
push
xchg
xchg
sub
stos
fidivrs
adc
iret
mov
pop
push
mov
xor
shlb
add
sbb
jns
movsb
cmp
nop
sbb
leave
js
push
stos
imul
push
push
ret
mov
loope
push
jmp
dec
cwtl
ljmp
mov
sbb
dec
cmp
push
cwtl
or
dec
scas
out
jne
lock
adc
adc
cmp
pusha
scas
jb
xorb
movsl
lret
imul
adc
mov
andl
iret
pop
push
ret
mov
mov
std
inc
addr16
fidivs
xchg
jmp
out
xor
push
xchg
stos
jmp
mov
lds
cmp
xchg
xorb
arpl
add
xor
jns
shrl
bound
jnp
cmpsb
push
mov
test
out
lds
adc
imul
add
aam
fimull
cmp
push
fs
fsubrl
xchg
fnsave
je
xchg
push
sti
rolb
mov
sbb
into
lahf
and
dec
push
imul
sub
jle
and
shrl
in
jp
mov
popa
sarb
mov
call
pushf
pop
sub
pusha
pop
out
cmp
fistl
dec
mov
fwait
push
jne
mov
mov
cmp
xchg
adc
repz
test
bound
dec
aam
xchg
sub
aam
les
popa
lret
out
jnp
lret
scas
xchg
movsb
cld
xchg
mov
hlt
mov
mov
xchg
lods
jmp
sub
inc
pop
hlt
test
xchg
or
push
loope
or
inc
pop
test
mov
adc
lock
xor
ret
lret
pusha
out
cmp
in
fidivl
xchg
jne
sbb
adc
xchg
xor
inc
dec
test
dec
jecxz
xchg
sub
sarb
xor
or
sub
scas
xchg
mov
lret
pop
dec
out
cmpl
add
mov
mov
adcl
xchg
mov
push
mov
iret
pop
test
pop
mov
mov
outsb
fwait
arpl
push
jbe
out
mov
push
lea
sahf
mov
out
sbb
mov
sbb
ds
dec
pop
sub
pop
add
inc
push
xor
xchg
fs
les
push
cmp
test
mov
jl
pop
adc
std
pop
fwait
mov
inc
test
jns
or
les
loope
sbb
flds
sbb
iret
fnstenv
mov
mov
xor
xchg
repz
push
add
test
jne
pop
cmc
adc
mov
sti
call
leave
or
cmp
dec
add
mov
jmp
aam
outsl
andl
push
mov
mov
fstpt
xchg
or
mov
pushf
xor
xchg
sbb
mov
mov
sbb
test
js
addr16
call
mov
sbbl
and
lahf
push
xchg
lret
out
clc
mov
fidivrs
sbb
pop
xchg
xchg
arpl
movsl
fsubrs
nop
lret
xlat
ret
and
fwait
test
or
dec
es
sbb
jne
mov
mov
outsl
mov
lods
shl
fiadds
fmull
sub
pause
adc
ret
dec
inc
pop
clc
shll
cmp
dec
out
jnp
jmp
dec
icebp
filds
cwtl
adc
mov
sub
cmp
das
cs
test
mov
xor
xor
mov
inc
out
js
mov
adc
inc
in
es
leave
xchg
mov
stos
das
and
adc
mov
sub
cmp
clc
adc
std
push
movsl
movsb
jne
stos
push
xor
lahf
mov
inc
dec
push
mov
lea
jge
add
out
sti
and
test
dec
lds
pop
setle
add
inc
insl
out
push
out
xchg
decl
adcb
sub
add
test
je
jae
pop
xor
fldt
dec
cmpsl
orl
xchg
jo
sbb
into
cmpsl
mov
lret
push
ret
and
jecxz
sbb
xchg
cli
cltd
pop
mov
push
add
loop
std
out
inc
fbstp
pusha
jl
shlb
in
cmp
adc
add
mov
jae
arpl
fisubrs
scas
pop
je
ficoml
adc
cs
adc
test
std
jnp
outsl
sub
pop
stos
test
insl
mov
xchg
mov
xchg
jne
leave
into
hlt
push
adc
imul
les
pop
loope
scas
fisubs
sahf
sub
pop
inc
movsb
add
scas
hlt
or
pop
and
or
movsl
jae
sub
xchg
pop
pop
ret
and
pop
sub
dec
scas
jne
add
sbb
mov
or
loope
fstp
gs
push
lcall
mov
or
cmp
imul
fmulp
das
sbb
or
pop
out
je
mov
daa
int3
mov
dec
inc
sbb
sarb
and
xor
jl
fists
scas
push
dec
jno
push
mov
sub
xor
jbe
inc
daa
dec
fwait
xchg
fmuls
insl
shlb
movsl
xor
fidivl
jns
inc
iret
loop
sbb
sub
and
jp
into
addr16
pop
pop
or
sub
inc
inc
out
in
sbb
sbb
daa
mov
les
jns
mov
stos
fistpll
rcrb
mov
pop
adc
push
lret
xor
fcoml
and
imul
lcall
lahf
push
xchg
imul
enter
sahf
mov
fdiv
rclb
mov
xor
inc
push
mov
xchg
cld
and
mov
scas
inc
fs
dec
add
lret
std
mov
pop
adc
frstor
std
pop
cmpsl
movsl
xor
fmulp
iret
into
jnp
leave
sbbl
in
push
jae
loop
mov
mov
sarb
inc
add
cmp
push
add
jmp
faddp
mov
mov
arpl
inc
in
dec
stc
cli
push
movsb
ja
or
mov
xchg
call
mov
scas
add
and
jge
es
clc
bound
shlb
cli
sarb
ret
jg
inc
fiadds
push
mov
fs
lock
and
and
xchg
pop
cmp
sbbl
mov
push
add
sbb
xchg
in
xchg
fldcw
mov
test
push
addr16
sbb
repz
test
inc
and
add
xchg
addr16
cwtl
out
shrb
fstl
and
mov
sub
inc
pop
xor
jno
popa
push
loope
cltd
clc
or
les
shll
clc
jl
or
pop
outsl
call
adc
push
pop
sarb
mov
inc
cmp
into
loope
push
add
test
xchg
and
and
push
mov
sbb
jno
test
clc
inc
stos
add
sbb
inc
xchg
outsb
test
fdivrs
adc
loop
fidivrl
out
into
cmpl
ja
aas
sub
faddp
xchg
jge
mov
jecxz
add
dec
popa
fdivrl
fidivs
sahf
jecxz
or
lods
mov
mov
and
int3
sti
cmpsl
jns,pt
push
pusha
mov
add
hlt
jbe
je
lds
push
mov
shlb
dec
cmp
cmc
sub
ljmp
dec
or
fwait
ljmp
dec
lea
shlb
mov
sub
xchg
cmp
push
mov
pop
xchg
cmp
add
mov
rorb
aam
push
or
decb
js
lea
xchg
mov
pop
or
sbbl
call
ds
jne
inc
inc
or
inc
xchg
add
ficoms
cmp
nop
add
cmp
jge
mov
jecxz
int
or
sbb
test
rorb
lods
shlb
mov
jp
orl
inc
inc
cmc
pop
and
aas
into
pop
cmc
outsl
mov
ret
shlb
fdiv
nop
daa
sub
xchg
add
xor
add
loop
and
add
subb
jno
stc
push
jl
lds
mov
xchg
dec
outsb
add
ret
pop
inc
dec
pushf
fcmovnb
inc
pop
stc
cld
and
and
inc
add
jns
jnp
ret
or
in
mov
mov
les
push
xor
or
gs
js
cmpsb
sbb
mov
stos
add
nop
imul
es
xor
loope
dec
jmp
out
ret
jmp
scas
sbb
push
call
imul
cmp
scas
xchg
shlb
out
roll
ds
cmp
call
jmp
pushl
mov
pushl
push
shrl
xchg
cmc
cmp
jns
sti
ja
rolb
call
mov
aam
popa
and
push
loope
lea
dec
jbe
scas
leave
jns
cmc
shlb
lds
jo
xchg
mov
leave
xorl
enter
xchg
call
adc
or
mov
out
int3
sub
pop
push
imull
cmpsb
jl
pop
popa
jle
bound
dec
push
pop
lock
std
dec
dec
and
les
cmp
mov
mov
fmull
mov
sub
cmpsl
ret
addr16
xchg
mov
pop
pop
mov
add
test
pushf
repz
loope
jae
lahf
xor
les
or
stos
xchg
xchg
xor
leave
push
fmul
shll
scas
adc
pop
testl
mov
mov
mov
pop
mov
add
out
dec
movsl
jl
fucomp
inc
cltd
inc
jns
cmpsl
shrl
or
push
sbb
add
adc
addl
imul
imul
hlt
push
mov
cltd
imul
push
fdivl
ss
push
mov
sbb
cmpsl
sub
jne
lret
mov
shrl
mov
xchg
stos
lahf
in
dec
xchg
mov
adc
mov
out
mov
mov
inc
movsb
cmp
jnp
dec
add
das
or
xchg
inc
in
and
push
and
cltd
ss
je
dec
push
pop
sbb
imul
scas
cmp
rolb
sbb
sub
or
jne
lcall
cwtl
cs
testl
add
mov
adc
fdivl
adc
xchg
arpl
mov
jmp
inc
xor
or
adc
gs
sub
cmpb
fdivp
arpl
lea
test
mov
cmc
pop
inc
cs
jne
adc
fiadds
pop
xchg
pop
aas
ss
adc
xchg
mov
push
cmp
and
fsubl
out
cli
mov
add
pop
dec
jle
scas
mov
add
cs
push
out
out
jb
nop
mov
jmp
icebp
loope
jnp
sbb
imul
xchg
mov
orb
scas
clc
and
adc
out
addr16
xchg
and
push
mov
mov
adc
jle
xor
xchg
dec
in
aas
lods
xchg
sahf
and
cmp
mov
xorb
sub
push
cmpsb
shll
mov
push
jno
clc
or
fbstp
lods
dec
mov
out
jo
and
xor
aas
xchg
push
push
or
ret
sbb
push
incb
cmp
lcall
and
pop
jo
mov
jl
sahf
jno
push
mov
lcall
or
divb
mov
sbb
jo
xor
shll
scas
int
in
adcl
sub
or
imull
xchg
xchg
xor
pop
gs
cltd
imul
mov
push
int3
outsb
adc
or
pop
cmp
inc
aaa
push
push
push
mov
icebp
nop
out
cld
cmp
dec
in
add
fidivrl
in
enter
outsb
jmp
lods
jmp
pop
std
scas
out
test
xchg
add
mov
call
mov
add
inc
xorb
mov
into
adc
out
push
loope
inc
inc
rorb
push
mov
xchg
lret
and
jl
jp
data16
adc
mov
pop
sbb
mov
sbb
inc
or
sub
cld
pop
xchg
mov
pop
xor
jne
sbb
cwtl
insl
sub
jg
das
test
xchg
mov
mov
rcrb
xor
lds
lahf
popa
or
push
jg
loop
pop
jl
jecxz
mov
mov
add
pop
mov
mov
mov
jmp
call
push
repz
xorb
iret
mov
test
push
aam
pop
outsb
cmp
subl
test
mov
mov
add
fistl
pop
outsb
fistps
stos
mov
lahf
xor
or
sbb
jne
lret
std
pop
lret
int
add
sbb
mov
pop
xchg
xor
repnz
push
xchg
je
mov
jno
or
pusha
xor
xchg
or
stos
pop
std
leave
pusha
jle,pn
jno
xorl
int
or
dec
movsb
mov
mov
ret
roll
scas
cs
or
cmpsl
dec
in
lock
out
lret
idivb
bound
repnz
push
adc
inc
sbb
fwait
xor
mov
test
and
out
xchg
pop
dec
pop
ret
cmp
or
imul
aad
sub
cmpsl
mov
mov
inc
clc
inc
pop
nop
loop
ds
dec
adc
add
pusha
in
dec
subb
adc
xor
pop
test
imul
mov
insl
xchg
xchg
pop
repnz
sbb
arpl
xlat
xchg
dec
sahf
mov
mov
cmp
sub
jmp
repnz
and
sbb
stos
cmp
mov
pop
sub
inc
pop
es
adc
hlt
cltd
xor
negb
outsb
out
dec
and
adcb
mov
add
jb
inc
pop
jo
std
stc
sub
int3
scas
sbb
std
lods
push
out
xlat
outsb
and
outsb
cmpl
pushf
xor
lret
test
pop
negl
dec
mov
imul
inc
inc
push
les
in
aas
mov
fisubl
in
and
imul
and
xchg
mov
push
flds
xlat
push
cld
inc
lea
loop
jmp
sub
cmp
push
mov
mov
xor
fwait
cmp
lret
sub
xor
jae
mov
aaa
xor
sbb
sahf
mov
pop
aad
popa
mov
and
int3
or
test
sarb
cmc
arpl
dec
pop
jge
loopne
mov
in
inc
xchg
ljmp
scas
rcl
and
movsl
rcll
fdivl
repnz
dec
pusha
cli
adc
lahf
jb
dec
movsb
mov
xlat
insb
mov
jnp
push
cltd
jnp
out
out
arpl
repz
in
adcb
mov
mov
enter
movsl
mov
push
fwait
mov
pop
in
shr
jl
sub
int3
mov
rcrb
add
loopne
xchg
nop
sbb
xchg
into
imull
aam
jne
sub
or
push
pop
mov
cmp
xchg
or
cmp
dec
pop
jge
outsl
push
push
pop
pop
call
enter
xor
xor
insl
jb
into
fwait
push
inc
mov
sbb
in
iret
lret
out
nopl
or
mov
loopne
xchg
imulb
lods
aam
cmp
cmc
xor
es
and
les
stos
repz
and
mov
test
movsl
arpl
ret
mov
push
movsl
pop
pop
dec
pop
mov
data16
pushf
xor
sub
test
xchg
xchg
dec
jecxz
int
jne
dec
aad
inc
pop
lods
std
xor
add
adc
cmp
das
cmp
inc
scas
outsb
rolb
dec
pop
ret
out
dec
fidivs
fsubrs
and
inc
mov
gs
mov
sti
lock
lods
xor
xchg
icebp
int
shll
add
or
cli
rolb
mov
clc
popa
lock
fldenv
shlb
jne
repz
in
lds
adc
jg
and
or
rol
sub
or
insl
jb
mov
out
or
std
adc
or
dec
nop
push
stos
loop
hlt
mov
add
leave
jno
jl
je
or
lods
int3
push
movsl
mov
sbb
jb
pop
iret
fisttpl
rorb
adcb
or
loopne
push
push
aam
xlat
popf
jns
fisttpll
fwait
and
mov
shrl
aas
int
inc
mov
or
popf
inc
test
out
icebp
int3
xor
push
sti
jbe
leave
scas
mov
pushf
mov
push
test
cwtl
out
imul
xchg
or
repz
stos
or
js
sub
fmull
loop
lret
lcall
jecxz
into
gs
es
mov
push
imulb
and
pop
dec
add
shrb
les
ja
dec
xchg
mov
mov
lock
xor
stos
xor
push
iret
in
std
repz
dec
mov
les
stos
sub
lods
jb
mov
jg
adc
push
push
addl
jbe
pop
cmpsb
lods
xchg
pop
push
in
lods
pop
lock
shll
cwtl
leave
and
push
or
je
dec
push
mov
pop
lret
mov
dec
mov
push
mov
scas
mov
into
bound
and
je
das
inc
add
mov
arpl
mov
or
lods
inc
and
cmpsb
push
xor
cmpsl
cwtl
imul
loop
pop
push
dec
mov
fisubrl
jp
cmp
into
test
inc
out
pop
daa
sahf
push
jp
inc
cmp
xchg
mov
mov
rclb
lods
test
inc
lds
fcmovne
push
jo
lret
mov
add
je
pop
mov
subl
xor
or
rcrb
inc
inc
push
jb
popa
aas
aam
lods
jmp
aam
popf
fidivs
sbb
stos
in
test
jmp
cmp
gs
pop
sbb
jne
pusha
js
sub
dec
dec
aaa
mov
push
jmp
outsl
movsl
xchg
les
jns
push
in
cmpsl
fcoml
jmp
xchg
mov
aam
das
jp
mov
jnp
fldenv
loope
enter
push
inc
cld
cmp
mov
cmp
cmp
inc
xchg
xor
pop
add
push
cmp
imul
mov
hlt
push
divl
stc
test
mov
pop
mov
jge
sti
scas
and
inc
adc
mov
xor
sbb
xchg
fisttpl
inc
ljmp
movsl
inc
fldcw
fs
mov
push
aas
cmp
pop
testb
test
in
popa
and
fimuls
imull
add
in
mov
mov
push
dec
and
test
adc
jbe
into
cmpsl
sub
mov
std
das
ljmp
rorb
sub
ss
inc
insl
jae
cmp
mov
cmc
push
fsts
or
popf
addr16
sub
out
pop
push
divl
stos
std
jg
mov
or
jle
add
rolb
fld
clc
cmp
and
or
out
mov
in
fabs
pop
push
cli
orb
fstl
lods
shll
mov
inc
dec
es
insb
loopne,pt
int3
dec
mov
popa
enter
sub
outsl
int3
mov
pop
mov
rcr
outsb
popf
inc
pushf
mov
or
mov
xchg
push
test
push
mov
arpl
mov
repnz
pop
sbb
fcomps
xor
dec
stos
dec
sub
call
ficomps
dec
movl
pop
dec
push
movsl
cmp
and
xchg
fcompl
outsb
scas
popf
in
std
dec
aaa
pop
mov
sbb
or
xchg
icebp
sbb
out
lcall
sub
push
insl
mov
in
andl
and
imul
pop
inc
sbb
dec
jge
pop
icebp
cmp
dec
movntps
xlat
aas
pop
les
out
jecxz
data16
mov
ficompl
mov
push
sub
ljmp
in
std
clc
cmpsl
cs
cmp
mov
mov
cmp
aam
mov
shl
and
adc
mov
jecxz
daa
and
fstpt
mov
movsb
test
hlt
mov
or
test
push
sbb
movsb
mov
lahf
or
cli
pop
nop
daa
pop
fcomps
mov
adc
aas
xchg
dec
jo
add
aas
test
pop
mov
cmp
jp
cs
aad
enter
inc
ljmp
aad
lea
test
and
aas
mov
stc
sub
and
add
jns
data16
adc
or
test
jb
sbb
adc
adc
jl
shrl
adc
adc
loop
shl
sub
ss
xor
leave
mov
adc
out
movsl
fsub
mov
or
pop
decl
imul
dec
lret
mov
ficoml
test
movsl
ja
jmp
and
xchg
test
and
inc
xchg
in
adc
aas
jge
jle
lret
fcomps
sbbl
dec
cmp
out
mov
adc
xor
shlb
lods
pop
fildl
jns
and
sub
inc
arpl
adc
xchg
push
mov
mov
hlt
ss
sub
jmp
xchg
and
xor
sbbl
fs
pushf
in
inc
or
xchg
push
out
dec
pop
adc
push
adc
mov
outsb
adc
jnp
push
iret
pop
mov
out
sbb
insl
sbb
lea
mov
cmp
sbbb
and
adc
mov
mulb
cmp
loope
pop
call
rcl
rcrb
sbb
xchg
shr
les
mov
sar
pop
cltd
and
dec
mov
fidivrs
add
mov
adc
lods
jb
push
sub
add
sub
stos
push
jle
pop
ret
aad
pop
cwtl
fneni(8087
push
fdiv
rcrb
inc
and
mov
mov
mov
add
lock
filds
sub
fsubrs
and
bound
stc
pop
testl
push
icebp
add
lret
inc
mov
loopne
loopne
mov
shlb
jg
adc
imul
int3
in
push
mov
mov
inc
or
daa
loop
xchg
mov
es
or
sub
ret
pop
mov
and
push
gs
xchg
data16
sbb
frstor
movsb
and
ret
xchg
int3
ds
lds
mov
out
cltd
cmpsl
sti
repz
xchg
dec
and
xchg
ja
inc
push
cs
rcrl
jno
mov
and
inc
add
gs
cs
pop
imul
cmp
ret
sbb
pop
cmc
xor
push
mov
jl
sbb
cwtl
outsl
xrelease
xchg
in
stos
sbb
fcomi
cwtl
clc
inc
jle
mov
nop
pop
insb
pop
push
xchg
mov
sub
sar
not
or
clc
ds
in
inc
nop
mov
fisubrs
jge
sbb
inc
inc
out
fs
mov
aam
or
mov
daa
into
sbb
dec
scas
mov
out
jp
insl
mov
xchg
inc
pusha
shlb
mov
jp
fwait
sti
inc
lahf
pop
into
les
push
or
pusha
ss
lahf
jbe
outsl
stos
dec
jmp
aas
bndstx
jle
inc
add
fwait
aas
push
roll
lock
push
inc
push
into
dec
cmp
jb
pop
sub
sbb
dec
dec
jno
lahf
xor
dec
in
ljmp
and
ret
out
lea
pusha
push
xchg
fs
push
shlb
icebp
push
leave
mov
in
fs
popf
mov
sbb
mov
mov
outsl
insb
sub
or
jle
clc
cwtl
das
ljmp
sub
data16
pop
or
xchg
std
test
xchg
jle
fwait
or
repnz
cmpsl
push
mov
inc
xor
insb
xchg
sub
cmp
aad
adc
mov
xor
dec
loopne
and
adc
xor
pop
ja
std
arpl
stos
cs
fisttps
xorb
sub
sub
test
and
fldt
jge
fldt
popa
movsb
mov
insl
xchg
and
push
cmp
push
lcall
in
js
pusha
imul
xchg
mov
sahf
and
imul
sahf
xor
adc
push
jno
sbb
mov
pop
leave
push
rclb
push
dec
out
jecxz
enter
push
cltd
push
popa
pop
push
nop
push
hlt
adc
ds
in
mov
push
call
push
out
dec
in
mov
mov
sbb
test
jg
or
push
ljmp
mov
push
sbb
cmpsb
xchg
fidivrl
inc
xor
das
leave
push
add
addr16
lock
lret
and
lods
test
xchg
cmc
mov
imul
push
incl
xor
lret
sub
mov
jne
or
push
lea
rep
xchg
adc
loope
arpl
pop
xor
cmp
xor
or
ja
push
push
mov
pop
or
andb
xor
loope
cli
xchg
sbb
out
in
xor
push
jbe
mov
sbb
loopne
bound
xlat
add
and
xchg
pop
mov
xchg
shlb
lcall
add
sub
addr16
add
push
sub
ret
outsb
sub
xor
lcall
test
lock
fsubrs
push
mov
and
cld
and
xor
and
into
cmp
sub
sti
mov
mov
sbb
cmp
cmp
ret
xorb
mov
dec
aam
fnstenv
fnsave
loope
or
dec
jle
cmp
enter
bound
or
sub
repnz
jecxz
imul
push
push
js
xchg
loop
xchg
xlat
iret
xchg
out
dec
enter
push
add
mov
ret
jbe
shlb
cmp
icebp
push
lret
jbe
ficoms
ds
or
repz
pop
or
ss
inc
scas
movsl
icebp
pop
outsb
pop
repz
or
xchg
xor
fs
call
sbb
push
nop
xchg
sbb
sub
cld
shl
insb
hlt
adc
das
adc
push
cmp
and
lock
sti
cmpsl
sbb
mov
mov
adc
add
bound
mov
xchg
inc
bound
popa
add
roll
push
mov
sahf
mov
dec
mov
lahf
dec
sub
and
inc
push
stc
fmulp
push
sub
xchg
insl
icebp
pop
xor
ret
mov
stos
jmp
mov
test
test
inc
ffreep
cs
lods
add
dec
lret
adc
in
aad
fisubl
mov
fs
xchg
cmp
mov
inc
inc
pop
cmpl
loope
adc
cmp
into
repz
int
clc
mov
jmp
dec
mov
jo
testb
xchg
adc
bswap
sahf
jno
and
sbb
fmul
and
inc
ficoms
cmc
fisubrs
xchg
fbstp
dec
ret
int
fnsave
cmpsl
mov
and
mov
add
mov
sti
and
addl
call
aam
xor
daa
pop
sbbl
and
xchg
lock
testl
sbb
pop
xor
sahf
pop
mov
and
or
pop
cmpsb
ss
jns
mov
mov
cmp
cmp
jne
movsb
cmpsb
cmpsl
scas
or
sbb
ret
dec
out
mov
test
fadds
or
xor
insl
bound
out
ret
out
movsl
int
lds
mov
add
roll
sub
hlt
or
clc
dec
cmp
jle
je
shlb
mov
mov
mov
pop
push
daa
insl
aad
mov
out
pop
sub
outsl
test
adc
insb
shr
test
std
out
mov
aad
or
out
enter
jle
ficoml
inc
pop
mov
inc
inc
xlat
mov
ss
scas
and
adc
xor
adc
aaa
sahf
lea
stc
fcomps
adc
push
fiaddl
xchg
xchg
loop
mov
and
pop
dec
and
inc
jb
in
and
dec
imul
xor
mov
and
mov
push
cmp
insb
popa
mov
xchg
xor
mov
test
add
fbstp
fldenv
inc
mov
stos
insl
cmp
test
test
xchg
out
push
loopne
fisttps
push
mov
jmp
aas
push
imul
dec
ret
sbb
jno
push
ljmp
popa
mov
mov
inc
std
push
mov
pusha
cli
xchg
bound
cmp
fmulp
xor
negl
mov
pop
mov
jne
gs
jb
mov
int
inc
xchg
jnp
test
fidivl
mov
cmp
loope
stc
inc
cmp
dec
testb
in
dec
addb
mov
das
adc
mov
jae
and
jae
dec
or
mull
cmp
fnstcw
loopne
mov
out
popa
adc
pop
int
in
fsubr
xor
mov
lods
mov
jecxz
push
ret
insb
leave
dec
mov
dec
addr16
mov
ds
mov
mov
dec
dec
push
jae
mov
mov
inc
test
mov
in
int3
push
inc
adc
jecxz
subl
dec
lahf
sbb
jp
rcrl
aad
and
push
sahf
and
jle
mov
out
test
push
xchg
mov
fucomp
outsb
into
popl
cmc
cmp
xchg
and
push
popf
sub
or
mov
push
out
div
mov
xlat
or
aaa
push
movsl
push
insb
call
pop
sbb
bound
lods
jo
fstps
negb
xchg
add
dec
mov
ret
popa
dec
xchg
adc
addr16
pop
jmp
pop
dec
jmp
xor
xchg
sub
pop
jb
call
xor
cmp
lret
inc
mov
std
int3
repz
into
dec
arpl
addr16
sub
pusha
pop
jae
int
mov
mov
out
dec
sub
push
adcb
mov
pusha
jnp
pop
inc
inc
mov
out
dec
adc
or
stos
mov
fidivl
ret
jge
dec
cltd
clc
cmpsl
out
shrb
jecxz
outsb
leave
insl
jae
jnp
sbb
pop
dec
pop
lock
inc
sbb
test
leave
cmp
es
pop
fdivp
or
cs
hlt
addr16
cmp
ret
repz
test
inc
call
out
sub
pop
sbb
les
stos
rorb
enter
ret
dec
cmc
dec
enter
adc
jecxz
das
sub
fcoms
add
xor
jb
movsl
cli
sbb
adc
mov
ja
repz
daa
das
je
mov
or
jb
or
jbe
sub
lock
mov
not
inc
cmp
jbe
push
ss
bound
rcrb
lahf
jmp
dec
add
jp
dec
hlt
mov
add
sub
xchg
shr
or
out
bound
pop
frstor
loope
adcl
sub
cmp
loop
cli
shrl
jns
test
stos
pop
or
push
lret
scas
xchg
pop
loopne
pop
push
mov
add
jge
dec
add
adc
stos
nop
cltd
and
aaa
out
jge
push
xchg
sub
xchg
lahf
inc
mov
sbb
add
sub
sbbl
repnz
pop
sar
jecxz
fstpl
ret
sub
sub
push
inc
add
inc
inc
pop
cmp
out
lock
jecxz
idiv
int3
xchg
hlt
push
fmull
and
ja
adc
lock
push
and
mov
jnp
push
mov
push
sbb
push
inc
inc
stos
inc
pop
les
flds
ljmp
loopne
jbe
sahf
xor
adc
aas
xchg
pop
fs
mov
pop
push
jl
mov
xchg
pop
sarl
call
pop
int3
jg
xchg
xchg
int
adc
mov
xchg
lods
jg
push
out
lahf
dec
cmp
shll
push
lods
pop
adc
pop
pop
pop
sbb
and
fucomip
pusha
inc
jns
lret
add
push
jne
or
mov
loopne
push
incb
aas
mov
and
sahf
xchg
call
aas
mov
push
adc
add
and
into
outsb
jae
jl
xchg
dec
fldenv
outsb
push
inc
int3
adc
push
pop
outsl
push
rcrb
mov
fldl
push
insb
sub
cltd
xorb
es
sbb
xchg
inc
dec
jmp
xchg
add
or
imul
ret
scas
xor
aam
mov
out
mov
xor
push
mov
push
inc
jmp
fildll
adc
pop
add
or
jno
aaa
add
jno
add
mov
fldln2
lea
sbbl
outsl
sub
shlb
popa
aad
ja
outsl
or
cmp
inc
jp
in
jmp
out
mov
inc
out
fcoml
fsubrl
inc
push
mov
push
xlat
inc
or
cmp
cmp
push
xchg
dec
dec
push
ret
dec
mov
jne
lock
sub
movsl
es
cmpsb
mov
push
cmp
xorl
icebp
lret
cwtl
test
mov
testl
jno
imul
add
xorl
push
xorb
test
loopne
mov
inc
jne
mov
inc
and
xchg
or
js
repz
jle
mov
add
sbb
cmp
push
cltd
mov
mov
in
pop
ret
out
mov
stos
movsl
mov
xor
push
addl
lret
jmp
loope
xchg
sbb
pop
les
sbb
jp
mov
push
push
jmp
xor
or
arpl
add
dec
in
in
jno
loop
aam
cmp
sub
mov
jl
sbbl
imul
sti
inc
enter
int3
in
jb
dec
adc
push
or
mov
movl
or
adc
fisubl
fsub
xchg
push
or
mov
ja
shll
fmuls
xor
cwtl
test
adc
mov
data16
pop
pop
enter
mov
cli
and
stc
sub
mov
xchg
jmp
adc
inc
aas
dec
int
aam
push
push
jo
push
loop
fimull
lret
sbb
mov
mov
inc
cltd
inc
push
and
inc
out
push
jo
out
mov
insb
fs
mov
bound
add
insl
in
pop
movsb
sub
insl
jge
sarl
cmp
jp
mov
gs
aaa
adc
imul
lahf
rcrl
adc
sti
push
lcall
repz
mov
xchg
mov
hlt
mov
out
jl
ljmp
and
icebp
outsb
fstp
sbb
stc
les
adc
inc
jmp
sbb
lods
ss
jnp
jecxz
fstps
out
mov
inc
inc
int3
movsl
cmp
jmp
iret
jae
jae
pop
and
push
imul
jbe
stos
testb
enter
xchg
pop
repz
je
fisubs
dec
adc
dec
mov
adc
inc
bound
dec
mov
fs
mov
xchg
mov
lcall
mov
push
and
sub
lds
pop
add
lock
fsubrs
lea
cli
lds
mov
mov
popa
and
call
data16
lcall
pop
clc
fwait
push
test
jge
sbb
sti
xchg
sti
scas
jp
daa
out
loopne
lods
adc
mov
inc
nop
stos
inc
lods
outsl
push
fbld
cli
inc
jg
or
leave
mov
aas
and
xlat
xchg
push
xor
cmp
mov
outsb
mov
fcomps
ja
pop
sub
pushf
sbb
dec
fwait
pop
bndstx
mov
jb
lret
sbb
aam
sarl
mov
iret
xor
or
lret
jne
pusha
testl
ja
lahf
test
sub
test
pushl
jo
sub
pushf
test
stc
or
jnp
xor
jno
cmp
test
mov
add
xchg
xchg
and
ret
das
cmp
hlt
mov
mov
jnp
sub
fistl
test
jns
xchg
mov
pop
lret
cmc
or
shll
fistl
or
mov
adc
sbb
push
mov
and
clc
out
test
jge
inc
dec
in
or
adc
push
in
cmp
jnp
push
lcall
push
repnz
xchg
and
popa
lds
nop
pop
movsb
push
inc
fidivl
dec
xchg
cwtl
stos
sahf
fcoms
sbb
mov
mov
jae
in
call
mov
push
sbb
lcall
sarl
inc
mov
mov
imul
push
cmp
outsb
adc
xchg
popa
orl
inc
fdivl
inc
push
jmp
nop
test
fcomip
cltd
popa
stc
lret
adc
or
test
cmp
test
mov
pop
jne
popf
jg
pop
in
cwtl
inc
fwait
inc
addr16
fimull
pop
inc
sbb
jo
mov
vcvtdq2ps
add
faddp
adc
add
subb
cmp
popf
cmp
xchg
call
cli
and
mov
cmp
aam
sbb
push
outsl
scas
push
rorl
loope
fucomip
sti
out
push
les
iret
fildl
mov
mov
out
jbe
mov
adc
sarb
sub
sub
mov
nop
jg
adc
xchg
stc
xorl
mov
cmp
xor
js
jb
pop
push
mov
outsb
pop
push
mov
lcall
dec
push
jns
and
cmp
nop
mov
ljmp
mov
sti
inc
inc
rorb
push
cmpsb
aad
cmpsb
inc
inc
sbb
push
cmp
mov
repz
stc
sbb
jmp
mov
inc
cmp
cwtl
loope
lods
mov
rcrb
aam
jb
lahf
pop
negb
jg
sub
dec
bound
push
stos
dec
shlb
clc
jae
mov
sbb
lcall
sahf
push
xchg
mov
mov
ss
sub
fidivrl
push
pop
fcoml
loope
and
sahf
adc
push
test
jecxz
outsb
mov
add
jno
xchg
or
pop
outsl
sbbb
repz
scas
pop
mov
add
mov
add
stos
and
lods
pop
insb
cld
sbbb
in
stc
sub
add
add
mov
bound
pop
in
xchg
mov
cmpsb
mov
sbb
leave
push
movb
add
sub
add
sbb
sbb
adcl
pop
jae
lds
aad
es
or
ficoml
out
cmp
nop
lods
imul
push
icebp
mov
mov
insl
rcrb
sub
mov
subb
jns
lret
mov
cld
mov
cs
xchg
lods
xlat
leave
sahf
clc
addr16
test
xchg
aad
add
and
add
into
jmp
mov
jp
in
inc
arpl
int
pop
mov
cmp
mov
ret
push
adc
jmp
pop
movsl
cmp
es
aas
imul
stos
fistpl
mov
push
xchg
sbb
in
mov
cmp
into
jmp
fnstcw
inc
lret
cwtl
mov
leave
scas
or
xor
adc
adc
hlt
mov
loopne
loope
mov
push
aad
outsb
mov
arpl
jecxz
hlt
cmpsl
xor
test
sbb
scas
jge
scas
or
pop
jo
cs
stc
pop
xchg
pushf
cmc
sbb
dec
fbld
jnp
scas
les
pop
in
dec
push
inc
ret
push
or
cltd
inc
sbb
ds
mov
inc
dec
test
cltd
cmpsb
or
xchg
int
stos
cli
push
cs
mov
xor
push
out
xor
aam
imul
pop
daa
in
pusha
jle
or
outsl
jne
sub
or
iret
mov
insb
test
mov
lcall
xchg
sbb
jle
sub
and
mov
cmp
jb
xor
lea
or
addl
add
cs
jno
push
stc
imul
pop
xchg
fidivrs
xor
inc
mov
pop
inc
pop
lock
lea
cs
das
and
rcl
and
mov
fdivl
sarl
mov
mov
xlat
js
xchg
insl
jmp
mov
daa
mov
mov
mov
push
jl
inc
scas
pop
mov
out
insb
jl
add
cmp
aad
pop
cmpsl
adc
leave
aam
lds
idiv
mov
cmp
jbe
push
jecxz
mov
cmpsb
loop
mov
mov
jbe
popa
std
or
push
cmpsb
iret
and
push
rorl
clc
push
add
lret
or
popa
or
leave
shrl
sti
dec
loop
pslld
cltd
xor
je
sub
add
outsl
pmullw
fdiv
mov
les
dec
sbb
in
ret
fmul
mov
inc
push
in
aam
popa
insb
inc
fcomps
mov
push
out
std
xchg
sub
lods
and
dec
push
cwtl
pop
fimuls
and
les
push
or
push
icebp
push
dec
cmp
inc
xlat
add
insb
notl
push
nop
mov
mov
fcomip
mov
popa
cmp
movsl
inc
cwtl
xchg
adc
lcall
ja
push
cwtl
dec
inc
adc
inc
sarl
xchg
stos
pop
xchg
nop
pop
ret
push
xor
sbb
xor
imul
mov
sub
jb
jle
in
rcrl
push
or
fstpl
pop
xchg
xchg
cs
cltd
xor
dec
shr
push
mov
imul
xor
out
add
sti
or
cs
loope
sbb
dec
pusha
outsb
push
mov
jl
push
in
push
subb
add
and
or
jge
das
push
sbb
ret
push
test
into
test
in
hlt
outsl
lods
mov
clc
cmpsl
aaa
lret
sti
or
lea
rolb
jo
sbb
or
shrb
mov
ret
inc
or
testb
xchg
xchg
push
fsubrl
or
iret
stos
mov
cld
pop
jmp
mov
cmp
jae
push
pop
cmpsb
loop
lahf
mov
leave
out
insl
sbb
mov
sahf
clc
sahf
pop
push
lahf
int
outsl
add
dec
cmp
xor
aas
push
jmp
or
sub
mov
add
xchg
cwtl
inc
je
jae
add
jecxz
and
lock
mov
fdivs
fdivl
cmp
sbb
bound
inc
daa
cltd
out
scas
inc
dec
mov
clc
stos
cmp
rcr
xlat
inc
adc
fwait
sarl
das
mov
cmp
xchg
cmp
iret
insb
pop
push
fsubs
stos
inc
dec
and
dec
pop
out
jge
push
sub
sti
or
movsl
xchg
loopne
ret
cmc
mov
mov
cltd
cmp
pusha
xor
js
inc
stc
rcll
lret
clc
inc
fldt
outsb
nop
sti
mov
bound
fdiv
enter
push
call
cmp
out
sbb
movsl
add
aas
or
call
in
mov
sub
cmc
sbb
adc
addb
sub
hlt
xchg
mov
in
mov
sub
lds
cld
mov
adc
lret
pop
jl
mov
mov
fwait
test
aam
lds
testl
jae
xchg
icebp
mov
popf
das
pop
and
scas
jl
loop
push
push
mov
sarl
and
push
mov
imul
inc
push
ljmp
cmp
cltd
or
push
mov
rorb
push
xchg
add
xlat
add
stos
outsb
movsl
ret
lods
mov
scas
sub
mov
into
icebp
cld
inc
aam
xchg
and
push
mov
jmp
mov
adc
pop
push
cmpsl
rorl
imul
insb
push
out
pop
out
movsb
les
rorl
cmp
or
dec
cwtl
xor
push
push
pushf
pop
stc
fidivrs
lds
insb
pusha
insl
lcall
push
lea
push
mov
mul
push
rcr
xchg
mov
sbb
sbb
scas
inc
mov
fimull
and
jmp
fistps
cwtl
gs
add
add
sub
mov
in
xchg
and
dec
mov
adc
sti
out
xor
sbb
jl
xchg
add
sub
push
mov
mov
cmp
lea
cmp
sbb
or
das
jle
mov
data16
repnz
sub
jb
push
mov
jae
push
adc
jns
add
das
les
push
jg
xor
in
dec
jecxz
test
repnz
popa
lds
mov
dec
mov
adc
and
lods
xchg
pushl
ja
inc
fcompl
int
xchg
cmpsb
cmp
aad
in
inc
sahf
hlt
sub
test
aaa
icebp
mov
adc
test
push
cmp
inc
aam
gs
add
xchg
or
sub
nop
push
pop
testb
and
fwait
adc
xor
push
jno
mov
xchg
mov
jnp
loop
repz
sub
jno
in
out
dec
sbb
insb
add
and
leave
push
dec
inc
divl
push
inc
cmp
inc
mov
mov
fdivl
mov
sbb
push
cli
fisttpl
xor
daa
addr16
les
push
scas
test
popa
pop
out
push
les
shl
cs
call
shlb
shlb
add
outsl
out
out
push
cmpsl
ds
mov
pop
sbb
mov
xchg
sub
adc
test
and
jecxz
and
jl
cmp
or
ret
push
add
dec
imul
pushf
and
mov
test
rcr
cmpsl
insb
sub
dec
pop
dec
rclb
aad
and
rorl
and
fwait
jae
jbe
mov
inc
adc
adc
jb
test
adc
pop
roll
cmp
out
mov
fisttps
mov
insl
shrl
mov
mov
pushf
test
lret
mov
adc
and
xlat
stos
inc
leave
push
fidivs
jmp
and
cmp
jno
push
xor
push
test
pop
stos
cwtl
in
xchg
das
loopne
or
repnz
inc
lock
and
push
push
push
lret
sbb
popa
movsl
js
pop
and
push
das
add
repz
arpl
sub
dec
pushl
xchg
sbb
fwait
xchg
cmpsb
mov
push
or
fldl2e
or
hlt
icebp
mov
sub
int
dec
fidivs
mov
loopne
mov
aas
xor
inc
inc
bound
rcrb
pop
mov
cli
push
pop
mov
pushf
scas
mov
mov
in
popf
shrl
cmp
cmp
jno
xchg
stos
ret
hlt
or
push
ds
inc
and
mov
and
mov
mov
pusha
add
mov
mov
or
mov
mov
add
movsl
clc
xchg
pop
rol
ficompl
fcompp
imul
pushf
mov
loop
das
int
clc
decb
lret
bound
mov
adc
or
idivl
enter
cmpsb
dec
xor
repnz
fstl
push
cmp
mov
lea
stc
mov
lret
cmpsb
mov
adc
ficomps
icebp
push
es
imul
lds
les
loop
cmpsl
mov
and
pcmpgtw
xchg
in
adc
leave
fisubrl
stc
cmp
daa
xor
inc
dec
xchg
imul
rcl
jbe
pop
xor
xchg
arpl
or
dec
pop
dec
test
jecxz
ljmp
jmp
aaa
push
dec
jge
fcmove
jecxz
sbb
fidivl
xchg
dec
push
and
pinsrw
jno
jns
in
and
jle
aam
test
add
icebp
dec
fstl
and
loop
cwtl
arpl
xchg
dec
jns
dec
mov
shlb
enter
inc
inc
out
jnp
icebp
rcrb
mov
fnsave
dec
push
cmp
add
mov
push
or
pop
in
aad
ds
jecxz
bound
fstpl
inc
repz
cli
cmpsb
lret
xchg
cmp
out
nop
sbb
aas
outsb
add
popa
xchg
push
lcall
and
inc
in
jb
popa
lea
jge
dec
lcall
add
sub
hlt
xor
dec
adc
pop
pop
jae
jp
sahf
mov
sbb
pop
xor
mov
pop
repnz
les
jns
mov
sbb
incl
push
mov
sbb
orb
jmp
mov
add
insl
jmp
jbe
mov
jmp
clc
aad
jns
clc
scas
stc
adc
inc
inc
xor
cld
orb
int3
fwait
pop
outsl
movsb
and
jg
nop
inc
gs
mov
loop
pop
jne
lds
shll
add
lcall
stc
movsb
ror
pop
cli
and
call
cmp
mov
nop
xchg
add
push
cmp
movsb
jns
hlt
cmp
push
in
dec
push
jne
jmp
sbb
and
push
or
add
cmp
and
in
jae
dec
mov
jmp
dec
jp
cmp
push
dec
jecxz
mov
ficomps
insl
test
fistpll
lahf
mov
inc
arpl
std
out
aad
mov
dec
inc
ja
lea
adc
push
jns
les
jp
lcall
jb
dec
push
cmpsl
fsubl
add
mov
cmpsl
movsl
add
sbb
scas
iret
jo
stos
int3
and
negl
mov
dec
popa
das
push
mov
sub
cmp
or
pusha
adc
lret
ret
lods
push
mov
cmpl
xor
js
ja
std
pop
filds
sbb
sahf
cmc
cmc
xor
mov
push
push
sub
jb
out
in
mov
inc
in
dec
ret
fisubs
fcomps
test
push
xor
enter
xchg
mov
data16
inc
push
andl
push
adc
inc
add
and
dec
push
cmpsl
xor
mov
mov
jno
mov
sbb
in
leave
inc
fsubrl
scas
fisubrl
or
andl
pop
repz
or
dec
lsl
fwait
xor
fs
lock
dec
lods
jbe
test
enter
shlb
dec
xor
cmp
mov
ds
lods
dec
in
fwait
xor
popa
imul
or
out
in
and
fimull
sub
or
mov
inc
call
inc
sub
pop
cmpsb
cltd
push
mov
aam
and
jge
add
or
jmp
es
das
mov
fldenv
jae
mov
mov
inc
fdiv
adc
iret
jle
jl
in
daa
xor
repnz
mov
push
inc
data16
js
mov
xchg
sub
fwait
xchg
sub
sub
pop
push
popf
fwait
movsb
in
push
test
xor
inc
mulb
pop
xchg
pop
repz
jg
sbb
aas
arpl
cwtl
into
icebp
andb
test
pop
jne
pop
cmp
xchg
inc
jo
jp
fisubrs
leave
shl
andb
jle
xchg
jnp
lea
rorb
stos
sbb
sub
daa
arpl
adc
sbb
iret
rcrb
inc
pop
insb
jle
aas
inc
cmp
pop
shl
movl
addl
sbb
inc
inc
cs
push
in
ret
adc
enter
das
aad
inc
daa
inc
jg
shlb
push
sti
xchg
adc
xlat
push
dec
xchg
scas
mov
scas
cmp
leave
dec
ret
stc
mov
std
xchg
lret
mov
jns
fcomip
or
cmp
clc
lahf
add
mov
push
lahf
pop
fs
shl
jno
sub
add
addr16
stos
sahf
inc
push
test
sbb
stc
repz
dec
fildl
adc
sti
out
push
insl
lcall
cltd
mov
sbb
in
xchg
in
outsl
ret
incb
out
add
mov
stc
inc
es
pusha
pushf
jmp
clc
dec
or
shrl
in
and
lret
xchg
sahf
jmp
rcrb
icebp
push
shrb
xchg
out
mov
or
xchg
and
decb
fwait
lret
jne
aaa
popa
clc
test
nop
sbb
addr16
je
insb
mov
or
mov
push
popf
stc
fstps
stc
les
xchg
adc
add
xchg
fists
ljmp
movsl
insb
mov
and
cmpsb
inc
int3
data16
out
jp
jmp
xor
sbb
dec
mov
lret
js
jg,pn
arpl
cmp
divb
jne
push
loopne
xchg
xchg
pop
pop
incw
inc
fmulp
mov
bound
add
lret
jnp
lea
jle
fisubl
and
sbb
jp
das
and
xor
xor
cmp
mov
adc
lock
inc
and
pop
test
outsb
add
divl
pop
test
je
outsb
jae
pusha
pop
pop
pop
std
cltd
fsubrs
cmpl
mov
inc
insl
jae
xchg
movsl
dec
or
in
out
xchg
inc
xchg
mov
mov
addl
sub
adc
out
add
pop
pop
sbb
aad
jae
xor
xchg
ds
lret
or
mov
in
and
inc
or
out
dec
dec
dec
negl
add
sbb
jnp
xchg
ret
shrl
or
jp
in
or
vmwrite
and
push
out
add
dec
mov
add
push
mov
decl
scas
je
or
jno
mov
pop
gs
adc
sar
scas
jno
test
test
in
movsb
in
fmull
fdivrs
sbb
movsb
outsl
cmp
test
icebp
jo
rcrb
lds
xor
mov
xchg
stos
cmp
fldl
mov
in
inc
scas
add
jmp
inc
pop
or
adc
lds
sbb
gs
loop
sbb
cld
sub
ljmp
mov
xchg
sbb
lret
addr16
in
or
les
xorb
add
inc
pushf
neg
sbb
sbb
shrl
push
gs
adc
fstpt
mov
js
in
insb
dec
pop
fsubrs
jge
sub
mov
pop
insl
xchg
jp
jp
fdivs
mov
fnstenv
cmp
or
fs
ret
pop
fbld
jno
sub
jne
addr16
push
jecxz
jno
inc
pop
ljmp
add
mov
lea
add
ret
and
mov
and
mov
sub
ja
or
andl
pop
mov
in
ss
xor
bound
scas
sub
xor
bound
mov
cmpsb
adc
inc
rol
pop
pop
mov
xlat
test
movsl
iret
test
sbb
ret
cmp
or
pop
movsl
mov
iret
aas
loopne
jno
push
shr
dec
stos
mov
subb
nop
int
test
lret
les
push
or
jnp
lcall
lahf
push
lea
in
inc
add
bound
mov
jecxz
aaa
pop
jecxz
pusha
filds
mov
cli
ljmp
out
aad
popf
lock
dec
lock
cmp
mov
ss
in
adcl
repz
icebp
fcmovne
jns
std
add
inc
sbb
xchg
stos
add
and
xor
fdivl
sub
in
cli
pop
mov
popf
xor
lret
and
mov
addr16
pusha
mov
pop
sbb
sbb
xchg
rol
jo
cmc
mov
sbbl
stos
popf
sti
mov
jl
sub
mov
in
add
adc
sbb
jge
push
imul
imul
and
insl
add
add
ds
in
lcall
inc
cmp
inc
clc
xor
test
sbbb
push
inc
pop
dec
loopne
les
shll
mov
lcall
push
int3
sbb
mov
ret
adcb
aam
lock
xchg
lock
cmp
stc
imul
push
xchg
jnp
std
sbb
cs
ljmp
inc
pop
ds
pop
lds
test
mov
adc
sbb
ds
pushf
out
pop
xor
cmc
push
insl
adc
xor
inc
xor
lock
aaa
sahf
dec
mov
cmp
cmp
pop
lahf
jmp
lahf
in
push
inc
mov
inc
out
xchg
mov
adc
inc
or
cld
sbb
pop
mov
lods
or
push
jo
mov
std
fnstcw
data16
jo
hlt
dec
adc
rclb
jg
sub
insl
push
pop
mov
test
jo
push
sub
data16
add
lds
adc
andb
inc
jb
nop
sub
leave
xor
pusha
cmp
bnd
jae
scas
mov
adc
jae
das
mov
push
jae
or
or
loop
mov
cmpsb
in
sbb
mov
lock
mov
mov
mov
or
push
cmp
push
pop
inc
popa
xor
mov
icebp
mov
jmp
xchg
and
or
add
fwait
stc
mov
je
bound
loope
das
fwait
xor
push
push
inc
push
pop
cs
mov
mov
add
je
pop
mov
arpl
fs
jno
aad
xlat
sti
pushf
insl
decl
mov
subl
jnp
test
jnp
fcomp
imul
sahf
mov
ja
iret
sub
sub
and
js
inc
mov
xlat
inc
pop
or
shrb
jmp
sbb
rcll
imul
mov
testl
pop
jne
dec
sub
das
pop
jge
sbb
lahf
xchg
ret
push
lahf
add
mov
add
movsl
andl
movsl
test
decl
adc
inc
push
pop
dec
fcmovu
clc
sub
shufps
sbb
mov
xchg
xchg
jbe
cmc
xor
stos
repz
test
add
pop
xchg
and
scas
sub
jg
lcall
fdivl
lods
dec
push
arpl
mov
iret
mov
pop
cmp
push
and
pushf
das
push
sub
mov
xor
mov
xor
pushf
inc
pop
scas
mov
dec
and
inc
cmp
inc
out
fsub
cmp
clc
fs
jmp
dec
add
mov
lret
std
pop
cmp
xchg
and
das
or
and
adc
popf
aaa
data16
xor
test
popf
mov
mov
mov
jb
add
sbb
and
cmpsb
add
imul
push
push
pop
js
cld
sbb
fs
out
mov
jo
jge
and
jmp
cmp
popf
dec
dec
xchg
scas
inc
cltd
push
mov
cmpsl
mov
pop
das
stos
imul
sub
fldpi
mov
movsb
mov
sub
movsl
nop
mov
inc
fs
insb
in
arpl
in
ds
inc
add
xchg
rcr
inc
add
and
inc
push
sbb
js
cmp
adc
repz
das
movsl
mov
faddl
dec
fucom
pop
lret
mov
rolb
mov
sub
out
pop
mov
movsb
jmp
xor
in
sbb
pusha
add
cmc
test
jmp
and
fnstsw
or
sub
gs
ret
test
or
and
mov
xor
loope
stc
fwait
pop
hlt
int3
orb
adc
xor
pop
dec
pop
lcall
sub
mov
adc
popf
cmp
fwait
lods
aaa
xchg
jle
or
sarl
inc
lret
sbb
push
dec
mov
fisubrs
mov
add
xor
dec
xlat
clc
jae
jecxz
or
movsl
iret
jle
xchg
sbb
data16
add
inc
sarl
jp
cld
inc
add
pop
lahf
xor
mov
xchg
pop
imul
popf
cmp
jbe
xorl
pop
mov
cmp
popl
pop
addl
or
cmp
in
jge
cmp
pop
pushf
testl
jmp
xor
imul
std
into
gs
std
and
lcall
mov
movsl
pop
call
ficomps
mov
clc
push
push
mov
repnz
dec
xor
fidivrl
push
popf
fs
mov
int3
jp
xor
out
adc
cmp
lods
mov
add
push
aas
sbb
cmp
repz
inc
sub
mov
les
xor
mov
inc
int3
imul
jno
mov
sbb
mov
mov
cmp
aad
jnp
stos
inc
dec
in
ret
pop
stc
pop
sbb
add
rcrb
mov
mov
data16
clc
faddl
cmpsl
pop
pop
mov
xchg
jae
sub
mov
sbb
fwait
jecxz
or
pop
sub
adc
repz
ret
mov
pusha
sbbb
adcb
mov
fidivrs
lret
pop
mov
pop
xlat
push
mov
shl
into
and
lods
add
mulb
add
xchg
push
jge
and
add
test
xchg
emms
leave
inc
adc
and
adc
sarb
cmp
jmp
xlat
mov
or
call
sbb
sbb
ss
out
in
ja
ja
jbe
andb
push
sub
lds
arpl
jl
inc
mov
push
sahf
in
adc
pop
add
xor
pop
xor
xor
cmp
and
and
cmp
mov
pop
inc
xchg
jae
fwait
dec
adc
ja
and
arpl
jo
mov
push
stos
into
and
test
test
enter
mov
and
stc
dec
loop
and
mov
dec
adc
in
adcl
les
cmc
xchg
repz
mov
xchg
ret
lds
mov
push
cmp
scas
xchg
adc
movsl
mov
inc
ret
add
sbb
inc
dec
les
add
scas
add
fdivrs
mov
ja
shlb
and
js
clc
lret
xor
pop
loopne
cwtl
fcompl
test
inc
rol
out
push
lock
shll
arpl
addr16
negb
fstps
shll
fwait
pop
scas
inc
push
repnz
push
cs
jnp
adc
mov
jb
out
lret
imul
popf
in
scas
jb
cmp
idivl
fidivl
add
jp
mov
icebp
jp
sbb
testb
nop
xor
fstps
push
mov
lret
movsb
sahf
push
mov
xlat
shr
cld
push
sbb
xchg
testb
adcl
xor
sbb
mov
loopne
aam
inc
sti
cmp
cmp
push
popf
fsubs
and
imul
sub
fstpt
mov
inc
lods
bound
shr
push
push
mov
insl
mov
mov
cmp
cmp
xor
xchg
test
and
mov
icebp
mov
dec
add
mov
mov
xchg
js
fcmovnu
inc
scas
daa
data16
fdivrs
mov
shrl
jnp
inc
mov
and
movsb
push
and
dec
insl
xchg
sbb
es
scas
addb
sar
aam
hlt
adcb
sub
rolb
add
xchg
and
xchg
inc
out
fisttps
push
adc
xor
mov
pop
orb
das
in
push
jae
std
jno
xor
gs
jg
fs
cmpsb
pusha
cli
rcll
aaa
sub
divb
das
pop
rorl
pusha
int3
cmp
sbb
adc
jecxz
inc
xchg
and
mov
dec
loop
scas
jmp
inc
leave
dec
imul
popa
hlt
inc
cmpsb
jecxz
mov
pop
mov
iret
scas
mov
packssdw
dec
scas
cmp
cmpsb
sbb
fisubl
movsl
rcr
adcl
stc
test
xorb
mov
leave
fimuls
hlt
push
and
inc
icebp
lods
faddl
sbb
scas
sbb
cli
lods
pop
dec
daa
adc
inc
inc
xor
mov
push
jle
in
pop
outsb
push
inc
ret
lret
sbbb
ret
mov
fs
int
cmp
aad
mulb
outsb
pop
out
mov
jle
jg
divb
lock
cmp
mov
pop
xchg
add
sbb
mov
pop
cmp
jnp
shlb
pop
sub
and
inc
add
repnz
outsl
ret
dec
dec
xchg
rorb
icebp
or
mov
mov
test
test
sbbl
sbb
mov
cmp
mov
mov
inc
cs
pop
xor
push
jnp
jl
mov
sbb
daa
pushf
lods
push
outsb
ja
lods
inc
sbb
inc
sub
pop
mov
cmp
adc
sub
xor
mov
gs
xchg
xchg
iret
push
dec
mov
push
jmp
insl
add
outsl
leave
fcmovnb
in
xchg
sub
pop
xchg
lods
jecxz
mov
jae
mov
lcall
mov
cmp
jecxz
sub
adc
lods
jl
movsl
mov
push
js
repz
sub
mov
jecxz
repz
pop
and
dec
cwtl
pop
and
sti
pop
cmpsb
es
jg
clc
movsl
cmp
push
mov
mov
in
out
adc
push
aad
jnp
arpl
outsl
xor
add
shr
test
dec
mov
scas
mov
sti
xchg
xor
mov
xchg
or
and
sub
scas
xchg
lahf
xor
fcoms
adc
rorl
mov
rorl
sbb
add
and
out
jle
pop
shlb
pop
fimuls
dec
mov
mov
test
call
mov
out
stc
xchg
mov
insl
cmp
push
adc
notb
xlat
mov
stc
dec
decl
dec
xor
cmp
or
mov
push
ljmp
xor
adc
dec
dec
ds
je
jo
pusha
addb
popf
sbb
inc
stos
cmp
cmp
pop
sub
pop
and
push
loope
jle
sahf
cmpsl
cltd
push
imul
pop
ljmp
jno
stc
lret
cld
adc
int3
int3
arpl
ljmp
add
sti
mov
icebp
stos
push
repz
decb
adc
sub
das
leave
movsl
add
xor
sbb
addr16
inc
cmp
and
icebp
mov
mov
fistl
fsubrp
mov
test
imul
or
cmpsb
fwait
aad
cmovg
or
arpl
mov
sbb
sbb
dec
pop
out
xor
in
inc
into
inc
outsl
cwtl
sbb
push
in
fnsave
inc
loopne
call
mov
out
test
aas
adc
xchg
lock
pop
imul
fmul
mov
adc
pusha
or
lret
int3
mov
iret
push
cltd
or
mov
je
arpl
adc
daa
adc
fisttps
cmpsl
outsl
ja
mov
cmp
sub
jecxz
cmp
das
xor
idivb
mov
mov
dec
mov
push
add
jne
inc
out
into
shrl
shlb
mov
movsl
jp
pcmpgtb
inc
mov
add
idivb
pop
and
or
pop
cmpsl
pop
xchg
test
and
xchg
mov
aam
xor
dec
icebp
sub
push
pop
rorl
dec
loope
sti
fwait
popa
insb
add
aaa
jp
jo
adc
arpl
imul
xchg
mov
fxch
push
adc
pop
dec
mov
xchg
sub
inc
cmpsl
sub
fidivl
adc
pop
addr16
ret
into
or
ds
fnstcw
push
and
mov
iret
mov
inc
sbb
jns
mov
jns
lock
jbe
adc
int3
rolb
dec
inc
cmp
hlt
in
mov
pop
sbb
insb
jle
arpl
fidivrl
aam
dec
pop
or
jmp
xor
and
iret
pop
mov
mov
cli
idiv
mov
add
pop
xor
sub
mov
cld
lahf
sbb
inc
push
gs
sub
inc
ret
push
pop
cmc
addr16
fcomps
dec
flds
jp
sub
xchg
hlt
inc
inc
cmp
fnstcw
std
call
dec
ret
mov
inc
fdivrs
into
sti
and
add
roll
inc
pop
sub
jnp
mov
xor
lret
cmp
push
lea
jae
mov
call
dec
jle
mov
sbb
inc
cltd
adc
and
sub
mov
xor
push
ret
inc
les
fsubrl
cmp
cmp
cli
repz
negb
inc
jbe
stos
cmpsl
mov
lcall
lcall
test
out
pop
pop
or
es
xor
jmp
mov
pop
add
fsubr
movsl
sub
xchg
sub
stc
data16
jae
add
sbb
push
inc
push
pop
mov
imull
cmp
rcl
cmp
lret
mov
lret
test
leave
pop
sub
adc
jb
fldenv
pop
xor
mov
pop
out
jg
dec
cmp
pop
outsb
sub
add
fisubrl
mov
xchg
inc
mov
push
negb
ret
shll
push
push
das
xchg
pop
push
mov
push
xchg
in
sbb
or
loop
js
mov
cltd
xor
sub
add
cmp
push
or
xor
bound
loopne
mov
jp
or
out
movsb
cwtl
push
jecxz
cmp
int
jns
sbb
daa
cmp
cmp
fsubrl
ds
sbb
jne
jb
sahf
push
jecxz
inc
mov
movsl
ljmp
mov
inc
daa
sbb
dec
inc
inc
lods
adcb
adc
mov
jns,pn
mov
or
adc
repz
jae
jl
jp
idivl
dec
mov
push
out
add
aad
jmp
out
stos
dec
jecxz
mov
fistl
xor
popf
adcl
out
insl
sbb
mov
insl
mov
scas
jne
mov
ror
dec
pop
mov
popa
jmp
out
xchg
loop
mov
add
cmp
xchg
dec
jmp
or
xor
xchg
and
rolb
shrb
dec
cmp
push
add
cmp
imul
repz
repnz
out
inc
xchg
push
adc
xchg
push
popf
repz
push
ljmp
jno
add
andps
lock
xchg
popa
lods
iret
cmp
hlt
mov
jge
pop
in
push
mov
insl
push
jge
test
xchg
jge
iret
data16
imul
cmpsb
pop
xor
adc
push
xor
test
xor
mov
mov
pop
lock
loopne
push
adc
adc
mov
cmp
fadd
inc
cmc
mov
add
shrl
mov
mov
out
xchg
push
mov
xor
pop
bound
into
fnstcw
imul
int3
add
add
lea
movsl
ja
shll
stos
repnz
ss
or
add
push
mov
mov
add
sbb
lret
cmp
mov
lods
mov
imul
xor
mov
aad
mov
gs
xchg
insb
or
add
jle
nop
jnp
sbb
cmc
stos
jnp
mov
jl
cmc
fcmovnb
rcll
adc
das
insb
dec
sbb
js
repnz
pusha
sahf
push
cmp
or
mov
stos
dec
pop
cs
popa
out
mov
fs
jns
in
xchg
add
mov
pushf
pop
mov
cltd
push
out
js
xchg
jl
cmp
push
int
jle
pop
pop
fs
and
xchg
adc
aas
mov
lret
ss
std
pop
pop
rclb
xor
push
pop
cmp
mov
clc
movsl
ret
sub
xor
push
cli
gs
jmp
leave
hlt
mov
popa
arpl
xchg
and
mov
add
dec
push
lret
gs
xchg
sub
jno
sub
jp
push
xchg
mov
cmp
push
jo
arpl
jo
mov
push
cmp
xlat
mov
xor
divl
push
out
mov
push
sub
or
push
inc
xchg
push
stc
dec
push
jae
scas
shlb
gs
test
rolb
mov
push
insl
pop
jns
ds
in
outsl
mov
fwait
or
cmpsl
and
mov
popf
imul
mul
mov
mov
pusha
add
dec
xchg
or
aad
nop
std
sub
jecxz
dec
enter
pop
out
lods
std
inc
das
cmpsl
outsb
jl
fwait
xchg
xchg
mov
push
dec
inc
add
mov
cwtl
adc
sahf
xor
insb
repnz
and
data16
mull
cmpsb
mov
or
mov
sbb
inc
insl
xchg
mov
scas
in
jae
mov
aaa
into
ss
mov
in
and
push
in
outsl
inc
rorb
in
cmp
adc
jg
xor
push
fcos
sbbl
or
cmp
dec
sbb
clc
and
lcall
and
cmp
xor
or
cmp
mov
loope
out
inc
pushf
push
or
cmpsl
imul
jg
es
jmp
add
adc
sbb
jge
shll
xchg
dec
mov
add
add
fyl2x
or
mov
ds
mov
sub
dec
in
or
adc
std
inc
mov
iret
notl
pop
outsb
pop
jo
pop
and
push
sbb
cs
je
ficoml
push
icebp
mov
sbb
stc
js
cmp
rclb
popf
shrb
dec
daa
lock
loopne
mov
outsl
test
insl
push
sub
enter
jp
pop
mov
inc
xchg
inc
cwtl
gs
pop
outsl
daa
inc
push
mov
ljmp
mov
out
sub
incb
idivl
mov
push
jae
fldt
int3
lret
movsb
dec
cli
daa
xchg
repnz
xchg
hlt
js
push
xor
repnz
mov
enter
sbb
jmp
mov
xor
push
enter
inc
cltd
xor
dec
ds
or
pushf
pusha
dec
in
mov
pop
cmp
and
mov
das
repz
movsl
scas
sbb
outsl
and
or
cld
sbb
cmp
pop
mov
xchg
pop
add
sti
xlat
sbb
sbb
xchg
adc
jnp
push
mov
push
inc
mov
pop
inc
test
into
aad
jne
stos
adc
fwait
fwait
mov
sbb
xor
std
xchg
inc
aaa
sbb
pop
gs
lods
inc
cwtl
mov
movsl
mov
and
leave
pusha
sbb
in
outsb
mov
pusha
and
xchg
push
pop
push
lcall
cltd
in
insl
cmp
mov
sub
mov
sbb
add
push
cli
adc
inc
pop
inc
mov
mov
lcall
ss
rol
inc
arpl
inc
xchg
int
xor
insb
out
sbb
push
mov
add
jl
inc
outsb
inc
sbb
enter
mov
in
outsb
dec
pop
mov
shr
stc
add
std
push
out
mov
push
cmp
pop
enter
jbe
add
mov
movsb
addr16
or
pop
into
fbld
adc
leave
mov
xchg
loop
imul
dec
push
push
cmp
das
ret
pop
pushf
fsubl
ja
xchg
sbbb
aas
push
fsubs
sahf
test
mov
pop
mov
ret
fisubl
mov
cld
inc
imul
sbb
test
pushf
xor
frstor
lds
lds
sahf
push
lcall
js
sbb
sti
push
in
orb
and
dec
pushf
rcl
test
loop
inc
pop
add
aas
in
rcrb
mov
pusha
orb
jle
enter
popf
dec
shlb
adc
sbb
mov
mov
into
pop
insb
add
or
mov
test
pop
jb
inc
popa
mov
mov
or
test
pop
push
lcall
push
jmp
jp
inc
xchg
pop
jecxz
push
stc
push
fyl2x
push
fildll
or
out
dec
lret
jo
xor
stos
dec
mov
cmc
sub
movsl
rcl
dec
jecxz
shrl
clc
push
scas
call
aad
adcl
or
inc
fdivl
pushf
imull
fsubl
or
adc
push
inc
adc
lods
fwait
repnz
cmp
test
push
aas
mov
negl
in
add
push
sbb
out
and
call
shrl
sti
mov
mov
add
mov
inc
cli
xor
pusha
imull
ret
hlt
iret
mov
bound
pop
outsl
jno
adc
add
mov
mov
inc
jnp
lock
popa
test
fwait
jmp
lret
and
and
pop
addl
ja
addr16
daa
inc
hlt
xor
inc
push
icebp
mov
pop
cmp
adc
lods
pop
add
add
cld
inc
mov
adc
push
movsb
lods
push
ljmp
std
clc
inc
and
xchg
sbb
push
inc
push
xor
cmp
jp
cld
rorb
imul
ss
lcall
sub
or
xor
incl
movsb
cmp
mov
ret
dec
mov
mov
mov
cmp
push
xor
fs
xor
mov
test
sub
test
jae
xor
pop
mov
gs
mov
or
mov
jae
int
imul
sub
push
adc
scas
sbb
lahf
push
add
aam
inc
repnz
xor
fsubs
adc
jno
mov
pop
clc
push
adcb
xor
mov
xor
iret
loop
int3
out
add
add
jl
push
outsl
jae
pop
cmc
pusha
js
test
cmp
dec
adc
add
pop
or
ss
push
mov
jg
js
jns
aad
mov
lret
popa
mov
loopne
cld
loope
adc
pushf
sti
das
xor
xor
gs
jmp
mull
pop
xchg
mov
mov
xor
inc
push
inc
mov
cld
loopne
dec
xchg
add
cmp
out
icebp
ljmp
enter
xor
push
imul
and
sti
mov
and
cmp
xor
ds
pop
repnz
pushf
aas
and
push
pop
mov
jp
jecxz
pop
cmpl
xchg
lcall
jp,pt
in
shl
in
push
das
int
fisttpll
sub
mov
pop
xchg
push
push
pop
pusha
cmp
aaa
pop
xor
cmp
cmp
sbb
push
sbb
ljmp
shll
mov
xchg
xor
push
int3
pushf
and
imul
pop
out
rcll
and
daa
pop
dec
insl
adcl
filds
cmc
mov
orb
adc
jae
mov
xchg
mov
pop
mov
lock
xchg
jno
xchg
das
inc
mov
movsl
shl
sbb
es
cli
inc
sbb
js
imul
imul
mov
jnp
in
mov
fiaddl
jno
fwait
sbb
cmpsl
test
nop
nop
shrb
out
in
jg
mov
lret
shll
cld
mov
decb
xor
shll
das
fistl
pusha
lods
das
jle
ret
and
int3
imul
mov
fimull
xor
std
adc
mov
jmp
cmpsb
cmp
mov
iret
call
pushf
mov
mov
sbb
arpl
lock
call
or
fistpl
push
push
stc
cmpsl
xor
pop
es
add
outsb
push
inc
call
or
shll
out
push
cwtl
inc
mov
lret
cmp
pop
mov
mov
xor
or
sbb
sub
aaa
lods
js
lods
roll
add
cs
rorl
iret
mulb
adc
dec
adc
xor
test
imul
add
xchg
cld
negl
push
mov
into
lock
loopne
mov
fucomi
push
test
cmp
cmp
imul
mov
scas
fwait
test
jg
out
and
das
stos
mov
add
xchg
mov
cmp
inc
inc
pop
push
outsl
call
fnstenv
into
iret
aaa
xor
adc
jmp
cmc
push
mov
push
addr16
ja
enter
cmp
out
jle
insl
ret
repz
mov
jo
std
inc
push
pop
or
out
cmp
xlat
repnz
adc
daa
out
mov
pusha
das
ret
adc
int3
and
jne
pop
aad
stos
jmp
jge
orb
imul
push
mov
data16
inc
cwtl
into
jecxz
dec
mov
fdivs
push
ljmp
and
push
add
lret
pop
pop
lds
xchg
push
fisttpl
mov
subl
ret
pop
push
hlt
jge
jns
aas
xchg
pop
xchg
jg
dec
mov
loopne
dec
lahf
mov
ret
shrb
out
in
aad
xchg
mov
test
cmp
lods
mov
jo
loop
xchg
pop
lret
adc
jnp
subb
dec
loope
mov
iret
mov
push
shl
inc
pop
pop
and
mov
pop
mov
mov
loopne
out
out
imul
cmp
in
jg
f2xm1
repnz
rclb
jle
push
pop
fidivs
push
into
pusha
or
ja
or
xchg
mov
pop
lret
adc
arpl
in
xchg
lcall
adc
jne
jbe
add
aam
pop
xchg
dec
in
jb
fnstsw
scas
call
or
loope
add
push
fbstp
mov
pop
mov
push
int3
stos
in
cs
dec
pop
and
addr16
sbb
nop
push
mov
sub
stos
inc
outsb
xor
cmpsb
enter
inc
pop
mov
and
xor
stc
sbb
mov
sub
loopne
fidivs
or
adc
pop
sub
repz
dec
das
jecxz
lret
lcall
mov
adc
cmpsl
ja
cmp
lret
add
jge
sub
in
xchg
lahf
add
inc
lcall
adc
imul
insb
movups
cltd
icebp
lret
loop
sbb
shl
fnsave
movsl
cmp
scas
mov
xchg
addr16
push
hlt
xorl
mov
ss
mov
push
jbe
adc
adc
jge
push
inc
mov
lahf
scas
dec
sbb
sbb
adc
scas
push
stc
mov
jecxz
aaa
adc
add
add
cmc
mov
nop
mov
fstps
inc
or
pop
pop
jb
push
movsl
pushf
std
sbb
std
repz
pop
outsb
jae
scas
lcall
mov
jmp
fstpt
lds
adc
push
aad
add
fimull
nop
pop
push
mov
icebp
in
xchg
iret
in
jecxz
or
cmc
jge
bound
pushf
pop
add
xor
mov
aad
inc
fdiv
clc
icebp
mov
popf
pop
mov
sub
scas
dec
es
pop
sub
scas
inc
shll
xor
mov
or
inc
push
cmp
cld
shlb
test
enter
rclb
dec
add
sub
or
xor
data16
inc
add
in
pusha
lods
and
cmp
insb
sti
mov
scas
mov
je
cs
leave
and
aaa
jns
cltd
jno
xlat
mov
dec
cltd
sub
sbb
mov
sub
mov
adc
mov
nop
into
cmpl
cmp
mov
fsubrs
cmpsb
aad
adc
cmp
bound
push
cld
repnz
frstor
out
inc
cmp
mov
sbb
aaa
into
pop
cmp
lods
adc
add
loope
jge
jge
mov
sbb
or
xchg
mov
lahf
jmp
mov
test
jne
mov
dec
shl
sbb
ret
repz
pop
incb
lret
and
jle
and
mov
xor
pop
mov
popa
jnp
in
fldl
mov
pop
ffree
les
xchg
dec
stos
test
sub
adc
jge
sbb
lcall
lods
cs
out
dec
in
daa
subl
pop
pop
paddsb
and
lods
test
xor
dec
xor
out
cmpsl
adcl
mulb
int
push
pushl
in
insb
in
push
jmp
jo
in
cmp
insb
push
jns
out
jns
lcall
imul
or
out
rolb
imul
dec
xor
popa
jmp
jg
sub
pop
ret
cltd
and
aam
push
push
inc
pop
or
insl
enter
mov
cmpsb
sbb
xchg
ss
mov
jle
and
push
and
mov
insb
notl
test
inc
sahf
sbb
add
lock
or
shrb
cmc
pop
mov
imul
push
pop
imul
dec
das
mov
shrl
xor
cmp
into
xor
popf
inc
fwait
mov
jge
and
inc
popf
orl
enter
cmp
xor
pop
mov
sub
jnp
dec
hlt
rclb
movsb
ljmp
sub
adc
fsubl
mov
repz
mov
xor
shll
mov
outsb
in
shlb
mov
jmp
mov
popa
xor
xor
addr16
dec
cmp
es
cmp
mov
shlb
add
loope
mov
mov
sbb
jae
jo
orb
lods
inc
inc
cwtl
popa
int3
inc
iret
push
jno
test
mov
pushw
or
sti
or
ss
jge
xchg
pop
mov
add
out
rcpps
fnstsw
mov
mov
push
xchg
xlat
cmc
popa
clc
out
cmp
xor
pmaxsw
pop
pushf
lea
dec
pop
call
das
mov
adc
dec
dec
adc
push
ljmp
jb
sub
rol
imul
pop
scas
fcompl
push
jnp
ss
mov
push
or
call
out
sti
pop
clc
sub
xor
subl
xchg
cmp
hlt
mov
xor
sti
jg
inc
push
sbb
xchg
pushf
outsl
dec
push
push
cltd
mov
data16
dec
js
subb
scas
mov
push
iret
clc
mov
movsb
imul
test
jns
adc
jge
add
pusha
pop
dec
cmpsl
mov
xor
mov
test
fwait
jae
xchg
xor
push
xchg
mov
jle
and
in
mov
pop
sub
pop
adc
inc
xchg
jp
jge
push
shll
or
and
vmovaps
inc
or
ret
sahf
enter
js
mov
sarb
inc
decb
ficoml
aam
or
lahf
adc
mov
jg
into
sub
jl
add
or
dec
add
shr
or
enter
add
insl
inc
test
or
pop
cmp
mov
sub
ds
ds
xchg
fwait
in
xchg
xor
sbb
aaa
iret
ss
cli
push
out
mov
push
push
push
outsb
std
push
or
jmp
in
inc
push
repz
hlt
mov
hlt
sub
and
and
repz
notl
mov
xchg
call
and
xchg
shll
add
imul
xchg
pop
mov
xlat
adc
ljmp
insl
inc
lret
sbb
push
dec
inc
pop
push
cmp
inc
insl
aas
sbb
fs
mov
in
adc
push
jbe
push
mov
and
inc
mov
mov
filds
adc
mov
and
sti
or
sbb
fs
sub
xchg
fmull
or
stos
cltd
add
pusha
mov
jmp
inc
jne
mov
aam
jno
mov
dec
xchg
jmp
and
push
arpl
lret
andb
inc
cmpsl
mov
mov
in
xchg
sbb
pop
out
adc
xor
aam
cmc
xor
mov
and
fnsave
lret
out
jnp
imul
or
xor
fdivs
jle
mov
lock
or
fdivrs
lea
mov
cltd
inc
orl
push
cli
lahf
stos
pop
cmp
pushf
add
pushf
daa
mov
jge
shrb
jnp
add
or
dec
fcmovne
mov
es
movsl
iret
sub
imul
xor
test
inc
or
dec
mov
pop
sar
push
mov
mov
pop
sub
pop
add
add
stc
mov
push
ljmp
jno
fisttpl
push
and
push
push
dec
add
jle
or
lret
int
mov
mov
orb
lcall
icebp
or
es
xchg
mov
out
rcrl
test
mov
call
mov
ret
push
mov
and
adc
nop
mov
addr16
pushf
fnsave
mov
aad
subps
sub
mov
add
dec
push
and
cmp
enter
shrl
sbb
sbb
lods
idivl
dec
inc
inc
xor
adc
dec
leave
push
clc
and
in
pop
lahf
rorl
insb
and
jns
shl
cs
leave
fsubrs
push
cmp
add
int
ja
leave
in
aad
inc
or
repz
cltd
lret
bound
ret
or
cmpl
push
xchg
call
pop
push
inc
mov
sbb
cltd
cmp
mov
stos
mov
jb
pop
out
xor
xor
sbb
xor
fwait
cli
daa
enter
pop
shrb
dec
xchg
dec
hlt
mov
pop
inc
and
cmp
std
pushf
popa
das
xlat
rcrl
pop
and
xchg
sbb
call
or
inc
scas
es
jo
subl
cs
pusha
xor
push
out
adc
pushf
and
pop
std
xchg
push
sub
pop
lret
jnp
inc
popa
pop
nop
in
cmovnp
in
fmul
pusha
or
out
fidivrl
shll
mov
test
add
lahf
bswap
add
orl
div
lods
inc
sub
incb
lret
xor
rcrl
jne
daa
sbbb
inc
sbb
sub
add
mov
jg
lods
jns
fiadds
xchg
insl
js
dec
push
add
add
cld
and
hlt
push
imul
sub
iret
xor
push
push
cld
rolb
add
fldenv
stos
adc
fucom
or
outsl
push
mov
or
test
or
jbe
rcrl
lret
ret
and
push
jb
fbld
push
xor
int
cltd
push
xchg
pop
xlat
lret
xor
mov
cmp
mov
fsubrs
mov
jno
pushf
rol
fs
test
cmp
cltd
xchg
jnp
lcall
mov
aam
lret
dec
fisubrs
ja
lods
jne
stos
xor
dec
and
shll
stos
dec
pop
or
jnp
fstpt
out
lret
sbb
mov
nop
sbb
cwtl
ja
lret
into
movl
adc
leave
jg
dec
loopne
xchg
inc
jg
icebp
cmp
jle
pop
test
aaa
aaa
lds
adcb
sbb
incl
push
aas
mov
mov
jp
pop
adc
jmp
sti
andb
popa
xor
add
mov
out
les
test
outsb
lcall
rol
fld1
xor
pop
movsb
ds
adc
repz
addl
mov
or
xchg
cmp
stos
jae
mov
std
aam
cld
mov
sbb
dec
add
mov
push
repz
mov
sar
xor
jmp
cltd
or
ljmp
je
es
notl
scas
push
test
adcb
aaa
push
jne
cli
xchg
loopne
mov
mov
insb
nop
mov
test
addr16
popf
mov
xor
xchg
ja
addl
dec
bound
jle
cmp
test
xchg
dec
sahf
push
xlat
iret
dec
jno
inc
or
xchg
pop
scas
hlt
mov
cmpsb
jb
orl
mov
clc
pop
sub
addr16
fimuls
out
inc
push
dec
in
fwait
mov
pop
sub
mov
test
imul
rolb
loop
clc
mov
fimuls
or
push
roll
mov
mov
ljmp
xlat
loope
or
aam
xor
out
sub
rcrb
pop
inc
jge
pop
loope
mov
dec
xor
mov
sar
out
mov
mov
fldcw
inc
fistpll
dec
das
mov
out
mov
inc
mov
mov
ljmp
enter
aad
mov
lds
scas
xchg
mov
popa
and
mov
xlat
sbb
add
in
insl
lods
add
adc
dec
rcr
sub
adc
fimull
sbb
xor
negb
int
ds
xor
cmp
push
cmpsb
dec
lcall
repz
pop
and
in
jne
sbb
pop
fwait
cmp
jns
dec
daa
or
mov
mov
or
movsb
sbb
addr16
cmp
clc
sahf
xorb
lret
stc
mulb
int
sbb
push
outsb
inc
jp
or
sbb
and
mov
daa
jmp
jne
jl
mov
fistpll
jb
xchg
sub
jecxz,pn
jae
jl
jge
popa
adc
jl
mov
nop
and
ror
outsb
xchg
mov
les
adc
mov
insb
jnp
xchg
inc
movsl
loope
push
lcall
xchg
jnp
bound
sub
push
fildl
pop
loopne
xor
int3
scas
mov
dec
shrb
mov
push
rcrl
xchg
xor
sbb
mov
mov
jmp
xor
xchg
sub
movsl
les
imul
popf
sub
add
dec
nop
fwait
pop
dec
fldpi
mov
stos
and
or
lret
and
les
xchg
jmp
pop
mov
cmpsl
jl
scas
sub
test
shlb
rclb
mov
cmp
push
jecxz
imul
mov
movsl
fisubrs
xchg
ss
cmpsb
mov
subb
xor
push
ret
jg
jbe
daa
ja
cmpsb
ret
pushf
clc
jae
xchg
sub
xchg
cmc
mov
lods
adc
push
cmp
es
and
mov
push
lcall
xchg
push
scas
test
cmp
sbb
scas
clc
test
das
shrb
sub
mov
call
loopne
or
fnstenv
lret
in
sarl
shll
rcrb
adc
in
jge
lods
in
mov
es
mov
pop
stos
fisubl
add
push
popf
setge
push
push
xchg
inc
test
leave
fsts
andb
lret
lods
adcb
mov
lods
loope
pop
xor
cmpsb
jle
daa
xchg
mov
mov
sbb
lea
mov
pop
jnp
subl
cmp
ret
sahf
jecxz
mov
call
testl
addr16
addr16
into
lret
in
and
sahf
faddp
adc
mov
ficoml
adc
mov
push
mov
pop
rolb
jl
and
lods
hlt
inc
push
jecxz
push
cwtl
inc
ljmp
or
setg
js
cmp
jb
jle
jle
mov
mov
sbb
cwtl
add
push
push
cld
aas
hlt
cmp
clc
cmp
xor
pop
push
xchg
pop
rclb
and
ret
jmp
add
push
or
xchg
adc
in
andl
iret
jb
add
push
lret
lret
pop
xadd
sbb
imul
leave
insl
pusha
xchg
pop
jbe
leave
test
pop
negl
cmc
dec
mov
insb
add
jnp
dec
pop
lods
testb
in
in
xor
mov
cmc
xlat
cltd
cmp
mov
inc
fadds
stc
push
inc
and
pop
cmp
fs
aaa
popf
pop
mov
pop
js
sub
aaa
push
cmp
cwtl
pop
xchg
pop
inc
lcall
and
pushf
sub
ljmp
dec
sub
fcomps
mov
dec
pop
loopne
push
inc
add
es
add
mov
adc
in
push
and
push
out
jne
cwtl
iret
cltd
mov
push
pop
test
xchg
std
test
or
jae
stos
sbb
les
jns
sbb
jnp
push
fmul
ret
scas
inc
mov
das
into
or
push
jmp
int3
cli
xchg
shr
and
and
mov
sub
mov
mov
pop
cmp
out
call
mov
cltd
mov
shrb
ret
cmp
and
ss
fldenv
pop
dec
sub
mov
shr
pop
inc
jno
aaa
mov
pop
mov
mov
adc
add
iret
pusha
in
push
cltd
adcl
mov
outsl
sub
jae
ds
push
pop
pop
mov
movsl
mov
jbe
andl
jle
cmpl
cmpsl
nop
adc
sub
cltd
push
sahf
mov
mov
icebp
ja
jbe
adc
cwtl
stc
jp
add
lcall
dec
mov
fsub
hlt
clc
ss
lret
cli
mov
adc
xchg
insl
les
insl
ja
rorb
mov
jg
mov
stos
data16
xchg
dec
hlt
sar
sbb
cs
dec
jmp
dec
fldenv
mov
ret
fbld
push
jae
andl
jecxz
add
push
mov
adc
fstl
stos
cmp
insl
insb
inc
popa
int3
jg
pop
popf
or
mov
or
clc
or
fildl
dec
out
xchg
mov
lea
jg
xor
shrl
mov
jno
inc
or
rclb
inc
push
je
mov
addr16
mov
mov
push
popf
jge
add
inc
inc
or
push
xlat
adc
push
add
scas
mov
adc
addr16
pop
scas
nop
mov
test
sbb
push
or
adc
and
pushf
xor
sub
mov
test
mov
popf
das
and
inc
mov
fdivrp
push
cltd
adc
int
push
mov
or
ja
xchg
popf
loope
mov
sub
push
aam
mov
cmpb
fcoms
in
push
mov
and
aas
dec
jp
push
insb
mov
test
xor
mov
push
lods
cld
add
movsl
pop
stc
daa
mov
cmc
jmp
or
rorl
xchg
cs
dec
jnp
mov
popf
or
mov
aaa
pop
cmp
arpl
cmpsl
cmp
adc
negl
daa
inc
push
aas
jle
sub
inc
mov
sub
cmpl
fsub
loop
mov
aam
inc
fiaddl
test
movsl
data16
push
cs
out
fbstp
bound
pop
fidivl
mov
shl
into
xorb
lcall
sub
sub
pusha
lock
lds
or
lods
mov
jmp
fsubrs
mov
ret
pop
push
push
jecxz
and
and
addr16
insl
jmp
int
add
stos
loopw
xchg
add
mov
scas
push
xlat
ljmp
mov
add
mov
test
or
andl
mov
jge
daa
mov
aas
int3
inc
pop
gs
push
sti
bound
arpl
push
mov
daa
cli
mov
clc
sahf
fadd
gs
mov
push
decb
cmp
mov
push
cmpsb
dec
in
xchg
aas
or
adc
fimuls
sub
jg
push
jne
mov
pop
jb
xchg
mov
pop
adc
mov
into
mov
xor
sub
ficomps
push
jecxz
sub
push
ret
int3
fcomps
xchg
daa
data16
sbb
aaa
mov
mov
push
fldt
ss
sti
adc
imul
mov
cmc
sbb
lahf
out
xlat
inc
lods
pop
test
nop
or
ljmp
fstps
daa
inc
loope
push
mov
xorl
add
sbb
dec
and
ret
add
mulb
lock
stos
icebp
xor
fs
adc
ret
or
dec
add
outsb
mov
dec
pop
aaa
inc
or
movsl
lea
call
jge
adc
cmp
mov
mov
fprem
dec
scas
jle
sub
in
es
aad
push
fidivrl
stos
mov
in
arpl
notl
repz
hlt
mov
sbb
imul
mov
lock
or
lahf
sti
push
stos
in
jno
jae
xor
mov
fcoms
pop
mov
inc
cmpsb
sbb
outsb
hlt
pop
xor
loop
pop
inc
sub
shll
inc
es
scas
repnz
imul
sub
xchg
pop
jg
push
aas
stos
scas
pop
icebp
xor
add
adc
pop
inc
push
adc
lock
and
incb
push
push
jne
adc
cmpsl
mov
repnz
ror
stos
std
loope
pop
pop
cltd
jmp
in
sub
js
dec
xor
mov
dec
sub
sbb
jbe
bound
fnstsw
adc
outsl
inc
sbb
hlt
fs
mov
pop
lds
xchg
xlat
fbstp
adc
pop
fcmovb
lds
out
mov
lret
mov
out
sub
push
add
jp
cmp
cmp
cwtl
test
mov
cmpsl
xchg
or
shrb
sub
pop
rcll
jl
inc
pop
cli
mov
cmp
sbb
push
and
jl
xor
add
push
cmp
fbstp
adc
xchg
sub
int3
jbe
jle
push
jp
and
daa
mov
lods
pop
mov
xchg
out
xor
mov
jns
es
fisttpll
mov
adc
cmp
hlt
cmp
sbb
repz
hlt
dec
mov
jge
jns
repnz
push
fdivl
mov
jae
aas
or
mov
xchg
lods
mov
rcll
mov
sahf
cmpsl
xchg
ds
loopne
xor
or
mov
cmp
lods
fstpt
fisttpl
sub
pop
movsl
data16
pop
push
inc
mov
add
loope
shll
mov
ja
int3
xor
push
push
adc
dec
in
lods
outsb
sbb
insb
testb
cmpsb
sti
mulb
xchg
imul
and
popf
mov
push
xchg
mov
shrb
pop
jg
int3
arpl
xchg
xor
mov
pop
inc
fisttpll
aaa
xchg
rorl
inc
nop
sbb
scas
out
lcall
repz
or
dec
lods
sbb
int
imul
out
in
negl
sti
adc
inc
or
cmp
data16
out
pop
shr
xchg
sbb
cmp
jle
imul
divl
ss
repz
mov
adc
je
cmp
ljmp
arpl
in
xor
xrelease
movsb
dec
clc
xor
outsl
in
jns
jg
and
mov
insb
push
inc
cmpsb
sbb
sbb
mov
jge
inc
lock
std
cmp
subl
cmp
cmp
fnstcw
ficoml
xor
outsl
add
mov
mov
mov
push
adc
lcall
mov
jmp
rolb
jle
test
xchg
mov
push
cwtl
out
enter
jmp
inc
and
inc
fsub
cltd
inc
fdivp
pop
ds
ret
cwtl
std
add
js
jle
fwait
sbb
cwtl
push
mov
sub
pop
pop
adc
pusha
lret
mov
inc
fwait
cmp
jl
add
rorl
mov
mov
mov
pop
mov
push
xlat
insl
int3
or
xchg
je
mov
cmp
test
test
test
fidivl
lods
flds
fwait
fs
iret
cmpsb
cmc
jge
ja
xor
pop
icebp
repz
xchg
pop
je
aad
xchg
dec
and
and
imul
jne
push
pop
fidivs
cmp
dec
loop
push
pop
insl
push
cli
call
xchg
mov
and
mov
xchg
fucomp
pop
cwtl
sbb
xchg
push
stc
dec
shll
shrb
cs
adcb
clc
aam
jne
and
popa
sbb
loop
addr16
movsb
push
testb
push
pop
clc
mov
jne
xor
sub
iret
fisubrl
inc
xchg
into
dec
es
daa
inc
fdivl
mov
mov
fisttpl
xchg
aad
bound
out
fisubrl
repz
lret
and
pushf
les
pop
push
fnstcw
mov
imul
loopne
shlb
sbb
aam
jb
mov
es
sbb
jne
xor
push
jns
rol
sarl
leave
dec
mov
sbb
mov
inc
pop
int3
test
adc
mov
jb
jmp
test
sub
std
leave
sbb
mov
data16
ret
or
xor
daa
jmp
fldl
jno
dec
ljmp
loop
lret
mov
dec
xchg
mov
imul
hlt
pop
mov
jne
sub
aas
pop
xor
out
or
divb
jge
int3
jne
mov
jns
iret
lea
lcall
mov
xlat
xor
mov
imul
mov
sahf
ljmp
mov
lret
ret
xchg
cs
icebp
popf
push
roll
gs
mov
or
push
ljmp
jno
mov
les
lea
insb
or
adc
movsb
jge
or
jno
jbe
or
cltd
lret
xor
push
scas
movsb
sub
in
push
outsb
loop
sbb
je
je
push
jns
xchg
call
cmp
rorb
repnz
xlat
ljmp
mov
inc
loop
je
mov
pop
or
cmc
push
sbb
jns
push
jbe
scas
jp
movsl
add
ret
and
jo
add
test
ljmp
ja
add
push
movsb
les
jne
js
cmp
orb
lcall
in
clc
pop
data16
rcrb
push
dec
loope
inc
lcall
call
or
es
ss
stos
movsb
imull
adc
bnd
xchg
call
test
pop
push
sbb
and
or
sbb
sbb
sarl
jp
cwtl
out
aas
lahf
mov
call
pop
jmp
ss
xlat
leave
xorb
sti
push
fisubrl
test
sbb
enter
outsb
outsb
sbb
popl
pop
scas
push
sahf
stos
xor
jne
imul
ss
dec
and
push
push
mov
popa
rorl
sbb
mov
xchg
jnp
ret
pop
insb
pop
jnp
orl
xor
int3
adc
pop
fprem
mov
push
jp
out
add
xor
xchg
jbe
orl
ljmp
arpl
and
jecxz
ljmp
jmp
rclb
inc
pop
sbb
pusha
sub
imul
movsl
addr16
stos
jne
mov
adcl
push
sahf
cld
push
fists
shrb
test
scas
push
pop
or
jns
push
popf
cli
sbb
icebp
ret
int3
xchg
stos
adcb
js
sub
std
or
popf
xor
inc
pop
fcomp
stos
call
cltd
das
leave
loope
jl
sbb
and
and
mov
xchg
stc
decl
pop
and
je
cld
and
dec
adc
push
in
xchg
cmp
rcrl
and
imulb
mov
scas
add
pop
add
jl
pop
arpl
cmpsl
pop
ficompl
icebp
mov
das
lea
mov
jbe
or
cmpsl
xchg
xor
stos
int
and
push
inc
xor
mov
ret
jnp
divl
xchg
nop
mov
js
icebp
push
in
sub
xchg
dec
sbbb
add
pop
dec
movsl
or
mov
add
or
lahf
push
mov
arpl
in
cmp
and
lahf
pop
movsl
cmp
push
and
clc
popl
ficompl
arpl
lcall
repnz
cmp
loope
pop
pushf
cld
ret
lods
mov
sub
mov
in
iret
outsb
sub
call
into
sbb
mov
mov
gs
fadds
fbld
and
mov
icebp
scas
xchg
sub
mov
loop
push
jmp
adcl
movsb
xor
jg
aaa
arpl
lahf
pop
imul
cmp
jge
iret
jne
addb
mov
pop
dec
cli
addb
ds
icebp
aas
stc
adc
xchg
add
or
jo
xor
cmc
bound
xchg
in
dec
call
addr16
das
rolb
jo
jle
push
cmp
fs
cmp
inc
leave
dec
push
push
dec
mov
fninit
adcl
jno
jnp
mov
xor
pop
sbb
sbb
dec
pmulhuw
sub
adc
and
iret
fdivrl
mov
out
and
cmp
outsb
mov
fidivs
hlt
xor
in
les
lds
ret
mov
xor
xlat
in
xchg
xchg
xor
data16
add
xchg
pushf
leave
jmp
insl
push
add
xor
call
pusha
sub
pop
sarl
push
push
pop
in
inc
inc
and
sub
ficoml
pop
pop
js
mov
xor
push
test
mov
push
cltd
fsubs
inc
adc
jg
jae
popl
pop
pushf
cmp
loope
lcall
in
icebp
mov
ret
pop
sub
push
xchg
pusha
dec
pop
mov
iret
cmp
lret
adc
sahf
shl
into
je
fsubs
or
or
mov
jl
mov
jbe
ja
je
repz
mov
pop
repnz
sbb
mov
inc
or
mov
inc
xor
or
jmp
dec
ljmp
cmc
add
stos
out
repz
jb
dec
bound
into
ds
out
jno
xor
dec
stos
xor
fistps
nop
sub
das
xor
loopne
mov
test
dec
pop
sbb
flds
adc
mov
popa
fidivl
add
pop
inc
adc
pop
lcall
repnz
mov
inc
dec
in
mov
fidivrs
xor
sbb
push
imul
test
stos
jl
mov
mov
loop
cli
imul
mov
or
inc
in
repnz
mov
adc
add
scas
jmp
sahf
mov
pop
cmp
or
xor
adcl
ret
repz
and
add
inc
pusha
dec
test
mov
je
jae
ret
test
xor
xchg
cmp
ret
insl
dec
dec
repz
outsl
mov
fistl
popa
andl
loopne
rorb
jae
addr16
test
inc
lcall
push
push
test
jl
outsl
pop
loope
ret
mov
dec
add
add
xor
popf
icebp
sub
xchg
xor
or
sub
push
xchg
loop
cltd
testl
cltd
mov
rcrb
data16
setg
outsb
push
pop
leave
ja
jbe
pusha
repz
pop
dec
adc
dec
mov
dec
pop
mov
xor
push
xchg
push
ficompl
test
xchg
cmp
xor
subl
aam
popf
scas
addr16
enter
cmp
or
sbb
push
scas
xchg
inc
fildll
lahf
out
shl
fsubrl
clc
or
push
cmpsl
scas
das
scas
ret
cs
inc
dec
xchg
sbb
mov
add
jle
les
jg
cld
rol
stc
stos
insl
test
jecxz
add
inc
test
inc
xlat
lds
xor
int
dec
cmpb
sbb
lea
inc
dec
xchg
push
shlb
test
cmp
mov
ljmp
xchg
jns
xor
mov
or
jnp
test
adc
cwtl
lds
insl
insl
iret
sub
pop
pop
lock
fstpl
sti
scas
cltd
mov
push
cld
xor
movsb
sbb
inc
mov
adc
das
cmpsb
hlt
jno
mov
pop
out
push
pushf
jnp
lds
stc
in
and
xchg
test
sub
cltd
push
lods
pop
and
inc
ret
or
out
adc
sbb
add
xchg
inc
dec
pushf
mov
call
inc
int3
lret
notl
dec
out
jnp
mov
ret
pop
ljmp
sarl
ds
mov
jp
or
mov
adc
sub
jle
or
sub
bound
cltd
jb
pop
sbb
pushf
jae
pop
ss
int3
xor
mov
sub
cltd
gs
jecxz
repz
xchg
mov
sub
inc
filds
xchg
add
js
subb
ds
pop
loope
push
iret
sub
shrb
stc
jns
cli
int
test
aam
test
sahf
in
in
push
into
in
ret
andb
pop
movsb
mov
jp
hlt
and
ud0
jge
movsl
pop
jne
cmp
cmp
fdivp
push
or
popf
xchg
fs
aas
dec
insb
lods
js
pop
rcrl
add
aaa
inc
mov
or
or
jnp
std
inc
mov
lds
and
aam
jne
ss
test
aas
mov
push
jmp
xchg
leave
ret
add
adcb
or
arpl
dec
mov
bswap
push
outsl
push
sbb
lds
divl
push
popf
inc
rolb
shll
test
mov
scas
xor
sbb
shrb
xlat
pusha
flds
out
mov
xchg
jp
fsubl
fs
sub
scas
mov
dec
jmp
cmp
mov
lret
or
mov
sbb
adc
adc
jo
mov
vmptrld
push
inc
popa
aas
outsl
xchg
sbb
pop
sarl
hlt
push
lods
leave
or
cwtl
imul
push
aaa
xchg
xor
mov
out
cmpsl
pop
repz
fs
fistps
cmpb
outsb
dec
cvtdq2ps
out
mov
mov
adc
push
arpl
fmul
xchg
or
pushf
add
das
dec
out
dec
or
shll
aas
ret
gs
pusha
mov
and
jmp
ja
xor
int3
in
mov
dec
test
sub
popf
repz
dec
add
mov
jmp
ret
outsl
push
mov
push
nop
faddl
nop
pop
jecxz
sub
int3
and
dec
inc
scas
jno
xchg
inc
faddl
das
stos
ja
lds
adc
dec
pop
cld
decl
push
mov
pop
repz
pop
stos
das
popa
jo
mov
pop
lret
push
inc
xlat
ja
jb
xchg
xchg
ret
sub
jb
push
mov
inc
and
iret
in
jnp
shl
mov
adc
xorl
pop
adc
push
push
add
inc
inc
or
testb
lret
sub
dec
jb
dec
inc
xlat
mov
outsl
mov
shl
and
sarl
es
push
xor
cmpsb
mov
mov
mov
rorw
andl
jp
filds
dec
mov
data16
pop
out
adc
or
outsb
test
dec
cmc
mov
sub
inc
xor
jo
push
int3
push
adc
dec
add
mov
addr16
push
loopne
imul
mov
cmpsl
dec
imul
outsl
roll
insl
mov
clc
add
xor
je
dec
lods
mov
pop
shrl
ja
or
rorl
sti
mov
aam
fbld
scas
xchg
push
je
rcr
adc
xchg
xor
lods
jmp
mov
xchg
add
xlat
outsl
loopne
ljmp
and
daa
sub
inc
test
adc
push
scas
pop
add
scas
lods
fidivs
xchg
nop
bound
dec
enter
ss
mov
mov
jp
mov
shll
push
imul
jge
into
inc
lret
int3
lret
scas
push
cmp
enter
fs
ja,pn
pusha
loop
popf
cmp
lret
sbb
xchg
aad
jo
imul
add
xchg
rclb
scas
aad
int
js
sti
jbe
adc
lahf
repz
xchg
cmp
mov
add
sub
imul
or
out
push
mov
hlt
lahf
inc
xchg
mov
fcomi
pop
dec
cmpps
mov
pushf
fldl
arpl
sub
xor
push
popf
push
shrl
aad
lods
inc
inc
xchg
or
lret
xor
and
cwtl
mov
into
sub
mov
outsl
lahf
cs
cmpsl
daa
fdivs
xchg
lret
and
push
fcoms
insl
ss
stos
push
mov
pop
enter
roll
jae
leave
push
out
cmpl
out
or
cmpxchg
mov
mov
jo
xchg
int3
pop
mov
movsb
in
dec
xchg
jle
mov
jmp
cli
test
rorb
out
xlat
xor
iret
jmp
cmp
aam
jl
stc
xor
sub
in
cmp
adcl
mov
and
adc
scas
call
push
outsl
outsb
fcompl
adc
xchg
aam
cmpsb
dec
les
fwait
loop
popf
out
ss
jo
pushf
pusha
pop
jl
mov
aam
shll
mov
out
jge
test
iret
push
mov
mov
jecxz
lods
adcb
jge
xchg
mov
xchg
fcomip
or
shrl
xchg
hlt
push
es
jge
cmp
stos
lahf
xchg
mov
or
das
call
in
inc
jge
xchg
aas
or
adc
mov
jg
xchg
and
push
cmp
ficompl
xor
jge
cs
cmp
jmp
xor
hlt
loopne
loop
mov
fstpt
lahf
scas
push
movsl
dec
stos
inc
fld
popf
xor
incl
pop
cwtl
icebp
aaa
cmpsb
jle
sub
in
ret
add
rcrl
jg
cmp
pop
movsb
inc
aas
pop
xchg
sub
stos
dec
jbe
push
lcall
ret
push
sbb
inc
insl
jge
and
stc
daa
fiaddl
lret
add
dec
call
jge
dec
outsl
daa
loop
sub
scas
push
fcmove
int3
ret
cmpsb
aas
jp
inc
fsts
aam
testl
sub
loopne
adc
in
pushf
imul
inc
out
jle
flds
cs
jl
adc
and
out
sti
pop
lds
xor
imul
sbb
shr
sbb
hlt
add
in
ja
xor
mov
sub
push
cmp
ljmp
repnz
jae
sbb
dec
adc
add
cld
data16
jg
push
sub
and
test
lds
cmpsl
xchg
mov
cmpsl
cmp
pop
ret
fdivrl
jmp
je
insb
adc
orb
cli
lea
or
xor
lea
xor
xor
stc
sub
pop
dec
xor
jae
dec
rclb
lods
and
dec
repz
xor
and
jle
pop
aad
pop
xor
lock
add
mov
add
cmpsl
mov
xlat
insb
lahf
add
pop
adc
inc
cmpsl
test
test
vcvtss2si
mov
mov
aas
dec
dec
es
hlt
dec
rolb
mov
imul
mov
mov
test
shl
jo
dec
test
loope
fs
dec
in
xchg
or
fidivl
movsb
fdivrs
xchg
xorl
cli
jmp
push
push
pushw
mul
test
movsl
repnz
test
inc
cmp
imul
adc
fldenv
imul
cmpsl
mov
push
sti
pop
jg
pop
or
push
inc
cmp
gs
inc
and
jae
and
aaa
lea
pop
in
mov
mov
inc
movsl
cld
daa
out
mov
dec
mov
lods
xor
insl
int
ds
xchg
jmp
nop
jns
jle
movsl
pop
in
dec
jnp
movsb
xor
cmpsl
sbb
xlat
inc
loop
push
and
add
mov
popf
pop
sarb
and
in
add
imul
ja
test
mov
cmp
loopne
xor
cmp
dec
dec
mov
in
sub
sub
repz
mov
adc
ljmp
jmp
mov
addb
jp
and
aad
rcrl
push
xchg
or
call
pop
loope
insl
lcall
test
pop
adc
aaa
fstps
dec
aad
fadd
out
lods
adc
sahf
fwait
paddq
data16
jno
mov
lret
pop
lret
gs
pop
mov
jae
mov
int
sbb
mov
ds
lahf
push
lods
xchg
sahf
or
repz
push
test
or
data16
dec
cmp
sar
sbb
ror
cmp
pop
movsb
shlb
pop
mov
mov
xor
rcll
mov
leave
mov
daa
outsl
mov
pop
inc
mov
mov
icebp
andb
insl
pop
mov
and
decb
das
call
inc
cmp
outsl
loope
mov
pop
lahf
mov
rorb
loopne
das
adc
outsb
out
mov
in
test
push
or
xchg
mov
fs
insl
insb
adc
jne
hlt
lret
or
fstpt
int3
adc
lods
in
fs
sbb
xchg
repz
lahf
xor
inc
clc
push
add
imul
and
and
sahf
dec
mov
and
mov
pcmpgtb
lock
mov
fnsave
jo
dec
sbb
movsl
fdivl
push
push
icebp
nop
push
pop
dec
pushf
push
lcall
and
ss
xchg
and
fs
mov
addl
icebp
ret
pop
fidivrl
in
adc
outsl
mov
aaa
pop
insw
inc
jmp
add
test
inc
xor
add
sub
adc
js
add
fwait
and
xor
nop
adc
push
sbb
dec
pop
pop
mov
stos
inc
mov
jg
xor
testb
and
inc
xchg
cltd
cld
pop
dec
loopne
cltd
inc
mov
jle
mov
nop
dec
sub
in
cmp
jne
aaa
in
pop
cld
pushf
lds
lret
cmp
inc
gs
mov
sbb
xor
sub
adc
mov
add
adc
pop
imul
imul
cltd
fistpl
std
and
insb
jl
addb
push
mov
add
aad
shll
add
ret
jle
stos
push
fiadds
mov
xchg
outsb
dec
cli
and
imul
xor
stos
sbb
cld
sbb
test
lahf
pop
outsl
xchg
leavew
dec
pop
mov
and
sti
ss
push
inc
rcll
les
xor
test
mov
ret
and
mov
es
xchg
xchg
jae
adc
out
pop
lret
mov
nop
js
lock
mov
clc
adc
scas
add
pushf
jecxz
nop
iret
fstl
fwait
nopl
sbb
xchg
cmpsl
test
bound
pop
jns
inc
pusha
dec
pop
add
std
dec
scas
push
arpl
or
cs
xchg
jge
dec
sbb
mov
mov
mov
push
cli
mov
cmp
cmp
dec
loope
pop
in
dec
xor
pusha
notl
fwait
fs
sub
and
sub
mov
xchg
mov
mov
add
shrl
shl
or
and
rcr
nop
es
inc
int3
jae
mov
xlat
and
adc
loop
jb
mov
xor
pop
xchg
cmp
sbbb
ret
lret
add
push
pop
and
mov
or
ljmp
ljmp
insl
add
inc
push
insl
lods
or
ja
mov
lret
scas
xchg
or
mov
jp
jecxz
adc
repz
sbbb
mov
addl
icebp
mov
push
lods
aaa
push
xor
mov
pop
adc
cs
inc
pushf
mov
lods
dec
ljmp
arpl
popa
xlat
push
std
and
jae
cmp
xchg
add
pop
mov
mov
cmp
clc
subl
andl
bnd
mov
loop
mov
test
cmp
test
test
push
inc
out
ficompl
add
xchg
ja
pop
push
pushf
ljmp
loope
loop
jecxz
mov
push
addr16
popf
mov
jbe
daa
adc
mov
mov
fisttpl
pop
stc
jns
cli
mov
bound
mov
and
lods
sti
negl
dec
mov
mov
ljmp
cmp
fnstcw
adc
ret
xchg
jge
lods
dec
out
test
and
mov
pop
cltd
mov
push
mov
fs
call
xor
scas
aaa
pop
sbb
dec
jecxz
shrb
xchg
adc
mov
addr16
xchg
cltd
or
push
jl
sub
sub
lahf
xchg
scas
ds
xor
and
outsl
lods
cmc
mov
xchg
push
lea
pop
scas
inc
pop
loopne
xchg
sbb
push
mov
shrd
mov
add
pop
or
sbb
repnz
sub
in
inc
int3
or
pop
inc
cmp
mov
mov
imull
mov
add
call
cmpsb
jns
pop
dec
loop
repz
sub
imul
repnz
or
xlat
mov
jecxz
nop
mov
insb
mov
mov
imul
or
xchg
sti
push
loop
pop
insb
add
inc
sub
pop
xor
push
subb
movsl
jl
pop
sbb
push
dec
add
jl
add
mov
out
xchg
incb
xsha1
cmpsb
or
popa
ds
sub
ret
divl
xor
adc
pop
mov
push
jle
mov
cmc
cmpxchg
xchg
or
push
out
jo
lcall
popa
and
mov
push
mov
adc
cmp
push
add
cmpl
loope
xchg
push
ljmp
lock
xchg
es
inc
arpl
mov
or
popa
cmp
xor
ret
lret
jecxz
fcompl
xchg
pop
or
fs
imul
stos
sub
sub
push
into
out
xor
push
pop
movsb
ja
cwtl
stos
ss
cmc
dec
push
xchg
mov
add
push
mov
inc
ja
jp
popa
and
xor
cwtl
jae
push
or
loopne
adc
out
rcrl
mov
adc
xchg
ljmp
xchg
mov
std
ja
push
cltd
xor
xchg
ja
ds
js
add
ds
repz
jmp
testl
mov
inc
mov
in
push
sub
mov
mov
mov
and
sarl
push
rorb
mov
add
stc
js
fcompl
pusha
testl
jle
outsl
push
test
popf
fs
jo
mov
pop
ja
loop
mov
sub
cmp
call
sub
ljmp
xor
adc
pop
and
and
rolb
ja
pop
adc
add
xchg
jg
push
dec
in
ds
cmp
loopne
dec
dec
dec
dec
in
das
cmp
or
std
cmp
sub
add
shlb
loope
push
push
test
sbb
push
jae
jg
ss
sbb
dec
and
xchg
pop
adc
fs
scas
mov
into
leave
xor
sub
push
pop
mov
and
pop
inc
mov
fcompl
pop
adc
jns
jp
hlt
mov
push
add
in
pop
mov
into
dec
arpl
cmp
jb
jp
inc
and
repnz
rcrb
mov
push
call
push
or
dec
inc
fidivrl
and
jno
lods
sbb
push
dec
into
xchg
popf
jns
mov
fwait
and
dec
ja
dec
inc
mov
mov
push
int
inc
loop
cmpsl
jnp
mov
xchg
jne
popa
cmpsl
sbb
or
rclb
insb
lahf
mov
out
shl
push
push
mov
or
insb
jle
sahf
or
sub
pushf
dec
jecxz
mov
addl
cmp
shl
ja
repnz
cwtl
leave
stc
inc
xchg
call
mov
push
hlt
jg
hlt
pusha
shrl
sub
jmp
jnp
icebp
and
push
jnp
and
inc
pushf
fidivs
loope
lock
std
xchg
fldl
incl
and
cmp
jb
rcrb
xlat
push
inc
dec
in
inc
lea
insl
shr
jg
mov
icebp
or
push
popf
stos
aad
sbb
scas
loop
mov
dec
and
jecxz
xchg
sub
ljmp
clc
mov
es
and
jns
inc
xlat
cmp
psllw
ja
cwtl
test
inc
push
aas
mov
adc
into
fisubrl
je
inc
mov
daa
jmp
mov
rorb
xchg
notb
out
enter
sub
inc
pop
xchg
ds
outsl
cmp
dec
ds
push
push
mov
dec
adcb
loopne
sbb
push
adc
cmp
xor
cmp
sti
xchg
mov
and
jecxz
ljmp
mov
addl
dec
enter
inc
out
sbb
aas
add
das
aad
mov
sbb
or
pop
mov
adc
and
pop
cmp
call
inc
mov
dec
shlb
cs
mov
outsl
int3
xchg
pusha
lcall
push
or
mov
loop
inc
das
jne
inc
mov
mov
sbb
add
pop
sbb
cmpsl
dec
sbb
pop
sub
jmp
cld
fwait
mov
fwait
stos
push
out
push
mov
jae
mov
push
xor
inc
xchg
push
or
clc
outsb
mov
lahf
sbb
mov
mov
fisubrl
mov
sub
push
pop
adc
add
dec
ret
cs
jb
in
jbe
cmp
ljmp
test
xchg
popf
shlb
pop
clc
cmp
and
mov
mov
and
stc
nop
addr16
jno
iret
pushf
or
and
popa
push
addr16
xchg
push
lahf
inc
sbb
adc
andb
std
xchg
jmp
and
mov
enter
jp
and
movsb
push
stc
or
xchg
dec
pop
inc
sbb
icebp
xor
push
addr16
rorl
push
data16
lds
and
pop
add
add
add
inc
push
inc
out
cmpsb
add
push
aaa
push
ss
jg
or
jnp
and
cmp
jmp
adc
cmp
mov
mov
lds
fistpl
sub
movsb
arpl
subb
lret
negl
movsl
jecxz
out
push
pop
int3
mov
loopne
ret
loope
adc
lods
mov
sbb
xor
cmp
or
lods
mov
loope
mov
hlt
push
mov
js
adc
sbb
outsb
clc
pop
jg
mov
hlt
mov
pop
sti
pop
push
filds
in
sub
cli
pop
or
out
dec
mov
xchg
push
mov
and
xchg
je
sti
outsb
cmp
testl
scas
movsl
push
sub
add
xchg
mov
pusha
stc
in
clc
dec
cltd
add
js
xor
sbb
jnp
outsb
cmp
cmpsb
cmp
loopne
fwait
out
adc
sti
dec
or
sub
ds
pop
pop
mov
stc
or
out
mov
pushl
adc
push
jae
hlt
sub
addr16
fs
arpl
inc
sbbb
pusha
cmp
push
int
pop
cmp
push
jmp
lock
arpl
jb
mov
cmc
insb
or
push
sub
rorl
and
xchg
jb
lahf
sub
push
dec
pushf
mov
outsb
mov
add
in
inc
and
inc
push
addr16
jp
das
aam
inc
push
out
jb
jns
ret
imul
shl
adc
push
ljmp
push
sub
inc
hlt
cs
cltd
arpl
sahf
xchg
or
movsl
push
nop
xchg
inc
adc
jl,pn
xchg
rcl
or
jecxz
sub
sti
xchg
in
sbb
cltd
dec
dec
xchg
inc
cmp
and
ficompl
pop
lods
enter
loopne
cmc
xchg
je
mov
jo
mov
mov
movsl
loope
int3
cmp
mov
mov
adc
rorb
pop
ljmp
out
inc
cld
jo
or
xchg
mov
out
int3
scas
mov
shl
xchg
adc
xchg
and
lahf
lret
lret
dec
ret
fdivl
dec
inc
fnsave
mov
inc
leave
jns
add
mov
adc
div
ja
jno
pop
jle
mov
sub
int
out
in
lock
pop
pop
jge
std
lcall
rolb
xchg
pop
pop
jecxz
stc
lock
add
in
jnp
call
add
inc
push
mov
sub
dec
and
mov
push
sub
in
clc
lahf
outsb
add
push
insb
jno
lcall
dec
cmp
imul
push
movsl
jp
inc
addr16
xchg
loopne
divb
mov
cltd
xor
mov
sub
adc
fcmovu
mov
sbb
bound
pusha
test
fldenv
int3
test
mov
sbb
ja
xor
mov
idivl
cmpsb
ja
dec
fdivrs
outsb
dec
int
int
stos
in
pop
popa
daa
push
data16
fmul
insl
mov
jp
xorl
addb
aad
out
adc
add
xor
fisttpl
leave
mov
sti
adc
inc
dec
repz
stos
sub
sbb
inc
mov
loop
sbb
daa
sub
cmp
in
mov
repnz
push
push
arpl
hlt
mov
pop
insl
mov
test
or
stc
imul
add
or
mov
mov
adc
adc
jbe
notb
rorl
push
inc
pushf
imul
adc
lock
xchg
shl
jl
dec
adc
imulb
fbstp
outsl
repz
adc
xchg
rcr
inc
mov
xchg
cmpsl
inc
shr
test
push
mov
inc
mov
and
mov
mov
and
inc
mov
rcrl
adc
jb
pop
movsb
gs
push
mov
xor
ret
ljmp
sub
jle
mov
std
mov
bound
fst
xor
mov
dec
pop
lret
dec
pop
scas
out
jne
add
jp
ret
jmp
push
popl
aas
aam
sub
repz
add
mov
dec
jno
test
out
loope
and
cltd
jecxz
idivl
add
inc
push
call
sub
add
roll
scas
loop
aas
xor
mov
ficoms
icebp
dec
lret
iret
scas
in
aas
jne
jg
pop
stos
dec
cwtl
lock
fisubrl
rcrl
inc
xor
sub
cmp
ret
sbb
clc
lret
fucomi
jns
add
cltd
lcall
mov
mov
movb
xor
loop
cmpsl
hlt
xchg
pop
mov
in
rorb
mov
dec
jle
mov
movsb
out
add
mov
cmp
jle
icebp
sbb
movsb
lods
test
pop
cltd
in
mov
negb
or
mov
sbbb
scas
mov
test
adc
pushl
adc
nop
mov
push
sbb
mov
push
rol
das
lahf
lds
cmp
sub
and
adc
frstpm(287
jp
sbb
jnp
rorb
inc
mov
js
fs
cmp
les
dec
sub
sub
and
mov
inc
shrb
sbb
sbb
adc
mov
xchg
sbb
or
lret
scas
negl
add
enter
repz
pop
out
sarl
jo
repnz
ljmp
push
jge
add
jmp
sub
or
imul
add
and
jmp
inc
stc
sahf
iret
xor
scas
inc
jmp
call
cmpsl
pusha
xor
sbb
inc
or
addr16
and
mov
lea
mov
testl
mov
mov
vpacksswb
mov
cmp
imul
inc
fdiv
lret
movsl
mov
xchg
cwtl
push
push
fisubl
fs
sti
or
mov
aaa
mov
xchg
fcmovb
pop
insb
shlb
popf
push
push
jnp
es
mov
icebp
loop
imul
xlat
lods
in
push
mov
int
int
cli
mov
das
cmpsl
lds
inc
push
ss
xor
or
sbb
pop
jecxz
push
xchg
pop
and
add
popf
cmc
push
push
add
ret
adc
or
add
subl
jns
sbbb
and
fdivl
xchg
in
stos
push
mulb
popf
jecxz
fsubl
aam
rol
dec
pop
jae
fbstp
add
inc
mov
push
push
push
push
push
inc
fistpl
push
cmc
jo
dec
icebp
jo
sub
xor
push
into
gs
pop
sub
outsl
loop
ret
hlt
cli
adc
xchg
xchg
push
push
lcall
fimuls
stos
ss
mov
fimuls
popf
pop
enter
mov
les
test
insb
nopl
sub
out
push
insl
cmp
negb
mov
sub
movsb
stos
xchg
sbb
add
loope
test
js
lea
sarb
pop
in
loope
leave
push
add
push
outsb
aaa
imul
cmpsb
in
icebp
mov
testb
mov
cmp
or
xchg
cs
stos
inc
jmp
jmp
cmpsl
loopne
jb
adc
push
sbb
in
outsb
jbe
movsl
push
imul
jl
out
mov
sub
rcll
fbstp
pop
movsl
add
les
movsl
inc
inc
push
out
das
mov
or
cmp
call
sub
mov
pop
and
mov
out
or
cmp
dec
orb
ds
sti
sbb
inc
pop
sub
rcrb
out
pop
xlat
rclb
mov
out
cmpsl
adc
or
sbb
mov
subl
adc
mov
mov
sub
mov
xchg
jne
orl
cmp
push
out
scas
inc
lret
shlb
orb
push
cmpsl
xchg
mov
sbb
pop
or
pop
shr
imul
test
cmp
cmc
insl
adc
imul
jb
inc
daa
inc
mov
pop
pop
rcrb
jnp
into
stos
pusha
inc
push
shll
xor
jle
add
ret
sahf
rcrl
sbb
mov
jg
or
cmp
stos
push
nop
xchg
push
jmp
movsb
gs
js
loop
and
add
out
inc
mov
rorb
jns
in
aam
pop
push
add
outsl
outsl
rcll
nop
mov
pop
dec
ja
lret
hlt
or
push
push
or
cli
sbb
out
xchg
mov
mov
les
and
mov
sub
sub
push
mov
jbe
cs
mov
xchg
add
push
inc
ret
ret
hlt
mov
rolb
jb
mov
movl
sbb
hlt
ds
cmp
sahf
push
jae
cmp
movsb
jo
and
sbb
push
push
ja
push
test
pusha
adc
popa
int
sbb
xor
sarl
jp
shr
into
gs
cmc
mov
mov
in
adc
imul
or
pop
in
shr
lds
cli
aas
lea
imulb
insb
jle
int
xchg
pop
jg
dec
scas
cmp
mov
lcall
insl
insb
frstor
inc
adc
imulb
sahf
and
push
sbb
or
jno
mov
mov
aas
xchg
sbb
fildll
fnstenv
icebp
mov
fstpt
sbb
ja
xchg
push
pop
aaa
out
xchg
roll
mov
or
shrl
jae
cltd
xchg
push
repz
rcrl
pusha
pop
arpl
repz
and
sti
faddp
xchg
sub
inc
imul
mov
loope
sbb
mov
xchg
ret
lods
xchg
mov
jne
fistpl
push
cli
mov
cmp
xchg
popa
jmp
decl
mov
aaa
push
inc
popf
mov
daa
mov
popf
lods
push
pop
dec
push
mov
or
push
and
mov
push
inc
sbb
mov
imul
and
sahf
pop
mov
adc
mov
xor
sbb
adc
inc
cmp
mov
and
test
jns
enter
adc
pop
mull
add
push
xlat
sub
je
es
mul
sbb
rorl
or
inc
xchg
in
add
stos
sub
arpl
ds
imul
adc
mov
imul
jae
cmp
stos
andl
lods
lds
icebp
cwtl
fdiv
xchg
neg
add
addr16
push
xor
mov
xchg
sub
jb
add
call
sbb
ds
stos
test
push
fwait
pop
fnstenv
ljmp
in
sbb
inc
aam
lock
jmp
mov
sub
out
sbb
das
ret
jle
add
xor
loope
in
and
push
imul
fiadds
push
or
mov
sbbl
adc
adc
push
in
nop
add
imul
mov
fistl
add
test
xor
xor
mov
mov
out
out
and
inc
ffree
cld
bound
rcrl
pop
dec
jne
push
jmp
adc
pop
xchg
mov
pop
cmc
mov
ret
out
mov
pop
pop
cltd
test
stos
test
pop
in
mov
jnp
pop
ds
jne
sbbl
ds
shrb
pop
and
mov
xchg
js
mov
adc
fwait
fs
int3
fsts
lret
into
push
and
pusha
lret
add
dec
mov
jne
sub
inc
pop
xlat
test
jae
bound
mov
or
cmpsl
lea
sub
push
imul
sahf
and
addr16
mov
mov
sbb
push
dec
mov
pop
movsl
push
movsl
push
xchg
jg,pn
mov
shrl
or
dec
mov
xchg
out
decb
das
in
inc
imull
push
into
push
ret
or
jno
mov
je
mov
sti
xchg
icebp
jmp
mov
call
mov
insb
lods
mov
shlb
add
sbb
scas
mov
rorl
imul
imul
xor
movsb
mov
inc
les
call
and
inc
push
insl
call
fs
fdivs
stos
mov
shlb
inc
ljmp
cmpsl
mov
mov
jl
xchg
fisttpll
test
cmp
lds
push
mov
out
out
arpl
gs
inc
mov
mov
mov
gs
push
cmp
jnp
leave
call
scas
jp
out
dec
int
adc
aad
lret
mov
test
xor
adc
xchg
cltd
or
and
pop
inc
int
pop
pop
mov
xchg
sub
add
fisubl
push
pop
lods
jmp
js
jecxz
xchg
push
mov
push
lahf
movsl
adc
in
xor
jge
mov
jge
les
lods
lods
ret
jmp
or
in
into
pop
mov
mov
mov
add
dec
fnstcw
fcompl
push
and
lahf
adc
mov
sbb
mov
mov
xor
lds
jnp
push
sub
inc
push
sbb
mov
outsb
bound
sti
xchg
sub
out
fwait
sub
roll
mov
enter
sahf
std
sbb
cltd
repnz
bound
cmpsl
sub
psrlq
stos
xchg
aad
imul
shll
or
pop
inc
inc
xor
jns
insb
sub
inc
xchg
stos
movsl
sub
jmp
jnp
arpl
jno
outsl
mov
fistps
mov
sub
cmpb
inc
mov
cmp
aaa
mov
sub
bound
popa
out
xchg
fs
mov
jmp
push
fsub
add
cli
test
fisubrl
inc
mov
call
je
scas
js
lea
jecxz
popf
add
push
outsl
je
mov
je
leave
fnstenv
mov
imul
stc
xor
fistpl
add
sbb
adc
lods
stc
push
xor
daa
fldcw
fdivrp
mov
and
jno
inc
adc
pop
jnp
imul
pusha
jp
dec
cmp
dec
sbb
lahf
in
in
arpl
xchg
cmp
xchg
inc
test
ret
nop
addr16
sti
inc
nop
pop
les
jmp
adc
adc
fcoms
sub
cmp
and
andb
add
push
nop
sbb
or
outsb
jne
mov
dec
lcall
aaa
dec
fisubl
mov
add
mov
sbb
lock
lods
mov
cmp
out
push
push
ret
and
add
shlb
jbe
push
lods
test
jno
and
hlt
test
mov
inc
inc
test
or
pushf
pop
es
sub
pusha
dec
int3
fisubrl
xor
les
in
lock
xchg
mov
js
mov
xchg
mov
dec
xor
jne
or
push
adc
sbb
adc
sti
fiadds
out
aad
loop
xchg
pop
test
pop
pop
dec
xchg
stos
mov
ljmp
iret
cwtl
imul
jae
xchg
sub
mov
lea
out
dec
scas
push
mov
push
arpl
dec
ret
repz
inc
mov
shrl
int3
pop
push
lock
out
sbb
xchg
addr16
rolb
dec
cmp
addr16
lret
rcrl
push
js
nop
xchg
adc
mov
scas
mov
shl
push
shlb
or
pop
push
push
stc
pop
xchg
loop
outsb
fs
jl
movsl
out
lods
mov
xorb
and
out
in
dec
inc
adc
jge
mov
std
mov
pause
cmp
dec
js
in
movsl
scas
sub
lock
cmp
jp,pn
mov
adc
or
out
xchg
mov
jmp
lock
jo
dec
lret
insb
pop
jo
xor
push
xchg
call
mov
fsubrs
pop
imul
sub
mov
cld
andl
out
enter
sub
pop
mov
jb
cmp
jecxz
imul
addr16
enter
cmp
imul
sbb
data16
xor
or
inc
loopne
sbb
sub
cmp
jl
or
sti
stos
jnp
in
add
ja
stos
rorb
scas
ds
pop
cwtl
mov
sarb
add
push
sub
lock
mov
pop
bound
popf
xchg
rclb
cmp
insb
test
mov
loopne
jb
loope
aaa
outsl
cli
cmpsl
les
aam
lcall
push
or
lods
jp
ficoms
mov
and
stc
aaa
mov
das
cmp
push
mov
mov
lods
pushf
test
xor
cmp
loopne
lock
testl
mov
sub
cmc
mov
je
inc
cli
cli
sbb
dec
sbb
in
loop
popa
in
sbb
mov
mov
adc
jno
pushf
mov
popf
fsubrs
xor
jb
jg
add
mov
fs
and
dec
test
mov
mov
movsl
xchg
repnz
aam
cmp
push
stos
sbb
mov
mov
sub
sbb
jae
jae
jbe
push
sbb
cwtl
fldcw
jp
push
xor
sub
adc
jo
in
pop
push
jecxz
subl
adc
sub
repnz
repnz
out
sti
pop
lea
mov
imul
ljmp
jmp
loopne
cmp
push
stos
fs
outsl
xchg
int3
popf
in
push
mov
rolb
dec
out
enter
sub
rcl
es
pop
inc
jnp
mov
mov
xor
xchg
adcl
into
mov
mov
mov
jae
je
outsl
pop
inc
enter
cmp
dec
mov
call
or
popa
sub
pusha
ss
mov
mov
out
imul
mov
cmp
in
lds
test
or
das
push
scas
popl
int
lcall
adc
outsl
inc
scas
push
decb
movhlps
pushf
mov
out
cltd
sahf
cmc
fisttpl
notl
stc
repz
pop
dec
pop
mov
mov
xor
mulb
das
ret
movsb
in
inc
jecxz
mov
jb
xor
add
test
test
test
popf
popa
adc
xlat
rorb
call
insb
adc
mov
leave
int
xchg
mov
pop
mov
clc
cmp
ss
aad
rorb
jge
cmp
lock
pop
cmp
xchg
dec
or
jg
and
add
mull
in
mov
adc
jae
fsubr
bound
fstpl
imul
imul
lods
lods
bound
and
jo
andb
mov
add
iret
push
pop
mov
push
ret
loop
subb
shll
sbb
aam
aaa
lods
inc
imul
je
out
push
or
cmp
mov
mov
stos
out
inc
in
inc
ret
repz
popa
jb
ja
xchg
mov
push
fsubrl
adc
fsts
xchg
mov
or
adc
and
push
push
pop
xor
jnp
insb
sub
mov
iret
pop
aad
orl
enter
and
roll
mov
sub
notl
sub
notl
xchg
div
mov
or
dec
push
outsl
pop
xchg
dec
lea
movsl
sbb
ffreep
mov
loop
pop
cmpsl
cmp
or
mov
ret
lcall
sbb
je
nop
mov
add
push
outsl
rcrb
aaa
fmuls
cmpsb
sti
clc
jle
sub
inc
adc
add
jmp
push
in
push
jl
xchg
lods
sti
jo
data16
hlt
xchg
int3
mov
inc
and
fdivrl
adc
loopne
out
cmc
aaa
scas
push
jno
cltd
cmc
imul
push
fwait
out
mov
fistl
sar
popl
lods
les
mov
fldt
adc
or
cmp
jle
out
mov
cld
xor
cltd
jo
xchg
lods
inc
xchg
pop
mov
mov
jle
inc
cwtl
mov
inc
loopne
mov
adc
mov
rcrl
mov
pop
xchg
jno
out
pop
dec
mov
push
outsl
daa
inc
mov
inc
mov
mov
ss
mov
dec
jo
or
cli
xchg
rcrb
mov
push
sbb
add
mov
mov
dec
out
stos
xor
sub
stos
pop
data16
and
test
jnp
stos
inc
push
and
in
dec
clc
popl
icebp
push
mov
pusha
shrb
push
in
jecxz
mov
adc
mov
mov
ret
jle
pop
fwait
sub
jmp
shlb
xor
in
push
jnp
pusha
pop
out
add
push
cmpsb
adc
mov
fwait
adc
sahf
jno
sti
adc
fadd
fmull
mov
dec
andb
jmp
es
pop
jle
or
stos
cli
pop
sub
pop
mov
sub
pop
repz
movups
loopne
adc
dec
xchg
les
movsb
orl
adc
lret
fidivl
outsl
pop
xor
add
scas
mov
aaa
sbb
in
mov
push
inc
cmp
xor
movl
or
fwait
jge
and
pop
mov
lret
cld
jo
or
js,pn
fldl
inc
and
fwait
push
in
and
cmp
jb
cmpsl
ror
and
lock
cltd
gs
sub
lock
cltd
mov
xorl
cmp
dec
leave
je
pop
inc
mov
adc
adc
and
incb
jb
addb
dec
add
pop
rcrb
fwait
jmp
inc
mov
rclb
loopne
mov
idivl
xchg
sub
fnstenv
xchg
sti
ret
push
movsb
xchg
sub
loop
test
jae
cs
hlt
sub
jp
add
pop
fs
mov
push
or
or
ja
adcb
adc
cmpsl
test
pop
mov
cmp
dec
mov
sub
jbe
sbb
or
mov
add
and
cmpsb
fld
repz
jg
data16
cmp
insl
sbb
mov
add
das
pusha
adc
pop
cmpl
or
push
jb
mov
arpl
leave
pop
and
aad
ret
jno
or
and
mov
pop
es
sub
jle
popf
jle
mov
sbbl
push
or
test
add
mov
pop
leave
or
cmp
in
add
lret
and
jo
cmpsb
out
sbb
scas
and
mov
test
out
scas
sbb
notb
mov
in
out
lods
loope
push
dec
stos
sbb
je
fdivp
les
fsubrp
add
pop
or
aam
sbb
sub
xlat
gs
sub
aam
and
imulb
sub
cmp
adc
dec
sub
shll
xchg
jl
test
lods
xchg
cli
add
orb
pop
pop
sub
lock
mov
mov
gs
pushf
add
xchg
xor
jl
adc
mov
mulb
cmp
test
adc
shl
sbbl
test
out
xor
sbb
push
dec
mov
sbb
inc
jne
les
inc
lret
and
fstps
push
int3
jno
mov
in
jb
pop
ret
hlt
push
sbb
sbb
mov
sbb
loop
push
jge
and
xor
mov
push
lahf
idivl
les
add
imul
inc
xor
mov
adcb
mov
add
cmp
mov
cmp
js
jg
dec
dec
in
dec
pop
jge
jnp
sub
pop
xchg
pop
out
cmp
cmpsl
stos
scas
sub
adcl
arpl
adc
adc
out
and
dec
jg
outsl
pop
jl
ret
test
push
mov
push
fiadds
popf
pop
pop
outsb
outsb
add
xchg
lds
mov
sub
xchg
movd
jecxz
fwait
aam
or
mov
insl
add
or
mov
rclb
mov
jmp
movsl
adc
mov
sub
sub
data16
cmp
loope
mov
xchg
cmp
shll
push
daa
dec
pop
xchg
add
xchg
jae
xchg
sub
mov
movsl
mov
cmp
int
add
bound
into
xchg
pop
lock
jmp
ja
sahf
iret
int
pop
ja
pop
mov
data16
lahf
pop
push
dec
dec
mov
dec
mov
mov
mov
jge,pt
sbb
and
sub
inc
hlt
pop
xchg
sub
and
sub
stc
andl
adc
lods
scas
outsl
roll
nop
xor
jb
push
and
inc
push
mov
sti
cmp
popa
and
inc
cli
nop
leave
jmp
add
sub
push
xchg
and
jbe
outsb
out
aad
xchg
xchg
push
dec
xor
mov
sbb
cmp
push
mov
mov
data16
movsl
fdivl
mov
cli
and
jae
mov
sbb
sbb
daa
paddusb
mov
test
in
lods
sahf
test
psrad
cmovle
mov
orb
fsubrp
test
cmovne
pop
ja
xor
shlb
mov
mov
lods
pop
cmp
test
dec
stos
idivl
inc
pop
xor
fldl
xor
shr
jmp
imull
stos
xchg
scas
test
jle
ret
pushl
movsb
mov
out
and
out
lcall
es
pop
imul
orb
mov
xchg
mov
in
sarb
mov
add
fwait
and
mov
lret
sub
mov
aaa
and
sbb
jle
mov
aad
jg
adc
dec
pop
mov
pusha
mov
setge
aaa
cwtl
pop
jno
fs
mov
pop
test
mov
push
push
gs
or
int
loope
or
adcl
insb
push
dec
add
sub
lret
xor
lods
sti
fwait
sub
jmp
push
and
and
sahf
mov
ficoms
mov
push
dec
jecxz
push
call
movsb
std
test
mov
pop
sti
push
shlb
iret
pop
loope
xor
hlt
push
or
les
xchg
lret
in
xorl
mov
es
xchg
jecxz
aad
sub
pslld
inc
push
insb
popa
test
adc
inc
mov
xorb
arpl
mov
das
xor
icebp
fsubr
into
sbb
into
les
add
push
out
xchg
out
push
xchg
sub
adc
pop
imul
lods
push
jno
ret
mov
mov
sbb
jmp
pushf
das
dec
mov
sub
lea
add
divl
hlt
mov
adc
insl
aaa
sti
pop
cwtl
lds
mov
mov
addr16
pop
sbb
mov
fcmovbe
roll
and
pop
test
jno
and
xchg
mov
mov
ror
frstor
ret
sub
mulb
mov
mov
sarl
xchg
mov
sub
sub
fistps
lahf
out
dec
dec
cmp
leave
int
out
aas
mov
and
ljmp
sti
das
stos
mov
and
incl
mov
in
cs
adc
xchg
push
or
dec
or
sbb
and
push
or
loop
xrelease
push
cmpsb
fsubl
mov
fistl
fdivl
in
push
xor
xorb
and
mov
ret
outsb
lock
xchg
lods
arpl
int
cmp
push
cmp
cmp
push
dec
pusha
das
xor
aaa
push
xchg
in
push
loop
cmp
sti
fidivrl
adc
and
insl
adc
inc
mov
icebp
and
mov
out
data16
fildll
ljmp
aam
push
clc
jp
jbe
lret
cld
xchg
mov
jl
sahf
push
push
sahf
add
es
push
movl
lret
and
pushf
ficompl
or
mov
shll
adc
dec
sub
ficoml
mov
mov
mov
dec
lcall
stos
idivb
into
mov
shufps
rol
mov
inc
mov
jb
out
jge
mov
cmp
mov
push
or
xchg
test
cmpsb
lock
adc
or
xchg
pusha
sbb
popa
lds
push
loope
jb
push
hlt
pop
dec
in
rcrl
mov
out
push
clc
test
mov
insb
jle
frstor
cmp
and
mov
or
cmp
mov
fxtract
mov
leave
cmp
ja
or
mov
adc
aad
lret
test
inc
or
out
and
mov
pop
sub
xchg
cmp
fists
mov
sbb
jecxz
movsb
popf
mov
lds
fistpl
inc
pop
aad
lods
add
xchg
testb
push
lock
leave
lods
xor
test
pop
outsb
andl
mov
shll
shlb
mov
and
dec
out
inc
nop
mov
int3
jg
sub
cli
add
adc
inc
ljmp
popa
fcoml
xor
mov
pop
lock
stos
add
mov
sti
dec
jp
int3
testl
push
jbe
fstl
incl
call
pop
adc
test
jle
xchg
int3
xor
popa
mov
sbb
mov
xchg
xchg
sti
lcall
adc
cmp
in
out
or
lahf
hlt
xor
inc
fs
ret
and
outsl
inc
sti
cld
ret
lahf
inc
push
dec
pop
xchg
pop
lods
les
imul
fldcw
jge
jns
add
sbb
mov
jns
mov
cli
inc
flds
inc
loop
stc
dec
dec
cmp
cmp
xchg
dec
add
scas
ret
test
and
mov
add
sub
mov
add
jmp
pop
dec
les
and
loop
cwtl
adc
imull
add
xchg
call
xchg
mov
push
out
xchg
lods
outsl
lcall
test
or
ret
cmp
inc
dec
insl
sub
dec
mov
mov
dec
fucom
ja
xlat
cmpsl
lds
jge
mov
movsl
or
pop
mov
dec
sahf
jge
outsl
or
imul
aaa
shl
imul
ja
lcall
xchg
not
sarb
push
into
sub
sub
pop
xchg
adc
jmp
gs
out
add
data16
cltd
cli
or
or
loope
mov
pop
push
in
cmp
cmc
xchg
mov
add
or
pop
jle
es
fbld
js
lea
subb
sub
mov
pushf
adc
push
call
jmp
sbb
jnp,pt
repz
jp
push
imul
popl
stos
cwtl
pop
out
lea
push
jae
inc
fldl
sub
cld
loopne
mov
leave
cmp
dec
ret
xlat
or
pusha
mov
cmc
es
push
fbld
test
enter
xor
ss
das
orl
pop
insl
cmp
pop
mov
inc
lahf
sub
sbb
in
add
std
jnp
das
sbb
push
jo
cmp
jb
aaa
pop
not
xor
pop
das
cmc
dec
xor
xchg
iret
ret
cmp
xchg
push
pusha
lea
and
jno
adc
outsb
and
jb
aas
lock
fnsave
loop
jmp
loopne
data16
xlat
lret
sub
mov
sub
gs
je
mov
cmp
adc
outsl
outsb
fimuls
enter
xor
pop
lahf
xor
scas
mov
fdiv
test
mov
out
add
xchg
jnp
jle
jno,pt
jmp
or
rcll
pop
mov
lods
inc
aaa
test
jb
xorb
dec
shrl
bound
dec
fbld
sarb
sbb
add
cmp
jg
clc
rclb
dec
and
in
incl
test
imul
outsl
mov
push
je
insb
mov
cltd
xchg
add
aas
xchg
push
lods
test
imul
lods
and
mov
test
and
adcb
pop
jb
add
cld
inc
in
and
jl
mov
lods
iret
test
push
xchg
imul
push
leave
jecxz
in
daa
fcompl
std
jo
scas
testb
adc
mov
cmpsb
push
repnz
lret
push
scas
hlt
inc
push
insb
movsl
xor
fs
fwait
sbb
lds
lea
cmp
pop
push
std
js
cmpsl
call
push
sub
mov
fsubs
imul
scas
inc
xchg
sub
int
jmp
aas
xlat
xor
outsl
xor
push
sub
popa
ljmp
push
fldt
mull
repnz
add
or
adc
aas
es
and
add
cmp
jmp
jecxz
sub
xchg
push
xchg
jl
cli
add
into
pop
dec
rclb
mov
lods
arpl
or
insb
outsb
ljmp
cmp
sti
inc
lock
data16
in
test
mov
xchg
or
cmc
dec
inc
lods
sbb
fs
movsb
cmp
xchg
fdivrs
mov
jno
inc
or
jne
lods
negl
jnp
sub
or
xor
mov
adc
jp
sti
sub
cmpl
cmp
lahf
ret
cmp
in
xor
lock
xchg
push
inc
or
sub
test
nop
mov
cmp
xchg
dec
cmp
fisttpl
pop
xchg
add
mov
pusha
sub
xor
loope
xchg
ja
call
aas
mov
das
jns
mov
xor
xchg
push
bnd
fs
mov
push
stos
cmp
dec
imul
lods
movsb
inc
push
fcoml
fsub
add
addr16
mov
into
push
adc
std
imulb
sub
xchg
mov
jp
loopne
jmp
insb
sbb
mov
jge
lods
xchg
mov
lcall
mov
loopne
fistl
adcl
cmovae
fisubl
jmp
lahf
daa
mov
sti
fsubl
scas
daa
jnp
xor
xor
pop
lret
roll
aas
lret
dec
mov
mov
adc
pop
cmp
pop
add
incl
adc
push
pusha
mov
pushf
cmpsb
jl
add
repz
imul
and
aam
cmp
and
ficompl
ja
jae
dec
pop
insb
into
jb
iret
xor
xchg
aad
sbb
xchg
lret
aas
in
insl
loopne
dec
cmp
inc
mov
pushf
int3
and
push
pop
ficompl
jmp
xchg
add
cmp
pop
aaa
sbb
dec
push
pop
sub
mov
pusha
cmp
cld
rcrl
push
cmp
mov
ffreep
pop
aas
lret
loope
jp
jle
stos
fdivrl
sbb
shrb
sbb
mov
fldl
or
and
adc
les
lock
frstor
mov
cmp
adc
mov
bound
xchg
fidivs
push
sahf
pop
aam
jecxz
inc
in
xchg
in
jl
mov
pop
fistl
lock
out
insb
enter
push
jcxz
jno
insl
jecxz
xchg
pop
xor
sub
dec
out
clc
outsb
pushf
mov
enter
xor
pop
out
push
and
popf
mov
mov
rcr
sub
dec
mov
xchg
mov
lahf
stos
and
push
mov
and
int3
ja
dec
pop
dec
sti
xor
les
sub
pop
push
and
lret
test
inc
into
pusha
ja
xchg
mov
addr16
mov
cmp
loop
xor
addb
fisubrs
es
and
fdivrs
popa
jmp
sbb
push
fdiv
mov
insl
ds
mov
mov
mul
outsb
xor
mov
sub
sub
lds
in
cmp
filds
jmp
jae
insl
divl
imulb
test
mov
jne,pt
mov
xchg
inc
push
inc
stc
mov
inc
sbb
xchg
inc
pop
push
inc
es
jp
lds
pop
in
xchg
ficompl
cmp
repz
sub
sbb
sbb
and
aas
aas
int
movsb
adc
shl
pop
fcmovnu
mov
ljmp
inc
xchg
mov
dec
mov
stc
sub
sub
mov
inc
imulb
ret
lock
scas
mov
pushf
mov
pop
jge
dec
in
movsb
addr16
ss
stos
movsl
lahf
push
adc
jl
push
cmp
pusha
mov
pop
leave
mov
data16
push
pop
mov
dec
int
push
mov
push
mov
push
outsb
ja
xchg
mov
add
cmp
nop
cmp
in
cmpsl
inc
mov
lret
arpl
test
shrl
mov
mov
jbe
cmp
shr
mov
push
or
jb
pop
icebp
test
rcll
dec
out
jle
and
popf
jns
rorb
push
loop
jo
xchg
xchg
scas
sub
adc
lcall
cwtl
inc
jge
cmpsl
sbb
std
sbb
fldl
push
mov
push
pop
jno
cmp
in
mov
jo
xchg
orl
mov
push
pusha
aaa
xchg
in
mov
outsb
lods
inc
movsl
arpl
sub
or
ljmp
pop
lock
lods
lods
mov
gs
int3
arpl
push
ljmp
xor
and
cmp
insl
mov
pushf
in
inc
mov
sbb
cmp
cmp
aad
popf
jg
adc
mov
add
pop
ljmp
push
or
lcall
lret
add
sub
add
xchg
push
xchg
popa
nop
sub
mov
shll
cwtl
adc
in
lds
xor
inc
cmp
jb
dec
popa
xchg
pushf
repz
mov
movsl
push
push
sbbl
xchg
in
mov
aad
or
mov
add
addl
mov
cmp
iret
jnp
mov
cmpsl
push
pop
ss
mov
fdivs
or
aam
stos
add
inc
outsb
add
xchg
xchg
dec
pushf
jno
jnp
movsb
xchg
gs
pop
loopne
inc
aam
mov
bound
out
add
jb
ret
xchg
mov
sub
cmp
in
inc
push
pop
inc
fwait
dec
add
cli
test
imul
push
lock
clc
aas
repz
mov
pop
jns
in
aad
das
push
outsb
mov
popf
jnp
fimuls
ret
xor
loop
cs
mov
cli
pushf
dec
mov
ljmp
adc
jp
mov
mov
sahf
fdivl
push
sub
imul
dec
mov
lds
loope
inc
clc
cmc
mov
pusha
jbe
xor
jbe
add
pop
push
sahf
lods
andb
shr
or
jae
sbb
ja
inc
popf
push
cmpsb
ss
and
jp
cmpb
inc
loop
xor
dec
out
inc
pop
popf
jp
xchg
loopne
cltd
jo
and
ljmp
mov
not
std
sub
andl
mov
js
out
push
dec
fcmovne
hlt
sub
sbb
aam
push
add
add
cmp
sub
dec
aas
out
jnp
popf
loope
bound
ja
sbb
pop
dec
repz
fwait
jne
jg
pushf
imul
sahf
das
clc
push
fucomip
xor
xor
dec
pop
out
xchg
movsb
adc
push
fs
adc
sarl
inc
lea
jo
fnsave
jle
aaa
pop
fisubrl
mov
push
bound
cli
in
jl
fimull
sbb
jl
cmpsl
ret
sbb
sbbl
jl
ss
sub
push
icebp
lods
jns
daa
pop
imul
cmp
push
cmp
aam
orl
adc
push
rclb
add
adc
negl
fxch
add
mov
shrl
dec
lods
mov
cmp
cmp
xchg
xchg
add
pop
push
lcall
out
adc
aas
mov
push
call
and
aad
push
outsl
jl
mov
jl
push
in
sub
imulb
out
mov
pop
mov
push
ja
cmpsb
mov
cmc
sti
cmpsl
arpl
adc
loop
bound
int
jne
mov
iret
loope
push
ret
lahf
pop
test
dec
xchg
mov
leave
es
insl
inc
test
clc
mov
add
dec
lcall
and
daa
mov
outsb
sub
push
mov
mov
addr16
inc
fistl
sbb
inc
enter
movsb
pop
out
sub
scas
les
jo
cmp
adcl
xchg
xchg
ljmp
rcrl
enter
sbb
es
cmp
mov
pop
sbb
dec
and
psrlq
adc
xchg
fs
add
push
xorb
jns
sbb
jg
loop
adcb
imul
push
imul
fimull
movsl
andnps
rcrl
leave
int
mov
aas
push
sub
push
jns
adc
scas
jle
pushf
pusha
rorb
jb
push
sub
fs
sbb
push
jle
sub
xchg
pop
fsts
add
aaa
addr16
add
insl
call
or
out
repnz
xor
sti
jmp
sbb
sub
xor
test
mov
fbstp
mov
jbe
push
mov
popa
out
adc
push
pushw
imul
mov
fldcw
notb
popf
fidivrl
sub
jmp
cmp
repnz
add
sti
and
or
xchg
sti
or
xchg
adcl
in
inc
bound
icebp
sbb
lea
mov
xchg
das
movb
stc
adc
sbb
sarb
cltd
test
mov
jmp
pop
daa
push
pop
je
add
subl
pop
loope
je
sub
loop
jmp
imul
xchg
xchg
ret
jae
aas
sub
imul
sahf
sbb
leave
cmpsl
clc
insb
lods
mov
popa
int
fs
sub
pusha
mov
sub
sbb
out
and
and
scas
and
mov
icebp
adc
insb
lcall
or
or
pop
mov
lock
jne
lea
aam
pop
and
nop
xchg
insl
test
ja
add
mov
ret
push
leave
add
mov
lret
lea
push
nop
aad
daa
sti
lret
mov
in
mov
xchg
jle
ret
out
jne
push
rcrl
and
jne
push
mov
push
std
jmp
fsubrs
add
mov
out
insb
cmp
lret
adcl
xor
in
jo
jno
mov
fcmovbe
ret
repnz
ja
fadds
jne
cli
sbb
mov
pop
xchg
into
int
stc
or
ss
lods
mov
fdivrp
xchg
add
dec
mov
addr16
inc
popf
sbb
push
jp
mov
stc
cmpsb
xlat
push
frstor
scas
icebp
jo
adc
sti
cmc
pop
in
sbb
inc
clc
xchg
ss
mov
int
mov
lidtl
jbe
push
roll
jecxz
or
dec
imul
mov
cli
es
iret
push
insb
test
xor
lcall
in
or
js
xchg
cld
inc
sbb
xchg
cmp
jb
push
xlat
or
insb
push
scas
jle
sarb
jecxz
xor
inc
mov
popf
das
fcom
iret
les
sbbl
sti
scas
orb
shll
inc
xchg
psrlq
pop
sbb
enter
pushf
rorl
mov
outsb
push
mov
pop
iret
mov
mov
xchg
push
sub
hlt
imul
insb
adc
repnz
dec
data16
dec
mov
adc
in
aad
bound
sbb
sbb
jno
xor
add
out
sub
dec
arpl
sub
stos
sub
push
and
and
fldt
jmp
fsubrs
cmp
idivb
adc
push
bound
cmp
mov
mov
fldenv
xor
into
iret
lock
jae
xchg
inc
lcall
inc
arpl
ret
scas
inc
cmc
sub
mov
in
xlat
cmc
movsb
lea
insb
or
test
mov
in
insl
xchg
mov
fisubrs
sbb
test
add
cli
cmpb
loop
xor
jne
add
ljmp
adc
sub
clc
sub
mov
xchg
sarb
push
shrb
push
repz
mov
repz
or
cmp
dec
pusha
movsb
fcmovnbe
inc
loopne
adc
cwtl
lcall
jle
jbe
push
imul
pop
rcrl
aaa
leave
int
es
iret
hlt
jo
inc
movsb
or
jge
pusha
arpl
int
sbb
push
stos
jbe
add
movsl
aaa
add
inc
push
test
mov
lret
sti
jno
sbb
lods
dec
movsb
mov
or
sbb
jge
jno
pushf
mov
movsb
aaa
clc
test
int3
sbb
ds
lods
pop
xor
add
into
xor
jg
add
sub
insl
lahf
add
lds
mov
sarb
lret
and
or
arpl
aas
imul
dec
std
mov
xor
aam
fiadds
mov
gs
cwtl
sub
rorb
fidivs
lret
xchg
pop
jae
je
adc
sbb
notl
or
jge
pop
adcb
cmp
addr16
pop
push
icebp
mov
jmp
push
popa
cmpl
and
cmpsl
push
xchg
jnp
je
cmpsb
sbbl
sbb
add
fs
xchg
adc
dec
pop
lcall
enter
pop
mov
cmpsl
inc
push
pop
outsl
shll
inc
out
ja
and
inc
fisubl
lods
inc
xchg
mov
lret
sbb
adc
and
fbld
clc
sub
inc
mov
inc
outsb
sbb
adc
dec
dec
addr16
xor
cwtl
ja
dec
cwtl
mov
jns
jns
mov
stc
ljmp
sbb
dec
loopne
adc
rol
mov
loop
sub
cld
and
das
mov
mov
mov
fisubs
adcb
icebp
int
hlt
divb
flds
sub
insl
pop
sahf
lods
cmp
loopne
push
push
js
sub
das
ljmp
mov
push
out
pop
call
in
fidivl
mov
icebp
inc
pop
fucomip
push
sbb
xchg
cwtl
test
arpl
int3
int
stc
nop
cli
jmp
and
lcall
shlb
cmc
test
adc
movsl
xchg
out
nop
and
sub
test
mov
fcompl
adc
mov
push
movsl
imull
sbb
lods
jne
cmpsl
and
adc
setno
mov
xor
loopne
shll
inc
data16
jle
push
test
popf
je
les
mov
adc
ret
cmp
and
ja
and
jnp
cmp
inc
shrb
loop
lea
fsub
and
pusha
mov
sbbl
jnp
or
lods
dec
adc
sub
mov
fs
lods
call
xchg
push
in
lcall
daa
movsl
bound
dec
daa
mov
xor
inc
jmp
push
push
jle
pop
mov
and
jp
test
pop
xor
imul
fcoml
ss
xor
jl
jge
xchg
sahf
insb
mov
loope
push
sub
repz
sub
popa
int
push
lret
pushl
dec
and
push
sub
ret
push
leave
cmp
mov
mov
add
mov
sbb
ds
cmp
stos
add
add
pop
cld
push
cmp
in
fisubrl
cwtl
or
cmp
scas
fwait
cmp
aad
mov
mov
lcall
lret
cmp
adc
and
mov
mov
pop
sbb
fst
lds
push
sub
orb
in
mov
xor
sub
inc
xchg
jb
leave
addr16
mov
push
in
sub
mov
xlat
jnp
pop
leave
insl
xor
adc
out
push
adc
or
mov
mov
inc
fsubrl
fidivrs
xlat
xorb
push
cmpsl
scas
inc
enter
add
push
insl
rclb
xor
dec
dec
testb
cmp
mov
out
dec
sarb
lea
add
shll
fimull
repz
push
fidivs
sub
mov
push
mov
cmp
inc
incl
ja
xchg
ja
adc
sbb
das
mov
and
test
mov
ds
push
or
es
mov
ljmp
sub
push
mov
ficompl
mov
push
rol
fcoml
leave
pop
dec
push
mov
inc
and
aad
loope
push
push
fmuls
pop
ret
mov
xor
inc
pop
or
ljmp
sbbb
inc
imul
sbb
adc
sub
es
dec
mov
scas
jae
aam
jp
and
inc
or
movsl
cmp
and
jp
dec
jmp
testl
mov
cmp
scas
cmc
pop
dec
pop
insb
sbb
scas
or
dec
pop
shll
mov
aam
je
sub
arpl
push
call
lods
inc
or
mov
push
mov
mov
popf
divb
and
iret
rorl
enter
push
inc
pop
inc
cld
into
sti
xor
cwtl
test
lock
jle
pop
fwait
cld
mov
cmp
xor
ss
test
lods
inc
or
rcrl
lahf
lret
jb
fsubrl
insl
pop
add
cmpsl
in
mov
xchg
xor
mov
rolb
roll
jno
inc
pop
ja
mov
mov
add
enter
bound
mov
enter
ljmp
jp
or
rol
decl
cmp
fs
cwtl
mov
and
sbb
or
ret
xchg
dec
and
test
das
addr16
sahf
sub
sbb
imul
mov
push
rolb
fsqrt
hlt
shrb
fldcw
dec
or
jle
mov
add
js
cwtl
and
dec
ljmp
and
aad
adc
cmp
pop
cmp
adc
rorb
iret
xlat
push
push
insl
addl
push
test
or
aad
mov
pop
mov
cmc
hlt
int
or
aaa
popf
xchg
xor
cmp
mov
aam
fists
in
xchg
jne
das
test
xchg
jno
mov
mov
arpl
pop
insl
jecxz
addl
xor
js
inc
fdivr
xchg
fiadds
xor
jmp
scas
and
mov
mov
call
cmp
cmp
adc
jo
pop
roll
xchg
add
pop
les
pop
loope
mov
enter
inc
push
mov
lahf
mov
js
cmp
testb
ss
negb
add
push
imul
and
lahf
xor
movsl
test
push
mov
sbb
inc
fldcw
ret
daa
in
loope
push
sar
or
mov
pop
ja
leave
pop
jne
int
xchg
xchg
ffreep
fidivs
insb
loop
push
inc
mov
aam
stc
or
out
mov
pop
out
sbb
mov
fisttps
mov
fs
cmpsl
pop
adc
sub
xchg
inc
lods
and
insl
loope
cmp
mov
loopne
cmc
cmc
pop
fidivrs
call
xlat
xchg
sub
test
fsubp
cmp
outsb
lods
sbb
and
dec
sub
in
aam
scas
or
sbb
test
sbbb
mov
mov
rclb
rcl
fisubrl
add
pop
push
in
cmp
xchg
push
dec
mov
in
add
les
jbe
xchg
pop
and
vmulpd
mov
sti
mov
in
xchg
mov
mov
and
inc
fidivrs
lretw
push
jmp
xchg
call
enter
scas
cmp
and
outsl
xlat
mov
xchg
ljmp
rcll
cli
jo
xchg
scas
outsb
adc
cmp
jl
mov
mov
xchg
inc
ljmp
out
xchg
mov
lret
test
subb
adc
push
and
xorb
mov
push
add
out
and
mov
sbb
mov
aaa
rcrl
add
fmulp
lret
nop
push
push
inc
jl
mov
dec
xor
hlt
ja
inc
aaa
mov
cmpsb
mov
sub
loope
add
std
out
sbb
lahf
lock
push
ss
test
adc
add
in
ss
inc
or
mov
xor
std
repnz
rclb
sbb
in
leave
xor
or
sbbb
lcall
bound
dec
rolb
inc
dec
repz
fs
cmp
or
cmp
and
int
pop
bound
push
xchg
and
lods
xchg
xor
rorl
pop
popf
pushf
repz
pushf
mov
ret
sti
les
adc
in
cmpsl
cwtl
mov
ja
stos
cmc
std
aad
mov
jns
outsb
rolb
cltd
or
xchg
ja
cmc
int
aas
cmp
dec
lock
xchg
arpl
test
shl
xchg
lea
lret
bound
add
xchg
out
lahf
jecxz
movsb
cmp
pop
jg
into
cli
gs
das
outsb
jb
and
sub
out
outsb
repnz
push
jne
xlat
xor
fisubs
sahf
jecxz
sbb
addr16
mov
sub
js
fstl
dec
mov
sub
pop
jo
insb
sub
pop
out
int3
lret
cmp
push
popa
xor
mov
cmpsl
nop
jb
lcall
inc
sti
inc
inc
mov
lcall
push
pop
cmpsb
dec
push
mov
rolb
jle
mov
sub
pop
insl
adc
imul
push
mov
adc
mov
mul
jge
xchg
fstpt
push
pop
lock
pusha
lret
cmpsl
icebp
or
aam
mov
add
ja
mov
cwtl
pop
in
mov
pop
xchg
inc
sbb
dec
mov
hlt
mov
mov
or
adcl
inc
push
daa
cld
iret
or
lcall
mov
inc
or
cli
insb
outsb
jb
sub
xchg
add
or
jb
sub
lock
pop
fxam
dec
dec
negl
mov
sub
iret
pop
mov
rorb
add
xchg
mov
das
push
fld
lcall
sub
xchg
mov
out
addr16
stos
gs
push
inc
clc
push
andl
inc
push
inc
in
push
iret
test
adc
ret
pop
mov
mov
mov
inc
xor
hlt
icebp
daa
int3
lret
es
cmp
test
dec
out
add
jle
inc
cmp
jo
lea
inc
sahf
fs
pop
jle
sbb
xchg
pop
pop
lahf
nop
jbe
xchg
xchg
clc
mov
sbb
mov
push
lods
pandn
iret
cmpsb
xchg
shlb
adc
mov
ds
aad
push
push
daa
lcall
lcall
xchg
mov
imul
call
fwait
dec
mov
adc
adc
pop
pusha
orb
dec
psllw
out
dec
leave
pop
imul
dec
lods
pop
jns
sbb
insl
inc
in
cli
jp
ret
mov
jmp
test
outsb
aad
mov
or
xchg
or
mov
hlt
jae
es
shld
mov
ja
sub
inc
sbbl
aaa
outsl
icebp
adc
dec
imul
or
int3
jp
or
dec
pop
test
add
cmc
out
and
test
dec
ror
lcall
or
cs
push
ljmp
mov
pop
in
call
adc
imul
fucom
popl
ja
pushf
adc
mov
inc
aas
aam
xchg
mov
fwait
inc
mov
xchg
push
push
adc
iret
push
mov
rorb
jp
sbb
pusha
mov
jo
ss
jge
or
cmc
add
mov
outsl
xrstors
nop
add
sub
mov
out
mov
arpl
mov
inc
bound
iret
mov
fidivs
lahf
inc
fadds
add
sbb
ret
cmpb
bound
inc
pop
repnz
jns
xchg
xchg
mov
sbb
imul
cmp
or
xchg
and
rcrl
dec
mov
and
pop
lods
lcall
aas
out
aad
xchg
sub
iret
cmp
shl
sbb
mov
add
stos
mov
mov
or
xchg
sub
shrd
jae
jmp
sbb
cmp
jg
lahf
cs
and
popf
pop
fnstenv
fucomip
lahf
sub
inc
fucomip
jae
xor
js
inc
push
mov
xchg
cmpsb
and
repnz
sbb
ret
rcll
outsb
repnz
pop
and
outsb
sub
imul
xchg
pop
mov
jae
inc
push
mov
test
jle
out
jbe
push
xchg
push
push
sub
xchg
mov
adc
cmc
jne
lcall
mov
jg
pop
and
jg
mov
sbb
pop
inc
cmp
dec
add
xchg
in
enter
outsl
mov
push
mov
xlat
pop
or
or
mov
out
test
dec
fs
and
ret
out
jle
sub
cld
mov
mov
sbb
push
jo
add
sbb
sarl
jmp
js
hlt
or
xchg
lds
pop
daa
mov
data16
mov
lock
pop
fistl
fistpll
pop
dec
or
or
cmp
pop
push
std
jl
and
les
cli
shr
mov
loope
out
inc
xchg
jbe,pn
es
push
add
les
pop
or
adc
insl
aam
lahf
mov
nop
sub
test
jne
lret
lret
mov
xchg
aas
add
xchg
clc
adc
jg
hlt
negb
adc
rcrb
pop
mov
pop
out
cmp
sbb
in
mov
mov
int
adc
inc
or
sub
xor
arpl
movsl
adc
aaa
ficompl
pop
add
cmp
cmpl
cs
sbb
add
fdivl
mov
pop
aad
sbb
xor
jge
xchg
aam
mov
outsl
data16
cmp
decl
pushf
pop
xchg
enter
add
mov
testb
push
inc
jl
push
call
xchg
pshufw
mov
sub
mov
jo
adc
nop
shll
popf
push
aad
lea
mov
je
dec
jg
jg
cmp
pop
insl
ja
sbb
xor
mov
movsl
dec
dec
nop
stc
nop
push
loopne
cmp
sbb
shl
mov
mov
dec
dec
push
cmpsl
sarb
icebp
enter
jecxz
pop
dec
or
sbb
inc
xchg
test
call
xor
popf
data16
pushf
or
mov
test
mov
sub
mov
iret
out
cli
shlb
aam
std
inc
divb
cltd
ljmp
pop
lock
mov
dec
xor
mov
and
inc
les
and
push
push
in
in
xor
sbb
repnz
mov
aam
push
ret
dec
pop
in
xor
iret
repz
mov
pop
test
mov
push
mov
loopne
xlat
cmp
mov
push
xor
xchg
cmc
adc
mov
xlat
outsb
adc
adc
es
das
mov
fnstenv
adc
push
adc
xor
adc
mov
scas
add
xchg
in
add
popf
int3
dec
in
stos
adc
or
mov
fcomip
cmp
pop
add
call
outsb
add
insb
cmp
outsl
push
cmp
mov
xchg
fstps
xchg
jae
in
or
outsb
fnsave
mov
adc
push
adc
out
inc
xchg
jno
cld
fidivrl
enter
xor
pop
pop
addr16
dec
sub
cmp
adc
test
ja
xchg
cmp
sbb
xor
and
xor
test
daa
push
mov
pop
mov
adc
push
sarb
shrl
out
xor
fsubs
test
pop
repnz
jns
jecxz
mov
sahf
stos
xor
mov
mov
out
lret
aaa
pop
daa
outsl
ret
mov
mov
and
inc
and
jb
mov
jbe
lcall
mov
push
push
outsb
lret
lret
pop
cltd
sti
push
inc
out
ret
push
dec
cmp
adc
xor
adc
xor
pusha
mov
sbb
into
xchg
mov
cmpl
jle
mov
out
xor
mov
enter
jno
and
out
leavew
mov
in
sbb
jge
data16
jbe
sahf
ljmp
mov
sbb
aas
mov
and
test
push
jp
out
fistl
cmpsl
or
jo
xchg
sub
jp
loop
or
xchg
movsb
xchg
xor
popf
cmp
movsl
cmp
out
movsl
aas
js
jno
fcomi
jbe
xchg
sub
adc
daa
inc
in
and
ret
inc
push
ljmp
arpl
outsb
and
sbb
imul
insl
shl
cmp
imul
std
mov
mov
sbb
outsb
push
and
pusha
scas
shll
push
gs
and
je
cmp
aaa
jmp
mov
jl
xchg
or
mov
pop
sti
sbb
xchg
mov
fcoms
add
push
cltd
cmp
push
or
inc
sti
jbe
shl
xchg
dec
in
es
inc
and
inc
fldt
inc
cmc
andl
imul
stos
lock
adc
popa
outsb
adc
inc
pop
sub
add
jl
popa
push
pop
dec
roll
je
ret
stos
push
sbb
sub
xlat
mov
std
pushf
mov
lods
pop
jnp
call
inc
jne
jae
xchg
xor
push
push
sub
testl
lahf
cmp
dec
sub
es
jp
fbstp
push
sahf
xchg
ret
outsl
daa
outsl
sar
addb
icebp
call
int3
adc
xchg
repz
gs
rcrl
cld
push
loope
cmpb
gs
lahf
rcrl
push
movsl
dec
call
sub
movsb
inc
mov
fcmovnu
jl
loopne
sti
ss
mov
push
xchg
mov
cmp
xor
bound
fldenv
pop
test
pop
repnz
jno
mov
mov
das
popa
jle
sub
enter
xor
shrb
push
aad
jnp
adc
std
or
aas
cmp
push
jmp
adc
inc
push
dec
in
dec
cltd
mov
jecxz
test
mov
add
xchg
xor
fisubl
fistpll
imul
mov
sbb
mov
or
divl
insb
ljmp
cld
addl
dec
hlt
notl
ds
test
andnps
xchg
xor
fs
sbb
rcrl
push
pop
jge
mov
xchg
cltd
test
subb
lahf
cmp
punpckhwd
xor
dec
js
dec
mov
mov
or
xchg
ret
ja
cld
dec
mov
popa
pop
cmp
mov
jnp
inc
std
outsl
adc
xlat
lcall
mov
push
adc
push
cmpsl
push
sub
stos
rcl
repz
mov
and
dec
lcall
cmp
mov
or
jno
popf
sbb
mov
dec
push
jecxz
push
mov
fisttpl
mov
out
es
fisubs
test
in
pushf
mov
push
out
mov
cvttps2dq
push
or
or
add
dec
inc
rorl
inc
test
std
adc
lock
or
push
sub
out
xor
movsl
repnz
inc
dec
mov
jne
or
test
and
push
sbbl
lret
jno
sub
push
cwtl
dec
dec
dec
insl
cmp
sarl
push
ja
pop
in
cwtl
xchg
sub
std
jo
inc
sub
sahf
pop
addr16
dec
push
mulb
cltd
mov
out
xor
mov
out
test
subb
add
mov
xchg
xchg
test
popa
imul
xor
xor
filds
mov
adc
and
mov
cld
add
cmp
push
xchg
adc
hlt
cltd
add
outsb
jg
imul
ds
cmp
mov
or
sub
dec
adc
aad
test
add
pop
pop
pextrw
sbb
lea
jle
xchg
and
mov
dec
leave
clc
mov
ljmp
idivb
sub
faddl
into
dec
loopne
xchg
fnstcw
mov
sbb
xor
insb
cmpsl
pusha
add
fnstenv
ret
sbb
sbb
out
or
cmpb
adc
pop
sub
hlt
test
daa
aam
loopne
int
pop
pushl
sbb
and
push
leave
nop
sub
rcrl
mov
pop
add
fstpt
jns
push
push
sub
pop
cmp
and
shlb
rcll
fs
dec
int
int3
xchg
mov
xchg
cmp
test
pop
lret
out
icebp
test
mov
or
dec
popf
cmpsl
popf
dec
test
jnp
scas
adc
xchg
jbe
dec
xchg
outsl
push
decl
push
jae
lea
leave
mov
jno
pop
xor
xchg
shrb
lahf
cmp
sbb
push
lret
nop
out
push
movsb
or
pop
cmp
sub
sub
lds
fimuls
push
mov
cmpsb
notl
sub
cmp
add
je
mov
fs
push
push
into
das
movsl
cmp
sbb
xchg
mov
sbb
jae
mov
cmc
jns
xchg
adc
lcall
pop
lahf
sbb
adcb
jecxz
pushf
popa
mov
mov
jae
pop
lock
sahf
add
add
test
jno
jne
mov
mov
insl
jge
mov
mov
clc
adc
pop
imul
fwait
sub
or
pop
movl
pop
ljmp
push
idivb
cwtl
jmp
inc
push
push
jecxz
mov
inc
out
loope
out
ljmp
push
orb
or
add
cmc
cwtl
adc
mov
fidivl
arpl
lahf
jecxz
rol
pop
dec
cmp
or
mov
shll
fisttpll
and
sub
fstps
adc
adc
call
xchg
xchg
outsl
add
mov
cmpsb
popa
inc
pop
sub
cwtl
out
xor
lea
mov
iret
xchg
sbb
data16
push
adc
inc
add
sbb
outsl
scas
mov
subb
mov
push
outsl
and
cld
sbb
out
and
and
jnp
lahf
or
loop
sbb
inc
xorl
add
add
adc
jne
nopl
add
xchg
xor
ja
scas
test
add
jg
ficomps
lea
lcall
in
ljmp
mov
mov
xor
in
xor
xor
imul
clc
mov
or
mov
sarb
mov
and
mov
mov
pushf
or
sub
cmp
or
ds
mov
fld
in
sub
sbb
jmp
imul
repnz
mull
add
pop
scas
aas
xchg
and
repz
sbb
mov
ja
jp
adc
in
das
scas
add
aad
scas
pop
loope
or
lcall
mov
arpl
jmp
cs
cltd
sbb
daa
inc
push
or
and
aaa
push
imul
lock
imul
push
in
mov
push
mov
xchg
ljmp
mov
mov
bnd
jb
jmp
aas
add
test
push
pop
push
pushf
push
dec
add
and
shlb
fdivl
popf
into
mov
imul
cmp
in
addr16
filds
sbbl
iret
add
es
cmp
fdivrl
loop
dec
jl
ljmp
push
lcall
cwtl
push
mov
pop
ficomps
push
adc
stos
sbbl
gs
lahf
dec
jmp
loop
loop
cmp
xchg
fcmovnu
xchg
loope
jnp
sub
mov
rclb
push
dec
inc
popa
push
and
insb
fidivl
xor
push
movsb
enter
or
in
mov
sbb
filds
imul
iret
fsubrs
sub
mov
insb
jno
lcall
pop
jl
call
add
sbb
mov
push
sbbb
icebp
mov
sub
sbb
movsb
in
arpl
les
ret
insl
shll
dec
loop
out
add
test
lcall
pop
mov
inc
adc
ljmp
cmp
pop
scas
sub
push
pop
sti
ret
push
pushf
mov
pop
xchg
pop
jbe
leave
orl
fwait
sbb
mov
call
dec
pop
jp
sub
jns
mov
imul
aam
repnz
xchg
cmp
fsubrs
cmp
mov
and
scas
out
lcall
push
lahf
psllw
aaa
push
adc
pop
add
mov
jge
push
imul
cwtl
inc
orb
and
dec
pop
jbe
nop
pop
lock
aaa
or
aad
call
pusha
lds
data16
mov
test
adc
test
inc
pop
push
mov
cwtl
rorl
adc
ja
aad
pop
stos
jmp
jae
pushf
pop
scas
outsb
lea
cltd
dec
cmp
in
add
lcallw
testb
js
lods
pop
or
shrb
push
mov
adc
icebp
mov
sub
fwait
jl
and
mov
jne
jo,pn
add
jbe
lret
mov
dec
or
aad
fst
insl
stc
or
sub
jmp
scas
jb
test
imul
xor
add
xchg
push
adc
mov
sub
adc
xchg
in
dec
imul
dec
mov
cmpsb
pop
jl
shll
xor
fisubs
xchg
inc
jmp
fbstp
sub
push
inc
jnp
adc
dec
xor
loope
outsb
gs
lahf
xchg
int
out
dec
dec
scas
add
xchg
andps
mov
ret
lock
movsb
shll
loop
rcrl
add
jb
jle
cwtl
and
dec
inc
in
push
rorl
or
sub
iret
test
pop
rclb
xchg
aaa
mov
fidivrl
inc
sub
adcb
pushf
push
aas
into
mov
rcll
jno
push
shll
and
fs
inc
add
cmpsl
out
mov
mov
mov
inc
push
call
sbb
sub
lret
rclb
test
sbb
aam
std
enter
sarb
mov
test
jp
cmpsb
lock
adc
xchg
xor
dec
mov
gs
outsl
sbb
rcrb
add
aam
cli
xchg
push
sub
cmp
mov
or
mov
mov
dec
dec
push
scas
in
push
sub
inc
cmc
mov
das
adc
pusha
xorb
pop
cmp
sub
xchg
aaa
into
mov
push
rcrl
shlb
ret
out
xor
mov
jg
sti
add
sarb
into
jmp
aas
into
aas
mov
jb
push
roll
jne
or
pop
dec
dec
adc
mov
jbe
xlat
inc
loopne
lret
push
out
push
fdivl
cwtl
repnz
ret
mov
jno
jge
ret
mov
cld
xchg
push
xor
movzwl
fsts
ds
lods
test
dec
fcompp
mov
sub
jae
xor
cmp
shlb
ja
cmp
int
rcl
mov
pop
stos
sub
rol
xor
lds
push
in
xchg
dec
cli
cmp
popf
stos
cwtl
fdivrl
push
out
push
mov
pop
xchg
and
cltd
pop
sahf
lret
add
inc
push
in
dec
add
xor
sbbb
lret
rol
out
xor
and
fisttps
std
and
adc
popa
xchg
xor
jbe
cmp
fnstenv
xchg
enter
not
fmull
cmpsl
cld
inc
mov
sti
repz
push
js
xor
addr16
inc
cwtl
sahf
xchg
ja
mov
jmp
sub
mull
gs
bound
iret
mov
std
mov
push
test
fsubl
sbb
in
add
fmull
es
push
pop
repz
xor
pop
mov
push
stos
lods
xchg
repz
pop
add
xchg
cmpsl
ret
stos
mov
lahf
push
ret
xlat
hlt
fldl
and
repnz
int
aam
nop
or
inc
daa
in
frstpm(287
inc
call
ja
ljmp
out
and
lods
sub
mov
pop
ljmp
jns
push
in
out
lods
pop
aam
je
scas
adcb
dec
xor
and
inc
out
jmp
inc
ret
dec
out
mov
loopne
gs
test
inc
nop
jmp
xorb
jmp
cmpsb
jle
or
aad
sbb
daa
je
push
or
cld
test
mov
inc
std
pop
ljmp
out
ret
divl
addr16
sbb
or
filds
lods
xor
push
insb
fists
lea
shrl
mov
and
xchg
sbb
in
stos
aaa
stos
dec
in
fsubl
fisubrs
lret
push
jno
push
or
leave
dec
mov
adc
sbb
insb
lcall
ds
cmp
mov
push
jbe
mov
leave
std
loopne
dec
lahf
lea
rcl
jl
int3
xchg
xchg
mov
in
adc
leave
loopne
fisubl
popa
js
sbb
mov
or
dec
sbb
sarb
sti
outsb
aad
les
nop
xor
pop
dec
repz
cli
fmuls
push
cmpb
ss
sbb
xchg
pop
cltd
pushf
divb
mov
jne
inc
pop
lcall
xor
push
into
orl
outsl
jne
push
mov
hlt
jg
mov
idivl
xor
cmp
cmp
mov
scas
std
mov
push
cli
inc
push
sub
flds
mov
and
lea
and
test
pop
arpl
cmp
mov
jmp
or
mov
fistpll
adc
adc
cmpl
xor
cmp
sbb
inc
xchg
cmp
mov
cmp
in
popa
in
sar
out
lock
mov
popa
scas
jne
fcomps
push
inc
inc
fimull
and
inc
sbb
or
insl
outsb
rorl
mov
popa
fsubl
rcr
inc
push
mov
mov
push
push
xor
adcb
inc
je
ja
fwait
scas
inc
push
or
and
or
dec
pop
je
xor
cmc
movsb
repnz
push
in
out
mov
je
inc
xchg
xchg
dec
or
xchg
lock
jns
popf
test
jmp
mov
scas
jl
fcomps
push
jo
lds
cwtl
sub
and
lds
mov
cmp
jmp
mov
popf
jo
adc
sbbl
add
xchg
fcompl
or
es
mov
mov
js
push
in
or
or
sub
ret
xchg
sub
out
ss
daa
mov
icebp
fs
cltd
fs
int
or
mov
ljmp
enter
or
pusha
add
mov
mov
nop
pop
mov
or
pop
adc
jb
add
mov
cmpsb
pop
fnstenv
sbb
fistps
xchg
adc
mov
xchg
jne
sti
xchg
mov
js
cmp
lcall
hlt
mov
fs
add
aam
outsl
sar
frstor
lret
add
cwtl
push
pushf
pop
inc
lods
mov
imul
mov
out
cmpsl
nop
mov
aad
lds
adc
cs
mov
sub
inc
push
xlat
jmp
mov
popf
xor
mov
out
fldenv
fmulp
mov
sahf
jle
in
push
rcrb
cmp
addb
add
leave
xchg
pop
push
pop
push
sub
into
sbb
test
dec
js
out
ss
ret
ret
pop
inc
imull
outsb
or
repz
mov
adc
popa
fldenv
dec
lods
mov
inc
faddp
clc
pop
ds
imul
sti
jg
les
lds
lret
loope
cmp
mov
ljmp
or
movsl
out
iret
ja
lods
ljmp
sarl
aas
jg
inc
shr
or
aad
jnp
sbb
outsl
mov
adc
pop
or
int3
inc
outsb
xchg
mov
and
jp
inc
xchg
mov
sbb
fbstp
jge
test
loop
int3
fcoms
pushf
and
inc
insl
fiadds
in
jo
xlat
sub
push
lods
jmp
cmpl
fcompl
inc
adc
adc
mov
fistl
sbb
scas
sub
jb
add
or
stos
sbb
aas
jb
xorb
stos
in
out
cmc
dec
notb
push
pushf
push
dec
pop
and
xor
mov
push
call
sub
negl
sti
sub
cmpsb
movsb
cmp
xchg
fimuls
pop
aas
cli
inc
push
mov
fdivrs
outsb
sub
sub
pop
imul
push
or
test
lcall
xchg
cmp
inc
inc
mov
inc
push
mov
push
or
add
sbb
jnp
sub
xor
ljmp
push
mov
pop
mov
xlat
loop
lods
rcr
jl
mov
add
and
and
push
cld
jle
stos
sub
xchg
add
cmp
and
inc
add
pop
xor
xor
fildll
xchg
push
inc
nop
lods
dec
xor
repz
ds
pushf
arpl
ds
xor
dec
dec
cmp
scas
call
scas
out
or
push
mov
adc
jp
add
pop
xchg
jb
shl
cli
pushf
add
ljmp
jg
lds
popa
cmp
adc
mov
lea
mov
xchg
xchg
jo
stos
fimull
add
cs
jbe
fwait
and
in
fsts
xchg
push
dec
mov
mull
cmp
xlat
ljmp
pop
cmpsb
push
pop
rolb
aaa
fs
xor
dec
rorl
add
shr
mov
sbb
fdivs
jl
stos
sbb
pop
mov
das
test
fldt
in
divl
dec
or
loope
mov
xchg
xchg
mov
iret
jae
adc
in
insl
add
mov
mov
std
mulb
jge
jle
mov
or
add
outsb
add
push
fmuls
mov
fldt
scas
ja
sbb
pushf
cltd
outsl
int3
mov
test
mov
iret
das
jp
xchg
testl
mov
jbe
sub
inc
cltd
add
sbb
rclb
and
test
aas
mov
js
hlt
xor
mov
fisubrl
inc
loopne
sbb
jle
jmp
stc
add
sub
mov
test
js
arpl
jo
ljmp
insl
jecxz
pop
pop
les
pop
adc
fsubrs
loope
fnstenv
mull
mov
sbb
mov
shll
and
clc
iret
lock
xchg
pop
adc
push
push
sahf
xchg
pusha
fidivl
xchg
shl
je
les
sbb
xchg
sub
and
dec
mov
and
arpl
mov
mov
imul
and
hlt
mov
xchg
mov
scas
add
insl
jb
dec
aam
pop
sbb
cmc
data16
es
jnp
dec
aad
ds
js
pop
test
lcall
lcall
lods
push
nop
and
xchg
xor
pushf
sub
mov
in
cmp
andl
xchg
mov
xor
aas
inc
test
mov
and
out
adc
mov
addr16
daa
mov
outsl
pusha
adc
out
imul
inc
fsubrl
fsubs
fnstcw
cli
outsb
sar
test
test
jo
jbe
test
jae
xor
xchg
jmp
or
out
pop
push
inc
mov
stos
xorb
fucomp
call
in
adcb
test
std
addr16
xor
pop
xor
mov
sbb
push
test
sub
imulb
xor
adc
dec
aam
mov
mov
into
roll
mov
iret
mov
into
imul
ljmp
jne
popf
cmp
movsl
jl
add
push
mov
bound
lcall
stos
addr16
dec
movsb
push
pop
fidivl
add
jbe
hlt
pop
jmp
xor
fisttpll
push
pop
es
popf
stc
jge
ficoml
add
mov
addr16
sti
push
dec
sub
pop
shrb
pop
mov
iret
dec
stos
jb
fwait
mov
cwtl
push
call
or
sbb
frstor
movsb
ljmp
push
outsl
and
adc
cld
and
dec
jmp
jle
add
inc
aas
or
pop
in
fs
leave
adc
fwait
outsl
out
xchg
lret
dec
mov
out
movl
rorl
xor
and
addl
push
lods
addr16
jecxz
fs
push
outsl
pusha
lods
sbbb
xchg
in
pop
sub
push
cli
and
sbb
iret
mov
mov
jb
cld
or
test
pop
es
stos
mov
popa
lods
sti
dec
sbb
jne
sub
mov
sbb
pushl
pop
ljmp
dec
fs
aas
dec
xor
lret
push
cld
mov
jge
xor
cli
or
js
xor
mov
jmp
sbb
fbld
dec
mov
ficompl
rcll
inc
popf
xor
mov
lea
aad
push
in
pop
subb
xor
pushf
cld
stos
popf
adc
push
out
or
push
cmp
rcrb
add
cmpsl
mov
aas
cmp
mov
js
mov
mov
push
in
dec
sbb
xor
rcrl
sarb
push
adc
xor
pop
jmp
repz
outsl
xor
push
mov
dec
jnp
jmp
push
cmp
sarb
lods
mov
insl
pop
cmpsb
sahf
in
iret
dec
ss
push
sbb
repnz
or
jns
push
mov
insb
adc
aas
push
adc
add
pop
jb
leave
mov
mov
pop
inc
addl
sbb
adc
add
or
fdivl
push
js
std
cmc
dec
push
mov
shll
cmpsb
mov
xor
in
xlat
jmp
dec
js
xor
mov
mov
push
push
int
push
std
xor
shll
jo
cmp
inc
mov
push
cmpsb
sbbb
stos
cmpsl
xor
divb
cmp
mov
nop
jecxz
jbe
in
js
pop
jne
test
or
mov
nop
movsl
cmp
xchg
repnz
adc
xchg
adc
leave
fwait
xlat
outsb
int
xor
ljmp
jns
and
arpl
mov
mov
ss
adc
in
pop
pop
and
mov
sub
cmp
imul
sub
movsb
pop
out
lret
xlat
lcall
faddp
insl
pushf
fcoml
fistl
and
stc
push
mov
push
clc
mov
sbbb
lea
dec
in
subl
sti
sbb
dec
rcrl
outsb
pop
and
sbb
push
push
cmp
sbb
pop
jl
hlt
mov
ret
int
es
dec
dec
push
sub
mov
repz
inc
push
sub
xor
fcomip
mov
addr16
inc
aam
clc
loope
lods
pop
in
jae
jb
loope
push
push
push
es
pop
loope
test
loop
pop
dec
dec
inc
arpl
test
jl
in
scas
mov
outsb
jmp
or
into
pop
test
movsb
cmc
and
mov
jnp
mov
iret
pushf
iret
sub
or
add
add
push
cld
out
dec
cmp
and
dec
jecxz
lret
push
aam
test
ja
inc
test
dec
roll
int
out
call
ds
mov
out
and
dec
mov
xchg
add
lahf
lds
clc
push
ljmp
inc
push
mov
addr16
movsw
or
mov
stos
or
shll
popa
cmp
ds
xchg
mov
addr16
popf
pop
nop
clts
add
out
add
fs
out
push
xchg
stc
out
fwait
xchg
and
push
loope
xchg
rorb
jmp
pop
adc
sbbb
in
aas
cmpsb
or
mov
dec
push
inc
pop
mov
xchg
pop
mov
daa
inc
pushf
jne
ficoms
mov
push
insl
mov
aas
dec
rclb
jae
hlt
xchg
cmp
leave
xlat
jecxz
das
sbb
rcrl
jle
mulb
sbb
das
mov
shll
imul
daa
dec
xchg
push
xchg
add
mov
or
aaa
push
cld
ror
jmp
das
addr16
out
stc
sub
sbbl
mov
daa
outsl
mov
push
adc
inc
lret
out
stos
aad
xchg
mov
lahf
fistps
sti
push
fiaddl
and
dec
fdivl
xor
push
adc
psllw
daa
mov
leave
pusha
lods
jbe
jmp
shll
adc
cwtl
inc
cli
add
clc
xor
and
xchg
sti
cmp
cmpsb
cmp
stos
mov
jg
inc
addr16
push
es
jbe
nop
sub
mov
scas
jbe
int3
jno
nop
mov
mov
add
iret
sub
inc
jle
rcll
cmc
fwait
cmpsl
es
fwait
push
xor
out
inc
sbbl
mov
int3
jg
arpl
aad
test
xor
shlb
sub
mov
call
iret
mov
je
mov
inc
push
jmp
add
repz
fadds
sub
imulb
sub
das
lahf
sbb
or
jl
cwtl
out
leave
fldcw
fiadds
sahf
imul
pusha
dec
pop
cmc
std
push
and
sbb
jne
adc
mov
mov
mov
inc
in
push
test
lret
imul
push
push
add
jne
cli
pop
sbb
dec
insl
cwtl
pop
dec
stos
loopne
loope
and
dec
xchg
add
scas
insl
push
cmpsl
adc
mov
jge
jo,pn
add
ja
stos
ja
jl
dec
cmp
sub
xchg
sahf
push
stos
jbe
cmp
xchg
dec
pop
add
gs
mov
xor
fsts
mov
cmp
cmp
lds
cmp
pop
sbb
push
int3
pop
cmp
out
sbb
adc
pop
mov
call
push
leave
out
mov
add
das
icebp
xchg
sbb
out
sahf
pop
add
xor
adcb
xchg
xor
mov
in
jecxz
cmp
mov
push
and
test
mov
pop
dec
adc
icebp
into
je
sub
aad
mov
and
imul
popf
mov
mov
mov
data16
cmp
cmpsb
cmp
cmp
sbb
xor
add
fbstp
data16
xchg
sbb
ret
out
push
push
adc
push
pushf
and
js
fistpl
push
ja
andb
mov
or
jg
in
stos
pushf
push
mov
jmp
jmp
pop
mov
pop
jle
add
mov
rorl
daa
push
lds
pop
inc
aas
push
movsb
push
inc
in
xchg
outsb
dec
and
push
jecxz
pop
in
or
or
mov
push
push
scas
xchg
orb
in
xchg
test
dec
stos
xchg
push
call
ja
xor
aam
push
sbb
lds
ficompl
and
pop
imul
subb
sbb
dec
sub
add
in
cmpsl
jo
add
mov
sbb
push
in
cld
pop
rol
addr16
pushf
inc
sbb
inc
pop
scas
sub
lods
aaa
clc
mov
mov
pop
push
icebp
js
cmp
inc
mov
mov
rol
xchg
pop
nop
repz
nop
and
iret
pop
jg
lret
in
cmpsb
jp
inc
mov
jnp
popf
mov
imul
lea
loope
jecxz
in
adcl
arpl
lea
inc
jecxz
out
sbb
mov
test
js
insb
addr16
jmp
mov
or
dec
cli
mov
sbb
and
shll
shrb
or
test
adc
mov
repz
in
iret
cmp
and
daa
ljmp
insl
push
push
fists
test
inc
int3
mov
add
push
dec
adc
test
cmc
sbb
popa
pop
sub
jmp
jae
and
fwait
xor
flds
mov
call
fbstp
mov
arpl
orb
push
test
shrl
mov
sbb
mov
mov
or
cmc
dec
mov
lods
mov
shl
mov
rolb
les
roll
fildll
mov
or
iret
push
in
data16
xchg
push
daa
dec
sub
push
ja
cmpsl
push
rcrb
mov
inc
or
cmp
hlt
push
loope
xorb
or
aad
jb
jle
adc
js
icebp
fists
cmp
imul
cmp
mov
lret
mov
mov
xchg
mov
bnd
and
xchg
jo
cmc
inc
sbb
je
xor
insb
mov
jp
mov
mov
mov
jbe
pushf
outsb
scas
fst
cmp
imul
imul
movb
test
movsb
stos
popa
mov
adc
mov
or
jno
dec
mov
dec
leave
jns
std
aaa
aam
or
lret
cmc
adc
lcall
mov
dec
or
sbb
aad
mov
movsb
sub
jo
cmpsl
push
sbb
mov
mov
sbb
or
mov
inc
ret
xor
shlb
mov
adc
jbe
jno
lcall
loopne
stos
ss
sub
mov
pop
adc
jno
sub
imul
mov
andl
xor
aam
lahf
xchg
xchg
mov
mov
add
cmc
sbb
push
xor
fs
xor
push
inc
andl
and
mov
xor
andl
je
test
or
je
lods
add
mov
rorb
shl
gs
adc
pop
fstps
cmc
test
fldcw
xlat
sbb
cmp
pop
js
dec
add
out
xchg
sub
fimuls
adc
inc
adc
divl
and
push
mov
stos
mov
fcoml
sbb
adc
sbb
and
nop
shlb
outsl
adc
into
nop
lret
xchg
gs
ja
mov
push
or
push
lods
and
test
xor
push
xchg
jg
adc
mov
es
push
movsl
decl
and
adc
mov
stc
fs
mov
faddl
je
pushf
mov
pusha
das
std
rorl
gs
sbb
dec
rorb
mov
xlat
adc
or
es
mov
in
inc
mov
or
jb
ja
jbe
lret
mov
notb
and
loop
push
add
stos
jmp
movsl
lds
ds
in
fistl
jbe
shrl
cmpsl
or
jge
pop
xchg
ds
inc
pop
push
movsb
lock
sbb
jmp
mov
ret
in
sub
out
push
sbb
lds
mov
popa
sarl
int3
gs
xchg
in
inc
scas
sbb
lods
movsb
jle
dec
mov
cmp
jae
mov
out
mov
stos
ds
jae
fwait
lods
pushf
pop
mov
jl
ja
lods
dec
and
out
cli
pushf
mov
xlat
jge
repz
lahf
mov
aam
push
xchg
in
inc
in
xchg
cli
sub
mov
imul
les
xchg
aad
inc
es
inc
adc
adc
cmp
inc
xchg
cmp
insb
cli
push
test
mov
mov
in
xorb
mov
in
xor
jg
cmp
pop
xor
xchg
or
xchg
mov
fidivrs
in
test
iret
fs
popa
fsubl
fdivrl
loopne
and
mov
sub
loopne
inc
adc
or
andb
mov
xchg
leave
iret
dec
sbb
scas
xchg
bound
popf
jl
dec
decl
xchg
add
scas
push
popf
and
xorl
push
lret
cmp
lret
movsl
inc
push
fiadds
mov
push
out
xor
test
fidivrl
cmpsb
cmc
add
clc
push
std
add
aas
mov
out
and
add
paddsw
adc
adcb
cmp
es
mov
xor
lret
pop
out
int3
ss
gs
out
mov
or
dec
ljmp
dec
fistpl
shr
shl
mov
cltd
or
cmp
cmpsl
ret
pop
imul
mov
dec
pop
adc
mov
loopne
dec
jne
icebp
sahf
setp
push
shlb
repz
movsbl
sbb
add
or
movsl
arpl
add
loope
pop
xor
out
cmp
loop
sbb
mov
xor
inc
paddb
xor
and
adc
cmp
jb
jo
add
orb
mov
fnstenvs
and
and
push
shlb
or
gs
dec
or
ret
sbb
cwtl
das
inc
fwait
dec
lret
mov
and
xchg
ljmp
push
in
lock
stos
sbb
cmp
cmpsl
jb
mov
int
xor
adc
pop
aad
xchg
jns
cli
test
nop
add
lock
mov
add
jnp
movsl
pop
cmc
faddp
cmp
scas
sub
add
inc
out
and
out
outsl
lret
push
push
hlt
pop
ljmp
repnz
out
pop
sbb
xchg
or
loop
nop
fbstp
push
lods
mov
xchg
int
in
mov
in
jl
mov
xchg
mov
cmpsb
push
lock
add
xor
jle
pusha
mov
mov
mov
rclb
loop
repz
das
movsl
clc
aad
push
jmp
and
mov
sahf
subl
pop
outsb
cld
out
mov
sub
test
mov
sbb
repz
jo
outsl
inc
shlb
aaa
and
scas
dec
fstpt
hlt
or
lcall
lods
dec
in
mov
into
xchg
add
sbb
cmp
fwait
pop
pop
sub
movsb
and
push
sbb
add
rcrb
repnz
sub
out
push
popf
lahf
adc
stos
shlb
loope
and
adc
ret
gs
jmp
sahf
orb
jge
or
rcrb
mov
push
and
cld
push
mov
or
aas
cmp
and
lcall
psrld
mov
ljmp
cmpsb
hlt
pop
mov
push
test
or
in
adc
add
bound
mov
push
jns
lods
daa
fs
int
es
lods
push
mov
pusha
pop
mov
mov
xchg
pop
in
mov
enter
aaa
popf
push
lods
popf
lret
xor
sbb
in
add
mov
xor
inc
fcmovnbe
mov
cld
mov
bound
fists
push
mov
sbb
jp
xchg
out
ja
pop
add
out
sbb
testl
adc
xor
ds
je
andb
mov
int
aad
testb
inc
mov
into
ss
cltd
clc
sbb
insb
jg
sahf
cmp
lcall
inc
stos
orb
ffreep
pop
fcoml
xchg
test
outsl
cs
movsl
pop
imul
dec
stos
inc
int
xchg
clc
xor
lret
js
out
fcomps
cmpsl
dec
inc
mov
mov
dec
icebp
js
movsb
insl
jnp
push
jp
xchg
xchg
popf
push
fwait
int
fldcw
and
sbb
test
inc
test
xchg
es
fcomps
mov
pop
pusha
div
or
shl
jp
push
aaa
jb
sbb
cmp
out
inc
push
test
ja
adc
mov
adc
pop
jb
xor
push
push
jne
sub
sarl
addb
into
data16
repnz
dec
jne
rorb
mov
jnp
pop
pop
mov
clc
cmc
jge
mov
jns
lcall
sub
adc
loopne
add
xchg
aas
sahf
jno
push
shr
ror
and
cwtl
push
cli
mov
stos
jae
imul
inc
cltd
scas
clc
pshufw
outsb
pushf
inc
xlat
int
mov
cmp
inc
add
jne
int
stos
sbbl
xchg
fbld
jecxz
gs
mov
jbe
sarl
loop
add
pop
mov
cmc
adc
push
ret
xor
fisttps
adc
pop
xor
popa
pop
mov
fidivl
cmp
lret
xor
mov
sbb
movntq
out
cmp
jle
mov
rcll
inc
jmp
dec
sbb
push
dec
fcoml
xor
inc
stos
in
inc
sbb
pop
sub
unpcklps
pushf
dec
inc
repz
push
mov
in
faddl
out
push
shll
push
mov
test
push
lret
sub
xchg
add
mov
out
imul
and
mov
pop
aas
push
jle
dec
fcoml
pop
or
sub
neg
adc
stc
stos
xchg
jb
dec
sbb
fs
dec
stos
imul
in
xchg
pusha
pop
mov
shrb
inc
mov
sbb
scas
shll
push
fsubr
sti
add
es
test
mov
adc
add
add
lea
loope
sub
add
cmpsl
sti
push
in
or
jnp
mov
out
push
hlt
jmp
shl
mov
cmp
movb
outsb
xor
cmpsb
mov
int
add
sbb
popf
aam
enter
fwait
xor
mov
xchg
sbb
fcoml
das
pop
cmp
vmovdqa
lods
mov
pushf
pop
push
or
repz
mov
int3
jne
cld
push
mov
je
aaa
xchg
movl
loope
push
jecxz
aaa
pop
daa
add
mov
or
and
mov
jns
xlat
ljmp
jns
mov
in
sub
clc
xchg
pop
arpl
xor
cmp
xchg
jo
in
pushf
cmp
cmc
loopne
and
add
add
fwait
dec
push
test
lahf
or
inc
cli
sbb
dec
cmp
add
push
and
adc
lock
dec
arpl
aam
frstor
test
inc
insb
jle
push
bound
lahf
fsubp
clc
pusha
xor
push
mov
pop
jne
pusha
jge
adc
push
inc
fiadds
cs
movb
call
addr16
sbbl
mov
je
fsubs
lret
cltd
aas
frstor
push
mov
pop
clc
mov
mov
inc
cmp
pop
sub
pop
push
repz
xchg
sarl
mov
bnd
cmpsl
daa
sbb
adc
lret
push
cwtl
cld
add
sti
mov
mov
outsl
stos
shl
fcoml
xor
and
mov
push
push
mov
push
shrb
jmp
ficompl
gs
and
fiaddl
or
fsubs
dec
pop
scas
hlt
sub
push
xchg
fldl
subb
sub
jno
or
ret
dec
daa
or
out
pop
jg
popa
jp
movsl
xor
pop
movsl
lea
mov
stos
icebp
mov
scas
sbb
subb
loopne
arpl
test
std
cltd
out
pop
icebp
fbstp
cmp
clc
jne
and
sbb
movb
repz
es
xchg
or
xchg
mov
std
movsb
cmp
aaa
shrb
test
ret
and
lcall
xor
push
push
mov
or
int3
mov
mov
mov
pushf
jns
mov
idiv
lret
mov
adc
add
mov
jno
bound
cs
ss
test
fsubp
push
dec
sbb
std
add
rol
xchg
std
dec
push
mov
dec
jmp
lret
addr16
mov
xchg
das
into
add
std
mov
test
mov
lock
dec
loopne
add
push
sbb
aas
xor
jmp
jecxz
push
xor
in
std
xor
das
push
dec
out
dec
cmp
sbb
scas
in
lock
nop
and
into
ss
sbb
sbb
and
pop
mov
dec
in
jns
xor
fiaddl
repz
jae
jno
pop
enter
aam
mov
push
repnz
popf
int3
lret
scas
fsubrp
dec
enter
repnz
push
xchg
in
cmp
cmp
nop
inc
testl
insb
aad
movsl
mov
fwait
add
sbb
cwtl
lret
es
inc
adc
gs
ss
aas
push
mov
or
pop
stos
pop
sub
fmul
adc
push
push
fimull
int3
jb
cmp
jecxz
pop
andb
mov
xchg
sub
int3
xor
dec
mov
mov
cmc
mov
pop
adc
adc
lea
lcall
loope
mov
adc
or
push
xchg
push
cmp
xor
mul
lahf
push
lahf
sbb
mov
xor
pop
les
dec
dec
cmp
pop
aas
xlat
jmp
inc
push
sub
pop
ja
out
pop
mov
xchg
jns
mov
mov
jb
push
idivl
ret
inc
ljmp
xor
shlb
xchg
imul
pusha
ds
xchg
andl
test
jle
std
cmpsl
mov
push
pop
dec
dec
cmp
jns
lea
rorb
cld
jbe
stos
inc
jns
jns
iret
lcall
and
mov
repnz
xor
xchg
fs
sub
or
clc
or
pop
aad
cmp
imul
cmpsl
cmp
dec
and
cmp
sti
xchg
xor
xchg
loope
roll
adc
gs
mov
pushf
scas
ret
xchg
sarl
jne
fadds
sbb
ja
and
cmpsb
es
push
jg
push
mov
jbe
xchg
mov
pop
push
das
in
shlb
js
adc
adc
orl
mov
jge
xchg
cmpsl
adc
mov
jbe
inc
rol
mov
insb
push
inc
int
or
hlt
mov
hlt
insl
xlat
cmp
notb
add
sub
das
mov
mov
adc
out
enter
movl
repnz
popl
das
jg
popa
ja
pop
test
ficoms
add
shrl
scas
add
push
call
addr16
jnp
in
jne
xchg
xchg
mov
sbb
or
push
sbb
sbb
sbb
adc
xchg
sbb
pop
jecxz
clc
push
push
xlat
movsl
lods
mov
ljmp
cwtl
jg
insl
ret
jae
adc
movsb
xchg
fidivl
mov
cmp
pop
inc
insb
pop
repnz
mov
jne
sbbl
icebp
lahf
repnz
adc
inc
sbb
cmc
ljmp
dec
rol
pop
mov
cmp
mov
sbb
dec
pop
aad
mov
xor
enter
jecxz
add
xor
stos
test
xchg
push
cltd
jl
bnd
pop
cltd
lcall
and
popf
mov
fwait
sub
ljmp
sub
leave
xchg
jne
cmp
movsb
inc
hlt
popa
ret
clc
xorb
mov
adc
notl
jns
or
ljmp
and
cmc
jecxz
popf
adc
push
mov
push
outsl
mov
xor
mov
andl
pop
adc
lret
in
fwait
in
sbbb
popa
inc
sub
push
push
in
inc
push
ja
test
je
clc
sarb
push
sbb
push
jmp
inc
push
daa
std
cwtl
xor
and
mov
xchg
mov
fldl
stos
sub
jle
dec
xor
nop
scas
push
jl
mov
call
xor
push
or
fwait
sub
inc
loop
jne
pop
icebp
mov
and
sub
js
add
std
cmp
stos
lret
shll
iret
push
lods
insb
push
push
shlb
lea
mov
movsl
int
inc
jmp
lock
leave
pusha
int
mov
test
outsb
push
cmc
fists
pop
inc
xor
and
in
push
insl
adc
xchg
xchg
test
loop
repz
mov
push
lret
xchg
mov
je
push
sahf
stc
jl
mov
fprem1
push
and
int3
arpl
dec
in
lods
cmp
inc
sahf
push
add
mov
and
mov
and
and
cltd
xor
inc
inc
fidivrl
ljmp
sahf
jne
aad
or
clc
test
inc
push
sbb
or
inc
inc
sub
inc
and
movsl
push
popa
xor
bound
mov
push
and
aas
and
sub
inc
fwait
call
cmp
sbb
push
inc
xchg
dec
es
pop
repnz
inc
loopne
xchg
imul
push
int3
loope
push
ja
jmp
inc
push
jge,pt
loope
ret
adc
push
out
xor
gs
repz
xchg
fldcw
dec
mov
rcrb
fdivrs
xchg
test
or
es
cltd
dec
push
ljmp
repz
pushf
test
xchg
lahf
mul
mov
xor
test
test
jp
adc
or
add
jne
incb
xor
mov
fwait
lcall
and
jo
icebp
mov
out
xchg
roll
les
imul
jns
subl
ret
hlt
push
inc
push
cmpsl
icebp
icebp
dec
push
and
dec
adc
add
xchg
jg
aas
and
inc
cli
fisttpll
mov
jg
cmpsb
fs
adc
loopne
or
das
mov
push
insb
shll
pop
add
mov
mov
jp
jnp
and
xchg
xchg
orl
aaa
lahf
divl
loop
adc
or
sub
add
stos
inc
pop
dec
sahf
shl
leave
pusha
popa
out
insb
jle
mov
push
stos
stos
push
fnstsw
inc
bswap
mov
imul
add
popf
fidivl
dec
sbb
vpshufd
cs
sbb
lret
mov
call
in
xor
ror
es
pop
icebp
xchg
jns
jb
shlb
ja
inc
loope
push
or
movb
fldl
cmp
sti
in
adc
mov
cwtl
mov
popa
lds
mov
pop
jmp
mov
jo
mov
inc
loopne
cli
lahf
inc
fldenv
int3
inc
loop
cli
push
sub
frstor
out
out
jnp
pusha
test
xchg
mov
push
dec
cmp
imull
jg
les
sbb
fcomip
push
inc
out
or
pop
les
sub
mov
mov
inc
leave
dec
pop
inc
or
flds
rcll
aas
cmp
aad
rol
insl
stos
xlat
pop
xchg
mov
jl
sub
fsubrp
jne
or
inc
inc
mov
test
mov
inc
out
sbb
xor
ret
gs
pop
dec
and
lds
dec
jle
ds
sub
les
ds
icebp
shlb
scas
daa
sub
xchg
ret
sbb
shl
sub
sub
push
aad
xchg
insb
jno
mov
ss
lock
xor
xlat
push
ret
dec
add
fs
sub
insb
stos
and
cmpsl
addl
mov
insl
xor
sti
inc
cltd
pop
sahf
cli
inc
sbb
push
mov
rorl
and
cltd
xchg
mov
xchg
xor
cmpsb
popa
cwtl
mov
imul
lods
pop
xor
mov
fs
sbb
fcompl
add
adc
aaa
sub
fidivl
lods
leave
sbb
adc
mov
bound
dec
cltd
or
addr16
mov
iret
sub
add
jnp
mov
cld
inc
xor
xchg
pop
cmp
cmp
jmp
xor
cltd
fsqrt
pushf
repz
fwait
sub
inc
inc
insl
dec
in
pop
in
jns
rcrb
lea
shll
icebp
dec
fucomp
leave
mov
pop
shll
ja
mov
pop
jmp
out
pushf
and
dec
loope
ja
add
jmp
loopne
xchg
mov
pop
jmp
add
lahf
es
icebp
jns
and
sti
clc
push
add
sbb
sti
lds
arpl
add
xchg
add
and
and
ss
mov
stc
fiaddl
insl
sub
inc
lahf
ss
jl
in
mov
bound
or
lret
mov
mov
or
aad
cs
and
repz
call
cs
inc
and
or
xchg
add
pop
adc
les
cmpsl
sar
xchg
add
loopne
lock
mov
adc
insb
xor
iret
fs
jo
xchg
test
mov
cltd
lock
aaa
xchg
lcall
xchg
mov
popf
xchg
aam
clc
cmp
mov
and
orl
sub
nopl
addb
or
jl
sub
xlat
pop
inc
popa
cmpsb
pop
dec
mov
xor
pop
push
fbstp
pop
repnz
repnz
adc
cmpsb
mov
mov
or
jg
iret
jge
add
mov
dec
mov
jb
pop
inc
mov
iret
leave
mov
gs
and
lea
pusha
in
inc
fnstcw
scas
lods
dec
andl
push
mov
mov
sub
lcall
and
dec
sub
inc
sub
dec
xor
adc
sbb
pop
notb
js
test
lds
in
outsl
sbb
pop
mov
hlt
dec
dec
add
shlb
aam
aam
jp
dec
mov
imul
rcrb
popf
xor
push
sub
xchg
in
enter
adc
fisubl
gs
push
ja
lcall
cltd
test
lret
out
lds
push
ss
pop
inc
mov
dec
imul
pop
jmp
fidivl
xchg
adc
enter
lret
pop
ficoms
jno
int3
cmpsb
ja
imulb
int
fstp
out
mov
fs
stos
mov
ljmp
mov
sub
and
mov
jge
data16
sbb
aas
pusha
aas
cmp
movsb
jmp
fwait
arpl
jo
cmp
out
pop
inc
frstor
outsb
sbb
in
cmp
nop
outsl
mov
aad
mov
dec
and
fstpl
bound
jno
cmc
mov
dec
sub
add
sub
js
xchg
es
sbb
mov
add
push
jbe
inc
jecxz
incb
daa
repz
cmpsb
pop
je
push
lcall
pop
into
scas
pop
icebp
sarb
mov
mov
dec
jnp
jle
in
rorl
stos
icebp
lock
mov
inc
shlb
push
xor
mov
add
jmp
test
and
jae
test
ja
sarl
inc
inc
cld
xchg
test
dec
pop
mov
outsb
test
fistpll
mov
repz
xor
mov
or
xchg
scas
test
cmp
test
iret
push
xor
cmc
mov
fnsetpm(287
jg
sar
cwtl
or
dec
lret
mov
dec
pop
dec
inc
and
adc
sbb
mov
and
lea
add
sub
stos
dec
int3
loop
jmp
push
repz
ds
mov
mov
mov
insl
or
cwtl
in
inc
js
mov
fdivrl
push
xchg
js
sti
test
scas
push
in
cli
insl
sti
jg
in
mov
or
nop
pop
cltd
dec
in
jne
inc
push
sarb
sub
outsb
pop
sub
cmc
loope
or
cld
xchg
xchg
jmp
xorl
jnp
jnp
push
or
cmc
inc
xchg
in
movsb
mov
push
and
inc
mov
or
xchg
daa
cmp
aaa
sub
rcll
pop
cmp
into
or
add
iret
mov
cli
push
leave
fcoms
mov
xchg
pop
outsl
mov
cmpb
pop
popf
add
das
stos
out
push
mov
fsubs
sub
push
mov
xchg
xchg
aad
test
adc
xchg
lods
jge
ret
sub
cmpsl
out
xchg
sbb
sub
pop
cmp
xchg
fs
lods
in
dec
mov
inc
xor
cmp
cmp
lock
insl
jge
adc
cmp
xchg
test
bound
in
lock
repz
lock
cmp
xchg
push
lods
pusha
xor
jne
xor
arpl
in
outsb
nop
jle
mov
js
add
ss
xchg
xor
mov
shl
fistps
stos
mov
sarl
push
cmp
pop
pop
insb
shlb
xchg
cltd
and
inc
and
test
sub
cmc
pop
sarl
push
add
mov
mov
dec
cmp
divl
cmp
jmp
push
dec
pop
cmp
mov
push
xchg
loop
push
iret
xorb
pusha
pushf
sbb
adc
mov
call
or
mov
ficomps
out
or
cli
lahf
mov
std
ret
gs
test
lret
imulb
cmpl
pop
mov
outsb
sbb
mov
push
movl
add
push
push
ror
xchg
inc
insb
add
mov
mov
sbb
push
mov
loopne
mov
sub
xor
sarl
inc
pop
push
and
cmc
inc
jno
int
cmp
int
popf
nop
pop
mov
lds
jmp
sub
and
mov
push
inc
shlb
add
in
and
inc
adc
add
ja
int3
loopne
gs
push
adc
dec
jnp
stos
cmp
pop
dec
sahf
add
push
notl
push
pop
mov
sub
stos
add
popf
icebp
dec
push
push
jl
push
inc
int3
iret
cmp
mov
fistps
es
jae
jl
rcrl
push
jle
inc
mov
sahf
mov
sbb
cmpsb
add
cmpsl
sub
bound
inc
fs
push
jne
inc
push
test
push
adcl
sbb
mov
inc
jge
fildll
imul
dec
sbb
hlt
push
inc
mov
adc
rorb
lock
xor
out
xor
scas
and
nop
jae
test
int
dec
scas
inc
jl
push
lods
lret
fldt
aam
mov
cld
or
jle
mov
adc
and
pop
dec
and
xor
loop
or
jmp
stc
rol
cmp
sahf
or
pop
pop
xchg
stos
sub
xor
lret
testb
add
popa
add
pusha
sub
ret
mov
lea
lret
sahf
jbe
idivb
jle
pop
cmp
mov
inc
aam
mov
pop
js
push
stos
adcl
cmpsl
mov
ds
hlt
ja
in
rcl
mov
mov
cmc
scas
xor
ss
adc
loopne
mov
out
mov
out
test
xor
cmp
enter
inc
ret
cmp
sbb
lock
enter
fwait
sti
fsubs
daa
adc
insl
lods
inc
shll
in
add
jb
push
dec
pop
movsl
pop
mov
push
add
xor
push
aas
lods
lods
push
repnz
gs
dec
stos
sub
jge
push
sub
jmp
inc
divb
xor
loop
inc
push
fstl
jmp
adc
mov
pushf
jmp
inc
int3
or
leave
in
sti
pmaxsw
sbb
int
push
rcrb
stos
mov
mulb
xor
xchg
rcrb
add
mov
je
outsb
push
xchg
shrl
lds
jo
ss
push
xchg
sbb
and
decl
xorl
jmp
sbb
ficomps
push
jp
mov
fdivrs
xchg
jnp
mov
jnp
pop
or
movsl
cmp
mov
cmpsb
test
jge
outsb
cmpsl
mov
adc
push
inc
cmp
cltd
inc
sbb
lret
add
insl
xor
sahf
push
mov
or
xchg
mov
sub
inc
fstps
xor
cmp
add
lods
sub
push
mov
inc
xchg
in
aas
dec
gs
inc
dec
mov
xchg
sbb
and
shl
dec
nop
xor
sub
sbb
jnp
repz
int3
je
jo
in
mov
outsb
add
pop
xchg
adc
ret
out
mov
xor
adc
or
popf
aas
fs
xchg
cld
inc
mov
sub
jl
hlt
mov
sub
out
mov
or
daa
and
inc
add
clc
adc
fcmove
addr16
cmovne
pop
mov
add
mov
xlat
outsb
out
mov
sbbb
rcrl
cmp
push
jmp
test
xor
xor
mov
sbb
loop
int
stc
nop
test
inc
pop
pop
imul
mov
testb
sub
mov
xor
lock
insb
enter
or
cmp
mov
inc
pop
mov
xor
test
xorb
imul
stos
lods
mov
dec
je
jp
sub
sbb
in
sub
nop
mov
in
sbb
les
xor
cmp
sbb
lods
sahf
xor
popf
push
ljmp
mov
iret
xor
or
lock
scas
mov
je
clc
mov
cmp
adc
push
cwtl
inc
push
and
in
and
or
inc
fidivs
cltd
mov
fidivrs
movsb
out
rorl
icebp
mov
xor
sbb
es
movsb
and
or
fdivr
jnp
ret
cmp
jecxz
lahf
cmp
cmpsl
ret
cmp
add
test
mov
push
cwtl
stos
add
in
hlt
or
into
jne
test
mov
lret
jg
lret
and
xchg
stos
and
sbbl
or
movsb
lret
sub
sub
xor
leave
es
and
sti
lds
sub
pop
pop
les
jmp
pop
or
sub
and
cmpl
pop
lret
popf
pop
jno
pusha
or
daa
jo
mov
addr16
fcomps
inc
jmp
and
mov
jns
in
and
sbb
pop
push
adc
jns
push
cmp
mov
repz
or
cmp
je
dec
ljmp
cltd
pop
stos
sbb
repz
mov
push
push
push
std
xorb
fnstenv
sbb
inc
adc
sub
test
iret
push
mov
cli
std
test
dec
pushf
int
adc
movsl
testb
jns
cmpsb
pop
fldcw
mov
jl
push
movsl
pop
sub
int3
roll
xchg
fisttpll
add
mov
jae
inc
pop
inc
sbb
pusha
sub
jne
jbe
jae
cmp
rcrb
dec
out
jge
ret
mov
pop
fcoml
cmp
and
loop
rcl
xor
loopne
jg
das
mov
jno
mov
decl
lods
testb
arpl
sbb
mov
push
mov
cmpsl
mov
add
push
mov
mov
imul
loopne
inc
cltd
sub
push
inc
divl
adc
adc
sbb
sbb
cltd
mov
or
inc
fs
lods
sbbl
je
push
xor
lcall
mov
adc
inc
dec
push
test
jmp
jbe
pop
lods
mov
mov
jge
rclb
out
jp
movsl
in
jbe
or
adc
lods
aam
xchg
push
fs
mov
mov
ja
mov
xchg
orl
outsl
out
xchg
jns
xor
or
mov
adc
lret
push
sub
andb
in
sub
inc
jmp
mov
jo
in
mov
pop
cmp
xchg
loope
cmp
ret
sbb
fnstenv
cmp
cmp
pop
push
sbb
cmp
cmp
jo
pusha
int
cmp
int3
gs
mov
add
ljmp
jb
cmp
jbe
add
add
fstl
mov
roll
push
xchg
jle
lahf
pop
in
nop
mov
inc
ret
sti
jbe
mov
subl
shll
clc
or
xchg
psubusw
xchg
in
pop
div
adc
subb
movsl
test
pop
mov
je
jg
xor
push
stos
mov
outsb
call
cs
stos
sbb
mov
mov
daa
pop
inc
push
shr
in
pushf
inc
popa
movl
mov
inc
mov
dec
adc
imul
filds
mov
out
popf
xor
sahf
pop
bnd
outsb
sarb
and
cmc
pop
int3
push
lret
in
mov
ss
mov
test
jmp
jns
fs
sub
clc
mov
pop
ja
mov
mov
inc
xlat
add
addr16
jnp
cwtl
push
test
ret
mov
icebp
xchg
imul
cltd
mov
dec
jl
xor
in
mov
fnstcw
test
sub
lret
bound
push
dec
push
orb
sub
push
jo
lods
inc
rcrb
in
popa
lahf
imulb
pop
mov
add
xchg
loope
dec
pop
lods
cmp
fwait
cmc
aad
jmp
dec
je
xchg
mov
adc
mov
fnsave
and
test
inc
in
neg
mov
jo
test
aas
mov
jb
inc
sub
adc
fdivrl
movsb
jecxz
ret
outsb
sub
aas
push
jbe
sub
adc
jne
ja
andl
dec
mov
in
imul
dec
cmp
aam
stos
add
xchg
cmpsl
sub
arpl
js
inc
stos
adc
sahf
leave
and
jecxz
mov
mov
mov
mov
mov
ja
es
repz
pop
jle
inc
out
insl
sbb
ss
imul
sub
sub
jo
rclb
popa
cld
sub
mov
shl
lea
xchg
in
mov
sub
dec
iret
mov
pop
out
stc
add
and
sbb
repnz
mov
mov
sub
loop
sarl
dec
out
mov
push
insl
insl
or
cmc
mov
jne
cltd
mov
pop
out
mov
push
lods
inc
xchg
jmp
loop
jecxz
cwtl
xchg
mov
jbe
and
js
or
in
insl
adc
hlt
pop
sub
add
push
rclb
inc
flds
xor
xor
cmp
xchg
aaa
jle
adc
rcrl
xor
mov
pop
xor
mov
fs
shrl
sbb
adc
out
push
lcall
or
dec
add
push
cmp
adc
or
aad
inc
leave
pusha
push
add
lcall
dec
xchg
and
mov
mov
adc
sub
and
jae
pusha
jge
mov
dec
roll
xchg
in
xchg
push
mov
ficoml
sbb
and
jecxz
popa
dec
or
int3
jg
mov
cmc
ror
daa
add
int
push
stos
incl
sub
scas
dec
push
jmp
pop
popf
jo
les
std
lahf
in
pushf
sbb
mov
pop
push
or
cs
mov
sbb
pop
mov
cmp
mov
and
loope
cld
dec
fiaddl
aaa
outsb
loop
mov
imul
popf
mov
cmp
test
idivb
or
xchg
hlt
mov
mov
sub
push
mov
lcall
outsl
push
push
inc
sbb
mov
jmp
cmp
and
mov
mov
push
fisubrs
adc
pop
sahf
mov
cmp
sbb
push
imul
andb
scas
es
adcl
pop
xchg
jecxz
out
mov
repnz
in
inc
push
dec
addl
lock
bound
jo
in
shll
add
lcall
cmp
xor
fstpl
daa
push
inc
mov
add
and
mov
or
es
ljmp
cmp
pop
dec
mov
xorb
lea
shlb
cli
mov
jp
jl
enter
icebp
mov
mov
push
adc
push
or
loope
jb
flds
xlat
sbb
jns
clc
lret
loopne
pop
pop
mov
ja
out
lret
je
add
push
jl
bound
pushf
jae
and
ret
in
lods
pop
outsb
mov
mov
sbb
leave
sbb
jge
repnz
movsb
cli
insb
xchg
cmp
xchg
xchg
movsb
int3
into
push
jge
cmp
jl
cltd
lods
dec
rcl
addr16
dec
dec
mov
push
add
ds
clc
lcall
popa
xor
fnstcw
leave
mov
movsb
mov
sub
push
inc
mov
mov
inc
inc
add
repnz
lea
fnstsw
push
mov
or
or
jns
adc
mov
je
test
out
fmuls
cmc
mov
inc
push
dec
iret
fldl
pop
cmc
test
jo
enter
inc
ljmp
cmpsb
jp
fisttpl
xor
cld
ficoms
ljmp
push
sbb
xchg
jge
dec
sub
jl
lahf
iret
pushf
addb
pop
dec
pop
add
les
add
push
out
sti
dec
cmc
fildll
in
mov
xchg
mov
mov
scas
adc
lea
sbb
shrl
push
cld
lea
pop
or
notl
hlt
or
dec
push
inc
loop
bound
cmp
negb
or
adc
pop
inc
pusha
mov
pop
xor
loope
mov
xor
cmpsl
les
mov
ficoml
out
pop
inc
in
stos
add
std
arpl
test
cmp
fstpl
cmpsl
ds
or
cmpb
cmc
pop
ljmp
jg
or
out
mov
fisubrs
sahf
pop
lea
lods
add
out
test
push
lds
stos
shl
int
stc
out
aaa
jecxz
mov
fs
adc
or
push
or
or
mov
cmpsl
inc
mov
gs
sub
push
sbb
mov
jmp
int
fs
enter
rol
mov
sahf
mov
push
dec
sub
xor
cmc
aad
adc
push
int
fidivrl
test
xor
xchg
mov
jae
xchg
lret
or
cmp
push
add
mov
cmp
cmp
xor
int
mov
scas
daa
xchg
sbb
bound
stos
dec
test
push
leave
sti
jg
pop
xchg
xchg
je
dec
mov
in
and
xor
aas
mov
sub
and
incl
mov
lods
inc
ficoml
bound
bound
sti
mov
les
out
outsl
sbb
adc
and
popa
mov
or
mov
fisubs
jle
test
mov
fbld
lea
in
popa
scas
sti
or
sub
add
lret
scas
pop
mov
mulb
jbe
pop
or
idivl
repz
fs
outsb
lods
cmp
or
rorl
insb
mov
loop
cmpsl
mov
add
adc
insb
jle
push
rorb
mov
sbb
pushf
sbb
cmp
scas
push
stos
or
lds
int
stos
or
lret
sti
jp
adc
pushf
dec
cs
mov
jmp
push
fisubs
das
cmc
pop
fsubs
cmp
outsb
pusha
ja
xor
adc
nop
cmpsl
aas
push
addl
push
dec
lods
jg
adc
dec
mov
popf
inc
popf
mov
leave
mov
leave
push
scas
jae
in
jns
inc
push
or
dec
cs
or
mov
jnp
loopne
aas
push
mov
pop
dec
sub
nop
mov
fwait
xor
roll
lahf
shlb
fwait
cmp
lods
es
sub
imul
add
les
mov
dec
pushf
stos
inc
xchg
sbb
jg
fs
notb
sub
and
clc
add
in
scas
cmp
sub
cmp
mov
push
and
repnz
mov
dec
pop
je
inc
inc
lea
adc
inc
cs
xchg
xchg
shrl
jg
mov
cmpsb
inc
pop
out
mulb
jo
jmp
mov
sub
jnp
pushf
xor
mov
cld
outsl
cmp
cli
xchg
in
push
sub
fcomip
push
push
adc
mov
cmp
push
lock
lahf
lods
or
in
out
fists
pop
mov
ret
sbb
jns
addr16
lret
inc
push
inc
leave
mov
jno
es
or
jecxz
mov
cmc
test
dec
pop
inc
test
cmpsb
mov
inc
enter
jno
cmp
jae
aaa
push
add
cmp
inc
arpl
jecxz
cmp
push
movsb
adc
cs
cmp
inc
movl
std
push
ss
out
push
fwait
pop
cwtl
push
mov
sub
xor
cwtl
aas
int3
sbb
jl
fdivl
leave
and
clc
test
mov
cmp
fs
xchg
pop
xchg
test
push
cli
or
ja
mov
mov
aaa
addr16
cld
push
mov
pop
cmp
into
jo
aam
xor
cmp
rcrl
and
xor
mov
imul
popf
in
inc
push
inc
shll
mov
js
mov
jmp
mov
imul
cltd
ret
mov
adc
lcall
sbb
sbb
jge
int
xchg
loop
pop
mov
cmpsl
or
lea
add
xchg
sbb
test
mov
fdivrs
lock
or
mov
pop
mov
xchg
jg
iret
fs
pop
insb
pushf
test
scas
inc
shrl
inc
xchg
sbb
xchg
add
jae
stos
insb
sbbl
mov
lret
sahf
lret
pop
cmp
jg
pop
fdivrs
inc
ja
int
loop
jmp
dec
movsb
aaa
into
ficompl
or
jnp
out
inc
jp
and
rcrb
inc
int
jge
je
popf
dec
xor
jecxz
sbb
enter
daa
dec
pusha
pop
jns
ds
js
sbb
rclb
int3
xchg
and
adcl
or
popf
push
in
into
jge
stos
mov
test
cwtl
push
dec
jno,pn
popa
inc
push
rorb
hlt
repz
cltd
xor
int
leave
call
dec
mov
ja
dec
mov
or
jmp
sbb
stos
push
loopne
in
adc
je
add
push
mov
jae
lock
dec
or
wbinvd
jp
dec
dec
jne
jle
sub
pop
or
testl
push
js
pop
and
push
add
popa
ss
daa
xlat
aad
repz
dec
ds
aaa
gs
adc
mov
pop
idiv
cwtl
inc
mov
inc
out
ret
stos
cmp
sbb
clc
add
ljmp
sub
ret
add
mov
ja
sub
sbb
and
mov
inc
decl
cld
jnp
sahf
das
dec
xchg
pmaxsw
inc
mov
dec
repz
sbb
pop
jg
add
pushf
sub
dec
out
arpl
stc
in
cmp
pop
add
dec
push
sub
dec
addr16
into
out
add
mov
imul
faddp
or
jo
xor
adc
inc
adc
add
out
lods
out
out
dec
arpl
adc
incl
dec
and
jo
adc
push
push
lea
xor
loopne
jnp
inc
mov
sub
sbb
mov
mov
or
mov
mov
xor
fstpt
xchg
or
cs
cmp
seta
cltd
das
stos
cmpsb
bound
push
add
mov
inc
sbb
push
adc
jmp
push
mov
jmp
mov
flds
xor
dec
jmp
or
aaa
sti
add
mov
adc
pop
xchg
rorl
xchg
dec
push
push
mov
mov
sub
sbb
mov
sbb
out
sti
mov
add
pop
stos
and
daa
mov
lea
mov
mov
addb
mov
cmpsb
jns
jo
mov
fnstenv
or
pop
enter
lcall
loopne
and
dec
dec
test
sti
xchg
lcall
insl
dec
ret
pop
cmp
cltd
cmp
shrb
add
inc
popa
jnp
add
push
xchg
and
int3
cmp
sbb
pushf
add
dec
js
test
ljmp
hlt
dec
and
sahf
inc
in
or
mov
mov
pop
mov
je
xchg
xor
jb
out
ret
pop
xchg
std
pusha
scas
and
fs
dec
insb
dec
fsubs
movsl
insl
push
dec
pop
mov
shrl
dec
outsb
mov
cmp
std
cltd
imul
out
lods
mov
lock
adc
sbb
mov
les
loopne
arpl
test
mov
scas
push
sub
pop
and
jle
insb
shrl
pop
or
es
out
imul
hlt
outsl
push
adcl
push
xchg
xor
mov
dec
jl
rclb
cmp
inc
mov
sub
shlb
cmp
cmp
xor
loopne
xchg
xchg
sti
cmc
push
stos
mov
jns
jbe
sbb
mov
adc
sub
or
cmp
xchg
and
sbb
out
and
adc
in
dec
ret
mov
imul
lahf
sahf
jno
mov
cld
subb
dec
mov
aad
sbb
push
mov
pusha
sti
mov
adc
popa
mov
lret
js
sub
jp
mov
mov
sbb
mov
incb
mov
shlb
pop
dec
adc
jle
cmc
into
lahf
and
add
and
inc
cmpsb
lock
xor
push
sti
xchg
sbbl
pop
inc
out
lahf
and
sbb
cmpsb
adc
push
rolb
pop
ss
jo
out
xchg
sbb
btl
test
sub
fmull
jnp
dec
push
cwtl
scas
je
lods
cmp
xchg
flds
push
inc
out
jns
shll
mov
adc
push
lea
cmp
insl
inc
je
dec
xchg
sub
leave
pop
mov
push
inc
lods
std
push
push
cli
int3
pop
rcl
stos
hlt
test
mov
out
aas
pop
sub
sahf
out
adc
jecxz
and
stos
jbe
int3
into
jp
mov
push
jp
xchg
rcrb
mov
mov
icebp
orl
sti
cmp
pop
dec
xchg
push
cmp
cmpb
insl
xchg
cmpb
call
or
ds
popa
dec
xchg
cs
pop
cmp
push
jecxz
pop
enter
xchg
scas
and
in
jle
sbb
rol
sub
test
mov
fnstenv
lods
xchg
scas
add
shlb
es
idiv
mov
xchg
add
fxch
es
mov
cmp
pop
js
or
cs
push
ficoms
addr16
ja
mov
js
jno
cli
aaa
arpl
lret
lods
xchg
lods
mov
hlt
mov
inc
cmpb
mov
jmp
xor
out
es
scas
inc
in
iret
ljmp
ja
imul
cmpl
mov
lret
jbe
inc
icebp
mov
inc
jbe
vpcmov
mov
insl
mov
ret
or
sahf
add
cmpl
dec
pop
push
js
ret
movsb
inc
imul
sub
iret
dec
loopne
mov
in
pop
dec
iret
or
lods
pop
cmp
xor
test
dec
mov
lock
mov
add
dec
push
jae
sbb
or
jg
inc
lea
cmc
mov
or
sub
pusha
or
stc
mov
fiadds
lret
dec
call
shrb
jno
ss
sahf
cld
push
inc
call
xorb
dec
dec
pop
mov
push
out
jge
cld
insb
pop
outsb
xor
adcl
test
leave
inc
push
push
dec
data16
cld
add
pop
xor
lods
xchg
push
std
jne
int
mov
sub
out
mov
mov
fwait
or
cltd
dec
dec
cwtl
aaa
insl
call
lods
cmp
imul
xor
out
stc
mov
js
imul
test
sub
fnstcw
stos
cmp
inc
push
pusha
popl
outsl
jbe
cmpsb
ret
shrl
jmp
divb
xchg
sub
jge
int
fadds
cltd
or
shlb
loopne
lods
dec
pop
mov
into
out
sub
dec
test
cmp
xchg
dec
sbb
or
ret
aam
je
add
lds
jo
dec
cmc
lea
pushf
jmp
or
xor
sbb
xchg
lods
or
add
aas
rclb
cmp
ret
cmpsl
dec
arpl
mov
mov
and
insb
mov
loopne
add
pop
int
adc
pop
imul
scas
adc
sub
es
lret
jae
pop
sbbl
add
icebp
ds
movsb
repnz
xchg
mov
push
jae
mov
js
ss
and
daa
cmp
jb
add
fwait
daa
mov
mov
ret
jne
imul
sbb
cmp
insb
jns
or
lret
loope
cmpsl
imulb
scas
cmp
xor
pop
inc
fimuls
test
stos
jl
mov
inc
ds
dec
imul
data16
and
sub
fwait
add
jbe
out
mov
lock
push
mov
xchg
fmul
mov
es
popa
pusha
jp
adc
das
repz
add
mov
scas
cmp
or
stos
mov
xor
push
popa
ret
pushf
iret
icebp
es
out
popa
xor
adc
inc
loopne
or
loopne
jno
subb
jmp
push
out
repnz
inc
xor
or
mov
shrb
dec
arpl
dec
movsb
in
xchg
call
test
sarl
push
cmc
jns
and
int
cmp
pop
jle
jo
lahf
movsb
std
lahf
imul
sbb
mov
js
adc
movsb
out
sbb
int3
cmp
cmc
and
repnz
movsb
pavgb
fldt
inc
xor
ret
adc
jns
mov
adc
mov
mov
aam
sbb
aaa
lock
ja
xlat
call
push
sbb
fisubrl
dec
or
sbb
in
pushf
dec
pop
dec
mov
subb
mov
mov
int
js,pt
leave
jecxz
test
push
aam
stos
enter
sahf
out
push
fst
xor
in
je
xor
insb
mov
pop
and
adc
or
lahf
or
push
stos
mov
fucomip
push
sbb
fs
cmpsb
movsb
or
fisubrl
std
sbb
test
sbb
fisttpll
cmp
xor
xchg
add
sub
sbb
rorl
cmp
jno
adc
dec
cmp
jp
popf
std
mov
xchg
mov
lret
push
js
and
sbb
sub
sbb
push
sub
add
cmp
negl
repz
jae
sub
pop
push
mov
in
sti
dec
in
shr
dec
into
int
fldt
pop
std
rol
mov
into
int
int3
arpl
cli
rol
mov
jns
lods
pusha
xor
aaa
dec
jmp
cmp
push
insl
cltd
push
lcall
sub
lods
stc
jae
or
rcll
xor
mov
sbb
jb
push
and
ljmp
jp
jae
out
outsb
push
int3
add
xchg
or
mov
adc
sub
call
add
and
inc
add
fidivl
mov
dec
mov
test
add
pop
in
stos
mov
out
popf
mov
jno
push
xchg
dec
cltd
push
adc
test
cmp
or
sub
cmp
or
ja
add
aas
mov
inc
jo
mov
inc
xor
mov
addr16
push
push
mov
mov
decb
xchg
popa
aam
not
jno
je
les
sbb
mov
stos
cmp
popa
lods
loopne
mov
inc
subl
pop
mov
or
test
jg
dec
rcr
xchg
arpl
xchg
btc
lret
mov
xchg
fildll
xchg
imul
fdivrl
rorb
dec
pop
xor
jo
mov
jp
adc
test
cwtl
or
push
xchg
add
xor
or
push
das
stc
adc
inc
xlat
mov
mov
xchg
cmp
lock
inc
js
rol
adc
mov
cmp
sbb
add
pop
and
inc
fmull
outsb
dec
pop
or
lcall
std
pushf
cmp
xchg
xchg
loope
lahf
mov
push
ds
leave
adc
test
and
fcmovnb
rcr
lock
pop
sub
into
or
mov
stos
mov
or
arpl
cmpsl
xchg
pusha
mov
mov
pop
fisttpll
jno
pop
xchg
sti
push
clc
popa
pop
sub
pop
add
pop
jno
ja
cmp
pop
add
aad
mov
and
loopne
adc
add
push
outsb
push
orl
push
movsb
repnz
and
clc
bound
les
arpl
mov
push
mov
mov
xor
aam
cmp
in
jne
fidivl
adc
sarb
popf
xor
jge
js
sbb
push
inc
or
dec
and
and
adcb
nop
jecxz
js
add
ds
jbe
mov
mov
jo
incw
cld
fwait
xor
xor
push
cld
repz
push
fstpl
ret
push
dec
movsl
xchg
cmp
les
cmpb
mull
or
clc
ss
pushf
sub
cmp
cltd
push
es
xlat
and
stc
clc
lahf
cmp
aaa
or
inc
arpl
lods
cmp
mov
inc
mov
adcl
lds
popa
clc
aam
dec
in
mov
adc
pushw
popf
push
rol
pop
les
sbbl
lahf
lods
inc
punpcklbw
or
or
jl
mov
push
jmp
popa
clc
lds
mov
punpckldq
push
aam
add
adcl
and
int
or
dec
or
xor
xchg
jg
xor
or
xchg
cs
add
add
cli
xchg
aam
sbb
add
cs
and
add
adc
fisubrl
sbb
fwait
cli
xchg
decl
adc
pop
pop
out
push
sbb
sub
jbe
mov
or
pop
lock
fnstenv
inc
mov
dec
daa
adc
xorl
scas
inc
xor
xchg
sub
jg
xlat
outsb
push
loopne
lcall
aas
cmpsl
pop
xchg
not
adc
inc
sub
mov
inc
mov
out
jae
inc
mov
mov
jb
mov
dec
pop
adc
xchg
mov
mov
sbb
call
mov
mov
mov
lret
aaa
int
test
or
sbb
out
sbb
shrl
loopne
cli
and
in
xor
insb
push
lcall
push
mov
xchg
sub
mov
mov
or
aam
jp
scas
add
sub
dec
out
icebp
sarb
lock
cmp
mov
test
mov
inc
scas
std
stos
cmp
mov
mov
add
ds
or
xchg
pop
mov
out
xor
push
pop
or
mov
add
stos
ds
or
mov
adc
mov
push
lret
inc
push
sbb
xlat
xchg
add
sub
push
inc
ljmp
jge
movsl
push
lock
push
cld
cmp
sub
je
insb
inc
mov
movsb
rolb
xor
shl
mov
cli
cmc
xor
ret
sti
lock
int3
mov
stos
popa
arpl
repnz
pop
lcall
xchg
dec
aas
and
inc
add
pop
stos
out
push
sub
fs
dec
test
or
stos
cmp
inc
mov
mov
lock
xchg
sbb
push
push
mov
movsl
lahf
sbb
stc
ret
fcomip
and
jge
je
xchg
out
lahf
add
test
testl
cmp
pop
xor
and
mov
popaw
arpl
ss
and
inc
add
mov
pop
iret
das
or
sub
int
sub
xchg
dec
push
cmc
cmovo
lcall
pop
push
mov
jae
movsl
arpl
or
cmpsl
mov
pop
cmpsl
leave
pusha
fnstcw
adc
sti
xchg
push
jmp
pop
lods
cltd
rcrb
sbb
insl
mov
jbe
mov
xchg
lods
push
in
test
sti
or
hlt
or
inc
ja
shl
popf
and
mov
add
in
lods
popw
cli
in
mov
in
mov
out
outsb
pop
sub
je
xchg
cli
icebp
dec
push
repnz
lock
pop
xor
scas
sub
dec
dec
arpl
jge
icebp
xchg
pop
add
sub
lcall
jne
mov
andb
hlt
or
mov
xor
jle
or
fiadds
push
repnz
pop
sub
into
lods
push
sbb
aad
cmpsl
sbb
push
aam
xor
mov
rol
jmp
fwait
sti
dec
xor
cmp
daa
nop
stos
pop
arpl
dec
mov
rcr
testb
das
pop
aaa
nop
jnp
xor
imul
cmp
das
icebp
ljmp
cmc
repnz
pop
mov
xchg
xor
addb
adcb
orl
imul
call
subps
push
push
mov
push
hlt
in
push
mov
or
subl
adc
xchg
cmpl
mov
orl
out
jl
sbb
lods
fnstsw
std
mov
sarb
push
test
jne
cmp
jge
idivb
loopne
push
mov
data16
xor
xchg
aas
movsl
insl
leave
xchg
sub
push
mov
xchg
mov
or
dec
jnp
fsubs
inc
push
pop
and
inc
lret
fistpll
shll
pop
mov
sbb
sbb
sbb
pushl
mov
pushf
xchg
xlat
xchg
mov
inc
dec
xor
xor
jae
lahf
stc
push
scas
mov
add
daa
rcrb
insb
filds
lcall
cwtl
outsl
jp
pushf
pop
scas
inc
push
mov
push
sbb
repnz
pop
xor
sub
xlat
lea
loopne
scas
lods
mov
adc
mov
push
jp
jo
stos
lahf
dec
pop
cli
jl
fstps
mov
insl
mov
out
sbb
sbb
in
dec
fbstp
or
or
int
popa
mov
mov
adc
stc
or
dec
and
cmp
dec
jecxz
lea
js
popf
and
fldenv
cmc
sub
addr16
fs
or
movsl
sbb
jg
dec
or
jmp
or
cmp
pop
push
movsb
fadds
jmp
xor
inc
in
adc
pop
inc
mov
test
sbb
adc
xchg
jo
andl
loop
fst
sub
scas
call
add
push
and
sar
enter
adc
hlt
adcl
pop
movsl
mov
mov
mov
mov
rorl
dec
cld
jp
jg
mov
scas
lods
inc
sti
jbe
aad
scas
stos
mov
jmp
stos
mov
push
pop
xchg
dec
out
jecxz
gs
add
inc
ficomps
inc
sarl
pop
and
movsb
pop
cmp
aad
mov
dec
cld
pop
shl
xchg
daa
outsl
or
sbb
les
stc
movsb
sti
lods
je
loop
dec
jnp
aam
movsb
repz
rcrl
dec
popa
cmpl
cmp
jmp
or
inc
push
mov
lds
inc
enter
mov
cmc
mov
cmp
cmp
pop
mov
xor
call
push
addb
lret
pop
mov
cld
xor
add
lret
xchg
jmp
mov
cmp
jns
pop
hlt
insb
pop
mov
mov
push
iret
cmpsb
xchg
out
enter
push
out
or
xchg
push
roll
jg
mov
add
out
andb
lcall
cmp
in
faddl
lds
mov
rolb
cmpsb
sub
pop
push
mov
mov
lret
negl
and
orb
shll
insl
or
xchg
rcrb
mov
ds
outsb
outsb
fisttpll
dec
dec
dec
xchg
dec
push
mov
push
mov
popf
out
dec
push
sbb
jo
aas
and
mulb
popf
xchg
mov
jae
push
movsb
leave
add
aam
cli
sahf
inc
cmp
mov
jb
jecxz
push
dec
and
fldenv
in
movsb
mov
cmpsb
ret
lods
add
mov
outsb
push
test
pop
ja
add
fmull
movsl
mov
sbb
cltd
dec
jo
jge
bound
icebp
pusha
sbb
cltd
cmp
jecxz
add
or
out
pop
test
fidivrl
enter
jae
pop
push
das
xchg
inc
sbb
lcall
stc
gs
rcl
adc
mov
jle
jl
imul
push
test
jae
das
cs
fwait
lret
rolb
rcll
in
fwait
jae
and
mov
daa
enter
push
cmp
jle
lock
aas
jmp
hlt
lahf
lock
mov
jmp
lcall
adc
cmp
mov
jl
adc
dec
leave
int3
pusha
arpl
mov
aam
or
lds
sub
aad
lock
ret
outsb
lds
lods
negl
hlt
push
lahf
xor
push
aaa
pop
imul
mov
insb
stos
incl
fs
cmp
fwait
aas
popf
xchg
iret
push
test
je
in
cltd
mov
cmp
mov
push
xor
and
xor
sub
and
pusha
cmp
fwait
sarb
jl
ret
outsl
lods
add
xorl
aaa
add
arpl
sbb
push
gs
inc
push
in
das
iret
pop
mov
inc
push
cmpsl
push
leave
sub
mov
cli
inc
loop
mov
lcall
lea
xacquire
pop
call
std
pop
and
jno
icebp
aaa
push
xor
call
dec
inc
xor
int3
jnp
stc
das
push
pop
ja
or
insb
jl
outsl
enter
mov
into
pop
xlat
lods
data16
and
dec
dec
mov
rorb
xor
incb
test
push
lcall
push
cwtl
pop
mov
inc
and
push
imul
aaa
push
jg
push
inc
and
inc
lock
fldl
and
xchg
rol
cltd
mov
ret
push
ret
outsb
cld
mov
insl
rol
cmpsl
nop
lcall
aad
jmp
push
add
faddl
in
testl
mov
add
pop
jb
call
fdivrs
jmp
and
mov
popa
aas
cld
rolb
cmp
cmpsl
ss
lea
inc
loop
insl
jb
pop
in
pop
jb
pop
dec
adc
jmp
jbe
pop
push
ljmp
jno
mov
call
stos
and
and
jge
xchg
xlat
push
mov
stos
frstor
faddl
arpl
xchg
fcmovnbe
jmp
xchg
push
cmpsb
add
cltd
jmp
dec
mov
fwait
push
in
and
inc
xchg
jno,pn
xor
gs
jo
sti
xor
mov
dec
cmp
pop
adc
jge
xor
lahf
push
cmpb
nop
stos
mov
in
testl
repnz
pop
xchg
add
movsl
lcall
ror
loope
xchg
push
push
lods
sub
pop
ljmp
jp
add
push
out
pushf
testb
sub
push
mov
out
push
pushf
sbb
data16
in
clc
xor
cmp
sahf
sbb
mov
cwtl
cmpsl
decb
sarb
jl
movsb
sbb
dec
dec
push
push
jecxz
lock
lds
cmc
adc
scas
sub
insb
sub
pop
pop
cmp
aaa
pcmpgtb
scas
in
sub
out
out
cltd
or
mov
rcl
cwtl
lods
ja
repnz
mov
je
cmc
mov
aam
jmp
movsl
sub
lea
stos
adc
mov
repz
push
cmp
inc
stos
sbb
das
ljmp
lcall
sti
push
jae
fwait
mov
cli
xchg
fcompl
jbe
add
cmpb
sti
xchg
mov
jns
xor
inc
pavgw
pop
iret
jecxz
ljmp
inc
in
mov
cmpsb
cmpb
adc
push
sbb
dec
outsl
xorl
es
push
iret
mov
repnz
adc
fsubr
add
inc
inc
ljmp
mov
fs
jmp
cmp
fld
inc
xor
les
loope
push
in
lret
jecxz
pushf
bound
sub
pop
out
int
xchg
test
test
mov
shll
mov
out
rcll
gs
jle
xchg
or
lcall
mov
lret
scas
mov
cmp
into
enter
pop
leave
jb
dec
adc
cmp
push
cmp
push
dec
insl
and
pop
ss
testb
test
push
iret
xor
pop
stc
pop
cmp
mov
xchg
cmc
mov
aad
in
dec
loopne
sar
mov
jno
sbb
mov
add
aam
call
mov
push
mov
lret
ss
push
out
or
push
or
xchg
dec
std
dec
mov
pop
mov
mov
xchg
mov
lahf
sbb
hlt
lds
gs
rcl
mov
mov
test
add
popf
jb
nop
sub
lea
decb
and
xor
js
repnz
test
sub
cld
push
mov
jge
mov
pushf
enter
and
lret
stos
inc
testl
and
sub
inc
notb
cld
sbb
repz
inc
jmp
cli
cli
pop
jg
dec
cld
cmpl
mov
push
adc
out
dec
roll
xchg
pop
mov
int3
sub
cmpsb
popa
jge
sbb
dec
sbb
idiv
or
pop
loopne
fistpll
les
mov
iret
push
cld
cmpsb
jnp
les
jnp
pop
and
int
aas
add
loope
fs
sub
ror
and
inc
sbb
shl
xchg
mov
sar
or
pop
push
clc
jae
mov
imul
pop
shl
push
cltd
sub
test
cmp
xlat
enter
lds
or
imull
xorb
pop
out
data16
bound
pop
fstps
out
add
sub
mov
push
mov
pop
cli
adc
sbb
leave
cmp
jmp
or
dec
mov
fucomip
aas
jl
call
mov
adc
stc
inc
adc
cmp
imul
xchg
repnz
sti
insl
sub
js
outsb
pop
divb
fadd
in
test
sbb
gs
imul
sub
dec
insl
sbb
ss
pusha
and
add
jmp
out
stc
lods
lahf
lret
cld
mov
dec
mov
push
sub
inc
fcomps
jns
scas
rorl
xor
arpl
popa
xchg
jecxz
int3
push
inc
and
inc
add
fisubrl
iret
fmuls
push
leave
fidivrs
addb
dec
cmp
mov
icebp
movsl
pop
mov
je
mov
cwtl
cmpsb
sub
pop
fwait
dec
dec
dec
imul
lahf
lahf
fwait
mov
jo
jbe
scas
test
push
addb
add
add
es
lret
repnz
bound
pushf
loope
add
jg
pop
inc
inc
repnz
adc
add
cmp
dec
mulb
cmp
sbbl
add
rcrb
in
mov
jle
insl
fsubrs
push
loope
fucomip
testb
mov
fstpt
ret
push
je
push
movsl
mov
and
stos
push
fsubrl
or
movsl
ljmp
jnp
fistl
xlat
pop
lds
dec
ljmp
rcll
enter
mov
out
cltd
shl
jb
aas
aad
cmp
repz
jp
mov
sub
loopne
cltd
cmp
lea
push
iret
pop
es
ds
orb
add
dec
and
mov
ret
shll
push
or
add
outsl
mov
sbb
cld
cmp
dec
scas
es
aaa
cs
mov
sbb
mov
outsb
hlt
repz
and
sets
repz
js
or
rcrl
add
pop
fisubrs
push
lods
fwait
adc
xor
push
push
ja
sbb
cwtl
repnz
lcall
in
jno
and
add
jmp
pop
xlat
mov
inc
sbb
jae
mov
aam
sub
and
sbb
test
fldt
xor
int3
mov
pop
adc
iret
sub
sub
js
xchg
scas
loopne
xlat
outsb
ja
icebp
mov
cmc
mov
dec
nop
pop
dec
std
adc
mov
dec
add
pop
lret
cmp
hlt
popa
sub
icebp
lods
jns
popf
inc
iret
enter
hlt
adc
int
rcrl
or
mov
mov
movl
jo
sbb
sbb
push
mov
flds
out
repz
inc
aad
jbe
mov
pop
leave
int
pop
mov
insb
adc
push
sahf
jp
outsb
xorb
out
cli
pop
leave
xchg
lret
sbbb
mov
and
dec
fcoml
in
mov
and
sbb
dec
dec
rcrb
out
jae
sub
jne
jmp
lret
jg
pushf
and
and
mov
dec
cld
andb
and
cltd
push
sub
repnz
mov
push
les
ret
arpl
push
stc
sbb
nop
add
scas
sbb
mov
fnsave
ja
add
mov
fidivs
dec
push
out
test
out
mov
arpl
adc
xor
outsb
dec
dec
push
push
and
rcl
das
push
insb
pushf
cli
xchg
scas
imul
lret
and
mov
aad
clc
mov
clc
aas
mov
pop
pop
push
xor
sub
mov
inc
fs
int3
sbb
adc
leave
into
pop
les
aaa
adcl
lds
iret
adc
icebp
or
xchg
push
stc
cld
sub
hlt
aad
mov
jb
push
mov
int3
push
rorl
incl
jecxz
push
push
add
jns
orb
fnstsw
mov
xchg
pop
enter
cli
or
jo
vmwrite
bound
push
aad
stos
call
sahf
scas
xchg
jg
ss
push
out
adc
xchg
in
sbb
inc
imulb
sbbl
orb
nop
sbb
test
pop
movsb
adc
sbb
sti
sub
push
inc
in
test
popa
or
add
jb
js
fiadds
pop
fiadds
arpl
xor
pop
adc
fmull
mov
push
lcall
push
sub
cmpb
mov
mov
xlat
aad
fidivs
decl
loopne
scas
inc
and
int3
lret
pushf
pop
pop
jmp
push
popa
sti
mov
sub
fdiv
mov
dec
lahf
stos
dec
rcrb
pop
loope
dec
sahf
je
out
cwtl
psraw
mov
ljmp
pushf
cli
mov
dec
cmc
lahf
pop
mov
xor
aas
adcb
loopne
mov
pop
outsl
push
dec
jo
test
stos
or
fwait
xchg
sub
add
and
in
push
lea
mov
stc
scas
in
push
sbb
sub
loope
push
lcall
loope
in
fwait
xor
lret
jne
or
movq
or
sti
pop
sub
or
insl
sub
sbb
inc
pop
ret
and
push
and
push
test
cmpsl
add
adc
fistpl
test
sbb
movsb
jmp
cmp
loop
mov
out
addb
add
rorl
sarb
inc
icebp
sub
decb
jno
mov
fstl
pop
outsb
cmpsl
sbb
stc
mov
mov
adc
imul
pop
mov
push
cli
jo
out
out
push
in
and
vshufps
enter
xchg
icebp
dec
movsl
cmp
lret
testl
pop
pop
sbb
mov
sbb
ret
and
nop
fisttpll
fldcw
jo
push
rol
sbb
and
push
mov
and
cmp
xor
mov
pop
sbb
cmp
mov
mov
ljmp
sahf
clc
lds
jns
call
pop
loop
xchg
in
fwait
mov
cmp
push
push
aad
out
call
outsl
shlb
mov
sub
lret
cmp
into
pop
xlat
hlt
or
push
sub
push
add
cmc
jp
mov
lds
lea
scas
jecxz
or
icebp
jno
xchg
jl
es
mov
adc
xchg
scas
adc
lock
adc
lret
jnp
mov
mov
cmp
adc
ret
xchg
fsts
or
adc
dec
adc
sub
popa
pop
xor
pop
push
cmp
addr16
jge
lods
adc
pop
push
add
xchg
in
aad
cmp
sub
and
leave
xchg
pop
scas
xor
je
hlt
mov
pop
xchg
sub
cli
mov
sub
cmp
into
mov
or
xchg
sub
mov
das
movb
aam
and
insl
inc
test
shrb
outsb
cmc
nop
das
mov
jge
movsl
add
std
jno
stos
xchg
add
test
jl
xor
jecxz
push
hlt
mov
jo
xchg
sub
sbb
adc
ds
xor
pop
gs
icebp
negl
imul
dec
popa
inc
stc
pop
jns
iret
mov
mov
pop
loop
push
iret
jp
inc
notb
inc
lea
ljmp
xor
gs
cmpsb
jnp,pt
inc
mov
add
push
dec
std
mov
and
jmp
sbb
inc
fisubl
enter
mov
dec
pop
je
js
lds
and
mov
bound
movsb
jge
push
sub
rcll
and
out
jle
xor
sub
fnsave
adc
leave
dec
hlt
push
mov
jo
jmp
lret
clc
lret
mov
add
cmp
mov
jge
aam
push
sbb
lcall
add
dec
and
ss
icebp
pop
aaa
jmp
mov
inc
inc
xor
mov
jns
mov
rorb
sbb
into
push
and
sbb
inc
jbe
pop
into
mov
adcb
and
jmp
jmp
clc
xchg
xchg
inc
lock
inc
pushf
sbb
lahf
push
loope
insl
add
jns
push
ret
push
mov
jg
popa
adc
mov
cmp
jbe
repz
lret
test
adc
lret
inc
std
and
outsb
add
das
pop
lea
icebp
mov
fldl
sbb
mull
sbb
int
imul
loop
adc
sub
lods
insl
pop
lret
dec
add
mov
cmp
lret
or
pop
xchg
loopne
jl
mov
push
repnz
outsl
xorl
incb
or
jno
aam
xor
xchg
xor
push
hlt
scas
adc
mov
jg
xlat
ljmp
mov
dec
dec
hlt
test
lods
enter
dec
push
test
cwtl
mov
js
lcall
pop
xor
dec
push
pop
aad
cli
push
icebp
jl
lcall
sahf
mov
xchg
push
mov
adcb
and
or
mov
or
cmp
or
cmp
adc
push
sub
fxch
orl
jne
out
sub
jecxz
nop
lcall
mov
je
push
and
add
aad
lock
cmpsb
mov
sbb
shl
adc
cmpsb
daa
data16
repz
icebp
fdivl
scas
sub
mov
push
cmp
dec
mov
sbb
push
adc
out
addr16
push
pop
jne
cwtl
cmp
je
out
mov
mov
pusha
mov
cmp
mov
sahf
decb
fildll
pusha
inc
mov
jle
push
packsswb
dec
or
dec
sbb
adc
inc
or
sub
stos
jmp
cmp
in
test
insb
popf
mov
into
or
lret
movsb
mov
mov
pushf
sub
test
ret
mov
cmp
adc
mov
ss
inc
cli
xchg
jns
cmp
push
lods
jecxz
fisubl
or
js
jae
repnz
jge
cmp
inc
jnp
dec
popa
in
pop
lock
stc
mov
inc
shlb
fstl
and
idivb
cmp
les
mov
or
xor
inc
ficomps
dec
out
clc
gs
sub
mov
or
mov
jae
cmp
fs
cvtpi2ps
int3
lahf
movsl
cmpb
leave
xchg
jae
pop
loopne
jge
test
in
cmp
inc
mov
into
adc
pop
repz
inc
or
xchg
jp
ret
xor
pop
xchg
jmp
out
fsts
mov
or
and
shl
data16
clc
sbb
fdivrl
sub
pop
shlb
fldpi
fwait
negl
adc
inc
push
in
call
vaddss
lret
push
repz
dec
and
inc
mov
pop
pushf
pop
jo
cmp
sub
mov
gs
add
adc
and
stos
cmp
mov
dec
iret
jle
jne
in
ds
inc
dec
stos
out
fcom
jmp
shll
sahf
mov
and
mov
cmpsb
jno
repnz
loopne
push
jns,pn
fsubl
pop
sbb
enter
mov
inc
adc
pop
insl
test
xchg
jle
and
cmovbe
imul
shrb
mov
jnp
test
xchg
add
dec
xchg
shl
and
aad
rcl
sbb
xchg
mov
mov
mov
inc
adc
fucomp
adc
or
in
ret
and
ja
sub
testl
fisttpl
jmp
jnp
out
dec
xchg
aas
add
repnz
and
or
in
stos
out
jo
ja
sbb
imul
pop
sbb
add
add
inc
cmp
icebp
call
cmp
mov
out
aad
pop
sahf
lods
js
js
es
inc
es
popa
xor
outsb
inc
push
call
repnz
shll
push
subb
dec
pop
dec
outsb
add
bound
inc
test
push
push
lods
jne
cwtl
mov
addr16
stc
mov
gs
jecxz
pop
push
cmp
clc
cmp
shll
loopne
jne
out
insl
addr16
pop
dec
cwtl
pusha
aad
cld
inc
aad
je
and
in
jo
insb
adc
cs
pop
out
dec
cmp
mov
mov
fstps
push
aam
dec
loopne
mov
sbbl
dec
fmuls
sbb
and
ds
js
push
test
ljmp
loop
sbb
pop
fs
add
orb
into
or
fnstcw
shll
sarb
push
or
fldl
icebp
xchg
movl
jno
push
ss
es
stc
mov
repz
cmp
mov
movsl
cld
mov
inc
add
mov
mov
adc
outsb
daa
stos
mov
mov
ja
mov
shrb
icebp
inc
xor
xor
imul
fbld
push
mov
scas
sahf
sub
in
arpl
out
call
and
xchg
inc
mov
icebp
jbe
insb
and
or
adc
sbb
loope
in
mov
cmpsl
mov
out
xchg
pop
inc
sub
adc
cli
and
data16
inc
roll
pop
cmp
lock
adc
icebp
mov
xchg
pop
test
std
leave
jecxz
jge
mov
test
in
insl
sbb
inc
lret
or
pop
dec
cmc
sarl
and
fucomip
xor
mov
add
sbb
adc
push
inc
fsub
mov
add
cli
test
mov
or
add
mov
out
inc
xlat
leave
adc
fnsave
loop
cld
mov
fs
cmpsb
imul
mov
push
scas
insl
adc
les
lea
in
iret
push
ss
cwtl
aas
lret
bound
js
into
sbb
push
inc
data16
mov
xor
lahf
mov
ss
fnstcw
inc
xchg
mov
popf
stc
jg
sbb
sbb
nop
pop
loop
shl
repnz
stc
clc
jmp
inc
mov
push
xor
stos
loopne
or
sub
lds
push
rcr
sti
andb
lds
lea
sbb
rorb
cmpsb
xchg
inc
fwait
ss
stos
stos
push
and
xorl
cmp
out
pop
imul
jo
mov
mov
sbb
popf
pushf
je
inc
sbb
add
cli
daa
aam
xor
pop
mov
pop
xchg
mov
orb
ret
sbb
fwait
lods
jle
nop
int3
add
shl
pop
lock
jl
test
push
xchg
sbbb
icebp
js
cmp
insb
jp
and
movsb
cmp
sbb
inc
xchg
fidivrs
lods
pop
mov
fistps
and
pop
shl
inc
jae
pop
sarl
mov
push
frstpm(287
test
adc
movsb
or
test
or
es
stc
inc
movsl
in
ljmp
dec
mov
mov
arpl
xor
mov
stc
scas
das
push
mov
and
insb
add
and
and
sub
arpl
lret
cmpsb
cmp
xchg
cmp
mov
cmpsb
scas
nop
and
seto
mov
lret
ss
or
es
outsl
sub
cwtl
xor
push
out
push
nop
push
lds
cmp
movsb
fisubrs
fsubr
arpl
jo
jno
das
pop
jbe
pop
cmp
xorl
add
lret
lods
cmp
in
shr
xor
loop
xlat
mov
sub
clc
je
inc
bound
loope
push
fwait
repnz
jne
inc
mov
pop
mov
dec
dec
push
insb
subl
hlt
data16
cltd
sub
mov
fldt
xchg
loope
and
push
mov
push
mov
test
std
and
dec
iret
push
add
mulb
aas
xor
jg
iret
inc
bound
in
movsb
dec
mov
pop
outsl
mov
iret
decb
adc
outsl
dec
fimuls
sbb
mov
js
int3
daa
cld
cltd
in
lods
lret
or
mov
inc
cmc
lret
push
mov
aad
call
sbb
sbb
push
pop
push
mov
jns
fcomps
call
aaa
mov
stc
pop
adc
pop
out
mov
hlt
push
push
sahf
ja
ja
cmp
pop
into
icebp
aam
imulb
xor
jno
in
push
mov
sbb
fmull
dec
mov
xor
dec
and
cld
cmpsl
in
mov
mov
clc
xchg
rorl
push
in
xor
jle
push
dec
pop
fistl
rcl
push
jl
imul
jmp
cmpsl
xorl
xor
adcl
push
inc
enter
inc
enter
fld
mov
sub
movsl
mov
adcl
mov
enter
and
mov
andb
pop
dec
adc
pop
incb
movsl
jp
dec
inc
mov
sbb
aam
jnp
mov
ret
cwtl
fiaddl
cmpsl
bound
call
jmp
adc
dec
sbb
jge
cmc
bound
cmp
je
push
mov
cwtl
repnz
clc
mov
push
dec
test
or
jecxz
test
inc
aam
dec
dec
push
repnz
pop
outsl
or
es
jnp
cmp
pop
add
adc
mov
inc
jmp
call
leave
push
and
idivl
add
scas
je
fdiv
pop
shll
push
mov
fstp
fwait
loopne
fstpt
mov
negl
or
mov
inc
dec
loopne
rcrb
jge
fmull
lret
mov
fiaddl
xor
jl
push
pop
sbb
xor
mov
push
dec
jecxz
imul
add
add
call
aad
or
sti
cli
mov
and
mov
je
fisttpll
mov
jno
xor
and
enter
jle
ds
fsts
iret
test
inc
inc
outsb
push
mov
gs
fwait
cwtl
shl
jmp
xchg
jle
mov
add
push
mov
xor
jp
out
jecxz
or
fsubrl
fldenv
in
sbb
mov
fcmovb
gs
into
cmp
call
popf
cmp
cld
mov
lock
push
imul
cmp
jne
sbb
inc
les
xlat
sub
hlt
and
lret
jb
dec
cmp
nop
je
mov
lret
gs
sub
movsb
push
mov
mov
lock
jmp
outsb
adc
dec
jno
sub
lret
imul
fucomip
loopne
push
xchg
cmp
inc
push
cmp
in
push
lcall
xchg
cmp
add
arpl
dec
cmpsb
imul
arpl
jmp
xchg
pop
mov
push
in
push
mov
daa
push
push
sahf
inc
outsl
loop
push
jb
xchg
sub
mov
icebp
dec
sbb
push
cmp
sarl
into
jl
push
sbb
push
lret
adc
adc
cmpsb
imul
leave
clc
in
fsubr
cli
mov
fiaddl
movsl
adc
int3
add
mov
lods
arpl
fidivl
adcb
addl
clc
add
mov
je
in
ss
jae
mov
lock
call
or
fimuls
push
test
stc
lret
adc
push
sahf
scas
or
jno
xlat
sub
xchg
lcall
mov
pop
xchg
adc
dec
dec
lcall
push
inc
mov
int3
lock
sbb
adc
pop
aaa
add
icebp
mov
inc
js
imul
rolb
or
push
cmpsb
add
filds
add
in
sub
mov
or
or
outsl
cmp
pop
imul
leave
mov
push
xchg
loope
mov
push
pop
cld
out
jae
into
pop
clc
stc
jb
mov
pop
sub
gs
jle
add
xchg
add
xor
or
cmc
arpl
inc
test
sbb
rcr
mov
stos
mov
inc
lret
push
gs
aaa
int3
int3
ja
out
aaa
ret
or
xchg
test
mov
mov
cld
pushf
mov
into
pop
jmp
aaa
in
rcll
xchg
jns
or
in
adc
negl
xchg
lock
adc
imul
add
xchg
ret
inc
and
add
imul
mov
ret
jo
hlt
mov
imul
mov
out
push
jge
jmp
mov
cmp
dec
add
dec
in
jnp
outsb
in
adc
mov
push
mov
and
push
xor
daa
push
dec
add
mov
sarl
sub
popf
dec
mov
jae
mov
jecxz
int
ds
push
mov
shll
in
lock
insl
mov
adc
add
jbe
leave
mov
je
xor
or
mov
jge
in
loope
into
push
pushf
repz
insb
add
mov
inc
je
addr16
push
or
inc
cmp
sub
lods
ja
sub
cwtl
cmpsb
lock
cwtl
sbb
add
lods
and
nop
xchg
lock
cmp
fimuls
xor
and
push
imul
mov
stc
pop
in
cmpsl
xor
sub
imull
cltd
mov
inc
pop
or
and
pop
pop
imul
in
stos
xchg
stos
sub
push
stos
add
bound
mov
mov
adc
addr16
leave
out
jno
xor
daa
in
js
cmp
popl
add
ljmp
mov
mov
pop
out
and
xchg
cs
push
lea
movsb
mov
mov
pop
jecxz
loope
movsl
jns
xchg
dec
jns
loop
shll
add
and
pop
lahf
jno
nop
aad
add
pop
and
scas
mov
stc
mov
sbb
fimull
push
and
inc
pushf
and
inc
pusha
fnstcw
les
cltd
cmpsb
out
jl
outsl
and
push
sub
mov
mov
aad
add
inc
xor
jns
mov
je
mov
pop
mov
mulb
sbb
pop
lret
push
jg
outsl
ljmp
sub
out
inc
cmp
movsb
add
fstpl
in
ja
jne
out
push
lret
icebp
or
sbb
fcompl
loopne
sbbl
scas
fistpll
and
into
mov
icebp
mov
sarb
adc
jg
bound
shr
cwtl
fldl
rcl
movsl
testl
sub
fcoms
mov
pop
xor
inc
adc
cmp
dec
sbb
mov
iret
jns
decl
std
pusha
int
xchg
ss
out
push
ljmp
cmp
insb
bound
cli
mov
dec
and
sbb
xor
push
out
insl
out
jns
xchg
mov
xor
in
push
xorl
call
repz
sub
je
mov
jno
imul
xor
xor
mov
movsb
cs
mov
jecxz
aaa
imul
mov
mov
or
jo
stos
mov
ds
test
popf
xchg
pop
xchg
shrl
inc
call
add
inc
fmul
pop
push
dec
ret
es
das
out
sbb
movsb
and
ds
inc
add
ljmp
mov
push
jb
movsb
mov
push
das
mov
xchg
das
mov
mov
dec
dec
aam
mov
stc
inc
sahf
insl
add
stos
popf
rcl
data16
lret
dec
adc
jno
movsl
dec
loop
and
add
or
fwait
std
fidivl
cmpsb
enter
shrl
sub
and
aam
leave
or
mov
lcall
in
popf
jmp
int
xor
xor
and
out
sbbl
out
push
sti
dec
cmovno
pop
fildl
adc
inc
sub
dec
iret
pop
xor
leave
adc
into
in
iret
cmp
mov
pop
push
hlt
pop
dec
insl
mov
cmpsl
push
addr16
movl
xchg
bound
or
push
popf
mov
cwtl
jl
ret
movsb
xchg
movsb
orb
testb
jmp
arpl
adc
ljmp
cmp
enter
repz
fxam
stos
mov
and
sub
clc
adc
ss
stc
push
add
adc
or
aas
mov
push
shrb
dec
data16
mov
hlt
mov
and
sub
sub
push
into
pop
cmp
ljmp
popa
sbb
inc
mov
mov
outsb
stc
xor
mov
mov
add
cmp
data16
jmp
xor
shrl
jg
mov
cltd
jle
mov
adc
adc
shl
enter
incb
sbbl
andb
icebp
push
fdiv
cwtl
cmp
add
rol
xchg
sub
add
addr16
out
shr
jnp
hlt
mov
gs
in
inc
adc
nop
sub
push
sub
jg
inc
push
int3
mov
lret
push
imul
push
xor
jmp
push
sbb
sbb
fldcw
out
outsb
fcompl
fwait
push
daa
mov
jne
mov
out
data16
rcrl
adc
inc
add
sbb
lcall
orl
jnp
mulb
ret
les
xor
or
iret
aaa
push
push
dec
pop
ret
mov
js
add
pop
scas
sub
ss
cmpsl
inc
ret
daa
hlt
sbb
mov
into
imul
ds
jb
ffreep
mov
int3
push
icebp
imull
cld
jg
cmp
add
iret
fcomip
push
cmovbe
jne
cmpsl
push
cwtl
shr
cwtl
inc
lret
adcb
arpl
js
sbb
nopl
cltd
xchg
xchg
jge
enter
popf
insb
sbbl
call
outsb
pop
movsb
inc
scas
cmp
xchg
push
sbb
call
pusha
jmp
rorb
jbe
gs
xchg
xor
cwtl
pop
jo
mov
and
mov
decl
dec
adc
std
pop
push
jle
pop
lods
xchg
add
sub
mov
pusha
sub
sbb
es
add
push
out
cmp
push
icebp
sbb
movsb
ja
sub
popw
mov
cmp
or
jge
cmp
les
sbb
and
sub
das
push
and
pop
push
out
mov
shll
pop
cmc
mov
loopne
sbb
mov
or
mov
fcmovne
imul
std
mov
inc
xor
lock
dec
or
cmp
sbb
jb
push
pop
sbb
insb
xchg
sub
test
add
aad
sub
push
adc
xor
adc
fsubrs
push
xchg
push
lods
jl
push
push
sbb
ret
inc
stc
sub
sub
push
or
orl
push
mov
into
cmp
sub
das
test
mov
rcrb
arpl
jo
jl
inc
push
arpl
adc
movsl
cmp
icebp
mov
lods
cmp
sbb
gs
ja
jno
jnp
sub
in
data16
cmpsl
or
cmc
or
cwtl
mov
and
je
pop
xor
lcall
aaa
and
inc
insl
hlt
pop
jnp
enter
notl
pop
xor
pop
icebp
push
dec
movsl
push
add
fcomps
or
je
arpl
cli
jno
movsl
mov
and
sub
dec
xor
sti
push
add
fdivrl
push
movsb
int3
das
popa
jbe
pop
xor
xchg
sbb
ret
ret
std
jo
iret
sub
jp
add
out
mov
and
clc
push
add
lret
push
icebp
lock
jmp
mov
jp
cs
mov
push
pop
mov
cltd
stos
test
mov
outsb
jl
in
jno
cmc
xor
bswap
addl
rorl
pop
jne
add
mov
gs
pop
das
dec
lds
decb
or
fldcw
push
jae
xchg
mov
fsubs
jae
xchg
fidivs
xor
mov
mov
jbe
fistps
or
std
cwtl
add
xchg
mov
pop
and
cmp
and
or
pusha
jns
bound
bound
adcl
cmp
adc
sub
stos
xor
outsl
inc
test
xchg
imul
sbb
mov
dec
cli
pop
jb
mov
sub
in
lods
push
leave
mov
out
mov
repz
lahf
xor
mov
xchg
sub
hlt
ret
and
movsl
mov
and
fnstenv
adc
ror
push
and
in
arpl
adc
mov
and
test
dec
roll
dec
push
dec
fcoml
add
cld
mov
mov
repz
je
sub
outsb
popf
shl
sti
mov
ror
push
mov
sbb
xlat
stos
fiadds
or
mov
or
xchg
jp
in
inc
dec
and
push
add
sub
xor
inc
xlat
cmc
pushf
sub
mov
jle
in
push
scas
scas
sbb
clc
movsb
aam
movsb
xor
xchg
addb
fnstcw
push
pop
mov
aas
mov
daa
xchg
pop
popf
lds
mov
xchg
call
aaa
jp
dec
test
jae
cmp
imul
and
sub
mov
fisttps
mov
or
push
xchg
or
inc
movsbl
cmp
pop
adc
jbe
in
add
rcr
sbb
out
push
and
mov
fidivrl
xchg
jecxz
adc
sbb
pop
aad
dec
inc
inc
sbb
jg
and
iret
idivl
mov
sarb
cmp
mov
repnz
mov
mov
mov
jb
xor
pushf
mov
loopne
pop
jmp
mov
repnz
sub
ret
sub
jns
call
add
fidivs
push
fisubrs
xor
bswap
mov
in
mov
adc
lret
bound
add
add
mov
addr16
test
adc
sbb
aam
cld
pop
adc
je
in
out
arpl
mov
sub
imul
iret
push
dec
or
fwait
sub
lea
mov
sbb
and
mov
inc
or
push
xor
icebp
mov
xchg
nop
mov
lds
daa
mov
push
scas
jb
inc
jns
cmp
aaa
cmp
sub
jle
xchg
jo
insl
sti
enter
sbb
jle
push
adc
shll
push
repnz
jl
mov
popf
mov
xchg
fildl
xor
fdivl
mov
mov
mov
out
hlt
lret
push
pop
loope
ss
mov
adc
add
outsb
cs
repz
stos
into
movsb
push
fldl
test
cmp
and
xchg
aas
mov
push
jge
pop
sahf
lods
mov
jp
sbb
jmp
mov
nop
out
cld
roll
inc
push
inc
mov
pop
dec
add
adc
or
push
test
decb
movsb
lods
clc
sub
out
les
pop
xchg
inc
jmp
and
xor
add
shll
inc
aam
testb
in
mov
sti
add
and
mov
adc
enter
sbb
pusha
test
addl
sub
jns
push
iret
int
jge
cltd
push
mov
ds
mov
popf
inc
mov
xchg
mov
shlb
loop
adc
push
insb
jno
fwait
and
xlat
cld
bound
dec
cmp
mov
lods
dec
inc
add
in
and
test
add
pop
ljmp
inc
fisttps
or
daa
push
lods
jle
sti
mov
jnp
outsb
insb
mov
dec
mov
and
adc
stc
rolb
mov
adc
and
sub
inc
loopne
jns
scas
call
pop
dec
ljmp
cmp
clc
fdivrl
mov
test
in
xchg
addr16
fistps
mov
inc
mov
dec
shlb
push
std
pop
fisubrl
push
cs
insb
add
lret
cmpsl
and
sbb
pop
sbb
xchg
dec
jbe
xor
lds
push
loop
and
shrb
push
xchg
negl
jmp
ret
dec
mov
stc
out
mov
xor
fcompl
xchg
cmpsl
hlt
adc
jns
stos
fcomps
in
mov
mov
jg
test
insl
fildl
sbb
lea
adc
iret
jnp
mov
xlat
mov
stos
xchg
mov
jmp
in
jecxz
mov
or
sub
add
xor
inc
lret
mov
or
mov
fwait
adc
popf
sbb
mov
ret
dec
sub
cld
pop
test
ss
sub
push
stos
jp
test
jecxz
fbstp
popf
mov
jb
adcl
push
sub
out
jmp
push
decl
shll
in
cmc
mov
cli
cmp
dec
aam
adc
xchg
xor
ljmp
xor
dec
ret
sub
aaa
call
in
or
pop
adc
repz
or
cmpsb
cmpsb
imul
aam
jg
cmp
inc
push
lret
xor
out
mov
dec
in
pop
cmp
ret
jle
rcll
mov
incl
push
out
dec
xlat
scas
cld
xor
mov
fcoms
into
in
call
dec
mov
jecxz
or
cli
add
cmp
enter
outsl
jecxz
sbb
xor
js
mov
out
jne
jle
sbb
jae
sbb
dec
mov
loop
pop
imul
dec
lds
popf
mov
loopne
jge
sub
or
pop
dec
sub
repz
mov
cwtl
adc
sub
cmpsb
pop
cmc
ja
les
mov
popf
xchg
adc
or
mov
sarb
sbb
subl
imul
cmp
sub
jle
cs
shr
daa
movzwl
dec
mov
rcrl
cmp
addr16
xchg
cltd
gs
ret
push
dec
add
jg
outsb
loope
adc
jne
push
dec
mov
fcmovnb
sub
outsb
pop
sbb
int3
or
and
jbe
out
add
fisubrl
inc
xor
add
and
ljmp
xchg
jbe
pop
xchg
mov
sub
je
inc
inc
mov
fs
rcl
lret
cld
xchg
sbb
mov
shrb
aam
jge
mov
inc
sahf
lahf
cmp
add
mov
movsb
jns
js
jl
call
cmc
cs
lcall
or
enter
clc
mov
xor
add
hlt
rclb
cmp
mov
adc
movsl
jp
xchg
andb
pop
ljmp
jl
cbtw
sbb
jbe
jne
push
sub
cmc
mov
out
xor
mov
shll
mov
push
hlt
push
mov
rclb
dec
aaa
movsl
repz
adc
mov
jge
xchg
jo
xchg
pop
test
cmpsb
pop
repz
cmp
cmp
rorb
mov
stos
push
imul
add
gs
scas
mov
das
fs
lds
fidivrl
mov
test
adcb
push
add
cmp
inc
sbb
add
cmc
adc
cltd
and
xchg
scas
lock
cmp
mov
cmp
or
rorl
cli
in
and
clc
addb
mov
mov
pop
mov
push
out
mov
adc
in
adc
pop
movb
sbb
mov
inc
push
cli
or
dec
repz
ss
lret
mov
imul
sub
pushf
addr16
outsb
mov
lahf
jo
ret
les
jae
cmpsb
inc
notl
mov
fisubl
mov
sti
data16
pop
cwtl
clc
xchg
pop
sahf
adcl
cmp
cmpsb
add
call
inc
push
call
lret
pop
pop
cli
ja
aaa
pop
xor
inc
mov
daa
ljmp
addl
fwait
movsl
outsb
add
cmp
mov
xor
out
ret
jle
push
sub
pop
loope
fiadds
lea
and
test
out
inc
les
inc
add
shrb
jo
subb
or
xchg
cmp
scas
inc
adc
jbe
mov
xchg
xchg
push
and
or
imul
out
add
jb
stos
push
lret
xchg
in
push
pop
inc
push
lahf
dec
and
cld
push
arpl
popa
enter
or
mov
and
jl
test
mov
push
negb
aas
call
mov
sub
sbb
sarl
push
pop
xchg
repnz
out
pop
jecxz
pop
leave
and
cld
cmpsb
adc
lahf
out
lods
fstpt
sub
cmpsb
lahf
mov
addr16
mov
add
faddl
fmull
xchg
dec
rcll
push
mov
add
xchg
fwait
lods
xchg
repz
rclb
fidivl
mov
fwait
cmp
ljmp
lds
mov
sub
sub
cmpsb
scas
inc
xchg
rorl
jl
leave
fisttps
test
in
outsb
mov
loope
sub
mov
adc
in
shrb
jns
or
bound
pop
fmull
sub
cmp
lahf
dec
aad
dec
and
into
lods
fcomp
mov
fisubl
xor
fnstcw
push
xchg
fildl
es
inc
push
dec
push
or
sbbl
mov
shl
stc
enter
push
stos
inc
dec
adc
daa
xor
test
ljmp
fwait
addr16
cmp
mov
push
cmovg
adc
inc
mov
or
xor
ret
inc
testl
outsb
addr16
add
roll
outsb
rol
push
dec
mov
or
inc
mov
jns
push
pop
cmp
pop
lret
hlt
jo
fdivl
dec
arpl
inc
out
lods
push
adc
push
mov
dec
notl
mov
repnz
dec
and
xchg
adc
loopne
sti
inc
mov
fidivrl
mov
negl
mov
in
or
call
mov
xchg
cs
repz
pop
sti
mov
aam
dec
fistpl
sbb
push
addr16
push
pop
xchg
inc
lcall
sbb
loopne
dec
loopne
mov
js
pop
lret
in
leave
inc
adc
pop
insl
mov
aam
inc
fisubrs
rcrb
or
insb
arpl
push
rcrb
push
sbb
fsts
adc
lret
push
rorl
add
stc
stos
xchg
pop
xor
aas
insl
jns
pop
adc
and
rclb
and
sub
pushl
adcb
add
lea
fwait
sahf
xor
call
sbbl
dec
lcall
popa
sub
sahf
imul
mov
out
hlt
inc
mov
pop
dec
test
jle
fcomps
pop
push
jno
fisubl
pop
adc
xchg
add
dec
insb
pmulhw
cltd
stos
and
push
dec
inc
je
jae
enter
mov
add
and
push
dec
in
pop
imul
idivb
movzbl
mov
xchg
shr
mov
imul
jmp
mov
xor
add
iret
das
pop
out
pop
cs
stos
repz
inc
inc
lods
sub
sbb
inc
aam
fdivrl
inc
cmc
inc
dec
add
and
ja
mov
outsl
stos
iret
rolb
jae
mov
mov
and
inc
or
jno
cmpsb
in
mov
push
or
pop
andl
xchg
nop
fsts
pop
push
xlat
lock
shlb
daa
or
pop
or
jp
mov
fcmovne
cli
popf
add
and
lea
dec
fisubs
push
arpl
add
fdiv
ret
hlt
sbb
icebp
rolb
and
arpl
gs
xchg
xor
and
int
int
cltd
push
mov
inc
shrb
in
in
dec
or
or
mov
fwait
mov
pop
jno
aam
adc
or
imul
adc
sub
pop
sbb
push
test
gs
dec
cmp
xchg
jecxz
dec
inc
cltd
cmc
imul
aam
dec
dec
roll
and
aaa
pop
je
cmp
sub
mov
iret
aad
shlb
cwtl
or
idivl
mov
push
in
mov
add
add
ret
scas
call
cmc
lods
inc
fwait
push
insl
ja
xor
jns
ret
shll
lods
dec
push
or
rcrb
mov
adc
mov
in
insl
ljmp
jmp
sbb
cmp
dec
popf
cltd
imul
adc
push
pushf
mov
das
cmp
push
push
enter
daa
sub
xchg
inc
mov
cmp
insb
repnz
jns
or
lcall
add
les
mov
fidivs
dec
adc
rep
sar
outsb
jg
pop
frstor
cmp
arpl
push
mov
sub
stos
xchg
cmpsl
test
bndstx
scas
fisubs
inc
push
and
add
cwtl
jle
addr16
jae
mov
dec
fildl
xlat
jmp
hlt
cld
ret
mov
fmull
mov
cmp
mov
lds
mov
scas
jbe
loopne
pop
lcall
mov
pop
insl
and
ret
andb
pop
cld
flds
das
fnstenv
sub
scas
fidivrs
clc
imul
pop
or
adc
jbe
andb
sahf
push
sub
xlat
ds
pop
push
mov
popf
sarl
rolb
mov
popa
inc
cmc
lods
js
jo
je
mov
jns
xor
ja
add
cmovg
jbe
lods
sub
divl
out
mov
jg
add
ficompl
mov
bound
xchg
mov
mov
pusha
push
mov
enter
jg
or
fbld
sti
stos
pop
mov
jo
call
sbb
sahf
mov
lret
mov
test
xor
test
push
lahf
test
aam
les
enter
cli
or
mov
ljmp
out
aad
push
mov
push
in
cld
or
mov
dec
cmc
sub
xor
xor
dec
mov
and
outsb
gs
pop
notb
add
scas
out
or
mov
roll
roll
sarb
push
test
cmp
cmpsl
jbe
xchg
mov
pop
push
pushf
cmc
sub
fstpt
sahf
add
pop
ffreep
mov
adc
rol
mov
fs
pop
xchg
mov
ds
dec
ficoml
mov
mov
fildll
sub
test
jg
test
es
jnp
popa
cmpl
pop
loopne
pop
out
cmp
in
aaa
inc
punpckhdq
push
push
mov
sbb
ss
and
fidivrs
pop
push
test
pop
lahf
mul
mov
inc
fcompl
pop
xlat
mov
pop
and
arpl
xchg
add
test
dec
out
cmc
jmp
sbb
data16
mov
ja
adc
out
stos
dec
jno
sub
ljmp
mov
into
movsl
jecxz
and
insb
add
mov
cmp
jg
cmp
sbb
dec
mov
ss
sub
aas
add
add
cmp
imul
call
icebp
stc
xor
cmpsb
cld
push
repnz
adc
pop
dec
add
and
repnz
jp
xchg
jns
lcall
lods
testb
shll
jns
inc
lret
mov
imul
out
inc
mov
push
push
xchg
ds
lcall
icebp
mov
push
imul
xchg
push
pop
insl
sub
aas
pop
insb
repnz
sub
shufps
or
clc
and
int3
lret
lock
mov
enter
jo
push
cmp
mov
mull
cmp
mov
and
mov
pop
cmp
shrl
popa
cli
jmp
test
jmp
and
push
out
xchg
inc
rorb
sbb
jle
or
jg
cmp
xchg
outsb
std
pop
ficomps
mov
and
stos
out
xchg
xchg
int3
jnp
inc
jmp
sub
sbb
je
or
push
mov
mov
sub
sbb
sti
in
or
mov
pusha
cmp
test
mov
push
xlat
inc
xchg
mov
pop
lret
cld
mov
xchg
or
cltd
sti
fldcw
ret
jo
xorb
mov
roll
push
mov
cmp
rorl
mov
adc
inc
jp
cmp
cmp
pop
dec
pop
xchg
and
scas
ficoms
jne
xchg
rcrb
nop
gs
call
aam
mov
ficoms
push
neg
je
mov
push
repz
les
aaa
push
jne
in
addr16
addr16
mov
pop
adc
xchg
sbb
mov
jmp
pop
inc
imul
pop
stos
sarb
ret
hlt
xchg
cs
adc
pop
leave
pop
mov
test
push
int3
scas
insl
repnz
ss
inc
mov
jp
inc
pusha
out
mov
repz
es
sub
inc
pop
inc
repz
fnstenv
push
rol
mov
outsb
xor
movsb
shrl
test
mov
push
push
enter
mov
imulb
mov
sbb
loopne
ja
arpl
cmp
or
adc
imull
loop
lcall
fistpll
arpl
push
dec
out
jbe
and
xchg
ss
adc
sbb
ds
das
jo
movsb
pop
lea
repz
add
pop
mov
stos
inc
inc
test
ret
fistpl
mul
lcall
jmp
insl
inc
jns
cmp
lock
mov
mov
fs
lock
mov
xor
dec
imul
pop
pushf
jns
into
add
pushf
mov
xchg
mov
adc
jae
cld
ret
outsb
and
cwtl
orb
stos
cmp
mov
mov
xor
pop
cmc
mov
add
ret
adc
mov
gs
rclb
jge
adc
jg
scas
cmp
lds
dec
popf
bound
sbb
call
or
into
push
cmp
push
testb
out
sahf
cltd
outsl
adc
repnz
rcll
movsl
sbb
cmp
int3
dec
movsb
aaa
cmp
push
lret
data16
xor
lcall
pop
in
nop
test
rolb
ret
fimuls
pop
lea
adc
push
cmp
push
stos
sti
pop
insb
frstpm(287
pop
and
push
mov
mov
add
sbb
je
popa
into
roll
cwtl
adc
sub
jnp
cmovae
push
movsb
shrb
mov
fisttpll
push
pop
movsb
xchg
insb
add
scas
add
lretw
shll
cmp
xlat
sti
jo
ret
pop
mov
xor
mov
adc
fldcw
inc
inc
fsubl
das
std
rorb
jne
cmc
mov
push
or
xchg
lret
mov
dec
sbb
pop
push
mov
jmp
repz
push
add
mov
pop
movsb
pop
push
jge
mov
ljmp
fs
cmpsl
mov
xchg
cld
outsb
sbb
sub
mov
repz
inc
fildll
dec
sbb
pop
cmpb
inc
in
xchg
insl
pushf
and
mov
lds
loope
mov
inc
sbb
arpl
or
das
add
mov
enter
adc
dec
xor
push
fstps
dec
jb
mov
pusha
cwtl
dec
and
add
cmp
jmp
cmp
add
pop
movb
sbb
test
or
insb
ret
repz
jp
into
xchg
cmp
or
adc
xchg
mov
dec
pop
lret
xchg
cmpsl
mov
into
ljmp
ficomps
comiss
mov
shrw
add
je
mov
addr16
push
mov
repnz
or
pushf
in
mov
lret
jge
cmpsl
sub
mov
sbb
mov
dec
repnz
jecxz
jo
je
mov
repnz
pop
mov
adc
clc
cld
sub
mov
fucomp
cltd
mov
movsb
cmc
pop
loop
divb
or
dec
mov
pop
inc
or
jae
shlb
xor
fisttpll
ret
aaa
out
mov
xchg
mov
or
filds
jo
test
insl
movsb
push
loope
cltd
adc
or
sub
fldl
ret
push
push
mov
insl
lret
and
xchg
int3
iret
hlt
add
stos
push
icebp
inc
cltd
adc
inc
push
fdivrl
lods
inc
or
pop
push
sbb
popf
les
int
lds
or
ror
rcrl
push
cltd
out
leave
fbld
inc
push
in
xor
pop
jmp
mulb
repnz
out
sub
add
xor
xchg
flds
stos
mov
dec
sub
ja
push
cmc
xor
jg
daa
sbb
sbb
cli
fwait
mov
test
cmova
push
orb
and
cmp
or
mov
outsl
pop
pop
scas
mov
mov
dec
ljmp
stc
cmp
out
lods
xchg
add
cmp
lds
insl
call
xor
popf
scas
sbb
push
inc
into
cmp
in
mov
xchg
insl
leave
or
xchg
mov
repz
mov
ret
les
ss
xchg
out
pop
sub
mov
sub
loop
das
mov
pop
push
inc
push
subb
xorl
fdiv
cmp
in
adc
jecxz
fdivl
mov
dec
pcmpgtd
ja
mov
push
xor
lock
dec
arpl
push
loop
pop
fdivrp
pop
ja
cwtl
cmp
push
stos
nop
jb
js
sbb
sub
out
cwtl
repnz
pinsrw
mov
sub
xor
mov
mov
inc
fucomi
stos
popa
enter
stc
or
pop
sub
rorl
int
and
lea
cmpsl
test
inc
jge
jne
out
cli
cld
inc
fwait
or
mov
pop
repnz
adc
mov
mov
cs
scas
jle
mov
sub
stos
fwait
mov
daa
loopne
cld
sub
add
xor
mov
movsb
test
je
xchg
je
or
subb
mov
push
adc
xchg
aas
mov
push
xrelease
inc
rep
adc
cmp
mov
mov
mov
fcmovu
xchg
nop
inc
mov
jae
shrb
pop
mov
leave
xor
lods
dec
lahf
push
sahf
sbb
mov
into
pusha
ljmp
aaa
push
adc
xchg
je
das
jl
rclb
fiaddl
aam
mov
pop
sbb
sub
or
fisttpl
or
pop
andl
leave
cltd
jecxz
add
pop
jbe
loope
popa
adc
cmp
lcall
lcall
inc
fstpt
or
mov
stc
push
cltd
dec
sbb
dec
scas
negl
mov
out
stc
movsb
cmpsl
into
push
in
fstp
call
push
stos
jns
mov
int3
xchg
rol
mov
and
stos
adc
cmp
xor
cwtl
pop
push
pop
in
pop
pushf
loop
lea
or
pop
test
mov
imul
leave
outsb
add
pop
add
or
rol
je
icebp
pop
cld
and
jl
cmpsb
pop
add
pop
push
mov
gs
movsb
mov
mov
movsl
sahf
scas
dec
add
mov
dec
ss
mov
cmp
or
mov
mov
lods
fisubs
or
jnp
movsb
cmp
ficoml
test
jb
ret
das
cli
int3
mov
test
out
adc
int3
fnsave
sbb
jle
in
sbb
js
int3
les
inc
fs
pop
mov
xchg
xor
test
cmp
push
ret
cmc
lret
scas
sbb
ret
leave
pop
cmpsl
addr16
divl
lahf
dec
mov
jp
sub
out
out
xchg
inc
lea
push
out
xchg
rolb
in
in
adc
push
daa
cmp
adcl
add
aaa
pop
inc
inc
adc
das
rcl
or
in
push
mov
aad
xor
jns
xchg
cmpsb
stos
jecxz
ficoml
jb
ss
and
inc
mov
xchg
fsubs
int3
sub
pop
lret
xor
mov
mov
inc
cld
fmuls
adc
add
mov
jne
in
outsb
das
cmp
sysret
cmpb
push
xor
enter
rorb
adc
movsl
mov
or
push
mov
in
ret
lea
jbe
add
push
fwait
inc
dec
mov
adc
roll
cli
loop
inc
xchg
and
push
cltd
enter
lds
sub
rcl
pop
cmc
ret
jbe
loope
inc
fdivrs
lds
mov
mov
pusha
xor
call
mov
ret
popa
jbe
imul
adc
jnp
inc
jbe
adcl
add
inc
subb
jno
cmp
out
sahf
in
in
out
lret
sub
xor
lock
xor
lods
add
or
sarb
leave
test
popl
push
mov
xchg
ljmp
js
push
icebp
cmpl
in
xchg
jbe
mov
xlat
adc
sub
jle
push
xchg
ljmp
decb
dec
adc
dec
adc
xchg
nop
out
sub
aaa
aam
push
add
push
ss
mov
test
subb
imul
push
pop
repnz
mul
inc
leave
bound
mov
mov
int3
cmp
xor
aad
mov
mov
call
inc
fdivrl
cmp
out
dec
rcrl
lcall
ja
or
cmp
shrb
incl
or
lock
and
data16
mov
mov
inc
pop
jge
push
cmp
fucom
pop
add
sbb
dec
pop
push
pop
loop
push
jne
ja
xor
and
cwtl
sbb
cltd
inc
popa
push
inc
rcr
inc
loop
bnd
mov
imul
dec
dec
jae
imul
test
xchg
and
cmpsl
out
inc
and
add
jnp
fldl
andl
aad
pop
in
sub
add
loope
daa
push
mov
xor
xchg
ret
adc
aaa
pop
pop
dec
fdivs
aam
mov
cmp
jno
sarl
in
dec
sbb
jl
aam
daa
xlat
or
mov
mov
dec
fdivs
movsb
repnz
jmp
xchg
insb
pop
pop
or
jp
fists
push
out
lods
sar
inc
ficompl
xor
mov
push
xchg
test
in
cltd
out
fucomp
sbb
sub
ret
sub
or
mulb
dec
cmp
sub
cmc
inc
mov
jno
dec
movsb
pop
cmp
pop
jl
ror
insl
scas
jge
push
sub
outsl
inc
pop
push
dec
push
mov
sub
orl
push
addr16
xchg
add
xchg
dec
lods
or
adc
das
addr16
ret
fistpll
lcall
mov
pop
nop
bound
mov
ud0
and
mov
nop
loop
into
rcll
cmp
dec
bnd
fsubrs
or
cmpsb
xchg
adc
sbbb
ljmp
and
mov
adc
cltd
sahf
cmp
lds
mov
push
aam
mov
cmpsl
mov
in
out
jne
setl
cmpsl
inc
std
xchg
fmulp
or
imul
mov
sub
pop
dec
ret
hlt
loope
mov
cld
and
jno
xchg
mov
cmp
adcl
jp
movsb
lahf
jg
jae
cmp
and
repnz
jno
les
shrl
fnstsw
mov
loope
rcll
cmp
pusha
dec
push
shll
pop
insl
loop
ret
fcmove
sub
jo
push
lods
fists
ret
adc
jle
sbb
jecxz
or
or
add
pop
das
je
adc
in
or
add
pop
les
sbb
push
int
addr16
add
inc
loop
jae
inc
scas
sarl
shll
test
lock
inc
dec
xor
test
bswap
or
jae
arpl
gs
sbb
fs
je
mov
push
ljmp
jb
mov
fsubs
fs
and
cld
push
shll
xchg
outsl
add
sub
adc
add
xchg
outsb
inc
dec
xchg
cld
mov
mov
out
adc
mov
xchg
dec
xor
jne
push
sahf
dec
mov
pushf
xchg
or
int
dec
pop
fsubr
int3
and
stc
test
stc
xchg
mov
icebp
add
mov
or
cmp
aam
test
lret
es
lcall
xchg
enter
xor
mov
jns
jo
cli
int3
and
aaa
mov
adc
ljmp
cmp
dec
repnz
stos
cmp
psrlq
dec
push
insl
testl
pop
in
cmp
pusha
stos
std
add
ljmp
inc
cmpsl
xchg
in
aad
cmpb
dec
inc
pop
jge
mov
mov
and
iret
sbb
or
adc
push
mov
iret
clc
out
and
pop
xor
mov
cld
test
inc
jp
sub
in
imul
pop
scas
test
les
cs
pop
ss
arpl
adc
shrl
mov
pop
orb
jae
jns
addr16
inc
add
movb
mov
loop
fcoml
add
out
dec
xor
pop
test
mov
dec
adc
and
xchg
mov
mov
bsr
ljmp
ljmp
sbbl
addr16
push
inc
sub
mov
lods
test
inc
xor
xor
sub
repz
or
inc
sbb
and
subb
repz
jo
and
cltd
stos
inc
mov
jb
ret
int3
insb
and
decl
and
and
ds
sbb
mov
into
lock
leave
lds
aad
pusha
fwait
movsb
cmp
and
mov
xchg
jp
pop
repz
push
add
outsb
shll
mov
js
loopne
mov
das
std
in
jp
jne
shrl
or
add
push
popa
xchg
cs
gs
cmp
popf
popl
xchg
ret
andb
ror
popa
insl
dec
fsubrs
repz
fidivl
jno
xchg
mov
mov
jle
cltd
shl
in
in
arpl
aam
loopne
popa
adc
sbb
inc
cltd
or
push
jle,pn
mov
mov
xchg
sub
inc
push
pop
cmp
jbe
add
rorb
leave
xor
cmp
test
push
jge
js
mov
repnz
dec
xchg
jmp
xchg
mov
aaa
and
out
cmpsl
jnp
jmp
int
mov
pop
push
popf
jp
aam
loop
mov
add
inc
iret
mov
jb
add
fidivs
cmc
std
nop
imul
sbb
fisttps
jae
frstor
cmpsl
xchg
fsts
orl
bound
arpl
arpl
lock
mov
imul
mov
sbb
cld
cmpsl
arpl
or
pop
cmpsl
imul
inc
dec
inc
in
fimull
test
cmpsl
lods
jmp
and
xor
mov
mov
rcll
add
cli
xchg
loopne
dec
out
lds
pop
sbb
dec
push
adc
mov
lret
xor
mov
or
pop
push
cmp
xlat
cld
cmpb
scas
pushf
stc
lahf
fwait
add
lea
lea
and
xor
sbb
push
jmp
rcr
jmp
fcmovnu
sbb
dec
sbb
mov
dec
push
iret
xchg
std
add
mov
push
stos
outsl
pop
out
lds
pop
mov
add
leave
dec
cmp
lcall
or
dec
lret
inc
sub
cli
clc
inc
movl
mov
sbbl
xlat
mov
fdivrs
xor
add
cmp
icebp
lods
jl,pt
ja
jle
mov
inc
fs
int
sbb
into
mov
pop
jecxz
repnz
lret
movb
in
mov
jbe
sub
or
push
and
and
add
addr16
mov
enter
daa
sub
or
insb
jnp
xorb
xor
or
outsl
jl
ret
lret
shll
push
nop
fwait
jge
xor
imul
ret
call
imul
xlat
fists
push
xor
mov
repnz
nop
cmpsb
add
lcall
push
stc
rclb
sbb
mov
lds
mov
cmpsb
push
test
mov
imul
adc
xor
sti
pusha
fcmovnb
push
mov
rcll
mov
repnz
cs
repnz
pop
aas
pusha
mov
test
mov
fs
xor
pushf
inc
fxch
dec
sbb
popa
inc
or
fwait
pop
cmp
popf
jmp
add
movsb
fistl
inc
jmp
mov
or
xor
inc
pop
jp
stos
arpl
and
loope
inc
mov
sub
add
or
jno
inc
and
jae
rcl
hlt
loope
pop
mov
or
mov
sti
loopne
sbb
mov
push
ljmp
jno
mov
sub
fcomps
sbb
cwtl
adc
nop
and
push
push
das
mov
xor
iret
push
inc
fisubs
aaa
iret
test
and
fbld
out
aaa
mulb
shlb
aam
std
das
aam
mov
pop
ds
scas
out
shl
add
mov
fldt
xchg
adc
das
mov
testl
shrb
and
mov
cltd
fildll
sub
xor
sbb
out
cmp
aaa
jb
loop
jmp
push
pop
mov
pop
addr16
adc
test
xor
xchg
scas
cmp
movsb
ret
mov
sbb
mov
pusha
and
pop
lahf
fisubrs
mov
inc
or
cmp
mov
and
jmp
sti
push
xor
bound
hlt
mov
clc
sbb
push
es
push
and
mov
in
out
pop
sbb
push
mov
sbb
lds
outsl
orl
lcall
or
xor
scas
pusha
xlat
gs
rorb
stos
pop
repz
or
adc
mov
mov
cmp
pop
jno
pop
fs
inc
leave
inc
imul
push
sbb
adc
insl
fstl
data16
in
out
cmp
pop
cmp
pop
repnz
lahf
jmp
dec
jns
rcrb
mov
jae
cld
aaa
out
fmul
pop
lcall
mov
push
cmp
fstpl
sub
je
punpckhdq
mov
sti
inc
clc
push
jno
roll
popf
pop
outsb
clc
push
test
lods
push
add
cmpsl
and
sbb
mov
mov
mull
sub
sbb
inc
mov
ja
shrl
in
jb
aaa
popf
lods
mov
push
jecxz
push
adc
xor
in
repnz
and
popf
push
roll
gs
mov
lea
pop
in
scas
sub
sub
rcll
mov
arpl
mov
cmpb
shlb
ficoms
adc
outsb
push
push
adc
inc
inc
pop
inc
cmpsl
dec
xor
in
arpl
aas
addr16
lock
push
push
insl
fldt
je
jb
ljmp
inc
adc
xchg
ret
inc
fs
std
sbb
jl
inc
int3
arpl
mov
sub
std
push
push
inc
sahf
or
out
adc
popl
leave
mov
shll
lahf
shrb
xchg
insl
lds
fcomps
int3
aaa
popa
sbbl
xor
mov
push
movsb
inc
mov
cmpsl
lods
in
ret
out
cli
hlt
mov
loopne
icebp
std
fs
pop
addr16
aad
push
cmp
pop
sub
pop
scas
mov
les
jne
mov
imul
add
dec
push
loop
pop
xor
push
into
push
lods
in
xchg
add
rolb
test
push
push
push
insb
popf
xchg
jne
sub
pop
repz
imul
mov
stc
iret
or
cli
in
adc
js
mov
inc
daa
push
fnstenv
and
adc
push
dec
cmc
push
lea
loope
xchg
aam
incl
cmp
movl
dec
cmpsb
push
jmp
arpl
xchg
out
jnp
mov
fwait
pop
je
sbb
mov
mov
push
lret
xchg
mov
dec
push
lcall
push
inc
enter
push
pop
dec
mov
push
mov
lock
push
out
mov
jnp
lods
adc
ja
movsb
xchg
add
mov
sbb
dec
push
add
pop
lds
xchg
test
adc
or
lock
push
dec
mov
outsl
pop
fs
mov
sub
xchg
out
scas
jmp
je
pop
lods
cmpsb
sbb
stc
lahf
cmp
inc
mov
or
lods
and
cmp
push
cmpsl
inc
int3
cwtl
negl
add
mov
lret
pop
call
pop
xor
ja
enter
push
ljmp
pop
jae
push
dec
imul
arpl
mov
fisttpll
adc
mov
adc
cmp
fidivl
jno
arpl
mov
sub
sbb
mov
loop
dec
aam
sti
cmc
test
sbb
pop
mov
jle
stos
in
xchg
and
xor
arpl
sahf
dec
inc
fnstcw
outsl
test
mov
std
cmp
cmp
mov
or
mov
ror
mov
gs
mov
dec
in
test
scas
shrb
mov
adc
gs
inc
dec
pop
in
pop
call
les
cmp
rol
add
stc
hlt
push
mov
aaa
icebp
inc
xchg
test
cmp
jne
into
out
test
rclb
hlt
test
enter
fwait
pop
mov
add
cmp
loop
mov
mov
sub
sbb
xchg
cltd
mov
fbld
xchg
add
xor
es
sub
mov
add
or
jl
sub
cmpsl
push
fimull
insl
call
rorl
xchg
aad
pop
repz
push
pop
xchg
push
jmp
rclb
push
fs
fbld
loop
dec
push
les
repnz
pusha
cmpsb
xchg
mov
dec
pop
adc
inc
add
add
sub
fdivl
scas
test
lahf
mov
or
adc
or
test
jle
std
popa
adc
sub
aaa
mov
out
mov
inc
pop
jae
mov
push
lcall
cwtl
data16
stos
xor
aam
cmpsl
dec
add
sbb
cld
pop
jne
mov
dec
arpl
imul
loop
cmpb
cmp
sub
sub
nop
xor
mov
pmaxub
xchg
dec
out
sahf
scas
stos
nop
hlt
push
dec
fildll
shl
repz
scas
fisttpll
push
push
mov
jae
dec
mov
inc
lahf
push
rorl
adc
cmpsb
pusha
adc
and
adc
outsb
hlt
mov
push
in
xor
jo
bound
xor
fwait
insb
lock
loopne
pusha
lcall
test
movsl
cmp
jmp
cmp
lea
cmp
lahf
xchg
sub
or
mov
jns
inc
aad
jo
fbstp
mov
pop
out
mov
mov
sub
mov
jns
pop
mov
imul
scas
movsb
fisttpll
adc
out
mov
mov
es
icebp
lods
fdivl
or
push
push
xchg
jae
enter
xchg
out
jbe
fsubrs
lods
xor
jbe
shrb
push
dec
cmp
test
std
xchg
out
movsl
cmp
movsb
adc
incl
and
push
addr16
cmp
sub
and
adc
cmc
push
and
scas
les
std
test
cs
sub
popa
inc
sub
nop
call
sbb
arpl
mov
jmp
imul
xchg
fcoml
fwait
test
and
push
call
das
in
and
or
jge
out
sub
or
sbb
add
mov
mov
mov
scas
lds
scas
stos
clc
dec
mov
arpl
xchg
jns
sbb
jne
cltd
add
int
cli
shll
shr
push
and
cmpsb
imul
test
add
push
dec
enter
and
scas
push
jno
push
stos
pop
adc
and
pop
pop
addl
push
daa
stc
aad
pop
push
lret
repz
arpl
dec
jl
addr16
or
pop
dec
push
nop
and
mov
mov
aaa
pusha
dec
xchg
imul
stos
sub
shl
data16
jl
ds
enter
mov
and
xor
cs
rcl
mov
jl
ret
mov
leave
shrl
and
mov
pop
inc
out
mov
push
add
dec
pop
pushf
sub
shr
aaa
daa
daa
icebp
fists
dec
ja
ds
shll
add
inc
loopne
test
push
xchg
jno
adc
popf
xor
push
cmpsl
addr16
lret
cmc
pop
ret
mov
dec
dec
cmpl
in
stc
rorl
xchg
jle
sarl
sar
sub
aam
enter
xchg
sbb
cs
mov
je
dec
dec
int3
rcrb
scas
mov
xchg
mov
aaa
addr16
sbb
cmc
inc
jae
mov
pop
lcall
and
insl
std
or
cmp
add
sbb
icebp
mov
cli
xchg
sub
or
dec
ljmp
or
inc
fidivrl
sbb
pop
add
outsl
mov
out
lds
jae
ss
push
dec
icebp
andl
push
movsl
cmp
sub
out
or
lods
pop
pop
adc
push
cmp
ljmp
call
mov
xor
inc
out
xchg
fmuls
push
ds
dec
dec
cwtl
xchg
push
mov
cltd
push
add
outsl
lods
mov
and
test
mov
shrb
xor
int3
or
outsl
sbb
loope
mov
call
mov
ss
cs
cwtl
mov
dec
out
sub
pop
movsb
push
cmp
cmp
mov
fsubrl
xlat
sub
rclb
xchg
mov
jno
stc
jb
movsb
push
xchg
popl
aaa
stos
jmp
stc
test
fnstsw
mov
mov
sti
out
xchg
and
adc
or
mov
inc
cwtl
push
adc
out
int
sub
jo
mov
subb
mov
xor
shll
enter
fisttpll
js
and
push
adc
push
jbe
lds
lcall
fnstcw
test
movsl
int
xor
movsb
cmp
pop
mov
xchg
in
xchg
lds
mov
jge
test
push
jg
mov
movsl
inc
cld
add
pushf
dec
mov
push
mulb
jnp
mov
imul
adc
insb
test
mov
dec
mov
outsl
arpl
in
repnz
cmp
fmull
int3
xor
mov
outsl
push
std
jb
push
inc
rcll
mov
sbb
sbb
adc
push
rcr
add
or
repnz
sub
push
xchg
cmp
mov
lea
mov
adc
das
mov
mov
nop
and
inc
or
repnz
lahf
lds
shlb
jge,pt
inc
popf
xor
out
sbb
xchg
std
test
mov
cmpsb
xchg
adc
gs
jbe
sbb
cwtl
daa
loopne
je
popa
xor
cmpsl
or
cmp
pop
cmpsb
sbb
in
lock
arpl
pusha
clc
scas
jne
arpl
mov
in
jp
cli
test
pop
ja
inc
test
movsl
cmpsb
or
ret
icebp
add
mov
xchg
and
testl
inc
out
mov
movsb
jl
xor
mov
nop
push
or
cld
aaa
mov
outsl
inc
ficomps
and
pop
lods
pop
movsb
mov
imul
dec
push
pop
cmp
dec
sbb
inc
decb
mov
je
xchg
pop
aam
push
sarl
dec
dec
xchg
push
mov
stc
jo
insb
stos
scas
loopne
fsubl
rolb
and
push
jle
push
scas
inc
inc
lea
xchg
mov
test
insl
roll
add
mov
outsl
sahf
imull
lret
push
out
test
pop
inc
fucom
outsb
aad
sbbb
mov
sub
push
inc
sbb
loope
inc
daa
mov
mov
scas
push
xchg
push
test
xor
mov
sub
pop
or
inc
enter
cmpsb
bound
lcall
dec
sub
pop
sbb
stc
or
mov
cmpsb
mov
adc
jmp
cmp
or
pushf
jp
cli
les
cs
pop
push
xchg
mov
loope
fsub
or
int
outsl
pop
jmp
pop
movsl
jmp
frstor
lock
rolb
or
sbb
outsl
xchg
mov
push
in
out
xor
inc
jge
andl
cli
movsl
sti
or
movsb
ljmp
or
push
int
cwtl
jbe
jmp
iret
ja
bound
adc
mov
adc
xor
shlb
add
dec
push
jmp
mov
ret
xchg
fcompl
push
mov
adc
dec
cmpsb
imul
test
push
mov
shrb
xor
leave
jp
inc
push
add
and
sbb
call
add
xchg
xor
rcll
push
jge
jno
aad
or
in
inc
push
xchg
loope
lret
mov
clc
and
mov
xchg
mov
cwtl
orl
bound
and
rorb
out
or
xor
in
push
jl
lcall
xor
js,pt
pop
mov
push
enter
or
icebp
fwait
in
stos
sti
in
adc
lcall
bound
cli
adc
lcall
mov
pop
rol
or
dec
fidivl
xchg
loopne
test
dec
cmc
jno
out
test
xchg
cmp
out
xchg
lods
pushf
hlt
addr16
lods
mov
in
sub
lret
push
inc
popa
xchg
jg
rorl
mov
scas
cwtl
xchg
int
add
sbb
imul
mov
adc
cli
out
add
mov
xor
add
mov
and
mov
fcoms
incb
out
sbb
xchg
push
push
lods
or
mov
imul
faddp
adc
dec
mov
lea
push
test
jecxz
rolb
repnz
addr16
das
js
xor
test
pop
rorl
jb
cmpsl
xchg
ja
test
outsl
fistps
lea
adc
mov
insb
cld
in
mov
push
in
pop
cmc
jo
ljmp
push
add
xchg
test
iret
cwtl
fs
and
mov
push
xchg
out
jmp
lret
mov
push
mov
in
and
push
out
add
test
insb
dec
dec
out
imul
int
imul
sub
scas
in
jle
pusha
sub
push
jae
orl
inc
push
out
rorl
cwtl
inc
jp
xchg
dec
mov
push
fmull
sub
pop
adc
sbb
pop
sub
xchg
loop
lea
add
and
cmp
jl
mov
xchg
js
rclb
and
pop
fidivs
gs
jg
mov
mov
cmc
je
or
scas
push
dec
mov
push
xchg
inc
call
jp
jmp
jle
mov
push
dec
sub
push
mov
stc
cmpsb
pop
mov
pusha
ljmp
sbb
or
mov
or
aam
pop
push
and
inc
xchg
mov
cmp
xchg
cmc
insl
sbb
ror
cmp
test
mov
sar
cmc
ja
scas
or
push
std
movsb
jne
clc
xor
push
insl
pop
cli
int3
and
jge
xchg
xor
mov
dec
scas
add
mov
mov
aam
jle
je
fisubrs
jecxz
pusha
sbb
xor
rcrb
lock
adc
mov
ret
jmp
mov
je
fdivrs
mov
repz
and
cwtl
add
inc
push
push
sub
test
mov
mov
mov
cmc
lcall
jne
xchg
fimuls
scas
lcall
loopne
inc
lret
scas
stc
lea
jns
mov
ss
lea
and
cmp
repz
jno
jg
mov
aad
cmc
dec
mov
popa
dec
mov
les
insl
insb
xor
test
popa
aaa
push
cwtl
and
lcall
cli
and
in
test
loop
lcall
cmpb
mov
negl
mov
int3
sbb
jle
or
fildll
pop
cmp
xor
sbb
loope
lods
fisubrs
cmp
pop
in
mov
push
test
adc
xor
shlb
jmp
fsubp
popf
dec
clc
mov
das
in
bound
hlt
fwait
dec
out
or
push
or
and
mov
cld
outsb
out
test
insb
ret
cmpb
loop
xchg
push
mov
mov
jmp
add
mov
inc
mov
add
and
dec
cmpsb
lock
stos
xor
jne
jp
mov
or
cmp
mov
shrl
insb
xchg
pop
lcall
shrb
fildl
jmp
je
mov
les
daa
inc
lret
mov
insl
and
pop
cmp
adc
fucomp
popa
lret
ret
adc
sbb
movsl
pop
pop
orl
adc
sar
jns
mov
lods
and
lock
insl
aas
push
outsl
testl
pop
mov
lock
rorb
push
xchg
sbb
push
add
ficompl
pop
mov
scas
add
adc
js
jns
adc
imul
sbbb
test
dec
mov
inc
pop
jp
adc
mov
adc
adc
or
mov
mov
mov
xchg
lock
mov
fld
imul
add
js
mov
add
pop
add
sbb
subb
movsb
mov
dec
ss
stos
in
ja
testb
xorl
mov
inc
pop
cmpsb
and
aaa
ss
divb
fcoml
mov
push
push
mov
xchg
test
fs
fbstp
inc
ljmp
add
and
push
arpl
mov
dec
scas
xchg
jecxz
add
xor
repnz
int3
push
jne
push
push
mov
into
sahf
int3
dec
sarb
jl
cmpl
sbb
dec
jl
out
cmpsl
mov
xchg
imul
popf
lock
mov
aam
enter
dec
or
jle
lahf
lods
pop
xchg
insb
inc
inc
and
mov
mov
in
or
xor
ficoms
and
inc
or
push
stos
es
clc
rcrb
sub
push
push
mov
shrl
shlb
mov
call
xchg
ret
mov
movsb
pop
adc
mov
rcrb
sbb
dec
adc
pop
repz
in
mov
xchg
ja
stos
inc
out
pushf
imul
and
loope
add
jns
mov
adc
addl
cmc
fmull
sbb
xlat
lea
mov
rcr
es
or
fstps
leave
lock
cld
xchg
das
adc
addb
xchg
int
or
ficoml
sub
lods
daa
cld
out
dec
mov
push
outsb
add
add
push
cli
sarl
sub
lea
pop
aam
rol
icebp
jl
lods
mov
pop
adc
jb
xor
std
fimuls
xor
jo
movsl
jmp
call
aad
test
hlt
mov
push
jl
jne
inc
jns
pop
and
xchg
pop
movsb
xchg
cmpps
pop
cmp
mov
jns
dec
adc
imul
xchg
shlb
and
cld
or
sub
outsb
cs
lret
add
cmp
add
pusha
xor
fnstenv
or
iret
dec
jecxz
icebp
add
sub
fbstp
leave
fisttpl
xor
jg
movsb
lea
dec
js
jecxz
push
jge
or
adc
dec
jns
loope
xchg
push
imul
xor
sub
in
pusha
jge
and
cld
cmp
pushf
int3
stos
cmpl
arpl
cmp
stos
cmp
in
push
push
clc
pop
loop
ss
adc
cmp
inc
push
push
xchg
and
lock
pushf
push
inc
jno
stos
add
inc
loopne
or
cmpsl
cli
mov
fldcw
test
and
mov
push
mov
jl
sub
in
xor
fmul
cmp
and
pop
dec
inc
shr
dec
loope
ss
pop
jne
sub
push
push
push
bound
stos
jno
call
addb
daa
fnstsw
adc
xor
fs
xchg
das
jno
push
mov
scas
add
loopne
and
xchg
mov
pop
mov
out
sub
cld
adc
push
inc
lock
mov
mov
fldenv
pop
jne
icebp
inc
mov
jp
int3
mov
add
cmp
sbb
sub
rcrb
scas
mov
int
sar
mov
bound
mov
shl
xchg
jbe
daa
pushf
movsb
daa
jno
in
dec
imul
movsb
and
out
pop
addr16
iret
mov
in
jnp
in
jbe
dec
out
es
test
cli
inc
push
arpl
pushfw
push
cld
jg
cmovne
and
mov
lds
subb
mov
mov
xor
imul
xchg
ds
jb
add
rcll
movsb
push
inc
push
test
sbb
and
or
inc
and
inc
xlat
outsb
push
outsb
mov
sarb
add
mov
mov
cmpsl
mov
outsl
out
mov
add
jl
sub
test
int
jne
fldenv
dec
pusha
push
mov
mov
les
cs
icebp
fisttpl
push
jl
ja
xor
out
sbb
or
dec
or
loopne
in
push
rol
mov
mov
and
lcall
add
imul
dec
jle
cmp
sbb
test
data16
testb
pushf
ss
inc
cld
negb
dec
cmp
push
repnz
int
je
jae
push
push
cmp
fidivrl
dec
idiv
sarb
repnz
imul
jl
jp
mov
and
push
call
or
sbb
jmp
es
gs
adc
sbb
inc
xchg
cmp
cmp
into
pop
sub
add
bound
fisubl
lds
cmp
cli
or
sub
fs
dec
in
push
cmpsl
cmpsl
sbbb
gs
adc
dec
pop
lods
sub
push
adc
data16
adc
jle
sbb
int
cs
push
add
shrb
push
loop
cmp
ret
inc
lds
ds
rol
sub
cmpsl
or
and
leave
push
repnz
insb
mov
aad
or
dec
cmp
insb
outsl
push
sbb
mov
aas
aaa
aad
cli
pop
test
and
movsl
sbb
lds
ret
loope
movsl
and
xor
push
mov
cltd
std
aad
andl
push
add
xchg
loopne
inc
adc
xchg
mov
jp
mov
arpl
lret
jl
sahf
orb
xadd
pop
in
jne
adc
cld
xor
loop
push
js
sti
and
xchg
test
or
out
jmp
mov
ds
mov
movsb
lods
shlb
inc
jne
je
jg
aad
xchg
scas
dec
out
jne
push
in
nop
dec
mov
mov
pop
mov
dec
jecxz
push
in
inc
fst
rol
and
xor
rcll
xchg
sub
in
daa
repnz
fs
cs
mov
sub
in
mov
sbb
out
dec
das
jae
aad
test
xlat
pop
inc
pop
ret
bound
and
adc
xchg
out
lea
push
rcr
xchg
rcl
push
addr16
xlat
shl
insb
dec
pop
xchg
test
cmpsl
lock
adc
popa
fidivrl
lcall
bnd
jp
cmp
jg
adc
push
fsubp
add
mov
repnz
int
outsl
insl
jge
adc
stos
mov
jge
sbb
push
pop
xor
cmp
mov
jne
out
adc
nop
or
insl
push
xor
lds
sbb
xchg
adc
and
jns
mov
jae
nopl
inc
gs
fs
adc
cld
and
jbe
cmpsb
in
cwtl
movsl
in
mov
xchg
jle
outsb
add
inc
fimuls
push
or
sub
inc
xchg
idivl
into
scas
sbb
and
das
adc
add
dec
stos
mov
or
out
jmp
cmpsl
or
cmp
inc
outsb
mov
stos
and
pop
or
push
in
sbb
movsl
inc
mov
push
fmuls
stc
mov
jnp
imul
fstps
inc
call
jnp
outsl
add
cmp
sub
push
mov
rcrb
aad
bound
pop
movsb
push
cmc
adc
push
mov
mov
mov
add
jecxz
adc
addl
mov
cmpsl
add
dec
in
aad
sbb
fcomps
mov
sbb
cwtl
dec
aam
mov
arpl
ret
pop
aas
ror
in
mov
out
pop
add
icebp
popa
xchg
test
rclb
add
lock
scas
push
fistl
shrb
mov
lds
test
jg
sub
out
test
xchg
mov
pop
repnz
stos
cmp
lock
and
shrl
adc
mov
jmp
ljmp
pushf
xor
out
sub
lds
pusha
jo
push
and
int3
popf
sti
into
enter
jbe
enter
or
push
cld
cs
mov
testl
mov
scas
into
jecxz
or
mov
ds
jg
fsubs
xchg
xor
xchg
scas
push
popf
lea
or
pop
pop
mov
or
out
andl
or
mov
out
or
xchg
lods
icebp
enter
cld
push
xchg
shl
xor
mov
or
inc
out
fs
jnp
jp
dec
and
ret
into
rolb
add
cmp
sub
sbb
add
shrb
mov
inc
xor
callw
jne
mov
push
out
and
lds
cmp
pop
jae
sub
and
shrb
dec
pop
movsb
dec
cmp
xchg
subl
sbb
rcl
adc
mov
das
push
xor
ds
jo
insb
sub
push
jle
sub
pop
add
notl
mov
pushf
dec
aad
add
cmp
mov
xchg
xchg
pushf
push
add
bound
hlt
dec
mov
push
rol
or
adc
popf
ret
hlt
in
cmp
sbb
add
xchg
cmp
mov
jecxz
mov
add
mov
call
xchg
popa
xchg
cmp
dec
mov
push
ret
jp
scas
jb
and
js
xor
pop
nop
fwait
cltd
imul
jo
shr
jbe
adc
adc
xor
repz
notl
ficoml
call
dec
into
fldenv
adc
cld
xor
js
rol
aad
pop
cmc
scas
nop
ret
iret
jl
aam
ja
test
scas
xchg
les
cld
adc
bound
xchg
icebp
arpl
ss
cmp
push
adcb
daa
and
popa
mov
addr16
std
ret
and
out
out
add
mov
pop
mov
fisubs
mov
daa
inc
pop
faddl
aad
jne
insb
jle
and
mov
push
cmc
dec
inc
cmp
dec
fidivrl
and
add
fidivrs
pop
repz
mov
mov
mov
imul
stos
pushf
bound
stc
popf
cmpsl
movsl
clc
jo
cmp
hlt
mov
iret
cmp
int3
dec
outsb
jae
pop
sahf
xchg
xchg
arpl
mov
lahf
mov
test
xchg
clc
dec
sbb
hlt
and
mov
cwtl
sub
jmp
in
das
loopne
adc
lock
adc
hlt
inc
sub
adc
enterw
sbb
ds
enter
in
test
repz
mov
adc
sti
add
xor
mov
jl
push
cmp
jecxz
pop
lods
xchg
popa
adcl
cltd
out
jp
xor
aam
push
xchg
ret
jecxz
or
insb
add
cmp
pop
add
fsubr
pusha
sbb
sub
sti
mov
cmpsl
std
pop
repz
sub
and
push
stos
add
and
rcr
insl
dec
dec
jns
rorb
fistps
cmpsl
fidivl
rolb
sarb
pop
movsl
cmpsb
sbb
stc
xlat
jmp
xor
jno
xchg
out
aas
adc
out
inc
movsb
jp
add
and
xor
xchg
dec
inc
jmp
loope
lahf
mov
jo
ficompl
push
mov
adc
sarb
and
mov
cli
cltd
or
mov
pop
fs
int
inc
mov
sti
adc
pop
push
nop
out
cmp
mov
roll
call
inc
loop
arpl
imul
test
xchg
dec
leave
sub
icebp
mov
pop
std
sub
les
mov
cs
roll
ja
or
cwtl
out
mov
mov
ljmp
fisubl
pop
cmp
adc
dec
fnstcw
fisttpll
stos
ljmp
idivl
int
add
int
jge
lock
adc
inc
or
sub
popf
js
adc
sbb
outsl
pop
loop
mov
xchg
stos
arpl
xchg
mov
cmpsl
adc
mov
mov
jge
xchg
xor
add
jb
xchg
or
add
lods
mov
in
mov
dec
sbb
sbb
jnp
enter
sub
mov
lcall
push
aam
or
aaa
cmp
add
sbb
sbb
fs
int
cltd
and
aaa
lea
adc
xor
pminub
sub
es
fcmovb
jae
andl
inc
ficompl
scas
push
ds
pop
jo
add
inc
fists
sbb
or
cltd
xor
call
jbe
mov
push
xor
aad
mov
sub
es
enter
cli
mov
pop
outsl
inc
aam
push
jmp
jno
xor
xlat
jb
jo
sahf
scas
jb
bound
xlat
outsb
inc
movsl
jns
fs
mov
pusha
dec
cwtl
sbb
xlat
cmpsb
mov
inc
push
scas
stc
aad
push
dec
xor
jle
jl
push
push
push
or
sub
aas
xor
push
ljmp
or
insl
push
add
jae
and
test
pop
aas
bound
pop
dec
adcl
pushl
ror
hlt
sub
pushf
cli
cmc
mov
das
or
pop
adc
sub
shll
sub
sbb
iret
stos
mov
sub
xlat
mov
fs
pop
mov
mov
push
mov
test
andb
outsl
daa
jmp
dec
sub
outsl
sbb
int3
mov
jg
or
cmpsl
mov
fs
sbb
scas
inc
and
push
and
int
xchg
ret
icebp
jp
push
pop
ret
sub
or
in
daa
push
push
lods
imul
adc
push
pop
scas
xchg
daa
in
pusha
xor
sahf
movd
ficompl
xchg
nop
mov
dec
push
mov
dec
scas
sbb
sub
fdivrs
ja
enter
into
dec
xorb
ret
int3
or
filds
pop
mov
fsubr
push
mov
sub
je
jecxz
adc
add
push
push
ret
pop
scas
jae
dec
jmp
xor
cmp
pop
dec
push
mov
push
xlat
jb
add
imulb
lret
icebp
or
test
inc
sahf
xor
xor
sahf
push
pop
test
shlb
js
sub
sbb
push
out
out
push
int
sbb
adc
mov
and
push
xor
xlat
pop
aaa
adc
idivl
scas
jp
sbb
jns
shrl
jg
in
sub
rcrb
scas
ljmp
out
aaa
popf
adcl
fs
and
cwtl
dec
lcall
ja
and
jl
pop
mov
mov
loop
fcoms
mov
pop
nop
jb
mov
pushf
sub
js
cmp
aad
sub
out
jge
addl
xchg
mov
mov
add
xchg
in
and
and
mov
inc
jl
mov
cmp
and
fdivr
fstps
gs
inc
ljmp
jae
adc
add
das
addr16
sbb
mov
mov
mov
or
aaa
sti
stos
sub
jnp
and
xor
daa
pop
cmp
adc
jo
fs
jge
jg
xchg
adc
hlt
test
scas
incb
xchg
out
pop
jecxz
cmp
imulb
cmp
adc
push
mov
lea
mov
sub
xchg
mov
pop
jg
push
xor
jo
sarb
mov
stos
es
xchg
cwtl
mov
cli
mov
cltd
jge
mov
les
movsl
in
pop
mov
test
js
pop
mov
scas
andl
ljmp
mov
mov
pop
sbb
pop
sbb
stc
nop
mov
test
jbe
inc
mov
sarb
or
popa
push
xchg
enter
xchg
fmull
cmpsb
dec
ret
adc
xchg
jnp
insl
rorb
dec
cs
mov
popa
adc
pop
enter
cltd
test
add
push
popf
inc
das
jl
fadd
popf
loope
hlt
cwtl
dec
shl
adc
push
mov
outsb
xchg
or
sahf
sbbb
stc
xchg
fsubrl
mov
xchg
jae
cmp
push
push
shr
xchg
daa
ficompl
adcl
cmp
in
out
mov
mov
sub
mov
shl
outsl
movsl
insl
shrb
ret
jnp
mov
lods
int
pushf
ja
mov
dec
sbb
sbb
push
in
in
aas
mov
inc
es
neg
fimull
rcrb
gs
xchg
inc
sbb
rep
mov
int3
mov
clc
mov
sbb
cmp
xor
pop
cmp
in
aam
jmp
xlat
mov
and
popa
xchg
mov
fistpl
add
sub
stc
popf
inc
mov
jl
add
lock
dec
sbb
cld
adc
ds
xchg
es
pop
or
sarb
leave
fnstcw
ficompl
adc
dec
daa
in
fwait
out
loop
stos
mov
jmp
lods
dec
mov
test
xchg
repnz
dec
xchg
add
fisttpll
jns
ret
repz
sub
scas
push
sub
xchg
arpl
add
sub
aas
insb
and
pop
cli
or
xchg
int
int3
mov
add
fisttpll
lods
in
sti
gs
mov
xor
dec
sarl
mov
insl
sbb
insl
mov
aad
and
mov
adc
mov
sti
movsb
cmp
push
mov
ss
push
insl
test
scas
stos
or
lret
jno
mov
mov
inc
stc
pop
ds
pop
inc
mov
cmp
pushf
cmpsl
mov
push
dec
scas
cmpsl
lahf
add
imul
lds
les
test
ljmp
out
pop
outsl
rorl
push
sbb
or
add
into
outsl
out
ds
mov
cmp
popa
test
daa
lods
cmp
pop
mov
lahf
stos
pop
inc
jecxz
rcl
in
ret
xchg
jno
jmp
leave
out
mov
jg
inc
test
and
mov
cmc
js
mov
cld
xchg
test
and
test
arpl
mov
inc
push
movsl
and
jp
xor
nop
pop
loope
shr
jbe
mov
add
mov
xchg
stos
inc
je
mov
setle
sbb
lds
inc
and
js
fbld
sub
dec
addl
add
dec
loopne
cwtl
lods
inc
inc
lahf
push
xchg
out
dec
push
sub
sub
push
cmc
mov
jo
sub
xor
fwait
lea
mov
sub
xchg
jl
scas
ljmp
mov
sbb
xchg
fsubrl
mov
repnz
inc
outsl
adc
std
or
jne
mov
and
clc
lret
je
mov
mov
sarl
mov
cmpsb
int3
jae
fs
lret
push
cmpsb
sub
fmull
outsb
inc
test
push
divb
cmp
call
shll
ljmp
call
mov
rcrb
in
add
add
jl
aas
rorb
dec
in
mov
out
push
xchg
aas
lret
std
xchg
push
adc
and
dec
test
mov
jge
push
in
outsb
mov
dec
rorb
pop
and
inc
testb
xchg
cmp
sub
add
daa
ror
imul
adc
inc
or
mov
sub
notl
test
or
ss
les
shll
pop
dec
jecxz
fdivrs
and
xchg
ret
dec
fisttps
push
mov
cmp
repz
and
sti
aam
ss
jnp
inc
add
sbb
pop
and
add
pushf
into
xchg
sbb
push
push
in
add
test
mov
sti
ret
or
aam
std
inc
push
shrl
jge
sub
jne
inc
stos
mov
mov
andb
mov
notb
inc
push
in
aaa
and
adc
cmp
pop
xlat
mov
lahf
adc
push
je
in
bound
push
je
stc
out
btc
inc
adc
jge
pop
cmp
in
les
fadds
fcoms
sbb
scas
movsb
pop
mov
int
popa
bound
adc
insb
push
mov
test
sti
cld
lock
add
scas
xor
test
dec
bound
gs
xchg
sbb
ret
jo
xchg
mov
sub
dec
lods
dec
pushf
jmp
aas
cmp
fidivl
lds
inc
lods
add
cmp
xabort
push
cmpsl
jecxz
fs
cld
inc
loop
out
sbb
inc
sbb
mov
iret
mov
xchg
inc
int
mov
jo
stc
outsb
xorl
fidivs
jmp
push
or
test
iret
jle
loop
rcll
dec
adc
inc
dec
shrb
inc
xlat
icebp
arpl
lds
xchg
mov
push
xor
pop
xchg
pop
shrb
fildl
dec
test
in
test
add
inc
jbe
hlt
in
xchg
mov
add
mov
scas
test
arpl
lahf
mov
add
es
sub
or
pop
mov
lock
imul
mov
loopne
adc
sub
or
stos
ret
movsb
pop
ret
jae
loope
mov
out
add
mov
loop
dec
loope
js
and
add
push
xor
outsb
loopne
push
xchg
insl
minps
in
loopne
cmp
scas
sub
repz
roll
sarl
mov
enter
jmp
inc
ret
and
push
dec
pop
xor
pop
cmp
fwait
dec
dec
xchg
or
mov
test
mov
push
cwtl
inc
mov
jae
jno
push
mov
mov
cmpsl
add
xlat
mov
stos
das
ret
add
mov
lock
fsubrl
push
sub
inc
ret
shr
dec
ss
lds
add
sti
sbb
lahf
pop
iret
popf
cmp
adc
cmpl
sub
fmull
and
mov
gs
mov
int3
test
cmp
or
sti
xor
jle
or
enter
xchg
lret
stos
inc
into
push
shrb
lock
xor
mov
sbb
fs
jno
jg
xchg
lods
mov
sbb
jge
fnstcw
dec
pop
cltd
cmp
leave
or
aas
iret
sub
xor
mov
inc
std
sbb
fbstp
mov
mov
fdivrp
pop
ljmp
xor
fsubs
sub
mov
shlb
pop
and
push
mov
pop
popl
cmp
cmp
popa
cli
roll
sub
push
push
xchg
aad
ret
sub
sub
pop
adc
arpl
mov
lock
jge
fisubs
mov
mov
add
xchg
sahf
mov
xor
arpl
imul
mov
popa
inc
xor
pop
test
cwtl
adc
and
or
mov
jo
out
rorb
jnp
repnz
das
fiadds
sub
cmp
or
mov
pop
and
lea
mov
and
mov
popf
jp
adc
cs
jge
setge
cmp
scas
aas
aad
mov
sbb
lea
mov
push
repnz
xchg
inc
push
mov
loope
std
and
jecxz
into
sbb
cmp
stc
mov
mov
jl
das
sahf
cmp
sbb
repnz
movsl
icebp
sbb
out
cli
sbb
mov
lret
mov
or
push
adc
loop
daa
xchg
sub
pop
je
adc
mov
je
hlt
inc
insb
fadds
dec
sbb
mov
imul
xchg
mov
mov
xchg
mov
jge
sub
xchg
xchg
add
pop
je
in
test
in
add
clc
and
aad
dec
test
into
pop
inc
lahf
test
icebp
mov
in
cli
test
lret
sbbl
ljmp
and
xchg
outsb
icebp
mov
cmc
mov
int
cmp
repnz
pop
mov
dec
daa
in
fdivrl
adc
and
ds
lahf
in
arpl
out
les
cwtl
pop
jecxz
fstpt
sahf
sub
stos
mov
push
into
add
cmc
insb
cmp
add
test
push
imul
mov
xor
insl
push
aam
fildl
lods
xor
fwait
push
xchg
jge
xchg
ljmp
ds
ret
in
or
mov
dec
mov
dec
jmp
sti
and
push
js
xchg
xor
sub
push
insl
fisttps
repz
std
xchg
jb
mov
mov
cmp
lock
aaa
loop
js
inc
inc
jnp
je
enter
pop
scas
dec
icebp
subb
adc
repnz
les
pop
cmpsl
xchg
outsb
out
cmp
or
or
push
xor
jae
cmp
or
jno
inc
add
jle
jmp
dec
jno
xor
enter
movsb
int
nop
jl
imul
fadds
cli
mov
fildl
popf
and
stos
xchg
test
insl
outsb
mov
mov
mov
addb
scas
inc
cmp
xor
loop
fsubrs
or
je
sarb
fnstsw
into
push
popf
mov
adc
push
imul
popf
daa
mov
cmp
or
mov
sbb
add
imul
pop
pusha
ss
lcall
aam
sub
test
dec
mov
aas
cmpl
enter
out
jmp
aam
dec
daa
xor
pop
jo
xorb
rorb
insl
cs
inc
loope
jg
pop
in
push
movsl
fiadds
cmpsb
mov
push
addr16
mov
cmp
sub
and
and
fwait
int3
jne
jl
in
and
pop
adc
fucomi
pusha
mov
out
mov
inc
xlat
outsb
stc
pop
or
adc
das
sbb
push
inc
sbb
inc
push
sub
mov
cltd
or
insb
mov
sbb
sbb
sbb
xor
push
xorl
xchg
push
mov
xchg
cmpsl
rol
bnd
lds
pop
push
mov
inc
sub
fidivs
ljmp
lods
mov
push
xor
and
dec
push
xchg
push
xor
dec
cmp
pop
sbb
push
ds
xchg
sub
popf
pop
lcall
push
pop
jbe
push
lahf
xchg
pop
cld
and
sub
bound
jb
insl
jge
pop
mov
fnstcw
lret
xchg
fildl
mov
xor
sti
sub
cli
shrl
aaa
push
sub
xor
inc
js
mov
mov
xor
ja
ljmp
jmp
add
ds
shlb
mov
pop
sub
mov
jno
or
xor
popf
out
aas
pop
mov
scas
mov
push
jge
ja
outsb
cmp
pop
or
jne
sbb
lahf
xchg
or
and
shll
inc
cli
push
out
gs
jbe
jno
push
stos
mov
and
lcall
scas
in
dec
fwait
push
in
out
xor
push
cld
mov
jb
loope
popa
stc
mov
add
jbe
lds
push
gs
rcl
mov
mov
fldt
push
imul
imul
imul
repnz
sbb
aaa
mov
mov
es
popf
xchg
mov
sbb
pop
imul
repnz
dec
push
clc
test
lods
jns
sbb
cmpsb
fdiv
and
ds
jns
cmp
bound
aas
into
dec
dec
rol
jecxz
lods
dec
mov
ret
rclb
inc
adc
lods
test
cld
mov
xchg
mov
xchg
mov
xor
addl
mov
mov
jnp
mov
dec
mov
enter
pop
out
popa
jecxz
xlat
pop
or
aad
xor
stos
cltd
dec
inc
push
in
xor
repz
fidivl
push
jo
lcall
xor
fwait
and
je
or
enter
jne
in
jne
lret
push
lcall
nop
ficompl
sahf
cmpb
stos
out
push
sbb
pop
cmp
and
ja
divps
jno
xlat
test
cmpsl
mov
stos
cmp
mov
jbe
pusha
mov
andb
pop
or
jmp
jl
dec
inc
scas
mov
add
je
xchg
mov
cltd
popf
mov
lret
push
adc
pop
aad
and
adc
test
pop
inc
mov
or
fistps
dec
fs
imul
mov
fwait
mulb
je
test
scas
jns
add
arpl
mov
sbb
or
daa
ljmp
xorb
testl
fcmovbe
ss
sbb
rol
push
pop
push
sbb
scas
xor
jge,pn
nop
fsubrs
lock
in
mov
sbb
ss
jg
cli
pop
imul
popa
cmp
popl
mov
cmpsb
loop
cwtl
pop
jae
adc
test
fs
adc
mov
add
jae
imul
or
jp
jns
push
outsl
ret
jge
cli
loop
mov
ror
outsl
mov
pop
xor
mov
jns
cli
imul
nop
es
out
cmc
sahf
mov
sbb
add
pop
mov
mov
jge
das
mov
aaa
in
fwait
xchg
jne
mov
push
arpl
fsubrp
push
mov
or
dec
rcll
movsl
in
loope
lock
pop
in
pop
mov
jb
cmp
push
stos
subb
and
sub
mov
pop
xor
sbb
paddusw
fsts
mov
jmp
cmp
mov
cmp
xor
pop
mov
loopne
jp
jne
in
fwait
popa
inc
cld
lcall
movsl
cmp
das
mov
popa
adc
mov
fisttps
leave
adcb
mov
push
iret
ds
add
nop
in
mov
mov
xor
or
jae
dec
sbb
lahf
and
mov
lahf
or
push
rcrl
or
outsl
popa
lods
andb
mov
add
mov
mov
movsb
lcall
jp
jno
and
lret
jns
or
adc
mov
add
adc
add
pusha
push
xchg
push
insl
aaa
cmpsl
and
addr16
mov
mov
cmpsb
ret
mov
jmp
push
scas
push
movsl
fisttps
sub
sahf
and
sub
test
adcl
xor
ja
cmp
lock
das
adc
xchg
inc
rolb
stos
pop
data16
insl
or
jae
xor
in
pop
and
jg
repnz
dec
jg
mov
mov
jecxz
or
sub
ss
fsub
mov
aas
adc
mov
ss
sarb
push
add
test
xchg
fcompl
ja
sti
or
call
frstor
xchg
xchg
dec
mov
test
out
dec
jp
aaa
lcall
cmp
mov
xlat
fiaddl
daa
outsl
dec
and
lahf
push
fwait
mov
add
int
xchg
or
xor
mov
ljmp
jno
cwtl
sbb
jns
cmpsb
std
inc
cmpsl
dec
loopne
in
movsl
dec
shlb
call
pop
lret
fsubl
nopl
addr16
sbbb
lcall
xchg
lods
addr16
pop
out
fstpl
jl
loopne
pop
and
jb,pt
icebp
addr16
mov
loopne
daa
push
aas
adc
lock
lret
cmp
arpl
stc
or
lds
add
sub
sub
add
adc
nop
dec
adcl
push
mov
ficoms
push
adc
stos
push
mov
fistl
push
imul
push
cld
mov
jle
mov
add
mov
in
ss
outsb
loope
outsl
mov
dec
xchg
pop
cli
std
mov
pop
repnz
sbb
pop
ficomps
sbb
mov
test
jl
call
xchg
push
push
dec
pminsw
ljmp
sub
sahf
mov
and
mov
out
add
push
lea
pushf
testl
cs
sub
pop
inc
sub
das
pop
loopne
roll
mov
pop
aam
mov
add
stc
cwtl
cwtl
and
pop
or
adc
jp
adc
mov
bound
mov
push
sbb
jle
fstps
lea
jle
cmpsb
mov
push
in
in
inc
and
je
aad
inc
push
inc
xor
ret
outsb
push
in
dec
lahf
mov
fwait
loopne
mov
fldt
push
ret
adc
hlt
js
fs
xor
pop
xchg
pop
sbb
push
sub
xor
hlt
lahf
ss
mov
mov
pop
ds
jb
mov
cmp
mov
sbb
dec
fidivrs
ret
sub
call
and
rcl
sub
push
jmp
icebp
insb
xor
repz
or
cmpsl
add
inc
push
jg
pop
cmp
sub
or
sub
push
rorb
in
push
das
imul
inc
add
xchg
pusha
mov
dec
push
inc
cmp
mov
std
leave
push
sbb
jecxz
fmul
loop
inc
mov
add
test
and
dec
idiv
popf
daa
shlb
shrb
lahf
js
xchg
shl
jno
dec
fbld
lea
jp
adc
mov
fistps
mov
xor
fwait
out
psrld
pop
icebp
das
stos
push
loope
cmp
inc
in
out
mov
out
xchg
pushf
repz
rorl
das
mov
add
lods
xor
and
jle
ja,pt
in
jo
lahf
mov
enter
es
jne
shlb
sbbb
andb
dec
dec
shll
mov
lods
mov
movsb
es
push
out
push
jne
cmp
mov
mov
repz
pushf
cmpsb
lods
dec
adc
mov
mov
inc
dec
jge
imulb
mov
sub
add
insb
fsts
scas
imul
data16
in
test
scas
adc
sub
jmp
repnz
cwtl
std
mov
xchg
in
test
lret
cmp
push
data16
pop
in
and
imul
jo
test
inc
pop
lahf
negb
sti
jae
insb
mov
inc
ret
and
xchg
shll
push
sub
es
mov
pusha
mov
lods
movsb
pop
sbb
pusha
arpl
add
cwtl
or
mov
push
ljmp
jmp
mov
lea
mov
sbb
movsb
stos
push
insl
hlt
lds
mov
pop
add
ds
pop
cmp
pop
sbb
aad
clc
jl
adc
in
es
jbe
popa
sub
cmpl
push
xor
lahf
ret
mov
push
mov
popa
or
shlb
push
jb
inc
pop
mov
lods
and
and
mov
xor
call
add
jnp
xchg
test
dec
movsl
lock
fadd
js
into
test
lahf
sub
push
mov
push
mov
cmp
inc
in
out
repz
lret
push
les
pusha
in
stos
and
adc
ljmp
mov
cmp
mov
cmp
ja
add
jnp
fdivl
je
daa
aad
pop
xlat
mov
sbb
mov
mov
dec
mov
xchg
sbb
lds
sbb
xchg
mov
cmp
mov
xorl
pop
mov
shl
jo
aad
mov
pop
pop
stos
popa
insl
jl
push
dec
cmp
js
out
test
mull
lcall
cld
inc
out
test
dec
test
jne
popf
loop
sbb
dec
dec
add
cmp
jne
xchg
and
xchg
imul
adc
fnsave
push
rcll
xchg
mov
hlt
mov
inc
cmp
lcall
popaw
insl
or
xor
xchg
rcll
nop
pop
mov
icebp
cmp
js
jbe
loopne
je
movsl
push
ja
ret
aaa
fisttpl
cwtl
shlb
pop
jp
iret
cmpsl
mov
movsb
dec
dec
push
mov
dec
jle
ja
aaa
cwtl
bound
cmp
sub
loope
pop
jp
pop
add
cld
xchg
mov
sbbb
test
addb
dec
or
bound
sbb
fisubrs
rol
shl
cmp
or
inc
repnz
push
icebp
or
test
or
loopne
aaa
jno
dec
push
lods
pop
and
jp
mov
pop
insl
int
dec
mov
or
aas
js
jo
sti
inc
ljmp
cmp
mov
pop
mov
inc
subl
or
jne
cmpsb
push
or
insl
orb
stos
mov
loop
jno
dec
mov
movsl
sub
loope
mov
jg
mov
mov
mov
nopl
cmpsb
aam
push
push
sbb
ret
loopne
xchg
int
fnstcw
push
pusha
scas
inc
arpl
push
test
adc
dec
insb
cmp
jae
stc
movsl
mov
xchg
das
ret
mov
xor
lcall
icebp
dec
shlb
xchg
shll
fimull
mov
call
and
lds
jge
dec
imul
or
cli
jns
xchg
repz
xchg
test
mov
fisubrs
icebp
jl
clc
xor
inc
mov
clc
push
mov
insl
lret
sbb
ja
shl
push
xchg
pop
cmc
inc
inc
decb
lcall
sbb
dec
int3
jbe
mov
cmpsl
outsb
jbe
out
ss
pop
addr16
jg
pop
add
mov
loop
and
sbb
jmp
xor
shr
insb
in
mov
mov
push
enter
dec
dec
or
dec
movsl
inc
out
mov
adc
cmpsl
lock
into
pop
sub
test
adc
sub
fisttps
jmp
jb
mov
ret
rcr
pop
hlt
dec
mov
test
mov
push
outsb
ds
mov
test
cmp
jl
in
mov
sbb
iret
jno
push
sbb
adc
stc
test
mov
xchg
adc
push
xchg
adc
adc
sbb
nop
int3
push
jbe
stos
cli
mulb
invd
cmp
jns
or
je
jnp
test
lds
add
cmc
mov
sub
in
popf
clc
aas
ficompl
test
mov
dec
out
enter
sub
xchg
fsubr
fwait
cmp
mov
stc
mov
xchg
push
outsl
rorb
idiv
mov
in
fmulp
mov
stos
push
test
xor
pop
das
xor
sub
call
sub
mov
pop
inc
xor
pop
rcr
mov
mov
inc
xchg
mov
or
jmp
and
push
and
jp
mov
xchg
scas
int
mov
mov
cltd
mov
mov
mov
cmpsb
xchg
adc
movsb
sti
rcll
notl
cld
or
xor
bound
into
sahf
stos
in
xchg
push
pop
cwtl
addl
push
loop
rcrb
dec
adc
repnz
ds
out
and
inc
nop
push
lods
mov
movsl
dec
subb
popa
jae
outsb
rorl
push
mov
dec
xchg
jg
pusha
lock
jl
jb
push
inc
mov
loope
int3
push
add
mov
enter
xchg
outsb
push
pop
movb
or
mov
mov
inc
pop
mov
lahf
outsl
inc
mov
lcall
outsb
in
dec
negb
sbb
or
inc
and
or
sub
xchg
fiaddl
jecxz
push
mov
mov
mov
inc
int
xchg
mov
push
aam
adc
cmc
push
repnz
pop
out
or
mov
lcall
clc
mov
jo
aad
popa
imul
mov
movsl
cltd
add
mov
mov
adc
adc
inc
je
xchg
xor
pop
mov
fldl2e
leave
leave
es
pop
cmp
sarl
lds
push
rcrl
sbbb
dec
cmpsb
sarb
xor
mov
in
xchg
mov
cmp
mov
fs
test
ja
pushf
jo
jmp
xchg
arpl
dec
and
push
jl
mov
sbb
mov
mov
pop
aas
aad
stc
outsb
aad
cld
fbld
adc
fiadds
int
mov
data16
push
outsl
fistpl
in
call
andl
mov
xor
fnsave
out
cltd
lods
hlt
lahf
sbb
sbb
or
xor
mov
sbb
pop
mov
inc
cmp
add
lret
ret
outsb
stos
jmp
dec
and
fwait
test
lcall
cmp
mov
jae
push
cltd
sub
int3
aaa
int3
cmp
xchg
mov
push
push
xor
inc
in
mov
cli
push
je
cmp
rcl
cmc
leave
mov
out
fwait
insb
adc
mov
add
jne
cltd
hlt
sbb
ja
out
repnz
push
aad
arpl
decb
call
or
lret
push
xchg
or
enter
imul
sti
mov
insb
mov
arpl
aam
cmp
jp
adc
int
jmp
fistpl
jne
xorb
stos
out
xor
daa
push
push
adc
mov
fdivl
arpl
lea
aas
pop
sub
rolb
mov
add
in
inc
dec
sbb
sti
mov
bound
pop
push
mulb
mov
movl
enter
xchg
aam
xlat
rep
xor
xchg
and
dec
les
repz
jb
lcall
ret
mov
int
pop
out
xor
lea
cld
cmp
dec
and
jbe
and
stos
mov
xchg
mov
adcl
jmp
jge
lock
pop
jp
jne
mov
cmp
mov
int3
cmp
loope
push
jno
int3
pushf
stos
pop
loope
ljmp
add
and
das
adc
notb
leave
negl
stos
call
shr
adc
lcall
or
jp
aas
xchg
jmp
and
cld
test
xlat
aam
aam
xchg
cmpsb
nop
mov
bound
mov
leave
jns
or
sub
add
or
xor
dec
add
sahf
xchg
xchg
mov
pusha
sbb
dec
inc
mov
pushf
movsb
incl
outsb
mov
add
sbb
add
jo
jge
cmp
adcl
pop
cmp
in
js
xchg
sub
mov
dec
imul
xchg
sar
push
cld
insl
add
mov
mov
sbb
out
mov
jb
jle
push
adc
fs
sti
rorb
in
mov
add
cmpsl
out
sbb
jle
icebp
pushf
dec
mov
into
mov
inc
mov
mov
fbld
lods
push
and
mov
xlat
pop
daa
mov
je
inc
xchg
shl
lahf
xchg
incb
fwait
in
lahf
cld
aad
jns
mov
popf
pushf
ret
dec
les
mov
rclb
add
cmpsb
xorb
fsubrl
jle
mov
xchg
xchg
sbb
mov
leave
addr16
repz
push
out
xchg
cmp
xchg
push
orl
fmulp
rcl
add
add
xchg
mov
in
inc
clc
or
cmc
cmp
xchg
mov
and
int3
or
pop
ss
adc
icebp
lret
mov
and
mov
int
jo
and
add
sarl
movsb
test
nop
cs
xchg
xlat
idivl
mov
or
es
cmpsl
xor
in
add
repnz
dec
int3
adc
mov
sti
pop
inc
out
lcall
sbb
dec
sbb
fwait
stos
mov
adc
jbe
jb
dec
sub
ss
inc
mov
inc
pop
out
fcom
sarl
mov
in
addr16
push
outsb
xchg
stos
stos
sti
add
and
repnz
repz
insl
ljmp
dec
cmp
mov
pop
test
out
mov
push
inc
popf
mov
inc
mov
cld
dec
dec
fcmovnbe
leave
fs
dec
dec
mov
aas
xor
pop
sub
sbb
jns
push
jmp
adc
mov
xor
mov
mov
push
push
xchg
insl
add
add
fimull
jae
fisubrl
sbb
pop
xchg
mov
repz
jp
add
loop
and
sbb
xor
lock
xchg
sti
push
movsb
out
mov
inc
gs
dec
push
lret
mov
and
xchg
add
mov
mov
je
in
popf
and
das
es
xchg
or
fstl
ret
int3
loopne
dec
enter
cmpsl
jns
scas
push
mov
and
mov
xchg
enter
dec
mov
cmc
rcr
and
std
mov
daa
xchg
and
int3
jae
sub
in
dec
xchg
hlt
mov
dec
cmpsl
xchg
mov
into
insl
sbb
sub
push
je
jne
movsl
ja
nop
int
push
sahf
push
and
bound
add
cs
or
mov
lods
pop
and
stc
push
xor
mov
push
jg
cmp
mov
fnstcw
in
insb
aam
jmp
mov
int
imul
push
cmpsb
ret
mov
jge
sub
pop
xchg
in
in
xchg
mov
lcall
mov
fpatan
mov
mov
push
enter
pop
lods
xchg
mov
mov
shrb
sub
and
or
xorb
cmp
add
fimuls
icebp
or
aas
movsl
icebp
icebp
in
xchg
fucom
cltd
pop
sahf
inc
call
lods
cwtl
lea
add
xchg
sbb
pop
out
inc
dec
fbld
je
loop
dec
push
pop
lods
out
lahf
loopne
pop
xchg
sbbl
gs
shrb
mov
jmp
adc
scas
mov
sbb
not
adc
mov
pop
mov
xor
mov
ljmp
enter
testb
int
push
xor
cmc
stos
or
and
ret
movq
imul
mov
inc
cli
lock
dec
mov
mov
push
jae
and
cmp
adc
xor
imul
sub
shll
pushf
testb
pusha
inc
mov
shll
out
add
ja
adc
roll
mov
int3
add
jbe
imul
in
mov
xor
mov
insb
mov
add
adc
lds
inc
xchg
cwtl
je
mov
std
xor
pop
xchg
ficoml
cld
dec
pop
sub
es
sti
fld
dec
or
xlat
aam
mov
dec
push
and
fistps
jmp
add
push
cli
adc
dec
movsl
sbb
mov
mov
push
into
lahf
and
push
push
or
push
into
divl
xchg
adc
adc
push
clc
dec
pop
sub
repz
lock
ja
mov
ffreep
jno
in
shll
rcrl
mov
cmp
sbb
cmp
xlat
xlat
icebp
mov
xchg
sub
pushf
pop
xor
push
into
clc
int
js
pop
mov
lods
cmp
push
daa
mov
fdivrl
test
mov
add
fucomi
pushf
das
pop
jns
mov
mov
xchg
outsl
lret
and
loop
xchg
xor
lock
fs
pop
jb
mov
cwtl
add
aam
js
test
jno
insl
sub
jne
pop
lcall
daa
jge
sbb
inc
iret
fwait
testl
push
push
xchg
sbb
mov
mov
sub
push
int
in
leave
mov
leave
loope
xchg
xor
lods
lahf
pop
stos
add
mov
in
fistpll
mov
cmpsl
loop
push
cltd
les
cmpb
pusha
das
adc
in
add
add
aaa
dec
sbb
push
dec
adc
insb
aad
cmp
std
cmpsb
push
adc
int
shlb
sbb
sub
lret
outsb
test
push
jbe
add
mov
mov
jmp
inc
test
or
cs
daa
pusha
mov
xor
mov
scas
mov
xlat
arpl
fcoml
gs
ljmp
mov
mov
sbb
andl
jb
nop
jnp
cmp
xor
and
dec
in
lods
shll
mov
and
push
mov
push
add
xchg
pusha
fcoms
adc
jb
dec
jno
dec
and
test
inc
jge
push
mov
nop
mov
fdiv
cli
icebp
pusha
jp
scas
jle
fbstp
mov
ja
adc
add
cmp
mov
xchg
mov
mov
mov
subb
push
xor
repz
cmp
cs
xchg
jg
addl
or
push
and
dec
out
jmp
out
push
mov
push
mov
mov
scas
in
mov
add
out
dec
scas
lahf
xlat
push
outsl
loope
sbb
mov
cltd
test
aaa
jbe
popl
rcll
lret
and
fnstenv
mov
push
cli
pushf
test
jae
faddp
push
adc
in
sub
push
jns
inc
and
xor
sahf
adc
int3
fwait
shl
lret
adc
popa
leave
in
sahf
and
ljmp
xor
ror
stc
and
fs
dec
add
cmp
xchg
push
mov
in
inc
cmp
imul
xor
pop
ja
scas
mov
mov
xchg
imul
loope
sbb
inc
inc
cmp
mov
inc
push
xlat
fisubs
or
sti
enter
push
and
sahf
mov
add
mov
sahf
daa
lret
lret
imul
push
pop
nop
stos
insl
inc
jl
aas
cmp
testb
cmp
push
cmp
or
in
lods
lock
pop
xor
xlat
push
std
lds
and
out
add
xorl
fucom
pop
cs
adc
std
xchg
xchg
xlat
pop
mov
push
push
imul
out
xor
arpl
or
cli
enter
les
sub
ljmp
push
je
or
xchg
mov
mov
pop
pop
adc
lock
mov
add
leave
sub
or
jno
mov
sahf
aam
mov
imul
mov
xchg
mov
fmul
aam
iret
ret
mov
push
int3
jo
addr16
sbb
mov
les
and
add
shl
stc
fstl
ljmp
sbb
in
mov
and
dec
mov
movl
lret
fld
jns
mov
es
xlat
mov
mov
cmp
mov
xchg
mov
ficomps
movhps
test
or
mov
xchg
inc
out
jp
and
jb
inc
sub
test
in
fcomps
jbe
xor
stos
sahf
lahf
movsl
mov
test
mov
frstpm(287
imul
test
popa
jge
outsl
pop
test
xlat
pop
cmp
jnp,pt
jb
loop
add
sub
push
sbbb
adc
imul
pop
dec
pop
mov
rcrl
pop
push
pop
jl
xchg
inc
or
sbb
mov
mov
mov
data16
stos
int3
dec
in
inc
notl
dec
imul
ljmp
inc
mov
jns
pop
cmp
push
addr16
pop
mov
stos
dec
in
and
scas
cli
mov
xor
pop
adc
sahf
sub
mov
add
mov
sbb
jbe
mov
int
pop
mov
les
nop
pop
push
adc
loop
in
fdivs
test
lret
cmp
jno
out
hlt
inc
aaa
mov
enter
out
push
int
jl
mov
push
insl
jle
ret
pushf
mov
inc
lret
loopne
out
lret
std
out
jmp
subl
xor
dec
std
sbbl
cmp
adc
push
dec
popa
adc
xchg
and
sti
rcl
xor
mov
jbe
movsb
aam
dec
outsb
mov
sbb
xchg
lock
repz
aad
jns
out
mov
out
stos
lahf
xor
lds
cmp
pop
fidivl
sub
pop
in
inc
shrb
lcall
pop
movntps
lahf
movsl
mov
mov
and
and
sarb
lret
mov
dec
inc
inc
push
mov
stos
mov
sbb
cmp
dec
jae
mov
jecxz
lea
lret
sub
mov
jns
hlt
jbe
aas
loop
adc
dec
or
inc
daa
outsl
icebp
test
leave
xor
mov
fiaddl
sahf
dec
fcomps
popa
clc
out
push
add
orb
adc
push
jno
sbb
and
les
mov
iret
jecxz
mov
mov
dec
out
cmp
aad
mov
popa
push
sbbb
in
or
adc
push
xchg
mov
iret
add
mov
inc
xchg
cs
enter
cmp
pop
mov
sahf
cmp
loope
inc
gs
add
daa
adcl
adc
call
add
neg
jb
aaa
push
sbb
fwait
js
inc
pop
loope
adc
dec
cltd
idivl
sub
jno
and
mov
push
mov
test
jecxz
sbb
add
and
push
jne
ss
mov
outsl
outsl
add
add
out
ret
jbe
pop
mov
mov
mov
mov
xor
cmp
fcmovbe
cmpsl
pop
fistpl
jns
add
pop
push
lahf
xchg
ja
stos
add
fnsave
adc
inc
xor
cmp
ret
loopne
push
inc
es
jge
xorl
lcall
and
mov
in
fdivl
shlb
sti
mov
xchg
mov
pop
sbb
insb
mov
xor
scas
pusha
sti
or
ss
inc
fisubrs
xchg
xor
and
inc
call
or
repz
stos
into
inc
pop
or
sub
jnp
insl
lods
pop
aaa
push
push
or
inc
mov
aad
dec
mov
out
outsb
lock
stos
movsb
jae
inc
push
sbb
jle
dec
popf
es
push
mov
pop
jo
inc
jmp
dec
les
vpunpcklqdq
push
ret
jp
jecxz
je
pop
sbb
xor
lock
cmp
mov
pop
loopne
aas
sub
inc
rorb
mov
pop
pop
adc
shrl
jo
fists
mov
in
push
stos
sub
inc
iret
mov
or
cmp
sub
fnstsw
fs
jle
scas
lcall
ror
jne
and
xchg
dec
popf
dec
jnp
popf
stos
inc
adc
dec
iret
push
mov
fdivrp
push
shrb
mov
inc
mov
jbe
adcb
pop
pop
or
mov
and
sti
rcrl
push
and
adcl
orl
scas
ds
movsl
and
into
and
int
xchg
pop
jl
imul
jbe
mov
push
push
jle
or
add
out
mov
out
and
cmp
out
repz
scas
leave
enter
dec
or
mov
jne
mov
jle
adc
sbb
mov
loop
pop
fwait
adc
pusha
xor
cmp
lahf
iret
pop
movsl
lock
leave
and
sbb
clc
scas
inc
test
inc
flds
push
orb
cmp
jle
xor
xchg
ret
pop
lret
lret
mov
lods
mov
ja
stos
mov
int3
jecxz
sub
test
rorb
xor
dec
je
push
jno
fiaddl
bound
inc
scas
dec
in
dec
lret
out
push
xchg
xor
dec
sbb
mov
dec
dec
adc
xor
out
cmp
xor
jbe
mov
mov
adc
cmc
mov
push
gs
adc
stc
int3
hlt
adc
adc
ja
xor
shlb
xchg
mov
test
dec
sbb
cmp
aas
xchg
sub
jno
sub
add
outsb
test
mov
adc
pop
in
mov
addr16
or
les
test
push
xor
jl
mov
jnp
test
or
xchg
jb
mov
adc
lock
and
sti
xor
loope
jl
mov
push
push
rcl
or
jne
lret
testb
nop
push
sbb
sub
sbb
ja
arpl
mov
mov
mov
sbb
addr16
push
jle
or
mov
addr16
dec
fidivrs
inc
pop
popa
mov
incl
jecxz
xchg
dec
sbb
and
out
add
mov
lods
jge
sbb
sar
jne
fsubrl
push
cltd
adc
std
fidivl
aas
neg
mov
lret
adcb
mov
and
movsb
rol
adc
arpl
mov
subl
push
and
mov
push
jns
cmp
cmpsl
xor
arpl
inc
cltd
outsl
insb
xchg
adc
scas
imul
sbb
outsl
jge
sbb
cmpsb
add
inc
cmpsl
ljmp
inc
arpl
dec
dec
push
enter
fidivrs
xchg
pop
push
mov
adc
inc
push
cs
xor
mov
mov
cmpb
pop
pop
loopne
mov
push
or
movsl
and
mov
call
push
mov
sbb
sarl
hlt
mov
push
pop
mov
jl
mov
push
insl
inc
adc
mov
sbb
sub
mov
jecxz
and
xchg
pop
xor
ret
outsb
and
inc
add
inc
int3
adc
out
bound
cmova
shl
stos
mov
aaa
jbe
xchg
fstpt
fdivrl
shrl
ja
idivl
dec
movsl
sbb
mov
daa
push
push
jnp
cmp
pusha
ss
notb
scas
push
inc
in
mov
jne
fbstp
inc
mov
arpl
arpl
and
or
out
stos
hlt
pop
adc
add
pop
cmp
mov
aas
or
addr16
sub
jl
jle
data16
fstpt
push
mov
sbb
jg
mulb
pop
ja
test
cmp
fidivrs
sub
ret
xlat
push
jge
xchg
and
mov
stos
popf
stos
and
xor
sub
lds
loop
sbb
mov
add
sub
xchg
ret
pop
les
je
sub
dec
pop
push
lcall
fs
pop
inc
cmpsb
or
push
mov
cmpsl
cs
rcrl
fstps
mov
inc
pop
outsl
pop
adc
lds
pushf
cli
sbb
mov
movsb
clc
movsb
xor
repz
mov
out
out
test
mov
ret
add
sub
mov
movsb
mov
add
and
shl
jle
xchg
add
mov
cmovns
sub
or
test
cmp
fistps
add
cmp
aad
mov
negl
in
out
inc
cmp
imul
test
push
mov
pop
lock
mov
repz
jmp
aaa
std
cltd
js
mov
jmp
xchg
add
test
aad
dec
arpl
outsl
sarl
mov
add
adc
fnstcw
push
adc
xor
shl
xorl
add
stos
add
and
push
dec
pop
idivl
aas
dec
adc
or
popf
sub
push
test
inc
ds
repnz
imul
xor
xchg
cwtl
jp
cltd
lock
test
lock
stc
dec
inc
mov
sbb
push
shl
ss
ja
or
sahf
xor
push
out
mov
mov
xor
popf
leave
lods
loopne
out
cli
pop
roll
mov
or
inc
in
inc
ja
jp
push
outsb
push
cmpsl
enter
rcll
out
fldcw
loop
inc
data16
mov
cmpsb
xlat
xor
push
cli
adc
xchg
add
into
xor
or
out
addr16
pop
addl
icebp
sub
shl
adc
lea
adc
je
cmpsl
pop
jno
addb
sbb
imul
scas
inc
imul
into
xor
cmp
out
in
mov
xchg
ret
movsb
aaa
clc
cmpsl
pop
inc
jmp
mov
fwait
mov
sbb
jg
cs
shll
js
aam
hlt
cmpl
jle
mov
imul
outsl
notb
rcr
aad
test
cld
push
stos
sbb
sub
mov
or
stos
cmp
fisttpl
mov
test
mov
mov
std
or
dec
pop
or
push
and
jle
jns
push
popf
stc
fdiv
lea
mov
jmp
pusha
adc
cmpsb
pop
inc
dec
add
stc
jmp
popf
rolb
pop
cmp
jl
and
xchg
jg
les
adc
pop
addr16
popl
aaa
sub
mov
imull
out
mov
mov
xor
sbbl
pop
aaa
pop
clc
and
add
push
outsb
stc
jl
push
add
sub
adc
dec
in
add
cmp
insl
repz
and
stos
enter
test
mov
add
or
les
pusha
add
fwait
jbe
mov
test
inc
es
out
inc
outsl
lds
out
fbstp
icebp
dec
pop
stos
mov
xchg
out
test
ret
cmpsb
cmp
lods
lahf
les
inc
mov
jg
loop
stos
mov
fnsave
jmp
in
sti
pop
xchg
sub
dec
pop
icebp
ss
addr16
push
repnz
add
mov
cmp
popa
outsb
and
push
out
dec
decb
fldcw
inc
sub
ja
mov
imull
mov
xchg
lret
scas
scas
jmp
mov
rclb
push
movsb
cli
ret
push
pop
mov
push
gs
push
dec
xchg
cmpsb
jae
outsb
lods
fidivs
in
and
add
or
loopne
pop
mov
push
cmpsl
ds
in
and
inc
movl
stos
xlat
push
fnstsw
popl
jne
dec
mov
ljmp
cld
cmp
outsb
sbb
notb
add
decb
cmp
or
int3
lret
push
and
popa
adc
shll
and
bound
dec
pushf
mov
push
pop
out
mov
call
mov
add
mov
cmp
adcb
xor
jle
xor
add
iret
fidivs
repz
in
test
iret
mov
xorb
jecxz
jae
xor
xchg
aaa
ljmp
pop
popa
das
xchg
jge
sub
or
stos
add
pop
sub
mov
jge
and
test
fiadds
xor
popa
outsl
dec
mov
or
fwait
xchg
sub
test
xchg
xchg
das
cld
adc
loopne
loope
xchg
add
inc
ja
repz
addr16
int
ds
fdivl
push
mov
popf
pop
movsb
ret
jnp
clc
loop
movsb
in
ret
and
fidivrl
icebp
mov
jno
les
mov
and
adc
idiv
testl
dec
inc
or
test
push
add
movlps
fcoms
aas
lods
das
jb
add
ret
or
push
clc
stc
cwtl
movsb
daa
rol
or
notl
fnstenv
movsl
in
jge
fwait
dec
lock
pushf
cmpsb
mov
dec
pop
mov
push
mov
mov
test
mov
popf
lods
xchg
imul
call
leave
bound
mov
insl
fsubrs
and
jg
xlat
repz
pop
leave
fnstenv
mov
cmpsb
jbe
int3
xchg
adc
icebp
aaa
bound
inc
mov
jbe
ficoms
pop
xchg
jbe
cmp
mov
out
push
imulb
xlat
sbb
mov
dec
jmp
push
jp
sahf
dec
cltd
cmpsl
ret
into
sub
pop
ret
mov
xor
outsb
cs
ret
pusha
xchg
sbb
pop
or
xchg
and
jae
sub
cmp
push
insl
movsl
pushf
bound
mov
push
add
mov
in
mov
pop
je
xlat
or
jge
push
scas
dec
dec
sarb
dec
pusha
imul
mov
mov
popa
jo
iret
and
aas
pusha
sbb
or
enter
aas
mov
cwtl
fisubrs
adc
addl
inc
push
jg
sbb
scas
push
faddp
pop
imul
mov
sbb
inc
sub
jnp
es
lods
sti
loopne
push
or
push
add
es
test
add
xchg
push
negl
std
mov
xor
and
std
imul
pop
push
mov
mov
xor
sub
xchg
xor
enter
mov
dec
fstpt
cmp
das
adc
mov
jbe
adc
test
inc
pop
or
xor
push
jle
sub
sahf
in
jnp
dec
sarl
push
push
xor
je
mov
and
enter
sub
inc
sbb
add
dec
leave
add
sbb
push
and
jmp
push
xor
inc
pop
jno
cmp
arpl
and
mov
mov
xchg
or
idivl
mov
pop
jno
ret
arpl
push
mov
sahf
dec
pop
out
pusha
pop
in
mov
popf
cli
cmp
push
dec
or
mov
in
rcl
rorl
imul
cmp
repz
test
lcall
stos
movsl
jp
lret
mov
xchg
stos
loop
add
mov
loop
lock
mov
into
mov
sbb
push
jecxz
pusha
mov
stc
cltd
jo
xor
mov
ja
clc
mov
or
mov
mov
sarl
add
scas
mov
sar
dec
or
xchg
push
test
mov
lahf
mov
jmp
rclb
in
cld
mov
bound
arpl
ret
fwait
sub
dec
pop
mov
adc
mov
xchg
sub
adc
adc
add
sub
push
mov
cmpb
mov
int
adc
xchg
mov
int
sbb
and
xor
lret
dec
inc
daa
aas
add
jmp
adc
ds
outsl
sub
rcll
jno
jne
ds
nop
stos
sub
push
cmp
fdivrl
or
push
mov
pop
ja
je
push
sbb
push
icebp
adc
icebp
mov
ljmp
adcl
cmp
repz
scas
push
movsl
jp
and
rorb
fldl2t
mov
movl
movsl
aam
cli
ret
dec
xchg
scas
iret
pop
xor
pop
jmp
imul
dec
idivl
jg
xchg
ljmp
imul
stos
adc
shll
xchg
sbb
das
xchg
jae,pt
mov
inc
jns
stc
mov
hlt
jg
mov
push
jge
or
or
adc
lret
inc
inc
push
xor
stos
mov
push
inc
push
push
cmp
inc
xor
push
decb
jae
dec
cmpsl
jnp
push
lds
mov
jnp
mov
cmp
mov
pop
xchg
cld
xchg
xor
sub
sub
mov
mov
pop
mov
cmp
lea
aam
rcr
imul
cmp
inc
and
pmaxsw
sarl
cmpl
int
pop
mov
sbb
repz
xor
mov
daa
jmp
or
mov
jg
push
fnstsw
fbld
test
sbbb
js
xchg
pop
aaa
sti
inc
or
insl
dec
cmp
imul
sbb
dec
mov
aaa
into
dec
dec
nopl
into
pop
in
loop
test
lret
dec
sub
testl
ljmp
aas
add
aaa
aas
fnstsw
xchg
orl
mov
icebp
cmpsb
icebp
in
mov
push
pop
data16
xchg
jmp
enter
and
mov
push
sub
xchg
movhps
xchg
mov
cwtl
cmp
enter
dec
and
xor
and
jnp
mov
jge
jmp
stos
sub
and
mov
fcom
call
xor
inc
fistps
push
cmp
jecxz
xchg
mov
fmuls
fcompl
or
mov
or
aaa
push
lea
lret
int3
fimuls
cltd
push
cmpsb
inc
xchg
jmp
jnp
clc
sub
push
decb
nop
shrl
and
out
gs
sbb
out
mov
adc
mov
in
push
mov
cmp
jb
mov
push
push
add
or
ja
out
sbb
xchg
in
lock
mov
clc
imul
mov
mov
cmp
hlt
pop
mov
jle
bound
dec
out
dec
xor
insb
push
ljmp
ja
and
mov
mov
lods
push
pop
pop
adc
out
inc
jle
stos
jbe
daa
out
xor
jbe
sbb
and
pop
pop
mov
push
std
sbb
push
mov
int
scas
movsl
mov
mov
jp
xchg
xor
std
lcall
pop
or
and
fsubrs
out
test
es
sbb
push
cld
adc
mov
sbb
arpl
xor
mov
add
arpl
test
inc
pop
dec
mov
jmp
imul
fyl2x
pop
cmp
sub
dec
dec
xchg
ret
inc
pop
jmp
or
es
push
mov
mov
pop
mov
iret
add
mov
sbb
fmull
subb
xor
lds
xchg
xchg
cmpb
fcmovne
and
scas
jge
pop
cmpsl
mov
jnp
call
fimuls
jb
stc
push
rcl
das
shll
add
mov
mov
ret
adc
and
mov
clc
mov
push
ds
rorl
repnz
sub
push
mov
push
rorb
mov
stos
xchg
jecxz
in
cmp
mov
sub
shrb
out
pushf
sahf
xchg
cs
add
test
rep
xchg
or
jns
jbe
fildl
adc
push
mov
aad
in
pop
pop
ficomps
xor
mov
add
mov
call
push
xchg
pop
dec
fisubrl
mov
fucomp
imul
outsl
sbb
fsubrs
out
fimull
dec
out
cmp
pop
adc
mov
push
or
pop
cmp
jbe
pop
dec
push
mov
jp
addr16
pop
xor
cmpsl
bound
loope
mov
cltd
cmp
repz
mov
mov
aaa
pop
jb
int
cmpsb
dec
daa
adc
xchg
test
notb
cli
shrl
in
cld
shl
popf
push
pushf
xor
and
je
jbe
bound
add
in
jl
mov
adc
orl
push
out
sti
lret
fcompl
ret
dec
repnz
xlat
into
xchg
cmc
xchg
out
int3
gs
scas
jg
std
fnsave
in
mov
jns
lcall
aam
addl
push
mov
sbb
jp
fidivrs
mov
test
out
fs
movsl
pop
movsl
cmp
cmp
xlat
clc
test
fsubrl
arpl
fs
loopne
ljmp
mov
jns
pushf
mov
test
add
or
int
sub
shrb
cmp
cmp
adc
adc
test
xchg
int
add
mov
je
cmp
test
mov
sub
aas
pop
je
pushf
adc
vunpckhps
loop
push
cmp
xor
int3
arpl
push
out
mov
in
push
insb
inc
or
pop
jge
sbb
xchg
shrb
xchg
insb
dec
mov
stc
adc
sub
sbb
cmp
das
test
cld
xor
test
or
push
mov
jno
fstpl
sub
outsl
sar
mov
ficompl
popf
jnp
neg
sarb
das
mov
in
repnz
push
inc
ss
mov
push
inc
loop
inc
ret
popf
fsubl
dec
xor
enter
and
xor
mov
push
cmp
mov
mov
cmpsl
test
push
int3
xor
subl
seta
mov
loope
test
insb
jecxz
or
dec
mov
jmp
shll
mov
je
pop
mov
and
mov
xchg
push
and
mov
out
sub
movsb
insl
imul
sub
adc
lea
adc
ss
xchg
cli
mov
push
dec
imul
xchg
pop
mov
movsb
add
fisubs
xchg
cmc
xor
bound
stos
inc
stc
pop
adc
xchg
leave
movsb
inc
nop
adc
ljmp
push
lock
rol
lea
push
aad
fwait
addb
cmp
pop
mov
sub
call
in
or
adc
adc
imul
adc
imul
adc
push
cmp
hlt
cmp
pop
xlat
jmp
push
and
push
add
jge
xor
cmp
addr16
adc
test
inc
fsubs
push
in
push
sub
or
xchg
daa
mov
dec
loope
sbb
dec
inc
mov
jb
ficomps
inc
inc
jns
cmp
xchg
ljmp
adcl
aad
push
mov
xlat
sbb
mov
add
pushl
pop
push
test
gs
xor
adc
andb
fidivs
inc
add
xchg
lret
lds
ljmp
testb
mov
aam
cmp
cmp
jnp
pop
pop
data16
aam
cmpsb
ja
mov
in
cwtl
imulb
je
lods
inc
je
cli
push
lods
cld
dec
lret
outsl
cmc
push
repz
dec
popf
mov
lret
jecxz
pop
sbb
cmp
mov
leave
dec
push
xor
or
mov
sbb
jbe
jne
fs
addr16
enter
mov
mov
lret
popf
add
pop
ficomps
call
mov
dec
loop
shr
xor
cmp
mov
mov
popf
daa
jbe
sar
pop
add
xchg
jnp
dec
pop
jmp
sbb
xchg
inc
mov
icebp
pop
push
in
cmp
addr16
pop
and
dec
pop
push
out
mov
cli
xchg
pop
add
sub
pop
sbb
test
aaa
mov
out
lds
aaa
xor
inc
push
out
rcll
loopne
outsb
lods
popf
mov
rorb
dec
jg
dec
notb
ljmp
cmp
push
dec
pop
inc
movsb
cmp
pop
and
cwtl
ret
push
pop
xchg
repnz
fstl
shll
ja
movsl
cwtl
sbb
push
push
cmp
test
rclb
lock
iret
dec
fiadds
jne
inc
pop
test
sub
sbb
xchg
sub
outsb
sub
mov
pop
in
decb
xor
arpl
negb
push
outsb
ret
pushl
sahf
dec
push
xchg
aaa
cmp
inc
clc
push
loopne
or
mov
stos
adc
shr
dec
rcrb
pop
adc
dec
hlt
lock
popl
in
lret
mov
dec
adc
and
dec
loop
xchg
jmp
push
xchg
aas
push
adc
scas
pusha
in
push
jno
cmp
cmp
xchg
jle
stc
pop
adc
sti
out
mov
and
shrl
ror
je
out
sti
xchg
lods
mov
adc
mov
mov
test
inc
data16
rorb
lds
xchg
mov
push
push
xor
jp
aas
lock
and
shrl
gs
and
ficompl
mov
scas
xchg
fstp
gs
dec
and
fs
sub
outsl
add
xchg
inc
and
mov
or
imul
inc
mov
popa
int3
sti
and
push
ljmp
cmc
lret
or
jno
movsl
in
xchg
test
or
mov
mov
cltd
cmpl
mov
aas
adc
shll
imul
aas
cld
sbb
cmp
push
pop
adc
pop
outsl
stc
sub
add
pop
repz
adc
jp
repz
push
pusha
iret
sub
or
str
dec
pop
inc
cwtl
adc
mov
loopne
stc
adc
loopne
pop
jle
loop
lods
mov
add
jp
dec
and
iret
lods
jmp
nop
sarb
dec
in
inc
or
inc
cmp
shll
push
push
pop
xchg
gs
add
aaa
xchg
push
xchg
xor
adc
pop
mov
sahf
bound
fidivrs
push
js
mov
bndstx
pop
and
jp
cltd
enter
mov
or
cmp
xchg
sub
rol
push
jmp
mov
fnstcw
pop
cmpsl
push
test
sub
jl
jnp
test
andb
push
repnz
out
lret
sahf
push
mov
fldcw
adc
push
xor
aam
push
lods
mov
movsb
jae
dec
cmp
mov
sub
cmp
jl
jmp
and
sub
repz
mov
out
xor
insl
push
push
mov
jo
std
cmp
in
inc
loopne
add
arpl
sbb
int3
xor
in
jp
mov
daa
push
jge
fstl
add
cmp
xlat
or
xchg
lods
scas
sti
enter
fs
adc
iret
pcmpgtb
mul
push
push
in
adc
je
xchg
clc
into
mov
xor
insb
dec
fdivl
pop
lds
mov
inc
mov
int
pop
mov
jmp
mov
add
or
jecxz
mov
les
sub
not
inc
adc
lahf
les
mov
mov
sub
dec
xchg
adcl
or
inc
daa
mov
data16
ret
adc
lret
jmp
sbb
out
sub
jge
mov
push
pop
jmp
imul
jp
and
stos
mov
pop
inc
mov
dec
repnz
mov
popf
decb
pop
adc
imul
pop
dec
test
loopne
lds
das
inc
fcomi
cltd
sub
xchg
out
sub
repz
xchg
movsb
sub
dec
cmp
xor
and
pop
push
daa
bound
push
icebp
mov
jno
rcrl
mov
pop
cli
mov
add
test
sbb
outsl
shrb
jg
aas
and
sbb
push
jb
sbb
loope
stc
fwait
and
icebp
jmp
and
fidivl
fnstcw
pop
sub
cmc
mov
test
jnp
insl
cs
fdivrl
push
hlt
or
jne
mov
push
sub
mov
cwtl
or
cmp
add
jno
fnstenv
daa
addl
lods
jge
jne
sub
mov
dec
and
or
xor
enter
jle
mov
sahf
xchg
mov
or
sbb
pusha
pop
push
outsb
fwait
push
jb
sub
pushf
outsb
jl
fldl
add
pop
xchg
push
rorl
outsb
or
ret
clc
jle
call
movsl
dec
hlt
incb
jecxz
push
leave
push
dec
dec
adc
add
in
loope
mov
mov
shrl
dec
xchg
jno
xor
xchg
sub
test
lods
ss
cmpsb
lds
cmp
dec
pop
cmp
push
repz
aaa
and
cwtl
sbb
orl
lret
or
negl
xlat
mov
adc
push
sub
je
cs
pop
inc
les
mov
stos
shlb
frstor
push
jne
pop
clc
xchg
pop
mov
sbb
xchg
push
jb
mov
imul
outsb
mov
jne
dec
xor
add
push
test
inc
inc
mov
pop
imul
xchg
lock
dec
add
ret
pop
into
aad
negl
stos
push
sti
fsts
mov
stos
mov
push
sub
pushf
scas
int
and
subb
gs
int
stos
mov
sub
pusha
lods
add
dec
repnz
cwtl
push
shlb
ds
je
adcl
xor
cli
xchg
add
mov
push
adc
fidivrl
iret
xchg
dec
pop
int3
lock
inc
push
les
in
jo
loop
dec
sbb
mov
outsb
into
je
ja
inc
jecxz
test
out
cmpsl
cmpl
mov
xchg
jnp
addr16
inc
xor
ficompl
roll
ds
neg
loop
data16
jno
xchg
mov
push
test
sub
pop
jmp
sub
push
aas
mov
gs
out
jge
add
push
fsubp
test
sbb
call
frstor
pusha
addr16
test
or
inc
scas
stos
test
and
cmpl
sbb
mov
insb
jmp
add
movsl
out
pop
insb
push
mov
cmp
stos
inc
cmpxchg
lea
in
out
cld
icebp
int3
in
cmp
inc
mov
inc
push
test
adc
add
ja
jae
cmc
lods
push
cmp
adc
xchg
xor
popa
fs
push
ds
sarl
icebp
in
and
mov
lret
repz
les
cs
mov
jb
cmpsl
cmp
pusha
sbb
fld
es
test
adc
jle
fdivp
fstl
adc
dec
js
scas
jge
and
inc
int3
in
test
push
push
xchg
or
stc
lds
scas
sbb
test
jns
xchg
sbb
cltd
nop
mov
dec
push
mov
xlat
xorl
fcmovnb
lock
and
xor
sbb
pop
rorb
loop
mull
sbb
dec
xchg
pushf
adc
test
xlat
sbb
mov
dec
pop
sub
cltd
prefetch
sub
xor
out
int
add
mov
push
pop
outsb
js
cltd
outsb
fimull
stc
mov
pop
add
cmpsb
jge
cltd
cld
lret
mov
adc
pop
xlat
ljmp
mov
inc
outsb
lock
in
fists
out
cld
fimuls
inc
loopne
popa
push
jo
vprotb
jge
cmp
xchg
sbb
lcall
mov
fsubrl
add
cmpsb
dec
daa
mov
testl
xor
pop
inc
mov
dec
outsb
xor
scas
dec
movsl
push
fstpl
mov
and
and
lds
ret
aam
jp
loopne
mov
or
mov
aam
mov
popf
lds
push
outsl
adc
stos
or
or
mov
jecxz
popa
xlat
cmc
insb
ret
xchg
sub
in
dec
adc
jne
adc
imul
inc
ss
addr16
iret
pop
cwtl
cmp
sub
scas
fistps
dec
mov
sbb
movsl
out
rol
mov
xlat
sub
push
jo
mov
mov
outsb
xchg
cmp
adc
mov
push
push
andb
mov
repnz
jns
inc
scas
mov
adc
inc
adc
stos
push
mov
inc
test
dec
cld
in
test
mov
mov
in
fisubs
ja
or
push
data16
pop
cmp
push
lahf
stos
test
dec
enter
xchg
test
neg
or
mov
mov
repz
sub
sbb
mov
pop
lock
sti
and
xchg
mov
lret
hlt
jecxz
dec
fisubs
mov
movsl
movsb
repnz
sbb
jl
mov
dec
loope
ja
les
popf
mov
les
or
jp
cmpb
pop
cmpsb
or
fdivrs
imul
push
sbb
jo
jnp
outsl
cmp
aad
mov
mov
push
xor
cltd
mov
insl
out
out
mov
insl
out
jle
jnp
inc
insl
or
rolb
mov
dec
loopne
out
jecxz
and
decb
test
xchg
rcrb
add
inc
mov
dec
dec
cmc
dec
mov
add
in
jmp
and
lret
addl
xor
xchg
movsb
popa
jg
mov
rclb
mov
dec
pop
sub
subl
add
in
adc
adc
mov
jle
dec
or
adcl
xchg
and
repnz
pop
sbb
pop
cmp
jb
jno
jmp
jae
dec
and
fdivrl
lock
push
lds
cmc
cmp
or
rcll
sbbb
mov
xor
iret
add
mov
xchg
movsb
mov
enter
xchg
inc
lret
jmp
add
call
adc
icebp
sub
sbb
insb
repz
aas
dec
adc
ds
and
pop
jmp
repz
gs
sub
stos
jne
mov
fsubr
push
sahf
test
ret
dec
add
pop
stos
xchg
inc
mov
mov
sub
out
outsb
sbb
ss
mov
jecxz
jge
mov
cli
pop
ja
test
inc
movsb
pop
lea
sbbb
pop
insb
dec
cmp
push
jmp
jb
call
subl
dec
or
scas
cmpsb
outsl
dec
shll
dec
pop
mov
shrb
jge
push
insl
in
dec
push
ja
push
bound
test
mov
sub
dec
je
xor
adc
adc
cmp
ja
dec
sbb
pop
xor
mov
stc
nop
out
in
int3
xchg
xchg
int
ja
xchg
fs
xchg
pop
shll
test
jl
lea
aad
movsb
test
shr
xchg
mov
jmp
add
cwtl
das
adc
sub
outsb
mul
into
push
mov
cmp
test
cmpsl
push
mov
out
sbb
mov
add
mov
pushf
pop
jp
outsl
aad
mov
jl
pop
sub
adc
push
and
push
pop
cmc
xchg
outsl
cmpsl
nop
mov
sub
daa
pop
outsl
push
push
add
lods
or
add
cld
imul
mov
lock
loope
adc
adc
mov
pop
mov
mov
je
clc
sub
lret
jns
jg
jg
iret
iret
mov
mov
loop
adc
daa
pop
loopne
rol
stos
mov
sbb
stos
dec
lock
addr16
sub
rolb
iret
sbb
inc
fdivs
outsl
notl
pop
pusha
testl
jle
mov
fstpl
repz
pushf
pusha
jg
es
mov
mov
fwait
or
cmp
pop
out
pop
push
clc
repz
inc
sbb
adc
and
push
xchg
mov
test
cmpsb
pop
cmp
ja
cmp
scas
cmp
nop
daa
std
and
pop
push
mov
fs
sub
push
jns
sbb
test
dec
pop
cltd
int
mov
fs
fldcw
add
mov
daa
icebp
jle
loope
aam
test
xchg
dec
sbb
test
and
sbb
mov
divl
icebp
pop
iret
mov
shl
pusha
lods
cmc
pop
call
mov
call
xchg
jge
sub
push
scas
mov
shll
pop
and
outsb
testb
xchg
mov
push
or
pusha
mov
mov
stc
adc
outsb
dec
push
bound
jg
mov
pop
ret
bound
mov
mov
outsl
rol
nop
das
insb
pop
icebp
xchg
hlt
cs
sub
inc
decl
sub
lea
in
pop
repz
dec
jl
mov
sbbl
mov
fwait
add
xchg
mov
pushf
sahf
outsl
inc
mull
xchg
cmp
jle
mov
mov
adc
aaa
xchg
gs
daa
outsl
sub
mov
mov
lret
leave
sub
data16
ja
mov
pcmpgtb
mov
sbb
inc
aad
xchg
int3
cmp
cmp
cmpsb
fsub
testl
jns
pop
aam
pop
push
jge
mov
adc
hlt
dec
addl
sbb
cmp
repz
fmulp
sub
or
daa
ja
mov
mov
gs
rcrb
in
mov
loop
popf
cwtl
cs
movsb
je
xchg
mov
outsb
call
mov
adc
out
repz
sub
dec
out
jge
push
stc
inc
fsubrs
jne
jl
fdivrs
arpl
lahf
or
std
xchg
sub
cmp
aaa
into
lock
jle
scas
aam
es
lcall
sbb
and
cli
addb
jae
orb
cmc
pop
cli
xchg
adc
inc
push
jns
dec
addr16
popf
sbb
mov
ljmp
jb
lea
jno
das
push
outsl
mov
jg
jno
mov
mov
rcl
or
mov
cwtl
bound
imul
and
mov
inc
scas
xchg
mov
mov
push
cmp
xor
inc
divb
call
pop
inc
popf
pop
dec
int3
jnp
lods
pop
leave
mov
adc
mov
mov
adc
and
data16
je
adc
stc
dec
addl
ds
inc
pop
loope
in
sub
repz
scas
das
cltd
xor
lret
pop
enter
aaa
mov
mov
ret
cmpsl
cmp
fsubrs
sub
pop
in
xchg
jge
push
bound
fs
pop
aaa
mov
es
sbb
dec
pop
sub
testb
inc
leave
xchg
ljmp
push
call
cmp
dec
out
push
dec
xor
dec
lods
int3
out
cmp
pushf
adc
sub
dec
out
aam
inc
sbb
inc
jns
les
inc
sub
icebp
pop
add
das
sbb
inc
sub
push
popa
xchg
add
push
inc
mov
dec
sub
sub
mov
jp
pop
inc
repnz
or
add
pop
fs
out
mov
xchg
out
push
push
cmp
cli
loope
into
mov
mov
into
repz
out
stos
xchg
add
mov
jmp
mov
and
push
nop
mov
call
sub
icebp
adc
icebp
lret
ds
and
js
pop
or
push
mov
xchg
mov
jne
arpl
add
pop
cmp
mov
xchg
arpl
movsb
sub
jp
gs
xchg
decb
xchg
inc
push
inc
das
cld
inc
scas
dec
lods
shlb
sub
mov
call
push
mov
lods
add
aaa
sbb
push
lds
push
dec
popf
push
push
inc
fildl
mov
in
repz
mov
bound
daa
lret
mov
lret
sti
mul
sbb
pop
xchg
into
xchg
add
aaa
gs
cltd
pop
loope
mov
xchg
xor
inc
in
shrb
fldcw
loop
push
add
jno
mov
sarl
movsb
pop
jecxz
pop
gs
lock
fidivrl
mov
jl
out
lock
jne
ljmp
lods
cmp
int
adc
mov
or
popa
insl
jge
lea
jp
or
and
pushf
dec
stos
xchg
shrl
hlt
ja
lods
ret
adc
aad
jo
inc
shrl
push
fdivrl
push
lods
loop
icebp
insb
ret
test
mov
popa
loopne
pushf
pop
mov
iret
and
stos
nop
pop
fwait
pusha
mov
fidivrs
sub
icebp
inc
mov
dec
xor
movsl
xchg
dec
xchg
mov
enter
aad
adc
cli
jg
jo
xchg
adc
lret
cmp
adc
je
cmp
mov
mov
pop
mov
js
fcomps
imul
scas
ds
lahf
andb
mov
int
xchg
mov
addb
popa
ret
or
pop
mov
loop
arpl
dec
xchg
nop
insl
mov
call
push
pushf
xor
pop
sahf
lcall
repz
rcll
cs
xchg
testl
dec
mov
mov
roll
icebp
cmpsb
les
sub
adc
cmpl
out
or
pop
push
push
inc
and
dec
xor
lods
xor
xor
adc
lcall
xor
cmp
cld
sbb
inc
push
jne
loopne
or
add
push
ss
popf
aas
dec
mov
int3
xchg
in
jp
xor
lea
imul
popa
cmp
ja
inc
pop
mov
je
adc
sbb
mov
cmc
pop
les
xchg
int3
mov
leave
daa
push
or
xor
inc
add
mov
test
xchg
mov
jns
sbbb
xchg
push
aad
roll
jbe
shl
adc
xchg
stos
sub
arpl
in
imul
sbb
dec
in
les
pop
cli
xchg
sbb
movsl
xchg
test
lock
xchg
stos
lahf
xchg
iret
cmp
leave
loope
sub
shll
fpatan
fstpl
adc
hlt
cmpsb
dec
mov
jge
inc
xlat
cmp
cmp
fstpt
inc
cmc
rclb
adc
test
in
and
ja
ss
mov
test
push
enter
jne
cmp
add
shll
outsl
std
aam
push
pop
scas
les
lds
sbb
xchg
cli
movsb
fldt
int3
in
or
cmp
adc
cmp
call
rol
dec
sub
ret
mov
in
inc
cmc
shlb
mov
or
adc
shll
ss
js
xchg
das
ret
jge
insl
add
call
mov
adc
xor
xor
xchg
test
stos
jge
leave
sbb
mov
adc
pop
dec
ds
jmp
adcl
sbb
ljmp
fdivl
lods
stos
stos
push
jg
mov
rcl
mov
fisubl
mov
push
outsl
xchg
or
divl
cmp
imul
pop
hlt
inc
dec
fdivrl
notl
loopne
jle
clc
in
lods
rcll
scas
jecxz
test
push
adc
xor
aaa
cmp
xor
or
adc
add
adc
inc
pushf
pop
flds
mov
ret
movsl
mov
jmp
sbb
pop
lock
inc
sbb
push
lea
aaa
into
cmp
pop
push
mov
decb
or
inc
sbb
jg
arpl
mov
outsb
mov
rep
mov
ljmp
sbb
popf
and
adc
cwtl
inc
fsubrs
lea
call
mov
pop
xlat
fld1
insb
aas
in
jmp
subl
mov
xor
scas
imul
cwtl
dec
push
fucom
rclb
push
mov
xor
inc
push
xlat
mov
enter
add
lds
imul
mov
sbb
test
pop
ds
or
xor
cltd
into
movsl
dec
mov
out
mov
hlt
push
movsl
aad
in
lret
dec
loop
mov
push
xor
js
push
stc
das
lcall
icebp
xor
cwtl
popf
and
out
push
out
mov
add
insl
sub
lods
stos
xor
lods
sub
mov
jb
sub
xchg
sub
cmp
pop
ljmp
je
lahf
adc
xchg
out
das
cmp
jp
dec
mov
mov
stos
shll
imul
inc
add
adc
sbb
mov
pushf
cli
xchg
shlb
sub
mov
scas
call
jmp
push
cmp
push
mov
mov
fs
xor
xor
outsb
cmp
outsl
scas
xchg
sbb
jbe
sti
sbb
mov
jg
outsb
adcl
popf
lods
bound
addr16
insb
inc
pusha
filds
mov
dec
mov
jno
or
dec
xchg
sarb
shlb
mov
daa
jb
push
sub
fwait
jb
and
fisubrs
sbb
mov
mov
hlt
imul
and
enter
loope
stos
mov
add
adc
sub
push
inc
cltd
aad
stc
jle
fildll
shlb
push
push
inc
cmpsb
mov
or
loopne
mov
xchg
lods
jg
stc
dec
cli
pop
sbb
cmc
ret
fwait
jne
xchg
push
sbb
ja
scas
ret
xchg
mov
sbb
jl
testl
sub
cmp
sbb
sub
sbb
adc
adc
nop
scas
int3
jb
jnp
push
insl
arpl
fsubrp
cmp
loope
and
test
push
outsb
stc
push
cli
and
lods
cld
mov
xor
insl
and
add
movsb
hlt
push
popa
xor
lcall
cwtl
movsb
dec
ss
insb
adc
rorl
mov
and
inc
ds
adc
jbe
lds
adc
sub
cli
sub
rcrl
dec
mov
add
jecxz
mov
add
insl
sbbb
push
push
jl
es
pop
in
cld
push
mov
xchg
sbb
adc
in
cli
pusha
orb
jnp
or
mov
xchg
fldenv
pop
xchg
pusha
iret
jecxz
rcll
push
or
loop
or
pop
jge
outsl
sub
pop
lds
test
fwait
adc
pop
add
and
pushf
leave
sbb
fstpt
sub
mov
shrb
insl
rcl
popa
sub
andb
pushf
mov
adc
loopne
mov
jbe
jno
stos
pop
push
or
dec
lea
stos
inc
xor
shrl
test
out
xchg
lcall
add
dec
adc
jle
das
xor
mov
std
pop
lea
shll
inc
nop
mov
repnz
cwtl
shll
das
dec
sbb
lret
imul
nop
jo
cmpsl
sub
adc
test
xor
jbe
fsubs
mov
call
pop
dec
mov
lahf
ss
ror
pusha
push
loop
fisttpll
out
pop
nop
xor
jmp
lcall
repnz
push
jbe
or
xor
scas
jae
dec
and
fldcw
repnz
pop
sub
out
pop
hlt
pop
add
or
mov
cmpsl
test
add
popf
and
aam
xlat
inc
and
cmp
insb
sub
lea
aad
push
jne
test
mov
cmpsl
cs
pop
mov
shrb
sub
pop
cli
push
mov
fdivrs
or
lods
cmp
daa
jne
pop
push
inc
xlat
pusha
xchg
scas
sbb
pop
lock
stos
inc
push
out
cmp
leave
loope
bound
aam
data16
xchg
mov
push
movsb
fldt
test
push
cld
sub
lret
push
dec
dec
dec
insb
sti
mov
or
ja
xchg
sbb
inc
leave
mov
dec
pushf
icebp
icebp
dec
loop
xchg
pop
rcrb
cmpsb
fidivs
sarb
adc
fwait
sub
ret
test
and
cmp
jge
dec
scas
shrl
jmp
mov
xlat
sub
in
cmp
add
clc
shll
xchg
add
hlt
mov
inc
sbb
adc
mov
dec
lret
in
fisttps
ljmp
popf
xor
cld
cmp
xor
ret
in
sahf
mov
arpl
cmp
cli
adc
dec
sub
add
sub
pop
and
push
test
jg
add
mov
jecxz
xor
mov
dec
ret
stc
pop
scas
aaa
dec
pop
pop
insl
xchg
imul
gs
test
sahf
pop
cmp
out
popa
mov
dec
sbb
outsb
aam
mov
inc
sub
imul
lock
lods
sub
das
clc
fimuls
popa
adc
jnp
xor
lods
xlat
sub
outsb
fidivs
bswap
rclb
xchg
and
cmp
jl
dec
loop
cmp
je
mov
add
xor
rol
mov
pop
or
aad
cs
ja
gs
dec
and
lock
inc
mov
ret
leave
sbb
pandn
mov
jnp
ss
and
shr
add
into
dec
lahf
sub
bound
imull
and
add
push
bound
xchg
int
pop
cmp
push
jmp
pop
mov
nop
lret
lods
pop
enter
enter
data16
je
pop
imul
ja
push
test
int
push
xor
cwtl
cmp
or
dec
out
enter
clc
ror
jnp
aas
mov
xchg
hlt
cli
lock
mov
fmuls
loop
add
jnp
xor
cwtl
sub
push
mov
push
addr16
addr16
dec
sahf
popa
repz
push
mov
test
adc
mov
push
sub
cli
sahf
cli
inc
fnstcw
sub
or
pop
aad
dec
pop
xchg
sbb
imul
dec
inc
sbb
fsubrl
repz
std
xchg
in
scas
mov
nop
jp
nop
daa
xchg
xchg
mov
int3
sub
pop
les
inc
adc
sbb
dec
mov
xorb
dec
adc
repz
cmp
scas
cmp
das
loope
dec
and
aaa
jmp
out
xchg
pop
idivb
scas
cmpsl
out
fisubrs
sub
stc
mov
pop
movsl
mov
orl
test
jbe
ds
movsl
data16
nop
je
lcall
fxch
and
add
not
adc
push
ret
fisubrs
enter
js
sarl
icebp
pop
sbb
movsw
pop
in
jle
jb
cmp
push
add
iret
jmp
push
leave
pusha
mov
jb
pop
pop
imul
movsb
rcr
cwtl
adcl
ljmp
fildll
scas
fld
adc
enter
sbb
sub
fcmove
and
shrb
sbb
jnp
cli
xor
lret
jnp
sahf
xor
push
mov
dec
xlat
adc
leave
cmp
mov
shrb
lea
sbb
adc
into
and
push
inc
inc
inc
ds
push
cmpsl
popf
lret
cmp
hlt
jl
aas
outsl
lcall
mov
cmp
int3
adc
cmp
test
test
outsb
lods
xor
push
out
prefetchwt1
mov
aad
jecxz
stos
inc
cmpsb
xchg
loope
xchg
mov
sbb
mov
xchg
es
push
insb
out
jno
ret
inc
jbe
jmp
vpsrlw
pop
cmc
pusha
sbb
and
in
movsl
lds
xchg
adc
xchg
fs
fdivl
xchg
and
and
lret
dec
dec
or
enter
mov
subb
shrb
or
cmp
in
mov
mov
lock
loopne
in
adc
out
cmc
mov
test
mov
sub
sub
pop
clc
or
sub
push
or
and
dec
mov
cmc
test
shrl
pusha
idiv
inc
pop
mov
lret
jle
ror
dec
in
test
leave
imul
insl
int3
faddp
inc
in
cmp
rclb
xlat
mov
push
loope
xor
std
inc
sbb
dec
out
cmp
in
dec
insl
mov
pop
cmp
cmp
outsb
xorb
leave
loope
mov
mov
gs
sub
sub
inc
fidivrs
fdivs
and
xor
cmpsb
mov
js
out
lods
hlt
in
adc
sub
add
jge
out
pop
push
scas
xchg
or
xor
inc
sub
fiaddl
add
pop
mov
sub
js
lods
and
jmp
popf
rcrb
daa
push
outsb
add
add
push
jae
ss
mov
lcall
xor
daa
push
inc
pop
and
xlat
stc
sub
push
scas
xlat
jecxz
or
sahf
mov
or
enter
xchg
scas
pop
dec
pop
shrl
sbb
es
jne
or
repz
callw
rcl
lret
push
or
sti
sahf
inc
in
cmp
stos
pushf
jne
popa
sbbb
sbb
dec
inc
dec
inc
leave
insb
pushf
lods
push
cmpsl
push
or
lret
sbbb
jmp
loope
xlat
imul
add
ja
dec
jnp
cwtl
movsb
mov
xlat
adc
or
leave
lret
pop
outsl
test
and
cmp
lret
movsb
call
or
jbe
jb
repz
add
push
jmp
movsl
inc
arpl
cmc
stos
jge
and
xor
inc
fwait
push
jbe
cmpsl
ljmp
es
mov
cmp
pop
pushf
loopne
mov
mov
dec
lret
pop
push
jns
push
mov
xlat
push
pop
pop
lock
xcrypt-ctr
cmpsl
fimuls
popa
fsubl
sbb
aam
add
lods
or
pop
inc
xchg
mov
test
jb
in
mov
jl
or
cltd
int
movsb
int
fdivl
adc
adcb
fnstsw
pop
lock
cmp
rolb
mov
stos
ficompl
xor
or
mov
sub
inc
shll
push
jnp
add
aam
icebp
scas
push
repz
nop
adc
add
mov
int3
pop
push
fcoms
sahf
sub
and
fadd
sbb
test
fstps
dec
dec
aam
inc
and
sbb
cmp
mov
int
mov
xchg
inc
into
fidivrs
pop
lds
lea
push
push
in
fldt
cmp
mov
data16
dec
inc
sub
out
fs
repnz
out
xchg
cs
and
andl
inc
mov
jb
fsubr
out
rcll
sub
adc
mov
jp
push
and
in
leave
mov
cmp
sar
push
ja
aam
loope
int3
ret
mov
jno
adc
dec
push
das
push
aad
adc
movsl
push
mov
cmp
call
dec
push
in
dec
adc
adc
jl
and
int
add
jecxz
adc
jo
cmc
xor
fs
out
mov
and
in
dec
jb
sbb
push
jae
mov
pop
test
and
jo
jmp
push
push
xor
out
mov
fidivrl
sbb
inc
inc
cmp
fstps
inc
mov
cmp
das
leave
les
dec
push
jmp
mov
pop
push
loop
mov
mov
shrl
add
ds
pushf
push
jmp
lock
sbb
jnp
and
jae
mov
out
jle
dec
outsl
add
aaa
xchg
adc
stos
add
cmpsl
aas
imul
mov
and
cmpsb
push
cs
push
mov
int3
jbe
jbe
dec
cltd
or
sub
cmp
mov
in
js
and
pop
xchg
mov
xor
dec
stos
jo
pop
test
lods
hlt
int3
push
add
mov
out
jg
rcl
pusha
add
stos
inc
sbb
lret
push
cld
leave
loope
scas
icebp
xchg
loopne
and
iret
movl
lret
add
repz
inc
sub
outsb
xchg
add
jg
cmc
xchg
jnp
dec
popf
test
inc
add
cmpsl
xor
loope
add
testb
ret
ljmp
sbb
cmc
cli
dec
pop
and
and
inc
xchg
outsb
xchg
mov
push
and
cmp
mov
push
lret
sbb
in
mov
out
inc
cmp
test
or
cmp
jmp
mov
dec
pop
sbb
cs
dec
mov
loope
in
aad
xchg
inc
xor
or
cmp
es
in
lahf
stos
test
int3
sbb
push
loope
fcomps
mov
fadds
mov
inc
std
add
hlt
mov
iret
jecxz
sarb
rolb
add
iret
stc
pop
inc
sub
pop
aaa
out
clc
leave
rcrb
mov
psllq
int3
call
push
mov
shrb
sbb
sti
xor
ds
pop
jge
cmp
xor
bnd
mov
push
jo
jns
bound
sub
enter
js
hlt
mov
aam
xchg
jnp
xchg
add
movsl
test
jle
push
inc
jo
cmp
jecxz
push
add
mov
dec
ja
out
inc
adc
out
test
cmc
leave
sub
ds
push
push
hlt
pop
stos
pop
imul
lock
mov
ja
or
push
fldcw
stos
movb
lods
gs
cwtl
cmp
xchg
jmp
sub
xor
adc
cld
notl
mov
std
and
or
cmpsb
rcrb
mov
call
pushf
rcrb
inc
push
rorl
xor
xorb
in
xor
xchg
fldcw
pop
cltd
xchg
sbb
adc
xor
sub
xor
icebp
sbbb
inc
bound
mov
mov
jnp
repnz
mov
fstps
pop
sbb
das
ret
cmp
insb
dec
pop
into
inc
ds
inc
data16
cmpsl
sub
sub
add
mov
into
rcll
int3
push
lock
sbb
jecxz
pop
xchg
and
nop
cmc
loopne
mov
push
outsl
xchg
pop
jmp
mov
sarl
mov
adc
sub
insl
test
js
fmul
cmpsb
or
fsub
movsl
ja
icebp
testb
aad
pushw
cltd
dec
hlt
clc
sub
or
cli
stc
pop
sub
pop
stc
cmp
push
sub
insl
xor
aad
pushf
xor
shll
aad
cmp
stc
add
sbb
in
fstpt
mov
jmp
std
adc
jae
je
sbb
ds
scas
fisubs
inc
dec
cmpsl
leave
jae
cs
movsb
idivb
sub
xor
int
cmpsl
imul
pushf
hlt
adc
rcll
imul
in
dec
mov
data16
pop
aaa
ljmp
push
xchg
or
sub
mov
ja
int
mov
inc
loop
xor
ret
pop
imul
xchg
rcll
test
adc
in
add
pop
scas
pop
mov
and
xchg
fidivrs
bound
daa
add
pop
divb
and
in
xor
inc
test
and
iret
xchg
adc
pop
sbbl
dec
dec
mov
cmp
enter
push
rcrb
and
mov
decb
cld
aas
jnp
dec
push
push
out
xor
dec
insl
sbb
mov
stos
das
inc
aam
andl
popa
push
lds
out
movl
push
jbe
xor
cmp
sbb
sub
dec
mov
rolb
xor
pop
aaa
push
out
xor
sbb
push
adc
inc
pop
sub
xchg
imul
std
mov
mov
mov
rcll
mov
js
pop
fisubrl
jecxz
notl
adc
and
frstor
hlt
push
scas
lea
jmp
leave
pop
cmp
jle
mov
xlat
stos
or
dec
adc
cmp
and
mov
ds
jno
aaa
xchg
mov
inc
push
imul
sbb
mov
movsl
cltd
and
jg
sub
xchg
mov
hlt
les
pop
mov
call
xor
shll
out
mov
jne
jbe
mov
ret
ret
in
stos
cmp
mov
sub
lods
cmp
cltd
xchg
adcb
sbb
cli
cltd
jge
jb
and
in
test
and
jnp
push
leave
pushf
inc
or
xlat
mov
xlat
xchg
jl
js
popa
push
add
js
das
call
sahf
shll
ljmp
pushf
inc
jg
xchg
inc
mov
ret
ret
mov
jp
mov
lcall
push
movsb
or
add
inc
sbb
icebp
sub
lods
sahf
lods
push
jmp
pop
jmp
jno
ds
sbb
mov
loopne
sub
xchg
inc
xchg
xlat
add
push
call
pop
sub
mov
mov
aam
or
cli
cmc
insl
fbstp
movsl
push
pop
xchg
es
pop
cmc
or
nop
xchg
dec
shlb
sbb
xchg
sbbb
in
dec
pop
and
jno
mov
jmp
pop
data16
aam
xor
pop
repz
push
mov
test
sub
dec
push
addr16
or
stos
inc
jno
or
xor
dec
fbld
mov
data16
mov
adc
jecxz
repz
sub
add
sbb
mov
addl
mov
dec
pop
mov
ret
mov
movsl
or
sarl
fbstp
cmpsb
dec
pop
test
subb
add
pop
and
popa
or
sub
mov
add
daa
stos
push
es
imul
inc
xor
and
add
cmp
das
aaa
cmp
pop
ficomps
dec
sub
icebp
das
iret
shll
mov
cmp
aam
push
xchg
add
popf
xchg
gs
adc
int3
mov
es
int3
and
mov
push
test
stos
shlb
mov
xchg
mov
lds
fwait
lret
jbe
loope
notb
imul
cltd
jmp
xor
inc
stc
popa
xchg
lock
inc
jb
cld
lcall
and
cmpl
xor
pop
ds
inc
xor
lds
sbb
sahf
les
out
add
mov
ret
decl
mov
outsl
outsl
cwtl
das
ret
lcall
xchg
stos
loopne
adc
sarl
inc
insb
pusha
mov
out
sahf
clc
mov
xchg
ljmp
jne
adc
pop
test
and
adc
sub
jl
mov
in
or
es
dec
or
pop
push
in
scas
xchg
stos
stos
je
leave
lret
cmp
sbb
cwtl
test
adc
mov
push
inc
adcl
leave
fs
popa
fnstenv
jb
js
or
xorb
lret
stos
push
xor
sbb
cs
gs
mov
dec
add
sbb
sbb
enter
xor
fsubr
xchg
mov
movsb
shll
mov
movsl
cltd
and
mov
add
mov
int3
jmp
mov
mov
xchg
loopne
popf
adc
xchg
mov
insb
push
mov
ret
or
push
mov
fdivrl
negl
pop
pop
mov
outsb
and
xor
mov
inc
pop
das
lcall
mov
mov
aas
movsb
gs
dec
ja
lret
sahf
and
iret
push
fst
adc
in
jno
xchg
es
jl
mov
add
sub
pop
push
xor
push
xchg
cmp
inc
inc
popa
pop
repnz
outsl
mov
mov
cmp
icebp
and
pop
push
pusha
sbb
mov
cmpsl
mov
fldcw
in
stc
shlb
xlat
sbb
lds
scas
mov
mov
mov
or
pop
pop
add
filds
hlt
jne
lahf
scas
leave
sbb
mov
inc
ja
jnp
xchg
xchg
cmp
loopne
andl
jp
inc
add
mov
adc
insb
sti
out
fidivrl
ret
mov
push
pop
inc
cli
dec
mov
fmulp
inc
out
mov
sbb
imul
test
add
cs
adc
ret
push
sbb
jb
sbb
aam
das
fcom
inc
test
fiaddl
xchg
sub
in
sub
das
pop
call
mov
lea
mov
sbb
mov
cmc
outsb
hlt
and
shl
frstor
in
add
js
xor
and
adc
mov
ljmp
xchg
jae
adc
dec
cmpsb
leave
cmc
ja
lods
lods
lret
rolb
lret
icebp
mov
jne
push
push
mov
fs
pop
add
and
pop
aas
ss
push
jae
cli
xchg
rcr
hlt
adc
jp
insb
dec
fucomp
push
jmp
cmp
icebp
adcl
dec
adc
or
imul
push
js
push
add
stc
pop
insl
cmp
sbb
loope
mov
sar
sbb
dec
xor
cmp
pop
pop
les
push
enter
loop
inc
or
into
aas
xlat
inc
pop
aam
or
jne
push
push
sbb
addr16
icebp
add
mov
mov
movl
sub
pop
aad
jae
fstps
scas
adc
pushf
mov
add
outsb
aam
lcall
in
cmp
in
cltd
adc
add
lds
cltd
aad
and
ljmp
jae
test
xor
fwait
xchg
sub
dec
push
js
out
mov
inc
adc
sbb
mov
lods
cmp
leave
xor
pop
sbb
inc
push
stc
lret
inc
lds
imul
lret
lods
jge
in
arpl
sbb
fcmovnbe
jg
fwait
mov
jle
mov
lret
sbb
cmp
arpl
outsb
rclb
xor
cmovo
jl
in
loopne
push
mov
aaa
dec
xchg
scas
in
mov
pushf
or
iret
psrlw
andb
out
ret
cwtl
mov
ljmp
and
mov
cmpsl
mov
xlat
outsl
mov
dec
outsb
mov
push
inc
popa
pushf
ret
fists
mov
outsl
out
pop
imul
cmpsl
cmp
sbb
xor
jg
mov
imul
hlt
mov
or
stos
cmp
enter
pop
jmp
cld
repz
cmpsb
and
or
enter
arpl
cmpsl
mov
pusha
mov
push
out
popf
pushf
mov
outsl
ljmp
cmp
jecxz
cmp
or
push
mov
das
or
call
pop
add
xchg
lock
push
xor
les
leave
dec
pop
jg
pop
and
xchg
dec
fs
cltd
lret
cmp
lock
cld
cmp
adc
mov
js
hlt
test
pop
dec
out
add
jg
stc
imul
jmp
or
out
mov
ljmp
pop
pop
xorb
mov
inc
pop
sti
callw
and
or
lret
bound
into
out
pushf
int
cmp
loopne
xor
lods
lcall
push
shlb
push
imul
dec
xchg
divb
jg
stos
stos
adc
push
and
mov
repz
mov
test
cmp
stos
xorl
sbb
sarl
mov
cmp
inc
sbb
mov
inc
cmp
jb
sbb
loopne
mov
ss
jnp
cmp
jnp
sub
cltd
test
stos
add
push
int3
inc
insb
notl
pop
cwtl
pop
sub
jmp
sub
jl
cmp
sbb
mov
xor
stos
sarb
imull
ljmp
out
andl
test
mov
pusha
inc
in
cmp
adc
fisubs
enter
mov
jecxz
xor
aam
fnsave
push
scas
mov
add
lret
icebp
aad
mov
mov
inc
xlat
das
mov
out
jl
cli
xor
add
jnp
xor
das
mov
inc
mov
out
out
or
fcomps
sub
mov
and
and
aaa
push
sarb
add
jno
pop
cs
xchg
pusha
cmp
cmp
aaa
stc
clc
pop
arpl
dec
ss
pop
push
fs
and
sub
push
lea
dec
xor
cmpl
shr
and
push
fisttpll
sbb
jae
outsl
hlt
adc
rcrl
aaa
adc
xor
mov
fmuls
sbb
mov
adc
cmpsb
sbb
sahf
or
push
mov
push
jge
negl
imulb
cmp
dec
push
mov
mov
popf
xchg
rcrl
dec
clc
scas
mov
imul
or
jmp
es
mov
push
xchg
sbb
testl
push
ja
sub
lcall
js
mov
int
outsl
cld
xchg
xchg
push
inc
popf
or
inc
and
into
sub
mov
inc
in
add
insl
adc
es
popf
add
cltd
xchg
and
es
jne
int3
arpl
out
fnsave
lret
ljmp
or
cmp
pushf
imul
xchg
mov
cmp
xchg
lds
jl
xor
mov
mov
xchg
ds
movsb
rcr
dec
mov
dec
pop
sub
daa
xchg
jg
xor
call
test
pshufw
sbb
adc
lahf
sar
lahf
and
repnz
or
sbb
cmp
out
adc
fdivs
out
pop
inc
jmp
pop
cli
jo
je
xchg
mov
xchg
aam
dec
sub
jbe
jp
add
movsl
adc
in
test
pop
xchg
jmp
xchg
test
pop
push
in
lds
cmp
inc
aad
pop
mov
push
test
cmp
and
xchg
jne
push
xchg
lock
push
fcmovu
pop
addr16
sub
xchg
pop
mov
xchg
inc
mov
jns
or
mov
xchg
sbb
loopne
jl
rcrb
inc
sub
cld
add
push
out
mov
mov
mov
inc
adc
jno
inc
dec
push
sbb
sbb
repz
subl
xchg
adc
jb
push
sub
insb
cmp
popf
aam
icebp
out
lret
bound
imul
pop
push
test
mov
push
cli
sbbl
rcll
push
jne
add
push
xor
movsl
int
cmpsl
lods
jge
xchg
mov
icebp
ljmp
push
insl
mov
enter
lock
pop
dec
pop
jmp
push
xchg
vmaxsd
movsl
cmp
add
ret
xlat
neg
ja
mov
pushf
lods
stos
adc
push
inc
mov
mov
sbb
sub
test
lds
pop
adc
fdivrl
jp
popf
fidivs
inc
sahf
sub
aaa
dec
sub
mov
xchg
push
arpl
bound
sub
jmp
sbb
out
or
mov
int
sub
adc
cmpsl
jno
push
dec
js
hlt
add
fidivl
adc
push
xor
sahf
mov
pushf
lahf
mov
and
jl
ret
out
xchg
push
xchg
loopne
ret
jno
in
dec
xchg
jnp
push
imul
cmp
cmpl
scas
out
adc
xor
js
dec
nop
pop
sub
add
pusha
push
add
js
sbb
dec
and
testb
daa
pop
aas
lret
das
and
jne
aad
sub
push
test
bound
lock
cmp
fdivp
push
scas
jge
enter
ss
sub
mov
pushf
xor
cmc
pop
xchg
sahf
lahf
dec
jbe
jmp
sbb
addb
das
pop
lock
aad
fwait
int3
inc
lods
mov
iret
movsl
add
lea
stos
daa
inc
inc
fptan
lea
icebp
xchg
enter
loope
cmpsl
data16
loop
sub
das
inc
in
imull
orl
pop
sbb
into
rcr
sbb
xor
hlt
out
sub
int
daa
js
push
movsl
pop
and
int
sub
and
ret
jmp
jmp
xchg
lcall
jle
sub
rolb
jge
arpl
sbb
mov
jne
jmp
mov
sub
xchg
adc
mov
fucomip
cmp
mull
push
outsb
ja
pop
test
add
jo
cmp
xorb
adc
cmc
js
popf
fdivl
cmp
out
mov
cwtl
pop
ret
pop
nop
scas
cld
cli
movsb
cmp
mov
je
and
in
mov
insb
jns
test
jo
mov
adcb
push
xchg
xor
cmpsb
jnp
adc
push
dec
add
pop
addr16
out
dec
fdivrs
out
std
and
jb
in
cmpsb
cmp
stos
enter
fldenv
or
mov
shlb
mov
push
mov
lahf
add
stos
dec
mov
and
mov
stos
mov
test
inc
std
jb
mov
adc
and
mov
loope
maxps
sbb
mov
in
jge
xor
addr16
lods
sub
jge
mov
mov
andb
dec
test
sbb
popa
jbe
lcall
add
mov
mov
add
mov
xchg
adc
ds
je
jmp
mov
mov
jns
dec
push
mov
and
and
push
mov
pusha
sub
cmp
add
fsubrs
fisubrs
cld
nop
sub
rcrl
mov
mov
fnstenv
jp
sarl
lock
das
dec
mov
shl
lret
cld
pop
icebp
loopne
imul
stos
test
jo
and
sbb
add
inc
cli
xor
rcrl
lahf
jbe
and
adc
jmp
into
stc
arpl
stos
pushf
and
cmp
inc
sub
jae
mov
sub
add
les
fs
inc
popf
sbbb
mov
icebp
loope
sahf
into
gs
push
js
jne
hlt
cltd
lcall
adc
mov
jbe
inc
fsubl
dec
inc
mov
icebp
mov
cmp
ret
jb
jecxz
and
test
add
outsb
cmp
pop
pop
rcrb
rclb
push
movsb
and
pusha
cwtl
jbe
aam
pop
jle
jle
inc
mov
lock
and
mov
add
loopne
mov
stc
ja
outsb
test
pop
pusha
jb
mov
out
mov
push
push
push
repz
xor
lods
adc
mov
insl
add
aam
add
adc
add
pop
pusha
adc
pop
jle
xor
cmpl
sbb
loopne,pn
mov
or
cmpsb
push
scas
dec
push
adc
insb
ss
mov
xchg
or
dec
outsl
pop
fs
adcb
xor
fidivrl
out
adc
das
fs
cmpsl
push
test
mov
mov
jnp
mov
rorl
imul
push
mov
adc
inc
fsubrp
jns
test
arpl
loopne
mov
sub
mov
and
movsl
sbb
hlt
sub
xchg
lcall
test
lea
sub
outsb
and
xor
ret
jbe
dec
xchg
add
xchg
jge
dec
cmc
les
sub
push
cmp
add
daa
in
out
mov
add
pop
loop
pop
stos
popa
add
cmp
fstpl
push
aaa
into
mov
in
push
test
or
xor
jecxz
jl
cmc
mov
fwait
sub
jb
cmp
dec
cld
andl
or
mov
xor
cld
add
jmp
decl
mov
xchg
push
pop
cwtl
fildll
flds
and
dec
jb
rcll
movsb
and
mov
sbb
push
or
mov
bound
and
mov
shl
shlb
stc
mov
mov
and
jae
or
into
pop
movsl
fnstenv
in
sti
fnstenv
in
fisttpll
mov
mov
insl
insb
adcb
push
les
out
push
jbe
add
fiadds
mov
push
jo
leave
or
std
and
clc
std
mov
add
jb
ds
jno
lock
sub
jge
xchg
push
insb
cli
xor
sarl
jns
dec
fistl
aam
imul
push
test
lret
insl
mov
scas
ds
in
inc
mov
ss
fsubs
inc
inc
pop
stc
movsl
icebp
aaa
fnsave
push
pop
notl
dec
fimull
adc
mov
and
ja
push
in
mov
and
clc
xor
movsb
fstps
dec
loopne
jne
mulb
in
into
aam
ret
ss
add
fldt
cmp
pop
ret
push
nop
daa
test
pushf
mov
rcr
jo
jo
inc
aaa
and
mov
test
call
or
sbb
loopne
mov
testb
jne
mov
add
ljmp
jb
in
not
xchg
test
sbb
gs
in
daa
xor
shlb
mov
daa
roll
icebp
mov
sahf
insl
lret
out
pop
sub
mov
aam
pop
push
mov
mov
or
jmp
mov
or
cmp
jnp
xchg
pop
adc
jno
sbb
loopne
outsl
adc
mov
enter
fucomi
xchg
rcrl
pop
jge
inc
jo
je
repnz
add
stos
sahf
jmp
shlb
jmp
adc
mov
mov
push
and
iret
popf
lods
or
mov
cmp
inc
out
test
mov
push
inc
lea
stos
push
in
jecxz
xchg
adc
pop
repz
push
loope
fstps
mov
ljmp
xor
inc
push
adc
xor
cmpsb
fwait
sti
gs
lret
out
mov
or
dec
push
add
pop
or
bound
sub
jno
jo
mov
aad
or
cmp
or
gs
pop
int3
shll
loop
cltd
cmp
pop
stos
adc
test
pusha
not
ja
lds
sbb
gs
add
test
leave
test
fstp
arpl
aas
xor
add
mov
pusha
mov
xor
mov
jmp
outsb
notb
lock
pop
notb
and
dec
les
add
leave
pop
loopne
lret
push
imul
push
loopne
fwait
push
repz
mov
lds
and
xchg
pusha
jecxz
xchg
mov
nop
jb
es
lret
cli
push
cld
add
cltd
jo
int
mov
dec
jmp
mov
cs
daa
orb
insl
sub
and
test
imul
aam
pop
jns
xchg
test
jo
cld
push
pop
stos
fucom
mov
adc
adc
jnp
sbb
adcl
add
js
pop
push
lods
mov
les
xchg
add
cmp
mov
rorl
ds
mov
or
jae
test
mov
adc
mov
sbb
sar
push
mov
mov
pushf
sbb
test
cmp
sbb
ss
add
pop
adc
int3
inc
cmp
cld
or
cmpsl
inc
push
cltd
mov
pop
mov
test
cmp
ss
in
leave
push
cmp
push
pop
push
js
into
icebp
mov
add
or
xor
push
call
adc
push
adcl
das
stos
mov
pop
jle
adc
mov
mov
popf
lcall
stc
cmpl
lret
movsb
fidivrl
lret
js
sub
push
mov
mov
fldlg2
cld
rol
pop
or
icebp
sub
scas
stos
push
xor
call
or
ljmp
mov
daa
cmp
add
rcrb
mov
cmpl
cltd
xor
mov
iret
xchg
push
in
mov
push
je
test
hlt
add
and
dec
cmp
xor
jnp
pop
push
sbb
cmp
jbe
jge
mov
pop
cmpsl
cmp
imul
push
jno
test
cwtl
inc
insb
jb
mov
sub
xchg
sbbl
sarl
adc
loop
cmp
sub
mov
ljmp
ja
out
add
xor
dec
out
sbb
in
mov
or
ljmp
pusha
aaa
xor
adc
into
inc
xchg
mov
inc
inc
int
aam
sub
imul
mov
xchg
lods
or
mov
dec
dec
loop
push
xchg
cwtl
push
sbb
dec
das
pop
ja
or
add
nop
loope
cmpsl
sbb
push
mov
popa
ja
pushf
adc
out
xchg
lods
inc
hlt
fs
mov
dec
cmp
adc
js
test
outsb
add
fimull
aaa
and
mov
cmp
mov
sbb
mov
mov
int
sbb
adc
aad
or
sub
cld
cwtl
sbb
popa
dec
pop
iret
push
pushf
jo
enter
lret
mov
push
sub
das
call
clc
imul
loope
or
imul
lock
add
aam
lock
jmp
jnp
jecxz
sbb
orb
mov
inc
add
jge
xchg
mov
dec
decl
pop
jno
inc
aam
fs
xchg
pop
cmp
stc
jb
daa
lret
andl
push
std
addb
insl
jl
ja
cltd
sub
pop
lods
mov
loope
add
xor
pop
inc
dec
aam
stc
cltd
cli
push
popf
mov
in
scas
push
xchg
push
sahf
das
outsl
js
jne
nop
jecxz
push
push
pop
inc
mov
mov
push
dec
cwtl
or
mov
or
in
in
pop
cwtl
xchg
mov
ret
pop
imul
movsl
cmp
insl
add
pop
aas
sub
out
pop
ljmp
movsl
pusha
sbb
xchg
aam
cli
add
test
push
and
sahf
incb
sbb
jge
dec
clc
mov
loop
push
in
sub
sbb
pop
and
jp
bound
dec
aam
xor
jle
pushf
scas
test
out
in
add
jge
jg
fstl
and
inc
int3
arpl
por
jl
xorl
roll
pushf
in
xchg
out
pop
mov
push
popf
sti
add
cmp
mov
inc
add
cli
imul
mov
sbb
lock
push
arpl
dec
scas
push
sbb
insb
ljmp
cmp
fs
sub
das
mov
or
inc
int
xchg
dec
pusha
idivl
xor
dec
xor
decl
adc
les
rorb
loope
stos
lods
dec
mov
mov
mov
jmp
mov
inc
ljmp
inc
add
rdmsr
pop
stc
sub
dec
enter
lcall
insb
sub
insl
roll
pop
ljmp
mov
push
dec
mov
push
es
iret
fildll
mov
insl
jge
fwait
mov
jne
push
fdiv
xchg
mov
jns
dec
pop
in
adc
cmp
sahf
or
fsubs
fs
push
add
xchg
test
fidivs
push
mov
dec
popa
into
mov
data16
repnz
xor
push
outsb
in
xchg
sub
dec
hlt
jmp
sub
lods
or
jge
xchg
adc
or
movsl
xchg
xor
das
xchg
imul
or
or
addr16
dec
mov
outsl
aas
cmp
jo
mov
xchg
adc
push
inc
xchg
mov
fisubs
sbb
mov
and
mov
sbb
fcoms
mov
movsb
mov
inc
sub
xor
add
adcb
adc
stos
mov
xor
andb
in
inc
pop
ds
fistpll
enter
dec
or
dec
out
mov
insl
sub
sub
pop
xchg
jno
push
icebp
jnp
and
push
xor
and
aam
in
jecxz
in
mov
push
sahf
pop
call
or
gs
adc
push
xor
mov
or
std
cmp
daa
push
jmp
or
cmp
xor
pop
xchg
lods
add
jbe
jge
pop
cwtl
add
xorl
ret
jno
sbb
addr16
mov
inc
icebp
in
rcl
dec
mov
arpl
insl
ret
adc
daa
jne
repz
dec
shrl
rcl
and
shrb
jo
ret
in
out
dec
pop
xor
pop
xchg
mov
aaa
idivl
sbb
les
or
dec
push
ss
cltd
or
sub
push
pop
xchg
jnp
pushf
lahf
mov
xor
iret
in
and
dec
or
cmpsl
aad
sub
mov
jmp
or
rcrl
xchg
enter
in
sbb
mov
mov
sub
jmp
mov
and
outsl
scas
xchg
inc
xor
push
and
xchg
xchg
fadd
loopne
sahf
fnsave
ljmp
cmpsb
sti
loop
insb
into
pop
hlt
repz
xchg
sbb
rcrb
mov
int
imul
mov
cltd
jo
sbb
in
int
adc
repnz
enter
inc
mov
jl
add
out
inc
testb
into
or
pop
mov
adc
sub
inc
mov
mov
arpl
repnz
inc
dec
in
inc
mov
dec
xor
fsubl
pusha
or
es
adcl
jecxz
adc
mov
outsl
inc
cmp
cmp
lods
inc
xchg
test
iret
fbld
sbb
imul
mov
mov
lahf
cld
in
sub
pop
inc
mov
mov
arpl
in
and
int3
fistps
negl
sbb
into
sbb
cmp
loop
adc
cmp
pop
hlt
add
lock
subb
rcrl
icebp
ds
mov
push
ret
sub
xchg
add
mov
fidivl
cli
inc
xchg
xchg
inc
fldenv
rcrb
test
jbe
sbb
xor
repz
pop
lock
xlat
subb
rcrl
jmp
mov
pop
jecxz
pop
imul
das
mov
fildll
fld
mov
lcall
push
add
adc
xor
jge
in
mov
fs
lock
je
mov
jo
sub
add
jo
adc
sub
fwait
xchg
mov
int
call
dec
loope
iret
push
sub
pop
push
bound
hlt
mov
bound
movsl
mov
lret
outsl
jl
scas
mov
fadd
lcall
aam
lea
scas
adcb
testl
addr16
out
dec
xor
push
mov
daa
enter
pop
push
sti
pop
fs
repz
ds
arpl
adc
ljmp
pop
jne
int
push
pop
movsb
les
mov
insb
out
insl
add
push
xor
push
hlt
dec
scas
inc
mov
in
push
jo
in
sbbl
sub
xor
fmul
and
lret
adc
mov
pushf
in
xchg
pop
std
jns
push
or
cmpsl
bound
outsl
xor
sahf
pop
mov
sub
adc
ljmp
inc
jp
int
loope
clc
xchg
in
push
jmp
mov
push
cltd
mov
jae
mov
mov
and
bswap
jle
lcall
aaa
mov
inc
push
enter
dec
mov
pushl
push
sbb
and
mov
sub
cmpsl
scas
leave
xchg
repnz
sbb
int3
mov
out
xor
dec
arpl
arpl
dec
daa
sub
xlat
mov
shrb
cld
pop
leave
fisttpl
aad
cmp
idivl
sub
dec
jbe
mov
mov
les
mov
cmpsl
rcrb
stos
push
push
jae
sbb
stc
cmp
mov
shrb
insb
test
mov
push
stc
cs
and
inc
push
fdivrs
lods
add
pop
adc
pusha
xor
jae
vminsd
sbb
xchg
mov
cmp
xchg
add
mov
mov
mov
jbe
xchg
fcoms
sbb
mulb
leave
jge
sti
int3
mov
xor
pop
fbstp
outsl
mov
xchg
mov
les
cmc
adc
rcrl
push
jmp
insb
lds
mov
pop
in
push
in
aas
sti
lds
lcall
lea
mov
bound
pop
and
das
mov
lcall
and
punpcklbw
rcl
lcall
add
xor
add
lock
inc
xor
cmp
ss
jae
dec
call
push
js
add
je
sub
repz
stos
and
xchg
loope
pop
call
mov
jg
add
push
sub
dec
cmpsb
xchg
notb
loop
shr
cmp
xchg
sbb
xchg
sbb
mov
cmpb
in
dec
in
mov
in
mov
jns
repnz
es
push
lock
mov
scas
subb
sub
inc
add
scas
add
lahf
dec
adc
mov
jp
sub
leave
mov
pop
mov
xor
fistpll
jmp
jp
xchg
mov
loopne
outsb
add
and
cli
sbb
test
bound
adc
enter
int
rol
in
repnz
enter
arpl
and
lods
and
cmpb
adc
je
subl
imulb
sub
cmpsb
jge
subl
aad
fldl
mov
mov
jecxz
inc
cltd
pextrw
sub
imulb
and
ds
lcall
and
push
push
and
add
dec
rclb
mov
stos
cltd
cli
cltd
and
xchg
daa
lcall
sbb
cs
jecxz
int
gs
data16
out
stos
pop
loope,pt
int3
add
dec
jecxz
fstpt
cmp
dec
add
scas
mov
mov
mov
inc
pop
and
dec
cmc
pop
push
lods
inc
and
popf
mov
or
fldt
cld
add
mov
pop
and
or
sti
sub
push
cmp
bound
inc
loopne
daa
jo
fimuls
dec
and
ja
test
cmp
ss
in
mov
outsl
cmp
push
add
or
push
cld
mov
sub
xlat
iret
cltd
mov
test
addb
xchg
jl
lret
mov
cmp
pop
shll
push
in
arpl
dec
les
push
jae
test
push
cmp
adcb
mov
inc
arpl
lods
inc
stos
cmpsb
add
sti
pop
mov
test
ja
mov
mov
xchg
jno
cmpsl
mov
incl
inc
fadd
out
andl
aas
insb
sbb
int3
ds
gs
jnp
xchg
push
js
and
lods
es
sbb
mov
loopne
sbb
sub
fdivrs
pop
mov
fwait
rcrl
xchg
je
aas
fbstp
pop
mov
mov
movsl
pop
addr16
stos
sbb
mov
add
lods
jmp
adc
push
fimull
les
lret
shrb
xor
mov
clc
int3
fimuls
mov
mov
cmpsb
sbb
idivb
nop
push
mov
maskmovq
push
dec
sbb
xchg
js
push
push
mov
daa
lods
out
jmp
std
insl
jge
cli
mov
cmp
adc
bound
fists
test
std
mov
jg
add
xor
mov
mov
push
mov
sub
andl
paddusb
xchg
or
shlb
call
dec
xchg
jns
push
mov
shlb
push
mov
xchg
frndint
and
jo
notl
leave
xor
loope
imul
push
add
repz
adc
mov
cmpsb
mov
ficoml
in
bnd
leave
xor
sti
pop
incl
xchg
inc
lret
push
sub
add
stos
fisubl
int
sbb
out
mov
push
mov
push
xor
mov
mov
pop
popa
or
or
movsb
xchg
or
loope
or
jmp
sub
pop
nop
lock
dec
arpl
fbstp
fwait
push
mov
lret
jmp
adc
loop
push
mov
lods
xor
mov
insl
push
add
cli
pop
sbb
cmp
rol
sbbb
or
sti
cli
xchg
movsl
aam
push
pop
add
iret
gs
pusha
jnp
xchg
in
addr16
mov
jae
stos
mov
push
jle
sbbb
adc
and
out
rcrl
xchg
xlat
daa
push
and
xchg
stc
lods
imulb
jb
les
jecxz
not
push
inc
mov
shr
push
out
jb
and
dec
test
adc
pop
mov
cmp
mov
cmp
cwtl
stos
test
or
add
call
and
pop
jae
and
and
das
ret
xor
lds
and
cmpsb
and
mov
test
push
out
leave
mulb
jl
imul
std
sbb
pop
push
pop
inc
or
addr16
fwait
sbb
add
mov
mov
es
pusha
aas
mov
enter
addr16
fidivrs
mov
mov
adcl
dec
mov
push
fistps
mov
and
xchg
jle
add
lret
faddp
dec
jmp
cmp
out
pop
out
add
clc
xchg
dec
jo
loop
pusha
enter
movsb
mov
push
xchg
pushf
out
lods
ja
call
into
mov
add
out
inc
in
inc
fcompl
das
mov
nop
pop
movsl
mov
xlat
adcb
cmp
sub
test
cmp
xlat
or
rol
jno
jb
loop
sub
dec
jbe
sbbl
or
ror
popa
fs
adcl
cld
sahf
xchg
popa
flds
mov
imul
imul
movsb
cmp
fimuls
sub
lret
hlt
inc
adc
fcmovnu
insl
add
in
std
ret
shrl
ljmp
ja
andb
test
jp
daa
les
jns
pop
repnz
adc
test
iret
ficompl
jno
xor
lods
bound
stos
repz
inc
fistl
mov
mov
aam
add
loopne
push
mov
xor
inc
dec
mov
or
outsl
push
sub
jns
enter
mov
inc
fs
and
fildll
negb
das
cmp
cmp
mov
xchg
and
test
movsb
push
call
xor
add
jnp
cmp
movsb
std
mov
jbe
ss
lcall
test
dec
addr16
push
out
aad
mov
iret
dec
and
mov
in
test
pop
jae
push
imul
mov
shrb
dec
js
pop
fistpll
rcr
jb
xor
mov
cli
or
inc
lods
xor
or
fstl
and
push
pop
push
mov
jne
inc
cs
adc
and
xor
call
orb
cmp
mov
popa
sbb
ret
dec
push
lret
push
xchg
push
insl
stos
jecxz
shll
mov
lods
mov
xchg
aad
test
negl
mov
aam
aaa
push
es
fwait
scas
fsubrs
fistps
fbstp
inc
leave
cmp
in
cs
das
lret
mov
push
shrb
or
insb
es
lods
pushf
inc
scas
pusha
jbe
jo
sbb
push
sub
jp
jmp
xchg
sub
inc
comiss
pop
mov
push
movsb
jp
out
lcall
push
shr
xchg
fwait
jne
or
movsb
negb
decb
stos
adc
insl
or
inc
jge
mov
mov
in
cmp
arpl
shlb
addr16
sbb
std
mov
pop
pop
filds
nop
int3
clc
and
test
xchg
sub
adc
mov
push
mov
mov
pop
jmp
movsb
cltd
lods
les
div
adc
fstl
add
or
pop
test
repz
pop
cmp
inc
cmp
int
fmuls
int
mov
add
or
movsl
mov
or
imul
test
add
ljmp
or
push
repz
clc
sahf
and
cmp
inc
dec
das
jmp
outsb
cwtl
adc
idivl
xorb
hlt
adc
jo
fdivr
stos
ljmp
out
or
test
mov
xchg
in
push
jae
ljmp
jb
xchg
nop
mov
mov
enter
ds
cmp
sbb
dec
inc
adc
xor
push
or
inc
and
inc
lret
push
adc
dec
cmp
int
mov
nop
mov
mov
mov
cs
mov
dec
cwtl
mov
inc
shll
fcomps
mov
adc
push
mov
or
jnp
scas
in
push
pop
test
xor
ss
mov
push
sbb
pop
pusha
or
lea
jb
push
sbb
push
in
jge
invd
sbb
push
jl
leave
cmp
leave
pop
popa
mov
pop
jecxz
out
xchg
subb
lcall
jbe
or
xchg
add
and
pop
mov
push
in
add
jbe
movsl
dec
hlt
push
jl
enter
dec
fs
icebp
sbb
cmp
cmp
aaa
out
jmp
and
inc
inc
jmp
je
mov
push
and
push
xchg
add
dec
cmpl
aam
cwtl
push
repnz
aad
pop
ljmp
ljmp
mov
push
dec
test
scas
das
push
mov
dec
shl
rep
shll
mov
push
and
xchg
mov
enter
bound
pop
jne
mov
mov
icebp
sbb
pop
inc
ret
ret
outsl
push
mov
ror
and
mov
xlat
ljmp
cmp
stc
call
ss
jmp
dec
inc
xor
mov
push
jbe
outsl
popl
les
cli
ret
jg
outsb
sub
das
das
inc
movsb
mov
in
xlat
cmpsl
push
ret
jo
test
add
in
xlat
xchg
adc
pusha
test
ret
loop
mov
ss
decl
dec
outsb
pop
out
cmpsl
inc
test
push
mov
fbstp
mov
inc
and
nop
mov
sti
outsl
push
icebp
mov
fcmove
inc
rclb
cmpsl
ret
insb
enter
js
arpl
loopne
push
popf
mov
jle
movsl
arpl
std
jle
fadd
test
or
xchg
jecxz
sbb
push
in
aaa
mov
shrb
jno
ds
pop
enter
sbb
lret
xor
cltd
mov
mov
cli
test
popa
xchg
loop
jge
cmp
add
mov
adc
add
out
das
push
jecxz
push
inc
dec
stos
cmp
sbb
inc
pop
frstor
leave
fldcw
sbb
aaa
arpl
mov
mov
adc
orb
inc
lea
add
inc
data16
arpl
dec
or
adc
lahf
sbb
xor
dec
cltd
fwait
addr16
test
cs
leave
xchg
push
cmp
sbb
outsl
out
add
sub
mov
lret
cwtl
ljmp
inc
cs
inc
and
sti
inc
pop
rolb
and
out
dec
adc
xor
imull
mov
test
lods
pop
adcb
orl
xchg
test
xchg
pop
push
mov
mov
or
xor
mov
out
xor
popa
stos
cmc
push
pop
test
mov
js
xchg
shr
shrl
or
push
pop
mov
sub
test
cmpsb
xor
and
jg
aas
pop
std
adc
cmp
pop
leave
mov
mov
dec
es
in
push
test
call
mov
mov
push
sbb
pop
in
cld
mov
lock
pop
dec
inc
adc
mov
jae
stos
mov
pop
inc
loope
imul
sub
mov
dec
ss
jmp
cmp
jo
sbb
aas
dec
xor
inc
dec
ss
or
dec
or
adc
dec
sarb
negl
xlat
cmp
dec
cmc
jbe
push
and
aam
lods
insl
test
incb
movsb
inc
movsb
mov
in
loope
xor
jmp
mov
mov
jecxz
out
jmp
jmp
jno
inc
jae
addl
dec
adc
rolb
cmpsb
xor
movsb
cwtl
dec
cmp
int
imul
pop
mov
sbb
jl
jg
jp
mov
mov
dec
fcmovu
push
std
add
ret
mov
mov
or
mov
sub
pop
inc
mov
mov
pop
push
push
push
cs
fstl
sahf
std
cmp
orb
movsl
imul
movl
outsl
rol
dec
mov
adc
ret
rcrl
and
push
adc
xchg
add
sbb
aad
out
cli
jae
and
dec
dec
cmp
and
sarl
pop
pop
dec
int3
iret
ss
mov
mov
add
mov
jbe
dec
das
xorb
testb
andl
lret
dec
push
mov
cmp
cld
adc
push
iret
and
imul
addr16
xor
insl
push
fwait
insl
xor
jnp
pop
push
cmp
xchg
or
jae
mov
popa
mov
test
xchg
push
out
jmp
int
addr16
adc
inc
sub
pop
fnsave
mov
out
mulb
les
fwait
mov
scas
and
sbb
ds
inc
out
icebp
popf
aad
sub
dec
test
sub
int3
jb
push
push
pop
cmp
shll
mov
movsl
or
adc
xchg
dec
dec
mov
cwtl
cmpsl
das
sub
jmp
hlt
bound
decb
scas
inc
sub
into
add
int
adc
sub
fs
ds
and
mov
orb
roll
push
push
stos
dec
roll
lcall
pop
mov
or
test
cld
movsb
aaa
fwait
sub
mov
pop
lahf
pop
cmp
mull
add
je
mov
into
mov
scas
cmp
aad
or
ljmp
push
mov
pop
addr16
icebp
pop
les
pop
adc
ret
xor
into
mov
frstor
jb
jmp
into
push
cmp
dec
xchg
es
imul
fcom
push
in
add
jne
cmp
fcmovnbe
jbe
jns
pushf
sub
sahf
test
mov
lcall
xchg
dec
cmpsb
inc
insb
data16
subb
int
xchg
int3
lret
test
sbb
mov
inc
adc
pop
cmpsl
add
or
push
push
mov
lock
in
insl
push
pop
fsubr
into
xor
dec
mov
xchg
sub
nop
movnti
mov
orl
jns
xor
std
test
adc
pop
dec
jne
insl
add
aas
cmp
nop
fcomps
push
jbe
jne
dec
xchg
fldcw
pop
sti
jl
fcmovne
xchg
insl
pop
mov
hlt
mov
mov
pop
add
cmp
ret
in
xor
xchg
test
mov
fidivs
jno
shr
pushl
in
xor
xchg
push
xchg
pop
addr16
shll
xchg
ret
sahf
adc
lret
mov
push
sub
pop
aaa
mov
cmpsl
xor
enter
inc
fidivs
pop
mov
movsb
in
mov
xor
or
mov
inc
adc
adc
out
test
mov
jg
or
pop
push
pushf
inc
lahf
imull
jne
bound
cmp
mov
add
es
test
scas
push
jecxz
dec
rolb
cmp
test
xchg
or
sbb
jle
cmp
iret
aam
popa
in
repz
dec
pop
out
mov
jb
xor
mov
fmull
and
aad
xor
xchg
inc
rclb
test
xor
or
out
xor
xchg
dec
sbb
dec
imul
mov
cmpsl
out
movsb
outsl
stc
cmp
mov
mov
aam
fwait
push
movsl
test
mov
ja
scas
push
fsubs
sbb
mov
addl
loopne
sbb
push
add
xor
push
jl
pop
sbb
mov
outsb
mov
or
es
sub
or
add
sbbl
sarl
pop
push
xor
imul
jecxz
mov
loop
fnsave
push
jmp
and
lcall
scas
push
nop
mov
fiadds
fcom
lock
mov
sbb
mov
push
or
lods
mov
popa
loope
sbb
aaa
jnp
cmp
mov
xor
cmp
lret
pop
sbb
test
je
in
dec
and
outsb
or
mov
sbb
popf
jecxz
mov
push
loope
push
shrb
mov
and
inc
mov
jne
push
out
in
pop
shlb
repnz
stc
xchg
cmp
mov
in
sub
push
dec
push
nop
aam
cmpsl
ret
enter
cmpsl
std
or
das
fnstenv
iret
sahf
in
sub
imul
std
xor
sbb
xchg
xchg
sub
fwait
das
ret
mov
fcomi
in
stc
or
loopne
scas
adc
out
aaa
cmp
std
jecxz
insb
sti
inc
mov
jge
adc
sbb
sbb
dec
xlat
mov
xchg
push
or
xchg
ds
hlt
mov
lret
adc
movups
lret
arpl
ja,pt
xchg
mov
push
cwtl
leave
test
xchg
add
std
mov
sub
in
lock
cmp
mov
or
cmpb
sbb
orl
cmpsb
and
repz
push
xor
cltd
mov
stos
hlt
push
mov
mov
shlb
push
lock
xor
inc
repz
in
add
mov
sub
sti
rorb
enter
pop
fstpt
add
xor
mov
and
test
mov
xchg
ss
in
push
sub
inc
sbb
fcomps
lods
mov
loopne
mov
jae
test
pop
push
sub
sbb
sti
xchg
loop
xchg
inc
ret
jge
pop
out
push
mov
mov
xor
or
insl
or
lock
cmpsb
lea
pop
push
ja
inc
imul
idivl
fnstcw
adc
xchg
pop
lock
dec
cmpsl
cmp
imul
cmp
or
scas
cmp
in
nop
sub
push
sahf
and
jp
cmp
pop
in
rorl
dec
loop
rorb
idivb
test
xor
aaa
cltd
and
out
xor
add
ret
orb
gs
mov
xchg
mov
lds
les
adc
mov
pop
in
mov
sub
jbe
push
or
pop
test
sbb
cmp
ljmp
xor
dec
push
sbb
loop
add
daa
aam
and
xor
out
movsl
and
aam
cld
fwait
xchg
stc
mov
dec
xchg
mov
leave
mov
mov
imul
cmp
fimuls
add
mov
sub
cmpsb
xchg
ffreep
push
fwait
sub
push
mov
test
pop
push
pop
out
sti
std
gs
mov
xchg
pop
xchg
pop
push
push
dec
hlt
roll
xlat
cmp
jnp
call
js
dec
imul
in
push
dec
filds
jae
add
xchg
sbb
xchg
pop
push
xor
jle
push
pop
pop
inc
loope
testl
cmp
popa
cmp
xchg
imul
fdivl
ret
ret
arpl
xchg
lcall
and
fld
xor
insl
cmp
push
mov
lea
fcmovnbe
mov
xlat
sub
jmp
mov
ffreep
add
cmp
cwtl
mov
jp
movsl
setnp
jne
adc
test
pusha
loope
cltd
icebp
mov
lds
and
enter
xor
mov
xor
cli
sbb
imul
out
hlt
loop
imul
sub
cmp
xchg
paddw
inc
out
cmp
xlat
and
lcall
clc
or
inc
out
mov
loope
pop
push
fisubrl
xorb
vmaskmovdqu
leave
idivl
push
pop
jno
add
cmp
dec
in
push
icebp
cwtl
test
push
movzbl
insb
sbb
filds
adc
pop
pop
and
pop
movsb
out
andl
add
xor
pop
repz
pop
lea
movsb
and
sahf
lods
xor
ss
mov
stos
std
ja
jge
pop
jle
mov
outsb
mov
popa
mov
jg
lret
xchg
mov
stc
jge
iret
mov
adc
lock
mov
mov
dec
scas
mov
pop
jns
mov
xor
jbe
call
dec
bound
push
cwtl
cltd
mov
int
popf
pop
xlat
mov
mov
test
cmp
jno
jge
xor
shll
gs
jp
push
lods
sbb
jae
or
pop
subl
cmp
mov
mov
add
cs
jecxz
out
stos
xchg
add
test
xchg
and
sti
dec
out
inc
shll
xchg
insl
inc
stc
cmpsb
push
popa
pushf
push
adc
jno
out
and
fcmovnu
arpl
add
inc
lahf
lahf
cmp
sub
lods
inc
daa
rcrl
xchg
in
inc
push
repnz
cmpsl
idivb
cmp
xlat
pop
filds
adc
mov
dec
sub
mov
in
jge
jnp
mov
out
popa
int3
xor
push
xor
inc
xor
subl
outsl
mov
push
pop
das
push
sbb
aas
out
pop
pmullw
xchg
sub
shll
cli
add
inc
push
push
lods
insb
cmpsb
mov
xlat
lea
pop
push
addr16
dec
xchg
and
mov
or
xchg
cmpsl
adc
mov
repz
push
inc
sbb
xor
cmp
insb
mov
add
jl
xor
mov
in
jle
stc
nop
mov
testb
dec
out
test
mov
add
mull
xlat
outsb
lcall
leave
jle
pop
cmp
mov
cmp
or
dec
in
sub
push
sub
test
jnp
xor
movsl
out
push
and
and
mov
fidivrs
arpl
pushf
jmp
cmp
jnp
aas
push
aaa
movsl
mov
push
movsb
lret
idivl
call
stos
cltd
insl
std
xchg
pop
dec
std
xchg
cmpb
mov
repnz
mov
xor
xor
or
cmp
or
rorb
mov
push
fbstp
lcall
or
test
and
mov
mov
cli
push
movsb
cmp
pushf
dec
loop
inc
mov
xor
push
aad
fidivl
inc
fsub
dec
cmp
jp
pusha
ss
mov
push
sub
fs
jb
movsb
fnsave
stc
nop
adc
jne
dec
loop
mov
imul
aas
ja
or
jl
fisubrs
into
gs
sti
notl
sub
cwtl
das
cmp
mov
dec
cmp
jno
lods
mov
mov
xchg
sub
push
mov
insb
add
mov
and
mov
imul
dec
xchg
insb
add
jge
inc
mov
ds
ror
pusha
add
pop
in
mov
and
jne
add
addr16
xchg
sub
dec
loope
arpl
fs
dec
add
jge
jmp
in
and
xor
add
sbb
mov
cmp
jo
jl
fiadds
repnz
adc
push
in
pop
sbb
xchg
insb
sbb
popa
mov
insb
add
popf
mov
and
sbb
and
mov
lret
cmp
cld
sahf
cli
xchg
iret
xor
xor
sbb
mov
iret
xor
std
scas
les
push
push
out
add
jp
data16
cmp
jns
dec
jecxz
lcall
or
mov
sbb
movsb
cmp
test
pop
rorb
ja
jecxz
jl
xor
cmp
mov
mov
fisubl
paddsb
insl
pop
cmp
shrb
inc
fnsave
fdivr
xchg
push
fistl
cmp
jp
jg
jg
add
arpl
xlat
std
xchg
add
and
cld
xchg
test
leave
movsb
cmp
leave
mov
lcall
jmp
and
cmp
pop
fwait
mov
je
ljmp
call
xchg
popa
add
in
mov
adc
push
jnp
cmp
fidivs
pop
cltd
xor
mov
inc
xlat
in
pop
mov
lidtl
xchg
cmp
movsb
rcrl
testb
push
push
movsl
addl
imul
stc
dec
in
in
iret
popw
push
insb
add
cmpsl
mov
mov
lret
insb
add
fwait
xor
jo
stos
inc
push
mov
test
js
mov
rorb
mov
das
movb
int
lret
dec
push
movsl
adcb
sbbl
and
xchg
dec
dec
or
xchg
ror
inc
repnz
int
xchg
arpl
into
inc
adc
jne
test
popa
in
cmp
subl
adc
mov
lret
out
fnsave
sbb
outsb
pop
movsl
cmp
mov
push
out
sub
int3
cmp
add
loopne
stc
nop
int
mov
jno
montmul
cmpsb
subb
mov
jns
imul
cmpsb
push
cmpsb
aam
in
cmpl
sub
cmpsl
enter
push
in
rorl
ret
jns
jno
jle
pop
out
xlat
movsb
scas
inc
fistpll
add
xlat
stos
dec
in
dec
push
jmp
inc
testl
xlat
inc
cmp
jbe
daa
mov
loope
xor
mov
sbbl
loopne
shrl
aas
adc
insl
aas
movsl
cmp
mov
push
jmp
cmp
insl
ds
std
call
xor
jge
aas
fbstp
mov
lds
xchg
pop
aas
add
idivl
shlb
ds
xbegin
xor
andl
fidivs
adcb
test
fcmovu
ss
xchg
jge
mov
inc
fidivl
das
imul
dec
out
stos
sbb
imul
cmpb
rol
cmp
push
das
mov
and
mov
xchg
mov
xchg
sub
imul
hlt
mov
mov
insb
jg
mov
jne
cmpsb
cmpsl
and
jmp
jae
repnz
jne
into
cmpsl
sub
sbb
pop
mulb
jbe
and
je
or
test
fldcw
push
push
repnz
xchg
pop
adc
test
enter
jns
inc
pop
loope
dec
bound
aaa
xchg
imul
mov
add
add
dec
mov
xchg
lods
mov
fnsave
into
das
or
ret
fnstenv
pop
testl
loop
pop
lock
or
sbb
test
mov
mov
out
add
xor
movsl
cmp
gs
mov
loopne
jl
stc
cmc
mov
aaa
adc
jnp
stc
nop
mov
nop
adc
gs
pop
xor
scas
push
mov
ljmp
jno
adc
movsl
cmp
push
outsb
add
hlt
loope
in
adc
lret
bound
addb
pop
lret
bound
nop
and
mov
stos
inc
xchg
imul
xchg
pusha
xchg
imul
sbb
fbstp
shrb
pop
lea
mov
rcrl
push
int
xor
das
inc
nop
test
insb
adc
cltd
lock
scas
and
dec
push
call
cmp
pop
hlt
rcll
mov
jnp
sbb
and
jb
aaa
into
xor
shr
push
gs
call
add
insl
cld
mov
sub
out
adc
cli
xchg
loope
call
adc
js
mov
iret
push
lods
cld
mov
mul
sbb
stos
dec
add
inc
pop
mov
rcl
repnz
mov
aaa
inc
std
dec
in
shlb
dec
inc
fdivrl
mov
out
data16
leave
add
xor
push
addr16
or
xchg
aad
jae
xor
pop
repnz
sub
xor
push
xlat
lea
lcall
pop
idivb
inc
ficoms
daa
mov
mov
push
out
and
daa
mov
jae
push
in
dec
test
mov
imul
ja
dec
dec
leave
pusha
jnp
ret
pop
mov
enter
jmp
js
sbb
xchg
jle,pn
cmp
lcall
mov
out
inc
lret
inc
ret
mov
and
cmc
mov
cld
sbb
pusha
mov
cld
xchg
sub
mov
lret
push
pop
adc
scas
push
cltd
mov
push
in
xchg
mov
or
sub
mov
out
push
les
mov
lret
call
test
lahf
xor
mov
dec
sub
mov
and
xor
pop
xchg
stos
jp
add
cmpsb
popl
lahf
xor
inc
mov
outsl
cs
iret
jb
mov
mov
mov
mov
popf
mov
jmp
dec
out
or
int
ja
testb
mov
pop
push
sbb
jnp
in
sbb
inc
xlat
mov
sbb
xchg
js
je
or
cmpsb
inc
push
xor
xor
inc
dec
bound
popa
xor
and
sbb
scas
pop
pusha
push
cmp
mov
pop
push
jecxz
fistpll
gs
jno
pusha
inc
rolb
and
out
push
mov
xor
inc
ret
or
mov
inc
fldpi
negb
ror
scas
test
nop
testb
push
lods
cmpsb
addl
dec
rorb
adc
lods
sub
fcoml
adc
mov
push
aas
in
das
rorb
or
add
mov
inc
cmc
pop
enter
mov
loop
mov
outsb
or
shlb
mov
pop
mov
push
pop
pop
rcrl
mov
mov
in
test
adc
pop
imul
outsl
popf
jno
and
inc
pop
mov
push
mov
mov
mov
inc
ficomps
pop
ret
sahf
jg
mov
or
push
mov
imul
call
pop
imul
cmp
push
sub
js
int3
cmp
dec
ret
shrb
mov
mov
jno
jne
sbb
cmp
loop
icebp
aam
mov
adc
pop
jae
or
dec
xor
push
sbb
push
jne
loopne
xchg
aad
lea
pop
push
movsl
in
insl
push
adc
das
mov
out
and
rclb
xor
and
push
lds
ret
sahf
loop
stos
inc
bound
push
mov
js
lods
dec
popf
pop
lock
mov
xor
bound
or
sub
xchg
cltd
xor
push
std
das
push
xor
adc
add
xchg
push
xchg
and
aad
jb
in
push
inc
inc
mov
pop
jns
mov
xchg
jns
stos
cmp
xor
rcrl
xchg
pusha
fisubl
stos
sbb
jge
mov
daa
fiaddl
pop
shlb
scas
mov
jb
dec
jp
insl
movsl
arpl
and
fs
and
inc
mov
out
jae
jp
test
and
jl
jnp
push
dec
dec
popl
xchg
adc
test
orb
fidivl
xchg
out
xchg
xor
out
adc
pop
cmpsl
inc
push
sti
pop
adc
pop
mov
enter
insb
cmp
dec
adc
xchg
inc
pop
or
cld
pop
lds
fimull
add
fldenv
jmp
cmpsb
dec
mov
iret
jno
int
enter
jno
icebp
pop
and
xchg
push
jno
aaa
leave
jnp
ljmp
xchg
cmp
dec
ret
scas
addr16
hlt
xor
and
test
mov
divl
leave
sub
ja
push
cld
pop
fcmovne
push
cmpb
sar
inc
mov
sbb
xchg
mov
cli
xchg
push
inc
cmpl
cmp
jns
nop
jnp
ds
or
adc
das
mov
pop
inc
adc
sbb
pop
mwaitx
scas
pop
movsl
fs
testl
mov
hlt
jmp
pop
or
int3
cmp
cmp
lcall
fs
push
sub
dec
scas
mov
sbb
rcrl
orb
scas
test
ljmp
lcall
es
aam
jb
pop
iret
aaa
test
cwtl
xor
cmp
inc
out
pop
stos
shrl
xorb
fdivrs
mov
add
iret
imul
sar
xor
pop
fcoml
mov
arpl
or
cmp
in
dec
mov
or
cmp
mov
iret
ss
test
bound
mov
sti
mov
jp
rorl
pop
scas
mov
ret
fildll
les
jecxz
push
mov
add
push
mov
idivl
cwtl
pop
popf
xor
pop
jge
dec
cli
xchg
xchg
mov
add
mov
dec
ret
loop
outsl
mov
sarl
adc
test
push
mov
inc
mov
stc
fwait
push
call
mov
jmp
adc
cmp
adc
popa
jl
cmpsl
push
das
movsl
arpl
jmp
push
or
iret
jp
fistpl
inc
lods
in
arpl
mov
icebp
push
lcall
and
in
fadd
mov
cmp
fcoml
sbb
jb
mov
mov
and
xchg
lret
inc
aaa
pop
mov
pop
pop
int3
pop
pop
pop
fbstp
fs
std
inc
pop
and
inc
jae
mov
jg
pusha
cld
daa
inc
in
xchg
jb
dec
flds
mov
dec
xor
xchg
nop
fsts
mov
add
jne
shlb
ficoml
adc
in
out
lds
out
cltd
xchg
fcmovne
lret
fisubs
psubq
dec
fisubrl
ja
jae
ret
inc
pop
ret
push
xchg
mov
ret
dec
or
cmp
sub
in
jbe
cli
and
adcl
mov
fs
jne
xchg
jae
and
test
or
add
mov
pop
repnz
loopne
aaa
mov
clc
in
rolb
in
and
adc
cmp
in
or
sbb
adc
push
stos
pop
out
sbb
jmp
xor
jb
mov
bound
push
leave
xchg
cmpl
into
jno
leave
dec
fstpl
jecxz
inc
mov
or
loop
mov
or
cs
jl
rclb
cmp
mov
test
sti
cltd
add
mov
lds
push
aad
leave
repz
cld
sub
int3
mov
sub
rcrb
mov
mov
out
ret
bound
dec
aam
scas
adc
stc
add
fistps
leave
lahf
fcomp
pop
inc
enter
mul
aas
cs
adc
mov
mov
push
cmpsb
mov
xor
roll
push
jecxz
fldcw
add
mov
push
adc
inc
push
mov
mov
cmp
xchg
fidivrs
out
xor
add
xor
or
jmp
lds
mov
inc
imull
repz
mov
int3
push
adc
popa
fisubl
push
mov
filds
push
out
inc
xor
inc
inc
ret
cmp
xorb
orl
or
in
cmp
push
out
pop
sahf
les
mov
jae
scas
pop
sub
movb
data16
popa
mov
jmp
and
enter
mov
jg
clc
inc
imul
push
or
pop
pushf
jne
pusha
incl
xor
insb
sbb
jb
add
movsl
mov
push
and
jbe
lahf
outsb
rcrb
jns
fisubrl
pop
xor
jnp
in
popa
ret
movd
jecxz
popf
mov
cld
daa
mov
jbe
lods
std
leave
arpl
pop
mov
dec
mov
rcr
jne
push
loope
mov
mov
ljmp
das
cwtl
xor
xchg
aas
std
sub
in
dec
mov
hlt
mov
loope
mov
fs
daa
mov
orl
out
je
cmp
icebp
jb
daa
mov
test
js
stc
out
and
loopne
jo
in
or
imull
and
in
or
fstpt
in
addr16
mov
in
sbb
out
xor
jl
xor
mov
out
xor
jecxz
xchg
inc
ret
lods
pop
push
lods
lds
push
ret
sub
test
xor
jnp
jne
out
xor
xchg
xchg
cmp
insb
cltd
mov
adc
xchg
stc
and
mov
into
clc
ret
aad
sub
add
shrb
and
mov
pop
lods
xchg
xchg
xchg
mov
adc
lods
popf
push
and
pop
iret
in
insl
rorb
mov
test
xor
nop
sub
addr16
test
pop
pop
jmp
jg
push
nop
push
mov
jo
push
mov
and
pop
aam
insb
pop
aad
mov
aas
in
pop
jbe
stos
mov
popa
int
sti
xchg
cwtl
ficoml
or
scas
cmpsb
and
jns
mov
cmp
ret
and
jg
ficoms
cs
negl
test
and
xchg
cmp
mov
addr16
xor
jmp
enter
shll
daa
fcomip
loopne
scas
mov
repz
mov
pop
nop
xchg
test
push
mov
ret
xor
mov
dec
mov
cli
inc
fimuls
cwtl
cmp
push
mov
fsubrl
mov
xor
dec
xchg
loope
and
sbb
inc
mov
pop
cmpsl
pop
lods
inc
dec
enter
inc
mov
jns
out
cltd
jae
pop
xor
pushf
test
in
scas
inc
cltd
test
add
and
aam
test
mov
mov
adc
pop
mov
loopne
xchg
mov
sbb
pop
cmpb
shll
lock
ret
in
imul
pop
stos
sub
testb
adc
sub
popf
pop
pmuludq
pushf
jnp
fwait
dec
push
in
cmpl
add
addb
adc
test
push
popf
inc
leave
repz
insl
lret
sti
pop
insb
mov
test
pop
shll
dec
ret
sub
addr16
daa
xchg
fidivrl
je
movsb
cmp
fstpl
mov
push
lret
push
or
ds
sbb
mov
fnstenv
adc
sbb
adc
out
xchg
fnsave
jne
repnz
mov
shll
ret
xorb
pop
mov
xchg
mov
ret
sub
lret
fists
movsb
push
and
mov
ss
add
sahf
bound
push
lods
jb
dec
jb
pop
int3
push
aas
mov
jmp
or
setb
sub
leave
xor
pop
add
inc
sti
cs
inc
mov
inc
xorb
push
addr16
aas
and
gs
ss
ss
mov
test
scas
dec
dec
jecxz
iret
sti
aas
in
push
sub
xor
push
push
adc
add
cmc
icebp
fadds
mov
mov
xchg
pop
adc
sar
insl
mov
fldcw
xlat
fcoml
cmpsb
mov
sub
jecxz
pop
aad
add
hlt
popf
inc
sub
inc
adc
or
or
xor
pop
in
push
mov
xor
cli
inc
adc
lret
aaa
mov
into
inc
pop
lret
push
cs
fists
das
cmc
mov
lea
movsb
mov
push
jecxz
rol
lahf
xchg
xor
xor
push
push
imul
jp
pop
or
jge
add
sbb
pop
in
dec
mov
mov
pop
out
aam
cwtl
jg
xor
xchg
jo
lret
sti
call
pushf
outsl
lcall
mov
outsb
add
push
repnz
leave
jnp
mov
loope
ja
cli
add
inc
popf
mov
cmp
push
mov
jg
lret
sub
xchg
sbb
fs
aas
mov
std
repz
lock
and
test
inc
call
or
inc
ds
inc
xchg
insl
mov
outsl
mov
sbb
ret
push
in
js
mov
jmp
cs
arpl
add
xchg
cmp
jge
xchg
push
jp
xchg
xchg
lock
jnp
addr16
push
pushf
xor
sbb
fistl
sbb
adc
loop
sbbl
or
add
dec
popa
push
mov
pop
fwait
pusha
idiv
inc
mov
and
and
out
cmpl
jns
xor
add
inc
aas
ljmp
xor
add
scas
insl
mov
scas
add
sahf
insl
mov
adc
lret
dec
out
mov
sub
int
in
inc
mov
adc
repnz
testb
std
add
outsl
push
mov
nop
lods
jae
mov
cmpsb
add
xchg
inc
push
ja
inc
imul
inc
dec
rcrl
push
lock
cmp
loopne
ja
adc
dec
mov
mov
sbb
sbbl
inc
mov
cmp
pop
movsl
jae
ss
js
stos
xchg
aas
mov
mov
mov
mov
mov
or
mov
pop
dec
lods
hlt
sbb
xor
sbb
into
out
fstpt
fidivrs
insb
call
cmp
lods
jecxz
in
pop
mov
aam
cmp
dec
lods
fs
inc
rcll
push
and
xchg
mov
mov
loopne
sarl
adc
adc
cltd
lock
jl
pop
or
xchg
ret
mov
in
fidivrs
inc
or
xlat
inc
stc
mov
pop
sti
call
into
cmp
int
sub
add
dec
mov
ret
rcll
test
popl
xchg
test
filds
push
inc
push
adc
mov
xor
pop
mov
jp
fadds
popf
mov
lcall
xor
lods
xchg
lret
push
repz
rcl
stos
inc
add
out
jle
adc
push
mov
inc
int3
hlt
inc
les
fadds
shlb
xchg
loop
movsl
shl
sbb
mov
mov
nop
jbe
lods
xor
inc
ficomps
sahf
adc
or
sbb
mov
push
call
jnp
dec
ret
or
adc
xor
push
dec
sahf
cmp
cmc
insl
mov
in
dec
xchg
mov
sbb
loop
xchg
cli
xor
imul
aas
add
inc
fs
jecxz
enter
ss
aam
pop
mov
les
ds
pushf
dec
iret
push
pop
or
add
mov
in
add
pop
or
aam
lods
out
cmpsb
add
push
inc
push
ljmp
xor
jns
sub
fisttpll
or
fnsave
imul
mov
lock
in
dec
out
push
push
inc
scas
ret
inc
jmp
jbe
jp
dec
inc
mov
xchg
adc
mov
xchg
bound
dec
aam
mov
cmp
dec
or
xor
or
pop
pop
fstl
dec
sbb
mov
orl
cmp
mov
lahf
jmp
or
jg
mov
mov
mov
sbb
pop
call
loopne
icebp
aam
popa
cmpsb
adc
and
jecxz
dec
lahf
inc
fmuls
neg
inc
je
test
loop
sbb
hlt
dec
shlb
push
iret
pop
and
movsb
add
push
lds
fsub
push
fldcw
pop
test
or
push
insl
xchg
stc
xor
cld
out
rorl
filds
bound
mov
sub
orb
jp
push
xchg
sub
inc
mov
cmp
dec
in
adcl
ret
inc
push
in
pop
rorb
les
mov
xlat
xchg
dec
dec
mov
negl
movsl
dec
sbb
dec
mov
clc
test
mov
dec
fistpll
jae
cld
xor
inc
cmp
push
xlat
ljmp
divb
mov
cmpsb
cmpsb
pop
push
pop
gs
mov
or
jns
cmp
sbb
sub
jp
push
mov
mov
sbb
decb
push
mov
popa
insl
aas
test
mov
cmp
push
pusha
pop
aam
jb
cmp
jno
jle
ret
cmp
xchg
add
and
and
xchg
ja
sbb
jmp
daa
mov
fwait
sub
mov
ja
xchg
repz
mov
ljmp
dec
fldt
out
add
pusha
mov
mov
daa
sbb
pusha
fwait
imul
mov
cmpl
sub
out
mov
adc
jns
jno
mov
fisubl
cmpsl
sbb
and
fstpt
fildll
and
in
orl
dec
fbstp
adc
jecxz
loop
xor
lret
out
xchg
cld
dec
adc
test
xchg
mov
out
test
jae
xor
les
push
inc
shl
sub
push
add
addr16
in
ss
mov
xor
jbe
add
cld
xchg
pop
data16
pop
sub
mov
ss
xor
mov
scas
add
xorl
mov
push
add
ja
adcb
std
and
and
jl
sub
mov
stos
pop
clc
xor
fcoml
js
sub
and
sbb
and
sub
mov
sbb
aad
ljmp
or
aam
sti
xchg
sahf
cmc
popf
outsl
out
dec
cltd
mov
mov
loope
mov
mov
jo
cld
push
call
rcl
dec
aam
mov
aas
in
and
pop
test
fsubs
sub
test
xorl
pop
jmp
mov
fstps
mov
dec
lods
push
push
stos
xchg
repz
out
jns
int3
sar
out
cmp
fisubrs
jl
mov
cld
bound
cmpsb
movsl
jae
cmc
out
rol
aam
test
mov
fucomi
fdivrs
int3
or
adc
fs
aaa
cld
sub
add
sbb
psubd
and
push
dec
sbb
jno
add
adc
dec
push
xchg
insb
cmpsb
sub
dec
rcrl
test
mov
cmp
xor
jecxz
sbb
jmp
sti
mov
std
push
add
adc
je
movsb
dec
mov
pop
add
push
iret
jbe
mov
outsl
xor
fildl
xchg
jmp
push
sub
arpl
xor
lods
inc
xchg
pop
int3
xor
in
aaa
or
out
test
mov
mov
jg
test
add
jmp
addb
and
jb
data16
or
push
jb
jp
call
mov
mov
lds
enter
loope
xor
mov
sahf
xor
adc
jp
loop
pop
inc
out
and
cmp
inc
lret
sbb
sti
xchg
cmp
pop
sarb
and
imul
mov
repnz
mov
push
repz
test
adc
lcall
pop
lret
sahf
repz
aad
sbb
negl
mov
or
cltd
clc
jmp
jno
push
sti
bound
adc
orb
loope
mov
cld
in
jecxz
mov
out
rcrl
or
dec
pop
aam
movsl
inc
adc
dec
mov
inc
ret
xor
mov
lods
jg
xlat
addr16
psubb
and
mulb
repnz
lods
jmp
negl
add
add
jb
mov
ljmp
popa
hlt
jno
mov
shll
pusha
pushf
lcall
mov
aam
dec
jecxz
shll
mov
testb
test
mov
addr16
movups
cmp
hlt
rorl
jne
sbb
lds
jg
hlt
int3
pushf
insb
into
and
stos
leave
pusha
aad
mov
scas
out
xchg
xchg
in
mov
mov
movsl
sbbb
fs
leave
arpl
mov
inc
mov
mov
xchg
lods
lock
or
cmp
xchg
sbb
insb
test
cwtl
bound
add
repnz
mov
jle
and
fwait
xor
xlat
dec
jnp
bound
notl
fsts
cmpsb
popa
sti
push
inc
fdivp
sbb
jge
mov
shl
clc
lahf
xchg
movl
push
pop
mov
cli
xchg
aaa
xchg
ret
dec
adc
imul
test
insl
es
xchg
or
je
sbb
dec
fildll
stc
pop
add
cs
pop
call
mov
pop
mov
and
mov
lock
popa
jae
sbbb
mov
data16
ja
inc
mov
xchg
xor
insb
inc
popa
imul
and
movsb
cmp
cmp
fs
push
xchg
or
mov
add
mov
fimuls
stos
popf
lods
jb
push
cli
push
sarl
repz
enter
sar
call
or
adc
cwtd
rcrl
arpl
inc
mov
jmp
inc
or
dec
add
pop
sbb
push
mov
mov
jle
scas
cmp
loopne
push
popf
xor
push
and
xchg
adc
cmpsb
xchg
cs
pusha
imull
cli
mov
sub
jle
jg
shrl
mov
icebp
mov
repz
cmpsb
and
inc
sub
int3
cwtl
dec
loop
in
adc
push
jmp
add
xchg
jo
push
out
xchg
movsl
cmp
in
add
pop
cmp
push
stos
inc
mov
fmulp
pop
adc
sbb
jge
xor
shlb
add
mov
pop
lock
and
or
inc
xlat
pop
sub
cmc
lods
jl
dec
scas
into
jl
add
shrl
and
xchg
mov
movsb
cmpsl
enter
enter
sbb
mov
dec
loope
outsb
adc
popf
shlb
icebp
mov
push
out
adc
add
xchg
mov
and
mov
js
or
xchg
cmp
pusha
pop
push
mov
mov
jle
scas
cmp
filds
push
popf
xor
pop
repnz
mov
test
xchg
xlat
stc
pusha
imull
stc
mov
sub
jle
shrl
lahf
pushf
xor
lahf
icebp
mov
repnz
cmpsb
and
fsubrs
inc
sub
lret
xchg
dec
loop
in
adc
sbb
aas
xor
jo
xchg
outsl
xchg
push
out
nop
movsl
cmp
jecxz
add
push
aaa
mov
imul
stos
inc
mov
pop
pmaxub
jge
xor
shlb
add
mov
pop
lock
and
pop
sub
pop
sub
cmc
lods
jnp
dec
lods
int
adc
into
shrl
and
xchg
mov
movsb
movsl
xlat
outsb
mov
sbb
dec
lcall
sahf
in
jbe
fdivrp
or
out
or
mov
inc
pop
cmp
arpl
mov
push
popf
pop
ja
test
inc
adc
int
xchg
xor
ret
sbb
inc
or
sub
insl
or
paddw
bound
mov
jle
inc
mov
cmp
insl
int
lahf
lcall
repnz
dec
in
adc
xchg
inc
aas
jmp
icebp
fistl
rolb
inc
pusha
gs
xchg
add
cs
dec
sahf
sub
sub
mov
jae
or
sti
push
inc
out
sbb
jo
cmp
inc
sub
mov
arpl
lcall
imul
fsubrs
xor
mov
cmpl
lahf
cmp
jns
shlb
popl
xlat
jo
jb
call
stc
push
and
inc
xlat
arpl
mov
xor
cld
sahf
lret
lret
and
cmp
int
add
pop
pusha
add
and
dec
xchg
insl
sbb
pop
sahf
mov
or
mov
mov
pushf
loope
in
cmp
in
mov
orl
lods
out
add
add
incl
xorl
adc
cmpsb
mov
iret
ja
das
mov
push
mov
and
stc
mov
cmp
and
or
jb
mov
push
pop
mov
mov
aas
adc
mov
inc
jns
ljmp
add
xor
lret
jl
jne
stos
add
or
inc
xchg
mov
loop
xchg
mov
adc
mov
cmp
fiaddl
lret
jbe
data16
test
xor
add
xor
jno
ja
mov
lea
shll
push
fidivrl
pop
lret
fidivrs
mov
pushf
orl
lret
in
decl
mov
xchg
pop
aas
call
jp
xor
aam
dec
dec
out
adc
lret
fidivrs
cmp
xchg
repz
push
cltd
ja
scas
into
mov
movl
aam
pop
sub
sbb
rolb
rcl
fistps
mov
jo
ja
add
out
sbb
lds
mov
bound
xchg
cmp
mov
xchg
mov
inc
inc
test
imul
fwait
push
enter
clc
int
cmpsb
leave
inc
fs
jb
dec
data16
inc
mov
rolb
add
movsl
ficomps
push
add
and
push
int3
cmp
shll
rcll
pusha
mov
adc
ficoml
out
sti
lea
aam
pop
and
pop
dec
es
dec
pop
xlat
mov
lcall
movsl
add
into
and
outsl
fisubrl
push
xchg
cmp
test
dec
jg
incl
adc
outsb
test
push
stos
clc
faddp
loope
xchg
hlt
gs
mov
push
out
mov
mov
adcb
cld
inc
mov
xorl
mov
mov
xor
dec
in
fnstsw
iret
es
pop
cwtl
arpl
test
cmpsl
cli
rclb
out
xchg
shll
ret
or
adc
mov
sbb
data16
xorb
cmp
dec
push
jmp
inc
out
push
or
add
inc
gs
dec
and
xchg
sub
push
xor
inc
xor
lahf
mov
push
lcall
clc
sub
jmp
fwait
out
or
mov
ds
push
jle
adc
repz
in
ljmp
test
push
gs
mov
loop
sahf
lods
ss
clc
xor
cld
pop
adc
sbb
push
or
push
push
call
into
out
dec
or
movsb
cmp
mov
mov
into
xchg
clc
pop
movsl
lcall
mov
movsl
cmp
sarb
pop
clc
mov
movsb
sti
pop
xor
dec
or
sbb
cmp
aam
leave
mov
or
inc
loop
pop
sub
enter
lock
cmp
push
mov
rolb
test
xchg
inc
ss
jo
pop
and
popf
sub
and
decb
push
call
adc
outsl
push
mov
scas
mov
jbe
lock
sti
sti
fmull
ret
xor
adc
xchg
mov
xlat
jle
mov
orb
add
insl
adc
fidivrs
lret
jecxz
mov
sub
fcompl
inc
inc
adc
fdivrl
gs
mov
and
int
fcompl
lahf
inc
les
imul
in
or
cmp
test
push
clc
lret
jns
sbb
lahf
in
aad
jo
push
mov
xchg
mov
ficoml
shlb
cltd
hlt
pop
addr16
pop
add
jbe
fldpi
cmovl
dec
pop
js
aad
push
cli
roll
cmc
dec
adc
jo
pop
add
outsl
repz
push
into
xchg
je
cs
imul
repnz
out
cmp
lods
jg
dec
adc
scas
pop
add
add
ret
push
mov
mov
fnstenv
movsl
test
insb
mov
push
and
jnp
mov
xchg
cmp
out
stos
lods
in
xor
jb
xchg
cmp
stos
xor
sub
imul
in
dec
xchg
stc
pop
rcll
in
jbe
insb
lock
mov
rorb
jg
call
cld
pusha
test
movsb
sub
pop
add
xor
xor
negb
sub
fsubrl
cmpb
movsb
sub
in
jno
ret
fiadds
or
test
pop
sub
add
aas
movsb
sub
cmp
adc
pop
add
movsb
xor
test
addr16
xchg
jne
test
outsb
inc
subps
lret
roll
stc
pushf
test
out
insl
js
dec
push
leave
popa
dec
pop
xlat
adc
cltd
notl
push
add
icebp
int3
mov
aas
jne
insb
xor
pop
push
jbe
out
nop
leave
xchg
fistl
rclb
inc
adc
cmp
ss
jl
je
jg
aad
xlat
test
or
mov
push
repz
mov
fwait
adc
inc
stc
mov
rolb
gs
mov
loop
pop
xchg
pop
lret
jg
outsl
in
inc
rolw
pop
out
mov
pop
xchg
test
cmpsl
xor
enter
mov
into
out
xor
lahf
cmp
movsl
in
mov
jo
int3
out
xchg
inc
int3
sbb
int
xchg
mov
cmpsb
xchg
inc
inc
pushl
mov
xchg
inc
push
addr16
mov
loope
inc
adc
movsb
mov
and
mov
aam
adc
das
stos
and
mov
mov
ja
push
sub
sti
mov
add
dec
roll
and
pop
fistpll
movsl
mov
js
and
sbb
stc
mov
pop
aas
in
mov
mov
movsl
xor
xchg
mov
repz
jl
lds
mov
dec
push
push
adc
push
dec
xlat
icebp
in
leave
mov
std
xchg
inc
stos
inc
jns
add
push
push
inc
pop
leave
mov
popf
xor
into
inc
mov
out
xchg
addr16
sub
pop
xor
enter
mov
jecxz
push
jb
out
fists
xchg
inc
sub
cmp
mov
fdivrl
mov
mov
cmp
insl
out
xlat
and
std
jns
adc
sbb
fdivrl
test
add
cmpsb
pop
std
jnp
xchg
inc
sub
nop
inc
mov
mov
sub
xchg
stc
jae
lret
pop
fmuls
inc
shld
mov
mov
jmp
popf
fwait
dec
or
shll
jo
sarl
insb
mov
aad
shrb
fistpl
enter
scas
in
addr16
sbb
xchg
jmp
add
or
stc
pop
xchg
into
sahf
cmp
pop
mov
negb
mov
sbb
sti
pop
or
mov
aam
ret
rol
rcl
pop
movsb
push
sub
pop
push
jbe
or
stc
pop
int
mov
adc
shrl
mov
imul
stos
pop
jbe
inc
mov
cld
pop
shl
or
inc
scas
push
ss
stos
mov
sbb
mov
ret
push
mov
push
std
pop
sarb
pop
movhps
sub
jb
fwait
cmp
pop
mov
call
clc
sti
pop
mov
mov
test
mov
inc
pop
in
pop
mov
jo
xchg
inc
aam
mov
fimuls
mov
xor
push
xchg
mov
scas
ss
pop
add
inc
mov
mov
and
jb
add
cmpsb
push
sub
mov
daa
scas
mov
imul
add
push
and
jecxz
addr16
sub
into
xchg
inc
cmp
lret
popf
pop
cmp
fldenv
xor
les
jno
jp
push
push
cli
arpl
fildl
sbb
sub
stc
add
pop
out
ret
mov
mov
cwtl
sub
je
shll
pop
pop
adc
ja
fdivs
hlt
mov
pop
cld
jl
push
movb
pop
push
push
jnp
sub
pop
cld
pop
push
jg
andl
jg
push
cmc
jb
test
in
pop
lds
roll
scas
xchg
hlt
mov
mov
jnp
lea
push
xchg
movsl
pop
cld
ret
sbb
dec
sbb
shll
jne
jns
adcl
inc
cmp
jbe
std
icebp
popa
das
xlat
adc
cld
xor
push
push
loopne
popa
icebp
add
lock
jmp
cmp
inc
xchg
add
mov
pop
lcall
dec
rcr
and
sbb
add
divl
jge
in
leave
mov
push
sub
ds
mov
movsl
mov
push
hlt
les
or
push
jno
stos
loope
jae
mov
into
mov
lds
cmovbe
push
push
xor
sbb
or
and
stc
pop
adcb
movsb
mov
mov
add
imul
dec
push
add
leave
cmp
mov
ljmp
dec
cmc
cmpsl
cs
pushf
sbb
test
lret
shlb
popf
rorb
cmpsl
sub
fistpl
inc
stos
sbb
stos
xchg
xchg
cmp
xchg
push
cmc
lret
lds
stos
inc
adc
sub
fadd
pop
push
cmc
fiadds
lret
call
popf
inc
out
out
cmp
fwait
decl
aas
iret
filds
xor
es
xor
mov
aaa
movsl
add
pop
mov
in
aas
aaa
movsl
das
mov
jo
aaa
add
mov
mov
push
lret
imulb
xor
adc
mov
roll
sahf
loopne
shlb
loope
icebp
outsb
cmc
adc
imul
cmp
and
pop
insl
sti
jecxz
stos
jp
and
shl
cmp
movsb
add
inc
or
insl
icebp
adc
inc
sarl
cli
mov
add
or
cmpsb
pop
and
cmp
cmp
inc
add
subl
xor
xor
xor
and
popa
lock
in
daa
jno
in
add
pop
sti
pop
arpl
rolb
mov
adc
ret
in
jno
adc
xchg
movsb
jle
mov
pop
or
pop
ret
mov
mov
pushf
lret
iret
xchg
jmp
pop
add
cli
jno
daa
sbb
adc
mov
in
mov
mov
sbb
rolb
inc
ja
clc
or
rolb
lds
add
imul
or
rcl
xor
lea
jge
pop
mov
lock
stos
daa
mov
sub
adcb
push
add
sbb
aas
lods
das
lods
sub
mov
jp
or
jb
mull
insl
in
push
jp
sar
cmpsl
xor
push
jbe
pop
pop
add
xor
shrb
rolb
les
cmp
ljmp
mov
push
lods
pusha
add
pop
xor
sub
mov
std
push
mov
popf
sub
int
ret
push
mov
mov
pop
stc
sub
ret
pop
imul
sbb
mov
and
dec
xor
aam
into
xchg
sub
mov
ds
idivl
sub
adc
mov
sarb
and
push
daa
xor
int
aaa
pop
incl
orb
dec
adc
xchg
cmp
pop
in
cmp
cmc
pop
lods
sub
mov
shll
push
addl
push
dec
adc
cs
sarl
mov
ret
lods
pop
pop
dec
mov
ret
mov
mov
in
push
lds
pop
pop
pmullw
nop
mov
xor
mov
jle
jo
outsl
adc
addb
add
out
and
jb
xor
addr16
cmp
scas
sbb
mov
fidivrs
dec
push
stos
xor
pop
push
shll
dec
andnps
aas
xchg
and
mov
insl
jl
xchg
xor
fnstcw
dec
clc
add
ret
imul
cli
mov
push
sbb
xchg
inc
sub
mov
orb
xchg
or
mov
daa
push
pop
mov
cmp
fdivl
roll
in
mov
insb
in
sbb
mov
lret
xchg
pusha
lcall
fsubrs
decl
test
cmc
and
sub
loopne
sub
add
mov
pusha
ja
mov
pop
popa
mov
testl
pop
cld
clc
call
fidivrl
fsubrs
cmpsl
xor
add
push
fistpll
lea
sbb
xchg
add
pop
xchg
inc
sbb
addr16
inc
bswap
cmp
and
add
pop
incb
pop
lret
xchg
pop
pop
push
je
rorl
or
pop
push
in
addr16
cmp
push
insl
add
add
push
int
add
rcll
das
test
adc
sub
enter
cs
mov
in
push
in
ds
mov
cwtl
ds
in
push
daa
xchg
inc
test
fdivrl
mov
cmpsb
xor
int3
mov
mov
nop
push
leave
add
nop
sbb
push
sarl
dec
xchg
jb
mov
test
andb
pop
add
mov
outsb
in
and
ret
les
or
daa
inc
push
es
sub
inc
adc
xor
adcb
and
mov
sahf
mov
stos
mov
push
xor
inc
test
xchg
mov
loop
cmp
ss
popa
out
xchg
stc
jns
jmp
pop
fisubs
cmp
dec
fdivrl
imul
sub
test
jmp
adc
xchg
inc
adc
ds
dec
cli
xchg
jl
pop
repz
jae
andb
sbb
insl
testb
cmp
stos
lret
jecxz
iret
shl
lret
sbb
negb
ror
xchg
repz
mov
push
mov
pop
cs
inc
adc
lea
jmp
nop
xchg
lock
mov
cli
pop
mov
mov
mov
sub
sbb
and
push
std
lods
ss
add
pop
push
cli
pusha
cmp
es
pop
or
push
sti
xor
or
xor
insl
adc
in
stos
jnp
lods
push
mov
mov
imul
repnz
je
mov
lods
push
push
or
scas
das
adc
jecxz
cmp
push
push
push
add
or
repnz
lods
adc
mov
xchg
out
std
pop
xor
leave
mov
das
stos
push
jp
lret
orb
fidivrl
test
int
adc
cmpsb
fsubr
aam
outsl
add
scas
push
dec
xor
jge
repz
scas
jge
xchg
sbbb
add
mov
jb
flds
fcom
jle
push
loopne
in
inc
or
hlt
pop
stc
insb
and
fwait
pusha
jne
inc
outsl
jp
fidivrs
jbe
inc
out
fistpll
std
int
shrl
pop
clc
xchg
inc
fildl
cltd
cmp
dec
cmp
call
cmpb
cmpsl
xor
and
push
add
rcrb
mov
inc
fiaddl
jae
dec
inc
push
sbb
mov
jecxz
sbb
mov
sbb
sti
cmpsl
sub
pop
enter
fwait
cwtl
or
push
cmp
in
jno
xor
cmp
xor
lcall
das
imul
and
pop
pop
push
mov
sub
rcl
outsb
clc
ljmp
dec
pop
pushl
sub
daa
lcall
sub
cmc
fidivrs
filds
jl
test
not
jae
push
out
add
inc
adc
lcall
aaa
mov
mov
movsl
adc
nop
and
jae
dec
xor
mov
shll
cld
pop
push
ja
xchg
nop
pusha
add
adc
mov
stc
pop
insb
addr16
popa
and
sub
cmp
std
lock
add
mov
ret
repz
out
mov
inc
test
es
mov
gs
push
cld
adc
dec
jge
and
ficompl
pushf
aas
sub
cmp
and
jp
push
jnp
icebp
pop
xchg
mov
out
add
jle
sbb
mov
jp
mov
std
pop
adc
cmp
sbb
mov
mov
mov
cld
push
loopne
nop
mov
inc
adc
mov
sbbl
add
les
scas
jp
lcall
inc
push
ficomps
jb
ljmp
inc
repz
xchg
mov
xchg
aam
mov
movsl
mov
into
xchg
outsb
push
call
pop
or
or
jle
inc
adc
aaa
fldenv
mov
das
repz
repz
in
insl
nop
pop
mov
test
rcll
in
mov
mov
data16
adc
inc
outsl
adcl
ljmp
test
lret
cmpsl
mov
icebp
add
enter
add
or
rcll
jae
mov
scas
sub
cmp
and
js
jge
outsl
cmp
push
pushf
aaa
es
mov
mov
dec
sub
mov
std
pop
sbb
aas
lcall
call
mov
sahf
lcall
bound
inc
cmc
pop
shlb
daa
mov
dec
sbb
movsb
mov
out
lods
ret
jl
clc
add
rclb
mov
adc
jecxz
in
addl
mull
xchg
or
out
test
fdivrl
sub
and
fwait
mov
out
addr16
scas
es
test
mov
stos
pop
iret
adc
ds
fimull
iret
pop
push
dec
or
mov
in
andl
mov
shrl
pop
adc
cmpsb
loopne
mov
mov
addr16
or
xor
cmp
push
and
int
test
ret
test
scas
xor
xor
xchg
mov
mov
cmpsb
mov
test
sbb
inc
rclb
xchg
lods
sub
xorb
jnp
icebp
push
jmp
into
jmp
or
mov
jp
mov
push
add
clc
pop
mov
fdivrl
xchg
inc
push
roll
pop
xchg
push
call
xchg
rcrb
cltd
or
mov
addr16
mov
push
push
mov
lret
icebp
add
xor
push
pop
icebp
aaa
ljmpw
loope
int
pop
mov
lods
fwait
inc
add
jno
cmpsl
push
dec
adc
mov
add
movsl
push
or
adc
lods
fiaddl
std
cmp
jae
ljmp
idiv
pop
sahf
adc
jl
lret
inc
mov
mov
jnp
jns
ja
scas
fdivrl
mov
iret
dec
ljmp
mov
mov
pop
stc
icebp
stos
sub
push
jbe
je
lcall
jo
ret
loopne
dec
jno
adc
lret
jle
pop
loop
inc
adc
add
and
subl
dec
mov
adcl
push
std
out
movsl
mov
add
push
mov
inc
aad
subb
rorl
daa
stos
sub
cmp
or
pusha
or
add
psrld
push
je
addr16
sbb
jecxz
inc
or
pop
push
cli
loopne
and
negl
cmp
jecxz
pop
lcall
out
imul
ret
fs
pop
stos
jo
cmp
es
inc
add
lcall
and
adc
and
into
mov
cmp
sahf
ds
jle
adc
dec
scas
sub
cmp
ljmp
sub
cmp
rcrl
xchg
inc
loopne
fdivrs
cld
lcall
bound
cld
aad
or
popa
or
jg
jp
xor
outsb
clc
xor
jl
out
stos
and
mov
faddl
xchg
add
mov
into
jmp
cs
hlt
mov
xor
insb
pop
jecxz
sar
nop
sarl
out
imul
aas
addr16
dec
xlat
pushf
inc
rcrl
xor
test
cmpl
adc
lock
in
inc
adc
pop
cli
push
sub
and
lea
mov
ljmp
mov
out
pop
cld
mov
mov
jnp
push
shrl
daa
leave
xchg
lahf
in
int3
add
loopne
adcb
sub
push
stc
lcall
dec
mov
scas
push
cld
cmc
addr16
dec
scas
jecxz
sub
lods
daa
mov
xchg
jbe
or
push
or
push
je
test
mov
into
inc
xlat
lcall
dec
push
xchg
dec
setp
jne
xlat
sbb
test
mov
dec
adc
daa
test
insb
xor
push
jnp
std
cmp
push
int
das
je
sar
ja
sbb
mov
push
fdivs
cmpsl
sti
pop
out
or
pop
fnstsw
xor
add
leave
xchg
stos
movsb
xor
and
les
jg
fldenv
rolb
mov
inc
or
xchg
loope
xchg
aas
add
xor
bound
scas
sub
mov
je
insb
adc
sti
xchg
cmp
xchg
cmp
sbb
dec
dec
push
cli
nop
sahf
push
cld
mov
je
pop
mov
jbe
testl
lret
flds
out
comiss
push
sbb
mov
mov
loope
cwtl
push
clc
in
dec
psllw
or
cld
mov
lds
cmp
adc
dec
adc
inc
adc
fnstcw
inc
mov
insl
jmp
scas
pop
std
es
push
stc
cmp
data16
dec
inc
adc
pop
mov
mov
ss
test
popf
cwtl
add
sub
lods
das
push
inc
cmp
and
jg
out
sub
jns
inc
xor
fsts
or
pusha
repz
mov
add
or
inc
pop
mov
inc
inc
fnsave
ds
xchg
cmp
adc
repnz
pop
outsb
ret
mov
dec
fwait
jle
insb
cltd
or
test
ret
mov
aad
cmpsl
imul
out
repz
mov
scas
leave
mov
test
mov
or
push
pop
sti
jns
lods
daa
pop
gs
divb
stos
cmpsb
xor
mov
mov
push
or
xchg
movsb
sub
push
mov
mov
dec
leave
sub
fdivrs
push
les
mov
negb
cmp
mov
fildl
pop
data16
gs
mov
xchg
jne
fadds
nop
pop
enter
xor
rorb
ret
fs
sbb
js
loop
mov
mov
test
fisttps
sbb
cwtl
push
ret
ret
fnstsw
pop
sub
xor
pusha
repz
mov
jecxz
xor
sahf
mov
or
push
into
lahf
cmp
test
fs
lds
pop
popf
sbb
scas
stc
ret
ja
repz
adc
mov
mov
test
sbb
dec
xor
push
cld
adc
daa
stos
rolb
outsb
aam
add
cmp
sbb
jp
jge
jg
pop
mov
mov
lods
fadds
orb
test
pop
push
inc
mulps
xchg
pop
push
mov
not
pop
rcl
or
or
test
fistpll
mov
mov
adc
inc
adc
cli
aad
jnp
mov
lods
add
mov
add
pop
xchg
pop
idivl
movsl
aaa
movsl
subl
inc
cmp
adc
lods
and
add
in
sub
loope
jno
pop
hlt
pusha
mov
pop
mov
test
lds
pop
ds
add
nop
into
pusha
mov
adc
push
shlb
adc
mov
loope
out
jbe
repz
pop
dec
cmp
shl
mov
shl
mov
repz
movsb
cs
xchg
cmp
mov
loopne
mov
dec
push
adc
rorb
leave
xchg
adc
inc
mov
daa
mov
test
push
cmc
pusha
mov
or
sbb
mulb
inc
pop
mull
rolb
push
dec
or
cmpsb
icebp
arpl
push
rcrb
push
ja
out
mov
mov
rolb
jg
call
push
sbb
jmp
push
dec
sarl
push
addb
xor
sbb
ja
mov
mov
mov
lds
jg
call
decl
cld
out
or
mov
dec
mov
sbb
sub
pop
imul
stos
dec
or
push
call
loop
mov
pop
aad
aam
outsb
dec
mov
sub
lret
or
jno
adcb
and
lods
xor
pop
notl
shlb
cmp
cmp
pop
cmpsl
mov
xlat
sbb
addr16
clc
lret
popf
lds
xchg
roll
mov
mov
andb
negl
dec
adc
out
orb
movsb
sub
lret
mov
mov
scas
cs
xor
and
cmp
mov
repz
jp
clc
test
xor
push
jl
xchg
adc
inc
xchg
cmp
rcl
jp
xor
aad
push
add
add
insl
subl
adcb
mov
jo
jecxz
jp
sub
inc
mov
fsts
push
mov
lahf
mov
sub
cmp
scas
pop
mov
adc
inc
push
mov
faddl
enter
outsl
sahf
xor
mov
push
push
clc
or
mov
mov
test
mov
add
sahf
push
jno
xchg
aad
pop
add
lea
enter
push
cli
pop
and
cmpsb
mov
popf
add
test
pusha
push
stc
inc
jb
lea
or
dec
cwtl
xchg
cmp
in
xchg
xor
jnp
sbb
pop
sti
test
sub
loop
mov
sti
hlt
pop
icebp
cs
jp
mov
lods
push
or
arpl
mov
aaa
cmp
leave
pusha
dec
and
out
in
jns
mov
std
push
into
or
pop
add
xor
dec
or
int3
cltd
push
aam
and
cltd
sbb
dec
push
iret
ds
aad
and
cmp
pop
cmp
mov
fisubl
cmpb
and
fsub
jae
xchg
xor
int3
mov
cmpsl
jle
adc
aam
mov
scas
inc
cmp
dec
arpl
testb
js
pushf
inc
pop
imul
mov
out
xor
aad
sti
adc
out
adc
data16
lds
mov
mov
lods
or
sub
cmp
int3
mov
mov
add
pop
xor
cmp
testb
pop
cmp
xchg
cmp
sub
push
sub
or
aas
mov
das
mov
insl
repnz
in
jmp
dec
bound
mov
jl
or
xor
mov
cmpsl
mov
dec
cmpsl
fdivs
cmpsb
adc
dec
loope
or
hlt
pop
dec
xor
mov
rolb
pusha
mov
lods
and
jecxz
cmp
fisubl
orb
or
push
pop
mov
mov
push
mov
loopne
and
adc
or
aam
cmp
cmp
mov
cmp
into
mov
lahf
popa
hlt
sub
xor
lds
lea
sahf
or
adc
mov
out
adc
dec
jecxz
dec
dec
filds
mov
fadds
iret
aaa
pop
add
sbb
mov
and
js
mov
add
add
test
mov
push
out
xchg
sti
les
xchg
mov
scas
out
mov
inc
clc
jo
push
jnp
test
inc
faddl
xchg
cmp
ljmp
std
jp
xchg
push
push
int3
lods
out
mov
push
je
fildl
sahf
fscale
popa
sbb
sbb
push
dec
mov
lahf
xchg
and
inc
pmaxsw
pop
mov
hlt
add
sub
ds
dec
jb
jmp
cli
cmpsl
sub
adc
loop
lret
cmc
fdivrl
sbb
shl
fstpl
cmp
cltd
inc
sub
cmp
push
call
incb
add
fstl
push
leave
mov
jmp
cmp
sbb
pop
push
sahf
cmp
fdivrs
popf
fidivrl
mov
gs
cmp
aam
in
or
add
ret
xchg
pop
mov
icebp
mov
aam
jmp
ja
mov
jo
mov
ljmp
adc
pop
lods
dec
or
out
push
fwait
cmp
clc
adc
nop
or
repz
pop
jmp
rcll
mov
xchg
std
dec
jp
imul
out
in
sub
sub
fnstcw
xor
scas
fstps
dec
adc
dec
in
push
cli
test
dec
inc
and
int
sahf
daa
mov
push
mov
test
mov
and
andb
add
mov
xchg
inc
jg
or
cmp
mov
mov
mov
int
ja
push
mov
cmpsl
das
and
cmp
imul
sub
inc
ss
nop
sbb
cld
fs
lret
mov
mov
xor
sbb
inc
jmp
scas
or
aam
jbe
js
popf
jp
dec
mov
mov
stos
das
mov
jnp
stos
cmpsb
fiadds
and
cmp
imul
jl
cmpb
pop
les
mov
xor
inc
jne
sub
xchg
pop
add
push
stos
xor
icebp
mov
loopne
out
sahf
mull
pop
leave
sub
push
popa
push
mov
gs
repz
xor
xor
mov
pop
sti
cmpsl
daa
arpl
test
or
in
loop
mov
jbe
out
iret
mov
xor
jmp
popa
lock
hlt
cmc
fs
fnstcw
jo
stc
fsubrl
lcall
hlt
xor
mov
rorl
mov
loop
push
fdivrl
inc
adc
cwtl
cmp
mov
sub
jl
lds
stc
mov
int3
xchg
in
push
xor
jg
sub
xor
xchg
jle
cmp
adc
enter
add
fs
pop
xchg
sub
cmp
dec
dec
mov
call
inc
roll
dec
popf
push
into
je
push
jg
data16
pop
data16
pop
cwtl
xor
vxorps
scas
inc
adc
scas
stos
sub
stc
dec
push
popf
sbbb
pop
out
stc
pusha
gs
lods
xor
dec
or
jb
dec
insb
fdivl
xchg
jg
enter
lcall
and
rclb
pop
clc
cmp
jmp
mov
jno
in
mov
lds
mov
mov
mov
jb
add
push
movsl
pop
shrl
add
push
and
xor
and
shll
push
jp
pop
xor
mov
mov
sbb
jle
jecxz
sub
addb
and
or
xorb
roll
mov
cmp
xlat
sub
mov
dec
in
insb
lcall
ss
sbb
xchg
movsl
sarl
ret
sub
mov
push
in
loopne
cli
cmp
sbb
push
ret
sbb
jno
loope
inc
imull
mov
and
rclb
mov
mov
out
out
es
cmpsl
not
ja
mov
cs
inc
pushf
shlb
mov
test
dec
or
stos
loop
fstpt
enter
rorl
cli
lds
dec
xor
shl
es
std
movsb
mov
shl
xchg
mov
iret
inc
int
loope
lcall
jo
sub
pusha
jl
dec
addr16
inc
dec
sbb
add
pop
call
add
repnz
int3
mov
outsb
in
iret
jg
test
sbb
jns
jbe
bound
mov
fisubl
jb
and
cltd
cmp
cmp
imul
pop
sbb
inc
ja
scas
loope
jnp
mov
lods
sbb
push
push
insb
enter
jno
enter
ljmp
loope
push
xor
inc
lret
mov
vmovdqa
hlt
adc
shl
inc
es
jmp
jns
adc
dec
inc
fnstcw
in
cmp
pusha
idivl
jle
out
imul
enter
rcrb
popf
adc
loopne
iret
pop
add
rorl
aam
insb
mov
es
iret
iret
jmp
jmp
xlat
fldcw
mov
add
fs
mov
fwait
sarl
adc
lret
adc
xor
dec
dec
pop
jp
push
call
int
outsl
push
in
out
add
inc
inc
and
xchg
xchg
ds
mov
popa
out
pop
repz
ss
push
mov
mov
push
add
das
aam
popa
push
stc
test
adcb
aad
cmpsl
push
stc
sahf
xor
pop
dec
mov
jecxz
lahf
fidivl
int3
push
repnz
and
mov
push
inc
push
lods
jbe
cmpsl
movsl
xchg
xor
enter
clc
jmp
in
dec
cmp
insl
insl
add
sarb
inc
adc
aas
inc
xor
popa
fs
hlt
xchg
xchg
jg
mov
adc
fiaddl
popf
or
lcall
pop
mov
fldcw
shlb
add
adc
mov
xor
enter
sti
dec
out
sbb
jo
dec
insl
add
outsl
testl
repz
lret
inc
inc
pop
js
push
jmp
lret
mov
add
aas
and
xchg
nop
aas
shll
hlt
adc
ljmp
pop
or
mov
fidivl
cs
pusha
push
stc
addb
pop
aad
adc
sub
das
pop
dec
mov
in
popf
fidivl
lret
imul
lock
and
mov
push
inc
push
lods
je
test
movsb
xchg
xor
mov
pop
mul
push
jmp
dec
cmp
imul
mov
mov
adc
inc
xlat
inc
xor
popa
arpl
xchg
test
jg
mov
adc
fadds
popf
or
fwait
xor
sub
pop
pop
mov
fldcw
into
pusha
idiv
add
lea
jg
push
push
adc
xchg
xor
cmpsl
xor
fadd
mov
out
sbb
jno
dec
outsb
add
lahf
sahf
mov
rol
push
lods
icebp
icebp
stos
inc
and
xor
pop
jbe
push
ljmp
jno
jmp
or
mov
nop
mov
mov
loopne
cmc
adc
jl
fs
or
mov
daa
mov
or
inc
fsubrl
sub
insl
pop
dec
arpl
cmpb
mov
sbbl
add
lahf
ss
and
mov
in
leave
insb
add
out
stc
nop
and
pop
scas
jb
test
int3
cmc
in
ljmp
jno
imul
es
fadds
lret
bound
pop
notb
mov
adc
pop
sahf
pop
pop
pushf
xor
sub
push
mov
fisubrl
int3
popa
clc
std
add
mov
push
adcb
push
adc
xor
les
sub
dec
outsl
push
jnp
stc
nop
popf
pushf
lea
mov
stos
inc
and
ss
inc
leave
pusha
je
push
jmp
xchg
out
mov
or
call
xchg
sub
cmp
mov
mov
fs
pop
testb
in
xorl
or
mov
sub
or
inc
xlat
outsb
pop
dec
fs
jle
cmc
mov
rclb
stos
add
mov
enter
push
js
dec
out
cltd
fdivl
insl
add
in
cli
xchg
push
sbb
jo
stos
inc
mov
ror
repz
jmp
adc
jb
addr16
nop
daa
mov
fldt
fnstcw
cs
arpl
pusha
notl
mov
adc
add
es
mov
fldt
lret
sti
testl
xorb
mov
ret
mov
call
dec
inc
outsl
push
jns
cli
xchg
pushf
lcall
out
in
stos
inc
pop
adc
into
inc
inc
leave
pusha
jb
push
in
xchg
xchg
out
lds
pushf
pop
or
mov
lea
into
gs
pop
testb
jge
pusha
push
or
mov
sub
fcom
mov
fisubrs
sub
outsb
pop
dec
gs
jge
cmc
mov
into
adc
and
xor
push
inc
mov
out
xchg
fnsave
outsb
add
sbb
lea
cmp
stos
inc
sahf
aaa
into
sarb
in
adc
call
or
push
popf
xchg
xchg
mov
or
inc
fidivrl
int
pop
pop
popa
clc
mov
xorb
or
xor
push
mov
fsubl
enter
cld
clc
sbb
lods
subb
mov
sarl
and
fnsave
jo
ja
sti
xchg
lcall
mov
jmp
inc
sbb
ds
pusha
push
in
xchg
xchg
call
or
in
popf
adc
ss
addr16
mov
mov
iret
data16
pusha
testl
sub
adc
test
xor
sarb
fildll
fsubrs
dec
data16
jnp
testb
int3
adc
std
out
mov
lret
rclb
push
call
mov
cld
xchg
sbb
mov
insb
push
inc
pushf
lea
iret
mov
fists
adc
jmp
or
pop
sahf
xchg
test
mov
or
inc
fstpt
sub
gs
pop
stc
mov
subl
or
xor
sub
xchg
movsl
cmpsl
fs
idiv
stc
nop
sub
sbbl
dec
pop
scas
jle
mov
int3
sarb
push
ljmp
jno
jne
cld
xchg
cwtl
xchg
es
ljmp
sarb
pop
push
out
vphaddbw
pop
sahf
adc
sub
xor
mov
mov
shlb
fsubs
or
out
test
sub
pop
push
or
cmpb
mov
sub
aam
mov
fbld
and
data16
jns
testl
cld
in
mov
lret
dec
inc
rclb
push
jmp
vpshufhw
out
xchg
sbb
es
cmp
mov
imul
out
fstl
push
adc
addl
or
mov
es
pop
or
cmp
into
gs
pop
arpl
mov
subl
or
xor
sub
push
push
mov
fisubs
gs
idiv
stc
nop
sub
test
dec
dec
pop
scas
jl
mov
int3
into
mov
push
ljmp
jno
jae
std
xchg
xchg
xchg
es
mov
lods
inc
sbb
cmp
cmp
lret
bound
out
mov
jbe
loope
pop
sahf
adc
xchg
sub
xor
dec
mov
push
pop
std
out
xchg
sub
pop
push
or
xor
mov
mov
loopne
and
jo
inc
addr16
js
testl
cli
in
mov
lret
dec
aas
rcrl
push
jmp
shlb
in
xchg
pop
adc
es
cmp
mov
lods
inc
cltd
mov
sarb
fcoml
or
jne,pn
pusha
popa
or
mov
es
push
push
inc
fdivl
daa
iret
pop
pop
arpl
mov
test
or
das
and
rcll
push
xorb
mov
les
cmc
idiv
nop
sub
test
dec
pop
scas
jp
mov
int3
int3
mov
push
ljmp
jno
jno
xchg
xchg
xchg
les
lods
inc
pop
or
sarb
cmp
bound
pop
lock
ja
loopne
pop
sahf
lar
mov
xchg
shrb
aam
clc
add
daa
jg
pop
dec
push
movsl
cmpb
lods
mov
mov
loope
and
jno
inc
push
cmpsb
xchg
xchg
clc
ljmp
dec
cmp
push
ljmp
jno
lock
xchg
adc
ss
gs
inc
xchg
mov
sarl
ficompl
or
cmpb
jbe
pop
pop
or
mov
daa
mov
add
inc
fnsave
push
fs
xchg
test
lret
or
cld
sti
mov
ret
mov
loopne
mov
addr16
repz
cli
xchg
es
sbb
lcall
pop
in
jmp
jmp
psraw
cmp
call
ret
mov
jecxz
inc
adc
ss
arpl
pop
icebp
mov
js
or
xor
es
test
shrl
shlb
add
icebp
mov
jle
sahf
xor
ror
mov
loop
pop
inc
imul
movsb
xchg
xchg
enter
imul
movsl
cmp
sbb
int
cmp
pop
outsb
push
jmp
loope
sarl
adc
xchg
sub
sbb
inc
xchg
xchg
sarb
fstps
or
in
cmpl
push
pop
pop
or
mov
sub
add
inc
fidivs
and
push
test
xchg
lret
sti
stc
mov
ret
dec
dec
mov
loope
lahf
fnsave
push
xchg
and
xchg
inc
inc
sbb
cltd
xchg
aaa
into
enter
in
jmp
loop
inc
cmp
insl
popa
add
shlb
inc
adc
cmp
fs
pop
repnz
jns
or
xor
mov
cmpl
mov
shrl
shll
add
icebp
mov
and
sbb
jl
lahf
ss
lret
cld
out
dec
loop
push
fdivl
inc
imul
mov
les
scas
cmc
out
cmp
pop
aaa
into
dec
cmp
pop
insb
imul
mov
loopne
xchg
adc
xchg
sub
sbb
inc
xchg
test
shlb
xlat
pop
lock
in
test
sub
pop
pop
or
scas
scas
sub
mov
add
dec
fbstp
and
push
test
xchg
enter
clc
mov
ret
dec
dec
rclb
dec
loope
sahf
fidivs
mov
cld
xchg
and
xchg
inc
inc
sbb
xchg
xchg
cmp
mov
push
in
sbb
jns
cmp
pop
add
mov
loopne
inc
adc
gs
pop
xacquire
jns
fcmovu
or
cs
mov
cmpl
push
shlb
div
mov
and
cmpsb
jp
mov
int3
leave
mov
loop
sbb
imul
mov
ret
sbb
pop
push
cmp
inc
cmp
pop
push
push
in
cltd
mov
js
mov
call
inc
xor
dec
xchg
cmpl
mov
iret
data16
pop
lock
or
test
daa
ja
pop
pop
or
mov
sub
lods
sub
fmulp
mov
decl
xor
shrb
push
data16
xorb
mov
push
movsl
clc
mulb
les
rclb
dec
loop
pushf
fidivs
mov
cld
xchg
and
mov
inc
inc
sbb
xchg
xchg
cmp
lds
push
in
pop
or
jp
cmp
pop
add
mov
fidivs
aad
xor
arpl
xrelease
adc
xlat
or
sub
mov
cmpl
aam
fs
push
repnz
and
cmpsl
jns
mov
mov
jecxz
sbb
jne
ds
jo
cld
xchg
mov
rcrl
repnz
cmp
inc
aaa
les
push
out
xchg
mov
jns
mov
add
ds
push
mov
pop
mov
xchg
cmpl
in
pop
icebp
add
out
xchg
and
or
sub
fmul
mov
std
std
dec
loopne
pop
shrl
dec
incb
mov
div
mov
lds
rcrl
dec
jecxz
lcall
out
in
std
xchg
pop
adc
mov
arpl
rol
mov
pop
call
or
jnp
ss
push
mov
mov
fdivl
xor
iret
popaw
push
pop
hlt
test
jnp
fcom
or
sub
sub
pop
dec
mov
jg
inc
fisubrs
int3
gs
std
repz
inc
adc
movsb
cwtl
das
leave
vxorps
ljmp
dec
cmp
add
std
xchg
sahf
vphaddbw
cmpsl
ds
cmp
inc
xor
pop
out
xchg
mov
jp
mov
or
or
xchg
sub
sub
mov
jg
aam
mov
push
add
xchg
and
push
push
push
movsl
mov
cs
sub
fcmove
mov
sti
sti
dec
loope
sbb
push
mov
ret
adc
and
das
movb
pop
ja
dec
in
cwtl
loopne
lret
add
jmp
xchg
sbb
ds
outsl
popa
test
xchg
nop
cmp
shll
adc
in
cmp
or
mov
and
or
inc
xlat
xor
pop
cmc
addl
adc
rorl
add
lcall
dec
mov
fildll
lret
sti
icebp
hlt
mov
sbb
adc
mov
ret
rcrl
dec
in
pop
loopne
dec
cmp
push
xchg
pushf
lea
mov
loopne
aas
adc
cmp
inc
xor
pop
bound
xchg
xchg
jnp
mov
push
out
add
cmp
and
lea
aad
scas
shrb
iret
pop
repz
icebp
mov
jp
push
push
montmul
cmpsb
xchg
cmpsb
cmpsl
sub
dec
stc
stc
dec
loop
sbb
insb
dec
dec
imul
mov
rcll
repnz
movsl
cmp
adc
movl
dec
in
xchg
loope
leave
mov
call
ds
test
rol
mov
pop
in
pop
lock
out
cmp
ja
gs
add
mov
and
or
inc
xlat
das
sub
pop
cmc
addl
or
xor
es
push
dec
mov
loopne
pushf
insl
into
lret
sti
out
hlt
mov
sbb
adc
mov
ret
ret
out
in
pop
loope
dec
cmp
push
xchg
pushf
mov
mov
fisubrs
roll
pop
arpl
icebp
xchg
test
jnp
mov
xlat
add
cmp
and
lea
aad
scas
shrl
int
repz
repnz
pop
jnp
push
push
adc
movsb
cmpsb
cs
mov
idiv
dec
jecxz
sbb
insl
dec
dec
push
jl
hlt
mov
mov
cmpsb
cmp
inc
inc
les
fs
out
xchg
loop
enter
call
or
insb
pop
stos
inc
lea
mov
fistps
adc
jle
xor
arpl
pushf
mov
mov
or
inc
fsubrs
dec
pop
idivb
lock
rorl
movsl
add
fwait
xor
and
ret
push
inc
mov
loope
lcall
stc
in
cmc
mov
sbb
stos
jno
movsl
cmp
xchg
xor
ret
rol
repz
out
adc
insl
add
push
mov
mov
fsubrl
aam
das
pop
popa
pop
pop
repnz
and
mov
jns
jecxz
add
aaa
daa
and
mov
stos
stos
aam
pop
hlt
cld
repnz
push
jl
push
push
adc
mov
les
jecxz
sbb
outsb
dec
inc
push
jns
cmc
mov
mov
cmpsb
cmp
inc
inc
les
arpl
xchg
xchg
loop
lds
add
cmp
push
mov
pop
stos
inc
mov
leave
pusha
loope
pop
icebp
or
js,pn
pusha
push
push
popf
xchg
and
mov
push
sti
inc
fldcw
shrb
dec
pusha
idivl
lock
into
push
movsl
push
pushf
xor
sub
push
ja
dec
loop
cwtl
fsubrs
lds
imul
testb
ds
outsl
insb
cmpsb
cmp
sarl
out
adc
jp
xor
add
xchg
xchg
jmp
or
aad
sub
pop
repz
jp
loope
add
add
cltd
xor
push
mov
mov
xlat
test
aad
fcmovne
pop
cmc
cli
cld
repz
sbb
adc
dec
adc
mov
ret
hlt
repz
in
push
fsubrs
inc
imul
imul
and
mov
cmpsl
ds
lds
push
call
ret
mov
push
in
add
cmp
pop
mov
pop
lods
inc
mov
lret
ficompl
or
jmp
adc
pop
sahf
test
cs
and
dec
add
inc
fisubrl
shrl
dec
popa
clc
jl
icebp
mov
int3
std
lock
xor
pop
lds
mov
jecxz
xchg
fnstenv
ret
push
cmc
jmp
mov
dec
cmp
lods
insl
push
ds
mov
lret
lds
push
call
inc
xor
fs
mov
and
or
aas
cmp
leave
pusha
pop
pop
pop
hlt
mov
jle
lods
jnp
add
xor
and
mov
xchg
fsubs
pop
idiv
cli
hlt
mov
jle
dec
dec
adc
lahf
lahf
xor
rol
mov
in
adc
jo
inc
insb
add
testl
jmp
test
sbb
pop
outsb
pop
push
jmp
shll
cltd
adc
and
mov
lret
fstp
pop
repz
jmp
adc
pop
sahf
cmpl
mov
and
dec
add
inc
fisubrl
and
popa
clc
jp
repnz
lret
adc
and
das
dec
inc
mov
in
xchg
fnstenv
ret
hlt
out
mov
push
mov
dec
cmp
aas
fwait
mov
lods
xor
sub
add
test
ss
fnsave
gs
pop
sahf
loope
shll
push
ja
cld
pop
in
icebp
add
stc
into
inc
fiadds
cld
int3
bound
in
sti
fisttps
roll
movsb
in
jno
icebp
lods
dec
xchg
xchg
stc
aam
xor
inc
sub
pop
jp
stos
stos
fnsave
test
jg
adc
lods
cld
add
and
mov
mov
sub
adc
ret
xchg
loopne
mov
hlt
or
stc
sub
out
shlb
mov
adcb
xchg
adc
jnp
data16
clc
cli
outsl
pop
sbb
mov
ljmp
in
push
ljmp
pop
das
test
cld
mov
xor
rorl
cs
fbld
or
mov
cmp
mov
lcall
mov
es
js
inc
cwtl
clc
adc
and
fwait
inc
and
or
mov
mov
jae
pop
or
sbb
add
insb
sbb
pop
leave
cltd
daa
pop
and
adc
bound
adc
cltd
hlt
stos
stos
and
xor
in
cltd
xchg
push
mov
inc
jg
mov
cs
cmpsl
loop
xchg
mov
shll
or
mov
push
out
jne
dec
popf
add
ror
mov
push
es
in
mov
cli
je
mov
popl
push
arpl
jg
push
testb
adc
inc
out
in
aaa
push
pop
sahf
push
pop
out
jne
sbb
inc
inc
scas
andl
fistpl
mov
cmpb
jnp
add
pop
mov
std
imul
sbb
inc
dec
sarb
ljmp
test
xor
in
push
iret
cld
enter
shlb
cmpsl
push
out
ret
mov
jecxz
ljmp
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
test
mov
daa
lea
repnz
mov
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
test
sbb
adc
jmp
rcrb
dec
cwtl
mov
or
in
pop
push
cmpsl
nop
outsb
jge
loope
push
scas
mov
daa
rcrl
cli
das
int
cld
inc
xor
xchg
int
fidivrs
out
and
mov
pop
xchg
mov
or
inc
dec
leave
fs
cmp
fwait
add
sbb
mov
mov
mov
cltd
sbb
in
dec
stc
mov
mov
iret
jno
sub
lds
arpl
mov
jg
mov
loope
ret
jle
dec
mov
mov
xorb
xlat
cmp
inc
stc
xor
push
cmp
movsb
push
xchg
insl
push
jno
repnz
inc
jae
xor
or
or
fsubrl
xchg
mov
pushf
push
out
adc
rclb
or
mov
mov
aaa
pop
aad
xchg
gs
dec
fsts
pusha
or
xor
push
jmp
movsl
sub
cmp
mov
fdivp
push
dec
rcl
inc
lahf
and
insb
cwtl
int
fcomps
inc
mov
lea
std
push
mov
xor
jno
push
mov
pop
sarl
push
ss
or
decb
test
jb
int
and
pop
loope
cld
ja
mov
and
and
cmp
cmpsb
xchg
sbb
pop
fwait
roll
jb
jbe
inc
adc
jmp
mov
addr16
test
pop
fsubr
sub
fwait
xor
test
jne
xor
push
mov
mov
push
inc
rorl
jmp
inc
mov
test
out
push
jl
sbb
orl
push
jg
je
adc
mov
dec
and
add
jno
call
cmp
dec
pushf
out
cli
push
insl
loope
or
mov
inc
data16
mov
xor
inc
iret
ret
add
nop
pop
cmovbe
in
pop
add
ljmp
adc
int
inc
int
xchg
aad
mov
jnp
jmp
mov
