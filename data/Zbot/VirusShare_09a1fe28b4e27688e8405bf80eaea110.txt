mov
jl
xchg
or
test
loopne
ljmp
in
cwtl
jno
sub
jmp
cmpsb
test
mov
add
in
xchg
mov
cltd
cwtl
les
pop
xchg
repz
or
ffree
leave
xchg
imul
pop
cmp
dec
cmpsb
sub
inc
pop
jns
js
sub
gs
sbb
es
movsl
jmp
sbb
loop
sbb
std
andl
leave
pop
pop
shll
cmpsb
mov
push
leave
or
stc
push
xlat
pop
mov
mov
iret
xchg
jae
test
xchg
insl
shrb
mov
test
in
mov
mov
nop
enter
mov
clc
mov
jge
dec
aaa
cmp
sbb
js
sub
es
jns
sbb
lret
pop
sbb
sbb
cmpsb
repnz
xlat
out
pusha
jp
fstpl
jmp
pop
mov
dec
inc
fbstp
sbb
movsl
std
pop
sbb
fcomp
or
fmul
addr16
mull
jl
pop
pop
inc
mov
sbb
sub
out
out
loopne
mov
push
mov
out
outsl
imul
cmp
es
and
movsl
out
pop
dec
push
nop
cmpsb
or
sbb
jae
mov
fstp
push
adc
fstps
xchg
add
outsb
push
pop
fnstcw
xlat
insl
clc
mov
popf
test
cmp
cmp
stos
or
jne
ss
addr16
ret
push
mov
xchg
das
pop
mov
jl
mov
push
cltd
xlat
xor
mov
mov
xchg
out
cltd
sarl
and
mov
das
sbb
stos
pop
mov
inc
call
cltd
pop
fstps
aaa
push
sbb
stc
in
mov
das
nop
out
xchg
pop
cwtl
jp
lods
sub
scas
fwait
loop
lret
sub
cmp
pop
and
sbb
shl
cmp
or
dec
or
iret
shll
push
dec
or
shr
dec
or
iret
shl
inc
lahf
fcompl
pop
cli
xor
mov
outsb
mov
inc
sbb
sbb
in
xchg
inc
fildl
cs
scas
xchg
mov
out
and
cwtl
lcall
enter
data16
inc
adc
mov
sub
popa
xchg
ss
mov
xchg
jge
add
sub
push
sub
jbe
sbb
xchg
and
negl
pop
xchg
cli
out
cwtl
aad
daa
adc
sbb
mov
ss
jmp
inc
sub
js
mov
mov
pop
pop
pushf
ss
jns
test
sbb
mov
pop
cmpsl
js
sbb
push
gs
xchg
clc
sbb
aad
popa
add
ja
cwtl
xor
hlt
shrb
xor
loop
test
cmp
xor
daa
std
and
sbb
frstor
in
fsubr
out
sub
into
iret
lret
sbb
xchg
sub
imul
adc
enter
adc
pop
sbb
test
in
popf
mov
mov
nop
enter
test
gs
outsl
inc
insl
rcr
lret
jnp
cwtl
test
es
sbb
pop
push
inc
pop
pop
ret
pop
cli
std
push
xor
mov
and
dec
in
sahf
jae
pusha
and
mov
sbb
dec
push
and
sbb
sbb
and
inc
and
pop
pop
popl
es
pop
push
fcmovne
adc
sbb
dec
xorb
aaa
mov
and
push
or
pusha
and
sbb
outsl
adcb
xchg
and
sbb
orb
pushl
sbb
adc
xchg
and
jecxz
xchg
adc
cmp
mov
ljmp
sbb
xor
sub
jnp
leave
xchg
sub
xor
lcall
lahf
pop
sbb
orb
decl
sbb
imul
fwait
mov
sbb
push
push
movsb
addr16
cltd
ror
popf
js
test
dec
mov
pop
inc
xor
lret
jge
and
arpl
imul
pop
sub
jno
imul
ret
pop
sbb
shr
xchg
pusha
mov
subl
call
cli
jo
jmp
and
pusha
fdivrl
loope
jp
pop
mov
sbb
push
mov
mov
mov
test
jmp
das
and
jmp
dec
fwait
jnp
bound
jnp
daa
or
add
flds
lock
jmp
push
cmpsb
lret
test
daa
push
and
jns
sbb
and
lret
push
inc
fstps
push
fstpl
daa
or
sub
jle
jnp
js
fcomp
xchg
das
sbb
sbb
push
inc
pop
cmpsb
clc
mov
sbb
adc
mov
ja
sbb
xchg
int
icebp
fnop
lret
push
and
hlt
movsb
jecxz
pop
cli
sahf
nop
pop
sub
sub
jge
push
sub
js
sub
test
jp
cltd
mov
xchg
mov
adc
cmp
mov
mov
mov
scas
mov
pusha
imul
lock
sub
pop
pop
pop
sbb
sub
xor
xlat
imul
test
cmp
sbb
mov
inc
sbb
cltd
cwtl
mov
inc
and
test
data16
sbb
sbb
mov
ss
fnstcw
and
cli
inc
sbb
sbb
mov
cwtl
pusha
sbb
cwtl
pop
pop
pushf
sbb
adc
aaa
sbb
fst
xchg
cmp
and
and
aas
fstpl
lret
ret
mov
pop
sub
push
jns
imul
push
rorb
cmp
sbb
cwtl
sahf
sbb
std
adc
pop
cmp
cltd
fwait
out
dec
push
inc
mov
test
fwait
xchg
and
data16
sbb
fnstcw
arpl
pop
xor
aaa
fistl
imul
fisubrs
mov
and
lahf
mov
sub
pushf
cs
sbbb
jnp
mov
cmpsl
cmpsb
lret
and
push
das
mov
scas
cltd
stos
and
pop
add
fildl
cltd
fisubrs
out
neg
stos
jmp
push
cmp
pop
shl
sub
inc
fsubp
fstpt
arpl
popa
push
fdivrs
out
sbb
gs
fstpt
push
imul
fcompl
sbb
stc
inc
cmp
sbb
test
inc
test
jae
sbb
mov
xchg
flds
sar
ds
xchg
std
and
xlat
and
xchg
fsubl
fisttps
sbb
jg
mov
cmpsb
fldl
pop
jno
mov
fdivrs
test
in
sar
ss
mov
xor
movb
xor
adc
lret
add
adc
ds
sub
clc
xor
lods
aam
sub
popf
sub
mov
cs
mov
xor
das
iret
lea
jb
cmpsb
push
xor
xchg
lcall
or
fst
cmp
xchg
or
xchg
jo
lcall
inc
daa
push
outsb
xchg
mov
cmpsb
insl
mov
pushf
mov
mov
pop
sbb
fucomip
mov
fstp
jp
mov
fadd
push
scas
push
push
rcrl
cmp
inc
mov
xchg
jp
mov
subb
popf
adc
das
jp
movsb
cmp
loop
daa
sub
cmp
mov
or
inc
out
adc
xchg
pusha
add
jo
dec
adc
fldcw
dec
ret
jno
das
pop
repz
mov
xor
es
sub
adc
cmpsl
sub
sub
sbb
pop
jae
cmc
adc
fs
inc
popf
lea
sarl
popa
adcb
fcmovu
xor
adc
pop
mov
dec
pusha
movsl
lock
inc
popfw
push
hlt
mov
add
jns
jl
sbbl
xor
lods
in
js
adc
mov
sahf
sub
stos
pshufw
fbld
mov
fistpll
inc
adc
clc
push
mov
rorb
cmc
leave
je
cmp
cmp
push
movsb
arpl
pop
jge
xor
sarb
and
cmpsl
jnp
jnp
enter
pop
inc
sbb
insb
pop
test
pop
cmpb
lods
fdivs
sbb
or
subl
push
push
bound
dec
clc
les
test
movsb
cld
push
aaa
mov
push
pop
fsts
movsl
out
xchg
sbb
push
xchg
xchg
jo
cld
push
sub
pop
xchg
out
add
aam
gs
shrl
outsl
fisubrl
cmc
jo
jge
mov
pushf
xchg
sbb
lock
test
jge
sbb
cwtl
das
add
jbe
outsl
cmp
popl
pop
sub
decl
push
inc
sub
jno
pop
pushf
xor
jae
xor
out
sahf
lods
rorl
xchg
mov
mov
sbb
add
js
push
mov
add
std
mov
call
push
pop
adc
adc
enter
out
pop
sub
mov
call
mov
sub
lock
imull
push
lahf
inc
mov
aas
mov
test
int3
int
fidivrs
and
mov
icebp
sub
cltd
bound
xchg
sbb
shr
xchg
adc
mov
ja
mov
rcll
jg
setbe
xor
xlat
pop
loop
mov
sub
pop
out
dec
ljmp
shr
xchg
xor
int3
sub
sarb
aas
mov
xchg
pop
or
push
cli
and
sbb
mov
out
adc
mov
mov
popf
jmp
mov
outsl
mov
adc
mov
push
xchg
pop
and
adc
xor
dec
dec
or
sbb
imull
aam
shlb
cmp
add
popa
mov
scas
cmp
call
outsb
xchg
pop
inc
movsb
cmp
je
cmp
dec
adc
mov
and
cwtl
fldcw
movsl
rclb
jbe
sub
xor
or
aad
arpl
pop
sbb
mov
das
fdivrl
popf
mov
xor
xor
xchg
fisttps
out
mov
fs
outsb
jb
xchg
adc
stos
jp
jb
jmp
loop
push
outsb
add
fwait
leave
leave
ljmp
mov
sub
add
std
mov
aad
aam
leave
movsl
xchg
js
lea
mov
pop
lahf
mov
mov
jns
dec
cmp
cld
insb
pop
sub
in
andl
add
cmp
mov
cmp
jge
xor
ja
shll
cmp
push
scas
pusha
xlat
add
clc
adc
dec
ljmp
movsb
and
add
inc
test
ja
cltd
jo
push
out
shll
scas
xchg
out
or
mov
out
or
movsb
stos
jno
outsl
repnz
js
cmpsl
add
dec
enter
cld
dec
jne
mov
push
ret
cmp
out
cmp
xor
sub
push
push
inc
sti
jne
add
sbb
cs
std
mov
or
push
mov
punpckhdq
shll
repz
lret
sbb
std
flds
scas
pushf
add
fs
or
sub
jbe
imul
sar
and
mov
pop
mov
jb
push
movsl
roll
out
push
cmc
mov
int3
sub
push
std
cli
out
pop
xchg
sbb
pop
and
leave
imul
subb
mov
sub
adc
jmp
pop
stos
push
push
js
pushf
fs
psubw
jbe
sub
test
nop
sbb
int
test
push
sub
pop
add
pcmpeqd
push
xchg
sbb
xorl
cltd
clc
fadds
pop
in
inc
and
jl
fdivr
fstpl
mov
add
mov
int3
jno
iret
loop
notb
xorl
imul
ret
jns
xchg
xchg
idivb
push
push
pop
stc
out
pop
fimuls
sub
cmpsl
pop
repnz
pushf
popf
icebp
push
mov
and
movsb
xchg
in
and
stc
pop
ja
mov
clc
or
sub
jbe
push
test
ficomps
xchg
aaa
outsl
adc
gs
adc
popa
iret
pop
xchg
jne
and
cmp
and
out
aam
push
lock
sub
cltd
jbe
repnz
xor
int
inc
sbb
bound
or
xor
mov
pop
pop
pushf
or
dec
add
sbbb
lret
jb
imul
push
pop
sbb
dec
testl
out
and
data16
sbb
xchg
mov
xchg
push
pop
lahf
inc
arpl
xchg
stc
cs
cmpsb
cld
jg
push
mov
jns
sbb
xchg
stos
repnz
xchg
jp
mov
imul
cmp
iret
or
xchg
mov
scas
xor
cltd
sbb
lahf
push
cltd
shrl
and
cmpsl
xlat
push
add
dec
xchg
xor
imul
jg
les
inc
cmp
mov
or
fcmovnb
sbb
das
push
insl
sbb
repz
setg
dec
sub
fnstcw
xlat
push
imul
push
cmp
jl
jg
sbb
inc
cmpsb
adc
scas
xchg
int
mov
sbb
cli
cmpsb
add
test
fadds
push
mov
sub
sahf
repnz
jbe
push
scas
fstpt
push
pop
xchg
sbb
push
daa
or
stc
adc
es
stc
xchg
sub
inc
cmovs
cmp
js
popa
mov
add
sbb
add
lods
icebp
mov
jnp
into
iret
push
cltd
jb
push
jg
loop
push
sbb
bndstx
cltd
gs
dec
xchg
shl
cli
sbb
mov
leave
sbb
xlat
hlt
xchg
sub
or
xchg
shrl
roll
cs
lcall
sbb
xchg
xlat
xchg
pop
stc
ljmp
iret
mov
jne
fsubrs
fwait
mov
lock
pop
jge
sbb
cmp
push
adc
popa
aaa
mov
add
loop
jecxz
mov
xor
mov
cmpsb
addr16
pop
sbb
repz
out
ja
dec
popf
xchg
imulb
aam
sub
and
std
jg
fdivrs
jnp
les
ds
pusha
fs
mov
and
push
mov
iret
iret
loopne
dec
or
add
les
mov
sub
hlt
jle
jbe
mov
fs
out
ret
mov
outsb
xorb
mov
cmp
mov
mulb
rcl
lahf
cmp
cs
push
hlt
mov
and
hlt
std
movsb
dec
jo
test
fstp
testb
fimuls
push
hlt
lock
lret
xor
lods
lcall
lea
pop
cmp
clc
stos
ja
mov
xor
jp
mov
lcall
jns
push
and
imul
outsl
mov
nop
inc
lods
scas
data16
xor
inc
inc
add
outsb
imul
pop
sbb
ds
fiaddl
addr16
xor
jmp
mov
mov
js
sub
das
lcall
and
outsl
inc
ja
and
lods
push
mov
lcall
daa
jae
sbbl
shr
std
sub
std
fstps
or
sub
push
jle
jns
mov
lods
in
mov
sahf
lods
sub
nop
cli
mulb
dec
fdivrs
movntq
xchg
rclb
ss
inc
daa
insb
rcrl
test
js
mov
mov
xchg
push
jle
cmp
adc
ss
inc
into
mov
mov
jne
sub
xor
das
ljmp
negl
ret
cmp
popa
arpl
cwtl
addr16
mov
fnsave
xchg
icebp
std
jge
push
mov
test
mov
data16
sahf
scas
ds
mov
aaa
ljmp
js
xor
xor
xchg
ja
nop
imul
xlat
sbb
scas
mov
insb
cltd
jno
mov
and
fsubr
xchg
push
arpl
sub
inc
xor
notl
cmp
and
std
xorl
test
push
out
dec
ljmp
test
sbb
sbb
cli
mov
or
daa
inc
dec
cmpsb
sbb
add
inc
inc
sbb
leave
sahf
sub
iret
inc
popa
mov
bound
and
cmpl
loope
cmc
popf
sbb
pop
es
scas
pop
push
xor
dec
push
push
inc
mov
push
sub
jle
mov
in
inc
sbb
and
mov
adc
outsl
dec
out
adcl
stc
lods
cmc
je
pop
in
daa
das
pop
jl
lcall
scas
add
mov
and
inc
imul
push
jmp
fadd
dec
sub
insb
xor
inc
cmp
and
mov
push
cld
push
jl
aaa
lods
es
and
in
aas
enter
scas
mov
in
cwtl
enter
pop
subl
dec
cwtl
xor
jns
mov
push
aad
insb
mov
orb
inc
daa
xlat
push
stos
push
pushf
push
decl
lds
subb
fistl
xor
and
popf
enter
mov
lret
iret
lahf
sbb
aas
sub
imul
dec
push
dec
jmp
fisubl
inc
stos
scas
imul
mov
cwtl
test
sub
push
cmp
loope
fxch
adc
stos
sbb
jge
shlb
imul
outsb
insl
lods
ret
movsl
xchg
out
movsb
sub
js
outsl
mov
mov
lcall
ret
push
negb
lock
fmuls
push
and
mov
cltd
leave
lods
add
mov
dec
xchg
mov
in
in
and
mov
add
mov
sbb
test
adc
adc
pop
pop
arpl
dec
pop
shll
cmp
cltd
xchg
xchg
sti
inc
sbb
ljmp
gs
push
es
test
sahf
lods
push
popf
xchg
or
ret
or
sbb
cmp
push
test
mov
mov
push
out
mov
outsl
sbb
inc
cltd
aam
cmpsl
ss
ja
out
jns
iret
sbb
rorl
sub
inc
fcom
sub
or
and
lahf
push
pop
mov
sbb
xchg
push
and
jecxz
imul
push
cltd
xchg
jecxz
and
test
sbb
imul
xchg
popf
jmp
dec
bound
jae
jb
pusha
mov
jno
adc
and
mov
fdivs
lahf
aad
aad
pop
push
insl
sbbl
xchg
clc
jl
movsb
add
js
fnstsw
daa
sbb
mov
aad
mov
bsf
xchg
repnz
daa
mov
aad
ja
and
cmc
dec
xchg
repnz
gs
or
sbb
adc
ja
add
test
jo
sbb
lea
push
or
shll
cltd
push
xchg
jo
dec
lds
and
int
lcall
mov
xchg
out
push
xchg
mov
dec
je
fstpl
push
mov
aad
iret
addr16
mov
ljmp
repz
sbb
push
imul
cmp
cltd
test
movsl
jno
sbb
pop
dec
inc
mov
xor
adc
pop
loop
mov
adc
fcom
out
xor
in
inc
jb
sub
xchg
xchg
popa
fistps
ss
iret
xchg
incb
daa
std
mov
mov
xor
mov
mov
cmp
sub
inc
repz
or
test
out
insb
cwtl
bnd
lcall
lds
jae
sbb
mov
test
nop
jns
mov
cmp
sub
mov
pushf
rcr
test
xor
sti
pop
es
mov
or
sbb
sbb
xchg
popa
sahf
data16
push
imul
jne
xchg
stos
hlt
fwait
cwtl
repnz
pop
mov
nop
sbb
jge
hlt
scas
jge
cmpsb
fwait
push
cmp
adc
cmpsb
js
lods
xor
xor
les
push
mov
cmpsl
xor
xchg
daa
jge
aam
and
je
inc
xor
sub
or
sbb
pop
data16
repz
xor
mov
cmp
mov
call
daa
in
fst
adc
sti
mov
xor
pusha
out
dec
sbb
jo
mov
xchg
gs
jb
push
jb
xor
mov
stc
cmp
dec
mov
out
pop
push
idivl
cli
xchg
inc
fsubs
sarb
hlt
jnp
jg
jle
idiv
lods
sbb
iret
sbb
lret
mov
dec
gs
hlt
repnz
test
nop
sub
mov
stos
inc
ss
ret
jns
dec
adc
mov
cmp
lock
std
test
mov
jl
in
dec
mov
js
jne
fbld
pop
jmp
cmp
in
test
mov
aaa
jmp
push
pop
mov
xchg
iret
adc
mov
pop
cmp
out
negb
mov
sbb
lods
jge
sub
jbe
jge
lret
bound
add
sbb
mov
push
std
test
fs
fistl
sbb
add
jnp
aad
sub
je
mov
icebp
lods
movsb
adc
inc
mov
mov
inc
loop
cmp
jmp
jg
xchg
aam
outsl
movl
fcom
jmp
adc
sub
das
fnsave
pop
jb
mov
pusha
movsb
gs
shll
pop
push
adc
pop
ret
sub
imul
mov
iret
int3
call
mov
gs
jl
sub
into
fistl
arpl
ficompl
add
xchg
cmp
xor
or
sbb
in
out
outsl
jns
negl
jb
out
rcl
icebp
imul
sar
push
xchg
lods
dec
lods
xchg
pop
addr16
sbb
pop
mov
jl
xor
cltd
test
popf
or
cmp
push
and
jne,pn
out
jp
dec
dec
aam
ror
outsl
push
add
arpl
or
sub
xchg
cmp
addr16
pop
jmp
sub
scas
rcll
cmpsl
xchg
nop
leave
call
jl
daa
mov
mov
push
push
sub
and
mov
fnstcw
pop
nop
adc
mov
xor
je
je
clc
xor
cwtl
ss
fisubl
mov
and
int3
std
cmp
loope
pop
xor
xchg
sbb
sahf
testb
jmp
adc
ss
pop
lods
int
mov
es
cwtl
jl
pop
pop
mov
and
cs
div
dec
aaa
cwtl
or
mov
inc
jg
rcll
sub
movsb
jle,pt
cwtl
jge
nop
push
in
fdivrs
inc
mov
or
add
or
mov
push
mov
aaa
ret
lea
xchg
pop
dec
scas
movsb
dec
imul
sub
fnstsw
std
pop
aam
clc
cmp
je
fs
dec
sub
js
enter
clc
xor
mov
pop
xor
fisubl
popf
sbb
stos
and
bound
imul
lods
sbb
jp
addr16
sti
xor
es
xchg
xchg
xchg
cmpsl
les
ss
jbe
push
cmp
mov
xchg
gs
ds
popa
pop
insl
dec
jp
repz
cmpsl
sbb
pusha
adc
cmp
pop
movsl
cltd
outsb
fldenv
adc
push
sub
in
add
out
and
xor
jge
lret
lret
add
sub
out
cmpb
out
mov
cltd
repz
mov
movsl
and
lcall
aam
fwait
push
mov
icebp
jmp
sub
rcll
or
jg
xor
pop
mov
movsl
adc
adcb
cmp
and
in
icebp
push
sbb
lret
iret
ja
icebp
sbb
scas
fdivrs
lods
les
pop
sub
inc
insl
mov
push
add
lds
andl
xor
fmull
lods
je
filds
popa
subb
mov
stos
loope
jns
loop
inc
jnp
jne
mov
jl
test
cmc
mov
lods
sbb
orl
xchg
mov
and
popf
xchg
push
jecxz
mov
jns
in
jle
mov
xor
sub
sub
cltd
daa
push
mov
ret
test
cltd
leave
sub
jns
pop
pop
xor
lcall
sub
pop
adc
outsl
push
push
ja
loope
js
push
rorl
arpl
add
or
and
adc
mov
les
hlt
pop
add
mov
cmp
mov
pop
jle
xor
divl
jnp
rcl
cs
lea
adcb
lret
pop
div
jl
and
into
push
xchg
out
outsb
sbb
adc
mov
push
xor
int
mov
pandn
mov
adc
test
jns
or
xchg
movsb
and
das
mov
je
cmp
dec
or
and
in
popa
sub
loopne
cltd
push
cs
call
addr16
pop
mov
dec
mov
cmp
scas
jg
repz
dec
lret
cld
data16
mov
dec
gs
mov
or
out
fldcw
fnsave
lcall
pop
rcrb
mov
inc
dec
mov
xor
jbe
mov
int3
inc
clc
stos
mov
pop
jo
push
cwtl
xchg
aas
sahf
xor
ror
js
inc
mov
ss
movsl
les
clc
push
imul
clc
xchg
pop
mov
mov
and
jp
jge,pn
test
ficoms
mov
popf
int3
and
xor
pop
push
sub
cmp
roll
insl
cmp
orb
fnstcw
nop
imul
xor
cs
mov
mov
adc
stos
shrl
outsl
sub
pushf
lahf
fdivs
scas
pop
sub
lea
out
test
and
push
fs
mov
arpl
push
fsubs
sbb
cmp
jge
and
cltd
repz
movsl
mov
in
and
mov
lods
and
loopne
push
xor
and
int3
neg
push
and
pushl
sub
daa
jge
cmp
pop
sarb
cmp
and
test
cmp
pop
mov
mov
cmp
aam
mov
mov
inc
fcoms
jno
xor
inc
push
ja
sbb
mov
push
fucomp
mov
loopne
lock
push
ja
jbe
scas
cmp
fidivl
ror
cmp
adc
dec
stos
cmpb
inc
int3
mov
addr16
mov
jbe
ss
mov
mov
cwtl
lock
sahf
ljmp
lahf
and
xchg
push
sub
aaa
or
mov
repz
data16
sahf
jmp
leave
movsl
sbb
scas
sub
iret
and
push
gs
movsl
out
and
push
push
push
jp
in
adcb
imul
std
das
push
aas
mull
fidivrl
cmp
fidivrs
mov
scas
aad
pushf
push
stos
sbb
fldl
fstpl
inc
adc
sbb
in
out
rorb
fdivl
clc
aaa
push
mov
ss
scas
xchg
mov
cli
icebp
pop
ss
loop
and
cld
inc
leave
call
std
pop
dec
daa
cmp
jne
lock
push
adcb
imul
es
add
pop
popf
sahf
out
in
xchg
jae
fnstcw
cmp
push
dec
imul
bound
lcall
adcl
mov
ss
aaa
push
push
out
sbb
out
mov
icebp
fcompl
sbb
ja
aas
outsl
push
mov
mov
xchg
lds
pop
cmp
clc
fisubl
imul
adc
mov
sbb
push
outsl
or
cmp
lret
jl
cmp
int
mov
sbb
in
jno
cmpsb
ja
adc
xchg
jno
lret
lret
cmpsl
std
xchg
mov
das
mov
jp
xor
ja
mov
dec
sbb
mov
and
aaa
sbb
push
insb
pop
outsl
pop
shrl
push
add
pop
mov
test
hlt
xchg
xor
push
push
adc
inc
out
js
dec
mov
jne
ds
daa
cmp
mov
push
in
mov
xchg
mov
ja
mov
je
repnz
fldcw
aad
daa
das
mov
push
and
lret
jecxz
mov
ret
cs
sub
inc
insl
jmp
daa
mov
dec
add
mov
fwait
idivb
out
das
enter
cmp
inc
push
adc
popa
in
sbb
nop
imull
test
or
cld
pusha
sbb
sbb
insb
inc
sbb
mov
xor
cmp
cwtl
lods
lea
dec
and
sub
push
std
xor
jle
lods
cwtl
cmpsl
iret
cmc
sub
js
inc
mov
inc
mov
ss
outsb
leave
pop
cmp
sbb
inc
das
mov
or
insl
xor
out
push
ret
pusha
xor
or
add
jbe
int
das
sub
sbb
jg
stc
ja
pusha
loope
aas
pusha
cmc
sbb
movsb
push
arpl
enter
fidivl
lock
pop
pop
jmp
fs
mov
lahf
lcall
dec
jne
sbb
jl
mov
adc
adc
pop
mov
negl
sub
pop
movsl
sti
and
mov
cwtl
inc
sbb
sbb
push
mov
les
subl
sbb
sub
ss
sahf
imul
ror
enter
popl
sub
jnp
inc
pop
dec
inc
fimull
fistps
xchg
scas
adc
fldl
lods
or
and
idivb
and
pop
lock
hlt
or
popf
fiadds
pop
mov
movsb
jmp
mov
mov
divl
mov
xor
mov
cmpsb
repz
fdivl
sahf
or
js
mov
xor
sti
je
mov
dec
dec
jbe
or
push
sbb
popl
or
pop
in
jne
loope
xor
insb
mov
mov
sti
add
mov
mov
and
clc
and
lods
roll
adc
jb
and
mov
in
cmp
mov
cwtl
sbb
cmp
mov
and
in
popa
push
adc
cwtl
cmp
dec
flds
cltd
mov
add
xor
sarb
mov
popfw
xchg
mov
test
inc
ret
cmp
sub
bound
mov
jne
dec
push
inc
mov
lock
adc
nop
stos
imul
stos
cmpsb
cmp
call
mov
jns
and
cmpsb
xor
add
push
sarb
cwtl
scas
jnp
cmp
push
cwtl
push
hlt
mov
inc
int3
inc
jle
mov
outsl
inc
rcrb
xchg
mov
fsts
or
insl
jb
pusha
sarl
aas
movsl
stos
shlb
sbb
xlat
call
jb
frstpm(287
push
xchg
or
fldz
sub
or
std
lret
enter
mul
dec
or
push
or
push
stc
stos
xchg
or
ss
stos
fimuls
repnz
cs
lahf
aam
pop
aas
xorb
sbb
addb
movsl
imul
cmpsb
sub
mov
sbb
dec
jp
sbb
and
es
lods
adc
or
les
pop
pop
cmp
and
bound
stos
das
fcoms
lret
sub
sub
jge
inc
xchg
clc
negl
call
jl
popa
or
sub
jmp
sub
lcallw
sbb
pop
sub
sub
iret
rol
cmp
mov
cltd
and
push
loopne
orl
stc
aas
inc
jl
shll
pop
jb
xor
pop
jle
dec
test
scas
cld
mov
ljmp
and
mov
setp
mov
imul
mov
enter
push
mov
cmc
xchg
pushf
jns
cmp
and
xchg
adcb
xor
sbb
mov
push
and
push
cmp
jno
cltd
inc
inc
mov
fiaddl
mov
cli
mov
fsubl
pusha
mov
mov
or
xchg
decb
iret
clc
shlb
aas
push
mov
sub
cmp
or
inc
je
xor
pop
out
dec
insl
adc
ficomps
push
mov
or
std
xchg
inc
rcll
insl
jns
arpl
xor
jp
loope
mov
push
ss
js
and
xchg
jbe
js
aam
pop
xchg
jle
mov
lahf
push
push
jecxz
and
sub
movsb
insl
cltd
cs
in
adc
inc
dec
out
sbb
xorl
lahf
or
push
mov
ds
scas
pop
mov
mov
ret
or
scas
aad
and
fwait
sbb
cwtl
jmp
or
cmp
lods
pop
lods
icebp
lahf
dec
jne
movsb
push
js
mov
aam
es
ret
leave
jb
jbe
clc
movsb
adc
sbb
out
cmp
pusha
iret
sub
mov
dec
movsb
inc
lods
jnp
and
fcom
or
scas
sub
shrl
or
int
dec
add
push
in
cbtw
dec
and
popf
cmp
and
mov
shl
add
cmpsb
push
sti
jae
xor
nop
dec
and
jns
push
push
test
sbb
add
sub
cmc
aam
or
cmp
cmp
adc
xor
xor
mov
dec
stos
xor
dec
stos
call
enter
inc
das
sahf
je
sbb
sbb
outsl
push
add
sti
fistpll
xchg
jne
int3
mov
fisttps
out
push
enter
xchg
lods
hlt
push
cmp
xchg
adc
jle
cmpl
add
or
or
cmp
scas
adc
insb
pop
push
loop
loopne
movsl
xchg
std
stos
inc
push
popa
adcl
mov
sbb
cmp
sub
pop
jl
loope
int
cmp
fsts
imulb
lret
arpl
hlt
sbb
and
sub
ljmp
cltd
cmc
pop
ljmp
sbb
inc
lods
adc
mov
ret
pop
insl
je
cwtl
inc
mov
push
inc
in
add
cmpsb
xlat
mov
push
clc
in
sub
ss
in
into
push
fwait
xor
loop
lods
push
and
push
lcall
adc
ror
scas
inc
jne
aad
cwtl
sub
cwtl
fimull
pop
jmp
cwtl
xor
add
adc
stc
pop
or
cmp
ds
and
mov
mov
mov
pop
xchg
push
out
dec
clc
insb
cmpsl
pop
test
sbb
mov
mov
cmp
push
jl
pushl
jns
jbe
and
adc
dec
and
xchg
or
nop
stos
xor
roll
mov
add
or
test
rorb
stos
ljmp
sbb
in
pusha
iret
test
daa
add
jle
dec
sub
mov
push
outsb
mov
nop
mov
and
js
push
cmp
jbe
test
insl
filds
lahf
adc
mov
xchg
popf
dec
test
fst
dec
movsb
gs
or
aaa
imul
jns
pop
out
mov
mov
lret
das
fnsave
in
cmp
fcom
jnp
hlt
inc
push
imul
adc
jb
ja
out
cmp
sbb
ss
insl
and
and
in
add
push
fcompl
jmp
mov
int3
fwait
scas
sbb
rcr
fwait
in
les
lahf
lret
or
les
fimull
stc
fcoms
ss
sbb
push
push
lret
inc
sbb
sub
insl
test
mov
ds
cmpsb
leave
push
shrl
outsb
pop
sbb
iret
leave
sbb
push
dec
dec
inc
jl
pop
jo
fildll
or
xor
aam
dec
push
fidivrs
hlt
jecxz
and
cmp
dec
xchg
xchg
jns
dec
gs
jb
xchg
jp
jo
outsb
mov
jmp
add
sub
mov
jnp
mov
and
gs
sbb
mov
imul
sbb
fldl
sub
adc
lret
add
and
mov
mov
mov
das
or
mov
ja
enter
mov
xchg
es
out
fdivl
mov
xor
iret
movsb
out
stc
rcrb
adc
xor
cs
push
sbb
and
cmp
shlb
jns
push
pop
pop
mov
popf
stos
mov
mov
or
jmp
lods
xlat
mov
cmp
roll
addr16
ror
out
iret
inc
xchg
les
pop
out
dec
movsb
add
pop
popf
hlt
fwait
xchg
out
adc
fld
mov
aaa
jge
xlat
mov
push
mov
shlb
jbe
or
cmp
mov
aaa
inc
mov
ss
addr16
push
pop
jb
xchg
xor
pop
xchg
mov
test
pop
sbb
rolb
sub
sub
shrb
fistpl
dec
jp
jns
jle
out
outsl
dec
iret
data16
dec
dec
pop
cmp
add
in
sub
pop
inc
mov
cmp
mov
repnz
push
cmp
jle
cmp
jle
pop
sbb
lods
addr16
jl
push
call
cmc
pop
xchg
push
stos
xchg
push
inc
jbe
xchg
mov
gs
stc
pop
xchg
insl
test
push
dec
jns
mov
mov
scas
add
mov
xor
test
cmp
cmp
pop
adc
int3
popf
fsubs
fucomp
mov
cwtl
push
loop
imull
cmp
imul
test
push
push
add
sbb
or
repnz
xor
icebp
scas
fdivr
sbb
lahf
xchg
xchg
test
xor
ja
xor
inc
pop
pop
data16
xchg
stos
jmp
clc
or
mov
out
inc
sbb
mov
mov
pop
cmp
and
pop
jne
adc
mov
pusha
stc
cmpsb
rorb
stos
fstpl
popf
cmp
orl
pop
pop
mov
sbb
cmp
dec
xchg
ds
inc
add
push
jmp
jno
add
stos
fdivrl
fldt
mov
fdivrs
mov
jmp
lahf
lret
cli
mov
icebp
dec
cmpsl
cltd
sub
loopne
xor
inc
bound
pop
outsb
xlat
xchg
std
sbb
lods
scas
jns
out
jl
add
pop
pop
into
adc
imul
bound
and
cmp
mov
das
mov
aam
dec
pop
ficoms
fdivrs
pop
fucomp
arpl
sbb
lods
mov
adc
fs
jns
iret
sub
mov
fs
pop
jnp
mov
adc
outsl
cmpl
mov
sbb
add
jge
ja
pop
sbb
cld
popa
cmp
loopne
sub
dec
add
test
ljmp
out
in
and
aad
cmp
fwait
adc
imul
shl
lods
cs
mov
imul
unpckhps
push
lret
mov
mov
push
sbb
scas
dec
leave
jg
aad
lcall
mov
mov
push
test
mov
lret
add
mov
jae
xor
xor
aaa
daa
fcomps
xlat
pop
dec
roll
setle
fstl
mov
adc
pop
nop
xor
mov
loop
cmc
sub
es
adc
cmp
dec
xor
stos
andl
sbb
cmp
scas
jne
sbb
xor
outsl
add
adcl
sub
sbb
lret
jns
adc
in
mov
rclb
mov
mov
in
imul
out
pop
mul
loop
loop
sti
xchg
cld
mov
push
shrb
outsb
sbb
xchg
mov
xor
daa
fnsave
or
mov
insb
ljmp
hlt
jnp
push
mov
jns
push
aas
push
scas
cmc
repz
push
ret
dec
dec
dec
jbe
add
sub
movsb
dec
hlt
sbb
ja
gs
aam
test
mov
and
and
inc
fnstcw
cmp
and
and
daa
cwtl
scas
mov
pop
stc
jb
adc
movsl
stos
mov
lcall
pop
cmp
mov
leave
cmp
fwait
gs
sub
push
xor
mov
or
add
push
cwtl
xlat
xchg
cmpsb
scas
movsl
bound
and
mov
cmc
pop
lahf
and
into
jp
pop
cltd
push
jle
xor
sub
das
or
out
mov
hlt
fdivl
sub
fbld
iret
in
xchg
clc
sbb
test
cmp
pop
mov
gs
jno
mov
jg,pn
mov
sub
mov
push
mov
mov
daa
mov
xor
dec
mov
mov
loope
adc
dec
xlat
insb
das
movsb
or
fwait
movl
sbb
and
fidivrs
clc
xor
push
int
push
inc
xchg
jl
mov
jno
pop
fimull
jecxz
dec
push
fcmovnu
fcomps
lcall
adc
fwait
xor
sbb
jmp
inc
mov
jmp
jge
mov
mov
mov
jae
sbb
cmp
pop
ret
and
shlb
pop
mov
inc
sub
pop
rcll
insb
cmp
scas
aas
je
es
das
cmp
ds
xchg
repz
add
jbe
cmc
pushf
out
xchg
push
or
popa
push
push
xlat
fistpll
mov
dec
in
mov
dec
subl
aas
dec
dec
mov
out
sbb
jg
daa
out
or
inc
dec
or
pop
sbb
fildll
addr16
je
jmp
mov
stc
loop
outsl
mov
in
call
push
std
mov
in
clc
cmp
push
push
in
and
and
mov
repnz
iret
pop
lahf
cld
xor
outsl
pusha
jge
push
cmp
pushf
in
aam
imul
insb
mov
xchg
stos
xchg
push
inc
pop
loopne
in
jge
pop
sbb
out
mov
adc
lock
sub
dec
cs
imul
xchg
clc
movsb
sub
fmuls
hlt
xchg
js
push
jns
or
mov
mov
inc
cmpsb
mov
xor
sub
jae
sbb
sbb
adc
jmp
inc
enter
stc
and
sbb
mov
test
test
leave
xchg
sub
cmp
inc
aad
mov
xor
or
fnstsw
and
pop
inc
orl
out
mov
mov
addl
push
push
jge
out
xor
dec
jge
xor
rcrb
rclb
mov
fldt
aad
cld
orb
movsl
mov
imul
mov
pop
stos
out
dec
lahf
mov
movsl
and
xchg
xor
cld
movsb
xchg
aaa
cmp
sub
dec
cmp
sub
mov
pop
into
loopne
jb
popf
cwtl
mov
nop
mov
sahf
shrl
push
sub
mov
add
add
iret
movsb
imul
inc
loop
fildll
fstl
inc
fidivrs
dec
sbb
shrb
and
hlt
xchg
xor
addb
inc
shrb
cld
jmp
lret
fldcw
mov
outsb
scas
inc
insl
mov
iret
jbe
pop
stc
aad
and
repnz
daa
lret
sbb
out
scas
xchg
fists
xor
scas
int
cmpsb
les
out
lods
add
repnz
cltd
inc
jae
sub
dec
pop
and
and
xor
and
shlb
xlat
xor
lret
xchg
bound
and
sbb
and
cwtl
stc
cs
arpl
rolb
xor
mov
nop
rorl
add
je
cmp
dec
mov
push
inc
mov
mov
sbb
imul
sub
xchg
mov
xchg
inc
xor
adc
push
inc
xor
push
cmp
es
inc
cwtl
inc
out
cmpb
lcall
cmp
testl
mov
xor
addl
xchg
imul
call
pop
cmp
jns
repnz
jo
add
adc
mov
bound
pushf
sbb
hlt
xor
lea
mov
sub
lock
movsl
aam
insb
iret
push
pop
lock
les
push
stos
or
jns
ja
das
sub
in
rcrl
ds
out
scas
lods
aam
fsub
mov
xchg
je
mov
in
sub
and
sub
cli
nop
push
fisttpl
outsl
cmp
aam
test
enter
dec
inc
sbb
jns
xchg
gs
dec
cs
dec
inc
mulb
sbb
or
sub
sub
cmp
stc
add
jbe
mov
mov
iret
mov
pusha
xor
sbb
add
mov
mov
std
pop
shlb
jmp
cmp
sbb
mov
mov
lods
lahf
adcb
adcb
les
xchg
lahf
outsl
lods
jle
cmp
imul
daa
lods
and
fsin
stos
shlb
jae
dec
sub
cmp
aaa
pop
jecxz
pushf
insb
mov
pop
popf
sbb
dec
fsubr
mov
daa
cld
xchg
rclb
out
mov
cmp
cmp
jmp
int
sbb
aad
sub
mov
in
jne
mov
and
scas
fstpl
aad
imul
or
stos
dec
xchg
iret
add
test
out
ja
outsl
dec
pop
dec
aas
aas
aaa
jae
inc
dec
in
fimuls
fstpt
xor
stos
mov
hlt
or
mov
cmp
loop
jns
mov
ds
cwtl
lahf
enter
stc
add
scas
out
fdivrp
pop
fldt
lods
add
jmp
fidivrl
fisubrl
cmp
cmp
clc
jne
leave
rcr
pushf
fdivr
mov
mov
and
roll
sbb
cmp
mov
push
mov
pop
xor
or
adc
test
xchg
xchg
pop
push
lcall
adc
testl
aad
fcoms
mov
test
hlt
dec
push
sbb
mov
sub
pop
add
mov
dec
mov
movsl
mov
ret
data16
push
aad
sarb
xchg
iret
data16
lcall
fldcw
mov
push
test
mov
pop
and
jp
sub
cmp
sbb
out
subl
jl
cltd
dec
in
cmpsb
mov
aaa
fnsave
pop
pop
test
loope
and
imul
cld
push
rcrb
mov
jl
out
fs
cmpsl
scas
fcompl
mov
sub
fwait
test
fdivs
pushf
push
fstps
pop
bnd
mov
fdivl
cmc
into
mov
cmp
enter
mov
mov
sbb
xchg
xor
sub
sub
rcll
sti
xchg
sbb
es
pop
sub
leave
mov
movsl
test
lret
jb
or
lods
mov
movsl
cmp
push
movsb
or
or
mov
frstor
jl
aam
adc
test
shl
sbb
or
mov
mov
lods
ljmp
sbb
imul
scas
pop
fsubrs
mov
or
fnstsw
mov
insb
or
adc
inc
cmc
sti
push
dec
cmp
sub
andl
pop
aaa
cmp
cmpsl
xlat
mov
cli
jmp
dec
pop
iret
out
xchg
mov
mov
notb
cs
popf
jne
fadds
loop
cmp
or
mov
xor
push
sbb
imul
ss
xor
fwait
sbb
in
or
cmp
pushf
sbbb
xor
cmp
icebp
pop
std
jbe
test
push
xchg
pop
add
cltd
add
popf
lahf
mov
pop
cwtl
push
loopne
sbb
movsl
in
rclb
and
loop
cmpsl
or
push
outsl
push
les
fdivl
adc
cmpsl
add
push
jge
loope
cmpsl
cmp
outsl
mov
shll
int
adcl
xlat
fisubl
inc
jp
and
lret
xchg
xlat
cwtl
lods
push
andl
mov
sbb
lahf
out
push
mov
sbb
sbb
int3
aas
push
sbb
sbb
push
mov
daa
cmp
pop
fldcw
jmp
addb
push
adc
jo
jg
cwtl
clc
jno
or
insb
mov
inc
mov
jmp
data16
jp
adc
popf
xchg
or
fwait
jae
fsubs
add
sti
sub
mov
pop
xchg
sub
add
xlat
daa
outsl
mov
std
imul
add
push
sbb
cs
mov
loopne
imul
movl
inc
bound
addr16
or
xchg
push
mov
lods
add
and
fmul
dec
mov
mov
cmpl
sbb
push
mov
push
push
pop
sub
lock
jmp
rorb
xor
mov
mov
jne
jae
cmp
jl
sti
iret
pop
jb
jo
cmpsb
cli
and
test
cmp
icebp
in
popf
dec
daa
jp
mov
xchg
mov
pop
daa
das
std
cmp
or
xor
lret
sub
out
sub
add
aas
pop
lahf
and
sti
lret
dec
xchg
xor
dec
leave
mov
dec
or
adc
inc
pop
popf
cmpl
mov
add
lret
mov
lods
push
mov
mov
cmp
aad
pop
cmp
mov
and
dec
loope
lcall
insb
or
insl
daa
sub
dec
es
shl
in
js
push
sbb
pop
inc
xor
xchg
lret
daa
scas
lods
test
and
imul
dec
and
loopne
mov
out
or
xchg
test
movsl
mov
mov
in
adc
or
jmp
xor
cld
or
xchg
sbb
ss
lods
jecxz
adc
cltd
jge
mov
testb
sbb
cmpsl
sti
push
cmp
dec
aad
and
adc
add
jne
add
mov
jns,pn
lahf
sbb
jle
cmp
dec
and
pop
jne
sub
popw
push
pop
stc
rolb
movsl
bound
xor
jns
outsw
pushf
push
clc
daa
daa
inc
add
mov
popf
mov
sbb
xor
insl
and
sahf
push
mov
cltd
outsl
sbb
bnd
or
or
cmc
pusha
cmpb
pop
jbe
jge
test
pusha
push
mov
sahf
cld
sub
mull
icebp
cmpsb
mov
sbb
loop
repz
dec
fdivr
sahf
call
std
push
xchg
mov
xchg
outsl
outsb
sub
xor
and
add
inc
mov
popf
jne
adc
mov
inc
out
sbb
hlt
cmp
mov
push
mov
push
add
pop
aas
lcall
sbb
jo
adcl
shll
or
sub
pusha
mov
add
cwtl
sub
mov
xor
add
mov
in
sbb
lahf
outsb
std
pop
sbb
or
xor
dec
std
xlat
aam
lds
ror
jmp
iret
and
mov
scas
mov
adc
jmp
das
mov
cs
push
dec
in
mov
inc
cmp
scas
or
adc
xchg
inc
mov
mov
mov
lahf
aam
jp
push
and
sub
xor
test
mov
dec
cld
adc
dec
lahf
jnp
cmp
and
mov
fstps
and
aaa
lods
mov
das
addr16
push
addr16
xchg
cmpsl
js
dec
mov
cmp
sahf
and
subb
jge
lret
pop
mov
bound
cs
xchg
pop
jae
and
xchg
mov
negl
adc
enter
insl
mov
mov
scas
add
xchg
and
add
aam
dec
add
mov
ljmp
dec
jecxz
fistpl
insl
sbb
add
jmp
mov
cltd
scas
mov
scas
popaw
pusha
divb
pop
popf
jmp
arpl
adc
je
mov
or
lock
gs
pop
push
das
add
xor
xor
clc
popa
add
test
pop
sub
cmpsl
pusha
cmp
test
xchg
lret
cmp
sub
out
xchg
sub
fndisi(8087
test
sbb
outsb
insl
jo
clc
xor
jo
sub
sub
scas
aaa
dec
clc
nop
mov
add
popa
mov
dec
lret
jns
jge
out
xor
je
push
jo
xor
ja
xadd
out
lods
pavgw
xchg
or
into
das
pop
aam
xor
outsl
inc
shrb
lock
sbb
dec
and
cmpsb
sbb
jno
sti
add
jg
and
cmc
sbbb
dec
sbb
shrb
adc
dec
scas
inc
aam
jle
or
cld
mov
sub
dec
jmp
outsl
pushf
cli
cmp
cwtl
je
test
add
pop
mov
sbb
xor
jae
jns,pt
or
pop
loope
lret
jl
cld
jecxz
or
jle
fisubrs
xchg
popf
jge
and
pop
sbb
scas
out
jae
adc
jmp
mov
jmp
cmp
repz
mov
popf
add
mov
xchg
enter
push
mov
addr16
std
ds
into
mov
sbb
xor
xor
mov
leave
adc
fsubrs
jle
imul
insl
mov
cmpsl
scas
mov
mov
xor
sbb
cwtl
dec
jecxz
js
ret
mov
sbb
sub
cmc
mulb
js
xchg
mov
push
mov
xor
mov
imul
sbb
dec
dec
fcmovnu
push
inc
add
xchg
inc
xor
or
jae
js
dec
cwtl
inc
lods
or
fstl
cmpsl
xor
js
orl
jmp
cmp
jo
push
je
jp
ret
mov
adc
add
arpl
lock
push
or
fisubrl
cmp
xor
sbb
aam
cwtl
roll
ja
dec
ss
push
repnz
xor
mov
push
xchg
outsl
xor
xchg
rcrb
outsb
sbb
js
shl
fxtract
mov
in
dec
notrack
dec
add
out
inc
cmpsl
adc
cmpsl
vmwrite
in
cmp
xor
test
pop
movsb
add
and
test
arpl
pop
mov
sub
out
inc
js
push
cmp
xlat
pop
cmp
rcrb
std
or
dec
jb
xchg
js
and
jmp
fstl
or
dec
shrl
jp
jae
dec
and
decl
xchg
sub
and
mov
mov
mov
cmp
push
je
inc
mov
mov
std
xorps
cmp
sub
aas
es
add
cmpsb
add
or
sbb
repz
aas
bound
xchg
inc
xor
add
xlat
insb
and
pop
push
mov
cwtl
cmpb
inc
imul
push
pop
jge
fadds
cmpsb
movsb
cmp
dec
popf
pop
lock
imul
sbb
lret
je
xchg
scas
and
scas
push
xchg
addr16
push
rcrl
and
xor
aas
push
fistpll
fisttps
adc
mov
outsl
xor
fstpl
cmp
lds
push
clc
lret
jge
push
pop
insb
xchg
lcall
push
fsubs
ret
movsb
es
bnd
or
push
pop
xor
adc
push
dec
mov
stc
adc
cmpsl
cmp
inc
dec
sbb
fcoms
sbb
fistps
push
add
cs
jmp
pop
sbb
mov
rcrb
syscall
pop
mov
xor
mov
rorb
mov
out
lea
mov
jnp
pop
int3
sub
call
pop
into
xor
pop
cmp
jne
and
sub
jnp
jne
movsl
jp
jb
fdivl
or
sub
mov
sbb
pop
mov
pop
cwtd
shrl
xor
mov
push
jl
or
ret
pusha
ds
lods
sub
lahf
in
push
fsubl
imul
out
data16
push
cwtl
fists
fs
arpl
jb
inc
out
lcall
xor
mov
cmp
arpl
stos
and
xor
cwtl
lock
fwait
xor
lahf
mov
gs
push
js
nop
daa
fdivl
dec
sub
push
dec
xchg
rcrl
es
loope
jge
imul
jns
pop
push
lods
adc
or
xchg
xor
mov
jg
inc
sub
fdivrs
out
imul
lods
cltd
aam
mov
or
mov
or
outsl
pop
addr16
icebp
adc
push
aas
and
in
or
sbb
lcall
pop
fsubrs
das
sbb
jnp
fidivrs
push
pop
pop
fsub
fadd
cmp
xchg
adc
orl
int
insb
jne
cmp
lcall
cmp
aaa
push
lea
js
cltd
dec
popa
sub
or
xor
add
jg
nop
int3
loopne
add
sbb
pop
mov
push
and
paddw
loopne
popf
outsb
and
iret
lahf
aas
inc
cmc
adc
mov
lods
sub
out
xchg
cli
test
fnsave
icebp
dec
dec
push
pop
sahf
popf
jmp
scas
ljmp
xchg
packsswb
or
iret
int
mov
std
or
mov
mov
jg
xchg
cmpsb
imul
fdivs
mov
cmp
addr16
add
scas
test
or
cmp
or
stos
stos
inc
ss
mov
sbb
adcb
sbb
insl
in
scas
cmp
hlt
aaa
sbb
je
das
add
pop
mov
lret
out
enter
jp
es
dec
dec
mov
js
and
icebp
pusha
flds
stos
outsb
dec
in
mov
adc
mov
ret
mov
sub
jge
sbb
lea
pop
mov
mov
sub
inc
cmp
and
lcall
mov
cmp
outsb
out
out
mov
push
xor
xor
push
inc
outsl
lret
icebp
push
inc
popa
fsubrs
int
mov
pop
jnp
aam
clc
in
push
out
repnz
iret
icebp
mov
je
add
push
push
mov
pop
imul
int
enter
sub
cmp
fadds
dec
mov
fcmovnu
ds
lahf
lret
inc
fs
mov
cmpsb
ja
pusha
out
adc
pop
insl
popa
out
aad
cltd
mov
arpl
jge
cmp
iret
xchg
jmp
movsl
js
icebp
xchg
aam
xor
pop
bnd
std
mov
cld
sbb
shll
xchg
out
push
sub
lcall
jp
xor
jo
stos
jns
jge
xchg
adc
subl
loope
sub
es
rcrb
ss
es
lods
pop
cmp
inc
add
add
and
cmp
and
ds
stc
mov
lahf
pop
pop
cmpsl
pop
adc
popa
les
data16
adc
iret
fdivs
jecxz
pop
cmp
sbb
cmp
sbb
addr16
xor
jmp
das
xchg
insb
jle
mov
dec
scas
sbb
mov
fwait
or
sub
xchg
cltd
xchg
aam
cs
pop
or
lcall
dec
outsb
push
or
mov
and
mov
and
fwait
pop
pusha
push
test
stc
inc
mov
fwait
pop
adc
push
out
push
outsl
scas
and
lcall
sbb
mov
cmp
nop
scas
mov
scas
fucomi
adc
stos
test
or
lret
sbb
fnstcw
and
movsb
int
gs
sub
out
mov
xor
das
divb
mov
lea
xchg
movsb
mov
jne
jns
push
sbb
mov
dec
into
push
xor
xchg
insl
pop
repz
jne
pop
sub
cmp
jmp
dec
mov
ss
lret
push
in
cltd
in
int
add
insl
mov
addr16
andl
sbb
and
dec
and
icebp
fldt
insl
js
cld
movsl
aad
out
shl
scas
mov
or
xchg
pop
movsb
add
pusha
leave
fwait
addl
sub
out
xor
xchg
mov
xor
outsl
imul
cmp
inc
loop
mov
das
lods
and
cmc
sar
cmp
push
dec
sub
stc
enter
xchg
sbb
cmp
jns
cs
mov
movsl
xchg
sti
movsl
jle
in
and
test
mov
mov
int3
loope
clc
sub
enter
jnp
ret
dec
js
das
inc
test
jno
push
jbe
cwtl
and
mov
iret
push
test
fdivr
pop
mov
imulb
fldl
aam
push
cmp
sti
repnz
imul
xchg
xchg
sti
scas
mov
daa
adc
imul
or
mov
mov
add
sub
out
or
movsl
clc
and
ret
and
xor
sub
das
pop
adcl
cli
repnz
and
jnp
test
bnd
popf
test
add
xor
lret
pop
cwtl
and
out
test
jnp
out
test
cmp
setne
dec
cmp
mov
adc
std
push
add
data16
pop
ret
xor
mov
loop
je
cmp
mov
and
xchg
lock
das
cmp
loopne
aaa
pop
mov
aaa
ret
repz
dec
imul
mov
lea
lods
jge
add
or
push
enter
mov
mov
push
mov
push
push
or
pop
pushf
sub
shrb
nopl
xor
sub
mov
movsl
cmp
daa
imul
push
mov
xor
inc
popf
mov
pop
dec
cmpsl
popf
cld
mov
cmp
sbb
addr16
outsl
jbe
xor
jge
push
ss
add
dec
test
nop
add
cld
cltd
xlat
inc
js
adc
xlat
push
adc
out
fidivs
and
nop
outsl
cli
mov
push
push
les
sti
sti
xchg
jno
mov
cmp
cmp
and
popf
xchg
mov
xchg
pop
pop
xchg
cs
mov
popf
aaa
inc
adc
sbb
inc
imulb
scas
inc
pop
cmp
sub
fnsave
das
ljmp
outsb
gs
jno
das
jmp
xchg
popl
andl
push
arpl
pop
leave
push
nop
pop
lahf
mov
add
es
aaa
inc
shrb
cli
sbb
lds
push
cmpsb
lock
in
fcoms
mov
sub
push
outsl
xor
sbb
sbb
sbb
pop
sbb
cmpb
jp
xor
ret
push
pop
stc
mov
dec
stos
or
das
pop
rorl
jge
out
pop
sbb
cmpsl
stos
cltd
lods
xor
cld
xor
pop
xchg
mov
enter
mov
and
cmc
insl
inc
pop
push
decb
enter
sbb
cmp
or
sarb
lock
in
inc
push
out
decl
adc
and
and
add
jns
push
jbe
adc
pop
sbb
daa
lcall
lods
push
loop
push
popa
dec
divl
std
out
mov
adc
pushf
mov
insl
mov
cmp
stc
je
clc
mov
cltd
and
jge
and
or
push
in
nop
inc
out
mov
dec
inc
fmuls
adc
add
or
cmpsl
pop
cmp
add
cmpsb
pop
push
or
push
mov
scas
sbb
sbb
fstpt
jbe
divl
fisttps
fldcw
hlt
test
mov
cmpl
in
sbb
dec
stos
xchg
jl
insb
andb
sbb
ljmp
push
out
push
push
sub
jbe
xor
mov
or
addr16
imul
mov
cli
in
test
and
loope
inc
and
mov
jbe
imul
jecxz
pop
movsl
js
cld
repnz
ja
mov
lcall
std
xchg
push
clc
xchg
xchg
mov
jecxz
sbb
cmp
or
imul
pusha
sub
push
ret
test
pop
ljmp
push
aam
insb
xlat
xchg
push
ljmp
sub
movsl
dec
push
mov
sub
in
je
inc
mov
cmp
cmp
pop
idivb
push
xor
mov
out
divb
xchg
pop
push
lock
leave
int
lods
imul
sbb
test
pop
mov
jp
add
mov
mov
push
xchg
fsincos
outsb
pop
sub
mov
push
lcall
bound
sbb
pop
or
mov
jnp
mov
mov
add
les
popa
clc
jl
mov
je
inc
lods
and
lods
or
xor
loopne
fcoms
cmp
push
das
test
sub
or
in
sbb
jp
mov
mov
aam
icebp
movsl
mov
orb
in
pop
outsl
enter
fdiv
xor
xchg
gs
rdtsc
out
push
das
sub
xchg
adc
add
xchg
mov
sub
jecxz
cmpsb
push
ds
test
insb
dec
jp
lret
sub
jno
xchg
push
iret
pop
xchg
pushf
mov
int
and
pop
mov
sub
mov
sbb
outsl
sbb
je
icebp
outsb
sbb
arpl
jns
push
add
cld
xchg
ret
and
cwtl
dec
aam
imul
daa
aaa
sbb
inc
in
fs
sahf
insb
test
xor
pop
cli
add
clc
mov
popf
adc
mov
sbb
xchg
iret
push
imul
sub
or
fst
mov
into
push
popa
pop
addl
sbb
test
aam
imul
push
mov
cs
ja
jp
clc
popf
pop
sbb
insl
shrl
xchg
jo
dec
pop
sub
in
fsub
inc
test
pop
shl
push
cmpsl
fwait
lods
adc
js
pop
sub
movsb
mov
pop
adc
or
mov
fstps
gs
cmc
sti
jl
movd
rcll
xor
pop
inc
adc
test
clc
fistps
loop
cmp
push
jmp
cwtl
negb
mov
in
aad
lret
pshufw
pop
imul
push
cld
lcall
and
xchg
call
lcall
pop
mov
lods
xor
xchg
repz
xchg
fwait
mov
lods
inc
stc
mov
sub
and
lahf
or
mov
ja
pop
sub
push
fs
outsb
mov
fdivrl
jae
icebp
mov
sub
test
movsb
pop
push
jmp
push
loop
iret
mov
data16
aad
fiaddl
inc
fisttpll
rcl
imulb
frstor
out
aam
flds
iret
inc
and
scas
js
ds
add
mov
sub
xchg
pushf
sbb
fisubrs
ja
repz
out
jb
jb
mov
pop
or
sbb
sbb
inc
inc
mov
scas
inc
sub
pop
shrb
mov
mov
cwtl
pop
out
dec
cmpb
push
add
add
mov
adc
out
dec
dec
inc
sbb
andl
cmc
push
mov
nop
and
push
mov
mov
mov
jns
mov
xchg
fs
pop
and
push
push
jns
data16
push
addl
stos
inc
stos
push
repnz
sar
test
pop
imul
enter
fucomi
mov
cmp
push
pop
cs
cmpsl
push
xor
in
push
pop
aas
mov
or
bound
imul
clc
imul
or
xor
push
cmp
mov
cld
sbb
sahf
pop
fsubr
inc
aaa
std
xchg
mov
cmp
lds
mov
fstpt
push
mov
xchg
mov
int3
and
stos
xlat
cwtl
dec
test
aam
lcall
cmp
out
bound
pop
frstor
sub
lahf
dec
and
dec
add
sbb
repz
mov
adc
mov
push
imul
shrl
iret
daa
adc
mov
das
mov
push
sub
pop
mov
sbb
gs
jne
cmp
xchg
sub
scas
or
in
cmp
jne
xchg
pop
sub
jl
sbb
sub
insl
int3
mov
aaa
scas
jne
pop
stos
pop
adc
out
bound
cmpsb
mov
push
subb
add
clc
push
xchg
insb
cwtl
stos
and
pop
push
dec
mov
sub
test
and
popf
push
xchg
stos
cld
test
xchg
es
sti
jne
jo
int3
stc
jae
bound
inc
int3
xor
mov
fcoms
cmpsl
stc
popa
push
sbb
daa
scas
es
and
xor
pop
cltd
outsl
cmp
imul
xlat
sub
pop
push
xchg
sub
mov
cmpsb
aaa
mov
pop
sub
sub
sub
adc
adc
and
dec
insb
sbb
mov
pop
jg
outsl
and
in
mov
jg
mov
stos
mov
iret
push
mov
jge
subb
sbb
mov
push
lcall
inc
cmpsb
cwtl
cmp
cmpsl
dec
test
mov
mov
ja
sub
xchg
cmp
addr16
push
mov
mov
icebp
sub
insl
popf
fistpll
ds
cmp
test
add
sbb
or
cli
sub
insb
sbb
cli
addr16
in
cmc
sbb
mov
icebp
jns
clc
mov
and
add
sub
je
pop
leave
fs
outsl
mov
xor
mov
add
frstor
push
cmpsl
int3
xor
and
cmpsl
lock
or
push
pop
jmp
adc
cld
mov
sbb
xlat
rorl
pop
mov
or
aam
mov
mov
cmp
pop
aaa
in
es
int3
cld
mov
shrl
imul
insl
push
add
lret
pop
scas
xor
cmp
out
in
dec
dec
mov
iret
sbb
insb
fistpl
push
sbb
cwtl
sbb
movl
and
xchg
mov
mov
inc
mov
in
mov
imul
push
loop
bsr
sub
xchg
xchg
add
push
loop
mov
dec
jnp
ja
mov
fiaddl
in
push
out
cltd
loopne
jl
jnp
movsb
fidivrl
pop
jo
jge
add
sub
cmpsl
out
pop
sbb
fsubrl
mov
sub
loopne
js
popa
sahf
int3
dec
mov
xor
sbb
frstor
je
fdivr
rorb
scas
lods
pop
jge
jo
pusha
movsb
in
daa
fiaddl
dec
cmp
js
mov
pop
mov
pmaddwd
dec
loopne
sub
push
insl
ja
daa
inc
ja
out
push
jae
sbb
aaa
lret
in
int3
daa
fisttpll
loopne
lock
nop
outsb
cltd
mov
inc
sbb
nopl
scas
sbb
outsb
cmpsb
mov
push
sbb
aam
out
push
rcrl
jmp
jmp
mov
pop
adc
sub
jl
add
adc
and
rcll
insl
shlb
add
push
jge
xchg
push
daa
iret
add
sbb
das
lahf
pop
pop
jl
mov
pop
and
xchg
mov
mov
out
push
jo
ficompl
repnz
les
pop
subb
pop
cli
pop
sub
cmp
xor
popa
cltd
aas
dec
xor
jg
and
mov
jg
pop
in
cmpsb
dec
test
incb
lods
dec
sub
js
lret
jo
and
std
push
sub
add
popf
imul
std
mov
and
jle
push
out
pop
js
push
popf
arpl
aad
mov
test
sbb
dec
fisubrs
pop
mov
inc
inc
adc
cmp
mov
daa
mov
mov
scas
mov
cltd
test
das
clc
sbb
and
mov
arpl
inc
addr16
mov
icebp
sahf
outsb
stc
cmpsb
sub
adc
adcl
adcb
es
bound
cwtl
or
sub
cmp
outsl
pusha
jp
test
dec
test
loop
xchg
mov
mov
push
jne
pushf
aam
pop
jecxz
adc
jo
xor
jg
cmp
xor
jl
cmp
fnstcw
stc
xor
add
jbe
out
xchg
push
sub
mov
push
push
and
iret
sbb
mov
adc
test
cmp
lret
clc
adc
cmp
mov
jnp
mov
push
sbb
addl
aad
xor
mov
sbb
ret
dec
xchg
mov
push
loopne
pop
add
mov
add
sub
fadds
test
shlb
xor
in
push
or
adc
aad
cmp
sbb
dec
xor
xchg
sub
mov
rcpps
fldcw
cltd
test
inc
outsl
loope
addr16
sbb
mov
out
fs
loope
inc
mov
adc
jns
pop
jbe
or
pop
cltd
adc
stos
cltd
push
gs
add
popf
sbb
mov
pop
sbb
fisttpll
pop
pop
push
jne
xor
dec
enter
ss
popf
ss
clc
mul
fwait
outsb
out
fisttps
xor
mov
int
imul
das
rcll
popa
cli
jle
mov
jne
sub
scas
pop
push
stos
jge
and
lahf
add
dec
xchg
push
pop
push
int
es
in
jno
mov
ja
jecxz
daa
punpcklbw
int
or
pop
xor
xor
fdivr
bound
jl
fstps
adc
aaa
stos
lods
sub
dec
sbb
jecxz
sbb
push
les
pop
lret
call
pop
lcall
push
push
and
outsb
dec
iret
xchg
stc
in
xor
insl
xchg
fsubrs
js
lea
lods
ja
arpl
sbb
aam
mov
addr16
jae
cmp
inc
stos
sub
inc
push
call
lret
sbb
sub
xor
std
jne
cmp
jno
and
stos
push
xor
stos
mov
cmp
cmpb
inc
and
fdivs
inc
fsubrs
push
sub
je
shl
clc
cwtl
nop
pop
mov
hlt
push
inc
pop
mov
push
sbb
mov
jo
mov
cmc
movsl
mov
mov
or
inc
ret
pop
mov
daa
popf
sahf
orl
fisubl
jnp
int3
mov
insl
cmp
lds
inc
data16
xor
stos
xor
add
aas
cmp
mov
jo
add
sbb
scas
arpl
cli
cmp
mov
sub
hlt
cmpsl
jg
cmpsl
stc
mov
sbb
cli
fsts
jns
mov
in
push
xchg
js
add
adc
sub
sub
movb
sub
scas
lds
jge
test
sbb
out
insb
jno
jo
test
jge
jns
daa
inc
xorb
inc
jle
sub
cmp
lea
mov
orb
cmp
or
mov
sti
leave
loope
dec
sub
xchg
push
jne
cmp
sbb
xchg
cmp
out
xor
repnz
jae
pop
gs
sub
js
cwtl
fnstsw
cmp
push
inc
jge
pop
xor
stos
mov
test
bound
clc
xor
stos
mov
stos
in
inc
fdivl
mov
movlps
jo
daa
cltd
js
xor
adc
push
mov
call
popa
scas
sbb
dec
push
in
adc
popf
mov
inc
push
or
cmp
or
outsl
xor
int3
lcall
call
xchg
stc
inc
pop
xchg
pop
xchg
sbb
lcall
inc
enter
popf
lock
nop
and
clc
cwtl
ss
out
fs
insb
pop
cmp
xor
stos
push
mov
cmp
mov
pop
loope
inc
pop
lahf
ljmp
aam
pop
test
sahf
sbb
and
and
xlat
das
jecxz
jmp
es
repnz
xor
adc
sahf
pop
mov
sbb
je
cmp
jae
and
inc
lret
out
push
mov
xor
cmp
mov
les
clc
sub
adc
push
std
andb
rorl
in
mov
pop
fcmovbe
lods
les
sub
mov
mov
test
aad
jge
es
mov
cwtl
xchg
cmp
pop
inc
pop
inc
push
ret
insl
jno
xor
es
push
xchg
jbe
jle
lea
xlat
xchg
or
mov
cltd
add
xor
dec
add
stos
inc
leave
movsl
push
add
bswap
adc
data16
adcl
outsb
inc
push
fcom
sub
lods
stc
call
and
inc
push
iret
fcomp
adc
push
cmpsl
adc
repz
stos
es
or
test
mov
ficompl
iret
cmp
outsb
popf
stc
add
xor
and
sub
xor
add
flds
dec
lods
jle
jmp
setae
or
or
adc
enter
int
leave
fcmovu
xlat
sub
mov
insb
jbe
lret
inc
lcall
jmp
xor
and
enter
sbb
jo
mov
jb
jp
loopne
jne
lmsw
push
mov
dec
dec
inc
inc
add
sbb
and
add
adc
test
lods
pop
insb
fstps
aam
jb
jne
scas
xchg
add
sub
mov
out
rcrl
hlt
js
adc
sbb
jp
and
das
dec
arpl
fdivl
mov
sbb
test
stc
aaa
scas
ret
xchg
xor
jno
hlt
int
popf
xor
iret
xchg
pop
mov
fst
fildll
sbb
jmp
xchg
cmp
xor
mov
negb
das
std
or
mov
pop
addr16
mov
daa
aaa
mov
shr
adc
xchg
mov
mov
sub
jae
mov
jae
sbb
mov
fstpt
and
arpl
in
repnz
cmp
pop
stos
xchg
jp
mov
rcrl
cmp
pmulhuw
mov
xlat
out
test
pushl
test
jo
lret
into
inc
fcomps
sub
pop
push
movsb
imulb
pusha
sbb
lea
mov
divb
sub
jmp
cltd
pop
push
cmpsb
movsb
pusha
cwtl
into
dec
cld
sbb
push
mov
sbb
into
test
jae
mov
sbb
mov
inc
mov
push
stc
jae
mov
mov
clc
mov
inc
mov
push
cwtl
mov
and
mov
negb
sub
pop
sarb
jg
negb
lret
fwait
and
arpl
cltd
loope
push
inc
cwtl
cmc
in
das
dec
daa
mov
cwtl
mov
or
fimull
mov
std
and
xchg
dec
pop
and
test
lahf
sbb
lea
pusha
fwait
js
cmp
fsubrs
popa
ficoms
fs
mov
inc
mov
mov
sub
ret
sar
dec
ds
adc
mov
roll
std
add
test
sahf
xor
arpl
insl
mov
rcll
lahf
lods
jg
popf
jne
pusha
push
and
xchg
push
cmpsb
pushf
iret
test
xchg
movsb
jb
cmpsl
mov
pop
into
iret
and
nop
aad
lret
and
insb
ja
clc
jne
fwait
adc
fidivs
nop
xor
popa
and
fdivs
mov
jbe
mov
sbb
or
push
mov
int3
jb
repz
adc
or
pop
sbb
inc
mov
cmp
mov
fwait
sbb
ret
pop
push
xor
dec
mov
xlat
jle
and
xchg
clc
cmp
lret
int
sub
pop
arpl
bound
mov
jae
jle
hlt
outsl
sub
jno
dec
sbb
lahf
xchg
mov
push
sbb
aas
mov
pusha
cltd
notl
pop
sub
fstl
pop
inc
imul
pushf
mov
and
mov
leave
add
xor
call
stos
ss
fimull
aaa
cmp
enter
dec
jle
lds
lods
hlt
jmp
clc
dec
mov
ss
in
in
pop
sbb
mov
mov
sbb
push
cmp
ja
fimull
and
mov
insb
aad
lods
mov
scas
fs
ffreep
dec
fstl
cs
mov
xor
pop
imul
dec
pop
jmp
push
lds
mov
mov
xchg
insl
pop
iret
daa
push
cli
mov
mov
insl
cmp
dec
loopne
out
xor
out
aaa
dec
lds
outsb
mov
les
mov
fistl
dec
inc
adcl
daa
mov
sub
sbb
jge
sub
out
pop
mov
repz
xchg
mov
addr16
adc
or
pusha
pop
cmp
iret
in
adc
sbb
lock
dec
sub
lods
imul
dec
data16
jae
lods
mov
mov
push
and
loop
xor
or
ss
adc
fstps
shl
pop
sbb
or
mov
xor
sbb
xchg
fimuls
dec
in
mov
dec
movsl
mov
stos
add
mov
pop
jno
addr16
adc
punpckhbw
inc
negb
jnp
cmp
mov
mov
hlt
ret
test
movsb
push
out
ljmp
pop
adc
nop
pop
jmp
push
call
xor
std
or
adc
sbb
mov
push
mov
jne
xchg
pop
fldenvs
movsl
in
cmovp
repz
in
cwtl
xchg
jp
rcll
mov
jle
fidivl
mov
subl
inc
and
fstps
decl
popa
xor
fucom
aaa
imulb
mov
aas
xor
andnps
and
lcall
popl
sbb
aad
xor
iret
test
xor
and
clc
sbb
ds
loop
sub
jle
mov
mov
mov
push
pop
sub
push
and
movsl
mov
in
mov
push
jp
scas
add
dec
cmp
arpl
cmp
fmuls
cmp
and
jl
adc
data16
movd
and
arpl
outsb
jl
mov
sub
or
movsl
std
sbb
movsb
cmp
adcb
sub
cmp
into
xchg
sub
shlb
fisttpll
push
xchg
sbb
aaa
nop
lret
enter
rolb
pop
and
cmp
stos
xor
enter
lods
mov
test
xchg
cli
gs
mov
int3
cmp
xor
xchg
imul
lods
repnz
ficompl
movsb
cs
data16
imul
stos
dec
in
xchg
stos
mov
jle
push
adc
cs
mov
dec
mov
imul
xor
nop
cltd
pusha
cmpsl
sbb
insb
xor
fists
jno
jns
icebp
mov
mov
inc
jae
add
and
mov
xchg
stc
iret
cwtl
sbb
std
jbe
ret
push
xchg
data16
scas
and
mov
pop
in
and
out
outsl
pop
jp
jns
arpl
mov
mov
sub
movsb
stc
stc
cwtl
mov
lock
bound
pop
iret
insl
lcall
orb
lods
pop
pop
add
rcll
cmp
and
fidivl
xor
lds
out
adc
push
lahf
jne
les
test
push
cmp
mov
sbb
hlt
push
ret
int
sbb
iret
out
push
cmp
mov
roll
jns
mov
das
frstor
sti
cld
popf
popa
inc
enter
or
xor
jae
xor
lahf
mov
fsts
sub
lock
push
mov
jle
fisttpll
hlt
sbb
movsb
nop
pop
xchg
and
inc
jb
sahf
push
cmp
jl
push
jae
xor
pushf
cmp
dec
ret
inc
jg
mov
rorl
daa
mov
jle
cmp
mov
scas
cmpl
das
mov
movsl
pop
cmp
jp
xlat
inc
xchg
add
xor
inc
mov
test
sbb
decb
ficoms
shlb
mov
cmp
jne
push
pushf
jo
mov
sub
xchg
dec
insl
test
repnz
sub
fcmovu
pop
rcrb
push
mov
int
xchg
data16
popf
repnz
dec
or
xchg
mov
push
ds
push
pop
pop
jg
fldcw
rclb
dec
std
sub
pop
xor
mov
jne
std
jb
arpl
clc
xor
mov
inc
xchg
mov
enter
loope
inc
xchg
lahf
notb
mov
loope
sub
in
addr16
leave
in
pop
dec
cmp
out
pop
sub
add
cmp
call
aam
xchg
js
cltd
jns
enter
sbb
sub
mov
mov
push
fistps
mov
fidivl
out
mov
lcall
in
lods
jecxz
pop
sbb
call
dec
outsl
sub
dec
sub
into
out
xor
cmp
scas
push
aas
jl
bound
xor
sub
xor
std
cmp
fsubl
jno
cmp
das
mov
in
sbb
inc
and
push
jecxz
pslld
ret
ss
ret
in
clc
aaa
sarl
pop
sub
jmp
cs
mov
mov
dec
or
push
pop
cwtl
call
stos
imulb
pop
sahf
pop
mov
idivl
jb
sbb
jb
leave
lea
fisubrs
ficoms
sbb
das
into
or
mov
mov
mov
and
push
orb
dec
mov
fldcw
xchg
std
es
dec
icebp
mov
nop
lret
fs
xlat
jb
mov
loope
cltd
ficoml
sbb
jbe
aaa
out
jmp
scas
push
jp
and
jmp
in
pop
mov
mov
push
pop
jmp
add
repnz
stos
mov
mov
ja
pop
insl
inc
cmpsb
inc
pop
sbb
syscall
out
lahf
pop
mov
in
pop
pop
inc
ret
cltd
adc
push
in
enter
lea
pop
imul
scas
mov
int
out
fnstenv
nop
test
mov
ds
lcall
or
xor
nop
xlat
shl
add
cmp
cmpsl
rclb
test
xacquire
xchg
cmp
test
in
pop
stos
cmp
adc
test
adc
or
xchg
add
sbb
push
adc
mov
xor
add
xor
pop
int3
call
mov
inc
mov
sahf
js
scas
cmp
jp
add
outsb
imul
mov
mov
xchg
dec
jae
push
adc
jns
arpl
sub
es
sub
xchg
or
inc
dec
and
push
mov
cmp
or
sti
js
wbinvd
sub
stos
stc
in
iret
pop
sbb
mov
clc
inc
mov
mulb
aas
dec
ss
lcall
test
xor
outsl
xorl
test
xor
clc
xchg
inc
push
mov
pusha
and
ljmp
cld
arpl
jae
adc
in
orl
outsb
out
mov
sbb
push
insb
xchg
inc
loopne
xlat
sbb
dec
jmp
lods
push
jg
iret
fs
scas
xor
xchg
lea
les
lock
push
xchg
loope
add
lret
cs
fsubs
stos
cmc
mov
sbb
or
rcrl
xchg
stos
sbb
mov
jae
insl
add
jnp
xor
xchg
pop
xor
cmc
fnstsw
sbb
xchg
xor
mov
outsb
mov
and
test
sbb
jge
xor
test
xor
lahf
or
aam
aaa
rcr
ss
aaa
or
add
or
in
iret
jbe
inc
mov
pop
or
add
push
addr16
mov
outsl
lahf
inc
ljmp
insb
sbb
fists
bound
ret
or
js
js
shrl
iret
in
sub
add
negb
add
jecxz
cmp
push
aaa
test
fwait
jno
out
push
mov
pusha
pop
push
push
push
outsl
addr16
mov
pop
daa
jg
sbb
js
xlat
movsl
mov
sbb
pop
xor
xlat
jo
push
xor
jge
mov
ljmp
sub
adc
jae
cmp
sub
into
pop
add
fwait
in
repz
rclb
test
and
mov
sbb
lahf
cmp
xor
dec
mov
iret
sbb
in
scas
pop
stc
mov
sub
ud1
stc
sbb
sub
jo
mov
divb
repnz
loopne
or
mov
cs
push
aaa
cmp
nopl
js
xlat
mov
addr16
pop
addr16
cmpsb
mov
test
sbb
adc
ss
ss
inc
fisttpll
xchg
fdivl
leave
testb
imul
test
push
mov
icebp
loope
aad
jns
mov
cmp
in
xchg
xor
cmpb
mov
add
out
jp
add
leave
xchg
test
aam
mov
stos
and
lods
fistps
cmc
sahf
cmp
lret
and
fsub
cmp
daa
out
pop
cld
out
test
ljmp
aaa
fisttpll
hlt
push
gs
xlat
mov
int3
and
mov
and
xchg
invd
stc
cmpsb
mov
or
ret
pop
jbe
mov
mov
cmc
and
pop
xor
jg
sub
outsb
or
sbb
adc
xchg
pop
push
daa
iret
arpl
dec
mov
cmp
push
xor
data16
pushf
pop
bound
mov
push
push
mov
outsb
pop
fs
adc
and
sbb
mov
sub
mov
mov
std
mov
lock
xchg
push
outsb
xor
scas
cli
shlb
mov
nop
inc
dec
sub
gs
pop
or
enter
or
pop
push
add
inc
sbb
in
or
int3
and
repz
and
fidivrs
ss
or
fchs
or
std
lret
cmp
pushf
sbb
fistl
stos
lods
dec
and
sbb
jmp
orb
dec
mov
in
add
das
and
mov
dec
mov
cmp
xor
fwait
mov
call
arpl
and
lds
xchg
sbbl
pop
aaa
jge
pop
cwtl
test
cltd
mov
sub
push
sub
aad
loope
mov
sub
xor
dec
gs
fsubrs
adc
ljmp
and
mov
fldt
nop
inc
rcll
or
adc
je
pusha
pop
lods
loope
movsb
or
scas
sti
add
dec
orps
ret
mov
daa
pop
insl
push
into
pop
cmpsl
ud2
sub
ret
sbb
or
seta
mov
ss
push
sub
paddq
leave
test
rolb
or
xor
scas
imul
mov
pop
add
mov
adc
outsl
cs
sub
jmp
sbb
sbb
add
push
dec
cwtl
movsl
mov
dec
cmp
sbb
pop
icebp
sbb
nop
inc
cmpsl
mull
out
out
mov
pushf
fbld
jb
xor
and
and
add
pusha
jmp
fsubrl
inc
cs
inc
or
movsl
cmp
inc
sti
popf
push
gs
xchg
mov
push
cmpsl
xor
mov
call
or
fbld
pop
insb
sbb
inc
dec
mov
jle
popf
jle
xchg
call
pop
pop
add
cmpsl
adc
sub
add
jle
mov
jo
js
jp
cld
cs
dec
mov
fistl
mov
fsubs
movl
pop
push
jns
mov
lret
sbb
inc
pop
lcall
xor
pusha
ret
sbb
jbe
insl
inc
popa
ljmp
mov
lahf
xchg
and
push
fsts
adc
sbb
adc
inc
fnstsw
and
ss
push
ljmp
jge
cmpsb
mov
divl
fucomp
ret
and
test
mov
mov
xor
xchg
mov
jmp
jno
xchg
jge
adc
test
outsb
fsubr
rcl
inc
ss
cmpsb
mov
push
jl
mov
pop
jae
insl
and
shll
push
js
aas
push
cmp
dec
mov
notl
js
aaa
mov
adc
int3
aaa
xchg
mov
jge
pusha
jns
rcl
iret
add
psllw
add
fldt
push
push
cmpsl
cmp
scas
jae
inc
adc
stc
push
je
test
scas
outsb
pop
loope
arpl
not
add
iret
andb
cs
xchg
pop
ss
xor
fnstsw
es
jb
xchg
je
jae
xchg
or
jns
lret
pop
popf
lea
das
sub
fdiv
xchg
stos
jo
mov
hlt
int3
and
mov
je
lock
mov
xor
pop
popa
mov
jmp
ss
or
mov
cmp
das
cmp
jnp
mov
enter
aas
cmp
xor
bound
sbb
scas
fcmovb
das
mov
fs
icebp
imulb
cmpsl
sub
and
mov
js
addr16
rcl
test
loope
sbb
mov
add
and
fwait
testb
nop
mov
mov
jno
mov
xorl
sub
ficoml
cltd
popa
jmp
pop
and
or
sbb
jge
in
gs
test
loope
sbb
mov
sub
rorb
je
cmp
icebp
jns
pop
jle
cmp
sub
inc
clc
cli
jl
out
cltd
stos
jle
or
rclb
jle
lahf
or
leave
stos
lods
dec
pusha
pop
or
pop
pop
pushf
sub
fadds
lods
jle
clc
jo
lods
cmpsb
das
fldl
or
push
adc
fcomip
imul
cmp
std
sbb
aad
popa
dec
jnp
shll
and
stc
jb
jbe
mov
jne
gs
shlb
loopne
aas
pop
adc
es
daa
pop
pop
sbb
jbe
roll
pop
fmull
add
dec
and
call
jbe
outsl
dec
je
movb
aaa
std
add
jnp
xor
sbb
hlt
cmp
and
inc
sub
in
sbb
negb
dec
pop
fisttps
sbb
push
mov
addr16
push
xor
fsub
cmpsl
imul
iret
out
xor
push
and
xor
sub
adc
psubq
shll
insb
jno
addr16
jmp
mov
jne
pushf
push
xchg
xchg
mov
mov
js
sar
aam
popa
cltd
mov
test
fadds
data16
rcrb
add
int
pop
xor
push
mov
arpl
and
out
pop
out
mov
jl
mov
popf
in
mov
xchg
cld
inc
cld
sub
stc
cmp
mov
ds
sub
or
lods
adc
das
inc
or
xchg
lods
sbb
nop
call
cld
pop
frstor
dec
cli
in
dec
push
sub
jp
push
xor
jne
and
push
les
bound
das
pop
fadd
fwait
data16
adc
jmp
pop
pop
push
fsubs
xchg
outsl
or
mov
adc
add
push
andnps
adc
or
sbb
or
sbb
sub
add
xor
adc
fisubs
sbb
cmpb
and
mov
fisubl
dec
or
mov
adc
pop
dec
ss
cmp
pop
clc
cwtl
stos
add
jno
test
and
out
pushl
fldt
stos
test
xor
sbb
les
in
lahf
xor
pusha
sbb
fcmove
push
mov
or
xchg
sbb
pop
and
test
dec
lcall
mov
sbb
cmp
add
dec
adc
mov
int
xchg
jle
jae
and
push
cmp
pop
call
lcall
mov
push
push
fcoms
add
out
aaa
popf
movsl
mov
xor
gs
mov
int3
push
mov
push
sbb
out
mov
jecxz
cwtl
xor
and
stc
or
or
adc
sub
leave
popw
adc
mov
jge
mov
pop
inc
push
mov
lret
leave
xor
data16
adc
sbb
insb
mov
ret
scas
adcb
out
xor
pop
stos
pop
das
jl
jo
movsb
pop
data16
in
mov
sbb
call
test
push
lret
and
xor
xchg
sub
sbb
pop
and
lock
ss
jbe
sbb
imul
adc
and
add
jo
call
in
ret
xor
outsl
xchg
es
lret
dec
test
test
out
cwtl
rcll
sbb
mov
aaa
dec
fimull
xor
or
sahf
int3
stos
icebp
jae
mov
cmpsb
dec
flds
jle
ss
in
push
jb
rcll
aad
adc
cltd
dec
popa
cli
sub
cmpl
pushf
popf
sub
js
xor
lods
mov
rcll
mov
xor
sbb
adc
xchg
cmp
iret
jbe
cmp
mov
or
cmp
inc
ljmp
mov
jp
js
cmp
mov
call
sbb
mov
popa
pop
stc
bound
cwtl
sbb
xchg
scas
push
pop
pop
sub
movsb
imul
call
jecxz
pop
into
sub
jns
push
jae
je
insl
imul
push
xor
neg
in
xor
aad
sub
call
push
and
clc
jp
fistpl
sbb
mov
aaa
test
mov
iret
out
pop
mov
fmuls
xor
adc
ss
dec
cmp
aaa
jo
mov
pop
pop
popf
in
push
lret
mov
jge
clc
movsb
fcoml
mov
inc
and
or
push
mov
sbb
mov
inc
scas
or
addr16
push
cmp
push
xchg
jo
sarl
inc
test
rorl
add
popf
addr16
rcrl
and
sbb
popa
pop
sub
mov
cmp
and
xchg
rol
cmp
nop
lret
push
out
mov
hlt
lock
pop
xor
test
cmc
push
pop
and
sbb
mov
stc
lds
loopne
into
sub
call
cltd
mov
lods
addr16
and
dec
enter
aam
dec
out
xor
sub
mov
and
insb
sbb
lcall
dec
pop
daa
dec
cmpsb
jge
fcoms
lods
loopne
sbb
js
mov
jns
scas
movl
sub
stos
rcrb
fldcw
outsl
mov
xor
pushf
popa
xor
sub
mov
es
lcall
lret
mov
pusha
add
push
sub
pushf
xchg
cltd
leave
xchg
mov
pop
mov
adc
inc
sbb
imul
enter
cmp
je
lds
imul
inc
mov
nop
xlat
stos
aaa
rcl
jmp
dec
lret
lret
dec
mov
cmp
and
fldcw
jecxz
inc
inc
js
out
fwait
daa
lods
cmp
mov
mov
and
xchg
or
movb
insb
sbb
stc
mov
ds
lret
gs
xor
xchg
jb
in
push
iret
out
push
sub
rclb
inc
orl
mov
cwtl
xor
cwtl
aad
mov
xor
ficomps
add
push
aam
adc
adc
sahf
mov
test
cmc
and
repnz
mov
xchg
idivb
paddq
imul
fsubs
adc
and
jge
pop
icebp
or
popa
int
int3
daa
and
and
les
das
fistl
xor
and
stc
lods
cmp
lods
icebp
icebp
es
stc
xchg
ja
js
loop
aad
mov
mov
xchg
shrb
dec
dec
mov
imul
je
and
pop
sbb
jmp
lea
xlat
cmp
pop
lret
or
ds
xchg
jo
mov
out
fcmovbe
adc
pop
push
or
mov
mov
gs
rolb
sbb
repz
adc
stc
push
pop
mov
adc
shrl
fwait
ljmp
clc
loopne
xchg
pop
test
sbb
pop
cli
int
popa
pop
inc
test
pop
mov
xchg
xor
mov
out
mov
aaa
ret
jbe
dec
sub
jl
pop
sti
jae
inc
loope
pop
pop
cld
orl
lock
aad
and
mov
mov
xchg
mov
jge
sub
adc
push
cmp
sub
loopne
es
push
insl
imul
inc
sub
jnp
dec
add
arpl
stos
out
xor
scas
xor
outsb
cwtl
and
cwtl
sbb
or
jmp
adcl
test
and
push
insb
push
mov
inc
pop
mov
inc
and
sbb
jmp
xor
cmpl
fists
lcall
adc
and
push
adc
data16
jg
scas
cld
add
ficoms
shlb
sub
adc
cli
hlt
test
ss
cmp
push
sub
sti
fimull
fstpt
popa
cmpsl
jns
pop
xor
or
push
xchg
mov
lret
in
sbb
mov
sbb
push
pop
in
dec
cmc
fdivs
test
inc
adc
aam
sti
mov
adc
inc
sub
mov
mov
mov
je
jns
sub
sbbl
inc
lahf
mov
mov
aam
and
fwait
les
and
sbb
scas
adc
jmp
mov
iret
loopne
sub
outsl
mov
ds
mov
and
xor
bound
xor
sbb
popa
push
mov
mov
ds
xchg
xchg
add
outsb
test
aas
push
stc
add
popf
mov
pop
or
jae
sti
mov
rcrl
movsb
and
cwtl
movsl
and
addb
in
sbb
add
jl
addl
jbe
fisttpll
fwait
pusha
andl
mov
cmp
push
mov
mov
loopne
cli
jecxz
ljmp
shlb
cmp
daa
cmp
int
enter
jecxz
jns
mov
test
cmp
adc
dec
repz
xlat
cwtl
jnp
cltd
stos
mov
out
mov
pop
and
into
jae
pop
jnp
push
push
cmpsl
or
pusha
lea
inc
inc
int
pop
jne
aas
push
fstp
mov
in
sbb
test
fsubrl
mov
or
dec
fisubrl
std
xchg
push
sub
pusha
push
popf
dec
fisttpll
into
adc
sbb
dec
stc
test
stos
add
and
out
xchg
sub
add
cltd
test
jl
xchg
out
xchg
or
mov
push
arpl
stc
xchg
in
stc
cmp
ss
ds
sbb
dec
cli
mov
mov
xor
in
sbb
cs
mov
mov
int
pop
mov
push
into
xor
sbb
inc
mov
jp
les
sbb
jns
ret
stos
jno
jmp
mov
scas
or
fdivrl
inc
and
out
test
mov
and
xchg
xor
xor
mov
sub
sbb
mov
int3
sti
sub
cmp
cmp
je
add
das
sbb
jae
push
jbe
pop
push
je,pn
xor
inc
in
jecxz
inc
lods
leave
imul
out
int
insb
es
aaa
push
in
sub
mov
sub
sbb
jl
xorb
addr16
jge
sub
inc
das
xchg
aaa
push
sub
sub
adc
sbb
push
clc
jne
test
pushf
jno
arpl
cmc
stos
loopne
es
add
pop
aaa
push
data16
inc
aaa
dec
push
repnz
call
scas
xchg
arpl
jbe
pop
loopne
sub
mov
ljmp
pop
push
fs
stc
stc
dec
je
out
sub
popf
pop
notl
lods
fidivrl
fldenv
iret
fildl
sub
cmp
adc
xchg
scas
mov
and
sbb
divb
xchg
cmc
push
and
or
dec
pop
sub
test
pop
lcall
iret
pop
ja
lcall
inc
in
add
add
xor
loope
adc
push
cmc
xchg
add
insl
aaa
pop
out
lock
or
popf
and
jl
aam
sub
pop
and
hlt
sbb
dec
mov
idivl
test
imul
add
and
fcmovu
cwtl
cmp
xor
rorl
pop
inc
mov
sub
dec
or
cltd
ss
or
mov
add
and
scas
inc
xor
jmp
xchg
sahf
js
ss
data16
psubusb
dec
pop
jno
jns
jp
enter
jae
cmp
in
xor
out
xor
daa
sbb
sbb
call
cmp
loopne
fcomps
and
cmp
inc
je
rcrb
dec
mov
pushf
inc
aas
push
pop
sbb
jo
sbb
cltd
xchg
jae
cwtl
xor
imul
cltd
push
fs
xchg
les
lods
jb
ret
cmp
addl
push
sub
ss
sbb
jb
or
cwtl
repz
mov
fwait
icebp
inc
and
fucomp
fwait
sub
pushf
sbb
mov
push
leave
sub
sbb
sbb
pop
rorb
lea
adc
inc
mov
xchg
xchg
sahf
lock
sti
jecxz
out
jp
pop
daa
repz
xor
int3
ljmp
xchg
dec
lret
fsub
shl
cs
movsl
cld
or
sbb
insl
pop
mov
sbb
and
scas
inc
push
sbb
or
pushf
xlat
iret
adc
cmp
mov
imul
pop
enter
pop
inc
andnps
mov
mov
loope
mov
push
ss
jmp
pop
outsl
and
or
jns
pop
loop
adc
popa
push
dec
cmp
pop
sbb
pusha
jp
loopne
xor
push
mov
xor
das
insb
jl
out
pop
rcl
lods
js
in
cmp
test
pop
daa
hlt
lcall
inc
imul
rcl
inc
scas
scas
xor
ja
fnstsw
sub
imul
enter
js
movsl
rol
pushf
mov
xchg
xchg
cmpsb
test
pop
mov
js
jecxz
cltd
mov
test
ss
mov
lret
sbb
or
in
test
test
mov
cwtl
repnz
cmp
push
jb
mull
idivb
mov
js
ja
leave
out
jge
push
or
lea
stc
mov
dec
aaa
mov
and
or
dec
sub
fstpl
pop
fisubs
arpl
jno
xchg
roll
sub
iret
push
insb
push
mov
loope
ja
es
jb
fdivrl
lcall
dec
js
jae
mov
xor
push
lods
sbb
mov
add
sbb
pop
sbb
and
gs
cmp
sbb
loopne
lret
jl
jo
ja
fstl
jns
out
not
in
xor
sub
std
pcmpgtd
ds
int
rcr
push
mov
iret
adc
mov
push
dec
fldt
out
into
jge
je
lock
jmp
xor
mov
stc
xchg
push
pop
add
es
shll
mov
jmp
xchg
into
xchg
xor
repz
pop
adc
and
es
outsb
mov
pop
cmp
cltd
imul
imul
cs
mov
jae
mov
scas
dec
fwait
fs
in
sbb
pop
adc
inc
cmp
adc
and
mov
and
pop
sbb
lret
dec
mov
jns
movsl
sbb
bound
sub
sub
push
cwtl
lods
mov
xor
sbb
jne
ja
cmp
out
fidivrl
dec
xchg
movsb
adc
pop
out
jne
and
xchg
dec
jmp
lcall
fistpl
sub
cltd
push
or
pop
jns
iret
ss
and
das
dec
mov
fwait
sbb
call
mov
sub
mov
popaw
mov
incb
mov
jae
sbbl
fnstsw
dec
std
mov
add
stos
xlat
aam
addr16
push
in
mov
popf
adcb
stc
sbb
dec
test
dec
sbb
pop
and
js
imul
lods
pushw
fisttpll
jns
in
rolb
inc
pop
jns
jp
mulb
jo
sbb
ret
dec
jbe
sbb
adc
stos
jp
outsl
add
enter
push
popf
or
adc
sub
int
out
sbb
dec
insl
stc
cmp
add
cwtl
jge
cmp
dec
jne
or
insl
cltd
gs
dec
or
cltd
lds
cmovg
aas
imul
cmp
inc
fnstsw
ds
push
sbb
cmp
neg
scas
mov
jge
jecxz
jne
cmpsl
fbstp
shll
das
mov
xor
mov
jmp
pop
push
aaa
sbb
loop
test
mov
and
ror
popf
adc
aad
xchg
outsl
dec
inc
pop
xchg
pop
bound
xor
cli
push
mov
pop
idivb
in
xchg
pop
mov
out
movsb
mov
and
jmp
ret
push
mov
mov
mov
aam
mov
cmp
ficoms
stc
addr16
lea
popf
stc
cld
jl
push
sbb
jns
in
push
rorl
sub
push
inc
leave
inc
pop
xchg
fs
and
ret
sub
cmpsb
pop
out
xor
loope
shll
into
dec
lock
iret
int3
cs
sbb
cmp
mov
jnp
fcom
sub
test
nop
nop
test
jo
mov
pusha
push
xchg
cmp
xchg
in
cli
decb
rcrb
lea
pusha
cmp
mov
subl
std
and
push
js
aas
repz
jbe
fistl
sbb
add
sub
jle
pop
mov
jmp
inc
jmp
sahf
xchg
cmp
test
mov
and
movsl
sbb
adc
in
mov
push
xchg
les
pusha
jns
mov
ss
int3
pop
pop
rcrl
xor
sbbl
cltd
push
insb
xor
pop
mov
ficoml
push
and
lea
ds
pop
das
sub
popf
pop
jb
outsb
cli
xor
sti
int
std
cwtl
xchg
outsb
cmp
stos
sbb
jne
es
shrl
mov
scas
fildll
dec
add
data16
mov
pusha
mov
enter
das
call
das
pop
out
imul
cmpsl
cmp
sub
js
stos
add
cmp
and
jge
and
cs
hlt
adc
aam
in
sub
pop
cli
xchg
cwtl
test
fwait
icebp
jg
cmp
movsb
jae
jbe
sbb
ja
xor
mov
push
xor
sub
fstl
insl
sbb
xchg
lcall
sbb
pop
mov
dec
xchg
mov
pop
decl
popf
push
fimull
sbb
inc
fcompl
sub
and
dec
std
xchg
push
cwtl
jecxz
mov
add
es
sub
ja
ja
out
xlat
js
scas
pop
popa
pusha
int3
out
adc
push
add
outsl
andl
lods
mov
fld
jb
jg
cmc
jnp
cmp
mov
jle
fldcw
cmp
data16
dec
sbb
jl
add
cltd
inc
aam
enter
cmp
test
mov
pop
shll
adc
mov
mov
xlat
mov
inc
sbb
mov
push
push
cwtl
popf
pop
jl
insb
xor
push
scas
movsb
or
xchg
cmp
daa
xorl
cmp
pop
cs
mov
push
sahf
xchg
inc
mulb
mov
gs
sbb
sti
inc
mov
jl
bound
daa
sete
lds
daa
rclb
mov
xor
out
bound
pushf
lcall
dec
cwtl
adcb
inc
jecxz
sub
xlat
lods
outsb
add
xchg
stos
sub
fcomi
and
xchg
ja
xchg
pop
hlt
or
xchg
sbb
pop
repz
adc
xchg
scas
ficomps
mov
cld
je
aad
lret
xor
std
adc
fcmovnbe
int
fdivrl
xor
sub
mov
jg
cwtl
movsb
mov
ret
pop
leave
cmc
adc
sub
test
mov
lret
sahf
adc
or
lds
stos
imul
cwtl
out
mov
scas
or
out
mov
jo
int3
pop
or
jp
or
pop
in
sub
pusha
inc
cmp
fmulp
fcomi
mov
imul
jg
mov
leave
lods
sub
int3
pop
inc
popf
push
sbbl
lahf
dec
xor
ja
out
test
flds
mov
sbb
jno
lcall
or
push
fsubrl
cwtl
sbb
pop
and
imul
addr16
and
ljmp
and
mov
in
movsb
push
les
addr16
mov
lret
pop
in
mov
jbe
xchg
out
and
mov
inc
scas
mov
lods
pop
sbb
mov
jne
nop
cmp
cmc
or
push
mov
stc
fistpl
and
jmp
cmpsl
sbb
pop
jge
jno
mov
and
lods
jge
jo
mov
int
cwtl
stc
stos
xchg
loopne
aad
test
xor
cmp
insb
sbb
imul
das
repz
or
int
and
inc
icebp
sub
push
bound
out
pop
sub
mov
and
cwtl
cwtl
mov
and
mov
mov
sbb
jne
adc
pop
lods
xchg
xchg
addr16
outsb
mov
nop
addr16
incb
arpl
xor
xchg
faddl
ss
sti
gs
fsubs
rcr
add
dec
pop
daa
push
rcrl
js
xor
imulb
lea
sub
outsb
cltd
mov
outsb
adc
jg
pusha
xchg
mov
cmp
dec
sub
push
pop
jp
out
loope,pt
cmp
jbe
cmpsb
pop
test
add
iret
lock
xchg
mov
fdiv
imul
call
push
imul
lods
fwait
loope
hlt
aaa
rcrl
and
sub
mov
add
frstor
sbbl
mov
xchg
add
xchg
cwtl
inc
lock
mov
pop
lcall
je
inc
movsb
cltd
xchg
es
xor
fs
cwtl
mov
xchg
ds
pop
mov
xchg
mov
jge
push
out
lds
cltd
xor
fwait
mov
scas
jg
push
or
jge
in
mov
sbb
push
push
push
lahf
daa
inc
arpl
mov
pop
test
repnz
and
sub
mov
sahf
cmc
mov
cmpl
fstps
fwait
inc
sbb
add
pop
mov
scas
xor
push
in
std
inc
jae
jns
testb
mov
cmp
pop
ljmp
cmp
sbb
mov
setg
and
cmc
daa
xchg
lea
dec
sub
repnz
clc
hlt
aas
clc
pop
pop
xor
sbb
adc
adc
aaa
nopl
stc
scas
in
push
std
loope
outsl
or
dec
repz
ss
mov
test
push
lcall
popf
cli
or
es
add
jnp
hlt
daa
hlt
push
mov
stos
test
lret
pop
rcrl
inc
jnp
sbb
xor
int3
arpl
pop
in
test
shrl
shlb
test
in
inc
outsb
xchg
movsl
test
popf
mov
ja
bound
pop
pop
sbb
das
sbb
cmpsb
xor
mov
bound
in
xchg
movsl
lds
icebp
cmp
adc
sub
cmpsb
or
gs
and
add
cmp
sbb
out
xchg
jbe
dec
popf
jge
jns
std
and
jbe
pusha
mov
mov
in
enter
test
and
adc
xor
lods
loopne
sub
movl
mov
and
lods
lods
daa
cwtl
je
gs
xchg
jge
xchg
xor
mov
repnz
pop
ja
dec
cmpsl
movsb
dec
into
adcb
dec
ficoml
sub
in
xchg
cwtl
cmp
sub
xor
pop
ljmp
sub
cs
sub
push
jge
les
push
mov
aas
fsubs
aas
sub
cmc
js
push
xchg
idivl
pushf
mov
sbb
aam
cmp
adc
daa
jns
mov
add
sbb
sbb
hlt
mov
xor
lret
push
and
adc
mov
insl
jnp
xor
call
cli
or
es
inc
xchg
add
insl
ret
aad
mov
pop
sti
lock
or
shl
xchg
xchg
mov
mov
adc
ljmp
dec
popa
int
pop
fnstenv
divl
xchg
jp
cmp
sbb
and
rclb
pminsw
mov
clc
shrd
cmpsl
lcall
pop
add
pusha
cmp
icebp
xchg
pop
ds
ds
and
jge
adc
mov
ds
jns
pop
add
push
push
dec
cs
popa
movsl
or
dec
fldt
lea
xor
jp
mov
pop
pop
mov
je
mov
dec
sub
jne
mov
xchg
inc
lret
lret
das
shll
sbb
sarl
dec
js
mov
mov
aaa
out
mov
and
mov
std
insb
pusha
sub
mov
popa
movsb
in
jb
xchg
mov
jo
or
ljmp
sahf
and
cmp
nop
loop
xchg
lahf
outsl
cmpsb
sti
icebp
nop
out
and
lret
clc
repz
lcall
sbb
adc
loope
xor
mov
or
mov
xchg
xor
sub
std
cmp
dec
and
inc
cwtl
cmpsl
xor
outsb
into
call
cltd
pop
jae
mov
xchg
xor
sbb
shlb
pop
mov
js
scas
out
out
push
and
inc
sbb
mov
mov
sub
loope
and
scas
stos
lods
or
iret
jns
ljmp
cmp
aad
jge
cmp
sub
sahf
sub
xchg
xchg
out
pusha
cltd
xchg
xor
sub
orl
js
mov
lods
push
das
jne
daa
divps
push
movsb
test
negb
add
imul
mov
mov
negb
xchg
mov
inc
lods
fnstsw
clc
nop
cmp
and
sbb
add
outsl
jns
inc
push
dec
cmpsb
aaa
arpl
icebp
xchg
sbb
iret
ret
ljmp
movsl
cwtl
int
add
sbb
shrl
sbb
fisubrl
aam
call
sti
mov
repz
mov
in
je
push
loope
pusha
cmp
cmp
jle
adc
in
xchg
cmp
sbb
add
jmp
mov
jle
cmp
jge
xor
xchg
and
adc
sbb
mov
fidivl
sbb
leave
cli
pop
gs
sbb
imul
scas
and
push
jo
mov
dec
fnop
add
mov
adc
arpl
xlat
mov
enter
xchg
scas
mov
jecxz
sbb
or
mov
ljmp
lods
in
cmc
jmp
sbb
subb
sbb
xchg
adc
in
or
adc
mov
lock
jp
nop
lods
fs
fs
xchg
or
and
aam
adc
iret
lods
inc
sbb
mov
and
xchg
pop
push
ljmp
adc
or
cmp
loopne
jno
push
ljmp
es
mov
fnstcw
jmp
fldenv
ret
xorb
xor
and
add
xchg
push
js
fdivrs
sub
or
xor
aaa
inc
jge
push
outsl
cld
add
dec
mov
jb
cwtl
dec
add
shl
push
int
daa
mov
iret
fsub
mov
negb
leave
aas
cmp
or
mov
sub
pop
int3
cs
inc
enter
push
cmc
push
inc
pop
xor
sub
out
and
add
xor
ret
bnd
push
int
push
in
mov
jb
test
pop
cli
jbe
pop
xchg
lds
std
mov
or
cmp
jae
rcrl
sbb
jne
clc
and
mov
cmp
shll
fwait
sbb
mov
jecxz
dec
clc
ja
sub
push
call
mov
outsl
cmp
popf
mulb
jnp
es
jecxz
dec
cmp
or
xchg
imul
das
pushf
ja
hlt
cwtl
inc
cltd
stos
pushf
cwtl
mov
and
dec
jns
mov
cmp
ljmp
lock
xor
sbb
sub
jno
xchg
cmp
push
mov
idivl
sbb
cltd
neg
mov
jne
mov
push
fldl
data16
pop
xchg
fcoml
cmp
pop
sbb
bound
leave
or
jmp
out
push
jae
loop
cltd
mov
cli
ja
fdivrs
insb
ljmp
stos
sbb
xor
jge
dec
outsl
jbe
out
ja
lret
pop
addps
scas
daa
rorb
sub
mov
inc
fs
xor
ss
mov
enter
and
imul
popf
xor
popa
cmp
std
loop
cwtl
scas
add
lods
pushf
sub
cmpb
popf
cwtl
into
das
mov
cli
in
call
cwtl
dec
loop
fadd
jne
into
xchg
sti
pop
cmp
sub
jg
je
cltd
push
and
inc
into
movsb
movsb
sub
scas
mov
mov
cmp
pop
sub
push
mov
ljmp
mov
lds
push
add
jmp
divb
jge
cs
and
nop
dec
pop
adc
push
ss
std
inc
std
jl
loope
sbb
sbb
cmpsb
sub
mov
adc
dec
jl
dec
ds
sub
pop
not
add
es
js
outsl
mov
adc
mov
stos
push
xor
pop
cs
add
xor
popa
push
negl
mov
mov
xor
enter
sbb
cmp
jnp
fdivl
divb
imul
scas
adcb
daa
sbb
inc
sub
fcompl
push
ret
pop
lcall
adc
jecxz
xchg
or
fsubrp
jne
popa
pop
cs
mov
cwtl
jle
cmp
push
mov
jle
cltd
fcoms
pop
sahf
mov
xor
or
xchg
sbb
fwait
push
adc
and
inc
aad
sbb
inc
pop
mov
ss
jp
testb
pop
aas
mov
push
adc
push
je
daa
inc
mov
push
jo
subb
add
jnp
cmp
lret
in
sub
fwait
js
jmp
sbb
cs
cmp
or
sub
jge
push
or
pop
enter
stos
icebp
rclb
xchg
xor
sti
sarb
mov
insb
popf
bnd
divl
imul
or
cmpsb
cltd
int
dec
xor
mov
mov
stc
shrb
in
cmp
sbb
in
and
gs
test
pop
pop
imull
jns
cli
dec
test
cmpsl
push
mov
push
test
sub
fsubl
fstpt
movsl
xchg
pop
jae
sbb
cmp
outsb
fyl2xp1
test
jecxz
pop
test
xchg
fistpl
mov
sti
inc
jge
cmp
sbb
jp
pop
jne
jge
scas
dec
sub
and
sbb
aaa
cmp
int
fldenv
sbb
jbe
jge
xor
jne
cmovbe
mulb
jge
sti
outsl
xchg
into
push
xlat
mov
xchg
inc
pop
fstps
andl
and
cli
sbb
pop
aaa
mov
inc
jge
dec
pop
stc
mov
lcall
push
or
pop
hlt
xchg
jle
lods
repz
lods
and
das
cmp
test
shll
xchg
pushf
sbb
stc
inc
jl
push
bound
push
out
mov
popf
sbb
int3
stc
fwait
pop
pop
mov
js
add
xchg
int
sub
arpl
push
dec
gs
in
mov
scas
ja
xchg
cmpsl
js
lock
outsl
pop
lcall
xchg
jo
pop
cmp
or
cmpsl
pop
fs
mov
xchg
cmpsb
sbb
fwait
push
mov
mov
push
jmp
in
leave
mov
je
div
data16
stos
jmp
xchg
xor
icebp
lods
outsl
mov
nop
jo
rclb
xchg
jle
in
add
dec
and
fs
bound
add
mov
movsb
pop
mov
xor
loop
enter
inc
in
xchg
sbb
mov
mov
fstp
aaa
or
push
fs
cltd
pushf
rorb
iret
cmp
lods
ljmp
and
pop
jg
xor
pop
jmp
vmread
call
cmp
sbb
fwait
imul
pop
or
ficoms
mov
std
and
fs
movsb
gs
or
xor
inc
jecxz
nop
aaa
jnp
jnp
out
test
or
xor
clc
outsb
xchg
adc
mov
mov
jl
popf
out
add
cmp
push
das
decb
lock
and
imul
clc
xor
or
push
cmp
lcall
pop
lret
pop
jecxz
ficompl
jne
imul
jne
mov
cwtl
adc
cmp
mov
xor
sbb
inc
jb
pop
addr16
xchg
add
mov
clc
mov
pop
arpl
sbb
inc
das
dec
fldt
cltd
adc
mov
stos
add
cmp
in
imul
js
lahf
mov
stos
sbb
add
scas
dec
cltd
xchg
push
pop
fistpl
mov
adc
inc
incl
js
loope
sbb
xabort
sbb
out
pop
sbb
cmpsl
xchg
jle
imul
mov
stos
movsl
daa
dec
sbbl
lods
or
iret
leave
imul
xor
rcrb
in
or
xchg
jge
jae
inc
cwtl
add
xor
xor
pop
icebp
andb
jg
add
imul
sbb
jno
es
mov
jmp
pop
les
aad
rcrl
xchg
xchg
xor
das
xor
fstpt
push
loope
fwait
xchg
cwtl
out
adc
and
adc
sub
flds
mov
nop
roll
ljmp
cmp
adc
jbe
gs
xor
ja
scas
push
out
je
mov
mov
bound
sub
dec
es
add
shr
loope
adc
push
hlt
jle
push
sub
nop
adc
sbb
cwtl
mov
cltd
sub
out
rorb
sub
or
jmp
ja
xchg
fnstsw
mov
xchg
sub
sbb
jne
jb
push
loop
scas
aas
sbbb
cli
adc
pop
mov
lret
jmp
add
pushf
ja
pop
cwtl
sbbl
sub
push
dec
sub
jns
mov
xchg
xor
push
and
cmp
outsl
cmp
test
add
dec
es
loop
shll
outsl
jp
push
shl
les
mov
daa
ss
sbb
in
pop
divb
rolb
cltd
or
xchg
fists
push
add
ljmp
rcll
pop
xchg
and
push
rorl
sub
cmpsb
mov
or
and
jne
push
popa
movb
jbe
andl
shrb
scas
stc
add
and
aam
mov
inc
shl
xchg
jp
mov
pusha
jmp
fmuls
jge
jns
xchg
bnd
lret
xor
adc
mov
cmpsl
lcall
pusha
stos
imul
repz
pop
pop
mov
lcall
cwtl
xchg
lods
xchg
add
daa
roll
clc
fnsave
adc
imul
jns
je
cld
xchg
push
dec
and
lret
xchg
dec
xchg
jae
cltd
jp
inc
push
pop
test
jge
mov
test
pop
xchg
sahf
push
popa
mov
cld
sub
rcr
cmp
xlat
mov
sub
pop
xchg
pop
fidivrl
fdivrs
icebp
repz
mov
mov
enter
insl
cmp
lods
sbb
subps
cwtl
sbb
mov
pop
jno
inc
jge
fldenv
or
sbb
mov
call
jnp
leave
scas
cmpsb
and
ret
pop
aam
pop
sbb
in
sub
sahf
shll
mov
adc
divl
mov
push
jmp
mov
fdivl
das
mov
data16
pushf
pop
aaa
jne
adc
das
mov
adc
fdivl
rcrl
or
lret
sbb
lods
cmp
fstpt
pop
dec
fldt
mov
xchg
push
sbb
lds
dec
daa
mov
pop
cli
rcrl
movsl
dec
lahf
cmp
push
stos
inc
push
daa
int
outsl
push
push
push
jge
sub
and
lret
mov
leave
or
cmp
lock
clc
scas
fcmovb
bound
push
shrd
push
add
mov
sbb
dec
mov
mov
adc
cli
sbb
sbb
loope
sbb
sub
sti
cmc
inc
inc
iret
push
mov
xor
sbbl
mov
hlt
ret
mov
cmp
rcrb
cmc
and
or
pop
popfw
xchg
fsubl
xor
mov
push
mov
sub
fcomps
mov
lods
dec
jb
pop
mov
cmp
jae
pop
test
shll
mov
sbb
inc
out
mov
cs
xchg
jmp
bound
add
sti
sbb
or
mov
or
lock
pop
pop
sbb
in
push
lods
mov
push
and
lds
xor
icebp
loop
fwait
sbb
mov
test
testl
dec
xor
nop
pop
xor
int3
je
xor
dec
inc
dec
mov
mov
decw
xchg
jmp
cmp
jae
mov
das
cmc
and
jmp
pop
fnstcw
test
testb
out
fsubl
mov
fsubrs
lea
mov
in
ss
bound
stc
fs
push
sahf
out
pop
jbe
sub
stos
les
loope
shll
add
xchg
rcrl
xchg
mov
jo
jmp
dec
mov
imul
xor
int3
add
xor
and
es
push
movb
aas
ret
sbb
xor
lret
repz
test
fisubrs
push
dec
pushf
scas
mov
das
mov
fldlg2
sbb
cmpl
dec
mov
aam
sbb
mov
mov
jge
add
gs
or
mov
dec
xor
jmp
rcrl
aam
push
jbe,pt
mov
std
xor
fimuls
rcrb
and
mov
ret
orl
repnz
out
movsl
dec
inc
mov
mov
add
adc
sub
sbbb
fstps
cmp
inc
sub
mov
pusha
lret
imul
bnd
xchg
popf
push
push
sub
add
and
adc
in
cmpsl
pop
mov
and
inc
or
add
fbld
adc
fcmovnb
sbb
push
pop
xchg
rol
push
pop
sub
jg
das
mov
lcall
mov
loop
pusha
inc
into
ljmp
in
jle
jmp
stc
fnstcw
and
test
and
dec
jae
sbb
sbb
pop
jge
cs
adc
pop
call
mov
movb
jge
and
cwtl
imul
addl
and
ret
mov
push
sbb
cld
sbb
movsl
mov
xchg
movsl
stos
sbb
lahf
pushf
in
and
pop
and
mov
sub
popa
push
cwtl
and
lret
mov
sti
xchg
enter
stos
and
lods
lahf
mov
in
jge
cmc
scas
aad
movsb
sbb
jnp,pt
sahf
aam
stc
jge
test
clc
adc
cltd
mov
in
movsl
and
shl
pop
dec
cmc
gs
inc
daa
xchg
xchg
mov
pop
mov
mov
add
loope
sahf
testl
push
pop
pop
sbb
or
or
sahf
dec
sbb
sub
call
test
jp
add
mov
add
scas
and
jge
and
ss
xor
aas
dec
xchg
pop
sti
fcomps
jecxz
dec
sub
push
sbb
pop
jb
inc
pop
mov
pusha
test
test
mov
subb
and
int3
jecxz
std
push
jl
inc
icebp
bound
mov
mov
fsubl
dec
fldcw
clc
push
insl
and
iret
adc
adc
cmp
jmp
out
xor
out
jno
fnstenv
add
xorb
lret
cwtl
cltd
inc
mov
js
or
imul
adc
in
inc
or
xchg
scas
jge
mov
jo
sub
jns
sub
shrl
sbb
cmpsb
xchg
mov
aaa
lods
inc
xchg
sarb
enter
pop
jo
in
adc
scas
daa
iret
stc
jmp
aam
add
repz
dec
je
scas
call
sbb
sbb
int
mov
aas
sub
inc
mov
and
mov
xchg
cltd
pop
pop
push
aaa
outsb
sub
out
shrb
sub
jae
pop
lds
repz
mov
add
xor
mov
jbe
push
dec
pop
push
pop
pop
mov
jno
mov
pushf
sbb
pop
aaa
cmc
icebp
lret
cmc
and
outsl
iret
jnp
lds
je
aam
ja
pop
push
jmp
sbb
in
xchg
lcall
push
std
pop
into
idivb
cmc
jge
mov
dec
and
jge
sahf
mov
push
das
pop
jmp
xchg
jnp
or
jl
aad
xor
sub
rcrl
sti
jb
je
and
pop
add
leave
scas
pop
popl
sub
sbb
dec
btr
adc
push
and
arpl
mov
dec
loop
dec
loop
push
std
push
out
rorb
jbe
cmp
push
mov
sahf
fsub
cmp
mov
insb
mov
pop
push
xchg
inc
pop
pop
mov
mov
cwtl
pop
popf
arpl
aam
mov
bt
and
popf
and
lods
ljmp
and
std
jne
rcll
push
cmp
cltd
sub
mov
test
mov
push
rcl
dec
jg
fldenv
iret
movsl
jmp
sub
int3
cs
clc
lea
xchg
jp
mov
popa
lock
mov
xchg
fdivs
jp
adc
xchg
jno
mov
push
cmp
data16
pop
sti
mov
jp
sbb
popa
pop
xchg
stos
push
sub
lds
sbb
mov
out
mov
dec
dec
scas
fadds
leave
in
hlt
jge
mov
ret
aad
cltd
idiv
stc
rorb
popf
lds
pop
adc
aad
fadd
stc
lcall
mov
shll
jg
pushf
jae
and
leave
xchg
cmp
mov
out
xchg
je
int3
pop
out
lods
dec
lods
push
leave
test
dec
outsl
inc
and
sbb
dec
pop
sbb
sbb
stos
push
xchg
imul
jbe
mov
or
push
inc
xchg
xorl
iret
dec
and
scas
mov
xor
in
sbb
lahf
shll
sub
pop
xlat
sub
sbb
ljmp
xchg
rol
xor
lds
insl
pop
bound
rep
enter
mov
cmovo
xchg
push
mov
movsl
and
xchg
jl
enter
stc
and
xor
cltd
andl
aam
jo
out
xchg
out
repz
aaa
sub
cli
test
or
test
inc
or
adc
cli
push
or
pop
xchg
jno
leave
jo
leave
pop
mov
arpl
adc
ds
les
notl
ss
enter
and
sbb
mov
loop
imul
sbb
rcll
pop
adc
dec
or
mov
out
repz
out
cmpsb
add
add
movl
ss
dec
add
pop
outsl
cltd
add
push
push
mov
sbb
outsl
push
pop
fidivl
push
std
bound
ficomps
mov
cmpl
int3
push
and
addl
sti
enter
sub
imul
cmp
lret
into
xor
test
jmp
xor
lahf
addr16
aam
lcall
in
stc
insl
jl
in
js
outsb
movsl
sbb
lahf
icebp
pop
in
cmpsl
jge
xchg
clc
sub
mov
lea
pop
out
jge
adc
rcrl
and
mov
pop
cltd
lock
add
mov
lcall
lods
push
loope
mov
push
cmp
adc
and
test
loop
imul
cmpsl
push
sbb
or
test
xchg
xor
outsb
outsl
sub
daa
pop
rol
pop
cmp
das
test
aaa
outsl
leave
in
stos
sarb
popf
stos
dec
xor
and
pop
cli
aaa
sbb
daa
sti
push
jnp
push
jo
xor
jns
pusha
fimull
and
insb
sbb
add
pop
jp
sub
push
sub
sub
ds
inc
xchg
sbb
sbb
out
add
push
dec
lods
test
sbb
mov
in
push
jnp
subb
divb
jo
mov
jo
cmp
dec
adc
bound
cwtl
fcompl
jnp
xchg
jge
pop
sbb
mov
out
mov
sub
incb
movsb
popa
cmp
in
ficoms
jae
push
mov
dec
test
mov
addr16
or
or
jp
dec
fwait
sahf
add
dec
out
fisttps
push
aam
xor
or
pop
pop
test
out
and
sbb
dec
xorb
sbb
jae
fs
sub
mov
les
pushf
pop
pop
sub
sub
xor
lcall
add
xor
outsl
addr16
cmp
fdivrs
add
adc
sbb
cmpsb
xchg
push
mov
mov
jle
sbb
lret
pop
mov
lcall
cld
and
js
jo
mov
mov
cs
sbb
mov
mov
xor
je
iret
pop
pop
mov
add
aas
imul
aaa
fst
aaa
mov
aam
popa
jns
outsl
imul
scas
hlt
cmpsb
shr
fadds
scas
add
dec
or
dec
or
dec
stos
add
xchg
pop
ss
lea
std
push
aam
pop
push
in
imul
cs
sbb
push
insb
jo
aas
pop
and
jp
sbb
notb
cmp
inc
pop
repnz
jns
pusha
js
fsts
mov
sbb
inc
add
fdivs
leave
dec
shlb
repz
pop
je
jg
icebp
popa
aaa
jge
stc
imul
insb
in
jno
addr16
push
xor
dec
xchg
ljmp
es
xchg
dec
mov
scas
mov
mov
inc
enter
jo
lret
xor
jo
push
cs
jns
out
add
lahf
sbb
movq
adc
scas
pushf
aam
es
xorl
lea
xor
mov
dec
pop
cmp
push
sbb
xor
pop
repnz
add
xor
jmp
cmpsl
and
jl
data16
iret
push
or
iret
adc
sub
mov
dec
hlt
js
rorl
fs
das
mov
imul
pusha
cmp
mov
jge
outsb
sbb
xchg
pop
outsb
mov
add
xor
lret
mov
cmp
rcll
mov
loop,pt
xor
inc
mov
notl
out
and
imul
popa
leave
arpl
mov
jns
sbb
mov
mov
js
xor
mov
pop
xor
lds
je
outsl
push
aaa
ljmp
inc
sbb
std
push
jns
mov
fs
and
insl
std
jp
mov
sub
xor
jl
jge
fsubrs
push
scas
fisttps
mov
sbb
sub
pop
sbb
push
insb
fisttpl
cli
es
pop
pop
cmpsl
pusha
orl
inc
jg
mov
nop
or
cmp
pushf
fnsave
iret
test
xor
sub
rcrl
pop
jno
jno
das
orl
add
pop
sti
insb
and
divb
sbb
mov
idivl
mov
add
mov
mov
in
imul
std
js
roll
outsl
sbb
jb
rorl
mov
cmp
loopne
or
jge
adc
lock
inc
jno
inc
aas
push
pop
out
mov
fs
push
sbb
push
xchg
sbb
ds
aaa
in
sbb
and
lea
mov
sbb
arpl
aas
lret
out
std
xchg
jb
add
mov
push
push
mov
push
nop
mov
fldenv
arpl
repz
inc
repz
xor
mov
nop
mov
and
xchg
mov
cmp
jnp
inc
movl
mov
call
leave
jnp
jns
out
pop
hlt
mov
pop
pusha
dec
loope
ret
ror
xor
xchg
xchg
xchg
data16
add
sbb
rclb
rcll
mov
pop
pop
xchg
mov
ljmp
adc
adc
inc
cmp
and
and
sbb
enter
loop
jp
sub
sbbb
rol
inc
icebp
push
pushf
pop
ds
jbe
push
popw
jp
gs
dec
push
sbb
xchg
lods
pop
sub
in
inc
pop
jmp
je
cltd
xor
push
aas
sti
jge
push
and
dec
lods
rclb
bound
pushf
or
xchg
dec
or
test
or
dec
es
mov
jno
xchg
cmp
dec
xchg
ds
cld
cwtl
enter
sti
mov
lahf
pop
add
aaa
fcoms
jbe
in
movsb
sahf
jp
and
pop
sti
movsb
xchg
pop
outsb
imul
inc
xor
das
std
inc
es
push
lock
jbe
mov
push
xorb
sub
ss
mov
cmp
sub
inc
addb
cltd
idiv
cld
das
lar
pop
and
sbb
jno
mov
dec
inc
sbb
adc
sbb
arpl
add
lods
xlat
pop
lahf
outsb
sub
divl
mov
outsl
and
dec
popf
push
jl
xchg
aad
ss
repz
pop
add
ja
ret
mov
das
test
jl
clc
leave
mov
jle
ja
nop
ret
xor
roll
sub
int
out
sbb
push
push
nop
stos
adc
mov
cmp
popf
test
fsubs
jo
push
cmp
jae
mov
stc
jne
js
sub
inc
add
pcmpgtd
pop
je
cmc
fmull
sbbw
fstps
push
inc
filds
cwtl
clc
mov
mov
fisubrs
push
arpl
jns
por
and
das
cmc
sub
das
mov
sub
jo
jo
sbb
adc
push
pop
pop
or
testl
lods
outsb
je
pop
into
les
inc
pop
push
sub
push
xchg
inc
push
mov
outsl
loopne
push
or
mov
mov
leave
or
mov
insl
mov
mov
sbb
addr16
ss
test
sbb
mov
dec
ja
mov
and
jne
push
divb
dec
cld
xchg
outsl
cmp
test
mov
or
hlt
jno
std
stc
addr16
adc
outsl
fildl
cwtl
enter
jb
stc
add
fsub
adcb
xor
leave
push
dec
inc
icebp
sbb
xchg
stc
add
je
clc
aaa
std
iret
push
jle
push
das
push
pop
sbb
pop
addb
ds
push
sub
sbbb
jl
aad
mov
ljmp
sbb
jbe
dec
iret
cld
cmp
cmp
addr16
sbb
push
jbe
jecxz
lods
push
and
addr16
icebp
sub
cwtl
in
and
clc
ja
cmpsl
in
gs
pop
or
jae
sbb
data16
lret
mov
or
lcall
dec
insb
gs
push
sub
outsb
lea
dec
fcomps
lar
pop
outsl
cmpb
fs
xor
xor
adc
cmp
xor
pushf
icebp
mov
pop
adc
ficompl
sub
je
inc
mov
dec
push
sbb
in
sub
sub
stos
nop
jmp
ds
mov
ds
icebp
add
mov
sbb
dec
popf
aam
add
cwtl
dec
test
xchg
or
scas
sbb
jp
cs
push
out
xchg
test
and
test
popf
mov
add
loope
dec
cmp
or
mov
mov
testb
shll
in
xchg
clc
inc
mov
gs
or
nop
jbe
cmp
mov
ret
iret
jp
and
inc
jge
enter
rorl
jp
push
stos
mov
nop
xor
scas
repz
jbe
clc
out
mov
clc
ds
es
jno
test
insb
icebp
stos
xor
mov
adc
push
popl
cmp
xchg
add
out
xchg
iret
mov
jecxz
push
ret
xor
push
pusha
cltd
push
fcomps
stos
push
leave
pop
sub
pop
mov
lret
xchg
mov
push
fisttpll
mov
cwtl
aaa
es
lcall
outsl
push
push
and
in
mov
push
insl
mov
pop
jne
scas
push
movsb
add
icebp
stos
in
lock
sbb
ficompl
sub
lahf
jmp
pop
mov
mov
repnz
xchg
xchg
inc
ret
dec
test
sbb
stos
sbb
jae
and
inc
jo
lret
jp
jo
ljmp
jle
sub
xor
xorb
in
fistpl
rcr
push
cs
nop
or
fst
pop
jecxz
add
or
adc
xchg
mov
push
pop
pop
pop
inc
lahf
mov
sbb
cmp
and
inc
pop
scas
inc
cmp
lcall
ret
adc
xchg
mov
pop
popa
dec
bound
bound
es
sub
lods
mov
add
dec
out
cmp
fstps
cmp
popl
push
daa
adc
xchg
ficompl
mov
pop
das
push
cwtl
or
lcall
inc
mov
frndint
xor
test
pop
in
and
sbb
jno
mov
mov
sub
fldl
jbe
mov
out
pop
jge
cli
data16
xor
cmpl
les
lcall
xor
pusha
test
pop
cmp
into
dec
xor
mov
cmovg
jne
adc
in
inc
out
ljmp
and
mov
mov
int
xlat
xchg
std
ret
imul
sbb
sbb
sub
out
xorl
jae
cmp
pop
jb
dec
xchg
ss
das
fistl
aad
sbb
jmp
dec
xchg
or
inc
repnz
addr16
sbb
cld
jne
and
fstpt
loope
mov
sub
push
sbb
mov
add
fldenv
jno
mov
movsb
mov
push
arpl
lcall
testl
cwtl
push
push
xchg
inc
lret
jo
int
movsb
sbb
fsubp
outsb
lahf
pop
sbb
test
and
push
sbb
mov
cmp
sub
mov
add
xchg
les
adc
test
or
and
or
loop
cmpsl
mov
adc
inc
or
popl
in
into
dec
aaa
pusha
sahf
mov
pusha
push
xor
jb
cmp
fld
or
scas
dec
lds
xor
ret
and
mov
movsl
cmp
lcall
push
negl
lcall
and
add
lds
js
std
jno
push
mov
hlt
imul
xor
mov
jmp
cltd
cmc
and
data16
dec
mov
cli
sahf
nop
test
faddl
inc
jecxz
sbb
loopne
cmp
adcl
jecxz
jmp
aam
xchg
loopne
push
mov
lods
ret
in
mov
jge
and
inc
test
push
mov
scas
lods
das
mov
inc
jge
push
bound
mov
sahf
pop
cmp
mov
xor
aad
sub
imul
vpaddsb
dec
popf
jge
cltd
aaa
js
mov
je
nop
dec
mov
mov
ss
out
fsubs
repz
negl
sbb
sbbb
stc
dec
in
xor
rorb
xor
xchg
jns
push
in
mov
and
and
fcmovnu
pop
scas
jg
push
scas
bound
xchg
xor
std
dec
push
outsl
sahf
leave
mov
mov
xchg
es
sarl
mov
and
jo
sbb
sbb
ja
popf
sbb
mulb
inc
push
ffree
or
and
test
mov
outsb
das
jo
mov
imul
mov
mov
ds
pusha
pop
sbb
decb
test
pop
mov
aaa
jmp
cmp
fidivs
rcl
stc
lahf
ficomps
rcrb
xor
push
out
aad
clc
xchg
aad
lods
ficoml
in
xadd
xor
inc
stos
xor
insb
std
sahf
xor
mov
in
in
xor
call
es
xchg
add
mov
mov
push
cmpsb
jae
and
sub
insl
mov
cmp
call
mull
cmc
push
adc
jge
insb
jbe
xor
shrl
and
xor
cmp
jle
shl
arpl
aam
cmpl
mov
xor
cmp
das
js
leave
pop
add
sbb
cmc
aaa
push
das
adc
sbb
sub
push
iret
pop
mov
sbb
aaa
cmp
xchg
pop
mov
aaa
push
test
sub
xchg
xchg
xchg
adc
data16
push
cld
fiadds
jo
adc
adc
pop
sti
pop
in
mov
stos
or
sub
inc
and
pop
dec
mov
or
sub
popf
xchg
lock
movsl
insl
sbb
rcl
push
pop
cmp
or
add
xchg
ja
mov
mov
lock
out
xor
push
mov
jnp
push
test
mov
inc
inc
fdivrl
fwait
lock
mov
mov
inc
add
movl
mov
dec
repnz
sbb
mov
xchg
loopne
or
shll
xchg
dec
jl
loope
xor
mov
xor
push
mov
adc
inc
sbb
jbe
adcl
shrb
and
or
xchg
outsb
call
out
sub
mov
mov
fnstsw
xor
popf
jo
adc
or
cmc
lds
fldt
ds
insb
sbb
filds
aaa
sub
and
add
leave
xchg
xlat
scas
dec
lock
adc
in
dec
das
leave
mov
fs
xchg
pushf
or
xor
xchg
stos
movl
jnp
or
pop
dec
jo
out
mov
xchg
mov
jae
stc
add
sti
jnp
mov
outsl
cmp
call
popf
jmp
loop
lds
mov
call
movsb
pop
movsb
pop
je
lcall
stos
push
add
xor
bound
insl
aas
and
cld
scas
outsl
and
in
cmp
repz
in
push
inc
jb
les
mov
cmpsb
out
add
adc
push
sub
sbb
outsl
and
fdivr
mov
mov
xlat
jg
xor
les
ss
sbb
idivl
lcall
mov
or
pushf
call
push
push
insb
mov
fs
xchg
mov
sub
dec
fdivrl
shll
insl
cmp
pop
ja
lret
and
add
pop
and
arpl
sbb
and
adc
fs
cmp
inc
andb
mov
fcmovnb
xor
aaa
stos
add
in
inc
movsb
loop
sbb
lods
repz
adc
test
int
mov
pop
outsb
dec
lahf
and
in
popf
xchg
sub
fs
cmp
pushf
into
xchg
inc
arpl
inc
ss
dec
jne
or
pop
aam
mov
xor
fistl
ss
ret
out
mov
std
xchg
cmpsl
dec
and
push
jecxz
pop
stos
addr16
mov
sbb
or
fcomps
dec
stos
inc
dec
ja
int3
sbb
and
pop
imul
mov
xor
push
outsl
ljmp
cmpsl
ficoms
fdivs
push
lahf
mov
mov
push
and
sbb
mov
sbb
dec
je
out
xchg
rol
in
subb
mov
arpl
jbe
mov
push
das
movsb
xor
push
aaa
pop
jns
in
xor
fildl
pop
pop
push
ror
lret
inc
cmp
icebp
jg
xor
mov
movsb
cwtl
cmc
test
scas
add
pop
mov
add
pop
mov
lahf
sub
js
and
cmp
cmp
xor
add
fidivrs
dec
aaa
test
mov
pushf
dec
pop
popf
sbbl
jp
sbb
mov
std
rorb
inc
push
gs
jl
es
dec
inc
jo
dec
cmp
test
add
stos
inc
mov
js
sbb
scas
lds
test
sub
sbb
fstpl
leave
dec
or
inc
xchg
pop
lods
enter
dec
mov
sub
jne
pop
sti
adc
mov
mov
in
fsubs
cmp
pushf
mov
mov
test
fldt
jo
dec
inc
xchg
sar
sub
jns
into
pop
push
or
fwait
mov
sbb
mov
pop
xchg
sbb
inc
push
sti
inc
adc
xchg
dec
cmp
repnz
add
sbb
inc
and
inc
dec
jp
lcall
push
jge
lods
loope
mov
mov
pop
repnz
pop
xor
addb
and
es
mov
cwtl
mov
sbb
sbb
push
sbb
gs
imul
pop
popf
lahf
out
sub
jo
cmp
inc
sbb
test
push
and
adc
in
insl
fcomps
mov
hlt
pop
xchg
adc
inc
jne
xor
xchg
xor
lcall
xchg
ss
idivl
xor
and
push
inc
mov
or
js
sbb
pop
mov
and
xor
cmp
cmc
out
sbb
fidivrl
push
mov
and
sub
sub
pop
test
jge
pop
sub
cmp
pusha
pop
jge
inc
mov
and
add
mov
or
das
ss
ret
out
or
fldenv
js
push
cmp
mov
mov
push
jbe
jae
xor
data16
push
inc
mov
cltd
imul
inc
je
shlb
std
fwait
pop
in
fs
loop
jge
rcrb
arpl
push
or
xlat
xor
sbbl
jl
or
xor
xor
into
cmp
lcall
xlat
cmp
std
das
cmp
popa
adc
shll
aaa
mov
mov
or
xor
xchg
fwait
shll
ret
adc
adc
jnp
push
jno
cwtl
xchg
jbe
iret
jmp
cmp
cmp
enter
insb
cwtl
pop
add
jmp
frstor
sbb
nop
and
adc
fstpl
xchg
clc
lock
mov
add
out
or
lahf
inc
add
dec
mov
push
push
andl
sbb
addr16
loop
sbb
mov
aaa
stos
fs
adc
jmp
lret
out
adc
inc
gs
lea
sbbl
idiv
and
shrb
add
fcoms
jmp
shr
icebp
adc
or
sbb
cmpsl
sbb
lods
xor
and
mov
cmp
sbb
pop
mov
adc
cmp
sbb
mov
fsubr
scas
lods
jmp
xor
or
sbb
into
push
cmp
push
bound
sbb
aad
mov
fucomp
mov
mov
xchg
sbb
movsb
or
in
xorb
loopne
movsl
mov
cltd
outsb
in
aaa
loope
rcrb
sbb
ja
ss
pop
nop
scas
lahf
xchg
ret
outsb
into
add
ss
test
xchg
jl
out
dec
nop
and
ret
dec
stos
mov
rol
jne
call
adc
jae
fldt
iret
jnp
mov
push
and
mov
mov
leave
mov
sbb
add
fisubrl
dec
aaa
sbb
fisttps
mov
ret
rcll
int3
sbb
xor
sahf
mov
push
dec
int3
hlt
dec
les
mov
js
cli
stos
fistpl
push
jns
dec
inc
sub
mov
mov
mov
mov
xor
fcoms
jge
push
sub
sbb
xlat
cmp
push
xchg
cwtl
aad
imul
test
cmpsb
mov
and
cmp
sbb
jle
sbb
cmp
cmpsb
xchg
cmp
cld
movsb
dec
aaa
scas
add
in
mov
sbb
dec
and
imulb
jg
jmp
adc
xchg
out
jp
ud2
pop
lods
pop
add
arpl
aad
jecxz
and
int
pop
mov
lret
xor
fdivs
cwtl
mov
ret
mov
sahf
lret
or
push
pop
cmp
iret
nop
ja
or
fs
pop
cmp
js
repz
lods
mov
sub
enter
xchg
mov
dec
pop
andl
aaa
popl
inc
xchg
out
out
repz
lret
std
adc
gs
jecxz
addr16
inc
hlt
into
fisubs
sub
xchg
adc
xchg
cmpl
push
or
mov
jo
leave
mov
pop
pop
pushf
repz
dec
stos
les
adcb
add
mov
mov
inc
push
adc
fwait
pop
sub
out
inc
jae
fstpl
adc
mov
push
sbb
xor
outsb
sbb
das
test
mov
test
aaa
push
cmp
rcll
mov
fisubs
rcrl
sub
insb
pop
cmp
test
cltd
les
insl
mov
rcll
jns
les
loope
adc
push
loopne
sub
pop
xor
ficoml
fnstcw
xchg
mov
arpl
pop
les
lcall
dec
mov
adc
mov
mov
xchg
int
lcall
pop
xchg
fs
sub
out
sub
sbb
inc
addr16
sahf
cmpsb
les
push
testl
or
insl
sub
clc
jecxz
dec
stc
out
movl
fld
fldt
cmp
je
pushf
movsl
xor
lcall
xor
lea
add
addr16
inc
ljmp
sub
pusha
fldenv
adc
push
sbb
repz
mov
jns
xor
push
sub
ja
popa
pop
andb
add
aas
insl
aas
shlb
dec
add
pop
mov
pop
pusha
outsl
mov
fsubl
call
pop
cmp
sti
xlat
sahf
lahf
push
inc
mov
add
inc
lds
jge
daa
stc
lea
aam
xchg
pop
int
scas
cwtl
sub
or
sbb
cmp
pusha
inc
adcl
lock
notb
outsl
lock
cmpsl
push
xchg
pop
and
pop
and
cwtl
ljmp
enter
push
lea
xlat
movsb
dec
mov
cmp
lret
or
xchg
ret
sbb
push
fwait
and
xchg
and
and
add
sbb
cmp
test
jge
pop
jbe
stc
mov
sbb
jecxz
cmp
jo
sarb
shll
jns
int3
adc
sbb
dec
push
sub
push
mov
cld
or
mov
sbb
enter
popa
xchg
jbe
adc
test
sbbl
jo
sub
hlt
sbb
into
daa
jge
stc
mov
fcmovu
push
mov
pusha
lock
mov
lock
imulb
and
dec
rclb
popa
pop
add
dec
cld
dec
pop
and
sub
and
fistps
mov
fidivrs
sahf
lcall
inc
mov
sbb
outsl
loopne
adc
scas
and
lahf
cli
push
insl
xor
out
int
pop
cmp
neg
xchg
test
adc
pop
cmpb
mov
call
outsb
and
negl
aas
sbb
aad
imul
sti
cmc
mov
pop
mov
popf
lret
sbb
jle
ljmp
leave
call
neg
icebp
pop
ret
push
dec
aam
jo
out
xlat
jge
aaa
mov
add
mov
and
or
adc
push
aam
jmp
es
mov
nop
and
cmp
cmc
push
push
in
leave
ficomps
frstor
lahf
js
or
aam
jle
inc
in
pop
dec
pop
or
js
outsl
jno
fidivl
fstpt
adc
lcall
scas
movsl
out
clc
mov
outsl
ret
in
cmp
sbb
in
mov
sahf
lret
imul
aas
loope
xchg
xor
and
xchg
loop
pop
xor
xorl
jmp
lahf
mov
out
lret
in
push
push
push
xor
xchg
cld
rcrb
std
xor
add
jns
and
les
mov
dec
in
scas
ss
push
jle
loop
sbb
in
mov
jns
or
xor
and
es
testl
into
in
xchg
adc
sub
mov
push
je
and
stos
pop
faddp
lea
jl
pop
or
sub
mov
fdivr
pusha
mov
xor
das
ds
fcomp
das
std
cmp
inc
insl
sbb
std
in
shll
lcall
std
mov
pop
dec
sbb
jae
leave
jg
in
ror
das
jge
dec
fnstsw
daa
sahf
jmp
mov
mov
sbb
push
js
fs
imul
ljmp
jge
je
xor
fstps
push
iret
push
jno
xchg
leave
cmpsb
adc
test
sbb
sahf
in
push
loop
movsl
pop
sub
ljmp
jmp
cwtl
addl
es
jno
aad
stos
cmp
sbb
cwtl
je
or
and
int3
mov
repnz
lcall
sub
lea
lahf
pop
pop
ss
dec
jnp
lea
inc
xor
mov
cli
fldt
hlt
inc
das
popf
mov
xchg
stos
rolb
add
scas
mov
ja
push
test
lahf
lods
js
push
push
push
aaa
leave
cltd
je
out
addl
mov
ljmp
inc
sub
adc
xlat
mov
pop
rorl
sbb
sbb
sbb
in
dec
push
mov
scas
add
pop
icebp
jne
pop
cmp
or
sub
jnp
int
repz
adc
mov
subb
icebp
sbb
aas
daa
xchg
xchg
into
test
adc
lcall
sbb
push
lret
xor
rorl
das
gs
sbb
ror
loope
xor
ret
imul
sbb
push
lgdtl
push
mov
mov
mov
scas
mov
or
outsl
jmp
jecxz
xchg
jbe
aad
jne
sub
clc
xchg
pop
test
and
lret
push
jle
inc
outsb
mov
mov
in
lret
sbb
movsl
sbb
add
rcll
loopne
jp
dec
cmp
push
js
in
popf
loope
sub
jg
cmpsl
pop
jnp
or
ss
repnz
mov
rcrb
jno
not
cmp
pop
dec
call
push
pop
rorb
mull
inc
pop
dec
adc
outsl
js
fcoms
out
mov
aaa
popa
frstor
sub
adc
lods
inc
cs
inc
movb
in
aam
invlpg
mov
jno
out
mov
aam
sub
icebp
mov
je
mov
dec
in
push
fisubrl
packsswb
clc
sub
aad
xchg
sbb
rorl
mov
daa
or
aam
outsb
ss
dec
leave
nop
cli
or
out
xor
fisttpll
push
mov
adc
pop
jg
insl
pop
ss
and
pop
cld
jae
jnp
nop
aas
jmp
mull
fs
movsl
cmp
gs
loope
mov
iret
jge
dec
pop
fwait
lcall
push
mov
dec
jp
xor
js
sbb
sbb
add
pop
mov
pushf
movsb
loopne
outsl
icebp
xorl
cli
xchg
repz
cmpsb
aaa
cmp
subl
or
xor
loopne
int3
xchg
js
cwtl
pushf
and
dec
pop
sub
sub
es
cmc
cmp
sbb
xchg
stos
xchg
daa
jle
loop
jp
les
psubw
cltd
jns
out
cmp
je
aas
aad
dec
lcall
pop
lahf
shll
ficomps
mov
dec
inc
cli
push
pop
cwtl
repz
aad
mov
fdivs
sub
adc
daa
jno
fadd
mov
aaa
cmp
sbb
xor
gs
je
and
sbb
rclb
pop
sbb
push
loop
loopne
mov
sbb
pop
mov
hlt
mov
and
sbb
jle
dec
ljmp
sub
and
dec
pop
rorb
in
aaa
popf
xor
inc
ds
pop
cmp
and
daa
addr16
sbb
xchg
jp
push
fildl
add
adc
jno
andb
xor
arpl
and
sbb
sbb
ljmp
in
lret
gs
pop
shll
pusha
lcall
daa
fnstsw
dec
sbb
jge
bound
xchg
inc
inc
fsubrl
int
sbb
mov
stos
ret
fadds
movsl
cmp
xchg
xlat
dec
loop
cmc
aam
jb
outsl
add
adc
rcrb
sbbl
push
jbe
nop
dec
icebp
xor
inc
cs
xchg
aas
lods
scas
aaa
dec
add
lahf
xor
pop
sahf
xchg
pop
add
shll
test
pusha
cltd
in
das
mov
outsl
bound
adc
fcomip
xchg
add
xchg
xor
mov
je
mov
outsl
outsl
enter
add
xchg
outsb
mull
aas
stos
xlat
out
pop
jge
ret
mov
jmp
mov
pop
clc
and
mov
mov
cmp
icebp
mov
test
push
fsts
loop
cmp
repnz
cmp
cmpsb
xchg
and
push
addl
cmpsb
jp
sbb
pop
xchg
ffree
popf
mov
cmpsb
notl
and
std
ficoms
cmp
arpl
mov
iret
shrl
iret
mov
or
mov
iret
xor
mov
and
sarb
shll
or
test
scas
mov
jge
push
subl
iret
pop
sarb
enter
iret
cmpsb
fcmovne
into
cld
jb
ds
js
lea
or
call
call
lret
adc
mov
and
mov
or
popf
jae
and
jb
xchg
nop
dec
lea
arpl
sub
sbb
xchg
mov
in
jg
cli
cmp
and
shlb
jne
sub
jo
adc
outsl
and
leave
pop
jmp
sbb
or
sub
add
repz
nop
je
subl
mov
sub
lcall
fs
sub
shrl
orl
cmp
jge
add
mov
pop
mov
stc
or
inc
insl
pop
jecxz
pop
pop
and
aaa
mov
roll
sub
pop
lods
popa
jns
jmp
push
test
out
ljmp
movsl
je
arpl
sbb
xor
aaa
cmp
call
mov
mov
rcrb
stc
mov
ss
mov
rep
push
xchg
scas
sbb
cmpb
xchg
and
push
pop
pop
cmp
je
xor
jo
and
dec
mov
sbb
outsl
jno
mov
cltd
xchg
das
sbb
xlat
cld
int3
outsl
flds
rorb
ds
cmp
or
sbb
adc
mov
xor
or
jae
sbb
cmp
xchg
dec
mov
test
fstl
repz
sub
pop
stc
inc
mov
ss
fsubrl
push
outsl
leave
inc
push
cwtl
lock
jp
pusha
pop
inc
xchg
pop
and
and
cmpsl
inc
shlb
mov
das
and
inc
jbe
ret
sbb
jo
jp
jnp
enter
out
jns
sub
frstor
pop
push
add
mov
pushf
pop
xchg
jbe
pop
in
jecxz
cmp
adc
call
scas
push
xchg
out
repnz
sub
add
leave
popa
jns
xchg
sarl
leave
insl
aam
xor
mov
xchg
cmp
xlat
xchg
popf
mov
clc
or
and
popf
sub
adc
mov
call
and
sbb
aad
test
clc
add
jno
dec
mov
xchg
mov
add
xlat
lcall
mov
xor
test
push
jmp
icebp
xchg
mov
bound
adcl
pop
pop
pop
ljmp
mov
sti
mov
sbb
hlt
pop
fnop
jnp
int3
push
mov
repnz
jb
mov
lea
loopne
cwtl
push
les
popa
cmp
or
xchg
mov
cmp
jb
enter
faddp
fsubs
loop
jmp
cwtl
or
sub
addb
xchg
arpl
aad
jl
and
add
inc
mov
cmp
popf
mov
cli
jae
addr16
xchg
push
adc
daa
cmp
cs
adc
aad
fs
mov
cmp
cmpsb
in
ss
enter
call
out
clc
mov
xchg
mov
jae
push
enter
sbb
stos
fisttpll
cmp
dec
leave
sbb
jge
inc
pop
jle
int
fcmovnu
fsts
mov
jbe
outsl
adc
push
mov
sbb
mov
jnp
rcl
and
mov
dec
stos
mov
rcrb
jp
jl
aaa
scas
jecxz
scas
shl
cmp
xchg
int
sbb
mov
sti
enter
mov
xor
aam
jns
sub
and
lcall
mov
jo
insl
xchg
mov
add
cwtl
pop
out
cli
xlat
out
rcrb
outsl
pop
cmp
stos
xor
rol
mov
lret
out
iret
into
shlb
and
fldt
inc
stos
imul
fildl
lahf
cmp
mov
das
push
mov
mov
jo
sub
cmp
mov
adc
sbb
popf
icebp
mov
bound
xor
insb
push
xchg
pop
pop
fisttpl
sbb
outsl
cwtl
xorl
cmc
inc
fstp
fs
adc
ret
cwtl
mov
xchg
mov
push
std
mov
cwtl
jge
rorl
mov
inc
sbb
dec
ficoml
and
mov
unpcklps
dec
repz
aad
xchg
jb
lcall
xor
les
and
xchg
cwtl
js
mov
xchg
cwtl
test
dec
lea
mov
or
cwtl
and
pop
pop
mov
push
adc
rcl
fwait
xor
pop
loop
gs
xchg
dec
out
aad
pop
popl
xchg
xor
mov
int3
rcrb
loopne
pop
sahf
test
dec
jge
pop
lds
jo
cmc
lret
push
push
inc
xchg
rolb
pusha
sub
aad
lcall
jge
insl
jne
mov
out
xor
mov
mov
add
cs
shll
fwait
xorb
xchg
mov
negl
push
xchg
and
stos
and
das
cmc
fdivs
push
add
hlt
cmp
mov
cmpsl
adc
jae
in
jge
scas
cmp
jnp
cltd
outsb
fldenv
adc
arpl
sbb
mov
mov
lcall
xchg
push
sbb
cli
sub
addr16
pusha
pop
loop
add
or
xor
out
popa
fdivs
mov
in
into
cltd
insl
pop
pushf
shrl
pop
xchg
and
pop
out
cltd
imul
jp
sbb
in
outsl
push
xchg
sub
pop
and
movsb
xor
sub
punpckhwd
cmpsb
lods
sarb
adc
push
mov
sbb
call
ss
adc
lock
xchg
cld
scas
int3
push
aad
push
adc
popf
shl
jl
lcall
xchg
stc
icebp
pop
mov
add
das
shlb
mov
fdivl
gs
cli
mov
cmp
push
add
mov
sahf
in
inc
testl
sbb
xorb
push
cmp
addr16
loope
out
std
jo
movsb
pop
mov
aas
cmp
jno
and
mov
adc
xchg
inc
xor
shrl
in
sbb
ja
xchg
aad
mov
scas
xor
jne
inc
mov
ljmp
mov
push
xorl
pushf
fists
dec
pop
xorb
sub
add
mov
out
cmp
dec
mov
stos
popa
jne
out
sbb
sub
pcmpeqd
jnp
bound
das
jne
sbb
cmp
xchg
pop
movsl
sbbl
hlt
test
movd
pop
mov
roll
cmpsb
add
gs
out
xor
xchg
sbb
jne
movsb
jno
jne
mov
out
clc
sub
in
jo
jmp
xor
shll
cmp
jmp
fildl
dec
nop
dec
add
and
jp
sbb
pop
leave
add
xchg
cltd
mov
push
outsl
fiadds
inc
jo
xchg
lods
inc
sbb
pop
adc
push
js
mov
jbe
in
pop
sub
and
fisubl
pop
mov
xor
jne
push
and
mov
popf
stc
lea
out
xchg
cmp
in
mov
mov
pop
aaa
jmp
push
inc
jbe
jnp
or
pop
sbb
jno
dec
adc
pop
sbb
mov
sbb
mov
jns
and
xor
repz
adc
fs
in
rol
shlb
mov
outsl
sbb
jns
pop
cltd
adc
sbb
xchg
add
mov
inc
lods
popf
fldt
mov
out
push
shl
cmp
fdivp
adc
mov
movsb
push
xchg
xor
test
shlb
mov
adc
and
leave
and
cli
sbb
xchg
lods
cmp
and
dec
cmp
and
out
jb
mov
and
sbb
fchs
add
push
das
jns
fs
ljmp
decb
divl
loope
lods
jno
xor
cli
lea
inc
fmuls
or
mov
pop
in
mov
mov
adc
or
insl
gs
xchg
test
jmp
outsl
int
jnp
aam
and
testb
nop
outsb
sbb
xor
enter
out
xor
inc
dec
shrl
pop
and
and
xchg
xor
subb
shlb
mov
sbb
cmp
pop
out
mov
imul
lahf
lcall
fnsave
mov
fcoms
lock
or
daa
cmp
xchg
dec
sbb
xor
dec
jle
cmpb
fisubs
push
sbb
rolb
jge
ret
pop
adc
test
sahf
xchg
mov
fnstsw
jl
movsb
incb
fidivl
sbb
adc
popf
xorl
aad
call
int3
add
shlb
xchg
pop
and
inc
pop
fldenv
sbb
aaa
test
sub
fistpl
pop
xchg
add
cmp
nop
inc
rclb
jmp
repnz
mov
mov
addr16
mov
adc
sbb
loopne
add
lds
sub
int
jecxz
sub
sub
push
and
jae
fs
sub
or
jl
cwtl
repz
jno
and
out
mov
mov
or
lahf
jb
rorl
and
shrb
push
mov
insb
flds
icebp
jle
push
into
cwtl
xor
cmp
fdivr
data16
cld
stos
add
outsb
inc
clc
sbb
das
add
or
xchg
hlt
pop
dec
jmp
data16
and
sti
mov
mov
sbb
dec
push
ds
lret
xchg
pop
daa
xchg
dec
mov
inc
cmpb
xchg
enter
cmp
fidivs
std
test
xchg
in
out
push
sub
out
adc
pop
adcl
cwtl
mov
cmc
sbb
cmp
push
mov
lods
daa
mov
sub
gs
add
sar
mov
loopne
push
ficomps
pushf
pop
mov
add
in
aad
cli
cmp
repz
mov
cmpsl
nop
daa
jnp
cmp
push
scas
add
or
fldt
loopne
cwtl
mov
lret
or
and
imul
lods
jge
dec
cmpsl
fists
hlt
dec
out
cmp
jg
fnstcw
pop
insb
dec
fdivs
sbb
aam
inc
lret
mov
iret
aas
out
xchg
js
xchg
dec
ret
imul
push
jp
test
or
out
js
pop
popa
add
stos
je
jno
fsub
jbe
mov
stos
cmp
mov
jb
lods
mov
pushf
js
sub
xlat
dec
fwait
mov
mov
sub
mov
jg
dec
mov
mov
std
sub
jecxz
in
push
dec
in
popf
dec
cmc
pop
xchg
in
jl
xor
sarl
in
sub
loope
lahf
cmp
mov
repnz
and
cmc
out
inc
cmp
xchg
sbb
xor
mov
sbb
popf
out
sbb
mov
xchg
nop
sbb
in
stc
test
fs
inc
aam
clc
sub
cwtl
jmp
mov
adc
pop
cmpsb
aas
xor
aas
js
jecxz
mov
adc
je
sarb
fldcw
cmpb
out
hlt
add
cwtl
inc
test
je
xor
addr16
sbb
mov
fwait
sbb
ret
xor
cmp
push
in
adc
in
mov
sub
dec
jl
sbb
mov
jle
mov
push
insl
or
lahf
sti
xchg
jns
mov
dec
inc
lret
xor
inc
sbb
cmpsl
mov
and
dec
mov
ss
lcall
cmp
pop
jle
das
imul
jne
out
xchg
sti
lods
dec
and
add
cmp
int3
inc
aaa
aam
insl
push
dec
fldt
xor
cmp
jg
rcrb
repnz
xor
sahf
push
shlb
outsl
sbb
fcomps
sti
or
and
out
sahf
pushf
jmp
lods
cmova
pop
xorl
mov
rcr
pop
or
sub
dec
cmp
imul
sti
shlb
sub
xor
dec
lret
aaa
dec
hlt
push
inc
cld
daa
pop
lea
pop
outsl
cmp
stc
add
jmp
iret
pop
cmp
je
out
call
mov
push
out
nop
ror
cmpsb
into
test
outsb
stc
into
hlt
pop
xchg
dec
ret
sbb
sub
fisubrs
popa
jns
dec
and
lock
cli
mov
sahf
test
jmp
lret
lock
xchg
imul
push
jne
push
fwait
sbb
lcall
jbe
xchg
xchg
js
push
test
mov
push
iret
testb
pop
and
add
stos
xor
js
mov
decb
dec
into
je
in
daa
mov
cmp
mov
jl
xor
push
push
mov
dec
xor
fisttpl
or
inc
cmc
sbb
mull
sbb
lods
adc
pushl
js
xchg
sbb
cwtl
jmp
lcall
cmp
sbb
or
jnp
pop
sub
movsl
sbb
out
push
dec
cs
pop
add
insl
cmp
and
xor
mov
sub
in
int3
mov
repz
pop
fdivs
int3
mov
sbb
xor
pop
pushf
outsb
or
add
cs
mov
adc
adc
dec
daa
or
sbb
mov
pop
xor
fs
add
inc
addr16
lds
sub
stos
xchg
add
jns
test
scas
rcl
sbb
and
aaa
popf
jno
aas
pop
sub
mov
sbb
movb
leave
into
and
dec
or
lods
cmp
jl
notb
incl
arpl
out
subl
jae
stc
leave
mov
dec
aaa
popf
out
mov
jge
aas
clc
jns
dec
lock
cmp
hlt
push
out
dec
sbb
cmp
pop
stos
inc
mov
sbb
sahf
and
gs
sbb
scas
mov
jo
dec
mov
fistl
cmp
xor
dec
iret
sub
pop
pop
push
inc
and
call
movsb
notl
addr16
cmpsb
pop
je
jno
popa
jno
push
lods
mov
adcb
sub
and
pop
adc
js
sbb
sbb
inc
add
stos
subb
into
arpl
add
ret
ja
rcll
aam
insb
push
faddl
shr
aam
sub
xchg
addr16
cmp
pop
out
add
cmc
xchg
push
fnstsw
pusha
push
sarb
sub
push
mov
das
dec
rorb
sub
jae
lock
cwtl
test
add
cwtl
ficompl
pop
ljmp
jno
adc
xor
fisubs
jne
lret
dec
imul
sbb
sahf
add
bnd
stc
sahf
inc
enter
push
sub
mov
mov
mov
ret
inc
mov
mov
pop
pop
xor
xchg
jb
jb
out
nop
cmp
push
rorb
jno
insl
mov
xor
add
lods
add
scas
inc
push
dec
cltd
test
fadd
sbb
or
iret
lds
mulb
and
and
inc
lcall
mov
mov
outsb
movaps
gs
fcoms
jb
repnz
icebp
or
pushl
lret
sub
cltd
adc
cmp
jbe
adc
in
dec
xor
mov
test
or
dec
fisubl
pop
xchg
in
or
popa
fstps
push
inc
push
aam
xor
pop
add
popa
mov
btc
dec
pop
mov
xchg
imul
pop
scas
mov
rcrb
sub
lds
lods
loopne
and
enter
scas
adc
fwait
hlt
jne
lret
mov
cld
mov
je
dec
jmp
pop
cmp
jmp
mov
sbb
xchg
mov
adc
xchg
cmp
adc
jge
lods
push
mov
loopne
jno
popa
add
push
outsl
clc
mov
clc
arpl
jne
enter
movsl
pop
sub
mov
xchg
cmp
jne
cltd
jb
push
and
sbb
shr
push
test
scas
dec
inc
sub
sub
mov
pushf
sbb
sub
pop
movsb
call
add
stos
or
add
dec
xor
xchg
je
or
pop
call
inc
sub
sub
mov
jnp
mov
nop
push
cltd
pop
push
or
movsl
fcomps
lcall
dec
jne
mov
or
add
movsl
pop
mov
push
mov
jle
cmp
cwtl
jp
lods
sti
cld
dec
aas
cmpsb
dec
call
nopl
insl
mov
and
jno
les
shrl
push
push
daa
jge
clc
and
imul
lock
sub
push
mov
add
outsl
mov
mov
push
cmp
test
imul
sub
jecxz
leave
dec
test
sarb
mov
cmpsb
je
ss
cmp
aas
clc
jbe
cmc
fisttpl
fistl
jo
rcrb
orb
rorb
pusha
xor
lret
xchg
sub
jno
push
pop
fidivrl
xchg
adc
sub
movsb
aad
sti
fcompl
andb
mov
adc
cmp
pop
push
dec
movsl
mov
and
mov
sub
push
imul
test
sub
xor
adc
xchg
sahf
rcr
push
adcl
fdivp
test
xchg
insl
arpl
push
mov
loop
outsl
sub
xor
das
jae
fwait
pop
jae
pop
fstps
cltd
repnz
push
test
sbb
or
sub
push
mov
iret
push
pop
or
and
das
pop
repnz
mov
aad
outsb
mov
pop
sub
dec
push
and
mov
jmp
add
xchg
pop
scas
adc
sbb
mov
ficomps
xlat
jo
xor
xchg
pop
pop
bound
xchg
inc
sbbl
pop
xchg
sub
loope
mov
insl
testl
aaa
std
sbb
stc
cmp
std
jp
int
pop
dec
lea
outsl
lock
rorl
mov
sarb
jmp
fstpt
daa
dec
pop
or
sahf
sub
add
cmp
sub
jnp
sbb
aaa
jle
and
outsb
sbb
andl
insl
xor
gs
dec
ficompl
inc
repnz
pusha
nop
pushf
divb
stos
int
and
sbb
inc
xor
rcl
sub
scas
cmpb
arpl
pop
xor
sahf
insl
pop
pop
adc
mov
sub
sbb
or
js
fiaddl
ret
xchg
in
pop
sahf
lret
jno
pop
out
mov
lods
xor
and
fisttps
shll
pop
mov
lret
add
je
xor
stc
xorl
not
lret
mov
push
lea
adc
lret
ljmp
jg
out
loope
stc
xchg
add
xchg
leave
and
jb
pop
xor
push
mov
fsts
sbb
pop
xchg
inc
arpl
nop
cwtl
cmc
inc
mov
xchg
pop
mov
test
js
das
mov
push
cmp
sub
sub
nop
mov
outsl
cld
and
pop
cs
lahf
cmp
jmp
and
xchg
inc
jge
mov
outsl
mov
stc
aam
push
mov
mov
xor
and
arpl
and
mov
or
sbb
cmpsb
mov
pop
fnstsw
push
mov
add
sbb
cmp
mov
aas
mov
pushf
inc
xor
cmp
inc
dec
lods
sub
and
addr16
aam
sbb
shll
data16
aas
fsubp
mov
not
scas
lahf
sbb
and
push
fnsave
mov
outsb
aad
jae
or
mov
js
outsb
dec
mov
mov
sub
sub
in
cwtl
rcpps
xor
xorb
or
into
js
stc
stos
cmp
jge
ljmp
shll
mov
xor
cmp
xor
js
mov
inc
xchg
mov
fdivs
test
mov
leave
movsb
push
pop
adc
leave
cmpsl
mov
xchg
dec
mov
dec
and
and
std
sbb
pop
push
negl
scas
jmp
lahf
stc
mov
shlb
push
sbbb
xchg
loope
push
xchg
in
add
xchg
imul
cltd
bsr
mov
shrl
xchg
sti
jns
or
mov
mov
mov
imul
aaa
iret
bound
hlt
xor
pushf
sub
rcl
sbb
ret
cmc
imul
push
clc
jp
repz
sub
or
out
push
lock
jo
sbb
and
push
dec
or
lahf
and
adc
scas
pusha
fnstenv
sub
inc
imul
negl
jecxz
and
js
add
cmp
sub
loope
stc
pop
fsubrs
iret
jl
mov
cmp
pop
fwait
sub
xchg
jmp
sti
es
frstor
into
or
or
stc
xor
stos
jo
jo
add
and
xchg
jns
xchg
sbb
lods
xchg
ljmp
mov
pop
lret
pusha
or
lea
insl
mov
pop
and
sbb
test
test
dec
push
mov
movsl
fs
aad
data16
or
cwtl
mov
push
mov
mov
iret
inc
mov
or
jge
repz
call
roll
xchg
fsts
cld
loopne
aaa
pop
popf
mov
jns
mov
out
sahf
js
inc
movsl
xchg
inc
jae
add
test
cmp
add
jb
jne
pop
mov
sub
call
lcall
outsl
xor
adcb
scas
lret
mov
xor
xor
jns
push
mov
test
movsb
jo
movsl
push
fcomp
xor
mov
jg
sub
sub
cltd
cmpsl
adc
js
arpl
push
in
add
sbb
mov
sti
cmp
scas
mov
add
mov
mov
pop
repz
cli
xor
cmp
xor
call
fisubrl
fnstcw
daa
xor
in
mov
inc
sbb
pop
cmc
cmp
and
fistpl
movsb
fbld
in
sbb
dec
pusha
pop
addr16
xor
and
imul
sti
adc
or
gs
xlat
shll
xchg
lcall
jmp
xor
cmp
sub
sbb
idivl
add
popa
mov
mov
jo
mov
xor
fmuls
xchg
pop
adc
push
jae
pushf
cwtl
cmp
lds
imul
push
sbb
jmp
push
data16
das
ljmp
mov
int
inc
and
jle
sbb
repnz
pop
pop
pusha
arpl
repnz
dec
aam
aad
clc
mov
push
movsb
inc
jl
sub
fnstsw
pop
arpl
loopne
cmp
push
mov
aad
dec
stos
js
pop
scas
push
push
sbb
or
inc
sbb
das
shrl
jge
add
rol
shlb
and
ljmp
popf
jp
add
or
adc
lcall
out
loopne
mov
push
fstl
idivb
test
dec
pop
sub
sub
jl
scas
inc
mov
aaa
sbb
mov
dec
dec
int3
stos
adc
ss
lret
jmp
imul
sbb
jnp
loope
mov
xchg
int3
sub
js
mov
mov
test
movsb
and
repnz
pushl
mov
lcall
lock
mov
pop
push
and
and
push
jne
dec
mov
jb
sti
bound
sbb
and
std
ret
jp
dec
cmp
repz
js
xchg
fisttpl
sub
and
xchg
fs
popa
jp
jne
aaa
and
fisubs
dec
xor
sub
popa
sbb
fsts
pop
push
add
add
sub
jb
orl
or
lret
adc
mov
int
mov
das
out
aam
add
dec
mov
jg
and
cld
and
pop
push
jge
xor
mov
adc
bound
or
js
and
ret
push
push
jno
xor
jo
call
sbb
xor
aam
jo
sbb
sbbl
or
and
jl
pop
xor
test
fnstenv
push
jge
or
in
add
jb
pop
push
lahf
sbb
out
imul
jmp
jg
pop
scas
jl
repnz
cmp
insb
jbe
pop
cmp
xchg
xchg
popa
icebp
xchg
xor
xor
jb
inc
and
pop
lock
nop
fcom
adc
jnp
or
sbb
pop
aaa
pusha
sbb
jecxz
jge
lcall
push
mov
jns
xor
sbb
xchg
or
mov
xor
pop
pop
lret
ss
jns
loope
addr16
aaa
rcrb
jnp
mov
cmp
das
sahf
movsl
push
aam
mov
fisttpll
lret
mov
adc
pushf
pop
and
andb
std
fs
lds
lahf
mov
cmp
lcall
xorb
lret
outsl
cmp
lds
dec
dec
dec
xor
mul
cmp
shrb
add
testb
shrl
sub
ljmp
lahf
dec
sbb
jmp
in
lahf
fmul
xor
sti
inc
clc
in
stos
xchg
loopne
pop
cmp
push
mov
push
stos
sbb
dec
popl
loope
rcll
jnp
xor
mov
ds
fsubrs
lret
addb
and
sbb
sub
cmp
stc
or
and
cmp
cs
pop
pop
xchg
or
outsl
push
sub
cli
fists
xor
outsl
push
sahf
cli
mov
into
mov
cwtl
das
or
in
xor
and
pop
lcall
sbb
mov
cltd
cmpsl
push
mov
mov
out
ret
cmp
cmp
inc
jecxz
pop
mov
jge
cwtl
mov
lahf
cmp
lds
and
mov
scas
jne
pop
dec
sbb
cltd
icebp
loope
sub
mov
mov
shll
je
repz
jo
fwait
adcl
cltd
mov
add
adc
and
cmp
jg
pop
mov
lret
cmp
fistl
sub
push
pushf
loope
mov
cltd
push
jno
loop
sbb
mov
into
inc
loop
push
imul
dec
ljmp
push
pop
ss
mov
stos
aas
cmp
jae
jge
push
out
cmp
jno
sahf
mov
mov
outsl
pusha
sbb
pop
cmp
xchg
sbb
dec
mov
mov
xor
gs
jl
jl
shrb
pcmpeqw
mov
jge
fwait
cltd
mov
pop
xchg
inc
outsl
imul
push
pop
dec
push
sbb
imul
cwtl
ja
xchg
xchg
jo
lods
mov
ljmp
sbb
cmp
and
xchg
mov
jo
sub
incb
jg
add
xor
scas
jo
fisttpll
es
jge
insl
mov
jno
mov
and
cli
push
or
or
cmp
cwtl
les
popf
cs
jns
popf
scas
push
jecxz
sub
sub
inc
lcall
sbb
sub
cltd
xor
push
in
and
repnz
push
sti
jl
push
movsl
mov
dec
fsubs
cmc
jo
jno
enter
in
imul
cmpb
and
mov
leave
adc
in
push
jbe
gs
clc
jmp
das
lcall
lods
add
popa
sub
dec
stos
scas
icebp
sub
shll
pop
pop
sbb
sbb
inc
aam
jp
int3
aas
arpl
orl
mov
fs
or
stos
repnz
and
sub
xchg
pop
cmp
jl
rol
imul
jp
push
rcll
dec
adc
mov
pop
lods
add
adc
fwait
lods
pop
pusha
fdivs
sub
aam
push
adc
push
sbb
xchg
mov
dec
scas
jb
shrb
and
sub
in
mul
pop
and
ficoml
jno
sub
popf
es
sbb
sbbl
lods
cmp
cmc
cwtl
leave
cltd
clc
cmpsl
sub
cmpsb
lods
out
aam
sbb
pusha
out
xchg
xor
loopne
xor
jecxz
movsb
ret
mov
das
repz
rcll
and
and
sbb
or
insl
outsb
cltd
in
xchg
enter
or
add
xor
pop
sahf
aam
sbb
mov
mov
sbb
inc
cmp
mov
ret
adc
scas
and
ds
jb
mov
loopne
pop
xor
mov
movsb
jae
push
ucomiss
xchg
cwtl
enter
les
stc
int
push
cmp
xchg
add
add
test
incb
aad
dec
orb
and
xorl
lret
sar
icebp
cltd
scas
out
pusha
inc
das
mov
jle
das
push
jno
das
test
cmpsb
jno
test
scas
out
rorb
add
mov
cmp
jg
inc
lea
sub
pushf
mov
fistpl
in
push
xor
lods
push
jmp
stos
in
jae
cmp
mov
lret
cmpsl
jo
or
mov
call
test
adc
xor
pop
inc
and
and
leave
cmp
jle
filds
xchg
mov
pusha
jl
daa
test
xchg
push
fldt
dec
mov
push
jno
jbe
cmp
popa
xor
divb
leave
outsb
push
jl
dec
loope
std
push
cmp
insb
add
and
xchg
and
shll
fisubrs
xor
stc
pop
sbb
xchg
fiaddl
sbb
repz
insb
cltd
repz
lcall
sbb
pop
leave
mulb
nop
stos
data16
push
pop
es
pop
jno
test
and
jae
in
lds
and
add
dec
lret
pop
lcall
nop
jns
sbb
not
jl
cmp
and
sbb
mov
xor
mov
jnp
fstps
aad
xchg
aas
cltd
and
or
adc
sub
or
dec
cmpsl
pushf
icebp
cmp
adc
fwait
add
or
sti
loope
addr16
sarl
push
xor
stos
or
pop
movsl
orb
or
fucomi
cmp
sub
rcrb
mov
xchg
andl
fldcw
push
in
mov
mov
outsl
sbb
into
cmpsl
pop
out
das
jnp
sbb
cmp
mov
arpl
outsl
mov
cmp
insb
xlat
or
jnp
test
jmp
xor
aaa
inc
or
aas
sbb
pusha
cltd
scas
stos
jle
movsbl
outsb
sbb
mov
movsl
and
and
xchg
int3
movsl
sub
pop
shrb
inc
repz
sahf
ss
pop
inc
mov
clc
inc
test
filds
cltd
adc
movsb
and
pop
int
sahf
inc
xchg
mov
jo
out
add
jp
mov
in
xchg
lds
xchg
xor
nop
pop
inc
dec
pushw
or
sbb
lods
pcmpeqb
push
popf
bound
cli
scas
outsl
clc
test
cmp
imulb
dec
addr16
lods
push
jnp
pop
icebp
and
push
or
mov
call
into
iret
ret
out
dec
push
inc
jle
pop
mov
cmp
in
pop
cvtdq2ps
test
ret
sub
inc
add
rclb
int
cmp
cmpsb
sub
call
pop
filds
mov
out
cmp
stos
call
push
dec
mov
jo
pop
es
mov
pop
cmp
aad
lods
mov
xchg
push
bnd
pop
or
sub
lods
jbe
mov
and
leave
lds
adc
stc
sub
pop
inc
xchg
sar
inc
hlt
fbld
cmpl
mov
pop
icebp
out
dec
fistpll
cmp
jecxz
adc
mov
jns
repnz
test
ss
xor
dec
popl
lret
jmp
hlt
add
sub
sbb
xchg
jmp
outsl
pop
addr16
fists
push
push
enter
iret
inc
xchg
fwait
repz
lahf
mov
outsl
and
xchg
mov
adc
mov
aam
rcr
pop
sbb
in
lcall
loop
mov
sbb
jl,pn
mov
insb
inc
xchg
pop
data16
push
add
and
and
test
pushf
xor
pop
cwtl
mov
test
mov
mov
xchg
sub
jp
pop
xor
dec
movsl
or
enter
inc
inc
mov
dec
jp
stc
push
xchg
mov
cs
cmp
les
popf
xchg
adc
out
outsb
jmp
cmc
mov
lods
pop
popf
jge
jo
mov
mov
or
pop
or
xor
or
les
xorb
push
jo
mov
nop
setg
mov
xchg
push
pop
pushf
fnstenv
xor
loop
shrb
mov
cmp
pop
xchg
and
or
inc
test
and
divl
ljmp
lcall
sahf
adc
pop
out
cmp
dec
pop
push
inc
je
or
test
xchg
push
pop
and
sbb
adc
test
push
xor
xor
fs
dec
adcl
pop
nop
or
mov
rorl
jno
pop
adc
mov
mov
int
xchg
cmp
les
sub
pop
push
andb
add
in
cmp
test
cmp
fdivrs
loope
adc
sbb
cmpsl
mov
sub
out
fstps
ja
outsb
xor
pop
call
jp
or
int3
insl
pop
imul
imul
sub
pop
pop
scas
movsl
test
repz
jnp
test
jb
or
clc
add
mov
xchg
cmc
jae
outsl
flds
pop
add
dec
fs
pop
testl
push
mov
or
inc
xchg
pop
pop
jne
pop
pop
xor
das
ss
ror
ljmp
mov
mov
jns
pop
jg
jne
xchg
mov
and
int
mov
mov
cmp
int
jne
sub
popf
inc
mov
fwait
xor
add
xlat
aas
mov
in
xor
fwait
sub
sti
xor
adc
dec
mov
jno
std
aad
mov
out
xor
add
push
pusha
lret
pushf
adcl
add
std
out
insb
aas
mov
jns
xor
mov
jl
sbb
xor
sub
sti
ss
fdivr
cmp
cmp
adc
popf
dec
leave
mov
addr16
jecxz
stos
fwait
push
add
testb
add
jo
out
and
and
ljmp
out
pop
sbb
xchg
iret
pushf
imul
mov
ja
xchg
imul
inc
call
test
lds
pop
inc
enter
jecxz
inc
cld
outsl
sar
mov
inc
gs
out
mov
outsl
addr16
xor
inc
pusha
pop
xor
xlat
or
ss
push
iret
repnz
lret
cltd
outsl
ljmp
out
and
push
or
pushf
add
loopne
sub
sub
pop
sahf
mov
inc
cwtl
stos
pop
pushf
popa
mov
pop
pushf
aaa
cmp
add
lcall
icebp
int
std
test
ss
cmpsb
cli
sbb
pushf
aam
cwtl
adc
sbb
call
sarb
je
push
add
sbb
mov
lcall
adc
shll
xchg
cmp
xor
lret
mov
cwtl
inc
jle
addb
push
aam
sbb
sbb
fisubl
cmpsl
fcoml
out
test
popf
test
cwtl
shrl
rcrb
outsl
fiaddl
mov
iret
mov
push
scas
jle
nop
leave
popa
das
pop
pusha
outsb
inc
and
pop
mov
pop
xor
gs
addl
and
mov
cli
add
js
adc
fnstsw
stos
dec
sbb
sub
push
jecxz
mov
pop
xchg
mov
jp
mov
es
dec
mov
mov
add
insl
and
mov
es
push
test
daa
ss
stc
arpl
fwait
add
or
xlat
int
ret
push
mov
jp
adc
and
ret
aam
prefetcht1
idiv
jp
dec
dec
push
pushf
adc
mov
popf
jecxz
iret
fwait
int3
movb
mov
cmpsb
and
call
repnz
push
xlat
pop
mov
pop
mov
and
shlb
push
hlt
push
sbb
aas
adc
hlt
pop
addr16
push
inc
dec
sub
ret
fdivl
mov
js
pop
out
in
psrld
fisubl
cli
shr
add
movsb
xchg
adc
pushf
divl
fcoml
ja
or
or
jmp
daa
dec
push
ficoml
shll
bsr
scas
or
pop
clc
xor
ficoms
push
cmp
jo
xor
lret
inc
jp
daa
pop
xlat
outsl
daa
in
insl
repz
js
pop
fstl
cs
cmpsb
add
fsubs
sub
mov
es
jp
aaa
popa
test
pop
mov
scas
cs
pop
orps
inc
std
jae
lods
mov
mov
mov
pop
or
mov
mov
cltd
xor
pushl
scas
mov
or
out
add
shrb
add
mov
lcall
and
jne
inc
xor
mulb
ss
pop
xlat
sbb
push
mov
xchg
mov
pop
and
sbb
sub
mov
xor
pop
loop
adc
mov
ficoml
cmp
mov
xor
repnz
cmc
jno
sub
adcl
jo
dec
aaa
mov
lods
ss
push
icebp
das
mov
cmp
cmpsl
repz
cmp
daa
jl
sbb
scas
pop
dec
lcall
push
and
xor
mov
xchg
xor
xchg
popa
push
jbe
push
imul
sub
js
xchg
push
jne
fs
xchg
adc
rcrb
mov
jge
fstpl
inc
sti
loope
sbb
scas
sarb
out
cltd
leave
popf
jmp
in
negb
das
dec
or
inc
mov
bswap
sahf
push
inc
fmuls
pop
movsb
repz
and
lds
ss
mov
mov
add
jecxz
sub
shl
in
xor
stos
xor
dec
push
fsubl
dec
jnp
push
test
sahf
aas
insb
flds
insb
loop
clc
scas
jnp
imul
sbb
inc
push
js
dec
inc
and
fsubr
gs
fdivrl
fwait
outsl
push
insb
pop
and
xchg
movsb
pop
popf
jp
mov
fcomp
add
sbb
vmwrite
jg
sbb
sub
popa
fs
inc
adc
rclb
cmp
mov
fwait
pop
add
lret
jp
adc
or
ret
mov
mov
or
and
and
cltd
mov
inc
fs
mov
scas
les
xchg
pop
mov
sub
cltd
or
movsl
pop
xor
movsb
cs
add
fdivl
in
push
out
pushf
mov
ljmp
xchg
mov
testb
mov
ss
enter
cmpsl
jp
fisubl
mov
dec
jns
add
mov
jo
cld
xchg
scas
out
mov
adc
cmp
cmp
cwtl
out
xor
dec
add
rorb
jns
or
fnstsw
add
ljmp
pushl
arpl
daa
jge
fiaddl
xor
rcrb
mov
inc
cmp
sti
and
add
sbb
in
dec
jge
cmp
jns
roll
adc
xor
aaa
lods
sbb
pop
fsts
je
rclb
lock
cld
jae
and
pop
into
bound
subb
stos
and
push
les
enter
sub
and
and
push
jl
mov
sbb
cs
ret
add
arpl
enter
bound
sbb
stc
mov
loope
loopne
push
mov
lea
leave
ja
or
bound
inc
popa
fsubrl
pop
fcom
cmp
rcrl
jns
les
js
cmp
shlb
xchg
popl
push
cmp
aas
and
sub
cltd
aam
and
pop
sbb
mov
cmpsb
out
sbb
push
push
dec
sbb
xchg
dec
mov
lcall
or
add
add
shr
mov
das
sahf
push
inc
xchg
test
imul
mov
pushf
sbb
nop
ja
push
das
dec
and
pop
daa
mov
insb
or
pop
fwait
fwait
or
ds
and
addr16
or
xor
or
lea
pop
repnz
scas
xchg
jns
pop
jp
or
cmc
in
sbbb
xchg
popa
inc
dec
adc
mov
jne
dec
mov
stos
add
sbb
aaa
popf
das
ss
in
push
bound
mov
lea
movb
push
sbb
xchg
pop
nop
aas
jbe
pop
pop
jo
repnz
pop
ficomps
fmuls
xchg
cmc
das
test
outsb
push
and
lahf
jl
ss
cmc
cli
jle
cltd
gs
aad
dec
and
xor
pop
stc
push
testl
jnp
pop
add
mov
pop
sahf
fsubl
inc
jae
or
lret
sbb
xchg
mov
sbb
pop
mov
bound
decb
inc
iret
icebp
mov
mov
jp
xor
cmp
insl
adc
and
cmp
jns
cmpsl
ds
inc
mov
fldl
mov
mov
or
jmp
jecxz
xchg
pop
and
dec
addr16
icebp
and
in
jmp
in
fstps
ja
sub
mov
fildl
xchg
xor
bound
lcall
pop
sbb
xchg
mov
lea
and
xchg
add
outsl
test
jne
enter
cmpsb
push
xor
mov
rclb
fldenv
mov
mov
popa
jl
xchg
jecxz
sub
lahf
jbe
cmp
iret
das
rorb
mov
adc
andl
xor
mov
cmpsb
loop
mov
lods
out
xor
sub
fidivrl
cltd
repz
sub
inc
xchg
dec
stos
sbb
movsl
ficomps
mov
sbb
inc
int3
lds
sbb
xor
jp
lods
in
ret
pop
mov
lock
inc
xor
mov
xorb
lds
out
pop
outsl
clc
scas
repz
js
sbbb
repnz
leave
repz
ss
add
jo
pop
and
push
popf
cwtl
xchg
push
in
loopne
inc
test
inc
pusha
divl
inc
pop
cmp
fstp
sbb
xor
insl
push
pop
cmpsl
jne
sbb
push
dec
scas
hlt
and
pop
sbb
mov
and
sub
or
mov
dec
lcall
xchg
scas
or
lahf
ss
test
popf
jg
sub
std
sbb
sbb
cmpsb
xchg
das
pop
mov
push
leave
ret
cmpsb
out
out
js
pop
jns
mov
das
sbb
dec
imul
insb
add
aam
mov
je,pt
jno
and
push
insl
cmpsb
push
outsl
cmp
ret
mov
sbb
cld
dec
adc
cli
push
fchs
xchg
lods
mov
sub
xor
cmpsl
int
cmpsl
aas
mov
movsb
scas
mov
idivl
ds
cmp
rclb
or
and
and
fistps
dec
add
push
stos
jae
jmp
mov
mov
call
nop
popa
mov
insb
pop
xlat
dec
fistpll
adc
jmp
adc
inc
pop
outsb
shlb
mov
jbe
jecxz
mov
cmp
das
sahf
jg
add
mov
std
fwait
cmp
lret
ss
fwait
int3
adc
out
loopne
in
or
xor
ja
pop
stos
push
and
and
xor
in
adc
add
cmpb
inc
lds
add
pop
xchg
scas
bound
rorl
add
vmwrite
stos
lods
mov
das
hlt
je
pop
inc
shrb
cmovle
xchg
mov
in
pop
cmp
stos
cmp
pop
ret
arpl
xor
out
imul
jge
sub
jae
adc
test
inc
cmp
mov
scas
add
sbb
xor
movsl
pusha
jns
and
push
mov
test
pop
pop
xchg
daa
mov
add
and
xor
mov
adc
dec
inc
jge
subl
push
dec
sbb
mov
or
dec
or
push
rcrl
sub
gs
cmpsl
shll
outsl
and
add
clc
in
es
xchg
mov
cmp
shll
jnp
insl
cltd
xchg
push
stc
xor
nop
rcr
sbb
filds
pop
pusha
pop
push
call
fbstp
inc
mov
in
lret
mov
int3
push
movsb
mov
mov
outsl
xor
push
mov
stc
pop
dec
jne
leave
jg
sub
inc
mov
in
push
scas
jmp
inc
dec
or
mov
aaa
enter
lods
dec
mov
and
outsl
inc
shlb
xchg
addr16
out
cmp
loope
jns,pn
out
bnd
dec
mov
imul
xor
shlb
lret
imul
and
and
cwtl
xchg
pop
push
adc
jp
lds
xlat
leave
addr16
sub
add
ret
sbb
jae
popf
ja
or
xor
sti
xor
arpl
lret
clc
and
bound
lret
cmp
mov
test
iret
sbb
xchg
js
lret
inc
push
ss
out
cwtl
loop
mov
test
jmp
sub
pop
lods
fdivrl
sbb
mov
lcall
push
mov
in
cmp
aas
shlb
pop
push
sbb
adc
add
inc
rcr
push
fs
jecxz
lock
ja
lahf
fcoml
cwtl
cmpsl
or
nop
mov
jo
xchg
pop
add
mov
mov
decl
xor
cwtl
jmp
mov
sub
sub
andl
addr16
add
gs
fistl
enter
cmp
xchg
jle
mov
and
test
pop
jp
sbb
insl
je
mov
pop
sbb
mov
adc
cmp
scas
shll
iret
or
addr16
into
rol
mov
pop
in
jle
sbb
jbe
ret
fld
xor
adc
loop
sub
cmp
sub
mov
lods
push
rcrb
fnstsw
iret
pusha
or
cmp
subl
pop
inc
int3
sub
ljmp
sbb
push
jb
fistpll
je
pop
mov
les
push
xchg
mulb
clc
and
popf
pusha
xchg
lea
cmp
jno
cltd
imul
incl
dec
cs
daa
sbb
pop
and
inc
out
jo
leave
or
sub
lahf
push
mov
mov
mov
popf
es
js
hlt
cmpsb
gs
fcoml
push
lahf
mov
fbld
xor
jge
dec
sbb
int
lods
inc
mov
enter
sbb
imul
jb
fs
movsl
xchg
cmp
jg
jns
out
test
lock
pop
cwtl
or
push
xor
or
push
cmp
iret
xchg
pop
jle
xor
jns
push
frstor
sub
xor
adc
repnz
pushf
dec
push
out
add
mov
jmp
jnp
test
and
jg
ljmp
push
jns
cmpsl
clc
and
xchg
sub
mov
adc
arpl
adc
add
add
cmp
mov
cmp
and
and
ret
movsl
fdivrs
test
push
xlat
mov
mov
cmp
and
sbb
mov
and
pusha
stc
sti
jge
out
mov
out
xchg
mov
pop
xchg
mov
jge
std
or
lods
in
loopne
insb
jo
imul
cwtl
dec
mov
xor
xchg
test
mov
lods
movaps
sub
ja
fstp
mov
jns
fcmovb
clc
les
cwtl
pop
fidivrs
sbb
xor
push
sub
sbb
add
push
and
push
pop
hlt
lea
cmc
pop
cli
sub
pusha
je
imul
add
insl
sbb
adc
in
sbb
loopne
jle
or
push
and
scas
mov
and
sbb
ds
xchg
popa
add
add
enter
pop
lcall
lea
pop
fs
mov
popf
jge
push
shrb
xchg
adc
pushf
test
sub
cwtl
popf
xor
ds
aas
stc
sub
mov
insl
fadd
jne
mov
sar
xchg
std
daa
ss
or
stos
xorl
sahf
in
insl
add
mov
in
js
push
nop
outsl
mov
ss
push
clc
arpl
mov
push
sarl
dec
xor
jl
insl
stc
xchg
out
xchg
mov
aas
add
mov
jcxz
sub
jp
out
mov
aaa
mov
adc
add
iret
lret
jge
fsubrl
dec
or
cmp
sbb
jns
insb
loope
sbb
lret
pop
pop
mov
inc
lds
cmp
cmc
cmc
scas
faddl
pusha
roll
push
pop
in
or
xor
lock
pop
stc
jecxz
les
mov
shlb
sbb
add
pop
iret
adc
or
lahf
and
and
mov
mov
or
sub
jnp
xchg
shrl
push
popf
das
jecxz
pop
xor
jl
jne
mov
or
pop
cmpsb
pop
ss
or
sub
js
adc
insl
xor
jg
scas
inc
cmp
les
jge
popa
pushf
in
xchg
and
lods
xor
test
xchg
mov
jp
pop
jno
mov
jae
mov
sbb
enter
mov
idiv
mov
pusha
loope
js
cmp
imul
adc
ljmp
icebp
lret
sub
cmp
lock
sarb
outsl
mov
lods
push
adc
iret
inc
lret
cmc
outsb
sbb
faddp
sbb
mov
jge
jae
jecxz
cmpl
sub
mov
fcmovu
or
jo
clc
and
pushf
cmp
mov
fcomps
and
stc
rcll
jmp
cmc
aas
sub
push
sub
lea
sbb
loop,pn
push
das
repnz
dec
ficoml
push
or
cwtl
mov
cmc
mov
decb
sbb
push
xchg
insb
jecxz
mov
sub
adc
stc
lea
dec
mov
xor
mov
pushf
cmc
or
cltd
outsl
scas
popa
fucomi
add
and
xchg
pop
loope
mov
inc
xor
inc
push
ds
mov
cmp
cmp
jb
sbb
jle
iret
outsl
cmp
fidivl
jl
adc
cmp
xlat
sbb
inc
sbb
mov
mov
add
leave
inc
dec
mov
stos
adcl
loope
jnp
xchg
popa
push
aaa
cmc
fs
pop
scas
cltd
test
cmpsl
inc
addr16
mov
cmp
xchg
cmpl
and
add
pop
or
mov
rcrb
xchg
xor
cmp
jns
lods
jb
add
pusha
jecxz
ja
jno
jmp
dec
lret
mov
or
pop
cmp
mov
ljmp
and
sbb
push
sbb
pushf
sbb
sti
dec
shl
sbb
add
arpl
fcoms
stos
sub
lods
je
movsb
push
xchg
jmp
shlb
paddw
mov
jae
decb
adc
sub
adc
lods
loope
push
and
sbb
cmpb
inc
pop
iret
testl
cmpsl
push
fs
or
xor
pop
cmpsb
dec
sti
sahf
xor
movsb
mov
pop
das
outsl
call
fwait
jl
and
in
aam
sbb
mov
pop
mov
addr16
mov
maxps
sbb
dec
insb
aaa
jno
je
rclb
push
add
rcr
fcoml
mov
inc
cmc
xor
adc
push
and
popf
mov
pop
jp
or
and
fsubp
cmpsb
jb
ret
and
or
das
test
ja
cmp
insl
cmp
adc
sub
dec
rol
aaa
add
jns
pushf
mov
adc
cmp
cmc
mov
insl
fnstenv
jmp
inc
lods
jns
pop
outsl
pop
sbb
lret
cmp
sbb
outsl
cmc
insb
repz
fs
pop
dec
xor
addb
leave
xor
ret
divl
shrb
cmp
xchg
ret
gs
cmp
pusha
lahf
test
fisubs
shll
loopne
out
daa
mov
push
icebp
pop
jne
xchg
jg
sbb
dec
xchg
mov
js
sub
xor
inc
inc
sub
inc
in
sahf
xorl
rcl
scas
sbb
icebp
stos
xor
sub
jns,pn
cmp
bound
mov
and
sbb
into
in
aas
cmp
push
fucom
addb
jp
fcoml
cmp
out
xchg
je
sbb
add
xchg
aaa
cmpsb
shll
cltd
cltd
push
sbb
popa
xchg
loop
add
sub
pop
xor
add
and
clc
mov
sub
sub
adc
sbb
loopne
sub
fidivl
cli
xchg
xor
xor
loope
hlt
rcrb
nop
lods
sub
loopne
mov
cmp
ja
lcall
addr16
cli
mov
outsl
push
in
adc
cli
xor
call
paddusb
jno
repz
cmp
push
jns
das
mov
and
icebp
jle
std
std
or
pop
pop
or
fnstsw
loope
lret
dec
or
sbb
xchg
xchg
lods
imul
pop
nop
std
pusha
out
and
out
imul
pop
push
mov
mov
jns
popf
and
mov
mov
mov
mov
ficompl
outsb
out
xor
test
sbb
add
pop
xor
jb
adc
into
testb
ja
dec
pusha
cltd
dec
jge
cmc
stc
andl
gs
and
cld
enter
ss
inc
shl
or
daa
pop
fldl
jns
cltd
sbb
lret
aaa
jb
sbb
jmp
pop
arpl
xchg
add
std
clc
aas
shl
idivb
js
ljmp
add
fs
into
ds
out
pop
dec
jmp
outsb
jg
inc
push
push
mov
mov
repz
mov
mov
pusha
jmp
push
push
test
ret
xchg
fdivrs
add
add
or
addb
or
out
pushf
mov
mov
xchg
xor
push
leave
mov
push
sbb
lret
cwtl
pop
jecxz
xor
mov
test
aas
dec
dec
imul
jo
in
fisttpll
and
push
sbb
add
lcall
fwait
mov
jb
dec
test
dec
iret
lods
fdivp
mov
dec
shlb
dec
popa
push
or
push
test
cmpsl
faddl
in
mov
test
call
ss
jns
inc
mov
leave
sti
mov
cmpsl
scas
leave
xor
cmp
lret
fbld
adc
ja
sub
push
fdivrs
jbe
sahf
cmp
lods
gs
and
gs
sbb
inc
and
nop
out
mov
dec
push
pop
mov
out
jl
mov
aad
or
sub
push
mov
mov
popf
or
fst
dec
fstps
inc
insb
sbb
div
aas
adc
fsubrs
aas
fldl
push
insl
cmp
push
decb
xor
jp
mov
push
jnp
shll
mov
punpcklwd
into
cmp
inc
das
and
jbe
js
cmp
test
daa
gs
jge
pop
out
or
mov
lcall
cwtl
mov
jle
pop
xchg
popf
sub
pop
cmp
arpl
jge
cmp
popa
movsl
cmp
mov
fisttpll
aas
in
jns
je
xor
xchg
xor
aad
fcomps
pushf
and
int3
push
jp
ss
mov
stos
test
mov
push
rclb
cmp
jbe
cmp
sbb
add
lods
imul
mov
push
and
push
mov
mov
jle
jl
mull
out
push
fisubrl
rcrb
push
jnp
int3
stos
mov
pop
outsl
jge
xor
dec
rolb
mov
das
jg
ss
lods
or
xor
fistps
sti
adc
popa
inc
inc
loop
inc
sub
and
movsbl
repnz
jmp
das
lods
insl
or
xor
leave
fidivl
mov
inc
and
jns
stc
sub
addb
pop
das
out
add
mov
pop
adc
pop
jnp
and
add
sti
test
jp
das
mov
and
sti
sub
pop
mov
or
dec
out
push
movb
arpl
ljmp
sub
loope
cwtl
sbb
stos
pop
mov
hlt
inc
adc
jge
rorb
fwait
jns
push
add
orb
pop
arpl
and
pop
push
push
push
rol
fs
outsb
mov
dec
xor
lcall
cwtl
adc
mov
jnp
mov
and
cmp
adc
dec
test
test
shll
xchg
jne
imul
out
lcall
jns
lods
aaa
mov
in
into
ss
cs
das
or
shlb
jb
cmp
outsb
out
sbb
lahf
xchg
xlat
push
sub
sti
idiv
pop
outsb
icebp
xchg
jns
pop
pop
mov
bound
mov
cmp
vpcmpeqb
mov
sahf
std
mov
pop
das
call
lret
push
sbb
out
pop
adcl
xor
ds
bound
push
and
cwtl
pusha
sub
negb
sub
fwait
mov
test
mov
xlat
inc
lods
jne
aad
leave
dec
les
mov
and
sub
aam
js
jmp
cmpb
mov
loop
sbb
loop
out
pop
frndint
mov
jne
iret
cmp
rcll
sbb
jo
jg
iret
cld
pop
shrl
jae
stos
lock
sub
sti
mov
xor
cmp
das
ds
push
jns
jb
shll
and
or
add
out
jp
sub
scas
lock
ficoms
sub
repz
cmpsl
gs
aam
mov
jg
ljmp
out
das
scas
mov
popf
andb
mov
push
sub
ss
mov
xchg
or
cmp
jns
jne
xor
test
cwtl
fdivs
icebp
stc
mov
enter
or
ljmp
jecxz
nop
xchg
mov
out
sbb
sub
ss
add
imul
xor
and
inc
jnp
push
inc
pop
jbe
xchg
and
sbb
mov
enter
dec
lods
das
sarb
mov
fstpl
mov
jns
scas
or
cmp
inc
fcmovu
clc
or
iret
mov
in
dec
je
sbb
push
lret
setl
jecxz
pop
lcall
stos
mov
movsb
mov
lahf
aaa
sub
inc
aaa
sbb
negb
inc
and
mov
loope
mov
fs
or
inc
xchg
scas
mov
insl
out
lea
sub
in
insl
mov
mov
aaa
xchg
adc
xor
or
or
lods
fs
adc
xor
in
jp
sub
movsl
cmp
cwtl
and
arpl
lods
testl
loop
subl
and
push
cmp
mov
dec
sub
sub
mov
sbbl
movsb
les
out
xor
shr
js
loopne
cmp
xchg
call
push
sti
jne
jmp
cmc
ja
cmp
je
scas
subb
sbb
popf
sbb
pop
inc
stos
mov
and
sbb
out
nop
inc
jo
and
sbb
add
incl
and
jo
jle
test
jb
dec
push
sbb
aad
push
arpl
xchg
cli
nop
push
stc
jecxz
lods
add
inc
fdiv
ficompl
sub
sbb
fnstenv
xchg
iret
xor
frstor
pop
call
leave
lods
ljmp
test
mov
mov
out
push
fistps
lods
fidivs
mov
and
arpl
jmp
mov
or
push
fadd
imulb
popa
xlat
sbb
jae
pushf
adc
fwait
addb
fsubp
dec
leave
int3
mov
sub
arpl
nop
std
push
hlt
scas
inc
sahf
sbb
leave
add
adc
ficompl
sbb
iret
mov
outsl
push
call
cltd
sti
and
hlt
push
inc
iret
pop
push
outsb
jns
sbb
in
fstps
jp
stc
xchg
int3
pop
gs
gs
scas
loopne
xor
out
imul
sub
enter
xlat
loopne
xchg
or
xor
das
cmpsb
mov
mov
push
shrb
push
das
int
popf
das
out
and
arpl
dec
mov
cli
xor
int
xor
std
out
jge
cli
cmp
lods
adc
clc
popf
pop
shrb
and
xchg
sub
out
jno
out
mov
and
fcompl
std
pusha
sbb
rcrb
add
or
pusha
js
lret
ret
xchg
sub
fimull
ret
mov
mov
sbb
pop
iret
sbb
outsl
aad
imul
push
pop
pop
jp
mov
in
xor
popf
jb
cmp
arpl
inc
xor
cmp
ss
das
xchg
sbb
mov
push
xchg
lds
xor
sub
jns
mov
stos
adc
pop
rol
push
add
gs
dec
es
pop
pop
jge
loope
enter
lcall
pushf
inc
scas
cmp
mov
push
pop
scas
jle
das
pop
jp
inc
jg
xchg
rcll
push
xor
stos
loop
daa
out
mov
and
adc
fucom
fsub
sub
inc
cs
inc
mov
mov
stc
push
jecxz
cltd
pop
out
push
jb
fnstsw
ss
pop
ret
pop
pusha
fucom
fists
push
jle
sbb
aad
pop
xor
cli
enter
and
pop
scas
xorb
sbb
popa
mov
and
xor
jl
addr16
arpl
mov
daa
dec
sbb
mov
sbb
mov
dec
aaa
fadd
in
popa
jno
mov
push
inc
cmp
fwait
xor
jns
pusha
jae
pop
inc
lret
cwtl
pop
lds
int3
xchg
hlt
cmp
mov
mov
ja
cmpb
adc
mov
pop
negb
aas
rcrb
or
imul
fistpll
test
xor
popf
lods
mov
sub
js
mov
or
idivb
inc
test
subl
and
push
lock
hlt
sub
gs
in
scas
adc
or
pushf
les
in
clc
daa
add
sbb
or
mov
cmp
inc
js
mov
mov
sbb
mulb
xor
cmp
inc
rclb
test
jmp
mov
ror
ds
sbb
sbb
ds
sar
repnz
notb
in
mov
sbb
lret
fstl
js
push
in
cmp
call
incb
pop
cmp
es
mov
push
mov
ljmp
xchg
and
es
or
inc
shl
mov
sahf
outsb
sbb
lret
mov
lods
jecxz
lahf
push
sub
dec
call
and
add
push
outsl
nop
imul
jne
xchg
ss
dec
inc
out
mov
dec
add
xchg
jge
xchg
loope
in
cmp
adc
push
cmc
gs
xchg
push
jae
sbb
jbe
ljmp
test
stos
add
les
jb
aad
cmp
inc
cli
adc
cmp
add
int
jns
in
jge
mov
push
lock
and
cli
jecxz
outsl
ret
iret
sti
pusha
cmc
sub
gs
inc
out
mov
packuswb
pop
cmp
repz
dec
imul
insb
cmp
cmp
inc
sbb
leave
enter
gs
dec
mov
jne
push
mov
divl
inc
lcall
mov
jecxz
fcomps
outsb
inc
sub
jg
sub
cmc
repnz
mov
adc
sbb
js
lea
or
popl
sti
mov
xchg
and
call
mov
pop
mov
xor
or
ss
aam
jecxz
sub
into
in
dec
sbb
sti
notb
daa
dec
xor
add
cwtl
or
aad
es
fdivrl
out
cltd
fstenv
js
popf
lods
push
xchg
sub
pop
or
gs
cmp
shll
xor
and
dec
bound
xchg
stc
out
inc
imul
pop
in
movsl
xor
lret
xchg
or
ficoms
cmp
cmp
leave
inc
stc
jnp
push
daa
and
pop
lds
dec
aaa
sbb
ds
or
sbb
fucomp
mov
xchg
sbb
cltd
jnp,pn
or
dec
je
test
mov
and
xchg
sti
dec
out
xchg
rcrb
cmp
adc
aas
cmp
push
xchg
and
mov
movsl
nop
fisttpl
stos
mov
push
xor
mov
insl
inc
sbb
test
jp
sbb
fidivs
push
adc
and
mov
inc
rcr
ljmp
xchg
ss
pop
push
dec
jnp
lods
jg
not
pop
cli
xchg
sar
cmc
mov
lret
sub
sub
scas
dec
std
ljmp
mov
js
popa
jmp
jo
inc
ret
sub
adc
clc
jo
movsb
jbe
pop
and
movsl
out
hlt
fisubrl
stc
cli
test
mov
mov
or
fldl
add
ret
and
loopne
and
leave
outsb
mov
loope
andb
push
ret
js
test
outsl
divl
cmp
add
cmp
subb
sub
out
sbb
mov
xchg
pop
mov
adc
or
out
adc
pop
leave
sbb
ret
or
cmp
mov
inc
out
aad
in
push
sbb
sahf
ljmp
ret
lock
fnstcw
or
fisubrs
cmp
fcomps
jo
mov
adc
pop
jns
mov
cmpsl
add
out
int3
push
push
test
sbb
pop
es
mov
cmp
testb
pop
cmp
jae
push
stc
xchg
mov
test
push
fcomps
jecxz
pop
lcall
and
out
xchg
sbb
mov
xor
or
daa
insl
xor
xor
push
js
cmpsl
xor
cs
mov
sub
sbb
sbb
std
mov
jge
repnz
jmp
jle
fcmovb
adc
xor
sub
dec
je
xor
test
insl
lret
and
mov
jge
and
push
lret
cmp
scas
sbb
je
dec
inc
std
aad
pop
xor
sub
mov
cltd
jbe
push
data16
pminub
aam
push
and
jle
sahf
pusha
out
add
cwtl
xchg
stos
mov
loopne
fwait
ja
jle
subl
sbb
xor
sub
test
loop
bound
and
adc
out
mov
and
std
movsb
pop
xor
pop
in
in
std
pop
lret
sbb
ret
int3
jl
and
inc
push
cmc
jg
or
jae
incl
mov
fidivs
imul
pminub
cmp
dec
arpl
xor
fidivl
outsl
divl
push
fstpt
sbb
and
sbb
imulb
dec
mov
scas
pop
cmpsb
cwtl
divb
inc
test
jns
pop
ja
addr16
push
push
in
xor
cwtl
test
in
xchg
xor
iret
jb
jbe
jbe
imul
xchg
mov
sbb
push
mov
daa
shlb
cwtl
sub
stc
int3
push
fiaddl
adc
and
faddl
aad
mov
sub
mov
push
jge
jle
adc
inc
out
mov
xor
das
hlt
mov
mov
divl
xchg
popf
cmp
popf
es
imul
fwait
hlt
or
add
inc
sbb
mov
mov
jns
mov
dec
push
in
pop
int
clc
adc
mov
iret
inc
loop
or
mov
int3
xchg
xlat
clc
ret
sbb
cmpsb
sbb
out
jnp
addr16
clc
popf
adc
shl
outsb
fdiv
pop
jnp
iret
fwait
js
insb
popa
cwtl
mov
popa
inc
mov
fnstcw
lcall
imul
push
mov
and
push
gs
adc
sahf
push
adc
cmp
lret
xadd
ret
fstl
mov
pop
aaa
shr
fadds
jno
jmp
cmp
mov
sub
jp
dec
negl
test
cwtl
hlt
mov
in
shlb
fildll
adc
shrl
test
das
cmp
cld
outsb
xchg
xchg
mov
gs
xor
pop
pop
add
sbb
je
jns
jl
outsl
pushf
push
mov
stos
roll
sbb
mov
push
punpcklwd
call
hlt
mov
fnstsw
mov
jp
xor
mov
mov
dec
jo
push
sbbl
sbb
jg
leave
add
icebp
orl
popf
inc
sub
cltd
aaa
mov
mov
js,pn
xchg
sbb
movsl
mov
rcll
cmp
cwtl
idivl
pushf
push
push
xchg
lock
movsb
and
test
fcmove
sbb
fwait
scas
xor
cmp
roll
xchg
mov
or
cli
movsl
cmp
and
hlt
scas
inc
add
or
or
jecxz
daa
sub
jae
jl
jb
mov
adc
jae
or
mov
decb
xchg
sub
cli
clc
mov
fmuls
shlb
repz
ja
fstp
sub
shrd
mov
cwtl
cmpsw
xchg
push
js
es
sub
and
add
sbb
in
sbb
push
out
jnp
add
dec
sbb
cmp
stos
or
not
xorl
cmpsb
mov
sub
xchg
mov
cmpsl
filds
aam
inc
scas
mov
les
push
sub
insl
aaa
cmpsl
mov
or
cwtl
xchg
movsl
xor
jnp
jecxz
mov
cwtl
push
lods
cmp
and
push
jb
adc
fnsave
ds
lahf
cmp
jl
repz
lds
in
stos
and
adcb
aam
out
lret
dec
pop
cmpl
stc
sub
push
cli
mov
sub
or
xor
inc
loop
jle
popf
daa
cmpsb
sbb
cltd
mov
push
addr16
es
jae
jecxz
cmp
jne
call
lahf
dec
insl
sub
jns
xchg
cmp
jb
push
push
adc
mov
sbb
insb
cmp
testl
sbb
lds
push
push
js
fisubrl
test
or
stos
xor
mov
rclb
sub
sbb
pop
pop
xchg
sahf
xor
fstl
adc
std
cmp
push
les
push
push
xchg
jecxz
or
dec
clc
inc
dec
dec
sbb
enter
out
sbb
imulb
lock
fnsave
popf
shlb
subb
mov
lcall
pop
rcl
mov
fstps
nopl
fwait
sub
ja
dec
sbb
xorb
cmp
and
and
shrb
xchg
cltd
sub
outsl
rcrl
cwtl
mov
dec
add
jnp
iret
or
jo
fcompl
pop
nop
enter
sti
test
xor
add
ficoml
push
sub
rorl
loope
xchg
xchg
or
imul
xor
mov
fwait
and
ss
adc
xorb
andl
dec
inc
cmp
xchg
mov
cmp
adc
iret
mov
jecxz
enter
arpl
jge
in
push
cmp
jns
sbb
cmp
leave
adc
xchg
push
adc
test
lock
sub
cmp
inc
fwait
add
pop
ret
push
xor
jmp
cwtl
in
ljmp
inc
mov
cmc
pop
out
add
pop
jl
cmp
js
ljmp
sbbb
xchg
int3
mov
hlt
push
inc
adc
mov
xor
jecxz
fnstsw
test
stos
jmp
stc
push
cmpsb
test
adc
jne,pt
lods
jp
scas
mov
scas
inc
inc
out
push
sub
popf
loop
and
pop
dec
data16
mov
lds
xor
jl
sbb
mov
xchg
sub
iret
mov
mov
ss
sbb
sbb
imul
xchg
sub
jmp
insl
xchg
fstps
fldenv
daa
pop
jae
or
aam
lcall
mov
cmpsb
stc
xchg
scas
xchg
in
cwtl
pop
xchg
in
addr16
ss
jge
shrb
add
es
imul
imul
add
ss
dec
std
lret
int
xchg
lods
xlat
jl
adc
mov
sarb
lret
inc
jbe
push
subb
outsl
xor
sbb
mov
scas
cmp
and
int3
sbb
sbb
mov
lock
or
cmp
sbb
sbb
ret
sub
lret
inc
inc
mov
sbb
shr
pop
loope
iret
mov
or
clc
es
imull
ljmp
sbb
pop
cmpsl
repnz
jae
jnp
fstps
jp
dec
popf
pop
popa
out
daa
mov
in
mov
xchg
dec
dec
xor
mov
pop
loopne
cltd
andb
movsl
and
mov
lea
ficoms
fwait
imul
adc
push
cmp
push
shrl
mov
push
inc
loopne
push
push
cmp
fnstcw
movaps
and
add
scas
push
les
jnp
push
dec
jge
jne
xor
sbbl
jmp
xor
jp
pop
xor
and
add
jg
iret
sbb
mov
jo
int3
sub
inc
push
mov
loop
fldcw
xchg
dec
sahf
leave
cmpsb
mov
outsb
sub
jmp
movsl
adc
dec
cli
stc
mov
leave
jp
add
js
data16
aam
push
cmp
sbb
popa
xchg
and
cmp
jne
xchg
iret
xchg
xchg
mov
mov
add
push
xor
dec
cmp
sub
mov
or
xchg
jge
jno
mov
xchg
xchg
fistpl
movsl
ss
stos
jbe
and
inc
sub
fs
test
std
pop
lret
idiv
sub
leave
xor
add
cmpsl
mov
icebp
or
pop
pop
sub
repnz
test
pop
fstps
fidivl
sbb
sahf
xor
cmp
or
pop
aad
lret
sti
ret
sbb
mov
fiadds
clc
data16
movsl
pop
and
pop
jge
scas
mov
imul
outsl
cmp
popa
popf
int3
mov
mov
insl
enter
push
jo
mov
mov
cmp
mov
das
popf
stc
push
jge
js
into
stos
cmp
pop
es
lret
stos
inc
out
or
push
loop
push
jns
xor
stc
pop
das
sub
jmp
cmpsl
stos
pop
add
mov
cld
mov
xchg
imulb
in
add
cwtl
sbb
cltd
sahf
lea
xorb
mov
mov
lock
push
pop
cltd
adc
dec
pushf
xchg
pop
inc
cmp
arpl
icebp
or
stos
xchg
jmp
mov
xor
dec
fcoms
jg
mov
dec
mov
push
jmp
in
inc
enter
popf
pop
xlat
sbb
nop
mov
adc
call
and
jae
cwtl
addr16
cltd
inc
inc
xor
sub
mov
sbb
and
jns
xchg
jbe
mov
xchg
scas
jl
push
popa
stos
in
mov
mov
cmp
scas
scas
outsl
dec
fstps
clc
sub
in
or
push
xor
dec
arpl
jo
mov
je
add
les
mov
bound
sbb
pop
and
pusha
sbb
xor
jns
in
mov
jno
hlt
andl
sbb
add
out
xor
js
pop
lods
repnz
daa
lods
push
sub
and
cmp
loop
sahf
into
rorl
call
dec
jmp
bnd
lock
xor
sbb
out
cs
test
into
ficompl
adc
mov
ss
int3
mov
and
std
test
lahf
and
xor
js
lods
jne
addl
inc
int3
xor
cmp
pop
dec
push
jmp
fisttps
flds
lcall
test
rcl
and
js
fdiv
cmc
lahf
pop
xchg
orb
ret
dec
sub
add
sub
inc
jnp
gs
add
faddp
push
test
mov
in
cmpsl
sub
scas
sbb
sbb
push
ds
daa
xchg
fwait
sub
shrl
jge
insl
test
es
out
andl
out
mov
mov
and
jg
sbb
dec
test
lods
cmpsb
xchg
and
mov
jnp
sbb
sub
fldcw
push
cmp
lcall
loope
cmp
sbb
out
sbb
sbb
mov
or
jno
dec
mov
fmull
pop
xor
or
sbb
pop
mov
sbb
pop
out
in
daa
out
or
lret
inc
jge
loop
int3
sbb
xchg
nop
xor
scas
and
jb
cwtl
or
pop
jl
or
and
mov
sbb
lret
sub
rorb
out
mov
xor
jns
mov
and
mov
mov
sub
cs
aam
not
mov
xchg
aam
pop
in
mov
in
dec
dec
mov
cmp
xor
pop
sbb
inc
or
aad
mov
cli
cmp
data16
push
mov
cmp
cli
cmpsb
jl
cmp
jae
sbb
and
jp
dec
js
and
or
fadds
jae
cltd
and
int3
adc
cmp
jae
clc
repz
ss
adc
pop
mov
out
fmuls
insb
int3
or
jp
jae
es
sbb
nop
fsubrs
daa
inc
push
jmp
paddd
push
sbb
js
mov
fcmovbe
and
cmp
jae
adc
addr16
xchg
mov
rcll
push
sub
jge
scas
fadds
fbstp
fwait
cs
test
pop
fisubrs
mov
xchg
clc
dec
mov
mov
loop
jno
jo
cmp
inc
enter
stos
fs
sbb
in
std
sarb
mov
test
push
dec
adc
mov
mov
or
ja
scas
pop
xchg
dec
insb
fldenv
jecxz
incb
jae
dec
testl
or
dec
jb
sahf
jb
out
lcall
mov
xlat
xchg
out
mov
inc
mov
enter
mov
add
push
stos
sub
call
and
and
fsub
or
lcall
je
pop
inc
pop
in
lock
adc
mov
bound
sbb
arpl
mov
xchg
je
and
daa
sbb
cld
cmpsl
push
daa
jge
inc
js
lcall
inc
xchg
cmp
fiadds
out
jns
push
cmp
ds
je
push
xor
divb
jl
lock
dec
data16
outsl
loop
imul
fldl
cmpb
mov
inc
and
mov
ljmp
mov
sbbb
pop
jge
push
pop
jns
pop
jne
cmp
xchg
ljmp
enter
enter
and
mov
punpckhdq
fisubl
out
or
sbb
inc
adc
jne
inc
and
call
arpl
test
sbb
stos
sbb
fdivrs
xchg
in
test
mov
pop
push
sub
iret
mov
outsl
bound
mov
add
sbb
and
cmp
sbb
dec
mov
stos
nop
scas
or
outsl
and
adc
pop
cwtl
repz
sub
xchg
pop
xor
mulb
mov
in
mov
loop
into
sub
push
jge
sub
sti
and
test
sub
or
mov
push
mov
xchg
pushf
stc
shll
das
sub
xchg
ds
xor
dec
jnp
aaa
push
adc
int
sub
dec
ret
scas
popa
jg
jl
sti
stos
push
jbe
cltd
sub
js
pop
test
lods
in
test
dec
dec
cld
mov
je
add
push
pop
fimuls
mov
idiv
imul
iret
xchg
jno
jno
popa
xchg
data16
push
mov
loope
nop
xchg
mov
xor
imul
pop
jnp
filds
inc
scas
adc
xor
rorb
fwait
popf
and
jmp
push
push
jp
sub
ljmp
lods
pushf
xchg
mov
cmp
addr16
rolb
ljmp
js
mov
movsl
popa
ja
inc
jmp
adc
jp
loop
dec
mov
loope,pt
cmp
incl
test
pop
sub
mov
outsl
pop
xchg
mov
lea
xchg
mov
mov
repnz
pop
mov
mull
dec
xchg
scas
rorb
jb
push
rcrb
sbb
sahf
xor
int
data16
idivl
push
cmp
inc
mov
in
cmp
cmp
enter
mov
push
xor
mov
lods
ljmp
das
pusha
jae
iret
jmp
das
les
add
jmp
mov
adcb
sbb
jnp
or
mov
bound
fisttpll
bound
inc
xchg
sub
pop
aad
xor
jo
int3
cli
jbe
out
xchg
movsb
js
pop
pop
fwait
lret
imulb
das
iret
mov
lods
insb
cwtl
loop
cmpsb
cmp
cmpsl
sub
jp
push
mov
cmp
xchg
dec
xor
xor
adc
test
aad
in
cmp
mov
pop
dec
xchg
cmp
push
sub
sub
inc
jae
jo
or
sbb
pop
out
sbb
jg
lahf
je
mov
mov
and
cmp
push
mov
in
cs
lcall
mov
es
test
icebp
divl
sahf
pop
rcl
fs
test
add
gs
and
sbb
dec
nop
and
daa
sarl
inc
dec
push
push
push
mov
sar
mov
mov
add
lods
xchg
sbb
out
inc
adc
adc
xor
das
jo
clc
aas
mov
jle
outsl
loopne
and
enter
dec
cli
mov
mov
cs
je
or
xor
xor
repnz
into
cmp
repz
dec
mov
sti
loopne
jbe
sarl
pop
mov
test
sbb
cmovp
jns
jp
imul
fsub
dec
inc
fsts
lret
sbb
dec
adc
push
jle
sti
ja
push
clc
into
icebp
adc
and
iret
les
jmp
adc
mov
and
mov
mov
adc
or
lds
imul
pushl
push
push
mov
stos
pop
scas
int3
and
fwait
aad
xor
dec
and
mov
outsl
cltd
pusha
mov
jo
mov
divl
daa
jae
bound
mov
clc
and
insb
dec
mov
mov
loop
subb
insl
cmpsl
mov
jae
mov
imul
sub
jns
loopne
fidivl
nop
stc
or
xor
jle
push
sbb
push
das
inc
aas
sbb
or
mov
popf
pop
imul
sbb
add
adc
xchg
pop
cwtl
mov
loope
gs
inc
shlb
inc
outsl
or
ja
loopne
xor
mov
or
dec
jnp
xchg
je
das
frstor
sbb
jnp
les
push
inc
xor
popa
xor
sbb
cltd
movb
inc
or
pop
js
mov
xor
jb
popf
pop
adc
into
cmpsl
mov
jb
out
daa
push
jae
xchg
out
cmp
fcoms
xor
test
fstp
mov
popa
pop
fstl
popa
imul
jae
jge
pop
jp
push
adcb
jnp
stc
mov
cwtl
mov
push
sub
xchg
cwtl
cmp
movsl
add
xor
sub
mov
in
sbb
push
jp
sahf
and
cmp
lock
insl
pop
pop
mov
push
cmpsb
cwtl
and
or
cwtl
adc
cmp
cmpsb
push
jo
mov
mov
aas
mov
cmp
ljmp
pop
data16
addr16
mov
das
int
js
fdivs
dec
pop
test
fsub
pop
xchg
arpl
xchg
mov
pop
mov
ret
dec
pop
sub
in
push
adc
out
shl
pop
fcoms
xchg
je
dec
sbb
push
inc
insl
jae
and
cmpsl
fwait
outsb
je
cmp
into
mov
mull
dec
std
adc
es
imul
pushf
fistps
xor
int3
lahf
sub
pop
xchg
cmp
inc
jns
dec
repnz
fdivl
or
xchg
or
sub
sbb
loop
sbb
push
jge
adc
lcall
out
adc
and
xor
cwtl
pop
push
test
add
sub
ljmp
and
add
lock
inc
gs
outsb
and
add
and
adc
les
push
vpsllq
adc
pop
lock
mov
dec
xchg
xor
sbb
jno
mov
push
pop
mov
sbb
xor
jge
or
sbb
inc
bound
add
or
dec
shll
subl
and
ss
int
pop
outsb
push
mov
ds
xor
add
xchg
cmc
adc
push
out
mov
popa
sahf
dec
das
sbb
adc
out
lcall
mov
mov
sti
pop
sbb
es
out
mov
inc
cmp
sub
xor
xchg
xor
sar
xchg
mov
stc
adc
xor
mov
pop
decb
dec
mov
push
inc
mov
jecxz
dec
xor
jg
and
mov
adc
daa
mov
sub
rorb
push
les
cmpsb
fwait
mov
pop
and
mov
xchg
dec
jne
pusha
aad
pop
stc
pop
jb
sub
and
aam
dec
push
jne
popa
push
popa
push
ds
clc
cmp
scas
xchg
fs
mov
jge
movb
mov
sub
mov
inc
push
add
sbb
scas
scas
jg
mov
aam
adc
push
sub
pushf
xor
inc
test
imul
sbb
cwtl
aas
mov
repz
inc
cli
pushf
lock
jle
rcrl
mov
jmp
cmp
ret
addr16
sbb
cmp
in
jno
out
sbb
cmpsl
jle
enter
xchg
jmp
xchg
xchg
ror
arpl
sub
out
enter
scas
clc
add
ret
adcl
imul
fdivl
mov
addl
xchg
sub
mov
sbb
shrl
data16
jmp
out
and
out
fmul
shrl
xor
xchg
aas
dec
pop
repnz
jg
and
lea
pop
pop
cmp
imul
and
andb
pusha
sbb
inc
loope
lds
cwtl
in
jle
cmp
xor
inc
jns
gs
pop
fsubrl
cwtl
icebp
mov
pop
sbb
mov
mov
lods
inc
and
movsl
push
cmp
test
loopne
lret
adc
and
das
fiaddl
cwtl
call
jne
or
rorb
daa
dec
jb
sub
out
lea
sbb
fadds
fcomps
out
pop
test
ss
sbb
mov
lret
dec
cwtd
arpl
pop
insl
inc
sarb
movaps
xor
bound
test
mov
test
mov
xor
pop
cmp
je
xchg
in
xchg
scas
stos
mov
cltd
fsubl
sub
cwtl
pop
cmp
or
jns
std
or
cmp
xor
cmp
test
sub
sahf
jae
outsb
adc
sbb
ss
ficompl
dec
xor
xchg
jnp
xor
sbb
xlat
pop
andl
loop
rol
and
andb
js
jmp
imul
and
jo
addr16
sbb
xchg
insl
xchg
sub
jg
sbb
imul
outsl
cmp
push
stos
pop
pushf
mov
cs
dec
test
daa
notb
ss
out
push
jge
fcoml
fwait
push
add
cmp
cwtl
call
jne
mov
lcall
es
sbb
dec
jnp
add
push
adc
fistl
jbe
js
add
push
pop
stc
xchg
pop
nop
addr16
mov
popf
ja
sbb
add
jecxz
mov
fcmovb
jns
xor
sbb
push
jecxz
mov
pop
rolb
clc
push
lahf
add
hlt
or
aad
lods
xchg
mov
push
push
jnp
dec
sbb
xor
pop
mov
bnd
jge
sahf
ss
add
iret
orb
das
push
or
xor
mov
sub
sub
jne
and
insl
int
dec
addr16
inc
call
outsb
and
push
sub
xchg
inc
shll
xchg
scas
inc
cli
dec
insb
push
int3
add
sbb
push
test
adc
hlt
xchg
add
sub
push
xchg
ss
mov
aad
mov
jl
roll
idivb
lea
jo
repnz
repnz
xor
mov
stc
pushf
push
mov
push
loope
es
jbe
inc
cmp
sbb
pusha
sbb
js
pop
cmpsb
test
sbb
cltd
xor
xchg
cmp
cmp
pop
cmc
push
sbb
jecxz
in
sub
dec
daa
fxrstor
or
xchg
xor
mov
pop
iret
fs
mov
or
jle
and
imul
add
rcrl
insl
aaa
jge
mov
mov
out
movsb
add
das
pop
idivl
dec
lret
fstpl
or
sbbl
sbb
in
sarl
cmp
adc
daa
mov
mov
xchg
aas
xor
enter
dec
sbbb
ss
pushf
scas
cli
je
sbb
sub
ret
xchg
sbb
jle
and
sti
mov
jbe
iret
xor
lret
sbb
outsl
test
flds
xor
mov
pop
jnp
adc
test
mov
xchg
jnp
jbe
sub
loop
cwtl
pop
mov
pushf
jne
aad
cmp
mov
xchg
jp
les
loopne
rcrb
xchg
ds
call
stos
pop
inc
xchg
jl
arpl
jg
sbb
testb
lock
push
xor
xchg
xor
mov
fidivl
dec
clc
mov
aaa
int
es
mov
mov
ret
sub
jnp
dec
sbb
sbb
lret
push
adc
fsubl
nop
int3
cwtl
fildl
fisttpl
and
aad
jo
cmc
sub
sbb
mov
testl
outsl
cltd
sbb
xchg
sbb
sbb
sbb
jl
mov
outsl
pop
or
add
sbb
mov
adc
out
sti
cmp
mov
mov
aad
and
mov
mov
fildl
test
es
rorl
repz
and
testl
sbb
outsb
mov
das
jo
lods
sbb
sub
rclb
int
scas
dec
sbb
xchg
cmp
icebp
pop
jl
push
or
xor
pop
aaa
cmp
dec
inc
imul
mov
and
lahf
xor
push
sahf
xchg
cmp
jbe
cmp
cmpsb
adc
sbb
and
push
jle
testl
fnstsw
jecxz
fs
test
add
mov
cmp
mov
xchg
mov
pop
iret
cmp
xchg
add
dec
incl
inc
and
mov
sub
dec
pop
mov
paddw
sub
frstor
mov
jmp
and
sub
ja
fnsave
out
sbb
rorb
out
incb
arpl
pop
sbb
popa
or
or
shll
push
pop
jmp
cmp
in
sbb
lock
jg
mov
cmp
into
and
shl
inc
pop
dec
cmc
mov
sub
mov
test
pop
sbb
sub
cmp
cvtdq2ps
xchg
inc
mov
imul
push
insb
xor
and
push
std
clc
mov
pop
dec
and
pop
aas
out
stos
xchg
add
je
aas
sbb
fildll
xor
jecxz
in
add
pop
out
pop
adc
das
fcom
pop
cmpsl
repz
add
ds
cmp
in
movsb
xchg
pop
popf
popf
fbstp
pop
mov
popf
mov
test
ja
leave
push
addr16
js
ret
mov
and
pop
sub
sbb
sbb
test
mov
std
stos
bound
out
popf
and
js
popf
xor
push
aaa
cmp
cld
mov
inc
leave
inc
cli
push
test
jns
pop
pop
and
call
sub
sbb
insb
es
xlat
lahf
roll
in
add
fld
jmp
std
inc
xor
jns
and
push
push
sbb
rorb
mov
mov
mov
es
mov
loop
mov
into
push
inc
shll
jo
scas
je
cs
fdivr
sub
xchg
fsubrl
paddq
jo
pop
cmpsb
push
sahf
and
push
inc
popf
cli
das
xchg
and
dec
test
mov
pop
jle
scas
ds
inc
js,pn
and
insb
inc
dec
sub
sbb
mov
xor
sahf
andb
add
aad
jle
outsl
addr16
pop
xor
sbb
mov
insl
xbegin
scas
out
aad
es
inc
mov
mov
adc
add
inc
xlat
pop
iret
pusha
jns
push
jle
jecxz
sub
aas
stos
stos
or
sbb
fsubr
jp
dec
hlt
mov
imul
cwtl
mov
mov
aas
bound
iret
mov
dec
pushf
cwtl
orps
mov
and
push
mov
dec
cmp
sbb
mov
sub
mov
or
lahf
dec
sub
js
cmp
imul
or
loope
out
adc
sub
loopne
mov
popf
test
push
pop
fldl
aas
clc
mov
test
xor
insl
sbb
imul
ja
out
cli
inc
sub
enter
cli
dec
inc
stos
pop
and
daa
inc
xchg
inc
sub
les
xchg
push
ss
pop
rcll
lds
mov
and
cltd
xor
in
imul
xchg
xchg
rorb
leave
mov
dec
xchg
pop
xor
push
or
fldenv
xor
ret
mov
sbb
icebp
cmp
lcall
dec
mov
sbbb
pop
push
pop
ljmp
and
and
test
ret
std
lcall
lea
add
cmp
mov
sbb
out
inc
imul
xor
shl
jmp
cmp
adc
insb
cmp
mov
mov
push
outsl
add
mov
lea
xor
dec
sub
lea
aam
xor
movsl
xchg
repz
pop
xor
push
lods
adc
jecxz
push
outsl
jb
push
insl
sbb
std
test
ss
popf
pop
mov
add
pop
cmp
inc
cli
mov
mov
ret
mov
jle
sub
shll
xor
dec
xchg
jge
rcrl
and
scas
pcmpeqd
sbb
leave
scas
je
jns
push
idivl
dec
mov
push
or
mov
das
aas
jge
and
push
pop
adc
xchg
addr16
adc
idivb
and
clc
scas
arpl
rcr
aam
test
mov
jo
jns
enter
ja
cmc
in
xor
outsb
lcall
adc
test
stos
lods
sbb
jb
aas
fst
xor
iret
pop
add
mov
mov
movsl
push
mov
lahf
ret
xchg
clc
and
sbb
popa
popa
iret
popl
dec
inc
mov
shr
pushf
xorl
and
mov
pop
or
filds
lods
pop
bound
xor
pop
mull
sbb
mov
sbb
andl
dec
cli
mov
sbb
pop
mov
xor
xchg
xor
jmp
call
flds
and
fstl
xor
fadds
xchg
mov
in
mov
ret
mov
into
sub
add
loop
mov
stc
rcrl
iret
sbb
cwtl
xor
sbb
cmpsl
jo
rdpmc
loopne
nop
shr
cmpsl
mov
sbb
xor
and
jns
test
push
cmp
js
std
hlt
or
pop
push
push
jl
jnp
scas
lods
add
jl
fdivs
fistps
data16
in
out
dec
mov
insb
call
test
push
sub
cwtl
dec
notl
dec
dec
fdivl
nop
movsl
xchg
mov
jp
dec
pusha
out
stc
ret
jnp
lock
ja
xor
imul
clc
xchg
js
pushf
lds
ds
std
icebp
mov
leave
aaa
ss
and
lock
push
hlt
jl
dec
jne
add
and
pop
fstp
xchg
and
or
iret
out
in
add
xor
out
jo
sbb
or
leave
stos
mov
push
xor
imul
fxch
and
or
loope
fsts
andb
je
xor
push
adc
nop
mov
and
mov
jbe
jle
ja
bound
and
cmp
bound
ljmp
sub
xchg
pop
xchg
dec
push
dec
jbe
negb
dec
pop
in
cs
stos
push
enter
int3
popl
dec
pop
push
popf
sbb
pusha
sub
mov
adc
and
imull
jmp
pop
ret
xor
stc
ss
rcrb
in
xchg
dec
inc
and
mov
pop
lds
push
push
xor
outsl
ret
cmp
dec
imul
cli
xlat
les
test
inc
jp
or
shl
mov
and
xlat
pushf
stos
inc
fprem1
arpl
std
nop
ret
sub
lea
outsb
cltd
cmp
push
adc
outsb
lods
aas
ljmp
js
pop
lods
inc
mov
or
pop
sbb
inc
mov
in
push
pop
sub
add
dec
add
loope
pop
mov
es
sti
fsubr
dec
sbb
daa
in
or
adc
sbb
loope
sub
or
inc
push
clc
push
test
and
rorl
fstpl
js
or
adc
scas
inc
js
sub
ss
imul
pop
movsl
pusha
int3
js
mov
xor
fildll
adc
mov
call
movl
xor
dec
or
pusha
test
jl
sbb
cli
stos
aaa
js
sarb
mov
sub
and
jle
imul
movsl
adc
subl
pop
xor
jbe
jp
pop
mov
aaa
mov
push
aad
add
mov
pop
jnp
fildl
lcall
lret
stos
addr16
sub
xchg
daa
cmp
rcll
lcall
pop
std
add
push
loopne
dec
fbstp
pop
cmp
xor
fildll
out
xchg
out
pushf
inc
cmp
aas
lahf
adc
cltd
les
mov
add
in
mov
jecxz
mov
testb
xchg
aas
jb
or
popf
loope
xchg
mov
ficoms
mov
mov
rorb
jnp
lahf
mov
imul
fcompl
ds
inc
rol
push
and
in
sbb
cwtl
fisubrl
fwait
pop
sbb
out
inc
cmp
lcall
inc
xor
and
mov
jmp
rclb
mov
fstps
call
sbb
test
imul
cwtl
lods
fsubrl
mov
push
repz
mov
loope
lods
popf
gs
sbb
and
fwait
pop
subl
sbb
lods
movsl
mov
out
call
repz
cltd
mov
in
mov
leave
ds
sub
fwait
xlat
loop
les
xchg
add
jnp
sbb
add
aaa
or
std
rclb
js
mov
cmpsl
cld
dec
imull
jb
push
cmp
jecxz
xlat
imul
jae
sbb
call
aas
xor
and
jle
cmpsb
mov
mulb
popf
push
lahf
push
testl
repz
push
dec
and
jae
aam
or
ja
popf
cs
jecxz
insb
inc
pop
int
mov
mov
mov
pop
enter
repz
stc
sub
aam
movlps
pop
movsb
cmp
sahf
lea
pop
add
cli
sub
and
lcall
sbb
cmp
and
or
aaa
imul
cmp
sti
ret
lock
mov
push
push
xor
enter
mov
lods
jo
aaa
jmp
call
or
fs
xor
push
jbe
sub
push
ljmp
insl
cltd
int
xlat
adc
outsl
movsb
or
js
in
subb
nop
adc
int3
xor
add
dec
mov
sbb
in
notb
jno
mov
jp
sub
aaa
jge
add
jns
sub
cmp
iret
iret
xor
and
cmp
testl
test
imul
xchg
mov
pop
and
xlat
sub
mov
adc
cmc
cli
jno
pushl
sbb
popa
pop
cmp
in
ret
call
int3
mull
bound
fstl
mov
mov
cmp
test
jae
ret
cmp
stos
xchg
push
mov
aam
mov
mov
mov
jle
dec
push
rcl
stos
xor
scas
enter
pop
jbe
shlb
mov
sub
cmp
test
xor
sub
and
adcb
xchg
cli
out
sub
cld
pop
subb
cmpsb
js
sbb
adc
sub
das
imul
fadd
inc
xor
push
mov
ret
mov
lahf
ret
mov
test
call
test
arpl
xor
inc
stos
inc
dec
dec
pop
jge
jno
sub
mov
aam
jmp
mov
popf
jno
jnp
rolb
jo
cmp
sbb
bound
adc
stos
push
sub
xchg
movsb
cwtl
adc
lcall
mov
mov
inc
jo
jne
cwtl
xor
dec
xchg
popf
js
aaa
xchg
incl
cli
ljmp
jmp
stc
popf
arpl
std
ss
test
das
scas
sbb
cwtl
packsswb
arpl
pop
mov
es
mov
into
adc
xchg
in
push
pop
nop
dec
sbb
add
dec
cmp
xchg
cmp
insl
imul
iret
push
ja
js
flds
adc
hlt
jle
repnz
jle
das
insb
testl
call
imul
fildll
add
jne
rcrl
int
push
pop
push
imul
cwtl
cli
push
push
cmp
jo
xchg
lods
movsb
and
push
ja
jnp
cwtl
aaa
imulb
fisubrl
hlt
push
arpl
mov
mov
mov
pop
sub
loopne
jp
cltd
mov
dec
pop
mov
das
mov
jl
pop
insl
push
nop
imul
jmp
xor
ret
clc
sub
cmp
xchg
outsl
cltd
fimull
and
push
push
dec
repz
nop
jns
mov
sub
vpaddusw
aaa
and
sarl
cmpsb
fildl
mov
adcl
mov
sarl
mov
outsb
lea
fwait
shl
push
insl
mov
insb
sub
push
pushf
clc
fiadds
mov
scas
sbb
and
cmc
mov
inc
cmpsl
lea
test
jnp
dec
xorb
dec
cmpsl
addr16
and
outsl
or
stos
das
fadds
cltd
sbb
mov
loope
sub
xor
test
jl
push
iret
out
cmpsb
comiss
js
push
rcrb
fwait
ss
rcrb
mov
mov
and
sahf
stos
inc
xor
cwtl
jmp
je
lret
mov
imul
mov
jno
add
cmp
inc
xor
aaa
sbb
out
mov
jp
jbe
pop
ds
jle
pop
cmc
jecxz
xor
xor
xor
test
push
cmp
ret
imul
or
jge
mov
in
negl
and
iret
add
mov
cli
push
cmp
jl
dec
push
mov
filds
sub
ja
mov
movsl
pop
dec
xor
rclb
lods
shrl
out
out
pop
mov
jl
sub
aaa
stc
outsl
mov
lods
push
std
js
mov
cmp
lcall
insl
stc
add
mov
adc
sub
dec
xor
lods
sbb
adc
hlt
add
cltd
sbb
lds
xor
mov
cli
lret
pop
mov
ds
cmc
outsl
dec
fiaddl
pop
shll
jnp
imul
fmull
in
cmpsl
lret
jl
dec
insl
movsl
loope
push
mov
and
stos
inc
in
cmp
addr16
scas
pop
out
lret
adc
loop
aad
repnz
mov
push
sbb
test
xlat
pushf
xchg
pop
push
xchg
mov
out
fs
shr
and
aas
push
stos
pusha
cltd
idivb
push
dec
fstl
mov
idivb
inc
pop
movsl
sub
dec
ljmp
imul
shl
xchg
loope
mov
es
outsb
lcall
dec
notl
xchg
out
xor
outsl
cmpl
cmp
xor
rcl
sub
fsubrs
out
aad
insl
out
loope
outsl
jnp
push
mov
push
sbb
xchg
in
in
add
and
loop
int
sbb
ds
xchg
adc
inc
mulb
or
push
jno
sti
mov
inc
pop
or
push
rorb
push
sbb
mov
lea
mov
xor
xor
pop
dec
pop
subl
cmp
xor
outsl
mov
and
sahf
dec
xchg
hlt
jge
sub
fnstsw
sub
and
mov
stos
mov
insl
inc
jg
aas
es
cmpsl
out
cs
into
jl
push
fnstsw
cmp
jne
and
arpl
into
filds
add
jg
sub
jmp
lods
cmp
push
adc
jbe
mov
dec
shrb
pop
outsb
cltd
fisubs
fwait
repz
or
pop
lret
scas
pop
pop
cltd
loope
notl
push
xchg
or
sbb
les
jge
and
sbb
jne
xor
popa
jbe
shlb
andb
call
ror
jl
js
cmp
xor
push
adc
or
mov
and
adcl
add
cltd
arpl
xchg
sti
fidivl
nop
sbb
lds
lahf
adc
adc
outsb
jg
hlt
and
inc
clc
cli
or
jmp
pop
mov
and
outsb
fldcw
jg
fisubrl
std
inc
add
xchg
ljmp
fs
mov
jno
mov
cltd
popa
cmp
popf
cmp
daa
out
paddusw
xchg
les
pop
inc
jmp
pop
xor
sbb
shlb
jae
cmp
jle
mov
sbb
addl
lock
xorl
xchg
mov
cmpsl
or
flds
ret
scas
addl
mov
mov
rcl
arpl
shl
push
repnz
adc
mov
mull
cs
lods
xor
aaa
repnz
or
xor
xor
xor
rcl
js
jns
lret
mov
lret
push
filds
xchg
in
sbb
and
imulb
out
dec
xbegin
shll
cwtl
pop
add
xlat
push
sub
iret
push
jb
in
addr16
stc
mov
xlat
clc
out
cmp
call
pop
pop
dec
lcall
lock
sbb
push
sub
or
pop
push
mov
dec
aaa
and
sarb
sbb
loopne
inc
inc
insb
stos
sub
push
lea
or
mov
cmp
mov
or
orl
outsb
cwtl
pop
je
fsubrl
cmpps
xchg
dec
cwtl
mov
inc
adc
or
daa
std
push
outsb
xchg
inc
ss
clc
outsb
mov
imul
es
mov
js
out
cmpsb
jecxz
pushf
mov
sbb
je
sbb
jns
sub
fcomp
fsubp
mov
inc
mov
dec
sbb
cmpsl
mov
repnz
jecxz
sbb
inc
jp
pop
mov
sbb
bound
outsl
clc
loope
sbb
lods
cmp
sub
iret
outsl
popf
sub
sbb
fbstp
and
popf
jge
outsb
mov
fwait
lock
inc
cmp
mov
mov
hlt
pusha
or
or
aad
xchg
cwtl
dec
push
xchg
in
dec
mov
xchg
sbb
shlb
sbb
jg
and
jae
gs
push
mov
movsb
in
mov
mov
push
or
addr16
lea
and
inc
and
mov
enter
lds
jp
mov
hlt
xor
in
fildll
cmp
inc
insl
cwtl
mov
stos
std
leave
xor
sub
pop
add
inc
mov
pop
pushf
and
xchg
insl
cmp
push
clc
test
sub
mov
cmp
and
mov
je
push
adc
paddusw
pop
lret
sub
sub
and
js
sub
pop
mov
and
and
sbb
or
mov
sbb
mov
xchg
stc
jge
sbb
std
into
sub
ss
pop
mov
pop
add
fstl
lahf
inc
shlb
int
jge
inc
or
mov
stc
fstps
dec
cmp
mov
mov
add
mov
pop
sub
jge
int
push
out
mov
repnz
and
popf
mov
loopne
sarl
fldcw
in
pop
aaa
rcl
inc
jg
cmp
outsb
pop
dec
pop
arpl
daa
sbb
subb
jle
pop
adc
lret
jo
mov
cmp
xor
xchg
cwtl
mov
lcall
pop
cmp
ss
div
outsl
scas
mov
mov
mov
pop
inc
cwtl
movsb
xchg
lahf
int
adc
mov
xchg
jb
push
inc
inc
inc
mov
xor
test
int
call
loope
dec
ja
mov
shll
imul
jge
ja
add
mov
xchg
std
sbb
repz
in
push
sbb
fwait
mov
das
fldt
popf
nop
out
mov
pushf
xchg
repz
push
fdivr
bts
dec
dec
mov
fst
pop
lcall
stos
call
pushl
iret
push
daa
xchg
imul
inc
test
lock
pop
mov
xlat
in
out
popf
jbe
js
lret
movsl
mov
fists
mov
jo
sub
xchg
mov
xchg
mov
xor
cmp
orb
push
xchg
mov
inc
fwait
push
push
pop
clc
insb
pop
lahf
mov
add
push
rcrl
cmp
xor
xchg
daa
cmp
mov
mov
or
pop
outsl
pop
xchg
mov
inc
and
in
out
or
sbb
sti
je
fistps
jge
loope
jl
or
jae
inc
fwait
ret
jae
xor
imul
cltd
mov
xor
mov
mov
mov
pop
lea
push
pop
test
sbb
mov
cmp
lcall
jne
mov
stos
or
jge
pop
and
add
xchg
jno
loop
mov
mov
push
imul
mov
add
lahf
push
pshufw
fucomp
jg
popf
lock
xchg
orl
imul
sbb
nop
aaa
rcrb
je
shll
push
dec
insb
lock
inc
psrad
pop
add
sbb
cli
andl
adc
cld
xor
pusha
scas
insb
ds
mov
pop
or
inc
or
das
cli
popa
stc
fistpll
popa
mov
dec
sub
imul
add
jb
pop
sbb
das
cmc
stos
mov
mov
pop
push
mov
daa
sbb
or
lea
popf
cld
mov
inc
stos
xor
mov
xor
out
cmp
sub
pop
adc
test
je
int3
sbbl
or
test
stc
push
enter
in
sub
lods
shufps
imul
and
pop
andb
and
add
jle
xchg
cmpsl
pop
xchg
ret
cmp
enter
ja
ret
mov
repz
loopne
inc
and
jo
lock
fnstsw
mov
aaa
das
int
push
jae
ret
adc
mov
and
int3
popf
add
mov
adc
sub
dec
shrb
es
popf
mov
add
gs
nop
outsl
xchg
cli
outsl
jecxz
stc
push
in
push
je
xchg
arpl
mov
je
out
mov
xor
lcall
into
aam
add
in
xor
and
ret
and
arpl
imul
dec
pop
mov
sbb
mov
test
leave
pop
es
sbb
and
sbb
xchg
add
add
cmpsl
test
sbb
jg
jmp
jo
call
cmc
es
popf
idivl
sbb
das
mov
mov
fnstsw
loope
cmp
mov
movsb
mov
sti
leave
fsubs
cs
fcomp
fs
imul
cmp
inc
xor
sbb
mov
xchg
loop
cmp
mov
stc
cmp
jae
cmp
sub
jnp
out
test
push
xchg
ficoml
in
push
xchg
xchg
xchg
jns
mov
pop
mov
je
sub
xchg
les
ret
jns
arpl
aaa
mov
fsubr
xor
out
nop
ficoms
aam
outsl
cltd
pop
sbb
mov
outsl
cmpsb
aam
pop
sbb
adc
push
std
test
and
xchg
cmpsb
mov
cmp
jnp
sub
aaa
fisubs
sbb
lods
stc
mov
cs
cs
in
adc
add
fiadds
jmp
xchg
insl
mov
and
or
mov
push
gs
fwait
sub
stos
out
subb
outsl
sbb
bound
jnp
std
lds
dec
iret
insb
testl
pushf
mov
aaa
aam
test
test
mov
fucomip
ret
jecxz
sahf
cmp
jmp
ss
lock
sbb
push
das
mov
lcall
mov
push
xchg
fiaddl
adc
xorl
push
sub
hlt
pop
sbb
cmpsb
js
insl
mov
shll
sarb
lea
inc
mov
pushf
cwtl
test
lods
cmpsb
and
sbb
cwtl
sbb
xchg
add
and
sub
out
lea
leave
ds
pop
rorl
dec
movsb
cmp
pushf
out
or
sbb
int
or
xchg
popa
jle
imul
clc
arpl
loop
mov
mov
lods
pop
pop
sbb
jb
aaa
mov
sbb
lea
mov
outsl
add
sbb
lcall
or
or
pop
aad
aaa
push
fwait
mov
cld
imul
xchg
iret
adc
in
xor
insb
cmpsb
mov
or
loop
js
mov
jne
sahf
scas
icebp
jae
imull
jno
mov
imul
stos
aad
out
les
ljmp
decl
test
stos
ljmp
mov
pop
inc
sbb
hlt
jae
das
push
jge
std
sbb
sbb
inc
int3
push
divl
cwtl
and
cwtl
mov
pop
loopne
stc
nop
lret
dec
repnz
pop
popf
fiadds
pop
call
ss
dec
mov
add
mov
bound
mov
into
xor
stos
addb
push
jmp
mov
stos
pop
xchg
loopne
mov
push
dec
loope
push
std
cmp
dec
sbb
push
and
mov
push
aaa
dec
add
scas
bound
lock
inc
cli
mov
in
mov
xchg
ljmp
leave
daa
jnp
movsl
imul
mov
test
sahf
xor
sub
leave
pop
lahf
mov
cmp
outsl
xchg
outsl
mov
mov
push
push
add
mov
add
add
jp
push
add
popf
mov
mov
mov
les
bound
jp
stos
mov
call
das
ret
lahf
xor
dec
jg
sbb
jns
push
stos
jbe
push
or
jae
ret
lret
xchg
aaa
mov
stc
xchg
or
lods
sbb
movsb
mov
inc
mov
xor
dec
std
mov
int
jno
addr16
lods
push
mov
mov
lret
dec
call
dec
out
popa
add
or
out
test
jecxz
adc
and
jo
jge
ss
pop
cmp
sbb
sbb
and
cmp
push
and
inc
fistps
sub
orl
dec
enter
push
jae
cld
add
xchg
dec
mov
xchg
aam
icebp
pop
or
movsb
sar
push
push
mov
jne
sub
clc
add
mov
addb
dec
bound
pop
jp
pop
fisubrl
cvttps2pi
pop
popa
lds
bnd
outsb
push
add
mov
jne
iret
pop
in
pop
leave
add
sbb
and
cld
lds
cli
les
cmpsl
push
pop
fldenv
sti
ficomps
insl
pop
mov
xchg
push
iret
out
add
lods
or
mov
shlb
adc
out
fidivs
and
fucomi
imul
and
xchg
push
jb
jb
aas
sahf
arpl
scas
push
pop
data16
nop
xlat
xchg
cmp
mov
addl
popa
popa
fcmovu
add
sub
and
xor
in
enter
in
sub
aas
int
sbb
adc
sbb
cmp
iret
shll
push
sbb
loopne
jmp
dec
pop
imul
pop
popa
pop
cmc
push
lahf
inc
mov
js
xor
mov
or
ss
sub
mov
imul
cmp
es
and
test
mov
pushf
in
mov
adc
mov
out
sbb
mov
setle
and
scas
sbb
xchg
mov
fdivs
dec
jns
cmp
push
inc
cli
pop
and
mov
out
fs
xchg
sbb
push
push
cltd
sub
sub
or
lahf
je
idivl
popf
sbb
fs
or
jmp
xor
das
pushf
push
adc
jns
mov
fldl
cmp
lock
fimull
xorb
in
shlb
cmp
insb
test
scas
faddl
push
pusha
mov
insl
dec
shrl
popl
sub
dec
pushf
jle
jge
push
loopne
inc
cwtl
xchg
loopne
lcall
xlat
mov
sbb
mov
mov
cmp
shll
sub
dec
dec
sub
pop
es
ss
jg
cld
add
lahf
sbb
push
pusha
fidivl
jmp
ds
push
in
ja
xor
fwait
test
imull
jg
adc
arpl
xchg
stc
mov
or
mov
pop
cmp
mov
lahf
mov
mov
aas
loope,pn
pop
sbb
mov
mov
xlat
lods
lds
sbb
ret
mov
jbe
jge
mov
push
cs
jns
dec
jo
movsl
outsl
test
sar
dec
icebp
sbb
pop
popa
jp
cmp
lods
pop
inc
sbb
lea
fcomi
jmp
pop
xor
std
pop
je
jbe
xchg
and
int3
fs
inc
rcrl
inc
sub
sbb
cmp
popf
xlat
aas
jg
adc
fnstcw
aas
pusha
sbb
and
int
jecxz
sbb
add
fsubl
out
lock
sbb
or
popf
mov
sbb
movsl
ficoml
push
es
lock
imul
cltd
aas
add
in
fmulp
xor
sbb
insb
flds
xchg
mov
jb
xor
movsb
mov
or
and
cs
sbb
lcall
dec
mov
add
lds
inc
sub
adc
and
int3
jns
push
xor
pop
sbb
jo
xor
sti
je
cs
mov
sarl
pop
out
incb
arpl
in
jbe
mov
jnp
xor
mov
or
sub
adc
xchg
es
xor
xchg
cmp
mov
into
or
mov
push
daa
addr16
js
insb
movsb
addr16
pop
push
dec
push
loop
in
cmp
mov
sbb
stc
cltd
sti
bound
ss
jmp
sbb
nop
lods
push
arpl
mov
cs
cld
sub
lock
shll
insl
out
jecxz
rcrb
movsl
pushf
je
xchg
mov
mov
out
jg
jbe
add
test
push
scas
adc
adc
pop
stc
sar
push
inc
movsb
cmc
cmpsb
xlat
cmpsb
xor
cvtps2pd
jo
fs
sbb
push
dec
jns
sbb
shl
aaa
fstpl
lret
repz
xchg
iret
push
jae
push
data16
xor
push
sbb
hlt
idiv
inc
fwait
jae
imul
mov
xchg
adc
xchg
pop
xor
sahf
mov
xchg
jecxz
sub
cltd
es
bound
scas
mov
repnz
cmp
pop
xor
add
rclb
popf
mov
divps
pop
dec
xor
stc
pop
pop
lahf
push
push
cmc
enter
cwtl
data16
jle
test
mov
mov
lods
in
mov
inc
push
xchg
enter
pop
jecxz
pushf
jmp
repnz
movsb
aas
push
out
jl
mov
fwait
in
popl
lea
push
in
xor
lret
aad
mov
push
lret
inc
adc
js
bound
pop
xchg
mov
mov
in
addr16
mov
scas
lret
js
fwait
dec
xor
iret
or
shrb
add
lcall
loope
xor
imulb
in
shlb
lods
leave
pop
mov
mull
fstpt
test
aaa
mov
add
sbb
pop
add
push
js
in
ret
sbb
sub
push
sbb
test
lcall
inc
insl
mov
in
into
incl
jae
and
pmaxsw
mov
sahf
repz
and
mov
mov
cmp
push
test
sbb
sub
roll
ss
jo
sahf
jo
pop
mov
adc
scas
jg
mov
stc
cmp
outsb
rorl
sbb
ficompl
loop
jp
std
cmp
pop
loope
cmp
mov
out
dec
lret
pop
or
outsb
and
fld
addr16
jmp
inc
mov
ja
or
das
adc
fcoml
aaa
cmp
push
mov
outsl
jmp
sahf
imul
pop
aaa
scas
sub
ds
stos
push
mov
jl
mov
dec
pop
es
pop
mov
es
in
jp
and
pushf
mov
cmp
loope
out
push
dec
enter
fs
jb
les
movsl
js
pop
jnp
mov
pop
sub
test
subb
cmpsl
pop
sbb
sti
pop
ja
cli
test
mov
and
jb
mov
fwait
mov
sti
mov
cmpsb
int3
insb
notb
aad
add
in
loopne
add
icebp
loope
sub
outsl
adc
xor
rcrl
das
push
lock
lret
mulb
out
xorb
add
daa
adc
sbb
sbb
fldt
dec
jne
ja
clc
jmp
cwtl
enter
loop
sub
sbb
leave
sub
push
xchg
lock
jae
cmpsb
movsb
xor
jne
mov
sahf
add
in
sub
inc
inc
std
push
es
pop
sub
push
cmp
dec
pop
jnp
outsl
jns
mov
jo
inc
nop
xor
cwtl
loope
cltd
icebp
xor
cmp
lea
scas
inc
pop
sbb
adc
xor
aas
sub
dec
pop
iret
rolb
xchg
sahf
notl
push
lock
cld
mov
mov
cmp
or
test
push
aad
lock
pop
jae,pt
std
xor
jbe
pusha
mov
int
or
dec
ljmp
jbe
shrb
dec
in
pop
sub
add
pop
mov
ror
or
mov
xor
repz
ds
jbe
dec
cmc
mov
hlt
and
in
data16
nop
pop
sahf
jo
sbb
fs
mov
sbb
pop
mov
pop
test
push
pop
addr16
xchg
and
orb
pop
jb
popa
cmp
les
out
sbb
inc
cmp
pushf
int
xchg
stos
subl
jne
shr
pop
mov
add
enter
push
cmp
call
dec
mov
add
test
div
sub
mov
sbb
jne
xchg
in
jge
std
or
mov
cltd
out
loope
in
add
aas
fstl
sbb
or
in
mov
das
jno
daa
out
notl
pushf
push
mov
inc
xor
jp
jge
sub
lea
push
lods
ja
cltd
and
mov
or
nop
fimull
lret
ret
mov
and
clc
xchg
inc
les
jne
aaa
outsb
mov
frstor
adc
xchg
mov
pop
fs
adc
fldenv
jbe
add
lahf
mov
pop
push
pop
hlt
leave
mov
arpl
dec
rcll
mov
scas
and
pop
add
mov
and
sbb
adc
pop
lock
xor
xchg
bound
sub
sub
lea
jbe
mov
add
loopne
fisubrl
mov
push
mov
stos
mov
out
cmp
ja
xchg
xchg
inc
and
daa
dec
loopne
sbbb
popl
push
lret
cld
test
setle
mov
cltd
and
sub
fstpt
or
and
sbb
xchg
mov
sub
ret
out
cmp
xchg
in
loop
icebp
cmp
mov
cmpsl
cwtl
popf
icebp
pop
and
sub
ss
xchg
into
movsb
mov
js
shlb
test
and
mov
pop
pop
fwait
in
fistps
adc
les
lret
andb
in
mov
shl
stc
js
ficoml
addr16
cltd
stos
cmp
fcomp
into
sbb
sub
xor
inc
push
push
movsb
sub
adc
and
sbb
loope
cmp
xor
mov
xchg
das
mov
add
push
dec
cmp
jg
mov
add
xchg
sbb
sub
cmp
mov
inc
lods
fsubl
rorb
scas
fdivrs
out
xor
cmp
sbb
pop
jb
lods
dec
gs
sbb
addps
pushf
sub
test
popf
xchg
mov
out
out
insw
dec
and
lock
xchg
sbb
or
xor
call
outsl
mov
test
cmpsb
pop
repz
out
mov
xchg
lret
inc
fadds
outsb
mov
xchg
cld
sub
insb
or
cmp
sbbl
jae
push
push
sub
fxch
les
das
outsb
mov
mov
sbb
mov
iret
xor
or
pop
mov
in
and
push
nop
jg
hlt
jle
jno
dec
pop
sbb
out
sbb
xchg
adc
ret
mov
sarl
mov
fmull
inc
sub
mov
inc
adc
inc
push
cmp
insb
sub
fstl
pusha
cwtl
jno
sahf
idivb
dec
xchg
mov
imul
inc
test
sbb
ljmp
cmp
pop
or
pop
mov
cmp
sub
in
jne
cmp
jns
iret
push
ret
je
ss
js
xchg
rcr
jecxz
stc
ja
cmpsb
xor
xor
cmp
inc
in
mov
dec
lahf
dec
cltd
sbb
or
sysenter
and
fisubrs
inc
dec
sub
mov
add
flds
fld1
add
addr16
xchg
in
adc
jnp
fistl
aad
dec
add
scas
inc
int3
adc
stos
dec
cmp
pop
ror
scas
out
mov
mov
push
mov
cwtl
xchg
xchg
fs
sbb
outsb
fstpl
xchg
stos
pop
dec
movsl
sbb
sub
inc
out
shrb
cmpsl
scas
mov
or
loop
xchg
push
jbe
into
cmp
shlb
nop
mov
pop
stc
pop
daa
std
jno
dec
je
push
addr16
cltd
and
cs
or
push
test
lcall
cmpsl
divb
decb
adc
gs
ret
jns
pop
mov
jge
mov
jecxz
xchg
lods
add
dec
or
mov
jne
pop
ret
jecxz
test
shl
mov
xor
insb
push
lret
scas
and
cmc
sbb
xchg
or
xor
mov
sub
pop
mov
jb
test
dec
hlt
je
dec
inc
sub
into
clc
stos
popa
cli
lcall
push
and
jno
and
and
jno
xor
hlt
jmp
cmp
mov
xchg
in
adc
stc
adc
mov
mov
pop
ret
repnz
lods
mov
mov
les
cmpsl
imul
xchg
mov
inc
mov
in
fdivr
jle
pop
leave
dec
add
sub
sbb
mov
mov
sar
lret
mov
or
aad
fstl
mov
pop
xrelease
addr16
shll
insl
lea
shlb
push
push
or
out
icebp
lret
fisubrs
jmp
or
xor
jo
cmp
xchg
mov
sarb
stos
sbb
fucom
cmpsb
dec
ss
sbb
pop
jo
loop
sub
aaa
mov
ds
xor
loop
aam
pop
mov
xor
in
add
in
lcall
sbb
call
jl
push
cwtl
outsl
push
jmp
rcrb
xchg
jl
in
cmp
je
bound
test
push
ljmp
sub
dec
xchg
sub
fstpl
outsl
mov
dec
xchg
pop
inc
std
mov
xlat
ret
or
jbe
dec
les
mov
jmp
repnz
sub
cli
sbb
fldcw
mov
mov
cmp
jno
inc
outsl
stos
rcr
in
sbb
into
call
lods
xor
adc
mov
push
sub
push
stc
xchg
loope
adc
scas
sub
mov
sub
mov
test
mov
shl
push
pop
xchg
push
lods
sub
stc
pop
test
push
addr16
pop
and
cmp
cwtl
dec
cmp
mov
sahf
push
mov
jns
dec
aam
mov
nop
pop
outsb
and
push
jbe
push
sub
push
sti
mov
mov
ffree
inc
sbb
hlt
add
lods
pop
push
push
mov
and
inc
mov
fbld
testb
mov
adc
sub
rclb
inc
mov
enter
sbbl
pop
sbbl
lods
jl
jo
cmp
out
dec
mov
mov
mov
xor
mov
loopne
insb
mov
sbb
jl
enter
test
fisttpll
jbe
lcall
inc
cmp
xor
jge
sub
dec
flds
and
movsl
outsl
mov
jmp
das
and
repnz
xchg
fwait
lcall
es
sbbl
es
jno
xchg
lock
std
jb
stos
inc
push
add
lret
xor
outsl
xchg
cmc
push
pop
jmp
lea
jns
nop
fwait
add
xchg
xor
or
cmp
push
imul
adc
jb
jno
pop
test
popa
lcall
scas
pop
add
cwtl
sbb
popf
sbb
mov
dec
mov
stos
mov
mov
push
jl
data16
daa
ja
int
outsl
adc
insl
mov
xor
decl
movsl
push
das
scas
cmp
andb
das
lret
push
lret
push
insl
pop
mov
ds
mov
push
cmp
arpl
aam
das
xchg
or
ds
lret
fwait
test
mov
movsb
mov
fs
les
xor
je
mov
popf
or
out
out
sbb
xchg
dec
aaa
cmc
mov
jb
fisubl
mov
push
inc
add
cmp
in
mov
hlt
mov
repnz
outsl
push
aaa
loope
out
stc
pop
mov
fnstenv
sti
jge
movsb
aad
xor
adcl
inc
mov
push
and
in
fmull
outsl
mov
pusha
jg
push
mov
cmpsb
out
xchg
js
push
inc
cmp
sub
cmc
or
popf
dec
int3
jns
lds
pop
pop
xor
aaa
insl
adc
mov
cmp
mov
repz
and
imul
cmp
jnp
int3
les
or
pop
neg
fstps
jge
loope
mov
fs
or
int
mov
test
mov
dec
cmp
xchg
icebp
call
sbb
sub
sub
rorl
or
mov
sahf
in
xor
fwait
ret
sti
or
pop
push
scas
fcmove
ja
clc
aam
inc
ret
repnz
pop
pop
xchg
js
cmp
mov
adc
lahf
scas
test
pop
inc
sbb
sub
sahf
sbb
dec
pushf
dec
pop
adc
pop
dec
popf
and
orb
mov
loop
push
inc
pop
inc
mov
and
outsb
jns
pop
mov
xor
adc
jmp
xor
mov
adc
adcb
sti
xchg
and
pop
ret
inc
push
jmp
mov
push
sbb
push
inc
add
xchg
icebp
js
cld
xchg
adc
cld
fs
int
jns
les
cmp
sti
xor
daa
fucomp
iret
jge
adc
out
insb
loope
mov
jne
mov
std
and
add
mov
icebp
mov
icebp
clc
sub
je
movsl
sub
or
sbb
aaa
mov
adc
rcrb
mov
push
leave
mov
push
push
sub
push
sbb
adc
inc
sbb
and
divb
je
jo
push
jno
sbb
xchg
pop
pop
out
fisubl
movsb
test
or
fwait
cld
mov
movsb
in
bound
pop
cli
stos
sub
add
xchg
mov
movsl
lds
cmp
into
jae
mov
stos
jno
iret
xchg
cltd
pop
dec
hlt
or
cmp
jmp
das
das
int
mov
ss
shl
cwtl
test
iret
inc
std
push
and
xor
ljmp
push
jecxz
cwtl
dec
lcall
and
mov
push
mov
in
out
sbb
int
cmpsb
xchg
lret
lds
cmp
ss
mov
mov
lea
mov
sub
sarl
and
scas
and
pop
jp
jne
lds
das
adcb
lock
repz
xor
lcall
iret
cmp
popf
sub
addr16
inc
mov
mov
iret
enter
cwtl
enter
push
lret
sub
cmp
push
outsb
sub
pop
call
setp
cmpsb
sbb
sbb
push
incl
jge
sbb
mov
fdivrs
mov
inc
lock
iret
rclb
in
stc
add
inc
cmpl
dec
pop
jmp
setp
lock
daa
mov
lret
insl
stc
jbe
push
pop
jbe
inc
sbb
ret
js
cmp
mov
mov
iret
adc
insl
lahf
orb
mov
imul
cmp
sbb
sbb
stos
cmp
fildll
mov
and
movsb
pop
pop
out
xchg
mov
push
call
in
mov
mov
roll
cmp
adc
and
ficompl
cmp
daa
cltd
test
ret
pop
fbstp
mov
fnstsw
xor
xchg
test
dec
adc
xor
inc
jns
mov
xchg
nop
sbb
add
dec
mov
scas
xlat
imul
int
adc
sbb
clc
mov
imul
sub
and
pop
pop
pushf
aaa
xchg
iret
xor
test
xchg
ret
icebp
mov
lret
jbe
js
xchg
push
adc
faddl
arpl
or
mov
lahf
loopne
pop
fadd
push
ja
sbb
inc
jp
je
mov
cld
cmpsl
sub
shlb
mov
xor
into
mov
les
jnp
jb
xchg
jb
test
adc
mov
fadds
outsb
jns
cmp
sub
cltd
aad
push
fnsave
xchg
outsb
mov
sub
imul
dec
mov
js
dec
lods
sub
scas
cmp
sub
jle
out
fistps
insb
jecxz
or
xchg
out
adc
xchg
fisubrs
sub
ret
mov
sub
cmc
outsb
lea
adc
insb
fcoms
mov
iret
and
rolb
push
cwtl
pusha
addr16
mov
std
pop
out
mov
push
sbb
outsb
sbb
sbb
pop
dec
xor
xchg
mov
jae
outsl
insb
inc
and
shrb
sbb
scas
sarb
fstpt
icebp
push
test
dec
adc
adc
sub
scas
xchg
mov
das
jno
stos
or
mov
scas
mov
xchg
cwtl
and
pushf
clc
push
outsb
inc
push
std
inc
jle
stc
sbb
jb
mov
stos
xor
roll
daa
cmp
inc
xor
scas
lea
out
xchg
pop
and
adc
lods
loope
push
pop
jp
dec
std
test
mov
ss
mov
scas
shr
mov
or
pop
mov
insl
mov
daa
mov
in
dec
sbb
adc
sbb
mov
nop
out
xor
gs
mov
pusha
test
sti
addr16
cmp
and
loope
add
mov
mov
push
cli
xchg
xchg
push
clc
adc
mov
fistps
xor
push
xchg
cmpsb
incb
xor
or
nop
jno
bound
iret
and
mov
jge
xchg
mov
in
cmc
enter
sub
adc
cmc
push
sahf
mov
and
lods
and
sbb
je
outsl
push
mov
adc
scas
sbb
fistpl
movsb
pop
mov
jnp
jns
sti
and
inc
mov
aaa
aas
aaa
into
and
jb
pop
stc
out
out
or
scas
jmp
std
push
lea
ss
and
ljmp
stos
dec
push
jge
mov
icebp
fdivl
mov
add
sbb
mov
mov
fstl
cwtl
or
xchg
jmp
ficompl
cmp
int3
movb
je
lahf
divl
push
inc
push
dec
aaa
xchg
cwtl
cmpsb
leave
jae
rcll
push
pop
sbb
iret
dec
push
clc
mov
pop
pop
xchg
xchg
adc
mov
out
das
repnz
jl
xchg
or
cli
repz
fs
in
aas
leave
daa
repz
out
push
fs
scas
fucomi
and
sub
sbb
jb
mov
adc
ds
and
cmp
js
or
out
mov
jg
mov
push
arpl
inc
lea
movsb
repz
das
dec
test
out
adc
xchg
movsb
push
ret
jns
xchg
mov
and
je
mov
jl
sbb
outsl
cld
push
shlb
dec
pushf
sbb
test
addr16
mov
mov
sbb
pop
into
scas
xor
dec
mov
fadds
aam
nop
sub
pop
jg
inc
shrb
icebp
fsubr
or
jbe
cmpsl
testb
mov
and
jle
jp
cs
dec
cld
subl
jle
ja
insl
pushf
adc
aas
jecxz
ljmp
pop
mov
js
insb
test
mov
and
popa
stc
sbb
jno
loop
shrb
cmpl
sbb
sarb
and
and
mov
outsl
fstps
dec
push
imul
sbb
jecxz
pop
jns
sub
and
jb
mov
call
stos
push
xchg
call
jp
xor
cwtl
test
pushf
cwtl
pop
les
test
xchg
daa
popf
int3
sbb
push
int3
mov
inc
test
cwtl
mov
cwtl
lret
pop
push
sub
pushf
pop
test
fistps
fsubl
add
mov
dec
and
mov
pop
sbb
or
xchg
fldenv
mov
outsl
in
pop
imul
jg
lret
jge
cltd
out
adc
inc
or
or
fucomp
movsl
xchg
gs
iret
push
je
xor
imul
test
add
xor
mov
test
lcall
scas
mov
xchg
lcall
fsubs
lods
clc
out
arpl
sbb
mov
outsl
in
push
bound
cmp
xor
rorb
aaa
std
mov
xchg
xchg
arpl
lahf
sub
imul
stos
pop
mov
loop
jg
xor
std
push
adc
xor
adc
fldl2t
mov
add
iret
mov
mov
stos
lods
sbb
xlat
dec
shr
jge
imul
push
push
push
in
lock
cltd
stos
pop
add
pop
adc
xchg
adc
imul
scas
test
and
fs
sbb
aaa
xchg
push
jecxz
scas
je
pop
push
imulb
ja
sub
cmp
test
outsl
out
push
pop
push
test
sub
cs
push
pop
xor
xor
xor
inc
cmc
fbld
out
mov
test
mov
or
cmc
mov
mov
addl
cltd
xor
adc
or
ss
mov
movl
nop
loope
out
add
xor
cmpsl
js
mov
repz
dec
pop
mov
leave
sub
sbb
inc
sbb
daa
mov
adc
push
orl
xchg
or
lods
xor
mov
repz
jo
out
iret
test
outsl
xchg
sub
pop
insb
rep
out
sub
inc
repz
lock
std
pop
and
mov
mov
sbb
adc
inc
cmc
and
adc
shll
add
sub
subl
inc
pop
mov
loopne
lcall
cmp
fdivp
out
gs
lcall
add
sub
cmp
push
hlt
jmp
repnz
and
ret
pop
cmp
sahf
mov
jg
sub
jge
andl
cwtl
lods
test
fidivrl
sbb
or
scas
data16
add
fs
pusha
sbb
inc
mov
fstl
rorl
fwait
out
jl
inc
test
lock
inc
cmpsb
imul
pop
cmp
mov
push
jge
mov
mov
mov
fisubl
jae
call
adc
sbb
les
imul
cmp
std
ja
scas
mov
and
fsubl
mov
cmp
or
jnp
mov
jbe
test
jmp
hlt
popf
test
std
mull
shll
arpl
jo
inc
mov
stos
pop
stos
sbb
aad
sbb
icebp
push
popf
dec
cs
or
sbb
cwtl
xor
outsl
arpl
mov
and
popa
xor
xchg
imul
nop
inc
pop
clc
in
movsl
lds
aam
push
cmp
stos
nop
jle
repnz
inc
adc
sbb
jb
or
mov
inc
sub
das
aam
rol
lcall
fcompl
lods
sub
cmp
mov
cmpsb
xor
pushf
rcrb
cmpsl
push
pop
inc
push
sub
out
xor
fsubrl
xchg
or
dec
dec
or
fnsave
or
cmpsl
je
stc
xchg
clc
sbb
mov
insl
xchg
and
lods
sbb
mov
fs
xor
sub
mov
pop
lcall
mov
cmp
mov
testb
fs
cmp
roll
roll
and
inc
notb
cmp
and
xchg
scas
lcall
jge
pop
cmp
mov
push
pop
clc
fs
out
dec
cmp
aam
int3
jp
sbb
or
fisttpl
in
imul
out
xchg
lods
xor
jge
cmp
test
sahf
arpl
xor
fnstenv
mov
ds
add
addps
movsl
cmp
cmp
jne
lahf
sbb
cwtl
pop
popf
xor
repnz
std
sbb
push
xor
popa
fdecstp
mov
mov
outsb
sbbb
jl
inc
nop
rcll
dec
push
sub
scas
aaa
and
mov
ret
push
cmp
out
pusha
inc
push
mov
loop
shl
mov
xor
lea
daa
xchg
imulb
das
push
jns
setg
mov
mov
mov
pop
stc
jl
mov
cwtl
test
push
aaa
jmp
pop
out
cmp
push
shlb
inc
and
adc
dec
loope
cwtl
ret
sub
and
leave
mov
rcr
and
insb
das
adc
or
jg
mov
lods
fmuls
adcl
add
inc
cmp
push
rcrb
jecxz
ss
bound
daa
jecxz
mov
fucomip
xchg
or
inc
xlat
jne
ret
sub
popf
scas
jne
pop
jge
ja
jl
push
xchg
popf
ja
mov
push
sbb
adc
sbb
xlat
icebp
or
pop
xchg
mov
ss
cmp
cmc
imulb
jae
sbb
repz
sahf
lods
cwtl
mov
sarb
or
mov
xor
cli
das
and
shrb
mov
stos
mov
xchg
cwtl
and
or
jbe
jns
fildl
ret
testl
outsl
mov
or
std
sbb
fsubs
sahf
pop
jnp
adc
loope
sahf
sub
je
pop
dec
insb
lcall
mov
pop
popf
push
pop
ret
outsl
insl
xchg
jns
pop
cmovbe
and
in
bound
mov
sahf
outsb
xor
jns
aam
jg
push
cmpl
pop
movsb
mov
adc
out
mov
cli
ficomps
push
enter
bound
subb
push
out
sbb
daa
xchg
test
ret
mov
cmp
fs
mov
sahf
test
test
or
ds
mov
mov
seta
xor
cwtl
rcrb
pop
lock
mov
popf
jmp
ljmp
or
bound
lret
sbb
nop
dec
loope
xor
sub
push
pop
inc
cli
push
xor
scas
jecxz
and
dec
sub
je
je
cmpsb
shll
sub
out
stos
dec
mov
clc
popa
lock
pop
cmc
xchg
js
ss
sub
out
and
pop
mov
pop
movhps
scas
mov
into
fadds
xchg
xchg
jle
cmp
sbb
in
lcall
or
aaa
mov
mov
sub
jo
push
push
jo
push
adc
test
xlat
imul
add
lcall
sub
inc
mov
cli
ret
sar
daa
aad
sbb
test
adc
fists
cmp
dec
rcrb
fwait
ja
dec
fcom
sbb
in
mov
cli
add
sbb
inc
jle
sarb
ja
test
cmpsb
dec
push
lret
sbb
dec
or
or
jns
xlat
mov
lahf
pop
sub
mov
cmp
das
add
jae
js
cs
xchg
push
mov
or
mov
out
mov
xchg
xchg
fldl
cmp
popf
enter
sub
jo
stc
pop
inc
fsts
scas
sub
insl
cmp
mov
stc
enter
sub
popa
push
daa
push
mov
int3
and
repnz
dec
lret
pop
filds
push
orl
sbb
icebp
push
push
iret
icebp
fistpll
mov
fldenv
ds
movsb
cmp
inc
and
and
cmpsb
fwait
imul
test
mov
mov
insb
jne
aaa
popf
ja
sahf
push
iret
hlt
jne
cmp
aad
fmuls
add
xlat
xchg
mov
mov
cmp
inc
xchg
push
xor
push
js
or
nop
in
and
add
rcr
mov
call
scas
mov
nop
pop
dec
test
call
jmp
xor
fsts
cmpsb
push
addr16
xor
aam
mov
mov
call
xchg
jg
call
repnz
shlb
scas
sbb
loope
rcr
mov
aaa
jp
mov
aam
xor
inc
in
fwait
int
mov
pop
mov
mov
mov
fstpl
pop
add
or
fldcw
roll
test
adc
outsl
mov
test
cltd
addl
and
mov
add
fistl
xor
pop
fistpll
ret
sub
scas
push
add
mov
stc
mov
jbe
insb
xchg
das
sti
push
cltd
mov
repz
adc
mov
jno
lcall
subb
adc
lcall
fs
sbb
imulb
add
stos
or
popf
xor
adc
adc
cwtl
pop
xchg
and
sub
cmp
and
repz
lds
lods
lods
test
dec
sbb
mov
mov
dec
mov
mov
je
pop
jae
mov
dec
dec
ljmp
repz
icebp
int3
cmc
mov
sub
sbb
pop
insb
loopne
call
push
xor
sbb
push
mov
movsb
push
add
mov
jge
faddl
shlb
icebp
iret
aas
jecxz
pop
mov
pop
pop
fidivrs
in
int
adc
das
scas
repnz
sub
mov
mov
lea
outsl
xchg
sbb
push
mov
mov
sti
sbb
imul
loopne
dec
out
xchg
imul
mov
mov
scas
cmc
scas
ds
mov
gs
push
sbb
outsb
push
sbb
pusha
mov
xchg
scas
mov
mov
sarb
mov
pushf
daa
in
xor
sbb
sbb
loop
jne
cmp
ss
mov
and
icebp
test
dec
outsb
hlt
int
mov
popa
mov
fbstp
jl
and
sbb
add
cmpsb
mov
jne
bound
imul
les
sub
xchg
movl
and
test
ret
clc
gs
mov
dec
cmp
mov
cmp
mov
mov
cmp
mov
das
out
orb
mov
cli
dec
xchg
xor
sbb
jns
stos
je
mov
jb
jp
iret
sub
adc
xor
out
push
out
pop
sub
shl
xchg
push
mov
push
xor
clc
mov
push
xor
dec
pop
cmp
xchg
bound
pop
and
pop
mov
aaa
mov
ljmp
mov
sbbl
push
das
add
daa
pop
pop
out
lret
test
cwtl
das
mov
dec
pop
nop
lods
mov
xor
jg
and
aam
popf
stos
jge
jb
icebp
xchg
add
adc
lahf
or
pop
push
lods
pop
push
xor
fisubs
pop
fstpt
jle
adc
dec
aad
daa
es
daa
xchg
xchg
push
cmpsl
inc
jb
xchg
enter
enter
mov
ss
imul
fcomps
mov
pop
or
lret
add
push
lcall
aas
les
aam
and
mov
addr16
jp
xor
pushf
jge
sbb
sub
xor
lret
sub
rcll
fwait
lods
imul
movsl
jmp
outsw
rcr
mov
sbb
inc
or
clc
jecxz
mov
lea
mov
test
xchg
jnp
dec
mov
cld
pushf
jge
ljmp
sahf
bound
mov
pop
call
jne
or
cmc
cltd
cmp
mov
push
mov
scas
xor
inc
repnz
orl
out
xor
adc
or
sbb
lahf
iret
or
sub
scas
mov
mov
out
jb
aaa
gs
imul
push
xor
pusha
add
mov
xorb
cmc
js
mov
cld
cmpsl
adc
mov
add
loope
cmp
sbb
sbb
test
sbb
xchg
sbb
adc
xchg
dec
jp
sbb
xchg
mov
dec
daa
out
insl
and
add
sbb
mov
cltd
in
sbb
aas
ret
jns
jae
call
mov
in
movsb
cmp
inc
popf
pop
jmp
xor
shrb
sbb
cmp
loopne
fistps
and
inc
xchg
jo
xchg
lahf
mov
jecxz
sub
jl
xchg
aad
out
adc
nop
jl
sub
daa
imul
cltd
in
shlb
es
sbb
mov
sbb
lods
xchg
inc
pop
pop
cmc
jp
cmp
sub
xchg
mov
dec
cmpsl
stos
aaa
cmp
imul
mov
cmp
pop
pop
or
sbb
ljmp
inc
sbb
push
movsb
sar
mov
cmpsb
cmpsl
pop
jb
stc
loopne
repnz
jge
scas
mov
jg
dec
icebp
mov
scas
xchg
das
ret
icebp
stc
aaa
inc
push
fistps
je
fstpl
and
cmp
cld
sarb
xchg
mov
inc
xor
out
jle
push
mov
jge
negl
dec
mov
lods
jnp
hlt
mov
out
xor
pop
repz
jae
stc
insl
subb
fisubrl
dec
in
nop
inc
jge
nop
xor
mov
lods
fnstcw
pop
jnp
cmp
movsb
add
addr16
shlb
in
outsl
sub
cmpsl
mov
sti
imul
mov
inc
imul
cmp
xlat
mov
mov
cmpsl
mov
inc
inc
mov
test
and
jle
dec
pop
jge
mov
inc
mov
stc
xor
mov
addps
fwait
xchg
loop
sub
dec
dec
cli
push
mov
cmp
mov
or
jle
das
clc
bound
push
mov
adc
sbb
push
stc
dec
mov
cmpsb
mov
cmpl
mov
into
sub
pusha
cs
xlat
pop
sbb
pop
iret
fsubrl
or
and
mov
loope
adc
pusha
sbb
icebp
fwait
jae
ret
adc
push
ret
loop
pop
mov
lahf
push
fistps
dec
or
addb
mov
aad
pushf
adc
jbe
cltd
rorl
xchg
jg
lahf
enter
push
outsl
imul
arpl
mov
pop
cltd
pop
cltd
inc
gs
sbb
loope
lods
cltd
mov
mov
rcrl
add
test
dec
or
mov
shr
mov
pop
sarl
jl
inc
popf
sub
push
and
jo
js
push
out
leave
leave
push
sti
ror
push
cld
lods
and
ss
mov
loope
mov
mov
insb
mov
leave
daa
gs
sahf
mov
pop
or
outsb
sbb
out
test
fidivrl
xchg
icebp
cli
ljmp
lret
xchg
mov
mov
pop
and
daa
pop
stos
pop
sahf
mov
mov
scas
adc
imul
mov
and
add
add
shrl
jecxz
mov
push
lahf
push
sub
mov
fisttpll
pushf
xor
fstpt
push
ja
mov
incb
fistpll
inc
add
xchg
fadds
xor
and
cmp
or
push
aaa
lcall
in
sbb
inc
cli
sbb
mov
test
sarl
std
mov
pop
mov
xlat
cmp
mov
into
out
sub
sub
sbb
jl
lret
inc
mov
popf
mov
leave
pop
pusha
repz
xor
loopne
jo
sub
and
mov
loope
repz
dec
jl
xor
ja
add
popa
pop
inc
imul
nop
fsubr
in
mov
jp
mov
fdivrs
fld
pusha
xchg
adc
mov
mov
shl
mov
cmp
pop
repz
xorl
dec
xor
mov
mov
pop
xchg
push
pop
jp
daa
ret
jns
xchg
mov
push
xchg
sbb
add
push
push
out
inc
lret
jns
mov
and
xor
adc
fwait
and
out
and
lahf
pop
sti
ror
popa
xlat
sbb
or
sbb
lret
outsb
icebp
jle
ljmp
cmc
pop
adc
sub
xchg
test
inc
pop
push
dec
hlt
in
je
xor
in
jmp
mov
push
push
outsb
leave
mov
push
dec
test
jp
loope
loope
movsl
cli
xor
fyl2x
outsb
push
add
jge
push
testl
out
pop
dec
test
add
xchg
jp
xchg
cmp
loope
xor
hlt
jnp
push
and
jnp
sub
xor
repz
je
or
mov
jg
add
mov
outsl
add
lock
or
jo
aad
mov
jne
xchg
insb
dec
mov
roll
adc
jns
cmp
and
fnsave
fistl
mov
popf
daa
frstor
test
jp
data16
fs
xchg
mov
icebp
inc
out
adc
scas
popa
rcrb
popa
lods
mov
push
sbb
cli
mov
movsb
mov
cmpsb
and
mulb
sbb
mov
mov
mov
and
out
aad
jg
push
lahf
mov
test
mov
or
cli
adcl
inc
insb
pushf
xchg
cmp
mov
push
enter
out
xchg
sub
sub
push
fdivrp
mov
fstl
xchg
sub
imul
or
xor
mov
fs
inc
clc
aam
fsts
sub
inc
shl
repz
mov
jo
and
cwtl
test
popf
xchg
insl
push
outsl
xor
pop
sbb
icebp
daa
je
jne
test
mov
adc
jb
jge
xor
ljmp
insb
xor
push
decl
sahf
xor
or
push
loop
mov
inc
loope
lcall
push
in
and
mov
lods
mov
push
mov
rcrb
mov
mov
push
xor
sub
and
loope
sub
xchg
call
sub
and
enter
ljmp
sub
xchg
mov
pop
bound
in
int3
mov
out
sti
sbb
jg
orb
lret
push
sbb
xor
cmp
insl
and
sbb
jns
mov
mov
nop
in
xchg
sub
scas
sbbl
lcall
pushf
and
xor
mov
push
mov
add
outsb
jns
xchg
jg
je
fdivrs
jns
sbb
pusha
js
jnp
inc
pop
shr
pop
enter
dec
jo
xchg
add
adc
or
or
insb
lret
mov
pushf
push
pushf
out
in
dec
cmp
popa
mov
or
mov
or
push
xor
in
popf
std
fimuls
cmp
scas
jecxz
jl
pop
cmp
lea
mov
and
pusha
inc
test
adc
mov
pop
xchg
and
push
sub
fimull
jl
addr16
adc
fmul
xor
xor
aas
ja
and
cmpb
sbb
mov
pop
inc
cmp
xor
outsl
and
cmp
adc
std
sbb
outsb
imul
ret
fstps
mov
insb
jmp
mov
lcall
xchg
shrb
sub
inc
mov
int3
push
adc
xor
shlb
notl
mov
cmp
sti
orb
lods
push
cmp
and
add
cmpl
hlt
xor
mov
mov
push
sbb
cmp
loope
shl
andl
sbb
jmp
cli
dec
xchg
sub
ret
xchg
jge
xchg
dec
popf
pop
addb
popa
sbb
enter
popa
aad
pop
call
xchg
dec
outsb
sti
cwtl
fsubrl
jge
mov
mov
loopne
inc
jne
test
push
jo
or
subl
push
sbb
fildll
repz
mov
jge
pop
or
stc
sub
std
pop
pusha
xchg
cs
lods
cmp
mov
sub
push
test
sbb
lock
push
rcll
ret
clc
adc
sub
jnp
or
rol
or
scas
fisubs
fisttpll
and
push
sarl
sub
fcoml
jp
mov
clc
mov
sub
out
jnp
sub
mov
fstpt
inc
in
and
fucomp
sbb
sbb
xchg
mov
test
jg
out
out
loope
mov
xlat
imul
cmpsb
mov
inc
xor
sahf
sbb
adc
jns
cmpsb
int
xchg
pop
jmp
jl
roll
mov
sub
das
mov
mov
sahf
ror
xchg
adc
sahf
sahf
mov
pushf
pop
jbe
mov
js
add
mov
dec
sbb
les
dec
xchg
xor
icebp
out
popf
scas
sbb
push
outsb
jns
test
ficompl
cltd
jle
mov
sbb
cmpsl
jecxz
rorb
idivl
xchg
jns
mov
cmp
sub
adc
and
enter
fistpl
mov
lahf
stos
jns
sbb
mov
sub
scas
xchg
in
jge
test
fcmovu
clc
icebp
jle
jmp
popa
sub
shr
or
adc
imul
nop
pushf
add
popa
and
inc
sub
xchg
mov
mov
push
dec
jge
add
in
shll
frstor
cmc
ss
pusha
xchg
pop
push
out
popf
sbb
fdivrs
das
arpl
gs
mov
fnstsw
xchg
cltd
daa
pop
mov
pop
jne
ret
and
push
lret
les
cs
xchg
push
loop
stc
std
inc
sbb
arpl
cmp
add
mul
std
add
inc
push
mov
mov
dec
adc
push
jmp
add
loop
adc
sahf
push
loop
pop
scas
fstl
jmp
movsb
scas
jl
stos
inc
andb
sbb
pop
in
filds
imul
sbb
sub
stc
scas
inc
push
cmp
int
adc
lds
jmp
pop
lahf
imul
test
xor
mov
sub
sub
lret
or
mov
lods
and
and
hlt
jl
xor
mov
dec
movsb
jecxz
popf
pop
push
insb
leave
aad
lods
and
iret
das
or
addr16
arpl
in
addb
cld
sahf
sub
fistps
dec
fsub
lock
mov
pop
or
rcll
out
pop
jne
pushf
mov
mov
push
fisubl
and
gs
cmp
stc
pusha
adc
stc
stos
cmp
in
mov
cld
and
sub
mov
sbb
and
cmp
imul
xchg
enter
in
xchg
pop
sbb
lret
lea
mov
xchg
pop
shll
addr16
pop
ja
in
mov
aaa
push
std
sub
pop
mov
aam
cld
sub
mov
inc
out
loop
mov
mov
push
call
and
push
ljmp
pop
push
push
push
sub
inc
push
fimull
sub
inc
pushf
js
push
popl
or
or
sbb
push
inc
in
mov
or
fsts
lahf
faddl
cmp
fsubl
pop
cmovnp
dec
xchg
in
push
xchg
add
enter
mov
stc
lea
jle
xorl
xchg
or
mov
fidivrs
mov
das
roll
and
aas
push
jno
cwtl
fisttpll
popa
fisttpl
cs
nop
cmpsl
mov
les
test
js
cmp
or
stc
popa
pop
scas
sub
ss
cmp
iret
xchg
cmp
dec
insl
inc
jno
pusha
std
inc
mov
pop
and
test
out
gs
add
push
outsb
jmp
xchg
add
das
les
je
add
jge
adc
pop
test
xchg
pop
push
cmp
cmp
js
stos
inc
sbb
inc
sbb
push
inc
pop
inc
dec
sbb
rcrb
push
or
dec
mov
fmull
push
add
push
jp
dec
push
insl
pushf
pop
sub
es
sub
sbb
out
jle
lahf
hlt
pusha
push
mov
ja
lret
test
xor
loopne
dec
add
outsl
jmp
add
adc
add
adc
xor
sbb
add
mov
xor
add
jnp
ret
or
add
add
or
inc
add
or
mov
add
or
loope
add
xor
test
add
add
push
add
rcll
or
and
andl
add
add
adc
adc
addb
inc
mov
add
xor
pusha
or
add
inc
adc
or
fadds
je
inc
add
inc
inc
add
add
dec
bound
adc
add
add
shll
cmp
or
add
xor
addb
add
adc
add
mov
and
sub
into
add
add
add
add
add
and
test
inc
inc
pusha
add
add
or
add
add
add
pop
add
adc
add
sbb
pop
add
addb
add
inc
inc
inc
and
add
add
push
adc
inc
inc
ret
inc
orb
inc
movsb
addb
movb
adc
jae
fadds
sbb
or
and
loopne
pusha
or
xor
add
inc
xor
inc
and
and
andb
add
and
pusha
inc
or
addb
pushf
adc
push
adc
add
xchg
test
add
xchg
sub
add
or
add
push
dec
test
addl
add
adc
add
or
add
addb
inc
inc
mov
mov
or
push
mov
mov
adcb
add
inc
adc
loopne
add
and
cltd
inc
add
add
and
test
add
dec
add
add
addl
mov
add
loopne
inc
call
adc
and
add
add
and
movsl
add
or
dec
popa
push
add
add
sbb
inc
add
add
adc
add
int3
add
and
cltd
add
sub
xor
add
jae
xor
add
add
add
add
and
andb
sbb
bound
push
add
add
dec
sbb
add
adc
movsb
arpl
add
inc
dec
cmovo
adc
or
add
addb
adc
or
add
add
pop
and
and
addb
inc
add
add
add
add
and
orb
add
adc
mov
add
add
adc
sbb
addb
test
test
and
inc
adc
mov
add
xchg
or
orl
sbb
pop
push
adc
dec
addl
adcb
adc
in
addb
push
add
adc
inc
inc
inc
add
xchg
push
xor
rolb
inc
bound
and
add
inc
or
adc
adc
or
adc
mov
add
addb
or
addb
nop
and
inc
inc
mov
or
add
add
adc
adc
and
add
mov
and
add
and
add
add
inc
push
add
add
dec
or
cmp
inc
adc
sbb
add
add
sbbl
or
inc
add
test
inc
add
or
cmp
add
add
and
add
add
adc
lret
addb
add
add
add
inc
orb
push
orb
add
add
adc
add
addl
arpl
push
jo
add
pop
insb
andl
push
adc
les
add
add
xor
addb
inc
add
inc
adc
orb
add
addb
add
push
add
inc
add
test
add
add
dec
add
add
add
add
dec
adc
inc
add
add
add
nop
rolb
inc
repz
add
add
and
into
inc
or
and
lods
or
add
add
add
add
add
add
mov
movsb
inc
inc
add
add
and
or
test
add
add
inc
mov
and
dec
add
mov
or
add
pusha
and
sbb
add
and
push
adcb
add
add
and
and
sub
xchg
imul
lea
and
and
or
add
sub
adc
loop
push
push
hlt
adc
adc
movsb
add
add
cmpsb
mov
adc
add
or
or
mov
add
inc
inc
adc
adc
mov
dec
add
fs
add
adc
test
add
nop
adc
push
mov
mov
nop
addl
add
xor
add
dec
add
add
and
movb
add
add
add
add
push
test
add
add
adc
addl
sbbb
add
add
add
pop
add
add
dec
adc
inc
add
inc
add
adc
adcl
add
xchg
add
add
and
orl
xchg
mov
add
pop
adc
addb
and
and
inc
xor
dec
push
or
or
add
add
inc
add
inc
add
adc
add
pusha
add
add
addb
inc
add
add
sbb
add
mov
lret
and
add
add
add
add
push
pusha
add
add
add
inc
addl
add
add
inc
push
or
add
nop
adc
andb
add
add
adc
mov
or
inc
add
out
add
mov
addl
and
or
adc
mov
add
sbb
adc
adc
inc
adc
rolb
inc
and
add
adc
inc
inc
adc
inc
adc
popa
adc
inc
xor
add
add
add
inc
add
add
mov
add
adc
add
add
add
add
orb
adc
xor
add
add
orb
and
addb
add
add
and
or
sub
and
aam
add
addb
cmp
xorl
add
xor
and
add
pushf
test
test
add
adc
sbbb
pusha
add
pusha
add
inc
add
es
add
adc
add
or
adc
dec
push
add
add
add
or
add
or
ret
inc
add
shlb
add
add
add
add
inc
inc
xorb
xor
inc
push
nop
add
test
inc
adc
add
add
and
inc
or
inc
or
add
and
cmpsb
inc
mov
add
add
and
addl
and
adc
add
inc
add
test
or
sbb
inc
addb
add
orb
add
and
add
add
add
add
mov
in
and
xchg
adc
add
dec
mov
add
adc
or
add
inc
adcb
add
add
and
xor
add
mov
inc
addl
add
or
pop
bound
or
or
inc
xor
pop
adcb
add
add
add
or
add
inc
add
test
add
add
add
orb
les
add
add
inc
add
add
sbb
inc
inc
or
add
push
add
or
push
add
dec
inc
and
add
add
inc
adc
add
inc
or
test
adc
adc
add
add
mov
adc
and
adc
mov
mov
add
push
test
and
add
push
adc
dec
pusha
mov
inc
add
or
add
or
andb
add
and
push
lret
add
push
adcb
add
add
and
push
add
and
adc
sbb
or
inc
pop
pusha
and
inc
add
inc
and
add
and
push
adc
and
xor
add
inc
adc
inc
add
rclb
inc
add
mov
add
adc
add
adc
add
inc
add
dec
inc
add
add
inc
call
rolb
add
cwtl
addb
rolb
add
xor
add
adc
addb
add
or
sub
and
repnz
addb
add
or
xchg
or
insb
inc
rolb
or
add
add
add
inc
add
inc
cmp
or
or
add
inc
or
add
test
inc
add
or
add
add
add
mov
push
sbb
adc
add
and
xor
inc
add
xorb
pop
xor
orl
ret
add
add
add
and
and
sbb
inc
xor
add
cmp
add
andb
popa
rcrb
addb
or
or
push
and
and
or
roll
add
add
or
add
pop
inc
mov
add
add
orb
enter
test
add
add
and
add
or
adcb
lock
mov
push
add
inc
sub
inc
mov
inc
mov
addb
mov
inc
add
popa
add
add
mov
addb
mov
jae
add
add
push
or
add
add
fs
inc
enter
or
add
addb
add
add
inc
xor
adc
inc
addb
add
or
nop
add
add
cmp
add
or
data16
pop
inc
add
add
dec
pop
add
add
dec
add
addb
add
add
sub
add
add
add
xchg
add
adc
test
sub
adc
inc
add
pop
addl
and
cmp
add
add
dec
add
add
inc
add
adc
pop
adc
addb
and
add
or
and
add
push
pusha
or
add
add
add
add
mov
xchg
and
and
adc
adc
rorb
cmp
add
add
or
add
addb
add
orb
inc
and
add
pop
add
or
inc
or
and
add
add
or
add
add
inc
or
jno
inc
add
add
add
add
add
add
addb
add
add
and
inc
and
adc
add
add
popa
inc
and
or
add
pusha
push
sbb
add
add
sbb
rcll
add
add
sub
xor
addb
add
pop
mov
aad
add
adc
movb
add
adc
or
add
add
nop
inc
sub
add
test
sbb
shll
xor
inc
adc
xor
jo
adc
adc
or
addb
add
orl
push
push
and
pusha
xor
add
add
sub
add
add
les
roll
or
adc
add
add
or
push
and
add
or
enter
pop
add
addb
add
aam
add
adc
add
add
test
add
add
dec
and
mov
test
add
add
add
addb
sbb
add
add
jb
add
add
add
add
add
insb
adc
and
inc
or
add
add
or
inc
add
add
add
add
add
add
adc
les
add
add
inc
lret
jae
addl
mov
add
adc
pusha
sub
add
add
mov
inc
add
adc
inc
add
add
add
push
adc
add
or
add
add
add
add
test
mov
xor
add
addb
add
enter
push
adc
addb
bound
add
add
inc
add
push
addb
add
addb
xor
adc
add
add
dec
add
add
push
inc
rclb
add
add
add
pusha
addb
add
add
add
inc
inc
addb
or
add
movsb
add
or
popa
add
add
adc
and
or
mov
add
add
add
add
add
add
add
add
add
inc
outsb
add
inc
sbb
fiaddl
rolb
xor
add
push
dec
pusha
in
add
or
sbb
dec
add
and
and
sub
add
add
sub
andb
inc
fs
add
add
and
mov
add
or
rolb
xchg
add
adc
add
sbb
add
insl
rorl
pop
inc
sbb
addl
or
add
inc
and
add
dec
add
sbb
ret
inc
and
ret
inc
add
add
and
inc
addb
mov
inc
add
add
inc
test
addb
dec
add
mov
xchg
add
xor
inc
orb
mov
nop
inc
xchg
or
mov
nop
add
addb
outsb
add
and
add
test
pop
enter
inc
add
nop
mov
and
inc
cmp
loop
add
andb
add
mov
nop
and
add
add
add
sbb
or
push
adcb
add
add
add
and
sbb
sbb
test
xchg
addl
mov
add
and
add
add
shlb
add
push
addb
inc
add
loope
addb
data16
add
add
dec
or
inc
add
or
mov
push
sbb
add
mov
adc
add
and
or
adc
add
xchg
adc
and
add
add
add
dec
add
add
inc
dec
add
and
adc
mov
or
add
and
add
add
or
add
sarb
andl
add
push
xchg
adc
add
int3
inc
add
and
add
popa
and
adc
and
add
inc
push
add
push
mov
sub
mov
mov
push
mov
push
mov
xor
cmp
jne
add
mov
test
je
mov
mov
test
jne
xor
cmp
je
sub
cmp
jne
mov
mov
cmp
jne
and
cmp
je
mov
sub
cmp
je
xor
mov
cmp
jne
mov
cmp
je
mov
mov
sub
cmp
je
mov
mov
cmp
je
mov
mov
mov
test
je
test
je
mov
mov
xor
cmp
je
mov
mov
mov
sub
cmp
jne
sub
test
je
cmp
jne
test
jne
xor
mov
mov
mov
test
jne
sub
mov
mov
mov
mov
push
or
mov
mov
cmp
jne
mov
xor
cmp
jne
mov
xor
mov
cmp
jne
cmp
je
mov
sub
cmp
jne
mov
mov
mov
lea
push
call
mov
push
push
push
call
mov
cmp
je
mov
or
cmp
je
mov
mov
mov
xor
test
jne
mov
cmp
je
mov
mov
sub
mov
cmp
jne
mov
and
mov
cmp
jne
add
mov
mov
mov
mov
cmp
je
mov
xor
mov
mov
test
je
sub
mov
cmp
jne
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
or
mov
cmp
je
mov
and
mov
cmp
je
add
test
jne
mov
mov
mov
sub
mov
test
jne
xor
cmp
jne
mov
cmp
jne
mov
add
cmp
je
mov
sub
mov
cmp
je
cmp
jne
mov
mov
xor
mov
mov
mov
mov
add
mov
xor
mov
cmp
jne
xor
mov
mov
cmp
jne
test
je
mov
xor
cmp
jne
mov
add
cmp
jne
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
mov
xor
mov
cmp
je
mov
mov
sub
cmp
jne
mov
mov
xor
mov
test
je
add
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
xor
mov
cmp
jne
add
mov
cmp
jne
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
test
je
add
cmp
jne
mov
mov
mov
mov
mov
mov
lea
cmp
jne
mov
xor
mov
mov
mov
cmp
jne
cmp
je
mov
push
mov
cmp
jne
mov
mov
add
cmp
jne
mov
test
je
cmp
je
mov
add
mov
cmp
je
mov
cmp
je
sub
mov
mov
cmp
jne
mov
cmp
je
mov
cmp
je
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
xor
mov
cmp
je
sub
mov
mov
cmp
je
sub
cmp
jne
sub
mov
cmp
jne
mov
test
jne
add
mov
mov
cmp
jne
sub
mov
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
push
mov
xor
mov
call
sub
mov
cmp
jne
mov
or
mov
mov
mov
mov
shr
add
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
push
pushl
call
mov
sub
mov
mov
addl
mov
and
mov
mov
mov
cmp
jne
mov
add
test
je
cmp
jne
add
mov
cmp
je
mov
xor
mov
cmp
je
cmp
jne
mov
cmp
je
mov
mov
and
mov
mov
cmp
je
add
mov
cmp
je
mov
mov
xor
mov
mov
test
je
sub
mov
mov
mov
mov
call
cmp
jne
mov
cmp
jne
mov
cmp
jne
sub
mov
cmp
jne
mov
xor
cmp
je
mov
add
mov
cmp
je
mov
sub
mov
cmp
je
mov
mov
sub
test
je
add
mov
mov
mov
mov
mov
cmp
je
and
mov
test
je
mov
add
mov
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
je
xor
mov
mov
mov
mov
cmp
je
mov
mov
and
mov
mov
cmp
jne
mov
sub
cmp
jne
cmp
je
sub
mov
cmp
je
mov
and
cmp
jne
cmp
je
mov
cmp
jne
cmp
je
mov
and
test
jne
sub
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
or
test
jne
sub
mov
mov
mov
cmp
je
cmp
je
and
mov
cmp
je
mov
cmp
jne
add
mov
cmp
je
mov
mov
xor
mov
mov
test
jne
mov
and
mov
cmp
jne
mov
mov
xor
mov
xor
mov
cmp
jne
cmp
je
mov
add
mov
cmp
jne
mov
sub
mov
mov
cmp
je
test
jne
xor
mov
pop
mov
mov
pop
mov
pop
mov
leave
ret
mov
mov
mov
push
push
push
push
push
call
sub
cmp
jne
mov
sub
cmp
je
mov
add
mov
cmp
je
cmp
je
mov
mov
mov
cmp
je
mov
mov
push
push
call
mov
push
push
push
push
push
call
cmp
jne
cmp
je
add
mov
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
mov
sub
mov
mov
push
push
push
push
push
call
mov
call
add
cmp
jne
mov
mov
sub
mov
push
call
mov
mov
mov
push
push
push
call
mov
cmp
je
add
mov
mov
mov
call
cmp
jne
mov
mov
push
push
push
push
push
call
or
cmp
jne
add
mov
mov
cmp
je
mov
mov
mov
call
mov
xor
cmp
jne
mov
mov
mov
call
mov
add
cmp
je
cmp
jne
mov
or
mov
cmp
je
mov
mov
push
push
push
call
xor
cmp
jne
xor
mov
call
mov
push
call
xor
mov
cmp
jne
add
mov
mov
mov
pop
sub
mov
mov
mov
cmp
jne
mov
mov
cmp
je
sub
mov
mov
test
jne
sub
mov
mov
mov
mov
mov
pop
mov
pop
sub
mov
cmp
je
test
jne
xor
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
or
mov
push
sub
mov
mov
mov
mov
mov
movl
mov
cmp
jne
mov
call
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
call
mov
cmp
je
mov
call
xor
cmp
je
xor
mov
cmp
je
add
cmp
jne
mov
cmp
je
test
je
mov
mov
sub
mov
mov
mov
mov
mov
sub
cmp
jne
test
jne
cmp
je
sub
mov
mov
cmp
je
mov
sub
cmp
je
mov
mov
mov
cmp
je
mov
add
mov
mov
mov
mov
push
call
add
cmp
jne
mov
add
cmp
jne
sub
mov
cmp
jne
add
cmp
jne
mov
mov
mov
mov
or
je
mov
cmp
je
mov
addl
mov
lea
mov
cmp
jne
and
test
jne
mov
add
mov
mov
inc
mov
xor
cmp
je
cmp
jne
mov
mov
xor
cmp
jne
xor
mov
mov
mov
mov
mov
mov
xor
cmp
jne
mov
xor
cmp
je
mov
mov
mov
test
jne
and
cmp
jne
mov
sub
mov
cmp
jne
mov
mov
mov
add
mov
cmp
jne
and
mov
mov
mov
mov
cmp
jne
mov
xor
cmp
jne
or
mov
mov
test
je
cmp
je
mov
mov
add
cmp
jne
and
test
je
mov
mov
mov
sub
mov
mov
or
mov
mov
or
cmp
jne
mov
mov
mov
mov
mov
mov
xor
cmp
je
mov
add
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
test
je
mov
add
mov
cmp
je
or
mov
cmp
je
add
mov
mov
mov
cmp
je
and
mov
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
cmp
je
cmp
jne
mov
mov
and
mov
or
mov
cmp
jne
mov
pop
cmp
je
add
cmp
je
mov
xor
test
jne
mov
or
cmp
je
mov
sub
mov
cmp
je
xor
mov
cmp
je
mov
mov
mov
mov
add
mov
mov
pop
cmp
je
mov
or
test
je
xor
cmp
je
xor
mov
cmp
jne
mov
mov
mov
or
mov
cmp
jne
add
cmp
jne
mov
add
mov
cmp
je
mov
mov
cmp
je
cmp
je
cmp
jne
add
mov
mov
mov
test
jne
cmp
je
xor
mov
cmp
jne
cmp
je
mov
add
cmp
je
mov
cmp
jne
xor
mov
mov
mov
mov
mov
pop
mov
sub
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
sub
mov
push
mov
mov
mov
mov
push
add
mov
mov
mov
mov
mov
add
mov
rdtsc
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
and
test
jne
add
mov
mov
cmp
jne
mov
mov
cmp
jne
sub
mov
mov
mov
mov
add
mov
rdtsc
mov
mov
mov
add
cmp
je
add
mov
test
je
mov
add
mov
mov
mov
mov
sub
mov
add
cmp
je
sub
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
add
mov
mov
add
cmp
je
mov
mov
mov
or
cmp
je
mov
pop
mov
or
mov
cmp
jne
mov
mov
add
cmp
je
sub
mov
mov
cmp
je
cmp
jne
mov
xor
mov
test
je
add
test
jne
sub
cmp
je
cmp
je
xor
mov
cmp
je
mov
and
mov
cmp
jne
sub
mov
mov
cmp
jne
mov
mov
sub
cmp
jne
xor
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
sub
mov
pop
mov
add
test
je
cmp
je
mov
xor
cmp
jne
mov
and
cmp
jne
and
test
je
mov
cmp
je
mov
mov
cmp
jne
sub
test
je
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
xor
mov
push
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
test
jne
cmp
je
add
mov
cmp
je
mov
test
je
cmp
jne
cmp
je
mov
mov
mov
decl
mov
mov
subl
mov
xor
cmp
jne
cmp
je
mov
test
je
cmp
jne
cmp
je
cmp
jne
mov
mov
test
jne
mov
sub
mov
sub
cmp
je
mov
cmp
jne
cmp
je
mov
mov
cmp
je
mov
mov
roll
mov
rorl
mov
add
cmp
jne
add
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
xor
mov
mov
jmp
mov
mov
mov
add
mov
mov
cmp
je
cmp
jne
mov
mov
pop
mov
mov
mov
mov
mov
pop
mov
pop
xor
mov
mov
mov
cmp
je
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
movsbl
sub
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
add
rolb
add
adc
add
inc
add
add
add
add
add
add
add
jo
add
addb
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
sbb
add
mov
add
in
add
mov
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
mov
add
ss
add
add
pop
add
add
add
inc
add
add
test
add
add
xchg
add
add
in
add
add
add
add
add
pop
add
add
add
add
add
ljmp
add
add
and
add
pop
pop
add
incb
add
xor
add
jbe
add
push
add
or
add
cwtl
pop
add
lret
add
add
insb
pop
add
mov
add
fiadds
add
hlt
push
add
dec
pop
add
push
pop
add
xchg
add
add
add
jbe
add
and
add
xor
add
lock
add
adc
add
xchg
add
mov
add
les
add
pop
or
add
or
add
pop
add
loopne
add
add
add
add
add
testb
add
or
add
add
or
add
add
or
add
or
add
or
add
or
add
add
push
or
add
or
add
add
dec
or
add
or
add
or
add
or
add
add
add
add
cmpsb
or
add
add
add
dec
or
sub
add
mov
orb
add
add
adc
or
add
nop
adc
mov
test
and
xor
inc
add
data16
xchg
bound
sub
add
cltd
test
adc
or
addl
test
cmp
inc
es
xchg
and
and
add
addb
push
add
mov
addl
push
sub
rcrb
xor
xchg
add
sub
add
or
add
or
rorb
mov
and
add
adc
mov
add
adc
or
inc
add
push
or
add
mov
mov
push
fadds
adc
and
inc
test
add
inc
sub
inc
cltd
adc
nop
or
inc
inc
add
add
test
and
add
mov
dec
flds
les
mov
sub
andl
adc
xor
movsb
mov
pusha
adc
ret
inc
or
add
popa
or
dec
rolb
dec
and
pop
cmpb
pop
or
mov
sbb
add
mov
addb
xor
add
and
or
add
and
pop
add
adc
xchg
inc
addb
inc
inc
pusha
add
inc
add
xchg
inc
sub
movsb
adc
lret
inc
and
or
add
and
add
adcb
mov
add
or
add
sub
jge
adc
sub
or
and
and
or
add
in
cmp
adc
add
xchg
fs
and
push
inc
add
adc
adc
enter
sub
and
mov
dec
test
push
es
mov
adc
and
inc
add
inc
and
add
cmp
add
or
pop
mov
add
adc
add
push
push
or
lret
xchg
pop
sbb
add
inc
add
add
xor
push
les
or
scas
add
dec
mov
pusha
test
sbb
es
mov
push
or
cmp
adcl
dec
or
rclb
inc
push
test
push
adc
js
dec
orb
or
and
cmp
xchg
stos
xor
add
add
push
adc
lods
add
dec
add
rclb
add
inc
test
push
push
pop
inc
andb
sarb
push
and
dec
add
cmc
andb
cwtl
dec
adc
inc
fs
mov
sbb
and
and
and
and
add
add
or
adc
addb
loope
inc
test
inc
inc
add
sub
enter
and
inc
xor
inc
add
enter
add
inc
mov
add
add
push
adc
push
or
add
inc
rorl
out
and
and
and
push
nop
arpl
or
add
addb
push
push
es
dec
adc
and
shlb
sub
add
orl
or
sub
andl
add
add
add
and
push
push
push
aas
cmp
dec
inc
add
add
push
and
xchg
add
pop
inc
mov
sub
sbb
add
adcb
add
nop
mov
inc
add
mov
inc
or
and
inc
mov
inc
add
add
enter
push
and
and
or
push
add
popa
pusha
push
add
and
adc
sbb
add
rolb
sbb
and
dec
or
pusha
addb
sbbb
add
addl
test
add
orb
adcb
xor
dec
lea
or
adc
push
and
add
add
les
and
xor
ror
push
push
inc
and
add
or
sbb
add
add
dec
adc
push
cmp
and
xorb
test
adc
sub
and
dec
add
inc
sub
add
adc
add
mov
pop
jno
icebp
sbb
adc
pop
or
push
mov
add
add
and
mov
or
add
add
or
add
or
add
pop
sub
mov
inc
push
mov
pusha
adc
add
adc
adc
inc
addb
xor
add
test
and
xor
add
cld
or
adc
inc
and
or
or
add
add
add
add
adc
xor
mov
and
adcb
sbb
add
adcb
add
and
or
add
or
adcb
add
inc
add
inc
orb
add
adcb
addb
and
subb
or
adc
add
sub
and
pusha
adc
add
jno
dec
sub
inc
mov
sub
add
add
add
inc
push
ret
or
add
test
flds
add
adc
and
adc
and
dec
add
push
push
add
or
roll
and
add
add
mov
cwtl
add
data16
sub
enter
dec
and
adc
sub
shlb
and
push
adc
sub
inc
ss
add
push
and
and
sub
addb
add
cwtl
xchg
mov
xor
cmp
adc
bound
add
or
mov
add
push
add
add
mov
jae
inc
ljmp
inc
or
nop
and
mov
or
sub
and
inc
mov
sub
fs
pushf
adc
add
xchg
or
or
mov
test
xchg
add
xchg
or
or
add
adc
or
mov
repnz
nop
sbb
inc
adc
sub
and
add
adc
add
and
sbb
adc
add
cmpsl
xor
or
push
and
inc
add
add
or
adc
adc
or
rorb
add
sbb
or
and
dec
add
loopne
or
les
or
add
inc
add
or
inc
pop
xor
dec
and
sbb
adc
inc
add
adc
inc
xchg
adc
cmp
and
add
push
test
adc
or
inc
adc
push
add
add
add
or
add
add
sbb
pop
mov
add
loope
add
adc
add
and
roll
add
addb
xor
inc
add
inc
cmp
inc
pop
add
loopne
sbb
mov
ss
loope
insb
xorb
add
xchg
push
xor
test
add
add
push
xor
and
and
adc
or
mov
js
push
mov
or
push
add
add
add
push
loopne
lock
inc
or
add
inc
or
or
and
dec
mov
mov
inc
or
xchg
and
shrb
adc
adcb
add
inc
add
loopne
dec
inc
mov
xor
arpl
sahf
adc
nop
sub
or
sbb
and
and
add
add
addb
mov
push
or
inc
add
adc
or
xor
dec
mov
add
inc
or
and
adc
adcl
inc
add
inc
adc
bound
add
add
add
popa
add
add
addb
add
mov
or
add
inc
or
add
hlt
push
mov
in
or
and
xorl
and
push
cltd
inc
add
add
add
and
adc
adc
push
fs
sbb
push
lods
sub
orl
shlb
les
and
or
and
add
sldt
add
rorl
inc
dec
stos
and
and
mov
adc
test
leave
inc
sub
and
addb
add
shr
inc
or
and
js
and
and
add
adc
addl
jo
popa
push
adc
add
sub
test
mov
sub
push
mov
add
inc
or
and
sub
add
xchg
or
aad
push
sub
test
inc
or
add
and
cwtl
push
and
roll
add
icebp
addb
js
adc
insb
orb
add
xchg
pop
sbb
adc
pop
lar
fs
push
inc
arpl
or
inc
push
add
add
sub
add
add
pop
adc
add
adc
and
xchg
adc
loopne
test
enter
or
mov
inc
add
and
add
adcl
cmpsb
nop
add
xor
mov
add
add
mov
adc
add
add
add
adc
add
cmpsl
mov
add
adc
rolb
or
adc
test
in
add
add
add
addb
pusha
add
sbb
xor
push
or
add
scas
adc
orl
xchg
mov
adcb
sub
xchg
or
or
inc
and
add
add
push
push
add
sbb
add
add
dec
dec
push
push
test
nop
add
add
push
sub
add
orb
add
adc
mov
add
call
add
bound
addb
or
add
or
aam
inc
add
push
jae
pusha
mov
or
add
andl
subb
xor
add
add
adc
add
adcb
and
inc
mov
adc
xor
inc
and
shlb
push
mov
add
adc
add
sbb
inc
add
add
adc
add
jno
push
and
or
adc
push
add
cmpsl
add
add
inc
add
or
test
orl
xor
add
sbbl
add
adc
add
dec
add
inc
adc
adc
add
inc
adc
sbb
add
xchg
nop
rol
inc
test
movsb
adc
dec
test
add
and
mov
andb
add
and
push
adc
cmpb
add
dec
pop
and
push
and
add
or
or
push
sbb
sub
xor
or
pop
insl
inc
and
xor
mov
mov
and
add
lcall
xor
or
or
adc
and
sub
inc
pop
add
or
sub
or
enter
rol
adc
add
rolb
or
adc
add
or
add
sbb
adc
test
test
inc
push
add
sub
adc
inc
dec
pop
addb
add
addb
addl
add
adcb
add
add
add
inc
push
add
or
add
xchg
add
add
mov
and
dec
andb
xor
pop
dec
enter
inc
dec
cwtl
sbb
and
pusha
add
pop
xchg
add
or
or
add
rclb
add
fadds
rolb
sbb
add
addb
add
ret
or
les
add
mov
mov
fsubs
or
add
add
inc
sub
sbb
push
or
adc
adc
addl
and
add
and
add
push
and
and
add
add
adc
dec
pop
dec
inc
add
add
cmp
or
inc
and
inc
cmp
add
and
add
add
and
orl
add
adc
push
in
add
add
addb
xchg
add
adc
xor
mov
rorb
dec
inc
add
addb
pusha
push
add
add
add
sub
add
add
xor
js
push
add
mov
mov
push
and
addb
mov
mov
and
orb
xchg
push
add
and
inc
jb
inc
add
or
andb
mov
push
add
add
push
pusha
je
and
orb
or
repnz
sub
or
add
inc
push
rolb
adcl
mov
mov
inc
add
inc
add
or
dec
inc
or
or
pop
sbb
adc
and
inc
adc
adc
or
adc
nop
push
xchg
lea
subb
adc
add
or
adc
push
test
mov
test
push
cwtl
dec
add
or
inc
xorl
rorb
or
push
add
jbe
popa
sub
xor
test
dec
inc
push
sbb
dec
jno
addb
sbbl
add
add
add
dec
sub
dec
add
add
rolb
pusha
loope
cwtl
adc
add
cmp
add
and
adc
sbb
add
or
cmp
and
inc
loope
lods
adc
adc
inc
push
cmpb
inc
jo
push
add
dec
add
adc
pop
add
add
sbb
add
or
pop
dec
sbb
or
add
jo
adc
mov
inc
cmp
sub
add
adcl
adc
adc
mov
push
and
or
or
add
pop
add
addb
or
and
and
and
add
add
add
jo
adc
and
sbb
in
add
add
adc
add
daa
or
adc
int
xchg
add
add
and
insl
imul
and
mov
add
adcb
and
xor
nop
add
and
or
or
test
and
xchg
pop
sbb
or
test
add
add
add
adc
and
dec
add
add
add
add
push
and
or
and
and
inc
add
adc
cmp
add
or
adc
mov
sbb
inc
adcl
add
jno
inc
push
add
add
or
xor
xor
adcb
and
nop
and
jo
nop
or
add
add
add
test
add
sbb
sbb
add
and
sbb
add
dec
andb
rol
add
add
mov
loope
or
inc
add
and
sbbb
adcb
add
sub
add
add
add
inc
add
les
and
add
add
mov
pusha
add
and
push
mov
and
push
adc
pusha
add
add
jb
or
inc
dec
shrb
add
add
push
add
and
dec
or
add
mov
add
adc
adc
add
add
add
or
add
inc
lods
add
or
inc
test
movsl
mov
addb
sub
add
adc
add
sbb
push
push
or
adc
inc
inc
inc
or
nop
and
add
and
and
adc
addb
adc
inc
inc
orl
add
adc
adc
push
adcb
add
jbe
les
roll
add
insb
and
adc
les
andb
push
sub
cmp
mov
add
inc
adc
mov
adc
add
inc
pop
add
test
add
push
inc
sub
nop
add
or
addb
add
add
adc
add
adc
add
pop
and
add
inc
pusha
addb
adc
inc
add
and
xor
and
pop
add
inc
mov
add
cmp
mov
add
add
sub
add
inc
and
push
sub
or
xor
push
add
and
rcll
adc
sub
test
add
and
cmp
add
orb
int
fmuls
and
orb
inc
add
and
addl
and
add
xor
add
mov
mov
add
xchg
movsl
add
add
add
or
push
pusha
xor
addb
and
test
sbb
test
add
inc
mov
xchg
addl
sbb
lds
or
push
mov
dec
sbb
addl
subb
mov
add
nop
or
mov
add
adc
add
add
push
add
push
adcb
pop
mov
or
and
inc
mov
or
inc
sub
add
xchg
or
enter
dec
nop
add
and
dec
test
or
out
inc
test
and
add
add
movsl
sbb
adc
add
adcb
add
or
add
ret
and
push
sbb
add
push
orb
or
and
add
sub
add
inc
or
add
add
flds
and
push
xor
add
mov
addl
cwtl
and
inc
pop
dec
pusha
or
xor
rolb
and
xor
sbb
inc
adc
inc
xor
push
xor
adc
add
cmp
inc
mov
adc
inc
or
or
add
addb
push
or
adc
dec
sub
add
cmc
and
add
or
inc
or
adc
orb
add
cmp
or
xor
or
add
les
test
adc
popa
popf
mov
xchg
nop
inc
mov
and
or
push
and
adc
xorl
orb
add
add
adc
mov
or
add
sbb
xchg
adcb
lret
test
add
rolb
and
lock
cmp
sub
add
add
nop
adc
sbb
or
add
bound
push
sub
nop
rolb
and
push
or
push
cmp
push
or
push
push
add
adc
add
orb
add
sub
add
rorl
add
test
addb
cwtl
xchg
add
and
les
add
or
and
add
and
add
sub
test
or
or
add
add
dec
add
inc
add
push
sub
add
and
and
mov
add
pop
add
add
sbb
or
sbb
inc
inc
pop
add
add
add
xor
adc
add
inc
bound
add
inc
sbb
adc
in
inc
push
or
xchg
andb
jno
sub
adc
push
and
mov
fs
inc
adc
adc
and
lret
enter
add
adc
add
add
push
add
sbb
pusha
and
xor
inc
addb
cmp
add
add
inc
xchg
or
and
push
dec
add
xchg
addb
add
test
add
mov
jecxz
popa
mov
mov
inc
pusha
sbb
dec
add
and
add
rclb
xchg
push
xor
mov
test
inc
pop
inc
ret
or
add
invd
and
aam
orb
add
dec
dec
push
add
mov
add
nop
mov
or
les
pop
test
inc
icebp
addb
add
dec
int
orb
pushf
mov
and
add
sbb
andl
adc
or
orb
inc
add
add
nop
leave
mov
adc
inc
inc
or
or
and
or
andb
add
push
sbbb
addb
add
add
cmpsl
adc
adc
or
test
cwtl
add
mov
sbb
addb
mov
add
dec
test
adc
adc
and
enter
add
and
xchg
push
rorb
add
add
les
dec
les
add
push
jp
test
sbb
add
add
adc
rorb
pusha
mov
mov
orb
int3
enter
aam
inc
enter
or
push
addb
or
orb
add
pop
mov
xor
xor
adc
adc
add
or
and
addl
inc
mov
and
nop
or
add
xchg
add
imul
push
inc
add
adc
int3
xor
fs
add
mov
adc
inc
or
xorb
add
addb
add
add
inc
pop
lds
or
push
or
push
push
sub
add
sbb
inc
sub
or
adc
addl
sbb
add
xchg
and
es
inc
adc
xchg
adc
or
push
sub
sbbl
add
andl
test
add
pusha
add
push
add
or
addb
or
add
pop
add
add
and
or
adc
push
je
xor
add
and
roll
sbb
inc
push
lret
inc
or
sub
and
add
push
add
add
orl
pusha
pusha
adc
push
inc
ja
add
adc
inc
cmp
and
inc
xlat
mov
cmovl
xorl
or
add
inc
add
loope
inc
adc
add
adc
and
mov
and
in
aam
add
mov
mov
push
add
and
xor
or
sbb
inc
pusha
add
dec
or
and
xorb
add
sbb
mov
dec
or
adc
or
jge
add
push
inc
loop
adc
nop
push
push
adc
andb
add
adc
out
int3
xchg
push
adc
and
adc
and
lods
and
or
add
test
inc
add
or
adc
add
mov
push
adc
inc
adc
add
and
and
mov
orb
add
inc
adc
or
xchg
mov
add
addb
add
stos
add
and
add
add
adc
fs
inc
xchg
inc
add
add
sub
mov
loop
mov
adc
pop
adc
dec
inc
or
adc
inc
inc
nop
sub
inc
fcoml
add
bound
inc
add
or
adcb
add
inc
addb
mov
add
rorb
add
inc
les
or
add
sub
inc
push
inc
inc
subb
pusha
adc
and
adc
adc
dec
pop
xor
adc
add
test
loop
add
inc
or
nop
push
test
mov
adc
inc
test
sbb
and
mov
add
or
add
cltd
sub
inc
sbb
movsb
or
fwait
test
dec
mov
sbb
adcb
and
add
inc
add
inc
rolb
add
push
add
adc
add
nop
add
sbb
dec
and
sbb
mov
sub
sbb
mov
or
push
or
sub
test
imul
mov
cs
sarb
stos
mov
orb
add
sub
add
and
mov
sub
inc
or
jbe
push
test
dec
adc
or
add
sub
and
xor
test
inc
sbb
or
js
or
inc
mov
addl
sbb
adc
push
inc
and
nop
movsl
adc
mov
addb
or
xchg
and
inc
addb
or
xor
add
or
adcb
jbe
bound
dec
imul
inc
adc
and
inc
xchg
and
roll
add
add
mov
inc
sbb
sub
mov
xchg
sub
ret
inc
add
add
and
stos
je
nop
add
add
pop
add
add
sbb
adc
mov
add
nop
sub
and
inc
xor
insb
add
add
push
adc
mov
inc
mov
mov
lea
sbb
test
dec
dec
sub
addl
inc
adc
inc
add
adc
xor
inc
adc
add
test
adcb
and
ret
inc
scas
es
inc
push
add
jae
inc
sbb
add
adc
push
xchg
mov
and
cltd
add
orl
add
add
dec
movb
addb
add
push
adc
and
inc
add
or
jb
sub
push
mov
adc
mov
inc
or
movb
pop
add
addb
sbb
rolb
xor
add
add
mov
or
adc
adc
test
or
inc
adc
add
addb
pop
inc
push
push
adc
daa
add
inc
loopne
inc
inc
adc
inc
add
add
inc
jnp
adc
sbb
or
or
add
and
sbb
adc
add
add
and
inc
or
or
mov
or
add
or
add
or
and
andb
cmp
nop
or
add
inc
addl
and
and
add
add
add
and
add
adc
sub
ret
add
dec
orb
adcl
push
sub
and
or
cmp
cmpsb
xor
inc
add
adc
and
or
orb
add
add
inc
enter
adcb
adc
or
sub
rolb
add
mov
add
add
xor
dec
add
sub
push
sub
add
and
and
adc
and
adc
and
sbb
add
add
adc
and
orb
rolb
or
shrb
add
test
or
ret
push
add
add
sbb
mov
sbb
and
xchg
add
mov
or
add
inc
lock
xchg
add
shrb
add
add
add
dec
adc
adc
mov
adc
or
inc
and
inc
add
mov
cmp
push
inc
sub
inc
add
add
sbb
sbb
nop
and
and
popa
push
and
xor
inc
add
out
add
adc
add
add
orb
daa
push
add
hlt
dec
dec
enter
dec
subl
and
sub
add
add
sub
push
add
test
movb
hlt
dec
add
es
mov
or
inc
sbb
and
inc
push
call
add
or
and
push
xor
xor
add
add
inc
and
inc
add
inc
add
push
and
push
add
cwtl
sub
adc
xchg
cmp
add
and
add
sub
mov
mov
push
add
add
cmp
or
xorl
adc
dec
nop
jo
in
inc
add
or
adc
add
or
sbb
add
add
and
adc
adc
add
mov
or
mov
add
stos
hlt
nop
inc
xor
cs
inc
push
dec
or
push
or
test
lods
xchg
sbb
inc
inc
pop
addb
or
push
pusha
add
test
add
and
or
adc
add
addl
and
add
add
or
or
sbb
add
add
adc
and
mov
addb
jno
xor
adc
inc
add
rcl
push
add
xor
adc
sub
xchg
add
sub
bound
add
and
add
add
and
inc
adc
add
add
xorb
and
movsl
pop
add
and
sbb
cld
enter
xchg
add
lds
add
inc
inc
add
sbb
adc
inc
pusha
sub
nop
add
push
push
cmp
pusha
add
adc
adc
xchg
or
or
or
sbb
xor
movsb
pop
or
cmp
or
add
add
or
jno
int
xor
nop
add
add
add
mov
add
cmp
add
add
sub
sbb
orb
pop
adcb
adc
or
or
push
add
sub
or
xor
inc
adcl
push
push
mov
xchg
and
adc
or
adc
adc
add
mov
or
sub
lock
add
xchg
lds
rolb
inc
add
andb
add
pop
rcll
add
xchg
and
xchg
add
add
imul
or
add
and
adc
rclb
shrb
inc
inc
add
or
add
add
add
cltd
or
and
add
and
adc
add
add
xchg
or
and
add
and
pusha
push
sub
addb
data16
add
add
adc
rolb
add
add
add
dec
rolb
inc
dec
inc
js
or
rolb
add
adcb
rclb
and
add
or
add
inc
adc
and
inc
and
sub
ss
sub
add
sub
xchg
add
add
and
or
push
adc
add
sbb
mov
add
and
inc
or
add
addl
add
and
roll
inc
subb
pop
inc
mov
add
sub
popa
push
and
add
or
add
inc
mov
add
and
mov
subb
inc
xor
and
xor
pop
addb
jo
andl
sbbl
or
sbb
popa
or
xchg
add
add
daa
leave
and
push
and
inc
add
add
add
add
or
or
add
test
xchg
and
ret
and
push
and
add
push
les
add
push
and
adcb
andb
or
and
add
push
adc
adc
add
add
xor
push
inc
and
add
inc
insl
loopne
add
xor
inc
add
cmp
test
add
mov
add
xor
nop
and
adc
push
inc
movsl
add
and
add
push
inc
xchg
addb
sbb
les
jne
add
and
cmp
and
add
add
sbb
xchg
dec
test
add
add
sub
adc
mov
adc
lds
adcl
test
xchg
add
add
test
add
or
cmp
insb
adc
add
mov
add
add
mov
js
add
subl
adcb
adc
add
orb
test
or
dec
add
lods
mov
add
xor
inc
and
sbb
push
inc
addl
or
or
movsb
addb
add
add
and
add
adc
pushf
shll
pop
add
inc
orb
sbb
sub
nop
mov
orb
add
add
andl
inc
adc
inc
xor
adcl
inc
sub
inc
popa
or
add
push
adc
add
mov
sub
xor
inc
add
mov
add
add
add
add
add
inc
add
or
ret
add
add
or
add
add
mov
dec
sbb
add
add
mov
loope
sub
add
add
pop
and
add
add
es
mov
adc
or
or
orb
add
xor
add
mov
xor
or
jmp
subb
or
xor
add
aas
inc
add
or
cmp
movsb
or
fs
or
push
or
adc
fwait
movsb
dec
es
addl
add
add
jb
add
or
inc
adc
add
adc
xor
xor
inc
orb
inc
or
inc
lock
add
and
xor
or
inc
add
les
add
pop
inc
adc
push
add
add
nop
add
adc
sbb
cmpl
xor
or
push
sub
test
sub
or
add
add
pusha
adc
adc
xchg
test
jne
addb
add
or
inc
adc
add
les
and
or
or
loopne
lods
add
cmp
adc
or
cmp
cmp
xor
test
add
xchg
add
orb
add
mov
mov
add
lds
add
add
add
add
and
adc
add
sbb
add
xchg
nop
add
inc
and
adcb
inc
inc
mov
push
rorb
je
and
test
inc
add
or
add
pusha
add
mov
hlt
add
addl
xor
add
adc
add
jmp
adc
add
add
add
push
or
push
test
mov
sbb
inc
or
push
mov
add
inc
add
add
push
sub
or
push
addb
fsubs
mov
adc
adc
add
dec
and
fs
add
adc
add
or
inc
pop
and
add
adc
and
push
add
fwait
or
and
add
and
adc
lock
push
andb
sub
and
cwtl
add
mov
nop
xchg
add
nop
add
mov
enter
adcb
adcb
mov
add
add
mov
or
adc
mov
or
or
add
addb
or
add
add
xor
and
inc
or
cmp
add
add
add
add
add
inc
add
add
sbb
mov
add
add
adc
add
add
adc
add
inc
rcll
inc
cwtl
add
test
add
orb
xorb
adc
sbb
add
add
rolb
add
mov
dec
inc
xorb
adc
or
add
dec
sahf
or
nop
mov
add
sbb
dec
inc
mov
rolb
pop
push
add
test
and
sub
or
and
or
add
add
inc
add
rcl
pusha
inc
or
dec
xchg
add
dec
and
or
inc
inc
adc
xchg
and
add
add
jb
xchg
and
andb
add
push
dec
add
xor
test
push
adc
add
add
add
adc
and
nop
adc
push
and
nop
and
add
andb
or
inc
add
clc
or
or
add
dec
xchg
push
mov
dec
add
mov
add
add
add
movsl
addb
add
push
add
nop
sub
mov
sub
add
add
addb
rclb
add
and
fsubs
add
je
add
inc
and
movsl
mov
addb
or
inc
inc
xchg
and
add
adc
pushf
add
add
or
or
imul
les
es
add
xorb
add
nop
add
adcl
inc
sub
pusha
pusha
xchg
add
adc
mov
sub
add
adc
and
sbb
add
xor
add
or
inc
inc
xchg
add
adc
add
push
adc
inc
xchg
shlb
and
icebp
adc
and
mov
add
add
adc
adc
add
cltd
adc
addb
inc
add
pop
dec
aam
popa
push
adc
add
and
loop
xor
add
adc
and
add
inc
add
adc
add
andb
push
adcb
add
inc
mov
addb
inc
and
and
xchg
inc
or
add
xor
and
dec
rclb
push
add
add
or
push
add
test
adc
and
sbbb
push
subb
add
add
add
add
xor
mov
add
loopne
or
add
add
sub
addb
and
add
and
dec
add
and
or
or
inc
or
inc
add
xorl
push
or
mov
pop
and
sbb
test
cmp
adc
es
pusha
inc
mov
add
cltd
push
push
add
addb
add
and
xor
and
inc
dec
inc
mov
xor
test
add
rolb
nop
and
faddp
and
add
jl
inc
addb
or
and
orl
or
rolb
add
shlb
sub
push
test
nop
mov
push
and
xor
add
or
and
add
adc
or
add
mov
sbb
add
lods
add
cmp
addb
sub
mov
add
sub
and
or
and
add
or
mov
push
add
add
sbb
add
xchg
sub
add
add
movsl
rolb
pop
push
add
add
add
xchg
mov
dec
add
add
add
add
or
add
add
add
pusha
aam
xor
movsb
test
and
inc
or
roll
add
add
or
add
cwtl
xor
add
mov
push
push
add
test
push
test
sbb
add
je
adc
xor
or
or
push
and
sub
add
addb
je
add
add
adc
cwtl
and
orb
push
and
orb
xor
mov
add
orb
mov
or
or
adcl
orb
add
push
enter
and
cmp
mov
add
and
add
and
xchg
pop
add
and
gs
ret
add
inc
inc
add
and
sbb
and
add
and
loope
mov
sub
add
inc
or
mov
mov
add
and
inc
adc
movsl
lds
adcb
add
push
or
add
push
je
or
push
add
add
add
mov
add
push
lcall
or
or
andb
cmp
add
sub
aam
nop
push
add
add
rolb
add
mov
and
pusha
cmp
add
and
add
pop
and
imul
dec
or
inc
add
and
push
adc
add
add
inc
sub
or
adc
add
add
mov
adcb
and
and
mov
bound
bound
inc
or
adc
adc
and
add
push
add
or
mov
pusha
push
or
adc
add
add
adc
add
and
mov
and
and
and
add
inc
cmp
add
cmp
mov
add
and
sub
xchg
adc
or
adc
inc
ret
addb
add
or
or
add
xor
and
push
inc
adc
mov
add
test
stos
add
and
push
hlt
inc
cwtl
push
pop
push
add
and
or
adc
or
cmpsl
and
aam
add
mov
sbb
adc
adc
inc
add
adc
push
add
adc
and
push
adc
and
and
inc
inc
sbb
pop
data16
or
add
and
add
cmp
add
add
add
or
or
or
inc
xchg
xor
sbb
mov
or
xor
mov
or
mov
add
mov
add
add
xchg
add
cmp
mov
inc
push
add
or
push
shrb
push
adc
mov
inc
add
cmp
subl
push
movl
add
addl
add
adc
addb
sbb
and
mov
or
add
mov
add
and
shrb
inc
xor
xor
int3
roll
inc
adc
inc
add
mov
jo
add
sub
push
adc
add
add
dec
cwtl
adc
or
push
xchg
adc
sub
add
daa
addl
inc
add
adc
mov
test
sub
shll
mov
and
and
or
nop
loope
add
add
add
xor
add
mov
push
cmpsl
inc
inc
inc
or
or
and
add
add
rolb
shlb
shll
shrb
push
sbb
inc
xor
or
movsb
lea
adc
mov
inc
orl
adc
adc
cmp
and
and
or
or
sbb
sbb
xchg
adc
adc
push
push
and
test
inc
cmp
les
cmp
push
or
inc
mov
adc
or
add
add
mov
and
and
subb
add
and
test
xchg
add
and
movsb
add
and
dec
add
xor
sub
add
add
dec
es
add
adc
mov
add
push
loope
mov
inc
bound
inc
and
or
inc
andb
and
adc
xchg
sbb
or
nop
test
repnz
sbb
push
adc
xchg
dec
and
xor
cmp
inc
or
sub
mov
or
mov
test
push
popa
mov
orb
add
insl
and
dec
les
or
popf
push
add
and
adc
adc
adc
add
jno
add
inc
adcb
sbb
int3
sub
adc
add
test
adc
and
inc
xor
nop
cwtl
and
adc
out
or
add
add
xor
roll
addl
add
sbb
or
in
xor
pop
add
push
ret
and
popa
js
or
mov
sbb
and
add
sbb
inc
add
test
or
inc
adc
add
push
mov
xor
mov
add
push
or
and
add
adc
add
adc
les
push
xchg
or
adc
add
add
rorb
inc
add
or
mov
nop
and
addb
xchg
data16
rolb
add
jo
inc
lcall
inc
or
sub
add
inc
and
add
inc
and
adc
xor
inc
xor
add
js
inc
and
dec
adc
adc
movsl
addb
je
rolb
movb
lods
inc
pop
rolb
add
adc
add
gs
les
add
dec
xchg
addb
mov
add
mov
inc
lds
inc
or
pop
xor
add
inc
or
add
adc
add
add
adc
inc
shlb
inc
xor
add
push
add
add
loop
inc
and
add
sub
mov
or
aaa
push
inc
add
inc
or
mov
add
and
inc
adc
sbb
mov
arpl
movsb
push
pusha
xor
add
push
adc
or
inc
mov
add
lret
or
xor
xor
mov
and
or
adc
pop
or
lcall
dec
adc
sbb
addb
or
or
rolb
mov
dec
adc
add
adc
add
popa
adc
inc
add
test
adc
addb
sbb
add
sbb
inc
or
or
inc
pushf
test
inc
sbbb
push
inc
inc
add
adc
addb
jo
enter
inc
rorl
add
and
orb
adcl
push
add
xchg
mov
mov
inc
addb
xor
loop
xchg
rolb
adc
add
and
push
bound
cmp
adc
or
sub
add
add
cltd
xchg
add
push
and
adc
and
adc
xor
adc
mov
addb
add
sub
add
and
test
xchg
stos
add
add
inc
add
push
inc
add
or
cmp
pop
addb
push
adc
add
sub
mov
add
adc
mov
ret
or
inc
add
mov
lock
xor
push
adc
xor
sbb
add
xchg
adc
adc
inc
xor
add
add
add
inc
jp
pusha
andb
inc
movsb
mov
nop
add
inc
xchg
pop
roll
or
enter
add
mov
or
add
sub
add
add
add
cmp
loopne
adc
dec
or
push
popa
push
inc
add
adc
xchg
subb
add
adc
push
add
xchg
adc
adc
pop
add
cmpsb
xor
gs
add
add
add
les
add
inc
or
or
rolb
sbb
mov
adc
inc
add
or
adc
or
inc
mov
inc
mov
or
imul
add
or
sbb
or
dec
adcb
xor
xor
andb
andb
or
test
or
dec
add
mov
dec
and
inc
adc
inc
add
orb
add
sbb
add
je
addl
pop
mov
or
push
and
or
and
or
adcb
adc
dec
add
and
addb
add
push
rclb
inc
add
adc
and
push
add
add
add
movsb
add
add
add
cwtl
add
add
inc
dec
add
addb
add
adcl
adc
or
sub
mov
add
adc
nop
add
sub
inc
add
flds
add
andb
add
insb
nop
add
push
xor
xor
adc
push
ret
add
adc
push
or
test
pop
sbbl
rolb
xchg
adc
and
xchg
xor
push
shl
adc
add
add
xor
xorb
rolb
nop
sub
xor
add
dec
add
add
push
add
add
push
and
or
orb
or
sbb
dec
bound
add
nop
add
jo
rorb
add
add
add
rorb
push
addl
add
inc
xor
jecxz
or
mov
.byte
cwtl
or
.byte
add
add
inc
sti
decb
add
add
add
add
add
add
add
sbb
add
add
inc
add
add
dec
push
push
cs
insb
add
add
gs
gs
gs
outsl
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
dec
pop
dec
jo
push
popa
jbe
inc
outsl
outsb
outsb
add
add
gs
gs
jb
jbe
fs
jns
gs
add
add
push
dec
gs
jb
jo
jb
jns
imul
add
push
dec
gs
gs
jb
jo
jb
jns
gs
inc
add
add
push
dec
gs
gs
outsl
insl
gs
imul
jns
add
add
gs
gs
jb
jbe
fs
jns
gs
add
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
xor
add
push
dec
gs
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
jae
inc
outsl
outsb
outsb
arpl
outsb
push
add
add
push
dec
gs
gs
outsl
outsb
outsb
arpl
outsb
xor
add
push
dec
gs
fs
outsl
outsb
outsb
arpl
outsb
inc
add
add
push
dec
gs
gs
gs
jne
arpl
outsb
outsw
jb
popa
je
outsl
outsb
push
add
add
gs
outsb
jne
push
gs
jne
arpl
add
add
gs
gs
gs
outsl
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
push
dec
gs
popa
outsb
arpl
inc
outsl
outsb
outsb
arpl
outsb
xor
add
add
gs
gs
gs
jne
arpl
popa
jb
outsb
je
add
add
push
dec
gs
gs
imul
jns
jns
gs
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
gs
jne
jo
jb
inc
insb
outsl
bound
inc
outsb
jne
add
add
gs
jb
jo
jb
jns
imul
add
push
dec
gs
gs
outsl
outsb
outsb
arpl
outsb
xor
add
push
dec
gs
jo
outsb
inc
outsb
jne
push
add
add
gs
gs
outsb
imul
dec
popa
insl
gs
add
add
insb
je
outsb
gs
gs
outsl
outsb
outsb
arpl
outsb
push
gs
outsl
jb
popa
outsb
arpl
add
add
gs
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
gs
jae
jb
add
dec
inc
push
push
push
dec
dec
cs
insb
add
add
inc
fs
gs
inc
dec
push
dec
inc
inc
push
pop
push
inc
push
inc
inc
push
inc
inc
inc
push
inc
dec
inc
pop
dec
dec
push
inc
inc
inc
pop
add
add
aas
xor
push
inc
push
dec
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
inc
push
outsb
fs
fs
push
push
inc
push
push
inc
pop
push
inc
push
inc
inc
push
inc
inc
inc
push
inc
dec
inc
pop
dec
dec
push
inc
inc
push
inc
inc
inc
pop
add
add
aas
push
gs
outsl
jbe
inc
insb
insb
inc
push
push
inc
push
push
inc
pop
push
inc
push
inc
inc
push
inc
inc
inc
pop
pop
add
add
push
outsb
fs
outsl
outsb
jns
push
dec
outsb
jno
imul
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
push
inc
push
push
dec
dec
pop
pop
dec
push
pop
dec
dec
push
push
dec
push
pop
pop
inc
inc
push
inc
inc
inc
inc
pop
add
add
push
jne
jb
push
popa
jb
outsb
je
push
imul
jb
outsb
inc
inc
dec
inc
push
inc
push
dec
inc
inc
push
inc
inc
inc
push
inc
push
dec
push
dec
inc
inc
push
pop
push
inc
push
inc
inc
dec
inc
pop
add
add
dec
outsl
arpl
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
pop
pop
add
add
dec
outsb
imul
inc
push
push
inc
push
push
inc
pop
push
inc
push
inc
inc
push
inc
inc
inc
pop
pop
add
add
aas
dec
outsb
jbe
insb
imul
jne
gs
dec
dec
pop
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
pop
pop
add
add
inc
insb
outsl
jae
inc
jb
jbe
dec
popa
outsb
fs
gs
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
pop
pop
pop
add
add
aas
push
jb
je
push
outsl
inc
imul
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
push
inc
pop
dec
inc
inc
pop
add
add
push
outsl
jo
dec
dec
push
push
push
inc
inc
dec
inc
inc
push
inc
inc
pop
dec
inc
pop
add
add
aas
push
jne
jb
inc
imul
push
popa
outsb
addr16
dec
push
dec
inc
inc
push
pop
push
inc
push
inc
inc
push
inc
inc
pop
dec
push
inc
push
inc
dec
inc
pop
dec
dec
push
inc
inc
xor
add
add
aas
push
outsb
fs
outsl
outsb
jns
push
push
gs
gs
push
outsb
jae
inc
insl
fs
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
push
inc
push
pop
push
inc
dec
push
inc
pop
inc
inc
push
inc
inc
inc
inc
pop
add
add
inc
push
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
dec
inc
push
pop
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
dec
push
inc
push
pop
push
inc
inc
push
push
dec
push
pop
pop
inc
inc
push
inc
push
dec
push
push
dec
push
inc
inc
inc
pop
add
add
dec
outsb
imul
inc
inc
push
pop
inc
push
dec
push
inc
inc
inc
push
inc
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
push
inc
push
dec
inc
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
add
add
inc
imul
dec
popa
imul
inc
pop
inc
dec
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
xor
xor
inc
push
dec
inc
push
push
inc
inc
inc
inc
inc
xor
add
add
aas
xor
dec
inc
inc
push
pop
push
inc
push
inc
inc
push
inc
inc
inc
pop
pop
add
add
inc
gs
popa
outsb
outsb
gs
arpl
imul
push
pop
push
push
inc
dec
inc
inc
push
inc
push
inc
push
inc
inc
dec
dec
inc
inc
pop
push
inc
inc
push
push
dec
push
pop
inc
inc
pop
pop
add
add
inc
imul
push
outsl
insb
jne
gs
dec
inc
push
pop
push
pop
push
push
inc
dec
inc
inc
push
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
inc
pop
add
add
push
jne
jb
push
outsl
insb
jne
gs
popa
insl
gs
dec
dec
push
dec
push
pop
push
dec
dec
dec
push
pop
dec
inc
push
inc
inc
push
inc
inc
inc
push
inc
push
push
push
push
push
dec
dec
inc
inc
inc
xor
add
push
inc
dec
dec
cs
insb
add
add
pop
insl
bound
bound
je
add
popa
je
outsb
xor
add
data16
jb
outsb
je
add
add
pop
inc
dec
arpl
add
add
pop
inc
dec
jo
ja
add
add
push
outsb
add
add
pop
inc
dec
insb
outsl
add
add
jo
imul
add
add
add
je
je
jae
jo
add
insb
outsl
arpl
arpl
jbe
add
add
bound
outsl
insb
outsl
ja
jb
add
pop
imul
add
add
jno
outsl
jb
add
add
bound
jo
jo
add
add
outsl
jo
outsb
add
add
pop
arpl
add
add
outsl
je
add
add
gs
add
jb
outsb
popa
insl
add
add
imul
jb
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
jne
push
dec
inc
imul
popa
jo
jb
popa
je
add
add
inc
jb
gs
imul
add
inc
jb
popa
je
dec
jne
gs
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
je
push
push
add
add
inc
gs
jb
je
push
popa
je
push
gs
jb
push
push
add
add
dec
inc
outsl
outsb
jae
insb
gs
jo
jb
je
outsl
outsb
add
add
je
push
inc
outsl
outsb
je
js
add
add
inc
gs
popa
insl
gs
imul
insb
gs
je
je
inc
add
add
dec
outsl
popa
fs
imul
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
pop
insb
insb
jae
imul
push
dec
push
dec
dec
push
dec
cs
insb
add
add
pop
inc
popa
insb
insb
dec
popa
insl
gs
imul
add
add
pop
inc
gs
arpl
popa
jo
bound
imul
xor
add
pop
push
gs
popa
arpl
gs
pop
inc
xor
add
pop
push
jne
jb
push
gs
imul
imul
add
pop
push
gs
jne
jb
dec
outsb
outsw
dec
gs
inc
xor
add
add
pop
inc
gs
imul
outsb
addr16
cmp
add
add
jb
popa
je
inc
jbe
outsb
je
inc
xor
add
add
pop
dec
outsl
outsl
imul
arpl
jne
je
popa
insl
gs
inc
xor
add
add
pop
push
gs
jo
outsb
dec
gs
js
inc
xor
add
add
insb
gs
jb
jbe
outsb
je
outsl
addr16
inc
cmp
add
pop
dec
gs
push
outsl
inc
push
cmp
add
pop
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
xor
add
pop
push
imul
push
arpl
pop
inc
xor
add
pop
inc
insb
outsl
bound
inc
fs
je
insl
pop
inc
xor
add
pop
inc
gs
outsl
fs
gs
imul
xor
add
add
jo
outsb
inc
gs
je
jo
inc
xor
add
add
pop
inc
fs
outsl
outsb
je
gs
jne
arpl
inc
xor
add
pop
push
gs
outsb
jne
je
insl
dec
outsb
outsw
pop
inc
xor
add
add
pop
inc
gs
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
xor
add
pop
inc
popa
arpl
jo
jbe
outsb
je
outsl
addr16
inc
cmp
add
push
push
push
dec
cs
insb
add
add
inc
dec
dec
inc
gs
outsl
arpl
outsb
je
je
outsl
outsb
add
add
push
imul
jb
gs
add
dec
or
add
add
pop
movb
mov
add
add
add
add
add
add
movb
adc
add
movl
add
add
movsb
or
add
movl
add
add
rolb
add
adc
add
inc
add
add
add
add
add
add
add
jo
add
addb
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
sbb
add
mov
add
in
add
mov
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
mov
add
ss
add
add
pop
add
add
add
inc
add
add
test
add
add
xchg
add
add
in
add
add
add
add
add
pop
add
add
add
add
add
ljmp
add
add
and
add
pop
pop
add
incb
add
xor
add
jbe
add
push
add
or
add
cwtl
pop
add
lret
add
add
insb
pop
add
mov
add
fiadds
add
hlt
push
add
dec
pop
add
push
pop
add
xchg
add
add
add
jbe
add
and
add
xor
add
lock
add
adc
add
xchg
add
mov
add
les
add
pop
or
add
or
add
pop
add
loopne
add
add
add
add
add
testb
add
or
add
add
or
add
add
or
add
or
add
or
add
or
add
add
push
or
add
or
add
add
dec
or
add
or
add
or
add
or
add
add
add
add
cmpsb
or
add
add
xor
xor
insl
inc
je
dec
inc
inc
dec
xor
jp
insl
cmp
insl
push
push
cmp
js
dec
pop
xor
popa
jp
dec
xor
jae
pop
inc
dec
popa
push
cmp
jns
gs
inc
cmp
jb
inc
push
addr16
cmp
push
jns
dec
xor
ja
fs
dec
jno
je
imul
je
inc
gs
push
xor
inc
imul
arpl
push
inc
pop
dec
inc
dec
pop
jne
insb
dec
jp
arpl
jp
bound
arpl
dec
js
pop
push
aaa
insb
jne
ss
addr16
cmp
push
inc
dec
inc
dec
push
gs
jns
push
cmp
xor
jo
dec
xor
pop
inc
dec
push
inc
jns
popa
push
push
imul
xor
xor
insb
pop
dec
push
push
push
add
cmp
imul
dec
jns
inc
dec
inc
dec
inc
push
imul
jb
je
push
xor
js
xor
arpl
imul
jo
inc
inc
xor
jae
push
push
dec
insb
pop
addr16
inc
dec
aaa
xor
push
insl
cmp
js
js
push
push
inc
je
imul
insb
cmp
outsb
jo
pop
dec
jo
xor
pop
cmp
aaa
jp
xor
push
imul
push
jo
cmp
dec
ja
push
inc
inc
push
addr16
xor
push
jae
xor
xor
je
inc
add
add
js
cmp
dec
bound
dec
push
jno
dec
inc
dec
dec
pop
push
jne
push
pop
push
insb
pop
ja
push
dec
push
jb
arpl
add
gs
je
inc
push
ja
inc
dec
dec
dec
push
jb
dec
dec
dec
js
je
dec
xor
imul
inc
jb
insl
addr16
push
imul
xor
cmp
inc
push
push
xor
dec
push
gs
aaa
push
inc
inc
pop
jne
inc
push
jns
xor
inc
dec
dec
xor
ja
xor
push
outsb
xor
dec
inc
insb
pop
fs
jb
jb
inc
inc
push
inc
add
dec
inc
inc
inc
push
cs
dec
dec
add
gs
dec
dec
push
jb
dec
dec
jb
dec
dec
imul
pop
xor
data16
jb
pop
inc
inc
bound
xor
cmp
dec
pop
inc
push
addr16
aaa
pop
arpl
add
add
addb
ss
push
gs
inc
dec
addr16
add
push
push
out
add
lret
fwait
xor
xchg
test
pushf
fldt
clc
mov
int
push
sbb
mov
and
imul
inc
push
jbe
ja
dec
push
jns
push
inc
jno
imul
pop
push
data16
outsl
push
pop
je
dec
push
xor
cmp
fs
push
xor
xor
inc
inc
cmp
ja
insl
push
pop
dec
arpl
push
aaa
jb
dec
inc
dec
dec
outsb
jns
imul
xor
dec
push
push
fs
ja
bound
jae
fs
push
dec
jo
dec
dec
xor
bound
xor
outsl
outsl
dec
inc
inc
push
xor
dec
inc
js
push
aaa
insl
jp
jno
push
insl
jne
xor
arpl
arpl
push
jae
push
dec
cmp
dec
gs
push
xor
inc
xor
inc
ss
push
inc
dec
xor
outsl
inc
je
dec
jo
cmp
xor
push
inc
outsb
js
jbe
bound
insl
insb
xor
push
ja
jno
jbe
addr16
push
addr16
insl
popa
dec
push
pop
jp
push
inc
jbe
jne
inc
dec
dec
pop
dec
inc
inc
inc
inc
gs
inc
arpl
insb
jbe
jno
push
push
xor
push
dec
inc
jb
xor
js
imul
imul
add
and
sbb
xor
add
xor
inc
popa
jno
inc
dec
push
jbe
dec
gs
je
dec
dec
inc
jno
cmp
fs
arpl
dec
inc
outsl
xor
imul
imul
dec
push
insb
outsb
ja
push
inc
jp
imul
dec
dec
dec
aaa
dec
inc
push
push
outsb
push
inc
imul
push
push
popa
push
push
inc
cmp
bound
dec
jp
push
inc
outsl
jb
pop
pop
push
popa
push
imul
xor
dec
pop
cmp
inc
pop
dec
inc
cmp
inc
popa
jbe
xor
inc
inc
inc
imul
inc
dec
jno
xor
inc
dec
inc
addr16
inc
aaa
xor
data16
jp
xor
xor
push
push
insl
xor
inc
push
xor
jb
push
push
popa
jbe
xor
add
add
dec
push
xor
push
jae
push
dec
push
imul
inc
push
addr16
xor
add
ja
addr16
push
cmp
jp
inc
inc
jns
push
dec
imul
ss
jo
inc
dec
inc
xor
push
cmp
jbe
inc
addr16
bound
jb
xor
cmp
inc
inc
dec
xor
push
inc
xor
xor
pop
aaa
push
inc
ja
jae
xor
push
cmp
push
jae
push
pop
cmp
push
dec
outsb
xor
dec
jns
jae
pop
je
inc
xor
xor
dec
dec
push
ja
push
jne
dec
cmp
ja
ss
jno
insb
imul
gs
jns
push
push
push
inc
outsl
jb
inc
popa
push
jae
ja
jp
outsl
arpl
addr16
arpl
js
jne
push
xor
addr16
jo
dec
add
add
and
addl
xor
dec
push
xor
push
xor
pop
inc
popa
dec
jbe
imul
aaa
jae
bound
inc
inc
push
cmp
xor
ja
jns
push
xor
jns
imul
inc
push
inc
imul
push
push
push
outsl
cmp
inc
outsb
jb
dec
jae
popa
pop
pop
push
dec
imul
jbe
push
dec
jae
pop
inc
xor
push
push
dec
jns
imul
js
push
data16
cmp
inc
jo
popa
dec
arpl
xor
jo
addr16
insb
jne
outsb
push
xor
jb
add
add
js
jo
inc
inc
jno
imul
push
jb
push
dec
insl
cmp
inc
xor
dec
cmp
push
dec
dec
inc
inc
push
inc
je
pop
dec
popa
xor
dec
inc
jo
xor
ja
imul
imul
dec
insb
push
inc
xor
jae
push
arpl
jbe
imul
arpl
jb
insl
push
aaa
cmp
insl
cmp
push
je
ja
push
xor
xor
cmp
xor
inc
inc
xor
cmp
js
pop
xor
pop
dec
arpl
add
jns
push
inc
dec
aaa
dec
arpl
dec
jns
popa
dec
xor
cmp
je
push
insb
pop
push
cmp
jb
dec
inc
dec
dec
push
dec
jne
dec
dec
jp
xor
aaa
outsb
inc
push
xor
push
js
je
push
jb
imul
bound
dec
xor
add
insl
xor
popa
inc
jae
imul
push
xor
inc
pop
addr16
inc
xor
inc
push
dec
bound
xor
jb
je
xor
addr16
addr16
jp
popa
xor
xor
outsb
jae
pop
fs
outsb
inc
pop
dec
gs
push
inc
dec
pop
push
aaa
dec
push
je
jp
inc
inc
push
js
je
push
aaa
dec
pop
push
xor
push
pop
imul
pop
jo
xor
push
outsb
dec
jp
jae
js
inc
fs
pop
inc
xor
jbe
inc
cmp
pop
add
add
inc
addb
push
add
imul
dec
dec
inc
outsl
push
dec
fs
xor
insb
inc
dec
jo
inc
js
data16
fs
imul
add
and
inc
outsl
imul
insb
push
bound
inc
jns
push
push
inc
dec
pop
cmp
imul
push
xor
jno
outsl
dec
push
insb
dec
xor
push
jae
xor
popa
jbe
push
pop
jne
push
dec
pop
jae
dec
push
cmp
xor
outsl
js
push
jbe
inc
arpl
add
adc
xor
xor
cmp
popa
xor
jb
inc
pop
push
jne
imul
outsl
outsl
fs
cmp
push
popa
jno
insb
jo
jbe
xor
push
xor
dec
ss
push
aaa
jae
je
js
jae
js
dec
push
gs
outsb
addr16
dec
xor
jns
dec
jb
dec
dec
push
pop
bound
push
jo
dec
pop
ja
jno
dec
fs
add
add
xchg
aad
.byte
add
add
push
add
add
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
rorl
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
sub
add
inc
and
add
add
push
add
push
add
jbe
pop
add
and
add
cmp
push
add
jbe
inc
add
dec
add
add
add
xor
push
add
add
add
dec
add
jne
xor
xor
pop
add
and
add
pop
add
popa
add
push
add
jb
xor
xor
insl
add
add
inc
add
dec
add
inc
add
data16
add
xor
xor
arpl
je
jae
dec
add
push
add
and
push
add
xor
outsb
add
add
pop
add
add
bound
insl
add
xor
xor
das
add
inc
add
push
add
inc
add
xor
jne
and
js
js
cmp
add
add
jno
add
jbe
xor
inc
add
push
add
add
and
jb
xor
inc
add
jo
data16
add
inc
add
arpl
xor
imul
jb
bound
xor
add
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
jo
add
push
add
es
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
dec
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
cmp
jns
pop
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jne
inc
add
add
dec
add
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
pop
add
je
inc
add
add
pop
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
aaa
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
