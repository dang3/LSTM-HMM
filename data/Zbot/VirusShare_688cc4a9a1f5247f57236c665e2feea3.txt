push
mov
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
add
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
jmp
jmp
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
mov
add
mov
mov
pop
ret
int3
push
mov
sub
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
sub
mov
cmpl
jne
movl
mov
imul
mov
sub
mov
jmp
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
lea
push
call
movl
movl
mov
cmp
jne
movl
lea
mov
mov
mov
and
add
mov
sub
mov
mov
sub
add
mov
movl
lea
mov
mov
and
mov
imul
add
mov
lea
mov
mov
add
mov
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
mov
lea
push
call
jmp
lea
push
call
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
movl
cmpl
jg
movl
movl
lea
mov
mov
mov
or
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
mov
cmp
jg
movl
mov
add
imul
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
imul
imul
mov
jmp
movl
mov
add
mov
cltd
idiv
mov
mov
and
mov
add
cltd
idiv
mov
mov
add
add
mov
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
mov
or
mov
sub
add
mov
movl
lea
mov
mov
mov
add
add
mov
movl
movl
mov
and
add
imul
mov
call
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
sub
imul
mov
mov
and
sub
add
mov
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
or
add
mov
sub
mov
mov
or
add
imul
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
add
mov
lea
push
call
cmpl
jl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
lea
mov
mov
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
lea
push
call
jmp
call
movl
lea
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
call
movl
lea
mov
mov
mov
sub
mov
movl
cmpl
jl
movl
movl
mov
sub
mov
movl
mov
and
mov
add
cltd
idiv
mov
jmp
movl
movl
movl
mov
or
mov
and
sub
imul
mov
lea
mov
mov
or
mov
add
cltd
idiv
add
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
and
mov
add
cltd
idiv
mov
mov
sub
mov
movl
mov
add
mov
sub
mov
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
lea
push
call
movl
mov
or
add
mov
jmp
movl
movl
movl
mov
and
add
mov
lea
mov
mov
mov
mov
movl
mov
or
mov
add
cltd
idiv
mov
movl
lea
mov
movl
mov
mov
or
imul
mov
sub
mov
movl
cmpl
je
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
movl
lea
mov
mov
mov
or
add
mov
movl
mov
or
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
imul
mov
sub
mov
mov
imul
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
add
mov
lea
mov
mov
mov
sub
mov
movl
mov
cmp
jl
mov
add
mov
mov
add
mov
sub
mov
movl
lea
mov
mov
mov
or
add
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
imul
mov
movl
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
or
mov
add
add
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
sub
mov
jmp
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
add
add
mov
movl
jmp
mov
add
mov
mov
cltd
and
add
sar
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
add
mov
cltd
idiv
mov
cmpl
jl
mov
mov
mov
or
mov
sub
imul
mov
cmpl
jl
mov
imul
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
mov
push
mov
push
mov
push
call
add
lea
mov
mov
mov
imul
add
mov
movl
jmp
mov
sub
mov
cmpl
je
mov
mov
movl
movl
lea
mov
mov
mov
or
mov
sub
mov
mov
or
sub
add
mov
lea
mov
mov
mov
imul
mov
sub
mov
mov
shl
mov
shr
xor
add
mov
and
jns
dec
or
inc
mov
add
add
mov
sub
mov
mov
mov
movl
movl
lea
mov
mov
mov
and
mov
sub
add
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
mov
mov
jmp
movl
movl
lea
mov
mov
mov
sub
imul
mov
movl
lea
mov
mov
mov
imul
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
movl
lea
mov
mov
mov
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
add
mov
jmp
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
call
lea
push
call
movl
movl
lea
mov
mov
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
lea
mov
mov
or
mov
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
jmp
lea
push
call
movl
cmpl
jl
movl
lea
mov
mov
mov
and
sub
mov
sub
mov
movl
lea
mov
mov
mov
sub
mov
sub
mov
cmpl
je
movl
mov
imul
imul
mov
jmp
mov
and
sub
mov
movl
lea
mov
mov
mov
imul
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
add
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
movl
mov
cmp
jl
jmp
mov
imul
add
mov
lea
mov
mov
add
mov
cltd
idiv
add
mov
jmp
movl
mov
imul
add
mov
mov
add
add
mov
lea
mov
mov
mov
sub
imul
mov
movl
mov
push
mov
push
push
call
add
mov
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
and
add
mov
sub
mov
cmpl
jne
mov
cmp
jl
call
movl
lea
mov
movl
mov
and
mov
mov
add
imul
mov
push
push
call
add
mov
cmpl
jne
movl
jmp
movl
mov
sub
imul
mov
movl
mov
add
mov
movl
mov
sub
mov
sub
mov
movl
movl
jmp
mov
add
mov
mov
add
mov
cmpl
jae
mov
and
jns
dec
or
inc
mov
add
mov
mov
mov
jmp
movl
mov
or
mov
sub
mov
sub
mov
movl
movl
mov
and
imul
mov
sub
mov
lea
mov
mov
mov
and
imul
add
mov
push
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
and
mov
mov
sub
mov
sub
mov
mov
or
imul
add
mov
lea
mov
mov
and
mov
imul
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
mov
movl
mov
imul
mov
mov
sub
imul
mov
jmp
jmp
movl
mov
add
imul
mov
push
push
call
add
mov
cmpl
jne
movl
jmp
movl
movl
mov
add
mov
cltd
idiv
add
mov
lea
mov
mov
and
mov
mov
add
mov
sub
mov
push
push
mov
push
call
add
push
push
mov
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
cmp
jne
movl
lea
mov
mov
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
jmp
lea
mov
mov
or
mov
mov
and
imul
add
mov
jmp
movl
movl
mov
push
mov
push
call
add
lea
mov
mov
mov
and
sub
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
push
call
mov
cmpl
jne
movl
jmp
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
mov
mov
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
jmp
mov
push
mov
push
mov
push
call
add
movl
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
sub
mov
lea
mov
mov
mov
imul
mov
sub
mov
mov
push
lea
push
call
push
call
mov
cmpl
jne
movl
jmp
movl
cmpl
je
movl
lea
mov
mov
mov
or
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
movl
mov
mov
or
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
jmp
call
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
add
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
push
call
push
mov
push
mov
push
call
add
xor
jne
movl
mov
and
mov
cmpl
je
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
lea
push
call
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
cmp
je
movl
movl
mov
or
add
mov
lea
push
call
movl
movl
mov
add
mov
sub
mov
movl
movl
mov
sub
imul
mov
movl
lea
mov
mov
or
mov
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jne
call
movl
mov
sub
mov
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
movl
mov
or
sub
imul
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
add
mov
call
lea
mov
mov
mov
or
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
add
mov
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
push
call
mov
mov
movl
mov
add
mov
lea
mov
mov
mov
or
add
mov
sub
mov
push
push
lea
push
call
add
movl
cmpl
jl
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
imul
mov
jmp
mov
mov
push
call
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
sub
mov
call
jmp
movl
mov
add
mov
sub
mov
movl
cmpl
jg
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
jmp
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
cmpl
jg
movl
mov
or
mov
sub
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
or
add
mov
sub
mov
mov
push
call
movl
mov
or
mov
add
cltd
idiv
imul
mov
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
movl
mov
and
mov
add
cltd
idiv
imul
mov
push
call
cmp
jne
call
xor
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
mov
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
xor
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
jmp
push
mov
push
mov
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
jmp
jmp
jmp
jmp
xor
add
add
push
inc
add
pop
inc
add
insb
inc
add
jl
add
mov
add
add
add
add
repnz
add
fiadds
add
add
add
inc
add
mov
add
add
inc
add
or
add
push
inc
add
dec
inc
add
push
inc
add
fs
add
outsb
inc
add
jbe
add
addb
nop
inc
add
pushf
inc
add
mov
add
rolb
rolb
add
inc
add
lock
add
incb
add
add
add
add
add
cwtl
pop
add
mov
adc
add
aas
add
inc
push
dec
pop
inc
inc
push
inc
dec
dec
inc
dec
inc
pop
push
push
push
pop
inc
push
push
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
add
popa
bound
je
sub
jb
and
je
add
add
add
jmp
das
inc
add
das
inc
add
add
add
add
mov
add
add
add
inc
add
rolb
add
add
les
add
inc
add
sub
add
inc
add
and
add
add
cmp
add
add
xor
add
add
push
inc
add
pop
inc
add
insb
inc
add
jl
add
mov
add
add
add
add
repnz
add
fiadds
add
add
add
inc
add
mov
add
add
inc
add
or
add
push
inc
add
dec
inc
add
push
inc
add
fs
add
outsb
inc
add
jbe
add
addb
nop
inc
add
pushf
inc
add
mov
add
rolb
rolb
add
inc
add
lock
add
incb
add
add
add
add
add
add
add
js
inc
gs
jns
je
insl
push
imul
gs
gs
imul
aam
push
insb
jae
insb
insb
outsl
arpl
add
add
je
outsl
arpl
push
imul
push
imul
insb
insb
outsl
arpl
add
je
jb
arpl
jae
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
gs
inc
add
add
insb
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
pop
add
insb
inc
jb
popa
je
inc
outsl
outsb
je
js
add
pop
add
insb
inc
gs
gs
inc
outsl
outsb
je
js
add
dec
push
inc
dec
inc
dec
xor
cs
insb
add
add
dec
insb
gs
dec
inc
jne
jns
add
outsl
insb
gs
cs
insb
add
filds
insl
gs
jae
je
add
jbe
jb
cs
insb
add
lds
pop
arpl
js
je
testb
gs
je
dec
add
arpl
inc
imul
pop
arpl
imul
imul
arpl
insb
outsb
add
pop
pop
addr16
popa
imul
cmp
pop
imul
insl
add
gs
jae
jb
popa
je
gs
add
mov
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
test
pop
pop
jo
pop
insw
outsl
fs
cwtl
add
jae
je
popa
jo
pop
je
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
mov
pop
outsl
outsb
gs
je
in
add
js
gs
pop
push
gs
add
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
push
sbb
pusha
bsf
and
xor
cmp
lahf
fmulp
dec
jae
mov
mov
stc
adc
push
std
lret
and
mov
hlt
out
enter
mov
outsl
daa
arpl
addl
out
adc
ret
es
sub
jns
jecxz
das
dec
jp
xchg
jg
xlat
push
mov
push
jns
push
cmp
mov
cwtl
inc
test
or
inc
cli
daa
xor
and
fmull
or
inc
sbbb
jbe
loope
cmp
sti
outsl
and
std
mov
repnz
mov
mov
sbb
stos
add
lret
adc
test
out
fiadds
test
pop
mov
insb
aas
shll
jnp
imul
cmpsb
adc
popf
fimull
pop
std
cwtl
mov
mov
loop
xchg
add
lret
int3
push
subl
cmpsb
inc
xor
adc
cmp
jns
sbb
int
test
jp
in
jle
lahf
out
adc
icebp
mov
insb
std
rcrl
mov
pop
xchg
pop
add
out
push
jle
add
push
dec
enter
and
out
movsb
cmp
cli
adc
mov
push
adc
daa
pop
call
pop
push
push
dec
arpl
lock
cmp
lds
iret
cmp
rorb
or
mov
lods
jns
jp
add
jnp
jmp
loopne
test
insl
xchg
loope
out
nop
repz
jb
add
call
adcl
mov
add
add
xorb
les
jecxz
push
inc
pop
adc
jle
sbb
pop
cli
dec
lock
loopne
arpl
lret
bnd
xor
push
sbb
sbb
add
pushf
pop
dec
mov
fildl
movsb
or
aas
jecxz
ja
or
ret
outsl
adc
sub
aam
rorl
outsl
data16
dec
sub
sub
test
and
out
dec
daa
imul
fidivl
pushl
lds
mov
rorb
xchg
or
add
loopne
std
pop
ja
loopne
and
mov
cs
pop
push
pop
adc
push
fwait
push
xchg
je
mov
and
dec
pop
mov
mov
mov
fdivrs
cmp
mov
gs
sbb
mov
les
insb
je
test
sub
push
mov
mov
nop
lods
ret
mov
jbe
test
xor
push
or
neg
sub
js
cmp
mov
or
pop
std
adc
sub
xchg
icebp
push
push
push
setnp
fsubrl
mov
dec
daa
lret
loop
push
and
jmp
cld
int
add
and
xchg
xor
outsl
mov
loopne
mov
xchg
iret
lods
jl
lcall
sub
ror
enter
cmpsb
add
addb
test
es
adc
aaa
cmp
int
sub
and
shl
inc
repz
mov
aad
mov
cmp
add
mov
lods
outsb
nop
test
adc
push
lcall
or
mov
sbb
ljmp
sub
insb
movsl
dec
sub
mov
icebp
les
jne
cmp
mov
mov
xchg
xlat
mov
sbb
dec
out
pop
pop
cmp
fistpll
pushf
push
mov
push
push
shr
imul
cwtl
jg
sbb
das
cmp
jae
lcall
dec
and
sti
aaa
mov
test
in
jle
movsb
pop
jmp
cmp
pop
popl
outsl
adc
rcr
shl
dec
mov
cmpsb
xchg
in
and
pop
mov
mov
add
hlt
pop
std
jb
out
mov
cli
mov
je
int
rclb
push
pop
push
cmp
in
pop
gs
cs
rcrl
das
xchg
dec
aam
imul
leave
dec
fstl
pop
xor
movsb
clc
mov
or
add
stos
fimull
lds
inc
fisubrs
adc
cmc
push
pop
inc
je
jle
jo
in
ret
ret
mov
clc
insl
ljmp
fdivrs
sbb
sbb
lahf
inc
decb
xchg
aas
out
xchg
mov
pop
es
cmp
ja
mov
dec
shlb
and
adc
xor
sub
dec
jge
js
push
outsl
lods
out
sub
push
loope
movsl
xchg
mov
int
loope
fnop
add
mov
jns
movsl
loop
xchg
and
loop
aad
arpl
mov
addl
or
in
mov
add
ds
add
add
addb
add
and
repnz
xor
and
out
pushf
shrl
jg
and
jle
inc
xor
xchg
sbb
xchg
xor
sbb
in
inc
in
shrl
lock
cltd
or
fucomip
shlb
ficomps
mov
mov
xchg
nop
out
je
and
cltd
popa
gs
pop
mov
rcrb
push
cmp
pop
xlat
movsl
sbb
and
cli
das
scas
push
mov
test
xchg
insb
outsb
dec
sbb
mov
in
push
cli
jns
mov
addl
inc
inc
inc
sbb
and
push
mov
jne
outsl
sbb
cltd
loopne
xlat
sub
orl
lods
and
or
subl
jae
cld
mov
imul
cwtl
sub
inc
into
inc
jb
mov
xlat
xchg
push
mov
cwtl
push
neg
mov
adc
hlt
push
fidivs
xor
movsl
mov
mov
dec
sbb
popf
daa
mov
push
sbb
pop
stos
and
and
cmp
iret
inc
pop
cs
mov
add
out
jae
lret
in
add
popf
lret
adc
push
xor
nop
xchg
adc
movsb
ja
xchg
push
aam
ds
mov
xchg
cmc
fisubs
mov
push
addl
sbb
movsb
and
aam
lcall
hlt
jl
adc
pusha
fldl2e
and
mov
xor
loopne
imul
aas
cmp
gs
push
loop
lret
push
xor
or
icebp
in
and
aad
xchg
lret
add
cmp
icebp
pop
sub
xchg
cmp
and
and
sbb
es
add
fwait
les
dec
xchg
loop
cmp
xchg
xchg
ret
xor
pop
dec
scas
dec
je
xchg
lock
lods
cmp
lret
pop
inc
jg
and
xlat
sahf
and
xchg
mov
movsb
push
cmp
test
jmp
mov
jmp
lcall
ficoml
out
sub
lods
pushf
sub
cmp
xchg
clc
xor
sub
shlb
call
mov
ret
int3
aam
jmp
fnstenv
test
popa
mov
test
insb
sbb
cwtl
jo
inc
cmp
mov
sbb
pop
xor
push
jecxz
outsl
stc
mov
jg
mov
nop
lock
rcrb
scas
add
and
mov
mov
adc
push
cmp
and
insb
iret
and
jl
test
rcrb
cmp
orb
push
inc
repz
and
cmp
shlb
dec
dec
orl
cmp
cld
lcall
xchg
add
lret
lret
pop
mov
push
push
dec
dec
jmp
jae
call
inc
hlt
notl
dec
int3
jne
fistpll
jo
adc
leave
mov
push
dec
sti
enter
mov
lcall
ja
jge
xchg
xor
xchg
mov
lods
lock
jg
inc
mov
cmp
mov
aam
loope
inc
push
jg
jmp
jle
xchg
dec
adc
sbb
fwait
cli
js
in
int3
fmull
or
scas
xchg
sbb
sbbb
lahf
jnp
jg
inc
fmuls
lock
fistps
dec
outsl
out
xlat
pop
bound
lret
mov
nop
imul
xor
adc
outsb
aam
lcall
mov
xor
fidivs
mov
iret
mov
ss
jecxz
test
mov
lock
icebp
mov
scas
stc
or
adc
scas
cmp
imul
jne
jns
mov
lock
frstor
out
dec
mov
pop
rclb
xchg
pop
push
and
test
movsb
and
push
mov
lea
jne
jecxz
jecxz
xchg
inc
adc
ret
pop
lret
psubd
add
sti
rclb
aas
lods
jp
enter
mov
cld
xlat
inc
jnp
cmp
mov
lret
lods
in
sub
test
imul
test
nop
cltd
adc
adcl
rcll
test
in
jnp
push
xchg
cmp
fucomip
cmp
adc
jb
jecxz
shr
in
jno
loop
rcl
mov
fdivs
sbb
cltd
pop
in
add
bnd
addb
jecxz
mov
add
stos
jg
aas
sbb
push
into
stos
fwait
adc
shll
lock
dec
sarl
or
xorps
test
inc
mov
jae
and
mov
scas
and
out
fldcw
dec
cwtl
lret
xor
jl
xor
add
xchg
mulps
push
jno
mov
mov
cli
push
inc
lods
and
mov
jns
ret
jg
cmpsl
inc
sub
jns
and
addr16
cwtl
pop
ret
outsl
loop
stos
aam
cmc
adc
sbb
lods
out
cli
xor
pop
cs
test
jp
movl
aam
andl
or
sbbb
shl
aad
cld
cmpsl
xchg
mov
pushf
xor
gs
jne
xchg
push
daa
aaa
or
inc
cld
mov
sub
dec
hlt
push
mov
test
shrl
xlat
mov
fists
mov
push
es
fimull
or
mov
xor
setbe
roll
pop
jno
cmp
dec
mov
test
add
ljmp
jnp
jge
or
adcl
int3
fcoml
or
dec
fiadds
dec
jb
push
mov
fcoms
cmp
je
sbb
jns
cli
les
push
inc
add
rcrb
sub
jg
jae
call
jae
push
ret
dec
cmp
pop
xor
or
sub
test
jae
fisubl
icebp
test
pop
ret
popa
js
sti
stos
mulb
call
pop
out
mov
add
pop
pop
jp
movaps
int
xor
sti
and
adc
or
xchg
sbbb
enter
xchg
push
jns
mov
stos
adc
add
cmp
xor
ret
pop
mov
push
xchg
test
test
loopne
pop
imul
mov
push
pushf
mov
cmpsb
mov
xor
xchg
and
cmc
mov
adc
outsb
jne
jnp
ffreep
aaa
jp
mov
enter
rcll
lock
lods
push
mov
movswl
and
sbb
adc
pop
fwait
jae
cmp
cmp
sub
rcr
mov
or
mov
lret
xchg
dec
inc
jnp
ret
mov
out
aaa
not
cli
into
cmp
aam
dec
outsl
rorb
dec
dec
dec
pop
xor
add
sbb
shrl
mov
jg
fsubr
xor
lock
daa
out
xor
mov
lret
push
loope
xchg
ljmp
out
mov
pop
xor
aas
loopne
bound
in
xor
add
dec
pop
out
xor
push
xor
dec
imul
out
out
push
sub
inc
imul
xchg
sub
stc
addl
mov
mov
scas
lock
adc
arpl
call
add
xchg
stos
jge
pop
jb
mov
mov
sbb
call
pusha
or
sub
cld
sub
push
pop
shl
adc
idivb
or
cmp
call
inc
sti
cmpsb
dec
lea
push
mov
sbb
sub
mov
clc
pop
and
lret
outsb
jecxz
nop
pop
test
stos
dec
xchg
ficompl
mov
dec
lock
and
or
inc
js
call
push
add
ret
test
push
fprem
mov
aam
fnstcw
sbb
int
mov
test
jle
cwtl
ret
cmp
negb
movsb
xor
movsl
push
mov
insb
cmpsb
mov
jns
add
lcall
jmp
inc
mov
jns
leave
mov
sbb
push
jo
add
movsb
daa
test
mov
imul
sub
stos
aam
pop
andb
cwtl
sti
jp
mov
gs
shrb
in
sub
int
dec
roll
sub
jecxz
arpl
add
sub
rcl
push
test
push
subb
pop
pop
jno
int3
out
dec
aad
or
addl
sbb
and
into
or
xor
jg
or
adc
sub
pop
adc
sub
insl
into
pop
push
or
inc
and
repz
adc
ss
out
push
pop
inc
shr
xchg
lea
add
inc
adc
icebp
int
sub
inc
jmp
inc
dec
sub
xor
mov
cmp
out
push
lcall
mov
jge
test
in
adc
xor
addr16
mov
test
xchg
adc
jns
dec
sbb
xchg
ljmp
mov
popf
and
sbb
jae
movsb
addl
lock
aaa
mov
inc
and
xor
pushf
test
xor
xchg
jecxz
in
inc
jb
jne
adc
inc
xchg
stos
es
gs
pop
mov
pop
enter
mov
and
test
push
jns
out
push
daa
insl
bound
mov
pop
sub
add
mov
fisubl
popa
mov
cmpsb
sbb
mov
in
adc
adc
insb
adc
adc
xchg
pop
lods
add
lret
je
mov
aas
lock
arpl
mov
mov
xor
inc
test
rcr
xchg
imul
lods
cs
mov
mov
inc
cmp
enter
jmp
cmp
in
jecxz
data16
nop
mov
cmp
jae
jecxz
pop
fmul
xchg
cmp
fcmovb
mov
fists
jnp
inc
popf
out
xor
out
adc
mov
repnz
xchg
mov
xor
adc
repnz
or
lret
scas
in
insl
push
gs
jno
cmp
icebp
addb
and
je
and
push
fcoms
or
xor
jge
add
rolb
lret
ljmp
int3
mov
push
jle
das
xor
ljmp
aas
shll
sub
mov
push
movl
cmpsl
sub
or
lret
ret
add
loop
xchg
pop
inc
cmp
mov
push
test
fildl
inc
in
pusha
push
cmp
test
jno
repnz
add
mov
adc
int3
fimull
inc
mov
adc
pop
cmp
or
or
xchg
stos
adc
sbb
fmull
push
lret
test
jmp
scas
call
dec
push
cmc
xchg
or
mov
adc
cwtl
loopne
cmp
cltd
jp
jmp
dec
mov
popa
cwtl
je
jb
lahf
sub
daa
repnz
std
jge
icebp
in
sarl
pop
hlt
jle
cmp
adcl
shrb
sub
jl
mov
popf
pop
stos
popa
adc
int
stos
int3
or
adc
fwait
inc
inc
cmp
rolb
shll
sub
fdivrs
test
push
sub
cmpsl
rcll
xorb
aam
test
push
push
cld
jl
lods
mov
lret
dec
pusha
fbstp
aam
jae
add
int3
cmovb
or
dec
add
pop
imul
iret
cmp
gs
push
aas
mov
cmc
mov
xchg
stos
mov
cwtl
adc
insl
notl
push
addb
mov
imul
out
cmp
sahf
mov
pop
les
pop
rorb
call
shlb
stos
in
outsl
test
push
pop
pop
adc
pop
sbb
inc
sbbl
mov
jno
movsl
rcr
pusha
push
gs
in
sbb
clc
fcoml
adc
arpl
dec
jecxz
aam
loopne
iret
adc
jp
jb
xor
sti
jge
test
cmpsb
cltd
jae
cmp
xchg
sti
xor
sub
jnp
fs
js
adc
mov
push
sbb
push
lock
xchg
stc
jae
sub
insb
outsb
cmpsl
pop
xor
adc
cs
aaa
jb
scas
and
imul
cltd
and
push
aad
js
xchg
pop
sub
push
fdivl
push
push
mov
pop
mov
aaa
adc
outsb
push
out
push
pushf
mov
add
add
cmp
mov
adc
mov
mov
imul
fdivrs
mov
add
push
loop
test
add
mov
scas
std
icebp
mov
in
mov
mov
sub
enter
std
adc
pop
lret
mov
xor
push
mov
call
adc
push
inc
cmp
and
sbb
sub
xor
and
ljmp
xchg
jns
lds
rorb
ja
mov
out
jo
shlb
flds
addb
mov
mov
xchg
in
nop
idiv
jle
les
pop
adc
insb
movsl
xchg
push
test
int3
mov
adc
fwait
lret
cmc
lahf
dec
je
mov
sub
rcrl
repnz
fnstenv
iret
rolb
fadds
fcompl
fistpl
adc
pop
mov
pusha
cmp
ja
dec
fsubl
cmc
or
gs
outsb
pop
jmp
aam
fistpll
jp
gs
inc
pop
fwait
sub
xor
mov
ffreep
pop
iret
pusha
cli
add
add
test
mov
scas
or
fdivl
xor
sub
sti
mov
fcmovne
fadds
jecxz
clc
ljmp
sbb
lret
jae
mov
lret
in
xchg
push
loopne,pt
stos
push
es
gs
or
sbb
fidivrs
xor
mov
sub
xchg
xchg
jae
das
repnz
pop
add
sbb
stos
xor
sbb
adc
popf
imul
mov
jne
dec
push
leave
xor
add
ljmp
mov
pop
in
jmp
pop
adc
icebp
adc
in
jp
mov
scas
lret
sbb
shr
sbb
and
icebp
and
scas
pop
scas
push
or
aaa
lret
outsl
adc
push
mov
and
imul
addr16
ljmp
shrb
fsubrp
cmpsl
popf
lds
sub
js
lods
pop
jmp
xchg
fists
mov
mov
and
movsb
xchg
lcall
jns
mov
test
pop
mov
out
mov
es
xchg
xor
cmp
jo
cmp
out
arpl
pop
out
mov
dec
lds
lods
jnp
ds
in
mov
aad
inc
pop
lds
rsm
fiaddl
jns
xchg
add
push
push
dec
xchg
inc
xor
pop
pop
rcrl
push
sub
mov
int3
mov
jl
push
adc
xor
and
les
fmul
in
mov
call
inc
xor
sbb
push
and
aam
insb
fisttps
push
in
out
aaa
pusha
push
les
jnp
pop
insl
cmp
fs
js
and
les
or
push
ja
mov
push
test
or
shll
xchg
push
cltd
pop
fadd
sbbl
and
aam
outsl
inc
cltd
pop
mov
or
and
jno
addr16
xchg
repz
mov
cmp
rorl
jp
fs
mov
lods
pop
std
pushf
mov
test
push
cwtl
adc
xchg
add
pop
push
jne
cmp
lcall
icebp
xchg
sub
cmp
mov
arpl
or
lret
adc
and
sbb
sbbl
sub
push
ficoml
lods
std
in
mov
cmp
adc
xor
xor
fistpll
jp
out
into
enter
push
lods
inc
in
jae
push
xor
cmpsb
jl
xor
pop
addr16
icebp
lahf
int
lock
xchg
push
outsl
repnz
stos
iret
dec
aas
xor
pop
sub
jp
sti
stos
aad
daa
mov
mov
sti
gs
fs
int
mov
fdivr
jg
and
hlt
push
aaa
jmp
jne
scas
imul
add
or
divl
jne
inc
sarl
mov
mov
adc
movsb
test
in
or
sbb
sbb
mul
cwtl
ret
clc
test
cs
jnp
pop
movsb
test
mov
xor
decl
hlt
pop
popa
cmp
mulb
scas
inc
aam
mov
popa
in
mov
insl
popa
push
jp
std
addr16
cli
jp
out
inc
ljmp
xor
xchg
push
pop
sarl
xor
test
lock
pusha
sbb
cmp
adc
enter
push
clc
int3
insb
dec
add
adc
data16
xor
lds
mov
add
jle
mov
insb
inc
test
jno
dec
and
cmp
in
icebp
ja
push
cmp
and
inc
dec
add
mov
lods
lcall
sbb
fidivs
divb
ja
jl
cwtl
mov
lahf
and
xor
cmc
mov
mov
sub
stos
imul
add
cli
mov
cmp
faddl
cmp
ffreep
jns
cwtl
enter
std
sbbb
jns
adc
movsb
cmp
shl
je
inc
repz
test
jle
cli
outsb
pop
fwait
mov
pop
pop
sahf
fcomip
pop
pop
push
xchg
jns
mov
pop
popa
lret
cmp
fldcw
push
test
bound
xchg
loop
xor
popf
cmp
fdivrs
int
mov
jb
stc
fistpll
aas
mov
cmpsb
int3
jns
xchg
adc
push
stc
xchg
mov
lea
enter
or
movsb
stos
sub
xchg
sub
xchg
add
pop
in
jo
pop
jle
lods
xor
cmp
and
inc
lcall
hlt
dec
jmp
ficompl
cmp
rcl
imul
mov
jle
add
fdivr
mov
call
xchg
add
xchg
dec
inc
or
cmp
outsb
push
mov
loop
xor
stos
std
fdivl
lcall
mov
add
hlt
pushf
lret
sahf
lods
es
lahf
lods
dec
adc
aaa
sti
jo
jle
js
test
jecxz
pop
mov
testb
jmp
adc
sub
sub
icebp
rcrb
add
out
loop
ss
insb
push
mov
jnp
movsb
stos
mov
xchg
pop
cmp
sub
int
mov
xor
jns
push
in
inc
push
shll
fcmovbe
cmp
sub
mov
push
jp
filds
popa
repnz
fldt
fs
lods
fiaddl
jmp
std
xor
test
icebp
mov
sbb
das
ljmp
xchg
push
daa
ljmp
insb
jae
lahf
mov
test
pop
lcall
adc
test
pop
lds
mov
aas
bound
xchg
xchg
inc
jae
or
mov
ja
inc
and
addr16
xlat
lods
xor
add
cmc
pop
dec
out
sahf
mov
inc
movsb
lret
cmp
inc
enter
cmp
or
xlat
aaa
push
jne
fists
imul
pop
mov
add
cmpsb
incl
nop
jns
push
jo
sbb
sahf
out
jae
in
or
sbb
push
mov
pop
mov
sbb
inc
or
lods
lods
jmp
xchg
dec
xlat
mov
imul
xor
filds
xchg
jmp
dec
jmp
xor
lcall
xor
push
insb
mov
shl
daa
std
mov
pop
jp
cmpsb
mov
insb
pop
sbb
jns
xor
shrb
xchg
scas
ds
subb
popa
nop
pop
and
in
ret
push
lods
popa
andl
int
ss
pop
out
add
clc
shr
shr
repz
into
adc
jns
jle
push
inc
mov
bound
xor
inc
out
mov
lds
pop
pop
xorl
dec
push
into
cmpsl
jg
iret
popa
imul
mov
push
and
cmp
and
mov
push
push
sbb
mov
adc
lahf
sbbl
xchg
fisttpl
xchg
arpl
in
mov
test
test
or
cmp
frstor
lcall
mov
jge
jb
ret
push
scas
ffree
movsb
cmpsb
fldenv
repnz
fisubl
rclb
dec
loope
loop
xchg
cmp
test
add
add
aad
mov
or
add
std
sub
push
jne
fidivrl
stc
xchg
mov
mov
int
insl
jnp
fadds
sar
xchg
mov
mov
dec
push
dec
fbstp
outsb
ja
filds
push
dec
add
cmp
sub
add
mov
jnp
dec
push
daa
push
xchg
xchg
and
into
jge
out
push
fdivs
push
cmp
dec
xor
fmull
or
xchg
jge
sub
pop
fcmovne
lret
out
or
push
mov
pop
inc
pusha
mov
push
decb
pmuludq
fisubs
lods
dec
xchg
test
insl
inc
jle
sar
jne
jecxz
xchg
adc
pop
add
es
xor
add
lret
push
ror
popa
pop
js
aaa
push
sar
jbe
sub
mov
mov
add
mov
std
clc
sub
push
fwait
xchg
or
sub
push
or
fnstsw
jns
lahf
sbb
xor
cli
xchg
cmpsl
sbb
add
xchg
movsl
jecxz
fsubl
dec
dec
js
jnp
cmp
testl
std
pop
pop
scas
scas
sub
fwait
mov
and
fucom
sbb
mov
mov
jb
es
jbe
add
sahf
mov
push
mov
mov
dec
or
lahf
pop
mov
cmp
movsl
imul
icebp
and
cltd
mov
mov
cwtl
mov
rol
adc
in
xchg
mov
cli
pushf
shr
push
es
inc
add
dec
sbb
cmpsl
sbb
in
cs
dec
cmp
and
out
mov
ret
lcall
icebp
mov
sub
push
in
cmpb
addb
dec
add
dec
fisubrl
stc
push
jp
push
sub
fdivrl
or
scas
or
imul
icebp
mov
jmp
xchg
sbb
mov
mov
loopne
adc
insl
cmp
xor
xchg
cmp
jae
pop
insb
pop
loope
fmull
xor
mov
or
cmp
fiadds
pusha
jns
loop
push
xor
or
mov
push
jb
mov
cld
out
mov
sarl
fwait
xlat
jg
sub
add
test
aas
pop
mov
xchg
or
fcomip
es
and
rcll
mov
inc
out
cmc
push
xchg
mov
sbb
cmc
lret
mov
hlt
mov
jge
clc
jae
rcl
test
push
jno
xchg
mov
adc
aad
icebp
sti
jno
or
div
pop
dec
inc
sub
inc
sub
rcll
test
mov
addb
hlt
mov
xorl
shl
outsl
xorl
test
andl
sub
in
jge
cmp
pushaw
mov
inc
and
push
loopne
ljmp
jo
sbb
scas
movsl
mov
mov
mulb
addl
mov
inc
mov
or
push
test
jnp
jp
jl
add
cmpsb
loop
jge
mov
clc
cmp
mov
push
sub
scas
mov
js
mov
shrb
adcb
push
mov
mov
test
sub
sbb
cmpsl
push
imul
pop
dec
or
scas
repz
test
repnz
sbb
pop
into
jne
adc
mov
mov
mov
pusha
fsubs
sbbb
ljmp
outsb
sbb
js
negl
pop
repnz
push
fsts
lea
jg
iret
dec
sbb
int3
icebp
imul
sub
pop
iret
jb
inc
call
aad
test
sbb
cmp
mov
sbb
cltd
out
adc
loopne
scas
xor
jmp
in
add
lahf
push
xchg
inc
movswl
fisubl
fldl
cmc
xor
daa
int
aas
imul
adc
aas
jb
cmpsb
scas
xchg
call
out
clc
in
dec
out
sarb
push
adc
dec
add
inc
lods
mov
sub
into
xchg
and
into
pop
or
test
ds
in
push
fildll
mov
push
lahf
push
xor
insb
xor
popa
pop
fistpl
das
out
sbb
ret
sbb
lret
fsubrs
enter
add
xchg
pop
bound
pop
add
call
enter
adcb
clc
outsl
and
inc
add
sbb
insb
nop
ret
repnz
push
adc
mov
sbb
fiadds
js
sahf
dec
mov
shl
scas
mov
cmovs
or
mov
lock
mov
pop
mov
push
mov
loop
out
into
add
and
xor
out
fcoms
mov
cmp
adc
mov
filds
clc
jg
int3
push
adc
cli
jno
mov
imul
enter
jb
loop
inc
cmp
jp
jae
jecxz
insl
gs
adc
pop
xchg
gs
popf
je
inc
pop
mov
sbb
mov
adc
sti
mov
pop
inc
mov
loopne
jnp
or
loopne
mov
inc
sub
stos
add
pop
lret
in
sbbb
idivb
lods
shr
or
js
mov
movsl
testb
call
pusha
jno
ja
out
mov
shl
enter
dec
gs
pop
fwait
ss
adc
cwtl
dec
nop
push
push
inc
inc
pusha
nop
rolb
cmp
aaa
push
pop
aad
or
fidivrl
dec
icebp
mov
pop
pop
mov
test
out
mov
sub
cli
fwait
popf
ds
mov
jns
fwait
mov
icebp
xor
xchg
nop
xchg
jp
pop
stc
add
lret
jae
dec
jle
lea
rorb
pop
pop
push
push
ret
ret
mov
mov
ret
lods
sbb
mov
push
fcoms
in
or
sbb
loop
bound
or
popf
nop
je
repz
jmp
jns
jl
pop
sub
shrl
sbb
dec
pop
mov
imul
loope
and
xor
pop
mov
xor
adc
js
call
loop
stos
fcomi
dec
lods
es
adc
adc
loop
add
negb
sbb
das
scas
loop
outsb
lahf
dec
insl
cwtl
mov
enter
cmpsb
mov
js
jmp
leave
mov
fcmovnu
and
push
mov
xor
dec
scas
sub
jo
aam
out
mov
in
aas
iret
aas
js
inc
sub
daa
aam
sub
xor
aaa
mulb
inc
jp
leave
push
mov
cmpsl
sbb
add
pop
loope
xlat
cs
sbb
mov
inc
lcall
push
pop
iret
lods
push
sbb
add
cli
orb
shlb
mov
adc
pop
pop
in
adc
adc
sbb
dec
gs
xchg
dec
shl
ljmp
sti
divl
add
dec
lock
mov
lcall
xor
aam
aad
dec
jecxz
aam
mov
mov
pop
outsb
add
add
dec
inc
lcall
fstpl
adc
pop
loopne
cli
call
out
mov
add
pop
mov
push
test
xor
dec
test
add
mov
aad
mov
jp
xchg
lcall
and
outsb
mov
and
aad
arpl
sub
add
ret
sub
cmp
dec
rclb
ret
loop
les
mov
jnp
mov
in
fucomp
xchg
loopne
push
outsb
mov
sub
inc
fucomi
lret
movsl
test
cmp
pop
es
sub
sbb
cmp
jl
es
dec
dec
cmp
ret
mov
adc
adc
and
jle
or
pop
jnp
cmp
imul
negl
iret
dec
cmp
out
sbb
cmp
subb
data16
fst
cmp
fistl
xor
ret
jle
jo
or
cs
fildll
dec
mov
ljmp
js
jmp
mov
sbb
fiaddl
aas
inc
xor
jle
xor
pusha
aad
popf
cltd
pop
mov
jnp
mov
xor
sbbl
lods
sbbb
cltd
sub
jmp
test
scas
mov
pop
push
frstpm(287
fcmovbe
ds
ja
dec
lock
movsb
xor
shr
sbb
sbb
push
dec
cmc
popa
lds
aam
pop
rcr
fmul
and
shlb
jge
dec
sub
ss
push
push
mov
sbb
repz
inc
jmp
subl
insb
cmp
xor
or
out
adc
inc
lods
mov
sub
push
mov
testl
mov
cs
and
cmpsl
and
xchg
daa
outsl
dec
mov
mov
inc
push
xchg
add
mov
inc
popa
fidivs
mov
scas
mov
inc
pop
addr16
pop
mov
mov
and
cmp
iret
dec
jnp
add
icebp
addr16
or
mov
sub
outsl
push
aad
movsl
push
push
and
push
sub
cmp
or
adc
leave
jne
fidivrs
mov
push
or
out
shlb
mov
repz
or
or
dec
rcr
or
orl
cwtl
dec
cmpsb
lds
stc
inc
cmovs
ja
arpl
sub
or
shrb
push
jnp
int
sub
cmp
lea
mov
fcompl
loop
ss
pop
jns
fldenv
scas
push
adc
filds
rol
int
sub
sahf
push
adc
push
jge
repz
mov
in
sbb
push
pop
cwtl
xchg
jae
adc
cmpsb
sub
in
mov
or
mov
xorb
cmpsl
stos
inc
mov
popa
je
mov
cmp
mov
mov
push
enter
xor
test
ljmp
dec
gs
mov
insb
lcall
sub
pop
ljmp
iret
bound
addr16
or
pusha
sti
insb
pop
jp
inc
inc
cmp
adc
lods
jge
adc
ja
lods
sahf
mov
pop
add
or
lods
into
pop
addl
ds
les
repnz
xor
mov
popf
sub
xor
fxam
sbb
pop
into
imul
out
lahf
push
dec
or
inc
aad
mov
cs
pop
cwtl
lahf
mov
in
movsl
sbb
and
clc
data16
ljmp
out
popf
fidivs
out
inc
pushf
cs
inc
repnz
add
movsl
and
add
xchg
inc
pop
pushf
ja
insb
mov
ret
xor
sbbb
lds
inc
int3
ret
cmp
mov
les
mov
outsl
adc
pop
inc
test
jb
lahf
pop
sub
lds
adc
in
faddl
jne
mov
push
dec
push
cmp
xor
push
lret
sbb
lret
insl
outsl
add
aam
jmp
pop
sbb
or
cmpsb
push
jge
add
rolb
lea
dec
jno
jmp
or
or
inc
jg
js
mov
or
in
js
adc
ret
int
icebp
xchg
subl
pop
ret
ds
adc
daa
xchg
out
fstpl
imul
jb
mov
pusha
lahf
in
cmp
push
test
lret
inc
lods
sub
cmp
xor
add
rcrb
addr16
mov
mov
dec
push
lahf
adc
mov
leave
mov
jle
jb
xor
cltd
or
nop
rcrb
mov
xor
xor
movsb
mov
jne
and
xchg
xchg
pop
xor
add
or
add
cmpsl
mov
sti
decb
fwait
push
mov
lds
popf
repnz
fidivl
aad
mov
add
xchg
jmp
cmp
mov
cmp
test
xchg
xor
fdivrl
and
mov
test
cmpsl
sub
cmp
lret
movsl
jns
aaa
loopne
xchg
pop
nop
xor
adc
push
mov
std
xor
push
sbb
xor
cmpsl
dec
sbb
mov
push
xor
insl
outsb
xlat
fimuls
sbb
fsubrs
je
lahf
push
frstor
mov
inc
ret
mov
jmp
or
lods
cltd
pop
xchg
lods
or
fs
sbb
imul
lahf
cmp
scas
xchg
ds
sbb
xchg
dec
or
mov
scas
mov
nop
test
adc
push
imul
sub
insl
jne
dec
push
mov
add
jno
xor
fidivl
and
add
push
jb
add
enter
insl
test
leave
adcb
clc
pop
pop
push
loop
shlb
adc
pop
ret
mov
cmp
repnz
cmp
cs
xchg
sub
xchg
lcall
mov
aas
adc
xchg
add
fmuls
pop
push
in
daa
push
sub
cmp
js
add
in
sub
sub
testb
or
cs
ficoml
ljmp
in
push
int3
cmp
push
das
xchg
mov
fcmovb
inc
loope
push
std
pop
inc
jb
mov
daa
int3
cs
aam
mov
xchg
inc
popf
cmp
fisubrs
call
adc
or
adc
fldl
dec
rcl
cmp
fdivr
adc
mov
pop
add
mov
and
sbb
mov
fldcw
lods
adc
and
leave
dec
repz
cli
jmp
and
call
lods
adc
cmpsl
sub
jmp
and
test
loop
fcoms
fstpl
clc
dec
mov
shlb
idivb
jo
shl
dec
dec
pop
xor
pop
call
dec
test
lds
nop
into
fdivr
mov
pop
xchg
push
adc
or
cld
push
movsb
push
adc
jae
mov
insb
es
jne
outsb
leave
mov
pop
dec
out
or
test
fwait
inc
fldenv
jo
cld
mov
push
in
lret
js
mov
aad
sbb
sub
popa
pop
ljmp
xchg
addr16
movsl
jmp
pop
dec
mov
lahf
test
add
push
cltd
outsl
adc
push
mov
or
jmp
les
ret
dec
or
mov
inc
add
gs
js
pop
jae
inc
mov
pop
out
test
and
clc
bound
mov
psubq
inc
int3
and
arpl
jle
jbe
mov
push
scas
repnz
mov
or
fstl
je
push
in
pop
call
add
pop
orb
xchg
sti
mov
icebp
push
pop
mov
int3
mov
jb
xor
popa
mov
mov
into
or
arpl
enter
scas
mov
ljmp
fs
adc
test
pushf
fdivs
and
imul
adc
add
aam
add
fldcw
cmp
mov
clc
bound
sti
dec
jbe
jge
jg
sbb
pusha
call
insb
sub
mov
pushf
mov
inc
shrb
mov
int
insb
fmull
mov
jle
rorl
icebp
mov
imul
mov
sub
outsl
std
sub
sti
cmp
sub
pop
ds
mov
push
mov
loopne
shll
push
add
sub
pop
mov
stos
cmc
nop
pop
pop
movsl
mov
push
into
adcb
jp
jo
mov
inc
pop
fnsave
mov
mov
lock
stos
fwait
and
xor
xorb
adc
inc
jne
pop
xchg
pop
push
fildl
jl
loop
mov
mov
movsl
sub
xchg
mov
push
repnz
xchg
dec
mov
mov
test
in
mov
xchg
in
and
jg
imul
ljmp
aad
js
mov
js
cmp
popf
out
xchg
and
repz
jp
mov
fdivrs
test
or
test
lock
xor
jb
fildll
rol
in
addl
mov
jne
jge
jb
lds
les
outsl
jbe
mov
cmp
jnp
mov
lret
fcoml
lahf
mov
out
les
dec
xchg
daa
popf
jmp
jge
or
inc
aam
jg
push
cltd
fwait
or
int3
ret
xor
cmp
mov
pop
repz
inc
imul
rcr
xor
pop
stos
call
dec
std
shrb
push
add
lods
shrl
push
xorl
stos
push
test
cmp
xchg
push
mov
xchg
xor
cli
adc
mov
lahf
mov
mov
inc
mov
add
rorl
jle
aam
fwait
inc
push
lds
imul
mov
sar
mov
adc
mov
test
call
sahf
dec
shrb
into
popa
sti
mov
int
sbb
cmp
jge
cmpl
lahf
pop
into
imul
mov
fildll
cmp
mov
inc
jge
push
sbb
lea
add
mov
sbb
aaa
push
mov
push
out
int3
inc
rcl
stos
xor
or
daa
mov
stos
dec
jb
jb
ret
mov
or
jne
sub
and
mov
xchg
icebp
sarl
out
mov
add
lahf
aad
lret
mov
out
cmp
and
and
push
fcoml
subb
testl
sub
mov
push
add
lea
sub
push
jne
outsb
loop
pop
icebp
or
mov
mov
and
jae
fs
xchg
jne
addr16
lcall
add
nop
mov
cmp
xchg
lods
adc
sti
movsl
mov
and
testl
mov
icebp
popf
loope
inc
lea
add
mov
sub
and
mov
xchg
shll
mov
dec
aas
dec
push
fdivl
dec
sub
pop
aas
dec
out
jmp
test
dec
or
lods
mov
lahf
fstps
fsubl
outsb
jo
xor
inc
in
rcll
or
push
push
mov
fisttpll
pop
inc
dec
or
ret
imul
lods
leave
adc
je
pop
cmp
sub
inc
or
js
cmp
movsb
mov
sti
inc
ffreep
inc
dec
dec
inc
add
ss
shl
scas
push
into
sub
fists
imul
xchg
std
and
xor
inc
lcall
cltd
es
ja
int
fwait
add
cmp
lock
int3
pop
and
mov
add
fsubr
mov
pop
pop
pop
mov
cmc
xchg
pop
in
popf
dec
xchg
lret
add
outsb
cs
xor
scas
je
mov
imul
jg
cmp
adc
add
xchg
xlat
fstpt
pop
push
mov
out
shrl
lock
test
stos
in
cli
push
dec
rorl
insb
mov
jmp
mov
int
jp
and
push
mov
push
push
xchg
shrb
mov
rcrl
mov
inc
mov
in
and
xchg
daa
jae
push
rcll
add
loope
sbb
jecxz
lret
jle
aad
dec
aaa
out
or
dec
daa
pop
mov
xor
jmp
repnz
mov
mov
mov
jbe
push
mov
in
and
in
into
int3
jbe
sbb
shlb
and
clc
dec
shl
adc
xlat
pop
daa
mov
lods
cwtl
sub
dec
in
jb
mov
xchg
pop
add
inc
imul
or
cld
mov
jns
test
arpl
sub
aad
push
scas
sub
lcall
loope
mov
lods
mov
xchg
and
rolb
shll
scas
xlat
sbb
cmp
mov
cli
cld
pop
jp
inc
jns
repz
cld
push
ror
pop
mov
dec
int
out
ret
aas
mov
sahf
hlt
jl
aaa
fdivrl
sbb
stos
jp
sub
xchg
loop
pop
js
fnsave
scas
js
loop
xchg
lds
sub
imulb
jb
in
jb
and
lods
ror
sbb
rcll
enter
or
mov
rol
adc
stos
cmpsl
xor
push
repnz
add
daa
icebp
pop
adc
push
imull
ss
hlt
sar
mov
cli
arpl
or
stos
icebp
test
mov
sbb
loope
in
movsl
or
mov
adc
es
xchg
dec
ja
mov
dec
pop
push
xlat
out
or
add
ds
ljmp
jl
mov
jecxz
faddp
insb
pushf
dec
push
mov
xlat
jno
fwait
inc
addl
dec
mov
pop
lret
add
popa
pop
jecxz
dec
ljmp
and
loope
cmp
inc
fsts
in
push
das
mov
jl
mov
push
jmp
sbb
in
sub
jne
fiadds
mov
data16
sbb
dec
jo
test
in
add
adc
mov
dec
out
adc
fmul
scas
mov
insl
daa
inc
push
mov
sbb
xchg
call
ds
xor
jne
aas
popa
dec
jecxz
je
into
jecxz
lock
mov
mov
out
jae
into
inc
sub
dec
stos
jne
xor
xor
push
mov
push
mov
ret
sbb
pop
cmp
mov
and
cli
mov
add
sbb
stos
ljmp
fidivrs
sub
notb
pushf
jle
push
or
cmp
or
out
xor
inc
sbb
dec
jl
xor
cmpsb
in
inc
add
out
stos
addr16
inc
jb
loop
bound
cmp
rorl
fimull
sbb
add
mov
insl
adc
movb
test
or
and
sub
cld
or
and
add
pop
push
ret
in
inc
stc
popf
mov
aas
stos
jl
sub
adc
sbb
dec
pop
inc
imul
mov
fld1
mov
xchg
out
push
imul
fwait
xchg
ss
cmpsb
or
jp
xor
sub
add
imul
cmp
mov
jle
or
lcall
xorl
shl
out
stos
int
out
js
inc
sbb
push
push
pop
mov
push
mov
popa
out
inc
fists
les
push
cmp
dec
pop
outsl
out
test
jno
push
jae
jge
loope
adc
popa
incb
or
and
cmpb
and
repz
sbb
shrb
cmp
daa
mov
fisubrs
loop
xlat
test
int
xor
fidivrs
xchg
pop
lds
inc
or
push
shll
sub
mov
inc
and
and
les
out
iret
mov
arpl
clc
jno
xor
decl
cmpsl
and
popa
mov
xchg
ret
ret
or
nop
dec
repnz
cmp
mov
cmpsb
sub
es
cld
filds
test
adc
pushf
call
xchg
lock
adc
xchg
push
xor
fnstenv
inc
fcomip
push
mov
lea
mov
ljmp
inc
mov
into
push
dec
add
fiaddl
fwait
adc
fs
fists
cltd
into
lock
or
push
in
or
test
sbbl
stos
flds
test
mov
insb
mov
and
xor
jb
mov
ret
cmpsb
mov
dec
or
pusha
pop
fdivl
movsb
mov
insl
cmc
hlt
or
in
adcb
and
xchg
test
pop
and
cltd
loop
cmp
lea
mov
arpl
xor
push
popf
dec
jo
subb
xchg
push
fdivs
mov
sar
add
pop
mov
mov
js
jp
push
xor
mov
int3
int
mov
jp
out
das
push
or
ret
cltd
lock
lods
sbb
and
fldcw
mov
roll
pop
pop
in
mov
scas
xchg
pop
inc
icebp
les
mov
mov
pop
rcl
orl
inc
icebp
stc
sub
pop
outsl
faddl
in
inc
imul
sti
add
bound
lds
inc
push
in
adc
in
aaa
push
xchg
aad
inc
mov
adc
mov
jl
pushf
fnsave
jg
mov
xlat
xchg
inc
xchg
sbb
ljmp
fiaddl
movsb
call
or
sub
mov
or
addr16
test
xlat
cmp
sub
xor
clc
icebp
test
inc
ret
std
adc
data16
push
pop
mov
mov
lcall
mov
shrl
mov
inc
jecxz
dec
mov
jns
lcall
pushf
mov
push
js
inc
push
sbb
sub
xor
cmp
lret
sub
icebp
xlat
repz
sarb
ss
popa
les
dec
mov
ret
jo
fidivl
push
dec
mov
test
negb
addr16
rorb
add
js
divb
dec
int3
jo
jbe
mov
jl
pop
sbb
je
lret
fstl
cmpb
push
pop
aas
xor
inc
push
mov
cmc
and
xchg
mov
cwtl
inc
fsts
rorl
data16
bound
sahf
ljmp
fidivrs
stos
sub
out
or
jecxz
rcr
in
loope
sub
sub
push
std
or
and
dec
je
or
inc
inc
sbb
stc
fmul
fisttpll
jle
pop
pop
lods
aam
shll
add
clc
jbe
mov
data16
stos
out
cmpsb
push
repz
imul
sbb
mov
ss
or
jge
pop
pop
mov
orl
xchg
cmp
call
popf
pop
insl
xchg
dec
cltd
mov
shll
and
jmp
outsl
pop
or
fwait
xchg
push
idivb
push
xor
ret
sub
es
data16
bound
insb
xlat
push
ffreep
mov
and
icebp
mov
movsl
sti
fldl
das
add
in
lock
enter
mov
jmp
ljmp
jne
cld
or
jo
iret
cmpsb
xchg
iret
xorl
int3
bound
add
mov
mov
xor
fistps
cltd
xor
mov
daa
hlt
pop
outsb
or
stos
pop
xor
sub
pop
lea
scas
popf
outsb
mov
jge
fnstenv
es
aaa
clc
sahf
bswap
mov
arpl
gs
push
jnp
out
or
mov
out
ret
out
mov
cmp
lds
and
cld
fisubl
jmp
mov
cmp
test
imul
xchg
cmp
mov
test
adc
add
pop
js
jl
cld
push
add
inc
test
mov
jnp
test
mov
adc
mov
jg
ret
aam
gs
les
fld
sub
insl
rolb
jo
jmp
inc
push
outsb
sahf
lods
fs
dec
mov
pop
mov
pop
add
nop
inc
xor
adcl
gs
and
jl
ljmp
leave
test
outsl
pop
fidivl
cwtl
cmp
jg
pop
pop
mov
add
mov
ja
push
cmpsl
mov
adc
adc
int3
xor
hlt
sbb
jno,pt
xchg
jno
popf
mov
das
ret
pslld
in
adc
lds
loop
fisttpll
add
lret
inc
jnp
jp
ss
std
rcrl
test
rcll
testl
sbb
out
loop
cmp
add
fstp
pop
lahf
adc
cld
mov
xor
lret
sbb
imul
dec
add
push
cmp
fmull
enter
cltd
sbb
cld
cld
sbb
dec
test
cmpsb
or
push
xchg
add
xchg
or
cmpsb
lahf
lds
clc
aam
rorb
push
leave
or
stc
sarb
icebp
or
mov
in
js
shl
xchg
cmp
inc
and
push
add
xor
jnp
mov
jae
shll
xorl
test
push
add
or
mov
repz
pop
out
adc
imul
fdivr
subb
push
and
fldenv
and
cmc
test
cmp
int3
dec
sub
cmp
mov
push
bound
xor
cli
repnz
iret
pop
into
or
push
rorl
and
jle
jmp
mov
inc
rcl
mov
xor
lret
popf
jno
adc
and
outsb
cmc
aas
lret
dec
dec
jo
inc
adc
loope
in
xlat
or
shrl
inc
cmpb
add
sarb
inc
add
insb
rorl
mov
pop
pusha
or
xchg
out
or
negb
adcl
add
cmp
push
stc
mov
push
push
lahf
or
lea
sbb
cmp
arpl
mov
mov
scas
arpl
ljmp
ss
mov
mov
xchg
je
mov
sbb
mov
call
add
xor
rorl
push
push
in
or
xor
push
popf
ret
cmp
sbb
shrl
push
inc
push
add
sbb
stos
mov
repz
or
enter
jb
rolb
push
xchg
js
push
jns
jp
or
and
addr16
cs
inc
loope
aas
inc
testb
lods
test
mov
inc
repnz
xchg
repnz
push
sbb
mov
call
cmpl
xchg
filds
pop
aad
jo
fs
mov
shrl
jp
addb
or
stos
inc
addr16
xor
repz
sub
jns
aam
jne
lret
mov
push
xchg
push
test
cmp
rep
out
pop
out
popl
in
mov
inc
xchg
sbb
mov
mov
fcmovb
ret
out
fidivs
mov
fwait
and
adc
cs
imul
call
popa
lret
add
push
js
or
andb
push
inc
pop
ja
scas
int
stos
pop
ficoml
mov
daa
pop
jl
sbb
movsl
jo
outsl
out
pop
xlat
cmp
lahf
pop
mov
dec
mov
mov
inc
call
and
push
outsb
jns
rorb
mov
or
cmovg
sbb
or
adc
and
in
sub
push
mov
nop
sub
add
enter
sarb
pop
inc
ret
std
xor
or
pop
or
push
aad
adc
sub
cld
inc
dec
negb
loopne
xor
aaa
daa
mov
xlat
xlat
pop
mov
cs
xlat
loopne
xchg
push
test
mov
push
jmp
jno
mov
stc
push
aas
cwtl
add
push
call
adc
cmp
push
push
popf
jecxz
jo
push
inc
or
in
arpl
sarl
add
mov
pop
cltd
ficomps
iret
out
lcall
fwait
mov
cmpsb
inc
and
dec
repnz
lret
cli
mov
pusha
adc
mov
cmp
daa
mov
inc
mov
pusha
sbb
jbe
cmpsl
insb
loop
pop
mov
add
enter
mov
std
shll
sub
xchg
inc
cmp
shlb
mov
mov
mov
imul
shr
jae
inc
pop
scas
xchg
cmp
ss
rcrl
adc
add
insl
insb
test
jle
or
mov
adc
subb
bound
or
push
push
iret
jns
lock
adc
adc
mov
mov
and
movsl
rcrl
mov
mov
xchg
mov
lret
lret
jnp
sbb
lods
ror
stc
js
adc
shll
push
rol
lret
inc
fdivrs
and
push
ds
sar
cmp
adc
jp
ja
fs
repnz
into
or
xchg
pusha
dec
stos
xor
enter
dec
andl
push
aas
insb
mov
hlt
jmp
xchg
jns
push
js
pop
xor
cmp
xchg
imul
jle
outsb
push
dec
xchg
cmc
inc
ret
pusha
inc
xor
cwtl
bound
cmp
outsb
je
or
test
inc
cmp
cld
mov
mov
pop
mov
nop
into
inc
cld
mov
sub
xlat
and
rcrl
jecxz
hlt
jne
inc
push
mov
imul
cltd
cmp
xchg
hlt
pusha
mov
lea
xlat
mov
mov
dec
cwtl
sub
in
popa
ss
sub
aam
adcb
roll
call
or
lcall
add
adc
jno
xor
jno
xor
xchg
lret
xchg
mov
test
jl
cld
scas
sbb
ficompl
inc
and
or
jne
js
jle
adc
mov
in
scas
mov
push
out
cmp
shll
push
xorb
in
lods
cltd
in
sbb
mov
popa
xchg
dec
cmp
cltd
shll
push
or
cmpsl
cmp
adcl
popa
add
enter
scas
mov
subb
fnstenv
push
in
mov
push
mov
pop
sbb
sub
xor
add
in
je
scas
imul
mov
lret
rorl
mov
xor
inc
jae
fists
roll
xchg
pop
rclb
daa
push
mov
pop
and
lret
jecxz
cmp
or
push
testb
stc
shll
dec
and
add
mov
fdivl
aas
enter
iret
add
or
jge
push
data16
insl
cwtl
sub
mov
loop
les
sbb
in
xor
aam
sub
fcmovnb
cli
adc
push
les
out
test
and
iret
sbb
in
loop
or
addr16
cmpsl
imul
cmpsl
mov
mov
and
daa
xchg
dec
arpl
sub
xor
bswap
adc
push
fldt
cmp
and
fidivs
push
test
out
jl
cmp
push
sub
enter
mov
push
pop
xchg
lahf
repz
push
iret
loope
pop
jno
addr16
jge
pop
mov
mov
rsm
in
fdiv
in
push
add
int3
imulb
sbb
mov
jno
mov
and
xchg
rclb
sub
mov
test
xchg
in
fs
aas
test
jns
push
sbb
push
cli
dec
dec
xor
or
pop
xchg
push
lahf
jnp
mov
xlat
rclb
xlat
push
sub
mov
xor
out
or
cltd
jno
aaa
push
mov
jno
lods
lock
mov
rcll
aad
pusha
jecxz
pop
push
movsl
sub
inc
ficoms
adc
xchg
sarl
aas
outsl
xchg
adc
into
mov
jge
mov
pop
fs
fdiv
fcoml
mov
scas
push
xchg
sub
jo
data16
push
cmp
pop
pop
mov
dec
jmp
clc
insl
mov
movsl
sub
jbe
repz
xor
push
dec
sub
fldl
es
out
dec
jo
sbb
pop
pop
inc
xchg
enter
mov
push
rcrl
xchg
test
gs
ljmp
pop
mov
fnsave
aas
pop
sub
cmc
std
das
ja
push
adc
mov
outsb
dec
mov
push
fistpl
mov
adc
jnp
rorl
popf
sub
popl
fidivrl
das
push
push
mov
iret
jnp
push
add
fwait
pop
outsb
pop
or
in
int3
loope
push
pop
xor
pop
lcall
and
mov
inc
adc
dec
inc
or
jb
sbb
ljmp
cmp
andb
dec
jmp
sub
test
xor
icebp
loope
mov
lret
cmp
movsl
loope
in
jnp
jg
ss
and
div
fs
das
sbb
inc
sarl
stos
xor
andps
call
cwtl
in
outsb
inc
cmp
fnstsw
jbe
mov
mov
add
xchg
adc
jmp
mov
sbb
mov
data16
pop
sbb
add
fnsave
mov
iret
addb
stc
cmp
imul
push
and
cs
jnp
fucomi
stc
fmulp
jno
ja
dec
jb
mov
mov
daa
add
and
mov
mov
sarb
daa
std
enter
xor
jge
sbb
add
add
jo
mov
sub
cmp
add
fwait
loopne
jnp
inc
adc
xchg
mov
ret
push
gs
pop
lret
shl
lods
cmp
mov
mov
out
bound
test
shll
pushf
mov
or
lock
add
pop
scas
shlb
mov
sub
rorb
cmpsl
lds
call
ret
xchg
jmp
dec
adcl
nop
pushf
into
sbb
sarl
xor
add
mov
in
and
xor
shrb
test
sub
fwait
pop
or
fs
movsl
sbb
xchg
dec
inc
adc
inc
sahf
xor
fsubr
lea
xor
push
mov
rcrb
xlat
popa
divl
ljmp
xchg
aad
jmp
adc
adc
stc
jnp
mov
aaa
fstps
stos
incl
inc
jg
jp
popf
sarb
aas
mov
jnp
leave
jo
dec
pop
ja
test
jp
ljmp
lcall
in
push
out
scas
and
pop
jo
adc
fmull
mov
adc
cmp
jmp
aam
sbb
je
push
adc
dec
mov
add
iret
js
in
jbe
fildl
das
cwtl
mov
bound
pop
push
mov
lret
inc
jg
and
push
fbstp
iret
xchg
xor
jne
std
mov
nop
nop
out
mov
pop
cwtl
inc
sbb
shl
mov
insb
inc
add
mov
test
mov
popf
fwait
sub
push
imul
cltd
xchg
mov
and
lret
jns
leave
mov
fs
fldl
jae
aas
jecxz
dec
mov
stos
xchg
fs
movsb
xchg
xchg
fnstcw
and
and
xlat
les
leave
or
pop
sti
push
int
cmpb
std
jmp
iret
pop
jmp
xor
aad
das
cmpsl
xor
hlt
mov
jne
cmc
pop
add
lock
xchg
cltd
scas
push
mov
dec
cmp
adc
out
adc
in
decb
xor
cmpsb
popf
sti
hlt
nop
add
jo
xor
and
pop
mov
cli
mov
lret
or
lds
movsl
fcmovb
dec
stc
sar
decb
cmpsb
das
ds
clc
jne
and
xor
inc
aaa
data16
cli
bound
jmp
sbb
add
shlb
ret
pop
int
filds
out
add
gs
mov
mov
cwtl
lcall
adc
pop
iret
std
daa
lods
jb
xlat
adc
and
addr16
sbb
arpl
push
pop
jg
mov
mov
jno
adc
dec
jecxz
jno
push
insb
dec
pop
or
adc
dec
xorb
xor
sbb
loop
push
mov
adc
loope
inc
popf
xchg
push
cld
nop
dec
dec
mov
gs
mov
sbb
push
test
jne
out
or
cmp
test
xchg
int3
add
pop
and
pop
dec
stc
fwait
push
loopne
jecxz
xor
repnz
add
icebp
call
decb
xchg
inc
xchg
imul
sbb
adc
and
add
es
cmc
cmp
fildll
divb
add
jle
add
cld
xorl
dec
push
pushf
daa
ss
jne
adc
lcall
push
adc
jae
or
mov
in
xor
cmp
mov
lahf
fistps
xchg
hlt
jmp
cmp
mov
loopne
jne
fdivrl
mov
xlat
or
aas
cmc
mov
call
cmc
sbb
sub
jge
jns
sti
je
lods
push
jge
subb
and
sbb
pop
xor
aaa
xchg
fsubp
dec
pop
inc
mov
mov
in
pop
pop
pop
ja
dec
xlat
dec
xlat
sbb
jb
push
cmp
mov
inc
jns
sahf
scas
stos
movsl
xchg
xor
xchg
xor
mulb
jecxz
jecxz
movsl
insl
insl
push
xor
rclb
dec
dec
sub
ja
push
lahf
and
aas
jmp
xor
pop
add
fcomps
popa
lcall
movsl
in
das
shll
adc
mov
ds
cld
fadd
aad
or
stc
lret
dec
mov
dec
fldt
mov
mov
adc
xor
mov
shll
sahf
outsl
ds
outsb
xor
aaa
or
and
test
adc
arpl
repz
aas
cmc
xchg
xchg
adc
mov
aas
cmp
pop
sahf
dec
sub
or
jno
testb
pop
and
inc
or
sbb
pop
pop
pop
pusha
add
jecxz
xor
jo
cmpsb
pushf
jns
xor
lock
popf
test
ficoms
mov
sar
adc
mov
dec
or
adc
daa
mov
les
in
imul
mov
pop
jbe
sahf
fdivrs
lock
xchg
shrb
popf
cmc
sar
fisttpll
out
cs
std
dec
pop
inc
push
lahf
and
and
cmpsl
push
ja
cmpsb
loopne
int3
jge
lahf
jle
repz
mull
cmpsl
movnti
pop
xor
adc
test
pop
addr16
dec
cli
scas
cmpsb
push
shll
les
inc
je
xor
and
jg
loope
push
adc
inc
iret
repz
cmp
push
in
push
sarl
jae
enter
adc
push
out
rep
into
mov
fadds
sahf
loop
or
xor
inc
outsb
lret
xor
leave
inc
pop
cmp
pushl
pop
push
dec
and
arpl
xchg
stc
call
inc
pop
jmp
lcall
cmc
shll
mov
cmp
push
mov
test
aaa
mov
xchg
pop
pop
pop
stos
inc
addr16
push
cmp
add
push
mov
xor
add
std
rorl
mov
and
in
inc
mov
cmp
jb
and
sbb
sub
or
pop
xchg
cmp
xchg
pop
subl
testb
cmp
mov
shlb
push
stos
cs
movsb
lds
mov
dec
dec
jge
adc
sahf
adc
and
repnz
xor
mov
push
repz
fiadds
mov
jo
mov
aam
jae
push
xchg
xchg
push
lds
loop
inc
add
ret
push
xor
rclb
xor
outsb
addr16
xchg
inc
sbb
mov
or
and
cli
push
mov
stc
cmpsb
mov
jmp
int3
and
test
movsl
stos
sbb
adc
mov
mov
outsb
das
pop
cltd
push
pusha
mov
dec
sti
fst
addr16
fldenv
test
inc
aas
lock
insb
or
int3
sahf
cmp
mov
dec
jg
inc
sti
sbb
cmp
jge
leave
dec
and
daa
push
adc
jns
cli
sarb
jmp
cmp
hlt
test
xor
jge
xlat
pop
mov
xor
xor
xor
pop
push
je
lods
aam
mov
mov
lss
and
mov
movsb
mov
imul
dec
outsl
xor
ss
cmc
out
mov
jl
mull
popf
pop
int
add
push
out
add
mov
cmp
mov
sub
mov
dec
adc
pop
push
add
adc
adc
mov
jne
mov
ret
test
lret
stos
push
jle
pop
ret
repnz
push
arpl
imulb
lret
imul
popa
subl
jns
inc
movsl
call
sub
movsb
adc
mov
inc
cmp
xor
sbb
ret
jno
clc
pop
pop
xchg
cmp
mov
repz
or
inc
jnp
xchg
cmp
jge
outsl
pop
iretw
into
out
adc
sbb
int
mov
inc
mov
push
inc
jo
ss
fisubrl
pop
xor
loopne
jmp
aaa
pop
mov
xor
jmp
shll
mov
push
ds
adc
xor
mov
rorl
repnz
pop
out
popf
incb
cmp
aad
sbb
lret
push
repnz
lods
sahf
scas
lock
repnz
les
push
shlb
cli
ss
cltd
scas
test
gs
add
mov
push
imul
pushf
int
shlb
fsubrl
imul
sub
and
pop
mov
mov
mov
loopne
out
push
and
sub
and
iret
sbb
hlt
nop
jno
cmp
fcoml
add
fstpt
mov
xchg
add
inc
enter
jecxz
mov
movsb
inc
fs
cltd
xchg
xchg
adc
loope
sti
xor
cld
mov
xchg
in
mov
les
sub
jle
push
jle
sub
ss
adc
into
out
test
mov
push
lock
mov
testb
icebp
adc
mov
adc
fsubrl
cmp
sub
xchg
in
xor
push
sub
out
xchg
les
push
inc
xor
cmp
xor
xchg
mov
jns
xchg
lock
repnz
sarb
sub
fldt
addr16
aaa
xor
xchg
xor
cmpsl
loop
pop
aad
push
cmp
dec
xchg
rcll
sbb
sbb
mov
fwait
mov
cmc
ljmp
push
cmp
into
ss
test
sub
aad
xchg
inc
inc
fwait
lock
clc
push
cmp
mov
fld
adc
sub
inc
daa
out
push
stos
mov
fsts
jg
in
push
insl
push
jnp
sub
push
cmp
loop
push
jge
mov
inc
inc
scas
rcr
sahf
adc
sub
jmp
ret
mov
push
push
mov
sub
lods
cmpsl
jmp
and
ljmp
adc
sub
insl
imul
lds
mov
arpl
mov
jge
in
pop
sbb
ficompl
int
in
add
sub
jnp
pop
sbb
xchg
arpl
push
sbb
cs
or
pushf
mov
xlat
sbb
pop
mov
sbb
push
popa
pop
inc
in
jno
xchg
xor
mov
mov
inc
scas
add
sbb
aad
jl
or
sti
inc
adc
sub
inc
sbb
daa
and
xor
adc
outsl
or
repz
push
leave
call
add
in
out
fucomip
xchg
adcl
sti
fnstsw
dec
sub
pop
fidivrl
mov
lock
add
cmpsb
insb
mov
fs
nop
sbb
xor
data16
and
enter
adc
mov
fidivrl
aam
mov
sbb
aaa
insb
push
cld
push
mov
repnz
cli
icebp
ss
pop
jne
nop
insb
adc
stos
push
jmp
or
mov
xlat
xchg
dec
bound
jns
aam
jge
jmp
pop
dec
and
addl
cmpl
jg
jbe
les
pop
inc
js
scas
mov
mov
jo
in
jp
rcll
xchg
sarb
clc
dec
or
push
mov
mov
ljmp
mov
bound
pop
daa
in
jp
xor
sti
sub
jnp
sahf
ret
pusha
hlt
mov
mov
int3
or
fbstp
loop
iret
or
mov
call
scas
arpl
push
jecxz
sbb
int3
leave
stos
push
ljmp
scas
sti
aaa
inc
cld
cmp
shr
pop
in
sbb
leave
xchg
mov
test
std
xor
add
sti
push
sub
xchg
push
imul
pop
sub
stc
sarb
sahf
ss
dec
ss
cmp
sbb
inc
dec
dec
push
jle
addr16
in
leave
lret
sbb
sbb
mov
leave
in
push
mov
mov
js
xlat
dec
fcomip
and
out
jg
jb
push
outsl
mov
jge
pusha
aas
mov
rol
outsl
punpcklwd
dec
and
adc
push
icebp
test
dec
mov
xchg
lret
cs
lcall
daa
sahf
sbbb
dec
push
lret
jne
and
cmc
mov
push
cmpl
cmp
repz
sub
inc
dec
cmpsb
mov
adc
fwait
adc
mov
fnstsw
pop
es
arpl
sub
pop
pushf
cwtl
stos
dec
loopne
imul
repz
sub
lret
sbb
lods
jp
xlat
dec
pop
push
pop
push
xlat
inc
test
inc
sbb
imul
cmp
bound
pop
dec
dec
shrl
les
adc
sbb
inc
clc
cld
loop
mov
pop
xchg
fmull
enter
in
stos
jle
inc
arpl
xchg
sub
nop
cmp
lods
fcoml
lods
into
or
sub
popf
pop
sarl
adc
mov
je
pop
mov
ljmp
jae
cmp
fistpll
xor
faddl
lahf
xchg
out
sbb
xor
in
pusha
jnp
ljmp
mov
jle
movsl
mov
out
pusha
testb
aas
inc
ds
stos
add
cmp
pop
stos
data16
mov
jle
mov
add
std
xchg
daa
mov
ds
xor
or
fbld
pop
lret
xor
jno
mov
or
dec
enter
xchg
js
pop
pusha
sub
enter
push
sub
mov
mov
push
aam
outsl
mov
stos
jge
leave
mov
pop
das
add
repnz
jo
jle
and
ljmp
jne
scas
ret
test
inc
gs
mov
cmp
inc
xor
std
mov
xor
in
int
and
out
mov
sub
call
sbb
cmpsl
cmpsb
scas
in
es
cmp
es
and
xchg
xlat
add
adc
jns
xor
data16
dec
or
ja
ja
adc
in
xchg
xchg
outsb
dec
dec
xor
frstor
sbb
fcmovbe
ljmp
popf
mov
adc
arpl
lods
sub
mov
scas
push
fnsave
mov
jb
xor
paddsb
push
adcb
loope
mov
addr16
and
lea
sbb
pop
sbb
push
rclb
orl
ja,pt
popa
iret
mov
mov
mov
shlb
xor
adc
and
popa
cmc
hlt
int
cltd
push
leave
idivb
sti
popf
hlt
or
pop
push
test
jnp
pop
movb
pop
inc
or
adc
cmp
testl
pop
int3
jmp
lea
fimull
add
add
cmp
jge
xchg
push
push
icebp
mov
jge
adc
lea
adc
leave
clc
fnstenv
inc
and
dec
fsts
xchg
mov
test
mov
push
xor
and
mov
sarb
jle
inc
pop
jp
scas
ret
sub
mov
lret
xchg
and
xchg
shlb
add
push
jmp
dec
mov
pusha
cwtl
inc
int3
jg
test
xchg
imul
cli
je
or
xchg
dec
int3
push
aaa
addl
in
testb
pop
adc
pusha
mov
dec
add
adc
inc
xchg
imul
mov
dec
neg
cmc
and
inc
push
pop
push
subb
dec
ja
mov
mov
mov
dec
add
mov
pop
out
cld
adc
sub
lret
cli
xchg
sarb
inc
es
xlat
jnp
ljmp
outsl
xchg
xchg
insl
cmpsb
cmpsb
cmc
into
cmp
xor
iret
jno
xchg
sub
push
push
cmpsb
aad
sub
xchg
daa
int
mov
lds
hlt
inc
call
sbb
or
mov
mov
dec
jmp
xor
inc
popa
ret
outsl
pushf
nop
jae
mov
or
mov
shll
iret
jl
imul
and
mov
jno
inc
pusha
hlt
mov
test
push
into
jo
popa
mov
cmpsb
xlat
fwait
movb
cmp
sub
test
mov
pop
stc
cmp
insb
xor
and
or
xchg
mov
jno
xchg
fsubl
add
pop
pop
rcrb
jb
jb
inc
imul
shl
xlat
test
insb
sti
cmp
lea
add
movsb
push
fstps
icebp
loope
das
jne
mov
mov
aad
cltd
nop
fstpl
pop
insw
push
inc
sbb
das
mov
inc
sahf
daa
mov
es
rol
xchg
mov
insl
dec
push
test
push
movsb
jle
or
adc
adc
clc
mov
ja
push
ret
les
test
push
adc
pop
sbbb
or
jb
mov
loope
jae
scas
scas
mulb
sub
fwait
cmp
call
adcb
lret
addr16
jl
stos
fists
add
mov
mov
jge
in
fisttpll
or
stos
inc
xlat
pusha
shlb
lahf
pop
jb
xor
inc
testb
test
dec
stos
les
xchg
test
and
adcb
addr16
pop
negl
clc
lods
jg
or
imul
in
fwait
sub
cmp
mov
adc
test
mov
in
sub
cmp
mull
sbb
int3
or
rorl
fcompl
insb
add
out
adc
ss
outsb
std
cmp
mov
xchg
xor
sub
xor
jne
dec
repz
out
in
xor
je
mov
dec
loope
sti
cwtl
jns
pop
shl
xor
or
insb
sbb
lock
stos
out
stos
scas
push
in
cmp
pop
sti
sahf
or
push
daa
mov
cmp
inc
hlt
push
lret
sub
xor
push
fnstcw
out
xchg
nop
jp
push
adc
sub
fcomip
pop
xor
lods
xlat
shll
pop
hlt
frstor
sbb
mov
icebp
mov
test
mov
aam
mov
rol
ficoms
mov
hlt
jmp
push
and
test
aad
clc
xor
pop
std
sbb
inc
sub
add
icebp
sbb
mov
dec
inc
sbb
stos
fs
jnp
in
mov
int3
pop
xor
in
sub
lret
ds
lret
push
mov
sub
scas
dec
inc
cmpsl
scas
xchg
lods
ljmp
fidivs
sti
inc
cli
xchg
mov
lret
xor
xlat
lock
inc
sbb
mov
and
sub
sbbl
mov
sbb
cmp
out
inc
xchg
or
mov
dec
inc
aam
xchg
pop
or
fistpll
stos
decl
mov
mov
dec
std
cs
xor
xchg
mov
xor
outsb
or
pop
mov
fsts
fildl
dec
imul
push
loop
cmpsl
mov
mov
mov
adc
pop
hlt
inc
cltd
adc
cli
fldt
stos
pop
pop
iret
test
inc
push
fwait
mov
mov
pop
cmp
in
xchg
fmull
mov
iret
and
cltd
into
xchg
cmp
pop
daa
cmc
scas
sarb
clc
sub
roll
push
in
pop
adc
fistpl
or
sarl
sbb
push
fadds
fadds
jb
cmp
xchg
mov
cwtl
fidivrl
aad
ds
mov
pop
sbb
dec
jnp
stc
in
loope
mov
shll
xchg
pop
dec
lcall
cwtl
or
enter
sbb
jb
pop
repz
mov
dec
ret
adc
push
sub
leave
or
add
xchg
or
dec
xchg
or
fcomi
mov
mov
mov
or
pop
cwtl
inc
push
sahf
mov
sbb
cmpsb
inc
adc
dec
gs
push
cmp
mov
lret
dec
mov
mov
pop
orl
les
mov
and
and
mov
add
dec
shll
ret
mulb
out
mov
fwait
in
xor
dec
lret
jge
jmp
xor
cmp
test
aas
addb
sub
mov
pushf
dec
or
fildll
mov
jmp
adc
mov
cwtl
shrl
movsl
add
push
fmul
rcrl
fsubrl
xchg
push
xchg
mov
mov
adc
out
sbb
xchg
insl
adc
sbb
sti
jle
ret
mov
add
or
outsb
lret
adc
cwtl
data16
scas
lea
xchg
fbld
push
dec
sbb
aaa
jns
mov
jo
pop
call
in
lret
test
mov
add
xchg
enter
popf
ss
jle
push
jae
rclb
pop
xchg
les
das
jns
movsl
fwait
psrld
push
mov
jnp
sbb
inc
fnsave
cmp
cmc
mov
bound
ljmp
and
arpl
mov
and
cmp
ret
mov
lcall
int
cmp
sbb
jbe
push
in
sub
fdivrs
or
mov
stos
in
inc
sti
je
std
inc
pushf
stos
cs
mov
fstpt
test
clc
sub
rol
mov
dec
pushf
fwait
lcall
imul
jo
cmpsb
stos
adc
cmp
rclb
inc
add
out
push
jecxz
mov
cwtl
xchg
aas
add
mov
pusha
push
addr16
sti
add
sbb
mov
lret
popa
and
sbb
adc
jge
inc
das
insl
pop
stc
rcrl
je
repnz
or
pop
jg
cmp
ds
mov
push
addr16
inc
jmp
cmp
cmp
sbb
out
push
inc
int3
dec
stc
pusha
ficoml
rclb
movsl
push
lea
mov
ret
pop
push
jb
out
mov
push
das
jo
add
push
xor
rorl
push
loop
fsubrs
dec
pop
push
adcb
cmp
mul
inc
mov
mov
adc
dec
pop
outsl
and
out
mov
sbb
hlt
sub
or
mov
inc
ljmp
imul
jae
les
or
fs
cld
jne
pop
or
mov
mov
jnp
adc
push
add
inc
iret
div
lock
mov
push
movsb
adc
dec
adc
mov
xchg
mov
or
addb
test
mov
mov
add
std
dec
int
cmp
ja
mov
xchg
es
mov
insb
add
addr16
adc
push
push
sbb
test
cmc
fs
ja
das
je
aas
dec
push
inc
push
mov
pop
dec
call
cli
cltd
push
or
ds
adc
std
xchg
inc
aas
pop
imul
shll
fidivrs
mov
insl
fistps
dec
outsl
jmp
and
cwtl
pop
push
pop
ficompl
mov
xor
pop
mov
sbb
push
aam
jecxz
inc
push
fildl
test
xchg
lock
in
xchg
leave
and
mov
jmp
sbb
cmpsl
push
jl
fcomi
pusha
adcb
and
push
enter
test
sbb
mov
jmp
fldl2t
lock
sbb
or
popf
andb
popf
lea
js
jp
js
cmp
outsl
in
and
in
sub
or
outsb
repnz
stos
imul
inc
js
inc
lret
pushf
enter
push
inc
je
xchg
sbb
pop
mov
test
mov
cmp
jno
aad
mov
xchg
cmp
jo
cld
dec
jl
icebp
inc
les
push
nop
sbb
xchg
mov
push
imul
jmp
mov
lea
sub
stos
shrl
les
aas
std
sbb
mov
sub
xchg
xorb
push
addr16
imul
in
jg
push
pcmpgtw
sbb
out
rcrl
dec
sub
ficoml
xor
fcoms
mov
and
jp
in
and
pop
ljmp
addr16
je
adc
mov
sti
or
mov
pop
and
stos
adc
sbb
mov
cmc
mov
or
pop
xor
lret
stos
or
push
inc
popa
mov
insb
sbb
jae
sbb
popa
pop
or
dec
push
decb
shrl
shl
aaa
imulb
pop
dec
cmp
stos
sbb
mov
sub
cmpsl
cs
jmp
xchg
aad
bound
and
xor
mov
adc
add
sub
scas
sbb
int3
fs
rol
xor
jns
lahf
or
xchg
jae
lods
pop
adc
shlb
cmp
mov
sub
xchg
and
dec
inc
pushl
mov
in
or
arpl
xchg
sbb
mov
mov
js
inc
loope
pusha
loope
push
push
cld
sbb
xchg
add
imul
leave
mov
jo
dec
jns
mov
dec
adc
sub
mov
push
cmpsl
cmp
loope
in
or
jne
jne
and
notl
imul
aam
push
mov
sub
sarb
out
and
mov
popf
jns
jle
jl
or
inc
push
sar
int
and
dec
pusha
je
fcmovnbe
imul
add
icebp
insl
mov
jae
popa
xchg
loopne
andb
mov
and
mov
lahf
dec
shlb
jecxz
sub
push
or
mov
lahf
mov
pop
mov
pop
cmpsl
or
add
xchg
inc
stos
pop
push
inc
add
bound
adc
outsl
flds
xchg
pop
cmpsl
ljmp
push
sub
pop
pop
fisttpl
mov
push
stos
fs
pop
mov
xchg
ds
jnp,pn
jb
adc
add
lahf
push
es
jno
jecxz
xor
lret
lahf
in
ret
mov
jbe
pop
scas
mov
dec
lea
insb
rcl
xchg
push
sahf
movsb
lret
jns
arpl
repz
pop
movsl
jle
outsb
xor
aaa
arpl
lsl
enter
ret
mov
sub
outsb
push
fldl
inc
and
and
pop
scas
xlat
sbb
cmc
pop
iret
out
scas
pushf
jge
shrb
fistpll
jmp
push
test
repz
xchg
xor
pop
faddp
push
jmp
push
xor
hlt
sbb
mov
add
pusha
sub
das
outsl
add
call
fs
sub
mov
imul
or
pop
mov
pop
xchg
mov
adc
int3
iret
out
lock
mov
test
nop
data16
xchg
daa
cmp
shlb
popa
sti
cli
nop
xchg
es
xchg
xchg
push
lret
mov
push
mov
in
pop
xchg
lea
movaps
flds
push
imul
in
inc
xchg
sbb
sbb
sub
scas
shrb
fwait
push
iret
mov
cmp
sub
pop
mov
add
or
decb
fidivrl
les
punpckldq
cmp
std
mov
mov
inc
fisttpl
cmp
iret
inc
mov
aad
mov
sub
push
shrb
lock
pop
popf
hlt
pop
push
mov
push
adc
jg
push
rolb
jmp
pusha
sbb
mov
mov
inc
push
xor
xor
jne
push
scas
push
jne
out
cmp
out
or
out
cmpsb
popf
adc
dec
push
icebp
ret
pop
dec
xorl
xor
pop
je
mov
in
sub
test
ja
ret
inc
mov
fcompl
jl
add
insl
adc
int3
sbb
das
cs
shr
lcall
dec
fs
mov
idivb
loope
aam
inc
cmc
ds
ja
enter
jnp
arpl
lock
imul
pop
popf
pop
mov
orl
xlat
dec
jns,pn
mov
loopne
in
imul
roll
xchg
dec
bound
add
inc
and
sahf
mov
xchg
cmc
jle
sub
push
inc
insl
test
pushf
mov
adcl
sub
mov
mov
or
negl
xor
rorl
rclb
js
pop
test
ret
sti
xchg
inc
jbe
imul
in
dec
repz
sbb
jb
ret
mov
lods
cmp
xchg
outsl
mov
fisubrl
dec
xor
leave
jno
mov
mov
rorb
das
mov
scas
mov
cmp
or
arpl
jb
repz
xor
lcall
adc
int3
sarb
mov
daa
or
push
ret
pop
cmpb
aad
add
mov
stc
pop
pop
bound
cmp
lret
out
jo
out
jmp
and
hlt
popa
sahf
xchg
aam
orl
add
add
aad
xor
addr16
sbb
sti
jge
mov
pop
push
jg
test
adc
outsb
lret
ret
jns
dec
out
push
arpl
sub
clc
sub
inc
sub
sahf
dec
adc
aad
or
inc
mov
ja
pop
mov
mov
lods
inc
xlat
push
lret
leave
ret
mov
hlt
and
mov
mov
xor
movsb
sarb
inc
out
inc
push
jle
jns
pop
mov
test
pop
jae
cmc
mov
fs
int
adc
loop
add
repz
mov
insl
fwait
loope
mov
icebp
cli
rclb
std
cmp
push
inc
mov
xchg
inc
sarl
mov
add
lcall
xchg
cmp
lock
and
repz
add
xor
lods
and
addr16
adc
mov
sbb
mov
jmp
cmp
jnp
push
push
pop
addl
insl
push
outsb
addr16
add
inc
cwtl
lods
push
sbb
ja
lahf
icebp
jmp
in
divl
sti
inc
push
cmp
repz
ret
daa
or
add
sbb
imul
push
shll
jo
xor
push
pop
or
add
cwtl
cld
ret
sub
movsl
ss
movsl
pop
call
jl
dec
mov
jecxz
testb
out
ret
notl
mov
mov
cltd
lcall
imul
cs
mov
xor
rolb
enter
mov
ljmp
idivl
loop
and
bound
stos
pop
cmp
xor
rclb
sbb
int3
shrb
nop
int
jnp
jl
inc
add
lret
fwait
pusha
js
rclb
loope
and
inc
xchg
test
enter
xor
sbb
jle,pn
cmpsl
xchg
pop
popf
xchg
out
pop
in
loopne
pop
and
gs
sub
call
lcall
lcall
jo
inc
sbbl
inc
jnp
outsb
push
hlt
cmp
mov
nop
cltd
mov
jmp
insb
xlat
xor
orl
fbstp
add
inc
clc
adc
add
shl
sbb
xchg
outsb
imul
insl
add
xchg
iret
xchg
cmp
ljmp
cmc
sub
mov
xchg
outsb
jne
xchg
cmc
addl
add
cmp
loopne
leave
mov
cmpsb
iret
jno
add
pushf
push
and
pop
fwait
daa
xor
lahf
pop
inc
pop
int
je
mov
inc
movsl
hlt
sbb
out
dec
xor
insb
shr
adc
mov
das
pop
out
jno
mov
mov
or
sbb
inc
inc
inc
inc
jnp
sbb
mov
ds
sbb
push
cwtl
lds
add
adc
mov
inc
pop
push
mov
repnz
in
or
cmp
mov
push
leave
incl
adc
mov
filds
cld
std
push
xchg
mov
aad
loope
daa
jl
jbe
sbb
ror
mov
cmp
sbb
mov
cld
xor
lea
or
std
xchg
mov
out
lock
incb
sbb
fidivl
mov
add
fisubl
inc
xor
in
scas
imul
mov
mov
inc
mov
jecxz
dec
xchg
ja
sub
add
dec
pop
mov
mov
mov
movsb
lret
xor
call
enter
dec
aam
add
test
dec
pop
mov
stos
test
mov
mov
sub
daa
mov
stos
fucomip
xchg
xchg
jb
jecxz
subl
jge
ss
jbe
inc
faddp
cmp
movsb
mulps
test
xor
sub
shlb
or
je
and
out
loop
pop
mov
mov
je
push
xor
gs
sbb
shr
mov
cltd
pop
jmp
push
ljmp
jb
js
cmpsl
cld
push
sbb
mov
inc
mov
xchg
movsb
lock
aas
add
pushf
pop
and
rol
mov
push
imul
mov
test
mov
pop
mov
and
int3
sbb
xlat
stc
mov
out
dec
and
in
sbb
mov
pop
push
sbb
rolb
adc
bound
mov
lcall
mov
leave
add
pop
xor
js
xlat
xchg
add
popf
out
xchg
lret
out
insl
std
add
xchg
pop
xchg
jb
fcomi
sbb
jge
fwait
cmp
fbstp
notl
aas
inc
and
cmpb
adcl
adc
testl
lock
jbe
dec
div
mov
jecxz
and
cmp
mov
pushf
mov
and
out
cmpsl
ret
jb
gs
ss
mov
sbb
scas
add
pop
push
add
or
xchg
add
js
pop
lret
test
into
pop
leave
push
imul
sahf
or
cmp
and
js
jge
pop
xchg
sbb
jge
xchg
daa
push
testl
cmc
jp
xchg
mov
scas
scas
push
ja
mov
push
mov
je
inc
imul
std
sbb
or
out
jae
rol
cwtl
pop
addr16
rcrl
adc
sub
lea
xchg
mov
sbb
cmpsb
or
cmpsb
js
jg
clc
in
jne
jmp
push
sbb
mov
pop
icebp
popf
shl
adc
mov
dec
mov
fucomp
xor
mov
mov
stc
jno
lea
test
jne
lods
js
inc
repz
pop
in
push
push
stos
mov
and
add
orl
mov
pop
ror
lcall
out
outsb
loope
mov
aaa
fisubs
loope
mov
xor
enter
hlt
push
mov
inc
jp
cmp
cmpl
bound
cltd
mov
mov
je
lods
xor
inc
dec
mov
add
xchg
mov
push
fcom
sbb
mov
mov
das
mov
cwtl
sub
adc
dec
push
sbbb
inc
jae
jnp
out
aam
sub
push
aad
in
push
lods
sub
or
cmpsb
xchg
repnz
lods
mov
or
fstp
lock
cmp
lods
movsb
inc
insl
ljmp
cwtl
out
inc
fsubs
fildll
and
and
aaa
dec
rorb
aad
xor
cmpl
lea
rcl
leave
pop
arpl
test
shl
sbb
dec
in
push
sbbb
inc
add
popa
add
or
cmpb
xor
xor
cli
mov
and
push
xor
xchg
mov
stc
or
mov
jbe
jecxz
gs
inc
pop
mov
push
mov
aam
aad
aad
cmc
mov
push
mov
in
dec
adcb
in
push
roll
mov
rcl
or
mov
pop
sub
adc
lret
rcrb
add
mov
cmc
and
call
ja
mov
jns
mov
dec
cli
test
scas
xlat
and
mov
inc
xor
push
outsl
repz
mov
add
cs
movsb
enter
js
push
cmp
sbb
and
mov
popa
mov
jmp
cmp
fmul
mov
mov
xor
or
int3
or
cmpsb
mov
sub
dec
sub
repz
bound
std
hlt
cmp
push
or
cmp
cmp
movsl
and
test
in
dec
and
adc
or
sbb
sahf
out
jmp
lcall
movsb
lret
inc
call
and
mov
adc
mov
pop
fstl
das
cld
push
mov
adc
inc
cmp
or
cmp
add
xchg
fwait
je
sbb
xchg
sub
aaa
outsb
pop
push
bound
addr16
inc
pop
mov
popf
sbb
fs
stos
movsb
pop
jge
xchg
dec
les
icebp
mov
add
pop
and
add
movsb
cmp
int
ret
xchg
xor
push
fwait
nop
insl
cmp
popa
xchg
mov
sbb
int3
jae
jl
xor
lea
xorl
xchg
push
insl
add
dec
in
sbb
sub
dec
cli
idiv
pusha
adc
xor
sub
das
pop
jae
je
jns
scas
and
xor
arpl
push
stc
push
call
adc
dec
cmc
mov
orb
xchg
es
ret
mov
xchg
inc
cmpl
dec
sbbl
or
mov
jmp
sahf
ja
bound
xor
mov
xor
cltd
imul
cs
or
ljmp
cmp
or
cltd
stc
aaa
push
enter
cwtl
push
ljmp
cmp
outsb
insb
mov
leave
mov
jl
mov
mov
add
xor
dec
pop
ror
fiadds
and
lcall
fwait
cwtl
leave
jecxz
sub
enter
xor
mov
ja
test
loop
jno
mov
xchg
xchg
repnz
push
mov
jle
adcb
std
out
push
sub
out
push
push
push
pop
shlb
ljmp
add
std
int
leave
into
jb
cmp
cltd
jae
sbb
jo
xchg
in
and
lock
in
push
mov
test
std
push
add
out
adc
push
lea
ret
pop
jae,pn
xor
pop
or
clc
loop
inc
int
sub
adc
or
pop
push
mov
cmp
and
enter
das
pop
shrl
sarb
ret
outsb
insb
mov
div
sub
ja
ja
shlb
dec
je
or
sbb
mov
in
push
icebp
jbe
jno
cmp
mov
and
fucomi
mov
inc
adc
cli
jae
xchg
xlat
push
push
adc
lods
test
cmp
sbbb
push
sub
xchg
cmc
mov
leave
out
cmp
mov
je
in
dec
xor
mov
mov
dec
cwtl
in
cmp
mov
outsb
or
test
outsl
mov
push
mov
mov
push
pop
ljmp
cmp
jbe
jecxz
aas
xor
loope
repz
test
cmp
imul
pop
push
fadds
pop
fildll
push
aaa
and
xchg
rol
or
xor
xchg
jb
fldenv
push
arpl
push
or
inc
mov
or
sub
mov
dec
cmp
icebp
jnp
fistpl
aaa
lods
xor
inc
test
pop
lahf
pushl
cmpsb
and
add
sub
dec
in
mov
ljmp
and
xor
ror
mov
stos
sub
scas
add
mov
fldenv
sbb
pushf
dec
inc
sub
inc
lods
ja
jg
cmp
daa
jmp
jb
mov
dec
xor
sbb
pusha
int
jecxz
icebp
jmp
cmp
mov
xchg
fstl
sub
test
cs
ds
and
sbb
adc
xor
add
data16
or
mov
js
aad
cli
lods
sub
sbb
push
or
out
insl
pop
xchg
push
mov
out
in
subl
push
lods
outsb
cmp
cmpsl
imul
mov
push
cltd
fldenv
push
mov
mov
xor
jp
icebp
movsb
cwtl
mov
xlat
jl
lods
sahf
dec
cmpsl
testb
adc
xchg
scas
mov
test
sub
test
ret
fmull
cltd
jge
and
ret
stc
jl
les
loopne
or
pusha
in
add
fisubrs
pop
in
cmp
mov
or
out
xor
jecxz
xchg
dec
add
xchg
sti
mov
shll
pop
arpl
mov
ljmp
scas
repz
andl
out
std
xchg
mov
pop
dec
les
xor
jno
cmp
mov
xchg
iret
mov
int
jbe
dec
pop
icebp
inc
inc
mov
adc
push
jo
inc
cmp
lods
and
or
sbb
gs
jmp
imulb
xor
dec
sqrtps
push
mov
cltd
pop
addr16
mov
cmp
xchg
mov
repz
adc
jp
mov
or
dec
int
cwtl
stos
in
js
jne
mov
sti
lods
inc
xchg
push
es
sti
jl
pusha
jge
push
adcb
jmp
mov
leave
mov
pop
inc
lahf
push
sub
loope
inc
imul
lock
and
adc
in
xor
into
push
push
popf
xchg
xchg
inc
cmpl
xor
pop
out
push
ret
ja
hlt
mov
push
movsb
add
pop
notb
in
push
inc
jmp
cmp
inc
lcall
mov
dec
not
mov
filds
push
sbb
aam
add
adc
inc
push
movsb
adcb
lcall
popa
fsubl
or
inc
aas
xor
imul
stc
gs
dec
loope
xchg
lods
aaa
add
xchg
in
pop
and
cmpsb
sub
sahf
int3
popf
xor
mov
stos
mov
clc
push
test
fimuls
and
sbb
cli
jl
mov
pushf
mov
pop
dec
repz
repnz
out
sub
xlat
pop
mov
cld
or
cmp
fs
pop
cli
les
shl
rorb
dec
fwait
add
cli
sub
add
jns
andl
add
je
sti
and
or
ljmp
loop
and
xor
bound
and
lahf
sub
xor
mov
movsl
push
mov
test
push
ljmp
out
pop
and
sub
sti
push
and
mov
ljmp
jno
sub
jmp
push
and
sbb
das
sarb
imul
es
stc
mov
lret
cmp
fists
and
andl
insb
sbb
bound
scas
jb
imul
pop
adc
and
xor
mov
test
xchg
xchg
fisttpll
lods
cmp
pop
inc
in
jno
pushf
jnp
dec
shrl
mov
lcall
jecxz
push
push
les
rorl
adcb
adc
push
xlat
jbe
adc
or
push
xor
ret
dec
add
push
pushf
and
popa
dec
nop
lahf
insb
lcall
sub
mov
dec
lods
jbe
es
std
sub
sti
sub
sbb
out
ss
inc
xor
sbb
inc
push
pop
clc
adc
pop
push
inc
pop
pop
and
mov
adc
xchg
aad
call
dec
stos
outsb
fsubrl
repz
push
mov
pop
and
and
inc
fsubs
cmpsb
xlat
push
and
lcall
mov
dec
lcall
add
cmpsl
pop
push
cmpsl
dec
cmc
and
iret
dec
cmp
lcall
push
mov
mov
lods
mov
test
sbb
cld
xor
mov
stos
fs
mov
out
adc
imul
cmp
push
fcmovnbe
roll
sub
js
cld
add
mov
lds
add
pop
filds
icebp
or
jmp
outsl
mov
js
out
mov
mov
rcll
sbb
xor
sbb
daa
leave
cmp
add
mov
in
ss
push
call
movsb
cmp
insb
icebp
pop
and
xor
cltd
pop
loop
repnz
int3
and
cwtl
push
push
sbb
mov
dec
fcmovnb
dec
and
sub
enter
cmc
jmp
adc
inc
bound
jo
or
repz
pop
stos
xchg
push
loope
stc
ja
mov
ja
lea
je
mov
mov
jle
push
xor
add
or
cmpsb
add
xchg
push
push
push
nop
inc
jmp
ret
sarl
dec
mov
cmpsl
xor
test
mov
xchg
bnd
mov
shlb
adc
xchg
test
nop
cmp
push
inc
push
cli
jg
loopne
mov
sarl
dec
scas
jbe
ror
fstpt
cmp
jge
or
adcl
sub
sbb
mov
pop
push
pop
adc
and
mov
sub
fsubrl
pop
push
cmpsl
fdiv
adc
jno
xor
cmp
mov
and
pop
cmp
inc
fnstcw
jmp
lods
dec
loope
jno
jp
fisttpl
nop
test
sahf
jnp
cmpsb
imul
je
xor
mov
push
dec
xor
inc
cmp
push
mov
pop
jmp
or
xchg
sub
divl
aad
mul
sub
out
lods
xor
gs
jbe
cmc
mov
ljmp
add
dec
ja
int3
pop
loop
pop
sahf
inc
or
gs
mov
addr16
jnp
and
shlb
jmp
push
and
or
cmp
xor
movsb
sub
adc
push
lods
xor
fs
cld
std
sub
xchg
pop
mov
push
pop
lcall
sbb
arpl
icebp
sub
pusha
icebp
adc
mov
pop
jb
mov
sbb
jmp
pop
fstl
inc
sti
jo
mov
repz
repnz
test
xlat
stos
push
js
daa
cmp
shl
adc
lret
gs
or
and
push
in
mov
stos
push
cs
jge
fisubrs
lret
out
arpl
mov
lods
jnp
adc
adc
jb
nop
xchg
xor
and
xchg
xor
movsl
mov
and
xor
adc
sbb
xchg
xlat
lcall
xor
jbe
adc
rol
dec
xchg
cmp
imul
das
adc
jl
iret
lea
int3
jmp
mov
mov
out
mov
sahf
jns
mov
mov
cmc
jmp
test
movsb
test
fmull
les
js
jo
dec
or
sub
es
cli
push
inc
sarb
add
leave
in
xchg
push
insl
pop
repnz
and
push
in
push
movsb
adc
roll
aas
push
or
inc
mov
push
and
or
divb
lds
push
adc
aam
popa
call
in
inc
sub
cmp
cmc
jmp
aad
xor
jg
fld1
add
andb
inc
inc
add
loop
inc
fnstenv
call
std
popf
or
adc
stos
dec
pusha
lods
leave
mov
lret
imul
xchg
and
mov
sbb
inc
aam
push
mov
sub
pop
addr16
data16
mov
jo
test
mov
xchg
and
pop
addl
push
push
mov
push
pop
shll
xchg
sbb
je
xchg
rorb
cmc
xor
inc
inc
test
lods
int3
push
xchg
jb
out
dec
push
mov
inc
mov
mov
sub
roll
mov
lret
out
shrb
sbb
stc
jg
sti
imul
cmp
sub
shlb
push
pop
adc
mov
xor
pushl
jp
into
repnz
jmp
xor
lret
jp
in
sti
sbb
icebp
dec
pop
push
xchg
aas
out
jno
inc
jge
xchg
lods
cmpsl
push
mov
xor
jb
call
scas
shll
pop
add
aad
xor
cli
dec
mov
dec
aam
pop
hlt
or
imul
icebp
push
stos
push
jo
xchg
jnp
repnz
inc
rcrb
push
dec
cmpb
addr16
dec
loopne
aad
sbb
mov
lahf
jl
inc
data16
lock
and
fcoml
lea
decl
inc
lret
sub
in
mov
mov
and
fisubs
test
adcb
mov
clc
jge
daa
adc
xchg
sub
sbb
xchg
insb
adc
je
in
or
sbb
test
push
int
ret
dec
and
filds
stc
add
pop
or
pextrw
popa
dec
xchg
sahf
xchg
test
mov
push
xchg
jns
dec
jno
add
and
pop
cmpsb
out
pop
aam
lret
sub
lcall
into
mov
dec
repz
xchg
push
lods
add
xchg
scas
enter
mov
aad
daa
aaa
jge
sbb
jno
sahf
fcom
and
into
xchg
dec
lods
stos
enter
inc
xlat
adc
jge
bound
jb
mov
shll
mov
bound
andb
dec
or
incb
and
icebp
push
dec
push
cld
or
add
add
mov
arpl
nop
sti
loop
roll
daa
adc
cmp
or
push
daa
imul
jmp
stc
shrl
push
sub
subb
andb
inc
ja
xor
sbb
or
dec
shlb
int3
scas
xchg
repz
mov
mov
sbb
ret
test
xchg
cltd
fmull
push
mov
popa
ficoms
pushf
lret
in
cmp
jecxz
das
icebp
push
jg
cmp
test
lahf
dec
mov
mov
mov
insl
js
ret
addr16
mov
ror
shrb
mov
xchg
jl
dec
out
or
inc
fdivp
inc
push
js
fdiv
int
test
nopl
sub
mov
cmp
xor
mov
cli
mov
cld
cmp
aas
pop
cmp
lret
jae
data16
cmpsb
and
fcomps
mov
ljmp
xchg
stos
jbe
cmp
aam
push
lret
imul
xchg
jmp
insl
fcom
lret
daa
xchg
nop
lahf
cs
jne
or
sti
shlb
mov
out
test
mov
repz
jae
pop
pop
int3
jl
dec
pop
jecxz
mov
pop
mov
cmp
lcall
fildl
push
inc
in
pop
mov
jmp
imul
push
stc
jnp
xor
inc
ja
sub
adc
mov
mov
sarb
lret
cmp
mov
sbb
pop
imul
out
mov
mov
pushf
or
rorl
test
mov
loope
mov
inc
ret
and
pop
and
xor
bound
hlt
adc
imul
mov
and
xor
sub
shl
sbb
add
push
jne
jge
lods
xorb
ror
loopne
sub
out
out
push
repz
sar
or
mov
testl
add
sbb
mov
mov
ja
sub
jl
jns
imul
xlat
xchg
fs
xchg
negb
fmull
push
jae
inc
dec
inc
fstps
shrl
xlat
shll
jo
notb
mov
inc
outsl
cmp
imul
int
xchg
xor
push
aaa
cmc
ss
and
roll
mov
lret
out
dec
ja
mov
les
pop
jae
or
sahf
cli
outsb
loope
iret
add
cmp
or
dec
cld
shrl
push
test
xor
inc
nop
or
xchg
rcll
jns
sub
aam
in
cs
into
int
leave
jmp
xor
lds
cltd
stos
or
test
pusha
test
jae
mov
mov
cmp
adc
jle
pusha
or
lret
cltd
mov
fidivs
roll
xchg
mov
fs
in
push
sub
jmp
cli
xchg
jp
sbb
repnz
movsb
dec
lret
cmp
mov
pop
sbb
push
cmp
icebp
push
push
lret
mov
movsl
ja
mov
and
mov
jno
sti
fstpt
es
xchg
std
jle
fcoml
std
and
stc
add
insl
lods
insb
jp
xchg
mov
cmpsb
xchg
xchg
lea
cmp
nop
popf
jb
aam
loop
mov
lock
dec
add
push
or
pop
and
pusha
mov
call
es
cwtl
dec
stos
mov
mov
xlat
testb
ljmp
test
loopne
icebp
or
stos
hlt
inc
shll
mov
cmpb
sub
sub
sahf
cs
pop
sub
out
test
je
out
or
test
sbb
xchg
repnz
mov
lahf
mov
ljmp
bound
cmp
in
mul
test
test
push
popf
cli
iret
aam
popa
int3
and
movsb
jge
loope
or
or
fsubs
nop
inc
push
sbb
add
adc
cmp
mov
dec
cmp
and
push
mov
cmpsb
push
insb
in
jle
dec
lahf
push
cwtl
ljmp
std
jmp
push
stc
insb
cmp
xchg
xchg
gs
jmp
repnz
jo
enterw
sahf
xor
inc
add
xchg
or
mov
mov
cmp
aad
fmull
pop
and
aaa
and
ret
add
or
dec
xor
leave
jbe
sbb
pop
push
dec
add
cmp
xchg
jmp
jmp
int3
and
mov
jle
andb
int3
adc
sub
fadd
push
mov
dec
sti
lods
aam
inc
dec
adc
and
and
xor
ret
xchg
and
push
mov
xchg
gs
daa
mov
sbb
sub
xchg
test
xor
adc
inc
sub
inc
lcall
enter
mov
and
mov
mov
pushf
jge
push
adc
pop
jl
dec
cmc
lds
popa
rol
frstor
pop
adc
outsb
mov
rol
sub
int
pusha
repnz
or
adc
xor
jecxz
jmp
and
adc
add
add
fldt
and
mov
mov
push
imul
jnp
push
sbb
cs
and
loope
dec
les
and
arpl
daa
ds
mov
cltd
add
int
int
imul
aad
jns
push
das
fcmovnu
inc
cmp
decl
lock
mov
mov
xor
xor
fidivs
fnsave
mov
xor
dec
push
push
jp
lahf
test
add
adc
aaa
in
mov
xchg
sub
rcrl
xor
mov
es
out
jmp
xchg
push
arpl
repnz
adc
dec
add
daa
stos
cli
or
jmp
test
mov
adc
add
dec
gs
and
sbbb
pushf
mov
mov
ret
sbb
enter
pop
mov
or
rcll
faddl
imul
xor
fistpl
xor
into
notb
ret
push
daa
movsl
xchg
jb
daa
test
inc
jo
mov
jecxz
sbb
lock
movsb
mov
je
push
jo
out
jmp
add
pop
fsubrs
aas
jo
inc
mov
xchg
mov
or
adc
or
mov
arpl
mov
orb
dec
subl
or
js
pushf
mov
push
mov
mov
lods
out
adc
mov
xor
pop
jge
fldl
cli
ficompl
cmp
jl
fdivs
imul
or
xchg
cmp
push
jbe
xchg
daa
cmp
arpl
cltd
jne
mov
mov
repnz
iret
push
mov
movsl
outsl
dec
es
inc
repnz
ret
xchg
pop
jb
push
lret
leave
cmp
in
sbb
lea
cli
mov
lock
jns
scas
in
cmp
xchg
mov
sbb
xchg
es
dec
cmp
jecxz
xlat
mov
fstps
bound
push
dec
arpl
jg
lods
sar
mov
shl
stc
movsb
xchg
xchg
push
add
sbb
rcr
je
int3
in
mov
cltd
das
cmc
sbb
clc
loope
xor
jmp
das
sub
rep
xchg
mov
xor
popl
mov
cmp
inc
add
inc
imulb
mov
sub
or
popf
jb
mov
mov
sbb
ret
scas
frstor
adc
mov
sbb
dec
outsl
fdivrl
bound
sub
andb
aaa
jo
cmc
shll
loop
mov
ss
push
rol
repnz
dec
pop
neg
test
mov
fsubs
cmpsl
aas
push
stc
sti
das
inc
add
add
test
orl
mov
loop
xchg
test
cmc
mov
subl
cmp
push
push
idivb
divl
add
aam
xor
xchg
jp
rolb
lret
aam
jbe
inc
push
push
shrl
pop
cli
pop
ret
push
loopne
loop
imul
es
es
pusha
test
rorb
addr16
adc
shlb
dec
dec
mov
insl
add
or
xchg
cli
or
loop
loope
iret
xchg
sbb
test
jno
lods
fcoms
test
pushf
inc
pop
scas
jecxz
xor
sbb
pop
cwtl
mov
movl
push
aam
das
repz
mov
enter
sub
add
push
adc
jmp
jns
add
inc
xchg
xchg
cld
stos
adc
jns
cmpsl
pop
insl
jg
sub
push
add
cmp
sbb
test
fneni(8087
in
idiv
loope
push
mov
pop
add
adcl
lahf
loopne
mov
mov
ret
jb
lods
popf
mov
cmpsb
stc
bound
mov
xlat
and
adc
in
arpl
hlt
rol
mov
repnz
cmp
sub
mov
fsubrl
pop
sbb
sub
mov
xor
nop
faddl
pop
test
cmc
rcl
imul
loope
jl
movsl
cmp
xchg
dec
dec
cwtl
iret
lea
fimull
mov
lret
pop
hlt
push
and
pop
xchg
adc
push
cmpsb
sbb
outsl
push
mov
inc
ljmp
cwtl
xchg
mov
push
andb
dec
imul
xchg
pop
mov
mov
add
jns
adc
lock
rol
and
push
cmp
mov
lods
add
ss
cwtl
push
inc
or
clc
dec
sub
addr16
mov
out
cmc
out
push
xchg
stc
push
pop
lock
inc
mov
shr
mov
mov
jle
push
mov
push
fidivs
cmpsb
outsl
cmp
mov
pop
push
js
addr16
push
iret
ror
xchg
outsl
es
icebp
and
repnz
hlt
inc
loope
bound
icebp
out
sbb
cmp
cli
mov
sbb
data16
hlt
orb
stos
jge
xchg
inc
pop
or
adc
jmp
cmp
add
movsl
mov
loop
cmpsb
cmpsb
jae
insl
and
sbb
adcb
push
je,pt
push
js
push
mov
fsubl
mov
dec
mov
minps
sbb
or
mov
push
leave
xor
pop
sti
ret
das
and
imul
pop
fbstp
mov
cmpsl
test
xor
xchg
scas
pop
mov
adc
dec
push
sbb
aas
scas
adc
and
jno
xchg
rcl
cmp
subl
adc
lahf
cli
jl
lret
mov
inc
rolb
xchg
mov
mov
xor
xor
push
xchg
in
dec
cli
cmpsl
mov
lock
push
push
mov
mov
pop
adc
sbb
ror
pop
jle
mov
inc
cmp
imul
mov
mov
lret
add
jecxz
and
out
in
shl
fistpl
xchg
loope
push
push
cmpl
fdivrl
cmpsb
repnz
stos
imul
sub
jbe
loopne
xor
xchg
fcoms
adc
jne
iret
cltd
adc
stos
mov
aas
mov
aaa
fdivl
iret
js
adc
pop
icebp
rorl
inc
out
lea
pop
lahf
xchg
dec
insb
pop
movsl
pop
orl
or
and
mov
lods
daa
cmp
jg
in
arpl
shlb
jo
dec
cmp
inc
sahf
push
out
pop
push
push
loopne
push
outsl
sub
loopne
je
add
ljmp
subb
push
gs
dec
imul
mov
cmpsb
shll
inc
lcall
push
sbb
and
mov
jl
or
lea
aad
dec
cwtl
or
shrb
clc
sbb
jnp
xorl
ljmp
std
inc
xchg
out
adc
xorb
test
add
pop
test
jnp
sahf
iret
mul
push
test
sti
arpl
mov
cmp
pop
lods
fwait
xorb
mov
jmp
mov
in
in
aaa
jo
push
mov
popf
shrl
mov
shrb
lahf
xor
std
cmp
pop
adc
out
cltd
in
push
aaa
ja
out
addr16
repz
jl
pushf
movsb
cmc
pop
or
cli
mov
mov
cmp
sub
inc
out
cmpsl
in
push
fsubl
ss
or
xchg
cltd
in
cmp
test
push
rolb
adcl
insb
in
mov
mov
sbb
in
lods
mov
cmp
je
cmpsl
repnz
mov
idiv
insb
mov
add
int3
jae
and
jo
push
pop
daa
popa
add
out
jbe
and
sub
mov
dec
lods
jnp
jmp
addr16
dec
push
out
mov
and
pop
pop
shll
mov
and
or
inc
sahf
popf
fsubp
js
xchg
push
jne
and
movsb
rcrl
mov
les
movsl
sub
clc
sti
cmp
push
ret
push
test
inc
xor
iret
cmpsl
mov
mov
xchg
pop
pusha
xchg
call
faddp
cmpl
dec
pop
inc
and
cmp
or
lods
sbb
mov
sbb
roll
xor
nop
lods
je
push
xchg
adc
roll
lahf
pop
popa
les
xchg
cld
push
or
test
scas
mov
mov
das
nop
lds
mov
lcall
fcomi
mov
cltd
xlat
and
xor
lcall
lods
shlb
cmp
sub
mov
cmc
lock
xor
test
icebp
mov
xor
xor
cmpb
push
add
clc
push
hlt
adc
push
aas
pop
add
or
fstps
adc
movsl
xor
cwtl
add
xchg
xchg
dec
fstpl
fsubrp
mov
sbb
sub
in
mov
aas
test
sti
jbe
insb
cmp
pop
jle
push
in
adc
scas
rcll
xchg
arpl
popf
repnz
xchg
popa
lods
mov
andb
dec
sbb
lret
fsubr
sub
shll
imul
mov
ja
test
mov
daa
pop
lahf
idivb
inc
mov
daa
popf
sbb
pop
mov
dec
or
popf
les
ficoms
inc
cld
adc
jmp
ja
jae
in
test
pop
mov
mov
repnz
and
in
jbe
jle
ret
xchg
out
jbe
data16
pop
es
iret
loop
and
js
push
adc
insl
int
jle
test
dec
xlat
and
or
out
mov
cmpsl
jp
popa
pop
out
add
arpl
inc
push
jle
into
xor
push
aad
mov
sti
int3
and
or
or
cmp
icebp
jbe
pop
into
loopne
sub
mov
jg
add
cmp
adc
gs
mull
cmpsl
fidivl
call
dec
dec
rcrb
xorl
and
es
fists
int
test
popa
mov
pushf
mov
cmpsb
scas
clc
inc
jg
leave
mov
xor
aam
xchg
mov
xchg
shll
inc
loopne
or
xchg
or
inc
cmp
orl
pop
xor
loop
mov
push
lcall
mov
cmpb
or
xchg
mov
pop
cmp
sbb
mov
xchg
gs
dec
mov
popa
movups
xchg
icebp
sbb
not
adc
pop
xor
sub
push
sub
xchg
rorl
or
popf
cmp
push
sub
sub
cmc
jp
pop
sti
cs
in
leave
sbb
jecxz
inc
sub
pushf
cmp
sbb
pop
pop
test
jns
movsb
imul
aaa
lods
loope
push
mov
cli
and
iret
and
jmp
ds
rcrb
or
out
adc
pop
inc
bound
int
or
adc
popa
add
mov
call
ret
push
mov
bound
inc
stos
js
or
out
in
ret
je
sub
pop
out
lret
icebp
mov
cmpsb
xchg
and
adc
cmp
mov
sbb
xchg
rcrl
ret
pusha
or
adc
sar
out
enter
inc
add
add
enter
xchg
cwtl
aam
push
or
jg
lahf
push
adc
loop
xchg
inc
cmpsb
shll
mov
inc
loope
ss
cmp
and
xchg
int
xor
test
arpl
push
clc
in
pop
imul
pop
sbb
out
clc
mov
bound
sbb
addb
stos
ljmp
loop
popf
jbe
xchg
xchg
pushf
xchg
add
clc
sbb
mov
or
inc
loop
inc
dec
mov
jns
xchg
cmp
out
jne
es
xlat
inc
or
test
in
jecxz
push
loope
ja
or
stc
mov
das
xor
jb
leave
mov
ss
cmp
mov
cmpsl
xchg
imul
leave
addr16
cmpsl
push
es
sbb
int3
push
add
pop
sub
or
outsb
mov
and
shll
pusha
imul
xchg
add
jmp
push
rcl
cwtl
and
enter
fisubrs
or
jl
lret
pop
xor
lock
mov
push
mov
jnp
xor
sub
add
xchg
cmp
repnz
mov
push
movsb
push
cltd
stc
lds
test
or
mov
mov
mov
xor
jbe
push
icebp
loop
std
popf
imul
push
inc
ret
outsl
pop
or
xchg
push
xchg
shrb
xor
push
aas
add
cmp
outsb
ret
xchg
icebp
rcl
je
add
push
adc
lods
xor
pop
insl
repz
mov
adc
xor
xchg
jecxz
cmpsl
test
loop
int
jle
rcrl
adc
pop
dec
xor
jo
mov
xchg
fisttpl
test
fldl
cltd
sahf
mov
rep
cmp
ret
pushl
pop
xchg
dec
xor
fnstsw
stos
out
ret
mov
jl
lds
in
push
and
pop
adc
repz
decl
hlt
mov
aaa
int3
fsubr
inc
mov
adc
xchg
jo
addl
inc
clc
inc
pop
pop
mov
dec
test
jmp
sbb
sbb
jecxz
jp
mov
xorb
push
int
push
outsb
sub
cs
push
jecxz
imul
pop
mov
incl
dec
adc
cmp
cld
popf
loopne
sbb
popf
adc
xchg
ja
fimull
sbb
pop
xor
sbb
xchg
inc
ja
repz
push
adc
lcall
dec
scas
scas
sti
icebp
jnp
pushf
push
cltd
aam
shrl
test
xchg
pop
lret
cmp
jo
jno
outsb
mov
sbb
cmp
push
outsb
ret
das
cld
daa
enter
pop
jno
outsl
add
mov
mov
pop
fisubs
scas
add
jno
aam
sbb
ficoml
mov
or
fsubrs
gs
jmp
mov
push
ret
adc
push
pop
rol
xchg
cmpsl
add
loop
nop
xchg
pop
mov
filds
pop
in
jge
adc
cmp
flds
xor
xchg
xor
scas
nop
into
mov
pop
sbb
mov
pusha
fwait
push
repnz
mov
sahf
cmp
movsl
cs
pop
jge
int
ds
cmpsb
push
decb
pop
push
out
lcall
notl
fdivr
mov
outsl
scas
es
daa
shl
test
jmp
and
out
mov
pop
cmp
test
ljmp
lock
mov
shlb
popf
push
cltd
inc
mov
xor
ds
test
push
mov
fidivs
in
push
std
aam
out
lret
push
movsb
outsb
jae
out
es
xor
mov
popf
lea
xchg
dec
cltd
cmp
jbe
adc
sub
adc
ret
mov
cli
sub
push
repz
mov
xchg
out
je
pusha
and
outsb
movsl
insl
lds
cmp
loop
push
lcall
stos
rorl
addr16
mov
jle
xor
aaa
aam
pop
ljmp
movsb
or
push
mov
mov
add
add
xor
popa
dec
adc
mov
sub
add
js
push
cmp
push
add
mov
xchg
cmp
jmp
mov
addr16
mov
mov
adc
cmp
fisubrs
out
xchg
pop
cld
sbb
ret
inc
sbb
pop
cmc
and
fs
js
inc
push
jae
ja
outsl
pop
insl
jo
test
es
lods
out
sbb
in
test
js
sbb
dec
mov
dec
jg
xchg
or
dec
leave
xlat
lret
xor
jns
and
sahf
in
sub
iret
subb
int3
icebp
outsb
data16
shlb
dec
sbb
scas
inc
ret
sbb
insb
dec
arpl
jmp
push
shlb
cmp
lret
jns
out
mov
jne
outsl
sti
cmp
test
jne
pusha
lahf
mov
pop
sahf
sub
gs
fbstp
or
mov
mov
mov
out
lahf
push
sbb
push
push
shlb
sub
inc
movsb
mov
test
dec
sub
stc
mov
pop
pop
stc
shrl
cld
or
add
xor
inc
inc
fmuls
dec
xlat
pop
xchg
scas
dec
mov
repz
sbbb
pop
fidivs
inc
imul
mov
adc
enter
lock
js
cwtl
in
jo
pushf
mov
mov
es
test
adc
jg
pop
arpl
cmpsb
shr
xor
pusha
fcmovnb
push
jno
adc
jns
mov
mov
xchg
ja
cwtl
cmpb
out
mov
fcmovnbe
add
out
mov
mov
push
mov
in
jbe
hlt
dec
xchg
pop
mov
outsl
inc
sub
mov
call
cmpsl
pushf
test
outsb
add
mov
nop
sbb
leave
rolb
int3
pop
inc
fdivp
add
idivl
test
lahf
fistpl
xchg
mov
jl
push
fs
xor
ret
dec
scas
sub
mov
or
push
mov
fists
out
xor
mov
adc
sti
inc
stos
adc
dec
adc
xor
jo,pn
fnstsw
jne
fnsave
mov
repnz
dec
jl
xor
roll
movsb
int3
sbb
inc
fs
out
gs
add
xchg
addr16
dec
or
sarb
cmpsb
push
jmp
popf
cmp
fcomps
aad
mov
cs
call
or
fldl
movsl
pop
fsubl
in
popf
lahf
jg
shlb
xorb
xchg
inc
fsubs
inc
cli
call
clc
nop
out
mov
jg
and
cmp
or
sub
mov
add
ljmp
xchg
outsb
mov
and
lret
push
outsb
out
adc
ja
jge
pushf
inc
dec
sub
lods
add
dec
adcl
leave
shlb
stos
and
shl
dec
jg
push
ret
jecxz
mov
rorb
cmp
lods
adc
xchg
add
sub
xchg
leave
lcall
xor
add
test
lcall
popa
or
lcall
push
lods
adc
mov
xor
sub
rcrl
push
jl
repz
jnp
adc
pushf
push
xor
pop
iret
sub
loop
pop
loope
jbe,pn
jge
and
and
das
arpl
add
mov
push
out
pop
inc
push
lods
gs
or
jns
orl
data16
mov
pop
pop
dec
dec
leave
fcmovu
fs
cmpsl
out
iret
add
xorb
cwtl
lods
cli
cwtl
xchg
xorb
jp
inc
pop
bound
push
movsb
lret
push
lret
or
xchg
pop
push
in
pushf
add
addr16
adc
sub
fdivl
cmpsb
push
daa
inc
outsb
xor
or
lret
xor
iret
jno
mov
cmc
lds
aad
movsl
cmpsl
pop
fcmovu
dec
mov
dec
mov
mov
aas
or
sub
lds
add
inc
ds
fisttps
enter
pop
mov
insb
je
push
mov
out
adc
xchg
inc
jne
jae
imul
int3
or
add
mov
ret
pusha
push
loop
pop
test
sub
xchg
pop
mov
cmp
js
and
test
jecxz
idivl
outsb
and
inc
mov
or
icebp
lock
push
and
insl
push
inc
xchg
rcll
mov
jno
adc
mov
repz
mov
sub
out
mov
sbb
scas
test
add
es
repnz
pop
cmp
scas
pop
clc
xchg
adc
lds
push
in
neg
je
pop
xlat
inc
cmpsb
add
xor
and
mov
mov
in
cs
test
xchg
xchg
add
add
add
mov
adc
lea
imul
lea
mov
xor
cmp
inc
mov
sti
outsl
inc
fmuls
js
or
and
dec
cmp
out
lahf
mov
jns
lcall
add
call
sub
inc
xor
lcall
cwtl
and
or
cli
inc
xchg
push
xchg
out
fs
xchg
jae
inc
fwait
pop
rorb
test
cs
dec
sbb
stos
jl
insl
xchg
sub
or
pushf
jno
mov
push
fcmovbe
dec
aad
xor
mov
mov
sarl
adc
scas
test
cmp
cs
sbb
loopne
movsl
pop
jns
adc
ret
mov
dec
inc
in
push
imul
aaa
sbb
insb
xchg
out
or
xor
scas
sub
mov
jge
lods
outsb
sub
pop
gs
mov
cmp
or
jnp
out
stos
icebp
andb
pop
adc
in
push
popa
push
sbb
cli
mov
push
lds
sub
push
push
test
stos
xlat
push
xchg
xchg
out
mov
loope
into
js
in
or
arpl
fwait
ret
xchg
fcompl
mov
mul
cmp
movsl
jl
data16
loope
out
cli
mov
dec
adc
js
test
mov
sub
inc
pop
and
in
mov
lods
xor
cmp
lret
mov
fisttpll
in
mov
pop
mov
insb
jecxz
push
into
mov
mov
in
dec
adc
and
pop
imull
sub
mov
repz
jb
mov
sub
outsb
push
cmp
int
fmull
cltd
pop
jmp
je
bound
jnp
dec
adc
sub
inc
inc
loope
inc
les
sahf
push
xchg
rol
pslld
push
jmp
out
test
imul
out
enter
mov
ret
inc
adc
mov
mov
lds
stos
addr16
fcmovnu
js
sub
adc
in
mov
and
pop
jmp
sbb
jbe
mov
mov
dec
sub
mov
nop
mov
sti
ret
rcrl
jle
fimuls
push
icebp
jmp
push
movsb
push
std
dec
movsb
hlt
jnp
in
or
aaa
into
movsl
lcall
test
pop
mov
movb
wrmsr
lds
insl
cli
ljmp
sbb
cmp
repz
mov
xchg
fwait
jnp
lcall
fisubs
mov
inc
orb
repz
insl
inc
mov
mov
pop
rcrb
xor
ljmp
data16
xchg
call
in
cltd
ss
fld
adc
mov
inc
jns
fcomip
imul
mov
sahf
hlt
addr16
mov
fistl
ret
sub
mov
mov
pusha
cmp
sahf
rcrl
fcmovu
les
add
dec
leave
mov
sbb
cmp
mov
inc
add
xchg
ss
jo
inc
jle
mov
or
adc
dec
mov
call
sbb
mov
leave
jp
dec
jo
push
adc
fldt
mov
ds
es
mov
mov
frstor
psubq
mov
out
push
push
or
outsl
dec
push
aam
fiadds
pop
subb
mov
dec
adc
lods
fcmovnb
std
int
ljmp
lds
subl
dec
aas
mov
fisubrs
xchg
lods
and
testl
jg
fisttpl
and
jl
mov
cwtl
movsb
xchg
and
fsub
push
pop
sbb
stos
add
pop
xor
dec
lods
imul
inc
jnp
sbb
cmpsl
fdivrl
push
je
xchg
mov
lock
mov
arpl
xchg
mov
add
pop
dec
xor
mov
mov
orb
add
outsb
push
out
fsubrl
cmp
cmp
into
mov
cld
xchg
xchg
jne
shr
ret
mov
ss
testl
out
push
out
sub
mov
jge
mov
lahf
jns
aam
push
loope
sti
push
shll
inc
inc
pop
test
out
lahf
push
sub
xor
test
inc
pop
dec
into
fstl
stc
inc
in
pop
sub
stos
sahf
repz
cmp
mov
pop
lods
push
add
mov
mov
jae
sbb
xchg
cli
xor
mov
iret
es
orl
rcrl
pushl
inc
inc
sub
mov
xor
or
outsl
outsb
test
and
aad
js
popf
fstpl
rolb
xchg
sbb
mov
sbb
sub
outsl
mov
or
scas
and
dec
and
sahf
adc
mov
rolb
and
loopne
fldenv
jae
clc
push
xchg
int
fnstsw
lahf
mov
pop
enter
rolb
leave
sbb
mov
test
mov
shlb
sbb
add
mov
xchg
adc
cwtl
mov
lods
pushf
adc
xchg
or
adc
xchg
cltd
mov
mov
out
rclb
iret
adc
pop
push
out
sarb
rolb
mov
lahf
add
pop
push
bound
fsubl
add
leave
pop
fldt
add
inc
frstor
sub
loopne
inc
add
in
or
xor
and
or
rclb
hlt
pop
insb
mov
aam
loop
adc
clc
inc
dec
cmpsl
bound
js
pop
lret
mov
divb
shr
cld
pop
pop
or
mov
icebp
js
mov
movb
xorb
jl
cmpsl
push
insb
inc
push
inc
dec
mov
inc
jecxz
add
loope
mov
dec
adc
aam
push
inc
fucom
sub
cmp
test
dec
stos
adc
icebp
add
cltd
push
aaa
cmp
ret
imul
sub
dec
sti
or
jl
lcall
ret
scas
pop
into
setp
js
out
aad
jl
aad
and
mov
orl
sub
mov
sub
aas
loopne
xor
aam
sub
cmp
pop
lock
lahf
in
das
jb
or
inc
fidivs
xchg
cmp
jae
in
test
pop
jne
pop
data16
jne
aas
sub
shrl
push
xchg
pop
cmp
inc
xchg
scas
add
fs
cmpsb
stos
cmp
add
sbb
dec
subb
std
into
mov
mov
mov
scas
add
gs
sub
or
fldl
sbb
pop
jge
iret
fs
fs
pop
pop
mov
mov
sbb
scas
jl
psubw
sub
cmp
stos
jl
mov
ret
xchg
pop
mov
add
das
fwait
dec
popa
out
xchg
aam
insb
mov
bound
add
add
adc
shll
loope
inc
insb
repnz
in
add
mov
pop
mov
and
pop
sbb
xchg
inc
sbb
shll
insl
cs
repz
cli
add
addl
divb
lds
lods
xor
scas
je
les
movsl
popf
sbb
cmp
mov
inc
test
mov
and
pop
push
dec
mov
outsb
pop
out
sub
into
out
ds
jg
jmp
adc
call
sbb
fnstsw
rcrl
outsb
jp
xor
test
or
out
xorl
scas
adc
lods
sub
lcall
jo
insb
mov
push
test
pop
jmp
xchg
and
dec
pop
insl
mov
imul
test
pop
call
scas
sbb
push
pop
inc
jg
mov
je
adc
lds
cmp
cmp
aas
xchg
mov
test
stc
fcoms
mov
push
jmp
inc
adc
sbb
jo
dec
pop
ds
ljmp
and
divl
or
fisttps
jne
add
xchg
dec
stos
decb
jcxz
inc
or
mov
push
fwait
scas
push
mov
or
sbb
mov
mov
jmp
lret
xor
mov
mov
scas
test
test
repz
push
cmc
jnp
jne
mov
and
filds
pop
cmp
jl
cmc
data16
pop
imul
daa
mov
mov
std
xchg
lret
fcoms
jmp
fnsave
mov
add
cltd
mov
icebp
popl
push
mov
or
jo
jg
rolb
pusha
push
push
sbb
sbb
loop
pop
push
clc
loope
cmp
sbb
test
jecxz
or
xor
cmpsl
or
inc
decb
decb
mov
outsb
mov
cli
pop
mov
pop
sub
fcom
xor
repnz
aam
cwtl
dec
mov
xorb
into
xchg
and
leave
sub
lret
pop
xor
data16
add
cmpsl
jmp
inc
pop
push
jle
lea
mov
cmp
bound
mov
daa
outsb
and
popa
cmp
rorl
data16
push
call
adc
out
das
std
sarb
fiadds
arpl
adc
and
jge
mov
xchg
in
cmp
lcall
fists
orl
fcmove
add
adc
xchg
loop
lods
movsb
jns
out
jmp
mov
jb
or
mov
negb
push
shrb
mov
xchg
and
aad
sub
mov
push
xor
idiv
and
ss
icebp
inc
push
push
popf
fistpll
hlt
adc
jno
sahf
mov
fistps
and
pop
insl
and
pop
inc
or
out
xor
clc
lds
jg
add
cmc
pusha
cs
lds
or
out
dec
sub
xchg
mov
fmull
pusha
mov
mov
push
pop
imulb
pop
push
lods
rcrb
in
push
mov
in
xchg
pushf
mov
jb
in
cli
les
adc
sbb
or
lock
pop
mov
or
add
enter
push
cli
fwait
add
push
lds
movsb
test
mov
scas
xchg
movsb
mov
cmp
pusha
shl
sti
xchg
ljmp
xchg
xor
dec
adc
mov
or
sbb
hlt
mov
push
push
or
pop
int
nop
xor
in
out
shl
insl
test
dec
cmp
rcl
dec
std
inc
mov
or
add
or
icebp
sbb
mov
cmp
test
arpl
je
mov
inc
fnstenv
push
gs
imul
lret
xor
and
xor
daa
inc
dec
lahf
mov
lcall
scas
ret
xor
shrb
cs
jns
mov
sbb
dec
push
cmp
sti
movb
jb
jp
pop
lahf
sub
pmulhuw
cli
jb
fstps
inc
jmp
pusha
inc
xor
cmp
lods
fldt
mov
lret
xor
insb
cli
lahf
cmp
push
push
mov
scas
or
xchg
loope
dec
int
fcmovbe
lret
outsb
xor
jle
sahf
hlt
add
jge
loop
jp
int3
faddl
loope
lock
loope
popl
push
loop
lret
ret
push
divb
adc
pop
pop
scas
or
clc
xchg
icebp
int3
or
pop
ja
sub
inc
push
div
mov
leave
movsb
sti
bound
sbb
aaa
jg
rcl
stos
scas
dec
popa
mov
cmp
into
dec
or
rcll
divl
or
faddl
or
lret
ret
mov
into
lahf
icebp
in
sbb
int
loope
dec
cmp
mov
shlb
enter
je
ljmp
push
sti
sti
sub
jb
dec
pop
fcmovnbe
jne
in
fidivrs
pop
push
std
jl
arpl
or
call
lods
inc
int3
mov
mov
mov
fistl
fistl
inc
stos
lahf
xchg
adc
mov
jp
push
ss
jmp
es
gs
int
test
aas
loop
fcomps
jae
aas
sbb
mov
inc
or
sti
mov
pusha
aaa
divb
jg
shrb
mov
data16
cmpsb
nop
pop
jg
add
mov
dec
fadds
scas
mov
mov
shrl
outsl
mov
mov
ss
mov
xchg
repz
imul
cmp
inc
lret
outsb
enter
mov
jns
cmpsb
clc
inc
fsts
xlat
xchg
push
lret
xor
int3
fwait
popf
lock
imul
jae
push
pop
push
pop
mov
roll
mov
sbb
mov
xchg
inc
mov
jae
enter
xchg
int
loop
push
cmp
icebp
add
jno
fs
add
imul
dec
pmovmskb
or
jne
nop
int3
fimuls
pop
dec
movsl
stos
lock
outsl
pop
in
dec
iret
xor
std
push
pop
xlat
je
adc
lahf
lret
pop
ja
pop
or
fadds
mov
es
in
in
xchg
mov
cmovne
jge
inc
sub
fcompl
fimuls
bound
sub
imul
jmp
xor
xlat
dec
stos
scas
repz
lds
push
push
xchg
test
jb
mov
and
jbe
movsl
loopne
test
lea
jb
sub
pusha
push
cli
mov
xor
sbb
push
mov
lret
inc
ja
pop
insl
enter
mov
dec
jl
in
enter
mov
stos
mov
loop
inc
jg
pop
loope
jp
push
push
ret
loopne
outsb
aaa
cmp
cmp
xor
and
dec
or
pop
fwait
push
add
scas
inc
scas
lahf
pop
mov
or
mov
sarb
push
dec
jge
mov
mov
xchg
call
cmpb
aas
aas
popf
cmpl
nop
stos
fsubl
adc
mov
and
scas
sbb
dec
ja
pop
mov
cltd
call
pop
iret
mov
dec
mov
stos
cmp
dec
loop
dec
into
xchg
mov
enter
mov
mov
lret
sub
mov
xchg
dec
mov
aam
mov
pop
xchg
ret
clc
testl
push
icebp
call
movsb
lret
jecxz
jg
jns
or
in
mov
ret
mov
dec
dec
stc
hlt
push
lcall
wrmsr
imul
and
jmp
push
xchg
mov
dec
add
jnp
or
and
sbb
mov
jb
mov
arpl
sbb
orb
lock
mov
xor
fstpt
mov
movb
mov
xlat
nop
and
nop
imul
jb
fcoms
outsb
scas
mov
aad
scas
pop
xor
mov
pop
and
insb
out
mov
in
test
loope
jmp
lcall
and
sbb
in
movsb
and
aad
das
gs
sub
jno
jle
jge
movsb
xchg
jo
loope
test
mov
lods
pushf
xchg
push
mov
movsb
mov
mov
arpl
lahf
adcl
cli
xor
lret
push
ret
rcll
test
and
or
stos
sub
and
loope
fnsave
out
xlat
sub
movsl
nop
fucom
push
fcom
cld
and
jo
scas
int3
sub
std
add
je
cli
fcoms
aas
scas
add
mov
xor
add
imul
sub
dec
push
xor
dec
out
divl
add
push
movsb
loope
pop
clc
js
push
out
ja
cli
pushl
xor
pop
push
xchg
xchg
fsub
xchg
movsb
in
xchg
sbb
movsl
push
pop
data16
lret
mov
sbb
jb
ja
imul
imul
jnp
sub
lahf
std
add
bound
jo
push
xchg
inc
push
mov
add
jb
ds
jnp
pop
aaa
inc
lock
js
movsb
xor
jge
and
cmp
dec
adc
mov
mov
mov
data16
dec
mov
mov
outsl
push
loopne
jae
test
dec
jb
aam
sbb
mov
dec
ss
clc
jle
fwait
jb
jo
mov
aad
xor
ds
mov
mov
loope
cld
jle
jp
mov
leave
icebp
dec
pop
imul
scas
sbb
xor
or
loop
mov
enter
icebp
jge
jl
pop
inc
jg
fwait
ja
or
into
repz
adc
and
dec
cmp
cmp
fisubl
addb
shr
fnstenv
push
shlb
call
movsb
push
or
fstpt
iret
or
push
mov
insb
sub
sub
adc
or
mov
xor
ja
sahf
xchg
xchg
adc
clc
fwait
fs
sub
test
cs
cmp
mov
sahf
es
ja
adc
mov
fcmovnb
lahf
sbb
xchg
jno
and
imul
dec
rcll
xchg
mov
repz
dec
es
jo
sub
dec
jecxz
sbb
gs
sbb
push
lock
mov
jg
daa
or
sub
repz
mov
push
call
orl
test
div
icebp
sub
pop
cwtl
testb
loope
adc
inc
and
scas
xchg
mov
test
mov
push
out
scas
je
pop
sub
xor
pop
pop
cltd
cs
jg
ffree
scas
lret
test
cmc
xchg
int
scas
jp
lldt
dec
out
imul
rep
mov
sbb
sti
or
dec
outsb
inc
adc
fdivs
out
ret
stos
cmp
rcrb
lock
in
repz
out
lock
push
dec
pop
jg
andb
adc
inc
xchg
leave
adc
push
sbb
xchg
xchg
out
xlat
jmp
jb
aas
in
shr
and
sbb
mov
fnstcw
out
iret
fs
fisttps
adc
jmp
push
xor
scas
xor
mov
xor
mov
push
add
sub
lret
xchg
and
das
ret
mov
ret
sub
push
int3
aaa
and
into
push
cld
imul
inc
mov
int3
in
xchg
dec
push
push
aas
mov
xor
push
pop
jl
xchg
imul
idivb
push
sub
mov
imul
jae
fwait
xchg
shl
outsb
fimuls
pop
or
push
xchg
clc
xorl
pop
ds
ret
jno
mov
stc
lock
sub
cmpb
out
outsb
dec
xchg
stos
outsb
xchg
xchg
stos
cmp
test
jle
fstpl
xchg
cmpsb
mov
sub
pop
and
loope
std
ret
lds
pop
push
push
sub
aad
or
divl
aaa
push
xor
movsb
arpl
loop
dec
dec
jne
shll
je
adc
popf
and
mov
inc
mov
jge
sbb
shrb
xor
add
jmp
dec
adc
xchg
xor
cmp
and
sub
push
orl
sub
sahf
xchg
jnp
sbb
loopne
lods
loope
xchg
sub
dec
fiaddl
repz
mov
fmuls
cwtl
ja
outsb
and
cmpsb
pop
sub
arpl
push
jo
fidivrs
or
test
std
cmc
cmp
cmc
dec
xchg
jbe
test
frstor
in
daa
es
sti
scas
ds
sarb
test
hlt
out
dec
push
cld
and
xor
dec
pop
push
mov
and
dec
cmpsb
mov
fildll
jl
mov
jmp
mov
subl
adc
das
push
bound
ffreep
pop
xor
scas
inc
addb
push
nop
add
clc
sbb
and
jno
mov
sbb
outsb
rcrl
pop
cwtl
addr16
mov
and
mov
jb
out
lods
push
test
je
sbbl
repz
mov
push
push
mov
outsl
out
or
movsl
pushf
pop
lods
pop
inc
fdivrl
mov
or
jns
jge
popf
lret
mov
mov
push
shrl
std
and
pop
or
out
test
cmp
add
stos
lret
adc
shrl
mov
cltd
insl
push
dec
add
push
popf
inc
test
sbb
pusha
sbb
or
xchg
out
sbb
lcall
pusha
divl
add
mov
pop
mov
or
push
sub
sub
xchg
mov
int3
decb
xchg
jb
lcall
and
mov
pop
pop
je
aad
inc
lea
cmpsl
sbb
xor
jge
dec
sarb
arpl
jnp
pop
inc
lods
and
aaa
addr16
icebp
cmp
dec
popa
int
cs
shr
jae
loopne
cmp
adc
testl
repz
jmp
sub
js
and
xchg
cli
fadd
mov
imul
xchg
sub
mov
loope
cmp
or
fimull
lret
nop
lds
in
cmp
pop
cmp
lret
push
aad
sub
daa
mov
clc
fisubs
gs
jmp
inc
mov
out
fstl
lock
roll
push
aam
movsl
xor
dec
mov
je
hlt
mov
cmpsl
mov
popa
rcr
push
stos
mov
negl
pop
push
aas
lods
enter
jp
mov
inc
sub
mov
iret
pop
loope
mov
mov
jns
pop
shlb
insl
dec
ja
jle
xchg
leave
add
ret
mov
ss
ror
and
sahf
pop
sbb
insb
sahf
outsb
push
xor
mov
bound
ljmpw
loope
fwait
xorl
fmul
and
mov
lcall
lds
mov
mov
incl
xchg
and
mov
cmp
cltd
push
jecxz
repz
sbb
into
cld
test
mov
jge
jg
adc
xchg
nop
loope
repz
gs
xchg
test
inc
fucomip
icebp
lds
add
bound
stos
inc
repz
aaa
jecxz
sahf
les
pop
lods
into
mov
xor
sbb
xor
in
icebp
stc
push
out
inc
sub
cmp
and
outsb
sub
addr16
lcall
or
jle
adc
fisubl
dec
cmp
dec
jae
movsl
inc
cmp
push
outsb
in
and
insb
stos
aas
sahf
sbbl
movsb
sahf
lret
jle
xchg
rolb
cmp
xor
mov
inc
pop
push
stc
sub
int3
lock
js
int
aas
int
ja
push
dec
icebp
insl
andb
sbb
rcrl
inc
xchg
fcmovne
lahf
outsb
sub
mov
les
inc
jge
das
xlat
inc
dec
ljmp
stos
sbb
xor
adc
out
push
insl
jmp
xchg
add
cmpsb
push
jle
in
sbb
xor
push
xlat
inc
cmp
sbb
pop
add
out
in
add
sbb
jne
je
jno
mov
les
or
cld
bound
sbb
test
in
das
cmp
in
xchg
lea
jmp
out
or
lods
xor
dec
je
sub
jmp
pop
pop
loop
jo
imul
jno
jno
cli
add
pop
and
push
or
add
lods
lcall
aad
outsw
in
std
stos
popa
mov
pop
bound
aaa
adc
push
loope
lret
enter
adc
mov
stos
push
stos
insb
lahf
movsl
pusha
mov
push
addl
push
bound
loopne
cmp
scas
xchg
xchg
scas
loopne
cmp
jg
dec
mov
inc
mov
in
or
lret
mov
divb
into
push
je
int3
call
lahf
lock
in
jne
insb
mov
shlb
and
fidivrs
xor
mov
xchg
push
pop
sahf
or
jge
mov
movb
retw
shll
lds
jle
add
pop
dec
rcrl
jo
inc
out
push
xchg
jge
test
mov
mov
xchg
lret
mov
or
mov
shlb
scas
and
lock
mov
je
jmp
inc
andb
scas
xor
jb
enter
rcrb
jecxz
psubw
lcall
xor
add
hlt
es
cmp
fwait
pop
imul
pop
std
sub
int
jae
push
test
in
inc
jne
and
xchg
pop
inc
scas
and
xrelease
and
bound
mov
lods
ja
cwtl
mov
xchg
cmp
fadds
xor
test
inc
sub
sbb
inc
push
xor
out
push
in
adc
insl
add
xchg
insl
xchg
insl
mov
dec
or
inc
shll
addr16
xchg
addr16
xor
insl
or
sti
sti
fdivl
imul
xchg
and
mov
es
ja
jg
mov
outsl
rcrb
pop
jnp
sub
inc
jns
mov
ljmp
dec
pop
add
das
dec
adc
jae
lahf
aas
pop
popf
push
adc
adc
jbe
jne
jecxz
shlb
push
sbb
sbb
push
jmp
lahf
shrb
dec
dec
out
enter
cmp
cmp
fidivrs
sub
dec
insb
call
cmpsl
jecxz
stos
pop
int
fbld
sahf
mov
jbe
push
scas
push
mov
rorb
cmp
pop
loope
outsb
daa
mov
ss
sbb
and
lahf
bound
mov
or
ljmp
mov
adc
jp
test
subb
pop
leave
mov
arpl
std
and
jns
adc
or
stc
mov
adc
fisubrs
adc
or
shl
aam
mov
or
aad
imul
repz
outsl
xchg
loope
inc
sbb
mov
adc
adc
jge
in
add
movsl
js
jg
fstpl
fcomi
pusha
jg
pop
lret
mov
call
je
xlat
lcall
xchg
test
xchg
stos
cmp
adc
sub
add
pop
insl
ss
repnz
sub
cmp
xorps
scas
dec
add
stos
popf
mov
push
das
or
inc
stc
xlat
mov
inc
mov
lds
repnz
aam
icebp
jl
sbb
pop
cmp
outsl
jmp
mov
inc
fisttps
out
aam
add
xor
xchg
dec
jns
ss
xchg
bound
pop
sub
repz
fldenv
fsubs
jp
xchg
jp
aad
js
pop
cs
add
adc
movsl
mov
mov
cwtl
sbb
cmp
outsb
into
or
push
sub
out
out
in
into
and
out
fs
lds
inc
jno
mov
xchg
dec
cmpsb
fcomp
mov
mov
fsts
ds
gs
sbb
repz
enter
dec
xchg
and
out
inc
addr16
loope
inc
sarb
fldl
cwtl
push
dec
test
pop
fs
mov
push
cmpb
insl
jnp
es
mov
adc
pop
aam
sar
out
push
sub
xchg
cmp
adc
in
rcrb
stc
daa
and
xor
js
f2xm1
lods
insb
in
pop
jb
xor
aam
filds
mov
inc
fcoms
sbb
jle
push
push
popf
mov
mov
mov
rcrb
pop
ror
or
dec
mov
jns
push
fwait
movsb
aam
rcll
stos
loope
sti
or
popf
lock
addr16
stos
icebp
ficompl
int3
cld
mov
aam
arpl
jg
int
pop
sbb
inc
add
push
mov
or
jg
sti
pop
and
sub
std
inc
fsubrs
dec
out
cmpl
in
dec
push
push
repnz
adc
das
mov
mov
jb
sbb
fnstcw
xchg
lods
mov
and
ljmp
pop
pushf
stos
mov
sbb
add
clc
aam
push
data16
pop
scas
shrb
mov
inc
or
leave
sbb
push
mov
cmpsl
jecxz
xor
outsb
stos
rcr
sarb
sub
xor
pop
xor
adc
enter
ss
in
push
push
and
mov
mov
sahf
repz
cmpsb
insl
into
ljmp
pop
cmp
pop
mov
jg
ffree
in
rorl
push
pop
cmp
inc
push
jle
xchg
out
push
cmp
mov
loope
cmp
rolb
lret
loope
dec
xchg
adc
mov
mov
dec
imul
movsb
addr16
int3
in
pop
loopne
into
inc
mov
cld
or
dec
pop
xchg
adc
inc
sbb
cltd
jecxz
jb
adc
add
sar
dec
push
or
vmread
imul
pusha
and
jnp
test
jl
adc
fwait
gs
lret
inc
adc
mov
jb
daa
sub
sbbl
xchg
and
push
popa
faddl
aam
cmpsb
push
insb
jp
idivl
mov
int
mov
dec
fnstcw
push
ficoml
dec
pop
mov
sarb
cld
dec
jno
adc
push
mov
pop
mov
fnstenv
popa
jb
movsl
sub
insb
lods
int
and
movsl
add
sub
xchg
and
movsl
sub
lock
nop
or
lods
sbb
test
lcall
xchg
sbb
test
sub
lods
or
lock
loope
dec
hlt
adcl
sahf
pop
test
cmp
push
neg
jae
jmp
mov
sub
subb
cmp
loopne
lahf
loop
pop
push
push
out
adc
lret
shll
adc
mov
and
pusha
mov
dec
pop
pop
push
fstpt
sbb
addr16
jo
push
jmp
push
or
jb
jl
scas
inc
sub
and
mov
test
popf
push
add
adc
daa
xchg
xchg
stos
rcrb
pop
push
xchg
repz
sub
hlt
insb
or
imul
push
mov
inc
arpl
mov
in
pop
xchg
sbb
mov
sbb
mov
cmpsl
jecxz
mov
xchg
or
jb
or
push
inc
cmp
sarl
loopne
push
into
sub
mov
push
xor
in
fiaddl
sahf
jmp
sysret
addl
ja
loopne
stos
stc
out
jecxz
clc
stos
mov
fldl
cmp
fists
mov
push
sbb
test
or
das
movsl
rolb
fisttpll
jnp
mov
leave
lea
push
pop
xlat
ss
rol
cmc
cld
xchg
icebp
sub
cmc
xchg
es
and
push
stos
ss
aam
imul
cld
into
icebp
jne
insb
xchg
addb
mov
imulb
mov
popf
faddl
daa
movsb
fs
out
xchg
arpl
xchg
cmp
push
stos
test
lea
jmp
in
jo
add
pop
int3
cmp
dec
fisubrs
repz
ja
mov
repz
in
inc
inc
mov
dec
or
push
and
xor
stos
insl
out
daa
xchg
int3
adc
cmpsb
stos
aaa
jne
push
nop
pop
inc
lods
mov
mov
out
sbbl
adc
imul
outsl
addr16
les
ret
aaa
jle
and
in
sarl
adcl
mov
scas
and
cmp
mov
movsl
add
stc
fsubs
dec
push
dec
mov
and
aad
and
icebp
dec
sub
arpl
jne
jg
add
iret
mov
mov
aam
xchg
lock
andl
or
adc
aad
stc
jle
addl
xchg
into
aad
pop
adc
jl
jae
prefetch
sbb
je
inc
sub
adc
jbe
data16
ljmp
lock
roll
ljmp
lret
addl
in
push
outsl
pop
test
adc
fisttps
push
js
cmp
sub
and
lods
lret
int
push
pop
jmp
call
mov
loopne
or
push
pusha
es
in
fsubr
push
pop
xchg
or
daa
jg
ljmp
leave
in
push
mov
push
sbb
fsubr
or
cs
jnp
cld
mov
sub
xor
cmp
sarl
shrb
mov
int
loop
aam
dec
mov
or
xchg
lods
xchg
paddb
pop
mov
mov
les
mov
cmp
mov
in
out
aam
push
test
std
jo
loopne
jno
and
push
lea
imulb
pslld
fs
pop
xchg
mov
rclb
jp
fcompl
lret
xor
sub
adc
xchg
shll
gs
sbb
jb
jmp
cmpsb
mov
lcall
jne
cld
imul
out
nop
jge
out
aam
popf
out
sub
or
aas
int
push
aas
or
ret
mov
jno
rcrl
jnp,pn
sbb
jle
jb
pop
jmp
and
or
into
bound
stos
mov
repnz
jbe
mov
enter
sub
ljmp
push
je
pop
movsl
movsb
mov
push
testl
mov
xchg
cld
out
fiaddl
dec
cmp
and
pusha
dec
ljmp
mov
sti
jbe
jnp
push
dec
cmp
xlat
sub
mov
lds
inc
adc
sub
push
push
or
push
in
jmp
popf
mov
jbe
cmp
cmp
stos
out
xchg
ret
mov
imul
decl
push
int
cmc
enter
daa
mov
inc
inc
jge
leave
in
stos
mov
adc
adc
cmp
and
xchg
jne
adc
cmp
dec
xor
mov
test
jp
adc
jp
and
and
das
data16
outsl
repz
mov
dec
test
cmp
mov
iret
fucom
jne
push
adc
dec
imul
divl
or
into
xor
mov
jb
mov
mov
cmpsb
adc
add
xchg
pop
imul
dec
enter
ret
pop
mov
pushf
add
adc
jecxz
mov
sub
cmp
cmpsl
nop
mov
or
add
sbb
jle
or
xchg
ja
jle
xchg
xlat
imul
sbb
leave
jg
clc
lcall
sbb
push
aad
outsl
popf
std
mov
je
ret
add
xlat
repz
lret
pop
mov
por
push
pop
cld
ret
lods
mov
je
test
and
outsb
sbbl
popa
push
dec
or
xorb
add
dec
inc
mov
test
add
cmpsl
pause
inc
sbb
push
pop
mov
loope
mov
dec
fwait
xor
and
add
vxorps
cmpsl
std
lock
movsl
mov
ret
pusha
jg
sub
xor
jl
ds
xchg
outsb
add
mov
dec
lods
sub
add
adc
in
repnz
scas
enter
leave
fstps
inc
dec
iret
or
lods
pushf
push
mov
fwait
mov
pusha
and
sub
jg
int3
inc
in
jae
in
fcmovb
inc
cmp
test
jmp
cli
pop
pushf
mov
rclb
sbb
fisttpl
in
call
pop
rcl
fwait
loopne
xchg
cmp
scas
push
out
cmpsb
leave
jmp
addl
mov
or
imul
jbe
add
fmuls
push
push
mov
mov
xor
pop
call
pop
dec
shr
stos
fyl2xp1
dec
inc
jle
dec
mov
pushf
shlb
ljmp
xorb
and
in
adc
mov
pop
xlat
aam
adc
out
roll
cmp
or
xchg
inc
test
or
pop
insl
subl
popa
mov
xchg
push
fildll
stos
xchg
cmp
mov
jae
fcmovnb
sub
or
mov
aad
shrd
sbb
loopne
imull
lea
testb
jge
and
inc
movsb
or
xor
out
testb
and
sahf
out
and
jge
inc
xor
rorl
je
shlb
data16
pop
cld
cmpsl
inc
mov
adc
xor
jns
mov
out
ds
lods
addr16
push
lods
ljmp
xchg
loop
ret
repz
push
into
add
mov
dec
xchg
add
clc
push
sbb
cmpl
jbe
scas
lcall
mull
sbb
jmp
pop
dec
scas
inc
outsb
popf
stc
xor
xor
sbb
shll
push
and
sub
mov
mov
add
xchg
push
jg
test
mov
mov
jg
mov
pop
roll
jp
lcall
cmp
cli
lods
std
xchg
pop
push
push
je
mov
mov
outsl
push
push
adc
fincstp
pushf
lods
fwait
sbb
inc
aam
popa
andb
jne
lea
iret
test
mov
fistpl
and
pop
mov
add
in
pop
cmp
push
daa
repz
cltd
stos
sahf
pop
adc
lret
add
test
mov
and
gs
mov
inc
sbb
out
cmp
sbbb
mov
aam
jle
cmp
shrl
mov
aad
aad
lods
sub
cmp
daa
imul
xlat
je
push
movups
or
inc
imul
xor
fidivs
dec
insl
loop
ds
sbb
jl
mov
jge
enter
inc
mov
or
inc
pop
mov
and
pusha
idiv
mov
fwait
std
fcompl
inc
cmp
test
xchg
mov
inc
pop
add
loop
xor
stos
xchg
mov
out
or
jl
std
popl
lret
sbb
mov
fdiv
mov
std
cli
sub
and
jb
outsl
adcb
adc
daa
and
sahf
mov
movsl
and
icebp
sub
cmp
pop
push
xchg
shr
pop
mov
enter
stos
iret
or
xchg
dec
pop
adc
daa
xor
jle
ljmp
mov
or
sub
stc
and
aaa
test
jecxz
mov
cmp
mov
mov
xor
sub
sti
cld
das
xchg
mov
inc
lea
lds
and
iret
sbb
mov
jbe
mov
popa
stos
mov
subb
push
pop
mov
pop
and
adc
lods
mov
shrb
sbb
addr16
push
imul
add
into
aaa
popf
out
cmpsb
add
test
push
hlt
pusha
mov
sbbl
in
adc
andl
cwtl
adc
std
sqrtps
sbb
add
dec
push
mov
test
test
rorl
sbb
mov
jno
popf
addr16
dec
adc
mov
jo
das
and
and
orb
push
mov
inc
ficoml
or
dec
pop
ds
in
icebp
mov
jo
aad
ljmp
pop
sbb
jns
dec
popa
adc
xchg
outsl
seto
mov
lret
dec
es
add
test
or
or
dec
mov
jbe
mov
in
aas
xchg
xor
cli
xchg
or
pop
test
loop
mov
cmc
or
loopne
or
or
xor
sub
jnp,pt
hlt
pop
gs
xchg
pop
das
adc
out
iret
test
ficoms
scas
sahf
insb
xchg
adc
movsb
sbb
lods
lahf
call
inc
or
add
movsl
out
dec
or
xchg
adc
into
outsb
rcrb
mov
and
pop
xor
sarb
aaa
into
fistpl
dec
push
dec
xchg
inc
jmp
lock
inc
jo
push
xchg
or
pop
add
jl
or
jmp
mov
mov
scas
das
movsl
sbb
scas
mov
and
add
das
cmp
and
jp
inc
add
test
mov
or
movsb
dec
mov
div
xchg
and
xor
push
enter
shlb
mov
arpl
mov
add
add
or
mov
js
je
jno
mov
aas
jb
ret
dec
jo
jb
sub
or
mov
daa
xor
popf
adc
add
outsb
and
fstl
dec
sub
mull
jb
lds
pop
int
rorb
shr
jmp
lret
xchg
push
sub
jne
gs
mov
cwtl
sar
lret
mov
and
xchg
sbb
es
ljmp
xchg
add
cmp
popa
shrb
lret
and
popa
aaa
pop
lods
sbb
mov
jl
ret
mov
repz
cmpsb
call
sub
js
xrelease
or
jmp
jo
mov
xor
sub
pop
mov
sbb
out
dec
in
add
xor
pop
jns
scas
jbe
out
mov
add
insb
xchg
and
cmp
sbb
fldt
sbb
or
jecxz
push
popf
dec
mov
push
loopne
adc
jnp
add
adc
aad
cld
mov
adc
xchg
popa
loop
sub
xor
or
sbbl
insl
and
loopne
xor
add
ret
cli
or
shl
adcl
les
repz
add
inc
add
jg
xchg
in
adc
pop
ds
push
lahf
push
addr16
fnstenv
inc
daa
sbb
in
roll
lcall
cli
adc
push
sbb
dec
in
mov
dec
push
mov
add
aas
pop
inc
mov
push
sbb
icebp
jle
filds
decl
les
dec
lahf
xchg
orl
jg
mov
movq
push
jp
fsts
pop
sub
add
push
push
dec
dec
or
xchg
push
pushf
lods
ret
fwait
mov
jp
dec
cmpsb
ffree
ror
fidivl
repnz
or
xchg
adc
dec
push
rclb
arpl
leave
xorb
sbb
dec
push
sbb
sbb
add
or
mov
clc
adc
push
lods
mov
adc
xchg
out
pop
mov
fisubl
inc
sbb
pop
xchg
cmp
xor
mov
jae
jb
out
sub
imul
or
inc
pushf
add
mov
lea
dec
jae
les
cltd
sbb
or
fcom
aam
je
push
mov
scas
movsl
cmpsb
movsl
mov
data16
insb
sbb
xor
shlb
pop
add
rolb
xlat
daa
aad
sbb
addb
fisttpl
lods
adc
cmp
jp
push
xor
add
push
loop
popf
sub
lods
sahf
inc
mov
fistpll
cmc
add
daa
jno
shll
aam
rolb
fwait
push
mov
cmp
out
daa
push
pop
mov
in
xor
in
mov
inc
jecxz
sbb
sbbb
lods
or
loop
add
jnp
mov
aam
cmc
andb
sbb
inc
dec
xor
mov
cmp
cwtl
xor
mov
daa
sahf
faddp
mov
shrl
fildll
cli
mov
out
jo
push
test
and
jne
cs
cmp
cmp
and
push
push
push
scas
andl
pop
test
movsb
or
rorl
xor
je
adc
pop
xchg
sarb
mov
stc
div
addr16
sub
mov
jp
call
xor
sti
loop
in
push
push
mov
mov
and
adc
xlat
ljmp
xchg
stos
sti
lret
fldt
imul
fwait
sbb
cmpsb
pop
xchg
add
jb
jae
add
mov
pushf
push
cmp
test
add
adc
and
sbb
push
push
repz
jbe
dec
mov
lret
dec
cwtl
dec
pop
jl
sub
arpl
mov
leave
inc
cmpl
jmp
adc
ljmp
adc
enter
mov
push
dec
or
imul
cmp
push
addb
jb
push
andl
fcmovnbe
ret
jnp
mov
ss
es
fcmove
sub
test
pop
movsl
jae
push
leave
sti
sbbb
in
lcall
push
ror
ret
dec
sbbl
cwtl
cs
fidivrl
cmp
in
lahf
pop
or
shrl
xchg
push
sub
dec
mov
test
clc
hlt
faddl
sahf
popa
pop
dec
jge
es
or
andl
jp
inc
test
es
jle
test
inc
sbb
or
data16
pop
add
js
sbb
pop
std
sbb
ja
repz
pop
jno
jb
out
les
divl
adc
push
inc
cmp
push
pop
fwait
push
aad
xchg
sbb
push
sub
clc
and
xlat
adc
lock
fnclex
out
xor
les
push
scas
pop
or
es
inc
stos
out
negl
aam
movsb
inc
cs
in
arpl
cmp
mov
mov
add
mov
out
test
add
ljmp
dec
jo
dec
sbb
or
pop
adc
outsb
lods
or
popl
and
cmpsl
inc
lds
pop
or
pop
xlat
cli
mov
scas
mov
sahf
or
cmp
add
push
sub
aaa
call
iret
jne
out
sbb
and
pop
xor
sbb
in
inc
pushf
mov
test
mov
sbb
pop
jg
adc
rorl
cltd
aas
jge
lods
inc
test
adc
mov
push
add
stc
dec
add
ret
fcomp
mov
mov
gs
outsl
inc
lahf
insl
or
jae
rcl
xor
jle
rcrb
or
repnz
push
arpl
cwtl
dec
xchg
mov
mov
sarb
jge
imul
gs
mov
add
into
add
in
lods
or
xchg
add
fcmovu
aaa
xchg
dec
ss
inc
mov
ja
jmp
adc
push
xor
cwtl
into
push
inc
xchg
fbstp
imul
jl
or
rclb
mov
stos
pop
dec
sbb
outsb
xor
imul
cmpsb
dec
sbb
fisubrl
xchg
push
pop
in
push
and
les
cwtl
leave
mov
pop
ficoms
sub
ljmp
add
mov
imul
test
mov
mov
sbb
in
sti
stos
mov
sub
pop
sahf
aam
add
mov
xchg
movsb
mov
lret
and
xor
and
xchg
aad
mov
in
xlat
xor
int
sub
sub
in
lock
sar
cmp
push
imul
and
lahf
out
negb
add
adc
ret
outsb
insl
out
adc
mov
xchg
cmp
jb
insl
cli
mov
shlb
push
dec
sub
add
push
ret
pop
and
push
mov
daa
sahf
mull
je
xor
movsb
cmpsb
push
pop
or
mov
ret
push
arpl
jle
addb
loopne
pop
out
lcall
orb
fwait
pop
add
ret
sub
fs
ss
xchg
mov
lret
cs
sub
or
add
mov
dec
cmp
jge
and
sbbl
fimull
lds
fwait
push
mov
pop
push
push
aaa
pop
inc
add
mov
insl
dec
cmp
xchg
aaa
mov
test
xlat
cmp
add
fcoml
mov
jb
pop
in
dec
or
add
int
xorl
and
gs
leave
add
jg
out
jae,pt
sbb
ljmp
es
jp
pusha
jb
mov
add
ror
sbb
loopne
add
xor
jno
xlat
sbb
jecxz
ss
ss
jbe
aam
cmp
jo
sti
mov
imul
mov
fwait
insl
fld
xchg
dec
movsb
subl
lar
out
adc
sbb
sarb
push
pop
sbb
mov
add
cld
repnz
enter
cmpb
stos
fwait
add
inc
stos
outsb
insb
imul
pop
push
loope
gs
push
ret
shll
aaa
fidivl
cmp
aam
addr16
call
xchg
adc
popf
xchg
pusha
test
stc
mov
ret
scas
push
mov
gs
pop
adc
jl
out
ret
inc
jns
ljmp
addr16
out
and
sbb
lds
adc
xor
sub
repnz
xor
das
xchg
out
push
sub
js
mov
cmp
mov
mov
repz
jg
pop
cli
cmp
repnz
mov
int
jno
adc
and
mov
cmpsl
test
jg
jnp
idivl
adc
gs
add
mov
outsl
cmp
shrl
push
or
sub
movsb
sub
shlb
movsb
shlb
lods
arpl
or
jmp
ss
inc
inc
adc
jbe
es
mov
push
or
or
je
push
jl
mov
fdivrp
nop
cs
xlat
lret
test
scas
mov
sbb
shr
mov
lods
faddl
sarb
lahf
add
out
inc
cmp
call
mov
sar
fsubs
adc
xor
test
xlat
pushf
and
lret
lret
jmp
mov
pop
pop
jbe
push
aam
loop
sbb
sbb
cs
inc
jne
pop
cmpsb
mov
sub
cmp
xor
or
jge
ret
roll
push
js
rolb
sarl
aad
inc
icebp
xor
inc
lea
call
dec
std
jnp
outsb
cmpsb
adc
mov
push
mov
xchg
mov
in
dec
jbe
hlt
pop
adc
cmp
push
ret
insb
lahf
shlb
jno
or
cli
enter
jp
rorl
push
sub
sub
mov
push
jmp
pop
jmp
insl
lret
bound
rcll
inc
dec
push
and
push
lahf
test
in
fldt
adc
cmp
xor
adc
mov
pop
shll
add
ja
dec
loop
outsl
cmpsb
cltd
enter
push
int3
stc
hlt
sbb
sub
mov
dec
mov
xchg
cmovp
mov
call
lret
push
inc
pusha
out
aas
cmpsb
fcmove
movsl
jge
jns
lds
fnstsw
xchg
fmull
lret
andl
popf
mov
leave
add
adc
push
repz
xchg
xchg
xchg
push
sbb
ljmp
sub
ficoml
cmp
cli
push
sbb
test
in
and
scas
cmpsb
jge
jbe
mov
cmc
addr16
mov
test
repz
cld
mov
mov
pop
out
or
fistps
sbb
mov
inc
inc
movsb
dec
adc
sbb
inc
cmp
enter
push
and
push
mov
jg
sbb
jle
sbb
mov
sub
sub
or
insl
jge
les
orl
mov
scas
jns
cmp
ret
out
sbb
cmp
mov
fs
or
aam
add
mov
out
xor
dec
pop
rclb
add
in
das
mov
lock
xchg
mov
mov
ds
xor
out
fs
cs
inc
mov
cmp
loope
push
push
lea
iret
inc
xchg
mov
pop
mov
inc
pop
pop
jae
or
mov
sub
inc
ficompl
xchg
adcl
sub
dec
mov
loope
fldl
in
pop
loop
xchg
rolb
cmp
loop
mov
inc
test
ret
xor
das
xchg
dec
push
xchg
js
cmp
fsubl
popf
cmp
pushf
cli
fsub
rcrb
mov
cmp
push
shlb
lods
or
cmp
sub
cmp
pushf
cld
mov
loope
xchg
lret
push
pop
pop
jo
or
adc
out
notb
xor
aas
addr16
mov
or
push
mov
inc
cwtl
cmp
lret
scas
push
jmp
inc
or
sbb
xor
imul
mov
xchg
std
in
js
call
repnz
dec
and
fcoms
sub
stc
and
fnstcw
inc
pop
pusha
and
loopne
and
dec
cmp
lods
or
lock
out
xchg
xor
mov
push
std
inc
add
push
xchg
arpl
xorl
adc
xchg
loope
lods
push
testl
pushf
and
cld
and
add
es
push
clc
or
add
dec
hlt
and
mov
sbb
inc
nop
pushl
std
lods
out
outsl
dec
dec
mov
fmull
xor
xchg
scas
or
inc
lahf
cld
outsb
dec
push
bound
sbbb
push
into
pop
dec
xor
sub
fsubl
rorl
mov
push
pop
aad
scas
sbb
repnz
pop
cli
and
addb
push
inc
imul
jle
push
aad
sti
sbb
faddl
insb
mov
cmp
int3
push
cmp
arpl
pop
add
jae
adcb
jle
jae
lret
add
adc
cwtl
out
repnz
outsl
test
sbb
inc
jmp
jp
lahf
cmp
sub
movsb
pushf
fsubp
inc
fbstp
jne
add
xor
dec
out
pushf
push
jmp
or
xor
jae
sbb
push
mov
mov
shr
sbb
bound
lret
lret
xor
ds
in
cwtl
lret
push
fldl
jl
nop
jae
cmpsl
data16
ja
js
movsl
mov
mov
mov
insb
dec
mov
mov
adc
stos
aam
movsl
inc
jno
in
int
dec
push
pop
fsubrl
sbb
rorb
pop
ljmp
movsb
pop
test
mov
mov
popf
cmp
adc
add
xor
xchg
adc
add
ret
mov
cli
sbb
data16
and
cmc
cmp
mov
cmc
sbb
cld
in
ret
jbe
push
fildl
inc
and
daa
push
sbb
stos
pop
inc
loop
stc
xor
mov
push
jg
cli
xchg
jl
clc
mov
orl
subl
mov
ljmp
and
jb
ljmp
inc
inc
imul
or
rolb
sbb
jecxz
and
and
add
dec
mov
ret
sarl
adc
aam
and
fwait
negl
lahf
pusha
scas
bound
scas
in
lock
jge
pop
and
xchg
sahf
and
cmp
xchg
lret
dec
xor
adc
xchg
frstor
adc
adc
pop
add
lcall
pop
bound
push
pop
test
cmpsl
fwait
popa
xor
clc
adc
mov
cmpsl
jne
repz
hlt
orb
xchg
add
sub
cld
and
shrb
push
stos
arpl
mov
sahf
jns
mov
xchg
popa
jno
popa
loopne,pt
xchg
mov
ret
pushf
jle
jo
push
mov
rcll
push
inc
adc
out
mov
jns
push
or
std
fldt
jno
push
sub
das
mov
sbb
enter
movsl
ret
cmp
inc
mov
lock
xor
out
inc
sti
mov
stos
inc
test
ret
sbb
push
mov
jmp
repnz
neg
cwtl
jns
dec
cmp
rdpmc
xchg
mov
cmp
inc
pop
jle
int3
lods
jge
dec
out
lcall
sub
negb
add
shl
mov
mov
pop
adc
rorb
out
clc
imul
jae
xchg
sarl
call
je
movsl
popa
push
mov
lods
lret
xchg
pop
stos
add
inc
idivb
out
cmp
rorl
mov
pop
iret
aam
fldenv
and
fdivrl
xor
mov
mov
or
aam
es
hlt
or
imul
adc
cmp
push
shr
movb
shrl
dec
test
addr16
mov
sbb
push
mov
jnp
xor
push
bound
pop
add
pop
int
test
or
aam
jg
rolb
jnp
cli
pop
shll
ror
jne
inc
cmp
adc
cmp
add
mov
lea
xchg
or
lret
rcr
pop
in
xchg
int3
nop
loope
pop
jae
pop
das
test
mov
orl
movsb
xchg
cwtl
sbb
sbb
lcall
inc
enter
test
nop
cs
popa
inc
movl
jmp
cltd
out
xor
cs
es
int
sbb
push
mov
dec
cmovns
sbb
dec
and
inc
out
jo
and
aas
push
call
mov
cmp
mov
inc
adc
or
rcl
push
inc
sahf
arpl
lret
ja
gs
push
jno
sbbl
sub
popa
int3
jmp
sbb
push
call
call
dec
scas
add
int
clc
xchg
rcrb
cmp
outsb
mov
popf
lret
sbb
adc
mov
decb
xchg
jmp
push
pop
cld
xchg
in
pop
push
in
fadds
js
mov
andb
aaa
dec
dec
mov
imul
test
xorb
in
iret
roll
pop
pop
dec
cmp
and
jle
addb
fcmovb
int3
imul
in
rorb
and
xlat
push
lods
inc
mov
jge
pop
js
push
test
pop
xor
jb
mov
jb
add
mov
mov
sti
test
and
nop
out
testl
push
imul
jb
push
inc
mov
arpl
mov
cltd
lcall
lahf
lods
dec
and
add
test
ja
push
mov
jnp
out
or
push
and
and
js
cwtl
jae
mov
adc
pop
cmp
adc
out
jo
lods
out
inc
and
scas
ret
jl
jno
mov
in
push
xchg
popa
outsl
xchg
jge
ret
or
into
scas
sub
pop
data16
sti
mov
pop
call
pop
es
cmp
push
xchg
imul
and
push
outsb
cmp
ret
dec
ss
adc
adc
cld
imull
lods
xchg
ss
xor
ret
lret
ja
push
test
into
rolb
mov
mov
jne
aas
and
xor
inc
add
pop
clc
cmp
cwtl
das
lahf
out
test
jbe
jbe
or
push
push
fwait
out
das
dec
xor
fsubl
and
lock
cld
cmp
int
mov
sub
mov
mov
rorb
xor
test
mov
or
nop
add
imul
sub
mov
push
hlt
pop
int
mov
out
jp
jge
loop
int
stc
call
xlat
movsl
cmovl
push
fwait
sbb
jbe
cmp
nop
divb
pop
jg
adc
popa
push
jge
shll
push
xchg
mov
cli
sub
jge
xchg
int
jg
aas
push
lods
pop
sbb
push
sbb
stos
das
in
mov
aad
mov
mov
sti
xor
and
fildll
flds
outsl
sbb
rorl
mov
lds
add
pop
xor
hlt
inc
incl
and
mov
or
lods
int3
xchg
addr16
pop
in
popa
pop
aaa
lcall
xchg
add
lahf
add
les
inc
fwait
bound
push
decb
cmp
call
pushf
adc
test
lcall
xlat
jecxz
cmpsb
cmp
dec
cmp
test
sahf
push
lea
cmp
adc
pushl
sub
jg
dec
mov
lret
cltd
and
and
xchg
stos
arpl
nop
das
in
xor
mov
mov
movl
mov
mov
xor
mov
lods
xchg
pop
mov
xor
jmp
ja
sub
ja
test
scas
call
inc
fsubrs
xor
fwait
jb
mov
inc
and
daa
or
cmp
sub
popa
call
popa
dec
sub
jle
ror
sub
hlt
addr16
mov
xchg
les
lods
gs
push
test
mov
int
push
into
mov
mov
and
jp
pop
hlt
inc
mov
stos
mov
push
adc
inc
pop
ljmp
xor
xabort
sarl
sbb
mov
and
vgf2p8mulb
push
insl
in
inc
in
fs
pushf
sbb
jmp
sub
jecxz
adc
mov
cli
loopne
aas
mov
jne
out
cmp
insb
test
or
js
and
cmp
outsl
sbb
mov
push
xor
pop
xor
push
push
bound
pop
mov
call
xchg
fstps
or
ljmp
mov
sub
pop
sahf
pop
cld
cld
add
push
pop
test
sbb
push
and
enter
nop
xchg
pop
add
or
cmp
xor
subl
imul
cs
mov
les
divb
xchg
cmp
or
stos
outsl
daa
mov
int
in
adc
pop
pop
sti
inc
cmp
xor
cmp
aad
sti
sbb
andl
outsb
jle
xchg
add
int3
es
mov
pop
jmp
xchg
cmp
out
and
mov
mov
push
inc
test
adc
xchg
fiaddl
pop
xor
or
enter
mov
pavgw
fisubrl
cmp
inc
mov
pusha
jg
inc
mov
ljmp
adc
test
inc
xchg
arpl
negl
ljmp
imul
sub
ja
enter
push
in
int3
mov
test
out
inc
in
enter
mov
pop
mov
adc
test
mov
mov
xorl
xchg
push
inc
or
scas
or
or
dec
xor
mov
lods
jmp
cs
mov
pop
gs
or
cltd
insb
jmp
clc
mov
mov
fnstcw
add
and
sbb
cmpb
imul
rorb
aaa
mov
sub
and
inc
jnp
cmp
cmp
fisubs
scas
nop
out
imul
push
aaa
inc
loope
repnz
adc
sub
cmpsl
xchg
jle
fildll
in
mov
dec
pop
and
fcomip
jmp
xchg
movsb
mov
xchg
out
mov
dec
enter
imul
fs
inc
xchg
frstor
dec
rolb
or
sbb
adc
or
sub
and
popf
jp
imul
imul
inc
adc
add
rcll
repnz
dec
add
xchg
cld
mov
mov
ds
ret
fsub
sbb
in
repz
in
fstpl
daa
cmpsb
rcrb
test
fwait
inc
jecxz
mov
lods
loop
ja
movsl
popa
lret
dec
jmp
leave
add
pop
xor
dec
fstpt
jbe
subb
xchg
fwait
enter
jb
jle
xchg
mov
pop
adc
enter
cmp
pop
dec
xchg
adc
sbb
sub
lahf
mov
insl
daa
mov
mov
loope
xor
scas
lock
mov
cmp
mov
mov
adc
mov
mov
xchg
aam
fs
pop
or
gs
out
les
mov
repz
data16
and
mov
adc
das
adc
jns
cmpsl
popa
insl
jmp
and
icebp
movsb
lds
sbb
out
pop
iret
push
icebp
and
mov
mov
rcl
lds
pop
push
lret
addr16
aam
mov
in
xor
leave
fnsave
repnz
xor
lds
enter
and
xchg
pushf
or
sub
inc
loope
cs
lock
mov
jnp
add
push
js
loope
xchg
fadd
sub
adc
leave
stc
push
aas
call
bound
test
jnp
adc
cmp
or
adc
movb
aad
cli
lea
les
vpinsrw
jl
pusha
sti
sub
adc
outsb
mov
sbb
imul
xlat
addl
mov
add
cmpb
sub
lods
push
add
adc
push
sahf
imul
push
and
in
into
sbbl
jmp
frstor
lret
sub
repz
or
enter
sbb
cli
pop
test
test
movsb
mov
aad
cmovp
movsl
inc
mov
jne
cmc
es
jl
sbb
push
imulb
in
pop
push
out
pop
mov
push
shlb
dec
ud0
jmp
movsb
das
fiadds
push
scas
sar
divb
sub
push
data16
sub
in
xchg
gs
mov
test
outsl
add
repz
in
mov
sub
int3
pop
iret
aaa
shll
loope
push
out
add
mov
pop
sub
pop
mov
loop
push
sub
jo
popl
negb
push
mov
inc
adc
rolb
sub
fdivs
pop
subl
or
test
xlat
daa
pop
cmp
into
push
loope
ljmp
ljmp
sub
pop
inc
and
lods
add
and
push
daa
xor
sbb
lahf
and
cld
popa
xchg
push
xchg
js
xchg
fiadds
and
and
pop
mov
scas
test
bound
loopne
sub
mov
inc
outsl
mov
fs
pop
es
xchg
sbb
mov
jae
bound
fsubr
add
push
faddl
lret
dec
fld
adc
lods
cmpsl
xor
jae
jns
jae
es
mov
stos
pusha
sbb
mov
or
sbb
cmp
jb
push
cmp
adc
mov
out
enter
loop
out
xor
loope
jmp
inc
or
push
mov
call
ss
add
sub
ljmp
repnz
fstps
das
adc
cmp
and
pop
fsubrp
movb
xchg
scas
dec
jne
roll
sbb
dec
adc
dec
stos
mov
xlat
inc
add
and
mov
xchg
lods
movsl
pushf
mov
fmull
jge
push
popa
out
push
jle
sbb
sub
dec
or
inc
lock
mov
shl
int3
push
imul
and
mov
ljmp
jge
add
lods
lock
sbb
dec
fisubl
inc
push
daa
cmp
aaa
ja
fmulp
jg
pop
mov
pop
icebp
setne
jns
sub
or
pop
and
cmc
xchg
adc
pop
repnz
stos
mov
push
mov
out
jb
pop
pop
mov
inc
mov
in
loop
sub
pop
push
scas
or
das
pop
loope
pop
inc
and
and
jg
xchg
roll
pop
or
repnz
insb
lods
mov
push
rep
push
lret
dec
sbb
inc
mov
daa
xchg
fsubrs
adcl
fwait
imul
imul
xchg
push
test
inc
stos
xchg
or
adc
loopne
or
jns
repz
pop
es
pop
insl
shl
into
mov
adc
dec
jle
test
add
xor
mov
cli
cli
incl
mov
jno
xchg
js
adc
mov
imulb
inc
adc
in
into
icebp
das
push
add
and
jo
jns
push
add
fisubrl
sarb
in
or
sbb
add
push
add
xchg
mov
xorb
ret
or
xor
mov
repz
pop
pop
mov
mov
into
xchg
jo
push
inc
mov
mov
jmp
or
imul
inc
pop
xchg
xlat
insl
dec
mov
lods
icebp
xor
loopne
adc
addr16
call
call
int3
pop
je
cmpsl
mov
pop
push
jnp
push
mov
or
inc
ja
incb
mov
add
adc
sub
ss
sub
sahf
mov
sub
xchg
xor
dec
out
or
cmp
orl
dec
iret
xor
into
cwtl
jnp
enter
js
mov
inc
repz
jle
cli
sti
mov
or
movaps
mov
xchg
xchg
adc
mov
sbb
roll
mov
mov
adc
mov
or
rorl
jbe
movsl
mov
push
aaa
ret
hlt
lret
outsb
mov
xchg
mov
or
ret
push
gs
testb
xor
int
sub
aam
cmp
aaa
loop
lret
sub
imul
sbb
pop
xlat
mov
inc
test
out
popa
enter
cmp
andl
mov
cli
mov
and
pop
pop
dec
xor
and
mov
leave
pop
mov
subl
mov
ja
push
xor
dec
sub
add
adc
test
icebp
out
cli
sub
jp
inc
add
gs
pop
hlt
mov
sahf
mov
push
push
insl
jecxz
cmp
lods
out
mov
lret
mov
push
popf
icebp
stc
push
cmpsb
into
mov
testl
add
xor
inc
cld
ss
or
fisubl
push
jno
addl
adc
mov
addr16
daa
pop
mov
mov
ret
lret
jo
outsl
jnp
xchg
sub
scas
xchg
out
dec
xor
sbb
cmp
jnp
bound
addr16
hlt
btc
dec
cs
test
sub
cmpsl
andb
es
psubusw
adc
mov
pop
pop
in
mov
sahf
jmp
cld
mov
cmpsb
inc
out
dec
dec
clc
sub
dec
outsb
jmp
std
fdivp
push
or
xchg
std
repnz
rclb
jg
scas
or
cmp
cmp
leave
and
imul
cmp
pmullw
shl
outsb
test
xor
and
mov
out
mov
xor
add
test
sbb
mov
repz
scas
mov
scas
adc
outsl
jle
out
pop
push
imul
imul
adcb
ss
push
cwtl
inc
nop
mov
xorl
rclb
test
repz
imul
repz
pusha
ret
jnp
testl
pop
xor
insb
out
ljmp
movsl
dec
cwtl
adc
xor
dec
or
fiadds
js
outsl
insl
psrad
adc
xchg
cmp
sub
xchg
cld
mov
dec
mov
mov
and
sbb
xchg
mov
nop
jne
push
stc
push
dec
shll
enter
lahf
mulb
sub
jne
dec
pop
fucomip
adc
pop
out
xor
out
pxor
or
pxor
sub
dec
mov
jb
adc
pusha
repnz
push
push
shl
add
rorb
sbb
sbb
sub
iret
jecxz
repz
sbb
add
sub
fldt
and
jmp
cmpsl
mov
out
cmpsl
adc
push
adc
and
add
cmpl
mov
outsl
adc
test
insl
aad
dec
shld
adc
and
pusha
dec
stos
xchg
mov
pop
addl
movsb
push
mov
test
jmp
push
cmp
lcall
cmpxchg
adc
scas
out
lret
inc
mov
shrl
and
aas
imul
inc
mov
cmp
stos
cmp
fsubs
xor
pushf
pop
insb
repz
mov
cmp
jbe
jg
in
push
xorb
divl
xchg
push
mov
enter
mov
adc
test
loop
mov
fistpll
jmp
std
mov
fwait
popf
in
cwtl
inc
loope
cmp
pop
bound
pop
lods
sub
jae
mov
dec
ror
jo
xor
dec
pop
sti
sub
mov
pop
jno
pushf
in
icebp
jecxz
ja
cld
imul
xchg
pop
jno
lahf
test
push
mov
addb
push
gs
ljmp
cli
ljmp
pop
and
xor
in
cwtl
loopne
sbb
movsb
sbb
pop
adc
popf
mov
repnz
bound
repnz
in
lret
and
je
add
out
push
pop
cmp
pop
js
scas
std
adc
aad
sub
lahf
cmp
cld
das
mov
pop
xor
rcrl
sbb
out
stc
and
jns
clc
shll
pop
addl
cltd
adc
or
xchg
pop
sbb
xor
pushf
dec
push
pop
jle
mov
or
cmp
aaa
cmp
cltd
push
fnstcw
dec
and
gs
cmp
push
out
idivb
adc
in
fs
fwait
dec
cmc
icebp
mov
mov
adc
out
adc
pop
inc
out
adc
dec
mov
dec
xor
xor
cltd
push
mov
aas
lret
pop
push
mov
es
and
out
repz
scas
out
addr16
sub
cltd
and
movl
fiaddl
mov
or
call
jno
pop
mov
call
je
aas
fistl
lahf
add
mov
out
cmp
mov
push
out
xor
fwait
inc
mov
cmp
es
adcb
mov
cmpsb
outsb
repnz
add
out
push
popa
rclb
cs
loope
ret
adc
imul
adc
mov
js
lcall
sahf
leave
and
cltd
mov
imul
and
and
jae
flds
je
jmp
mov
push
sbb
popf
xchg
push
insl
adc
push
sub
push
mov
fdivs
outsb
and
das
xor
mov
inc
push
outsb
cli
pop
push
push
fidivrl
pop
test
jns
out
outsb
inc
loopne
dec
test
aad
sub
ljmp
repnz
jl
stc
or
sahf
xchg
fdivs
loopne
enter
adc
pop
mov
test
cmp
outsl
xchg
pushf
add
mov
cmpsb
push
xchg
enter
int
dec
xchg
xor
mov
xor
jl
and
cs
das
out
out
add
gs
test
push
lret
cmp
test
push
popa
xlat
ret
mov
in
and
xor
inc
movsl
dec
popf
in
pop
mov
add
jmp
xor
adc
mov
jg
ljmp
and
push
mov
bound
sub
in
cwtl
clc
scas
jmp
cmpsb
jmp
sarb
push
insb
xchg
shlb
inc
adc
jne
leave
mov
js
dec
dec
dec
fdivrs
repz
xchg
add
xor
aaa
test
jo
dec
or
cmc
out
jg
cmc
std
jge
pop
adcb
les
aaa
fidivl
sarb
adc
adcb
push
ficompl
sarl
mov
icebp
jmp
cmp
mov
sub
jp
inc
mov
fdiv
push
mov
cmp
pop
sub
je
test
inc
ret
pusha
push
cmp
cmp
ret
dec
sbb
mov
mov
into
pop
addb
es
pop
out
pop
sbb
jbe
push
mov
notb
xchg
cwtl
shl
repz
test
bound
ss
or
push
or
jecxz
mov
mov
out
and
jbe
popf
jo
ficompl
jmp
push
cmc
sub
dec
xor
add
cmp
arpl
mov
les
add
jo
jo
dec
mov
cltd
lret
repz
push
xor
jl
pop
sti
cmpsl
testl
loope
aad
xchg
pop
xchg
fmuls
mov
mov
ljmp
add
push
jns
leave
pop
in
stos
sub
sbb
test
addr16
clc
test
popa
pushl
jl
in
push
loop
negb
xchg
loop
jp
les
cmp
jle
aas
lods
push
mov
dec
push
push
ret
xchg
lret
pop
test
les
les
sbb
mov
jmp
fmull
cmp
test
jecxz
ret
mov
outsb
mov
into
loope
lahf
test
lds
add
jns
cwtl
ljmp
fs
sub
sub
loop
movsb
mov
out
or
in
iret
insl
add
out
xor
test
sbb
in
rdpmc
or
mov
push
lods
rcll
in
mov
stc
jns
adc
inc
ljmp
int
push
and
int
scas
xchg
jmp
nop
repnz
mov
int3
sahf
loop
jge
out
xchg
jle
jecxz
repz
xchg
popa
fcomip
notb
neg
call
mov
sbb
popf
dec
push
aas
les
andb
in
mov
shll
lock
mov
pusha
sub
mov
ret
mov
jae
loop
sbb
push
xor
xor
sub
insl
push
jmp
mov
ss
mov
push
mov
jo
adc
ja
mov
inc
shl
inc
lock
pop
mov
push
push
faddl
xor
ljmp
jle
imul
mov
sub
cmpsb
iret
mov
and
outsl
and
rcrb
in
sahf
cmp
cs
je
or
push
push
sbb
pop
iret
addl
jle
aas
push
and
outsl
pusha
call
negl
jne
nop
cli
in
fst
push
leave
jnp
mov
inc
ja
lea
sti
sbb
scas
loopne
lea
push
pop
enter
mov
daa
out
mov
aad
fistl
cmp
mov
pop
add
pop
inc
mov
mov
jo
ret
jecxz
adc
mov
enter
dec
adc
js
daa
les
mov
ss
add
xorb
movsl
nop
rcrb
and
mov
int3
add
cmc
push
fdivrs
xchg
dec
movsb
adcb
aas
dec
fistpl
fisttpll
nop
sbb
seta
push
or
popa
fsubrl
xorl
scas
test
lcall
adc
jnp
jmp
inc
or
xor
pop
cmp
or
gs
lret
and
xchg
dec
pop
xor
loopne
test
jge
or
dec
mov
push
push
mov
add
sub
push
xor
dec
jno
out
adc
mov
or
repnz
mov
punpcklwd
popa
dec
xchg
and
mov
test
or
int3
and
xchg
cmp
mov
xchg
lret
js
test
xor
call
adc
fsubs
aam
push
mov
aad
mov
sbb
push
dec
xchg
movsb
fnstcw
les
adc
ret
arpl
stc
jbe
mov
fcomps
inc
jge
mov
fwait
sbb
lcall
popa
dec
lret
sarl
ja
pop
push
jl
test
mov
jmp
addr16
sub
loope
addb
out
ja
popa
ja
fwait
pop
and
fidivrs
sbb
or
xchg
jmp
test
adc
push
fisttpl
inc
mov
adc
mov
inc
pushf
lret
xchg
lret
mov
mov
pop
inc
pop
xchg
xchg
mov
push
dec
repz
jns
pop
loope
jl
mov
xor
in
cmp
mov
pop
mov
arpl
pop
xlat
inc
jno
ljmp
cmc
ret
add
pop
mov
and
out
adc
push
imul
adc
scas
lock
movsl
sti
mov
lock
or
or
out
mov
es
push
arpl
and
out
jno
fcoml
stos
push
addr16
shrl
addr16
into
and
add
pop
daa
cli
cmp
and
lea
inc
pusha
add
ds
or
pop
push
jl
lock
or
xor
pop
sbb
adcl
ja
leave
pop
sub
mov
jmp
fcomps
pop
push
pop
test
push
aad
loop
add
testb
push
std
xor
add
jbe
cmpsb
iret
add
mov
dec
js
jno
pop
xor
fcompl
push
mulb
and
dec
or
jmp
data16
jno
jp
fists
loope
xchg
mov
stos
sbb
mov
cmp
sbb
lret
cs
cmp
add
aam
sub
inc
into
push
xchg
rolb
mov
mov
add
fiaddl
cmp
sbb
cmpsl
movsl
pop
insb
adc
jnp
shrb
add
xchg
xlat
imul
stos
call
mov
enter
dec
mov
iret
fbld
sub
inc
mov
lds
into
shrb
ret
cmp
mov
add
mov
aad
out
push
push
jns
push
cmp
sahf
or
rcll
lods
adc
adc
jmp
adc
fnstcw
js
sbb
enter
mov
mov
hlt
mov
int
add
cmpsl
or
into
xor
adc
out
dec
dec
pop
loope
dec
into
push
les
leave
cmp
fcomp
out
mov
or
sarl
xchg
lds
mov
mov
jmp
fbstp
jmp
pushf
xchg
pusha
mov
xchg
add
ja
lcall
push
push
mov
shlb
jbe
or
in
or
out
inc
or
mov
shlb
jmp
negl
in
enter
add
inc
mov
sahf
cmpsl
arpl
xchg
xchg
mov
pop
xchg
mov
jno
xor
inc
out
mov
mov
pusha
dec
mov
push
je
out
je
sub
and
stos
xchg
adc
jb
aaa
sub
mov
mov
push
inc
mov
xchg
int3
mov
pop
cmp
push
repz
sub
scas
inc
fiadds
sub
cmpsl
inc
loop
roll
fdivr
stc
add
mov
jbe
loope
sbb
xor
xchg
add
pop
bound
dec
sbb
or
data16
sub
fldcw
fwait
cmp
dec
pop
xchg
cmp
fistpl
aaa
stos
aad
adc
mov
and
cli
fstpt
clc
addb
xor
fisubl
xchg
jp
sbb
ds
pop
dec
jb
dec
cvtpi2ps
xor
cmc
lods
das
lret
cmp
out
or
aas
xchg
mov
adc
pop
cwtl
cld
fnstenv
cli
adc
pop
insl
nop
popf
frstor
ja
int3
push
cmc
jecxz
movsl
lret
fs
adc
mov
jnp
iret
adc
mov
sbbb
fsubl
sbb
xor
mov
vpaddusb
and
cmpsl
sbb
sub
std
jmp
bound
clc
sahf
mov
and
ja
insb
fstps
pop
and
into
aad
sbb
fnsave
sub
mov
xlat
call
sub
fisubs
push
mov
cmp
sbb
pop
pop
jb
hlt
test
out
xchg
lock
pushf
mov
arpl
sbb
sub
add
xor
mov
lock
jl
add
fidivl
lret
imul
loope
xor
enter
mov
push
test
xor
adc
sub
jmp
sub
std
mov
aas
stos
cwtl
and
lods
loop
xor
sbb
js
jl
pop
test
inc
jbe
inc
add
incl
iret
xchg
xor
inc
stos
mov
jne
je
cmp
sub
xchg
sti
adc
insb
lcall
push
xchg
pop
sete
push
mov
jmp
jnp
mov
repnz
outsl
pusha
push
sub
push
fwait
sbb
adc
jnp
inc
pop
ljmp
fldcw
dec
mov
push
lret
mov
push
test
and
pop
inc
jb
push
repz
xor
clc
je
cmp
jo
jecxz
inc
pop
adc
inc
outsb
jno
sbb
xchg
sub
mov
test
outsl
add
pop
mov
add
dec
push
iret
or
gs
pop
ja
repz
sbb
add
scas
loopne
mov
mov
jo
js
cmp
mov
cwtl
pop
inc
data16
subl
scas
xor
mov
dec
lea
sbb
cmp
subl
sbb
jnp
and
fsqrt
add
sub
mov
mov
jbe
mov
jns
inc
into
xor
or
fidivs
ror
inc
adc
popf
cmp
pop
sub
lret
arpl
xchg
in
xorb
lods
std
jecxz
fmull
je
pop
inc
rcr
std
lods
je
mov
mov
xor
imul
pop
add
iret
sar
jno
test
xor
pop
out
push
sar
add
movsl
jo
pop
es
das
push
cmpb
push
testb
std
xchg
mov
add
lods
cmp
jns
adc
les
shlb
push
jns
jmp
xchg
fcmovb
lret
enter
lcall
js
mov
je
sbb
popf
pop
mov
pop
pop
jmp
dec
xor
add
movsl
decl
pusha
popf
mov
and
mov
jg
cmp
push
adc
ja
add
gs
fs
adc
pop
mov
mov
jp
fs
arpl
js
xchg
xor
fnstsw
add
outsl
jmp
add
sarl
mov
pusha
ja
push
repz
sbb
ret
and
ja
fildll
mov
sbb
push
xchg
cmp
inc
mov
mov
jbe
clc
in
cmpsb
test
ja
xchg
push
loopne
push
inc
pop
movsb
pop
jnp
jmp
sahf
sub
test
and
and
inc
add
test
stos
xchg
out
andb
cmp
cmp
adc
pop
test
dec
push
aad
mov
jecxz
lea
push
repnz
mov
xor
xchg
jbe
mov
ja
or
fisttpll
js
pop
bound
ret
ret
jo
sub
orb
adc
gs
lret
test
lock
leave
les
leave
int
xchg
push
ds
inc
dec
pop
push
fdivl
push
lahf
jecxz
mov
xchg
rorl
icebp
ret
add
sbb
fcom
cmpsb
cmpsl
pop
fidivrl
sub
mov
fstpt
mov
xchg
or
sbb
cltd
rcr
add
adc
aad
mov
push
repz
rorb
jmp
sub
leave
notl
adc
scas
lea
pushf
iret
cmpsb
aas
xor
inc
scas
out
dec
into
sbbl
jecxz
into
or
rcrb
jmp
mov
pop
xor
mov
clc
fildl
jae
cmpsl
lahf
aas
ds
lods
mov
sub
lret
pusha
jg
inc
xor
fs
push
dec
lcall
loop
lods
jge
push
iret
les
clc
loope
dec
or
decl
lea
fidivl
pop
out
psllq
in
ror
dec
dec
fsubrp
jecxz
rclb
call
inc
orl
je
leave
shl
dec
or
pop
clc
mov
ss
call
ss
into
out
mov
and
xchg
addr16
mov
fxch
xchg
mov
xor
cltd
xor
dec
jp
jae
pop
mov
mov
ret
jp
into
sahf
push
inc
adc
cs
sbb
pop
out
push
jns
repz
xchg
ja
dec
add
mov
push
sub
pmulhw
ror
push
and
jbe
aas
dec
stc
cs
movsl
mov
pop
inc
jae
mov
inc
sbb
inc
ret
icebp
pop
hlt
dec
dec
push
mov
bound
mov
fdivrs
scas
repz
iret
push
fwait
test
dec
mov
lret
jge
xchg
sub
push
icebp
lret
xchg
cltd
insb
std
sub
mov
out
sbb
mov
movsb
ss
add
movsb
loope
pushf
shrl
add
mov
mov
pop
mov
cmp
jmp
int3
pop
mov
push
xor
mov
popa
daa
push
sub
rcrl
inc
xor
jae
xor
in
mov
sarb
lcall
xor
stos
cmpsl
push
mov
sub
push
push
push
outsb
and
pop
fwait
sti
mov
sbb
mov
into
loopne
aaa
mov
out
cmp
fldcw
jmp
sbb
fldl
ljmp
in
test
insb
xorl
fistl
mov
lock
mov
or
fiadds
sub
pushf
test
xchg
pop
sub
mov
xchg
jl
imul
push
xlat
out
insb
inc
xchg
sbb
mov
aas
out
lcall
out
aam
out
fwait
pop
jp
sbb
pop
jne
xchg
jecxz
in
sub
push
adc
sahf
lret
sbb
pop
out
add
ss
pop
or
mov
mov
or
inc
adc
push
push
and
arpl
xor
aad
iret
mov
jnp
jecxz
outsl
add
pop
cmovo
pop
cmc
add
movsb
enter
mov
enter
in
loopne
pop
pop
mov
dec
push
andl
lret
adc
mov
sbb
and
aas
int3
adc
jnp
insl
xchg
aam
add
sar
insb
mov
test
and
and
in
outsb
insl
dec
sbb
popf
xchg
test
popf
iret
daa
cmp
lea
popa
mov
xchg
fcmovne
fsts
and
rorb
in
push
insb
jne
mov
cmp
cmp
or
stos
aad
cmpl
push
jbe
dec
xor
das
xor
aad
xor
mov
lcall
xchg
out
cli
imul
cmpsl
or
mov
mov
je
data16
shl
test
xlat
das
pop
mov
push
pop
and
push
push
lcall
mov
pop
les
jmp
xor
xchg
popf
nop
lods
fwait
mov
mov
fcmovu
shl
cvtps2pi
xchg
nop
into
cld
test
and
leave
pop
and
lahf
in
stos
into
pop
insb
fnsave
lret
mov
sbbb
stc
es
ljmp
and
jmp
fwait
mov
fdivrs
xor
jecxz
jo
fdivrs
lea
in
mov
jge
inc
add
int3
push
inc
inc
fiaddl
adc
cmp
push
xchg
xchg
lret
push
cmpsl
push
aas
movsb
sub
push
addr16
sti
idivb
push
fwait
cld
repz
cmp
cmc
mov
or
jle
daa
and
mov
aas
out
pop
mov
add
notl
sub
sbb
leave
sbbb
adc
and
xchg
mov
loop
out
pop
jbe
sbb
xor
lds
jo
stos
es
mov
ret
dec
ficoms
xlat
or
jno
stc
scas
fsts
inc
push
fucomip
scas
loope
test
and
xchg
insb
js
sbb
inc
jnp
icebp
and
sub
jmp
inc
sub
repz
imul
in
pop
leave
push
inc
push
outsb
test
mov
mov
popa
pop
xlat
aaa
cltd
stc
int
jb
add
mov
mov
cmc
sub
shlb
add
push
fidivrs
mov
and
dec
adc
std
subl
repnz
scas
movsl
fsubs
xchg
fs
mov
sbb
fbstp
daa
dec
xchg
scas
push
int
test
adc
stos
xor
inc
mov
adc
jl
loopne
mov
push
mov
dec
int3
pop
xchg
jo,pt
lea
in
std
imul
add
xor
repz
push
add
lahf
pusha
iret
shll
jo
out
aas
fistpll
add
ror
in
arpl
lcall
push
mov
aam
mov
mov
cwtl
inc
into
jae
movsl
mov
add
pop
sbb
jno
push
orb
sbb
xor
insb
or
jo
test
inc
mov
sub
xchg
push
and
dec
flds
popa
scas
mov
repnz
mov
cs
push
lock
imul
fs
cmp
cli
push
fcmovb
sub
in
subl
sbb
xor
mov
jp
pop
sbb
mov
insl
in
in
sbb
adc
in
and
xchg
std
push
add
aas
sbb
jb
stos
int
xchg
loope
pop
mov
out
aaa
inc
ret
pop
sbb
int3
pop
loop
jmp
cmc
pop
into
or
rorb
addr16
out
rcrl
mov
and
sub
pop
inc
adc
mov
lret
jns
int
push
fisttps
std
mov
fcoml
in
hlt
cmc
dec
mov
mov
push
inc
cmpl
test
or
test
hlt
stc
shll
ss
push
lret
into
push
jo
sti
cld
cmp
xchg
xor
dec
pop
cmpsl
or
sahf
subb
pop
mov
sbb
pop
test
mov
data16
push
cmp
leave
mov
jg
fcmovu
movsb
negl
into
lahf
js
icebp
push
sub
fistpll
xchg
add
pop
fcoms
sarb
in
popf
push
pop
jmp
push
push
mov
and
adc
insl
cwtl
xor
notb
bound
fs
outsb
rorb
mov
call
jne
lcall
push
es
test
orb
sahf
int
incb
iret
jmp
push
popf
out
sbb
mov
call
stos
test
pop
dec
aas
repz
xor
push
mov
dec
mov
sub
dec
xchg
push
rcrl
ret
test
push
push
or
rolb
loope
jmp
lcall
xchg
or
push
in
add
aaa
add
mov
lcall
lcall
sbb
clc
jl
push
mov
or
xchg
jl
jbe
mov
xor
pop
inc
push
jl
loope
rol
out
inc
das
xor
icebp
jle
leave
cltd
in
mov
xor
mov
or
mov
lods
aaa
out
adc
rcrl
dec
ret
adc
and
mov
or
iret
arpl
sti
inc
pop
or
popa
add
xchg
lret
xchg
nop
push
inc
dec
testb
les
inc
jmp
adc
cmpsl
jmp
sbb
cwtl
ja
jo
cld
arpl
lret
mov
js
ret
sbb
lds
sub
je
mov
leave
pop
pusha
mov
mov
add
push
loope
pop
jecxz
mov
testl
test
sti
pop
dec
movsl
ja
addr16
gs
int
push
add
sub
rorb
fnstcw
shlb
mov
xchg
gs
adc
sub
sub
jnp
inc
push
cmp
mov
xor
out
push
or
xor
xchg
lea
mov
lods
in
jb
int
out
enter
aam
mov
aas
lcall
sbb
sbb
imul
lahf
xchg
into
jnp
enter
push
mov
rolb
inc
jge
lret
push
insb
hlt
pop
sbb
and
cmp
or
cmp
cwtl
jle
cmp
ret
adc
jae
push
lods
adc
inc
pop
mov
clc
adc
stos
test
fsubr
sub
or
cltd
fisubl
cmpsl
jb
mov
popa
mov
push
add
fcoml
sub
jge
mov
in
std
arpl
stc
mov
out
in
and
call
loope
and
push
or
jp
shlb
add
xchg
pop
adc
and
or
out
js
aas
lods
pushf
out
fidivs
pop
pusha
and
roll
adc
insb
popf
inc
mov
and
in
push
or
es
out
mov
lds
sub
ds
mov
lret
cmc
hlt
jne
in
stos
adc
pop
imul
addb
lds
pop
std
and
or
xchg
add
out
in
call
test
mov
pop
movsb
ret
sub
inc
cmp
adc
add
inc
jae
or
cmp
or
in
xlat
cmp
xor
int3
push
rorb
lods
push
inc
cli
push
jmp
daa
pop
fmuls
cmc
aas
cltd
jle
dec
lods
mov
dec
pop
pop
push
cs
sbb
mov
push
mov
es
fsin
stos
movsb
and
jl
jp
lods
push
lds
push
rorb
jl
outsl
cmp
adc
es
push
sub
xchg
mov
stos
add
mov
push
mov
sbb
xchg
push
sub
lahf
in
popf
inc
xchg
imul
xor
lret
mov
push
mov
push
jbe
in
dec
jne
mov
movzwl
pop
mov
les
and
xchg
in
rcr
xchg
cmpsl
call
push
xchg
fistps
sbb
pop
aas
ror
mov
ljmp
outsb
jge
dec
mov
cmpsl
mov
jge,pt
inc
cmp
iret
xchg
cltd
nop
xchg
adc
ret
sbb
xor
mov
cmpsl
dec
pop
loop
xor
cmp
cmp
mov
stos
shlb
jno
xchg
into
stos
inc
push
mov
or
outsl
jae
add
fmuls
add
dec
cmpsl
jo
inc
add
jnp
push
pop
pop
out
add
sahf
sbb
jb
fcmovu
inc
aam
adc
out
mov
nop
mov
jno
test
and
push
mov
pushf
aad
add
or
mov
cmpsl
insl
adc
lods
xchg
pusha
cli
dec
roll
fstl
add
in
mov
jmp
lds
outsl
lcall
mov
std
jbe
mov
add
lret
mov
call
pusha
mov
jmp
add
into
fdivr
cmp
aad
mov
add
xchg
cmpsl
cmp
shrl
rclb
scas
std
sbb
pop
xchg
in
jecxz
fiaddl
decb
andb
stos
mov
pop
scas
ljmp
xchg
jns
js
and
sarl
mov
adc
test
xchg
jo
dec
lds
stos
adc
sbb
jecxz
mov
or
mov
mov
sub
mov
sub
sbb
loop
mov
pop
ljmp
shll
and
in
mov
push
cmp
out
mov
rorl
lock
fcompl
out
rorl
sub
pop
out
fisubrs
xor
lahf
stc
insb
test
cmp
add
lcall
ret
fimull
jecxz
mov
xchg
mov
lods
arpl
xchg
and
cmp
mov
and
jge
mov
add
mov
mov
xchg
dec
jae
outsl
pop
pop
test
or
gs
das
ss
scas
dec
add
sti
int
xchg
lret
xchg
enter
or
pushf
ss
mov
idivb
xchg
mov
mov
jno
push
or
in
sub
addr16
adc
jo
loopnew
and
mov
rep
stos
bound
aam
xchg
shll
jecxz
rcll
dec
mov
jae
xchg
sub
ss
ror
pop
xchg
add
lea
call
insb
fcomps
adc
cmp
leave
dec
xchg
hlt
adcb
and
adc
xor
mov
pop
dec
jne
popf
bound
xor
push
fwait
inc
xchg
dec
mov
je
jmp
ja
hlt
and
and
icebp
mov
jae
xor
hlt
or
push
push
out
push
lret
lods
cld
jae
sbb
mov
or
ljmp
jmp
fmull
test
inc
sub
inc
push
andb
and
cs
pop
in
aaa
push
cmp
jge
push
fisubrl
pop
fs
in
movsb
cmc
dec
std
fs
jmp
xchg
loop
popf
mov
pop
cmpxchg
js
lock
mov
scas
sub
popf
mov
flds
mov
xor
add
jbe
js
and
pushf
das
hlt
cwtl
add
mov
adc
xor
adc
fsts
lock
vhaddpd
and
jne
in
subl
loopne
dec
hlt
mov
insl
add
jg
or
fs
call
andl
ja
cld
pop
and
test
rcll
int
lret
dec
pushf
call
xchg
sbb
pop
lret
mov
lcall
and
ret
sbb
into
in
pop
xchg
rclb
ficoml
out
push
inc
xchg
xlat
cmc
adc
jmp
fidivs
jg
pop
and
bound
mov
insb
xchg
outsb
ret
jmp
frstor
inc
add
inc
xor
in
jo
xchg
add
inc
mov
ja
lea
cmp
fists
aad
push
or
mov
add
xchg
imul
imul
mov
ret
cmp
sbb
add
clc
xor
daa
mov
arpl
mov
fldl
enter
mov
cmp
push
imul
fcmovne
pop
cli
outsb
inc
dec
cli
adc
fnstsw
mov
addb
ja,pn
mov
loopne
movsl
sub
xchg
test
or
pop
mov
cmp
nop
add
dec
xor
ja
js
or
xchg
imul
jg
aam
push
sub
sbb
pop
mov
add
push
jl
sub
stc
test
push
adc
dec
mov
sbb
shl
sbb
test
pop
push
ja
mov
dec
cld
push
push
out
outsb
fdivrl
test
push
test
pshufw
int3
mov
mov
movsl
xchg
es
test
sti
out
jb
jmp
jmp
pusha
mov
bound
mov
stos
mov
mov
outsb
mov
cmp
stos
or
daa
test
incl
cmp
push
test
add
pusha
insb
arpl
icebp
in
cltd
jae
mov
daa
dec
aam
mov
jno
icebp
sbb
flds
scas
mov
xchg
xlat
push
and
pop
out
jns
or
cmp
pushf
and
jl
hlt
jg
mov
mov
mov
cmp
mov
cltd
out
leave
or
jmp
lcall
push
std
ljmp
es
xchg
cs
sub
xchg
sbb
sub
jae
in
inc
push
add
loop
dec
fwait
xor
add
aam
xchg
loopne
jb
movsb
jp
xor
push
add
pop
dec
dec
movsb
ja
js
pop
push
daa
mov
arpl
call
xchg
push
outsl
lods
pusha
ss
arpl
push
cmp
dec
out
dec
pop
ja
jbe
add
pusha
push
mov
mov
or
mov
xlat
add
pop
js
xchg
pop
popa
sub
pop
mov
mov
xchg
cmp
subb
cmpsl
mov
add
in
push
cmp
inc
jge
test
cmp
jns
pop
jne
xor
ftst
in
jl
cltd
add
cmp
pop
stos
shr
movsb
cmc
lahf
xchg
arpl
fisttpll
lds
mov
stc
sbb
xor
sbb
mov
fbld
fiadds
mull
cmp
lret
repnz
push
sbb
jge
out
out
mov
cwtl
int3
pushf
pop
cltd
and
ljmp
repz
jb
ret
js
pop
pop
mov
add
mov
sahf
stos
pop
insb
and
pop
mov
and
add
pusha
mov
data16
rcll
xchg
movsb
mov
push
rolb
push
mov
lea
cli
movl
mov
in
ja
and
cs
repz
sbb
xchg
mov
scas
sbb
pop
pusha
rorl
cmc
mov
and
cwtl
pop
pop
sti
xchg
int3
and
aaa
lret
cmp
aaa
into
jb
out
mov
sub
nop
and
mov
sub
je
jns
dec
mov
inc
mov
jno
and
fs
fdivrs
das
mov
jl
mov
dec
mov
jb
cmp
lahf
pushf
dec
pop
sbb
fsubl
jnp
or
inc
jbe
daa
ret
cmc
movl
jmp
inc
frndint
mov
inc
pusha
jo
mov
and
xchg
call
cmp
push
into
xor
in
scas
mov
push
add
test
orl
dec
repnz
push
fldcw
lock
popf
xor
add
ficomps
scas
sub
cmp
push
add
js
add
mov
add
or
cld
push
movsl
loope
cmpsl
lcall
aaa
rcll
lret
gs
adc
stc
mov
mov
int
or
cwtl
fldz
push
cltd
ja
cmp
mov
repz
xchg
mov
pusha
leave
gs
ja
mov
or
sti
push
sbb
push
in
roll
inc
out
add
lcall
cltd
mov
xchg
aam
movsl
lods
pop
ret
rcrb
and
sub
xor
loope
fisubs
pop
mov
ret
pop
stc
xchg
hlt
push
pop
mov
das
popf
ja
push
or
enter
push
pop
or
pusha
or
push
push
push
push
test
rcrb
and
addr16
mov
xchg
jno
dec
mov
cmc
mov
movsb
pop
lret
or
or
ja
mov
data16
fsubs
push
lods
or
loop
stos
jno
and
mov
dec
sar
sub
punpckhwd
adc
xorl
sarb
or
fmull
or
mov
xorb
out
inc
add
enter
jns
jno
jp
jns
push
xchg
icebp
je
in
push
sbb
sbb
cmp
sbb
mov
and
js
enter
mov
ret
add
enter
or
jp
fbld
shr
in
je
fs
add
xor
or
sbb
jp
xor
add
adc
rep
jns
aam
bound
add
arpl
imul
sbb
test
pop
loop
and
arpl
inc
scas
cwtl
xor
pop
and
int3
roll
movsb
inc
popf
sbb
fcomp
and
and
and
outsl
cs
or
mov
dec
imul
out
push
mov
jne
mov
std
mov
in
clc
xor
sbb
add
inc
push
dec
lahf
dec
stos
mov
les
pop
adc
cs
js
cmp
rolb
cwtl
mov
jae
in
les
jae
cmp
in
pop
outsb
mov
push
pop
movsb
les
mov
in
cmpsl
sbb
jne
pop
mov
out
xor
add
mov
mov
les
fcomps
xlat
arpl
aad
jne
mov
pop
sbb
shlb
shl
push
das
push
jae
xchg
es
or
mov
in
mov
iret
scas
mov
push
mov
push
jo
aam
xor
stc
mov
sbb
loope
sub
fisubrl
fdivrl
rcr
js
xchg
fiaddl
cmp
je
sub
sub
push
mov
out
rcr
lods
out
adc
aam
cmpl
mov
aad
push
rorl
out
lret
enter
pop
mov
std
adc
sub
out
jns
ret
xchg
lea
movsl
ljmp
push
stc
ret
mov
adc
out
std
scas
ljmp
aaa
insb
ret
fisubl
xlat
lds
push
insb
pop
ftst
je
hlt
scas
and
sbb
pop
popf
movsb
cmp
mov
outsb
ret
and
ja
rol
xchg
mov
sub
and
xchg
cmp
mov
xorb
xor
sbb
push
fimuls
fisubrs
out
push
js
lcall
loop
loopne
fucom
pop
pop
mov
sbb
into
pop
push
cmpsb
addr16
xor
xor
jg
mov
movsl
inc
aam
insb
mov
sub
push
mov
inc
add
iret
sbb
test
insb
call
sub
mov
mov
or
das
mov
fwait
stos
sub
cmp
cmp
push
or
mov
push
push
imul
stos
inc
cmp
jo
xchg
mov
mov
push
std
jbe
outsl
xchg
xchg
push
ss
cmp
test
sarl
mov
jb
movsl
lods
je
cli
jmp
or
add
mov
push
sti
adc
movsl
bound
aam
mov
pop
cli
push
ljmp
sbb
jo
dec
dec
xor
int3
out
push
sub
push
imul
sub
leave
mov
jmp
ret
andb
aaa
xor
mov
or
inc
mov
and
pop
pop
push
adc
mov
and
xchg
sub
mov
hlt
and
cmpl
sub
sbbl
jl
lret
int3
pop
push
or
xor
sub
pop
ds
adc
test
ret
cmc
jle
mov
xchg
loope
adc
cmc
adc
add
xchg
int
push
cmpl
push
add
scas
pop
sub
sarl
lock
or
ret
into
enter
std
or
or
cmp
push
sub
call
jns
and
lcall
fnsave
cmp
mov
out
aaa
repnz
and
scas
out
mov
int
xrstors
clc
loopne
mov
jge
cmp
or
jle
das
pop
adc
lret
js
mov
add
push
loope
sub
inc
lods
imul
pop
cmp
jge
hlt
imul
xor
fldcw
jp
xor
pop
loope
push
xor
xrelease
gs
sar
movsb
clc
add
push
sti
jns
sbb
xor
aas
push
push
jle
sub
dec
inc
loope
lock
inc
iret
pop
ja
mov
dec
push
push
fldenv
mov
lret
aam
dec
movsl
add
push
mov
ffreep
jo
xchg
xchg
xor
add
fiaddl
pop
sub
je
push
push
mov
dec
sbb
ljmp
xchg
mov
sub
sahf
jno
bound
addr16
xchg
mov
ret
movsl
pop
sbb
fwait
cmp
cmc
scas
test
aas
xchg
push
inc
xchg
daa
mov
loope
mov
out
stos
and
or
xchg
and
int
cmp
repz
inc
add
pop
adc
std
out
lods
xor
mov
cmp
mov
and
push
push
xor
fistpll
and
pop
loopne
out
mov
sahf
pop
jmp
pop
cs
ret
jo
leave
scas
in
shlb
lret
stos
mov
in
sbb
add
mov
mov
shrb
into
add
shl
add
jae
aam
ljmp
femms
enter
fsubrl
outsb
test
inc
fimull
jmp
js
outsb
cmp
movsb
sbb
imul
ret
mov
mov
or
sub
xor
ljmp
or
iret
add
xor
push
mov
cmp
ret
rclb
aas
add
mov
fldcw
pop
mov
mov
lcall
pop
sbb
dec
mov
mov
cld
popa
inc
xor
jl
jmp
adcb
mov
dec
andb
and
jb
mov
mov
pop
push
push
and
inc
ds
xchg
test
adc
pop
sarb
jecxz
jle
xor
gs
mov
outsb
push
jns
sar
push
imul
scas
and
and
mov
pop
jg
sti
jp
std
dec
mov
dec
popa
pop
lods
pop
jge
jle
and
cmp
xor
mov
fs
inc
cmpsb
mov
jle
mov
pop
aad
adcb
cmp
cltd
call
dec
xor
push
sbb
sub
add
or
xlat
cwtl
pusha
mov
pop
inc
jmp
ret
add
es
out
arpl
lea
fwait
lods
fxtract
aad
shlb
xchg
divb
lret
in
xchg
sbb
scas
xchg
out
pop
stos
or
out
scas
adc
pop
popf
adc
jb
aas
mov
xchg
mov
mov
jnp
jge
mov
push
fadd
mov
scas
xor
jp
xchg
xchg
pop
test
jge
pop
outsl
lcall
nop
shrb
add
push
mov
or
les
jae
fisttps
inc
mov
scas
test
and
loop
aas
xor
jg
shrb
jl
dec
sub
mov
lods
cld
jecxz
les
repz
pop
jge
mov
repz
and
aad
fldl
out
rcll
maskmovq
notl
pop
jne
xchg
push
stc
pusha
popf
pop
into
inc
pop
adc
or
sbb
push
cmpsb
insb
and
mov
stc
mov
or
jbe
xchg
add
fisttps
xor
push
jl
adcl
mov
inc
outsl
lcall
add
mov
mov
fisubs
push
or
push
ja
adc
sbb
shlb
daa
inc
push
mov
pop
mov
cwtl
movsl
mov
test
mov
in
roll
fimuls
xor
pop
loopnew
lea
ret
orb
daa
ja
jg
pop
xabort
add
lea
mov
jp
mov
pop
loopne
nop
inc
dec
or
xchg
cmc
dec
rcrl
cwtl
xchg
dec
cmp
mov
idivl
jmp
clc
jge
pop
cli
sub
adc
xchg
into
jbe
add
in
bound
mov
cmp
out
or
dec
or
push
cmp
jne
insb
xlat
hlt
jecxz
push
arpl
push
inc
sbb
or
int3
pop
or
clc
pop
pusha
cmp
adc
enter
add
mov
pop
cmp
sub
icebp
popf
dec
out
outsb
lcall
scas
lods
mov
add
sysret
bound
push
das
xor
cmc
inc
arpl
scas
mov
add
call
ret
ficompl
stc
xchg
rorb
xchg
sub
imul
push
cli
shlb
lret
pop
test
add
jae
adc
sbb
bound
pop
xor
fdiv
add
subl
test
xorb
xchg
and
jns
pop
cwtl
jecxz
adcl
mov
cmp
sbb
mov
cs
fs
jbe
push
ljmp
jmp
loop
jno
in
out
cmp
sbb
loop
mov
xchg
sbb
scas
sub
dec
sahf
xchg
fistpl
pop
cmp
loope
in
xchg
or
mov
pop
lret
xchg
sub
xchg
rorb
movsl
ja
and
idivl
shrb
jecxz
mov
pop
lcall
mov
mov
incl
testl
popa
inc
fwait
dec
mov
out
lret
sub
cmp
into
mov
inc
push
lods
adc
mov
lret
jno
andl
mov
cmc
or
mov
repnz
jns
pop
gs
mov
leave
sti
xlat
stc
int3
leave
ret
sbb
jg
dec
cmpsl
bound
xor
sub
sub
fistpll
sbb
xchg
mov
cmp
inc
inc
cmpl
test
out
dec
pop
test
lock
loope
cltd
pop
mov
xchg
jg
sub
ljmp
sti
je
repnz
into
pusha
inc
mov
mov
in
pop
aad
or
or
sbb
and
in
xor
cmc
dec
push
scas
mov
cmpsb
ja
inc
rorb
mov
stc
ss
loope
add
push
mov
jmp
adc
fucompp
mov
cmp
mov
into
pop
xor
push
push
mov
xor
repz
movsb
into
xlat
jae
cld
ds
icebp
rsm
jmp
mov
sub
or
stos
roll
push
pop
movsb
sub
push
push
cmp
mov
mov
pop
cmp
jbe
sub
mov
gs
rol
loope
jo
dec
jge
clc
pop
dec
cltd
cwtl
or
out
mov
dec
mov
ret
test
mov
jne
push
cmc
mov
std
or
or
sub
lcall
test
out
std
push
push
lock
scas
add
insl
subb
call
sbb
fs
int3
outsb
push
sbb
sbb
add
rcrl
jl
ret
jne
mov
rclb
stos
rorl
shl
sub
test
mov
sbb
xchg
cltd
shl
add
cmp
insl
mov
daa
pop
aam
push
daa
cwtl
lods
mov
mov
gs
sub
cmpsl
pop
cld
cmp
mov
in
fstps
cmp
ljmp
aas
push
int
mov
xor
popa
ljmp
fwait
push
jg
fidivl
pop
push
les
and
sbb
or
mov
sbb
cmp
sbb
negb
lret
ss
xor
outsl
push
pusha
mov
in
filds
lret
jl
stos
push
jg
shrb
cld
arpl
jb
adc
and
jmp
adc
ror
pop
jb
fwait
jb
out
xchg
and
inc
insl
push
sub
cmc
lea
and
ss
mov
pushl
jns
call
mov
xor
lahf
cmc
and
push
add
jne
mov
adc
mov
jge
into
insl
mov
and
push
xchg
xchg
push
xor
insl
pusha
inc
sbb
inc
push
test
mov
mov
loop
aad
lcall
cli
lds
jmp
pop
cltd
clc
inc
lret
push
mov
mov
jo
push
and
leave
xchg
dec
and
test
dec
outsb
jl
dec
pop
stos
push
mov
pop
sub
leave
int3
cmc
out
push
iret
aaa
add
push
xor
mov
lods
and
in
xchg
or
ljmp
loop
xchg
sti
insl
js
mov
jae
adc
in
push
jb
bound
jne
dec
or
in
jnp
loopne
add
out
xchg
jns
xorl
or
sti
shrl
stos
inc
mov
out
mov
sar
xchg
ljmp
rcrl
repnz
xchg
loopne
fiaddl
int3
sbb
mov
shr
xchg
adc
les
and
jb
fiaddl
aad
inc
xor
inc
lods
dec
xchg
jl
push
popa
lods
xchg
ss
cmpsl
rol
mov
cmp
or
push
sahf
lret
add
nop
lock
fisttpl
mov
mov
xchg
mov
jns
fadds
fnsaves
push
repz
rcrl
xchg
lahf
pop
lods
xor
lock
fidivrl
cmpl
xchg
cld
mov
bound
dec
or
and
xchg
cwtl
pop
gs
push
push
or
testl
mov
mov
add
or
jp
in
std
dec
iret
test
scas
aas
dec
scas
ret
imul
out
lods
add
pop
jg
mov
xchg
leave
out
insl
data16
out
mov
mov
inc
frndint
cmp
and
jmp
inc
ljmp
or
pop
xchg
cmp
push
mov
xor
inc
mov
inc
push
scas
jno
cmp
dec
cmp
and
in
cmpsl
adc
push
adc
cmpsl
jmp
enter
xchg
inc
pop
push
xchg
cmp
sbb
imul
and
std
pop
bound
lret
data16
imul
int
jb
push
mov
scas
sar
mov
nop
inc
adc
inc
pop
mov
mov
arpl
fsubp
aad
jns
and
push
push
imul
js
adc
bound
scas
cwtl
fs
xor
fadds
in
cwtl
add
xor
aas
pop
pop
and
cmp
fwait
mov
call
inc
lcall
sbb
jmp
pop
push
dec
fnstsw
je
movsb
xchg
rolb
adc
std
adc
adc
pop
mov
cld
in
xor
push
scas
pop
imul
push
push
loop
repz
pop
imul
mov
mov
gs
dec
sub
sarb
jns
sub
and
outsl
testl
jne
xchg
in
dec
sub
inc
xchg
mov
sbb
or
shl
push
andb
mov
lds
xor
ja
sub
adc
or
aas
or
cmp
add
add
add
das
mov
push
fbstp
jge
fsubl
aad
stos
test
addr16
pop
hlt
rorl
push
push
mov
jge
xchg
xchg
sub
lret
mov
outsl
mov
test
adc
loope
xorl
aas
sbb
inc
data16
mov
loope
movsb
add
lods
sahf
add
loop
nop
adc
push
clc
loopne
fldt
cmpsb
sti
subb
fwait
out
out
mov
cmp
fdivp
clc
js
dec
test
gs
bnd
fbstp
divb
cmc
repnz
shll
add
push
ficompl
push
adc
jne
mov
mov
sbb
sub
packssdw
sub
push
clc
leave
ss
adc
push
pop
mov
ljmp
lods
in
cmpl
fcompl
insl
mov
xchg
add
pop
repz
and
mov
xor
mov
loopne
out
aaa
jb
mov
and
ds
arpl
sbb
stos
push
jae
sahf
adc
cmp
das
mov
xchg
arpl
aad
jnp
test
ljmp
iret
pop
movsb
jecxz
sti
dec
aas
out
in
mov
fdivs
ret
jns
gs
stos
jmp
pop
mov
lahf
mov
xor
js
or
mov
adc
lahf
mov
jns
mov
ja
add
dec
push
popa
bound
pop
inc
in
jb
movsl
ja
adc
sub
fidivrs
lret
in
pop
dec
mov
loopne
int
dec
push
and
hlt
push
cwtl
arpl
xor
jne
rcl
or
push
in
adc
sti
pop
dec
imul
outsl
hlt
ret
scas
xlat
inc
jmp
inc
fst
test
adc
jecxz
and
mov
ss
nop
test
xchg
add
push
jb
ljmp
in
test
pop
push
mov
andl
arpl
adc
xchg
sbb
lret
mov
repnz
fwait
out
dec
sbb
push
cs
out
jl
out
mov
lods
pop
outsl
std
mov
push
sarl
notb
lret
mov
pop
lcall
sub
inc
add
les
fs
ja
iret
xchg
xchg
cmpsb
push
inc
xchg
int
push
scas
mov
out
xchg
lcall
movsb
mov
xor
inc
mov
lock
inc
mov
sub
inc
out
add
sbb
imul
mov
adc
adc
mov
sbb
mov
add
xchg
mov
sbbl
ficomps
sbb
ja
adc
daa
or
sti
andl
dec
mov
add
scas
sub
cmpsl
xchg
aaa
lea
xor
push
movl
jne
xor
xchg
and
jnp
sar
lahf
xchg
sub
push
or
imul
add
sub
and
dec
out
mov
in
imulb
mov
xchg
dec
and
sbb
push
and
loope
push
lds
ja
andb
addr16
push
jmp
mov
rcl
insb
xchg
or
adc
subl
xor
mov
push
push
in
das
mov
sbb
stc
jno
push
sub
xlat
mov
lock
out
xchg
out
jp
sbb
insb
bound
popa
mov
sbb
mov
lods
push
or
test
add
out
push
das
mov
in
add
add
mov
mov
push
and
icebp
sahf
into
orl
pusha
sbb
xor
mov
xor
ss
fs
rorl
pop
mov
fwait
cld
or
xchg
and
hlt
lods
cmp
inc
aas
icebp
adc
adcb
lret
sahf
rcl
xor
inc
adc
dec
ljmp
iret
outsl
divb
push
jle
pop
xor
out
jl
push
scas
push
clc
ds
adc
jp
sbb
cmpsl
and
or
inc
shlb
inc
inc
ret
cmp
jmp
push
shll
adc
or
stos
push
xorl
sbb
xor
mov
mov
push
loop
adc
lcall
mov
insl
pop
jecxz
ljmp
pop
mov
and
cltd
mov
in
nop
shl
lods
shll
push
adc
loope
mov
movl
cmp
inc
fisubrs
xlat
in
mov
imul
cli
out
stos
xchg
fstpt
lahf
lods
rcrl
test
clc
mov
xor
xchg
xchg
insb
inc
imul
shll
fstl
pop
bound
addr16
push
js
aas
pop
rorl
cwtl
push
js
push
popa
call
jnp
scas
popa
mov
das
mov
and
inc
aam
mov
xchg
sbb
je
dec
in
loopne
sbb
push
mov
mov
outsb
shlb
out
push
mov
dec
hlt
lea
call
mov
loopnew
or
mov
dec
repz
jo
loope
scas
aam
xchg
ss
je
jp
mov
fsubrl
mov
adc
cmp
mov
stos
xor
add
nop
jns
dec
ret
mov
xchg
adc
jle
mov
lds
jnp
xchg
popw
cmp
leave
mov
int
addr16
mov
push
or
out
sbb
adc
fsubrl
lret
and
shll
cmp
shrl
test
inc
mov
stos
mov
dec
mov
sbb
cs
mov
insb
xchg
out
cwtl
xchg
and
lock
sbb
jne
mov
pop
mov
aad
push
ret
jb
push
dec
cld
add
cld
scas
mov
subb
adc
lret
cmp
jp
lcall
lret
dec
aaa
sub
and
icebp
lea
and
jge
jmp
mov
xchg
fstp
pop
mov
jne
inc
lahf
cmp
mov
mov
sub
in
stc
push
scas
sbb
sbbl
cld
dec
movsb
sbb
or
pop
int3
cs
sub
clc
xchg
mov
xchg
push
push
fwait
mov
ret
xor
xchg
out
ficomps
add
mov
mov
rcrl
and
mov
lea
xchg
mov
push
ret
inc
xchg
mov
clc
inc
call
daa
jnp
mov
mov
dec
sbb
scas
push
mov
das
fsts
inc
push
test
jbe
call
inc
ja
dec
push
inc
jg
dec
cmp
seto
mov
addr16
xor
mov
lods
and
lods
push
loop
mov
cmpsl
test
push
cmp
adc
ja
pop
cwtl
loopne
dec
imul
int
mov
adc
cmp
add
loop
rorl
and
adc
enter
push
les
pop
sbb
mov
mov
test
shrd
sub
xor
jmp
imul
stos
movsb
cmp
dec
in
fisubs
fwait
out
mov
mov
or
jno
in
jnp
xor
jp
jle
and
call
shl
das
or
stos
fsubl
outsb
ret
adc
cltd
pop
mov
call
movsb
cs
aam
dec
adc
cmp
int
fs
jmp
push
mov
pop
lock
push
jae
mov
mov
test
ljmp
insl
hlt
fldenv
sub
sub
aad
xchg
lods
sarl
imul
pop
xchg
mov
xlat
movsb
and
es
imul
sar
or
inc
mov
xchg
lock
dec
js
jo
fimull
mov
pop
cmc
out
sbb
mov
mov
insb
push
mov
enter
into
mov
push
jns
jmp
stos
or
test
pop
repnz
lds
insb
pop
add
inc
test
push
or
jbe
fsubrl
cwtl
cld
add
add
hlt
sbb
mov
test
xchg
insb
inc
push
jo
inc
dec
pop
repz
sbb
adc
lods
jecxz
cwtl
sarb
cmpsl
adc
pop
mov
inc
pop
push
ret
pop
mov
jno
lock
sub
cmp
add
bnd
test
and
xchg
xchg
call
mov
popf
cmp
add
mov
cmc
mov
add
and
rcll
je
fnstcw
inc
scas
dec
sahf
pop
pop
mov
mov
or
fldl
fs
push
cmp
cmp
mov
inc
testb
jno
fld
call
out
out
mov
in
add
ja
out
cmpsb
leave
pusha
hlt
iret
add
out
adc
xchg
out
mov
push
sbb
pusha
mov
call
xchg
out
hlt
add
das
jecxz
add
pop
aas
je
inc
pop
out
mov
stc
stos
stos
cwtl
enter
sarl
adcb
lea
add
xchg
insb
inc
dec
popa
fisubrs
or
test
lcall
push
stos
loop
repnz
lret
xor
inc
aaa
push
je
dec
jmp
push
sahf
cltd
pop
sbb
es
dec
push
xchg
fdivr
mov
push
push
mov
mov
dec
cmp
loope
adc
movsl
push
imul
cmp
cmp
imul
mov
es
sub
mov
ljmp
fisttpl
pop
rorb
imul
jae
jl
or
addl
repz
sub
in
jge
jle
sbbb
xchg
addr16
dec
insl
repnz
add
jo
and
xorb
out
xor
dec
out
jl
sbb
loopne
addr16
sahf
push
sbb
ret
loope
pushf
inc
mov
pop
mov
adc
into
int3
push
aam
icebp
sar
dec
scas
popl
pop
jmp
je
mov
xor
scas
jns
adc
jecxz
push
divl
mov
sbb
call
pusha
xor
adc
imul
inc
out
scas
pop
mov
std
cmova
fnstcw
fs
or
pusha
or
jns,pn
cmpsb
mov
dec
dec
popa
insb
or
cwtl
mov
jbe
push
mov
call
stos
mov
nop
enter
and
cmp
sarw
xchg
int
sbb
gs
mov
je
int3
sbbb
xchg
fisubs
vmwrite
popf
mov
mov
pop
jmp
lret
dec
sti
pop
loope
or
inc
push
sti
aaa
push
add
adc
mov
iret
dec
fsts
fstp
or
jl
fbld
and
movsb
cs
test
hlt
cmp
pop
xchg
shrl
rep
outsl
test
xor
js
adc
dec
inc
lret
pop
adc
dec
int3
or
hlt
pop
vminsd
icebp
iret
cmp
jmp
fists
fbstp
dec
inc
xor
gs
and
popf
sahf
pop
imul
jbe
mov
inc
lods
aas
dec
sub
xchg
lods
icebp
push
xchg
in
sbb
adc
or
pop
bound
mov
arpl
mov
adc
sub
int3
and
jae
test
insb
mov
xor
fmull
ret
lea
push
test
shl
pop
shl
adc
shrb
add
dec
sbb
popf
call
test
pop
xor
sub
xchg
loope
lahf
outsb
mov
xor
out
loope
lea
jecxz
add
les
inc
mov
shlb
movsb
testl
pop
xor
cmpb
loopne
jmp
jbe
xor
popa
test
lods
popa
pop
lock
mov
jge
cmp
mov
fnsave
mov
pop
cmpsb
repz
cmp
xor
sahf
mov
ss
mov
faddl
shrl
jo
add
rcrb
sarb
and
test
jne
jmp
mov
movsl
mov
test
pop
aad
inc
es
mov
movsl
pop
js
add
add
pop
clc
mov
xchg
mov
into
push
xlat
cwtl
loop
ljmp
lds
mov
clc
pop
dec
and
sub
nop
pop
sbb
add
xor
xorl
out
jne
iret
aas
arpl
aaa
dec
pop
cmp
jo
jno
pop
push
mov
pop
mov
mov
xor
out
mov
bound
xor
cmp
xchg
mov
popf
xchg
cmp
cmpsb
pop
dec
int3
pusha
push
jo
jnp
cmp
adc
gs
xchg
shlb
pusha
out
lods
movsl
push
sti
js
sbb
sub
sbb
add
cwtl
nop
rcrl
hlt
xchg
and
add
mov
ficoms
dec
push
xchg
es
sarb
inc
pop
sbb
sahf
test
mov
stos
pop
pop
xchg
inc
and
mov
scas
mul
es
in
cmp
popa
and
xchg
inc
cmp
imul
jecxz
jmp
cli
jecxz
sti
xlat
xchg
dec
clc
pop
xchg
add
mov
shrl
test
popf
mov
fidivs
dec
fldenv
add
mov
mov
insb
inc
mov
data16
repnz
cs
sbb
test
jb
out
xchg
cmp
mov
out
scas
test
shrb
cmpsl
outsl
aad
aam
mov
call
adcl
movsl
inc
mov
stos
stos
in
cli
sub
mov
mov
jle
dec
and
push
xorl
cld
sub
xchg
adc
bound
dec
and
add
jns
cmp
test
dec
cwtl
mov
jbe
mov
movsl
sbb
pop
sub
mov
notb
shll
pop
and
push
push
jle
inc
stos
xchg
es
nop
stos
imul
xor
sub
dec
ljmp
insl
jge
shlb
adc
or
and
sub
imull
sub
inc
add
rcrl
mov
adc
loopne
arpl
mov
sub
add
pop
xchg
adc
jbe
into
into
jecxz
mov
jno
loop
push
add
xchg
push
adc
data16
fcmovu
dec
test
lcall
into
gs
cmpsl
mov
outsl
and
imul
mov
mov
adc
sbb
and
lock
cmpl
clc
and
daa
xchg
imul
pop
pop
xchg
and
xchg
daa
outsb
out
es
mov
jmp
out
out
std
std
push
push
pop
jo
cmpb
jle
test
or
push
cmp
ds
and
jne
test
sarl
sbb
adcb
in
and
sub
arpl
adc
std
stos
push
imul
mov
aas
in
fdivs
adc
sbb
popf
pop
push
pop
aam
int3
adc
fiaddl
shll
add
std
pop
sub
xor
mov
cmpb
and
dec
fcmovnb
ds
pop
test
out
test
das
outsl
test
cmp
and
push
js
dec
je
sub
sub
cmp
loopne
cwtl
pop
mov
pop
cltd
xor
aas
in
pop
sub
loop
inc
dec
daa
dec
sub
ljmp
getsec
mov
adc
push
xchg
lahf
dec
clc
dec
jge
sub
fisubrl
pop
outsb
mov
mov
in
dec
mov
std
xchg
stos
call
dec
lret
clc
scas
fildll
xchg
and
mov
in
js
pop
clc
mov
or
dec
repnz
insl
rolb
incl
sub
sarb
and
jmp
cmp
mov
movsb
or
mov
inc
imul
jne
lods
jmp
sub
imul
dec
mov
cli
movsb
sbb
pop
or
mov
inc
add
xor
fisttpl
pop
in
pop
pop
pop
fwait
mov
push
cmp
adcb
push
mov
sub
dec
cmp
ja
fdivrs
cld
out
ret
inc
push
adc
mov
add
push
xlat
arpl
int
add
movsl
mov
add
pop
fldenv
out
pop
out
imull
adc
mov
jge
and
dec
dec
leave
inc
ja
mov
mov
add
xchg
sub
adc
lods
es
test
pop
std
mov
push
mov
insl
jbe
out
mov
popf
cwtl
xchg
imul
rcr
xchg
pop
mov
sub
jmp
loopne
fdivrs
scas
lods
jae
movsb
clc
paddd
cmp
addr16
pop
add
pusha
and
sbb
insl
bound
les
mov
jns
lret
cli
pop
sbb
ljmp
test
insb
test
push
call
push
lea
xor
test
lahf
incb
and
pushf
aas
xchg
xor
std
jl
xor
leave
cmc
adc
pusha
movsb
ds
jmp
mov
sub
cmp
push
lret
enter
add
mov
fstpl
add
sbb
popf
xchg
mov
cltd
aam
lods
imul
adc
pop
push
jns
xchg
xchg
mov
into
cmpsb
xchg
ja
nop
push
and
mov
clc
ret
dec
sbb
dec
nop
cs
sbb
dec
xchg
cmc
or
push
xchg
sbb
push
xchg
sahf
mov
adc
in
loope
or
inc
dec
push
sub
pushf
pop
daa
mov
mov
mov
dec
repnz
xchg
int3
shrb
xlat
mov
sbb
and
fs
mov
loopw
sub
stc
push
enter
clc
jb
sti
mov
lock
lret
rclb
sbb
xchg
fdivl
sub
dec
dec
je
push
mov
outsl
test
mov
adc
dec
mov
sub
push
jle
mov
jno
jbe
std
mul
arpl
ret
mov
sub
sub
and
jbe
test
lcall
sub
add
fdecstp
repz
push
decb
aas
jns
sbb
xlat
orl
jns
repnz
inc
mov
repnz
mov
stos
sub
sbb
insb
and
jmp
enter
fs
push
es
adc
jg
inc
or
push
neg
lcall
fwait
aam
mov
stos
lret
cld
mov
inc
cwtl
outsl
loopne
lret
mov
mov
daa
ljmp
lods
or
sub
mov
cltd
dec
and
popf
lret
add
pop
enter
frstor
mov
movsb
out
pushf
or
cli
sbb
pusha
cwtl
pop
inc
ljmp
data16
mov
mov
daa
loop
pushf
pop
cmc
pop
lahf
ljmp
lcall
push
je
jl
addb
testb
std
mov
mov
aad
jno
data16
xor
test
jle
mov
inc
and
or
pop
fdivs
psrad
pop
sub
pop
dec
and
pop
pop
mov
adc
imulb
rcl
xorl
addr16
insb
cltd
aad
dec
addps
std
clc
mov
push
add
incb
ljmp
jo
outsb
and
das
push
stos
lcall
jae
insl
adc
cmp
mov
in
adc
andl
pop
mov
pop
push
cltd
sub
orb
cmp
bound
out
push
fwait
pop
sub
sbb
mov
enter
stos
push
xchg
xor
jnp
jecxz
push
scas
popf
xchg
mov
cld
scas
adc
xchg
movsl
ljmp
and
jb
xor
mov
repz
xor
in
push
orb
outsb
mov
mov
pop
mov
fs
ja
cs
pop
lret
add
mov
and
push
add
icebp
push
faddl
pop
mov
pop
xadd
arpl
scas
loop
sub
xor
jge
ds
inc
test
shll
out
mov
jmp
adcl
pop
mov
iret
sti
pop
scas
mov
mov
lock
lea
jmp
in
das
call
out
and
gs
xor
or
xor
stc
pop
outsb
jge
mov
xchg
les
frstor
inc
shrl
daa
stos
out
mov
mov
pop
sbb
sbb
sub
out
mov
gs
dec
push
xchg
xor
pop
mov
and
out
and
in
add
push
aad
aam
push
sbb
insl
fadd
stc
aad
les
cmp
test
arpl
jp
pop
clc
sub
xor
jne
cmp
sahf
repnz
jns
sub
lds
sar
and
jns
dec
hlt
xchg
or
fcoml
into
lret
xchg
shll
mov
and
adc
jnp
gs
push
icebp
dec
pop
xor
iret
sti
pop
mov
jmp
dec
inc
shrl
and
fcmovbe
mov
sub
testb
imul
ja
xchg
mov
mov
pop
hlt
cmpsl
enter
pop
imul
scas
imul
cmpsl
outsl
pop
and
jmp
xor
and
pop
call
push
lret
xchg
sub
adc
enter
int
mov
addr16
sbb
sbb
mov
push
int
daa
dec
mov
ds
daa
rcrb
imul
push
out
jl
adcl
mov
aam
loope
dec
mov
fistpll
xor
xchg
into
loope
jb
add
lcall
sub
repz
fwait
or
orl
pushf
pop
sarb
fcompl
nop
iret
mov
dec
loop
aad
and
xor
out
xchg
movsl
jge
mov
sbb
jno
sbb
xor
testb
not
fs
test
push
fsubrs
cwtl
scas
loopne
and
add
in
mov
xchg
xlat
scas
into
rcrb
imul
test
jp
lcall
cld
aas
cwtl
ret
xchg
and
sub
insb
clc
or
cld
pop
mov
rcrl
xchg
imull
sbb
arpl
aaa
lods
je,pt
adc
dec
pusha
into
or
sub
and
sub
and
js
add
aaa
aaa
adc
insb
dec
dec
lea
ret
mov
fisubl
rolb
js
xchg
dec
push
stos
loope
call
mov
push
leave
mov
jp
add
pushl
repz
pushf
aam
fldcw
pop
int
mov
aaa
push
or
adc
into
sbb
idiv
and
repnz
or
mov
into
ss
or
mov
fcmovne
mov
jmp
imul
lahf
push
dec
into
xor
out
sbb
sbb
cld
sbb
adc
int3
add
mov
dec
shrb
mov
popf
test
imull
cld
mov
testb
sti
jne
xchg
add
mov
push
cltd
rep
mov
mov
insl
imul
fs
xchg
add
enter
jmp
jnp
add
je
push
and
push
cmp
push
jle
jg
inc
call
in
add
aas
ficoms
sbb
rcrl
push
popa
mov
aad
xchg
xor
jne
mov
xchg
and
mov
scas
cmp
inc
jl
mov
and
push
dec
mov
insb
push
pop
idivl
mov
jne
adc
mov
or
and
test
adc
mov
sub
xchg
mov
mov
enter
push
loop
mov
loope
pop
lret
dec
ljmp
push
fwait
add
xchg
cmp
ja
nop
aaa
loopne
mov
ljmp
xchg
nop
imul
mov
mov
lods
rclb
xchg
rolb
loop
in
sbb
aaa
sahf
mov
arpl
ret
sub
jecxz
adc
loop
lea
mov
imul
das
cmp
jp
bound
cltd
popf
out
mov
sub
mov
jge
inc
lods
push
bound
cmp
lea
in
sahf
popf
xor
inc
adc
xor
aad
decl
stc
rcll
jle
cli
add
or
mov
rclb
rclb
adc
and
mov
rcll
xor
fbld
hlt
push
add
jo
mov
sbb
jns
lcall
push
test
sbb
adc
stos
mov
xor
xor
add
inc
jp
cmp
or
lret
push
pop
gs
ds
mov
imul
jecxz
out
push
shl
mov
dec
inc
lods
sub
mov
cmp
test
loopne
cmp
gs
in
xor
adc
in
frstor
mov
push
aam
loop
mov
xchg
sbb
xor
cld
add
aaa
aam
into
pop
and
sbb
dec
rcrl
push
repnz
lret
imul
mov
andb
cmp
movsb
sarb
push
xchg
mov
mov
pop
add
out
push
mov
sub
xchg
je
inc
in
into
cmp
mov
sarl
pop
sbb
cmp
push
enter
in
arpl
outsl
fiadds
mov
sbb
cmp
cwtl
aad
in
js
ret
mov
jp
pusha
repnz
inc
mov
jmp
imul
xchg
xor
jle
in
jbe
push
popa
ss
mov
mov
pop
fcomp
sbbl
dec
mov
dec
mov
pop
or
cmovo
push
adc
scas
je
jecxz
xorl
cmp
sbb
arpl
add
mov
and
cmpsb
into
mov
jo
and
bound
fnstenv
and
iret
or
sub
dec
mov
xor
jp
mov
mov
cmpsl
movsb
add
int
out
or
mov
dec
fxch
mov
lock
pushf
fwait
cmp
dec
cmp
pop
lret
lahf
gs
movsb
sbb
inc
mov
iret
lods
adc
sbb
and
loopne
or
shlb
repz
pusha
jmp
sbb
das
ja
mov
jmp
sbb
leave
xor
dec
jl
lahf
stos
and
ret
inc
cmpsl
lods
loop
add
ds
pop
jnp
fs
cmpl
jg
pop
xchg
out
mov
aaa
dec
add
dec
mov
hlt
not
aam
mov
mov
xchg
xchg
addr16
or
xchg
fs
lds
in
orl
xchg
in
pop
and
ds
fistps
popa
ss
jp
xor
in
mov
mov
jbe
scas
mov
mov
repnz
sarb
jmp
mov
faddp
dec
imul
sbb
push
mov
xchg
pop
sub
sub
or
push
or
jp
popf
xchg
sbb
mov
lock
insb
jns
sub
xchg
movsb
fmul
xchg
xor
mov
pop
xor
loop
sub
in
xchg
add
pop
fldl
xchg
mov
or
xor
std
sub
mov
xchg
fwait
test
and
and
add
sub
dec
cwtl
push
negb
loope
jle
inc
aam
pop
xchg
adc
cmp
xchg
push
es
jecxz
mov
and
shl
push
mov
filds
loope
adc
push
mov
pop
xchg
mov
push
mov
push
loopne
sub
sbb
fwait
mov
or
add
mov
add
or
mov
jp
insl
push
popa
lock
push
xchg
xchg
jge
cwtl
iret
jg
push
sub
push
popa
mov
add
out
mov
fldt
sbb
jno
in
enter
cmp
push
xchg
out
scas
shl
repz
mov
sar
cltd
fwait
movsl
popa
dec
pop
popf
xor
and
or
lods
mov
xor
aad
push
arpl
shl
aas
movsb
out
jae
mov
or
sub
fcoms
ret
sahf
adc
sub
aam
lea
inc
or
sti
outsb
je
lcallw
fmuls
mov
imull
aas
mov
popa
jb
lret
add
push
jle
mov
jbe
add
das
aas
in
hlt
push
aad
xchg
add
es
imul
roll
fptan
xchg
out
xchg
jo
and
cmc
inc
inc
pushf
add
lret
fidivrs
les
mov
jmp
stos
inc
and
dec
lret
mov
mov
ja
popf
popf
test
xor
scas
andb
cltd
inc
ja
je
xchg
int3
cmpsb
adc
cmpsb
jae
jae
pop
jp
cmpl
lret
addl
push
ljmp
repnz
mov
xor
mov
dec
addl
cmpb
fs
xchg
popa
fisubrl
jnp
insb
mov
add
jo
sbb
inc
push
int3
in
into
out
lret
jmp
fdivp
pop
mov
movsl
inc
shll
jb
push
aam
mov
xchg
daa
push
rolb
in
je
and
cwtl
pushf
fbld
pop
imul
shlb
shlb
and
cmpsl
push
dec
imul
das
pop
sub
xchg
mov
mov
dec
aas
or
cmp
aas
outsb
in
jbe
jecxz
jae
add
std
out
sahf
icebp
ljmp
test
andl
cmp
dec
sbb
ss
fstpt
jmp
daa
sbb
ljmp
sub
sti
je
xor
mull
lcall
lods
xchg
pop
insb
int
cli
jp
and
fdivr
adc
cwtl
call
dec
hlt
lahf
xor
sbb
sub
cld
mov
mov
mov
xchg
movsl
fists
mov
mov
imul
cwtl
inc
pop
ret
andb
or
roll
cltd
je
mov
adc
ficoml
and
xchg
cli
jmp
cs
cmp
cs
and
mov
idiv
push
inc
lock
mov
aad
ss
mov
gs
cmp
mov
mov
push
sbb
lds
decb
or
mov
lock
sub
ret
jne
ja
pop
pop
idivl
fwait
int3
add
jecxz
cmpsb
in
pop
out
js
js
mov
lcall
or
subl
xchg
in
jae
jle
dec
adc
adc
dec
leave
cmpps
cmp
lcall
ficomps
out
fs
jg
pushf
xor
push
add
ds
and
or
pop
sbb
adc
jnp
or
or
scas
xchg
pop
push
fwait
cld
imul
xor
xlat
mov
lods
or
or
mov
pop
xchg
xchg
out
es
loop
in
xchg
in
jae
jle
dec
adc
adc
push
loopne
fstpt
insb
push
imul
dec
aas
or
cmp
aas
outsb
in
jbe
jecxz
jae
add
std
out
sahf
icebp
ljmp
test
andl
cmp
dec
sbb
pop
imul
mov
jge
push
leave
rorl
or
icebp
aas
cltd
mov
sarl
mov
push
pop
mov
adc
inc
adc
push
jb
jge
call
imul
fs
pop
lods
rol
jne
lea
adc
bound
sahf
sub
jo
outsl
cmp
mov
fldt
jns
sbb
sahf
mov
jns
test
fmuls
mov
mov
dec
add
mov
xor
sbbb
pop
fdivrp
das
fs
leave
pop
bound
and
scas
int
fidivrs
sti
push
jb
or
insl
sbb
sub
lea
nop
inc
jmp
push
cltd
xorl
js
push
sbb
ljmp
pusha
jge
push
and
jnp
mov
popa
jmp
xor
loop
stc
pop
popf
pop
xor
mov
in
dec
loop
cmp
xchg
pop
adc
mov
push
xchg
hlt
mov
cmpsb
add
inc
fxam
or
outsb
sbb
xchg
fldl2e
push
sbb
inc
sub
add
cmp
cld
push
aaa
xchg
sbb
mov
sbb
inc
push
or
and
data16
sbb
xor
loope
and
add
repz
cmp
jae
inc
cmp
inc
ss
lret
lahf
ret
sbb
jno
rcrl
lret
aas
nop
leave
jns
dec
ror
addl
and
lods
or
bound
arpl
dec
xor
rcrb
call
imul
fmul
cmp
fcoms
rcrl
lret
lahf
test
push
pop
ret
and
outsl
and
xor
jl
andl
idivl
push
fwait
das
xlat
jne
jg
fists
xor
ret
repz
and
xor
push
test
mov
ljmp
cmp
or
daa
sbb
mov
lahf
mov
pop
mov
rcll
cmpsb
xchg
aad
dec
xchg
roll
sbbl
imulb
test
mov
test
pop
jecxz
setl
ja
fwait
add
jl
inc
inc
sbb
push
xor
in
xchg
or
pop
xor
jl
push
nop
or
movl
movsb
lahf
subl
jl
cmp
pop
pushf
loope
imul
pop
sub
xor
sub
pop
pop
inc
out
rcrb
jg
xchg
in
stos
adc
cmp
roll
scas
cmpsw
mov
cltd
xchg
pop
or
testl
mov
cmpsb
icebp
shrl
pop
cs
test
jp
jge
fyl2xp1
mov
xor
cmp
jl
movsl
mov
in
mov
aad
mov
fistps
xchg
mov
pop
cltd
dec
fidivl
mov
loope
mov
loope
lss
sub
lret
adc
ret
or
adc
mov
adc
mov
pop
mov
cmpsb
jg
jp
dec
out
push
inc
sbb
ljmp
test
sub
dec
or
nop
xor
xchg
or
cwtl
inc
xchg
pusha
xor
sahf
insl
jno
std
xlat
in
ficoms
mov
mov
or
add
inc
imull
andl
mov
movsl
lret
push
jp
add
mov
lods
cwtl
pop
addr16
mov
pop
mov
gs
ljmp
sbb
mov
nop
out
test
and
xor
loop
xlat
mov
dec
dec
pop
add
sahf
sbb
push
imul
mov
mov
and
nop
or
and
xchg
mov
rcrl
sbb
adc
inc
mov
push
into
push
enter
inc
xor
ljmp
sbb
roll
jo
lret
xor
sbb
lret
lea
aad
mov
add
pop
movsb
inc
call
outsb
jbe
jle
cli
adc
pop
in
pusha
sub
insl
cmpsl
jmp
cs
in
sbb
popf
lds
mov
mov
pop
and
sub
repz
pop
int
push
bound
push
das
lcall
rcrl
test
dec
ljmp
and
in
xor
or
pusha
call
inc
orb
jg
data16
push
gs
jns
mov
leave
xchg
cmp
push
xor
jae
add
or
dec
lea
inc
xor
and
out
pushf
rcll
pop
push
push
std
data16
push
pop
push
and
pop
adc
rol
inc
cli
insl
jl
or
aaa
loopne
clc
ret
repnz
dec
andl
xchg
add
jnp
or
jnp
mov
dec
xchg
mov
jae
pop
testb
jl
insb
notb
sub
or
insl
mov
cli
sub
cmp
leave
mov
repz
es
dec
push
popf
call
fsubl
jecxz
sub
mov
dec
mov
in
js
push
ret
ret
pop
aas
xor
out
mov
rclb
in
call
push
in
dec
jl
jo
sub
mov
insl
rcrl
sbbl
lret
lret
jb
adc
jnp
sub
push
pop
or
lret
push
and
inc
bound
push
jo
aaa
push
ss
fildl
dec
outsb
ja
xlat
orb
xor
fcmovnb
mov
push
in
mov
je
das
int3
fdiv
repnz
jle
roll
cmpsb
ret
jp
scas
scas
addr16
jns
inc
test
mov
add
mov
test
xchg
inc
fstpl
gs
mov
mov
js
xorl
jne
rorb
popa
xor
sub
xchg
jge
aas
insl
and
adc
lea
mov
pusha
jle
dec
pushf
sub
and
or
adc
sub
cs
popf
mov
add
cmc
jne
cmp
mov
loope
cli
cmp
mov
inc
mov
xchg
pop
outsb
clc
inc
aam
xor
or
inc
into
dec
iret
dec
stc
ret
out
daa
aaa
insl
push
lods
lret
inc
mov
push
popa
sbb
sti
pop
jmp
mov
arpl
jbe
outsb
jmp
adc
aaa
sub
jecxz
hlt
arpl
js
adc
loop
int
add
jp
mov
or
pop
in
or
dec
sub
inc
sbb
ds
addb
popf
mov
aam
lds
sub
jge
add
pop
and
les
orl
and
inc
inc
outsl
test
push
lret
xchg
cmp
mov
push
rorb
mov
push
out
nop
pop
mov
mov
cmpsl
and
sarl
jo
push
adc
mov
pop
fstpt
test
mov
dec
in
xchg
cmp
dec
pop
dec
bound
mov
gs
arpl
pop
aaa
mov
imul
pop
mov
cs
loop
or
aam
adc
fwait
pop
jg
mov
pop
fdivrl
push
test
mov
ret
mov
and
sahf
aaa
jg
subb
cmp
movsb
sub
xchg
xorb
into
test
insb
cmpsb
int
cs
pop
cmp
mov
dec
xlat
add
jne
sub
cmpsl
cmc
mov
push
int3
js
int
jl
jmp
dec
repz
mov
jl
fmull
ret
out
inc
push
cmp
bound
adc
popf
mov
mov
jg
adc
jle
mov
and
js
div
lods
rcr
bound
adc
mov
test
inc
hlt
loop
enter
pop
ja
loopne
stos
out
push
loopne
loope
inc
dec
cmpsl
arpl
dec
xor
js
jb
push
push
or
or
push
xchg
fldl
xor
lods
scas
dec
cs
insb
jge
mov
divl
aad
lret
sub
fmull
ret
mov
jmp
mov
push
pop
mov
mov
inc
cmp
lods
fldt
cmp
or
scas
mov
sbb
pop
repnz
sub
sub
iret
std
aad
jnp
cmp
add
jge
inc
lods
mov
daa
call
mov
cmp
ljmp
jo
xchg
gs
push
jp
xchg
and
sub
or
pop
sbb
repz
sti
je
fiadds
or
dec
hlt
iret
mov
mov
mov
cmovl
mov
outsl
cwtl
cmp
in
stos
ret
dec
cmp
fsubrp
sbb
mov
or
test
scas
stc
push
dec
push
and
dec
push
mov
mov
jno,pt
loope
movsl
daa
push
and
ret
sbb
and
inc
adc
mov
add
movsl
rol
test
push
adc
in
out
movl
shlb
insb
jns
sub
enter
imul
shll
shufps
inc
imul
mov
repnz
aam
negl
sbb
mov
incb
rorb
mov
and
xchg
dec
scas
add
dec
sarb
arpl
mov
inc
rcrb
inc
nop
dec
cmp
in
jl
add
jmp
and
or
mov
fldl
int
xchg
aam
repz
imul
aam
cmpsl
push
and
xchg
sub
mov
inc
cmp
sbb
orl
cmp
push
cmp
push
in
mov
call
rolb
outsl
fs
mov
stos
sbbl
in
push
movsb
lahf
cmp
jns
arpl
mov
jg
add
xor
inc
sbb
dec
dec
mov
inc
loopne
mov
push
jne
jo
fmull
mov
pop
xor
pop
xchg
sub
sub
mov
jae
cmp
inc
sbb
repz
aaa
xor
adc
inc
pop
arpl
lods
pusha
sahf
movsb
jnp,pt
cltd
scas
or
mov
or
xor
imul
sub
fistl
leave
stos
daa
iret
mov
call
inc
lods
lods
lods
mov
and
mov
insb
pop
jne
sub
aaa
xchg
xchg
sub
push
aas
sub
das
movsb
adc
mov
loope
dec
sti
mov
mov
xor
mov
xchg
shrb
movsl
scas
inc
mov
xlat
pop
xor
dec
sbb
xchg
mov
sub
jno
jmp
cmpsl
into
mov
stc
mov
push
jmp
stos
imul
xor
jae
pop
dec
push
cld
inc
aad
outsl
pop
lahf
sub
dec
add
pop
loopne
pop
mov
mov
lcall
jl
cmp
cmovb
and
xor
das
sub
push
dec
loop
inc
imul
leave
ja
xchg
es
sub
xchg
pop
cmp
adc
or
sti
jb
mov
sbb
aam
cmpsl
jle
leave
pop
in
out
xchg
sbb
fistl
cmp
aam
dec
ret
sub
rcrl
mov
cmpsb
mov
imul
inc
xchg
es
or
aad
shl
dec
mov
cmc
ret
insb
adc
mov
shrl
xchg
shr
outsl
sbb
pop
sub
popf
pop
and
mov
lock
ret
addr16
jle
or
test
or
arpl
dec
adc
cmpsb
rcll
gs
sub
loop
psraw
cld
cmova
scas
loop
jno
add
lret
mov
lods
fdivs
in
mov
in
shlb
jp
jbe
sub
in
mov
sub
mov
and
mov
scas
cmc
xlat
js
dec
iret
inc
xchg
cwtl
movsb
daa
push
int3
mov
xchg
push
cmc
push
out
or
sub
shrb
loopne
inc
popl
pop
daa
jmp
loop
inc
jecxz
data16
movsbl
xchg
aaa
pop
mov
leave
xchg
mov
or
cli
adc
adc
lock
cmp
loop
sbb
push
mov
addb
flds
ja
fwait
push
mov
stos
and
ret
sbb
dec
test
test
ljmp
mov
les
mov
jo
ss
adc
sub
out
dec
test
popf
push
pop
dec
pushf
xchg
adc
sub
aam
sarb
xchg
cmc
gs
pop
hlt
sub
jl
jp
add
inc
in
popa
mov
leave
pop
mov
out
fmul
bound
xchg
fistpll
lret
xor
std
in
inc
into
mov
out
stos
dec
movsl
pushf
and
push
dec
and
mov
xor
fdivr
mov
or
jle
xlat
insl
jne
push
jl
jnp
sub
repz
sbb
xor
int3
das
lret
jp
popf
insb
sub
stc
jns
and
icebp
add
pop
popf
jg
cmp
pop
cmovb
inc
enter
push
xlat
push
mov
xor
or
js
jo
daa
sbb
into
xchg
sbb
cmp
lcall
sbb
mov
test
xor
enter
xor
and
mov
insb
lods
faddl
jle
lock
enter
sbb
nop
adc
ret
shld
aad
std
mov
mov
mov
cmc
mov
pop
adc
hlt
popa
add
sti
sbb
ja
lahf
pop
mov
xchg
mov
mov
mov
ja
je
addr16
jns
fwait
movsl
mov
fistpl
inc
and
jp
dec
or
movsb
popf
stos
loope
sahf
pop
ljmp
pop
mov
out
jg
test
fstp
jno
out
sbb
ret
test
mov
xor
mov
push
iret
ja
mov
adc
add
sti
sbb
dec
addr16
pop
mov
pop
imul
ja
lea
imull
movsl
jp
insb
daa
incb
lahf
test
sahf
test
inc
jmp
in
jp
jg
in
add
cmp
push
cmp
cmp
push
mov
pop
in
lock
std
aad
in
mov
mov
rorb
mov
inc
pushf
adc
int3
xchg
push
jecxz
or
andl
popl
sub
inc
fiadds
ja
ljmp
outsl
lcall
inc
inc
fnstsw
shrb
xor
pop
ret
xchg
outsl
add
lock
xchg
push
push
fnstcw
mov
pop
gs
jecxz
inc
dec
sub
jge
adc
add
leave
addl
movsl
jmp
test
lods
jmp
push
sbb
mov
mov
jge
mov
cltd
imul
inc
les
fwait
cmpsb
push
data16
cltd
movsb
ret
sbb
lahf
inc
sub
or
das
addr16
or
push
test
sub
jmp
cmp
dec
fisttps
jg
test
popl
repnz
xchg
jl
pusha
dec
popl
inc
inc
push
js
push
outsl
pop
andb
call
sbb
repz
push
adc
mov
push
cli
push
mov
and
pop
ret
dec
lods
add
jae
pushf
inc
les
loope
push
loop
pushf
xchg
mov
aaa
sbb
pop
pop
lock
or
cmp
aad
inc
or
cmpsl
int
jbe
out
cs
lret
ja
xchg
fdivr
pmulhw
or
in
test
jb
dec
push
jne
push
sbb
jp
or
loop
cmp
xor
dec
and
insl
adc
inc
fmuls
pop
cltd
call
pop
pop
xor
dec
mov
jno
mov
sub
mov
cmp
rcrb
in
mov
sub
nop
lock
sbb
sti
sarl
inc
xchg
dec
sbb
les
xchg
sbb
adc
jle
das
repnz
inc
mov
cmp
push
sbb
icebp
dec
in
mov
and
lock
xchg
pop
or
lods
out
aas
ljmp
cli
aas
test
popl
int
sub
cmp
ss
adc
push
ja
mov
testl
xor
ds
jae
xchg
dec
push
xor
mov
es
in
xchg
cmp
test
pushl
add
ljmp
inc
xchg
mov
stc
pop
out
subb
loop
mov
dec
mov
insl
imul
stos
cli
fdivrs
push
dec
int
or
xchg
cmpsb
mov
push
xor
scas
jnp
adc
xor
iret
fwait
push
and
dec
mov
lret
fldenv
aam
sbb
xchg
pusha
loopne
jb
filds
test
sbb
inc
push
xlat
mov
sub
xor
mov
mov
inc
push
cmc
add
jg
or
and
into
push
fcomps
xchg
push
out
movsl
cs
jecxz
movsb
bound
mov
sahf
cwtl
ds
imul
mov
adc
fwait
iret
movsb
fbld
inc
push
pusha
dec
push
lahf
std
lods
outsb
leave
bound
std
dec
push
sub
aam
xchg
mov
jl
lret
scas
imul
cmpsb
jmp
rcl
pusha
adc
movsb
rcr
div
inc
les
push
mov
stc
popf
and
xchg
std
jp
xchg
mov
xor
push
mov
and
out
sbb
mov
mov
push
inc
xlat
icebp
push
inc
adc
vpmaxsb
adc
or
rol
push
js
rol
nop
gs
xor
mov
loope
dec
loop
push
pop
fwait
push
int3
mov
pop
dec
inc
push
fisubs
mov
jecxz
cwtl
mov
fistpll
dec
mov
mov
dec
rorl
xor
test
mov
or
iret
and
lahf
popf
sbb
js
and
push
pushf
cmp
ss
mov
sti
inc
sbb
andb
nop
ret
into
or
nop
adc
pushf
inc
fisubrs
dec
pop
xchg
adc
pop
imul
mov
ficoml
xchg
adc
test
nop
inc
or
jbe
mov
lret
and
xor
pop
das
imul
add
adc
lds
xchg
scas
imul
testb
aas
ficompl
popa
dec
mov
mov
aaa
cld
int
and
push
dec
icebp
pop
addb
shlb
das
push
aad
scas
test
push
cmp
mov
sub
icebp
xlat
fidivrl
pop
or
inc
push
sti
mov
ja
stc
mov
jg
lock
mulb
xchg
xor
xor
mov
lea
ds
adc
and
je
cmp
pop
and
sub
sub
xchg
sbb
xor
lret
xor
je
xor
pop
adc
leave
dec
xchg
jno
std
sub
sbbl
das
addl
jle
and
jecxz
jo
cld
out
lock
jne
pop
jg
push
push
lret
dec
fisttpl
dec
dec
inc
sbb
xchg
ljmp
adc
xchg
test
mov
mov
lcall
cmpsl
cli
fbstp
or
adc
xor
movsl
in
or
std
int
stos
fwait
or
loopne
adc
dec
and
pop
mov
xchg
mov
xchg
aam
repz
push
fisubs
shl
lahf
inc
int3
adc
mov
mov
mov
jo
fstpt
sbb
jg
int
callw
inc
sub
push
dec
push
xchg
add
into
insb
in
jecxz
daa
cwtl
jo
pushl
jo
fs
and
xor
adc
insl
xor
in
pop
imul
fmuls
repz
sbb
add
loopne
xchg
shl
xchg
fwait
shlb
js
jle
add
adc
inc
repz
add
sbb
inc
pop
inc
jl
jge
stos
daa
shlb
sbb
xor
loope
pop
cld
mov
fadds
pop
mov
xchg
stos
stc
addr16
push
mov
iret
in
stos
push
lods
dec
stos
rolb
cli
push
dec
cmp
mov
mov
ds
push
les
bound
lret
cli
scas
adc
js
repz
sbb
xchg
not
sbb
mov
cld
pop
xchg
test
fwait
cltd
jns
adc
fists
pop
inc
lods
add
fdivrs
dec
lea
aad
inc
cmpsb
lahf
pop
mov
xchg
inc
nop
push
push
sub
movsb
rolb
push
inc
xchg
lods
repz
add
sti
outsb
jg
out
push
gs
pusha
jmp
add
pop
aaa
mov
xor
js
les
movsb
sub
jge
pop
je
push
xchg
ret
push
jb
daa
mov
sahf
mov
cli
mov
jae
rcll
mov
sub
test
push
pop
enter
rcrl
outsl
sbb
movsl
or
pop
xchg
dec
pop
stos
mov
out
pop
lcall
add
shr
xchg
aas
xchg
xchg
addr16
dec
cmp
cli
ja
jns
outsb
jae
js
stos
push
jg
pop
push
sub
test
mov
mov
iret
mov
push
pop
sbb
popf
adc
mov
and
mov
or
nop
in
test
imul
push
xchg
or
arpl
popf
daa
xchg
inc
sbb
pop
mov
xchg
stc
das
pop
ret
pop
xor
or
ret
sbbb
push
imul
iret
aaa
pop
ret
icebp
das
lds
js
cmpsb
lods
lret
lock
or
dec
movsb
or
pop
pop
add
stos
jl
lods
push
cmp
les
insl
lahf
out
std
ds
dec
push
and
rorb
fnstenv
call
pop
out
rclb
subl
xor
mov
dec
push
fstpl
cmp
or
push
sti
cmp
pop
xchg
xor
and
mov
cld
divl
icebp
jmp
or
jb
push
outsb
aam
mov
xadd
je
jp
mov
mov
or
and
test
jmp
insl
jecxz
mov
incl
jmp
int
fs
mov
rep
sahf
bound
jl
adc
loop
popa
jmp
pop
in
test
cli
mov
xchg
mov
jle
jbe
xor
lds
mov
pop
add
dec
int
mov
jge
cmpsl
cmp
push
cltd
call
mov
lcall
dec
cmp
add
cltd
push
cs
jmp
adc
dec
int
insl
je
xor
js
xchg
test
push
in
outsl
add
aaa
xlat
sbb
jns
jl
cs
out
mov
sbb
fs
xor
lds
and
enter
xchg
rcrl
inc
scas
nop
stc
iret
lcall
incl
outsl
xchg
test
stos
mov
jmp
xor
mov
and
pop
xor
aad
add
in
xchg
adcl
mov
scas
nop
stc
iret
lcall
incl
outsl
xchg
test
stos
and
scas
and
pusha
js
cmp
jns
pop
pop
in
int3
in
rcl
jmp
icebp
add
pop
xchg
fildll
lds
sbb
mov
pop
sub
mov
xchg
xor
ds
mov
xor
movsb
rorl
pop
or
cld
inc
jbe
pop
push
dec
mov
pop
add
ljmp
inc
push
repz
test
sti
roll
mov
sbb
daa
rorb
sti
inc
mov
inc
add
jbe
arpl
xor
shrl
cmp
jp
sub
or
lcall
repnz
lret
shlb
add
rcrl
pop
sbb
push
push
inc
xchg
mov
or
outsb
fcomps
repnz
cmp
shlb
sub
mov
lock
cmp
sub
stos
out
cmc
pushf
cli
jbe
sbb
bound
iret
xchg
xchg
aad
addb
rcrl
dec
std
jne
cmp
jg
insl
jmp
jl
push
mov
fmull
sti
cmp
cpuid
and
xchg
inc
mov
jmp
jb
cmpsb
sbb
mov
dec
scas
adc
pop
cmp
and
pop
push
push
enter
add
je
mov
pop
sub
mov
add
mov
out
inc
std
std
addr16
xor
jno
popf
inc
mov
fstp
mov
inc
je
jno
jno
adc
push
xorl
add
adc
ret
or
ss
mov
pop
test
out
hlt
lock
mov
cltd
ds
mov
lock
jg,pn
push
loop
jge
jo
mov
pop
inc
add
inc
sbb
cs
out
into
cmp
xor
iret
mov
add
lock
int3
mov
add
jge
popf
repnz
arpl
or
cli
mov
jnp
and
push
sahf
jo
lret
sbb
fbld
add
daa
shlb
jle
cwtl
pop
mov
adcl
shrb
mov
clc
or
cmp
and
lahf
jge
test
insl
loop
mov
jecxz
fstpt
sub
push
pop
lods
or
sahf
sbb
das
jbe
mov
inc
dec
xor
idivb
aad
lcall
sarl
dec
or
xchg
cmc
shrl
mov
xchg
cmp
adc
frstor
lahf
rcr
fdivrl
neg
in
outsl
jno
cmp
sarb
hlt
cmpsl
pop
sbb
mov
in
loop
mov
mov
lods
and
cld
cmc
push
lods
cmp
push
pop
ljmp
cltd
in
daa
push
shll
inc
daa
or
imul
stos
or
jns
adc
aad
mov
and
sbb
inc
jmp
pushf
xchg
and
movsb
or
or
int3
jge
or
mov
lock
bound
and
sub
sub
inc
lahf
mov
fnstcw
or
pop
fsts
sub
loopne
sti
and
adc
cwtl
sbb
mov
cmp
stos
out
aaa
push
and
mov
fwait
repnz
mov
insl
or
jae
das
cmc
pushf
out
stc
mov
cld
rcrb
inc
xchg
mov
loop
cwtl
mov
add
popf
data16
add
fisubrl
inc
and
insb
xchg
les
jae
jne
int
xchg
sub
lods
insl
adc
sbb
pop
inc
aaa
repz
movsb
jge
mov
push
sub
xchg
int
mov
scas
andl
decb
unpckhps
pop
outsb
add
je
and
inc
xlat
ss
mov
addr16
jp
jnp
jp
rolb
hlt
mov
hlt
jge
clc
cmc
sbb
inc
dec
arpl
sub
sub
notb
mov
push
pusha
cmp
jne
test
ret
addb
rorb
popa
adc
inc
fsubrl
fiaddl
jb
js
dec
sbb
into
and
lds
push
test
fisubrl
jno
loopne
mov
mov
cmp
mov
push
aad
mov
xchg
mov
stc
push
insl
adc
add
popa
out
dec
jbe
js
fidivs
adc
js
shll
push
push
adc
daa
sbb
adc
pop
in
cmc
mov
and
push
mov
aaa
adc
fldcw
sbbl
mov
adc
jecxz
out
mov
test
pusha
cmpsl
jl
pop
roll
lahf
adc
test
lcall
add
sbb
sub
jnp
jecxz
adc
mov
xchg
and
add
mov
push
and
adc
dec
fbld
add
iret
xchg
std
es
je
das
xchg
js
int
cs
iret
test
jne
cmpsl
add
jle
sub
rcrb
xchg
inc
ss
nop
push
cmpl
xchg
adc
out
enter
adc
test
test
sub
das
pop
push
pop
clc
test
clc
mov
dec
sub
dec
repnz
mov
cmp
dec
out
bnd
loopne
xchg
mov
fdivrs
aam
test
mov
pop
gs
inc
add
inc
cmp
ljmp
fists
test
dec
and
cmp
xchg
pop
test
arpl
adc
popf
pop
stc
jae
or
test
aam
aas
pop
js
popf
leave
lock
and
jne
mov
or
out
bound
xor
ja
mov
mov
mov
and
add
cmp
push
in
in
rcr
jl
mov
mov
int
mov
repnz
cltd
add
add
adc
loop
fldcw
jbe
jb
loopne
xor
add
lods
xchg
lock
loope
inc
jns
shlb
jecxz
push
inc
push
scas
and
scas
adc
adc
fcomps
mov
mov
fiaddl
inc
dec
sbbb
push
dec
sbbb
inc
scas
add
in
enter
and
push
dec
test
movsb
inc
sub
push
push
loopne
and
pop
push
ss
xchg
scas
aad
loopne
stos
lahf
xchg
int
mov
mov
mov
stc
lahf
cmp
and
mov
mov
scas
and
out
in
sub
jecxz
mov
xchg
cld
or
pop
cmc
outsb
cmp
ja
and
test
push
outsl
and
mov
in
and
cli
stos
pop
test
rorl
cmc
push
je
pop
ret
stc
dec
jp
inc
cld
loopne
mov
loop
fistpl
jecxz
rclb
loopne
cld
fcoms
push
frstor
inc
or
xchg
repz
loope
loop
sub
nop
scas
mov
jne
insb
int
pop
ror
test
fldt
adc
aad
or
leave
mov
gs
aam
and
mov
or
sbb
sub
or
jb
lcall
test
mov
jo
cld
mov
test
out
and
sbb
jecxz
push
movsl
jge
sub
dec
push
stc
arpl
popa
imul
pop
cmpb
lods
mov
push
xchg
mov
mov
addb
and
push
fidivs
in
aad
lcall
cs
cmp
out
xchg
and
pop
and
mov
insb
rclb
cmpsb
int
loop
popa
idivb
mov
pop
jbe
sbb
addr16
mov
popa
inc
mov
scas
stos
ficomps
les
dec
or
pop
xor
xchg
inc
in
cmp
and
dec
jae
mov
ljmp
and
mov
sti
fcoms
js
xchg
push
jae
pop
lods
test
ret
xchg
dec
push
fbld
dec
xor
jp
mov
mulb
sub
mov
push
cmp
in
and
adc
jmp
int3
repnz
push
out
scas
or
mov
jge
inc
add
cltd
lret
ret
fsts
out
jp
insl
add
sub
or
in
js
out
jg
or
xor
adc
pop
mov
or
clc
adc
into
out
dec
aam
sarb
test
or
or
adc
mov
mov
pop
je
mov
pop
mov
jle
and
cmpsb
ja
mov
mov
test
push
pop
or
cmpsl
jl
xchg
push
test
bound
rorl
xorb
mov
push
sbb
test
jle
mov
jno
adc
outsl
sbb
leave
ds
jle
mov
adc
sub
test
lods
jae
jnp
cmp
add
orl
xchg
dec
pop
hlt
bound
outsb
mov
es
leave
xor
jb
cmp
fisttps
cmp
mov
mov
jge
idiv
stos
into
pop
mov
jo
movsb
sbb
bound
jnp
sub
xchg
jmp
sub
in
and
push
adc
iret
stc
mov
fsubr
rol
lcall
cmc
sarl
sti
cmp
aas
xchg
call
into
push
mov
cmp
or
jg
inc
mov
call
or
pop
ficoml
adc
nop
xchg
sub
enter
sbb
push
fcompl
or
lods
cli
mov
fistps
lods
ds
movsl
and
sub
leave
jbe
test
or
sti
xor
fsts
movsb
je
pop
adc
jge
rcrl
adc
pop
sbb
xor
jno
out
insl
mov
mov
into
pop
into
push
call
movsl
lret
xchg
jmp
pop
scas
pop
mov
mov
push
push
cwtl
cli
repnz
aad
shlb
mov
push
adc
cmp
add
dec
insl
sub
mov
sub
mov
pop
mov
jno
mov
lcall
jmp
lods
cmp
fcomp
jbe
xchg
and
dec
cmp
out
mov
or
add
add
fisubrs
add
pop
adc
push
push
cltd
cmp
out
and
inc
ds
push
shll
clc
or
cmp
mov
and
int3
mov
and
or
mov
push
insb
fiadds
jnp
sti
int3
clc
dec
out
sbb
shll
sub
sbb
scas
int
ret
mov
cli
mov
addl
js
adc
stos
test
add
cmp
movsl
or
mov
cltd
lret
adc
cwtl
ljmp
dec
xchg
arpl
aad
mov
jb
or
jl
or
xchg
dec
mov
sub
pop
js
push
jp
in
xchg
ret
mov
flds
imul
mov
subb
adc
inc
test
les
roll
push
cmp
sbb
jl
int
mov
jge
mov
lret
imul
jb
daa
pop
out
xchg
mov
sbb
jb
xchg
cmp
mov
xor
data16
fwait
jl
pop
inc
sbb
xor
subl
aad
mov
mov
push
int
int
add
jb
jge
sub
lret
popa
cmp
push
aaa
mov
clc
jne
in
cwtl
stos
xchg
and
lods
out
sub
mov
mov
call
push
jns
lret
arpl
aad
fsubrs
pusha
adc
ds
test
mov
loope
mov
lahf
jns
or
lret
repz
lcall
jp
fcoms
mov
push
cwtl
sub
in
xchg
adc
add
push
jne
ret
fsub
or
or
cmpl
xchg
mov
push
mov
cmp
int
push
fstp
sahf
sarl
pop
cmpsl
cmp
pushf
sub
movsb
xor
mov
in
clc
lods
in
ds
sbb
inc
dec
push
adc
cs
pop
call
pop
lret
subl
into
cmp
fmulp
imul
cmpsl
imul
pop
leave
or
inc
mov
pop
and
mov
outsb
jbe
mov
push
or
test
fcomi
loopne
mov
shl
xchg
cmp
out
in
xor
add
iret
out
hlt
push
jne
xchg
pushf
jbe
push
ljmp
inc
add
or
xchg
inc
imul
sbb
movaps
test
add
push
add
cmp
jmp
xchg
sbbb
jg
negl
loopne
mov
cmpsl
dec
bts
cmpsl
test
sarl
in
xchg
in
fmuls
push
pop
bound
leave
int3
sbb
iret
cli
fwait
xor
sub
mov
out
ret
repz
pusha
leave
fld1
loope
movsl
xor
leave
mov
xchg
inc
cwtl
push
or
aaa
sub
shrl
xchg
push
int3
push
sub
xchg
into
mov
fcompl
sub
out
cmp
push
mov
popf
mov
mov
push
pop
sub
ds
hlt
mov
out
movsl
mov
jnp
cmp
fwait
movsb
daa
push
add
jl
shrb
cmp
jmp
xchg
cwtl
iret
or
inc
sub
mov
in
notl
lods
test
mov
sub
mov
pop
scas
mov
negl
insb
cmp
inc
es
mov
aas
mov
bound
rorl
jg
jmp
pop
cmp
popl
adc
push
out
ds
incb
xor
in
dec
dec
ret
outsl
xchg
leave
pop
mov
push
mov
and
fldcw
mov
sbb
inc
adc
jecxz
xchg
aad
mov
mov
inc
pop
push
mov
jns
inc
cli
mov
inc
bswap
xor
inc
cmp
xor
mov
mov
sub
fsubrl
jmp
dec
adc
int
add
negl
and
icebp
xor
pop
popa
pop
mov
jno
call
mov
xor
sbb
nop
lods
fistpl
add
test
ret
in
or
mov
xchg
sbb
push
xor
mov
clc
movsl
es
cmc
jmp
fnstsw
add
pop
jecxz
lcall
or
int
loope
outsb
xor
add
ss
out
dec
or
adc
lods
or
and
dec
sahf
insl
fistps
add
lret
scas
pop
pop
std
mov
mov
inc
cmpsb
lock
mov
push
movb
fcmovb
insl
fcomps
mov
sbb
mov
push
ljmp
mov
push
dec
cmpsl
adc
fwait
mov
call
iret
xchg
cmpsl
aam
das
std
cmp
or
lcall
xchg
aaa
test
push
mov
push
in
or
lahf
arpl
mov
cmpsb
sti
pusha
push
cmpsb
fs
sub
mov
sub
dec
ds
addr16
dec
idiv
ficomps
out
in
xchg
mov
mov
mov
pop
add
movsb
cs
mov
cmpb
pop
hlt
popa
imul
adc
sbb
inc
cmpsl
mov
or
or
sahf
movsb
std
xor
dec
xchg
cltd
pop
mov
mov
dec
push
rorl
out
scas
stc
mov
xchg
inc
fadd
in
jle
out
out
adc
inc
add
roll
push
mov
frstor
fwait
imul
dec
es
inc
outsl
and
pushf
pop
add
cli
aad
and
aam
cmp
dec
das
sbb
aam
jmp
outsb
in
imulb
xchg
mov
pusha
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
adc
add
add
mov
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
testb
add
add
add
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
outsl
add
jae
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
push
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
