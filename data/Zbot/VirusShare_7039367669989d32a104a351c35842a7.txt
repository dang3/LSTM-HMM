pop
stos
stos
xchg
add
iret
push
dec
fdivrp
incl
shr
pop
sbb
in
add
decl
pushl
push
ss
out
add
hlt
push
adc
dec
lock
call
mov
in
leave
ret
movsb
sub
in
add
push
sti
in
mov
or
lea
push
add
push
call
add
inc
idiv
in
fimuls
inc
sbb
neg
not
inc
adc
or
jne
add
adc
pop
pop
outsb
and
add
xchg
cs
inc
dec
inc
not
sbb
add
jmp
mulb
mov
jp
push
push
push
inc
fs
out
mov
push
clc
push
add
push
pushf
add
call
jmp
add
cli
neg
sbb
sub
sub
not
sub
inc
dec
push
dec
sbb
sub
adc
mov
rol
pop
ret
not
inc
sub
inc
sbb
inc
sub
mov
sti
idiv
nop
adc
add
dec
inc
sub
inc
push
es
fcomi
push
add
mov
incb
sub
pop
les
outsl
in
mov
fwait
mov
push
adc
jmp
in
negb
mov
insl
rcrb
js
sti
call
push
or
cmp
add
and
dec
sbb
mov
enter
ss
std
or
imul
and
test
fs
xor
push
bound
fists
ss
xor
cmp
cld
sub
adc
lock
addw
push
push
call
in
cmpb
adc
in
mov
dec
add
push
cmp
mov
imul
push
fistps
add
cs
xor
push
fmul
jne
lret
imul
in
push
outsb
or
imul
or
push
push
dec
sub
cmp
cmpsl
xlat
adc
icebp
js
dec
xchg
dec
push
cld
jp
mov
ficompl
fs
mov
cmp
ss
cmpsb
fdivl
rol
fistpl
jg
push
dec
xlat
pusha
inc
fmuls
in
xchg
aaa
popa
jno
dec
call
jg,pn
enter
dec
dec
jno
push
jno
ret
mov
outsb
insl
push
push
loope
in
xchg
call
add
in
push
popl
jmp
or
fsubrs
inc
dec
push
call
hlt
push
fmuls
bound
or
push
xchg
or
sbb
lock
push
inc
xor
jbe
outsl
add
xor
push
in
dec
orb
add
sbb
loope
inc
cmp
inc
push
mov
cmc
sub
cld
push
xor
pop
adc
sub
sub
and
push
outsl
inc
jnp
in
jo
push
inc
clc
push
outsl
or
pop
ja
jo
push
push
push
cmp
ds
push
lcall
push
add
jns
clc
loope
arpl
outsl
fs
enter
or
sar
push
push
jecxz
test
cs
cmpsb
aad
jle
jecxz
arpl
jo
jbe
add
xor
xor
dec
arpl
popa
dec
das
push
clc
inc
sbb
dec
inc
in
call
cmp
leave
outsb
inc
add
dec
dec
push
in
out
aaa
cmp
imul
adcl
gs
mul
xor
std
fldl
add
inc
xor
stos
or
fs
cs
pushl
jmp
sarb
mov
decl
mov
jmp
push
outsl
dec
jns
sub
loopne
inc
clc
arpl
mov
mov
inc
insb
inc
bound
xor
cmp
and
push
xchg
push
inc
push
in
mov
in
in
or
dec
insb
stos
call
sarl
push
cmp
jp
outsb
mov
clc
jae
bound
je
cmp
xor
or
xor
xchg
mov
jle
jecxz
push
pop
pop
insb
jo
jbe
call
xor
push
lods
rorl
inc
jmp
push
and
mov
mov
pop
int3
push
mov
jns
imul
mov
jae
dec
pop
insb
sbb
or
addr16
xchg
push
xor
js
dec
sub
pop
gs
std
outsb
pusha
xorl
push
outsb
subl
rolb
aaa
push
ds
daa
adc
insb
test
mov
test
insb
inc
jae
sub
push
or
inc
cmp
mov
sbb
stos
inc
inc
and
fiaddl
popf
or
aas
cmp
into
outsl
arpl
shl
or
or
fadds
pop
mov
push
inc
mov
add
sbb
sbb
neg
adc
xchg
lret
push
jbe
push
pop
fstpt
dec
sub
add
cmp
fs
cmp
dec
lods
jl
popa
pop
js
inc
cmp
loope
inc
sub
stos
adc
push
pop
cmp
loope
cltd
vpperm
push
outsl
popl
xchg
js
dec
xor
sbb
lds
sub
or
xor
mov
jnp
inc
push
insl
lods
ja
popf
ds
push
incl
call
fisttpll
mov
dec
mov
sbb
lock
call
out
packuswb
loope
xor
push
inc
jbe
loop
dec
push
push
push
rcrb
gs
xor
addps
inc
ret
xor
lds
pop
movsl
mov
dec
push
loopne
jo
outsb
mov
or
movl
mov
test
orl
call
cmp
xor
inc
sti
sti
jbe
lock
lods
xor
insl
cmp
sti
sbbl
push
xor
mov
push
sub
cmpsb
add
lods
jmp
imul
push
popl
add
shlb
rcr
xor
dec
jg
bound
rol
push
imul
mov
cmpl
sbb
push
es
dec
push
jae
and
subb
add
fprem
push
aas
inc
jns
sub
and
out
mov
cmpsb
push
sub
add
pop
add
pop
push
push
nop
pop
xchg
jo
subl
mov
cmc
scas
in
js
jb
clc
mov
int3
shl
scas
and
insl
and
stc
arpl
pop
jo
outsl
push
dec
add
pushf
xchg
push
cld
pop
outsl
aaa
pop
ja
sub
movsb
lret
addl
push
aam
push
or
in
sbb
or
jbe
xchg
dec
jnp
in
sub
sub
cmp
cmpl
inc
dec
inc
xchg
jnp
adc
xchg
pop
js
pop
imul
pusha
call
mov
lret
mov
jae
xor
jae
cmc
adc
and
into
sbb
inc
aaa
rol
jp
sbb
pop
cwtl
je
popa
push
mov
jno
xor
icebp
cmp
js
fisubrs
imul
xchg
xor
inc
xchg
mov
popf
xor
ret
push
jle
add
inc
stos
dec
mov
sub
push
ret
push
cli
lock
push
mov
ja
jne
loopne
dec
sbb
insb
inc
fwait
cmc
sub
xchg
jb
clc
les
bound
push
cld
jmp
sbb
or
and
mov
and
xchg
pop
xor
xor
mov
inc
add
jns
adc
mov
fmull
stc
pop
lods
or
jb
not
dec
inc
push
push
xchg
clc
call
add
inc
std
jmp
jg
loope
jb
outsl
jns
das
and
jp
hlt
outsb
mov
ret
addr16
pop
pop
push
pop
stc
and
js
ret
add
pusha
or
pop
in
sbbl
rorl
mov
jns
mov
dec
xor
jae
scas
pop
mov
cmp
inc
pop
adc
ljmp
cwtl
inc
ret
andb
rol
cmp
mov
mov
loopne
cwtl
or
rcr
lea
pop
sbb
lea
dec
imul
inc
adc
sub
jl
out
jl
gs
rcll
lret
dec
arpl
rcrl
enter
mov
popa
or
loop
push
push
dec
push
lcall
ss
xchg
and
jno
cmp
les
push
jnp
jae
fcompl
or
push
adc
into
rolb
or
repnz
pop
ljmp
repz
ja
push
push
mov
idivl
testb
aas
subl
and
xor
mov
xor
je
mov
mov
call
sbb
jno
mov
fstpl
mov
dec
pop
add
aam
push
je
sbb
dec
fimull
call
imul
std
adc
fsts
repz
push
imul
ret
xor
jb
cmp
orl
jo
lcall
icebp
sub
not
jmp
shll
sbb
pop
bound
inc
inc
push
xor
hlt
call
sub
or
clc
pop
adc
in
in
add
sbb
in
lock
dec
js
ret
or
add
jo
mov
jns
push
mov
push
js
in
sbb
fbstp
out
add
insb
cwtl
mov
push
inc
cmp
lods
or
jge
je
add
fidivrs
jl
jo
sbb
sbb
push
decl
aas
push
out
cmp
dec
push
jbe
jbe
mov
and
sbb
aaa
insl
mov
fs
xor
add
jg
push
fsubr
es
add
dec
dec
rol
jo
scas
aaa
mov
jp
aad
js
add
push
jecxz
push
mov
imul
fs
fs
cmp
aam
roll
imull
push
ret
inc
out
sbb
faddl
cwtl
xchg
push
ss
push
sbb
jae
cmp
ds
loope
sbb
pop
fst
insb
xor
cld
push
push
mov
push
imul
and
mov
test
pop
not
jmp
mov
pushf
cmp
push
jb
sub
jne
cmp
inc
xlat
add
testl
out
arpl
dec
outsb
arpl
pop
mov
xor
addr16
push
inc
jae
cld
xor
lds
test
adc
bnd
js
std
andl
push
insl
loope
inc
push
mov
inc
jns
inc
ss
js
push
push
xor
bound
fdivrl
push
testl
fadd
test
pop
jbe
daa
push
dec
inc
xor
mov
rol
rcrb
outsb
add
or
push
icebp
adc
rolb
gs
insl
or
dec
sub
or
imul
pop
dec
not
jmp
or
incb
push
cmc
jg
mov
pop
je
sbb
mov
sub
inc
sub
fistpll
sbb
push
sub
dec
sub
iret
add
adc
push
outsl
sbb
pop
inc
add
dec
add
push
inc
mov
cli
adc
movb
inc
int3
xchg
imul
jno
add
fucomip
xchg
repz
lret
ret
fwait
mov
or
rorl
lock
repnz
scas
pop
call
push
push
je
jmp
add
sbb
jnp
call
sarl
pop
sub
add
neg
dec
inc
push
mov
mov
add
sbb
push
sub
neg
add
xor
fwait
in
std
or
dec
add
sub
enter
ljmp
dec
inc
loopne
sbb
pushl
adc
ret
add
pop
lret
adc
jmp
cmp
js
jns
push
fistpll
repnz
push
outsb
dec
jle
imul
fbstp
push
dec
pop
fisttps
adc
jbe
jp
pop
mov
push
in
add
cs
inc
ja
inc
data16
jecxz
inc
jbe
and
daa
lods
call
sbb
sahf
adc
aam
add
xor
mov
inc
fcompl
das
mov
jle
sbb
jnp
sbb
push
cwtl
mov
js
clc
add
mov
and
les
pusha
fwait
adc
mov
xchg
rcl
or
mov
push
mov
pop
sub
sbb
roll
add
pop
lahf
lods
push
call
jmp
outsb
je
add
xlat
push
js
jnp
cmp
and
inc
cmp
dec
push
ret
pop
cmp
push
or
mov
shl
jb
jae
xlat
out
out
cmp
rcll
out
mov
insl
aam
dec
cmp
dec
arpl
pop
ss
or
inc
push
add
cld
adc
pop
mov
xchg
jecxz
decl
add
xor
enter
sub
jno
pcmpeqb
lcall
add
cmp
add
mov
mov
inc
dec
add
pop
jmp
orl
dec
aaa
fs
aaa
sub
clc
pop
cmpxchg
ficompl
dec
xor
mov
xchg
push
push
cwtl
pop
negb
add
xlat
inc
arpl
pusha
inc
aaa
add
jl
stc
clc
les
popf
xchg
outsl
inc
jns
mov
pushf
xor
jo
ja
test
mov
jb
sbb
dec
icebp
sbb
dec
push
sbb
lock
and
es
mov
adc
add
mov
jns
cltd
ret
cmc
dec
mov
jae
sub
and
mov
mov
pop
fiaddl
addr16
outsb
adc
jo
push
movsb
xchg
insb
repz
push
push
std
les
dec
loop
xor
cmpsl
add
sahf
mov
xchg
js
divl
arpl
roll
xorb
sarl
fcoms
push
xorl
imul
jb
inc
add
mov
inc
mov
ret
outsl
add
dec
inc
xor
sbb
pop
inc
jne
xor
xor
adc
andl
or
jmp
outsl
push
push
pusha
js
repnz
test
jge
cmc
pop
push
add
shlb
lahf
loopne
adc
popa
inc
cmp
ljmp
mov
or
pop
pop
cli
sti
pop
pusha
ret
push
mov
inc
xor
cmp
mov
add
sub
je
aam
add
je
shlb
dec
dec
aaa
pop
inc
dec
gs
pop
inc
cmpsb
dec
das
ficoml
orl
out
xchg
icebp
xor
jb
je
in
bound
pop
insl
jno
pop
repnz
fidivs
aaa
xor
dec
je
fcmovnbe
aam
mov
jno
dec
je
pop
nop
clc
test
or
add
jp
ret
addr16
in
mov
sub
jp
add
push
into
jl
movsl
mov
inc
popa
push
xor
push
jl
lahf
test
cmc
ss
dec
mov
mov
call
pop
cmp
push
insl
das
cld
ret
lods
dec
dec
ja
out
inc
dec
cmpsb
push
aad
nop
data16
pusha
faddl
psubusb
mov
cld
and
in
inc
divl
sbb
dec
sbb
adc
add
push
dec
mov
jmp
jg
push
mov
inc
sbb
adc
jmp
in
xchg
dec
daa
jmp
mov
cmp
les
dec
mov
sbb
mov
and
sub
sarl
pusha
loopne
inc
mov
xor
incl
fwait
imul
jno
out
dec
lock
push
shll
roll
test
or
std
adc
clc
push
or
ret
fs
in
push
dec
test
fs
ret
and
aaa
insb
cmp
jl
adc
push
push
fs
loope
out
ret
sbb
outsb
adc
pop
xor
into
inc
sub
dec
jne
jo
push
fld
sbb
push
gs
mov
fimuls
inc
inc
xchg
enter
xchg
xchg
es
mov
cmp
rclb
das
xor
push
icebp
sbbb
push
dec
cmp
outsl
inc
xor
mov
in
pushf
add
mov
xor
pop
repnz
mov
or
mov
or
lock
adc
aaa
pop
adc
xor
xor
outsl
jp
dec
jo
jmp
sub
nop
sbb
lock
or
push
fwait
xlat
daa
mov
ss
sbb
jg
rclb
ret
movsl
mov
clc
and
push
mov
out
mov
into
ljmp
test
mov
lods
push
cmp
mul
push
jnp
cs
jo
ret
stos
fmuls
call
dec
xor
gs
dec
pop
push
xchg
xlat
movsb
in
mov
daa
xchg
arpl
dec
add
sub
jo
inc
jbe
and
int3
mov
xor
adc
sbb
jecxz
push
scas
ss
sub
add
in
movsl
add
xlat
jmp
mov
jnp
js
cmp
out
jb
sub
sub
in
add
pop
lock
scas
sub
rcrl
dec
inc
mov
out
icebp
cli
outsl
mov
pop
idivl
fiaddl
stc
or
mov
add
sub
sbb
mov
push
and
jne
jge
addb
push
dec
js
outsb
shrl
cwtl
fsubrl
mov
dec
push
pop
lds
xchg
lahf
xor
add
std
push
dec
inc
imul
dec
cmc
inc
outsb
outsb
xor
pop
imul
ja
dec
xor
push
or
and
les
imul
das
cmp
mov
cli
adc
dec
neg
pop
fimuls
mov
shr
inc
psubw
inc
into
mov
cli
cmp
lret
mov
mov
dec
jmp
inc
jbe
pop
and
cwtl
push
adc
push
lea
outsl
xor
mov
jo
bound
sbb
push
xor
hlt
sahf
fldl
lahf
jecxz
rorb
out
inc
popa
inc
mov
in
push
mov
mov
fsubrl
nop
js
jnp
mov
aam
shlb
jbe
push
xor
bound
test
xchg
arpl
dec
mov
pop
jle
jo
inc
sbb
xor
add
mov
mov
movsb
je
push
xor
jne
adc
xchg
sub
call
fstpt
sub
xor
jne
push
push
push
push
jg
add
in
adc
sbb
adc
sbb
pop
jmp
ret
rorb
xor
and
insl
bound
cmp
adc
pop
les
aam
js
sbb
lock
in
lds
adc
int3
fsubr
cld
aad
subb
fsubr
daa
or
add
mov
sbb
data16
rol
rorl
adcl
or
outsb
outsb
arpl
insl
ja
inc
pop
mov
mov
in
aaa
mov
mov
xchg
fisubrs
push
pop
mov
inc
dec
mov
call
xor
xor
dec
mov
scas
xor
xor
loope
lock
stos
inc
inc
add
loopne
and
shl
outsb
xchg
cwtl
fstl
push
inc
or
add
adc
push
pop
sub
add
add
mov
lret
push
or
inc
pop
add
mov
adc
inc
sub
enter
mov
mov
mov
xchg
mov
fdivrl
push
dec
daa
sub
dec
ja
mov
cmp
insl
inc
sbb
push
xchg
loopne
out
inc
mov
out
adc
xor
dec
jbe
fisubrs
xchg
insb
fsubr
das
js
lock
xor
sar
dec
dec
call
call
inc
test
popa
pop
xlat
inc
in
arpl
icebp
scas
sub
inc
dec
add
pop
call
icebp
fwait
jmp
clc
add
aad
add
mov
arpl
dec
or
pop
insb
cmp
fwait
je
xor
add
cmp
in
bound
push
sbb
and
lds
adc
insl
pop
and
dec
icebp
inc
adc
shrb
sti
insl
mov
insl
add
mov
pop
jmp
dec
xchg
popa
sahf
cmp
inc
movsb
pop
add
imul
jbe
inc
ss
icebp
aam
in
loopne
inc
sub
or
pop
in
call
fistpll
push
pop
sbb
xor
jmp
lock
xlat
fiadds
sti
mov
imul
or
fdivs
add
icebp
pop
outsl
dec
push
arpl
jp
addb
stos
xchg
divl
hlt
fcoml
dec
inc
ss
or
push
test
les
jle
fucom
inc
dec
push
xor
inc
pop
je
xor
ljmp
sbb
push
jge
pop
or
mov
add
add
nop
pop
adc
pop
xor
test
rolb
outsl
stc
inc
inc
cmpsl
dec
je
outsb
out
pop
xor
shl
xor
push
push
mul
pop
inc
and
sbb
sub
lea
add
roll
shlb
mov
subl
outsl
enter
sbb
push
outsl
pop
dec
outsl
jnp
or
pop
push
add
aas
add
inc
ja
sub
push
js
add
jmp
pop
les
aaa
imul
je
pop
inc
or
aam
inc
insb
bound
movsb
pop
mov
xor
fs
pop
and
or
inc
jno
mov
and
jecxz
mov
pop
rclb
cli
push
push
insl
cmp
mov
cld
or
xchg
popa
std
push
lods
pop
mov
imul
jno
insl
sub
lock
outsl
push
aaa
imul
cmp
mov
js
lcall
push
ljmp
xor
shrb
outsb
lock
cmp
insw
insl
js
pop
xor
in
dec
leave
aad
mov
popw
loopne
mov
sti
sbb
xor
hlt
pop
push
push
inc
or
outsb
push
out
fldcw
inc
adc
lds
jmp
and
aas
lods
jbe
sbb
mov
outsl
push
adc
cmpsl
sahf
mov
fwait
sub
mov
xchg
pop
push
aad
jb
lds
push
outsb
xor
xor
shll
addb
pop
mov
sbb
lds
jb
xor
dec
mov
ja
insl
pop
daa
sbb
sbb
jecxz
sub
fadds
jnp
mov
test
dec
cmp
add
cmp
xorl
jne
xor
mov
loop
xchg
call
add
ljmp
sub
loope
or
and
push
jecxz
dec
or
out
and
push
cmovo
inc
sub
inc
dec
xor
pop
xor
xor
inc
lods
or
add
test
das
ljmp
cmp
cmp
xor
push
gs
push
mov
xor
sub
rolb
inc
adc
push
sub
popa
pop
mov
adc
xor
mov
cmpsl
aas
xchg
xor
lret
into
sub
loop
push
stos
inc
ja
inc
lahf
push
add
imul
cs
imul
bound
inc
push
pop
mov
cmp
mov
mov
icebp
dec
sub
add
incl
ret
sub
add
xor
nop
movsl
enter
movsl
mov
add
cmp
cs
push
cmpsb
pusha
fldenv
hlt
call
push
jae
std
push
call
clc
inc
fs
jp
ret
mov
xchg
loopne
fsts
push
loop
sbb
call
lock
gs
out
dec
jb
push
pop
lock
push
xchg
or
xchg
sbb
fnsave
mov
ficompl
dec
or
sbb
ds
in
loopne
andl
dec
sarb
push
pop
shlb
jne
imul
icebp
mov
ret
lods
inc
mov
adc
int3
testb
xchg
xor
in
andl
cmp
push
dec
cwtl
xchg
testb
dec
pop
dec
inc
cmp
mov
cld
cmpl
je
inc
bound
adc
fdivr
cwtl
test
mov
in
jo
andb
call
add
ja
aas
xorl
hlt
mov
cmp
or
cli
inc
clc
fcomps
fucom
push
inc
scas
outsb
gs
push
addr16
aaa
mov
add
aaa
pop
or
lds
scas
xor
or
inc
in
cmpsl
or
addr16
fs
cmp
clc
mov
sbb
push
outsl
ljmp
sub
and
or
add
jmp
stos
bound
jae
outsb
jb
fs
add
or
decl
addb
add
inc
add
test
adc
add
add
adc
mov
inc
dec
dec
push
push
dec
push
dec
inc
dec
push
dec
inc
add
and
adcb
mov
or
andb
or
inc
mov
fists
mov
bound
push
jbe
jno
push
add
adc
adc
mov
cmp
xor
aaa
xor
ss
sub
lods
jne
add
add
test
jbe
out
test
test
inc
inc
pop
inc
inc
inc
push
dec
push
pop
je
inc
inc
adcb
inc
sahf
add
cs
out
cmp
and
sub
add
lods
add
mov
int
mov
jo
mov
test
pop
daa
lea
add
pop
imul
leave
or
mov
data16
mov
test
mov
mov
mov
pop
imul
add
outsb
dec
sbb
popa
sub
enter
pop
imul
enter
addb
and
out
arpl
out
mov
mov
insl
outsb
jmp
inc
and
cmp
mov
lods
xchg
fcmovbe
mov
add
pop
adc
or
adc
add
fs
xlat
pop
fcmovnu
popa
xor
mov
or
inc
std
mov
loopne
in
mov
adc
add
xor
mov
or
pop
jae
or
scas
fdivr
out
cmp
jne
jae
outsb
imul
add
xchg
das
lock
mov
and
mov
fldl
lcall
mov
jne
jg
xor
xor
add
add
add
jae
jno
aas
inc
mov
adc
insl
js
je
outsl
xor
aaa
xor
pop
jecxz
cmp
inc
insb
js
test
sbb
dec
cmpsl
push
stos
test
mov
mov
fs
or
in
inc
add
ror
inc
ret
int
scas
or
pop
xchg
adc
mov
nop
sbb
cs
test
popa
call
inc
insb
insb
outsl
arpl
cld
outsl
mov
and
ss
ja
addr16
js
fbstp
pop
push
data16
arpl
ja
jae
ja
push
cmpsb
int
or
addb
xchg
adc
gs
push
push
dec
lcall
lds
pop
sbb
sbb
mov
call
mov
or
and
fwait
mov
xor
mov
lods
xor
inc
stos
sub
fsubl
fcmovne
jbe
pop
imul
lcall
mov
stos
sub
pushf
xchg
or
popa
mov
add
jecxz
inc
sub
jne
sub
and
fucomip
add
dec
bound
js
dec
xchg
out
jae
rcrb
sub
cmpsb
xchg
pop
call
add
sub
fisttpll
pop
sbb
sub
out
pop
rcll
incl
dec
ljmp
stos
scas
call
add
adcb
cwtl
fstl
ljmp
mov
xlat
mov
jno
or
sub
jg
push
js
les
cmpb
pop
fst
test
stos
aaa
lods
and
sub
mov
add
mov
push
test
rcll
dec
ret
cmc
scas
lods
and
cltd
xor
or
pusha
push
mov
divl
push
imul
mov
call
cmp
jb
or
jmp
imul
mov
movsl
test
sub
dec
jno
lds
roll
pop
cmp
mov
jg
pop
pushf
and
std
sub
scas
and
inc
call
cmp
mov
jo
int3
xchg
sub
sub
stos
push
push
push
out
mov
clc
lds
shrl
fdivl
negb
out
xchg
pop
mov
popf
add
pushl
aaa
mov
scas
adc
push
sahf
jae
outsb
sbb
add
inc
movsb
mov
push
ljmp
add
xchg
clc
push
iret
add
add
fldl
fistpll
add
mov
les
shrl
cmp
loope
dec
popa
fiaddl
or
mov
sbb
fucomip
pop
pusha
fcomps
sub
cwtl
cmc
insl
dec
shll
dec
cmp
into
mov
imul
int
daa
or
ret
jmp
mov
pop
push
push
sbb
add
jo
jecxz
push
aaa
out
inc
incl
sub
lock
lret
cwtl
dec
jns
adc
xchg
or
das
mov
push
inc
jb
pushl
imul
jl
inc
dec
loopne
insl
out
frstor
lahf
pop
js
mov
mov
jmp
dec
arpl
push
xor
cld
pop
fsubs
aaa
std
mov
fwait
out
jae
mov
lret
and
stos
dec
pop
add
in
and
inc
pop
clc
ljmp
mov
in
clc
pop
fldt
xor
je
or
push
and
loope
call
pop
dec
jmp
push
cmp
cmc
pop
xor
xchg
iret
dec
dec
jns
movsb
mov
je
jg
sti
lahf
pcmpeqw
or
lcall
movhps
pop
mov
jecxz
mov
xchg
push
fisubrs
scas
cmpsl
fisubrl
xchg
mov
cmp
movsb
mov
sbb
xor
negb
lahf
jns
xorb
aas
mov
insb
push
ret
data16
ljmp
cld
pop
loop
shrl
push
sahf
push
loopne
mov
or
cmpsb
lret
subl
pop
fildll
je
sbb
inc
sbb
pusha
aas
movsb
test
roll
mov
pushl
xchg
or
push
jne
bswap
mulb
cmp
cmp
sbb
jl
lcall
imul
push
sti
stos
adc
dec
cwtl
loope
add
pop
loope
std
pushl
sbb
xchg
repz
pop
fcoms
xchg
or
pop
sbb
shrb
cmp
add
dec
dec
stos
out
lcall
mov
out
mov
sub
js
lods
movsb
cmp
jno
pop
stos
xor
pushf
mov
cmc
sub
roll
incl
pusha
test
sarb
rcr
xchg
pusha
flds
mov
into
inc
add
mov
leave
jg
push
add
jmp
jae
cld
insb
ljmp
or
fucomp
popa
flds
cld
push
mov
incl
int3
imull
pop
sub
aam
int3
push
pushf
adc
mov
stc
xor
sbb
mov
push
je
rcrb
push
call
sbb
ljmp
pop
push
pop
push
sbb
aam
push
shlb
sbb
lock
jmp
cwtl
js
jle
loopne
jbe
ss
movl
jge
imul
mov
fildll
jcxz
or
ljmp
sar
in
push
push
sub
xchg
popf
xchg
in
gs
mov
aam
fwait
jp
call
mov
iretw
imul
xor
dec
notb
cmp
mov
das
mov
es
lret
out
addr16
xlat
jb
js
pusha
out
movsl
lcall
in
jg
mov
js
adc
lds
aas
push
sub
jnp
lcall
js
enter
cmp
sub
fsubl
rorb
pop
pushl
fildll
xchg
or
dec
rclb
dec
shll
pop
nop
add
dec
mov
xor
inc
outsb
xchg
xchg
ficoms
push
mov
sub
cmp
test
bound
aaa
jg
mov
ror
mov
fildll
mov
pusha
jmp
jg
sub
xorb
mov
test
sahf
mov
lret
cmovae
call
div
arpl
fistps
out
inc
and
jb
add
pop
test
out
pop
push
mov
jecxz
clc
aas
aad
test
jge
out
call
mov
mov
jg
test
sti
aaa
mov
lods
and
mov
lcall
mov
sbb
rcrl
lcall
ret
shl
jnp
cmpsl
inc
dec
pushl
mov
mov
push
dec
cmpsb
inc
mov
andl
push
mov
repnz
jg
pop
sarb
push
das
pusha
push
out
es
test
into
fisubrl
aam
fstp
cli
jmp
jne
dec
addr16
dec
or
dec
sti
test
sbb
mov
fnsave
pop
mov
add
ret
dec
sbb
fbstp
push
int3
shrb
sub
cwtl
xor
insb
cmp
stos
mov
pushl
or
or
sahf
xchg
jo
sti
jle
fdivr
in
into
jmp
inc
add
jmp
jae
cmpsl
repnz
adc
pop
das
push
xor
jge
lock
decl
je
mov
lods
aaa
int3
sub
movsl
bnd
add
mov
mov
add
mov
in
add
adc
mov
xor
fimull
and
or
aad
or
scas
sub
rclb
xchg
incl
std
cmp
dec
xchg
adc
push
sbb
les
pop
lods
sbb
mov
jmp
pushf
int
pop
mov
outsl
in
sbb
mov
mov
cmp
mov
aad
jg
lcall
mov
and
rcrl
push
jmp
sub
pop
scas
shll
or
call
clc
cld
inc
bound
ret
test
testb
mov
out
jmp
and
mov
adc
and
rcl
lahf
dec
mov
pop
imul
in
fs
mov
lea
jecxz
test
pushf
fdiv
mov
call
out
and
fsubs
push
and
je
xchg
mov
ret
lcall
jle
cli
inc
arpl
or
mov
loope
jbe
orl
mov
xor
aaa
into
and
sbb
clc
sahf
rcr
cwtl
push
pushl
lcall
jns
xchg
jnp
out
mov
sub
data16
and
clc
int3
hlt
adc
and
outsl
or
lcall
cmp
or
mov
adc
inc
sub
popa
shll
jb
mov
push
test
cmp
imul
movsb
mov
ljmp
push
fcmove
and
cmp
jae
or
lods
pushl
mov
or
inc
gs
inc
mov
jg
adc
out
outsl
adc
hlt
jmp
pop
fiadds
add
out
lret
cltd
sub
loopne
out
sti
outsl
jmp
push
or
mov
jge
repz
jne
stc
pop
pop
sub
test
ljmp
dec
aas
push
sub
repnz
into
loopne
dec
mov
push
pop
push
sbb
loop
decl
or
cmp
sub
sbb
jns
fsts
inc
and
fildll
out
shll
adc
test
movsb
push
dec
dec
outsl
sub
sub
sti
xchg
push
sbb
aas
cltd
dec
scas
and
jg
dec
out
add
push
sbb
xchg
xor
mov
xchg
lret
popa
iret
stos
andl
decl
mov
and
outsb
ds
mov
adc
adc
adc
mov
cltd
pop
and
ljmp
mov
and
lcall
fistl
notb
popf
xlat
jmp
mov
js
mov
mov
repnz
jnp
mov
dec
sbb
cld
push
stos
mov
das
jmp
mov
lods
fsubr
mov
clc
call
dec
and
test
sahf
rcrl
int
cmc
dec
movb
decl
incl
icebp
out
push
push
into
lods
jp,pt
inc
pop
mov
out
push
cmpsl
xchg
rorl
cld
push
incl
inc
mov
jne
lock
shlb
outsl
cld
aas
loop
out
fwait
loop
out
cld
frstor
xchg
mov
or
aaa
xchg
dec
push
dec
mov
push
push
mov
dec
xor
mov
iret
out
push
pop
cli
inc
mov
in
push
les
incl
sahf
ds
movb
and
out
jecxz
mov
xlat
jge
ljmp
fsubrs
call
mov
ja
mov
and
mov
pop
popa
cmc
in
lea
mov
cmp
jno
xlat
mov
and
and
jg
xchg
inc
scas
mov
mov
push
cmp
pop
pop
mov
test
mov
decl
sbb
fildl
push
ja
adc
aad
imul
mov
jmp
dec
jg
inc
lret
mov
jecxz
xchg
mov
adc
mov
dec
xchg
mov
shl
aas
dec
in
add
mov
cmp
ljmp
int3
adc
pop
sbb
ljmp
and
add
in
cmpsl
mov
mov
mov
das
test
add
call
insb
insl
push
clc
jae
daa
mov
cmp
rorl
add
mov
pop
cli
add
lret
ficoml
lods
and
sbb
mov
inc
sub
dec
test
popf
jmp
nop
pop
xorb
mov
clc
sti
jo
jnp
mov
pop
int
and
sbb
scas
mov
aad
jg
jmp
push
xchg
dec
lods
and
mov
jge
cmp
call
imulb
pop
sbb
xlat
add
push
sarb
add
push
pop
nop
in
cli
ljmp
sbb
loop
xchg
lcall
mov
ss
push
jmp
stos
arpl
mov
pop
and
call
mov
out
push
jb
scas
cltd
imul
jl
inc
mov
incl
in
mov
lcall
out
mov
mov
or
fs
ret
cmp
add
jg
jnp
fadds
xchg
jo
lret
jno
insb
sub
add
cld
lcall
pop
add
pop
dec
imul
lea
sbb
out
and
loope
rcl
call
aas
int
mov
and
xorl
cwtl
and
and
push
les
arpl
inc
mov
mov
lds
mov
mov
cli
repnz
shl
add
jmp
lcall
lret
insl
dec
icebp
xchg
cli
inc
push
jp
fmulp
mov
inc
ficompl
xchg
mov
outsl
popa
jo
cmpsb
dec
cld
pop
insb
xchg
mov
fcmovnb
xor
mov
mov
loopne
sarb
and
std
lcall
ljmp
pop
xchg
cmp
xor
xchg
or
hlt
xchg
push
jmp
mov
inc
mov
inc
lock
pop
movb
clc
push
and
sbb
ljmp
std
pushl
xchg
lock
push
imul
pop
cli
sub
scas
cmp
xor
sarl
inc
xchg
pop
dec
pop
lret
ljmp
jmp
mov
push
xor
xlat
js
and
jge
inc
and
jecxz
insl
jns
mov
mov
jg
decl
clc
pop
jmp
mov
sbb
out
movsb
pop
js
mov
inc
in
test
sub
mov
jmp
dec
jb
sub
lock
pop
jo
addr16
mov
xchg
xchg
std
xor
incl
jle
scas
dec
xor
push
shlb
add
sub
mov
sbb
lock
pushl
jmp
and
push
mov
addr16
lahf
mov
ljmp
add
mov
fiaddl
aam
xchg
or
mov
cmc
ljmp
sbb
and
cmp
lcall
fists
sti
jae
pop
or
and
jbe
pop
xchg
dec
jb
adc
lcall
out
stc
movsl
int3
mov
orl
icebp
rclb
in
or
mov
mov
jo
decl
stos
or
jnp
add
hlt
dec
inc
lock
fistpll
dec
data16
add
inc
leave
es
xchg
psrlw
call
cli
das
xchg
arpl
xor
in
push
ljmp
xor
int3
mov
sbb
cmp
je
mov
outsl
hlt
ljmp
les
jmp
aaa
pop
loopne
pop
out
and
ror
es
push
mov
and
andb
ret
lahf
rclb
orl
xor
popa
dec
popa
push
mov
js
dec
dec
pop
outsl
cltd
lods
push
aam
sub
mov
add
movsl
lcall
scas
pop
mov
mov
dec
or
pop
insl
jg
cmp
mov
das
mov
jne
pop
pop
ss
mov
data16
mov
decl
and
push
sti
clc
pop
jnp
int3
int3
lods
sbb
mov
adc
xchg
or
inc
push
inc
scas
mov
ljmp
sub
pop
push
js
int3
sbb
ret
mov
push
stc
or
shrl
jg
sub
bound
mov
les
jg
mov
and
mov
iret
lods
aad
inc
sbb
push
pop
mov
pushf
or
or
pop
xchg
imul
cwtl
test
or
jnp
cltd
xchg
inc
icebp
lea
data16
rolb
mov
ljmp
das
and
sbb
xchg
scas
add
add
sar
fs
daa
test
loope
mov
pop
sbb
cli
ljmp
or
cmpsl
es
pop
notl
mov
sbb
fwait
adc
or
push
pop
xchg
stos
test
je
mov
stc
xchg
clc
call
les
icebp
ds
add
out
hlt
scas
xor
lcall
adc
pop
xchg
divl
sub
sub
sbb
mov
adc
sub
pop
adc
adc
js
lcall
push
xchg
call
pop
cltd
mov
clc
fcompl
decl
std
inc
add
xchg
xchg
filds
cltd
xor
dec
mov
aad
call
mov
je
mov
pop
cs
outsl
nop
in
in
decl
int
out
adc
adc
jne
xchg
xchg
xchg
adc
jmp
pop
push
cmpb
mov
hlt
jge
sbb
movsl
jg
lcall
mov
jns
ret
popf
mov
mov
dec
mov
dec
or
loope
cmp
hlt
or
jg
mov
test
jg
add
adc
xchg
clc
ljmp
adc
fstpl
lret
lea
sub
call
testl
scas
xor
jg
cmp
inc
in
and
repz
rcrb
cli
adc
add
movsb
out
hlt
ss
movsl
xchg
fidivrs
arpl
jae
lods
in
jg
lock
clc
and
mov
add
les
sub
or
ljmp
idivb
pop
leave
push
mov
repz
cmp
add
push
xchg
adc
mov
aad
mov
xchg
fcoml
pop
hlt
inc
call
push
mov
aaa
jnp
xchg
mov
test
gs
mov
mov
call
xor
fcmovne
leave
into
into
add
rsqrtps
sbb
mov
jmp
ljmp
adc
mov
jmp
fcompl
mull
arpl
fadds
incb
xchg
dec
xchg
iret
leave
dec
dec
ret
cmp
sahf
clc
popf
out
mov
push
mov
sahf
sub
lock
int
cmp
sub
insb
cs
enter
imul
jmp
popa
lock
dec
xor
or
jo
aad
jecxz
js
and
sbb
out
std
mov
sub
push
or
xchg
aas
cwtl
inc
test
rclb
fbld
fsts
sub
test
mov
insb
cmc
sbb
sbb
les
mov
and
pop
test
sahf
mov
jnp
pop
popa
push
cmp
jmp
pop
daa
push
movsb
ds
subl
inc
fwait
mov
xor
mov
rcl
mov
pushl
sub
inc
sbb
lcall
fcmovbe
mov
pop
adc
mov
out
dec
adc
pop
cld
jg
adc
push
sbbl
xchg
and
das
enter
adc
push
jmp
add
fcomi
jg
ljmp
pushf
loopne
pop
cmp
xchg
jecxz
rcll
cmp
test
pop
clc
push
movsl
jg
inc
ljmp
pushf
mov
and
pop
mov
sbb
sub
or
call
stos
aam
cmp
mov
mov
jg
jge
mov
sub
mov
jno
xor
mov
lcall
loop
movsb
or
sti
jns
std
in
or
or
ja
decl
insl
sub
fadds
lcall
xchg
cmpsb
pmaddwd
mov
jmp
mov
pop
inc
rclb
outsb
cmp
clc
lcall
cli
dec
xor
cwtl
push
pop
mov
int3
loope
rclb
in
mov
mov
lret
aam
push
push
pop
push
pop
inc
fstl
shrl
dec
in
mov
in
dec
fs
aam
out
push
mov
sub
out
sarl
push
dec
decl
mov
mov
mov
adc
addl
insl
and
repnz
fists
std
cld
or
sahf
ljmp
mov
in
sbb
es
in
pushf
jge
lret
popw
mov
add
push
loopne
adc
call
popf
xor
jns
decl
incl
inc
adc
mov
xor
mov
xchg
push
mov
xchg
imul
int3
or
aad
cs
lods
cmp
or
rol
repnz
lret
in
jl
add
sarl
loopne
sbb
sti
clc
sbb
decl
sbb
push
xor
mov
jl
sub
pop
inc
gs
incl
rcr
incl
ss
mov
mov
decl
pop
jno
inc
in
ret
cmp
test
sbb
and
pop
jg
call
scas
adc
xor
popa
sub
pop
mov
mov
push
fmull
mov
inc
and
ss
mov
and
out
fisubrl
mov
cld
movsb
push
sbb
pusha
xchg
mov
cmp
js
sub
std
decl
lret
xchg
icebp
mov
popaw
push
mov
mov
out
pop
loopne
std
addb
cmpsb
inc
cmpsl
sarb
adc
std
push
jmp
popa
call
mov
sbb
test
loopne
outsl
mov
jg
dec
outsb
jno
mov
popa
pusha
cmc
aad
jbe
into
stos
fidivrl
cs
jmp
rolb
xor
jmp
fnstenv
mov
dec
push
lcall
das
mov
stc
push
in
push
inc
daa
mov
sub
test
push
vpacksswb
imul
pushl
outsl
out
fs
mov
aaa
xor
lods
pop
mov
mov
imul
scas
pop
add
test
mov
jg
adc
int3
adc
dec
int3
mov
popf
popf
in
adc
or
call
ds
sub
adc
inc
fnstcw
pop
sarl
arpl
aas
pop
cmp
push
clc
mov
xlat
mov
add
lea
pushl
add
pop
or
mov
ja
loopne
call
cmpsb
repz
lods
adc
dec
aam
mov
jns
bound
sbb
push
pushf
jg
call
fcomps
rcr
inc
mov
fidivs
pop
xorb
cmp
lcall
lock
and
repnz
push
lcall
jo
push
pop
jns
test
popfw
in
sbb
pushl
adc
js
call
sub
loop
in
js
sbb
cmp
sbb
cmp
dec
adc
mov
je
inc
mov
popf
jg
pop
push
lret
je
push
mov
mov
inc
loop
xchg
cli
je
imul
repnz
push
popa
cmpsb
mov
jbe
xlat
lock
pop
mov
shrb
lods
test
mov
lea
push
mov
or
sub
addr16
jno
lret
jmp
sahf
movsl
scas
les
xchg
test
jg
test
aaa
out
mov
icebp
jbe
mov
push
ret
test
jo
fsubl
inc
xor
push
xor
jl
aas
outsl
push
enter
jg
fsubrp
out
in
jae
push
pop
add
lret
mov
sbb
mov
lahf
dec
mov
incl
out
in
ss
cmpl
enter
push
das
ljmp
lret
sub
stos
sahf
data16
jmp
fbstp
es
adc
pushl
xchg
inc
jmp
ss
xor
xchg
push
bound
mov
dec
daa
jns
mov
mov
roll
lea
andb
clc
inc
mov
or
cmp
xor
cli
jecxz
add
cltd
xchg
fstpt
and
sbb
cmp
mov
fistpl
pop
cmc
cmpsl
pop
adc
dec
mov
das
lock
adc
add
loopne
cmc
pop
lret
sti
jp
inc
call
incb
push
add
jns
test
cli
push
jmp
mov
push
jne
mov
fbstp
mov
and
adc
mov
pop
jmp
and
and
mov
jne
fdivp
push
cli
jmp
jne
mov
orb
dec
sub
mov
or
jbe
adc
mov
out
sbb
sbb
cmp
shrl
pusha
mov
xchg
push
xor
cmpsb
fcompl
mov
xchg
sbb
call
push
outsl
jb
out
push
cmp
mov
incl
test
cmp
cmovle
xchg
ficoms
sub
push
jg
cmp
inc
sub
fsubrs
jbe
sbb
adc
jg
xchg
sarb
xchg
xor
add
push
stos
shrb
mov
in
mov
fstl
jne
sti
inc
int3
scas
lret
jb
out
neg
jne
or
cwtl
incl
lea
jecxz
cmpl
daa
pushl
leave
das
outsl
call
adc
clc
fbstp
sahf
cmc
insl
dec
cmp
jmp
push
aad
jae
aam
imul
jmp
imulb
test
popa
test
jb
mov
arpl
mov
jg
mov
jge
dec
mov
ljmp
lods
out
cmpsb
mov
lds
out
mov
fsubr
xchg
clc
imul
repz
push
or
das
aas
inc
subl
aam
and
ret
jecxz
adc
cld
mov
ret
fidivrl
jmp
xchg
xchg
mov
pusha
ret
pop
clc
decl
movsl
jmp
pop
pop
sbb
mov
jecxz
inc
sub
outsl
shl
lcall
pop
sub
xorb
push
movsb
pop
std
lock
ret
lods
sub
mov
adc
lods
scas
popa
xchg
lahf
std
inc
or
pop
in
pop
outsl
push
scas
movsl
or
outsl
and
sub
in
das
stc
mov
pop
push
cmp
in
insb
mov
mov
cmp
jmp
mov
aam
mov
setns
loop
mov
stos
icebp
mov
ss
or
hlt
mov
dec
or
das
fcmovne
sub
andl
push
lea
push
or
sbb
pop
loop
lcall
push
leave
cmp
lods
xor
and
xchg
jmp
imul
sbb
xorl
xor
push
loopne
pushl
mov
add
or
jge
cs
iret
mov
ljmp
xchg
cli
pop
pop
arpl
or
xchg
mov
inc
mov
mov
push
pop
xor
jecxz
pop
jle
incl
xchg
push
xor
push
in
mov
jp
int3
out
pop
stos
lock
add
jno
nop
aam
or
mov
push
xchg
in
js
or
test
adc
clc
jnp
lret
dec
ret
loopne
cmp
sti
cwtl
inc
dec
jp
xor
outsb
jmp
fmuls
ds
call
int3
mull
popa
iret
out
mov
repz
xchg
fdivrl
call
mov
xor
xor
cmpsl
push
dec
or
push
xchg
cs
pushl
clc
aaa
push
fwait
out
and
xchg
pop
lahf
lea
dec
inc
lret
push
sbb
cli
std
adc
xor
in
jle
xor
daa
sbb
les
lcall
jnp
repz
jle
xlat
dec
vandnps
adc
mov
imul
shl
cmc
jle
stos
add
mov
mov
cs
aaa
jne
xchg
jo
int3
pusha
jg
pop
xchg
clc
enter
cmpsl
aad
xchg
inc
push
shrl
inc
testb
add
dec
xchg
je
mov
idivb
mov
test
ret
xchg
lds
sbb
aas
push
sbb
test
mov
incl
cmp
cmpsb
xor
jmp
inc
lock
jecxz
mov
cld
lret
cwtl
arpl
jge
es
add
orl
out
cli
sbb
repz
mov
fimull
jp
sbbb
aam
mov
mov
pop
sbb
xor
xchg
es
pop
xchg
adc
jmp
stos
push
shll
jecxz
xchg
pushl
in
je
lock
loope
insb
stos
push
test
movsl
inc
dec
incl
inc
jmp
add
repz
sbb
push
xor
dec
xor
cld
mov
addb
mov
call
les
push
xchg
dec
into
or
out
test
fcoms
rcll
lcall
dec
popa
mov
mov
inc
add
ja
addb
sbb
leave
push
mov
lcall
stos
push
test
out
mov
xor
add
je
sub
and
clc
inc
call
or
lock
cmpsl
and
outsl
dec
xor
mov
icebp
and
clc
lcall
sub
mov
mov
lods
jno
fwait
jmp
or
popa
inc
cmpsl
pop
incl
xchg
mov
sbb
jmp
int3
aaa
inc
outsb
cmp
mov
stos
insb
add
jg
cmp
xor
popa
gs
pop
mov
decl
insb
or
repnz
or
ss
push
cltd
rclb
lcall
cmovne
jge
mov
push
leave
jne
xchg
jb
sbb
pop
aaa
dec
cld
jmp
imul
cmpsb
mov
or
adcl
into
aaa
clc
mov
scas
jne
cmpsl
push
les
rolb
dec
fcompl
pop
sar
sub
cmpsb
push
les
pushl
inc
cld
push
sbb
xchg
sahf
sub
idiv
ljmp
or
fists
adcl
push
nop
pop
push
mov
pop
cli
mov
out
dec
loopne
addb
stos
or
leave
and
jnp
pop
incl
push
repnz
jno
jp
add
jo
pop
sub
decl
sub
shr
popf
cmpsl
xor
adc
push
cmp
xchg
test
pushl
mov
adc
data16
loope
push
test
mov
lods
lcall
push
add
cmc
cmp
xor
lret
enter
incl
sub
dec
mov
inc
push
xchg
test
test
in
fimull
aaa
or
inc
cli
fwait
adc
incl
cld
outsb
mov
jne
jno
sbb
loopne
sbb
enter
das
scas
subb
lahf
mov
cmpsb
xor
cmpsl
test
das
mov
mov
mov
lods
sahf
int3
loop
iret
ja
ds
ljmp
jnp
stos
and
mov
icebp
cmp
pop
pusha
sbb
pop
xchg
imulb
mov
pop
aad
sbb
lcall
jo
inc
sub
sub
mov
pop
push
imul
push
test
and
in
sbbb
inc
negb
or
scas
and
aaa
mov
lcall
icebp
mov
mov
mov
cmp
shll
rorb
push
cwtl
jg
sub
mov
lods
add
es
and
mov
lods
add
les
cmp
int
cs
mov
or
mov
or
lcall
pop
pop
inc
jbe
add
mov
mov
cmc
incl
aad
arpl
xchg
xor
mov
idiv
dec
add
js
gs
xchg
fistps
xchg
pushf
shrl
jmp
fdivs
sti
xor
mov
ss
xor
jmp
sbb
fs
xchg
add
jecxz
rdtsc
pushl
jns
xor
lock
jno
inc
and
outsl
adc
mov
lcall
out
rorl
and
addr16
cmp
stos
decl
or
mov
shll
mov
push
and
sub
mov
push
aas
test
aad
push
test
push
lret
push
insb
jne
jnp
stc
mov
fcmovu
in
pop
outsl
fsub
call
dec
in
push
stc
mov
pop
pop
mov
mov
call
flds
cmp
fidivrs
mov
call
mov
jle
out
push
int
sbb
lock
xchg
xor
dec
mov
add
cltd
std
mov
jge
or
dec
dec
adc
xchg
and
std
mov
cmp
daa
enter
mov
mov
cli
call
fisubrs
ret
pusha
lock
inc
out
js
push
scas
jg
decl
push
sbb
pop
ss
jmp
nop
mov
fbstp
movsb
jo
out
incl
decl
inc
cmp
fcomi
mov
imul
jmp
adc
mov
add
add
cmp
lock
mov
xchg
imul
pop
in
xchg
add
push
pop
add
mov
idivb
fdivs
push
mov
sbb
mov
xchg
sbb
jmp
mov
scas
sbb
inc
bnd
ja
jmp
cwtl
lods
mov
imul
cld
sbb
dec
xor
adc
push
pop
incl
ljmp
push
xor
cmpb
notb
sub
dec
loope
xchg
clc
cli
mov
add
fwait
test
sub
or
lcall
jg
jmp
js
pop
mov
inc
add
or
add
decb
in
cmpb
fldt
and
dec
inc
push
lcall
dec
mov
aaa
insl
inc
push
in
mov
jg
aam
pop
in
es
jg
fistpl
mov
dec
loopne
xchg
mov
clc
push
gs
iret
xchg
lret
mov
cmp
adc
in
aad
mov
cld
sbb
aad
mov
outsl
mov
loope
lea
xorb
jbe
pop
xchg
dec
lahf
pop
ljmp
jns
add
adc
sbb
daa
scas
jno
adc
mov
mov
outsb
lcall
dec
inc
test
add
lock
pop
inc
fimull
adc
mov
dec
pop
lock
add
mov
add
sahf
pop
clc
stc
push
xchg
jno
inc
pop
hlt
adc
dec
pushf
xor
pop
mov
je
adc
adc
data16
mov
mov
in
dec
mov
sbb
das
icebp
lcall
add
inc
push
inc
icebp
repz
dec
mov
dec
imul
sub
push
das
lcall
jns
leave
divb
push
add
mov
and
xchg
sub
int
xlat
in
xlat
xchg
xchg
xlat
dec
sub
mov
incb
in
mov
fimull
sub
add
jmp
out
add
int
xor
mov
jmp
jg
loop
add
pop
imul
call
xchg
inc
mov
or
mov
add
sbb
pop
test
inc
sub
iret
and
lds
adc
push
outsl
incl
mov
int3
inc
es
add
cli
mov
jg
add
jbe
test
adc
lahf
cld
mov
and
cltd
adc
xchg
mov
aaa
js
mov
inc
inc
inc
add
rcrb
jnp
int3
lret
inc
xchg
js
xor
mov
loopne
pushl
loopne
push
imul
rolb
ret
inc
loop
sarl
dec
popa
lahf
push
lcall
hlt
dec
dec
dec
into
inc
mov
lods
jge
sub
pmulhw
out
ds
test
in
ljmp
add
out
lret
xchg
or
push
arpl
sbb
pop
adc
sar
ljmp
cmp
push
inc
stc
xchg
mov
mov
jecxz
mov
mov
cmp
jg
incl
cwtl
or
cmp
mov
cli
divb
lcall
jmp
pop
cmp
nop
pusha
mov
aad
push
push
mov
mov
add
sub
inc
je
jl
hlt
push
rolb
pusha
cli
sub
arpl
push
push
push
clc
pusha
stos
adc
mov
insl
jae
xchg
dec
leave
xor
dec
inc
xor
leave
mov
pop
cmp
ja
adc
dec
in
aas
push
addr16
adcb
outsb
lret
sbb
mov
movsl
pushl
cmp
rcll
push
call
or
mov
and
mov
push
and
daa
ljmp
icebp
mov
push
sahf
cltd
xchg
jl
aam
add
outsl
dec
jl
push
enterw
mov
fs
push
jg
fisubs
push
and
lahf
ss
mov
lock
jmp
lods
pop
ficoml
sti
in
mov
pushf
sbb
hlt
out
sub
ljmp
ret
or
dec
jle
movsl
insl
idivb
loop
push
mov
pushl
cs
insl
mov
andl
jnp
sub
pop
testl
in
jnp
mov
push
jle
mov
cmp
xchg
xchg
mov
pop
adc
xor
mov
cmpsb
imull
pop
in
and
dec
cld
das
mov
orb
or
push
mov
repnz
icebp
adc
js
aam
mov
les
mov
mov
sub
pop
lods
and
pop
dec
push
push
lods
dec
mul
mov
inc
mov
push
outsl
cmc
fwait
mov
stos
dec
xchg
aas
popa
inc
push
mov
decl
in
rcrb
ljmp
cmp
imul
idiv
push
cmp
popa
inc
cld
xor
push
inc
sub
test
cmpb
movsl
cld
xorb
cld
pusha
fs
stos
mov
xor
mov
scas
jbe
push
jne
cmpsl
cmp
daa
mov
mov
mov
jge
jmp
mov
and
xlat
mov
inc
fadds
lcall
xor
inc
pop
cltd
dec
pop
in
fcoms
sbb
cld
cmc
inc
jge
pop
hlt
in
mov
xchg
sti
mov
add
andl
andl
psrlw
mov
pushf
ljmp
xor
ret
mov
outsb
test
lcall
inc
pop
stos
xchg
lahf
sub
xchg
aam
repnz
cmc
inc
cmp
sub
pop
xor
mov
ja
das
imul
push
pop
outsl
test
test
jb
rorl
jbe
lret
inc
inc
mov
jns
ret
hlt
fbld
pusha
fcomps
mov
lahf
xor
movsl
in
inc
sbb
push
in
cli
dec
cs
lcall
push
inc
jnp
jge
jmp
add
and
rclb
bound
sahf
jne
sbb
xchg
jne
push
add
mov
lea
inc
add
sti
inc
sub
cmp
mov
divb
pop
stos
dec
jmp
push
rolb
jmp
jmp
cmp
testl
gs
idiv
insl
cld
and
loop
sbb
ljmp
jecxz
sbb
add
pusha
sub
mov
enter
pop
mov
xchg
jg
das
fcomps
push
cli
xor
jbe
sub
mov
jg
ljmp
mov
cmp
int
cmpsb
movsl
and
lds
incl
inc
imulb
mov
sub
filds
dec
dec
cmp
stc
dec
or
adc
cmc
cmp
add
lret
stc
fstpl
mov
mov
rsqrtps
mov
jb
ljmp
cmp
enter
pop
or
mov
sbb
mov
sti
aad
jmp
and
add
aas
dec
scas
loope
cmpsl
jne
outsl
pop
mov
mov
cs
sub
aaa
push
dec
rorb
jmp
sub
test
adc
pop
je
mov
and
adc
sbb
and
pusha
mov
clc
adc
mov
in
pushf
push
jmp
fcoml
testl
cmp
mov
stc
loopne
clc
sbb
xchg
daa
push
fwait
push
pop
mov
sbb
jno
mov
push
jmp
loop
enter
mov
xchg
mov
pop
iret
sbb
add
les
jne
mov
push
xchg
push
hlt
lods
jbe
mov
jg
jns
mov
inc
cwtl
xor
ret
pushf
ds
mov
inc
insl
jnp
jae
xor
inc
mov
les
xlat
out
scas
lret
jge
in
fwait
test
pop
loopne
lea
push
idiv
sahf
dec
jl
pushl
clc
fwait
dec
in
enter
rcll
xchg
movsl
mov
cmp
fisttpl
mov
lcall
cmp
in
test
test
push
cmp
fsubrl
push
pop
test
lcall
sbb
mov
stc
jb
mov
adc
aaa
xchg
ljmp
aaa
dec
xchg
andps
mov
out
push
adc
stos
pop
repz
jmp
xchg
push
dec
ss
add
jo
mov
cld
ljmp
cmp
sti
into
xor
decl
mov
mov
sbb
jo
ds
cltd
in
out
xchg
pop
subl
mov
cmpsl
icebp
aaa
aam
jg
clc
sub
pop
stos
and
pushf
push
popa
std
into
sub
dec
sub
scas
mov
outsl
sarb
in
jo
loope
push
and
in
mov
xchg
mov
sbb
imul
mov
insl
loop
mov
sar
push
out
sbb
pop
das
pop
mov
lea
push
movsb
es
std
jmp
sarl
xchg
push
iret
add
call
xor
adc
xor
test
std
push
push
test
add
daa
cli
push
aam
arpl
in
push
movsb
inc
adcb
dec
lcall
sub
stc
inc
sbb
push
xchg
shrb
inc
pop
clc
inc
jecxz
cwtl
add
stos
loop
inc
ds
mov
lcall
jg
cltd
adc
std
fnstsw
jmp
sub
add
xor
xor
mov
test
mov
in
enter
out
xchg
cmc
sti
or
push
mov
std
or
bnd
push
jbe
decb
dec
mov
ret
lea
mov
mov
sub
fucomip
xlat
lahf
cmp
mov
sub
movsb
push
adc
sarl
adc
mov
adc
cmp
cmp
cmpsb
cmp
call
call
xor
mov
xor
mov
jg
lcall
jge
aas
ljmp
testb
inc
in
pop
mov
call
add
jns
test
popf
and
roll
cwtl
jmp
jp
xchg
fmuls
outsl
decl
test
rorb
rcll
add
insb
rorb
adc
fwait
jmp
push
mov
ret
mov
push
movl
pop
jmp
or
test
jg
sbb
mov
lret
gs
push
cmpb
jg
loope
lcall
and
add
mov
or
sahf
xorb
js
jo
inc
stos
fnstsw
insb
subb
das
std
jmp
cmpsb
push
rorb
fs
mov
pop
cmp
and
pop
clc
jmp
dec
mov
addb
shlb
jl
movsl
jmp
roll
in
fimuls
push
xchg
sbb
aaa
hlt
jb
cld
mov
es
inc
sbb
inc
mov
dec
out
jnp
cmp
and
das
mov
outsl
insb
xchg
lods
loopne
dec
rorb
xchg
add
incl
mov
cld
push
or
cld
jl
sarb
aas
std
ljmp
push
cli
cmp
popf
cmp
popf
jo
daa
xor
mov
loopne
cli
sub
push
divl
lcall
call
ja
sub
repnz
arpl
add
bnd
test
mov
les
icebp
inc
mov
out
pop
inc
add
shrl
lcall
pusha
jbe
jnp
ffreep
call
push
adc
add
sbb
hlt
insb
nop
testl
pop
jae
mov
das
cli
icebp
shr
mov
loopne
mov
sbb
dec
add
jne
sahf
loop
sbb
and
push
xchg
adc
pop
adc
out
pop
push
inc
fiadds
in
pop
adc
ja
fnstcw
test
aaa
out
aaa
test
aam
incl
push
int3
sub
push
loope
cmc
jle
mov
popa
ficompl
push
push
push
into
mov
decl
xchg
stos
imulb
mov
incb
push
xchg
mov
cld
inc
andb
in
cmp
mov
aad
sti
movsl
cmp
dec
inc
cs
mov
jp
dec
lods
enter
pushl
cmp
lret
dec
ret
or
mov
fdivrp
call
and
fwait
or
jnp
mov
mov
stos
jp
mov
int3
loopne
stc
mov
cli
jmp
ljmp
cwtl
shlb
and
jne
je
nop
xlat
sbb
pushl
or
ficoml
mov
push
loopne
push
xchg
xchg
insb
mov
testb
sub
nop
pop
xchg
hlt
mov
mov
dec
lds
mov
fiaddl
loope
fstpl
push
je
xor
imul
inc
sbb
addl
es
or
std
imul
sub
rolb
ret
jle
fcompl
xchg
hlt
cmpsl
fmull
inc
lods
pop
cs
dec
sub
pop
cltd
push
les
push
cmp
dec
mov
fldenv
mov
mov
mov
ljmp
ficompl
inc
jmp
aas
testb
and
lret
fistpll
jbe
or
inc
adc
aas
in
pop
xchg
push
enter
sbb
add
mov
jg
pop
push
xchg
push
out
std
roll
sbb
sarl
das
and
std
jbe
roll
sub
add
xchg
or
jg
cmp
les
jmp
add
cmp
test
test
push
mov
clc
sbb
adc
push
sub
test
sub
sbbl
sub
loopne
cmp
mov
adc
xor
dec
cld
jg
test
fimull
and
and
xchg
inc
xor
idiv
scas
mov
xchg
xchg
cmp
mov
pop
dec
les
push
pop
lcall
roll
or
mov
adc
loope
pop
add
lea
xchg
sub
pop
imul
sub
inc
jno
lea
pop
xor
dec
lahf
jmp
cmp
unpcklps
mov
call
mov
iret
cmpsl
sbb
scas
add
fbld
ret
pushl
xor
pop
pop
dec
dec
shrb
push
sub
in
test
jl
jns
sub
mov
add
pop
pushf
lods
int3
pop
lods
dec
les
clc
mov
push
xchg
lret
dec
ret
imul
rcrl
or
adc
in
mov
and
push
notb
cli
mov
adc
inc
xchg
or
clc
lret
jg
sar
xor
pop
dec
mov
dec
ficomps
aam
ds
ljmp
push
sti
xchg
aad
sahf
lret
jae
das
mov
int
int3
insl
stos
iret
mov
lods
in
xchg
mov
in
leave
aad
in
jg
lods
pushl
lahf
add
sbbl
xor
lock
lret
lock
cmp
repnz
pushf
pop
int
adc
xchg
sbb
mov
xor
and
shl
ljmp
or
icebp
out
out
repz
repz
leave
jb
in
cld
sub
push
mov
adc
in
loope
sub
add
and
push
callw
cli
sbb
dec
dec
repz
movsb
clc
xchg
inc
add
add
incl
stos
pop
jle
xor
sub
lds
movsl
dec
mov
xchg
pop
inc
in
cmp
movsl
idivl
push
adc
xchg
push
inc
mov
scas
dec
xchg
test
lret
mov
mov
xor
cwtl
call
push
pop
enter
imul
xchg
rorb
xchg
ss
out
xor
fcoms
sub
imulb
call
arpl
push
xchg
scas
push
adc
xchg
adc
je
fsubrs
call
roll
sbb
fisubrl
nop
fidivs
outsl
cmc
insl
push
stc
popf
cmpsb
ljmp
ljmp
movsl
daa
test
subl
orb
or
inc
sti
shrb
test
ret
add
push
out
sub
rol
jle
sub
jmp
cld
mov
fdivs
lds
push
lcall
cmp
jle
push
xchg
lods
lods
aaa
popf
cmp
jbe
push
es
decl
decb
nop
scas
sbb
test
mov
pop
pop
inc
aas
das
std
mov
ljmp
test
in
xchg
out
out
lods
push
jnp
sbb
rcrl
in
cmp
jg
pushl
sub
or
pop
dec
cli
sub
out
dec
jmp
jp
inc
sbbb
pop
jnp
lret
test
cmp
decl
xchg
out
leave
jg
stos
mov
je
dec
call
call
cmp
aad
into
mov
mov
lcallw
jmp
cmc
mov
mov
sbb
pushf
dec
stos
rcll
sarl
push
dec
xor
shlb
jne
push
cld
sbb
mov
outsl
out
adc
fwait
clc
aas
push
pop
jb
fdivr
icebp
ljmp
mov
call
call
lcall
adc
or
aam
or
vcvtsd2ss
push
jmp
inc
push
cmp
xchg
sub
shl
mov
leave
loopne
push
mov
enter
mov
xchg
aas
mov
mov
gs
xchg
test
icebp
incl
subl
fimull
mov
dec
pop
mov
lods
test
adc
insl
mov
xor
rclb
sbb
mov
int3
aam
arpl
lcall
mov
or
fdivr
movb
lds
mov
lock
adc
rcr
aam
add
mov
sbb
call
jo
xor
push
xchg
les
test
arpl
je
dec
xor
mov
and
aaa
lret
sbb
lret
daa
sub
inc
mov
icebp
sbb
xchg
lret
push
lret
cli
aaa
cmp
pop
or
dec
imull
push
adcl
mov
xchg
pop
xchg
roll
pop
out
das
lock
lret
xor
lods
testb
into
mov
in
cmpsl
push
mov
insb
in
rcrb
sbb
xorl
jg
xor
cmp
jnp
mov
dec
inc
push
jb
ljmp
ret
cs
xchg
bnd
ret
pop
loop
xor
lcall
push
mov
mov
int3
mov
pushf
ret
ds
cmp
sub
aam
in
ljmp
sub
pop
push
call
inc
mov
pushl
adc
lds
test
mov
jne
fwait
jne
dec
call
mov
bound
xor
mov
mov
lahf
test
out
cld
mov
cli
movsl
and
pop
pop
cmp
ljmp
and
rorl
push
sub
dec
stos
loopne
lcall
movsl
lahf
rcrl
push
sub
jmp
sub
dec
es
cli
add
pusha
loope
dec
lods
int3
inc
lret
cmp
push
or
push
sarb
ljmp
pop
ja
jle
mov
pop
xlat
adc
mov
mov
xchg
hlt
out
xlat
repz
ret
and
lcall
push
sbb
add
aaa
incb
mov
imull
xchg
xchg
cmp
mov
pop
mov
pop
jo
xchg
pushf
jge
pop
std
je
rorb
and
mov
push
mov
insl
outsb
sbb
push
pop
xchg
lea
shl
lods
mov
std
mov
pushf
mov
mov
lds
mov
xor
xchg
pop
rorl
jmp
call
cmc
scas
xchg
in
mov
aas
dec
dec
je
jnp
popa
and
loopne
jg
fs
mov
push
pop
fisubrs
pop
push
mov
xor
in
popa
add
pop
decb
push
xchg
pusha
mov
adc
test
and
xchg
clc
lcall
clc
push
shll
mov
mov
sar
inc
push
lahf
mov
dec
mov
and
push
sbb
add
mov
jmp
rorb
ficoml
fdivrl
in
out
xorl
pop
repz
lods
int
adc
cmpsl
inc
imul
jg
push
cld
mov
hlt
lcall
cmp
mov
dec
push
xchg
pop
xor
sub
jle
inc
cs
in
push
lods
rcr
jmp
scas
inc
add
iret
inc
pop
jge
in
lods
cld
push
push
ljmp
in
mov
sbb
aaa
mov
push
jg
jmp
pop
xchg
dec
push
jl
xchg
add
push
icebp
mov
sub
mov
dec
jle
or
sbb
outsb
jo
mov
inc
ss
addr16
lods
adc
mov
aam
push
ljmp
cld
sbb
repnz
dec
cld
lcall
add
adc
mov
cmp
push
jno
or
lcall
cmpb
mov
popa
dec
sbb
dec
outsl
hlt
pop
fdivrp
dec
lret
enter
xchg
jns
mov
mov
cld
pushl
sub
sbb
jp
dec
push
ret
pop
lea
push
icebp
incl
inc
dec
outsb
and
loop
adc
int3
adc
lods
shrl
fnsave
jbe
call
xchg
test
insl
testb
call
lret
iret
jl
outsb
push
movsl
add
cltd
pop
xchg
pop
mov
mov
sbb
push
icebp
int
xor
incl
and
cwtl
pop
test
xchg
lock
sub
imul
pushl
adc
sahf
les
cld
orb
xor
icebp
das
cld
jg
push
xchg
fwait
xorl
das
adc
les
dec
decl
inc
push
add
sub
scas
push
push
test
cld
int3
and
inc
lock
test
adc
fucomi
icebp
movsl
repnz
repnz
jnp
pop
mov
push
xchg
add
vpaddusw
decl
test
repnz
inc
push
add
or
jg
and
mov
jle
adc
xor
loop
test
lea
out
mov
mov
push
mull
daa
leave
sahf
rolb
xchg
adc
mov
rcrl
adc
subl
xchg
dec
mov
ja
and
mov
sbb
inc
imul
div
loop
daa
cmp
shr
xchg
mov
call
clc
call
mov
mov
xor
insl
mov
push
jge
pop
mov
adc
insl
mov
mov
daa
je
mov
mov
dec
aam
mov
fstpt
jl
lret
adc
lcall
clc
bound
mov
push
jne
rorl
dec
add
mov
out
sbb
jmp
popf
mov
in
sub
fisubl
jb
aam
in
pop
jp
jge
call
push
ss
pop
cmp
stos
push
shl
mov
shrb
cltd
enter
xor
clc
xlat
xlat
mov
dec
or
pushl
clc
fbld
arpl
popf
or
mov
jg
movsl
sub
negb
imul
bound
fadd
xchg
stc
pop
or
xchg
xchg
pushl
je
push
fwait
mov
mov
aad
imul
int3
in
sti
and
incl
and
sbb
shlb
push
push
mov
xlat
decl
addr16
dec
mov
sub
jmp
addr16
mov
mov
mov
das
pusha
lea
mov
jo
jmp
dec
cld
adcl
loope
jg
fistpll
into
mov
push
ja
mov
aas
mov
mov
clc
jmp
fisubl
iret
outsb
xchg
mov
sahf
inc
xchg
popa
js
insl
pop
divl
pop
lcall
loop
push
fistpll
imul
mov
dec
testb
sbb
mov
pop
arpl
jne
ljmp
mov
sbb
mov
aas
fwait
pop
mov
cmp
inc
dec
cli
js
std
decl
aad
add
or
mov
outsl
call
pavgb
push
pushl
sub
out
jbe
dec
jmp
lods
movsl
and
das
and
fsubrs
js
sahf
rcl
sbb
lret
ffreep
jmp
mov
xchg
mov
mov
cmp
lods
and
jle
and
mov
insb
mov
ret
shrl
jbe
mov
call
adc
loope
or
inc
test
xor
repnz
shlb
fisttps
push
idivb
dec
inc
mov
inc
stos
jo
loop
fisubs
push
pushl
fisubs
aam
xor
ss
or
fucomip
ret
inc
xchg
jle
jge
dec
mov
sbb
pushl
jb
jo
mov
mov
and
sbb
sbb
movsb
dec
cs
lods
scas
and
push
add
test
mov
pop
adc
mov
mov
fldcw
push
shlb
push
jg
inc
inc
jge
std
push
pop
pop
inc
orb
mov
lret
mov
and
testl
pop
jo
outsb
addr16
add
fcmovnbe
push
pop
scas
repz
inc
sub
adc
push
mov
ljmp
mov
push
fsubr
sbb
cs
adc
or
cmp
movl
adc
sbb
pushf
mov
lds
add
lcall
jle
xor
inc
jl
jg
inc
or
lret
dec
ret
jg
jecxz
xor
inc
insl
enter
fistps
xlat
push
inc
lock
mov
lods
scas
add
push
cld
add
imul
fnsave
sub
mov
test
fstpt
les
lods
loop
jbe
xchg
test
add
rorl
or
cmovle
aam
mov
add
sub
sub
pushl
jo
outsl
mov
mov
fldenv
add
and
inc
push
das
pop
lret
mov
out
xchg
jmp
ljmp
dec
fists
fbld
inc
enter
fwait
or
outsl
hlt
in
in
ljmp
sti
sub
cmc
shrb
jecxz
outsl
ljmp
frstor
mov
inc
or
addb
insb
scas
xor
in
test
adcb
xchg
aam
mov
hlt
std
mov
arpl
push
mov
or
xchg
bound
mov
sarb
das
mov
pop
imul
es
mov
int3
xor
ja
fnstenv
rcrb
imul
mov
add
pop
out
gs
std
lcall
mov
or
or
test
notl
pop
dec
xchg
or
pop
cli
dec
aaa
std
int
push
xchg
sbb
jmp
add
sub
and
pop
cli
lcall
movsb
leave
push
cmp
cmpb
push
sub
ljmp
pop
test
test
sub
jnp
je
mov
imul
mov
mov
mov
rcr
fstpl
mov
ss
neg
and
sbb
sub
pop
out
fsubl
sarb
adc
fwait
inc
mov
hlt
cmpsl
add
lcall
mov
lahf
out
jg
daa
xor
bound
out
push
aaa
nop
repnz
icebp
push
xchg
xchg
andb
lcall
xchg
imul
std
ret
cmp
mov
ljmp
sbb
sub
cmp
lcall
sbb
jmp
iret
imul
aaa
and
pop
in
fisttpll
out
out
add
or
mov
jb
mov
adcl
insb
scas
dec
out
repz
and
decl
sbb
nop
cmp
sub
mov
movsb
push
fmuls
aaa
pop
mov
sahf
inc
mulb
pop
mov
push
adc
pushl
sbb
add
scas
scas
es
mov
lea
mov
mov
enter
mov
lahf
pop
cmp
stos
or
fisttpl
in
lahf
pop
sbb
mov
icebp
jle
push
iret
xor
scas
lods
lahf
cmpsl
jb
js
dec
cmp
outsb
into
jecxz
arpl
xor
mov
add
inc
in
xor
test
arpl
enter
push
loopne
test
lods
ljmp
loop
das
lock
jno
in
jno
xchg
mov
inc
pushl
mov
aas
or
sbb
and
lahf
add
pop
mov
fnstcw
xchg
add
sbb
pushl
jnp
test
sahf
rcll
jns
mov
int3
fs
lret
add
dec
sar
outsl
cmc
lods
mov
mov
mov
pop
pop
aam
or
adc
cld
mov
jp
add
dec
push
rclb
movsb
outsl
sub
out
cltd
out
jne
sub
add
lcall
fisubl
out
dec
xchg
sub
je
and
pushl
fs
mov
test
stc
jno
pop
popa
or
and
in
or
cli
out
clc
scas
mov
sub
cld
mov
jmp
xchg
cltd
add
enter
fwait
rclb
icebp
incl
sti
ss
out
out
pop
addb
int3
adc
sub
hlt
decl
fwait
andb
push
cmpsb
push
lcall
lock
add
lcall
in
stos
fldenv
pushf
aam
test
notb
fistpl
dec
test
std
ret
sti
and
pop
cmp
jmp
inc
inc
clc
mov
mov
in
sub
sbb
push
js
test
jne
decl
pop
addb
outsb
sub
scas
sahf
jae
aas
mov
decl
push
pusha
pop
dec
mov
sub
xchg
and
incb
pop
xchg
jbe
cwtl
repz
jg
outsb
jmp
lods
repnz
mov
jo
movsb
out
fdivs
ljmp
jmp
roll
and
push
dec
push
repnz
and
inc
and
sbb
das
icebp
mov
and
rcll
or
out
jecxz
fmul
pop
sub
rorb
lret
cmp
inc
test
cld
ret
ljmp
je
pop
pop
addr16
xlat
aas
jno
sbb
push
icebp
je
das
cld
call
xchg
jmp
int
lea
dec
adc
jmp
push
adcb
daa
cltd
and
xchg
and
xchg
popa
or
pop
mov
and
xchg
cmpsb
sbb
inc
and
sbb
and
call
dec
lcall
dec
stc
in
test
inc
enter
call
stc
icebp
scas
xchg
ret
pop
stos
inc
mov
mov
or
fadds
mov
sub
insl
xchg
push
gs
pop
push
fwait
cs
jb
mov
add
lods
jae
pop
mov
imul
jne
loop
shrb
mov
loop
das
sub
sahf
xor
dec
cmc
pushl
mov
pop
outsb
mov
jno
mov
mov
lock
dec
pop
jbe
negb
ret
jbe
dec
outsl
jne
push
cmp
jae
fcoml
adc
pushl
arpl
jae
and
jmp
mov
inc
psllq
sarb
data16
mov
das
pop
pop
lods
push
cmpsb
pop
inc
push
out
lods
fsubrp
lds
push
push
fucomi
repz
mov
test
adc
sub
cmpb
lods
icebp
pop
loopne
cltd
rolb
push
adc
adc
hlt
das
mov
mov
pop
jg
enter
inc
cmpl
jecxz,pn
cmp
mov
fldenv
add
mov
mov
mov
push
subb
pusha
jbe
std
call
push
xchg
inc
aam
test
xor
idiv
mov
mov
std
or
mov
sbb
mov
es
movsl
push
and
inc
lcall
pop
pushf
inc
idivb
and
or
cli
incl
mov
adc
inc
mov
jmp
xor
hlt
jg
stos
xchg
jp
fdiv
sbbb
xchg
pop
dec
lcall
bound
aas
mov
lea
jp
in
mov
push
or
jge
in
push
in
pushl
cmpsb
mov
mov
pop
sbb
mov
pop
xlat
push
xchg
cmp
cld
add
xchg
fistpll
decl
enter
pop
test
fildl
int
fs
popa
repnz
cmp
std
das
insb
lock
aad
in
push
mov
stos
add
lcall
ror
push
mov
pusha
arpl
rolb
leave
and
iret
or
add
js
pop
mov
lods
imul
cmp
arpl
stc
xchg
jge,pt
jmp
jne
cmp
jg
incl
fstl
fdivr
xchg
pusha
iret
lea
sbb
mov
push
testb
xor
repz
repnz
add
jg
lcall
xchg
mov
adc
ret
arpl
scas
fstpl
outsl
cld
jmp
and
mov
fwait
dec
push
out
filds
arpl
outsl
subl
sarb
aad
and
enter
and
ret
sub
call
nop
fmulp
data16
call
xchg
nop
out
aaa
decl
sbb
iret
movsb
gs
test
iret
call
loopne
sub
cmc
sbb
xchg
enter
lcall
std
jmp
push
pop
fsts
repz
popa
addb
imul
jnp
incl
lods
xchg
xchg
adc
pop
call
hlt
inc
mov
subl
add
fdivrs
xor
mov
mov
xchg
cmp
jae
loopne
scas
sbb
jge
push
or
mov
lret
repnz
cmpsb
rcrl
push
push
fstl
jnp
dec
or
das
add
in
sti
fwait
inc
aas
xchg
mov
dec
imul
incl
fcompl
sbb
out
addb
push
cli
sub
inc
jg
das
mov
sahf
xchg
loopne
and
aaa
pop
notb
pop
push
decb
rol
ja
pop
lds
or
mov
dec
mov
and
cmpsb
push
xor
cld
inc
lcall
ds
mov
js
incl
dec
sbb
lahf
pop
push
pop
out
addr16
loope
imul
push
sbb
or
mov
mov
adcl
cmc
lcall
std
aas
shrb
adc
in
cmc
mov
scas
aaa
stos
cmp
fildll
hlt
in
jmp
in
sbb
stos
in
fdivr
xchg
or
jns
mov
aas
sub
push
xchg
xor
mov
mov
xchg
xchg
mov
push
lret
jp
mov
xchg
scas
sbb
and
jp
mov
xlat
out
cmpl
jge
add
mov
lods
lds
ljmp
call
in
sbb
insl
fimuls
pushf
pop
call
pop
xchg
push
fists
pop
cmc
incl
cmpsl
jl
xchg
cld
je
dec
lock
sub
stc
scas
mov
cmp
pop
cmc
push
push
test
inc
dec
xor
jne
outsl
lcall
cld
lcall
ret
push
pop
icebp
push
xchg
mov
push
call
rorb
pop
and
xchg
ret
inc
push
lods
loope
out
adc
dec
dec
jle
sbb
call
dec
stos
fwait
or
clc
or
mov
cmp
inc
lock
imul
or
xchg
loop
movsl
lods
jo
mov
xor
pushf
imul
in
adcb
push
out
and
lcall
mov
ss
loopne
je,pn
scas
cmpb
decl
das
stos
cmp
std
mov
loop
mov
jg
into
dec
dec
mov
cs
ja
jg
js
pop
fsubs
hlt
jp
mov
cmc
pop
inc
insl
test
lret
in
push
mov
test
pop
cmp
fistpll
pop
nop
cltd
loop
sbb
jg
pop
leave
int3
in
xchg
sub
mov
adc
lcall
add
cwtl
and
fnstsw
mov
jbe
lret
mov
cmp
cwtl
fwait
loop
sbb
fistpl
divb
inc
xor
daa
daa
or
xor
roll
lds
push
mov
mov
mov
sub
imull
push
jl
loope
adc
add
std
sbb
pushf
sub
subl
sub
in
cmp
lcall
in
dec
sub
pop
sub
stos
call
repz
es
dec
enter
je
jno
outsb
cmc
fists
mov
adc
js
sbb
test
je
dec
lds
cmp
dec
xlat
xchg
or
cmp
rcrl
in
cmc
fnsave
fidivrs
es
enter
mov
aam
repz
std
push
sbb
push
jg
das
int3
sahf
dec
or
mov
clc
mov
add
mov
out
cs
repz
aaa
mov
pushl
in
int3
cwtl
shll
sbb
outsb
imul
xchg
arpl
or
or
push
mov
xchg
insl
test
ret
leave
cmpsl
mov
sbb
push
or
je
stos
and
xor
push
insb
xor
frstor
aad
test
push
dec
ret
mov
std
pop
sub
push
jno
dec
shlb
push
pop
xchg
sahf
mov
lcall
mov
push
jno
test
outsl
cld
cwtl
ljmp
dec
in
in
mov
or
sub
cld
das
pop
enter
pop
lahf
pop
mov
icebp
jg
mov
xchg
cmp
data16
and
aaa
push
cmp
mov
dec
add
or
and
jmp
dec
clc
push
sub
ss
jg
hlt
inc
inc
mov
negl
and
inc
ljmp
scas
jle
jo
pop
loop
mov
push
fildl
adc
int3
cmp
xor
scas
fmul
jb
lods
mov
das
mov
fcompl
mov
clc
mov
xchg
ss
mov
sbb
out
pop
lret
int3
xchg
mov
mov
or
lret
dec
fsubrs
mov
loopne
int
or
std
jne
cmp
mov
mov
arpl
push
jmp
dec
addr16
fdivrp
lcall
jge
inc
add
inc
ficoml
roll
mov
push
das
icebp
outsb
imul
sbb
decl
les
mov
je
mov
and
adc
dec
scas
jns
lods
ljmp
iret
lods
adc
inc
jecxz
test
insl
cwtl
and
inc
nop
cmp
imull
pop
test
call
dec
cmpsl
stos
mov
cmp
lcall
addl
call
and
insl
jnp
cmpsb
sarl
aam
jecxz
arpl
pushf
mov
jg
mov
sub
stos
cli
lahf
fsubs
std
jp
pop
cli
ljmp
push
xchg
or
jmp
mov
xor
jmp
and
add
shlb
add
jno
aam
scas
cmc
jno
push
call
pop
out
push
xchg
xor
sbb
xlat
xor
mov
mov
jns
push
adc
mov
mov
ret
sbb
mov
or
pushl
mov
push
sarl
lret
sbb
mov
subl
jmp
or
cld
and
add
les
adc
call
dec
cld
mov
movsl
push
ds
enter
clc
lcall
inc
adc
jb
in
in
out
fcmovb
cmp
clc
test
ds
mov
push
sub
and
fisttps
pop
lret
adc
sub
push
push
xor
mov
jmp
mov
sbb
xchg
icebp
imul
inc
call
xchg
test
mov
jne
jecxz
arpl
iret
mov
test
imul
push
aas
sub
fwait
pop
stos
dec
stos
push
mov
mov
mov
aaa
cltd
enter
rcl
decl
shll
jo
cs
scas
and
jge
imul
sarb
jg
or
push
push
cli
pop
ret
inc
mov
cld
pop
cld
ljmp
inc
push
test
in
jns
cs
cmp
fs
push
sub
push
dec
cmp
xchg
mov
ss
cmp
xor
push
leave
jmp
xor
sub
mov
dec
pop
mov
ret
jne
xchg
bound
incl
sub
lods
lods
push
cli
jnp
inc
sti
jae
mov
decl
test
mov
nop
or
mov
int3
push
mov
popf
push
adc
cltd
rcl
dec
jg
add
mov
pushf
adc
mov
rolb
lock
add
dec
sar
pop
movb
xor
adc
jmp
jb
lods
xlat
inc
sbb
xlat
out
dec
mov
call
and
inc
dec
push
jo
cmp
sahf
mov
cmp
arpl
jne
shrl
subb
add
ljmp
imul
aam
js
in
xor
stc
out
dec
mov
pusha
loop
push
jmp
inc
sub
pusha
mov
rcrl
inc
pop
loop
stos
arpl
push
xchg
pusha
xchg
mov
lea
std
incl
imul
outsb
fstp
sbb
push
bound
and
mulb
add
pop
std
fistl
incl
xchg
push
pop
inc
pop
sub
fucomp
sub
inc
cmp
mov
stc
jmp
rolb
xor
leave
std
nop
jg
jb
cld
lcall
or
mov
mov
lds
incl
dec
xor
imul
ljmp
sbb
fdivrp
jmp
xchg
sbb
lods
nop
xchg
add
incl
decl
int
add
dec
add
lea
inc
mov
test
inc
test
jl
mov
call
out
pop
sti
ja
ret
fldl
xor
mov
add
cld
jp
pop
shll
xlat
inc
inc
incl
and
mov
or
or
addr16
outsl
mov
adc
cld
les
add
mov
xchg
push
xchg
cmp
jne
xchg
inc
lods
and
jmp
call
or
icebp
dec
or
inc
movsb
pop
xor
jg
jg
les
pop
jecxz
pop
and
das
or
jns
push
or
clc
mov
lcall
sub
repz
jmp
aas
mov
mov
sub
nop
outsl
ret
jmp
mov
enter
aas
cmpsb
outsb
push
mov
data16
inc
pop
lcall
decl
cmpsb
inc
push
xchg
outsb
in
out
fs
mov
sub
test
fucomip
rcll
les
jg
dec
mov
or
pop
les
mov
adc
jnp
stc
push
out
inc
push
ret
lock
and
push
outsb
push
cs
popa
add
or
lods
push
cmp
jmp
pop
icebp
punpckhdq
mov
cld
and
mov
xchg
add
pushl
test
daa
jb
hlt
jle
mov
mov
add
incl
or
lret
andl
fistpl
pushf
xor
std
test
outsb
ds
adc
and
test
in
cmpsl
repnz
push
dec
in
ret
jle
xchg
pusha
sub
xor
xchg
fwait
pop
lea
iret
sbbb
in
mov
jne
jecxz
pushf
scas
cld
jl
jl
insb
leave
cs
testl
std
jmp
sarb
cli
cmp
lcall
or
std
push
lret
arpl
jmp
add
outsl
push
pop
push
stos
push
mov
fwait
mov
fcmovu
int3
shl
xor
xchg
std
push
lods
ljmp
es
mov
pop
mulb
inc
loope
jbe
rcrb
mov
lock
shlb
test
xor
dec
leave
daa
lds
shlb
pop
scas
cmp
mov
mov
in
jnp
fildl
inc
push
aad
cli
jae
in
loop
incl
std
jo
mov
pop
pinsrw
dec
and
ljmp
mov
mov
out
and
sbb
testl
ret
insb
scas
ror
clc
fbstp
lahf
mov
push
sub
daa
cmp
sub
push
jnp
jno
jb
hlt
call
pop
out
movsb
adc
leave
ss
jecxz
in
das
lock
addb
sbb
pushf
dec
imull
push
mov
cli
mov
pop
loopne
popf
fdivl
push
fildll
ds
mov
je
clc
outsl
inc
jg
xchg
lds
loope
cs
add
sbb
sub
stc
call
lcall
or
xor
into
pop
ret
cmp
xchg
mov
cmpxchg
push
inc
dec
and
insb
pop
jmp
clc
hlt
je
dec
enter
dec
mov
bt
repz
sbb
fdivl
sub
sbb
repz
test
sub
pop
jg
jle
loop
push
jg
in
sub
lahf
mov
dec
sbb
icebp
dec
jmp
clc
inc
addr16
in
inc
dec
stos
and
jne
insl
pop
or
sbb
push
cltd
adc
xchg
inc
cmp
mov
mov
mov
cli
mov
push
lea
std
fwait
pop
jl
fucomi
jg
inc
insb
xor
cmp
repnz
lea
push
pop
jge
test
pushf
sar
jge
lock
sbb
cmp
rcr
push
into
stos
lods
sbb
aam
mov
jmp
adc
sbbl
out
hlt
mov
imul
cmp
movsb
mov
andb
cmp
pop
cmp
hlt
mov
lods
incb
pusha
cmc
inc
icebp
cmp
call
inc
aad
push
outsl
faddl
std
addb
mov
xchg
add
incl
lret
push
and
push
xor
popa
jne
mov
jmp
out
mov
fisubs
xlat
dec
jnp
daa
mov
test
add
jp
adc
lcall
dec
xchg
lcall
xor
ret
rcll
fidivrs
ja
in
add
pop
loopne
or
push
push
push
divb
loop
xchg
outsl
adcb
call
mov
jo
test
or
movsl
push
cltd
and
jns
fildll
faddp
push
cmpsl
fdivrs
pop
jae
ljmp
icebp
sbb
loopne
jae
cld
mov
mov
sbb
add
xor
adc
mov
call
xchg
cltd
test
popa
das
sbb
sub
int
mov
lds
decl
fildll
movsb
add
test
adc
jg
xchg
jg
cmpsb
jae
sub
dec
pop
popa
cwtl
or
xchg
cmp
fildll
stos
and
cmp
in
push
mov
jmp
or
lahf
push
or
mov
push
les
ret
add
int3
out
xor
dec
cmp
or
js
cmpsl
inc
out
data16
add
out
cld
pop
call
je
cmpsb
sbb
mov
and
mov
dec
movsl
pop
mov
and
and
sub
filds
xchg
and
xor
call
or
mov
sbb
fcoml
adc
and
mov
jnp
std
aad
aam
arpl
or
hlt
add
push
sub
arpl
push
test
mov
lcall
pop
rcrl
mov
fdiv
or
clc
outsb
jbe
adc
jle
jo
mov
outsl
imul
and
mov
insl
aad
and
push
pusha
fidivrl
ds
das
hlt
adc
and
pop
outsl
cmc
cmpsb
cmpsl
imul
mov
subb
adc
or
xchg
pop
cld
incl
ja
xchg
fldt
push
mov
sub
adc
pop
lcall
mov
das
sub
fistl
pop
jge
dec
mov
int3
imul
outsl
icebp
clc
js
ja
cld
or
cmp
sbb
jmp
stos
xor
shl
mov
push
sar
pushf
data16
js
add
and
mov
psubsw
mov
shl
pushf
jg
movsl
add
xchg
sub
xor
sub
lahf
or
inc
dec
mov
pop
rcrb
stos
rcll
jg
scas
lea
push
inc
cmp
adc
out
sarl
in
push
sbb
cmp
push
in
add
int
mov
aam
adc
or
xchg
sbb
xchg
push
jle
rorl
icebp
mov
sbb
cwtl
push
mov
stc
insl
jne
pop
push
lods
add
sub
ss
mov
call
or
xor
in
xor
mov
or
pop
pop
mov
sbb
arpl
popaw
loopne
loop
mov
test
jg
or
mov
ljmp
stc
lea
vmread
call
mov
adc
mov
incl
xor
pop
movsl
rolb
daa
jl
inc
iret
dec
lds
dec
in
sbb
dec
dec
push
mov
and
leave
inc
addr16
cltd
push
xor
dec
mov
clc
pop
and
iret
sbb
inc
ljmp
cmp
cli
jg
call
addb
cmpsb
xchg
and
and
inc
jl
inc
xchg
inc
cli
pushl
inc
dec
decb
int
and
fs
loop
add
clc
call
addl
pop
cmp
outsb
pop
out
mov
sbb
sub
ljmp
jmp
cmp
mov
pop
adc
je
ja
imul
jmp
mov
in
and
xchg
push
jl
lods
gs
movsl
pop
sub
pop
loopne
decl
daa
lret
mov
pusha
shrl
add
loope
hlt
push
xchg
in
inc
call
fildl
ss
mov
shrb
into
inc
push
inc
pop
sub
push
add
hlt
inc
mov
jmp
dec
jle
std
adc
iret
vprotq
pop
hlt
test
sub
adc
out
js
iret
cmp
and
sub
dec
pop
adc
pop
clc
decl
jnp
icebp
xchg
fadds
ret
cmp
aad
int3
or
jnp
enter
decl
sbb
sbb
xchg
mov
es
ljmp
mov
xchg
xor
rcl
mov
push
xlat
and
jmp
das
mov
pushl
lret
clc
and
push
jl
sbb
inc
int
ret
arpl
push
int3
jl
test
mov
fiaddl
loop
cmp
dec
mov
in
es
mov
lcall
mov
sub
cmc
out
sbb
aas
mov
pop
jbe
mov
jmp
cmp
and
cmp
jae
arpl
das
xor
decl
int
popa
push
adc
cltd
add
je
out
jae
pusha
lret
fildll
sahf
test
jecxz
outsl
jge
sub
jns
movsb
mov
call
call
cmpl
ss
xor
inc
push
out
mov
ss
xor
das
loop
push
jbe
push
sbb
test
lcall
test
fiaddl
sbb
sbb
sbb
addb
pop
call
xchg
mov
pop
icebp
lcall
mov
les
jl
imull
pushl
lods
pop
outsl
sbb
push
jl
adc
mov
sbb
pop
mov
hlt
mov
lods
xchg
test
vpmaddubsw
pop
divb
mov
mov
insl
or
pop
cli
iret
or
cwtl
push
push
pop
nop
js
insl
cmp
clc
mov
sub
mov
iret
sub
pushl
push
popa
xchg
adc
mov
data16
lcall
mov
cltd
int3
in
sub
aaa
push
pop
mov
cmp
rcrl
fistpll
mov
addr16
inc
dec
push
lea
aad
js
roll
pop
mov
sub
inc
idiv
or
sbb
nop
push
cmpsb
fwait
lcall
mov
xchg
lea
leave
test
jecxz
pop
pop
std
ljmp
out
ffreep
cwtl
inc
push
sub
je
aaa
clc
xchg
cli
xchg
psubsb
pusha
sbb
jle
mov
je
rcr
dec
enter
cmp
jle
in
lcall
push
ljmp
repnz
dec
into
lret
pop
pushf
push
movsb
push
add
std
pushl
lcall
xor
shlb
rcr
mov
incl
add
shll
iret
aaa
mov
jmp
fldenv
out
in
arpl
push
ja
loope
jle
mov
jmp
imul
xchg
popf
push
inc
loope
push
nop
push
dec
xchg
fisttps
mov
incl
aaa
pop
cs
pushf
aam
mov
pop
loop
les
mov
or
push
out
dec
mov
sahf
jae
pop
fnstsw
mov
mov
and
js
xchg
ja
inc
or
pop
mov
dec
jecxz
inc
jno
out
or
ficoml
push
les
clc
mov
mov
insb
icebp
mov
jae
xchg
fsubrs
mov
xor
jmp
xchg
push
into
test
decl
and
inc
pop
pop
fmulp
pop
clc
xor
shrb
dec
add
das
ljmp
sar
pop
mov
sub
and
insb
sar
mov
sbb
push
add
insl
push
fistps
cmp
cmpsl
cmp
sti
test
fcompl
stos
mov
and
cmp
sarl
jp
xchg
and
pminsw
add
push
jp
pop
sub
dec
loopne
out
or
seta
jmp
pop
push
in
sbb
dec
ds
scas
push
lret
incl
shrb
add
call
lods
shrb
mov
mov
jnp
shlb
or
add
out
and
daa
jns
push
add
cld
out
psllw
cmp
pop
dec
mov
dec
cld
ljmp
cli
inc
xor
and
jg
insb
dec
pop
sbb
push
popl
jne
pop
inc
insl
jl
mov
push
incl
or
ja
adc
out
lret
sub
inc
inc
jnp
add
mov
mov
jo
fnstsw
dec
xchg
je
jge
out
sub
ficomps
cmpsb
pop
cmp
jo
cmc
insb
fsubrl
jl
pinsrw
add
jmp
sbb
and
rcl
das
movsl
sbbl
lock
push
cmp
orb
sub
and
xor
cmp
jmp
out
outsl
mov
stos
sbb
inc
adc
and
incl
sub
leave
repnz
iret
lcall
inc
out
push
inc
jmp
lds
movsl
pop
std
mov
push
imul
fstl
in
das
hlt
ljmp
sti
stos
and
adc
in
xchg
rcll
adcb
inc
aaa
sbb
push
sar
incl
add
jnp
aas
mov
mov
sbb
fnstsw
sub
mov
mov
pop
inc
jmp
lahf
sbb
cmp
adc
popa
mov
or
jp
jae
jp
sbb
pop
in
test
mov
stos
imulb
mov
push
inc
dec
dec
push
sbb
cmp
in
fadd
fimuls
pusha
xlat
or
dec
fdivl
test
loopne
sbb
dec
fcmove
in
add
mov
mov
fwait
adc
mov
sub
xchg
xor
and
push
imul
pop
loopne
xor
cs
into
loopne
or
jg
mov
test
push
mov
ja
mov
jns
fcos
pushl
out
jl
lock
or
jmp
push
and
fsubs
dec
fists
enter
inc
pop
int3
cwtl
mov
mov
sub
out
mov
jno
dec
cwtl
nop
pop
dec
add
jmp
leave
push
sbb
jge
jae
lret
jne
or
mov
fwait
inc
std
rclb
ljmp
fisubrl
jbe
push
int
bound
lock
mov
fidivs
sub
cli
jbe
cmpb
push
mov
mov
pushl
mov
lret
xchg
int3
dec
ret
mov
pop
or
mov
jg
mov
push
movsl
pop
or
js
fldt
dec
mov
outsl
std
incl
dec
mov
pop
and
fcoml
in
xchg
push
inc
jmp
popa
aas
jmp
movsl
imul
push
aas
stos
gs
std
lcall
fs
imul
int3
outsl
mov
mov
decl
sbb
je
scas
int3
xlat
dec
les
orl
aaa
and
push
in
adc
andl
ljmp
xchg
iret
mov
mov
std
lahf
sarb
sbb
jecxz
std
mov
pop
mov
jmp
cmp
inc
stos
fcoml
das
cld
lret
repnz
ffree
mov
lcall
mov
lea
or
fs
sbb
pushf
adc
adc
lcall
push
stc
pop
lcall
popa
add
lock
dec
fimuls
je
je
mov
pop
cmc
lods
imul
nop
cld
test
mov
lcall
incl
out
stc
fisubl
les
enter
sub
ljmp
mov
dec
ljmp
aaa
mov
lret
xor
cmpb
and
mov
push
int
xchg
aaa
pop
insb
mov
adc
imul
push
push
xchg
dec
push
jg
xchg
addr16
push
mov
pop
dec
std
jg
fisubl
fldlg2
adc
cmp
mov
in
lcall
jne
mov
dec
imul
pop
push
out
ss
mov
jl
jecxz
fbld
stc
lret
pop
leave
into
pop
fnstcw
mov
jnp
push
gs
enter
lds
mov
jmp
lcall
adc
cmp
mov
mov
and
jg
std
jmp
or
and
add
clc
mov
cli
jg
mov
sarl
cmp
movsb
test
jns
jne
sar
lcall
sets
dec
jecxz
xor
push
mov
pop
clc
pop
mov
inc
into
mov
mov
fs
pushl
xor
pop
ss
in
scas
sbb
inc
icebp
push
xor
clc
push
mov
xchg
outsl
jge
or
jge
cmp
jns
aaa
mov
fwait
xor
pop
or
insb
adc
mov
aas
mulb
mov
sbb
mov
pop
pop
fbld
outsl
lock
fistl
shll
adcb
lret
inc
call
cmp
push
lock
mov
stos
mov
push
push
incl
mov
pop
fdivs
insb
in
lock
insb
in
dec
sbb
sbb
std
ffreep
ret
adc
and
les
jne
pop
xchg
sbb
mov
cmp
mov
les
lret
lret
push
imul
stos
inc
push
jl
adc
jae
jg
sbb
jmp
or
and
arpl
jb
test
imul
incl
scas
nop
mov
int3
xor
cmpsl
pop
cltd
dec
dec
rcrb
mov
testb
fdivrs
jmp
movsb
cmp
xchg
cmp
mull
jne
hlt
insb
add
cmp
lcall
adc
sub
add
rorb
test
mov
pop
push
int3
sbb
cmp
lods
rcrb
sbb
cmp
dec
adc
add
add
sub
mulb
inc
cmp
sub
push
push
lret
js,pt
lret
fistl
cmp
lock
jmp
dec
mov
mov
outsl
call
div
fsts
in
gs
mov
stos
adc
hlt
adc
jns
scas
sbb
ljmp
jl
fisubrs
mov
enter
mov
mov
cmp
leave
pop
aam
movsb
pop
cli
fcmovb
fdivrl
jbe
repnz
pop
pop
cmpsb
cmpl
add
push
ljmp
xor
xor
sbb
sbb
loop
lea
lods
decl
mov
sbbl
push
push
int
or
mov
stc
or
jmp
pop
test
flds
cmp
lahf
ss
jae
xchg
xorl
lds
sub
add
incl
pop
inc
dec
stos
xchg
and
insb
aas
mov
movsl
shrl
stc
dec
fs
aaa
jno
daa
imull
cmpsl
and
out
xor
incl
xchg
mov
scas
nop
sbb
insl
cli
pop
daa
adc
ret
cmp
sbbl
mov
das
rdmsr
les
dec
icebp
das
ror
xchg
xchg
sbb
scas
stos
cmp
mov
fsubl
push
dec
loope
movsl
cld
pop
fdivr
lret
push
sbb
outsl
xchg
fisttpl
rcr
imul
mov
xor
sbb
sbb
das
shr
bound
jne
and
clc
mov
ja
cli
adc
in
lcall
xor
pop
gs
int3
and
andb
rol
and
sar
incl
push
xchg
pushl
bound
in
dec
movsb
push
pop
adc
das
dec
mov
clc
je
out
ss
outsl
pushl
sti
pop
xchg
nop
hlt
xchg
jecxz
mov
fidivl
test
cmp
cmp
in
popf
jp
mov
ret
push
inc
mov
jnp
cmp
jg
mov
xchg
mov
arpl
mov
repnz
fisubrl
ljmp
mov
bound
test
out
cmp
sub
push
call
aad
negl
ds
stos
fcmovnbe
cmp
mov
pop
fsubrl
add
lcall
cmc
outsl
sub
lahf
ret
shll
rclb
sti
pop
pushl
adc
xor
mov
jbe
jns
repnz
sub
int3
inc
jp
cli
jne
cmp
ljmp
lock
icebp
jle
pop
scas
adc
shlb
sub
sub
mov
mov
stos
test
add
cmp
stc
xchg
dec
jg
jg
or
xor
test
out
daa
nop
ljmp
shlb
push
sti
rcl
xor
pop
lret
test
lea
testb
test
push
pop
cmpsl
mov
mov
sub
stos
mov
inc
add
ljmp
inc
rcrb
lcall
lret
fmul
xchg
test
mov
xor
xchg
xor
roll
loope
adc
call
aam
loopne
leave
repnz
lods
and
mov
push
mov
mov
jmp
mov
leave
cltd
lock
or
mov
mov
pop
fwait
in
xchg
mov
rcll
mov
mov
jae
xor
xchg
sahf
jbe
push
out
rorb
jne
mov
xchg
outsb
mov
inc
jge
cmpsb
imulb
push
push
jecxz
sbb
push
hlt
push
ds
xor
push
pusha
in
test
lret
ret
or
jo
das
das
push
lock
push
outsl
pop
jno
mov
sbb
lahf
jecxz
cli
ljmp
fsubp
ss
jae
dec
xor
bswap
xlat
mov
stos
cli
divl
sub
cmp
dec
jmp
scas
push
push
scas
shrb
cmp
insl
push
ljmp
xchg
clc
flds
jns
sbb
dec
sub
and
mov
pushl
push
jp
cmp
lods
bound
imul
lds
mov
mov
test
xchg
and
mov
dec
mov
icebp
cltd
test
jmp
addr16
or
flds
inc
in
push
loopne
rorb
lcallw
call
or
pop
mov
cmp
sbb
push
and
or
stc
add
jecxz
mov
push
ds
aas
fcmovnbe
xchg
repnz
push
xor
add
dec
jg
xorl
mov
jge
add
mov
sub
or
lret
out
cld
push
nop
filds
cmp
cmp
gs
and
mov
jmp
dec
icebp
cmp
std
pop
test
pop
cltd
adc
push
in
xchg
shrl
jnp
adc
aad
test
sar
adc
jecxz
push
icebp
lcall
les
sar
sbb
insb
sbb
addl
popa
mov
mov
or
jl
call
jp
cs
es
loop
jbe
call
aam
subb
dec
adc
in
das
jns
sbb
jmp
bound
outsb
loop
andb
cld
push
dec
jg
xchg
test
mov
sarb
movsl
test
ljmp
pop
jo
mov
outsl
lock
in
jo
stos
outsl
sub
shlb
sbb
jg
inc
push
xchg
mov
call
xchg
test
cld
jmp
pop
mov
sahf
mov
addr16
sahf
pop
xchg
fildll
sbb
xor
hlt
gs
in
mov
enter
cli
mov
jmp
xchg
adc
nop
faddp
lcall
jg
jmp
xchg
xor
into
pushf
xchg
and
mov
pushl
mov
sub
lahf
fldl
jg
enter
add
decl
decl
mov
arpl
sar
enter
mov
and
mov
clc
mov
jb
pop
pop
loopne
cli
loop
xchg
adc
popa
sbb
push
lret
shll
pop
jnp
push
and
hlt
in
pop
xor
mov
push
mov
cwtl
xor
out
push
dec
push
dec
mov
or
je
incl
stos
xchg
rcrl
push
aam
lahf
popa
jmp
cmp
jno
inc
jae,pn
xchg
dec
arpl
push
push
addb
or
sub
movsb
dec
insl
stos
rorl
pop
loop
mov
mov
movsl
inc
dec
stos
sub
incl
gs
mov
cmp
inc
pop
lds
lds
adc
dec
lock
cld
mov
repnz
lods
rorl
icebp
sub
sarb
sar
loope
mov
fndisi(8087
jl
shll
ljmp
lcall
mov
lret
scas
sbb
lcall
add
sbb
mov
adc
std
dec
outsb
movb
cs
rorb
xchg
jecxz
icebp
shl
cmp
in
outsl
insl
out
addr16
dec
pop
pusha
cmp
xor
gs
lahf
fsubl
ljmp
je
mov
mov
mov
lds
imul
stc
jno
scas
or
cmp
ds
nop
or
loopne
lds
and
repz
xchg
mov
ja
outsl
mov
sbb
test
push
push
adc
jbe
pop
pop
sbb
das
cltd
popa
in
icebp
in
xlat
sbb
inc
or
in
cmp
mov
pop
andb
mov
sub
sarb
xchg
xchg
decl
jle
or
dec
cmp
xlat
xor
push
mov
xor
test
push
mov
dec
in
and
sub
or
lcall
add
mov
ret
mov
pop
imul
pop
cld
call
decb
inc
add
test
push
add
push
aad
lock
decl
test
gs
adc
popa
fs
sbb
sub
inc
sbb
add
pop
cmp
or
icebp
leave
inc
fstpt
and
add
push
or
fdivl
loopnew
decl
sub
loope
rclb
lock
data16
hlt
xchg
push
cld
ja
popf
sar
ljmp
or
aaa
xchg
lods
dec
inc
and
jle
jns
push
mov
sbbl
push
aam
popf
cmp
insb
addr16
cmp
bound
jmp
xor
iret
mov
js
stos
cmp
pop
subb
jecxz
inc
mov
inc
mov
rcll
sbbl
mov
mov
jmp
pop
mov
push
cwtl
jb
lock
clc
jmp
dec
lret
xchg
or
pushf
sbb
mov
sub
push
std
outsl
xchg
es
pop
inc
into
inc
das
xor
ret
adc
pop
fs
ficoml
cmp
decl
ljmp
test
xchg
xchg
push
adc
sbb
xchg
pop
push
jl
jg
call
fdivp
xchg
sub
hlt
hlt
fistl
cmc
mov
out
xchg
xchg
mov
and
sub
push
ficomps
adc
xchg
ret
cmp
jmp
cmc
cmp
push
add
inc
cmp
pop
aad
sbb
add
cwtl
xchg
jne
insl
xor
jle
incl
jmp
cmpsb
fadds
insl
sub
aaa
les
lcall
ljmp
cmp
cmpsb
sub
pop
sub
sahf
push
inc
pop
cs
mov
ljmp
sub
aam
and
cmp
mov
mov
mov
cli
ljmp
stc
sbb
push
mov
dec
loope
movsb
push
pusha
cmpsb
je
mov
in
ds
push
mov
sub
sub
jmp
ret
ljmp
push
cld
pop
pop
cmpsl
xchg
mov
inc
inc
pushf
out
mov
jle
das
cmc
jg
xchg
xchg
cwtl
loop
jg
cmp
xchg
add
fstps
mov
cmc
xlat
mov
jmp
add
add
xchg
fsubrs
sar
call
push
xor
mov
clc
jmp
cs
cmova
mov
mov
in
decl
or
ss
test
jp
clc
mov
out
in
lock
shll
ss
adc
sub
decl
popf
pop
loope
lcall
movsl
ljmp
insl
popa
cwtl
mov
and
inc
ljmp
dec
or
popf
insb
xchg
scas
ja
repz
inc
call
pop
js
stos
pop
repnz
in
cwtl
into
mov
test
ljmp
mov
push
or
xor
mov
xor
adc
stos
ljmp
bound
pushf
adc
inc
dec
enter
add
dec
xor
pop
xchg
insb
jge
jns
cmp
xor
sub
mov
cmp
das
lock
test
dec
jo
ljmp
mov
sub
dec
movsl
sbb
or
pushl
xchg
movsb
ss
xchg
mov
add
dec
shrl
rorl
cli
test
xor
sub
sbb
insb
out
or
inc
loopne
das
mov
pop
pop
or
dec
mov
mov
enter
jo
adcb
pop
dec
xchg
cmp
aad
lds
or
pop
test
mov
lea
mov
outsl
movsb
in
repz
xchg
int3
dec
cmp
int3
fs
push
call
and
adc
lahf
pop
jno
sbb
pop
mov
ljmp
and
call
push
cli
test
out
fwait
xchg
orb
je
inc
leave
push
ja
or
movsl
cmp
adc
mov
mov
jge
sahf
pop
arpl
push
xor
add
mov
popa
xor
aad
nop
sbb
incl
outsb
and
sub
lcall
out
rcrb
mov
xchg
ficompl
bound
lea
aaa
mov
pop
inc
ja
or
das
hlt
pop
pusha
mov
xor
cs
arpl
sbb
mulps
mov
push
or
enter
test
test
ljmp
lea
gs
ficompl
xlat
push
repnz
mov
incl
test
ret
jbe
movsl
es
add
cmp
pop
push
frstor
das
lock
adc
jnp
sbb
dec
jp
inc
lock
fildl
push
outsl
push
cld
aaa
sahf
loopne
loope
xlat
int3
not
rcrb
mov
scas
mov
clc
adc
sti
addr16
sti
mov
fidivrl
push
xchg
xlat
mov
mov
sub
fcoml
dec
ljmp
mov
popa
pop
repnz
es
ss
test
decl
stos
or
ds
add
sbb
xor
scas
sub
inc
stos
das
dec
ja
dec
cld
incl
lea
add
and
dec
mov
xchg
lds
xchg
cs
imul
adc
xchg
adc
dec
call
cmpsl
scas
sub
out
das
cmc
xchg
sbb
push
call
scas
das
test
rorb
dec
aaa
jp
decl
dec
fcmovnb
mov
nop
cmpsb
incl
fs
pop
mov
cwtl
lret
push
push
test
cmpsb
insl
sbb
mov
pop
inc
movsl
sbbb
mov
lahf
pop
xor
cmp
xchg
add
push
addb
inc
mov
pushl
jmp
rclb
rclb
sbbb
pop
icebp
or
incl
mov
sub
flds
pop
mov
decl
xchg
inc
rolb
icebp
push
or
es
stos
inc
outsb
mov
lahf
cmp
inc
xchg
jo
aad
sub
aaa
clc
ljmp
lods
push
pusha
ja
cld
vdivpd
mov
jp
outsb
push
push
aaa
clc
decl
les
lods
shlb
fiadds
mov
xor
decl
int
dec
test
cwtl
in
xor
fisttpll
repnz
call
jecxz
or
and
rorl
mov
jno
or
test
xchg
fs
decl
decl
sbb
xor
jge
sbb
cltd
adc
mov
push
cs
leave
jmp
scas
ljmp
cmpsb
or
leave
mov
mov
insl
sahf
push
js
xchg
mov
jne
cmc
lea
and
cmp
arpl
aas
lcall
pop
pop
incl
mov
fimuls
inc
xchg
in
jnp
cmp
jae
push
js
inc
out
cli
and
in
lds
mov
lock
imul
mov
and
outsl
inc
xor
add
adc
sbbb
repnz
ljmp
insb
leave
aaa
jbe
xchg
shlb
mov
adc
pop
mov
fisubrl
loope
incl
jbe
aaa
arpl
adc
pop
lods
push
call
pop
test
jle
jp
pop
mov
push
mov
lcall
ds
jne
sub
sbb
fildll
shll
call
in
mov
xchg
or
imul
cmp
mov
pop
adc
sbbl
cltd
inc
cmp
ret
pop
inc
mov
pop
sar
out
call
jecxz
dec
mov
call
js
adc
dec
xchg
sub
sbb
pop
xchg
lret
xchg
aam
jg
or
jmp
subb
jmp
cli
add
cwtl
ljmp
or
jns
sbb
adc
fwait
mov
stos
mov
cld
lcall
ss
mov
mov
push
es
outsl
ljmp
inc
icebp
dec
imul
mov
mov
adc
ds
mov
imul
xchg
jecxz
mov
iret
test
scas
lret
sbb
lret
out
push
mov
pop
ljmp
jg
loopne
dec
sbb
stc
repnz
push
jle
out
scas
lds
loope
lret
add
cmp
or
addr16
inc
stos
cmpsl
push
incl
lea
cmp
mov
lcall
call
daa
mov
iret
jo
xchg
inc
cmpps
aaa
jp
mov
mov
cmpsl
mov
xchg
xor
pop
incl
roll
xchg
enter
mov
xor
insb
cmp
jmp
enter
add
and
jmp
pop
cwtl
data16
pop
aas
movsb
pop
xor
jns
cwtl
fidivs
adcl
push
shlb
loopne
mov
je
add
lea
sar
sarb
cmp
in
sbb
jnp
or
insb
dec
xor
pop
xchg
mov
ljmp
sub
cs
lods
insb
mov
dec
xlat
adc
dec
push
ljmp
lds
lret
inc
mov
mov
test
pop
mov
decl
ljmp
jmp
jne
jecxz
mov
ss
call
lock
in
jle
imul
add
imul
inc
ret
divl
lds
and
ficompl
xchg
scas
int3
stos
loop
aas
jle
sub
shrb
pushl
ja
mov
dec
pop
mov
and
adc
or
and
sbb
das
mov
or
in
pushf
lock
mov
ljmp
adc
mov
fdivrp
decl
loope
lods
xlat
add
cmp
lods
jg
or
adc
jbe
jge
xchg
adc
mov
xchg
jg
imul
mov
xor
dec
ror
sbb
fdivs
jg
add
pusha
aad
gs
mov
daa
jns
or
stc
ljmp
mov
inc
arpl
out
pop
inc
push
and
pop
push
sbb
push
outsl
mov
mov
add
cmpsl
jecxz
lods
inc
xor
push
mov
xlat
adc
inc
js
sbb
and
addr16
lret
mov
daa
push
hlt
jg
and
pop
out
and
out
call
ds
mov
mov
pop
xor
xchg
pop
cmp
out
scas
cmpsb
ds
jg
jmp
ljmp
push
jo
int
cmp
mov
dec
lret
push
or
mov
mov
xor
mov
push
ldmxcsr
add
test
fldt
xchg
outsl
jge
pushl
adc
lock
stc
ja
icebp
jg
aas
cli
cmpsb
enter
xor
jo
cmp
add
push
test
call
outsl
jmp
and
xchg
addr16
sarb
and
call
leave
jae
movsl
mov
push
cld
mov
and
adc
mov
mov
inc
das
lock
movsb
nop
mulb
out
add
outsl
into
mov
sub
pushf
les
bound
adc
aad
dec
push
arpl
mov
arpl
cmp
mov
add
movsl
xchg
mov
aad
pusha
mov
sub
lods
sbb
test
pop
xchg
cld
jmp
push
xchg
inc
xacquire
push
jg
mov
ljmp
lods
or
xor
push
cmp
jg
call
xchg
outsb
scas
sub
xchg
xchg
adcl
into
mov
dec
cld
or
scas
dec
pop
mov
aaa
add
push
pop
mov
push
xor
fcomp
mov
rcr
jecxz
dec
cmpsb
data16
iret
insl
clc
dec
mov
out
adc
adc
je
sub
jl
adc
jb
imul
cmc
nop
mov
or
imul
cmpsb
ret
push
cld
and
call
push
dec
sub
and
dec
addl
sub
adc
clc
fnsave
in
push
in
mov
jmp
and
insl
or
mov
dec
mov
js
xchg
lcall
xor
popa
lcall
inc
jle
mov
fs
or
push
adc
mov
xchg
mov
xor
xor
dec
mov
insb
mov
mov
out
repnz
dec
sahf
inc
mov
aad
mov
clc
or
mov
lea
mov
jle
pop
jae
fsts
lods
lcall
cld
push
pop
adc
mov
xor
pop
mov
rcl
jnp
jae
mov
std
mov
sbb
and
nop
and
das
mov
xchg
push
hlt
mov
outsl
out
outsl
push
mov
or
jns
movsb
fmul
scas
sub
dec
jo
hlt
fimull
fildll
or
jns
jno
mov
pusha
dec
ds
mov
roll
dec
fbld
sub
int
gs
faddp
sub
decl
ljmp
xchg
mov
ljmp
and
add
stos
mov
cmc
adc
mov
xchg
test
in
add
test
std
inc
xchg
test
stos
out
scas
sub
test
push
and
or
out
pop
es
and
test
sub
aas
push
jne
pop
push
adc
add
outsl
jae
jae
imul
lcall
adc
add
jno
add
push
es
in
jg
pop
mov
push
pop
cltd
sbb
lcall
add
push
ret
cwtl
test
lods
fstpl
cmc
xchg
test
adc
outsb
lret
outsb
jbe
mov
add
lods
sti
add
fwait
add
imul
xchg
push
mov
test
xor
neg
dec
pop
cli
or
and
cmpsl
add
dec
jae
bound
dec
jb
movsl
inc
sbb
fwait
imul
add
or
inc
push
add
ss
aaa
xor
xor
xor
adc
pop
mov
push
cmp
je
out
adc
sbb
pop
test
xor
nop
dec
xor
stos
adc
pop
mov
pop
test
sub
imul
jne
sub
inc
imulb
push
inc
xor
cmp
xor
jle
lods
sub
add
shl
icebp
les
dec
push
outsb
imul
push
inc
or
pop
and
add
ficompl
adc
lods
andb
inc
sbb
jae
shlb
imul
movsb
pushf
dec
inc
push
push
push
inc
and
lcall
stos
adc
push
lcall
or
pop
add
xchg
cmp
mov
popa
test
pop
mov
adc
mov
mov
add
js
imul
in
test
fistpl
test
push
inc
orb
dec
inc
negb
cld
push
dec
inc
push
push
dec
xor
push
pushf
pop
push
mov
testb
mov
mov
inc
mov
ror
pop
rcll
data16
insl
jno
pop
sub
sub
pop
mov
pop
jecxz
xlat
pushf
imul
cmc
pushl
add
imul
push
js
addr16
outsl
jno
push
add
inc
jnp
push
mov
cmp
add
mov
ss
cmpsl
scas
xchg
push
dec
inc
push
inc
dec
inc
inc
push
push
push
push
dec
push
add
fistps
dec
subl
mov
lea
push
or
movsl
mov
popa
fadds
test
and
push
mov
cmp
fs
xor
loope
imul
imul
push
ret
cmp
icebp
popa
les
sarl
or
cmp
pop
test
sub
xlat
or
loope
sub
adc
inc
sbb
cli
das
mov
cmp
add
jne
sbb
jbe
arpl
xlat
insb
push
dec
das
push
inc
pop
jae
jno
ja
dec
scas
xor
jg
xlat
cmp
xlat
pop
mov
test
push
add
xchg
xchg
add
xor
mull
xor
repz
lcall
stos
or
ret
mov
jl
jmp
xor
push
adc
insb
xchg
or
scas
leave
mov
pop
inc
xor
sahf
pop
imul
rcr
cmovae
dec
int
fcoml
push
insb
inc
loopne
stos
lods
xor
xor
or
in
pop
or
push
jnp
insl
xchg
add
mov
dec
fmuls
and
insb
xor
cs
pop
jae
out
mov
jecxz
int
cmp
addl
addb
push
or
fisubs
xchg
pop
add
push
sub
int
xor
js
xor
mov
add
add
mov
xor
dec
adc
or
inc
push
movb
xor
shlb
mov
sub
pop
inc
inc
sbb
andl
mov
adc
nop
push
add
add
addl
orb
adc
add
add
mov
cld
sbb
jg
push
sbb
dec
sbb
or
jbe
mov
add
push
sbb
or
popa
roll
dec
push
outsl
or
sti
add
xchg
sbb
or
mov
decb
add
adc
sbb
fwait
outsb
repz
sbb
push
or
cmp
inc
jb
sti
aas
sub
sbb
sbb
push
inc
rcrb
inc
dec
ja
out
fcmovb
xchg
sbb
stos
sbb
jae
sbb
mov
xor
dec
ret
pop
out
fistpll
mov
sbb
adc
adc
jl
pushf
adc
div
cmpsb
sbb
shll
lods
sbb
xchg
jg
mov
fiadds
sbb
sbb
push
jmp
cmp
lret
out
mov
pop
jae
std
enter
int
fcomps
push
sbb
ret
fdivr
inc
sbb
sbb
push
sbb
xorb
flds
bound
mov
mov
sbb
add
mov
ljmp
jmp
lock
nop
fcoml
je
loop
add
jbe
mov
dec
xchg
and
sbb
xor
lret
int
sbb
je
sbb
sub
jg
mov
int
sbb
imul
mov
sbb
or
clc
test
loope
std
pop
mov
addr16
outsb
enter
fildl
scas
subl
sbb
push
xchg
loopne
outsb
jns
cmp
shl
mov
call
negb
out
lods
fstps
stc
add
sbb
and
mov
mov
sbb
fwait
mov
mov
mov
pop
mov
adc
es
push
insb
rcrl
mov
stos
sbb
jo
fisttpll
jmp
adc
dec
dec
cmp
pop
enter
mov
or
adc
movhps
pop
orl
in
mov
fldt
pop
mov
ficomps
xchg
loope
arpl
imul
push
mov
adc
sbb
outsb
inc
cvttps2pi
adc
mov
lcall
lret
xchg
out
das
or
add
icebp
pop
outsb
sbb
push
pop
jns
in
sbb
sbb
ficompl
push
into
mov
push
les
shll
push
lods
cmp
add
or
cwtl
jge
ja
sbb
ds
loope
xchg
add
enter
cld
jle
test
stos
dec
imul
sbb
lods
sub
adc
mov
mov
test
xchg
sbb
lock
scas
xchg
sbb
cmp
call
loopne
or
xor
jmp
shlb
scas
add
dec
addr16
push
ds
call
insl
subl
adc
leave
hlt
push
push
stos
arpl
leave
sub
mov
aaa
xor
pop
jb
inc
cmp
sbb
jo
int
shl
icebp
or
push
les
push
sti
cmp
cmp
fistps
or
out
push
lcall
shrl
std
pop
jb
pop
sbb
cwtl
adc
mov
je
scas
mov
test
add
jmp
insb
test
test
sbb
out
jns
pop
xchg
ja
test
jbe
adc
dec
pop
mov
imul
imull
xchg
adc
aad
icebp
inc
stc
cmc
fstpt
or
inc
mov
popf
movsb
cs
xlat
mov
push
lds
cltd
pop
or
xchg
ret
ss
cmp
popf
inc
daa
sbb
popa
fdivrl
and
ja
or
mov
ss
mov
pop
data16
jmp
jbe
in
int
adc
xor
or
pop
adc
in
pop
push
andl
dec
or
sub
sub
fistps
jge
cld
fstps
push
lret
icebp
or
mov
sbb
movsl
inc
sbb
inc
test
sti
add
xlat
mov
rolb
xlat
stos
ret
ss
add
loope
cmpsb
push
stos
add
push
pop
ja
xchg
pushf
xchg
out
decl
and
mov
fldt
lods
xor
adc
jecxz
jle
cs
mov
sbb
dec
xchg
es
sahf
aaa
sbb
or
xor
repz
scas
or
cmpsl
into
fstpl
inc
pushf
data16
leave
add
outsb
cwtl
mov
xlat
or
pop
stc
adc
push
jmp
inc
jae
push
sti
push
or
jb
jno
pop
xchg
outsl
inc
jge
or
pop
jle
iret
cli
inc
loopne
add
lcall
and
shll
adcl
add
xchg
je
lods
sbb
je
in
adc
adc
fdiv
ret
fistpl
mov
fisubl
je
sbb
roll
leave
pop
in
data16
fucom
mov
sbb
sub
or
mov
cltd
pop
je
and
out
cmpsl
cmpsl
out
cmpsl
xor
inc
insb
cmpsb
inc
dec
xor
mov
jmp
mov
data16
ja
pop
mov
cmp
pop
add
jae
adc
sarl
dec
inc
mov
imul
lods
lea
out
out
js
jo
push
jno
cmc
xchg
mov
out
sbb
shrl
jmp
mov
bound
sbb
sbbb
inc
jbe
cmc
push
and
test
jecxz
mov
push
jg
in
fcmovbe
inc
rcl
sbb
xor
cld
int
pusha
jo
pop
orb
test
scas
dec
cmp
ficoml
mov
shlb
and
mov
or
pusha
xchg
ja
jg,pn
popf
sti
pop
or
mov
push
es
push
pop
ja
adc
xor
mov
fsub
mov
mov
mov
inc
jmp
and
aas
jb
mov
adc
insb
clc
scas
lea
mov
add
das
rolb
push
or
add
das
loopne
fsub
test
dec
stos
lock
jp
mov
int3
loope
orl
loop
jnp
aad
cs
mov
out
cmp
add
je
add
sub
push
jle
mov
mov
sti
mov
clc
clc
addl
popf
ljmp
cmp
in
push
add
xchg
mov
in
js
pop
negl
mov
sbb
mov
ds
mov
lret
push
adc
shl
cld
enter
out
mov
jmp
mov
mov
jg
lods
inc
sub
pushf
pushf
lock
xor
dec
pop
inc
jge
sti
mov
fsubs
cmpsb
stos
push
lret
iret
into
or
jno
push
cmp
inc
shrb
lds
push
popa
lds
movsl
cmp
sbb
push
or
fdivrs
fmuls
jbe
stc
mov
out
jecxz
push
mov
aaa
sbb
movsb
out
daa
in
cmp
fwait
das
fcom
sbb
dec
icebp
ret
xor
je
push
push
mov
lret
mov
aam
sbb
dec
aam
ljmp
subl
cmp
sbb
jne
test
and
ror
rclb
dec
adc
xor
mov
insl
or
sbb
add
inc
jae
jmp
mov
fwait
scas
ss
inc
xchg
imul
add
nop
xor
jo
in
mov
ret
pop
xchg
jl
aas
jp
lcall
int3
loop
insb
adc
pop
sti
cmp
push
push
cmpsl
and
outsl
in
jle
outsl
xchg
insb
scas
inc
int
push
sarl
loope
rorl
adc
jb
or
lds
insl
leave
in
inc
add
push
fcmovnb
mov
std
or
rcrl
cwtl
and
ret
mov
scas
xor
cmp
ret
cmp
mov
repnz
push
push
loope
jge
lods
in
xlat
inc
jmp
dec
insl
cltd
ss
or
fcmovnu
inc
push
mov
fsubrp
adc
es
jae
hlt
pop
mov
outsl
sbb
test
cmp
rcr
or
mov
push
stos
adc
das
ljmp
jbe
loope
bnd
test
push
lods
test
das
sub
dec
mov
cmpl
nop
test
notl
sbb
ret
insl
or
mov
fsts
jle
in
sub
or
nop
rcll
in
push
clc
xor
lret
add
jl
mov
sbb
cli
icebp
addl
jne
inc
sbb
lds
xor
insb
lret
test
pop
fiaddl
lahf
insl
into
mov
cmp
jno
jl
xchg
sbbb
or
lds
push
in
loope
add
and
movsl
mov
sbb
cmp
pop
scas
mov
fwait
or
xchg
insl
inc
mov
imul
or
jb
mov
jg
fistps
sbb
xchg
push
lock
adcb
push
outsl
push
sub
mov
pushf
or
mov
or
imulb
ret
lea
jmp
les
scas
int3
inc
mov
cmpsb
aas
cmp
push
jmp
push
mov
subl
mov
dec
cmp
inc
testl
in
adc
or
icebp
orl
inc
aam
mov
jb
xlat
leave
repz
jmp
mov
inc
pop
jl
out
xchg
aad
inc
not
dec
jg
and
cmp
and
mov
pop
pusha
andb
sbb
sub
insb
push
push
push
hlt
mov
ss
mov
notb
add
and
jecxz
fstpt
push
aaa
pop
cwtl
jge
xor
shll
jmp
sbb
out
mov
mov
mov
cmp
insb
fidivrl
inc
and
cmpl
repnz
bound
ret
sti
in
scas
mov
cmp
lods
xchg
mov
xchg
dec
out
dec
xor
mov
xlat
shlb
inc
dec
jbe
loope
cmpsl
or
push
pop
mov
sbb
insl
clc
lock
adc
cmp
jecxz
enter
setp
aas
pop
fwait
mov
lods
sbb
lret
sub
push
call
ja
stos
sbbl
xchg
adc
xor
psubusb
adc
sbb
fiaddl
stc
jmp
ds
mov
add
sub
jp
push
mov
or
lret
repnz
pop
test
push
cmc
mov
cmp
xlat
inc
repz
adc
lahf
lea
insl
inc
push
cmp
mov
fists
push
xchg
inc
ljmp
pop
mov
sbb
or
and
add
mov
add
or
sub
arpl
push
xor
mov
movsl
xor
mov
ds
push
dec
shlb
pop
jl
xor
mov
or
jle
sbb
xlat
fiadds
mov
fst
mov
dec
xor
jp
insb
push
daa
dec
inc
add
loope
rol
imul
fdivr
mov
cmp
or
xchg
pop
push
sub
xchg
pop
lret
xchg
inc
xorb
aaa
addr16
add
es
mov
xlat
add
dec
xchg
scas
arpl
jmp
push
lahf
jmp
push
inc
sbb
inc
mov
or
lcall
adc
pop
lea
stc
fs
xchg
dec
jg
jae
in
and
adc
mov
clc
mov
das
dec
push
loopne
or
fcomps
cmp
clc
inc
fildl
xor
mov
cwtl
add
movsl
pop
bswap
sub
mov
sbb
in
in
fsubrs
movsl
add
add
or
inc
test
rcll
mov
or
fldt
loop
cmc
add
loope
xlat
lret
cli
mov
jl
jb
sub
rcll
imul
mov
xchg
imul
fwait
pop
jae
jno
stos
ljmp
cwtl
aas
mov
sti
lock
cmp
jge
xor
mov
sub
and
lcall
jae
fbstp
dec
pop
sbb
mov
mov
cmp
and
dec
leave
adc
popf
stc
pop
or
out
or
jg
sti
pop
je
mov
xchg
cld
fisttpll
paddsw
in
loope
mov
sbb
pop
fcmovnbe
clc
fwait
cmpsl
pushf
push
push
add
hlt
jl,pn
push
sub
fidivl
jo
pause
sbb
loope
mov
fidivs
dec
scas
cltd
push
add
mov
pop
call
inc
push
jns
stos
stc
xchg
sar
and
jno
jl
in
sbb
and
incl
mov
outsb
jnp
int3
popa
arpl
mov
ljmp
push
cs
cmp
loope
push
pop
push
mov
xor
xchg
sbb
jg
inc
jne
popa
inc
aaa
mov
lcall
shlb
dec
bound
or
or
sub
mov
adc
inc
pop
dec
js
mov
cmpsb
mov
dec
inc
cmpsb
ds
movsb
mov
inc
jo
repnz
outsb
ss
jmp
add
mov
mov
or
std
mov
or
sbb
sub
stos
xchg
jp
sub
lods
xchg
cmp
inc
ds
popa
push
test
lds
lahf
hlt
cmp
xchg
lret
mov
mov
xchg
mov
dec
lret
cmp
mov
sub
cmp
cltd
sbb
and
nop
or
mov
cmpsb
and
mov
mov
and
ss
fldl2e
outsl
push
push
fwait
and
sbb
sti
and
pushf
dec
cli
inc
add
insl
push
cmp
repnz
cmpsb
scas
ret
out
jp
int3
dec
outsb
xlat
pusha
inc
inc
xchg
jmp
mov
cld
ljmp
xor
gs
add
lret
andb
icebp
out
mov
shlb
add
or
dec
int3
sbb
or
or
sub
outsb
not
mov
icebp
in
leave
xchg
adc
jo
dec
jo
aas
loopne
jecxz
jecxz
testl
inc
or
insb
jle
sbb
dec
andb
jnp
pop
sbb
add
fsubl
add
adc
lods
cs
lcall
jmp
and
xchg
cmp
mov
out
lea
sysret
mov
addl
popf
loopne
mov
pop
pop
cmp
add
sub
xor
bound
mov
sbb
arpl
mov
pop
roll
pop
call
push
dec
cltd
iret
fdivrs
pop
mov
mov
dec
in
pop
inc
out
adc
hlt
add
mov
pop
nop
jne
aad
pop
cmpsb
cmpsl
mov
je
mov
push
scas
or
mov
xor
jae
mov
adc
jo
xor
add
scas
lock
inc
in
jle
adc
mov
jb
xor
popa
outsl
jge
mov
lods
lods
push
push
cwtl
cltd
fs
sbb
inc
jb
push
xchg
add
adc
pop
jno
out
test
es
push
hlt
popa
xchg
cs
icebp
shlb
inc
or
shrl
gs
enter
sub
fistl
inc
imul
xchg
or
cmc
mov
add
mov
jmp
mov
outsl
xchg
mov
push
sub
push
rorl
cmp
sub
movb
stc
popa
test
adc
cmp
dec
aam
dec
and
test
cmp
pusha
inc
lret
pop
sub
int
jmp
loope
xor
mov
pop
cwtl
xor
pushf
push
mov
lock
and
sbb
xor
add
cmp
rolb
push
xchg
lods
mov
cld
sti
popl
or
push
idivl
xchg
in
hlt
add
cmp
xor
mov
sub
and
fldenv
mov
shrb
jo
xlat
arpl
ja
adc
xor
jb
sub
cltd
adc
or
in
jmp
mov
das
insl
insl
jg
adc
addr16
orb
inc
or
mov
test
int
cmp
push
fisttpll
push
sub
push
aam
sub
jb
into
push
add
mov
pop
adcb
pop
mov
pop
mov
mov
jecxz
inc
or
fisubl
inc
or
out
cwtl
call
out
dec
dec
sub
sbb
inc
mov
lods
lds
sub
sub
dec
sub
cmpsl
and
imul
dec
sahf
sub
adc
and
cmp
out
imul
mov
xchg
inc
xchg
cmp
inc
sbb
in
js
ret
ds
shrl
es
and
in
adc
in
and
or
into
loope
or
outsb
insl
dec
aaa
inc
pop
sub
dec
shl
les
mov
sub
clc
sub
add
or
pushf
adc
loop
push
jecxz
push
mov
rol
addr16
push
inc
push
mov
in
imul
inc
cmp
sbb
adc
or
ds
pop
movsl
int
lea
mov
daa
lds
add
out
rclb
mov
cmp
popf
push
cli
dec
daa
cld
aad
mov
adc
sbb
loope
adc
xor
sbb
sub
out
mov
and
add
pop
in
in
jnp
dec
inc
cs
sub
jle
cmpb
pop
mov
pop
bound
add
les
loope
aaa
jmp
add
and
sub
jbe
pop
fmuls
xor
ljmp
sbb
arpl
jg
mov
and
inc
shll
jns
jno
cld
into
push
fbstp
fiaddl
mov
pop
push
shl
into
in
icebp
xchg
pop
pop
lret
sahf
cmp
or
xchg
cmpsb
jbe
inc
xor
and
scas
scas
fsubrs
cmp
jmp
jmp
cli
or
leave
clc
and
jo
jge
inc
mov
rcl
cmp
add
or
roll
rorb
stos
pop
ds
mov
xlat
jnp
sahf
cli
les
fs
adc
jb
mov
ss
or
jecxz
inc
movd
push
sbb
pop
dec
ret
cmpb
xchg
inc
rolb
sbb
xchg
cs
jbe
mov
cmp
push
pop
in
out
and
pop
ret
aas
xchg
into
sub
push
adc
loope
cmp
or
mov
aad
std
sbbl
or
pushl
lea
int
sbb
ret
aas
jno
pop
aaa
xchg
mov
adc
shlb
ja
xor
push
dec
mov
in
and
clc
cmp
jmp
add
in
mov
rol
outsl
jb
mov
lods
mov
push
jmp
nop
push
push
inc
popa
nop
out
dec
mov
push
in
cltd
pop
cli
dec
cmp
ljmp
movl
push
add
xchg
pop
in
xchg
sbb
rorb
outsb
movl
inc
pop
sub
mov
fs
sti
push
jbe
mov
mov
xorl
ss
stos
jge
mov
pop
pop
icebp
jb
dec
and
call
out
adc
sbb
jb
cmc
inc
or
ret
push
int
xchg
and
fisttps
jmp
or
lahf
jge
mov
mov
or
in
mov
push
loopne
mov
and
bound
loope
sbb
shrb
stc
pop
jle
cmp
push
add
xor
out
push
pop
pop
sarb
data16
dec
iret
or
pusha
pop
rorb
dec
pop
push
arpl
ret
bound
pusha
ficoms
mov
xor
lock
mov
cmpsl
add
mov
adcl
imul
jmp
pusha
pop
je
je
aas
push
dec
test
outsb
in
xor
outsl
jge
das
sbb
std
pop
mov
out
add
jle
jp
dec
and
sbb
fdivrl
cmp
aam
mov
inc
mov
sti
movsl
cltd
rorb
fwait
decb
les
sbb
lods
int
inc
xchg
sub
mov
xor
aas
jge
mov
out
popf
push
sbb
mov
ret
mov
cs
and
gs
rorl
mov
xor
gs
daa
mov
test
cmp
dec
leave
cmp
data16
outsl
xchg
push
ret
or
scas
rcrl
movsl
movsl
sub
scas
shll
fistl
ss
mov
lods
inc
adc
inc
and
jae
xor
pushf
add
push
hlt
push
add
add
icebp
nop
sub
je
inc
les
pusha
cmp
inc
sbb
dec
jg
xchg
in
add
cmp
pop
jae
pop
in
shll
js
mov
sbb
ss
sbb
adc
loopne
pop
inc
loop
ss
dec
sub
mov
xchg
pop
xchg
sub
push
pop
xor
sbb
mov
popa
hlt
loop
jl
push
push
aas
inc
es
dec
pop
out
outsb
xor
clc
sbbl
outsl
shrb
push
test
stos
sti
pop
lds
ds
dec
adc
aad
sbb
cli
insl
ss
sub
out
aad
iret
test
outsb
pop
cli
insb
test
sbb
rcrb
jo
addl
jl
xchg
cli
add
stos
sar
shrl
push
fwait
jne
aas
push
push
in
xlat
addb
inc
imul
lods
mov
repnz
add
jns
sbb
and
mov
mov
push
mov
sub
and
mov
loope
sbb
cld
scas
fstpt
jl
mov
das
jmp
clc
les
idivl
imul
cmp
pop
movsl
pop
scas
and
scas
out
fwait
sub
ss
and
mov
and
mov
mov
pop
fidivrl
push
sbb
sbb
cmp
clc
test
xor
xor
aas
js
sub
imulb
sbb
jecxz
mov
aad
xchg
stc
pop
inc
sbb
or
daa
and
push
jb
xlat
icebp
and
pop
pop
int3
mov
popa
mov
pop
pusha
inc
js
xchg
jge
mov
or
xor
fstpt
cs
leave
mov
xchg
fcmovbe
jne
jae
addb
enter
js
pop
add
inc
lcall
scas
pop
sub
cmp
popa
in
into
cli
imul
aam
push
add
test
xor
adc
lcall
and
push
and
inc
lods
pop
aam
xchg
pushf
repz
xchg
xchg
inc
mov
test
outsb
pusha
adc
int3
pop
loopne
movsl
shll
xchg
shlb
or
sub
popf
movsl
icebp
xorb
lret
add
arpl
adc
mov
lea
rorb
pop
fstpl
adc
sbb
fildll
fwait
jne
call
scas
loopne
dec
or
sub
jne
jns,pt
or
mov
popf
jbe
dec
ret
and
call
sahf
in
push
or
stos
adc
cmp
clc
ss
mov
ret
das
xorb
pop
push
test
imul
pop
pop
cmp
push
out
and
cmp
jecxz
pop
mov
bound
clc
das
clc
xlat
cmp
xlat
mov
or
data16
in
sbb
lcall
jp
sbb
sbb
dec
lret
lret
mov
xor
sub
ja
in
push
lds
mov
sub
ficompl
pop
aaa
push
xor
jmp
fdivrl
push
pop
das
in
hlt
aas
mov
ja
cli
lahf
fldcw
mov
mov
or
xchg
imull
push
lods
cmp
xor
nop
lock
and
or
or
js
or
push
jmp
mov
icebp
xchg
fwait
cmp
ret
das
or
insb
push
sahf
cld
sub
ret
sub
xchg
outsl
cmpsl
sbb
mov
mov
sub
ja
rolb
cmpb
cmp
add
je
pop
push
add
pop
mov
sbb
pavgb
rcrl
mov
sahf
adc
xor
or
mov
dec
add
insl
mov
loope
jp
mov
fmuls
loop
pop
icebp
test
push
sub
bound
cmovg
sahf
or
aas
outsl
sbb
cmp
scas
cmpb
std
mov
fisubrl
add
addb
xor
test
jge
and
daa
rcl
and
insl
out
pop
jb
insl
arpl
and
or
ss
data16
lcall
inc
xor
xchg
jle
pop
pusha
imul
mov
xchg
inc
fwait
jb
jb
mov
pushf
nop
imul
dec
stc
call
jne
push
mov
and
imul
inc
hlt
dec
push
mov
les
push
inc
fistpl
lcall
mov
xchg
xchg
jecxz
lock
pop
and
xchg
inc
adc
daa
push
fisttpll
dec
addl
sub
addl
test
fildll
int
mov
inc
push
xchg
sub
test
enter
dec
out
out
std
jno
loope
push
cwtl
add
fst
test
sbb
xor
ror
xchg
xchg
push
sub
es
inc
sub
fists
je
lret
scas
mov
ret
setge
cmp
lcall
aaa
mov
add
dec
inc
adc
lods
mov
loop
std
setle
lahf
inc
jg
sub
mov
enter
fisttpl
rcrl
adc
sbb
xchg
add
push
adc
push
cmp
cltd
or
dec
popa
xor
push
sub
add
lods
or
fstl
ret
mov
push
jo
push
movsb
and
fisttpl
ret
aas
sub
mov
nop
mov
cmp
int
lea
movl
jecxz
mov
cmp
push
mov
mov
push
lock
or
mulb
lds
pop
aad
cmp
xchg
ss
ret
pushf
in
fsub
cli
push
add
mov
lret
mov
or
imul
lock
cwtl
pusha
jecxz
insl
iret
push
inc
or
add
es
bound
testb
hlt
mov
jle
fsubr
jnp
pop
push
andb
movsl
adc
out
aas
cwtl
pop
pop
cmp
mov
fstl
in
jo
sbb
pop
inc
ffree
testb
ljmp
out
mul
mov
out
mov
cmp
mov
jg
jns
sbb
pop
add
push
les
nop
or
js
pop
add
adc
cwtl
and
subl
push
sbb
mov
test
or
in
adc
insl
rolb
je
push
ds
mov
lock
std
pusha
fbstp
cmp
ror
insb
cmp
push
mov
out
shr
or
repnz
jge
fninit
outsl
aad
test
movsb
mov
aaa
mov
out
fldl
repnz
xor
aaa
lock
rclb
jg
mov
outsl
nop
jle
imul
cmp
mov
lock
cmp
add
xor
xchg
in
and
adc
ss
xor
or
mov
mov
insb
sub
cmp
mov
test
lcall
dec
inc
sub
mov
sbb
dec
lcall
inc
or
ss
lahf
rol
or
push
jle
popf
jns
out
sbb
xchg
cld
bound
lahf
fadds
inc
add
add
sbb
fisttpl
adc
ja
loope
sahf
pop
cmp
add
mov
mov
faddl
negb
pop
dec
stos
push
imul
pop
icebp
idivb
sub
pop
cmp
mov
mov
xor
cmpsl
push
add
add
dec
int
ret
xchg
sbb
sti
pop
mov
add
push
ja
mov
loopne
movl
adc
jnp
pop
and
push
mov
aam
testl
into
nop
mov
adc
inc
jnp
push
das
test
scas
fstpt
inc
jmp
fsubr
cltd
pushf
cltd
dec
das
mov
popa
pop
in
hlt
scas
mov
iret
jmp
cld
jecxz
cmpsb
sub
aad
test
pop
add
add
or
xchg
clc
shll
insb
fnsave
scas
xchg
vpunpcklqdq
jns
lock
leave
mov
or
push
outsb
lds
or
mov
pusha
mov
clc
jecxz
inc
xor
out
test
and
nop
pusha
iret
ffree
or
inc
fwait
dec
xchg
xchg
xchg
xchg
add
sbb
mov
icebp
stc
clc
insl
dec
mov
cmp
stos
xchg
shlb
or
insb
das
jne
dec
mov
add
ficompl
mov
pop
stos
pop
xor
push
inc
lock
subb
inc
or
leave
js
pop
jb,pt
jmp
jns
xchg
icebp
and
stos
lds
inc
lds
pusha
mov
xchg
es
nop
push
cmp
push
jbe
push
loop
sbb
inc
arpl
das
lds
mov
imul
pop
xor
ret
lock
js
and
inc
mov
adc
pop
cmpsb
or
out
aam
inc
jl
jne
daa
iret
notb
lahf
xor
cltd
in
inc
sbb
sub
ficoml
sub
mov
adc
inc
mov
pop
jp
imul
xorb
sbb
lods
sbb
scas
xchg
add
xchg
into
add
loope
and
push
mov
sahf
rclb
mov
clc
jl
fwait
cmp
rorl
xor
sbb
loope
xchg
ret
je
sbb
mov
idivl
push
xor
or
mov
in
mov
cmp
mov
imul
add
clc
pop
dec
xchg
addr16
outsl
cmp
xlat
loop
aam
outsb
xchg
dec
ja
mov
repz
ret
fadds
or
outsb
xchg
push
jnp
mov
push
lds
incb
arpl
push
inc
add
mov
cmp
lock
mov
push
icebp
mov
pop
adc
jb
inc
push
and
inc
fistpl
ret
mov
lret
int3
xor
adc
sbb
aaa
dec
sub
fdivrl
clc
mov
enter
pop
xchg
cmp
cwtl
pop
and
xor
int3
mov
jne
inc
ret
scas
ret
or
push
fisubs
mov
sbb
repnz
int3
xchg
or
xchg
cs
pop
inc
xor
add
adc
outsb
xchg
imul
lock
mov
jnp
aam
sub
pop
fisubrl
sbb
xor
lock
addr16
xchg
pop
jp
push
push
outsb
je
lcall
add
rdmsr
fdivs
test
pop
or
mov
mov
add
into
xchg
lahf
sarl
ss
sbb
out
mov
fst
jg
push
test
dec
je
xchg
jb
loop
sbb
fs
lds
sub
pop
mov
xor
hlt
xor
mov
shrb
push
les
push
cmc
xchg
aam
mov
mov
jg
mov
cmp
leave
jae
mov
arpl
sub
pop
mov
add
shr
lcall
or
add
xchg
jo
pop
push
in
sub
xor
add
sbb
sub
in
shl
mov
dec
cld
shll
fildl
and
adc
ret
jne
add
sbb
je
pop
adc
mov
mov
cmovo
sub
fldt
push
lock
testl
scas
test
orl
js
xlat
out
pop
outsb
dec
mov
push
or
sub
and
in
xlat
push
push
dec
mov
or
insl
insl
pop
mov
loopnew
rclb
popa
adc
stc
xor
fstpt
pusha
daa
insb
iret
add
ljmp
mov
shl
jle
cmpsl
push
mov
into
inc
xchg
or
fists
xor
add
lret
fimull
sub
mov
mov
jnp
adc
stc
std
mov
and
faddl
sub
cs
movsl
cs
pop
aas
test
outsl
mov
fs
inc
mov
mov
scas
add
sahf
dec
pop
mov
leave
call
insl
loop
mov
fxch
or
xchg
mov
imul
push
mov
dec
out
std
fsub
in
shrb
mov
pop
cmpsl
fcmovb
ficoml
movsb
xchg
fimuls
xor
clc
enter
je
es
jne
adc
call
roll
pushf
or
adc
and
mov
outsl
les
cmp
rcl
push
and
push
cmp
pop
dec
imul
sbb
enter
mov
pop
cmp
inc
push
adc
mov
fidivl
xorb
lret
mov
cltd
xlat
push
dec
inc
aam
stos
or
popf
dec
loope
in
fwait
sub
inc
mov
push
jo
inc
loop
pop
lds
ljmp
mov
test
sbb
sarl
add
arpl
jmp
repnz
mov
cltd
cmp
inc
or
ret
int
inc
pop
mov
insb
lcall
mov
jno
bound
loop,pt
or
mov
mov
push
lods
ljmp
jmp
aas
mov
jmp
xchg
sbb
sahf
test
inc
push
bswap
sbb
sub
pop
add
mov
or
push
add
or
pop
movsb
fdivr
mov
cmpsb
mov
movsb
jle
mov
pop
pop
rcll
jp
mov
and
lds
arpl
stos
cltd
test
bound
ds
inc
je
adc
xchg
xchg
inc
das
mov
js
or
xchg
scas
test
mov
jo
into
adc
call
in
mov
pop
hlt
jo
jge
dec
ss
stc
stc
daa
inc
xchg
add
add
cmpsb
push
loop
push
ret
pop
inc
arpl
dec
fstpl
fcmovne
push
cmp
leave
outsb
in
subl
xor
push
je
ret
stc
xchg
jg
mov
sti
loope
dec
sbb
or
mov
repnz
imulb
movsl
add
jnp
and
out
or
data16
lea
cvtps2pd
daa
mov
roll
mov
xchg
jb
add
push
movsb
xchg
or
mov
fwait
mov
loop
sub
fcmovnbe
adc
mov
les
shlb
and
mov
mov
inc
popa
add
adc
inc
pop
jne
fcomi
fbstp
lret
fiaddl
je
sub
rclb
cmpsb
hlt
js
shl
pop
mov
lret
pop
xor
aas
mov
ds
and
pop
je
mov
mov
pop
pop
dec
aad
mov
sbb
out
loope
mov
fimull
jge
xlat
ret
jb
xchg
xchg
std
pop
cs
testl
jb
mov
cmpsb
mov
cmp
adc
xlat
inc
mull
aad
cmp
add
push
nop
and
push
inc
bound
mov
fistpll
mov
rcrb
dec
push
xor
dec
aad
add
hlt
arpl
test
jb
push
dec
sub
add
test
pushf
clc
in
cs
push
int
flds
or
scas
pop
int3
add
stos
shll
mov
pop
xchg
adc
pop
pushf
jbe
in
mov
sbb
jp
lods
mov
test
adc
pop
test
imul
ret
lcall
mov
repnz
inc
mov
andl
sarb
ret
dec
out
hlt
mov
add
enter
cld
inc
lcall
push
jae
das
mov
inc
mov
jp
sub
jmp
pop
ljmp
and
and
aas
subb
add
mov
inc
ret
lea
test
jno
pop
cli
pop
lret
int
add
insb
push
shll
fnsave
xor
add
jno
testb
lods
cmp
push
mov
mov
out
sahf
nop
out
imul
stc
ja
ficoms
cs
mov
nop
pop
hlt
add
ds
cld
outsl
in
jp
jne
fnstenv
xor
int3
or
cmp
push
fldl
ret
cmpsb
xchg
out
idivl
and
push
jnp
les
lds
es
mov
popa
jge
aaa
mov
mov
cmpsl
fimuls
xor
loope
test
and
push
xchg
and
push
inc
push
adc
inc
xchg
add
out
mov
lods
in
adc
mov
sbb
mov
sbb
cmp
xor
dec
pop
pop
xchg
arpl
mov
pushl
out
popa
movsl
pushf
or
mov
cld
mov
jge
insl
movsl
push
popf
mov
push
sbb
and
icebp
mov
mov
dec
xchg
ljmp
clc
fcmovnu
sbb
push
xchg
call
xchg
int
add
fcomi
das
pusha
sub
fistpll
sub
mov
inc
xchg
mov
pop
mov
pop
cmc
shl
push
cmpsb
jl
cmp
cmpb
loope
insl
mov
xor
pushf
pop
test
or
test
pop
pop
in
push
inc
xchg
mov
ds
cltd
adc
outsb
and
push
cmp
fcmovne
hlt
movsl
loopne
mov
push
jne
test
mov
jnp
jae
sub
cli
outsb
push
addr16
roll
arpl
cmp
pop
test
in
add
mov
xchg
sahf
out
mov
out
fnstenv
pop
test
test
daa
daa
in
shll
sub
fwait
pop
cmp
ss
frstor
int3
out
call
out
dec
and
xchg
adc
sub
xchg
pop
shl
and
rcll
mov
or
dec
icebp
dec
iret
pop
xlat
jecxz
or
mov
lret
test
rolb
jge
out
dec
in
imul
les
jo
jle
sbb
imul
lds
mov
movsl
out
cmp
call
mov
jns
mov
cmp
cli
xor
insl
mov
test
inc
outsb
jnp
das
push
jl
mov
arpl
or
in
mov
add
mov
mov
cmp
clc
popa
or
outsl
aas
push
mov
movsb
jmp
loope
in
push
mul
das
jne
roll
inc
pmullw
xor
xchg
mov
pop
cmp
inc
jbe
mov
aaa
xor
jecxz
push
sub
jmp
adc
sbb
add
mov
mov
and
outsl
sarb
stos
or
sbb
sub
cmp
arpl
cli
roll
cmp
iret
xchg
mov
push
xchg
lods
ret
lcall
lcall
add
fdivl
xor
push
das
push
loop
notb
jp
inc
or
pushf
push
int3
pop
aam
pop
incb
inc
sub
aas
mov
je
aam
mov
out
sti
pop
ljmp
cs
inc
out
dec
cmp
into
fst
cmpl
icebp
mov
sbb
pop
pop
outsb
xchg
stos
filds
lea
mulb
mov
ficoms
imul
sahf
out
pop
and
sbb
movsb
lock
das
or
das
pop
test
ret
sub
push
mov
scas
cmpsb
rcll
outsl
mov
mov
sbb
addb
ja
jnp
in
jle
cmp
jae
aam
jo
mov
push
xor
test
jecxz
xchg
dec
jb
mov
add
sbb
ss
bound
inc
ret
push
sti
pop
insl
dec
adc
inc
and
cmpl
lods
cld
mov
movsl
js
jbe
push
mov
clc
gs
jbe
pop
in
imul
loop
cmpsb
sbb
js
adc
cmp
inc
jo
lret
fistpll
add
shll
mov
inc
or
aas
mov
call
mov
xchg
ret
test
fs
das
test
out
dec
push
or
rorl
inc
adc
nop
mov
ret
add
mov
mov
or
loopne
pop
leave
xchg
adc
xor
add
mov
jge
sub
mov
lock
and
aad
jbe
fidivrs
repnz
and
incb
repz
outsl
gs
pop
outsl
cmpsb
sbb
sbb
mov
jnp
mov
cs
repnz
es
mov
mov
ja
nop
add
add
movsb
cli
cmpl
in
shll
clc
or
and
pop
pop
cs
mov
pop
outsl
fmull
ret
jnp
mov
xchg
fwait
mov
inc
mov
inc
mov
cmp
cltd
jl
leave
jne
push
mov
add
stc
das
loop
fldl
test
lds
testl
jg
in
push
shrl
notl
mov
pop
std
outsl
test
add
pop
jge
mov
test
mov
mov
add
lea
lods
ljmp
test
fdivrs
mov
data16
xor
test
movsb
mov
roll
mov
cmpl
dec
xchg
aaa
lcall
andb
mov
xor
cmpsl
fcmovbe
test
mov
roll
xor
cmp
or
push
insl
pop
xchg
and
mov
mov
mov
ret
cmpsb
inc
and
and
mov
jns
insb
mov
fidivl
pop
adc
test
cmp
ja
mov
xor
push
out
outsb
adc
pop
lret
push
js
jne
mov
or
and
mov
sub
push
pop
mov
loope
js
imulb
mov
xor
test
and
inc
pop
mov
mov
rcrl
ret
inc
mov
inc
inc
mov
sbb
cmp
ds
loopne
or
and
out
or
cmp
pop
mov
fsubl
push
mov
mov
push
jb
in
mov
dec
cld
fs
xchg
xchg
jl
pop
sub
add
push
clc
add
pusha
es
pop
js
fidivrs
adc
sub
adc
jno
outsl
xor
jp
add
rorl
mov
ljmp
rorl
cmp
div
adc
mov
rcr
fidivrs
xor
mov
fcomp
sbb
test
movsb
sbb
sti
pop
adc
or
fsubp
rclb
or
in
add
shrb
mov
dec
hlt
pop
xchg
bound
je
pop
imul
xchg
sti
aam
xor
test
mov
cwtl
xor
roll
jno
push
push
dec
pushf
stc
sub
pop
dec
jbe
cli
push
sub
insb
lea
mov
cmp
mov
and
outsb
pop
mov
push
cmp
data16
adc
fisubrl
mov
xchg
mov
inc
mov
mov
ret
adc
out
outsl
add
push
js
and
ficoml
int
testb
adc
add
rol
les
xchg
cmpsb
push
pop
add
pmuludq
inc
cmp
in
mov
jg
push
mov
or
cmpsb
push
xlat
scas
xor
call
add
ja
mov
jbe
pop
jl
mov
fwait
jmp
sub
or
ss
mov
and
mov
jb
pop
fwait
call
push
jge
pop
jae
movsb
int3
or
jge
mov
test
mov
lret
or
cmp
sub
inc
jecxz
pop
or
pop
pop
pop
sbb
fadd
mov
or
loop
negl
scas
mov
cmpl
rorl
lea
mov
adc
inc
jae
rorl
and
mov
adc
fwait
mov
incb
test
mov
ljmp
ljmp
or
lahf
mov
outsb
jge
add
loop
dec
movsl
int3
int
mov
mov
inc
push
inc
ds
js
jae
xchg
mov
cmp
mov
inc
bnd
ret
push
insl
in
or
aaa
cmp
jl
adc
loopne
fists
lods
mov
shll
call
bound
popl
shll
mov
and
ss
xor
leave
out
mov
popf
push
insb
push
pop
mov
mov
lahf
xorl
mov
mov
jg
mov
cmp
or
cmc
enter
xor
fistpl
pushf
jg
out
pop
jge
std
pop
incb
push
jmp
pop
shr
mov
adc
mov
xchg
lahf
cmp
int
repz
loop
mov
rorl
mov
jl,pn
jmp
int3
add
pop
pop
mov
cmp
daa
scas
or
cmp
mov
and
inc
lret
push
adc
xchg
sbb
shrl
add
movsl
lods
sbb
xchg
aam
outsl
mov
sbb
and
nop
xchg
call
enter
leave
dec
inc
ds
fdivr
ljmp
mov
mov
test
sub
icebp
sub
jge
inc
jg
dec
mov
mov
or
jl
cmc
rolb
xchg
sbb
sarb
fwait
mov
das
outsb
xor
add
add
sbb
incb
dec
hlt
mov
pop
aam
outsb
enter
jle
sbb
push
mov
daa
mov
adc
clc
int3
mov
cmpl
and
push
rcrl
sub
jmp
sbb
jnp
jbe
xlat
aaa
sbb
test
movsb
sbb
sub
lock
push
xor
jg
rolb
cli
xchg
adcl
fsubrp
add
pushf
push
sbb
roll
hlt
jo
jp
pop
xor
loop
fwait
jb
das
jl
mov
lea
out
push
lods
rolb
in
mov
xchg
arpl
adc
cmp
cmp
mov
push
testl
sbb
mov
sbb
movb
xchg
lds
out
fildll
add
scas
in
je
xor
andl
fcom
ret
inc
int3
push
add
aaa
push
mov
lret
pop
das
fiadds
add
loop
scas
push
loope
or
fwait
dec
fwait
dec
mov
bound
scas
jb
ljmp
adc
popa
add
nop
or
loopne
rcll
test
lods
push
ret
dec
push
roll
push
aas
jg
out
pop
ret
dec
inc
and
cli
xchg
mov
insb
fstl
pop
pusha
popa
out
lock
ret
test
cltd
lahf
mov
jb
mov
jmp
dec
or
inc
mov
jle
push
rclb
scas
fcoml
xchg
loop,pt
sub
sbb
or
inc
jecxz
xor
ja
in
fdivrs
xchg
add
aaa
jae
sub
icebp
mov
or
je
sbb
pop
sub
call
push
xchg
add
adc
cmp
mov
jno
jbe
movsb
insl
xchg
inc
jns
sub
dec
cmp
mov
subl
add
jae
adc
or
adc
loope
clc
popa
fcomi
mov
mov
xchg
shrl
lahf
sbb
das
popa
sbbb
out
addl
sub
jmp
call
inc
mov
pop
js
mov
mov
enter
jg
push
xor
hlt
inc
fadds
cmp
push
sub
ss
jg
adc
cmpsl
mov
push
lods
les
mov
divl
push
pop
mov
fisttpll
jge
arpl
dec
mov
aam
jecxz
pushf
dec
jle
scas
pop
movsl
pmullw
jl
loope
dec
mov
testb
mov
xor
pop
jle
mov
mov
mov
rorl
dec
cmp
mov
leave
rcrb
stos
xchg
aaa
loopne
popa
xor
es
adc
sahf
stc
jl
aas
pushf
jbe
dec
inc
add
inc
outsl
mov
das
call
mov
pop
and
dec
sub
int
shrb
mov
les
inc
mov
jo
daa
mov
repz
sub
aaa
jl
sbb
xlat
dec
add
xchg
push
add
andb
movsb
jmp
je
dec
cs
je
cmc
push
dec
pop
mov
loopne
jp
mov
pop
hlt
stos
js
leave
lods
add
dec
nop
mov
nop
or
scas
test
pop
xor
push
add
neg
pop
mov
dec
into
cmp
inc
cmpsb
push
loop
or
subb
ret
jmp
cmpsb
pop
xor
push
inc
orl
mov
mov
cmpsl
pop
jg
out
bound
loopne
sub
xor
mov
fcmovb
in
pop
pushf
ljmp
shrb
push
jae
dec
imul
mov
ss
fcomps
in
inc
add
jbe
bswap
jmp
pusha
or
push
xchg
imul
pop
sub
push
lods
scas
iret
xor
stc
call
dec
daa
mov
mov
xlat
sbb
sbb
cltd
inc
add
and
push
inc
jno
mov
xor
cli
leave
sub
sub
mov
lock
rcll
pop
jnp
cld
sub
out
in
jb
dec
out
dec
pop
mov
pop
flds
inc
paddq
fsubrs
push
daa
repnz
add
inc
in
clc
ss
jmp
ja
lock
call
aas
les
mov
lock
loopne
lcall
adc
ja
xlat
sbb
shrl
sub
in
flds
push
xchg
inc
iret
mov
sbb
jae
lods
adc
add
xchg
js
adc
xor
xchg
in
lret
shlb
lea
mov
ret
bound
jge
in
iret
sbb
gs
jno
jmp
fidivs
call
fdivl
push
fst
aam
pop
bound
es
sbb
enter
push
add
or
sbb
and
lret
jns
xor
push
push
xchg
roll
sahf
adc
add
aad
shlb
aas
inc
or
es
mov
mov
push
pop
ss
shlb
sub
cmpsb
aaa
ja
push
rcrb
pusha
sahf
dec
jmp
test
push
or
add
test
pop
ds
sub
jecxz
sti
shrb
adc
fnstsw
push
cld
ret
adc
add
fwait
adc
cmovb
sbb
and
pop
and
jne
fldl
push
pusha
xor
ljmp
push
and
pop
adc
pop
enter
add
jle
pop
cld
xchg
sbb
stc
dec
ret
mov
cmp
clc
fs
stos
mov
sub
insl
or
outsl
je
bound
jbe
sbb
push
test
adc
notb
mov
testb
cltd
cmp
cli
or
pop
das
orb
or
arpl
sti
xchg
jle
call
movsb
and
sahf
outsb
cs
test
mov
pop
xchg
stc
and
cld
push
add
loop
pop
scas
and
or
pusha
int3
cld
je
fldt
dec
fsubl
pop
ds
outsb
ret
cltd
push
rcl
shl
insb
lock
adc
mov
or
push
int3
mov
push
iret
jmp
push
jb
mov
out
pop
scas
pop
push
mov
je
dec
dec
pop
cmc
add
push
mov
dec
pop
rcl
out
out
mov
jmp
jl
xor
test
test
inc
inc
notl
mov
and
pop
std
icebp
sbb
aaa
xor
inc
sbb
jle
aas
lahf
loopne
das
jl
mov
xor
dec
loop
inc
fcomps
lds
sar
out
std
ret
or
jno
add
add
out
jge
cmp
aaa
push
les
clc
repz
sbb
loope
jle
outsb
addr16
mov
pusha
mov
mov
pop
hlt
mov
sub
fwait
cli
mov
inc
movsb
add
js
js
xor
and
rorb
mov
in
sub
pushf
inc
ret
jg
pop
psubd
push
mov
push
std
decl
divb
push
inc
pop
dec
insb
cmpsl
sarl
in
pushf
das
pop
movsl
or
jae
outsl
insl
shlb
dec
shll
pop
lea
or
sub
decb
mov
add
push
dec
jns
lea
or
mov
mov
and
loop
mov
jle
sub
imul
lock
mov
inc
mov
les
push
pop
fmull
loope
ss
mov
or
mov
out
mov
cld
and
mov
inc
and
mov
pop
add
in
inc
pushf
pop
push
popf
mov
mov
dec
jp
stos
je
push
dec
rcl
jg
mov
andb
ret
flds
je
dec
lds
or
xorl
scas
nop
out
sbb
fsubr
sbb
push
mov
mov
inc
sbb
or
in
cmp
pop
leave
std
pop
scas
inc
sbb
pop
addb
or
mov
fisubl
sbb
into
repnz
insl
pop
js
shll
or
xchg
adc
or
mov
out
test
pop
jge
xchg
jns
lods
xchg
mov
sbb
sub
cs
sbb
dec
pop
push
jge
mov
fists
loope
ja
fisttpll
xchg
inc
in
pop
ss
pop
cld
jmp
mov
scas
cmc
les
jl
test
daa
stc
push
push
add
jmp
fs
orl
mov
mov
xchg
into
jmp
rep
xor
test
stos
test
mov
je
cmc
push
shl
pop
push
jbe
pop
mov
shrb
test
pop
mov
shll
repz
or
sub
adc
pushf
clc
mov
cmp
sbb
dec
cmp
js
js
and
sbb
jmp
dec
xchg
jp
rcrb
xor
aam
mov
inc
rcll
mov
ss
movl
jnp
mov
sbb
push
xor
icebp
mov
into
mov
mov
icebp
test
dec
or
adc
in
inc
xor
mov
mov
mov
xor
adc
pop
mov
movsl
fwait
mov
mov
imul
xchg
pop
dec
je
add
cmpsl
outsb
cli
test
adc
or
cmp
loop
inc
and
pop
aad
inc
das
mov
xorb
int
std
mov
mov
dec
pop
cs
mov
mov
xor
pop
jne
jbe
jle
popf
and
movb
adc
loop
push
jmp
cwtl
shlb
push
adc
stc
jnp
nop
test
sub
mov
jbe
fs
lcall
cli
sub
or
dec
mov
cmp
aas
mov
icebp
jb
or
or
sbb
stos
cmp
shl
jnp
add
push
mov
lcall
mov
lea
loope
outsb
mov
imul
mov
xchg
jbe
mov
push
adc
and
sbb
mov
es
shlb
add
std
cmp
push
pop
loop
lods
add
jno
mov
xor
clc
repnz
pop
xchg
lds
flds
ja
adc
fs
lcall
in
push
xchg
push
xlat
pop
sub
xor
ja
sbb
add
pop
test
test
aad
xor
jae
sbb
fwait
lea
or
repz
mov
cmp
inc
loope
hlt
stos
fidivrs
loopne
outsb
stos
jl
es
mov
insl
ss
aam
adc
mov
add
lcall
mov
xor
aad
shlb
repz
mov
stos
mov
test
and
into
rcrl
jmp
cmpsl
movsl
pop
jmp
scas
pop
dec
jle
sub
cmp
test
pop
hlt
or
xor
inc
movsl
aas
mov
insb
mov
pop
cli
scas
mov
mov
cmpsl
sub
jns
inc
bound
sub
push
mov
sahf
mov
mov
jge
add
test
scas
mov
xlat
hlt
cmpsb
cmp
adc
and
mov
aam
or
rcrl
sbb
cmc
pop
test
rorl
aad
cmp
rcll
ja
lret
jg
adc
rolb
es
adc
cld
mov
rcrb
std
sti
xchg
ljmp
pop
xor
jle
sbb
pop
dec
std
sbb
incb
xor
arpl
inc
pop
jge
loopne
add
sub
jo
lock
cltd
testb
pop
xor
pushf
test
shl
imul
xor
mov
fidivl
cmp
cmp
lds
xor
mov
clc
pop
out
fcomps
adc
leave
lock
xchg
push
cmc
push
dec
cld
adc
mov
lahf
push
out
adc
cmp
in
cwtl
aaa
pop
rolb
ds
ret
lods
or
in
inc
inc
stc
psubw
mov
xchg
adc
cmp
or
loopne
in
idivb
mov
jb
int3
or
rcll
inc
mov
movsb
aam
subl
fwait
loope
lcall
push
push
and
bound
mov
and
stc
push
movsl
test
sbb
or
dec
jmp
ds
mov
repnz
lcall
or
pop
incl
pusha
sub
or
mov
cmc
stos
inc
cmp
cmp
jmp
adc
clc
loop
push
clc
mov
add
shrb
sub
pop
adc
adcb
rcr
lods
leave
adc
insb
dec
fdiv
mov
xchg
lahf
xchg
lds
aas
aam
daa
ja
clc
pop
mov
adc
cmc
lret
add
xor
or
mov
sbb
and
aam
in
jbe
rcrb
sub
fistpll
xchg
mov
icebp
andb
sub
fdivl
sub
hlt
or
loope
and
mov
or
rorl
pop
shlb
cmp
jb
adc
mov
nop
cmp
cld
rcrb
daa
aas
movsb
pushf
mov
sbb
pushf
rorb
fsubrl
adc
sbb
bound
movsl
jecxz
sbb
in
push
xchg
mov
xchg
sbb
mov
hlt
cmp
inc
jne
dec
jmp
xchg
frstor
ret
sti
add
cmpb
or
xor
loop
xor
mov
xchg
negb
and
pop
add
cwtl
mov
aam
cmp
aas
cmc
loopne,pn
sub
icebp
push
cmp
mov
dec
push
cmp
aas
arpl
sbb
add
cltd
inc
push
push
fdivrl
sub
cmp
or
rcrl
push
cmp
subb
out
fisttpll
or
inc
cmc
push
push
mov
lods
push
in
xorb
loope
stos
and
pop
mov
push
add
add
inc
adc
call
cmp
dec
sub
dec
push
jle
xchg
cli
fdivs
push
rolb
lea
mov
out
cmp
mov
mov
pop
dec
jg
mov
dec
call
push
adc
lea
adc
scas
jg
lcall
xor
mov
dec
add
xor
or
push
clc
lcall
push
rorb
aam
mov
fcoml
mov
movsl
lods
imul
out
mov
fdivp
imul
movb
test
mov
jnp
mov
nop
nop
les
cmp
negl
push
mov
ss
or
popf
mov
scas
mov
popf
ss
aas
push
push
and
lock
hlt
sub
jmp
fistpl
lcall
pop
in
inc
shl
and
sub
xor
mov
js
jp
xlat
cmp
mov
dec
fildll
pop
pop
or
xchg
bound
and
pop
roll
rolb
shl
movsl
mov
push
insl
cmp
or
add
inc
dec
jg
or
dec
push
mov
icebp
inc
rorl
int3
fistpl
adc
jne
aaa
fdivl
mov
and
adc
int
nop
mov
mov
loopne
add
push
mov
ljmp
outsl
mov
mov
jecxz
or
mov
jge
fldcw
xor
clc
out
scas
cli
popf
mov
or
push
or
jp,pt
cld
mov
xchg
cmovg
bound
imull
cmp
out
shl
ret
jg
clc
pop
cmpsb
hlt
inc
push
sbb
cmp
sub
roll
inc
pop
loope
out
mov
ror
aaa
jbe
jbe
xchg
and
xchg
inc
xchg
movsb
or
mov
pop
aam
mov
pop
xor
lods
xchg
push
ret
mov
js
or
lock
jg
shl
nop
jle
xchg
mov
push
inc
xor
xor
xchg
cmpsl
aad
fwait
mov
ds
add
cmp
adc
mov
jo
sahf
mov
dec
in
fmuls
lods
jno
add
jg
xchg
loopne
and
inc
or
pop
test
mov
xchg
lahf
dec
pop
xor
mov
sub
inc
daa
movl
stc
hlt
adc
push
icebp
xchg
inc
mul
loopne
scas
pop
or
and
inc
or
sbb
push
sbb
inc
mov
push
add
add
xchg
test
pop
xor
sbb
hlt
out
cli
aas
and
popf
mov
add
sbb
test
jbe
add
mov
xchg
lret
jne
arpl
inc
add
daa
stos
ljmp
or
xor
sti
shrl
rcr
cs
subb
icebp
ret
mov
cli
imul
std
roll
shrb
xor
popa
daa
jle
dec
dec
jl
sub
pop
dec
lods
xchg
pop
mov
in
ja
or
xchg
push
ja
push
inc
insl
aad
pop
pusha
cmp
adc
mov
arpl
dec
cmpsl
stc
adc
mov
bound
icebp
mov
sbb
mov
adc
adc
out
fdivs
shl
dec
divb
fsubr
jb
shlb
cmpsl
mov
jecxz
mov
daa
xor
pop
out
and
inc
gs
and
and
or
insb
mulps
add
lock
sub
int
jns
in
sar
call
in
adc
ret
insl
aam
push
into
adc
imul
inc
add
sub
std
inc
mov
aam
dec
insl
mov
repnz
test
mov
inc
arpl
dec
fdivrl
xor
nop
xor
cmp
pop
xchg
daa
insl
imul
inc
pop
mov
fsts
clc
movsb
sub
shrl
shrl
fadds
sbb
mov
mov
sbb
clc
or
or
aaa
add
jb
arpl
add
mov
pushf
aaa
mov
out
rorl
aam
push
rcrl
arpl
shlb
fisubs
ja
and
ljmp
sub
push
fdivl
cli
dec
lock
inc
cmp
or
call
jecxz
sbb
das
iret
xchg
sbbl
aad
mov
or
frstor
sbb
xor
adc
outsb
out
adc
cmp
dec
sbb
fisttpll
jne
sub
js
lahf
fwait
push
pop
cmp
mov
push
mov
add
adc
push
fisubrs
mov
xchg
push
cmc
xchg
mov
adc
shr
test
stc
xor
mov
lahf
pop
xchg
pop
mov
push
mov
lahf
cwtl
ret
mov
dec
fcompl
push
outsb
outsl
nop
sub
and
sbb
ret
dec
pop
ja
into
in
int
das
mov
or
push
lret
push
ffreep
into
shll
mov
pop
fldenv
jp
and
jecxz
add
lods
lret
imul
xchg
adc
pop
push
rclb
dec
jo
and
iret
add
mov
aam
push
pusha
shll
stos
or
fsubrs
outsb
dec
mov
sub
out
ffreep
enter
mov
xor
fisttpl
fisttps
add
loope
mov
lret
ds
cmc
sbb
dec
shlb
mulb
daa
sub
shlb
dec
orb
mov
xchg
ja
and
mov
hlt
je
cli
sub
push
mov
and
adc
repnz
in
mov
or
loop
xchg
sub
cs
mov
movsl
inc
dec
cmpsl
mov
jmp
inc
add
pop
andb
btc
lahf
mov
lods
xor
and
std
lock
jnp
ljmp
js
xlat
lds
pop
and
sbb
cs
sbb
sub
cli
ja
call
arpl
andl
pop
scas
xchg
out
and
push
jp
and
pop
dec
add
mov
js
dec
not
fwait
data16
arpl
add
mov
push
lcall
add
loopne
xlat
jne
inc
sbb
aas
push
enter
mov
and
jp
and
icebp
js
and
push
sub
mov
sbb
out
mov
popf
repz
inc
push
adc
sub
jno
clc
les
mov
out
mov
ja
ss
insl
adc
aas
or
pop
mov
mov
push
pop
mov
fimuls
and
xchg
into
addr16
aas
adc
movsl
rcll
sub
pop
and
sub
test
jge
pusha
pop
cmp
fists
sub
dec
fldenv
mov
leave
test
xor
inc
and
xor
in
sbb
sbb
pushf
fisubl
test
rorl
mov
adc
psubb
xchg
out
imul
popf
arpl
xorb
arpl
sti
outsl
ja
daa
test
push
mov
jae
adc
dec
push
testl
les
inc
lods
dec
inc
or
mov
dec
sbb
aam
fldt
cmp
and
add
fildll
outsb
stos
lret
cmp
movsl
paddusb
pop
dec
mov
das
das
jno
scas
lods
lret
out
sbb
sarb
mov
add
xor
mov
xchg
ljmp
add
enter
in
and
test
lret
mov
lret
xchg
sub
sub
call
mov
icebp
jbe
inc
aaa
scas
stc
adc
xlat
inc
pop
or
aad
ret
pop
inc
pop
inc
sbb
xchg
xchg
pop
xorb
fadd
negl
ljmp
inc
mov
xchg
sbbb
xchg
pop
cmp
inc
movsb
aam
adc
lcall
xchg
xlat
arpl
sub
xchg
gs
shl
jo
in
out
adc
jo
icebp
xchg
xor
xchg
in
mov
outsb
or
add
and
xchg
mov
pop
ljmp
aam
mov
lock
and
sub
jecxz
in
add
out
inc
xchg
cmpsb
adc
stos
lea
loopne
push
dec
ret
movsb
jecxz
adc
mov
cmp
repz
or
test
ja
sbb
sub
inc
sub
pop
aam
xor
jno
sub
call
mov
in
inc
jmp
adc
fst
rolb
and
inc
out
sysenter
mov
mov
leave
xchg
sub
adc
pop
or
add
or
dec
or
mov
pop
sbb
mov
xor
mov
repz
movsl
flds
pushf
subl
cmp
mov
xchg
jmp
mov
jl
icebp
xchg
mov
adc
lcall
call
pop
pop
push
cmpsl
mov
lods
negl
push
cmc
movsb
loopne
arpl
push
repz
jle
ficompl
pop
fidivl
mov
hlt
mov
in
lret
fldt
daa
rclb
cmpl
push
fstl
mov
add
ja
popa
push
gs
pop
flds
scas
jmp
inc
push
arpl
mov
mov
fs
jecxz
imul
stos
add
je
out
dec
fisttpll
xchg
pop
push
lahf
mov
nop
loopne
sarb
aam
ljmp
cmp
hlt
adc
dec
sbb
mov
loop
enter
xor
lods
fucomp
addr16
jp
cmp
loopne
sbb
xor
xor
xor
add
jno
out
xlat
cwtl
mov
add
cmp
or
adc
lods
jbe
inc
dec
pop
sub
or
jge
rcl
movb
mov
shrb
mov
arpl
nop
iret
lea
add
pop
or
xchg
push
arpl
mov
int
dec
std
mov
pop
xorl
mov
mov
movsb
in
add
cli
icebp
mov
bound
jmp
pop
jb
cmp
pop
lock
jb
push
fcomps
mov
adc
ret
sbb
xchg
xor
mov
mov
fs
jo
mov
je
mov
sbbl
dec
lock
imul
mov
mov
add
pop
lret
jp
das
ret
ja
in
inc
or
jne
out
cmp
push
sub
dec
roll
lock
inc
jge
push
shll
pop
sub
cmpb
nop
push
lret
imul
mov
stc
test
lods
ret
insl
popa
inc
jb
add
pushf
mov
mov
ljmp
add
mov
adc
dec
mov
jns
insb
ret
jbe
lods
cld
sub
or
subb
and
movsl
outsl
mov
dec
inc
sbb
lahf
mov
mov
scas
mov
sbb
pop
mov
lods
xlat
repnz
jnp
addr16
pop
dec
mov
adc
orb
jns
loope
sub
in
std
sbb
pop
jmp
mov
push
push
inc
pcmpeqb
sbb
mov
movsb
aas
test
daa
xlat
mov
addr16
jecxz
dec
nop
stc
sub
cmp
xor
sub
xchg
mov
je
fsubs
out
adc
out
inc
add
mull
jecxz
aad
sub
mov
xor
dec
xchg
jbe
mov
addr16
adc
and
inc
aaa
lcall
sbbb
sbb
aam
inc
push
inc
mov
sbb
inc
gs
mov
inc
add
mov
insb
movzwl
aas
pop
xchg
cmpsl
rcrl
add
push
push
and
fisttpll
push
je
adc
clc
hlt
push
in
xlat
sbb
or
inc
paddb
mov
ljmp
lea
clc
dec
mov
mov
incb
mov
push
pusha
xor
arpl
pusha
imul
fstpt
xchg
daa
fs
push
and
mov
cli
pop
mov
cmp
outsl
push
mov
shld
fmulp
addr16
xchg
movl
shll
sub
and
xor
or
test
sub
mov
fcomip
pop
jo
pop
icebp
popf
dec
test
push
shlb
mov
dec
inc
sub
or
dec
add
sahf
mov
stos
mov
clc
inc
mov
sbb
test
aam
mov
mov
cmp
insl
inc
fisubrl
loope
gs
mov
mov
jl
xchg
ljmp
mov
stc
aam
sbb
mov
int
divb
lea
test
cmp
push
jno
sti
xchg
jbe
mov
mov
jmp
scas
pop
je
insb
sbb
mov
add
push
fsubrs
bound
fmull
adc
test
jp
nop
push
inc
xlat
movl
lcall
pop
inc
push
mov
ja
cmp
pop
loop
rcrl
mov
rolb
int
dec
mov
adc
pop
rclb
jno
push
outsb
test
fs
cmp
adcl
mov
pusha
jecxz
lcall
lods
xchg
add
outsb
inc
lods
jmp
and
test
addb
push
pop
fimull
negb
cli
lods
es
mov
imul
mov
jne
push
adcb
push
sub
xor
jmp
int3
or
dec
call
inc
mov
inc
cmp
add
lods
pop
aad
stos
imulb
add
mov
outsb
jle
jle
pop
dec
xlat
movsb
dec
jo
pop
xor
mov
fcompl
push
cmpb
out
test
popa
mov
xchg
push
pop
das
xchg
mov
cmp
and
popa
popfw
add
repnz
rcll
or
fsubs
sbb
sahf
push
call
stos
in
mov
in
pop
fdivrp
cmp
in
aad
lret
jnp
xchg
fbstp
cmp
fildl
aaa
orb
inc
jbe
push
xchg
das
out
adc
loop
inc
lds
sub
sbb
sbb
mov
xchg
inc
or
fiaddl
inc
pop
xor
pop
sbb
in
inc
pop
mov
xor
lahf
jle
inc
pop
subb
jl
push
mov
lock
push
fldt
mov
shll
add
mov
sbb
fisttpl
push
mov
lcall
ja
pop
xchg
daa
mov
cld
inc
sbb
mov
add
clc
addr16
jns
in
mov
jg
jle
cmp
dec
jo
push
add
fisubl
mov
decb
add
aad
inc
popa
mov
dec
push
ss
fiaddl
xor
ds
fnstsw
adc
and
icebp
mov
icebp
push
jecxz
movsl
mov
jecxz
push
mov
adc
xor
arpl
test
xor
out
out
fsubrs
movsb
add
into
add
lock
sbb
fimuls
adc
addr16
sub
cmp
sub
leave
fildl
pop
dec
xor
sbb
push
pop
js
ja
inc
lock
enter
mov
jle
icebp
xor
cmp
push
shrl
scas
loop
jmp
jecxz
jbe
stc
test
push
pusha
loopne
ss
pop
clc
in
xchg
and
mov
mov
ljmp
jnp
les
mov
lret
xlat
jbe
shl
ret
sbb
outsb
fiaddl
inc
imul
mov
pop
xchg
add
adc
sbb
insl
push
out
adc
rol
cmp
aaa
aad
leave
mov
sti
call
jno
pop
call
ret
testb
mov
sti
lret
sub
lret
fisttpll
pop
lds
sub
call
std
int
or
sbb
subb
lock
sbb
push
int
adc
fwait
test
mov
mov
sbb
adc
add
dec
inc
mov
popf
cmp
incb
mov
pop
mov
or
test
xor
scas
dec
adcl
inc
jo,pn
xor
sbb
dec
pop
inc
inc
icebp
pop
pop
cmp
mov
xchg
xor
cld
push
fnsave
shll
jne
stos
cmp
xchg
or
iret
lods
jno
cmp
push
cld
in
add
mov
cmpsb
add
mov
cwtl
cltd
rcrl
push
inc
and
call
icebp
mov
bound
add
out
test
adc
push
sub
lds
in
jge
jp
push
clc
int3
pop
rcrb
pop
xor
bound
rolb
mov
xchg
dec
or
pop
rol
js
jl
xchg
test
add
mov
xchg
push
pushf
cld
shl
adc
or
sub
lock
movzbl
sahf
adc
jae
jnp
mov
test
lea
inc
into
std
mov
into
sub
inc
jp
inc
outsl
test
and
push
xchg
or
aad
in
inc
popa
scas
mov
bound
jge
inc
inc
add
and
add
jmp
jle
mov
mov
aas
stc
insb
jnp
xor
aaa
pop
pop
sub
fwait
mov
pushf
out
mov
pop
push
cwtl
arpl
or
arpl
adc
sub
pop
jmp
jmp
dec
jae
xor
fsubl
clc
outsb
push
push
pusha
test
dec
pushf
add
xchg
push
add
and
ss
cwtl
clc
jmp
mov
lea
push
je
lahf
imul
or
xor
pop
push
jle
stc
ss
jecxz
jne
dec
flds
inc
ret
shrb
fdivs
push
dec
mov
mov
push
popa
push
jns
loop
mov
and
add
push
and
mov
adc
movsb
or
movsl
aaa
addl
shl
test
lds
loope
lock
push
push
jle
mov
xor
jge
push
pop
mov
fcoml
and
insl
mov
stc
sub
sub
mov
pop
push
xor
sub
je
adc
test
cmovo
aaa
xchg
dec
outsl
adc
dec
wbinvd
clc
xchg
test
mov
rol
stos
jo
movsl
cmp
insl
fnstsw
movsb
bound
stos
js
test
cs
mov
or
outsl
inc
and
inc
frstor
idiv
cmpsl
xlat
push
sub
sahf
cmpsb
and
stos
imul
mov
jge
mov
mov
push
inc
mov
sub
pop
push
adc
mov
pushf
ja
mov
ds
fcmovnb
mov
mov
or
cmp
clc
sbb
fldt
push
jne
mov
mov
jno
mov
in
and
xchg
sub
xor
neg
ret
leave
imul
rolb
jnp
lods
fdivs
push
mov
sbb
mov
add
ljmp
andl
jp
adc
xchg
lock
mov
xchg
push
dec
cmpsl
sbb
cltd
sahf
sub
or
test
mov
movsl
xchg
xchg
lock
adc
jnp
xchg
push
add
call
xchg
and
mov
dec
pmulhw
pop
mov
push
pop
movsb
push
aaa
fiadds
push
mov
add
ret
push
mov
and
int3
cli
pop
fwait
mov
jnp
add
inc
mov
je
outsl
xlat
sbb
xchg
add
outsb
pop
mov
sbb
sbb
mov
mov
push
rcll
xchg
push
mov
mov
fst
mov
mov
loop
iret
nop
shlb
cmc
ror
shr
sbb
rolb
push
cmp
inc
mov
pop
push
xchg
or
insb
mov
cmp
add
insl
insb
js
xchg
mov
sbb
xlat
fisubs
or
fs
lahf
ljmp
push
fisttps
gs
dec
test
daa
movsb
adc
adc
scas
add
int
sub
sti
push
aaa
lock
imul
icebp
push
loope
cmpsl
or
add
call
sbb
repnz
jo
pop
jmp
daa
jae
push
loop
outsl
mov
imul
add
cli
jo
sbb
adc
sbb
rorb
xchg
xchg
add
mov
dec
cmc
fidivs
mov
inc
mov
cmp
xchg
ss
clc
jb
dec
sbb
popa
push
lods
jecxz
imul
lret
ror
fcoms
test
lcall
rorl
cmp
or
les
mov
mov
clc
push
sbb
lock
mov
movsb
inc
or
jg
pop
subb
sbb
xchg
mov
mov
ss
dec
adc
mov
pop
mov
test
mov
xor
stc
aaa
mov
fs
jns
add
cwtl
inc
jno
mov
popa
push
test
push
pop
push
mov
jnp
test
rcrl
cmp
fmul
in
lret
jne
mov
sub
ds
dec
pop
mov
insl
jbe
jp
mov
push
adc
gs
add
cwtl
aaa
mov
aam
mov
or
je
cmpsb
clc
sub
xor
test
loop
mov
mov
xchg
fisttpll
aad
test
loop
gs
jg
or
inc
aas
cs
mov
cltd
mov
mov
cs
mov
jmp
mov
je
fs
dec
repz
mov
push
lds
or
iret
int3
imulb
imul
dec
rcr
rcr
push
push
cltd
enter
sbb
inc
inc
pop
mov
mov
pop
ret
out
mov
push
in
ja
and
jp
test
jecxz
push
push
clc
data16
icebp
inc
lahf
out
int3
aas
aad
sub
cmp
lahf
sbb
ss
pop
subl
repnz
stos
xor
mov
or
aas
lret
sbb
adc
flds
sahf
insb
pop
xor
or
and
cmp
hlt
testb
enter
outsb
imulb
sbb
xlat
mov
arpl
outsb
fs
dec
push
xlat
fcmovnbe
xor
sub
jbe
add
push
push
icebp
push
stc
ret
push
loope
cltd
cmpsb
aaa
icebp
mov
cmp
cmp
sbb
test
ficompl
inc
xchg
xchg
out
add
sbb
mov
pop
fs
inc
enter
sbb
jb
jg
pop
in
outsl
lock
inc
mov
jbe
rcl
push
and
xchg
mov
or
mov
es
cli
mov
pop
sbb
adc
mov
jmp
and
fucomip
or
push
ds
add
cli
sub
pop
xchg
jle
pop
mov
cltd
iret
ss
outsl
ret
lcall
sub
hlt
pop
add
lds
iret
sbb
lods
add
and
inc
movsb
js
enter
mov
cmpl
mov
jecxz
ss
fcom
test
call
xchg
mov
push
outsb
xchg
movsb
xchg
sbbb
in
scas
push
fstps
scas
loope
pop
push
arpl
popa
pop
cmp
js
jo
les
js
mov
dec
pop
outsb
sbb
cmpsb
pop
inc
ret
roll
shrl
mov
js,pn
mov
call
cmp
dec
test
outsl
cs
hlt
imul
jle
js
cmc
mov
ret
sub
jmp
fdivs
cmpsl
adc
fucom
sub
mov
inc
cmp
mov
add
lret
out
xor
and
pop
imul
pusha
add
ja
ret
sbb
movsl
clc
adc
in
test
pop
pop
ja
jmp
xchg
and
push
add
pop
mov
dec
push
loope
dec
push
fucomi
mov
mov
pop
pop
test
lods
xchg
sbb
cmp
popf
push
shrb
ljmp
lret
shlb
aaa
push
mov
jne
int
cmpb
aaa
outsb
xor
push
or
ret
push
ljmp
das
mov
jbe
insl
push
adc
imul
xchg
add
hlt
idivb
adc
aas
dec
ret
mov
out
daa
mov
aam
mov
call
cli
stc
jne
dec
push
push
mov
adc
and
mov
in
push
push
mov
daa
adc
sbb
test
mov
ljmp
sub
adc
adc
mov
jo
jae
jg
dec
pop
mov
mov
mov
inc
clc
or
jg
add
push
icebp
out
dec
and
gs
jbe
rcrl
fimuls
and
imul
mov
lcall
pop
jle
add
jp
movsl
jnp
sbb
add
mov
adc
out
movsb
insb
stc
inc
insb
outsl
pop
inc
xchg
mov
cmp
movsl
sbb
mov
iret
je
xor
es
in
xchg
sbb
lea
bound
inc
push
loop
xor
inc
sbb
mov
xlat
insb
es
cmpl
neg
mov
nop
jmp
or
jecxz
lea
fiaddl
enter
loopne
jp
mov
fisttps
jg
mov
add
addr16
or
mov
sti
cli
or
stos
mov
jg
cmp
daa
into
les
fisttpll
lcall
ds
mov
nop
and
push
insl
dec
outsb
mov
je
sub
fldt
sbb
lods
xor
aad
andb
cmpsb
arpl
inc
fldt
pushf
mov
inc
mov
sahf
dec
add
add
add
xchg
lcall
push
add
pop
sub
das
xlat
mov
aad
lods
rolb
filds
jmp
cmpsb
jge
mov
outsl
xlat
shr
loopne
test
fcoml
out
cmp
push
test
into
cmpsb
in
fiadds
sbb
add
cmp
xor
out
fisubrl
bound
cmp
mov
jae
push
pop
dec
xor
inc
sub
int3
jge
idiv
push
inc
mov
xchg
jp
in
mov
mov
out
stos
pushf
cmp
mov
mov
icebp
int
sub
scas
inc
popa
adc
fimuls
sub
mov
mov
cli
or
mov
adc
mov
mov
frstor
bound
dec
jge
loope
clc
lea
adc
fcomip
data16
int
cwtl
or
and
pop
arpl
jnp
push
movsl
loope
scas
ss
sub
mov
cmp
jecxz
jo
cmp
push
int
jg
cmpb
data16
add
popf
push
sbb
test
jmp
insb
inc
lock
xor
cmp
or
xchg
sub
aad
fwait
adc
lock
jae
jg
cmp
jo
mov
mov
test
dec
cmpsl
cmp
in
lds
mov
sbb
jb
pop
adc
in
cltd
jl
add
fiadds
mov
aad
lcall
stc
outsb
lds
pop
pop
rorb
stc
movl
mov
fbld
dec
fcomps
sti
rorl
adc
fmuls
insl
out
mov
imull
xor
aas
dec
mov
jmp
push
stos
mov
stos
mov
jno
fnstsw
das
jp
lods
push
push
in
mov
jle
dec
sub
push
rcrl
insb
in
scas
jbe
gs
inc
in
pop
test
push
rcrb
aad
or
lea
mov
sbb
xor
insl
and
xchg
sub
popf
rcl
out
push
cld
je
lret
xchg
stos
nop
sbb
in
dec
mov
sub
cmp
imul
xchg
push
or
cmpl
ficompl
decb
xchg
add
inc
dec
and
pop
mov
pop
aaa
mov
test
dec
pop
fs
sbb
inc
mov
xchg
xor
push
shll
cmovs
std
adc
jp
or
pop
push
insb
jge
mov
movsb
sbb
add
clc
insl
stos
xchg
sbb
dec
jno
mov
push
cmp
or
popf
dec
rol
and
mov
sti
shll
push
mov
nop
mov
ss
or
and
cmp
adc
jb
push
in
outsl
insl
dec
add
insl
popa
imul
out
inc
pop
out
dec
pop
inc
out
cmp
lock
mov
fcmovb
sbb
cmpsb
or
test
imul
sub
xchg
stos
in
and
in
mov
xchg
fnstenv
pusha
mov
std
imul
add
jne
test
adc
fucom
push
fistpl
lcall
jl,pt
adc
in
pop
or
scas
popa
in
loop
jb
pop
pop
xchg
push
pop
adc
adc
push
xchg
jle
cld
xchg
jmp
pop
rcl
les
mov
mov
ret
sub
aas
aaa
ret
sbb
add
dec
xchg
cmp
pop
outsb
mov
xchg
inc
jne
push
mov
jno
orl
test
pop
jmp
pusha
sarb
movsb
xor
inc
or
pop
xchg
lods
test
test
mov
js
fstpl
loopne
mov
iret
jb
jnp
mov
repz
xor
imul
ja
imul
test
adc
in
xchg
mov
adc
dec
outsl
in
repnz
push
or
sbb
mov
jnp
xor
cmpsb
adc
lcall
lea
jne
and
daa
xor
pop
pop
lcall
jl
xor
fmulp
and
mov
popl
orb
rolb
mov
push
mov
push
push
bnd
in
cwtl
or
push
mov
mov
and
jbe
jmp
inc
das
and
aad
xchg
test
test
call
ficompl
aad
and
push
xchg
pop
and
jl
out
push
aad
repnz
mov
data16
jg
pop
mov
shlb
out
lcall
pop
bound
dec
xor
mov
lea
mov
cmp
dec
adc
adc
test
aad
out
push
push
pop
dec
ret
sub
pop
jge
cmp
xchg
or
aaa
xchg
add
mov
test
fisubl
xor
inc
or
lahf
cmp
mov
cmc
sub
inc
or
shrl
dec
push
pop
loopne
and
sti
test
aam
xor
gs
add
add
push
cmpb
xor
and
dec
cmpl
clc
testb
fiaddl
aad
inc
repz
or
cmpsb
mov
mov
mov
les
mov
movsl
xchg
jne
jo
mov
mov
rorl
shll
xchg
bound
mov
sub
lock
sub
ja
aaa
je
jle
mov
sbb
popf
vpaddsb
pop
dec
xor
push
pop
or
pop
adc
out
mov
jnp
jg
call
out
push
sarb
dec
add
dec
mov
jecxz
sbb
mov
lock
test
std
or
adc
adc
mov
or
sbb
lock
or
mov
mov
jno
inc
movsb
lods
or
jns
nop
insb
lds
cmc
roll
out
std
xchg
ds
mov
cmpsl
dec
xchg
and
add
sbb
adc
test
je
sub
test
mov
fwait
and
cmpsb
sub
jo
push
lock
adc
inc
into
or
andl
inc
call
adc
sub
pop
jno
les
sti
icebp
shrl
nop
cmpb
adc
std
cmpsb
dec
or
addb
pop
mov
sarb
cld
jae
inc
stc
or
ficompl
andl
dec
mov
mov
mov
dec
pop
jg
and
sbb
mov
fdivrs
sbb
push
js
adc
mov
pop
pusha
mov
add
es
nop
or
xor
mov
push
xchg
out
mov
lahf
sahf
add
and
jns
dec
gs
inc
mov
pop
scas
jmp
jmp
mov
mov
mov
adc
stos
decb
ret
dec
out
add
jg
adc
push
push
shrl
js
movsl
stos
jecxz
gs
mov
cmp
mov
frstor
or
nop
pop
mov
je
or
jl
xchg
test
lea
push
dec
pop
or
adc
adc
add
mov
ss
movsb
mov
adc
ret
dec
push
fsubr
cmp
mov
pop
icebp
divl
roll
pushf
or
add
test
pop
lahf
pop
js
nop
inc
cli
and
mov
rcrl
enter
or
dec
je
imul
faddp
movb
scas
lock
push
rcrl
cmp
in
bound
jge
fistl
fmuls
cmp
hlt
orl
stos
xchg
dec
outsl
les
cmp
call
sub
fwait
and
inc
gs
loop
adc
out
js
adcl
fcoms
fcomi
shl
add
popf
push
test
push
jp
or
add
sbb
movsl
imul
jnp
in
push
in
inc
inc
aam
loopne
sub
and
in
jl
adc
lahf
cmp
push
incb
push
sub
jb
subb
xlat
ss
add
ss
add
cmpl
lahf
sti
rorb
or
movb
pushf
pop
jmp
cmp
cmpsb
and
les
mov
in
call
inc
js
dec
cmp
push
xor
mov
mov
cmp
mov
mov
dec
and
xchg
outsl
xor
clc
adc
ss
mov
jo
cmpsb
scas
add
adc
xor
and
fldcw
cli
sbb
mov
dec
sahf
inc
sub
repnz
cwtl
icebp
fsin
sbb
sub
and
pop
cmp
mov
sbb
mov
int
sbb
cmpsb
mov
adc
jmp
pop
push
push
pushf
pop
js
test
das
clc
js
jl
lds
pop
jle
pop
mov
xor
and
mov
push
rorl
mov
lods
in
mov
dec
pushf
hlt
pop
mov
rorb
jmp
cli
add
pusha
movsl
inc
les
pop
mov
xchg
mov
lret
dec
jg
push
sub
rclb
iret
test
cmp
inc
or
push
xchg
lock
in
push
jge
xchg
ljmp
mov
cmp
hlt
xchg
stc
mov
inc
sbb
add
pop
out
inc
insb
es
pop
and
jle
mov
bound
cmp
incb
hlt
sbb
inc
addr16
jnp
push
jl
add
xchg
push
out
icebp
lret
and
icebp
stos
outsb
add
xor
lret
mov
push
or
aaa
jle
cmp
sub
xchg
clc
mulb
js
xchg
pop
pop
aaa
insb
inc
mov
mov
enter
adc
mov
cli
lods
pop
cld
cmpsb
mov
imul
shll
mov
in
sbb
mov
push
ret
jnp
das
and
push
ja
popa
mov
inc
in
lret
inc
movhlps
ret
inc
test
popa
lds
scas
in
scas
cmpsl
daa
mov
movsl
in
subl
icebp
pop
dec
add
mov
fs
add
mov
cli
xchg
add
rclb
xor
stc
mov
dec
xchg
xchg
mov
mov
sbb
mulb
rolb
arpl
into
mov
insb
adc
lock
mov
add
mov
cmpb
cli
aad
movsb
loop
icebp
lds
testb
icebp
push
mov
pop
das
loopne
add
sti
mov
add
je
lret
std
stos
push
repz
repnz
or
mov
cli
loopne
popa
pop
fcmovu
mov
test
and
jbe
dec
and
out
adc
mov
outsl
ret
mov
pop
sub
mov
and
mov
ljmp
mov
lods
out
xchg
jo
cltd
aad
loopne
fsubr
test
jo
mov
insl
out
icebp
sub
push
jg
lcall
lock
fdivl
les
xchg
dec
xchg
xor
adc
insl
fdivr
cmp
inc
aam
data16
jbe
jmp
cmp
not
mov
push
sbb
mov
mov
in
iret
jle
outsb
jo
insb
dec
pushf
sti
or
mov
sbb
xor
jp
push
and
dec
jl
ds
xchg
jl
sub
xchg
rcrb
pop
cs
mov
sbb
add
ret
lds
cmp
sbb
out
dec
int3
push
sbb
fistpll
sub
test
xchg
cld
inc
and
push
shlb
xchg
mov
adc
in
mov
mov
push
push
xchg
add
jno
clc
jg
and
and
mov
mov
pop
xor
inc
enter
scas
sahf
xchg
arpl
mov
iret
jle
ffree
cmpsl
repz
imul
add
pop
add
call
ret
loopnew
pop
sahf
outsl
mov
arpl
sbb
xor
aad
jb
out
jg
mov
push
jb
adc
aas
loopne
pop
sbb
lds
mov
shrb
bswap
inc
cmp
shl
dec
cmp
ljmp
push
sti
or
into
pop
push
ret
inc
add
pop
insl
xor
xchg
out
clc
pop
movl
mov
mov
sbb
sub
jge
shr
adc
jnp
pusha
imulb
push
and
sbb
xchg
scas
and
pop
and
or
pop
ja
mov
adc
data16
lcall
sbb
imul
sub
lahf
testl
arpl
dec
mov
rcrl
cli
ja
mov
mov
add
adc
or
fwait
pop
insl
sahf
es
inc
outsl
pushf
aam
push
xchg
ja
or
stos
push
inc
stc
out
adc
adc
cld
clc
lods
fwait
pop
aam
mov
xor
sub
jo
out
shlb
je,pn
xchg
pop
mov
int
loope
add
or
outsb
imul
pinsrw
int3
sbb
aam
push
xchg
sub
sbb
adc
icebp
push
clc
lahf
lcall
pop
fdivrp
push
push
jl
test
arpl
pop
cmp
fwait
test
jae
lret
pop
pushf
pop
and
push
jl
inc
or
adc
jle
into
adc
in
push
jle
decb
add
hlt
inc
push
pop
mov
xchg
fdivr
insb
icebp
inc
clc
sbb
sub
mov
jge
leave
cwtl
nop
into
push
xchg
lret
jns
or
ficompl
jbe
rclb
mov
push
add
sbb
popf
adc
push
adc
jnp
les
fwait
fwait
popa
adc
jg
cmpsb
cmc
mov
fistps
out
cmc
aaa
sbb
jae
and
pop
xor
pop
lret
and
cmp
adc
cmpl
xor
imul
insb
out
clc
sbb
aaa
push
loop
inc
cld
dec
dec
mov
dec
jl
adcl
mov
clc
lods
out
lock
mov
loopne
ljmp
mov
or
call
adc
or
hlt
mov
andb
sbbb
sarb
push
adc
cmpl
stc
pop
push
pop
subb
adc
dec
stos
push
jo
pop
xchg
adc
inc
ljmp
mov
dec
xor
fimull
popa
push
ret
aad
clc
mov
ljmp
bound
sbbl
mov
jo
pop
push
mov
shrl
dec
adc
or
enter
repnz
mov
out
cmpsb
fadd
xor
xlat
cs
xchg
jl
nop
out
loopne
test
imul
xlat
cmp
bound
and
stc
loope
jne
lock
push
bound
call
aaa
jle
fldcw
add
xor
push
lea
sbb
outsb
insl
pop
movsl
pop
insb
jo
cmp
movsb
pop
mov
int3
push
dec
inc
mov
mov
clc
out
mov
insb
fistps
outsl
mov
or
fmull
inc
inc
dec
add
pop
ss
xchg
lods
leave
outsb
fwait
push
sbb
decl
aaa
mov
cmp
sub
and
daa
or
jo
mov
mov
xor
lahf
stc
scas
ss
mov
jns
mov
jl
es
pop
lret
into
aam
inc
mov
xchg
add
shrl
cmpl
and
or
mov
mov
sbb
ss
insb
in
dec
dec
out
ret
push
mov
sub
into
mov
inc
inc
ficompl
xor
mov
cmpsb
lods
push
mov
add
arpl
xchg
ss
ja
add
push
out
xor
pop
mov
insb
xor
sub
jb
sbb
rolb
rcl
or
aam
arpl
ret
ficompl
mov
add
push
cld
mulb
std
jo
or
lods
andb
xlat
or
adc
and
push
dec
shl
sub
loopne
inc
pop
xchg
adc
call
pop
insl
test
mov
cmpsb
jecxz
js
fwait
inc
ds
out
mov
inc
pop
dec
inc
dec
mov
mov
fdivs
pop
mov
rcl
pop
pop
add
int
lret
cmc
fidivl
jle
test
inc
inc
adc
js
inc
in
jg
roll
test
inc
or
jl
add
mov
inc
sub
mul
adc
push
cld
ret
imul
bound
insl
rcll
fistpll
les
add
mov
ss
adc
rcrb
testb
popa
jb
jg
sub
adc
push
jg
out
mov
mov
xor
cmp
push
xor
insb
fnsave
mov
push
add
inc
test
std
mov
scas
outsl
lods
lods
cmp
test
sbb
movsb
minps
or
sbb
mov
dec
add
push
mov
out
fildl
dec
cli
push
xor
inc
enter
mov
xchg
mov
lret
dec
mov
pop
inc
push
inc
pop
scas
stc
xor
lods
mov
sbb
xor
or
add
shl
xchg
mov
pop
frstor
mov
mov
cmp
push
test
les
dec
inc
mov
ret
mov
pop
pop
ljmp
fwait
into
xchg
pop
sub
jb
pusha
push
inc
jnp
les
sbb
and
shll
jp
jbe
dec
shrl
lods
dec
sbbb
mov
jbe
add
pop
out
rcrb
shlb
jns
aad
jle
or
stc
cmpsb
mov
mov
mov
cmp
pop
or
pop
mov
cmc
pushl
ss
xor
or
mov
inc
outsl
sub
dec
inc
cmpb
sbb
inc
mov
mov
xor
subb
clc
xchg
push
or
or
mov
xchg
notb
popa
xchg
out
pop
sub
and
mov
neg
lods
mov
sub
mov
in
fndisi(8087
cli
jae
push
out
in
push
cwtl
inc
mov
or
cmp
stos
mov
fs
sbb
int3
add
and
scas
addl
mov
adc
mov
jecxz
xchg
lods
xchg
adc
outsb
ljmp
cwtl
cwtl
adc
js
sub
in
fldl
sub
and
sbb
pushf
fcmovnu
mov
adc
dec
adcb
sub
xchg
movsl
std
or
movsb
push
add
cs
mov
mov
xor
aam
mulb
cmp
sbb
test
xchg
or
sbb
inc
stos
clc
lret
stos
cmp
fcmovnb
sub
sarb
inc
push
adc
nop
inc
adc
jbe
cld
fs
roll
shll
clc
xchg
cmp
mov
out
mov
cltd
loopne
insl
cmp
insb
fstpl
shr
push
jmp
movsl
ss
adc
scas
inc
sub
rorb
mov
in
test
jb
popf
pop
and
loopne
mov
xchg
fwait
rolb
or
test
sub
xchg
lret
pop
xchg
push
imul
insl
faddl
scas
or
sub
sbb
fwait
sbb
insl
xchg
or
ds
push
mov
lds
sub
insb
or
cmpsb
mov
jge
pop
insl
and
and
mov
in
clc
subb
jp
xchg
fnsave
jnp
xchg
sbb
jmp
pop
int
repnz
push
lods
add
pop
mov
fcomps
adc
fbstp
aas
ds
adc
xchg
add
xchg
add
leave
clc
stos
clc
lahf
or
ds
cmp
fwait
mov
lcall
ret
pop
call
into
jp
call
dec
int3
cli
fs
mov
ret
mov
add
cmp
or
icebp
mov
pop
lret
sbb
push
pusha
or
leave
or
out
ret
push
shrb
rclb
clc
stos
fdivrs
push
sarl
ret
shr
lods
jmp
pop
fisttpll
rol
stos
dec
rol
ja
mov
mov
es
inc
cmp
inc
orb
inc
and
int3
scas
subb
mov
nop
push
js
jl
std
mov
cmpsb
sbb
jmp
jmp
xor
enter
je
divb
or
addr16
push
add
pop
test
fnstsw
sbb
xchg
rcrl
inc
inc
or
pop
mov
pushf
rcrb
mov
dec
mov
clc
cmp
xor
jno
aad
jg
ffreep
lods
mov
syscall
fwait
push
or
nop
outsb
mov
data16
addb
fsubs
clc
das
mov
jbe
xchg
mov
insb
enter
mov
inc
or
negb
cmp
sbb
into
rcl
outsl
ja
fs
insb
scas
dec
imul
insb
incl
imul
add
wrmsr
push
fildl
int3
mov
push
fmulp
jle
jmp
pop
mov
imul
jno
aas
cli
int3
loop
push
rorl
mov
arpl
int3
test
orl
ret
pop
addr16
push
fiaddl
mov
or
mov
addr16
popf
jo
dec
aas
ljmp
push
xchg
test
xchg
xchg
jo
inc
dec
xchg
push
mov
ja
or
or
lock
sub
test
pop
adc
popa
daa
push
jg
jecxz
jge
xorl
jmp
jg
adc
roll
jl
mov
rorb
mov
inc
loop
mov
in
psadbw
or
fcomp
jbe
call
push
fs
loopne
mov
mov
pop
rcll
jl
and
inc
cmp
add
in
in
fdivrs
bound
ljmp
das
jge
add
pusha
add
pop
add
int3
inc
subl
add
inc
push
scas
pop
outsl
mov
ret
jg
and
ficomps
iret
push
lea
test
adcb
bound
ja
sahf
sbb
mov
scas
test
out
and
stc
shrb
ret
and
push
add
test
stos
pop
sub
pop
adc
mov
les
shl
fimull
in
outsb
jo
pop
mov
sub
aaa
mov
mov
adc
jg
pop
stc
cmpsl
jp
mov
mov
sbb
pusha
mov
cmp
mov
xor
jnp
dec
mov
adc
xchg
fucom
and
sbb
cmp
fidivs
ret
leave
cmp
dec
xchg
mov
sti
mov
cli
jp
xchg
adc
jno
dec
call
cmpsl
cmpsb
mov
pop
cld
gs
adc
lcall
mov
sub
xlat
mov
stc
or
pusha
pop
mov
lods
int
adc
cmpsl
mov
popa
insl
mov
xchg
popa
loop
dec
call
sarb
mov
dec
cmp
push
add
dec
sub
cwtl
leave
ret
mov
sbb
fstl
fdivrs
fsts
jle
test
add
cli
push
xor
addl
outsl
mov
jne
and
cmp
cmp
test
push
and
fisubrs
cmp
cmc
sbb
addl
imul
loope
add
ds
ljmp
movsb
push
cmp
jbe
xchg
adc
rolb
icebp
sub
dec
mov
cmp
pop
cmpsl
mov
ret
cli
lret
insb
lcall
dec
nop
xor
sahf
jo
das
fnstsw
and
out
pop
hlt
xor
loop
lock
mov
jg
cmp
add
sub
scas
push
jp
sbbb
loopne
scas
mov
xchg
call
jnp
adc
bound
mov
shr
mov
push
push
jge
and
xchg
inc
hlt
idiv
and
jns
mov
xlat
arpl
jl
cs
fsubrl
xchg
lea
sub
sbb
sbb
sahf
push
cld
xchg
jecxz
add
aad
sub
fimuls
mov
inc
pop
push
add
pop
jae
push
imul
mov
jno,pt
inc
fsubrp
xchg
test
les
jne
lahf
stc
dec
call
fsub
fs
shll
aad
sub
push
sbb
scas
sarb
es
pop
dec
push
ja
adc
loopne
stos
loopne
lock
movsl
ss
jae
or
mov
mov
sbb
add
stos
xchg
les
jg
and
sub
jb
push
xchg
incb
aas
push
jge
test
xchg
fnstenv
roll
fistpl
lahf
mov
mov
add
xchg
and
and
lcall
jbe
movsl
shl
fistps
mov
pusha
orb
adc
cmp
jge
cmpsb
mov
orb
push
push
add
dec
jg
cwtl
inc
insl
loopne
add
cmp
dec
insb
fstl
add
ljmp
icebp
filds
addr16
adc
mov
add
dec
in
fistpl
jle
je
cmp
jg
and
mov
sbb
nop
jb
cld
fdivrs
fistps
push
in
mov
sbb
jne
xor
push
sub
push
js
iret
dec
push
xor
sarl
sub
loopne
pop
cmpsb
mov
push
js
loop
inc
add
lock
movsl
xor
mov
sub
shrb
fsubrl
jbe
mov
add
scas
das
adcl
mov
jg
xchg
mov
lock
aad
lret
push
cmc
out
add
xchg
xlat
push
pop
ja
push
pop
jns
or
dec
es
call
psubusb
in
sbb
leave
scas
imul
fbld
arpl
pop
cmp
ficomps
ficompl
cmpsb
mov
jo
jae
cmc
fisttpl
andb
jle
fbstp
add
cmp
into
sbb
sub
xor
movsb
xor
imul
xchg
pop
fimull
mov
movsl
lret
in
ja
mov
cmp
or
cmp
sbb
add
adc
ja
mov
and
out
cmpb
popa
mov
hlt
test
and
push
cli
pusha
mul
lahf
mov
xchg
sbb
pop
dec
cmp
push
and
inc
pushf
inc
xchg
ss
or
mov
nop
sbb
loope
mov
mov
push
or
in
test
fisttpll
add
jl,pt
fildl
int3
sar
push
enter
mov
insb
or
stos
ja
in
iret
sti
insb
cmp
aas
push
pop
scas
mov
xchg
lock
or
das
in
enter
dec
cmp
jnp
pop
xor
and
pop
rorl
mov
xor
push
xchg
pushl
test
mov
mov
mov
das
jl
sbb
ds
icebp
mov
pop
push
cmpsl
xor
inc
stos
jmp
add
push
imul
cmp
mov
mov
cmpsl
testb
loopne
mov
fsubrs
je
loope
fdivrs
repnz
fcom
mov
push
loopne
jbe
mov
imulb
arpl
lret
js
inc
fildll
adc
push
aad
js
cmp
xor
xlat
push
movsb
pushf
xchg
cmpsb
js
mov
mov
lcall
cmp
fnstsw
pavgb
jbe
sbb
mov
in
jne
shr
cld
in
sbb
pop
jmp
aas
push
mov
mov
pop
mov
mov
int
mov
dec
cltd
outsl
imul
lock
out
add
xor
sub
ret
cmpsb
int3
sbbl
movsl
cmp
mov
int
je
push
aas
dec
mov
scas
jecxz
dec
mov
mov
shrb
or
pushf
mov
sub
xchg
lock
mov
ficoms
pop
je
rorl
cli
xchg
pop
mov
sbb
adcl
mov
les
es
jno
jg
ljmp
push
fadds
sub
push
call
shrl
lcall
xchg
scas
inc
push
xchg
fbld
gs
xor
icebp
and
imul
xchg
fsts
js
in
dec
cmpsl
insb
test
fstl
xchg
push
jecxz
push
lds
pop
cltd
roll
lcall
mov
push
jl
mov
aaa
pop
shrb
movd
decl
dec
repnz
dec
mov
loope
push
add
dec
fidivrs
orb
xchg
rorl
mov
dec
dec
scas
out
adc
mov
clc
push
sub
addl
dec
or
inc
adc
out
push
push
jg,pn
ss
cltd
arpl
and
jns
inc
in
hlt
inc
loope
push
xor
adc
lds
sub
bound
clc
repz
jmp
sbb
clc
lds
pop
xchg
test
pop
mov
xchg
into
jo
push
sub
xlat
aas
shl
loop
mov
pop
fucomi
out
push
fcmovb
push
jb
out
fnstenv
cmp
inc
cwtl
or
mov
incl
jp
fs
fwait
jle
imul
mov
rorl
testb
jp
jmp
pop
inc
rcrb
and
pop
les
fdivs
call
cmp
iret
mov
fwait
orb
out
add
fdivr
mov
aad
clc
push
scas
pushl
rcll
sub
mov
mov
sbb
aad
mov
bnd
and
test
mov
fcmovnb
dec
mov
mov
mov
mov
inc
sbb
jecxz
push
in
std
rcl
add
and
pop
dec
test
mov
mov
mov
jle
push
mov
adc
lcall
fcomp
jbe
leave
mov
lds
loopne
orb
ljmp
ret
and
test
ret
icebp
test
dec
xchg
pop
aas
add
sub
pop
iret
adc
pop
pop
pop
mov
cmp
pop
push
jno
fimull
or
cmp
mov
mov
dec
pop
or
iret
ds
sbb
aas
aaa
movl
xlat
imul
xchg
push
lock
inc
xorl
outsl
das
mov
jbe
xchg
sbb
movsb
jo
daa
cmp
cmpsb
outsl
pusha
andb
or
int3
in
xor
fidivrl
inc
dec
aam
jmp
sbb
movsl
ret
lods
test
mov
inc
pop
push
mov
outsb
rcrb
push
ss
scas
fdivr
out
fsubrl
insl
xor
lahf
push
push
mov
popf
sbb
imul
lahf
bound
or
add
repnz
xor
fmulp
sub
xchg
adc
mov
adc
cltd
or
jp
insl
mov
inc
cs
add
int3
jbe
inc
sbb
mov
hlt
push
fwait
push
sbb
xor
pop
test
jbe
push
stc
mov
bound
clc
jle
data16
jmp
cli
and
push
popl
sub
and
mov
sbb
shr
aam
ds
sbb
imul
addr16
mov
adc
mov
push
jle
pop
and
out
xor
and
shrb
inc
addl
fiaddl
xchg
cwtl
es
loopne
lods
jg
xchg
popf
pushf
arpl
or
mov
outsl
xor
adc
mov
popa
mov
or
test
imul
cmp
pop
mov
xchg
jnp
int
cwtl
mov
outsb
insl
arpl
sbb
out
cld
lea
cmp
cwtl
inc
jle
insb
sub
jp
popa
sti
lds
outsl
test
sub
push
inc
ljmp
inc
sbb
add
dec
rorb
mov
cwtl
mov
das
jns
cmp
or
js
or
jmp
stos
loopne
add
ret
fimull
test
repnz
and
test
lods
adc
cmpsb
sbb
je
xchg
push
and
mov
ja
cmpsl
and
mov
sub
rorb
or
jbe
adc
xchg
sbb
and
xchg
xor
pop
pusha
push
std
inc
pop
cmpsl
jp
mov
pop
sti
daa
je
add
pop
add
pop
dec
test
jbe
jecxz
mov
add
push
imul
push
cltd
leave
jl
dec
xor
pop
push
fcomps
daa
daa
call
push
mov
stc
or
jle
subb
fisttps
sbb
in
add
mov
or
mov
daa
dec
xorl
jle
test
jmp
cld
cltd
inc
mov
jecxz
addb
cld
mov
fnsave
jo
repz
push
lock
push
sub
jb
je
loop
subb
adc
jne
pop
push
jno
jp
xchg
ret
movsb
add
lea
push
cmc
jmp
mov
movsb
inc
aad
jmp
iret
rorb
scas
xor
inc
out
shll
pop
cwtl
dec
and
jmp
xchg
fidivrl
jns
pop
cmp
mov
loop
test
pop
or
fstpt
sbb
push
rcll
cmp
sbb
aas
mov
sub
inc
inc
adc
mov
pusha
ffree
inc
add
xchg
idivb
stos
sbb
and
loopne
shlb
jmp
push
mov
mov
stc
test
daa
pop
rorb
js
lahf
dec
int3
xor
push
pop
nop
pop
jo
stc
aas
jb
sub
add
fcomip
decl
push
dec
loop
jecxz
hlt
xchg
lds
loopne
out
dec
cwtl
xchg
mov
or
xor
test
cltd
sub
push
test
mov
bound
lret
dec
out
pusha
test
or
call
cld
pop
loop
cmpsb
and
or
loope
push
and
mov
cmovo
and
ret
stc
sub
cld
leave
lods
inc
nop
shr
xor
pusha
push
adc
lret
jmp
xchg
or
sbb
mov
stos
jmp
test
test
pop
inc
aaa
inc
jne
in
inc
xchg
jle
jp
mov
jmp
es
mov
jl
xchg
orl
hlt
push
lock
cmp
es
lahf
push
stos
mov
arpl
sub
fimuls
or
ret
mov
pop
sahf
sbb
sahf
js
cmp
ss
test
mov
dec
fs
fucomi
xlat
inc
repnz
lcall
or
mov
cld
call
leave
mov
sbb
repnz
xchg
mov
and
mov
lret
add
gs
dec
shrl
sbb
fisubrl
incl
cmc
dec
adc
adcl
nop
pop
jno
insb
cwtl
lret
lret
es
nop
push
pop
lods
or
inc
inc
mov
or
push
cmc
or
dec
test
pop
loop
les
push
cwtl
daa
mov
pop
hlt
push
hlt
jb
stc
mov
push
addb
adcb
xor
insl
add
mov
mov
sub
punpckhdq
xor
fimull
les
add
jae
sbb
cmp
xchg
xor
lock
inc
jle
push
icebp
pop
lea
jb
test
jp
add
inc
fadd
pop
dec
jge
inc
leave
test
xorb
adc
mov
mov
jg
adc
sti
mov
sub
std
or
mov
mov
sub
xchg
pop
mov
aaa
enter
mov
aad
jns
pop
mov
jmp
or
xchg
mov
sub
ss
cmp
and
mov
gs
pop
outsl
dec
stos
dec
xchg
in
push
cmpsb
or
inc
or
and
lahf
clc
push
dec
dec
scas
pop
dec
add
loopne
jg
cmpsb
sti
pop
popa
jg
ljmp
pop
stc
decb
in
in
mov
jge
repz
mov
pop
sub
sbbb
aad
push
inc
xor
dec
pop
int3
stos
jmp
jge
push
push
add
and
push
icebp
xchg
loope
jp
inc
jmp
add
gs
add
mov
push
ds
mov
repz
aaa
fwait
lcall
loope
or
sub
jg
fistl
subl
sbb
call
sub
jo
jo
pop
mov
mov
inc
cmpsb
and
push
jmp
jbe
ja
mov
pop
inc
in
xor
and
jecxz
cmp
loopne
push
xor
xor
test
mov
push
dec
sub
fistpl
jl
dec
mov
jbe
in
pop
sbbb
mov
jnp
out
ljmp
and
inc
in
add
orl
bound
push
mov
jns
aam
sub
mov
pop
daa
inc
jecxz
sbb
mov
loopne
adc
int
popf
stos
cmpsl
xchg
add
jle
pop
mov
mov
push
sbb
leave
pop
aaa
aam
dec
lock
inc
dec
mov
mov
push
jl
sub
bound
mov
roll
je
out
std
movl
test
cwtl
notb
jg
hlt
mov
sub
cs
outsb
or
es
dec
les
pop
ss
dec
and
out
pop
shl
push
xorb
mov
or
test
aad
das
aam
je
jno
lcall
xchg
call
mov
pushf
adc
clc
adc
mov
mov
dec
outsb
mov
xor
xlat
pushf
adc
adc
ljmp
mov
pop
push
loopne
lea
xchg
xor
jge
pop
dec
or
fstl
cmpsl
ret
push
ret
push
popl
mov
mul
push
test
movsb
cmpsb
sub
or
je
std
movsb
sub
gs
movsb
fistpll
mov
add
in
test
fwait
add
sbb
addr16
mov
or
shlb
mov
cmp
dec
mov
add
inc
or
cmc
sbb
push
jo
pop
call
in
cmp
mov
add
cmpsb
ret
aaa
adc
mov
push
and
adc
adc
push
sbbb
sbb
sub
jl
and
in
insl
stc
rolb
ret
sbb
hlt
sbb
lret
mov
ljmp
push
adc
xor
loop
mov
andl
push
daa
sbb
pop
pusha
fwait
rclb
push
icebp
fimuls
test
addl
clc
out
movsb
dec
add
mov
out
dec
xor
xchg
imul
add
push
dec
int3
sbb
or
jbe
sbb
inc
loop
or
sbb
fisttps
js
and
mov
incl
repnz
inc
ret
pop
loopne
mov
cltd
mov
xor
test
jg
mov
loop
imull
imul
push
insb
inc
andl
or
and
pop
mov
ss
rolb
lahf
les
jle
movsb
in
fwait
bound
cmpsl
inc
mov
pop
add
jmp
adc
xchg
stos
and
lea
or
add
in
mull
dec
hlt
dec
std
cmpsb
xor
push
lods
pusha
imul
mov
pop
dec
insl
shl
push
xor
pusha
imul
mov
xor
inc
mov
shll
outsl
and
xor
add
pop
test
dec
or
pop
adc
or
adc
pop
mov
dec
test
pop
xor
adc
mov
mov
jb
repnz
add
movsl
mov
pop
sbb
cmpsb
loope
faddl
inc
ret
add
pop
xchg
push
lcall
push
loop
jno
jle
mov
int3
filds
jle
push
ljmp
and
jmp
imul
sbb
daa
pop
pop
test
cmp
dec
pop
clc
pop
pop
inc
addr16
push
dec
shr
out
xor
push
or
mov
pop
cmp
inc
xor
ficoml
and
add
out
jno
mov
mov
push
mov
outsl
jg
aaa
jge
or
xchg
lock
ljmp
outsl
aaa
outsb
xorb
push
inc
push
ja
rcrb
out
dec
sahf
mov
dec
in
cmpsl
arpl
lods
sbb
push
icebp
mov
inc
fildll
push
mov
popf
xor
fwait
fs
xor
mov
stc
xor
sbb
lds
stos
fs
imulb
cmp
aas
and
stc
test
cmp
xchg
sub
dec
test
inc
addr16
jp
inc
repz
mov
pop
sbb
mov
icebp
stos
jb
loopne
sbb
mov
in
dec
or
pop
call
fwait
add
mov
xor
mov
lds
add
iret
mov
inc
mov
push
shl
fidivs
pop
aaa
clc
xor
adc
and
xchg
lds
mov
add
and
fadd
add
in
sbb
test
fwait
stc
add
pop
outsb
das
pop
andl
jae
roll
or
cmp
lock
mov
movsl
jg
in
ds
icebp
and
enter
inc
test
jg
dec
out
test
outsb
fwait
xchg
ret
test
or
popf
enter
repz
jo
mov
adc
fistpl
sub
fcmovu
or
xorb
test
push
push
adc
test
cmp
lods
int3
inc
inc
aad
es
imul
push
sub
lahf
shlb
clc
fistl
mov
xchg
add
mov
cli
ljmp
lods
pop
fidivrs
roll
push
cmp
adc
out
aam
cmpl
test
xchg
mov
push
mov
lods
insl
push
pushf
imul
xchg
aad
data16
movsb
ds
sub
push
push
jno
in
cmp
insl
jmp
xchg
mov
cmpsl
xchg
into
jno
push
popf
imul
mov
outsl
jno
adc
adc
or
leave
sub
outsb
dec
je
fs
outsb
mov
inc
test
call
iret
sub
sub
adc
testl
andb
inc
shll
mov
mov
push
sbb
inc
fidivs
cli
test
sbb
xchg
mov
jmp
sub
and
and
jbe
jns
movsb
push
roll
jge
mov
roll
and
mov
arpl
xchg
fisubs
and
pop
jge
sub
mov
push
in
mov
xor
jbe
and
pusha
push
pop
data16
mov
push
mov
cmp
dec
mov
mov
sbb
mov
cli
push
inc
cmp
mov
pop
cld
insl
lock
mov
or
mov
xchg
cmp
sarb
inc
sahf
push
inc
sbb
dec
lods
dec
inc
adc
jbe
dec
cmc
sub
cld
push
stos
hlt
ja
imulb
ljmp
push
xchg
and
out
divb
icebp
xor
mov
mov
scas
mov
mov
dec
roll
add
movsl
sbb
in
xor
fsubrs
inc
pop
lret
cltd
nop
adc
adcl
xchg
xor
and
inc
mov
mov
pop
jp
lods
inc
jno
stos
inc
jb
or
inc
push
ljmp
iret
mov
shr
xor
decl
push
in
flds
dec
xor
mov
pop
ds
test
jnp
aaa
push
in
aaa
pop
inc
dec
mov
xchg
sarl
add
or
xchg
int3
loopne
jecxz
xchg
adc
mov
hlt
idiv
mov
jnp
jg
dec
int
enter
lods
mov
in
jno
dec
pop
mov
fwait
outsl
push
adc
clc
pop
dec
ret
push
xor
cmp
push
insl
adc
outsl
mov
out
push
clc
loopne
stos
xchg
sbb
or
xchg
outsl
out
in
mov
sti
pusha
or
scas
insl
test
mov
pop
stos
jl
inc
imul
test
jge
fsts
leave
inc
adc
sbbb
mov
pop
mov
hlt
outsl
cld
jns
jge
fwait
bound
in
filds
outsl
sub
orb
xchg
icebp
shrb
ss
popa
pavgb
lock
mov
in
loop
fimull
mov
inc
jnp
mov
xchg
dec
bound
pop
loop
je
or
rclb
aad
push
pop
bound
inc
fildl
out
bound
or
out
xchg
mov
push
jo
movsb
int
stc
jle
mov
adc
cmpsl
adc
pop
xchg
inc
imul
pop
xchg
adc
push
sbb
aad
xchg
out
repnz
sub
mov
pop
mov
jle
sbb
xchg
push
mov
jne
lds
sub
fwait
mov
add
in
dec
xlat
push
jge
shll
adc
sub
jmp
fdivrp
adc
xchg
jl
roll
das
and
aas
jo
ljmp
imull
mov
pop
outsb
clc
pusha
mov
std
nop
xchg
jmp
cmp
stc
sub
sbb
jg
add
xchg
test
addr16
fisubrs
adc
mov
lods
repz
xchg
push
sub
shl
mov
fwait
sahf
hlt
loope
add
mov
hlt
mov
mov
sub
les
mov
outsl
xchg
in
mov
popf
sahf
adc
testb
push
mov
jle
je
les
jbe
fstpt
jg
xchg
push
fnstenv
mov
mov
push
lds
lds
mov
cli
ljmp
push
sti
and
or
push
iret
sbb
outsl
pop
add
adc
push
xchg
and
add
pop
push
sbb
lock
sbb
mov
sub
mov
in
add
xchg
xor
or
and
in
add
call
and
out
jp
incl
mov
sub
dec
rcr
fildl
repnz
inc
add
nop
stos
cwtl
jge
push
jno
jb
data16
not
data16
bound
sti
jnp
xor
outsl
out
loop
inc
add
adc
inc
test
mov
xchg
outsb
pop
add
sbb
andl
or
arpl
or
sub
gs
shll
fimuls
pop
sbb
push
int3
cld
push
pop
lahf
loopne
sub
movsl
or
das
fmull
jge
out
icebp
jb
test
mov
fs
xor
push
imul
cmpsb
push
es
leave
insb
jecxz
and
mov
xchg
rolb
jbe
push
ret
sbb
xchg
cli
ret
sahf
mov
ja
sub
test
insb
stos
insb
pop
jge
clc
aaa
mov
testb
movsl
fwait
xor
xchg
inc
or
and
and
jmp
nop
mov
sbbl
dec
push
jno
rcrl
stos
scas
mov
push
push
in
push
add
inc
cmc
jg
je
jb
adc
adc
rclb
loop
xor
loopne
cmpb
inc
outsl
gs
and
arpl
add
movsl
scas
sub
std
or
jecxz
sub
add
les
jmp
mov
mov
fs
ds
fldenv
insb
cmp
xor
dec
xor
aaa
lods
test
mov
iret
pop
push
outsb
jmp
sub
out
movb
fcmovnbe
push
jbe
lcall
jo
ret
aam
mov
or
xor
ret
dec
cs
lods
mov
lret
in
dec
jno
mov
bound
test
sbb
push
les
jge
addl
sbb
or
adc
test
pop
mov
sbb
cmp
push
pop
mov
pop
insl
jo
pop
data16
enter
pop
mov
aam
and
nop
add
lcall
andb
lods
jnp
loopne
or
das
jecxz
fcompl
clc
stc
sub
in
jle
jb
xlat
shll
or
jb
dec
test
loopne
hlt
loopne
sbb
mulb
xchg
lods
loope
sub
dec
push
insl
cmp
adc
repz
cs
jl
jecxz
xchg
out
in
outsb
arpl
insl
ret
cltd
and
mov
pop
inc
addb
nop
jne
mov
and
shlb
lods
repz
inc
jge
aaa
add
and
add
orb
sbb
outsl
sub
aaa
push
jg
cmpb
jmp
or
lcall
jmp
les
xor
cltd
ret
inc
jl
leave
push
add
dec
xchg
push
pop
mov
bound
mov
sub
mov
or
sbb
xchg
mov
or
rolb
addr16
pop
shlb
mov
incl
fs
sarb
scas
sti
mov
mov
or
jno
mull
mov
inc
addr16
xor
xchg
arpl
mov
and
test
add
mov
bound
cmpsb
stos
lcall
or
fnstenv
out
in
mov
out
loopne
in
andl
hlt
jns
loopne
shr
out
or
cmp
cmpsb
call
sub
or
add
jae
mov
dec
aad
cltd
repz
mov
rcr
imul
sub
movb
mov
or
stos
arpl
inc
loope
loop
pop
mov
or
xor
cli
lret
outsl
out
cmpsl
out
mov
mov
or
mov
cmp
sub
rorl
push
dec
sub
and
inc
adc
jge
loope
daa
lds
cld
arpl
cmp
mov
ljmp
push
sbb
ds
mov
pop
pop
ds
jle
add
and
mov
test
push
fbld
inc
aaa
mov
ret
cmp
xor
inc
mov
pop
pop
clc
xlat
add
call
mov
xchg
pop
test
sahf
sbb
and
dec
ljmp
inc
pop
sahf
jno
adc
lods
dec
arpl
movsl
or
cwtl
out
xchg
sub
cmc
in
and
adc
xor
arpl
push
pop
mov
shlb
js
jl
mov
pop
scas
or
aam
ja
push
inc
push
jo
movsl
test
mov
cmpsb
xlat
xor
arpl
scas
xchg
jbe
pop
mov
xchg
lahf
adc
fcom
push
xchg
stc
scas
mov
in
cmp
pop
daa
inc
add
ja
dec
jge
xchg
inc
clc
dec
inc
pop
inc
ds
dec
das
ficoms
fsubp
ljmp
jmp
insl
insl
imul
pushf
jae
push
sub
mul
jg
sbb
xchg
clc
and
cmp
les
jle
fs
call
decl
or
mov
cmp
sahf
pop
mov
mov
or
mov
sbb
stos
cmpsl
inc
pop
das
push
rcl
or
jb
lock
mov
or
nop
test
ljmp
sub
mov
and
inc
lahf
xchg
inc
adc
mov
aas
mov
pop
add
ss
insb
daa
push
clc
jae
insl
jbe
or
fs
incl
sub
or
test
add
cmp
cmp
push
les
cmp
pop
lock
js
or
rol
test
cmp
mov
clc
xchg
mov
cld
xchg
mov
in
std
push
scas
out
inc
and
or
js
xchg
fistpl
lds
add
cmpsl
mov
lea
jl
push
adc
push
cmpsb
stos
mov
dec
jl
pop
imul
out
daa
mov
mov
cmc
testb
mov
pop
ljmp
lods
push
inc
push
mov
dec
push
cwtl
adc
nop
sub
out
inc
push
imul
pop
push
mov
push
addr16
popa
push
xlat
xor
fcmovnu
xor
js
loop
pusha
jo
ror
cli
in
out
into
jmp
fists
packuswb
outsb
orl
pop
test
out
or
daa
loopne
ret
bound
in
mov
arpl
filds
scas
push
push
enter
outsl
std
roll
xchg
imul
sbb
xor
ljmp
pop
cli
lea
mov
or
clc
mov
mov
mov
dec
cwtl
popf
pusha
aad
or
lret
adc
sahf
int
fsts
in
pop
jo
push
or
dec
mov
outsl
call
fmull
sub
and
xor
test
push
add
call
adc
in
mov
les
sbb
mov
and
xorl
jne
pusha
push
stos
push
add
icebp
addb
incl
jg
adc
nop
int3
movb
das
in
sub
icebp
cmpsb
or
mov
sbb
push
aaa
jg
pop
sub
das
add
lret
cmp
pop
in
sub
mov
test
addr16
dec
dec
inc
pop
js
cmp
jl
sub
pop
es
shrl
add
jle
and
cmpsl
mov
dec
in
sbb
cs
pop
or
int3
movsl
inc
jp
mov
dec
jp
or
testb
les
lcall
inc
ds
sub
aas
or
call
dec
add
cmc
xchg
mov
adc
add
jns
push
dec
mov
sbb
jge
insl
dec
adc
adc
pop
mov
xchg
or
mov
aaa
fstpt
ret
or
insl
mov
gs
or
sbb
inc
push
or
xchg
shll
jmp
out
push
or
dec
pop
jl
pushf
pusha
jmp
and
les
or
jge
ret
inc
mov
cmp
adc
mov
dec
cmp
repnz
cmp
cmp
mov
xor
fwait
and
sub
pop
scas
sub
js
jg
or
sub
rcll
adc
and
pop
clc
fwait
addr16
cmpsb
xchg
jecxz
xchg
inc
mov
pop
push
fldl
inc
adc
enter
aaa
mov
addb
adc
shlb
sbbl
jl
mov
mov
lock
rcrb
adc
icebp
aaa
jmp
aam
xchg
or
add
push
xchg
pop
cli
push
pop
mov
mov
add
adcb
inc
stc
ret
shll
sbbl
mov
push
xor
adc
jbe
lcall
push
mov
gs
lahf
sub
jecxz
pop
jp
push
nop/reserved
jle
and
fiaddl
ja
pop
aad
rclb
loope
shlb
out
dec
inc
mov
aas
aaa
stos
rorl
xchg
add
enter
addr16
add
add
jbe
mov
test
int3
xor
jns
jl
cs
jne
jle
jne
adcb
aam
jg
scas
push
add
push
add
jno
jecxz
mov
mov
jl
popa
fstpt
aam
std
in
stos
and
add
inc
add
or
inc
gs
dec
mov
mov
cmp
or
or
out
mov
sub
mov
sbb
pop
sbb
push
xor
ret
adc
lret
or
in
dec
cmc
enter
icebp
adc
sbb
mov
ja
dec
subb
inc
xchg
xchg
cli
in
cs
outsb
jecxz
sub
xor
cmp
fisubl
mov
dec
pop
add
iret
ljmp
ss
push
adc
jmp
cmp
jns
push
pop
mov
xchg
dec
jmp
fisubs
jmp
data16
and
les
lock
dec
aaa
mov
fnstsw
add
mov
nop
test
outsb
xchg
sar
dec
xor
adc
mov
inc
cwtl
jb
xor
aaa
mov
movsb
jns
insl
js
jno
add
in
mov
data16
test
inc
pop
mov
imul
cli
pop
nop
leave
inc
int
imul
lods
mov
jne
mov
push
inc
mov
fwait
xchg
outsl
jl
dec
and
lods
aad
movsb
mov
sbb
mov
cmp
jbe
fiaddl
arpl
mov
pop
xchg
add
push
mov
dec
loop
lock
in
fisubl
add
jmp
in
xchg
rcr
and
sarl
lods
pop
mov
xor
inc
pop
adc
jge
stos
push
dec
pop
or
daa
pop
shr
in
or
push
pop
mov
lcall
lahf
repz
pop
daa
les
mov
sub
mov
rcll
mov
push
mov
addr16
fcmovnbe
and
and
mov
and
mov
loop
bound
fcomps
mov
lret
fcmovnu
xorl
scas
out
pushf
pop
inc
std
push
jge
inc
mov
jbe
aad
loop
js
lret
mov
inc
mov
cmp
adc
cmpsl
mov
sbb
cmpsb
fldln2
lcall
add
lods
xchg
repz
add
mov
loopne
mov
lahf
lret
in
and
mov
arpl
decl
test
test
sbb
std
outsl
lock
ficoml
fs
add
jne
and
adc
mov
mov
jge
mov
xor
mov
es
jne
pop
insb
mov
bound
and
push
jmp
push
mov
jnp
inc
mov
add
enter
fucomi
ljmp
test
movsb
ror
xchg
das
cld
fildll
xor
mov
test
arpl
sbb
mov
or
cmp
call
cltd
xor
insl
out
fcmovbe
sbbb
int3
jae
addb
xchg
insb
mov
jno
lahf
mov
lods
fwait
and
imul
bound
mov
into
dec
popf
push
ljmp
adc
jno
xchg
mov
clc
pop
js
lcall
aaa
jle
jb
dec
popa
in
icebp
mov
add
nop
or
add
scas
into
or
adc
push
mov
iret
push
mov
js
or
sub
fsubs
ss
mov
in
mov
xor
lahf
loop
movl
xchg
fidivrs
les
mov
jmp
or
cmp
adc
in
das
adc
mov
sub
fistl
cmpsl
sbb
sbb
cmp
cmp
jecxz
inc
cld
pop
clc
xor
fldcw
sbb
stc
jnp
jge
test
jecxz
inc
ret
push
add
pop
and
loope
lret
lock
mov
push
jg
xchg
add
add
jg
stos
cld
pop
pushf
jns
push
add
mov
daa
or
add
insb
mov
mov
cwtl
aam
fnsave
mov
mov
rcll
add
xchg
pop
sub
fnsave
fstpl
push
mov
ret
pop
in
pop
sbbb
add
or
stc
push
data16
inc
outsb
cmp
jp
push
out
sbb
aam
mov
cmp
rcrb
push
push
cmp
push
fcomp
arpl
outsb
outsl
inc
mov
xor
jns
mov
mov
lds
mov
and
imulb
inc
cmp
pop
cli
pop
in
sub
mov
inc
movsl
add
xchg
fnstsw
mov
bswap
pop
hlt
in
push
jle
jno
push
test
jne
shll
ficomps
cwtl
push
jp
xchg
out
into
push
dec
addr16
movsb
lret
push
lds
mov
mov
mov
adc
push
cmp
sahf
rolb
sahf
add
pop
push
mov
inc
sbb
test
inc
cmpsb
mov
imul
push
fildll
sarl
rorl
das
cmpsb
jnp
test
adc
cld
shlb
mov
aam
push
inc
aad
or
or
push
arpl
call
pop
inc
call
aas
ds
clc
das
fdivl
imul
adc
imul
mov
out
outsl
outsl
cmc
xchg
mov
imul
cld
mov
or
mov
stos
ficoms
in
cmc
xor
add
pop
hlt
adc
mov
jecxz
cmpb
out
cmp
push
sarl
lock
xor
adc
mov
hlt
ss
adc
das
mov
loopne
mov
lods
and
jp,pt
test
push
mov
xor
mov
push
sti
sub
or
insb
jg
sbb
pop
sti
lret
push
sysenter
js
in
fiadds
jns
hlt
sub
lods
xorb
das
and
adc
jg
nop
and
adc
stos
out
outsl
mov
outsl
sub
sub
pop
fidivrs
ljmp
mov
insb
fs
aad
mov
pushf
fwait
stc
lcall
mov
lret
in
xor
and
lret
cmp
sarb
sbb
in
or
nop
cmp
subb
jg
xchg
add
int
outsb
hlt
inc
shll
sbb
or
add
adc
and
ljmp
and
mov
icebp
pop
sahf
or
cmpsb
cmp
fildll
sbb
inc
jno
cmc
cmp
outsl
pop
ljmp
sbb
faddl
stos
imul
push
fwait
jns
leave
sbb
lea
dec
flds
ds
add
imul
inc
sbb
and
add
pop
test
inc
mov
jo
incl
ss
cmpsb
or
or
pop
inc
fwait
push
mov
sub
lock
xchg
push
mov
cmp
mov
testl
add
xor
dec
les
std
jp
or
hlt
sbb
adc
sub
jne
cli
mov
popa
sbb
test
outsb
mov
sub
add
sub
repz
adc
sbb
push
xor
mov
sub
cmp
das
std
addr16
in
and
mov
std
mov
mov
or
mov
dec
lret
test
mov
roll
lods
dec
sarb
sti
ja
nop
scas
cmc
pop
iret
xchg
mov
call
hlt
mov
pop
ror
shlb
xlat
or
xorb
mov
aaa
jp
mov
outsb
jle
xchg
and
cmp
dec
sbb
sub
and
loop
cld
ja
mov
jbe
rcr
dec
scas
daa
or
jp
fistl
jmp
dec
mov
ljmp
bound
push
arpl
mov
imul
cmp
shr
test
lods
and
xchg
lahf
je
inc
in
dec
dec
xchg
in
mull
ret
push
mov
in
xchg
and
cmpsb
lahf
icebp
lock
cmp
xchg
mov
add
test
loope
mov
pop
inc
movsb
imul
push
jno
and
fmulp
cmp
jg
movsb
and
sbb
daa
popl
inc
xor
dec
mov
sub
cmp
cmpb
ret
lods
cmp
in
xchg
call
out
cmp
fistpll
or
pop
mov
outsl
xchg
sub
das
rorb
jp
test
rclb
add
sbb
ds
adc
test
ficomps
xchg
clc
mov
mov
cmc
stc
roll
dec
cwtl
jmp
xchg
arpl
sub
push
jp
inc
nop
shll
shlb
pop
mov
gs
imul
xor
lea
mov
lods
data16
lds
loop
test
and
dec
pop
push
adc
imulb
and
mov
clc
cmpsl
xor
dec
pop
push
adc
xor
shlb
adc
movsl
loope
adc
mov
or
dec
adcb
js
test
xlat
pop
sbb
popw
dec
movsl
fsub
dec
loopne
pop
mov
gs
inc
lods
add
adc
mov
cld
fidivs
je
testl
add
aam
das
mov
rcrl
sbbb
or
in
aaa
addl
rorl
push
push
sti
and
mov
pusha
cld
inc
das
or
test
movsl
jg
add
icebp
test
call
mov
mov
and
jl
sbb
sbb
scas
jl
in
gs
out
xchg
lea
sbb
mov
pop
jnp
scas
push
loop
les
stos
push
cmc
call
les
stc
cli
pop
daa
jmp
lds
or
out
out
fistps
stos
shl
push
mov
xor
iret
pop
aam
movsl
incl
lea
pusha
frstor
inc
sub
daa
cmp
dec
and
add
ljmp
mov
push
inc
lret
daa
or
loopne
add
fdivrp
lock
inc
notl
xchg
orb
push
adc
add
in
and
subl
push
mov
into
and
jp
scas
mov
insl
mov
pop
push
xchg
add
dec
mov
flds
push
xchg
mov
out
mov
inc
das
fstp
loopne
jecxz
pop
mov
cmpsb
lahf
add
fidivrl
cli
je
ja
in
or
mov
pushf
dec
mov
testb
pop
jl
push
add
or
loopne
incl
jnp
cmp
sbbl
ja
or
mov
gs
dec
lcall
std
out
pop
and
sbb
and
bound
fwait
pop
dec
push
enter
fwait
xchg
ljmp
int3
jae
mov
lock
pushf
add
push
xchg
xchg
cmpb
roll
mov
adc
jp
shlb
jno
and
out
adc
int3
xchg
lcall
or
loop
mov
pop
subb
lahf
pop
flds
stos
push
inc
cmp
or
nop
jnp
push
pop
or
cwtl
test
xchg
cli
mov
mov
movsl
sbb
ret
repnz
adc
sbb
mov
imul
dec
dec
cltd
pop
jg
sub
pop
in
rcrl
jo
or
shlb
fidivrl
pop
add
inc
xchg
mov
adc
call
les
test
adc
add
incb
arpl
hlt
cli
or
pop
add
mov
or
sbb
filds
or
mov
icebp
imul
js
adc
inc
inc
or
inc
fs
push
fdivl
jl
push
jle
xchg
in
mov
in
and
loop
jmp
mov
jmp
jge
pushf
sbb
push
call
outsl
dec
repz
popf
bound
movsl
adcb
shrl
dec
shl
mov
das
sbb
data16
mov
test
in
mov
rcrl
mov
ret
pop
fldl
daa
and
shlb
xor
out
nop
sahf
sti
jp
jo
int3
xor
pop
sbb
test
xor
jb
movsl
mov
test
std
int
sub
test
loopne
push
mov
add
fcmovb
pop
pop
push
fisubs
mov
fs
out
cs
xorb
ret
push
sub
ja
jae
arpl
outsb
add
mov
dec
cmp
sti
cli
sbb
mov
or
es
in
xor
mov
mov
lcall
or
stc
mov
mov
test
in
cmc
and
outsb
movsb
fdivl
lds
lds
std
repz
imul
pop
movsb
add
out
and
idivb
fs
inc
fdiv
aam
xor
or
mov
dec
int
inc
test
aas
pop
or
sbb
daa
fiaddl
fdivrs
std
lock
mov
mov
movsb
cli
clc
cmpsb
pop
cmc
outsl
bound
jle
mov
mov
movsl
push
pop
inc
and
add
pop
xor
xchg
sti
test
xor
jbe
cmp
cwtl
cmpsl
mov
add
outsb
ja
enter
xor
bound
stos
jle
cwtl
aad
mov
mov
dec
les
call
push
jmp
sub
inc
push
movsb
mov
sub
add
mov
and
jbe
daa
mov
adcb
inc
sub
push
inc
push
shll
shrl
and
mov
cmp
dec
fcomps
decb
or
jne
in
jge
adc
shlb
xor
out
inc
std
outsl
imul
int3
jge
leave
cli
sbb
les
rolb
in
divb
dec
and
xchg
loop
pop
fwait
movsl
sbb
xchg
cmp
clc
or
lods
push
jb
mov
push
sbb
push
jne
cmpl
ss
mov
loop
out
pop
jbe
jne
cmc
push
push
or
add
jge
lea
call
pop
stos
inc
test
inc
sbb
push
pushf
into
shl
cli
loop
test
xlat
enter
jl
addb
imul
add
cmp
movsl
jp
dec
das
dec
fistpll
pop
sar
out
ret
sti
aad
mov
rorb
inc
inc
sbb
test
sbb
mov
in
mov
test
in
call
and
cld
mov
sti
rcl
call
movsl
jae,pn
jnp
add
mov
jle
xor
dec
mov
cwtl
movsb
cmp
add
ss
jp
btrl
jl
test
inc
add
clc
cmpsl
mov
and
sub
enter
mov
ss
jmp
adc
push
sub
sahf
add
cmp
xchg
inc
mov
push
rorl
fidivl
test
out
movl
loop
pop
push
xor
sbb
push
fst
leave
cwtl
out
cmp
add
scas
in
pop
pusha
insb
mov
lock
pop
or
inc
jmp
lcall
push
movl
outsb
jg
add
mov
cmp
push
pusha
or
fadd
repz
adc
mov
mov
jbe
pop
pop
in
test
test
dec
jge
xchg
xor
mov
mov
mov
into
cltd
popa
or
or
cs
xor
pusha
push
mov
sub
jg
mov
dec
iret
mov
ljmp
xchg
aad
sub
hlt
cmp
mov
push
add
xchg
jp
insb
dec
mov
sbb
std
cmp
aad
stc
mov
jbe
xchg
mov
fsubrs
in
lea
mov
mov
pop
pushf
std
add
add
das
cmc
push
adc
dec
push
pusha
dec
jno
cmp
incb
sub
adc
rcl
test
or
loopne
ja
mov
ljmp
test
jb
loopne
pop
cli
insl
xor
cmc
push
add
pop
dec
xchg
jns
jp
jg
sub
call
arpl
adc
cmp
pushf
daa
repz
xchg
xchg
push
lock
add
rolb
sbb
push
pusha
fistl
mov
aaa
cld
loopne
push
inc
add
xlat
or
xchg
out
mov
cmp
aaa
lahf
sbb
pop
sub
adc
stos
pop
and
mov
xchg
lcall
daa
inc
mov
loopne
cmc
cmp
das
faddl
in
jno
fs
push
pushf
dec
js
adc
or
dec
fwait
daa
outsb
dec
in
nop
and
xchg
stos
aaa
out
ljmp
sbbb
imul
push
sbb
add
adc
je
insl
cs
mov
push
or
ss
dec
xor
mov
popf
cmpsb
adc
cmp
call
cmp
push
or
dec
cmpsl
sub
jne
add
call
push
mov
sub
mov
xorb
sbb
js
sbb
je
push
aas
roll
jge
pop
popa
rclb
jb
jg
roll
scas
clc
inc
bound
xor
pmuludq
mov
or
xlat
jg
movsl
popf
sub
push
sbb
stos
xchg
xlat
pop
outsl
jl
and
les
ficoml
mov
scas
add
shlb
mov
and
add
pop
insl
cmpsb
inc
mov
and
in
loope
mov
aam
mov
out
aas
push
push
jg
cmp
lcall
inc
inc
dec
popa
mov
add
mov
pop
jo
and
lds
jp
std
mov
je
add
push
arpl
and
inc
out
mov
andb
add
xlat
cmp
loope
dec
nop
and
pop
add
movsl
aas
sub
cli
orb
test
mov
cmp
cmp
test
scas
cwtl
xor
scas
pop
adcb
fldenv
ljmp
sbb
cltd
ss
jo
mov
adc
push
adc
adc
jp
lea
cld
adc
inc
xor
aas
fdivrs
pop
add
pop
cs
outsl
xchg
pusha
sbb
test
add
lods
mov
hlt
jecxz
fstl
mov
fdivl
mov
adc
ret
addr16
pop
testl
jns
sub
inc
test
je
testl
mov
arpl
xchg
mov
dec
mov
scas
mov
jnp
inc
cmp
clc
push
and
decl
test
sahf
mov
jnp
lock
cmp
xchg
cmpsl
add
xchg
jbe
in
add
mov
xor
std
orl
jg
cmp
arpl
push
sbb
aaa
sbb
pop
leave
insb
add
jbe
xlat
dec
leave
ds
pop
mov
rorb
fcompl
pop
jmp
mov
ss
insb
js
ljmp
pushf
inc
cmp
adc
inc
les
gs
lea
push
xchg
fdivrp
sbb
jle
mov
rorl
mov
or
jno
lods
and
scas
mov
je
adc
pop
mov
mov
dec
jns
inc
and
sbb
rcll
dec
stos
cltd
xor
push
push
mov
add
fcoms
mov
push
adc
ljmp
xchg
push
xor
and
jne
in
or
lret
or
decb
pop
fnstcw
dec
inc
jno
or
inc
push
pop
jge
jecxz
dec
cs
lods
int
repz
sbb
pop
add
loopne
pop
mov
lcall
adc
pop
lds
sbb
outsb
jge
adc
pop
call
jp
fistpl
ds
sbb
mov
out
push
inc
fstp
mov
pop
xrelease
mov
fwait
inc
out
inc
pop
cld
cmpsl
es
outsb
aam
fildl
jmp
lret
xchg
mov
add
or
sbb
mov
mov
enter
dec
ljmp
xchg
sub
mov
mov
pop
jle
mov
out
xor
outsl
xchg
sub
es
or
cmp
ja
add
jge
pop
pusha
test
sbb
mov
push
cmp
test
lahf
push
outsl
sarb
cmp
dec
add
rcrl
mov
ljmp
mov
dec
xor
cmp
add
in
flds
pop
movsl
mov
repz
movsb
jne
dec
inc
dec
xchg
rclb
push
or
push
pop
and
or
and
movsl
mov
dec
outsl
sbb
push
test
push
test
mov
sarb
dec
jae
insl
adc
add
inc
jnp
hlt
cmp
mov
addb
lock
outsl
dec
mov
push
sbb
shrb
ret
xor
mov
mov
pop
shrl
lcall
add
xchg
cmpsl
pop
mov
inc
sub
int3
mov
sar
push
adc
movsl
jp
mov
xchg
and
mov
iret
mov
mov
ja
jecxz
mov
aad
mov
push
mov
dec
xchg
adc
sub
xchg
jbe
pop
leave
dec
in
call
shrb
insb
sub
test
cmc
and
push
dec
xchg
in
and
push
add
fnsave
call
or
les
mov
sub
stc
lret
dec
enter
insl
mov
test
andb
sbb
add
pop
pminsw
push
or
je
xor
addr16
jb
push
je
pop
adcb
xchg
bound
mov
pusha
inc
addr16
dec
push
cs
stos
popf
add
test
sbb
cs
insl
mov
push
pop
push
xor
or
ret
inc
mov
movsl
call
test
orb
fdivrl
pop
stos
mov
xchg
sahf
inc
xchg
and
ljmp
repnz
je
adc
xor
jecxz
jl
and
adc
cmpsl
jns
pop
adc
call
incl
loopne
test
in
outsl
fistl
out
leave
sti
mov
fs
mov
shrb
jge
das
add
roll
push
sbb
movsb
ficompl
pop
ljmp
cld
cmpsb
mov
sub
pop
idivb
mov
xor
call
or
call
sbb
scas
subl
lods
inc
mov
xlat
sarl
pop
imul
pop
testb
in
out
push
push
xchg
outsl
popf
dec
popf
es
or
push
pop
push
fistpll
mov
mov
ja
xchg
loope
aaa
add
add
sub
push
mov
push
jns
loopne
or
jae
mov
jl
sub
test
adc
iret
sub
jnp
jl
orb
cs
jg
jo
cmp
cmp
xchg
jg
cmp
int
add
adcb
mov
jle,pn
jle
mov
xor
notl
insb
sub
ret
mov
rcrb
loopne
and
and
inc
sbb
mov
iret
nop
test
les
ds
das
inc
inc
test
mov
or
mov
fmuls
adc
jb
adc
test
mov
rol
sar
mov
sbb
lcall
daa
addl
mov
inc
xchg
mov
jo
or
jmp
inc
je
pusha
shll
iret
jmp
jecxz
add
sbb
faddp
rclb
sub
sbb
add
fisttps
adc
test
mov
sti
pop
sbbl
out
jmp
mov
jo
loopne
mov
mov
rorl
mov
into
mov
test
hlt
in
hlt
insl
je
sbb
jne
lods
add
dec
inc
inc
sti
mov
xor
orl
je
out
pop
dec
icebp
rclb
xor
add
mov
fistpl
arpl
pop
cmp
test
mov
fistl
inc
add
dec
loopne
fnstsw
es
xchg
or
dec
push
icebp
rcrb
in
out
cmp
aas
fistpl
mov
dec
xchg
push
xchg
or
push
aad
pop
mov
dec
pushf
push
mov
repnz
sarl
xchg
popa
mov
stos
pop
imul
test
cmp
and
mov
ljmp
shlb
pop
xchg
adc
fdivl
pop
pop
dec
inc
xor
mov
movsl
dec
add
sub
mov
cmc
mov
popf
jo,pt
mov
mov
lods
inc
rcl
out
incl
ret
mov
stc
sbb
fistps
cmp
add
push
push
cwtl
push
stc
pop
sbbb
ret
hlt
jo
lea
xchg
mov
outsl
mov
mov
mov
sub
mov
dec
clc
mov
dec
push
xor
cmp
stos
pop
bound
mov
jns
and
divb
outsl
sbb
inc
xlat
xchg
fbstp
add
sbb
cmp
add
mov
lret
les
sub
pop
in
mov
mov
stos
imul
jno
mov
addl
testb
js
cs
mov
xor
in
mov
in
ror
jl
cmp
mov
mov
and
push
popf
pushf
add
jno
je
sti
dec
mov
stos
mov
add
or
inc
push
pop
movlps
insl
icebp
outsl
pop
mov
jne
outsl
fwait
jmp
idiv
addr16
jo
cld
pop
or
loop
je
aaa
ds
les
js
mov
adc
push
pop
clc
dec
shll
mov
dec
in
shrl
push
jne
cwtl
inc
bnd
sbb
xchg
mov
cmc
movsb
mov
add
mov
pop
push
lods
jb
add
xor
rorl
bound
push
xchg
ss
ljmp
xor
mov
data16
out
sbb
rclb
in
es
lods
sub
pop
sub
cld
lea
inc
cmp
lock
es
and
cmc
ja
pop
leave
inc
repz
int
adc
mov
fadds
hlt
inc
movsb
mov
cmp
inc
inc
cmpsb
mov
aaa
cmc
in
dec
std
cmp
stc
cmc
sub
mov
cmc
cmp
popa
out
adc
inc
pop
and
xchg
movd
xchg
outsb
popf
pop
sbb
in
movsl
pop
xlat
or
jl
cmp
outsb
xchg
out
sub
pop
jg
repnz
pop
cmp
scas
lret
std
je
sub
push
ret
or
cmp
jl
rep
in
clc
adc
ret
dec
cmp
and
jnp
dec
xchg
decl
push
cmp
jl
add
pop
dec
pop
cmp
outsb
inc
and
mov
outsl
je
dec
addr16
jg
cmpsl
ret
xor
lods
js
lods
cltd
pusha
popf
iret
xchg
pushf
jge
push
adc
add
addr16
or
or
adc
data16
mov
fwait
les
inc
adc
jno
loop
xor
out
or
sbb
clc
cmp
dec
mov
inc
lods
or
dec
adc
ret
dec
fstpt
sbb
mov
cld
cmpsb
movl
cs
lods
pop
pop
cmp
or
sarl
mov
inc
sub
jo
xchg
fcmovne
stos
loop
xchg
and
ret
sub
fnstsw
scas
out
js
jg
add
sub
or
movsb
add
adc
out
mov
mulb
add
xor
sub
jbe
stos
inc
xor
xor
aam
mov
dec
xor
sbb
aaa
int3
jno
into
scas
mov
aas
fistpl
or
jns
sub
or
jns
cwtl
mov
xchg
in
cmp
pop
cltd
adc
and
jg
out
std
rolb
repnz
dec
dec
out
dec
mov
test
movb
in
scas
lds
mov
pop
xchg
cs
mov
dec
dec
inc
repnz
cwtl
inc
cld
add
lock
test
outsb
push
pop
dec
mov
mov
lods
dec
ds
fbstp
rol
ret
and
cmpsl
sub
test
dec
stos
pushf
sbb
push
pop
inc
sbb
outsb
xorb
push
lret
jle
xor
das
fdivrp
push
add
mov
addr16
js
pop
ret
cmp
cld
inc
in
pop
loop
and
in
mov
adc
pop
xchg
add
inc
mov
cmpb
or
outsl
mov
pop
dec
mov
and
adc
subl
and
inc
pop
jbe
mov
push
arpl
stc
mov
mov
jb
mov
clc
adc
leave
xor
sub
mov
inc
mov
subl
cld
out
clc
add
popf
mov
mov
cltd
das
pop
cs
in
mov
je
rcl
out
jmp
int
xchg
xchg
adcb
clc
es
xlat
mov
aam
pop
pop
cli
mov
sub
mov
adc
jp
jmp
push
js
add
fildl
shrb
mov
xchg
mov
lock
repz
sbb
dec
lock
jmp
jle
data16
cmovno
jae
hlt
scas
push
in
je
mov
outsl
ja
push
loope
xor
and
adc
stos
fwait
cmp
dec
sub
cld
dec
imul
xlat
call
in
pop
fs
pop
mov
daa
js
mov
add
sub
shrl
sub
sar
shll
add
jo
subl
lea
jmp
test
dec
mov
aaa
pusha
pop
mov
daa
adc
in
cli
or
push
pop
push
rclb
ds
loopne
or
or
mov
hlt
pop
andb
mov
or
push
mov
cwtl
pop
in
or
sarl
dec
stos
mov
rorb
push
or
fiadds
pusha
dec
in
fistps
cmp
test
test
push
lock
sub
inc
xor
sbb
aad
jne
xchg
scas
sti
push
addr16
dec
jmp
fwait
xor
and
in
push
lods
sbb
mov
fs
ret
add
xchg
jmp
adc
fidivrl
insl
adcl
mov
movsl
fstl
jle
dec
inc
fsubl
or
cmp
dec
aas
push
sbb
sbb
loope
bound
xchg
cmp
adc
shll
xlat
inc
js
lds
aas
test
push
mov
adcb
mov
add
pop
test
shl
nop
jb
xor
xchg
leave
mov
sub
loop
pop
jb
add
sbb
out
dec
and
jne
aad
cmp
aam
xorl
andb
movsl
flds
cwtl
cmc
or
sub
pop
mov
mov
test
js
fcmove
cli
aam
aas
mov
and
add
in
scas
mov
in
pop
cld
mov
in
outsb
push
ret
test
test
push
xchg
shl
mov
fsubs
or
out
inc
xchg
iret
mov
cmc
or
dec
shrl
mov
lea
push
mov
jmp
push
cli
mov
test
mov
lret
sub
inc
adc
sub
into
xchg
enter
xchg
inc
ret
mov
inc
push
fcmovne
cmc
outsb
iret
mov
nop
dec
sbbb
lods
aas
adc
xchg
inc
lods
pop
inc
jl
rorl
in
lea
es
pop
pop
pop
in
or
test
addl
inc
sub
movsb
stos
les
imul
hlt
mov
imul
pop
int
and
das
je
xor
mov
std
lods
adc
iret
sar
loopne
and
aas
test
cmp
decb
cmp
inc
sbbb
xor
incl
das
cli
pop
adc
test
lret
xchg
mov
sbb
add
push
dec
mov
aas
je
cltd
dec
xchg
inc
das
andb
sbb
rolw
divb
scas
shlb
rorl
fidivrs
outsb
xlat
push
jg
aas
and
icebp
mov
pop
cld
push
cmc
xchg
or
cmp
sbb
mov
out
sbb
jle
inc
test
xchg
das
add
add
mov
adc
jbe
mov
stos
mov
jno
sti
cmp
push
lods
movsl
mov
out
mov
xchg
ret
lods
sub
pop
fsubl
dec
std
mov
xchg
pop
or
sub
inc
in
push
loopne
movsl
int3
jecxz
jmp
cs
push
ss
ljmp
hlt
dec
mov
arpl
fnsave
mov
pop
fucom
cmp
xchg
inc
not
mov
lods
mov
xchg
fldt
pop
movsb
or
pop
inc
bound
out
outsb
decl
xchg
xor
sub
call
sar
mov
jmp
add
and
aas
loop
das
xchg
scas
and
adc
imul
xchg
sti
pusha
dec
inc
mov
loop
jl
pop
mov
mov
adc
push
loope
jg
pop
cltd
adcl
in
jb
mov
xchg
push
xor
jo
mov
insl
jecxz
xor
or
adc
popa
sbb
and
test
sub
push
push
outsb
gs
cmpsb
aaa
and
pop
mov
lcall
xchg
out
add
das
loope
push
sub
push
ds
adc
inc
pop
fbld
xchg
jbe
inc
in
inc
add
push
xor
lock
mul
fs
push
imul
cmpsb
push
dec
dec
mov
sbb
outsb
mov
pop
jp
decb
mov
mov
push
test
shll
xor
sbb
push
and
inc
cld
xlat
jbe
flds
inc
mov
ficomps
push
int
mov
or
jl
fldt
jmp
movsl
fldenv
xor
adc
and
popl
notb
mov
testb
mov
dec
xlat
pop
fs
scas
or
iret
inc
mov
sub
cmp
adc
push
pusha
push
pop
jl
sub
mov
cli
push
repz
push
lea
pop
mov
push
out
pop
push
mov
adc
sbb
mov
das
enter
enter
mov
aaa
inc
mov
aad
adc
sbb
mov
inc
or
and
sub
fadds
fimuls
pop
aam
test
jae
notb
sub
rcl
sbb
iret
xor
add
pop
mov
outsl
xchg
or
mov
fistpll
mov
roll
jbe
or
ret
or
rol
mov
enter
mov
outsb
cmpsb
xchg
push
std
mov
mov
scas
mov
pushf
sub
or
insl
test
fsin
add
jbe
popf
popf
fnstsw
mov
jnp
pop
fxch
dec
pop
stc
cmp
js
pop
insl
mov
or
shr
adc
or
loopne
jp
jecxz
or
daa
aad
sahf
ret
js
push
test
out
fldcw
fidivrs
movsb
jo
shlb
mov
cmp
sub
inc
inc
fnstenv
fimull
fidivrl
dec
hlt
pop
jb
adc
sbb
push
lcall
shlb
outsb
or
fistl
cltd
or
es
lcall
faddl
scas
and
inc
inc
ljmp
dec
jmp
sub
fmul
pop
pusha
and
fistpl
push
xor
and
xchg
push
ret
rcrl
sub
arpl
outsl
lcall
mov
aam
ljmp
ficomps
je
out
xor
sti
or
cmp
or
add
es
xchg
and
js
ljmp
inc
pushf
js
adc
aad
lods
or
jg
and
sti
fists
popf
scas
sbb
lods
mov
out
aaa
sub
add
es
pop
xor
stos
filds
movb
pop
daa
cmp
xchg
into
sub
test
lahf
adc
dec
loopne
int
call
out
int3
dec
mov
sub
push
inc
add
test
mov
add
push
ds
cltd
fldl
js
and
js
imul
adc
jne
jno
movl
mov
pop
xor
mov
push
decb
cmp
push
repnz
out
push
mov
pop
pop
push
dec
bound
xor
or
pusha
jecxz
ffree
push
out
push
mov
sahf
inc
jno
js
xor
add
pop
mov
push
insl
push
leave
mov
sub
negl
mov
lahf
iret
xchg
push
sarl
mov
adc
mov
adc
mov
dec
or
xchg
or
lock
inc
and
cli
inc
and
hlt
or
loope
pop
add
jmp
mov
push
std
cmpsl
dec
inc
mov
mov
shrl
in
xor
ss
out
jmp
pop
xchg
and
test
movsb
test
inc
mov
mov
xchg
xchg
push
mov
push
fdiv
mov
ljmp
data16
ljmp
sbb
cli
add
fmull
loop,pn
dec
jg
and
or
xchg
xor
stos
or
test
std
cmp
int3
xor
jo
mov
push
xchg
xor
in
aad
mov
add
push
jmp
popa
sahf
idivb
notl
jo
adc
loopne
push
adc
lock
pop
jnp
dec
adc
mov
and
mov
jnp
shll
push
push
and
daa
mov
add
pop
push
cli
xor
cmp
sti
addl
outsl
mov
lret
int
inc
fs
test
test
pop
movsb
arpl
jmp
shrl
sbb
sub
push
push
movsl
cwtl
mov
aad
bound
and
mov
jmp
jmp
inc
sahf
or
jl
lret
mov
ja
mov
pop
adc
popa
mov
mov
movsl
sbb
ss
mov
mov
pop
mov
sub
into
pop
repnz
pop
xor
add
adc
inc
push
inc
sahf
add
dec
inc
data16
adc
fcomp
mov
shll
imul
cld
stos
mov
in
dec
adc
sub
jmp
sub
insl
pop
jmp
adc
jecxz
lds
or
jo
cltd
test
aas
stos
sub
xorb
jle
sub
fdivr
add
lock
stos
xor
cld
je
aaa
adc
loopne
adc
pushw
jb
mov
fcomi
xor
hlt
loopne
jge
mov
push
outsl
add
add
std
sbb
fwait
mov
and
mov
test
arpl
xor
jnp
jle
xchg
push
push
sbb
sbb
cmp
xor
les
and
je
and
push
test
or
add
std
xchg
xor
das
mov
xchg
daa
ret
loopne
pushf
cmp
dec
adc
xchg
adc
std
xor
pop
out
sub
fiadds
or
sbb
dec
out
clc
inc
sbb
xchg
mov
sbbl
add
cmpsb
outsl
iret
adc
dec
or
mov
pushl
outsl
negb
call
push
fsubr
popa
cmp
clc
iret
and
pop
ljmp
jbe
mov
lret
jle
notl
add
cwtl
dec
mov
sbb
sbb
or
push
test
lea
mov
orl
out
mov
sub
and
mov
lcall
cltd
add
add
dec
mov
pop
add
or
pusha
ljmp
enter
shrl
mov
ja
mov
add
and
cwtl
sub
dec
pop
pop
fcomps
xor
pop
xlat
sub
add
add
inc
pop
jbe
or
mov
xchg
push
xchg
mov
icebp
push
mov
jnp
sbb
in
add
popf
add
add
and
mov
push
inc
inc
cmpsl
cli
mov
push
cmp
aad
inc
cmc
lods
add
jns
mov
dec
and
fwait
ljmp
stc
and
ds
inc
sub
push
test
popl
data16
shlb
aad
xor
ja
outsb
int3
lea
stos
aas
dec
add
cmpsl
lcall
cli
sub
sti
daa
inc
mov
pop
inc
in
orl
pop
inc
dec
jns
data16
push
jae
pop
jne
cmp
sbb
movsl
sbb
adc
loope
stos
call
insl
pop
call
push
xchg
imul
push
sub
xor
dec
xchg
and
inc
inc
test
add
jl
leave
inc
daa
sbb
cmp
sub
outsb
fimull
and
cmp
movsb
insb
inc
stos
popl
pop
inc
push
adcb
or
cmpsb
sub
push
mov
call
inc
lds
les
sub
jp
cwtl
add
shrl
cmc
loope
pop
xlat
pop
mov
or
out
sbb
shrl
cld
add
mov
mov
sbb
loope
dec
lea
inc
hlt
ret
daa
arpl
shlb
insb
and
loop
xor
mov
add
jg
jo
mov
lret
jno
mov
inc
mov
gs
call
push
push
clc
hlt
rorl
and
mov
mov
shll
xchg
cmpl
dec
pop
ffreep
adc
rol
out
and
inc
pop
stos
sahf
test
and
inc
jo
outsl
sub
pop
decl
inc
and
stc
push
pop
outsl
ljmp
sbb
push
mov
jle
jns
jbe
int
lret
pop
std
pop
adc
cmp
test
out
jp
mov
dec
out
mov
mov
icebp
rcll
mov
movnti
outsb
or
or
repnz
dec
or
push
jecxz
dec
adc
or
mov
sti
mov
cld
testb
ret
inc
out
inc
js
sub
ret
sub
xlat
xchg
add
movsl
sbbb
mov
call
jo
jbe
inc
outsb
mov
int
sub
shl
cltd
dec
cld
lock
xchg
rcll
pop
fdivr
mov
and
out
test
fbld
incl
mov
jg
mov
xchg
sbb
jbe
loop
fwait
pop
in
loopne
sub
fiadds
pushf
incl
mul
add
in
add
and
mov
cltd
outsl
inc
hlt
imulb
dec
inc
mov
xor
push
outsb
jmp
sbb
sarb
dec
xchg
adc
push
decb
shrb
jmp
inc
inc
loope
and
lea
movsl
sub
imul
push
mov
adc
add
sub
dec
pop
xchg
add
push
xchg
inc
icebp
sahf
fdivl
ret
aam
sarb
fsubrs
or
add
cmp
subl
jmp
scas
cwtl
push
pop
arpl
call
in
add
pop
aas
dec
rcl
lcall
in
daa
lock
mov
loope
or
test
xor
pop
int
and
jg
mov
mov
xchg
add
sbb
bound
mov
mov
lahf
mov
ret
pop
sub
mov
adc
dec
or
push
adc
and
jne
mov
adc
fisttpl
jns
pop
loope
ror
rep
lcall
mov
outsl
in
push
cmp
sarb
mov
aad
shll
sub
jecxz
insl
xor
and
sbb
repz
xor
nop
lret
dec
add
fdivl
sbb
adc
mov
adc
mov
outsl
sbb
pop
lods
mov
and
fisubs
idivl
push
es
scas
sub
xor
pop
pop
add
jb
push
clc
outsl
and
insb
stc
jge
fldenv
xchg
aam
ret
and
pop
popf
loope
mov
stc
cmp
jae
jmp
divb
push
jp
dec
push
rcrb
enter
sub
popa
pop
adc
sub
mov
jb
mov
mov
aaa
dec
inc
lock
jmp
mov
xor
popa
xor
xchg
inc
add
in
loope
jne
inc
lcall
ret
push
xchg
cwtl
mov
xchg
shlb
xchg
mov
xchg
xchg
jbe
inc
dec
mov
pop
das
cmpsl
rolb
mov
adc
jo
sub
and
mov
outsb
fiaddl
mov
lea
xlat
sti
cmp
mov
inc
jge
outsl
inc
test
ret
imull
and
test
jge
jp
jnp
sub
test
iret
jns
inc
imull
iret
movsb
add
cmpsb
call
cmp
scas
int
push
dec
daa
and
or
and
cmp
xor
cmpsl
into
pop
scas
and
adc
lods
fists
cli
push
imul
push
xchg
mov
fidivl
out
fisubs
iret
int3
bound
sub
cwtl
push
pop
test
mov
in
cmp
jno
lret
cmp
jle
add
add
sbb
adc
data16
mov
orb
mov
scas
loopne
sub
inc
jne
cld
sbb
push
inc
xor
sbb
fs
ret
loope
mov
test
jmp
dec
outsb
pop
in
xchg
fsubrl
cld
mov
pop
ds
add
andl
jne
mov
scas
sarb
rorl
ss
and
push
push
cld
rcll
pop
sbb
push
incb
fildll
std
mov
jl
sub
dec
outsb
subl
sbb
mov
mov
sahf
dec
push
out
insb
mov
pop
fiadds
add
pop
push
cld
clc
sub
scas
pop
int3
subb
add
ja
sti
xor
mov
dec
ss
into
in
arpl
cmp
jge
sti
jbe
fistpll
cmp
xchg
cmp
test
xor
xchg
fistps
adc
call
or
rclb
in
xor
ljmp
push
inc
mov
push
aas
movsb
add
or
inc
cmp
fildll
ret
mov
mov
dec
xor
sbb
or
ficoml
ljmp
sbbb
mov
shrl
adc
mov
sub
stos
fisttpl
dec
and
push
mov
fbstp
or
ror
add
scas
sub
js
movsb
pop
cmp
mov
adcb
dec
inc
hlt
cmpsl
mov
lret
and
dec
mov
push
cmp
rcrl
and
lahf
in
pop
or
andb
and
pop
pop
adc
lods
clc
pop
std
in
out
rcll
mov
pop
gs
push
mov
xlat
jecxz
mov
dec
sbb
cwtl
cld
test
dec
and
test
xor
jnp
hlt
fcmovnbe
mov
mov
pop
das
std
cmp
dec
cli
push
fcomip
mov
ret
and
int3
sti
andb
loopne
mov
out
test
test
fcmovbe
loopnew
or
out
fiaddl
popf
das
scas
icebp
adc
sarb
sbbb
mov
cli
and
push
stos
mov
rcl
inc
loope
sub
sub
mov
int3
inc
sub
js
push
stc
lea
sbb
dec
sbb
popa
pop
arpl
rol
jae
shll
insl
pushf
or
jl,pn
lock
testb
clc
pusha
jnp
fists
sahf
add
jnp
adc
ja
push
add
gs
pop
rcr
js
shll
ja
sub
pop
jmp
jge
mov
cli
aaa
insb
subb
out
xchg
dec
daa
or
jmp
scas
sti
hlt
stos
xchg
pop
js
shrl
repz
sub
and
pop
adc
sahf
into
ja
mov
in
pop
int
mov
cld
jae
jecxz
lcall
jmp
stos
in
lcall
and
mov
lea
or
sbb
push
pop
incb
div
mov
iret
pop
repz
in
stc
push
ds
mov
aas
movb
and
fisttpll
push
mov
shr
aaa
std
add
shlb
pop
es
push
mov
out
push
push
hlt
push
rol
test
pop
mov
mov
xor
cmp
bound
sbb
xorl
das
std
test
int
xchg
test
xchg
adc
test
sub
loop
pop
enter
daa
ret
pop
xchg
pusha
sti
test
inc
imul
sbb
imul
outsb
mov
fimuls
lret
push
inc
js
jge
jp
cmp
mov
je
mov
icebp
fucomip
std
icebp
xor
mov
movsl
mov
sub
inc
push
sahf
jmp
push
mov
js
jmp
ljmp
and
loope
add
inc
adc
das
mov
cld
fisubrs
push
mov
mov
inc
insb
sbb
sbb
popf
outsl
loopne
push
or
cmc
out
jns
fidivl
enter
mov
daa
out
lret
stos
pusha
push
dec
out
jp
addr16
pop
sub
cmc
xchg
xor
mov
sbb
cmc
in
ljmp
jno
xchg
ss
orl
clc
call
mov
lds
pop
aam
es
shl
stos
dec
mov
dec
push
into
test
mov
jo
pop
fwait
pop
sbb
or
xchg
and
mov
pop
fwait
das
lods
rsm
mov
rolb
cmp
and
add
outsb
andb
stos
rcrb
mov
pop
jmp
gs
call
sub
xchg
rcll
pop
bnd
incl
rcll
fstps
cwtl
scas
cmc
adc
cmp
in
fdivrl
outsl
aaa
mov
jno
leave
or
or
mov
lock
mov
cmp
mov
jnp
mov
movsb
andl
xor
sub
sbb
aaa
push
adc
xchg
jbe
dec
mov
std
scas
and
push
cmpsl
lods
hlt
iret
push
mov
cmp
mov
add
push
pop
or
inc
andl
icebp
cmpsb
mov
call
pop
xorl
mov
and
pop
mov
mov
xchg
test
out
xor
les
subl
into
add
jg
dec
inc
pop
pop
or
xor
pop
fcmovnbe
mov
sbb
push
inc
or
mov
les
data16
daa
cmp
fistpl
push
popa
and
jmp
jl
jns
repz
and
fucomp
jmp
bound
and
lds
xchg
lods
divl
cmc
cmp
ds
test
inc
repz
out
jp
push
ret
pop
cli
rcrb
mov
loope
outsb
jl
js
clc
popa
cwtl
dec
rolb
aad
int
mov
pop
fisubl
data16
xor
leave
aas
mov
pop
mov
lcall
lcall
push
hlt
mov
in
jl
cmp
je
cmc
cmpsl
adc
in
stos
xchg
xor
and
push
and
dec
fwait
xchg
std
sub
mov
out
xchg
aam
neg
fwait
and
stos
adc
push
or
cld
inc
shlb
mov
fcmovnu
and
or
mov
lods
cmp
sbb
loope
lcall
xchg
mov
lcall
loope
and
ret
out
pop
push
pop
cmp
jp
xchg
mov
dec
in
xchg
and
das
push
mov
jbe
sub
xchg
push
fnsave
add
lock
arpl
fyl2x
testb
negl
jmp
xor
in
or
mov
mov
std
jmp
dec
push
insl
adcl
dec
jl
adc
fisubs
mov
push
mov
outsl
push
fldl
fcmove
add
adc
xchg
or
xchg
xchg
movsb
mov
in
scas
push
jmp
lea
outsl
pop
js
jmp
inc
mov
bound
add
rcl
scas
ficoms
aam
lds
add
leave
or
jg
jmp
sub
scas
cld
inc
jb,pn
mov
mov
mov
mov
dec
jp
dec
outsb
push
pop
movb
sbb
testb
cmpsb
imul
pop
xor
loope
cmp
xor
push
jb
and
add
xor
xor
jns
or
js
xor
mov
fsts
addr16
pop
or
push
cmc
push
pop
inc
and
fsubl
pop
test
pop
ficoml
mov
or
or
inc
inc
jbe
jb
lods
adc
ffree
mov
call
inc
sarl
mov
icebp
inc
mov
fstpt
lea
or
outsl
mov
and
add
adc
clc
add
sub
xor
jns
lods
add
push
ds
sbb
movsb
lods
pop
sbb
mov
mov
inc
in
lods
or
or
mov
sbb
mov
imul
outsl
xchg
sbb
int
lcall
stc
xchg
cmpsb
cmpsb
fistpl
aaa
push
ljmp
mov
push
mov
cs
call
testl
std
lods
or
and
add
adc
xchg
pop
push
cmp
add
cmp
adc
inc
cmp
pusha
add
dec
jne
push
xor
loopne
les
fistpl
pop
loopne
cmp
dec
push
jg
fxch
out
je
cli
les
pop
jmp
mov
dec
push
inc
rclb
or
daa
ret
decb
pop
jg
jns
inc
and
out
xchg
jbe
or
xchg
mov
mov
inc
mov
dec
and
pop
jbe
fs
xchg
bound
es
mov
mov
mov
mov
test
in
aaa
push
push
stos
ljmp
fs
mov
adc
nop
ret
mov
mov
jae
aas
pop
in
cwtl
pop
ds
in
aas
hlt
jmp
test
pop
lret
or
fmull
dec
xchg
sti
xor
scas
shl
pop
ret
ret
rclb
adc
xchg
pop
je
imul
xchg
lock
lods
ja
and
lock
push
mov
inc
mov
push
add
outsb
jecxz
sub
cmp
lds
iretw
add
fisubs
cmp
jecxz
fstpl
pop
or
mov
pop
cli
shlb
dec
jbe
mov
and
pop
or
xorl
inc
and
adc
xchg
outsl
mov
sub
xchg
iret
shll
fstpt
cmp
or
sub
mov
and
pop
mov
jl
xor
out
loopne
lret
cmpsb
pop
and
mov
dec
inc
inc
xchg
pushf
gs
aas
shrl
cmpsb
out
sbb
mov
rcrl
jae
mov
fbstp
lods
pop
in
xchg
pop
mov
rclb
andb
decl
mov
xchg
stc
mov
jne
jle
jle
cmpsl
xor
sar
cmpsb
arpl
xchg
xchg
adc
cmpsb
cmp
mov
jbe
fistps
xchg
sbb
rorb
je
push
pop
sbb
xchg
mov
jmp
inc
jmpw
movsl
fs
ret
mov
or
inc
mov
daa
xchg
mov
loopne
in
xor
enter
sbb
aas
mov
xor
jne
xchg
ljmp
fisubs
add
les
das
lahf
in
lea
adc
mov
add
test
cmp
scas
xor
inc
cmp
mov
pop
ds
test
inc
cmp
xchg
dec
sub
fsubs
lcall
mov
xchg
mov
adc
pushl
push
seta
outsl
inc
out
arpl
push
mov
imul
aad
or
mov
mov
jo
xchg
fbld
in
popf
mov
mov
mov
xchg
addb
pusha
aad
push
fdivr
pop
cli
sbb
jge
jecxz
faddl
insb
inc
lods
sbb
iret
dec
sbb
pop
pop
jecxz
or
ljmp
js
mov
adc
mov
test
idiv
adc
cmc
add
ret
xchg
mov
mov
inc
mov
xchg
fstl
cmp
mov
fwait
push
fidivrl
insb
mov
imul
pop
test
pop
stos
iret
sti
adc
mov
push
mov
lret
das
popa
les
ret
ror
sbb
fadds
mov
fisubrs
iret
neg
adc
mov
les
jge
mov
fcmove
lea
ss
and
jno
pop
rclb
aaa
jb
out
cmp
repnz
rcr
loopne
push
sub
push
add
les
test
std
sub
das
int
inc
add
mov
cvtdq2ps
fldenv
adc
inc
inc
adc
out
fildl
lock
loope
push
dec
test
push
shll
aas
das
iret
xor
in
mov
addr16
xchg
or
push
jp
ret
testb
movsb
js
cmp
cmp
js
jo
adc
xchg
int3
data16
adc
push
in
sub
mov
outsb
js
mov
pop
imul
inc
cmp
mov
loopne
mov
pop
rcrb
xlat
adc
mov
xor
cmpsl
lret
jp
mov
mov
cmpb
sbb
sahf
sub
add
xchg
mov
mov
call
mov
jno
ret
gs
sbb
cmp
lods
jo
sub
xchg
sti
sti
xchg
mov
sub
add
or
lcall
addr16
mov
push
mov
dec
iret
inc
mov
popf
popf
push
inc
jp
fists
int3
pop
add
dec
test
or
not
jge
sub
call
inc
jae
les
xor
xlat
pop
test
mov
cmp
and
or
out
rorb
addr16
dec
or
and
push
adc
adc
push
enter
shrb
inc
mov
dec
outsl
inc
xchg
outsb
add
fadd
stos
mov
mov
cli
push
clc
aaa
xchg
fs
hlt
sub
insl
lods
fimuls
out
ret
ret
out
or
push
loop
sbb
adc
xor
pop
or
out
les
fscale
mov
cli
lea
in
jb
mov
push
aam
mov
das
sbb
shr
cmc
popa
push
or
jbe
or
ja
cmpsb
test
push
cmp
ffree
incl
dec
adc
push
mov
push
cltd
sbb
outsl
jle
inc
or
fdivl
sbbl
mull
test
xchg
fidivs
in
or
aam
aaa
add
insb
in
adc
stos
and
sub
push
hlt
jmp
rclb
cmp
mov
adc
xor
pop
imul
pop
jne
arpl
leave
mov
and
scas
movsl
mov
and
sbb
fimuls
xor
loopne
jg
pop
mov
push
pop
add
push
sub
repz
in
or
leave
mov
cs
jmp
outsl
outsb
mov
gs
pushf
xchg
js
mov
push
jp
mov
mov
or
pop
fnsave
insb
fucom
mov
jg
rcll
mov
loop
or
icebp
add
pop
das
insb
adc
pop
mov
sbbb
xor
pop
push
push
test
popf
movsb
sahf
clc
aas
movl
mov
jnp
mov
adc
mov
xchg
xchg
or
inc
cmp
ret
pop
inc
xchg
sbb
loopne
mov
fs
pop
pop
dec
call
loope
mov
popa
aad
scas
cmc
leave
out
test
add
xorl
pop
sbb
loop
clc
test
push
xchg
sub
cs
pop
push
lea
lahf
mov
ret
arpl
inc
pop
test
sbb
jmp
jmp
add
adc
push
pop
loope
mov
pusha
inc
or
pop
mov
mov
cld
inc
cmp
gs
adc
outsl
pop
dec
fs
fucomp
adc
outsl
mov
pop
clc
test
mov
mov
lds
ss
or
test
mov
mov
gs
and
mov
inc
sub
add
sub
jg
aaa
cs
mov
or
insb
loope
sbb
sti
outsl
push
push
lds
nop
mov
pop
pusha
fs
xor
push
outsl
mov
jbe
add
jp
out
sub
outsl
loop
subl
mov
rolb
inc
popl
dec
add
and
outsl
mov
dec
loope
xchg
lods
lea
dec
mov
daa
push
pop
push
sub
cmpb
and
sub
sub
mov
mov
pop
pop
pop
dec
mov
sarb
push
in
or
hlt
jbe
in
mov
aam
clc
pop
aam
xor
adc
shrb
xchg
lahf
jno
adcb
xchg
pop
inc
xchg
aas
test
or
or
cmp
xchg
dec
aaa
xchg
pop
mov
mov
stos
loop
jg
fldcw
lahf
xchg
mov
push
in
mov
xchg
aas
dec
fistpl
add
outsb
mov
and
xor
sub
fisubs
pusha
sti
adc
roll
dec
jne
nop
test
mulb
jle
iret
fists
mull
insb
int
mov
mov
pop
out
dec
jg
test
add
add
and
push
insb
js
jb
jne
int
scas
push
aaa
aad
andb
adc
jp
enter
fcomps
inc
imul
inc
cld
jmp
ss
xor
inc
aad
bound
sub
or
jmp
xor
ficomps
push
dec
adc
or
popa
aam
mov
out
jle
jg
ret
mov
xor
pop
rcll
clc
shrb
outsl
adc
lods
sti
rclb
add
pop
repz
jno
push
out
xor
fldl
filds
fiaddl
data16
repz
aaa
ljmp
and
mov
clc
aaa
hlt
and
loop
push
jge
mov
ret
add
cld
inc
out
pusha
cmp
lret
sbb
outsl
fcoms
adc
adc
inc
je
movsl
stos
pop
add
sub
push
stos
sub
add
or
add
push
and
pop
mov
mov
cli
nop
loop
mov
or
je
pop
adc
std
clc
dec
push
jb
repz
clc
sbb
pop
outsb
inc
xor
cmp
mov
fldl
push
push
fcomps
mov
xor
test
ja
loop
stc
into
push
and
bsf
xchg
cmpsb
push
pop
xor
decb
cmpb
mov
imul
jo
push
add
mov
ds
lret
sbbb
das
rcll
test
cmp
pushf
movsl
aam
call
cs
ljmp
aaa
xchg
and
jecxz
mov
into
mov
dec
jno
in
mov
in
push
mov
sahf
xchg
cld
std
cs
test
or
cwtl
add
std
fldt
sub
fldt
mov
xchg
mov
mov
and
iret
push
cmp
or
jbe
jg
data16
andb
pushf
push
sub
pusha
mov
xlat
sub
and
orb
rorl
cmp
add
inc
mov
iret
mov
out
fiaddl
lea
leave
mov
fistl
loop
lret
adc
dec
cmpb
fdivrs
mov
push
pop
sbb
cmpsl
movsl
mov
addb
in
gs
mov
cmpsb
pop
pusha
jecxz
adc
ds
add
pop
sub
and
ds
icebp
xrelease
push
push
je
mov
mov
insb
aam
mov
rcrb
mov
mov
xchg
loope
sbb
ja
insl
mov
in
xchg
adc
pusha
loope
mov
negb
sub
into
loopne
mov
dec
popf
cli
adc
or
mov
aad
jg
shl
je
fiadds
mov
mov
testb
and
movl
rorl
adc
sahf
cmp
pusha
mov
movsl
cmp
adc
dec
mov
test
inc
iret
sub
lds
xchg
lods
mov
mov
adc
test
je
sub
cwtl
outsl
fiaddl
pushl
and
push
hlt
add
sub
add
jo
repz
adc
insb
sub
mov
cmp
jnp
pop
jne
enter
insl
loopne
cmp
pop
lahf
and
xchg
divb
clc
addb
lods
insl
dec
dec
in
inc
xchg
cmpl
inc
in
dec
sbb
mov
js
jmp
daa
and
scas
js
addl
sahf
inc
xchg
mov
xor
mov
inc
bnd
pop
frstor
and
jg
jg
aad
jl
mov
xchg
in
aam
repnz
inc
pop
es
jle
adc
fisttpll
sbb
or
mov
in
and
jecxz
movsb
int3
in
sub
mov
push
test
mov
jge
out
in
sahf
dec
insl
rol
inc
sbb
out
ret
push
repnz
jg
loop
xchg
and
add
add
xlat
lods
stos
pop
loop
andl
roll
jbe
gs
cwtl
dec
das
mov
roll
adc
outsl
js
inc
push
push
lahf
pop
add
loop
inc
imul
fdiv
pop
loop
or
rcrl
int
ja
pop
xor
add
ds
ljmp
dec
aaa
ss
test
ja
ret
in
pop
lock
insb
test
xor
push
lret
pop
and
in
jmp
or
xchg
cmpl
mov
pop
pushl
or
fcmovbe
movsb
and
pushf
sbb
xorb
outsl
cmp
jno
jo
sti
test
aam
pop
cmp
ficompl
lea
mov
icebp
xchg
out
test
movsb
lret
dec
out
dec
ljmp
int
les
add
test
outsb
cmp
addb
lock
notl
cmpb
jb
pop
adc
repz
bound
out
rcll
jmp
das
xor
shlb
xor
adc
jg
mov
and
adc
push
mov
lds
mov
out
lods
rcrb
dec
pop
xchg
xor
test
cmp
std
pusha
loopne
xchg
loop
inc
cmp
aas
xchg
test
je
pop
jo
xchg
fnstenv
out
cmp
ja
mov
cwtl
push
ds
push
lods
int
mov
pop
movsl
aaa
pop
pop
jle
and
repz
mov
or
test
inc
mov
mov
xor
push
inc
je
cwtl
push
or
add
adc
jnp
addr16
pop
fbld
out
xchg
pop
jecxz
jnp,pn
inc
test
mov
rcll
xor
push
rolb
jg
cmpsl
filds
out
sbb
push
xor
fwait
mov
daa
mov
lret
xor
cli
fisttpl
dec
cmp
sbb
fstp
cmp
loope
cwtl
sti
dec
mov
outsl
fistpll
mov
sbb
push
dec
mov
insl
pushf
push
cmp
mov
loop
stc
add
ficomps
or
out
pop
frstor
pop
rorb
je
cmp
rolb
fstpl
into
stos
jl
sahf
mov
mov
jne
xchg
jl
or
mov
cmp
mov
mov
or
aad
push
lahf
stos
lcall
orps
inc
data16
dec
adc
cmp
outsl
insb
outsl
iret
jl
mov
pop
pop
insl
pop
dec
mov
mov
in
mov
push
std
xlat
decl
outsl
aas
cmp
ret
sub
jl
inc
jns
mov
jmp
mov
xchg
push
cmpsl
in
jecxz
cmp
inc
xor
sbb
pop
jp
fdivrs
dec
inc
sub
lds
mov
jae
shl
jne
mov
inc
cmp
adc
jno
adc
or
mov
pop
imul
mov
sub
in
and
sub
test
inc
js
jg
sbb
mov
cmp
mov
ja
stos
test
out
mov
jns
imul
mov
mov
pushl
jp
loopne
push
daa
push
dec
outsb
xor
hlt
ret
aaa
mov
ljmp
jge
dec
icebp
decl
inc
jbe
fdivr
jmp
fstl
out
orb
sub
jne
decb
movsb
ss
and
inc
cld
subl
mov
cmpsb
out
repnz
adc
push
jne
jns
lds
hlt
sub
xchg
insb
add
inc
inc
add
lahf
bound
ffree
or
sti
shll
dec
push
sahf
push
xor
and
push
sahf
push
cvtpi2ps
pop
jo
dec
inc
pop
enter
fdivrl
inc
mov
adc
adc
sbb
add
popf
roll
inc
add
fmuls
and
jl
inc
or
adc
add
jge
pop
adc
in
add
ds
es
sbb
xchg
js
filds
dec
lahf
lods
jae
mov
outsl
rcll
out
pop
pop
fmulp
fucomip
mov
popf
fimull
or
in
bound
stc
jp
mov
shlb
imul
test
pushf
lods
xchg
add
and
or
aam
inc
lret
data16
and
add
xor
clc
or
loope
xchg
std
and
cs
inc
add
mov
xchg
fisttps
lods
shrb
std
cwtl
dec
jnp
mov
loop
xor
std
and
outsb
fdivl
addr16
clc
push
mov
push
mov
mov
mov
out
mov
inc
popa
rcr
mov
shlb
pop
add
testb
and
out
out
pop
mov
sub
das
es
add
pop
inc
movl
imul
iret
push
mov
fldenv
adc
sbb
popf
pop
and
aaa
hlt
lea
pop
std
jo
cmpsb
cltd
xor
mov
adc
adc
rcr
dec
cmc
cmp
mov
pop
fbstp
push
and
ljmp
call
add
in
mov
ds
xchg
test
push
mov
movq
sbb
lret
imul
pop
mov
mov
inc
outsb
sbb
pop
mov
lea
inc
and
inc
stc
push
mov
push
fmull
pop
mov
and
sbb
mov
das
add
fisttps
cltd
push
mov
cli
cmp
rolb
ja
sub
dec
pop
or
fisttps
xchg
and
ljmp
sahf
dec
jmp
mov
pop
cli
in
fsubrs
mov
dec
test
jecxz
test
js
fistl
inc
push
lcall
fcomps
dec
push
faddl
das
mov
bound
pop
push
insb
fisubrl
popf
inc
sbb
xor
jl
mov
mov
sbb
pop
push
or
xchg
aaa
fisubrl
aaa
mov
loopne
jle
mov
imull
lcall
inc
sub
pop
inc
xor
test
sarl
icebp
xor
lds
outsb
fst
test
out
xor
loopne
mov
sbb
call
enter
loopne
push
pop
mov
push
daa
sbbb
lret
rclb
pop
xor
xor
mov
mov
inc
sbb
fbld
mov
cmp
lcall
imul
fiadds
pop
into
xor
inc
cmp
pop
sbb
sbb
cmp
mov
call
mov
push
adc
mov
aam
dec
or
push
add
lahf
rol
sub
aas
addb
sbb
push
lret
add
mov
addl
dec
push
mov
jbe
adc
pop
icebp
outsl
dec
push
dec
or
push
insl
test
mov
push
stc
inc
push
sub
out
mov
or
sbb
inc
cmp
pop
inc
cmp
mov
outsb
fdivl
sub
jecxz
cli
test
pop
fildll
xchg
push
test
decb
test
mov
stos
lods
lret
aam
movsb
cli
jne
shrl
scas
ret
xor
adc
push
sbb
ret
enter
les
inc
aam
or
icebp
inc
shrl
cmp
xchg
xchg
lret
xor
insl
jmp
js
cmc
pop
repnz
xchg
jne
cmpsb
fmull
fmull
ja
icebp
pop
inc
xchg
pop
ret
pop
adc
jne
loopne
pusha
ret
call
cmpsb
bound
call
and
fildl
push
orb
add
or
in
cmp
ss
sbb
push
pop
pop
adc
aad
sbb
jae
negb
or
hlt
jbe
lods
test
pop
outsb
hlt
dec
push
adc
inc
push
jbe
or
subl
out
idivb
sbb
lret
or
xchg
sub
cmp
push
push
in
mov
loope
inc
ss
sbb
jmp
outsl
pop
mov
jae
pop
jb
pushf
leave
addr16
test
aam
jl
rorl
sub
sub
mov
test
loop
and
shlb
outsl
push
mov
por
mov
out
push
dec
xchg
mov
int3
pop
test
push
and
xchg
ss
push
icebp
sub
xchg
mov
leave
and
xor
mov
sbb
std
inc
orb
icebp
push
dec
outsl
mov
xchg
cmpsl
lret
xor
mov
aas
icebp
leave
mov
add
pop
add
outsl
jl
push
jecxz
aad
lahf
in
sub
jae
int
mov
inc
in
cmp
pop
das
mov
jecxz
adc
call
mov
push
jo
cmpb
lock
adc
jle
stos
aam
lods
lods
adcl
mov
add
mov
or
rorb
shll
mov
mov
call
jp
cmpsb
lcall
fists
mov
pop
mov
test
idiv
fbstp
sub
push
push
push
sub
imul
fisttpl
add
push
ret
cmc
ret
arpl
fildll
mov
insl
jg
arpl
lea
outsl
fcoml
shrb
and
inc
mov
dec
leave
shlb
cmpsb
dec
cld
pop
lea
fdivrs
in
lods
adc
sub
pop
dec
mov
aad
adc
inc
rorl
adc
xchg
mov
or
mov
icebp
shld
pop
mov
dec
repnz
outsb
idivl
lcall
dec
adc
push
push
aad
insb
rcl
nop
jmp
fbstp
cld
test
ljmp
loope
popa
mov
popa
test
test
xor
push
jmp
cmp
inc
push
pop
ljmp
mov
jmp
push
hlt
or
jmp
cmc
test
outsl
fists
incl
stos
js
sbbl
xchg
pushf
mov
lea
inc
mov
and
and
std
mov
mov
mov
dec
xor
add
push
test
aaa
ss
sbb
xor
or
rcrl
ja
adc
out
rolb
mov
shr
dec
jne
add
mov
xlat
mov
mov
xor
adc
jg
mov
sbb
roll
ret
mov
dec
aam
add
mov
and
xchg
int
pop
sub
jne
outsl
roll
scas
outsb
pop
sbb
frstor
nop
cwtl
and
mov
inc
xor
xchg
adc
sbb
sbb
inc
xor
cmc
or
rcl
repnz
add
data16
dec
icebp
mov
cmpsb
cmp
scas
mov
loop
push
dec
inc
out
lods
les
aaa
dec
or
pop
cmp
inc
push
js
test
in
xchg
add
sub
dec
inc
aad
pop
xlat
fcmovnbe
loope
adc
ffreep
xorb
das
dec
sub
je
test
adc
or
mov
sub
cmp
mov
cmpsb
sub
pop
push
test
inc
insb
jno
sub
aaa
mov
push
dec
push
mov
xchg
and
loope
shrb
xor
lcall
sub
shll
je
std
mov
xor
movsb
repz
ja
push
adc
inc
test
enter
bound
popa
and
sbb
mov
jmp
and
andb
mul
inc
sar
jo
and
sub
mov
and
negb
pop
push
andnps
add
jmp
fildl
xor
test
sbb
mov
bound
push
jb
subb
xchg
fidivs
xchg
and
icebp
ret
cmp
push
or
inc
jns
movsb
push
mov
inc
lret
rorl
jecxz
lods
in
js
sub
fldcw
clc
ret
out
out
adc
sbb
xchg
mov
subb
andl
psraw
popf
mov
pushl
sahf
je
inc
iret
mov
rorb
aaa
inc
imul
or
push
dec
fwait
mov
or
xchg
mov
popa
lret
pop
sbb
call
and
add
mov
mov
dec
ljmp
testl
sub
into
clc
inc
test
mov
rorl
jge
sub
in
std
push
nop
jl
lds
push
and
mov
lock
imul
xchg
push
or
lods
adc
movsb
enter
das
in
fcoms
outsb
and
mov
shll
pop
fsubrl
dec
pop
push
mov
es
dec
sub
outsl
sahf
add
insb
loop
sub
adc
in
add
repnz
and
mov
push
pop
scas
xorb
subb
cld
push
adc
jae
fs
pop
mov
dec
adcl
sub
and
daa
inc
or
xor
mov
ret
out
daa
hlt
or
cmp
mov
mov
lcall
popa
sub
and
test
in
insl
mov
mov
test
or
sub
dec
add
pop
popa
pop
mov
dec
fwait
mov
les
or
pop
mov
xchg
dec
adc
notb
lret
ficoms
pop
push
sbb
xchg
cld
fidivs
out
ja
cmpsb
cwtl
cmp
in
xchg
pop
pop
mov
aad
push
and
aad
and
movb
mov
mov
adc
cld
mov
lock
mov
icebp
lods
adc
xchg
sarl
outsl
cmc
data16
and
aam
enter
sarb
jl
aad
xchg
mov
or
push
iret
dec
insl
stos
ljmp
loope
mov
lods
lods
sub
cmp
das
scas
ss
insl
fs
sbbl
sti
loope
xchg
sbb
lcall
aas
push
cmp
sbb
mov
or
and
mov
mov
xchg
sbb
fiaddl
fdivrs
lret
mov
hlt
sub
in
fdiv
gs
lds
pop
loope
and
add
cmpsl
sub
fs
jbe
mov
push
fiaddl
mov
les
in
dec
add
movsl
push
mov
pusha
pop
int3
jmp
addl
pop
and
aad
xchg
push
lret
or
leave
or
dec
into
lahf
adc
andl
push
sub
add
fbld
mov
stos
and
loop
xchg
add
adc
test
pushf
jno
xor
mov
inc
pop
mov
stos
leave
popa
loop
shll
repnz
push
sarb
jmp
stos
push
pop
mov
bound
dec
mov
movsb
in
cld
push
jmp
push
dec
lock
sbb
dec
xlat
push
sub
stos
fists
ret
lahf
cmp
cmp
sbb
iret
mov
cmpsl
lcall
mov
xchg
int
sbb
rcll
jecxz
cmp
adc
cltd
push
fdivrp
enter
mov
stc
sub
daa
adc
push
ja
mov
jae
xor
clc
dec
xchg
mov
xor
das
mov
jbe
jne
mov
outsl
jle
lea
adc
adc
xchg
mov
sbb
dec
sub
jmp
pop
inc
clc
add
scas
and
scas
movsb
test
adc
add
clc
repnz
testb
out
mov
es
sbb
or
add
push
push
aaa
aad
hlt
in
ret
jl
clc
insl
or
incl
inc
pop
cmp
jne
imul
sub
adc
clc
es
aad
stos
test
xchg
jbe
mov
es
es
mov
fstps
push
jmp
push
dec
and
sub
mov
push
jecxz
aas
sub
popf
xor
xchg
xor
mov
xchg
je
in
mov
lcall
je
adc
mulb
outsl
and
or
insl
mov
popf
or
push
fcomi
test
mov
std
aam
jg
sub
xchg
mov
dec
add
mov
push
push
dec
shrb
add
popf
jno
test
add
test
xchg
lea
mov
jle
and
mov
incl
adc
rorl
mov
test
mov
repnz
mov
jbe
icebp
pop
push
jecxz
mov
dec
out
pusha
sti
movsl
loopne
cs
lcall
insb
fildll
push
mov
rcrl
mov
loop
rcl
outsl
add
stos
mov
outsl
loop
jbe
lods
movsb
cmp
jbe
shll
adc
std
test
adc
stos
dec
sbb
inc
mov
ljmp
in
lods
lret
ret
jo
jo
pop
pop
mov
xchg
mov
push
movsb
xchg
xchg
adc
mov
mov
push
arpl
int3
cmpsb
orb
es
mov
pop
mov
add
or
add
ljmp
ss
mov
mov
xchg
cwtl
mov
es
movsl
jno
je
enter
scas
fildl
mov
add
mov
adc
adc
lea
out
pop
cmpsl
fidivs
stos
shll
nop
pop
cmp
test
xchg
mov
shl
and
mov
cmp
out
cmp
sub
fisubs
push
mov
adc
mov
cmp
or
push
mov
lea
idivb
pop
lahf
push
sbb
sub
add
ja
lea
enter
out
or
icebp
call
mov
or
cmpsl
int
inc
scas
sti
inc
cmc
pop
jp
pop
outsb
sub
push
mov
push
push
out
adc
fucom
mov
push
std
mov
movsl
jae
pop
mov
fs
push
mov
jbe
mov
adc
push
jle
adc
jnp
gs
scas
mov
fwait
pop
movsb
test
xor
sub
adc
inc
lds
mov
test
scas
pop
jmp
cwtl
jg
or
fdivl
cs
xor
sub
mov
pop
jb
adc
cli
add
pop
cmp
sub
outsl
add
sbb
inc
inc
aad
into
and
sub
je
je
jo
sub
inc
mov
movsl
dec
pop
mov
jo
js
pop
mov
sub
test
aaa
mov
test
and
call
push
rclb
aas
sub
scas
mov
ret
ret
orl
mov
mov
nop
xchg
mov
fwait
mov
sub
jmp
sbb
mov
scas
push
faddl
push
and
rcrl
adcl
push
mov
dec
fidivrs
pop
jg
mov
push
sti
or
imul
imul
sbb
cltd
gs
cmpsl
js
mov
add
mov
les
clc
aas
enter
dec
test
outsl
sbb
ret
xlat
test
pop
mov
movsl
mov
xchg
or
retw
ds
in
mov
stc
mov
add
inc
add
ss
rcr
push
xchg
xor
test
jne
js
jo
sub
stos
cmp
pop
pop
pop
popf
mov
popa
lcall
fisttpll
pushf
jmp
loop
insl
mov
js
mov
jmp
sub
mov
cli
sbb
cmp
add
adc
movsb
jle
cmc
add
movsl
pop
mov
lahf
cmp
frstor
dec
loopne
push
ja
lret
call
aam
pop
or
addr16
dec
pop
xor
mov
adc
adc
mov
and
dec
ret
mov
or
inc
rorl
mov
cmpsb
js
or
sbb
jecxz
dec
cld
icebp
cs
hlt
lock
scas
jbe
mov
pop
mov
mov
es
adc
mov
fldl
popf
nop
adc
incb
adc
mov
rolb
and
sub
or
ljmp
pop
sub
inc
mov
out
or
test
pop
fwait
icebp
in
adc
sbb
mov
outsl
sub
jge
pop
test
xchg
pop
cmp
add
imul
ret
pop
add
pop
mov
ljmp
adc
fstpt
negl
pop
xchg
outsb
mov
xchg
lret
and
cmpsb
fimuls
mov
or
and
push
mov
cmp
pop
xor
movsl
cs
inc
add
push
xchg
pop
xor
adc
add
pop
clc
popf
push
nop
pop
outsb
push
sub
mov
fidivrl
xor
pop
fisubrs
stos
pop
mov
lock
lock
add
mov
lahf
sti
inc
sub
push
jecxz
fsubrp
jns
scas
add
add
sti
pushl
pusha
scas
pop
mov
pop
jecxz
inc
inc
mov
adc
aaa
stos
test
rorl
and
push
loopne
mov
sbb
lret
pop
sub
push
or
sub
loop
mov
and
or
loop
mov
mov
aaa
dec
in
xchg
popf
xlat
mov
jge
dec
es
pop
lea
es
decl
call
inc
loop
dec
or
push
mov
push
gs
test
filds
and
jmp
pop
arpl
inc
or
adc
jg
divb
adc
das
leave
nop
xor
xor
mov
push
mov
add
cmp
pop
and
mov
or
inc
mov
rcrb
cmpsb
out
loop
sti
stos
mov
lods
cmp
in
fidivl
cwtl
add
jbe
loope
sub
push
adcl
out
dec
imul
push
loopne
das
and
fidivrs
sbb
das
push
ja
stos
dec
and
sub
iret
mov
cmpsb
mov
push
ss
mov
mov
insl
std
add
loop
jg
pop
xchg
sub
out
call
rol
sub
mov
pusha
shll
jmp
push
repnz
scas
and
push
mov
mov
jle
xor
dec
sahf
mov
pop
push
push
sub
testb
inc
add
ja
jecxz
inc
jg
in
pop
jmp
push
or
pop
adc
pop
mov
lahf
int3
inc
dec
loope
xor
andb
pop
lods
lret
icebp
xlat
sub
icebp
mov
ljmp
or
rcr
dec
cmp
pop
out
inc
sahf
add
or
hlt
push
adcb
mov
pop
js
xchg
sub
mov
mov
or
mov
aaa
jecxz
pop
test
arpl
mov
xor
insl
mov
and
dec
sarl
jge
jle
dec
sub
loop
sub
test
inc
jae
push
mov
mov
inc
jmp
pop
ja
ret
sbb
push
dec
lods
inc
add
mov
push
xor
aad
lret
jle
xchg
aaa
add
icebp
gs
jecxz
push
add
fisttps
enter
push
mov
jne
sub
add
and
push
dec
add
mov
ret
loopne
mov
aas
ret
loop
scas
hlt
jecxz
mov
imul
stos
test
cmp
adc
lcall
loope
or
mov
shr
push
fdivrs
repnz
call
jns
imull
pop
adc
aaa
push
push
xchg
mul
adc
pop
mov
sbb
test
xor
mov
popf
and
add
mov
xor
lods
clc
scas
ret
cmpsl
lcall
push
stos
fs
push
int
pop
scas
mov
inc
jne
mov
adc
fiaddl
aad
and
xchg
push
test
xorb
or
sbb
jbe
sbb
lock
lock
cmp
cmpsb
dec
mov
call
imul
cmp
inc
int3
mov
push
lret
stc
inc
add
imul
testb
mov
jg
push
pop
add
jg
daa
in
fucom
and
add
push
out
scas
dec
inc
adc
cld
jecxz
lret
imul
out
in
outsb
push
mov
shlb
jecxz
mov
push
jecxz
pop
or
sub
pop
sub
movsl
pop
aam
scas
or
je
mov
add
mov
shr
pushf
xchg
or
adc
in
xchg
cld
sbbb
ja
mov
dec
xchg
int
dec
mov
jne
out
jle
adc
mov
pop
jne
out
cwtl
ret
mov
push
das
ret
sub
fs
dec
test
pop
ljmp
add
lret
pop
test
push
sbb
sti
icebp
jle
test
lcall
inc
loopne
in
sbb
pop
inc
data16
pop
xor
push
hlt
xchg
aas
inc
lret
push
pop
xchg
notb
dec
imul
or
pop
call
jno
roll
mov
dec
push
add
push
jmp
out
pop
std
mov
pop
roll
push
inc
shl
out
loope
fldt
adc
cmp
mov
call
movl
addb
mov
cld
pop
cmp
icebp
pop
gs
cmp
jp
fsubrl
or
push
bswap
imull
or
pop
jg
cs
xchg
fidivl
or
pandn
ljmp
repnz
push
int3
les
out
int3
nop
cmc
xor
outsb
mov
clc
out
mov
ffree
and
shlb
lds
lret
fistpl
filds
je
popa
add
adc
dec
aaa
pop
cli
mov
aad
ds
sub
pop
inc
std
jge
gs
es
mov
fistpll
imul
das
and
mov
push
mov
stos
or
mov
dec
inc
add
sbb
es
lock
mov
dec
sbb
fnstenv
icebp
hlt
add
pop
sbb
add
ret
pop
popa
sbb
pop
cli
out
mov
mov
fwait
mov
pop
adc
cs
xchg
mov
test
enter
sub
add
insl
xchg
jle
inc
or
pop
dec
cs
push
ljmp
inc
xchg
lcall
sbb
call
aaa
addr16
push
dec
lahf
dec
ljmp
xchg
inc
adc
or
callw
mov
pop
or
xchg
call
data16
add
inc
enter
in
movsl
mov
xor
ffreep
mov
mov
cmpsl
mov
sbbb
xlat
add
inc
mov
fadd
add
fldcw
sti
mov
fwait
add
cwtl
dec
bound
sub
adc
dec
or
cmpsl
dec
or
popf
rclb
enterw
jmp
mov
pop
mov
dec
jne
mov
bound
cmp
in
pusha
test
cmp
subb
push
sbb
jns
in
xchg
dec
out
mov
popf
cs
jae
dec
mov
mov
outsl
ja
dec
xchg
sbb
ljmp
outsl
cld
pop
mov
mov
scas
add
xor
push
movsl
sub
comiss
jg
movsl
cmp
andb
adc
out
cmp
push
imul
mov
push
jl
shl
sbb
mov
mov
push
xchg
jle
roll
fists
xchg
cmp
mov
rcr
jns
lock
sub
das
ds
idivl
xchg
and
push
jl
mov
mov
and
loopne
adc
outsl
jg
clc
dec
jbe
xchg
loop
inc
mov
mov
sbb
sub
mov
xchg
pop
xorb
inc
mov
sub
js
out
scas
or
push
fimuls
pcmpgtw
mov
pop
sti
nop
aad
or
insb
fimull
add
in
into
xor
lea
cmp
std
push
adc
dec
stc
xor
and
dec
sbb
sub
push
jnp
xor
sbb
insb
and
cmpsl
and
xchg
mov
xor
adc
xchg
aad
xchg
fwait
clc
ljmp
cmp
adc
jns
xorb
xlat
cmc
or
icebp
out
rcll
lcall
or
daa
das
xchg
jne
sbb
and
dec
cmp
jae
outsb
push
mov
add
and
lds
out
lret
gs
std
adc
or
inc
adc
cmp
inc
mov
fisubs
rcr
in
add
sbb
mov
leave
aam
and
lcall
idiv
ret
mov
add
pop
cld
xorl
fldl
aam
jge
in
in
insl
mov
sti
xlat
fcomi
gs
sub
sbb
mov
mov
xchg
js
fs
clc
xchg
and
mov
out
sti
das
test
add
les
cmp
adc
outsb
popa
mov
jg
insl
add
mov
mov
lea
aam
rcrb
pop
jg
std
jns
out
cmp
jbe
mov
xchg
mov
popf
popa
inc
add
jno
or
push
sbb
push
in
mull
fists
adc
adc
aam
fisttps
js
test
mov
sub
pop
cmpsl
fdivrp
push
imul
rorb
inc
rcrb
cli
ja
mov
sar
or
add
xchg
xor
repz
stos
bound
and
dec
aad
leave
adc
scas
not
es
roll
test
aad
adc
sbb
hlt
jge
mov
fldl
sbb
stc
fcoml
cwtl
pop
nop
outsb
fldl
cmp
mov
roll
sarb
push
xor
cli
sbb
pop
popf
inc
popf
cmp
pusha
mov
jns
ds
stos
mov
adc
fstpl
fdivs
xchg
and
sahf
add
test
or
mov
outsl
sub
add
xor
mov
sbb
sbb
push
or
sbb
loopne
push
scas
hlt
lcall
mov
push
stc
mov
int
test
inc
decl
test
adc
cmp
mov
push
lods
ss
fildl
fiadds
cmpb
sbb
mov
cmp
sub
dec
aad
sub
sbb
ljmp
les
and
add
dec
push
aaa
ljmp
push
pop
in
sbb
xchg
ficompl
mov
stos
dec
or
pop
stos
std
or
bound
jg
iret
mov
sbb
xchg
das
lds
sbb
and
std
aas
pop
mov
ljmp
out
stos
add
xor
das
outsl
inc
roll
rcrl
push
das
dec
inc
jae
scas
js
ret
in
cli
repz
call
add
inc
je
lods
dec
pop
xorb
inc
pop
push
pop
or
mov
addr16
in
dec
xor
pop
jbe
sub
dec
mov
test
mov
sbb
inc
inc
rclb
xchg
enter
test
or
shlb
sarl
fsubrs
mov
push
push
pop
jmp
sbb
movsb
mov
movsl
mov
fadds
add
sub
xchg
or
cmp
jle
push
jmp
dec
xchg
mov
push
pop
jp
xor
aaa
push
or
repz
adc
iret
call
mov
hlt
pop
cmp
data16
cmp
cmc
outsl
dec
lret
cs
xor
movsb
lret
adc
loope
pushw
mov
pushf
mov
add
mov
jno
call
stos
cmc
push
shlb
inc
jb
pop
add
xlat
push
das
cld
das
xor
cmp
lods
pop
jae
adc
addb
shl
outsb
repz
movsb
dec
xchg
js
pop
in
out
js
mov
sbb
mov
cmpb
incb
addl
mov
aam
mov
and
sbb
js
in
adcb
jo
repz
jg
xchg
and
fnstsw
inc
loopne
and
rcll
rcll
inc
pop
or
mov
js
mov
and
rclb
jl
outsl
or
sub
pop
mov
subl
cmp
sub
xchg
lcall
rcl
and
call
dec
cld
sub
nop
mov
cmp
popf
mov
aad
movsl
pop
xorb
fstps
insb
ss
xor
notl
or
fildll
fisttps
stos
jl
cwtl
add
or
scas
mov
cltd
out
xchg
aad
or
sub
sbb
ja
fbld
push
ja
in
pop
sbb
xor
inc
sbb
xchg
mov
add
xchg
push
cmpsb
scas
cltd
mov
mov
sbb
jge
in
pusha
xlat
nop
js
push
pop
mov
add
leave
push
test
xor
jg
decl
test
pop
call
mov
xchg
ret
je
je
xor
and
lret
dec
addl
fcoms
sub
subl
mov
fnstenv
push
in
sub
mov
rorb
push
outsl
js
lds
push
mov
insl
ljmp
arpl
add
mov
pop
stos
inc
jnp
lock
mov
outsl
es
adc
sti
jnp
bound
xchg
sbb
ljmp
in
jle
lahf
mov
add
paddb
dec
fs
loope
jae
mov
sbb
xorl
stos
in
jge
push
outsl
jbe
enter
aaa
xchg
dec
or
dec
mov
pusha
ficoml
push
xor
loope
jge,pn
mulb
mov
inc
dec
sbb
aad
xchg
rclb
add
mov
cmp
movsb
aas
push
sub
fldenv
mov
cmpsb
cld
movsl
call
jnp
adc
sbb
xchg
pop
ds
aas
aam
jl
out
jbe
out
adc
xchg
fmul
loop
push
lahf
pushf
outsb
xor
shl
xlat
pop
xchg
outsl
and
ljmp
insl
cmp
test
lds
int
mov
icebp
das
sub
loopne
cli
cmp
jecxz
shrl
xor
jo
je
pop
mov
arpl
mov
jge
mov
outsb
dec
sbb
dec
and
push
fsubp
jecxz
rorl
jecxz
sbb
aad
test
popa
ja
xor
lret
dec
inc
cmp
fcompl
push
outsl
fldl
repnz
push
add
loopne,pt
rcll
xlat
pop
insl
fiaddl
jecxz
mov
adc
rcrb
repnz
add
packssdw
and
cld
adc
mov
test
scas
mov
shlb
cmp
add
push
lds
fcmovu
faddp
xor
jnp
ds
mov
dec
and
push
std
es
mov
add
enter
shrb
sbb
pop
push
shll
mov
adc
and
jmp
movsl
mov
push
mov
push
and
scas
das
add
xor
and
pop
fildll
xchg
pop
adcl
cmc
imul
stc
repz
ljmp
scas
inc
fists
or
stos
inc
cld
jne
pop
clc
mov
sub
mov
or
fsubrl
lock
aas
addb
or
out
cmpsl
clc
test
pop
lock
fstl
in
push
inc
inc
jne
push
cli
mulb
jl
call
cli
add
je
push
cmp
loope
mov
push
add
int3
inc
iret
mov
fstpt
fisttpl
imul
or
insb
sbb
rol
inc
add
ret
mov
ljmp
fcomps
jl
xchg
cld
pushf
mov
add
mov
xchg
xchg
aam
lcall
fbstp
mov
stc
rolb
push
arpl
sbb
dec
sbb
cmc
sti
shlb
mov
inc
pop
mov
sar
inc
mov
dec
and
mov
jmp
pop
jp
shlb
pushf
inc
or
xchg
jl
icebp
jecxz
push
ss
fnsave
dec
or
sub
leave
jg
icebp
dec
outsl
xchg
int3
ja
push
outsb
push
imull
jns
inc
idivb
push
pop
fisubl
bnd
adcb
and
lods
adc
adc
loopne
mov
clc
dec
int
fsts
or
push
pushf
xchg
rolb
push
jp
pop
loop
lea
std
mov
and
sahf
mov
mov
cs
mov
ljmp
in
adc
sbb
pop
pop
outsl
sbb
pop
inc
movsb
xchg
pop
mov
stos
pop
in
scas
cmp
iret
adc
mov
push
push
push
imul
imul
mov
imul
pop
bound
jge
add
pop
dec
xchg
insb
int3
xor
mov
loop
jle
inc
popa
cmp
and
xlat
adc
cwtl
frstor
decl
jp
mov
rcll
mov
mov
inc
das
inc
outsl
in
pop
pusha
ja
in
cmp
pop
cwtl
adcl
push
mov
pushf
push
test
je
and
mov
mov
cmc
mov
dec
ret
in
sub
ret
pop
test
push
stos
adc
lret
push
notb
shr
imul
pushf
adc
sbb
and
loopne
out
adc
xchg
repz
stos
clc
ja
lret
cmp
dec
imul
mov
xchg
leave
adc
and
pop
loop
sarl
and
cmc
mov
and
add
lret
outsb
rorl
mov
call
in
shrl
mov
les
dec
leave
pop
shlb
or
call
push
mov
cmp
add
shlb
jecxz
xrelease
popa
add
inc
les
xchg
orb
mov
mov
scas
cmp
jle
cmp
mov
xor
lret
jmp
rcrl
dec
fwait
div
insb
sbb
or
iret
adc
lea
push
stos
aaa
call
popa
pop
fs
leave
sub
mov
in
cmp
jl
mov
mov
cmpsl
std
aas
mov
jo
fists
mov
xchg
jne
stos
mov
test
lds
aaa
stos
or
cmp
jg
adc
adcb
psrlq
mov
fdivr
stos
sbbb
cmp
ja
scas
testb
out
shlb
and
in
or
jl
or
movsb
mov
cmc
mov
outsl
sahf
pop
xchg
push
push
leave
jp
in
pushf
xchg
aaa
enter
fiaddl
xchg
das
rcrb
xchg
pop
mov
cld
ja
add
add
shrb
insb
xchg
iret
loop
add
pop
fsubp
lret
sbb
jbe
jb
pop
inc
pop
aam
sti
nop
shrb
ja
xor
loopne
ret
and
repz
pop
ss
push
test
add
scas
repz
push
in
mov
sbb
jno
gs
cmp
mov
adc
leave
add
mov
jg
nop
clc
pushf
sub
repz
push
mov
xchg
xchg
pushf
scas
aaa
test
xchg
push
sbb
add
lods
scas
decl
or
push
orb
jecxz
arpl
xchg
mov
aas
push
inc
in
aam
jge
jno
out
das
sub
shl
mov
jns
mov
sub
data16
into
pushl
push
mov
cmp
jns
jge
mov
scas
mov
lea
push
loope
xchg
stc
pusha
sbb
mov
mov
push
ret
lcall
sub
imul
clc
inc
cmp
inc
int3
xchg
dec
test
adc
xchg
fsubr
mov
xlat
in
bnd
push
orb
movsb
fcmovnb
xchg
mov
mov
fwait
push
mov
lods
pop
call
in
push
jecxz
adc
inc
sbb
test
stos
xchg
rolb
pop
imul
mov
fcomps
ds
push
add
mov
pushf
sbb
inc
aaa
fisubs
adc
jbe
inc
leave
in
push
push
rol
xlat
mov
jmp
std
daa
in
in
test
dec
insb
mov
add
mov
pop
cmpb
push
pop
and
add
sub
fistpl
mov
xchg
stc
movsb
insl
loop
aaa
mov
mov
cmp
mov
dec
pop
loopne
fidivs
inc
shll
dec
out
and
loopne
lods
mov
adc
inc
rol
or
push
incb
jnp
outsl
push
or
rorl
adcb
call
leave
inc
inc
roll
shrl
or
or
jp
or
ret
ret
mov
jo
or
jl
mov
pop
scas
ss
aad
rol
popa
inc
lock
sbb
pop
jle
popa
pop
mov
std
stos
jbe
ja
sarl
mov
mov
dec
sbb
fiaddl
mov
jnp
xchg
enter
sbb
addl
mov
pop
sbb
sub
mov
inc
outsl
pop
xchg
xchg
daa
cmc
popf
stos
push
push
call
je
push
lock
lret
jo
fsubrs
adc
loope
cld
sbb
sbb
loopne
push
pop
fidivl
mov
loopne
sub
mov
fldt
add
cmp
push
sbb
mov
lods
jp
ja
ret
clc
xor
fidivs
dec
daa
jge
orb
cmp
clc
push
shll
mov
jo
sbb
rorb
rorl
pop
out
dec
jmp
loopne
sahf
imul
loope
stos
pop
lret
or
jecxz
decb
jo
outsl
xor
mov
clc
out
push
andl
loopne
mov
je
push
movsl
loopne
enter
add
push
roll
daa
jecxz
call
aad
movsl
cwtl
rcl
jnp
mov
mov
mov
mov
lock
testb
xchg
sbb
or
jns
pop
hlt
mulb
mov
out
pop
cmp
stos
shlb
cmp
dec
je
mov
mov
or
in
jb
and
clc
fidivrl
roll
push
into
inc
lret
lods
loop
adc
imul
dec
ljmp
jle
je
sbb
iret
stc
dec
push
cmpsl
ss
or
test
je
mov
out
stc
loop
cmp
jecxz
ret
lcall
imul
ret
mov
jmp
in
jae
or
sti
mov
xchg
jae
push
and
dec
adc
xchg
scas
add
out
out
sub
mov
push
sarb
pop
and
pop
sbb
add
jle
std
push
push
hlt
sbb
push
mov
inc
fildl
std
mov
sbb
and
inc
sbb
push
pop
js
push
scas
in
decl
mov
lock
xchg
jmp
mov
jmp
lea
pop
inc
mov
stos
fadds
not
subl
mov
dec
movlps
dec
out
cli
mov
aaa
cld
add
int
test
adc
clc
aam
decb
sub
push
pop
xabort
lcall
inc
outsl
pop
cmc
adc
mov
icebp
add
jb
mov
iret
dec
popf
inc
fwait
and
fistpll
push
and
in
add
and
mov
sub
mov
cltd
cmp
pop
adc
pusha
mov
push
jecxz
inc
int
sub
pusha
jbe
mov
clc
outsb
push
and
cmp
in
cwtl
ss
test
adc
fsubp
xchg
call
mov
inc
repz
icebp
mov
dec
ss
movsb
aaa
mov
inc
andb
iret
xor
les
lret
mov
jmp
lods
jne
pop
adc
pop
push
loope
sbbb
popf
arpl
arpl
out
adc
sbb
shl
loop
leave
pushf
test
arpl
pop
fdivp
sbb
jg
repz
insb
xor
sub
push
es
subb
pop
gs
test
inc
inc
sbb
mov
adc
pusha
jle
out
call
outsl
and
add
or
enter
jge
mov
mov
call
jnp
pop
add
or
aas
call
lock
std
xchg
gs
arpl
or
pop
addl
mov
int
mov
jg
icebp
or
icebp
or
aad
and
pop
dec
add
push
xor
mov
mov
sub
std
pop
push
loope
mov
push
jle
push
mov
mov
add
pop
sahf
dec
loop
inc
jge
push
push
in
jg
es
mov
fldenv
jno
mov
or
add
xchg
mov
outsb
ja
jae
jns
inc
dec
cld
aam
outsl
in
ja
insl
mov
call
rclb
jo
mov
push
imul
mov
mov
cmc
mov
jmp
orb
jno
fstl
inc
addr16
test
and
add
je
lea
cmc
lods
dec
fmulp
xor
insb
push
add
add
push
jmp
sbb
mov
into
lret
fimuls
pop
mov
mov
ja
mov
inc
sti
xchg
enter
cmp
pushf
ficomps
or
xchg
rcrb
dec
outsl
movsl
clc
sbb
pop
rcll
jl
stos
sbb
xchg
sub
mov
sbb
movl
pop
lds
add
incb
push
stos
arpl
dec
inc
inc
mov
pop
sub
push
fisubl
jge
orl
movsl
test
das
adc
ficomps
mov
out
ficoml
push
or
push
jmp
inc
or
mov
or
test
insb
das
cmp
and
repnz
cwtl
push
insl
mov
int
xor
xor
xor
mov
gs
outsl
push
pop
adc
mov
sbb
rclb
push
xchg
add
cmp
mov
push
pop
xor
out
stos
insl
in
push
mov
sbb
test
outsl
push
add
jle
add
sarb
mov
out
mov
mov
js
aam
int3
push
dec
xor
inc
jns
out
arpl
adc
testl
push
popa
sub
aam
jg
fistps
jg
ja
mov
jge
push
inc
add
sub
outsb
pop
pop
mov
adc
loopne
cmc
aad
push
mov
or
js
rcll
push
fsubrs
jg
scas
jb
aam
pop
mov
inc
imul
mov
in
repz
sbb
imul
ss
inc
add
dec
sti
call
faddl
mov
mov
gs
decl
rclb
das
mov
ss
dec
xlat
dec
scas
sbbl
fisttps
or
pushf
jl
testb
and
add
jno
div
add
and
or
adc
data16
or
clc
testb
push
adc
lods
xchg
pushl
shrb
mov
pop
icebp
js
pushf
adc
xchg
fidivs
std
addr16
out
pop
insb
stos
and
in
adc
jb
xlat
outsb
sbb
loope
adc
fs
scas
fcmovnbe
add
inc
add
decl
push
lahf
mov
xor
add
clc
adc
mov
xor
lock
xchg
pop
push
jl
pop
icebp
xchg
lds
cli
xchg
in
cmp
or
outsl
hlt
mov
ja
mov
shr
addb
push
push
int3
jo
push
jnp
xchg
aas
adcb
loopne
cmp
add
and
jle
imul
daa
xchg
push
sbb
add
mov
pop
fwait
hlt
cmc
or
lock
je
adcl
pop
pop
add
in
or
pop
mov
ds
cmp
loopne
in
lods
jbe
adc
adc
cmp
push
and
jp
int
fldlg2
cmp
xrelease
icebp
sub
out
and
jno
jo
cmpsl
mov
insl
lds
and
xorl
insb
add
add
push
dec
or
add
lret
mov
cwtl
and
daa
adc
dec
fisttpl
and
aas
mov
push
insl
ds
inc
popf
jae
scas
fisubrl
cmp
popa
jecxz
lods
jp
adcl
sbb
add
pop
fbstp
outsb
jge
incb
push
stos
add
fiaddl
shll
and
push
pop
mov
int3
insl
lahf
push
add
stos
fdivr
or
int
mov
mov
or
or
mov
lods
and
imul
addr16
pop
cwtl
roll
jo
movsl
notl
sti
mov
inc
enter
xor
xor
ficompl
or
ljmp
adcb
adc
mov
cld
or
mov
imul
repz
jl
cli
movsl
cmp
imul
mov
rolb
imul
xor
ficompl
jmp
add
sarb
clc
cmp
sbb
mov
mov
add
fnstsw
mov
fidivl
xor
fcoms
inc
mov
or
push
adc
outsl
shlb
loopne
cmc
add
mov
mov
lock
mov
gs
movsl
cs
mov
mov
and
fdivrs
and
ds
or
sub
test
dec
in
stos
cmp
ret
mov
pop
xchg
xlat
pop
fcmovu
adc
adc
ja
test
push
or
push
pop
outsb
add
add
loopne
sbb
push
xchg
mov
imul
inc
nop
or
fucomip
push
arpl
hlt
divl
inc
or
subb
add
xchg
mov
aaa
js
std
inc
inc
dec
lock
cld
imul
inc
cmp
fcomps
mov
rorb
xchg
jecxz
ficoml
outsb
ds
sub
aam
je
mov
jno
iret
lds
imul
xor
js
jne
lea
sbb
cld
mov
jo
das
or
in
mov
pop
fstpt
rcr
neg
or
mull
scas
lds
mov
xchg
adc
subb
repz
inc
sbb
loope
mov
sub
xchg
sar
xchg
sub
add
inc
xor
ss
dec
stos
and
dec
movsb
stc
mov
xor
inc
fstpt
pop
mov
inc
pop
sar
mov
fcmovu
xor
pop
push
mov
mov
shlb
aam
insl
sub
sahf
sub
scas
stos
cmpsb
insl
jnp
aad
int3
add
inc
push
push
adc
pop
xchg
les
call
jbe
cmc
mov
js
adc
sub
insl
repz
outsl
pop
mov
mov
xor
aam
ja
icebp
mov
in
rcr
stos
jp
mov
push
rclb
jnp
insl
mov
cmpl
xchg
mov
or
fmull
jle
add
inc
shl
in
cmpsl
and
mov
and
jg
push
popl
fdivrs
adc
enter
ret
xchg
jae
push
outsl
aas
cmc
inc
and
mov
call
and
inc
xor
pop
mov
repnz
sub
das
sbb
lods
loopne
push
dec
stos
jp
in
mov
call
std
mov
cmp
or
or
in
adc
in
xlat
and
es
jecxz
sub
adc
sbb
ss
into
outsl
push
int
mov
movsb
mov
mov
mov
inc
jnp
sub
xchg
sub
sbb
mov
jno
jbe
je
add
loopne
or
cwtl
rorb
aaa
adc
xor
inc
lock
mov
aaa
cmp
dec
nop
mov
in
add
pop
xchg
xor
and
jge
filds
test
int
in
inc
std
ja
ds
mov
or
jl
clc
sbb
xor
xchg
and
out
cmpsb
sbb
fwait
sbb
mov
and
fsubl
inc
pop
lahf
out
scas
add
or
incl
fs
daa
mov
cld
dec
jecxz
sbb
pop
inc
fsubrl
push
in
hlt
pop
xchg
imul
in
ret
rclb
sub
pop
xor
sub
ret
push
mov
daa
loopne
xlat
dec
frstor
jge
pop
jnp
cmpsb
mov
scas
or
rorl
sbb
aas
or
mov
add
pop
stos
push
lock
ficompl
add
mov
idivl
xor
test
cmp
rorb
pop
shl
out
cmp
pop
fcmovu
mov
sbbb
xor
adc
jnp
sub
cmp
and
fisubrl
lods
push
mov
outsl
xchg
inc
jne
std
jns
mov
cld
scas
inc
jnp
cltd
push
popa
mov
mov
mov
aad
dec
lods
outsb
test
outsl
mov
adc
pop
cmp
rolb
sbb
sub
test
sub
pop
sbb
sbb
pop
push
inc
mov
pop
fnsave
mov
jecxz
mov
sbb
push
sub
jb
push
push
aam
shll
enter
mov
inc
jo
outsb
jg
popa
push
sub
dec
lods
sub
dec
popf
xor
or
push
push
mov
clc
enter
push
scas
add
xchg
testb
jo
lahf
push
or
adc
pop
xor
cli
cmc
in
outsb
xor
sbbl
cmp
stos
xchg
dec
shrb
xor
mov
add
pusha
push
mov
mov
sub
mov
or
cli
push
push
mov
mov
pop
fsubrl
adc
lods
sub
pop
imul
das
xor
xchg
gs
push
push
lcall
xchg
call
pushl
push
fsub
jmp
fidivrs
mov
lock
push
jbe
inc
sub
rolb
cmp
jp
jp
aad
daa
xchg
lret
mov
test
popf
jp
mov
push
js
cmpl
js
adc
jb
insl
jmp
outsb
or
pop
or
insb
push
cmc
xorl
adc
sbb
scas
dec
or
adc
pop
fdiv
out
jmp
inc
imul
mov
xor
bound
push
imul
rcrl
repz
popa
add
fsub
or
push
cltd
xor
sti
mov
js
jno
hlt
push
cmp
mov
mov
nop
dec
repnz
nop
dec
test
std
cmc
jp
data16
inc
inc
mov
popa
ljmp
adc
xchg
add
aad
mov
inc
sub
push
mov
fisubrs
xchg
mov
movsl
jo
xchg
mov
mov
inc
lcall
cmp
and
lock
sbb
lods
cmp
stc
nop
jmp
jno
or
test
and
call
adc
push
push
fisubrl
gs
push
jb
cld
dec
fisttpll
inc
andl
pop
adc
mov
push
sahf
dec
pop
jmp
icebp
in
xchg
mov
je
fnstenv
and
pusha
adc
pop
xlat
cld
lock
pop
sub
test
orl
xor
adc
mov
xchg
xor
add
out
push
aaa
insb
pop
add
and
push
test
pop
lea
jmp
mov
adc
hlt
or
enter
mov
mov
lds
aam
cmp
icebp
push
and
cmpsb
sbbb
aam
aam
fs
fisubrs
std
and
add
inc
dec
jnp
outsl
mov
xchg
lahf
inc
xchg
adc
std
cs
fisubrs
dec
test
jle
mov
sub
subb
out
cmpsb
dec
out
mov
sti
add
movsl
cmpsb
enter
push
test
fdivrs
pop
pop
sbb
jl
pop
fidivrs
adc
mov
inc
add
adc
cmp
or
in
in
jmp
add
lahf
mov
test
stc
dec
adc
mov
cmp
clc
push
das
fidivrl
fldl
sbb
pop
dec
mov
mov
lds
sub
mov
movsl
ss
add
add
sub
shll
adc
iret
pop
fidivl
ret
outsb
dec
add
aam
jmp
push
divb
mov
mov
inc
movsl
sbb
adc
lods
cmpsb
scas
mov
stos
outsb
add
test
js
pusha
mov
push
ljmp
or
jb
add
scas
mov
sub
fistl
das
std
mov
fbld
cwtl
push
inc
outsb
in
fistpll
imul
or
and
sbb
xchg
out
test
mov
or
aaa
popf
dec
inc
iret
xor
sub
inc
ret
data16
movsb
mov
test
xor
fucomi
add
pop
fwait
clc
sub
gs
and
push
repz
ljmp
mov
data16
fisttpl
movsl
out
pop
ja
lock
and
sbb
sti
dec
insl
cwtl
aam
aam
jne
cwtl
pop
mov
aaa
jo
pop
fs
sahf
mov
dec
inc
jo
jge
dec
das
repnz
test
jae
cmpsl
add
gs
push
jbe
data16
ja
pop
nop
mov
mov
jp
push
xchg
jne
jne
ljmp
repnz
enter
in
pop
add
and
fwait
sbb
pop
mov
stos
mov
push
fdivrl
jbe
mov
adc
test
jmp
ss
imul
fs
jae
ss
add
and
into
repz
add
pop
fisubrl
imul
icebp
adc
mov
push
notl
iret
push
aas
aaa
and
pop
daa
aam
test
adc
xchg
mov
out
and
cmpsl
push
repnz
clc
dec
insb
gs
dec
dec
je
mov
push
or
inc
xchg
dec
cltd
inc
jp
mov
sbb
aaa
pop
jecxz
sub
jbe
inc
lret
ret
leave
mov
adc
iret
xorb
fldl
sub
add
xchg
mov
adc
jle
mov
int3
lahf
xchg
jmp
pop
test
push
cmp
adc
loope
inc
add
outsb
pop
jmp
ja
js
subb
inc
mov
cmp
mov
sub
mov
movsb
xorb
outsb
scas
cld
out
out
aas
in
jo,pt
rorl
fistpl
addr16
dec
or
adc
jnp
ss
xchg
sbb
cwtl
adc
aam
mov
push
mov
cmp
pop
jg
xor
orb
test
adc
js
outsl
push
sub
mov
pop
push
shlb
add
outsb
fistpl
and
lock
je
hlt
pop
add
add
repz
inc
add
leave
fistpll
fisttps
xlat
out
pushf
loop
sub
or
cwtl
ficompl
jl
in
lcall
xchg
or
add
les
imul
notb
jmp
jb
jne
jg
inc
xor
mov
jle
jecxz
and
js
sub
stc
es
xchg
call
push
mov
mov
and
sub
clc
xor
andb
iret
push
dec
mov
cmp
outsl
insl
push
cmp
add
add
lock
fisttps
mov
pop
add
aad
add
push
or
or
cli
ret
mov
add
stos
mov
dec
lcall
cwtl
mov
aam
inc
sti
mov
push
repnz
push
es
or
xchg
inc
xor
shll
popf
jno
pop
inc
aaa
sbbl
lret
movsw
mov
scas
imul
fcoml
pop
shrb
scas
sbb
push
inc
push
xchg
inc
aaa
js
xchg
mov
cmpsl
pop
roll
jno
mov
inc
cs
sub
cmc
inc
inc
cld
nop
push
test
nop
sub
cmp
sbb
push
pop
rcrb
and
int
ret
das
mov
push
sbb
mov
adc
fs
dec
popa
adc
lea
lock
cmpsl
das
loope
jns
or
outsb
inc
test
push
sbb
push
push
cmpsb
call
stc
mov
sub
xor
push
jb
es
idivb
mov
inc
fmull
call
adc
xor
adcl
fbld
enter
sbbb
mov
lock
mov
jecxz
mov
inc
movsb
ss
cs
mov
jne
sti
outsl
pop
clc
inc
test
repz
je
cs
stos
xchg
insl
std
in
mov
scas
or
lds
in
inc
and
jne
rol
add
mov
lods
bound
jecxz
imul
xlat
lock
pushl
dec
test
inc
call
mov
xchg
add
xor
fimull
jne
xor
push
ret
mov
ljmp
dec
xchg
cli
outsb
call
repnz
lcall
mov
iret
je
lds
or
push
cld
jmp
mov
aad
cmp
std
out
outsb
push
enter
jo
cmp
mov
or
pop
ja
fistpll
xchg
lret
shlb
and
mov
cld
xor
mov
out
stc
sub
pop
inc
pop
jae
xchg
lea
je
out
outsl
aad
cltd
jne
mov
dec
stos
add
cli
ljmp
rcrl
lods
mov
hlt
insl
inc
pop
pop
mov
jae
and
aas
imul
mov
add
int3
in
cmp
outsb
imul
mov
mov
and
adc
les
inc
shrl
sub
jl
das
sbb
lret
cld
dec
aad
das
movsl
in
mov
mov
aam
mov
nop
add
add
scas
mov
fisttpl
jnp
add
push
das
xor
push
add
stc
push
xor
aaa
jno
pushf
push
lods
dec
pushl
hlt
add
ss
inc
inc
and
xchg
rcrl
mov
mov
pushf
mov
and
and
ljmp
hlt
and
jg
popf
jecxz
jmp
std
mov
outsb
mov
jl
fmul
inc
dec
mov
xor
movsl
mov
xor
inc
mov
test
adc
inc
pop
push
out
int3
aad
add
adc
jne
mov
cmp
mov
loope
leave
mov
sbb
xchg
clc
xchg
loopne
mov
mov
rcrl
das
cltd
mov
inc
push
inc
mov
pop
cli
xchg
pop
shll
andl
pop
xor
aad
dec
pop
add
ficoml
sarb
mov
cld
pop
ja
imul
sbb
jmp
cmpsb
adc
gs
inc
in
and
pop
cmp
jp
test
in
fcoms
call
mov
loope
jae
sbb
int3
icebp
std
inc
loopne
sbb
mov
test
add
adc
pop
adc
xchg
inc
hlt
adc
pop
add
out
mov
inc
mov
fs
lods
inc
sbb
pop
sahf
fnstsw
xorb
sbb
outsl
ljmp
sbb
mov
lock
mov
das
cli
out
aam
and
outsl
add
sub
sbb
das
pushf
sbb
mov
out
cmp
nop
sub
inc
mov
mov
push
lock
mov
jmp
jp
jp
nop
and
testb
mov
lds
imul
push
mov
xorb
int
xchg
adc
mov
pop
addr16
mov
in
pop
sbb
loop
xor
dec
andb
popf
xor
adc
fdivrs
fstl
mov
call
mov
pop
and
adcl
dec
mov
adcb
lods
dec
lock
mov
jge
add
mov
jecxz
mov
mov
hlt
clc
pop
insl
mov
or
sbb
mov
xchg
and
ljmp
stc
cmp
lds
sub
add
outsb
lock
mov
shlb
test
sbb
mov
cmp
add
or
fstpl
loop
push
push
clc
dec
mov
les
int
rcrb
sbb
aad
mov
cmc
or
and
aas
cmp
aas
mov
xor
aad
ja
push
gs
mov
or
daa
mov
roll
mov
or
cmp
or
fisubrl
mov
inc
movq
adc
pop
ss
mov
sbbl
adc
mov
cmp
sbb
sub
fsubl
fstpt
stos
shrl
add
test
add
repz
mov
dec
dec
sub
lods
mov
pop
sub
pusha
xchg
adc
mov
aaa
adc
sbb
mov
or
push
mov
pop
subl
push
imul
dec
mov
add
daa
mov
inc
ret
and
pop
incb
adc
cmp
fs
inc
invd
dec
push
fcmovnu
inc
pop
push
cmp
mov
xchg
inc
insb
pop
imul
inc
insl
das
add
push
jb
mov
call
push
scas
lock
push
sub
pop
jno
add
mov
fs
inc
fmull
inc
cmc
mov
les
not
dec
nop
xor
inc
inc
bound
sbb
lret
aad
xlat
adc
rcll
aaa
inc
xor
mov
mov
mov
or
int
ret
jge
xor
adcl
pop
sbb
addr16
mov
lods
jmp
cmp
xchg
sub
cwtl
cmovo
jbe
ret
xor
les
outsl
test
loopne
mov
stos
cli
test
xor
push
bound
jbe
xor
sbb
scas
cmpsb
sub
mov
movsl
fcmovnu
ds
push
out
inc
add
sbb
lcall
es
adc
inc
adc
push
pusha
sbb
hlt
inc
test
cmp
aad
in
cld
outsl
push
insl
push
xchg
test
and
call
sbb
xchg
sbb
jb
xchg
or
jbe
ret
or
adc
adc
jo
mov
dec
or
fdivr
xchg
add
dec
imul
rol
pop
or
cmp
test
loop
lods
mov
les
scas
mov
mov
outsl
pushf
mov
push
stc
out
out
addr16
mov
push
add
das
roll
add
push
outsb
adc
outsl
or
dec
xlat
pop
push
icebp
mov
add
sub
pusha
mov
repz
repz
mov
stc
push
dec
sub
inc
push
fcoml
cmpsb
pop
adc
mov
stc
adc
mov
arpl
mov
cs
cmp
clc
outsl
pushf
dec
data16
xchg
mov
dec
push
cld
rorb
adc
sub
ljmp
sahf
push
popf
mov
ret
popa
sub
sti
es
imulb
test
mov
test
jle
or
pop
add
fadd
mov
xchg
fldt
inc
mov
or
ja
notb
jge
scas
and
repnz
pusha
testl
adc
scas
mov
fildll
mov
aaa
pop
xor
inc
pop
jecxz
stc
insl
addr16
je
xor
ret
mov
mov
push
test
sarb
cli
sub
mov
ljmp
dec
inc
add
lods
test
cli
mov
cmp
xchg
vaddss
dec
or
cmp
outsb
mov
adc
ja
sbb
sub
scas
and
minps
ret
push
cli
fldt
or
js
push
xor
dec
jle
push
mov
int3
sub
lret
or
pop
bound
cmpsb
js
xchg
cmp
mov
mov
aaa
push
add
cmpsl
sbb
mov
data16
and
mov
lods
adc
lcall
push
daa
mov
push
mov
mov
test
or
movsl
mov
loopne
dec
hlt
mov
sub
sub
xchg
aad
rcrb
add
mov
push
pop
je
or
rcrl
or
scas
mov
das
adcb
out
adc
xchg
pop
ljmp
loop
iret
mov
push
adc
add
mov
test
pop
or
xchg
push
insl
cmpb
cs
cwtl
icebp
shlb
decb
add
mov
shrd
jo
dec
and
mov
dec
jle
lea
loope
and
sahf
rclb
mov
dec
dec
div
mov
xorl
dec
adc
imul
cmp
jno
push
and
imul
shl
add
push
std
pop
arpl
mov
dec
cmp
push
sbbl
or
jo
les
ficoml
push
subl
loope
xchg
sub
mov
xchg
out
movsl
jmp
or
inc
jns
cmp
inc
dec
jo
push
cld
lahf
and
or
outsb
repz
stos
sti
or
out
mov
or
andl
pop
inc
lods
je
cltd
add
aam
aad
enter
inc
fsubrs
stos
fists
andb
popf
inc
lods
insl
jecxz
iret
aad
int3
fisubs
loopne
movsb
push
cmp
inc
insb
icebp
jge
nop
pop
sahf
sub
mov
or
xchg
daa
mov
xchg
or
pop
dec
insl
mov
xor
mov
sbb
inc
je
sub
dec
fsubl
xor
mov
bound
std
pop
xor
ds
leave
cmp
mov
mov
pop
jp
push
pop
fiadds
cmp
mov
inc
adc
ret
jo
shrb
js
mov
repz
sbb
or
mov
and
inc
jp
add
xor
pusha
mov
add
das
aam
xor
and
sbb
fisttpll
inc
aam
jno
outsb
xor
cmpsl
add
jns
imul
inc
lds
imul
mov
mov
shrb
push
rcl
out
or
push
mov
dec
jbe
xchg
jle
cltd
push
pop
clc
ret
xchg
popa
test
pushf
fistpl
fisubl
cmp
mov
mov
add
filds
testb
push
leave
je
sub
mov
cwtl
adc
mov
lea
mov
cmp
add
in
pop
lods
aas
frndint
pop
orb
pop
sbb
test
gs
cmp
jmp
mov
outsb
mov
add
daa
jge
push
cmpsl
xor
inc
or
outsl
in
or
and
mov
pop
sbb
sbb
push
inc
pop
bound
lret
ljmp
outsl
lods
aam
lock
cmp
aas
gs
mov
scas
outsb
insl
loopne
nop
push
rcrb
stc
dec
fisttps
cmpsb
push
enter
cli
stc
add
in
imul
loopne
into
add
arpl
outsb
add
scas
fcoml
dec
dec
sub
lock
dec
movsb
pop
inc
rcl
incl
es
jnp
daa
in
mov
fs
jbe
mov
and
ret
jle
mov
mov
outsb
ljmp
shrl
sub
jp
fwait
mov
outsl
hlt
mov
mov
adc
xchg
pop
push
fstl
jne
imul
outsl
cmc
xor
and
daa
sub
stos
dec
mov
rol
fistpll
pop
sti
and
jecxz
dec
xchg
inc
dec
aaa
not
mov
mov
or
ja
add
mov
test
test
jle
xor
mov
call
xor
shl
test
imul
aaa
jle
test
pusha
sbb
sbb
fidivrl
mov
push
sbb
les
jbe
lcall
push
ds
adc
nop
jne
mov
and
adc
mov
mov
xchg
adc
roll
rorl
add
cwtl
cmpsl
int
cmp
inc
shr
adc
mov
ljmp
mov
outsb
cmp
push
jno
cmp
sbbl
pushl
push
jle
loope
in
add
shlb
cmpsb
and
idiv
jge
cmp
es
pushf
bound
add
and
fistps
xor
jecxz
or
mov
out
idivb
fsts
sbb
push
mov
gs
clts
cmp
jl
add
and
fisubrs
and
addr16
fimull
fisttpl
add
lock
cmp
jne
adc
dec
and
ljmp
lods
mov
lcall
aaa
jl
mov
jo
js
pop
pop
fwait
outsb
fistps
dec
jmp
cmp
inc
xlat
cld
adc
adc
mov
jge
movsl
rol
xor
loopne
cs
in
addl
mov
jecxz
bound
pop
mov
and
stos
sbb
pop
ljmp
in
xor
ds
jmp
lock
push
outsb
dec
jne
repnz
push
icebp
push
xchg
pusha
push
in
inc
mov
adc
aaa
adc
dec
cs
cmp
jg
in
mov
dec
das
insl
stc
incl
aad
pop
fdivr
hlt
xor
std
dec
and
xor
mov
push
je
fldt
push
mov
pop
shrb
pop
sbb
mov
jmp
add
push
movsl
push
add
loope
sbb
fstpl
cmpsb
shll
shrb
mov
adc
or
dec
add
inc
leave
lock
jecxz
sub
xchg
push
clc
pushl
mov
inc
mov
mov
in
push
loopne
cli
imul
xor
adc
adc
sub
ret
fiaddl
or
cmpsb
scas
movsl
sbb
dec
xchg
jne
mov
incl
ja
sub
mov
jmp
mov
xchg
out
test
mov
sbb
stos
inc
bound
inc
sub
mov
inc
aaa
jle
ret
mov
subl
int3
inc
push
lds
or
mov
ja
mov
mov
mov
mov
jmp
adc
jmp
mov
dec
jle
fistpll
or
int
push
push
jmp
fincstp
adc
mov
xchg
out
jae
ss
cmp
dec
add
mov
inc
jmp
or
in
jbe
movsb
xchg
pop
das
clc
rol
aaa
rol
inc
andb
fidivrs
je
push
adc
push
mov
push
or
das
ficomps
xor
push
sbb
push
call
fsubrl
std
sbb
mov
loopne
shll
lods
fwait
push
or
lods
pop
inc
inc
xlat
sbb
adc
inc
mov
sbb
sub
shrb
movsl
inc
and
mov
xchg
std
into
popf
shrb
out
xchg
mov
dec
sub
mov
imul
aas
dec
or
out
xor
icebp
push
mov
and
sbb
cltd
mov
aaa
aaa
in
test
sub
cmp
jb
rorb
sub
pop
clc
mov
loop,pn
inc
movsb
jno
cmp
lods
push
inc
jl
aad
daa
ds
fdivl
lret
fisubs
adc
clc
lods
insl
jbe
adc
or
fsubrs
dec
addr16
arpl
int3
cltd
in
cld
xlat
mov
ja
jl
sbb
inc
push
and
lea
mov
aaa
push
mov
add
incb
mov
jne
fsubrl
push
or
cli
pop
inc
decl
js
insl
xchg
stos
popa
div
scas
sub
add
and
stc
movsl
enter
sbb
or
push
cwtl
lds
pop
pop
cld
mov
pop
push
cmp
mov
and
xchg
ss
cwtl
loopne
pop
xchg
cs
std
das
sub
and
push
pop
add
push
wbinvd
jle
pop
and
lds
cld
outsl
xor
push
sbb
decl
xchg
test
mov
cmp
add
pop
shll
dec
cmp
or
jg
push
nop
stc
adc
adc
enter
ljmp
add
insw
sbb
jecxz
ds
out
test
mov
push
push
xchg
xchg
and
mov
aam
push
hlt
es
sub
mov
shrb
mov
inc
call
mov
fsubs
shll
add
sbb
push
inc
cmp
std
jbe
and
jle
mov
cmp
cmp
pushf
cmpsb
fistpl
int3
jo
imul
adcl
cmp
adc
xor
je
icebp
mov
das
loope
and
mov
mov
sbb
and
mov
push
adc
jp
sbb
int3
inc
ret
stos
mov
sar
repnz
ljmp
jge
sub
pop
push
inc
mov
mov
and
bound
adc
or
insb
fdivl
mov
stos
dec
mov
mov
pop
mov
inc
into
outsb
jmp
pop
test
jnp
aaa
loop
loopne
inc
nop
mov
sbb
jno
test
dec
adc
mov
lods
add
movsl
jmp
cwtl
daa
test
jne
inc
mov
mov
pop
mov
mov
movsl
fildl
inc
jge
pop
pop
nop
neg
pop
add
aaa
std
push
add
fbld
or
rcrb
xchg
mov
push
lret
insl
out
push
lahf
pop
or
divl
push
fsubrl
push
clc
lods
lahf
outsb
cld
outsl
cmp
jmp
jl
movsl
and
mov
out
sbb
outsl
sti
or
test
sub
in
cmc
cmpsb
push
mov
push
int
adc
xchg
insl
cmp
insl
aad
lret
test
dec
ret
xor
mov
push
mov
mov
or
and
loopne
inc
sub
test
stc
mov
adc
stos
cmpsl
mov
push
push
sub
scas
clc
shlb
js
push
mov
mov
add
jl
add
xor
test
add
jle
jmp
in
in
fucom
popa
cmovns
sbb
inc
adc
mov
push
arpl
xor
mov
cmc
push
mov
add
ret
adc
aaa
fcoml
adc
pop
lea
mov
jl
inc
das
inc
fisttps
pushf
pop
enter
cmc
popf
jmp
dec
xchg
ja
shrl
movsl
daa
dec
mov
test
ret
aam
push
jno
scas
and
fsubp
dec
out
mov
sti
test
call
pushf
arpl
subl
sub
adc
mov
out
lcall
xchg
adc
fdivr
addb
in
push
rolb
dec
sub
mov
test
pusha
push
inc
ficoms
dec
ss
sub
in
mov
sub
fs
mov
daa
pop
hlt
pop
sti
sar
fidivrs
lret
sub
stos
into
lea
les
pusha
loope
mov
xchg
rcll
cmp
das
and
std
push
sbbb
adc
fwait
test
push
test
mov
adc
cmp
sub
mov
cmpsb
push
xor
test
fstpt
sbb
cmp
in
in
out
sub
xchg
sub
xchg
adc
movl
pop
sub
fistpll
lret
test
pop
dec
cmc
fwait
adc
jno
bound
loop
jbe
iret
mov
jle
fistpll
cmp
jnp
or
outsl
cmc
mov
push
test
push
sub
cmp
jl
mov
push
shlb
jne
clc
sub
call
gs
fsubrl
cmp
icebp
aaa
pop
lock
nop
mov
dec
dec
enter
test
xchg
aas
mov
and
add
les
int3
push
pop
adc
mov
mov
push
mov
jae
pop
adc
negb
add
pop
jmp
push
movsl
mov
dec
xchg
xchg
inc
cli
jle
das
mov
cmp
mov
imul
not
push
jg
sub
xchg
pop
dec
testl
cmpb
sub
js
lea
push
push
adc
pop
inc
movsl
jne
xorb
and
iret
dec
push
adc
scas
mov
aaa
jae
push
cltd
in
pop
pop
imul
je
mov
test
cwtl
fdivl
clc
jae
and
int
lock
mov
jp
push
inc
cld
inc
mov
sbb
adc
jle
sarb
jb
adc
hlt
dec
outsl
sub
inc
mov
inc
loope
adc
cmp
sti
outsl
sbb
jae
cmp
loopne
dec
jno
mov
aam
cltd
push
jns
xchg
loopne
in
icebp
push
pop
subb
mov
mov
or
lret
xchg
mov
int
and
sbb
mov
rcl
sbb
add
add
fisubrl
mov
scas
pop
sbb
loopne
insl
pushf
jge
dec
push
mov
ret
daa
ds
rcrl
dec
mov
pop
js
gs
mov
fdivp
xor
push
xor
pop
and
or
jg
pop
int3
loopne
xchg
out
xchg
dec
ds
orb
ljmp
popa
mov
dec
inc
and
aaa
test
adc
lcall
pop
push
pop
inc
cld
inc
lcall
iret
negl
jb
push
fstpt
mov
push
outsl
std
add
fiaddl
insl
rorl
jo
or
dec
pushf
or
push
mov
pusha
sub
jmp
mov
loop
push
call
inc
dec
cltd
mov
std
jg
xchg
cmp
pop
pop
int3
xor
add
int3
ljmp
inc
lea
push
outsl
das
adc
jnp
rcll
sbb
or
xchg
dec
je
fadds
movsb
adc
pop
mov
xor
fcompl
push
lea
mov
pavgw
scas
mov
rcrl
outsl
jno
adc
mov
rolb
cmp
mov
cmp
inc
push
jne
fwait
mov
test
mov
rcl
aad
push
jne
stos
mov
pusha
out
or
mov
les
fwait
orl
or
inc
pop
aaa
add
std
inc
dec
adc
mov
push
mov
movsl
and
fxch
xchg
mov
adc
addr16
mov
cli
mov
or
mov
mov
ss
push
gs
fnsave
stos
adc
ret
mov
mov
jecxz
repnz
inc
cmp
or
les
mov
sub
mov
and
rorl
cli
or
loopne
cli
cmc
mov
lds
mov
cmpb
adc
adc
cmc
aaa
stos
inc
push
mov
xchg
cmc
sbb
jnp
adc
popa
cwtl
fisubrl
push
jbe
jle
sub
mov
jae
loope
fstpl
aad
ret
pop
xchg
inc
jmp
and
xchg
push
adc
push
enter
inc
inc
mov
rcl
pop
popf
pop
and
ret
pop
add
add
push
loopne
push
sub
fbld
leave
cltd
aam
push
in
or
call
lret
xchg
outsl
push
adc
outsl
push
movsb
inc
jmp
push
lcall
icebp
inc
scas
std
or
loop
xor
jp
fmulp
pop
add
call
rclb
lret
dec
mov
adc
add
mov
outsl
add
les
fstpt
mov
imul
or
xor
adc
jo
lock
pusha
loop
dec
push
out
arpl
fistps
and
jge
push
adc
mov
push
bound
push
ret
mov
cwtl
and
dec
jb
movsl
and
pushf
fimull
mul
xor
adc
sub
mov
clc
cmp
mov
sub
add
pop
mov
adc
xchg
and
das
jo
push
in
xchg
fwait
cmp
pop
out
and
mov
decl
rcl
xor
clc
jne
jecxz
arpl
push
push
mov
cmc
adc
cmp
testl
pop
push
arpl
dec
aad
lret
lds
out
xchg
jle
imul
and
lea
and
or
sbb
adc
shrb
imul
jle
rorb
xchg
andb
xchg
mov
rclb
add
sbbb
pop
add
das
xchg
cmpb
sbb
jo
stos
adc
mov
sar
push
sub
push
addb
inc
dec
sub
pop
cmp
pop
in
mov
pop
add
outsl
js
or
shrl
es
add
sub
stos
lret
aaa
in
jo
or
add
sub
jmp
call
push
xchg
lock
pop
pop
push
mov
ret
addb
mov
push
test
push
shll
aaa
es
sbb
lock
arpl
push
mov
movsb
int3
test
sbb
push
mov
inc
es
out
xlat
jge
fadds
pop
icebp
outsl
lea
sbb
jno
lret
xchg
clc
std
in
pop
mov
cmp
push
data16
dec
or
mov
dec
mov
outsb
mov
ret
sub
sub
inc
shlb
jge
push
pop
and
in
stc
pop
test
push
xor
cmp
call
fnstsw
mov
xchg
test
sbb
pop
lods
add
cmp
cld
out
in
or
lods
mov
jno
sub
negb
or
aaa
mov
bound
xor
inc
adc
push
cld
push
in
adc
loope
insb
fcompl
sbb
pusha
test
push
pop
push
sbb
pop
clc
and
icebp
idivl
fwait
mov
mov
jns
scas
mov
cmp
call
scas
data16
out
rol
iret
aad
pop
jl
loop
sbb
mov
push
sbb
pop
imul
cmp
jp
mov
mov
jae
jg
sti
rcrl
push
icebp
fistpl
in
jbe
repnz
add
pushf
adc
jle
pop
cmpsl
outsl
idivl
push
add
out
test
loope
mov
and
test
push
mov
inc
fidivs
jne
sbb
mov
inc
jp
add
mov
push
ds
push
aad
outsl
loopne
lock
divl
mov
fnstcw
mov
sbb
stc
pop
sub
add
pop
add
sbb
sbb
pop
cmp
mov
daa
jno
outsb
test
shl
pop
aas
cmpsl
ds
lret
xor
test
mov
sbb
sbb
xchg
and
subl
dec
fucomip
jle
ljmp
xchg
inc
mov
pop
cmp
sbb
inc
cwtl
mov
push
push
or
std
cmp
aas
or
mov
daa
xchg
jb
xor
call
gs
xor
cli
sub
and
xchg
into
push
xor
inc
stos
sub
sbb
psubq
outsb
sub
or
jae
aam
insl
or
fbstp
das
into
imul
fdiv
aaa
dec
test
shrl
lcall
in
dec
test
push
mov
dec
movsb
add
insl
push
mov
cmpsl
shlb
fadd
popa
popf
mov
xchg
cli
sbb
or
add
in
cmpl
mov
lds
xchg
stos
addr16
in
aaa
enter
xor
fldcw
add
push
xchg
push
mov
cmp
popa
inc
jecxz
je
aad
cmp
sbb
cmpb
sahf
jbe
inc
inc
jne
jl
in
sbb
loope
outsl
sbb
sar
int3
jo
cs
popa
dec
icebp
mov
mov
test
inc
int3
inc
mov
or
or
loope
out
jmp
pushf
sti
mov
aad
jbe
inc
hlt
dec
xor
jno
dec
cli
lea
inc
shl
stc
rol
imul
jo
cmp
das
pop
and
xor
sbb
mov
jb
sbb
and
add
cld
mov
adc
add
inc
jne
fs
and
scas
mov
jp
xchg
xor
cmp
adc
rorl
push
insb
jae
jmp
dec
cmp
imul
call
jne
aaa
rcll
jnp
inc
hlt
push
or
add
or
mov
pop
cmp
sub
insb
xorb
stos
cmpsl
movl
pop
out
outsl
inc
hlt
xchg
dec
ja
inc
sub
jmp
incl
call
or
insb
mov
jae
pop
out
xor
test
adc
add
insl
add
pop
sub
insb
test
jl
ret
fs
mov
cmp
push
into
aam
neg
scas
mov
jo
mov
cld
lret
cmp
fcmovne
dec
sub
addr16
pop
mov
jbe
mov
pop
pop
push
jno
or
add
pop
jp
and
ffree
sarb
fsub
push
rcl
pop
inc
mov
push
les
outsb
imul
popa
clc
cmpsb
rolb
cmp
xchg
inc
add
mov
fisubs
ficompl
call
outsl
add
or
mov
icebp
enter
mov
mov
or
pop
or
mov
jg
das
mov
mov
jecxz
jmp
insl
imul
lret
mov
ds
cmpsb
xchg
sti
jg
mov
inc
mov
inc
in
lock
dec
mov
popa
dec
movsl
stos
adc
das
scas
in
and
adc
cmp
push
mov
lret
fdivs
imul
and
dec
mov
mov
sbb
mov
adc
iret
mov
shll
mov
jae
lcall
xor
or
in
movsb
mov
aaa
scas
sub
mov
aas
out
xor
hlt
pop
cmp
mov
push
sub
jge
imul
xor
dec
jl
test
xchg
inc
out
scas
push
push
mov
outsl
pop
push
loop
jp
sub
cld
pop
sbb
mov
inc
faddl
shrb
mov
inc
push
add
js
movaps
jnp
test
lret
or
out
or
ja
push
lock
adc
xor
call
xor
loopne
lahf
fld
sub
int3
mov
mov
std
inc
pop
jp
jle
lret
scas
pushf
adc
pop
or
mov
fistps
pop
roll
shll
icebp
inc
iret
bound
sbb
data16
push
inc
sub
lret
lahf
fists
call
not
add
mov
addb
adc
mov
adc
ja
and
enter
stos
cld
push
inc
push
and
sub
add
lret
pop
andb
fadd
adc
aam
or
in
dec
or
push
addb
add
xchg
push
push
movsl
sti
in
cli
pop
cli
lahf
mov
push
test
out
imul
das
fmull
cmp
fst
js
push
mov
sbb
mov
lock
inc
adc
xchg
sbb
lea
iret
orb
push
fnstcw
fsub
popa
push
idivb
xchg
sti
mov
jno
into
nop
mov
mov
int3
leave
mov
or
push
js
iret
mov
int
test
inc
mov
mov
sbb
sub
inc
and
addr16
inc
stc
popa
pop
mov
subl
scas
aaa
cmc
jg
int
add
loopne
loop
int
jb
sbb
fistpl
push
pop
icebp
inc
ds
test
daa
fwait
add
mov
sarl
xor
or
xchg
popf
push
jle
mov
fwait
pop
jg
jge
sbb
fisubs
add
jbe
pop
or
pop
jb
ret
scas
xchg
lret
loopne
call
test
es
cmp
fcoms
mov
adc
mov
fwait
clc
lea
xchg
cmp
arpl
add
addr16
and
mov
fwait
sti
outsl
sbb
inc
pop
pop
adc
inc
movsb
stos
test
and
mov
aam
rorb
ret
mov
outsl
pushl
into
inc
repnz
int
lcall
mov
cli
es
pop
mov
dec
lret
sub
mov
sbb
out
test
dec
negb
push
push
test
ja
cmp
ss
andl
bound
xchg
cmp
mov
popa
imul
or
addb
popa
pop
scas
adc
add
xchg
adc
les
adc
push
push
lret
test
ss
sbb
add
inc
cs
xor
loope
call
lods
jbe
dec
iret
dec
add
scas
mov
mov
jmp
cmpsb
dec
andl
xchg
inc
add
pushl
scas
js
rcrb
hlt
lods
ja
sub
dec
scas
lods
loopne
rorb
and
cmc
adc
stc
xchg
lods
addb
sub
fimull
mov
cmp
in
mov
scas
push
mov
aaa
dec
incl
cmp
dec
cmc
ja
mov
insb
xor
sbb
imul
xor
adcb
xchg
adc
rcll
cld
push
add
or
nop
insl
insb
out
sub
dec
jmp
sbb
cmp
push
mov
sbb
dec
xchg
or
data16
movsl
xchg
xchg
nop
mov
shrb
adc
mov
clc
ret
add
test
or
call
mov
sub
xchg
pop
add
pop
pop
or
fiadds
bound
aas
lds
aad
mov
mov
test
loop
xchg
inc
mov
mov
popa
push
jl
adc
cmp
push
mov
inc
inc
aaa
orb
imul
cmp
imul
or
fcomip
push
mov
lock
cmp
sbb
push
sub
lds
stos
clc
jge
test
ret
pop
jmp
ffreep
adc
mov
xchg
fs
aad
scas
adc
push
clc
in
shl
push
jo
mov
rorl
out
push
mov
cmp
add
out
pop
out
add
test
or
std
movsl
jg
mov
daa
and
loope,pt
fnstsw
xchg
pop
adc
out
icebp
aas
out
adc
nop
clc
add
call
jo
add
lret
adc
fildll
sbb
roll
pop
jmp
sbb
aas
push
mov
adc
dec
or
sbb
dec
repnz
popa
cmp
jmp
insl
xor
mov
lock
repnz
sti
jae
sub
movsl
mov
jae
xchg
movsl
das
jge
push
rcrb
lea
rcrl
cwtl
push
and
push
cmp
cmp
movsl
adc
ret
mov
outsl
or
test
loop
ja
cs
ficoml
cli
leave
push
in
adc
out
jno
and
shll
das
sub
mov
fs
sarl
inc
sub
push
inc
into
dec
mov
mov
ret
jno
lahf
push
push
mov
cs
inc
push
and
push
jmp
es
cmp
shlb
push
addb
sub
jb
jae
mov
std
adc
bound
loop
dec
lock
xor
push
sti
mov
mov
mov
loope
mov
cld
mov
dec
mov
bound
add
sub
lret
mov
enter
jb
and
cs
ret
adc
mov
pop
loopne
adc
test
and
xchg
aaa
dec
pushf
jp
fwait
mov
jle
sbb
push
pusha
sub
shl
jp,pn
sbb
and
shll
mov
outsl
and
xlat
aad
outsb
mov
xchg
scas
test
push
nop
jb
pop
or
cmp
inc
add
pop
pop
sbb
inc
adc
or
xor
insl
test
adc
mov
test
ffree
push
jb
sub
das
shlb
push
scas
sbbb
stos
sub
pop
dec
jg
int
adc
ret
lcall
jle
mov
add
sbb
xchg
rcl
inc
cmp
xchg
sbb
mov
pop
roll
das
cmp
mov
les
add
xor
xor
out
inc
adcl
sub
push
sub
jecxz
mov
mov
pop
add
inc
jle
jo
pop
mov
fdivr
mov
pop
das
adc
mov
mov
out
rcr
jnp
icebp
cmp
out
cli
mov
push
es
push
data16
pop
andl
movb
lds
push
fwait
out
or
xor
jo
dec
fistps
cld
in
scas
sub
mov
leave
cmp
jae
xor
roll
add
rorb
or
scas
lcall
pushf
jnp
rol
mov
mov
decl
cmp
jae
push
mov
cli
push
icebp
sbb
sub
pop
dec
stc
movsl
sbb
aaa
or
loope
mov
pop
jbe
mov
mov
data16
jl
inc
fnstcw
pop
cmpsb
ret
sarl
pop
jl
pop
mov
scas
and
daa
orl
fsub
int
loope
stos
daa
xchg
pop
push
fcomip
movsl
mov
xchg
aaa
leave
rorl
lcall
test
adc
ja
sub
xchg
inc
cwtl
adc
fwait
mov
movsl
xor
adc
cmc
or
mov
test
xchg
lret
mov
shlb
dec
loopne
fisubrl
hlt
imul
gs
jle
lahf
je
jmp
roll
and
insb
cmp
jecxz
lret
lods
cwtl
mov
popa
sub
int
outsb
mov
pop
inc
nop
push
addl
push
pusha
or
ret
sti
mov
ja
jmp
pop
inc
sub
push
mov
add
fdivs
jp
outsl
outsb
xor
xchg
lds
cltd
testl
mov
push
mov
jae
push
popl
imul
xlat
lods
cmc
das
xor
subl
pop
shrb
call
cmpb
fucomip
pop
xor
aas
jo
dec
sub
xlat
popf
rol
mov
jmp
or
out
sbb
add
pop
add
movsb
mov
dec
sbb
mov
jno
bound
mov
repz
push
adc
jo
adc
adc
push
add
gs
out
push
jle
cwtl
dec
lods
or
add
pushf
fs
inc
stos
out
mov
xchg
or
mov
xor
out
jbe
movsl
pop
push
mov
inc
int3
fidivl
cs
adc
fsubrs
dec
xchg
out
cmpsl
or
addr16
fdivp
jg
or
add
out
push
push
enter
je
mov
cmp
cltd
adc
inc
rclb
into
sbb
add
mov
inc
pop
push
push
inc
mov
pop
and
mov
int3
cmpsl
cmp
cli
filds
mov
dec
push
dec
push
loope
lea
ljmp
mov
stos
inc
and
rorl
xchg
cmpb
ret
out
mov
daa
push
mov
lea
lods
add
cmpl
les
dec
cmp
sbb
mov
shrl
jle
dec
add
xchg
insb
sub
push
push
pusha
xchg
sub
scas
or
js
adc
dec
hlt
rcr
call
roll
cwtl
hlt
inc
out
clc
mov
daa
adc
dec
dec
mov
ficomps
out
lahf
mov
cli
push
insb
out
add
rorl
dec
cmp
xchg
pop
rep
inc
insl
lock
mov
adc
mov
push
stc
pop
movsl
into
push
bound
mov
push
in
cmp
xlat
push
inc
inc
inc
mov
pop
stos
fildll
rol
outsb
int
inc
push
inc
inc
push
rclb
in
aaa
add
or
xchg
ljmp
orl
sub
xchg
sbb
or
inc
pop
hlt
mov
pop
or
xchg
das
inc
das
std
ret
cmpsb
int
ss
cmp
pop
cld
in
ds
push
mov
or
jmp
fldln2
mov
lea
lds
mov
pop
dec
pop
bound
xor
and
inc
hlt
sbb
pop
insb
insb
das
andb
popf
test
rcrb
add
add
xchg
pop
jnp
movsb
mov
outsl
cmp
lret
or
stos
sub
adc
mov
insl
jmp
arpl
enter
mov
movsb
mov
popa
movsl
push
mov
inc
je
cs
dec
or
mov
imul
inc
sub
cmp
lods
roll
out
shl
std
xor
sbb
addr16
sub
lea
pop
xchg
rcrb
push
rorb
fs
mov
adcb
xlat
cltd
mov
lahf
sub
lock
test
aam
mov
and
pop
loopne
leave
outsl
insl
rcrb
xchg
add
inc
and
push
js
xor
imul
sub
dec
add
pop
divl
outsl
shl
push
mov
dec
or
imul
ljmp
ja
addr16
and
xor
jo
add
pop
das
outsl
iret
or
lret
push
lret
jno
sti
push
divb
mov
adc
xchg
push
add
pop
xchg
or
sub
cmpsb
or
fs
mov
outsb
jl
xor
mov
dec
iret
xchg
in
push
fidivrs
mov
pop
enter
mov
pop
lahf
pop
repnz
es
out
in
jbe
rcr
and
push
mov
mov
add
orb
cmpsl
and
shlb
sub
in
sbb
inc
clc
fbld
icebp
jo
and
xor
xor
xlat
xchg
xor
addr16
loop
push
outsl
sti
fwait
imul
pop
in
je
out
mov
sbb
pop
mov
push
sbb
mov
sahf
adc
fmul
or
lcall
mov
fcoms
insb
test
test
xchg
or
add
push
cmp
aad
mov
xor
xor
push
mov
imul
jecxz
cmp
in
fists
shll
add
sub
mov
xorb
out
xchg
stc
shll
jne
push
orl
fisubrs
add
inc
repnz
push
pop
inc
or
mov
lret
stc
or
mov
repnz
int
and
icebp
test
mov
jl
sbb
jg
push
sub
inc
int3
adc
pusha
ret
inc
ja
pop
bound
int3
mov
pop
and
mov
aaa
in
rclb
mov
ret
jmp
pop
lcall
icebp
sbb
leave
and
int3
icebp
mov
fildl
and
fldt
lcall
add
jle
movsl
test
fbld
pop
push
or
jle
addr16
pop
cli
movb
pop
je
shlb
add
data16
sbb
dec
pop
sbb
hlt
popa
fistpll
clc
negb
xor
mov
xchg
mov
sub
push
push
mov
push
filds
mov
ret
mov
ror
rcrl
out
bound
cmc
mov
cmp
pop
aaa
xchg
outsb
sub
imul
cwtl
inc
loopne
adc
cmp
mov
mov
mov
mov
fisttpl
or
adc
daa
std
add
test
lods
mov
andl
imul
fcmovbe
ss
incl
enter
xor
inc
or
lcall
jmp
pop
cmp
xlat
or
cmpsb
dec
test
add
pop
negb
add
xchg
xchg
jmp
add
jp
movsb
mov
xor
orb
cltd
push
lret
or
inc
fsubrl
push
sub
xor
shr
or
into
pop
add
xor
sub
mov
xor
insb
pop
test
outsl
movsl
test
sbb
adc
loop
bound
roll
test
out
jo
mov
ja
lods
test
push
dec
icebp
in
push
xchg
call
insl
in
ss
cmp
orb
loope
cld
aad
inc
insl
mov
test
push
xchg
adc
fstp
cmp
enter
mov
mov
pop
notb
mov
and
mov
aad
sbb
mov
hlt
add
push
sti
mov
jno
push
imul
gs
fisttps
or
push
lods
jmp
ficomps
out
orl
mov
cld
inc
lcall
dec
mov
mov
push
outsl
outsl
pop
cmp
xor
dec
adc
orb
and
xor
xor
push
add
cs
mov
sbb
lods
jl
test
push
push
jbe
ds
push
lret
inc
jge
fs
cmpsl
dec
jle
mov
cli
inc
sahf
mov
aas
jp
shlb
jae
push
decb
mov
xchg
mov
into
mov
in
xchg
inc
shl
adc
add
pop
fistpll
xorl
add
jecxz
mov
fcmovnu
lahf
pusha
int3
mulb
push
dec
cmc
add
sti
pusha
or
cmpsl
ss
inc
mov
call
sbbl
shll
popa
jbe
push
xchg
xor
pop
sub
out
sbb
pop
mov
and
mov
sub
pop
mov
jno
fldl
loope
fdivs
mov
inc
push
insl
push
mov
mov
fdivrs
pop
ds
loopne
xchg
xchg
cs
or
xor
or
cmc
or
lods
push
imul
cmp
inc
lret
rcl
fidivrl
sahf
jb
adc
stos
cmp
call
fiadds
lock
or
or
out
pusha
lock
mov
or
lea
sbb
or
int3
call
mov
outsl
dec
jecxz
mov
and
cld
xchg
cli
shlb
mov
fxch
test
sbb
cmp
test
ret
ret
xchg
fnsave
lret
sbb
mov
roll
push
rolb
push
pop
xor
aam
lret
movsb
hlt
and
xchg
or
outsl
add
dec
sbbb
push
add
repz
jl
iret
outsb
ljmp
je
mov
ss
shlb
mov
mov
shl
add
cld
scas
lret
int
mov
out
jo
pop
jp
push
ss
test
mov
and
pop
jo
pop
jb
jne
enter
add
subb
scas
insl
mov
pop
or
or
call
fcmove
dec
outsl
ljmp
jge
or
outsb
ljmp
sbb
or
mov
dec
daa
sub
lret
testl
les
sub
lods
aaa
xor
push
or
mov
imul
rcrb
sahf
push
pushl
nop
cmp
inc
jb
xor
mov
iret
cmpsl
orb
push
adc
add
xchg
inc
push
cld
mov
outsb
or
push
fildll
mov
inc
mov
sub
adc
cmpsl
jmp
lods
add
loop
imul
mov
mov
dec
loop
mov
jne
ds
cmp
cmp
ficoms
cmp
jge
outsl
pop
mov
mov
mov
std
or
add
bound
sti
outsl
daa
rolb
inc
mov
es
mov
hlt
xchg
clc
lret
leave
cmc
sbb
xchg
shr
gs
lock
pop
xchg
out
in
mov
push
lods
push
leave
push
xor
add
inc
iret
mov
negb
test
std
bnd
cli
outsl
xchg
fidivl
adc
add
aam
add
jne
sti
movsb
cmpsb
xchg
cmp
adc
adc
test
rcrl
inc
addb
xchg
jp
cmp
mov
xchg
subl
fdivl
data16
arpl
inc
adc
pop
fisttpll
xchg
push
adc
xchg
mov
bound
or
ret
add
movsl
ffreep
jo
mov
inc
std
je
lcall
es
aad
cmc
mov
xor
shll
sbb
jge
add
cltd
jle
inc
sbb
jb
mov
enter
fisubs
ds
in
imul
xor
ss
pusha
xor
mov
insl
iret
imul
out
jecxz
call
filds
clc
leave
and
adc
pop
push
sub
idiv
shrb
jmp
lock
jmp
jp
add
adc
ja
cmc
mov
es
aaa
inc
lods
filds
pop
dec
addr16
sarb
xor
fcom
cmp
push
pop
ret
xor
or
xor
mov
das
dec
sbb
pusha
cmp
hlt
pop
ficomps
xchg
inc
jo
mov
je
push
mov
pop
cmp
xchg
cs
fbstp
and
in
adc
fisttpll
and
ja
call
mov
jp
or
adc
cmpsb
sbb
xchg
jae
fildll
loop
cld
in
cmp
mov
xchg
and
push
pop
out
fistpll
push
dec
andb
dec
std
ds
mov
insb
xchg
call
fcoml
mov
inc
push
or
cmp
fsubrs
shlb
mov
ret
addl
cmpsl
mov
sub
jge
cmp
ja
adc
jle
inc
popf
mov
sbb
std
mov
mov
inc
mov
inc
int
repz
mov
enter
js
loopne
mov
scas
and
jg
pop
cmp
and
mov
adcb
mov
inc
adc
sbb
int
popa
add
cmpsb
jne
or
in
aaa
mov
out
mul
dec
vminps
dec
push
ljmp
insl
lods
pop
fadds
aas
add
loope
mov
adc
and
int3
push
mov
rclb
push
mov
pop
cwtl
xor
roll
mov
in
loopne
fldcw
arpl
movsl
adc
mov
stc
push
mov
mov
enter
or
sbb
mov
out
loopne
cmc
cmp
and
roll
inc
inc
dec
pusha
movsl
outsl
jl
fstl
mov
std
mov
and
movl
jnp
xlat
pop
sbb
or
push
test
mov
mov
int3
std
loopne
loopne
push
into
leave
xchg
aas
sbb
xchg
in
ja
xchg
aad
mov
cmp
outsl
inc
ss
incl
icebp
test
jno,pn
push
data16
jo
enter
pop
mov
dec
pop
mov
sbb
mov
fs
or
push
pop
mov
test
insl
pop
cltd
mov
jb
das
pop
ss
rorb
les
mov
aad
jne
push
lcall
push
cmpsl
mov
rcll
stc
fwait
and
push
sbb
out
dec
jle
cmp
arpl
fs
push
fmull
jge
inc
sti
call
pop
lds
insb
call
and
adc
xor
loope
outsb
sbb
lcall
add
test
test
add
adc
cmp
repnz
ja
ljmp
jno
pusha
add
jo,pt
inc
dec
jl
pop
clc
sbb
pop
mov
push
push
les
pop
jg
movsb
lret
cmp
sub
pop
test
pop
xor
jbe
mov
jle
into
aaa
xor
mov
fisttpl
in
lahf
test
test
push
xchg
fsubrp
mov
hlt
std
adc
test
push
test
stc
insb
aad
leave
sub
es
push
xchg
cmpsb
pushf
addl
lods
mov
fsubrp
sbb
in
int
out
dec
stos
test
andb
stos
loopne
push
mov
mov
sub
xchg
popf
in
pop
push
cmp
cmpsl
ja
sub
jg
hlt
xchg
sbb
mov
fisttpl
pop
call
mov
and
push
adc
add
xchg
mov
push
insb
je
pusha
loope
loope
leave
jae
out
or
leave
sub
push
adc
adc
shrb
cmp
in
rclb
push
fsubs
pop
push
sbb
js
notb
jl
adc
jge
addr16
mov
mov
int
xor
sbb
aaa
cld
shrb
inc
or
jnp
dec
or
push
or
xchg
inc
xor
stos
arpl
das
jecxz
xchg
xor
mov
ja
leave
mov
subl
movsl
imul
pushf
ljmp
push
inc
ds
cmp
jl
xchg
or
pop
das
push
rol
sub
loopne
in
rclb
pop
pop
dec
inc
icebp
cs
dec
hlt
cmp
or
fwait
stos
loopne
xchg
daa
in
fwait
clc
test
ss
push
and
popa
ljmp
adc
mov
fdivl
add
or
call
std
test
decl
aam
xor
jbe
cld
push
loop
aaa
push
dec
cmp
push
aaa
sbb
incl
pop
mov
sub
xorb
loop
test
inc
lahf
jge
inc
out
sub
xchg
pop
pop
mov
sbb
mov
rclb
adc
lret
daa
sbb
iret
cmc
fsts
lret
int
xor
shl
add
push
loop
frstor
jmp
mulb
jge
shll
fnstcw
cmpsb
je
lods
ja
les
lods
addr16
mov
addr16
mov
add
xchg
cmpsl
push
and
inc
inc
jmp
mov
xchg
js
lock
rorb
mov
lods
dec
aad
addb
data16
fdivl
pushf
sti
sub
pop
outsb
mov
cmp
cwtl
jnp
roll
insb
lea
push
in
mov
loope
das
jp
push
sbb
jno
imul
pcmpgtb
notl
aaa
mov
or
fs
icebp
mov
jnp
and
inc
push
mov
ds
shr
jg
mov
ret
outsl
repz
xor
mov
int
inc
nop
aad
lret
or
and
leave
mov
es
lahf
sub
std
pushf
mov
clc
xchg
mov
sbb
mov
lods
lock
cmp
add
mov
and
in
adc
and
ret
jmp
add
insl
ljmp
or
cwtl
into
cmp
add
mov
sub
lds
testl
inc
adc
pusha
xorb
jo
xor
mov
add
cmp
inc
js
test
mov
pop
clc
push
pop
pop
ljmp
mov
xor
aas
stos
push
loop
iret
cmp
pop
ja
movl
fwait
test
mov
cld
test
sbb
outsl
add
int3
cwtl
cmpl
incl
stc
push
mov
sub
out
fidivl
sbb
cmp
fadds
lds
test
push
and
and
dec
push
lcall
outsl
push
cmp
inc
sub
xor
je
pop
xchg
or
sub
push
loopne
loopne
pop
and
xor
incb
xor
aaa
cmc
cmpsl
mov
jp
ror
and
sahf
clc
adc
aaa
mov
sbb
cld
mov
add
lret
push
fs
test
ss
adc
call
mov
pop
aaa
cmc
xchg
and
js
inc
roll
fstpl
and
addb
adcl
mov
stc
adc
sbb
adc
fdivr
insl
aaa
inc
adc
mov
adc
idiv
add
or
jle
clc
cmp
nop
dec
fsubl
mov
jne
clc
aaa
jno
sub
into
dec
push
repnz
push
les
repnz
xlat
mov
enter
or
and
jp
add
clc
movsb
fcomip
mov
loopne
or
inc
sub
jg
add
cmp
mov
xchg
cmp
sub
imul
xchg
jmp
mov
mov
add
call
std
ret
lods
ja
test
add
int
add
imulb
or
jae
in
mov
jmp
and
and
xor
sub
mov
mov
fmull
cld
xor
add
fimuls
nop
clc
inc
or
or
inc
mov
ljmp
xor
test
sbb
add
test
adc
clc
movb
movsb
mov
sub
loope
test
pushf
in
cmp
std
shll
stos
add
sub
mov
push
ja
rcr
push
mov
jl
imul
outsb
jge
pusha
sub
hlt
aad
cs
pop
sub
cmp
andl
notl
add
mov
push
mov
pop
lea
xchg
push
cmp
push
adc
push
inc
jo
and
shl
in
sbb
mov
lock
gs
jb
popf
clc
inc
notb
ficoms
adc
xor
dec
and
shl
or
pop
jp
mov
rcll
js
rclb
ffree
mov
mov
sub
sbb
fidivrl
aas
inc
and
mov
sub
aaa
shlb
jl
xchg
jae
call
sub
mov
xor
push
mov
push
dec
push
cmp
testb
add
insl
fsubr
repz
out
mov
ja
adc
inc
dec
roll
outsb
cs
mov
adc
add
pop
push
mov
out
xor
dec
adc
insb
add
mov
sbb
and
pop
cs
and
fistps
clc
add
je
nop
imul
mov
push
push
int
mov
add
in
out
dec
inc
cmp
outsb
mov
icebp
mov
sub
fisttps
push
nop
aam
fadds
outsb
xor
mov
or
test
jmp
std
testb
or
inc
aaa
or
ds
jno
mov
rorb
cwtl
mov
stos
js
test
loopne
push
xor
cld
ror
roll
addb
in
test
fidivrl
xchg
mov
das
inc
jns
pop
cltd
sub
mov
and
mov
mov
je
fisubl
xchg
loop
jmp
add
push
mov
mov
jo
xchg
push
cmp
cmp
mov
scas
lret
je
inc
std
cli
call
xchg
mov
repnz
cwtl
mov
out
fadds
fbstp
cmp
lods
stos
xchg
sub
or
mov
lcall
or
sub
je
std
xchg
jmp
add
cmpsl
cwtl
or
bound
ss
in
pop
insl
add
mov
xor
mov
outsb
cmp
aam
cli
or
pop
scas
xchg
xor
lock
mov
inc
xchg
jecxz
or
adc
mov
jmp
jle
jne
push
fadds
pop
movsl
jo
xor
add
pop
movsl
lods
jp
pop
loop
or
push
mov
push
cmpsb
inc
inc
xchg
inc
push
int3
mov
cmc
in
inc
mov
push
out
push
and
outsl
cld
lahf
pop
adc
and
or
jbe
fdivrl
pop
je
adc
clc
dec
mov
xor
mull
pop
inc
outsl
test
push
es
fst
mov
sub
popa
push
add
sbb
lret
lock
out
inc
cmp
sub
pop
adc
test
xor
sbb
pop
icebp
mov
dec
lret
iret
lret
test
add
cmpsb
call
jo
jl
sub
call
stos
fisubl
pop
xor
add
repnz
ljmp
jo
add
out
loopne
fnstsw
mov
fnstsw
adcb
push
in
lea
mov
out
xchg
inc
xorl
pop
and
sbb
xlat
jb
xor
test
mov
cmpsb
pop
test
call
fists
aaa
aam
inc
sub
imul
out
sarb
scas
sub
xchg
shr
mov
pop
cltd
cmc
cmpsb
and
ds
jae
xchg
pop
push
mov
xchg
test
pop
aas
dec
sub
mov
or
ja
or
push
push
mov
shrb
ds
mov
pop
popa
mov
int3
sub
mov
mov
push
sti
mov
adc
push
loope
lds
ljmp
add
sbb
mov
or
add
jne
loop
mov
cli
dec
inc
push
rcrl
int
orl
fists
test
mov
pusha
addb
pop
push
mov
and
add
ja
cli
outsl
into
inc
les
ds
sub
mov
add
jb
xor
pop
sbb
adc
and
inc
xchg
lret
rorb
mov
mov
aaa
cs
lods
push
mulb
icebp
adc
and
dec
inc
fildll
test
out
mov
xchg
enter
sub
mov
add
push
push
mov
daa
adcb
dec
and
jmp
xorl
add
mov
mov
jb
je
in
andb
ja
push
pop
add
jo
xchg
adc
jo
sub
mov
pop
mov
pop
sbb
or
roll
xchg
outsl
pop
adc
mov
adc
arpl
push
inc
cli
movb
cmp
push
inc
les
mov
repz
xchg
push
push
push
outsl
mov
xchg
imul
sbb
mov
xchg
and
das
repnz
mov
dec
cmpxchg
addr16
xchg
jb
sub
xlat
push
divb
loope
les
add
fildl
sti
jge
loope
and
loopne
sub
dec
pop
mov
xor
pop
jle
adc
and
invd
mov
call
jp
fsubl
mov
in
sbb
aas
iret
mov
shl
mov
or
sub
mov
push
adc
pusha
pushl
inc
mov
inc
je
and
popa
out
xor
mov
data16
mov
movsl
stos
cld
adc
mov
push
push
inc
sbb
and
push
mov
xchg
outsl
add
cli
dec
es
push
mov
je
sar
lods
test
xorb
add
cmc
sub
adc
sub
or
lcall
xchg
test
adc
shll
xlat
cmp
xor
xchg
sti
testb
sbb
orb
jge
adc
jne
mov
push
inc
jge
mov
mov
dec
in
inc
lods
adc
lea
in
pop
fcmovb
jno
ja
and
inc
xchg
mov
push
adc
push
test
sbb
add
cld
cmp
adc
or
loop
cwtl
push
sbbl
mov
mov
jns
lock
mov
xor
inc
lret
mov
arpl
lods
inc
cmp
dec
xchg
das
popa
rcl
xchg
insl
xorl
pusha
jge
jl
loopne
jb
add
gs
mov
add
add
or
sti
aas
and
stos
out
sub
cs
add
in
fcmovu
ss
icebp
test
cmp
mov
jns
adc
mov
push
jae
or
or
mov
mov
outsl
mov
push
daa
les
movsl
xchg
into
xlat
sbb
dec
ret
rcrl
sub
cmp
push
and
push
sbb
adc
test
es
mov
add
dec
cmp
cmp
fimull
scas
xor
add
pop
add
mov
or
fwait
xor
xchg
fsts
and
daa
into
test
and
mov
mov
inc
mov
nop
push
lahf
jp
sub
mov
js
jns
adcb
sbb
cs
je
aam
es
mov
cmp
xchg
test
fstp
std
add
sub
loopne
imul
push
lcall
jle
jmp
mov
mov
jge
repz
adc
jle
mov
adc
testl
add
push
lahf
and
jno
cmp
js
popa
fsubs
mov
sub
or
push
xchg
mov
test
outsl
jge
sbb
into
inc
jmp
in
out
or
outsl
cmp
sbb
jnp
mov
cwtl
add
sub
icebp
ret
mov
ljmp
dec
mov
das
cld
mov
inc
add
stos
std
xor
mov
mov
lea
adc
pop
add
lock
dec
jb
imulb
pop
mov
pop
cmp
outsb
xchg
xchg
dec
rcrb
inc
cli
rclb
pop
xor
cld
pop
jo
or
ror
jp,pn
daa
bound
jbe
jg
mov
mov
mov
inc
jge
pop
mov
push
inc
inc
fidivrs
jno
pop
and
xor
mov
mov
inc
inc
sar
sbb
out
ljmp
gs
scas
orb
aam
call
loopne
or
push
and
ljmp
sbb
in
aaa
push
ficompl
add
or
mov
and
orps
addb
jb
push
mov
lcall
lods
or
cli
adc
pop
mov
pusha
in
cli
mov
ffreep
cmp
adc
incl
push
push
jp
lea
mov
sub
sbb
scas
mov
xchg
cmp
out
xor
mov
test
xchg
mov
adc
push
or
lahf
push
mov
add
and
and
adc
mov
scas
xlat
dec
xorb
xchg
jno
and
or
repz
pmullw
cmp
inc
ljmp
outsl
dec
mov
out
repz
mov
mov
daa
test
mov
xchg
cli
inc
push
inc
sbb
sbb
and
mov
mov
xor
xsaves
push
or
test
cmpsb
dec
sbb
xor
push
adc
lods
dec
pop
adc
and
loop
adc
add
sarl
nop
icebp
xor
std
pop
mov
pop
stos
test
fcomi
movd
sbb
sub
outsb
push
cs
repnz
push
rcrl
mov
cmp
cwtl
lock
xor
cmp
pop
outsl
aaa
mov
les
add
jbe
fnstcw
fists
ds
pop
mov
pop
xchg
jg
adc
loop
cld
and
in
push
rcrl
arpl
loope
stos
pop
jg
in
inc
inc
dec
jmp
mov
subb
xor
out
in
loope
cmc
ljmp
je
orb
mov
mov
pop
nopl
cmp
les
sbb
adc
mov
fidivrl
lahf
dec
pop
or
xor
pop
je
jmp
jecxz
je
ljmp
mov
add
icebp
sbb
fbld
cli
mov
add
sub
mov
popf
xor
out
pop
add
bound
add
jo
outsl
movsl
test
cmp
xchg
and
shlb
lock
xchg
or
mov
ss
xor
inc
mov
add
mov
cwtl
sbbl
fistpll
adc
aas
cmp
shll
mov
imul
mov
sti
insb
mov
sti
movsl
loopne
stos
std
icebp
and
stc
sub
fldl
inc
movsb
dec
xor
adc
add
xor
aad
or
js
int
out
rclb
dec
test
pop
inc
cmp
jae
or
xor
add
ficompl
icebp
div
dec
xor
dec
ljmp
insl
cmp
subl
or
mov
jno
push
fisttpl
jl
sbb
inc
ret
sub
test
fistpl
lods
loopne
loope
outsl
add
or
fstl
fidivl
cs
test
inc
mov
outsb
dec
pop
cmc
pusha
ds
ljmp
xchg
nop
cld
or
inc
push
and
push
imul
dec
fstpl
lock
je
shll
jp
push
pop
data16
push
and
sub
or
inc
inc
and
push
vpaddq
or
inc
imul
subb
cmpsb
mov
icebp
incb
add
pop
addr16
adc
lret
inc
fcompl
mov
loopne
fdivr
fcmovnb
lret
fwait
dec
aas
add
dec
fistpll
out
fdivrp
cli
and
out
rolb
jecxz
adc
das
cld
fcoms
jne
add
and
jo
outsb
ja
and
dec
inc
js
fwait
add
and
add
aaa
stos
sbb
dec
push
cmp
mov
out
jb
adc
fs
pop
fs
ds
push
mov
xchg
jp
mov
lds
and
pop
rolb
mov
mov
add
jo
nop
inc
xchg
les
xchg
and
rcll
fucom
lods
add
xor
mov
lods
push
mov
mov
ds
cs
pusha
xor
repz
fwait
pop
clc
push
or
pop
or
mov
push
xor
flds
fsubs
xchg
pop
fldcw
mov
push
in
cmp
push
cwtl
xchg
jmp
mov
adc
outsb
aam
inc
loop
cmpsb
mov
cmp
pop
cs
and
jmp
lret
call
mov
xchg
jle
mov
ljmp
outsl
fists
and
jge
mov
jle
pop
outsl
repnz
xor
jle
push
inc
fwait
into
sbbl
jmp
js
push
outsl
leave
bound
mov
mov
jno
jge
subl
mov
cmc
pop
fcmovnb
rorb
daa
xorb
aaa
push
dec
cmp
xchg
pusha
imul
ret
ret
mov
add
bound
inc
push
dec
lahf
mov
nop
fbstp
jo
cmp
out
cmp
in
stos
mov
aaa
es
jbe
cmp
call
inc
leave
mov
pop
fbstp
outsl
cmp
arpl
or
scas
push
xchg
pop
mul
push
leave
bnd
test
xchg
pop
xchg
jbe
push
hlt
pop
fcmove
push
add
outsl
shrb
les
and
xor
jbe
inc
hlt
xor
aam
sbb
jmp
sub
dec
aam
clc
in
scas
mov
in
das
pushf
push
mov
aaa
pop
shrl
jp
pop
inc
lret
or
or
mov
sbbl
sbb
mov
dec
leave
insb
mov
imul
dec
push
shl
xor
mov
imul
jle
insb
sub
or
mov
sub
or
jnp
out
aam
pop
add
sub
xchg
repz
or
push
hlt
lcall
jbe
inc
clc
inc
out
leave
inc
mov
icebp
loop
lahf
cmpsl
push
sbb
jo
cmp
fwait
push
popa
sarl
stos
cs
fbld
loope
cli
fildll
lock
cmp
filds
pop
adc
ja
in
xchg
add
and
orl
lods
sbb
test
sub
std
popf
test
rorl
dec
adc
mov
add
stos
shll
popa
fsubrs
jl
scas
pop
pop
and
add
stos
orb
lock
xchg
aad
or
sub
xchg
sbb
rcll
ss
or
movsl
movsl
xchg
mov
aas
xchg
cmpsb
in
test
and
addl
and
xor
push
stc
pop
pushf
push
cmpsl
icebp
sbb
roll
adc
loopne
mov
hlt
inc
inc
pop
push
in
orl
roll
ljmp
push
sti
dec
in
jo
mov
xchg
mov
dec
push
icebp
fisttpl
mov
push
dec
push
mov
adc
dec
and
or
inc
fidivl
lods
loopne
push
xor
outsl
mov
mov
xchg
cmp
and
pop
sbb
push
or
xchg
inc
ss
add
sub
into
xor
outsl
cmp
mov
sbbb
push
xchg
push
sub
mov
and
idivl
dec
dec
fistps
adc
loopne
scas
repnz
shlb
mov
inc
dec
out
jle
sbb
outsb
test
and
mov
jecxz
mov
jmp
pushf
fimull
lret
jb
js
inc
gs
fwait
std
pop
rcrb
add
push
stos
xor
jmp
adc
in
adc
test
rol
outsl
sub
ret
xlat
push
shrl
ss
mov
dec
sub
mov
andl
or
adc
addr16
adc
jo
cs
dec
dec
call
fdivs
out
inc
lret
adc
mov
scas
lods
fistpl
sub
jnp
sbb
lret
test
push
and
adc
outsl
or
mov
jge
dec
pop
icebp
sbb
adc
pop
lret
es
bound
jmp
pop
call
xor
loopne
cmp
movsb
daa
add
add
cwtl
mov
add
ret
fmull
push
das
sub
pop
sub
movsl
pop
lods
mov
cltd
imul
jae
mov
outsb
or
or
or
pop
mov
imul
ror
jbe
loope
inc
fwait
sahf
ds
out
xor
cs
mov
roll
inc
ljmp
fsubs
cmp
cmp
inc
orb
sub
xor
das
cmp
insb
insl
incb
filds
inc
adc
xchg
or
adc
or
cmp
idivl
dec
adc
pop
sub
cld
rclb
cmp
lahf
mov
mov
in
pop
test
stc
xor
movsl
fcompl
dec
cmpsl
push
cltd
xor
cmp
mov
mov
cli
adc
rcl
pop
inc
or
mov
pop
mov
mov
adc
outsb
addr16
fistpl
in
int
scas
das
incb
mov
mov
rcrb
pop
fs
xor
loope
xor
inc
pop
sti
dec
sbb
push
lock
in
jge
lret
inc
or
lods
popf
ret
lock
pusha
cli
adc
mov
xchg
lds
fidivrs
or
cmp
loopne
in
or
in
dec
add
mov
or
lcall
subb
imul
adc
neg
push
cld
insl
arpl
inc
push
in
lds
xlat
dec
outsl
jmp
push
addl
inc
rclb
cmpl
cmp
loop
dec
xchg
pop
in
cmpsl
mov
jae
insl
aas
pushf
out
js
mov
and
test
out
repnz
aam
out
add
add
sub
sarl
testb
jae
push
sub
in
dec
jg
push
xchg
pushf
sub
fsubl
push
je
mov
fwait
ljmp
loope
jl
pop
imul
add
sub
jge
repnz
inc
rcll
push
pop
fisttps
add
out
ret
cmc
mov
jb
add
cltd
push
xchg
push
test
gs
inc
xlat
icebp
adc
or
pop
cli
cmp
adc
inc
dec
mov
aad
shll
outsb
mov
mov
adc
movsb
mov
stc
mov
push
add
mov
xchg
or
idivl
cwtl
mov
pop
mov
mov
fadd
ficoml
sub
bound
pusha
adc
mov
push
jecxz
xor
jne
aaa
pop
dec
sahf
adc
adc
and
in
push
mov
in
mov
jb
inc
ror
clc
bound
icebp
inc
jnp
nop
dec
add
test
loope
enter
fucom
daa
and
fsubrl
jp
popa
fadd
scas
sub
sbbl
andb
shll
fdivl
lahf
loop
push
xorl
loope
and
aad
sbb
jg
dec
pop
xor
or
xor
ret
mov
jns
repnz
add
and
inc
popf
outsb
push
dec
pop
push
mov
xor
movsl
ss
cmp
js,pt
jne
in
mov
dec
push
enter
std
mov
add
stos
clc
sbb
outsl
nop
dec
lock
mov
xor
inc
add
ret
or
mov
lods
push
ljmpw
or
cltd
loop
push
sahf
inc
jnp
inc
xor
cmp
stos
int
adc
outsl
xor
cmpb
pop
sti
lods
pop
cmp
or
dec
jg
pop
aaa
decl
shll
push
push
ret
stc
ret
hlt
inc
icebp
test
jg
repz
pop
pop
fidivrl
int3
and
mov
test
cmpsl
cmp
daa
cmp
pop
jle
lds
and
test
cld
cltd
xchg
xchg
add
dec
pop
jb
and
push
adc
pop
mov
ljmp
std
and
ljmp
and
jg
sbb
fcomip
sub
out
fsubrl
xchg
lds
sub
lea
xor
mov
xor
xchg
mov
lods
jne
mov
add
pop
ficoms
ja
hlt
pushf
dec
pop
ret
jle
push
fldt
mov
hlt
notb
inc
movsb
sub
push
push
cmp
or
cvtpi2ps
outsl
inc
push
mov
sbb
adc
mov
and
loopne
push
shr
push
and
add
mov
insb
cwtl
fcomp
out
dec
int
es
movsl
out
call
les
add
push
or
out
icebp
adc
push
xchg
mov
jae
mov
nop
or
xchg
adc
movb
xchg
leave
adc
push
add
sbb
sbb
mov
ja
das
push
das
mov
pop
push
pushl
data16
inc
jo
test
out
inc
xchg
lock
test
mov
es
pop
out
jmp
ljmp
inc
sbb
xor
hlt
popf
or
cmp
test
jg
push
stc
jl
or
xor
cmpsl
test
pop
int
clc
xchg
clc
pop
mov
bound
inc
lock
call
mov
subb
int3
push
lcall
push
insl
test
adc
stos
je
mov
xor
insb
movsb
push
test
je
pusha
lcall
ds
adc
outsl
ss
je
mov
lock
adc
lock
jne
dec
lds
subl
ret
push
rorb
mov
pop
add
mov
lret
fildl
lods
mov
add
jp
cmpsb
test
scas
dec
push
int3
pop
fcompl
or
mov
in
cmp
rcl
call
enter
and
add
dec
mov
adc
in
test
fmuls
inc
mov
dec
sub
aad
out
or
adc
push
pop
fsubrs
inc
aam
mov
jmp
pop
leave
inc
push
adc
mov
repz
xchg
mov
sub
mov
mov
mov
repnz
mov
add
dec
fisttps
in
pop
pop
xchg
test
inc
push
sub
sbb
aas
out
test
pop
jo
inc
fs
push
jo
mov
xor
pop
sbb
jge
add
mov
mov
or
push
sub
out
push
les
shl
jae
pop
loopne
adc
mov
out
gs
sbb
mov
shll
adc
ficompl
mov
stos
xor
mov
in
adc
xchg
loop
and
imul
jl
sub
mov
sti
sti
pop
subl
bound
into
repz
jle
jne
sbb
mov
cmp
mov
jl
adc
mov
popf
push
mov
faddl
mov
cli
mov
xlat
notb
stc
nop
xor
inc
fstp
mov
sub
jge
mov
push
cmc
xchg
xchg
and
bound
jl
ja
mov
cmpsl
ret
lods
mov
lret
pcmpeqd
outsb
and
sub
push
mov
mov
ficomps
andb
push
movb
out
mov
fidivl
dec
and
insb
popf
cmp
fwait
jecxz
fwait
js
aam
and
fdivr
dec
loopne
pop
aad
outsl
popf
and
shr
gs
jbe
mov
pushf
xchg
fisubl
push
scas
jne
data16
sbb
sub
lea
mov
test
ja
push
in
xor
pushf
sbb
jne
imulb
and
mov
sub
divb
fisubrs
loopne
xor
and
sbb
cmp
out
push
mov
and
push
leave
xor
xorl
leave
sub
loope
push
inc
mov
jae
push
mov
or
push
imul
js
mov
das
lahf
daa
pop
lcall
inc
in
repnz
aad
sti
mov
std
mov
shr
bound
int
cmpsb
xchg
sti
dec
pop
pusha
stos
stos
cmp
imul
inc
stos
scas
ficoms
add
inc
dec
cs
mov
mov
inc
movsb
jmp
ja
call
arpl
test
hlt
incb
mov
imul
daa
lret
arpl
lods
pop
fadds
inc
xchg
add
test
pop
aad
xor
inc
aas
dec
mov
adc
mov
xchg
loopne
cmc
push
inc
outsb
and
cmpsb
call
ja
inc
bound
je
mov
or
inc
adc
into
push
dec
dec
fstpl
or
add
cmp
sarl
mov
ret
or
pop
push
mov
fadds
xchg
in
mov
jne
test
inc
push
jne
shrb
outsl
push
jno
stc
aas
mov
or
mov
or
clc
push
loope
inc
xchg
push
int
icebp
ja
xor
pusha
jmp
aas
xchg
daa
inc
test
in
je
mov
idivl
inc
das
xor
imul
add
xchg
jnp
test
insb
fldl
pop
cmp
jecxz
fiadds
mov
jne
nop
fnsave
inc
aam
or
jg
adc
xchg
push
dec
jl
mov
pop
ja
mov
xchg
pop
jg
pop
loopne
fiaddl
dec
cwtl
adc
jecxz
rcll
adc
sbb
xor
pop
stos
adc
loop
jg
or
enter
mov
mov
sub
cmp
xchg
xor
lods
subl
xchg
daa
pop
je
or
repz
jge
addr16
and
repz
push
inc
leave
mov
imul
lds
xor
mov
lea
or
and
shll
ret
in
pop
js
int
ret
push
imul
cmpsb
pushl
mov
je
sub
aam
add
aaa
mov
jg
sbb
push
pop
lock
mov
add
out
fsubrs
mov
int
fdivrl
mov
test
push
call
mov
lock
xlat
ljmp
aaa
add
loopne
lcall
stos
dec
ds
sbb
jbe
ret
cmp
lret
sbb
pop
inc
cld
aas
mov
xchg
or
dec
decb
fistl
test
repnz
cs
icebp
aam
mov
outsb
daa
add
test
mov
mov
je
pop
sbb
or
mov
mov
pushf
rolb
push
loope
sti
xchg
stos
inc
sub
pop
in
jne
dec
jo
std
pop
loop
rcrl
or
and
adc
sbb
pop
sahf
mov
inc
outsb
inc
stos
loopne
loope
bound
mov
sbbb
aaa
pushf
xor
adc
push
arpl
xor
inc
mov
call
aas
push
decb
ja
pop
mov
sub
arpl
xchg
ret
in
jp
pop
fsubrl
cmp
loope
mov
mov
inc
test
push
pop
mov
jle
jl
mov
pushf
sub
sbb
aad
mov
sysret
incl
push
jne
daa
mov
mov
mov
xchg
push
aad
jns
add
js
in
and
mov
sub
mov
les
ret
lods
aas
adc
sti
mov
mov
clc
movsl
int
adc
xchg
xor
mov
push
fidivrl
mov
cmpl
test
push
loopne
addr16
mov
fidivs
sub
push
divb
lock
push
daa
push
xchg
pop
outsl
fdivl
or
jmp
es
out
nop
pop
cmp
outsl
cld
sbb
stos
clc
pop
pop
push
bound
ficoml
push
xor
add
mov
or
incl
popa
arpl
jne
out
imul
or
lods
ja
sbb
pop
lcall
xor
xchg
movsl
ret
mov
pop
xchg
imul
cmp
mov
shll
add
pop
or
mov
in
push
mov
es
mov
frstor
inc
enter
call
push
sbb
xor
mov
das
flds
inc
push
inc
testb
jae
or
xor
fiaddl
call
jb
aaa
push
je
dec
test
adc
je
aaa
outsb
psubw
sahf
scas
stos
cmp
scas
cld
lock
or
cli
rcll
dec
andb
sub
push
pop
mov
xchg
jo
cmpb
fadd
scas
test
sbb
pop
or
pusha
movw
xchg
insl
ficompl
mov
enter
jge
mov
mov
aaa
pop
pusha
test
xchg
xchg
jp,pt
xchg
data16
aam
test
movsb
mov
popl
ja
mov
and
xchg
push
stos
aad
in
testb
adc
jmp
or
mov
cmp
jg
or
scas
push
icebp
push
xor
mov
cs
jbe
xchg
jo
inc
aaa
sub
mov
inc
orb
je
std
inc
xor
in
nop
pop
idivl
and
jae
jmp
test
jbe
and
cmpsb
outsl
pop
dec
iret
cs
mov
ljmp
xchg
cmp
shl
loope
fs
jmp
bound
lock
push
shrl
mov
dec
dec
inc
xchg
jno
lds
or
stc
mov
negl
adc
ja
call
sub
pop
push
call
mov
dec
push
popl
adc
sub
mov
fdivp
in
dec
mov
insl
aaa
faddl
ds
or
bound
dec
sub
or
insb
scas
cmp
jge
add
or
andl
pop
xchg
mov
orb
inc
test
lea
inc
scas
mov
or
das
enter
mov
imul
mov
popf
and
ja
inc
sub
and
sbb
orl
inc
fiaddl
adc
or
je
arpl
aaa
cld
scas
push
ret
ja
pop
stc
mov
jnp
dec
ret
sbb
cmp
lret
push
pop
pop
dec
or
fwait
ret
sbb
xchg
std
or
es
test
push
xor
add
push
jecxz
movsb
call
inc
push
cmp
bound
loop
sbb
push
mov
or
cmpb
add
lret
mov
push
push
loopne
mov
xor
push
out
int3
add
dec
xor
xchg
addb
dec
mov
mov
cmp
mull
in
xchg
mov
and
clc
call
or
loopne
xor
flds
inc
ja
add
push
xchg
enter
arpl
mov
leave
xchg
xchg
std
outsl
adc
clc
adc
or
sub
jl
or
test
pop
aam
cmc
jo
loopne
insb
lret
push
pusha
leave
lcall
mov
inc
sub
jnp
out
jbe
mov
mov
mov
addr16
mov
fildll
mov
jns
xchg
push
or
mov
imulb
push
jmp
rcr
out
sbb
inc
imul
xor
mov
push
cli
mov
sub
jne
xlat
mov
cmp
aaa
mov
mov
out
clc
push
subl
pop
int3
xor
pop
pop
shr
xchg
xchg
shrl
push
fs
testb
mov
test
and
lret
jecxz
orl
and
pop
ljmp
clc
outsl
in
scas
imul
call
xchg
sbb
repz
pop
xchg
sbb
pop
mov
jp
adc
xor
ret
adc
inc
push
in
and
stos
sahf
insl
or
in
mov
repz
enter
outsl
aam
lock
movsl
dec
mov
sub
loopne
jge
jg
stc
lock
cmpl
jbe
dec
jne
mov
shr
or
loop
pop
in
jge
data16
xlat
add
lcall
dec
sbb
and
inc
fdivs
mov
or
cmp
icebp
dec
test
js
aam
sub
and
das
call
testl
iret
push
cmp
je
testb
aas
pop
mov
xchg
push
or
jg
push
push
ss
mov
sub
jbe
out
xchg
fisttpl
jmp
and
ja
cmp
push
les
ja
pop
sbb
arpl
dec
jl
std
or
jb
and
cmp
insb
xor
icebp
xchg
xor
and
orl
inc
pop
mov
xchg
mov
pushf
cli
ret
lret
push
ja
cmp
popa
jge
xchg
fidivrs
push
mov
pop
or
das
xchg
outsb
jle
or
aas
push
aaa
cmp
cmp
sbb
mov
addl
icebp
outsb
add
or
adc
mov
clc
out
ficomps
mov
or
je
repnz
push
je
push
push
dec
out
inc
push
das
xchg
notl
add
loop
sbb
add
lret
and
outsl
xchg
popf
stos
cmpb
push
call
in
push
incb
cli
fistps
push
adc
or
cmpsb
arpl
push
jecxz
cli
sbb
mov
add
in
inc
xor
lods
or
popf
xor
outsb
subl
sbb
push
ds
rolb
push
jp
call
cmp
pop
xor
and
adc
pop
add
pop
pushl
xor
cmp
loopne
loope
mov
pop
pop
ss
xor
inc
and
sub
aaa
out
fildll
or
bound
aas
subl
scas
sub
inc
or
rcrb
mov
ficompl
xchg
jbe
daa
js
iret
xor
fistl
pop
or
pop
dec
sbb
mov
lods
bound
pop
add
cli
outsb
aam
fildll
in
movsb
cmp
sarb
lds
insb
xor
push
les
push
sysenter
cmp
sti
aaa
sbb
shll
add
xchg
mov
xor
lock
mov
dec
and
test
ja
add
xchg
sub
call
inc
add
cmp
and
adc
mov
push
jg
pop
cmp
xchg
jbe
pop
icebp
insl
ret
out
xor
mov
push
sub
adc
jle
dec
popa
cmc
iret
stos
call
mov
ss
push
cmp
loop
jae
inc
ret
pop
sub
xchg
cmpsb
pop
fiaddl
inc
jb
pop
adc
cmp
push
outsb
jmp
push
ds
roll
das
xlat
push
add
or
dec
jo
clc
lcall
lds
hlt
shll
and
scas
cmpsl
inc
mov
mov
jl
or
push
flds
and
mov
lods
ljmp
and
icebp
mov
pop
mov
mov
das
dec
sbb
push
in
lea
push
add
cwtl
and
inc
mov
stos
add
mov
sub
mov
dec
pop
out
mov
addl
fldl
and
mov
jmp
insb
lret
inc
ss
jne
pop
mov
jge
and
bound
fldcw
movsl
fistps
dec
mov
mov
inc
lods
sub
test
les
ss
std
not
push
mov
icebp
pushf
or
mov
push
xchg
add
add
das
sti
push
outsl
call
mov
sbb
or
ret
clc
and
cbtw
adc
sbb
cmp
push
test
lods
cwtl
mov
mov
sub
or
movsl
mov
jle
xchg
xor
filds
pop
push
add
fdiv
mov
jne
pop
jo
mov
mov
into
pop
shr
pushf
jg
xor
das
lock
fisttpl
push
data16
les
lcall
adc
mov
sub
xchg
push
mov
mov
stos
adc
test
mov
sub
add
jb
jle
stos
mov
lock
int3
xor
inc
mov
repnz
imul
stos
addl
cmpb
mov
lds
in
push
cwtl
mov
inc
call
xor
fisubl
shl
mov
mov
and
jnp
fldt
mov
add
cmp
sbbb
mov
push
xchg
jle
mov
rclb
mov
sbbl
xchg
aad
aad
push
jmp
roll
dec
adc
into
in
mov
dec
or
fildl
iret
push
mov
xor
roll
mov
dec
inc
sub
or
outsb
pop
cwtl
mov
jl
insb
movsl
add
sbb
shlb
pop
cli
std
sbb
out
sbb
lea
sbb
les
ret
call
or
dec
push
inc
adc
mov
mov
aaa
mov
jbe
mov
stos
aam
fsubl
fs
incl
pop
add
fs
leave
test
outsb
dec
aaa
test
pop
scas
and
fistpll
gs
repnz
mov
adc
outsl
hlt
aaa
dec
int
sbb
push
mov
xchg
sub
or
dec
dec
xor
fsubr
push
jle
add
jno
fisttps
mov
int3
add
and
cmp
ret
aad
or
shlb
xchg
cs
decl
sub
mov
rcll
fidivs
mov
lods
aaa
movsl
lahf
testb
imul
cmp
lea
xor
xchg
jp
dec
into
and
in
test
sbb
mov
cmp
shlb
mov
aad
fldt
mov
xor
movsl
inc
lcall
orb
jmp
mov
ja
sarb
cmp
fisttps
or
sbb
pop
jne
jmp
push
xchg
lea
fldt
push
lock
insb
jg
in
adc
sbb
sub
and
sub
fwait
outsl
or
jno
movsb
repz
mov
es
mov
fdivs
cli
imul
enter
jge
inc
inc
aad
or
cmp
mov
jno
ret
and
enter
pop
stc
cmp
popa
push
inc
xor
or
or
clc
jg
or
icebp
mov
fs
out
jecxz
sbb
fbld
dec
jae
add
aaa
je,pt
aas
xchg
and
outsl
cmp
fdivs
insl
xchg
loopne
push
test
pop
jno
call
xchg
inc
in
js
sub
mov
mov
mov
fs
lock
mov
lods
call
cld
mov
rcll
and
add
mov
mov
inc
mov
xchg
dec
nop
or
and
and
push
or
dec
movsb
push
mov
std
lods
push
mov
das
jmp
imul
repnz
inc
pop
jle
sub
loopne
inc
into
dec
add
mov
sbb
mov
and
call
inc
sbb
pop
or
inc
cmc
test
loop
mov
add
repz
push
inc
mov
sti
lret
loopne
popf
mov
adc
outsb
or
xor
incl
das
push
insl
arpl
adc
pop
popa
stos
or
sub
mov
jp
rolb
addr16
mov
mov
mov
call
or
inc
sbb
aam
outsl
ljmp
push
pop
subb
dec
test
inc
aad
mov
loope
add
ds
push
inc
cmpsb
clc
add
int
mov
ljmp
jnp
mov
or
pop
and
and
cli
push
adc
fstl
scas
mov
add
andl
movsl
dec
jmp
add
cli
mov
rolb
fisubrs
movl
les
pop
lcall
mov
dec
inc
faddl
int
adc
and
insl
mov
sbb
inc
xchg
fisttpll
lcall
testb
aad
mov
cmc
andl
jae
mov
fisubrl
aam
fwait
repnz
or
ficomps
jl
mov
sbb
push
push
mov
int3
push
inc
aaa
xchg
or
call
add
mov
mov
jecxz
rol
lock
mov
xor
cmpsl
pop
xchg
adc
idiv
sub
arpl
add
pop
mov
cs
scas
lahf
sub
push
sbbl
add
adc
push
popa
adcb
pop
mov
dec
out
rclb
cld
lock
xchg
adc
push
inc
mov
inc
out
or
jo
ret
push
push
sti
ljmp
test
rorb
je
ret
xchg
sbb
movsb
adc
push
clc
jns
jle
movsl
push
pop
push
dec
sub
or
movsb
cmp
or
gs
leave
sub
stos
add
mov
int
jns
das
mov
notb
pop
lods
xor
jbe
and
incb
add
push
jle
lds
xor
test
mov
or
push
or
je
mov
sbb
sub
jno
pop
mov
clc
imulb
and
pop
jle
and
js
rcrb
ja
add
cmp
and
pop
std
pop
lea
and
mov
mov
shrl
inc
pop
cmp
jle
add
mov
fimull
test
xchg
mov
subb
push
inc
jo
outsb
mov
pop
ficoml
movsl
pop
fs
push
repz
sub
icebp
cld
and
sbb
mov
mov
sub
pop
sbb
dec
pop
mov
std
dec
cmp
out
ror
repz
test
in
enter
inc
xchg
popf
lods
or
insl
add
sahf
inc
lret
shll
insl
mov
cmp
loopne
scas
outsb
pop
data16
call
xchg
jge
shrl
jp
jl
adc
sbb
shll
je
loopne
mov
add
pop
push
hlt
and
fimull
in
mulb
fwait
aad
push
aas
pusha
and
movnti
imul
dec
pop
cmp
push
andl
mov
rcrl
std
je
lahf
filds
cli
leave
stos
and
call
std
loope
adc
push
xorl
or
test
sub
or
dec
xor
mov
pop
and
lods
pop
add
inc
scas
adc
lds
pop
call
jmp
xchg
fdiv
aas
add
shlb
lret
dec
sbb
mov
mov
imul
adc
jg
loopne
dec
aam
jp
sbb
xor
std
outsl
clc
das
jecxz
inc
ljmp
mov
jp
shll
out
orb
fidivs
dec
ljmp
fsub
adc
out
mov
jecxz
in
lods
inc
xchg
xor
mov
inc
das
xlat
jecxz
push
outsl
leave
outsb
ljmp
mov
aam
xchg
mov
ds
notb
aam
pop
push
sbb
and
clc
pop
mov
pop
add
or
push
arpl
jb
mulb
mov
or
inc
xor
cltd
fistpll
out
pop
dec
rolb
pop
and
cmpb
pop
das
jo
incb
push
add
cmp
movsl
push
pop
pop
inc
aaa
ror
push
sub
inc
jmp
adc
mov
mov
pop
xor
dec
sbb
add
ret
shl
and
push
nop
imul
cmp
and
inc
outsb
cmp
fcoms
inc
les
call
pop
jb
inc
mov
pop
jno
and
loope
lahf
ja
pop
or
nop
in
mov
mov
fadds
inc
dec
aaa
popa
push
mov
add
mov
mov
inc
pop
outsb
js
mov
aaa
mov
les
and
lods
mov
pop
add
pop
pusha
mov
data16
sub
jecxz
fsubrl
orl
inc
fld
push
jmp
mov
push
lds
pop
cld
nop
sbb
mov
loop
sbb
outsb
adc
sbb
jmp
aam
lods
out
push
daa
mov
dec
lahf
sarb
mov
sub
incb
mov
into
or
orb
mov
rorl
das
pusha
or
stos
popf
sbb
out
sbb
jmp
lret
inc
jmp
and
push
clc
inc
aam
sti
inc
and
inc
out
rclb
push
aam
cmp
xchg
adc
xor
jbe
sub
jnp
and
push
out
inc
popf
sub
push
imul
inc
outsl
andb
popf
stos
add
jl
shrl
or
loop
stos
jns
subb
pushf
outsl
dec
daa
hlt
mov
sbb
sbb
xor
stos
mov
push
add
mov
js
sar
pop
mov
mov
adc
fdivs
xchg
fs
jo
xchg
icebp
or
mov
dec
mov
cwtl
add
gs
popa
lock
cmovp
mov
xor
aam
push
mov
sub
xor
cmc
mov
nop
push
fstpl
push
mov
aam
aaa
addb
inc
aam
and
cmp
cmpsb
mov
and
int3
stos
neg
clc
inc
adc
push
adcl
outsb
stos
cmc
cmpsb
and
es
dec
cs
pop
or
stc
out
movsb
pop
loop
jnp
fistpll
add
out
maxps
or
cs
xor
push
mov
sub
fs
inc
adc
leave
test
jge
sbb
pop
sub
mov
xchg
or
add
pop
jmp
inc
out
fcomip
gs
inc
pusha
push
mov
mov
nop
test
or
in
push
lea
push
xchg
out
lret
iret
movsl
adc
cmpb
sub
adc
push
int3
cmpsb
push
sub
mov
sti
in
jmp
sbb
leave
hlt
jmp
or
out
xchg
xchg
sbb
fstl
ret
inc
fnstsw
add
dec
dec
jl
fidivs
inc
icebp
adcb
xchg
and
mov
xor
in
jle
cli
addb
add
in
xor
call
adc
test
and
test
lds
add
mov
incb
inc
fldcw
jmp
das
xchg
cs
ja
or
sti
std
sbb
mov
testl
mov
and
xor
sbb
in
rolb
mov
add
push
rcrb
dec
mov
enter
fwait
mov
sbb
lds
xchg
insl
test
incl
stc
jno
lret
divl
push
icebp
aaa
insb
dec
loope
shll
cmp
mov
ja
pop
mov
idivl
adc
ds
mov
mov
sarl
ljmp
jb
hlt
and
pusha
sub
pop
sbb
xor
or
lock
xchg
xor
mov
jbe
out
loopne
mov
mov
arpl
pop
loopne
aad
mov
sets
push
orb
mov
fwait
mov
icebp
loopne
cmp
insb
scas
cwtl
adc
lret
insl
insb
filds
les
sub
add
inc
or
inc
rorb
mov
xchg
in
push
mov
es
or
jns
xor
cmp
mov
or
leave
clc
dec
lods
mov
inc
mov
or
adc
sbb
mov
adc
and
or
jne
cmp
jb
imul
mov
push
push
js
lret
andb
fsubrp
xchg
test
dec
out
inc
arpl
mov
pop
xor
add
add
test
addb
cs
in
in
pop
cmp
mov
adc
push
mov
xor
hlt
test
int3
sbb
adc
cmp
push
test
loope
inc
test
and
push
insl
test
add
enter
jle
jecxz
movsb
rolb
test
mov
sbbb
sbb
mov
add
scas
lock
dec
xchg
cmpb
inc
add
cmpsb
loop
mov
add
mov
sub
insb
filds
outsb
fs
and
jle
push
inc
std
std
dec
rcr
sub
aaa
and
in
mov
das
jge
mov
sbb
dec
jecxz
movsl
sub
xor
std
mulb
ficoms
sub
add
insb
lds
xchg
mov
shlb
push
mov
aam
imul
mov
in
js
push
and
test
adc
test
cltd
aam
sbb
insl
pop
dec
pop
call
dec
sub
aaa
psubsw
dec
inc
inc
mov
testl
fldl
fbstp
xor
jne
mov
pop
int
cmp
and
loope
ret
movsb
movsb
push
adc
push
dec
jl
inc
repnz
out
fdivs
dec
cmpsb
out
mov
aad
adc
hlt
lret
movsl
das
jg
xchg
sub
pop
inc
imul
lods
fidivl
xchg
mov
jle
inc
shrl
xorb
push
shll
push
ja
sub
add
dec
xor
popa
push
add
or
lcall
scas
mov
push
ds
adc
ss
inc
sbb
ss
imul
sub
fmuls
add
mov
jbe
and
ficoms
xchg
jo
cmp
dec
or
out
fistpll
and
pop
push
add
mov
jb
mov
add
adc
dec
decb
cld
push
pop
and
enter
xchg
mov
or
inc
mov
sub
std
add
loop
sbb
sbb
add
imul
cld
mov
push
pop
int
mov
mov
xor
sub
call
rorb
push
mov
pop
adc
fmuls
leave
push
adc
sbb
andl
pop
in
lods
out
mov
or
js
mov
xchg
mov
lcall
add
popa
mov
out
es
dec
add
scas
inc
or
imul
cltd
xor
mov
ljmp
dec
mov
sub
pop
rorl
adc
push
and
cli
into
add
ret
fwait
or
mov
and
push
mov
and
mov
mov
mov
outsl
mov
jo
pop
int3
or
rorb
push
jno
cmp
xor
sbb
ret
mov
fbld
pop
in
mov
push
movsl
inc
or
mov
shr
pop
dec
or
xchg
test
daa
popf
les
sbb
pop
mov
dec
add
cmc
into
xchg
nop
mov
ljmp
ss
orb
stos
int
movsb
mov
ficompl
jbe
jg
enter
dec
icebp
add
adc
nop
fcmovnb
xor
mov
aaa
orl
cmp
jge
inc
and
in
xorb
in
fistps
dec
ret
adc
stos
dec
mov
scas
and
add
fldcw
adc
push
dec
mov
dec
ss
in
pop
cmpsl
les
sbb
add
je
and
cli
add
mov
andb
sbb
jb
adc
mov
scas
mov
mov
sub
enter
pop
xchg
push
dec
in
adc
ret
shrb
push
xor
es
mov
ficoml
cltd
nop
push
push
adc
mov
incl
in
xchg
repz
movsb
gs
das
push
mov
aam
lahf
mov
pop
fildl
outsl
xor
pop
xchg
xchg
lret
je
test
and
push
mov
add
arpl
insb
xor
gs
rorl
jae
mov
icebp
fcmovnbe
xchg
idivl
lret
sub
rcl
sbbl
lret
or
aaa
cld
lea
cmp
push
add
call
cmpsb
pusha
out
xchg
mov
movsl
pop
ss
inc
xchg
lret
testl
or
lods
das
adc
mov
fistl
and
cwtl
and
addr16
xchg
shlb
dec
subl
jbe
or
push
cltd
jp
mov
pop
sbb
ljmp
das
fisttpll
sub
sti
add
and
mov
cli
bound
out
push
out
cmp
xor
adc
push
aam
lret
mulb
and
flds
jp
adc
or
mov
stos
fistl
jb
mov
sub
clc
push
andl
mov
mov
dec
sbb
mov
pop
xchg
fsubs
mov
fs
les
test
pop
fdiv
inc
movsl
cltd
je
mov
add
mov
inc
xchg
into
mov
sub
sti
movsl
push
inc
push
cmpsb
and
or
mov
dec
or
cmp
mov
lods
mulb
pop
mov
loope
sub
repz
xchg
xchg
xorb
inc
mov
fbld
fmull
sbb
mov
out
repz
ficompl
lret
mov
push
enter
adc
lods
loopne
pop
pop
inc
mov
sub
jne
add
mov
fwait
adc
pusha
in
loope
pop
inc
pushf
orb
cmpsb
out
mov
lea
sub
mov
stos
inc
lds
lods
movsl
out
cwtl
sub
mov
xlat
cmpsl
insb
nop
shrb
repnz
dec
aaa
std
inc
add
adc
and
or
fwait
add
mov
in
mov
das
add
dec
outsb
mov
pop
rcr
stc
inc
jae
sub
imulb
xchg
add
dec
mov
fnstcw
aaa
adc
pop
mov
jecxz
iret
ds
outsl
aam
jmp
jecxz
negl
scas
stc
notl
mov
or
push
lods
mov
sbbb
sti
jbe
dec
pop
arpl
jl
jmp
mov
adc
test
mov
std
jmp
lret
in
shl
insl
loopne
push
repz
shl
add
adc
jns
pop
popf
add
adc
lret
out
repnz
xor
data16
lea
lock
stos
fildl
mov
jle
inc
push
leave
ror
add
pop
sub
clc
adc
push
lods
test
js
xchg
or
or
xlat
outsb
je
addr16
inc
ja
xchg
popa
bound
sbb
test
sbb
dec
pop
and
dec
dec
insl
loopne
lock
sub
jecxz
xchg
daa
int3
cld
aam
mov
insl
ret
fisttpl
lcall
push
into
dec
add
mov
fcomip
mov
sub
cmp
add
dec
push
dec
cmp
or
iret
xchg
outsl
or
popa
into
in
sub
in
mov
or
andl
int3
cmpsl
xor
mov
rcl
mov
clc
ret
jecxz
gs
adc
cwtl
fs
or
sub
idivb
cld
cmp
push
dec
mov
mov
mov
jo
dec
aaa
sarb
fsubrs
jbe
add
add
aad
insb
inc
into
cld
and
movsl
push
mov
addr16
fldl
xchg
or
nop
sub
aad
push
mov
push
and
outsl
mov
sub
test
rcrl
repnz
pop
adc
xchg
int3
add
sub
mov
aaa
jne
andb
fs
mov
imul
les
mov
mov
jae
sub
test
sub
mov
outsl
out
sub
mov
mov
pop
fs
insb
or
roll
lret
jg
ss
pop
movsl
and
cltd
mov
mov
push
cs
xchg
mov
andb
pusha
fst
outsl
cs
mov
xchg
mov
dec
js
stos
outsl
insb
out
mov
lret
mov
lods
or
add
dec
sti
bound
idivb
ret
and
lds
iret
sbb
mov
mov
inc
lret
dec
pop
out
loop
ficoms
mov
std
cmpl
rcrl
adc
fisubl
xor
and
fucomip
mov
in
aas
inc
loopne
lea
das
and
xor
fucomi
mov
mov
aam
jl
sbb
mov
jo
mov
ljmp
aad
lods
fs
sub
stos
fildl
mov
pushf
leave
test
jne
xor
push
or
daa
inc
cltd
pop
popf
lcall
ja
imul
xor
fisubs
lret
jl
push
jno
cltd
pop
mov
fsubrl
sbb
mov
icebp
sbb
jecxz
dec
lahf
clc
sub
push
jo
mov
iret
fstpt
loope,pn
pop
pop
scas
cmp
dec
cmp
test
mov
notb
or
xor
outsl
cmp
fcomip
xchg
pop
into
fldcw
dec
shll
iret
fucom
jo
add
xchg
jecxz
fmull
inc
repz
lock
and
mov
ljmp
mov
movsl
cmpsb
mov
out
sbb
ret
xchg
outsl
fwait
push
fisubrl
out
jo
jnp
add
and
roll
inc
inc
xor
lcall
mov
push
xchg
icebp
gs
aam
jecxz
lds
xor
lock
cmp
jbe
in
andb
stos
imul
out
cmp
sti
addr16
push
les
lods
adc
insl
dec
sar
cmp
subb
enter
repnz
mov
cli
shll
add
imul
add
push
cmp
sub
add
xchg
inc
lods
mov
mov
cmpsb
test
cmc
cli
aas
lods
mov
loope
sub
cmp
stc
or
das
addr16
pop
fdivs
fwait
setnp
xchg
icebp
jle
mov
imul
or
and
mov
jecxz
adc
xor
fbstp
clc
test
pop
adc
mov
test
test
hlt
call
pop
inc
dec
cmp
adcl
or
xchg
popa
push
inc
sbb
repnz
push
adc
movsb
jo
mov
pop
mov
cs
xchg
push
pop
and
push
jns
xchg
mov
mov
mov
inc
mov
out
cli
mov
in
add
inc
mov
fs
es
dec
inc
pop
call
jns
mov
mov
ret
cld
mov
pop
pop
pusha
pop
push
iret
cmc
movsb
and
cmc
data16
das
lds
dec
fidivrs
out
sub
rcl
cwtl
sub
cmp
mov
rorb
or
scas
and
mov
add
xor
lar
shlb
shrl
mov
loope
sub
or
xchg
stos
mov
outsl
or
in
daa
shr
sub
push
pop
addr16
push
pop
adc
xchg
add
lea
and
inc
mov
inc
cmpsl
push
jge
mov
sbb
sub
repnz
mov
mov
mov
aad
ret
cmp
push
je
pop
cmp
cmp
insl
insl
cld
adc
mov
xchg
or
sbb
xchg
jg
sub
out
imul
push
js
jmp
add
sub
adc
andl
insb
push
aaa
dec
sub
inc
ret
jno
popa
rcrl
clc
xchg
insl
cld
incl
shl
jb
cs
mov
push
xor
enter
fists
jl
pushf
movsb
jae
popf
addr16
dec
in
sub
lahf
inc
rcrb
push
inc
leave
fsubrl
mov
add
cmp
push
repnz
in
popa
and
mov
ljmp
inc
movb
or
dec
std
pop
icebp
les
les
mov
movb
xchg
sub
mov
sbb
aad
xchg
je
pop
jg
in
fwait
adc
sbb
mov
dec
sub
dec
les
lret
pop
xor
hlt
cmp
loope
sbb
stos
or
loop
pop
aaa
ficoms
sahf
adcb
aas
jno
push
sub
das
rcl
sarb
inc
and
jge
sub
mov
aas
int3
pop
repnz
std
add
daa
pop
inc
mov
mov
adc
pop
mov
mov
xchg
lods
and
and
mov
ljmp
lods
icebp
pop
stos
or
cmp
leave
mov
xchg
sbb
test
lcall
repnz
sbb
dec
mov
add
mov
add
lcall
or
push
add
bound
mov
mov
push
sbb
and
ja
xor
mov
sbb
sbb
cli
in
dec
add
fstps
data16
movsl
inc
adc
stc
adc
mov
lcall
ficoml
dec
bound
test
mov
xchg
imul
ja
add
lock
shrb
ja
shll
mov
insl
push
je
test
fisttpl
inc
mov
lret
idiv
push
outsb
loopne
add
adc
sub
push
bnd
adc
or
adc
xchg
mov
clc
add
out
push
nop
add
mov
xchg
mov
add
sub
push
pop
mov
mov
daa
mov
or
nop
js
popa
lcall
pop
in
cmpsb
cs
pop
sub
push
faddp
mov
jmp
mov
sbb
mov
push
cli
pop
mov
sub
add
sub
clc
out
sbb
loopne
xor
jp
js
insl
in
sbb
mov
sub
rcl
mov
push
mov
fs
dec
in
test
shlb
into
and
repnz
and
scas
cmpsl
or
ljmp
jns
add
jge
jne
ds
jge
jge
add
rcr
xor
push
xorb
gs
mov
aad
nop
mov
mov
test
or
outsl
popa
fs
imul
jb
jb
push
push
gs
outsb
push
gs
js
gs
imul
inc
imul
or
inc
jb
sbb
inc
inc
mov
jns
daa
insl
push
imul
or
insb
outsl
bound
arpl
sbb
mov
neg
imul
inc
jbe
or
not
jne
insb
dec
outsl
or
imul
jbe
pushl
jo
dec
bound
arpl
ja
xor
inc
outsl
fs
jb
cmp
addr16
pop
notb
dec
mov
xor
out
scas
fisttpll
push
inc
adc
insb
test
lods
mov
loope,pn
gs
das
adc
jne
test
and
insl
mov
dec
push
lea
dec
popa
jbe
mov
fs
jb
jb
or
xor
ja
sub
xchg
xor
fldl
inc
adc
push
dec
ss
lods
mov
xor
mov
imull
jne
stos
cwtl
push
mov
push
fmuls
inc
push
jne
jbe
fisubl
pop
push
push
jb
push
cmc
in
lods
fnsave
je
into
push
outsl
mov
dec
push
and
mov
dec
adc
jae
and
mov
fs
pop
mov
add
adc
xlat
jne
and
inc
je
bound
mov
or
cmp
or
push
outsl
ss
out
imul
jp
das
jnp
loope
jo
imulb
and
dec
ret
insb
js
dec
aaa
pop
mov
inc
fs
mov
popa
jo
gs
fwait
adc
dec
xor
inc
loop
insl
xor
insb
dec
sbb
ja
mov
cmc
outsl
ja
fdivr
std
cmpl
data16
mov
dec
dec
xor
ret
insb
mov
cs
push
stos
jae
mov
and
jnp
fwait
or
or
les
push
push
popa
push
inc
push
pop
dec
cltd
push
lods
mov
stos
sub
and
pusha
xchg
xor
and
dec
outsb
repnz
pop
sub
cltd
insb
shll
sahf
lcall
jno
push
popa
pop
xchg
xor
adc
outsb
cmp
sbb
pop
hlt
pop
in
dec
dec
pusha
xor
scas
fldcw
xchg
movsb
cmp
push
mov
xor
or
cmp
jo
sbb
aaa
and
xchg
loopne
rolb
add
xchg
sub
cmc
cltd
push
xchg
gs
xchg
jnp
popaw
test
inc
dec
inc
cmpsb
fiadds
je
sbb
and
bound
and
cmp
cmpsl
xorb
inc
add
add
bound
out
dec
cmp
pop
fistpl
mov
or
imul
sbb
pop
jbe
xchg
push
and
stc
mov
jbe
jo
movsb
lods
sub
push
addr16
in
insl
outsb
inc
sub
jns
stos
inc
inc
into
bound
enter
pushf
xor
or
add
insb
pop
aaa
subl
in
and
cmp
or
xor
pop
push
aam
jbe
in
jmp
jae
inc
outsb
in
inc
rorl
jne
inc
gs
imul
pop
lret
jmp
and
outsb
adc
in
subl
push
int
or
cltd
inc
dec
cmp
sbb
inc
ja
arpl
pop
pushf
inc
push
gs
lret
bound
sbb
int
cmp
dec
pop
inc
insb
addr16
popa
dec
cmp
jno
inc
lock
lds
sbb
sbb
and
bound
loope
daa
add
pop
inc
add
dec
jae
imul
pop
and
xor
outsl
jmp
xchg
and
outsl
js
jnp
inc
js
scas
push
pop
mov
fcmovb
loope
pop
test
xor
mov
popa
cmp
rcr
jo
dec
pop
push
fs
jge
jb
sbb
ficompl
dec
jo
outsb
inc
clc
out
jb
mov
jb
fs
dec
push
inc
add
fmull
cmp
sub
dec
in
hlt
inc
dec
ss
or
mov
sti
xchg
dec
insl
cwtl
inc
insl
inc
jns
inc
pop
inc
subl
mov
or
push
push
push
insb
mov
and
imul
lahf
popa
or
push
arpl
sti
orl
movsb
insl
inc
add
mov
push
je
jae
mov
xor
or
inc
mov
cld
lret
xor
inc
dec
add
adc
add
add
or
xor
add
imul
add
add
xlat
or
jnp
insb
flds
add
add
push
fstps
fcomp
xor
pop
push
add
addr16
push
or
sub
inc
out
add
dec
movsl
in
std
cmc
js,pn
fwait
add
jo
mov
inc
cmp
in
das
xor
and
jb,pn
dec
push
dec
adc
xor
daa
orb
jae
scas
stc
pop
sub
xor
add
int3
lock
lret
lock
push
jp
add
add
add
add
dec
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
rolb
add
adc
add
push
add
addb
add
add
add
pop
add
addb
add
addb
addb
add
test
add
add
add
or
add
add
xchg
and
add
add
add
add
add
sub
add
add
or
add
add
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
pop
add
add
add
add
add
sub
add
add
add
or
add
add
cwtl
cmp
add
add
add
push
add
add
add
add
cmp
add
nop
roll
add
add
add
add
add
add
add
add
fbstp
idivl
add
std
add
aaa
add
hlt
add
aas
mov
ja
jle
jg
jle
jg
std
add
fbstp
jg
aaa
add
aas
mov
neg
je
ja
xor
jg
add
mov
add
fbstp
jg
jl
fcomip
add
jle
neg
xor
ja
jbe
ja
aas
add
mov
add
jg
push
add
mov
jg
cmp
add
lahf
mov
add
aas
hlt
add
jl
negl
cmc
add
ds
pop
je
idivl
ss
lahf
hlt
add
fbstp
neg
hlt
add
jg
add
testb
pushl
idiv
incb
ja
incl
ja
jbe
negl
add
cmc
add
jg
add
mov
idivl
cmc
add
push
add
mov
neg
jge
ja
xor
add
aas
testl
ja
testb
jg
add
jge
negl
jle
lcall
testb
aas
testl
neg
mov
add
cmp
add
pop
cmp
add
aas
add
mov
jg
mov
add
testb
jg
add
pushl
add
fcomip
add
mov
jge
negl
add
cld
add
lahf
jbe
ja
mov
jg
testl
jg
jbe
ja
incl
ja
jbe
idivl
add
mov
jg
hlt
add
cmc
add
jg
negl
jne
mov
ds
lahf
jbe
lcall
mov
add
lahf
je
negl
add
cmp
add
lahf
jne
jg
xor
ja
cmp
add
cmc
add
jg
add
mov
jge
jg
cld
add
fcomip
add
mov
hlt
add
je
neg
add
aaa
add
jbe
idivl
incb
negl
mov
add
mov
add
lahf
jle
lcall
mov
jg
xor
lcall
cmc
add
pushl
add
mov
aaa
add
pop
mov
add
jbe
negl
cmc
add
std
add
lahf
jbe
ja
std
add
mov
cmp
idivl
add
jg
neg
jle
jg
mov
aas
ss
fistpll
add
xor
ja
jg
fbstp
ja
jge
lcall
add
aas
add
testl
negl
jl
jg
ja
jg
add
cmp
add
pop
xor
add
jg
add
mov
jg
jne
pushl
add
aas
cmc
add
pop
mov
negl
add
pushl
mov
aaa
add
ss
jg
add
lahf
mov
add
testb
pop
aas
add
cmp
ja
mov
jg
mov
add
lahf
mov
lcall
add
testl
jg
jl
ja
jle
fbstp
add
mov
lcall
cmp
add
jne
ja
mov
negl
aaa
add
mov
lcall
add
pop
xor
add
je
fbstp
ja
testl
jg
std
add
mov
ss
pushl
add
aas
add
aas
add
ss
lahf
std
add
add
mov
idiv
mov
neg
testl
idiv
mov
ja
je
idiv
jne
negl
add
jl
mov
jg
jg
ja
ja
std
add
jg
add
jg
add
jle
ja
mov
jg
incl
idivl
add
pop
mov
jg
ss
pop
incl
ja
ja
mov
mov
add
pop
ds
aas
mov
negl
hlt
add
inc
adc
mov
inc
aad
fpatan
icebp
mov
pop
mov
repnz
in
pusha
jae
imul
add
or
subb
or
and
jecxz
test
es
jecxz
test
push
xor
fisubrs
pop
loopne
jnp
add
sub
js
lea
mov
imulb
mov
test
ficoml
add
mov
add
in
add
lret
hlt
adc
outsb
pop
cmpsl
neg
arpl
pop
pop
jne
push
fs
pop
cmp
add
loop
addl
xchg
adc
sar
cmp
push
test
rol
sbb
pop
cwtl
sub
test
adc
mov
sub
je
dec
pop
dec
hlt
icebp
movsl
call
insb
lods
mov
mov
add
lea
shll
stc
jns
ret
add
cmp
or
fs
cwtl
mov
pop
push
fcompl
shrl
cli
pop
adc
repz
mov
and
pop
in
dec
mov
push
aaa
fiadds
add
push
bound
adc
adc
jno
repnz
pop
xor
in
cmpl
xor
add
insl
je
leave
mov
stos
enter
stos
mov
mov
xchg
xor
or
adc
inc
sub
add
push
movsb
and
notb
push
dec
shr
inc
jno
in
inc
dec
ret
fcmovnu
cmp
cli
mov
xchg
into
add
cmc
popf
iret
mov
ret
test
jl
inc
rcl
mov
xchg
imul
and
in
faddl
add
mov
aas
jbe
sub
xor
sbb
mov
negl
push
inc
jp
pop
repz
out
jo
add
lods
negl
jmp
insb
or
xchg
clc
pop
arpl
rcrb
push
jne
lock
push
xchg
mov
push
inc
mov
add
push
push
xchg
and
aam
pop
shl
pop
jb
insl
xor
fwait
aam
loop
scas
mov
gs
pop
mov
sub
xor
fcmovbe
out
bound
mov
imul
xor
dec
jmp
lods
sub
sbb
daa
push
icebp
sbb
leave
dec
push
sbb
aad
cmpsl
addr16
sbbb
jge
inc
mov
movsb
mov
mov
roll
in
xchg
and
pop
aad
xchg
lahf
data16
pop
add
jle
mov
jne
lea
lods
out
jmp
jns
das
push
jbe
sub
test
and
divl
mov
pop
pushf
cmp
add
xchg
imul
lea
jns
inc
push
int
push
std
cld
out
add
faddl
push
xchg
cmp
add
dec
jb
in
jo
lods
into
lods
cmpsb
sub
inc
mov
push
or
cld
xchg
jle
pop
daa
sbb
adc
test
adc
add
lcall
xchg
cli
jge
loope
stos
sbb
sbb
sti
lret
faddl
mov
nop
add
mov
mov
sbb
push
xchg
jl
ja
jb
dec
mov
jnp
test
inc
mov
loopne
adc
pop
add
mov
push
mov
push
movsl
mov
xor
xor
mov
or
ss
in
sub
jp
std
pop
and
mov
add
adcl
add
jno
or
out
xchg
ljmp
xor
xchg
jno
and
lea
add
lods
xorb
into
cmc
dec
adc
imulb
in
lds
dec
mov
add
cmpl
cltd
jne,pn
xchg
dec
xchg
outsb
loop
jns
mov
outsb
mov
jp
psrad
add
cmp
and
pop
jmp
sub
ret
sbb
push
dec
mov
mov
jge
mov
es
aad
inc
iret
add
dec
and
mov
pop
in
cmp
fdivl
push
jmp
popf
add
lea
shl
jp
mov
mov
lock
sarl
inc
jne
xchg
pmulhuw
inc
jnp
mov
add
stos
fnstcw
add
add
jecxz
frstor
mov
roll
in
pop
sbbl
test
gs
or
iret
fildl
ds
jle
xor
rcll
aad
jno
std
jmp
push
or
add
imul
les
fldl2t
or
dec
or
cmpsl
push
testb
and
cmpb
lds
add
cmpb
mov
add
mov
imul
cmc
or
inc
sub
add
lahf
cld
mov
in
pop
repnz
xchg
fsubl
fstpl
xor
jl
mov
outsl
mov
repnz
add
shrb
mov
js
ret
lea
adc
movsl
mov
testb
sbb
pop
repz
in
mov
ds
cmpsb
bound
jo
fwait
xor
and
adc
and
pop
mov
add
push
push
mov
sub
out
daa
shll
data16
or
mov
iret
and
or
mov
add
faddl
add
add
add
add
dec
add
add
add
add
cli
mov
add
incl
mov
incl
sti
mov
add
add
mov
add
incl
mov
add
fidivrs
add
add
mov
add
std
add
fidivrl
add
incl
sti
sti
mov
add
mov
add
mov
add
cli
incl
mov
add
std
add
add
sti
incl
fstpt
add
cli
mov
add
incl
fidivrl
add
incl
sti
sti
incl
mov
add
add
sti
incl
incl
sti
incl
mov
fidivrs
add
add
mov
add
cli
std
add
sti
mov
add
incl
mov
std
add
std
add
add
cli
mov
add
sti
std
add
incl
mov
fidivrl
add
fistpll
add
sti
incl
incl
mov
add
fistpll
add
mov
add
fstpt
add
std
add
incl
sti
fidivrs
add
fidivrl
add
add
mov
add
fistpll
add
fistpll
add
fdivrp
add
fidivrl
add
cli
std
add
std
add
add
std
add
fistpll
add
fstpt
add
sti
incl
fistpll
add
sti
incl
mov
fidivrs
add
fstpt
add
add
add
fstpt
add
cli
mov
add
fstpt
add
cli
mov
add
fidivrs
add
fistpll
add
std
add
sti
mov
add
fdivrp
add
fdivrp
add
cli
mov
add
cli
std
add
fistpll
add
cli
mov
add
fdivrp
add
fistpll
add
incl
mov
sti
mov
add
cli
incl
fidivrl
add
mov
add
sti
incl
mov
mov
add
cli
mov
add
cli
std
add
fidivrl
add
incl
sti
sti
std
add
fistpll
add
fdivrp
add
fstpt
add
std
add
sti
incl
sti
sti
incl
mov
incl
std
add
mov
add
mov
add
fistpll
add
add
mov
add
cli
mov
add
incl
mov
add
mov
add
incl
sti
fstpt
add
fstpt
add
add
cli
std
add
incl
sti
cli
mov
add
fistpll
add
xor
jp
and
ja
icebp
sbb
adc
mov
push
jmp
pop
iret
mov
cmpsb
cmp
mov
call
xlat
data16
andl
setl
xchg
test
inc
lahf
mov
shrb
cmc
xchg
repnz
std
inc
stos
js
js
mov
cmp
repz
xchg
push
rorb
loop
shrb
lds
sarl
push
push
cltd
cmp
mov
fsub
sbb
sbb
add
pop
ja
sub
push
in
sub
leave
inc
data16
sahf
lds
xor
pusha
push
cmpsb
or
test
dec
pop
and
iret
jne
and
ss
outsb
mov
sar
out
aaa
xchg
imulb
imul
and
push
int3
fadds
cli
clc
add
nop
push
sarl
insb
push
mov
xchg
jmp
testb
pop
adc
or
mov
push
insl
fsubl
mov
push
cmp
mov
insb
cmp
iret
lret
adc
cltd
mov
pop
xor
test
mov
sti
mov
xor
subl
pop
ljmp
scas
int
mov
sarl
push
pop
mov
movsb
call
xor
test
bound
test
out
pop
lock
arpl
mov
aam
jb
mov
jle
in
sbb
loope
jno
mov
xlat
jecxz
lods
xlat
or
push
int3
or
push
mov
jne
or
aas
inc
lds
push
push
pop
push
xchg
mov
aas
jmp
and
xchg
pushf
add
push
cmpsb
lret
cmovns
out
push
mov
adc
nop
cmpsl
pop
jno
lretw
sbb
jecxz
rcr
adc
adc
bound
pushf
and
iret
ret
hlt
mov
test
int
sub
inc
cmc
mov
icebp
mov
mov
scas
add
cmp
aad
cmc
and
jmp
iret
ja
hlt
fcoml
xchg
jmp
pop
fcmovnb
lcall
int3
insb
push
jno
leave
xchg
aam
iret
sbb
pop
movsb
or
xchg
and
dec
gs
cs
adc
inc
push
jmp
mov
arpl
add
inc
insl
mov
cwtl
and
push
xlat
ljmp
dec
loop
inc
ret
ds
insl
mov
out
xchg
sbb
and
pop
insl
inc
not
mov
out
loopne
pop
jbe
enter
cmp
es
sub
pop
cmpsl
stos
pop
cmp
shlb
pop
jp
mov
cs
jne
repz
push
outsl
loop
divl
adc
movsb
mull
test
jle
nop
loop
ds
int3
or
cmp
inc
or
arpl
push
sbb
ljmp
fstl
test
cmp
dec
jnp
stos
mov
pop
or
pop
xchg
outsb
das
lret
mov
jo
sbb
or
push
cmp
xor
xchg
mov
leave
push
push
rcll
dec
arpl
xor
or
add
lds
push
clc
dec
lret
xor
insb
jbe
test
mov
sub
stos
shlb
out
mov
jbe
mov
dec
cmp
aas
push
pop
loop
xchg
test
enter
fwait
pop
xor
mov
subl
jge
repz
js
mov
je
in
and
insb
inc
in
jns
pop
int3
mov
cld
popf
adc
and
aad
aam
push
dec
add
add
jecxz
add
mov
dec
out
xchg
subb
jg
ljmp
jns
les
popa
imull
sti
mov
adc
dec
mov
negl
mov
fsubrl
add
push
fwait
pushf
xchg
icebp
cmc
sub
cmp
push
push
or
in
jl
xor
jno
fnsave
or
sub
jo
mov
mov
mov
mov
fs
lds
lods
pop
sub
dec
rcll
push
das
push
test
cld
xor
pop
sub
cltd
xlat
dec
idivl
pop
sub
dec
lret
or
push
xor
dec
cmp
ljmp
cmpsl
adc
in
add
insb
loopne
in
mov
push
int
cmp
lds
push
jne
or
neg
add
push
lea
int3
push
shlb
jns
mov
movsl
lret
jp
ss
jnp
nop
push
mov
subb
push
jl
adc
imul
out
push
dec
xor
xor
add
sub
add
adc
add
sub
add
add
or
das
xchg
xlat
jg
das
fildll
jg
out
add
jge
outsl
imul
add
in
jg
add
in
add
add
xchg
add
add
out
add
out
cmc
add
out
add
out
add
add
jne
out
jg
decl
testl
ja
std
add
cmpsl
cmc
add
scas
insl
add
out
idiv
jne
jg
jge
mov
out
out
aas
xchg
add
jg
jg
add
testl
cmpsl
xchg
add
lahf
jge
cmpsl
xchg
std
add
cmc
add
add
cmpsl
incl
daa
lahf
in
jg
cmc
add
incl
aas
out
in
add
xlat
ja
out
pushl
out
xchg
in
outsl
div
add
iret
jg
out
out
add
insl
add
add
xchg
add
out
in
addr16
std
add
lahf
cmc
add
out
add
iret
std
add
fistpll
outsl
out
in
mov
insl
add
cmpsl
in
add
xlat
jne
aaa
add
add
cmc
add
incl
mov
incl
scas
fistpll
notl
in
add
std
add
lahf
out
add
jg
cmpsl
outsl
add
std
add
xchg
out
add
std
add
add
mull
out
std
add
jne
scas
mov
add
jg
aaa
scas
incl
das
out
add
add
pushl
das
mov
jge
mov
lahf
jg
cmpsl
cmpsl
jne
daa
scas
ja
mov
outsl
add
xlat
std
add
xchg
out
ljmp
jg
aaa
fbld
scas
mov
add
cmpsl
insl
add
jg
aaa
xchg
daa
xlat
std
add
mull
imull
testl
mov
scas
jg
das
out
add
div
add
out
add
iret
out
add
out
out
mov
jg
aas
lahf
std
add
xchg
add
lahf
jne
daa
cmpsl
jg
aaa
fcomip
add
add
std
add
scas
cmc
add
in
add
add
cmpsl
out
scas
xchg
ja
testl
add
xlat
testl
daa
iret
out
add
out
add
add
scas
add
lahf
in
aaa
cmpsl
insl
add
fucomip
add
lahf
jne
ja
add
mov
incl
jmp
out
imul
in
add
out
add
fbld
scas
incl
daa
fcomip
add
fbstp
das
out
testl
das
out
add
out
add
ja
ja
cmc
add
xchg
add
imull
mov
cmpsl
jne
das
jge
addr16
add
cmpsl
in
add
fbld
jg
in
add
out
add
jge
out
add
cmpsl
insl
add
iret
addr16
imull
outsl
testl
out
iret
out
add
std
add
out
add
lahf
in
add
iret
jg
das
cmpsl
out
add
xlat
jge
aas
mov
in
scas
fbld
outsl
out
add
out
add
out
addr16
add
xchg
add
fildll
out
incl
jg
out
imul
out
mov
xlat
cmc
add
fbld
testl
insl
add
iret
cmc
add
xchg
daa
idivl
aas
xchg
add
add
add
scas
ja
das
xchg
add
in
add
std
add
out
add
xchg
imull
out
pushl
out
daa
cmpsl
std
add
incl
daa
xlat
add
gs
out
testl
ja
testl
aas
divl
das
add
add
std
add
insl
add
jge
daa
out
cmc
add
jnp
repnz
dec
pop
and
jecxz
mov
popf
fimuls
leave
mov
lods
setl
mov
fisubs
or
or
cwtl
stos
cmp
bound
lahf
and
pop
and
sub
inc
mov
test
xchg
loopne
jge
lret
dec
lahf
pop
in
mov
inc
xchg
inc
sbb
popa
xchg
into
imul
push
pop
cmp
sub
iret
test
inc
scas
push
lcall
pop
xor
fisubs
dec
mov
pusha
and
inc
movswl
fcoml
jmp
pusha
dec
push
out
cmpsb
out
aam
sbb
es
and
jg
out
outsl
mov
cs
aam
pushf
fs
dec
adc
dec
sub
clc
lds
mov
sbb
shll
sbbb
xor
fstpl
popa
fsubrl
aam
add
sbb
cmp
lods
push
test
inc
cmp
jb
sbb
loopne
mov
aam
add
in
imul
or
fwait
mov
adc
aas
stc
ja
mov
jnp
or
sbb
addr16
mov
mov
push
push
push
cli
std
addr16
stc
dec
mov
jmp
icebp
pop
pop
out
mov
push
lods
movsb
mov
cmc
hlt
jle
subb
sti
subb
xchg
dec
setge
add
add
hlt
add
add
add
add
es
add
or
dec
or
add
add
add
add
or
pop
or
add
add
add
add
or
pop
push
add
add
hlt
hlt
add
rolb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
jg
push
add
jg
jg
push
add
aas
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
dec
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
outsl
add
outsb
add
add
push
add
add
jns
data16
add
js
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
outsb
add
outsl
add
outsb
add
add
push
add
add
jns
data16
and
xor
cmp
cmp
add
add
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsb
add
outsl
add
outsb
add
add
push
add
add
jns
data16
add
push
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
outsl
add
outsb
add
add
jb
popa
add
push
popa
add
and
push
add
insb
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
aaa
add
and
xor
xor
aaa
add
and
xor
xor
xor
add
add
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
outsl
add
outsb
add
add
jb
popa
add
push
popa
add
and
push
add
insb
add
add
add
add
adc
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
aaa
add
and
xor
xor
aaa
add
and
xor
xor
xor
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
outsb
add
js
outsb
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
outsl
add
outsb
add
add
js
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
and
push
add
inc
add
add
dec
add
add
popa
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
inc
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
