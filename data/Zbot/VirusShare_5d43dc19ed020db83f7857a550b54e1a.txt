incl
push
add
xchg
push
mov
cmp
outsl
in
push
dec
gs
fs
jne
lea
push
lea
push
push
lret
or
jb
leave
ret
xor
dec
daa
in
add
cld
push
add
pop
jnp
fnsave
push
daa
lock
es
pop
inc
arpl
fcompl
mov
push
push
and
sti
xchg
cld
jle
push
push
je
xor
and
mov
fistpl
imul
inc
pop
mov
jle
push
cwtl
push
xorl
fstps
mov
dec
insb
xor
push
jl
sub
pop
and
out
aas
push
subl
push
push
das
iret
jle
push
js
jns
xor
idivb
neg
mov
enter
not
mov
insl
fldt
js
pop
in
push
xor
lea
mov
imul
or
mov
jg
std
mov
dec
adc
jne
add
popa
sub
inc
push
not
dec
inc
mov
pop
jge
xchg
xor
ja
push
push
cmp
push
fstpt
mov
mov
mov
ss
dec
xor
aas
mov
inc
push
pop
xor
sub
sbb
neg
lcall
jge
out
fidivrl
imul
dec
ficomps
pop
mov
clc
push
cmp
popa
dec
dec
neg
mov
icebp
cs
call
aas
std
adc
das
pop
push
mov
add
aad
add
add
out
outsb
add
add
push
mov
sbb
mov
shll
pop
jmp
sub
xchg
cmp
add
pop
arpl
std
idiv
cs
xchg
add
pop
subl
add
sbb
xor
fs
push
outsl
fnsave
adc
orb
push
orb
xchg
inc
add
add
add
xor
sti
fistl
push
or
mov
inc
and
hlt
out
das
mov
dec
add
mov
adc
std
shrl
mov
sbb
mov
incl
push
sub
cs
jge
add
add
add
and
rorb
mov
dec
femms
mov
andl
fldt
out
xchg
adc
div
pusha
mov
add
or
daa
enter
and
test
mov
mov
enter
nop
fbld
xchg
mov
shll
push
xor
adc
dec
test
lods
push
lcall
out
loop
cld
mov
sbb
cmp
add
jl
push
divl
add
and
lds
mov
mov
negl
xor
sbb
test
push
xor
outsl
decl
adc
popf
jo
add
shlb
inc
jns
mov
mov
sar
sti
and
ret
pop
xchg
or
add
pop
pusha
mov
sbb
mov
adc
loope
ljmp
jmp
add
adc
mov
add
inc
daa
add
loope
fistpll
mov
inc
dec
inc
jge
push
nop
loop
and
js
incl
add
fldl
sub
mov
inc
xor
iret
add
mov
lahf
add
idiv
mov
sub
mov
lds
popa
test
dec
add
mov
jle
cmp
bound
add
cmpsb
lds
cmpsl
xchg
cmp
ret
cld
testb
dec
jle
call
inc
xor
divl
dec
push
and
shll
mov
pushf
inc
in
cmpsb
adc
aaa
jns
mov
inc
iret
pop
jl
icebp
sbb
sub
dec
aaa
arpl
clc
in
mov
out
aas
push
or
cmp
dec
ret
in
fstl
stos
push
push
data16
sbb
jae
icebp
jo
test
push
inc
or
or
jl
inc
pop
xor
out
bound
dec
add
mov
jecxz
das
pusha
sub
or
insb
imul
std
xchg
incl
mov
lcall
push
mov
cwtl
jmp
fnsave
ss
dec
enter
pop
mov
data16
fsubs
adc
fsub
lret
outsb
cmp
sbb
jb
mov
adcl
shll
fnsave
and
scas
mov
bound
lock
jae
mov
roll
add
std
js
mov
jg
push
and
push
clc
mov
ffreep
sbb
sub
xchg
ja
add
push
aas
aad
push
ja
push
sbb
js
vpmadcswd
je
sbb
or
fisttps
mov
and
dec
sbb
cld
clc
jl
xchg
int3
cmpb
push
gs
clc
fdiv
xchg
cmp
negb
mov
inc
cwtl
ret
push
repz
int
add
repz
rolb
jp
jge
jns
or
push
lds
mov
and
fstpt
pop
cmpsl
add
das
imul
das
mov
adc
inc
jb
out
movsb
pop
xchg
sub
shl
add
das
out
int3
cmp
dec
lahf
popf
pop
inc
mov
jb
js
lods
cld
shll
shrb
push
lret
xor
popf
mov
cld
fistps
loop
cmp
or
scas
mov
fistpll
xor
in
cwtl
mov
cmp
das
add
sub
divb
xchg
pop
sahf
inc
adc
or
or
jp
xchg
inc
sub
cli
dec
sbb
in
ret
inc
xchg
in
in
aam
cmpsl
jle
imul
xchg
mov
pop
lds
cmp
enter
dec
mov
adc
cmp
or
stos
xchg
jmp
fnsave
data16
add
jge
js
in
js
jo
cmp
aas
sti
insb
je
in
popf
dec
dec
pop
daa
or
scas
jae
jp
aaa
xlat
out
rclb
negb
js
frstor
push
or
inc
ja
pop
fisubrs
add
xor
push
ss
cli
jge
cmc
out
fcomps
inc
sub
into
and
int
in
cmp
jecxz
mov
xor
cmp
xor
aaa
mov
pop
enter
mov
xor
xor
test
mov
jle
cmpl
jnp
sbb
jl
cmp
push
inc
jns
mov
sbb
clc
repnz
ret
into
aam
cs
push
int3
cmp
cmc
sub
or
mov
jl
mov
pop
cmpsl
xchg
scas
insb
jo
sti
jbe,pt
xor
ds
sbb
push
out
jle
add
push
pop
push
adc
xchg
popa
imul
inc
dec
inc
mov
xor
cltd
sub
shrb
pop
fdivrp
out
out
pushf
or
fisttpll
mul
incl
mov
and
add
ljmp
mov
and
ret
and
mov
jo
adc
iret
pop
scas
lcall
mov
insl
jecxz
xor
push
jbe
mov
fnstsw
add
cmpsl
lahf
lret
ljmp
clc
mov
cmp
adc
inc
dec
inc
cmp
aad
int3
xor
out
pop
neg
daa
mov
int3
or
test
and
xchg
jne
add
insl
sub
mov
ds
mov
dec
test
and
jbe
dec
add
cltd
aas
add
iret
sarl
and
ss
call
cmpsb
sbb
mov
je
out
adc
sub
inc
cltd
push
ja
or
mov
icebp
decl
cwtl
fidivl
add
xchg
test
fmuls
add
in
lahf
aaa
adc
xchg
jl
cltd
xchg
scas
pop
inc
mov
mov
push
mov
cmp
dec
sbb
rol
sbb
adc
cmp
popf
mov
mov
xchg
fs
mov
add
cmp
or
faddl
pop
sti
add
add
xchg
cmpsb
push
xchg
cld
jp
in
fsts
fistpll
cmpb
xor
in
sbb
ret
lea
push
shlb
fs
sbbl
pop
out
cmpsl
or
out
inc
ss
ss
stos
xchg
les
loope
es
jle
mov
push
cmpsb
mov
das
mov
push
dec
xchg
add
lcall
movsl
movsl
inc
add
int3
jg
pop
mov
outsl
lods
inc
and
jg
mov
arpl
xor
adc
cli
xlat
inc
jle
jmp
cltd
out
add
jl
insb
in
pusha
mov
movlps
fs
les
sbb
push
push
add
ret
push
mov
push
or
jbe
cmpsl
adc
repz
or
jg
jmp
lahf
sbbb
dec
add
adc
mov
leave
dec
aam
and
aas
jg
pop
jmp
pop
fsubrl
pop
sbb
jne
xchg
pop
jmp
sbb
xchg
sbb
mov
or
int
mov
arpl
lods
shrl
and
aad
push
mov
aas
add
icebp
dec
pop
in
adc
dec
in
lds
mov
in
mov
dec
sti
adc
jmp
push
mov
shrl
loopne
fcmovbe
enter
shll
jl
mov
hlt
add
cwtl
fdiv
or
inc
addl
sbb
add
mov
lods
fs
mov
add
push
das
or
stos
jae
xor
shll
sbb
mov
lock
jecxz
sbb
xor
sub
add
dec
daa
mov
jb
mov
mov
mov
repz
cltd
sub
out
insl
rcrl
xchg
mov
loop
mov
add
xchg
mov
cmp
inc
inc
mov
mov
dec
sub
cmp
insl
add
and
jmp
aaa
aam
inc
adc
arpl
push
adc
push
data16
clc
popa
out
shlb
adc
into
dec
cld
insb
mov
jns
pushf
inc
sub
jg
xorps
xor
shrb
mov
jecxz
test
cld
inc
or
shrb
cmp
negb
sbb
scas
test
iret
ret
lock
xor
cltd
adc
mov
add
loopne
mov
pop
aas
cltd
test
xchg
ss
dec
dec
pop
paddsw
sub
test
xor
xchg
xor
sub
in
outsl
into
cmpb
sub
inc
movsb
out
sbbl
jns
cmp
inc
cmp
or
jge
je
call
mov
aad
cmp
cmp
repnz
aas
imul
out
adc
loope
adc
comiss
sti
pop
cmp
xor
lcall
push
mov
push
shlb
dec
call
imul
imul
test
jbe
ljmp
push
inc
adc
cli
rcll
jo
aad
cld
xchg
js
mov
in
mov
cmp
popa
and
jle
push
rorb
jle
outsb
cmp
in
mov
mov
pusha
push
cmc
int
inc
mov
in
fdivp
cli
mov
in
insl
xor
ret
arpl
xlat
and
mov
cmp
push
iret
jno
xorl
xlat
mov
add
inc
push
sub
inc
sarl
orl
jns
in
jne
and
pop
add
in
mov
inc
cwtl
mov
into
xorb
aam
aas
mov
xchg
or
popa
pop
icebp
pop
test
jbe
xlat
rcr
dec
cwtl
es
mov
jns
pop
aam
or
aas
shr
decl
mov
aas
push
jecxz
clc
mov
arpl
adc
pop
dec
jo
inc
mov
jnp
adc
fwait
mov
mov
inc
pop
les
or
testb
ja
pop
adc
xor
popa
sti
not
nop
and
vmwrite
enter
je
scas
inc
mov
sub
jp
std
stc
test
pop
jns
xor
dec
cld
mov
enter
lret
mov
shr
sbb
test
xor
ficoml
mov
xor
ja
mov
inc
push
popf
cmpsl
decl
jl
insl
incl
pop
insb
or
xchg
and
sub
out
push
loope
test
mov
les
xor
sub
mov
dec
out
inc
or
sbb
mov
mov
cltd
ds
rclb
sub
add
xchg
inc
and
cmc
jg
jbe
add
push
loope
and
jae
outsb
sbbb
lods
xchg
cwtl
cld
mov
mov
pxor
lea
ss
test
cmp
add
dec
xor
xor
fistpll
es
icebp
lret
jns
ljmp
out
inc
mov
dec
test
and
push
out
inc
jb
clc
cld
xor
cmp
fdivrp
in
cli
arpl
inc
push
cmpsb
mov
lret
std
jp
push
inc
test
test
sbb
and
fsubrl
test
sub
cli
xchg
cmp
ret
jns
sar
push
sbb
pop
inc
pop
pop
clc
sbb
into
int
call
movsl
outsl
js
pushf
fucomp
into
jge
mov
xchg
sbb
mov
push
ljmp
les
icebp
jp
lea
ret
aaa
pushf
scas
or
in
scas
fsubp
fdivr
ret
dec
das
xor
cwtl
pop
leave
mov
cmpsl
mov
and
and
push
call
pop
cli
xor
mov
dec
cmpsb
rorl
int3
imul
test
jg
jo
mov
sub
mov
sbb
add
push
push
int3
fdiv
mov
pop
test
xorl
loop
cmp
inc
xchg
shll
xor
or
push
iret
jnp
push
lds
fcmovnb
xchg
decl
sub
loop
ja
lock
lods
and
push
or
and
cmp
int
rorb
xor
inc
sbb
mov
rcl
sub
lret
or
jns
push
sbb
movsl
sbb
xchg
scas
dec
movl
inc
dec
iret
xchg
adc
dec
pop
jno
sub
push
out
mov
push
mov
inc
sbb
or
mov
sbb
pusha
cmpsb
andl
and
test
mov
dec
in
push
mov
add
lret
hlt
fwait
orl
cmp
pop
and
jge
testl
pop
pop
mov
pop
pop
cli
es
jbe
add
pop
or
scas
lret
cltd
int3
mov
ret
pop
mov
lret
pop
in
dec
sbb
fistpll
repnz
lahf
lock
push
or
add
dec
lcall
aam
mov
xchg
push
addl
je
sbb
inc
ja
jge
adc
and
hlt
xchg
xor
es
push
test
lret
mov
and
sub
sbb
subb
cld
xchg
push
popf
roll
mov
mov
inc
test
push
andb
sub
cmp
push
jp
loop
sarb
orl
adc
mov
adc
or
jns
pop
sub
mov
mov
js
cld
vpavgb
rdtsc
inc
add
jle
inc
lret
pop
adc
cld
mov
std
testb
pop
jno
sub
or
test
fwait
das
loopne
stc
dec
dec
sub
sbb
mov
fdivrs
push
cmp
push
sub
dec
or
xlat
test
popa
mov
scas
outsl
rol
xchg
in
movsl
mov
lock
adc
test
pop
jg
xchg
pop
mov
mov
ja
or
push
sbb
jp
pop
sbb
cmpsl
leave
xchg
push
frstor
shll
jne
mov
leave
lcall
mov
or
movsl
sbb
es
repz
out
cmpb
into
push
xor
icebp
mov
out
fidivrl
mov
nop
pop
sbb
and
ret
lret
das
std
out
movsl
dec
push
mov
cld
mov
xchg
pushf
and
fcmovu
repnz
call
rclb
ja
data16
sti
fs
add
mov
insl
mov
in
int
ds
push
push
js
cmpsb
mov
mov
xchg
push
mov
rolb
mov
cmc
test
int3
lods
daa
stos
xchg
jnp
ret
xchg
mov
arpl
inc
and
subl
test
jb,pt
repnz
pop
loop
adc
test
sub
pop
das
sub
imul
stc
push
jbe
inc
pop
or
mov
pop
hlt
inc
push
sub
mov
xor
decl
lret
sub
sbb
mov
xchg
inc
xor
fstpt
cltd
push
xchg
in
shrb
mov
scas
les
lret
lea
mov
mov
inc
and
out
into
xchg
jne
fidivl
push
jp
in
rcr
lahf
test
add
lret
xchg
sti
repz
mov
adc
lock
pop
add
and
inc
aaa
outsb
mov
or
fadds
sbb
lock
sub
shr
je
xchg
outsl
mov
dec
cwtl
adc
js
dec
addr16
push
dec
mov
in
or
fadd
mov
pop
jb
in
cmpsl
es
add
lret
aam
dec
dec
mov
cmpsl
xchg
aam
ljmp
add
aas
cmp
lods
or
int
or
sbb
aaa
pcmpeqw
jp
and
mov
lea
in
pop
aaa
lahf
fsubr
lahf
cld
push
pop
add
cmp
add
xchg
mov
inc
and
int
aas
aas
repz
add
and
cmc
fucomi
sbbb
pusha
or
mov
add
sub
ja
dec
in
lret
mov
out
xchg
push
xor
loopne
fsubs
arpl
cli
jnp
jle
adc
pop
dec
pop
inc
stc
daa
mov
or
test
idivl
das
insb
cmp
inc
cmp
mov
and
mov
and
lret
pop
cld
roll
je
loope
mov
in
or
pop
jae
xor
std
js
and
push
dec
xchg
jb
xor
xchg
xchg
ljmp
push
adc
adc
adc
dec
fdiv
jns
lcall
xchg
lret
add
in
inc
xorb
clc
xchg
lods
rorl
ret
insl
test
std
ret
fdivl
jl
lock
jo
jecxz
das
clc
mul
mov
cmp
or
dec
aaa
dec
arpl
ds
loop
mov
sbb
push
addr16
mov
clts
mov
and
pop
adc
xchg
loop
mov
aas
add
add
xchg
mov
mov
fdivrs
roll
shll
je
jno
jns
shlb
fmull
cmp
inc
loop
test
dec
add
into
mov
rcrb
push
fs
les
fildl
add
std
testl
dec
and
xor
std
or
daa
shlb
push
pop
je
mov
jle
jl
add
cld
mov
sti
pop
jmp
xor
lret
and
pushf
adc
aaa
pop
cmp
cmp
shl
leave
lods
xchg
loopne
adc
mov
adc
push
inc
xchg
push
mov
clc
push
adc
sub
xchg
insb
mov
stos
dec
je
sbb
adc
sub
mov
and
les
xchg
ja
bound
jmp
fwait
stc
mov
out
xor
and
sbb
jo
xlat
and
mov
lahf
cmp
scas
leave
sub
xor
sbbb
rclb
and
popa
sub
xor
ret
sahf
popf
insb
clc
dec
lds
mov
mov
push
imul
fildll
pop
jbe
stc
push
jnp
enter
cld
mov
out
push
sub
pop
iret
or
or
in
or
aad
push
inc
jp
stos
aam
inc
cmp
cld
adc
dec
and
scas
mov
cwtl
ret
xchg
mov
push
adc
aad
mov
popa
shlb
lods
pop
inc
dec
testb
inc
repz
mov
xchg
js
mov
add
cld
maxps
push
int3
inc
mov
push
cmp
mov
push
cwtl
sbb
pop
lds
into
push
gs
xor
sub
cmp
inc
adc
lret
jnp
mov
add
sahf
push
sbb
sarb
hlt
xchg
push
add
fistpl
jle
js
adc
xor
scas
jp
mov
enter
hlt
xchg
sti
lods
dec
pusha
xchg
and
sbbl
icebp
push
mov
gs
xchg
inc
test
sub
sbb
adc
pop
mov
test
cld
dec
data16
data16
inc
jle
adcb
lret
pop
push
pop
and
mov
jns
sbb
cmp
mov
aad
dec
push
je
adcl
xor
cmp
mov
jbe
add
cmpb
arpl
decb
lea
push
fiadds
fcomps
lock
leave
lret
pop
test
push
mov
push
clc
in
inc
pop
pop
xchg
add
cwtl
ret
sti
add
add
sub
sub
lret
xchg
push
cli
push
add
in
push
ss
jmp
pop
sahf
lea
sar
sub
mov
push
jo
sarb
add
adc
pop
push
jl
mov
inc
es
push
lds
scas
mov
lds
cmp
or
aaa
or
out
dec
mov
adc
xor
ljmp
inc
sti
ffree
xor
sbb
mov
mov
aad
dec
jge
mov
in
cmpsl
dec
and
dec
pop
mov
mov
inc
xchg
inc
sbb
push
cmp
int3
pop
mulb
dec
insl
js
leave
jg
insb
pop
fs
cmp
inc
call
sub
sti
aaa
inc
scas
lret
push
int3
sbb
loopne
pop
into
inc
lahf
mov
sahf
imull
sbb
mov
mov
dec
dec
outsl
std
pop
and
sub
cltd
and
jmp
dec
mov
or
mov
aaa
push
add
mov
repz
pop
jno
jno
add
cmp
sub
mov
repnz
jbe
mov
popf
insb
mov
lods
cs
stc
mov
push
std
add
pop
or
push
xchg
mov
and
or
popf
cmpsl
mov
cmp
push
shlb
add
std
sub
xor
int3
test
shlb
sbb
das
std
mov
jp
adc
and
xor
fimull
mov
dec
or
adc
std
or
dec
sbb
sbb
das
jne,pt
or
hlt
xchg
or
or
add
andl
mov
nop
push
ret
frstor
jp,pn
cmp
pop
sbb
cmpsb
clc
jo
lahf
or
or
cwtl
sarl
jmp
sub
mov
inc
add
adcl
roll
cmp
aas
enter
push
pop
stos
jns
jecxz
pop
xchg
push
call
fwait
and
lret
push
jle
int
fs
ss
cmp
pop
cmpsl
dec
clc
stc
sub
pop
cmpsb
push
mov
push
dec
mov
movsl
jecxz
or
test
mov
inc
mov
lods
shll
xor
mov
loope
sbb
xchg
sub
pop
in
or
jle
or
jle
clc
pop
xor
mov
scas
sub
lahf
into
shlb
and
data16
leave
inc
and
test
cmpsb
repz
arpl
hlt
adc
jno
push
cmpsb
scas
mov
sbb
jle
ret
xchg
rorb
jo
addb
setp
sub
rcl
loope
das
jge
jb
dec
dec
arpl
std
imul
cli
or
mov
fcomp
fwait
sbb
mov
xchg
or
lods
fdivrp
fildl
push
in
jl
stc
or
int3
fimuls
stos
test
loope
roll
in
in
loopne
in
sub
push
jp
adc
cld
jae
dec
xchg
shlb
out
inc
adc
neg
sarl
cld
dec
xor
or
dec
mov
and
addb
in
mov
mov
and
mov
mov
push
push
xorl
nop
enter
mov
xor
and
cmpsl
mov
ret
inc
pushf
sbb
xchg
cwtl
cmpsl
sbb
mov
and
rorl
jnp
sub
out
push
fdivl
sub
bound
mov
popf
mov
mov
call
je
sbb
lret
inc
addr16
jecxz
ret
push
lahf
dec
mov
mov
cli
ljmp
adc
mov
mov
add
daa
pop
dec
iret
and
inc
adc
testb
fldt
clc
mov
les
cmp
out
xor
mov
aaa
mov
rorb
xchg
cs
inc
fs
popf
dec
and
pop
mov
bound
loope
adcb
pop
insl
jp
iret
notb
roll
or
adc
out
cli
push
pop
clc
test
fwait
pop
loopne
dec
testb
aad
sbb
adc
xor
sbb
mov
sub
imul
mov
sub
sub
dec
jg
or
cmovne
out
in
pusha
jae
pop
je
adc
test
stos
shlb
mov
lods
lret
inc
sahf
pop
js
aaa
sbb
push
insl
filds
shrb
jno
popa
mov
add
adc
or
jg
outsl
call
jg
push
out
lcall
popa
mov
fnstenv
out
popf
sub
std
movsb
jg
fs
ffree
xlat
decb
test
xor
lock
xchg
fsubl
pop
inc
pusha
hlt
jne
lahf
cmpb
sbb
inc
movsb
in
out
mov
adcl
xorb
pop
rorl
mov
xchg
stos
cltd
leave
test
shll
sbb
and
cmp
ja
aaa
aaa
jp
dec
xchg
repnz
mov
jle
push
fiadds
cld
add
ret
mov
push
mov
mov
movsl
fistpll
xor
rclb
cmp
jns
push
mov
push
scas
xor
scas
cmc
or
lcall
add
das
inc
rcr
pop
inc
lea
fdivl
mov
test
xor
add
push
mov
and
sub
inc
out
addb
lcall
rclb
fdivr
push
lds
jmp
xor
sbb
add
fisttpll
push
cs
ret
mov
jl
sbb
mov
mov
pop
adc
sub
test
mov
inc
cs
repz
xchg
xchg
mov
cmp
dec
pop
and
mov
data16
lcall
or
ds
pop
inc
sub
xchg
dec
shll
js
in
add
ret
loop
pop
add
sub
or
push
dec
fs
xlat
mov
pop
push
in
xor
test
xor
xorb
jmp
dec
cmp
rorb
ja
fst
mov
test
aaa
mov
push
fstps
inc
fmuls
lock
jecxz
dec
or
pop
outsb
in
sub
popa
xchg
adc
cmp
dec
add
mov
popa
mov
add
and
pop
mov
ljmp
mov
test
xchg
inc
sub
push
and
mov
mov
pop
orl
das
inc
pop
or
addr16
int
add
shlb
clc
sbb
int
stos
xor
fsts
lret
cld
add
dec
rcr
in
inc
xlat
orl
jbe
das
js
fdivrs
xchg
mov
dec
pop
es
test
mov
sbb
xchg
cmp
mov
pop
jp
cli
jnp
and
pop
jg
cmovns
xor
cmp
jno
dec
sbb
scas
push
leave
ret
jle
rcrl
loope
pop
and
mov
mov
cmpl
jl
jne
lods
pop
ss
xchg
jecxz
aas
daa
inc
shrl
clc
jle
xchg
arpl
add
mov
in
xchg
test
mov
cwtl
fs
lret
pop
push
jo
xchg
out
fidivl
lret
sub
js
outsl
lret
xor
sbb
stc
cmc
out
loope
outsl
fcomip
and
mov
inc
aad
movsb
pop
cltd
enter
add
push
push
dec
ret
adc
push
inc
fimuls
push
dec
gs
fiaddl
stc
push
pop
lods
jb
outsb
cmp
aaa
ja
fdivr
sub
cltd
add
andb
stos
jne
dec
adc
or
jnp
out
ret
stos
sub
shlb
xchg
dec
jo
data16
push
push
or
lock
xor
test
pusha
xor
push
shlb
jno
cmpsb
ja
sub
mov
fnstsw
add
inc
arpl
adc
call
mov
outsl
mov
and
mov
in
daa
fadds
add
shlb
mov
shrb
push
mov
testb
inc
xchg
dec
subl
popa
xchg
test
mov
cs
adc
adc
lock
gs
fimuls
leave
cltd
jnp
jecxz
push
arpl
ljmp
cld
push
in
push
adc
out
into
loopne
addl
add
out
pop
movsl
stos
es
cltd
and
in
fidivs
sbb
cs
add
jle
popa
iret
mov
add
pusha
sbb
orb
loopne
stos
jo
loopne
cmc
mov
rcrl
add
cmp
mov
xchg
mov
fsubrs
js
jle
or
ss
loop
test
les
cld
mov
sbb
sub
loope
pop
mov
xchg
push
xchg
mov
add
jbe
roll
movsb
cwtl
leave
lock
loopne
add
push
and
rcr
aas
je
aam
insb
xchg
dec
push
lret
cmp
out
add
xor
or
ds
call
movl
sarb
push
daa
clc
mov
and
jmp
pop
and
jle
inc
adc
push
xchg
and
addb
cmpsl
int
and
movb
cmp
push
mov
out
push
test
pop
dec
mov
mov
lahf
test
fwait
inc
push
push
push
jl
in
xchg
jns
mov
daa
push
test
mov
icebp
sub
jo
into
pop
sub
xchg
cltd
push
popa
adc
popa
loope
xor
push
fisubrs
dec
pop
insl
mov
dec
es
ret
mov
inc
add
pop
mov
pop
xchg
out
imul
and
and
scas
movsb
mov
mov
aad
pop
loope
and
sahf
and
mov
mov
into
cld
adc
xor
jmp
xor
sbb
jecxz
cwtl
push
inc
jg
imul
sub
jno
stc
push
adc
rcrb
shll
mov
mov
lods
push
les
mov
es
and
test
movsl
jbe
mov
imul
mov
mov
inc
and
mov
push
mov
loop
push
jns
insl
enter
push
mov
fildl
loop
push
adc
xchg
cmp
cs
add
cmp
movsl
inc
ret
xchg
mov
adc
xor
mov
sahf
frstor
imul
cwtd
cs
mov
or
or
bound
pop
add
orb
lret
fisubl
popf
mov
adc
mov
es
int
imull
cmp
fcmovbe
push
xchg
les
movsb
repz
push
out
add
roll
mov
addb
incb
shrb
orb
ja
out
cld
arpl
inc
or
aas
xor
add
add
call
mov
movsb
imul
jo
jl
push
shll
sub
loopne
add
push
and
repz
aam
dec
outsl
mov
hlt
jmp
cltd
aam
lods
push
add
jmp
out
aaa
outsb
pop
mov
jge
push
push
push
fs
enter
inc
add
aaa
in
mov
loop
sbb
inc
lock
ljmp
das
xor
pop
cld
scas
loop
mov
out
mov
subb
fbld
in
push
loopne
mov
xor
pop
mov
mov
pushf
insb
adc
xchg
or
push
push
int
push
or
xor
cmpl
sbb
lods
data16
push
jmp
hlt
xchg
or
inc
or
pop
aad
pop
fsubrp
rcrl
movsb
xchg
sti
jmp
stos
push
shll
mov
add
sbb
pop
pusha
fisubs
jle
sbb
cmp
push
xor
std
movsl
paddb
dec
inc
adc
ss
sbb
sub
mov
ret
cmpsl
fucomp
mov
loop
ss
xor
or
pop
jle
adc
gs
cmpsb
lret
addr16
hlt
mov
call
adc
je
xor
fdivs
cld
mov
inc
sub
xchg
xchg
cltd
xor
imul
inc
and
sbb
les
mov
fcomps
test
iret
pop
dec
or
filds
or
sbb
pop
xor
lahf
inc
adc
repz
idivl
test
pop
sbb
sbb
ss
mov
ret
clc
fisttpl
adc
rclb
aad
pop
or
mov
bnd
fbld
push
nop
push
and
mov
xorl
add
outsb
aam
jbe
test
in
fidivl
mov
push
push
push
cmp
subl
call
pop
dec
lcall
inc
sahf
cs
sbb
fldcw
scas
fwait
mov
rclb
mov
scas
loopne
add
ficomps
inc
test
popa
ret
outsb
out
ljmp
mov
adc
jl
fstpt
jg
cld
test
or
lret
scas
movsb
add
into
jge
sbb
sbb
pop
movsb
sahf
pop
push
sbb
enter
pop
outsb
pushf
insl
bsr
fs
xor
das
sbb
inc
jp
cmpsb
aas
sbb
fcompl
xor
fists
int
mov
popl
cltd
clc
adc
jg
or
dec
dec
or
loop
rolb
fbstp
pop
clc
in
int3
stos
xchg
push
aad
addr16
mov
sbb
testb
mov
addr16
inc
mov
mov
ss
int3
mov
rolb
stos
outsl
mov
sbb
test
push
jnp
dec
arpl
push
fisubrs
sbb
cmp
jle
iret
call
sti
in
movsl
clc
mov
int3
cmp
xor
dec
and
subb
jbe
cld
mov
es
xor
paddusb
pop
jns
dec
test
sbb
and
dec
or
jl
int
cmp
cmpsl
incl
popl
dec
push
pop
and
aaa
mov
outsl
lock
add
xchg
mov
xor
testb
xorb
pushf
bound
cmpsb
jg
mov
xchg
ret
push
pop
fdivr
xor
xlat
sbb
sbb
sbb
out
push
dec
mov
xchg
inc
fnsave
ss
add
inc
jmp
sub
lret
outsl
cmc
fisttps
sub
pop
pop
and
das
hlt
rolb
jb
call
scas
pop
push
push
xchg
sarb
pushf
pusha
ss
mov
addr16
adc
inc
dec
mov
sub
jae
cltd
mov
mov
mov
or
cmc
das
cwtl
jo
test
movsl
cmp
ljmp
mov
mov
pop
sub
mov
test
or
xor
and
shr
jbe
cld
pop
gs
mov
push
test
imul
mov
mov
fisttps
dec
add
dec
int3
inc
cmp
rorl
jns
sub
mov
pop
jecxz
or
leave
xchg
ret
adc
loopne
mov
cmp
cmp
lea
andb
push
cltd
jge
mov
loop
pop
jno
rorb
pop
jle
rclb
jb
test
das
push
inc
nop
jp
pop
rcr
fcmovbe
mov
cmp
rorl
dec
inc
mov
leave
cmp
inc
add
pushf
add
mov
rclb
cmp
fidivrs
pop
xchg
xchg
mov
xchg
sub
out
lcall
or
adc
hlt
mov
xchg
dec
aaa
mov
sarl
lock
add
das
and
vpshufd
lret
pop
jp
imul
mov
fbld
stos
pop
sub
dec
pushf
sub
fdivrp
push
mov
repnz
add
dec
mov
pop
jl
mov
push
sbb
cld
lcall
bound
addl
dec
xchg
inc
je
sub
mov
call
pop
fcomi
dec
sub
out
ljmp
push
jmp
daa
jb
dec
rcr
loopne
movsb
pop
push
sub
scas
xor
fldcw
add
cwtl
sub
mov
int3
fdivl
adc
jns
jg
add
xor
rcr
aas
cmp
in
mov
sub
or
adc
icebp
ficoml
inc
stos
pop
das
xchg
or
and
push
xchg
mov
ljmp
inc
aam
aad
loopne
lea
jl
icebp
dec
in
sub
add
hlt
ret
push
sbb
xchg
push
dec
daa
sbb
aas
rorb
fistps
xchg
ja
jns
sar
cmpsl
sub
js
iret
fildl
pop
imul
ss
fdivrl
push
push
and
xchg
pop
mov
mov
dec
fnstsw
test
adc
pop
leave
adc
mov
pusha
xchg
fs
test
dec
push
jne
jo
popa
ljmp
xlat
in
test
mov
xlat
sub
cld
jg
mov
sub
mov
add
add
lock
loop
or
inc
les
xchg
pusha
sub
pop
mov
add
cli
or
aas
shl
and
lock
push
jno
and
cwtl
mov
jp
push
push
scas
mov
rcll
testb
sbbb
outsl
clc
sbb
je
movsb
and
add
aas
sub
lea
add
ds
jge
jp
or
or
insl
mov
adc
jbe
lock
mov
in
out
pop
mov
sbb
sbb
pop
lock
decl
fmul
mov
sbb
lods
mov
cli
pop
imul
out
int
mov
jmp
jge
jecxz
rorl
shlb
add
jle
cmp
movsb
in
bound
sbb
adc
icebp
push
pop
mov
adc
add
jg
test
mov
pusha
aaa
out
jns
loope
jne
sbb
pop
dec
adc
mov
or
hlt
and
mov
ss
addr16
aas
test
add
pop
aaa
jbe
xor
dec
dec
std
je
arpl
jne
fs
jecxz
aad
pushf
add
rcll
aad
je
mov
mov
xor
je
sub
or
push
inc
je
int3
testl
pop
lret
mov
subb
xor
sti
scas
shll
jle
pop
xchg
repz
add
ret
inc
cmpxchg
aas
jl
mov
inc
and
mov
and
inc
sbb
push
inc
jl
dec
rorl
in
xor
push
ja
lea
or
les
add
mov
cli
mov
pop
dec
adc
sub
cmp
mov
jb
pop
pusha
jecxz
mov
int3
sub
mov
lods
adc
and
js
icebp
sbb
lret
push
or
xchg
dec
mov
adc
out
pop
andb
mov
adc
add
ljmp
sub
or
scas
adc
arpl
fstpt
testl
and
rcr
clc
testb
rcl
inc
icebp
push
cmpsl
mov
cmp
unpckhps
testb
jbe
push
jo
ds
xchg
jge
cmp
inc
jmp
xchg
lods
dec
and
mov
xchg
cmp
dec
adc
imul
dec
or
repz
or
mov
nop
hlt
lret
pop
xor
xor
mov
and
in
nop
les
bound
cwtl
movsb
add
cld
jmp
xlat
mov
jp
xchg
push
movsb
inc
inc
sbb
movl
div
pushl
inc
mov
pop
cmp
mov
cmc
push
mov
push
pop
mov
shl
outsl
rorl
sbb
cs
mov
cmpsl
and
add
scas
fs
out
out
xor
lahf
imul
and
jno
ja
pushf
scas
loop
mov
icebp
aaa
push
leave
adc
ret
or
dec
cmp
daa
int
fsubr
push
cli
xlat
xchg
xchg
sub
sbb
fwait
jl
xchg
imulb
fwait
stos
add
add
mov
data16
sbb
cmpl
stos
ret
movsl
fstps
pop
insb
loop
xchg
inc
iret
ja
fs
pop
out
jle
mov
in
rorl
cmpsb
aaa
jmp
pop
dec
cwtl
xor
aas
fdivl
sbb
mov
outsl
sbb
scas
pusha
lahf
cmp
or
cmp
dec
add
loopne
call
xor
loop
xchg
dec
fwait
aaa
jo
xchg
jle
and
data16
frstor
jne
lods
fldt
mov
or
gs
enter
ja
jo
push
jb
add
lea
mov
pop
push
mov
loopne
movsl
jnp
adc
or
test
mov
lret
hlt
add
jle
aad
and
hlt
lret
or
std
cld
jnp
arpl
sub
xchg
adc
or
pop
sbb
mov
movsb
hlt
int
rclb
cwtl
push
pop
outsb
call
in
xlat
movsb
mov
pop
movsl
outsl
cld
jns
and
aas
arpl
fadds
inc
sbb
loopne
xchg
mov
clc
and
aad
fistl
mov
sub
mov
aas
and
dec
adc
adc
xchg
mov
sbb
add
dec
mov
or
jg
push
xor
mov
ja
inc
test
push
add
mov
push
inc
mov
and
push
or
mov
adc
push
fs
push
aam
dec
cld
add
loop
or
loop
mov
fldt
adc
jo
andb
out
adc
and
dec
push
sub
cli
bound
mov
ret
mov
or
mov
repz
clc
je
adc
lock
daa
in
sub
shlb
pop
dec
iret
cmp
decl
iret
adc
out
mov
jg
mov
enter
add
outsw
push
jge
inc
push
xor
mov
adc
jecxz
mov
mov
and
sbbl
pmaxsw
push
inc
push
xor
push
loopne
mov
aas
and
test
adc
cmp
add
imul
add
aaa
call
outsl
lcall
adc
push
loopne
mov
in
push
inc
add
icebp
dec
mov
outsb
add
push
adc
inc
adc
mov
inc
xchg
add
mov
sbb
es
jno
xor
cs
cmp
cltd
test
sub
lea
xor
out
mov
or
dec
inc
stos
pop
pop
sbbb
bound
inc
add
popf
ljmp
das
xor
cmp
in
or
push
and
test
lret
je
adc
sbbb
pop
sbb
andb
shr
push
nop
cmp
inc
cmpsl
lock
lcall
cltd
xchg
ds
ljmp
loope
inc
inc
enter
pop
ficomps
add
test
or
jo
and
hlt
pinsrw
pop
inc
bound
pusha
dec
test
pop
das
std
add
sub
fstpl
or
cld
stos
cs
cmpsb
pop
adc
fldcw
in
push
sbb
lret
add
enter
add
test
test
aaa
xor
repnz
push
icebp
scas
sub
cmp
movsl
movsb
fcmovnb
in
incl
adc
scas
and
into
in
pop
jg
mov
add
mov
lock
jmp
mov
jecxz
adc
adc
fcmovnu
bound
xor
push
pushl
adc
hlt
sbb
and
push
bound
xlat
outsl
push
mov
mov
sub
bswap
adc
negb
inc
decl
jns
jno
fdivp
fldt
pop
pop
dec
rclb
or
or
jns
rcrl
int3
test
add
iret
lock
das
jo
out
inc
scas
sti
test
dec
mov
outsb
lods
sub
rorb
stos
push
jae
lock
lret
mov
push
clc
dec
push
adc
or
dec
enter
dec
and
repz
or
push
shl
popf
test
inc
mov
jg
lock
pushf
mov
mov
cmp
outsl
sbbl
pop
sahf
jne
or
jne
jmp
xchg
outsl
je
adc
shr
aam
mov
push
enter
jb
or
or
ss
mov
jbe
ret
dec
mov
repnz
push
ja
rcr
xlat
and
mov
or
in
mov
xchg
imul
sti
cmp
bound
mov
out
js
mov
imul
jb
stos
add
fisubrs
pop
mov
mov
cltd
jb
imul
fisubl
push
sub
and
inc
pushf
push
cmpl
pop
mov
decl
jbe
fs
sub
jns
mov
shll
test
outsb
mov
inc
xor
faddp
repz
orl
popa
loop
add
or
push
mov
movsl
mov
jecxz
mulb
inc
mov
xchg
xchg
imul
pop
sbb
mov
and
dec
and
or
push
jp
push
adc
mov
aam
lds
cltd
push
sbb
decb
pop
lock
in
jns
push
loopne
mov
std
mov
push
fmul
and
data16
mov
roll
jle
push
fsts
es
mov
cmp
dec
dec
mov
inc
stos
inc
and
dec
sub
and
mov
mov
mov
cwtl
and
ret
idivb
fildll
int
jmp
andl
arpl
xor
scas
outsb
adc
and
xchg
jmp
dec
inc
jb
js
xchg
xchg
jg
movsl
das
lea
fiaddl
cmp
mov
xchg
insl
aas
clc
das
mov
roll
outsl
dec
or
fwait
andb
pop
and
jl
xchg
icebp
xchg
mov
jnp
cmp
inc
sbb
or
rorb
pushl
mov
add
jb
incb
in
mov
mov
jl
in
xchg
test
sub
ret
out
sub
and
in
or
xor
andb
aas
ljmp
inc
imul
jecxz
pop
inc
sub
icebp
movsl
pop
cli
lods
sbb
push
push
aam
push
xor
sub
aad
loopne
aaa
and
mov
in
mov
mov
dec
outsb
sub
int3
mov
les
jo
test
jmp
adc
mov
decl
inc
push
sub
cwtl
lds
roll
call
icebp
xchg
incl
sbb
scas
mov
xor
mov
popa
dec
andb
xchg
test
int
hlt
adc
sub
rorl
cltd
iret
clc
cmp
nop/reserved
dec
push
idivb
inc
pop
inc
out
jno
cs
inc
dec
dec
out
push
push
adc
jbe
mov
or
rcrl
cmp
aas
xor
jo
test
cmp
mov
or
push
lret
inc
aaa
push
push
leave
jns
das
xor
ljmp
aad
popf
loopne
repnz
or
cwtl
or
push
push
pop
outsb
pusha
fstpt
shrl
enter
das
pop
jecxz
mov
cmp
xor
cli
jmp
xchg
mov
shlb
inc
add
das
pop
or
stos
aaa
adc
dec
mov
dec
in
movsl
incl
or
rorl
jl
mov
pop
push
mov
sbb
subb
mov
pop
sbb
cmp
jle
sbb
adc
xor
daa
das
rolb
outsl
jmp
mov
push
outsb
cmp
lds
or
lret
pop
aas
aad
sub
cwtl
into
les
and
jecxz
fs
movsl
inc
xor
mov
adc
adc
pop
xchg
inc
leave
mov
cwtl
jno
add
nop
push
pushf
ret
enter
push
add
fbstp
pop
shlb
inc
mov
push
in
or
dec
jg
xor
sbb
jl
mov
adcb
cmp
or
xchg
outsl
mov
repz
adc
leave
notb
inc
imulb
xchg
test
iret
dec
loopne
iret
push
bound
sub
or
mov
pop
es
push
inc
nop
mulb
in
mov
and
aaa
mov
clc
sub
push
dec
jg
sbb
cli
sbb
mov
in
fildll
and
insb
push
mov
aam
pop
call
adc
fcmove
push
cmc
pushf
xor
clc
mov
in
loopne
or
mov
push
sub
or
push
loop
dec
mov
mov
fistps
sub
jge
lcall
nop
xchg
push
cli
mov
test
sbb
xor
mov
nop
cs
mov
test
and
push
push
jg
aaa
adc
dec
and
mov
notl
hlt
dec
je
icebp
inc
dec
data16
and
mov
ja
loope
ret
bound
cli
cmpsl
sbbb
jp
mov
sbb
mov
xchg
fadds
out
mov
inc
cmp
xchg
mov
in
inc
leave
sbb
test
mov
inc
jo
iret
aad
mov
mov
pop
idivl
inc
inc
jae
add
inc
loopne
ret
inc
outsl
cli
jmp
popa
inc
pop
dec
pusha
adc
xor
sti
rolb
xchg
in
daa
stc
ljmp
jg
shl
pop
dec
cld
in
adc
push
aam
adc
test
outsb
decl
cld
repnz
testb
std
add
xchg
lret
adc
mov
outsl
xor
jl
cmp
cli
mov
mov
repnz
test
xor
repnz
sbb
lea
andl
cli
das
cld
or
aam
cwtl
pushf
add
inc
pop
test
hlt
es
jno
mov
mov
dec
cs
dec
dec
add
outsb
sub
mov
ds
pushf
or
mov
in
lds
cmp
ret
clc
or
hlt
scas
mov
dec
imull
push
call
dec
fdivs
shrl
pop
inc
stc
adc
adc
cmc
es
cmpsb
xor
jb
jo
adc
scas
cli
pushl
pop
or
jo
pop
sbb
repz
inc
repz
mov
push
push
loope
mov
jl
mov
mov
jecxz
cmp
mov
mov
ret
insb
xchg
mov
cmp
inc
mov
pop
inc
mov
dec
sbb
push
lock
mov
sbb
lock
sub
data16
stos
sbb
movsl
mov
addr16
xor
sbb
or
int3
popf
dec
out
repnz
dec
mov
pop
cltd
cmp
mov
cmp
mov
or
add
lret
dec
xorb
ss
shll
mov
out
dec
bound
pop
or
movsl
inc
loopne
fistpl
inc
jge
sub
inc
mov
ss
adc
push
jle
jne
adc
xorb
clc
movsl
lods
pop
mov
mov
adc
jbe
shrb
imul
test
jne
push
mov
jmp
loope
sti
adc
fldt
dec
ret
inc
mov
mov
aas
js
bound
rol
out
scas
movl
dec
lcall
pop
jp
cld
mov
xchg
push
lcall
aam
jmp
dec
arpl
lock
push
call
lahf
pop
loope
ja
xchg
xor
out
add
or
xorb
adc
sbb
mov
mov
sub
xchg
fs
dec
leave
addr16
xchg
dec
sub
sub
xchg
dec
arpl
mov
pop
mov
adc
adc
sti
and
pop
pop
ret
ss
add
decl
inc
stc
adc
imul
mov
std
xchg
mov
and
and
xchg
cmpsl
or
push
loop
mov
pop
jp
adc
adc
sbb
mov
aas
cmpsl
decb
xor
orb
hlt
in
push
mov
clc
push
mov
dec
mov
xchg
or
mov
and
fsubrl
fadd
mov
loopne
test
mov
mov
pop
scas
aaa
jo
fwait
loopne
andb
or
adc
movsl
sti
test
cltd
jbe
and
test
or
jae
pop
mov
fcomip
icebp
adc
std
or
adc
lods
clc
sbb
ss
cmp
pushf
mov
push
mov
jnp
clc
outsb
dec
orb
shl
pop
and
in
lahf
lahf
inc
xchg
dec
or
int3
xlat
xchg
iret
cli
push
mov
mov
call
testb
jae
cmp
gs
dec
shr
rcrb
adc
dec
call
andb
xrelease
push
cmpb
or
cmp
icebp
movsl
loopne
in
inc
test
dec
and
adc
push
inc
cld
sbb
mov
hlt
fldenv
jg
cmc
push
or
mov
out
push
add
fs
jbe
add
cmpsl
jb
popf
test
sub
sub
cli
add
in
xchg
sbb
jmp
data16
jo
out
leave
loopne
testl
mov
jg
mov
adc
inc
pushf
pusha
into
dec
lret
dec
lahf
lea
mov
leave
xorl
das
mov
push
mov
cmpsl
mov
fisttpl
inc
out
push
mov
js
xor
add
mov
jg
jg
js
lods
rcrl
rcr
add
clc
orb
dec
mov
jo
imul
mov
cs
adc
mov
in
adc
cmp
icebp
stos
jns
into
xor
and
mov
pop
sahf
pop
movb
rclb
xchg
mov
lds
cmc
mov
mov
das
xor
jg
gs
mov
out
xchg
rep
xchg
das
fcomip
pusha
mov
mov
lret
or
adc
pop
stos
push
mov
scas
outsb
dec
sbb
into
jnp
sbb
cmp
cmpsb
mov
xchg
jnp
ja
push
aas
rcrb
push
push
ss
cld
jo
pop
jb
clc
mov
repnz
es
sub
pop
lahf
scas
mov
das
inc
and
movsb
repnz
popf
imul
xchg
jmp
sbb
jae
fsubrs
lock
movsl
dec
pop
mov
aaa
mov
lahf
ja
adc
push
psrlw
cmp
fidivs
ret
mov
js
dec
in
cmp
mov
push
inc
mov
sti
xchg
cmp
inc
dec
sub
jbe
ja
jbe
nop
stc
mov
xchg
sbb
inc
or
push
sub
adc
mov
test
sbb
sti
sub
mov
sbb
push
add
test
push
inc
mov
enter
rcl
xor
adc
in
fsts
or
ljmp
loopne
pop
cmp
jle
sub
pop
jl
or
cmp
add
or
mov
cmpsb
push
push
xor
cmpsb
test
aas
add
jge
out
shlb
add
mov
or
jmp
das
aam
mov
lods
add
aad
arpl
and
add
mov
popa
sbb
loopne
inc
jmp
sbb
xchg
insl
add
inc
fucomp
ret
cs
outsb
and
mov
out
mov
ds
aaa
rcl
clc
mov
popa
dec
lea
insl
mov
mov
outsl
jecxz
mov
testb
mov
push
aas
cmp
mov
std
and
jae
popa
or
lcall
adc
jno
adc
or
es
or
shr
fwait
adc
jp
jo
add
jg
idivb
mov
add
shrl
outsl
call
add
pop
push
and
popa
out
adc
add
jle
movsb
pushf
lret
int3
ret
jp
inc
inc
lea
shlb
ds
inc
cmc
test
jle
and
lods
xchg
jb
push
popf
cli
test
push
cmc
mov
mov
ljmp
sarl
mov
rcr
adc
push
mov
push
jecxz
or
xlat
iret
gs
or
aaa
aam
adc
pusha
lret
lret
mov
lahf
jl
or
outsb
imul
inc
jle
mov
in
imul
push
dec
fcmovnu
add
cmp
daa
push
push
push
sbbl
in
out
aas
push
push
and
adc
inc
sbb
and
push
test
mov
pop
icebp
push
lahf
sbbl
popa
setbe
mov
cs
xor
dec
ror
fisttps
es
mov
jle
cwtl
fs
lret
inc
test
or
mov
mov
mov
sbb
dec
pop
shrb
adc
int
stc
cmc
push
fcmovnbe
dec
sbb
pop
mov
int3
int3
mov
sub
add
pop
and
mov
repnz
jns
and
sub
mov
pop
mov
jb
and
ljmp
mov
jl
jae
xchg
mov
fcoml
rorl
fsubl
xchg
ja
rcll
std
clc
test
sbb
stos
mov
loopne
sub
andb
stc
add
adc
sub
sbb
pop
mul
and
dec
scas
mov
insb
out
movsl
fnsave
cmp
dec
loopne
dec
dec
repz
mov
mov
ret
lea
push
mov
ss
in
push
adc
test
cli
repnz
add
inc
sub
cwtl
push
jg
mov
sub
or
roll
xor
mov
push
push
dec
mov
inc
push
lcall
shrb
inc
test
mov
add
push
add
ret
and
lock
shr
ds
mov
pop
movsb
pop
clc
rcrl
push
sub
xor
mov
jge
fistl
loopne
inc
inc
rcll
das
mov
fnclex
lret
cpuid
dec
iret
ret
out
pop
fcmovnb
std
mov
fiaddl
in
adc
inc
add
shrl
push
icebp
aaa
mov
mov
outsb
sbb
cmp
sub
jle
push
mov
outsb
das
mulb
pop
adc
sub
lds
fisubrl
in
std
cltd
xchg
push
sub
or
or
movsl
sub
rorl
inc
les
es
je
shl
je
out
std
mov
std
out
ja
cmp
inc
cmp
jb
repnz
cmpsb
lds
pop
addl
mov
mov
movsl
push
fwait
mov
jns
push
mov
mov
jmp
pop
adc
inc
pushl
mov
push
mov
or
cmpsl
or
test
push
mov
and
gs
roll
test
jo,pn
push
mov
add
jno
xchg
int3
loop
mov
pop
mov
dec
push
orb
ja
sbbl
sub
inc
les
mov
mov
js
lea
jne
push
arpl
rorb
test
xchg
sub
sub
call
dec
mov
sbb
outsb
lds
cmc
fwait
adc
cli
scas
bound
test
or
not
ja
sub
lods
or
sub
mov
mov
cs
sub
and
push
jo
test
mov
sub
adc
mov
loop
into
hlt
lods
sub
push
rcll
mov
mov
add
lea
nop
add
add
test
push
mov
fldt
jnp
movsl
cmpsl
cltd
xchg
cmpsl
sarb
xor
mov
cmp
gs
lahf
js
mov
add
adc
and
add
notl
jmp
js
mov
fwait
sbb
add
cmp
jno
fwait
adc
mov
dec
repz
inc
bound
add
pop
ja
push
clc
mov
sub
pop
pop
imul
mov
repnz
xor
jno
pop
cwtl
cmp
roll
jg
int3
outsl
dec
pop
dec
bound
pop
lods
out
push
mov
xchg
mov
cmp
pop
loop
xchg
mov
sub
pop
test
mov
stc
mov
cmp
into
xchg
mov
pop
push
lret
ds
leave
jbe
mov
das
adc
mov
sbb
cmp
mov
subl
cli
in
lods
aad
push
mov
push
adc
or
sbb
sub
adc
insl
in
mov
lds
jmp
push
scas
stc
cltd
dec
mov
fwait
cmc
xchg
loopne
push
mov
das
outsl
sub
xchg
incl
stos
jne
ret
inc
in
xchg
cld
push
xchg
jb
mov
add
inc
jae
clc
rcrl
int
xchg
out
popa
mov
aas
orb
pop
iret
popa
std
dec
ret
outsb
int3
inc
jb
sbbl
jnp
xorb
outsb
out
cmp
push
and
std
negb
mov
aad
pop
call
stos
xor
mov
pop
push
lcall
cmpsb
inc
mov
or
sbb
fsubrs
jge
dec
mov
mov
add
es
js
push
adc
lret
mov
sbb
push
sahf
or
xor
cli
decl
roll
push
xor
push
or
ror
outsb
xchg
or
jmp
into
inc
ss
int3
sahf
pusha
mov
xor
cmp
mov
leave
popa
bound
pop
jno
xchg
push
or
sbb
pop
and
jmp
jg
dec
jmp
push
repz
mov
jle
fwait
mov
cmpsb
sub
xor
popa
jmp
in
mov
je
jge
mov
xlat
int3
repnz
lahf
mov
rorl
fldl
scas
push
and
lcall
outsb
jmp
mov
pop
mov
out
or
das
cld
add
adc
pop
xlat
inc
inc
sub
mov
les
sub
aaa
incb
inc
data16
push
dec
je
ret
and
push
cmp
jb
xchg
sbb
cmpsl
push
scas
mov
jbe
insl
out
fsubrs
ljmp
inc
xor
push
call
jge
fldpi
mov
inc
sbb
je
cwtl
rcll
mov
add
cs
mov
cli
and
pop
ret
stos
js
xorb
fdivp
push
movsl
outsb
pop
push
dec
inc
mov
inc
or
loopne
jmp
jp
mov
inc
sub
or
cmovp
pushf
test
adc
fcomi
sbb
mov
stos
dec
jnp
inc
and
icebp
xchg
das
fdivl
and
pop
insl
js
cld
and
aas
iret
test
mov
and
jmp
rorb
mov
push
cmp
sbb
fwait
mov
ror
outsl
adc
andb
mov
mov
out
rol
mov
fwait
cld
xchg
cli
in
lcall
mov
sti
and
dec
dec
jbe
insl
je
jne
or
jmp
sahf
loopne
adc
sub
mov
lock
xchg
daa
mov
ljmp
xor
les
jge
add
mov
jg
cmpsb
ja
leave
gs
push
cmc
aad
fcmovbe
test
mov
sbb
or
add
sahf
sbb
fsubrs
in
mov
js
mov
mov
outsl
dec
sahf
pusha
push
incl
aas
insb
stc
lods
std
add
sahf
in
dec
jg
push
hlt
pop
mov
je
nop
outsl
ja
cld
pop
clc
nop
ret
mov
imul
and
dec
je
lods
sarb
pop
rolb
cs
daa
cmp
shr
xlat
fwait
sub
mov
pop
pop
cltd
push
das
cmp
ret
imul
push
sub
movnti
stos
inc
mov
sbb
adc
loopne
test
push
mov
insb
aad
aad
dec
pop
out
cmp
loopw
or
nop
jge
shll
insl
syscall
mov
in
cli
icebp
mov
xchg
daa
or
ficompl
jo
and
adcb
add
cmp
inc
aam
inc
and
inc
mov
adc
rolb
sub
out
xor
es
add
pop
xchg
unpcklps
test
lock
sbb
pop
cmpsl
mov
cli
push
fidivrs
adc
pop
xor
int3
sarl
out
and
and
xor
popf
dec
mov
loop
sbb
std
movb
data16
test
das
mov
cmp
rclb
lret
push
cmp
push
dec
popf
test
repnz
sbb
hlt
aaa
cli
or
sub
xchg
jge
push
ss
jmp
arpl
sbb
fadds
add
push
mov
push
cmpsb
pop
popf
arpl
cmp
push
repnz
push
clc
lock
and
mov
and
dec
xchg
popa
lods
test
pop
add
mov
jno
dec
cmc
push
aad
jnp
mov
push
out
xchg
inc
jge
loop
dec
cmp
call
bound
mov
adc
mov
adc
and
nop
pop
cmc
mov
sub
pop
jge
pop
fisubrl
push
gs
adc
dec
loopne
inc
lods
into
xlat
cmp
hlt
dec
mov
sahf
push
nop
test
notl
sti
in
dec
daa
dec
mov
push
ret
xchg
dec
sub
push
aad
outsl
mov
fnstcw
test
adc
outsl
scas
es
je
les
or
cmp
dec
outsb
mov
test
inc
adc
aaa
out
inc
sub
mov
imul
js
pop
push
mov
lock
in
sbb
sbb
pop
cmp
inc
push
and
cs
fdivl
sbb
in
cwtl
sti
xor
and
cmc
push
mov
sarb
xor
add
mov
popa
mov
xchg
fcmovnbe
in
push
roll
fidivs
mov
movsl
test
adc
push
mul
test
xchg
xor
push
stc
mov
jecxz
std
adc
mov
push
and
aad
or
pusha
stc
mov
add
dec
sti
sub
imul
in
repz
jb
loope
pop
scas
or
inc
aaa
inc
into
cld
aad
fs
js
loop
jge
jno
jg
jl
xor
dec
and
pop
dec
lods
je
ret
addb
jns
and
loop
int3
jge
inc
push
lahf
mov
fldt
fidivrl
insl
mov
leave
sahf
jg
cld
mov
jg
jmp
cmp
sub
cld
in
pop
inc
mov
pushf
inc
adc
arpl
shrb
sub
add
das
iret
fwait
jmp
or
lret
cmp
leave
loopne
mov
loop
jecxz
call
mov
cmc
stc
adc
stos
pop
adc
xor
lods
mov
ljmp
iret
mov
add
shr
fucompp
inc
push
push
push
or
mov
mov
int
cmp
and
or
or
jnp
mov
repnz
mov
push
lock
push
or
push
adc
cmc
sbb
xor
ret
out
lods
fldt
sub
xchg
mov
pop
addr16
xor
sahf
loope
sti
pop
dec
aas
icebp
popf
jne
fcoms
inc
jp
xchg
mov
aas
or
push
fdivrs
xchg
adc
fisubrs
xchg
sub
xchg
pop
inc
push
jecxz
push
mov
pop
or
adcl
les
adc
int3
mov
imul
test
daa
sub
sbb
push
cmp
fildll
dec
sub
in
push
lods
and
pop
jmp
mov
sbb
jg
dec
insb
dec
std
hlt
push
mov
xor
js
xchg
adc
mov
maxps
xchg
out
fwait
dec
mov
andl
sahf
fcomps
in
dec
fbstp
push
sbb
add
sahf
xchg
pop
es
incb
pop
out
in
mov
dec
mov
mov
cmc
pop
mov
pushf
mov
clc
repnz
pop
or
adc
cld
test
push
jecxz
pop
sub
push
nop
mov
aad
and
lea
jo
adc
xchg
loope
clc
fcomi
sbb
dec
mov
xchg
je
mov
or
xlat
push
inc
cld
mov
jb
push
xchg
add
mov
bound
ss
loopne
add
xchg
pop
aas
faddl
pop
test
test
adcb
add
or
sar
jmp
inc
fldt
sahf
inc
je
out
sbb
dec
pop
pop
adc
sbb
pop
loopne
sbb
movb
in
mov
and
inc
mov
lea
aad
in
add
push
cmc
pop
inc
shl
cmp
fcmove
fistps
jmp
xchg
push
in
mov
xor
in
mov
mov
sub
add
cli
outsl
insb
aaa
jb
add
cmp
leave
in
cmovo
cmp
les
pop
add
dec
aam
js
dec
lds
repz
es
mov
push
or
push
mov
pop
jp
fisttpll
xchg
fiadds
sbbb
cmp
mov
xchg
shll
inc
outsl
adc
imul
or
pop
inc
sub
add
shlb
mov
and
or
mov
dec
pusha
mov
lea
aas
cli
lods
ficoml
mov
pushl
push
xchg
pop
js
pop
push
jae
add
lock
aam
mov
push
out
stos
fistpll
mov
inc
fcomps
jne
mov
fcoms
arpl
and
nop
jg
fisttpll
adc
sub
mov
into
push
test
add
mov
fstpt
pusha
repnz
pop
inc
into
dec
fwait
sub
inc
xchg
xchg
outsb
std
sub
push
mov
pushl
ljmp
enter
orb
push
lods
les
ret
in
dec
pop
clc
sbb
mov
sub
pusha
adc
repz
rcl
and
sbb
and
std
add
dec
je
stos
adc
lea
lret
cwtl
dec
push
in
stos
xchg
sub
jns
push
mov
mov
ljmp
bound
in
fcoms
inc
cmpb
cmpsl
jns
aaa
or
dec
add
inc
mov
ficoms
test
mov
fs
xor
aam
hlt
mov
mov
cmpl
pop
lcall
leave
pop
pop
adc
jne
cwtl
fstl
dec
scas
in
adc
arpl
mov
in
fisubl
push
add
adc
std
fbstp
add
xchg
push
mov
adc
stc
mov
inc
xor
aas
sbb
shl
aad
push
jns
cs
fists
insb
mov
pop
inc
jo
dec
pop
mov
mov
dec
xlat
jo
mov
mov
es
mov
push
or
jae
call
cs
popa
rorl
push
cmc
hlt
inc
mov
pop
cmp
roll
lret
out
add
cwtl
jmp
and
sbb
stos
sbb
and
jmp
loopne
lcall
jecxz
lock
dec
adcl
add
jecxz
sub
push
es
stos
or
cmp
sbb
adc
push
pop
out
sbb
adc
mov
pop
les
pop
sar
add
stc
push
hlt
sub
mov
mov
int3
mov
push
popl
dec
std
jg
popw
shrl
gs
cmp
in
inc
iret
daa
ret
mov
lock
je
push
repz
out
adc
ret
les
outsl
or
dec
or
sub
cmc
adc
test
clc
mov
mov
sbb
in
pminub
dec
sub
loopne
xlat
pandn
jle
mov
enter
cmp
dec
cwtl
in
in
xchg
adc
das
jl
mov
and
orb
cmp
mov
scas
lock
push
cs
incl
ret
push
in
shr
ret
inc
jecxz
xor
call
outsb
and
or
dec
push
mov
dec
clc
add
adc
incb
les
push
xlat
push
push
jmp
loop
push
loope
mov
clc
jg
mov
pop
call
mov
pop
lods
ljmp
mov
shrl
lahf
push
mov
mov
push
mov
repz
aaa
outsb
frstor
and
add
inc
decl
popa
push
or
mov
add
xor
cmc
cs
add
iret
xor
ljmp
push
dec
push
adc
ror
sbb
pushf
pusha
mov
pushl
pop
pop
insl
addr16
in
into
add
add
jne
jne
sbb
nop
xor
dec
add
sub
or
sahf
cs
mov
cmp
loop
adc
xchg
ja
push
fwait
hlt
jmp
sbb
test
inc
pushf
fisttps
loopne
adc
adc
sbb
dec
jle
ljmp
or
stos
cmp
test
daa
xchg
mov
dec
gs
lock
xchg
int3
jnp
aad
lcall
loopne
loop
into
pop
adc
call
push
mov
lcall
mov
mov
stc
push
xchg
mov
inc
mov
ror
and
outsl
push
sbb
lret
xchg
xchg
pop
pop
xlat
cmpsb
mov
inc
mov
movsl
adc
and
lock
daa
adc
dec
insl
jmp
jbe
pop
dec
jne
mov
bswap
add
js
clc
push
aas
popf
int3
dec
mov
faddl
fists
mov
push
arpl
mov
jle
xchg
outsl
outsl
adc
mov
mov
into
push
cmpsb
dec
outsl
jg
into
test
sub
stc
sbb
movsl
test
jno
bound
or
push
inc
shrb
sbb
mov
mov
cs
mov
stos
xchg
mov
mov
outsb
pop
loopne
sub
das
jg
xlat
jecxz
rcr
sub
mov
sbb
fsubs
leave
aad
pop
add
sbb
xor
mov
aad
stc
notb
or
add
jge
mov
mov
cmc
arpl
mov
inc
jp
iret
sbb
mov
xchg
cs
sbb
lock
sub
cltd
xlat
sbb
xchg
fwait
les
jmp
xor
or
out
xchg
or
and
push
ja
sub
dec
stos
arpl
dec
adc
mov
cli
mov
das
add
mov
fists
inc
cltd
add
mov
mov
sti
movsl
inc
movb
xor
push
adc
mov
add
hlt
sub
insb
inc
mov
out
sahf
and
leave
rcrl
pop
jge
xchg
jmp
cs
jbe
dec
dec
cmovs
shll
and
cmp
adc
sahf
das
insl
sbb
lcall
or
xrelease
leave
sar
push
adc
jno
mov
sub
cld
mov
roll
adc
xchg
push
clc
pushl
enter
es
enter
loop
cs
ret
subl
and
data16
adc
push
push
push
adc
fisttps
dec
mov
pop
les
inc
adc
inc
aas
fs
push
jg
sar
push
mov
dec
push
push
push
cwtl
imul
add
push
push
push
sbb
and
loop
push
jno
dec
push
daa
dec
sbb
push
xor
jle
std
aaa
adc
dec
neg
inc
add
sbb
inc
mov
repz
dec
sti
fmuls
lock
adc
mov
sub
gs
xor
push
hlt
fisubrl
fimull
inc
filds
call
jg
adc
push
insb
mov
not
sbb
cmp
jo
sub
lcall
push
mov
std
jbe
js
cmpsl
ja
shrb
lock
mov
in
adcb
inc
adc
dec
subb
inc
add
push
push
insl
test
xor
inc
cli
aaa
mov
outsl
push
call
xchg
lock
incl
sbb
in
int
je
push
push
xor
inc
lock
outsb
cmp
aaa
aas
inc
push
xor
push
jae
ss
cld
test
push
dec
push
aas
flds
jns
arpl
push
neg
add
dec
pushl
adc
add
neg
pop
sbb
adc
xlat
sub
not
add
xchg
sbb
in
mov
popa
jle
sub
add
mov
cmp
fcomps
clc
push
cltd
inc
aaa
push
or
cmp
outsl
subl
inc
mov
and
dec
js
movsb
mov
inc
push
and
sbb
call
fcoms
sub
dec
ljmp
mov
or
sbb
sub
jnp
sbb
insb
dec
out
dec
ja
inc
clc
and
pop
xchg
bound
inc
or
cmp
dec
insl
je
push
pop
je
dec
inc
cmpsb
xor
jbe
call
push
inc
sub
or
mov
inc
mov
mov
cmp
or
mov
popf
aam
xor
addr16
js
cmc
push
imul
imul
decb
cli
neg
add
not
mov
ja
xor
daa
negl
movsl
ret
test
add
add
mov
cmpl
xor
js
cmp
loopne
mov
jae
push
pushf
add
xchg
mov
fwait
push
jnp
mov
dec
inc
out
outsb
bound
popa
xor
push
dec
ljmp
ret
enter
loop
push
push
imull
inc
pop
insl
jg
push
dec
jae
dec
xchg
sbb
push
ficoms
fmuls
int
fsubrs
xor
out
push
ja
dec
jnp
push
jbe
std
dec
ds
pop
mov
push
xorl
adc
stc
push
popa
add
outsl
fbld
mov
push
xchg
inc
dec
jns
inc
and
aam
aas
ret
push
dec
add
cmp
clc
orl
std
rcr
push
les
and
enter
push
imul
xor
and
mov
pop
cs
dec
inc
sbb
add
sbb
inc
outsb
clc
xchg
ffreep
dec
add
sbb
push
dec
jnp
repz
xlat
sbb
push
cmp
shll
fildll
insl
jnp
push
insl
inc
inc
mov
arpl
add
push
test
jne
mov
shrb
fcoml
jb
push
imul
mov
ss
add
lea
dec
addr16
inc
jge
shl
xchg
jp
lcall
xor
lock
xchg
jge
fwait
mov
rcl
fsts
loope
sub
outsb
mov
sub
divl
push
jle
push
jnp
out
mov
push
data16
inc
xchg
jecxz
xorl
xor
or
jo
pop
pop
jbe
xor
lahf
jns
dec
in
jno
jb
inc
lock
dec
jecxz
shl
flds
adcl
and
fbld
push
dec
jg
rorb
fisttpll
dec
fidivs
int3
outsl
mov
sbbl
insb
jns
sbb
fs
or
insl
push
ss
mov
push
adc
mov
xor
add
cltd
outsb
xor
ror
mov
imul
cmpb
loopne
dec
inc
add
inc
aam
movsl
fidivrs
js
or
jno
lock
push
test
cwtl
mov
xchg
sub
in
dec
test
lock
and
and
incb
addr16
lcall
push
out
loopne
add
xchg
xor
mov
adc
inc
into
xor
mov
ficoml
scas
dec
sbb
inc
add
and
aam
iret
jbe
mov
push
orb
icebp
aaa
dec
dec
push
data16
testb
dec
sub
jno
push
mov
adc
insl
mov
pop
stc
enter
xchg
mov
daa
dec
call
in
sbb
push
cld
imul
ljmp
imul
push
push
push
xchg
clc
jge
adc
and
jb
add
or
loope
dec
shrb
push
dec
push
cmp
scas
cmp
jno
sub
jns
insb
ss
inc
jb
jno
gs
rcrl
imul
sbb
imul
sbb
fildl
rcl
push
inc
add
pop
adc
jle
cmp
test
repnz
lcall
push
push
xor
je
lret
jp
mov
xor
mov
scas
sbb
lds
dec
jb
in
insl
loopne
dec
push
cmp
in
fdivrl
or
mov
outsb
jle
cld
pop
inc
stos
push
ret
push
fwait
mov
xor
gs
fs
das
dec
push
dec
test
xchg
or
push
ja
pushf
jno
cmp
loopne
cmp
push
inc
lock
loope
and
mov
inc
ja
inc
inc
aaa
repnz
adc
fcmovbe
inc
push
mulb
inc
addr16
sub
pop
or
jb
xor
add
inc
push
dec
jmp
jne
outsl
imul
mov
lret
ficoml
jbe
clc
push
pop
ss
cmp
cmp
lods
and
or
rolb
pop
push
jne
js
push
jae
pop
jne
iret
imul
xor
repz
adc
andl
and
and
push
sub
hlt
xchg
test
bound
outsl
push
je
push
xor
push
mov
cmp
pop
outsl
adc
push
inc
push
inc
std
xchg
icebp
js
shrl
push
ds
stc
loopne
mov
sbb
je
push
and
jbe
imul
sahf
inc
push
mov
movsb
add
inc
push
js
sub
mov
test
or
push
jns
fistps
cwtl
sbb
imul
fwait
jnp
sti
adc
dec
mov
imul
cld
dec
adc
jbe
push
shrb
xor
sub
adc
inc
pop
lret
lea
adc
mov
mov
and
xor
jmp
inc
dec
loopne
imul
outsl
inc
push
pop
push
js
lret
xchg
lds
ja
mov
cwtl
repz
outsl
dec
xchg
inc
loopne
and
dec
add
dec
jne
mov
jl
xor
inc
divl
insb
dec
fs
andb
mov
fxch
mov
sbb
scas
jbe
leave
outsb
movsl
adcl
arpl
cmp
xchg
inc
dec
mov
mov
inc
dec
add
xchg
jle
dec
push
fisubl
fiaddl
xor
push
movsb
pop
add
add
repz
or
bound
xchg
cmpsl
outsb
pop
sbb
add
xchg
or
pop
dec
andl
jo
arpl
rcll
outsb
push
mov
xchg
clc
pop
aad
aaa
push
insl
addr16
push
shrl
dec
daa
jg
push
mov
mov
inc
push
dec
cs
push
ja
mov
pop
inc
pop
outsb
xor
dec
repnz
inc
out
mov
daa
into
ret
gs
iret
gs
pop
pop
daa
and
push
addr16
roll
pop
out
xchg
jl
and
sub
adc
mov
cs
xchg
xchg
imul
inc
xor
and
loopne
fsts
out
cmp
cltd
add
clc
xchg
test
xchg
loopne
push
dec
outsb
cmc
js
push
adc
xlat
ret
dec
repnz
popa
inc
push
push
and
loopne
js
inc
push
pop
je
jae
aaa
pusha
loope
jl
cmc
rcll
mov
push
pop
pop
inc
aaa
mov
dec
pushf
add
push
jmp
aaa
xor
add
les
in
popl
mov
push
pop
addr16
repnz
inc
aaa
push
ja
out
in
push
mov
fs
fsub
jns
inc
or
push
mov
mov
dec
inc
loopne
arpl
loopne
js
mov
imul
pop
shrb
stc
xor
jno
pop
push
jnp
js
or
insb
push
pinsrw
cmp
or
push
jne
push
insb
jbe
pop
mov
aaa
fs
in
lds
mov
cld
jbe
mov
xor
push
lret
jecxz
or
popa
mov
adc
aas
popa
enter
outsl
pop
fstp
aad
enter
add
sbb
inc
adc
push
outsl
sysenter
sub
push
mov
xor
jne
ret
lock
and
addr16
pop
push
lea
je
dec
lods
cmp
or
leave
xchg
adc
push
pop
add
js
pop
jb
outsb
sbb
int
dec
sub
pop
sbb
xor
jnp
insb
sbb
mov
gs
xchg
jno
inc
inc
mov
gs
xor
imul
ret
leave
imul
add
stc
xchg
lods
add
and
sbb
out
inc
sub
inc
add
adc
push
pop
repz
sbb
push
mov
loope
sub
pop
movsb
lock
xchg
addb
data16
and
jne
shlb
cmpsb
mov
out
jl
pop
xchg
mov
jns
add
jne
inc
sbb
outsl
inc
push
inc
or
sub
jns
push
aaa
push
xchg
in
and
in
jae
cmp
jnp
pusha
sub
and
push
outsl
sbb
dec
andb
xor
sub
xchg
pop
fmuls
mov
movl
mov
sub
dec
sbb
add
inc
cmp
xor
pop
aaa
dec
pop
adc
fcmovu
jge
adc
sbb
ljmp
int
adc
les
in
mov
mov
fwait
movsb
pop
cmp
push
inc
cmp
aam
fdivr
push
inc
int3
pop
mov
das
push
cli
add
jae
mov
xchg
cmp
shlb
mov
flds
push
mov
push
arpl
fisubs
mov
fcmovb
outsb
leave
ret
pusha
sbb
orb
push
adc
xor
shlb
mov
ret
mov
fisttpl
js
cmp
fldt
roll
dec
inc
sub
dec
arpl
mov
ret
in
dec
mov
int
popa
scas
add
sub
ret
movsb
aaa
gs
inc
jo
jae
test
stc
jno
fnsave
dec
ficomps
int3
jo
xchg
push
add
add
sbb
out
add
add
or
push
xor
xor
rclb
dec
sub
and
cmp
dec
inc
fs
nop
sub
and
mov
push
sbbl
add
ds
scas
jl
or
pop
or
or
mov
pushl
inc
mov
sbb
int3
cmpsl
sub
cs
arpl
daa
sbb
inc
dec
dec
pusha
rorl
shll
cld
mov
pop
std
popf
sbb
inc
cmp
outsb
push
ret
sbb
push
sub
mov
icebp
mov
imul
xorb
int3
pusha
cmp
outsb
bound
xchg
mov
jbe
mov
aas
sbb
mov
movsb
dec
adc
mov
popa
sti
mov
push
inc
push
lret
add
insb
pop
push
mov
and
lock
add
sub
adc
jmp
stos
test
cltd
pop
testl
dec
jb
cmpsl
das
jns
lock
orl
shlb
bound
inc
push
js
add
inc
push
jl
sahf
or
xorl
insb
dec
xor
in
dec
outsl
loopne
cvtpi2ps
leave
into
sub
or
repnz
loopne
lds
dec
ss
sbb
or
jg
push
int3
jb
imul
xchg
in
cmc
insl
test
add
or
add
jno
je
outsb
jge
add
test
fistpl
push
fs
pop
jl
les
xchg
sbb
jmp
js
jecxz
add
mov
fsubrs
shrb
push
jae
dec
jo
push
orl
cmp
cmpsl
outsb
pushf
in
mov
add
push
dec
pop
fcomps
lret
cmc
insb
movsl
js
push
andb
push
xorl
das
xor
push
pushf
dec
mov
fisubrl
stos
dec
dec
add
test
pop
rcrl
cmp
mov
jo
divl
nop
xlat
mov
pop
test
dec
in
push
addr16
ja
jbe
mov
xor
sbb
and
loopne
pusha
lret
jbe
dec
cmp
xchg
fiadds
adc
dec
jno
push
sub
shl
add
push
out
test
testb
inc
mov
add
inc
stos
and
inc
push
inc
pusha
and
mov
gs
dec
push
ja
int
sbb
int
xchg
shll
rclb
fisubrs
nop
mov
mov
mov
and
inc
aaa
jo
imul
jae
dec
arpl
pop
sub
pusha
adcl
pusha
daa
cmp
inc
insb
xor
loopne
cmp
push
dec
jb
fisubrs
jg
iret
mov
dec
sbb
loop
js
inc
mov
pop
fsubl
cld
sub
or
mov
orb
in
adc
lcall
adcl
out
add
ljmp
push
ljmp
bound
fsubrs
shl
das
stos
mov
mov
std
call
rolb
xor
or
cld
add
cld
inc
mov
sub
mov
call
ficoml
icebp
cli
inc
mov
inc
repz
loopne
jg
or
cwtl
add
mov
and
dec
dec
jl
xchg
addl
sahf
add
clc
negb
dec
in
mov
cmp
add
jecxz
push
popa
andb
test
and
mov
jge
mov
test
push
adc
or
mov
jb
push
in
fbld
dec
out
adc
scas
xchg
dec
arpl
and
lds
mov
decl
adc
push
inc
mov
idivb
mov
ja
pop
xor
cmp
test
cld
jo
aaa
mov
les
pop
mov
adc
push
loop
push
in
sti
inc
or
dec
pop
notb
xchg
clc
mov
lods
outsl
add
add
mov
mov
add
sub
mov
sub
fimuls
mov
adc
cmp
pop
xor
xor
popa
es
xor
lds
mov
lret
cmp
sub
xchg
mov
aaa
jne
jge
pushl
icebp
aaa
add
test
or
inc
outsl
decb
aas
mov
push
pop
push
mov
in
into
jmp
insl
inc
lock
cs
dec
xchg
loopne
mov
dec
xchg
stc
push
xor
mov
adc
cmpl
or
popa
add
and
mov
adc
xchg
mov
mov
add
adc
push
xchg
cmp
cmp
cmp
mov
icebp
lock
push
dec
lea
mov
jg
ja
loope
andl
push
test
mov
lds
jns
or
ficompl
loope
sub
inc
sub
adc
sub
jg
or
jo
jb
mov
mov
xor
test
insb
sub
lods
add
ljmp
out
ficomps
dec
mov
or
pmullw
mov
jb
dec
pop
jns
ljmp
mov
inc
pop
push
fsts
jno
add
sar
or
cmp
adc
pop
add
clc
sbb
add
push
sub
mov
fwait
xchg
in
jmp
dec
insb
inc
ja
cmp
fdivrs
inc
and
nop
clc
lock
sahf
xchg
cld
xchg
mov
xchg
xchg
xchg
and
je
pop
test
add
push
mov
mov
and
dec
jno
pop
xor
enter
push
and
and
sarl
add
js
inc
xor
les
stc
out
mov
cmc
enter
add
outsb
testb
hlt
inc
shrb
adc
inc
test
or
ja
jg
cli
adc
inc
out
popf
shlb
mov
cmp
pop
mov
icebp
xchg
xor
adc
add
stos
jbe
test
add
fistpll
add
out
pop
inc
jae
mov
ja
pop
aaa
pusha
gs
mov
out
dec
cld
sbb
xchg
add
push
mov
push
stc
cmpsl
inc
fldcw
cmc
ret
lods
loop
int3
or
andb
or
bnd
mov
mov
icebp
cmp
dec
push
jmp
lock
pop
mov
xchg
or
enter
das
add
inc
mov
testl
arpl
insb
pop
mov
mov
out
sub
sbb
mov
sub
lock
xchg
cmpsb
lahf
ljmp
lret
and
mov
fistl
pop
in
movl
mov
jge
dec
pop
adc
cmp
addr16
xor
jecxz
das
pop
mov
stc
and
in
pop
les
movsl
sub
fsubr
dec
mov
sbb
jge
in
repnz
arpl
adc
xchg
mov
jg
mov
mov
add
outsl
sub
andl
mov
lahf
and
mov
jnp
fadd
dec
lds
adc
aaa
mov
adc
mov
das
cld
cmp
or
mov
idiv
mov
pusha
ljmp
rol
test
clc
xchg
jle
push
jp
push
mov
out
push
and
incb
pop
add
mov
jne
stc
test
test
aaa
mov
imul
adc
xchg
pop
and
mov
test
cld
pop
mov
adc
jo
insl
fidivrl
mov
cmp
stc
ljmp
enter
int3
jo
adcb
ljmp
jecxz
adc
movsl
cmp
mov
fildll
mov
pop
movsl
fwait
int3
sub
mov
leave
mov
pop
push
enter
out
faddl
sub
fstpt
push
xlat
sub
sub
aad
xchg
scas
and
iret
jbe
fidivl
and
outsb
ja
test
sbb
mov
sbb
test
scas
mov
in
add
cld
insl
pop
lcall
mov
sub
mov
mov
xchg
movsl
fcomip
push
inc
mov
stos
mov
fcmovnu
std
push
cli
and
push
or
loope
sbb
mov
or
dec
push
sti
filds
jb
xlat
mov
cmp
xchg
lcall
add
xor
mov
insb
push
outsb
cld
inc
icebp
call
cmp
and
sub
jl
mov
cmc
mov
pop
clc
mov
call
sub
and
push
sub
add
xor
cmp
test
and
int3
shll
mov
xchg
jae
and
push
xor
mov
push
push
nop
ffree
fists
jle
or
orb
movsl
adc
popa
xchg
sub
push
pop
add
ljmp
fcoms
jmp
mov
mov
xchg
movsl
jmp
in
push
rcll
adcb
fiaddl
lock
cwtl
sbb
cmpsb
push
xor
dec
cmpsb
out
int3
fistps
lea
sahf
sbb
push
xor
adc
mov
mov
roll
pop
in
clc
xchg
mov
sbb
xchg
xchg
out
insb
inc
pop
xor
lret
pop
add
or
dec
mov
jmp
and
push
xor
push
mov
daa
mov
subl
pushf
inc
sbbl
pop
mov
xchg
push
mov
pop
push
decl
paddw
jl
sbb
ja
sbb
xchg
push
sub
xchg
push
nop
add
test
push
addb
jo
xor
sub
pop
cmp
add
jg
test
roll
push
ds
xlat
pop
or
stos
aaa
dec
jne
xor
cld
inc
aam
and
shll
cs
inc
xor
add
pop
fsubrs
out
and
cmp
clc
outsl
je
pop
adc
mov
xchg
dec
sbb
mov
loopne
clc
mov
xchg
mov
push
popa
sarl
dec
mov
dec
insb
lahf
test
pop
out
add
pop
sbb
add
cwtl
xchg
fwait
mov
cli
lock
jbe
xor
test
loopne
mov
push
ljmp
jg
xor
or
xor
or
cld
data16
rolb
adc
mov
cmpb
jp
loop
xchg
popa
movsb
add
int3
add
jns
jp
out
inc
jmp
outsb
rorl
adc
mov
mov
scas
lret
xor
add
inc
mov
std
incl
cli
cmc
push
push
jge
cmp
nop
and
shrb
jb
inc
hlt
or
js
test
adc
dec
jns
add
xor
ret
lret
lcall
je
inc
or
shl
xchg
cmp
mov
jo
decl
push
addb
fs
jge
cmp
mov
jmp
inc
dec
sub
cmpsl
nop
aas
adc
clc
daa
jb
xchg
out
xchg
repnz
stos
mov
movsl
push
dec
mov
add
push
ja
or
das
icebp
cmc
xor
mov
jmp
subl
push
bound
jo
push
pusha
negb
sbb
std
outsl
lcall
push
inc
sub
or
cmp
data16
xchg
mov
lret
adc
mov
les
ret
mov
and
mov
mov
dec
aaa
faddl
inc
or
ljmp
pop
jb
adc
adc
int3
loope
lods
inc
sbb
in
insb
cmpsb
scas
sbb
iret
pop
inc
fdivrl
xor
sub
pop
js
xor
ds
bound
mov
mov
fstpl
movsb
mov
adc
std
push
std
jle
notb
cmp
mov
xchg
popa
lcall
lea
sub
in
xchg
cmpsb
add
jecxz
cli
and
adc
inc
push
arpl
inc
addr16
ror
cld
and
aas
dec
sub
int3
lcall
mov
iret
loopne
jp
mov
insl
stc
and
inc
inc
jmp
mov
cli
lds
and
sti
aam
push
jl
mov
jg
ljmp
ret
dec
int3
in
popf
call
pop
and
or
push
mov
mov
mov
xchg
or
dec
mov
aad
push
filds
daa
dec
and
mov
pop
jge
dec
into
dec
xorb
dec
pushl
test
sbb
sti
xor
mov
aam
mov
pop
call
jp
add
bound
in
jne
fbstp
sbb
enter
fwait
stos
lds
add
mov
lds
inc
add
pop
shlb
dec
ret
fcmovnbe
dec
push
dec
push
xchg
add
adc
loopne
jl
sub
and
sub
xorb
jno
adc
test
add
push
mov
cmp
sub
cmc
xchg
inc
add
jb
gs
jl
iret
mov
notl
adc
mov
dec
mov
xchg
popa
sahf
cmpb
xor
jl
and
es
les
add
jge
lcall
rcll
sbb
adc
mov
cwtl
mov
sbb
sbb
out
pop
scas
mov
jge
xchg
mov
mov
xor
push
dec
push
iret
dec
fidivrl
push
adc
mov
or
push
lock
add
or
inc
in
cmp
test
cwtl
loope
movsl
outsl
adc
dec
mov
mov
sbb
lods
outsl
sbb
dec
iret
push
pop
push
pop
std
jne
lret
decb
outsl
jno
jno
mov
pop
lds
cmp
bound
xor
xchg
and
cmp
js
mov
jns
ljmp
cmp
inc
jle
call
cltd
jns
pop
aam
dec
cmp
or
sub
ds
mov
aad
into
mov
and
fimull
or
xor
repnz
popa
popf
cld
and
shl
push
push
outsb
test
std
fbstp
aam
int3
pop
cmp
dec
cmp
std
mov
test
dec
adc
or
sub
test
aad
inc
jmp
or
ds
and
outsl
insl
movsl
xor
sbb
add
pop
jmp
jmp
repz
mov
sub
push
or
inc
and
cmovnp
pushf
cmp
xor
out
leave
notb
cli
adc
push
pop
fnstsw
ljmp
das
movsb
loop
test
jb
jmp
cmp
add
sub
fs
push
test
mov
sub
cmp
arpl
enter
gs
xor
jl
mov
jecxz
and
orl
imul
fucomi
and
clc
test
scas
das
icebp
fisttpl
shr
ja
mov
adc
ljmp
js
mov
and
jo
xchg
repz
mov
adc
mov
add
mov
xchg
lcall
add
jg
popa
lcall
mov
push
bound
pop
les
jno
pop
push
add
loop
inc
cld
xor
cld
fidivrl
or
dec
or
and
sub
mov
sub
or
xchg
fistpl
cmp
rclb
push
pop
sub
or
inc
and
loopne
xlat
fdivrl
sub
daa
outsl
jl
pop
imul
jo
sub
xchg
push
cli
test
and
and
mov
jbe
rorl
cmp
ja
dec
rcrl
out
add
cmp
outsl
ror
dec
test
aaa
mov
outsl
das
repz
mov
das
std
and
jg
mov
daa
data16
nop
stos
je
pop
ljmp
pavgb
out
or
inc
sub
je
push
test
xor
adc
pop
mov
sbb
mov
xor
dec
rorb
hlt
mov
dec
push
loop
cmpsb
fildll
jmp
lock
fbstp
adc
mov
lea
sbb
fdivl
aaa
es
rolb
pushl
xor
and
inc
andb
or
insl
cmp
sbb
cmpsb
int
xchg
sahf
gs
push
ficompl
loopne
cmc
dec
jle
gs
mov
mov
popf
and
ljmp
mov
lock
jns
sar
das
repnz
push
loope
movsl
pop
cmp
aad
jb
loop
loopne
mov
das
push
cmp
movsl
or
or
mov
push
mov
inc
fmul
clc
pushf
shll
mov
fisubl
test
pop
lods
cld
in
mov
xor
dec
lock
sti
pop
int
enter
push
out
movsb
or
pop
inc
es
rclb
and
orb
insl
fisubrs
jno
xchg
adc
fsubl
inc
sbb
xchg
psubw
mov
sbb
jnp
add
iret
insb
adc
dec
cltd
les
mov
xor
add
xchg
fcoms
stc
inc
test
xor
mov
pushf
inc
mov
pop
insb
into
sub
iret
mov
aad
clc
int
lret
dec
sub
xchg
test
insl
fisttps
jmp
pop
cli
cmp
sbb
mov
xchg
test
sar
or
xor
mov
mov
and
jge
or
cmp
int3
xor
push
mov
sub
popa
cli
sub
mov
pop
adc
mov
repnz
cmc
in
insb
xor
scas
jno
dec
mov
or
push
xchg
daa
fmull
sub
jle
cmp
jae
push
sar
add
xchg
adc
je
pushf
sti
ss
fists
andb
mov
loopne
aad
sbb
sub
test
testb
fcom
gs
xor
fcmovu
mov
pop
and
ja
mov
or
push
add
cli
or
or
js
daa
inc
dec
ret
sub
adc
pop
mov
cltd
icebp
imul
xchg
ss
sti
push
mov
push
aam
es
sarb
mov
nop
mov
push
cmp
jmp
add
dec
call
pop
inc
les
insl
jle
and
fdivrl
pushl
inc
mov
scas
fimull
pop
cmp
fsubrl
repz
xorb
jbe
ljmp
sbb
xlat
inc
push
add
insb
pusha
mov
jecxz
pop
push
fsubs
into
cmp
aas
imul
iret
push
inc
cmpsb
jb
jmp
in
xchg
push
je
push
lods
adcb
jp
gs
in
fisttps
pusha
addr16
push
adc
cmp
or
adc
dec
xchg
and
fisubrl
rolb
icebp
mov
mov
out
jge
ljmp
sub
aaa
movsl
cmp
imul
push
jo
jmp
inc
jne
test
mov
mov
sarb
lret
sti
sbb
jbe
or
pminsw
mov
add
or
in
mov
xchg
aam
push
clc
setbe
cld
dec
dec
push
inc
aad
stos
xor
adc
mov
jns
lea
dec
shll
push
or
jbe
cmp
mov
std
sbb
adc
sbb
cmp
xchg
xor
mov
stc
add
push
adc
sbb
inc
loop
push
dec
jae
imul
out
ret
decl
add
jle
add
xor
arpl
and
dec
pusha
sti
nop
sbb
or
or
jo
push
punpcklwd
into
iret
enter
aam
inc
cmp
ret
push
adc
stos
ljmp
add
inc
stos
and
xor
decl
mov
add
mov
jmp
pop
mov
pushl
mov
pop
lods
sbbl
inc
faddp
cltd
out
stos
sub
jo
hlt
lods
or
push
xlat
lret
lcall
ret
out
mov
dec
enter
mov
adc
sti
int
outsl
adcl
out
pop
jne
rclb
les
je
pop
cmp
inc
and
clc
jg
dec
sub
xchg
mov
data16
lds
add
aam
mov
sub
outsl
adc
outsl
mov
testb
lock
dec
sub
jecxz
inc
filds
xchg
test
fildll
cmpsb
out
test
popa
sub
test
mov
xor
loopne
adc
outsl
xor
mov
mov
pop
add
or
push
loopne
mov
test
push
lcall
into
xchg
xor
das
jl
rorb
pop
cmp
sarb
push
sbb
loop
sbb
xchg
mov
into
enter
sub
jne
pop
dec
repnz
jne
in
fdivr
notb
add
jg
loope
ljmp
inc
testb
lds
add
cltd
push
xor
hlt
add
adc
push
ret
jmp
cmpl
pushl
rcrb
out
dec
stc
in
les
gs
jns
sbb
decl
movsb
fdivp
jo
cs
and
cld
fsubrl
enter
sub
test
mov
add
dec
dec
push
cli
inc
loope
shlb
adc
sbb
pusha
insl
jmp
orl
pop
rorl
icebp
ja
inc
shr
clc
and
mov
dec
mov
mov
lahf
xchg
jb
inc
mov
cli
adc
sbb
inc
mov
or
add
jg
mov
int
mov
repnz
inc
cmp
data16
push
and
popa
dec
pop
repnz
dec
xchg
mov
fld
rclb
mov
and
testb
into
mov
lods
mov
or
jmp
jbe
outsb
clc
pop
push
xor
je
jl
sub
in
addr16
jnp
arpl
lcall
stos
in
pusha
mov
lret
inc
add
dec
les
mov
lret
nop
mov
arpl
xlat
ret
inc
imul
mov
sti
hlt
jne
decl
mov
nop
cmc
andl
mov
mov
pop
clc
mov
fildll
sub
out
dec
mov
ret
ss
movsb
dec
cmp
pop
or
push
out
mov
xchg
out
inc
push
xor
fldcw
iret
mov
xchg
cli
daa
cs
in
adc
sbbb
in
movsl
bound
sub
and
and
xchg
pushf
push
mov
inc
cs
call
into
incl
dec
sbb
lock
xchg
jp
pushl
mov
adc
inc
gs
mov
icebp
adc
dec
dec
gs
aaa
sub
inc
inc
adc
push
and
cmp
xchg
xor
fs
mov
pop
xchg
mov
mov
cmp
push
test
mov
or
mov
jne
hlt
jbe
clc
scas
xor
push
pop
or
or
imul
sub
push
insl
mov
into
enter
pop
pusha
ret
jne
inc
mov
jns
cwtl
mov
pop
enter
add
out
push
adc
push
std
lock
xor
or
jle
sahf
adc
xor
jne
adc
mov
adc
and
roll
in
inc
ljmp
mov
aas
inc
mov
shlb
ja
pop
xor
fucom
lods
pop
repnz
in
lea
push
repnz
pushl
add
adc
fsubl
pop
inc
and
fisubrs
add
xchg
pusha
inc
cli
pop
pop
cmp
mov
les
cwtl
fcmovne
in
push
add
ficompl
or
lret
sbb
aas
hlt
shll
out
push
ljmp
adc
jns
es
fsubs
lods
mov
cmp
mov
adc
fildl
jb
sbb
jmp
cmp
or
scas
lcall
fldl
inc
ja
pop
daa
or
mov
incb
and
and
push
ja
out
and
push
test
movsl
icebp
pushl
clc
dec
sub
not
sbb
xchg
xor
sub
lret
incl
add
sub
gs
xor
enter
das
lock
ret
or
mov
fwait
mov
mov
mov
add
mov
das
xor
std
ja
mov
sub
push
aaa
push
cli
jmp
fsubrs
jns
mov
test
data16
into
in
jns
pop
sarb
mov
ja
xor
testb
sbb
std
pop
mov
sub
test
add
js
mov
mov
insl
dec
add
rolb
push
dec
push
bound
sub
lahf
cmp
fdivr
xlat
xlat
mov
orb
addb
mov
in
icebp
add
push
ds
cmp
adc
inc
sub
shrb
call
mov
test
std
inc
shrb
inc
jl
and
aas
mov
mov
jl
nop
pop
xlat
shl
mov
ret
inc
nop
frstor
pop
pop
jecxz
in
or
imul
push
dec
inc
mov
adc
sbb
jg
filds
cvtsd2si
jo
subb
sub
mov
std
cmpsl
nop
push
push
lea
adcb
inc
xchg
cs
shlb
jne
push
dec
jg
add
adc
je
shll
jle
inc
mov
pop
es
mov
pop
dec
mov
or
dec
mov
aad
cmp
std
inc
inc
dec
add
lods
jg
sub
ret
mov
push
jns
aad
clc
or
in
call
sbb
test
mov
daa
imul
aad
js
scas
mov
cmp
pop
or
mov
push
fldt
add
popa
sub
sti
testb
lock
adc
inc
movsl
push
aam
sub
lahf
rcrl
test
std
push
pushl
insl
push
cmp
stos
dec
add
mov
adc
dec
mov
push
popa
mov
out
bound
es
aad
orl
pop
leave
inc
pop
outsb
test
mov
mov
mov
sbb
or
jns
outsl
or
push
cli
loope
push
and
and
xchg
incl
mov
arpl
int3
sti
mov
mov
jb
mov
or
aam
popf
dec
sbb
rorb
lahf
and
inc
shrl
stos
ret
sbb
fwait
sbb
cmp
fistpll
adc
mov
lret
nop
inc
ja
mov
call
lock
fstpt
popa
jnp
test
mov
xor
jo
shl
sbb
push
outsl
cld
int
lods
mov
subl
aaa
mov
or
push
addb
in
sbb
idivl
add
test
xor
jg
and
add
add
lea
sub
out
pushf
mov
popf
cmp
ror
dec
and
xor
out
aas
cs
daa
orb
jae
adc
cmpsl
aam
fbstp
pop
add
test
pop
inc
movsl
dec
lds
fisttpl
ljmp
mov
add
xchg
enter
outsl
test
lcall
out
and
into
push
inc
xor
sbb
mov
sbb
cmp
int3
aam
add
inc
lcall
sbb
call
push
aas
mov
aam
scas
xchg
dec
lea
in
out
test
incl
mov
mov
pop
sbb
add
andb
xchg
pushl
jb
xchg
xor
dec
cmpsb
fs
dec
fwait
cld
in
mov
dec
ret
and
or
loopne
adc
les
loope
lea
aaa
gs
repnz
fucom
pop
rorl
cmp
mov
imul
or
pop
xor
push
cltd
js
enter
insl
inc
les
fistps
aam
lock
aaa
sbb
cwtl
addb
sub
in
inc
mov
or
xor
or
mov
lret
mov
insb
in
je
sti
pop
roll
xchg
loope
sub
fwait
and
lock
jae
ret
xchg
xchg
aaa
inc
mov
or
inc
inc
pop
rcll
or
dec
jo
lret
rolb
jmp
pop
into
lods
sub
xchg
aam
pop
clc
mov
sbb
sbb
jle
xchg
xchg
hlt
push
je
icebp
movsl
fnstsw
cltd
pusha
les
jne
je
fs
cli
test
mov
sub
pop
lret
pop
dec
sbb
and
or
js
mov
hlt
pop
incl
icebp
sub
shrb
rorb
pusha
xlat
adc
push
sahf
call
loopne
inc
xchg
or
scas
lods
test
jbe
push
pop
jnp
adc
inc
pop
cmpb
lahf
pop
sbb
inc
lret
inc
in
outsl
cmc
lock
bound
rcrl
lea
out
shll
jmp
push
push
cmp
popa
hlt
cmpsl
mov
or
xor
sbb
outsl
test
inc
xchg
pop
sar
adc
cmp
mov
in
push
dec
dec
dec
jno
sbb
test
xchg
push
add
out
xor
outsl
out
loop
idivl
inc
dec
rcrl
arpl
sti
filds
test
rorl
test
push
mov
inc
in
xchg
lea
jl
jb
sbb
cmpsl
insb
in
aas
push
xorl
push
outsl
hlt
call
jb
and
cld
add
xchg
sbb
push
push
cli
cmpsb
inc
pop
pop
clc
in
imulb
lods
jae
mov
sbb
mov
aaa
add
je
out
inc
or
in
stc
xchg
inc
mov
cmpsb
xchg
std
in
aaa
mov
inc
shll
sub
data16
mov
daa
cmp
das
push
shll
jbe
jmp
call
nop
mov
fwait
and
push
jo
xchg
movsl
stos
xchg
stos
push
les
inc
pop
push
dec
cmp
mov
push
mov
loope
test
or
xor
xor
scas
inc
mov
mov
mov
adc
out
or
ljmp
lea
jnp
inc
mov
arpl
add
punpcklbw
std
push
std
out
add
scas
or
mov
push
sarb
loopne
aaa
shrl
out
adc
ret
out
mov
mov
or
mov
mov
push
mov
mov
testl
lods
bound
leave
cmpsl
je
dec
cmpsl
clc
outsl
loop
xor
xchg
ret
sub
xchg
or
mov
incl
push
dec
xchg
cli
xchg
das
js
sbb
inc
aaa
add
or
outsl
jns
lods
cmp
sub
mov
pushf
aas
mov
cli
aad
dec
mov
sahf
xor
or
les
mov
add
movsb
inc
jle
testb
out
ljmp
cmp
cld
and
sub
mov
inc
add
aaa
cmp
cmp
addl
sub
dec
mov
cli
add
pop
rorl
rcrb
jb
cwtl
aam
rolb
xchg
in
pop
ljmp
aaa
test
mov
xchg
mov
lods
test
push
sbb
push
push
fstpl
ret
and
clc
or
sbb
stos
xchg
daa
push
xor
outsb
dec
rcll
pop
ss
cmpb
ret
pop
sbb
jmp
sub
insb
sub
sti
scas
cltd
pop
adc
iret
cli
outsl
pop
sbb
or
push
lret
or
inc
shlb
push
fcomps
xchg
js
mov
push
rorl
jmp
fs
sbb
or
dec
sub
cli
mov
jg
adc
sbb
sub
push
mov
add
add
ret
sbb
call
loop
fstpt
cmpsl
mull
in
subb
cmc
push
mov
mov
enter
not
outsl
xchg
sub
je
mov
les
leave
add
enter
sbb
loopne
xor
dec
aaa
cs
mov
mov
jne
jp
lcall
incb
pushf
mov
mov
mov
data16
lahf
clc
incl
adc
lahf
shrb
or
and
mov
add
test
hlt
fwait
and
lods
mov
imul
cmpsb
jmp
or
rolb
cmp
or
loope
mov
inc
mov
loop
sub
mov
mov
add
fwait
lcall
dec
fs
or
repnz
dec
lea
mov
es
loope
ljmp
fdivl
mov
sti
iret
lods
fmuls
xchg
mov
push
jbe
push
sub
icebp
mov
cmp
pop
inc
jmp
aaa
lret
scas
or
inc
xchg
ljmp
sub
pop
xor
push
xor
loopne
fnstenv
mov
jecxz
pop
movsb
mov
lds
xor
jb
sub
les
push
jg
push
leave
mov
stos
dec
push
cmc
xchg
inc
push
loop
or
pop
enter
shrl
xorb
mov
add
dec
out
test
aad
sbb
mov
jno
stos
jmp
clc
enter
rdmsr
xor
push
or
mov
adcl
sbb
mov
loopne
sub
shlb
inc
mov
rorl
movq
outsl
add
lcall
add
sti
loop
dec
cwtl
and
std
xchg
shlb
test
push
rorl
test
mov
cmp
and
mov
int3
sub
bound
add
or
scas
movsl
cltd
jecxz
mov
pushl
fmul
pop
pop
mov
outsl
and
lcall
arpl
jmp
mov
xor
sub
lock
insl
mov
sub
test
fisttps
push
mul
push
icebp
and
rcll
adc
decl
lret
iret
cmp
mov
fwait
xchg
outsb
lret
push
or
aaa
rclb
jo
ds
inc
sbb
adc
add
jg
adc
jbe
rorb
cmp
or
push
push
cli
loop
cmp
shlb
clc
negb
mov
std
loope
jns
fld
xor
mov
adc
mov
inc
pop
adc
or
add
or
mov
xor
and
lahf
cli
cltd
cli
add
mov
xchg
jmp
loop
mov
sbb
scas
dec
mov
sub
sar
outsl
cld
jg
ja
mov
pusha
cmpsl
cmp
ss
adc
fistpll
je
mov
mov
sbbb
das
mov
in
dec
mov
shrl
xchg
outsl
pop
daa
push
mov
test
sub
jmp
jp
dec
mov
daa
push
jbe
mov
pop
xchg
in
pop
xor
or
call
jno
scas
xchg
mov
adc
mov
movsb
pop
pop
inc
in
inc
or
fildll
cmp
cwtl
adc
pop
nop
and
add
loop
inc
sarl
mov
adcb
pop
fsubr
mov
arpl
pushf
hlt
add
xor
xchg
outsl
jle
inc
insb
cld
ret
popf
push
jge
movsb
push
or
cli
dec
jge
cld
adc
fsubl
push
dec
outsl
clc
decl
add
bound
dec
mov
cmpsl
inc
call
and
sbb
call
jl
cmp
pop
dec
lret
dec
bound
lock
push
ljmp
fmuls
fimull
jg
pop
out
mov
lret
ret
sub
out
inc
mov
ret
out
sub
push
dec
fcomip
mov
lret
sbb
cmpsb
aaa
or
jmp
aad
adc
and
pop
push
aad
scas
nop
push
rorb
nop
or
aam
mulb
stos
cmp
inc
jmp
cltd
mov
sub
mov
sub
repnz
and
or
dec
pop
aad
std
incl
pop
inc
inc
xor
ds
dec
incl
rcrl
daa
ja
sbb
addr16
sub
pushf
pop
jmp
mov
mov
sbb
je
pusha
insl
or
adc
fbstp
sub
pop
or
jl,pn
cld
mov
mov
dec
addb
xchg
cli
jmp
jne
mov
pushf
loope
push
push
repz
add
sub
or
pop
sub
push
and
fwait
les
rcll
pop
jp
sbb
sti
stc
push
push
mov
movsl
lret
stos
nop
or
xor
xchg
mov
movsl
je
mov
fists
or
subb
cltd
add
loopne
incl
int3
fimull
arpl
mov
mov
pop
add
cmp
adc
sbb
aaa
incb
push
mov
cmpb
dec
js
pop
shl
xor
jecxz
aad
lock
lcall
mov
lret
dec
mov
lret
incb
mov
stos
mov
inc
jbe
adc
lahf
xchg
pop
clc
jg
mov
sti
dec
xchg
push
out
lea
cli
loopne
sti
jecxz
ret
jge
test
shr
push
sub
outsl
add
loopne
imul
adc
loop
push
out
push
inc
cld
dec
inc
leave
loop
xchg
loop
ds
xor
or
out
das
dec
fs
call
repnz
sub
fisubl
jmp
pop
inc
cmp
mov
out
or
add
jp
jg
xor
stc
out
aam
xchg
mov
jb
pop
jae
jmp
movsb
repnz
mov
inc
mov
ret
std
aam
cs
adc
es
push
cld
roll
mov
push
sbb
mov
rorl
fiadds
mov
movsb
and
and
inc
sbb
or
rcrb
mov
idiv
dec
dec
push
xor
fwait
aam
push
sarb
mov
mov
xlat
jb
xchg
xor
rorb
push
shl
jmp
xchg
ljmp
gs
mov
mov
and
scas
sarl
popa
mov
mov
bound
xchg
and
cmp
inc
sbb
jp
std
aam
mov
and
xor
mov
outsl
mov
icebp
xchg
adc
faddl
aad
sbbl
shrl
loopne
mov
lret
lods
int3
and
xor
fnstsw
std
adc
inc
xor
xchg
pushf
mov
sub
inc
shr
decl
push
lds
arpl
sbb
push
pop
iret
cmpsb
inc
repz
adc
inc
stos
xor
test
cmp
imul
mov
fiadds
dec
sbb
inc
in
add
jmp
sub
jecxz
or
jg
test
leave
popf
inc
stos
nop
cmp
pop
or
aas
aam
and
stos
push
int3
adc
call
push
outsl
add
and
aas
gs
out
cwtl
sub
shlb
int
xchg
or
repz
sub
into
daa
cmp
lock
xchg
cmc
aad
imul
int
dec
insl
sub
js
or
aad
fldl
dec
das
mov
test
int
clc
shlb
pop
ljmp
adc
jne
mov
adcb
push
std
push
loopne
mov
movb
jg
imul
adc
adc
call
push
mov
in
push
cs
mov
add
fcoms
in
or
mov
or
lock
pop
lds
jl
inc
push
sbbb
push
jb
and
fisubrs
in
lcall
aaa
mov
cmp
xor
adc
inc
sbb
adc
mov
rcrl
out
mov
cmp
xchg
int3
inc
imul
outsl
sbb
test
push
mov
cmp
push
in
adc
iret
or
pop
lds
outsl
imulb
repnz
in
stos
jo
insl
std
ret
mov
mov
out
test
outsb
inc
lea
fisttpl
cwtl
xor
push
or
jb
cld
das
hlt
jg
and
sbb
scas
stos
aam
outsb
push
and
negb
inc
ficoms
cmp
mov
fildll
jae
sbb
lahf
adc
loope
xor
ljmp
cmp
clc
push
push
pop
jnp
add
xor
sbb
es
sbb
out
add
or
xchg
mov
bound
or
into
adc
pop
call
adc
mov
fsubrl
sbb
inc
cmp
xchg
inc
outsl
imul
jns
fcomip
out
sub
rolb
adc
or
pop
mov
sti
mov
cmp
adcl
fstpt
push
cli
xchg
jge
insb
idivl
imul
add
dec
insb
repz
mov
push
cmpsb
ss
pop
test
sbb
inc
jne
mov
cmc
pushf
mov
hlt
ret
jnp
mov
sbbb
inc
mov
or
pop
push
sbb
jnp
push
pop
ljmp
sbb
mov
fsubrs
call
jle
xlat
enter
and
or
mov
mov
sahf
sahf
test
xor
adc
xchg
sub
xchg
lock
jg
shll
add
mov
mov
jmp
imul
sbb
mov
jmp
push
ret
data16
sub
mov
rcrb
call
out
bound
adc
nop
cmp
xor
xor
cli
sbb
xchg
jp
andl
lcall
push
mov
fisttpll
ds
pop
mov
lret
insl
repz
mov
test
push
lock
jno
incl
fwait
or
jle
mov
adc
movsl
inc
sbb
std
mov
xchg
inc
daa
into
xchg
mov
add
jl
sub
pop
ljmp
js
std
mov
cmp
push
scas
ja
cmp
pop
sub
cmc
jg
mov
and
jae
push
int
pop
gs
sbb
fnstcw
stos
data16
lcall
nop
xchg
repnz
aas
xchg
fstps
sbb
fnstenv
xchg
and
fs
dec
mov
in
jl
inc
out
cli
in
cmp
ljmp
stc
mov
insl
xchg
lret
mov
pusha
js
les
jne
jg
mov
push
xor
mov
mov
scas
or
mov
pop
loopne
sbb
ret
leave
inc
stc
rcrl
cs
push
test
iret
cmp
addr16
fwait
cmp
adc
in
mov
andb
sbb
mov
jo
push
pop
adc
fistps
adc
inc
mull
subb
cmpsb
mov
mov
pop
sbbl
dec
fidivs
ret
repz
sub
stc
xchg
cmp
sub
lea
outsb
mov
sub
mov
arpl
pushf
pop
aas
jmp
adc
push
ror
mov
mov
mov
xorl
lcall
ljmp
call
jno
test
and
insb
mov
jne
mov
sub
out
or
push
push
stos
call
roll
rorb
pop
je
shlb
xchg
cmc
rsm
sti
fisttps
call
rol
mov
inc
xchg
hlt
push
pusha
stos
mov
or
loopne
fimull
andb
mov
add
mov
pusha
ret
fbstp
cld
mov
stos
outsb
dec
pop
dec
pop
hlt
xor
jp
shll
xchg
insl
sti
xor
cmpsl
jbe
es
mov
mov
imul
and
in
insl
mov
outsl
push
mov
push
pop
iret
stos
mov
mov
lahf
sbb
jp
or
sahf
icebp
adc
xchg
aaa
outsl
les
push
pushf
aaa
add
inc
test
shlb
repnz
jecxz
cld
aaa
aad
data16
sub
or
iret
int
popa
movsl
ret
mov
in
sub
or
cld
push
test
xchg
les
sar
pop
cld
xlat
dec
ljmp
mov
xor
ror
jno
sbb
mov
mov
cmp
add
ljmp
ud0
add
outsb
pop
scas
stc
out
call
lock
pop
mov
fisubrl
js
xchg
inc
jl
inc
cs
cmp
enter
aaa
pop
dec
in
or
ljmp
loop
push
popa
xor
pop
lcall
mov
pushf
pop
cs
mov
icebp
repz
or
cwtl
or
cmp
das
inc
pop
clc
or
in
adc
je
sub
int3
jbe
test
ret
outsb
inc
cli
pop
sub
pop
call
adc
addr16
xor
jp
mov
pop
nop
push
pop
mov
mov
mov
ret
pop
xchg
mov
imul
cld
fadds
adc
sbbb
fnstsw
pop
fisttpll
or
add
dec
clc
je
push
mov
xor
xchg
bound
rolb
lea
inc
mov
mov
cmp
outsb
push
sub
add
les
xor
in
sub
and
call
cmpsl
xchg
xor
mov
enter
dec
sub
add
or
jle
xlat
les
ret
sbb
mov
sbb
and
scas
nop
ljmp
incl
inc
addr16
mov
push
iret
nop
adc
xchg
push
jb
mov
push
jmp
js
enter
fbstp
fisubl
cs
cmp
push
adc
jg
sbb
push
xor
pop
sti
loope,pt
adc
shl
fistpll
cs
xor
pushl
xchg
sbb
sbb
das
inc
adc
movsb
rorb
lcall
jb
out
test
fdiv
js
push
ss
rolb
xor
lds
mov
mov
bound
pop
shll
pop
sub
mov
mov
mov
mov
mov
aas
inc
sub
fisubrs
and
out
mov
ret
cli
outsl
mov
xlat
xor
inc
add
sub
in
sbb
add
add
add
push
add
push
jbe
pop
mov
pop
and
mov
dec
lods
lods
mov
ss
or
xor
xor
lahf
in
adc
sbb
std
inc
jecxz
jnp
subb
ds
mov
enter
inc
xchg
cmc
pop
mov
sbb
arpl
insl
or
xor
adc
cli
psrad
inc
adc
push
add
fisttpl
or
sub
or
xchg
arpl
push
cmc
and
ljmp
adc
or
sti
iret
mov
inc
in
jo
cmpl
fdivrl
hlt
jge
lds
adc
sbb
mov
inc
push
mov
xor
hlt
sbb
xchg
iret
adc
sub
addb
inc
cmpb
iret
push
push
mov
jecxz
fistpll
or
test
mov
jg
and
jmp
and
jg
outsl
mov
mov
mov
pop
std
add
scas
push
inc
lock
jnp
icebp
jg
fistpll
gs
repnz
int
or
fdivrs
cmp
mov
dec
mov
or
aam
mov
pop
clc
fbld
int3
subb
data16
test
test
cli
sbbb
inc
push
ljmp
mov
lea
movsb
add
popf
pushf
jns
and
cwtl
dec
adc
mov
xchg
hlt
out
cmp
lret
cmpb
rolb
add
pxor
and
aas
add
mov
andl
lahf
iret
jmp
movsl
cmp
std
sub
mov
dec
test
pop
addb
jl
xchg
outsl
lcall
jne
push
pushf
xor
xlat
xchg
inc
imul
jb
cs
jns
add
pop
mov
pop
inc
dec
sbb
aad
inc
cmpsb
dec
loope
orb
mov
dec
stc
push
jg
outsl
sub
jl
loopnew
aam
mov
xchg
ja
fcoml
loopne
cmp
ret
ret
cwtl
adc
add
aam
dec
inc
or
daa
mov
pop
jne
addr16
mov
inc
inc
inc
stc
ja
sub
movl
je
add
lods
fdivs
mov
fisttps
hlt
and
jle
hlt
pop
cmp
push
hlt
imul
xor
push
fnstsw
std
adc
push
xchg
inc
or
lfs
or
hlt
mov
and
insl
mul
mov
mov
mov
and
and
movsb
adc
div
out
xorb
aad
std
xchg
les
adc
loopne
xor
mov
inc
shrl
xor
push
pop
sahf
mov
push
hlt
mov
cmp
jl
hlt
jg
sarl
and
sbb
add
push
cld
push
add
mov
adc
je
jo
cltd
mov
pop
lcall
test
pop
pop
xchg
inc
add
push
fisubrs
fcompl
mov
mov
jg
loopne
jne
cmc
sub
adc
out
sub
cltd
inc
mov
push
into
mov
mov
jbe
cmp
cltd
adc
add
outsl
xchg
or
jbe
js
mov
cmpsb
mov
hlt
ret
daa
mov
add
cmp
sbb
push
fs
mov
xlat
ss
jge
gs
xchg
inc
pop
mov
dec
sbb
adc
clc
cmp
repnz
pop
inc
pop
cld
test
inc
jo
pop
mov
cwtl
cld
aas
adc
push
pop
das
pop
mov
adc
std
inc
scas
scas
adc
jmp
push
scas
mov
into
loope
jle
imul
cltd
jo
jno
adc
repz
xchg
lcall
ljmp
inc
clc
mov
dec
jb
int3
fcmovne
pop
inc
inc
jne
xchg
bound
sbb
ljmp
mov
push
push
cmp
dec
nop
pop
or
sub
adc
shrl
jne
fstpt
mov
out
fsub
pop
cwtl
jne
mov
push
insb
nop
testb
test
std
dec
mov
fsubp
cvttps2pi
mov
gs
mov
gs
ficomps
rcrl
add
cli
sub
sub
call
cmp
xor
movsl
jmp
lds
sahf
and
bnd
xchg
daa
enter
clc
mov
add
sub
into
pop
std
mov
rorb
insb
scas
sbb
add
arpl
or
mov
jnp
adc
out
jnp
mov
movsl
inc
out
xlat
lods
repnz
push
bound
jns
add
sbb
fsubl
add
add
mov
lds
sbb
pop
sti
lock
xor
outsl
cli
movsl
jp
out
sub
aas
add
mov
sub
outsl
fstp
sbb
pushl
leave
sbbb
xchg
cmpsb
out
xor
sar
imul
mov
adc
xor
nop
fstpl
icebp
mov
setae
pop
loope
test
insb
jp
loope
inc
lea
mov
rcrl
mov
mov
jae
or
dec
push
das
xor
xor
cli
outsl
aad
scas
push
mov
ret
sbb
ret
inc
sbb
inc
or
dec
fs
inc
sub
movsb
in
xchg
int
call
pop
testb
push
push
and
xchg
or
sahf
adc
fwait
movsl
dec
pop
repnz
mov
xchg
aas
sti
mov
fisubrs
insb
lahf
cli
pop
xchg
test
sbb
cmpsl
mov
inc
pushl
jecxz
aad
inc
mov
mov
jo
cwtl
or
dec
mov
outsl
das
aam
imul
push
arpl
add
adc
xor
sbb
add
push
adc
pop
test
sub
or
and
inc
xchg
xchg
pop
xchg
out
ljmp
hlt
mov
pop
hlt
lcall
repz
push
fiadds
add
sub
aas
inc
inc
rorw
test
fistpll
pop
test
loopne
pop
mov
icebp
loope
push
jnp
imul
daa
pusha
push
orb
cld
mov
jnp
mov
aam
xorb
lcall
hlt
fnstsw
jg
jl
mov
rclb
jbe
call
test
in
cmp
mov
out
jb
int3
push
mov
or
call
ret
adc
leave
and
movl
clc
fbstp
add
iret
xor
insb
fstpl
movsl
jp
rolb
fstpt
sub
inc
mov
fcmovb
jnp
pushf
mov
shrl
faddp
and
add
pcmpeqb
stos
sahf
sub
fdivrp
xchg
cmp
daa
and
mov
rcr
xchg
stos
dec
sbb
clc
sti
pop
pop
test
push
lods
ljmp
loop
cmp
jl
xor
adc
ficoml
ljmp
imul
pop
add
and
mov
outsl
aam
inc
jne
push
jg
incl
cmp
outsl
cmp
sub
js
sbbl
ds
mov
jnp
aad
jo
inc
sub
orl
je
sbb
inc
popf
push
lods
and
mov
call
cmp
jge
add
icebp
xor
pop
or
add
mov
lcall
push
lea
shl
pop
dec
xchg
jge
mov
dec
cmp
adc
out
fidivl
push
lahf
jb
xchg
outsl
add
jmp
or
mov
push
adc
jb
pop
cs
dec
mov
sbb
pusha
or
mov
push
hlt
lret
push
aad
adc
fidivrs
mov
push
sbb
mov
std
or
xchg
xorb
mov
add
sbb
inc
mov
jmp
clc
stos
push
pop
and
xor
fldt
jg
es
xor
ss
xor
xchg
mov
sar
fisubrs
aad
mov
nop
int3
push
pop
xlat
idiv
jg
call
int3
lret
mov
push
xlat
incb
mov
lds
fwait
aad
mov
scas
or
or
repz
mov
inc
jo
adc
xchg
or
mov
scas
mov
es
add
rorl
lods
andl
or
ljmp
xchg
in
data16
into
push
mov
repnz
sbb
add
inc
nop
push
loopne
and
add
add
cmpsb
loop
inc
add
ljmp
lret
mov
adc
les
lods
cmpsl
roll
mov
loope
pop
call
out
fsubrl
dec
xor
iret
cwtl
xor
jg
les
lea
mov
inc
dec
sub
decl
cmpsb
pop
xor
dec
and
dec
mov
aas
push
push
ret
push
ret
adc
call
mov
sub
lock
mov
jl
jg
pop
xor
hlt
inc
sbb
insl
mov
add
mov
jge
inc
mov
rcll
fidivs
and
in
mov
cli
int
mov
iret
or
mov
mov
orl
push
in
jg
inc
or
inc
stos
pusha
xor
rorl
nop
jo
pop
ss
dec
add
ret
mov
loope
mulb
xchg
adc
aaa
out
or
mov
incl
mov
dec
ss
stos
add
xlat
cmpsl
inc
fcomi
add
cmc
in
enter
mov
or
loopne
clc
adc
gs
out
into
adc
ljmp
lock
lret
adcb
loopne
lcall
cmp
les
mov
in
dec
lods
xor
incb
sahf
bound
push
fdivr
jmp
insl
cmp
pop
loope
out
inc
stc
sbbb
mov
or
sbb
mov
arpl
lock
sub
ja
add
or
add
sbb
ret
sub
out
int3
or
push
xor
push
add
cmc
cmp
sbb
insb
dec
adc
cmp
iret
test
adc
ss
fucomip
pop
or
push
dec
mov
inc
pop
jno
sbb
lock
aaa
dec
jb
cmp
inc
mov
or
sub
ljmp
add
loope
sbb
outsb
fucomip
cmpsb
test
adc
pop
dec
lcall
cs
add
push
lods
or
out
fwait
mov
inc
mov
pop
adc
mov
lret
in
xor
mov
jge
push
ret
push
mov
mov
aad
pop
je
in
adc
ja
mov
div
test
sbb
ds
inc
adc
ror
sti
cli
test
mov
aaa
adc
dec
xchg
adc
push
psrlw
addr16
call
fs
adc
pop
enter
pop
dec
test
mov
xor
mov
or
inc
pop
jno
in
jmp
out
add
sub
xchg
scas
cltd
loopne
clc
pop
cmp
js
inc
cmp
dec
or
mov
test
cmpsl
sbb
or
fsubrl
xchg
clc
dec
fisubrl
and
lret
imul
push
mov
andb
shrb
stos
clc
test
cmp
subb
fcmovnu
lods
fisttpl
shrl
pusha
lods
mov
pop
add
or
mov
pop
mov
bound
lahf
adc
roll
sar
push
mov
stc
dec
mov
push
shrb
adc
inc
mov
cmc
xchg
jns
adc
aaa
lock
mov
mov
jge
lods
loope
popa
jb
ret
nop
sub
outsl
das
inc
mov
ljmp
popf
mov
fistpll
push
loop
dec
add
inc
aam
popa
pextrw
push
inc
jmp
mov
fwait
cli
cmc
loop
inc
jnp
sub
je
xlat
lea
push
pop
xchg
xor
sbb
or
and
dec
xor
mov
sub
sub
loope
push
pop
shll
ljmp
stc
cmp
arpl
sub
pusha
push
sub
cmpsb
test
pushl
sahf
and
in
cmpsl
and
notb
inc
xchg
mov
fistl
clc
call
stc
movsb
sti
daa
dec
pop
fldt
fcmovnb
ficompl
fst
outsl
sbb
jg
mov
xlat
sub
adc
add
pop
pop
loop
adc
xor
mov
or
faddp
test
mov
cltd
fwait
out
pop
jae
hlt
xor
xchg
loope
fidivs
shrb
inc
into
mov
mov
test
xor
add
push
push
mov
jl
pop
mov
outsl
mov
adc
scas
cld
mov
mov
in
push
xchg
sbb
dec
add
rolb
mov
or
push
push
popa
testl
mov
outsb
jbe
je
test
sub
cwtl
call
sub
lods
push
movsl
mov
xlat
or
sar
js
cmp
insb
insb
xor
jno
lock
mov
pop
fnstsw
ja
jno
dec
sub
mov
dec
arpl
cwtl
leave
mov
test
inc
lock
mov
adc
inc
cs
or
mov
cmp
xchg
pop
call
lret
out
sbb
xlat
movsl
sub
aad
rcrb
lretw
jbe
sbb
and
jno
popa
pop
test
mov
icebp
or
dec
xabort
loop
stc
mov
dec
lods
pop
sub
shrb
pop
je
popa
jne
inc
jns
frstor
adc
or
adc
xchg
out
push
lods
in
adc
sar
das
inc
mov
lret
jnp
jmp
pop
xor
rorl
clc
dec
insb
mov
push
push
mov
push
push
out
clc
das
dec
dec
leave
cli
shlb
mov
test
mov
add
or
fiaddl
mov
jnp
and
testb
adc
add
or
arpl
adc
fwait
pop
push
sbb
push
sbb
dec
out
lods
icebp
sub
push
lock
ffreep
inc
dec
adc
jne
inc
enter
jae
pushf
jecxz
iret
in
push
sbb
add
dec
test
mov
imul
inc
mov
aaa
insb
lds
testl
pop
dec
mov
xor
inc
loop,pn
mov
adc
push
dec
lock
and
and
mov
cmp
scas
push
mov
cmp
cmp
pop
jbe
clc
push
std
arpl
push
pop
adc
ja
test
push
lahf
sahf
je
invd
test
add
mov
adc
mov
out
scas
aas
push
repnz
jp
jo
mov
aad
xchg
sbb
in
leave
xor
and
push
xor
xor
push
fst
fs
inc
out
pop
sahf
movsl
jnp
xchg
cli
jb
inc
fs
cmpsb
mov
sub
mov
cmpsl
clc
test
int3
or
xchg
mov
ss
mov
fmul
jbe
pop
lcall
pop
movb
pop
lods
xchg
push
fsubrp
add
js
icebp
or
loop
cmp
flds
and
movsl
cmp
outsl
das
xor
ret
cmp
mov
ljmp
push
adc
jbe
and
adc
and
jae
pop
inc
inc
xchg
iret
adc
mov
and
cmpsb
scas
and
adc
pop
and
adc
xchg
cmp
imul
push
or
ljmp
xlat
add
arpl
cmp
push
pusha
jle
xchg
in
dec
pop
test
outsl
mov
jl
pop
adc
xor
insb
sbb
cld
mov
sbb
jbe
and
mov
sbb
add
jecxz
or
or
mov
movsb
test
aas
lock
test
xchg
iret
xchg
inc
sbb
jecxz
dec
adc
loop
or
add
ret
push
push
jbe
and
lahf
inc
subb
xchg
inc
or
popa
stc
dec
popa
int
loope
sub
add
mul
mov
mov
call
cs
movsb
inc
andb
imul
pusha
dec
dec
xlat
gs
lock
pavgb
jge
push
lret
dec
ja
sbb
jnp
das
in
push
sub
sub
cmp
nop
sbb
mov
and
pop
lret
mov
cmpl
std
add
adcb
sti
sbb
cwtl
ljmp
and
mov
js
inc
loope
jl
xor
lock
sbb
push
aad
clc
jg
sti
out
mov
mull
pushl
out
push
popf
shrl
iret
ficoml
or
or
dec
in
movb
clc
rcrb
inc
push
scas
popl
inc
xor
sub
lds
imul
popa
or
lret
sbb
inc
mov
repnz
call
inc
xor
mov
pop
insb
mov
add
pushl
and
lret
fcompp
push
add
pop
mov
ja
fsub
or
and
enter
mov
aam
and
adcb
and
cmpsb
mov
mov
push
mov
mov
movzbl
jp
imul
scas
fistps
aam
iret
push
mov
icebp
push
mov
movsb
jo
add
aad
sub
inc
dec
lock
pop
xchg
fwait
cmpsl
les
inc
push
loope
int3
lock
roll
sti
xor
xchg
jno
mov
pop
inc
push
add
pop
outsb
xor
xchg
push
sbb
push
outsb
lahf
jg
shll
out
xchg
mov
das
cmp
or
popa
adc
shrl
leave
std
mov
clc
or
call
xchg
adc
ss
adc
mov
push
cmc
adc
jb
pop
inc
cwtl
push
faddl
mov
and
or
rolb
push
adc
inc
popa
mov
mov
stc
sub
pusha
sti
mov
and
int
int
jle
mov
loopne
popa
sbb
lret
rorb
jne
orl
outsl
mov
scas
pushf
jg
pop
aam
pushl
int3
scas
lods
add
nop
aas
push
adc
add
pusha
pop
add
or
faddp
adc
mov
dec
adc
push
cld
les
enter
push
fdivs
mov
xor
mov
das
in
les
push
adc
and
mov
std
call
and
imul
rcll
mov
dec
inc
fistpl
dec
fiadds
shll
mov
out
out
popa
mov
xor
shlb
jmp
push
icebp
sub
imul
inc
cmp
decl
lds
mov
fmuls
add
dec
push
fcomp
jno
testb
stc
xchg
pop
mov
jne
test
inc
mov
mov
and
out
xor
nop
repz
and
mov
dec
push
aas
std
movsl
decl
xchg
test
dec
jge
cmp
cmp
lahf
mov
or
mov
es
jmp
jg
adcl
sbb
in
mov
push
das
ja
and
int3
out
js
lret
mov
mull
jge
test
sub
mov
push
rorb
jne
sbb
es
cmp
xchg
mov
dec
in
xchg
pusha
mov
lret
stc
test
xchg
pop
dec
pop
sub
mov
push
fisubrs
push
or
fisttps
les
dec
mov
dec
inc
div
or
and
or
xchg
ljmp
jg
and
add
jnp
bound
negl
lahf
or
hlt
pop
mov
fcomp
or
lret
ljmp
and
and
pop
cmp
push
push
mov
scas
je
ljmp
nop
add
sub
adc
xchg
rcll
pop
orb
cmp
les
nopl
fwait
cli
movsl
lods
mov
sbb
sub
add
insl
mov
or
test
cmp
dec
aas
insl
mov
jge
ss
ret
and
adc
ds
cmp
xor
pushl
repnz
sub
iret
sub
xor
sahf
js
movsb
dec
int3
jle
mov
cs
dec
shrl
cmp
test
sbb
inc
popf
push
call
rorb
lea
push
lods
subb
pop
ljmp
clc
adc
pop
loopne
xlat
jbe
add
sub
push
es
iret
fildll
lret
sbbb
rorb
sbb
or
orl
bound
or
in
push
jae
inc
popa
mov
push
jl
push
dec
lret
push
je
dec
rclb
sub
add
test
aad
inc
loopne
mov
pop
jg
jle
setne
add
and
pusha
adc
jne
clc
mov
stc
dec
mov
pop
cmp
sbb
cmp
xor
ja
xchg
fstpl
and
sub
jg
jne
mov
ss
adc
leave
dec
xor
sub
js
in
fcmovb
and
xor
mov
scas
sbb
std
pop
or
xchg
lods
loop
add
ja
mov
sbb
clc
add
clc
subl
mov
daa
push
loope
sbb
cli
and
adc
mov
nop
push
cmp
add
out
test
dec
decb
test
test
fldl
xor
rclb
dec
in
jmp
clc
lcall
add
jb
and
mov
or
rclb
xlat
test
or
andl
ret
std
jae
or
ds
imul
xor
sbb
mov
xchg
mov
jne
pop
out
sub
xor
fwait
jmp
push
cmp
shlb
sbb
jno
jecxz
sbb
mov
scas
adc
and
cli
shll
and
call
rolb
push
imul
nop
or
inc
and
xor
jbe
std
or
loope
pop
rclb
scas
ljmp
rolb
sub
outsl
sub
pop
das
or
sbb
repnz
push
out
xor
aas
add
movl
aas
xor
mov
push
mov
push
adc
jnp
das
fdivrp
arpl
xor
dec
cmp
and
push
ret
pushf
cld
adc
in
add
and
insl
shl
sti
rclb
jbe
mov
mov
xorl
hlt
push
mov
jb
or
adc
xchg
xor
dec
mov
or
jg
push
in
xchg
inc
add
lea
dec
or
js
aas
push
ret
into
aas
in
iret
out
imul
das
shrl
adc
jmp
pop
fidivl
test
pusha
movsb
jno
test
mov
inc
push
sub
xor
jg
je
xchg
pushf
sahf
stos
add
sub
xor
mov
lods
loope
sbbb
xor
dec
cmp
rorb
adc
scas
movsl
sahf
cld
in
lods
std
out
fdivr
pop
insl
sbb
xor
xchg
in
cmp
mov
sub
imulb
push
cmp
or
test
sbb
mov
mov
xchg
jl
mov
cmc
xchg
aas
mov
out
mov
out
rclb
clc
std
ss
dec
fistpl
outsl
ljmp
sbb
sti
ret
lahf
inc
jmp
mov
ret
stos
dec
in
daa
or
xorb
pop
adc
mov
push
pop
cmpl
or
in
sub
icebp
push
dec
sbb
push
and
inc
shll
push
mov
out
or
inc
mov
jne
sbb
outsl
fdiv
sbb
xchg
sub
add
and
addr16
cmp
in
mov
jl
test
mov
insb
stos
xor
inc
and
out
ja
sbb
dec
lea
lock
mov
lock
movsl
mov
jbe
test
inc
nop
bound
mov
inc
fcomi
sbb
in
mov
fbstp
and
and
pusha
nop
aaa
xlat
cmp
outsb
add
jmp
mov
out
sub
inc
fs
jbe
and
test
adc
xor
fistl
mov
rorl
lea
xor
push
jecxz
inc
adc
imul
cld
jmp
stos
sbb
test
mov
call
sbb
data16
fcomip
aad
outsl
fs
add
mov
je
add
das
pushf
adc
fcompl
insb
xlat
fs
inc
mov
ljmp
adc
mov
xchg
mov
lods
lret
inc
add
sbb
cwtl
mov
test
jg
pop
pop
into
loopne
or
dec
xchg
mov
cmc
test
adc
and
cltd
fwait
sub
cmp
loope
or
movsl
lea
lock
nop
popf
push
dec
arpl
cld
lods
fisttps
ss
pop
les
adc
cli
outsb
adc
push
pop
adc
shrl
icebp
mov
pop
je
aaa
add
jbe
push
add
fmuls
and
jno
rorl
outsl
nop
leave
inc
sub
inc
pusha
cltd
in
incb
jnp
cmc
and
sbb
loope
call
std
add
fwait
ja
cs
lret
xchg
adc
push
mov
jne
xchg
mov
cmp
loope
or
add
add
addr16
cmp
pop
outsb
inc
mov
sub
mov
js
call
sbb
xchg
add
or
xor
cmc
xchg
stos
mov
cld
xchg
mov
loop
adc
movsb
leave
popa
ret
and
xorl
pop
add
mov
cli
flds
insb
sbb
adc
lock
xor
iret
outsb
push
sahf
and
sets
pop
mov
iret
sub
and
in
add
repnz
scas
jle
lret
mov
test
jmp
clc
add
cmove
add
fadds
sub
sbb
dec
nop
test
js
inc
mov
mov
mov
cmp
test
call
call
addr16
push
add
jbe
xor
in
sub
inc
outsb
mov
xlat
jbe
into
cmpsl
or
mov
inc
dec
roll
sahf
outsl
pop
mov
xchg
shll
addl
aaa
mov
lods
shr
or
fbstp
imul
std
push
movsb
cld
scas
sbb
lds
pop
or
push
lcall
mov
inc
xchg
jge
aam
mov
xor
popf
out
xor
push
notl
dec
xor
call
imul
lahf
pop
or
dec
mov
jg
lahf
dec
dec
pushf
mov
push
shr
rclb
or
lahf
mov
aaa
xor
shlb
cmpsl
lods
sbb
lods
jle
mov
mov
sub
ret
cmp
ret
and
xchg
repz
pop
cld
sbb
push
sbb
decl
mov
out
insb
dec
push
aaa
jnp
roll
adc
fwait
addr16
mov
loop
dec
cmpsb
test
mov
call
xor
in
or
dec
ja
mov
in
add
jmp
mov
mov
inc
enter
loop
mov
inc
int
xor
jmp
test
cli
xor
mov
adc
pusha
cmp
jl
jno
and
adc
or
sar
jmp
std
inc
inc
pop
popa
mov
out
or
outsl
cmp
mov
lods
mov
mov
jmp
addl
std
sub
ficoml
push
repz
jg
fnstcw
mov
enter
pop
pop
cmc
fstpt
adc
pushf
iret
movsb
bound
outsl
rcrb
mov
mov
enter
dec
ret
sbb
rcl
into
mov
sub
adc
push
cli
stos
int
cmpsb
fucomip
dec
cld
add
mov
rcrl
push
test
jl
sbb
ret
or
mov
mov
pop
dec
xchg
lfs
dec
push
fcoms
call
pop
sub
cmp
cli
dec
sub
and
or
repnz
inc
mov
sbb
insb
pop
inc
scas
pop
ss
lcall
les
mov
aam
cmp
dec
mov
dec
clc
and
or
jp
mov
loope
das
or
mov
out
adc
jmp
mov
lds
mov
sar
in
sub
clc
jns
mov
mov
jno
test
mov
xlat
jg
push
mov
sub
pop
rcrl
xchg
pop
add
mov
in
xchg
push
loop
je
mov
lods
inc
cmc
sbb
dec
sahf
and
xor
rorb
jb
loopne
shll
iret
out
fs
cltd
loop
mov
cli
mov
dec
and
ret
add
push
sbb
add
test
mov
add
xorl
or
inc
inc
or
ror
mov
enter
add
sbb
inc
testb
insb
in
sbb
adc
push
outsl
inc
adc
push
dec
imul
cmp
push
testb
fs
test
adc
and
inc
or
loop
cld
incl
mov
mov
inc
push
fidivl
lcall
xchg
orb
mov
les
mov
mov
dec
jmp
jnp
cmpsb
subl
cld
pop
and
out
incb
xor
in
gs
lcall
mov
inc
sub
adc
nop
orl
dec
stos
mov
es
or
cld
xchg
cmp
mov
push
loope
rcrb
cmp
out
popa
ds
pop
paddusw
rol
scas
or
or
mov
iret
mov
mov
popf
jae
sub
jmp
fnsave
sbb
ret
loop
hlt
mov
mov
jge,pn
mov
rcrb
sbb
add
ret
notb
fistpll
add
adc
jb
stos
stc
scas
inc
cmpsl
repnz
or
jg
push
or
ss
dec
fsub
nop
icebp
data16
cs
jo
push
add
fs
mov
jle
push
incl
inc
sbb
incl
push
ja
and
jne
hlt
out
incl
call
sub
push
out
es
and
pop
and
mov
xor
ss
cmpb
or
adc
inc
adc
push
les
mov
xchg
or
in
jg
inc
lods
xor
pop
pop
fcomps
pop
pop
insb
mov
ret
call
dec
insb
jp
je
jns
insl
aad
enter
aaa
jbe
mov
jmp
push
in
push
sarl
jb
pop
aas
jmp
push
and
lods
inc
mov
adc
mov
inc
push
out
add
cltd
xor
sar
in
test
dec
pop
jbe
pop
call
jg
inc
jb
push
mov
inc
or
add
pop
test
in
jo
dec
jle
xor
call
addl
stos
xchg
pop
add
sbb
or
nop
movsl
or
mov
js
lcall
shr
das
add
fcoms
test
mov
lcall
xchg
xor
gs
negl
imul
jnp
in
mov
inc
mov
cmp
push
sbb
jae
pop
jg
push
je
add
xchg
sbb
sbb
fistps
test
push
lcall
pusha
fistl
ss
testl
push
call
xchg
xor
xor
popa
push
into
push
mov
cmc
movb
shlb
xchg
inc
jb
adc
lea
aaa
sub
xor
mov
add
or
jecxz
std
jo
out
mov
sbb
xor
outsb
shl
rolb
scas
xchg
dec
add
in
ret
fisttpll
or
pop
sar
pop
out
add
rcr
xchg
out
push
mov
clc
xchg
adc
mov
mov
ds
sbb
mov
push
dec
push
and
mov
or
insb
or
mov
jg
fsub
cltd
xchg
mov
sub
popa
subl
sub
cmp
stos
cli
clc
or
sub
out
pop
shll
hlt
jp
push
sbb
dec
inc
cld
mov
push
sub
mov
pushf
mov
sub
sub
and
idivb
sbb
push
xchg
inc
test
mov
loope
cltd
inc
mov
pop
and
das
add
into
and
xchg
pop
pop
out
dec
dec
push
pop
and
pop
icebp
sbb
push
shll
mov
mov
ret
outsl
loope
mov
lahf
cmpsb
addl
mov
mov
out
fdivrl
cli
int
pop
decl
mov
ljmp
pusha
jecxz
jnp
mov
jge
inc
pop
inc
jge
hlt
xchg
aas
dec
add
mov
mov
mov
xor
push
inc
sbb
repnz
or
cld
ret
pop
xchg
cmpsl
je
xchg
inc
ret
roll
mov
add
les
push
les
mov
fiadds
push
cmp
mov
xor
subl
es
mov
in
xor
shll
xchg
mov
jo
adc
sbb
mov
mov
and
mov
adc
stc
sbb
sub
pop
cmp
jecxz
or
jge
mov
inc
and
icebp
fistpll
inc
sbb
shl
inc
and
gs
rorl
filds
sbb
lcall
fistpl
adc
xor
mov
lea
arpl
call
xor
imul
jbe
pushf
jmp
mov
out
rolb
sbb
insl
add
sbb
in
ja
ds
mov
shr
push
cmp
and
enter
into
and
lods
daa
mov
mov
add
jecxz
mov
xchg
adc
out
adc
stc
jo
xor
loop
mov
out
dec
inc
lods
adc
sahf
std
push
ja
shll
dec
into
repnz
pop
repz
decl
movsl
pushl
push
or
enter
xor
mov
jge
mov
add
mov
or
inc
jne
jmp
sbbb
fcmovne
or
fsubrs
xchg
push
not
test
add
es
repz
outsb
movsb
mov
dec
pop
popf
loopne
adc
test
mov
faddp
out
fwait
adc
mov
outsb
cmp
add
shll
les
cmc
aas
cli
mov
enter
jns
dec
jnp
out
jbe
adc
jae
xor
cwtl
mov
pop
ljmp
dec
push
mov
aam
fsubs
das
mov
push
adc
pusha
mov
cmpl
push
popl
push
mov
inc
jg
or
jo
dec
es
mov
cmpsl
adc
or
adc
rcll
mov
inc
out
popf
pop
js
mov
or
dec
mov
jge
jp
push
jg
fadds
adc
and
in
or
fistps
mov
in
popa
jmp
mov
jge
test
sbb
jge
popa
loope
cmp
rcr
test
add
fidivs
sbb
dec
sbb
outsl
xchg
and
sbb
lret
dec
push
fucomi
test
add
push
cmp
add
dec
push
lret
ret
lcall
ret
mov
lahf
js
add
pop
sbb
fwait
pop
push
enter
push
sub
pop
push
or
arpl
addr16
cmpsl
push
cs
sub
cmp
mov
and
inc
jg
jnp
jae
add
mov
jp
xchg
mov
mov
jmp
add
out
enter
insl
inc
cld
add
push
dec
or
bound
xchg
rorb
stos
rclw
mov
adc
pop
faddl
cmp
and
adc
adc
xchg
xchg
test
cmp
pop
cli
jb
and
orb
insl
scas
js
pop
sti
push
pop
cld
mov
or
or
cltd
jno
cs
mov
push
incb
repz
cmp
adc
sbb
inc
ljmp
outsb
mov
jp
pop
aas
inc
mov
add
and
dec
clc
sub
call
pop
push
ret
nop
xchg
mov
mov
shr
pop
fildll
xchg
adcl
pop
jne
iret
int3
xchg
rcrb
rcll
aas
and
cmp
ret
add
pop
push
int
paddw
lods
xor
sbb
ja
test
add
insl
cmp
cmp
clc
shll
ss
or
ret
mov
mov
inc
mov
inc
jg
movsl
jle
imul
test
mov
push
inc
cmp
and
int3
call
pushl
xchg
jb
mov
jecxz
repnz
subb
cmp
lds
xlat
xchg
jle
cmp
jmp
xchg
cmp
data16
xor
and
cld
in
push
jecxz
loope
inc
mov
jl
cmpsb
push
bound
hlt
adc
fsubr
nop
and
popf
jge
mov
sbb
das
adc
call
xlat
push
mov
pop
test
pop
add
popa
jno
mov
push
mov
test
sbb
lea
jg
popa
mov
or
push
daa
push
data16
icebp
je
out
call
fadds
xor
mov
pop
sbb
cmp
adc
inc
cmp
fcompl
cmpsb
dec
testl
je
xor
inc
mov
add
sbb
shrb
enter
mov
pop
adc
mov
push
js
lock
cmpsl
jne
inc
sub
push
test
hlt
stos
dec
cmc
add
ficoml
sti
lret
testb
sbb
push
dec
jmp
cli
ret
addl
mov
sub
fdivr
jg
adc
idivl
imul
popf
shrl
hlt
scas
pop
and
pop
mov
mov
lods
sti
and
or
jmp
aaa
mov
pusha
sub
loopne
pop
test
sbb
mov
movsb
add
mov
push
inc
popf
movb
xor
add
rclb
rep
clc
xchg
sti
stos
incl
dec
sub
pop
iret
push
mov
and
cli
stos
nop
mov
jb
pop
movsl
jg
test
lods
and
jne
movsl
mov
inc
add
xchg
jl
sbb
add
mov
fcomps
xchg
xor
push
mov
sub
jg
loopne
into
adc
pusha
jo
cmp
inc
pop
adc
sub
lock
cmp
ret
mov
test
sub
pop
mov
fcomip
les
mov
push
and
inc
mov
push
pop
push
js
mov
pop
push
xor
test
dec
inc
sbb
ljmp
or
push
cmpsb
xchg
mov
cli
or
cwtl
test
pop
mov
adc
mov
mov
and
shll
inc
inc
jle
enter
rclb
ja
aam
adc
push
rorb
js
out
jp
sti
push
out
jmp
jae
sbb
cwtl
inc
scas
rorl
mov
push
dec
lods
fists
repnz
ficoml
xchg
jmp
call
popa
pop
pop
fdivs
adc
jne
push
outsl
jl
into
dec
or
cltd
push
pushf
into
jo
sbbb
sub
xchg
cmp
and
mov
jnp
fwait
rcrb
lret
ficoml
dec
push
fwait
or
inc
mov
lcall
fisttpll
xchg
imul
or
add
into
shrb
and
xchg
pushf
cwtl
pusha
mov
cmp
xchg
gs
xor
shl
or
outsl
mov
bound
xor
inc
imul
push
js
dec
cmpsb
xor
adc
jle
jnp
test
pop
arpl
cs
icebp
push
jno
cmp
out
pop
sahf
push
clc
mov
mov
sti
dec
mov
mov
stc
mov
in
mov
and
inc
insl
cmp
xchg
in
xor
cmc
rcrl
bound
aad
pop
mov
test
daa
test
pop
ss
jg
dec
pop
lret
cmp
imul
push
and
sbb
jmp
orb
push
lods
sbb
shl
jo
or
das
push
mov
mov
arpl
data16
pop
hlt
mov
mov
sti
mov
addl
xor
jmp
nop
into
lret
fisubrs
lret
rorb
sbb
pop
inc
test
repnz
add
movl
addb
jmp
jb
fiaddl
lods
xchg
pop
lods
sub
in
push
and
inc
pop
lock
sbb
mov
xor
xchg
xorl
or
fucom
xchg
pop
mov
add
imul
cmp
jg
push
adc
rolb
in
mov
jae
cmp
jno
dec
aas
jns
addr16
out
mov
pop
adc
mov
cs
pop
mov
mov
ljmp
pop
cmpsl
push
iret
ss
hlt
push
icebp
roll
call
or
and
jb
jo
push
test
fnstsw
andb
push
pop
fs
cmp
jecxz
adc
jnp
dec
add
adc
ret
pushf
xor
fnstcw
scas
adc
inc
add
aas
loope
aas
pop
pop
lods
out
lds
out
or
je
xor
aas
cs
ret
cmp
fildl
jne
dec
mov
nop
jg
jp
sbb
push
scas
enter
cli
mov
lcall
adc
mov
jl
mov
push
inc
sub
push
testl
and
lds
mov
js
or
insb
outsb
cmpsb
pusha
xlat
pusha
or
mov
mov
sub
add
enter
adc
add
adc
std
flds
mov
add
add
push
pop
mov
sub
cmp
add
jno
jp
jmp
mov
mov
lret
inc
push
push
cmp
push
push
je
mov
in
iret
out
inc
sub
std
sbb
insb
mov
in
mov
cmp
pop
fists
add
mov
out
aam
gs
cmp
jl
jge
add
testl
jl
fs
mov
add
mov
jg
cli
addr16
mov
test
pop
xchg
mov
dec
pop
push
loop
mov
mov
push
mov
test
inc
mov
fs
jg
ret
aas
lret
push
sub
ss
fildll
bnd
cltd
sbb
lds
pop
ret
jae
inc
push
and
into
shlb
and
xlat
lock
ficoml
mov
or
fbstp
xchg
jns
scas
mov
cmp
adc
mov
ljmp
jnp
adc
inc
test
cmp
aas
mov
cmpsb
adcb
cmpsl
jns
or
mov
mov
and
or
jp
out
not
xlat
sub
jns
mov
adc
aaa
add
arpl
into
das
add
out
push
cwtl
out
icebp
outsl
leave
sti
cmp
lret
add
ljmp
nop
jmp
xchg
mov
mov
insb
aas
arpl
lds
push
ljmp
mov
insb
jmp
cmp
cwtl
lds
xorl
filds
mov
mov
or
cli
sbb
std
push
sbb
adcb
xchg
insl
lock
loop
jmp
aad
add
xchg
or
push
sbb
movsb
hlt
xor
sbb
cmpsb
add
push
cmp
mov
sbb
adc
aaa
aaa
movsb
icebp
loope
xor
mov
aas
and
movsb
sbb
adc
and
ja
test
js
outsb
cltd
push
adc
cmp
adc
jo
fisttpl
sbb
dec
incb
jle
xor
notb
std
cmc
test
jl
adc
mov
xor
das
std
cmc
faddl
pop
icebp
sarl
movsb
inc
sub
fistps
fwait
xchg
stos
xorl
adc
dec
and
lods
ret
inc
push
call
loope
add
lcall
mov
inc
addr16
add
movb
inc
mov
mov
inc
dec
std
shl
xor
push
add
cmp
test
loope
push
test
minps
adc
jecxz
xchg
jmp
ss
les
loop
inc
rorl
stc
jmp
les
hlt
es
cs
jecxz
or
lea
mov
or
das
cmc
pop
lods
dec
mov
sbb
adc
inc
daa
dec
enter
sti
pop
cmp
dec
clc
mov
or
adcl
adc
xlat
xchg
xchg
push
fisubrl
pusha
jge
cltd
fidivrl
mov
lret
push
cmpsl
ljmp
pop
ljmp
ds
mov
shll
pusha
ret
call
test
or
testb
jo
mov
orl
mov
and
pop
icebp
mov
push
mov
sbb
pop
inc
inc
adc
cmc
jo
popa
mov
xor
push
pop
add
pop
fldl
pop
mov
inc
rdmsr
mov
xchg
or
inc
dec
cld
popf
outsl
rorb
ror
mov
test
js
xchg
loope
sbb
mov
add
in
add
or
add
push
rep
fwait
loop
mov
loope
aam
out
add
stc
add
.byte
.byte
.byte
push
incl
push
add
xchg
push
mov
cmp
outsl
in
push
dec
gs
fs
jne
lea
push
lea
push
push
lret
or
jb
leave
ret
xor
dec
daa
in
add
cld
push
add
pop
jnp
fnsave
push
daa
lock
es
pop
inc
arpl
fcompl
mov
push
push
and
sti
xchg
cld
jle
push
push
je
xor
and
mov
fistpl
imul
inc
pop
mov
jle
push
cwtl
push
xorl
fstps
mov
dec
insb
xor
push
jl
sub
pop
and
out
aas
push
subl
push
push
das
iret
jle
push
js
jns
xor
idivb
neg
mov
enter
not
mov
insl
fldt
js
pop
in
push
xor
lea
mov
imul
or
mov
jg
std
mov
dec
adc
jne
add
popa
sub
inc
push
not
dec
inc
mov
pop
jge
xchg
xor
ja
push
push
cmp
push
fstpt
mov
mov
mov
ss
dec
xor
aas
mov
inc
push
pop
xor
sub
sbb
neg
lcall
jge
out
fidivrl
imul
dec
ficomps
pop
mov
clc
push
cmp
popa
dec
dec
neg
mov
icebp
cs
call
aas
std
adc
das
pop
push
mov
add
aad
add
add
out
outsb
add
add
push
mov
sbb
mov
shll
pop
jmp
sub
xchg
cmp
add
pop
arpl
std
idiv
cs
xchg
add
pop
subl
add
sbb
xor
fs
push
outsl
fnsave
adc
orb
push
orb
xchg
inc
add
add
add
xor
sti
fistl
push
or
mov
inc
and
hlt
out
das
mov
dec
add
mov
adc
std
shrl
mov
sbb
mov
incl
push
sub
cs
jge
add
add
add
and
rorb
mov
dec
femms
mov
andl
fldt
out
xchg
adc
div
pusha
mov
add
or
daa
enter
and
test
mov
mov
enter
nop
fbld
xchg
mov
shll
push
xor
adc
dec
test
lods
push
lcall
out
loop
cld
mov
sbb
cmp
add
jl
push
divl
add
and
lds
mov
mov
negl
xor
sbb
test
push
xor
outsl
decl
adc
popf
jo
add
shlb
inc
jns
mov
mov
sar
sti
and
ret
pop
xchg
or
add
pop
pusha
mov
sbb
mov
adc
loope
ljmp
jmp
add
adc
mov
add
inc
daa
add
loope
fistpll
mov
inc
dec
inc
jge
push
nop
loop
and
js
incl
add
fldl
sub
mov
inc
xor
iret
add
mov
lahf
add
idiv
mov
sub
mov
lds
popa
test
dec
add
mov
jle
cmp
bound
add
cmpsb
lds
cmpsl
xchg
cmp
ret
cld
testb
dec
jle
call
inc
xor
divl
dec
push
and
shll
mov
pushf
inc
in
cmpsb
adc
aaa
jns
mov
inc
iret
pop
jl
icebp
sbb
sub
dec
aaa
arpl
clc
in
mov
out
aas
push
or
cmp
dec
ret
in
fstl
stos
push
push
data16
sbb
jae
icebp
jo
test
push
inc
or
or
jl
inc
pop
xor
out
bound
dec
add
mov
jecxz
das
pusha
sub
or
insb
imul
std
xchg
incl
mov
lcall
push
mov
cwtl
jmp
fnsave
ss
dec
enter
pop
mov
data16
fsubs
adc
fsub
lret
outsb
cmp
sbb
jb
mov
adcl
shll
fnsave
and
scas
mov
bound
lock
jae
mov
roll
add
std
js
mov
jg
push
and
push
clc
mov
ffreep
sbb
sub
xchg
ja
add
push
aas
aad
push
ja
push
sbb
js
vpmadcswd
je
sbb
or
fisttps
mov
and
dec
sbb
cld
clc
jl
xchg
int3
cmpb
push
gs
clc
fdiv
xchg
cmp
negb
mov
inc
cwtl
ret
push
repz
int
add
repz
rolb
jp
jge
jns
or
push
lds
mov
and
fstpt
pop
cmpsl
add
das
imul
das
mov
adc
inc
jb
out
movsb
pop
xchg
sub
shl
add
das
out
int3
cmp
dec
lahf
popf
pop
inc
mov
jb
js
lods
cld
shll
shrb
push
lret
xor
popf
mov
cld
fistps
loop
cmp
or
scas
mov
fistpll
xor
in
cwtl
mov
cmp
das
add
sub
divb
xchg
pop
sahf
inc
adc
or
or
jp
xchg
inc
sub
cli
dec
sbb
in
ret
inc
xchg
in
in
aam
cmpsl
jle
imul
xchg
mov
pop
lds
cmp
enter
dec
mov
adc
cmp
or
stos
xchg
jmp
fnsave
data16
add
jge
js
in
js
jo
cmp
aas
sti
insb
je
in
popf
dec
dec
pop
daa
or
scas
jae
jp
aaa
xlat
out
rclb
negb
js
frstor
push
or
inc
ja
pop
fisubrs
add
xor
push
ss
cli
jge
cmc
out
fcomps
inc
sub
into
and
int
in
cmp
jecxz
mov
xor
cmp
xor
aaa
mov
pop
enter
mov
xor
xor
test
mov
jle
cmpl
jnp
sbb
jl
cmp
push
inc
jns
mov
sbb
clc
repnz
ret
into
aam
cs
push
int3
cmp
cmc
sub
or
mov
jl
mov
pop
cmpsl
xchg
scas
insb
jo
sti
jbe,pt
xor
ds
sbb
push
out
jle
add
push
pop
push
adc
xchg
popa
imul
inc
dec
inc
mov
xor
cltd
sub
shrb
pop
fdivrp
out
out
pushf
or
fisttpll
mul
incl
mov
and
add
ljmp
mov
and
ret
and
mov
jo
adc
iret
pop
scas
lcall
mov
insl
jecxz
xor
push
jbe
mov
fnstsw
add
cmpsl
lahf
lret
ljmp
clc
mov
cmp
adc
inc
dec
inc
cmp
aad
int3
xor
out
pop
neg
daa
mov
int3
or
test
and
xchg
jne
add
insl
sub
mov
ds
mov
dec
test
and
jbe
dec
add
cltd
aas
add
iret
sarl
and
ss
call
cmpsb
sbb
mov
je
out
adc
sub
inc
cltd
push
ja
or
mov
icebp
decl
cwtl
fidivl
add
xchg
test
fmuls
add
in
lahf
aaa
adc
xchg
jl
cltd
xchg
scas
pop
inc
mov
mov
push
mov
cmp
dec
sbb
rol
sbb
adc
cmp
popf
mov
mov
xchg
fs
mov
add
cmp
or
faddl
pop
sti
add
add
xchg
cmpsb
push
xchg
cld
jp
in
fsts
fistpll
cmpb
xor
in
sbb
ret
lea
push
shlb
fs
sbbl
pop
out
cmpsl
or
out
inc
ss
ss
stos
xchg
les
loope
es
jle
mov
push
cmpsb
mov
das
mov
push
dec
xchg
add
lcall
movsl
movsl
inc
add
int3
jg
pop
mov
outsl
lods
inc
and
jg
mov
arpl
xor
adc
cli
xlat
inc
jle
jmp
cltd
out
add
jl
insb
in
pusha
mov
movlps
fs
les
sbb
push
push
add
ret
push
mov
push
or
jbe
cmpsl
adc
repz
or
jg
jmp
lahf
sbbb
dec
add
adc
mov
leave
dec
aam
and
aas
jg
pop
jmp
pop
fsubrl
pop
sbb
jne
xchg
pop
jmp
sbb
xchg
sbb
mov
or
int
mov
arpl
lods
shrl
and
aad
push
mov
aas
add
icebp
dec
pop
in
adc
dec
in
lds
mov
in
mov
dec
sti
adc
jmp
push
mov
shrl
loopne
fcmovbe
enter
shll
jl
mov
hlt
add
cwtl
fdiv
or
inc
addl
sbb
add
mov
lods
fs
mov
add
push
das
or
stos
jae
xor
shll
sbb
mov
lock
jecxz
sbb
xor
sub
add
dec
daa
mov
jb
mov
mov
mov
repz
cltd
sub
out
insl
rcrl
xchg
mov
loop
mov
add
xchg
mov
cmp
inc
inc
mov
mov
dec
sub
cmp
insl
add
and
jmp
aaa
aam
inc
adc
arpl
push
adc
push
data16
clc
popa
out
shlb
adc
into
dec
cld
insb
mov
jns
pushf
inc
sub
jg
xorps
xor
shrb
mov
jecxz
test
cld
inc
or
shrb
cmp
negb
sbb
scas
test
iret
ret
lock
xor
cltd
adc
mov
add
loopne
mov
pop
aas
cltd
test
xchg
ss
dec
dec
pop
paddsw
sub
test
xor
xchg
xor
sub
in
outsl
into
cmpb
sub
inc
movsb
out
sbbl
jns
cmp
inc
cmp
or
jge
je
call
mov
aad
cmp
cmp
repnz
aas
imul
out
adc
loope
adc
comiss
sti
pop
cmp
xor
lcall
push
mov
push
shlb
dec
call
imul
imul
test
jbe
ljmp
push
inc
adc
cli
rcll
jo
aad
cld
xchg
js
mov
in
mov
cmp
popa
and
jle
push
rorb
jle
outsb
cmp
in
mov
mov
pusha
push
cmc
int
inc
mov
in
fdivp
cli
mov
in
insl
xor
ret
arpl
xlat
and
mov
cmp
push
iret
jno
xorl
xlat
mov
add
inc
push
sub
inc
sarl
orl
jns
in
jne
and
pop
add
in
mov
inc
cwtl
mov
into
xorb
aam
aas
mov
xchg
or
popa
pop
icebp
pop
test
jbe
xlat
rcr
dec
cwtl
es
mov
jns
pop
aam
or
aas
shr
decl
mov
aas
push
jecxz
clc
mov
arpl
adc
pop
dec
jo
inc
mov
jnp
adc
fwait
mov
mov
inc
pop
les
or
testb
ja
pop
adc
xor
popa
sti
not
nop
and
vmwrite
enter
je
scas
inc
mov
sub
jp
std
stc
test
pop
jns
xor
dec
cld
mov
enter
lret
mov
shr
sbb
test
xor
ficoml
mov
xor
ja
mov
inc
push
popf
cmpsl
decl
jl
insl
incl
pop
insb
or
xchg
and
sub
out
push
loope
test
mov
les
xor
sub
mov
dec
out
inc
or
sbb
mov
mov
cltd
ds
rclb
sub
add
xchg
inc
and
cmc
jg
jbe
add
push
loope
and
jae
outsb
sbbb
lods
xchg
cwtl
cld
mov
mov
pxor
lea
ss
test
cmp
add
dec
xor
xor
fistpll
es
icebp
lret
jns
ljmp
out
inc
mov
dec
test
and
push
out
inc
jb
clc
cld
xor
cmp
fdivrp
in
cli
arpl
inc
push
cmpsb
mov
lret
std
jp
push
inc
test
test
sbb
and
fsubrl
test
sub
cli
xchg
cmp
ret
jns
sar
push
sbb
pop
inc
pop
pop
clc
sbb
into
int
call
movsl
outsl
js
pushf
fucomp
into
jge
mov
xchg
sbb
mov
push
ljmp
les
icebp
jp
lea
ret
aaa
pushf
scas
or
in
scas
fsubp
fdivr
ret
dec
das
xor
cwtl
pop
leave
mov
cmpsl
mov
and
and
push
call
pop
cli
xor
mov
dec
cmpsb
rorl
int3
imul
test
jg
jo
mov
sub
mov
sbb
add
push
push
int3
fdiv
mov
pop
test
xorl
loop
cmp
inc
xchg
shll
xor
or
push
iret
jnp
push
lds
fcmovnb
xchg
decl
sub
loop
ja
lock
lods
and
push
or
and
cmp
int
rorb
xor
inc
sbb
mov
rcl
sub
lret
or
jns
push
sbb
movsl
sbb
xchg
scas
dec
movl
inc
dec
iret
xchg
adc
dec
pop
jno
sub
push
out
mov
push
mov
inc
sbb
or
mov
sbb
pusha
cmpsb
andl
and
test
mov
dec
in
push
mov
add
lret
hlt
fwait
orl
cmp
pop
and
jge
testl
pop
pop
mov
pop
pop
cli
es
jbe
add
pop
or
scas
lret
cltd
int3
mov
ret
pop
mov
lret
pop
in
dec
sbb
fistpll
repnz
lahf
lock
push
or
add
dec
lcall
aam
mov
xchg
push
addl
je
sbb
inc
ja
jge
adc
and
hlt
xchg
xor
es
push
test
lret
mov
and
sub
sbb
subb
cld
xchg
push
popf
roll
mov
mov
inc
test
push
andb
sub
cmp
push
jp
loop
sarb
orl
adc
mov
adc
or
jns
pop
sub
mov
mov
js
cld
vpavgb
rdtsc
inc
add
jle
inc
lret
pop
adc
cld
mov
std
testb
pop
jno
sub
or
test
fwait
das
loopne
stc
dec
dec
sub
sbb
mov
fdivrs
push
cmp
push
sub
dec
or
xlat
test
popa
mov
scas
outsl
rol
xchg
in
movsl
mov
lock
adc
test
pop
jg
xchg
pop
mov
mov
ja
or
push
sbb
jp
pop
sbb
cmpsl
leave
xchg
push
frstor
shll
jne
mov
leave
lcall
mov
or
movsl
sbb
es
repz
out
cmpb
into
push
xor
icebp
mov
out
fidivrl
mov
nop
pop
sbb
and
ret
lret
das
std
out
movsl
dec
push
mov
cld
mov
xchg
pushf
and
fcmovu
repnz
call
rclb
ja
data16
sti
fs
add
mov
insl
mov
in
int
ds
push
push
js
cmpsb
mov
mov
xchg
push
mov
rolb
mov
cmc
test
int3
lods
daa
stos
xchg
jnp
ret
xchg
mov
arpl
inc
and
subl
test
jb,pt
repnz
pop
loop
adc
test
sub
pop
das
sub
imul
stc
push
jbe
inc
pop
or
mov
pop
hlt
inc
push
sub
mov
xor
decl
lret
sub
sbb
mov
xchg
inc
xor
fstpt
cltd
push
xchg
in
shrb
mov
scas
les
lret
lea
mov
mov
inc
and
out
into
xchg
jne
fidivl
push
jp
in
rcr
lahf
test
add
lret
xchg
sti
repz
mov
adc
lock
pop
add
and
inc
aaa
outsb
mov
or
fadds
sbb
lock
sub
shr
je
xchg
outsl
mov
dec
cwtl
adc
js
dec
addr16
push
dec
mov
in
or
fadd
mov
pop
jb
in
cmpsl
es
add
lret
aam
dec
dec
mov
cmpsl
xchg
aam
ljmp
add
aas
cmp
lods
or
int
or
sbb
aaa
pcmpeqw
jp
and
mov
lea
in
pop
aaa
lahf
fsubr
lahf
cld
push
pop
add
cmp
add
xchg
mov
inc
and
int
aas
aas
repz
add
and
cmc
fucomi
sbbb
pusha
or
mov
add
sub
ja
dec
in
lret
mov
out
xchg
push
xor
loopne
fsubs
arpl
cli
jnp
jle
adc
pop
dec
pop
inc
stc
daa
mov
or
test
idivl
das
insb
cmp
inc
cmp
mov
and
mov
and
lret
pop
cld
roll
je
loope
mov
in
or
pop
jae
xor
std
js
and
push
dec
xchg
jb
xor
xchg
xchg
ljmp
push
adc
adc
adc
dec
fdiv
jns
lcall
xchg
lret
add
in
inc
xorb
clc
xchg
lods
rorl
ret
insl
test
std
ret
fdivl
jl
lock
jo
jecxz
das
clc
mul
mov
cmp
or
dec
aaa
dec
arpl
ds
loop
mov
sbb
push
addr16
mov
clts
mov
and
pop
adc
xchg
loop
mov
aas
add
add
xchg
mov
mov
fdivrs
roll
shll
je
jno
jns
shlb
fmull
cmp
inc
loop
test
dec
add
into
mov
rcrb
push
fs
les
fildl
add
std
testl
dec
and
xor
std
or
daa
shlb
push
pop
je
mov
jle
jl
add
cld
mov
sti
pop
jmp
xor
lret
and
pushf
adc
aaa
pop
cmp
cmp
shl
leave
lods
xchg
loopne
adc
mov
adc
push
inc
xchg
push
mov
clc
push
adc
sub
xchg
insb
mov
stos
dec
je
sbb
adc
sub
mov
and
les
xchg
ja
bound
jmp
fwait
stc
mov
out
xor
and
sbb
jo
xlat
and
mov
lahf
cmp
scas
leave
sub
xor
sbbb
rclb
and
popa
sub
xor
ret
sahf
popf
insb
clc
dec
lds
mov
mov
push
imul
fildll
pop
jbe
stc
push
jnp
enter
cld
mov
out
push
sub
pop
iret
or
or
in
or
aad
push
inc
jp
stos
aam
inc
cmp
cld
adc
dec
and
scas
mov
cwtl
ret
xchg
mov
push
adc
aad
mov
popa
shlb
lods
pop
inc
dec
testb
inc
repz
mov
xchg
js
mov
add
cld
maxps
push
int3
inc
mov
push
cmp
mov
push
cwtl
sbb
pop
lds
into
push
gs
xor
sub
cmp
inc
adc
lret
jnp
mov
add
sahf
push
sbb
sarb
hlt
xchg
push
add
fistpl
jle
js
adc
xor
scas
jp
mov
enter
hlt
xchg
sti
lods
dec
pusha
xchg
and
sbbl
icebp
push
mov
gs
xchg
inc
test
sub
sbb
adc
pop
mov
test
cld
dec
data16
data16
inc
jle
adcb
lret
pop
push
pop
and
mov
jns
sbb
cmp
mov
aad
dec
push
je
adcl
xor
cmp
mov
jbe
add
cmpb
arpl
decb
lea
push
fiadds
fcomps
lock
leave
lret
pop
test
push
mov
push
clc
in
inc
pop
pop
xchg
add
cwtl
ret
sti
add
add
sub
sub
lret
xchg
push
cli
push
add
in
push
ss
jmp
pop
sahf
lea
sar
sub
mov
push
jo
sarb
add
adc
pop
push
jl
mov
inc
es
push
lds
scas
mov
lds
cmp
or
aaa
or
out
dec
mov
adc
xor
ljmp
inc
sti
ffree
xor
sbb
mov
mov
aad
dec
jge
mov
in
cmpsl
dec
and
dec
pop
mov
mov
inc
xchg
inc
sbb
push
cmp
int3
pop
mulb
dec
insl
js
leave
jg
insb
pop
fs
cmp
inc
call
sub
sti
aaa
inc
scas
lret
push
int3
sbb
loopne
pop
into
inc
lahf
mov
sahf
imull
sbb
mov
mov
dec
dec
outsl
std
pop
and
sub
cltd
and
jmp
dec
mov
or
mov
aaa
push
add
mov
repz
pop
jno
jno
add
cmp
sub
mov
repnz
jbe
mov
popf
insb
mov
lods
cs
stc
mov
push
std
add
pop
or
push
xchg
mov
and
or
popf
cmpsl
mov
cmp
push
shlb
add
std
sub
xor
int3
test
shlb
sbb
das
std
mov
jp
adc
and
xor
fimull
mov
dec
or
adc
std
or
dec
sbb
sbb
das
jne,pt
or
hlt
xchg
or
or
add
andl
mov
nop
push
ret
frstor
jp,pn
cmp
pop
sbb
cmpsb
clc
jo
lahf
or
or
cwtl
sarl
jmp
sub
mov
inc
add
adcl
roll
cmp
aas
enter
push
pop
stos
jns
jecxz
pop
xchg
push
call
fwait
and
lret
push
jle
int
fs
ss
cmp
pop
cmpsl
dec
clc
stc
sub
pop
cmpsb
push
mov
push
dec
mov
movsl
jecxz
or
test
mov
inc
mov
lods
shll
xor
mov
loope
sbb
xchg
sub
pop
in
or
jle
or
jle
clc
pop
xor
mov
scas
sub
lahf
into
shlb
and
data16
leave
inc
and
test
cmpsb
repz
arpl
hlt
adc
jno
push
cmpsb
scas
mov
sbb
jle
ret
xchg
rorb
jo
addb
setp
sub
rcl
loope
das
jge
jb
dec
dec
arpl
std
imul
cli
or
mov
fcomp
fwait
sbb
mov
xchg
or
lods
fdivrp
fildl
push
in
jl
stc
or
int3
fimuls
stos
test
loope
roll
in
in
loopne
in
sub
push
jp
adc
cld
jae
dec
xchg
shlb
out
inc
adc
neg
sarl
cld
dec
xor
or
dec
mov
and
addb
in
mov
mov
and
mov
mov
push
push
xorl
nop
enter
mov
xor
and
cmpsl
mov
ret
inc
pushf
sbb
xchg
cwtl
cmpsl
sbb
mov
and
rorl
jnp
sub
out
push
fdivl
sub
bound
mov
popf
mov
mov
call
je
sbb
lret
inc
addr16
jecxz
ret
push
lahf
dec
mov
mov
cli
ljmp
adc
mov
mov
add
daa
pop
dec
iret
and
inc
adc
testb
fldt
clc
mov
les
cmp
out
xor
mov
aaa
mov
rorb
xchg
cs
inc
fs
popf
dec
and
pop
mov
bound
loope
adcb
pop
insl
jp
iret
notb
roll
or
adc
out
cli
push
pop
clc
test
fwait
pop
loopne
dec
testb
aad
sbb
adc
xor
sbb
mov
sub
imul
mov
sub
sub
dec
jg
or
cmovne
out
in
pusha
jae
pop
je
adc
test
stos
shlb
mov
lods
lret
inc
sahf
pop
js
aaa
sbb
push
insl
filds
shrb
jno
popa
mov
add
adc
or
jg
outsl
call
jg
push
out
lcall
popa
mov
fnstenv
out
popf
sub
std
movsb
jg
fs
ffree
xlat
decb
test
xor
lock
xchg
fsubl
pop
inc
pusha
hlt
jne
lahf
cmpb
sbb
inc
movsb
in
out
mov
adcl
xorb
pop
rorl
mov
xchg
stos
cltd
leave
test
shll
sbb
and
cmp
ja
aaa
aaa
jp
dec
xchg
repnz
mov
jle
push
fiadds
cld
add
ret
mov
push
mov
mov
movsl
fistpll
xor
rclb
cmp
jns
push
mov
push
scas
xor
scas
cmc
or
lcall
add
das
inc
rcr
pop
inc
lea
fdivl
mov
test
xor
add
push
mov
and
sub
inc
out
addb
lcall
rclb
fdivr
push
lds
jmp
xor
sbb
add
fisttpll
push
cs
ret
mov
jl
sbb
mov
mov
pop
adc
sub
test
mov
inc
cs
repz
xchg
xchg
mov
cmp
dec
pop
and
mov
data16
lcall
or
ds
pop
inc
sub
xchg
dec
shll
js
in
add
ret
loop
pop
add
sub
or
push
dec
fs
xlat
mov
pop
push
in
xor
test
xor
xorb
jmp
dec
cmp
rorb
ja
fst
mov
test
aaa
mov
push
fstps
inc
fmuls
lock
jecxz
dec
or
pop
outsb
in
sub
popa
xchg
adc
cmp
dec
add
mov
popa
mov
add
and
pop
mov
ljmp
mov
test
xchg
inc
sub
push
and
mov
mov
pop
orl
das
inc
pop
or
addr16
int
add
shlb
clc
sbb
int
stos
xor
fsts
lret
cld
add
dec
rcr
in
inc
xlat
orl
jbe
das
js
fdivrs
xchg
mov
dec
pop
es
test
mov
sbb
xchg
cmp
mov
pop
jp
cli
jnp
and
pop
jg
cmovns
xor
cmp
jno
dec
sbb
scas
push
leave
ret
jle
rcrl
loope
pop
and
mov
mov
cmpl
jl
jne
lods
pop
ss
xchg
jecxz
aas
daa
inc
shrl
clc
jle
xchg
arpl
add
mov
in
xchg
test
mov
cwtl
fs
lret
pop
push
jo
xchg
out
fidivl
lret
sub
js
outsl
lret
xor
sbb
stc
cmc
out
loope
outsl
fcomip
and
mov
inc
aad
movsb
pop
cltd
enter
add
push
push
dec
ret
adc
push
inc
fimuls
push
dec
gs
fiaddl
stc
push
pop
lods
jb
outsb
cmp
aaa
ja
fdivr
sub
cltd
add
andb
stos
jne
dec
adc
or
jnp
out
ret
stos
sub
shlb
xchg
dec
jo
data16
push
push
or
lock
xor
test
pusha
xor
push
shlb
jno
cmpsb
ja
sub
mov
fnstsw
add
inc
arpl
adc
call
mov
outsl
mov
and
mov
in
daa
fadds
add
shlb
mov
shrb
push
mov
testb
inc
xchg
dec
subl
popa
xchg
test
mov
cs
adc
adc
lock
gs
fimuls
leave
cltd
jnp
jecxz
push
arpl
ljmp
cld
push
in
push
adc
out
into
loopne
addl
add
out
pop
movsl
stos
es
cltd
and
in
fidivs
sbb
cs
add
jle
popa
iret
mov
add
pusha
sbb
orb
loopne
stos
jo
loopne
cmc
mov
rcrl
add
cmp
mov
xchg
mov
fsubrs
js
jle
or
ss
loop
test
les
cld
mov
sbb
sub
loope
pop
mov
xchg
push
xchg
mov
add
jbe
roll
movsb
cwtl
leave
lock
loopne
add
push
and
rcr
aas
je
aam
insb
xchg
dec
push
lret
cmp
out
add
xor
or
ds
call
movl
sarb
push
daa
clc
mov
and
jmp
pop
and
jle
inc
adc
push
xchg
and
addb
cmpsl
int
and
movb
cmp
push
mov
out
push
test
pop
dec
mov
mov
lahf
test
fwait
inc
push
push
push
jl
in
xchg
jns
mov
daa
push
test
mov
icebp
sub
jo
into
pop
sub
xchg
cltd
push
popa
adc
popa
loope
xor
push
fisubrs
dec
pop
insl
mov
dec
es
ret
mov
inc
add
pop
mov
pop
xchg
out
imul
and
and
scas
movsb
mov
mov
aad
pop
loope
and
sahf
and
mov
mov
into
cld
adc
xor
jmp
xor
sbb
jecxz
cwtl
push
inc
jg
imul
sub
jno
stc
push
adc
rcrb
shll
mov
mov
lods
push
les
mov
es
and
test
movsl
jbe
mov
imul
mov
mov
inc
and
mov
push
mov
loop
push
jns
insl
enter
push
mov
fildl
loop
push
adc
xchg
cmp
cs
add
cmp
movsl
inc
ret
xchg
mov
adc
xor
mov
sahf
frstor
imul
cwtd
cs
mov
or
or
bound
pop
add
orb
lret
fisubl
popf
mov
adc
mov
es
int
imull
cmp
fcmovbe
push
xchg
les
movsb
repz
push
out
add
roll
mov
addb
incb
shrb
orb
ja
out
cld
arpl
inc
or
aas
xor
add
add
call
mov
movsb
imul
jo
jl
push
shll
sub
loopne
add
push
and
repz
aam
dec
outsl
mov
hlt
jmp
cltd
aam
lods
push
add
jmp
out
aaa
outsb
pop
mov
jge
push
push
push
fs
enter
inc
add
aaa
in
mov
loop
sbb
inc
lock
ljmp
das
xor
pop
cld
scas
loop
mov
out
mov
subb
fbld
in
push
loopne
mov
xor
pop
mov
mov
pushf
insb
adc
xchg
or
push
push
int
push
or
xor
cmpl
sbb
lods
data16
push
jmp
hlt
xchg
or
inc
or
pop
aad
pop
fsubrp
rcrl
movsb
xchg
sti
jmp
stos
push
shll
mov
add
sbb
pop
pusha
fisubs
jle
sbb
cmp
push
xor
std
movsl
paddb
dec
inc
adc
ss
sbb
sub
mov
ret
cmpsl
fucomp
mov
loop
ss
xor
or
pop
jle
adc
gs
cmpsb
lret
addr16
hlt
mov
call
adc
je
xor
fdivs
cld
mov
inc
sub
xchg
xchg
cltd
xor
imul
inc
and
sbb
les
mov
fcomps
test
iret
pop
dec
or
filds
or
sbb
pop
xor
lahf
inc
adc
repz
idivl
test
pop
sbb
sbb
ss
mov
ret
clc
fisttpl
adc
rclb
aad
pop
or
mov
bnd
fbld
push
nop
push
and
mov
xorl
add
outsb
aam
jbe
test
in
fidivl
mov
push
push
push
cmp
subl
call
pop
dec
lcall
inc
sahf
cs
sbb
fldcw
scas
fwait
mov
rclb
mov
scas
loopne
add
ficomps
inc
test
popa
ret
outsb
out
ljmp
mov
adc
jl
fstpt
jg
cld
test
or
lret
scas
movsb
add
into
jge
sbb
sbb
pop
movsb
sahf
pop
push
sbb
enter
pop
outsb
pushf
insl
bsr
fs
xor
das
sbb
inc
jp
cmpsb
aas
sbb
fcompl
xor
fists
int
mov
popl
cltd
clc
adc
jg
or
dec
dec
or
loop
rolb
fbstp
pop
clc
in
int3
stos
xchg
push
aad
addr16
mov
sbb
testb
mov
addr16
inc
mov
mov
ss
int3
mov
rolb
stos
outsl
mov
sbb
test
push
jnp
dec
arpl
push
fisubrs
sbb
cmp
jle
iret
call
sti
in
movsl
clc
mov
int3
cmp
xor
dec
and
subb
jbe
cld
mov
es
xor
paddusb
pop
jns
dec
test
sbb
and
dec
or
jl
int
cmp
cmpsl
incl
popl
dec
push
pop
and
aaa
mov
outsl
lock
add
xchg
mov
xor
testb
xorb
pushf
bound
cmpsb
jg
mov
xchg
ret
push
pop
fdivr
xor
xlat
sbb
sbb
sbb
out
push
dec
mov
xchg
inc
fnsave
ss
add
inc
jmp
sub
lret
outsl
cmc
fisttps
sub
pop
pop
and
das
hlt
rolb
jb
call
scas
pop
push
push
xchg
sarb
pushf
pusha
ss
mov
addr16
adc
inc
dec
mov
sub
jae
cltd
mov
mov
mov
or
cmc
das
cwtl
jo
test
movsl
cmp
ljmp
mov
mov
pop
sub
mov
test
or
xor
and
shr
jbe
cld
pop
gs
mov
push
test
imul
mov
mov
fisttps
dec
add
dec
int3
inc
cmp
rorl
jns
sub
mov
pop
jecxz
or
leave
xchg
ret
adc
loopne
mov
cmp
cmp
lea
andb
push
cltd
jge
mov
loop
pop
jno
rorb
pop
jle
rclb
jb
test
das
push
inc
nop
jp
pop
rcr
fcmovbe
mov
cmp
rorl
dec
inc
mov
leave
cmp
inc
add
pushf
add
mov
rclb
cmp
fidivrs
pop
xchg
xchg
mov
xchg
sub
out
lcall
or
adc
hlt
mov
xchg
dec
aaa
mov
sarl
lock
add
das
and
vpshufd
lret
pop
jp
imul
mov
fbld
stos
pop
sub
dec
pushf
sub
fdivrp
push
mov
repnz
add
dec
mov
pop
jl
mov
push
sbb
cld
lcall
bound
addl
dec
xchg
inc
je
sub
mov
call
pop
fcomi
dec
sub
out
ljmp
push
jmp
daa
jb
dec
rcr
loopne
movsb
pop
push
sub
scas
xor
fldcw
add
cwtl
sub
mov
int3
fdivl
adc
jns
jg
add
xor
rcr
aas
cmp
in
mov
sub
or
adc
icebp
ficoml
inc
stos
pop
das
xchg
or
and
push
xchg
mov
ljmp
inc
aam
aad
loopne
lea
jl
icebp
dec
in
sub
add
hlt
ret
push
sbb
xchg
push
dec
daa
sbb
aas
rorb
fistps
xchg
ja
jns
sar
cmpsl
sub
js
iret
fildl
pop
imul
ss
fdivrl
push
push
and
xchg
pop
mov
mov
dec
fnstsw
test
adc
pop
leave
adc
mov
pusha
xchg
fs
test
dec
push
jne
jo
popa
ljmp
xlat
in
test
mov
xlat
sub
cld
jg
mov
sub
mov
add
add
lock
loop
or
inc
les
xchg
pusha
sub
pop
mov
add
cli
or
aas
shl
and
lock
push
jno
and
cwtl
mov
jp
push
push
scas
mov
rcll
testb
sbbb
outsl
clc
sbb
je
movsb
and
add
aas
sub
lea
add
ds
jge
jp
or
or
insl
mov
adc
jbe
lock
mov
in
out
pop
mov
sbb
sbb
pop
lock
decl
fmul
mov
sbb
lods
mov
cli
pop
imul
out
int
mov
jmp
jge
jecxz
rorl
shlb
add
jle
cmp
movsb
in
bound
sbb
adc
icebp
push
pop
mov
adc
add
jg
test
mov
pusha
aaa
out
jns
loope
jne
sbb
pop
dec
adc
mov
or
hlt
and
mov
ss
addr16
aas
test
add
pop
aaa
jbe
xor
dec
dec
std
je
arpl
jne
fs
jecxz
aad
pushf
add
rcll
aad
je
mov
mov
xor
je
sub
or
push
inc
je
int3
testl
pop
lret
mov
subb
xor
sti
scas
shll
jle
pop
xchg
repz
add
ret
inc
cmpxchg
aas
jl
mov
inc
and
mov
and
inc
sbb
push
inc
jl
dec
rorl
in
xor
push
ja
lea
or
les
add
mov
cli
mov
pop
dec
adc
sub
cmp
mov
jb
pop
pusha
jecxz
mov
int3
sub
mov
lods
adc
and
js
icebp
sbb
lret
push
or
xchg
dec
mov
adc
out
pop
andb
mov
adc
add
ljmp
sub
or
scas
adc
arpl
fstpt
testl
and
rcr
clc
testb
rcl
inc
icebp
push
cmpsl
mov
cmp
unpckhps
testb
jbe
push
jo
ds
xchg
jge
cmp
inc
jmp
xchg
lods
dec
and
mov
xchg
cmp
dec
adc
imul
dec
or
repz
or
mov
nop
hlt
lret
pop
xor
xor
mov
and
in
nop
les
bound
cwtl
movsb
add
cld
jmp
xlat
mov
jp
xchg
push
movsb
inc
inc
sbb
movl
div
pushl
inc
mov
pop
cmp
mov
cmc
push
mov
push
pop
mov
shl
outsl
rorl
sbb
cs
mov
cmpsl
and
add
scas
fs
out
out
xor
lahf
imul
and
jno
ja
pushf
scas
loop
mov
icebp
aaa
push
leave
adc
ret
or
dec
cmp
daa
int
fsubr
push
cli
xlat
xchg
xchg
sub
sbb
fwait
jl
xchg
imulb
fwait
stos
add
add
mov
data16
sbb
cmpl
stos
ret
movsl
fstps
pop
insb
loop
xchg
inc
iret
ja
fs
pop
out
jle
mov
in
rorl
cmpsb
aaa
jmp
pop
dec
cwtl
xor
aas
fdivl
sbb
mov
outsl
sbb
scas
pusha
lahf
cmp
or
cmp
dec
add
loopne
call
xor
loop
xchg
dec
fwait
aaa
jo
xchg
jle
and
data16
frstor
jne
lods
fldt
mov
or
gs
enter
ja
jo
push
jb
add
lea
mov
pop
push
mov
loopne
movsl
jnp
adc
or
test
mov
lret
hlt
add
jle
aad
and
hlt
lret
or
std
cld
jnp
arpl
sub
xchg
adc
or
pop
sbb
mov
movsb
hlt
int
rclb
cwtl
push
pop
outsb
call
in
xlat
movsb
mov
pop
movsl
outsl
cld
jns
and
aas
arpl
fadds
inc
sbb
loopne
xchg
mov
clc
and
aad
fistl
mov
sub
mov
aas
and
dec
adc
adc
xchg
mov
sbb
add
dec
mov
or
jg
push
xor
mov
ja
inc
test
push
add
mov
push
inc
mov
and
push
or
mov
adc
push
fs
push
aam
dec
cld
add
loop
or
loop
mov
fldt
adc
jo
andb
out
adc
and
dec
push
sub
cli
bound
mov
ret
mov
or
mov
repz
clc
je
adc
lock
daa
in
sub
shlb
pop
dec
iret
cmp
decl
iret
adc
out
mov
jg
mov
enter
add
outsw
push
jge
inc
push
xor
mov
adc
jecxz
mov
mov
and
sbbl
pmaxsw
push
inc
push
xor
push
loopne
mov
aas
and
test
adc
cmp
add
imul
add
aaa
call
outsl
lcall
adc
push
loopne
mov
in
push
inc
add
icebp
dec
mov
outsb
add
push
adc
inc
adc
mov
inc
xchg
add
mov
sbb
es
jno
xor
cs
cmp
cltd
test
sub
lea
xor
out
mov
or
dec
inc
stos
pop
pop
sbbb
bound
inc
add
popf
ljmp
das
xor
cmp
in
or
push
and
test
lret
je
adc
sbbb
pop
sbb
andb
shr
push
nop
cmp
inc
cmpsl
lock
lcall
cltd
xchg
ds
ljmp
loope
inc
inc
enter
pop
ficomps
add
test
or
jo
and
hlt
pinsrw
pop
inc
bound
pusha
dec
test
pop
das
std
add
sub
fstpl
or
cld
stos
cs
cmpsb
pop
adc
fldcw
in
push
sbb
lret
add
enter
add
test
test
aaa
xor
repnz
push
icebp
scas
sub
cmp
movsl
movsb
fcmovnb
in
incl
adc
scas
and
into
in
pop
jg
mov
add
mov
lock
jmp
mov
jecxz
adc
adc
fcmovnu
bound
xor
push
pushl
adc
hlt
sbb
and
push
bound
xlat
outsl
push
mov
mov
sub
bswap
adc
negb
inc
decl
jns
jno
fdivp
fldt
pop
pop
dec
rclb
or
or
jns
rcrl
int3
test
add
iret
lock
das
jo
out
inc
scas
sti
test
dec
mov
outsb
lods
sub
rorb
stos
push
jae
lock
lret
mov
push
clc
dec
push
adc
or
dec
enter
dec
and
repz
or
push
shl
popf
test
inc
mov
jg
lock
pushf
mov
mov
cmp
outsl
sbbl
pop
sahf
jne
or
jne
jmp
xchg
outsl
je
adc
shr
aam
mov
push
enter
jb
or
or
ss
mov
jbe
ret
dec
mov
repnz
push
ja
rcr
xlat
and
mov
or
in
mov
xchg
imul
sti
cmp
bound
mov
out
js
mov
imul
jb
stos
add
fisubrs
pop
mov
mov
cltd
jb
imul
fisubl
push
sub
and
inc
pushf
push
cmpl
pop
mov
decl
jbe
fs
sub
jns
mov
shll
test
outsb
mov
inc
xor
faddp
repz
orl
popa
loop
add
or
push
mov
movsl
mov
jecxz
mulb
inc
mov
xchg
xchg
imul
pop
sbb
mov
and
dec
and
or
push
jp
push
adc
mov
aam
lds
cltd
push
sbb
decb
pop
lock
in
jns
push
loopne
mov
std
mov
push
fmul
and
data16
mov
roll
jle
push
fsts
es
mov
cmp
dec
dec
mov
inc
stos
inc
and
dec
sub
and
mov
mov
mov
cwtl
and
ret
idivb
fildll
int
jmp
andl
arpl
xor
scas
outsb
adc
and
xchg
jmp
dec
inc
jb
js
xchg
xchg
jg
movsl
das
lea
fiaddl
cmp
mov
xchg
insl
aas
clc
das
mov
roll
outsl
dec
or
fwait
andb
pop
and
jl
xchg
icebp
xchg
mov
jnp
cmp
inc
sbb
or
rorb
pushl
mov
add
jb
incb
in
mov
mov
jl
in
xchg
test
sub
ret
out
sub
and
in
or
xor
andb
aas
ljmp
inc
imul
jecxz
pop
inc
sub
icebp
movsl
pop
cli
lods
sbb
push
push
aam
push
xor
sub
aad
loopne
aaa
and
mov
in
mov
mov
dec
outsb
sub
int3
mov
les
jo
test
jmp
adc
mov
decl
inc
push
sub
cwtl
lds
roll
call
icebp
xchg
incl
sbb
scas
mov
xor
mov
popa
dec
andb
xchg
test
int
hlt
adc
sub
rorl
cltd
iret
clc
cmp
nop/reserved
dec
push
idivb
inc
pop
inc
out
jno
cs
inc
dec
dec
out
push
push
adc
jbe
mov
or
rcrl
cmp
aas
xor
jo
test
cmp
mov
or
push
lret
inc
aaa
push
push
leave
jns
das
xor
ljmp
aad
popf
loopne
repnz
or
cwtl
or
push
push
pop
outsb
pusha
fstpt
shrl
enter
das
pop
jecxz
mov
cmp
xor
cli
jmp
xchg
mov
shlb
inc
add
das
pop
or
stos
aaa
adc
dec
mov
dec
in
movsl
incl
or
rorl
jl
mov
pop
push
mov
sbb
subb
mov
pop
sbb
cmp
jle
sbb
adc
xor
daa
das
rolb
outsl
jmp
mov
push
outsb
cmp
lds
or
lret
pop
aas
aad
sub
cwtl
into
les
and
jecxz
fs
movsl
inc
xor
mov
adc
adc
pop
xchg
inc
leave
mov
cwtl
jno
add
nop
push
pushf
ret
enter
push
add
fbstp
pop
shlb
inc
mov
push
in
or
dec
jg
xor
sbb
jl
mov
adcb
cmp
or
xchg
outsl
mov
repz
adc
leave
notb
inc
imulb
xchg
test
iret
dec
loopne
iret
push
bound
sub
or
mov
pop
es
push
inc
nop
mulb
in
mov
and
aaa
mov
clc
sub
push
dec
jg
sbb
cli
sbb
mov
in
fildll
and
insb
push
mov
aam
pop
call
adc
fcmove
push
cmc
pushf
xor
clc
mov
in
loopne
or
mov
push
sub
or
push
loop
dec
mov
mov
fistps
sub
jge
lcall
nop
xchg
push
cli
mov
test
sbb
xor
mov
nop
cs
mov
test
and
push
push
jg
aaa
adc
dec
and
mov
notl
hlt
dec
je
icebp
inc
dec
data16
and
mov
ja
loope
ret
bound
cli
cmpsl
sbbb
jp
mov
sbb
mov
xchg
fadds
out
mov
inc
cmp
xchg
mov
in
inc
leave
sbb
test
mov
inc
jo
iret
aad
mov
mov
pop
idivl
inc
inc
jae
add
inc
loopne
ret
inc
outsl
cli
jmp
popa
inc
pop
dec
pusha
adc
xor
sti
rolb
xchg
in
daa
stc
ljmp
jg
shl
pop
dec
cld
in
adc
push
aam
adc
test
outsb
decl
cld
repnz
testb
std
add
xchg
lret
adc
mov
outsl
xor
jl
cmp
cli
mov
mov
repnz
test
xor
repnz
sbb
lea
andl
cli
das
cld
or
aam
cwtl
pushf
add
inc
pop
test
hlt
es
jno
mov
mov
dec
cs
dec
dec
add
outsb
sub
mov
ds
pushf
or
mov
in
lds
cmp
ret
clc
or
hlt
scas
mov
dec
imull
push
call
dec
fdivs
shrl
pop
inc
stc
adc
adc
cmc
es
cmpsb
xor
jb
jo
adc
scas
cli
pushl
pop
or
jo
pop
sbb
repz
inc
repz
mov
push
push
loope
mov
jl
mov
mov
jecxz
cmp
mov
mov
ret
insb
xchg
mov
cmp
inc
mov
pop
inc
mov
dec
sbb
push
lock
mov
sbb
lock
sub
data16
stos
sbb
movsl
mov
addr16
xor
sbb
or
int3
popf
dec
out
repnz
dec
mov
pop
cltd
cmp
mov
cmp
mov
or
add
lret
dec
xorb
ss
shll
mov
out
dec
bound
pop
or
movsl
inc
loopne
fistpl
inc
jge
sub
inc
mov
ss
adc
push
jle
jne
adc
xorb
clc
movsl
lods
pop
mov
mov
adc
jbe
shrb
imul
test
jne
push
mov
jmp
loope
sti
adc
fldt
dec
ret
inc
mov
mov
aas
js
bound
rol
out
scas
movl
dec
lcall
pop
jp
cld
mov
xchg
push
lcall
aam
jmp
dec
arpl
lock
push
call
lahf
pop
loope
ja
xchg
xor
out
add
or
xorb
adc
sbb
mov
mov
sub
xchg
fs
dec
leave
addr16
xchg
dec
sub
sub
xchg
dec
arpl
mov
pop
mov
adc
adc
sti
and
pop
pop
ret
ss
add
decl
inc
stc
adc
imul
mov
std
xchg
mov
and
and
xchg
cmpsl
or
push
loop
mov
pop
jp
adc
adc
sbb
mov
aas
cmpsl
decb
xor
orb
hlt
in
push
mov
clc
push
mov
dec
mov
xchg
or
mov
and
fsubrl
fadd
mov
loopne
test
mov
mov
pop
scas
aaa
jo
fwait
loopne
andb
or
adc
movsl
sti
test
cltd
jbe
and
test
or
jae
pop
mov
fcomip
icebp
adc
std
or
adc
lods
clc
sbb
ss
cmp
pushf
mov
push
mov
jnp
clc
outsb
dec
orb
shl
pop
and
in
lahf
lahf
inc
xchg
dec
or
int3
xlat
xchg
iret
cli
push
mov
mov
call
testb
jae
cmp
gs
dec
shr
rcrb
adc
dec
call
andb
xrelease
push
cmpb
or
cmp
icebp
movsl
loopne
in
inc
test
dec
and
adc
push
inc
cld
sbb
mov
hlt
fldenv
jg
cmc
push
or
mov
out
push
add
fs
jbe
add
cmpsl
jb
popf
test
sub
sub
cli
add
in
xchg
sbb
jmp
data16
jo
out
leave
loopne
testl
mov
jg
mov
adc
inc
pushf
pusha
into
dec
lret
dec
lahf
lea
mov
leave
xorl
das
mov
push
mov
cmpsl
mov
fisttpl
inc
out
push
mov
js
xor
add
mov
jg
jg
js
lods
rcrl
rcr
add
clc
orb
dec
mov
jo
imul
mov
cs
adc
mov
in
adc
cmp
icebp
stos
jns
into
xor
and
mov
pop
sahf
pop
movb
rclb
xchg
mov
lds
cmc
mov
mov
das
xor
jg
gs
mov
out
xchg
rep
xchg
das
fcomip
pusha
mov
mov
lret
or
adc
pop
stos
push
mov
scas
outsb
dec
sbb
into
jnp
sbb
cmp
cmpsb
mov
xchg
jnp
ja
push
aas
rcrb
push
push
ss
cld
jo
pop
jb
clc
mov
repnz
es
sub
pop
lahf
scas
mov
das
inc
and
movsb
repnz
popf
imul
xchg
jmp
sbb
jae
fsubrs
lock
movsl
dec
pop
mov
aaa
mov
lahf
ja
adc
push
psrlw
cmp
fidivs
ret
mov
js
dec
in
cmp
mov
push
inc
mov
sti
xchg
cmp
inc
dec
sub
jbe
ja
jbe
nop
stc
mov
xchg
sbb
inc
or
push
sub
adc
mov
test
sbb
sti
sub
mov
sbb
push
add
test
push
inc
mov
enter
rcl
xor
adc
in
fsts
or
ljmp
loopne
pop
cmp
jle
sub
pop
jl
or
cmp
add
or
mov
cmpsb
push
push
xor
cmpsb
test
aas
add
jge
out
shlb
add
mov
or
jmp
das
aam
mov
lods
add
aad
arpl
and
add
mov
popa
sbb
loopne
inc
jmp
sbb
xchg
insl
add
inc
fucomp
ret
cs
outsb
and
mov
out
mov
ds
aaa
rcl
clc
mov
popa
dec
lea
insl
mov
mov
outsl
jecxz
mov
testb
mov
push
aas
cmp
mov
std
and
jae
popa
or
lcall
adc
jno
adc
or
es
or
shr
fwait
adc
jp
jo
add
jg
idivb
mov
add
shrl
outsl
call
add
pop
push
and
popa
out
adc
add
jle
movsb
pushf
lret
int3
ret
jp
inc
inc
lea
shlb
ds
inc
cmc
test
jle
and
lods
xchg
jb
push
popf
cli
test
push
cmc
mov
mov
ljmp
sarl
mov
rcr
adc
push
mov
push
jecxz
or
xlat
iret
gs
or
aaa
aam
adc
pusha
lret
lret
mov
lahf
jl
or
outsb
imul
inc
jle
mov
in
imul
push
dec
fcmovnu
add
cmp
daa
push
push
push
sbbl
in
out
aas
push
push
and
adc
inc
sbb
and
push
test
mov
pop
icebp
push
lahf
sbbl
popa
setbe
mov
cs
xor
dec
ror
fisttps
es
mov
jle
cwtl
fs
lret
inc
test
or
mov
mov
mov
sbb
dec
pop
shrb
adc
int
stc
cmc
push
fcmovnbe
dec
sbb
pop
mov
int3
int3
mov
sub
add
pop
and
mov
repnz
jns
and
sub
mov
pop
mov
jb
and
ljmp
mov
jl
jae
xchg
mov
fcoml
rorl
fsubl
xchg
ja
rcll
std
clc
test
sbb
stos
mov
loopne
sub
andb
stc
add
adc
sub
sbb
pop
mul
and
dec
scas
mov
insb
out
movsl
fnsave
cmp
dec
loopne
dec
dec
repz
mov
mov
ret
lea
push
mov
ss
in
push
adc
test
cli
repnz
add
inc
sub
cwtl
push
jg
mov
sub
or
roll
xor
mov
push
push
dec
mov
inc
push
lcall
shrb
inc
test
mov
add
push
add
ret
and
lock
shr
ds
mov
pop
movsb
pop
clc
rcrl
push
sub
xor
mov
jge
fistl
loopne
inc
inc
rcll
das
mov
fnclex
lret
cpuid
dec
iret
ret
out
pop
fcmovnb
std
mov
fiaddl
in
adc
inc
add
shrl
push
icebp
aaa
mov
mov
outsb
sbb
cmp
sub
jle
push
mov
outsb
das
mulb
pop
adc
sub
lds
fisubrl
in
std
cltd
xchg
push
sub
or
or
movsl
sub
rorl
inc
les
es
je
shl
je
out
std
mov
std
out
ja
cmp
inc
cmp
jb
repnz
cmpsb
lds
pop
addl
mov
mov
movsl
push
fwait
mov
jns
push
mov
mov
jmp
pop
adc
inc
pushl
mov
push
mov
or
cmpsl
or
test
push
mov
and
gs
roll
test
jo,pn
push
mov
add
jno
xchg
int3
loop
mov
pop
mov
dec
push
orb
ja
sbbl
sub
inc
les
mov
mov
js
lea
jne
push
arpl
rorb
test
xchg
sub
sub
call
dec
mov
sbb
outsb
lds
cmc
fwait
adc
cli
scas
bound
test
or
not
ja
sub
lods
or
sub
mov
mov
cs
sub
and
push
jo
test
mov
sub
adc
mov
loop
into
hlt
lods
sub
push
rcll
mov
mov
add
lea
nop
add
add
test
push
mov
fldt
jnp
movsl
cmpsl
cltd
xchg
cmpsl
sarb
xor
mov
cmp
gs
lahf
js
mov
add
adc
and
add
notl
jmp
js
mov
fwait
sbb
add
cmp
jno
fwait
adc
mov
dec
repz
inc
bound
add
pop
ja
push
clc
mov
sub
pop
pop
imul
mov
repnz
xor
jno
pop
cwtl
cmp
roll
jg
int3
outsl
dec
pop
dec
bound
pop
lods
out
push
mov
xchg
mov
cmp
pop
loop
xchg
mov
sub
pop
test
mov
stc
mov
cmp
into
xchg
mov
pop
push
lret
ds
leave
jbe
mov
das
adc
mov
sbb
cmp
mov
subl
cli
in
lods
aad
push
mov
push
adc
or
sbb
sub
adc
insl
in
mov
lds
jmp
push
scas
stc
cltd
dec
mov
fwait
cmc
xchg
loopne
push
mov
das
outsl
sub
xchg
incl
stos
jne
ret
inc
in
xchg
cld
push
xchg
jb
mov
add
inc
jae
clc
rcrl
int
xchg
out
popa
mov
aas
orb
pop
iret
popa
std
dec
ret
outsb
int3
inc
jb
sbbl
jnp
xorb
outsb
out
cmp
push
and
std
negb
mov
aad
pop
call
stos
xor
mov
pop
push
lcall
cmpsb
inc
mov
or
sbb
fsubrs
jge
dec
mov
mov
add
es
js
push
adc
lret
mov
sbb
push
sahf
or
xor
cli
decl
roll
push
xor
push
or
ror
outsb
xchg
or
jmp
into
inc
ss
int3
sahf
pusha
mov
xor
cmp
mov
leave
popa
bound
pop
jno
xchg
push
or
sbb
pop
and
jmp
jg
dec
jmp
push
repz
mov
jle
fwait
mov
cmpsb
sub
xor
popa
jmp
in
mov
je
jge
mov
xlat
int3
repnz
lahf
mov
rorl
fldl
scas
push
and
lcall
outsb
jmp
mov
pop
mov
out
or
das
cld
add
adc
pop
xlat
inc
inc
sub
mov
les
sub
aaa
incb
inc
data16
push
dec
je
ret
and
push
cmp
jb
xchg
sbb
cmpsl
push
scas
mov
jbe
insl
out
fsubrs
ljmp
inc
xor
push
call
jge
fldpi
mov
inc
sbb
je
cwtl
rcll
mov
add
cs
mov
cli
and
pop
ret
stos
js
xorb
fdivp
push
movsl
outsb
pop
push
dec
inc
mov
inc
or
loopne
jmp
jp
mov
inc
sub
or
cmovp
pushf
test
adc
fcomi
sbb
mov
stos
dec
jnp
inc
and
icebp
xchg
das
fdivl
and
pop
insl
js
cld
and
aas
iret
test
mov
and
jmp
rorb
mov
push
cmp
sbb
fwait
mov
ror
outsl
adc
andb
mov
mov
out
rol
mov
fwait
cld
xchg
cli
in
lcall
mov
sti
and
dec
dec
jbe
insl
je
jne
or
jmp
sahf
loopne
adc
sub
mov
lock
xchg
daa
mov
ljmp
xor
les
jge
add
mov
jg
cmpsb
ja
leave
gs
push
cmc
aad
fcmovbe
test
mov
sbb
or
add
sahf
sbb
fsubrs
in
mov
js
mov
mov
outsl
dec
sahf
pusha
push
incl
aas
insb
stc
lods
std
add
sahf
in
dec
jg
push
hlt
pop
mov
je
nop
outsl
ja
cld
pop
clc
nop
ret
mov
imul
and
dec
je
lods
sarb
pop
rolb
cs
daa
cmp
shr
xlat
fwait
sub
mov
pop
pop
cltd
push
das
cmp
ret
imul
push
sub
movnti
stos
inc
mov
sbb
adc
loopne
test
push
mov
insb
aad
aad
dec
pop
out
cmp
loopw
or
nop
jge
shll
insl
syscall
mov
in
cli
icebp
mov
xchg
daa
or
ficompl
jo
and
adcb
add
cmp
inc
aam
inc
and
inc
mov
adc
rolb
sub
out
xor
es
add
pop
xchg
unpcklps
test
lock
sbb
pop
cmpsl
mov
cli
push
fidivrs
adc
pop
xor
int3
sarl
out
and
and
xor
popf
dec
mov
loop
sbb
std
movb
data16
test
das
mov
cmp
rclb
lret
push
cmp
push
dec
popf
test
repnz
sbb
hlt
aaa
cli
or
sub
xchg
jge
push
ss
jmp
arpl
sbb
fadds
add
push
mov
push
cmpsb
pop
popf
arpl
cmp
push
repnz
push
clc
lock
and
mov
and
dec
xchg
popa
lods
test
pop
add
mov
jno
dec
cmc
push
aad
jnp
mov
push
out
xchg
inc
jge
loop
dec
cmp
call
bound
mov
adc
mov
adc
and
nop
pop
cmc
mov
sub
pop
jge
pop
fisubrl
push
gs
adc
dec
loopne
inc
lods
into
xlat
cmp
hlt
dec
mov
sahf
push
nop
test
notl
sti
in
dec
daa
dec
mov
push
ret
xchg
dec
sub
push
aad
outsl
mov
fnstcw
test
adc
outsl
scas
es
je
les
or
cmp
dec
outsb
mov
test
inc
adc
aaa
out
inc
sub
mov
imul
js
pop
push
mov
lock
in
sbb
sbb
pop
cmp
inc
push
and
cs
fdivl
sbb
in
cwtl
sti
xor
and
cmc
push
mov
sarb
xor
add
mov
popa
mov
xchg
fcmovnbe
in
push
roll
fidivs
mov
movsl
test
adc
push
mul
test
xchg
xor
push
stc
mov
jecxz
std
adc
mov
push
and
aad
or
pusha
stc
mov
add
dec
sti
sub
imul
in
repz
jb
loope
pop
scas
or
inc
aaa
inc
into
cld
aad
fs
js
loop
jge
jno
jg
jl
xor
dec
and
pop
dec
lods
je
ret
addb
jns
and
loop
int3
jge
inc
push
lahf
mov
fldt
fidivrl
insl
mov
leave
sahf
jg
cld
mov
jg
jmp
cmp
sub
cld
in
pop
inc
mov
pushf
inc
adc
arpl
shrb
sub
add
das
iret
fwait
jmp
or
lret
cmp
leave
loopne
mov
loop
jecxz
call
mov
cmc
stc
adc
stos
pop
adc
xor
lods
mov
ljmp
iret
mov
add
shr
fucompp
inc
push
push
push
or
mov
mov
int
cmp
and
or
or
jnp
mov
repnz
mov
push
lock
push
or
push
adc
cmc
sbb
xor
ret
out
lods
fldt
sub
xchg
mov
pop
addr16
xor
sahf
loope
sti
pop
dec
aas
icebp
popf
jne
fcoms
inc
jp
xchg
mov
aas
or
push
fdivrs
xchg
adc
fisubrs
xchg
sub
xchg
pop
inc
push
jecxz
push
mov
pop
or
adcl
les
adc
int3
mov
imul
test
daa
sub
sbb
push
cmp
fildll
dec
sub
in
push
lods
and
pop
jmp
mov
sbb
jg
dec
insb
dec
std
hlt
push
mov
xor
js
xchg
adc
mov
maxps
xchg
out
fwait
dec
mov
andl
sahf
fcomps
in
dec
fbstp
push
sbb
add
sahf
xchg
pop
es
incb
pop
out
in
mov
dec
mov
mov
cmc
pop
mov
pushf
mov
clc
repnz
pop
or
adc
cld
test
push
jecxz
pop
sub
push
nop
mov
aad
and
lea
jo
adc
xchg
loope
clc
fcomi
sbb
dec
mov
xchg
je
mov
or
xlat
push
inc
cld
mov
jb
push
xchg
add
mov
bound
ss
loopne
add
xchg
pop
aas
faddl
pop
test
test
adcb
add
or
sar
jmp
inc
fldt
sahf
inc
je
out
sbb
dec
pop
pop
adc
sbb
pop
loopne
sbb
movb
in
mov
and
inc
mov
lea
aad
in
add
push
cmc
pop
inc
shl
cmp
fcmove
fistps
jmp
xchg
push
in
mov
xor
in
mov
mov
sub
add
cli
outsl
insb
aaa
jb
add
cmp
leave
in
cmovo
cmp
les
pop
add
dec
aam
js
dec
lds
repz
es
mov
push
or
push
mov
pop
jp
fisttpll
xchg
fiadds
sbbb
cmp
mov
xchg
shll
inc
outsl
adc
imul
or
pop
inc
sub
add
shlb
mov
and
or
mov
dec
pusha
mov
lea
aas
cli
lods
ficoml
mov
pushl
push
xchg
pop
js
pop
push
jae
add
lock
aam
mov
push
out
stos
fistpll
mov
inc
fcomps
jne
mov
fcoms
arpl
and
nop
jg
fisttpll
adc
sub
mov
into
push
test
add
mov
fstpt
pusha
repnz
pop
inc
into
dec
fwait
sub
inc
xchg
xchg
outsb
std
sub
push
mov
pushl
ljmp
enter
orb
push
lods
les
ret
in
dec
pop
clc
sbb
mov
sub
pusha
adc
repz
rcl
and
sbb
and
std
add
dec
je
stos
adc
lea
lret
cwtl
dec
push
in
stos
xchg
sub
jns
push
mov
mov
ljmp
bound
in
fcoms
inc
cmpb
cmpsl
jns
aaa
or
dec
add
inc
mov
ficoms
test
mov
fs
xor
aam
hlt
mov
mov
cmpl
pop
lcall
leave
pop
pop
adc
jne
cwtl
fstl
dec
scas
in
adc
arpl
mov
in
fisubl
push
add
adc
std
fbstp
add
xchg
push
mov
adc
stc
mov
inc
xor
aas
sbb
shl
aad
push
jns
cs
fists
insb
mov
pop
inc
jo
dec
pop
mov
mov
dec
xlat
jo
mov
mov
es
mov
push
or
jae
call
cs
popa
rorl
push
cmc
hlt
inc
mov
pop
cmp
roll
lret
out
add
cwtl
jmp
and
sbb
stos
sbb
and
jmp
loopne
lcall
jecxz
lock
dec
adcl
add
jecxz
sub
push
es
stos
or
cmp
sbb
adc
push
pop
out
sbb
adc
mov
pop
les
pop
sar
add
stc
push
hlt
sub
mov
mov
int3
mov
push
popl
dec
std
jg
popw
shrl
gs
cmp
in
inc
iret
daa
ret
mov
lock
je
push
repz
out
adc
ret
les
outsl
or
dec
or
sub
cmc
adc
test
clc
mov
mov
sbb
in
pminub
dec
sub
loopne
xlat
pandn
jle
mov
enter
cmp
dec
cwtl
in
in
xchg
adc
das
jl
mov
and
orb
cmp
mov
scas
lock
push
cs
incl
ret
push
in
shr
ret
inc
jecxz
xor
call
outsb
and
or
dec
push
mov
dec
clc
add
adc
incb
les
push
xlat
push
push
jmp
loop
push
loope
mov
clc
jg
mov
pop
call
mov
pop
lods
ljmp
mov
shrl
lahf
push
mov
mov
push
mov
repz
aaa
outsb
frstor
and
add
inc
decl
popa
push
or
mov
add
xor
cmc
cs
add
iret
xor
ljmp
push
dec
push
adc
ror
sbb
pushf
pusha
mov
pushl
pop
pop
insl
addr16
in
into
add
add
jne
jne
sbb
nop
xor
dec
add
sub
or
sahf
cs
mov
cmp
loop
adc
xchg
ja
push
fwait
hlt
jmp
sbb
test
inc
pushf
fisttps
loopne
adc
adc
sbb
dec
jle
ljmp
or
stos
cmp
test
daa
xchg
mov
dec
gs
lock
xchg
int3
jnp
aad
lcall
loopne
loop
into
pop
adc
call
push
mov
lcall
mov
mov
stc
push
xchg
mov
inc
mov
ror
and
outsl
push
sbb
lret
xchg
xchg
pop
pop
xlat
cmpsb
mov
inc
mov
movsl
adc
and
lock
daa
adc
dec
insl
jmp
jbe
pop
dec
jne
mov
bswap
add
js
clc
push
aas
popf
int3
dec
mov
faddl
fists
mov
push
arpl
mov
jle
xchg
outsl
outsl
adc
mov
mov
into
push
cmpsb
dec
outsl
jg
into
test
sub
stc
sbb
movsl
test
jno
bound
or
push
inc
shrb
sbb
mov
mov
cs
mov
stos
xchg
mov
mov
outsb
pop
loopne
sub
das
jg
xlat
jecxz
rcr
sub
mov
sbb
fsubs
leave
aad
pop
add
sbb
xor
mov
aad
stc
notb
or
add
jge
mov
mov
cmc
arpl
mov
inc
jp
iret
sbb
mov
xchg
cs
sbb
lock
sub
cltd
xlat
sbb
xchg
fwait
les
jmp
xor
or
out
xchg
or
and
push
ja
sub
dec
stos
arpl
dec
adc
mov
cli
mov
das
add
mov
fists
inc
cltd
add
mov
mov
sti
movsl
inc
movb
xor
push
adc
mov
add
hlt
sub
insb
inc
mov
out
sahf
and
leave
rcrl
pop
jge
xchg
jmp
cs
jbe
dec
dec
cmovs
shll
and
cmp
adc
sahf
das
insl
sbb
lcall
or
xrelease
leave
sar
push
adc
jno
mov
sub
cld
mov
roll
adc
xchg
push
clc
pushl
enter
es
enter
loop
cs
ret
subl
and
data16
adc
push
push
push
adc
fisttps
dec
mov
pop
les
inc
adc
inc
aas
fs
push
jg
sar
push
mov
dec
push
push
push
cwtl
imul
add
push
push
push
sbb
and
loop
push
jno
dec
push
daa
dec
sbb
push
xor
jle
std
aaa
adc
dec
neg
inc
add
sbb
inc
mov
repz
dec
sti
fmuls
lock
adc
mov
sub
gs
xor
push
hlt
fisubrl
fimull
inc
filds
call
jg
adc
push
insb
mov
not
sbb
cmp
jo
sub
lcall
push
mov
std
jbe
js
cmpsl
ja
shrb
lock
mov
in
adcb
inc
adc
dec
subb
inc
add
push
push
insl
test
xor
inc
cli
aaa
mov
outsl
push
call
xchg
lock
incl
sbb
in
int
je
push
push
xor
inc
lock
outsb
cmp
aaa
aas
inc
push
xor
push
jae
ss
cld
test
push
dec
push
aas
flds
jns
arpl
push
neg
add
dec
pushl
adc
add
neg
pop
sbb
adc
xlat
sub
not
add
xchg
sbb
in
mov
popa
jle
sub
add
mov
cmp
fcomps
clc
push
cltd
inc
aaa
push
or
cmp
outsl
subl
inc
mov
and
dec
js
movsb
mov
inc
push
and
sbb
call
fcoms
sub
dec
ljmp
mov
or
sbb
sub
jnp
sbb
insb
dec
out
dec
ja
inc
clc
and
pop
xchg
bound
inc
or
cmp
dec
insl
je
push
pop
je
dec
inc
cmpsb
xor
jbe
call
push
inc
sub
or
mov
inc
mov
mov
cmp
or
mov
popf
aam
xor
addr16
js
cmc
push
imul
imul
decb
cli
neg
add
not
mov
ja
xor
daa
negl
movsl
ret
test
add
add
mov
cmpl
xor
js
cmp
loopne
mov
jae
push
pushf
add
xchg
mov
fwait
push
jnp
mov
dec
inc
out
outsb
bound
popa
xor
push
dec
ljmp
ret
enter
loop
push
push
imull
inc
pop
insl
jg
push
dec
jae
dec
xchg
sbb
push
ficoms
fmuls
int
fsubrs
xor
out
push
ja
dec
jnp
push
jbe
std
dec
ds
pop
mov
push
xorl
adc
stc
push
popa
add
outsl
fbld
mov
push
xchg
inc
dec
jns
inc
and
aam
aas
ret
push
dec
add
cmp
clc
orl
std
rcr
push
les
and
enter
push
imul
xor
and
mov
pop
cs
dec
inc
sbb
add
sbb
inc
outsb
clc
xchg
ffreep
dec
add
sbb
push
dec
jnp
repz
xlat
sbb
push
cmp
shll
fildll
insl
jnp
push
insl
inc
inc
mov
arpl
add
push
test
jne
mov
shrb
fcoml
jb
push
imul
mov
ss
add
lea
dec
addr16
inc
jge
shl
xchg
jp
lcall
xor
lock
xchg
jge
fwait
mov
rcl
fsts
loope
sub
outsb
mov
sub
divl
push
jle
push
jnp
out
mov
push
data16
inc
xchg
jecxz
xorl
xor
or
jo
pop
pop
jbe
xor
lahf
jns
dec
in
jno
jb
inc
lock
dec
jecxz
shl
flds
adcl
and
fbld
push
dec
jg
rorb
fisttpll
dec
fidivs
int3
outsl
mov
sbbl
insb
jns
sbb
fs
or
insl
push
ss
mov
push
adc
mov
xor
add
cltd
outsb
xor
ror
mov
imul
cmpb
loopne
dec
inc
add
inc
aam
movsl
fidivrs
js
or
jno
lock
push
test
cwtl
mov
xchg
sub
in
dec
test
lock
and
and
incb
addr16
lcall
push
out
loopne
add
xchg
xor
mov
adc
inc
into
xor
mov
ficoml
scas
dec
sbb
inc
add
and
aam
iret
jbe
mov
push
orb
icebp
aaa
dec
dec
push
data16
testb
dec
sub
jno
push
mov
adc
insl
mov
pop
stc
enter
xchg
mov
daa
dec
call
in
sbb
push
cld
imul
ljmp
imul
push
push
push
xchg
clc
jge
adc
and
jb
add
or
loope
dec
shrb
push
dec
push
cmp
scas
cmp
jno
sub
jns
insb
ss
inc
jb
jno
gs
rcrl
imul
sbb
imul
sbb
fildl
rcl
push
inc
add
pop
adc
jle
cmp
test
repnz
lcall
push
push
xor
je
lret
jp
mov
xor
mov
scas
sbb
lds
dec
jb
in
insl
loopne
dec
push
cmp
in
fdivrl
or
mov
outsb
jle
cld
pop
inc
stos
push
ret
push
fwait
mov
xor
gs
fs
das
dec
push
dec
test
xchg
or
push
ja
pushf
jno
cmp
loopne
cmp
push
inc
lock
loope
and
mov
inc
ja
inc
inc
aaa
repnz
adc
fcmovbe
inc
push
mulb
inc
addr16
sub
pop
or
jb
xor
add
inc
push
dec
jmp
jne
outsl
imul
mov
lret
ficoml
jbe
clc
push
pop
ss
cmp
cmp
lods
and
or
rolb
pop
push
jne
js
push
jae
pop
jne
iret
imul
xor
repz
adc
andl
and
and
push
sub
hlt
xchg
test
bound
outsl
push
je
push
xor
push
mov
cmp
pop
outsl
adc
push
inc
push
inc
std
xchg
icebp
js
shrl
push
ds
stc
loopne
mov
sbb
je
push
and
jbe
imul
sahf
inc
push
mov
movsb
add
inc
push
js
sub
mov
test
or
push
jns
fistps
cwtl
sbb
imul
fwait
jnp
sti
adc
dec
mov
imul
cld
dec
adc
jbe
push
shrb
xor
sub
adc
inc
pop
lret
lea
adc
mov
mov
and
xor
jmp
inc
dec
loopne
imul
outsl
inc
push
pop
push
js
lret
xchg
lds
ja
mov
cwtl
repz
outsl
dec
xchg
inc
loopne
and
dec
add
dec
jne
mov
jl
xor
inc
divl
insb
dec
fs
andb
mov
fxch
mov
sbb
scas
jbe
leave
outsb
movsl
adcl
arpl
cmp
xchg
inc
dec
mov
mov
inc
dec
add
xchg
jle
dec
push
fisubl
fiaddl
xor
push
movsb
pop
add
add
repz
or
bound
xchg
cmpsl
outsb
pop
sbb
add
xchg
or
pop
dec
andl
jo
arpl
rcll
outsb
push
mov
xchg
clc
pop
aad
aaa
push
insl
addr16
push
shrl
dec
daa
jg
push
mov
mov
inc
push
dec
cs
push
ja
mov
pop
inc
pop
outsb
xor
dec
repnz
inc
out
mov
daa
into
ret
gs
iret
gs
pop
pop
daa
and
push
addr16
roll
pop
out
xchg
jl
and
sub
adc
mov
cs
xchg
xchg
imul
inc
xor
and
loopne
fsts
out
cmp
cltd
add
clc
xchg
test
xchg
loopne
push
dec
outsb
cmc
js
push
adc
xlat
ret
dec
repnz
popa
inc
push
push
and
loopne
js
inc
push
pop
je
jae
aaa
pusha
loope
jl
cmc
rcll
mov
push
pop
pop
inc
aaa
mov
dec
pushf
add
push
jmp
aaa
xor
add
les
in
popl
mov
push
pop
addr16
repnz
inc
aaa
push
ja
out
in
push
mov
fs
fsub
jns
inc
or
push
mov
mov
dec
inc
loopne
arpl
loopne
js
mov
imul
pop
shrb
stc
xor
jno
pop
push
jnp
js
or
insb
push
pinsrw
cmp
or
push
jne
push
insb
jbe
pop
mov
aaa
fs
in
lds
mov
cld
jbe
mov
xor
push
lret
jecxz
or
popa
mov
adc
aas
popa
enter
outsl
pop
fstp
aad
enter
add
sbb
inc
adc
push
outsl
sysenter
sub
push
mov
xor
jne
ret
lock
and
addr16
pop
push
lea
je
dec
lods
cmp
or
leave
xchg
adc
push
pop
add
js
pop
jb
outsb
sbb
int
dec
sub
pop
sbb
xor
jnp
insb
sbb
mov
gs
xchg
jno
inc
inc
mov
gs
xor
imul
ret
leave
imul
add
stc
xchg
lods
add
and
sbb
out
inc
sub
inc
add
adc
push
pop
repz
sbb
push
mov
loope
sub
pop
movsb
lock
xchg
addb
data16
and
jne
shlb
cmpsb
mov
out
jl
pop
xchg
mov
jns
add
jne
inc
sbb
outsl
inc
push
inc
or
sub
jns
push
aaa
push
xchg
in
and
in
jae
cmp
jnp
pusha
sub
and
push
outsl
sbb
dec
andb
xor
sub
xchg
pop
fmuls
mov
movl
mov
sub
dec
sbb
add
inc
cmp
xor
pop
aaa
dec
pop
adc
fcmovu
jge
adc
sbb
ljmp
int
adc
les
in
mov
mov
fwait
movsb
pop
cmp
push
inc
cmp
aam
fdivr
push
inc
int3
pop
mov
das
push
cli
add
jae
mov
xchg
cmp
shlb
mov
flds
push
mov
push
arpl
fisubs
mov
fcmovb
outsb
leave
ret
pusha
sbb
orb
push
adc
xor
shlb
mov
ret
mov
fisttpl
js
cmp
fldt
roll
dec
inc
sub
dec
arpl
mov
ret
in
dec
mov
int
popa
scas
add
sub
ret
movsb
aaa
gs
inc
jo
jae
test
stc
jno
fnsave
dec
ficomps
int3
jo
xchg
push
add
add
sbb
out
add
add
or
push
xor
xor
rclb
dec
sub
and
cmp
dec
inc
fs
nop
sub
and
mov
push
sbbl
add
ds
scas
jl
or
pop
or
or
mov
pushl
inc
mov
sbb
int3
cmpsl
sub
cs
arpl
daa
sbb
inc
dec
dec
pusha
rorl
shll
cld
mov
pop
std
popf
sbb
inc
cmp
outsb
push
ret
sbb
push
sub
mov
icebp
mov
imul
xorb
int3
pusha
cmp
outsb
bound
xchg
mov
jbe
mov
aas
sbb
mov
movsb
dec
adc
mov
popa
sti
mov
push
inc
push
lret
add
insb
pop
push
mov
and
lock
add
sub
adc
jmp
stos
test
cltd
pop
testl
dec
jb
cmpsl
das
jns
lock
orl
shlb
bound
inc
push
js
add
inc
push
jl
sahf
or
xorl
insb
dec
xor
in
dec
outsl
loopne
cvtpi2ps
leave
into
sub
or
repnz
loopne
lds
dec
ss
sbb
or
jg
push
int3
jb
imul
xchg
in
cmc
insl
test
add
or
add
jno
je
outsb
jge
add
test
fistpl
push
fs
pop
jl
les
xchg
sbb
jmp
js
jecxz
add
mov
fsubrs
shrb
push
jae
dec
jo
push
orl
cmp
cmpsl
outsb
pushf
in
mov
add
push
dec
pop
fcomps
lret
cmc
insb
movsl
js
push
andb
push
xorl
das
xor
push
pushf
dec
mov
fisubrl
stos
dec
dec
add
test
pop
rcrl
cmp
mov
jo
divl
nop
xlat
mov
pop
test
dec
in
push
addr16
ja
jbe
mov
xor
sbb
and
loopne
pusha
lret
jbe
dec
cmp
xchg
fiadds
adc
dec
jno
push
sub
shl
add
push
out
test
testb
inc
mov
add
inc
stos
and
inc
push
inc
pusha
and
mov
gs
dec
push
ja
int
sbb
int
xchg
shll
rclb
fisubrs
nop
mov
mov
mov
and
inc
aaa
jo
imul
jae
dec
arpl
pop
sub
pusha
adcl
pusha
daa
cmp
inc
insb
xor
loopne
cmp
push
dec
jb
fisubrs
jg
iret
mov
dec
sbb
loop
js
inc
mov
pop
fsubl
cld
sub
or
mov
orb
in
adc
lcall
adcl
out
add
ljmp
push
ljmp
bound
fsubrs
shl
das
stos
mov
mov
std
call
rolb
xor
or
cld
add
cld
inc
mov
sub
mov
call
ficoml
icebp
cli
inc
mov
inc
repz
loopne
jg
or
cwtl
add
mov
and
dec
dec
jl
xchg
addl
sahf
add
clc
negb
dec
in
mov
cmp
add
jecxz
push
popa
andb
test
and
mov
jge
mov
test
push
adc
or
mov
jb
push
in
fbld
dec
out
adc
scas
xchg
dec
arpl
and
lds
mov
decl
adc
push
inc
mov
idivb
mov
ja
pop
xor
cmp
test
cld
jo
aaa
mov
les
pop
mov
adc
push
loop
push
in
sti
inc
or
dec
pop
notb
xchg
clc
mov
lods
outsl
add
add
mov
mov
add
sub
mov
sub
fimuls
mov
adc
cmp
pop
xor
xor
popa
es
xor
lds
mov
lret
cmp
sub
xchg
mov
aaa
jne
jge
pushl
icebp
aaa
add
test
or
inc
outsl
decb
aas
mov
push
pop
push
mov
in
into
jmp
insl
inc
lock
cs
dec
xchg
loopne
mov
dec
xchg
stc
push
xor
mov
adc
cmpl
or
popa
add
and
mov
adc
xchg
mov
mov
add
adc
push
xchg
cmp
cmp
cmp
mov
icebp
lock
push
dec
lea
mov
jg
ja
loope
andl
push
test
mov
lds
jns
or
ficompl
loope
sub
inc
sub
adc
sub
jg
or
jo
jb
mov
mov
xor
test
insb
sub
lods
add
ljmp
out
ficomps
dec
mov
or
pmullw
mov
jb
dec
pop
jns
ljmp
mov
inc
pop
push
fsts
jno
add
sar
or
cmp
adc
pop
add
clc
sbb
add
push
sub
mov
fwait
xchg
in
jmp
dec
insb
inc
ja
cmp
fdivrs
inc
and
nop
clc
lock
sahf
xchg
cld
xchg
mov
xchg
xchg
xchg
and
je
pop
test
add
push
mov
mov
and
dec
jno
pop
xor
enter
push
and
and
sarl
add
js
inc
xor
les
stc
out
mov
cmc
enter
add
outsb
testb
hlt
inc
shrb
adc
inc
test
or
ja
jg
cli
adc
inc
out
popf
shlb
mov
cmp
pop
mov
icebp
xchg
xor
adc
add
stos
jbe
test
add
fistpll
add
out
pop
inc
jae
mov
ja
pop
aaa
pusha
gs
mov
out
dec
cld
sbb
xchg
add
push
mov
push
stc
cmpsl
inc
fldcw
cmc
ret
lods
loop
int3
or
andb
or
bnd
mov
mov
icebp
cmp
dec
push
jmp
lock
pop
mov
xchg
or
enter
das
add
inc
mov
testl
arpl
insb
pop
mov
mov
out
sub
sbb
mov
sub
lock
xchg
cmpsb
lahf
ljmp
lret
and
mov
fistl
pop
in
movl
mov
jge
dec
pop
adc
cmp
addr16
xor
jecxz
das
pop
mov
stc
and
in
pop
les
movsl
sub
fsubr
dec
mov
sbb
jge
in
repnz
arpl
adc
xchg
mov
jg
mov
mov
add
outsl
sub
andl
mov
lahf
and
mov
jnp
fadd
dec
lds
adc
aaa
mov
adc
mov
das
cld
cmp
or
mov
idiv
mov
pusha
ljmp
rol
test
clc
xchg
jle
push
jp
push
mov
out
push
and
incb
pop
add
mov
jne
stc
test
test
aaa
mov
imul
adc
xchg
pop
and
mov
test
cld
pop
mov
adc
jo
insl
fidivrl
mov
cmp
stc
ljmp
enter
int3
jo
adcb
ljmp
jecxz
adc
movsl
cmp
mov
fildll
mov
pop
movsl
fwait
int3
sub
mov
leave
mov
pop
push
enter
out
faddl
sub
fstpt
push
xlat
sub
sub
aad
xchg
scas
and
iret
jbe
fidivl
and
outsb
ja
test
sbb
mov
sbb
test
scas
mov
in
add
cld
insl
pop
lcall
mov
sub
mov
mov
xchg
movsl
fcomip
push
inc
mov
stos
mov
fcmovnu
std
push
cli
and
push
or
loope
sbb
mov
or
dec
push
sti
filds
jb
xlat
mov
cmp
xchg
lcall
add
xor
mov
insb
push
outsb
cld
inc
icebp
call
cmp
and
sub
jl
mov
cmc
mov
pop
clc
mov
call
sub
and
push
sub
add
xor
cmp
test
and
int3
shll
mov
xchg
jae
and
push
xor
mov
push
push
nop
ffree
fists
jle
or
orb
movsl
adc
popa
xchg
sub
push
pop
add
ljmp
fcoms
jmp
mov
mov
xchg
movsl
jmp
in
push
rcll
adcb
fiaddl
lock
cwtl
sbb
cmpsb
push
xor
dec
cmpsb
out
int3
fistps
lea
sahf
sbb
push
xor
adc
mov
mov
roll
pop
in
clc
xchg
mov
sbb
xchg
xchg
out
insb
inc
pop
xor
lret
pop
add
or
dec
mov
jmp
and
push
xor
push
mov
daa
mov
subl
pushf
inc
sbbl
pop
mov
xchg
push
mov
pop
push
decl
paddw
jl
sbb
ja
sbb
xchg
push
sub
xchg
push
nop
add
test
push
addb
jo
xor
sub
pop
cmp
add
jg
test
roll
push
ds
xlat
pop
or
stos
aaa
dec
jne
xor
cld
inc
aam
and
shll
cs
inc
xor
add
pop
fsubrs
out
and
cmp
clc
outsl
je
pop
adc
mov
xchg
dec
sbb
mov
loopne
clc
mov
xchg
mov
push
popa
sarl
dec
mov
dec
insb
lahf
test
pop
out
add
pop
sbb
add
cwtl
xchg
fwait
mov
cli
lock
jbe
xor
test
loopne
mov
push
ljmp
jg
xor
or
xor
or
cld
data16
rolb
adc
mov
cmpb
jp
loop
xchg
popa
movsb
add
int3
add
jns
jp
out
inc
jmp
outsb
rorl
adc
mov
mov
scas
lret
xor
add
inc
mov
std
incl
cli
cmc
push
push
jge
cmp
nop
and
shrb
jb
inc
hlt
or
js
test
adc
dec
jns
add
xor
ret
lret
lcall
je
inc
or
shl
xchg
cmp
mov
jo
decl
push
addb
fs
jge
cmp
mov
jmp
inc
dec
sub
cmpsl
nop
aas
adc
clc
daa
jb
xchg
out
xchg
repnz
stos
mov
movsl
push
dec
mov
add
push
ja
or
das
icebp
cmc
xor
mov
jmp
subl
push
bound
jo
push
pusha
negb
sbb
std
outsl
lcall
push
inc
sub
or
cmp
data16
xchg
mov
lret
adc
mov
les
ret
mov
and
mov
mov
dec
aaa
faddl
inc
or
ljmp
pop
jb
adc
adc
int3
loope
lods
inc
sbb
in
insb
cmpsb
scas
sbb
iret
pop
inc
fdivrl
xor
sub
pop
js
xor
ds
bound
mov
mov
fstpl
movsb
mov
adc
std
push
std
jle
notb
cmp
mov
xchg
popa
lcall
lea
sub
in
xchg
cmpsb
add
jecxz
cli
and
adc
inc
push
arpl
inc
addr16
ror
cld
and
aas
dec
sub
int3
lcall
mov
iret
loopne
jp
mov
insl
stc
and
inc
inc
jmp
mov
cli
lds
and
sti
aam
push
jl
mov
jg
ljmp
ret
dec
int3
in
popf
call
pop
and
or
push
mov
mov
mov
xchg
or
dec
mov
aad
push
filds
daa
dec
and
mov
pop
jge
dec
into
dec
xorb
dec
pushl
test
sbb
sti
xor
mov
aam
mov
pop
call
jp
add
bound
in
jne
fbstp
sbb
enter
fwait
stos
lds
add
mov
lds
inc
add
pop
shlb
dec
ret
fcmovnbe
dec
push
dec
push
xchg
add
adc
loopne
jl
sub
and
sub
xorb
jno
adc
test
add
push
mov
cmp
sub
cmc
xchg
inc
add
jb
gs
jl
iret
mov
notl
adc
mov
dec
mov
xchg
popa
sahf
cmpb
xor
jl
and
es
les
add
jge
lcall
rcll
sbb
adc
mov
cwtl
mov
sbb
sbb
out
pop
scas
mov
jge
xchg
mov
mov
xor
push
dec
push
iret
dec
fidivrl
push
adc
mov
or
push
lock
add
or
inc
in
cmp
test
cwtl
loope
movsl
outsl
adc
dec
mov
mov
sbb
lods
outsl
sbb
dec
iret
push
pop
push
pop
std
jne
lret
decb
outsl
jno
jno
mov
pop
lds
cmp
bound
xor
xchg
and
cmp
js
mov
jns
ljmp
cmp
inc
jle
call
cltd
jns
pop
aam
dec
cmp
or
sub
ds
mov
aad
into
mov
and
fimull
or
xor
repnz
popa
popf
cld
and
shl
push
push
outsb
test
std
fbstp
aam
int3
pop
cmp
dec
cmp
std
mov
test
dec
adc
or
sub
test
aad
inc
jmp
or
ds
and
outsl
insl
movsl
xor
sbb
add
pop
jmp
jmp
repz
mov
sub
push
or
inc
and
cmovnp
pushf
cmp
xor
out
leave
notb
cli
adc
push
pop
fnstsw
ljmp
das
movsb
loop
test
jb
jmp
cmp
add
sub
fs
push
test
mov
sub
cmp
arpl
enter
gs
xor
jl
mov
jecxz
and
orl
imul
fucomi
and
clc
test
scas
das
icebp
fisttpl
shr
ja
mov
adc
ljmp
js
mov
and
jo
xchg
repz
mov
adc
mov
add
mov
xchg
lcall
add
jg
popa
lcall
mov
push
bound
pop
les
jno
pop
push
add
loop
inc
cld
xor
cld
fidivrl
or
dec
or
and
sub
mov
sub
or
xchg
fistpl
cmp
rclb
push
pop
sub
or
inc
and
loopne
xlat
fdivrl
sub
daa
outsl
jl
pop
imul
jo
sub
xchg
push
cli
test
and
and
mov
jbe
rorl
cmp
ja
dec
rcrl
out
add
cmp
outsl
ror
dec
test
aaa
mov
outsl
das
repz
mov
das
std
and
jg
mov
daa
data16
nop
stos
je
pop
ljmp
pavgb
out
or
inc
sub
je
push
test
xor
adc
pop
mov
sbb
mov
xor
dec
rorb
hlt
mov
dec
push
loop
cmpsb
fildll
jmp
lock
fbstp
adc
mov
lea
sbb
fdivl
aaa
es
rolb
pushl
xor
and
inc
andb
or
insl
cmp
sbb
cmpsb
int
xchg
sahf
gs
push
ficompl
loopne
cmc
dec
jle
gs
mov
mov
popf
and
ljmp
mov
lock
jns
sar
das
repnz
push
loope
movsl
pop
cmp
aad
jb
loop
loopne
mov
das
push
cmp
movsl
or
or
mov
push
mov
inc
fmul
clc
pushf
shll
mov
fisubl
test
pop
lods
cld
in
mov
xor
dec
lock
sti
pop
int
enter
push
out
movsb
or
pop
inc
es
rclb
and
orb
insl
fisubrs
jno
xchg
adc
fsubl
inc
sbb
xchg
psubw
mov
sbb
jnp
add
iret
insb
adc
dec
cltd
les
mov
xor
add
xchg
fcoms
stc
inc
test
xor
mov
pushf
inc
mov
pop
insb
into
sub
iret
mov
aad
clc
int
lret
dec
sub
xchg
test
insl
fisttps
jmp
pop
cli
cmp
sbb
mov
xchg
test
sar
or
xor
mov
mov
and
jge
or
cmp
int3
xor
push
mov
sub
popa
cli
sub
mov
pop
adc
mov
repnz
cmc
in
insb
xor
scas
jno
dec
mov
or
push
xchg
daa
fmull
sub
jle
cmp
jae
push
sar
add
xchg
adc
je
pushf
sti
ss
fists
andb
mov
loopne
aad
sbb
sub
test
testb
fcom
gs
xor
fcmovu
mov
pop
and
ja
mov
or
push
add
cli
or
or
js
daa
inc
dec
ret
sub
adc
pop
mov
cltd
icebp
imul
xchg
ss
sti
push
mov
push
aam
es
sarb
mov
nop
mov
push
cmp
jmp
add
dec
call
pop
inc
les
insl
jle
and
fdivrl
pushl
inc
mov
scas
fimull
pop
cmp
fsubrl
repz
xorb
jbe
ljmp
sbb
xlat
inc
push
add
insb
pusha
mov
jecxz
pop
push
fsubs
into
cmp
aas
imul
iret
push
inc
cmpsb
jb
jmp
in
xchg
push
je
push
lods
adcb
jp
gs
in
fisttps
pusha
addr16
push
adc
cmp
or
adc
dec
xchg
and
fisubrl
rolb
icebp
mov
mov
out
jge
ljmp
sub
aaa
movsl
cmp
imul
push
jo
jmp
inc
jne
test
mov
mov
sarb
lret
sti
sbb
jbe
or
pminsw
mov
add
or
in
mov
xchg
aam
push
clc
setbe
cld
dec
dec
push
inc
aad
stos
xor
adc
mov
jns
lea
dec
shll
push
or
jbe
cmp
mov
std
sbb
adc
sbb
cmp
xchg
xor
mov
stc
add
push
adc
sbb
inc
loop
push
dec
jae
imul
out
ret
decl
add
jle
add
xor
arpl
and
dec
pusha
sti
nop
sbb
or
or
jo
push
punpcklwd
into
iret
enter
aam
inc
cmp
ret
push
adc
stos
ljmp
add
inc
stos
and
xor
decl
mov
add
mov
jmp
pop
mov
pushl
mov
pop
lods
sbbl
inc
faddp
cltd
out
stos
sub
jo
hlt
lods
or
push
xlat
lret
lcall
ret
out
mov
dec
enter
mov
adc
sti
int
outsl
adcl
out
pop
jne
rclb
les
je
pop
cmp
inc
and
clc
jg
dec
sub
xchg
mov
data16
lds
add
aam
mov
sub
outsl
adc
outsl
mov
testb
lock
dec
sub
jecxz
inc
filds
xchg
test
fildll
cmpsb
out
test
popa
sub
test
mov
xor
loopne
adc
outsl
xor
mov
mov
pop
add
or
push
loopne
mov
test
push
lcall
into
xchg
xor
das
jl
rorb
pop
cmp
sarb
push
sbb
loop
sbb
xchg
mov
into
enter
sub
jne
pop
dec
repnz
jne
in
fdivr
notb
add
jg
loope
ljmp
inc
testb
lds
add
cltd
push
xor
hlt
add
adc
push
ret
jmp
cmpl
pushl
rcrb
out
dec
stc
in
les
gs
jns
sbb
decl
movsb
fdivp
jo
cs
and
cld
fsubrl
enter
sub
test
mov
add
dec
dec
push
cli
inc
loope
shlb
adc
sbb
pusha
insl
jmp
orl
pop
rorl
icebp
ja
inc
shr
clc
and
mov
dec
mov
mov
lahf
xchg
jb
inc
mov
cli
adc
sbb
inc
mov
or
add
jg
mov
int
mov
repnz
inc
cmp
data16
push
and
popa
dec
pop
repnz
dec
xchg
mov
fld
rclb
mov
and
testb
into
mov
lods
mov
or
jmp
jbe
outsb
clc
pop
push
xor
je
jl
sub
in
addr16
jnp
arpl
lcall
stos
in
pusha
mov
lret
inc
add
dec
les
mov
lret
nop
mov
arpl
xlat
ret
inc
imul
mov
sti
hlt
jne
decl
mov
nop
cmc
andl
mov
mov
pop
clc
mov
fildll
sub
out
dec
mov
ret
ss
movsb
dec
cmp
pop
or
push
out
mov
xchg
out
inc
push
xor
fldcw
iret
mov
xchg
cli
daa
cs
in
adc
sbbb
in
movsl
bound
sub
and
and
xchg
pushf
push
mov
inc
cs
call
into
incl
dec
sbb
lock
xchg
jp
pushl
mov
adc
inc
gs
mov
icebp
adc
dec
dec
gs
aaa
sub
inc
inc
adc
push
and
cmp
xchg
xor
fs
mov
pop
xchg
mov
mov
cmp
push
test
mov
or
mov
jne
hlt
jbe
clc
scas
xor
push
pop
or
or
imul
sub
push
insl
mov
into
enter
pop
pusha
ret
jne
inc
mov
jns
cwtl
mov
pop
enter
add
out
push
adc
push
std
lock
xor
or
jle
sahf
adc
xor
jne
adc
mov
adc
and
roll
in
inc
ljmp
mov
aas
inc
mov
shlb
ja
pop
xor
fucom
lods
pop
repnz
in
lea
push
repnz
pushl
add
adc
fsubl
pop
inc
and
fisubrs
add
xchg
pusha
inc
cli
pop
pop
cmp
mov
les
cwtl
fcmovne
in
push
add
ficompl
or
lret
sbb
aas
hlt
shll
out
push
ljmp
adc
jns
es
fsubs
lods
mov
cmp
mov
adc
fildl
jb
sbb
jmp
cmp
or
scas
lcall
fldl
inc
ja
pop
daa
or
mov
incb
and
and
push
ja
out
and
push
test
movsl
icebp
pushl
clc
dec
sub
not
sbb
xchg
xor
sub
lret
incl
add
sub
gs
xor
enter
das
lock
ret
or
mov
fwait
mov
mov
mov
add
mov
das
xor
std
ja
mov
sub
push
aaa
push
cli
jmp
fsubrs
jns
mov
test
data16
into
in
jns
pop
sarb
mov
ja
xor
testb
sbb
std
pop
mov
sub
test
add
js
mov
mov
insl
dec
add
rolb
push
dec
push
bound
sub
lahf
cmp
fdivr
xlat
xlat
mov
orb
addb
mov
in
icebp
add
push
ds
cmp
adc
inc
sub
shrb
call
mov
test
std
inc
shrb
inc
jl
and
aas
mov
mov
jl
nop
pop
xlat
shl
mov
ret
inc
nop
frstor
pop
pop
jecxz
in
or
imul
push
dec
inc
mov
adc
sbb
jg
filds
cvtsd2si
jo
subb
sub
mov
std
cmpsl
nop
push
push
lea
adcb
inc
xchg
cs
shlb
jne
push
dec
jg
add
adc
je
shll
jle
inc
mov
pop
es
mov
pop
dec
mov
or
dec
mov
aad
cmp
std
inc
inc
dec
add
lods
jg
sub
ret
mov
push
jns
aad
clc
or
in
call
sbb
test
mov
daa
imul
aad
js
scas
mov
cmp
pop
or
mov
push
fldt
add
popa
sub
sti
testb
lock
adc
inc
movsl
push
aam
sub
lahf
rcrl
test
std
push
pushl
insl
push
cmp
stos
dec
add
mov
adc
dec
mov
push
popa
mov
out
bound
es
aad
orl
pop
leave
inc
pop
outsb
test
mov
mov
mov
sbb
or
jns
outsl
or
push
cli
loope
push
and
and
xchg
incl
mov
arpl
int3
sti
mov
mov
jb
mov
or
aam
popf
dec
sbb
rorb
lahf
and
inc
shrl
stos
ret
sbb
fwait
sbb
cmp
fistpll
adc
mov
lret
nop
inc
ja
mov
call
lock
fstpt
popa
jnp
test
mov
xor
jo
shl
sbb
push
outsl
cld
int
lods
mov
subl
aaa
mov
or
push
addb
in
sbb
idivl
add
test
xor
jg
and
add
add
lea
sub
out
pushf
mov
popf
cmp
ror
dec
and
xor
out
aas
cs
daa
orb
jae
adc
cmpsl
aam
fbstp
pop
add
test
pop
inc
movsl
dec
lds
fisttpl
ljmp
mov
add
xchg
enter
outsl
test
lcall
out
and
into
push
inc
xor
sbb
mov
sbb
cmp
int3
aam
add
inc
lcall
sbb
call
push
aas
mov
aam
scas
xchg
dec
lea
in
out
test
incl
mov
mov
pop
sbb
add
andb
xchg
pushl
jb
xchg
xor
dec
cmpsb
fs
dec
fwait
cld
in
mov
dec
ret
and
or
loopne
adc
les
loope
lea
aaa
gs
repnz
fucom
pop
rorl
cmp
mov
imul
or
pop
xor
push
cltd
js
enter
insl
inc
les
fistps
aam
lock
aaa
sbb
cwtl
addb
sub
in
inc
mov
or
xor
or
mov
lret
mov
insb
in
je
sti
pop
roll
xchg
loope
sub
fwait
and
lock
jae
ret
xchg
xchg
aaa
inc
mov
or
inc
inc
pop
rcll
or
dec
jo
lret
rolb
jmp
pop
into
lods
sub
xchg
aam
pop
clc
mov
sbb
sbb
jle
xchg
xchg
hlt
push
je
icebp
movsl
fnstsw
cltd
pusha
les
jne
je
fs
cli
test
mov
sub
pop
lret
pop
dec
sbb
and
or
js
mov
hlt
pop
incl
icebp
sub
shrb
rorb
pusha
xlat
adc
push
sahf
call
loopne
inc
xchg
or
scas
lods
test
jbe
push
pop
jnp
adc
inc
pop
cmpb
lahf
pop
sbb
inc
lret
inc
in
outsl
cmc
lock
bound
rcrl
lea
out
shll
jmp
push
push
cmp
popa
hlt
cmpsl
mov
or
xor
sbb
outsl
test
inc
xchg
pop
sar
adc
cmp
mov
in
push
dec
dec
dec
jno
sbb
test
xchg
push
add
out
xor
outsl
out
loop
idivl
inc
dec
rcrl
arpl
sti
filds
test
rorl
test
push
mov
inc
in
xchg
lea
jl
jb
sbb
cmpsl
insb
in
aas
push
xorl
push
outsl
hlt
call
jb
and
cld
add
xchg
sbb
push
push
cli
cmpsb
inc
pop
pop
clc
in
imulb
lods
jae
mov
sbb
mov
aaa
add
je
out
inc
or
in
stc
xchg
inc
mov
cmpsb
xchg
std
in
aaa
mov
inc
shll
sub
data16
mov
daa
cmp
das
push
shll
jbe
jmp
call
nop
mov
fwait
and
push
jo
xchg
movsl
stos
xchg
stos
push
les
inc
pop
push
dec
cmp
mov
push
mov
loope
test
or
xor
xor
scas
inc
mov
mov
mov
adc
out
or
ljmp
lea
jnp
inc
mov
arpl
add
punpcklbw
std
push
std
out
add
scas
or
mov
push
sarb
loopne
aaa
shrl
out
adc
ret
out
mov
mov
or
mov
mov
push
mov
mov
testl
lods
bound
leave
cmpsl
je
dec
cmpsl
clc
outsl
loop
xor
xchg
ret
sub
xchg
or
mov
incl
push
dec
xchg
cli
xchg
das
js
sbb
inc
aaa
add
or
outsl
jns
lods
cmp
sub
mov
pushf
aas
mov
cli
aad
dec
mov
sahf
xor
or
les
mov
add
movsb
inc
jle
testb
out
ljmp
cmp
cld
and
sub
mov
inc
add
aaa
cmp
cmp
addl
sub
dec
mov
cli
add
pop
rorl
rcrb
jb
cwtl
aam
rolb
xchg
in
pop
ljmp
aaa
test
mov
xchg
mov
lods
test
push
sbb
push
push
fstpl
ret
and
clc
or
sbb
stos
xchg
daa
push
xor
outsb
dec
rcll
pop
ss
cmpb
ret
pop
sbb
jmp
sub
insb
sub
sti
scas
cltd
pop
adc
iret
cli
outsl
pop
sbb
or
push
lret
or
inc
shlb
push
fcomps
xchg
js
mov
push
rorl
jmp
fs
sbb
or
dec
sub
cli
mov
jg
adc
sbb
sub
push
mov
add
add
ret
sbb
call
loop
fstpt
cmpsl
mull
in
subb
cmc
push
mov
mov
enter
not
outsl
xchg
sub
je
mov
les
leave
add
enter
sbb
loopne
xor
dec
aaa
cs
mov
mov
jne
jp
lcall
incb
pushf
mov
mov
mov
data16
lahf
clc
incl
adc
lahf
shrb
or
and
mov
add
test
hlt
fwait
and
lods
mov
imul
cmpsb
jmp
or
rolb
cmp
or
loope
mov
inc
mov
loop
sub
mov
mov
add
fwait
lcall
dec
fs
or
repnz
dec
lea
mov
es
loope
ljmp
fdivl
mov
sti
iret
lods
fmuls
xchg
mov
push
jbe
push
sub
icebp
mov
cmp
pop
inc
jmp
aaa
lret
scas
or
inc
xchg
ljmp
sub
pop
xor
push
xor
loopne
fnstenv
mov
jecxz
pop
movsb
mov
lds
xor
jb
sub
les
push
jg
push
leave
mov
stos
dec
push
cmc
xchg
inc
push
loop
or
pop
enter
shrl
xorb
mov
add
dec
out
test
aad
sbb
mov
jno
stos
jmp
clc
enter
rdmsr
xor
push
or
mov
adcl
sbb
mov
loopne
sub
shlb
inc
mov
rorl
movq
outsl
add
lcall
add
sti
loop
dec
cwtl
and
std
xchg
shlb
test
push
rorl
test
mov
cmp
and
mov
int3
sub
bound
add
or
scas
movsl
cltd
jecxz
mov
pushl
fmul
pop
pop
mov
outsl
and
lcall
arpl
jmp
mov
xor
sub
lock
insl
mov
sub
test
fisttps
push
mul
push
icebp
and
rcll
adc
decl
lret
iret
cmp
mov
fwait
xchg
outsb
lret
push
or
aaa
rclb
jo
ds
inc
sbb
adc
add
jg
adc
jbe
rorb
cmp
or
push
push
cli
loop
cmp
shlb
clc
negb
mov
std
loope
jns
fld
xor
mov
adc
mov
inc
pop
adc
or
add
or
mov
xor
and
lahf
cli
cltd
cli
add
mov
xchg
jmp
loop
mov
sbb
scas
dec
mov
sub
sar
outsl
cld
jg
ja
mov
pusha
cmpsl
cmp
ss
adc
fistpll
je
mov
mov
sbbb
das
mov
in
dec
mov
shrl
xchg
outsl
pop
daa
push
mov
test
sub
jmp
jp
dec
mov
daa
push
jbe
mov
pop
xchg
in
pop
xor
or
call
jno
scas
xchg
mov
adc
mov
movsb
pop
pop
inc
in
inc
or
fildll
cmp
cwtl
adc
pop
nop
and
add
loop
inc
sarl
mov
adcb
pop
fsubr
mov
arpl
pushf
hlt
add
xor
xchg
outsl
jle
inc
insb
cld
ret
popf
push
jge
movsb
push
or
cli
dec
jge
cld
adc
fsubl
push
dec
outsl
clc
decl
add
bound
dec
mov
cmpsl
inc
call
and
sbb
call
jl
cmp
pop
dec
lret
dec
bound
lock
push
ljmp
fmuls
fimull
jg
pop
out
mov
lret
ret
sub
out
inc
mov
ret
out
sub
push
dec
fcomip
mov
lret
sbb
cmpsb
aaa
or
jmp
aad
adc
and
pop
push
aad
scas
nop
push
rorb
nop
or
aam
mulb
stos
cmp
inc
jmp
cltd
mov
sub
mov
sub
repnz
and
or
dec
pop
aad
std
incl
pop
inc
inc
xor
ds
dec
incl
rcrl
daa
ja
sbb
addr16
sub
pushf
pop
jmp
mov
mov
sbb
je
pusha
insl
or
adc
fbstp
sub
pop
or
jl,pn
cld
mov
mov
dec
addb
xchg
cli
jmp
jne
mov
pushf
loope
push
push
repz
add
sub
or
pop
sub
push
and
fwait
les
rcll
pop
jp
sbb
sti
stc
push
push
mov
movsl
lret
stos
nop
or
xor
xchg
mov
movsl
je
mov
fists
or
subb
cltd
add
loopne
incl
int3
fimull
arpl
mov
mov
pop
add
cmp
adc
sbb
aaa
incb
push
mov
cmpb
dec
js
pop
shl
xor
jecxz
aad
lock
lcall
mov
lret
dec
mov
lret
incb
mov
stos
mov
inc
jbe
adc
lahf
xchg
pop
clc
jg
mov
sti
dec
xchg
push
out
lea
cli
loopne
sti
jecxz
ret
jge
test
shr
push
sub
outsl
add
loopne
imul
adc
loop
push
out
push
inc
cld
dec
inc
leave
loop
xchg
loop
ds
xor
or
out
das
dec
fs
call
repnz
sub
fisubl
jmp
pop
inc
cmp
mov
out
or
add
jp
jg
xor
stc
out
aam
xchg
mov
jb
pop
jae
jmp
movsb
repnz
mov
inc
mov
ret
std
aam
cs
adc
es
push
cld
roll
mov
push
sbb
mov
rorl
fiadds
mov
movsb
and
and
inc
sbb
or
rcrb
mov
idiv
dec
dec
push
xor
fwait
aam
push
sarb
mov
mov
xlat
jb
xchg
xor
rorb
push
shl
jmp
xchg
ljmp
gs
mov
mov
and
scas
sarl
popa
mov
mov
bound
xchg
and
cmp
inc
sbb
jp
std
aam
mov
and
xor
mov
outsl
mov
icebp
xchg
adc
faddl
aad
sbbl
shrl
loopne
mov
lret
lods
int3
and
xor
fnstsw
std
adc
inc
xor
xchg
pushf
mov
sub
inc
shr
decl
push
lds
arpl
sbb
push
pop
iret
cmpsb
inc
repz
adc
inc
stos
xor
test
cmp
imul
mov
fiadds
dec
sbb
inc
in
add
jmp
sub
jecxz
or
jg
test
leave
popf
inc
stos
nop
cmp
pop
or
aas
aam
and
stos
push
int3
adc
call
push
outsl
add
and
aas
gs
out
cwtl
sub
shlb
int
xchg
or
repz
sub
into
daa
cmp
lock
xchg
cmc
aad
imul
int
dec
insl
sub
js
or
aad
fldl
dec
das
mov
test
int
clc
shlb
pop
ljmp
adc
jne
mov
adcb
push
std
push
loopne
mov
movb
jg
imul
adc
adc
call
push
mov
in
push
cs
mov
add
fcoms
in
or
mov
or
lock
pop
lds
jl
inc
push
sbbb
push
jb
and
fisubrs
in
lcall
aaa
mov
cmp
xor
adc
inc
sbb
adc
mov
rcrl
out
mov
cmp
xchg
int3
inc
imul
outsl
sbb
test
push
mov
cmp
push
in
adc
iret
or
pop
lds
outsl
imulb
repnz
in
stos
jo
insl
std
ret
mov
mov
out
test
outsb
inc
lea
fisttpl
cwtl
xor
push
or
jb
cld
das
hlt
jg
and
sbb
scas
stos
aam
outsb
push
and
negb
inc
ficoms
cmp
mov
fildll
jae
sbb
lahf
adc
loope
xor
ljmp
cmp
clc
push
push
pop
jnp
add
xor
sbb
es
sbb
out
add
or
xchg
mov
bound
or
into
adc
pop
call
adc
mov
fsubrl
sbb
inc
cmp
xchg
inc
outsl
imul
jns
fcomip
out
sub
rolb
adc
or
pop
mov
sti
mov
cmp
adcl
fstpt
push
cli
xchg
jge
insb
idivl
imul
add
dec
insb
repz
mov
push
cmpsb
ss
pop
test
sbb
inc
jne
mov
cmc
pushf
mov
hlt
ret
jnp
mov
sbbb
inc
mov
or
pop
push
sbb
jnp
push
pop
ljmp
sbb
mov
fsubrs
call
jle
xlat
enter
and
or
mov
mov
sahf
sahf
test
xor
adc
xchg
sub
xchg
lock
jg
shll
add
mov
mov
jmp
imul
sbb
mov
jmp
push
ret
data16
sub
mov
rcrb
call
out
bound
adc
nop
cmp
xor
xor
cli
sbb
xchg
jp
andl
lcall
push
mov
fisttpll
ds
pop
mov
lret
insl
repz
mov
test
push
lock
jno
incl
fwait
or
jle
mov
adc
movsl
inc
sbb
std
mov
xchg
inc
daa
into
xchg
mov
add
jl
sub
pop
ljmp
js
std
mov
cmp
push
scas
ja
cmp
pop
sub
cmc
jg
mov
and
jae
push
int
pop
gs
sbb
fnstcw
stos
data16
lcall
nop
xchg
repnz
aas
xchg
fstps
sbb
fnstenv
xchg
and
fs
dec
mov
in
jl
inc
out
cli
in
cmp
ljmp
stc
mov
insl
xchg
lret
mov
pusha
js
les
jne
jg
mov
push
xor
mov
mov
scas
or
mov
pop
loopne
sbb
ret
leave
inc
stc
rcrl
cs
push
test
iret
cmp
addr16
fwait
cmp
adc
in
mov
andb
sbb
mov
jo
push
pop
adc
fistps
adc
inc
mull
subb
cmpsb
mov
mov
pop
sbbl
dec
fidivs
ret
repz
sub
stc
xchg
cmp
sub
lea
outsb
mov
sub
mov
arpl
pushf
pop
aas
jmp
adc
push
ror
mov
mov
mov
xorl
lcall
ljmp
call
jno
test
and
insb
mov
jne
mov
sub
out
or
push
push
stos
call
roll
rorb
pop
je
shlb
xchg
cmc
rsm
sti
fisttps
call
rol
mov
inc
xchg
hlt
push
pusha
stos
mov
or
loopne
fimull
andb
mov
add
mov
pusha
ret
fbstp
cld
mov
stos
outsb
dec
pop
dec
pop
hlt
xor
jp
shll
xchg
insl
sti
xor
cmpsl
jbe
es
mov
mov
imul
and
in
insl
mov
outsl
push
mov
push
pop
iret
stos
mov
mov
lahf
sbb
jp
or
sahf
icebp
adc
xchg
aaa
outsl
les
push
pushf
aaa
add
inc
test
shlb
repnz
jecxz
cld
aaa
aad
data16
sub
or
iret
int
popa
movsl
ret
mov
in
sub
or
cld
push
test
xchg
les
sar
pop
cld
xlat
dec
ljmp
mov
xor
ror
jno
sbb
mov
mov
cmp
add
ljmp
ud0
add
outsb
pop
scas
stc
out
call
lock
pop
mov
fisubrl
js
xchg
inc
jl
inc
cs
cmp
enter
aaa
pop
dec
in
or
ljmp
loop
push
popa
xor
pop
lcall
mov
pushf
pop
cs
mov
icebp
repz
or
cwtl
or
cmp
das
inc
pop
clc
or
in
adc
je
sub
int3
jbe
test
ret
outsb
inc
cli
pop
sub
pop
call
adc
addr16
xor
jp
mov
pop
nop
push
pop
mov
mov
mov
ret
pop
xchg
mov
imul
cld
fadds
adc
sbbb
fnstsw
pop
fisttpll
or
add
dec
clc
je
push
mov
xor
xchg
bound
rolb
lea
inc
mov
mov
cmp
outsb
push
sub
add
les
xor
in
sub
and
call
cmpsl
xchg
xor
mov
enter
dec
sub
add
or
jle
xlat
les
ret
sbb
mov
sbb
and
scas
nop
ljmp
incl
inc
addr16
mov
push
iret
nop
adc
xchg
push
jb
mov
push
jmp
js
enter
fbstp
fisubl
cs
cmp
push
adc
jg
sbb
push
xor
pop
sti
loope,pt
adc
shl
fistpll
cs
xor
pushl
xchg
sbb
sbb
das
inc
adc
movsb
rorb
lcall
jb
out
test
fdiv
js
push
ss
rolb
xor
lds
mov
mov
bound
pop
shll
pop
sub
mov
mov
mov
mov
mov
aas
inc
sub
fisubrs
and
out
mov
ret
cli
outsl
mov
xlat
xor
inc
add
sub
in
sbb
add
add
add
push
add
push
jbe
pop
mov
pop
and
mov
dec
lods
lods
mov
ss
or
xor
xor
lahf
in
adc
sbb
std
inc
jecxz
jnp
subb
ds
mov
enter
inc
xchg
cmc
pop
mov
sbb
arpl
insl
or
xor
adc
cli
psrad
inc
adc
push
add
fisttpl
or
sub
or
xchg
arpl
push
cmc
and
ljmp
adc
or
sti
iret
mov
inc
in
jo
cmpl
fdivrl
hlt
jge
lds
adc
sbb
mov
inc
push
mov
xor
hlt
sbb
xchg
iret
adc
sub
addb
inc
cmpb
iret
push
push
mov
jecxz
fistpll
or
test
mov
jg
and
jmp
and
jg
outsl
mov
mov
mov
pop
std
add
scas
push
inc
lock
jnp
icebp
jg
fistpll
gs
repnz
int
or
fdivrs
cmp
mov
dec
mov
or
aam
mov
pop
clc
fbld
int3
subb
data16
test
test
cli
sbbb
inc
push
ljmp
mov
lea
movsb
add
popf
pushf
jns
and
cwtl
dec
adc
mov
xchg
hlt
out
cmp
lret
cmpb
rolb
add
pxor
and
aas
add
mov
andl
lahf
iret
jmp
movsl
cmp
std
sub
mov
dec
test
pop
addb
jl
xchg
outsl
lcall
jne
push
pushf
xor
xlat
xchg
inc
imul
jb
cs
jns
add
pop
mov
pop
inc
dec
sbb
aad
inc
cmpsb
dec
loope
orb
mov
dec
stc
push
jg
outsl
sub
jl
loopnew
aam
mov
xchg
ja
fcoml
loopne
cmp
ret
ret
cwtl
adc
add
aam
dec
inc
or
daa
mov
pop
jne
addr16
mov
inc
inc
inc
stc
ja
sub
movl
je
add
lods
fdivs
mov
fisttps
hlt
and
jle
hlt
pop
cmp
push
hlt
imul
xor
push
fnstsw
std
adc
push
xchg
inc
or
lfs
or
hlt
mov
and
insl
mul
mov
mov
mov
and
and
movsb
adc
div
out
xorb
aad
std
xchg
les
adc
loopne
xor
mov
inc
shrl
xor
push
pop
sahf
mov
push
hlt
mov
cmp
jl
hlt
jg
sarl
and
sbb
add
push
cld
push
add
mov
adc
je
jo
cltd
mov
pop
lcall
test
pop
pop
xchg
inc
add
push
fisubrs
fcompl
mov
mov
jg
loopne
jne
cmc
sub
adc
out
sub
cltd
inc
mov
push
into
mov
mov
jbe
cmp
cltd
adc
add
outsl
xchg
or
jbe
js
mov
cmpsb
mov
hlt
ret
daa
mov
add
cmp
sbb
push
fs
mov
xlat
ss
jge
gs
xchg
inc
pop
mov
dec
sbb
adc
clc
cmp
repnz
pop
inc
pop
cld
test
inc
jo
pop
mov
cwtl
cld
aas
adc
push
pop
das
pop
mov
adc
std
inc
scas
scas
adc
jmp
push
scas
mov
into
loope
jle
imul
cltd
jo
jno
adc
repz
xchg
lcall
ljmp
inc
clc
mov
dec
jb
int3
fcmovne
pop
inc
inc
jne
xchg
bound
sbb
ljmp
mov
push
push
cmp
dec
nop
pop
or
sub
adc
shrl
jne
fstpt
mov
out
fsub
pop
cwtl
jne
mov
push
insb
nop
testb
test
std
dec
mov
fsubp
cvttps2pi
mov
gs
mov
gs
ficomps
rcrl
add
cli
sub
sub
call
cmp
xor
movsl
jmp
lds
sahf
and
bnd
xchg
daa
enter
clc
mov
add
sub
into
pop
std
mov
rorb
insb
scas
sbb
add
arpl
or
mov
jnp
adc
out
jnp
mov
movsl
inc
out
xlat
lods
repnz
push
bound
jns
add
sbb
fsubl
add
add
mov
lds
sbb
pop
sti
lock
xor
outsl
cli
movsl
jp
out
sub
aas
add
mov
sub
outsl
fstp
sbb
pushl
leave
sbbb
xchg
cmpsb
out
xor
sar
imul
mov
adc
xor
nop
fstpl
icebp
mov
setae
pop
loope
test
insb
jp
loope
inc
lea
mov
rcrl
mov
mov
jae
or
dec
push
das
xor
xor
cli
outsl
aad
scas
push
mov
ret
sbb
ret
inc
sbb
inc
or
dec
fs
inc
sub
movsb
in
xchg
int
call
pop
testb
push
push
and
xchg
or
sahf
adc
fwait
movsl
dec
pop
repnz
mov
xchg
aas
sti
mov
fisubrs
insb
lahf
cli
pop
xchg
test
sbb
cmpsl
mov
inc
pushl
jecxz
aad
inc
mov
mov
jo
cwtl
or
dec
mov
outsl
das
aam
imul
push
arpl
add
adc
xor
sbb
add
push
adc
pop
test
sub
or
and
inc
xchg
xchg
pop
xchg
out
ljmp
hlt
mov
pop
hlt
lcall
repz
push
fiadds
add
sub
aas
inc
inc
rorw
test
fistpll
pop
test
loopne
pop
mov
icebp
loope
push
jnp
imul
daa
pusha
push
orb
cld
mov
jnp
mov
aam
xorb
lcall
hlt
fnstsw
jg
jl
mov
rclb
jbe
call
test
in
cmp
mov
out
jb
int3
push
mov
or
call
ret
adc
leave
and
movl
clc
fbstp
add
iret
xor
insb
fstpl
movsl
jp
rolb
fstpt
sub
inc
mov
fcmovb
jnp
pushf
mov
shrl
faddp
and
add
pcmpeqb
stos
sahf
sub
fdivrp
xchg
cmp
daa
and
mov
rcr
xchg
stos
dec
sbb
clc
sti
pop
pop
test
push
lods
ljmp
loop
cmp
jl
xor
adc
ficoml
ljmp
imul
pop
add
and
mov
outsl
aam
inc
jne
push
jg
incl
cmp
outsl
cmp
sub
js
sbbl
ds
mov
jnp
aad
jo
inc
sub
orl
je
sbb
inc
popf
push
lods
and
mov
call
cmp
jge
add
icebp
xor
pop
or
add
mov
lcall
push
lea
shl
pop
dec
xchg
jge
mov
dec
cmp
adc
out
fidivl
push
lahf
jb
xchg
outsl
add
jmp
or
mov
push
adc
jb
pop
cs
dec
mov
sbb
pusha
or
mov
push
hlt
lret
push
aad
adc
fidivrs
mov
push
sbb
mov
std
or
xchg
xorb
mov
add
sbb
inc
mov
jmp
clc
stos
push
pop
and
xor
fldt
jg
es
xor
ss
xor
xchg
mov
sar
fisubrs
aad
mov
nop
int3
push
pop
xlat
idiv
jg
call
int3
lret
mov
push
xlat
incb
mov
lds
fwait
aad
mov
scas
or
or
repz
mov
inc
jo
adc
xchg
or
mov
scas
mov
es
add
rorl
lods
andl
or
ljmp
xchg
in
data16
into
push
mov
repnz
sbb
add
inc
nop
push
loopne
and
add
add
cmpsb
loop
inc
add
ljmp
lret
mov
adc
les
lods
cmpsl
roll
mov
loope
pop
call
out
fsubrl
dec
xor
iret
cwtl
xor
jg
les
lea
mov
inc
dec
sub
decl
cmpsb
pop
xor
dec
and
dec
mov
aas
push
push
ret
push
ret
adc
call
mov
sub
lock
mov
jl
jg
pop
xor
hlt
inc
sbb
insl
mov
add
mov
jge
inc
mov
rcll
fidivs
and
in
mov
cli
int
mov
iret
or
mov
mov
orl
push
in
jg
inc
or
inc
stos
pusha
xor
rorl
nop
jo
pop
ss
dec
add
ret
mov
loope
mulb
xchg
adc
aaa
out
or
mov
incl
mov
dec
ss
stos
add
xlat
cmpsl
inc
fcomi
add
cmc
in
enter
mov
or
loopne
clc
adc
gs
out
into
adc
ljmp
lock
lret
adcb
loopne
lcall
cmp
les
mov
in
dec
lods
xor
incb
sahf
bound
push
fdivr
jmp
insl
cmp
pop
loope
out
inc
stc
sbbb
mov
or
sbb
mov
arpl
lock
sub
ja
add
or
add
sbb
ret
sub
out
int3
or
push
xor
push
add
cmc
cmp
sbb
insb
dec
adc
cmp
iret
test
adc
ss
fucomip
pop
or
push
dec
mov
inc
pop
jno
sbb
lock
aaa
dec
jb
cmp
inc
mov
or
sub
ljmp
add
loope
sbb
outsb
fucomip
cmpsb
test
adc
pop
dec
lcall
cs
add
push
lods
or
out
fwait
mov
inc
mov
pop
adc
mov
lret
in
xor
mov
jge
push
ret
push
mov
mov
aad
pop
je
in
adc
ja
mov
div
test
sbb
ds
inc
adc
ror
sti
cli
test
mov
aaa
adc
dec
xchg
adc
push
psrlw
addr16
call
fs
adc
pop
enter
pop
dec
test
mov
xor
mov
or
inc
pop
jno
in
jmp
out
add
sub
xchg
scas
cltd
loopne
clc
pop
cmp
js
inc
cmp
dec
or
mov
test
cmpsl
sbb
or
fsubrl
xchg
clc
dec
fisubrl
and
lret
imul
push
mov
andb
shrb
stos
clc
test
cmp
subb
fcmovnu
lods
fisttpl
shrl
pusha
lods
mov
pop
add
or
mov
pop
mov
bound
lahf
adc
roll
sar
push
mov
stc
dec
mov
push
shrb
adc
inc
mov
cmc
xchg
jns
adc
aaa
lock
mov
mov
jge
lods
loope
popa
jb
ret
nop
sub
outsl
das
inc
mov
ljmp
popf
mov
fistpll
push
loop
dec
add
inc
aam
popa
pextrw
push
inc
jmp
mov
fwait
cli
cmc
loop
inc
jnp
sub
je
xlat
lea
push
pop
xchg
xor
sbb
or
and
dec
xor
mov
sub
sub
loope
push
pop
shll
ljmp
stc
cmp
arpl
sub
pusha
push
sub
cmpsb
test
pushl
sahf
and
in
cmpsl
and
notb
inc
xchg
mov
fistl
clc
call
stc
movsb
sti
daa
dec
pop
fldt
fcmovnb
ficompl
fst
outsl
sbb
jg
mov
xlat
sub
adc
add
pop
pop
loop
adc
xor
mov
or
faddp
test
mov
cltd
fwait
out
pop
jae
hlt
xor
xchg
loope
fidivs
shrb
inc
into
mov
mov
test
xor
add
push
push
mov
jl
pop
mov
outsl
mov
adc
scas
cld
mov
mov
in
push
xchg
sbb
dec
add
rolb
mov
or
push
push
popa
testl
mov
outsb
jbe
je
test
sub
cwtl
call
sub
lods
push
movsl
mov
xlat
or
sar
js
cmp
insb
insb
xor
jno
lock
mov
pop
fnstsw
ja
jno
dec
sub
mov
dec
arpl
cwtl
leave
mov
test
inc
lock
mov
adc
inc
cs
or
mov
cmp
xchg
pop
call
lret
out
sbb
xlat
movsl
sub
aad
rcrb
lretw
jbe
sbb
and
jno
popa
pop
test
mov
icebp
or
dec
xabort
loop
stc
mov
dec
lods
pop
sub
shrb
pop
je
popa
jne
inc
jns
frstor
adc
or
adc
xchg
out
push
lods
in
adc
sar
das
inc
mov
lret
jnp
jmp
pop
xor
rorl
clc
dec
insb
mov
push
push
mov
push
push
out
clc
das
dec
dec
leave
cli
shlb
mov
test
mov
add
or
fiaddl
mov
jnp
and
testb
adc
add
or
arpl
adc
fwait
pop
push
sbb
push
sbb
dec
out
lods
icebp
sub
push
lock
ffreep
inc
dec
adc
jne
inc
enter
jae
pushf
jecxz
iret
in
push
sbb
add
dec
test
mov
imul
inc
mov
aaa
insb
lds
testl
pop
dec
mov
xor
inc
loop,pn
mov
adc
push
dec
lock
and
and
mov
cmp
scas
push
mov
cmp
cmp
pop
jbe
clc
push
std
arpl
push
pop
adc
ja
test
push
lahf
sahf
je
invd
test
add
mov
adc
mov
out
scas
aas
push
repnz
jp
jo
mov
aad
xchg
sbb
in
leave
xor
and
push
xor
xor
push
fst
fs
inc
out
pop
sahf
movsl
jnp
xchg
cli
jb
inc
fs
cmpsb
mov
sub
mov
cmpsl
clc
test
int3
or
xchg
mov
ss
mov
fmul
jbe
pop
lcall
pop
movb
pop
lods
xchg
push
fsubrp
add
js
icebp
or
loop
cmp
flds
and
movsl
cmp
outsl
das
xor
ret
cmp
mov
ljmp
push
adc
jbe
and
adc
and
jae
pop
inc
inc
xchg
iret
adc
mov
and
cmpsb
scas
and
adc
pop
and
adc
xchg
cmp
imul
push
or
ljmp
xlat
add
arpl
cmp
push
pusha
jle
xchg
in
dec
pop
test
outsl
mov
jl
pop
adc
xor
insb
sbb
cld
mov
sbb
jbe
and
mov
sbb
add
jecxz
or
or
mov
movsb
test
aas
lock
test
xchg
iret
xchg
inc
sbb
jecxz
dec
adc
loop
or
add
ret
push
push
jbe
and
lahf
inc
subb
xchg
inc
or
popa
stc
dec
popa
int
loope
sub
add
mul
mov
mov
call
cs
movsb
inc
andb
imul
pusha
dec
dec
xlat
gs
lock
pavgb
jge
push
lret
dec
ja
sbb
jnp
das
in
push
sub
sub
cmp
nop
sbb
mov
and
pop
lret
mov
cmpl
std
add
adcb
sti
sbb
cwtl
ljmp
and
mov
js
inc
loope
jl
xor
lock
sbb
push
aad
clc
jg
sti
out
mov
mull
pushl
out
push
popf
shrl
iret
ficoml
or
or
dec
in
movb
clc
rcrb
inc
push
scas
popl
inc
xor
sub
lds
imul
popa
or
lret
sbb
inc
mov
repnz
call
inc
xor
mov
pop
insb
mov
add
pushl
and
lret
fcompp
push
add
pop
mov
ja
fsub
or
and
enter
mov
aam
and
adcb
and
cmpsb
mov
mov
push
mov
mov
movzbl
jp
imul
scas
fistps
aam
iret
push
mov
icebp
push
mov
movsb
jo
add
aad
sub
inc
dec
lock
pop
xchg
fwait
cmpsl
les
inc
push
loope
int3
lock
roll
sti
xor
xchg
jno
mov
pop
inc
push
add
pop
outsb
xor
xchg
push
sbb
push
outsb
lahf
jg
shll
out
xchg
mov
das
cmp
or
popa
adc
shrl
leave
std
mov
clc
or
call
xchg
adc
ss
adc
mov
push
cmc
adc
jb
pop
inc
cwtl
push
faddl
mov
and
or
rolb
push
adc
inc
popa
mov
mov
stc
sub
pusha
sti
mov
and
int
int
jle
mov
loopne
popa
sbb
lret
rorb
jne
orl
outsl
mov
scas
pushf
jg
pop
aam
pushl
int3
scas
lods
add
nop
aas
push
adc
add
pusha
pop
add
or
faddp
adc
mov
dec
adc
push
cld
les
enter
push
fdivs
mov
xor
mov
das
in
les
push
adc
and
mov
std
call
and
imul
rcll
mov
dec
inc
fistpl
dec
fiadds
shll
mov
out
out
popa
mov
xor
shlb
jmp
push
icebp
sub
imul
inc
cmp
decl
lds
mov
fmuls
add
dec
push
fcomp
jno
testb
stc
xchg
pop
mov
jne
test
inc
mov
mov
and
out
xor
nop
repz
and
mov
dec
push
aas
std
movsl
decl
xchg
test
dec
jge
cmp
cmp
lahf
mov
or
mov
es
jmp
jg
adcl
sbb
in
mov
push
das
ja
and
int3
out
js
lret
mov
mull
jge
test
sub
mov
push
rorb
jne
sbb
es
cmp
xchg
mov
dec
in
xchg
pusha
mov
lret
stc
test
xchg
pop
dec
pop
sub
mov
push
fisubrs
push
or
fisttps
les
dec
mov
dec
inc
div
or
and
or
xchg
ljmp
jg
and
add
jnp
bound
negl
lahf
or
hlt
pop
mov
fcomp
or
lret
ljmp
and
and
pop
cmp
push
push
mov
scas
je
ljmp
nop
add
sub
adc
xchg
rcll
pop
orb
cmp
les
nopl
fwait
cli
movsl
lods
mov
sbb
sub
add
insl
mov
or
test
cmp
dec
aas
insl
mov
jge
ss
ret
and
adc
ds
cmp
xor
pushl
repnz
sub
iret
sub
xor
sahf
js
movsb
dec
int3
jle
mov
cs
dec
shrl
cmp
test
sbb
inc
popf
push
call
rorb
lea
push
lods
subb
pop
ljmp
clc
adc
pop
loopne
xlat
jbe
add
sub
push
es
iret
fildll
lret
sbbb
rorb
sbb
or
orl
bound
or
in
push
jae
inc
popa
mov
push
jl
push
dec
lret
push
je
dec
rclb
sub
add
test
aad
inc
loopne
mov
pop
jg
jle
setne
add
and
pusha
adc
jne
clc
mov
stc
dec
mov
pop
cmp
sbb
cmp
xor
ja
xchg
fstpl
and
sub
jg
jne
mov
ss
adc
leave
dec
xor
sub
js
in
fcmovb
and
xor
mov
scas
sbb
std
pop
or
xchg
lods
loop
add
ja
mov
sbb
clc
add
clc
subl
mov
daa
push
loope
sbb
cli
and
adc
mov
nop
push
cmp
add
out
test
dec
decb
test
test
fldl
xor
rclb
dec
in
jmp
clc
lcall
add
jb
and
mov
or
rclb
xlat
test
or
andl
ret
std
jae
or
ds
imul
xor
sbb
mov
xchg
mov
jne
pop
out
sub
xor
fwait
jmp
push
cmp
shlb
sbb
jno
jecxz
sbb
mov
scas
adc
and
cli
shll
and
call
rolb
push
imul
nop
or
inc
and
xor
jbe
std
or
loope
pop
rclb
scas
ljmp
rolb
sub
outsl
sub
pop
das
or
sbb
repnz
push
out
xor
aas
add
movl
aas
xor
mov
push
mov
push
adc
jnp
das
fdivrp
arpl
xor
dec
cmp
and
push
ret
pushf
cld
adc
in
add
and
insl
shl
sti
rclb
jbe
mov
mov
xorl
hlt
push
mov
jb
or
adc
xchg
xor
dec
mov
or
jg
push
in
xchg
inc
add
lea
dec
or
js
aas
push
ret
into
aas
in
iret
out
imul
das
shrl
adc
jmp
pop
fidivl
test
pusha
movsb
jno
test
mov
inc
push
sub
xor
jg
je
xchg
pushf
sahf
stos
add
sub
xor
mov
lods
loope
sbbb
xor
dec
cmp
rorb
adc
scas
movsl
sahf
cld
in
lods
std
out
fdivr
pop
insl
sbb
xor
xchg
in
cmp
mov
sub
imulb
push
cmp
or
test
sbb
mov
mov
xchg
jl
mov
cmc
xchg
aas
mov
out
mov
out
rclb
clc
std
ss
dec
fistpl
outsl
ljmp
sbb
sti
ret
lahf
inc
jmp
mov
ret
stos
dec
in
daa
or
xorb
pop
adc
mov
push
pop
cmpl
or
in
sub
icebp
push
dec
sbb
push
and
inc
shll
push
mov
out
or
inc
mov
jne
sbb
outsl
fdiv
sbb
xchg
sub
add
and
addr16
cmp
in
mov
jl
test
mov
insb
stos
xor
inc
and
out
ja
sbb
dec
lea
lock
mov
lock
movsl
mov
jbe
test
inc
nop
bound
mov
inc
fcomi
sbb
in
mov
fbstp
and
and
pusha
nop
aaa
xlat
cmp
outsb
add
jmp
mov
out
sub
inc
fs
jbe
and
test
adc
xor
fistl
mov
rorl
lea
xor
push
jecxz
inc
adc
imul
cld
jmp
stos
sbb
test
mov
call
sbb
data16
fcomip
aad
outsl
fs
add
mov
je
add
das
pushf
adc
fcompl
insb
xlat
fs
inc
mov
ljmp
adc
mov
xchg
mov
lods
lret
inc
add
sbb
cwtl
mov
test
jg
pop
pop
into
loopne
or
dec
xchg
mov
cmc
test
adc
and
cltd
fwait
sub
cmp
loope
or
movsl
lea
lock
nop
popf
push
dec
arpl
cld
lods
fisttps
ss
pop
les
adc
cli
outsb
adc
push
pop
adc
shrl
icebp
mov
pop
je
aaa
add
jbe
push
add
fmuls
and
jno
rorl
outsl
nop
leave
inc
sub
inc
pusha
cltd
in
incb
jnp
cmc
and
sbb
loope
call
std
add
fwait
ja
cs
lret
xchg
adc
push
mov
jne
xchg
mov
cmp
loope
or
add
add
addr16
cmp
pop
outsb
inc
mov
sub
mov
js
call
sbb
xchg
add
or
xor
cmc
xchg
stos
mov
cld
xchg
mov
loop
adc
movsb
leave
popa
ret
and
xorl
pop
add
mov
cli
flds
insb
sbb
adc
lock
xor
iret
outsb
push
sahf
and
sets
pop
mov
iret
sub
and
in
add
repnz
scas
jle
lret
mov
test
jmp
clc
add
cmove
add
fadds
sub
sbb
dec
nop
test
js
inc
mov
mov
mov
cmp
test
call
call
addr16
push
add
jbe
xor
in
sub
inc
outsb
mov
xlat
jbe
into
cmpsl
or
mov
inc
dec
roll
sahf
outsl
pop
mov
xchg
shll
addl
aaa
mov
lods
shr
or
fbstp
imul
std
push
movsb
cld
scas
sbb
lds
pop
or
push
lcall
mov
inc
xchg
jge
aam
mov
xor
popf
out
xor
push
notl
dec
xor
call
imul
lahf
pop
or
dec
mov
jg
lahf
dec
dec
pushf
mov
push
shr
rclb
or
lahf
mov
aaa
xor
shlb
cmpsl
lods
sbb
lods
jle
mov
mov
sub
ret
cmp
ret
and
xchg
repz
pop
cld
sbb
push
sbb
decl
mov
out
insb
dec
push
aaa
jnp
roll
adc
fwait
addr16
mov
loop
dec
cmpsb
test
mov
call
xor
in
or
dec
ja
mov
in
add
jmp
mov
mov
inc
enter
loop
mov
inc
int
xor
jmp
test
cli
xor
mov
adc
pusha
cmp
jl
jno
and
adc
or
sar
jmp
std
inc
inc
pop
popa
mov
out
or
outsl
cmp
mov
lods
mov
mov
jmp
addl
std
sub
ficoml
push
repz
jg
fnstcw
mov
enter
pop
pop
cmc
fstpt
adc
pushf
iret
movsb
bound
outsl
rcrb
mov
mov
enter
dec
ret
sbb
rcl
into
mov
sub
adc
push
cli
stos
int
cmpsb
fucomip
dec
cld
add
mov
rcrl
push
test
jl
sbb
ret
or
mov
mov
pop
dec
xchg
lfs
dec
push
fcoms
call
pop
sub
cmp
cli
dec
sub
and
or
repnz
inc
mov
sbb
insb
pop
inc
scas
pop
ss
lcall
les
mov
aam
cmp
dec
mov
dec
clc
and
or
jp
mov
loope
das
or
mov
out
adc
jmp
mov
lds
mov
sar
in
sub
clc
jns
mov
mov
jno
test
mov
xlat
jg
push
mov
sub
pop
rcrl
xchg
pop
add
mov
in
xchg
push
loop
je
mov
lods
inc
cmc
sbb
dec
sahf
and
xor
rorb
jb
loopne
shll
iret
out
fs
cltd
loop
mov
cli
mov
dec
and
ret
add
push
sbb
add
test
mov
add
xorl
or
inc
inc
or
ror
mov
enter
add
sbb
inc
testb
insb
in
sbb
adc
push
outsl
inc
adc
push
dec
imul
cmp
push
testb
fs
test
adc
and
inc
or
loop
cld
incl
mov
mov
inc
push
fidivl
lcall
xchg
orb
mov
les
mov
mov
dec
jmp
jnp
cmpsb
subl
cld
pop
and
out
incb
xor
in
gs
lcall
mov
inc
sub
adc
nop
orl
dec
stos
mov
es
or
cld
xchg
cmp
mov
push
loope
rcrb
cmp
out
popa
ds
pop
paddusw
rol
scas
or
or
mov
iret
mov
mov
popf
jae
sub
jmp
fnsave
sbb
ret
loop
hlt
mov
mov
jge,pn
mov
rcrb
sbb
add
ret
notb
fistpll
add
adc
jb
stos
stc
scas
inc
cmpsl
repnz
or
jg
push
or
ss
dec
fsub
nop
icebp
data16
cs
jo
push
add
fs
mov
jle
push
incl
inc
sbb
incl
push
ja
and
jne
hlt
out
incl
call
sub
push
out
es
and
pop
and
mov
xor
ss
cmpb
or
adc
inc
adc
push
les
mov
xchg
or
in
jg
inc
lods
xor
pop
pop
fcomps
pop
pop
insb
mov
ret
call
dec
insb
jp
je
jns
insl
aad
enter
aaa
jbe
mov
jmp
push
in
push
sarl
jb
pop
aas
jmp
push
and
lods
inc
mov
adc
mov
inc
push
out
add
cltd
xor
sar
in
test
dec
pop
jbe
pop
call
jg
inc
jb
push
mov
inc
or
add
pop
test
in
jo
dec
jle
xor
call
addl
stos
xchg
pop
add
sbb
or
nop
movsl
or
mov
js
lcall
shr
das
add
fcoms
test
mov
lcall
xchg
xor
gs
negl
imul
jnp
in
mov
inc
mov
cmp
push
sbb
jae
pop
jg
push
je
add
xchg
sbb
sbb
fistps
test
push
lcall
pusha
fistl
ss
testl
push
call
xchg
xor
xor
popa
push
into
push
mov
cmc
movb
shlb
xchg
inc
jb
adc
lea
aaa
sub
xor
mov
add
or
jecxz
std
jo
out
mov
sbb
xor
outsb
shl
rolb
scas
xchg
dec
add
in
ret
fisttpll
or
pop
sar
pop
out
add
rcr
xchg
out
push
mov
clc
xchg
adc
mov
mov
ds
sbb
mov
push
dec
push
and
mov
or
insb
or
mov
jg
fsub
cltd
xchg
mov
sub
popa
subl
sub
cmp
stos
cli
clc
or
sub
out
pop
shll
hlt
jp
push
sbb
dec
inc
cld
mov
push
sub
mov
pushf
mov
sub
sub
and
idivb
sbb
push
xchg
inc
test
mov
loope
cltd
inc
mov
pop
and
das
add
into
and
xchg
pop
pop
out
dec
dec
push
pop
and
pop
icebp
sbb
push
shll
mov
mov
ret
outsl
loope
mov
lahf
cmpsb
addl
mov
mov
out
fdivrl
cli
int
pop
decl
mov
ljmp
pusha
jecxz
jnp
mov
jge
inc
pop
inc
jge
hlt
xchg
aas
dec
add
mov
mov
mov
xor
push
inc
sbb
repnz
or
cld
ret
pop
xchg
cmpsl
je
xchg
inc
ret
roll
mov
add
les
push
les
mov
fiadds
push
cmp
mov
xor
subl
es
mov
in
xor
shll
xchg
mov
jo
adc
sbb
mov
mov
and
mov
adc
stc
sbb
sub
pop
cmp
jecxz
or
jge
mov
inc
and
icebp
fistpll
inc
sbb
shl
inc
and
gs
rorl
filds
sbb
lcall
fistpl
adc
xor
mov
lea
arpl
call
xor
imul
jbe
pushf
jmp
mov
out
rolb
sbb
insl
add
sbb
in
ja
ds
mov
shr
push
cmp
and
enter
into
and
lods
daa
mov
mov
add
jecxz
mov
xchg
adc
out
adc
stc
jo
xor
loop
mov
out
dec
inc
lods
adc
sahf
std
push
ja
shll
dec
into
repnz
pop
repz
decl
movsl
pushl
push
or
enter
xor
mov
jge
mov
add
mov
or
inc
jne
jmp
sbbb
fcmovne
or
fsubrs
xchg
push
not
test
add
es
repz
outsb
movsb
mov
dec
pop
popf
loopne
adc
test
mov
faddp
out
fwait
adc
mov
outsb
cmp
add
shll
les
cmc
aas
cli
mov
enter
jns
dec
jnp
out
jbe
adc
jae
xor
cwtl
mov
pop
ljmp
dec
push
mov
aam
fsubs
das
mov
push
adc
pusha
mov
cmpl
push
popl
push
mov
inc
jg
or
jo
dec
es
mov
cmpsl
adc
or
adc
rcll
mov
inc
out
popf
pop
js
mov
or
dec
mov
jge
jp
push
jg
fadds
adc
and
in
or
fistps
mov
in
popa
jmp
mov
jge
test
sbb
jge
popa
loope
cmp
rcr
test
add
fidivs
sbb
dec
sbb
outsl
xchg
and
sbb
lret
dec
push
fucomi
test
add
push
cmp
add
dec
push
lret
ret
lcall
ret
mov
lahf
js
add
pop
sbb
fwait
pop
push
enter
push
sub
pop
push
or
arpl
addr16
cmpsl
push
cs
sub
cmp
mov
and
inc
jg
jnp
jae
add
mov
jp
xchg
mov
mov
jmp
add
out
enter
insl
inc
cld
add
push
dec
or
bound
xchg
rorb
stos
rclw
mov
adc
pop
faddl
cmp
and
adc
adc
xchg
xchg
test
cmp
pop
cli
jb
and
orb
insl
scas
js
pop
sti
push
pop
cld
mov
or
or
cltd
jno
cs
mov
push
incb
repz
cmp
adc
sbb
inc
ljmp
outsb
mov
jp
pop
aas
inc
mov
add
and
dec
clc
sub
call
pop
push
ret
nop
xchg
mov
mov
shr
pop
fildll
xchg
adcl
pop
jne
iret
int3
xchg
rcrb
rcll
aas
and
cmp
ret
add
pop
push
int
paddw
lods
xor
sbb
ja
test
add
insl
cmp
cmp
clc
shll
ss
or
ret
mov
mov
inc
mov
inc
jg
movsl
jle
imul
test
mov
push
inc
cmp
and
int3
call
pushl
xchg
jb
mov
jecxz
repnz
subb
cmp
lds
xlat
xchg
jle
cmp
jmp
xchg
cmp
data16
xor
and
cld
in
push
jecxz
loope
inc
mov
jl
cmpsb
push
bound
hlt
adc
fsubr
nop
and
popf
jge
mov
sbb
das
adc
call
xlat
push
mov
pop
test
pop
add
popa
jno
mov
push
mov
test
sbb
lea
jg
popa
mov
or
push
daa
push
data16
icebp
je
out
call
fadds
xor
mov
pop
sbb
cmp
adc
inc
cmp
fcompl
cmpsb
dec
testl
je
xor
inc
mov
add
sbb
shrb
enter
mov
pop
adc
mov
push
js
lock
cmpsl
jne
inc
sub
push
test
hlt
stos
dec
cmc
add
ficoml
sti
lret
testb
sbb
push
dec
jmp
cli
ret
addl
mov
sub
fdivr
jg
adc
idivl
imul
popf
shrl
hlt
scas
pop
and
pop
mov
mov
lods
sti
and
or
jmp
aaa
mov
pusha
sub
loopne
pop
test
sbb
mov
movsb
add
mov
push
inc
popf
movb
xor
add
rclb
rep
clc
xchg
sti
stos
incl
dec
sub
pop
iret
push
mov
and
cli
stos
nop
mov
jb
pop
movsl
jg
test
lods
and
jne
movsl
mov
inc
add
xchg
jl
sbb
add
mov
fcomps
xchg
xor
push
mov
sub
jg
loopne
into
adc
pusha
jo
cmp
inc
pop
adc
sub
lock
cmp
ret
mov
test
sub
pop
mov
fcomip
les
mov
push
and
inc
mov
push
pop
push
js
mov
pop
push
xor
test
dec
inc
sbb
ljmp
or
push
cmpsb
xchg
mov
cli
or
cwtl
test
pop
mov
adc
mov
mov
and
shll
inc
inc
jle
enter
rclb
ja
aam
adc
push
rorb
js
out
jp
sti
push
out
jmp
jae
sbb
cwtl
inc
scas
rorl
mov
push
dec
lods
fists
repnz
ficoml
xchg
jmp
call
popa
pop
pop
fdivs
adc
jne
push
outsl
jl
into
dec
or
cltd
push
pushf
into
jo
sbbb
sub
xchg
cmp
and
mov
jnp
fwait
rcrb
lret
ficoml
dec
push
fwait
or
inc
mov
lcall
fisttpll
xchg
imul
or
add
into
shrb
and
xchg
pushf
cwtl
pusha
mov
cmp
xchg
gs
xor
shl
or
outsl
mov
bound
xor
inc
imul
push
js
dec
cmpsb
xor
adc
jle
jnp
test
pop
arpl
cs
icebp
push
jno
cmp
out
pop
sahf
push
clc
mov
mov
sti
dec
mov
mov
stc
mov
in
mov
and
inc
insl
cmp
xchg
in
xor
cmc
rcrl
bound
aad
pop
mov
test
daa
test
pop
ss
jg
dec
pop
lret
cmp
imul
push
and
sbb
jmp
orb
push
lods
sbb
shl
jo
or
das
push
mov
mov
arpl
data16
pop
hlt
mov
mov
sti
mov
addl
xor
jmp
nop
into
lret
fisubrs
lret
rorb
sbb
pop
inc
test
repnz
add
movl
addb
jmp
jb
fiaddl
lods
xchg
pop
lods
sub
in
push
and
inc
pop
lock
sbb
mov
xor
xchg
xorl
or
fucom
xchg
pop
mov
add
imul
cmp
jg
push
adc
rolb
in
mov
jae
cmp
jno
dec
aas
jns
addr16
out
mov
pop
adc
mov
cs
pop
mov
mov
ljmp
pop
cmpsl
push
iret
ss
hlt
push
icebp
roll
call
or
and
jb
jo
push
test
fnstsw
andb
push
pop
fs
cmp
jecxz
adc
jnp
dec
add
adc
ret
pushf
xor
fnstcw
scas
adc
inc
add
aas
loope
aas
pop
pop
lods
out
lds
out
or
je
xor
aas
cs
ret
cmp
fildl
jne
dec
mov
nop
jg
jp
sbb
push
scas
enter
cli
mov
lcall
adc
mov
jl
mov
push
inc
sub
push
testl
and
lds
mov
js
or
insb
outsb
cmpsb
pusha
xlat
pusha
or
mov
mov
sub
add
enter
adc
add
adc
std
flds
mov
add
add
push
pop
mov
sub
cmp
add
jno
jp
jmp
mov
mov
lret
inc
push
push
cmp
push
push
je
mov
in
iret
out
inc
sub
std
sbb
insb
mov
in
mov
cmp
pop
fists
add
mov
out
aam
gs
cmp
jl
jge
add
testl
jl
fs
mov
add
mov
jg
cli
addr16
mov
test
pop
xchg
mov
dec
pop
push
loop
mov
mov
push
mov
test
inc
mov
fs
jg
ret
aas
lret
push
sub
ss
fildll
bnd
cltd
sbb
lds
pop
ret
jae
inc
push
and
into
shlb
and
xlat
lock
ficoml
mov
or
fbstp
xchg
jns
scas
mov
cmp
adc
mov
ljmp
jnp
adc
inc
test
cmp
aas
mov
cmpsb
adcb
cmpsl
jns
or
mov
mov
and
or
jp
out
not
xlat
sub
jns
mov
adc
aaa
add
arpl
into
das
add
out
push
cwtl
out
icebp
outsl
leave
sti
cmp
lret
add
ljmp
nop
jmp
xchg
mov
mov
insb
aas
arpl
lds
push
ljmp
mov
insb
jmp
cmp
cwtl
lds
xorl
filds
mov
mov
or
cli
sbb
std
push
sbb
adcb
xchg
insl
lock
loop
jmp
aad
add
xchg
or
push
sbb
movsb
hlt
xor
sbb
cmpsb
add
push
cmp
mov
sbb
adc
aaa
aaa
movsb
icebp
loope
xor
mov
aas
and
movsb
sbb
adc
and
ja
test
js
outsb
cltd
push
adc
cmp
adc
jo
fisttpl
sbb
dec
incb
jle
xor
notb
std
cmc
test
jl
adc
mov
xor
das
std
cmc
faddl
pop
icebp
sarl
movsb
inc
sub
fistps
fwait
xchg
stos
xorl
adc
dec
and
lods
ret
inc
push
call
loope
add
lcall
mov
inc
addr16
add
movb
inc
mov
mov
inc
dec
std
shl
xor
push
add
cmp
test
loope
push
test
minps
adc
jecxz
xchg
jmp
ss
les
loop
inc
rorl
stc
jmp
les
hlt
es
cs
jecxz
or
lea
mov
or
das
cmc
pop
lods
dec
mov
sbb
adc
inc
daa
dec
enter
sti
pop
cmp
dec
clc
mov
or
adcl
adc
xlat
xchg
xchg
push
fisubrl
pusha
jge
cltd
fidivrl
mov
lret
push
cmpsl
ljmp
pop
ljmp
ds
mov
shll
pusha
ret
call
test
or
testb
jo
mov
orl
mov
and
pop
icebp
mov
push
mov
sbb
pop
inc
inc
adc
cmc
jo
popa
mov
xor
push
pop
add
pop
fldl
pop
mov
inc
rdmsr
mov
xchg
or
inc
dec
cld
popf
outsl
rorb
ror
mov
test
js
xchg
loope
sbb
mov
add
in
add
or
add
push
rep
fwait
loop
mov
loope
aam
out
add
stc
add
mov
adc
cmp
shrb
test
pop
jmp
fisubrl
mov
outsb
mov
inc
sbb
or
cmp
mov
inc
mov
loopne
push
outsb
imul
jle
xchg
out
cmp
imulb
pop
sbb
xchg
mov
and
fwait
mov
mov
jecxz
mov
shll
sbb
scas
faddl
push
sub
pop
cli
xchg
test
mov
sbb
popa
cmpsb
and
dec
add
movsl
push
scas
sub
adc
push
adc
sbb
push
fisubl
inc
inc
fistpll
mov
inc
add
mov
mov
insb
loope
xchg
pop
adc
inc
mov
or
mov
int3
inc
xchg
jecxz
pushf
dec
cmp
fistpll
sarb
push
test
cld
push
daa
push
js
fdivr
sahf
and
ret
mov
std
jmp
sbb
push
and
and
add
add
cs
push
fbstp
mov
negl
sbb
jp
jmp
sbb
insl
leave
clc
dec
scas
push
dec
aas
cmpsl
mov
lahf
mov
push
cmp
test
mov
dec
push
mov
cs
adc
dec
mov
loopne
test
lcall
clc
mov
das
je
mov
mov
das
sub
dec
pushf
jle
repz
cmc
pop
or
jnp
testb
mov
pop
lds
outsb
xchg
dec
popf
ss
enter
lds
ljmp
add
push
je
das
inc
dec
movsb
lret
in
pop
loop
jo
or
iret
cltd
inc
insb
or
jae
mov
and
fdivrl
push
xor
es
mov
fisttps
repnz
imul
mov
test
out
iret
adc
xor
test
mov
decl
std
arpl
xchg
push
adc
cltd
adc
mov
icebp
jmp
push
pop
addb
outsb
iret
dec
push
mov
repnz
mov
adc
push
decl
mov
fmul
mov
add
sub
pop
sti
scas
loop
pop
test
lock
mov
aas
inc
dec
and
pop
push
jns
dec
adc
jmp
pop
insb
and
mov
jo
lea
sahf
mov
cmpb
push
repnz
movsl
in
cmp
push
xchg
aas
arpl
sbb
icebp
add
andl
push
incl
cmpsb
xor
jo
lds
dec
pop
push
inc
enter
jnp
and
pop
jecxz
js
iret
aaa
test
fcmovb
cli
cmp
scas
test
sub
cmp
in
dec
test
pop
mov
mov
cmpb
rorl
sbb
das
sub
inc
pop
stos
das
mov
jle
adc
rcrb
cmp
adc
or
pushl
cmp
mov
mov
inc
jb
lea
push
add
lods
add
mov
dec
mov
ret
sarb
add
dec
fwait
mov
push
clc
add
sarb
pop
sbb
inc
push
shlb
xchg
cmp
sub
push
stos
leave
add
aaa
jmp
rolb
lcall
inc
lds
mov
inc
cmc
adc
xor
loope
test
loopne
pop
or
dec
push
mov
arpl
popa
jne
mov
mov
stc
ret
aas
pop
add
add
hlt
mov
and
jg
pop
adc
xor
roll
or
mov
cmpsb
call
cmp
pop
aaa
int
enter
repz
and
or
mov
add
aad
inc
test
mov
mov
push
test
nop
dec
imul
stos
icebp
or
dec
rclb
dec
inc
adc
sahf
mov
lock
incl
out
sti
inc
xchg
cmc
inc
popf
adc
sbb
lods
fisubrl
adc
scas
mov
cmc
aam
pop
fwait
adc
push
es
pop
jb
pushf
mov
inc
insb
push
aam
stos
rcrl
mov
pusha
pop
in
test
or
and
sub
or
fisubs
xchg
repz
int
sub
aam
ss
bound
sbb
jno
push
test
and
mov
mov
jno
lock
xor
cld
lcall
jge
and
iret
lock
ret
popa
xchg
push
cli
cwtl
xor
imul
mov
test
les
fucomip
insl
nop
xchg
lds
adc
sti
pop
mov
lret
aam
lods
popa
cltd
into
xchg
pop
aaa
inc
std
clc
ds
cs
adc
arpl
mov
fsubs
mov
jg
ljmp
arpl
jb
fcompl
rolb
mov
jno
adc
dec
iret
ljmp
pop
or
mov
inc
aam
push
add
mov
dec
in
clc
jg
repz
inc
pop
jge
shr
sub
pop
testb
adc
mov
and
es
sub
roll
ljmp
inc
aad
ret
xor
xchg
inc
data16
inc
add
pop
lock
cmp
cs
enter
call
mov
sbb
sbbb
cmc
aas
divb
mov
sbbl
fwait
shll
dec
ret
gs
mov
ret
cmp
jae
inc
ficoms
jae
cld
cmp
inc
in
xchg
scas
xchg
sti
cmpb
sarb
add
mov
sub
loopne
jae
aam
dec
loope
es
mov
jl
dec
push
enter
cmp
sub
mov
xchg
js
push
jg
mov
mov
bnd
daa
mov
mov
bndstx
fldt
sub
cmpsb
cmp
adc
or
add
mov
cmp
jo
jbe
push
test
shr
pop
or
sti
or
push
testb
and
adc
and
dec
pushf
jl
xor
cmp
lahf
lods
push
stos
xchg
faddl
cwtl
push
jne
dec
mov
lret
jae
push
mov
sub
and
jmp
dec
shrb
pop
push
jg
popa
scas
clc
jns
xchg
and
xor
lock
scas
jecxz,pt
dec
xchg
and
cmp
outsb
cmp
ret
cmp
and
rolb
dec
lret
mov
mov
mov
outsl
xor
pop
addr16
pop
sub
mov
jmp
in
aad
jo
stos
fstp
push
rcr
js
inc
icebp
jmp
icebp
dec
push
das
nopl
clc
insl
cmpsb
pop
lahf
jno
mov
cmp
iret
ss
fisttpl
add
jns
fistl
fwait
pop
sub
add
out
sahf
jo
jmp
pop
fimuls
jo
das
leave
sbb
sbbl
pop
push
mov
nop
or
adc
and
mov
dec
push
int3
adc
pop
mov
cmpsb
sub
into
lea
pop
xchg
dec
cmc
jo
std
shll
mov
cmp
pop
pushf
push
icebp
inc
inc
ficoml
mov
enter
loope
cmp
lock
iret
jle
inc
cmp
add
cmp
stc
mov
into
out
cli
stos
cmp
mov
mov
out
fbld
lock
movb
push
iret
jo
in
adc
cltd
xor
loope
add
xchg
push
imul
jg
jnp
inc
add
jbe
lcall
and
mov
lahf
imul
cmc
idiv
enter
and
mull
sbb
flds
mov
sbb
jnp
sbbb
dec
mov
lret
mov
add
pusha
lret
pop
xchg
ljmp
sbb
push
fmull
mov
adc
mov
jbe
xchg
in
enter
ljmp
or
pop
das
lahf
aaa
sti
adc
jae
dec
jne
xor
inc
call
mov
cld
push
rolb
and
mov
push
test
adc
cld
decl
mov
or
mov
fcoml
or
ret
inc
add
xchg
scas
mov
add
add
sub
jl
arpl
mov
xchg
inc
or
add
cmpsb
inc
roll
add
mov
pop
daa
cmpsb
mov
adc
mov
dec
and
jg
test
add
aam
je
sarl
jne
add
lea
mov
scas
daa
sbb
stc
je
jnp
xor
push
jae
xchg
stos
jno
aaa
and
lock
pusha
and
lock
outsb
stc
ficomps
dec
jmp
in
mov
push
into
sub
popa
add
push
jo
xor
sub
scas
fucomp
aas
mov
xor
lods
lea
out
adc
adc
sbb
cli
out
xor
sub
push
aad
outsl
and
andb
icebp
lods
mov
popa
or
rorb
and
sub
daa
sub
test
inc
es
and
std
fwait
xor
mov
xor
xorb
sbb
mov
and
mov
sarl
aaa
or
jp
sarl
push
lock
sti
add
jae
call
xor
aaa
les
fnstcw
sbb
sub
sar
dec
ret
or
imul
outsb
rcrb
pop
out
push
out
sub
ja
or
sbb
pop
jecxz
add
cs
jge
into
cmp
js
push
int
mov
mov
and
and
hlt
je
jmp
sar
jmp
fcomps
xor
outsl
andb
cmpsl
jo
dec
xor
or
loope
mov
add
imul
cmp
lret
xor
mov
pop
clc
xor
xchg
cwtl
push
dec
test
negl
pop
or
pop
jns
push
inc
push
and
js
push
loopne
push
mov
lahf
test
sub
sbb
inc
fstpt
or
es
pop
repnz
lock
lahf
add
shl
push
adc
jbe
fildll
cmp
andb
ds
add
pop
out
roll
mov
sub
mov
cli
loope
mov
mov
adc
push
popf
cltd
mov
ss
rorb
or
mov
xchg
pop
js
push
out
rorl
js
fwait
xor
inc
data16
sub
pop
mov
scas
sbb
pushf
push
loope
and
out
inc
and
pop
ret
xor
bsr
sahf
mov
xor
jmp
jo
outsb
mov
sub
hlt
sahf
xchg
and
mov
shlb
and
test
push
std
mov
jle
pop
dec
jo
adc
cli
push
cmpsl
mov
jnp
loop
dec
lret
xchg
add
xchg
push
xor
aad
push
or
xor
test
push
inc
and
fsubrl
mov
xchg
sti
mov
in
into
mov
ud0
add
mov
jae
mov
cli
dec
add
cld
lret
pop
or
xor
push
mov
push
jns
cli
dec
dec
fs
adc
andb
cwtl
je
cld
aam
mov
add
cld
in
xor
imul
repnz
and
js
sub
mov
mov
outsl
ret
jb
sbb
enter
jo
push
or
mov
pop
jge
xor
xor
mov
addl
test
or
push
fsubs
fcmovne
sub
in
pop
rolb
sub
bnd
pop
imul
push
pop
shl
enter
decl
dec
enter
fidivl
add
orb
xchg
lahf
mov
test
sarb
inc
rorl
or
inc
sahf
sahf
iret
mov
mov
xchg
or
ja
cwtl
jg
ljmp
mov
das
lods
inc
mov
inc
or
pop
jecxz
pop
push
sbb
out
xchg
outsl
jno
js
cmp
mov
test
add
lock
and
dec
enter
loopne
in
stos
sub
ret
les
push
mov
cmpsl
and
mov
cmc
mov
jo
rorl
enter
scas
sbb
dec
sub
mov
loope
sub
std
cmp
in
mov
inc
lea
jmp
push
xor
aad
in
outsb
mov
insl
and
xor
fcoms
rcll
stc
jo
push
pop
out
pop
mov
pop
daa
and
imulb
pusha
pop
test
insl
popa
loope
xchg
mov
jg
cmove
inc
sbb
jns
mov
sar
mov
outsl
mov
xor
inc
push
rcrb
xor
adc
push
dec
inc
jo
pop
or
add
adc
add
fisttpl
jg
cmp
js
nop
jmp
xchg
dec
outsb
push
mov
js
sbb
dec
rcrl
cli
sub
push
sbb
sub
outsb
fdivrp
call
hlt
lret
or
inc
sub
cmp
mov
popa
jne
nop
sub
cmp
and
pop
push
push
push
and
sbbb
sub
call
push
cmpsl
test
shrb
test
movsb
pop
enter
loope
pop
push
pop
out
negl
pop
pop
jge,pn
shlb
cli
xchg
cmp
dec
dec
adc
add
cmp
dec
push
or
das
xlat
mov
add
or
and
outsl
fidivl
and
addr16
push
adc
call
imull
movsl
sbb
sbb
push
jo
cld
cld
sbb
aam
lret
inc
outsl
mov
xor
push
adc
cmc
enter
shrl
cmpl
dec
leave
gs
sub
jecxz
in
insl
cmp
gs
lds
inc
jge
lcall
or
into
test
mov
sub
pusha
aad
iret
cmpb
cmp
mov
push
cmp
dec
jnp
aas
push
fstl
outsb
push
addr16
cltd
sub
mov
push
clc
cmp
and
xor
loop
stc
mov
shll
sbb
pusha
jmp
arpl
lret
in
pop
mov
iret
push
push
loopne
fisttpll
lods
popf
ficompl
pop
jle
xchg
gs
jl,pt
in
stos
in
sarl
lock
or
icebp
xchg
mov
xor
and
and
in
fwait
sub
cmpsb
sbb
cld
mov
jle
adc
pmullw
pop
cmp
cmp
bound
mov
sbb
loope
movl
push
into
hlt
test
clc
add
xor
in
xor
incb
inc
dec
insb
push
inc
loope
pop
dec
mov
jno
inc
loop
xchg
lock
fucom
mov
aaa
inc
push
repz
mov
adc
hlt
cmpsl
aad
ds
incl
fwait
xchg
sbb
xor
into
push
push
adc
lret
push
inc
insl
jle
jo
in
push
shlb
mov
rcrb
aad
add
cmp
or
mov
xchg
xor
cmp
add
xchg
inc
stos
dec
pop
ljmp
mov
add
pushf
sub
outsb
lock
clc
das
les
test
xchg
inc
sbb
lcall
cld
faddl
mov
xorl
mov
adc
jecxz
add
lcall
insb
push
and
lock
mov
mov
lahf
mov
mov
arpl
cli
sbb
popf
sub
sbb
inc
mov
loope
icebp
insl
fucom
lret
mov
adc
mov
loopne
decb
imul
and
pusha
or
jmp
cmp
jo
and
es
loop
xlat
pop
cld
xchg
cld
mov
mov
loope
sbbb
outsl
push
movsl
push
test
mov
das
or
outsl
jp
add
pop
mov
mov
inc
aaa
inc
test
ret
pop
ja
arpl
dec
and
pop
fistl
add
dec
jmp
sbb
xor
jno
mov
js
ret
and
out
shlb
int
out
data16
adc
push
xchg
pop
mov
xor
jns
cmpb
cmp
popa
and
ficomps
test
sbb
sbb
sub
outsb
sub
lahf
jge
cmpb
xchg
in
sub
cmp
mov
aad
test
in
ss
mov
add
mov
cltd
adcb
and
dec
arpl
mov
cwtl
push
fnstenv
orl
mov
sub
ret
ret
pop
mov
ljmp
cmp
out
inc
and
shl
iret
and
leave
mov
dec
push
mov
cmp
aas
das
or
add
test
inc
sub
ret
cmp
imul
add
out
and
jp
mov
jp
adc
rcll
or
loope
es
push
mov
movsl
add
dec
aad
mov
add
adc
in
push
fisttps
scas
pop
aad
lock
std
lock
jb
cmp
mov
or
jg
mov
jmp
out
push
scas
jmp
shrb
shlb
pop
iret
inc
jl
jp
mov
and
sub
pop
mov
or
ret
rclb
or
adc
shrb
pop
stos
adc
push
xchg
and
cmc
cmpsb
push
test
push
sbbl
out
fdivl
repnz
xlat
jbe
lods
es
sub
fisttps
aas
pop
mov
cmpl
xchg
add
sub
mov
bound
in
and
adc
xchg
repnz
jmp
push
inc
in
add
out
test
or
aaa
aas
pop
sahf
scas
jl
dec
int
cmp
add
xchg
mov
movsb
jmp
clc
cld
jmp
cmpl
stc
sbb
jnp
les
mov
cmp
lods
dec
call
mov
push
sub
ret
cli
sub
cld
mov
rclb
xor
mov
mov
ljmp
outsl
xchg
xchg
test
mov
sub
push
insb
add
sub
pop
mov
movsb
xchg
xchg
rclb
dec
xchg
mov
xchg
mov
imul
push
scas
idivl
pop
sub
in
inc
mov
pop
push
cli
inc
mov
and
add
jo
pop
call
in
xlat
fmuls
cmp
lock
or
icebp
push
add
jno
sbb
scas
gs
lret
rorl
gs
dec
adc
rclb
lds
ficoms
sub
nop
adc
dec
inc
fidivs
in
movsb
pop
push
gs
pop
xor
icebp
sbb
mov
outsb
push
stc
mov
or
add
xor
sbb
jle
je
out
fstpt
sarb
mov
xor
rclb
out
mov
test
push
js
and
cmp
imul
and
aad
jle
cs
push
scas
lret
dec
mov
adc
and
or
lret
int
inc
pop
dec
orb
jp
insl
inc
mov
adc
stos
push
cld
mov
cmpsb
cld
lret
sub
dec
push
add
cmc
inc
pop
je
mov
out
bnd
dec
mov
adc
outsl
mov
sbb
push
jnp
xlat
add
pop
inc
fisubrl
jb
and
mov
lahf
pop
insb
sbb
fs
or
sbb
les
scas
stos
dec
mov
jmp
sti
dec
mov
ja
imul
out
leave
pop
icebp
ret
mov
pop
mov
sti
inc
aas
pusha
lods
jb
jge
test
mov
ret
in
test
add
aas
push
jb
pop
push
movsl
jg
and
lods
int
mov
and
sar
sbb
fiaddl
sub
ljmp
out
mov
xchg
jns
sub
negb
fmuls
dec
inc
mov
and
sbb
mov
adc
fsubp
jbe
in
subb
in
lds
loopne
ss
cwtl
mov
call
into
jnp
push
test
cmp
mov
cmp
test
xchg
sahf
pusha
sbb
or
inc
jecxz
decb
or
jecxz
gs
adc
addr16
xchg
jb
mov
jo
clc
xor
jp
adc
ficompl
je
mov
sbb
jo
in
dec
inc
dec
inc
jle
fildl
popa
or
cmp
mov
aam
add
mov
add
sbb
push
cmp
cmp
ds
add
pop
and
dec
and
mov
mov
dec
push
xchg
mov
int
mov
shl
mov
cwtl
ljmp
mov
xchg
pop
adc
pop
sbb
orb
dec
xor
mov
xor
inc
pop
stc
nop
ss
popf
jb
jmp
ret
sbb
mov
add
ret
mov
jecxz
outsl
popf
lock
repz
call
adc
sahf
inc
jnp
dec
push
aas
and
jg
dec
and
xchg
hlt
mov
mov
imul
arpl
pop
or
jge
cmp
icebp
inc
mov
cmpsl
lret
imul
dec
aad
out
pushl
add
adc
mov
clc
lret
les
insb
mov
scas
outsl
shrl
push
icebp
je
fldenv
push
mov
test
pop
pop
push
pop
loope
add
ds
dec
xchg
loope
pop
or
int
adc
int
ror
adc
pushl
repnz
xorl
cltd
inc
pop
mov
push
dec
jo
scas
xor
mov
cld
icebp
xor
mov
sub
mov
ret
ljmp
sti
stc
jnp
out
sbb
xor
gs
inc
les
mov
cmpsb
and
addb
and
push
xchg
arpl
in
push
aaa
cmp
sub
fnsave
in
jmp
adc
push
pop
add
add
mov
xor
cltd
inc
jp
jb
popf
faddp
hlt
xor
push
jmp
dec
jo
mov
push
inc
sub
adc
mov
mov
push
mov
adc
hlt
dec
inc
mov
add
cmp
dec
mov
and
mov
cs
cmp
loope
sbb
loop,pt
cwtl
stos
pop
shrb
inc
ds
mov
lds
pop
aam
xchg
fsub
es
lds
mov
lcall
fidivrl
dec
hlt
addb
arpl
xchg
dec
aaa
lock
xor
mov
adc
push
fnsave
test
fs
movsb
mov
push
adc
fisubl
fs
fiaddl
dec
cmp
dec
or
jp
popl
cli
sarl
cmc
movsl
or
adc
orb
addb
std
sbb
gs
imul
sbb
sub
xor
jp
mov
mov
pushf
inc
cmp
pop
lds
ret
and
push
and
flds
repz
imul
inc
xor
test
ret
pop
cmp
jp
repz
xor
or
pop
sbb
adcb
inc
int
jo
testl
mov
lds
idiv
das
in
mov
cli
inc
dec
xchg
js
pop
in
sbb
insb
lret
pop
aam
inc
mov
xor
sub
pop
cld
cwtl
add
cld
adc
lock
test
data16
cmpsb
notb
push
inc
call
icebp
push
lea
outsl
das
adc
xor
dec
push
orl
aam
movsb
or
sbb
add
in
inc
jae
shll
int
out
cmpsl
push
xor
xor
dec
jge
movsl
push
push
dec
mov
in
rclb
dec
pop
adc
inc
sbb
xchg
jbe
fisttps
rcll
add
dec
inc
dec
push
std
mov
adc
lret
push
cltd
sbb
test
mov
loopne
call
outsb
inc
popa
push
push
ljmp
cmp
inc
pop
xchg
imul
mov
push
aaa
jno
lret
mov
insl
mov
movsl
lret
cmp
shll
mov
lds
jl
xor
int
mov
jae
dec
aam
jle
xchg
or
cld
xchg
inc
jge
push
dec
dec
push
inc
mov
mov
lods
fdivrp
rcr
pop
add
xchg
pop
pop
pop
lock
jbe
scas
test
xchg
add
add
test
sub
sahf
cmc
mov
or
gs
mov
and
aad
mov
xor
arpl
lahf
or
or
adc
jnp
dec
lds
xor
sbb
enter
push
adcl
ss
inc
loope
add
push
seta
mov
pop
sub
dec
pop
sbb
xchg
mov
pop
lret
push
jl
inc
ret
mov
call
out
adc
js
xchg
lret
jo
adc
scas
xor
adc
mov
insb
mov
mov
push
das
fsub
mov
lds
sub
or
loope
ja
mov
jp
push
push
mov
insl
add
je
je
xchg
insl
andb
mov
pop
stos
aam
test
mov
cli
outsl
pop
in
pusha
mov
mov
cmp
stos
push
xchg
fdivs
imul
and
sbb
call
enter
rcrl
mov
dec
jge
xor
xchg
mov
jecxz
loopne
add
adc
pop
xor
jp
mov
and
push
popa
pusha
in
test
lret
imul
loope
aam
adc
je
xchg
push
add
pop
stc
sbb
repz
mov
or
or
roll
dec
movsb
and
push
aad
mov
ret
lret
insb
test
xchg
adc
push
push
mov
lret
shrb
insl
loope
xchg
aad
and
das
mov
push
leave
xor
add
dec
jmp
xorl
and
add
loope
and
fiadds
lds
outsl
adc
sahf
sub
imul
jbe
or
or
cltd
ret
pusha
adc
push
jg
orb
fcmovbe
test
lods
out
or
dec
xor
es
mov
xchg
popa
dec
add
cld
das
mov
mov
mov
jecxz
jecxz
jbe
ljmp
dec
jecxz
mov
dec
pushf
loopne
cmp
jbe
fcoml
orl
sbb
adc
or
insl
clc
das
jbe
daa
insb
sub
mov
aaa
adcb
out
lds
pop
lahf
cli
fsqrt
mov
jp
mov
std
push
and
lods
lods
inc
cmpsb
mov
pusha
inc
loop
cmp
test
sub
push
mov
sbbb
ljmp
adc
adc
push
push
movsb
and
sbb
std
pop
fcoms
decl
push
and
jno
roll
or
stos
lods
mov
cmpsb
loope
shll
ja
dec
add
fwait
in
pop
pop
test
loopne
cli
divl
push
cli
lahf
xor
cmp
rcll
int3
sbb
lods
add
cmp
jecxz
pop
or
decl
xor
mov
push
decl
pop
xor
dec
das
movsl
add
sbb
add
nop
and
push
jae
jbe
subb
ficoml
sub
and
mov
add
and
int
gs
pushf
and
testl
sti
test
test
xchg
ret
push
les
mov
std
and
pop
rorb
in
or
mov
push
fdivrp
out
cmpsl
loopne
push
mov
jmp
shll
mov
movsb
in
enter
fdivrs
loopne
nop
adc
jl
inc
or
add
and
insb
mov
dec
jp
sub
sahf
mov
dec
cli
aaa
popa
dec
cmc
ljmp
lcall
cmpsl
leave
and
loopne
scas
insb
mov
out
add
rcll
and
cmp
or
sub
dec
and
pop
leave
jno
incb
aad
xor
or
pop
add
je
pop
mov
xor
push
mov
cmp
mov
jl
ret
in
out
div
add
repnz
jl
push
xor
cmpsl
push
or
xor
aaa
rcr
fcmovbe
sbb
lret
ljmp
loope
push
sub
xchg
add
jb
pop
push
mov
jg
xchg
lods
mov
cmpsb
jnp
ds
cltd
lret
jbe
test
test
mov
xchg
sub
fidivrs
mov
pop
ss
loop
mov
fadd
mov
and
fldenv
popa
rcll
cwtl
bound
inc
xchg
sub
pop
rcrb
xorl
sti
jg
ss
xchg
pusha
adc
stos
mov
add
fisttpll
xor
adc
and
push
punpcklbw
mov
scas
repz
jecxz
inc
fstpt
in
js
dec
fildl
ficomps
into
adc
dec
pop
xor
stos
jmp
xor
mov
pop
jp
add
mov
cltd
shrl
and
xor
js
adc
mov
test
cld
push
pushf
loopne
cmpsb
mov
fistpll
ret
add
ret
call
in
jmp
in
call
mov
jb
rcll
scas
or
ljmp
fcompl
xorl
jge
lock
cmp
shl
cld
adc
das
xchg
mov
pop
push
inc
mov
jg
test
sub
test
sahf
push
out
repnz
cld
hlt
lods
ljmp
inc
xchg
movl
mov
and
sub
test
outsl
or
or
pop
mov
adc
fstpl
lea
in
mov
sub
adc
je
inc
add
and
pop
out
rol
inc
jmp
mov
hlt
adc
add
imul
and
test
popa
scas
loop
lods
dec
fimuls
fstpl
and
pop
iret
add
dec
lods
jg
test
decl
rol
cmc
js
add
jg
or
pop
or
clc
and
es
or
add
inc
push
cs
ret
dec
jne
shlb
mov
icebp
dec
jg
int
adc
push
mov
ret
dec
adc
cmp
mov
push
or
xchg
dec
mov
add
xchg
test
loopne
mov
pusha
movsl
or
das
or
add
add
inc
arpl
mov
dec
mov
add
cmp
jecxz
aas
dec
sub
adc
push
test
ret
lret
adc
push
movsl
sbb
not
jg
and
inc
inc
jns
inc
mov
testb
and
es
adc
lea
enter
pushl
sbb
inc
into
adc
sbb
in
cmp
outsl
xor
and
pop
aam
sub
lcall
jecxz
push
xchg
lock
dec
mov
test
pop
push
ret
hlt
hlt
mov
sub
or
xchg
loop
shll
mov
movsb
shlb
inc
sub
je
sti
mov
adc
cwtl
push
and
ljmp
inc
adc
or
lahf
push
subl
and
roll
dec
daa
rcrl
pop
mov
sub
sbb
aas
xchg
jne
jmp
mov
pop
dec
add
xchg
mov
sti
push
nop
xor
xchg
jmp
lods
stos
xchg
pushf
sbb
bound
mov
out
fistpll
dec
jle
cmpsb
pusha
jle
ljmp
adc
mov
or
or
fstl
mov
ret
push
call
push
aad
enter
in
aaa
lods
xchg
inc
inc
pop
stos
out
in
nop
or
fst
sbb
xor
sub
xchg
push
lea
jge
xchg
add
jle
icebp
add
std
das
jge
addl
cmp
movsl
mov
sub
cmpsb
loope
xchg
sbb
call
xor
mov
sbb
adc
jae
jae
jle
xlat
lds
push
push
stc
pop
clc
inc
lds
in
mov
inc
repnz
insb
icebp
leave
bound
clc
adcb
rorb
clc
cmp
push
pop
add
fwait
pusha
pop
cmp
cwtl
and
xor
pushf
cmp
mov
or
gs
mov
aas
fisubrs
frstor
daa
js
test
daa
xchg
mov
mov
xchg
sub
mov
mov
xchg
es
test
mov
ja
repnz
fstpt
clc
mov
into
cs
xchg
ljmp
sub
fiadds
mov
mov
adc
jno
add
arpl
and
shll
stc
enter
cld
decl
imul
aad
in
mov
add
inc
outsl
cwtl
pop
jo
dec
jecxz
push
das
sbb
ret
iret
xchg
mov
jno
outsb
clc
cmp
les
scas
fmull
xor
mov
or
inc
fsubs
xchg
cwtl
push
inc
pop
mov
xor
add
in
aaa
cmc
mov
outsl
mov
jecxz
leave
pop
nop
jmp
push
movsl
push
push
sub
mov
mov
or
dec
jbe
sub
mov
xchg
les
xchg
ficoms
subb
dec
pop
gs
les
adc
sbb
push
sti
sarb
push
adc
push
mov
or
and
lcall
adc
lret
pushl
pop
or
orb
push
jb
and
outsl
push
push
es
call
add
mov
jb
xchg
push
and
pop
js
mov
jo
lds
sub
mov
outsb
xchg
adc
fdivl
popf
or
test
loop
sub
push
inc
lods
mov
xchg
or
mov
jne
mov
adc
mov
xchg
imul
int3
mov
jo
and
mov
mov
popa
jne
adc
pop
jb
in
sti
pop
sbb
testl
push
fs
in
or
iret
push
cmp
cli
ljmp
push
mov
jb
mov
inc
lea
rclb
rclb
jae
cwtl
loop
aaa
aas
insb
call
cmc
iret
lock
and
pop
or
aaa
hlt
loop
adcb
int3
cmp
pushf
xchg
jbe
mov
pop
mov
adc
mov
gs
mov
cmpb
jecxz
negb
adc
mov
mov
jl
pusha
cmp
hlt
lods
popf
js
pusha
ljmp
rcrb
bound
or
mov
call
push
jmp
and
rcr
test
xchg
xchg
jnp
mov
pop
dec
test
dec
pop
cmp
fiadds
lds
add
jo
add
enter
in
pushf
into
std
ljmpw
pusha
ret
cwtl
std
cltd
push
cmp
lods
jg
jo
cmpsl
pop
aam
pusha
inc
mov
push
or
pusha
mov
insl
mov
aaa
fnstcw
mov
mov
stos
out
or
mov
out
xor
dec
xchg
sbb
int
bt
jnp
inc
or
cli
outsl
iret
mov
and
rolb
outsb
push
sub
cli
sbb
lcall
inc
mov
icebp
mov
xchg
js
push
jmp
mov
fiaddl
jne
lock
lock
mov
loope
sub
mov
jmp
and
aam
inc
jg
jmp
movsl
das
adcb
mov
xchg
inc
scas
adc
mov
dec
mov
repnz
cmpsb
sub
das
data16
outsb
sbb
lret
and
stos
xchg
push
repnz
adc
call
ja
push
push
mov
pushf
movl
add
sbb
xchg
push
sahf
jp
aad
fidivl
sahf
sbb
cmc
xchg
xchg
mov
out
test
pop
fidivrs
outsl
pop
icebp
push
mov
adc
addr16
push
xor
xchg
pop
xchg
fimull
xor
mov
in
dec
lock
cmpsb
mov
out
negb
outsl
add
add
inc
lock
xor
jae
jns
nop
jp
jl
jg
scas
inc
or
imul
push
adc
lea
jo
push
sub
pusha
cmp
jnp
loope
push
call
std
pusha
scas
popa
sbb
mov
popa
jecxz
imul
xor
or
dec
negl
mov
adc
out
loopne
pushl
cmp
mov
dec
icebp
ret
imul
mov
sbb
mov
cmp
insb
pop
adc
pop
push
xor
rorb
loopne
xor
xchg
jbe
mov
xchg
mov
in
add
jge
jg
data16
adc
ret
ljmp
inc
sti
repnz
xor
jecxz
mov
mov
jecxz
sub
dec
shl
jae
lahf
adc
mov
std
dec
mov
sub
imul
inc
mov
int
lret
mov
stc
loope
mov
dec
cmpb
icebp
sbb
sub
mov
mov
inc
data16
sbb
jl
add
add
scas
inc
sbb
add
pop
mov
outsl
pop
ja
xchg
aas
or
inc
sub
mov
xorl
inc
pop
inc
test
mov
xchg
pop
adc
popf
test
xchg
pop
jle
mov
adc
adc
dec
mov
push
inc
icebp
sub
insb
rol
sub
ljmp
das
rclb
lods
dec
iret
rolb
cwtl
mov
dec
add
leave
dec
jb
pop
push
mov
or
mov
movsb
mov
repnz
rcr
ficoml
mov
insb
and
imul
jg
pop
add
or
out
dec
cmp
pop
rorb
loopne
pop
adc
clc
or
pop
js
mov
inc
sbb
imul
or
test
ds
jp
das
xlat
int
and
jb
les
cli
jle
cmp
pop
int
dec
push
leave
outsl
adc
add
into
gs
adc
nop
lods
bound
fstl
ja
call
mov
pop
fisubs
mov
add
das
add
adc
hlt
jmp
sub
iret
mov
mov
imul
pusha
and
insl
rcrb
and
dec
lret
add
xchg
sub
fdivrs
inc
out
test
je
jb
jnp
sbb
fdivr
jnp
mov
push
xor
sbb
sub
add
jno
arpl
adc
int3
idivb
insl
push
mov
mov
push
mov
add
into
push
push
push
pop
adc
inc
scas
or
xchg
lea
add
sti
test
dec
out
popa
rclb
aaa
rcll
jle,pn
fildl
xor
adc
scas
ret
shll
pop
inc
push
fwait
and
dec
js
xchg
lods
cmp
mov
lea
test
aaa
outsl
and
adc
xor
mov
lret
das
sub
das
lahf
hlt
iret
mov
dec
aam
pop
jo
enter
mov
rorb
cmp
clc
pop
das
pushf
adc
lods
out
mov
wrmsr
and
cmp
test
int
fisttpll
fyl2x
jg
loope
mov
fdivrs
mov
subl
inc
stc
std
dec
out
lea
and
push
mov
jecxz
xchg
fs
dec
movsl
in
fildl
mov
outsl
adc
adc
fiadds
dec
or
xchg
icebp
pop
push
xchg
ds
out
dec
jns
add
movsb
add
or
sbb
xchg
data16
insb
add
inc
cmp
jae
out
mov
shrb
xor
mov
test
xchg
xchg
mov
cmpxchg
sbb
arpl
pop
clc
clc
fcmovnbe
test
test
inc
mov
and
cli
pop
jne
cwtl
mov
lods
xchg
decl
std
mov
xchg
or
notb
dec
xchg
mov
mov
clc
push
push
sti
add
mov
aad
jge
fs
push
pop
inc
ljmp
xchg
push
sbb
inc
arpl
aam
inc
or
stc
mov
movsl
add
stos
repnz
pop
jle
ja
adc
nop
movsb
hlt
cmpsb
bnd
aaa
ds
pop
fildll
test
int3
mov
adc
notb
mov
inc
arpl
mov
mov
imul
xlat
das
xorl
inc
inc
mov
shrb
in
mov
call
pop
push
repz
xchg
jg
push
xchg
fildl
ds
mov
cmp
mov
jb
in
mov
dec
pop
add
mov
cmp
sbb
mov
sub
mov
mov
pop
pop
mov
jmp
mov
data16
in
add
push
add
push
lahf
mov
paddusb
icebp
das
dec
mov
push
lret
cld
jg
dec
das
pop
int3
rcrl
xor
push
stc
jecxz
lds
das
sbb
lock
dec
sahf
or
hlt
sti
cmc
nop
je
cmp
call
sub
xchg
fisttpl
test
lds
ja
inc
push
repnz
outsb
dec
in
push
and
sbb
jmp
loop
decl
shrl
adc
cmp
jle
ja
daa
movsb
xor
fucom
test
aad
ja,pt
sub
mov
pop
mov
das
ja
push
icebp
mov
cmp
cmp
jae
jno
mov
js
mov
repz
or
mov
cli
hlt
scas
iret
enter
sub
cmp
inc
pop
cwtl
or
inc
clc
jns
rep
rorb
insb
shll
inc
cs
jmp
adc
mov
out
ret
mov
add
ret
push
mov
inc
dec
mov
aas
pop
mov
hlt
sub
test
mov
push
cmp
enter
scas
shlb
insb
fisttpll
mov
pop
jg
inc
lahf
outsl
stos
call
and
xchg
je
sar
jmp
insl
xlat
mov
lgs
outsb
cmp
cld
shrb
mov
mov
inc
loope
test
add
les
xchg
stos
jnp
mov
jecxz
test
lods
clc
pop
shll
cmp
sahf
cmp
andl
call
pusha
xor
mov
ja
rcll
inc
loopne
inc
lahf
fs
add
aaa
sub
xchg
mov
das
sbb
clc
adc
pop
xchg
jb
xor
scas
fidivl
mov
mov
push
push
test
dec
shlb
ret
add
push
cmp
outsl
adc
stos
vminss
daa
shlb
dec
mov
or
cmpsb
mov
flds
fwait
dec
add
pop
addr16
js
cmpsl
loopne
insl
cmc
adc
leave
add
jp
js
sub
pop
jg
xor
sarb
pop
and
aam
xchg
sahf
inc
mov
jo
mov
ret
cld
mov
icebp
and
stos
pop
into
pop
lcall
mov
add
test
fnsave
xor
mov
idiv
in
dec
push
fwait
pop
push
int3
sbb
mov
mov
cmp
inc
mov
cmp
leave
scas
mov
je
loope
out
clc
or
or
cmp
movsb
xchg
and
and
dec
js
mov
cltd
insb
mov
jo
sti
mov
xor
add
ss
jo
push
dec
dec
and
sbb
or
ret
mov
and
dec
popf
dec
insl
int
insb
js
add
inc
push
stos
and
stos
loope
in
mov
and
mov
push
into
mov
dec
ret
int
outsl
push
lock
imul
mov
lcall
int3
jo
mov
cltd
mov
bound
or
in
in
leave
jge
ljmp
cmp
mov
lahf
mov
in
cmp
mov
notb
imul
xchg
add
pop
dec
inc
int
out
das
std
ljmp
out
gs
jge
int3
cmp
cwtl
and
lret
xchg
pop
add
loop
pop
scas
shlb
mov
ret
or
arpl
mov
movsl
popl
mov
ficompl
pop
or
xchg
jne
xchg
xor
or
rcr
rorl
aad
ret
mov
decl
out
mov
fdivl
push
xchg
sub
mov
mov
clc
and
jae
rol
fcom
xchg
jl
pop
mov
sub
andb
sub
stos
mov
das
add
xchg
les
insb
dec
scas
nop
gs
inc
mov
xlat
adc
xchg
test
js
cmp
pop
xor
imul
xlat
inc
sub
insl
and
inc
inc
mov
jb
imul
pop
andb
and
lahf
add
push
push
mov
call
nop
fsubl
sub
or
aam
dec
adc
fsubrl
les
call
jo
or
dec
out
inc
and
pop
and
jecxz
repnz
mov
adc
das
or
mov
or
mov
adc
xchg
fiaddl
dec
mov
sti
scas
fcomip
pop
arpl
mov
adc
mov
xor
orb
call
jp
mov
orb
sbb
cmpsl
mov
fnstcw
aas
sub
and
mov
push
jne
mov
dec
mov
inc
fcmovb
pushf
enter
ret
jecxz
test
mov
loopne
xchg
mov
or
jno
xchg
cs
mov
mov
cmc
shrb
scas
push
lods
jno
adc
cmp
sbb
push
es
push
or
lcall
push
xchg
loope
sbb
cmp
pushf
in
or
mov
mov
fidivs
faddl
or
xor
pop
cvttps2pi
inc
pop
loopne
insb
ss
pushf
mov
push
jp
pop
mov
jl
inc
pop
cmp
decl
jbe
sub
imul
outsl
cmc
mov
jle
cld
adc
scas
das
lds
imul
mov
mov
push
jl
test
movsl
adc
dec
lahf
mov
push
mov
lcall
adc
jb
imul
in
fimull
mov
insb
sub
cltd
push
xor
jp
fldt
sub
ja
mov
jne,pn
ret
js
jge
pushl
or
mov
out
mov
xor
aaa
loopne
and
das
ret
mov
and
mov
repz
lods
push
arpl
mov
cmc
rolb
mov
push
aaa
xor
push
add
popa
fistps
std
ret
mov
and
sbb
sub
inc
cmp
cmpsb
jbe
xchg
aaa
lcall
mov
mov
test
loop
push
lods
push
mov
adc
push
xchg
clc
dec
cli
push
or
pop
nop
or
mov
xchg
mov
cmp
call
cmpsl
cmpsl
fcmovnb
pop
mov
mov
cld
jne
lret
dec
add
lret
mov
sub
and
jns
outsb
das
popa
mov
addb
test
negl
idivl
pop
cli
mov
push
sbb
push
loop
hlt
rclb
xchg
leave
push
pop
cmp
push
jle
adc
add
sub
stos
stos
hlt
movsl
mov
mov
mov
cltd
cwtl
push
movsl
lret
std
jg
xor
rep
dec
push
mov
jne
fidivrl
add
es
jg
push
iret
pop
and
leave
aad
mov
mov
dec
sbb
in
or
pusha
xchg
mov
or
cli
cmpsb
mov
lds
fcomi
pop
dec
movl
jb
shrl
in
push
repz
je
pop
mov
jp
xchg
lahf
lahf
pop
scas
aaa
xor
ss
out
les
lahf
add
mov
dec
pusha
in
and
jns
sahf
rcrl
rolb
outsl
mov
mov
dec
add
pop
mov
or
xor
les
pop
push
mov
inc
rcll
loop
shrb
pop
or
sbb
push
ficompl
mov
mov
or
sbb
dec
cmc
mov
push
shr
adc
dec
push
push
xor
jg
pop
test
lea
out
mov
add
add
mov
icebp
andl
dec
jl
mov
push
add
xor
rol
inc
inc
cltd
jg
mov
inc
xor
fisttpll
aaa
daa
dec
ficomps
ret
in
sahf
push
jmp
pop
add
xor
or
fistps
fldcw
repz
stc
push
xchg
add
insl
fldenv
and
lea
dec
mov
fcmovb
mov
or
sub
push
lahf
cmpsb
ljmp
xchg
cmp
scas
or
popa
pusha
sti
mov
and
cld
push
cld
push
add
adc
addr16
dec
lcall
and
mov
xor
pop
dec
xor
daa
shl
mov
inc
fadd
imul
inc
mov
dec
lret
push
cltd
in
cmp
dec
mov
dec
aad
add
dec
repz
test
jnp
inc
loop
popa
sbb
rcl
mov
dec
mov
or
and
jne
add
test
push
mov
addl
and
fcomip
aam
sbb
mov
push
sub
inc
loope
dec
jle
pop
dec
mov
mov
cmp
in
shl
lahf
test
xor
call
jg
mov
inc
dec
enter
fcomp
push
pop
mulb
sti
add
jno
pop
and
enter
jecxz
mov
sahf
insl
mov
lds
sbb
inc
cmp
mov
mov
sti
out
mov
es
dec
mov
xchg
dec
push
push
inc
cmp
add
sub
popa
lods
jo
out
pop
adc
fcmovne
adc
pop
imul
popf
mov
jns
fidivl
sbb
push
xor
sarb
das
pop
cli
std
jg
jns
cld
in
add
cmpsb
fmull
por
lea
jmp
cltd
push
fadd
pop
push
pop
pop
add
adc
in
clc
sub
and
popl
inc
fstp
cld
xchg
test
mov
jns
xchg
mov
cmp
jecxz
jecxz
clc
ret
stc
and
push
inc
and
mov
jmp
roll
bnd
scas
or
sbb
inc
pushf
xor
push
sub
mov
ss
add
jmp
lcall
jge
cmp
movsb
mov
sbb
popf
sbb
lcall
or
mov
cmc
and
clc
rcrb
scas
orb
mov
pop
scas
add
or
aad
jns
out
adcb
imul
xor
and
in
clc
mov
add
adc
sub
xor
enter
addl
or
and
pavgb
inc
mov
and
sub
int
ja
scas
scas
push
aam
inc
sti
and
cmp
jg,pt
aad
js
mov
lds
xor
xchg
xorb
adc
repz
ret
ss
mov
cwtl
xchg
enter
out
pop
sarl
bound
es
cld
test
std
mov
adc
adc
into
nop
rol
sub
rcr
ja
rol
mov
sbb
xchg
lock
or
sub
hlt
into
test
pop
shrb
mov
mov
imul
fimuls
xchg
push
in
test
mov
xor
push
sub
cmp
mov
mov
add
subb
loop
jb
hlt
add
cwtl
xchg
mov
test
adc
lahf
sub
stos
push
jecxz
jecxz
jle
sahf
pusha
hlt
movsb
sub
and
out
inc
add
fldt
jo
cmp
push
mov
clc
test
pusha
fbstp
push
sbb
ret
dec
rorb
fcompl
sbb
mov
jbe
pop
pop
lods
pop
mov
fistpll
inc
sbb
inc
adc
pop
repnz
shrb
pop
lret
jbe
fxch
or
add
out
xor
ljmp
std
inc
cmpl
pop
cmp
call
jb,pn
pop
cmpsb
test
mov
aad
push
inc
sub
dec
dec
mov
mov
xor
pusha
rcrl
pop
outsl
sub
add
sbb
pop
mov
iret
sti
push
dec
add
mov
faddp
xchg
sbb
sbb
movsl
adc
mov
adc
cmpsb
push
add
nop
out
shlb
xor
mov
sbb
adc
call
cmc
jmp
clc
push
ficomps
pop
rcrl
mov
and
mov
cmp
jecxz
adc
scas
das
cmp
aaa
and
sbb
cmp
adc
divb
xor
dec
je
test
idivb
adc
adc
pushf
inc
push
jmp
out
push
xor
loopne
and
daa
adc
clc
dec
imul
mov
inc
push
cli
cmp
adc
insl
test
orl
cmp
inc
pusha
cmp
js
addr16
lods
jp
lock
mov
imul
mov
push
jg
xchg
out
rcll
pop
adc
push
adc
xor
pusha
loope
mov
andb
sub
lahf
ja
jns
xor
or
lods
movsl
pop
lcall
fistps
add
adc
movsl
cmp
out
movl
inc
les
jnp
mov
lcall
mov
jecxz
dec
jae
push
std
js
ret
adc
dec
cli
loop
dec
sbbl
in
daa
pop
jg
outsb
dec
or
jmp
xor
pop
aas
jns
xchg
out
pusha
sbb
fcomip
arpl
arpl
pop
std
iret
cmpsb
adc
mov
fs
fcoml
mov
cld
push
inc
lret
xchg
pop
jno
rorl
pusha
lods
addr16
clc
push
scas
hlt
mov
jmp
jmp
andl
cs
ret
inc
mov
push
jnp
mov
aad
inc
sub
popa
mov
dec
sbb
jmp
enter
icebp
mov
jp
stos
adc
ds
test
daa
nop
xorl
lods
cwtl
loope
push
adc
lods
aas
inc
dec
int
inc
outsb
mull
xor
cs
flds
jecxz
push
fcoms
add
inc
clc
divb
sbb
jge
outsl
mov
fidivrl
cmp
mov
mov
cmp
lret
adc
ss
pop
js
push
sbb
and
bound
sbbb
cld
daa
mov
mov
push
mov
jne
dec
loope
xchg
mov
jae
push
jp
adc
cltd
xor
inc
mov
ss
decl
aam
pop
cltd
shlb
xor
pop
sbb
shrl
or
sbb
jge
out
jns
add
cmp
adc
fistpll
mov
xchg
or
mov
lret
jle
dec
lea
pop
jno
sbb
in
aaa
xor
jg
fdiv
aam
pop
cld
cwtl
out
pop
push
mov
daa
stos
xor
filds
pop
daa
lret
faddl
or
add
push
lea
pop
mov
les
ret
xchg
inc
add
sub
push
fisubrl
sbb
adc
xchg
mov
into
outsl
lods
xor
push
pop
mov
sahf
call
clc
sar
add
xchg
aad
or
bound
and
lods
sbb
nop
mov
and
mov
dec
orl
mov
dec
add
in
pop
jle
pop
loopne
outsb
sti
rcrb
test
mov
mov
imul
cmp
xchg
cld
out
test
and
dec
divl
std
enter
and
inc
cmp
xchg
push
xor
jbe
or
outsl
call
icebp
repnz
das
dec
inc
inc
mov
cmp
and
or
stos
add
adc
stos
movsb
xor
enter
dec
or
outsl
mov
cltd
outsl
xchg
fwait
mov
out
decl
enter
mov
inc
add
movb
cltd
mov
xor
addr16
cmp
lcall
pop
js
inc
lea
imull
neg
jp
add
adc
or
xchg
cmpsb
mov
dec
out
jne
jp
loopne
call
fistpll
or
lds
das
push
mov
jb
xchg
ss
or
xchg
adc
enter
xor
inc
outsb
push
incb
adc
stos
mov
pop
push
sbb
rorb
mov
jl
and
sub
cli
xchg
ret
fcoms
and
mov
sbb
xchg
call
cmpsl
movsb
imul
aam
pop
or
ficoml
loopne
sbb
pop
stos
lea
jp
popf
js
add
dec
or
mov
cmp
jecxz
pusha
adc
push
sbb
xchg
add
jecxz
aad
cs
mov
sbb
adc
rcl
jmp
in
mov
push
adc
pop
mov
jp
leave
inc
adc
pop
jns
iret
daa
mulb
fiaddl
xor
nop
pop
sar
sarb
mov
xlat
loope
movsl
fwait
jecxz
push
adc
jecxz
jl
hlt
dec
lahf
dec
fimull
mov
sub
nop
push
scas
ss
sub
out
data16
pop
je
or
pop
cmp
mov
ret
out
shrl
icebp
mov
mov
ja
lahf
roll
push
and
sbb
xchg
bound
out
xor
cmp
cwtl
int
jnp
bound
adc
stos
popa
and
call
fwait
incb
jne
pop
add
adc
mov
pop
pop
jge
cld
pushf
push
sti
cli
shl
js
das
insb
mov
ljmp
mov
sahf
fsubl
mov
es
stos
sbb
jge
fnstsw
or
add
inc
outsl
pop
das
lock
cmp
inc
jmp
sub
push
xchg
das
into
fadds
adc
cmc
jl
aaa
adc
das
mov
xorl
mov
cmp
inc
int3
data16
div
xchg
nop
movb
pop
sbb
rorb
push
jle
xchg
jle
mov
fnsave
jno
int3
enter
pop
icebp
lock
andb
mov
push
xor
mov
test
sub
fwait
mov
enter
jno
cmp
inc
sub
rcrb
sbb
mov
dec
pop
cmp
or
add
and
fcomps
xorl
xorl
stc
into
mov
mov
in
cmp
mov
mov
sub
mov
dec
daa
pop
mov
mov
sub
movsl
es
or
or
xchg
jg
je
jb
xor
cmp
pop
cmpsb
cmpsb
aam
mov
cmp
in
cmp
std
inc
insb
clc
in
inc
js
mov
lds
aaa
in
movsl
loopne
mov
xchg
inc
sub
pop
and
je
fcmovnu
fimull
ds
shlb
pop
inc
jle
rorl
mov
mov
add
imul
adcb
sbb
lods
cmpsl
gs
inc
faddl
mov
rcrl
shr
ja
mov
lds
fcomip
or
mov
stos
jb
inc
pop
int
sbb
enter
pop
xchg
js
faddl
adc
mov
push
add
out
mov
and
or
mov
ja
mov
int3
and
mov
lock
insl
adc
dec
in
push
inc
jb
mov
fidivrl
jg
clc
mov
xchg
insb
cld
call
stos
add
xor
movsb
mov
loop
mov
ret
pop
mov
fistpl
cli
jo
or
insb
push
out
call
cld
ljmp
pop
mov
mov
test
adc
nop
and
push
xchg
inc
mov
xor
scas
pop
pop
scas
adc
pop
mov
xor
aad
insl
and
test
rclb
outsb
sbbl
sbb
in
test
fdivrl
xor
pop
jle
xor
stos
ja
xor
dec
sub
jno
scas
push
pop
aas
daa
cmp
rorl
push
stos
lock
jae
mov
pop
push
mov
push
mov
mov
leave
push
repz
sbb
cmpb
adc
sahf
cmp
xrelease
mov
push
xor
jno
fistpl
pop
mov
sbb
mov
add
jl
mov
lcall
adc
int3
adc
sbb
les
mov
push
movsb
rcll
popf
and
ret
xchg
ljmp
jmp
iret
dec
ja
lret
pop
mov
xlat
xor
int
dec
aaa
add
xchg
jmp
movsl
out
inc
xchg
je
push
cltd
push
mov
mov
fnop
inc
enter
cwtl
mov
ljmp
or
rolb
andl
mov
adc
push
leave
mov
and
loope
sub
xchg
fdivrs
sti
mov
xor
hlt
pusha
push
jge
lea
lock
jecxz
jg
xorb
shlb
jecxz
xchg
in
stos
pusha
mov
inc
dec
pop
ret
mov
mov
add
pop
mov
cmp
lret
fnsave
jge
sub
lret
les
mov
loop
add
cmc
adc
cld
mov
fidivl
cmpsb
test
adc
orl
mov
in
xchg
lahf
push
int3
cs
jnp
jecxz
aam
mov
stc
clc
into
mov
sti
test
cli
jo
fnsave
dec
ljmp
add
mov
repz
bound
leave
push
inc
jnp
test
aas
inc
sbb
or
mov
hlt
inc
ret
mov
sbb
push
test
arpl
mov
scas
jns
nop
aam
add
and
jae
loop
inc
rcr
cmp
idivl
nop
lret
ss
sbb
inc
push
popf
mov
add
xchg
xor
sbb
sbb
and
push
popf
pop
pop
add
cmp
ss
nop
mov
lods
and
inc
mov
mov
xchg
outsl
cmp
xchg
adc
cli
test
je
lcall
push
cli
pop
adc
addr16
ret
popa
cmp
add
or
lods
clc
test
jb
rorb
aas
ss
sahf
mov
pop
sbb
sub
mov
outsl
pop
and
mov
jp
and
bnd
xchg
mov
ss
mov
or
sbb
int3
inc
faddp
dec
cmp
bound
test
jl
ja
xchg
xor
addb
das
data16
insl
cmp
xchg
movsb
icebp
jno
movsl
or
shlb
mov
popf
jecxz
push
js
inc
cltd
dec
in
mov
xchg
loop
mov
pusha
inc
push
pop
stc
push
outsb
mov
and
xchg
xlat
popa
sub
mov
jp
pop
jnp
icebp
and
mov
mov
sub
lods
or
loope
mov
popa
inc
sub
jne
lea
push
add
lea
call
adc
stos
lcall
pusha
daa
sub
push
imul
mov
rcrb
mov
je
xor
stos
data16
lea
jb
mov
loopne
ret
loope
jle
jmp
mov
fcoml
mov
bound
sbb
lahf
sbb
popa
ljmp
popa
cmp
push
in
mov
lock
xchg
cmpsb
push
aaa
jp
or
or
mov
fcmovnu
inc
je
jmp
cmc
xchg
mov
jg
inc
mov
shll
adc
jecxz
pop
inc
mov
mov
loopne
xor
out
mov
jmp
repnz
gs
push
hlt
fildl
lds
mov
mov
movsb
out
mov
data16
mov
cmp
cmp
jg
mov
push
js
loope
or
scas
jne
clc
xor
lea
adc
aaa
mov
mov
in
add
xchg
dec
mov
push
or
mov
addr16
lcall
xchg
push
std
dec
movsb
enter
call
dec
mov
push
adc
xchg
pop
pop
cltd
sub
test
xchg
mov
dec
fwait
lcall
inc
lock
cmpl
loop
sbb
mov
dec
xor
mov
icebp
pop
pop
cli
lcall
add
xor
jno
cwtl
mov
sub
clc
lods
cwtl
pop
add
ljmp
call
jmp
mov
add
rcrl
adc
bound
int
negl
sbb
add
roll
rcl
mov
push
inc
jl
and
mov
sub
fsts
movsb
adc
mov
shll
cmpsl
inc
je
jl
or
loope
xchg
dec
mov
testl
xchg
addr16
cld
mov
cltd
aad
pop
insl
pop
out
gs
or
inc
jmp
cs
pop
addr16
out
and
mov
loop
dec
icebp
or
das
shrb
jmp
cld
push
sbb
test
xchg
pop
mov
jmp
cli
int
clc
lea
insb
repnz
pop
sbb
in
roll
mov
jb
sbb
ret
inc
popf
sub
cmp
repnz
stc
pop
cmc
fsubrs
incl
add
sub
cwtl
movsl
add
js
ror
pop
popl
ret
mov
pop
mov
xor
filds
addb
cmc
ret
lahf
enter
xor
das
loopne
mov
mov
orb
call
inc
loop
mov
ljmp
fucomp
ds
daa
subb
push
jecxz
pop
ljmp
add
adc
rolb
add
jge
mov
loopne
pop
js
and
fstpt
sbb
xlat
dec
jns
icebp
nop
scas
pop
xchg
comiss
jbe
lock
push
loop
fs
or
sbbl
pop
xchg
aaa
aaa
jp
mov
lahf
ds
ret
sbb
fists
cli
push
scas
aas
push
sub
add
lret
sti
loop
js
xchg
xor
cld
cs
es
cltd
and
rorb
fildl
push
dec
push
fwait
lods
mov
lcall
xchg
push
jne
inc
pop
clc
lock
ljmp
jnp
lea
loopne
xor
mov
pop
in
mov
loop
inc
mov
lea
ds
jne
iret
mov
in
cmpb
push
out
and
or
cmp
mov
mov
dec
sub
inc
pop
in
cmp
inc
sbb
jae
mov
je
es
adc
jno
clc
jge
push
cs
adc
nop
cwtl
pop
mov
addr16
jmp
mov
idiv
fists
lret
pop
push
cmp
sub
sbb
inc
cmp
push
or
popa
fsubrs
xor
fmuls
out
sub
dec
add
rcrl
xorb
fs
shl
lods
ja
inc
andl
mov
xor
pop
aas
rclb
jp
xchg
movsb
lods
outsl
cwtl
dec
mov
loop
inc
push
push
jl
inc
and
loop
nop
sub
sbb
xor
mov
adc
jae
imul
into
fisubs
pushf
fsts
dec
xchg
sarb
faddl
pop
mov
cmp
inc
lods
pushl
push
sub
roll
cli
sbb
mov
shl
inc
xor
out
jg
xorb
jmp
mov
push
orb
in
jle
rclb
stos
mov
sbb
xorl
out
icebp
jmp
jg
fnstenv
rolb
inc
clc
adc
lea
sub
sbb
fs
push
bound
sahf
jecxz
call
cmpsb
and
mov
ja
les
clc
addb
in
stc
arpl
rolb
jne
ficomps
or
dec
roll
clc
and
push
ja
push
cld
add
arpl
or
subl
pop
fildll
lahf
aam
pop
xchg
daa
sahf
ret
adc
sub
push
mov
rol
test
pop
adc
fidivrl
adc
aaa
mov
leave
lcall
insl
int3
ja
aam
enter
loopne
jecxz
cmp
mov
mov
fucomi
add
or
pushl
mov
mov
mov
jo
sub
ret
stos
out
mov
mov
add
mov
shr
leave
nop
insb
emms
loop
and
push
mov
pusha
xor
sbb
ljmp
dec
shrl
or
ret
cmp
jmp
arpl
inc
mov
pop
or
ja
lods
in
stc
and
loop
sarl
push
inc
rorb
stos
dec
add
adcl
inc
lock
cmp
imul
aas
loope
arpl
les
cs
andb
rolb
pushf
stos
in
push
xchg
dec
sbb
mov
aam
mov
outsl
fdiv
rclb
dec
xchg
lds
clc
ror
test
aaa
add
out
cmp
loop
out
xchg
mov
ror
push
xor
push
ficoml
fistl
cli
mov
test
je
xchg
push
or
in
xchg
jg
fimuls
test
or
or
lcall
sub
inc
or
dec
sbb
mov
push
dec
inc
adc
scas
adc
jns
push
dec
add
les
mov
fnstcw
adc
or
jnp
mov
clc
dec
jns
push
es
lcall
push
sbb
pop
lret
pushl
or
pop
mov
and
jnp
jmp
in
daa
xchg
push
push
push
es
cmp
jl
pop
inc
mov
sub
cli
pop
adc
aas
nop
sub
fwait
adc
mov
das
loop
repz
ficomps
adc
cli
rolb
cmpsl
push
lea
cmp
lock
lods
mov
imul
fs
icebp
sub
scas
pushf
and
inc
lds
out
pusha
pop
aam
test
data16
xchg
dec
dec
adc
mov
hlt
or
dec
add
stos
pop
sbb
sub
clc
mov
daa
xor
std
mov
leave
enter
aaa
mov
pop
arpl
mov
cs
pop
pushf
push
mov
popa
dec
mov
ja
inc
scas
mov
adc
mov
or
sbb
out
pop
pop
jle
cmp
dec
fisubl
in
xor
mov
xchg
icebp
xor
jb
out
cmpsl
addb
mov
jl
and
mov
pop
mov
add
pop
fnop
ret
mov
sbb
cmc
or
pop
das
out
jbe
dec
es
inc
loop
ja
ret
repnz
lods
mov
dec
cmc
outsb
xlat
mov
add
push
push
adcl
loope
scas
int
mov
sub
sub
notb
and
jge
inc
mov
adc
lcall
jne
popa
lahf
negl
ljmp
sbb
lea
sub
dec
push
sbb
adc
pop
out
sub
pop
clc
inc
mov
inc
and
xchg
jle
dec
jp
pop
sub
int3
hlt
and
fstpl
insb
sub
fcomip
test
lret
mov
ss
mov
out
dec
sub
xchg
shll
or
sti
or
adc
jns
jne
icebp
cmpsb
xchg
loope
outsb
jae
pop
mov
mov
fst
rolb
mov
js
and
leave
pop
sub
xchg
fbld
rol
clc
popf
xchg
orl
push
int3
fcmovbe
ret
mov
push
mov
xchg
add
mov
mov
int
dec
pushf
push
in
bound
lds
push
nop
aaa
outsl
aad
inc
addl
shlb
mov
or
insl
xchg
xor
shlb
cs
bound
frstor
pop
sbb
cmp
adc
mov
inc
mov
mov
pop
mov
mov
sub
jne
xchg
sub
jbe
inc
rorl
fcmovnu
lock
sub
pop
rclb
pusha
imul
inc
repz
repz
movsl
aaa
test
scas
into
inc
cmp
out
mov
hlt
mov
sbb
rcr
cmp
out
jl
add
cmc
or
aas
pop
and
adc
mov
push
cltd
add
adc
pop
jae
faddp
sar
mov
mov
fnstcw
xchg
add
popl
into
xchg
daa
es
mov
cmp
movb
insb
repnz
jge
testb
sti
dec
or
mov
bound
ret
call
incl
aaa
cmp
sub
sti
mov
sub
inc
jbe
cmpsl
cmpl
ja
sahf
or
lret
sub
call
sub
ret
out
pop
dec
dec
imul
jne
rcrb
mov
setl
or
out
sbb
mov
cli
sbb
test
repz
call
shll
mov
cmp
lods
aaa
mov
jecxz
fldenv
adc
fldenv
movsb
adc
daa
push
push
sub
stc
pop
std
out
mov
dec
mov
mov
in
mov
add
sub
sbb
jmp
mov
lahf
sbb
mov
dec
push
sub
es
pusha
out
ss
cmp
lret
decb
repz
cwtl
cmc
loope
les
jg
fld
cmpsb
sbb
pop
shlb
lock
fdivr
jg
cmp
clc
push
sub
ds
nop
adc
cwtl
mov
sub
cmp
mov
es
and
jno
aaa
add
cli
mov
sbb
movsl
mov
out
aaa
movsl
loope
ret
outsl
mov
xorb
mov
dec
ljmp
and
dec
pop
add
jg
jns
inc
imul
inc
or
loope
mov
les
inc
and
inc
mov
shll
adc
lahf
stos
adc
jo
stos
imul
pop
jns
xchg
inc
aas
test
scas
iret
push
bound
mov
loope
in
ret
sbb
lds
fcomip
adc
adc
mov
andb
and
and
xchg
push
cld
dec
add
cmp
loope
sbb
mov
jle
cmpsl
mov
mov
inc
pop
mov
clc
outsb
push
pop
subb
cmp
pop
push
pusha
sbb
ljmp
mov
push
adc
decb
enter
test
and
addr16
cltd
cmp
adc
mov
sahf
mov
stos
sub
iret
dec
test
popf
dec
loopne
jg
mov
sbb
add
into
test
cmp
insl
jne
dec
cmp
jns
push
rcrb
push
mov
out
xor
dec
ret
add
mov
sbb
jg
addb
jge
ljmp
push
aam
scas
cld
out
subb
xchg
jle
pop
shr
stc
sbb
jne
jp
rclb
test
add
ljmp
pop
orb
sbb
inc
aaa
lahf
lods
inc
lock
push
fcmove
fcomip
call
orl
cli
cmpsb
xchg
adc
es
xchg
mov
dec
adc
pushf
adc
lcall
mov
roll
out
cmp
popa
add
cli
dec
or
in
mov
mov
bound
insl
jnp
fisubrl
pop
sarb
and
cmc
daa
ret
incl
std
push
xchg
add
and
test
dec
sbb
mov
lcall
ljmp
add
sub
mov
and
stos
test
sbb
mov
aaa
or
push
mov
outsl
je
xor
fcompl
jb
sub
jg
test
xchg
out
andl
inc
mov
test
or
pop
xcrypt-cfb
cmpsl
cmpsl
hlt
pop
cli
rclb
aad
mov
and
shll
xor
cmpsl
mov
cltd
xor
enter
mov
adc
test
xorb
lea
insb
mov
cmp
test
notb
fs
mov
call
or
mov
loopne
js
pop
mov
stos
xchg
mov
inc
cmc
mov
pop
mov
clc
sbb
mov
and
mov
sti
inc
push
sub
xor
imul
insb
icebp
in
jl
or
lods
add
jmp
hlt
mov
adcl
loop
pop
xchg
mov
mov
aaa
adc
sub
data16
mov
mov
sbb
adc
cld
aaa
jle
xor
in
shll
clc
xchg
sub
xor
adc
repnz
out
mov
xor
fsubs
stc
data16
jg
jge
outsl
out
mov
lahf
mov
mov
sbb
mov
sub
cmp
pushl
movsb
dec
mov
sub
push
inc
mov
lds
jle
std
fcmovnb
or
mov
inc
dec
mov
cmpsl
test
sbb
xor
xor
pop
lock
les
mov
insl
mov
shrl
xor
jb
push
pusha
pop
fsubrl
push
hlt
mov
push
mov
push
es
cmp
xchg
mov
scas
loope
push
inc
or
add
sbb
adc
mov
jmp
mov
daa
ret
dec
jl
mov
xor
adc
xor
mov
sub
mov
data16
or
out
insb
data16
inc
and
dec
lret
or
shlb
leave
pop
mov
sub
pop
push
xchg
aas
and
and
jge
test
sub
test
xchg
ja
das
cmp
and
pop
and
fcoms
cld
lock
leave
mov
test
push
mov
cmp
jbe
xchg
call
xchg
and
test
xchg
mov
das
push
repz
xchg
fldl
scas
aas
into
jae
jecxz
movsb
and
lods
lahf
popf
jge
rcrl
xchg
loope
push
jbe
pop
shrb
or
lret
xchg
or
ljmp
mov
add
adc
dec
aaa
icebp
jmp
push
cmp
add
lock
mov
ja
push
mov
data16
shrl
popa
xorb
inc
jg
jmp
xchg
sub
pop
mov
das
aam
jbe
lds
xchg
xchg
cmp
sbb
in
fldt
add
inc
inc
push
xor
and
fnsetpm(287
cmp
lock
xor
push
cmc
fwait
add
adc
mov
imul
negl
pop
sub
lcall
roll
mov
sub
rcl
in
out
sbbb
mov
mov
je
insl
dec
es
icebp
push
sarl
jne
int3
hlt
test
sarb
or
add
cli
push
leave
add
jg
inc
mov
cmp
push
dec
sub
xchg
ss
in
pushf
sbb
inc
cli
movsl
jno
into
pop
jmp
sbb
or
mov
lret
or
mov
xchg
mulb
xchg
push
lret
fnstsw
stc
or
inc
xchg
xchg
std
test
lret
in
pusha
ljmp
mov
pop
mov
sub
cwtl
mov
pop
fwait
shll
and
sbb
clc
push
loope
stc
dec
push
lcall
sbb
mov
push
push
adc
push
push
aad
ret
inc
jne
fs
inc
sarl
ljmp
dec
rorb
mov
enter
ret
add
or
loope
adc
hlt
mov
cli
and
insb
xor
dec
or
adc
cld
cs
sub
movsl
int3
push
push
outsb
out
sub
dec
insl
aaa
mov
xchg
jns
insb
into
pop
xor
add
or
pop
push
xchg
lods
mov
dec
mov
fstpl
andl
add
cli
lea
jmp
mov
imul
cltd
cli
test
push
rorb
clc
and
mov
jle
rolb
or
xor
mov
sub
ljmp
call
xchg
and
and
mov
sbb
outsl
sub
jp
mov
sbb
loop
jo
test
cld
mov
andb
arpl
cmp
sbb
push
out
push
loopne
rolb
cmp
dec
mov
sub
inc
push
dec
pop
sub
mov
jbe
pop
fnstsw
loopne
jge
int3
les
les
jb
call
xorb
mov
and
inc
cli
adc
rcl
fst
dec
shrb
ret
cwtl
or
lea
aam
cmpb
data16
cli
fcoml
adc
push
add
mov
sub
and
adc
cmp
iret
insb
mov
insl
sti
pusha
imull
cmp
mov
dec
mov
xchg
lods
sbb
fldt
pop
mov
aas
xchg
bound
mov
sbb
mov
dec
pop
call
jecxz
scas
or
pop
fbld
mov
inc
jecxz
push
mov
fildl
rcr
in
xchg
sbb
scas
cmp
rorl
in
test
dec
pop
push
sub
mov
inc
push
movsl
inc
adc
movsl
mov
sti
stos
bswap
fimull
fwait
stc
xlat
xchg
inc
enter
insb
xor
out
push
pop
sbb
scas
out
movsl
pop
cmc
mov
push
pop
dec
jae
mov
scas
jg
xchg
mov
test
test
test
mov
out
jne
adc
stos
push
cmp
push
popf
adcb
out
jbe
add
fldt
rcrb
scas
push
stos
and
lock
fs
jo
sbb
dec
mov
clc
or
lea
xchg
ja
shrb
out
loopne
push
sbb
cmpsb
push
jge
add
call
pusha
rcll
inc
jbe
imul
xchg
and
ja
cmp
js
or
mov
inc
or
mov
xchg
andb
or
dec
adc
push
pop
xor
nop
cmpl
js
mov
fwait
or
lcall
cmp
ret
insb
dec
pushf
lods
cmpl
pop
mov
add
dec
cwtl
fisttpll
in
mov
push
mov
jb
or
cmpsl
repnz
aad
insb
adc
xor
test
movsl
inc
in
cmpsb
outsl
std
pusha
jle
lods
mov
mov
into
mov
insl
movsb
ds
and
pop
adc
subb
xor
inc
sbb
jbe
mov
ljmp
xchg
into
xor
cmpsb
dec
repz
push
adc
loopne
adc
xchg
mov
add
fadds
mov
sbb
fisubrs
loopne
cmp
movsl
xchg
out
cmpsb
mov
jp
inc
jg
scas
test
pushf
repz
data16
fildll
pop
out
sarl
mov
xor
push
sar
inc
sub
test
jmp
rorb
inc
std
push
pop
fists
adc
clc
lret
scas
les
push
mov
outsl
frstor
xchg
and
mov
pop
adc
push
mov
sub
inc
dec
and
or
insb
jmp
ficoms
fwait
out
pop
or
xor
pop
cs
pop
loop
inc
mov
fsubs
rcrl
hlt
mov
push
push
mov
mov
dec
aaa
jne
iret
out
popf
test
adc
adc
stos
outsb
clc
xorl
jae
inc
pusha
adc
iret
test
ja
jne
pause
add
pop
mov
mov
shlb
xchg
push
mov
les
xchg
cmp
shrl
mov
sub
mov
dec
dec
add
rorb
loop
inc
in
xor
aam
loopne
xchg
mov
push
cli
enter
loop
mov
inc
jge
cmpsb
jo
push
jbe
sarl
pop
sarl
fld
pop
test
ret
mov
sub
mov
mov
lea
adc
ss
xchg
stc
sub
cs
loopne
in
mov
sbb
mov
mov
loope
ss
jge
inc
nop
xor
adcl
or
mov
mov
pop
mov
nop
xor
sub
loopne
or
xlat
inc
inc
inc
xchg
push
in
mov
andb
push
cwtl
sahf
or
and
mov
mov
jns
test
test
inc
popf
out
pop
lds
test
jbe
out
xlat
or
push
popa
mov
mov
jo
popf
jge
fwait
pop
mov
fucomip
js
inc
xchg
push
and
jp
mov
repnz
outsl
sarl
push
scas
shlb
int
stc
test
jl
lahf
stos
pushf
dec
pop
xchg
push
lods
int3
push
imull
pop
jmp
incb
mov
in
out
xor
dec
call
jnp
push
sbb
das
jno
and
lahf
stos
call
dec
es
cmc
cmp
mov
cltd
xchg
push
lock
stc
push
clc
repnz
or
inc
fs
je
loopne
sbb
inc
call
add
mulb
sub
aas
ja
and
dec
and
sub
push
xchg
ljmp
mov
jb
jno
push
pop
arpl
pop
xchg
insb
ret
mov
or
mov
mov
dec
pop
testb
nop
sbb
xor
sti
outsl
int3
fstpt
arpl
sahf
push
mov
pop
insl
mov
icebp
inc
enter
mov
mov
movzwl
push
repnz
sbb
scas
xor
into
movsl
inc
pop
mov
pop
lock
imul
test
push
jmp
and
test
sbb
shlb
das
jge
xchg
jne
fsubrs
mov
test
stc
dec
push
push
nop
push
mov
insl
rcl
push
cli
pop
add
cmp
mov
fcomps
jns
and
sbbl
dec
ret
pusha
test
cltd
in
xor
hlt
mov
loopne
scas
push
mov
fiaddl
mov
sbb
jbe
cmp
sub
mov
push
icebp
cmp
lret
add
dec
jb
shrb
and
xor
dec
mov
mov
inc
test
stos
loope
jecxz
sbbl
add
dec
icebp
sub
mov
jo
orb
add
jl
and
and
sahf
loop
xor
fisttpl
sbb
mov
rclb
sahf
outsl
sarl
xchg
dec
inc
je
ds
xchg
icebp
cmp
mov
mov
fcmove
add
aad
lret
into
fcoml
mov
lret
cmp
add
xchg
xchg
inc
mov
fnstsw
xchg
or
mov
xlat
cwtl
jmp
ja
clc
loopne
jno
and
xor
loope
rcrb
sub
lea
jb
pop
and
fstpl
push
and
mov
xchg
jge
xchg
data16
in
push
xorb
fcmovb
add
nop
sbb
mov
std
inc
xchg
sub
mov
lcall
mov
je
or
icebp
das
cld
mov
sahf
inc
addr16
pop
cmp
cli
adc
stos
std
mov
repz
loopne
sbb
jle
mov
rolb
cltd
aad
mov
out
fwait
mov
fidivrl
ja
mov
test
ljmp
dec
sahf
daa
leave
xor
ss
call
lock
dec
scas
and
fwait
xchg
daa
das
pop
xor
pusha
push
xchg
sub
jne
fnstsw
pop
call
pop
aad
inc
pop
sbb
leave
nop
jl
stos
sbb
xchg
fmull
int3
ds
loop
push
stos
fwait
or
pop
jo
push
stos
notb
scas
sub
out
mov
xchg
je
or
push
dec
test
sbb
insb
cli
sbb
add
mov
sbb
or
stc
pop
dec
fxch
ljmp
loopne
pop
clc
push
jb
leave
xchg
mov
xchg
push
mov
sub
aas
mov
xchg
xchg
sarb
rol
stc
lods
push
mov
incl
push
dec
xor
outsb
pop
pop
outsb
push
das
lcall
sbb
or
in
scas
cs
mov
pop
and
jecxz
outsl
clc
pop
mov
cmc
mov
imul
jbe
jne
je
adc
pusha
jae
rorl
mov
jecxz
repnz
cwtl
add
xor
xchg
add
mov
fstps
inc
push
or
pop
ljmp
xchg
jae
mov
dec
test
and
sbb
mov
push
or
xchg
fsubl
xor
rcr
decb
fists
sahf
andb
xor
pop
mov
xchg
jp
idivl
scas
pop
xchg
pop
in
mov
push
ds
xchg
fcomps
stc
mov
in
xchg
sbb
xor
fs
mov
call
mov
rorb
sub
daa
xchg
fisubl
out
insl
push
cwtl
cwtl
je
lea
adc
xchg
mov
cld
fcomip
ret
inc
lret
mov
and
jl
outsb
in
out
mov
loopne
push
pop
push
dec
mov
xor
jo
and
lret
or
push
mov
inc
ret
fstpl
fsubl
out
fsubrs
xor
adc
arpl
cmp
mov
jne
movsb
cmc
sub
outsl
std
mulb
lea
mov
add
int3
stc
inc
pop
dec
js
add
ss
inc
sahf
cmpsb
or
je
fwait
lret
lods
dec
mov
fmull
adc
leave
or
clc
jmp
mov
xchg
push
jb
lret
pop
sub
xor
call
and
dec
in
cmp
subl
jge
jno
add
stos
loopne
xorl
mov
dec
add
pop
sbb
mov
popa
xchg
adc
pop
out
ljmp
mov
imul
fisubrl
pop
dec
push
inc
je
das
insb
push
inc
jg
scas
adc
loope
loop
mov
movsl
push
std
loop
pusha
cld
cmc
addr16
sub
and
lret
lahf
cwtl
es
outsl
push
mov
gs
ret
stos
push
pop
fimull
mov
loopne
inc
xchg
and
add
mov
rcl
push
dec
mov
jl
jae
jg
pop
and
pop
nop
pop
int3
sub
in
mov
sbb
loopne
sbb
pop
sbbb
mov
sarl
inc
nop
xchg
and
mov
inc
cmp
push
and
dec
mov
pop
in
add
insb
jg
push
aad
shll
push
jle
rorl
adc
mov
lcall
aaa
inc
out
clc
stc
mov
lcall
or
jno
xchg
jo
fld
daa
pop
cld
pop
cmpsb
cmpsb
gs
mov
lcall
into
mov
shr
inc
or
or
lock
cmp
stc
pop
sub
add
pop
add
mov
aaa
xchg
pop
in
xchg
dec
pop
loopne
dec
out
sti
std
mov
adc
roll
mov
lcall
dec
push
adc
or
std
xchg
xchg
mov
or
sbb
mov
sbb
add
mov
xor
push
jl
roll
push
add
dec
xor
mov
sbbl
jmp
push
ja
aaa
mov
lods
push
dec
xchg
jp
push
movsl
jecxz
das
xchg
or
out
mov
les
iret
sbb
xor
mov
sbb
push
sbb
imul
jbe
ljmp
jb
imull
leave
pop
les
pop
sbb
call
sub
cmp
xchg
jbe
mov
push
cmp
or
ja
pushf
jl
inc
sub
jge
xor
pop
sub
mov
popl
stos
mov
push
into
push
push
shrl
movsb
sub
mov
loopne
in
mov
rcr
shll
fdivr
sub
adc
frstor
nop
loopne
cli
arpl
push
inc
fistpll
adc
loopne
xchg
pop
push
add
movsb
mov
subl
test
outsl
adc
add
cmpsl
outsl
clc
sarb
sub
adc
mov
testl
sbbl
popl
mov
push
push
daa
mov
cmc
jge
dec
mov
movsb
lcall
jg
sbb
mov
ficoml
ret
subb
and
bound
mov
movsl
pop
push
mov
dec
out
sahf
shlb
adc
fistpll
mov
hlt
incl
sbb
andb
xor
pusha
jo
outsl
jp
daa
inc
add
jo
les
dec
scas
jne
xchg
dec
in
cmp
je
sub
testl
inc
jne
scas
adcb
push
inc
jle
xchg
scas
adc
out
or
push
dec
xchg
and
cmpb
jns
cmpsb
out
inc
call
hlt
cmc
aad
jg
outsl
fsubrs
jle
outsb
push
or
into
aad
repnz
push
fdivl
xor
clc
mov
add
xor
movsl
or
adcb
push
pop
xchg
xor
push
xor
fistps
adc
push
mov
inc
jno
pusha
les
jo
cmp
cmp
pop
movsl
pop
inc
or
ret
jne
push
call
pop
pop
or
adc
test
add
fs
lock
inc
inc
loope
bound
cmc
ret
push
aam
aaa
and
jno
mov
mov
and
mov
stc
fmuls
ret
push
xor
adc
addb
xor
fisttps
pusha
test
je
dec
mov
roll
inc
test
add
sbb
aas
xor
push
negb
mov
stos
out
cmc
addb
incl
pop
inc
add
pop
sarb
mov
gs
mov
pop
test
push
sub
cltd
fdivp
inc
sub
shr
or
imul
in
pop
enter
roll
jo
sarl
mov
cli
rorb
add
call
ss
test
pop
push
inc
mov
insb
es
fcompl
fldcw
bound
lcall
shrb
mov
icebp
add
lcall
scas
or
push
mov
mov
cs
push
cmovns
push
sahf
xchg
push
fwait
mov
mov
cmp
stos
cmp
mov
push
sbb
scas
pop
pop
icebp
test
push
and
jge
push
fwait
test
add
xchg
inc
inc
cmc
add
mov
pop
pusha
push
movsb
adc
adc
adc
sub
out
jae,pt
or
pop
push
inc
pop
mov
dec
iret
and
push
lds
mov
mov
or
idivl
loope
pop
lods
dec
dec
fwait
or
call
add
ja
sub
inc
fs
sbb
mov
jp
popf
aas
mov
cmp
jno
mov
jno
dec
out
in
xor
ljmp
push
idivl
pop
les
testb
les
sbb
ret
mov
xchg
push
mov
dec
jg
cmp
cwtl
gs
stos
jns
pushf
xchg
cs
push
jns
in
cmp
push
xchg
and
add
or
outsl
in
sbb
add
cmpb
loope
pop
enter
pop
xor
fildl
cld
jecxz
jo
repnz
in
test
cmp
jl
jo
lret
or
push
aad
data16
push
push
rcl
cs
loope
mov
jbe
adc
push
push
inc
xchg
adc
outsb
jne
add
cmp
or
mov
out
push
std
inc
pop
decb
aaa
adc
rcl
sarb
sar
cs
hlt
out
aaa
xchg
fbstp
out
pop
test
xlat
enter
into
out
pop
in
or
mov
loopne
dec
mov
out
aaa
rcl
push
ja
push
sub
jae
and
icebp
scas
pop
decl
cwtl
mov
mov
icebp
pop
jns
sub
scas
jp
in
dec
mov
ja
or
dec
in
push
jge
xchg
cwtl
or
in
sbb
dec
add
dec
cmpl
fsubrl
adc
or
stc
outsb
shll
loope
push
adcl
push
pop
or
push
in
call
out
push
lods
pop
das
jbe
jbe
sbb
repnz
mov
mov
jg
fs
xor
and
mov
push
cmp
shlb
cmc
loope
pop
test
xchg
ds
mov
mov
inc
nop
pop
add
xor
popa
sub
in
dec
rolb
jmp
mov
lret
lods
std
iret
bound
sbb
cmp
xor
push
mov
or
add
mov
loop
add
xor
shlb
add
sub
jmp
sti
std
pop
ret
or
mov
sub
pushf
mov
inc
cmp
dec
add
sub
pop
fistpll
pop
in
pop
mov
mov
in
or
ret
cmp
sub
push
xor
sub
addr16
mov
pushf
out
push
sti
cs
rclb
mov
push
test
pusha
mov
scas
test
sete
inc
mov
push
xchg
and
sub
nop
xor
xor
sbb
xchg
xor
push
loope
stos
add
imulb
mov
andl
addl
nop
rcrl
pop
sub
jg
lcall
bound
lea
pusha
xchg
mov
les
fisttpl
cmp
dec
cwtl
cli
mov
out
cs
shl
pop
rolb
jle
loope
jecxz
lcall
in
inc
or
stos
jae
in
xchg
pop
fwait
into
sahf
add
pop
data16
js
push
xor
test
jnp
push
mov
mov
lods
adc
fnstsw
inc
and
cwtl
mov
test
push
gs
cmp
outsb
outsl
fcmovnbe
in
nop
fadds
pop
lock
pop
mov
pop
cmp
push
mov
inc
fstl
xchg
test
pop
pop
push
pop
fldenv
mov
out
stos
ljmp
xor
jg
ja
adc
and
mov
mov
and
inc
mov
cmp
imull
cmpsl
sbb
xlat
mov
es
inc
imul
and
adc
ljmp
xor
jp
or
or
lea
adc
addb
xchg
cmpsb
jbe
sbbl
dec
jg
icebp
mov
outsl
mov
or
dec
fdivrl
mov
push
inc
lahf
sub
frstor
ljmp
jno
fnsave
push
inc
mov
enter
mov
in
fsubs
repnz
das
adc
rolb
cmp
sub
clc
mov
or
inc
mov
jbe
or
pop
das
fbld
inc
stos
dec
add
cs
and
push
adcb
jne
sbb
sbb
sbb
sub
add
hlt
out
roll
adcb
std
adc
xor
dec
or
push
sub
insl
lock
outsl
dec
push
xor
add
jge
in
mov
mov
mov
lds
nop
inc
jmp
es
lods
or
or
push
int
mov
dec
lds
sti
lret
and
int3
out
and
inc
stos
mov
roll
mov
stc
mov
bound
lds
sysenter
push
loopne
jle
movsb
inc
add
mov
outsl
into
sahf
scas
push
push
sub
cmc
cmp
inc
jmp
and
jle
and
lock
sub
add
jno
fwait
clc
lcall
or
xchg
add
test
icebp
adc
mov
dec
xchg
push
xchg
lcall
ljmp
adc
icebp
add
fsubs
decl
cmpsb
pop
out
stos
lock
shlb
aaa
or
in
adc
mov
fwait
out
outsb
incl
and
je
mov
fsub
and
sub
push
repz
jmp
jp
mov
scas
add
sbb
movsb
shll
or
cmp
pinsrw
out
rcrl
push
call
incl
subb
lahf
orl
mov
fisttpll
xor
sbb
fcomip
es
mov
sbb
fldenv
sbb
ljmp
pop
call
sub
test
pop
mov
adc
das
test
push
pusha
xlat
lea
mov
sbb
mov
fwait
icebp
shll
pop
pop
sbb
jmp
pop
mov
cli
ret
push
and
sbb
bound
imul
jmp
mov
sbb
aaa
jp,pn
lock
dec
sbbb
mov
xchg
andl
mov
iret
xlat
inc
sbb
sbb
sbb
xor
lahf
mov
imul
pop
std
rcrl
js
fwait
adc
loope
jg
lds
pop
inc
loopne
sub
pop
loop
decb
adc
mull
subl
dec
scas
shrl
adcb
decl
xchg
or
and
iret
fyl2x
push
inc
test
jbe
stc
pop
push
mov
sbb
mov
shl
xchg
popa
roll
outsb
push
and
mov
mov
xchg
and
add
sbb
stc
adcb
push
dec
pop
clc
fwait
enter
push
aad
xor
lahf
ds
adc
add
pop
pop
repnz
jns
fsubl
xlat
and
std
push
mov
aam
sub
jnp
pop
nop
outsb
icebp
out
sbb
ds
push
fimull
icebp
push
pop
xchg
movsl
add
mov
loop
jmp
push
pop
sub
mov
movsl
lds
in
mov
jb
jae
push
mov
iret
in
iret
adc
fstl
inc
cwtl
dec
std
sbb
outsb
into
adc
ret
dec
fdivrl
std
mov
xchg
stos
nop
dec
sbbl
std
push
add
in
and
adc
ljmp
push
jl
mov
addb
cmpsb
das
repz
inc
shrb
push
inc
orl
or
mov
imulb
jge
cwtl
fdivl
out
jle
and
repnz
xchg
inc
lcall
inc
andl
xchg
cwtl
inc
mov
ret
lret
jae
test
ds
jbe
mov
cmp
movsl
fdivp
jmp
jmp
or
push
mov
and
jecxz
sbb
push
pop
mov
icebp
or
out
aaa
outsb
je
arpl
jg
inc
lcall
fcomip
arpl
outsl
hlt
hlt
jmp
imul
in
pop
outsb
rcrb
dec
jns
push
test
and
test
daa
pop
xchg
xor
sbb
aaa
mov
arpl
movsl
jmp
aas
aam
repz
inc
jle
test
push
mov
pop
insl
insl
push
insb
pop
sub
jg
inc
or
and
gs
push
loop
in
stos
bndldx
mov
cmc
insb
mov
push
ja
hlt
pop
add
lock
add
leave
inc
adc
cltd
inc
jmp
loop
bound
adc
xchg
dec
les
fsubp
scas
mov
sar
xorl
pop
fdivrl
std
dec
icebp
or
mov
inc
mov
fwait
push
test
ja
loopne
das
mov
inc
push
iret
fildl
mov
jl
pop
xorb
loope
pop
outsb
sbb
test
jb
cmp
cmpb
int
mov
sar
xor
ret
push
daa
lahf
into
jecxz
mov
jg
dec
jl
test
mov
adc
clc
dec
xchg
mov
jo
movsb
cmpsl
iret
lock
xchg
sarb
dec
push
add
jo
adc
inc
std
mov
mov
mov
cmpsb
stos
hlt
ret
rcrb
adc
stos
pop
cmp
and
xor
fists
pusha
insb
sbb
jg
xchg
cld
xor
cwtl
leave
sub
jnp
pop
add
fistps
push
jmp
sbbl
dec
dec
out
sbb
insl
into
mov
in
mov
test
arpl
dec
inc
dec
xor
mov
inc
mov
lahf
jge
sbb
mov
outsb
shrb
enter
jle
cmc
mov
dec
lds
mov
lret
das
jae
and
sbb
xchg
xor
and
cmp
mov
xlat
jno
xor
add
test
sbb
jo
push
or
jmp
imul
loopne
sbb
mov
flds
mov
xor
insb
or
mov
and
mov
add
popf
xorb
imul
cmpsb
dec
rcrl
and
pop
rorb
cltd
add
call
ret
xchg
cwtl
and
fistps
push
dec
popf
push
and
dec
mov
dec
aaa
xor
push
ss
add
jb
ret
sub
mov
fdivs
pop
pop
mov
inc
xchg
adc
arpl
xor
and
addr16
xchg
pop
cmc
cmpsl
incb
jne
fadds
mov
mov
addl
lods
push
mov
jbe
les
add
inc
pop
clc
les
test
pushf
mov
leave
mov
iret
pop
outsl
loopne
pusha
mov
xor
cltd
daa
inc
das
les
dec
mov
mov
fidivrs
push
shll
jecxz
daa
dec
inc
mov
lcall
push
movsl
push
jge
mov
jns
push
cs
xchg
pop
lahf
rol
xchg
sbb
ret
sbb
andl
push
push
gs
ret
filds
movl
fnstenv
pop
adc
cmp
fstpl
cmp
fisubs
sbb
mov
and
nop
push
popf
ljmp
adc
cmp
repz
int3
gs
fnsave
pop
mov
inc
sti
fcmovnb
cs
sbb
mov
out
push
mov
call
mov
sbbb
mov
mov
dec
js
loope
jl
gs
les
and
aaa
jno
or
test
sarb
movsb
cmp
shll
dec
xchg
mov
fdivl
nopl
lret
mov
jge
fisubrs
sti
and
stos
cli
inc
mov
stc
sub
call
lds
lods
adc
adc
inc
or
jnp
sahf
dec
jg
xchg
sbb
cmpsb
and
sbb
jl
pop
cs
ret
in
aad
push
sub
sarb
inc
shlb
loopne
mov
mov
mov
push
pop
inc
iret
mov
movsl
sbb
les
add
fwait
mov
mul
push
mov
test
imul
outsl
xchg
dec
dec
cltd
es
or
mov
or
icebp
dec
mov
mov
inc
pop
dec
je
inc
adc
aad
pop
dec
repnz
mov
fs
push
jg
fcomip
inc
adc
adc
xchg
mov
adc
xchg
mov
inc
cmp
in
mov
push
mov
lret
xchg
pop
sahf
dec
test
xchg
inc
out
or
xchg
shlb
xor
xor
jno
mov
inc
jb
clc
mov
in
and
push
jo
test
orl
movsb
push
sub
mov
sbb
dec
dec
pusha
lock
leave
orb
loopne
stos
in
sahf
and
mov
sbb
pop
cmp
push
std
xchg
shll
sarb
data16
insb
mov
or
js
addb
dec
inc
stos
jbe
outsl
outsl
imul
push
inc
sar
mov
std
stc
and
icebp
xchg
shl
andl
mov
lret
push
jns
and
iret
jnp
cld
enter
sub
xchg
idivl
xor
pop
sarb
ja
push
pusha
inc
or
sub
push
jle
jecxz
or
call
in
add
add
fldt
pop
scas
mov
flds
ffreep
cmp
jmp
daa
lea
inc
lcall
popf
jl
or
mov
dec
fidivs
test
repz
orl
adc
andb
arpl
aas
mov
hlt
jno
test
and
sub
icebp
pop
xor
stc
lds
pop
push
and
inc
mov
sti
fdivrs
int3
mov
sbb
pushl
and
pop
mov
inc
mov
jge
cmpsl
xor
mov
xlat
adc
out
dec
dec
hlt
lcall
std
mov
dec
psraw
orb
or
mov
mov
fistpll
fistpll
repnz
jmp
ds
mov
or
xor
cli
xchg
mov
je
mov
popa
dec
add
mov
insl
subl
xor
xlat
es
sahf
loop
out
jp
sbb
adc
pop
je
pop
cmc
out
mov
das
jbe
ds
xor
imul
xor
push
leave
and
adc
adc
adcl
and
test
je
mov
xchg
mov
in
jne
and
mov
inc
outsl
pop
xchg
aaa
push
xchg
adc
in
xor
jg
jecxz
stos
inc
xchg
lods
pop
js
mov
push
test
sbb
insl
lcall
sbb
pop
inc
mov
fcomps
jge
sub
hlt
lods
aad
stos
cmp
ljmp
jnp
mov
cltd
les
push
adc
push
andb
mov
or
jle
inc
repnz
sbb
fistl
lret
adc
ficompl
inc
fdivrp
and
jbe
sbb
mov
ret
or
jne
sbb
sahf
testl
push
and
addr16
lock
inc
xchg
mov
cltd
cmp
cwtl
in
inc
mov
mov
shlb
and
int
cld
adc
pop
rol
test
cmc
pushf
pop
push
mov
js
test
adc
mov
pop
pop
inc
sub
cmp
dec
loopne
call
sbb
dec
adc
into
shl
mov
fstpt
mov
jecxz
push
test
dec
jle
inc
dec
pop
mov
mov
add
mov
stos
xor
mov
repz
cmp
push
mov
xor
sbb
call
or
movsl
insb
sbb
hlt
fimuls
jl
mov
in
push
and
or
mov
mov
shll
ds
out
push
stc
pop
rol
sub
inc
and
je
aaa
cmp
pushf
xchg
and
mov
icebp
sbb
out
pushf
mov
insl
xchg
in
bound
in
fldenv
push
dec
andb
mov
int
mov
pop
test
lret
sbb
mov
push
lds
xchg
xchg
jnp
inc
pushf
pop
sbb
jecxz
shll
ja
mov
divb
or
and
xor
cli
daa
ljmp
and
hlt
decb
insb
insl
xchg
repnz
add
mov
inc
mov
imul
pop
inc
xlat
rorl
shlb
cmc
dec
mov
fimuls
rep
inc
scas
sbb
call
mov
aas
test
fidivl
xchg
sub
or
cmc
push
mov
dec
jg
std
mov
iret
adc
sarl
mov
dec
int
push
sub
fimuls
stos
mov
or
push
loopne
inc
jp
cmp
addr16
das
loope
pop
pop
cmpsb
lea
imul
sbb
bnd
xor
or
push
pushf
std
es
divb
cltd
ret
xchg
test
aam
imul
mov
cmpsl
mov
jg
pop
ljmp
je
or
pop
pushf
or
nop
adc
mov
push
and
lds
shlb
in
mov
sbb
out
sti
dec
decl
pop
sub
jmp
push
ret
mov
lea
dec
push
mull
inc
mov
pop
std
scas
jl
jg
sbb
pop
cmp
dec
dec
nop
fisttpl
sbb
in
adc
xlat
sbb
pop
faddp
mov
mov
out
aas
popa
gs
or
add
call
sub
sub
das
or
jmp
mov
hlt
sub
lret
inc
enter
xor
lahf
mov
pop
mov
fidivrl
adc
pop
and
sbb
mov
das
jge
mov
push
and
jmp
mov
add
push
daa
adc
rolb
cmc
lods
add
add
sbb
or
into
sahf
and
jno
in
popa
faddl
inc
xchg
std
sarb
inc
rclb
in
jae
fisttpll
dec
pop
mov
lock
loope
add
ffreep
pop
mov
inc
aas
mov
push
push
jmp
ja
lea
loope
jae
dec
mov
adc
clc
xchg
cmpsb
add
cmp
add
mov
and
cld
mov
and
nop
in
shrd
outsl
arpl
pop
xchg
and
inc
in
lds
cmpsl
clc
ds
dec
lods
or
add
test
or
push
add
jnp
or
sub
sti
loopne
ror
lods
sub
jo
movsl
gs
pop
mov
cld
mov
adc
stos
adc
fildl
add
and
dec
aas
outsl
jp
or
push
or
push
cmpsb
and
jo
mov
mov
imul
outsb
icebp
mov
hlt
push
or
ljmp
fistps
jns
mov
jmp
and
stc
insl
int3
pop
mov
mov
inc
jne
inc
aad
ds
in
js
into
inc
xor
dec
or
out
inc
pop
fldt
popf
xchg
aaa
add
mov
mov
push
mov
cmp
add
lods
lea
sti
mov
insl
xor
and
fldl
in
or
and
stos
outsl
mov
repnz
xchg
rolb
mov
jge
mov
je
or
cld
fistl
inc
mov
add
xchg
rcrl
fs
aas
mov
push
mov
xor
sbb
loop
xchg
mov
xor
rorl
jbe
jbe
cmp
loop
icebp
inc
lods
lret
lods
inc
lods
jge
cmp
fidivl
dec
xchg
pop
scas
jo
call
jle
xor
or
mov
adc
adc
in
ret
bound
sbb
js
test
xchg
jle
pusha
in
xorb
popl
aaa
mov
add
jbe
repz
shrl
inc
dec
jno
ja
push
sbb
mov
fdivrs
push
ficoms
xchg
inc
xor
hlt
out
mov
out
jns
scas
mulb
push
or
in
dec
inc
sub
ljmp
lods
leave
sbb
jp
jge
mov
cmp
sbb
adc
fldl
dec
in
push
mov
movsl
and
cltd
xchg
xchg
xor
outsl
call
sbb
iret
xor
push
outsl
xchg
push
push
test
jl
imul
push
pop
pop
fnstsw
int3
ja
dec
test
imul
fists
push
mov
mov
and
cmp
in
push
out
mov
xchg
and
pop
mov
shlb
lret
bound
or
xchg
test
mov
iret
dec
ret
cmp
mov
cld
imul
lods
fldcw
jne
call
or
les
mov
nop
pop
cmp
in
pop
sar
cs
jb
dec
or
pusha
lcall
jg
mov
popl
add
sbb
in
jecxz
jne
sbb
cmpsb
aaa
pop
rorb
sbb
lcall
jle
pop
fcoms
push
dec
sub
ret
pop
fdivrs
pusha
roll
lock
ret
mov
xchg
testl
mov
pop
aas
imul
ds
add
or
mov
mov
cmp
rcrb
mov
lds
cmp
aaa
mov
lock
fs
sbb
pop
hlt
cmpsb
ficoml
andb
aam
jge
jle
repnz
push
testl
pop
or
aas
pop
add
push
inc
xor
inc
test
cli
jbe
iret
sbb
fadds
adc
push
inc
xchg
sarl
pop
adc
incb
addb
ja
add
leave
das
loope
inc
fucomp
mov
mov
and
mov
mov
sbb
test
jp
mov
or
cmp
fstpt
js
sbb
xorl
scas
xor
xchg
jb
cmp
aad
push
aaa
xchg
sbb
or
dec
adc
fldl
xor
cmpsb
push
push
add
sub
loopne
andl
repz
mov
dec
jge
callw
add
push
insb
adc
jmp
jbe
in
cmp
lods
sbb
fcoms
jae
jbe
pop
mov
push
in
cmp
aaa
or
hlt
push
mov
push
les
lea
jmp
stos
rcl
sti
decl
dec
aad
daa
js
or
stos
ficomps
mov
push
push
dec
xchg
shl
mulb
push
aas
sbb
scas
dec
mov
sahf
cli
xchg
mov
or
xor
fbstp
xor
out
sub
dec
mov
sahf
inc
cmp
icebp
add
test
rorb
sti
adc
jmp
cmp
lea
mov
mov
push
clc
scas
xchg
rclb
mov
adc
dec
xor
xchg
arpl
js
ljmp
imul
sub
cld
add
xchg
xor
ret
jo
stos
xchg
loope
subb
loopne
lods
inc
int3
mov
or
imul
jae
add
hlt
mov
jne
mov
shrb
pop
loopne
mov
ss
test
xchg
or
pop
mov
fists
sub
xor
add
mov
call
std
or
xorl
lds
jae
pop
and
ljmp
inc
cmp
cli
repz
xor
out
in
sarb
nop
mov
fcom
push
xor
or
mov
decl
cmpsb
callw
sub
or
push
xchg
xor
shll
pushf
loopne
jp
ljmp
lods
adc
cmp
sub
sbb
mov
adc
fcoml
mov
lret
andl
adc
cmp
sbb
int3
sub
mov
push
test
shl
es
dec
jb
test
test
jo
stc
iret
mov
sbb
xchg
std
test
cmc
test
insl
add
call
jb
sbb
loope
jg
lods
decb
fsts
inc
adc
popf
insl
jl
sbb
pop
dec
mov
insl
roll
sub
ss
sbb
push
push
and
in
push
xor
add
and
aaa
out
insb
xchg
gs
ljmp
xor
ret
jmp
fisttps
repnz
and
jmp
cmp
mov
push
lds
mov
aad
sub
push
lahf
push
cmp
cli
lock
dec
jmp
pop
jle
out
subb
jno
mov
stc
dec
outsl
mov
xchg
aas
push
or
jbe
es
or
mov
insb
sub
out
mov
aas
fldl
subl
sahf
fsubrl
cs
fstl
rcl
sbb
pmaxsw
aaa
pop
cli
mov
push
push
mov
inc
pop
insl
repnz
sub
jns
pop
push
dec
movsb
aam
cld
fdivs
and
or
push
or
les
mov
xchg
aaa
lods
inc
cmpsb
pop
pop
mov
cmc
add
movsl
imul
fistl
and
clc
and
xchg
cmpsl
lret
rclb
shl
mov
fmull
adc
adc
nop
ret
adc
aam
xchg
pop
fdivrl
sarl
shl
pop
stos
sub
add
mov
out
jge
cmp
jne
fsubs
cwtl
xchg
push
insb
and
imul
mov
leave
test
add
cmc
clc
test
call
xchg
mov
lds
icebp
push
loop
into
leave
push
inc
sub
int3
scas
mov
in
imul
mov
add
mov
or
jecxz
jmp
in
xlat
loope
repz
xor
inc
cld
outsl
gs
push
test
sub
add
jg
adc
cmp
fisttpl
inc
jo
dec
xchg
sub
inc
add
aas
jbe
daa
inc
movsb
sahf
sub
jno
icebp
and
repz
std
lods
sbbl
hlt
or
mov
mov
pop
cli
cmpsb
cld
insb
push
pushf
orl
xlat
or
scas
and
rorl
dec
mov
test
rcl
stos
pop
stos
sub
pop
dec
ret
cmc
dec
popa
xor
mov
orb
mov
cmp
rorl
cmp
das
xchg
mov
xchg
pop
or
mov
dec
jg
xchg
insb
hlt
sbb
or
lds
je
sti
jg
xor
pop
or
jl
cmp
outsl
shll
enter
pushf
shl
notb
aam
or
cmp
xchg
jb
loop
jne,pt
in
mov
in
pop
dec
das
push
sub
xor
clc
sti
ret
fucomi
daa
dec
je
or
les
push
lock
das
jle
fwait
lahf
sbb
test
sbb
xchg
cmpsb
and
imul
rorl
mov
loopne
pop
dec
add
or
in
mov
fdivs
cmc
xor
data16
rcll
mov
aas
pop
push
inc
repz
mov
inc
es
andb
stc
test
jmp
mov
pop
sub
inc
xor
jne
outsb
or
push
mov
xchg
sbbl
or
sub
leave
or
mov
jno
dec
aas
mov
rcr
rcrl
lahf
push
rcrb
xlat
mov
adc
mov
xchg
pop
lock
xchg
and
jl
or
mov
cmp
or
stos
fnsave
add
sahf
in
out
add
mov
sub
mov
adc
or
lcall
test
xchg
cmp
leave
icebp
and
adc
test
mov
xchg
ret
lret
out
insb
lds
rorl
pop
or
les
enter
notb
inc
in
adc
sbb
aad
pop
lret
rorw
or
jmp
sbb
std
mov
enter
flds
test
fidivs
outsl
dec
inc
bound
stc
pop
clc
inc
stos
inc
mov
sarl
ss
sub
push
adc
inc
xor
xchg
sbb
aam
add
rcrb
jg
out
add
inc
sahf
bound
jp
insb
xchg
idivb
cs
mov
movsb
fs
popf
mov
cmp
lcall
test
mov
out
xchg
pop
pop
es
das
jge
sar
jbe
or
bound
fldt
les
dec
stos
mov
dec
push
lea
fists
sub
in
in
aad
out
lahf
sub
inc
out
pop
loope
jmp
popa
aaa
adc
pop
leave
andl
jge
aaa
and
xchg
cmp
inc
dec
fisttpl
xor
popf
and
fidivrs
xchg
scas
ja
dec
pop
xor
sbb
pushf
push
xlat
nop
push
icebp
xlat
push
shlb
fldl2e
mov
fdiv
out
leave
xchg
stos
pop
ss
js
push
inc
sub
mov
clc
mov
in
stos
xor
mov
test
pusha
xor
push
aad
and
iret
sub
or
in
outsl
and
pop
jg
mov
dec
adc
dec
sar
test
les
inc
jge
test
mov
test
pop
pop
dec
adc
lea
cmp
andl
scas
les
inc
insb
xchg
adc
ss
iret
mov
sub
test
icebp
mov
aaa
std
and
sub
in
mov
sbb
arpl
stc
gs
sbb
jo
iret
adc
test
and
inc
adc
and
cmp
test
jae
rclb
test
aad
mov
adc
inc
fsub
dec
mov
jo
adc
inc
cmc
add
mov
mov
dec
add
or
in
xchg
push
adc
adc
cltd
lcall
adc
jne
int3
mov
jb
xchg
ljmp
or
xor
adc
mov
push
mov
imul
push
outsb
xchg
clc
or
or
cmp
and
xor
fists
fsubp
cmp
shr
jmp
cli
stc
icebp
jae
insb
jle
movsl
test
sbb
mov
push
adc
push
jno
or
hlt
outsl
pusha
testl
shr
push
lods
add
xchg
push
rcll
aas
hlt
or
dec
sbb
cmp
pop
fdivs
mov
sub
sub
mov
xor
out
movsb
data16
stos
sub
pushl
or
shlb
xchg
or
add
sbb
xchg
inc
les
xor
bound
add
ret
mov
jne
cwtl
mov
add
daa
mov
dec
jno
int
push
jns
ljmp
xor
push
and
xor
or
fiadds
mov
xchg
adc
xor
lock
xchg
rcrl
repnz
mov
arpl
and
and
cmpsb
sahf
jae
adc
rcr
dec
mov
call
jle
daa
jae
cli
jo
push
fsts
sarb
mov
std
mov
ret
sub
loope
add
mov
lods
adc
mov
xchg
lock
icebp
lcall
mov
movsb
xchg
daa
xchg
je
movsl
pop
insl
imull
add
popa
push
adc
adc
pop
or
out
xor
int3
xchg
pop
adc
mov
jbe
push
dec
xlat
fidivrl
std
inc
scas
sub
ret
mov
lret
or
xchg
ljmp
sub
and
cmp
jle
stos
mov
mov
fimull
movsb
decb
add
outsl
mov
mov
pop
fs
add
jmp
push
jp
jmp
xorl
jo
cmpsb
sar
push
jbe
clc
fstpt
push
js
ret
js
sbb
and
das
inc
sub
sub
adc
clc
jmp
ret
jmp
mov
cld
or
add
into
aaa
mov
dec
add
outsl
pop
bound
jecxz
cli
inc
lret
or
es
jb
jns
divb
mov
icebp
mov
scas
loope
repnz
sub
ficoml
pushf
cmp
daa
xor
ss
cmp
mov
cmp
and
aas
jle
rcl
mov
inc
fdivrl
fldl
outsl
inc
in
mov
adc
xor
aam
pop
test
sub
push
dec
push
outsb
jl
mov
lods
push
mov
mov
or
pop
pop
flds
fldl
leave
je
ss
out
mov
inc
push
mov
int
jmp
mov
loopne
movl
shlb
enter
outsl
mov
icebp
xor
or
add
icebp
push
pop
fadds
inc
cli
xchg
mov
jecxz
mov
ljmp
mov
sbb
jo,pn
mov
adc
jno
lea
dec
dec
movsb
aas
pop
adc
mov
lea
fisttpll
xor
adc
int
xor
movsb
mov
xor
or
insl
cltd
pop
movsb
popa
stos
imul
idivb
bound
and
daa
movl
sbb
dec
mov
decl
outsl
ret
xor
aaa
call
dec
data16
jmp
shl
jbe
and
jno
xor
into
or
jno
test
push
ljmp
cli
xor
push
shlb
push
mov
mov
cmp
sbb
mov
pop
cs
lahf
mov
add
and
mov
xchg
dec
cmp
sbb
pop
add
mov
and
test
dec
or
adc
out
dec
xchg
xchg
or
xor
data16
std
sahf
cld
adc
orl
sahf
movsl
push
inc
mov
or
push
push
sub
out
js
adc
xchg
mov
mov
icebp
adc
in
xchg
mov
push
lea
push
pop
scas
mull
mov
xor
out
clc
or
enter
mov
xor
sub
push
js
fldl
cmc
lahf
xchg
test
sub
sub
or
adc
out
add
stos
jge
or
pop
fisttpl
pop
leave
mov
jo
push
jg
xlat
cs
xlat
bound
add
pop
xlat
das
mov
repnz
pop
repz
adc
mov
cli
xor
clc
cmc
test
repz
pop
xchg
imul
fsts
jns
sbb
stos
in
in
fdivrs
or
fxch
cmp
sbb
pop
mov
xchg
mov
cmp
cmp
dec
sbb
push
dec
or
outsl
test
inc
aaa
xlat
add
sbb
outsb
mov
mov
scas
cli
in
mov
sub
ret
mov
movsl
add
enter
xchg
lods
cmp
sub
icebp
mov
andl
mov
jp
js
inc
orl
inc
xchg
cs
mov
xchg
daa
cmp
sbb
cmp
hlt
and
mov
lcall
cmpb
cmpsb
mov
add
pop
sub
cmpsb
xchg
mov
les
lds
adc
lods
xor
movsl
xchg
data16
lea
or
add
iret
cmp
jle
in
ret
popa
adc
fildll
dec
call
ret
sub
mov
clc
cmp
in
jg
mov
add
stos
aad
add
test
je
iret
sub
jo
and
call
dec
inc
adc
mov
inc
push
sarb
sub
pop
movsb
push
insb
jne
jmp
addr16
adc
mov
pusha
xlat
and
lock
sbb
bnd
jp
dec
mov
pop
add
jne
push
in
jo
push
shlb
rorl
adc
add
mov
push
mov
fistps
inc
movsl
jo
movsl
or
fisttpll
lahf
lds
xchg
scas
mov
lea
mov
push
dec
loope
loopne
lea
xor
std
fdiv
mov
jnp
outsb
rcrl
lcall
or
movb
add
dec
out
jnp
cwtl
aad
mov
in
clc
enterw
cmp
add
cmc
inc
cmp
out
hlt
andl
adc
subl
sbbb
sbb
subb
js
adc
test
cmpsl
inc
or
mov
push
test
mov
nop
jb
push
std
xor
jg
pop
sbb
add
pop
or
sarb
rcr
loopne
loopne
and
xorl
test
xor
jge
push
xchg
lea
loope
subl
push
subb
aam
xor
inc
lods
or
dec
mov
cwtl
notb
outsb
int
cmp
ret
outsl
mov
stos
cwtl
push
incl
sar
adc
dec
rolb
cmpsl
aas
adc
pop
and
ds
hlt
mov
lock
inc
cltd
call
std
or
pop
addr16
insb
cmp
push
in
jg
lcall
fidivl
and
aad
test
sub
push
dec
popa
jle
adc
inc
jo
mov
push
je
add
ffreep
mov
out
mov
dec
sarl
add
cmpb
adc
nop
lcall
sahf
push
push
jg
sbb
and
xor
dec
clc
mov
nop
scas
jb
dec
xchg
push
insl
jb
jl
pop
sbb
data16
inc
fadd
sbb
dec
fs
mov
sbb
add
cs
mov
fisubs
pop
xchg
movl
inc
xor
dec
cmpsb
mov
outsl
mov
xor
add
cmc
dec
shlb
mov
pop
pop
add
push
mov
xchg
xchg
jg
cmpb
call
stos
mov
out
std
es
and
xchg
add
dec
pop
add
int3
mov
pop
pusha
pop
scas
dec
push
jo
xorb
gs
sbb
adc
sbb
push
sbb
insb
or
jl
xchg
fisttpl
scas
xlat
jmp
xchg
scas
pop
test
jge
sbb
or
inc
addr16
cld
rcr
add
xor
mov
cmp
mov
jae
inc
test
push
adc
icebp
iret
add
sub
popl
pop
pop
mov
xchg
sub
aam
scas
xor
lds
cmpl
insl
scas
jecxz
fs
cmp
movsl
fildl
sub
imul
fiadds
out
or
hlt
or
scas
fucom
insl
mov
sbb
xchg
and
push
mov
mov
lea
and
pusha
cmp
vbroadcastsd
add
adc
sub
jg
push
jbe
arpl
andb
sbb
mov
adc
test
or
dec
arpl
jnp
mull
push
cmc
or
mov
sar
push
lret
imul
mov
xchg
mov
into
dec
mov
mov
rcll
sbb
idivl
inc
and
dec
adc
pop
test
pop
mov
jge,pn
inc
mov
arpl
pop
cmc
push
test
xor
ror
pop
cs
push
insb
insl
mov
mov
test
and
cmp
divl
std
push
xor
and
int3
sub
stc
pushf
mov
mov
dec
andl
ja
lcall
cld
shll
shll
mov
cmp
inc
and
push
push
aas
sub
lods
adc
jl
call
mov
mov
push
mov
rorl
dec
ret
xorb
ja
cmp
and
rcl
cs
icebp
clc
lods
jmp
in
jnp
xor
mov
icebp
jl
stc
out
cmp
call
shlb
cmc
stc
pop
ret
rol
clc
and
jmp
sarl
cmpsl
xor
mov
cli
pop
push
and
adc
arpl
add
insb
push
mov
inc
shrl
or
dec
ljmp
movsl
xor
xchg
jl
fld
and
mov
fsubl
das
pop
clc
adc
test
ret
decl
cli
pop
or
cmpsl
dec
mov
mov
mov
lea
popa
je
inc
orb
ja
les
cs
mov
xor
shrb
sbb
insl
aaa
cmp
mov
js
jle
xor
cmpl
adc
sub
push
test
fmull
cli
inc
push
out
mov
ljmp
inc
push
imul
jecxz
outsb
sti
pusha
add
cmpb
divb
pop
sub
add
mov
orb
ljmp
xor
sbb
push
push
push
jo
pop
test
aam
push
pop
cmp
and
and
jo
xor
repz
fidivl
fwait
xor
mov
dec
mov
scas
lahf
fwait
je
push
adc
addr16
fsubp
dec
and
cmp
mov
dec
and
out
cmpsl
or
sub
aaa
fdivl
and
push
push
mov
mov
ret
jbe
int
mov
cmpb
sub
jge
pop
nop
inc
mov
inc
cmc
dec
ficoml
pop
loopne
in
test
adc
ret
div
sub
insl
sub
into
sub
pop
mov
jnp
sub
dec
aas
xor
pop
xor
dec
pop
pop
add
pop
in
enter
inc
test
jge
loop
jle
imul
xchg
xchg
lret
add
mov
cli
lret
mov
dec
cmp
inc
jmp
jle
jg
xlat
xor
out
mov
push
or
out
xchg
xor
mov
aaa
cs
add
mov
lock
cmp
mov
inc
sti
cmp
mov
cwtl
inc
jbe
loopne
sbbl
aam
les
and
cli
lods
adc
jecxz
sub
mov
aas
mov
mov
push
or
cmc
or
aaa
ftst
jno
call
daa
xor
push
mov
jmp
push
dec
pop
or
fisttpll
repnz
popa
fucomp
fs
add
jle
xchg
sub
mov
push
inc
outsb
adc
inc
xor
es
xor
jge
jg
jb
ds
daa
shll
in
js
aas
das
in
xorb
mov
push
jbe
pop
loop
inc
mov
lock
adc
dec
mov
insl
and
lods
mov
mov
divl
orb
lahf
xor
adc
or
lods
mov
pop
inc
push
rclb
rorb
cmpsb
and
ror
icebp
adcl
lods
add
pop
std
cwtl
sub
pusha
xor
mov
ret
rclb
rcll
ljmp
jno
call
js
lret
push
xchg
jnp
cmp
addb
push
imul
negb
cltd
scas
outsl
ds
enter
cmpsb
scas
and
pop
xorb
dec
ja
cs
pushf
sbb
xchg
incb
stc
out
fsub
mov
dec
mov
mov
mov
sub
leave
je
daa
aad
cmpsl
cli
dec
movsb
dec
xor
hlt
frstor
mov
and
pop
jp
xor
mov
ljmp
mov
sbb
xchg
cs
sbb
in
mov
cmpsl
jle
pop
rcrb
jmp
enter
sbb
add
test
mov
aaa
or
jmp
or
repnz
pop
fstpl
inc
cmp
lds
xor
clc
xchg
sub
arpl
es
fstpt
push
pop
pop
fsubrs
mov
stc
add
repz
shrb
add
ss
rcl
xchg
sub
xchg
jmp
mov
lcall
clc
sub
dec
repz
pop
fsubrs
sub
cld
jne
pop
insb
xchg
daa
push
xchg
xchg
adc
repz
mov
push
test
or
mov
cld
in
decl
sbb
pop
movsl
dec
dec
fdivl
out
sub
repnz
outsb
adc
popf
pushf
jl
fnstenv
int3
and
inc
scas
clc
add
outsl
xchg
ja
dec
push
fbstp
mov
adc
mov
mov
and
pop
outsb
loopne
push
stos
or
repz
or
cmp
les
adc
mov
movsb
rcr
stos
aaa
cld
adc
shlb
xor
adc
out
bound
adc
lcall
shlb
ljmp
cmpsb
inc
mov
add
sub
jne
adc
sub
mov
xchg
jmp
cmpsl
push
sbb
mov
mov
pop
add
cwtl
sbb
mov
mov
les
inc
out
mov
repz
lcall
test
mov
je
hlt
add
mov
in
xchg
pop
mov
jp
rcll
fs
lods
pop
xchg
xlat
fwait
sbb
stos
add
sbb
rclb
mov
nop
mov
or
push
sub
mov
push
filds
faddl
ret
adc
shlb
or
aaa
adc
shlb
add
ljmp
push
bound
arpl
mov
loope
jge
jl
in
setns
sarl
jg
aam
xchg
sub
xor
push
lea
and
dec
sbb
std
pop
push
jg
popa
cmp
aas
ret
push
jo
jg
jg
ret
inc
iret
push
push
adc
mov
bound
cmc
push
inc
push
aam
add
add
arpl
pop
pusha
jmp
stos
fcoms
ss
mov
jbe
out
mov
xor
and
sti
adc
inc
into
xor
cli
out
rcr
add
and
loopne
fmull
mov
add
lret
pop
fbstp
xchg
lret
pop
mov
fwait
pop
cmp
loope
scas
and
stc
ror
in
mov
or
or
sti
jg
or
dec
sahf
pop
push
mov
add
insl
sbb
mov
push
xor
imul
jns
or
addl
mov
mov
scas
jg
add
cmpsb
sub
dec
insl
or
adc
loopne
mov
or
iret
or
bound
adc
lods
mov
fildl
scas
and
mov
dec
push
add
std
test
and
push
xor
mov
xchg
mov
loopne
push
push
mov
jecxz
arpl
movsl
pop
daa
ficoms
and
fistpl
push
xchg
ret
sub
adc
and
ret
rcll
push
xlat
lcall
out
mov
inc
nop
stos
mov
cmpsl
hlt
adc
dec
adc
rclb
enter
jb
into
hlt
jo
pop
mov
je
ljmp
mov
add
pop
stos
das
out
inc
jecxz
iret
push
add
shl
pop
and
js
and
lock
jmp
rcrb
mov
or
imul
inc
les
jl
ret
or
jno
inc
pop
leave
sbb
into
pop
jp
cmpsl
pop
das
sub
and
sbb
ror
xchg
xchg
lea
add
les
cmp
stc
hlt
xor
fsub
mov
popf
sub
xchg
xor
cmp
repnz
in
mov
mov
cmp
lock
push
insb
iret
mov
into
mov
outsl
rorb
sbb
jg
into
mov
mov
pop
sbb
jge
pop
scas
xor
dec
xor
sbb
sbbl
pop
dec
push
cmp
mov
jns
add
hlt
daa
pop
movsb
pop
lock
jo
lret
xchg
mov
inc
fistpll
andl
inc
rclb
dec
add
add
lahf
or
cmp
in
loopne
addr16
jg
or
xor
mov
stos
fnstenv
popf
xor
ret
imul
hlt
sti
sub
and
icebp
or
mov
inc
adc
dec
xor
sub
jg
pusha
out
adc
out
inc
adcl
push
ret
adc
cs
push
inc
jl
dec
xor
leave
fs
divl
sbb
sub
neg
mov
inc
sbb
jmp
faddl
and
xor
add
mov
aad
push
repnz
dec
sub
cmp
jae
pop
inc
std
fistps
neg
inc
mov
sub
inc
inc
add
jno
in
negl
jne
cmp
or
mov
pushl
out
fucomip
ljmp
in
roll
adc
pop
and
std
divb
cltd
stos
inc
sbb
cmp
add
pop
inc
mov
mov
inc
push
mov
push
into
repnz
aaa
jnp
mov
aaa
jb
xchg
in
sbb
out
mov
and
cmp
cmp
push
sub
sub
dec
add
icebp
add
sbb
neg
add
out
call
repnz
add
sbb
adc
dec
jmp
iret
inc
sub
neg
dec
inc
adc
pushf
std
filds
sbb
not
sbb
dec
sub
imul
scas
fstl
xor
rcrl
lret
hlt
sub
jo
not
mov
shl
sbb
pop
xor
shrb
sti
push
js
insl
push
inc
inc
sub
inc
sbb
mov
sub
fs
adc
push
insl
jmp
or
or
xor
jl
les
add
iret
fbstp
lret
into
sarb
lods
mov
shll
fbstp
sub
inc
fiadds
adc
mov
inc
xchg
mov
test
sub
and
dec
dec
ja
jo
add
push
mov
mov
in
jg
xchg
lods
inc
mov
mov
or
ljmp
adc
mov
jne
mov
and
cld
add
mov
or
stc
pop
mov
out
push
xor
and
mov
push
sbb
idiv
out
scas
inc
and
insl
dec
adc
fisttpll
out
inc
push
pushl
and
mov
in
pusha
in
or
pop
inc
dec
into
xlat
sub
cmp
mov
or
mov
push
mov
dec
inc
inc
out
push
jnp
roll
mov
mov
push
add
mov
mov
int
mov
mov
mov
sbb
in
sar
iret
xchg
add
inc
xor
xchg
icebp
jno
bound
idivl
or
mov
add
xor
cs
iret
std
js
add
inc
pop
mov
lods
push
xchg
lcall
addr16
cmp
xchg
ja
mov
dec
push
mov
rorb
ljmp
add
jno
inc
push
add
or
xchg
sub
std
int
inc
outsl
cmpb
dec
decl
sahf
sbb
ja
andb
push
mov
lock
scas
sti
push
ljmp
pop
lar
sar
lea
and
pop
enter
nop
call
cmp
pop
mov
adc
push
cmp
out
ja
lock
jns
mov
push
sbb
xor
decb
addr16
jae
inc
inc
mov
out
xchg
inc
inc
idivb
or
stos
pop
clc
lcall
add
lret
sub
dec
inc
insb
mov
les
adc
jae
loope
icebp
mov
inc
inc
comiss
push
test
inc
sbb
fwait
mov
xor
mov
xor
inc
and
inc
mov
sbb
loope
xchg
and
sbb
mov
mov
out
adc
and
cmp
pop
fcompl
cmp
out
adc
adc
sbb
add
rcl
and
jge
out
sahf
fdivr
fsubrp
or
or
das
cwtl
and
les
out
in
lock
mov
fcmovne
aas
fidivrs
or
pop
sub
and
movsb
mov
arpl
mov
out
pop
cli
icebp
inc
cmpsl
enter
movsl
insb
adc
jmp
test
ret
jle
test
dec
sti
lahf
lock
jmp
pusha
xchg
in
sarb
push
in
push
add
jg
fistpl
mov
sub
std
ja
adc
fldt
out
mov
xchg
mov
xchg
lcall
jmp
shrl
inc
cld
dec
mov
inc
mov
pop
rorb
pop
push
inc
add
loopne
outsl
inc
cli
pop
adc
in
je
mov
aaa
pushl
dec
sub
inc
cltd
jg
leave
mov
jle
fistpll
insl
xor
sti
cmp
cwtl
je
xchg
dec
inc
sti
rorl
call
cmp
sahf
sub
xor
cmp
inc
popa
mov
and
arpl
fidivrs
or
nop
insl
cmp
call
dec
out
into
mov
push
int
sub
jle
jg
cmpb
jnp
add
sub
mov
push
mov
gs
gs
sbb
dec
stos
lret
ret
mov
out
fcmovu
mov
dec
jle
lods
iret
cwtl
pop
jnp
xchg
cld
fildl
imul
cmpsb
mov
cmpsl
lods
mov
adc
mov
ja
jp
call
mov
push
lods
inc
push
or
sbbl
stc
xchg
loopne
call
pop
dec
add
mov
in
ror
mov
lahf
movsl
sar
stos
outsb
sarb
lret
arpl
pop
fistps
adc
pop
enter
in
cmpsl
pop
sti
pop
jecxz
mov
outsl
inc
sub
push
sarl
sbb
aaa
mov
add
std
lahf
mov
mov
aad
test
shlb
jne
iret
xor
popf
push
ss
out
lock
loope
ss
jo
jb
jle
jp
jns
mov
mov
imul
mov
mov
out
sub
shll
mov
push
fstpl
aaa
sbbl
pop
mov
mov
movsl
inc
in
insb
ja
pop
stc
inc
cmp
ret
and
or
ja
jge
push
xchg
xlat
xor
test
js
ljmp
das
into
repz
jg
std
outsl
inc
mov
mov
jl
stos
adc
das
call
add
xchg
push
or
add
jmp
sub
fwait
aaa
addr16
add
pop
mov
repnz
lds
fdivrl
jle
dec
or
bound
mov
stos
test
and
out
cs
pop
mov
das
imul
jecxz
sub
idiv
and
sub
jne
out
xchg
stc
and
nop
mov
cs
adc
pop
cld
mov
mov
and
mov
sarb
sahf
lcall
mov
push
mov
imul
pushl
jg
and
sbb
or
and
ss
cli
fistpll
test
cltd
js
ficoml
decl
les
or
xlat
cli
push
inc
aaa
sbb
ja
cmp
and
add
cmpxchg
xchg
and
and
stos
aas
push
sbb
out
cmp
incb
aas
mov
sub
sub
dec
pusha
cli
cli
and
lahf
pop
stos
imul
mov
sbb
xor
cmc
or
test
mov
dec
mov
call
hlt
and
gs
push
cmp
out
dec
loopne
inc
inc
sub
adc
inc
outsl
dec
nop
mov
cmp
cmp
lea
mov
sbb
and
mov
lea
mov
adc
cs
lock
dec
adc
mov
cmp
push
sub
popa
mov
jl
fcompl
imul
jg
loop
dec
leave
iret
jg
popl
adc
clc
xchg
xchg
arpl
pop
mov
dec
popa
es
loope
fistps
mov
sub
add
dec
mov
fnstsw
fisubs
xchg
sub
jp
lock
add
and
jne
cli
out
std
out
xchg
sub
mov
fistpll
gs
pushl
cmp
mov
pop
cs
mov
int3
out
add
push
xchg
cli
adc
jmp
add
pushl
leave
out
fstpl
mov
out
mov
bound
pop
lretw
mov
push
jp
cmpsb
and
fists
incl
jns
and
out
jge
mov
ljmp
mov
or
rcrb
jmp
ret
adc
pop
hlt
call
out
std
ffreep
aas
jae
mov
cmp
jae
pop
push
sub
mov
ret
dec
cmp
mov
adc
mov
adc
sub
adc
lcall
jmp
arpl
outsl
push
xchg
dec
outsl
push
in
cld
cmc
ja
sbb
pop
aad
addr16
mov
mov
out
xchg
dec
gs
jge
inc
js
sbb
inc
xor
movsl
repz
sbb
adc
sbb
mov
roll
adc
insb
loop
xor
jp
or
and
and
movsl
sarb
cmp
std
neg
loope
jnp
push
imul
in
jmp
std
arpl
jbe
xor
adc
jbe
fistps
or
les
rcrl
fimuls
inc
insl
bound
loope
repnz
pop
dec
lcall
loop
adc
test
mov
dec
cmp
scas
cmpsl
movsb
mov
mov
lods
push
cmp
cmp
mov
xchg
ret
sti
cwtl
shrl
adc
roll
lock
lret
jmp
jle
mov
or
mov
push
xchg
in
sbb
inc
bound
xlat
incl
mov
sbb
enter
mov
loope
push
imul
in
std
cmp
mov
jo
daa
and
and
repnz
mov
sbb
seto
or
cmp
xlat
mov
push
addl
and
lock
repnz
pop
and
adc
inc
loopne
pop
cwtl
push
aas
fmuls
cmp
jg
ss
cmpsb
inc
icebp
mov
mov
ljmp
jg
jae
cmp
dec
cmpsl
in
push
inc
in
aas
mov
mov
dec
int3
pusha
sarb
cmpsl
ficoms
orl
pop
out
loope
out
fadd
rorb
jns
test
pop
shlb
jg
pushl
push
dec
mov
xchg
rclb
sar
adc
cmp
pop
and
cmpsl
fimull
push
ja
aas
dec
pop
and
lcall
roll
cltd
movsb
ljmp
fisubs
rorl
ds
aaa
pop
mov
cs
mov
sub
sub
sahf
out
pop
mov
arpl
mov
sub
jg
sti
mov
mov
adc
popf
mov
jp
jle
cs
mov
loope
divl
aam
jnp
ljmp
jmp
bt
fmuls
xchg
jg
pop
or
mov
ret
sub
mov
fdivr
inc
stos
mov
fcoml
in
std
fucom
pop
dec
and
ja
nop
movsl
sub
call
decl
test
out
sub
js
inc
xor
decl
and
inc
cwtl
out
incb
popf
sahf
lea
jecxz
jbe
out
mov
xchg
sbb
push
scas
jp
loope
ret
adc
out
mov
xorl
fdivrs
scas
pop
loope
scas
scas
and
sbb
enter
loopne
sti
ljmp
mov
add
inc
sbb
decl
xlat
imul
jmp
mov
out
or
jle
iret
in
push
mov
xor
insb
rcr
dec
and
addr16
das
les
mov
stc
cmp
push
rcrb
mov
sahf
jg
ret
inc
xor
mov
arpl
inc
jge
sar
ret
roll
inc
sub
popf
and
leave
sbb
adc
cld
jmp
mov
call
push
ja
orb
push
imul
mov
and
jno
push
pop
rol
aas
mov
repnz
js
out
imul
push
popf
fnclex
out
scas
jb
lds
xchg
jg
test
mov
pop
cmp
push
xor
int3
pop
push
sbb
ss
xor
mov
mov
push
cmp
and
push
call
mov
clc
mov
mov
std
fildl
xor
pop
in
gs
fcompl
mov
call
inc
in
rol
fs
hlt
iret
hlt
ljmp
loopne
lret
jmp
lea
push
mov
lret
mov
push
stos
aam
add
adc
jmp
out
je
jne
cmp
pop
and
inc
jnp
mov
mov
enter
jle
call
xchg
and
mov
mov
or
cmp
pop
mov
into
cmp
cmp
cmpsl
xlat
pop
sti
push
inc
gs
orl
lea
push
jp
out
sbb
into
out
out
out
js
cmp
cmp
aas
mov
rorl
insb
outsb
push
fucom
test
lock
fcmovu
sub
daa
test
xor
fs
ds
out
or
negb
jae
aas
adc
ds
mov
jae
inc
or
add
imul
cli
aaa
inc
loopne
jecxz
loopne
pop
xchg
enter
popa
sub
cmp
addl
sbb
decl
loope
mov
pop
insl
cmc
mov
inc
mov
popf
sbb
loopne
lods
ja
jb
jg
lahf
push
inc
mov
mov
ja
cmp
push
out
cmpsl
mov
imul
insl
cli
pop
xlat
inc
pop
cltd
inc
aad
out
lock
mov
dec
sub
push
pop
mov
xor
sarl
outsb
mov
shl
out
fcompl
and
ljmp
aaa
jl
out
call
push
mov
rcrl
sbb
fistps
and
sub
out
jge
xor
punpckhbw
push
fildll
and
mov
sti
fmuls
fistps
es
pop
popl
test
pop
mov
int3
sub
icebp
arpl
sub
mov
adc
or
out
adc
xor
test
sub
inc
or
test
arpl
cmp
out
sbb
dec
aas
add
jnp
pop
mov
sub
test
add
sbb
and
loope
jmp
scas
xor
iret
ds
lds
add
mov
jne
insb
in
xor
mov
adc
push
dec
ds
inc
sub
es
ja
mov
xor
adc
test
lods
push
imul
mov
loopne
and
decb
jge
or
jae
mov
shl
cmpsb
push
pop
sub
outsb
mov
icebp
fucom
rol
gs
in
in
lahf
sbb
test
idiv
mov
into
cmp
pop
mov
loop
lahf
aad
dec
in
mov
es
loope
mov
cs
cmp
jle
push
or
push
stos
jl
jmp
leave
xchg
adc
pop
ficoml
and
jp
push
ljmp
outsl
pop
into
std
fsubr
rcrl
mov
mov
xchg
ret
fs
sub
fcomip
incb
loop
pop
push
xor
adc
out
dec
es
push
popf
push
xchg
push
jmp
test
std
aas
loope
sub
xchg
pop
mov
icebp
dec
in
add
sti
pop
bound
mov
shll
push
sarb
sarl
inc
daa
shrb
cld
pop
mov
xlat
hlt
fadds
xchg
mov
add
popa
loop
notl
jecxz
out
es
cmp
add
xchg
add
and
xchg
bound
cld
sbb
dec
sarl
fisttpll
adc
aaa
jnp
xchg
aas
inc
andl
pop
mov
xchg
pop
popf
stos
negl
cld
push
mov
rcr
sbb
cmpsl
js
mov
mov
mov
stc
out
jmp
inc
lcall
jbe
imul
filds
jg
mov
sbb
push
hlt
jne
jecxz
jp
or
mov
sahf
clc
fs
lahf
dec
ja
cli
mov
dec
and
add
add
sbb
out
mov
jmp
inc
jb
mov
inc
mov
loopne
or
xchg
add
xlat
add
mov
repnz
dec
orb
out
mov
bound
jle
call
xor
leave
mov
call
lret
scas
shlb
leave
mov
adc
jg
fwait
xlat
cld
and
sbb
test
andl
xchg
clc
outsl
xchg
loopne
mov
dec
addb
into
mov
jecxz
add
push
out
ja
das
sbb
ja
and
aaa
xchg
cmpl
xchg
loop
test
int
aad
pop
pop
leave
mov
bound
sti
out
jge
cmp
xchg
and
sar
xchg
adc
and
push
in
mov
adc
mov
xchg
fsubs
mov
shrd
hlt
rcll
add
push
data16
out
jno
cvttps2pi
ret
sub
scas
cli
test
ficoms
or
bound
aas
inc
addr16
jae
add
jge
sub
mov
pop
inc
dec
adcb
test
dec
inc
cmp
push
cmp
call
mov
sarl
arpl
jae
iret
mov
outsb
jns
pop
outsb
push
xchg
xor
mov
sbb
push
mov
ss
in
ret
add
pop
pop
dec
sub
fstps
ret
mov
lahf
in
and
mov
lahf
cmc
push
xor
jno
loopne
out
aad
icebp
pop
cwtl
rcll
push
push
cli
popa
lahf
mov
lret
or
cld
dec
xor
ljmp
inc
and
arpl
mov
push
stos
or
mov
iret
mov
inc
out
sbb
adc
cmc
lcall
adc
lds
shlb
fscale
pop
lock
jne
fisttpll
push
clc
out
mov
mov
cmc
popf
sti
js
pop
cmp
cwtl
mov
clc
sub
mov
ljmp
das
xchg
xchg
inc
enter
aas
dec
lock
mov
dec
xchg
imul
data16
mov
rorb
and
ret
sub
sub
sub
mov
xchg
adc
xlat
and
shlb
jmp
dec
mov
inc
aam
xor
push
sbb
in
push
scas
push
popa
in
sbb
ljmp
xchg
jge
lahf
aad
xor
fsubl
cmp
rolb
sbb
ret
movsb
adc
in
decb
insl
or
sub
les
jmp
adc
popf
or
ljmp
push
cmp
lds
push
insl
fpatan
sub
mov
das
xor
mov
cwtl
inc
jne
inc
les
adc
aam
push
cmpsl
leave
pop
scas
jae
inc
out
xchg
and
cltd
out
or
sbb
sbb
sarl
sbb
or
push
cltd
sbb
js
mov
push
mov
lds
adc
jo
adc
add
inc
dec
jb
add
outsb
push
sbb
cmp
aam
fdivr
cmc
aad
scas
hlt
mov
dec
stos
mov
aaa
inc
xor
jmp
daa
jg
clc
repnz
mov
pushf
sub
out
push
mov
mov
shlb
jecxz
rorl
cli
outsb
stos
ds
sti
shl
pop
leave
cs
pop
jmp
adc
and
in
fcom
sub
push
push
mov
cmp
jg
daa
int3
les
jge
cmp
lret
inc
imul
popf
and
add
incl
mov
sub
dec
xorb
decl
lock
icebp
out
mov
inc
mov
shll
xor
xchg
dec
xchg
addr16
pop
cmp
repz
fistpll
jo
int3
sub
out
mov
shrl
cld
jg
jg
mov
push
mov
mov
pop
xor
xchg
jne
arpl
adc
mov
push
rcr
idivb
iret
ljmp
int3
sti
lea
nop
daa
lods
sar
out
fdivr
xchg
cmpsl
jmp
or
lds
mov
xchg
clc
or
mov
push
sarb
mov
mov
incl
add
inc
test
add
sbb
fisubrs
xchg
inc
inc
jb
xor
sbb
stos
imul
mov
loop
lods
out
repz
aas
mov
pop
or
add
or
fldl
inc
xor
repnz
push
out
lahf
rcrl
cmc
add
icebp
xor
or
movsl
xchg
repnz
cmp
or
and
dec
ja
push
or
dec
jecxz
pop
jmp
imul
mov
in
pop
or
push
adc
xchg
xor
out
insb
les
dec
mov
mov
int3
cmp
pop
mov
pop
cli
or
fldt
inc
iret
stos
enter
lods
cmp
clc
xor
imul
mov
rcll
pop
rolb
je
incb
fnstcw
stos
lcall
mov
sbb
loopne
movsb
mov
rclb
jnp
mov
hlt
xor
imul
adc
in
mov
jmp
xchg
ss
push
lods
mov
lods
ljmp
inc
mov
cltd
lds
xchg
stos
test
out
xchg
xor
mov
cmp
test
ret
aas
sahf
loope
xchg
dec
ja
sub
dec
push
jl
clc
xchg
jnp
sbb
mov
idiv
sbb
rcll
jg
pusha
jno
sbbb
jge
or
pop
daa
jns
jecxz
rdmsr
repz
aas
adc
inc
lock
jb
movsb
push
xor
jge
scas
in
std
into
pop
in
aad
imul
xchg
out
mov
add
mov
ja
mov
pop
inc
sarl
sbb
sbb
jb
shll
testl
rorl
xor
add
inc
pop
inc
js
sti
out
cmc
cmp
negl
lds
jp
mov
sti
lahf
push
push
xor
xchg
pop
pop
stos
lahf
lock
xchg
je
jnp
sub
cmp
sti
in
ds
mov
or
int
inc
loop
pop
cwtl
pop
sub
out
aas
or
push
rclb
mov
rcll
cmp
push
jecxz
mov
adc
repnz
mov
adc
ja
push
inc
jecxz
mov
or
adc
outsb
arpl
or
fstl
loopne
mov
cmp
pushl
in
aad
mov
ror
mov
mov
mov
ds
loop
scas
mov
ret
xor
or
outsl
arpl
mov
xor
mov
test
xchg
cld
jmp
mov
cmp
xchg
or
lock
adc
and
js
sub
mov
inc
mov
inc
add
pop
lret
pop
out
movsl
cmp
sbb
inc
jecxz
je
add
pop
jl
aaa
jne
shll
enter
jmp
test
push
sti
push
movsb
sbbl
movsb
roll
push
lcall
cs
jge
adc
and
jl
cltd
pop
push
add
aas
pop
in
je
lahf
cli
hlt
and
sbbb
jle
cltd
das
dec
jae
fcmove
push
cmpsl
ljmp
mov
cli
loopne
jg
out
dec
jmp
mov
xor
outsl
or
or
cltd
dec
enter
icebp
gs
mov
aas
ret
jmp
in
mov
pop
or
mov
xlat
fsub
out
pop
lret
dec
or
xchg
mov
fucomip
dec
xlat
testb
in
xor
adc
push
aam
arpl
inc
xchg
int
rol
idiv
loope
add
ljmp
mov
jle
popa
inc
addr16
or
popa
jge
lea
jg
pushl
lret
mov
cmpsb
mov
add
lock
and
hlt
pop
iret
inc
mov
dec
jne
inc
mov
pop
hlt
jg
cmc
gs
sub
dec
ja
adc
mov
in
sub
lahf
sahf
fwait
jnp
cmc
rcrb
dec
mov
jnp
pop
clc
add
xchg
xor
daa
cmpsb
cmp
out
and
add
adc
mov
sbb
les
xchg
jo
repz
jg
dec
mov
cmc
mov
xor
ds
dec
int
stos
fdivr
test
pop
jmp
inc
incl
xchg
push
mov
adc
pusha
jle
cmpsb
out
testb
pop
adc
scas
ss
lahf
stc
addb
jmp
scas
shrl
rcrl
fdivrl
mov
pop
mov
mov
das
std
inc
and
add
mov
mov
cs
inc
mov
sbb
sub
cmpsb
or
outsb
sbb
push
mov
push
out
std
test
js
xchg
sti
mov
mov
sbb
fldcw
mov
pop
add
int
addr16
cld
out
pop
push
sbb
mov
jg
push
cmp
test
inc
mov
pop
sub
cmp
arpl
add
jo
inc
pop
sahf
cmp
push
mov
xor
xchg
cmp
add
and
jmp
jge
into
mov
out
data16
or
sub
pop
cld
cmp
pop
or
xchg
jno
fs
loop
inc
rcrl
pop
sti
lea
push
mov
pop
jb
and
sbb
pushl
les
jnp
ds
pop
lock
fmull
adc
dec
jecxz
sbb
dec
outsb
jg
cmp
lret
dec
add
jle
inc
aas
adc
test
mov
sti
sbb
adc
movsb
stos
addb
test
jbe
xchg
jmp
and
int3
jmp
sub
cmc
or
movsl
lock
xor
outsl
xchg
sti
lahf
dec
fidivrs
jno
and
mov
mov
xor
sbb
mov
clc
incl
ss
imull
fmul
cmp
jle
jo
aas
inc
mov
inc
test
jg
shrl
fwait
dec
popf
push
clc
or
mov
sbb
mov
iret
jle
fcomps
into
add
cld
cwtl
jnp
jg
jmp
popa
mov
dec
cmp
xchg
push
mov
mov
pop
test
cmp
mov
adc
addr16
sub
clc
scas
rcll
jmp
hlt
popa
mov
clc
dec
shlb
and
mov
mov
sbb
into
pop
rorb
stos
dec
mov
out
cld
pop
pusha
fisttpl
cmp
outsl
xor
rcll
mov
cmp
mov
hlt
jo
push
add
ja
mov
das
outsb
xchg
add
in
fstps
arpl
ja
lcall
fmuls
test
pop
outsl
pusha
mov
popl
ja
inc
test
mov
ficompl
mov
mov
cmpb
ljmp
or
xchg
mov
loopne
in
fmull
cld
fcoml
aas
inc
xchg
in
imul
cli
daa
mov
jno
jb
loop
fdivr
jg
mov
ret
enter
or
stc
push
lcall
pop
cmc
clc
fisttps
pop
jae
inc
push
shll
inc
out
and
jne
ret
mov
lods
cmc
jmp
lods
test
pop
and
xlat
lret
scas
xor
push
unpckhps
cmc
imul
in
mov
imul
test
inc
in
cli
fidivrs
movsb
cwtl
cmp
mov
nop
mov
xor
lock
ja
pop
inc
sub
stos
sub
mov
mov
scas
cld
pop
jp
inc
fsubrs
jl
hlt
mov
sbb
sbb
js
ret
out
insb
adc
or
int3
pushl
aas
arpl
push
popa
in
adc
jecxz
sbb
mov
adc
bound
scas
fidivrs
aaa
mov
loope
sub
mov
aas
or
loop
fdivr
in
popa
push
push
inc
je
aaa
imul
or
aas
mov
sbb
mull
sbb
movsb
cli
cld
sarb
jnp
xchg
popf
sub
mov
and
adc
push
fucomip
aas
notl
leave
ds
rclb
or
out
fdivp
mov
lret
push
dec
pop
dec
cmp
xchg
aas
les
hlt
jge
testb
fmulp
cld
loope
pop
mov
fcompl
out
ljmp
ljmp
cmpsb
jne
in
sbb
call
sub
inc
js
add
das
lods
sti
stos
inc
cli
in
and
lds
xchg
pop
sbb
add
mov
test
cmp
loop
fmull
lret
mov
push
jecxz
fidivrs
loope
mov
sub
jg
call
xor
push
fisttpll
out
js
mov
sarl
imul
xchg
lahf
fdivr
cmpsl
pop
aad
loopne
or
push
hlt
xor
cld
dec
cmp
dec
std
pop
and
mov
or
xchg
dec
cmp
or
xlat
push
iret
push
cs
iret
in
fs
dec
jg
xchg
rolb
test
repz
jmp
lods
faddp
mov
call
test
dec
jne
stos
xchg
inc
jg
jecxz
add
fidivl
add
cmpsl
fcmovu
inc
jp
cmpsl
push
fwait
jnp
sarl
pop
inc
xchg
repnz
mov
add
sbb
cli
push
lcall
sbb
imul
jg
repz
mov
std
inc
and
push
ret
stc
and
adc
loopne
aad
aaa
xchg
sub
and
mov
mov
mov
mov
push
ds
pop
jle
inc
jecxz
clc
imul
pop
jbe
cmp
idiv
pop
stc
mov
push
xor
ja
pop
mov
icebp
js
sub
or
adcb
out
cltd
xor
pop
lcall
stc
add
clc
aas
and
cli
fmull
or
add
cli
cltd
das
pop
add
insl
inc
push
jg
into
pop
mov
fsub
jbe
sbb
mov
mov
jae
pop
xchg
push
in
fisubl
cmp
jno
ljmp
pop
mov
pop
ss
add
popl
mov
ja
xchg
pminsw
fnstenv
pop
cmpl
push
in
push
jbe
mov
jnp
pusha
in
mov
cwtl
xchg
push
enter
into
popf
jle
incb
aaa
movsl
jb
es
adcl
sti
jmp
stos
ds
dec
ds
fistps
aaa
jge
outsl
in
ret
jp
lock
mov
test
enter
mov
sub
cmp
mov
sahf
sbbb
lret
int
loopne
fimuls
push
es
xchg
inc
inc
push
out
std
pop
sub
xlat
inc
xchg
jnp
push
mov
inc
mov
push
pop
pop
add
out
pushf
aaa
xor
push
jmp
inc
pop
mov
lock
outsl
jl
lock
push
inc
clc
cmp
sub
lret
add
ret
ja
out
test
stc
imul
mov
sub
inc
jmp
jno
cmp
fucom
mov
mov
xchg
fnstsw
or
dec
mov
in
pop
cmc
aam
subl
loope
push
popl
fwait
jnp
call
pop
mov
cmp
and
in
and
call
sub
cmc
mov
xchg
sub
adc
xlat
movsl
ds
mov
fdivrl
inc
cmp
dec
out
sbb
xchg
mov
jg
mov
stos
fcoms
fdivl
inc
mov
dec
insb
loope
push
lock
sbb
shll
xchg
mov
cmc
push
aas
push
arpl
sbb
bound
or
pop
jae
mulb
pop
loopne
xchg
xchg
add
popa
fs
adc
pop
xchg
iret
fwait
scas
pushf
call
call
jmp
lods
inc
mov
lret
cmp
clc
in
pop
and
and
outsl
lods
insb
sub
jle
out
aas
scas
inc
mov
push
pop
mov
mov
out
push
subl
cmpl
mov
idivl
sub
sub
dec
das
je
cld
and
shrl
aam
xchg
add
mov
jno
das
xchg
add
call
mov
pop
xor
cmpsb
outsb
cmc
jg
incl
je
fs
scas
sar
stc
inc
push
push
js
mov
add
mov
imul
sbb
mov
pop
movsl
fnstsw
in
add
mov
cld
jg
negl
dec
push
in
pop
xorb
data16
negl
fadds
in
bound
out
out
jne
lahf
push
aaa
mov
shr
ja
scas
pop
and
mov
jnp
adc
mov
dec
fwait
nop
mov
aad
jns
jg
sbb
xchg
call
cmpsl
mull
adc
mov
out
mov
sub
mov
movsb
sub
ficoms
aas
jbe
push
push
xor
jbe
leave
add
mov
movsb
jmp
out
jb
shr
mov
xlat
je
cmc
cmp
ja
popl
sti
pop
cmp
xchg
movsb
pop
jge
mov
pushf
xor
cmp
and
cmp
mov
adc
orb
adc
stos
mov
mov
push
pop
fptan
jecxz
push
adc
stc
into
pop
stos
iret
orl
pop
rcll
popf
or
pop
add
jo
dec
aaa
adc
jnp
push
test
insb
lret
push
inc
sub
out
subb
and
movsb
dec
test
push
xor
jnp
mov
in
push
pop
mov
stos
aas
es
shrb
in
push
aaa
je
int
mov
aas
shlb
add
stos
mov
icebp
inc
scas
add
pop
hlt
dec
xchg
xor
pop
sub
mov
jae
xchg
inc
dec
cmp
mov
dec
daa
mov
cmp
out
std
daa
lcall
imul
cmpsb
pop
js
leave
movsb
in
adc
mov
xchg
add
push
or
out
icebp
aas
mov
jge
xchg
jns
mov
push
mov
rcll
pushl
sub
call
xchg
inc
test
imul
lcall
add
lahf
dec
cwtl
mov
xchg
repnz
cmp
mov
jbe
pop
and
sbb
ss
sub
outsb
nop
cmp
jmp
frstor
lcall
sbb
add
and
lahf
shl
std
sub
mov
or
or
inc
aaa
jb
add
pop
mull
comiss
or
add
mov
add
out
jecxz
push
iret
mov
lea
ret
mov
lods
scas
xor
mov
sbb
test
mov
daa
cmpsb
mov
cli
adc
adc
call
scas
aas
adc
ljmp
mov
jo
sahf
and
bound
mov
jns
add
inc
mov
mov
mov
xlat
push
lea
mov
pop
push
cmp
cmp
cli
jg
jle
and
xchg
jnp
arpl
xchg
sub
enter
scas
sub
clc
jg
fnsaves
mov
add
std
adc
sbb
inc
push
lahf
cmc
and
pop
mov
cltd
xchg
sarl
out
xchg
cmp
addb
insb
stc
xchg
xor
or
jmp
rcrb
mov
ret
push
sub
mulb
daa
outsb
xchg
sub
scas
loop
test
mov
incl
sub
lret
push
mov
cmc
filds
ficomps
out
leave
push
test
out
fdiv
addr16
aaa
inc
and
in
pop
adc
out
sub
lock
std
xchg
addr16
iret
xchg
and
push
out
cmp
pusha
adc
sub
ljmp
adc
nop
popl
popf
jp
ljmp
fistpll
pop
mov
cmp
out
mov
cs
jg
movb
jns
in
mov
aaa
clc
mov
and
mov
test
dec
sub
cmc
aas
pushf
ljmp
rorl
push
jg
pop
or
test
rcr
add
inc
mov
cmpsl
mov
ret
pop
push
mov
push
loopne
add
cmp
pop
ret
xor
and
sub
les
fsubrp
rcll
push
pop
mov
xchg
adc
dec
jmp
and
xchg
pop
dec
in
mov
sbb
inc
pxor
loopne
out
aas
and
mov
out
icebp
add
mov
jmp
mov
jg
jmp
dec
call
inc
repnz
pop
pop
mov
cmp
lods
roll
adc
add
jmp
call
mov
mov
push
adc
call
push
xor
sub
mov
pop
scas
andb
mov
pop
dec
xchg
jg
fidivl
fwait
fwait
push
inc
out
cld
stc
sub
inc
test
in
xchg
test
lret
xchg
mov
xor
pop
pop
adc
sbb
xor
inc
sub
fs
mov
mov
dec
jg
orl
fnsave
popf
lcall
dec
rclb
jp
dec
popf
ret
fcomp
mov
add
fs
out
sbb
dec
insb
jg
lahf
pop
xor
or
pop
xor
mov
lcall
test
out
jne
sahf
loopne
aad
add
in
cmpsl
jo
lret
lea
ds
xchg
lahf
push
lcall
adc
pop
fnsave
ficoms
cli
fistpll
aaa
fidivs
test
cld
jg
pop
xor
fwait
cmp
xor
enter
addl
lds
mov
pop
or
jg
arpl
out
xchg
insl
cmp
pop
out
fcompl
jae
and
push
fdivr
idiv
decl
aam
inc
rcll
insb
push
fmulp
xor
das
cs
adc
cmp
dec
or
pop
mov
ja
mov
dec
adc
out
push
sub
pop
fldl
dec
nop
cmp
jmp
fldl
push
ss
or
mov
mov
jbe
hlt
popl
jnp
mov
std
or
repnz
divl
jg
pop
dec
ficomps
pop
pusha
jno
sbbl
mov
in
pop
adc
adc
push
addr16
push
xor
call
add
xchg
or
sahf
fsubp
js
cmp
pop
lods
add
ja
mov
or
ret
fstps
lock
xchg
ss
in
dec
outsl
lock
jo
mov
hlt
and
xor
mov
sahf
out
xor
sbb
test
dec
add
and
mov
mov
fisttpll
push
nop
shll
aad
pop
cmp
fdivr
sub
cmc
cs
mov
mov
loopne
xchg
clc
mov
int
push
adc
adc
clc
xchg
ja
ret
inc
cli
int
lods
lock
sub
mov
cmpsb
add
jg
mov
lret
push
lea
ljmp
mov
ss
inc
popf
mov
call
ds
push
iret
lods
xchg
push
scas
out
hlt
mov
inc
pop
inc
daa
nop
aas
inc
jecxz
push
scas
xlat
inc
mov
push
ja
push
neg
jmp
xlat
cmp
xchg
fcoms
ret
cmpl
fisttps
repz
lret
fidivrl
add
lock
imul
jl
clc
pop
lret
inc
lahf
xor
xor
mov
fistpll
lcall
adc
dec
or
cwtl
les
mov
jg
icebp
dec
scas
sarb
push
lods
stos
test
jecxz
lock
push
pop
ret
jae
jl
pop
mov
arpl
pop
loope
xchg
fucomp
stc
sbb
or
mov
inc
dec
rorl
jl
jp
or
mov
in
std
mov
cmp
dec
adc
shll
mov
in
loop
and
sub
push
and
mov
push
icebp
js
push
sti
cmpsb
fs
mov
or
push
pop
outsb
mov
or
out
adc
pop
mov
in
lret
icebp
mov
mov
inc
lea
push
scas
sub
xchg
mov
xlat
sub
jmp
cmpsb
testb
or
adc
lahf
jne
shlb
int3
xchg
sbb
mov
fcomip
add
mov
cs
lock
in
dec
icebp
push
push
or
fistpl
sbb
and
mov
scas
xor
xor
pop
jp
push
aad
enter
jmp
or
mov
out
std
fldl
push
rcr
mov
inc
mov
xchg
cmp
mov
lahf
idivb
pop
xor
arpl
loopne
lret
jnp
jae
cmpl
sbb
jbe
xchg
std
jg
xor
mov
xor
sub
cmc
shrl
add
sbb
cmp
push
mov
and
cli
and
pop
ds
insb
sbb
cs
decl
xor
addr16
inc
push
jp
sub
sub
clc
jne
addb
dec
das
push
mov
pop
sbb
or
cmpsl
lcall
mov
mov
dec
sbb
and
jo
or
std
je
or
mov
and
mov
pop
pop
mov
pop
xchg
cli
fucomip
dec
jo
lea
pop
mov
xchg
mull
popf
mov
jge
push
pop
mov
cmp
xchg
cwtl
popf
ljmp
test
mov
xchg
sbb
sbb
inc
cli
ja
popf
jge
jnp
outsb
xchg
lea
std
aas
jmp
cmp
lock
xchg
jmp
shrl
jg
push
push
mov
sti
xchg
dec
jmp
mov
add
pop
rclb
call
movb
decb
lock
push
xor
adc
or
xor
mov
mov
mov
or
sbb
mov
adc
data16
lock
pop
jmp
iret
cld
filds
pop
push
pop
cmp
aad
pop
mov
xchg
jle
and
cwtl
mov
movsl
add
cmp
cmp
in
push
xor
jg
imul
adc
push
lahf
sti
push
mov
insl
pop
aas
mov
mov
cmp
addr16
xchg
fidivl
sbb
loopne
push
or
shrb
sbb
pop
insb
sbb
xchg
cmpsl
lds
nop
lahf
or
push
jg
loop
es
sub
push
add
mov
pop
lds
mov
jbe
aad
mov
xor
pop
in
lret
loope
pushl
loope
nop
ja
cmp
or
mov
loopne
je
push
xchg
lock
adc
rcl
mov
negb
movsb
ja
orb
add
pushl
testl
pop
ljmp
ja
and
out
jp
pop
mov
sti
test
mov
adc
inc
jg
pop
out
mov
mov
jg
ss
popw
stos
sub
stc
ret
shlb
fcoml
mov
jne
pushl
mov
mov
nop
repz
fsub
sub
jecxz
adc
adc
into
lahf
lret
jnp
xchg
jbe
jnp
in
lcall
jns
jne
and
jl
mov
out
imul
call
in
or
cmc
imul
inc
jmp
fiadds
es
xchg
or
mov
pusha
cmp
mov
pop
loopne
push
jle
decb
dec
arpl
enter
call
or
jbe
das
sbb
push
mov
sub
dec
jo
clc
scas
std
fcoms
fucom
iret
sub
inc
cmp
mov
push
add
cs
adc
sbb
mov
cmc
jl
out
inc
fistpll
mul
pop
pusha
inc
mov
loop
dec
hlt
incb
xchg
push
lret
dec
js
inc
sub
shl
sahf
lds
mov
inc
fwait
mov
sub
sub
mov
xchg
lcall
test
mov
mov
dec
jge
sti
sub
and
icebp
mov
arpl
jg
aaa
adc
xchg
push
jae
fcoml
ljmp
sahf
imul
test
imul
in
pushf
daa
dec
scas
xchg
incb
xor
push
push
pop
cmp
jge
out
pop
pusha
gs
and
aaa
sbb
adc
xor
out
pop
sub
and
popa
push
out
mov
fbld
mov
xor
pushf
aas
cmp
add
call
cmpsl
ljmp
jg
movsb
in
clc
popf
sti
ja
jg
mov
jnp
daa
gs
mov
xchg
arpl
pushl
or
sbb
push
out
inc
cld
pop
and
stos
out
js
je
mov
cli
fcomip
gs
lret
cmpsb
lahf
and
into
pop
push
mov
stos
or
das
mov
cli
or
mov
or
not
adc
movsl
and
sarb
cmp
fld
mov
mov
aad
mov
in
mov
jg
mov
mov
repnz
js
and
cmp
and
sbb
pop
mov
sub
pusha
inc
inc
jmp
std
movsl
and
add
sub
jns
jge
mov
cmp
clc
aaa
xchg
push
add
and
sbb
imul
fnstcw
jg
cmpsl
and
mov
rorb
ljmp
mov
and
stc
push
loopne
divl
xchg
push
int
clc
mov
pop
pop
cmp
or
movsl
daa
idiv
daa
fcompl
push
and
jp,pt
rorl
and
std
test
add
repnz
push
push
push
sar
lahf
aad
mov
test
pusha
add
push
outsb
xlat
rclb
jb
dec
pop
pop
xor
and
nop
aam
adc
jne
fsubl
shll
dec
fimull
pop
and
mov
loope
je
aas
sbb
outsb
adc
push
ds
jb
xor
ret
jg
stos
sub
pop
icebp
xchg
pop
jnp
xchg
sahf
lods
and
jp
stos
sbb
push
push
imul
stos
xchg
sub
cmpsl
lds
jecxz
jns
rcr
aas
adc
movsb
mov
imul
jp
je
shll
xchg
in
les
jmp
mov
outsb
js
xchg
mov
pop
test
into
pop
sbb
jg
sahf
jne
mov
adc
data16
mov
ret
dec
adc
and
call
inc
test
shll
jl
or
inc
push
lock
neg
mov
das
push
ds
xlat
cmp
push
std
and
xor
cmp
xlat
test
lods
inc
jg
sub
popf
lret
push
inc
jnp
cmpsb
mov
push
jg
cmc
pop
loope
dec
dec
movsl
clc
push
jecxz
ja
pushl
mov
adc
out
push
add
and
mov
xchg
mov
stos
jle
cmp
mov
pop
in
or
mov
in
mov
push
mov
mov
insb
aas
mov
mov
cli
pop
cmpb
js
xorl
push
ds
xchg
into
inc
loopne
xchg
stos
je
push
mov
mov
jb
adc
pop
lahf
mov
addr16
repnz
add
sti
aas
push
push
cli
push
aas
lods
test
pop
mov
inc
mov
jp
popf
lock
shlb
in
lahf
mov
inc
andl
mov
xor
pavgw
fwait
rorl
mov
test
xor
adc
mov
les
rorb
pop
decl
out
hlt
pusha
loope
push
xor
sub
mov
pushl
mov
sbb
cld
test
lret
adc
mov
pop
sbb
jne
xor
dec
std
mov
xor
fs
lods
jbe
repz
sub
jg
mov
pop
sbb
mov
mov
stos
lcall
adc
sar
jmp
lock
sbb
test
lahf
add
dec
shlb
out
insb
daa
lock
insb
push
testl
popf
jl
cltd
adc
js
adc
mov
popf
cmp
push
outsb
dec
enter
jl
or
pusha
hlt
mov
aaa
rcrb
dec
cltd
mov
loopne
mov
test
push
sub
push
negl
sar
enter
and
and
test
stc
or
cld
xor
and
mov
out
push
dec
je
out
bound
xor
mov
out
dec
loop
mov
sbb
mov
jg
pop
inc
dec
ss
insl
add
dec
addr16
jg
jnp
pop
dec
mov
push
fsin
sub
ret
or
cmp
pop
je
mov
inc
inc
es
jo
xchg
in
jo
ret
mov
and
xchg
jmp
shrl
loopne
dec
jl
adc
and
out
add
or
into
mov
push
in
loope
mov
and
out
mov
add
push
in
fcmovne
out
test
out
cmc
mov
hlt
cmp
adc
jmp
jle
das
xchg
push
in
aad
stc
bound
icebp
xchg
call
or
cld
mov
andb
out
orl
xchg
pop
inc
sbb
or
hlt
xor
and
in
std
jmp
push
sbb
cmp
jecxz
test
mov
scas
push
hlt
mov
mov
sub
mov
icebp
insl
mov
sub
sub
lock
inc
fdivrp
pop
insl
fsubr
mov
add
inc
ret
jo
out
test
push
mov
in
inc
xchg
push
cmp
mov
cmpsl
pop
and
ret
sahf
or
jo
es
pusha
cmp
or
jne
push
sub
ret
aas
mov
jo
flds
iret
lret
xor
clc
jbe
sub
adc
add
and
xchg
xchg
fs
loope
mov
cltd
out
sub
add
jg
rcrl
stos
movsb
in
fmuls
jp
lds
mov
and
lods
inc
and
pusha
sti
shll
loope
pushf
lock
adc
out
cmp
or
dec
lret
or
and
mov
cmpsl
clc
out
lds
adc
adc
ja
movsb
sub
xor
or
push
and
inc
xor
clc
adc
sub
lcall
add
std
cltd
mov
rolb
cmp
mov
sti
icebp
xchg
pop
lcall
ror
xchg
insb
mov
xchg
sti
or
inc
imull
jnp
xlat
jnp
cmp
dec
inc
lock
das
jne
inc
std
inc
or
mov
sahf
iret
jae
sbb
and
or
dec
xchg
adc
or
or
or
out
jg
es
or
ss
cmp
jmp
adc
jg
sub
cmc
adc
pop
clc
xchg
fisubs
rol
aas
and
jp
sarb
ljmp
adc
add
sti
aaa
mov
add
jae
sbb
adc
inc
fdivr
in
xchg
mov
mov
inc
iret
inc
ret
insb
adcb
dec
push
pop
mov
lahf
pop
cli
push
lahf
sahf
jp
sbb
mov
lahf
js
std
mov
std
jo
aaa
aad
dec
lret
jne
inc
das
shl
dec
xchg
pop
lds
outsl
outsl
dec
call
sub
ret
pop
mov
push
xchg
imul
push
and
jnp
imul
sbb
iret
out
es
xor
repz
pop
dec
sbb
add
inc
xor
testl
mov
and
or
sub
pop
mov
add
or
outsb
andl
gs
sbb
dec
mov
mov
xor
mov
mov
mov
loopne
mov
clc
xchg
mov
add
dec
std
call
ret
aas
negl
repnz
icebp
mov
cmp
enter
mov
fwait
mov
test
ss
sub
inc
int
punpcklbw
dec
popl
xor
xor
lret
push
sbb
movsb
or
dec
out
lock
push
pop
sub
or
mov
mov
sarl
imul
mov
inc
jne
ja
mov
push
inc
add
fld1
sbb
add
dec
clc
add
and
pop
adc
fwait
jo
incl
inc
adc
repnz
or
divps
aaa
adcl
inc
xlat
lret
push
fstpt
ja
out
cmp
movsl
add
ret
jnp
dec
or
outsb
mov
ja
pop
cli
in
nop
sub
or
xor
test
cli
jmp
or
sub
addb
mov
xchg
dec
push
mov
inc
loop
jmp
scas
icebp
das
inc
nop
inc
pop
ss
fisttpll
inc
and
pop
loopne
jg
shrl
mov
mov
loopne
inc
push
addr16
ja
shrb
sbb
rorb
pop
into
std
gs
cmp
inc
sub
sbb
outsl
jle
jp
decl
andb
dec
addb
dec
cld
sbb
aaa
ljmp
mov
push
add
test
mov
int
movsl
dec
add
pop
enter
cmp
push
jge
popf
xchg
stos
insl
js
in
push
jle
mov
jecxz
daa
imul
lock
les
mov
adc
jnp
jl
sbb
hlt
sub
orb
lods
mov
sbb
aad
mov
pushl
ficompl
sbb
lock
outsl
stos
fmull
cli
leave
jecxz
push
xor
sub
fwait
jnp
push
pusha
lret
std
sbb
inc
lret
jnp
fsubrs
stc
cli
ja
outsl
out
add
dec
xlat
and
adc
iret
std
xchg
in
inc
mov
mov
xchg
mov
cmp
adc
sub
add
filds
jmp
cs
aam
xchg
dec
sbb
ds
loopne
das
js
add
int
mov
cmp
jg
pop
repz
jg
mov
repz
mov
shll
pop
sub
xor
das
jge
clc
adc
sahf
lock
pushf
dec
dec
test
cld
pop
sub
sub
pushf
jmp
movsb
pop
cmpl
inc
lahf
mov
pop
push
icebp
cmp
pop
and
fistpll
inc
lock
rcr
or
jge
or
aas
sub
in
gs
stc
idivb
ret
gs
and
pusha
call
sti
inc
mov
pop
loope
out
jmp
jmp
sbb
sbb
xor
pop
sub
imul
sahf
xchg
sbb
addr16
jno
incb
jno
push
cmc
ret
sti
push
test
comiss
outsb
cmp
ss
test
aaa
push
inc
decl
add
or
loop
jb
jae
push
xchg
adcb
and
or
inc
add
add
cwtl
and
sbb
mov
icebp
rorl
test
mov
pop
bound
test
rcrb
movsl
loopne
push
lahf
cmpb
jecxz
ret
aas
and
int3
add
push
insl
and
mov
xchg
xchg
pop
mov
fildl
mov
or
inc
jle
fisubrs
cli
fldl
pop
sbb
adc
outsl
adc
sti
shld
adc
je
sbb
mov
cmp
in
mov
out
xchg
jg
negb
cmp
mov
pop
out
test
pop
xor
ret
sub
mov
ss
scas
movb
cmc
movsl
sbb
ficomps
add
repz
gs
mov
clc
hlt
stos
mov
je
jmp
stos
sti
sub
mov
ret
push
mov
fs
fwait
and
mov
inc
pop
xchg
and
daa
mov
ret
pushl
cmp
jb
sub
jle
jg
mov
add
fnstenv
xchg
aaa
sbb
pusha
add
inc
sbb
sub
adc
push
out
std
inc
test
inc
fcomip
in
mov
push
out
out
cli
add
jle
ss
inc
arpl
push
fistpll
lock
pop
pop
pop
cmc
pop
ret
push
out
add
push
xor
loopne
test
icebp
or
iret
decb
fwait
pop
loop
jmp
enter
es
mov
clc
mov
or
push
xlat
imul
in
mov
rcll
lods
mov
in
push
outsb
shlb
hlt
cmp
out
ret
cmpsl
mov
sbb
ret
dec
mov
and
adc
pop
les
icebp
add
mov
cmc
fs
sub
push
lods
les
ja
mov
leave
fcompl
dec
out
or
decl
hlt
lds
mov
push
mov
mov
fisubs
cltd
xor
lret
and
arpl
test
xor
cmp
cmpsb
loopne
xor
and
jmp
cmc
adc
hlt
add
mov
icebp
pop
movsb
jne
xor
sub
sub
mov
movsl
mov
outsl
mov
sbb
pop
lret
test
push
jecxz
idivl
xchg
adc
jo
stos
push
mov
jo
test
mov
push
push
nop
icebp
daa
cld
mov
push
sub
je
xchg
mov
jg
aaa
xchg
xlat
in
xchg
aam
fldcw
mov
stc
leave
test
pop
cmc
sub
int3
movb
test
fucom
lret
pop
lds
xorl
cmc
mov
inc
pop
lcall
xchg
mov
out
les
lock
fbstp
push
aaa
push
enter
xor
lret
pop
add
adc
scas
cmp
test
sbb
adc
pop
cmp
push
hlt
es
movb
pushl
and
aaa
ret
pop
and
mov
inc
loopne
pushf
xchg
cmp
sbb
mov
roll
scas
cmp
pop
js
xchg
push
jecxz
jne
xchg
pop
call
add
jmp
dec
mov
pushl
aam
icebp
jo
test
or
popf
into
push
jl
or
xor
jge
pusha
mov
adc
jp
lahf
orb
sahf
push
ljmp
xchg
jns
adc
ss
inc
sub
icebp
mov
mov
jns
dec
das
adc
rcl
pop
sub
ljmp
jns
rcll
sub
pop
mov
icebp
push
jnp
pop
adc
mov
sub
incl
jle
sets
aas
or
pop
in
sbb
pusha
add
sub
aam
sub
ljmp
es
push
push
in
insl
adc
idivb
inc
cmp
dec
cmp
std
sub
push
lret
fisttps
jb
sub
jae
pop
call
mov
data16
mov
mov
jmp
lods
fs
lahf
lock
and
mov
movsb
ljmp
subl
mov
add
jo
xor
lods
sub
pop
mov
xlat
lds
imul
xor
mov
fistpll
out
jb
ret
ret
xchg
rol
rorb
rolb
pop
cmp
sub
sub
adc
fucom
es
sub
mov
lahf
aad
adc
insb
sub
lock
sbb
fdivrl
mov
adc
sub
mov
mov
aaa
mov
cmp
dec
inc
xchg
mov
dec
ret
and
out
pop
xor
movsb
aad
movsb
loopne
push
leave
jp
push
xlat
inc
adc
clc
arpl
and
xchg
push
cmpsl
ja
jmp
fiadds
ja
jl
xchg
mov
cld
pop
or
mov
jl
jne
inc
or
jbe
insb
dec
outsb
inc
loop
and
mov
mov
dec
jo
jg
fstps
or
pop
jae
inc
mov
lods
leave
xchg
xchg
xchg
mov
pop
sub
sbb
int
popf
mov
mov
jle
mov
pop
push
mov
ret
test
sub
sbb
aas
pop
cmp
lahf
push
icebp
jne
xor
nop
pop
xchg
add
dec
lcall
sbb
sar
dec
aam
add
or
mov
sub
mov
fbld
xor
inc
jp
fildll
jae
js
cmp
dec
mov
inc
pop
add
mov
sbb
push
es
lcall
fstpt
leave
loop
sbb
sub
pop
std
mov
lods
aaa
push
je
outsl
nop
cmp
repnz
popf
dec
mov
sahf
lret
rcrb
push
push
popl
sub
mov
addr16
pop
fcoml
push
sarl
testl
fnstcw
loope
adc
pop
sub
jnp
out
out
push
lahf
cmp
stc
sahf
ret
clc
out
fcomip
sbb
mov
sub
stos
mov
fwait
cmp
cmc
jmp
xchg
or
fmull
push
adc
mov
fildl
lahf
subb
imul
xchg
jle
cmp
push
xchg
fnstcw
push
pushw
icebp
es
jg
jmp
xchg
mov
xor
cmp
fstps
js
adc
mov
dec
mov
pop
add
adc
jle
daa
jg
mov
adc
push
push
add
sbb
mov
mov
jmp
out
icebp
and
lea
push
lcall
mov
lock
jne
dec
adc
out
mov
pusha
adc
pop
hlt
rcrl
mov
sti
mov
sbbl
ret
in
out
pop
inc
push
std
pop
stos
mov
pop
xchg
xchg
and
dec
sbb
xor
adc
clc
pop
push
or
cmp
pop
out
rolb
jmp
adc
add
adc
adc
in
inc
jg
lock
icebp
cmp
mov
in
movsb
sar
movlhps
in
mov
ja
lds
daa
jge
scas
xor
mov
lock
fidivl
rorl
jbe
cli
xor
iret
inc
std
mov
leave
pop
fsubrs
fisubl
jnp
jo
cmp
add
fldcw
push
and
mov
fwait
cmp
cli
stos
pop
cmpsl
clc
insl
sbb
icebp
pushf
mov
jbe
out
fnstsw
push
push
push
add
mov
push
dec
fdivs
jae
loop
and
loop
mov
repnz
inc
jg
jo
in
insb
loope
xor
xchg
shrb
mov
pop
jl
in
stos
sub
fidivrs
pop
out
xor
test
sub
push
xor
adc
lea
dec
cli
and
outsl
insl
cmp
push
loopne
es
mov
rol
out
into
pop
aas
cli
push
jno
sub
ja
add
out
movsl
jo
test
outsb
shrb
aas
outsb
push
clc
loop
inc
lret
adc
arpl
movsl
inc
xor
lock
icebp
inc
fwait
in
jb
mov
std
pop
stos
dec
xor
inc
out
mov
mov
pop
xchg
pushl
mov
data16
fistps
xchg
push
and
rcrb
rcrl
sbb
cmc
loope
hlt
icebp
mov
aaa
leave
adcb
sub
repnz
bound
imul
xchg
inc
lock
xchg
call
dec
lods
pop
loopne
rcrl
fcoms
cwtl
out
sub
sbb
gs
neg
aad
iret
mov
fucom
mov
add
and
out
lds
mov
inc
sbb
popf
mov
cwtl
sahf
std
outsl
clc
pop
xchg
mov
pop
ljmp
test
or
outsb
inc
test
fucom
pushl
dec
ret
mov
arpl
pop
inc
mov
dec
sub
imull
or
jo
mov
xor
cmpsl
cltd
in
ret
jecxz
dec
scas
ljmp
push
stos
jg
aas
cmpsb
icebp
jb
filds
mov
jmp
std
and
mov
add
neg
movsb
decb
adc
lock
outsl
scas
in
mov
negl
test
dec
jb
sbb
cwtl
add
pop
cld
pop
out
sub
cmp
push
jne
arpl
inc
aas
loopne
mov
popa
insb
sub
jle
dec
rcrb
jecxz
adc
lock
sbb
pop
pop
ljmp
push
inc
adc
pop
dec
adc
mov
sahf
mov
aas
negl
call
cmc
in
loop
sti
loop
add
imul
mov
dec
jge
inc
add
jmp
pusha
imul
rolb
fimull
mov
sub
bound
inc
cmpsl
sar
xchg
mov
aad
ljmp
aas
and
pop
jo
notb
cmpsb
mov
aam
adc
mov
fcomip
push
or
jp
sub
sbb
pop
cmp
ret
jge
imul
push
ficompl
scas
lret
mov
adc
cmp
mov
xchg
xor
jg
xchg
js
sbb
pop
push
or
inc
ljmp
and
sub
fists
in
xor
pop
lmsw
pop
in
adc
push
inc
mov
adc
lods
mov
push
aas
nop
mov
jmp
out
in
xchg
lret
lret
xor
filds
pop
sub
inc
shrb
push
int
mov
out
dec
jne
mov
jmp
outsl
mov
jns
mull
aad
mov
jbe
xchg
push
xchg
test
jg
cld
aas
add
outsb
loope
hlt
pushf
mov
setns
movsb
enter
dec
mov
decl
xor
aas
mov
dec
push
push
rclb
scas
push
xchg
jle
cmp
addl
cmp
mov
cmp
and
mov
or
jg
loopne
inc
outsl
jns
lds
cld
cli
shrb
push
cmp
adc
push
ljmp
sbb
xor
jae
sub
mov
mov
les
das
je
mov
std
inc
imull
testb
dec
add
xchg
mov
mov
jg
dec
mov
push
out
sbb
jle
sub
sub
out
cld
pop
jp
xchg
mov
fdivs
cmpsb
adc
in
xor
mov
pop
imul
cltd
adc
shlb
movl
lock
out
pop
cld
scas
in
or
xchg
inc
jns
dec
out
and
decb
shll
or
xor
mov
in
xor
sub
mov
cmp
dec
mov
aaa
push
sbb
add
sub
fbld
push
sbb
ljmp
ljmp
adc
cmp
cmp
iret
cmp
inc
cmp
shr
inc
pop
mov
fnsave
lods
inc
out
push
cmp
jnp
outsb
shlb
mov
cmp
inc
mov
stos
xchg
sarb
stos
jns
daa
fmul
add
jnp
sbb
mov
sub
into
dec
pop
lahf
in
mov
jg
jg
or
mov
int
outsl
mov
mov
or
cmp
jno
dec
jae
adc
push
mov
icebp
sarb
sbb
lds
push
call
lcall
mov
dec
scas
dec
cmp
sub
push
mov
dec
dec
cli
int3
stos
add
jbe
pop
lcall
ret
and
lret
das
xor
outsb
std
or
jg
rol
daa
imul
loope
loop
idiv
shll
cmp
mov
push
add
sbb
mov
fs
fadds
cs
pop
xor
mov
push
pop
fstpt
fidivs
add
mov
cmp
daa
loopne
scas
cld
movsb
test
inc
xor
cmp
cmova
push
mov
xchg
pop
lret
insb
mov
cld
mov
mov
mov
orb
pop
adc
and
xchg
pop
scas
std
xorb
pop
add
lahf
icebp
and
and
push
lods
repz
mov
mov
das
pop
jecxz
das
fisubrs
inc
inc
jmp
mov
push
cmc
mov
mov
ja
xor
sbb
sub
xor
imul
mov
cmp
cmp
dec
mov
sub
adc
sbb
das
les
and
sub
lock
fildll
scas
and
das
add
test
das
ficompl
or
out
mov
jb
push
pop
stos
pop
idiv
dec
adc
xchg
sub
mov
mov
mov
scas
fs
mov
inc
xchg
mov
xchg
fs
outsb
mov
mov
inc
cmpsl
clc
adc
pop
push
clc
xor
iret
xchg
imul
in
mov
lcall
movl
jle
push
mov
push
jmp
adc
inc
or
in
cmpsl
aas
sti
decl
je
mov
cld
cmpsb
or
cmp
out
loopne
cltd
mov
js
popa
std
lcall
ficoms
outsl
cmp
jge
cmp
pop
mov
mov
cmpsb
pop
adc
adc
lods
adc
shl
imul
call
rol
out
mov
and
inc
or
fwait
and
decl
loopne
ret
lret
cmp
mov
and
roll
sbb
jmp
cmp
loope
xchg
add
mov
xchg
sbb
out
inc
hlt
add
and
xchg
xchg
mov
push
incl
sub
or
popf
add
fistps
dec
pmaxub
dec
fwait
sbb
push
xchg
dec
clc
bound
jecxz
lods
cli
ret
scas
mov
xchg
testl
std
xchg
loopne
fnstenv
jnp
adc
cld
pop
jmp
sarb
xor
lret
push
jmp
sub
inc
or
xchg
aaa
sbb
sti
xadd
test
pop
stos
fidivrl
daa
cmp
lahf
or
cmp
std
xor
add
adc
stos
loope
shll
push
hlt
xchg
adc
addr16
frstor
jmp
inc
pop
xor
inc
hlt
mov
pushf
sbb
aas
lds
fnsave
mov
stos
push
push
sub
call
mov
xchg
xchg
orl
mov
cs
mulb
mov
inc
mov
cld
add
test
mov
add
push
scas
outsb
sub
lds
push
fsub
cwtl
data16
jp
xchg
xlat
sub
pop
adc
sub
xor
mov
cli
rolb
fcomps
lret
xor
sti
sbb
adcl
insb
psrlw
add
inc
dec
test
push
and
push
mov
call
jbe
xor
dec
adc
xor
mov
inc
sbb
add
rclb
decl
rclb
into
neg
not
or
and
inc
inc
lods
sbb
add
sbb
add
arpl
fistps
es
or
push
addr16
mov
imul
inc
lret
push
loopne
dec
pop
orl
popa
ja
dec
cs
xchg
adc
gs
cli
push
in
in
xchg
sub
imul
mov
cmpsl
cmp
stos
push
imul
add
inc
xor
sub
ja
push
imul
mov
sub
out
insb
iret
mov
cld
push
mov
aas
fnstenv
dec
mov
inc
xor
mov
in
into
mov
pop
add
testb
jo
inc
jno
sbb
mov
add
outsb
inc
sar
ss
push
inc
aam
negl
faddl
push
push
and
mov
pop
dec
push
aaa
add
push
mov
dec
add
maskmovq
inc
rorl
sub
sub
inc
xor
add
pop
mov
pop
dec
pop
push
hlt
daa
push
push
lods
sub
add
push
pop
inc
or
and
jle
pop
jmp
notl
inc
fsubr
pop
push
push
adc
pop
push
xor
rcll
outsb
jno
jno
sbb
xor
sbb
gs
xor
insl
ss
cmpsl
push
cmp
and
cmp
lret
movsl
cvttps2pi
lods
fs
jbe
jae
jne
xchg
jbe
jne
aaa
outsb
ljmp
push
jecxz
xor
jo
push
lds
xchg
dec
mov
push
xor
cmp
pop
inc
fists
xor
test
lahf
fstl
push
adc
sbb
inc
and
fcmovne
dec
push
sub
pop
xlat
pop
mov
xchg
ds
shrl
lea
mov
xchg
jp
negb
mov
dec
notl
push
inc
dec
and
mov
clc
jno
push
push
xor
add
subl
clc
cmp
or
imul
pop
xor
int
std
out
dec
fstpt
jo
inc
adc
inc
add
xchg
aad
xor
jmp
hlt
push
dec
xchg
lods
mov
inc
mov
mov
pop
or
mov
cmc
cmp
fmuls
add
pop
jbe
into
testb
sub
out
xchg
dec
inc
clc
dec
push
jbe
mov
sbb
pop
add
push
push
test
and
adc
clc
mov
ret
mov
adc
xchg
negb
cwtl
sub
bound
scas
jge
push
in
imul
add
ljmp
cmp
jne
insl
mov
call
adc
inc
push
pop
cmpsb
sbb
dec
jbe
mov
rclb
adc
call
push
push
push
push
rorl
loope
das
push
in
mov
adc
jb
xor
xor
push
adc
sub
fdivp
js
fistpl
shlb
mov
jbe
shll
cmp
sub
xor
inc
aaa
add
jnp
adc
cmp
sbb
push
cmp
rclb
jno
xor
cmp
inc
jns
sub
out
jno
xchg
jge
sub
push
movsl
mov
lcall
jp
mov
sbb
neg
ret
out
in
ja
shrl
not
sbb
sbb
push
add
sub
ret
inc
dec
aam
push
pop
adc
add
aad
mov
jle
dec
hlt
or
outsb
inc
test
dec
sub
inc
je
fucom
sub
inc
push
add
fs
dec
push
loope
out
out
jp
adc
or
dec
mov
in
cmpsl
push
and
lea
call
lock
pop
push
out
hlt
xor
inc
jb
insb
add
cmp
out
sub
inc
xor
jns,pn
loope
xor
or
add
das
push
cmp
andl
repz
std
ljmp
lret
hlt
ret
or
jne
adc
sub
pop
pop
cmp
xchg
or
shlb
dec
dec
push
push
push
push
mov
dec
cwtl
push
mov
andl
dec
pop
and
bound
dec
pop
add
jb
cmp
inc
mov
ds
mov
in
call
pop
lds
pop
fidivrs
dec
fildl
jae
inc
jne
in
push
dec
push
add
sub
das
aam
in
hlt
dec
sub
and
dec
mov
je
cld
imul
ja
int
adc
jb
jno
inc
rclb
ljmp
je
loope
xor
jo
inc
push
xlat
mov
xor
mov
mov
aaa
push
add
imul
inc
ja
loope
mov
xor
decl
movsb
popa
mov
je
jbe
iret
jge
or
je
inc
neg
fcom
sbb
sbb
add
pop
inc
mov
insb
mov
test
aaa
push
pop
aaa
inc
xchg
hlt
add
mov
das
ret
pop
clc
cli
lods
add
decl
ret
pop
push
mov
inc
fcompl
arpl
inc
mov
ret
js
js
lahf
ss
cld
jo
push
xor
push
js
scas
jge
ret
rolb
ss
mov
jae
inc
dec
xor
mov
push
lret
lods
test
push
clc
insb
mov
test
scas
js
cmc
js
insl
xchg
pushl
and
dec
add
icebp
xor
dec
inc
xor
cld
xchg
xor
jns
test
xor
jg
outsl
dec
push
outsl
test
rcl
loope
pop
push
sbb
jge
jae
jo
repnz
imul
outsl
insl
fcomp
inc
jbe
sub
arpl
and
in
cmp
adc
add
xchg
shrl
bnd
inc
sub
outsb
ffreep
shll
insl
mov
inc
movsb
mov
aam
mov
arpl
dec
test
fisttpl
in
cmp
std
sbb
sub
dec
push
ret
repz
dec
sub
xor
sub
sbb
popa
divb
mov
lods
and
scas
xchg
inc
xchg
fstp
pop
sub
mov
in
shlb
fisubl
mov
sbb
hlt
popa
je
inc
clc
sti
idivb
rcr
ret
dec
aam
xchg
xor
jbe
sub
shrl
ret
fs
jne
lods
arpl
inc
jg
sti
inc
sti
dec
data16
popa
inc
inc
jbe
movsb
dec
gs
cmp
pop
jp
int
cmp
enter
xchg
rorb
shll
or
pop
pop
inc
push
dec
out
jo
jp
adc
sbb
movsl
sti
jmp
movsb
sub
test
add
stos
jg
sub
inc
adc
and
sti
in
push
incb
adc
adc
dec
or
add
adc
push
lock
jg
add
mov
add
dec
adc
dec
adc
sbb
out
or
and
and
xorb
orb
inc
mov
mov
push
jl
dec
and
mov
fcoml
and
or
lods
mov
outsb
pop
add
cmp
imul
mov
push
or
inc
insl
and
lods
insl
pop
dec
add
pop
push
add
push
in
xlat
or
push
add
adcl
pop
jae
push
dec
jbe
pop
lods
inc
mov
and
daa
or
mov
dec
mov
or
inc
sbb
or
addb
inc
xor
push
mov
mov
add
xchg
add
popa
or
and
xchg
jl
add
imul
or
out
jmp
inc
lds
pop
adcb
insb
test
and
dec
and
stos
pop
push
adc
mov
push
outsb
dec
add
add
cmp
pop
xlat
insl
int3
and
mov
stc
add
or
sbb
and
sbb
adc
pop
imul
stos
ret
sub
xor
adc
inc
add
adc
imul
std
lcall
mov
pop
or
jg
lods
add
mov
jb
gs
xor
cs
insb
add
xchg
test
cmp
int
inc
adc
xorl
or
xor
mov
add
or
adc
stos
xchg
xor
and
or
fcomps
adc
add
addr16
push
cmp
mov
mov
cmp
data16
fdivrl
ficompl
push
lods
mov
mov
jae
pusha
test
pushf
outsl
mov
pop
pop
inc
cmp
xchg
int
inc
and
add
xlat
dec
scas
test
xchg
je
adc
mov
push
dec
add
jae
es
outsb
js
sbb
jne
les
pop
adc
push
ss
mov
mov
pop
loopnew
lock
push
mov
jo
hlt
and
adcb
repnz
xlat
lock
hlt
pop
inc
push
mov
or
pop
or
dec
adc
in
aaa
data16
in
add
sbb
sub
sbb
test
jl
movsl
outsl
or
shrb
sub
addr16
xor
pop
jae
or
sub
jo
subl
inc
xlat
jl
add
or
pop
imul
and
pop
out
lea
push
mov
jo
mov
dec
lds
add
int
scas
inc
and
xor
mov
repnz
fcomps
jo
ret
aam
pop
jbe
cmpb
mov
lock
adc
faddl
add
incl
icebp
jb
je
inc
outsl
outsb
jae
insb
gs
jne
jo
outsl
mov
push
gs
imul
sbb
inc
in
jbe
mov
adc
jbe
jb
insl
adc
xor
popa
bound
sub
jo
popa
arpl
or
imulb
gs
daa
arpl
jns
adc
jae
dec
mov
inc
dec
jo
push
inc
das
jae
or
outsb
sti
aaa
aaa
dec
popa
jo
push
mov
in
adc
push
push
cmp
mov
imul
gs
jae
insb
imul
adc
inc
inc
inc
push
dec
fs
jns
outsl
ja
out
adc
push
adc
jb
inc
insb
outsl
insl
outsb
mov
inc
insb
or
enter
in
mov
jne
dec
popa
add
or
insl
arpl
jne
out
push
and
mov
je
or
push
jne
fcmovnu
pop
sbb
push
inc
fs
je
pop
rorb
sbb
mov
scas
fldt
out
imul
mov
jnp
sbb
arpl
dec
jl
push
dec
popa
outsb
fs
addr16
insl
mov
jb
imul
or
outsl
insl
insl
cmp
add
and
pusha
in
fldenv
dec
inc
je
inc
inc
inc
xor
insb
cmp
adc
adc
data16
dec
lret
mov
inc
sbb
insb
das
sbb
push
add
ror
xchg
dec
int3
adc
sub
mov
ja
je
bound
ret
fcomps
sub
mov
jmp
dec
xor
icebp
cs
inc
xor
enter
gs
outsl
jae
cmovae
loopne
inc
bnd
popa
or
outsb
add
adc
adc
add
cmp
gs
sub
jp
xchg
sub
adc
arpl
mov
cmc
xor
aas
jns
sbb
cwtl
mov
mov
push
sub
arpl
xchg
adc
mov
inc
hlt
adc
xchg
mov
sbb
out
add
sbb
mov
je
push
outsl
scas
inc
ud2
fwait
into
cmp
cmpsl
push
mov
sub
das
jnp
sbb
push
dec
jae
outsb
adc
test
pop
or
arpl
clc
test
push
inc
push
dec
cmp
into
fs
stc
add
or
or
in
insb
push
das
ljmp
subb
push
imul
arpl
pop
inc
gs
xchg
sbb
notl
daa
inc
insb
addr16
push
faddl
pop
push
popa
or
fbstp
adc
adc
jbe
imul
or
in
mov
push
imul
inc
push
xchg
insl
int
call
popa
dec
gs
fdivrs
lods
rorl
xchg
popf
jno
inc
inc
sbb
les
scas
push
push
das
inc
push
addr16
fsubrs
jno
mov
aad
inc
xchg
scas
dec
leave
or
mov
adc
or
outsl
jbe
pop
sbb
sbb
mov
out
pop
jg
jae
mov
and
jo
dec
mov
xchg
in
ret
dec
fs
adc
shlb
inc
and
inc
inc
push
cmp
jns
inc
stc
pop
mov
inc
bound
adc
pop
outsb
nop
rclb
pop
add
inc
add
leave
bound
jb
popa
clc
sbb
fisubrs
imul
clc
push
xchg
outsb
sub
mov
insb
das
xor
pop
cmp
jae
jmp
arpl
push
jo
adc
out
sub
mov
push
outsb
stos
bound
inc
jb
fsubp
sbb
xor
into
or
cmp
jg
push
leave
push
arpl
sub
cmp
popf
push
jnp
adc
cmp
mov
scas
cmp
or
cmp
adc
mov
xor
sbb
jb
jae
inc
xchg
pop
sbb
cmp
push
dec
fcomps
jae
add
xchg
fdivrs
adc
pop
sbb
lods
lcall
popf
push
ds
sbb
jae
sysenter
insb
sbbl
insb
pop
and
popa
sbb
cmp
lret
popa
jae
outsb
pop
fdivrl
outsl
imul
paddsw
dec
cltd
arpl
pop
mov
inc
insl
mov
insb
push
add
push
stos
mov
and
fistps
inc
add
sbb
push
les
cli
inc
ret
inc
add
out
test
insb
jae
push
dec
fadds
fisubs
dec
add
sbb
pop
mov
popa
push
adc
xor
ret
insb
mov
sbb
mov
add
pop
loopne
add
mov
adc
cmp
arpl
sbb
jns
mov
push
lods
mov
add
ds
bound
or
dec
outsl
mov
pop
mov
cmp
dec
xor
out
cmp
jne
fisubs
fsubl
and
in
arpl
adc
filds
dec
mov
jb
jbe
imul
mov
add
loopnew
mov
sahf
dec
fcomps
adc
and
mov
mov
adc
bound
mov
adc
pusha
push
dec
inc
lds
xchg
cmp
mov
jp
add
xchg
ret
je
dec
add
fs
xchg
cli
and
add
push
mov
mov
out
mov
push
xchg
popf
loopne
push
inc
pop
cwtl
jae
lock
lock
outsl
js
mov
inc
out
aaa
add
jb
fdivrl
and
mov
xor
or
sub
call
fcomps
jmp
inc
das
sbb
xor
insl
and
adc
inc
insb
xor
and
jo
mov
cmp
or
cmp
mov
add
test
adc
push
cltd
mov
xor
mov
jnp
xor
test
jp
jns
addl
push
ss
stos
inc
addr16
insb
outsb
je
xchg
aad
les
add
pop
cmp
inc
cltd
lret
pop
inc
sti
mov
sbb
dec
mov
xchg
pop
inc
dec
sbb
add
pop
or
in
sbb
mov
aam
in
dec
mov
xchg
data16
mov
push
or
or
add
pop
ret
xchg
or
insb
jmp
push
ljmp
cmp
jecxz
dec
shrl
jbe
les
andl
or
mov
and
fnstenv
sbb
xchg
xchg
adc
in
imul
push
or
jbe
hlt
push
jnp
or
js
inc
inc
adc
mov
mov
dec
ss
es
xchg
or
push
ud0
dec
xor
adc
fs
pusha
insb
in
sub
pop
cmp
fwait
add
push
shl
adc
or
sub
push
or
scas
test
pop
jp
dec
xchg
push
sbb
sbb
sub
jb
push
inc
xchg
add
or
push
sahf
push
push
inc
add
jmp
pop
adc
lods
mov
sidtl
add
adc
pop
divl
inc
or
xor
or
add
add
out
hlt
aaa
add
sub
pop
nop
mov
pop
push
and
add
sbb
inc
cmpsl
pop
dec
cs
xlat
into
xchg
mov
les
and
pushw
pusha
mov
sbb
sbb
add
lcall
add
push
push
fiadds
dec
rorb
out
push
sti
fwait
xorb
sbb
cwtl
add
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
stos
cmp
push
inc
inc
cmp
insb
cld
lcall
push
or
filds
jp
dec
inc
ds
loop
push
cmpsl
sub
in
mov
and
mov
lcall
add
xor
or
lea
mov
sbb
or
push
mov
mov
adc
xchg
pop
push
sub
xorb
sbb
push
jno
xor
or
stos
icebp
cmpsb
js
js
cmp
cmp
xor
lahf
jbe
lea
xchg
clc
inc
push
cmp
add
jmp
cmp
xchg
out
push
jle
fildl
jns
loope
xchg
out
add
fmull
adc
push
dec
push
shlb
dec
out
mov
pop
popf
mov
jmp
xchg
sub
sub
inc
mov
pop
fnstenv
sub
jg
jp
add
sub
pop
gs
in
jno
add
rorl
xlat
mov
std
push
lods
movsb
pop
and
sub
jg
add
dec
xchg
and
pop
rcrl
push
cmp
test
loope
and
clc
roll
lahf
xor
mov
push
push
dec
push
stos
push
pop
shl
inc
push
mov
sub
subl
mov
mov
gs
push
mov
imul
repz
out
mov
out
mov
jb
lret
push
in
add
jle
pushf
stos
pop
jge
mov
out
sub
sbb
std
stos
call
cmp
jns
stc
jge,pt
cmp
imul
xchg
cmp
mov
xor
pushf
pop
inc
imul
dec
xchg
daa
int3
sbb
test
pop
or
movsb
add
mov
lock
gs
.byte
.byte
xchg
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
sub
add
pop
addb
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
jb
pop
add
jno
jb
pop
add
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
add
insl
add
push
insl
add
and
push
add
add
jne
add
add
pusha
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
bound
add
insl
add
push
insl
add
and
inc
add
insl
add
data16
add
je
data16
jae
add
jbe
data16
add
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
xor
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsb
add
add
insl
add
push
insl
add
add
add
jb
daa
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
bound
add
insl
add
push
insl
add
and
push
add
add
jne
and
xor
xor
xor
xor
sub
add
add
add
add
add
sldt
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
bound
add
insl
add
push
insl
add
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
bound
add
insl
add
push
insl
add
and
inc
add
insl
add
data16
add
je
data16
jae
add
jbe
data16
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
les
add
add
hlt
les
add
les
add
lds
add
lds
add
lds
add
lds
add
lds
add
lds
add
add
rol
add
xor
add
fadd
add
cmp
add
call
lds
add
lds
add
add
lds
add
add
movb
pop
lds
add
lds
add
movb
xor
add
inc
movb
push
movb
pop
movb
insb
movb
add
add
jp
add
add
add
mov
add
add
add
cwtl
movb
add
add
movsb
movb
add
add
mov
add
add
movb
add
add
aam
add
add
add
in
movb
add
add
cli
movb
add
add
or
add
add
add
adc
add
add
add
sbb
add
add
add
movl
add
add
add
add
inc
movl
add
push
dec
inc
dec
xor
cs
dec
dec
add
jns
je
xor
fs
insb
add
jns
je
imul
imul
insb
insb
add
jb
fs
insb
add
fs
jo
cs
insb
add
popa
jo
cs
insb
add
gs
jbe
fs
insb
add
arpl
xor
cs
insb
add
gs
insb
xor
cs
insb
add
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
insl
insl
cs
insb
add
jae
jo
xor
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
dec
popa
insl
gs
outsl
push
je
inc
add
dec
outsl
arpl
inc
outsb
jb
insb
insb
add
add
insl
inc
jae
popa
jo
inc
add
push
dec
gs
gs
popa
jae
inc
jb
outsl
jb
add
add
outsb
inc
imul
inc
outsb
jne
push
jb
arpl
jae
jae
add
push
arpl
jb
push
gs
imul
jb
gs
add
dec
jae
dec
outsl
outsl
outsb
push
jae
jb
add
inc
gs
popa
insb
insb
outsl
arpl
add
push
jb
dec
jae
add
dec
jae
outsb
jne
add
jb
imul
push
add
inc
je
push
jne
inc
imul
insl
imul
add
add
push
inc
jb
gs
gs
outsl
jb
