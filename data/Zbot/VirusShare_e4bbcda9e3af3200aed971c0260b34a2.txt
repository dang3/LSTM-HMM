sbb
add
add
push
rolb
stc
push
cmpsl
push
cwtl
jmp
add
loopne
mov
shlb
into
pusha
rcrb
cmc
std
adc
stos
jno
sbb
repz
imul
popa
cld
fisttps
outsl
push
pop
and
int
lods
imul
and
jb
and
cld
or
loop
mov
sbb
cmp
stos
mov
in
and
mov
push
js
xchg
test
addr16
mov
xchg
stos
sbb
imul
or
and
mov
xor
fsts
xlat
add
nop
push
or
push
mov
adc
int3
lock
hlt
add
mov
push
out
loopne
push
pushf
add
lea
add
push
cmp
xor
xor
sub
adc
inc
dec
sub
jl
les
xchg
mov
and
push
mov
js
xchg
push
fldenv
sub
lret
ficompl
jb
inc
inc
cmpsl
icebp
les
in
mov
daa
aad
rcrl
gs
ds
rorb
xchg
add
xchg
pop
and
or
xchg
int3
fneni(8087
cmp
leave
mov
jbe
inc
rcrl
lock
mov
repz
xlat
dec
cmc
call
push
xlat
into
adc
rol
inc
lea
cltd
call
push
sar
sub
and
stos
in
out
sbb
popf
nop
mov
xlat
movsl
jo
jl
sub
lahf
in
xchg
adc
mov
pop
sbb
inc
mov
jp
fadds
cld
mov
jne
xlat
pop
push
fidivrl
js
mov
sti
add
imull
xchg
xchg
divb
or
sbbb
cld
int
pop
imul
movsl
jl
cmc
test
add
pop
out
subl
mov
out
cltd
jae
dec
ss
xchg
pop
sbb
pop
mov
imul
sub
sbb
insb
data16
push
stc
ficomps
out
xor
lret
jecxz
in
sti
or
jmp
push
out
adc
dec
fiaddl
sbb
rcrb
mov
insl
out
insl
and
jmp
push
dec
scas
aad
fsubr
sbb
adcl
cmp
lock
pop
mov
and
push
or
mov
sub
popf
mov
sbb
add
and
pop
push
imul
stos
cld
clc
ss
jbe
adc
xor
movsl
dec
aam
jecxz
sbb
pop
inc
cmp
shll
stos
pop
push
cld
sub
loop
fcompl
add
ljmp
pop
cmp
popf
icebp
dec
bound
jnp
jne
mov
dec
mov
inc
rcrl
mov
jne
push
sahf
cld
mov
dec
pushf
stc
jno
dec
pusha
arpl
jno
shl
fs
xchg
ljmp
fbstp
testb
mov
out
popf
in
fistpll
je
dec
mov
cmp
addr16
fsubl
in
imul
cmp
shl
fiadds
insb
jg
mov
sub
push
or
repz
pop
push
les
push
xchg
sbb
cmp
mov
ffree
push
orb
dec
loop
lret
call
scas
cld
lock
jo
shl
jmp
xchg
dec
aam
mov
inc
push
cmpsl
mov
cli
and
lret
cld
sbb
aam
stos
sahf
hlt
daa
out
lcall
sarb
pop
push
cltd
xchg
adc
xchg
test
mov
push
dec
mov
xlat
dec
xchg
stos
push
mov
mov
fidivs
in
icebp
int3
mov
movsl
test
adc
lods
loope
xchg
insl
push
loop
es
shrb
das
icebp
cltd
fsubrl
es
push
jmp
jge
fistl
in
dec
pop
dec
ja
outsl
xor
pop
inc
push
outsb
push
jg
imulb
fs
xlat
leave
and
shlb
cmpsb
stc
inc
jbe
jnp
mov
push
fxch
lods
enter
ja
inc
jb
cs
xchg
icebp
psubq
mov
mov
shlb
mov
mov
inc
pop
add
mov
jmp
add
inc
xchg
inc
jbe
xchg
cmp
leave
popa
int
pop
sbb
cmp
rclb
popa
fcom
inc
cltd
mov
adc
xorb
cwtl
add
data16
add
jecxz
ljmp
cmp
sub
stos
loop
call
add
mov
jmp
or
aaa
mov
xor
xor
mov
mov
sti
xor
push
in
mov
cmp
les
push
fsubrl
and
add
lea
rcl
stos
jl
mov
jecxz
mov
pop
xor
and
jns
std
scas
and
xlat
add
add
mov
mov
stos
sbb
leave
enter
in
cmp
mov
xchg
pop
fldln2
dec
arpl
xchg
push
not
inc
cmpsl
mov
push
shrl
mov
xchg
sub
mov
addr16
push
ja
cmpl
aad
mov
scas
push
push
test
fisubs
addb
cmp
fildl
sbb
outsl
sbb
mov
dec
sbb
inc
pop
xor
adcl
adc
ret
out
mov
pop
xchg
aaa
inc
je
sbb
setno
cmpl
pop
sbb
es
test
adc
lock
rol
push
lock
or
fwait
add
aaa
leave
insb
mov
jecxz
xchg
mov
push
mov
jne
push
sub
cmp
dec
mov
les
pop
xorl
lahf
sub
clc
popa
mov
or
call
sbb
pop
jne
cmp
mov
sbb
mov
fwait
sti
insb
jle
enter
mov
stos
repnz
shl
pop
cli
add
sub
movsl
pop
aas
xchg
xchg
jmp
movsb
mov
ficoml
adc
jnp
pop
sbb
xor
lret
mov
push
or
lods
xchg
dec
lock
test
rolb
out
lock
cmc
stos
push
mov
pop
stos
push
and
and
adc
xchg
mov
mov
sub
mov
jle
mov
inc
jae
xor
fists
pop
jl
in
iret
imull
cmp
xor
lods
divb
dec
push
inc
cs
gs
js
mov
pushf
jge
inc
icebp
mov
arpl
bound
mov
cmp
push
mov
repnz
mov
lret
scas
out
lret
subb
shl
adc
cmp
dec
mov
jno
or
and
lahf
mov
repnz
and
xchg
rcll
sbb
pop
adc
ror
inc
call
and
sub
hlt
sub
mov
and
mov
sub
inc
jmp
movsb
fldt
imul
mov
popf
movsb
repz
lahf
adc
dec
xchg
test
mov
in
cwtl
xchg
add
movl
ja
popf
cli
shrl
incb
insl
out
lds
xor
mov
dec
push
idivl
mov
dec
inc
cmpsb
in
sbb
or
lds
sarl
mov
mov
push
push
xchg
imul
xchg
push
push
xor
mov
dec
bnd
jmp
loopne
int3
mov
sbb
xchg
pop
and
xlat
mov
sbb
pusha
mov
or
jnp
mov
mov
fisubl
mov
aas
mov
adc
in
arpl
cmpsb
mov
fdivp
popa
xor
inc
in
shll
inc
xchg
stc
outsb
pop
nop
mov
in
mov
push
sbb
sbb
fcomps
in
scas
arpl
ret
das
dec
movsl
stos
xchg
cli
and
test
rcl
add
pop
movsb
inc
jge
fcmovne
into
ds
jg
incl
sub
pop
sub
mov
in
sub
jnp
cmc
es
add
push
fwait
cwtl
pop
add
mov
add
outsl
mov
cld
cli
xlat
mov
popa
lcall
cli
add
sbbl
nop
jnp
test
lods
mov
stos
sub
cmpb
imul
mov
mov
xchg
adcb
rcrl
and
imul
pop
sbb
and
mov
int
sbb
nop
jg
mov
mov
aam
cwtl
je
notb
lea
dec
movsb
pop
pop
cs
rorb
pop
lods
or
adc
int
je
pop
icebp
fs
notl
jns
jbe
mov
pusha
push
fadds
pop
push
test
rcr
pop
out
pusha
and
inc
int3
jns
test
into
mov
xchg
mov
xlat
and
insb
shlb
adc
enter
fldt
shlb
lret
outsl
mov
mov
xor
loopne
sub
test
adc
or
add
sub
mov
mov
lret
fists
inc
das
arpl
cli
andl
mov
mov
clc
repnz
add
mov
scas
ds
pop
out
pop
add
lods
scas
loope
lods
cli
adc
cmp
jbe
lret
dec
shlb
and
aad
ret
mov
jno
arpl
loope
adc
fsubl
add
movsl
fwait
movsl
sti
mov
pop
pop
ss
out
jmp
into
add
xchg
sbb
rclb
ja
das
loopne
fwait
call
xlat
mov
es
icebp
jge
mov
test
xchg
lret
int
outsb
dec
js
stos
xchg
xor
jl
lea
mov
frstor
cmpl
inc
call
lahf
addr16
sbb
js
cmpsb
xlat
sbb
add
add
ret
mov
in
and
pop
lret
fldt
rcll
sub
popa
into
sbb
dec
sbb
hlt
push
in
push
push
push
sub
pop
mov
push
loop
or
lods
xor
dec
pushf
xchg
js
pop
test
push
add
popf
xor
mov
imul
lahf
xchg
leave
cli
xchg
push
sbb
scas
jno
add
push
or
jno
jmp
sbb
orl
dec
pop
mov
inc
xchg
stos
sub
jns
aas
cli
fldl
jg
push
or
add
arpl
imul
jns
push
cmp
shll
and
hlt
mov
jae
pop
jecxz
lods
cmp
mov
adc
les
inc
nop
sahf
mov
repnz
push
cmp
ret
or
xchg
aaa
and
cmp
push
inc
and
mov
sub
lret
pop
push
mov
and
pushf
not
sbb
iret
sti
iret
cmp
lret
push
ds
pop
dec
cwtl
ljmp
aaa
mov
adc
cmc
mov
js
or
jecxz
mov
insb
jne
mov
dec
movsb
xchg
arpl
js
cmpsl
rolb
outsl
in
push
fs
jg
pop
stos
test
jmp
pop
test
jno
movsb
jmp
add
lret
xor
cmp
push
and
sbbb
and
hlt
fwait
dec
inc
lea
adc
add
into
in
test
dec
test
mov
fstpl
cmpsl
test
adc
cmpb
js
in
sbb
out
xor
sbb
jecxz
adc
int3
out
lahf
sub
jnp
insb
test
push
fwait
int
adcl
mov
xchg
rep
lahf
mov
pop
pop
and
sti
xor
out
ficoml
dec
ljmp
fimuls
dec
adc
xchg
nop
popf
xlat
adc
cmc
and
xlat
xchg
in
in
push
in
lret
ss
push
jbe
dec
mov
lret
and
in
mov
mov
push
dec
dec
push
cmp
sub
mov
inc
rcrl
adc
pop
sti
push
ret
inc
imul
adc
jle
ds
lock
repz
lahf
movsl
inc
ljmp
xchg
or
and
lock
cmp
cmp
xchg
xchg
imul
mov
dec
or
out
xchg
test
nop
jo
xchg
int3
ja
push
test
sti
xor
ficompl
jae
aas
xchg
aaa
jg
xor
out
xor
fsubl
lret
insl
in
adc
jge
mov
sar
sub
cmpsl
add
outsb
or
outsb
cmp
notl
and
std
jge
xor
stc
xor
sahf
jge
fistl
dec
sub
ss
fsubrl
pop
add
add
ja
jbe
jecxz
in
mov
out
ds
mov
inc
lock
xchg
pop
inc
fsts
ret
and
das
pusha
nop
lcall
push
add
sub
out
dec
in
sbb
idivl
sub
fwait
push
adc
aad
jp
dec
lret
dec
add
cwtl
push
xchg
add
lea
push
mov
inc
pop
add
xchg
and
sub
cltd
cmpsb
add
insl
ss
lahf
adc
aas
ss
pushl
adc
sahf
pop
cmp
lea
repnz
mov
in
add
xchg
enter
and
in
jmp
sbb
and
sub
xchg
nop
xchg
rcr
cmp
add
push
test
shrl
and
fistl
divps
lret
xchg
jb
ljmp
fnsave
add
scas
xchg
sti
mov
lcall
xchg
psubb
shll
int
lcall
xchg
ljmp
jecxz
lret
push
xchg
insl
pushf
dec
movsb
lods
push
push
pop
xor
mov
xor
sub
mov
icebp
jnp
lods
jmp
sbb
data16
decb
mov
data16
xor
xor
push
imul
adc
mov
ja
jb
xlat
inc
rorb
out
push
push
sub
sti
cmp
clc
add
in
in
lret
jge
dec
push
ljmp
ficoml
sahf
jmp
pusha
call
fistps
sets
jg
sub
inc
lcall
adc
rolb
stos
add
cmp
ja
mov
cmp
jmp
fcomi
in
sub
cmpsl
jecxz
mov
or
push
imul
mov
cli
in
roll
mov
cli
cwtl
aam
push
adc
inc
adc
adc
andb
sbb
clc
push
mov
xchg
adc
sbb
mov
into
or
popa
mov
loopne
xchg
inc
mov
xchg
or
scas
adc
iret
cmp
ljmp
push
xor
fcoms
fimull
out
lea
mov
mov
scas
jmp
or
les
xchg
stc
adc
mov
stos
mov
sub
bound
pop
sbb
push
loope
sub
pop
cmp
add
hlt
cld
xor
out
cmpsl
push
mov
js
dec
mov
add
pop
popa
dec
icebp
inc
les
mov
or
cmpsb
dec
xor
inc
out
dec
jmp
mov
int
sbbb
cmpb
cmpsb
cmp
add
pop
ja
js
insb
push
xchg
dec
mov
in
inc
iret
jmp
bound
test
jns
or
repnz
fs
jnp
fisubs
cmp
insl
cltd
inc
jp
movsb
rcll
xor
mov
add
pushf
push
mov
lods
mov
andl
imul
push
xlat
cmp
cmc
inc
jnp
mov
push
aas
xor
xchg
pusha
and
in
xor
push
lds
and
icebp
arpl
sub
iret
cmp
jle
pop
iret
pusha
shrb
je
jecxz
shl
jb
xchg
bound
push
sbb
fiadds
dec
sub
ret
pop
adcl
rcll
shll
imul
fcomip
hlt
xor
lahf
jmp
mov
mov
jp
mov
sbb
mov
sar
push
cs
inc
in
sti
mov
stc
icebp
sbb
aas
jbe
insl
rolb
movl
jp
das
lahf
dec
mov
jns
cmp
daa
jge
sbb
inc
addr16
aas
out
jmp
adc
pop
je
adc
in
mov
insl
sbb
sbb
jns
push
shr
fdivrs
fxch
jp
cld
and
push
pop
test
pop
pop
lds
adc
adc
out
jp
ret
addb
scas
int3
push
jl
jno
je
ror
out
stos
cmp
in
pop
and
scas
loop
into
sub
mov
jne
inc
stos
shr
inc
mov
mov
fs
mov
pop
mov
dec
lret
push
hlt
mov
ljmp
adc
andb
fildll
xor
lock
mov
jmp
sbb
lcall
inc
xlat
fs
nop
insl
jmp
fcomps
cmpsl
pushf
loopne
or
add
mov
xchg
sbb
sbb
adc
pusha
sub
pop
icebp
dec
pop
dec
enter
and
ficomps
popf
pop
push
add
int3
mov
jge
aad
out
in
out
push
xorl
jecxz
lods
fmul
and
pop
cltd
jb
adc
push
xorl
aad
jle
test
xchg
jbe
fidivs
in
jo
xchg
rclb
dec
and
mov
ds
adc
out
mov
sub
jle
out
cmp
mov
cmpsb
cmp
leave
jl
pop
mov
inc
mulb
push
bnd
pushf
shlb
cmp
mov
xchg
lahf
movsb
dec
jo
sub
inc
dec
bound
jno
aad
sub
fidivrs
lret
or
imul
dec
xchg
clc
pop
in
clc
lcall
cmpsl
sbb
inc
stc
lcall
clc
outsb
clc
xor
cmp
or
mov
stos
xchg
loop
divb
mov
cmp
and
lret
addr16
xchg
jle
xchg
inc
imul
pop
std
or
dec
inc
rcrl
and
push
sti
mov
jmp
sbb
sbb
and
hlt
or
dec
dec
pop
push
data16
lret
adc
add
mov
jecxz
jmp
pop
mov
mov
pop
faddl
cmpsb
or
push
dec
data16
icebp
outsl
push
mov
push
inc
cmc
mov
adc
dec
sar
fidivrl
pop
sbb
inc
push
sbb
adc
mov
push
adc
mov
mov
lds
rolb
rcl
std
push
jae
cli
jo
and
push
lret
dec
mov
movsb
add
cmp
cmc
or
jnp
jnp
xchg
pop
mulb
imul
xchg
hlt
aad
icebp
fs
and
dec
xchg
xlat
mov
pop
lds
lret
xchg
sub
popa
add
ds
test
fwait
das
jb
repnz
std
mov
lret
test
push
fsub
sbbl
xor
std
mov
pop
jmp
cmp
pusha
push
jge
or
push
movsl
sbb
mov
dec
inc
mov
mov
cmp
mov
ja
xchg
pop
xchg
xchg
ja
aaa
sbb
xchg
jno
imul
ss
ss
or
imul
jge
push
imul
iret
xchg
sub
jge
and
or
imul
outsl
sahf
fcoml
sar
mov
jl
insb
ret
lods
mov
dec
jmp
jb
js
sub
xchg
pop
xchg
bound
outsb
repnz
stos
sbb
fdivrl
mov
mov
dec
mov
int3
jbe
fmuls
js
jg
push
adc
inc
sahf
cmp
dec
jne
cmpsl
mov
inc
addr16
test
addl
js
push
rolb
or
pusha
mov
cmpsb
and
test
dec
sbb
xchg
repnz
je
scas
dec
cmp
jb
adc
or
sub
dec
mov
test
aam
cmp
push
push
js
outsl
outsl
cld
daa
pop
out
jle
shll
addl
dec
sahf
add
lds
sbb
sahf
cs
mov
lcall
lret
jecxz
roll
mov
sahf
or
jecxz
dec
stos
jo
insb
jns
ljmp
or
rorb
cmc
mov
or
mov
pop
out
test
lea
jg
or
push
roll
push
aam
inc
mov
xchg
int3
stos
mov
lahf
call
mov
push
mov
scas
xor
out
mov
repnz
test
arpl
mov
pop
dec
rcll
jb
in
dec
in
mov
inc
loop
shlb
lds
jmp
add
or
lsl
push
pop
add
mov
fcomip
aaa
fucomip
fistps
shlb
rolb
sti
xlat
dec
mov
pop
lret
pusha
cwtl
inc
sbb
in
add
stc
leave
lret
es
ja
cmp
inc
aad
add
mov
inc
inc
xchg
stos
jae
leave
fadds
cmp
cltd
sbb
lcall
das
sbb
mov
xlat
add
into
dec
sahf
loope
xor
dec
inc
or
pop
je
or
pop
add
mov
enter
aaa
xchg
push
fld
test
mov
cltd
sub
inc
push
arpl
stc
cs
arpl
repz
popa
mov
push
je
repnz
mov
pop
add
enter
ds
rcrl
mov
scas
shrl
int
fcmovu
cmp
xorl
jmp
sbbl
out
inc
add
lods
movsb
lea
cld
pop
inc
and
adc
dec
insl
out
dec
cwtl
pop
jne
add
jp
int3
inc
inc
cmp
mov
popf
and
jl
gs
lock
fsts
cmp
ret
scas
pop
inc
popa
sarl
pop
and
xlat
insb
arpl
sbb
jecxz
mov
ficoml
out
ret
negl
ret
out
cmpsb
dec
and
mov
mov
fbstp
pop
xchg
or
arpl
fisubl
jnp
xchg
imul
push
mov
cmp
mov
sub
cmp
push
shl
mov
mov
xor
or
sar
inc
ret
jl
ds
pop
add
cwtl
mov
fildl
push
mov
loopne
jb
popa
jmp
mov
mov
inc
data16
fnstcw
mov
dec
mov
push
push
lret
negb
fucom
cmp
sar
loope
pop
pop
mov
test
cmp
repnz
test
rcl
pop
cmpsl
call
in
jp
xor
sbb
mov
jle
push
dec
imul
into
and
into
outsb
ljmp
lock
push
push
ss
jg
xchg
inc
mov
add
stos
daa
dec
mov
rcrl
dec
cs
fsubl
aad
mov
dec
mov
dec
nop
ljmp
or
xchg
iret
xor
clc
and
xchg
pop
repnz
repz
pop
pop
ljmp
xor
add
loope
scas
cmpsl
testl
dec
lret
mov
testl
adc
clc
push
mov
fnstcw
lret
testb
dec
enter
shll
sub
pop
out
fsubr
cli
pop
sbb
in
jnp
test
popa
cmp
negl
cltd
sub
jns
call
add
inc
jns
adc
in
xlat
xor
xchg
push
test
adc
loopne
scas
into
cli
jnp
jge
repz
jg
fs
and
mov
and
pop
and
or
in
cmp
int
mov
stc
mov
enter
and
add
ljmp
test
inc
pop
xorb
sub
adc
and
movsl
das
fwait
std
cmpsb
popf
lahf
xchg
imul
aad
aad
inc
popf
sahf
mov
dec
mov
and
sbb
inc
and
mov
outsb
aas
fcomps
xchg
push
lahf
fsts
outsb
hlt
lds
icebp
test
addr16
data16
adc
and
pushf
cmp
push
test
sub
inc
mov
sbb
loopne
push
ds
pop
mov
mov
xchg
jb
ret
cmp
popf
dec
addl
adc
and
into
cmpsl
mov
shrb
xor
stos
mov
fbstp
fldenv
pop
jae
les
mov
ror
adc
bound
adc
test
sbb
repz
shll
jo
ljmp
cli
movsl
push
xchg
mov
ja
cmc
mov
inc
stos
es
jmp
addr16
fstl
out
sub
mov
in
cmp
mov
push
mov
in
sub
movsl
stos
inc
cmpsl
dec
je
rclb
lods
add
mov
insb
pop
jnp
repnz
and
cmp
pop
cmp
cmp
gs
out
jnp
lods
adc
popa
repz
in
mov
mov
js
lahf
mov
jg
inc
mov
cmp
aam
ljmp
or
adc
pop
jmp
pop
inc
fadd
sbb
cmp
ljmp
repz
or
cmp
push
ret
xchg
push
add
insl
pop
push
in
lock
les
add
aad
cmp
or
sub
mov
pop
cli
ret
dec
xchg
lcall
adc
test
stc
mov
cmp
movsl
ja
mov
inc
subb
fnstcw
jg
pop
push
in
sti
cmp
fsts
js
cmp
jecxz
test
jmp
inc
outsb
mov
arpl
dec
outsl
dec
outsl
pop
js
cmp
pop
and
outsl
and
inc
xlat
ret
lahf
mov
aam
jo
repnz
dec
sbb
jbe
dec
xchg
stos
imul
add
mov
test
push
cmpsb
mov
push
lahf
sbb
scas
out
decl
cli
enter
lea
sub
pop
xchg
jmp
mov
outsb
jno
mov
lret
mov
ret
sub
sahf
fld
pop
repnz
imul
rolb
mov
adc
scas
jmp
add
lock
and
mov
jle
fnstcw
je
xchg
popf
bswap
cld
and
cmp
std
data16
fs
mov
xor
idivl
sbb
cmpsb
loop
test
in
pop
cpuid
mov
mov
or
mov
xorb
mov
lea
sbb
push
mov
movsb
adc
xor
sub
sbb
dec
add
push
xor
loop
cmc
mov
mov
mov
sbb
inc
cmp
or
in
mov
stos
fiaddl
mov
fucomi
mov
fmull
les
insb
push
dec
insl
jne,pn
cmp
or
cmp
pop
or
repnz
dec
jle
sub
pop
ret
mov
pop
push
pop
iret
xlat
pop
dec
inc
adc
dec
cmpb
jne
dec
lret
mov
xor
clc
nop
fistpl
sbb
std
push
jl
jl
js
clc
push
or
xchg
es
fdivrp
cmc
dec
mov
and
xlat
lock
add
pusha
mov
lea
movsl
xchg
mov
lret
jg
xlat
ljmp
cs
and
jnp
push
ljmp
not
mov
leave
or
xlat
cmp
xor
jnp
call
incl
sbb
subb
cmp
mov
aas
jge
sub
or
dec
mov
test
sbb
cltd
es
inc
add
mov
push
lods
or
and
out
arpl
arpl
xor
jo
loope
scas
daa
std
pop
in
or
or
jnp
and
iret
cmc
xchg
mov
cmp
adc
aam
movsb
sbb
cmp
mov
pusha
sarb
rorb
fcmovu
inc
cli
pusha
aam
xor
add
ja
dec
and
sahf
xchg
lods
movsl
pop
mov
cs
scas
mov
mov
fcmove
sub
push
dec
mov
sub
dec
adc
cmpl
in
or
popf
aad
cmp
lret
cmc
insb
xchg
test
push
movsb
push
jno
xor
sbb
pop
faddl
cmpsb
pop
insb
pop
test
lret
sub
fistps
sub
xchg
dec
sbb
enter
shl
xor
jns
loope
mov
mov
rcll
xchg
pop
sarl
cmp
cmp
lds
adc
pop
fwait
mov
stos
xlat
cmp
cld
rolb
xchg
dec
sbb
jb
shlb
in
push
or
clc
test
jno
dec
pop
adc
xchg
call
sarl
sub
rcrb
sub
lea
add
and
hlt
pop
mov
adc
or
xlat
mov
xor
adc
cmp
decb
mov
sahf
xchg
push
fbstp
xchg
loopne
fst
push
pop
jb
idiv
testb
push
and
lock
and
stos
out
or
mov
push
pop
push
loopne,pn
repz
xchg
jbe
in
jmp
xchg
cld
std
mov
pop
pop
add
push
pusha
les
push
push
test
adc
pop
out
insl
push
mov
or
std
shrb
icebp
imul
jecxz
call
icebp
jle
test
out
and
js
rorl
adc
lahf
sbb
arpl
mov
lds
xor
insb
ffreep
out
fs
mov
and
popw
mov
lods
test
pop
fidivrl
jg
push
fs
cmp
pusha
sbb
push
adc
mov
mov
cmp
enter
push
bound
lods
sub
ja
pop
add
jg
jb
pusha
mov
jle
insb
or
pop
out
movsl
cmpsl
repnz
fdivl
neg
mov
fs
jb
popf
mull
and
jl
lcall
inc
adc
push
ljmp
dec
dec
in
sti
sub
mov
mov
and
movsb
fs
sub
pop
jb
fs
inc
adc
or
mov
cmp
js
jecxz
pop
and
test
mov
inc
in
test
testb
mov
in
xchg
not
roll
add
cmp
pushf
repz
scas
cld
mov
out
add
addl
aaa
xchg
fwait
jae
xchg
inc
mov
add
loope
sti
rcll
hlt
xchg
repnz
fwait
mov
lock
xchg
add
sub
xchg
lock
push
xlat
cwtl
test
loop
es
loopne
or
adc
gs
cs
push
sub
je
shl
cmp
mov
xchg
jge
jle
mov
cltd
bound
jg
hlt
bound
or
push
jnp
fdivs
mov
mov
in
xchg
addr16
push
aaa
dec
lret
movsl
xchg
sub
adc
loope
xchg
xchg
lds
lahf
jle
insb
gs
mov
insb
jp
xor
addl
out
cmp
in
push
adc
cmp
mov
mov
cmpsl
or
cmpsl
ljmp
maskmovq
idivl
cmp
mov
jae
or
cmp
gs
xor
push
test
jnp
sub
lea
and
ds
pushf
cwtl
adc
loopne
insb
lcall
add
fs
push
outsl
ret
jl
adc
ds
push
and
popw
icebp
pop
fistpll
push
adc
test
lds
or
lahf
out
sbbl
inc
sbb
inc
pop
adc
subl
pop
test
xchg
mov
ficompl
aam
lods
loop
loope
adc
les
stc
dec
lods
nop
jbe
imul
scas
inc
fcoml
sahf
mov
jno
lods
lcall
and
or
fcmovnu
jno
pop
sti
aas
xchg
mov
aas
cli
jo
andb
and
push
rcll
xchg
pop
mov
mov
mov
mov
daa
fdivrs
mov
jl
shrl
inc
in
test
xlat
xchg
sub
jmp
test
inc
stc
popf
les
jns
xchg
rcr
pop
fisttpll
lods
mov
shrb
test
iret
arpl
fwait
mov
pusha
stc
pop
cmp
mov
mov
mov
mov
subl
xchg
cmp
sub
cmp
outsl
dec
sub
xchg
stc
cld
icebp
out
loop
xchg
ljmp
jo
idivl
and
mov
add
enter
icebp
pop
ds
test
clc
and
add
leave
or
cmc
push
cmp
iret
adc
sbb
lock
fstl
insl
mov
pusha
xor
inc
stos
ret
jbe
nop
arpl
insl
sti
mov
jge
xchg
add
jg
ss
scas
or
je
and
andb
pushf
fdivrl
scas
add
in
js
sarb
mov
mov
lock
mov
data16
ds
push
fdivrp
int3
dec
xor
add
sahf
mov
cli
test
insb
jbe
mov
stos
sarb
and
sbb
cmpsb
jns
mov
sub
push
lahf
xchg
stos
pop
setno
stos
jg
push
cmc
jmp
or
mov
add
push
and
cmc
mov
ds
sbb
lods
out
scas
lret
rorb
and
jnp
bound
lahf
mov
ss
pushf
xchg
push
call
outsb
xor
mov
jg
jne
mov
adc
cmp
lcall
shll
or
sti
pop
cmpsb
in
sub
xchg
jg
adcb
cmp
mov
sbb
pop
insl
out
lret
ja
test
add
loope
pop
aam
sbb
sbb
jnp
inc
scas
dec
aas
int
xchg
int3
ficomps
mov
cmpsl
aaa
lret
adc
outsl
add
aas
mov
push
enter
and
pop
repnz
fidivl
lock
sahf
pop
pusha
push
cmp
mov
and
sub
test
push
or
in
pop
push
sbb
ss
push
iret
pushf
jle
xor
push
lock
clc
lea
sbb
lahf
fs
sbb
xchg
jmp
repnz
addb
or
jae
mov
jae
insb
inc
scas
add
jbe
icebp
inc
ljmp
and
mov
out
fnstsw
fnstenv
sub
mov
movsl
into
int
shll
flds
mov
pop
clc
xchg
fdivrl
cmp
mov
es
daa
leave
inc
inc
mov
jb
rclb
rorb
cmp
cmp
int
arpl
dec
cmp
nop
mov
insl
out
fstps
stos
movsb
test
daa
aad
adc
push
jo
lahf
and
inc
scas
mov
cmp
ret
in
add
movsl
popa
mov
out
inc
pushf
pop
xchg
rol
push
adc
cmp
inc
mov
hlt
add
push
ret
or
insb
xchg
cmp
stos
pop
in
xor
ja
imul
mov
push
pop
clc
imul
mov
pushf
cld
xor
dec
decl
xchg
mov
mov
xchg
ja
adc
popa
ljmp
cmp
adc
data16
ret
mov
mov
enter
in
inc
mov
pop
out
push
push
adc
arpl
addr16
test
int
adc
ss
push
cmc
cwtl
jge
add
lret
out
int3
rcll
lods
mov
xchg
mov
cltd
cmp
jmp
xor
cmp
xor
xchg
adc
fucomi
and
jbe
and
adc
mov
popa
bound
jae
push
push
push
mov
inc
and
stc
xchg
imul
ljmp
jmp
mov
pop
mov
rcl
sti
push
stos
stc
jle
xchg
addr16
loope
inc
fldt
xchg
std
popf
cmp
sbb
dec
dec
shrb
mov
cmc
fcomi
jle
fdivp
mov
inc
bnd
sbb
or
mov
ja
rorl
sbb
scas
addr16
and
adc
fs
sub
jle
jl
enter
in
sahf
testl
scas
addl
or
loopne
push
push
jp
xor
insb
leave
adc
mov
mov
es
sub
mov
sti
mov
enter
jne
aas
ljmp
inc
test
cs
jae
lahf
inc
enter
fdivs
stos
xchg
jo
xor
aaa
mov
xchg
and
clc
jo
repz
push
jmp
fdivrl
shrl
xchg
jmp
xor
adc
daa
aad
xchg
cli
mov
in
cmp
jae
sub
in
mov
dec
jecxz
jno
mov
xchg
test
std
lods
test
dec
cmp
mov
aam
scas
stos
xchg
jecxz
mov
je
sbb
xorb
cs
xchg
sarl
sbbb
or
and
add
jbe
or
lret
out
pushf
adcl
mov
xorb
pop
es
dec
pop
fucomp
enter
sbb
in
daa
xor
das
adc
jmp
inc
mov
gs
adc
xchg
pop
lea
std
int3
pop
jle
clc
daa
hlt
push
sub
popf
out
testb
sub
adc
data16
bound
inc
cli
pmaxub
aaa
mov
fstps
mov
mov
lock
xor
loope
add
jb
in
test
call
popf
imul
xchg
inc
push
mov
mov
cmc
inc
and
cmp
xor
add
and
mov
cltd
inc
pop
jge
andb
adc
or
pop
xlat
std
sbb
fxch
cwtl
pop
mov
xlat
cmpsl
bound
jmp
or
xchg
sub
jnp
ja
sbb
mov
repz
pushf
test
inc
jnp
mov
push
mov
xor
rol
pop
sbb
mov
jle
jecxz
xchg
int3
cmp
fadds
mov
and
pop
out
loop
call
pop
and
add
cld
cmp
test
sti
inc
xchg
mov
jle
stos
and
mov
inc
mov
inc
push
xchg
hlt
dec
add
adc
std
sti
adc
and
shll
and
add
xchg
enter
lea
xchg
cmp
sub
imul
clc
pusha
pushf
jp
jle
sahf
adc
mov
dec
loopne
and
pop
sbb
pop
test
adc
adc
jl
ljmp
lods
fmull
in
mov
mov
inc
js
or
popf
pop
xchg
xor
inc
inc
mov
pushl
loope
push
test
ret
ret
adc
shll
push
repnz
and
scas
cmpsb
jecxz
xchg
push
xchg
sub
aad
fimull
pop
add
cmp
mov
lcall
rorb
stos
in
mov
cmp
movsl
jbe
lock
pop
ds
rcrb
ret
xor
jne
adc
xchg
and
xchg
test
xor
pushf
adc
cs
mov
push
mov
inc
jae
and
test
shll
or
add
sbb
jns
bound
fisubrs
dec
inc
jae
mov
push
sti
outsl
add
test
adc
push
sub
decb
enter
push
orb
sbb
dec
leave
cmpsb
adc
mov
rcl
add
or
pop
mov
mov
pop
sub
xchg
hlt
bnd
fucomi
mov
pop
imul
mov
xchg
sbb
mov
mov
and
inc
scas
fsts
mov
pop
inc
scas
lock
lcall
bound
and
gs
shlb
sbb
cmp
ja
push
jo
jno
aam
cmp
lock
fdivrp
arpl
dec
sbb
repz
xchg
decb
out
lahf
sahf
iret
push
pusha
int3
in
aam
movsb
xchg
xor
imul
cmc
popa
cs
cwtl
mov
adc
and
fs
dec
addr16
nop
fcomps
popf
aas
cmp
mov
mov
dec
xchg
aam
loop
xchg
add
sub
mov
cs
or
in
push
cmpsb
movsb
add
imul
cwtl
xchg
sbb
xor
out
pop
out
add
in
repnz
in
cmp
mov
loopne
imulb
in
pushf
and
mov
stos
out
adc
mov
or
hlt
gs
enter
stos
add
pop
cmp
rorb
sub
jge
shlb
or
inc
fisubrl
add
adcb
dec
sbb
push
sub
mov
cwtl
stc
xchg
push
xor
add
fwait
push
fs
fiaddl
mov
cmp
inc
data16
jb
cmp
cmp
mov
cmp
ljmp
sub
dec
pushf
mov
ljmp
hlt
cld
add
mov
in
jbe
leave
dec
js
jmp
int3
pushf
fs
xlat
ficoms
out
or
inc
fwait
jle
jmp
aad
je
cli
in
cld
dec
push
cmp
pop
daa
sub
xchg
push
nop
push
push
jo
ljmp
inc
ljmp
test
jnp
xchg
inc
cmc
hlt
sub
push
sti
cmpsl
cli
cltd
movsl
addr16
frstor
adc
sbb
sbb
ds
push
mov
or
dec
cwtl
imulb
shrl
or
jo
xchg
sarl
mov
adc
and
cmpsb
lock
xchg
sbb
add
iret
or
jns
xor
or
mov
in
aas
mov
push
out
test
push
lret
pop
cmp
hlt
lcall
jns
shll
xlat
leave
fstpt
imul
push
pop
mov
or
lret
jmp
lds
out
pop
cmp
outsl
mov
xorl
sub
xor
sub
mov
jb
inc
lcall
or
mov
icebp
pop
and
pop
mov
jp
andb
lea
push
scas
aas
stc
scas
adc
popa
arpl
inc
xchg
add
pop
xchg
ss
fisttpll
lods
cmp
mov
add
push
adc
lods
dec
sbb
xchg
mov
add
arpl
inc
es
mov
sbb
mov
icebp
ja
cmp
cmp
cmp
mov
sbb
iret
andb
outsl
sub
movsb
lea
das
rorb
add
jo
cmp
push
mov
or
lods
add
sbb
sbb
cld
inc
fidivl
and
js
cmp
jb
insb
sub
push
adc
push
dec
push
or
mov
sti
and
sub
out
push
fsubs
inc
jno
cmp
mov
xor
hlt
gs
sub
jle
xchg
jp
shrl
cltd
inc
add
lods
xchg
mov
imull
mov
or
scas
mov
sti
pop
mov
mov
jge
mov
mov
or
sar
test
inc
ficoms
int
into
movsb
les
popa
and
xchg
psubusw
pop
sub
mov
sbb
sbb
mov
jecxz
fdivrp
pop
mov
cmp
xor
xlat
dec
ss
ja
xchg
inc
sub
sub
ja
inc
addr16
setae
mov
bound
mov
mov
push
fcmovbe
out
jo
pop
lds
pop
imul
nop
xor
push
popa
mov
shll
sub
xchg
xchg
or
fisubs
das
xchg
adc
inc
xchg
mov
lret
jmp
repz
cmpsb
rclb
pusha
dec
cmpl
mov
lcall
mov
dec
jge
push
fs
push
int3
xor
mov
repz
daa
push
or
and
ss
neg
or
and
mov
lahf
ret
stos
push
or
mov
mov
cmp
mov
lock
movsl
mov
xchg
sub
xchg
sbb
add
dec
test
sbb
jle
ficomps
dec
iret
mov
les
ja
mov
out
aas
clc
sti
inc
data16
cltd
inc
mov
cltd
sub
sbb
fbld
stos
out
shlb
push
inc
xor
insl
imul
mov
sbb
cmp
scas
sahf
xor
dec
cmp
ret
cmp
cmp
inc
cmp
out
fsubl
mov
jge
cmp
or
sub
or
add
push
push
jno
shll
add
and
xchg
xor
mov
inc
stc
inc
jg
sbbb
flds
and
push
xchg
pusha
lods
test
dec
dec
mov
cmpsl
loope
sub
mov
adc
ss
in
push
adc
aad
push
push
sub
loopne
pop
push
pand
pop
jo
xchg
jbe
add
popaw
lcall
and
cmp
xor
pop
scas
in
dec
pop
dec
xchg
clc
pop
repnz
jecxz
mov
es
xor
sti
out
sub
sbb
and
lods
cmpsb
enter
sub
jmp
fisttpll
lret
scas
ljmp
aam
mov
arpl
fimull
mov
fnstcw
or
push
mov
test
jnp
call
ds
xor
add
mov
pop
inc
scas
xorl
rcll
ss
push
pop
notl
push
inc
out
jnp
jle
daa
in
fidivl
mov
popf
loopne
nop
mov
or
int
fwait
jnp
mov
sub
lea
mov
mov
je
push
dec
arpl
addr16
or
or
mov
dec
inc
pop
ror
dec
add
pop
and
jno
gs
push
fstpt
clc
inc
push
and
add
xor
divb
movl
fistpll
and
adc
shrl
test
movsb
push
dec
mov
jp
cs
push
adc
outsb
jb
fsubl
push
call
js
cmp
mov
jbe
je
or
andl
mov
pop
stc
push
dec
pop
cld
dec
pop
jmp
ficompl
enter
inc
push
cmp
ljmp
orb
and
loopne
inc
dec
loopw
addr16
test
aam
outsl
pop
iret
push
pop
lock
repnz
and
rolb
jnp
pop
adc
je
or
test
rcll
push
dec
call
mov
insl
roll
mov
daa
xchg
js
in
adc
je
scas
pop
iret
adc
dec
scas
jno
xchg
or
es
and
and
sbb
js
jecxz
repz
xor
cmp
dec
jmp
mov
jg
sahf
lret
jmp
repz
cld
dec
ret
xchg
xor
int3
fldl
mov
pop
sub
push
or
lcall
sub
addb
sahf
sbb
pop
icebp
xlat
sub
ja
inc
push
jle
sbb
inc
pop
cltd
xchg
out
mov
xor
or
sbb
mov
scas
clc
adc
and
sar
lods
jp
xor
push
jg
push
xor
insb
cmp
dec
aaa
xor
shlb
dec
cmp
loope
sub
in
lds
scas
cmp
cwtl
sbb
cltd
and
push
push
aam
xor
cmc
and
dec
jge
fdivs
aam
ljmpw
push
xorb
inc
lcall
arpl
cld
xor
hlt
rolb
repnz
mov
mov
add
or
or
pop
mov
neg
and
gs
inc
in
addb
and
add
inc
out
neg
inc
inc
lahf
out
popf
arpl
fldcw
jne
loopne
adc
cwtl
jno
sub
dec
in
jb
lret
adc
adcl
sub
mov
stos
inc
cld
mov
mov
jmp
bound
aam
cmpsb
jecxz
leave
mov
js
inc
mov
jmp
push
das
fisubs
int3
inc
jno
lret
jg
cltd
push
jbe
mov
dec
in
add
mov
sub
stos
icebp
push
mov
cmp
lea
pop
sarb
addr16
test
cltd
fcomi
cmpsl
call
test
in
add
jnp
in
push
mov
sti
or
loop
sub
push
mov
cmp
xor
pushf
mov
jmp
clc
aaa
pop
cmp
fcomps
in
das
imul
mov
das
shll
add
nop
push
inc
push
aad
imul
jp,pn
and
or
in
fadds
xor
shrl
push
push
dec
cmc
pop
arpl
loope
stc
call
dec
faddl
icebp
push
mov
insb
dec
cmpsb
xlat
lcall
nop
les
lods
rcrl
jb
int
fwait
cmpsb
fyl2x
adc
mov
xor
sub
push
stc
pop
repz
ret
movsb
push
sub
ret
pop
ss
mov
push
or
add
xor
add
sbb
leave
int
adc
jp
cmp
push
jnp
mov
mov
jno
xchg
jp
jmp
lcall
push
cwtl
je
shrl
adc
sbb
add
data16
adc
ljmp
inc
fdivl
or
pusha
test
adc
ret
cmp
insl
gs
xor
out
js
bound
fsubs
in
hlt
xchg
xchg
and
int
ss
ja
out
lahf
cmp
sub
xor
add
cld
negb
push
inc
das
push
dec
mov
xor
jle
lret
repnz
pop
cmp
xchg
mov
xchg
adc
pop
jle
aad
pop
dec
bound
loope
sub
ljmp
jecxz
xor
arpl
push
or
movsl
cmp
shlb
jge
xlat
ror
sbb
rcrl
mov
mov
out
xchg
or
bndstx
and
jbe
mov
pop
inc
in
iret
cmp
repnz
lahf
data16
xchg
andb
bswap
xchg
or
cmp
cmp
mov
daa
inc
lods
stos
push
xchg
orl
jno
divb
mov
sub
out
mov
jb
aaa
fisttps
adc
or
xchg
outsb
ss
sbb
jp
xor
jnp
mov
testb
scas
pusha
imul
cli
clc
lods
mov
pusha
or
mov
inc
lock
gs
push
loope
sub
xchg
cmp
adc
push
mov
cld
mov
push
dec
jbe
cld
adc
and
dec
mov
jp
ja
mov
mov
ret
popf
xor
sub
mov
repnz
imul
test
jl
aaa
arpl
sti
loop
mov
scas
out
mov
jge
ret
cmpb
cltd
push
addr16
repnz
pinsrw
stc
sbbl
test
pop
mov
lods
inc
cmp
mov
mov
xor
ficomps
je
out
jns
jg
roll
mov
xor
cmp
mov
out
out
sub
pop
loope
cmpsl
mov
in
sbb
int3
stos
dec
cmpsl
fldt
leave
mov
cmp
hlt
sub
push
jae
push
push
negl
xor
cmp
cmpsb
sti
rcr
and
sub
cld
icebp
sbb
scas
mov
dec
pop
and
cmp
xor
aaa
outsl
fxch
cmp
mov
add
ret
stos
and
inc
sbb
gs
icebp
fnstenv
xchg
sbb
push
jg
mov
pop
cmc
mov
mov
cmp
outsb
xchg
dec
push
int3
icebp
out
xor
jecxz
push
mov
mov
daa
xchg
xchg
in
loop
aaa
aas
fs
repz
push
push
mov
sub
mov
stc
rolb
iret
mov
inc
sub
pop
leave
adc
mov
add
pop
rcrl
jle
xor
loopne
dec
or
mov
repz
mov
in
out
adc
scas
stc
loopne
out
sub
fistl
sbb
adc
push
and
mov
or
cld
adc
imul
xor
cmp
scas
xchg
insb
adc
lahf
in
out
xor
jge
cmpsl
fisubrs
add
call
jnp
es
add
lahf
flds
pop
add
mov
pop
mov
addb
add
popa
ljmp
pop
sub
loopne
into
add
mov
idivl
fcoml
outsb
or
addb
mov
add
imul
mov
cmp
dec
test
jp
addr16
in
xchg
lods
dec
xchg
sbb
les
xchg
dec
lret
fcoml
dec
inc
pop
outsl
jae
add
inc
add
pushf
loop
imul
push
nop
ljmp
mov
cs
enter
xchg
xor
sbb
mov
add
loope
fimuls
dec
in
lahf
nop
or
pop
dec
iret
dec
mov
xor
sbb
in
and
sub
icebp
imul
or
push
adc
fcomip
push
jae
jnp
mov
mov
addr16
pop
pop
push
pop
out
pop
adc
mov
loopne
cltd
aaa
lock
jg
pop
jmp
mov
and
iret
out
add
icebp
lcall
fucomi
add
rclb
divb
enter
sub
sbb
pop
pop
push
inc
mov
sub
arpl
lahf
add
jp
insb
jbe
jbe
je
lods
popa
insb
aam
inc
jmp
adc
pop
inc
and
xchg
test
mov
lods
xor
jnp
xor
mov
stc
leave
or
xor
dec
clc
popf
stc
int3
or
xchg
mov
mov
lret
and
rorl
and
test
push
adc
movsb
das
out
pop
adc
adc
out
int
stos
sti
lock
test
inc
dec
push
dec
push
mov
jmp
adc
jo
jns
out
test
jae
sbb
ja
mov
xchg
outsb
inc
mov
mov
ficoml
dec
stos
dec
sti
clc
xor
outsb
repz
xchg
adc
sarl
lret
jbe
sub
mov
pop
fs
ficompl
enter
mov
js
lcall
clc
sub
mov
and
inc
mov
fidivrl
sub
lods
les
mov
add
sbb
lret
and
cmp
add
int3
push
int3
mov
mov
fsubrl
sub
sub
rcrl
jnp
sub
pop
lods
subl
push
jge
xchg
xor
imul
sub
inc
xchg
xlat
add
dec
or
in
les
cltd
xchg
movsl
stos
adc
push
imull
fwait
lds
leave
jbe,pt
push
jae
pusha
or
xor
outsl
xor
jg
stos
xchg
cmpl
pop
loop
dec
es
mov
mov
outsl
jmp
roll
pop
xorl
scas
outsl
imul
add
and
push
dec
icebp
scas
xor
idivl
cmpsb
cmpsl
xchg
out
mov
xchg
dec
adc
stc
push
loopne
jmp
push
das
mov
aam
mov
push
cmp
ja
outsb
and
mov
jb
cmpsb
dec
jae
and
xor
ret
test
xchg
push
pop
xchg
inc
aad
mov
shrb
cltd
ret
imul
or
push
leave
repnz
int
std
mov
push
ret
jecxz
jl
lea
sbb
pusha
cmovs
inc
cmp
mov
adc
lods
jge
xchg
cmp
dec
jne
push
sbb
cmovo
sub
xor
test
leave
push
repnz
int
cltd
fmul
popf
jns
xchg
outsb
bnd
loop
sub
lods
lea
stos
jb
fcoms
jnp
mov
sbb
jl
in
stos
sbb
nop
in
stos
cmpl
cmpsb
test
aas
xchg
cmpsb
jle
aam
scas
rorb
in
int3
jge
mov
jle
repnz
and
mov
sub
or
sarl
adc
lcall
sub
shll
jb
push
aas
mov
sub
orl
ss
aam
pop
out
or
ret
dec
inc
mov
push
cmp
xchg
shlb
mov
adc
xor
cld
xor
push
pusha
add
push
xchg
dec
mov
ret
jecxz
shl
mov
mov
rcl
stc
push
mov
or
movsl
mov
pop
cmp
outsb
call
shlb
mov
mov
sbb
pop
scas
cwtl
jmp
adc
xor
mov
pop
xchg
je
sub
sbb
mov
sbb
jmp
inc
cmp
jecxz
std
enter
adc
lods
sbb
sub
not
push
cmp
add
stos
inc
jg
adc
js
in
sbb
adc
mov
scas
scas
outsb
add
mov
adc
out
inc
push
loopne
mov
lock
xchg
xchg
addr16
mov
xchg
or
inc
in
mov
push
test
out
out
jbe
or
ljmp
hlt
dec
cltd
clc
mov
mov
mov
jne
and
xor
rcl
mov
das
int3
stos
in
cltd
mov
inc
incb
sbb
xchg
jge
mov
in
loopne
pop
cmp
negl
call
and
inc
shrb
xchg
sbb
sub
mov
push
mov
pop
into
add
pop
or
testb
sbb
pusha
xchg
or
shlb
adc
xor
jg
sub
cmpsb
movsb
mov
in
outsl
add
dec
test
pop
dec
rcrl
mov
sub
std
add
mov
test
loopne
out
sahf
and
cli
lret
xor
add
and
xor
leave
push
out
dec
add
push
jb
cmpsb
lret
mov
jb
test
push
arpl
fimull
xor
mov
jp
sahf
xor
inc
lahf
call
into
enter
dec
inc
dec
cmp
xlat
ret
stos
mov
push
gs
cli
pop
int
fstps
addr16
loop
lock
aas
cmc
test
aam
add
fsubs
xorl
out
aas
mov
test
call
fs
dec
int
in
daa
mov
insl
sub
xchg
cld
popf
in
sbb
popa
test
jl
lds
std
jnp
push
dec
cs
mov
dec
pop
sbb
jns
iret
push
ljmp
ljmp
loopne
cmc
jge
rcr
push
add
cmp
xor
push
xor
mov
fstpt
pop
add
mov
insb
addb
pop
cmp
pop
bnd
cmc
adc
sbb
and
aad
notb
leave
adc
loope
stos
pushw
iret
or
xlat
movsl
fwait
inc
inc
out
sbb
mov
or
test
in
dec
mov
cli
sbb
xor
test
in
xchg
int
cld
dec
push
inc
or
rcl
rcrb
ja
cs
mov
or
sahf
inc
popa
or
pop
inc
adcb
jo
sub
push
xchg
inc
aaa
sbb
stos
push
loopne
shll
cli
adc
mov
imul
call
jp
and
out
dec
loop
clc
jmp
sbb
cmp
adc
or
dec
js
inc
sub
fsubrs
xor
lods
shl
push
fcmovnu
js
xor
xchg
fimull
in
fwait
movsb
std
shll
cmpl
in
and
out
daa
jbe
mov
fnsave
mov
stos
movsb
mov
or
and
std
dec
sarb
lock
aad
push
dec
xchg
outsb
sub
test
ds
repz
xor
sub
xor
sahf
stos
hlt
cmp
cmp
dec
popa
movsb
xor
dec
les
sub
cmp
test
aam
xor
jns
push
xchg
mov
in
sub
mov
fwait
arpl
movsl
ljmp
or
jp
out
lret
jne
pop
gs
cmovne
pusha
repnz
jno
arpl
fnstenv
imul
fcmovb
mov
movsl
out
jno,pt
mov
pop
jne
add
mov
rcrl
adc
popf
mov
pop
jmp
fidivs
bts
add
adc
lahf
pop
pop
idivb
insb
inc
jns
fsubs
cmpsb
pop
jbe
sub
push
or
inc
data16
jno
dec
jns
mov
sbb
jae
push
pop
push
pop
xor
or
movsl
test
xor
popl
int
popf
push
bound
sbb
push
adc
xor
scas
ljmp
or
movsl
and
shlb
movsb
nop
sbbl
sbb
and
xchg
movsl
or
mov
cmpsb
scas
fidivrs
outsl
push
and
sub
sub
xchg
mov
inc
ficompl
sub
loop
dec
clc
lods
add
popf
rol
adc
push
inc
inc
sub
sub
ja
and
lods
mov
xchg
xor
call
out
sbb
add
into
and
ljmp
sbb
xor
jnp
fildl
aam
sbb
or
cmc
xor
mov
pop
mov
jmp
jmp
test
xchg
jecxz
std
xor
pop
sbb
test
in
mov
and
mov
sbb
or
stos
sbb
lcall
cmc
lock
adcb
dec
daa
fsubp
aad
mov
or
jecxz
inc
loop
in
insl
rorb
mov
scas
neg
aas
fisubs
insb
sbb
lret
jns
sub
lcall
movsb
push
stos
lods
ret
cmpsb
fmuls
mov
inc
test
and
scas
jecxz
iret
pop
rcll
inc
or
and
or
and
insb
sbb
pop
push
add
loope
jmp
loop
mov
jno
cmp
inc
and
xlat
inc
mov
pushf
ja
or
jge
cmpsl
pop
in
sub
out
or
lods
inc
jae
nop
add
mov
lahf
pop
sahf
inc
cmp
cltd
add
mov
mov
sub
cmp
pushf
push
lock
bnd
outsl
cmc
popa
mov
pop
xor
cmp
insb
add
clc
xlat
sti
dec
imul
dec
sub
sbb
or
jnp
sarl
into
imul
push
imul
push
xchg
and
sbb
add
pop
std
stos
xor
mov
sub
jl
mov
adc
sahf
and
mov
cwtl
in
in
sub
adc
push
sahf
outsl
cmp
ja
in
and
pop
pop
call
mov
mov
and
lods
fdivl
sbb
inc
pop
mov
inc
push
out
inc
inc
test
cmc
mov
aas
insb
addr16
add
jno
adc
fbstp
test
xchg
movsl
test
jnp
mov
pop
loop
orl
lds
movsl
xor
sub
loop
adc
inc
sbb
sub
inc
dec
test
ret
adc
push
pop
stos
addl
cli
mov
roll
aad
xor
shl
insl
pusha
inc
ret
mov
pushf
cld
icebp
mov
subb
subl
aaa
mov
rol
mov
lretw
mov
sbb
repz
adc
xlat
gs
insb
add
jno,pn
push
dec
negl
out
mov
hlt
xchg
mov
add
mov
loope
inc
push
mov
cmp
xor
xor
and
les
inc
jecxz
lds
lods
sbb
leave
flds
mov
out
sub
fcos
jo
jle
hlt
leave
mov
clc
or
xor
xchg
lock
fnsave
mov
or
into
mov
sub
loopne
xchg
adc
adc
movsl
pop
mov
in
push
roll
ja
pusha
js
test
push
shrb
ror
mov
lods
mov
jp
push
mov
das
pop
dec
fcmovnb
sar
pusha
sar
aam
out
leave
movsl
dec
test
sahf
mov
sbb
std
fs
clc
incb
andl
cltd
jecxz
ds
cmp
daa
sbb
lock
addr16
push
or
jmp
or
xor
call
jne
push
adc
mov
cltd
jbe
mov
xor
adc
and
mov
mov
sbb
push
jne
ja
aad
xor
mov
sub
fimull
xchg
aam
loop
outsb
dec
cmp
and
es
mov
aaa
push
fcoml
or
mov
pop
fcoms
adc
pop
aam
fcmovu
out
stc
pop
mov
stc
mov
dec
mov
aas
enter
movsbl
fwait
arpl
jle
in
mov
xchg
xchg
fidivrs
sub
mov
jl
and
scas
or
add
in
mov
inc
cld
xor
pop
xorl
mov
cmp
call
push
out
pop
xorb
or
sahf
fadds
shrl
mov
xlat
bound
inc
xchg
popl
imul
sub
in
dec
sub
mov
inc
repz
push
dec
jae
xchg
mov
clc
lahf
mov
xor
rcrl
inc
fcmove
outsl
dec
mov
mov
cld
sub
xchg
dec
fst
xor
loop
iret
mov
mov
push
mov
mov
mov
sahf
fsubs
int3
jnp
mov
and
out
mov
pushf
mov
loop
jne
insl
gs
push
add
sbb
cltd
jp
nop
lea
and
nop
aaa
in
cmp
jne
adc
inc
shl
out
test
fcomps
out
popa
mov
push
nop
lret
cs
inc
lods
inc
pop
scas
scas
in
mov
add
push
cmpsb
xchg
lahf
xchg
add
xchg
jne
rcrb
or
fsubs
cmpl
and
shrl
xor
mov
cmp
mov
js
cmp
sarb
inc
mov
ficomps
add
push
stos
jb
mov
sub
stc
or
mov
push
mov
out
in
out
sbb
push
popf
test
rol
ljmp
mov
mov
fnstcw
into
inc
and
ljmp
inc
leave
pop
btc
lea
sti
adcl
add
test
cmp
inc
pop
adc
sbb
jns
daa
inc
push
jge
xchg
dec
push
and
in
adc
fsubs
adc
pusha
cmc
call
sub
pop
push
mov
fwait
or
mov
mov
hlt
das
sbb
cld
pop
rcrb
icebp
scas
inc
or
adc
sub
repz
sbb
je
mov
push
ret
loope
iret
es
cwtl
roll
in
jnp
in
mov
jne
push
scas
inc
add
shlb
mov
jns
aaa
push
inc
mov
or
mov
dec
sub
in
adc
aaa
mov
shr
popa
jmp
jns
cmpsl
in
lcall
pop
adc
out
and
cmpsb
push
sarl
sbbl
or
into
loop
push
subl
fstl
sub
cwtl
dec
xchg
cs
js
sub
lahf
jae
mov
rolb
sbb
scas
adc
push
adc
mov
pop
repnz
out
arpl
cwtl
outsl
inc
add
jnp
xor
orb
stos
pop
mov
add
ds
push
push
stos
jp
sbb
loop
mov
hlt
rcrb
and
lret
leave
movsl
jmp
insl
pop
jg
jno
or
rcrb
aam
nop
addb
push
mov
outsb
out
sti
cltd
xchg
xlat
and
inc
xchg
adc
push
cmp
lret
pop
pusha
lods
repz
stos
mov
js
jno
mov
jle
dec
add
ja
stos
push
jmp
push
scas
frstor
xor
jle
and
je
pop
into
in
lret
xchg
out
mov
sbb
les
lea
scas
jb
fsubrp
fs
and
pop
jns
fisubrl
push
call
in
psubd
cmpsl
setbe
or
ljmp
mov
sbb
and
stos
enter
adc
ja
jns
stos
loop
insl
mov
inc
cmp
push
xchg
ret
add
jecxz
fwait
lea
pop
sbb
rclb
inc
repz
push
lret
insb
jmp
push
or
movsb
xor
add
xchg
or
mov
jae
mov
ljmp
sbb
mov
push
jg
std
mov
out
ret
inc
mov
pushf
movsl
dec
aas
add
movsb
lds
xchg
ja
and
jle
test
cmp
sbb
ret
add
ucomiss
jp
divl
mov
lcall
add
sub
adc
iret
cmp
xlat
inc
mov
lret
fwait
mulb
mov
mov
cmp
or
loopne
fsubs
rcrb
xor
data16
icebp
and
in
adc
push
subb
push
pop
and
jo
jl
mov
adc
loopne
out
out
xor
dec
pop
sub
into
mov
sahf
mov
nop
sti
pop
cmpb
pop
addr16
lock
xchg
or
ret
mov
pop
movsl
mov
mov
sbb
call
inc
iret
and
js
sub
ffree
arpl
push
xchg
sti
lret
dec
insb
mov
adc
xor
imul
sbb
inc
sahf
mov
clc
incl
je
arpl
sbb
inc
mov
mov
inc
cmp
push
pushf
push
test
or
lock
pop
into
stc
testl
jg
jae
gs
jecxz
sbb
mov
repnz
lcall
call
lcall
test
or
ret
sub
lret
jmp
push
inc
push
xor
mov
shll
and
shl
sub
adc
lods
nop
push
hlt
add
mov
movsl
mov
out
jnp
dec
stos
adc
int
sub
push
cmc
call
and
add
sub
cmc
lods
cmpb
data16
in
mov
shrb
arpl
mov
sarl
fldl2e
aas
push
insb
lods
pop
inc
int
adc
sarb
xchg
cwtl
insl
mov
inc
lds
bound
dec
dec
cwtl
fcmovnb
and
dec
sub
inc
lcall
push
sub
ds
push
mov
repnz
loope
and
mov
mov
inc
jns
xchg
adc
mov
stos
jns
mov
xor
or
das
int
outsb
mov
ret
pop
repnz
out
cmc
push
jecxz
mov
outsl
pop
jg
aad
add
test
adc
jmp
scas
cmp
pusha
add
js
pop
mov
push
and
inc
mov
add
hlt
pop
dec
cltd
cmc
pop
add
rcll
and
jbe
rorl
movsl
or
sbb
jecxz
fsincos
dec
subl
push
int
xorl
or
and
xor
and
xlat
mov
mov
test
out
pop
pop
cmp
mov
cmp
mov
cmc
inc
and
and
jno
push
jo,pt
xchg
cmp
test
and
sbb
mov
mov
lret
jecxz
jbe
mov
inc
add
std
lret
les
fildl
movsl
mov
orb
movsl
mov
sbb
rcrb
sub
and
inc
pop
add
mov
and
into
movsl
mov
divl
rolb
mov
bound
cmp
xor
cltd
pop
pop
fs
cmc
xlat
into
cmpsl
add
xchg
mov
jmp
inc
pop
loope
xchg
lret
or
cmp
cmp
pop
lods
cmp
imull
js
stos
popa
cmp
and
lahf
xor
sbb
jno
mov
xlat
jmp
jb
idivl
inc
push
lock
sbb
add
cmp
testb
ret
xlat
push
jne,pt
jle
pop
fsubr
mov
push
cli
mov
xor
sbb
repnz
and
pushf
mov
arpl
int
imul
add
mov
rolb
repz
adc
mov
fcmovnu
iret
int
push
mov
popf
jb
jb
mov
test
mov
mov
fmull
jo
call
lods
sbb
xchg
push
xchg
cltd
fs
cld
add
jb
mov
adc
cmp
push
mov
sub
adcl
jl
mov
cmp
scas
sbb
jl
pop
push
test
imul
sti
jl
fwait
jp
movsl
bound
mov
leave
adc
movsb
xchg
popf
jmp
and
pop
mov
sahf
out
xchg
imul
push
and
mov
ja
mov
and
pop
int3
dec
push
aad
js
push
jne
aas
cltd
inc
dec
mov
fcmovu
xchg
mov
xchg
cmc
dec
es
outsb
cmp
insb
xchg
xchg
cmpsl
add
mov
rcrb
ficompl
sub
adc
add
inc
or
xchg
data16
fcoms
stc
lods
jb
inc
or
sub
movsl
mov
ss
repz
xor
pushf
leave
lock
mov
jle
mov
push
inc
lods
sahf
and
pop
push
xchg
dec
mov
cmpsl
lock
out
iret
repz
mov
data16
aam
mov
loope
call
pushl
insl
push
push
das
jbe
lahf
jo
lock
fmull
add
js
lods
mov
mov
clc
mov
movsb
and
les
in
loopne
lods
loope
ret
mov
stos
jmp
cltd
cmp
adc
test
mov
stos
scas
mov
sbb
jmp
in
movsb
jmp
js
pop
out
call
xlat
add
mov
xchg
mov
dec
out
pop
pushf
repz
insb
pop
lcall
mov
dec
or
pop
mov
fisttps
loop
imul
and
jns
aaa
testl
mov
sbb
shlb
icebp
sub
test
pop
lahf
insl
ja
xchg
aas
nop
repz
cld
mov
jb
sub
pop
rolb
dec
mov
mov
pop
test
add
push
shrl
xchg
cmpsb
fs
fsubl
addr16
mov
faddl
add
jbe
mov
push
mov
insb
inc
test
pop
insl
loopne
ss
shrl
xchg
push
pop
push
movsb
push
je
mov
cmpsb
push
mov
jne
push
lods
mov
inc
mov
jle
add
push
jo
hlt
int3
imulb
xchg
cmp
int3
leave
dec
xchg
or
or
pop
xor
pusha
add
and
cmp
push
mov
inc
push
enter
mov
into
xchg
jae
jno
ljmp
or
jmp
fs
sub
jnp
test
call
add
js
insb
mov
adc
sbb
jmp
rclb
or
add
xchg
cmc
fisttpl
cli
mov
mov
and
sarb
sub
aad
sarb
mov
out
sbb
ss
adc
mov
jp
ljmp
jns
addr16
ror
imul
jnp
push
mov
mov
mov
pop
fisttpl
fs
aaa
in
push
push
push
cli
dec
pop
pop
mov
or
and
xchg
adc
dec
out
out
imul
outsb
mov
dec
mov
mov
movsl
faddl
mov
cmp
add
dec
adc
inc
enter
lcall
or
fsub
test
call
add
test
pop
repz
adc
popa
pop
push
into
aas
repnz
xchg
les
mov
movsb
jns
mov
jecxz
ljmp
lds
mov
add
std
or
inc
and
and
adc
push
sahf
or
push
js
js
setg
nop
addr16
inc
fdivrl
xor
adc
add
fdivrl
cmp
pop
pop
repz
movsl
or
mov
popa
pop
pop
mov
into
mov
pop
shlb
xor
imul
cmp
ret
fsts
cmp
add
or
das
or
adc
mov
int
divb
ret
cmp
mov
imul
les
cmp
out
loopne
xchg
inc
mov
push
mov
adc
mov
jl
mov
push
popa
mov
pop
je
sti
movsl
cmp
movsb
gs
jge
fwait
add
pmaxub
add
inc
jle
int3
mov
jmp
movsl
push
loop
andb
cmp
arpl
popf
and
jecxz
xor
pushf
mov
and
dec
mov
xor
cmp
jmp
rorl
sbb
lods
or
inc
mov
in
mov
clc
xor
sub
xor
bound
cltd
outsb
sub
inc
mov
ljmp
negl
roll
sub
fs
dec
pop
lahf
mov
lret
pop
mov
sub
mov
insb
mov
mov
pusha
stos
imul
push
jl
sub
mov
popa
leave
das
pusha
popf
push
adc
mov
pcmpgtb
pushf
pop
pop
ret
fiaddl
push
xor
mov
lahf
aad
cmp
outsl
add
jle
pop
cltd
rcll
das
jmp
scas
scas
scas
dec
cmp
lret
push
sbb
lret
cltd
loope
jne
and
push
push
popf
int3
inc
gs
cmp
lahf
push
gs
jge
mov
fsubrl
xor
push
bound
sub
rcrl
inc
hlt
pop
mov
jo
dec
stos
out
test
ret
jae
aad
fldcw
lcall
sub
out
xchg
pop
and
sahf
jnp
or
jnp
subb
imul
xchg
push
shll
or
jmp
xchg
dec
xchg
aad
mov
sahf
shl
mov
imul
out
loope
es
lods
push
rol
jae
sbb
fwait
insl
fisubs
add
push
test
ret
xchg
and
stos
push
fwait
mov
lods
xchg
daa
ja
xor
xlat
pop
ficoms
or
loopne
xchg
pop
inc
mov
dec
or
loope
loope
inc
insb
bound
aaa
pop
das
mov
std
fsubs
insb
mov
pop
pusha
icebp
fcoms
or
xor
push
ret
enter
std
inc
xlat
out
sbb
lods
mov
push
scas
push
je
inc
and
inc
xchg
outsl
rolb
dec
sub
dec
inc
pop
pop
push
or
cltd
xor
cltd
loopne
dec
dec
mov
loop
cld
mov
jo
lds
aas
clc
fstps
mov
inc
mov
popf
dec
dec
scas
loope
xchg
pushf
sbb
xchg
aad
xchg
call
sarb
ss
ljmp
or
push
lret
pop
cmp
adc
dec
push
mov
out
inc
or
loope
scas
inc
xor
ret
mov
jg
jecxz
dec
pop
rclb
lds
dec
and
jle
loop
rcll
mov
int3
and
cmp
test
jle
and
mov
pop
addb
inc
enter
jecxz
xor
sti
mov
cmp
cmp
movsb
sbb
push
nop
aas
cmp
dec
stos
inc
clc
popa
aaa
aad
pop
mov
mov
and
mov
push
hlt
pop
mov
and
testb
leave
mov
in
cmp
push
mov
or
shr
and
scas
jae
cmp
daa
shll
dec
sub
loope
in
add
mov
sarl
mov
add
xchg
push
mov
push
jl
or
rol
mov
sub
jecxz
loop
push
int3
push
lods
int3
stos
mov
push
sub
xchg
imulb
or
adc
inc
lods
pop
mov
or
fdivrs
popl
mov
in
cli
cmp
dec
xchg
pop
cmpsl
push
adc
mov
in
dec
call
xchg
repz
cs
sti
outsb
adc
ljmp
addr16
pop
jbe
inc
sbb
push
out
lea
sub
jle
add
out
jb
mov
ja
sub
leave
stos
pop
mov
testb
or
hlt
push
push
dec
xchg
rolb
cmp
stos
fmuls
xchg
push
dec
fimuls
add
adc
dec
or
cmp
adc
mov
incb
mov
or
rclb
mov
scas
aad
cmpsb
add
or
and
jne
lea
out
sti
cwtl
ljmp
pop
pop
call
es
lods
mov
pop
movl
in
inc
sbb
add
out
and
fnstsw
mov
bound
cmp
or
std
add
cld
insb
lahf
push
mov
cs
sbb
in
test
add
mov
ror
add
pop
mov
ja
mov
stos
mov
adc
mov
int
ret
jno
insl
xchg
mov
nop
sub
inc
jmp
dec
stos
jmp
add
leave
adc
subl
inc
sub
and
cmp
ror
inc
dec
cmp
shrb
cmp
idiv
cmp
out
lret
cmp
push
or
cli
ds
sub
shll
lea
aas
fstpt
jp
push
outsl
insb
lret
test
xlat
movsb
jnp
push
cwtl
push
and
test
not
pop
gs
pop
shll
shll
lock
cmp
fbstp
push
add
jo
out
rcrb
mov
cmp
sarb
std
daa
js
jg
pop
adc
dec
mov
bound
xchg
repnz
push
xchg
pop
push
mov
int
mov
arpl
xchg
sub
push
xor
inc
addl
mov
lods
mov
fs
clc
pop
cwtl
mov
adc
mov
jb
lds
nop
mov
or
add
out
mov
xchg
lods
and
xor
out
mov
test
out
fildll
inc
mov
ljmp
add
cwtl
daa
lea
jg
push
dec
ret
and
hlt
mov
push
ret
hlt
add
insl
jbe
dec
xchg
push
jo
in
sbb
fdivs
push
insb
stc
cmp
dec
pop
rcrb
mov
ret
or
scas
imul
loop
xor
cmpsb
push
xchg
jp
mov
push
icebp
cld
les
cs
push
out
test
test
jl
cwtl
xor
mov
push
push
in
jae
push
out
pop
push
lock
test
bnd
jle
jo
and
cmp
mov
repnz
xchg
nop
insb
push
add
addr16
stos
adc
adc
popa
mov
daa
pop
loopne
lcall
popa
fistpll
dec
lea
rcrb
xchg
rorl
xchg
test
mov
rcl
pop
sub
ja
scas
xlat
sbb
faddl
scas
pop
pop
jmp
pop
filds
lods
popa
cs
cmp
jnp
push
lahf
dec
mov
test
add
lock
ret
mov
push
sahf
inc
jns
test
push
inc
in
sbbb
mul
cli
int3
mov
push
jp
xor
scas
shrl
add
test
pushf
mov
jne
and
fidivl
inc
outsl
cmc
out
mov
push
push
in
jb
xor
iret
cmp
dec
aas
adc
jl
and
xchg
das
mov
lahf
cs
int
xor
jle
xor
out
mov
ret
sub
mov
add
pop
xor
imul
mov
stos
jecxz
jne
and
add
push
ljmp
out
push
les
in
push
xor
repz
add
out
daa
cmpsb
inc
jnp
xor
jmp
dec
negb
leave
enter
mov
lea
fs
sub
mov
das
push
mov
iret
adc
repz
push
shrb
sarb
cli
sub
js
out
mov
sub
push
inc
jns
std
cmc
addr16
sub
inc
stos
jnp
xlat
into
mov
mov
cs
xchg
pop
or
jnp
mov
dec
push
mov
xor
rclb
jl
fisttps
dec
test
adc
es
adc
mov
pop
aad
mov
pop
std
cs
mov
and
jae
into
or
lret
sahf
loop
in
dec
xchg
outsl
stc
xchg
sbb
sbb
out
mov
imul
cmp
ret
xor
fwait
xlat
hlt
das
out
ror
movsb
out
loopne
pop
mov
sub
cmp
mov
in
ja,pt
mov
fdivs
jge
sbb
mov
ja
adc
aam
leave
sbb
lods
push
cmpsl
aad
inc
and
xor
adc
leave
mov
jl
repz
leave
popa
sbb
sbb
xor
inc
aaa
add
rorl
pushf
aam
dec
rol
aad
jbe
sbb
cmpsb
rclb
cltd
mov
pop
ljmp
xchg
pop
add
pusha
fldt
sarb
je
pop
inc
sahf
fwait
stc
cmpsb
jo
and
sti
ficompl
fldenv
xor
pushf
and
sahf
aad
xlat
xchg
ss
cltd
cmpsl
cmp
xchg
ficoml
jno
push
pop
inc
lahf
mov
xchg
lret
in
cmp
and
hlt
xchg
adc
nop
xlat
mov
inc
add
dec
cmpb
or
pop
data16
or
cmp
in
cltd
int3
inc
push
push
xor
in
mov
xlat
sub
jns
mov
insl
adc
push
std
mov
shlb
sub
mov
jo
popf
cmp
cmp
push
adc
and
popf
es
test
sbb
mulb
add
xor
sti
mov
sub
int
mov
mov
xchg
fsubl
or
and
bound
imul
push
mov
jmp
push
hlt
ljmp
inc
adc
sbb
jecxz
shr
outsb
adc
xchg
and
sbb
fimull
dec
fcoml
xchg
mov
mov
jae
dec
out
push
mov
mov
mov
scas
enter
in
das
jo
dec
movsl
dec
push
sar
subl
pop
or
mov
cmp
sbb
scas
lock
pusha
pop
xchg
inc
in
lret
js
pop
adc
roll
mov
stos
add
cli
sarl
xor
iret
leave
sub
pop
mov
and
xchg
push
out
xchg
ror
aaa
cltd
ds
inc
insl
js
dec
adc
shrl
jle
dec
mov
jl
jmp
outsb
stos
inc
das
sbb
mov
mov
inc
cmp
test
jp
xchg
jne
cmp
movsl
pop
mov
into
in
adc
lock
in
inc
xchg
sbb
movsl
hlt
dec
ror
int
stos
repz
icebp
or
adcl
pop
or
push
stos
push
cmpsl
sar
mull
imul
mov
dec
call
pop
jbe
subb
push
js
push
mov
data16
push
fmuls
push
mov
and
hlt
sbb
mov
push
repz
sub
dec
and
jmp
xorb
pop
mov
dec
fnstcw
xchg
dec
out
loopne
movsl
pusha
cmp
neg
js
out
push
mov
shll
loop
jnp
cwtl
mov
scas
ljmp
mov
adc
je
cld
mov
mov
mov
push
pop
push
xchg
das
out
lret
flds
cld
scas
adc
jle
and
inc
loop
mov
pop
mov
add
xor
push
push
add
lods
clc
xor
sbb
xchg
orb
dec
fs
mov
xor
cmpsb
push
mov
add
cmp
mov
push
sti
mov
imulb
sti
add
fdivs
push
xchg
lcall
lods
jge
aas
lcall
xchg
and
orb
aad
mov
lods
test
fcompp
fmulp
out
lods
dec
xchg
in
mov
xchg
or
and
cli
in
out
sub
jnp
mov
scas
sub
ds
scas
repnz
rclb
pop
fs
pop
out
adc
pop
sub
xchg
mov
xchg
mov
lahf
shrb
loopne
fsubr
sub
mov
inc
cmc
iret
mov
jbe
shl
xlat
addl
mov
push
xchg
cli
push
mov
pushf
sahf
fdivs
xor
and
andl
cmpb
xchg
xor
movsl
movsb
mov
jp
sub
xor
je
sbb
xchg
adc
imul
mov
ss
inc
sti
jo
in
pusha
dec
jne
aam
roll
dec
jae
test
cmp
lds
sub
addl
pusha
cmp
pop
clc
mov
adc
stc
mov
jge
push
or
sub
shr
adc
xor
dec
mov
fstpt
clc
mov
sub
mov
sbb
cwtl
repnz
lods
or
cmp
fcompl
imul
scas
adc
insb
rcl
mov
xlat
or
test
nop
xchg
jp
or
fiaddl
adc
out
daa
lret
aaa
adc
push
movsb
fistl
mov
imull
out
cmp
je
mov
addl
pop
data16
imul
xchg
test
mov
jnp
idivb
or
push
mov
sarb
out
in
xchg
daa
add
adc
mov
dec
add
and
push
jnp
sbb
lcall
mov
mov
and
addr16
test
repz
dec
hlt
cmp
mov
add
daa
and
addb
sbb
mov
ret
mov
movsb
loop
out
inc
or
mov
cmp
pushf
call
stos
add
mov
fwait
pushf
dec
dec
adc
dec
xchg
test
push
adc
add
ss
push
jp
stos
fistl
out
add
out
mov
add
iret
inc
imul
cmp
das
cmc
mov
mulb
pop
shrd
shll
sub
shlb
and
loopne
sbbb
movsb
mov
dec
push
adc
push
dec
cli
adc
xorl
aaa
popf
andb
sub
adc
mov
cmp
lret
or
mov
ljmp
inc
aam
xlat
jecxz
cld
jne
cld
fsubr
fcmovnbe
add
dec
test
add
fsubp
xchg
push
and
into
mov
and
loope
push
dec
cvtps2pd
xchg
test
mov
cmp
pop
add
sub
dec
testb
addr16
pop
push
popf
lahf
push
cmp
push
lahf
xchg
into
sub
cmp
pop
or
or
inc
mov
fstpl
mov
out
stc
and
dec
data16
sbbl
out
mov
lcall
pop
or
mov
fcoml
push
ret
add
cmpsb
xchg
jle
dec
insl
lock
add
dec
lcall
or
pop
jb
lret
mov
aad
std
pop
movsl
repz
gs
test
push
inc
cmpsl
inc
flds
fwait
loope
repz
pusha
fmull
xchg
outsl
cmp
in
mov
mov
pop
cmp
ret
xor
mov
lret
outsb
fldt
cltd
cmpsb
add
jns
inc
pop
sbb
add
push
jg
push
adc
cltd
pushf
xor
xor
cmp
fucomp
dec
lahf
in
xor
call
into
mov
cltd
jne
enter
jle
in
jnp
loop,pn
push
xor
popf
lret
cmp
add
cmp
cmp
xchg
dec
repnz
lock
and
iret
movsb
jns
sahf
cmp
les
fdiv
lcall
xor
push
jle
xor
add
adc
out
push
rol
pop
xlat
in
in
sub
jp,pt
mov
mov
test
loop
add
pop
daa
jbe
int3
mov
xchg
and
dec
imul
dec
mov
filds
cmp
test
call
out
jmp
jae
mov
xchg
xchg
dec
je
pop
mov
xlat
pop
jne
aas
xchg
and
push
outsb
mov
test
popa
jb
dec
lret
repnz
test
cli
mov
sarb
lods
push
mov
push
shll
mov
packuswb
inc
mov
andb
sub
and
mov
push
dec
mov
fdivl
insl
int3
ret
inc
sbbl
test
daa
mov
repnz
imul
into
dec
jmp
mov
dec
mov
adc
pop
mov
sbb
dec
and
lret
xor
pop
shlb
es
clc
dec
aaa
cmp
imul
push
push
es
xlat
aad
jno
xor
pop
pop
pop
lcall
or
out
jo
jp
movsb
fstpl
imul
dec
popf
adc
xchg
std
add
mov
and
fistps
outsb
out
les
pop
pop
pop
shrb
mov
cs
inc
sbb
fdivrs
test
insl
cli
xorb
data16
out
fldcw
jbe
add
adc
je
pop
push
push
push
js
stos
sbb
xor
adc
inc
inc
lods
int
pop
cld
ja
popa
dec
pop
sub
rcrl
stc
xchg
lcall
mov
and
arpl
dec
lcall
xchg
xor
mov
jb
xor
scas
call
sub
imul
mov
sub
scas
es
fdivs
push
outsb
or
arpl
mov
mov
dec
sub
mov
int
cmpsb
fstps
xor
sub
sub
sub
ss
and
inc
sar
dec
loope
adc
sub
xchg
or
aam
mov
sub
pminub
fsubs
jle
faddl
push
dec
pop
loope
mov
push
call
lods
ficoms
mov
xor
scas
aam
decb
negb
xor
mov
rclb
pusha
lcall
pop
add
stos
movsl
cmpsl
xor
push
mov
ret
inc
popf
jmp
mov
sbb
movsb
gs
aad
and
and
rcll
dec
neg
lock
rorb
in
inc
loopne
jg
ficoms
jmp
xorb
outsb
or
sbb
leave
orl
xchg
xor
lods
out
xor
lcall
notl
sbb
popa
and
ror
xlat
jle
mov
mov
adc
jae
jo
mov
dec
addb
cli
out
xchg
jp
test
fsub
push
dec
ljmp
in
ja
mov
lods
pop
aaa
sbb
xorl
imul
push
xor
push
and
iret
jmp
mov
ficoml
movsb
mov
pop
mov
cli
stos
sub
xor
out
fnstcw
mov
or
xchg
test
je
pop
lret
insl
iret
icebp
orl
jle
adc
mov
out
jg
xchg
stos
and
out
fwait
repnz
scas
ds
aad
lcall
dec
pop
cmpsb
or
push
mov
ja
push
insl
sahf
cmp
mov
or
test
xor
enter
aas
out
fsts
ss
punpcklwd
pop
test
dec
inc
mov
sub
in
mov
mov
insb
ss
mov
and
jns
stc
idiv
std
inc
sub
cmpsb
push
and
fsubrl
push
out
js
bound
mov
sub
mov
jmp
fidivs
xchg
push
ret
xor
insl
fcmovu
xor
push
leave
xor
loope
add
jns
push
jl
lret
mov
iret
and
leave
push
inc
cmp
cli
pop
dec
gs
sub
mov
jmp
pop
sub
and
jl
xor
data16
mov
xor
leave
repz
in
insb
push
mov
into
out
lahf
adc
mov
dec
cld
mov
mov
lahf
out
push
sbb
mov
gs
and
ljmp
xchg
sbb
and
cmp
fidivs
jae
jecxz
xchg
cmp
pop
outsl
mov
repnz
popa
loopne
adc
inc
and
ret
in
adc
jp
in
or
daa
cmp
inc
pop
inc
fs
sub
mov
mov
pop
lret
pop
fisubs
out
inc
out
jbe
call
inc
in
dec
repz
rcll
movsb
pop
shrl
popf
inc
add
and
sub
mov
mov
in
mov
test
ja
ds
test
loope
mov
lock
fisubrl
dec
ss
lret
test
scas
insb
arpl
push
dec
push
adc
stos
test
jmp
shll
push
cli
test
enter
dec
inc
aad
repz
shl
inc
clc
nop
jnp
mov
jg
ja
add
into
xchg
mov
mov
sub
fistl
xchg
adc
or
push
stc
wbinvd
pop
dec
cmp
jae
mov
sub
pop
cmpsl
pop
jp
sbbl
cmp
pop
cltd
push
stc
ret
mov
imull
gs
les
sbb
push
xchg
xchg
xor
push
dec
adc
xchg
mov
hlt
sti
and
mov
sub
sbb
sub
loope
repz
outsb
adc
add
xor
xlat
cmp
add
pop
rclb
scas
test
adc
inc
xchg
jnp
mov
dec
jg
std
mov
gs
and
push
inc
mov
je
push
sbb
mov
dec
lods
pop
movsb
mov
and
mov
sub
dec
lds
xchg
mov
and
dec
insb
jbe
jae
lcall
jo
or
inc
scas
aas
lret
dec
out
or
iret
pop
out
fcmovnu
and
movsb
inc
shlb
adc
mov
pop
fwait
push
pushf
pop
fdivrl
out
ljmp
clc
test
lods
mov
insl
mov
mov
inc
add
roll
xor
mov
mov
pushf
and
xchg
hlt
and
cwtl
push
cmp
flds
ds
xchg
push
push
or
sahf
fimull
dec
daa
int
add
outsb
in
push
cmp
jge
or
leave
adc
test
inc
ds
movsb
inc
decl
fwait
in
les
xchg
xor
loopne
mov
stos
inc
insb
sbb
jnp
rorl
sbb
push
cld
fimuls
rorl
sbb
hlt
push
js
pop
mov
xor
xor
sbb
sub
test
mov
cmpsl
cmpsb
jge
aam
add
fstpl
push
xlat
adc
cmp
in
push
dec
popf
push
or
rclb
incb
dec
fwait
mov
xchg
les
mov
mov
pop
mov
imul
push
sbb
add
mov
sahf
adc
lcall
lret
addr16
push
lods
push
cmp
cwtl
sub
xor
push
and
repnz
cmp
cmp
sub
js
divb
xor
sbb
pop
xor
sbb
repnz
sbb
ss
sbb
clc
aam
push
jae
push
sbb
int3
mov
ljmp
lcall
mov
rcll
into
imul
mov
nop
jmp
push
orl
in
int3
jb
scas
cmp
mov
lods
cmp
add
and
xor
fwait
mov
inc
movsb
cmp
test
push
cli
mov
mov
jmp
orb
add
xchg
or
xchg
mov
jle
nop
xchg
cmp
jge
jp
sub
add
imul
shll
sub
mov
mov
shrb
xchg
dec
cmp
test
and
pop
jae,pt
orl
scas
jnp
idivl
jbe
and
movsl
das
xor
adc
inc
stc
mov
add
sub
cltd
sbb
ret
arpl
xlat
shrb
or
nop
dec
out
roll
mov
push
stc
out
std
add
mov
pop
fmuls
test
adc
cwtl
push
mov
xchg
cli
inc
xchg
pop
xchg
addr16
sub
mov
aaa
cmp
jae
call
inc
lahf
inc
mov
xor
mov
in
sub
mov
jg
fadds
repz
dec
das
mov
fdivs
pop
sbb
dec
stc
xchg
shlb
loopne
fidivrl
lds
sahf
test
sub
aad
dec
popa
rcl
stos
push
mov
mov
ret
and
inc
shr
lcall
mov
into
push
pop
mov
enter
arpl
push
pop
fisubrl
rcrl
xchg
shlb
dec
test
adc
call
pop
pop
mov
in
jbe
push
and
cmpsb
imul
ds
push
mov
xlat
data16
sub
ret
xor
xchg
and
sbb
aam
or
data16
jp
mov
push
aas
or
loope
inc
xor
push
sbb
sub
dec
out
cmp
dec
jo
or
fistps
or
mov
fcmove
push
into
fisttps
xchg
xchg
xchg
outsl
fdivp
loop
push
cmp
add
testl
sahf
adc
test
push
push
test
lcall
jns
cmp
xor
dec
or
loopne
push
jne
dec
arpl
stc
xchg
arpl
jb
xchg
lock
dec
lret
pusha
cmp
dec
lods
fsubrs
test
sub
and
pop
lret
das
push
cmp
jecxz
xlat
movsb
jecxz
ds
mov
cmc
leave
mov
popa
iret
sub
imul
sub
add
jecxz
xor
lods
add
xchg
rolb
xchg
xor
fidivs
adc
or
popa
data16
jb
pusha
or
push
fiaddl
pop
jae,pt
jecxz
jb
dec
sbbl
adc
cld
xchg
repnz
faddl
shlb
add
xlat
xchg
jmp
add
daa
mov
and
mov
sbb
pop
jmp
mov
sti
push
aam
sahf
xor
dec
out
les
popl
scas
push
ds
les
scas
sbb
mov
adc
jmp
mov
mov
aaa
test
sbb
insb
notl
addl
push
shrb
cwtl
inc
dec
sti
int3
int3
jb
push
out
inc
fcomi
and
xchg
inc
adc
insl
mov
jg
loopne
or
shrl
mov
test
cmp
or
dec
fistpl
aaa
mov
jb
lret
icebp
fstpt
add
add
inc
insl
cmp
aad
loopne
push
xchg
or
mov
adc
adc
mov
sub
aaa
adc
xor
mov
lds
cwtl
mov
cmpsb
repnz
push
jo
jnp
lods
mov
aas
divl
fistps
lods
cmp
mov
dec
ret
imul
inc
frstor
jne
movsl
fwait
icebp
mov
in
aaa
out
orb
cmpsl
push
lcall
inc
pop
sbb
imul
jmp
lock
push
insl
pop
popa
and
add
scas
dec
add
fbstp
ret
cs
call
cmpb
xchg
and
and
jbe
sbb
outsl
aam
dec
pusha
popa
nop
dec
push
stos
fistpl
jno
push
lods
or
inc
testl
out
stos
pushf
arpl
frstor
pop
jmp
out
xor
add
fcmovnb
xor
jbe
push
xchg
bound
mov
lea
jmp
fnstenv
push
aas
cmp
cwtl
int
dec
push
cmp
inc
xchg
add
stos
mov
stos
call
shll
or
out
mov
fwait
or
add
sub
add
dec
jno
and
shrb
add
je
sbb
aas
push
std
sub
dec
lods
adc
loop
jb
sbb
loopne
and
addr16
das
and
xlat
ds
dec
jl
dec
mov
jl
xor
mov
xor
cmp
dec
add
cmp
fcoms
std
dec
dec
jbe
push
rorb
dec
popa
xchg
in
ja
fsubr
jp
insb
test
sbb
push
dec
add
mov
out
es
pusha
out
mov
push
sahf
dec
mov
pusha
mov
mov
push
xor
fdivrs
adc
rcrl
ficoms
fs
icebp
fsubrl
add
mov
sbb
sti
das
add
push
adc
add
in
cmp
xor
cmp
mov
xchg
mov
inc
mov
adc
push
ds
pop
pop
leave
mov
in
adc
movsl
pop
or
dec
or
imul
and
add
mov
cs
xchg
les
xchg
dec
lods
inc
call
sbb
das
mov
das
push
push
inc
cmp
cmpsl
or
andl
stos
sbb
mov
jmp
inc
adc
xchg
dec
sbb
push
int
xchg
xor
sarl
adc
sarb
divb
loope
outsb
jle
sub
int
sub
push
jmp
outsl
jg
or
std
push
incb
add
and
push
pop
jae
cmc
mov
mov
or
loope
cmp
and
push
mov
push
iret
repz
sbb
or
sub
adc
movsl
xor
mov
loopne
lcall
out
adc
out
push
insl
xchg
cmp
cmc
fbstp
sbb
adc
xchg
notb
fcomp
and
mov
loope
dec
outsl
int
mov
aaa
and
outsb
int3
out
mov
push
jp
jl
mov
sub
out
pop
pop
push
out
pop
push
lods
adc
pushf
arpl
nop
mov
push
mov
enter
data16
add
stos
pop
outsl
stos
cltd
out
ret
test
test
stc
rcll
cwtl
inc
lds
sbb
in
mov
aad
mov
rcll
xor
pop
mov
sub
sti
stc
pushf
fcoml
xor
lds
inc
xchg
jl
jl
and
leave
out
repz
filds
outsl
int3
fcomps
xor
inc
hlt
add
inc
inc
and
in
sbb
enter
mov
imul
cld
adc
pop
cmpsb
mov
jg
add
cmp
out
push
and
add
jge
dec
popa
xorl
jl
jg
sub
es
xor
adc
sarb
mov
mov
fstpt
sti
lds
jg
and
or
or
pop
mov
clc
enter
ret
and
add
push
fwait
pop
and
sub
fidivrl
pop
in
mov
lods
orb
jle
cmp
jecxz
jle
mov
dec
xchg
cmpl
jge
lahf
and
xchg
pop
imul
aas
push
scas
lods
jmp
call
aas
xchg
in
cli
xchg
cmpsl
xchg
jmp
mov
or
cmp
dec
movsl
test
pop
or
or
xchg
xor
popl
lock
cmc
movsb
loope
out
inc
push
and
pop
gs
or
mov
push
adc
xor
test
iret
xchg
lock
sub
loop
fistl
cmp
push
loopne
inc
mov
les
aad
cmp
cmpsb
cld
rorb
inc
pop
jg
mov
mov
in
push
cli
rcll
outsl
push
cmp
ret
mov
aad
popf
dec
aas
pop
insl
inc
mov
sbb
test
lock
cmpsl
xchg
imull
mov
sahf
rcrl
lcall
sbb
dec
xor
push
jl
inc
mov
or
push
rcr
int
pop
icebp
aad
fsubl
pusha
lods
cmpsl
mov
xchg
mov
scas
pop
inc
movsb
inc
bound
idivb
call
jae
es
out
leave
negl
lods
cmp
push
test
popf
cmp
sub
push
jnp
inc
xchg
mov
enter
pop
mov
add
icebp
clc
push
adc
imul
repnz
push
outsl
ret
je
add
shlb
data16
enter
dec
jns
rorl
xor
xchg
scas
mov
pusha
incb
int3
sub
push
mov
mov
imul
sbb
in
fdivrs
cli
cmp
call
insl
insl
fimull
jns
push
sbb
jecxz
push
inc
in
and
ja
lock
lcall
mov
hlt
dec
lea
enter
mov
stos
pop
int3
loop
movl
outsl
mov
in
daa
mov
repnz
shlb
mov
mov
push
xor
aad
movsb
fisttpll
lods
hlt
push
loope
lret
in
insl
std
daa
mov
jnp
pushl
imul
push
inc
xchg
or
mov
jge
inc
push
inc
inc
mov
or
or
add
pop
mov
push
push
shr
cmp
aaa
xorb
xchg
pop
idivl
cmc
mov
imulb
mov
psrad
mov
jno
cmc
sarl
add
pop
xchg
popa
hlt
add
add
jmp
push
dec
cmovp
icebp
cmp
sahf
mov
movsb
popf
and
psubw
aaa
sbb
pushf
sub
rcr
movsb
std
jno
push
mov
fists
pushf
jmp
dec
cli
cmp
stos
cltd
cmpsb
sub
testb
sbb
lcall
insl
fnstcw
jmp
pop
dec
cmpsl
cmp
dec
fwait
pop
pop
enter
cmc
cld
loop
xchg
lret
scas
cmpsb
bound
jecxz
test
lcall
mov
mov
js
inc
out
out
out
je
idiv
enter
negb
insb
imul
imul
sub
add
pop
cmpsb
iret
xor
out
dec
and
mov
sub
mov
filds
lea
mov
movsb
movsb
les
sub
mov
repnz
jno
xor
pushf
inc
mov
stos
inc
dec
mov
cmp
cmc
inc
xchg
ret
push
jbe
xor
scas
or
cmp
std
shll
cmp
push
push
imul
into
mov
pop
xchg
xor
scas
xchg
cmp
jmp
aad
jle
sbb
idivl
outsb
jl
cmp
push
lea
into
dec
lahf
xchg
bound
and
pop
adc
mov
mov
xchg
sti
cmp
imulb
stc
or
shll
arpl
dec
jnp
xor
mov
es
imul
mov
mov
adcb
test
cmpsl
or
fcomps
leave
out
mov
lret
mov
sbb
adc
in
rclb
add
jge
in
filds
jae
inc
stos
xchg
cwtl
mov
nop
aaa
push
dec
sbb
add
pop
nop
jno
out
test
jb
jmp
popa
iret
faddl
pop
dec
ljmp
fstpt
aas
lahf
add
lods
in
cmc
call
adc
cmp
rcr
icebp
inc
cmpsb
addr16
jg
insl
mov
or
data16
adc
mov
popf
mov
sarb
ror
or
mov
cld
or
insb
pop
add
push
push
fmuls
test
or
xchg
or
lea
dec
fwait
jmp
lods
stc
xchg
test
popa
mov
pop
sub
inc
popa
cmp
adc
out
sbb
popf
mov
mov
cmc
sub
fisubrl
inc
push
or
outsb
pop
cltd
adc
sbb
leave
push
divb
push
and
out
je
push
mov
or
cmc
mov
dec
push
mov
sbb
cld
lcall
mov
fs
jo
sbb
clc
and
sub
movsb
xor
int3
shlb
push
mov
push
into
mov
nop
jp
mov
je
sbb
and
repnz
idivl
mov
int
les
jbe
orl
sti
outsb
stos
loopne
pop
pusha
hlt
sbb
sbb
jmp
cmp
ljmp
mov
fldt
cmpsb
ljmp
mov
bound
out
out
jne
mov
pop
cmp
mov
jp
iret
lahf
inc
xchg
mov
je
lretw
inc
aaa
lret
mov
jno
mov
shlb
sub
jle
sbb
ret
ljmp
les
ds
test
jo
call
out
and
lret
lds
movsl
in
pushf
mov
pop
cwtl
cmp
fmul
inc
jnp
cmp
iret
inc
cld
lea
lret
sbb
push
xor
xor
test
insb
pop
orb
cmpsb
out
loopne
push
pop
and
cli
dec
out
adc
loopne
mov
imul
lea
jmp
cmp
sbb
data16
es
cmpsl
int3
aaa
jne
mov
jno
jmp
and
mov
movsb
cli
lret
add
das
sub
cmp
in
jnp
lods
cmp
inc
sub
jns
jmp
movsl
int
loop
xchg
or
sub
nop
and
pusha
jae
xor
inc
fistps
xor
in
adc
sbb
insb
dec
clc
fsub
dec
xchg
xor
int
xchg
pop
hlt
mov
mov
out
ds
mov
cli
sbb
xor
imul
fcomip
fwait
jg
std
inc
or
mov
mov
mov
xchg
fnstenv
aam
filds
push
andl
mov
int
fiaddl
jle
mov
lea
jne
mov
dec
pop
or
dec
out
xor
push
ss
lret
fwait
jns
and
imul
cwtl
je
pop
sbb
push
fwait
pop
dec
das
cmp
lret
push
outsl
push
mov
ss
in
fcompl
mov
mov
mov
in
daa
pop
and
cmp
pop
nop
push
jne
xor
cmp
aad
loopne
loope
sub
jle
repnz
ljmp
fwait
iret
and
push
mov
xchg
cmp
pop
and
clc
sti
leave
enter
scas
adc
sub
call
nop
sbb
jp
jbe
xor
add
jle
adc
fdivr
stos
lock
inc
popf
adcl
notb
mov
mov
in
jg
adc
push
movsl
pop
repnz
mov
ficomps
cmp
ja
pop
bound
lds
or
jge
cli
lret
mov
mov
js
jge
popa
mov
pop
fsubp
dec
ja
xchg
xchg
add
insl
pop
push
xor
int3
mov
out
jge
jecxz
push
dec
and
dec
insb
mov
push
pop
out
push
shr
jmp
or
not
mov
xor
jne
mov
in
push
xor
xchg
mov
mov
dec
stos
mov
fcoms
shrl
shll
dec
cvtpi2ps
loop
test
and
sub
adc
or
mov
inc
adc
imul
les
xchg
das
jg
movb
add
cmp
cltd
out
out
stos
or
fldl
imul
push
adc
shll
mov
int
jns
mov
mov
lds
addr16
mov
pop
iret
popf
xor
xchg
push
xchg
cwtl
les
cmpsl
fisttps
in
inc
aaa
mov
in
lret
out
js
ds
test
xor
sbb
jo
div
push
sub
pop
push
sbb
pop
mov
pop
int3
cmp
or
fucomi
imull
testl
fnop
mov
mov
pop
and
jnp
jmp
xchg
cmpsl
add
adc
fucomip
or
insl
sbb
cs
xor
test
and
sbbb
clc
outsb
arpl
jb
repnz
jge
jle
push
es
adc
mov
xor
lods
mov
mov
jecxz
in
jp
push
cmp
mov
cmp
pop
je
stos
xor
mov
out
xor
mov
outsl
add
popa
mov
hlt
mov
andl
mov
dec
inc
sub
xchg
lret
pop
dec
mov
pop
es
repz
adc
jp
test
lods
imul
dec
lds
mov
xchg
jmp
add
jp
adc
test
iret
movsl
hlt
mov
mov
aas
dec
in
add
imull
xor
adc
test
fstpt
xor
ja
jo
clc
rolb
mov
inc
pop
in
xchg
aaa
or
pop
scas
aas
cwtl
or
hlt
adc
je
arpl
fucom
ds
mov
xchg
pop
and
mov
push
jecxz
inc
jge
outsl
lods
jp
inc
stos
test
aam
xchg
dec
lods
fimuls
pop
loop
hlt
pop
mov
or
jle
sbb
and
add
in
push
pop
cmp
out
imul
lahf
mov
or
sub
dec
sahf
push
inc
loope
mov
ljmp
mov
je
ret
cmp
sbb
dec
xchg
push
in
xchg
outsb
test
cmp
cmp
or
addr16
sbb
inc
xchg
inc
in
leave
sub
jmp
xchg
mov
inc
lea
pop
push
xchg
cmpsl
std
push
stos
iret
mov
mov
jb
xchg
sbb
and
pop
shll
pop
or
push
adc
ds
outsb
mov
cwtl
xchg
jg
cmpb
fimuls
lods
lcall
and
ret
cld
js
out
xchg
mov
mov
clc
aam
aaa
sub
xor
icebp
outsb
iret
xchg
aaa
insb
push
lcall
cmpsb
ss
sbb
sti
cs
fmuls
adc
inc
sbb
daa
sahf
std
push
jg
jae
xchg
adc
sbb
push
or
int
and
sub
inc
mov
clc
cmp
push
push
fsubrl
mov
xchg
in
pop
sbb
sbb
lret
dec
call
dec
scas
pop
xor
jle
mov
lods
mov
mov
popa
mov
inc
sahf
je
xchg
das
in
rcrl
jg
fdivrp
ror
mov
dec
pop
lods
cld
subb
jb
cmpsb
adc
fdivrp
push
cmp
xor
ss
cld
push
adc
inc
jge
bound
sahf
loop
xor
lds
inc
rcrl
lea
rclb
xchg
pop
test
es
pop
mov
call
sti
inc
sub
jns
xchg
or
ljmp
mov
mov
push
shr
push
je
mov
loopne
push
shlb
jp
rcll
bound
popf
bound
mov
divl
lods
addl
mov
divl
das
inc
xchg
jl
inc
mov
stos
or
in
dec
addr16
addr16
xor
mov
jne
and
rorb
addr16
lret
scas
mov
mov
dec
stos
inc
xorb
adc
push
pop
fwait
insb
loope
mov
pushl
pop
in
lcall
gs
and
push
out
pushf
in
mov
push
imul
sbb
repz
hlt
arpl
sbb
aad
lcall
pushf
out
sub
adc
mov
in
adc
mov
ss
dec
inc
cs
lcall
or
and
add
iret
leave
push
jmp
cwtl
xchg
testb
aam
push
add
imul
arpl
pusha
pushf
push
and
inc
adc
xchg
fcmove
out
repz
inc
mov
mov
ds
stos
dec
mov
negl
loop
mov
hlt
mov
insl
dec
mov
jb
xchg
fcomps
xchg
adc
das
sahf
push
cli
cld
dec
data16
out
dec
adc
jae
fistpll
mov
out
mov
pop
pop
add
scas
loope
rol
mov
loope
ficoms
pop
jbe
daa
jl
fstps
fisubs
add
and
sub
push
xlat
repnz
jg
in
mov
xchg
fsts
cwtl
sub
xor
sbb
lea
pusha
cmp
dec
xor
imul
ret
push
shlb
mov
test
mov
and
cmp
subl
pushf
inc
sbb
push
adc
int3
dec
sub
xor
pop
iret
cltd
mov
inc
shrl
pop
pop
pop
icebp
xchg
adc
mov
call
mov
xchg
cmpsl
ret
dec
jmp
hlt
xchg
popa
adc
lods
scas
enter
mov
dec
dec
add
ret
mov
je
lods
bound
jne
dec
repz
jns
inc
dec
cmp
pushf
adc
mov
jle
lods
std
dec
mov
or
gs
add
sub
xchg
negb
dec
out
fsubrl
andl
xor
and
or
or
out
es
jg
arpl
popf
pop
imul
push
add
pop
adc
cmpb
xchg
and
sbb
or
subl
inc
les
cmp
pop
mov
aaa
jbe
lods
ja
inc
arpl
jg
ljmp
xchg
xor
mov
lahf
mov
cli
ljmp
cmpsb
inc
xlat
xor
mov
inc
ljmp
jne,pt
push
push
push
mov
or
jne
pop
pop
mov
sbb
mov
ja
cmp
xchg
daa
cmp
lea
xchg
lret
shrl
cmp
les
sub
stos
xchg
stos
sub
mov
fmuls
out
pop
mov
cwtl
jmp
sbb
popf
cmpsb
push
popa
pushf
sub
and
xchg
sub
xchg
mov
ret
and
jnp
inc
and
hlt
or
int3
in
stos
imul
repnz
dec
insl
pop
push
sbb
cwtl
popa
cltd
sbbb
pop
fdivrs
icebp
fstl
pop
mov
pop
pop
lret
mulb
call
rclb
jnp
lds
outsl
push
out
sub
cmc
or
push
mov
push
xchg
xchg
xchg
dec
inc
and
lods
dec
or
jo
push
push
lock
jge
or
xor
xlat
adc
pop
jmp
jg
dec
dec
adc
push
nop
pop
dec
testl
aad
xchg
add
mov
test
mov
lret
mov
adc
inc
fimull
jnp
inc
cmp
cmp
clc
xchg
xor
mov
pop
jl
roll
imul
rcrl
xchg
adc
sbb
aaa
jmp
add
out
xlat
imul
jae
fabs
sbb
aaa
push
fucompp
xchg
push
insl
push
and
lock
fistl
or
enter
jl
imul
pop
test
inc
inc
insl
sub
adc
cwtl
rclb
insl
push
cs
and
inc
popa
mov
mov
sub
rcrl
lret
lock
mov
movsl
in
cmp
jnp
ja
subl
clc
js
jecxz
xor
aas
or
pusha
inc
add
jns
pop
aaa
xor
enter
jo
dec
xchg
lea
in
mov
mov
sbb
mov
mulb
and
cmp
inc
sar
dec
jp
inc
xor
xchg
lods
lret
inc
fstps
lods
adc
adc
out
into
cli
jg
subl
xor
pop
notl
mov
sbb
je
add
lret
fstpl
data16
pop
xchg
jl
xchg
rol
fs
sti
cli
cltd
mov
cltd
adcb
lahf
adc
jae,pn
xchg
and
push
xchg
das
and
cltd
inc
mov
insl
dec
dec
jecxz
sub
nop
xor
or
test
dec
sbb
xchg
cmpsb
fstpl
mulb
lret
push
enter
lcall
test
ljmp
xor
dec
lahf
push
sub
into
pop
inc
cmp
mov
mov
jmp
pop
or
dec
xchg
jecxz
cmpsb
imul
xchg
int3
push
movsb
xor
in
data16
inc
and
jb
lods
repnz
jmp
xor
pop
int3
shll
mov
or
aam
rcll
fwait
aam
jl
pop
xor
adc
enter
and
hlt
and
xchg
test
jno
add
addr16
xlat
aaa
push
loopne
movb
movsl
das
xchg
cmp
popf
ds
inc
mov
adcb
in
loop
and
in
adc
jl
cmp
fwait
pop
sub
xchg
jns
add
test
xchg
cld
mov
clc
jmp
push
jmp
xchg
mov
lahf
mov
cmpsb
test
xor
mov
fildll
test
mov
in
pop
jl
cltd
pop
adc
jp
dec
jne
popa
mov
mov
js
int3
test
jl
add
xchg
insb
out
inc
pop
or
push
js
stos
std
push
es
or
mov
stos
xorl
lods
mov
fwait
test
je
cmp
fcomps
push
adc
jge
scas
push
js
sub
xlat
inc
mov
jecxz
sub
mov
movsb
repz
xchg
adc
push
mov
insb
cld
adc
movsl
ret
sbb
loop
lret
xchg
test
mov
out
pop
sti
xchg
xchg
sub
outsl
loopne
pop
cmpl
ja
test
or
push
ret
stos
mov
pop
or
mov
cmp
or
push
pop
jg
jg
sbb
in
sbb
lret
push
mov
sbb
divl
aas
adc
mov
cld
stos
xchg
mov
fisubrs
in
push
sti
pop
cmp
pop
shlb
iret
push
adc
popf
test
jae
shlb
xchg
mov
jle
mov
mov
jo
inc
fmuls
scas
xchg
ljmp
mov
scas
mov
pop
addr16
sub
inc
divb
dec
imul
ja
mov
xchg
xchg
mov
mov
mov
sarl
or
push
mov
xchg
fwait
sbb
insb
xor
stos
stc
jmp
fwait
les
adc
dec
cltd
clc
and
aaa
std
lcall
xlat
jo
pop
ret
jl
into
dec
out
add
rorl
popf
call
cmp
loope
xbegin
push
fiadds
cmp
das
cmpsb
lret
jne
sub
data16
add
lret
pop
dec
or
sbb
pop
mov
or
loopne
insb
mov
dec
je
pop
fs
dec
xchg
jbe
pusha
adc
data16
icebp
push
out
or
mov
frstor
or
jmp
pop
imul
stos
outsl
lcall
movsb
test
popf
sbb
sbb
dec
lods
cmp
jns
adc
add
stos
pop
sub
mov
test
jns
and
sub
cmpsl
cld
neg
sbb
dec
pop
not
jmp
stos
out
mov
push
push
jmp
push
add
sbb
mov
jle
mov
insb
jl
fwait
cmp
loope
daa
or
add
lods
mov
push
sub
pop
fwait
insb
adc
lret
test
jge
mov
insl
mov
daa
xor
in
push
shrl
pusha
ret
shrl
push
mov
loop
dec
xchg
ror
mov
xor
push
pop
enter
mov
movsb
notb
aaa
shrl
lea
inc
loopne
mov
cmp
test
and
clc
das
sub
int3
mov
enter
dec
int3
jnp
jnp
test
ds
or
jp
sub
fistpll
inc
mov
das
lret
adc
dec
and
xor
fildl
stc
clc
aad
lea
xor
in
pushf
lods
je
mov
pop
les
or
xor
sbb
rol
lea
sub
cmpsb
jo
jne
lock
stc
sub
dec
inc
ss
idiv
pushf
mov
xchg
femms
into
mov
popa
ljmp
lea
cmpsl
mov
int3
int3
sbb
push
xlat
mov
je
scas
dec
jno
std
mov
outsl
lds
xor
mov
sahf
outsb
jb
mov
mov
jge
mov
stc
aad
in
sti
ret
sbb
cmc
mov
rolb
bound
dec
xchg
add
cmpsl
mov
icebp
pushf
jb
inc
pop
mov
adc
pushf
dec
inc
lahf
out
inc
decl
bound
frstor
mov
cli
call
inc
cmp
popf
adc
or
sbb
mov
jecxz
lahf
rorb
repz
iret
adc
jl
xlat
mov
cli
or
jge
xor
fwait
insl
rcr
add
shl
sti
push
push
and
mov
mov
cmp
std
mov
push
ret
inc
cwtl
xchg
adc
in
push
and
xchg
int
cmc
lret
push
add
inc
testb
and
sahf
add
add
int3
adc
push
cmp
adcl
xchg
add
test
lahf
ljmp
faddl
dec
aaa
mov
add
jno
sbb
mov
addr16
les
cmpl
add
test
cmpl
lahf
xor
xorb
daa
sub
pop
sbb
sarb
scas
mov
xchg
push
addr16
iret
shlb
mov
push
and
add
xchg
enter
inc
je
pop
mov
xchg
or
mov
dec
loopne
cmp
mov
inc
test
cli
mulb
adc
inc
pop
mov
or
clc
add
xchg
sub
outsb
cli
mov
negb
loop
dec
lock
lea
adc
mov
sbb
jns
xchg
rorl
add
call
in
cmp
cmp
xchg
dec
mov
inc
pop
stc
bnd
mov
push
push
pop
ss
dec
push
ret
fidivl
shll
pop
mov
add
mov
aad
pop
cmp
inc
lret
adc
push
push
cwtl
push
sti
in
gs
sbb
aas
cmp
rcrb
xorb
push
pop
inc
mov
fs
sahf
loop
xor
mov
jmp
jecxz
negb
pop
ficompl
inc
push
lock
les
fcomps
mov
dec
push
xchg
cltd
clc
xor
sbb
mov
adc
mov
sbb
jae
cli
mov
popa
mov
scas
pop
add
insb
pushf
pop
ficompl
sub
incl
xchg
cltd
or
ds
daa
in
inc
and
cmp
push
mov
cmpsl
xlat
orb
mov
inc
icebp
movsl
loopne
push
add
cmp
mov
repz
xchg
loopne
jne
outsb
pop
push
pusha
cmp
adc
cmc
cmc
push
outsl
mov
adc
sbb
lret
add
mov
adc
sbb
fndisi(8087
ljmp
ja
sbb
adc
sbb
mov
add
pop
xor
outsb
jb
dec
inc
pop
xor
sub
mov
jnp
pop
shr
or
cmp
xchg
add
insl
jbe
leave
int3
mov
pusha
aad
js
mov
jno
or
data16
shl
mov
jbe
or
cli
mov
push
jecxz
outsb
xchg
sti
repnz
ljmp
outsb
outsb
xchg
mov
jb
loop
push
mov
aas
jp
lret
dec
stos
cmp
ja
cmpb
xor
mov
aaa
push
out
jl
movsl
mov
jae
push
adc
out
bound
cmpsl
mov
lcall
cltd
and
in
mov
lods
shlb
mov
jg
stos
push
int3
repnz
mov
ja
xchg
dec
ror
clc
adc
dec
sub
pop
imulb
dec
dec
xor
rcrb
xchg
lahf
mov
pop
jmp
popa
shll
mov
cmp
rep
ror
shrl
xor
pop
jbe
std
out
mov
sub
mov
dec
scas
push
dec
cmp
insl
sub
ss
xor
push
push
fs
pop
xor
lahf
dec
mov
fdivrl
hlt
mov
jno
sbb
ret
push
gs
cmp
push
loop
lock
iret
mov
fmuls
push
push
cmpsl
mov
sub
pop
rol
or
cmp
aam
and
jmp
jno
lahf
es
cmpsb
mov
fs
and
repnz
cmp
into
mov
sbb
dec
fiadds
sbb
das
popf
fsubrl
push
push
sub
rdseed
xor
xchg
cmc
repz
mov
test
dec
xchg
je
cmpsl
test
and
inc
je
sti
sti
and
sbb
jl
xchg
mov
jb
or
inc
mov
sbb
cmp
sub
mov
popf
jae
mov
outsb
jmp
lods
hlt
cli
daa
pop
movsl
int3
inc
xchg
das
push
lds
out
pop
popa
jo
lcall
xchg
cmp
imul
mov
add
jp
fwait
ss
and
into
cmp
mov
add
loope
notl
clc
call
dec
cmpsb
sub
aas
lds
inc
mov
push
insl
int
into
scas
loope
je
cmp
xlat
dec
pop
bound
adc
jns
bound
add
mov
imul
mov
jp
pop
push
dec
pop
and
sbb
shll
test
adc
mov
jle
cmp
mov
loop
xor
in
or
ljmp
adc
or
cmpsw
cmp
not
adc
inc
hlt
stc
mov
push
or
or
xor
test
pop
js
lret
sbb
cmc
test
cmpsl
ja
or
xor
loope
enter
push
fnstenv
mov
ja
dec
es
int
xchg
aas
mov
lods
sbb
bound
clc
add
lock
push
push
sbb
outsl
lods
subl
sub
jmp
lock
rcrb
out
imul
mov
sarl
jmp
cmpsb
inc
sbb
jb
ljmp
inc
xor
or
xchg
mov
mov
lcall
pop
daa
pop
xlat
mov
xor
jb
outsb
and
dec
inc
addl
sub
mov
out
jp
rcrl
push
xor
subb
in
ljmp
jbe
mov
xor
jmp
cmp
lahf
jbe
xor
mov
fildl
nop
cs
xchg
mov
lcall
jb
out
pushf
aaa
dec
js
fiadds
ss
int
fdivs
push
mov
mov
mov
mov
ja
inc
pop
adc
inc
add
ficomps
push
repnz
jmp
adc
pusha
add
jae
stos
negb
jnp
xor
mov
aaa
ss
pushf
jmp
arpl
cmp
fdivrl
xchg
dec
adc
jp
xor
inc
mov
jle
or
inc
mov
in
cwtl
jmp
xchg
mov
pop
aas
shrb
dec
push
inc
jbe
or
arpl
jecxz
and
outsl
orl
stc
jne
insb
inc
jae
fnstsw
mov
popa
out
mov
lods
fimull
rorl
inc
xchg
sub
push
in
sub
push
lcall
inc
cmp
enter
xor
outsb
arpl
lcall
or
adc
jo
jae
xlat
lret
mov
cmp
xchg
pusha
push
imul
or
rclb
out
or
sbb
movsl
int
lods
jmp
jo
cli
das
repnz
lock
inc
push
jecxz
movsb
out
retw
lcall
mov
cmc
mov
sar
and
js
cs
sbb
pop
test
mov
test
loopne
test
test
or
jbe
pop
inc
sub
pop
imul
ds
nop
sub
mov
mov
xchg
nop
push
lahf
push
cli
lcall
and
shlb
or
cltd
mov
jge
cltd
xor
sub
cmp
mov
shr
jb
adc
int
mov
popf
and
pop
jmp
cmpsb
xorl
cli
push
mov
imul
sbb
cmp
cwtl
pop
lea
aaa
lds
jge
sub
leave
xchg
je
jmp
pop
and
cmp
aad
fldt
and
clc
xor
add
adc
ret
dec
std
lcall
lock
loope
push
sahf
shrl
xlat
adc
jns
xor
mov
ret
jns
and
adc
sbb
sub
xor
pop
fidivrs
jb
jle
test
lds
ja
imul
lahf
xor
inc
lea
filds
test
inc
or
ret
add
pop
sub
jbe
je
into
outsb
or
lock
xlat
daa
push
loop
ljmp
mov
adc
pop
jmp
or
mov
sbb
push
mov
cmpl
jp
mov
and
lods
repnz
xchg
fdivr
xor
dec
dec
jns
sub
fcomps
int
movsl
imulb
pop
repnz
insl
pop
insb
pop
xchg
out
jb
pop
or
popf
in
dec
cmpsl
pusha
fstps
fstl
test
pop
lahf
mov
fs
inc
mov
mov
dec
adc
icebp
ret
lock
inc
dec
xor
fistpll
pop
or
mov
aas
mov
les
jns
adc
lret
dec
adc
jno
out
xchg
push
enter
mov
out
jno
out
mov
jecxz
aas
jmp
jg
jbe
in
push
sbb
dec
sti
mov
add
subb
pop
lds
pushf
das
push
lods
into
jae
mov
sbb
out
push
pop
hlt
outsl
or
lock
lock
fldcw
pop
jb
push
subb
mov
jmp
mov
jno
aas
ljmp
xchg
push
and
jmp
mov
aas
lret
outsl
xor
push
jbe
push
aas
imul
and
adc
sbb
js
jno
bound
fwait
xchg
jle
dec
or
es
int3
ret
hlt
gs
dec
test
outsl
ja
out
and
test
mov
data16
cmp
in
xchg
sbb
fwait
cld
incl
push
mov
aas
fbld
mov
in
lods
cmp
mov
xor
ror
push
cmp
nop
div
lcall
ret
arpl
test
decb
jns
pop
jecxz
mov
repnz
pop
jmp
add
les
pop
lock
inc
fistpll
imul
xchg
add
jp
bound
arpl
dec
and
les
inc
pop
or
jp
aad
jp
fistps
xor
sarb
rclb
pushf
jmp
int3
mov
mull
ds
xchg
lods
insl
push
or
mov
cli
pop
sarl
xor
mov
mov
cmp
cmc
jns
fnstcw
rclb
repnz
jns
adc
movsb
dec
mov
mov
mov
lea
jo
aam
into
add
push
leave
cmp
imul
inc
mov
jl
mov
mov
or
xlat
jmp
inc
sbb
stos
sub
cmp
push
out
into
jbe
sbb
mov
fistpl
je
or
push
ss
sub
cmc
adcb
ret
adc
test
stc
adc
fsubrs
shrl
gs
pop
shll
roll
ret
jge
add
jbe
mov
push
or
scas
push
repz
cs
fsts
mov
mov
ds
mov
sub
lock
xchg
lea
push
fimuls
icebp
fdivp
mov
aas
cmp
dec
test
jle
pushf
mov
add
or
sbb
jbe
flds
cmc
js
aam
jecxz
ss
jmp
clc
jmp
dec
andl
imul
sub
cli
jmp
daa
cld
mov
inc
mov
lret
sub
adc
sti
cmp
fmulp
sarl
jbe
ret
mov
push
mov
iret
mov
sub
bound
lock
dec
or
movsb
popf
cmovl
repz
sbb
pushl
push
bound
inc
and
loop
and
lcall
mov
push
ja
das
pop
mov
sub
div
jmp
mov
arpl
mov
sbb
lods
aam
rcr
fsubp
dec
pop
dec
and
pop
xchg
jecxz
sub
add
adc
jle
mov
and
loope
add
test
jne
loope
stos
mov
push
je
xor
pop
xchg
insl
cwtl
shlb
fwait
les
pop
push
jns
mov
fidivl
xchg
ficompl
cmpsb
cmp
cmp
cs
in
orl
add
cmp
and
adc
adcb
mov
movsl
lret
dec
cmp
add
out
call
sbb
test
mov
dec
notl
or
cltd
xor
pop
pop
loop
pop
movsl
ja
and
mov
jnp
loope
testl
or
es
inc
lret
mov
cld
shlb
push
push
es
sub
adc
jo
out
repz
add
pop
dec
and
mov
mov
shl
xchg
scas
in
ja
sti
push
std
pop
enter
or
shll
xchg
fs
inc
adc
add
add
inc
inc
fimuls
adc
pop
pop
imul
mov
sbb
test
mov
sub
sbb
repz
cmp
push
inc
xchg
jmp
xchg
mov
outsb
fistl
data16
sbb
mov
sti
cwtl
push
in
fwait
mov
das
dec
adc
js
mov
out
mov
sub
inc
ret
pop
inc
or
sahf
mov
pop
in
call
fwait
or
jl
testl
mov
popf
pop
leave
test
cmp
push
iret
xor
mov
clc
cmp
test
sub
clc
ror
cmpsl
fcomps
pusha
fnsave
call
inc
cld
jb
loopne
xchg
mov
dec
leave
pusha
jmp
mov
std
pop
rcrl
sbb
test
lods
stos
test
pop
aad
repnz
sub
sbb
aaa
sbb
call
scas
insb
mov
xorb
adc
inc
ret
pop
sub
hlt
inc
pop
mov
and
or
fidivl
mov
stos
lds
mov
out
fisubrs
add
mov
iret
xor
inc
xchg
mov
add
das
add
sub
mov
sbb
or
mov
pop
cmpsl
out
dec
and
fstl
dec
test
mov
insl
jno
pop
mov
stos
xchg
push
mov
das
mov
fwait
ds
out
imul
ret
inc
sub
mov
adc
jbe
sbb
icebp
jnp
jns
incb
sub
pop
mov
add
cmpsl
pop
negl
sub
inc
push
daa
into
cmpsl
xor
bound
sub
fcomp
inc
ret
xchg
dec
jae
sbb
mov
dec
xchg
int3
inc
or
xor
add
pop
aaa
mov
imul
fisttpl
loopne
add
push
inc
cmp
xchg
scas
addr16
bound
add
mov
mov
pop
pushf
les
and
pop
sti
xchg
icebp
inc
mov
xchg
push
shll
or
outsb
add
stos
fdivl
push
les
lock
pop
jnp
pushf
push
test
xlat
lcall
jnp
sar
push
or
pop
insl
jns
outsl
fnsave
xchg
hlt
std
in
sub
leave
fdivl
je
mov
cmp
add
cmp
and
clc
push
dec
sbb
mov
pop
shr
dec
hlt
mov
lahf
or
pop
push
fdivrs
cmp
jecxz
mov
jmp
pop
loop
cwtl
fcoms
mov
mov
ret
jp
fimull
insb
mov
jns
arpl
add
inc
fsubl
jno
movsl
push
subps
pushl
and
je
imul
loope
jb
hlt
aaa
fs
push
pop
fstpt
cmpsl
xchg
add
inc
cltd
aam
jg
dec
cmp
or
cld
push
fbld
and
pusha
add
aad
lret
xor
add
mov
or
aam
mov
shl
pop
int
aas
push
js
shrb
add
imul
rclb
mov
clc
inc
dec
je
scas
push
sbb
out
inc
fwait
or
ss
shr
ja
adc
lret
xlat
jg
call
rorl
push
mov
and
imul
cli
ja
cld
push
mov
out
les
dec
push
rcrl
es
stos
or
cmpsl
sub
in
out
adc
into
js
jno
sbb
test
adc
or
sbb
inc
push
adc
dec
sbb
hlt
xor
jb
call
mov
rol
add
jmp
jno
cwtl
xchg
scas
sarl
adc
fcmovbe
pop
jecxz,pn
mov
stc
xchg
mov
add
xchg
adc
pop
imul
cmpsb
jg
loop
jbe
cld
clc
or
or
xlat
daa
dec
scas
pusha
mov
and
mov
sbb
inc
aad
repnz
jl
xchg
cmp
pop
outsb
or
mov
aam
jmp
xor
inc
sti
enter
in
add
cmp
test
aad
int3
pop
insl
out
jnp
push
inc
aad
mov
cmp
xchg
pusha
add
pop
dec
movsb
icebp
cmp
insl
popf
dec
hlt
cltd
jbe
adc
loope
push
rcll
push
repz
mov
pop
fdivs
cmp
sub
in
xchg
andb
rol
cmpsl
insb
fcomps
cld
les
pop
aas
sub
stc
int3
pop
outsb
or
mov
and
popf
mov
ficompl
ficoms
mov
pop
cmpsb
adc
jae
jge
mov
sub
shlb
js
sbbb
hlt
xor
mov
adc
add
pop
dec
adc
cmp
inc
sahf
popa
pop
add
pop
push
cld
fsubrl
dec
mov
inc
std
movsl
jns
xchg
pop
pop
nop
xchg
lcall
mov
imul
sbb
into
lea
xor
adc
pop
adc
mov
xor
outsl
sub
cmp
add
add
xchg
ret
inc
arpl
inc
lea
out
ljmp
aad
rep
mov
cwtl
inc
xor
in
dec
pop
add
mov
stc
lret
enter
sbb
loopne
mov
and
lret
mov
in
dec
daa
jb
mov
add
arpl
loop
lods
popa
aad
xchg
test
or
push
mov
jns
cs
jae
jmp
dec
adc
mov
dec
cltd
dec
fmuls
sahf
add
lret
mov
les
ds
rclb
push
insb
sbb
push
mov
xchg
jg
sub
sub
dec
in
repz
sbb
arpl
leave
xor
and
lret
and
ja
pop
pop
and
lods
sbb
xor
inc
test
dec
inc
rcll
jge
cld
jmp
mov
loop
mov
ja
add
dec
push
mov
fistpl
pop
mov
push
and
lret
mov
movsb
sbb
es
test
outsl
xchg
or
mov
push
insl
or
add
cmpsb
inc
jns
or
xchg
sub
inc
mov
sahf
les
ss
push
jo
push
cmpsl
pop
or
lret
mull
mov
mov
orb
jbe
xchg
mov
loop
jno
mov
addl
inc
jns
pop
hlt
jmp
mov
sub
pop
inc
cmp
xor
aaa
repz
das
outsb
mov
stc
or
scas
fwait
dec
or
pop
push
or
adc
stos
lret
mov
inc
mov
les
or
sbb
pop
lret
inc
das
adc
add
cs
jmp
xchg
rcrb
xchg
imul
or
fs
outsl
mov
andb
lods
adc
sub
pop
push
cmovo
sub
fsubrp
xor
xor
js
xlat
test
mov
inc
inc
jecxz
and
mov
or
xchg
in
stos
lock
sahf
ljmp
push
cli
mov
mov
add
inc
jl
loope
and
outsl
testl
cwtl
popf
popa
cmp
lahf
addr16
sbb
lods
xchg
pop
mov
pop
xor
pop
mov
jno
jle
xchg
lret
fcoms
popf
push
repnz
cmp
sub
pusha
imull
push
push
jbe
mov
imul
cmp
addr16
inc
or
pop
mov
dec
xlat
adc
popf
jne
out
pop
outsb
push
loope
lret
mov
xchg
push
ljmp
adc
jo
shl
stc
or
divb
add
or
mov
inc
rcrl
in
jns
loop
testb
mov
test
fnsave
call
lods
lea
cmp
adc
fistps
fiaddl
xchg
jo
js
xor
pop
or
and
cmc
js
push
jl
dec
inc
fisubl
push
fnsave
daa
test
fdivrs
xor
sahf
test
jle
jae
daa
sub
adc
std
pop
and
cmpsl
push
fwait
cmpsb
push
cmp
cli
mov
repnz
push
lods
lds
clc
push
jne
aaa
mov
jb
mov
and
stc
or
adc
movsl
push
cmp
xor
push
and
xor
test
jbe
or
fmuls
loop
imulb
ss
in
sub
adc
cmp
mov
or
pop
and
and
mov
sarb
push
ds
dec
rol
dec
stos
mov
pop
outsl
popa
ss
sub
fldl2t
cld
adc
xchg
or
lds
push
xor
add
dec
shll
mov
push
push
cmp
into
shrb
pop
addr16
sarb
push
sbb
push
enter
push
mov
rorl
stc
xchg
ret
cmpl
lcall
hlt
std
xor
arpl
push
mov
shrl
mov
adc
inc
js
cmp
js
inc
out
mov
mov
fdivrs
pop
jb
pop
icebp
test
and
cmp
stos
out
mov
jecxz
xor
aam
loopne
imul
cld
add
ror
test
stc
xchg
and
ret
mov
fwait
add
lds
add
adc
les
call
test
or
xchg
dec
movsb
in
mov
jl
inc
or
gs
sbb
mov
adc
outsl
pop
pop
negb
loope
loop
lods
sub
push
pmaxsw
or
enter
out
add
cmp
aas
pop
int
lds
xchg
out
sub
adc
sbb
imul
xchg
out
mov
sub
lret
xor
lds
sbb
push
cmp
xchg
outsb
sub
sbb
cmp
movsl
inc
addl
gs
dec
lcall
push
mov
aas
clc
and
rorb
mulb
es
andb
or
cmc
rcrl
imul
pop
fwait
add
popa
in
stos
aad
push
sub
push
in
movsl
in
or
xor
dec
jno
stc
mov
mov
sub
test
jae
movsl
mov
and
lret
sbb
insb
dec
mov
or
inc
std
gs
jmp
sbb
xor
sar
mov
shll
pop
sahf
adc
dec
xor
mov
cli
jmp
jno
push
cmpsl
dec
adcl
mov
mov
xchg
les
into
jo
sub
mov
and
imulb
inc
mov
shrl
fisttps
pop
cmpsb
arpl
dec
pop
xchg
fisubs
push
cmp
pop
cmp
adcb
loopne
sbb
out
mul
sbb
adc
rol
dec
push
inc
dec
sbbl
dec
aaa
jns
test
ljmp
push
xchg
mov
dec
sub
mov
jle
add
fdiv
xor
testl
aam
or
pop
jb
lahf
divb
add
mov
mov
inc
into
xchg
ds
call
ret
adc
mov
push
mov
out
xchg
sbb
iret
fdivrs
xor
xchg
sbb
movsl
cli
into
mov
push
addr16
cmp
push
mov
jbe
dec
sbb
pop
adc
adc
and
push
aam
mov
and
push
enter
les
popa
cmp
xchg
xchg
mov
leave
pop
lahf
pop
rcll
pusha
dec
ficoml
cmc
sub
arpl
in
rcrl
sub
jmp
scas
pop
inc
and
das
and
pop
lcall
jg
jno
mov
xor
xchg
mov
test
xchg
pop
imul
clc
out
dec
subl
mov
pop
mov
mov
jbe
data16
mov
cmpsl
les
sbb
jecxz
jb
dec
cltd
aaa
xchg
mov
mov
add
xor
mov
lea
sbb
push
mov
cmp
push
push
push
and
mov
fs
cld
mov
iret
daa
jae
ss
cwtl
cmp
jne
cli
xorl
mov
loope
mov
cld
fwait
sub
pop
std
int3
adc
xor
xchg
aad
cmp
gs
inc
in
dec
mov
or
popa
fdivrl
enter
and
push
adc
inc
outsb
das
lea
xchg
sub
out
add
imul
sub
in
sub
stos
fisubrs
test
popf
out
movl
lret
mov
in
xchg
mov
fs
lock
insl
jmp
cmp
stos
lcall
or
pop
rolb
sbb
inc
outsl
aad
lea
push
imul
cmpl
faddl
sbb
pop
aaa
rclb
dec
iret
test
jns
bound
xlat
push
push
xchg
push
data16
lcall
push
cmp
int3
xor
adc
test
loop
fiaddl
ret
fwait
ja
add
mov
data16
pusha
sbb
and
rolb
jnp
dec
xchg
testl
mov
mov
xor
xor
sbb
arpl
mov
jbe
loopne
inc
arpl
fwait
mov
jecxz
mov
stos
adc
push
or
add
test
push
jae
cmp
ret
push
rcrl
and
cmp
rolb
clc
xchg
jle
stc
adc
in
xor
mov
jo
push
lahf
repz
cmp
sti
enter
push
sub
mov
bound
xor
inc
fs
and
aas
out
cmpsb
aam
xchg
cmpl
rclb
lods
test
mov
add
sbb
loop
cmp
out
into
fadds
jnp
arpl
insb
insl
mov
push
imul
mov
sub
aad
arpl
cli
jno
jge
clc
pop
or
and
outsb
stc
pop
icebp
mov
add
mov
shll
loop
cmpsl
xchg
mov
fildl
enter
imul
xchg
cmpsl
jbe
xchg
loop
lahf
jecxz
jl
xchg
push
cmc
mov
or
xchg
pop
inc
inc
xchg
xor
mov
test
cmp
mov
insl
pop
fucomp
xchg
stos
std
cmp
mov
stos
mov
dec
add
lods
addr16
adc
std
xchg
push
imul
out
cli
jno
repz
mov
dec
test
leave
inc
clc
dec
dec
or
loopne
dec
cmpsb
xchg
sub
mov
leave
cmp
push
mov
mov
in
out
mov
mov
dec
sbb
cmp
xchg
frstor
cmp
and
xchg
iret
xor
push
call
pop
adc
fidivrs
ljmp
arpl
stos
dec
xchg
imul
test
cltd
daa
push
pop
daa
xlat
jns
inc
idivl
sbb
push
rcr
inc
and
lret
pavgw
mov
jno
push
or
sbb
test
adc
mov
or
test
adc
sbb
es
xchg
jle
arpl
push
shlb
mov
cmpsl
jl
popa
lret
add
jge
sub
arpl
jge
xor
inc
into
int3
adc
push
mov
lret
stos
ss
in
lods
cmp
xlat
mov
fsubrl
call
add
call
jmp
stc
in
mov
lret
mov
aaa
jb
jg
and
jg
and
dec
mov
jmp
andl
dec
jecxz
xor
loop
outsl
cmp
pop
push
sub
xor
aaa
jns
ds
ljmp
lret
js
sbb
stos
stos
inc
fnstenv
xorb
jmp
xchg
inc
ds
cwtl
dec
and
test
lock
bnd
mov
rcll
scas
mov
xchg
mov
call
sub
cmpsb
aam
ljmp
mov
loope
movsl
xor
int
and
inc
enter
push
adc
cmpsb
inc
mov
loope
aaa
hlt
in
push
cmp
outsl
addr16
mov
inc
add
fmull
xor
mov
cld
adc
add
outsl
lds
jo
pop
mov
xlat
out
mov
adc
xchg
test
les
mov
insl
inc
mov
pop
outsl
dec
rorl
sahf
inc
fimuls
adc
je
cmp
repz
mov
in
testl
inc
fmuls
or
cli
mov
mov
int3
test
lret
outsb
mov
pop
dec
or
push
fsubrs
repz
add
xchg
sub
adc
rcr
mov
enter
sarl
sub
inc
lahf
inc
cmp
push
xor
in
jbe
stos
sbb
jge
scas
lds
stos
sub
fwait
mov
hlt
cmpl
pop
xchg
adc
iret
popf
xchg
dec
xchg
ret
push
jae
lods
and
fs
or
mov
xor
in
pusha
push
add
mov
jno
and
push
push
int3
push
sub
push
insl
add
das
mov
dec
jo
lea
stos
jae
add
pop
pop
push
out
ja
std
adc
int3
cmp
les
movsb
xchg
cmc
cmp
jecxz
dec
iret
sbb
cmp
out
adc
dec
and
mov
aad
adc
inc
out
fwait
jns
outsb
hlt
xor
dec
xor
inc
add
lahf
add
mov
test
adc
stos
lods
sub
mov
pop
aam
adc
sti
lods
stos
mov
mov
inc
ss
push
cld
sar
push
jg
imul
add
testb
sub
popa
mov
mov
insl
cmpb
adc
cmpsl
dec
js
lds
js
lahf
and
and
cmpsl
mov
and
movsl
imul
rolb
popa
adc
and
push
mov
loope
sbbl
popf
arpl
jmp
in
xor
dec
and
mov
sahf
outsb
mov
inc
loopne
popa
insl
push
repz
xchg
push
dec
jae
repnz
ss
movb
mov
mov
outsl
std
add
jb
jno
xor
sbb
or
jg
jecxz
cs
pop
shl
sbb
fdivrl
adcb
lds
mov
mov
inc
add
sub
outsb
push
xor
scas
inc
addr16
int
ljmp
fmuls
inc
xchg
push
ret
mov
ljmp
add
jb
add
jg
xor
mov
push
arpl
or
inc
jecxz
jle
xchg
sbb
insb
jle
add
fcmove
jl
cmp
inc
sub
and
fs
mov
adc
mov
addr16
and
jp
xchg
sub
dec
pop
outsb
pop
arpl
shrl
les
sbb
pushf
fs
dec
lock
pop
xor
pop
js
pop
js
push
cmpsl
inc
test
xor
push
mov
aaa
dec
loope
nop
cmp
dec
sub
rol
and
in
sahf
mov
push
add
jo
push
mov
xor
loopne
cmp
divl
fwait
mov
push
xlat
int3
in
std
cmc
jl
dec
dec
push
adc
aad
cmp
jbe
xchg
mov
jnp
bound
out
std
mov
or
roll
rorb
mov
jmp
inc
lock
pop
into
mov
add
lret
mov
xor
cmp
xchg
pop
lret
test
inc
sahf
cmp
cmp
mov
insl
cmpsb
mov
fwait
adc
iret
sub
lods
dec
push
in
or
inc
lret
cli
inc
js
jbe
mov
fcoml
sub
mov
iret
out
lock
pop
fwait
jmp
lea
jne
int3
movsl
lret
add
repnz
enter
lods
xchg
out
bound
cwtl
sub
out
push
xchg
pop
aad
out
aad
lods
cld
int3
mov
pop
loope
sbb
push
and
pop
pop
in
test
ds
test
or
xor
and
jmp
movsl
and
int3
bound
pop
mov
jecxz
ds
pop
cmp
sbb
cltd
repnz
dec
xor
scas
sbb
cmp
lahf
or
push
mov
pop
adc
popf
add
mov
fmuls
gs
addr16
jg
inc
dec
cmp
xor
imul
lods
or
xchg
xchg
ret
ja
sbb
lret
insl
out
scas
mov
popa
stos
add
jb
sbb
dec
mov
es
mov
fnsave
jno
cmp
add
xor
shrl
jle
push
pushf
dec
add
insb
adc
fistpll
mov
pop
lea
mov
nop
push
pop
fldcw
iret
add
mov
add
imul
jmp
ja
popa
xor
inc
jmp
test
cmp
jg
fnstcw
pop
dec
test
leave
cld
pop
mov
or
cmp
mov
dec
dec
xor
ljmp
iret
or
sahf
dec
inc
xchg
int
or
mov
fbstp
pop
fcompl
imul
adc
ljmp
shll
and
rcl
cmp
and
jne
sbb
sub
mov
pop
out
lds
bswap
imul
sub
cmp
rcll
adc
mov
stc
push
xor
or
insl
iret
push
cmp
xchg
xchg
test
pushf
jle
fsts
push
aas
pop
dec
xchg
jne
sub
sahf
mov
pusha
es
fildll
mov
gs
iret
add
mov
mov
idiv
fdivrl
stos
sub
push
fs
pushf
pop
adc
das
mov
mov
add
ds
jecxz
mov
and
push
mov
mov
in
mov
mov
mov
out
ficomps
std
cmp
fs
adc
ficoms
popa
xor
sahf
xchg
imul
lods
inc
lds
mov
pop
shl
cmpsl
xchg
dec
xchg
jb
movsb
jno
xor
test
je
dec
jmp
rclb
mov
cltd
adc
jb
inc
cmp
push
push
orb
lret
shrl
shlb
fcomip
mov
jl
and
mov
sbb
mov
jecxz
push
mov
push
subb
mov
dec
xchg
fisttpll
push
bound
stos
scas
stos
repz
push
mov
or
mov
outsb
cmp
lods
loopne
sub
lds
int3
int
push
aas
mov
aaa
mov
mov
movsl
stos
outsb
cld
inc
jnp
lods
test
popf
sbb
dec
leave
mov
movsl
pop
push
aaa
scas
inc
mov
sub
jg
enter
push
out
jne
push
and
je
or
int
inc
cmc
lds
shrl
jge
dec
xor
jnp
mov
dec
adc
aas
stos
popa
or
loop
test
add
pop
xlat
and
dec
insb
out
test
xchg
pop
and
mov
push
stos
sbb
and
or
and
mulb
enter
dec
sbb
sub
fwait
loop
movsb
in
out
push
xchg
xchg
push
mov
inc
sbbl
addr16
cltd
pop
pop
imul
mov
cld
pop
icebp
adc
jne
je
enter
pop
inc
cli
lahf
dec
roll
push
cmp
mov
call
and
int
ret
jb
or
xchg
dec
or
rcll
jne
xchg
ss
mov
aaa
fcomps
jmp
aad
jg
xchg
jl
add
scas
imul
mov
test
inc
dec
fadds
and
std
mov
neg
jno
jae
cmp
in
mov
add
cmp
mov
shl
jp
mov
jbe
into
js
cli
sti
out
gs
sti
adc
scas
test
mov
test
and
xchg
xor
fwait
inc
dec
sbb
sub
or
or
push
int
int3
mov
hlt
and
ljmp
mov
push
sbb
into
cmp
pop
setnp
cmp
push
mov
mov
test
inc
mov
aam
out
inc
mov
push
or
xchg
loope
and
jb
mov
xchg
rorb
rorl
movsl
mov
mov
push
mov
dec
dec
cmpsl
inc
or
push
lcall
pop
or
les
jl
pushf
int
cmp
pop
mov
xlat
adc
cmpsb
cmp
xchg
test
jmp
mov
in
jno
inc
cli
mov
iret
adcl
rcll
inc
ljmp
and
jg
inc
incl
lods
pop
loopne
in
ficoml
stc
outsl
xchg
je
sub
or
or
and
sahf
dec
and
adc
add
ljmp
or
in
pop
xlat
adc
xchg
and
mov
lahf
jae
mov
mov
jp
lcall
xchg
outsb
mov
lret
test
cld
andb
xchg
xor
orb
fs
lcall
loope
lahf
cmp
xor
pop
pop
mov
jmp
js
hlt
jp
jp
push
push
movsb
loopne
orl
mov
jmp
jg
adc
xchg
inc
cwtl
in
lret
rcr
mov
out
in
mov
push
pop
pop
scas
mov
jb
jle
lods
stos
mov
int
je
dec
xor
jae
and
xchg
sar
dec
inc
or
sub
int
push
or
in
leave
ret
inc
cmp
inc
test
stos
sub
stos
mov
mov
or
sti
lret
pop
int
dec
xor
sbb
jmp
shl
pusha
push
ffreep
flds
cmc
adc
mov
xor
sub
mov
in
sub
pop
into
ficoml
daa
jp
iret
insb
inc
cvtpi2ps
inc
pushf
fwait
cmp
insb
lret
pop
jbe
mov
xor
mov
adc
jg
mov
js
js
or
jo
jb
jae
or
cmp
dec
inc
dec
xchg
mov
jp
jno
mov
xchg
cli
dec
sub
pop
cltd
pop
pop
inc
rcll
xor
jno
out
sbb
inc
cmp
xchg
inc
and
xchg
subb
sub
int
testl
cmp
fcoml
or
rcrb
ja
mov
jae
imul
ds
cmp
sub
movsl
inc
cmc
mov
mov
push
pop
adc
rol
push
pop
xchg
mov
inc
ret
jbe
daa
test
xchg
mov
sbb
in
rorb
cli
pop
cmp
or
insb
popa
or
inc
jns
imul
arpl
call
bound
jmp
jecxz
jae
mov
push
push
std
xor
fucomi
xchg
es
js
test
mov
mov
cmp
xchg
push
push
push
mov
pop
cmc
in
inc
xor
insl
fdivr
jg
mov
xchg
ret
xchg
in
dec
jns
imul
or
lods
test
pop
cmp
mov
push
jecxz
cmpsb
mov
sub
out
inc
data16
imulb
or
push
add
mov
in
out
int
mov
int
dec
loop
sbbb
pop
push
push
xorb
lcall
pushf
loop
or
mov
lds
mov
jb
ss
cmpsl
xor
call
out
push
fidivl
movsb
lds
adcb
rclb
cli
push
int3
idiv
fwait
jne
ljmp
cltd
jl
nop
cmpsl
imul
adc
push
cmpsl
dec
xor
dec
jns
cmp
rcrl
mov
fsubrl
pusha
and
dec
push
dec
add
inc
neg
push
fsts
sbb
fisttps
or
inc
dec
push
jne
xchg
jmp
cmp
ffree
mov
icebp
pop
sbb
push
dec
sbb
inc
mov
lds
scas
fwait
push
dec
sub
dec
das
mov
jmp
sbb
fcompl
sub
out
pop
adc
xchg
adc
xchg
push
js
mov
push
out
cs
mov
lds
nop
jg
jne
in
mov
and
daa
cmp
and
xchg
mov
sbb
popf
add
cmp
mov
clc
pushf
or
lcall
mov
les
repnz
in
in
imul
sbb
les
jbe
aaa
popa
add
dec
cmp
icebp
scas
fstpl
in
popf
in
addb
aam
mov
fwait
mov
je
out
arpl
outsl
test
xor
push
fisttpl
adc
les
shlb
test
nop
mov
movsb
or
jae
jmp
lds
js
jle
in
int
jne
adc
popa
sub
int3
xor
xor
fwait
mov
bound
sahf
dec
inc
icebp
jp
jno
stc
lods
or
in
or
jmp
cmp
xchg
subb
cmp
or
jp
or
sbb
sbb
xchg
aad
aas
adc
clc
sarb
loop
inc
cmp
push
or
pop
push
popf
inc
js
adc
or
sbb
dec
pushl
add
add
out
sbb
out
cmp
xor
popf
data16
mov
push
cmpsb
mull
addr16
insb
mov
jge
and
push
dec
mov
imul
xchg
fldenv
push
outsl
or
subl
or
sub
insl
inc
adc
sbb
jg
push
or
pusha
and
sbbb
xchg
jecxz
ja
fstpl
mov
mov
out
arpl
cmc
jp
mov
je
xlat
pop
dec
and
test
xchg
pop
pop
lods
stos
sbb
incb
pop
mov
dec
inc
adc
xor
stc
fs
testb
pop
repz
dec
jmp
jnp
into
test
pop
mov
into
sub
lret
jo
imul
out
adc
xor
xchg
mov
pop
xor
and
push
les
iret
enter
aas
xchg
mov
mov
inc
out
sub
imul
into
add
cltd
mov
adc
sub
nop
loope
sub
inc
popa
aas
dec
dec
pop
mov
loopne
repz
adc
dec
test
mov
pop
sub
xlat
shrb
adc
fcomps
mov
push
cmp
jl
mov
mov
sub
cltd
test
rclb
movsl
je
sub
cmp
xchg
sbb
sbb
loop
popf
cmpsb
loope
mov
mov
shrb
iret
pop
imul
xor
fldcw
jae
cltd
ja
xchg
cmp
xor
js
jnp
adc
cwtl
or
cmpsl
andb
push
xor
fisttps
pop
int3
and
or
push
sub
mov
inc
and
or
popa
scas
mov
or
or
fdivl
mov
jne
and
cli
sbb
and
bound
jns
out
lret
pop
loop
add
mov
xchg
or
cwtl
xchg
lods
call
pop
aad
dec
inc
test
xchg
outsb
inc
pop
shrb
shl
push
data16
ljmp
and
pop
inc
mov
out
push
rorb
loop
mov
or
xchg
shl
dec
movl
out
scas
or
push
lahf
mov
mov
hlt
in
shrb
sub
pusha
je
pop
adc
mov
xchg
stos
das
jae
sar
clc
add
and
adc
ret
push
sub
fcom
pop
fstl
outsl
jmp
pop
sar
mov
and
xchg
sbb
inc
loop
pop
fsubrl
jg
hlt
push
fs
into
add
and
insb
inc
test
sub
cwtl
addr16
jecxz
popl
enter
adc
es
push
xlat
fldt
negb
mov
pop
stc
mov
pushf
cltd
test
stc
je
test
lahf
sti
push
in
pop
cmpsb
popa
add
lock
stos
int3
dec
stos
dec
daa
test
fidivrs
dec
aas
inc
jmp
push
mov
lock
insb
dec
mov
ucomiss
test
mov
test
pushf
mov
dec
xchg
mov
or
jecxz
mov
and
jg
cmp
jle
jo
dec
loopne
mov
push
and
lods
mov
inc
test
out
insb
xor
in
pushf
out
sub
out
test
leave
call
aas
jecxz
call
clc
push
cmp
mov
mov
nop
xor
call
shll
push
add
addr16
rcrl
xchg
or
mov
sbb
in
clc
imul
jmp
pop
push
fnstsw
rcrb
ja
iret
adc
outsl
mov
cld
loope
cmpb
or
mov
pop
loop
insl
outsl
out
adc
sbb
andb
sbb
cltd
aaa
daa
mov
pushf
sarl
adc
xor
rcll
pop
movl
inc
sub
rcl
cmpsb
jp
loop
jecxz
repz
xor
enter
mov
xor
cmp
movsl
inc
adc
fsubl
pmaxsw
pusha
sub
es
sub
movsb
xchg
sarl
add
stc
lea
ds
stc
mov
push
inc
lock
add
sub
sub
or
js
jnp
mov
in
mov
cmp
and
in
add
jp
mov
mov
out
jae
mov
icebp
inc
and
lock
push
cmpsb
mov
fcoms
push
xchg
stos
out
mov
pop
xor
xlat
ss
aaa
add
xlat
pop
jge
push
cmp
daa
cmp
or
and
sti
mov
sti
clc
adcl
je
repz
push
inc
inc
pop
mov
ss
and
mov
jl
shrl
aas
adcl
add
in
dec
inc
fisttps
lcall
mov
shlb
mov
sahf
cwtl
loopne
jle
jl
outsb
xor
test
add
ret
jb
pop
push
mov
pop
mov
mov
addb
popf
sbb
and
mov
cmp
push
xlat
or
ret
add
jge
mov
ret
cmp
or
rorl
test
dec
insl
inc
inc
inc
push
shll
inc
out
push
clc
ds
popa
shlb
xchg
jecxz
dec
outsl
notb
adc
call
sub
jno
sbb
jne
test
jae
dec
jg
xchg
lea
pop
pop
aaa
jl
xlat
inc
fwait
jl
or
ret
out
pop
xchg
mov
push
pop
add
jno
fadds
jne
sub
add
mov
mov
loope
and
add
mov
pop
aam
in
out
push
cli
das
lahf
fsubrs
clc
or
mov
dec
mov
dec
pop
out
mov
fcmovnb
push
mov
jae
dec
jne
lock
mov
inc
jb
mov
pop
call
cs
or
idivl
jle
shlb
cmp
sub
rcrl
jmp
ljmp
dec
cmc
mov
dec
sbb
mov
add
movb
or
jo
hlt
mov
notb
xorb
sub
and
mov
mov
adc
or
pop
mov
mov
out
leave
lea
cmc
loopne
pop
pop
mov
pusha
fwait
jbe
and
jmp
lds
inc
ret
pop
xorl
adc
repnz
pop
sbb
or
mov
sbb
scas
js
loope
es
and
inc
mov
or
stos
lea
add
aas
mov
iret
pop
es
popl
data16
std
popa
lea
cmpsb
and
xchg
cwtl
push
mov
push
fcomps
fcmovb
mov
mov
rcrb
and
pop
lods
cs
push
adc
das
movq
aam
adc
ljmp
aas
repnz
test
fildll
mov
inc
mov
adc
hlt
inc
pop
add
sub
push
nop
insb
mov
lods
iret
or
test
movsl
mov
xchg
mov
rolb
cltd
xor
bound
xchg
cld
leave
jecxz
cmp
scas
xchg
or
shll
adc
aad
jne
int3
cmp
sub
xor
cmp
addr16
dec
cwtl
cltd
lcall
or
in
andb
mov
and
sbb
lea
cmp
sub
lret
push
lods
loop
xchg
mov
sbb
jmp
pop
push
adc
push
pushf
dec
incb
cltd
mov
orb
out
cmp
fsubrl
xor
mov
inc
fistpll
loop
jmp
push
rorb
out
inc
sbb
sub
inc
mov
imul
lcall
lahf
xchg
fmul
loope
mov
xchg
cmpsb
cmc
xchg
pop
inc
rcll
hlt
das
stos
repnz
or
push
iret
xor
pushf
int3
in
loop
cmc
aam
movsb
pop
daa
or
cmovo
cmpsb
sahf
loopne
outsl
mov
inc
je
xor
xchg
cs
or
test
pop
outsl
jns
mov
mov
loop
pop
jb
ficompl
add
movsb
clc
fs
add
gs
movsb
roll
lods
sub
insl
sub
je
stos
outsl
loope
sub
cmc
imul
inc
cmc
shl
mov
jb
jle
jno
mov
dec
stos
sub
adc
xchg
or
cmp
and
aas
jno
cs
push
lock
repnz
or
das
sbb
scas
cmpsl
xchg
repz
mov
mov
and
lods
add
mov
icebp
sbb
outsb
sub
clc
lret
push
xchg
dec
inc
push
mov
ficomps
dec
cmp
sbb
cwtl
movsb
test
and
ljmp
cmp
imul
xchg
xchg
inc
outsb
out
push
test
sub
jb
lcall
push
jg
mov
into
in
popa
bound
inc
fwait
mov
in
inc
lods
xchg
mov
in
aam
push
inc
sub
pushf
int3
push
fdivrs
in
cld
or
push
push
mov
pop
jle
in
icebp
stc
push
iret
roll
mov
jmp
imul
push
jns
fs
fsubs
cmp
lds
push
imul
xor
stos
dec
dec
loopne
int3
cltd
scas
sti
aad
shll
jge
ret
or
test
insb
adc
scas
sbb
test
lcall
test
daa
pop
inc
cmpsb
sbb
jmp
mov
and
js
call
loope
jg
fmuls
dec
cmp
aaa
inc
int
into
cmp
inc
push
sahf
dec
xlat
test
ficomps
mov
mov
call
in
cmp
ret
loop
jo
jl
and
test
js
lods
iret
sarl
xchg
test
add
imul
pop
or
mov
pop
int
mov
mov
cmp
push
rcr
test
mov
push
test
cmp
push
ja
push
sbb
inc
lret
sub
and
clc
pop
pop
xchg
arpl
scas
or
lret
xchg
iret
icebp
jl
jb
cmc
pop
enter
dec
cwtl
push
aaa
jo
dec
xchg
lea
dec
mov
sti
imul
popa
or
in
and
filds
inc
cmp
cltd
pop
jne
dec
inc
xchg
out
mov
adc
loop
pop
sbb
repnz
and
mov
je
mov
jg
cwtl
pop
xor
push
rorb
pop
test
rcr
cs
repnz
jge
mov
int
test
cld
pop
sbb
jae
ss
daa
sub
or
addr16
movsl
aaa
fldl
fucom
jbe
sbb
mov
lds
aam
nop
outsb
rcrl
mov
dec
scas
mov
push
test
inc
xchg
mov
dec
pusha
xor
inc
mov
ds
mov
xor
pop
sbb
xor
pop
jp
shr
mov
lret
jmp
xchg
pop
dec
jno
call
jnp
cmpsb
adc
andl
lahf
stos
js
stos
lods
mov
pop
popf
mov
mov
lret
xchg
adc
hlt
inc
stc
call
pusha
pusha
sbbb
inc
jecxz
dec
loopne
inc
inc
addr16
aad
jl
xor
mov
leave
in
pop
ret
imul
out
clc
lcall
jne
pop
add
lret
push
les
dec
mov
sbb
adc
ret
mov
xlat
cmp
mov
es
xor
xor
roll
pop
repnz
push
jmp
rorl
xor
lds
mov
jg
push
xchg
mov
aas
ret
fmuls
add
in
mov
jo
in
mov
ljmp
lock
mov
xchg
xor
inc
and
frstor
cmp
push
rcr
js
mov
in
in
popa
sub
sub
dec
cmp
cld
arpl
dec
in
jae
nop
and
mov
jbe
cs
push
stos
inc
jae
mov
popf
mov
adc
scas
or
inc
cli
pop
jae
and
lahf
add
xor
daa
adc
cmc
out
in
jno
mov
imul
inc
lea
push
bound
nop
mov
cltd
scas
pop
ljmp
outsl
out
mov
and
ret
addr16
orl
lods
pop
sub
mov
and
test
out
jbe
insl
jmp
bound
push
inc
sub
addl
stos
mov
sbb
rcr
sub
xor
adc
mov
jb
push
mov
outsl
mov
addl
lret
sub
int
inc
dec
mov
cmpsl
sbb
dec
sub
imul
xor
xor
out
imul
jl
inc
or
int
into
aas
adc
ret
pusha
idivl
dec
in
pop
jnp
mov
pop
lods
push
shlb
ds
data16
sahf
mov
push
xchg
dec
popf
adcb
sub
dec
cmpsl
xchg
cltd
addr16
dec
lret
aad
add
cmp
ss
mov
mov
cld
cmc
loope
popa
jle
gs
sbbl
out
sub
cmp
test
push
cld
leave
xchg
rolb
xchg
inc
add
and
into
sub
xchg
jge
adc
push
loope
push
mov
sahf
cwtl
in
cmp
ret
mov
std
jno
pop
mov
xor
mov
ret
inc
lds
dec
aam
stc
add
or
cmp
cmp
mov
repnz
stos
ja
orl
loopne
adc
push
shlb
clc
inc
push
and
rolb
mov
inc
aam
jne
fdivl
mov
mov
mov
or
add
jno
and
aaa
and
mov
movsb
popa
cmpsb
inc
jmp
sub
add
lock
sti
loopne
sarl
xchg
mov
mov
out
push
sbb
stc
loopne
xchg
cmp
add
inc
icebp
xchg
cmc
sti
in
gs
int3
xor
mov
in
shlb
out
loope
bound
cwtl
xchg
mov
lea
cmp
xchg
cli
call
div
or
fsubrp
dec
add
add
hlt
mov
stos
loop
sti
cwtl
lret
fdiv
test
xor
imulb
xor
push
sbb
iret
aad
orb
jge
mov
mov
roll
fsubrl
ret
push
das
adc
mov
mov
in
shrb
mov
rolb
cmp
mov
int3
fs
popf
jecxz
lea
and
iret
out
rcll
aaa
push
cli
push
push
pushf
pop
add
cmpsb
add
push
pushf
jl
jb
fsubrs
les
nop
popa
int
fdivrs
adc
enter
ljmp
outsb
gs
lahf
ja
gs
outsl
mov
sbb
fcom
aad
jne
add
imul
inc
dec
hlt
inc
push
aaa
int
fidivrs
jnp
xchg
mov
jmp
xchg
inc
repnz
push
test
inc
push
mov
sbb
or
leave
insl
in
shll
aas
xchg
bnd
cmp
sbb
aad
pop
iret
loop
xor
sub
push
xor
test
pop
imul
inc
dec
repnz
out
lret
dec
out
std
push
pop
int
fsts
outsb
sbb
bnd
xor
mov
outsl
fs
ret
fidivl
out
sub
shrb
sbb
dec
sbb
jl
js
or
mov
int3
dec
imul
lahf
mov
sub
xchg
push
xlat
nop
or
cmp
aad
por
adc
jo
pop
mov
mov
inc
adc
pop
xor
enter
in
ss
inc
shlb
loope
popf
test
lock
loopne
es
or
push
std
fimuls
push
ss
dec
popa
ljmp
sbb
inc
mov
jo
mov
xor
push
pop
jl
cli
mov
js
ss
dec
jno
or
insb
add
jg
jae
mov
cltd
mov
xor
das
mov
cmp
fstpl
lret
pusha
add
mov
popf
add
icebp
push
aas
test
sub
xor
lock
in
push
adc
mov
jnp
jns
shlb
into
add
jns
div
xlat
nop
imul
stos
pop
test
ljmp
or
push
push
jno
hlt
in
das
out
or
add
inc
movsb
mov
adc
clc
lret
sub
adc
pop
rclb
mov
loopne
xchg
cli
inc
arpl
mov
arpl
push
out
in
add
dec
sahf
je
aad
mov
pop
cmpsl
inc
add
fcompp
andb
in
subl
dec
mov
idivb
nop
push
out
mov
cld
xor
inc
xor
mov
mov
xor
lret
repz
mov
loopne
or
sti
loopne
xchg
pop
loope
pop
js
sbb
jbe
add
aaa
imul
xor
je
hlt
mov
xchg
pop
sarl
stos
adc
mov
mov
in
js
mov
dec
lahf
dec
out
jle
dec
js
push
push
hlt
push
insb
fistl
outsb
adc
mov
nop
repz
ljmp
in
iret
aam
or
bound
fldt
lods
fisttpll
loopne
xchg
outsl
mov
and
jns
and
mov
hlt
cli
je
push
bound
aaa
ficoms
cmp
nop
lahf
pop
imul
dec
dec
mov
push
inc
cli
lahf
dec
ret
dec
push
scas
push
pop
inc
push
cmp
pop
dec
push
add
and
push
xchg
or
mov
mov
cwtl
bound
loop
adc
nop
sbb
xor
push
mov
lea
jno
sbb
jecxz
cwtl
aad
sub
push
pop
or
xor
in
jne
fmull
lea
and
daa
and
inc
cld
dec
jns
cmc
or
inc
add
loope
movsb
clc
push
popf
or
and
or
lods
popf
fwait
scas
cmp
test
pop
fistl
mov
xor
aad
add
mov
dec
and
pushf
mov
test
idiv
mov
orb
mov
mov
inc
fs
mov
jnp
jp
mov
pop
aas
lahf
add
jae
fcoml
sbb
push
cmp
mov
xchg
xchg
pop
hlt
outsb
lock
and
add
push
sub
cmp
mov
icebp
and
adc
gs
test
mov
add
add
jbe
sbb
aam
movsb
jp
lahf
sub
mov
jno
stos
jle
sar
sahf
lds
shl
push
mov
mov
cmp
fstps
and
jbe
std
dec
mov
and
add
cmpsb
icebp
aaa
lods
aaa
pop
lcall
and
ret
shrb
pop
sub
or
les
mov
mov
popa
dec
sub
das
push
mov
jb
outsb
iret
sub
addl
mov
push
sbbb
sahf
imul
push
push
mov
jns
enter
push
xchg
rcrl
xor
dec
push
inc
pop
mov
loope
adc
push
fcmovne
scas
lea
adc
xchg
sbb
push
adc
mov
jp
dec
or
xor
insb
jp
repz
and
jae
fiadds
lods
xchg
adc
push
loope
add
outsl
pusha
subl
loop
sti
push
xor
ljmp
loopne
scas
out
pop
sub
faddl
or
lods
addb
inc
fidivrl
outsb
cwtl
or
arpl
mov
das
mov
and
sti
orl
or
push
push
popf
jg
sub
call
cmp
mov
xchg
sahf
pop
cmp
cltd
cs
in
ss
cmp
pop
data16
jge
push
cmc
cmpsb
lahf
push
and
xchg
sti
imul
cld
ret
mov
jae
jns
in
mov
mov
filds
sbb
push
ss
xor
or
mov
or
push
dec
pop
cltd
pushf
imul
fmuls
shrl
pop
adc
sbb
mov
push
jmp
cmp
pop
imul
jle
movsb
mov
pop
jp
dec
rclb
and
dec
test
test
cwtl
aad
xchg
xchg
loop
popa
testl
sub
in
popf
arpl
repnz
jecxz
cmp
mov
into
xlat
cmp
inc
inc
sbb
in
mov
and
rcl
hlt
sub
mov
push
sbb
outsb
test
adc
dec
push
fiadds
in
pop
push
ffree
shl
push
push
test
andb
dec
scas
cs
test
dec
jp
fsubrl
jno
fisubl
adc
cmp
add
fmul
ret
push
arpl
and
arpl
cmp
sub
mov
or
sarl
popa
loope
rol
jecxz
cld
rcr
or
insb
xlat
inc
insl
inc
out
into
sbb
ja
cmpsb
shlb
int
icebp
cwtl
mov
out
fsubr
adc
add
cmpsb
mov
xorb
lret
push
inc
jmp
jg
push
fldenv
mov
shlb
int
mov
outsb
cwtl
ror
mov
out
lock
jecxz
ja
lods
xchg
imul
outsb
jb
aas
sbb
insl
fildl
inc
dec
clc
pop
add
mov
or
pop
loopne
ret
scas
add
adc
sti
sbbl
imul
inc
pop
xchg
push
lea
ret
repnz
icebp
cltd
test
jl
test
ret
out
std
or
in
sub
sar
fistl
xor
cmp
jae
je
lods
pop
jno
ss
out
mov
jg
lock
add
ret
repz
mov
inc
adc
sub
fsubl
lods
push
dec
sub
mov
cmp
daa
add
mov
pop
mov
test
test
test
xor
in
imul
jmp
and
fbstp
xchg
cmp
sub
pop
xchg
xor
and
pop
sbb
hlt
and
test
xchg
push
adc
clc
nop
js
imul
dec
imul
imul
movsl
sbb
cmp
into
and
gs
lcall
bound
jecxz
or
add
xchg
push
mov
aad
dec
ror
and
mov
outsb
lret
dec
rcr
dec
mov
dec
push
movsl
leave
fs
cmp
cmp
inc
jne
jecxz
mov
jnp
push
shlb
cmpsb
stos
inc
scas
in
movsl
add
jp
mov
ljmp
push
inc
in
dec
push
arpl
dec
and
lahf
fucom
mov
xchg
cmp
icebp
std
xchg
jl
inc
or
test
pushf
mov
and
dec
xchg
insl
inc
cmp
call
sbb
lds
xchg
pop
in
cmp
test
out
outsl
xor
mov
add
xor
sub
int
mov
push
xlat
insb
xor
and
mov
push
dec
jmp
adc
add
imul
cmp
leave
fisttpll
mov
lret
mov
and
arpl
lcall
sub
push
das
cli
out
ss
xor
icebp
sahf
ss
mov
cmp
inc
out
nop
jb
fcomps
jmp
push
mull
sbb
push
push
push
xchg
sub
push
in
dec
std
mov
fldcw
cmp
int
enter
pop
lea
mov
stc
cmp
pusha
adc
mov
lahf
or
inc
dec
lret
add
xchg
pop
or
ja
pushf
mov
dec
add
fdiv
enter
pop
mov
cwtl
ss
cmpsl
fcoms
or
sub
outsl
jbe
mov
sub
lock
cld
je
lret
jo
rclb
cmp
rolb
repz
pop
cmp
iret
sub
hlt
sub
xchg
jg
dec
cs
cmp
add
mov
ss
das
daa
push
mov
incl
mov
mov
cmpb
dec
aad
ja
int
jp
add
add
sbb
jmp
loop
stos
mov
pop
movsb
push
mov
in
lds
mov
lret
repz
leave
mov
les
mov
sahf
mov
in
mov
adc
fsts
add
sub
data16
adc
pop
popa
lcall
xchg
sub
cmp
aaa
push
jo
negb
outsl
repnz
mov
sbb
xor
sub
xor
pop
in
dec
inc
aas
gs
or
push
daa
mov
leave
ss
cmp
cmp
push
sbb
lods
stc
inc
dec
pop
pushf
pusha
aam
jge
push
xchg
cmp
adc
pop
lret
ds
dec
xchg
cmp
mov
or
ljmp
ret
inc
movsb
test
std
or
jp
repz
xor
lds
adc
movsb
sub
push
popa
jg
jmp
or
pop
shl
ljmp
cmp
mov
iret
push
cmpsb
mov
add
mov
xorb
ret
jae
xchg
popa
mov
fcompl
dec
pushf
push
stos
pop
or
cmpb
inc
arpl
and
popf
adc
mov
pop
and
xor
pop
and
movsb
lods
paddd
enter
shrb
ss
fcmovb
shr
fistpl
in
punpckldq
push
xlat
ja
cmp
sbb
sahf
jb
jg
les
fstpt
inc
mov
and
in
popa
adc
lods
call
jno
and
lret
cmovnp
mov
pop
add
imul
orl
pop
inc
and
aas
aam
std
aam
xlat
in
rclb
cwtl
repnz
out
sbb
mov
and
loopne
out
bound
xchg
inc
pop
xor
sbb
or
gs
xchg
and
jne
in
sbb
insl
sbb
stc
push
mov
add
popf
imul
aam
inc
inc
and
jecxz
sbb
je
or
or
sub
popf
dec
xchg
in
pop
or
popa
or
mov
or
mov
xchg
adc
jne
mov
das
nop
lret
das
popa
mov
into
xor
xlat
sti
decl
shlb
les
lcall
fldenv
es
ss
dec
loop
inc
push
lcall
std
push
aad
xchg
or
fcomp
fbld
sahf
imul
sbb
jbe
push
or
and
dec
test
shll
pop
jmp
dec
orb
or
inc
push
out
sub
pop
jmp
push
inc
movsb
repz
push
mov
hlt
jle
pop
in
ds
out
clc
test
ds
inc
out
inc
cltd
pop
outsl
mov
dec
pop
mov
mov
test
arpl
stc
out
sbb
subb
test
mov
pop
addl
aas
movsb
outsl
dec
out
sub
jnp
or
arpl
adc
or
mov
pcmpgtd
and
pop
mov
jecxz
movsl
or
dec
cmp
cmp
mov
lcall
jo
jb
insl
add
pop
les
add
xor
rcrl
dec
scas
push
shlb
neg
shrl
mov
test
rcrl
out
test
les
add
rorb
dec
in
repnz
inc
add
xor
sub
je
movsl
adc
fiaddl
xor
test
imulb
rclb
adc
dec
push
jl
mov
rol
cltd
stc
pusha
mov
jbe
mov
push
sub
loope
or
sub
fildl
cmp
cwtl
push
jne
int
outsl
mov
inc
sahf
shufps
sub
and
adc
dec
enter
push
movsl
out
test
movsl
lea
or
cmpsb
cmp
push
pop
ljmp
in
or
mov
mov
imul
outsl
movsb
dec
lds
ret
mov
dec
adc
stos
mov
sub
pop
stos
mov
and
rep
std
lcall
jae
hlt
xchg
rclb
inc
andb
lds
mov
push
add
jne
outsb
add
std
hlt
mov
loopne
dec
or
jb
cs
cmpsb
movsl
adc
test
call
adc
mov
cmp
mov
adc
xchg
mov
mov
lcall
push
hlt
cld
lock
gs
jge
xor
add
test
mov
xchg
popa
jl
adc
aaa
ss
adc
repz
pop
loope
shl
andb
data16
pop
cmpsl
jno
cmp
mov
inc
xchg
nop
sahf
mov
aam
xchg
lcall
scas
sub
xchg
cmp
adc
repnz
adc
mov
sti
scas
xchg
jp
popa
mov
cmpb
or
in
pop
sub
inc
outsb
mov
repz
xor
inc
lock
mov
or
stos
inc
pop
leave
leave
sti
aas
xchg
nop
scas
cmp
jo
dec
fadd
movsb
xchg
mov
and
or
adc
add
xor
sub
into
into
adc
lods
rclb
pop
outsb
mov
add
push
les
mov
stos
inc
pop
pop
arpl
lret
mov
jge
outsb
add
dec
loop
push
or
rorl
mov
rolb
mov
inc
lock
pop
jo
loopne
sub
and
jmp
insb
test
push
out
mov
fcmovnu
mov
lcall
mov
mov
sub
pop
lgs
ss
xchg
cmpb
movsl
ds
push
int
mov
mov
adc
inc
fldl
std
jns
or
add
outsl
insb
jo
push
data16
pop
fs
call
lahf
mov
test
jns
jns
aam
lahf
scas
lock
mov
fbstp
aaa
cli
dec
dec
push
sbb
dec
shlb
out
fmull
cmpsl
xor
icebp
or
push
shr
mov
adc
add
inc
push
mov
fsubrp
jb
pop
and
or
sub
out
stc
iret
jns
cmp
sbb
cmp
xchg
sub
scas
xchg
add
cmp
dec
and
push
aaa
fnstenv
mov
adc
nop
ss
stc
into
pop
fwait
and
jo
inc
mov
dec
ja
jb
sbb
cld
loope
jne
and
test
cmp
jno
add
xchg
and
jb
mov
sub
mov
pushf
int
jge
cli
aam
mov
repnz
push
lods
sbb
adc
js
lret
outsl
testl
mov
pop
daa
repz
push
push
std
loope
cli
pushf
xchg
aaa
push
adc
pop
xor
imul
leave
jecxz
mov
lods
scas
adc
cmpsl
aas
fwait
pop
scas
subl
jl
mov
xlat
lret
imul
cwtl
stos
adc
aas
xor
add
sub
aad
popa
inc
scas
pop
movsl
mov
push
mov
fmull
dec
cwtl
and
popa
nop
push
sbb
sarl
scas
fcmovnb
xchg
push
inc
xor
mov
addb
lret
mov
jo
xchg
pop
push
je
hlt
add
sahf
ljmp
loop
mov
xor
mov
add
pop
cmp
aaa
lcall
cli
std
mov
sbb
sbb
cld
ret
sti
push
xchg
xor
inc
push
mov
pop
cwtl
loopne
sub
into
pop
xchg
inc
mov
rolb
clc
push
push
in
inc
sbb
data16
pop
jg
jmp
dec
push
xchg
cmpsb
cmp
and
frstor
xchg
adcb
adc
movsl
in
stc
mov
jns
jbe
repz
push
jne
mov
cs
arpl
jmp
mov
es
cmc
sti
or
push
ss
pop
lock
xchg
stos
fdivs
pop
outsl
inc
clc
adcb
mov
cmp
int
sub
mov
mov
icebp
xchg
fdivrl
sub
stos
outsl
pushf
out
ret
mov
jmp
into
sub
out
fisubl
test
jb
movsl
paddusw
mov
shlb
mov
push
sbb
repz
aaa
pop
cmp
out
sub
fdivrl
fists
xchg
xor
xchg
push
std
jns
mov
arpl
repnz
test
add
sub
out
movsb
pop
out
ss
bound
fidivl
inc
lods
stos
or
dec
repz
std
cmpsl
iret
movsl
aad
pushf
cli
iret
into
and
dec
imul
and
ret
pop
add
addb
mov
xor
in
dec
cmp
shlb
std
cmp
jmp
les
mov
cld
in
xor
pop
aad
imul
test
in
fmul
sbb
fdivs
test
lahf
and
push
repnz
mov
insl
mov
cmpsl
mulb
outsl
clc
pop
lock
in
xchg
movsb
sbb
cld
push
lds
je
and
aas
lea
call
add
loope
sti
push
mov
lcall
rcrl
mov
inc
jbe
daa
mov
paddd
sti
fstpl
pop
addb
cld
mov
sub
cld
or
shll
dec
inc
punpcklwd
add
xor
fldcw
fsts
fmul
jl
push
add
sub
and
into
fbld
das
dec
movsb
les
mov
pop
mov
iret
pop
cs
scas
or
sbb
push
jbe
imul
popa
es
push
jno
leave
xchg
xor
ret
push
aaa
fdecstp
loop
pop
sbb
and
mov
sub
ljmp
sub
xchg
imul
iret
pop
adc
daa
sahf
cmp
aas
roll
popa
dec
movb
insl
sti
fidivl
sbb
sarb
jbe
cmp
stos
aaa
stc
jbe
cmpsb
mov
jbe
pop
jg
clc
mov
or
bound
scas
push
and
out
jnp
sbb
mov
mov
ret
push
mov
icebp
fistl
sbb
leave
mov
in
push
fs
xchg
mov
xor
inc
dec
pushf
inc
and
sti
shl
iret
jb
cmp
mov
sbb
rorl
sbb
andb
pop
push
notb
pop
icebp
rcrl
testb
icebp
sub
or
shlb
psubq
sbb
mov
mov
jecxz
mov
sbb
add
or
pop
mov
dec
in
mov
mov
push
adc
jle
lret
lret
jae
lods
out
mov
jle
mov
add
mov
popa
int
into
ja
jnp
les
imul
sarb
jae
imul
mov
repz
sahf
pop
rcrb
sub
sbb
stos
push
adc
jae
sub
mov
repz
xchg
fsts
jno
mov
rorb
jle
fldenv
mov
inc
mov
movsl
sbb
and
pop
jno
dec
pop
ret
jg
dec
mov
ljmp
adc
xchg
inc
test
fs
repnz
sub
ror
in
pop
repz
repnz
nop
test
sahf
repnz
jmp
jl
bound
data16
clc
sbb
in
push
scas
pop
or
jg
adc
adc
push
into
lret
jmp
sbb
push
icebp
sub
sbb
je
popa
inc
aad
es
and
lret
pop
lret
neg
sub
sbb
stos
test
xor
pause
imul
xor
xor
dec
push
mov
enter
fisttpll
add
neg
outsb
aas
clc
call
out
cmp
sbb
inc
sbb
out
test
sbbb
fs
mov
aam
jb
sarl
xchg
sti
insb
push
lcall
adc
test
mov
jge
aas
fnstsw
movsb
stc
out
inc
dec
add
mov
mov
sbbb
into
lock
les
cmp
mov
or
fmuls
pop
shrb
add
aam
xor
popa
jns
clc
mov
or
xor
adc
in
xor
lock
cwtl
test
inc
shrl
arpl
push
inc
rol
pushf
rcll
ret
mov
bound
sub
cmp
test
fadds
pop
fnstsw
in
jmp
ja
nop
nop
mov
mov
sbb
cli
fwait
out
adc
test
mov
pop
xchg
inc
sbb
sub
in
xchg
push
in
cs
or
xchg
jmp
jae
aam
xchg
stc
adc
xchg
les
dec
or
or
push
mov
cli
mov
and
arpl
push
mov
pushf
dec
inc
jge
mov
xor
mov
inc
pop
inc
mov
dec
mov
inc
adc
push
adc
lods
lods
xor
xchg
scas
jg
addr16
mov
adc
pop
rol
mov
jmp
push
pop
in
pushl
ret
je
pop
ret
mov
and
leave
smsw
les
mov
and
faddl
call
fcmovu
xchg
or
inc
dec
inc
push
bound
ficompl
add
mov
xor
in
out
test
mov
sub
cmp
jmp
xchg
mov
je
dec
xlat
mov
or
icebp
adc
addr16
or
lret
dec
repz
outsb
mov
sahf
and
jecxz
pop
dec
sbb
movl
int3
jmp
add
or
xor
xor
xchg
or
add
sub
test
jne
popa
push
mov
ja
lret
ret
iret
sahf
dec
lea
adc
daa
vmovapd
fcomp
loopne
mov
leave
or
int3
mov
fildll
cmc
pop
rclb
sub
jb
sbb
cmc
push
in
jo
mov
push
aas
popf
inc
and
movl
and
sti
mov
pop
cmp
push
fnstsw
aam
mov
pop
aaa
sbb
daa
cmp
hlt
cmp
xchg
cwtl
mov
jne
gs
xchg
pop
mov
call
loop
or
mov
faddl
push
xor
jg
jbe
daa
lret
pop
sbb
jg
mov
fwait
pop
jnp
pop
cmp
pop
cwtl
mov
stc
push
icebp
stos
mov
push
addr16
outsl
fistps
jbe
dec
push
dec
xchg
dec
sbb
jbe
notl
bound
and
sbb
or
mov
jnp
push
push
pop
cmp
int3
inc
enter
das
orb
push
cmpsl
dec
dec
pop
dec
mov
icebp
push
sarb
outsb
add
fstpt
leave
fiadds
sbb
notl
ss
sub
or
mov
xchg
addr16
jbe
in
rep
xor
pop
or
into
jl
mov
aas
dec
xchg
and
je
or
jns
mov
mov
outsl
lea
and
ds
add
cmp
pop
cli
iret
cli
adc
push
pop
loope
cmpsb
clc
outsb
mov
int
imul
scas
addr16
in
jns
add
fimull
cltd
incl
sti
pushf
filds
mov
push
jno
lahf
iret
or
inc
mov
adc
push
push
mov
js
insb
std
cmp
fsubs
out
into
loopne
jo
pop
popf
cmpsb
imul
sbb
inc
and
xchg
cltd
dec
ficomps
insb
jb
roll
dec
jno
mov
arpl
xor
add
xchg
adc
aas
fwait
push
iret
adc
pop
jl
adc
in
or
inc
mov
and
movsl
push
xor
pop
cld
arpl
dec
cltd
cmp
mov
das
push
inc
cmp
je
adc
jmp
faddl
xchg
sbb
loopne
popa
push
clc
fbstp
jbe
mov
xchg
aam
call
mov
fistpl
pop
and
xchg
in
in
cli
push
and
lret
inc
cli
and
pop
ja
sub
into
add
and
in
shrb
jne
push
lock
xor
mov
test
sub
imul
jecxz
aam
data16
ljmp
inc
mov
jnp
push
fbld
sti
jge
stos
adc
nop
cmpsl
xor
push
cmc
xchg
push
push
pop
adc
cli
push
fwait
or
pop
stos
mov
and
repz
mov
sahf
mov
ja
pop
into
ja
lahf
iret
mov
add
mov
cmpsb
dec
fiaddl
mov
shrl
lods
jge
push
add
push
cltd
add
std
shlb
test
sbb
mov
push
fs
mov
cmp
jge
xchg
arpl
test
test
or
lods
scas
pop
or
mov
cmp
cmpsl
and
sbb
cmpsl
adc
and
arpl
mov
xchg
out
mov
dec
dec
jmp
fcoml
out
push
aad
cmp
sub
shll
adc
xchg
jno
shl
jno
dec
enter
in
lea
sbb
inc
adc
lcall
dec
lret
addb
adc
mov
adc
sbb
pop
or
pop
sbb
mov
outsb
clc
jp
adc
lods
mulb
or
or
test
std
je
xchg
nop
jp
fwait
cmpsl
mov
fcmovu
test
cmpxchg
push
movsb
loopne
repnz
lods
in
loopne
aas
lea
negl
jle
push
jp
jae
lret
fiadds
inc
ret
push
sbb
pop
sub
insb
imul
pushf
ret
mov
in
daa
dec
loop
outsl
mov
add
or
sub
add
sbb
sbb
popa
and
mov
mov
outsl
pusha
sbb
mov
inc
add
inc
mov
and
or
mov
aaa
dec
inc
jmp
hlt
fists
add
adc
adc
fcoms
lret
pop
loopne
lcall
sbb
xchg
mov
lock
dec
xor
and
scas
mov
add
mov
push
mov
test
and
test
or
enter
add
roll
rolb
xor
icebp
and
mov
mov
dec
sub
dec
mov
mov
scas
jb
pusha
push
mov
push
ja
jne
dec
pop
cld
loopne
imul
iret
lret
rolb
cmp
sbb
mov
sahf
push
stos
cwtl
aaa
jbe
hlt
sbb
xlat
nop
add
repnz
pop
fdivrs
xor
dec
out
xchg
dec
test
out
push
xchg
call
pushf
sub
xor
mov
cmp
movsl
test
pop
int3
pop
lret
mov
mov
fistpl
insb
lods
pop
inc
rcl
inc
jp
dec
pusha
or
lods
jecxz
cwtl
leave
mov
jge
aam
mov
pop
leave
push
orl
les
js
lock
xor
pop
test
mov
add
rcll
cmpb
pushf
aam
lcall
aam
fsts
push
and
cmpsb
xchg
push
sbb
clc
stc
pop
loopne
push
popf
movsl
in
jns
push
sub
cmc
das
jecxz
or
mov
xor
jbe
lods
rolb
cmp
insl
inc
fsts
insb
adc
popa
add
jo
mov
filds
pop
fists
xchg
inc
int
ljmp
xor
xchg
jecxz
pop
xchg
scas
jo
push
sti
cli
xor
mov
or
pop
add
cmp
adc
fwait
mov
and
jo
and
xchg
popf
leave
cmovno
dec
testl
test
and
sbbl
dec
ja
cmpsb
pop
jbe
inc
je
and
stos
or
sbb
in
adc
push
shlb
rep
cmpsl
cs
cmp
or
popa
mov
cltd
clc
mov
dec
push
hlt
lea
pushf
in
nop
pop
push
xor
inc
add
js
and
pop
loopne
add
and
mov
sbb
mov
xchg
cmp
mov
shlb
dec
shl
xchg
adc
insb
rcll
add
jo
insl
repnz
mov
push
and
inc
jp
mov
das
dec
mov
push
je
and
roll
imul
jae
mov
mov
lods
pushf
nop
mov
pop
jmp
mov
mov
ror
test
and
xchg
lahf
push
gs
and
or
xlat
mov
sbb
fs
pop
mov
outsl
dec
pop
dec
iret
add
sti
jb
psubusb
sbb
cld
or
jl
lret
mov
mov
and
sbb
adc
inc
push
in
lock
das
dec
xchg
popf
int
jno
mov
sbb
sbb
mov
mov
xchg
fisubrs
add
hlt
imul
ficompl
mov
adc
cs
pop
lcall
lock
mov
dec
dec
popa
xchg
xchg
pop
cmp
fsubs
frstor
mov
data16
lods
es
ljmp
jae
clc
je
cmp
leave
dec
in
mov
pushf
test
sub
sub
fdivrl
inc
pushf
mov
pusha
jbe
dec
fwait
std
cmp
popa
scas
add
xchg
xchg
xchg
push
mov
cmp
jb
lods
cmp
lods
insl
dec
orb
mov
xchg
xor
jge
xchg
lods
adc
mov
inc
cli
scas
stc
test
inc
mov
push
dec
scas
vfrczps
jle
mov
sub
mov
and
jbe
xchg
sub
cmp
popa
arpl
add
repnz
nop
aam
cltd
sbb
es
push
stos
mov
das
outsl
js
mov
lds
xchg
cmp
jmp
inc
test
mov
pusha
addl
bound
adcl
lahf
mov
cmp
or
pop
sub
and
int
mov
imul
pusha
aam
xlat
dec
push
mov
push
int3
push
lret
push
mov
adc
inc
imul
mov
sub
sbb
stos
jle
push
pop
or
pusha
adc
lods
add
hlt
mov
repz
xchg
pop
stos
fldl
pushf
lock
xchg
push
out
xor
add
bound
out
sub
adc
lds
mull
cwtl
pop
cli
mov
or
push
dec
sbb
inc
mov
push
mov
lods
sarb
push
fldt
in
cltd
enter
jle
outsl
cmp
in
push
xchg
push
mov
nop
push
insl
mulb
ss
lret
jg
movsl
add
lea
mulw
dec
or
jl
dec
push
mov
mov
cli
inc
lods
xchg
mov
mov
cmpl
xchg
jb
clc
fs
loopne
test
sub
xlat
loope
xchg
lahf
add
ret
scas
clc
inc
rorl
mov
mov
js
cmp
mov
stos
lods
push
ja
rcl
movsb
mov
lea
sub
sbb
sbb
out
orl
xor
cmp
sbb
in
adc
icebp
lock
xor
in
xor
fmul
cmp
push
mov
cltd
mov
pop
jbe
add
enter
shl
xor
arpl
dec
sbb
cmp
cltd
icebp
cmc
xor
popa
fistpl
in
pop
add
sahf
inc
lahf
testb
and
scas
jle
push
fcompl
adc
xlat
test
xor
mov
xor
cmp
mov
jnp
or
lock
das
into
push
rcrb
call
mov
imul
sbb
test
and
cs
dec
or
out
mov
mulb
ja
rclb
cs
test
sub
push
push
das
jne
test
sub
lcall
push
mov
push
ja
stos
mov
imul
inc
cwtl
daa
sbb
mov
popf
push
xchg
divl
cmpsb
jae
and
loop
sbb
jno
sbb
pop
lods
sbb
mov
and
push
xchg
mov
bound
cltd
sub
loop
inc
push
mov
shrl
in
jo
inc
inc
sbb
jnp
and
jmp
jl
mov
adc
xchg
dec
pop
inc
xlat
orb
rcrb
sbb
pushf
or
mov
add
loop
out
sbb
sbb
add
and
clc
int3
sbb
aaa
mov
sbb
lret
dec
cmp
es
jb
das
popl
bnd
aaa
push
test
nop
push
add
jns
inc
lods
xchg
pop
loope
add
push
in
and
nop
shrl
es
xchg
push
pop
xlat
xor
push
add
xchg
addr16
jl
das
jg
cwtl
fmull
idivl
movsb
outsl
insl
xor
inc
and
repz
fadd
jnp
xchg
nop
scas
in
sbb
push
jnp
jno
jnp
lods
fsubrs
jmp
cmp
gs
faddp
adc
outsl
pop
push
in
push
push
mov
sbb
outsb
out
or
test
repnz
je
call
adc
shrb
test
ret
test
mov
inc
mov
jp
xchg
fs
leave
jne
dec
xor
cmp
push
cld
movsb
iret
jecxz
dec
adc
pop
inc
or
and
aam
lret
mov
dec
push
cmp
inc
jo
lahf
popa
inc
or
jno
es
or
xchg
je
or
insl
pop
daa
je
sbb
lock
sbbl
mov
loopne
xchg
jno
outsl
mov
xchg
jle
sbb
mov
outsb
outsb
add
ret
pop
pmuludq
jo
adc
repz
test
mov
sub
mov
inc
rclb
mov
into
xchg
lret
cmp
filds
mov
cmp
sbb
inc
fs
mov
imul
or
xor
mov
xchg
fs
ret
lock
test
test
hlt
pop
mov
xchg
fdivrl
lds
das
pop
mov
imul
inc
mov
mov
ljmp
and
js
pushf
out
cld
mov
sbb
out
cmp
lea
dec
scas
insb
adc
popa
sub
leave
or
push
fnstsw
xchg
push
mov
shll
jmp
dec
ret
push
fimuls
or
movsl
daa
xor
bound
push
imul
mov
push
rcll
adc
mov
jnp
cld
sbb
mov
inc
rorb
cmp
int
gs
call
push
push
or
inc
movsl
int
pushf
mov
add
stos
lahf
bound
dec
incb
sbb
stos
outsb
mov
popf
add
inc
rolb
mov
js
add
andb
cli
arpl
insl
inc
add
lock
add
mov
ret
fiadds
push
pushf
pop
in
int
fidivrl
adc
push
sub
test
fs
inc
gs
es
cmpsl
mov
lds
out
xchg
push
cli
enter
push
inc
pushf
jl
out
lcall
push
lds
shlb
mov
bound
push
inc
fbld
cwtl
imul
xor
int
inc
fwait
lds
lock
cmpsl
aad
lret
ja
dec
cmc
shll
push
mov
adc
adc
les
test
jecxz
lahf
fdivrp
sub
adc
push
or
lods
popa
std
and
push
dec
test
mov
pushf
jg
clc
rorb
xchg
and
test
add
and
outsb
pop
jo
or
mov
nop
pop
imulb
push
push
jge
xchg
outsb
in
lods
cpuid
imul
xchg
rcll
jecxz
out
movsb
mov
pop
and
test
addr16
jns
scas
adc
xor
movb
scas
pop
cs
cmp
or
jns
iret
push
call
test
mov
repnz
sbb
sbb
dec
sbb
fdivs
imul
jg
cmc
xchg
cmp
ds
sub
clc
adc
jge
std
or
shl
mov
mov
repnz
pusha
in
pop
les
fisubl
imulb
testb
dec
cmpsl
inc
inc
push
clc
xchg
mov
xor
dec
cmp
lcall
pushf
imul
movsb
push
adc
test
mov
iret
jne
addr16
jecxz
pop
stos
or
fisttpll
sbb
pop
jbe
in
out
jnp
xor
loopne
pop
ja
jnp
out
lret
test
mov
sub
je
pop
shlb
push
fnstsw
movl
pop
inc
jmp
or
gs
shrl
mov
idivl
je
xor
cld
or
into
pusha
fcomip
adc
mov
test
daa
jo
dec
xchg
jp
push
mov
mov
mov
outsb
push
sbb
xchg
jno
push
or
jmp
and
xor
pop
or
and
pop
adc
fdivl
push
or
enter
add
rcrb
push
test
dec
mov
push
push
test
mov
aaa
push
stos
inc
test
pop
mov
jne
jge
lret
cmp
inc
pop
sarb
add
sarl
add
xchg
push
mov
or
add
jecxz
dec
pop
or
in
loope
clc
movsb
loope
sti
sbb
add
scas
icebp
xlat
loope
and
inc
bound
dec
dec
cmp
xchg
gs
jbe
pusha
movsb
popl
fadd
jo
xlat
repnz
addr16
sub
pop
jecxz
in
mov
or
push
idiv
xlat
jmp
cmpsl
outsb
lds
jnp
add
or
adc
jbe
out
cmp
adc
cltd
add
mov
mov
xorb
jno
ja
push
pop
das
xlat
cli
sub
bnd
aaa
xor
inc
cmp
adc
movsb
test
pop
xchg
mov
dec
stos
push
unpckhps
je
xchg
jp
lret
enter
jo
imul
rcrl
dec
xchg
icebp
cmpsb
pop
imul
scas
scas
jbe
push
or
addb
and
iret
xor
mov
test
push
fdivr
repz
ret
sbb
mov
repz
adc
or
repz
push
lret
xchg
ret
mov
pop
push
mov
xor
fs
loope
bound
jmp
adc
loopne
xor
int3
ss
cmp
cmpsl
shrl
cmc
push
mov
test
scas
test
mov
pop
cmpsb
jmp
out
jnp
push
push
stos
jl
mov
sub
lret
sub
push
jp
or
out
push
or
ss
xchg
push
aas
test
mov
sub
in
jge
dec
sub
or
dec
addr16
test
pusha
cld
ret
push
mov
sub
arpl
fwait
jp
sub
xchg
and
or
idiv
inc
sub
repz
iret
push
aam
adc
fimuls
popa
pop
mov
dec
xchg
dec
inc
xor
sub
out
cwtl
inc
sbb
idivb
or
pop
add
sarb
sbb
pop
mov
mov
enter
out
icebp
mov
mov
in
and
test
stos
sub
repz
lds
nop
jb
out
cld
xchg
and
mov
or
xor
mov
sbb
out
or
incb
add
and
inc
lods
ss
sbb
sahf
jl
out
lret
push
add
insb
pusha
cmp
repz
mov
xchg
mov
cmpsl
int
cmpb
stos
push
mov
nop
fimull
sub
mov
push
mov
out
fnstsw
sub
add
loopne
inc
ds
popa
cs
mov
mov
subl
lods
pushf
push
xor
sbb
in
rclb
push
mov
pop
outsb
jl
xchg
adc
into
mov
out
push
add
int
fistpl
jnp
and
mov
daa
cmp
inc
insl
in
add
les
mov
mov
lea
scas
loope
out
push
sbb
ja
jg
addr16
dec
push
idiv
mov
aam
adc
movsb
test
cmp
or
mov
leave
js
push
jnp
pop
insl
push
addl
nop
sub
dec
arpl
imul
xor
mov
mov
and
push
adc
add
add
sbbl
push
push
mov
addr16
stc
push
mov
push
push
inc
cmpsl
mov
sub
mov
sub
xchg
jg
rcrl
xorl
ffree
xchg
clc
sbb
out
pop
lods
mov
cmp
or
popf
shl
jl
enter
xorb
jno
adc
sahf
repz
inc
popl
jns
pop
mov
fiaddl
sub
sub
movsb
daa
aas
fdivr
xlat
push
push
cmc
fcomp
out
or
dec
jmp
mov
lods
lods
dec
sarb
jg
xor
bound
fnstcw
jbe
ror
addr16
icebp
dec
ja
stos
addr16
adc
lock
mov
gs
ljmp
mov
lds
arpl
mov
add
pop
push
sbb
iret
pop
out
push
je
jne
sti
in
movsb
lods
or
mov
movsb
or
dec
shlb
mov
test
adc
test
dec
sbb
rorb
adc
jmp
imul
rclb
pop
adc
mov
push
aad
cmp
cmpsb
xchg
xor
mov
dec
push
cltd
mov
mov
mov
jg
mov
lds
adc
pop
cmp
test
cmp
test
jp
pop
mov
pop
jno
popf
mov
push
add
nop
mov
sbb
cmc
sub
lods
sub
sahf
xor
inc
mov
adc
nop
fdivrl
dec
insl
leave
push
fstps
ja
mov
cmp
scas
jg
and
jl
idiv
scas
and
fcomps
sbb
fld
xchg
mov
test
dec
jmp
mov
lret
popf
rorl
sbb
aam
clc
jl
pushf
sub
push
adc
cwtl
shrb
sub
fwait
sbb
insb
ja
adc
mov
lcall
shl
leave
inc
xchg
mov
sub
fisubs
das
mov
and
scas
es
sbbb
in
add
sub
fidivrs
mov
shll
add
fiaddl
cmp
xchg
mov
popa
pop
push
mov
test
xor
loopne
adc
rorl
inc
inc
std
inc
push
cmp
std
stc
or
iret
aaa
pop
adc
out
lret
outsl
ss
pusha
sti
adc
or
push
loop
pop
imul
mov
test
call
and
call
fadd
cld
push
mov
pop
popf
bound
loope
mov
mov
popf
addr16
add
and
dec
lret
arpl
dec
mov
mov
push
ds
mov
xchg
or
loope
xchg
hlt
es
push
lods
jge
in
cmp
cmc
jne
cli
xor
xor
lock
sub
adcl
jbe
arpl
inc
loopne
cmp
pushl
push
cmpsl
push
push
push
mov
dec
call
cwtl
or
lahf
dec
xchg
or
out
stc
data16
fldt
ds
loopne
int
xchg
js
mov
in
iret
aas
movsl
push
iret
fstpt
xchg
mov
mov
mov
xchg
push
lcall
xchg
push
xor
cmp
repz
xor
stc
inc
lock
adc
adc
dec
daa
or
inc
mov
out
pop
pushf
out
push
icebp
push
pusha
inc
lods
fisubs
fstp
or
push
in
insl
mov
pop
jl
jb
lds
inc
shll
out
jne
pop
or
mov
test
xchg
popl
lds
pop
pop
mov
pop
in
out
add
lret
sub
mov
mov
and
aaa
nop
sti
xlat
adc
or
gs
add
push
call
adc
aas
call
cmp
lods
clc
or
movsb
lret
xchg
test
movsl
jb
mov
push
or
sub
and
je
fs
sub
scas
push
std
insl
mov
pusha
dec
xchg
cli
repnz
lods
push
fcomps
into
mov
icebp
dec
mov
rolb
or
out
or
xor
sub
or
mov
sbb
sbb
imul
pop
ffreep
pop
es
outsl
pushl
mov
inc
mov
pushf
divl
fcoml
in
mov
xor
ret
push
and
aad
fs
or
sub
mov
hlt
pop
aad
dec
inc
divb
inc
pop
or
scas
mov
fsubrl
dec
ficoml
repnz
sub
lret
fs
mov
popa
jns
ljmp
int3
jmp
movsb
and
addr16
clc
push
or
lds
xchg
ss
inc
dec
dec
shrb
sbbb
fidivs
stc
sub
je
dec
adc
stos
outsl
call
pop
aad
incl
and
cltd
idivb
movsl
test
pop
inc
daa
xlat
jb
add
jge
out
lea
ret
adc
and
sub
cwtl
scas
adc
aam
push
out
rorb
in
cmpsb
into
lcall
clc
and
or
mov
loopne
mov
push
lahf
xchg
xor
in
mov
mov
fst
push
jae
stc
movsb
fstp
mov
inc
cmp
divl
les
pushf
fmul
cmp
sbb
add
jo
dec
pop
aam
pop
cmp
jns
mov
and
out
int
inc
mov
dec
cmp
dec
call
xlat
or
fimull
lods
repnz
mov
aad
je
das
adc
push
inc
stos
mov
iret
xchg
cmp
pusha
mov
aas
dec
cmpsb
mov
and
aam
dec
cltd
cmp
xchg
repnz
ja
sbb
cmp
push
dec
xchg
into
xchg
mov
dec
cmp
push
inc
ja
dec
in
test
testb
dec
je
jbe
in
mov
adcb
push
inc
popf
pop
in
std
sub
jge
cld
movsl
fs
sbb
sub
movsl
aam
insb
jmp
jecxz
loope
popa
sub
sub
sub
ret
or
xchg
aam
or
pop
pop
test
cmpsl
pushf
or
push
mov
and
jnp
push
xchg
add
jle
or
push
or
dec
cmpsl
frstor
cld
insb
andb
sahf
jb
push
insl
lcall
cmpsb
outsl
pop
aas
sbb
movsl
sbb
divb
filds
out
mov
imul
movsl
lods
dec
mov
mov
mov
movsb
aad
mov
and
test
mov
ss
mov
enter
jbe
xor
sti
scas
inc
push
or
scas
push
out
movsb
pop
push
fnsave
and
leave
dec
adc
push
nop
sbb
push
outsl
xor
roll
jg
mov
dec
or
or
inc
dec
and
into
js
lcall
pop
jno
push
dec
jbe
add
sbb
xor
sub
outsb
cmp
arpl
das
push
push
xchg
add
or
push
cld
lea
fidivrs
sub
cmc
mov
fmull
popf
popf
and
gs
jb
jge
imul
repnz
jmp
mov
rcll
push
dec
leave
arpl
jne
iret
sbb
add
push
inc
add
gs
int3
and
sbbl
inc
jo
js
outsl
mov
cmp
adc
fnstsw
xchg
icebp
clc
sarl
sti
add
dec
sub
inc
lret
popf
adc
inc
int3
fdivrl
addr16
add
dec
mov
fsts
mov
mov
repnz
add
bound
mov
popl
test
mov
mov
fsubrl
xchg
into
imul
xchg
das
shl
pushf
aas
pop
xor
and
sub
xchg
jp
shl
test
sbbl
divl
in
push
pop
gs
rorb
jl
scas
push
or
std
mov
mov
imulb
or
push
cmpb
popl
repz
aaa
mov
xor
push
lahf
out
ljmp
sarb
rorl
mov
mov
icebp
sbb
mov
adcl
and
jbe
xor
mov
fcmovnb
adc
sub
fiadds
add
mov
test
cltd
cwtl
sbb
sbb
lcall
ja
sti
enter
cwtl
pop
inc
jns
mov
add
mov
mov
addr16
jg
mov
sbb
mov
xchg
shl
mov
push
out
rep
inc
imul
jmp
cmp
xor
add
lock
mov
bound
lds
ret
mov
push
mov
jbe
repnz
gs
sbb
and
xor
ret
shll
int3
les
xchg
aaa
ds
or
pusha
fsubrl
inc
xor
lcall
notb
cmpsl
xor
jle
xor
test
xchg
adc
mov
mov
in
jmp
jnp
data16
pop
jle
add
insb
cs
mov
cli
sbb
xlat
sti
or
pop
leave
dec
je
sub
push
mov
out
adc
jmp
xchg
and
test
jo
xor
ds
and
shll
mov
sbb
mov
or
jbe
xchg
xchg
aam
or
sub
out
mov
pop
sar
icebp
pop
incb
cld
cmp
int
cmpsl
mov
xchg
rorl
in
mov
mov
cltd
lret
fwait
jl
sbb
xor
sub
test
mov
jnp
lods
pop
std
imul
sbb
sub
outsl
stc
negl
js
test
test
pusha
stc
pop
ficoms
jmp
xchg
sbb
cs
loope
loope
repz
orl
inc
xor
out
adc
repnz
jg
push
sti
or
add
pop
cmp
jge
fistl
pop
enter
sbb
stos
aaa
js
cmp
es
popa
jno
out
mov
lcall
shll
inc
pop
xor
sbb
sbb
push
cs
jnp
mov
jmp
loope
lret
fs
loop
inc
mov
lock
push
sub
shrb
imul
and
add
lcall
aam
and
xlat
or
mov
rcr
push
mov
mov
in
dec
push
sub
xlat
mov
out
cmpsl
sbb
jbe
xorb
cld
rorl
sub
lods
cmp
pop
adc
push
sbb
adc
lcall
aam
mov
ficompl
xchg
or
lea
or
lret
push
xorb
ja
stos
add
push
adc
mov
clc
ds
mov
inc
sub
ljmp
inc
mov
es
cmp
fcom
in
push
add
idiv
inc
scas
mov
mov
jns
inc
xchg
cmp
repz
cmp
mov
into
in
fdivrs
adc
and
outsb
push
jno
jo
mov
sbb
das
or
loopne
loopw
cmp
sahf
mov
xor
out
addr16
lret
fisubl
notb
dec
push
std
hlt
cmpsl
lods
or
cld
inc
push
arpl
push
iret
cwtl
pop
fwait
mov
push
mov
pop
sub
xchg
js
add
ret
mov
xlat
out
shll
pop
inc
cmp
les
push
stos
xchg
clc
add
adc
fwait
daa
aam
xchg
lods
push
pop
mov
shlb
dec
test
insb
lcall
sbb
xchg
xchg
mov
xor
sub
dec
call
aas
cmp
mov
call
fldcw
pop
push
lea
dec
lcall
xor
dec
gs
cwtl
cmp
dec
pop
pop
ret
sahf
mov
sbb
cmpsb
scas
sub
out
lret
cmp
int3
mov
mov
sbb
stc
jno
jmp
mov
cmc
xor
sahf
shrl
pop
js
adc
mov
xchg
push
sub
add
outsl
inc
leave
push
push
inc
ss
loopne
cli
lret
jo
out
mov
mov
xor
and
jecxz
jecxz
pop
fsubs
cmp
jmp
jno
pop
rep
xchg
test
and
mov
jp
sbb
in
xor
sar
stos
adc
mov
nop
les
add
testb
out
adc
sbb
pop
lahf
lret
adc
dec
mov
xlat
inc
addr16
repz
adc
jo,pt
pop
jle
fcomi
test
sub
out
lret
iret
dec
sbb
sub
mov
push
lret
repz
push
dec
xchg
sbb
nop
sbb
jno
fcoml
js
cld
dec
ja
push
inc
add
sbb
pop
or
and
addr16
xchg
add
xchg
jns
inc
mov
js
xor
mov
mov
push
test
pop
icebp
jne
sbb
xor
shrb
aad
mov
sbb
fnstcw
add
subb
add
shlb
aam
xchg
loope
mov
xchg
jne
test
bound
addb
fimuls
mov
fwait
cmp
fbld
jbe
cmp
adc
cmpsb
nop
or
push
xchg
cmp
add
fldcw
es
mov
in
xor
dec
in
xor
or
xchg
push
lahf
sbb
fs
fiadds
cli
rcrl
push
cltd
add
lret
push
sti
or
cmpl
cmp
xlat
icebp
int3
pop
inc
test
mov
sbb
dec
adc
pop
dec
mov
xlat
movsl
cmp
xor
mov
sub
jge
jp
iret
jecxz
mov
jecxz
dec
inc
xor
lods
sbb
fcompl
lret
out
ja
loopne
popa
mov
pusha
rcrl
jmp
sahf
mov
inc
pushf
jp
icebp
ucomiss
lahf
xor
subl
outsl
sub
fcomi
xor
cmc
je
insb
pop
jmp
xchg
das
push
out
xchg
push
mov
and
jecxz
cmp
icebp
sbb
cld
xchg
loop
or
and
or
inc
and
popf
push
pop
mov
sub
repnz
aas
sbb
scas
mov
dec
fstl
add
push
scas
sub
mov
hlt
dec
or
je
std
pop
and
add
mov
and
fs
lea
mov
mov
inc
scas
addr16
ret
jecxz
rcll
mov
push
push
mov
mov
int3
lcall
rcl
jecxz
frstor
xlat
cmp
jnp
cld
in
xchg
push
mov
mov
mov
daa
ss
ds
fisttpll
push
push
fisubl
jl
mov
jno
call
inc
mov
les
jns
add
mov
sti
insl
mov
lds
inc
adc
pop
inc
sahf
mov
fistpll
mov
roll
sub
inc
into
fldcw
mov
sbb
sub
mov
add
push
cmpsb
mov
lods
push
movsb
pop
fcomi
cltd
mov
fidivl
sbb
hlt
or
push
mov
lahf
insl
fistl
xchg
mov
stos
loope
xchg
mov
test
pop
das
jb
xor
xorl
mov
scas
pop
nop
ja
jo
lahf
sbb
int3
cltd
into
add
dec
daa
inc
adc
icebp
or
daa
pusha
scas
lods
xchg
lret
mov
lret
cmp
dec
jae
repnz
insb
hlt
and
mov
xor
pushf
xor
mov
loopne
lods
mov
adc
xchg
add
sbb
sbb
jae
sahf
push
dec
sbb
insl
dec
inc
jno
inc
jecxz
jp
mov
js
call
adc
call
mov
testl
lret
aam
cli
inc
dec
add
pop
stos
in
int
and
cmpsl
movsl
fmuls
enter
inc
mov
repnz
fisubl
inc
loope
adc
movsl
inc
enter
pop
leave
bound
jb
rorb
push
lods
mov
test
rclb
mov
jb
add
mov
fildl
lock
loop
daa
mov
cmp
test
cmp
add
mov
adc
dec
mov
fdivs
inc
scas
sub
inc
dec
in
jbe
rcr
ljmp
sbb
test
xor
ret
stc
and
mov
movsb
out
shrl
je
adc
out
fisubs
mov
das
arpl
fiaddl
out
sbb
lret
rcl
inc
insl
lods
xor
jne
pusha
xor
mov
push
test
mov
xchg
adc
subl
xor
add
jecxz
and
std
adc
mov
or
push
and
xchg
stos
pusha
sbb
and
sub
in
sub
mov
jnp
ss
inc
ret
shr
std
hlt
jl
aam
push
cld
popa
jge
test
sbb
arpl
shll
push
pop
push
xchg
inc
mov
mov
int
stos
fs
icebp
pusha
inc
inc
push
dec
inc
sbb
or
fmuls
mov
lahf
jnp
mov
and
push
sbb
stc
mov
mov
jb
insl
loop
in
push
adc
pop
xor
or
and
ja
lret
mov
push
mov
int
shlb
or
jnp
jmp
inc
adc
inc
aam
add
rcrl
mov
loopne
das
nop
adc
shll
jns
push
fadds
loop
arpl
jo
mov
xor
push
in
sbb
aaa
or
sbb
popf
xchg
mov
int3
outsb
dec
mov
adc
inc
out
xorl
sub
jae
test
sbb
jns
jl
mov
cmc
sbb
shlb
pop
lds
push
push
xor
xchg
cmp
mov
insb
cld
mov
add
mov
lea
repz
dec
adcb
dec
insl
test
mov
mov
add
push
mov
sbb
pop
in
dec
sbb
jne
and
pushf
sbb
lret
in
iret
or
mov
jg
fadds
xchg
jecxz
stos
xor
imul
mov
or
xor
push
pop
es
jo
pop
jnp
xchg
orl
and
ret
push
ret
push
lock
imul
mov
mov
cltd
enter
out
scas
leave
stos
and
sbb
dec
cmpsl
test
or
mov
pop
out
adc
or
push
jge
in
cs
cmp
sub
xchg
in
loope
fistpll
test
push
imul
dec
jb
cmp
jp
mov
pop
clc
cltd
fwait
cwtl
cmpsb
dec
iret
push
jg
or
pop
jne
mov
ret
fwait
pop
mov
add
inc
jo
into
insb
ljmp
in
xchg
negb
push
mov
jb
fwait
insl
sar
orl
frstor
xor
flds
addr16
call
mov
outsb
lods
add
lcall
xchg
es
mov
orb
ret
xchg
icebp
movsl
xchg
cmp
sahf
push
mov
ljmp
xor
mov
into
add
dec
pop
fbld
push
sti
push
mov
in
in
setno
xchg
and
adc
adc
rcl
xchg
out
dec
repnz
fldt
lahf
add
sub
out
repnz
mov
bound
imul
out
shl
outsb
outsl
dec
xchg
push
sbb
inc
js
push
inc
jbe
arpl
jmp
testb
shlb
dec
adc
mov
mov
in
pop
loopne
xlat
jg
jmp
inc
rol
dec
push
xchg
repnz
add
push
insl
test
mov
mov
and
mov
and
rcrl
cs
stos
das
xchg
je
push
cmp
ja
shrb
pop
or
xchg
dec
or
mov
cwtl
cltd
mov
movsb
stos
iret
ljmp
mov
mov
sbb
nop
repnz
xor
mov
mov
pop
jb
in
lods
push
adc
xchg
daa
sub
in
loope
in
push
xchg
out
pop
adc
in
sub
scas
cli
into
in
or
xchg
lret
lods
inc
loopne
sahf
adc
sbb
outsl
mov
sahf
test
inc
mov
mov
adc
jmp
xor
xchg
fdivr
mov
push
jle
aaa
aas
cmp
in
sub
fidivrs
pop
das
es
gs
cmpsb
or
lock
movsl
insl
or
inc
pop
jge
test
sub
jb
int3
inc
imulb
sbb
imul
xor
loope
xchg
test
lock
lds
dec
sub
lahf
shlb
lahf
mov
push
imul
push
and
movsb
lret
inc
outsb
int
push
cmp
mov
test
ficomps
mov
test
movsb
shrb
sub
sbb
pusha
push
cmp
js
cmp
popf
lahf
mov
pop
sahf
testb
popf
loopne
insl
pop
fldt
aas
inc
jg
mov
repnz
icebp
faddl
xchg
frstor
jmp
or
lods
mov
test
aam
rcrl
ljmp
mov
notl
loopne
push
iret
or
fucomip
cmp
pusha
decb
lea
stos
add
dec
xor
push
test
inc
xchg
enter
les
arpl
repnz
jp
adc
in
and
popa
jge
out
cld
insb
push
mov
pusha
jno
push
icebp
jnp
push
movsb
mov
sub
jg
adc
push
or
int
lds
out
adc
cli
imul
arpl
lods
fwait
pop
jecxz
clc
test
xchg
js
and
cmpb
call
jp
rol
call
mov
xlat
rcl
divb
dec
andl
inc
outsl
mov
sbb
jge
pop
cmp
dec
mov
repz
clc
xor
pop
cltd
or
sbb
push
ss
rorb
xchg
fwait
mov
das
sub
push
fwait
bound
or
mov
push
inc
shr
inc
or
fisttps
xor
jbe
and
adc
stc
dec
cmp
adc
testb
pop
inc
cld
add
mov
add
hlt
jle
aad
jo
xchg
in
dec
dec
add
push
pop
or
movsb
addb
fsubrs
dec
mov
enter
imul
inc
pop
cmp
or
lret
xchg
pushl
sbbl
fisubrl
adc
stc
shll
push
rorb
div
stc
sbb
sbb
xorb
sahf
sbb
fs
mov
xor
mov
lods
mov
sarb
movb
jnp
or
sbb
xchg
dec
into
aad
mov
fsubp
sub
aad
mov
js
out
inc
xchg
out
rorb
notl
dec
sub
ds
dec
or
fisubrl
mov
pushf
push
xor
mov
leave
inc
mov
rorb
rorb
aad
sub
dec
gs
pop
mov
jne
stc
movsl
dec
inc
insb
ret
in
in
sbb
or
nop
fcmovnbe
adcb
aad
xchg
cmp
push
clc
lcall
js
repz
adc
rorb
ss
push
mov
aas
ja
fisubl
and
mov
das
icebp
lock
push
cmp
js
cmp
out
inc
add
sbb
aaa
lods
cli
cwtl
das
flds
mov
or
mov
sar
gs
das
sub
mov
jo
or
loop
cmp
xor
and
ljmp
pusha
dec
push
clc
or
imul
imul
add
mov
sbbl
inc
leave
jns
arpl
mov
out
push
xor
cmc
and
in
jnp
pushf
je
sbb
stos
fld
add
andl
or
push
call
nop
jns
xchg
test
jns
xchg
fists
imul
push
inc
rcl
jle
lods
cmp
aam
add
lds
jg
loope
fdivrp
loop
and
inc
inc
xor
dec
and
inc
loop
and
cltd
jecxz
popf
xchg
mov
dec
out
dec
cmp
xchg
mov
sbb
es
inc
mov
dec
inc
in
in
shll
cmpl
sbb
xchg
outsb
pop
mov
mov
push
push
mov
cmpsl
and
lea
pushf
lock
ds
out
pushf
dec
rorl
punpckhwd
getsec
ja
movsl
cwtl
sarb
addr16
pop
adc
aad
ds
shr
sbb
sbb
dec
adc
movsb
cs
bound
std
cmp
icebp
repz
inc
fsts
sti
je
test
sbb
repnz
insb
stos
push
pop
stc
addb
pop
mov
jo
test
dec
pop
push
and
mov
lock
aad
sbb
add
push
lods
popa
cltd
dec
inc
bound
dec
add
cwtl
inc
xchg
pop
jbe
cmp
or
lahf
and
mov
inc
sub
mov
adc
shl
sub
or
mov
outsb
jno
lds
cmpb
pop
cmc
shlb
and
fisttps
dec
or
fcom
jl
cmc
jle
loope
loopne
inc
imul
ret
adc
imul
test
repnz
fsts
repnz
movsb
aaa
jae
mov
addl
gs
inc
sbb
xchg
xor
ja
ret
je
mov
movb
bnd
loop
outsb
mov
shll
jp
mov
inc
dec
rorl
mov
aaa
testl
shr
jge
in
sub
push
imul
mov
pop
inc
pop
dec
sbb
outsl
jae
mov
lods
fwait
mov
std
leave
leave
ficoms
dec
adc
adc
out
pusha
add
mov
push
shll
int
mov
jp,pt
in
cmpsb
xchg
jl
imul
add
lds
pop
push
icebp
stc
sbb
mov
mov
out
lret
fildl
test
jl
in
push
and
outsb
pop
imulb
inc
sub
aas
xchg
dec
out
mov
in
fcompl
aam
int3
icebp
pop
jne
xchg
pop
rolb
rolb
fstl
out
push
fadds
xchg
xor
and
inc
aaa
adc
mov
int
rol
scas
idivb
push
fldt
mov
xor
insb
stos
inc
pusha
popf
inc
out
imul
jne
sub
mov
sub
stc
mov
add
xor
into
out
jecxz
ret
and
mov
jb
xor
repz
cmp
in
insb
jno
out
pop
cmc
or
aad
sbb
or
ss
dec
lds
sti
iret
mov
orl
inc
mov
inc
or
adc
sub
lret
scas
jno
in
ljmp
jbe
ret
push
xchg
mov
loop
imul
ret
fists
xchg
mov
xchg
pop
push
pop
mov
pop
jb
leave
fldz
loopne
push
jnp
or
cld
shrl
push
adc
push
movsb
pop
out
shrl
lock
add
mov
leave
cmpsl
inc
fldenv
xor
inc
lret
mov
movl
xor
xchg
cmp
test
fisubl
scas
fdivs
mov
add
test
adc
insb
lret
fs
adc
push
mov
xor
mov
ss
xor
std
int3
mov
sub
fsubrl
ds
pop
pop
push
and
cmpsl
add
jmp
cli
adc
scas
mov
pop
stos
or
jb
mov
cld
push
inc
dec
pusha
push
jb
popf
pop
jp
shlb
leave
adc
iret
scas
ljmp
or
sub
adc
jp
dec
and
jp
mov
fstps
cmp
push
mov
and
ja
lea
push
or
sbb
imul
push
mov
mov
aaa
mov
shll
jbe
fldl
in
sbb
fstpl
mov
lcall
loope
dec
xchg
push
inc
movsb
push
incl
adc
pop
pop
cwtl
test
loope
dec
ds
mov
test
packuswb
fildl
ja
test
adc
adc
aas
and
aas
push
adc
and
loop
out
cmp
pop
mov
sbb
xor
mov
iret
pop
mov
dec
or
out
mov
cmp
fwait
jmp
cmpsl
hlt
je
fidivrl
sub
pop
jb
call
fnstsw
cmc
add
incl
ds
lret
add
sbbb
stos
pop
cmp
jle
dec
test
cs
or
imul
mov
fildll
adc
aaa
mov
mov
dec
test
rolb
and
in
jo
and
cmp
movsb
insl
cmp
jle
outsb
fs
sub
add
popf
xlat
mov
dec
inc
ret
fwait
adc
adc
out
test
std
sub
rol
inc
into
aad
std
js
push
mov
iret
data16
call
imul
or
lods
mov
adc
test
pop
xchg
jle
ds
ficomps
sbb
mov
xorb
out
repz
fs
ss
xchg
sbb
inc
repz
mov
pop
cmp
mov
movsb
lcall
or
movsl
sub
int
xor
xchg
dec
ljmp
cmc
ret
out
aas
sbb
pusha
repnz
sbb
loop
fisubrl
sbb
icebp
push
pop
sbb
xor
xor
add
push
int3
lods
push
push
aaa
iret
cltd
and
in
mov
dec
xchg
imul
fidivs
sbb
jo
mov
mov
in
sahf
inc
mov
xlat
mov
mov
scas
inc
insl
mov
sub
xchg
push
mov
lret
in
loopne
and
jg
lds
repz
loop
paddsb
mov
jmp
repnz
mov
xlat
sub
xor
lea
pop
add
mov
or
push
mov
add
insb
mov
fld
int
lods
mov
push
out
or
inc
mov
scas
dec
popf
std
xchg
mov
ficoms
cmp
inc
mov
call
ljmp
lcall
outsl
shlb
es
inc
insl
and
xchg
jns
sbb
dec
mov
jg
mov
lcall
add
ss
js
test
jns
pop
test
xor
cwtl
xchg
add
sub
cmp
loope
popf
xor
cmpsb
xor
ffree
mov
sub
rcrb
js
and
in
out
mov
xor
das
xchg
test
cltd
call
mov
dec
lods
movsl
loop
jmp
sbb
dec
sbb
jb
inc
outsl
xor
xor
sbb
insb
aad
mov
dec
xchg
mov
mov
jp
orl
jnp
pop
cld
mov
jl
iret
loope
mov
dec
and
xchg
cs
ljmp
mov
push
hlt
stos
adc
insb
popa
sub
jge
adc
jbe
jnp
scas
js
jp
rol
pusha
sbb
call
push
jbe
and
fsubrs
push
out
cli
or
in
mov
dec
and
mov
push
sub
sub
bound
fimull
mov
ljmp
cmp
pop
sbb
jno
xchg
pop
mov
popf
mov
mov
or
aam
and
outsl
imul
idiv
mov
jecxz
lahf
in
or
xor
mov
into
arpl
gs
out
sub
dec
xor
mov
mov
icebp
pop
pushf
sbb
jmp
ret
cltd
outsb
sahf
shr
mov
test
sahf
dec
push
jge
pop
adc
cmp
push
imul
xchg
sahf
lods
or
les
testl
jns
addr16
leave
das
call
pop
mov
dec
dec
push
push
xchg
jb
jns
xchg
push
push
pop
and
in
or
adc
jae
out
insb
adc
xchg
mov
mov
mov
sbb
outsl
mov
adc
cmpsb
leave
repnz
push
outsb
addl
sbb
cld
lret
int
and
mov
in
xlat
push
xchg
xchg
into
mov
jge
xchg
mov
mov
imul
add
adc
loope
jle
jmp
lock
cwtl
test
mov
inc
rcll
iret
mov
sbb
daa
orl
das
jnp
into
nop
pop
lea
sti
dec
or
lcall
jl
or
call
idivb
cli
and
inc
repnz
insb
inc
popl
mov
inc
movsb
push
icebp
jno
cwtl
out
daa
out
add
gs
mov
adc
push
cmpsl
mov
fsubs
xchg
sbb
in
ds
cmp
push
movd
sbb
dec
and
mov
xor
jno
enter
jl
out
out
rclw
mov
xor
pop
std
push
dec
daa
pop
lods
sub
pop
push
cmp
jae
jmp
pop
sub
jl
aad
lcall
fdivp
mov
insl
scas
xchg
movsl
test
inc
pop
out
loope
dec
out
adc
dec
xchg
dec
add
adcl
sub
or
sub
idiv
xchg
int3
inc
or
enter
inc
lahf
inc
adc
pop
cmpsb
lcall
and
sub
je
in
out
adc
dec
fists
sbb
aaa
inc
xchg
jp
mov
inc
inc
pop
adc
daa
lcall
push
sub
movsl
pmuludq
in
iret
inc
aas
or
js
mov
lahf
pop
xchg
mov
sbb
mov
mov
push
in
rolb
cld
xor
pusha
inc
mov
lret
test
sbb
add
xor
dec
push
pop
add
jmp
cld
scas
leave
icebp
pop
mov
jl
stos
sbb
adc
cmpsb
orl
movsb
add
mov
cmc
addb
push
pushf
and
mov
inc
xor
sti
pop
mov
xchg
sub
lret
loope
xor
xor
inc
push
sarb
cmp
sahf
mov
xor
es
ss
call
addr16
cmp
in
test
lea
jl
dec
mov
adc
dec
roll
push
add
xchg
dec
rolb
add
xor
add
movsl
push
sbb
dec
inc
inc
push
dec
mov
dec
les
lds
sub
ret
or
cmp
ljmp
adc
neg
push
cmp
lahf
data16
mov
ret
and
jp
rorl
mov
inc
push
mov
xor
adc
shrb
lds
mov
adc
out
pushf
fsub
add
ficomps
movsb
es
xor
add
push
mov
xchg
bound
int
push
lods
xchg
mov
fadd
mov
jl
mov
cmp
dec
ss
les
fwait
repz
repz
pop
sbb
ds
adc
inc
adc
mov
mov
loopne
in
inc
imul
movsl
mov
mov
cmp
xchg
lcall
jns
outsl
adc
sbb
jnp
sub
aaa
xchg
sbb
incl
in
mov
repnz
inc
outsl
xchg
cs
jl
dec
loopne
xor
into
push
fcmovnbe
aaa
add
mov
fnsave
inc
rcll
fsubr
cld
or
jl
inc
or
out
inc
ds
jno
jns
xchg
test
xor
pop
fiaddl
jb
insb
sarl
cmpsb
mov
leave
shrl
scas
ret
notl
sub
and
add
mov
jno
inc
ret
frstor
inc
les
xchg
shlb
icebp
and
dec
sbb
fscale
xor
and
mov
repnz
cmp
test
mov
sbb
in
sub
out
movsl
inc
cmpsb
or
ljmp
int
jecxz
repz
out
out
out
andl
call
rolb
mov
pop
shll
lcall
xchg
imul
clc
jl
push
fdivrp
stc
ficompl
pop
loope
enter
adc
test
movsb
push
inc
dec
orl
fpatan
or
push
pusha
mov
lret
fstpl
aam
jmp
cwtl
pop
mov
cmp
pop
div
push
push
cmp
ret
jmp
repnz
push
loope
fstpl
xorl
mov
stos
sub
sti
inc
inc
push
push
in
jecxz
mov
out
ja
and
adc
jecxz
cli
sub
xchg
idivb
gs
push
imul
add
inc
mov
loop
add
out
lret
pop
lds
rcr
popf
xchg
mov
inc
or
xchg
adc
pop
mov
fwait
push
ds
inc
jp
pop
inc
push
add
mov
cmp
inc
jo
dec
sub
push
mov
clc
sbb
push
leave
jmp
adc
and
xlat
pop
bound
adc
loope
data16
push
jle
adc
sbb
jl
aad
jnp
push
pop
mov
stc
out
pop
lods
xor
fmuls
movb
mov
xorb
mov
addl
icebp
sub
mov
daa
clc
js
push
mov
aas
jnp
or
aad
ja
movsb
push
cld
mov
jns
ret
pop
cltd
mov
ror
or
mul
adc
outsl
mov
cmpsl
div
add
negl
addr16
and
and
call
cmp
pop
sub
movsl
or
xchg
lds
test
pop
insb
idiv
jae
jbe
fwait
out
inc
add
outsb
push
adc
sbb
sbbb
pop
mov
pop
mov
xlat
mov
xchg
add
mov
mov
pop
jb
and
lret
aaa
add
mov
subb
insb
mov
in
cld
push
imul
inc
xchg
addb
add
adc
stos
mov
ss
jl
mov
inc
call
sub
shll
or
insb
popa
push
jno
mov
mov
sbb
pop
icebp
test
inc
mov
addl
stc
add
cmp
cmpsl
add
shll
mov
sbb
repnz
scas
cmp
nop
mov
ds
das
pop
outsb
jne
les
jecxz
sbb
mov
cmp
inc
aad
popa
jp
xorb
push
dec
jb
rcrl
rorl
popa
or
in
push
out
vucomiss
dec
pop
lods
cmp
test
and
mov
and
idiv
fisubrl
or
gs
subl
cmp
addl
pop
lods
sbbb
shll
lahf
sub
lret
lcall
jnp
jae
cmp
mov
adc
pop
rcrb
inc
adc
or
push
jno
push
cmpsl
in
adc
pop
push
mov
dec
rcr
cmp
cmp
xor
movsl
adc
push
xchg
jl
mov
cld
push
loope
in
out
out
add
imul
sbb
adc
or
outsb
pop
and
sbb
jg
mov
jne
add
insb
in
sub
and
pop
loop
add
jmp
and
add
add
iret
mov
jl
daa
and
and
lock
std
push
xchg
push
xchg
lret
cmc
fwait
pop
cmpsl
cmpsl
inc
lock
insb
xor
xchg
push
xchg
jae
xlat
lret
cmpsl
pop
xlat
sar
cpuid
ret
imul
inc
push
push
adc
mov
jle
lcall
sbb
lods
jns
adc
or
cmp
ds
fs
stc
loopne
sti
sbb
outsl
jmp
divl
dec
add
dec
pusha
arpl
cmpsl
lahf
xchg
adc
mov
leave
jnp
sti
fldcw
call
pushf
out
pushfw
cli
or
aaa
test
scas
insb
xor
jnp
xchg
mov
das
rolb
shrb
pop
notl
pop
sahf
mov
cmp
rep
xor
in
js
sarb
push
test
push
enter
jne
je
fisubrl
lret
mov
sub
mov
dec
mov
test
inc
push
bound
sbb
addb
pop
push
not
mov
lds
stos
jns
mov
loop
iret
mov
ds
push
adc
mov
enter
xorl
add
cmp
and
movsb
jno
stc
and
jo
xchg
mov
out
cmpsl
mov
fcomps
or
adc
fadds
aam
mov
pop
arpl
adc
xchg
cli
cmp
mov
sub
jae
mov
dec
es
out
repz
daa
jnp
push
bound
jno
adc
pushl
mov
adc
xchg
sbbl
inc
das
out
jo
dec
push
hlt
out
push
test
es
add
in
sub
cwtl
loop
lods
in
mov
out
data16
notb
sbb
adc
xchg
push
pop
movsb
xchg
xlat
fsubl
push
or
sbb
stc
xchg
and
dec
sbb
mov
and
cmp
out
jbe
and
inc
mov
xchg
add
cs
cwtl
push
cli
push
xor
in
daa
pop
loop
push
push
into
inc
cltd
pushf
testb
or
stos
loopne
xor
ss
dec
fucomp
pop
sbb
mov
adc
test
pop
imul
mov
cwtl
add
fcmovbe
das
fcmovnu
dec
adc
cmp
stc
sbb
xchg
cmp
sub
add
nop
add
sbb
adc
ljmp
jb
jl
mov
adc
out
out
std
add
cmpl
or
lods
push
mov
or
mov
xorb
lret
jecxz
jl
pop
cvtdq2ps
mov
inc
je
call
loop
push
sub
jae
fnsaves
jg
add
fadds
in
xchg
cmc
cli
icebp
pop
push
xor
cmc
jno
fmul
std
pop
stc
or
push
pop
clc
enter
sbb
repz
fsubp
fsts
sub
push
testl
add
std
test
lahf
inc
popa
test
mov
mov
cli
jmp
pusha
ja
imul
arpl
xor
movsl
adc
movsl
jle
pop
mov
dec
adc
loopne
ret
adc
cli
adc
add
and
paddsb
and
mov
push
jnp
movsl
movsl
xchg
sub
loopne
push
add
dec
sbb
xor
outsb
lea
in
in
jae
xchg
jecxz
pop
jle
or
mov
jecxz
push
out
inc
xchg
cmp
pop
lods
in
mov
xchg
cmpsb
push
testl
aas
mov
cmp
test
stc
mov
aas
push
movsl
inc
stc
inc
adc
outsb
pop
xchg
addsubpd
repz
je
push
pop
pop
and
adc
add
dec
and
scas
and
movhps
xchg
mov
mov
add
hlt
dec
enter
pusha
aad
adc
sti
xchg
stos
mov
jae
sbb
fisttps
std
inc
movsl
call
es
sub
outsl
lods
dec
into
lret
jge
cmpsl
mov
out
cmp
cmpsl
or
movsl
fcomp
outsb
ljmp
popa
sahf
test
cmpsb
ja
faddl
mov
pushf
arpl
imul
xlat
sub
in
test
and
inc
fnstenv
jg
dec
ja
in
rorl
mov
mov
fnstcw
cli
or
inc
add
mov
dec
fisubs
xor
aam
xchg
sub
or
sub
push
stos
cmpsb
jmp
add
add
fisttpll
fcmovbe
mov
or
cmp
shll
mov
test
add
and
xorb
sub
sub
mov
std
ljmp
addr16
and
push
fidivs
xchg
leave
and
jnp
loopne
adc
popa
mov
insb
mov
sub
les
xor
movsb
sub
mov
or
xchg
and
inc
mov
movsl
push
popf
inc
adc
js
stos
dec
xor
je
jle
fsubrl
pusha
lods
int
fwait
icebp
lret
mov
ficompl
dec
adc
pop
stos
jnp
jl
mov
dec
or
sbbl
shll
inc
pop
js
lcall
loop
jmp
xor
cmp
mov
lahf
jge
lods
call
out
mov
cmp
dec
cmp
mov
das
loopne
sti
into
cli
adc
sti
adc
mov
inc
lods
push
int3
cmp
enter
pause
in
loop
mov
ret
add
xor
pop
adc
xchg
lret
cmp
insb
cmp
mov
sbb
fistl
mov
ret
lret
hlt
enter
out
or
add
out
lahf
andl
fstpt
add
and
or
add
cld
mov
in
push
pop
pop
cmp
daa
jo
loop
ror
mov
aas
adc
fnsave
pop
mov
jns
int3
lret
testb
xor
arpl
mov
and
popf
mov
and
pop
push
inc
push
in
gs
jae
outsl
repnz
push
ret
icebp
dec
adc
jne
adc
addb
loope
rol
nop
push
das
push
out
mov
rolb
std
popa
fld
mul
enter
xchg
pop
mov
or
jg
ret
imul
mov
jmp
push
andb
inc
faddl
mov
fs
lret
cmp
stos
inc
popa
cmpsl
stos
sub
cmp
movsl
and
mov
xorb
xchg
jmp
mov
inc
in
adc
les
pop
and
inc
sub
pop
into
sbb
and
pop
repz
div
fcompl
add
addl
ljmp
xchg
or
jl
and
popf
cmp
insb
adc
add
pop
sbb
sbb
add
inc
dec
enter
lcall
call
nop
scas
in
jle
sbb
add
or
test
neg
and
inc
lret
inc
cmp
cld
push
out
outsl
jle
lods
push
icebp
aad
daa
hlt
sub
xchg
pop
jo
push
push
adc
rcll
adc
sbb
test
mov
sub
es
mov
out
cmp
addr16
mov
mov
movsl
sti
add
xor
push
fucomi
negb
mov
enter
mov
into
scas
xor
xchg
or
adc
jbe
push
mov
insb
jp
inc
xor
hlt
sub
into
mov
push
or
mov
and
ret
outsl
rcl
into
xchg
push
or
bnd
lock
mov
enter
es
adc
aas
sbbb
fnstcw
mov
mov
jl
push
dec
addr16
pop
xchg
notl
aam
stos
xchg
or
jnp
enter
nop
loopne
inc
aaa
jmp
pop
cli
sti
dec
adc
mov
mov
dec
enter
sbb
je
int3
jge
dec
lea
mov
jle
pop
les
sub
inc
int3
fisubs
test
jbe
or
dec
rcr
xor
xchg
push
das
mov
lcall
adc
add
inc
xchg
mov
aad
cmp
gs
pop
pop
or
outsb
enter
adc
mov
pshufw
stos
adc
repz
sub
lods
sbb
clc
in
sbb
loop
jb
orl
and
pmuludq
xor
popa
push
sbb
mov
inc
dec
jge
arpl
out
or
and
sbb
and
fcmovne
or
cmpb
in
repnz
adc
cmc
scas
stos
push
mov
xchg
movsl
jle
dec
jmp
and
orb
sbb
push
sbb
in
xor
and
scas
jnp
pop
jb
pop
ljmp
dec
mov
and
leave
mov
xchg
adc
sbb
je
jo
sub
inc
cmc
or
jo
stos
mov
mov
je
and
and
dec
loop
iret
cltd
xor
xor
inc
adc
push
or
add
mov
sub
or
gs
out
outsl
mov
dec
pop
dec
sbb
lock
mov
into
pop
sbb
fimuls
and
dec
sti
or
sbb
sub
dec
scas
pop
popa
data16
sub
lea
pop
addr16
cmp
aaa
sbb
cmpb
sub
lret
out
mov
push
mov
xchg
cmc
mov
data16
shr
pop
mov
mov
xchg
add
pop
sub
mov
lea
icebp
pushf
stos
lcall
scas
inc
cmp
mov
fs
out
and
xchg
inc
xchg
pop
sub
push
fsts
mov
sub
lret
scas
mov
popf
push
or
test
and
mov
fwait
je
aad
arpl
popa
mov
mulb
mov
or
call
in
stc
shrb
int
mov
pop
or
cmp
stos
add
xchg
inc
in
inc
inc
in
pop
sbbb
jns
int3
into
push
mov
js
or
xchg
push
pop
movsl
cmpsb
loop
gs
or
ja
sub
mov
xor
sbb
mov
js
out
aad
cmp
cmpsl
stc
xorl
aaa
mov
arpl
push
pop
rolb
or
and
xor
inc
mov
fs
cmp
pop
sub
in
aad
adc
scas
sbb
lods
ret
push
rolb
push
push
and
sub
sub
lock
dec
xor
xchg
pop
inc
add
lahf
xlat
sahf
jle
pop
cmp
xor
push
es
aam
xorb
push
clc
in
leave
daa
out
sub
mov
insb
cmp
and
adc
fnstenv
sbb
pop
std
mov
jg
or
sarb
scas
cmp
sbb
adc
add
sbb
lret
imul
push
cmp
jge
jbe
bound
push
cmc
sbb
enter
pushf
mov
orb
lcall
xor
fisttpl
sub
dec
pop
out
jns
iret
lcall
repnz
mov
test
shlb
jo
sub
lea
imul
sub
adc
or
fisttps
mov
stc
fadd
stos
bsr
or
cmp
dec
ljmp
ficoms
jp
ss
adc
pusha
loopne
mov
paddusw
ret
inc
jb
fldt
stos
out
out
cli
dec
xlat
jns
js
mov
xchg
add
push
sbb
dec
sbb
mov
iret
das
sub
sti
fdivrp
cmp
je
in
enter
lods
rcr
mov
aas
or
jnp
add
pop
mov
aas
cmp
nop
push
jl
xor
fmull
push
cmp
movsl
dec
push
or
add
enter
aam
push
sub
cmc
jne
pusha
xchg
fwait
inc
in
outsb
arpl
aam
pop
clc
mov
imul
mov
mov
dec
push
lcall
cmpsb
mov
fstl
lods
xchg
adc
pop
sbb
popa
mov
jecxz
xchg
cs
outsb
xor
push
test
fsubrs
cmp
ret
dec
jne
jecxz
sahf
push
sti
mov
lock
mov
add
push
adc
sahf
cmp
notb
cld
mov
dec
or
push
fwait
push
push
std
repz
mov
sub
mov
cmp
mov
mov
aas
out
negl
sbb
dec
and
inc
test
add
push
test
lods
cmc
pusha
out
add
mov
sub
and
push
in
or
mov
or
cmp
pop
shlb
ja
jl
sbbl
dec
fdivl
push
daa
dec
jo
pop
mov
es
das
push
jmp
and
std
jecxz
lahf
xchg
shl
add
dec
add
gs
xchg
testb
mov
and
out
push
mov
add
add
test
adc
inc
ljmp
cwtl
or
in
sbb
addr16
add
adc
outsb
in
out
mov
je
add
xchg
adc
xchg
testl
ror
sbb
add
xchg
jmp
cwtl
jnp
jo
mov
lcall
out
fcmove
addr16
cmp
push
push
repnz
pop
in
loopne
jle
cltd
mov
dec
xchg
mov
xor
outsb
cli
push
out
push
add
mov
mov
popf
push
jle
sub
loopne
cmpsb
xchg
jle
push
cmp
outsl
xor
sbb
xlat
jnp
mov
pop
das
mov
pushf
cmp
push
fucom
roll
es
mov
or
lods
ret
fwait
mov
data16
inc
jbe
dec
add
push
add
mov
enter
jno
outsb
mov
jmp
pop
mov
int3
in
inc
inc
int
mov
push
lahf
sub
loopne
push
mov
insb
mov
fsubrs
ret
push
jp
fstpt
outsl
jle
shr
outsl
pushf
jno
fnstenv
std
cli
lock
insl
jne
or
sahf
push
inc
sub
aam
hlt
mov
mov
mov
inc
and
sbb
fsubl
cmpsb
xchg
cmpsb
pop
cmp
cmpsl
pushf
push
adc
dec
test
adc
ficomps
mov
xchg
mov
mov
frstor
out
mov
sub
xchg
mov
add
lcall
mov
in
int
fisubrl
mov
ret
xor
fsubrs
cmp
fdivl
inc
mov
fwait
jge
call
add
fdivrl
ret
jns
mov
int3
icebp
ja
xchg
inc
cmp
sbb
out
mov
dec
jp
cmp
push
cmp
cltd
call
stos
mov
jmp
hlt
mov
pusha
imul
bound
jp
jbe
clc
daa
sbb
push
push
sbb
imul
push
in
lcall
aaa
push
in
mov
mov
jle
and
adc
cwtl
icebp
outsb
pop
or
test
adcb
call
and
and
mov
jmp
lock
jge
push
inc
pop
xchg
and
add
les
rcrb
enter
mov
fldl
dec
xor
or
lds
aad
dec
lret
fimuls
pop
or
out
decb
call
push
std
stos
dec
cmc
mov
and
cs
subb
lret
dec
lods
ret
push
add
notb
xchg
loop
dec
lock
lea
xchg
mov
movsl
push
fisubrs
daa
xchg
mov
int3
xorb
in
fldl
rcrb
lods
enter
fs
cltd
lock
jo
inc
push
cwtl
xor
loopne
add
fnstcw
popa
into
iret
lods
dec
mov
xchg
cwtl
inc
data16
cmp
popf
ja
fcompl
pushf
movsb
ja
or
fwait
cwtl
fistl
loope
mov
mov
cmp
out
cmpsl
fnstcw
mov
mov
jb
aaa
adc
xlat
in
or
pop
and
push
int3
ret
adc
rorl
adc
leave
push
or
sub
jo
mov
mov
sar
fs
cs
adc
mov
outsb
pop
imul
and
les
jg
lods
bound
shlb
movsl
cmp
jp
pop
pop
jno
sbb
sub
xchg
in
pop
fdivs
pop
ja
rorl
dec
cs
mov
into
in
in
inc
insl
in
push
add
sub
xchg
int
push
cmc
pop
loopne
mov
dec
add
xor
add
repz
mulb
imul
mov
lds
mov
int
mov
or
pop
gs
in
insl
sbb
mov
lahf
jg
or
sub
mov
add
nop
fsubr
xor
and
cs
cmpsb
push
xor
dec
xadd
or
ljmp
push
sbb
inc
sbb
int3
sub
test
negb
push
mov
pop
lret
cmp
cmp
adc
pop
int
jmp
lock
fwait
mov
cltd
mov
add
pop
clc
mov
mov
sbb
fisubs
popa
mov
hlt
xor
dec
leave
imul
repz
cltd
mov
lock
sbb
pushf
repnz
popa
sahf
or
add
gs
ja
in
jo
dec
out
jae
stos
popf
and
cli
arpl
adc
xor
out
jge
iret
add
pop
xlat
xor
sbb
test
inc
inc
sub
xor
cmp
test
test
lcall
adc
aaa
or
shlb
inc
stc
fsubl
push
mov
or
add
shrb
into
push
jmp
out
gs
inc
mov
xor
xor
lods
ja
test
lret
ds
dec
jbe
lock
ja
out
dec
mov
lock
ja
and
lret
xorl
leave
int
mulb
mov
adcb
sahf
lods
adc
out
mov
test
scas
test
test
jbe
push
push
outsb
jmp
pop
bound
xor
dec
call
lods
inc
sahf
das
lret
pop
int3
int3
outsl
iret
je
mov
mov
in
cmpl
ret
int3
imul
push
cmp
popa
pop
sub
stos
mov
lods
stos
loop
cmc
push
sub
loopne
mov
sub
add
fs
inc
js
mov
jae
in
in
xlat
inc
pop
sub
fdivl
inc
add
jae,pn
fiaddl
mov
pop
mov
mov
leave
fdiv
clc
std
shlb
popf
mov
into
cmp
cltd
addr16
jp
lret
in
add
out
xor
mov
mov
xchg
sbb
jnp
shlb
mov
stos
dec
lea
sub
cmc
fucomip
jle
in
sahf
popf
xchg
adcb
mov
bound
push
push
andl
push
add
js
and
jecxz
imul
mov
mov
lcall
sarl
ret
mov
push
xor
mov
sahf
jp
out
add
mov
pop
xchg
lods
mov
xor
inc
or
push
mov
in
or
mov
call
cmpsb
icebp
add
jp
xchg
jbe
es
and
push
inc
xor
inc
jb
mov
sub
pop
push
cwtl
fstpl
daa
or
xor
sub
mov
popa
dec
ljmp
cmp
push
outsl
subb
ror
mov
mov
inc
inc
dec
lret
pop
inc
xchg
pop
lret
sarl
int
cltd
dec
gs
pop
dec
and
cli
mov
lcall
lret
lock
inc
inc
sbb
fmuls
leave
push
inc
fs
mov
mov
jle
ss
ret
jo
push
popf
mov
fldl
or
add
xlat
cld
jl
push
sahf
sbb
add
xchg
cli
adc
stos
out
cs
mov
ficompl
addr16
addr16
fdivr
push
jbe
mov
cmp
movsb
fnstsw
jl
xchg
jns
sub
lcall
pop
mov
and
scas
sbb
xchg
clc
jbe
add
int
sbb
or
addr16
je
vphsubbw
add
mov
add
mov
xchg
dec
mov
in
push
lods
adcl
pop
hlt
and
shrl
icebp
jnp
mov
data16
push
push
imul
js
xor
rcr
adc
cli
insb
sub
adc
adc
xchg
mov
les
jae
xchg
cmp
lds
push
cmp
fidivrl
pop
add
fldenv
push
dec
mov
xchg
dec
mov
jecxz
pop
xor
adc
shrl
xor
mov
cmp
loopne
push
push
nop
popa
xchg
out
in
outsl
mov
pop
call
adc
ds
movsl
hlt
push
hlt
inc
mov
cmpl
mov
pushf
call
jle
or
pop
gs
fwait
xor
jbe
push
xor
adc
inc
js
or
dec
jg
inc
jo
hlt
das
mov
fwait
arpl
jmp
sub
push
or
mov
pop
xchg
iret
or
fisubrs
jp
pushf
inc
inc
add
jo
sbb
rcrl
sbbl
cmpsl
dec
cmp
lcall
push
pop
sub
dec
or
push
jmp
push
iret
jbe
inc
pop
cli
loop
into
loope
inc
mov
movsl
arpl
pop
push
pop
add
adcb
stos
dec
rclb
inc
rclb
and
xchg
enter
clc
pop
mov
filds
loope
and
add
or
ds
loope
add
imul
test
and
xor
les
jae
lock
sbb
imul
fcomi
fbld
nop
fidivs
cmp
lret
pop
int3
push
mov
xchg
ds
jle
fstpt
test
bound
jne
jge
stos
sub
daa
jne
push
inc
in
movsb
int
shll
loop
sbb
neg
sti
lods
dec
iret
rcll
movsb
adc
lods
in
sbb
popf
adc
repz
lret
mov
sub
lret
ds
add
daa
sbb
jnp
hlt
out
mov
fisttps
outsb
push
cmp
ret
cmp
cmc
pop
add
inc
xchg
push
push
pop
test
jb
ficomps
mov
add
mov
fcomi
aaa
mov
dec
fisttpll
lcall
adc
bound
fs
and
pop
inc
insb
fs
push
add
lock
out
lret
jp
jp
xor
lret
repz
sbb
mov
jns
pop
adc
add
lea
xchg
lea
shrb
cli
test
mov
stc
push
orl
addr16
movsl
sub
out
pop
adcb
mov
dec
outsl
out
or
sbb
fwait
and
mov
cld
imul
insl
cwtl
xorl
cmpsl
push
xor
cs
out
push
insl
scas
jg
sub
adc
cmp
aad
movsb
jmp
mov
out
imul
dec
and
scas
lock
jbe
sub
mov
into
add
sub
aam
sub
andl
inc
jl
popf
push
jnp
mov
sub
push
sbb
sar
dec
mov
mov
ss
mov
icebp
push
imul
lods
fidivs
and
stc
aad
jg
push
mov
lahf
mov
mov
loope
shlb
xlat
adc
sarb
sub
jmp
sbb
js
jnp
ljmp
xor
stos
fdivl
lahf
mov
lods
pop
jnp
or
xor
sbb
add
jae
jp
jb
addr16
jns
add
adc
adc
popf
lock
or
dec
out
pop
fdivs
shll
aad
imulb
sbb
cmpsb
push
push
lret
xchg
jnp
mov
inc
in
dec
mov
adc
fwait
sub
aas
sbb
aad
stos
mov
adc
adc
sar
mov
mov
loope
adc
mov
sbb
mov
aam
mov
push
mov
repz
out
es
push
in
jmp
dec
std
and
inc
or
stc
cli
xor
cmp
movsb
stos
jle
out
dec
sbb
or
stos
in
adc
inc
outsb
jl
mov
inc
mov
jmp
push
gs
xchg
and
inc
pop
jns
push
push
mov
mov
iret
mov
je
pop
movsb
je
sahf
popf
mov
js,pt
ds
leave
adc
insb
pop
dec
jmp
ret
xchg
js
leave
ja
pop
repz
push
jp
sbb
ret
repnz
pop
mov
xorb
data16
jge
and
aam
in
cli
outsb
pushf
push
pop
add
mov
xor
lret
mov
add
mov
jb
inc
sub
ss
clc
inc
pop
out
das
mov
jecxz
xorb
mov
mov
mov
add
pop
mov
and
inc
scas
inc
rolb
push
jmp
jae
mov
xchg
ror
mov
leave
rcl
pushf
imul
fsubrl
pop
orb
sbb
mov
out
enter
leave
cmc
pop
xchg
cmpsb
sbb
cmpsl
aaa
sub
je
jecxz
sub
or
pop
out
sub
cvtps2pi
or
adc
mov
cs
je
adc
fldt
xor
sub
dec
ret
xchg
mov
push
add
jb
push
mov
pop
scas
xchg
les
fisttps
lds
enter
js
pop
cmp
push
xor
lods
xor
into
aaa
cmp
shl
test
jae
sbb
xchg
cmpsb
adc
adcb
ljmp
test
ss
aam
in
adc
mov
mov
imul
pop
cs
lcall
out
int
lea
jmp
repz
cmp
pop
mov
pop
lea
cmp
loope
pop
pop
dec
pop
incb
ja
jl
into
pop
and
mov
jl
lahf
inc
jle
in
xor
popa
stc
mov
add
mov
fmull
les
xchg
insl
xor
xchg
or
outsl
cwtl
push
jbe
std
out
xor
or
enter
sub
and
sub
in
push
adc
mov
pop
mov
mov
inc
jne
mov
in
push
mov
jns
push
adc
push
shll
push
outsl
adc
cmc
outsl
dec
xchg
sbb
test
mov
mov
mov
stc
dec
jne
mov
add
addr16
sub
daa
sbb
dec
xchg
ja
dec
inc
fcompl
xor
aam
jg
out
fwait
adc
hlt
sahf
mov
mov
cs
sbb
insl
mov
xchg
adc
xor
and
lds
ret
push
das
and
or
ja
loope
cwtl
cmp
in
ret
mov
shrb
push
mov
push
rcrl
push
and
into
lock
or
popf
ret
cmp
fs
and
jns
stos
adc
add
ret
push
xor
sub
idivl
mov
loope
push
pop
in
push
jge
data16
mov
jmp
dec
cmp
fwait
cltd
inc
insb
dec
out
in
adc
or
mov
pop
inc
test
jge
das
nop
fdivr
mov
or
lret
sub
dec
pop
xchg
mov
jb
jo
mov
cld
xchg
dec
les
arpl
pushl
mov
or
sub
std
mov
push
loopne
mov
add
in
sahf
fcomps
jg
loop
test
push
int3
xor
loopne
push
fs
test
aaa
pop
inc
mov
rclb
frstor
pushf
ret
sti
inc
sbb
cmpb
cmc
imul
push
inc
dec
sbb
mov
mov
cmc
repz
mov
jo
xor
xchg
inc
mov
pop
xchg
mov
je
xorl
and
mov
lcall
xor
rorl
dec
mov
gs
mov
mov
inc
gs
and
pop
sar
push
mov
cmpsl
sti
imul
sub
push
add
pop
or
gs
lds
jp
in
xor
push
jns
xchg
dec
mov
pusha
push
movsl
mov
inc
pushf
sbb
jo
int
mov
sub
lahf
es
jo
pop
mov
jmp
mov
stc
pop
aam
sub
or
xchg
dec
jno
sbb
cld
push
cltd
xchg
dec
xchg
lcall
xchg
push
mov
mov
or
adc
sbbl
cwtl
mov
cmp
jg
fbstp
inc
in
push
jmp
lock
xchg
lods
scas
arpl
in
add
repnz
insb
insb
mov
pusha
mov
addr16
mov
cmp
testb
popa
dec
jne
loopne
arpl
mov
or
repnz
fmulp
add
insl
movzwl
lahf
xchg
lcall
addr16
inc
test
imul
pop
lods
push
add
push
pop
pop
scas
iret
cwtl
pop
dec
push
mov
mov
dec
shld
aad
xor
testb
push
orl
popf
rclb
stc
cltd
xchg
xor
cmp
adc
lret
pop
mov
loopne
lahf
insb
xchg
imulb
addr16
or
pop
aam
sbb
jne
ja
jmp
fimuls
scas
push
adc
and
lahf
pop
dec
or
pop
mov
insl
inc
pop
mov
lods
aad
push
sbb
adc
dec
and
sti
dec
cmc
testl
add
cwtl
add
sbb
push
jo
fistpll
sub
push
lahf
fisubrs
in
in
subl
mov
jle
sbb
aad
jl
test
dec
lods
outsb
lret
outsl
sub
popa
js
pop
outsl
loop
das
push
sbb
sbb
sub
movsl
inc
inc
in
adc
mov
rorl
ret
lock
divb
xchg
dec
mov
repz
pop
outsb
cmp
dec
jp
ja
aam
fistpll
xorl
lcall
lds
addr16
aas
add
ret
xchg
xchg
ljmp
push
inc
loopne
loopne
sub
fs
add
call
icebp
jns
inc
xor
inc
cli
test
push
jne
fs
mov
add
xchg
lcall
in
out
push
xchg
popa
mov
fidivrl
jnp
mov
xor
lods
mov
mov
jae
cmc
cmp
popf
int3
addr16
sbb
inc
daa
in
sub
roll
mov
push
rolb
enter
mov
into
cmp
out
and
push
les
loop
roll
sub
dec
add
rcl
jecxz
pop
push
mov
add
jl
idivl
xor
lock
push
sbb
cmp
mov
aad
sub
std
xor
xor
outsl
cld
xor
xor
push
xorl
inc
sbb
pop
mov
movsl
inc
cmp
push
mov
pop
icebp
test
outsl
sarl
dec
leave
bound
ficoms
jnp
hlt
adc
mov
pop
adc
dec
and
jle
cmpsl
mov
sub
mov
rcl
lea
xchg
loop
repnz
mov
push
out
jmp
pop
push
icebp
inc
xchg
imul
adc
rcl
dec
xchg
or
hlt
pop
popf
mov
cltd
inc
cld
dec
xor
mov
jo
xchg
mov
aam
xchg
mov
outsb
pop
jp
pop
imul
push
aam
push
fisttpll
add
in
xor
xchg
jno
jae
ret
fmuls
or
mov
jecxz
out
aas
xor
jnp
pop
fwait
icebp
sbb
pop
bnd
out
shrb
mov
dec
adc
nop
sbbb
loope
pop
and
cli
sub
pop
fldl
ljmp
sub
orl
jge
dec
cmp
ret
lret
cmp
cs
push
push
jmp
sub
add
and
cmpsl
xor
xor
mov
std
cmp
xchg
sub
mov
das
in
scas
mov
jg
or
loop
dec
ljmp
rcrl
sub
dec
mov
or
cli
mov
jmp
stos
and
and
xor
mov
sub
cmp
pop
les
mov
xchg
out
movsl
aam
sbb
adcb
sub
aaa
repz
add
mov
mov
xchg
cwtl
and
push
jbe
jb
jne
lcall
or
mov
dec
ja
pop
xor
cmp
add
jb
xor
mov
inc
std
test
add
mov
jle
sub
int3
lds
mov
scas
mov
sbb
or
sar
mov
mov
mov
xchg
lock
jae
jl
dec
push
add
lea
jmp
xor
inc
add
mov
sbb
sbb
and
pop
jg
mov
jecxz
adc
dec
pop
das
sahf
sti
jmp
cmp
int
or
xchg
sahf
push
and
cmp
pushf
loop
pusha
add
fs
adc
inc
mov
sbbl
gs
add
add
push
into
lock
add
mov
fcoml
and
mov
fsubl
and
jmp
and
xchg
addr16
or
sub
mov
push
xchg
xchg
rcrl
cmp
xchg
int3
jmp
mov
xor
xor
cli
lods
jg
aaa
jmp
mov
mov
out
arpl
xor
lret
jae
repz
pop
rcrl
loope
scas
pop
xor
int3
addr16
pop
cltd
addr16
insl
mov
jle
ret
clc
shr
adc
pushf
push
fdivs
xorl
fisttpl
sub
out
loopne
fsubl
cmpsb
ss
add
and
add
cmp
and
les
or
mov
movl
jecxz
jne
sub
lcall
cwtl
sub
imul
sahf
lret
mov
js
out
mov
sub
or
imul
rorb
pop
rorb
jl
bound
pop
mov
sub
push
out
imul
add
fdivs
mov
pop
je
push
cmc
out
add
bound
mov
popa
sbb
xor
adc
sbb
mov
mov
jle
add
fcoml
push
xchg
xchg
ror
sub
test
and
jge
sbb
jp
sub
mov
xor
int
push
lock
add
cmc
mov
mov
rcrl
fsubrl
sub
dec
outsl
mov
xchg
jo
or
or
cld
ljmp
rcll
mov
mov
xor
data16
and
cld
xor
cltd
insb
addl
dec
pop
jl
adc
fdivs
std
push
mul
push
lahf
lods
lods
sub
mov
sub
rclb
mov
cmc
mov
xor
sbb
or
or
mov
add
jp
imul
stos
xor
aam
inc
jno
mov
push
jb
pop
add
jne
xor
les
in
lahf
loope
xchg
dec
jecxz
popf
outsl
gs
and
pop
add
mov
lcall
fcoml
xchg
sub
int
adc
push
stos
aaa
add
mov
or
fsts
inc
jp
jb
ss
mov
mov
jb
imul
fildl
mov
mov
jb
out
inc
xor
ja
repz
adc
mov
div
sub
push
and
outsb
loope
fucomi
xchg
dec
fisttpl
xor
or
or
popa
push
cli
add
pop
push
mov
and
popf
jns
mov
mov
aam
movsl
xchg
outsl
into
push
test
push
andl
aad
add
iret
push
adc
ret
rcrl
jg
aas
addr16
dec
xchg
inc
mov
test
cmpl
or
jb
xor
or
popf
rol
cmovp
movsb
pop
push
cmp
add
push
or
pop
push
les
mov
jbe
out
lds
outsl
loope
mov
inc
add
call
mov
and
add
cmpsl
inc
adc
int3
shll
loopne
cmpsb
xchg
shlb
enter
imul
jl
or
movsb
mov
das
mov
je
lcall
push
jmp
orl
fs
sbb
jb
jne
ds
xchg
cmp
xchg
and
mov
cmp
fidivs
shr
mov
je
fwait
mov
rcll
add
mov
xchg
call
insl
mov
test
lret
test
adc
shll
je
clc
ret
cmp
jne
inc
cmp
jmp
push
and
popf
xorb
xchg
fwait
lret
nop
dec
inc
test
lds
nop
jle
dec
call
mov
test
or
mov
sahf
push
mov
fsub
adc
imul
pop
add
rcrb
jb
adc
fistpll
push
mov
adc
or
ficoms
in
jnp
lret
bound
in
fstl
pop
int
fs
test
sbb
gs
je
xor
aam
aas
sahf
inc
jnp
and
xor
and
insl
xchg
mov
faddl
and
sbb
cmp
inc
pop
adcb
idiv
into
dec
lock
in
xor
ret
out
mov
mov
pop
jp
fisubrl
push
push
mov
shrl
icebp
movsl
repnz
add
mov
rclb
popf
dec
and
scas
dec
test
das
dec
xlat
add
and
loop
fldl
pop
mov
sti
jecxz
out
leave
fldenv
xchg
mov
cmp
lods
insb
dec
test
mov
and
clc
out
inc
jo
jbe
ror
insb
loope
and
push
push
or
jp
ffree
ja
out
in
or
push
popf
pop
sub
call
xor
inc
cmp
data16
and
data16
xchg
loopne
push
stos
xchg
gs
clc
ja
outsb
sahf
lock
repz
arpl
xchg
sbb
jo
orb
and
lds
jnp
das
flds
scas
lods
out
orl
dec
mov
jb
rcrl
fwait
xchg
nop
call
sub
mov
and
add
pop
mov
add
fstpl
add
or
cmp
sbb
in
int3
dec
jae
lds
mov
cltd
ret
jns
test
push
jae
or
stos
sub
rcll
xchg
mov
sbb
push
rorb
xor
lds
repnz
cwtl
pop
jnp
iret
shr
repz
add
xchg
dec
sub
add
popf
xchg
cli
insb
into
imul
jmp
pop
push
and
xchg
cli
es
lea
cltd
cmp
xchg
jb
push
push
push
pand
sbb
xor
or
cmp
popa
dec
xchg
lret
scas
adc
mov
mov
add
pop
add
sbb
jb
jns
int
pushf
fisubl
pop
add
jl
jne
loope
mov
or
leave
call
cmp
cltd
hlt
imul
test
sub
inc
hlt
mov
pop
enter
pop
sahf
fstps
imulb
stos
or
scas
lock
push
fldt
fisttps
pop
jns
fldt
add
outsl
test
icebp
cmpsb
add
stos
fidivl
mov
xor
stos
xor
data16
sub
les
sbb
mov
push
outsb
shlb
push
imul
jge
xchg
cltd
pop
mov
xor
in
fnstenv
jns
mov
addr16
or
daa
pop
lcall
gs
jnp
dec
mov
pminsw
int
fistpll
push
in
mov
jno
fidivl
pop
iret
jp
sub
outsb
loopne
test
add
xchg
dec
sub
dec
out
pop
iret
mov
jae
push
add
loop
jmp
pop
fs
sbb
fsts
mov
cmp
lods
lea
ja
fisubl
xorl
xchg
mov
cmpsb
and
push
cmp
sarb
sub
fwait
movsb
mov
cmp
leave
cmc
sarb
dec
test
xchg
pop
popa
xchg
repz
push
rep
pop
dec
clc
cmpsl
in
cmp
inc
jo
pushf
push
push
push
jmp
cmp
ret
jnp
jmp
stc
addr16
or
fldt
add
test
mov
xor
daa
push
add
in
dec
sahf
lds
orb
ljmp
rorl
add
pop
mov
dec
sbb
adc
and
pop
dec
mov
lods
sbb
out
mov
inc
dec
pop
sbb
fdivp
sbb
jae
aas
sub
and
sbb
xor
mov
fwait
ss
pop
and
cmp
add
mov
test
dec
fists
insl
adc
or
mov
ss
cmpsl
push
fcomps
dec
pop
jle
ret
push
ljmp
mov
movsb
sahf
aas
mov
push
mov
scas
jl
insb
test
aaa
cmpsl
jno
jns
fdivs
lods
xchg
divl
aas
xchg
scas
xor
popa
inc
inc
xor
pop
mov
aad
mov
jno
or
dec
leave
shrb
das
iret
and
mov
fld
push
sbbb
nop
ret
hlt
xor
std
mov
and
shrb
dec
cli
lcall
lods
stos
push
frstor
shlb
fldenv
test
push
test
cmp
mov
push
inc
test
out
xor
push
ds
lock
mov
and
stc
inc
pop
jbe
aad
cmp
adc
mov
fcomps
lret
mov
repz
mov
repnz
adc
xor
mov
add
add
xchg
sbb
mov
inc
jo
repnz
nop
push
xchg
or
mull
sti
in
fistpll
add
pop
xor
mov
enter
pop
outsb
fcompl
mov
add
popa
xchg
cmc
mov
push
jne
enter
out
js
pop
js
lock
mov
cmp
lcall
leave
cwtl
mov
push
repz
lock
pushf
fildll
icebp
xor
xchg
sbb
and
lret
std
mov
movb
cmpsl
pop
jmp
jge
jle
push
cmp
cli
or
and
out
ret
mov
push
fcomp
sbb
icebp
sub
adc
pop
in
xor
and
arpl
pop
addr16
je
mov
mov
jo
jmp
and
loope
arpl
jp
adc
dec
je
andl
daa
jg
data16
adc
cmpsb
hlt
out
inc
adcb
dec
jb
lret
mov
test
ret
out
jmp
fwait
push
adc
pop
xor
adc
and
sub
insb
jge
or
dec
mov
push
inc
sbb
sbb
xchg
dec
xor
pop
int
testl
fwait
aam
xchg
scas
sahf
sbb
subl
lret
out
cmp
loop
lods
in
pop
mov
xchg
push
push
mov
mov
mov
push
aad
jno
dec
cmpsl
mov
xchg
jnp
in
int3
sti
push
inc
mov
jne
dec
sub
stos
fdiv
sub
movsb
and
mov
in
xlat
data16
and
or
cltd
xor
pop
dec
inc
push
test
mov
xorb
inc
mov
xor
jno
jnp
stc
jnp
mov
mov
dec
or
pop
lock
int
mov
mov
ret
mov
mov
jle
notl
xor
sub
imul
pop
stc
adc
push
jb
mov
mov
fs
xchg
mov
daa
and
mov
xchg
push
and
addl
pop
mov
shll
mov
jbe
and
add
pop
lret
out
xor
pop
xchg
push
push
mov
gs
jbe
dec
pop
push
sub
mov
mov
out
fsubr
addr16
loope,pn
dec
push
in
xchg
mov
push
lea
icebp
test
bsr
mov
sub
or
mov
mov
icebp
jle
xor
push
add
sbb
push
inc
pop
icebp
flds
push
fistl
seta
mov
test
and
scas
and
cli
lods
faddl
cltd
mov
add
and
mov
aaa
adc
lret
sarl
aas
lcall
jns
lods
push
nop
pop
testl
js
sbb
mov
insb
push
in
pop
cld
nop
sbb
sbb
sub
inc
xchg
dec
movsl
push
jl
jge
pop
lods
popa
ret
and
shlb
test
cmp
fdivl
enter
mov
dec
push
inc
mov
push
leave
repnz
movsb
inc
icebp
pusha
insb
add
mov
icebp
cmp
aam
jns
test
inc
pop
xchg
stos
or
mov
sub
add
es
adcl
push
mov
sbb
scas
cmp
addl
mov
negl
cmp
in
sarb
inc
leave
cmp
xor
insb
loop
fisubrs
inc
push
xchg
ficomps
pop
fisttpll
jl
mov
jecxz
stos
in
rol
hlt
mov
mov
decb
loop
je
xchg
jae
dec
js
dec
mov
adc
sbb
test
and
loopne
and
loopne
stc
enter
imul
shll
jns
and
add
pop
xchg
mov
jo
outsl
jnp
push
mov
jg
pop
sub
adc
push
xor
int3
bound
imul
hlt
pop
and
push
in
dec
ficoms
xor
push
orps
aas
mov
out
cs
mov
cmp
scas
inc
pushf
out
adc
int3
jnp
mov
and
mov
ds
xchg
rcr
outsb
sbb
sarl
sbb
dec
adc
xlat
cmpsb
adc
ficomps
sub
loop
and
mov
or
repz
inc
pop
enter
jno
sarl
scas
and
push
or
pop
les
es
dec
frstor
mov
in
test
lahf
rcll
ljmp
lcall
cmc
pusha
xor
adcl
sub
in
or
sbb
popa
or
adc
cmp
pop
jnp
inc
filds
bound
xor
push
jl
out
inc
or
push
pop
insl
rolb
and
jp
pusha
jge
add
mov
in
jnp
lcall
cmp
cs
fistpl
test
loopne
and
xor
loopnew
cmp
xchg
push
xchg
push
roll
sbb
movb
popf
sub
sarb
push
shl
nop
pop
xchg
mov
jnp
push
sub
neg
push
sub
cld
and
push
testb
in
mov
loopne
jl
xchg
mov
sbb
xchg
pop
xchg
sub
add
fdivrl
xadd
int
enter
lret
push
pop
je
add
mov
push
sahf
call
in
or
fs
mov
mov
mov
mov
jecxz
sub
in
mov
xlat
xchg
pop
daa
inc
pusha
dec
mov
loop
loopne
dec
sbb
daa
cmp
flds
loope
mov
loopne
icebp
adc
ds
into
loope
popf
cltd
jbe
adc
ret
dec
and
xchg
lret
stos
xchg
mov
mov
enter
bnd
popa
xor
arpl
icebp
cmp
jle
push
lret
mov
jp
xchg
pop
dec
lock
push
test
inc
or
inc
pop
and
data16
cmpsb
xchg
mov
dec
lcall
frstor
lahf
pop
shl
insl
js
mov
push
lret
dec
pop
aas
cmc
mov
movl
loope
mov
dec
ljmp
mov
and
xchg
mov
into
xchg
imul
pop
pop
lret
aaa
push
repnz
clc
jns
dec
mov
or
scas
inc
sti
xor
scas
adc
xchg
addr16
and
ficompl
push
lods
push
cmp
pop
mov
add
pop
pop
clc
adc
pop
stc
pop
fcompl
inc
fistl
aam
inc
dec
ljmp
fadd
push
inc
push
clc
sbb
in
mov
mov
nop
std
add
nop
sub
cmp
ss
mov
or
or
add
mov
cwtl
add
adc
cmpsl
repnz
adc
mov
out
mov
pop
pop
xor
cwtl
aad
jnp
test
and
iret
movsb
fsts
dec
sbb
mov
sbb
and
pop
adc
jb
cmpsl
jp
jecxz
subl
cmp
push
add
inc
mov
mov
lock
rol
cwtl
sub
cmp
arpl
mov
push
loope
inc
popa
jl
gs
sarb
inc
clc
addr16
pop
xlat
jb
jmp
or
add
pop
rcrb
mov
pop
test
xchg
cli
ljmp
stos
inc
js
mov
rcrb
aad
pushf
rcll
pop
into
iret
mov
aaa
inc
inc
aam
dec
sbb
xchg
mov
cmp
dec
js
jne
sub
mov
xchg
mov
dec
das
imul
xchg
shrb
loopne
jp
cmp
dec
lret
loop
mov
jns
mov
inc
mov
pusha
and
sahf
or
mov
add
jno
int3
inc
cmp
jns
push
mov
aam
add
outsl
lods
pop
dec
fmuls
scas
das
mov
xor
mov
sbb
jmp
push
outsb
out
cld
lret
cmp
mov
std
lods
cld
fidivrs
dec
insb
lods
xlat
xchg
mov
adc
jnp
inc
push
sahf
orl
jg
fimuls
popf
int3
cltd
xchg
jnp
inc
pop
andb
xor
out
mov
fcmovnb
rclb
imul
sub
xor
jbe
filds
ja
in
test
test
jne
jbe
ds
mov
cmp
rcrb
adc
cmpsb
ljmp
pushl
dec
jns
or
call
push
xchg
jae
or
pusha
add
cltd
mov
cmc
inc
iret
pop
inc
mov
xorb
aam
popa
lods
addl
ficoms
aaa
mov
jnp
aad
push
xor
shrl
pop
add
out
stos
add
call
pop
dec
popa
testb
or
in
pusha
pop
sahf
or
pop
sti
inc
out
cmpsl
lock
sbb
movsl
add
sbbl
fwait
orb
sub
adc
dec
jno
fisubs
enter
mov
sub
rolb
sar
add
inc
inc
sbb
movsb
bound
fadds
repnz
lods
cmp
clc
fistl
sub
comiss
lods
xor
adc
mov
jnp
test
or
inc
and
mov
sbb
adc
iret
or
sub
adc
mov
cmp
aas
mov
loopne
xchg
js
or
daa
and
aaa
sub
int
bound
test
pusha
fsts
lods
mov
dec
iret
pop
test
cmp
ffreep
fiadds
pop
jmp
aad
hlt
movsb
sub
or
jmp
out
inc
push
fbld
mov
ud1
jb
jle
pop
or
dec
adcl
mull
xor
fwait
jnp
adc
cs
int3
loop
and
jo
fists
mov
pop
mov
push
jnp
subl
daa
sub
divb
inc
jae
mov
or
shr
dec
pop
cwtl
inc
call
xor
vmread
pop
leave
xchg
lret
or
loopne
inc
fisubrl
push
arpl
and
jo
cli
sarb
push
jbe
popa
pusha
cs
fisubrs
es
mov
xor
mov
push
cmp
cli
cs
insb
mov
add
sub
sbb
sbb
test
out
out
leave
cmp
add
inc
inc
push
leave
add
es
outsl
jg
js
push
adc
cmp
push
mov
jmp
jge
aad
dec
scas
scas
into
dec
aas
fnsaves
adc
and
pop
shr
cltd
mov
ljmp
jo
push
dec
cmp
jg
mov
or
lods
addr16
push
adc
jge
xchg
int3
imul
push
or
and
stos
in
cmp
addps
sbb
fsubr
fwait
stos
inc
or
dec
cs
xor
mov
daa
repz
pop
and
aam
inc
pop
xor
iret
pusha
inc
aaa
jne
inc
adc
push
daa
xchg
add
rolb
xchg
cli
lret
dec
fcomp
mov
shlb
sub
dec
loopne
inc
imul
xchg
sub
pop
mov
ret
idiv
ret
fisubrs
cmp
into
outsl
sbb
dec
jl
mov
mov
test
gs
out
mov
dec
add
mov
fimull
inc
imul
sub
pop
mov
jge
or
xchg
add
int3
xchg
add
insb
mov
cld
leave
sbb
cli
pop
adc
fdivr
lods
shll
xchg
xchg
call
in
inc
cmp
cmp
cld
sarl
adc
pop
xor
lods
push
push
std
jecxz
sbb
mov
adc
hlt
ljmp
sbb
mov
sahf
xchg
sub
pop
mov
sub
xchg
pop
call
les
pop
lret
mov
shlb
sub
jmp
js,pn
and
into
jp
and
enter
int
inc
xor
cmp
pop
inc
push
sahf
cmpxchg
imul
push
test
pop
jne
in
dec
lea
mov
xchg
mov
push
imul
rcrb
outsl
dec
jbe
cs
or
lea
jbe
outsb
and
jb
jle
into
shlb
sub
pop
sbb
jg
test
inc
xchg
and
call
cmp
adcl
in
adc
xchg
cmpsl
pop
sahf
dec
rorb
lret
in
dec
add
call
inc
pop
dec
xchg
cmp
adc
add
push
test
leave
mov
adc
rol
mov
stos
jns
push
push
dec
addr16
lret
cmp
or
gs
dec
pop
in
xchg
fdivs
fcomps
movsl
out
xlat
push
data16
in
and
sub
cli
mov
sub
adc
adc
add
in
sarl
and
sub
lds
jp
dec
jp
repnz
sti
fsts
mov
pop
cmpsl
push
and
fs
xchg
cmp
stos
xor
inc
movsb
outsl
cltd
cmp
inc
mov
aad
test
aaa
test
mov
push
push
fs
pop
into
cmp
loope
add
in
and
enter
in
mov
int
mov
mov
imul
dec
xchg
cs
cltd
xor
inc
sti
or
les
mov
push
mov
mov
ja
sbb
lahf
push
imul
repz
xchg
stos
xor
dec
sahf
sub
sub
push
repz
mov
mov
push
mov
lods
in
ja
data16
ljmp
movsl
popa
xchg
clc
sbb
ss
pop
pop
lea
push
add
insb
dec
cwtl
xchg
jno
push
adc
xlat
sub
cmp
inc
outsl
je
ret
loopne
hlt
cmc
in
pop
jb
mov
lods
out
mov
dec
push
xchg
cmp
pop
adc
les
aam
icebp
push
and
push
push
icebp
sub
dec
lods
mov
mov
test
pop
negb
adc
sarl
nop
mov
mov
and
mov
sub
cmpl
lock
cld
faddl
mov
mov
adc
aad
jns
pop
add
hlt
out
popf
movsl
hlt
xor
pop
mov
icebp
cmpsl
cmpsb
ds
pop
imul
push
mov
pop
mov
lods
mov
cli
notl
push
repz
cmp
jp
fsubs
mov
mov
xor
mov
xchg
aam
xchg
xlat
cmpsl
insl
mov
cmp
inc
movsb
mov
das
push
test
adc
rcll
pop
adc
jecxz
dec
std
jmp
mov
fdivrs
sbb
int
jg
pop
dec
ja
mov
repnz
mov
cmp
jnp
nop
data16
fisttpl
pop
aam
arpl
xchg
xchg
push
cmp
lret
add
dec
cmp
lods
cmc
jo
nop
mulb
daa
cmp
fwait
dec
pop
mov
mov
dec
testb
fs
js
jmp
mov
cmp
je
dec
es
sbb
scas
pop
jno
jl
js
jl
mov
jmp
sbb
insb
xchg
xchg
cmp
imull
jb
inc
cli
add
data16
or
roll
jbe
stc
in
inc
addr16
sub
loopne
or
out
push
or
cltd
js
adc
xor
jg
push
sub
sarb
dec
mov
dec
and
fcoml
mov
dec
or
in
jg
sbb
mov
mov
or
sub
and
or
mov
incb
adc
push
cltd
dec
fsubrl
pop
test
out
sbb
test
fildl
xor
aad
jge
lcall
repnz
insl
lods
mov
aad
sbb
jbe
cmpsl
xchg
sub
jg
mov
lea
shr
mov
mov
call
pop
loop
dec
pop
lret
scas
pusha
mov
cmp
adc
fwait
and
cmovo
ds
cs
data16
dec
test
inc
movsl
cmp
sub
inc
lods
imul
sbb
push
aas
stos
sub
imul
xchg
fldt
pop
sub
dec
lock
stos
test
iret
imul
sbb
xor
icebp
in
aam
and
mov
push
ret
mov
insb
xchg
mov
mov
sahf
lods
leave
movsb
mov
movsl
mov
bound
jmp
xlat
dec
and
pop
dec
call
jno
sbb
jb
xor
xchg
mov
lods
notl
sub
rorl
test
shll
clc
repz
mov
mov
cmc
ficoms
mov
inc
cmc
cmp
jbe
dec
sub
sub
addb
mov
adc
sbb
add
mov
add
add
out
sub
cld
into
popf
xchg
push
in
shlb
jns
sarl
fstpt
hlt
out
pop
xchg
clc
data16
jne
mov
mov
pop
ds
mov
sbb
xlat
add
fcoml
jg
lahf
adc
push
dec
test
push
mov
mov
push
outsl
dec
dec
clc
inc
mov
cmp
mov
lods
cmp
jle
dec
shll
in
xchg
xor
mov
xchg
in
cmpsl
fbstp
lds
xchg
dec
jo
mov
aas
adc
dec
mov
jno
xor
ljmp
mov
stos
adc
mov
push
aad
daa
push
add
fsubl
inc
mov
push
ret
push
test
xchg
stos
xor
push
loope
enter
bsf
mov
push
mov
jbe
filds
ss
pop
or
out
lea
adc
mov
and
pop
shl
nop
dec
push
add
sub
lods
fistl
notl
pop
movsb
mov
sub
les
movsl
repz
jae
outsl
push
fisttpll
sub
push
dec
or
leave
xor
and
test
addr16
shll
or
jmp
jmp
testb
mov
push
test
lea
in
scas
push
adc
push
imul
repnz
xchg
dec
sub
testl
cmp
inc
jo
scas
inc
sti
out
movsb
leave
jmp
test
inc
add
inc
call
mov
aas
mov
movsl
or
fs
gs
xchg
rorb
cld
dec
add
cmp
aam
lods
and
adc
cmp
mov
inc
movsl
and
stos
xor
mov
mov
sub
lcall
sub
xchg
mov
cs
add
inc
xchg
sub
bound
js
sti
ja
xchg
loopne
pop
mov
inc
cmp
sbbl
sbb
fucomi
lock
movsb
and
xchg
xor
jae
xor
fwait
add
xor
jp
push
cmp
clc
test
jmp
out
rcr
mov
sbb
inc
xchg
pop
dec
inc
rorb
pop
and
adcb
jl
adc
adc
repz
call
ficompl
and
pusha
xchg
gs
out
filds
outsl
fisubrs
xor
out
lret
das
lcall
cmp
ljmp
cmpb
pop
ret
adc
dec
push
movsb
lds
fldl
jl
fstpl
xchg
loop
idivb
adc
hlt
mov
nop
cmp
rorb
into
loop
mov
cwtl
stos
fmuls
add
shrl
mov
and
or
test
push
sub
jb
adc
cld
cmp
es
stc
inc
xor
xchg
push
in
cmp
in
mov
push
sti
int
in
jb
outsl
and
call
jle
push
movsb
hlt
mov
rcrb
jmp
mov
and
mov
xchg
mov
ss
rclb
or
mov
jmp
std
cmp
dec
call
sbb
push
lahf
mov
idivl
mov
mov
cmp
mov
push
cmpb
xor
add
sbb
das
std
pop
mov
pop
pop
lcall
cld
or
push
add
pop
sbb
jecxz
add
sub
out
xchg
lret
sub
jge
lea
xchg
inc
mov
add
inc
adc
cltd
push
popf
pop
push
shl
push
popa
cmp
adc
dec
inc
hlt
stos
push
cmp
dec
loope
lcall
xorb
pop
xchg
data16
mov
xchg
lds
xrstors
fildl
xchg
in
das
push
pop
push
push
sahf
insb
sahf
bound
out
sbb
enter
sahf
pop
loope
insb
fldl
dec
negb
sbb
pop
dec
je
ret
mov
xchg
cmp
jg
lret
push
orb
jl
jp
in
inc
out
or
jp
xor
bound
xor
and
outsl
lret
fcomp
or
add
xor
into
mov
pop
jmp
rcll
adc
mov
lcall
add
cmp
dec
ljmp
into
mov
pop
pusha
mov
fldl
push
sub
cmpsb
mov
int3
iret
fcoms
xchg
mov
pop
js
imul
cmpsb
and
mov
iret
lods
loop
mov
cs
inc
jge
int
inc
scas
stos
dec
or
rorl
adcl
push
inc
out
and
pop
adc
dec
subb
cltd
jne
fwait
mov
and
pop
jle
in
xor
jecxz
pop
mov
push
addr16
jmp
push
jb
pop
inc
jns
dec
clc
jl
mov
mul
cli
nop
cmp
clc
mov
dec
xlat
push
cltd
mov
shlb
stos
call
fistl
adc
je
xor
icebp
or
add
nop
jl
mov
inc
jle
push
std
sbb
adc
subb
sbb
mov
push
lock
fldt
dec
inc
rolb
scas
pop
test
je
mov
mov
shll
mov
loope
daa
fcmove
hlt
jno
inc
push
cld
test
xchg
cmpsl
cmp
push
mov
fwait
cmp
mov
mov
push
adc
nop
int3
sub
mov
addr16
inc
cwtl
inc
xchg
pop
int3
mov
mov
sahf
orb
pop
xor
mov
insl
stc
jo
orl
rcr
lea
das
cwtl
arpl
mov
pop
and
out
and
xchg
or
test
sbb
adc
pop
std
mov
mov
pop
ds
test
loop
mov
nopl
pop
cmp
aas
fsubrs
lret
fwait
inc
cmpsl
inc
inc
sbb
jbe
mov
cwtl
sub
pop
repnz
dec
jae
xchg
mov
xchg
dec
shrb
jp
jne
sub
sysenter
or
xchg
mov
lret
pop
movsb
push
xor
sbb
xor
fwait
mov
inc
fimuls
lcall
fmull
mov
sbb
out
lcall
outsl
out
mov
add
outsb
cmp
push
mov
push
push
xchg
jno
lock
and
push
add
roll
pop
ficoml
jnp
in
lret
fnstenv
movsb
andb
add
xor
lahf
sbb
and
sbb
lds
div
push
jle
aas
in
push
adc
adc
mov
dec
imul
adc
cmpsl
sub
mov
dec
mov
cmpsb
cwtl
mov
jb
sub
xchg
jb
jecxz
inc
mov
outsb
pop
rcr
push
adc
pusha
mov
sbb
lcall
rcll
cmpsb
es
cmp
cmp
xor
test
push
rcll
sbbb
mov
adc
cmp
dec
jge
xor
loope
subl
into
nop
cs
fs
xor
adc
mov
pcmpgtd
fs
mov
sub
pop
jl
lea
sub
je
push
push
nop
decl
out
push
inc
pop
cmp
pop
or
sbb
push
pop
jp,pt
push
ds
ret
incb
das
cltd
popa
mov
test
movsl
cltd
sbb
push
sbb
mov
dec
jb,pt
push
sub
sarb
mov
test
ja
push
lret
ds
cmpsl
or
sub
add
cmove
xor
roll
sub
cmp
cmp
adc
jle
and
mov
cli
mov
inc
es
mov
lea
clc
jg
ds
loope
and
dec
into
mov
test
push
xchg
les
in
in
cmp
aad
sahf
ljmp
jb
or
cmpsl
xor
test
insl
xchg
push
sbb
jns
call
adc
cmp
daa
pop
push
lds
es
loop
and
push
pop
adc
xchg
ror
jg
add
push
sub
cmpb
stos
popa
add
shll
sahf
aaa
icebp
les
xchg
mov
lods
nop
in
lahf
pushf
xor
mov
pop
fwait
sbb
sub
mov
or
daa
icebp
divb
xchg
push
test
or
ret
inc
jecxz
mov
adcb
fisubl
jbe
pop
pop
mov
lcall
sbb
leave
test
fidivrl
adc
out
sbb
xchg
xor
addps
sbb
push
or
add
xor
cmpsl
repnz
into
ja
cmpsl
inc
enter
ds
out
mov
mov
push
lods
out
dec
adc
xor
fs
mov
mov
rolb
mov
pusha
inc
pop
out
and
jmp
lret
insl
jns
mov
pop
repz
inc
xchg
call
xchg
add
xor
pop
jno
mov
inc
mov
and
sbb
bound
jo
arpl
aad
sbb
jo
jnp
pop
jl
je
mov
cmp
ljmp
dec
inc
sbb
js
imul
das
add
sbb
xchg
push
jnp
das
js
loopne
addr16
mov
or
sbbb
rolb
xchg
mov
out
pop
nop
mov
xchg
mov
jb
dec
sbb
cmpsl
maxps
xchg
lods
jmp
ds
repz
dec
sbb
mov
dec
sbb
shrl
mull
das
mov
xlat
sti
dec
loopne
inc
imul
dec
or
in
sarb
sbbl
hlt
sub
inc
fimuls
dec
pop
pusha
jmp
cmc
sti
movsb
or
sub
xchg
or
cltd
xchg
pop
scas
cltd
push
je
jmp
lret
das
inc
jno
cmp
test
test
fsubs
sbb
clc
pop
inc
mov
mov
cmp
mov
and
stos
es
in
aad
sti
sahf
stos
out
add
stos
sbb
mov
or
xor
lret
ljmp
call
fbld
clc
mov
out
jecxz
push
cltd
stc
add
sbb
jl
test
std
sti
dec
sub
frstor
out
ds
sbb
jge
out
sbb
inc
xchg
xor
popa
andb
hlt
aas
push
xchg
loopne
jbe
and
pop
imul
das
std
ror
pop
pop
outsl
pop
or
push
and
cwtl
pushf
mov
add
mov
xor
mov
arpl
and
jno
orl
push
jae
dec
sti
negb
push
ret
mov
push
xor
pop
or
push
cmp
mov
pop
pusha
adc
loope
sub
add
cmp
cmpsb
pop
jg
and
leave
jne
int
xor
jg
cld
imul
fsubs
xchg
int
mov
ja
or
sbb
cli
cli
adc
pop
xchg
stc
mov
stc
fs
cs
xor
test
out
lret
dec
mov
ret
sub
ja
stos
icebp
xchg
xchg
cs
adc
int
mov
jns
jno
pop
and
mov
iret
add
xor
lods
add
test
push
add
xchg
cmp
xorb
or
sti
daa
stc
lret
lahf
ds
stc
mov
cs
inc
or
popa
inc
push
xchg
fiadds
cmp
rolb
sbb
sbb
scas
in
jno
pushf
sub
pop
dec
addr16
push
xor
subb
rorb
repnz
inc
sub
stos
cmc
xor
ret
loop
pop
std
test
lods
pop
les
adc
imul
mov
sbb
add
mov
inc
test
shl
push
pop
mov
lods
lods
in
call
push
mov
sbb
das
xor
push
mov
xlat
sub
push
out
jecxz
iret
xchg
fldcw
mov
and
sub
divb
inc
loope
loope
sub
stos
xchg
lock
and
mov
fisubrl
int
stc
xor
mov
fisubl
mov
nop
imul
push
fisubrs
insb
pusha
enter
sete
dec
add
fs
mull
jmp
xchg
mov
js
mov
enter
imull
stos
and
sub
scas
adc
movsl
fs
push
push
fimull
pop
xor
sbb
jbe
pop
sub
nop
and
cmpsb
xor
push
sar
fcmove
push
loop
dec
dec
ret
in
sbb
mov
jmp
jecxz
loopne
jecxz
push
sahf
rcr
test
in
test
sub
lret
bound
je
sbb
mov
add
jae
add
mov
fs
pop
cmp
addr16
aaa
mov
add
inc
push
fldl
lret
pop
clc
adc
test
mov
lret
xchg
mov
cmpsb
mov
sub
inc
mov
imul
adc
inc
pop
dec
imul
xchg
loop
push
js
pop
cmpsl
cmp
or
fstps
inc
mov
imul
or
add
mov
rcrb
das
jno
pop
insb
xchg
mov
mov
xchg
mov
adc
cmpsb
mov
lret
int3
cmp
or
cmpsl
lcall
add
mov
lret
fs
cmc
sub
popl
dec
jb
sub
xchg
jecxz
sub
cmp
pop
or
inc
or
push
jns
scas
pop
test
jbe
leave
cmp
mov
cmpsb
scas
arpl
into
in
fisubs
sub
sbb
mov
push
sub
popa
xor
and
sub
in
addb
shr
adcb
mov
jne
cmpsl
xor
cs
fcoms
mov
adc
jbe
jno
xor
cmp
xor
out
mov
push
insb
mov
int
jmp
pop
lds
ja
inc
xchg
insl
fnstcw
xor
jae
push
xchg
mov
imul
lret
scas
cmpsl
es
jl
dec
adc
xchg
pop
mov
je
cmc
sbb
shrl
dec
sbb
jp
inc
push
addr16
fldt
daa
mov
ret
lret
dec
fwait
pusha
stc
out
data16
fcompl
xchg
xchg
xchg
mov
ds
aam
in
add
adc
int
mov
cs
mov
xchg
pop
cmc
xchg
ja
push
in
add
inc
jg
fsubrs
loopne
mov
add
lcall
inc
jp
push
scas
cld
shlb
lahf
xchg
xchg
pushf
pop
daa
ret
popa
or
iret
push
std
mov
dec
mov
mov
in
jecxz
sbb
scas
repnz
inc
mov
mov
dec
inc
mov
pushf
xor
pop
insl
mov
pop
push
fldl
cmpsb
xchg
add
mov
xor
jb
sbbb
inc
dec
cmp
out
or
inc
pop
xchg
mov
cmpsl
das
inc
aad
int
sbb
sti
sub
fs
icebp
lds
lods
pop
rcrl
add
push
mov
andb
negb
ja
xlat
sub
addb
xchg
sub
and
insl
dec
mov
in
mov
mov
pop
iret
inc
addr16
jecxz
test
mov
mov
sub
jmp
push
xorb
push
lock
jmp
rcr
or
bound
xchg
dec
mov
stos
pop
lds
jle
ja
adc
push
xor
out
cmp
pushf
fs
lret
cld
jbe
mov
dec
push
mov
clc
out
fstpt
shlb
enter
dec
or
iret
leave
imul
pop
mov
adc
out
inc
imul
inc
std
mov
clc
adc
sub
bound
rcrl
pop
scas
jno
mov
mov
shll
mov
dec
dec
xor
cmp
fwait
jno
mov
scas
jl
push
inc
cmp
add
in
ds
or
scas
js
nop
inc
or
jl
cmpsl
imull
or
dec
out
xchg
shll
sub
js
imul
fisubs
inc
cwtl
outsb
jle
lret
inc
mov
cmp
lea
push
lret
push
mov
push
icebp
cwtl
mov
fcomi
mov
dec
std
xchg
out
or
mov
mov
cmp
or
lret
inc
and
or
or
adcb
ret
mov
or
test
pop
out
cld
arpl
push
pop
movsb
movb
xor
mov
rcl
add
dec
outsb
xor
dec
xor
bound
and
mul
mov
and
inc
loopne
inc
sbb
movsb
and
adc
jp
add
jle
jl
and
mov
mov
pop
bound
jne
push
jne
pop
cltd
outsb
je
fwait
mov
inc
sarl
out
enter
mov
scas
out
jns
scas
repnz
mov
push
jge
fcomps
stos
mov
add
out
inc
push
xor
cwtl
call
push
xchg
inc
adc
adc
fmulp
add
outsb
mov
inc
push
jnp
push
push
xor
lret
and
sarl
jmp
xchg
mov
addr16
imul
jne
adc
out
adc
and
movsb
fnstcw
in
out
insl
repnz
cs
mov
or
sub
inc
jp
std
jbe
fs
jmp
and
das
mov
add
lret
in
xchg
jp
in
lahf
mov
push
dec
je
je
mov
and
sarl
js
scas
pop
sbb
and
push
in
xchg
xchg
mov
jne
and
xlat
push
xor
xchg
xor
xchg
push
jae
hlt
jecxz
jb
pop
repnz
jecxz
or
sbb
pop
or
push
call
test
pusha
insb
mov
cmp
bound
push
or
dec
lods
lods
sbb
push
adc
push
mov
mov
test
fimull
in
sarl
push
aam
outsl
in
aam
mov
ljmp
adcl
fwait
adc
sub
cmp
xchg
das
pop
sbb
push
fistpl
pop
fwait
and
pop
mov
test
mov
cmpsb
aaa
add
mov
scas
push
xchg
inc
jge
jle
xchg
daa
jmp
or
push
sbb
fildl
mov
xchg
mov
pushf
xor
leave
insb
outsb
cmp
mov
repnz
cli
inc
sti
inc
lods
mov
int3
aaa
xchg
mov
xchg
jle
sar
adc
xchg
add
shl
or
aas
inc
je
add
sbb
out
sbb
js
xchg
push
push
adc
fisttpl
xchg
add
lds
jno
mov
pop
pop
ljmp
mov
mov
push
movsl
addl
inc
test
add
outsb
arpl
test
sub
mov
mov
outsb
lods
test
icebp
clc
inc
xchg
mov
xchg
movsb
aad
lret
jl
inc
pop
out
outsl
mov
adc
shll
dec
pop
imul
repnz
inc
xchg
repnz
outsb
loop
subb
push
lods
repnz
mov
pop
mov
test
mov
aad
fidivrl
and
pop
mov
mov
mov
test
push
sbb
sub
dec
daa
mov
cld
mov
sahf
lret
fcom
sub
pop
inc
mov
jg
stos
mov
imul
gs
xor
and
or
sbb
out
fwait
shll
mov
std
jne
fstpl
xor
add
leave
xor
mov
fists
lds
sbb
xchg
sub
sarb
addb
push
lea
cmp
sbb
shrl
cmp
outsl
mov
mov
pop
ret
mov
jmp
ret
std
test
and
out
inc
xor
push
je
mov
or
or
stos
sub
xchg
xor
fstps
jl
and
inc
rcl
daa
sbb
sti
je
sti
fstpt
adc
insl
je
jne
xchg
and
mov
sub
xlat
je
pop
jb
movsl
and
nop
mov
das
in
ret
mov
int3
loope
push
add
cltd
cmp
add
stos
leave
mov
cltd
xchg
out
xor
adc
pop
mov
scas
mov
das
mov
and
xchg
scas
das
push
xor
dec
iret
cli
stos
lret
jl
dec
lods
stos
xor
sub
dec
jbe
pop
mov
js
inc
pop
sbb
adc
sbb
fmull
stos
stos
jns
lds
mov
imul
xchg
fsubr
cwtl
stc
dec
sbb
xor
int3
repz
pushf
xchg
lret
mov
hlt
fyl2xp1
pop
cltd
ret
lahf
ljmp
sbb
xor
or
frstor
xchg
mov
iret
fsub
int
divb
lahf
movnti
and
int3
pop
sbb
repnz
jnp
sahf
daa
shrl
lret
in
dec
xor
xor
out
in
pop
clc
xchg
mov
aam
cwtl
movsb
add
rolb
and
lcall
dec
inc
shrl
enter
cmpsl
je
xor
loopne
gs
sub
in
ljmp
push
cmp
loope
outsb
shlb
shrb
push
pop
mov
outsb
dec
pop
jns
das
pop
mov
dec
mov
mov
shl
sub
rolb
push
js
inc
inc
std
adc
push
adc
clc
js
sbb
sub
mov
mov
push
leave
jp
test
and
mov
or
sbb
mov
cmpsb
mov
dec
iret
pop
in
inc
lea
inc
scas
push
iret
popa
sti
xchg
add
out
sbb
into
xor
mov
inc
sub
inc
int
xlat
sbb
ljmp
lret
mov
inc
inc
mov
movsb
dec
or
mov
lock
iret
in
int3
mov
add
je
outsl
ficompl
dec
test
stos
sbb
pop
dec
inc
and
xchg
mov
lods
sarl
aaa
arpl
adc
mov
ss
sub
mov
jno
push
loope
jno
sbb
cmp
enter
popa
push
popf
into
ss
std
scas
push
out
cmc
pop
std
pop
clc
mov
xor
mov
xchg
sti
jle
fisubl
inc
dec
and
mov
fsts
xchg
add
push
mov
xchg
jge
int
pop
add
mov
ja
push
pop
sbb
cmpsl
mov
mov
cmp
lret
xchg
add
sbb
mov
lea
imul
gs
jmp
je
inc
icebp
sti
push
rorb
sbb
int
push
inc
movsb
push
test
mov
xchg
mov
mov
push
xchg
leave
or
push
push
cmp
out
mov
xchg
inc
in
xor
mov
mov
popf
pop
push
sub
lock
pop
sbb
ss
ljmpw
add
cmp
lock
sub
adc
pop
pop
test
jnp
adc
addr16
int3
dec
push
popf
cmp
or
repz
and
lret
inc
sub
or
sbb
xor
sbb
push
int
adc
cli
inc
cmpsl
fiadds
dec
fcmove
rolb
rolb
stos
push
or
sub
and
outsl
test
mov
push
shrb
and
out
push
rcrl
mov
mov
mov
jle
xchg
inc
xor
dec
dec
inc
cmp
call
imul
test
pop
test
pop
lret
sub
mov
lods
push
ss
scas
inc
xchg
jecxz
scas
iret
mov
push
sub
jns
lret
inc
out
xchg
push
push
insb
adc
push
mov
aas
push
lcall
stos
lret
sahf
out
jns
dec
lods
rorb
adc
repnz
inc
pop
shlb
enter
mov
mov
adc
sbb
cmp
dec
mov
jp
outsl
inc
xchg
mov
add
sbb
sbb
into
add
into
add
or
cmp
fisttpll
sbb
popf
sbb
data16
push
scas
sub
cmc
movsb
or
jecxz
pop
ret
addb
pop
mov
cmpb
adc
fsubrs
decb
mov
imul
insb
lods
lret
fwait
pop
insb
and
in
out
sbb
pop
push
cmp
aaa
push
fisubl
mov
and
mov
rcrb
movl
shll
pop
sbb
add
xchg
xchg
std
add
pop
jbe
pop
int3
lahf
sub
cmp
mov
int3
daa
xchg
fucomip
mov
das
push
test
mov
xlat
mov
mov
pop
outsb
pop
sub
xchg
dec
daa
leave
jnp
mov
dec
mov
cmpl
outsl
and
jno
add
and
fwait
dec
cli
test
jl
pop
and
or
or
je
and
ficomps
loopne
xchg
lahf
inc
adc
pop
cmc
clc
andb
aaa
add
mov
sti
xchg
cld
and
xchg
fdivl
cli
mov
add
inc
insb
out
cmp
add
mov
mov
cmpsb
cwtl
jo
lock
gs
in
xchg
int
cli
inc
xchg
pop
fdivrp
scas
out
mov
not
cmp
bound
addl
outsl
in
enter
push
or
mov
shlb
or
cli
ja
mov
xchg
add
xor
add
fwait
and
movsb
pushf
and
mov
pop
cmc
adc
xlat
sti
push
cmc
je
sbb
dec
fisubl
in
in
mov
jnp
xchg
cltd
jae
jecxz
daa
ret
popf
aas
fists
paddsb
aaa
daa
jne
out
xor
or
test
cltd
fidivs
repz
jo
pushl
mov
mov
cwtl
loope
es
cmp
and
fadd
jp
xor
aaa
mov
sarb
pop
jnp
jbe
lret
dec
xchg
nop
test
aam
pop
lods
add
int3
jg
lds
jo
add
bound
cmp
push
iret
cs
lods
popf
test
pop
test
cwtl
inc
cmp
test
inc
push
mov
xor
mov
xchg
lcall
jg
xor
outsb
andl
in
jo
push
stc
test
mov
dec
cmpsl
test
push
cld
sub
push
add
dec
jle
addl
mov
stc
fs
sub
into
loopne
cmpsl
inc
sbb
cmpsb
aaa
cmp
ja
sbb
push
jnp
popa
mov
std
add
cmp
mov
and
hlt
sub
mov
inc
pop
and
stos
pusha
jle
pop
mov
mov
in
add
push
lahf
inc
lds
push
xchg
cmp
jmp
xchg
int3
addr16
add
les
add
iret
fs
push
sti
mov
jno
hlt
adcb
pop
cs
notb
icebp
mov
lock
movsb
popf
repz
adc
xchg
mov
lret
cmp
pcmpgtb
inc
xor
sti
aam
testl
xchg
vmovups
push
mov
ljmp
push
mov
scas
jbe
sub
test
scas
imul
ja
mov
push
mov
cmp
int
add
push
mov
fdivl
into
out
jl
jbe
push
fldl
xorl
popl
fmuls
jae
push
cmp
sbb
or
mov
cs
and
xchg
push
and
lods
in
rcl
pop
fdivrs
imul
jmp
jle
fcmovne
mov
cld
mov
fsts
repnz
lea
ja
mov
cmp
movsb
out
pop
or
xor
pop
sbb
adcl
leave
es
mov
xlat
shrb
lods
adc
ret
lcall
mov
scas
pop
shr
ror
addr16
and
sub
scas
and
test
fidivrl
stos
jb
pop
mov
lret
ficoms
movsb
subl
adc
fldenv
mov
pop
xchg
or
out
lcall
les
push
lea
leave
stos
jmp
rclb
or
add
mov
push
ja
sub
pop
inc
dec
dec
test
xlat
adc
fisubrl
out
lods
mov
mov
or
push
lret
adc
and
and
out
imul
push
jb
or
push
pop
sub
mov
fs
adc
cmp
imul
rorl
int
add
iret
xchg
aas
nop
cwtl
stos
cltd
out
and
daa
pop
pop
xchg
cltd
leave
mov
shl
mov
sti
pop
shl
test
lea
xlat
jno,pt
xor
mov
cmp
cmpsb
ljmp
xchg
es
xchg
push
pop
fnstsw
in
dec
pop
in
pushf
mov
cli
cmp
sbb
data16
sbb
jb
pop
out
sub
icebp
movsb
or
test
stc
sbb
push
push
in
stos
jno
push
xchg
jae
int
add
dec
push
ljmp
sbb
mov
test
cltd
xchg
das
stos
jns
lods
push
idivl
sbb
std
xorl
pop
int
mov
mov
adc
mov
pop
je
aad
mov
test
movsb
ret
ret
cmp
push
push
jnp
push
imul
adc
add
int3
inc
outsl
sub
loop
push
stc
adc
cmp
leave
push
dec
jb
bound
cmp
imul
cli
into
lock
xor
imull
sbb
in
popf
outsb
test
or
sbb
in
mov
stos
mov
mov
cmovo
gs
jo
aaa
xor
mov
mov
cmpsb
mov
daa
xor
and
xchg
xor
cmpsl
cmp
dec
loope
pop
rcl
cld
mov
in
sbb
pop
or
add
std
lcall
jae
icebp
jg
jmp
xor
fstpl
insl
or
cmp
icebp
pop
ret
rclb
fistps
sub
in
pop
fcompl
pop
sahf
mov
js
xchg
je
cmpb
fistpl
mov
les
adc
sahf
inc
xchg
mov
fldl
mov
sarl
pushf
movsb
cmc
add
sti
stos
xor
sub
es
ljmp
jl
sbb
movsb
test
mov
std
and
or
ss
mov
aaa
dec
std
arpl
scas
mov
cmc
jg
in
xchg
mov
push
cmpsb
ja
and
sub
or
ljmp
jge
fdivrp
fistpll
xchg
mov
cbtw
pop
and
xchg
ficompl
test
pop
jne
insb
arpl
push
int
fwait
push
js,pn
inc
jae
push
cmp
mov
adc
pop
test
sbb
or
jne
aad
pusha
adc
lock
les
sub
cld
push
jnp
dec
mov
imul
sbb
ja
shl
push
cmpsb
fmuls
in
sub
mov
test
adcl
outsl
adc
xor
mov
shrl
pop
imul
dec
mov
sahf
insl
xchg
loop
outsb
mov
std
dec
stos
and
or
jge
push
xchg
insl
mov
add
sahf
mov
xchg
leave
inc
data16
mov
adc
enter
add
and
je
lods
cwtl
sbb
data16
pop
cltd
scas
xor
test
xor
xor
ljmp
ret
aad
adc
sbb
xchg
or
inc
out
mov
push
mov
pop
out
lock
data16
cmp
clc
push
xor
mov
loop
aam
pop
andl
aam
push
lock
inc
pop
lea
inc
push
xchg
pop
lea
inc
into
int
add
mov
mov
cld
adc
fldenv
dec
mov
pop
pop
add
mov
xchg
push
cli
loop
mov
jns
loopne
es
jb
adc
and
lahf
jp
mov
movl
ljmp
call
lds
mov
out
lret
ljmp
xchg
pop
lds
mov
mov
add
sahf
lret
add
xor
adc
aam
lret
arpl
jg
insl
decl
imul
dec
test
fisubl
mov
pcmpeqd
loop
xchg
dec
arpl
cmp
jno
or
ss
lahf
mov
movsl
std
add
push
sar
add
aad
or
pop
cmc
aad
push
fwait
or
cmpsb
fsubrs
sahf
sbb
mov
fisttpl
sub
fists
push
mov
imul
xchg
jl
xchg
int
rorl
mov
es
add
cltd
rep
push
push
hlt
rcl
mov
test
and
lods
inc
pop
mov
jmp
mov
call
pop
cmpsb
cmp
jae
push
push
add
jecxz
lret
dec
cmp
dec
outsl
inc
sub
xchg
pop
mov
in
jno
mov
fwait
adc
imulb
dec
pop
insb
in
cmpsb
stos
enter
mov
sbb
les
shll
pop
push
push
movsb
or
sub
rorl
adc
push
mov
mov
cmp
test
adc
in
mov
xchg
or
das
or
insl
dec
adc
outsl
push
inc
jno
loop
xchg
push
jge
popf
add
les
mov
mov
daa
jnp
push
sub
and
jno
adc
fs
dec
popa
into
mov
sub
rcrb
fstps
icebp
lcall
push
insb
in
and
sti
xor
aaa
mov
jg
test
outsb
shl
xchg
xor
xchg
xchg
pop
daa
pusha
jg
jmp
pop
xor
arpl
mov
sbb
jg
icebp
inc
adc
pop
outsb
mov
sub
scas
aas
insl
push
stc
jns
push
mov
ds
pop
mov
aam
test
sbb
decl
movsl
or
mov
jns
fldenv
stc
mov
pop
fisttpl
and
push
nop
cmp
xchg
push
adc
jl
mov
mov
sub
cmp
sbbl
jns
push
inc
push
dec
rol
nop
jg
mov
mov
mov
push
movsl
shrb
pop
pop
push
insl
fcmovnu
adc
and
sbb
sub
push
mov
or
cltd
test
sbb
xchg
push
flds
nop
mov
or
pusha
xchg
arpl
loope
sbb
or
and
stc
pop
add
call
dec
push
stc
sahf
inc
add
jge
fstl
movb
dec
mov
jae
xchg
gs
fdivrp
mov
push
jecxz
and
inc
subb
pop
ret
xchg
mov
dec
cmp
push
pusha
xchg
fwait
jbe
sbb
dec
inc
daa
data16
push
xor
lret
test
mov
cmp
sbb
and
iret
adc
lds
sbbl
push
pop
out
fdivs
fnstsw
lods
dec
and
pop
in
push
fimuls
push
xchg
mov
orb
stos
ds
lods
cmpsl
mov
roll
lods
pop
outsb
minps
repnz
popa
add
loopne
xor
cmc
mov
sub
pop
insl
xor
mov
fidivrs
mov
pop
cmp
out
xchg
sub
daa
adc
xchg
adc
inc
test
ret
cmp
sbb
icebp
dec
lgs
push
xchg
ja
sub
jae
push
fwait
xor
leave
adc
in
push
adc
push
repnz
ret
pop
cwtl
or
rclb
leave
scas
jbe
xlat
xchg
push
mov
iret
lcall
icebp
sarl
sbb
je
inc
cmp
pop
sub
movsb
gs
sbb
insl
cmpsb
adc
xchg
pop
leave
mov
in
aaa
mov
xchg
and
push
mov
enter
insb
aas
mov
cs
imul
and
jns
push
aaa
sbbl
aad
ret
cltd
mov
pmulhuw
aas
lcall
imul
ss
or
mov
jbe
movb
fadd
xor
and
mov
cmp
pop
xor
or
push
loope
push
dec
xor
cmp
popf
clc
enter
call
imul
xor
xchg
cli
bound
inc
lret
arpl
mov
jg
outsl
jl
adc
push
scas
stos
fcompl
adc
adc
sti
rcrb
cmpl
pop
or
mov
sbb
and
mov
mov
cmpb
sub
bound
movsb
aam
xor
mov
decl
or
in
pop
sub
xor
es
jp
movsb
push
rcr
jmp
pop
push
xor
pop
pop
cmp
psllq
add
std
fwait
dec
pop
cmp
mov
inc
mov
fsubrp
fnstsw
test
sub
lock
xor
or
jo
xchg
pop
jl
mov
mov
inc
rclb
add
xor
dec
push
mov
or
mov
jns
sub
pop
mov
xchg
out
ret
jbe
shrb
xorb
lcall
push
or
xchg
mov
cmpsb
pop
add
cmp
test
jecxz
jl
sbb
cmp
sub
or
out
test
sbb
fiaddl
cmp
test
pop
fcompl
jmp
fdiv
dec
arpl
lret
mov
push
out
xchg
xor
jb
incb
mov
and
jmp
or
jmp
add
mov
mov
jecxz
data16
into
in
cli
push
adc
inc
aaa
nop
jmp
movsl
cld
testl
std
mov
scas
test
cmp
and
imul
cmpsl
hlt
hlt
fwait
xor
mov
adc
cmp
push
fnstenv
mov
std
popa
stc
or
loop
lds
icebp
jns
lods
imul
add
xor
fstpl
insb
pop
lret
stos
test
out
adc
pop
xchg
sub
add
decl
in
adc
inc
xor
or
mov
cli
push
mov
addr16
imul
adc
lret
and
jge
mov
push
and
das
jl
out
jno
push
dec
ljmp
xor
loop
mov
test
cmp
sub
stos
add
inc
enter
xchg
cmp
push
cmp
out
or
in
clc
and
dec
mov
dec
imul
clc
fidivrl
repz
mov
xchg
sbb
jl
or
pop
das
jno
push
adc
adc
ljmp
pop
xchg
jge
sub
mov
adcb
cmp
push
mov
inc
repz
push
cmp
popa
mov
lret
jns
sbb
popf
ficoml
inc
sub
or
outsl
pushf
push
dec
jmp
out
insl
mov
je
xchg
cltd
jmp
mov
aaa
sbb
stos
xchg
mov
cmpsb
dec
movsl
xchg
adc
inc
cmp
rcll
mov
lret
popa
insb
rorb
fistpl
cmp
or
cmovp
aad
sub
xchg
rcll
stos
pop
outsb
shlb
jge
push
xor
idivb
add
lcall
clc
mov
test
adc
rolb
dec
or
int3
fistpl
adc
shl
add
shl
sbb
ss
jbe
pushf
in
aam
jecxz
daa
and
cwtl
sbb
xchg
adc
dec
test
cmp
adc
mov
xor
mov
outsl
mov
fs
add
jle
pushf
or
lret
inc
dec
daa
push
aam
pop
imul
jge
jae
mov
lret
movsl
dec
sub
cmpsb
je
dec
jbe
add
addb
cmp
rol
pop
fildl
fwait
jno
inc
sub
ret
add
js
jae
or
jbe
imul
or
into
push
and
lret
dec
dec
movsl
jae
insb
pop
movsb
jmp
ds
test
push
add
or
sub
cwtl
pop
dec
int3
test
lea
cmp
movsb
mov
test
xor
and
ljmp
loop
pusha
inc
jp
dec
pop
test
sbbb
add
push
sbb
subl
adc
out
inc
pop
push
cmp
push
ds
add
mov
jp
test
mov
insl
jo
dec
sahf
fs
aas
jg
ds
rorb
push
pop
ret
inc
dec
in
sub
data16
icebp
dec
das
test
mov
pop
inc
pop
cld
mov
cmpsl
pop
pop
and
mov
inc
pop
fnstsw
cmp
mov
orl
sbb
cmc
aam
hlt
or
push
push
xchg
movsb
iret
jl
sub
movsb
mov
jecxz
or
or
cmpsl
repnz
push
je
cltd
jge
add
adc
nop
movsb
test
pop
pusha
loop
sub
fisubs
insb
loop
les
sub
dec
push
mov
lods
rcll
xchg
jb
and
mov
dec
loope
ret
in
movsb
xchg
les
addb
pushf
aam
scas
ljmp
popa
dec
jge
cmp
out
imul
popl
pop
dec
push
ret
daa
inc
out
in
mov
sbb
mov
cwtl
cltd
mov
push
pop
jo
jecxz
hlt
xchg
push
add
arpl
adc
fprem1
inc
daa
push
push
pop
mov
mov
xor
push
in
bound
inc
xlat
lcall
mov
pop
mov
negl
or
pop
hlt
in
cmp
ret
cmc
mov
shll
pop
ljmp
in
pop
ss
std
jmp
cld
sbb
and
fisubrl
sbb
dec
or
loop
bound
xchg
mov
repz
lahf
pop
xor
xchg
std
fimuls
xor
adc
mov
scas
mov
fistpll
popa
sbb
sarb
or
pushf
into
jb
push
mov
push
ret
pushf
sub
jg
lea
test
pop
pop
mov
fldl
cmc
aad
aaa
fldenv
jnp
pop
into
fs
jl
sub
pop
icebp
push
jge
mov
inc
stos
sbb
sub
inc
jne
ds
mov
or
out
jg
aad
mov
into
or
in
out
xchg
lahf
cld
mov
sbb
daa
je,pn
rorl
test
jo
jecxz
xchg
add
aam
ja
cli
mov
scas
dec
insb
sub
pop
mov
xor
pop
cli
stos
xchg
adc
mov
pushl
test
push
push
iret
or
push
out
mov
roll
shlb
nop
inc
push
ja
push
scas
xchg
mov
insl
inc
push
xor
xlat
in
cld
xor
stos
loopne
add
lock
mov
pushf
ja
nop
add
dec
mov
push
jo
push
data16
mov
cltd
sub
iret
inc
inc
hlt
dec
push
int
icebp
clc
fcomps
add
gs
xchg
mov
or
sub
repz
or
and
cmpsl
imul
jle
and
mov
mov
jge
lods
call
ret
dec
in
out
mov
shrb
es
cli
push
push
sahf
loope
mov
fstpt
leave
jnp
mov
xchg
push
daa
mov
push
in
mov
pop
sbb
out
test
stos
push
adc
fisubrl
mov
hlt
sbb
adc
and
data16
mov
mov
loopne
adc
cmp
stos
jmp
xor
xor
jo
and
ret
inc
mov
fldl
mov
addr16
sub
fmuls
out
test
sub
push
push
cltd
xchg
fsubrs
cli
lahf
std
adc
subb
add
adc
test
into
sbb
adc
pop
sub
xchg
push
sbb
mull
popf
test
test
fbld
fidivrs
test
stos
cs
shr
idivb
fmulp
ret
cwtl
insl
sbb
adc
arpl
test
xchg
push
lods
or
out
nop
repnz
sub
pop
scas
mov
inc
insl
inc
adc
sti
inc
ret
stos
imul
add
add
cmp
xchg
pop
push
fisttps
xor
andl
add
sti
dec
pop
loop
jl
inc
cmpsl
mov
cwtl
aas
test
dec
in
xchg
sbb
mov
mov
or
dec
clc
insb
xchg
dec
fdivs
sub
addr16
adc
in
pop
lret
in
add
pop
jge
sub
fisttps
xchg
fcmovbe
push
xchg
xor
add
lods
in
insl
test
or
movsb
push
inc
and
out
ret
out
jbe
pop
pushf
out
xchg
or
push
mov
jl
cli
lahf
cltd
ljmp
xor
les
in
or
sbb
cmp
push
subb
jno
sbb
repnz
add
sbb
roll
or
cmp
mov
fmul
shrl
jl
test
nop
imul
decl
scas
push
and
nop
inc
lock
cs
jle
loope
push
js
aaa
mov
jl
pop
jne
dec
jecxz
iret
pop
or
sbb
pushf
mov
fistpl
cmp
sbb
xchg
add
push
cmp
popf
push
and
inc
lods
jnp
out
mov
out
cmp
adc
into
xchg
call
dec
xchg
sub
in
push
mull
shll
mov
and
jo
sub
shr
imul
mov
add
mov
lcall
jle
push
test
enter
sti
mov
sbb
inc
pop
cmpl
sahf
shl
pushf
insl
mov
and
lods
push
lods
inc
ljmp
out
pop
icebp
sbb
cmp
adc
aas
ss
je
dec
adc
fidivl
bound
pop
xchg
into
jp
jl
loopne
fwait
xor
lds
push
lret
adc
mov
shll
loop
jp
jmp
divl
cmp
loopne
shrb
sub
repnz
mov
rcrb
mov
lea
ret
gs
cmp
aad
push
sbbl
fdivrl
arpl
adcl
add
lcall
aam
cmpsb
bound
shl
pop
push
lret
mov
xlat
fsts
in
repnz
scas
mov
movsl
mov
shll
dec
and
mov
push
insl
inc
adc
xchg
addr16
pop
int3
rclb
mov
or
test
push
lret
jbe
sahf
cmc
lock
pop
mov
push
jg
ret
mov
into
scas
or
push
rorb
leave
jo
or
dec
and
or
add
and
out
push
test
push
fiadds
cmpb
xor
dec
shl
push
push
lcall
or
pop
outsb
test
mov
adc
jo
rcr
movsb
mov
filds
sti
jl
aam
test
cmpsb
mov
cwtl
shrl
repnz
ja
std
adc
push
repz
mov
mov
lock
jle
fs
mov
out
or
pop
movntq
imul
xchg
scas
js
pushf
scas
in
mov
add
mov
xchg
add
movsb
pop
lret
mov
pop
and
cmpsl
push
outsb
push
xchg
mov
bound
je
mov
mov
lret
xor
enter
movsb
mov
je
jmp
mov
divb
shll
or
jnp
icebp
pop
push
lea
push
pop
frstor
sbb
and
add
push
mov
ror
cli
ss
addb
jmp
mov
push
mov
fsubrs
je
in
mov
mov
stos
rcl
cmp
stos
mov
mov
pop
xor
lock
mov
xchg
enter
sub
mov
cmp
jb
mov
clc
mov
pop
sbb
lods
sub
lods
cltd
inc
cwtl
pusha
arpl
cwtl
and
mov
leave
loop
mov
jno
cmp
andb
push
outsl
xchg
push
mov
mov
pop
repnz
jecxz
push
testb
insb
int3
cmpsb
sahf
cmp
jge
popa
aad
xchg
mov
shlb
cmp
andl
xchg
dec
movsb
dec
fs
pop
inc
add
int3
ret
pop
pop
in
mov
jnp
cmp
xchg
mov
or
lret
mov
cltd
cs
xchg
cmpb
jae
cli
popf
test
repnz
rcll
in
call
dec
dec
cmp
shlb
sub
mov
popa
mov
lock
sub
stc
out
mov
or
loopne
aas
stc
or
notb
icebp
mov
dec
dec
sbb
js
mov
xor
fwait
loope
cmp
add
mov
daa
and
xchg
rcll
push
mov
addl
addl
mov
jg
mov
ljmp
push
aad
movsb
push
loop
push
mov
mov
int
mov
aam
data16
and
iret
inc
sti
adc
push
out
mov
icebp
xor
aaa
mov
popa
test
and
int3
xchg
fwait
mov
pop
dec
out
sbb
mov
dec
xchg
and
pop
bswap
mov
cwtl
repz
add
ja
loope
lock
lahf
into
add
pop
out
or
cmp
lock
push
pop
pop
movl
xlat
ret
mov
mov
loop
clc
or
rorb
xor
cwtl
inc
scas
insb
je
adcl
sub
fwait
xor
jb
jb
and
sahf
xchg
sbb
lock
dec
std
pushf
int3
stc
movsb
jns
js
stos
push
inc
lods
mov
and
pop
lods
cld
pop
and
and
js
addr16
test
popa
jne
test
sbb
cmpsb
push
mov
jle
mov
jno
sbb
insb
dec
add
mov
fsubs
pop
jecxz
cld
movsl
nop
and
sarl
add
add
sbb
or
clc
stos
mov
sub
push
cmpb
dec
daa
in
stos
ja
enter
push
and
neg
nop
cmp
movsl
xor
cmpsb
inc
shrl
out
cmp
jns
fcoms
orb
xchg
mov
mov
popl
adc
rolb
pusha
inc
popa
cmpsb
push
fnstcw
or
leave
js
cs
dec
add
xchg
sbbb
mov
jbe
lods
in
mov
xchg
ja
leave
movsl
and
cmp
movsb
clc
adc
push
subb
and
into
sbb
insl
imul
nop
loope
xor
fiaddl
sahf
movb
sub
adc
scas
pop
mov
and
aaa
imul
sub
leave
xchg
movsb
lods
mov
jp
cld
imul
cs
xorb
stos
pop
push
lret
pushf
lret
pop
lods
aam
loop
push
mov
push
daa
mov
cld
mov
stos
mov
jge
aaa
rcrb
and
jecxz
xchg
jle
mov
mov
push
filds
test
sbb
ss
jmp
mov
icebp
push
orb
sti
inc
xor
dec
adc
xchg
fadd
je
xchg
addb
and
jge
std
das
popa
sub
cld
rcr
adc
icebp
insl
or
push
test
push
negb
xchg
aam
out
jo
pop
inc
hlt
and
mov
sub
pop
dec
cmpsw
imul
loope
into
imul
push
push
push
add
mov
mov
scas
call
sub
lahf
pop
rcll
adc
out
jg
jg
sti
mov
and
push
xor
add
xchg
movl
cmc
mov
xchg
loop
mov
sub
pusha
sub
outsb
mov
cltd
rolb
enter
push
js
inc
aaa
jno
scas
hlt
mov
aaa
test
add
mov
scas
mov
ret
sub
int3
cmp
inc
call
ds
inc
adc
pop
call
loope
insb
imul
mov
xchg
pop
call
push
iret
jae
jmp
mov
inc
outsb
xchg
jnp
xchg
push
mov
jge
stos
jmp
ficoms
sbb
je
xor
add
repz
jns
mov
inc
inc
cld
scas
push
mulb
jns
mov
insl
insb
adc
mov
jle
leave
cmc
xchg
mov
mov
cld
inc
testb
ret
notl
out
std
clc
sbb
rorl
dec
mov
int
or
inc
pop
mov
clc
dec
pop
scas
push
call
jle
rorb
mov
ret
pop
mov
test
jl
ja
add
push
cmp
gs
pusha
daa
sub
mov
ja
cmpsb
mov
cli
inc
dec
unpcklps
mov
or
arpl
xor
inc
push
je
mov
jp
jns
sub
in
mov
jmp
fnstenv
push
xchg
cmp
int3
andb
sbb
fwait
mov
sbb
dec
shll
xchg
adc
aaa
adc
cwtl
add
sbb
pop
aas
in
push
dec
mov
add
jne
fidivl
decl
gs
scas
cmpsl
pop
aad
mov
xchg
mov
mov
jmp
imul
mov
jns
xor
in
pop
es
jmp
pop
jle
mov
mov
xor
mov
leave
mov
clc
dec
clc
dec
cmp
push
dec
mov
dec
add
add
dec
xchg
rcl
ret
push
frstor
clc
mov
dec
push
ds
aam
jns
cmpsl
mov
inc
insb
push
mov
aas
mov
loope
dec
fs
enter
mov
adc
aas
bound
rcrl
test
outsl
subb
sub
fistpll
push
aaa
movsb
add
scas
int
sahf
out
test
gs
sub
mov
jbe
out
ffree
dec
dec
xorl
mov
orl
dec
jecxz
cmp
or
dec
mov
xchg
fmull
popf
into
push
jb,pn
inc
repnz
jb
pop
cmpsl
clc
and
lea
and
fwait
setl
shl
repnz
sahf
pushf
pushf
add
imul
push
lods
add
jne
mov
cltd
cltd
cmc
sub
xchg
and
fdivrs
imul
jae
mov
mov
ja
mov
inc
test
pop
dec
adc
xor
jns
test
push
inc
pop
fmuls
sbb
mov
enter
push
fistpl
out
rol
and
icebp
push
cmp
inc
xchg
mov
or
daa
lcall
into
sbb
bound
imul
and
repz
push
bound
loopne
subb
adc
push
cmp
mov
iret
sahf
add
mov
dec
xlat
imul
pop
mov
das
sahf
and
push
andb
lods
cmp
and
push
into
sbb
xor
fadds
adc
lods
ja
adc
jo
and
repz
incb
xchg
and
jmp
jae
mov
cmpsl
outsl
add
xchg
daa
pop
andb
jne
fdivr
in
push
int
jno
popa
loope
xor
and
or
dec
push
lods
mov
mov
mov
mov
popl
jp
push
call
cmpsl
pop
fisttps
xor
imul
push
xor
mov
mov
into
or
pop
or
push
mov
adc
mov
cmp
into
jns
jecxz
jp
mov
mov
mov
mov
xchg
pop
notl
outsb
add
aam
jno
into
int
xor
icebp
mov
adc
insb
xchg
out
cli
or
int
dec
popf
lods
mov
mov
scas
pop
imul
test
rcr
movsb
adc
adc
cmpsl
xor
jno
mov
cmp
rclb
mov
inc
insb
ljmp
mov
xchg
push
xchg
push
mov
out
cwtl
xchg
js
dec
loope
in
nop
mov
out
movsb
ret
pop
test
mov
js
add
mull
push
cmp
mov
lcall
xchg
sti
iret
xlat
ret
push
cmpsb
fsubr
jmp
dec
fnstcw
sub
sbb
push
stc
dec
sbb
outsl
arpl
in
mov
pop
sub
pop
push
dec
fs
adc
leave
fcoml
scas
push
ss
cs
push
mov
add
fcomps
pop
sub
jl
outsb
repz
scas
out
push
pop
cmp
jg
xor
xchg
pushf
cld
cmp
fldenv
add
and
iret
out
scas
cli
repz
je
push
inc
jg
out
inc
shlb
push
push
xor
sub
or
push
test
jmp
insl
adc
inc
dec
lret
lret
sti
jb
cmp
mov
dec
fisttpl
push
pushf
stc
fldcw
std
cwtl
mov
cld
pop
out
ljmp
xchg
cmpsl
in
inc
jns
jmp
in
fcompl
inc
mov
aad
andl
fldl
stos
cmpsb
pusha
push
js
cli
icebp
jp
inc
push
out
out
cmp
clc
pop
jno
dec
sbbl
mov
fisubl
xchg
into
pop
lcall
or
pop
into
adc
leave
loope
pop
lahf
mov
pop
call
jae
dec
rcrl
and
cmp
idiv
loopne
imul
test
xor
decb
dec
jp
dec
cmpsb
rorl
mov
sub
test
mov
fsubrl
xchg
out
xchg
out
popf
in
sbb
loopne
dec
sub
cmpsb
test
cmp
iret
mov
mov
push
pop
in
outsl
mov
cltd
loop
cmp
mov
dec
inc
adc
mov
lds
insb
aad
pop
outsb
repnz
fs
shlb
and
inc
and
mov
fistpl
dec
lds
aam
aas
sbb
ds
inc
ret
fidivs
sahf
add
in
or
push
add
add
mov
fwait
pop
jb
add
shll
ljmp
inc
lock
sti
cmp
addr16
dec
dec
or
stos
dec
test
lcall
and
pop
jge
add
pop
lret
push
pop
jge
cmpsb
or
sub
int3
pop
popf
mov
pop
add
add
lahf
cmp
fidivrl
add
cli
inc
fildll
xchg
adc
add
imul
jno
dec
inc
mov
xchg
mov
pop
push
cli
push
xchg
ds
and
xchg
push
xchg
jl
in
ss
pop
and
mov
adc
hlt
push
out
push
jge
rcrl
ja
mov
mov
xchg
xchg
adc
int
and
mov
pop
pop
mov
fimull
xchg
adc
lahf
jge
lret
gs
jl
add
xchg
outsl
jo
decl
mov
imul
mov
and
sub
inc
inc
in
idiv
stos
xchg
daa
push
imul
inc
fninit
xor
xlat
out
arpl
push
pusha
xchg
lds
int3
out
xor
out
cltd
lret
inc
xor
out
bound
adc
dec
ja
inc
fisttpll
je
dec
jns
movsb
xchg
scas
scas
lds
stos
lret
sub
ret
add
xchg
jbe
push
xchg
mov
ret
insl
dec
les
jns
xor
xchg
sub
mov
adc
stc
mov
stos
add
popf
xchg
or
or
sbb
dec
xor
repnz
xchg
sub
es
in
xchg
pusha
inc
test
mov
push
in
jbe
inc
jl
ss
mov
lahf
andb
fwait
xchg
cmpsb
inc
out
mov
or
xchg
cmpsb
clc
ja
and
in
sbb
arpl
gs
sbb
fidivrl
shll
pop
jo
int3
int
jle
movsb
cmp
sub
leave
lods
cmp
xor
in
add
loop
fistps
push
cmp
cmc
mov
ja
mov
lret
aas
stos
add
xchg
pop
popf
pop
inc
ret
mov
cmp
push
adc
add
and
sub
andb
pusha
lahf
and
sahf
lods
or
cmp
mov
push
xor
adc
inc
outsl
adc
je
jg
adc
cld
neg
add
fld
cmp
lret
dec
xchg
jae
cld
ds
jg
das
in
mov
cmpsl
popa
les
add
repz
mov
mov
into
orb
call
adc
test
dec
insb
imul
jmp
inc
outsl
xor
inc
cmp
xchg
leave
dec
mov
pop
cmp
adc
out
pop
xor
daa
test
pop
push
leave
xchg
fmuls
lods
test
mov
fmuls
cwtl
cltd
push
jnp
xchg
aas
xorb
movsb
cmc
xchg
xor
int3
data16
xor
cmp
and
inc
fwait
stc
pop
sub
mov
insl
sti
mov
push
and
scas
mov
and
arpl
xchg
popl
lcall
fstl
inc
and
scas
jge
lods
push
sub
std
push
push
push
fadds
jo
sub
mov
test
es
add
vmwrite
pop
cmpsb
fnsave
jno
mov
cmp
out
or
add
lcall
or
pushf
mov
and
xor
addr16
outsb
repnz
xor
xchg
cwtl
inc
xchg
mov
jb
sbb
dec
inc
lret
mov
inc
dec
outsb
fnstsw
mov
dec
loopne
pop
xor
divb
or
fwait
or
movsb
add
mov
arpl
enter
test
sbb
imul
mov
fldt
pusha
shll
fsubrl
and
loopne
test
sub
in
leave
out
dec
xor
jg
sub
es
xchg
or
test
push
mov
insb
imul
pushf
js
cs
in
mov
push
jg
mov
pop
mov
jo
into
cmpsb
cmp
lds
sub
sti
cmc
dec
icebp
xor
xchg
fwait
jnp
push
enter
arpl
xchg
push
xlat
in
in
out
repz
shll
loop
dec
adc
in
xor
insl
cmpsb
adc
and
jg
das
sarl
adc
cli
movsb
mov
cmp
aad
adc
push
add
and
out
sub
inc
xchg
std
in
out
sbb
add
adc
cs
sbb
push
inc
adc
cmp
daa
push
lods
dec
inc
adc
pop
add
mov
or
mov
lds
test
xchg
iret
stos
pop
cmpsl
mov
mov
leave
dec
dec
push
loopne
mov
pop
iret
sahf
fimull
mov
add
sbb
repnz
and
mov
dec
or
fwait
jb
pop
in
jb
cs
add
outsl
inc
fisttps
xchg
je
inc
insl
push
aaa
push
sub
ret
cmpsb
push
inc
lods
scas
cmp
mov
lahf
jns
inc
hlt
dec
js
in
mov
adc
loopne
mov
lds
cltd
jne
and
cmp
push
insl
ljmp
jno
mov
lahf
and
bound
inc
push
lcall
popw
add
cmpsl
stos
imul
xor
pop
test
cmc
cmpsl
insb
movb
fwait
or
cltd
je
dec
out
adc
rolb
andl
sbb
fdivrs
pushf
lock
mov
addr16
add
and
inc
pop
das
mov
aam
adc
inc
add
hlt
jae
movsb
pop
dec
mov
test
push
mov
mov
adc
int
aad
incb
outsb
sub
cmpsl
icebp
jle
bound
jo
lock
push
cmpsb
mov
pop
mov
inc
imul
leave
sti
in
push
pop
sar
add
mov
out
aam
sub
and
in
js
push
lcall
je
xor
pop
cmc
push
sub
scas
push
pop
mov
enter
lds
mov
hlt
adc
adc
mov
insl
pop
fs
push
push
xor
xor
ja
js
adc
sub
in
push
in
jb
daa
clc
enter
insl
mov
es
js
push
lds
jmp
inc
cltd
add
and
or
leave
push
dec
jecxz
jae
pop
cltd
stos
add
xor
add
popf
movsb
shrb
sbbl
add
aaa
add
daa
mov
repz
call
adc
jbe
jl
or
fisubl
cmp
outsl
mov
cmp
outsl
into
sbb
test
fucomi
mov
ret
mov
fsubs
jo
jecxz
lods
cmp
inc
lods
mov
rcll
jnp,pt
in
pop
mov
arpl
fs
or
jg
cmp
xlat
and
xor
in
add
mov
fisttpl
lcall
pop
push
jnp
or
aaa
rcll
insl
xor
jle
pop
mov
lret
add
adc
inc
push
add
rclb
iret
ss
mov
mov
pop
daa
dec
mov
sub
dec
cwtl
sub
movsb
imul
xorl
inc
jl
movsl
jg
ljmp
or
adc
push
rorl
add
push
lcall
sub
sub
inc
std
in
jne
cmp
call
xor
mov
mov
lock
shl
lock
lods
adc
sbb
mov
adc
fnstcw
pop
aas
or
out
je
jo
pop
ret
pop
jg
shll
mov
decb
pop
loop
jecxz
jge
test
popa
ret
xor
sahf
mov
add
and
add
fs
mov
movsl
lret
pop
jns
fninit
dec
mov
push
xchg
into
mov
xchg
fidivrs
aam
mov
pop
pop
cltd
lret
jae
push
fwait
adc
dec
cmc
fucomip
cld
sub
mov
xlat
xchg
pop
addr16
or
xor
or
add
iret
sub
jae
xchg
cmpsl
xor
loopne
cmc
fistpl
in
aaa
scas
pop
lret
fdivs
mov
shll
lock
mov
fsubs
frstor
enter
ret
cltd
and
arpl
inc
clc
loopne
pop
push
push
mov
jb
inc
fiadds
jge
cltd
mov
mov
mov
bound
jnp
or
and
inc
fcoms
les
out
aas
js
pop
cmp
jb
inc
add
or
push
mov
mov
xchg
ja
aam
mov
inc
lock
mov
adc
pushf
shll
pushf
sbb
add
fisttps
xorl
sbb
mov
flds
jnp
inc
shll
inc
jns
in
cs
inc
fucomp
push
or
mov
xor
jns
sub
push
stos
jbe
inc
xor
mov
lret
subl
je
cld
pop
in
scas
mov
pop
push
push
dec
mov
aaa
js
les
jnp
lcall
es
sbb
insb
movsb
out
lahf
insl
mov
lcall
xchg
in
loopne
add
adc
jmp
lock
or
frstor
movsb
cmp
jmp
and
inc
xor
mov
dec
aaa
mov
pop
push
inc
sti
inc
mov
push
lcall
insb
data16
xchg
cmp
imul
mov
divb
dec
stc
push
xorl
fnsave
dec
sbb
roll
push
ljmp
insl
je
in
loope
dec
cmp
dec
and
mov
aam
adc
in
je
lcall
orl
in
insl
inc
loopne
mov
adc
dec
in
cmpsb
inc
or
in
cmp
insb
mov
adcl
xlat
cmpsl
xchg
popf
test
push
movsb
or
int
mov
sbb
xchg
jne
lret
push
xor
fimuls
je
fistpll
dec
jle
mov
jp
das
or
cmp
int
jae,pn
imull
push
dec
mov
cltd
and
mov
sbb
sub
nop
dec
repnz
cs
adc
xchg
fsubrp
leave
outsl
enter
mov
icebp
outsl
imul
mov
dec
pop
icebp
adc
imul
out
hlt
inc
ret
dec
adc
fs
dec
pusha
pop
push
sub
push
push
jg
gs
test
loope
arpl
pushl
xchg
mov
and
in
push
outsb
mov
imul
push
pop
dec
add
inc
out
les
shlb
mov
daa
xchg
mov
add
jg
xlat
jb
bts
mov
xor
movsl
sahf
loopne
fs
cmpsb
and
xchg
jne
fmuls
cli
je
lret
add
mov
mov
inc
shrl
dec
jb
ss
fs
in
push
test
jp
mov
add
mov
sub
pop
sub
in
mov
jns
arpl
sbb
lcall
loop
lret
xor
test
faddp
sti
shll
xrelease
into
or
in
fidivrl
jnp
fstpt
ds
fldt
xor
rclb
dec
test
pop
or
or
xor
jbe
enter
repnz
xchg
push
dec
test
jno
stc
inc
lahf
or
mov
lahf
test
sti
test
and
inc
add
fisttpll
out
test
push
push
pop
jg
data16
jo
adcl
int
inc
jnp
xor
icebp
outsl
pop
shlb
pop
mov
imul
dec
jno
inc
push
push
or
add
ds
jmp
fstpl
jl
pop
xor
jg
jp
hlt
add
xchg
sub
jae
mov
push
lahf
sbb
cmp
popf
bound
mov
and
pusha
add
mov
inc
sbb
cwtl
cli
loope
xchg
cmp
adc
cmp
dec
iret
pop
xchg
mov
adc
clc
mov
cmc
jno
lods
xchg
in
add
adc
push
sub
mov
push
mov
cmp
pop
mov
stos
mov
pop
mov
dec
loope
mov
decl
stc
das
rcr
sbb
in
movsb
cmp
lea
lcall
fisttpll
pusha
mov
push
fnstcw
mov
lods
popa
pop
cmc
push
mov
and
cmp
inc
insl
sub
outsl
scas
xchg
pusha
sub
cmp
sahf
int3
lods
and
mov
ljmp
add
xchg
pop
sbb
iret
into
rcll
mov
inc
in
outsl
aaa
cld
aaa
xor
clc
cmp
push
aam
sbb
in
icebp
sub
out
cmpl
popf
xchg
subb
call
nop
mov
lret
ja
daa
xor
inc
shlb
ss
cmp
pusha
dec
mov
lods
pop
les
shrl
mov
pushl
fimull
or
cmp
xchg
enter
inc
ret
dec
inc
clc
fdivr
or
cmp
pushf
mull
into
out
pop
cltd
cwtl
ss
mov
adc
dec
cvtps2pd
test
imul
int3
lcall
sbb
dec
shlb
jl
aaa
repz
daa
cmpsb
nop
and
adc
sbbb
jns
mov
ret
pop
js
inc
fdivrs
xor
loope
inc
test
jo
xor
cli
add
repnz
push
mov
and
push
test
add
scas
jmp
mov
add
mov
fildl
stos
shlb
insl
mov
sub
push
lea
and
mov
xor
lds
dec
repnz
roll
sbb
nop
aas
mov
lds
repz
pop
or
sub
pop
jne
push
jl
push
and
add
adc
mov
daa
mov
loopne
sub
mov
and
fsubrl
call
xor
lods
xchg
xchg
sub
cmp
sahf
jle
pop
jo
in
xchg
cmp
ret
cmp
outsb
mov
mov
loopne
lgs
xchg
jmp
aam
ret
cmp
mov
push
dec
mov
sbb
movsl
fldl
loope
or
clc
mov
pop
sahf
dec
arpl
jno
mov
lds
lock
psubb
js
xchg
push
xchg
pusha
pop
adc
cmc
pop
push
or
jl
popf
pop
ja
orb
repz
mulb
add
sbbb
jecxz
pushf
pop
cmp
inc
mov
push
mov
xor
sub
lret
es
and
imul
out
rol
add
ds
push
mov
jg
popf
dec
jb
outsl
xchg
std
aad
aas
hlt
into
insl
nop
lea
fstpt
fcoml
add
jg
xor
pushf
fnstenv
fwait
ss
xchg
add
repz
pop
inc
sbb
xchg
or
adc
pop
fwait
sti
cmp
int3
adc
imul
scas
add
icebp
mov
flds
add
mov
nop
and
mov
ds
shll
rolb
xchg
adc
lock
test
dec
inc
jb
ja
imul
into
les
call
mov
mov
dec
jbe
clc
sbb
or
sbb
push
aad
and
xchg
stc
dec
cld
dec
mov
insl
mov
das
rorb
je
repnz
aaa
sarb
pop
and
jae
sbb
push
jp
xchg
scas
or
shlb
bound
mov
les
fidivrl
push
icebp
fdivrp
pop
xchg
cmp
and
mov
mov
fildll
mov
fists
in
sahf
sbb
pushf
in
bound
orb
cli
jmp
mov
push
xchg
hlt
movsb
subl
cmp
loopne
add
push
pop
jp
mov
ret
loop
ffree
sbb
repnz
dec
mov
jo
add
adc
shlb
shll
or
in
sub
orl
movsb
loope
gs
xchg
xor
cmp
mov
andb
push
out
daa
cli
sub
int3
xchg
xchg
sub
mov
out
dec
aas
or
xor
or
and
sbb
inc
pop
unpckhps
adc
int3
and
in
enter
pop
or
cmc
pusha
pusha
inc
cli
and
fldenv
popf
lret
mov
jns
xor
add
fidivs
stos
mov
fstpt
sbb
pop
add
sahf
push
pusha
push
int3
jb
stos
push
div
out
aad
test
je
add
clc
stc
mov
test
mov
push
push
in
dec
push
sub
pop
xor
mov
xor
ds
mov
sub
pusha
sbb
scas
pop
adc
out
pop
lods
rcrb
std
dec
mov
push
add
insl
cmpsl
jle
fs
mov
pop
fists
pop
ret
js
imul
dec
xchg
cmp
insb
mov
out
cmpsb
mov
js
xchg
stos
pop
adc
sbbl
xor
mov
jae
and
jb
fstpl
or
cwtl
push
dec
cmp
lea
fistps
adc
or
aad
jns
das
jns
jle
enter
daa
cltd
fwait
std
mov
es
divl
enter
or
jge
inc
aad
aad
inc
out
xor
sbb
xchg
jle
das
cmpsb
repnz
sbb
insl
jns
xchg
aas
cmpsl
repz
and
lret
dec
jge
pop
clc
push
push
cmp
adc
and
jl
push
in
mov
filds
xor
sbb
jle
add
xor
aam
int3
inc
mov
imul
les
rcrl
iret
add
adc
mov
std
push
int3
mov
mov
int
push
lds
je
add
mov
pop
sahf
inc
mov
data16
cmp
mov
pop
and
cltd
adc
sub
pop
xor
mov
lahf
add
fwait
je
sarb
inc
xor
sbb
and
fucomi
test
pop
sub
sub
xchg
pop
dec
lret
cmp
lcall
imul
js
cmp
sub
in
in
mov
lcall
int
jl
xor
sub
mov
dec
inc
push
dec
mov
xor
rclb
mov
add
mov
jmp
stos
scas
lret
stc
xor
xor
repnz
leave
push
push
shrb
je
clc
cmpsb
dec
or
xchg
cmp
add
lock
frstor
xchg
xlat
mov
or
push
cmp
in
sbb
filds
pop
hlt
aaa
or
cmp
insl
push
andl
je
xchg
loop
and
pushf
imulb
inc
sbb
mov
cwtl
inc
xchg
and
cmp
shlb
xchg
in
and
cmpl
lods
dec
xchg
mov
sar
mov
es
fwait
iret
movsl
or
xor
push
jp
fisubs
and
xor
and
mov
and
in
and
jo
popf
add
sbb
and
subb
enter
stc
adc
lods
mov
insl
jns
addb
mov
imul
sahf
xchg
mov
sarl
mov
repnz
int
xchg
sub
or
in
xor
outsl
cmp
stos
popa
es
inc
mov
xchg
xor
jle
lods
addl
push
les
inc
sbb
xor
cmpsb
js
repz
dec
sub
int3
addr16
sbb
dec
pop
lds
add
or
sub
mov
imul
cmp
add
or
cli
lods
mov
mov
subb
sti
sahf
jne
pop
mov
xor
or
jbe
push
stos
add
mov
jb
push
lds
jl
pop
xchg
iret
mov
push
out
mov
inc
sbbl
pop
out
pop
xchg
xorb
js,pn
push
mov
pop
daa
ja
and
sub
inc
mov
loop
inc
xor
fildll
adc
adc
fsts
imul
int
stos
jo
dec
xor
out
mov
sti
leave
adc
jo
jnp
mov
mull
ljmp
sahf
pusha
das
pop
sub
push
ss
mov
jnp
outsb
iret
pop
adc
fstpl
lods
adc
in
xchg
es
sub
jb
rolb
and
and
push
mov
adc
mov
jns
push
aad
jl
mov
mov
inc
ficoml
jge
jne
orl
lret
sbb
adc
ret
mov
or
test
jno
aas
iret
add
out
mov
out
adc
mov
insl
pop
and
imul
outsb
adc
jle
mov
cmc
mov
lock
or
push
lret
sbb
mov
jb
xchg
cld
ljmp
cmpl
push
and
addr16
xor
mov
inc
int3
mov
pop
cli
dec
cmpsl
mov
insl
icebp
cmp
sti
mov
loopne
or
jp
mov
fsubs
fcmovnu
or
loop
adc
sub
add
int3
lahf
dec
adcb
ljmp
in
mov
lret
cli
loopne
mov
cltd
jo
je
add
cmp
push
lcall
test
andb
in
sbb
sub
add
les
pop
pop
inc
js
inc
fcmovu
dec
or
daa
sub
sbb
or
loopne
out
shrl
jl
stos
ret
nop
adc
pop
xchg
push
mov
jnp
stos
push
dec
nop
popa
test
cmp
arpl
dec
rcl
mov
mov
jb
mov
mov
adc
cmpsb
les
jo
mov
xchg
or
sbb
xor
and
xor
pop
and
imul
ja
sbbl
pop
ret
pop
sbb
cltd
movsb
data16
icebp
xor
inc
dec
imul
cld
fwait
mov
mov
inc
mov
stos
mov
mov
les
or
jnp
add
sub
bound
je
adc
scas
and
cmp
dec
jbe
imul
mov
pop
sub
mov
lock
fdivrs
loopne
movsb
and
cs
loopne,pt
test
push
mov
sahf
mov
add
jnp
lods
leave
push
mov
sar
cmp
sbb
xor
scas
mov
lahf
jae
pop
cmp
mov
mov
inc
pop
nop
pop
push
inc
out
xchg
iret
xchg
inc
mov
mov
test
popf
push
sub
ret
fs
std
push
xchg
testb
iret
pop
xchg
push
sti
and
lods
xchg
push
push
mov
xchg
xor
jle
xchg
data16
enter
fnstenv
jmp
push
push
push
rclb
ljmp
loope
fimuls
jne
inc
push
and
push
push
xchg
jmp
pop
addr16
enter
adc
mov
jge
inc
mov
insl
jle
mov
xchg
gs
repz
arpl
out
call
bound
loopne
and
mov
rcl
dec
push
movsb
cmp
mov
je
mov
jb
sub
outsb
mov
push
ljmp
mov
adc
div
packssdw
adc
call
mov
fisttps
fisubs
sbb
mov
imul
mov
mov
movsl
fcoms
sbb
inc
lods
test
and
fnsave
test
fadds
mov
pushf
mov
add
or
mov
pop
or
arpl
aas
mov
mov
pop
mov
adc
and
jecxz
insl
daa
sub
rclb
dec
stos
xlat
aad
repz
call
icebp
push
lret
shlb
in
jo
repnz
or
les
mov
lds
pusha
or
shl
jmp
out
jecxz
jge
movsl
xchg
xchg
push
add
push
cld
repz
popa
dec
test
jmp
shll
jecxz
add
lea
loop
push
mov
lods
lock
int
sbb
test
ret
daa
jle
mov
test
lods
cmpsl
lret
scas
dec
add
push
imul
lcall
cmp
xor
mov
sti
pop
rcrb
dec
les
sub
shlb
scas
dec
test
xchg
iret
cmp
stos
mov
sarb
xchg
addl
pop
lock
and
mov
fistpll
jae
mov
loope
scas
nop
cmp
test
mov
lods
out
push
dec
push
leave
dec
pop
insl
add
int3
fsqrt
subl
stc
adc
xchg
mov
adc
jno
mov
into
mov
adc
push
jo
jp
test
daa
mov
dec
js
lcall
mov
xor
jg
jo
mov
fdivl
add
cli
sbb
cmp
push
fldl
cmpl
xchg
jmp
sbb
cwtl
jne
icebp
pop
lahf
loop
xor
insb
shr
mov
xor
test
sub
in
mov
dec
push
in
les
jmp
aam
fs
xchg
lods
jmp
cmp
cmp
lret
mov
shll
adc
les
cwtl
inc
sub
jb
dec
out
in
mov
jne
aaa
or
testl
pop
or
mov
int3
xor
sub
add
sub
sbb
sub
fsubl
adc
jae
fmull
test
xchg
mov
dec
push
in
ja
pop
jne
jp
mov
fistps
in
roll
mov
sub
inc
sbb
jo
jg
push
cmc
inc
in
cmpw
mov
pop
and
out
push
sub
out
mov
stos
data16
add
xlat
repnz
mov
jecxz
sub
int3
call
aad
mov
movsb
xchg
sbb
clc
rcr
repnz
outsl
sahf
and
cmp
fcom
dec
lods
mov
sub
dec
lea
cmp
mov
js
enter
imul
out
mulb
jecxz
or
xchg
leave
mov
and
adc
sahf
adc
sahf
adc
or
insb
icebp
xchg
rorb
das
dec
push
xchg
arpl
mov
imul
fnsave
mov
lcall
cmp
sub
clc
mov
shlb
ds
and
dec
mov
jbe
sbb
dec
jbe
mov
jmp
cmpsl
and
jecxz,pt
iret
test
jae
mov
mov
adc
cmp
add
jl
outsb
ljmp
loop
mov
cmpb
in
pusha
mov
lret
xchg
mov
xor
and
clc
aam
inc
adc
test
mov
sbb
aaa
dec
orl
lahf
mov
shll
imul
ret
mov
mov
test
clc
lea
jno
cwtl
dec
jmp
test
pop
jg
in
push
scas
arpl
fdiv
scas
faddl
rcll
add
push
cmp
inc
inc
les
mov
jo
mov
cmp
test
mov
das
lds
push
sbb
das
add
or
adc
push
xchg
sti
pop
inc
test
sub
pop
sub
dec
es
inc
cmp
mov
xor
fidivs
cltd
xchg
loope
xchg
inc
lret
add
jae
push
insl
icebp
testl
and
iret
adc
or
sub
frstor
pop
xchg
xor
cmpsb
inc
mov
rcl
lods
fcomps
stc
xchg
int3
loope
imul
outsb
rorl
ljmp
fcoms
cltd
es
fstps
push
xor
push
call
pop
sub
or
sti
jne
mov
xchg
jae
mov
lods
or
fmuls
xor
mov
adc
xchg
movsl
and
mul
movsl
repnz
mov
adc
data16
push
and
das
add
pslld
insl
fistpll
pushf
popf
cwtl
mov
inc
cs
xchg
adc
mov
sti
push
lods
jmp
push
xlat
test
clc
adc
iret
rol
ds
fs
jo
xchg
mov
outsl
sbb
icebp
sbb
jmp
cmc
sub
dec
das
shlb
xorl
imulb
movsb
fsts
mov
cs
mov
in
scas
aaa
dec
cli
aaa
sbb
inc
test
pop
in
inc
jmp
inc
sahf
jmp
inc
mov
cs
or
cmp
pop
dec
pushf
ror
jg
cli
sbb
and
push
scas
lret
add
or
sbb
movsl
test
popf
call
out
inc
mov
cmpl
adc
sbb
jg
mov
cmp
in
pop
sbb
out
cmpsb
mov
or
test
fucomip
das
mov
movsb
push
out
cs
imul
fwait
das
pop
jno
outsb
sub
dec
sub
outsl
push
dec
xchg
and
sar
lods
sbb
pop
aas
cmp
icebp
sbb
xchg
cld
mov
push
mov
jno
sbb
cmpsb
ljmp
pop
outsl
and
arpl
dec
fists
sbb
lea
push
loope
xchg
sbb
lret
fisubrs
xor
sub
std
and
lods
mov
arpl
xchg
scas
cmp
mov
add
xor
outsl
adc
gs
loopne
int
test
loop
push
add
test
cmp
mov
push
mov
sbb
and
xor
sbb
xor
fnstsw
add
test
sbb
cmpl
mov
cmp
push
scas
fsub
push
jb
mov
in
ja
dec
add
fnstcw
mov
data16
cwtl
andb
and
xchg
in
add
imul
add
lcall
and
mov
mov
mov
adc
scas
insb
insl
cs
popa
fcmovne
mov
nop
cmp
aad
jecxz
xor
ret
int
vunpcklps
push
scas
mov
inc
dec
cmp
imul
ljmp
cli
xchg
lods
sub
jmp
push
jmp
sbb
imul
push
inc
cmc
shll
add
orb
adc
or
int
pusha
jae
and
xor
clc
cmp
inc
ret
xchg
fidivs
dec
xlat
xchg
mov
push
sarb
jp
test
call
push
push
inc
dec
cmp
cld
dec
xchg
mov
push
cs
adc
fwait
mov
repz
mov
xor
mulb
mov
scas
jo
pop
mov
pop
lahf
rcrl
push
subb
stc
in
xchg
pop
leave
mov
repnz
push
dec
aad
fcmovu
push
lcall
cli
cmp
mov
and
mov
in
jp
in
pop
cmpb
mov
adc
mov
mov
ljmp
xor
or
pop
jge
fbstp
or
sbb
in
dec
sbb
mov
pop
je
out
lods
test
pop
push
xchg
loopne
movsl
adc
fadds
mov
adc
std
and
push
ljmp
rclb
jno
cltd
xchg
xchg
xor
cmpsl
rolb
arpl
xchg
pop
inc
insb
mov
ljmp
and
push
lea
pusha
movsl
hlt
pop
xchg
ret
and
cmp
pop
movsl
mov
jp
or
testb
xchg
js
rcll
push
pop
fisubs
imul
addl
inc
leave
inc
xlat
inc
test
or
sarb
in
mov
std
aas
lcall
add
xchg
inc
or
popa
mov
push
fnstsw
and
dec
jg
ror
xchg
cmpb
adc
rorl
repnz
mov
mov
rclb
xor
inc
les
dec
jge
mov
adc
dec
prefetch
gs
into
test
and
sbb
dec
test
mov
xchg
and
mov
in
jl
imul
pop
jbe
jnp
push
xchg
fmull
ja
lret
or
adc
inc
and
xor
enter
dec
push
fisttpl
and
inc
sbbl
mov
push
push
sbb
adc
lock
cmp
add
arpl
call
jbe
inc
sbb
out
mov
stos
leave
cmp
and
frstor
pop
call
les
cltd
jae
jmp
push
out
adc
filds
stos
pop
in
adc
enter
lret
fwait
js
out
cld
mov
cmp
xchg
cwtl
iret
mov
pop
iret
push
sbb
xor
jo
aam
push
xchg
adc
dec
lahf
loopne
sub
dec
jmp
mov
add
sbb
pusha
into
jns
test
push
inc
xchg
cs
shrb
lock
iret
dec
mov
std
aad
add
cmp
jns
mov
repnz
es
pushf
pop
xchg
push
mov
jl
and
push
sbbl
mov
jnp
inc
pop
add
or
lea
sub
mov
adc
pop
dec
loopne
add
aam
rorb
dec
sbb
adc
jo
or
xchg
jae
dec
xlat
fldt
xor
or
pushf
sete
sti
js
add
cmpsb
mov
xor
repz
dec
sti
sub
fistl
xor
out
andl
stos
lahf
mov
cmpsl
jnp
lret
orl
pushf
es
adc
add
lock
andb
mov
pop
insb
outsl
rcr
xchg
push
mov
jns
push
call
outsb
dec
push
aas
xchg
loopne
adc
mov
jo
hlt
mov
jb
addl
xchg
xchg
int
xor
adc
sbb
jb
fidivs
xlat
push
mov
fidivs
hlt
lods
push
nop
shlb
loope
cmp
repnz
cmp
xor
jns
hlt
push
jp
or
cmp
int3
adc
lahf
and
dec
push
aaa
mov
nop
xchg
ja
mov
outsb
loop
add
bound
add
cmp
iret
and
or
mov
jae
pop
xchg
dec
arpl
std
xor
rolb
ret
out
and
movsl
sbb
daa
and
imul
int
in
xor
inc
repnz
mov
or
sub
scas
xchg
pop
sarb
ret
leave
jle
sub
imul
mov
jmp
inc
push
add
adc
add
jne
cmc
and
movsb
add
js
adc
sbb
test
lock
shrl
jno
adc
push
stc
fdivs
cmpsb
jb
pop
inc
lret
or
dec
and
mov
incl
sub
jge
jne
jo
add
push
ficoml
std
cmp
jbe
adc
fcmovne
inc
lahf
cmp
add
adc
dec
push
fstps
and
add
jae
mov
addr16
mov
sbb
jbe
fisttpl
xlat
pop
insl
dec
bound
outsl
push
icebp
pop
stc
push
cld
push
mov
push
lea
in
and
add
dec
into
push
fcomps
imul
filds
xchg
and
std
int3
push
stos
adc
outsb
sahf
shlb
ret
sub
adc
sub
push
imul
std
sbb
cli
xor
mov
sbb
adc
scas
out
adc
lods
mov
and
lods
add
lds
jae
pop
mov
mov
mov
rorb
insl
ret
scas
xor
ret
pop
xor
ss
sahf
fcomps
std
mov
dec
imul
lcall
cmp
mov
add
xchg
fildll
xchg
pop
insb
fyl2x
std
add
and
shlb
outsb
jmp
mov
dec
inc
fsubrl
mov
dec
js
push
xlat
sub
add
sub
test
outsb
sahf
cld
bound
je
xor
inc
out
xchg
js
repz
push
ja
test
xor
sub
lods
inc
sub
sahf
adc
je
adc
mov
fdivs
pop
pop
movsb
xlat
ss
int
loopne
or
cmp
in
xorb
dec
jp
mov
pusha
fstl
mov
xchg
jge
push
sbb
addr16
sbb
sub
or
mov
cmp
sub
fisttps
and
cltd
lea
xor
inc
ret
mov
mov
sub
hlt
les
jecxz
adc
incb
dec
mov
jl
add
cli
lods
mov
sti
lods
mov
jecxz
mov
pushf
cltd
push
inc
cmovno
mov
jo
je
inc
rorb
jb
inc
mulb
jle
push
rorl
lea
jb
add
vsubsd
imul
xor
pushf
adc
mov
push
outsb
outsl
lcall
mov
jnp
push
outsl
cmpsb
fcmovnb
cmc
aam
dec
xor
xor
cwtl
test
cmc
xor
sti
stos
nop
stos
xor
inc
jmp
xor
mov
mov
pop
dec
ret
adc
orb
ret
and
dec
dec
xchg
dec
xchg
ljmp
call
sahf
es
pop
int3
addr16
repz
xchg
cmpb
fcomps
cmp
or
jl
fsave
push
es
push
fildl
orb
ja
lret
xor
leave
sbb
imul
sti
mov
add
inc
cld
mov
adc
lret
jg
fs
pusha
or
adc
ds
in
cwtl
testb
scas
jle
mov
pop
dec
add
cmp
fadds
js
xchg
pop
js
sub
in
jbe
shll
fmulp
add
pop
mov
negb
push
adc
pop
fistl
cmp
test
test
cmpsl
ds
jp
out
mov
iret
and
dec
ja
das
int
inc
lods
imul
mov
inc
cmpl
xchg
imul
push
mov
jle
push
sbb
add
out
cli
and
cld
cmp
mov
push
push
xor
xlat
outsl
adc
aam
mov
and
inc
lcall
dec
dec
scas
aam
arpl
sar
or
sub
inc
sbb
negl
xchg
aad
xor
xlat
or
add
std
cltd
pop
pop
dec
mov
inc
mov
cmp
jg
mov
mov
std
pop
dec
push
jmp
dec
and
ja
jmp
xchg
pop
mov
aad
fcomip
add
and
iret
cmpsl
mov
pop
dec
popf
push
push
add
in
lock
jl
int3
inc
push
scas
sbb
add
test
xor
mov
xchg
sbb
filds
addl
lret
int
sub
mov
and
dec
sahf
adc
mov
jae
sbb
arpl
pushf
add
clc
mov
inc
mov
sbb
in
nop
adc
inc
mov
fdivl
lcall
pop
sub
push
push
mov
or
xor
jg
sahf
mull
mov
sbb
test
pusha
rcr
inc
xchg
dec
xor
test
aaa
pop
or
jae
mov
cmpsb
add
xlat
rorb
mov
or
dec
adc
pop
xor
push
dec
fstps
pop
out
fmul
sbb
and
xor
inc
rcr
repz
in
fldt
popf
std
add
iret
jl
int
shlb
lods
mov
mov
jno
or
bound
jle
insb
loop
cmp
pop
repz
lock
fwait
xchg
add
fs
pop
xchg
jmp
ficoms
mov
fst
xchg
sbb
ljmp
mov
cmp
loope
into
out
cmpb
push
adc
push
inc
lret
push
int3
cmpsb
cmp
pop
push
xchg
jns
fwait
xlat
bound
std
xchg
and
pop
outsb
insb
aas
repnz
idivb
dec
push
sbb
pop
dec
loope
cmp
call
inc
das
xor
jecxz
cli
outsl
aaa
rcrb
test
pop
jecxz
idivb
ficoms
mov
xor
pop
mov
enter
adc
out
cs
das
jp
push
sahf
test
and
imul
xchg
or
into
int
push
inc
add
pop
enter
pop
or
mov
jle
sub
mov
cmc
subl
popf
cli
sbb
dec
in
call
cmp
dec
or
or
test
dec
out
mov
aaa
mov
push
sbb
sti
mov
cvttps2pi
imul
repz
mov
ret
sbb
je
js
push
and
lret
addr16
sub
std
movsl
stc
mov
int3
push
loopne
imul
gs
lods
in
lret
sbb
pop
push
out
xchg
fsubs
sub
enter
mov
mov
jno
cmp
cmp
stos
cmp
pop
jl
das
add
and
fidivrs
out
xor
out
cmp
das
ljmp
or
xor
dec
pop
or
push
les
cli
daa
ss
jae
cmpsl
fidivrs
sti
cmc
stos
mov
add
ljmp
jbe
and
push
aam
es
or
cmc
pop
adc
inc
adc
mov
sbb
fs
and
sbb
rcrl
imul
mov
xchg
or
insb
jl
add
inc
outsb
outsl
sub
lcall
adc
inc
push
mov
fsubs
addps
push
jp
dec
or
popa
je
mov
or
mov
icebp
fdivrl
push
ds
out
lods
insb
not
mov
ss
cmp
rorb
cld
jo
lret
rdpmc
movb
push
fsubs
ja
mov
jmp
mov
popf
fidivrl
push
fistl
push
clc
in
adc
movsb
jne
in
mov
in
cs
mov
jmp
cmpsl
mov
push
xchg
int3
dec
or
cmpsl
nop
or
inc
mov
subb
lock
or
fists
loopne
or
jo
adcb
jecxz
cmpl
sub
add
lcall
lret
mov
filds
insl
fs
add
mov
std
jns
dec
push
setle
or
cli
push
add
dec
add
mov
xor
mov
loop
cmp
and
or
sti
mov
aas
out
ret
pop
sub
orl
in
test
js
dec
lods
push
ds
cmp
and
jae
movsbl
jno
pop
xchg
adc
hlt
inc
jbe
clc
dec
mov
enter
aam
push
xchg
decb
or
dec
xlat
push
xchg
fildl
jbe
pop
shrl
mov
add
jp
enter
or
mov
nop
subb
sub
sti
mulw
std
push
fwait
sub
mov
out
test
mov
arpl
repnz
jb
xor
ret
in
fisubl
loop
jns
lea
xlat
inc
jle
mov
ss
and
insl
fwait
testb
and
mov
cmp
ss
xchg
inc
adcl
xchg
insb
out
ffree
lret
inc
inc
decl
push
xchg
addr16
mov
lahf
pop
adc
outsb
shl
out
enter
mov
sahf
or
jp
dec
dec
xchg
or
add
xchg
jae
enter
out
loopne
cmpsb
mov
jge
adc
dec
inc
fsts
jle
jmp
mov
dec
lcall
into
push
call
dec
xchg
imul
push
sub
notb
push
ficoms
call
aaa
xor
pop
pop
icebp
mull
lret
scas
fisttpl
daa
nop
inc
dec
xchg
pusha
outsl
mov
pushf
scas
stos
jmp
mov
mov
or
push
inc
shll
and
inc
jnp
mov
std
mov
dec
mov
pop
pop
dec
imul
adc
mov
xor
pop
push
lss
loopne
push
inc
mov
push
jno
mov
mov
fcomps
mov
add
iret
ljmp
sub
xchg
dec
lods
mov
push
in
jl
and
jns
pop
sbb
and
outsb
cltd
pushf
or
sti
mov
xchg
push
lea
pop
addb
add
nop
lods
int
ljmp
cli
call
ds
into
xchg
jns
hlt
aad
adc
cmp
mov
mov
sahf
sub
jp
jne
sub
aam
mov
fsub
enter
pop
call
sub
shl
inc
aam
pop
sub
fsubs
stc
cli
jnp
xchg
mov
aas
jne
push
sbb
repz
and
test
mov
jae
mov
mov
push
fldl2t
dec
cmp
cmpb
jmp
jg
addr16
lret
mov
mull
dec
mov
fidivrs
fwait
movsb
add
gs
mov
jbe
lods
jae
mul
shll
aaa
jmp
adc
cli
pop
jl
clc
adcl
inc
test
xor
bnd
movsb
dec
popf
or
and
js
dec
mov
push
fiadds
lods
js
cmp
mov
clc
in
int3
test
mov
imul
inc
repz
dec
pop
sbb
adc
pop
out
sub
test
lods
sarl
test
shrl
lock
sahf
cwtl
and
hlt
stos
pop
lret
adc
cmpl
js
mov
pop
leave
mov
stc
mov
fcmovne
xchg
cltd
mov
add
inc
insl
lock
xchg
mov
into
lahf
lods
pop
pop
inc
insl
divl
pop
ja
call
aas
std
jbe
cmpsb
push
pop
xchg
jg
mov
pop
gs
jmp
lahf
xchg
test
pop
add
mov
testb
mov
push
add
loope
scas
pop
xchg
in
jne
and
ret
push
mov
stc
inc
mov
jl
jle
mov
or
sub
out
mov
adc
rep
dec
adc
adc
iret
rorb
scas
fimull
mov
popf
dec
push
sbb
sbb
and
xchg
jno
adc
xlat
inc
push
aas
cmp
pop
push
xor
das
cmp
add
pop
jge
or
leave
sub
dec
in
out
insl
les
and
stc
xor
movsb
fdivs
call
dec
cmp
mov
add
cltd
inc
lods
sbb
mov
jmp
std
jle
lea
mov
or
data16
repz
shrb
lods
in
loop
test
add
bound
ficompl
sti
insl
and
addr16
pop
lahf
xchg
and
sbb
push
dec
xor
subl
lods
push
push
pop
cwtl
aad
addr16
dec
or
jnp
push
out
out
pop
popf
scas
sbb
cmp
push
mov
in
out
sub
dec
mov
push
mov
icebp
and
push
stc
mov
sarl
jl
ss
xchg
push
sub
loop
and
neg
js
mov
or
or
push
test
and
je
inc
subl
andb
sbb
or
inc
test
es
test
addr16
pop
inc
push
jg
sti
mov
mov
jl
xchg
popf
ljmp
lods
mov
hlt
pop
sub
leave
cs
add
les
data16
jo
ljmp
mov
or
frstor
inc
lret
and
loopne
cmpsb
lret
sbb
xor
fsubl
adcl
xchg
outsb
in
xor
lods
outsb
adc
mov
jb
cmp
push
sti
mov
or
pavgw
and
insb
pop
or
pop
daa
push
out
leave
and
test
lret
or
inc
xchg
sbb
in
pop
mov
ret
sub
jle
frstor
int3
sarb
pop
sahf
popf
push
icebp
jb
cmc
xlat
push
icebp
mov
insb
movsb
fsubrp
dec
nop
shrl
cld
rcll
lahf
add
jge
adc
sub
xchg
xor
pusha
loopne
and
mov
out
jl
add
sbb
mov
jae
es
pop
xchg
or
sti
stos
fisttps
cmp
mov
dec
outsb
cmpsb
sub
xor
and
out
jne
movsl
in
out
stc
add
call
xchg
mov
ret
adc
ret
in
add
push
xchg
push
test
lea
mov
push
loop
lods
and
jmp
out
jmp
push
and
cmp
pushf
fidivs
jb
sbb
xchg
xchg
push
pusha
pop
push
js
in
pop
xlat
dec
mov
fldt
jb
cmp
pop
xchg
mov
jp
and
mov
bound
dec
push
inc
add
jbe
rorb
or
repnz
outsb
jecxz
lea
push
jp
fcmovnbe
mov
mov
cmp
xchg
mov
out
push
xlat
shrb
test
and
sbbb
scas
movsb
mov
mov
insb
cs
out
push
sub
or
inc
xor
dec
dec
mov
rcrl
sbb
cmpsb
jbe
mov
sbb
inc
mov
repz
jle
mov
adc
mov
fbld
mov
shlb
inc
xchg
lret
jmp
mov
xor
inc
inc
jne
add
or
popa
pop
lds
idiv
lret
push
xchg
pop
push
and
lds
push
add
dec
lods
xchg
ret
mov
loope
je
aas
mov
xor
mov
adc
xor
fcoml
sub
mov
fidivs
cmpsb
dec
lock
pop
xchg
rcrb
into
adc
cs
fsubl
sbb
mov
mov
dec
adc
mulb
fdiv
sar
ss
mov
push
cmc
mov
jg
cmp
lret
nop
mov
cwtl
inc
xor
out
inc
mov
add
add
jno
popa
inc
cmp
sub
dec
fistpl
cmpsb
mov
inc
or
mov
cltd
out
push
mov
into
sub
sahf
in
jp
addr16
in
les
dec
push
jne
pop
xchg
stc
das
mov
cmp
fmuls
imul
fldt
jge
stos
sub
fmul
iret
fbstp
mov
out
jg
mov
je
lahf
ret
lock
inc
dec
xor
leave
jg
xor
adc
pop
inc
and
mov
shll
in
jmp
mov
cli
mov
pop
push
xchg
jnp
pop
bound
add
shl
dec
movsl
dec
mov
andb
mov
sub
jge
loop
xchg
jne
test
inc
rcl
add
adc
adc
mov
mov
adc
leave
add
clc
leave
cmp
cmc
jne,pt
bound
sub
mov
cmp
mov
mov
repnz
loope
into
push
jbe
or
je
sbb
aad
rorb
xor
enter
xlat
dec
add
mov
jne
ret
rcrl
xchg
pusha
bound
scas
xor
cmp
xorl
movsl
cs
mov
and
lcall
hlt
cmp
insl
ficomps
xor
mov
or
dec
xor
iret
mov
sub
add
aam
push
cmp
sbb
add
jae
shrl
fs
cltd
mov
rol
jnp
push
xor
push
clc
xor
lret
mov
jns
push
cli
pop
sub
into
inc
mov
filds
sub
into
repnz
dec
cltd
insl
xchg
sbb
mov
into
xor
outsb
mov
js
sti
pop
test
and
xchg
std
mov
hlt
test
les
cld
add
mov
pop
pop
les
and
push
cmp
cmp
das
in
and
adc
cli
addr16
ja
mov
popf
mov
and
add
js
adc
push
in
cmp
loop
sub
xchg
arpl
enter
jae
das
cmpsb
inc
mov
pop
push
das
clc
pop
xor
xchg
js
mov
repz
into
sbbl
leave
enter
in
insb
les
insl
jle
jle
sub
jno
jbe
bnd
std
xor
insl
cmpsb
sbb
inc
pop
mov
xchg
js
adc
xchg
stc
cmp
cld
stc
mov
mov
sbb
adc
lea
mov
aas
ud1
mov
jno
loop
out
inc
imul
sbb
out
sbb
push
jp
call
pop
iret
cmp
dec
pop
mov
pop
adc
push
cli
jns
cli
jb
push
fdivrs
scas
xchg
pusha
inc
pusha
dec
test
loopne
adc
dec
loope
popf
test
or
adc
lods
roll
in
sti
mov
faddl
int3
lret
shrb
dec
iret
xlat
cmp
pushf
cmp
shll
cmp
sub
shl
pop
int3
cmp
jo
psubw
stos
mov
lahf
repnz
sbb
stos
movsb
pop
dec
or
stos
pop
sbb
xchg
shrb
adc
add
bound
pop
sub
mov
stos
xor
jle
fnstenv
and
xlat
add
shrl
stos
mov
lods
out
dec
out
shll
insl
stc
mov
pop
dec
push
mov
dec
jns
mov
push
mov
mov
insl
fcompl
mov
mov
enter
inc
push
cli
cmp
or
shrl
fisubs
inc
push
mov
test
pushf
push
rcll
cld
adc
pop
inc
xchg
popa
xchg
stc
outsb
push
hlt
and
insb
pop
ljmp
movsl
dec
xor
adc
add
int
mov
xor
sti
hlt
or
adc
aam
cmpsb
jecxz
fldcw
cli
test
mov
xor
stos
push
mov
push
cwtl
jl
add
add
jns
subb
push
ficoml
push
inc
fistpl
push
cmpsb
daa
iret
adc
jecxz
testb
popf
pop
mov
dec
add
test
jle
dec
in
aas
pop
es
fsubp
cld
or
loop
out
pop
rorb
xchg
sub
ret
mov
cmpsb
sti
cmpsb
xor
push
or
cmp
aas
repnz
push
fisubl
test
icebp
int3
or
mov
fildl
pushf
mov
jecxz
std
out
int3
jnp
xchg
adc
fidivs
adc
pop
sbb
repnz
cmp
push
fsubl
imul
in
or
clc
movsl
push
scas
dec
cmp
xlat
imulb
fs
mov
jno
pop
popa
xor
pop
dec
popa
cmp
jge
pop
or
add
sbb
cs
pop
bound
dec
push
sti
push
imul
dec
lds
iret
stos
std
stos
pop
adc
fsubl
ljmp
sub
fbld
stos
jo
xchg
mov
jne
inc
sub
fimull
and
and
add
faddl
add
pop
mov
xorl
jbe
xchg
fisttps
and
pop
jp
insl
rorb
popf
xchg
in
roll
aas
xchg
sub
cs
mov
pusha
repnz
insb
cmp
in
cmp
test
movsb
aas
cs
movsl
ret
insb
imul
pusha
js
mov
mov
movsl
test
adc
mov
cld
loop
cs
rolb
shll
mov
clc
incl
sbb
cmp
mov
pop
dec
inc
rcll
psrad
adc
mov
xchg
cmp
xor
fnstcw
pop
shll
ds
inc
arpl
mov
mov
jmp
or
shl
imul
out
jbe
aas
push
sbb
dec
in
shll
or
adc
in
jae
xlat
sbb
push
adcl
sub
pushf
data16
clc
xchg
push
scas
adc
jg
adc
stos
push
inc
inc
aaa
mov
pop
pusha
cmp
std
add
pop
cmc
cltd
xchg
push
cmp
bound
imull
shlb
xlat
cmp
sub
mov
fs
loopne
repz
cli
out
loopne
rol
insl
push
repnz
pop
mov
xchg
or
xchg
mov
mov
shlb
scas
jno
mov
inc
add
sti
pop
cmp
add
repz
mov
int
pushf
int3
mov
dec
jmp
sub
adc
sub
test
loop
xchg
add
push
and
sti
std
pop
bound
lcall
cmp
sbb
stc
aas
in
xchg
popf
repnz
enter
and
xorb
ficoms
xchg
mov
sti
hlt
movsb
push
or
int3
pop
in
adc
sub
push
inc
xchg
pop
int3
adc
cwtl
in
xchg
pop
inc
je
add
xor
cmpsb
dec
gs
mov
sbb
and
xlat
cmp
rclb
repnz
rclb
sub
mov
int3
jno
sbb
popf
lods
cmp
shrl
adc
push
out
repz
mov
lods
cmp
mov
cltd
xchg
lret
cltd
int
push
ds
data16
cmp
inc
insl
sub
jge
push
inc
adc
add
or
and
orl
mov
in
add
or
sbb
sahf
dec
and
rclb
inc
mov
je
pusha
and
rolb
popa
mov
add
repz
loop
push
jp
dec
mov
leave
mov
jae
sti
sub
mov
push
pop
rdmsr
dec
or
cmp
or
mov
and
jge
mov
scas
dec
call
fnstenv
and
mov
repz
jecxz
icebp
hlt
sbbl
inc
add
xchg
lods
mov
fadd
out
and
stos
shlb
nop
xchg
dec
mov
cli
ja
cmp
setp
and
pop
jmp
or
frstor
jp
sbb
lea
int
inc
xchg
ds
inc
in
sbb
fldl
shlb
repz
mov
adc
cld
bound
mov
cmc
das
cmp
push
out
lods
jmp
push
mov
pop
jle
mov
mov
sbb
sbb
fdivl
ljmp
je
filds
loopne
fwait
push
xchg
hlt
push
adc
out
out
sbb
add
ret
inc
addr16
mov
out
mov
sahf
int3
ljmp
je
mov
dec
mov
outsl
sbb
or
xlat
fwait
lock
leave
int3
pop
lock
jp
daa
ds
inc
std
lret
shlb
or
call
ret
out
adc
cmp
dec
sbb
add
test
mov
jne
leave
lods
mov
inc
pop
shlb
dec
les
testb
in
pusha
aas
mov
bound
cmp
in
xlat
sbb
fnstsw
loopne
push
sub
testb
push
in
sub
movsl
sahf
jo
sub
pop
rcr
iret
out
and
dec
icebp
add
add
mov
xor
sbb
ljmp
rclb
adc
mov
push
sar
mov
pop
hlt
in
mov
std
mov
mov
inc
sub
sub
stos
in
and
mov
ret
stos
push
dec
mov
sbb
jp
xor
jo
scas
pop
sbb
jl
jb
dec
jg
push
popa
stos
dec
sbb
mov
pop
pop
adc
sub
sbb
sti
dec
cmp
push
ret
pusha
mov
fstpt
aam
pop
mov
stos
fcomi
std
jb
fnstcw
call
add
inc
mov
sahf
lea
pop
jb
fnstsw
add
sti
das
pop
or
sub
push
sbb
add
push
add
push
fdiv
ja
and
sti
lock
insb
or
jg
scas
xchg
pop
adc
or
stos
aas
enter
inc
nop
inc
or
mov
lds
ret
or
loop
lock
dec
mov
sahf
pop
sub
lea
mov
mov
sub
mov
sarb
lds
cltd
jne
out
jae
mov
jno
inc
add
pop
scas
nop
es
add
stos
jg
jae
pop
cwtl
sbb
cmp
lret
sub
iret
cmp
jg
jae
lock
aaa
int
dec
mov
repnz
mov
and
xchg
xor
lret
push
lret
es
cltd
mov
cmpsb
pop
dec
subl
sahf
inc
mov
pop
cmp
pop
jne
mov
mov
pop
movsb
push
bound
ds
andb
dec
xor
adc
cli
jb
or
sbb
ljmp
push
je
sbb
jnp
xchg
cmp
les
or
arpl
dec
pop
jbe
and
mov
stc
test
cmpsb
ret
aam
adc
push
mov
mov
stos
pop
sub
jp
inc
sub
sbb
bound
inc
insb
je
mov
fs
jbe
add
cmpsl
jo
dec
call
jno
push
stos
sbb
es
push
popf
subl
xor
pop
mov
pop
cltd
adcb
call
sub
jl
mulb
daa
dec
and
mov
mov
les
cmp
xchg
sub
and
aas
mov
cmp
rcll
ret
std
pusha
ds
xchg
fcomp
sti
mov
or
dec
push
ret
pop
pop
call
mov
sbb
cmp
call
sub
jae
jbe
aas
pop
sahf
scas
xor
xchg
cmp
lcall
cmp
adc
or
xor
arpl
addb
rorl
pop
sub
testb
stos
cmovp
ficoml
mov
jns
shlb
negl
jbe
jne
push
push
rcll
xlat
sub
cs
stos
insl
inc
aam
arpl
or
andl
push
push
and
inc
sti
dec
lods
inc
add
sub
jp
mov
outsl
cmp
aad
inc
mov
sub
imul
rcrb
mov
mov
pop
mov
int3
jbe
aaa
mov
mov
inc
push
adcb
mov
sub
cltd
out
stc
mov
dec
mov
dec
push
test
xchg
dec
imul
push
aad
adc
jns
dec
mov
cmp
mov
imul
xchg
std
sbb
imul
clc
rol
or
ja
test
call
jbe
jecxz
xor
lret
cs
inc
insb
adc
lods
mov
int
adc
jmp
test
sbb
and
xor
jmp
rorl
xchg
je
ljmp
popf
push
into
sub
xor
testb
inc
out
pop
inc
sub
test
jb
outsb
fisubrs
in
inc
rcrl
pusha
enter
xchg
pop
mov
lret
or
xlat
lret
jge
test
iret
adc
inc
mov
push
lret
cmp
pop
sbb
clc
adc
cld
pop
icebp
add
add
movsb
clc
enter
outsl
stos
and
popf
sub
in
sbb
mov
scas
and
pop
lds
dec
push
lret
jmp
scas
fistpll
jbe
push
dec
cwtl
lcall
pushf
sbb
rcll
and
xor
push
jb
or
popf
dec
sub
pop
imul
jge,pt
mov
repnz
jno
gs
mov
adc
in
jo
add
repz
jb
rclb
nop
jl
xchg
and
mov
push
decl
xchg
cmp
ja
test
sbbl
out
and
leave
lds
mov
xor
xor
loop
int3
test
ss
cmp
xor
scas
jp
cltd
mov
pop
cmp
pop
pop
xor
cmp
pusha
stos
popf
mov
xchg
inc
xor
cmpsb
pop
call
mov
stos
out
add
lods
inc
inc
addr16
push
loop
adc
loop
sbb
cltd
mov
add
inc
pop
aas
mov
test
mov
jg
in
lock
sbb
push
loope
inc
add
add
push
aad
adc
enter
add
out
sbb
push
push
mov
fildll
add
inc
lahf
cwtl
xor
sub
pop
in
pop
pop
enter
ss
outsb
and
leave
int3
fisttpll
mov
mov
leave
out
add
div
xor
stos
sarl
in
repnz
js
test
cmpsb
cltd
or
jns
adc
cmp
xlat
push
sub
pop
mov
adcb
or
pop
outsb
adc
sbb
out
jnp
fisttpll
shrb
cmp
subl
fmul
lret
sbb
lods
ficoml
ds
inc
add
push
xchg
dec
xor
pop
insl
outsl
outsl
or
cld
and
or
shr
cmp
popf
ljmp
dec
loope
insb
lods
cltd
push
xor
pop
xchg
adc
fists
in
nop
push
push
test
fs
xlat
pop
lea
sub
or
jae
cmp
pop
push
cmp
pop
mov
dec
mov
dec
stos
scas
popf
xor
out
mov
inc
roll
and
jo
add
and
jp
xlat
int3
cmp
push
sbbb
test
jp
and
in
xchg
daa
aam
mov
mov
cmp
sti
int
decl
out
fisttps
orb
sub
mov
pop
push
fstpl
jge
jo
jns
jmp
jnp
push
movb
add
hlt
mov
or
push
mov
sub
aaa
cmp
shll
ficoms
test
or
mov
inc
or
pop
andnps
imul
sub
mov
notb
xor
cwtl
ret
sub
push
fldcw
push
inc
mov
outsl
mov
adc
in
adc
mov
add
jnp
xlat
cmpl
cmc
std
dec
mov
xchg
xchg
jmp
cli
dec
dec
and
cmp
pop
sbb
lock
lock
lock
dec
or
mov
cmpb
and
jp
fimull
sub
cmp
sbb
push
pop
stos
jmp
jl
or
sbb
data16
shlb
push
or
jne
fsubrl
xchg
xchg
jecxz
add
mov
cmp
dec
popf
sahf
sti
pop
in
or
and
rorb
jae
xchg
push
fwait
mov
mov
push
rol
sub
cmc
push
pusha
and
in
les
scas
or
out
repnz
movsb
push
push
imul
dec
mov
test
and
gs
test
push
mov
push
jmp
lret
imul
pushf
stos
addr16
inc
popf
imull
movsb
mov
sbb
dec
jecxz
mov
or
lahf
xchg
inc
inc
sub
inc
jne
popa
cmp
fmuls
adc
bound
sub
inc
cld
push
addb
jp
inc
aad
lcall
ss
sub
mov
push
xchg
clc
scas
into
repnz
or
test
xchg
mov
dec
dec
mov
push
cmc
pop
nop
sahf
sbb
cld
cwtl
or
ds
ljmp
mov
shld
or
jnp
pushf
lds
cmp
jae
push
mov
inc
ficoml
cmpsl
or
mov
out
xchg
cmp
xchg
mov
cmp
xchg
sbb
test
test
outsl
xchg
jp
int3
cwtl
call
aaa
in
mov
fcompl
dec
pop
cmp
lcall
or
jns
mov
and
cmp
xor
xor
mov
sub
jl
shlb
xor
aas
xchg
mov
xchg
jge
xor
es
sub
inc
fisttpl
inc
add
pop
test
jns
scas
subb
outsb
add
xchg
mov
adc
adc
stos
stos
and
xor
mov
decb
fidivs
mov
sbb
xchg
push
inc
jecxz
test
inc
addr16
cmp
xchg
xchg
repnz
add
clc
pop
sub
and
push
popa
mov
repz
push
stos
lret
aas
out
push
rep
xchg
mov
enter
add
sti
hlt
in
insl
lret
lret
jg
lods
nop
mov
jne
addr16
lahf
xorl
leave
mov
push
mov
test
jl
fmuls
sub
xchg
popf
mov
adc
cld
pop
dec
xor
fwait
sbb
xchg
or
xor
jae
push
jo
adc
push
adc
cmc
in
inc
sbb
and
jmp
cmp
xchg
jne
mov
ja
cmp
mov
cmp
mov
lods
xchg
mov
jne
push
mov
xchg
js
int3
das
pop
push
push
mov
mov
imul
ret
xchg
jo
into
leave
and
sbb
icebp
fs
jno
jp
jecxz
insb
inc
aas
jge
add
stc
xchg
lds
js
fimuls
sub
hlt
inc
jb
cli
dec
cmp
jne
cmp
scas
xor
rclb
xlat
ja
and
add
cmp
sub
ds
sub
inc
adc
xchg
les
dec
xorb
int3
lods
mov
cs
adc
rcl
bound
cmp
fcompl
sbb
out
push
lcall
push
dec
xor
lahf
pop
push
cltd
sbb
and
inc
lea
subl
pop
sub
test
and
add
xchg
orb
xor
xor
mov
imul
sbb
pop
cmpsb
mov
psrlw
dec
in
das
push
in
mov
inc
add
or
bound
scas
xchg
add
rclb
xchg
push
imul
or
fmuls
pop
pushf
push
movsl
mov
push
inc
push
imul
cmpsb
fucomp
sbbb
add
sbb
lods
fsts
sub
xor
cmp
int
in
pushf
pop
xchg
jmp
pop
mov
add
mov
push
fnstsw
fisubrs
in
pop
push
int3
xchg
cltd
das
mov
dec
ljmp
enter
sub
or
int
fdivr
mov
imul
ret
fistpll
loop
dec
and
pop
ds
add
lock
cmp
cli
or
sub
push
mov
adc
adc
adc
xor
lock
jns
iret
out
in
add
adc
mov
stc
inc
cmp
andl
adc
shl
push
sbb
mov
lahf
jno
icebp
cli
shrl
inc
addb
jno
inc
pop
es
jmp
mov
mov
push
insl
out
subb
pusha
pop
imul
test
sbb
mov
jge
and
int3
lods
jmp
cmp
imul
inc
push
cmp
inc
in
lock
shlb
addr16
cli
es
xlat
dec
mov
xchg
pop
loop
mov
outsb
adc
sub
mov
test
cmpb
aas
pop
xor
cmpb
mov
inc
fisttpll
adc
push
test
iret
inc
ret
mov
or
clc
xchg
jle
mov
and
dec
dec
sbb
and
mov
les
sub
daa
aad
out
pop
adc
xchg
enter
jae
in
ret
lods
push
jb
loop
push
das
xor
cmp
lock
jecxz
adc
xchg
or
fildll
inc
lcall
pop
cmpsb
inc
mov
jnp
pop
lods
clc
ror
ljmp
clc
inc
bound
pop
pop
add
xchg
int
test
pushf
push
jo
pop
mov
mov
adc
inc
jno
fidivl
sub
push
bound
loopne
shll
cmc
lret
or
adc
xor
bnd
je
cmovp
ret
pop
call
mov
cmp
mov
adc
pop
inc
dec
and
iret
sub
sbb
mov
lds
mov
mov
mov
lods
sub
jl
xor
fldl
and
stos
pop
adc
bound
adc
xchg
pop
inc
push
xchg
xchg
mov
and
cmpsb
cmp
sub
pop
cltd
test
outsl
cmpsb
mov
in
mov
mov
in
inc
pushf
sti
cmovae
lret
fisubl
inc
pop
xchg
xor
bound
sbb
sbb
aas
das
mov
or
xchg
jecxz
and
mov
out
scas
fs
jmp
loopne
ror
into
ret
mov
push
leave
jb
add
hlt
cmp
inc
or
inc
push
cmpsl
into
mov
leave
jl
cwtl
ds
data16
push
add
out
push
xor
int3
mov
mov
and
fs
hlt
in
sub
push
daa
popf
mov
inc
xor
test
adc
add
cwtl
repz
mov
lock
or
dec
xchg
mov
or
dec
cmp
aaa
jp
dec
mov
inc
pop
insl
adc
loopne
clc
in
push
cmp
stos
loopne
mov
inc
push
loopne
into
xor
jge
inc
push
paddsb
aad
cld
and
pshufw
shl
xor
insl
outsb
ret
cmpsb
xchg
cmpb
cmp
xor
nop
sti
mov
stc
in
cmp
mov
xchg
mov
sub
mov
sbb
lea
data16
dec
fwait
add
mov
add
insb
jecxz
test
push
adcb
or
std
pushf
add
popa
or
lods
mov
and
mov
arpl
data16
das
jmp
mov
jmp
jo
sub
lcall
rolb
es
add
add
jle
and
filds
setge
add
or
in
cmp
xchg
int
sub
mov
sti
inc
test
xor
pop
fmuls
lods
int
mov
cmpsl
push
or
fldt
stos
sub
fst
test
and
pop
fdivrl
lret
pushf
jbe
idivl
scas
out
push
dec
pop
enter
stos
mov
bound
imulb
xor
and
std
push
and
sbb
push
dec
adc
jbe
pop
and
and
dec
lds
sub
xor
or
outsb
faddl
ss
push
add
mov
mov
pushf
xchg
mov
sarl
xchg
popa
mov
jle
mov
enter
or
in
pop
in
push
mov
rorb
es
push
shrb
or
pop
push
cmp
dec
out
jns
sub
xlat
movsl
jle
inc
adc
aaa
adc
daa
pop
fildll
cltd
sub
xchg
mov
jae,pt
jge
adc
sub
pop
test
adc
aad
mul
or
pushf
cmp
fdivp
or
dec
lea
imul
inc
xchg
mov
xor
adc
adc
jb
and
fbld
inc
cmp
cmp
jns
mov
js
jp
xor
sub
pop
lea
mov
insl
mov
roll
out
lcall
cwtl
pop
daa
stos
aaa
repz
jne
stc
xchg
int3
lea
sbb
test
mov
inc
or
sahf
pop
jp
jbe
fstpl
std
cmpsl
dec
lret
jg
jo
xchg
std
xor
ds
roll
jns
mov
out
loop
xchg
cmp
jbe
mov
xchg
add
fimuls
cld
cmp
cwtl
and
adcb
add
pusha
popa
test
mov
xor
movsb
jle
and
sbb
lods
add
into
jae
cs
dec
into
push
or
ffreep
pop
fcoml
das
mov
adc
jbe
shlb
movsb
inc
lcall
in
and
or
adc
jo
lods
or
sbb
push
pushf
adc
int
fisubs
insb
ret
das
push
cmp
aam
and
repz
sbb
rcrl
scas
clc
ss
shlb
adcl
test
or
shlb
dec
mov
add
xor
xchg
mov
cltd
nop
sbb
jns
sbb
int
and
inc
xchg
jne
out
ficoml
mov
loope
pop
jg
in
dec
push
out
movsb
cmp
xor
xchg
cli
ja
push
cmp
jae
pop
push
adc
push
pop
dec
jns
mov
in
push
and
mov
push
je
jne
ja
fldl
mov
nop
dec
icebp
push
shr
push
push
adc
mov
outsb
aas
mov
rolb
sub
pop
xor
icebp
xchg
xchg
decb
sti
sub
lods
adc
cmp
int
sahf
sub
repz
dec
decl
loope
jmp
add
xchg
leave
lods
dec
mov
outsb
push
out
mov
or
mov
add
mov
jmp
lret
jnp
stos
inc
xchg
mov
cld
out
lods
jno
into
lds
ret
fsub
pusha
insb
les
inc
lret
out
push
mov
add
loopne
stc
std
xorb
rcrl
lahf
mov
loop
xchg
inc
lods
push
cmp
out
int3
lods
mov
daa
and
xchg
mov
push
mov
or
dec
xor
ret
mov
push
sub
or
nop
mov
pop
negl
rcrl
jo
sbb
sbb
dec
xchg
fsubrs
pop
test
ret
xor
add
push
mov
insl
fidivl
push
mov
xchg
xchg
dec
xor
dec
jns
push
mov
jbe
inc
repz
or
psrad
scas
shrl
in
imull
mov
shlb
or
mov
push
dec
push
gs
repnz
pop
and
enter
popf
pop
mov
push
addr16
adc
ret
jge
leave
imul
add
and
daa
out
insb
sub
fimuls
scas
mov
cmp
xchg
js
insb
imul
inc
cmp
lret
out
leave
sti
adc
add
mov
or
rcr
cli
cmpsb
aas
stos
subl
jo
pop
sub
ja
popf
mov
lcall
aam
ljmp
pop
sub
test
mov
jne
xor
dec
xchg
sbb
xor
push
pop
sub
addr16
jp
ds
or
shrb
popa
dec
idivl
and
add
mov
loope
adc
clc
xchg
sub
adc
mov
pop
js
in
shlb
sub
adc
fdivrs
test
testl
adc
rsm
jno
ret
ja
pop
mov
or
repnz
fadd
pop
test
or
mov
je
dec
dec
and
mov
fdiv
lock
and
ret
hlt
test
cld
cmp
lock
insl
repz
je
testb
cmp
mov
not
sbb
jns
lcall
cmpsl
sar
mov
andb
lcall
push
pop
push
jg
cmpsb
loop
fdivrl
adc
fadds
filds
jmp
push
in
or
in
jae
cmp
push
int
inc
inc
imul
sub
mov
add
popa
loopew
insb
jl
sbb
add
xchg
mov
adc
xchg
lret
pop
sbb
aas
pop
mov
dec
cmp
cmpsb
xchg
test
adc
loope
or
cmc
sbb
icebp
jg
push
or
in
xchg
xchg
pop
pop
push
fildll
pop
and
cld
ja,pn
sbb
mov
sar
js
and
popf
clc
pushf
pushf
jae
inc
inc
and
mov
mov
xchg
imul
rcll
pop
sbb
mov
cmpsb
sub
in
pop
xor
adc
xchg
int
ret
in
jp
mov
mov
movsl
test
repnz
and
push
out
lods
push
cmpb
int3
mov
inc
push
negl
int3
pop
sbb
or
stos
sub
push
popa
das
repz
xchg
jl
fisubrs
popf
adc
mov
jecxz
rcll
fwait
or
imul
out
pop
mov
dec
cwtl
xchg
sarb
lds
mov
out
rcll
mov
or
add
fmul
add
fistps
sub
scas
sbb
scas
add
mov
aas
sbb
rcrl
in
and
nop
dec
shr
in
push
lock
enter
sbb
rclb
jbe
dec
popf
cvttps2pi
cli
and
push
xchg
cmp
xor
jle
jg
pop
jno
test
xchg
dec
mov
mov
jge
sti
xchg
test
inc
pop
push
and
jbe
pop
xchg
xor
fimuls
clc
cmp
mov
push
je
mov
loopne
daa
jne
clc
lods
nop
enter
jle
mov
negl
sub
lret
aad
scas
movsl
idivb
stos
fwait
mov
loop
cmp
pop
gs
test
sbb
repz
lret
cs
rep
mov
lcall
test
cmp
mov
jae
movsl
loopne
mov
les
or
rcl
mov
sub
in
gs
adc
scas
and
cli
gs
adc
imul
stc
mov
lods
push
outsb
ljmp
fdivrp
je
stos
orl
stc
insb
cmp
mov
sbb
cmpsl
push
xor
clc
sahf
cmp
xor
xchg
fs
inc
ficoms
push
xchg
mov
es
mov
push
ja
mov
cmpsl
ljmp
sub
or
or
sbb
pusha
sbb
mov
fsubrs
inc
xor
jmp
mov
mov
ja
inc
cmp
outsb
fwait
stos
les
lahf
sub
cmp
dec
xchg
xchg
mov
jb
jge
das
jae
ljmp
push
mov
jecxz
sub
sahf
dec
out
test
cli
insl
dec
mov
jnp
data16
lahf
scas
std
xchg
lcall
ss
sbb
push
cs
cmp
mov
bnd
mov
jnp
jne
and
and
nop
sar
mov
xor
pop
push
jl
jb
xchg
scas
push
cmp
xchg
loopne
push
sub
cltd
lock
mov
nop
jne
cwtl
xchg
fwait
mov
mov
and
fistpl
mov
test
mov
mov
mov
lret
xchg
cltd
xchg
or
dec
xchg
scas
mov
adc
inc
in
cmpb
jge
jae
hlt
js
fcoml
lahf
xchg
mov
mov
push
jl
push
popf
adc
inc
loop
cs
clc
jl
popa
cwtl
sahf
divb
lret
orb
jbe
jne
stos
pushf
ss
mov
push
xor
popf
je
scas
stos
maxps
in
jae
dec
stos
xchg
mov
adc
fdivrp
dec
call
rcll
lsl
and
sarl
mov
mov
inc
in
js
push
sbb
cmpsl
dec
addr16
cmp
push
lret
or
stos
stc
sahf
mulb
leave
mov
rolb
rcll
sub
add
sub
add
sbb
jno
mov
jb
jbe
fwait
stc
cmp
jae
into
xchg
push
jge
scas
push
xor
add
adc
arpl
call
aaa
adc
and
into
jbe
les
dec
in
stc
sarb
mov
jecxz
es
je
loopne
imulb
out
mov
lods
pop
int3
add
bound
xlat
test
mov
lods
xchg
mov
push
push
pop
or
cltd
fwait
in
shlb
test
outsl
mov
jmp
mov
mov
pusha
xor
fmull
ficoml
mov
outsl
inc
sbb
sub
pushf
jae
pop
mov
aam
adc
loopne
mov
and
push
mov
dec
mov
jge
ret
and
mov
in
std
mov
imull
subl
daa
pop
cmp
pop
fcomps
sti
bound
xor
xchg
seta
add
addr16
sti
insb
in
add
lahf
je
fsubl
fdivs
ljmp
add
mov
xchg
roll
testb
pop
jecxz
pop
jno
insl
jns
call
rcl
int3
test
add
adc
push
xchg
mov
pop
cmp
mov
mov
lea
dec
cmp
pushf
loopne
rolb
in
popa
jmp
adc
aam
xchg
push
jb
outsb
lods
fstpl
or
popa
jmp
and
fcmovu
adc
pop
dec
call
pushf
incl
and
jle
xchg
ret
xor
lods
dec
in
add
imul
mov
movsl
in
push
outsb
xor
loope
dec
xor
xor
mov
sbb
mov
inc
dec
daa
out
ror
lds
dec
imul
loope
pop
dec
jno
orl
cmp
xor
test
xchg
sarb
fistps
test
sbb
jge
test
bound
dec
xor
int3
mov
and
lret
inc
imul
xchg
pop
xor
cmpps
aad
shll
ja
mov
out
pop
popa
cmp
jne
js
scas
mov
pop
jnp
pushf
bnd
inc
jbe
inc
mov
mov
jecxz
test
and
push
fwait
adc
jl
dec
or
cmc
push
mov
movsb
jg
xor
gs
std
xor
popa
sbb
push
mov
xor
and
dec
adc
push
std
inc
mov
jge
ss
fs
adc
dec
xchg
sbb
inc
pop
test
subl
loop
aad
ror
mov
push
and
jle
out
xor
jne
inc
jns
pop
xor
aaa
inc
popf
inc
push
fdiv
cmp
dec
cmp
adc
jo
sub
mov
cli
mov
inc
ja
or
push
push
jae
shll
xlat
cmpl
jge
cmp
xor
dec
iret
xor
and
cmp
push
push
shl
sub
loop
aad
cltd
fstl
push
xlat
xchg
or
sarl
lret
jmp
jp
daa
daa
xorl
xor
cmc
and
cmp
in
xor
inc
sub
sub
lods
mov
sahf
fcomps
je
jbe
sub
pop
push
stc
mov
lahf
push
imul
pop
ss
mov
repnz
aam
adc
int3
push
insb
xor
push
inc
mov
jmp
addr16
mov
adc
xchg
jl
or
ja
mov
sbb
mov
xchg
into
add
mov
fwait
loopne
scas
inc
sbbl
cmp
repnz
push
pop
adcb
icebp
pop
stos
and
or
rcll
js
jle
fiadds
sahf
mov
pop
sub
jle
jae
cmpb
mov
or
xchg
and
jmp
imul
push
xor
mov
mov
sub
cmp
jle
cmp
stos
pmaxsw
xor
xchg
and
mov
mov
out
and
aaa
dec
cmp
je
insb
in
lods
test
enter
dec
movsl
mov
gs
and
push
clc
adc
rolb
jbe
test
cmpsl
mov
les
insb
xchg
jmp
pop
mov
inc
push
xor
and
sbb
sbbb
push
fcomps
add
rorl
xlat
fs
inc
sbb
jge
push
cmp
jns
sbb
adc
mov
movsb
icebp
and
mov
inc
into
xchg
add
insl
ljmp
pop
push
sbb
jmp
mov
and
lret
lret
add
sbb
fldl
adc
es
loop
xchg
sbb
sub
pop
mov
mov
pop
into
loopne
stos
sbb
data16
cmpsb
mov
stos
xor
ds
add
xchg
push
pop
negb
ja
inc
in
imul
sbb
jecxz
pusha
pop
pop
push
mov
insb
xchg
scas
nop
cli
lahf
xor
ja
divl
xor
in
in
or
loop
cwtl
jnp
int3
nop
mov
stos
sbb
sahf
sbb
or
rcll
test
addr16
xor
pop
pop
add
xchg
dec
mov
lea
fnstcw
or
scas
sub
loope
popf
xor
push
in
xor
gs
aam
inc
cmp
jns
cmpsb
arpl
in
scas
aad
lock
pop
lret
shrl
lods
out
jae
or
cmpsl
mov
jge
clc
outsl
jecxz
rolb
cmp
pusha
xchg
outsb
mov
jne
adc
cld
insl
fbld
std
outsb
es
jb
cwtl
sub
call
es
fwait
inc
lret
je
sub
and
xchg
loopne
jnp
jge
repz
int3
loop
es
mov
int3
leave
dec
shll
cld
cwtl
xchg
or
fidivrs
xchg
inc
push
mov
or
ja
outsb
sub
std
jnp
lret
mov
daa
push
xchg
sbb
fstpl
mov
hlt
add
inc
mov
jno
fsubrp
pusha
call
js
scas
xor
jno
daa
mov
cs
xchg
pusha
add
fsubl
popa
sbb
sti
push
cmc
cltd
sub
sub
mov
dec
jecxz
imul
xor
mov
push
aaa
addl
lcall
js
cld
inc
movl
stos
mov
sub
sub
repz
mov
fisubrl
scas
testb
lea
cld
fadd
xchg
aam
aad
add
pushw
gs
adc
pushf
adc
imul
inc
mov
adc
or
loopne
jb
int
dec
pop
add
adc
ljmp
sbb
testb
jb
movsl
fwait
xor
ds
add
insl
xchg
loopne
adc
shrb
repz
lods
shlb
xchg
lock
adc
call
xchg
aas
sub
cmpsl
or
sahf
xchg
mov
scas
cmpsl
jecxz
outsl
jb
jmp
and
lock
rol
fwait
sbb
cmp
fldl
adc
push
pop
pop
add
inc
inc
mov
sbb
dec
mov
jl
sti
dec
jb
jnp
loope
jp
xor
mov
scas
xchg
imul
sub
or
repz
lods
mov
xchg
jmp
mov
out
adc
and
movsl
sub
data16
popf
fcmovu
add
or
sub
fwait
clc
jbe
push
cwtl
inc
lret
les
sahf
xor
dec
daa
mov
out
std
mov
sbb
push
scas
cwtl
das
adc
std
jbe
into
push
test
sbb
and
mov
lcall
out
jb
inc
fisubl
mov
jbe
punpckhdq
mov
ljmp
dec
dec
cmp
stos
sbb
sbb
es
mov
js
add
xchg
inc
pop
jae
stc
dec
addr16
fdivrs
ljmp
mov
insb
out
out
sbb
fistps
push
lret
fldl
pop
mov
inc
xchg
scas
divb
ret
outsl
mov
sbb
fisttpl
popf
xchg
jmp
xor
jge
lods
movsb
mov
dec
push
lret
popf
mov
fistpl
aas
sti
cmp
mov
mov
mov
out
pop
fnstsw
or
push
inc
xlat
and
or
sub
sub
dec
mull
lods
aas
cmpsb
xchg
jne
dec
es
gs
pop
repz
call
pop
push
aaa
insl
mov
pushf
imul
jno
xor
add
pop
call
inc
rcrl
fidivl
jle
hlt
stos
rclb
xlat
js
mov
or
pop
mov
jecxz
cwtl
sbb
movsb
insb
fwait
popf
fcmovbe
push
lret
scas
sbb
add
xchg
inc
lahf
and
pop
mov
vucomiss
lods
dec
lock
lock
mov
icebp
push
fnstsw
cmp
lods
sahf
inc
lret
inc
xchg
enter
fildl
das
dec
imul
dec
jg
inc
xor
out
fneni(8087
dec
sbb
add
adc
push
pop
idivl
push
adc
test
or
insb
or
test
mov
pop
adc
jg
mov
mov
into
jle
fists
loop
stos
cmp
sub
test
aaa
ficomps
stos
je
inc
mov
cmp
jecxz
andps
inc
or
mov
mov
sub
addr16
mov
ss
out
into
cmp
mov
adc
push
sub
into
and
ror
xor
jo
mov
lods
out
lcall
pop
popa
inc
push
fists
ja
or
dec
sar
mov
push
and
fs
mov
push
nop
xchg
lds
lret
mov
das
sar
nop
rcl
adc
pop
shl
lods
negl
cltd
pop
data16
jo
or
jnp
push
cmp
and
daa
xchg
lret
or
sti
mov
jbe
mov
jp
xlat
dec
add
jmp
test
add
mov
lods
inc
and
jbe
ljmp
pop
add
mov
dec
call
xor
sub
sub
xchg
ljmp
pop
shll
push
out
sub
and
ja
jecxz
and
fdivrl
jnp
sbb
insl
loopne
insl
inc
xchg
lds
adc
movsl
add
fstps
ret
jbe
out
add
mov
add
outsb
sbb
mov
test
mov
cltd
and
cmp
mov
fcoms
cmpsl
or
xor
mov
mov
fdivrl
rcrb
xchg
jmp
aaa
jne
and
sbb
push
inc
das
stc
test
mov
pushf
insb
scas
cmp
std
jne
sbb
or
std
shll
outsb
ja
push
cs
arpl
lcall
xorl
lods
inc
roll
jp
cwtl
or
mov
aam
mov
add
push
popfw
xorb
aas
add
stos
rorl
xor
sahf
insb
imul
inc
mov
lods
mov
or
or
test
cmpsb
aaa
or
and
xchg
xchg
adc
repz
les
jp
or
fisttpll
bound
stos
xor
xor
rcrb
nop
cmp
les
mov
or
mov
cmc
xor
aam
mov
xchg
sarb
loopne
jns
xor
adc
lods
mov
fdivs
movsl
push
in
or
sbb
cmpb
mov
das
sub
mov
sub
aam
ds
and
adc
mov
insb
ficomps
or
push
popa
mov
xor
pop
repz
shlb
lahf
mov
mov
mov
lds
fwait
insl
test
scas
and
add
sub
into
loop
int3
int
xchg
jg
mov
mov
dec
cmpsb
daa
pop
in
addr16
xor
lock
lea
sbb
xchg
push
rclb
xchg
pop
mov
inc
add
fcomp
push
sub
ficomps
dec
adc
mov
mov
jg
clc
out
add
and
mov
arpl
cmp
icebp
cmpsb
cmpsb
fisubrs
add
ficompl
pop
ds
dec
xchg
adc
imull
adc
jbe
imul
xchg
bound
add
fs
push
or
cltd
addr16
rolb
dec
xchg
cmp
notb
dec
fadds
dec
int3
ret
adc
and
lds
fstpl
std
cmp
fiadds
cli
cmc
in
inc
lcall
xchg
xor
ja
loope
in
stos
popf
xchg
ja
or
inc
and
bound
push
or
and
xchg
fwait
adc
int
cltd
mov
xor
xchg
lds
xchg
dec
scas
push
mov
or
add
push
popf
rcrb
adc
push
mov
pop
je
xchg
push
mov
add
ja
jmp
dec
daa
ds
movsb
pusha
adc
dec
xor
jns
push
in
ret
inc
int
adc
jmp
fadd
fdivrl
loopne
xchg
andl
sbb
or
cmpsb
pop
pusha
lods
sbb
sbb
mov
scas
adc
aaa
adcb
mov
pop
stos
ds
or
sub
sahf
xsha1
cmpsb
mov
decb
xchg
stos
xor
jecxz
jle
xchg
xchg
adc
ret
jb
mov
adc
das
dec
pop
idiv
mov
test
testb
push
cmpsl
or
fbstp
scas
pop
jo
fs
pusha
push
dec
sti
loope
sbb
add
mov
fdivp
mov
sti
andl
out
adc
sub
in
mov
roll
mov
daa
gs
lahf
scas
xor
movsl
imul
in
cld
jg
or
inc
xor
sub
mov
xor
sub
or
call
lret
jecxz
sti
sarl
push
inc
stc
inc
in
push
xor
popf
jl,pn
ljmp
lcall
insl
mov
cmp
push
xor
sti
dec
in
add
les
jne,pt
pop
and
js
mov
adc
fidivrs
fsubp
jge
pop
loope
or
aaa
dec
mov
adc
adc
adc
filds
push
jge
jb
out
dec
jl
sqrtps
in
xchg
or
popf
push
dec
int3
insb
out
addr16
pop
mov
jne
or
cltd
je
adc
pop
ror
cmpsb
stos
xchg
in
adc
and
test
stos
sbb
mov
xchg
or
clc
or
out
nop
cmp
xchg
cmp
inc
andb
loop
push
sub
push
and
pop
pusha
mov
aad
dec
out
jbe
or
decl
std
sub
xor
cwtl
lds
sub
bound
mov
mov
dec
lcall
mov
mov
les
mov
pop
dec
inc
loope
push
insl
cmp
es
mov
inc
int3
outsl
loopne
pop
adc
nop
pop
xchg
adcb
aaa
pushf
xor
fimuls
test
xor
and
ds
push
xor
xor
inc
lea
mov
lods
jecxz
loop
xor
jb
xor
xor
or
es
loope
sti
adcl
ja
mov
dec
outsl
inc
adc
pop
jne
ror
aam
dec
jmp
mov
xlat
test
xchg
jbe
repz
xchg
and
pusha
loope
lods
ljmp
in
icebp
pop
jne
js
sub
movsl
popf
push
push
rcrb
cld
out
cmpsl
mov
les
je
push
xor
out
push
mov
adc
mov
push
aas
mov
ret
aam
or
mov
ds
js
xchg
add
push
js
add
lret
pop
mov
adc
sbb
out
mov
pop
addl
mov
mov
jge
mov
jnp
dec
ja
sbb
lahf
scas
mov
les
test
mov
inc
into
jae
notl
xor
sub
jb
icebp
sbb
test
jecxz
scas
outsb
outsl
push
adc
adc
sbb
rcr
or
ret
aam
stc
aaa
lea
pop
insl
mov
lods
leave
movsb
push
cli
adc
mov
add
and
push
jle
mov
pop
jb
stos
lahf
cmp
pop
push
out
out
neg
insl
insl
xor
pop
xchg
push
test
cli
cs
jb
daa
and
push
xchg
lcall
test
xchg
pop
sub
dec
push
jp
iret
push
pop
jno
adc
dec
fadds
push
pop
lock
push
or
je
mov
andl
addb
push
imul
and
pop
pop
jo
in
and
inc
sub
pop
or
sbbb
repz
dec
mov
dec
inc
das
add
movb
ret
mov
mov
popf
rorb
loop
cmpsl
pop
lahf
rcl
addr16
in
push
fldcw
ret
jmp
mov
pop
jne
jecxz
inc
cmc
aas
xor
sbb
jb
loop
aaa
jb
cli
push
loopne
push
in
inc
xor
sbb
pop
dec
call
lea
frstor
cmpsb
lods
inc
repnz
in
mov
and
scas
push
and
pop
js
mov
out
cli
std
lods
dec
lds
push
aaa
mov
lds
add
clc
sub
push
mov
movsb
jecxz
sbbl
xchg
jno
or
lea
inc
cld
outsb
fs
mov
push
in
push
inc
int3
pop
andb
add
popa
cs
lret
push
out
and
cmpb
sub
mov
out
push
jno
xchg
xchg
mov
xchg
push
cli
loope
xchg
xchg
xor
push
jne
insl
mov
pop
xor
cmp
cli
inc
push
adc
mov
mov
xor
and
cmp
icebp
mov
xor
mov
pop
xchg
and
push
xor
inc
cli
movsl
push
mov
sti
dec
into
imulb
stos
mov
imul
cmpsl
daa
aaa
push
cld
test
dec
insb
sarl
adc
pop
lds
mov
cmp
push
mov
out
cmp
jo
xor
mov
xchg
mov
pop
push
xlat
sti
loop
loopne
mov
aad
lea
pop
pop
leave
jle
iret
push
lods
xchg
mov
adc
dec
sub
scas
outsb
stos
fnstcw
pop
and
insb
aad
fsts
movsl
xor
ror
mov
cli
aam
push
nop
or
inc
cmp
andl
pop
xchg
xchg
push
sub
je
js
sbb
cli
nop
mov
dec
fwait
mov
mov
clc
xchg
pop
inc
ficoms
vprotw
jmp
mov
icebp
cli
adc
out
popa
mov
scas
push
xchg
jb
sbb
xchg
lcall
pop
or
aas
xchg
adc
movb
repz
mov
dec
xor
jp
lds
cmpsb
pop
xor
cmp
xor
fisttpl
icebp
ffree
imul
xchg
iret
jne
shrb
daa
or
dec
xor
and
dec
fsubrs
mov
mov
fldcw
into
popf
jmp
dec
pop
jp
hlt
push
cmove
push
jmp
cmp
cli
popf
and
test
es
rol
clc
in
add
and
les
pop
outsb
test
inc
mov
arpl
je
dec
dec
subps
dec
imul
add
sub
fimull
xor
insl
ss
test
fdivr
leave
jno
push
dec
stc
inc
adc
pop
mov
cmp
loopne
int
push
inc
sub
jp
xchg
test
lcall
clc
push
cmp
int
imul
xadd
mov
pop
nop
shrl
xchg
in
ss
lcall
popf
ss
icebp
dec
jg
xor
testl
push
mov
sub
cmp
lods
mov
pop
jg
in
cmp
fisttpll
push
ja
pop
and
repnz
subl
adc
dec
xor
inc
loope
into
pop
or
mov
mov
es
pop
or
sub
and
sub
test
in
mov
out
mov
add
aas
rcll
fldenv
rol
mov
push
jns
mov
xor
dec
lcall
fwait
repz
inc
xchg
lea
add
pop
mov
or
push
push
ja
out
mov
les
icebp
out
cmp
sub
lret
dec
sysexit
mov
imul
repnz
sbb
cmp
fs
or
out
mov
pop
dec
movsl
aad
or
push
stc
outsl
std
mov
fs
sahf
xchg
test
adc
xchg
loope
sub
gs
test
xor
cmp
inc
adc
iret
sbb
sub
mov
lahf
in
movsl
ret
jl
mov
mull
sahf
in
or
scas
cmp
inc
cmp
push
mov
cmp
sbb
es
sbbb
push
jb
clc
inc
mov
jns
jmp
cld
fdivs
inc
aam
cmp
xchg
xor
pop
mov
dec
sahf
mov
pop
test
in
jnp
add
jns
lret
mov
outsb
stos
mov
adc
xchg
outsl
adc
dec
mov
lds
movsb
or
mov
dec
pop
xor
sbb
out
mov
or
ret
add
es
mov
cmp
nop
xor
mov
test
xchg
out
fisubrs
push
out
push
es
aas
fildll
mov
lods
cmp
sbb
sbbb
lods
push
xor
mulb
jae
sub
xor
xchg
popf
xchg
insl
push
movb
in
icebp
xor
mov
int3
test
sub
mov
dec
mov
fldl2t
ret
xchg
mov
js
dec
sahf
jp
mov
pop
ret
popa
dec
pop
bound
lods
imul
jmp
cmpsl
xchg
gs
out
jg
dec
xorb
movsl
es
xor
jl
loope
je
into
mov
outsl
xor
or
je
xor
sub
mov
xor
aam
xor
ud2
xchg
leave
inc
sub
popf
pop
pop
dec
pop
subl
sbb
es
dec
xchg
sbb
inc
cld
sarb
ss
ljmp
sub
dec
repnz
int3
pop
clc
addr16
xchg
cmpsb
iret
sbb
cli
dec
gs
mov
fstpt
or
adc
pop
inc
outsb
lcall
outsl
xchg
call
lcall
rol
cwtl
xor
pop
test
sbb
jl
adcl
mov
pop
xchg
lds
iret
and
xchg
js
or
adc
mov
sbb
mov
ret
cmp
pushf
fisttpl
push
cli
cmp
pop
bound
dec
lods
hlt
dec
add
cwtl
jae
push
xchg
inc
ret
mov
push
or
andb
stos
loop
xchg
xchg
pop
insl
mov
mov
in
mov
dec
jecxz
rcll
out
ret
jp
push
xlat
shll
dec
inc
lret
inc
jns
mov
out
cmp
inc
fs
loopne
lock
aam
inc
adc
fmull
je
mov
cmp
and
je
mov
testb
lds
loope
das
and
mov
aad
fistps
into
cmc
addr16
sbb
test
outsb
scas
mov
jb
and
mov
subb
xchg
mov
xor
adcb
add
dec
dec
mov
lock
imul
imul
jno
js
push
or
bound
adc
cltd
arpl
cmp
in
pop
sbb
mov
sbb
nop
int3
cmp
mov
les
lods
dec
xorl
push
sbb
sbb
aas
test
xor
xor
loop
or
dec
bound
or
jb
jno
aam
sbb
lock
icebp
xor
gs
fldcw
sarb
adc
mov
in
and
aas
test
shrl
mov
nop
es
in
or
gs
and
shrl
mov
sub
daa
arpl
pop
adcl
mov
nop
ja
add
inc
cmpsb
push
cmpsb
mov
mov
jmp
frstor
sub
stos
pop
out
dec
ja
push
sub
test
jns
sbb
shlb
xor
pusha
jno
jmp
mov
push
add
xor
mov
dec
imul
adc
scas
pop
adc
push
fnstenv
pop
mov
xchg
jge
je
dec
xchg
jb
out
in
mov
test
cmp
lcall
outsl
enter
inc
aam
loope
lods
pop
jae
pop
sbb
jecxz
dec
dec
jo
mov
loopne
loop
cli
into
test
mov
mov
repz
xchg
call
cmp
push
fdivl
out
pusha
xchg
cmpb
pop
xor
in
xchg
mov
cmp
push
adc
sti
mov
cwtl
mov
fwait
cmp
sbb
xchg
or
dec
ja
or
cmp
dec
mov
aas
sbb
pushf
lock
jbe
fists
insl
inc
lcall
das
clc
pop
repnz
mov
inc
ret
repz
js
sub
popf
in
sub
xchg
dec
jge
xchg
sbbl
into
adc
popf
or
mov
sub
add
and
mov
xor
repnz
daa
cmp
movsb
ret
and
mov
test
jne
and
pop
js
call
idivl
fistpl
jg
not
std
les
sub
loop
into
push
sub
jo
pop
outsl
mov
ja
cmp
pop
dec
mov
xchg
je
hlt
repnz
xchg
insb
fidivs
popa
add
push
test
cli
neg
std
outsb
jb
or
lock
fisubrl
out
push
mov
xlat
sbb
jb
mov
pop
addb
xchg
dec
and
cmp
jbe
test
mov
outsl
sub
test
clc
les
insb
jae
add
bound
out
jne
leave
stc
jb
mov
adc
inc
cld
inc
sub
jmp
jnp
mov
in
loop
lods
pop
imul
xor
xchg
mov
mov
lock
jg
mov
dec
xor
sbb
push
sub
mov
cld
xchg
xchg
test
jl
js
cmpsl
mov
jle
stc
xchg
xchg
inc
shl
jb
sub
ja
adc
call
imul
je
dec
jbe
mov
nop
movsb
mov
clc
inc
sahf
push
jno
adc
sbb
iret
test
inc
fbld
sti
ret
mov
push
dec
aaa
jmp
lea
push
sub
mov
cmp
mov
pop
insb
mov
jns
push
dec
nop
sbb
or
test
rorl
pop
add
ret
dec
sbb
rcrb
pushf
rol
fdivrs
imul
aas
add
mov
fisubl
out
fbld
fwait
pop
icebp
sub
setne
sub
xlat
or
mov
xor
or
push
xchg
and
mov
out
or
add
cmova
ja
mov
and
dec
cmp
icebp
inc
cmp
daa
add
push
pop
cli
xor
mov
stos
push
xor
mov
xchg
ret
orl
sbb
pop
mov
push
dec
inc
imul
or
cli
fbld
dec
jbe
pop
mov
xchg
in
sbb
pop
aad
call
cld
mov
imul
adc
pop
mov
lahf
mov
mov
loopne
mov
popf
xchg
insl
cmpsl
xchg
lcall
xchg
push
mov
and
shrb
jbe
dec
mov
call
mov
cs
dec
fsubrs
inc
insb
mov
push
inc
pop
xor
mov
js
inc
mov
jle
add
sbb
xchg
mov
repnz
cwtl
jne
pushf
xor
ret
mov
rclb
stos
sbb
xor
xor
and
shl
jns
jnp
push
popf
stos
jp
mov
lds
xor
iret
sub
jae
ljmp
jl
repnz
mov
dec
sub
add
mov
popa
movsb
cmp
xchg
jnp
mov
inc
in
sar
in
push
sbb
test
jg
jg
dec
lock
out
pop
dec
insb
inc
pop
jmp
mov
lods
std
adc
adc
hlt
push
sbb
test
ds
je
jnp
xor
fisubl
into
sti
icebp
movsb
insb
outsb
push
dec
xor
inc
testl
sbb
adc
or
sbb
mov
mov
ret
out
mov
xchg
fucom
insl
dec
sub
gs
arpl
out
dec
je
jno
adc
inc
xor
mov
cld
xchg
sti
mov
pop
pop
mov
out
sbb
inc
mov
add
sbb
xchg
cld
push
je
pop
and
clc
mov
sub
add
std
in
xlat
adc
sub
and
jnp
int3
dec
mov
fwait
add
mov
jmp
xchg
or
pop
adc
sbb
rorb
gs
mov
mov
imulb
jmp
stos
lahf
sarb
in
cmp
add
cli
test
mov
icebp
add
fimuls
ficoml
les
mov
push
sub
pop
pop
xchg
mov
outsb
mov
mov
adc
xor
adc
push
stos
push
nop
jecxz
dec
cli
loope
pop
and
into
mov
fmul
xchg
pushf
insb
mov
fs
sbb
mov
jb
jbe
aaa
pop
scas
andb
fldcw
lahf
mov
outsl
cwtl
cmpb
das
enter
ds
adc
insl
cltd
repz
inc
testb
outsb
call
sbb
pusha
sbb
sbb
dec
inc
shl
jle
xchg
and
jnp
pop
and
aam
leave
push
jns
and
dec
sub
lahf
push
insl
xchg
sbb
mov
pop
or
xchg
sahf
xor
jmp
stos
push
cmc
in
xor
popa
xchg
mov
dec
repnz
flds
jns
sbb
push
jb
adc
pushl
dec
leave
data16
jb,pt
mov
cmc
adc
pop
pop
hlt
repnz
jae
mov
add
push
xchg
pop
mov
add
idivl
push
das
push
adc
mov
and
dec
repnz
add
aam
out
lret
adc
shrl
lods
cmp
punpckldq
lods
js
mov
push
in
ret
xchg
rol
imul
es
or
and
cmp
test
jg
ja
aad
loopne
pop
neg
xlat
popa
sub
or
sub
pop
lcall
mov
pop
sbb
dec
mov
outsb
in
imul
test
cmp
sbb
int3
aam
setne
inc
sub
int
out
out
push
pop
jmp
inc
das
inc
dec
add
sbb
cmpsl
outsb
dec
into
out
add
fsubrp
add
imul
insl
mov
call
mov
repnz
pop
xchg
jnp
rclb
aam
mov
mov
fstl
ss
cld
add
js
dec
fwait
push
fists
in
push
pop
add
movsl
jle
lock
dec
pop
lds
ficomps
or
xchg
out
inc
mov
filds
jnp
das
xor
shl
or
mov
jg
test
sahf
jl
int3
shlb
fldl
mov
push
xor
sahf
push
lret
xchg
idivb
push
js
adc
jb
mov
add
pop
imul
push
lds
mov
inc
dec
push
pop
jne
mov
pop
roll
test
cmp
leave
and
xchg
fs
ja
xor
add
sbb
pop
or
lods
ss
icebp
mov
sub
cmp
int
clc
fdivrp
add
loop
cli
sbb
sub
daa
sbb
inc
leave
mov
nop
xor
fistpl
adcb
imull
jb
popa
sbb
test
xchg
dec
rcl
test
add
dec
cs
mov
jle
popf
popf
aaa
rsqrtps
into
pop
and
xchg
stos
xlat
dec
inc
fidivrs
jg
loope
xor
push
xchg
call
stc
ret
mov
fs
mov
movsb
dec
loop
popl
sbb
sub
lods
sub
cmp
xchg
dec
out
movsb
dec
mov
jne
dec
popa
push
xor
cmp
mov
shrl
adc
icebp
sbb
sub
mov
fsubr
jg
lret
inc
or
es
inc
add
or
jge
fistpll
out
insl
jo
push
dec
jae
lods
push
or
dec
int
out
jge
dec
addr16
cmp
je
dec
mov
push
in
ret
inc
out
ss
cmp
jl
mov
xchg
cmpsb
lea
and
cmp
ret
jge
xor
lds
mov
add
out
leave
aas
scas
das
pop
push
frstor
push
rorb
pop
mov
xor
jge
xor
cmp
cmp
jns
leave
mov
and
stos
xchg
jbe
andl
pop
or
xor
subb
je
sbb
ret
aas
lret
jbe
push
xchg
jo
mov
shrl
pop
or
addr16
aam
stos
adc
adc
add
fdiv
mov
xchg
lcall
lock
and
or
mov
push
sub
mov
xor
push
loopne
and
dec
sub
jne
bnd
sub
xor
sbb
fucomip
dec
fwait
movsl
jb
arpl
inc
out
fisubrs
pop
jp
cmp
dec
adc
daa
pop
test
mov
iret
aaa
nop
loopne
push
sub
add
xchg
je
cmp
sub
inc
pop
inc
addr16
fisubs
mov
xor
jg
and
sub
xlat
inc
fwait
sub
jo
and
or
inc
jge
test
push
adc
mov
sub
sub
or
in
insb
inc
and
loope
test
outsl
inc
fcompl
cmp
repz
mov
adc
xchg
sbb
and
xchg
arpl
call
divb
mov
fisttps
fs
aaa
imul
insl
inc
les
test
mov
mov
ss
push
pop
mov
es
push
lcall
mov
icebp
sub
xchg
stos
inc
push
dec
cmp
dec
mov
mov
mov
arpl
xor
jns
test
push
jne
cmp
jp
int3
test
nop
mov
inc
jns
outsl
int3
rcrb
outsl
fs
mov
ljmp
or
movsb
mov
xchg
jl
jp
loope
cli
and
mov
dec
repz
push
dec
xor
inc
repnz
fistpll
inc
cmpsb
test
cltd
cmp
push
sub
dec
xchg
fdivs
pushf
cmpb
repnz
and
xor
pusha
sahf
or
jle
stos
gs
mov
add
adc
stc
cli
mov
push
mov
gs
pop
mov
push
pop
xchg
stos
mov
or
pop
mov
and
in
sti
mov
adc
jge
mov
push
cs
jnp
aaa
xor
int3
shlb
sub
add
js
aam
mov
push
sub
imul
mov
cld
ljmp
push
movsb
cmp
cmp
jbe
xorb
mov
jo
je
fwait
enter
inc
fcomps
shr
lcall
mov
add
push
rcr
repz
movsl
js
add
into
mov
dec
loop
loope
lods
sub
pop
dec
inc
mov
je
inc
xchg
push
mov
jl
inc
cmp
adc
xchg
mov
push
inc
jp
movsl
fisubs
stc
add
cmp
dec
loope
pop
lods
lret
push
in
jo
bound
sahf
mov
jge
gs
push
jo
jecxz
push
pop
add
enter
cmp
or
mov
popf
aam
inc
dec
test
or
and
cmp
mov
rcr
inc
cltd
sbb
mov
mov
out
jnp
mov
push
cltd
aaa
cwtl
cmp
push
outsl
aad
push
ljmp
push
stos
mov
shr
dec
in
push
jmp
adc
mov
cmp
lods
lock
lahf
inc
adc
fdivr
sub
adc
xchg
test
es
movsb
or
lods
outsb
fiaddl
jno
xlat
cmp
sbb
pop
sub
mov
in
testl
outsl
int3
ret
inc
mov
xchg
cmpsb
xlat
loope
movsl
add
scas
inc
xchg
or
xchg
or
scas
ljmp
movsb
inc
mov
cmp
xor
stos
jmp
jp
scas
xor
mov
or
pushf
andl
mov
repz
sub
imul
nop
cmpsl
imul
sbb
inc
lret
jb
cmp
ret
inc
repz
mov
cs
push
mov
pop
lahf
adc
xchg
stos
xor
nop
or
inc
inc
xchg
lret
popa
scas
xchg
mov
insl
or
aam
jno
clc
sub
test
arpl
mov
inc
xor
xchg
dec
jno
loop
dec
lret
iret
xchg
and
outsb
or
aaa
insl
push
mov
adc
ret
aas
xor
pushf
and
mov
and
inc
sbb
jne
imul
push
mov
dec
xlat
push
jl
test
jo
stc
aaa
and
rcrl
inc
addr16
roll
mulb
out
mov
lret
xchg
sub
repz
cmpb
in
adc
cmp
pop
repnz
and
fsubrl
mov
insl
std
stc
in
fdivrl
and
cwtl
sub
mov
fildll
and
pop
pop
nop
dec
cs
inc
repnz
inc
mov
scas
xchg
test
stc
jmp
scas
sbb
lods
jmp
xor
ret
adc
mov
addr16
mov
aam
push
sbb
jmp
sub
mov
scas
mov
sbb
xlat
ljmp
jge
or
pop
xchg
dec
cmp
insb
pop
hlt
push
inc
loope
cmp
adc
cmp
sub
fidivs
cmp
pop
das
inc
jmp
cmpsl
push
incb
arpl
mov
cld
outsb
aas
add
mov
idivb
cwtl
out
outsb
and
inc
addr16
push
mov
lcall
neg
cltd
xchg
or
loopne
and
cmp
cmc
loope
in
insl
jmp
xlat
add
popf
push
mov
fldl
mov
mov
adc
push
out
inc
jecxz
push
mov
push
xor
or
mov
jecxz
lods
add
into
add
mov
push
loopne
jg
xorl
dec
test
fstpt
icebp
mov
js
and
test
pusha
data16
push
int3
repnz
ds
cld
movsb
xor
dec
in
add
mov
ret
insb
mov
jecxz
iret
mov
mov
repnz
inc
gs
mov
mov
pop
lret
inc
dec
mov
dec
lcall
cltd
mov
out
xor
dec
popa
cmp
xorl
scas
inc
mov
adc
xor
lret
pop
mov
sti
dec
cs
dec
xorb
in
add
push
mov
loopne
lock
cwtl
mov
mov
scas
out
jge
jo
outsl
push
cld
mov
and
fcoml
enter
pop
xchg
sub
out
stc
dec
cmp
call
notb
sbb
fxch
mov
or
adc
pop
popf
dec
cwtl
aam
jno
repz
lret
mov
stos
in
cwtl
push
lret
std
repz
mov
es
arpl
in
out
jae
loopne
mov
pop
inc
test
or
pop
xor
pop
mov
push
inc
das
pop
cmpsb
mov
stos
gs
out
push
movsb
ffree
ljmp
dec
adc
ja
jecxz
mov
push
movl
insl
jo
xchg
icebp
pop
daa
fwait
mov
addl
mov
mov
sbb
cmp
pop
test
aas
adc
notl
mov
out
stos
pop
adc
test
push
add
or
or
bound
popa
jl
test
rcll
sub
ret
jmp
lods
push
addr16
inc
ja
inc
mov
mov
mov
adc
adc
js
insl
fisubrs
leave
mov
or
xor
mov
xchg
clc
xchg
stos
pushf
sti
pop
out
push
test
mov
dec
imul
or
rcr
pusha
repz
in
pop
inc
inc
mov
mov
xchg
clc
mov
test
pusha
pop
pushl
cmc
sub
jg
pop
in
xchg
inc
jne
jne
jns
imul
loopne
jbe
rcrb
jle
fmuls
shrl
lahf
lret
or
dec
test
ss
xchg
pop
jo
mov
cmp
dec
je
xchg
outsb
rcl
pop
mov
leave
dec
inc
stos
xchg
pop
stos
frstor
xchg
dec
sub
insl
mov
push
in
ljmp
jg
sbb
nop
mov
sbb
xchg
cmp
out
push
mov
and
mov
mov
das
or
scas
sbbb
sarb
out
add
sub
cmp
dec
jne
pop
ret
jb
data16
fs
xor
xchg
hlt
sahf
sub
jmp
test
inc
popf
outsl
or
jae
arpl
lods
mov
or
lahf
lahf
in
and
xchg
inc
pop
bound
mov
es
adc
jae
lods
aad
xchg
and
xchg
mov
into
fcompl
pop
int3
mov
mov
sub
mov
push
test
mov
fs
lods
pop
sub
adc
sarl
out
push
mov
mov
scas
bound
loope
xor
mov
mov
or
loopne
scas
pop
daa
cld
adc
jl
ficompl
repz
sbb
outsb
inc
rcr
mov
dec
or
pop
push
mov
inc
dec
movl
pop
fldcw
enter
or
push
mov
out
insl
jmp
xor
subb
xor
jge
pop
adc
stos
add
popa
out
call
mov
add
andl
mov
pop
mov
fmull
jge
out
inc
inc
rcr
int
shl
and
xchg
sub
imul
scas
jnp
imul
cmp
lcall
test
or
xchg
inc
push
mov
push
xchg
mov
sbb
mov
or
cltd
jg
cwtl
pop
flds
sbb
xor
xor
cmp
cmp
xchg
shl
aad
pop
stos
push
mov
and
push
mov
dec
jno
xchg
sub
pop
jo
mov
mov
inc
mov
or
mov
fistpll
mov
leave
adc
outsl
in
stos
fisubrl
and
xor
scas
xchg
nop
daa
mov
jecxz
inc
jl
inc
aam
repz
movsb
in
cmpsl
lock
jno
scas
xchg
or
in
mov
int
push
xor
inc
mov
mov
or
push
xchg
out
adcl
adc
mov
outsl
repnz
sbb
jmp
cmp
adc
mov
out
cmc
test
mov
cmpsl
ljmp
fld
xchg
sub
sbb
ja
inc
xor
ret
mov
ljmp
push
out
test
cmp
lea
sub
pop
in
pop
out
jecxz
ret
cmc
mov
push
daa
xchg
and
idivb
lock
cli
loop
push
and
lcall
pop
roll
imul
dec
test
inc
andb
loopne
adc
imul
lahf
repnz
addr16
js
mov
add
inc
cs
fwait
xchg
sahf
popa
into
mov
mov
stc
pushf
sahf
dec
icebp
negl
mov
xchg
dec
adc
cld
loopne
std
in
sbb
dec
sub
rcll
pop
xchg
test
je
cmp
je
mulb
lahf
ret
push
adc
xchg
je
or
inc
aas
mov
dec
lret
inc
lahf
outsl
in
fidivrl
aaa
xchg
roll
out
lcall
movsl
mov
xchg
mov
sub
mov
jne
xor
push
mov
leave
mov
or
ret
sub
add
dec
mov
lret
pop
lcall
hlt
push
sub
arpl
movsb
leave
dec
arpl
mov
pop
faddl
scas
add
movsb
add
ljmp
push
pushf
dec
pop
adc
aaa
xchg
sub
jnp
nop
outsb
hlt
or
and
in
xchg
test
jmp
push
in
mov
add
push
pop
dec
push
cmp
cmp
daa
data16
push
cmpl
adc
jne
int
mov
jge
movsb
mov
sahf
lods
imul
jo
int
inc
push
fbld
sbb
or
std
sbb
cmp
mov
inc
jbe
and
loopne
inc
loopne
pusha
test
inc
fwait
ror
fs
sbb
popf
outsb
mov
cmp
je
jg
dec
add
mov
je
out
fwait
add
xchg
mov
jae
sub
cltd
inc
rcrb
cltd
fdivrs
xchg
int
lods
andb
xor
stos
cmp
clc
lds
shll
in
dec
fdivrl
push
mov
dec
hlt
andb
shrb
leave
jg
imul
gs
jle
loopne
cli
adc
pop
ja
xchg
sub
mov
mov
lret
fists
inc
in
and
mov
push
sub
inc
add
pop
push
fwait
je
sub
adc
and
jg
ds
pop
dec
mov
cltd
dec
xorl
and
dec
into
or
fstpl
lea
sti
loope
inc
sti
mov
or
aad
pusha
and
testl
sub
loope
scas
shrl
loopne
stos
inc
jecxz
push
fld
dec
fwait
pop
repz
xchg
mov
sub
and
ja
xorb
mov
nop
ror
sahf
pop
cmpsl
xor
mov
movsl
std
jns
std
and
jg
add
pop
mov
mov
cmp
cli
mov
ret
jmp
or
ljmp
jl
xchg
loopne
ds
adc
gs
pop
inc
pop
mov
fisubrs
inc
addr16
les
xchg
mov
cwtl
cmp
stc
pusha
sub
test
xchg
adc
mov
fdivrs
les
out
iret
mov
push
cmp
sub
lret
push
xchg
and
xchg
inc
sbb
int
jl
mov
mov
sbb
inc
pop
fcmovbe
jle
leave
pop
or
jl
push
jb
lods
sbb
sarb
rcll
xchg
jo
xor
inc
call
lahf
repnz
mov
lods
ret
adcb
inc
xor
int
test
sub
jns
mov
add
sub
outsl
lcall
inc
push
icebp
cltd
or
popa
xchg
test
jge
inc
out
loop
push
outsl
pop
test
daa
xchg
or
sbb
lret
in
xchg
xchg
mov
jp
unpckhps
out
push
out
fildl
stos
push
scas
loop
cmpsl
leave
inc
mov
or
outsb
fs
fidivs
int
pop
stos
test
xor
addr16
push
dec
sub
jl
outsb
hlt
out
sbb
stos
js
hlt
pop
aad
dec
ljmp
jns,pt
wrmsr
popa
pop
xchg
lahf
stc
inc
mov
les
ficoms
mov
xchg
lods
hlt
pop
jb
cmpsl
cmpb
test
cmp
mov
mov
outsb
jecxz
aas
out
data16
ljmp
adc
ss
push
or
es
inc
adc
dec
in
jp
cld
inc
ret
push
arpl
jo
pop
jae
negl
cmp
pop
push
hlt
cs
push
sbb
loopne
mov
and
pushf
clc
or
mov
cs
dec
aad
cmp
cmpsl
clc
mov
stos
cmp
shlb
enter
movsb
cli
pop
add
mov
mov
pusha
in
xchg
shrl
into
and
pop
jecxz
add
into
in
cmpsb
sub
xchg
insb
js
jmp
inc
jl
stos
pop
pop
inc
or
fcompl
imul
movsb
fdivs
or
pop
xor
inc
mov
repz
adc
fldt
mov
inc
push
push
das
dec
sbbb
inc
cmp
sbb
inc
lret
push
mov
out
dec
shlb
sub
in
notl
dec
or
orl
xor
and
sbb
js
add
mov
mov
mov
cmpsw
mov
push
test
sub
and
adc
push
js
movl
movsl
adc
stos
fisubl
pusha
jl
cld
inc
mov
mov
repz
pop
xor
mov
sar
mov
mov
adc
inc
add
imull
jns
jns
int3
pop
ret
jg
mov
jg
or
jmp
pushf
imulb
dec
sub
adc
dec
fdivrl
aam
xor
push
outsb
sub
sub
pusha
fistpll
fmull
add
add
dec
pop
adc
loopne
cmp
fcmovu
fucompp
jo
int3
mov
mov
sub
andb
mov
int
jno
les
add
inc
int3
cltd
mov
nop
sti
adc
xchg
movsl
add
sbb
icebp
mov
out
add
jge
call
stc
pop
int3
insb
mov
pop
loopne
btc
mov
mov
mov
mov
sub
add
das
pop
pop
lock
scas
mov
cmc
cltd
aam
add
mov
mov
subb
sbb
pop
jno
add
ljmp
stc
adc
sbb
xchg
ljmp
cli
push
pop
les
lret
lea
insb
push
push
xchg
inc
mov
xchg
lods
mov
lcall
mov
loope
mov
rcll
sarl
in
or
cmp
xchg
pop
jne
adc
xor
mov
shlb
pop
ja
ret
add
push
pop
loope
jae
xor
cmp
inc
stos
mov
sbb
xor
push
add
push
cld
cmp
cli
popf
popf
mov
enter
sub
mov
xchg
pop
adc
push
xchg
mov
pop
pminsw
push
rol
add
push
add
in
addr16
jl
stos
rol
shll
sub
pop
adc
fistpll
ja
and
outsb
movb
ficoml
lret
shl
out
mov
dec
and
mov
or
push
das
sub
xor
clc
jp
lds
inc
push
pop
push
arpl
rcrl
sbb
loope
arpl
mov
mov
xchg
push
mov
aas
mov
jp
dec
fs
ret
pushf
sbb
cltd
sbb
jne
sub
rorb
fdivrl
popa
test
or
cmpsl
cmp
dec
mov
or
sbb
sbb
cmpsb
ljmp
cwtl
imul
neg
adc
fwait
addr16
repnz
xchg
mov
jne
cmpsb
cmp
jns
ret
leave
xor
sbb
xorl
lods
or
scas
aad
cli
lea
xchg
inc
add
mov
stos
xchg
decb
ficompl
fdivrl
or
mov
lahf
push
xor
ret
mov
test
jbe
insl
sub
data16
jmp
mov
jle
or
push
sub
jnp
mov
mov
shr
nop
xor
subb
xchg
cmpsl
aad
cwtl
xchg
sub
push
sub
fidivl
push
push
in
pop
mov
pop
add
sahf
inc
xchg
push
dec
xchg
loope
leave
cs
decl
inc
rcrb
divl
xor
movsb
inc
enter
dec
fsub
mov
push
dec
xor
xor
test
mov
pop
add
mov
cmp
jo
sub
sbb
add
jmp
test
loop
push
jbe
ficoml
jp
int3
push
sbb
fidivrl
std
in
xlat
or
jns
xchg
xor
lret
push
dec
mov
pop
scas
repz
and
mov
pop
push
lea
int3
nop
mov
push
push
pop
mov
add
lods
pop
xchg
out
dec
mov
push
sub
int
in
xchg
dec
ja
sub
push
dec
pusha
gs
mov
arpl
cwtl
cmpsb
mov
mov
xchg
jbe
fwait
insl
mov
jmp
or
icebp
mov
xchg
les
insl
add
shr
jg
cmp
imul
ja
lret
fcomps
pop
add
push
xor
sub
pop
out
andl
ds
xchg
bound
sbbb
clc
aaa
mov
popf
cmp
sub
test
dec
cwtl
lods
nop
jmp
out
add
imulb
mov
sbb
bound
adc
into
mov
enter
scas
cmp
movsb
dec
cmp
xchg
add
outsl
jnp
test
scas
es
xchg
repz
cmp
test
in
add
sbb
int3
aam
fwait
mov
push
fimull
sti
xchg
xchg
cli
les
js
lods
cmp
std
inc
lods
push
mov
mov
out
ds
not
mov
sub
add
insl
lahf
cli
pop
ja
and
push
iret
jmp
ret
scas
lods
jno
int
jbe
imul
pop
inc
fptan
aas
or
subb
rorl
mov
imul
scas
test
fbstp
pop
adc
inc
andl
in
pop
mov
loope
ljmp
imul
sbb
movsb
insl
rorl
mov
insl
jnp
movsb
push
push
cmp
add
xchg
in
cmp
push
fwait
les
sbb
mov
cmpsb
stos
cmpsb
in
jne
int
stos
ja
daa
call
fnstsw
sbb
xchg
bound
pop
sub
out
shlb
cltd
dec
or
clc
popf
push
imul
pop
push
mov
pop
iret
subl
fwait
repz
mov
lds
in
or
das
testb
xlat
pop
out
mov
push
lods
adc
divb
sbb
fstl
mov
sub
mov
data16
es
jnp
in
sub
mov
in
daa
jmp
popf
aas
out
ja
sarl
cmp
je
dec
bnd
loop
leave
and
jp
enter
cmpsb
ss
cli
divb
push
and
jle
push
dec
out
int3
imul
into
or
lcall
mov
dec
add
adc
push
mov
mov
mov
incl
ret
or
mov
sub
pop
insb
movsb
sbbb
movsb
xchg
dec
push
lahf
movb
pop
bound
mov
or
xor
loope
inc
dec
fwait
stc
out
in
negb
js
aad
lret
and
insb
fs
lea
adc
inc
insb
xchg
cmc
ficoml
ss
or
inc
or
fsts
scas
sub
jne
sahf
outsl
pop
add
in
mov
fidivs
xchg
int
mov
stos
aam
push
and
insb
pop
lret
scas
mov
clc
fiadds
scas
lea
daa
add
idivl
sti
sub
test
icebp
pop
xchg
push
add
sti
mov
dec
and
xlat
or
jmp
std
mov
repz
int
pop
pop
js
jmp
into
in
jne
out
ljmp
ret
xchg
rcr
cmp
ret
je
int3
sub
pop
adc
mov
mov
sbb
push
mov
stos
cwtl
lcall
inc
lret
inc
hlt
in
add
dec
mov
mov
test
je
ss
xchg
movsb
dec
testl
test
sti
cmovl
mov
pushf
fdivs
xchg
in
jl
pop
popf
dec
mov
dec
rclb
pushf
jbe
in
lock
imulb
sub
cli
inc
call
loope
push
out
push
xchg
jno
push
jne
stos
subb
pusha
push
movsb
xor
sahf
movsl
aad
add
ja
adc
iret
cmp
cmp
push
inc
sbb
orl
lods
pop
sub
sub
push
xchg
xchg
push
icebp
mov
sbb
pushf
or
mov
add
aaa
inc
mov
and
push
std
ljmp
inc
jns
inc
rclb
mov
push
cwtl
test
push
mov
lret
subb
call
roll
and
icebp
xlat
mov
dec
adc
addr16
in
and
dec
fs
adc
push
cwtl
test
mov
mov
push
outsl
add
lea
inc
cmpsb
lods
xchg
and
notb
in
int
scas
adc
push
in
inc
dec
aaa
jge
mov
call
pop
xor
inc
sbb
movsb
push
and
fdivl
mov
pop
fwait
and
jno
scas
inc
into
addr16
movsl
gs
xchg
shrl
push
xor
adc
xor
and
pushl
jne
pop
pop
outsb
and
out
lods
insl
sub
push
pop
mull
nop
adc
push
orb
cwtl
inc
ss
incb
es
je
xor
cltd
lea
popa
sub
jno
nop
xchg
scas
incb
add
xlat
jbe
sub
mul
xchg
adc
push
mov
push
dec
lahf
inc
sbb
inc
iret
mov
rcrl
rcll
dec
filds
push
cmp
adc
pusha
and
lcall
xor
jg
xchg
sub
add
xchg
lock
imul
mov
lret
cmp
jecxz
inc
push
mov
popf
pop
jno
pop
pusha
sbb
or
or
test
ja
inc
xchg
mov
cmp
push
jmp
in
xchg
dec
loop
add
in
or
scas
pop
loop
outsb
lods
call
sub
rcrl
rcrl
xchg
mov
or
lahf
jnp
leave
sbb
xchg
jb
in
imul
aad
repz
cmp
movsl
cmp
fcomps
xor
mov
fwait
xchg
shlb
dec
loopne
loop
pop
imul
sbb
xchg
jae
add
jmp
andb
xchg
push
andl
lods
es
inc
ror
dec
jl
push
add
inc
test
arpl
popf
cs
jb
jns
inc
mov
jg
pushf
and
data16
fwait
nop
push
mov
and
jl
flds
iret
adc
xlat
or
aas
adc
push
das
stc
aaa
push
push
mov
out
std
pop
fdiv
dec
icebp
sub
adc
lods
sbb
dec
sub
mov
xor
int
gs
lcall
stc
dec
fists
sbb
xor
jg
sbb
sarb
cmp
dec
mov
outsb
jae
ret
lods
add
mov
jnp
adc
push
adc
into
sbb
roll
pop
inc
fmuls
shlb
dec
adc
jp
jae
sbb
inc
inc
repz
imul
mov
push
sti
dec
pop
push
mov
sbb
mov
in
push
stos
or
fnsave
icebp
add
fs
nop
jbe
inc
lahf
mov
pop
popa
push
pop
push
insl
ret
dec
fcoml
xchg
pop
mov
rolb
imul
xor
inc
mov
xchg
jbe
mov
mov
enter
loopne
inc
xorl
int3
mov
push
xchg
aad
mov
pop
jle
repnz
test
mov
add
arpl
sbb
jns
dec
xchg
sub
pusha
and
cmp
and
push
jecxz
xchg
push
outsb
and
mov
mov
out
mov
lods
add
jne
icebp
mov
scas
je
mov
iret
lret
ret
push
add
iret
mov
xor
add
cmp
mov
insb
adc
pop
mov
xchg
iret
jno
lahf
cmp
shrb
xchg
mov
mov
icebp
out
xor
loopne
std
cmp
dec
lea
fistps
push
mov
fisubrl
negl
cmpsl
inc
stos
add
mov
shll
cltd
mov
addr16
adc
repnz
mov
mov
test
mov
jae
aad
dec
popa
and
cmp
test
inc
inc
sub
mov
dec
movsl
cmp
gs
imul
push
gs
inc
cmp
pop
inc
push
xchg
rcrl
dec
repnz
or
add
ret
jecxz
adc
jecxz
out
ficompl
pop
int3
xchg
push
dec
leave
lods
adc
xchg
rorb
jae
xchg
sbb
lock
fcomps
sub
pop
fcomps
inc
push
pop
imul
sbb
sbb
addr16
push
stos
push
js
mov
jl
pop
loop
inc
iret
test
dec
fwait
cmp
nop
cmpb
mov
in
sub
in
jl
inc
shll
mov
movsl
push
pop
lret
jl
and
mov
imul
sub
inc
outsb
scas
int
popa
push
push
mov
xor
cld
test
out
lods
arpl
aad
push
test
sbb
mov
icebp
sbb
dec
cs
xchg
mov
and
sub
pop
mov
aam
out
and
pusha
ljmp
sbb
mov
enter
pushf
and
inc
mov
mov
test
xor
shrl
jge
xchg
mov
shlb
cmp
sub
push
test
and
adc
sub
sbb
mov
sarl
sub
mov
push
sub
and
lock
out
leave
sar
lahf
cmp
mov
pop
mov
jmp
int3
out
push
pop
addr16
dec
dec
stos
mov
imul
jne
je
or
pop
xchg
dec
in
xor
xor
pop
shrl
xor
notl
enter
inc
mov
inc
push
lods
sub
pop
cmp
test
or
dec
pop
mov
stc
test
stc
repnz
sbb
push
xor
ds
scas
push
aaa
sbb
leave
push
push
filds
and
jp
push
add
or
lcall
sbb
lahf
and
ljmp
dec
shl
dec
mov
dec
cmp
popf
pop
xchg
adc
sub
clc
mov
call
jge
sti
mov
outsl
std
push
out
divb
movsl
pop
sub
add
fs
xchg
xchg
mov
lahf
in
in
sahf
cmp
daa
ret
fmuls
gs
and
inc
push
xchg
fisubrl
jle
xchg
scas
lahf
push
sub
or
test
bound
insb
hlt
dec
pop
bound
test
mov
inc
sahf
xchg
arpl
popa
sbb
jge
mov
shrl
nop
cmp
sub
xor
and
pushf
daa
dec
addr16
add
fcmove
and
xchg
mov
mov
nop
nop
or
dec
call
jbe
add
dec
and
xchg
lcall
lock
testl
popa
dec
xchg
das
aas
sub
out
mov
ret
iret
lods
inc
lahf
ljmp
jmp
dec
pusha
ljmp
cmpsb
mov
out
pop
cmpsl
or
xchg
es
or
push
and
xor
jo
lret
ret
rcrl
pop
lcall
lcall
loopne
popf
jbe
and
in
mov
pop
mull
daa
cmp
call
outsl
inc
push
das
es
push
mov
imul
out
rclb
pop
cli
sbb
and
jp
mov
push
out
insl
adc
aas
js
xor
mov
fidivrs
and
mov
or
in
mov
and
dec
outsb
jge
or
call
icebp
mov
push
mov
dec
lcall
cmp
cmp
mov
fimuls
fisttpll
imul
ljmp
outsl
je
lea
stos
dec
mov
cmp
lcall
mov
jge
xor
push
sbb
popf
int
std
pop
leave
sbb
cmpsl
leave
pop
mov
xor
xchg
xchg
push
cs
fmul
or
jne
and
subl
xor
jmp
call
in
mov
pop
leave
sahf
dec
clc
sbb
std
addr16
mov
callw
jg
jns
push
mov
mov
clc
clc
mov
dec
call
mov
xlat
fiadds
icebp
jb
push
in
sbb
sub
mov
push
lcall
test
dec
stos
sub
or
icebp
aad
cmc
add
jo
push
jp
adc
daa
inc
icebp
cmpl
push
or
lock
push
popf
mov
mov
xor
and
out
cmpsl
sbb
incl
leave
test
cmp
mov
push
aaa
push
sub
mov
jp
aaa
mov
inc
jle
sbb
xchg
xchg
push
xchg
mov
add
mov
sbb
lds
add
dec
mov
stos
and
and
xor
lds
cmp
mov
add
xor
adc
mov
mov
jns
repnz
mov
jle
and
jnp
imul
popa
inc
pusha
js
or
mov
sbb
outsl
sti
arpl
mov
enter
lahf
ja
jmp
pop
scas
inc
pushf
call
or
cmp
sub
lea
into
and
push
xor
jl
outsb
test
cmpsl
fimull
int
pushf
ds
xchg
xorl
repz
js
es
cmpsl
lea
insl
inc
mov
add
ror
sub
or
movsl
push
mov
lret
insb
sbb
inc
je
sbb
stos
push
pop
es
leave
aam
add
clc
test
mov
pop
in
pop
jle
mov
xor
mov
and
aad
mov
popa
adc
stos
adc
inc
sbb
adc
sub
lcall
xchg
dec
mov
lea
int
insb
popf
and
jle
dec
test
pop
std
adc
cmpsb
cmc
sbb
stos
pop
shlb
insb
rol
test
push
push
ret
cmc
test
lods
xchg
xchg
adc
rolb
pop
dec
adc
popa
iret
add
movsl
and
sti
test
xchg
sahf
in
gs
in
xor
je
rcrl
and
lds
add
or
nop
sahf
push
jecxz
mov
into
shlb
inc
and
shlb
fnsave
jnp
push
cmpsb
lods
mov
icebp
mov
int
ja
pop
xor
xor
dec
fxch
cmp
jae
pop
push
cmp
mov
push
sbb
xchg
seto
xlat
loopne
pop
jecxz
sub
adc
cmp
adc
inc
jmp
bound
or
js
loope
push
sub
push
setle
push
outsl
xchg
push
dec
scas
pop
cmpsl
into
and
popf
push
xchg
lret
dec
pop
adc
fcoml
sub
and
rolb
mov
nopl
movsb
pop
jp
cmp
test
inc
xor
lahf
push
lds
outsb
mov
jnp
xor
push
inc
rcr
out
mov
int
cmp
cmc
xchg
stc
cwtl
sti
mov
adc
pop
rorb
push
sbb
fucomp
mov
mov
push
xchg
push
or
cwtl
rorb
pop
repnz
cmp
mov
gs
inc
jecxz
jno
inc
adc
movsl
cmc
jmp
jp
xor
adc
repnz
mov
cmp
orb
pusha
out
xchg
mov
stos
daa
mov
pop
test
lcall
inc
jp
cltd
and
jmp
push
xchg
adc
cli
mov
push
jecxz
push
sbb
repnz
mov
dec
push
cmpsl
and
sub
inc
cmp
add
jl
push
aaa
cwtl
loop
add
dec
or
fildll
xchg
mov
iret
rcrl
jns
mov
pop
rcr
xchg
push
adc
cmp
dec
ja
sbb
std
stos
pushf
pop
lahf
popf
add
add
mov
movsl
add
lds
lods
xlat
jne
jo
icebp
sub
or
jmp
in
addr16
int3
mov
sarl
push
cs
xor
jge
stc
ja
xor
jo
add
push
or
xchg
cmp
or
mov
xor
andb
out
std
iret
daa
and
dec
inc
std
adc
mov
lods
out
out
add
pop
dec
jecxz
sbb
mov
jmp
scas
mov
cmc
jbe
xor
push
xchg
xor
pop
pop
mov
movsb
out
sahf
jge
test
xor
scas
mov
xchg
rol
inc
in
inc
push
ficoml
jmp
loope
in
lahf
leave
jmp
xor
inc
test
sub
out
add
hlt
push
mov
loope
insl
pop
mov
pop
mov
fcompl
push
jecxz
push
sub
sub
xchg
sbb
mov
sub
sahf
paddsb
dec
pop
jns
faddl
mov
imul
rorl
mov
outsb
lock
xor
scas
dec
pop
popf
sbb
dec
jae
movl
inc
out
push
dec
pop
push
cltd
inc
imul
insl
pop
jo
lods
mov
std
push
call
inc
inc
or
lcall
jo
lock
nop
mov
stos
sbb
xor
idivb
iret
mov
mov
or
pop
sub
pop
sbb
xor
mov
repz
or
adc
add
lret
pusha
loopne
jne
cmpsb
or
push
in
xor
test
jle
dec
pop
cmpb
xor
pop
mov
add
and
shrb
in
xchg
mov
mov
jmp
in
xor
lcall
fisubl
rcrl
mov
xchg
sbb
jecxz
in
ja
data16
in
scas
jnp
jmp
andl
push
inc
xchg
lds
and
test
xchg
sub
add
hlt
and
mov
popf
xor
jg
out
mov
int
sub
xchg
cmp
dec
mov
jo
das
xchg
jo
nop
and
xor
lds
cmp
xchg
dec
xchg
and
jne
xchg
cmp
shl
and
sti
loop
sti
popa
cmp
add
add
xchg
push
dec
jle
dec
adc
xor
fdivp
dec
cmpsb
xlat
test
insb
pop
adc
das
mov
fnstsw
sub
fnstcw
pop
mov
cs
jno
or
adc
add
cli
mov
mov
xchg
dec
sahf
mov
and
inc
les
stc
push
insb
xor
or
movl
and
inc
lds
and
mov
adcb
shrl
lods
and
push
movsl
push
int3
add
mov
frstor
add
sbb
stos
pop
xor
imul
cmpsb
out
add
jl
mov
or
mov
scas
out
data16
jge
lea
std
jle
pop
test
push
inc
and
dec
sar
clc
cmp
cs
cmpsl
mov
fdivrs
fstl
xchg
push
pop
jmp
xor
lret
adc
loope
enter
mov
adc
push
pop
inc
outsb
adc
sbb
decl
movsl
pop
mov
and
fisttps
fistl
xor
sbb
jo
cmp
cmpsl
mov
cmpsb
sub
fisttps
mov
subl
xor
in
pop
xchg
inc
pop
sarl
cld
shll
adc
rorl
in
pushf
mov
jle
pop
loope
int
mov
or
pop
jo
fimuls
cmp
js
enter
dec
loopne
mov
sub
icebp
cmp
inc
lods
repz
dec
fildl
popa
js
aas
ds
push
sub
outsl
dec
pop
jne
repnz
test
cmp
inc
push
dec
aad
addr16
fwait
into
jle
subb
test
es
xor
mov
dec
pop
jmp
xor
xchg
jb
mov
mov
es
or
mov
jns
ficomps
loop
push
mov
movsl
roll
jns
or
push
inc
aam
in
das
imul
loope
pop
js
xor
repnz
xchg
pop
and
pop
jg
xor
mov
jne
cmc
pmullw
fdivs
add
and
cwtl
imul
mov
xor
out
xchg
xchg
mull
std
or
lret
into
xchg
push
xlat
xchg
and
jp
jle
loopne
sub
pop
rcrl
push
jae
or
xchg
in
cmpsb
jns
xchg
xlat
je
cld
imul
push
lea
js
mov
mov
outsb
bound
mov
outsb
xlat
jae
lock
arpl
xor
ds
loope
cmp
dec
fstl
in
lods
inc
ss
repz
jmp
ljmp
xor
call
sub
outsb
rorb
lds
rcrl
mov
ja
cmp
sbb
xchg
pop
ljmp
inc
imull
or
sbb
xorl
dec
jbe
pushf
pop
popl
mov
ja
inc
aaa
inc
std
jo,pt
cmp
mov
pop
and
pop
arpl
add
fcoms
xchg
lds
insb
sti
xchg
les
xorl
xor
ss
bound
data16
push
mov
or
xchg
lret
xchg
mov
imul
ja
dec
lods
jo
cmp
dec
lret
xchg
je
or
cmp
dec
das
xorl
inc
into
xor
test
or
orb
xchg
ds
mov
jg
mov
pop
nop
fisubs
shlb
xchg
add
pusha
cmpsl
ffree
jo
jo
lcall
ljmp
in
sub
and
call
pop
in
jb
dec
scas
xor
daa
push
mov
arpl
adc
stos
gs
lock
arpl
xchg
fisubrs
lods
or
stos
pusha
jne
pop
adc
dec
jecxz
jns
sbb
es
mov
push
scas
pop
pop
fdivr
jge
mov
jb
mov
or
jg
push
enter
adc
loopne
cld
out
enter
push
popf
bound
and
mov
scas
xchg
push
inc
enter
jl
cmpsl
fwait
cmpb
sbb
in
lods
xor
das
incl
dec
cmp
rorl
sbb
test
xor
inc
fists
mov
push
cmpsl
sub
mov
pusha
push
push
mov
mov
sbb
lret
out
enter
sbb
ss
pusha
and
jbe
sbb
dec
in
xor
dec
std
in
jae
dec
arpl
stos
dec
mov
mov
cmpl
sti
mov
or
call
fwait
add
pop
lret
pop
mov
inc
adcl
sbb
cmp
mov
adc
das
ficompl
mov
mov
cs
in
cmpsb
loope
mov
cmp
push
cmpsl
aad
mov
cmp
and
sahf
inc
xchg
sbb
jno
mov
cmc
inc
mov
sbb
cmc
cli
clc
mov
cld
add
gs
fninit
push
outsl
addr16
fsubrl
or
add
jmp
jecxz
decb
and
cmp
xor
daa
imul
rorl
cmp
sub
outsb
call
mov
out
push
cmp
pop
dec
pop
loope
out
loope
dec
imul
push
xor
movsbl
stc
insb
iret
mov
dec
js
stos
xor
das
cld
es
xorl
mov
mov
push
pop
cmp
insb
fldt
dec
inc
cmp
and
sbb
or
pop
lods
dec
sub
cmpsb
mov
out
and
sbb
ljmp
mov
mov
push
ja
push
pop
add
insb
pop
cmp
push
rorl
pusha
loop
mov
pushf
ret
insl
cmp
les
mov
cltd
pop
jbe
mov
mov
icebp
xchg
inc
insb
adc
xlat
outsb
mov
cmpb
sahf
das
dec
movsl
in
cmp
mov
pushf
mov
sbb
mov
add
cltd
out
divb
mov
cmp
mov
mov
xchg
ja
sbb
mov
insl
sub
cmp
in
shll
loope
pop
add
lcall
movups
jo
sbb
aad
fnop
stos
lods
dec
cld
aaa
rep
cmp
popa
jmp
fldenv
jmp
sub
jmp
or
ret
or
xor
pop
mov
dec
mov
rcrl
xchg
es
jge
ds
gs
mov
add
lcall
in
xchg
test
xchg
add
sbb
out
test
sub
pop
and
and
pop
icebp
test
push
mov
imul
loop
test
in
sub
sub
sub
push
outsb
xchg
test
imul
lcall
mov
test
inc
or
notb
andl
mov
aam
push
xchg
ds
xor
mov
inc
test
std
addr16
jns
insl
sbb
imul
xchg
mov
xlat
sbb
dec
rolb
push
dec
mov
mov
out
imul
jne
and
imulb
mov
adc
jle
xchg
or
xor
sbb
xchg
sub
loope
hlt
clc
leave
movsb
push
xor
out
lds
out
ret
jp
jne
fbld
decl
mov
and
into
sahf
cltd
mov
add
pop
addr16
adc
xlat
push
pop
inc
sbb
adc
xor
lcallw
inc
dec
gs
and
dec
jmp
jp
or
stos
enter
sti
pop
leave
in
lods
or
jle
dec
xor
adc
inc
sti
add
adc
xchg
cmp
adc
dec
cmp
mov
sbb
or
push
jmp
mov
cmp
into
dec
mov
push
xchg
cmpsb
adc
xchg
fnstsw
inc
inc
aad
pusha
out
lret
sbbl
add
xor
adc
bound
pop
mov
fstl
jl
test
movsb
gs
lds
fs
arpl
cld
dec
inc
fistl
push
bound
mov
jne
pop
inc
pop
push
mov
lds
test
outsb
xchg
mov
in
mov
dec
xor
jecxz
cld
adc
sub
mov
pop
xor
mov
inc
cmc
cmc
ja
push
testl
xchg
out
push
pop
jge
cli
subb
loopne
sahf
rorl
imul
push
dec
sub
adc
ror
push
mov
xchg
push
jecxz
out
jnp
aam
data16
pop
test
fsubrs
jae
insb
fwait
jo
lret
shlb
rol
imul
xor
sub
inc
mov
lahf
jmp
mov
jns
mov
sbb
cs
mov
or
ja
pop
mov
jl
int3
push
mov
lahf
jg
jle
je
dec
mov
sub
je
and
add
pop
ret
addr16
xchg
xrelease
mov
lahf
sub
or
std
outsb
stos
mov
xchg
push
xor
cli
push
test
push
and
pop
bound
dec
cmp
pop
or
or
fstl
xor
pop
and
jns
je
xchg
xchg
cmp
mov
mov
clc
push
adc
xor
push
sub
jb
or
stos
lds
xor
sbb
fmul
cmp
sbb
pusha
mov
sbb
and
rolb
lods
pop
add
pop
mov
imul
jle
arpl
sub
jno
rcrl
sub
scas
xor
inc
mov
and
imul
shll
das
out
out
std
lock
out
popw
push
pushf
push
mov
lret
and
pusha
subb
sub
jl
subl
iret
mov
inc
test
scas
int3
cmpl
sub
jl
fisubrs
cmp
sbb
push
xchg
inc
xor
stos
mov
inc
aam
fildl
add
stos
mov
mov
jge
sub
test
pop
lcall
stc
jp
std
pop
add
sub
adc
ljmp
stos
loope
push
mov
aaa
out
pop
iret
lret
pop
out
sbb
inc
sub
add
pushf
inc
xor
sub
imull
lods
cmp
cmpsl
xor
daa
nop
jge
lods
dec
xchg
or
lds
cmp
jmp
test
cmp
subl
mov
jo
lock
jne
xor
cmp
loope
mov
and
mov
push
clc
pop
pop
repz
mov
into
pop
cmpsl
push
add
mov
jbe
js
inc
dec
fisttps
sub
xor
cld
ret
push
arpl
jnp
push
sbb
shlb
or
inc
aas
mov
mov
fwait
sub
sbb
push
push
imul
std
cmp
ja
pop
cmp
and
sub
or
inc
js
push
lret
stc
sbb
pushf
pop
dec
sub
xchg
imul
addr16
pop
aad
rcrl
mov
and
incl
and
cmpsb
push
sti
clc
mov
rep
repnz
loope
lods
or
xorl
or
or
in
xor
dec
push
add
inc
pop
movsl
mov
cmpsl
popf
mov
or
pop
xchg
push
fwait
addl
inc
jne
and
sarl
pop
out
sarl
mov
mov
mov
adc
out
xchg
mov
sub
push
in
xchg
movaps
ret
cmp
and
pop
mov
js
out
sbb
jo
cmpsb
jo
dec
push
lds
stos
add
in
push
out
out
das
and
mov
mov
shll
mov
loope
xor
outsl
push
cmpsb
into
dec
cmpsl
adc
lds
test
or
je
and
dec
push
xor
push
mov
sub
sbb
push
divb
scas
mov
push
pop
cmp
jns
push
test
lock
mov
ja
loope
mov
and
ror
jl
cmp
mov
cwtl
imul
mov
outsl
jbe
insl
mov
test
fimuls
xor
out
movsb
cmp
jecxz
gs
bound
mov
mov
js
ret
mov
out
notl
mov
test
or
call
dec
fxch
push
inc
mov
sub
addb
loopne
push
or
dec
nop
inc
xor
push
mov
and
mov
cmp
xor
das
mov
jmp
cmp
xchg
pop
int3
push
mov
ret
in
lret
fldl
sub
jne
lret
xchg
imul
xor
shr
leave
mov
add
pusha
jo
es
push
scas
jb
add
mov
stc
adc
insl
dec
clc
and
or
in
cmp
movsb
outsb
outsb
movsb
sbb
xchg
out
lock
push
stos
cmp
fsubs
lods
repnz
sbb
lea
inc
lods
pusha
int3
repz
push
orl
dec
pop
pop
popf
jl
dec
cmp
imul
push
and
inc
jp
imul
push
ja
fidivrl
ljmp
cmp
sti
xlat
push
mov
pop
movsl
jmp
jne
lds
scas
call
shr
mov
xlat
outsb
jno
jae
test
xchg
fstl
pusha
sbb
or
cld
cmp
sub
stc
popf
sbb
mov
sbb
icebp
adc
sbb
cltd
add
imul
inc
mov
fstps
mov
lret
or
jl
push
xchg
int
push
sbb
mov
loope
repz
mov
scas
inc
push
pushf
add
jnp
mov
std
pop
mov
pop
add
lcall
add
xlat
mov
rcrl
xchg
inc
xorl
fbld
testb
std
xchg
inc
dec
idivb
push
cmpsl
mov
inc
ss
fld
lds
push
in
scas
scas
and
lahf
cmpsl
inc
pop
test
xchg
mov
and
jbe
cwtl
inc
sub
ret
js
mov
icebp
lret
lds
add
stos
fnstsw
mov
loope
scas
jae
cmpsb
dec
sbb
and
lcallw
shrl
insl
aas
into
jg
nop
rcr
decl
in
pop
jnp
stos
leave
inc
aad
pop
fistps
stos
dec
inc
loope
pop
je
movsl
or
popf
jl
pop
test
pop
or
push
std
pop
inc
cmp
adc
push
inc
or
ljmp
aaa
insl
je
enter
mov
xor
push
test
mov
cmp
mov
in
inc
push
jae
pop
jno
adc
addb
fcmovb
call
lds
les
sub
js
out
add
and
xor
dec
push
popa
idivl
or
xchg
stc
hlt
or
mov
inc
das
movsb
repz
jno
idivb
inc
jb
outsl
sbb
mov
inc
sbb
cmp
cmp
fcomp
pop
cmpsb
push
xor
push
dec
in
and
int3
mov
dec
push
pop
mov
test
repnz
jno
ficoml
sub
inc
mov
mov
cmc
mov
cmp
cmp
das
cmp
imul
or
pop
call
mov
mov
add
xchg
nop
bound
add
jge
xchg
xor
fmuls
adc
fsubs
repz
xor
insl
je
mov
inc
arpl
das
dec
sub
adc
push
sbb
xchg
cltd
dec
xor
sub
xchg
pusha
sub
or
in
aaa
in
xchg
insb
pop
sbb
mov
ss
repnz
push
addr16
aas
mov
add
jae
adc
pusha
sbb
and
loopne
cmp
xchg
xchg
fcompl
ds
rep
call
lea
rcr
ret
adc
aam
adc
jp
nop
sbb
test
mov
clc
cli
cmpsl
xor
scas
std
lea
sbb
dec
push
xor
fstpl
scas
stos
lcall
lcall
movsl
add
add
inc
jnp
popf
cld
xor
push
out
mov
repnz
cld
pusha
mov
orb
inc
and
jne
int3
mov
rcll
xchg
fwait
aaa
inc
out
imul
mov
inc
scas
stos
sbb
shll
mov
vmovaps
lcall
js
jno
push
popf
dec
mov
and
sbb
add
push
dec
imul
aas
cmp
mov
loopne
dec
js
scas
sbb
sbb
mov
addps
mov
shl
out
push
out
gs
aam
daa
mov
pop
mov
movsl
lea
adc
cmpb
sbb
jo
push
mov
shrb
sub
push
pop
ljmp
aam
ss
sarl
scas
mov
and
call
inc
or
push
adcb
iret
dec
or
adc
jecxz
sti
stos
rolb
addr16
pop
cld
and
mov
jae
adc
out
out
push
lret
add
mov
std
push
xchg
sbb
daa
aad
movsw
xorb
pop
adc
xchg
xor
mov
popf
adc
pop
add
neg
jb
or
call
push
xorb
cltd
dec
push
mov
out
nop
push
enter
hlt
in
push
sub
je
dec
test
add
sbbb
mov
mov
dec
fcoml
out
fwait
mov
test
ret
sub
mov
dec
mov
inc
jo
adc
jo
sarl
inc
lahf
cld
mov
cli
unpcklps
add
xchg
mov
mov
cmpsl
in
int
lret
stos
xchg
gs
cmp
in
out
push
inc
into
pop
dec
lea
roll
mov
fucom
cli
enter
fiadds
mov
xor
cld
cs
push
jb
fidivrl
adc
hlt
rcrl
shl
lds
xor
es
hlt
mov
cmp
pop
sbb
inc
inc
xchg
decb
aad
push
ss
cld
mov
fndisi(8087
jle
movsb
push
inc
mov
bound
mov
fidivl
outsb
mov
inc
out
aad
pusha
and
and
outsl
in
cmp
jle
jmp
lea
movsb
mov
rcrb
push
pop
daa
ds
push
stos
jbe
out
dec
or
fwait
xchg
dec
shll
mov
fldcw
loope
pop
pop
mov
mov
lods
je
insb
fiadds
adc
add
xor
outsl
adc
arpl
jae
movsb
pop
mov
fwait
into
xchg
push
xchg
aaa
hlt
pusha
jge
pop
repnz
sub
subb
sahf
out
and
jns
jmp
adc
addr16
sub
stc
jg
mov
or
pop
mov
fsqrt
orb
sub
cmpsl
insl
ret
bound
mov
frstor
xchg
mov
js
sub
cld
aas
add
jnp
mov
inc
loop
jge
adc
cmp
cwtl
jl
jle
sarb
loop
lock
imul
lret
vorps
push
rcl
xor
stc
xchg
jmp
cmp
fildl
jge
mov
sub
lods
bound
mov
pop
and
xorl
dec
loopne
mov
imul
sub
and
lret
iret
dec
insb
jns
movsl
jns
int
mov
sti
xchg
lcall
xchg
call
jb
pop
test
mov
into
dec
mov
mov
or
inc
lcall
jle
xchg
cmpsb
test
jb
lods
test
lret
pminsw
pop
push
mov
mov
dec
push
lret
jbe
aaa
hlt
cmp
or
scas
jl
add
dec
pop
xchg
mov
shlb
xchg
popf
and
add
add
mov
das
dec
ljmp
inc
xchg
and
icebp
frstor
mov
aaa
cmp
pop
inc
outsl
or
ja
fisubrs
jle
mov
jb
jecxz
dec
mov
mov
mov
dec
inc
dec
sbb
je
sbb
movsl
fdivl
xchg
xchg
xchg
mov
jp
lret
push
mov
stos
aad
xchg
or
jns
adc
mov
sbb
popa
mov
dec
insl
lahf
adc
nop
xor
negl
repz
jnp
xor
push
out
aad
pusha
repnz
les
sub
sbb
sti
mov
or
add
jno
inc
orl
mov
frstor
adc
into
dec
movzwl
rorl
sub
fiaddl
les
xchg
pop
push
mov
or
or
sbbl
jge
xchg
sti
ret
add
in
jns
jmp
dec
icebp
dec
sbb
out
stos
jmp
jecxz
inc
in
mov
push
aad
test
jno
sub
xor
outsl
xor
sbb
loope
mov
std
popl
sti
lods
xchg
fwait
inc
jecxz
and
insl
push
pop
cmpsl
sbb
int
push
xchg
fsubrl
mov
int
mov
pop
test
push
and
fstpl
mov
int
scas
mov
out
mov
and
les
cli
or
lock
cmp
inc
outsl
push
push
sahf
imul
lods
stos
sbb
hlt
push
popa
and
pop
xor
jo
cli
inc
lea
jecxz
mov
add
mov
jbe
pop
adc
jnp
or
pop
out
cmp
outsl
insb
jecxz
hlt
dec
ds
cli
adc
jne
sbb
enter
rorl
push
testb
daa
idivb
es
sub
incb
add
mov
cmp
mov
ds
add
mov
push
arpl
jmp
insb
repnz
mov
call
inc
sub
std
inc
lods
cs
hlt
test
and
js
icebp
fs
push
jecxz
or
cmp
sar
sbb
sbb
fdivrs
xchg
and
pusha
jae
xor
or
xor
pop
jae
push
dec
mov
and
dec
mov
ret
lahf
arpl
push
adc
xchg
add
mov
adcl
fisubrl
pop
xchg
stc
ja
sar
and
fstpl
push
lahf
pop
ljmpw
loopne
scas
ja
es
in
sbb
push
das
jb
cld
call
mov
pop
mov
xchg
sbb
dec
movsb
je
xchg
pop
insb
stos
sbb
in
stos
pop
mov
clc
movsl
adcb
sub
sbb
pop
popf
push
inc
dec
mov
and
aam
mov
addr16
cmc
xor
scas
das
xchg
nop
notb
loop
mov
mov
sbb
imul
imul
test
push
cmp
mov
sbb
add
pop
adc
scas
sub
sbb
or
aas
xchg
bound
fdiv
in
iret
les
xchg
hlt
pop
xor
lahf
mov
movsl
xchg
mov
sub
jmp
mov
rcrb
insb
jge
and
xchg
outsb
sub
into
ljmp
and
cmp
mov
cli
dec
and
push
adc
sar
mov
out
movaps
push
lahf
ficoms
dec
pop
test
cmpsl
push
mov
xchg
or
adc
mov
pusha
sub
and
mov
or
adc
dec
dec
mov
jns
popf
pushf
push
pop
test
mov
gs
mov
fimuls
into
fistl
pusha
adcb
out
sbb
inc
jo
into
rorb
and
repnz
adc
jnp
jno
fiaddl
rorl
pop
sub
pop
movl
xor
outsb
stos
mov
cmp
data16
xorl
pop
pop
add
and
dec
fnstcw
push
push
testl
cwtl
lods
stos
shrd
xchg
leave
mov
mov
jp
or
push
pop
jno
jnp
push
outsl
ret
pop
pushaw
stos
cmp
and
xchg
push
out
push
xchg
adc
in
cmp
lahf
rclb
inc
push
xchg
aad
lcall
aam
pop
shlb
fprem1
int
mov
gs
sub
cli
repz
inc
sub
sub
push
or
jnp
scas
test
scas
enter
dec
adc
fs
mov
dec
inc
mov
adc
inc
dec
xchg
xor
xor
sbb
lods
fbstp
fucomi
push
out
mov
stos
aaa
rep
mov
fbstp
xchg
xchg
loope
filds
movsl
or
outsl
jnp
sub
sub
pop
xchg
push
mov
xchg
shlb
cmpl
cwtl
rcrb
cmp
adc
mov
mov
cmp
bound
add
jg
clc
mov
jnp
cmpsb
jbe
jae
aaa
test
movsb
fisttpl
xor
push
mov
subl
in
dec
bound
outsl
addb
mov
push
fistps
xchg
push
das
add
push
mov
add
ss
xchg
or
cmp
sbb
sbb
push
pop
adc
aad
or
mov
xor
into
pushf
xor
xchg
or
shll
andl
enter
stos
sub
xlat
mov
fldcw
movsb
insb
sbb
sub
dec
pusha
loope
repnz
imul
insb
xchg
out
push
cli
lods
dec
cli
push
add
xor
sub
stos
inc
pusha
adc
or
adcl
enter
popf
lret
in
and
movsb
sbb
lret
icebp
aad
insb
jl
xchg
pop
outsl
mov
and
ss
std
loopne
inc
lcall
out
xchg
sbb
sbb
inc
enter
les
jmp
in
mov
mov
and
push
mov
imul
jge
fcos
aas
or
rorb
fisubl
lret
std
adc
sub
pop
xor
jnp
fs
mov
das
xor
adc
push
lods
adc
out
inc
dec
dec
adc
cmp
mov
test
test
rcl
or
scas
decl
and
out
adc
mov
dec
repz
pop
jb
outsl
mov
dec
repz
or
or
xor
js
adc
inc
push
mov
arpl
les
ss
push
xor
daa
sbbl
cmpsl
inc
enter
mov
xor
dec
inc
xchg
and
sbb
lcall
jae
loop
addl
iret
jmp
ret
xchg
cmp
bound
jbe
sahf
sbb
or
cwtl
sub
dec
pop
mov
lahf
lea
popf
testb
xorl
stc
rorb
js
jle
pop
lds
pop
cs
jp
lock
cmp
mov
jecxz
ds
push
idivl
lret
subb
pop
xlat
xchg
je
inc
iret
xor
mov
jnp
sbb
xor
repnz
leave
fldenv
xlat
mov
and
shl
mov
jns
fwait
sbb
stc
clc
pop
or
push
sbb
outsl
or
push
add
push
lods
shrl
pop
orl
jo
mov
dec
inc
push
cli
xchg
sub
cmc
out
add
jp
mov
push
xor
add
daa
add
push
lods
xor
aaa
daa
xchg
adc
ljmp
into
lods
lret
jnp
icebp
popf
imul
repnz
movsb
js
xchg
dec
mov
addr16
movsl
pop
lods
adc
rorb
mov
das
in
add
inc
inc
push
xor
outsb
js
dec
mov
add
sbb
cmpsl
or
jge
mov
push
lcall
pop
jno
xchg
xchg
insb
xchg
sub
aam
inc
xor
jp
sub
cmpsb
test
insl
in
movsb
in
dec
movsl
sbb
btr
rcll
outsb
out
xlat
sbb
mov
lds
cwtl
lcall
mov
xchg
or
clc
daa
inc
popf
outsb
cmp
xor
movsb
sahf
sbbl
aaa
pop
mov
adc
push
pop
ret
dec
adc
adcl
inc
push
dec
clc
fisubrl
mov
mov
dec
xchg
fstpl
dec
push
fildl
sbb
jae
dec
nop
mov
mov
sub
or
pop
enter
inc
pop
add
and
lcall
in
xor
fcmovb
push
push
repz
mov
arpl
push
insl
jb
or
pop
or
test
je
mov
popa
dec
adc
mov
test
push
ss
xchg
outsb
inc
mov
test
jmp
ret
lods
mov
roll
and
lea
sbb
test
sar
jmp
xchg
mov
add
push
pusha
fnstsw
jge
jne
push
insb
mov
repz
test
lods
mov
dec
jecxz
inc
sbb
repz
cmpsb
call
or
int3
add
push
push
mov
xor
lods
movsl
lds
mov
movsl
dec
jmp
stos
pop
int
fldl
cltd
mov
js
xchg
push
and
inc
ja
push
xchg
mov
or
sti
xor
mov
sub
fstl
push
insb
pop
jmp
pop
add
mov
das
adc
mov
fcmovne
jp
cmp
pop
and
aaa
mov
mov
call
sub
or
loop
test
cmp
lcall
push
pop
lods
push
mov
mov
pop
aad
loopne
shll
outsl
in
push
mov
add
ret
stc
call
jle
or
outsb
negb
push
xchg
jnp
xlat
add
jno
fmuls
ret
mov
jae
jp
inc
cltd
xchg
jg
push
or
das
nopl
cld
push
aad
cmc
inc
xor
cmpl
mov
into
icebp
fcmovnbe
dec
push
das
inc
or
js
aam
hlt
rcr
fisubs
xor
and
jnp
jnp
xlat
stos
lret
pop
jo
shll
icebp
cmp
or
adc
pop
xor
decl
sahf
push
into
es
fstpt
testb
in
dec
sub
gs
nop
in
inc
cmp
jp
hlt
add
jmp
ret
xchg
fistpll
clc
dec
scas
test
xchg
rorb
mov
adc
and
loopne
adc
or
decl
xchg
pop
xchg
add
and
insl
cli
mov
dec
jb
nop
mov
inc
adc
sbb
sbb
cmp
or
pop
loop
insl
jp
jae
adc
jle
lea
mov
negb
bound
xor
adc
pop
data16
xchg
movsl
mov
jl
rdpmc
mov
in
mov
call
mov
ffreep
repz
jmp
aam
xor
inc
movsb
mov
sbb
push
xchg
pop
cwtl
shrl
xor
push
addr16
jb
es
and
push
fsub
cmp
add
sub
pop
fsubl
mov
cmpsl
pop
sub
outsb
inc
sarl
sbb
cwtl
scas
or
std
js
sub
pop
or
ss
roll
shlb
cmpl
jle
cld
mov
xchg
jmp
hlt
cmp
adc
and
pop
test
jnp
push
in
xchg
pop
testl
jmp
mov
inc
mov
lahf
popf
pop
xchg
je
jb
jns
cmp
mov
mov
iret
and
out
xchg
mov
mov
mov
inc
xchg
xor
xor
arpl
mov
xchg
popa
cwtl
pop
aaa
insb
pop
dec
or
sbb
pop
inc
nop
aam
jns
loop
mov
mov
add
inc
fdivr
test
shll
mov
add
cmc
ficomps
mov
mov
add
push
mov
jns
jae
loopne
xchg
cmpsl
scas
pop
mov
push
ret
repnz
pop
xor
xchg
lods
pop
cmp
jle
add
xor
pop
enter
mov
dec
pop
rorl
jge
xchg
lret
add
mov
jl
push
cmpsb
loop
out
inc
jne
adc
add
dec
xchg
imul
jle
out
das
lock
loop
mov
in
sub
rclb
jmp
fbstp
ret
test
push
mov
mov
pop
out
test
fsubr
mov
xchg
jp
pop
push
jle
js
dec
or
jo
addr16
push
or
push
sbb
xchg
jl
addr16
pop
iret
scas
xchg
jns
mov
rclb
ss
shl
cmp
cmp
mov
dec
ja
xchg
jns
shrl
cmpl
jl
out
or
add
ror
dec
aaa
aas
or
mov
adc
sub
cmp
sbb
or
push
daa
fucom
sub
mov
mov
test
sbb
add
das
mov
decb
or
sbb
leave
jnp
lret
daa
or
push
cmp
repz
xchg
in
mov
in
mov
aam
ja
addr16
add
subl
lret
adc
jbe
dec
push
push
push
inc
mov
xchg
or
xchg
cmp
imul
movsl
sbb
or
xchg
inc
es
adc
pop
pop
cli
pop
pop
inc
push
icebp
xchg
sbb
dec
lcall
cltd
mov
enter
jecxz
incl
pop
jbe
and
mov
sbb
nop
dec
mov
mov
sbbl
rcl
jno
das
std
gs
das
adc
mov
icebp
dec
xorl
scas
xchg
mov
cmp
adc
xor
xor
cmpl
in
pop
mov
or
and
testl
popa
jge
push
shrl
cmp
inc
inc
mov
pop
ror
mov
lea
dec
cld
push
push
push
lds
mov
shlb
icebp
cli
fstpl
push
push
xor
dec
mov
bound
fnstenv
ds
adc
jb
dec
into
out
jecxz
lock
outsb
dec
add
mov
pop
sub
fistl
fwait
fwait
out
inc
mov
int3
lahf
cmp
test
mov
or
sub
push
sub
roll
loope
in
sbb
pushf
movsl
inc
add
push
aad
sarl
cmp
mov
and
mov
cltd
test
notb
fwait
pop
sub
adc
sbb
sahf
mov
cmp
sbb
cli
fiadds
cmp
popa
add
ljmp
adc
jbe
leave
sbb
pop
jg
push
subb
mov
aam
dec
imul
and
out
daa
inc
mov
inc
dec
xor
cmp
out
fs
add
xchg
test
pop
aam
std
sub
roll
mov
xor
mov
jl
dec
sub
cli
push
pop
mov
pop
into
cmp
jnp
and
push
adc
and
lahf
lods
xchg
jge
and
pop
out
subl
mov
jecxz
outsb
in
fimuls
imul
push
push
mov
hlt
ja
popf
out
sbb
pushl
add
in
call
pop
jbe
in
or
pusha
jecxz
inc
jns
cmp
xchg
arpl
mov
mov
inc
clc
mov
jb
push
es
pop
addr16
popf
dec
inc
cwtl
fdivrp
lret
mov
out
mov
out
add
mov
stc
push
fsubrl
nop
mov
out
test
lods
mov
rcll
dec
enter
in
add
jno
adc
and
in
inc
push
test
dec
addr16
or
xchg
ljmp
mov
std
lret
and
pop
inc
inc
pop
mov
fisubrl
bound
push
lahf
faddl
cmp
pop
in
mov
or
mov
mov
popa
stc
stc
ficompl
add
push
clc
inc
icebp
cmp
outsl
and
mov
cli
popf
sar
xchg
rol
inc
or
sar
scas
fnstcw
xor
dec
sbb
lods
fdivl
ds
pusha
lret
adc
push
out
addr16
pop
jno
fiaddl
cmpl
mov
adc
adc
mov
stos
fldenv
ds
push
inc
scas
sub
mov
and
movb
in
scas
lods
dec
and
jbe
jl
push
push
jg
xchg
xchg
add
push
mov
mov
dec
movsl
xor
mov
adc
or
fimuls
out
sub
cmp
jecxz
sub
dec
jmp
rclb
add
icebp
jno
dec
lahf
pop
insl
lret
dec
add
cmpsl
into
jge
and
imul
xor
ljmp
dec
fwait
cmp
test
stos
hlt
cld
test
xor
push
mov
xchg
loopne
mov
cld
mov
sbb
xlat
sbb
or
dec
imul
sbb
popa
dec
dec
jb
add
jmp
mov
xor
icebp
sar
jle
jno
add
sub
inc
add
ret
lcall
jl
xor
loopne
inc
push
pop
push
loop
jmp
mov
gs
jbe
jbe
div
cmpsb
cld
faddl
scas
ljmp
jp
cmp
add
adc
or
mov
add
lcall
stos
sbb
mov
ret
aaa
add
loopne
cmp
mov
xchg
dec
in
jae
or
leave
inc
lahf
mov
mov
push
sbb
loop
mov
cmp
sbb
fwait
ret
xchg
cmpsb
sbb
push
xchg
inc
sub
push
pop
push
outsl
jno
mov
fbld
adc
ficoms
cltd
xchg
fs
add
jns
dec
mov
mov
dec
out
pop
sarb
push
pop
aaa
dec
es
or
mov
jo
fs
fimuls
stos
sub
sub
dec
xchg
dec
jmp
pusha
ficomps
mov
dec
cmp
lret
fnstenv
shll
int3
int3
daa
dec
ljmp
jo
jmp
cmp
sub
push
push
jecxz
insl
ficoms
call
adc
cmp
mov
adc
mov
insb
fstpt
inc
ljmp
mov
lret
cmp
sub
lea
imul
sub
paddw
mov
adc
add
push
xchg
add
jo
es
pop
in
out
out
push
cmp
and
dec
and
jg
iret
popf
mov
fdivl
pop
stos
or
arpl
adc
push
aad
xchg
lock
dec
shl
adc
enter
out
lcall
scas
add
lsl
mov
xor
js
lds
add
fsts
shlb
jg
repz
fdivrs
lret
jmp
adc
jmp
adc
cli
pop
xlat
les
pushf
add
fcmovb
popf
cmp
sbbl
ret
insl
testb
lret
daa
imul
test
inc
lds
xchg
psubw
popa
nop
adc
sbb
sub
pushf
mov
mull
rorl
xchg
leave
iret
mov
inc
cmp
dec
stos
xchg
sub
insb
mov
mov
subl
imul
cmp
inc
es
jp
negl
and
push
jb
mov
xchg
xor
mov
cmc
out
mov
das
inc
inc
pop
cs
cmp
jno
xor
jns
push
mov
lods
and
call
addr16
cmp
cli
push
hlt
pop
rcrb
jns
xorb
jge
pop
sub
or
push
lock
popl
sub
int
and
mov
sbb
shll
sbb
arpl
adc
sbb
mov
push
mov
rorb
pop
xlat
jnp
insl
or
icebp
xor
mov
dec
pop
mov
push
call
jmp
loop
adc
mov
scas
jl
adc
cltd
fsubl
aas
xlat
imulb
sbb
sahf
pop
sbb
mov
dec
lea
ret
push
rorl
aad
jnp
in
jns
fnstcw
std
clc
ret
pop
xchg
jb
in
ret
jbe
mov
add
nop
inc
and
test
fld
int3
xor
in
movsb
xor
nop
cmp
xor
daa
dec
or
push
sub
stos
xchg
nop
push
push
mov
and
jne
in
mov
xor
notb
sbbb
into
imul
push
jmp
mov
imul
nop
shll
mov
xorb
enter
rep
xchg
test
rcrl
movsl
xor
ret
jge
stos
or
daa
adc
jecxz
fwait
icebp
daa
shlb
inc
sbb
xchg
enter
in
xchg
nop
out
dec
mov
insb
jecxz
xor
cltd
dec
or
imull
pop
pop
add
pop
pop
or
cmc
pop
mov
scas
xchg
cwtl
cmp
cmpsb
jbe
add
sub
push
shrl
iret
lret
or
pop
ljmp
jge
cmp
shrb
or
pop
lret
adc
adcl
in
in
add
adc
popa
movsb
mov
dec
repnz
dec
pop
adc
leave
sub
cmp
sti
inc
sub
xchg
push
decb
sbb
mov
lea
xlat
push
adc
mov
loope
insb
divb
js
sub
and
mov
mov
push
out
cmpsl
scas
addl
fistpl
scas
adc
sub
mov
cli
hlt
ret
sbb
xor
xchg
cmpl
xor
mov
xchg
cmc
fldenv
les
sahf
inc
sub
out
cs
pop
mov
pop
adc
jge
inc
jb
emms
inc
int
xor
and
sbb
push
fsubrs
jns
mov
pop
testl
lods
jo
loope
fsubrl
and
out
bound
inc
sbb
lret
imul
movsl
aad
insb
xchg
aaa
dec
popf
mov
test
mov
addr16
scas
popa
test
addr16
adcb
stos
in
jmp
xor
mov
cltd
scas
in
es
ljmp
fucom
push
and
pop
dec
xor
mov
nop
xor
and
lcall
pop
mov
scas
fadds
into
and
sbb
dec
pop
lahf
fldl
mov
data16
out
push
push
gs
stos
ret
xor
outsb
cmpsb
es
das
add
xlat
jno
push
neg
mov
push
outsb
int3
xchg
push
gs
outsl
ret
mov
sbbb
mov
lock
or
lret
repnz
push
stos
mov
push
ja
iret
test
pop
jno
lea
shlb
lea
push
dec
push
into
ljmp
lret
enter
adc
in
adc
dec
push
xor
pop
in
push
movb
sbb
pop
nop
sti
xchg
cmp
add
push
add
lcall
push
lock
cltd
pusha
scas
faddl
nop
lock
cmp
mov
in
sarb
sbb
mov
jae
pop
ja
mov
lds
fisubrl
stc
push
sbbb
popa
ficompl
test
sub
sbb
and
add
test
or
push
jno
or
and
ljmp
xor
add
and
mov
pop
mov
imul
jno
mov
js
mov
and
xchg
movsl
cmp
mov
push
inc
clc
inc
sub
das
aad
push
and
imul
insb
push
jl
mov
xor
imul
pop
sbb
jmp
test
sbb
pop
mov
add
xchg
push
shlb
jb
push
push
mov
xchg
movsl
popa
cmpsl
mov
cmpl
mov
cmp
test
jg
stc
push
daa
lcall
movl
mov
dec
or
cmp
popl
add
popa
sbb
dec
divl
pop
cmpsb
out
sbb
inc
mov
je
fcmovu
mov
mov
movsl
aas
popf
in
inc
or
dec
test
inc
stc
jno
pusha
dec
jne
repnz
inc
ljmp
lods
sti
adc
shll
mov
dec
call
inc
sbb
lahf
jle
out
ss
pop
mov
adc
movsl
jle
or
pop
jecxz
mov
push
fcmovnb
cmpsl
adc
ret
jns
inc
scas
inc
pop
mov
sarb
test
lret
mov
xor
add
repz
xchg
mov
pushf
or
jns
pop
jo
pop
in
sti
mov
push
add
mov
stc
jno
ret
repnz
arpl
imul
in
xlat
adc
mov
movsb
mov
cltd
or
nop
in
add
push
in
jecxz
and
notb
inc
vorps
xchg
icebp
jo
dec
push
or
call
push
mov
fcomps
mov
ljmp
and
mov
add
adc
jb
iret
out
aam
inc
pop
and
and
pop
xchg
pop
mov
popa
xor
lret
push
arpl
sub
in
mov
aam
pusha
js
dec
adc
mov
pushf
je
loop
sub
lds
addr16
popf
cs
cmp
or
es
cs
sub
cmp
dec
push
lods
scas
in
pop
push
mov
insl
pop
ds
cmpsb
xor
or
jmp
xchg
add
lods
jo
mov
xor
and
inc
daa
inc
and
lahf
sbb
push
mov
dec
adc
xlat
xorl
mov
xchg
jle
aas
out
mov
or
movsl
add
add
clc
pop
xor
sub
das
shlb
xchg
push
jns
adc
sub
mov
out
and
cwtl
ret
or
push
dec
sub
dec
jge
jne
scas
jno
fbstp
nop
mov
xchg
loop
movsb
push
dec
mov
xchg
fsubrs
in
mov
mov
mov
xlat
jp
pushf
fs
sub
mov
mov
mov
pop
mov
sahf
jo
mov
mov
stos
rorl
test
mov
arpl
sub
test
adc
int
cmp
lret
fisttpll
fisubs
mov
mov
sub
lcall
and
call
jne
sbb
cmpsb
xor
jae
scas
mov
push
push
cmc
sub
sahf
nop
add
iret
push
xor
data16
loope
out
std
adc
add
xchg
stos
mov
insl
pop
mov
or
shrl
je
sub
mov
cmp
mov
idivl
scas
dec
push
cmp
inc
in
xor
lret
sti
or
adc
add
arpl
in
pop
or
push
mov
sub
push
lods
mov
add
pop
jp
mov
push
jno
in
imul
lahf
repz
mov
lea
sub
add
mov
mov
mov
pop
imulb
insl
sbb
std
mov
sbb
xchg
les
imul
aam
add
imul
ficoml
mov
out
xchg
mov
cld
cwtl
xchg
sarl
sti
stos
add
pop
cmpsl
adc
xchg
insb
mov
inc
out
ficoms
mov
pop
add
adc
cmp
dec
out
test
xor
push
stos
xor
fstpl
push
iret
cmp
xchg
daa
push
sub
or
xchg
cmpb
push
mov
insb
fnstenv
sbb
sti
out
scas
scas
inc
ds
fnsave
add
mov
or
cmp
test
sbb
into
les
mov
leave
sub
ja
pop
push
in
int
ret
fstl
fcom
dec
sbb
out
movsb
lea
int3
fwait
and
addr16
sub
mov
out
jbe
adc
xchg
jno
pop
sbb
mov
inc
dec
push
push
dec
scas
jl
ret
add
aam
out
out
cmp
fsubrp
push
imul
jns
push
ss
xor
clc
hlt
add
sub
dec
and
icebp
mov
sub
xchg
jb
lahf
pop
or
pop
xchg
or
pushf
cmp
jnp
sub
or
or
xor
jmp
sbb
adc
sub
stos
daa
ret
and
arpl
and
xchg
ret
jle
mov
add
push
push
frstor
add
ret
sarl
ja
push
push
push
aam
pop
fsts
popf
add
imul
dec
imul
imul
cli
pushf
pop
sbb
xor
int3
push
orb
xchg
xchg
out
imulb
jo
sti
pop
push
mov
out
lcall
xor
iret
pop
xor
inc
std
jg
out
in
mov
cmp
xor
into
sbb
loopne
pop
mov
mov
mov
ljmp
aas
call
cmp
lret
mov
xchg
cmp
repnz
ljmp
mov
stos
and
pop
subb
mov
scas
or
dec
pop
aam
pop
jle
fidivs
lret
into
mov
pop
sub
dec
hlt
hlt
aam
mov
divb
sbb
sbb
xchg
mov
jbe
ss
inc
stc
mov
scas
mov
test
dec
push
adc
xor
hlt
scas
inc
dec
bound
mov
lock
xor
inc
fsubp
insl
pop
add
or
fstps
into
ficompl
push
loope
dec
loopne
imul
cmp
lock
jns
lahf
cld
pop
mov
adc
or
push
lcall
mov
mov
push
sbb
and
sbb
jbe
pop
sarl
dec
movsl
rclb
rclb
pusha
jno
and
loope
xor
jo
inc
mov
mov
dec
jp
cmpsl
push
arpl
push
sti
add
xor
loope
jmp
mov
arpl
xchg
xor
fwait
cmp
nop
push
dec
movsb
pop
sub
negb
xorl
cwtl
int3
imul
lea
or
iret
stos
push
out
jno
insl
jbe
popa
mov
cli
pop
test
pop
push
enter
adc
xchg
mov
fadds
and
mov
mov
cld
mov
out
xchg
leave
into
mov
test
sbb
das
mov
mov
push
int3
pop
inc
repnz
mov
stc
mov
lret
repnz
jg,pn
mov
repz
jle
mov
cmp
popf
loopne
push
and
loopne
clc
jp
loopne
leave
mov
andl
fstl
jno
loopne
loop
mov
mov
sub
sbb
add
adc
jecxz
mov
xchg
lret
dec
mov
cmp
sbb
add
inc
cld
decb
arpl
xor
dec
fwait
and
fisubrs
mov
aas
add
push
iret
js
mov
in
push
pop
dec
xor
xor
testb
cld
lods
pop
jne
add
mov
test
cmp
or
inc
lcall
in
sbb
add
xchg
int3
and
das
and
test
sub
insb
outsl
sub
test
mov
mov
mov
cmp
sti
cltd
inc
mov
out
sbb
adc
hlt
mov
xor
test
mov
pop
cmp
lea
mov
adc
fimuls
add
mov
and
sbb
inc
or
les
sbb
sub
cltd
and
cmp
lock
cwtl
cmp
mov
pop
hlt
or
test
je
add
mov
lahf
fs
enter
andl
mov
lea
mov
fnstcw
xchg
rcl
pop
sbb
push
dec
movsb
cvtdq2ps
xchg
mov
rorb
cld
xchg
rol
push
and
dec
xchg
stos
cmpsl
ljmp
xchg
sti
cltd
pop
cmc
imul
nop
jbe
stc
jb
or
test
shlb
xchg
sub
xchg
fcmovbe
repnz
sub
out
mov
in
jg
lahf
xchg
mov
ret
adc
inc
bound
pop
leave
cmpl
sti
xor
std
jo
pop
fidivrl
fwait
sbb
and
sbb
dec
fildl
adc
push
xchg
stos
cmc
pop
fwait
push
push
xlat
push
icebp
xor
cmp
cmp
xor
cmpb
scas
cmpsb
lds
xor
sarb
ror
gs
aad
inc
vandnps
mov
imul
jns
push
mov
xor
jecxz
and
ja
push
cmp
inc
stos
scas
push
mov
jo
fbld
xor
mov
add
lret
cmp
inc
int3
and
or
cli
test
inc
cmpsb
mov
xchg
xor
scas
xchg
push
jbe
fbstp
call
fwait
out
cltd
inc
cwtl
insl
sti
daa
or
pop
mov
jno
pop
imul
aaa
dec
mov
jl
push
sub
xchg
fidivrl
or
in
xchg
lods
jno
aas
movsb
sub
sbb
in
xchg
call
popa
pop
lcall
fisubrl
mov
inc
in
push
pushf
ds
and
xor
test
out
dec
popa
addr16
fwait
lret
and
cmp
pop
pop
aam
aas
jge
sub
sahf
lahf
mov
mov
cld
shrl
or
sub
bound
cltd
xchg
dec
fs
repz
dec
lahf
and
call
repnz
insl
mov
xor
testb
or
bound
push
dec
mov
mov
sub
adc
jl
cmp
aas
pop
in
shrb
sub
mov
pop
ss
add
out
inc
push
mov
sbb
imul
add
repnz
lahf
insb
jno
add
lret
repz
cs
cltd
push
fwait
push
push
icebp
rcrl
xor
inc
test
pushl
adc
in
adc
ljmp
xor
cmp
adc
aad
push
sbb
jb
ret
xchg
jnp
aam
sbb
jecxz
pop
addr16
inc
mov
pop
iret
dec
or
dec
mov
popa
scas
ret
mov
ret
mul
enter
pop
cmpsb
lcall
jns
mov
cmpsb
add
mov
test
jle
sarb
xchg
popa
bnd
and
or
pop
xchg
adc
dec
subl
mov
mov
mov
sub
cmp
jg
xor
adc
push
scas
mov
mov
dec
pop
mov
cmpsb
lds
loop
out
pop
jb
idivl
lret
or
sub
jno
in
and
mov
jo
push
leave
lea
mov
push
in
shlb
adc
mov
xor
mov
jmp
and
push
shr
jecxz
hlt
sbb
jno
inc
dec
push
loope
in
push
xchg
insb
mov
and
inc
ja
add
imul
les
mov
jns
jbe
mov
inc
sbb
jns
ret
pusha
adc
into
testl
push
sbb
aad
push
hlt
xor
insb
add
rcrb
xchg
mov
fiadds
ret
mov
or
pop
clc
lock
push
stos
je
inc
ljmp
divb
pop
je
rolb
int
addb
out
push
das
loop
in
push
sti
sbb
fimuls
xlat
mov
fildl
insb
jl
mov
arpl
mov
cli
dec
push
rorl
jecxz
stos
inc
mov
push
xchg
cmc
mov
xor
pop
cmp
ret
sub
loope
jae
or
dec
loop
sbbb
loop
ficoms
or
pop
add
mov
pop
scas
sub
sub
ret
cmp
test
fisttpll
lret
cmp
movsl
push
xor
mov
or
or
stc
or
mov
cmp
or
or
rcrb
pop
or
sbb
subb
mov
cwtl
rolb
je
adc
sbbl
lods
inc
das
xor
lock
addb
mov
fdivrl
push
xor
sub
lock
pushf
bound
or
movl
repz
sub
test
cmp
xchg
cmc
sbbl
iret
sbb
or
pop
mov
call
add
fwait
adc
das
mov
ror
popf
outsl
dec
sub
lcall
xor
andl
fidivrs
fmull
rol
pop
dec
mov
imul
mov
aas
pushf
roll
jae
sub
pop
pop
subb
mov
rcll
fistl
cmpsb
stc
into
mov
pop
mov
pusha
cld
jl
push
push
dec
push
repz
pop
nop
jecxz
adc
icebp
and
dec
cli
cmpsl
mov
xchg
xchg
flds
push
sub
pusha
cld
and
pop
add
das
xchg
sub
jne
cmp
lds
inc
loopne
add
rol
das
push
dec
fisttpl
and
in
das
out
or
out
fdivl
jg
xchg
lock
aaa
sti
xchg
js
cmpsb
sbb
repnz
shrb
lcall
rolb
xchg
pop
sbb
push
add
and
add
loop
mov
movsl
xor
cmpsb
sarb
and
fucom
pop
inc
pop
es
jne
mov
mov
mov
xor
sub
in
out
and
mov
andb
add
stos
or
and
out
int3
pusha
popa
jae
sub
stos
shlb
jae
imul
jecxz
in
dec
in
jnp
stos
and
mov
in
sahf
dec
shrl
aam
mov
xchg
push
or
lret
icebp
xor
adc
sbb
add
in
or
movsb
cmpsl
cmp
cmpsl
inc
pop
or
dec
dec
add
jmp
aad
mov
mov
ss
outsb
inc
cmp
mov
xor
lock
pushf
xchg
jle
dec
push
test
and
adc
and
add
dec
es
es
sub
dec
push
cmp
and
fmull
adc
shll
sarb
add
xchg
js
mov
mov
shll
inc
push
lock
xor
jl
aas
aas
stc
lods
outsb
sbb
push
fstl
js
in
or
pop
push
cli
adc
xchg
push
lock
push
pushf
xchg
shrl
mov
push
lock
mov
lret
icebp
subl
in
xchg
in
psadbw
adc
push
cmp
xchg
adc
cmp
fldt
mov
es
test
outsb
push
loope
out
adc
ss
enter
arpl
std
mov
push
insb
cmp
iret
xchg
ss
inc
jge
or
ds
jle
enter
jae
or
in
sub
roll
pop
xlat
pushf
imul
out
enter
sbb
loope
repnz
lcall
aad
xchg
ja
aad
loopne
ds
pop
adc
dec
add
leave
jns
xchg
test
or
aaa
adc
mov
pusha
cmp
adc
push
mov
jle
cltd
push
sub
mov
int3
jl
cs
sub
pop
imul
jo
mov
jmp
test
repnz
fadd
or
lods
or
push
pop
stos
sub
jo
ret
popf
jg
dec
fcmovbe
lahf
stc
fistpll
std
or
inc
cwtl
push
jl
mov
inc
mov
repz
mov
push
sbb
mov
xchg
push
out
cmp
fidivrs
cmp
adc
scas
cwtl
sub
mov
ljmp
sbb
inc
dec
inc
adc
ret
stc
jg
jne
sbb
cld
pop
hlt
insl
cmp
and
xor
sbb
faddl
fldt
mov
xor
jecxz
gs
arpl
xor
mov
sub
adc
cmc
xchg
mov
testb
sbb
sub
sub
cmp
jbe
push
push
xchg
fsubrs
add
icebp
pop
mov
push
iret
adc
data16
lcall
shrb
int3
mov
cmpsb
jb
fmulp
addr16
insl
out
dec
cmp
sub
test
jp
jae
adc
into
inc
xor
loope
fbstp
aas
outsl
and
add
jmp
mov
shr
stc
or
jle
and
pushf
pusha
je
mov
aad
adc
flds
adc
mov
sbb
push
aaa
ja
ljmp
ja
mov
mov
inc
repz
cs
xchg
xchg
aaa
xlat
pop
mov
ds
push
sbb
add
sbb
je
fisttpll
mov
jle
xlat
or
jne
xchg
in
es
test
xchg
sub
sub
stos
aas
fcomip
shrl
frstor
and
sbb
icebp
stos
lret
dec
inc
xor
adc
imull
or
and
push
inc
sub
out
xchg
dec
ret
fnstcw
add
js
aas
or
ret
jbe
loopne
lret
fs
jecxz
xlat
test
iret
mov
jmp
nop
lahf
cld
pushf
sub
mov
mov
adc
push
inc
stc
xor
push
jo
in
mov
mov
ror
loopne
dec
out
pop
push
sub
dec
xchg
popf
negb
push
dec
aas
cmp
in
mov
push
sbb
sarb
out
adc
outsl
and
jbe
bound
and
xchg
jecxz
rcrl
lds
jmp
jo
lea
adc
imul
xor
sub
sbb
inc
pop
mov
mov
fs
and
push
inc
xchg
test
dec
xor
loope
aam
xor
outsl
pop
vunpckhps
xor
aad
mov
aad
adc
xchg
or
imul
incb
dec
stc
dec
das
cmc
bound
cld
stos
enter
div
lea
push
mov
mov
fstpt
add
pop
nop
push
aam
pop
lock
push
test
je
cmp
lods
push
jmp
jnp
cwtl
pop
shll
xor
mov
and
in
adc
loopne
add
dec
xor
movsb
subb
pop
and
inc
rcll
push
mov
jo
in
dec
pop
xor
hlt
lods
push
sbb
xchg
roll
cmp
je
cmp
ja
jecxz
mov
sub
mov
faddl
hlt
pop
xchg
pop
cmpl
sbbl
add
js
adc
loopne
stos
pop
pop
in
pop
push
xor
dec
mov
lods
fidivl
mov
xor
cmp
xchg
mov
ret
add
inc
scas
push
jl
fists
cmp
sub
cmpsl
sahf
out
repz
push
filds
and
fstpt
scas
ljmp
sub
jbe
dec
ljmp
sub
std
push
dec
push
mov
or
sbb
push
add
sbb
clc
int
adc
dec
xor
adc
inc
pop
cmp
push
sub
mov
push
cmp
sbb
push
xor
subl
das
mov
push
adc
jle
cltd
add
test
push
add
and
aad
ds
and
shl
xchg
cmp
insb
sub
clc
jle
jne
in
aaa
adc
and
loopne
sub
addb
mov
int
outsb
dec
adc
outsl
xor
test
pusha
cmp
fistpll
loope
aaa
adc
jb
cmp
adc
orb
xor
mov
sub
gs
sbb
or
es
mov
fistpll
sbb
loop
and
dec
pushf
mov
hlt
test
loopne
dec
jbe
inc
out
pop
push
ret
ret
aaa
xor
xor
xchg
adc
out
jnp
push
fstps
dec
loopne
insb
iret
pop
cwtl
cmp
or
fs
stos
jns
insb
stc
xchg
lea
dec
xor
outsl
das
in
push
test
aad
cmpb
mov
jg
sub
adc
mov
sub
sub
ret
aam
push
mov
popa
mov
les
arpl
cwtl
scas
pop
mov
shlb
cs
mov
mov
enter
leave
add
ljmp
jno
or
and
lcall
cmp
aad
jae
inc
das
hlt
ds
dec
mov
xorl
test
mov
and
pop
nop
movsl
mov
mov
daa
mov
jbe
dec
ret
scas
jns
insl
fistl
mov
dec
stos
cwtl
jns
imul
or
push
pushf
test
push
push
andl
int
fsubrl
push
ljmp
outsl
mov
adc
sub
sub
cmp
ret
hlt
xchg
jnp
mov
sahf
dec
into
inc
dec
ret
popf
xor
jmp
cmpsl
andl
sub
inc
and
daa
js
mov
jmp
add
sbb
std
popa
test
stos
push
inc
push
xchg
mov
nop
mov
mov
dec
xor
sbb
es
sub
fstpt
andb
and
xor
adc
lret
adc
test
adc
sbb
mov
imul
movsl
cmc
out
repnz
dec
das
fwait
in
sbb
or
pop
mov
lret
push
mov
lock
jo
pop
pusha
loopne
adc
lcall
lods
cmc
cmp
cmp
xor
mov
jmp
mov
jmp
add
mov
scas
xor
jno
xlat
sbb
push
jmp
adc
sub
lods
sub
cmpl
cmc
aad
insl
push
sti
push
push
sarb
or
push
add
mov
mov
incb
adc
mov
pop
insb
push
lods
hlt
add
fsubrp
dec
loope
lea
fiadds
daa
movsl
jae
ret
shll
mov
mov
and
jae
inc
dec
in
stos
das
addr16
sbb
lock
fidivrs
fildll
aaa
inc
xor
jg
int
cmpsl
mov
mov
sub
loop
lock
icebp
cmp
fs
pop
scas
xchg
loopne
imul
fsubl
pop
fs
iret
cmp
lock
lret
or
in
push
dec
clc
fwait
sbb
jl
and
push
stos
push
mov
xor
or
lods
cmpl
mov
inc
imul
inc
ss
rol
mov
xchg
xchg
icebp
fcmovnb
jge
and
mov
dec
movsb
ficomps
pop
add
lahf
cmp
adc
jo
jle
mov
imull
pop
sahf
jo
jo
jle
bound
jnp
and
fstl
jns
sbb
pop
scas
sub
std
aad
std
pop
adc
ds
xchg
sub
leave
les
mov
repz
iret
nop
test
pusha
mov
nop
cmpsl
lcall
pop
jb
xchg
hlt
dec
fs
add
lods
arpl
mov
jmp
xchg
inc
mov
imul
stos
push
hlt
sbb
mov
sub
add
add
into
push
sub
dec
scas
pushf
fistpll
push
jg
jge
adc
xor
or
mov
gs
arpl
test
pop
pop
push
pop
int3
and
aam
pop
sbb
mov
pusha
add
and
popa
jns
sbb
jmp
int3
inc
loope
sbb
cmp
inc
inc
mov
mov
xor
aas
mov
and
mov
aam
call
cwtl
adcl
outsl
loop
xchg
sbbl
enter
addl
mov
aaa
dec
jb
or
sbb
pop
ja
es
scas
inc
fisubl
ffree
aam
pop
repnz
xchg
ds
sub
cmp
movq
pop
mov
lcall
shr
icebp
jl
jne
push
and
xchg
jae
push
xor
push
mov
adc
xchg
sub
movsl
popa
jb
fimuls
not
or
cmp
dec
and
mov
dec
loop
push
mov
sbb
shlb
lahf
les
pop
test
sub
lea
arpl
xor
fistpl
add
sbb
adc
and
or
arpl
in
sbb
ret
fcmovb
lret
pop
xchg
cmc
cmpsb
adc
and
arpl
adc
sub
push
stos
mov
test
nop
add
inc
out
push
add
push
xchg
int3
adc
xor
pop
and
ljmp
jne
push
xchg
rcr
or
mov
sub
xchg
cli
jp
in
xchg
mov
ds
pushf
lahf
xchg
cmp
mov
mov
rorb
gs
jge
jge
push
add
push
lahf
push
push
and
mov
push
repnz
mov
jae
mov
int
cli
adc
sub
pop
add
popa
add
ret
sahf
xor
je
pop
int
loop
repnz
inc
and
sbb
sub
pop
jns
and
aad
sbb
and
ljmp
mov
push
out
cmpsl
test
mov
addr16
mov
movsb
sub
cmp
scas
fcoml
mov
jo
mov
mov
adc
sub
out
es
cld
rorb
fldenv
push
shll
mov
add
jg
add
xlat
inc
iret
sahf
js,pt
lea
mov
mov
and
add
xlat
loope
sbb
out
or
dec
je
dec
int
movsl
mov
mov
mov
pop
fsub
cmpsl
enter
outsl
add
and
xchg
sarb
jmp
cmp
dec
add
or
aad
cmp
or
cld
in
adc
jb
xor
call
inc
lods
jbe
fildll
sbb
stos
pop
xchg
test
mov
xor
fisubs
cwtl
pop
rcrl
push
testl
adc
jmp
daa
dec
popf
mov
jge
inc
idivb
int3
cmc
or
cmp
and
mov
stc
lds
inc
sub
repnz
dec
test
insl
mov
into
mov
stos
or
test
icebp
inc
mov
inc
je
hlt
inc
jle
cmpsb
insl
ret
test
mov
adc
int3
or
inc
adc
test
fimuls
ret
pusha
mov
mov
mov
xlat
sbb
sbb
cld
xchg
add
dec
pop
sbb
lock
cmp
sbbl
inc
xor
mov
sbb
das
mov
psrld
out
cmc
and
lret
jp
jle
stos
rclb
dec
xor
mov
mov
xchg
add
mov
pop
lock
mov
jo
pushf
sbb
sbb
push
and
aas
lods
mov
sbb
fwait
rcr
inc
add
fcoms
push
push
fimull
mov
nop
xchg
mov
lock
sub
and
sbb
sbb
and
leave
sub
dec
lret
push
inc
xchg
cli
popf
fisttpl
sbb
fwait
or
in
aas
test
fidivl
ss
push
or
movsb
out
shr
sub
cmpsl
outsb
aam
test
imul
mov
daa
add
mov
mov
stos
rol
enter
loopne
nop
loop
sub
sbb
pop
in
or
push
sbb
xor
rolb
scas
xchg
shll
sub
mov
mov
lret
cld
inc
adc
shl
push
addr16
mov
fidivrl
adc
ss
mov
in
fisttpll
inc
adc
add
test
pop
negb
and
aaa
loopne
out
cmp
idivb
add
push
mov
les
pop
int
popf
mov
push
cltd
lcall
ret
push
cmp
jmp
push
std
iret
bound
mov
fsts
mov
sbb
jne
inc
sub
xchg
mov
fadds
clc
jo
mov
sbb
inc
mov
les
cmc
mov
imul
scas
add
paddsb
fsubl
js
es
cmpsb
jbe
addb
add
push
xchg
mov
push
inc
xor
mul
sub
push
stos
dec
scas
mul
jl
aam
add
dec
xchg
popa
jbe
and
jb
adc
push
or
xor
pop
dec
imul
scas
mov
lahf
inc
xchg
inc
icebp
mov
mov
adc
loope
int
loope
inc
dec
lods
and
jae
popf
test
subb
mov
cs
out
gs
xor
subb
jae
jl
mov
or
jge
iret
cmp
sub
fisubl
lds
hlt
pop
sbb
mov
orb
je
or
lcall
inc
pop
repnz
push
cmp
push
mov
mov
cli
sti
push
lahf
in
icebp
lret
sbbl
xchg
jmp
push
adc
mov
sbb
test
faddp
dec
push
mov
inc
mov
and
sbb
cmc
das
cmpb
jae
rorb
cltd
movsl
mov
fsubrs
inc
add
dec
sub
cltd
xor
insl
push
push
sub
inc
inc
sbb
inc
jecxz
mov
mov
or
or
pop
arpl
movsl
xchg
sub
mov
pushf
stos
cltd
in
ret
mov
out
scas
and
stos
mov
jne
stc
jl
and
push
add
adc
lret
or
jo
lock
call
jne
scas
popa
js
sub
popa
xchg
add
cmpsl
pushf
fsubp
in
les
leave
xchg
push
mov
sbb
adc
mov
cmp
dec
nop
cmp
insl
add
test
sti
not
pop
xchg
mov
adcb
stc
hlt
sbb
nop
pushf
clc
xchg
push
and
pop
push
fdivr
mov
pop
jge
jp
dec
push
xor
or
mov
sub
dec
sarb
test
outsl
stos
xor
push
xlat
inc
jnp
sarl
mov
pop
push
das
push
xor
or
mov
mov
inc
imul
dec
fsubr
out
test
xchg
fstpl
aam
inc
out
jbe
inc
rclb
lahf
leave
cs
adc
pop
xor
mov
jge
je
dec
scas
sahf
les
mov
or
add
or
fcoms
jbe
aam
ss
pusha
inc
jl
mov
insl
in
aad
cmp
imul
mov
dec
xchg
imul
sub
pushf
pop
daa
sbb
rorl
into
inc
test
movsl
push
mov
scas
inc
xor
cmpsl
das
sbb
sahf
mov
cmpsl
aaa
mov
mov
rcrb
cld
mov
icebp
sub
xor
adc
cmp
gs
sti
stos
or
mov
lock
lds
stos
push
gs
pop
lahf
stc
das
adc
xor
mov
roll
pop
mov
and
test
adc
out
adc
fidivrs
dec
cmpsb
adc
xchg
xor
bound
cmp
adc
dec
outsl
inc
pop
dec
inc
push
adc
loope
lcall
xchg
outsb
push
cmpsb
leave
test
xor
es
push
mov
fmull
mov
xchg
jmp
dec
and
adc
lock
inc
ret
and
flds
or
rcrl
xchg
pusha
jnp
in
jnp
pop
pop
sub
add
fdivs
push
ja
stos
lret
xor
lods
in
push
xchg
mov
clc
into
es
mov
push
pusha
jl
xorl
leave
sub
rorb
sarl
arpl
dec
in
sub
pop
inc
std
sti
cmpsb
mov
je
aaa
sub
and
mov
fmulp
xchg
or
addr16
test
jae
mov
ret
cld
jmp
dec
ds
popa
mov
pop
inc
inc
sub
xchg
cltd
bound
mov
aas
popf
mov
cmp
push
jnp
andb
mov
mov
int3
jne
push
pop
scas
insl
jl
sbb
scas
fimuls
push
shl
jno
xor
lock
lea
lcall
xchg
ja
fildl
cmp
cld
fidivs
mov
and
xor
loop
ljmp
cmpsl
and
push
rorl
mov
and
aam
insl
mov
mov
or
dec
push
inc
je
xor
sti
test
and
daa
push
mov
and
test
fs
lret
push
add
xchg
dec
fidivs
flds
orb
movsl
pop
shll
xchg
fldl2e
stos
testl
mov
pop
loop
in
xchg
cmp
adc
mov
popa
inc
inc
mov
test
test
popf
movsb
push
pop
out
push
cmp
dec
cld
in
fsubrp
add
mov
ss
out
cmp
icebp
ds
cmc
and
shll
xchg
cli
and
gs
cltd
fs
jmp
repnz
js
aas
cmp
fbstp
push
push
jo
cmpsb
xchg
xor
jp
add
jbe
repnz
pop
push
mov
sbb
push
mov
sbb
cmp
xchg
insl
adc
adc
aad
sahf
leave
fs
inc
push
iret
push
hlt
push
xor
dec
ljmp
std
fcmovnu
jbe
and
push
cmpsl
das
dec
adc
jbe
ljmp
test
stos
xchg
in
xor
and
out
je
sub
jne
dec
push
dec
jmp
or
jge
add
sbb
xchg
ret
cltd
insl
push
pop
inc
int
stos
and
addb
stos
lcall
jp
jae
dec
add
xchg
les
xor
push
cmp
xor
addr16
scas
xor
sbb
sbb
xchg
insl
leave
out
push
mull
sub
popl
add
cbtw
movsl
scas
pavgb
and
mov
rclb
pop
loop
cmp
into
and
data16
scas
clc
push
jl
mov
pop
mov
sub
daa
xchg
mov
mov
push
xchg
sbb
cmc
repz
jmp
cs
inc
popf
push
outsb
mov
lret
inc
fisttpll
and
mov
or
push
repnz
inc
nop
sub
sub
jno
jmp
pop
pop
push
lahf
nopl
xchg
lahf
in
add
iret
ljmp
dec
dec
add
popa
test
subb
jg
sbb
sbb
inc
lods
add
xchg
inc
xor
aam
lods
je
shlb
or
xor
shll
aam
fwait
adc
test
imul
lea
aas
adc
inc
push
dec
movlps
addl
push
dec
addr16
xchg
daa
test
addr16
pop
cli
decb
push
in
movsb
cmp
jl
outsb
popf
and
sub
lahf
fnstcw
or
insb
xchg
pusha
cld
scas
jge
fisttps
je
hlt
fmuls
dec
or
loop
dec
cs
mov
repz
in
fcmovnu
xlat
stc
pushf
faddl
fnstsw
pop
inc
mov
mov
xor
inc
cmovno
xor
cltd
out
ret
mov
lock
hlt
jnp
inc
hlt
xchg
jae
fst
ds
mov
cmpsb
mov
adc
mov
adc
loopne,pn
xchg
mov
adc
sbb
jo
dec
and
jg
pop
aad
pop
jmp
cmp
pop
lret
test
int
je
mov
fs
andl
popf
adc
and
adc
jae
push
mov
fists
fcomps
or
adc
enter
xchg
dec
hlt
push
bound
xor
fsubs
outsl
xchg
mov
cmc
push
clc
add
rcl
or
shll
or
out
lret
mov
aam
int
stos
xchg
lock
js
testl
sub
roll
cli
xchg
adc
add
cmp
movsl
jmp
xchg
xlat
je
incl
sbb
xor
out
test
mov
push
leave
mov
adc
push
out
cmp
jle
xor
gs
lcall
fwait
xor
aad
lcall
sbb
mov
dec
xchg
orb
cmp
mov
cmp
push
in
add
pop
jne
push
cmpsl
cmpsl
dec
dec
jge
les
sbb
cmc
pop
jle
xchg
out
mov
inc
cmp
shll
or
inc
cs
mov
pop
dec
jp
repnz
shll
xchg
fs
inc
fld
movsl
xchg
ret
int3
roll
pop
jl
dec
in
cmc
push
jmp
mov
sbb
sub
pop
scas
sub
mov
lods
hlt
mov
hlt
push
test
scas
adc
mov
pop
imul
xlat
xchg
cmp
mov
ret
sub
imull
jl
sbb
int3
cltd
aam
fs
into
pusha
pop
ret
xchg
idivb
pop
mov
out
int
mov
aam
cwtl
or
outsb
gs
lret
adc
mov
inc
imul
push
add
jl
arpl
outsl
push
inc
sbb
mov
jo
inc
xchg
lds
and
out
dec
and
and
mov
jg
pop
and
sub
or
adc
mov
inc
scas
cmp
adc
sub
lret
scas
sbb
pop
popa
popa
in
scas
mov
sbb
adc
xchg
aaa
lcall
shrl
sub
aam
jge
je
repnz
mov
jo
andb
cmp
stc
mov
add
sti
jns
jnp
or
mov
repz
add
dec
clc
jl
mov
mov
loope
push
cltd
fisttpl
stos
xchg
add
fisubrl
or
hlt
das
inc
or
and
mov
pop
pushl
out
scas
xchg
push
stos
add
cwtl
or
and
push
in
push
rol
inc
jmp
xchg
lcall
pop
int3
in
ret
fdivrs
jp
inc
mov
mov
pop
arpl
nop
inc
leave
je
cmp
and
sub
adc
jg
aas
mov
jno
sub
mov
sbb
les
scas
pop
ja
insl
sbb
shll
mov
dec
pushf
idiv
jmp
ret
scas
idivb
call
add
in
stc
aaa
loope
dec
fdivs
mov
jl
cmp
and
pop
xchg
mov
mov
pop
inc
shlb
ret
mov
inc
aas
lods
inc
pop
or
in
imul
push
push
mov
insb
cli
insb
int3
xor
sub
inc
insl
ficoml
mov
push
mov
xor
cltd
outsb
lahf
mov
sbb
sbbb
or
xchg
and
outsl
out
addb
sub
repz
or
lods
ficoml
cmpsl
cmp
mov
sub
mov
inc
push
mov
jbe
inc
rdtsc
push
xchg
dec
push
fldenv
dec
inc
jecxz
js
mov
dec
fistpl
xlat
int
mov
xor
pop
pop
xchg
push
out
sbb
jb
std
out
xor
aas
mov
mov
push
adc
jne
xchg
fistl
sahf
adc
ja
outsb
sbb
dec
push
inc
fisubs
cmp
pop
add
jecxz
mov
dec
mov
pop
xor
mov
mov
dec
rclb
sbb
mov
jno
mov
or
fsubl
push
mov
lods
test
clc
xchg
lock
ret
push
dec
cmp
ds
imull
test
cmp
or
imul
adc
stos
aas
or
pop
test
lea
mov
and
mov
inc
jb
lea
sbb
sbb
popa
in
mov
push
jns
out
pop
add
push
push
push
adc
lods
test
mov
jae
xchg
shll
mov
add
gs
xchg
insb
call
pop
ud2
test
gs
pop
lea
cli
inc
mov
sahf
enter
xchg
cmpsl
add
cs
sbb
nop
add
push
inc
mov
push
lret
int
xchg
cmp
fbld
and
pop
popf
mov
dec
movsb
mov
mov
pop
push
fisubrs
repz
xor
jae
sbb
imull
rcll
repnz
sbb
aas
lods
mov
and
fidivrl
aam
pop
or
arpl
cmpsb
div
cmc
sub
test
loope
or
sbb
iret
fstps
jo
andl
jmp
cld
push
inc
cmp
mov
mov
mov
arpl
stos
vmread
push
nop
push
cld
popa
adc
adcb
pop
bswap
dec
inc
cmpsb
jl
cmc
or
fxch
cmpb
sub
ret
test
lret
pop
or
lods
movsb
pop
sbb
fists
or
mov
push
xor
aaa
ds
add
sub
pop
into
mov
cmp
cmp
aaa
out
es
test
or
and
lret
int3
push
sbb
popl
xor
pop
adc
sbb
and
adc
jb
in
jbe
jge
jle
xchg
std
mov
stos
lods
jmp
mov
fadd
iret
push
clc
out
mov
js
mov
jmp
and
xor
mov
sbb
lret
mov
push
ds
jge
andb
in
scas
and
pusha
push
mov
mov
iret
lds
add
jb
loop
outsb
sahf
and
insb
push
jb
movsl
cmp
mov
sbb
mov
pxor
aaa
push
cmpsl
pop
loope
xor
mov
push
test
push
in
cmp
adc
lock
lahf
add
cltd
xchg
sahf
test
aaa
cmpsl
xor
sar
or
xchg
xchg
xchg
mov
test
cmp
loope
mov
fiadds
dec
mov
mov
testl
xchg
lahf
aam
inc
repnz
clc
pop
sbb
push
pop
test
imul
int3
iret
aaa
xchg
mov
mov
push
popa
jnp
push
jne
sub
push
aam
adc
mov
in
popf
jp
pop
in
inc
loope
jb
test
add
xchg
loope
mov
popa
xlat
out
sbb
bound
xchg
pop
xchg
mov
movsb
sub
fs
mov
push
ret
fistps
enter
xchg
mov
push
mov
and
imul
ljmp
lods
cmpsl
addl
cmp
lods
pop
out
frstor
jl
int
xchg
jp
sti
push
lods
dec
cmp
add
xor
mov
mov
mov
inc
test
xchg
sub
enter
xor
xchg
add
inc
mov
push
cwtl
ja
mov
fnstcw
js
sti
call
daa
dec
mov
repnz
fcompl
or
adc
subb
lret
pop
outsb
lods
or
scas
inc
test
push
pop
push
addl
or
cmp
mov
xchg
insl
push
lret
clc
lcall
sbbb
dec
dec
daa
iret
cmp
jbe
inc
sbb
pop
adc
outsl
push
out
test
out
adc
pop
adc
jne
movsb
cli
push
rcrb
and
push
sub
sbb
mov
subb
imul
push
fimuls
out
fs
adcb
pop
fbstp
popf
dec
leave
notl
push
test
add
pop
out
inc
ds
push
xchg
out
inc
inc
add
pop
data16
les
sarl
lods
in
jle
mov
lods
xor
mov
sub
pop
nop
rcl
imul
aas
pop
inc
rorl
sbb
test
jae
mov
mov
lret
cli
mov
sub
clc
push
dec
jecxz
add
das
mov
jecxz
push
lods
out
or
cli
pop
inc
add
sbb
or
jne
ljmp
dec
iret
into
inc
xchg
xchg
xor
fisttpll
inc
pusha
jl
dec
in
fwait
jl
test
push
lret
aas
pop
push
daa
enter
stos
mov
lds
ret
inc
lahf
enter
and
scas
jbe
rol
fsubrl
in
push
jne
sbb
fistpll
pop
sbb
jo
jge
dec
leave
nop
dec
inc
mov
lcall
je
outsl
idivl
xchg
cmp
xchg
cmpsb
mulb
mov
sahf
or
pusha
sarb
dec
inc
xor
clc
int
fs
test
push
push
and
cs
jbe
stos
ret
not
stos
lds
xor
or
cmpsb
sub
lea
inc
aaa
push
pop
sub
andb
push
inc
mov
sbb
sbb
push
movsb
fidivrs
roll
cmp
je
sbb
push
cmp
lret
daa
jno
mov
pop
pop
mov
lahf
dec
push
rorb
sti
loop
ficoms
or
int
mov
outsl
out
sbb
and
push
and
pop
ret
cli
sub
ret
mov
mov
orl
out
dec
dec
push
aas
adc
sti
or
imul
repnz
xor
fidivs
lea
movl
xor
and
jle
push
xlat
mov
push
push
jae
or
addl
inc
mov
cltd
pop
xor
mov
sub
shrl
mov
je
inc
fstl
mov
inc
fsts
inc
add
push
je
dec
push
pop
stc
mov
aam
sub
icebp
icebp
fbld
mov
jmp
stc
sbb
sahf
data16
out
add
push
or
xchg
imul
mov
jb
pop
outsb
jmp
stc
pop
inc
adc
push
sub
insl
fcmovnu
jge
lcall
leave
adc
call
hlt
and
sbb
ljmp
pushf
pushf
fcoml
adc
call
out
fidivrl
iret
jl
cmp
roll
idivl
aad
out
push
scas
sub
jmp
adc
and
int
shrl
push
loop
ja
or
pusha
shlb
lods
jg
xor
pusha
adc
addb
or
pop
push
mov
test
lods
je
jmp
dec
fnsave
and
mov
mov
das
in
shld
adc
mul
sti
and
ljmp
jne
xchg
lret
les
movsb
adc
repnz
pop
add
inc
pushf
leave
adc
sub
push
push
sahf
jmp
mov
movsl
adc
sarl
sub
and
sub
enter
or
pop
sbb
inc
cli
inc
movsb
test
outsb
nop
adc
dec
mov
test
or
mov
mov
idivb
pop
aaa
enter
adc
pop
xchg
test
or
lahf
mov
push
scas
mov
sbb
and
jecxz
fmull
mov
js
mov
ja
mov
and
jmp
test
xlat
mov
shl
addb
out
sub
dec
loopne
test
or
sub
pop
das
incb
test
lock
aad
mov
sbb
mov
xchg
or
mov
sar
daa
push
addl
lahf
or
jns
adc
cltd
sti
xchg
in
fidivl
xchg
adc
xchg
push
jne
rol
sub
cmc
push
inc
fcomip
repnz
cs
mov
dec
pop
sbb
mov
or
cltd
cli
inc
das
fmulp
test
sbb
push
mov
lods
mov
push
movsb
inc
sub
mov
jl
sub
push
mov
ds
cmp
xorb
aas
inc
adc
fwait
nop
and
in
loopne
push
and
or
mov
int
dec
repnz
aad
lea
jne
fsts
adcb
xor
fisttpl
cltd
lret
pop
popa
dec
mov
cmp
dec
test
popa
mov
ja
add
out
jp
aas
xor
dec
dec
push
pop
cltd
sbb
mov
test
cltd
cmpsb
sbb
je
fnstenv
imul
push
inc
jnp
ret
je
add
aaa
sbb
cmc
repnz
cmpsb
cld
cli
lds
jmp
jge,pt
cmp
add
xor
gs
popf
jae
out
push
ror
loope
js
xchg
js
bound
scas
adc
fucomi
inc
adc
aas
cmc
cli
nop
fwait
je
in
movsl
mov
jecxz
sbb
sub
adc
mov
sub
into
lock
dec
xor
adc
rcl
sub
sbb
into
pop
push
jmp
cmp
sub
test
std
fnstcw
adc
xor
and
lea
inc
nop
int3
inc
inc
and
test
push
daa
lds
xchg
shll
in
mov
into
out
pop
js
sarb
faddl
je
test
adc
mov
xchg
insl
leave
push
add
imul
insb
cli
inc
ret
xorl
aaa
fisubrl
out
int
inc
push
xchg
sahf
fs
fnsave
clc
pop
inc
fdivr
sti
scas
cmp
mov
cmp
add
push
test
sbb
sub
xor
adc
pop
pushf
adc
scas
xor
add
xchg
cmp
mov
add
ja
aas
sub
bound
ss
ret
fisubl
add
scas
push
lds
adc
jg
inc
lods
sahf
jmp
mov
add
cmp
aas
or
fwait
push
aaa
jbe
or
push
jnp
pop
mull
data16
jge
out
push
rclb
int
mov
cmp
sub
dec
inc
adc
stc
mov
rol
push
lcall
rorb
mov
push
jnp
mov
inc
adc
or
lcall
stos
es
push
mov
mov
xchg
dec
push
repnz
das
xor
cs
jge
adc
push
and
sbb
out
sbb
outsb
mov
mov
xor
xchg
je
adc
and
push
mov
mov
xor
in
inc
lods
inc
fidivrl
adc
inc
test
add
fbld
mull
sti
outsb
adc
inc
push
outsb
sub
cmc
lret
aam
add
push
loop
sahf
add
and
les
xor
or
and
enter
pop
add
push
les
or
aam
push
andl
push
xchg
out
jp
cmp
js
js
lret
or
adc
aad
mov
arpl
mov
mov
inc
adc
xchg
dec
cmp
cmpsl
inc
pop
push
je
fwait
inc
or
cmp
adc
enter
scas
in
fisttps
filds
or
xchg
dec
aas
mov
mov
aad
in
rol
aad
sub
test
push
jl
std
push
xchg
and
mov
pop
rcl
mov
subl
pop
lret
inc
pop
pop
jne
das
les
pushf
repz
imul
ret
pop
aad
pop
push
lcall
lds
es
mov
js
push
fcoms
or
mov
or
adc
insb
cs
and
sub
dec
inc
fsubl
pushf
das
insl
add
and
in
outsl
inc
cmpsl
rcr
add
xor
jo
inc
mov
add
mov
lods
test
xchg
push
ficoml
in
mov
pushf
mov
loope
jp
lcall
pop
out
jmp
sub
mov
jo
iret
pop
dec
inc
adc
pop
loope
mov
call
shrb
inc
mov
cmc
fldenv
push
sbb
lds
lea
out
or
jg
xor
call
fsubrl
sub
in
icebp
inc
lcall
xchg
lret
in
push
std
jae
mov
cld
add
arpl
jne
pop
aam
or
loop
idivb
mov
movsb
jb
fs
pusha
lea
fidivrl
lahf
imul
mov
ja
push
dec
pop
out
das
or
in
push
iret
or
lcall
popf
stc
pop
inc
dec
insb
xchg
mov
outsl
mov
jo
lret
push
jg
or
lds
jg
jbe
dec
jge
adc
xor
xor
sbb
jb
jb
sarb
orl
add
fucomi
mov
xchg
dec
popa
lret
xchg
mov
repz
popf
dec
inc
lods
mov
or
pusha
pop
sub
hlt
fwait
mov
jo
adc
cmpsb
or
in
sarl
stc
xchg
inc
and
inc
imul
int3
mov
inc
inc
out
shl
test
xor
dec
xor
and
pop
loop
add
das
sbb
aad
sbb
inc
cmp
xor
mov
test
out
in
test
mov
or
lods
stos
sub
jne
adc
push
cmp
lods
pop
mov
or
and
in
lods
test
outsl
jno
pop
pop
adc
sbb
push
sub
loop
inc
add
jge
lock
pop
sbb
rcr
jmp
test
pop
rcrl
cs
ljmp
shrl
jg
mov
pop
cs
sbb
cmp
subl
sahf
inc
dec
push
sub
lahf
aam
mov
lcall
mov
sub
int3
mov
hlt
lods
add
mov
das
cld
loope
xchg
cs
add
daa
out
fmuls
jne
rcr
imul
rorb
sbb
stc
inc
es
add
and
inc
or
sbb
push
std
or
test
sbb
mov
mov
mov
out
and
mov
mov
xchg
push
test
fists
into
xchg
push
xchg
aas
and
lock
aas
pop
jb
or
push
add
lcall
mov
mov
push
xor
push
les
or
mov
push
mov
mov
es
inc
insl
int3
test
call
test
les
sbb
std
out
out
jns
int
stos
and
sbb
jnp
jb
movsb
inc
inc
cld
push
push
hlt
cmp
sarb
pop
enter
shl
scas
xor
mov
movsl
add
sti
push
in
pop
xchg
mov
pop
sbb
cmpsl
jno
push
dec
sub
scas
mov
ljmp
ffreep
jge
xor
pop
xchg
add
in
push
outsl
xor
aad
gs
mov
sub
shlb
pop
movsb
movsb
in
push
mov
pop
add
add
jl
push
ds
mov
dec
pusha
lds
xchg
ljmp
adc
gs
sub
insb
cld
mov
jne
fs
popf
fisttpll
mov
lock
call
cmpb
out
ret
jne
sbb
sbb
xchg
test
decb
cmp
cmp
cmc
and
mov
nop
pop
out
inc
cli
repnz
les
ficoms
cli
push
fstpl
mov
nop
jmp
add
shll
repnz
jae
cmp
fs
imul
add
cmp
or
ficoms
fistps
in
xchg
repnz
mov
inc
jmp
shl
jge
ljmp
sbb
imul
add
fs
rclb
push
mov
cwtl
mov
pop
mov
enter
add
stc
jg
pop
add
pop
je
shrl
push
insb
decl
outsb
sub
mov
outsl
xchg
xchg
test
jno
add
xchg
or
fsub
dec
shll
cmp
popf
xchg
test
pop
shll
loopne
clc
or
dec
xchg
mov
xchg
into
jae
iret
dec
cltd
mov
cli
jmp
sahf
sti
dec
jns
movsb
mov
mov
inc
mov
mov
cltd
and
pop
xor
cmp
out
and
push
stos
fisttpll
insl
sub
sub
subl
movsl
xchg
or
ja
jecxz
rcrb
cmp
inc
outsl
rclb
or
adc
xchg
cli
pop
sbb
xor
mov
mov
xor
sbb
test
pop
mov
xor
mov
push
fwait
xor
sahf
mov
in
movsb
pop
sub
xchg
mov
sub
shll
and
xchg
loopne
add
fidivrs
mov
lret
push
inc
jnp
jle
popf
lcall
jmp
cmpl
mov
lods
push
in
aas
xor
in
and
sti
out
imul
sahf
mov
lds
ss
div
adc
sub
and
jae
push
mov
and
movsb
jbe
aad
mov
xchg
jae
test
mov
add
adc
xchg
imul
adc
popa
or
fcomi
jl
adc
sahf
scas
std
cmp
cmpl
or
and
dec
movsb
enter
out
ret
in
stos
pop
lret
ja
pushw
cmovs
mov
pusha
push
repnz
or
mov
cmp
sbb
cmp
sub
add
cmp
push
mov
inc
std
xchg
add
subb
cmc
arpl
inc
cmp
jecxz
inc
popa
jg
repnz
adc
inc
dec
mov
pop
roll
fldl
dec
dec
outsb
faddl
or
inc
es
ss
imul
xchg
into
push
loop
cltd
mov
movsb
push
in
mov
inc
in
jo
sub
jmp
std
popf
or
repz
cmp
in
mov
inc
sbb
mov
inc
clc
inc
pop
sub
in
sti
shrl
popf
sub
fildl
jae
add
xchg
mov
lock
into
dec
adc
pop
pop
xchg
lock
lea
out
rcrl
dec
hlt
in
or
test
jb
add
aam
das
in
js
xchg
leave
sbb
out
sbb
push
dec
arpl
or
sub
cld
cmp
adc
fdivrl
mov
icebp
mov
jns
std
xchg
inc
pop
adc
pop
and
cmp
jnp
fisubl
and
xor
mov
jbe
jmp
pop
pop
js
mov
loope
pushf
test
pop
lret
enter
inc
rorb
dec
std
jp
shr
arpl
cmpl
xor
xor
mov
add
xchg
call
int3
andl
fcoms
mov
cld
gs
arpl
loop
lods
scas
mov
loope
mov
and
cmp
jne
xchg
xor
mov
ret
loop
mov
fscale
movsb
cmp
js
jle
dec
sub
jae
mov
or
or
inc
sub
sarb
scas
lods
test
int
pop
dec
jp
sub
mov
and
cmpsl
mov
cmc
stos
fisubs
aam
bound
js
stc
mov
sub
mov
add
inc
pop
ret
xchg
in
pop
or
loop
adc
sub
pop
mov
iret
std
fidivs
cmp
jnp
or
sub
mov
inc
add
inc
test
jb
pop
fisubs
pop
lret
or
out
sbb
jne
ret
pop
xchg
xchg
imul
inc
popa
aad
test
test
lock
jecxz
movsb
lock
jne
cmc
mov
fistl
mov
xor
lea
mov
cmpsb
add
leave
add
add
mov
dec
mov
adc
fwait
mov
dec
lods
loope
xchg
in
add
mov
sbb
push
pop
pop
lods
rcll
int
mov
mov
ret
mov
ret
sub
sub
jb
pop
sbb
xor
sahf
into
xor
aad
pop
aaa
lods
int
int3
mov
adc
dec
std
lcall
fs
pushf
dec
fwait
sbb
cwtl
pop
scas
mov
sbb
outsb
push
sbb
orl
pop
inc
mov
in
pop
sbb
pop
scas
mov
xlat
movsb
dec
test
sarl
jmp
cmp
pushf
or
xchg
call
daa
mov
paddw
sub
add
sub
mov
push
xchg
push
dec
or
jo
pop
pop
pusha
cwtl
stc
js
mov
stos
cmp
aas
jp
lahf
icebp
jnp
add
pop
xchg
and
mov
or
push
xor
aam
and
pop
out
hlt
jg
dec
bnd
dec
notl
pop
mov
cmpsb
mov
cwtl
cld
xchg
push
out
cmp
mov
and
xor
dec
inc
aad
xchg
jge
adcl
outsb
adc
mov
adcb
repnz
or
in
rcl
xchg
cltd
xor
addr16
add
mov
jnp
add
mov
mov
flds
das
adc
sub
pusha
in
xchg
lcall
mov
gs
pop
pop
mov
dec
shr
dec
cwtl
rclb
inc
daa
fadd
out
pop
sub
mov
inc
push
ss
in
rcl
cwtl
shrl
jmp
and
subb
aas
or
sub
leave
fisubrl
pop
fnstenv
or
lds
jns
movsl
sub
hlt
and
loopne
xor
jge
jo
sub
or
xchg
fsubrl
lock
dec
xlat
mov
jnp
outsb
cmpsb
and
or
jb
pop
xchg
scas
xchg
mov
lcall
pop
mov
adc
leave
sub
mov
mov
xchg
adc
pop
pop
cmp
cli
jmp
popa
xlat
pushf
push
lahf
push
cmp
pop
jge
push
popf
daa
push
andb
or
jbe
mov
push
ljmp
nop
nop
ja
add
test
mov
icebp
adc
cmp
push
lcall
sarl
cmp
daa
jg
cld
outsb
addl
or
jns
jb
add
popl
mov
jb
cmp
std
adc
ret
xorl
fucomip
test
es
jmp
addr16
and
bound
cmp
or
inc
mov
bound
icebp
out
adc
cmp
neg
xor
cli
andb
movsl
jne
mov
xchg
lods
loope
mov
ja
jmp
pop
sahf
ret
in
inc
test
cmp
fimull
xor
pop
xchg
xchg
das
add
jo
or
jb
sbbb
xchg
jp
pop
push
inc
insl
pushf
or
addr16
ljmp
test
xlat
mov
xchg
adc
mov
into
stos
mov
mov
in
out
adc
cwtl
dec
enter
push
cmc
lods
jae
xchg
adc
jge
sbb
stos
and
xchg
aas
aaa
sub
dec
bt
aas
adc
cwtl
pop
pop
pop
sbb
mov
loope
jp
mov
cld
shr
mov
out
xchg
jp
cmp
mov
insb
lods
out
outsb
mov
push
mov
es
or
insb
sahf
sub
xor
mov
sub
mov
insl
adc
push
push
mov
adc
dec
xor
jne
mov
xchg
jmp
leave
nop
mov
pop
sbb
add
stos
push
jno
or
ss
shrb
jnp
xchg
push
mov
jb
das
jmp
outsb
idivl
sub
dec
or
mov
orl
pop
xchg
jne
repnz
pop
iret
or
mov
xorb
xchg
popf
lret
jnp
push
push
sub
xor
leave
push
cmp
arpl
ret
xchg
cli
cmpsb
pusha
into
mov
adc
lods
ja
cmp
and
js
push
das
pavgw
fldt
push
or
mov
call
iret
lcall
iret
sbb
xchg
sbbl
xor
push
int
imul
aaa
push
sarl
dec
mov
add
pop
xor
xor
xchg
push
mov
xchg
jle
cmpb
xchg
add
fs
loop
fadd
adc
fs
sbbb
or
xchg
stc
sbb
pusha
add
ljmp
mov
and
inc
mov
mov
pusha
mov
xor
imulb
jo,pt
sbb
scas
xor
add
aas
dec
pop
xchg
aas
mov
fisubs
mov
jnp
fs
cld
push
mov
lds
push
sbbb
jge
addl
imul
mov
aad
ljmp
es
dec
pop
shll
in
cmpsb
dec
pop
mov
out
fucomp
lea
popf
jle
jl
clc
sti
mov
pop
xchg
pushf
inc
out
pusha
inc
repnz
sbb
and
stos
stos
inc
inc
int
daa
mov
sbbb
dec
data16
cwtl
stos
dec
sub
icebp
js
insb
fisttps
jl
fsubrp
fstp
inc
xchg
ret
push
pop
das
mov
popl
std
ror
pop
xor
dec
mov
jg
sub
push
ret
xor
shll
adcb
dec
daa
adc
pop
std
aam
jbe
icebp
and
push
repnz
ret
fbld
add
xor
add
push
ret
pop
mov
fwait
jmp
test
or
xor
or
test
ror
fdivs
hlt
stos
push
xor
jl
and
lcall
mov
jne
or
mov
loopne
lods
in
aam
cmp
call
mov
fs
out
mov
mov
sub
sub
xor
dec
mov
mov
jo
inc
pop
stos
vmovupd
and
pop
jo
pop
mov
xor
xor
pop
jle
fmulp
or
ret
sbb
dec
clc
adc
xchg
jmp
lret
pop
inc
dec
and
push
sahf
xchg
push
test
cmp
push
lds
mov
js
testb
push
inc
and
bnd
dec
mov
cwtl
mov
adc
sbb
fnstcw
stos
into
xchg
mov
dec
hlt
sbb
jge
pop
xchg
or
lret
adc
mov
pushf
imul
sbb
lds
mov
xor
push
xchg
lahf
mov
mov
and
test
cmpsb
test
inc
scas
jns
leave
loop
mov
js
pop
aaa
xor
pop
addr16
sub
and
les
xlat
pop
mov
insl
inc
xlat
jle
cmp
jge
hlt
sub
dec
mov
cmpsb
push
jae
lock
xchg
jbe
sbb
jnp
int
dec
clc
jle
and
jl
cmpsl
or
das
rcrb
pushf
rolb
clc
mov
mulb
scas
fimuls
dec
mov
mov
stos
data16
jmp
dec
fwait
dec
push
int3
cli
add
mov
mov
or
ljmp
scas
mov
icebp
out
cmp
adc
insl
sub
test
int3
aam
cmpsl
sbb
int
adc
cmc
cmpsl
sub
fisubrs
cmp
mov
sub
xor
cmp
clc
cmp
mov
lret
jg
mov
mov
rep
cmpsb
sarl
xor
pop
lahf
dec
pusha
push
lcall
aas
ffreep
push
push
test
add
xor
mov
mov
insl
imul
adc
push
jg
push
xchg
xor
out
mov
mov
out
push
pop
dec
outsl
sbb
xor
sub
push
dec
push
shrb
loope
jle
pop
adcl
stc
clc
xor
test
sub
movsl
mov
insb
das
lahf
push
xchg
dec
cmp
shl
xchg
jecxz
mov
imul
jbe
clc
lock
in
out
xor
jecxz
ret
jbe
xor
jl
cmc
daa
jb
adc
mov
pop
or
shlb
out
pop
not
inc
and
fildll
dec
jnp
rclb
or
mov
das
or
xor
cld
cltd
jmp
pusha
cmp
js
mov
xchg
sete
or
in
and
mov
icebp
and
lcall
sbb
int3
sbb
push
in
daa
in
loop
rorl
paddq
sbb
cld
outsb
ret
dec
aas
xor
movsl
mov
or
cmp
cmpsl
push
adc
xlat
xchg
leave
in
xchg
mov
pop
ja
mov
addr16
ret
ss
es
sbb
arpl
clc
mov
movsb
add
xor
fidivs
arpl
aas
lret
out
xchg
cmp
addr16
pop
xchg
js
dec
aaa
and
call
cmp
xchg
adc
pop
mov
clc
ret
jl
js
jno
push
pop
sbb
or
lds
sbb
leave
pop
orl
xchg
sbb
movsl
repnz
lea
data16
mov
rcr
mov
pop
call
outsb
mov
and
inc
mov
xlat
push
inc
sti
xchg
mov
push
cltd
dec
add
add
fldenv
inc
and
dec
addr16
sub
ss
xchg
xor
push
pop
ret
adc
adc
jno
movsb
jnp
mov
push
push
cmp
fs
pop
inc
js
clc
mov
sub
pop
cmp
dec
je
push
jp
xor
stos
or
sbb
std
cwtl
xor
lret
xchg
js
cmp
mov
adc
leave
pop
sbb
js
sbb
jmp
mov
adc
scas
movl
mov
sub
and
and
clc
lret
adc
xchg
inc
int
bound
and
jmp
mov
pop
out
js
dec
xor
dec
jns
add
inc
inc
xor
sbb
movsl
cmpb
gs
test
pop
push
pushf
pushf
mov
jmp
out
or
jp
mov
mov
pop
mov
scas
pushf
cmp
mov
push
and
jb
stc
test
loopne
jae
pusha
lea
xor
subb
dec
mov
cmpsl
pop
cmpsb
cmp
dec
rclb
stos
dec
lea
dec
inc
shl
push
pop
fucom
and
xchg
cmpb
mov
xor
add
mov
push
sub
test
inc
out
lahf
push
std
cltd
and
cmpl
fcmovnu
test
jle
jecxz
pushf
fcmovnu
mov
mov
mov
jno
and
pop
lret
sub
ljmp
popf
mov
pop
ss
add
ljmp
pushf
mov
mov
dec
sbb
jno
mov
add
pop
loope
mov
xchg
ljmp
push
push
xor
pop
xor
add
add
scas
test
dec
addr16
adc
lods
inc
add
dec
sub
sub
ds
mov
inc
jg
jp
or
mov
mov
lret
pop
cmpl
and
test
out
sub
dec
out
imul
push
mov
add
sbb
inc
push
sub
daa
bound
and
fadd
mov
fistpl
mov
in
pop
fsubr
or
lods
sub
xor
cmp
mov
pushf
loopne
dec
inc
movsb
pop
fstpt
jo
fwait
jge
push
xor
ja
push
fwait
mov
xor
mov
in
ret
imul
or
nop
stos
aam
test
sub
test
add
and
xlat
test
popf
arpl
fistps
cld
movsl
inc
add
xchg
lock
mov
push
pop
inc
pop
mov
mov
clc
into
test
xchg
test
adc
sbb
jmp
loope
push
mov
dec
inc
push
rcrl
add
cmp
insb
movsb
sub
pop
outsb
push
mov
sbb
inc
sub
or
daa
cli
test
punpckhbw
ret
fwait
outsb
fcompl
les
xchg
mov
xchg
push
adc
out
xchg
imul
jb
mov
adc
arpl
or
popa
push
adc
imul
clc
rcl
jne
inc
push
push
adc
cmp
es
cmp
pop
add
push
cltd
sub
aas
mov
mov
inc
sbb
popf
dec
insb
popf
pop
int
imul
sar
lea
or
adc
mov
sbb
ss
andl
lock
faddl
xchg
push
hlt
jmp
pop
in
cmp
lahf
mov
xchg
aam
or
cmp
or
cli
cs
and
shlb
xchg
fnstsw
shll
sbb
lock
jge
and
aas
xor
arpl
cld
pop
push
dec
imull
push
xor
cmp
fcoml
sub
sbb
pop
sbb
lret
sbb
mov
mov
push
or
mov
in
repz
mov
xchg
loop
ret
arpl
mov
push
or
or
cmp
dec
cmp
xchg
aam
mov
sbb
mov
push
xchg
sbb
sub
pop
ja
popa
mov
and
leave
lods
movsl
push
loopne
push
test
xchg
dec
lcall
stos
icebp
sbb
cmpsl
int
out
scas
jns
and
sbb
push
add
fstpt
push
popa
pop
scas
mov
lock
loope
push
add
sbb
sub
test
insb
daa
cmp
inc
into
mov
adc
mov
data16
aas
push
loopne
out
xorb
xchg
js
daa
inc
xor
cmc
sbb
sub
neg
push
ja
loope
std
je
sbb
xchg
lahf
mov
pop
mov
jge
ret
mov
pop
fldl
sbbl
subl
mov
shr
outsl
orb
movsb
sbb
ja
andb
jne
daa
dec
add
fwait
inc
sbb
cmpsb
insb
clc
call
dec
out
pop
mov
sub
mov
clc
jno
dec
dec
xor
ljmp
out
loopne
sbbb
push
push
mov
mov
pop
push
mov
les
or
pop
adcl
mov
subl
xchg
mov
shl
in
inc
cmpsl
jns
outsb
cmpsl
clc
cld
inc
lea
adc
outsb
out
and
and
pusha
push
dec
push
add
cmc
push
ret
jnp
xchg
outsl
mov
adc
xor
ret
stc
fisttps
sbb
sahf
mov
movsb
xor
jb
lret
repz
xor
fistpll
stc
inc
adc
out
sub
inc
jp
inc
ds
jno
cmp
notb
hlt
aam
scas
jp
mov
or
lea
jge
iret
sbbb
cmp
jo
popa
pushf
ret
push
and
or
repnz
icebp
divb
pop
and
mov
inc
cmp
out
cmc
testl
cmpsb
out
xchg
push
stos
mov
es
or
test
test
in
outsl
mov
mov
push
mov
xchg
cmpsb
inc
flds
lahf
cli
push
push
loopne
jne
cmp
cmp
cld
daa
insl
or
in
mov
jo
cs
les
jno
or
jno
or
inc
stc
aam
test
jbe
arpl
sbb
dec
out
pop
divl
es
ret
and
mov
mov
into
cwtl
xchg
iret
push
insb
inc
aam
mov
mov
or
sbb
inc
ljmp
jnp
jl
notl
andb
inc
test
mov
mov
leave
frstor
lods
js
mov
jg
scas
ret
add
repz
lcall
cli
sub
push
jle
dec
test
imul
iret
and
adc
mov
mov
ljmp
pop
test
adc
add
aad
out
push
fmuls
popf
push
push
push
mov
ja
lods
ja
test
or
mov
and
das
out
push
jae
daa
add
xchg
ds
mov
cli
stc
les
sbb
xorb
adc
cmp
enter
fdivrs
jae
in
andb
std
lahf
cmp
fwait
jae
jne
mov
in
push
push
mov
mov
aas
leave
gs
cmc
mov
arpl
jmp
dec
cs
fiadds
fld1
fiaddl
in
imul
and
xchg
push
xor
mov
cld
jae
jno
jnp
aam
or
mov
stos
leave
ljmp
popa
repz
pushf
or
lea
mov
adc
lods
cmp
cmp
xor
pop
sub
dec
popf
adc
sbb
out
ret
lcall
add
cs
sub
xchg
outsl
cmp
adc
in
in
incl
sbb
or
dec
jo
out
pop
sbb
xchg
cs
loopne
adc
sub
out
or
push
sub
mov
popa
repnz
inc
and
loope
mov
push
xor
out
jno
dec
sbb
xor
dec
dec
or
ljmp
jno
aam
sbb
dec
aas
cmc
sti
mov
pop
mov
fadd
or
addl
cwtl
clc
jns
lcall
subl
aaa
adc
lods
mov
pop
arpl
fsubr
stos
test
cmp
out
rcl
jbe
jbe
movsb
jg
push
sahf
cmp
cmp
cmc
es
inc
roll
cmp
loop
push
jmp
or
fsubrl
and
addl
mov
das
addr16
fidivs
std
xchg
mov
notl
adc
lods
mov
and
outsb
sub
dec
pop
es
dec
xor
inc
cmp
out
push
scas
fldl
repz
xchg
mov
cmp
fs
adc
push
call
jo
in
sub
push
incb
movsb
cmp
pop
jns
repz
mov
pop
xchg
dec
insl
jno
stos
add
inc
sbb
mov
scas
push
and
inc
daa
xchg
in
jge
push
aad
pop
outsl
sahf
and
dec
test
mov
push
loopne
in
int3
sbb
int3
push
jg
push
loope
add
sub
test
mov
pushf
add
movsb
push
jae
das
pusha
jge
push
mov
dec
fimull
repz
sbb
into
jno
mov
lods
sbb
divb
xchg
mov
in
std
mov
push
mov
cli
enter
pop
leave
stos
and
xor
fimuls
sbb
ja
in
add
fsubrp
cmp
mov
sbb
sub
mov
mov
mov
and
js
cli
jp
fsubs
sub
xor
addb
cmp
xchg
ror
mov
movsl
cwtl
push
imul
adc
inc
sbbb
add
and
add
mov
xchg
in
sbb
addr16
lea
or
clc
lea
data16
outsb
test
nop
stc
lret
inc
xor
and
out
scas
adcl
push
or
or
pop
jmp
idivb
rorl
xchg
enter
jno
data16
mov
movsl
sbb
mov
push
xor
outsl
inc
fldenv
ds
sub
arpl
cmpl
rcl
inc
jno
inc
mov
rorl
repz
data16
test
mov
rorb
int
repnz
xchg
adc
stos
loopne
fsubrs
icebp
mov
fst
pop
rolb
addb
pop
mov
or
arpl
lods
xlat
xor
or
push
roll
shlb
mov
imul
sti
lret
mov
or
cli
sub
sub
dec
test
adc
fisubrs
rcrb
mov
addr16
cs
mov
movb
sub
xor
cmp
jle
inc
and
inc
pop
outsb
add
test
or
cmpb
adc
in
les
adc
mov
lret
xor
pop
dec
mov
testb
movsl
pop
push
popa
inc
sbb
mov
mov
pop
int
mov
lods
add
push
xor
cltd
test
in
cli
es
repnz
adcl
sub
adc
sti
adc
lret
addr16
je
aaa
sub
lret
jo
xorb
daa
dec
sarb
inc
mov
mov
daa
aad
fcoml
dec
mov
mov
inc
mov
dec
mov
add
pop
pop
cmp
or
sub
hlt
xchg
ja
jb
sahf
std
push
adc
sbb
and
test
ss
stos
push
out
xor
push
pop
sbb
jae
into
rclb
sbb
mov
jae
call
push
xchg
pop
test
push
push
adc
or
and
bound
sbb
stos
inc
add
sti
cmp
and
jbe
fists
push
mov
pop
mov
std
in
cltd
or
xchg
fisttpll
in
adc
xor
or
lret
test
sarb
aaa
sbb
jp
int
dec
fstpl
jecxz
movntps
scas
mov
cmp
rcrb
dec
cs
lock
das
out
aaa
stc
and
movsl
enter
fstpl
sbb
loope
dec
adc
outsb
push
mulb
push
jmp
repnz
cwtl
lods
jecxz
adc
test
push
sub
ljmp
sbb
lret
int3
add
and
or
add
cmp
cwtl
jnp
mov
gs
cmpsl
mov
jp
pop
xchg
xchg
cmp
or
pop
xchg
mov
dec
icebp
add
jbe
dec
add
xlat
dec
dec
sarl
das
ret
and
pusha
movsb
cmc
sub
insl
jns
fisubl
push
dec
pop
lret
jae
mov
inc
icebp
push
movsl
add
inc
xor
adc
lods
pusha
cltd
pop
cs
test
inc
leave
into
xor
outsb
enter
jl
pop
cwtl
push
test
jno
add
lods
dec
negb
ljmp
jl
testb
in
add
push
jp
orl
jae
mov
jnp
sub
mov
cli
or
loopne
adc
push
sbb
mov
jb
in
sbb
lret
pop
les
and
adc
adc
xchg
aam
out
xchg
mov
cmc
lods
outsb
push
pop
jns
or
call
xchg
test
movaps
add
mov
cmpsl
ret
mov
mov
aam
decb
pusha
addb
clc
out
lock
pop
mov
lods
jbe
shlb
add
jae
fs
fcmovnbe
clc
jbe
shr
mov
sbb
mov
jge
pop
and
sub
lock
lcall
hlt
dec
sbb
loop
mov
arpl
sbb
into
sti
idiv
jge
jp
test
into
pop
shrb
je
loopne
sub
sbb
nop
add
xlat
test
sub
jle
cmp
lret
jne
sub
mov
adc
rcrb
dec
or
ja
adc
aam
sub
fmuls
fcoml
pusha
cmpsl
adc
insl
insb
sub
dec
pop
push
cmc
push
push
das
jnp
mov
adc
jnp
xor
mov
push
out
xchg
imul
mov
jnp
pop
and
jmp
aad
mov
test
mov
lods
rclb
mov
sbb
fwait
xchg
arpl
inc
add
or
cmpsl
leave
in
bound
and
push
into
shlb
add
test
pop
aas
and
aaa
jns
stc
add
cltd
jbe
pop
xor
jns
xor
leave
cltd
xchg
pop
mov
inc
js
lock
dec
fldcw
roll
add
and
mov
addb
jne
aaa
imul
std
xchg
inc
fmull
mov
pop
test
inc
std
mov
jmp
pop
mov
icebp
push
jecxz
test
jno
or
mov
jae
jp
inc
and
push
mov
sub
jno
pop
shll
cmp
or
stos
cmc
pop
sub
xor
movsb
aas
push
sub
push
jns
cmp
mov
pushf
out
aam
lahf
push
sub
jbe
fstps
fnclex
arpl
dec
hlt
in
cmpsb
pop
nop
mov
or
xchg
cmpsl
sbb
mov
sub
loopne
dec
mov
outsb
jl
mov
adc
dec
ljmp
xchg
cmp
scas
xchg
mov
xchg
xchg
imul
jge
cltd
in
leave
sbb
push
data16
jns
loope
mov
mov
cltd
mov
cmp
aaa
pop
sahf
pop
lcall
and
lock
inc
loope
jecxz
aam
adc
sub
test
mov
std
fdivrl
xchg
rcr
adc
sbb
cmc
mov
test
fadds
adc
sub
inc
bound
std
les
scas
mov
dec
pop
ret
or
fs
add
push
in
mov
lcall
mov
fisttps
sub
ret
inc
nop
add
pop
mov
das
xorb
sarb
jp
out
js
xor
jo
inc
insb
sbb
imul
in
sbb
ja
imul
std
pop
mov
outsl
loop
out
or
and
pop
movsb
movsb
xchg
xor
shl
bound
cmpps
imul
dec
inc
cmpsb
insl
mov
fistpll
or
adc
jle
sub
pop
dec
es
sahf
test
test
and
xchg
xor
mov
je
aad
sti
mov
xchg
imul
sarl
mov
sub
ficompl
sbb
mov
loop
js
and
je
pushf
cmp
ret
test
add
xor
push
cmpsb
adc
pop
sti
js
sahf
push
lods
dec
push
decb
xor
inc
push
xor
and
xor
clc
arpl
cld
mov
sub
daa
sbb
jle
mov
mov
sbb
push
in
clc
mov
mov
cmpsl
nop
pop
inc
std
repz
fstpt
jb
pop
es
sub
iret
insb
jmp
inc
pop
pop
lock
lcall
clc
inc
mov
sarb
out
adc
xor
mov
and
inc
pop
or
inc
std
push
push
pop
leave
data16
push
mov
push
fmull
sub
jns
jl
jmp
fbstp
stos
mov
push
out
nop
adc
imul
int3
cmp
mov
cmpl
jae
out
adc
movsb
mov
sub
fwait
adc
add
les
gs
dec
insl
inc
loope
out
xlat
sahf
rol
loope
sbb
shll
or
or
jnp
dec
mov
sahf
xor
xor
push
movsb
lret
cmpsl
rorb
les
aam
pop
mov
sub
add
cli
mov
js
sub
mov
and
mov
repz
movsb
andb
xor
and
stc
in
cwtl
jp
icebp
fs
or
and
pop
inc
xchg
ljmp
cmp
mov
mov
loope
cmp
leave
mov
test
mov
pusha
ror
sti
and
xor
dec
jl
and
xchg
aam
add
pusha
and
pop
push
push
addl
pop
fidivrl
pusha
mov
jae
lret
bnd
test
aas
cmp
in
js
rorb
xor
std
notb
mov
fdivrs
leave
adc
sub
incl
mov
call
or
incb
inc
push
subb
and
aaa
jne
xchg
mov
add
push
push
push
rorl
in
mov
xlat
decl
mov
std
ss
shll
out
cmpsw
xor
sahf
jb
push
aaa
sti
stc
aas
lea
inc
out
popa
ret
add
ret
sbb
cmp
mov
cmp
inc
sub
sub
add
inc
and
out
dec
cmc
in
test
inc
jl
enter
insl
mov
or
sbbb
call
out
ret
jo
sub
xorl
cmp
hlt
outsb
pop
pop
adc
ljmp
xchg
js
mov
and
or
mov
jecxz
std
sbb
bound
out
xor
ret
aad
aas
jns
inc
pushf
inc
push
xchg
jg
dec
in
sub
shrb
lahf
xor
in
xchg
int3
mov
dec
leave
push
je
push
jmp
dec
inc
inc
pop
and
xchg
or
lds
dec
push
into
inc
test
push
sti
ljmp
cli
adc
lods
loop
cmp
mov
outsb
xor
or
aaa
jecxz
clc
bound
rolb
sahf
lret
jge
mov
loope
push
sbb
push
mov
mov
inc
lret
push
and
mov
mov
lock
mov
mov
out
sub
in
cmpsl
cli
dec
adc
sbb
xchg
xorl
xor
stos
push
inc
or
pop
xchg
lods
enter
push
or
mov
jmp
ss
xor
sti
push
in
xchg
xchg
jnp
inc
fcoms
or
push
push
mov
adc
mov
xchg
loop
sub
lcall
test
xchg
add
dec
and
outsl
or
dec
cltd
mov
bound
jo
rcrl
inc
pop
in
ret
push
sub
daa
cmp
iret
jb
sbb
or
ret
mov
enter
inc
cmpsb
jmp
leave
cmp
sub
mov
xlat
push
lret
adc
ljmp
add
hlt
mov
das
test
imul
lret
and
sbb
out
xchg
lret
ja
mov
lret
mov
pop
pop
out
clc
jnp
loope
inc
insl
xor
mov
test
dec
fnstcw
pop
fisubrl
sbb
mov
jo
add
sbb
cmp
sbb
add
xchg
mov
sub
sti
fsubl
push
pushf
into
sub
or
lds
out
xor
inc
mov
pop
repz
jb
pop
xchg
mov
push
xor
out
dec
mov
fs
shlb
mov
faddl
sbbl
loopne
mov
rcll
lcall
pop
mov
ja
shlb
inc
sub
jnp
mov
jnp
cltd
mov
sub
sbb
mov
ret
fidivrs
mov
imul
fldt
jle
cmp
ret
notl
jae
push
scas
push
aad
pop
mov
adc
xlat
lea
and
jmp
mov
fstps
inc
cmpsb
and
faddl
lds
add
testb
out
sub
pop
push
sbb
and
cltd
repz
in
into
in
cmpsl
out
insl
insl
pop
sub
cli
and
or
ret
das
mov
mov
in
call
aam
std
or
xchg
and
lcall
stc
in
cmp
inc
test
cltd
fst
sub
sarb
jecxz
or
dec
movb
loope
mov
lret
cwtl
fldpi
cwtl
inc
das
mov
sbb
push
sbb
adc
xor
push
test
pushl
xchg
xlat
xchg
rcrl
std
inc
les
loopne
adc
push
fcom
lahf
inc
lea
mov
pop
ffreep
xchg
xor
mov
pusha
inc
test
mulb
in
cmp
xor
daa
in
push
pop
cmp
mov
xor
and
js
insb
pusha
sub
pop
pusha
xchg
xchg
jmp
fimuls
cld
bound
ss
sti
adc
adc
sahf
shll
pop
cld
testb
loopne
push
rorb
in
ljmp
mov
aam
sbb
fcmove
in
out
test
icebp
inc
mov
in
mov
into
rorl
aad
mov
popl
jmp
stos
lock
std
and
repz
repnz
je
and
fs
or
sarl
addr16
xor
xchg
cmp
sub
stos
mov
pop
or
mov
cmc
mov
lods
iret
fs
pop
leave
or
call
dec
mov
mov
mov
push
mov
pusha
xchg
mov
es
fs
sbb
out
sbb
add
add
popa
cmp
out
jmp
aam
mov
repz
xor
add
xor
leave
adc
xor
add
jle
adc
rol
icebp
test
mov
divb
xchg
and
dec
pop
sbb
imul
negl
std
fcomi
leave
insl
jno
iret
push
rcrl
xlat
and
mov
inc
jl
xchg
lret
stos
addl
daa
testb
push
aas
insb
cmp
loope
push
mov
mov
lcall
xchg
inc
iret
repnz
leave
mov
scas
cltd
push
call
inc
imul
lret
cmpl
cmp
sub
cmp
inc
lahf
leave
dec
dec
pop
pop
jo
adc
dec
imul
or
adc
mov
popa
flds
jp
cmpsb
mov
test
sbb
mov
mov
rcll
adc
sbb
jae
rcrb
add
xchg
out
in
scas
mov
imul
out
or
pop
and
aaa
push
xchg
clc
dec
cwtl
sbb
inc
je
ja
jge
testb
stos
or
divb
sub
scas
inc
sub
int3
fcoms
iret
mov
mov
enter
ljmp
pushf
js
lods
jo
stc
mov
daa
andl
or
adc
sbb
es
xor
adc
pop
imul
sub
pusha
lock
xchg
clc
xchg
dec
addr16
or
add
mov
jmp
or
push
mov
dec
mov
popa
jns
push
fwait
out
aaa
xor
pop
or
das
mov
cmpl
jge
test
dec
js
lock
xchg
arpl
lcall
test
icebp
sbb
pop
push
pop
ret
xchg
mov
xchg
mov
push
nop
loope
outsb
cmp
mov
jge
test
jmp
out
mov
adc
mov
pop
and
daa
dec
mov
inc
mov
icebp
inc
orb
lea
fucomp
add
push
xchg
push
mov
dec
sub
push
xchg
fstp
xor
push
mov
push
mov
int
imul
movsb
mov
jae
adc
xchg
add
mov
cmpsb
pop
hlt
dec
test
shl
sti
push
sub
pop
in
xchg
pop
aam
xchg
mov
mov
mov
mov
out
ljmp
call
mov
div
adc
lea
aaa
pop
jle
or
sub
mov
incb
xor
je
inc
icebp
inc
fcomps
sahf
std
adc
sbb
jmp
dec
shll
xor
and
jge
and
adc
cmp
iret
xlat
pop
mov
inc
dec
or
pop
mov
xlat
push
out
or
push
xchg
fldt
adc
in
push
mov
into
loop
cmp
cmp
dec
mov
dec
int
mov
mov
aaa
sti
xor
sahf
push
std
jns
mov
stos
cmp
mov
xchg
cld
adc
push
dec
imul
rclb
xchg
movsl
enter
push
mov
pop
pushf
jl
je
gs
lret
imulb
cmp
xlat
iret
mov
daa
sub
jbe
cmpsb
sbb
int3
xchg
cli
push
jmp
mov
out
cli
inc
repnz
pop
and
mov
lock
adc
imul
std
movsl
fsubl
add
mulb
jmp
push
ljmp
push
push
jecxz
push
xor
xchg
pop
pop
adc
fidivl
cmp
fsubl
fucomi
and
ss
sbb
and
lret
mov
adc
xchg
mov
shr
lea
cmp
enter
push
pop
pop
movsb
out
mov
lret
je
push
sbb
imul
sarb
xor
lahf
and
js
aad
ljmp
adc
push
xchg
jbe
test
sub
cltd
cld
js
addr16
sub
cmp
in
test
adc
dec
in
ds
push
aas
mov
push
jb
xor
insl
xchg
orb
xor
mulb
xor
jl
adc
adc
push
inc
lret
insb
jmp
out
xchg
or
fmul
lahf
push
shl
inc
stos
cmpsl
in
mov
pop
fisttpll
scas
fwait
push
scas
add
enter
movsb
inc
out
sti
sub
add
lods
je
dec
mov
movsb
dec
out
ret
scas
mov
cmp
add
sbb
dec
popa
add
and
jno
subb
aas
int3
xor
in
scas
push
sub
xchg
jmp
pop
and
leave
mov
pop
shll
cmpsl
daa
shrb
sahf
xchg
or
pop
loopne
mov
cmp
out
idivb
test
inc
push
jl
and
sub
pop
pop
xor
sub
cld
xchg
jp
in
cltd
in
cmp
mov
in
repnz
push
ljmp
cld
pop
jp
push
push
insl
into
and
ja
jbe
test
jb
ret
mov
iret
or
fwait
or
pop
arpl
out
mov
into
and
add
fmull
and
xchg
mov
cmpl
add
ret
push
inc
pop
sbb
call
pop
adc
ljmp
jmp
cmp
cmp
pushf
in
fs
dec
into
xchg
pop
dec
stc
adc
mov
ret
pop
stc
xor
cltd
jle
dec
cmp
cmp
gs
mov
subb
popa
jbe
negl
mov
cmpsl
cmp
outsl
mov
pop
in
jne
jmp
push
sub
mov
mov
sub
mov
lcall
push
lret
push
fldt
jle
pcmpgtd
imul
and
mov
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
addb
add
dec
add
adcb
add
sbb
add
add
add
push
add
add
add
mov
add
mov
add
add
add
or
add
add
pop
addl
sub
add
or
add
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sub
add
push
add
addb
add
or
add
add
add
add
add
add
add
add
push
popl
add
add
or
add
add
nop
popl
add
sub
add
add
pop
add
add
add
add
add
addb
add
add
addb
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
or
add
add
add
add
add
add
addb
add
add
add
add
addb
add
add
add
or
add
rolb
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
or
add
add
add
rolb
add
add
add
add
add
add
addb
add
or
add
add
pop
adc
add
add
add
add
add
push
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
aam
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jae
jne
popa
add
add
jae
imul
add
jo
jae
add
outsl
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
popa
add
imul
outsl
add
imul
add
outsb
add
imul
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pop
add
add
pop
add
pop
add
adc
add
xchg
adc
pop
add
adc
pop
add
adc
add
in
adc
add
cli
adc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
jo
inc
arpl
jo
add
dec
outsl
popa
fs
imul
