and
mov
xor
outsl
shrb
movb
pop
mov
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
sub
mov
mov
pusha
call
add
ss
push
fsubrs
loopne
cwtl
jp
test
cli
aas
jg
loope
dec
pop
movsb
sub
adc
arpl
pop
dec
jno
mov
add
es
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
mov
add
push
pop
xor
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
fs
pop
clc
fisubrl
fs
int
xor
mov
cli
loopne
movsb
fwait
adc
fstpl
mov
jo
mul
mov
js
and
test
stc
sahf
dec
dec
loopne
lahf
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
out
scas
js
pcmpgtd
in
pop
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
iret
loopne
mov
jecxz
out
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
adc
push
inc
lea
data16
mov
repnz
push
lcall
cmp
add
and
insl
es
lcall
xor
xchg
cltd
xor
stos
call
mov
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
mov
pop
test
push
bound
dec
das
dec
gs
xor
shll
fldenv
mov
push
call
mov
sub
push
adc
dec
or
pop
fisubl
cltd
pop
jno
ja
fwait
mov
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
sub
outsb
aas
popf
ja
inc
sbb
mov
fstl
or
lods
ss
jmp
ret
push
pop
clc
sbb
.byte
out
mov
and
add
and
add
and
add
add
jbe
add
and
add
add
cmp
add
scas
and
add
and
add
and
add
and
add
add
xchg
and
add
and
add
and
add
and
add
add
add
add
je
add
or
add
adc
add
and
add
and
add
add
and
add
and
add
add
out
and
add
and
add
add
add
add
test
add
int3
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
and
add
and
add
and
add
add
jbe
add
and
add
add
cmp
add
scas
and
add
and
add
and
add
and
add
add
xchg
and
add
and
add
and
add
and
add
add
add
add
je
add
or
add
adc
add
and
add
and
add
add
and
add
and
add
add
out
and
add
and
add
add
add
add
test
add
int3
and
add
and
add
add
add
add
gs
inc
imul
gs
jo
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
enter
jae
gs
popa
insb
jne
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
push
insb
gs
aam
inc
gs
jb
jbe
push
jns
gs
add
add
fs
imul
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
jae
inc
jbe
outsb
je
add
fs
outsl
outsb
jae
insb
gs
add
dec
add
insb
outsb
inc
add
sti
add
insb
gs
jae
dec
jne
gs
add
inc
outsl
jo
inc
imul
imul
push
add
inc
gs
je
imul
push
add
add
inc
gs
outsl
imul
jbe
jae
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
movsl
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jp
jnp
stos
lods
stos
add
cmpsl
test
mov
mov
mov
ret
lret
leave
lret
int3
into
rcl
in
rcl
shl
iret
rcl
hlt
into
int3
int
mov
out
mov
in
mov
mov
stos
lods
lods
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
not
rcl
cld
xlat
fcom
std
fcom
fcom
fdivr
aam
ror
sar
into
int
aam
rcl
sar
mov
mov
lods
iret
movsb
movsb
movsb
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
iret
iret
aad
aad
fcom
call
xlat
xlat
call
aad
dec
into
into
dec
int
call
aad
dec
int3
int3
mov
mov
mov
std
cmpsl
cmpsb
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
int
call
rcl
call
fcom
call
fcomp
call
dec
into
into
dec
lret
lret
dec
int
inc
mov
mov
mov
mov
test
cmpsb
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
fs
push
sbb
or
sbb
ss
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
sarl
leave
enter
iret
call
aad
call
aam
dec
rcl
dec
leave
leave
inc
mov
ret
mov
mov
ljmp
mov
popf
xchg
xchg
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jle
jge
jo
jo
bound
mov
cmp
inc
inc
mov
jo
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
leave
dec
lret
lret
lret
mov
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
cltd
lcall
aas
aas
ds
prefetchw
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jl
xchg
mov
incb
jl
idivb
jmp
outsl
outsl
out
push
push
ret
jle
jns
jp
gs
inc
inc
cmp
sbb
sbb
adc
or
stos
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
incl
addb
xchg
xchg
xchg
mov
mov
xchg
mov
jp
jns
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
mov
addl
mov
mov
jg
jno
jo
jae
je
jge
jle
addb
pushw
cmp
cmp
and
jg
cmp
mov
test
icebp
lods
lods
stos
sti
stos
lods
lods
lods
stos
stos
test
mov
fwait
xchg
xchg
xchg
incl
jg
jp
js
jnp
jnp
xchg
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
lea
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
pop
pop
push
push
push
or
inc
dec
imul
xchg
leave
lcall
out
cltd
lcall
mov
mov
mov
mov
mov
jmp
lods
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsb
stos
add
pop
adc
scas
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
popf
popf
std
mov
mov
xchg
in
nop
xchg
in
test
push
jne
push
or
inc
or
or
es
dec
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
mov
call
lahf
sahf
jmp
lods
pushl
movsl
scas
mov
xchg
test
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
sahf
cltd
fwait
decl
mov
xchg
nop
call
xchg
xchg
pushf
popf
popf
movsl
movsl
mov
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
je
mov
lahf
orl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
ja
mov
movsl
mov
mov
mov
mov
mov
add
shlb
xchg
lea
ljmp
pushf
decl
call
xchg
xchg
call
cwtl
fwait
lcall
lahf
lahf
sahf
movsb
movsb
mov
stc
cltd
cwtl
lcall
xchg
xchg
les
cwtl
fwait
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
je
cltd
push
test
movsb
dec
jle
stos
inc
jnp
mov
jnp
mov
je
mov
insl
ljmp
adc
lods
or
or
pushl
mov
mov
pushf
movsl
movsl
movsl
and
add
add
pop
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
popf
popf
jmp
pushf
pushf
lcall
xchg
xchg
call
xchg
nop
call
cltd
cld
xchg
cltd
popf
stc
mov
xchg
pushf
cld
pushf
mov
xchg
imul
cwtl
dec
jns
fwait
cmp
lcall
sahf
pop
jmp
adc
test
adc
stos
adc
scas
adc
mov
imul
mov
insb
mov
fwait
scas
mov
lods
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
lcall
movsl
movsb
jmp
mov
cwtl
decl
mov
decl
jbe
cltd
jo
cltd
fs
xchg
dec
jns
xchg
cmp
decl
pop
pusha
decl
or
call
add
lcall
ljmp
sbb
mov
outsl
pushl
outsl
mov
and
mov
pop
jbe
mov
xchg
scas
mov
lods
lods
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
shlb
lcall
movsb
mov
ljmp
stos
test
lcall
mov
mov
decl
imul
mov
popa
decl
or
push
incl
add
mov
push
decl
add
lcall
ljmp
and
mov
ja
mov
sub
mov
sub
jge
xor
inc
inc
mov
enter
sarl
lret
mov
add
add
add
add
add
push
push
adc
test
mov
mov
mov
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
addb
incl
push
incl
add
xchg
add
xchg
add
fwait
add
sahf
add
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
cltd
popf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
call
add
sahf
add
add
cmpsb
add
lods
add
mov
jb
ret
cmp
dec
inc
call
inc
call
dec
nop
call
dec
xchg
call
dec
xchg
fisttpl
fisttpll
fistl
call
test
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
jl
movsl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
xchg
decl
sbb
decl
adc
pop
decl
add
xchg
add
xchg
add
popf
add
mov
add
test
pop
arpl
shlb
call
push
cltd
call
push
fwait
fistl
fcompl
ficoms
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsb
cmpsl
jne
sahf
mov
add
inc
inc
adc
jns
lahf
cltd
sahf
jmp
lahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
callw
sbb
nop
or
call
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
fbld
fbld
jmp
data16
jmp
gs
call
push
jmp
push
mov
int
ret
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jp
xchg
cwtl
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
xor
cltd
xor
xchg
sub
cwtl
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
adc
rolb
fsubrl
jmp
jo
jmp
jo
jmp
jo
ljmp
in
jne
out
jne
out
jbe
in
jb
jmp
mov
mov
cmpsb
cmpsl
lcall
mov
add
add
add
add
imul
mov
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
sahf
cmp
lahf
aaa
jne
mov
sbb
pop
call
add
movsb
add
stos
add
mov
popa
pushl
add
enter
fsts
jmp
js
jmp
jg
in
cmpb
repnz
xacquire
push
cmpb
aam
inc
mov
stos
cmpsl
pushf
sahf
sahf
daa
mov
sahf
lahf
add
add
add
pusha
add
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
ret
mov
mov
sahf
insl
mov
fwait
cmp
movsl
inc
jl
movsl
inc
jge
mov
sbb
xchg
add
popf
add
add
test
popa
ljmp
add
mov
add
shll
cmp
data16
jmp
mov
push
mov
push
xchg
ret
push
xchg
push
xchg
ret
clc
xchg
stc
pop
out
mov
fidivl
clc
stos
lods
stos
mov
pushf
pushf
xor
sahf
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jl
lcall
dec
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
out
xchg
ret
push
lcall
repnz
pushf
leave
push
pushf
enter
lret
sahf
int
sti
lahf
int
sti
cltd
lret
push
xchg
ret
mov
dec
mov
mov
lahf
sahf
sahf
aas
nop
popl
cltd
fwait
cltd
add
add
add
xor
or
cmp
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
mov
inc
inc
mov
ljmp
dec
cmp
push
xchg
scas
push
xchg
mov
pop
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
jbe
filds
out
mov
push
movsb
into
push
movsl
int3
clc
test
cli
test
into
sti
cmpsl
sar
stos
sar
std
stos
iret
test
push
sahf
mov
dec
enter
mov
into
sahf
sahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
xor
or
bound
push
xlat
jae
jo
mov
mov
mov
ret
inc
leave
leave
inc
ret
mov
cmpsl
jmp
push
mov
scas
dec
test
lahf
sbb
lcall
pop
ljmp
add
mov
add
into
add
add
ficoms
jnp
in
pop
cmpsl
push
sahf
lret
sti
lods
sar
sti
scas
aad
cld
mov
cli
scas
sar
mov
mov
std
mov
mov
std
mov
std
mov
push
cmpsb
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsl
jo
xchg
fwait
cwtl
rol
ret
fcom
xlat
jmp
not
rcl
std
lret
dec
lret
lret
dec
lret
leave
inc
mov
ljmp
push
mov
lods
cmp
lcall
add
lods
add
mov
mov
add
iret
add
add
add
ljmp
cli
scas
sar
cld
mov
fcos
std
mov
fdivr
std
mov
cld
mov
fcos
mov
xlat
clc
mov
call
lret
int3
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
mov
pop
out
jmp
test
jecxz
leave
fucom
fcmovu
fdiv
fsqrt
fdivr
into
rcl
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
add
aad
jae
fldl
jbe
in
ja
out
das
xchg
stc
mov
cld
mov
inc
loopne
inc
loopne
inc
fdivrp
inc
fdivrp
dec
loopne
std
fdivrp
dec
loopne
std
leave
dec
cli
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
incl
incb
std
incl
hlt
div
or
in
in
pop
jmp
in
sub
out
in
dec
call
jmp
call
aad
jmp
mov
xchg
test
ja
mov
add
test
add
add
les
imul
fadds
jb
loopne
jbe
ljmp
cli
mov
in
dec
in
dec
out
std
int3
in
std
int
dec
loop
std
into
loopne
dec
jecxz
std
iret
loop
call
in
shl
cld
in
mov
xlat
inc
ret
out
cmpsl
cmpsb
cmpsb
mov
cwtl
xchg
add
add
add
std
incb
std
std
add
stc
testb
repz
repnz
push
in
lock
out
icebp
icebp
cmp
in
in
pop
fsubp
loope
les
xchg
sti
mov
pop
pop
jmp
add
mov
inc
add
movl
jb
fiaddl
jbe
in
jnp
in
adc
cmc
pop
test
shl
shl
std
shl
std
shl
call
in
aad
call
jmp
fucompp
std
fucompp
std
fucomi
shl
push
ret
aam
in
fcos
lret
repz
test
xchg
xchg
xchg
and
cwtl
xchg
add
std
cli
add
std
stc
add
sti
clc
add
div
or
aam
mov
jae
negb
add
test
pop
ljmp
add
ret
dec
add
roll
jb
fildl
jbe
call
sbb
sti
loopne
cld
fsubr
fldl2e
std
fldl2t
fsubr
std
fucomi
fsubr
std
fsubrp
fsubrp
jmp
jmp
cld
shl
push
aam
out
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
leave
sbb
lods
jnp
repnz
and
sahf
add
add
mov
popa
mov
add
int3
add
aam
jno
loopne
jne
call
sub
cld
shl
std
fdivp
fsubr
std
fldl2t
fldpi
call
jmp
cld
aam
cld
iret
loope
cli
iret
loopne
stc
into
fdivrp
test
xlat
out
mov
xlat
xlat
sti
mov
mov
fwait
lcall
lcall
add
xlat
add
enter
rol
scas
mov
lcall
add
mov
arpl
mov
add
roll
outsl
call
add
loope
jns
ljmp
cli
xchg
enter
cld
lret
jecxz
cli
idivl
sar
repz
into
push
mov
into
ljmp
call
ret
sar
ljmp
cmc
fucomip
mov
mov
xchg
add
add
add
int
add
mov
movsl
loopne
xor
jmp
add
mov
data16
mov
add
int
jo
rorl
fistl
jns
loop
cmp
call
scas
int3
call
scas
std
loopne
ret
cld
fbstp
neg
mov
enter
int3
in
leave
rcr
shl
aad
out
loope
in
out
test
out
out
popf
call
lret
lret
stos
lods
adc
cmpsl
cmpsl
test
lahf
lahf
movsl
add
sahf
stos
aam
dec
jg
popf
sbb
cmpsl
sbb
jb
mov
jns
mov
dec
test
ret
push
mov
lret
fs
mov
out
mov
mov
lret
ret
lret
rcl
int
aam
shlb
xlat
rcl
jg
fcmovnu
jb
fnstsw
gs
in
out
out
ljmp
sub
div
and
lock
sbb
fstp
or
mov
int3
add
add
add
mov
inc
mov
xchg
lock
je
ljmp
mov
sarb
stos
mov
les
ret
rol
int3
enter
int
addr16
rcll
rcl
dec
inc
aam
aad
daa
ficompl
fneni(8087
ficoms
fsubp
jecxz
loopne
jecxz
out
ljmp
sti
cmc
add
std
add
std
add
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
rcll
ret
inc
ret
enter
int
daa
int3
ror
and
aad
sbb
aad
adc
rorl
rcr
push
aam
xlat
add
fcmovnu
add
add
jecxz
add
in
jmp
lret
fcom
add
std
incb
mov
mov
add
ret
les
rol
sub
mov
mov
push
rol
or
enter
leave
add
int
add
aam
add
fcom
add
xlat
add
fcom
add
add
xlat
loopne
xlat
aam
add
loop
add
add
in
add
lock
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
shlb
into
iret
jmp
rcl
cmc
rcl
sar
rcl
sar
int3
int
stc
lret
hlt
mov
mov
iret
stos
stos
stos
fwait
xchg
xchg
xchg
dec
aas
aas
and
add
sbb
add
adc
add
push
add
add
jg
jg
aas
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
mov
iret
xlat
aad
call
aad
call
rcl
dec
iret
iret
dec
lret
mov
mov
stos
icebp
xchg
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jne
je
gs
dec
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
int3
int3
call
rcl
call
rcl
dec
lret
mov
inc
sarb
test
popf
lahf
xchg
xchg
cwtl
jmp
jno
xchg
pop
adc
add
add
add
add
add
cmpb
jp
jnp
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
insb
insb
outsb
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
fstpt
mov
ret
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
xchg
lcall
addl
jmp
jp
sarb
jp
jnp
jns
jae
jae
push
push
push
cmp
je
pushf
sahf
popf
mov
scas
lods
repz
scas
scas
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsl
movsl
cmpsb
cltd
je
je
adc
adc
add
add
add
add
outsb
insl
insl
pop
xchg
mov
sahf
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
lcall
mov
call
popf
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsb
mov
addl
add
add
pop
popa
pop
or
scas
mov
cmpsb
lahf
mov
decl
mov
xchg
cwtl
xchg
std
popf
popf
sahf
sti
sahf
mov
cltd
call
push
push
push
jo
push
pop
outsl
insl
outsb
outsb
xchg
subl
nop
mov
lcall
pushf
pushl
outsb
xchg
mov
dec
mov
mov
mov
out
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
movsb
test
call
xchg
call
cltd
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
mov
popl
mov
xchg
push
cld
xchg
pop
cmp
dec
jl
mov
xor
jb
mov
insl
ljmp
sbb
pop
mov
mov
scas
scas
jle
mov
add
add
add
pop
popa
pop
or
mov
in
movsl
test
xchg
xchg
cltd
lcall
mov
mov
decl
addl
cld
cwtl
pop
cmp
dec
jns
nop
cmp
xchg
sub
xchg
sbb
cltd
adc
sahf
push
popa
ljmp
sbb
mov
outsb
pushl
push
jb
mov
pop
xchg
mov
scas
lods
xchg
lahf
sahf
popf
adc
add
add
pop
pop
pop
or
lods
mov
test
lahf
mov
ljmp
test
lcall
pop
jp
mov
push
mov
decl
adc
or
mov
push
call
add
test
pushl
sub
inc
jl,pn
les
jg
enter
leave
xor
dec
pop
xchg
inc
stos
mov
mov
mov
test
test
popa
pop
popa
or
movsl
stos
in
mov
cmpsb
pushl
mov
pushl
mov
decl
push
push
incl
push
push
decl
add
xchg
add
mov
add
mov
insl
inc
ss
lret
inc
mov
rolb
call
inc
call
inc
xchg
fmuls
call
bound
stc
mov
mov
movsl
movsb
movsb
daa
incb
add
add
pusha
pop
popa
or
lahf
mov
ljmp
mov
mov
mov
mov
mov
jge
mov
call
pop
pop
decl
push
call
add
cmpsb
add
lods
add
ja
iret
dec
xchg
fcomps
fistpl
fistps
jmp
pop
mov
jmp
insb
cmpsb
dec
test
cld
mov
mov
movsl
lods
cmpsl
xor
addb
add
add
dec
pop
jl
jnp
pushf
cwtl
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
adc
xchg
add
sahf
add
test
pusha
ljmp
push
addr16
xor
jmp
outsb
test
in
lods
jmp
jo
out
jb
jmp
jp
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsb
outsl
imul
test
fwait
lcall
mov
mov
sar
mov
jmp
cmp
cmp
popf
sub
call
add
movsl
add
lods
add
mov
gs
or
call
inc
xchg
jmp
js
ljmp
push
xchg
push
xchg
fldt
mov
push
lcall
add
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
sarb
sarb
jmp
inc
cmp
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
push
cltd
push
cwtl
stc
cltd
enter
lret
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
pushl
push
mov
lods
dec
cmp
and
add
jmp
add
add
leave
add
fsubs
cmp
jnp
push
mov
iret
clc
test
sar
sti
stos
sar
cld
lods
sar
stc
cmpsb
int
call
rol
stos
stos
stos
jne
popf
sahf
or
add
add
push
dec
dec
aaa
jae
je
test
int
out
into
lret
cmc
leave
int3
lret
sti
enter
enter
mov
bound
jmp
add
mov
gs
add
into
add
fildl
push
xchg
cld
mov
std
mov
fdivr
mov
std
mov
sar
jmp
ret
mov
lods
mov
add
add
add
add
or
rcl
dec
loopne
loope
fsubp
loopne
fcmovnu
fadd
fcmovu
aam
xlat
out
mov
addr16
test
or
scas
add
mov
add
add
jecxz
jnp
repnz
mov
cld
inc
loopne
dec
loope
std
leave
fdivrp
dec
dec
loope
std
out
mov
lret
divb
pushf
sbb
add
add
std
incb
std
std
add
ljmp
in
jmp
xor
loop
jecxz
mov
mov
mov
add
mov
fs
add
iret
add
fldl
jne
jmp
outsb
mov
sti
fdivrp
cld
iret
in
std
shl
std
shl
call
in
std
xlat
out
call
out
cld
aam
push
fcos
fmul
sar
mov
mov
add
incl
std
incb
std
cld
std
pop
aam
aad
mov
pop
xchg
popf
or
pop
pushl
add
rolb
outsl
jmp
add
out
pop
mov
cli
mov
std
shl
fsubr
std
fsubr
fsubr
std
fsubr
cld
fsub
sti
shl
push
jmp
iret
sti
mov
sahf
popf
das
add
add
int
int3
or
bound
ljmp
add
movl
jb
loope
ja
in
xor
cli
lret
loop
stc
lret
fdivrp
test
repz
lock
aam
in
vpsubw
aam
jmp
shl
jecxz
fsubrp
enter
test
incl
aad
push
mov
je
or
insl
inc
sbb
lret
and
aad
xchg
loopne
pushf
clc
in
mov
out
in
lret
mov
lret
ror
fmulp
iret
mov
in
fistpl
in
jmp
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
nop
fidivrl
andb
int3
mov
les
aam
int3
insl
ror
iret
pop
rcl
iret
dec
fnstcw
fsubp
fisubrs
jecxz
fsubl
jecxz
icebp
adc
in
in
or
incb
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrl
enter
rclb
mov
rcl
or
loopne
or
into
int
stos
lods
stos
add
std
add
std
incb
fwait
lcall
or
int
int
stos
stos
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
enter
enter
rol
mov
scas
scas
insb
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
aad
rcl
sar
iret
into
into
std
stc
mov
cmpsl
test
jle
jg
sbb
sbb
add
add
add
add
add
add
add
add
jno
jae
push
dec
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aam
sar
into
into
iret
inc
mov
ljmp
lahf
sahf
sti
mov
das
push
add
add
add
add
je
je
xchg
aad
jo
ret
popa
mov
push
outsb
jb
pusha
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
cltd
lds
jae
es
add
add
add
jb
je
fwait
xchg
fwait
mov
test
mov
mov
test
test
imul
mov
into
mov
lahf
mov
decb
mov
fwait
pushf
pushf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsl
cmpsl
cmpsl
test
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
lcall
mov
push
push
imul
jge
lea
notl
mov
mov
lcall
jb
mov
lods
lods
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
je
out
xchg
fs
push
jnp
fwait
inc
jne
cmpsb
aaa
jne
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
int3
add
xchg
pop
lods
movsl
lods
test
popf
pushf
popf
jmp
movsb
call
push
jbe
popl
decb
sbb
pop
call
or
scas
sbb
mov
and
inc
daa
jnp
ret
aas
xchg
mov
mov
subl
je
push
mov
movsl
cmpsl
cld
test
scas
scas
ljmp
xchg
decl
or
xchg
decl
pop
jmp
adc
shlb
dec
inc
mov
aad
call
dec
xchg
dec
lcall
mov
add
add
imul
movsb
mov
scas
pushl
mov
ljmp
aaa
jo
nop
push
decl
pop
push
call
add
lods
add
mov
push
xchg
fistpl
loope
mov
jmp
movsl
call
lcall
cmpsb
cmpsb
cmpsb
pop
add
add
bound
adc
pushf
lcall
mov
mov
scas
lcall
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
jl
out
jge
push
jge
fstps
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
mov
bound
lcall
add
add
mov
gs
pop
outsb
fisttpl
in
lea
push
xchg
push
xchg
leave
clc
xchg
enter
inc
mov
movsl
sub
aas
aas
aas
adc
push
xchg
xchg
cld
rol
inc
mov
xchg
ljmp
pop
imul
mov
gs
add
aad
ja
ljmp
clc
stos
iret
sti
lods
sar
cld
scas
sar
lods
iret
ljmp
fldenv
incl
xor
jo
inc
mov
mov
aad
aad
aam
fnop
rcl
out
lret
enter
mov
jmp
arpl
les
imul
call
pop
cld
mov
cld
rcr
cld
rcr
std
rcr
lock
ret
test
dec
addl
stos
add
in
in
or
call
in
outsb
fcomp
mov
add
mov
add
fldl
ja
out
cmp
std
int
std
iret
in
shl
std
shl
call
in
cmc
aam
into
in
lods
lods
scas
popa
addl
add
incb
incl
lret
int
sub
lahf
sbb
stos
add
mov
add
loop
js
cmc
push
cmpsl
inc
loopne
std
aad
cld
aam
cld
shl
std
aad
sti
shl
push
leave
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
les
mov
add
mov
or
ficomps
cmp
insl
stos
cld
out
mov
shl
ljmp
jmp
out
rcl
jmp
fcmovnu
scas
push
fwait
fwait
fwait
add
sarl
xchg
and
push
mov
shlb
int3
ja
mov
xlat
mov
lret
adc
into
outsl
fxch
iret
pop
dec
in
loope
out
out
out
out
out
sbb
sarb
cmp
mov
scas
push
mov
mov
cs
mov
int3
sbb
bswap
int
or
aad
std
std
add
incb
lods
std
incb
mov
std
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
int
and
mov
loopne
add
push
clc
popf
jmp
ja
jl
imul
flds
dec
mov
mov
fwait
data16
in
jecxz
addr16
arpl
subb
xchg
mov
lret
or
jge
mov
imul
jge
rolb
cmp
lret
imul
jle
cmovs
bound
jmp
and
xchg
mov
add
ret
xlat
push
jecxz
push
add
adc
cmpb
cli
adc
xchg
adc
mov
test
mov
cmp
out
add
ja
clc
push
addr16
nop
loop
dec
pop
in
xor
or
imul
stc
pop
sub
ss
and
test
pop
cmp
push
add
jo
mov
ret
adc
inc
loopne
or
jno
mov
push
xor
les
into
arpl
and
fstpt
cmp
mov
mov
das
gs
jg
loopne
inc
lock
daa
popl
pop
ret
ds
loop
daa
pop
cld
cmp
dec
or
xchg
and
out
icebp
clc
mov
roll
lds
bound
push
pop
stos
rolb
cmpsb
aam
xchg
mov
ljmp
dec
repz
outsl
insl
cltd
roll
mov
into
fs
pop
idivb
test
aaa
inc
adc
flds
cmp
dec
cmp
in
pushf
scas
sbb
scas
push
inc
and
jns
mov
mov
popf
sbb
push
iret
loopne
xchg
mov
hlt
stos
inc
lds
pop
rorb
sub
xchg
pop
call
adc
aaa
xchg
inc
or
push
cmp
mov
adc
movsb
addr16
ds
jmp
add
imul
push
dec
cmp
cmp
movsb
add
fisubs
lcall
rcll
sbb
and
xor
and
add
stc
or
adc
push
xor
repz
pop
shrl
enter
rcl
inc
shll
stos
xchg
or
insl
mov
dec
outsb
inc
mov
sbb
sbb
cmp
ja
arpl
les
and
sbb
inc
or
inc
jae
push
jl
fcompl
scas
xor
add
scas
test
int
sub
inc
or
fs
or
ljmp
pop
fdivr
ret
pusha
jae
mov
lds
dec
xor
mov
cmpl
out
cs
cli
fs
out
jns
imul
movsl
int3
jnp
or
push
pop
push
subb
je
ss
or
fildll
sbb
movsb
cmpsl
dec
test
out
mov
js
daa
fs
pop
imul
test
orl
fwait
cmp
cmp
ret
or
lock
cltd
in
js
push
cli
inc
insb
nop
cmp
xchg
in
pop
loop
mov
orb
and
mov
xchg
cmc
mov
ds
dec
adc
inc
lret
xchg
pusha
test
xchg
sub
hlt
sub
ret
out
inc
lret
rol
clc
pop
sahf
xchg
sub
add
ret
pop
push
decb
fidivs
and
pop
shll
jbe
inc
mov
xchg
sub
cld
rclb
outsl
js
mov
clc
loopne
int
cmp
and
inc
stc
hlt
push
xchg
ds
lds
xchg
adc
pop
inc
sub
loope
fcoms
add
pop
jns
pop
insb
cmp
das
pop
repz
jbe
dec
loopne
xchg
out
jne
sbb
xor
push
enter
test
test
std
lock
scas
mov
shr
adc
mov
dec
sub
cltd
push
clc
pop
sar
push
les
aas
inc
push
mov
testb
ds
enter
call
cmpsl
mov
fs
sti
push
inc
in
pop
xchg
sbb
dec
jl
xchg
inc
xchg
pop
mov
mov
jmp
in
pop
pusha
dec
loope
cltd
outsb
stc
popa
mov
faddl
sbb
inc
adc
pop
dec
fcoml
pop
lods
pop
imul
mov
bound
or
cmpb
insl
popf
enter
stos
js
in
pop
ret
mov
jecxz
aam
mov
fcomi
daa
stc
insl
jge
iret
add
dec
js
or
mov
popa
xchg
adc
mov
jp
mov
sub
fistl
pushf
ret
mul
out
xchg
add
jae
mov
scas
dec
dec
mov
inc
and
jle
jl
dec
int3
cmpsl
adc
and
xchg
das
pop
mov
outsb
ds
addr16
ret
sbb
rcl
inc
push
pushf
jne
pop
repnz
pop
stos
leave
push
andl
out
inc
repz
loop
xor
cmp
bound
lds
cli
bound
mov
adcb
insl
in
mov
xchg
repnz
addb
jnp
cmp
aam
shll
inc
adc
mov
loop
mov
test
add
mov
ret
ljmp
push
ds
in
andb
mov
jno
inc
loope
or
je
mov
inc
push
xchg
sbb
and
xchg
mov
inc
xchg
das
cmpsb
adc
mov
xchg
jg
shll
vcmpps
add
repz
dec
xchg
jl
cmpsl
int3
lret
outsl
popa
and
pop
arpl
rcl
rcrb
push
rol
ret
pop
stc
push
fnsave
jecxz
dec
popa
sti
xchg
xchg
insl
add
in
pop
mov
push
cmp
aaa
adc
aad
pop
push
in
fsubs
repz
stc
sbb
out
aaa
into
jl
xor
cmp
push
call
inc
lods
outsl
push
fisubs
and
xor
stos
inc
test
lret
bound
jmp
ja
xchg
add
xchg
mov
and
fbstp
cmp
xor
pop
lock
adc
xchg
sub
jns
das
stos
lock
and
mov
incl
push
adc
sbb
mov
out
les
out
and
sub
jno
data16
scas
sbb
loopne
aaa
into
lods
add
shlb
int
in
push
pop
lock
je
adc
gs
lea
iret
je
movsb
cmp
xchg
push
in
xor
pop
gs
cs
out
cmp
mov
sti
xchg
shlb
xchg
loope
mov
mov
data16
xlat
outsb
inc
popf
in
test
popa
cmc
or
lock
out
sub
jae
mov
cmp
out
out
cld
sbb
test
insb
add
cmp
loopne
push
adc
pop
jne
jl
ljmp
push
push
xorb
movsb
mov
or
cmp
push
xor
mov
ror
dec
pmaddwd
mov
pop
fnstsw
clc
bound
mov
rcrl
add
mov
xor
insb
fidivl
add
icebp
push
xlat
outsb
mov
pop
scas
inc
test
xor
stos
sub
dec
xor
jg
jb
cmp
nop
daa
mov
insl
add
mov
inc
loop
mov
ja
int
xor
push
jmp
mov
pop
sbb
ds
jo
daa
mov
ret
dec
inc
fdivrl
and
shlb
aas
repz
mov
fstpt
or
cs
das
pusha
in
fsubrs
xorb
aad
and
repz
sub
fcomp
jnp
arpl
int
jg
push
mov
and
pushf
push
jno
inc
mov
int3
fs
out
addl
cld
push
arpl
mov
mov
ret
repnz
les
pop
insl
push
mov
jb
mov
and
mov
jb
pop
lods
inc
ss
xchg
pop
push
leave
popa
xchg
jmp
lret
mov
or
or
mov
pop
pushf
inc
fidivrl
fisttpl
enter
sub
lcall
cs
inc
cmp
pop
insl
xchg
push
ret
mov
adc
imul
jp
popf
imul
and
lahf
adc
push
sbb
sub
cmp
jne
cmpsb
push
cmp
inc
movsl
aam
push
xchg
xabort
mov
cmp
cmp
fnstcw
in
test
movsb
jle
neg
sub
ret
sbb
mov
leave
jne
lods
ss
rcr
jne
pusha
ret
xlat
and
xor
rorb
sub
sar
sbb
add
imul
stc
mov
int3
outsl
cmc
adc
enter
jl
mov
popa
insb
or
and
push
xchg
lahf
ss
inc
or
cwtl
push
stos
inc
inc
repz
sub
out
add
insl
add
nop
inc
fcmovb
xchg
mov
movsl
and
adc
stos
jge
jg
bound
mov
xchg
push
out
dec
cmp
mov
mov
fwait
xchg
sbb
jl
xchg
jp
sub
jle
aam
mov
movsb
stc
sub
adc
or
jge
inc
fnstenv
mov
out
cmp
and
cmpb
in
mov
or
into
pop
mov
mov
das
notb
andb
ljmp
mov
inc
out
sub
call
aam
push
out
xchg
mov
cmpsb
mov
mov
mov
cli
add
lods
andl
ja
xor
lret
lods
inc
std
inc
ja
js
enter
xchg
sub
jno
ja
or
jl
ljmp
je
cwtl
data16
jg
xchg
mov
inc
incb
jb
int3
mov
xorl
add
push
scas
ja
xchg
sub
cwtl
xor
and
dec
xor
jg
test
mov
decl
pushl
xchg
mov
shll
sbb
mov
rcrl
adc
mov
mov
repnz
roll
das
sbb
int3
jg
sbb
add
es
loop
mov
mov
fwait
sbb
or
lods
jmp
cs
xlat
clc
dec
ja
pop
sbb
shrb
into
and
js
outsb
add
sbb
jbe,pt
test
cmp
out
xchg
arpl
jae
pop
imul
arpl
sti
xchg
sti
test
push
mov
lock
xchg
xchg
or
js
xchg
jns
lahf
outsl
ret
jmp
pminsw
xor
push
or
cs
daa
insl
add
mov
sub
stos
mov
sbb
stos
sub
sbb
daa
mov
andb
jp
sbbl
fwait
sbb
test
lret
frstor
movsb
inc
test
out
repnz
cmpsl
test
fnstenv
movsl
sbbb
adc
sahf
ror
out
mov
es
lret
sub
xor
inc
dec
fidivl
arpl
dec
ror
arpl
outsl
fsubrs
dec
xchg
cs
ret
adc
in
repz
mov
loope
push
mov
jbe
lahf
repnz
sub
mov
into
arpl
nop
inc
ret
out
fcoms
inc
fdivp
xor
pop
aam
and
cmp
push
into
push
add
push
bnd
stos
outsl
push
xor
fisttpll
sbb
shlb
out
out
repnz
jno
mov
add
aad
imul
ret
adc
dec
mov
shrb
mov
clc
dec
fadd
aas
in
dec
aas
lock
out
xlat
mov
jge
adc
out
jo
cmc
mov
daa
sahf
xor
pushf
or
daa
out
into
popf
xor
adc
xorl
ja
xchg
jp
enter
xlat
or
jl
scas
inc
imul
lcall
out
jae
mov
cmp
ss
imul
jb
jns
fildll
or
lret
popa
sbb
push
and
dec
bound
cmpsb
cmp
push
je
js
lahf
inc
add
xor
xor
xor
sub
sub
or
lods
pop
xchg
cmp
mov
adc
and
outsb
cltd
into
add
and
dec
loop
push
xchg
sub
mov
lret
xor
mov
fldt
les
push
cmp
fidivs
pop
movsb
cmp
lods
repz
stc
lea
push
mov
inc
xchg
gs
push
xchg
pop
mov
push
imul
pop
sarl
xlat
outsb
push
insb
sbb
dec
push
les
inc
pop
add
and
dec
mov
and
test
cwtl
dec
out
xchg
xchg
cs
cwtl
adc
push
inc
mulb
pusha
lea
pusha
push
sub
jae
jb
shll
cltd
push
push
inc
sbb
cmpsb
pop
imul
loopne
aam
adc
ret
pop
mov
les
divl
popf
xor
sbb
dec
in
mov
loopne
sub
lods
mov
mov
fstps
cmp
xchg
in
insl
mov
fbstp
fsts
and
fsubrs
push
testb
loope
lds
imul
sub
aad
mov
faddp
pop
ret
aaa
jae
mov
or
cmc
mov
mov
xchg
sbbl
adc
sbb
add
cmp
mov
mov
rclb
call
sub
mov
repz
inc
jle
xor
push
jge
shrb
das
ljmp
rcr
xchg
pushf
adcl
inc
fistl
cmp
mov
cmp
jmp
mov
push
mov
loope
sbb
xchg
jnp
add
test
mov
pop
in
test
adc
inc
xorb
and
inc
fstpl
sub
jb
popa
push
out
xchg
les
inc
repnz
lahf
out
or
add
lret
mov
je
mov
jmp
pop
mov
jg
shrl
ret
inc
add
sub
pop
test
push
sbb
inc
fsubrp
mov
jbe
adc
ss
imul
pop
cs
mov
orb
inc
je
loop
jmp
jae
jle
jns
jno
cmp
sub
and
mov
inc
fmull
iret
dec
imul
sbb
sbbl
out
pop
sahf
jnp
jns
add
cmp
andl
mov
or
lret
fsubs
loop
enter
jmp
mov
add
stos
inc
jp
xchg
sub
pushf
mov
into
daa
scas
inc
sub
dec
mov
push
dec
test
pop
dec
icebp
mov
shrb
dec
dec
icebp
cli
xchg
and
imul
jp
popa
pop
mov
jo
add
and
jae
roll
and
ljmp
dec
imul
dec
scas
inc
jno
add
and
inc
mov
in
pop
sub
lds
in
imul
mov
dec
adc
shlb
xor
xchg
pop
cltd
rcrl
hlt
mov
mov
ret
push
xchg
mov
rcrl
insb
add
jns
pop
dec
cmc
repnz
outsl
mov
lds
fisttpl
mov
dec
add
cmpsl
ds
ret
or
xor
pusha
imull
push
mov
push
dec
pop
sahf
pop
jne
inc
inc
jg
into
dec
arpl
in
dec
mov
inc
or
or
jp
pop
repnz
out
test
pusha
adc
imul
and
cmpsl
dec
or
stc
andl
mov
dec
mov
adc
pop
mov
pop
scas
jle
data16
dec
lahf
and
lahf
add
xchg
rclb
mov
shl
repz
mov
ret
xor
hlt
or
int3
xchg
mov
das
in
sub
je
jns
add
int3
lahf
decb
mov
mov
pop
mov
fsub
imul
pop
jp
jo
pop
add
push
or
xchg
dec
lret
sbb
orl
cmp
ja
adc
rcll
jl
icebp
faddp
pop
je
pop
lds
dec
inc
shrl
push
int
cmp
mov
repnz
and
mov
sbb
scas
pop
push
fcompl
sbb
add
icebp
std
xor
or
add
push
rorb
and
xchg
push
int
push
mov
mov
and
mov
fdivrs
lock
out
iret
or
icebp
inc
ds
mov
or
jl
fidivrs
cmp
insb
dec
ret
mov
fnstenv
test
and
or
xor
popa
xchg
mov
adc
jb
fldln2
out
adc
rcrl
push
xlat
add
xchg
xchg
enter
scas
and
loopne
pop
lahf
popa
fwait
sbb
xlat
sahf
add
fldenv
les
xchg
xor
nop
loope
dec
mov
jge
sti
in
sbb
pusha
enter
dec
outsb
dec
out
imul
sbb
xchg
lods
cmp
sub
cmc
cltd
cmp
mov
pushf
fs
or
adc
sub
test
out
cmp
roll
adc
popa
outsl
add
lock
or
stos
test
add
fnstsw
clc
mov
decb
mov
test
call
gs
out
cwtl
mov
sub
in
xchg
mov
fdivl
sahf
pop
xor
jl
or
mov
les
test
sub
add
loop
sbb
out
xchg
scas
stc
xor
shll
shr
inc
fdivl
scas
xor
mov
sub
js
jge
stc
nop
dec
out
out
nop
xor
shlb
sbb
jmp
outsb
shr
inc
enter
loopne
in
cmp
push
adc
xor
aaa
pusha
imull
orb
dec
jecxz
scas
lret
outsl
xchg
sub
cmp
sub
push
sti
mov
sbb
cli
addr16
inc
add
mov
pushf
jge
fsubr
aas
sbb
push
jo
mov
jecxz
and
mov
lret
dec
cltd
cld
or
mov
sahf
xor
mov
xor
mov
aas
jg
jno
cmp
add
xor
imul
out
outsl
nop
or
xchg
out
push
dec
dec
loope
imull
sbb
out
dec
xchg
ficoms
hlt
cmpsb
cmp
mov
cli
sub
cmc
sbbl
jp
and
lret
xchg
mov
lods
jge
jnp
add
jne
push
xchg
cmpsb
out
jp
imul
xchg
mov
dec
xchg
lods
pop
out
idivl
mov
dec
insb
xor
loope
mul
pop
js
daa
or
nop
mov
ja
repnz
lret
mov
arpl
push
out
icebp
adc
push
cmp
sub
std
orl
xchg
or
xchg
sbb
xchg
mov
mov
jl
dec
xor
popa
ja
xchg
pop
jbe
call
cmp
push
popf
or
fmuls
js
push
ds
mov
dec
insl
ja
lahf
and
and
push
cmp
jmp
jle
or
and
inc
adc
daa
data16
daa
mov
push
js
sarb
cmpsb
inc
imul
fnsave
neg
sub
popf
in
adc
xchg
push
popa
das
jmp
data16
add
mov
mov
sbb
dec
out
mov
jmp
mov
adc
mov
or
dec
in
mov
dec
inc
scas
lret
in
push
add
push
cld
xchg
push
sub
jne
lods
pop
dec
xchg
jne
sub
andb
sbb
pop
lret
repz
push
std
and
fnsave
insb
pop
out
addr16
insl
outsb
dec
shrl
mov
sbb
stos
out
sti
insl
sub
daa
add
mov
sbb
les
jb
inc
in
gs
xlat
inc
sub
sub
rorb
mov
pop
jb
push
jmp
sarl
aas
xchg
fcomi
ljmp
movl
cmp
es
mov
ds
jo
fucompp
cli
cmp
aaa
dec
out
popf
test
adc
mov
daa
lods
es
pop
dec
sub
cmc
adc
rolb
out
out
cwtl
adc
hlt
out
iret
mov
lret
inc
fadds
pop
jbe
xor
dec
loopne
daa
push
out
jl
repz
pop
sar
sub
lods
mov
mov
je
dec
mov
mov
pop
push
add
lahf
shl
js
adc
lret
fwait
out
test
inc
test
stos
addr16
nop
push
movsb
out
and
popf
xor
cmp
iret
add
inc
ljmp
mov
arpl
pop
push
inc
pushf
jg
sbb
es
pop
test
jb
jns
inc
ljmp
adc
mov
scas
insb
jg
scas
jb
adc
jg
and
adc
fiadds
lods
scas
mov
dec
mov
push
sbb
jmp
add
scas
fnstenv
add
push
sbb
adc
cli
shl
jp
sbb
adc
dec
in
cmc
xor
out
das
pop
rol
fidivs
repnz
jmp
fwait
test
iret
push
popf
mov
test
enter
xchg
loopne
movsl
adc
cmp
and
push
inc
fidivrs
xchg
clc
je
out
xchg
add
scas
xchg
sahf
sahf
outsl
mov
dec
add
fcomps
cmc
xchg
out
pushf
cwtl
jl
test
sub
fsubp
xor
popf
pop
push
scas
xchg
mov
shll
insb
test
mov
scas
xchg
in
adc
xchg
incb
in
rcrb
out
push
cmp
xor
hlt
inc
je
fneni(8087
mov
push
scas
push
mov
jns
mov
clc
fistpl
push
and
xchg
arpl
fnstcw
dec
ror
pop
int
clc
pop
mov
fsubl
sbb
dec
adc
cwtl
and
mov
xchg
ret
sbb
cmp
incl
lcall
jnp
mov
out
dec
scas
inc
cmpsl
mov
cmp
inc
clc
pop
xor
pop
or
repz
jg
push
mov
xor
aas
xor
leave
and
push
ljmp
cmp
jp
pop
push
fwait
xor
fdivrl
mov
and
add
mov
aas
jl
into
push
int3
enter
push
std
mov
cs
xor
mov
shll
add
cmc
jb
cmp
or
imul
mov
cmp
imul
cmc
inc
mov
aas
or
test
sbb
cmp
cmp
xchg
dec
lret
daa
mov
pushf
mov
jp
pop
push
lret
ljmp
gs
jae
jp
or
or
ja
push
enter
mov
sbb
xor
rol
cmp
jge
frstor
sahf
sub
mov
ret
out
out
nop
or
sti
push
xchg
xchg
scas
mov
ja
mov
jl
fisubrl
mov
jl
xor
into
popf
cmp
mov
int
in
adc
dec
test
jge
push
loopne
pop
xor
inc
jge
pop
mov
out
or
xlat
bound
lock
push
pop
inc
sbb
imul
push
xchg
add
adc
hlt
and
popf
pop
adc
leave
inc
je
rorb
jnp
cmc
mov
inc
cmp
test
cmp
cltd
xor
in
xchg
cmpsl
cltd
cltd
lret
rorl
add
jecxz
daa
cmp
mov
xor
mov
xor
loop
popa
push
cmpb
std
cmpsl
ret
ret
pop
aas
pop
pusha
jecxz
or
push
aas
imul
jae
push
loope
ret
sbb
lods
inc
cmpsb
xchg
sub
and
int3
cld
inc
test
aaa
jmp
mov
mov
push
xor
inc
xorl
xchg
push
inc
mov
fdivrs
push
shlb
mov
std
mov
arpl
add
add
dec
inc
mov
fs
push
jbe
test
and
arpl
jg
pop
xchg
aas
call
mov
in
rcrb
mov
adc
inc
repnz
add
xor
insl
dec
out
insb
jbe
mov
add
inc
pop
adc
xchg
inc
jge
push
lds
xchg
jge
pop
dec
adc
mov
data16
sti
push
mov
test
test
sub
xor
sar
arpl
push
in
andb
dec
mov
out
and
and
mov
pop
add
or
scas
jmp
roll
shl
add
in
ds
mov
mov
int
push
clc
push
pop
outsb
daa
mov
push
push
or
mov
imul
jae
aas
inc
xor
mov
mov
jno
leave
arpl
add
fstpl
fimuls
stos
pop
sbb
bound
mov
fsubrl
sbb
lods
xchg
lea
xor
cmpsb
fnstenv
testb
nop
arpl
ds
and
sub
mov
adc
inc
dec
adc
mov
cmc
or
aas
mov
dec
jmp
mov
inc
out
inc
loope
lods
and
decl
lret
dec
out
xchg
pop
sahf
enter
cwtl
jecxz
cmpsl
adc
xchg
add
dec
in
mov
xchg
stos
and
lock
or
and
mov
cmp
mov
inc
jecxz
daa
mov
aaa
mov
fnstenv
divb
jl
adc
inc
shrl
mov
mov
int
or
inc
pop
loop
push
orb
lcall
sub
imul
xchg
add
mov
notl
fiadds
push
sbb
push
scas
jns
std
xchg
sbb
sbb
jg
in
inc
push
or
pop
sar
jnp
adc
movsb
addr16
pusha
loope
xchg
add
jb
mov
dec
jle
xor
mov
stos
dec
je
repz
out
inc
jmp
pop
ja
jbe
loopne
inc
inc
inc
xor
stos
adc
aam
cmp
mov
mov
sahf
xchg
mov
je
adc
cmp
jbe
sbb
cmp
push
or
sbb
dec
mov
cmp
mov
adc
mov
dec
jmp
jl
and
sub
out
lahf
adc
imul
in
repnz
jo
and
imul
sbb
iret
cltd
inc
pop
inc
stos
aaa
mov
in
bound
add
repz
shll
mov
jp
inc
dec
out
xlat
add
into
pop
cmp
dec
loopne
fst
xor
cs
fstl
lods
lret
sbb
fucom
andb
bound
test
or
filds
lds
imul
ret
pop
fldcw
cmp
cmpsb
xlat
pop
cli
pop
sbb
add
sti
les
jbe
xor
nop
cmp
fisubrs
push
and
out
mov
cmpsb
xchg
lods
faddl
mov
add
mov
data16
imul
cmpsl
jp
fxtract
lahf
ss
cwtl
inc
sti
sub
xor
mov
nop
mov
faddl
push
pop
sub
mov
js
push
sti
inc
cli
push
lcall
lods
sbb
pop
push
mov
aas
sbb
mov
cmp
cld
xor
rcrb
ret
lea
shr
pop
inc
pop
shlb
dec
fistpl
inc
sub
shrl
pop
cmpsl
push
pop
icebp
xchg
movsb
pusha
test
popa
in
cmc
lea
jmp
out
and
sbb
insb
jns
and
js
push
push
mov
es
cmpsb
pop
mov
mull
cs
xchg
scas
mov
mov
out
sub
int3
adc
in
fbld
pop
jge
add
push
pop
mov
fs
xchg
pop
scas
stos
pop
inc
add
aam
movsb
jb
pop
insb
movsb
pop
mov
mov
xor
roll
push
push
lds
imul
or
imul
iret
fstpt
and
inc
fldt
inc
js
addl
nop
mov
mov
xchg
test
mov
fcom
push
cmc
out
scas
lds
lea
dec
xchg
xor
lea
push
in
ljmp
mov
lcall
xchg
cmp
fists
push
orl
ljmp
int
ficoml
cmpsl
or
mov
or
out
insb
cli
gs
outsl
lret
cld
nop
xor
xchg
mov
xchg
dec
loopne
jge
inc
xchg
aaa
in
pop
scas
fcoml
lea
cmpsb
add
loopne
xor
decb
sub
lock
push
or
test
or
movsb
add
jae
nop
imul
mov
ret
pop
cmc
mov
xor
gs
add
sarb
scas
pop
inc
xlat
and
sub
stc
repnz
testb
dec
clc
pushf
scas
popf
lock
jb
push
movsb
sti
add
mov
xor
inc
and
or
clc
xchg
sub
outsl
pop
fbld
mov
mov
dec
popa
negl
filds
pop
inc
scas
les
xor
mov
jnp
push
daa
adc
imul
hlt
jle
push
pop
addl
mov
jo
fsubl
dec
aas
sti
mov
and
sbb
xor
out
icebp
inc
xlat
ffree
and
sbb
out
jae
dec
aam
push
das
adc
sbb
cmpsl
pop
sti
xor
sti
and
push
in
xchg
iret
rep
cmp
fsubrs
repnz
call
shlb
cmp
je
call
mov
adc
mov
dec
cs
dec
xchg
daa
clc
movsl
repnz
jno
push
dec
fbstp
lds
ja
fistps
mov
popa
in
bound
orl
scas
adc
pop
xor
sub
sbbb
and
sub
add
dec
ja
fwait
xor
pusha
xchg
jae
test
test
ss
cwtl
rcrb
in
fs
mov
pop
loope
je
rcrb
mov
movsb
jp
in
fs
sbb
push
cmp
jp
gs
jno
xor
test
mov
cmp
imul
inc
aaa
cld
ss
pop
cmc
dec
xchg
cmp
repz
sub
pusha
adc
cmp
sbb
sub
pop
lret
jmp
popf
loop
jmp
adc
movsb
mov
adc
in
dec
mov
mov
repz
mov
adc
das
mov
stos
dec
lea
adc
xchg
add
ret
mov
loop
adc
lods
testb
shrb
je
cmpsb
fnstenv
jmp
jnp
or
ss
and
loop
sbb
fnstenv
sbb
mov
pusha
mul
xchg
mov
das
popa
clc
sahf
je,pt
scas
xchg
mov
push
fs
daa
xchg
cs
mov
mov
mov
inc
xlat
add
ret
pop
or
loope
fwait
ret
mov
cltd
xor
aaa
into
pusha
sub
clc
mov
shlb
cs
hlt
popf
cmp
mov
mov
fcmovb
pop
or
dec
in
sub
or
jp
popa
test
aas
mov
jle
dec
ja
xchg
sub
sub
icebp
jb
repnz
and
lea
outsb
jl
inc
mov
repnz
loope
movsb
imul
mov
jns
fbstp
pop
mov
pop
mov
in
mov
mov
pop
out
std
dec
nop
movsb
xlat
dec
cmc
adc
ja
call
stos
inc
mov
stc
mov
xchg
int
mov
shl
int3
xchg
sub
or
xchg
mov
sbb
push
adc
stos
inc
iret
ret
in
lret
rclb
jo
aad
pop
mov
stc
add
mov
adc
mov
fwait
xor
stos
mov
fists
sbb
aas
data16
test
jge
sbb
or
outsb
add
xchg
pop
inc
xlat
lea
movsb
cmp
cmp
scas
inc
xchg
fbld
mov
push
lret
loopne
pop
mov
int3
nop
test
out
call
pusha
loop
add
addb
and
dec
jp
cmp
imul
jbe
in
cld
cmc
mov
pop
push
out
push
fwait
stc
nop
or
lea
out
xchg
aad
scas
lock
in
mov
ret
xor
cmp
jns
cmpsl
fnsave
insl
add
push
fdivl
ret
mov
dec
add
xor
mov
arpl
mov
sbb
cmovg
xchg
imull
ror
sbb
into
adc
scas
out
dec
in
rolb
sahf
add
or
fcoms
outsl
mov
sbb
add
mov
xchg
cmpb
lcall
in
repz
cld
cmpsb
xor
or
jle
cli
subb
xchg
in
push
sahf
xchg
cmc
lods
sub
push
cmpl
sbb
lods
inc
int
cwtl
cld
adc
dec
hlt
pushf
sub
jbe
inc
out
lds
jmp
xchg
pop
xchg
mov
push
insl
inc
lock
xor
imul
cmpsb
cmp
insl
adc
adc
mov
repz
call
mov
scas
jp
lods
test
das
fs
xchg
sub
inc
fsubr
orl
insl
xchg
sub
mov
call
or
stos
cmp
inc
fldl
pop
xor
lea
fs
push
scas
dec
out
jae
sbb
mov
and
mov
test
mov
je
or
enter
add
mov
push
ljmp
call
out
adc
and
mov
leave
cmp
sub
mov
lret
cltd
xor
jmp
in
push
fwait
pop
lock
lods
iret
xchg
stos
cli
mov
pminsw
scas
sbb
add
hlt
or
std
push
inc
fiadds
mov
mov
adc
stos
fsubrs
add
clc
mov
stos
shrb
dec
sub
rorl
stos
jmp
iret
jmp
mov
cmpb
xor
jg
add
mov
jbe
pop
sub
or
call
rolb
push
pop
lds
and
outsb
shlb
aam
adc
das
sub
xchg
lcall
lock
gs
imul
in
test
or
vorpd
dec
pop
jge
jo
outsl
jmp
push
xchg
jo
frstor
imul
ficomps
push
lods
inc
in
pop
mov
xacquire
lods
inc
jo
fs
xchg
pop
leave
cli
insb
out
adc
in
testl
xchg
sub
xchg
sub
dec
filds
xorl
cs
fldcw
cs
pop
mov
cmpb
mov
cmp
xchg
test
aas
or
add
pop
sbbb
ret
mov
nop
and
sti
and
mov
shlb
add
scas
and
jb
push
pop
push
cli
jle
and
push
test
inc
pushf
mov
jmp
mov
cmpb
sbb
data16
or
mov
and
addr16
sub
fsts
xor
in
loopne
in
add
test
ja
or
sub
lds
mov
rol
adcl
stc
and
insb
test
jle
dec
dec
and
cmp
data16
ljmp
dec
adc
mov
add
rcrl
push
cmp
movsl
fwait
mov
dec
xor
popf
sar
xchg
or
mov
jle
stc
or
fst
stos
or
das
xlat
jl
gs
dec
scas
cmpsb
comiss
nop
imul
movsl
or
shrl
sub
cmpl
fisubl
std
jo
push
out
xchg
xchg
push
mov
cmc
lea
mov
adc
push
enter
loopne
jbe
add
mov
in
out
jp
adc
push
decl
pop
lret
mov
decb
out
jnp
insb
sub
ja
add
xor
jnp
xor
dec
sub
jp
xchg
jnp
and
faddl
cld
jnp
add
adc
xchg
pop
cli
jmp
xchg
sbb
cwtl
pop
sub
out
repz
or
sahf
adc
int3
stos
cmp
test
jo
or
push
test
ret
data16
jb
sbb
in
sub
mov
int3
sub
sub
outsl
enter
mov
icebp
jae
test
icebp
cwtl
inc
shr
movl
pop
scas
jno
lret
mov
fildll
push
sbb
iret
pop
jne
inc
call
mov
in
push
pop
shlb
add
sub
stos
pop
inc
xchg
lock
mov
imul
or
movsl
fnstenv
repz
fisubs
lock
inc
movhps
push
push
dec
cmpsb
mov
in
jbe
mov
mov
popa
mov
ja
fisubrs
inc
inc
call
dec
ljmp
adc
es
sbb
pop
sahf
insl
ret
cmp
imul
mov
or
sahf
lods
inc
enter
adc
leave
int3
adc
rolb
mov
dec
push
mov
jl
popa
ret
ds
lods
dec
push
inc
into
fldl
jb
push
dec
and
sub
or
aaa
xlat
mov
or
cltd
out
lret
stos
fdivp
lods
mov
ficoms
push
cwtl
jbe
stc
and
xchg
jns
cli
push
push
xchg
push
mov
rcrl
outsb
jne
jno
mov
inc
fwait
jne
hlt
lea
outsb
inc
inc
jo
jo
scas
clc
mov
inc
fsubrp
jnp
sbb
mov
inc
lcall
sbbb
adc
sub
xor
xchg
aam
inc
and
andl
out
mov
test
sbb
neg
fs
mov
push
and
dec
push
xchg
test
cs
mov
and
pop
popa
testb
pop
out
jecxz
sbb
lods
inc
mov
mov
aaa
out
push
add
leave
movsl
xor
jg
xorl
popf
mov
iret
mov
and
sbb
outsl
rcrl
bound
cli
mov
jg
jmp
push
xor
jecxz
push
cwtl
fdivl
xchg
push
lods
mov
test
pop
movsb
fwait
out
inc
mov
pop
int
inc
sbb
outsb
test
mov
pop
movsb
sub
push
mov
or
push
inc
stos
pop
sub
out
mov
into
imul
mov
fnstcw
stos
js
and
lret
fcomi
gs
xchg
add
mov
pop
push
aam
lods
inc
mov
jns
pop
dec
and
jns
ljmp
pop
push
mov
fcoms
bnd
push
je
cmp
lods
or
out
sbb
inc
andb
mov
mov
lcall
cwtl
outsl
ret
mov
mov
xchg
repnz
mov
mov
lret
lahf
idivb
inc
sbb
or
rcrl
je
cmp
adcl
ds
aam
loopne
xor
mov
inc
aad
flds
cld
fisttps
inc
push
mov
cmpsb
pop
add
cli
push
inc
cmp
shrb
roll
adc
imul
or
mov
xchg
shlb
mov
mov
js
and
jb
popf
repz
xor
lret
adc
jmp
test
or
dec
mov
xlat
mov
fcmovb
mov
add
xor
bound
loope
push
aad
lock
and
in
cmp
sarl
call
xchg
and
call
sbb
mov
add
mov
xor
push
nop
pop
and
je
fisubl
popf
je
ret
mov
fisttps
sbbl
popa
test
jnp
loope
inc
or
cli
push
adc
fadds
adc
imul
add
subl
enter
sbb
in
mov
mov
adc
movsl
les
add
jo
ret
mov
or
mov
fs
xchg
cltd
jbe
cmpsl
fwait
stos
pop
inc
add
lods
mov
dec
std
or
pop
xchg
shrb
jecxz
sbbb
adc
int3
mov
out
adc
inc
fisttpll
jb
push
movsb
das
add
and
out
loopne
stc
or
insl
add
xor
out
insb
mov
std
mov
xor
sarb
pushf
divb
aam
inc
test
cmp
frstor
jle
add
xchg
lahf
mov
xchg
mov
add
sbbb
rcrl
or
in
push
sahf
xor
inc
lock
mov
dec
or
fnstenv
push
mov
and
pop
mov
add
call
mov
rcr
sub
stos
jnp
inc
in
insb
mov
sti
add
jg
dec
pop
fwait
mov
ss
inc
cwtl
out
shl
xchg
call
push
dec
dec
jle
dec
insb
stc
inc
xchg
pop
cmp
in
cmpsl
repnz
iret
dec
cs
pop
das
andb
xchg
ss
push
fisttpll
fs
jge
je
jb
lods
sbbl
negb
mov
movl
inc
or
lret
pop
lahf
push
lea
lods
imul
mov
push
lahf
jp
jge
sbb
shlb
xlat
lods
xchg
aad
popa
pop
data16
testb
je
fidivrs
mov
sbb
add
sub
subl
fwait
push
ror
xor
jge
jbe
popf
dec
adc
push
notb
ja
adc
into
bound
jne
sbb
int3
fiadds
cmp
sub
or
adcb
xchg
push
xrelease
popa
jge
adc
rolb
icebp
or
sahf
cli
inc
cmpsl
add
fmull
jmp
out
dec
or
sub
andb
and
imull
jae
repz
sub
jmp
aas
mov
xchg
jge
and
or
in
and
cmc
cmp
jp
add
xchg
pop
inc
gs
and
jmp
xlat
out
pop
addr16
in
push
sub
pop
lcall
daa
insb
cmpsb
icebp
or
lds
cmc
outsl
push
push
push
pop
cmp
lret
int
icebp
cmp
pop
push
push
sub
fsubl
dec
shll
push
pop
jns
out
push
or
mov
popf
arpl
xchg
popa
mov
push
lret
push
scas
fiadds
push
filds
and
jecxz
jp
cmp
xor
and
push
aad
inc
jmp
sbb
xchg
ror
mov
cmpsl
adc
out
test
sub
jbe
push
pushf
fisttpl
add
add
adc
jae
lods
mov
rorb
outsl
or
add
push
inc
pop
push
sti
push
aam
pop
outsl
clc
iret
cmp
pop
push
push
fimull
or
jmp
addb
inc
movsb
int
mov
dec
mov
movsb
cli
cmp
in
hlt
mov
xchg
cmp
or
mov
xor
scas
jno
hlt
ds
xor
mov
addr16
or
daa
or
jl
pop
insb
xchg
fxch
mov
jmp
push
lret
movups
cld
loopne
mov
cmpsb
sub
jecxz
dec
pushf
test
add
or
mov
fwait
push
and
in
das
in
pop
repz
cli
cmp
mov
aam
inc
movsb
sti
pop
fmul
repnz
push
pop
repnz
out
ss
dec
ror
push
lds
pop
mov
adc
fcoml
es
inc
stc
xor
cmp
push
cmc
dec
orl
clc
inc
jl
ljmp
jecxz
jmp
lods
sti
lds
roll
xor
bound
je
jmp
test
jl
mov
call
leave
clc
push
sbb
add
dec
movsb
cwtl
adcl
or
fdiv
mov
jg
cwtl
rcl
dec
push
jnp
subb
lret
iret
inc
mov
jae
push
movsl
jo
mov
ljmp
xor
jecxz
cmp
in
or
xor
pusha
hlt
out
adc
push
lods
jg
cmc
out
inc
xchg
int
jecxz
jge
adc
xchg
cmpsl
push
or
and
xor
pop
arpl
sub
repnz
mov
into
lds
sbbb
fwait
xlat
sarl
fiaddl
popa
jo
cld
imul
js
jne
jbe
cmpsb
lahf
mov
sub
mov
dec
xchg
imul
and
cmp
and
hlt
jl
push
out
sbb
sub
push
test
icebp
adc
icebp
pop
push
and
push
xchg
cmp
mov
sbb
lahf
test
in
pop
pop
add
lea
adc
mov
push
xchg
bound
cwtl
into
mov
fisttps
xor
outsb
aad
mov
popf
xor
test
leavew
addr16
imul
cwtl
je
mov
cmp
push
pop
fsubs
das
in
xchg
sub
push
call
or
insl
sub
jo
cwtl
jo
cwtl
mov
rcrl
mov
clc
lahf
insl
aad
in
pop
mov
cmp
cld
lock
arpl
xchg
repz
jmp
daa
mov
test
jae
push
testb
xorl
mov
lea
incb
int3
pop
jbe
sub
orb
mov
out
test
aam
pop
jp
inc
les
popf
out
loope
or
ds
les
imul
mov
cwtl
bound
mov
push
in
pop
pop
cld
mov
mov
and
push
mov
fcmovnbe
and
xchg
cwtl
xor
repz
adc
sub
sub
scas
dec
add
mov
pop
push
mov
movl
ss
cmc
sbb
mov
into
fimull
mov
sub
mov
push
ret
jmp
cwtl
pop
xchg
fldt
addb
and
adc
std
mov
repnz
mov
mov
xchg
mov
fidivl
int
push
mov
int
push
push
push
out
push
movsl
pop
jns
mov
clc
mov
sub
dec
add
ret
and
xchg
jb
inc
pop
xor
test
out
push
pop
sub
adc
clc
mov
out
int3
mov
mov
shlb
lods
rep
pop
adc
lcall
adc
fistps
add
pop
add
cwtl
das
sub
in
test
sbb
mov
jp
imul
adc
ret
push
xchg
test
cli
inc
mov
mov
insl
gs
or
or
sub
and
es
jo
mull
addr16
test
adc
loop
xchg
mov
sub
iret
xchg
cs
push
movsl
sbb
mov
psubsw
arpl
mov
xchg
je
dec
push
mov
stos
xchg
adc
jge
push
dec
in
fcom
inc
sub
je
flds
xorb
shlb
int
insb
leave
xlat
popf
adc
dec
aaa
addr16
xor
lret
std
push
movsb
cmp
cmpsl
ror
dec
sbb
jg
lret
sub
mov
sahf
imul
aas
aam
jo
sarl
mov
or
pop
pop
mov
and
xlat
xor
out
cld
aam
sub
dec
dec
xchg
lret
int3
mov
push
cmp
loope
lret
pushf
jmp
cmpsb
es
pop
enter
sahf
dec
loopne
sarb
and
iret
push
push
movsb
idivl
sub
idivb
pop
out
and
cmp
aaa
push
test
push
and
adc
mov
push
imul
cli
insb
dec
mov
dec
loope
ds
push
icebp
repz
arpl
xor
jmp
pop
xchg
mov
pop
push
popf
test
jp
div
xchg
dec
dec
pop
add
nop
outsb
insl
sub
push
cld
arpl
adc
mov
mov
mov
stc
xor
add
mov
adc
sahf
movsw
shrb
clc
sub
adc
push
sub
stc
outsl
push
jns
call
add
mov
out
push
add
imul
push
or
les
mov
pop
cmp
push
sahf
aad
aam
gs
jnp
or
rclb
cli
pop
ss
ss
pushf
pop
adc
and
out
xor
mov
jnp
lret
cltd
push
dec
loopne
inc
sub
pop
outsl
orl
cld
jl
add
es
xchg
mov
sbb
mov
out
ss
aam
xchg
push
push
cltd
xchg
pusha
dec
jecxz
mov
daa
mov
int3
lea
and
clc
ror
lods
test
pushf
xor
hlt
mov
fmuls
sbb
sub
lret
cld
push
arpl
stos
ss
stos
out
int3
andb
jo
adc
xor
mov
in
in
cmpl
je
aaa
shl
pop
leave
fldt
mov
ret
push
push
xor
fwait
insl
scas
rol
iret
sub
mov
add
cmp
ja
xchg
das
je
and
sarl
xchg
dec
ljmp
das
ss
jle
aaa
lods
inc
push
xchg
mov
mov
insb
lea
sahf
rorb
mov
aam
xchg
jge
jno
push
fdiv
fmull
push
mov
jo
and
push
popa
addb
inc
mov
stc
ffree
fdivrl
inc
pop
int
cli
out
shrb
and
nop
cmp
incl
xor
inc
dec
fbstp
call
or
adc
test
es
popa
outsl
mov
ret
push
or
mov
sub
mov
fisttps
sub
push
xchg
pop
xor
mov
push
out
aad
ficoms
adc
fs
cmp
and
maxps
nop
fwait
jbe
in
mov
fidivl
loope
lret
jl
daa
xchg
cmp
daa
xchg
push
sub
in
stc
cwtl
and
neg
inc
dec
shr
stos
jbe
je
jl
pop
lods
pop
adc
test
jns
push
ljmp
push
rorl
sub
pop
add
inc
xor
and
mov
in
repz
dec
jle
decl
jae
ds
jae
add
pop
pop
dec
mov
clc
dec
aam
add
mov
mov
jns
cmp
int
dec
frstor
nop
jnp
repnz
and
mov
or
jg
mov
mov
xchg
aad
movsl
fidivrl
mov
or
or
idivb
or
rcrl
dec
aaa
stc
or
call
int3
arpl
adc
lcall
test
sub
jae
hlt
scas
mov
jns
jl
scas
push
jecxz
xor
stos
cmp
pop
dec
push
aaa
addb
mov
mov
insb
fbstp
sub
test
mov
xchg
daa
and
mov
jae
cmp
ret
daa
lcall
inc
in
aam
and
dec
lods
lods
stc
fists
notl
loop
pop
fimull
mov
adc
ja
inc
and
mov
push
mov
arpl
inc
sub
test
mov
push
inc
adc
cltd
shlb
sahf
mov
popa
fwait
mov
insb
jmp
cmc
stos
push
add
loope
pop
bound
inc
cmp
pop
repz
lods
call
call
fmulp
inc
jg
xor
jmp
outsl
sbb
pop
stos
add
cltd
inc
flds
faddp
pusha
notl
int3
xchg
mov
jg
ret
mov
cld
cmp
pop
scas
pop
ret
or
inc
lods
and
sti
das
into
adc
scas
fucomi
jns
sub
push
cmp
jle
stos
inc
xchg
andb
movsb
push
imul
out
mov
pusha
jecxz
fisttpl
leave
sub
les
jp
xchg
fwait
mov
or
movsb
push
fsts
mov
push
jne
pop
cmp
ficomps
or
jo
sbb
inc
arpl
cmp
movb
dec
nop
inc
add
push
je
stos
ret
cli
sub
clc
clc
nop
movsb
adc
xchg
test
mov
pop
fdivl
rorl
test
test
xchg
mov
pop
dec
xchg
xor
mov
clc
xor
jp
cmp
mov
fs
test
imul
stc
xchg
xor
cmc
xor
xor
insl
insl
jno
sbb
cmc
fstpl
sbb
mov
lock
popa
test
xchg
ja
mov
dec
in
add
adc
xchg
daa
or
cmc
mov
sub
cmp
outsl
xor
pop
hlt
es
les
cs
imul
xchg
pushf
aaa
cmp
lea
mov
sarb
mov
push
jae
lds
cmp
popa
insl
sub
fidivs
pop
sub
pop
lret
mov
int
dec
adc
out
inc
or
add
mov
sub
mov
cmpsb
xor
rcrl
dec
adc
inc
popa
dec
outsb
mov
mov
cmp
and
lcall
push
addl
repz
mov
dec
fsubs
hlt
into
lods
jb
pusha
ljmp
fnop
fnsave
cli
fstl
push
testl
xchg
int3
inc
xlat
jg
adc
stc
inc
adc
into
mov
mov
mov
stc
dec
push
ljmp
inc
ljmp
xor
sbb
and
pop
call
addr16
sbb
sbb
sub
push
xorl
int
jnp
test
in
test
jbe
fnsave
repz
mov
or
mov
and
in
gs
in
stos
roll
test
cmp
lods
pusha
lahf
sbbl
mov
inc
sahf
cli
movsb
dec
cmp
xchg
in
lahf
filds
push
mov
scas
pop
mov
pusha
and
sbb
push
inc
jmp
push
sbbb
push
push
cmp
mov
mov
ds
mov
mov
dec
sbb
aas
daa
call
dec
fistps
cmpsb
cmp
shl
add
rcrl
dec
repz
fs
xlat
push
orl
daa
push
movsl
enter
add
sub
jmp
repnz
xor
xchg
push
leave
movd
daa
sbb
loope
test
test
or
fsubrl
out
xor
cmpb
pushf
add
aam
mov
pushf
xchg
inc
lret
fmul
mov
lahf
mov
test
aad
orb
loop
jb
out
xor
adc
scas
mov
pop
jmp
inc
int
sti
pop
mov
inc
jno
cli
int
add
mov
loopne
or
pop
push
pop
repnz
add
inc
jne
mov
xchg
mov
enter
pop
mov
pop
int
and
and
rcrb
lds
jl
mov
addr16
pop
fs
sbb
cmp
scas
dec
ret
push
inc
dec
cmc
xor
xchg
push
enter
cld
into
and
fcomps
push
stc
ret
in
push
in
xchg
ja
jl
in
add
lahf
lock
mov
dec
dec
jl
add
incl
mov
add
loope
dec
adc
adc
mov
mov
subl
lret
xorb
in
ret
pop
and
adc
not
pushf
xor
pop
xorb
sub
es
or
sbb
mov
mov
test
add
push
imul
lds
adc
pop
mov
dec
push
test
xor
sbb
mov
add
xor
push
imul
cmp
sub
pop
clc
mov
push
and
stos
pusha
adc
int
out
dec
out
sar
inc
xlat
rcrl
in
or
jmp
loopne
xor
pop
mov
sub
sbb
mov
test
in
jnp
mov
adc
xor
jns
cmp
cmp
out
inc
out
dec
add
stos
dec
fcomps
lock
cwtl
clc
leave
push
lea
inc
and
pop
mov
or
mov
lcall
scas
inc
bound
repnz
and
or
add
mov
pop
dec
or
cmp
filds
and
into
fsubl
ss
fwait
pop
mov
es
add
testl
cmpsl
mov
xor
insl
push
pop
pop
sarb
out
jo
jmp
leave
xchg
sub
sub
out
subl
pushf
divb
sub
test
or
fildl
test
lea
sub
jmp
jns
ret
mov
hlt
xchg
jg
sub
mov
sbb
sbb
or
mov
movsl
mov
xchg
sub
cwtl
out
mov
mov
add
jnp
test
out
push
push
add
pop
cmp
xchg
pop
push
lods
xchg
mov
in
repnz
add
std
icebp
mov
inc
stc
ja
sarl
test
lahf
jp
test
and
in
addl
mov
decl
fstps
xchg
mov
cmp
iret
rolb
lahf
or
and
inc
pop
mov
insl
in
les
imul
divl
push
jno
aas
ljmp
sbb
les
xchg
xor
push
cwtl
das
dec
imul
push
cmp
xor
sahf
pop
add
popa
stos
ret
pop
jbe
lds
xchg
int3
lea
stos
movsb
pop
and
test
jmp
pop
cwtl
inc
das
faddl
add
and
mov
mov
inc
lods
cmp
push
call
push
inc
loopne
xchg
jne
cld
adc
inc
leave
popf
mov
mov
push
pop
int
jo
imul
cmc
enter
out
xchg
aam
cmp
mov
es
mov
xchg
scas
enter
xchg
outsb
sub
cmc
dec
arpl
lock
xchg
repz
fiadds
mov
call
adcb
dec
lret
mov
cmpsb
push
leave
std
lods
repz
lds
xchg
sbb
repnz
mov
inc
fadd
or
loopne
mov
or
sti
xchg
enter
fdivp
and
stc
pop
inc
test
aas
imull
sahf
cltd
clc
xchg
movsb
mov
cli
xchg
rorb
dec
lock
mov
mov
lock
outsb
or
lret
pop
or
lea
jle
xchg
dec
in
add
mov
pop
insb
loopne
imul
and
imul
imul
push
jno
xchg
push
xor
out
test
xchg
sub
std
scas
push
das
pop
dec
cmpsb
push
jl
sub
loopne
lahf
xchg
push
cmpsb
arpl
call
stos
jg
xchg
pop
popf
jl
or
sub
aaa
cltd
insb
arpl
ret
fistl
or
fisubrl
adc
subl
cmp
roll
pop
or
fs
leave
pusha
push
mov
mov
mov
ret
push
mov
cmp
adc
push
xchg
in
jbe
push
out
test
int
adc
loopne
inc
mov
xor
std
sar
add
cmp
sbb
or
inc
iret
jbe
xor
inc
inc
rcrb
out
and
les
nop
ljmp
ret
aam
mov
pop
aad
movsl
inc
sbb
xor
and
push
mov
in
sbb
hlt
enter
scas
mov
ret
ja
lcall
lds
push
lahf
sbb
add
mov
gs
test
xlat
cmp
push
mov
or
push
shlb
nop
cmp
sbbl
test
push
mov
fstl
mov
daa
inc
push
and
push
xor
dec
icebp
inc
inc
pop
pop
dec
daa
es
adc
push
popf
sahf
push
jmp
sbb
inc
jmp
pop
and
sti
mov
mov
jle
insb
popf
clc
sub
mov
sti
push
and
dec
xchg
adc
mov
fistpll
mov
jne
fisubrs
cmp
and
xchg
add
mov
mov
adc
and
and
icebp
or
int
stos
aas
pop
jecxz
jbe
and
js
xor
cmpsl
arpl
mov
popa
xchg
jne
push
xor
inc
sbb
push
int3
arpl
incl
std
mov
jbe
int
imul
dec
bnd
rclb
adc
stos
aas
fdivp
jo
shl
and
sub
divb
imul
or
lcall
cmpsb
jmp
mov
stos
insb
mov
add
scas
fwait
sti
xlat
mov
repz
es
test
mov
js
cmp
pop
enter
jb
in
mov
js
pop
negl
pop
and
out
xor
mov
ljmp
aad
out
mulb
ljmp
out
out
push
cmp
int3
outsl
xor
leave
popa
dec
jae
sub
cmpsb
fwait
jns
add
test
imul
sub
jnp
enter
ret
xor
insl
out
int3
dec
jnp
mov
inc
je
fisubl
lea
pop
jmp
adcl
mov
mov
fs
repz
and
ret
test
scas
mov
push
test
call
or
dec
dec
imull
xchg
sub
add
cwtl
das
cltd
cmpsl
jle
pusha
adc
cltd
jbe
push
mov
cmp
insb
push
fstpt
add
xchg
sbb
bound
adc
shrl
xchg
loop
mov
shr
cmc
aam
or
mov
push
test
out
pop
pop
repz
cli
loopne
sub
sub
push
xor
or
mov
xor
or
test
dec
movsb
std
inc
div
adc
outsl
test
pop
mov
jae
cs
push
rorl
cmp
jnp
into
aad
into
mov
nop
insl
cmp
rcrb
gs
sbb
add
imul
dec
enter
movsl
cli
jge
loopne
aaa
inc
sub
dec
pop
xor
stos
mov
xchg
dec
xchg
mov
xor
lcall
lods
js
ss
cs
pushf
insb
sti
mov
sub
stos
and
jp
pushf
dec
sbb
shr
jbe
testb
cli
dec
adc
push
mov
test
lock
mov
push
arpl
add
scas
inc
cmp
in
dec
aam
push
inc
out
arpl
in
in
push
in
aam
push
lock
shlb
mov
test
repz
sahf
add
pop
out
out
clc
aaa
push
fsubl
xchg
dec
vfrczss
sub
mov
mov
jl
popa
mov
mov
mov
dec
mov
pop
xchg
imul
sub
jae
mov
das
je
jo
popf
pop
mov
pop
les
insb
xor
les
dec
push
bound
test
or
into
pop
arpl
lods
dec
push
cwtl
test
push
push
jno
xor
aas
testb
jno
rcrl
cs
pop
cli
loopne
sub
ficoms
add
push
in
jle
call
outsb
xchg
inc
flds
jo
insl
or
mov
pop
sbb
push
lock
popl
aas
mov
je
add
test
scas
mov
lods
aaa
push
sbb
mov
clc
jle
or
dec
cmp
repz
pop
fistpl
push
inc
ljmpw
xchg
inc
mov
add
sub
sahf
andb
and
dec
xchg
dec
bound
xlat
mov
lret
and
cld
outsl
xor
dec
push
jle
lret
dec
mov
jp
aad
mov
cmpsb
and
or
stc
pop
mov
lea
pushf
fistpl
imul
dec
dec
push
insl
sbb
loope
pop
xchg
cmp
ljmp
sub
mov
adc
jmp
ljmp
push
inc
lcall
push
dec
and
or
imul
jb
add
je
or
lret
cli
jle
jecxz
push
lahf
jg
sbb
fnsave
mov
std
jo
cmp
mov
sahf
fildl
repnz
stos
fsubr
fidivs
add
inc
movl
mov
lret
xlat
adc
fmull
shlb
stos
and
sti
xchg
rcll
addr16
xchg
repnz
dec
jns
incl
into
subl
sarb
es
mov
dec
dec
inc
sbb
dec
cmp
push
sub
ljmp
cmp
std
mov
aas
sub
jbe
in
mov
lock
popa
sbb
mov
dec
dec
pusha
mov
jnp
xchg
mov
imul
in
and
rcrl
andl
mov
mov
and
scas
mov
rorb
popf
jo
arpl
cmp
xchg
test
xchg
dec
add
lods
xchg
das
lahf
cwtl
fwait
xor
jle
movsl
ja
jns
cld
sbb
lock
mov
inc
and
jecxz
lahf
and
mov
addl
lods
insl
outsb
fmul
lea
xchg
sysret
dec
sub
loopne
and
xor
fcompl
in
push
inc
ret
imul
jbe
rcll
lret
stc
mov
sti
cmp
sbb
dec
mov
or
stos
test
frstor
loope
lahf
dec
or
add
xchg
sub
sbb
add
scas
sahf
xor
adc
iret
jne
cmpsl
jp
xor
in
inc
push
add
jae
arpl
push
push
lods
inc
xchg
dec
out
xor
jg
add
adc
pusha
pop
cmp
out
sahf
scas
inc
into
repz
mov
out
int3
mov
mov
jo
movl
jo
and
inc
daa
fsubrs
faddl
lret
loopne
xchg
stos
dec
add
test
lret
add
popa
sbb
cltd
add
call
cmp
addr16
filds
mov
jae
mov
sbb
loope
mov
dec
decb
or
std
sub
add
aad
add
mov
inc
int
mov
jo
cmpsb
imul
ljmp
mov
lock
mov
cmpsb
jno
add
push
outsb
dec
enter
fs
aas
xchg
or
inc
cmp
dec
mov
adc
xor
cmp
test
test
mov
test
jo
aam
pusha
xchg
and
lds
outsb
pcmpgtd
mov
mov
enter
sbb
adc
jge
das
mov
pop
jbe
outsb
jns
push
mov
lcall
cmc
mov
push
jg
movsb
push
cli
lahf
xor
xor
addb
and
mov
mov
shlb
mov
xchg
lcall
jp
pushf
and
aaa
bound
out
pop
dec
jbe
jg
test
int
insb
sarb
mov
out
iret
cmpsb
movsl
or
js
mov
imul
fs
jbe
fisubl
test
hlt
adc
mov
clc
data16
lock
xchg
cmpsl
adc
fdivrl
sbb
adc
call
in
aas
mov
mov
cld
aad
xchg
dec
pop
movsb
adc
ret
xchg
dec
das
repz
mov
push
dec
xchg
repnz
insb
sub
mov
out
jne
fsubr
fsts
xor
xor
sbb
outsl
lahf
ss
dec
and
iret
push
clc
popl
push
push
sbb
xchg
cmc
xchg
into
call
push
push
push
outsl
sbb
or
test
lock
mov
pusha
cmc
adc
push
test
mov
inc
daa
outsb
push
sub
mov
mov
ret
in
fldt
push
sub
out
inc
or
mov
push
dec
mov
call
sbb
mov
jb
jns,pt
imul
pop
mov
mov
test
insb
jge
dec
leave
loop
ss
inc
ljmp
push
inc
sbb
sub
inc
stos
push
stos
jmp
fbstp
xchg
les
mov
movb
movsb
cmp
hlt
jno
dec
out
fwait
gs
addr16
mov
jae
inc
jb
adc
rorl
add
push
jmp
and
popf
push
pop
inc
imul
imul
push
xor
test
adc
lds
jae
test
ljmp
jno
lds
fdivrp
mov
push
xor
mov
pop
and
mov
ficoml
test
aad
ja
add
inc
inc
pop
scas
ret
fadds
or
and
cmpsl
loop
rorl
test
xchg
mov
and
jne
aaa
jno
into
stc
or
and
sbb
dec
stc
mov
push
sub
mov
arpl
sbb
push
cwtl
mov
push
out
loopne
ret
shll
imul
mov
imulb
ss
loope
das
xchg
sub
mov
gs
adcl
and
add
push
les
xor
bound
in
jge
push
push
mov
out
adc
cmp
dec
enter
mov
dec
sbb
aam
rcrl
cld
stos
loope
mov
cmpsl
xor
shrl
daa
or
popf
stos
mov
outsb
outsb
in
out
je
sysexit
mov
xchg
xchg
cmp
dec
or
mov
dec
sub
rclb
cmc
jns
xchg
es
xor
roll
adc
out
mov
fimull
data16
mov
mov
insl
mov
mov
dec
setge
push
push
push
mov
hlt
adc
insb
clc
cmpsl
lea
call
loopne
mov
outsb
and
cmc
xchg
and
lock
fcompl
ficoms
rclb
rcr
cmp
add
mov
sbb
push
pop
out
cld
xor
rclb
push
sbb
add
xor
pop
mov
outsl
push
popf
rcrl
pushf
mov
jg
ror
aas
cli
jne
stos
jmp
jb
faddl
in
fidivs
scas
jns
fcoml
jb
inc
ljmp
pushf
jg
testb
rorb
xchg
call
cwtl
cmp
push
cmp
iret
sub
scas
add
cld
cmp
adc
jmp
xchg
movsb
fsts
fadd
jne
shlb
sbb
fisubs
pop
es
idivb
cmpb
aam
cmp
call
adc
call
jbe
pushf
sub
mov
xchg
scas
lahf
and
mov
arpl
pop
cmc
shlb
mov
jl
inc
test
mov
push
scas
rcrb
repz
aas
push
loopne
jb
adc
inc
scas
adc
repz
inc
out
push
das
aaa
lea
push
xor
push
arpl
orl
push
fs
sti
sub
sbb
lock
mov
sbb
push
sbb
pop
les
push
push
stc
sub
int3
outsb
dec
fcoml
or
mov
or
mov
xchg
cli
pusha
or
fadd
jnp
adc
cmp
std
cmpsb
sbbb
inc
fisttpl
stos
jb
lcall
decl
shll
popf
mov
mov
dec
mov
enter
ja
fnsave
inc
std
rcrb
ja
lea
and
imul
mov
sbb
fildll
popa
call
test
mov
add
test
xor
mov
xlat
mov
push
and
in
and
mov
inc
jmp
mov
cmp
loop
or
lret
cmp
jmp
outsl
inc
lods
cld
xchg
or
sbb
cli
adc
cwtl
pop
mov
and
jo
ds
inc
insb
adc
jbe
int
xchg
cwtl
fldenvs
in
fstl
xchg
push
dec
fcmove
popa
sub
data16
mov
fidivrs
clc
popa
pop
sub
shlb
dec
sub
out
mov
xor
lods
jecxz
and
les
jle
cmp
mov
mov
cmp
jnp
xor
fwait
jl
pop
pushf
and
jbe
pop
popa
mov
fidivrs
sub
pop
lahf
and
push
stos
sbb
ret
mov
jg
enter
subb
and
sub
sub
mov
mov
bound
lds
test
sbb
leave
dec
xchg
cmp
lods
mov
dec
notb
icebp
les
sahf
insl
jb
andl
add
orl
outsl
ret
and
lret
les
sub
loopne
pusha
test
add
je
push
out
jg
pop
icebp
movsl
js
inc
outsb
dec
js
dec
pop
xchg
int
xor
sbb
jge
shll
stos
shl
add
sahf
mov
ret
push
push
mov
shrl
pop
and
mov
mov
fwait
aaa
pop
int
add
push
mov
cmp
inc
jmp
push
divb
nop
push
pop
fistl
test
or
fsubr
mov
jg
lods
adcl
or
es
lods
and
loope
imull
rcl
fs
jecxz
ret
cmp
out
xlat
test
lcall
adc
int
push
or
outsb
outsb
adcl
pop
cmp
pop
and
out
jl
mov
mov
movsb
mov
in
xchg
dec
int3
or
sbb
and
repz
mov
mov
mov
jle
push
mov
dec
pop
adc
stos
enter
jmp
sub
adc
insb
incl
aaa
or
enter
jg
push
mov
js
inc
ret
jmp
sbb
loope
movsl
cmp
add
ljmp
add
jne
mov
lret
dec
cmp
push
stos
lds
xchg
mov
stos
inc
stos
xchg
mov
inc
gs
ja
pop
ljmp
outsl
push
out
inc
xor
fnstcw
adc
cmp
xchg
loop
loope
pushf
inc
mov
sbbl
outsb
movsb
cmp
mov
outsl
test
testb
call
aas
out
mov
sub
into
out
ficompl
repz
inc
shrb
sub
clc
pop
int3
test
iret
ret
mov
insl
outsl
dec
cltd
out
sqrtps
insl
add
sbb
pop
not
or
outsl
movsl
es
aam
rcrl
fimuls
dec
and
push
stos
out
dec
rorl
test
mov
xorl
inc
jo
andb
or
imul
and
aaa
cmp
cwtl
pop
icebp
mov
jge
mov
ret
rolb
in
div
push
pop
mov
fxam
rorb
cmpsl
mov
dec
dec
lds
scas
jae
movsl
lods
fldcw
pop
xchg
jp
stos
add
sub
sub
shrd
sbb
stc
sahf
push
out
dec
lods
add
mov
xlat
sub
sarl
lods
testb
cmp
xchg
pop
out
add
dec
flds
pushf
cmp
or
fnstcw
xchg
sub
aam
aas
pop
mov
dec
dec
jae
fwait
loop
cmp
es
xor
test
push
popa
mov
fimull
sbb
movsb
mov
mov
mov
retw
xor
stos
push
stc
or
iret
push
imul
scas
push
sbb
or
int
in
sub
sbb
mov
popa
cltd
and
push
and
lea
aad
scas
imul
test
dec
xorl
mov
nop
fldenv
jmp
sti
pop
rolb
inc
andl
lahf
enter
rolb
mov
fiadds
int3
xlat
dec
mov
aad
push
insl
sub
pop
lahf
loopne
xor
mov
cltd
mov
stc
push
in
sub
pop
xchg
dec
ja
sbb
xchg
hlt
sub
daa
dec
movsl
or
outsb
cmp
roll
stos
xchg
std
mov
cmc
mov
or
rcl
pop
dec
xchg
lods
cmpb
and
add
cltd
push
sub
ret
inc
lretw
or
dec
adc
fldt
pop
and
cltd
xor
xchg
fs
mov
fxch
gs
add
mov
rol
cmpsl
pusha
call
mov
aaa
pop
sbb
aam
ret
add
xor
les
cmpsb
mov
aas
shl
pop
pusha
test
xchg
jns
cmp
fadd
pop
or
loop
push
push
sti
or
pop
xor
xor
jle
lods
out
shlb
push
mov
xor
mov
shrb
fisubrl
iret
popa
add
lods
addr16
mov
addr16
aas
loope
mov
add
fdivrl
mull
lds
mov
outsb
lret
inc
pop
push
add
cmp
sbb
mov
jecxz
idivl
and
ror
or
inc
mov
mov
sahf
test
and
push
lret
mov
mov
in
lcall
and
test
dec
ljmp
mov
pop
xor
xlat
addr16
pop
shl
jno
dec
iret
fistl
in
sbb
ret
inc
push
mov
test
xchg
aam
and
ret
cmc
jne
or
mov
xor
in
adc
jns
enter
in
cli
aam
xor
mov
lcall
pop
fs
adc
mov
sbbl
mov
push
dec
mov
lods
insb
in
pop
lret
popa
lret
xor
sbb
cmp
mov
add
aam
pushf
mov
iret
call
dec
add
pop
dec
loop
add
testb
mov
vmread
cmpsb
sbb
fldenv
imul
inc
stos
add
lret
or
int
imulb
lahf
push
test
orl
mov
repz
popa
xchg
pop
xchg
dec
push
xchg
cmpsl
sub
out
test
jb
mov
push
rol
lock
mov
mov
ja
push
jb
jb
decl
dec
push
xchg
jns
in
jp
in
lods
lods
inc
push
les
jno
movsl
mov
fmuls
fidivl
jp
clc
cmp
and
aam
ret
sub
push
fadds
insb
pop
xor
cld
fs
mov
or
sub
mov
add
push
and
stc
cmp
sub
inc
es
pop
shr
lret
mov
imul
lea
push
adc
mov
adc
outsb
xchg
xor
push
mov
inc
stos
fwait
xor
adc
push
cmpb
out
lret
clc
in
xchg
dec
in
mov
pop
xor
xlat
bound
pop
imul
sbb
leave
mov
in
push
daa
rcll
jno
cltd
jmp
popa
clc
jmp
push
sbb
fwait
jge
sbb
vpslld
xchg
mov
ret
aad
outsl
nop
sbb
sarb
das
fcmovb
dec
addr16
pop
in
push
push
jns
and
adc
pop
or
cs
sarb
loop
in
mov
add
sub
jbe
sarl
push
push
popf
pop
adc
outsl
push
mov
insb
jp
jg
mov
mov
jle
lcall
pop
sub
in
push
lods
push
pop
sbb
and
pushf
pop
push
add
mov
pop
fdivrs
loope
fisubrl
mov
repnz
mov
push
in
mov
pushl
lcall
xor
xlat
shll
gs
fbstp
mov
xchg
push
cld
inc
pop
pushf
ds
hlt
imul
insl
int3
leave
insl
pop
stos
insl
cld
mov
iret
adc
xor
insb
jl
psrlq
gs
jnp
mov
insl
cmp
mov
mov
call
lcall
or
mov
nop
jns
mov
fadds
adc
pop
cltd
mov
scas
ja
int3
in
je
sbb
subl
cmpsl
xor
xor
xchg
add
xor
xor
lods
xor
cmp
xor
in
mov
cmc
adc
test
shlb
mov
sti
movsb
nop
adc
sub
mov
add
sbb
and
mov
test
pushw
sub
arpl
pop
push
jge
mov
sti
xchg
xor
mov
cmp
inc
ret
scas
pop
add
xor
data16
stc
inc
add
mov
loope
inc
sti
cmp
add
inc
mov
bound
mov
adc
and
mov
movsb
js
jl
dec
dec
sbb
pop
repz
jecxz
cmp
ds
push
imul
sbb
flds
push
divb
test
add
add
cli
jne
pop
iret
pop
jmp
xlat
in
lcall
push
mov
inc
push
cmpsb
mov
scas
jp
push
mov
sbb
aaa
iret
in
mov
rorb
add
nop
bound
sbbb
mov
sbb
nop
xchg
mov
sahf
mov
xchg
dec
in
and
mov
repz
and
inc
adc
or
fisubrl
dec
add
fwait
jbe
jnp
sub
fldl2t
mov
loopne
iret
add
iret
iret
ficomps
movsl
call
pusha
into
sub
xchg
xchg
sub
adc
movsl
mov
xor
fwait
add
mov
pusha
popa
fcoml
cmp
sub
inc
cli
xor
adc
test
hlt
cs
push
fmul
lret
rol
addl
add
test
rorb
pop
mov
jno
rcl
aas
sbb
inc
push
das
pop
jb
je
cmp
mov
pop
loope
test
inc
cmpsb
scas
inc
add
mov
push
cltd
xor
xor
dec
pop
pop
lds
lods
ljmp
jns
jmp
pop
lea
repnz
jecxz
mov
jle
cltd
es
adc
push
jge
shlb
int3
push
in
mov
sub
add
je
mov
dec
sbbl
mov
ja
xor
roll
bound
mov
mul
mov
pop
mov
iret
sub
ficompl
fdivs
xchg
or
out
aam
repz
or
clc
scas
jnp
loope
jae
cs
and
dec
dec
rcrl
lock
sub
mov
sub
jl
test
push
aaa
ljmp
push
les
adc
jp
push
das
shll
das
jo
adc
mov
imul
dec
jno
jno
nop
sbb
es
pop
iret
adc
sub
fmull
movsb
dec
pop
call
leave
mov
es
out
loopne
add
test
adc
lahf
divl
xchg
rcll
sti
mov
push
cmc
inc
or
jb
mov
sti
xchg
mov
std
sbb
push
cmp
jmp
fldt
notl
or
es
ljmp
movsl
inc
lahf
pop
mov
and
push
inc
cld
sti
stos
mov
stos
inc
popa
out
cmp
cmp
sub
js
jmp
mov
jb
aaa
movsb
sbb
daa
pop
sbb
ret
movsl
or
mov
push
popl
or
into
pop
mov
int3
outsl
adcb
mov
xchg
out
cltd
xchg
outsl
or
stos
adc
fistpll
ja
leave
mov
add
adc
loopne
sub
js
ljmp
push
mov
cmp
mov
mov
jp
rolb
icebp
int
test
sahf
pop
add
inc
test
gs
mov
pop
push
cltd
jne
lret
aaa
iret
data16
sbb
ret
iret
pop
testl
inc
stos
and
push
fsubs
js
xchg
jg
lahf
cmc
sbb
pop
dec
insb
repnz
out
mov
xchg
add
mov
mov
ret
jnp
dec
jecxz
mov
push
rol
add
bndstx
mov
pop
mov
int
inc
sti
jo
mov
fwait
pop
scas
xchg
popa
out
xchg
cmp
lahf
in
cmp
lea
out
mov
ficompl
popf
sub
jp
popfw
in
push
mov
and
sub
jnp
xlat
xchg
mov
mov
inc
lods
mov
or
inc
gs
in
sahf
outsl
xchg
das
out
xor
xor
dec
mov
xchg
sub
and
movsl
inc
loop
test
sub
lock
sbb
mov
sbb
mov
push
mov
push
stc
jge
xor
mov
fiadds
fwait
dec
lret
mov
mov
pop
adc
dec
adc
or
das
xchg
fldenv
xor
loope
xor
call
lea
lock
test
inc
in
ja
inc
in
inc
aam
dec
shl
mov
jle
pop
mov
dec
or
arpl
pop
nopl
jmp
or
pop
iret
loope
push
add
inc
push
test
mov
adc
out
jo
xchg
jnp
mov
add
mov
pop
jne
pop
lds
clc
lods
outsl
cmp
decb
sbb
inc
popf
pop
popf
jg
cmp
lods
incl
mov
pop
adc
movsl
ret
mov
pushf
and
fs
sti
adc
xor
ja
test
clc
loopne
iret
je
popa
fisubs
jg
sub
or
inc
daa
cmp
shl
enter
scas
fnstsw
mov
add
and
mov
repz
cmc
fdivl
es
jno
lret
cli
not
xchg
in
ret
inc
cmc
jge
inc
in
pop
or
lods
scas
push
and
jo
jo
mov
xor
sub
sarb
dec
add
outsb
add
and
sti
xchg
sub
scas
mov
fists
add
fcomp
push
bound
aam
addl
jp
ljmp
and
jns
out
nopl
adc
xor
les
xor
add
cmpl
ds
jo
mov
mov
mov
mov
cmp
das
xchg
or
cmp
pop
pop
adc
les
in
xchg
dec
shr
int3
mov
lea
nop
icebp
jbe
push
xor
xlat
add
es
test
add
sbb
ds
xor
andb
mov
pusha
fdivrl
lods
xor
ljmp
shlb
inc
fdivs
movsb
mov
jo
js
sbb
or
mov
xlat
cmc
add
or
or
stc
mov
jl
scas
adc
or
push
std
jns
cli
movsb
ss
in
orb
or
out
sub
cli
add
mov
aas
sbb
arpl
fistps
fdivrp
sbb
inc
inc
push
clc
fstp
shl
ds
outsb
adc
mov
inc
test
push
jns
in
push
lods
mov
repnz
pop
cmc
mov
jp
nop
mov
push
aas
loope
imul
mov
insl
cli
push
xor
push
fstpl
ja
popa
mov
adc
into
jnp
push
icebp
push
pushf
push
sahf
inc
jnp
out
pop
in
adc
and
jmp
in
jp
mov
in
into
cwtl
mov
mov
scas
cmp
fnsave
sub
add
scas
addr16
xchg
popf
add
sbb
xchg
test
add
push
ljmp
jnp
sub
and
sub
mov
cmpsb
je
and
enter
fcomps
es
aad
stc
xchg
scas
cmp
test
ja
in
das
aas
mov
xchg
insl
pop
sbb
ds
add
shr
push
jno
movb
in
jmp
mov
outsl
mov
sbb
mov
mov
add
mov
add
mov
add
cli
push
and
xchg
sbb
pop
jp
cwtl
adcl
xor
data16
push
push
xor
mov
sbb
in
imul
and
test
cmp
shr
mov
xor
sbb
jge
mov
jge
sarb
mov
scas
movsl
js
in
nop
in
jecxz
xor
call
flds
outsl
adc
cmpsb
subb
xchg
jg
popa
jl
outsb
iret
mov
inc
test
insb
and
push
pop
inc
stos
inc
je
mov
pop
push
insb
xlat
jbe
mov
and
inc
je
les
ret
lea
xchg
hlt
int3
and
lcall
jo
dec
rclb
push
call
je
cmp
sbb
xchg
sub
or
dec
aad
push
pop
ja
pop
push
ret
and
cmp
sbb
push
add
mov
jno
or
sbbb
inc
fistl
fnstenv
aad
xlat
push
lods
mov
sub
cmpb
imul
popa
mov
jmp
pusha
jmp
mov
addr16
nop
mov
loop
pop
lds
push
pop
mov
frstor
ja
hlt
adc
and
int3
pop
inc
sbb
ds
cmpl
jns
pop
out
insl
xor
stc
sub
mov
loopne
in
mov
xchg
sub
roll
mov
push
ror
mov
adc
imul
dec
jp
out
stos
ret
and
mov
or
hlt
mov
jae
sbb
xchg
or
mov
lea
mov
push
mov
test
xchg
add
cmpsb
adc
pop
insl
idivb
mov
or
push
cmp
push
mov
test
hlt
leave
xor
adc
sub
mov
call
mov
mov
insl
into
stc
nop
outsb
xor
jl
sub
mov
mov
inc
ljmp
jne
xchg
mov
aas
out
lcall
add
lea
in
push
sbb
jle
loopne
push
adc
je
and
mov
pop
test
jecxz
cmp
dec
pop
fs
stos
pop
xchg
jmp
enter
popa
jbe
sbb
cltd
xor
int3
aas
push
aaa
out
shld
fidivs
test
push
jae
or
xchg
fxch
inc
sub
jne
bound
push
inc
dec
jge
cli
aas
lcall
pop
or
leave
inc
cli
into
mov
push
dec
inc
filds
addr16
sub
aam
out
lds
jmp
push
mov
xor
xchg
pop
xor
jns
clc
and
sub
dec
inc
jg
jne
add
and
inc
jb
xchg
stos
das
insl
xor
inc
ja
mov
sub
dec
jecxz
or
test
fadds
pop
fcompl
outsb
test
pop
ss
jb
pop
movsb
sub
popf
push
mov
lea
mov
push
in
bound
lret
je
aam
inc
inc
mov
roll
pop
lods
inc
mov
in
roll
or
pop
cmpsb
idivb
adc
les
rcrb
mov
data16
mov
push
out
orb
in
jmp
insb
popf
lock
dec
xlat
sbb
adc
sbb
in
out
sbb
ret
lcall
mov
in
jle
or
dec
mov
xchg
dec
cmp
pop
shrb
inc
orb
cmpsl
ret
out
imul
in
jge
or
movsb
cmp
add
add
aad
jmp
jp
movsl
sarl
pop
push
jns
mov
pop
mov
push
testb
notb
loope
sub
adc
loop
iret
popa
inc
fnstsw
call
insb
ljmp
repz
fiadds
mov
imul
mov
sbb
xchg
jg
lret
or
insb
ret
adc
das
mov
stos
cld
dec
pop
subb
jmp
push
jmp
test
stc
pop
cmp
lret
movsb
cmp
cmpsb
cli
xchg
ret
dec
mov
sti
cmp
add
lahf
xor
ret
int
cmp
mov
xor
into
mov
js
pop
or
shrb
fbld
test
das
into
subl
cli
jb
lods
mov
pop
push
push
jnp
dec
out
and
clc
add
add
ja
push
in
std
xor
xor
mov
mov
les
bound
inc
imul
aaa
aam
xor
xor
or
sbb
sbb
les
sub
idivl
scas
aas
mov
sbb
dec
jnp
adc
xchg
jns
data16
sti
sbb
fnsave
call
xor
stc
test
in
repnz
xchg
cmp
xchg
orb
stos
nop
loop
jo
cmp
sti
je
iret
out
mov
in
aas
fadds
ss
inc
mov
je
mov
push
adc
outsb
push
sub
push
movsl
xor
xchg
push
sub
or
mov
or
test
dec
dec
in
sahf
add
xor
lcall
add
movsb
push
cld
add
test
lret
or
and
sbb
jmp
mov
adcb
pop
xchg
mov
add
push
fsts
and
mov
sbb
out
insl
lahf
mov
or
inc
cmp
add
inc
and
or
popa
xor
xlat
sbb
imul
dec
fistl
rorl
daa
icebp
cmp
arpl
outsl
add
cmpsb
outsb
xchg
je
enter
pop
xlat
insl
mov
outsl
les
hlt
mov
pushf
jmp
adc
fcmove
pusha
xor
and
push
call
sbb
mov
xor
in
ret
jle
in
in
pop
sarl
bound
popf
lahf
mov
adc
mov
loopne
lahf
or
add
dec
pop
icebp
out
aaa
push
cmp
mov
pshufw
dec
sbbb
push
pop
mov
js
mov
iret
fucomi
add
or
add
cmpsb
mov
sub
xchg
shrl
aaa
mov
int
xchg
and
mov
cmp
inc
call
movsl
jmp
jne
and
lds
stos
mov
cmp
cmp
bound
aad
shrb
in
aad
sub
lock
inc
repz
movsb
bound
leave
jae
test
jne
movsl
sbb
cmp
pause
arpl
mov
sub
sub
pop
xchg
call
popf
scas
aas
push
aad
add
xor
sbb
cs
pop
ljmp
mulb
aas
outsb
cmc
pop
xchg
pop
movsl
cmp
mov
and
lock
movl
pop
cmp
aas
mov
shlb
inc
push
and
xchg
and
repz
or
cs
mov
mov
dec
gs
dec
sbb
cmpsl
out
lahf
mov
dec
rcr
sbbl
inc
in
repnz
inc
dec
adc
pop
mov
and
mov
data16
pop
mov
popf
push
pushf
testb
lret
aaa
rcrb
addb
scas
inc
inc
inc
aaa
repnz
inc
int
jmp
pop
hlt
and
rcll
add
lret
and
scas
imul
inc
and
adc
adcl
jo
dec
xchg
nop
daa
add
loop
cmpsb
xlat
push
push
jo
test
mov
cltd
jb
fisubrl
fildll
movsb
or
mov
pop
test
mov
fadds
adc
iret
adc
cmp
stos
daa
aad
mov
andb
repz
popf
iret
je
out
shrb
movsl
push
adc
jae
cwtl
mov
fsubl
shll
push
movsl
int
repnz
xchg
jge
mov
mov
ficoms
cwtl
movsl
mov
dec
out
je
and
jae
aam
add
mov
mulb
cmp
sbb
stos
jno
stos
sub
aam
adc
inc
testl
sub
pop
sahf
fbstp
js
dec
cmpsb
js
arpl
jle
mov
in
test
or
jne
pop
test
push
stos
addr16
jge
xchg
pop
inc
fcomp
jnp
int3
jbe
or
shlb
sub
dec
fxch
fmuls
rclb
jecxz
cmp
inc
shlb
mov
lret
and
xchg
sbbl
xchg
mov
mov
sbb
sub
jbe
mov
sti
ds
or
pop
stos
pop
leave
loope
or
jo
movsb
lods
aas
popa
push
mov
inc
sub
jp
and
sbb
pop
jg
scas
or
ret
imul
mov
or
dec
mov
cmp
addr16
icebp
jnp
pop
push
out
dec
loope
xchg
xlat
jecxz
and
in
das
xchg
inc
xchg
mov
dec
data16
mov
ficomps
xor
mov
push
jmp
or
sub
push
cmp
ss
outsb
fdivrl
sub
lahf
mov
cmp
icebp
movsl
rcl
rorl
sahf
sbb
sbb
fcoms
jne
ds
mov
add
mov
in
ljmp
adc
imulb
cmp
shr
cli
mov
pop
fsubrp
mov
fisubl
sbb
mov
cmp
cld
mov
fs
pop
sbb
adc
loop
xlat
push
lcall
popa
fdiv
mov
insl
aam
jbe
lds
call
movsb
jnp
push
in
inc
jecxz
in
cmp
ficomps
sbb
gs
jl
mov
cmpsl
mov
sbb
and
cmp
or
aas
sbb
dec
pop
add
or
leave
pusha
jo
ljmp
cmp
out
shl
cmp
daa
inc
es
inc
test
mov
leave
jmp
rol
ja
rorb
xchg
jnp
popa
push
sub
xor
jae
pop
int3
add
jnp
sti
dec
and
lea
xchg
cld
xchg
int
in
out
mov
test
inc
lcall
fildl
popf
mov
push
daa
and
int3
sti
out
mov
push
addr16
jns
repz
iret
cmpsl
call
add
in
jnp
and
out
and
sti
faddl
mov
sbb
sahf
sahf
mov
inc
ret
add
mov
lahf
int
mov
cwtl
int
dec
add
dec
mov
mov
in
adc
sbb
dec
pop
and
mov
lods
cmpsb
mov
lcall
decb
movsl
sbb
insl
sbb
adc
out
scas
daa
sahf
mov
mov
pop
cwtl
sub
jns
mov
pop
or
and
sub
adc
rcl
mov
mov
inc
mov
mov
dec
test
daa
jle
lret
dec
shlb
cld
push
mov
js
mov
add
lds
out
sarl
fisttps
xor
add
movsb
cmpsb
jnp
xor
xor
mov
arpl
cmp
adc
jmp
mov
inc
call
cmp
xor
stc
shrb
pop
xor
pop
imul
mov
cmp
sub
arpl
fisttps
dec
in
leave
cltd
cld
mov
fcom
std
pop
xor
xlat
rorb
mov
ret
fimuls
sub
push
fwait
movsb
sbb
xor
bound
push
or
mov
mov
jo
mov
je
enter
movsb
inc
xchg
leave
roll
icebp
sub
scas
pop
jns
push
jnp
mov
inc
mov
dec
cli
cmc
fcmovne
movsl
sbb
popa
dec
lds
cmp
stos
imul
fwait
pop
incb
lods
sbbl
in
adc
sbb
mov
pop
jns
bound
div
adc
test
pop
ret
inc
loopne
fstp
ljmp
jno,pn
js
cltd
lea
sbb
icebp
pop
mov
lock
jnp
jmp
xchg
inc
out
in
ljmp
mov
js
xchg
add
addb
sub
fmull
pop
std
and
inc
mov
sti
adc
test
sbb
dec
push
stos
mov
or
sbb
fwait
cld
stos
cmp
pop
mov
xlat
xor
cmp
ja
dec
pop
push
mov
sub
daa
test
mov
mov
sub
sub
inc
xor
jmp
or
in
push
adcb
repz
sub
jnp
pop
rorl
hlt
stos
and
mov
sbbl
adc
cmp
int
mov
icebp
jmp
idivl
int3
mov
lahf
ss
sub
pop
adc
mov
lahf
in
inc
stos
inc
jne
fbstp
insb
sahf
jnp
jmp
jno
aaa
enter
jmp
xor
inc
and
push
adcl
dec
sbb
aaa
mov
push
mov
xor
imul
add
xchg
mov
mov
pop
int
sarb
cltd
xchg
test
push
sub
jae
cli
xor
mov
cltd
xchg
adc
loop
sti
inc
push
cmp
fldt
fstpt
mov
jns
sbb
ljmp
sub
outsl
or
push
inc
inc
mov
insl
add
aad
out
clc
jns
cs
inc
sub
sub
jg
push
xchg
add
cs
adcb
fists
jb
inc
popf
insb
popa
notl
imul
ljmp
les
sbb
push
xor
or
sbb
mov
lahf
sub
xorb
or
movsb
ljmp
mov
cmpsl
xor
xchg
out
cmc
dec
mov
sahf
stc
lods
jns
js
or
cmp
or
shlb
ret
aam
ret
jae
mov
enter
movsb
and
cmp
insb
testb
pusha
push
scas
jno
repz
jne
scas
call
cmovg
lret
adc
int3
call
xor
clc
jecxz
inc
push
sahf
pop
ret
fiaddl
cmp
jg
into
or
and
mov
shlb
loope
and
jmp
add
scas
sti
fsubr
xor
xor
jae
sbb
mov
out
add
sahf
outsb
xchg
es
mov
dec
dec
push
mov
inc
or
out
repz
not
push
push
or
mov
dec
xchg
mov
std
stos
dec
pop
xor
pop
mov
and
cmpsl
adcl
in
push
mov
icebp
enter
inc
fisubrl
aaa
jbe
push
into
pushf
pop
sarb
or
out
adc
sub
jne
in
add
xlat
pop
aad
mov
push
sub
mov
into
mov
push
cltd
mov
addr16
push
movsl
mov
mov
xchg
sub
mov
sub
push
mov
cld
ss
add
aam
shll
inc
pop
nop
js
mov
ret
popa
test
loopne
orb
arpl
sub
or
jne
pop
push
imul
xchg
out
pop
mov
jecxz
in
jecxz
mov
mov
cwtl
outsl
mov
js
and
xchg
adc
sub
sub
jae
add
mov
mov
es
mov
xchg
mov
outsb
cmpb
add
mov
jne
mov
mov
add
mov
adc
jnp
hlt
xchg
mov
jbe
xchg
mov
enter
pop
dec
hlt
adc
dec
adc
je
shlb
popa
cmp
mov
out
jecxz
and
mov
scas
xor
movsb
cs
pop
je
les
cld
addb
pop
adc
imulb
insb
decl
inc
fsts
cld
xor
push
lds
imul
std
int3
or
andb
sub
enter
dec
rep
pop
pop
xchg
or
push
push
std
jno
loop
push
lahf
push
push
lock
sti
aad
movsb
aaa
mov
fdivs
xor
iret
loop
push
adc
xchg
push
loope
add
push
sbb
or
scas
adc
cmp
dec
int3
jl
sub
dec
add
clc
xor
sbb
mov
ret
repz
push
pop
jmp
add
cmp
stos
xor
cmp
and
pop
xchg
pop
jecxz
push
pop
negb
sub
push
rcr
loop
push
cmpsl
xor
sbb
cltd
imul
jge
mov
fildll
arpl
push
mov
xor
bound
and
test
mov
inc
mov
mov
push
lods
xchg
leave
cld
xchg
sti
dec
fwait
mov
nop
push
inc
popa
add
mov
clc
and
xchg
pop
mov
roll
dec
cmp
jp
mov
sbb
mov
mov
insl
or
dec
in
jne
sbb
es
aam
movsl
push
ds
mov
rcrb
sub
cmc
adc
cmp
push
xor
push
popa
stos
lds
inc
mov
sub
mov
ret
mov
call
pop
pusha
idiv
cmpsb
sub
mov
jle
sarl
stos
push
repz
sti
xlat
aaa
sub
js
fs
cs
bound
lea
cmc
and
push
xchg
mov
das
adc
aad
inc
call
test
test
or
popf
test
xchg
scas
stc
lcall
cltd
scas
int
testl
add
lock
mov
inc
xor
add
in
dec
loopne
push
out
xchg
xchg
push
in
ret
mov
stos
xchg
dec
dec
xchg
or
cmpsl
inc
mov
dec
sbb
mov
shl
xor
fstp
std
ret
test
xchg
mov
lock
pop
push
cs
fwait
ss
mov
cmc
sub
mov
mov
ficompl
int3
jle
scas
lahf
scas
ljmp
repnz
sti
jg
in
std
inc
add
iret
dec
pop
adc
inc
mov
insl
test
inc
pop
inc
add
pop
cmp
add
or
arpl
push
lds
cmp
outsl
movsb
sub
mov
mov
fstpt
mov
xor
cmp
imul
mov
dec
out
inc
fnstenv
fsubs
or
add
adc
gs
dec
jle
inc
mov
inc
pusha
insb
sahf
push
mov
or
sarl
sub
mov
push
insb
cmp
jae
jo
adc
inc
nop
subb
push
push
das
mov
and
pop
sahf
movb
cltd
aam
in
pushf
movsl
adc
out
add
mov
fldl2t
cmp
repnz
add
notb
nop
ss
dec
jle
fbld
cmpsb
lahf
rorb
dec
jle
mov
cli
dec
fcoms
mov
arpl
jp
push
insl
sbb
pop
push
add
jp
dec
mov
repz
cmp
adc
jl
loop
pop
cmp
mov
and
ret
je
or
mov
sahf
or
push
int3
lods
mulb
pop
in
movsl
add
jne
cmp
and
pop
in
js
inc
push
or
lods
sbb
fists
pop
mov
xchg
inc
out
add
jae
sub
jo
jecxz
pop
lcall
int
daa
push
jle
mov
pop
or
into
idivb
mov
ret
lcall
and
xchg
xchg
das
inc
mov
shr
adc
inc
inc
leave
sbb
inc
fdivrs
mov
pop
xor
pop
aad
fistpll
pusha
cs
mov
js
add
mov
emms
xchg
lods
fisubs
xor
ljmp
mov
push
inc
out
mov
popl
fnsave
icebp
jb
add
dec
cltd
and
pusha
shlb
shrb
clc
jmp
cld
push
shll
mov
ja
mov
fidivl
popf
jae
out
xchg
fisubrl
lds
mov
pop
in
push
int
xchg
out
loopne
adcb
out
dec
add
add
mov
cld
jmp
xchg
stc
fmuls
fsubrl
leave
arpl
cli
popa
jns
cltd
sbbl
dec
mov
ss
xchg
sbb
ljmp
xor
xchg
cmp
iret
push
popf
ljmp
mov
sub
jnp
sub
cmpsl
mov
sti
rcrb
imul
scas
repz
in
cmp
pop
daa
mov
pop
ljmp
push
andl
mov
jns
test
int3
enter
inc
in
push
or
mov
jne
mov
push
or
sub
leave
cmp
add
jge
shll
xchg
fnstsw
adcl
cmp
movsl
gs
dec
rcrl
and
add
pop
insb
push
and
sti
xchg
imul
sbb
lret
push
mov
mov
pop
jno
push
inc
faddl
sbb
pop
outsb
add
pop
mov
pop
mov
add
pop
mov
or
pop
popf
jno
mov
lock
dec
jecxz
adc
mov
sub
xor
out
add
fsubr
mov
mov
mov
push
ret
cmp
cmp
loopne
xor
arpl
inc
fldl
mov
mov
add
mov
adc
das
sarb
call
or
jbe
mov
xchg
push
scas
dec
sbb
sti
rcll
rcrl
ds
mul
movsl
daa
jo
mov
test
jecxz
sbb
lock
jmp
or
loope
aam
or
out
test
jg
cmpsl
sub
outsb
pop
cmpsb
out
xchg
push
inc
push
dec
xchg
inc
divl
and
mov
dec
dec
aam
fmul
mov
pop
pop
into
leave
and
push
ljmp
inc
rclb
sti
push
mov
xchg
ret
test
pop
ficomps
outsl
mov
hlt
ds
pusha
pop
mov
mov
shlb
popf
push
call
push
hlt
bound
mov
add
outsl
push
je
xor
xlat
mov
movsl
in
pop
imul
dec
mov
pop
fmull
jae
or
push
imul
mov
xchg
inc
pop
in
imul
jbe
add
mov
fisubrs
jae
xchg
or
xor
jecxz
mov
stos
jle
clc
xor
inc
sahf
stc
in
fbstp
push
push
test
sahf
fnstenv
imul
adc
mov
ja
inc
dec
cmpsl
jno
xchg
sbb
mov
rcrb
xlat
add
cmp
movsl
cmp
es
pop
pusha
aaa
cld
jns
inc
ds
cmp
pop
std
xchg
inc
push
push
add
fidivl
shlb
rorb
pop
xchg
ljmp
pop
icebp
jg
and
loopne
js
and
jno
push
xchg
jne
mov
push
jno
aam
std
xor
inc
fisubrl
fisubs
fsts
xchg
sub
or
scas
inc
adc
mov
inc
in
pmaxub
jp
xor
mov
and
jl
dec
add
jge
or
sub
mov
jle
adc
lods
test
and
push
mov
bound
sahf
inc
addr16
ljmp
and
xor
inc
cmp
aas
frstor
inc
jge
subb
cmp
popl
xchg
ds
rorb
sbb
outsb
gs
movsl
xchg
add
xor
push
jne
call
into
mov
xor
jle
xchg
pushf
dec
scas
inc
jg
push
icebp
pusha
pop
lret
add
adc
inc
sub
scas
sbb
adc
cmpsl
stos
shl
lret
adcb
fistpl
mov
cmp
lcall
and
xor
or
out
mov
mov
mov
and
popf
cmp
push
pop
mov
xor
sub
ret
sub
and
iret
popa
inc
pop
stos
push
jae
jp
pop
out
sub
test
hlt
pop
inc
mov
arpl
cs
push
testl
and
add
ds
mov
pop
push
lods
push
jge
mov
popf
lret
xor
out
ds
cmp
xchg
pusha
test
jns
gs
scas
fwait
leave
xchg
xor
loope
pop
imull
es
cwtl
lock
and
push
es
in
ret
xchg
mov
cmp
dec
in
and
rcrb
mov
cld
daa
adc
xchg
fmull
ja
dec
mov
mov
ds
sub
jb
inc
sub
jae
ja
add
lea
rcll
sti
and
adc
mov
cmp
fstpl
pop
out
call
pop
out
dec
adc
jb
mov
dec
sbbl
jge
andl
scas
inc
pop
outsb
push
rcll
or
dec
and
fdivl
jge
inc
out
jbe
xchg
jmp
cmp
insl
xchg
dec
and
cmp
jno
aam
in
dec
inc
xlat
jg
test
aas
and
add
pusha
out
sbb
lret
or
add
mov
imul
rcrb
sbb
fbstp
fs
mov
dec
imul
mov
into
adcl
out
mov
cld
mov
sub
out
xchg
mov
mov
xor
stos
inc
sbb
xchg
pop
int
enter
pop
dec
loopne
sub
push
sub
test
insl
pop
mov
push
mov
divb
fldcw
cmp
and
or
inc
out
jb
sbb
pop
mov
lds
aad
jbe
sti
aaa
push
das
repz
cmp
shl
adc
push
push
mov
jns
test
into
js
in
xor
pushl
stos
lahf
mov
loopne
mov
dec
aam
fwait
cli
push
inc
mov
fs
in
mov
mov
fstps
inc
jno
dec
addr16
mov
mov
mov
daa
lcall
or
push
arpl
outsl
xchg
fdivrs
cltd
sub
iret
and
jbe
int
scas
sbbl
push
sub
or
pop
adc
addr16
stc
xor
push
outsb
sbb
sbb
or
xchg
push
mov
mov
cs
push
push
shr
push
jb
lea
jb
test
pop
cmp
testl
jg
fsubrl
enter
jnp
ror
mov
scas
loop
mov
mov
fnsave
pop
stos
leave
loopne
pop
cmp
push
sub
pop
mov
mov
imul
cmp
lods
inc
cmc
sub
mov
test
inc
sahf
push
mov
popf
mov
jnp
in
adc
mov
pop
mov
adc
rorb
lods
pop
fsub
mov
addr16
loope
fs
push
add
pop
repnz
es
xchg
testl
mov
enter
inc
loopne
ja
dec
and
xchg
shll
cmp
jnp
jmp
add
add
outsl
mov
out
cmp
cmpsb
lock
mov
cmp
sub
fwait
xor
and
ret
test
mov
mov
dec
jns,pt
fcoml
ds
sbb
adc
sarl
jl
loop
cmp
mov
dec
xchg
rcll
sbb
cmp
in
aad
adc
sub
pop
or
mov
stos
hlt
mov
mov
inc
adc
es
imul
ds
push
notl
xor
inc
or
call
out
jp
sahf
pop
cmp
and
scas
ss
scas
adcb
sbb
stos
jmp
sar
dec
loope
and
es
xchg
push
scas
pop
lret
and
inc
stos
cmp
ret
rorl
inc
int3
paddsw
stc
test
test
fadd
push
push
dec
pop
pusha
xorb
bound
mov
setno
aaa
mov
ljmp
cltd
aaa
stos
pop
cmp
xchg
fwait
mov
stos
adcl
int3
stos
push
push
fs
add
es
pop
je
xor
jmp
test
push
or
cmp
dec
mov
push
popf
adc
push
fldcw
lods
mov
pusha
ss
xchg
xchg
std
push
out
push
and
add
mov
xchg
fstpt
xchg
xlat
ljmp
mov
add
pushf
pop
adc
cmp
out
and
or
cmp
icebp
arpl
or
dec
les
add
lock
lock
xlat
fisttps
cmp
pop
sub
int3
lea
pop
mov
test
sbb
jbe
insl
outsb
test
jnp
add
inc
inc
inc
cs
pop
je
aas
and
mov
jecxz
mov
es
jg
into
pop
in
mov
push
mov
pushf
popa
hlt
lds
sarl
rclb
xchg
lea
popf
popa
push
mov
xchg
mov
jb
push
lods
or
mov
ss
mov
inc
test
imull
fdivrs
testl
pop
dec
push
cmp
mov
leave
xor
in
jne
shll
adc
je
xlat
inc
and
push
pusha
cs
jb
mov
adc
cs
jg
mov
loope
lret
sti
or
dec
daa
int
and
jge
push
dec
push
iret
orb
imul
and
jne
icebp
cmpsb
mov
dec
add
xor
inc
rclb
mov
adc
jae
push
push
je
mov
daa
mov
mov
das
xor
pop
add
inc
inc
cli
in
jg
out
add
cld
out
mov
fidivrl
or
push
push
sub
sub
pop
or
dec
dec
in
jp
ret
fwait
fwait
xchg
adc
push
test
test
push
jb
xor
sti
jp
aad
sbb
dec
push
xor
xlat
xchg
mov
and
mov
insl
jb
iret
xor
jb
jb
int
sbb
xor
pop
mov
fdivrs
stos
mov
sub
pop
xor
leave
xlat
mov
xchg
call
int
jo
cmp
mov
cmp
pushf
in
cli
push
rclb
mov
and
sar
inc
shll
rcll
or
jmp
aas
loop
jno
and
fdivr
ds
sub
jp
mov
fnstcw
pusha
lods
xor
sbb
and
les
inc
nop
xchg
dec
jne
xchg
mov
in
out
mov
mov
rcrl
mov
push
out
push
aas
jmp
push
push
pop
test
arpl
loopne
stos
sbb
sahf
lods
mov
fpatan
and
sub
cmp
or
stc
je
push
loop
repz
mov
leave
pop
out
subl
mov
idivb
sti
inc
aam
scas
add
subb
imul
daa
rolb
test
pop
loopne
mov
test
inc
js
outsl
mov
mov
mov
es
lock
sti
dec
loope
or
mov
rcll
outsl
adc
mov
repnz
in
xchg
pop
mov
in
jg
jmp
js
clc
insl
add
mov
adc
adc
inc
cmp
ljmp
xchg
ja
jge
xorb
mov
repz
clc
jns
pop
mov
xchg
xor
jne
dec
push
or
push
inc
adc
out
mov
sahf
gs
pop
push
xchg
rclb
jne
mov
sbb
mov
pop
adc
cmp
mov
jmp
daa
outsl
mov
adc
repnz
hlt
mov
in
int
xor
cmpsb
cmp
repz
ljmp
xlat
pop
jmp
lcall
mov
dec
ror
idivl
mov
inc
sbb
inc
shrl
cs
cli
in
insl
jge
push
and
pop
shl
push
lcall
dec
jmp
scas
call
or
call
leave
lret
mov
movl
jl
pop
push
inc
push
mov
mov
dec
imul
mov
cmp
inc
dec
pop
ret
mov
or
in
and
daa
dec
out
aas
cmp
in
push
sbb
push
outsl
cmp
mov
test
insl
adc
test
and
mov
sbb
inc
stc
nop
aaa
mov
cmpsl
cld
mov
jg
out
dec
pushl
lds
pop
movsb
fsub
ljmp
cmp
or
dec
clc
inc
shll
repz
sbb
push
mov
ss
cmpl
jae
adc
gs
fs
cmpsb
in
leave
cmp
jp
leave
scas
fldenv
mov
mov
iret
lods
jne
mov
imul
push
idivb
clc
mov
mov
iret
xorb
aad
lods
dec
adc
pop
and
fs
cltd
add
push
outsl
pop
cmpsl
sbb
fistl
out
sub
dec
push
add
lods
cwtl
push
sbb
or
jbe
sub
mov
scas
pop
and
scas
jecxz
fistps
rcrb
subl
xlat
movsb
sbb
mov
insl
repnz
fcmove
scas
inc
pop
call
or
clc
xchg
rorl
xor
jmp
call
sbb
hlt
pop
dec
jno
in
mov
imull
rorl
xorb
dec
dec
fimull
fisttps
cmp
or
dec
xchg
sbb
jle
out
sbb
mov
xchg
jg
and
mov
and
leave
jae
sub
pop
test
roll
aam
xor
inc
inc
or
mov
xchg
dec
mov
lcall
lahf
rorb
dec
mov
push
aad
inc
mov
push
push
fadd
xchg
dec
out
js
ret
roll
dec
clc
sbb
push
push
scas
mov
jo
xchg
add
rorl
or
add
xor
cmpsb
pop
xor
imul
or
repnz
jbe
mov
adc
push
test
insb
fimuls
push
mov
gs
pop
push
lods
or
aas
sub
lret
pop
mov
int
push
mov
xchg
lret
int3
and
jg
or
mov
push
in
dec
addr16
and
inc
out
loopne
pushf
mov
add
push
and
and
xchg
testl
divb
pop
sub
stc
nop
mov
or
push
rclb
lret
xchg
cmp
enter
cmp
cmp
push
scas
in
push
sbb
sbb
jno
out
sbb
inc
jae
mov
ljmp
cmp
jno
leave
mov
jnp
jo
clc
or
xchg
pop
addr16
aad
sub
mov
loop
xlat
mov
pop
push
je
into
shrl
push
push
mov
icebp
mov
out
insb
fcoms
jbe
jp
xor
pop
inc
lret
xlat
cmc
xor
fcmovnb
mov
ss
mov
inc
lahf
sti
push
lods
adc
es
ljmp
out
fwait
inc
push
fdivs
sub
mov
and
jp
fldenv
dec
dec
push
xchg
adc
fdivr
insl
hlt
or
mov
dec
les
fnsave
ljmp
out
rcr
leave
pusha
or
stos
push
dec
stos
sub
lcall
pushl
sbb
add
sti
cmp
cmp
xor
out
ret
jp
inc
and
jbe
dec
ret
int3
fs
pop
aaa
mov
into
xchg
lods
jmp
out
addr16
push
jo
inc
ja
mov
mov
xchg
les
call
sub
cmc
cld
cltd
add
jl
ss
jns
sub
and
sbb
and
jae
pop
int3
scas
out
fucomip
loopne
lret
ds
cmpb
mov
mov
out
inc
jnp
push
and
adc
dec
es
aaa
aaa
sub
mov
mov
pusha
lea
xor
pushw
bound
popf
cli
xchg
or
sbb
dec
sbb
push
outsl
and
rolb
add
fidivl
sbb
jae
nop
and
in
popa
rorb
fcoms
and
adc
xor
cmp
loopne
sbb
add
divb
iret
fisttpll
adc
ret
jb
mov
in
bound
cld
mov
ja
cmc
jge
and
cmp
fs
and
in
push
mov
les
jnp
fcmovb
mov
push
cmp
std
and
jg
xchg
repz
mov
aad
and
fbstp
dec
xchg
jl
jb
fs
push
jecxz
push
cmp
arpl
ret
pop
mov
fs
repz
dec
sbb
add
cwtl
subb
jecxz
adc
mov
test
push
adcb
sub
fadds
add
mov
in
cmp
mov
dec
mov
inc
xor
xor
add
inc
mov
fcmove
xchg
shll
andl
subl
mov
in
pop
fwait
xchg
dec
or
rep
call
fnstenv
push
lock
jp
dec
les
xchg
and
sub
pop
inc
sbb
pop
aam
push
mov
mov
or
jecxz
add
loope
ds
imul
pop
adc
add
cmp
add
sbb
adc
pop
and
adcb
insb
xlat
xchg
pop
repnz
adc
or
xchg
sbbl
loopne
jae
in
sbb
scas
insb
into
into
and
cmpsb
test
push
xchg
addl
or
lret
aad
jmp
lods
push
sahf
mov
es
stc
sub
xor
cmp
fistl
xor
xlat
mov
mov
dec
fmull
in
ficoms
cmp
ss
mov
mov
cltd
or
dec
dec
push
aad
call
les
push
nop
lahf
push
aas
jae
out
aad
xchg
pop
icebp
cmp
pop
xchg
pop
mov
int
and
pusha
sub
not
inc
bndstx
sbb
mov
jnp
xchg
pop
or
jle
inc
daa
jo
imul
and
or
sbb
mov
mov
mov
jb
neg
insb
sub
pop
xorl
aam
add
movsl
sub
shl
imul
lcall
dec
rolb
cwtl
add
pop
sub
push
in
sbb
mov
cmp
push
xchg
cmp
or
hlt
sub
jns
dec
ret
xor
iret
insl
add
push
mov
inc
fs
sub
mov
dec
dec
mov
scas
repz
xchg
mov
lret
scas
out
mov
leave
mov
sti
mov
push
in
push
cmp
adc
mov
fstl
lret
scas
outsb
cmp
adc
xor
mov
into
or
lret
jp
cld
shrb
sbb
xchg
int3
pop
and
mov
jbe
xchg
iret
sub
inc
mov
ret
sbb
lcall
or
shlb
aad
test
jns
fucomp
fcompl
daa
xor
mov
imul
aam
dec
xchg
sub
and
and
jb
cmpsb
mov
pop
cli
add
add
arpl
icebp
cmp
fwait
xor
aad
add
arpl
xchg
mov
push
and
mov
into
xchg
and
inc
shlb
insb
push
xchg
lret
cmpsl
sbb
add
sub
test
je
daa
inc
loopne,pt
dec
add
hlt
sbb
es
out
xor
push
inc
aas
out
cltd
sub
out
notb
jecxz
popf
adc
dec
fbld
push
mov
inc
mov
xor
mov
sarb
leave
mov
add
movsb
xlat
lock
xchg
ljmp
jns
adc
xor
and
cmp
xchg
dec
and
test
lea
mov
pop
cmp
out
sahf
cmc
push
scas
scas
ljmp
adc
add
out
sbb
addr16
or
aas
adc
push
push
mov
sub
add
cs
iret
fcomp
push
push
xor
sbb
push
arpl
stc
shrl
orl
jb
shl
mov
in
test
ss
out
pop
fildll
adc
jo
divb
mov
ljmp
dec
pmaddwd
xor
fdivrl
pop
das
sahf
js
xchg
sub
shlb
dec
loopne
add
rorb
inc
test
outsl
rclb
es
cmp
mov
pop
in
xor
mov
popf
or
enter
adc
mov
sbb
movsb
fsubl
sub
testl
inc
pushf
pusha
fistpl
xor
int3
jp
jnp
push
pop
outsb
push
add
jg
fwait
dec
mov
inc
pop
rcll
jecxz
lds
es
jmp
fldenv
shll
push
pop
add
js
or
xor
dec
addl
imul
fldt
je
mov
sbb
adc
call
out
xchg
and
push
bswap
lahf
mov
popa
pop
loop
sbbl
mov
cmp
pop
inc
and
xor
pop
inc
pop
inc
movd
jbe
and
push
fsubl
pop
in
cwtl
pop
inc
inc
pop
fstp
jbe
pop
fcomip
insb
stos
subb
jns
cli
jno
and
int3
sbb
push
jnp
cltd
lods
jne
arpl
loopne
scas
gs
adc
xchg
cmp
sbb
pop
mov
sarl
mov
rorb
push
push
lds
iret
es
jecxz
xor
push
icebp
dec
mov
cld
outsl
mov
fcom
mov
les
cs
adc
ret
lret
outsb
in
ficoms
pushf
cmp
and
push
popf
inc
je
pusha
mov
popa
ret
fbstp
jecxz
dec
adc
ret
leave
addb
out
cld
movsb
loope
xlat
repnz
call
or
loope
adc
dec
scas
jmp
shl
int3
adc
jns
in
imul
pop
mov
lcall
fs
std
lea
movsl
int
adc
lods
adc
stos
das
rol
in
mov
mov
mov
fs
inc
data16
sbbb
je
rclb
mov
push
mov
mov
and
test
mov
sub
sbb
lods
dec
lods
xchg
dec
add
xor
dec
cmpsl
in
sub
cli
cmpsl
jg
sub
cs
iret
or
nop
mov
loopne
jbe
in
dec
out
fcmove
test
mov
pop
int3
fistpl
mov
dec
out
bound
popa
lahf
ret
push
dec
xorb
mov
mov
or
out
fidivl
pop
adc
insl
fnstsw
jg
push
pop
lcall
test
loop
add
mov
hlt
aas
lret
subb
popa
cmp
aad
dec
js
pushf
sbb
popf
pop
mov
cmp
mov
dec
mov
mov
in
call
or
js
dec
dec
sbb
int3
xchg
sub
adc
sub
insl
mov
sahf
jno
inc
lret
jb
pop
movsb
jmp
push
sbb
adc
roll
in
xor
push
jmp
fwait
xor
xor
out
inc
jmp
testl
stc
xchg
pop
scas
jmp
int3
insl
cmp
aaa
pop
sbb
or
movsb
mov
movsl
cmp
xchg
push
mov
ret
cltd
pop
mov
and
jnp
cmp
test
jge
jmp
int
cli
std
push
in
pop
popa
lahf
subl
aad
sub
inc
lods
ret
dec
xchg
addb
add
sub
es
dec
mov
movsb
inc
xor
lds
push
iret
lock
loop
insl
mov
mov
shll
inc
push
pop
mov
sub
mov
mov
pop
mov
mov
popf
test
jg
pop
fwait
xor
xchg
inc
aad
push
outsl
loop
out
ljmp
sbb
mov
enter
cs
roll
xor
mov
mov
stos
in
fcoml
push
daa
cmc
sbb
sbb
ss
jmp
mov
mov
adc
dec
ds
test
ja
hlt
cmp
jae
aad
ja
jl
test
test
sbb
or
int
sub
sub
pop
and
std
lahf
aas
dec
lock
xchg
scas
push
pop
lahf
testb
adc
jo
xor
mov
dec
js
cs
xor
into
adc
pop
inc
out
dec
movsb
pop
arpl
outsb
test
sub
xchg
aas
dec
fwait
je
pop
imul
mov
lods
andb
add
das
inc
out
xchg
mov
shrl
push
inc
sbb
lea
fs
xor
pop
iret
xor
cmp
adc
daa
inc
mov
push
dec
xor
cmp
lods
addb
pushf
push
pop
lret
sahf
sub
push
jmp
out
jne
jmp
add
loop
dec
ret
gs
out
in
mov
test
push
sahf
pop
pushf
xor
push
lds
adc
dec
iret
and
enter
ds
mov
jbe
pusha
ja
ss
dec
fwait
mov
les
flds
mov
and
insl
js
mov
and
pusha
xor
iret
gs
leave
push
mov
mov
mov
push
out
cltd
and
out
aas
mov
mov
aam
mov
cli
adc
in
jb
div
sbb
mov
test
fstps
xchg
or
scas
mov
inc
test
dec
mov
nop
loop
out
test
fdiv
cmpsb
inc
xor
mov
pop
dec
cmpsb
cld
cltd
std
xor
sub
ss
out
adc
gs
jne
imul
lods
dec
push
aaa
lods
sub
fidivrs
adc
xor
adc
popa
cmc
mov
xchg
fwait
scas
iret
outsl
ret
sbb
loope
push
add
sub
mov
xchg
ja
cmp
scas
mov
xchg
mov
jne
sbb
dec
ja
pop
fwait
sahf
scas
lods
xor
sbbb
mov
out
ja
or
lahf
cmp
jns
pop
jecxz
xor
mov
push
test
and
mov
shrb
loope
xor
lods
out
mov
fcmove
insl
negl
pop
cmc
push
jmp
sbb
add
cmpsb
jb
roll
insl
sub
sti
lea
mov
sbb
mov
movsb
js
add
cmp
and
idiv
inc
loopne
mov
scas
mov
pop
test
ret
cmp
pop
into
jmp
pop
pop
iret
pop
fstpl
fisubrs
mov
cmpsl
clc
rclb
mov
call
xchg
mov
push
jo
fs
or
or
data16
lret
orl
packuswb
mov
out
cmc
adc
int3
xchg
and
jle
cmp
insb
mov
dec
lret
mov
movsl
jb
fldenv
outsb
aad
test
leave
cmp
cmpsl
setl
sahf
jmp
push
in
into
loopne
ret
pushf
mov
pop
inc
cltd
xor
add
or
cmp
pop
mov
adc
dec
imul
iret
lods
pop
int3
sub
xor
inc
ret
xchg
dec
mov
dec
and
jmp
dec
lcall
and
adc
jno
sbb
hlt
lea
daa
adc
dec
adc
cmp
clc
push
fsubrp
sbbb
lahf
rcr
cli
inc
sbb
xchg
je
cmp
inc
xor
test
push
cmp
sbb
jb
aad
fucomi
hlt
cmc
ljmp
mov
mov
push
xlat
inc
int
icebp
pop
adc
fisubs
faddl
js
ljmp
xchg
jge
mov
rcrl
gs
call
jo
stos
jle
sbb
or
aam
sbb
jle
lock
add
pop
add
adc
es
or
ss
imul
jne
adc
mov
cmp
push
and
rorl
aam
bound
dec
push
in
jnp
jns
in
into
pop
jge
cmp
cs
clc
pop
push
cmp
fildll
push
popf
dec
clc
dec
mov
pop
push
imul
nop
dec
bound
lods
adc
jg
jp
das
es
xchg
shl
adc
jle
cmp
out
push
mov
and
sahf
jmp
iret
sbb
and
rorb
incb
jmp
lret
dec
adc
dec
pop
outsl
xchg
xor
lods
outsb
rcrb
jp
in
xchg
dec
lret
jmp
in
jg,pn
sahf
movsb
or
out
mov
out
add
mov
xchg
ret
into
dec
movsl
mov
xchg
lret
testl
jae
inc
mov
fwait
xacquire
cmpl
stos
push
imulb
inc
mov
out
fcompl
clc
or
dec
cmp
cmpsb
aas
jle
inc
lds
sahf
cmp
pop
mov
jl
fs
xchg
cmp
adc
lret
test
xor
out
imul
hlt
adc
dec
sbb
out
sbb
xchg
inc
mov
cmpsb
pop
inc
mov
es
pop
and
pushf
cmp
fs
dec
adc
pop
fcom
mov
and
xchg
xchg
scas
mov
imul
push
popa
insl
loopne
insl
fimull
rcrb
adc
ss
jns
test
outsl
aam
aas
or
call
int
scas
inc
out
adc
push
cltd
mov
push
push
mov
cmp
xor
cmpsb
push
pop
mov
je
outsb
inc
mov
mov
mov
das
fwait
push
insb
fsubrs
or
dec
andl
imul
inc
out
addb
call
int3
sub
pop
popf
lock
nop
mov
std
repnz
and
add
in
mov
adc
push
cld
cs
mov
pop
leave
ret
pop
arpl
cmp
xchg
ss
pop
mov
xchg
inc
mov
das
adc
xor
movsb
popa
mov
cmp
add
push
sub
xchg
iret
cli
pop
mov
inc
stos
mov
adc
push
xor
cmp
xor
cmp
outsb
dec
es
enter
les
js
out
lea
les
mov
xorb
lcall
dec
mov
stc
push
dec
sub
push
mov
add
lods
stos
xchg
sub
sbb
lods
inc
dec
mov
shr
jbe
push
jns
outsl
loopne
pop
jae
in
jge
cmp
push
jno
hlt
lea
mov
push
call
sbbb
xchg
mov
sbb
out
cmp
loop
fwait
pop
pop
fisubrl
mov
imul
sub
shrb
cmp
aad
cmp
adc
rorb
cld
rep
mov
sbb
mull
bound
in
cld
jecxz
gs
int3
jns
jle
jmp
xchg
rcrl
push
stc
lret
sbb
mov
in
das
cmp
adc
testb
mov
sbb
inc
sbb
push
lret
pusha
notb
aaa
push
dec
fstpt
lahf
insl
mov
push
sub
xor
or
stos
push
mov
mov
push
jecxz
inc
imul
mov
lds
lahf
cmc
mov
ds
es
lsl
mov
mov
dec
and
push
insl
dec
cmp
adc
test
lods
lcall
pop
std
xchg
dec
push
cli
xchg
sbb
sbb
adc
mov
and
push
push
mov
imul
in
push
mov
adc
sub
xlat
sub
mov
jne
gs
push
aaa
pop
xor
xor
mov
bound
lds
shlb
imul
add
or
fidivrs
mov
inc
sub
popa
stos
shll
inc
in
iret
out
andl
dec
insl
add
mov
mov
xchg
scas
leave
jl
xchg
adc
out
push
fadds
testl
jmp
shll
test
repz
cmpsb
jae
push
jnp
inc
inc
sbb
iret
dec
and
jae
leave
pop
cs
lret
test
push
out
addl
shlb
mov
lods
es
push
and
dec
lahf
aaa
leave
mov
pop
mov
mov
inc
fistpl
lock
arpl
dec
test
scas
xchg
push
loopne
shl
fcmove
rcrl
iret
repnz
pop
cld
outsb
inc
mov
or
ss
repnz
xchg
xchg
xor
lahf
jecxz
icebp
das
hlt
mov
test
jbe
xor
dec
dec
pushf
xor
and
cmp
push
pop
out
or
fwait
mov
cmp
notb
mov
rcll
mov
ficoml
je
ror
gs
lock
sub
add
out
adc
in
lds
js
mov
add
or
mov
shlb
mov
push
data16
cmpsb
mov
cs
movl
mov
leave
sarl
mov
clc
fwait
bound
cmp
sub
and
frstor
sbb
jns
mov
stos
dec
xor
jnp
insb
out
or
mov
mov
aaa
test
aaa
cmc
sbb
mov
fadds
cmpsb
pop
cmc
shll
ret
jl
mov
push
sbb
push
adc
repz
cmp
sbb
xchg
push
and
repnz
push
arpl
jno
push
mov
or
clc
or
or
jb
pop
movsb
aaa
lods
rclb
in
pop
inc
mov
jb
pushf
scas
insl
ja
aam
add
push
jmp
xchg
mov
fnstenv
fiadds
push
setae
dec
gs
hlt
mov
inc
imul
push
rcl
xor
les
push
mov
pop
or
mov
je
dec
push
push
and
or
xor
int3
dec
mov
add
sti
outsb
push
mov
mov
js
fxtract
or
repz
lahf
mov
in
push
add
lcall
push
sbb
shrl
and
shrb
xchg
outsl
popf
fsub
call
jae
mov
call
fiadds
mov
fsts
cmc
add
incl
and
or
mov
mov
mov
pop
movsl
cmp
mov
mov
mov
pushf
shll
push
cmp
out
test
jmp
adc
and
cmc
cmp
std
pop
test
cmp
orl
negb
stos
jmp
subb
imul
mov
lahf
pop
icebp
xchg
jmp
pop
in
aas
js
xor
inc
mov
xor
das
std
pop
shrb
test
lods
inc
xor
pop
int3
cmp
inc
pop
lea
mov
push
loop
shlb
mov
add
add
xlat
mov
aas
das
jmp
mov
sarb
mov
dec
frstor
xchg
arpl
ret
xor
fstl
lret
pop
mov
push
push
xor
test
data16
mov
jg
mov
adc
and
int
out
jb
pushf
test
push
mov
or
std
xchg
xlat
sbb
idivb
sbb
jge
cmp
int
jae
insb
in
push
inc
adc
ja
xchg
sub
jg
xchg
mov
or
fisttpll
xorl
sub
lea
rorl
mov
add
pop
cmpsb
and
xchg
jp
cmc
jecxz
popf
sub
dec
loopne
clc
xor
mov
rorl
pop
dec
xor
idivb
sbb
add
repnz
lcall
push
lea
rcll
jbe
mov
std
jo
ds
hlt
adc
aaa
iret
aad
aad
test
mov
mov
in
into
cld
push
adc
pop
fwait
dec
push
push
ljmp
lock
mov
inc
xlat
fistl
pop
inc
test
iret
ss
xor
arpl
mov
pop
mov
outsl
mov
push
scas
push
adc
fisttpll
adc
imul
push
fsub
jl
jae
test
adc
mov
iret
iret
in
jl
push
lock
jle
or
in
frstor
sub
cltd
popa
sahf
out
sti
adc
repz
mov
mov
inc
xlat
rclb
or
pop
sti
daa
out
ds
push
icebp
sbbl
cmpsl
xor
sub
dec
cld
xchg
jge
mov
mov
push
adc
adc
cwtl
pushf
lods
das
cmp
iret
inc
sub
idivl
lret
inc
xor
or
scas
es
push
out
or
xor
mov
inc
shrb
add
aas
lock
inc
ljmp
and
fucomip
and
mov
ss
cltd
ljmp
sti
inc
notb
push
xor
imul
movsl
add
pop
fimuls
sub
inc
scas
inc
js
cmpsl
es
push
cld
fistl
clc
repz
fs
cs
in
jp
repnz
mov
mov
ja
cmp
or
call
leave
push
xchg
pop
mov
loop
push
aaa
fcmovb
lar
mov
icebp
mov
loope
push
test
in
int
std
xchg
jle
sbb
fwait
sbb
loopne
test
cmc
push
pop
push
pushf
lea
xorb
sahf
xor
jg
mov
xor
mov
push
cwtl
cmp
es
iret
loop
cli
cltd
mul
mov
jns
push
push
jo
ljmp
call
and
jg
pop
leave
lods
mov
dec
jp
mov
inc
dec
jmp
push
mov
int3
stos
mov
jmp
fs
pop
mov
call
adc
push
pusha
mov
mov
iret
test
andb
rorl
and
sbb
dec
inc
nop
in
icebp
roll
and
in
sub
jbe
fstpl
movsl
jmp
mov
inc
pusha
jmp
out
stos
jmp
shll
pop
pushf
add
jmp
push
nop
dec
push
mov
pop
push
stc
icebp
loope
and
fxch
cmp
aam
pop
sub
cmpl
addr16
cmp
repnz
aam
add
inc
xlat
setg
fdivp
lock
aas
mov
rorl
repnz
incl
mov
neg
jbe
test
mov
gs
stos
push
dec
jle
add
sbb
in
mov
nop
jns
xor
add
aas
jne
jae
icebp
sub
or
cmp
jg
pushf
mov
aam
mov
ja
or
insl
add
xlat
dec
xlat
and
adc
jne
push
sti
sub
cltd
xorl
xor
add
and
dec
push
in
mov
jbe
adc
adc
mov
lcall
and
xchg
sub
mov
mov
and
mov
push
xchg
jns
ror
inc
mov
jne
xor
sbbb
pop
add
xchg
movsb
fwait
mov
jo
stos
and
inc
cmp
hlt
push
sbbl
insl
push
mov
sub
xchg
nop
mov
cwtl
sub
je
and
pusha
mov
inc
mov
jmp
rcr
ds
xor
mov
and
out
mov
movsl
mov
sub
push
out
jnp
adcb
adc
xchg
xchg
dec
sahf
jg
mov
aas
sbb
add
sub
mov
jmp
push
sbb
pop
jne
or
jle
pop
das
dec
mov
aad
leave
push
shlb
xchg
lret
mov
fnsave
or
in
icebp
mov
pusha
fninit
mov
mov
repz
cmp
fldenv
dec
add
xchg
mov
es
cwtl
fimuls
scas
pop
push
clc
and
pushl
inc
push
inc
dec
xlat
loopne
jge
dec
pop
in
sub
inc
fdivrs
or
mov
aam
popl
mov
scas
or
cs
aad
in
pop
nop
pop
lock
rcl
pusha
xor
shlb
jge
std
pop
pop
pop
inc
lods
jo
lret
xchg
xor
add
ficoms
pop
testb
and
jb
movb
jg
mov
movsb
in
scas
mov
pop
add
enter
fcoms
mov
push
clc
out
mov
outsb
outsb
mov
nop
mov
mov
aad
sti
stos
testb
jo
adc
jmp
inc
lods
push
cmpsl
clc
push
mov
cmpsl
and
fidivs
inc
jmp
add
push
fwait
sti
fsts
mov
mov
fstl
xor
cmpps
leave
bound
ret
fwait
outsl
sbb
ret
es
mov
and
lcall
sti
cmp
pop
in
jg
scas
mov
je
lcall
imulb
lahf
mov
repnz
lahf
andl
and
aas
rcrb
shl
sbb
daa
inc
test
xor
call
sbb
and
arpl
out
add
bound
in
pop
add
or
arpl
mov
andl
loopne
test
jl
loope
mov
cmp
insl
dec
mov
dec
inc
adc
lock
sbb
mov
add
iret
cld
xlat
cmpsl
mov
leave
clc
outsb
sub
mov
fsubs
jb
rcrb
nop
xlat
and
or
and
sub
ljmp
lcall
or
rol
daa
lahf
nop
imul
stos
adc
mov
and
scas
sbb
dec
mov
mov
shll
mov
pop
or
push
or
clc
bound
add
mov
sbb
sbb
mov
mov
or
push
cmp
ficompl
dec
xor
sbb
cmpsb
movsl
and
cmpsl
xchg
js
push
mov
ret
cwtl
sbb
aaa
dec
lret
sti
sub
scas
or
fwait
iret
clc
adcl
mov
add
add
pusha
div
pusha
js
jne
xor
fdivr
outsl
pop
shrl
test
lea
sti
jne
mov
dec
push
repz
sbbl
fcomps
inc
push
or
subw
mov
dec
dec
pop
pushf
mov
fwait
cmpsl
and
outsl
cmp
push
rcrl
add
hlt
aaa
stos
loope
lea
mov
fidivrs
push
sub
mov
out
inc
and
ljmp
xor
push
jo
shlb
cmp
mov
mov
jl
lods
pop
inc
ficoms
clc
fisubs
sub
mov
mov
mov
cld
scas
fidivl
or
sbb
push
je
js
nop
dec
pop
sbb
movsb
or
cmp
jle
test
sti
imul
pop
inc
adc
jb
inc
cmp
punpcklbw
fs
fnstenv
gs
inc
dec
and
testb
add
inc
jnp
int
and
adc
xor
test
sub
ret
outsl
out
jecxz
inc
mov
bswap
fisttpll
lods
out
call
sbb
imul
jle
xor
loop
add
shlb
sub
sub
dec
sahf
dec
add
div
daa
movsb
sahf
inc
addr16
hlt
mov
and
int
jo
xchg
xchg
loopne
popf
cmp
jp
call
add
repz
jo
out
ffree
in
repz
jg
adc
pop
push
dec
xchg
jnp
shlb
aad
lods
push
mov
push
pop
mov
adc
and
insb
jg
cmc
sub
cmpsb
inc
pop
fcomi
lret
bound
std
outsb
and
xor
pusha
sbb
ret
mov
popf
add
jmp
lods
and
mov
cld
adc
lahf
scas
xor
mov
loopne
jae
sub
movb
inc
cmp
sub
pop
cmc
pop
sbb
ret
pop
jl
imul
adc
push
dec
push
ljmp
and
lret
stc
in
cli
shrl
hlt
es
cmpsb
add
lea
in
daa
pop
or
xchg
xorl
cmp
xchg
mov
cmc
adcl
pop
jmp
mov
out
ficompl
movsb
scas
lds
lds
dec
inc
out
cmc
aad
add
orl
gs
insl
pop
out
cmp
mov
push
jne
inc
out
int3
cmpsl
lcall
sbb
fs
xor
ds
ret
pop
sub
mov
xor
sbb
iret
data16
sbb
mov
dec
or
jp
jb
enter
fcoms
push
pop
jl
xchg
cli
std
jge
mov
mov
mov
mov
nop
das
shrl
ret
push
pushf
adc
data16
icebp
xchg
xchg
cltd
test
imull
enter
jmp
push
cwtl
and
mov
ret
pop
in
jb
dec
loopne
push
push
imul
sub
pop
xchg
xor
mov
aaa
mov
push
cmp
jnp
mov
aad
mov
cld
rcrl
inc
sub
lcall
sbb
gs
mov
jbe
xor
out
adc
pop
addl
out
in
push
imul
cmc
push
test
scas
xor
pop
outsb
jle
jnp
dec
mov
jmp
dec
push
mov
mov
and
xor
xor
mov
push
xchg
dec
push
stos
xchg
jns
xchg
xor
sbb
lret
mov
xor
imul
or
xchg
test
shl
test
dec
mov
imul
mov
jl
iret
xchg
mov
imul
outsb
sbb
sarl
and
ret
pop
mov
push
sbb
inc
and
push
inc
xchg
mov
pop
adc
daa
mov
xor
out
xlat
aas
adc
pop
scas
jb
pop
js
xchg
stos
jle
xchg
xchg
scas
pop
mov
mov
push
mov
mov
enter
mov
mov
scas
ss
and
jmp
mov
jl
fwait
mov
fmul
dec
enter
in
es
addr16
lret
mov
sub
std
aas
adc
jle
pusha
rorl
fcoml
shrl
xlat
clc
xchg
aas
dec
repz
adc
outsl
fsubr
dec
fmulp
inc
mov
mov
pop
shrb
mov
cvtps2pd
inc
in
daa
inc
push
cmp
dec
xor
shrl
xchg
cmp
mov
mov
lret
pop
lahf
sbb
adc
push
mov
mov
adc
xchg
xchg
jle
sbb
fbld
adc
push
xchg
sub
pop
ret
or
sbb
lods
push
sub
imul
mov
out
pop
scas
scas
push
les
sub
xor
lret
push
outsb
in
xchg
loopne
jmp
add
ss
addl
and
aas
in
jg
gs
pop
aam
je
inc
inc
or
stos
xlat
mov
insb
xchg
mov
adc
or
icebp
loope
dec
out
sub
sar
xchg
sbb
cli
mov
sbb
ss
je
mov
jo
adc
stc
push
daa
ja
sarb
ficoms
sub
hlt
mov
sub
ficoml
or
cs
in
push
test
jge
dec
adc
out
dec
out
mov
into
out
jge
lret
pop
insl
dec
loope
ret
loop
fisubrl
pop
sbb
mov
movsb
and
and
xor
jecxz
dec
or
pop
or
inc
dec
sbb
xchg
sub
jnp
sub
add
addr16
scas
rcrb
sbb
les
loop
iret
push
mov
icebp
jecxz
stos
dec
dec
dec
loop
mov
ljmp
ds
pusha
aaa
sub
or
gs
leave
cmp
push
daa
cmp
adc
mov
dec
adc
lods
shlb
push
mov
mov
pop
inc
fisubrs
pusha
cmpsb
shl
xor
psubsb
adc
push
pop
mov
and
mov
mov
push
adc
inc
jp
shll
test
or
jo
orb
in
sub
inc
pop
add
mov
sub
daa
push
cmp
mov
jmp
into
imul
out
in
mov
pop
addr16
mov
ret
negb
lods
and
mov
dec
notb
roll
lahf
and
adcl
push
push
insb
repnz
fidivs
mov
xor
int
popf
sbb
fwait
push
mov
lea
out
mov
dec
adc
inc
mov
xor
testl
fwait
hlt
sbb
mov
or
adc
cmpb
mov
lret
sub
mov
leave
rol
cmp
scas
sub
push
sbb
leave
lcall
add
mov
push
gs
mov
loop
lret
shrb
lock
mov
pop
sbb
jmp
dec
cs
push
insl
dec
lock
pop
stos
testb
popf
fldt
std
push
inc
out
je
sbb
sub
inc
inc
mov
lahf
lahf
push
push
outsb
dec
movsb
pop
cmc
aad
insl
test
mov
sbb
jle
mov
jnp
inc
fwait
or
ds
in
jne
cmp
mov
and
fwait
in
aas
inc
add
sub
cmp
aam
sub
fsubrs
std
clc
cmpsb
and
out
test
inc
out
jae
scas
or
fbstp
adc
inc
or
mov
out
mov
mov
jns
push
sbb
sub
sbbl
bound
int
push
fisttpl
push
xchg
cmpsl
out
add
leave
push
and
sbb
dec
scas
push
mov
les
jmp
pop
or
adc
pop
loop
sarl
mov
inc
sti
xchg
pop
dec
fcompl
jl
out
jg
int
or
xor
mov
arpl
cmp
js
es
and
push
pop
jo
dec
sti
pop
jp
inc
aas
push
mov
shl
inc
mov
xchg
mov
cmp
and
cmp
aad
out
dec
stos
adc
inc
ljmp
lods
sub
inc
sub
jmp
das
stos
push
sahf
pop
cmpsb
mov
test
jmp
loopne
dec
inc
inc
incl
imul
sarl
bound
jmp
inc
arpl
mov
mov
fmull
xchg
push
xlat
sub
pslld
test
jecxz
stos
cmpl
int
jg
add
addl
in
std
outsl
xor
data16
sub
in
ret
out
je
mov
jne
push
xor
pop
xchg
ds
dec
fadds
push
roll
nop
mov
or
adc
or
mov
jg
ss
cmp
dec
adc
and
bound
ja
dec
loopne
fistps
dec
dec
rcl
stos
inc
ror
sbb
movb
jno
jmp
in
daa
jae
ja
sbb
insl
add
mov
jne
scas
jns
push
rorb
inc
inc
out
xor
xor
in
in
pushf
inc
cli
mov
push
or
out
add
cmp
sub
cmp
push
mov
or
cmp
add
mov
mov
pop
inc
cmpsl
imulb
push
shll
shrl
repz
out
lret
mov
mov
movsb
lahf
push
cli
fidivl
and
outsb
mov
inc
das
cmpsl
sbb
cmpsb
xchg
mov
dec
bound
jmp
leave
sub
je
je
push
jb
inc
ret
out
jp
jl
xchg
jnp
lret
jns
rorl
shlb
push
jg
xchg
out
jl
outsl
mov
imulb
add
in
out
imul
repz
movsl
jp
jno
add
aad
cwtl
mov
sub
daa
cmp
mov
stos
and
inc
repnz
rcll
jae
sahf
clc
pop
shlb
mov
loopne
cmp
fucomp
repnz
push
sub
fisttpll
inc
sahf
jno
cltd
repz
lahf
paddusw
push
ljmp
mov
xor
jl
loop
sbb
add
inc
adc
fbstp
shrl
cmpsl
push
mov
mov
sahf
outsl
cmp
add
push
xor
idivl
ret
arpl
aad
push
shrl
enter
cmp
cmp
cmpl
cmc
push
addb
shlb
negl
or
dec
xchg
push
adc
cmp
pop
mov
xor
cli
stos
cmc
pushf
cs
fdivl
shrb
repnz
adc
iret
dec
pop
sbb
mov
cmc
pop
xor
mov
lahf
cwtl
xlat
outsb
lret
mov
imul
in
shr
pushf
xorb
sbb
std
xor
loopne
test
aaa
add
cmpsb
loop
cmp
movsb
imul
mov
xor
xlat
stc
inc
std
enter
stos
inc
lret
test
fisttps
lret
rorl
divb
adc
cli
sub
pushf
jle
cmc
aaa
push
pop
xor
vpsubq
les
xchg
mov
fistps
xchg
shll
andl
sbb
xchg
dec
cli
out
ljmp
adcb
cmc
pop
test
xchg
xchg
push
pfcmpgt
mov
xchg
jecxz
pop
adc
repz
jns
and
mov
insl
dec
jmp
sti
mov
mov
xor
add
add
idivl
dec
sub
repnz
mov
or
xchg
leave
or
sub
mov
and
adc
xor
cmp
mov
jg
and
movsb
je
fisubs
push
sub
test
or
jne
out
sbb
cltd
xchg
lock
inc
add
xchg
outsb
push
adc
cmp
mov
stc
cmc
push
aaa
sub
jbe
xor
add
orl
mov
mov
addr16
jg,pn
pop
icebp
jnp
rolb
cltd
shr
inc
cltd
jecxz
jo
into
in
ja
cmp
scas
sub
adc
test
xor
cmp
imul
fmul
test
nop
dec
rorb
sub
mov
ss
aam
mov
sub
cmp
call
mov
push
dec
push
or
data16
test
mov
xchg
in
pop
adc
xchg
sub
pusha
cmpsb
ljmp
sahf
out
xchg
xor
mov
imulb
mov
or
sarb
inc
cs
test
sbb
lahf
hlt
mov
ret
pop
test
stos
sub
jmp
adc
sub
jmp
test
xor
jecxz
mov
mov
in
cmpl
bnd
add
inc
cmp
in
fsubr
adc
jp
pop
xor
incl
shlb
mov
outsl
filds
mov
add
xor
ja
lods
inc
pusha
jecxz
andl
mov
push
push
aad
jae
outsl
jne
xchg
jg
into
lods
ja
fdivp
jo
add
rcr
push
jns
movsb
cmp
mov
mov
mov
ss
mov
push
push
in
sbbb
mov
ljmp
cmp
push
daa
pushf
or
inc
cwtl
fucom
stc
dec
mov
sub
xchg
xchg
es
je
aaa
popf
xor
add
push
mov
cld
xchg
xchg
mov
pop
scas
mov
ljmp
mov
push
mov
mov
stos
jns
inc
cli
mov
ret
in
jo
xchg
repnz
imul
int
out
xchg
pushf
jo
les
adc
loopne
scas
cmp
mov
push
loope
je
loop
and
add
jb
inc
test
fcmovu
or
lahf
stos
inc
popa
in
xchg
pop
lcall
push
adc
cmp
jae
fimull
or
cmp
xor
and
subl
jmp
pushf
pop
ljmp
mov
ret
hlt
lock
jp
sahf
es
jno
test
inc
mov
fstl
sti
repnz
pop
sahf
push
fwait
inc
push
int3
mov
fidivrl
jmp
xlat
sbb
int3
cmp
pop
cmpsb
movsl
div
sub
xor
pushf
sub
push
pop
jg
mov
jl
xor
jo
or
mov
sub
cmp
repz
fnstenv
cmp
and
push
cmp
enter
cmp
pop
stc
pop
out
lock
jbe
out
loope
pop
add
shll
out
inc
in
ljmp
aaa
sub
sub
mov
sub
aaa
or
or
mov
mov
fdivl
mov
sub
push
pop
adc
aaa
nop
daa
imul
sub
pop
popf
cmp
pop
lret
pop
lcall
popa
adc
out
xchg
inc
sbb
pop
sbb
dec
dec
xchg
push
mov
fcmovbe
rorl
sbb
push
inc
data16
ret
jns
jecxz
sbb
aas
dec
xor
sbb
lret
loope
sti
je
mov
popf
fldcw
or
dec
in
aad
mov
jmp
fisubrs
ds
dec
outsl
jnp
cs
xor
sub
popf
add
adc
in
mov
dec
xlat
ljmp
loopne
cmc
mov
incl
add
pop
lods
cmp
mov
outsl
in
adc
inc
test
cmp
jae
and
and
test
pop
add
das
int
cmpsl
sbb
imul
ja
addr16
push
lods
push
jb
out
lods
clc
adc
sub
and
iret
push
mov
dec
in
mov
push
mov
clc
mov
jg
scas
adc
in
aas
out
orb
and
mov
jbe
dec
out
negl
aam
jecxz
inc
pop
divb
std
sub
mov
cld
imull
fdivrl
adc
clc
add
sub
fcomps
icebp
xor
add
and
and
jmp
adc
cwtl
scas
sub
test
mov
sbbb
lcall
and
jmp
std
jmp
add
cmp
clc
mov
outsb
xchg
nop
lods
enter
rcr
repz
xchg
fldcw
stos
dec
stos
xor
mov
inc
sub
jo
jne
push
sbb
in
pop
or
adc
cli
pop
stos
sbb
out
inc
lret
gs
adc
sti
and
xchg
xor
xchg
orb
jo
fwait
jb
and
call
lods
jnp
lods
int
inc
lods
push
push
aaa
mov
push
test
or
int
subb
test
mov
mov
and
cmp
or
ds
mov
dec
mov
inc
pop
idivl
scas
adc
xchg
mov
je
sbb
out
rcrl
std
xor
push
je
mov
lret
and
std
in
sbb
jp
or
add
aam
xor
vfnmsub213ps
pop
and
das
stc
adc
out
mov
fcmovne
cmp
mov
hlt
jl
arpl
sbb
add
jl
cld
mov
fwait
scas
inc
int
std
and
in
or
lahf
inc
call
je
xchg
xchg
add
jnp
cmp
jne
pop
xorl
cwtl
xor
adc
mov
xor
jns
push
aam
test
cmp
in
aas
popf
pop
sub
cmp
sub
xchg
sahf
pushf
aaa
dec
lea
testl
pop
jnp
int
fs
insl
cmp
data16
push
sbb
mov
sbb
sbb
cmp
pop
or
inc
xchg
cmp
fprem
hlt
adc
stos
sub
pusha
pushf
repnz
out
addr16
cmp
jmp
xor
outsl
push
daa
adc
fmull
or
pop
testb
dec
je
jmp
iret
jle
cmp
scas
ret
xchg
std
sub
adc
cld
push
lods
sub
movl
push
rclb
or
push
popf
push
daa
sub
pop
cs
or
add
sbbl
and
xchg
aas
movsl
inc
cmc
pop
out
sbb
fldenv
loope
sbb
fiaddl
cmp
jno
lods
aaa
movsb
dec
adc
xor
cli
adcb
jp
sbb
pop
push
mov
adc
insl
cmpsb
dec
cmp
repz
mov
cmp
iret
dec
push
add
mov
add
add
lcall
es
rcl
pop
out
lds
jl
jno
pop
inc
mov
arpl
sbb
mov
xlat
outsb
jge
sub
lcall
inc
ljmp
xchg
shrl
clc
notb
sub
cmpsb
fmuls
loop
jnp
lahf
stc
mov
jl
subb
aaa
scas
outsb
cmp
push
ds
loopne
mov
adcl
mov
inc
pushf
mov
jmp
xor
add
cmp
insl
sahf
fildll
dec
scas
pop
adc
add
in
test
push
or
stc
jno
push
pop
and
xor
cs
xor
outsb
enter
cmpsl
sub
adc
js
repz
insl
jb
mov
sub
push
sbb
scas
xchg
test
jnp
loope
mov
repz
xor
and
popa
loope
sub
adc
and
pop
ds
mov
int
mov
stc
popa
mov
stos
xor
xchg
inc
or
inc
mov
popf
aas
notb
loope
les
mov
push
push
pop
mov
leave
add
jnp
push
and
or
xchg
scas
or
pop
dec
shrl
aas
dec
xchg
xchg
sbbb
mov
cwtl
or
cmpsl
mov
sbb
mov
jge
dec
scas
dec
or
les
int
xchg
pop
cmp
jle
aam
push
add
aas
test
fimuls
dec
inc
scas
enter
iret
leave
jecxz
lret
push
jb
xchg
stos
mov
adc
pop
or
sti
lahf
sub
cmpsb
nop
dec
inc
cmovge
les
bound
jg
icebp
cmc
push
jb
pop
cmp
stos
mov
and
ja
xor
insb
xchg
fwait
pushf
test
test
mov
jl
add
pop
rol
aas
ficompl
scas
or
push
rolb
aaa
mov
ret
sbbl
or
fists
ss
sub
sahf
ss
repz
xor
ficoms
out
fisubrl
jbe
adc
std
inc
dec
inc
sbbb
push
fsts
daa
mov
ja
mov
bound
lret
ja
lds
fcom
jl
dec
insb
js
mov
rcll
mov
mov
pop
jmp
xchg
jmp
pop
out
mov
loop
clc
adc
rcl
data16
es
loop
pop
adc
mov
or
adcl
add
lret
outsb
inc
data16
lret
aaa
loopne
xor
push
push
imul
xor
cmp
cmp
enter
dec
ret
jle
shrb
push
movsl
mov
testl
fildl
mov
pop
int3
stos
ds
mov
mov
test
push
adc
insl
mov
pushf
hlt
test
mov
mov
je
sbb
sub
imul
fstl
es
lock
mov
add
nop
adc
xchg
mov
inc
push
mov
shufps
shlb
cmp
and
jge
sbb
cmp
jp
repnz
test
std
xchg
inc
mov
add
push
mov
pushf
and
arpl
sub
cmp
lahf
pop
pop
in
lods
aaa
mov
idivl
mov
pop
int3
push
cltd
rcl
arpl
pop
and
cmpsl
push
jl
lahf
pop
push
sub
je
jae
mov
pop
jo
stos
lods
mov
xchg
mov
imul
and
incb
shl
and
int
jge
fisttpll
cmc
or
addr16
test
hlt
out
push
cmp
popa
popa
test
xor
mov
mov
ret
test
setp
insb
pop
into
xchg
jg
adc
xlat
fistl
ret
pop
jl
add
movsl
adc
or
in
fwait
mov
and
arpl
inc
shl
loop
je
adc
repnz
call
sbb
mov
aad
jbe
push
mov
adc
int3
lahf
setb
cld
pop
mov
daa
mov
mov
push
lds
and
mov
pop
fistps
push
ljmp
adc
and
ljmp
inc
pop
addl
lock
xchg
lds
fisttps
xor
fsubrp
push
pop
push
addr16
aas
subb
pop
sbb
inc
or
mov
push
and
mov
aad
roll
popf
mov
js
scas
test
xchg
test
rcll
adc
xchg
enter
aas
sti
outsb
add
addr16
mov
adc
xor
insl
dec
leave
test
add
sar
dec
mov
lret
aam
std
push
xchg
xchg
hlt
ss
inc
add
jns
shll
jae
lcall
in
xchg
lahf
or
sbb
loope
xor
fildl
inc
es
loop
inc
mov
xchg
push
and
cmp
sti
fwait
mov
adc
bound
ror
and
jmp
stos
dec
fdivrl
xchg
mov
ret
xchg
cmp
jl
or
xchg
testl
cmp
roll
sbb
jns
cmp
shrl
pop
pushl
or
mov
sub
mov
jb
mov
mov
sub
or
mov
cli
ja,pt
in
sbb
rcrl
sarl
aad
xchg
aam
fbld
stc
cmc
sbb
dec
imul
cmpsl
aas
mov
adc
jge
cmp
sub
xlat
scas
xchg
rorl
inc
sahf
or
call
out
and
out
movsb
inc
push
dec
or
inc
mov
out
lods
repz
fcoms
daa
fisubs
sub
cmp
aaa
push
icebp
je
sub
sahf
jno
cmc
dec
ss
nop
jb
jae
sbb
mov
mov
or
dec
shl
cmc
xlat
push
lods
inc
xlat
or
or
fcomp
mov
movsb
movsb
pop
or
js
das
lods
xchg
inc
into
jge
jbe
jbe
sahf
jg
fisubl
aam
sbb
mov
jge
adc
xchg
or
xchg
std
push
cmpsb
jge
mov
mov
addl
mov
fs
and
test
sub
imul
jbe
sub
sbb
adc
cmc
mov
lcall
mov
xchg
mulb
insb
testl
loope
mov
xor
mov
jno
mov
aad
sarl
or
add
mulb
mov
add
aas
stc
and
jae
ds
xchg
cltd
cli
adc
sub
cmp
cwtl
mov
ljmp
pop
xor
std
mov
xlat
and
divps
out
jae
jns
sbb
pop
sbb
pushf
scas
inc
test
nop
and
xor
add
pop
mov
in
imul
dec
cmp
into
movsl
cmp
adc
int3
popa
jmp
je
rcrl
and
push
xchg
inc
pop
cmp
fmuls
fnstcw
loop
andb
push
outsb
loope
stos
add
movsl
mov
xor
or
cmp
aad
mov
inc
fucomi
insb
mov
lods
bound
or
jns
xor
into
xorl
xlat
add
std
scas
cwtl
jb
in
repz
pop
movl
adc
icebp
test
inc
mov
int
xchg
fidivs
scas
int3
out
cmpsl
stc
sti
shr
or
push
lods
and
jne
dec
ret
repz
scas
hlt
or
xor
repz
inc
stos
inc
mov
in
jne
sbb
mov
clc
test
shlb
je
mov
mov
fidivs
mov
subl
ja
test
xor
js
cmp
imul
mov
sub
dec
push
dec
pushf
add
xchg
inc
ficomps
pop
lods
dec
xchg
xchg
jp
rol
jbe
pop
xchg
int
mov
test
lcall
cmpsl
jge
hlt
hlt
je
or
in
sub
shl
push
jno
xchg
fs
push
lds
jo
jnp
sbb
hlt
insb
jle
mov
jp
xor
mov
push
dec
cld
adc
or
mov
in
sbb
js
imulb
inc
push
jg
sbb
pusha
mov
out
cmp
aad
jmp
adc
fsubl
es
or
pop
scas
mov
sti
jns
mov
repnz
div
mov
mov
sarb
inc
xlat
cmc
inc
nop
arpl
push
repz
fsubrp
outsl
frstor
mov
push
xchg
mov
sbbb
inc
mov
and
hlt
sub
test
popf
pop
or
loopne
daa
je,pt
loopne
stos
loop
hlt
sub
clc
adc
add
inc
mulb
inc
push
push
inc
fdivrs
js
sbb
mov
mov
lods
out
popf
test
mov
insl
add
dec
aas
adc
pop
pushf
xchg
add
push
jno
inc
xchg
pop
pop
lcall
out
shlb
in
cmpb
inc
and
mov
add
test
cmp
test
sbb
sub
mov
pop
and
outsl
inc
cli
inc
push
insb
mov
push
mov
push
testl
pop
cmp
and
mov
mov
sbb
mov
mov
xor
enter
mov
mov
mov
sbb
test
jns
nop
daa
stos
xor
pop
xchg
push
ss
or
lods
and
push
in
shll
into
imul
imul
jle
pop
shrb
int3
fstl
repz
xor
mov
jle
shll
fbstp
lret
iret
jmp
divb
lods
mov
ss
jno
mov
outsl
inc
stos
and
cmpsl
push
or
push
push
xchg
push
enter
das
call
dec
mov
movl
inc
and
sbb
pushf
mov
out
mov
shl
insl
add
loop
scas
mov
jmp
iret
movsl
mov
enter
ds
fsts
fcoms
dec
or
imul
movsl
movsb
adc
ret
jbe
or
repz
pop
adc
test
mov
andl
xor
cltd
mov
jp
js
and
mov
xor
xchg
sbb
push
cwtl
jge
mov
xorb
inc
cwtl
mov
pushf
mov
fwait
or
sub
cmpsl
pop
cmpsl
ret
adc
arpl
push
push
aad
ds
fmull
and
or
into
aas
aam
dec
stos
xor
in
mov
loopne
cmp
xor
inc
decl
sub
orl
pop
jecxz
nop
jmp
and
and
inc
test
ss
jns
imul
pop
iret
mov
cltd
add
xor
sbbb
cltd
adc
shlb
push
pop
imul
lret
and
xchg
mov
insb
out
in
gs
test
enter
sahf
add
inc
movsb
xchg
xchg
and
or
push
test
jmp
lea
and
pop
adc
inc
mov
imul
sbb
clc
data16
push
cmp
or
sbb
push
insb
dec
pop
or
mov
jbe
cmp
test
mov
xor
int3
push
int3
xchg
add
cmp
ret
mov
or
dec
and
jb
lock
dec
push
shll
lods
jo
cmp
cmp
flds
int3
xchg
mov
jnp
jne
arpl
aad
xor
pop
shlb
test
pop
iret
sub
cmp
lods
jl
out
pop
pop
int3
sbb
and
stos
mov
adcb
and
cs
mov
mov
jbe
mov
xchg
shl
or
dec
test
cmp
addr16
fmuls
pop
xor
pop
cmc
aam
xor
imul
mov
mov
xlat
loope
sbb
gs
mov
pushf
push
lock
pop
or
pusha
add
mov
les
outsb
mov
clc
lret
add
pop
or
dec
mov
lret
dec
jno
aad
jne
filds
jmp
lret
jl
gs
mov
push
in
fbstp
mov
cmp
mov
faddp
dec
pop
push
mov
leave
and
cmpsl
add
test
dec
pushf
jle
dec
cmp
pop
cli
jecxz
or
mov
and
xchg
sbbl
push
pop
sbb
popf
cli
push
shr
xchg
ret
imulb
pop
outsl
outsl
push
jle
inc
cmp
jae
mov
les
and
pop
sbb
ret
test
sub
iretw
lahf
or
test
cmpsl
push
movaps
stc
and
dec
rorb
xchg
test
xchg
xchg
sbb
cmp
adc
jge
mov
test
aad
pop
mov
mov
cmp
sbb
fcompl
mov
mov
push
sbbb
xchg
cs
xchg
lret
push
js
inc
test
cmp
in
push
out
push
in
ficoml
inc
pop
movsb
mov
mul
cmc
sub
stos
push
jg
aas
int3
mov
js
pushf
cli
mov
dec
or
ds
pop
lret
test
mov
push
into
mov
bound
xor
or
jmp
jb
push
hlt
mov
push
lods
in
call
pop
sbb
jne
fs
mov
mov
aam
mov
or
push
pop
adc
dec
repnz
mov
insb
xor
pusha
sbb
mov
cmp
sbb
in
dec
cwtl
jp
xor
adc
inc
rcll
inc
adc
andb
scas
scas
repnz
shrb
daa
lods
sbb
out
cwtl
cmc
cld
std
jbe
das
movsb
bound
mov
pop
int3
aad
ds
data16
test
lock
cmp
fst
push
test
bound
leave
je
push
jae
mov
in
int3
out
push
inc
mov
enter
or
je
and
scas
adc
cmp
ja
lcall
mov
push
fisubrs
clc
fistpll
testl
push
movsb
ret
aam
fistpl
jnp
repnz
jmp
inc
or
xor
andl
hlt
add
add
cld
inc
adc
ffreep
fisttps
imul
or
cmp
xchg
xchg
add
mov
sub
loope
add
fwait
xchg
int3
loopne
das
lret
pop
inc
shlb
sub
pop
ja
pop
mov
mov
jno
xchg
mov
xchg
out
add
dec
fcoms
jg
sbb
mov
inc
imul
hlt
dec
outsl
jge
cmc
inc
inc
sub
pop
aad
test
lods
shlb
cmp
ret
dec
sbb
je
cmp
pop
dec
inc
ret
outsb
xchg
xor
mov
add
clc
js
movsb
cs
insb
arpl
jo
pop
jo
jne
or
adc
nop
pop
xlat
in
daa
repz
sub
sub
mov
sbb
jecxz
jge
enter
cmp
scas
stc
push
in
test
enter
push
dec
dec
das
xchg
out
call
xor
push
notl
dec
test
mov
cld
enter
push
jnp
pop
xor
jns
mov
mov
ja
lret
lock
shr
dec
icebp
xor
test
fcoml
xchg
mov
jne
bound
add
in
arpl
sarl
ljmp
pusha
jl
sub
xor
nop
rclb
negb
sti
xor
sbb
fistpll
mov
mov
call
cli
and
push
ss
mov
jmp
adc
mov
cmpsl
lods
cmp
incl
xlat
lahf
insl
sub
mov
out
and
inc
xchg
out
push
movsl
and
push
mov
dec
xchg
lcall
inc
arpl
mov
scas
out
add
xor
mov
push
je
shrl
aam
fwait
push
add
jns
jle
sti
movsl
dec
push
lods
mov
aad
ja
pop
ret
repz
lret
cwtl
xchg
test
cltd
cltd
or
lahf
jmp
and
xlat
sbb
addr16
movsb
sbb
mov
and
mov
dec
dec
adc
add
popa
mov
or
push
xchg
xor
aas
std
cmp
lret
jmp
sti
fbld
adc
stc
in
pop
mov
or
mov
sbb
dec
jecxz
and
out
xor
out
frstor
sub
ficompl
push
mov
ret
lds
dec
aad
push
and
dec
add
push
adc
or
cs
pushf
repz
mov
push
repz
dec
ds
cltd
je
aaa
loop
push
or
push
add
mulb
ja
incb
cltd
out
or
ret
and
xchg
aam
andps
mov
or
inc
in
pop
xor
daa
rcll
dec
push
insb
loopne
js
adc
dec
pop
push
mov
cmp
stos
loop
inc
and
push
sbb
bt
mov
and
jmp
xorb
fwait
scas
addr16
sbb
xchg
das
sub
push
rclb
add
jl
add
push
push
rcr
sbb
inc
inc
inc
testb
fcomps
push
jmp
inc
and
push
lcall
cwtl
push
ret
in
and
adc
addb
fs
mov
lds
andl
ljmp
mov
movntps
imul
mov
popf
fdivl
push
xchg
add
lret
scas
mov
push
pop
bnd
pop
insl
nop
cmp
and
sbb
test
xchg
insb
xor
xlat
push
mov
mov
call
or
mov
vrsqrtps
popa
or
dec
xor
movsl
jge
hlt
scas
into
jmp
mov
mov
fisubs
push
int
outsb
aas
xorl
imul
mov
pop
sub
adc
and
mov
mov
jmp
xchg
pop
icebp
in
pop
repz
mov
mov
fs
movsb
pop
pusha
adc
outsb
bound
push
push
dec
rcrl
lahf
shlb
mov
rcl
pop
iret
js
sub
aaa
add
adc
add
addb
mov
push
jmp
adc
jbe
sbb
sti
stos
test
jg
pop
icebp
popf
sbb
insb
popf
and
iret
repnz
idivl
xor
add
dec
jg
jne
out
jle
sti
stos
rep
sti
repnz
mov
jp
addr16
pusha
and
sbb
inc
cltd
cmc
jo
add
or
ficomps
lcall
repnz
or
mov
push
mov
jae
xchg
and
xor
mov
and
add
xor
sbb
or
cmp
fsubrs
push
mov
cli
mov
icebp
jnp
or
xchg
jp
cmpsb
lret
xchg
ss
loope
pop
in
mov
xchg
popf
xor
xchg
or
cltd
dec
xor
stos
out
fnsave
mov
push
mov
test
and
adc
test
or
push
int3
xchg
notl
pusha
add
es
test
or
push
icebp
arpl
cmpsl
ds
push
inc
sbb
out
out
arpl
jne
pushf
test
mov
iret
leave
leave
mov
lods
outsl
pop
xor
in
mov
mov
or
icebp
testb
sub
in
mov
pop
out
inc
fs
js
push
sbb
xchg
sub
es
arpl
dec
mov
fcoms
sub
dec
and
adc
cmpsl
ror
sub
add
ret
hlt
loope
mov
adc
xor
xchg
cmp
xchg
sub
lods
outsb
fiadds
inc
pop
scas
and
cmp
jle
ds
lock
hlt
loop
pop
adc
or
pop
mov
xchg
mov
ficompl
sub
orl
pop
mov
pop
lock
mov
pop
add
cmp
les
inc
jl
ja
dec
mov
cwtl
fwait
push
out
push
les
xchg
pop
mov
es
sbb
loopne
jl
mov
adc
adc
xlat
imul
add
iret
pop
or
jp
fildl
mov
add
test
jl
fisubl
add
out
mov
std
xchg
gs
push
pusha
in
cwtl
adc
rcrb
jno
icebp
cmp
adc
data16
cmc
xchg
lock
push
cld
xchg
mov
rcr
data16
test
pushf
mov
sbbb
push
test
jns
aam
and
jge
daa
cmp
dec
stos
push
mov
or
push
mov
fdivl
leave
out
int
and
addl
mov
pop
mov
stos
into
pop
imul
pop
cmp
movl
and
dec
push
pop
mov
mov
sbb
hlt
cmp
mov
stos
orb
aas
and
add
in
jl
icebp
mov
mov
subl
movsl
cmp
lret
incl
ret
mov
or
jo
ja
push
test
pushl
mov
arpl
hlt
call
sbbb
jge
ret
and
cwtl
insl
lret
aad
sub
sub
dec
icebp
fnstcw
mov
add
daa
jle
inc
outsl
inc
mov
pop
cltd
data16
mov
xchg
loope
daa
inc
aam
rol
shl
lret
dec
mov
ljmp
mov
stc
jmp
push
and
icebp
or
test
adc
test
pushf
sahf
dec
popf
sbb
mov
nop
fucomi
rorl
push
sbb
xchg
fwait
xor
in
pop
adc
xor
mov
subl
pop
lret
clc
dec
in
outsb
or
and
xchg
xchg
mov
rcrl
imul
push
or
cmpb
jns
mov
or
pop
cmp
stos
push
pop
fldcw
je
inc
stc
nop
lock
and
cmpsb
inc
imul
jne
inc
sbb
xchg
ficomps
leave
jp
or
push
push
fldt
add
outsb
pusha
jp
ljmp
mov
pusha
ficomps
xchg
std
sub
inc
mov
pop
inc
sbb
sahf
cmp
mov
fsubrl
leave
nop
cmpsl
add
insb
dec
cmp
adc
lock
shl
cmp
dec
mov
adc
fdivl
mov
insb
fcmovne
popa
int
and
mov
in
leave
xor
xchg
mov
mov
sbb
notl
inc
cmp
testb
jge
pop
cmp
lret
fnstenv
pop
fcmovu
ja
or
aam
jo
add
ja
lcall
mov
outsl
push
mov
out
jle
lea
add
jns
ret
ficompl
or
out
pop
pop
jnp
mov
mov
push
nop
dec
push
stos
dec
dec
xchg
fcmovu
xor
sarl
das
dec
jg
cs
mov
and
sub
fwait
or
and
inc
sbb
xor
xlat
bound
rorl
or
in
pop
test
test
fildll
xor
dec
xchg
push
push
rcr
mov
or
pop
mov
mov
arpl
push
lods
add
mov
fs
icebp
mov
movsl
ds
out
dec
cmpsb
add
or
cli
ret
mov
es
aas
inc
int3
arpl
insl
out
ret
sub
mov
movsl
pop
push
xchg
adc
jl
sbb
sar
test
push
mov
ret
gs
adc
stc
sarb
sub
adc
lahf
mov
pop
inc
das
je
cmp
fsubrp
inc
xchg
cs
testb
inc
adc
jle
insb
xor
pop
push
fisubs
mov
xchg
add
lds
xlat
jb
jle
xor
pop
jge
in
add
mov
inc
fxch
sarb
sub
adc
aad
test
inc
ret
sahf
inc
fmuls
leave
fld
lods
or
dec
cli
mov
pop
push
sbb
call
xchg
dec
jg
jmp
sbb
test
inc
fisttpl
pushf
sbb
xchg
mov
push
test
mov
fwait
stc
push
in
testl
repnz
pusha
and
mov
mov
push
push
dec
pusha
stos
inc
xchg
out
adc
jae
sahf
das
cmc
or
push
mov
sub
out
push
mov
xchg
imul
jl
adc
ja
sub
mov
les
repz
pop
dec
add
xor
sbb
lret
ja
mov
sub
xor
ret
push
jmp
mov
jo
jno
adc
mov
xor
push
outsb
cmpsb
xchg
cld
xchg
das
rcrl
mov
sbbb
popf
loopne
sbb
inc
adc
mov
sbb
mov
outsb
adc
or
mov
jno
xor
fcompl
jp
adc
mov
xor
hlt
mov
ss
sub
jp
cltd
scas
xor
data16
sbb
ds
sub
pop
pop
sbbl
and
aad
lods
mov
push
pushw
or
pop
lcall
ds
in
mov
lret
jge
sub
ja
pop
xlat
fidivs
mov
pop
popa
std
pushf
push
or
adc
add
jle
xor
push
loopne
add
mov
add
dec
shl
adc
mov
push
sbb
dec
or
mov
adc
xor
push
mov
fadds
pop
add
pop
and
and
xchg
push
stc
pop
or
lret
dec
dec
std
fistpl
aaa
pop
sub
cwtl
sbb
jns
pop
mov
sub
neg
rcll
mov
test
mov
imul
aas
repnz
sub
push
adc
sub
enter
mov
imul
aad
pushf
das
inc
ss
xchg
adc
popa
fnstenv
stc
or
hlt
sub
lcall
gs
mov
js
in
xorl
aaa
mov
lcall
inc
repz
pop
sbb
scas
jno
add
fs
jecxz
scas
adc
adc
pusha
inc
fs
or
mov
in
xlat
outsl
pop
cmpl
xor
fcoms
out
cli
add
mov
icebp
sbbb
inc
push
int
cltd
stos
test
xor
jbe
xor
and
add
push
push
sbb
test
add
outsl
xchg
testl
push
jo
daa
pop
std
ss
or
cmp
insl
ficompl
cmp
add
mov
adc
ss
and
ret
mov
xchg
add
inc
inc
push
movsb
cli
ljmp
xchg
mov
cwtl
sbb
push
scas
loopne
fimull
push
sub
add
insl
xor
stc
or
ret
arpl
gs
pop
push
mov
push
jle
pusha
das
cmp
pop
in
out
mov
test
sbb
sbb
loope
inc
in
xchg
xchg
cmp
js
dec
jle
and
loope
rcrl
int
out
orl
jbe
in
add
mov
adc
adc
pop
je
jp
jecxz
pop
inc
dec
inc
daa
imul
scas
mov
arpl
cwtl
ds
call
test
lcall
sbb
and
fbld
lea
and
jmp
add
fidivrs
jl
cs
mov
and
mov
frstor
lcall
stos
clc
scas
pop
addb
rolb
les
mov
pop
add
or
mov
lods
and
inc
leave
jp
lcall
inc
movsl
cmp
movb
inc
push
shrl
jae
sub
test
out
inc
je
push
and
addr16
fimuls
dec
inc
xor
insl
cld
xor
cmp
cltd
hlt
mov
or
mov
mov
or
pop
sub
xor
mov
pop
add
lods
xchg
jle
lahf
dec
xchg
sub
cmp
inc
enter
hlt
jnp
sub
fstpl
fcompl
fists
bound
sar
sub
frstor
push
jno
mov
cmp
xchg
jmp
ret
sbb
sub
cmpsl
inc
push
sbb
dec
lock
jnp
dec
pop
add
pop
jle
fwait
adc
outsl
dec
mov
cltd
pusha
sbb
sub
pop
sub
adc
or
pushf
outsl
jge
icebp
inc
lods
mov
and
ss
dec
in
lret
mov
xor
sbb
mov
and
das
popa
clc
pusha
xchg
iret
stos
push
adcb
inc
enter
sahf
lods
nop
icebp
pop
sahf
and
es
rcrb
inc
lods
xchg
int3
cltd
enter
pop
mov
xchg
in
pop
rolb
adc
daa
mov
test
pop
push
mov
push
insb
lret
pop
hlt
mov
loopne
sbb
popf
ss
bound
lea
hlt
addr16
jle
xchg
movl
fldenv
int
or
aas
je
xchg
in
or
push
cmp
popa
gs
mov
pusha
testl
dec
movsb
inc
pop
lret
repz
jb
into
leave
xchg
stc
popa
leave
ljmp
repz
pop
inc
subl
leave
ficompl
inc
flds
jle
jno
cmpsl
fucomi
in
test
ret
stos
push
mov
clc
add
pop
addr16
stos
js
or
stos
xchg
dec
sub
dec
pop
cmp
xchg
add
xor
inc
cld
notl
fbld
fwait
jbe
fldl
push
or
lods
fisubrl
sbb
std
int3
pop
jns
pop
push
add
sub
cmc
lcall
xor
add
test
arpl
outsb
jb
mov
lock
lds
push
cmp
push
pop
dec
aas
test
jno
aad
rolb
xchg
mov
inc
cmp
sbb
and
rdpmc
dec
call
lcall
aad
popl
scas
mov
adc
push
lret
and
ret
out
push
in
xor
jb
xor
jl
cs
xlat
xchg
mov
mov
add
pop
and
push
movsb
cmp
roll
cmp
inc
fwait
bound
addl
fildl
mov
adc
int3
inc
sub
push
cmpsb
iret
data16
rorb
mov
sbb
stc
xor
out
lret
int3
shlb
jae
push
popl
sbb
add
lods
xchg
add
mov
addr16
sub
sub
dec
out
xchg
bound
mov
pop
xor
jecxz
push
sub
pushf
test
outsl
movd
imul
xlat
in
pop
aad
or
mov
dec
lcall
dec
mov
jle
mov
andl
je
fldl
push
faddl
int3
imull
inc
inc
xlat
inc
mov
rorl
je
cmp
lods
cltd
test
stc
insb
shll
loope
sbbb
sub
xor
lcall
movsl
movups
in
pop
ds
stc
adc
and
lret
dec
add
dec
and
in
mov
clc
mov
push
xor
call
ljmp
repnz
pushf
cli
ljmp
aas
cmc
xchg
loopne
cltd
ds
jmp
fildll
cmp
sbb
or
lock
cmpsl
das
repnz
xor
push
mov
xchg
add
in
dec
add
mov
push
xor
pop
gs
cld
dec
xor
mov
loopne
xchg
push
add
popa
fmull
out
testl
std
and
das
push
push
aam
in
cmpsl
dec
rolb
repz
movsl
dec
pushf
inc
fnsave
or
add
in
and
enter
mov
sub
sub
mov
dec
or
mov
lcall
int3
adc
scas
dec
repnz
nop
sbbl
or
dec
fists
ss
or
mov
ret
add
jns
cmp
pop
bound
fs
mov
lock
movsb
pop
ja
jnp
dec
sbb
lea
nop
add
push
and
out
cli
pop
jno
and
inc
pushf
mov
lds
aas
pop
xchg
adc
filds
test
negl
mov
jle
xor
test
incb
sub
dec
pushl
or
popa
mov
insl
mov
adc
rcrl
inc
scas
sbb
push
adc
inc
sbb
pop
xchg
jbe
inc
lret
outsl
jle
loope
aas
mov
dec
pop
insl
xchg
inc
jle
inc
mov
dec
cld
aad
adc
cmp
mov
dec
repnz
outsl
xor
call
adc
andb
sbb
cmp
xchg
jmp
jmp
test
sub
dec
mov
xchg
divl
enter
clc
scas
inc
inc
je
outsb
add
lock
pop
dec
add
dec
daa
jmp
cmpsl
icebp
aam
dec
iret
push
out
or
fidivs
push
jl
lds
incb
and
and
mov
test
and
jbe
and
insb
inc
mov
fmulp
rorl
mov
pop
fisubrs
imul
jns
cltd
add
xchg
in
iret
pop
lds
in
popa
imul
jmp
shl
adc
gs
or
or
add
mov
adc
repz
xor
jns
cs
mov
push
dec
mov
pop
pop
ret
xchg
je
mov
jbe
loope
xchg
sub
mov
dec
mov
mov
mov
test
or
or
and
insb
shlb
call
jge
inc
lret
push
ja
adc
fisubrs
xchg
mov
jg
loopne
and
dec
pop
insl
lock
pop
shrb
cmc
call
xchg
jmp
sahf
inc
and
cli
call
ret
scas
test
in
or
sub
push
in
xchg
push
sub
fldl
sbb
into
aam
push
or
push
movsl
fdivrl
ljmp
jbe
das
xor
jp
mov
pop
push
imul
stos
outsl
aad
loope
mov
adc
lds
imul
icebp
dec
sub
adc
cmp
data16
mov
push
jge
jg
in
std
add
rorl
testl
xchg
sub
dec
xor
push
mov
push
cmpsl
fdivl
adc
xchg
pop
and
inc
sahf
clc
ja
sti
push
sbb
je
movsl
mov
add
dec
andb
mov
mov
xchg
and
push
repz
xchg
and
rcrl
es
xchg
lahf
addr16
cmp
jecxz
add
movsl
rcrb
repnz
fdivrl
nop
jnp
cmc
lock
insb
or
cmp
cwtl
movsb
push
mov
jge
sar
pop
push
jo
mov
fsts
fsubrs
mov
mov
mov
lret
xor
push
mov
adc
mov
in
pop
dec
lret
xor
xor
or
cmpsb
je
fcmovne
inc
insb
scas
aas
sbb
or
add
adc
cmp
aaa
mov
fidivrl
adc
jno
pop
icebp
jne
jmp
aam
cmpsl
icebp
in
mov
push
aad
cmc
outsb
jge
scas
jge
mov
call
add
imul
ja
into
mov
andb
out
jns
mov
into
lods
pop
insl
iret
cmp
xor
xor
outsb
adc
lock
stc
popa
sub
rorl
jae
cmp
push
popa
test
imul
mov
adc
or
insb
data16
repz
stc
popf
scas
scas
lds
cli
sbb
fisubrs
repnz
xchg
ss
push
dec
loope
clc
ljmp
idiv
rclb
jne
jb
inc
addr16
inc
pop
stos
lock
cmc
pop
cwtl
sbb
pop
iret
mov
loope
and
or
leave
xchg
sub
jb
and
pusha
scas
and
fnsave
ret
lret
js
notb
daa
outsl
das
fsubl
sub
and
and
sti
loopne
fmul
shll
push
push
sub
cmp
divb
js
mov
roll
mov
lret
cli
mov
xchg
lods
nop
daa
mov
imul
mov
pop
cmp
and
outsl
push
shrb
iret
lret
jne
ror
sub
popf
ja
and
fstps
or
enter
inc
mov
or
flds
and
xorl
push
in
pop
inc
jb
mov
inc
pop
into
fdivrl
mov
fdivl
fwait
pop
filds
test
hlt
ret
cmpl
inc
testl
jmp
and
push
jns
and
dec
fists
icebp
inc
outsb
xor
es
mov
pop
ror
mov
in
dec
xor
mov
inc
mov
cwtl
testl
jg
outsl
mov
adc
movsb
jnp
jp
jb
jo
ficoml
mov
cmp
ret
dec
push
push
out
neg
jp
xchg
sbb
dec
and
adcl
xlat
insl
or
cmc
ficomps
push
notb
cmp
mov
rolb
test
cli
cmp
jbe,pt
jb
dec
bound
pop
jmp
cmc
cmpsb
cltd
in
out
add
xor
or
or
jg
out
or
aas
mov
leave
push
idivl
sub
popf
subb
lret
mov
insl
push
cmp
ds
mov
ss
fistpll
adc
bound
push
orb
jecxz
cmp
enter
ss
pop
aam
pop
xchg
aad
sub
out
and
and
aaa
shlb
lret
adc
sbb
test
insl
outsb
fbstp
js
inc
inc
std
vmptrld
bound
in
inc
jb
xchg
shl
adc
lds
cmp
mov
xchg
in
add
add
xchg
pushf
pushf
insb
sar
mov
or
and
mov
divb
mov
or
daa
or
fimull
insl
add
jne
mov
ja
sbb
enter
xchg
pop
jnp
inc
push
ja
adc
sbb
mov
cmp
pop
repz
push
lea
jp
jmp
fistl
push
xor
mov
outsl
push
hlt
mov
inc
adc
dec
pop
inc
call
cmp
cmp
das
or
cmp
mov
dec
cmc
lahf
imul
xchg
es
insl
sub
je
pop
and
sub
jbe
lock
xchg
sbb
es
mov
push
lea
sub
pop
hlt
scas
pop
push
loopne
xchg
std
jae
push
push
lock
sahf
lods
dec
xchg
push
mov
mov
loopne
fiaddl
out
xchg
rcll
sub
or
xchg
add
sub
push
repnz
push
dec
pop
add
adc
cli
ja
pop
mov
xchg
jo
dec
jae
cmp
jb
leave
mov
ja
fsubrs
mov
jmp
or
loopne
cmpsl
mov
jno
dec
shl
jbe
cs
sarb
or
outsb
cltd
push
dec
pushw
xor
push
push
push
jb
leave
mov
pop
std
lods
test
xor
sbb
push
jmp
xchg
loopne
data16
inc
mov
pop
cmpsl
add
mov
mov
cmovns
inc
xchg
xchg
test
and
xchg
rol
notb
fistpl
cmp
inc
jb
lret
mov
fsubs
out
sarb
xchg
je
cvtps2pi
xchg
sub
xor
pushf
and
add
and
inc
mov
cmpl
push
or
cmp
movsl
push
shll
sti
add
arpl
idivl
icebp
popa
mov
ss
lock
aam
mov
loopne
xchg
fcomip
stos
xchg
pop
mov
loop
jecxz
dec
add
into
data16
cwtl
in
xor
int
and
push
jbe
dec
in
popf
into
mov
cmp
movsl
sbb
pop
cmpsl
sbb
xor
sub
in
or
aad
lea
neg
xchg
adc
jbe
popf
nop
hlt
imul
ljmp
inc
or
ss
xorl
mov
jmp
xchg
push
cmc
adc
dec
stos
xor
cmpps
mov
shlb
fisubrl
out
mov
sub
cmp
das
push
or
mov
mov
test
das
jmp
inc
loop
mov
sub
loope
jb
jno
cmp
mov
pop
decb
in
aam
repnz
in
pop
movsb
scas
call
fwait
insl
repz
inc
cmp
jbe
adc
popf
push
mov
mov
jae
outsl
sub
mov
out
test
out
add
imul
popf
adc
repz
shl
push
call
insb
sti
sub
addl
dec
push
or
mov
int3
pop
rol
imul
mov
sub
aam
add
and
ret
cmpsb
add
je
hlt
shlb
jo
aam
and
scas
rcll
pop
movsl
mov
aas
hlt
xchg
mov
pop
push
pop
jl
pop
or
sub
lea
xchg
neg
mov
gs
xor
mov
or
sbb
out
sti
sub
xor
xchg
cmp
dec
add
outsl
stos
fldenv
jl
sub
push
push
push
loopne
out
push
lods
dec
lods
daa
sub
iret
jo
jl
cmp
sbb
push
imulb
mov
mov
dec
out
testl
cmp
fxch
sbb
pop
loop
enterw
repnz
mov
adc
jmp
pop
aad
add
jne
ret
jecxz
fcmovnbe
fcoms
in
xchg
xor
mov
setae
movsl
ret
sub
ds
mov
xchg
loop
setp
cli
imul
andb
dec
add
in
lods
lahf
out
outsl
mov
dec
add
xor
lods
cmp
pop
xchg
cltd
cmc
mov
movsl
mov
push
bound
xor
xor
sub
clc
outsl
stos
cmp
cmp
xchg
xchg
daa
shll
shll
mov
cmp
pushf
test
mov
les
ljmp
in
ret
andl
jecxz
into
loope
fldl2t
mov
cli
cmp
jo
adc
fisubl
sbbb
add
in
mov
mov
outsl
insl
mov
add
sar
and
idivl
jo
mov
and
daa
outsl
mov
ror
mov
mov
or
mov
or
out
jmp
pop
leave
aas
mov
push
dec
clc
arpl
mov
mov
or
fstl
push
popa
or
mov
outsb
or
js
ja
jg
cs
enter
shl
inc
ret
cld
adc
xor
jle
jae
sub
xchg
aad
lods
cli
es
cmpsb
sub
or
jle
lods
cmp
ja
test
mov
call
scas
mov
jge
cmc
mov
sbb
call
arpl
aaa
ffreep
roll
leave
add
inc
ljmp
xor
cmp
pop
insl
add
xchg
push
mov
xor
pop
cmp
fs
iret
data16
ficomps
push
pop
in
mull
mov
int3
xor
xor
mov
fnstsw
test
in
inc
dec
gs
js
or
inc
stc
jne
push
cli
cmp
dec
mov
sub
in
xor
sbb
sbb
setl
mov
fisubrs
sub
rcl
dec
test
mov
dec
jl
xor
rorl
orb
inc
xor
and
dec
mov
mov
mov
insl
sbb
es
scas
addr16
xlat
adc
or
mov
jle
mov
jecxz
cmp
jno
dec
dec
dec
fdivl
push
lea
or
cmp
loope
dec
mov
jge
lahf
sbb
inc
sbb
data16
rcr
pop
push
pusha
pop
mov
int3
sahf
mov
insb
mov
mov
jg
andb
jle
cmpsl
jge
pop
push
jns
jnp
jae
arpl
ret
push
mov
jns
cmp
xchg
jle
push
out
inc
push
cltd
std
cltd
cwtl
in
xor
cwtl
sahf
sub
push
add
push
inc
call
xor
cmp
pop
outsb
stos
pop
out
xor
fbld
in
lret
cmpsl
pop
lods
mov
leave
dec
push
shll
sar
into
fldt
popl
mov
mov
xchg
mov
mov
sti
movsl
mov
daa
lret
adc
cmpsb
inc
daa
mov
mov
bnd
leave
vshufpd
xor
outsl
add
movsl
sub
pop
jg
ss
and
ljmp
push
jmp
test
movsb
mov
dec
jp
add
dec
xor
mov
jle
nop
scas
lods
mov
stos
lods
fcompl
mov
mov
mov
iretw
das
test
insb
sbb
cltd
inc
mov
inc
mov
stos
or
loopne
jmp
fsub
xor
cvtps2pd
es
and
popa
mov
fbstp
nop
mov
xor
mov
jns
mov
mov
int3
outsl
pop
mov
push
mov
cmpb
mov
aas
and
xchg
xchg
mov
shlb
adc
repz
mov
in
inc
xor
cltd
and
in
enterw
sub
mov
mov
push
xchg
fbstp
dec
sub
sub
test
fincstp
cld
outsl
mov
scas
and
push
and
imul
mov
pop
es
scas
add
jnp
stos
cmp
addr16
sub
pop
data16
pusha
fistpll
inc
add
dec
pop
lahf
ret
pop
push
leave
popf
subb
cmp
adc
dec
ror
neg
push
popa
data16
xor
add
push
adc
jb
cmp
sti
or
pop
jo
stos
adc
fs
insb
xchg
negl
xlat
jbe
mov
sbb
je
or
jae
and
rol
fwait
jbe
or
mov
int
out
mov
shrl
xlat
xchg
lods
xor
mov
cmp
imul
jns
xchg
lods
mov
push
not
dec
mov
popfw
out
shlb
or
and
mov
mov
icebp
add
lods
dec
cmp
imul
cmc
gs
call
arpl
dec
bound
inc
pop
mov
mov
mov
adc
imul
xchg
cmp
xor
mov
xchg
push
sbb
out
lea
adc
pop
sbb
jbe
cltd
std
mov
adc
dec
push
cmp
test
cmp
jg
iret
hlt
mov
lock
fisubs
int
push
decl
pushf
mov
out
scas
mov
lret
cmp
movsb
cltd
or
push
xchg
xor
fsubrl
adc
in
add
inc
sub
notl
ret
ret
jp
sbb
sbb
pop
pmaxsw
stc
addl
test
mov
mov
xlat
inc
stos
cmc
sub
mov
shrb
out
jae
movsl
jl
dec
cwtl
shll
inc
lahf
sbb
iret
xor
in
jns
fcompl
test
pop
std
inc
fsubs
or
fadd
xor
pusha
jl
adc
pop
sahf
outsb
and
inc
aad
sub
rol
inc
adc
sbb
cmp
sti
sbb
mov
xor
aad
mov
jns
jecxz
mov
mov
iret
imul
cmc
or
bound
cmp
pop
mov
push
or
jg
shll
jle
mov
loope
cmp
out
cmpsb
pop
ds
xlat
mov
rolb
add
adc
add
xchg
fbld
inc
data16
js
mov
jns
in
fwait
xchg
xor
and
sti
and
outsl
cmp
mov
xchg
cmp
push
or
add
mov
negl
js
sbb
sub
subb
daa
int
and
add
mov
dec
cmp
xor
mov
cmpsl
sub
adc
orb
jnp
mov
xchg
ror
lcall
int
filds
mov
shrb
xchg
inc
outsl
pop
jl
sub
subb
mov
push
aas
inc
ficoms
pusha
clc
or
or
jecxz
sbb
adc
out
cmpsl
dec
mov
xor
pop
icebp
lret
mov
shll
testb
or
mov
test
inc
mov
test
add
iret
sbb
add
pushf
iret
or
mov
ljmp
sub
les
nop
pop
lret
pop
adc
or
cltd
mov
jp
jo
pop
ss
mov
je
fidivrl
dec
lret
cwtl
cs
nop
push
cltd
out
jecxz
cld
and
cwtl
pop
inc
mov
loope
add
dec
cmpsl
fucomi
jnp
idiv
xchg
sub
xchg
sbb
jl
mov
pop
adcb
or
pop
mov
int3
jg
cwtl
cli
xchg
lret
sbb
out
sbb
and
push
cmp
lahf
push
jbe
xchg
outsb
mov
rcrl
cmp
and
xchg
cmpsb
mov
adc
pop
lret
mov
subw
stc
lret
iret
xchg
iret
push
push
xor
and
mov
jecxz
sub
std
les
cmp
stos
test
pop
ja
lods
mov
xor
retw
hlt
add
push
add
dec
cmp
jecxz
lock
xchg
add
arpl
or
loopne
cmpsl
es
cs
in
mov
ds
aas
cmc
fisubrs
mov
xor
xlat
mov
fstpl
mov
or
ljmp
aaa
fldcw
or
inc
push
lea
inc
xchg
pop
pop
scas
scas
inc
fs
and
out
mov
cmp
mov
dec
icebp
ficomps
das
js
add
jg
neg
testb
mov
arpl
cmp
xchg
pop
in
into
add
je
movsb
lds
mov
cmpsb
lret
andl
xlat
add
shlb
call
jae
xor
xlat
or
or
xor
add
push
xchg
addr16
outsl
mov
lods
lret
mov
and
sbb
mov
bound
cmp
mov
push
pusha
leave
mov
xor
addr16
sub
repz
dec
jns
pop
or
dec
fmull
sbb
jnp
push
pop
sbbl
loope
roll
stc
sbb
mov
packuswb
pop
sub
sub
cmp
hlt
xorl
repnz
xor
jns
bound
adc
fs
push
adc
clc
shrb
test
mov
sub
mov
adc
ror
movsl
jl
add
push
pop
push
xchg
das
int3
addr16
mov
jnp
jne
push
sbb
xchg
pop
cli
sub
pop
shr
jp
loop
ret
adc
lahf
sub
mov
jl
aam
das
cmp
enter
mov
pop
push
mov
mov
out
scas
push
and
sbb
jae
inc
lods
jmp
lret
mov
adc
lret
in
push
xor
mov
shrb
sub
ret
aad
jae
inc
mov
sub
fldl2t
ret
ss
fnstenv
pop
jl
incl
in
add
dec
or
stos
roll
ja
xchg
mov
das
mov
fxch
lods
add
ss
fiadds
pushf
lret
nop
rol
or
add
ja
ret
cwtl
shlb
push
xchg
pop
sub
sub
mov
mov
movsb
mov
int3
inc
ds
mov
int3
xchg
push
push
sbb
out
cmp
sub
ja
adc
cltd
or
mov
jecxz
sub
dec
in
les
fimuls
outsb
ret
loopne
flds
and
ss
or
hlt
insb
js
pop
push
fdivrs
les
xchg
int3
scas
jno
xor
pop
int
or
mov
xchg
fmull
daa
cmp
in
jp
ficompl
pop
push
sbbl
movsl
jns
adc
or
add
cmpb
sahf
jge
std
pop
and
in
aaa
xor
fnstsw
push
int
cmp
test
mov
jne
mov
loopne
dec
loop
mov
push
cmp
ret
in
in
push
shl
nop
inc
mov
mov
movsb
lods
mov
loop
and
lea
iret
je
out
stc
aaa
cmp
pop
ret
jne
sbb
in
rcll
xor
mov
aam
and
arpl
nop
add
out
stos
ret
enter
dec
shrl
dec
fisttpll
std
cli
inc
test
cs
mov
sbb
adc
cli
jbe
aad
inc
ficoms
xchg
sbb
adc
dec
and
push
mov
push
and
jns
mov
xchg
cmpsl
or
xlat
jmp
sbb
jno
pop
push
push
test
and
lea
out
roll
xlat
movsl
pop
sbb
adc
mov
or
das
inc
insb
roll
xchg
xor
cmpsl
xor
mov
dec
pusha
add
cmp
shlb
inc
mov
lcall
orb
pop
cmp
ja
repz
or
and
add
jnp
stc
repz
and
jle
or
out
mov
test
out
test
std
or
call
sub
pop
ss
push
sub
push
mov
mov
out
push
push
fcmove
loope
sti
mov
out
cmpsl
sar
cmpsl
add
xor
pop
sub
inc
dec
xchg
mov
mov
orl
sbb
and
pop
outsb
mov
fsub
nop
mov
mov
push
cmpsb
outsb
add
mov
pop
sahf
imul
enter
dec
cmp
xor
push
jle
pop
mov
les
cli
sub
ret
jecxz
out
adc
ret
pop
xlat
xchg
fcomip
iret
cmp
imul
add
inc
fs
popf
xor
and
pusha
sarl
repnz
mov
push
push
push
sbb
dec
push
pop
jo
stos
lret
stos
andl
mov
mov
xor
into
aas
cmp
hlt
fcomps
dec
jecxz
fnsave
neg
push
repnz
push
mov
aas
call
lods
add
or
in
xor
mov
out
add
mov
or
in
dec
cmp
mul
stos
sbb
push
cmp
dec
and
sub
jp
dec
cwtl
call
repnz
mov
es
cmc
mov
xchg
sbb
js
push
add
cmpsb
mov
jl
add
xor
jnp
ja
arpl
push
cmp
mov
sub
lods
and
jo
jp
mov
call
aad
sti
add
mov
ror
fwait
mov
and
mov
stos
xchg
pop
popa
add
lret
dec
loopne
repz
adc
leave
lcall
push
lods
and
xor
cmpsb
push
sub
add
cmp
lea
sarl
ljmp
jb
mov
inc
fcomps
test
jnp
faddp
sarl
dec
jmp
mov
add
cmp
jmp
adc
mov
and
sbb
insl
je
sbb
inc
mov
imul
rcr
xchg
stc
cmp
sub
jno
pop
inc
insl
add
icebp
push
call
lahf
jg
mov
cmp
addb
xor
clc
nop
mov
pushf
repz
jbe
shl
out
repz
lcall
jp
dec
xor
pop
ror
sub
jns
xchg
scas
inc
repz
inc
dec
pop
inc
lods
out
sbb
imul
mulb
jb
mov
les
jg
push
out
push
sbb
and
inc
icebp
inc
popa
aas
push
ret
aam
clc
xor
mov
outsb
or
mov
insb
sub
xor
xor
inc
icebp
inc
and
hlt
movsb
sub
xor
xor
mov
push
push
sar
repnz
in
mov
inc
sbb
enter
test
inc
jbe
cwtl
ret
pop
push
out
cmp
call
push
pushf
loopne
lcall
sahf
clc
ret
shrb
dec
rorb
inc
jmp
or
push
and
daa
mov
cmp
test
sar
jnp
cli
sbb
push
mov
xor
fdivrl
add
push
test
jnp
mov
lods
pushf
pusha
dec
xchg
sbb
jge
mov
andl
sahf
adcb
adc
pop
dec
pop
insb
jne
jmp
jb
and
xchg
cmp
aam
inc
lret
push
fwait
ds
inc
loopne
jno
aaa
lahf
arpl
jns
test
inc
imul
pop
mov
jge
iret
jno
dec
jmp
inc
lret
je
lock
std
lock
popf
fldl
xor
adc
and
ljmp
outsb
ss
jl
out
push
popf
loope
adc
mov
ljmp
std
mov
stos
sbb
in
jle
fs
ss
sahf
inc
hlt
pop
lock
mov
push
add
mov
cmp
cli
pop
mov
mov
call
pop
jp
fwait
out
dec
loope
jg
lcall
imul
push
popf
pop
test
cmp
cmpsl
inc
inc
adc
addb
imul
jnp
fiaddl
jl
xchg
imul
inc
push
test
ljmp
and
add
je
xchg
and
pop
mov
das
mov
cltd
mov
dec
fbstp
adc
fs
or
xlat
lret
cld
mov
daa
icebp
mov
dec
jle
mov
rcr
pop
pushf
dec
lea
mov
iret
rolb
sbb
adc
movsl
stos
int
sti
pop
mov
adc
xor
adc
mov
add
sub
inc
popa
sub
push
jno
mov
inc
xchg
outsb
loope
push
mov
and
out
push
jb
repz
cld
loopne
adc
sbb
sub
add
inc
icebp
jle
and
cld
dec
adc
sti
loope
xchg
jecxz
sbb
adc
imul
mov
nop
mov
jg
scas
sahf
sti
jl
iret
jg
sbb
adc
add
inc
mov
sub
ljmp
and
cld
dec
repz
mov
sub
cmp
stos
cltd
test
xor
push
add
jb
add
inc
rcl
ret
addr16
pusha
dec
out
ret
inc
dec
and
outsb
icebp
mov
xchg
xor
push
imul
jbe
add
nop
xor
adc
pop
fbld
addl
fsts
scas
adc
mov
push
ret
outsb
cmp
int3
pop
out
adc
icebp
popa
mov
jmp
cld
mov
add
andl
sbbb
clc
fwait
mov
push
xor
cld
xchg
aas
xor
movsl
repz
or
sub
xor
popf
and
pop
xor
mov
cmp
push
fwait
pop
mov
dec
mov
cld
mov
sbb
mov
lahf
and
ss
cltd
sub
icebp
and
push
jl
cmpsl
mov
fadd
movsb
dec
fbstp
popf
push
xor
js
sbb
sahf
pop
paddsb
or
cs
ds
pop
outsb
dec
shll
dec
jp
jns
dec
enter
stos
leave
lods
jmp
sbb
arpl
cmp
insb
xor
call
loope,pt
popa
test
test
clc
aam
push
mov
xchg
sub
pop
xor
jbe
mov
or
and
add
invd
lods
mov
sub
sbb
jg
mov
stos
jg
jmp
xchg
outsl
xor
xlat
int3
insl
out
lea
jae
xchg
out
or
fstpt
xchg
gs
pop
cmp
jmp
mov
icebp
mov
pop
ja
push
adc
dec
insl
sti
push
stos
mov
dec
jl
or
int3
mov
sub
fldcw
das
lcall
scas
push
fnstenv
sarb
insb
inc
sbb
iret
aam
rorl
es
in
cwtl
je
or
stos
lea
pop
mov
dec
hlt
out
bound
mov
not
and
or
mov
mov
outsb
pop
in
shl
xchg
sbb
push
sub
push
idiv
xchg
sub
adc
jb
jns
push
jg
shll
pop
out
cmp
clc
push
adc
pop
popf
xor
jb
sahf
xor
pop
in
or
and
setnp
push
mov
xlat
mov
xchg
aaa
mov
outsb
sub
jecxz
insl
sbb
cs
jns
add
pop
xor
repnz
inc
cmp
ror
lahf
loop
loopne
loopne
pusha
pop
cltd
popf
repnz
loop
mov
pop
push
mov
int3
pmaxub
and
leave
jns
outsl
ret
mov
add
hlt
mov
lret
ffree
icebp
lcall
jb
sbb
imul
xchg
xchg
cmc
jle
sbb
cmp
aad
imulb
lret
out
enter
into
sbb
dec
jecxz
jne
mov
stos
jmp
sub
mov
bound
cmp
cmc
adc
shlb
hlt
ja
mov
ret
test
pop
add
xchg
in
sub
jns
cmp
adc
push
push
jmp
and
lods
mov
pop
stos
and
cmp
jge
pop
aad
sub
iret
mov
jge
xor
xchg
xchg
mov
in
sub
adc
adc
push
add
orb
inc
push
and
ret
cmpsb
arpl
outsb
dec
hlt
dec
adc
lods
dec
cmp
loop
jle
xor
jno
icebp
aad
add
cmpsb
icebp
test
inc
sti
pop
jnp
add
cltd
mov
push
sub
adcb
imul
testl
jg
add
xlat
out
enter
dec
adc
dec
jns
or
cmp
pushl
inc
sbb
test
fwait
inc
or
push
add
xchg
addr16
notl
loop
or
shr
stc
xor
pop
sub
cs
int
mov
push
std
dec
sub
cld
int3
addl
and
insl
nop
jae
cli
stos
cld
inc
xor
mov
gs
adc
push
inc
mov
push
fiadds
pop
sbb
xlat
sbb
lods
add
cmp
aad
mov
dec
mov
jo
push
outsb
cmp
xchg
call
negl
rcrl
add
rcrb
inc
js
popa
push
jl
into
xchg
in
adcl
pop
mov
push
sub
fstl
xchg
mov
arpl
cmpsb
xorb
movsl
mov
lods
or
movsb
cld
mov
add
lock
std
and
jns
push
inc
pop
out
call
out
std
scas
nop
or
and
inc
mov
js
pop
out
push
cltd
shll
call
sti
test
scas
clc
iret
sahf
xor
sbb
in
and
or
in
inc
dec
cltd
ja
fidivs
push
out
in
scas
mov
mov
adc
icebp
imul
sti
fiadds
push
imul
jecxz
gs
test
push
lea
js
mov
jne
pop
loopne
push
inc
pop
mov
into
aaa
jmp
mov
or
mov
jmp
aaa
mov
add
sbb
mov
cld
fldl2t
sub
rcrl
cmp
jnp
mov
fsubl
loopne
scas
lahf
testl
add
loope
xor
xchg
sub
nop
or
or
push
ds
movsl
fdivrs
cmp
hlt
mov
push
aad
mov
in
shll
les
push
mov
dec
lret
fbstp
outsl
or
lods
inc
mov
insl
adc
pop
int3
stos
or
lods
jmp
add
jmp
push
and
add
inc
xchg
push
add
testl
icebp
nop
pop
ficoms
or
out
push
in
xchg
shlb
xchg
mov
inc
sbb
inc
cmp
in
and
push
in
and
lret
out
pop
and
jne
and
sarl
fdivl
mov
cli
pusha
mov
mov
bndstx
cmp
push
push
adc
or
jo
cs
andb
mov
jl
cmp
out
mov
lcall
pop
cmp
cld
data16
call
out
mov
and
sub
notl
lcall
cmp
lds
les
out
mov
xor
mov
shrl
gs
add
je
adc
cld
inc
fdivr
pop
cmp
ds
mov
scas
das
repnz
testl
les
orb
push
aaa
scas
xor
cmc
and
mulb
sub
and
decb
popf
pushl
and
cmp
clc
cmp
sub
pop
xor
xchg
xchg
sub
lea
mov
jno
dec
out
mov
mov
andl
jnp
cmp
inc
inc
jno
mov
int3
push
sub
nop
sub
hlt
mov
cwtl
dec
in
in
rorl
imul
or
and
sahf
scas
cmp
sub
out
mov
notb
add
imul
cmc
cmpl
test
mov
mov
mov
js
scas
xor
imul
cmpsl
push
faddl
mov
jnp
sub
js
lods
inc
jne
adc
cmpsb
cmp
push
cmp
jae
mov
xchg
or
pop
adc
mov
or
cmpsb
stos
subb
push
decb
out
jo
lret
sub
xchg
inc
cmp
imul
movsb
mov
adc
cmp
in
cltd
insb
sbbl
add
add
add
out
cmp
push
add
das
or
dec
sbb
aam
adc
push
mov
ljmp
in
out
ret
push
mov
rorl
outsb
mov
xor
mov
push
push
inc
ficompl
movsb
pop
mov
push
ds
pusha
jo
xchg
ja
test
jge
push
cmp
jle
pop
adc
cmp
or
adc
xor
dec
xlat
dec
cmpsl
mov
iret
in
push
pop
js
ja
repnz
fildl
decl
push
mov
or
sub
and
stos
ja
lods
dec
cmpsl
sub
cmp
lds
xor
pop
sub
push
or
popa
cmp
inc
ficoml
dec
fisubs
cmc
sub
mov
mov
ret
and
push
push
jle
out
out
xor
fs
movsl
pop
rclb
shl
dec
out
test
add
cwtl
mov
and
mov
shll
movsl
pop
jae
xchg
push
xchg
inc
add
jmp
mov
sbbb
ret
les
push
inc
aas
dec
mov
cmp
sub
in
pop
inc
lahf
jae
in
dec
fists
cs
cmpsl
out
mov
adcb
rclb
mov
add
cmp
xchg
pop
mov
negb
testl
add
loopne
mov
jnp
or
cwtl
mov
dec
dec
jle
lret
sti
fwait
cld
and
cltd
test
fisttpll
jp
mov
sbb
mov
test
repnz
push
dec
pop
add
jp
xor
loope
arpl
nop
sub
mov
sub
fcoms
enter
leave
fnstsw
stos
enter
pop
jmp
aaa
pop
int3
out
lahf
pop
push
lcall
adc
xor
lret
js
or
mov
ja
jnp
out
cmp
fcmovb
sbb
sti
movsb
repnz
mov
push
outsb
loope
lock
out
dec
push
and
popf
jb
xchg
bound
js
jnp
sbb
cmpsl
or
lods
mov
mov
lret
bound
push
xlat
push
popf
pop
loop
fwait
scas
out
push
xchg
stos
sarb
lahf
mov
in
mov
repz
xchg
ret
sbb
out
pushf
dec
out
xor
mov
jno
sub
or
cltd
pop
add
lods
sub
in
mov
stos
sub
leave
pop
jnp
xchg
lds
cmp
adc
aaa
jno
out
fldl
sbb
out
imul
in
dec
shrl
jmp
mov
xchg
pop
xor
xchg
lea
ret
mov
xchg
rorb
dec
pop
push
mov
mov
pop
lds
orl
jmp
dec
adc
push
shlb
in
ret
stc
pop
dec
out
inc
pop
call
int3
mov
push
daa
jnp
arpl
repnz
cld
inc
xor
insb
pop
lcall
push
adc
lcall
out
jge
lret
test
pop
out
add
mov
mov
ds
lea
add
pop
sub
lret
cltd
jo
jne
nop
aad
addb
call
pop
mov
xchg
adc
pop
pop
imul
push
lds
fisubs
xchg
jo
push
cmp
andl
testl
cmp
sbb
fnstenv
lret
fsubl
cmpl
sub
in
mov
and
pop
scas
inc
out
call
ss
out
xor
loop
repnz
cmp
jnp
push
cwtl
xchg
out
mov
cmpsl
inc
sub
ljmp
loopne
clc
imul
push
mov
ljmp
xchg
ja
test
pop
pop
push
std
out
cmpsl
fidivrs
cmp
adc
sub
cmpsb
cmp
jmp
loopne
inc
adc
pushf
jb
push
sahf
push
inc
sti
mov
lcall
sub
aad
pop
je
into
jp
andb
mov
jnp
inc
adc
fidivl
fcmovu
ds
int
adc
stos
cmp
sub
inc
dec
mov
jns
pop
aaa
cmpsl
or
fisubs
and
jecxz
jne
cmp
lcall
cmc
pushf
out
insb
iret
roll
and
jb
mov
and
dec
pop
dec
call
add
mov
insl
and
imul
lods
mov
adc
enter
lcall
orb
pop
mov
cltd
cmp
lcall
jne
pop
icebp
xchg
imul
inc
ss
cmc
mov
out
cld
in
fidivl
adc
sub
mov
dec
int
mov
add
les
fdivs
std
mov
and
or
lahf
outsb
jl
mov
push
sub
jmp
push
jne
cs
push
iret
faddp
xor
or
mov
inc
jl
insl
insl
mov
ljmp
popa
test
sbb
outsb
loope
imul
clc
dec
mov
jg
push
pop
dec
xchg
add
and
shll
pop
pop
out
mov
das
xchg
fistpll
insl
lcall
sarl
push
ss
ds
scas
push
addr16
lret
int3
mov
push
scas
xorl
ret
arpl
in
sub
insl
jg
sbb
cmpsb
aad
pop
mov
out
scas
xor
loopne
les
mov
mov
popl
cld
mov
loop
cs
fcomps
add
rorb
inc
dec
cmc
adc
hlt
insb
sbb
adc
addb
nop
and
cmp
das
rcrb
push
dec
fmull
cltd
adc
ss
lods
add
icebp
sbb
fdivl
cmp
jno
cmp
push
push
fcoms
xor
fs
cmp
test
cmpsb
mov
push
jno
pop
mov
mov
and
mov
addl
lods
lret
es
jnp
xchg
xor
lret
jnp
push
imul
add
pop
loope
pop
pop
sbb
imul
fmuls
cmc
fidivl
in
outsb
outsl
adc
push
xchg
lret
aaa
mov
xor
and
cmp
cmpsb
sub
sub
int3
lods
pop
jae
test
lret
addr16
mov
mov
sbb
jp
dec
xchg
inc
inc
les
push
ret
ja
sub
and
fs
dec
and
jg
add
cmp
pop
push
push
jmp
or
imul
dec
pusha
in
and
aam
insb
pop
adc
int
fnsave
push
jae
xchg
data16
sub
mov
addl
dec
push
ret
sbb
stos
pusha
jle
ret
je
out
in
test
mov
mov
ret
repnz
bound
lods
scas
pop
push
dec
jg
hlt
xchg
add
dec
or
stc
mov
sbbb
sub
adc
mov
mov
lcall
add
push
inc
sahf
lds
cli
rcrl
sbbb
and
addl
mov
cmp
icebp
test
scas
add
adc
iret
testl
jo
push
dec
movsb
addr16
icebp
cmp
aas
lea
mov
dec
inc
mov
cmp
push
dec
cmpsl
pop
adc
enter
test
lds
jae
sbb
xchg
xlat
pop
fwait
aad
imul
mov
push
scas
movsl
jns
stc
cmpsl
scas
adc
dec
leave
js
pop
test
xchg
jb
jno
mov
dec
mov
repz
sarl
xchg
pop
adc
xlat
pop
lds
shrl
push
cmp
cmovbe
js
xchg
mov
cmp
out
pop
pop
sbb
or
gs
cvtdq2ps
cmp
js
pop
push
pop
or
or
cmpsb
sub
ja
enter
std
subl
mov
push
dec
jle
lret
lahf
sbb
es
pop
imul
lahf
push
xor
push
adc
mov
fs
gs
rcll
mov
dec
iret
fists
mov
pop
leave
push
je
xorl
dec
sub
stc
mov
jmp
mov
add
es
pusha
repnz
lods
lods
mov
sub
push
sub
lock
mov
mov
cwtl
adc
call
dec
adc
inc
in
and
mull
enter
jle
neg
push
ds
insb
testl
mov
out
lcall
cmp
jle
push
cwtl
dec
out
out
insb
shll
pop
mov
dec
mov
enter
pop
repz
push
or
adc
push
lahf
or
into
dec
outsb
jmp
test
orl
or
in
enter
jl
in
movsl
jne
fisubs
push
stos
pop
addb
cmpsl
out
sbb
push
nop
pop
rorl
loope
add
fildll
lock
outsb
and
orb
stos
jno
pop
mov
mov
and
sub
jp
mov
xlat
xchg
divb
sub
or
jecxz
push
ljmp
mov
adc
mov
out
mov
jmp
mov
jno
and
cs
push
arpl
sub
ret
jp
xchg
pushf
das
adc
sahf
clc
adcb
and
pushf
sub
sub
cwtl
dec
mov
mov
sbb
push
and
arpl
push
shr
jle
or
mov
mov
fadds
outsl
xor
into
xor
sub
push
dec
popf
xor
inc
push
andl
xor
xor
movsl
jne
dec
jecxz
jp
xchg
mov
mov
faddl
lret
lahf
xchg
dec
mov
sbb
fs
je
push
lock
movsl
stc
fs
sub
and
ret
add
in
cwtl
fucomi
leave
jb
sub
aas
aad
xchg
and
hlt
cmp
xchg
out
lcall
xchg
mov
ljmp
pop
jno
jmp
cmp
or
iret
ds
add
adcb
enter
push
pushf
sub
xchg
adc
dec
movsl
xor
jle
sbb
call
pop
mov
cli
insb
sub
pop
lahf
push
push
xchg
test
movsb
cmp
int3
imul
adc
pop
mov
cs
test
add
adc
rorb
push
and
cmpsb
mov
dec
sub
lahf
imul
icebp
jno
adc
test
lret
imul
xor
daa
sub
mov
xchg
cmc
inc
loopne
fimull
movsb
jge
fwait
lods
mov
add
xor
sub
popa
cmp
add
sti
rolb
ret
cmpsb
cs
xchg
les
js
fs
loop
fcmovnu
and
or
add
iret
fwait
mov
pop
data16
out
aas
push
out
test
lret
ret
mov
es
sbb
dec
sub
cmp
add
adc
outsb
mov
sbb
pop
sub
pop
int
popa
jne
mov
push
sub
and
push
push
inc
into
pusha
stos
daa
xchg
out
ljmp
mov
xchg
mov
xlat
sub
pop
xor
and
and
movsb
mov
xchg
or
ficompl
mov
inc
xor
push
mov
pop
outsl
daa
dec
add
pop
fsubrs
mulb
mov
dec
arpl
jle
insl
int
jnp
jl
arpl
dec
cmp
rorb
add
cld
mov
ret
pop
test
dec
xchg
add
pop
in
sbb
jns
js
out
jle
adc
mov
lea
mov
aam
aaa
js
inc
and
inc
dec
xchg
xchg
xor
scas
out
lods
pop
enter
shr
push
ljmp
in
and
jo
fsubr
push
push
out
into
xchg
data16
jo
cmp
testl
xlat
inc
dec
stos
xchg
je
out
mov
mov
add
mov
pop
lret
popa
xchg
xchg
mov
sbb
xchg
lret
out
push
std
mov
cwtl
les
pusha
pushf
in
mov
mov
jae
xchg
jb
cmp
mov
pop
pop
cmp
pop
cmp
test
dec
filds
jne
cli
pop
pop
ljmp
test
dec
stc
icebp
mov
stc
xchg
push
setno
stc
push
out
and
js
imul
insl
cmc
sbb
cltd
leave
fdiv
imul
dec
loopne
notb
scas
in
lret
sarl
movsb
inc
push
push
into
sti
pushf
xor
push
in
std
xchg
hlt
pop
in
sub
inc
int
xor
les
fidivrs
aad
into
jns
mov
sbbb
mov
test
adc
mov
jl
test
cmc
mov
jp
adc
sbb
outsb
sub
cmp
xchg
daa
and
mov
dec
xchg
mov
movsl
cmp
idivb
scas
pop
ret
sti
in
xchg
stos
stos
cmp
mov
testl
add
fstl
and
das
shll
aam
bound
fwait
loopne
pop
xchg
xchg
mov
call
mov
nop
out
iret
data16
stos
fadd
fwait
cmpsl
repnz
adc
jle
stc
nop
pusha
mov
dec
in
pminsw
mov
enter
lods
mov
aad
xchg
pop
inc
mov
add
mov
mov
cltd
lret
mov
push
cmp
jne
and
sub
jmp
mov
dec
pop
std
adc
insb
and
mov
add
je
and
or
xchg
and
sub
inc
mov
mov
cmp
jecxz
cmp
test
outsl
push
inc
loopne
push
rclb
lret
aaa
aaa
pop
repz
and
daa
sub
inc
movsb
fdivl
ficomps
aam
out
sahf
shrl
adc
in
xchg
enter
pop
into
jl
fwait
rep
add
lahf
xchg
push
jae
xor
bound
dec
mov
ret
pop
aam
mov
out
xor
imul
xor
inc
adc
aam
mov
roll
gs
test
xor
sub
adcb
jl
jbe
xchg
mov
lret
faddl
adc
mov
sub
mov
or
daa
mov
repnz
xchg
sbb
outsb
lea
or
les
cmp
cmp
jae
xor
daa
xchg
xchg
addl
dec
add
mov
stos
pop
shr
pop
mov
sahf
xor
pop
xchg
mov
pop
jnp
decl
sahf
das
in
fidivrl
xchg
mov
sti
popl
insb
lcall
pop
mov
movsb
fildll
fwait
adc
insb
aas
mov
inc
jmp
cltd
dec
jmp
sub
loope
scas
cltd
lods
inc
popa
ljmp
push
rorl
push
andl
and
xchg
test
cmp
jne
adc
leave
xchg
pop
stos
push
jmp
or
stos
push
jp
aaa
leave
pop
out
notl
scas
shrl
xlat
inc
popf
mov
inc
pop
sub
pop
int
sbb
mov
dec
cmp
xor
dec
pop
lods
jbe
adc
or
aam
adc
aas
shll
mov
shll
mov
jb
js
out
lea
pushf
subb
cmc
loope
repz
out
mov
stos
filds
adcl
mov
mov
jecxz
test
out
imul
adc
push
mov
xorl
pusha
repnz
adc
mov
push
push
xchg
pop
dec
jge
mov
dec
in
dec
push
and
jmp
les
sub
jp
loopne
je
fcmove
pop
or
cmp
mov
sahf
mov
dec
sub
push
push
mov
repz
out
icebp
jae
dec
addr16
mov
subl
hlt
lcall
xorb
lcall
dec
mov
int3
push
into
gs
in
test
rorb
sarb
cmp
aaa
cmp
push
inc
cmp
xor
xchg
sub
fsubrs
rcrb
test
xchg
mov
jecxz
and
std
add
xchg
xlat
pop
out
pop
daa
dec
pop
fimuls
xor
mov
xor
push
addr16
test
xor
cld
and
test
addr16
cltd
lods
out
test
xchg
sub
hlt
stos
sub
jg
jbe
ja
pop
xchg
les
pop
add
adc
cmp
fs
ret
xchg
bound
sbbb
adc
sbb
stos
inc
ss
and
cmp
pop
dec
or
imull
popa
loope
shll
cmp
das
ret
push
mov
inc
or
or
adcb
outsb
xchg
and
xor
daa
cmp
or
icebp
cmp
shrl
jl
mov
stos
mov
stc
mov
call
in
mov
aaa
cmp
and
adcl
adc
imul
mov
xchg
mov
subl
dec
xor
inc
lods
outsl
and
aad
mov
and
hlt
adc
cmp
xor
mov
xchg
das
das
jmp
imul
mov
add
cld
and
add
push
fcoms
jae
insl
fs
cli
mov
sti
mov
push
loop
test
stc
inc
pop
xor
sti
fsubrp
out
pop
cmc
in
or
push
mov
cwtl
xlat
jnp
in
jno
mov
mov
out
js
xor
pop
stos
call
in
jo
lods
mov
hlt
repz
out
xlat
lahf
sub
sbb
xchg
repz
and
mov
and
aad
jle
outsl
lcall
sbb
test
lret
sti
ret
sbb
add
dec
mov
fdivp
and
gs
adc
orl
sbb
mov
mov
pop
lret
out
adc
jo
push
pop
je
dec
mov
shr
xchg
jecxz
lods
lds
mov
adc
adc
jns
sub
cli
and
lds
jmp
push
out
stos
mov
pop
lods
das
dec
mov
rep
lods
and
dec
jae
test
pop
jns
add
mov
sbbl
mov
in
scas
mov
rcrb
cwtl
adc
jp
imul
in
pop
ja
fcomi
sub
dec
xlat
ljmp
test
mov
xchg
insl
and
and
dec
inc
and
test
test
dec
fiaddl
je
add
inc
and
lds
mov
jne
push
pavgw
add
pop
dec
test
cld
je
jmp
sbb
lcall
in
mov
movsl
push
movsbl
shrb
mov
adc
aaa
xlat
shlb
aas
insl
xor
or
into
xchg
cmp
lahf
xlat
pop
mov
inc
sub
pusha
mov
pop
ja
icebp
mov
iret
push
rol
filds
hlt
and
ret
pop
sbb
aad
test
loope
sarb
sub
sti
xchg
pop
sbb
cli
sbb
mov
nop
repz
jno
out
pop
sub
std
clc
das
and
xor
arpl
sub
pushf
ret
pop
out
sbb
jbe
xchg
mov
xor
mov
nop
or
mov
adc
inc
push
inc
xor
ljmp
popf
xor
ljmp
enter
loope
mov
cmp
repz
cmp
data16
shrb
xchg
imul
cmp
fs
mov
jmp
push
mov
daa
adc
and
cmp
fistpl
insl
stos
adc
jle
inc
psubusw
xchg
popa
xor
mov
inc
data16
fwait
mov
out
lods
test
rep
jae
push
scas
xchg
sub
aam
aad
sahf
fimull
pop
clc
pop
insb
dec
in
popf
data16
cmp
out
xor
jge
push
in
jg
stc
cltd
add
out
not
fdivl
test
js
add
aad
mov
scas
cmp
pop
icebp
mov
ja
adc
mov
cmp
mov
inc
mov
add
mov
or
and
sti
push
mov
pop
ljmp
push
aam
push
pop
test
aas
aad
lods
and
add
outsb
movsl
ja
stos
and
cmp
dec
pop
and
lods
push
jo
push
xor
mov
repnz
insb
fmul
movsl
cmp
jae
xchg
mov
cmp
inc
lock
imul
dec
outsl
xlat
enter
int3
inc
lods
sub
ljmp
fdivl
or
nop
call
push
push
nop
mov
push
lcall
cmp
jmp
mov
repz
addr16
jo
push
push
jno
or
lds
mov
cmp
enter
jmp
out
pusha
orl
and
stc
lea
xor
push
out
push
jle
jne
mov
mov
addl
mov
cltd
push
out
lret
out
mov
cmc
je
mov
pop
sub
shl
jae
mov
adc
add
enter
xchg
and
fldl
scas
ja
int
jge
ss
mov
pop
mov
cli
mov
es
xchg
sub
add
clc
sahf
xor
adc
inc
xchg
lcall
jbe
call
in
or
mov
ret
mov
pop
call
adc
mov
sub
mov
inc
loopne
jmp
pop
cld
push
cmc
out
xchg
dec
ffree
lret
lret
lahf
xchg
addr16
xor
fiaddl
jg
sub
rorl
inc
push
mov
mov
mov
aas
fwait
loope
mov
js
jle
and
jns
xchg
inc
nopl
fdiv
das
pop
jl
jl
pop
mov
or
push
jno
xchg
push
sti
in
arpl
inc
bound
imul
sbb
pop
sbb
popa
dec
imul
test
inc
repz
xor
je
lea
cmp
mov
sbb
pop
xor
popa
mov
xchg
xchg
mov
cs
aaa
lret
jnp
sbbb
xlat
mov
addr16
push
fdiv
or
xchg
sub
ja
int3
iret
mov
dec
cmc
repnz
inc
or
fnstenv
dec
and
out
stc
jb
cmp
or
mov
test
inc
enter
mov
jb
adc
fwait
ret
pop
pop
in
ja
jno
cli
mov
and
pusha
pushf
lea
jle
mov
faddl
sbb
adc
pop
rcrw
mov
icebp
fnsave
and
pop
and
mov
mov
xor
add
and
fs
mov
jge
cmp
fisttps
scas
inc
inc
repz
in
mov
pop
leave
mov
frndint
cmp
push
pop
ja
inc
in
out
mov
in
pop
in
sub
pushl
out
mov
in
cwtl
xchg
jo
loope
or
rcll
rclb
in
adc
cwtl
gs
xlat
and
and
fdivl
inc
cmpsl
jnp
sti
jbe
adc
mov
add
cmpb
imul
push
jp
mov
cmp
lcall
mov
cli
hlt
mov
shrl
inc
cld
roll
jae
cmp
aaa
scas
push
sahf
mov
add
rcr
outsl
scas
sub
dec
and
fcmovu
add
push
inc
imul
mov
xchg
in
ljmp
clc
adc
adc
xor
pop
mov
aam
pop
push
mov
or
push
sbb
sub
les
loop
mov
shlb
cmp
fsub
and
outsl
cmpsb
in
push
add
mov
fistps
cmp
push
loope
repnz
dec
and
shlb
mov
pop
in
pop
repnz
loope
nop
loop
jns
mov
jg
in
sub
vpsllw
ds
dec
scas
pop
mov
mul
add
iret
pushw
xchg
test
in
pusha
inc
push
or
adc
cmc
das
ljmp
sti
fwait
xor
jmp
mov
add
xor
ds
push
aas
adcb
xlat
int
push
in
pop
in
mov
xchg
xchg
sbb
iret
adc
lock
ja
and
sub
sbb
loope
mov
rolb
es
xchg
add
pushf
inc
add
adc
pop
xchg
cmpsb
mov
rcrb
aad
sub
xor
mov
jno
data16
stc
push
mov
aaa
and
stos
adc
lock
sbb
adc
push
jmp
lea
inc
push
scas
mov
mov
or
insb
cmp
out
inc
fdiv
mov
fcoms
test
inc
inc
mov
das
or
xor
nop
jp
dec
les
cmp
in
mov
push
or
jnp
loopne
add
ja
jle
dec
loope
and
aaa
dec
icebp
sbb
pop
jno
mov
sbb
fsubs
add
add
cmpsl
ret
mov
cmp
inc
aad
adc
mov
inc
dec
notl
lods
mov
cmp
sub
subl
lcall
cmovb
mov
jmp
mov
jns
loope
cmp
shrl
adc
mov
jne
mul
jno
mov
mov
pop
sub
fwait
out
or
imul
mov
adc
jne
in
aaa
inc
fistpll
lret
pop
pop
dec
lock
cmp
mov
pop
fwait
and
dec
fmull
push
sahf
jmp
cmp
sahf
dec
in
xchg
fiaddl
aam
sahf
jae
mov
add
push
movsl
sub
inc
in
pop
sbb
inc
mov
movsb
in
jbe
mov
insl
in
pop
add
pop
out
dec
fdivrs
jno
mov
lcall
pop
cmp
jae
insl
testl
dec
pop
icebp
dec
ret
loope
rep
js
scas
clc
cmp
lods
arpl
jge
je
out
bound
test
cmp
cmp
and
or
repnz
pop
inc
scas
mov
jnp
sahf
lods
das
out
cwtl
jb
sub
add
leave
or
add
ds
movsl
pop
fwait
or
adc
sub
scas
jno
jb
mov
xchg
or
mov
mov
and
jmp
jno
xlat
add
pop
je
fiadds
ja
lahf
daa
add
and
mov
rclb
out
shll
jne
push
in
in
cwtl
push
inc
nop
jae
sbb
aas
dec
dec
repnz
sub
stc
nop
jge
mov
jp
xchg
add
jecxz
jp
or
and
pop
jbe
into
aam
inc
fisubl
adc
xchg
ja
popa
notl
cmpsl
stos
mov
add
je
adc
stc
and
and
and
lea
mov
stos
inc
rolb
push
or
mov
daa
mov
inc
cwtl
sub
xor
push
dec
and
lds
icebp
pop
jge
inc
popa
sbb
lahf
testl
lret
cld
dec
fbstp
cmpsb
icebp
iret
jb
add
and
lock
push
cmpsl
ds
arpl
lds
pop
faddl
jle
jmp
fnstenv
insb
lods
ss
imul
inc
sti
pushf
xor
test
in
mov
jns
cmp
xchg
idivl
fxch
push
in
jge
sub
sahf
je
or
mov
leave
fwait
jecxz
pop
xor
pop
pop
dec
cmp
cmp
mov
xchg
xchg
add
les
cs
incb
jno
mov
push
sbb
sbb
inc
fcoms
arpl
xchg
mov
jge
mov
push
int3
lret
mov
insl
outsb
mov
jno
add
xor
xor
repnz
insl
jge
pop
xor
dec
push
js
push
outsb
dec
popa
dec
lods
inc
popa
push
lods
fnstenv
pop
ljmp
xor
and
and
jl
adc
adc
ja
mov
nop
sbb
andb
fdivrl
sub
pop
lea
pop
mov
into
insb
cli
pop
adc
ja
xchg
pop
sub
mov
mov
arpl
dec
aad
in
aas
push
and
mov
xchg
xchg
and
and
mov
xor
pop
inc
pop
rol
mov
addr16
and
popf
in
imul
ret
mov
fisttpll
jecxz
and
out
call
cltd
pop
call
sbb
int
ljmp
sbb
test
ret
fwait
push
pop
popf
push
rorl
int
fisubs
mov
mov
addr16
sub
ljmp
dec
outsl
pop
pushl
mov
mov
jb
sub
lcall
and
ss
pop
pusha
mov
dec
loopne
pop
dec
mov
mov
mov
mov
sub
movsl
xlat
das
rolb
push
sbb
push
out
sahf
out
adc
pop
outsl
push
cs
sbb
inc
dec
pop
jge
loop
lahf
es
jns
scas
mov
outsl
xor
pop
jge
mov
mov
xlat
mov
pop
add
push
jmp
lods
popa
push
in
in
lds
lods
add
in
insl
push
mov
scas
mov
ror
ss
clc
daa
dec
add
and
aad
pop
cli
lcall
lods
dec
pop
aaa
mov
mov
mov
mov
jbe
fdiv
xchg
outsl
and
lock
and
dec
out
adcl
sbb
divb
stc
cmp
pop
sub
push
aas
aaa
mov
fdivl
orl
ret
sbb
jnp
lods
ljmp
ret
dec
mov
mov
jecxz
pushf
fs
insl
push
inc
dec
pop
or
pop
je
mov
mov
xlat
jae
mov
aad
incl
fsubr
aaa
and
sbb
xor
pop
outsl
movsb
or
xchg
push
sub
push
clc
and
movsl
jbe
xlat
dec
sub
push
test
rcrb
lods
ds
cmpsb
mov
pop
fs
jmp
test
push
arpl
adc
in
outsb
fs
in
fwait
push
xor
insb
mov
push
or
adc
leave
push
lret
negb
jns
sub
mov
popf
mov
xchg
stos
xchg
stos
mov
xor
sub
jno,pt
dec
mov
fwait
mov
pop
test
or
mov
pop
std
adc
in
pop
push
in
iret
je
sahf
movsl
lock
inc
ja
shll
je
popa
xchg
push
call
fidivs
adc
popa
sub
sub
mulb
stc
rorb
ds
out
mov
sbb
push
repz
cmp
int3
pop
daa
int
mov
addr16
js
or
repz
sub
cmp
mov
dec
in
shrl
inc
arpl
dec
mov
dec
pop
ds
xchg
js
ret
aas
pop
out
imul
cli
das
cmp
nop
addr16
sub
test
adc
sbb
inc
popf
cmp
ljmp
push
lea
je
lods
fwait
cmp
xor
data16
push
scas
gs
dec
xchg
xor
fldt
mov
cwtl
lret
es
push
test
ja
mov
fs
insl
in
popa
cmp
jmp
cs
pop
or
test
and
scas
dec
popa
dec
movsl
sbb
push
arpl
or
push
push
mov
imul
stc
fldcw
out
push
jmp
aad
adc
xor
and
xor
dec
bndstx
adc
cmp
pop
inc
cmp
sbb
mov
aam
sub
xor
fdiv
notl
stos
sub
cmp
or
mov
popa
mov
push
fdivs
push
or
lds
mov
lds
mov
andb
lret
mov
mov
lods
popa
outsl
pop
fistpll
jns
cmpl
call
in
pop
xlat
gs
inc
in
fistpll
shlb
push
ret
in
mov
or
nop
shlb
in
lahf
and
stc
push
rol
sbb
fistpl
sub
pop
rcrl
or
sub
pop
dec
jae
pushf
inc
mov
lods
sbb
or
leave
push
mov
rorb
dec
in
lock
outsl
push
mov
adc
sub
call
or
shrb
shll
sbb
aam
jp
fwait
mov
js
test
inc
leave
stc
mov
xchg
add
dec
jnp
fdivrl
xchg
aad
aaa
les
mov
mov
pop
push
in
test
sbb
sbb
outsb
sbb
mov
addb
out
sbb
ja
pop
and
mov
jnp
jb
jp
sbb
int
push
fs
test
mov
xchg
mov
aad
cmc
pop
in
cmpsb
jno
cmpl
lcall
inc
loope
or
outsb
and
dec
sbb
outsl
mov
sub
jp
or
scas
cmpsb
dec
pop
insb
cli
dec
outsb
sub
aad
mov
mov
test
push
or
outsb
shr
pop
addb
jbe
into
mov
minps
movsb
pop
push
mov
sbbb
push
shrb
xor
mov
negb
sub
add
das
cmpsb
cmpsl
cmp
ret
fstpt
push
push
sub
add
mov
push
adc
xchg
lods
mov
je
inc
loopne
mov
or
and
mov
push
lahf
clc
inc
pop
mov
cmp
orl
ffree
js
cld
inc
pop
jmp
mov
daa
cmp
push
dec
loope
push
in
mov
arpl
sbb
fiaddl
nop
add
pop
fwait
inc
push
negl
push
push
or
inc
fistpl
js
int3
xor
mov
xor
test
imul
clc
or
add
arpl
or
push
add
jle
ss
into
sub
jg
test
pop
lods
push
or
adc
je
incb
pop
xchg
mov
xchg
insl
pop
insl
repnz
imul
lret
cmp
ret
cmc
xchg
insl
enter
mov
sub
mov
out
xchg
sub
and
rclb
adc
xchg
pop
loop
xchg
mov
cmp
or
sahf
cltd
js
iret
mov
cmp
jecxz
insb
jmp
mov
ret
jp
xor
daa
inc
jg
and
ds
pop
lahf
rol
aad
adc
fs
movl
or
or
jne
fwait
mov
pop
xchg
adc
in
or
fidivs
jb
leave
mov
mov
add
enter
outsl
sub
pop
enter
inc
daa
jns
xor
int3
adcb
jnp
outsb
cmpsl
mov
xor
stc
nop
incb
xorb
add
jbe
sub
pop
mov
jns
xchg
testl
or
xchg
pop
jmp
xchg
push
push
cmc
mov
stos
es
adc
test
xchg
or
sbb
inc
cmp
outsl
shl
rcll
mov
shl
sbb
jbe
in
mov
xchg
and
xchg
sub
subl
inc
fiadds
jp
jmp
movl
jge
xchg
popf
pop
in
js
push
push
in
jge
xchg
and
mov
jecxz
rcll
aam
jo
sbb
cmp
in
call
testl
in
jecxz
or
ret
jge
cmc
inc
out
xor
testl
xor
popf
fwait
push
push
je
xor
inc
sub
aaa
pop
lret
clc
add
xor
dec
cwtl
push
cmc
lret
orps
and
cmp
andl
addr16
mov
xchg
loop
inc
ret
mov
push
xorl
adc
gs
in
outsl
jmp
inc
jns
call
lahf
mov
xchg
inc
rol
mov
mov
mov
outsb
inc
jmp
pop
outsl
mov
cmpb
rorb
mov
aam
and
shrb
fisubl
mov
sub
sub
pop
ljmp
clc
mov
lock
insl
sbb
push
dec
gs
pop
jge
push
mov
jno
jns
fsubrl
adc
lret
pop
repnz
push
cmc
push
ljmp
mov
fdivl
aam
pop
xchg
loope
fsubs
ljmp
jp
dec
addr16
mov
sub
push
movsb
pop
clc
aas
mov
sahf
or
xchg
and
jl
fwait
pusha
jnp
jae
mov
mov
cmp
jae
add
cmpsb
std
cltd
mov
hlt
push
adc
cltd
cmpsl
popa
xor
jo
add
popl
ljmp
rolb
cld
sbb
xchg
pop
sbbl
fnsave
stos
lcall
xor
mov
ljmp
lea
mov
cmp
sub
lcall
xchg
cmp
sti
sbb
fdiv
mov
mov
rorb
shr
mov
sub
jno
dec
dec
lods
fwait
xchg
jle
mov
xor
push
xor
incb
and
stos
xor
pop
push
cltd
addr16
out
and
loopne
xorps
jae
dec
dec
inc
lret
lock
jge
adc
or
nop
jmp
in
div
daa
cmp
ds
outsl
fwait
lret
divb
dec
orb
imul
pop
and
dec
add
xchg
adc
sarb
mov
int3
jo
sbb
dec
adc
aad
out
daa
lret
bound
dec
dec
das
cmc
jmp
loop
cld
push
mov
jns
insb
out
out
mov
pop
adc
jge
faddp
in
insl
jg
cmp
add
xor
inc
jno
jnp
sbbl
stos
inc
mov
fdiv
adc
arpl
movsb
cmp
arpl
ret
adc
push
lods
stos
or
mov
mov
pop
aad
mov
les
out
dec
xchg
mov
enter
mov
insb
fimull
adc
jecxz
xor
mov
dec
adc
lds
iret
jnp
or
das
cmpsb
push
xchg
daa
xchg
pop
xchg
out
out
sti
in
push
shl
cmp
addl
in
insl
add
push
inc
std
adc
mov
xor
xchg
push
mov
daa
mov
hlt
inc
loop
mov
stos
cmp
in
push
or
and
imul
push
push
sbb
cmc
jl
add
int3
sbb
int3
and
rcrl
mov
add
aas
loopne
and
adc
jbe
or
std
stos
xchg
sub
insl
scas
push
jnp
fsubrl
sbb
clc
sarl
mov
arpl
xor
adc
cmpsl
test
dec
dec
dec
repz
lcall
imul
adc
pop
inc
push
repz
repz
jecxz
fadds
shll
sbb
mov
jecxz
push
adc
andb
ja
xor
adc
scas
cmp
popa
dec
jecxz
js
repnz
or
add
push
xchg
popa
popf
dec
fsubr
stc
mov
xor
sahf
jo
xchg
or
sbb
mov
adc
mov
imul
ja
into
data16
leave
xor
dec
jbe
mov
sti
cltd
mov
data16
mov
inc
inc
sbb
insl
sub
inc
imul
xor
out
or
pushf
push
and
dec
mov
adcb
out
js
dec
mov
cmpsl
movsl
jns
xor
or
aad
jne
int
push
lods
mov
lret
pop
pop
xor
jo
pop
cmp
and
jle
jo
jle
xorb
shrl
add
out
icebp
mov
or
push
pop
lods
cmc
adc
mov
mov
push
sbb
dec
arpl
notl
or
into
pop
xchg
cmpsb
cmp
popf
cmp
rcl
aas
dec
nop
bound
sbb
in
push
in
dec
cmc
inc
aad
push
pop
repnz
push
ss
icebp
jns
adc
pop
sahf
cwtl
mov
and
jno
mov
lods
inc
icebp
pop
sub
lods
inc
push
cwtl
into
xchg
daa
frstor
addr16
ret
pop
dec
pop
pusha
mov
adc
in
xor
sub
mov
xchg
scas
ds
fdivl
pop
cmp
retw
iret
outsl
arpl
arpl
cmpb
or
cs
pop
movsb
mov
inc
loopne
pop
std
and
xor
out
test
dec
or
inc
lret
aas
mov
sub
loopne
xorl
cld
xchg
inc
movsb
inc
imul
inc
inc
imul
sbb
outsb
mov
xchg
sti
xchg
add
mov
sbb
xlat
sub
pop
imul
xchg
xchg
mov
addl
xchg
xor
jbe
sub
test
mov
movsb
cld
inc
out
xchg
mov
lret
xor
inc
mov
xchg
popf
sub
aas
ljmp
adc
shll
in
dec
pop
dec
inc
insb
jg
ja
pop
test
or
push
out
push
push
xlat
data16
xor
aad
jns
imul
andl
shlb
lcall
push
add
aas
ret
mov
xchg
sbb
aad
jnp
hlt
stc
sti
pop
lcall
jle
push
in
hlt
or
ss
fisubrs
xchg
xor
sub
xlat
mov
repz
cs
loope
arpl
test
cwtl
scas
mov
jae
sub
fnstsw
push
outsb
cmp
sub
cltd
pop
mov
lahf
arpl
outsl
divl
pop
cld
mov
lea
sbb
pop
sbb
push
rcll
hlt
cmpl
icebp
mov
fnstenv
pop
das
scas
inc
or
lret
repnz
adc
cmp
sbb
lret
cmp
mov
insb
xor
popf
negb
xor
cmpsb
xchg
ret
inc
xchg
mov
in
lret
out
fisubs
jl
popf
sub
fwait
xor
jns
xchg
pushl
mov
inc
std
aam
movl
lret
xchg
xor
dec
repz
xchg
and
or
lods
cmpsb
mov
jmp
out
sbb
cli
xchg
xchg
shr
jnp
sbb
jo
sbb
loopne
jl
lahf
xchg
repnz
mov
mov
jecxz
outsl
aam
dec
pop
adc
push
stos
mov
inc
jecxz
xchg
sub
xor
movsl
mov
xchg
adc
mov
mov
out
test
shll
mov
xchg
in
cli
pushf
and
add
add
xor
andb
popf
insl
add
push
mov
loop
xchg
ds
push
dec
mov
add
xchg
addr16
add
cmp
mov
adc
popa
push
jge
cld
xchg
loopne
jge
cmp
pop
sti
or
aas
fdivl
out
imul
adcl
xchg
test
push
repnz
pusha
icebp
pop
xchg
enter
pushf
and
dec
in
ret
aaa
cmpsb
sbb
aad
jmp
mov
mov
push
cmpsl
in
rorl
insl
push
pop
cmp
mov
adc
xlat
push
xchg
cmp
push
xchg
aas
xor
xor
data16
rcl
loop
popf
and
mov
pushf
push
scas
push
cs
xchg
rcr
jae
mov
add
and
jle
mov
and
mov
and
aaa
inc
jp
mov
jno
pushf
scas
xchg
mov
clc
lret
sbb
loope
test
mov
xchg
pop
adc
pop
mov
mov
les
xchg
cwtl
addr16
test
enter
xor
jge
and
subb
movb
jb
dec
shrl
jge
cli
jne
mov
mov
movl
pop
shrb
jecxz
mov
sahf
mov
fisubl
mov
inc
dec
xchg
mov
popa
mov
and
add
decb
pop
aam
jae
test
lds
and
sub
daa
aam
fwait
add
aam
fisubs
lods
pop
in
fiadds
cmpsl
mov
loop
rcl
add
fwait
and
call
cmpl
mov
outsl
cltd
inc
xchg
call
repnz
outsb
or
cs
jle
shlb
and
enter
mov
cmp
lds
nop
dec
xchg
fs
loope
testl
inc
adc
push
inc
cmp
pop
je
push
movsb
in
xchg
loopne
push
xor
xchg
data16
std
jmp
pop
cmpsb
mov
xor
decb
fcoml
mov
mov
sbb
cld
incl
imul
shrl
sub
out
test
push
scas
and
or
cmp
add
pop
or
push
imul
xor
push
add
mov
rclb
inc
fstpt
inc
mov
sbb
cmp
push
mov
aad
jge
sbb
lods
mov
lods
fstpt
pxor
dec
xchg
sub
movsl
sbb
sbbb
mov
mov
mov
adc
sahf
sub
adc
jno
xor
lret
ljmp
xorl
cld
outsl
or
mov
push
mov
ss
inc
lea
out
repnz
pop
mov
push
jbe
mov
jae
mov
movsb
mov
nop
out
fdivl
test
ja
or
pop
mov
lods
inc
scas
mov
mov
mov
xchg
add
push
in
mov
inc
jne
add
pop
push
jp
aas
pushf
lods
mov
pusha
cltd
jo
and
testl
fucom
lcall
leave
movsl
mov
mov
sub
dec
fcomip
loopne
aas
inc
aas
mov
hlt
jp
jecxz
sbb
dec
inc
push
leave
xchg
das
adc
xchg
loopne
add
lods
and
pop
mov
jno
dec
rcl
sbb
les
stos
aas
insl
sbb
mov
mov
mov
dec
mov
lock
call
xchg
add
mov
pop
test
pop
mov
scas
jl
out
xor
mov
cli
or
or
lret
cmp
stc
nop
fildll
sbb
mov
repnz
or
xchg
sub
mov
test
outsl
xchg
pop
push
or
mov
push
jmp
test
daa
ret
stos
inc
inc
cmp
loope
dec
push
movsb
inc
mov
inc
pop
out
in
test
jnp
sbb
dec
add
sbb
xor
sbb
rcll
sbb
ficoms
dec
pop
cmpsb
jns
inc
mov
out
loopne
and
cmp
xor
int
dec
inc
inc
inc
daa
loopne
xor
iret
jg
inc
push
cmpsb
cmp
push
sahf
xlat
ret
popl
in
imul
xchg
add
in
inc
sbbl
mov
dec
loope
xchg
mov
cmp
sbb
pushf
and
mov
call
test
xor
cmp
scas
lds
repnz
idivl
sbb
mov
mov
mov
jl
jecxz
dec
loop
add
pusha
ss
stos
push
in
push
stos
testb
xor
add
adc
mov
push
inc
fildl
push
das
sar
jg
repz
push
dec
fadd
loopne
aam
js
xchg
sub
mov
clc
imul
mov
pop
loop
lea
stc
xchg
cmp
lret
loope
in
sbb
lds
push
pop
xchg
jb
andl
xchg
pop
sub
stos
mov
sbb
cmc
nop
cmp
inc
imul
js
xorl
das
push
jge
notb
push
adcb
jae
mov
mov
mov
xlat
or
shll
jae
loop
push
jo
mov
xlat
cmpsl
jns
sbb
cmpl
lcall
fdivrp
out
and
sbb
inc
ret
mov
lea
add
andl
push
mov
ficomps
mov
lret
scas
cmp
pop
jne
sbb
ds
mov
push
addb
iret
mov
std
out
sub
cmp
andl
xor
push
jecxz
mov
xor
popa
xorb
cmp
push
dec
xchg
movsl
cld
push
push
push
dec
pop
mov
fsubrp
mov
mov
ss
and
out
out
in
bsr
or
imul
adc
mov
dec
mov
loopne
shl
mov
pop
out
sbb
xor
int
pop
adc
and
in
cwtl
push
sub
xor
mov
out
inc
sub
dec
add
sub
gs
dec
test
mov
test
aaa
mov
fimull
push
clc
push
lods
repnz
sbb
push
lret
xor
mov
lods
xor
pop
and
mov
jle
ja
lds
out
mov
mov
daa
ja
dec
sub
in
in
or
cmp
cmp
inc
jbe
enter
in
test
and
outsl
mov
ss
data16
inc
jae
pop
scas
cmpsb
cmp
mov
popa
pop
pop
jl
stc
jge
lcall
arpl
inc
outsl
fs
mov
movsl
cmp
popa
fs
imul
lods
movsl
cmpsb
mov
pushf
daa
enter
dec
fs
sbb
cmpsb
pushf
and
cmpsb
mov
clc
sahf
push
inc
sbb
mov
jle
imul
test
movsl
cmpb
jb
imul
lods
xchg
jno
cmpsb
mov
fldl
inc
decb
shlb
loope
repnz
mov
repz
xchg
jb
jbe
je
lret
sub
mov
cs
pop
lahf
jae
sub
or
and
push
out
vprotd
shl
les
mov
add
push
push
data16
test
andl
pushl
xlat
test
adc
in
pushf
cmp
adc
ljmp
jge
fistl
mov
dec
call
add
popa
mov
mov
cmp
call
mov
test
sub
mov
xchg
aas
inc
imul
lret
mov
add
push
push
les
or
xor
push
push
inc
mov
jne
xchg
cs
sub
lahf
cmp
sbb
mov
jmp
mov
lahf
or
xor
jge
mov
dec
incb
pusha
and
pop
lock
or
testb
mov
cmp
leave
xchg
dec
mov
roll
push
out
outsb
stos
movsb
cmp
or
lcall
jle
push
push
inc
push
sub
dec
adc
loope
push
pop
dec
negl
sbb
ret
sbb
imul
push
repnz
test
mov
fldz
scas
push
pop
sti
xchg
mov
out
xor
pop
in
stc
nop
mov
test
pop
test
dec
fucomip
jg
loope
into
adc
mov
imul
add
jge
sbb
mov
ret
jbe
push
push
pusha
and
ja
xchg
mov
dec
outsl
xchg
hlt
mov
or
leave
sti
arpl
insb
jb
test
jge
mov
xchg
test
dec
jecxz
adc
cmp
and
ds
push
push
test
adc
ja
dec
sub
dec
adc
lods
int3
inc
adc
jae
xor
cmp
inc
and
lea
ljmp
inc
movsb
cmp
cmp
pop
sbbb
mov
inc
fistl
stc
cmpsl
cltd
pushf
ss
dec
aad
les
push
xchg
outsl
jns
push
stos
nop
sbb
push
aam
xchg
sub
imul
jb
xor
in
jae
sti
mov
mov
fistl
stos
fbstp
pop
stos
mov
mov
add
inc
mov
mov
and
in
test
test
adc
cmpsb
xor
mov
lret
xchg
xchg
nop
dec
pop
sbb
push
ljmp
insl
fldenv
mov
int
data16
mov
xor
daa
jmp
in
addl
js
aaa
pop
in
add
mov
xchg
fldl
sub
dec
aam
mov
and
or
mov
in
repnz
call
adc
testb
cmp
push
mov
dec
add
sub
jg
push
mov
shl
jns
inc
fcoms
dec
add
outsl
push
push
daa
or
das
aam
inc
mov
push
in
lcall
dec
xchg
push
mov
pop
shlb
scas
jno
ja
std
mov
fdiv
sub
push
jno
shll
sub
push
pop
imul
mov
sub
pop
mov
xchg
fs
test
add
mov
push
push
jl
push
daa
push
push
adc
push
mov
icebp
sbb
or
cmp
shrb
cmc
adc
inc
fs
fdivrp
push
mov
movsb
test
sahf
int3
or
xor
rclb
mov
fistpll
jge
daa
mov
jg
jae
pushl
push
or
jo
cltd
push
inc
sbb
out
xchg
out
xchg
lds
out
lock
adc
adc
cmp
dec
divb
sub
lret
das
dec
rcrl
fs
rclb
xor
sub
test
repnz
mov
mov
sbb
inc
imul
in
mov
imul
xchg
and
mov
mov
insl
ret
sbb
lea
ds
inc
mov
fmulp
dec
mov
mov
ss
lods
lods
mov
in
inc
inc
cli
dec
outsl
cmp
testl
dec
arpl
js
rcrl
inc
xor
sbb
sub
test
scas
jb
push
xor
push
in
jno
push
mov
repz
jnp
shlb
mov
dec
xchg
psraw
inc
mov
xlat
add
sahf
xor
ss
outsl
test
imul
or
xor
ret
dec
rcrl
xor
mov
jno
outsl
arpl
jge
xor
lcall
pop
mov
add
fildll
xchg
jge
dec
movsb
orl
lds
sbb
cld
cwtl
lcall
jge
push
scas
out
pop
ud2
fisubrl
cmp
mov
imul
out
lret
mov
std
rol
repz
loop
imul
mov
inc
sbbb
outsl
inc
stc
sbb
push
inc
arpl
dec
loop
test
sub
sar
popa
imul
sub
cmpsb
test
div
adc
push
sahf
inc
lret
or
jg
mov
push
sub
or
movsb
adc
in
pop
mov
jb
dec
out
pop
add
xchg
push
adc
movsl
xor
dec
aad
xor
bound
xchg
cmp
or
das
or
popa
sub
and
outsl
in
aas
xchg
add
in
inc
and
cmp
xor
es
mov
sbb
mov
adc
and
cmp
push
fwait
leave
and
fsubrs
loope
adc
sub
sbb
insl
cmp
or
or
mov
xchg
loope
rcrb
js
cli
jmp
xchg
leave
xchg
xchg
cs
out
fistl
negb
jnp
addb
mov
or
stc
xchg
lods
add
mov
dec
xchg
jae
xchg
pop
je
cwtl
std
mov
sarl
inc
out
rcr
mov
out
test
subb
dec
cli
jno
push
mov
dec
fidivs
out
or
dec
pop
and
jmp
sbb
and
mov
pop
outsb
mov
ret
hlt
sbb
dec
dec
not
sub
mov
dec
data16
mov
xchg
aam
rcl
dec
into
loope
jmp
cmpsb
icebp
mov
bound
fisttpll
xchg
mov
dec
fs
aad
or
and
out
inc
jge
cmc
add
xor
ret
jle
fnstcw
in
push
repz
jecxz
adc
mov
mov
icebp
aaa
andl
jle
test
or
ret
pop
popa
inc
pop
xor
rcrl
cmp
xchg
cltd
testl
gs
sbb
xchg
sub
push
js
mov
inc
int
adc
jns
out
imul
add
je
and
mov
ret
lcall
int
and
xor
decb
das
js
test
mov
pushf
arpl
fidivrl
and
fistps
stos
out
hlt
sbbl
lcall
test
pushf
cmpsl
adc
cld
cmp
sub
sbb
add
pop
cmp
int
sahf
inc
pop
sub
mov
mov
ds
imul
inc
fs
jle
out
pop
xchg
jle
dec
mov
mov
sbb
pop
lret
popf
mov
fnstenv
aad
add
sub
repnz
inc
mov
mov
fidivl
cld
add
sbb
pop
jl
push
mov
in
sbb
ret
es
push
adc
jnp
jecxz
pop
fwait
pop
cmpl
xchg
pop
or
push
aas
add
or
sbb
mov
fdivrs
mov
ficompl
fcmovnu
fsubs
pusha
sub
mov
or
jg
pop
loope
sbb
mov
movsl
or
inc
or
inc
xor
jb
cmpb
jp
in
push
adc
movsb
pusha
cmc
adc
cmp
int3
jmp
or
pop
adc
and
lea
mov
mov
cld
inc
xor
push
out
jns
push
or
test
cli
in
push
xor
repnz
mov
cmp
vpsubq
out
and
adc
mov
cwtl
adc
pop
and
xchg
sbb
pushf
insl
pop
stos
es
mov
or
adcl
std
jne,pt
pusha
orb
jmp
data16
cld
adc
add
dec
addps
sub
int
outsl
movsl
adc
xchg
add
hlt
dec
shrl
movsl
inc
lock
lock
mov
es
jle
xchg
mov
fs
lcall
loopne
cmc
sub
std
add
in
xchg
jg
insb
jbe
cmc
cmpsl
daa
adc
xchg
dec
js
clc
in
xor
leave
ret
sbb
test
repnz
mov
or
fwait
scas
imul
lds
inc
fimuls
insb
jae
xchg
aas
mov
jp
add
lods
test
out
stos
sti
scas
inc
sub
hlt
std
sbb
outsb
inc
inc
or
icebp
inc
outsb
adc
lret
xchg
test
sbb
adc
pop
jo
test
lret
fldcw
xchg
insl
or
hlt
in
push
and
sub
or
test
dec
jl
sub
inc
inc
jae
push
in
pop
mov
pop
push
mov
dec
mov
sbb
mov
push
inc
or
dec
sbb
xor
pusha
push
xor
jne
loopne
popf
inc
jg
and
iret
inc
pop
xchg
std
mov
lcall
mov
fadd
loopne
pop
jbe
dec
xlat
popa
cmp
je
mov
jno
stc
dec
movsb
inc
fisubrl
mov
int
inc
push
into
push
adc
mov
inc
or
mov
dec
stc
jno
sub
lds
xor
push
aas
movsl
loopne
xchg
or
jl
pop
sub
aaa
jns
jecxz
mov
lds
rorb
dec
testb
cmp
add
sub
sbbl
int
jne
dec
push
outsb
fwait
test
push
jo
and
into
push
popa
xorl
lea
stc
jne
aaa
mov
mov
adc
pop
cwtl
jae
aas
lods
sbb
adc
inc
and
inc
sbb
das
mulb
in
jnp
pop
scas
jmp
lahf
cmp
fwait
xor
lods
and
divb
inc
jecxz
sub
pop
lock
add
in
in
push
dec
pop
stc
mov
fidivrs
cs
insl
lcall
xor
sbb
lds
sbbl
xchg
dec
mov
mov
mov
or
call
negb
mov
outsl
test
xlat
adcl
lcall
jle
xchg
inc
inc
sahf
mov
jl
and
jne
enter
adc
or
cmp
adc
adc
repz
sub
and
lds
mov
popf
testl
xorb
in
xor
in
fists
push
lahf
out
mov
dec
dec
nop
mull
cmp
sarl
ret
andb
fwait
movsl
ds
push
pusha
add
divb
sbb
rcrl
pop
out
xor
pop
int3
dec
jns,pn
inc
and
sub
lret
inc
push
shll
xchg
xor
xor
arpl
in
sbb
push
push
in
test
fs
or
jb
mov
aam
mov
pop
cwtl
sarl
mov
into
mov
pop
xchg
or
cmp
jo
jge
mov
int
fdivl
jnp
dec
pop
cmpsb
cmp
out
cmpsb
cmp
mov
sub
pop
dec
outsb
adc
fcmovnu
jb
pushf
or
xlat
lahf
mov
js
adc
ja
ret
mov
push
inc
cmpsl
leave
int
jp
leave
cmpsb
push
addr16
movsb
dec
adc
lahf
mov
sub
pop
sub
mov
or
cmp
or
add
ds
rolb
lcall
mov
xchg
xchg
inc
mov
adc
bound
push
scas
jnp
or
out
xchg
js
in
orl
jo
mov
mov
mov
sub
xchg
out
cmp
vmread
mov
mov
pop
sarb
sbb
nop
fistps
fildl
adc
adc
and
outsl
insb
xchg
dec
add
fnstsw
add
movsb
int3
cmp
mov
fldcw
xchg
into
jl
popf
in
imul
dec
dec
lods
test
mov
cmp
andl
xchg
add
inc
adc
and
int3
lret
std
push
pop
push
adc
iret
fcmovne
dec
and
push
imul
cmp
mov
shlb
mov
out
push
fnstenv
jmp
jb
sbb
lods
pop
int3
lahf
ss
mov
and
aad
jns
pop
in
orl
push
adc
iret
and
pushf
cwtl
out
or
int3
or
jb
in
std
jo
dec
xchg
mov
sbb
lret
data16
test
ret
xchg
inc
jo
subb
sub
repz
pop
jp
mov
ljmp
mov
sbb
mov
cmpsl
orb
outsl
iret
ja
ss
xor
push
scas
pop
mov
fdivrp
dec
push
mov
sbb
pop
mov
adc
xor
jp
or
dec
xlat
mov
or
iret
movl
shll
push
aad
test
fnstsw
or
xor
sub
push
jno
sahf
pop
movsb
iret
int
sbb
pop
mov
xchg
mov
setns
pop
frstor
ljmp
ss
add
faddp
pop
movsl
sbb
xchg
daa
es
fcomps
movsl
xor
jmp
cmpsl
xchg
mov
repnz
dec
jle
es
js
stos
jg
jne
fistps
push
sti
adc
addr16
mov
and
or
inc
sub
hlt
aas
xchg
pop
xchg
test
lret
inc
pop
cmp
push
push
cmc
mov
xor
lods
bound
mov
jns
addr16
adc
inc
add
js
ljmp
int
xchg
mov
jle
sbb
test
in
mov
mov
imul
or
stc
scas
pop
ljmp
out
test
addb
jmp
push
mov
into
pop
inc
sbb
pop
int3
mov
jbe
mov
out
and
adc
inc
and
adc
xor
jg
in
or
fnstsw
sub
movl
xor
jmp
rep
inc
jmp
sti
jmp
stc
jnp
mov
xchg
cltd
outsb
fwait
movsb
or
pop
jbe
and
xor
aad
jne
xorl
test
sub
mov
adc
and
clc
icebp
push
cmpsl
imul
push
mov
mov
nop
xor
lahf
jne
sahf
push
xor
fs
xor
and
mov
pop
icebp
dec
jmp
js
xlat
testl
clc
mov
adc
xchg
aaa
cmp
and
and
xor
push
cs
mov
test
push
adcl
in
or
or
jno
scas
and
dec
popa
clc
pop
jecxz
xor
sbb
push
sub
insb
inc
sub
scas
cmpb
movsl
mov
fidivrs
push
test
xchg
stos
lods
leave
movsl
cmp
int
negb
in
jg
mov
cltd
xlat
sub
mov
jae
rcr
arpl
ret
pop
mov
inc
mov
int
or
insb
jbe
jp
or
addr16
imul
cmp
out
push
cmp
ljmp
loope
enter
dec
mov
push
out
push
xchg
js
jmp
test
xchg
sbb
popf
cld
das
push
fmul
push
mov
stos
movsl
cld
leave
dec
in
test
dec
cmpsl
leave
test
movsb
sub
lds
in
das
stc
popa
in
xor
or
sti
lret
pusha
add
jl
push
push
jmp
fs
dec
jno
mov
adc
xor
mov
push
xchg
mov
in
and
inc
mov
or
or
lds
jmp
ljmp
mov
mov
jp
nop
mov
test
jnp
mov
sbb
inc
jge
adc
xchg
cwtl
pop
cli
mov
xchg
jp
decl
sub
or
cmp
mov
sbb
push
scas
mov
jl,pn
enter
inc
fimull
int
sub
mov
mov
test
pminub
adc
sbb
add
pop
pop
sbb
cmp
add
mov
jmp
aaa
scas
push
cli
ss
call
ja
daa
xchg
and
mov
cmpsb
ror
sub
or
into
pop
pop
cmp
pop
aam
sub
scas
out
xor
clc
or
cs
jg
jae
cmp
pop
cmc
enter
push
bound
fisttpl
dec
in
ljmp
or
movsl
mov
arpl
popf
dec
test
adc
mov
scas
add
out
sbb
pop
cwtl
push
cmp
lock
pop
cmpsb
dec
jbe
nop
dec
mov
movsb
dec
sbb
xchg
mov
data16
pop
pop
repnz
adc
fwait
xor
and
das
addr16
out
inc
ds
add
jecxz
pop
aad
data16
jae
cmp
pop
rcrb
add
cmc
loopne
xchg
les
xchg
shl
add
arpl
nop
jmp
mov
jge
push
ja
ss
xor
fwait
or
cli
lret
movsb
jns
jle
cmp
pop
lods
jecxz
adc
cmp
lcall
inc
shrb
mov
xchg
mov
movsl
cmpsb
bound
ret
jle
mov
ljmp
xchg
mov
ljmp
mov
push
or
dec
cmp
push
mov
dec
icebp
shrl
mov
mov
jmp
repnz
and
xor
aaa
and
pop
daa
xorl
cmp
fisubrs
jmp
ror
sub
push
in
pop
icebp
fnsave
adc
pushf
mov
xor
daa
lcall
divb
out
jno
outsb
test
dec
mov
in
lods
daa
mov
jb
inc
sbb
xchg
jl
dec
jo
xchg
push
and
pusha
pop
scas
pop
cmp
add
xor
inc
xor
scas
mov
xchg
lea
cld
xor
fiaddl
sahf
lret
cmc
inc
stos
test
cmpsb
push
pop
pop
or
mov
xchg
sub
int
inc
adc
mov
cmp
lret
bound
std
stc
adc
xchg
xor
dec
mov
test
dec
xchg
jl
add
rcrl
pop
add
nop
clc
sub
shll
mov
jns
dec
fsubl
clc
pop
sarb
pushf
and
ret
test
push
mov
xchg
sub
mov
mov
pop
shrb
cmpsb
je
jnp
std
andb
jno
jno
sub
pusha
rorl
ja
mov
fs
lock
inc
mov
arpl
pop
and
cmp
int
jge
jmp
xor
inc
push
sbb
sbb
xor
call
or
mov
enter
jne
adc
test
mull
into
enter
cmp
sbb
push
and
in
and
pop
mov
dec
and
sub
sahf
out
fadd
or
es
inc
push
movb
ficoml
mov
jns
xor
lcall
xor
mov
in
repz
leave
sarb
stc
mov
xchg
sub
arpl
enter
push
inc
mov
xor
sub
lea
stos
xchg
and
les
jecxz
adc
cmp
lods
out
xchg
clc
push
dec
sysexit
popf
nop
xor
sub
xlat
cmpsb
andb
jecxz
ficomps
cmpsb
andl
and
mov
addr16
mov
ja
and
stc
xor
adcb
xor
lahf
and
mov
lods
fidivs
sbb
jno
cmp
xchg
cmp
hlt
mov
mov
jecxz
mov
int3
lret
pop
pop
lods
fmull
ficompl
fs
testl
lea
ficomps
out
les
mov
rorb
pop
dec
push
addr16
jl
int3
jae
mov
rorb
mov
xchg
flds
sbb
jne
cmp
insl
xchg
sub
cmp
lock
enter
jo
test
cmovo
sbb
add
inc
and
sub
xchg
cld
pop
push
sahf
outsl
or
int3
sub
jp
loop
in
lods
mov
jbe
xchg
test
sub
scas
lret
add
cld
insl
popf
clc
mov
mov
fldenv
mov
mov
xacquire
aas
jl
mov
insl
mov
sbb
mov
outsl
sbbb
shlb
cmp
aaa
leave
xchg
sti
jae
xor
pusha
cmpsb
add
sbb
sahf
push
out
cmpsl
cs
out
enter
sti
popf
jg
or
sahf
test
jmp
aaa
std
or
scas
jb
mov
das
and
inc
stc
pop
repz
outsb
xchg
and
insb
lret
lret
jne,pn
aas
push
inc
in
daa
and
push
int3
outsb
inc
sbb
adc
out
stos
arpl
subl
fwait
hlt
or
xor
ljmp
jle
insb
mov
mov
incl
add
and
imul
lret
cmpl
iret
cli
popl
lret
mov
sbb
rorb
stc
insb
int
xchg
inc
and
lahf
pop
push
std
mov
add
test
fsubl
xchg
js
pusha
mov
stos
in
and
pushf
mov
add
xor
int3
xchg
adc
gs
cmpsb
xchg
lcall
mov
sbb
hlt
mov
add
orb
jnp
push
std
jge
cli
pop
sbb
cmpsl
popf
pop
mov
dec
adc
push
rcll
pusha
or
mov
mov
mov
lock
sbb
or
fdivs
add
aaa
pop
and
int3
bound
jl
add
popf
popa
cld
sbb
add
cmpsl
pop
lock
or
lret
sub
insb
imul
sti
jbe
and
fs
xchg
clc
adc
lods
sti
pop
ficompl
jge
xchg
mov
and
test
icebp
sub
call
pusha
xchg
or
ss
xchg
adcb
sub
inc
dec
adc
jl
jp
test
add
leave
punpckhdq
inc
jp
pusha
nop
and
xor
jno
add
fildl
aas
push
call
xchg
ljmp
nop
pop
ja
mov
cmpsl
cmp
imul
out
lret
inc
xlat
out
mov
push
data16
inc
xor
dec
jmp
and
data16
movsl
xor
icebp
push
jg
mov
mov
mov
push
mov
loope
mov
jns
mov
mov
fisubrl
mov
cmp
mov
sbb
ljmp
mov
mov
inc
andb
mov
dec
in
stos
push
movsl
sahf
lods
inc
fsubr
jge
imul
adc
scas
pop
pop
outsl
roll
pop
arpl
ffree
mov
xchg
jns
insb
xor
xchg
sub
jl
xor
test
mov
inc
cmpsl
xor
add
adc
ss
lods
popa
aaa
int3
push
scas
test
mov
cmpsb
adc
fimull
sbb
jb
pop
in
rcrl
in
lods
popl
and
add
data16
sar
popf
pop
outsb
add
jmp
popf
cmpl
sti
mov
adc
stos
cmp
cmp
sahf
clc
mulb
or
fdiv
movsl
xor
daa
ja
cmpb
mov
dec
test
outsl
in
and
in
add
sbb
push
jnp
fwait
pop
lea
stc
jns
or
pop
sahf
cli
or
dec
insl
ret
fwait
js
por
gs
add
cmc
es
jo
mov
mov
ja
inc
adc
mov
push
adcb
mov
loop
jae
jbe
mov
loope
es
jle
jnp
sub
gs
loopne
push
mov
lock
jns
mov
dec
shll
addr16
out
add
cmp
jno
insb
sbbb
nop
cmpsb
dec
shlb
sbb
pop
les
sti
and
shr
test
fidivrs
fdivs
out
scas
mov
in
js
add
cmp
lahf
inc
es
jne
pop
xor
insb
mov
xchg
hlt
inc
lea
pop
cli
jmp
xlat
loop
xchg
outsl
ljmp
addr16
mov
adc
or
sbb
frstor
sub
test
jp
loop
cld
xor
mov
mov
out
mov
mov
popa
roll
xor
imul
lods
lods
fmuls
mov
xor
xchg
out
mov
aam
jg
mov
mov
add
out
sbb
sub
ret
movb
cmp
adc
mov
mov
test
cmpsl
mov
gs
mov
loopne
popf
and
ja
mov
pop
int3
dec
fistpl
xor
push
out
out
and
dec
xchg
mov
mov
insb
mov
push
rol
cmp
cmp
push
loopne
cs
mov
sbb
test
pop
aaa
cmp
inc
add
mov
fistpl
or
cmc
or
mov
add
loopne
cmp
mov
jne
bound
repnz
xor
push
orl
sub
xor
pop
and
push
ss
filds
aad
sub
adc
push
dec
hlt
mov
xor
push
mov
push
sti
fs
aaa
mov
pop
test
mov
loope
cs
loope
mov
mov
jmp
shrl
pop
shl
mov
and
ja
add
jmp
aad
adc
xchg
or
push
jae
sbb
insl
and
jle
lds
stos
dec
sbb
dec
adc
sbb
dec
lods
dec
jecxz
repnz
orl
mov
ret
cmpsb
pushf
bound
out
fwait
xchg
js
imul
imul
cmp
adc
hlt
or
push
int3
jb
fs
rol
mov
jg
pop
popf
daa
sti
dec
fsubrl
mov
icebp
adc
fdivrs
cli
pop
aam
fwait
scas
mov
lds
addr16
orb
add
mov
enter
pop
or
enter
or
into
and
call
aaa
jg
js
sub
mov
mov
neg
insl
xchg
imull
push
cmc
push
or
jg
sbb
daa
mov
std
lods
jg
mov
pop
jmp
pop
cmp
dec
roll
dec
aaa
ja
add
pop
lret
pushf
pop
fs
pusha
add
pushf
inc
cbtw
daa
mov
mov
inc
shlb
pop
fwait
das
xchg
xor
data16
test
popf
mov
sbb
pop
stos
mov
adc
jmp
clc
xor
outsb
sbb
testb
sahf
xor
sbb
ds
out
mov
jl
jb
xlat
mov
push
call
mov
sahf
clc
into
xchg
les
jne
add
mov
data16
lret
loope
mov
clc
xchg
xor
fucomp
pop
sbb
repnz
fldt
cmpl
jno
xchg
xor
and
jp
or
sbbl
movsl
push
jmp
fisubrl
mov
xor
pop
jne
pop
jmp
cmp
push
or
pop
movsl
incl
sbb
jle
xor
sbb
jl
int
rorb
mov
add
js,pt
out
dec
pop
or
lahf
cwtl
out
sbbl
or
sub
filds
std
xor
es
loope
inc
fldt
rorb
sub
jbe
cmpsl
mov
mov
dec
and
cmpsb
in
sbbl
or
pop
sbb
dec
and
repnz
imul
push
cmp
xor
push
adc
nop
imulb
mov
shr
rcrl
decb
data16
dec
dec
push
andl
pop
dec
sbb
and
mov
mov
jmp
xorl
and
dec
add
mov
sub
repnz
cwtl
xchg
imul
imul
fadd
mov
jge
xlat
push
xor
push
cmp
popf
lods
fisttpl
and
rorb
sbb
bsr
mov
lret
pop
cmpsb
and
stos
aam
inc
add
mov
mov
sbb
and
outsb
sbb
movl
lahf
push
out
xchg
push
xor
hlt
repz
sarb
jo
mov
and
pop
sbb
subl
mov
xchg
mov
xchg
and
sub
arpl
cmc
insb
subl
pushf
ss
fwait
nop
dec
adc
cmc
movsb
mov
jge
roll
pop
nop
lods
push
jmp
sub
int
jb
xlat
gs
fs
jge
stos
and
push
push
pushf
test
xchg
push
xchg
sbb
dec
adc
sbb
mov
out
ds
cli
push
lcall
push
test
mov
cmp
icebp
ret
lock
mov
lock
pop
mov
mov
arpl
push
mov
cmp
fcoml
loopne
ss
insl
loopne
fiadds
and
stos
jmp
mov
fists
gs
repz
mov
jg
popf
push
add
scas
mov
cmpsb
int3
rcrb
cmp
shl
push
cmp
fnsave
std
sub
jae
es
xchg
out
xor
mulb
arpl
mov
je
sbb
sti
push
adc
cmp
lret
and
es
ss
cmpsl
dec
sub
push
in
std
dec
aad
dec
int
sbb
iret
mov
inc
mov
pushf
hlt
push
into
inc
adc
cmp
xor
cmp
ds
mov
or
cld
fmuls
orl
jno
in
pop
mov
push
pop
dec
add
lods
mov
mov
mov
or
lock
stos
cmp
and
mov
lods
and
movsl
inc
jecxz
jne
leave
cmpsb
popf
cwtl
mov
push
lcall
jns
mov
cmc
movsl
sub
and
std
pop
jae
test
insl
adc
xchg
mov
jl
jecxz
pop
add
mov
and
clc
scas
jb
or
pop
sub
js
xchg
pop
mov
and
cmp
shrl
mov
out
popf
test
mov
and
or
adc
fistpll
repz
movsl
js
je
nop
mov
fisubrs
push
popf
insl
mov
loopne
fwait
pop
test
and
repz
sti
push
fsubl
fidivrs
movsb
es
adc
inc
addb
mov
push
and
sahf
lods
xchg
or
in
adc
ss
je
mov
push
ljmp
test
add
jbe
sbb
sbb
movsl
hlt
add
adc
mov
fsubr
std
aad
xchg
sti
xor
dec
shll
icebp
das
pop
nop
mov
imul
xchg
pop
mov
lret
sahf
add
shr
movsb
dec
inc
mov
xchg
ljmp
movsb
fbld
aad
int3
mov
push
test
mov
xor
fcomps
ss
into
cs
jo
adc
and
popa
clc
out
scas
pop
aas
pop
cmpb
loope
out
adc
inc
fnsetpm(287
mov
mov
mov
sub
js
inc
add
clc
and
and
fsubs
negb
sub
xorb
repnz
call
fistps
pusha
mull
dec
mov
add
stos
mov
outsl
push
xlat
popf
mov
lea
outsl
scas
stos
leave
les
imul
cli
ret
leave
mov
mov
mov
mov
push
add
ljmp
mov
stos
mov
cwtl
cmp
or
or
jge
mov
fwait
pop
or
sub
fcmovnbe
pop
xchg
jmp
out
pop
sahf
inc
and
es
mov
jo
xor
xor
jb
mov
inc
ffree
sub
repnz
pop
lcall
dec
fsubrl
xchg
push
and
mov
inc
movsl
das
rcl
xor
movsb
loopne
jae
push
mov
insl
jle
add
int
pop
aaa
push
jbe
js
test
or
mov
dec
dec
fsubrl
xor
dec
jae
adc
rcrb
mov
mov
pop
dec
and
les
mov
mov
ljmp
xchg
frstor
fwait
mov
xor
sub
stc
lods
clc
scas
fdivrp
stos
cmp
fcoml
adc
cwtl
cmp
and
mov
mov
movsl
mov
push
mov
adc
sti
movhps
into
clc
lock
repnz
data16
sub
cltd
fcmovnu
xchg
loope
rorb
add
mov
push
pop
cmp
or
sub
jns
sbb
jne
and
lahf
adc
insb
and
add
jae
aam
notb
adc
notb
xchg
shlb
push
stos
cs
mov
lds
inc
adc
xchg
insl
sub
sub
popa
test
sub
out
push
lcall
adc
in
mov
in
jl
pop
scas
ljmp
inc
je
aaa
into
mov
jno
cmp
jae
and
jp
sbb
sub
push
jp
dec
sar
cmp
insb
and
lea
fwait
repz
or
jl
cmp
dec
popf
sub
jle
and
dec
sbb
cmp
sub
nop
lahf
inc
mov
inc
mov
and
pushf
push
test
addr16
xchg
cltd
lock
movsb
inc
cmp
loop
lds
pop
icebp
or
das
js
popa
inc
mov
scas
mov
arpl
jmp
xlat
fnstcw
push
push
inc
push
fidivl
pop
mov
mov
insl
imul
and
push
movsb
sbb
add
sbb
xchg
sti
mov
xor
mov
sbb
mov
inc
aaa
leave
rclb
mov
je
mov
xlat
mov
sbb
pop
mov
dec
in
in
cmpsl
dec
movsb
aad
inc
shr
add
and
sbbb
dec
out
ret
mov
ret
pop
aas
mov
loope
ret
int3
mov
orb
inc
mov
jnp
mov
mov
jge
lds
dec
movsb
cmp
jnp
pusha
insl
ret
aad
dec
cwtl
lcall
es
add
mov
pop
or
sub
xchg
aam
in
jecxz
mov
pop
cmc
mov
hlt
bound
jnp
cmp
insl
jle
pop
pop
scas
mov
enter
ds
jle
arpl
jno
cmp
xchg
insb
adc
cmp
lcall
pop
mov
movsl
ds
fsts
pusha
sub
fs
mov
inc
mov
xchg
sub
push
sbb
adc
mov
mov
pop
je
getsec
cmp
stc
adc
movsb
jle
adc
dec
jp
out
test
enter
pop
insl
je
xchg
sbb
movsl
jg
sbb
ds
cmp
popa
dec
adc
enter
int3
arpl
adc
fs
cmc
xor
das
jmp
mov
mov
or
nop
add
cmc
jp
cmp
ljmp
push
dec
sbb
jp
das
cmp
rcrb
cwtl
popf
rep
inc
xor
enter
iret
mov
inc
mov
icebp
add
cmpsl
and
lock
pusha
jp
xchg
xlat
mov
sti
mov
fs
xchg
sub
or
mov
movsl
lock
jmp
stos
shlb
icebp
les
push
sub
or
loope
mov
fs
nop
sub
mov
cmp
mov
addr16
notb
jmp
jo
stc
push
push
popf
mov
fnstenv
add
mov
inc
stos
loope
jno
repnz
pop
and
fistpl
in
or
scas
or
mov
stc
and
inc
bound
push
add
add
es
xchg
imul
and
ljmp
test
jo
jne
xchg
dec
mov
fs
mov
adc
into
xchg
je
sbb
in
stc
fucomi
inc
cs
popf
push
push
scas
in
mov
adc
jae
test
dec
jmp
inc
inc
ss
andl
mov
ljmp
mov
dec
fstp
add
into
in
test
out
pop
aad
mov
lods
xchg
ret
ficoms
pop
cmp
add
test
fwait
cs
cli
or
lret
xor
les
sub
shll
fisubrl
dec
lock
aaa
lods
push
jo
xchg
adc
leave
imulb
pop
fistps
movl
aaa
push
jmp
push
mov
adc
enter
clc
lcall
in
dec
cmpl
aad
pop
idivl
sub
dec
imull
nop
and
jae
cld
iret
insl
lods
iret
push
lahf
or
jp
and
arpl
int
xor
inc
cltd
xor
jp
shr
pusha
loopne
std
in
push
insb
jb
xor
pop
test
stos
xchg
jnp
out
push
jl
jg
push
adc
xor
xor
xchg
test
fwait
and
mov
fwait
mov
sahf
dec
add
cld
or
stos
mov
scas
dec
leave
jmp
in
add
ljmp
ud2
jno
shll
or
pop
clc
mov
cmp
insl
mov
pop
mov
leave
and
pop
test
jnp
cmpsl
lods
lret
pop
out
mov
mov
jmp
cwtl
adc
ret
mov
cs
shlb
imul
cwtl
in
inc
fsubl
mov
push
add
sub
call
or
sbb
mov
out
inc
popa
push
hlt
push
std
sub
cmp
push
and
dec
pop
lods
mov
inc
pop
out
mov
por
mov
adc
push
jne
dec
add
stos
xlat
lock
int
rol
xchg
sub
xchg
js
xor
or
cs
stos
xchg
sbb
outsl
cmp
mov
mov
cmc
fwait
aad
je
dec
pop
jl
call
or
mov
std
test
adc
inc
stos
xor
int3
adc
jge
push
jbe
dec
cs
lock
mov
adc
fisttpl
cmp
test
loop
stos
mov
add
andb
fidivs
jbe
arpl
jecxz
mov
push
pop
cmp
mov
dec
pop
ret
mov
push
cmp
xchg
test
or
adc
sbb
and
mov
mov
les
cmp
cmp
pop
jle
mov
push
icebp
cld
pushf
test
push
and
mov
mov
inc
add
andl
jl
push
mov
repnz
shll
nop
imul
pushf
mov
shrb
jle
mov
mov
test
mov
mov
into
aad
das
outsl
idivl
sub
mov
pusha
lock
ret
repz
pop
das
test
shl
ror
mov
cld
dec
icebp
mov
xor
shrl
mov
adc
push
xchg
xor
clc
loope
mov
imul
jns
jns
imul
add
repz
nop
jle
js
popa
fwait
xor
and
xchg
xor
ficoms
mov
cli
xchg
insl
push
mov
pop
fmull
cmp
cmp
loope
das
fcoml
cmpl
fnsave
mov
xchg
outsl
sbb
pop
jp
xchg
or
ja
data16
xchg
insl
stc
xchg
stos
cmp
add
jo
outsl
xor
addr16
dec
outsl
setne
int3
inc
fcoml
int
shlb
cs
shll
or
rcrl
lock
lret
inc
les
pop
jo
dec
pop
movsb
ret
negb
dec
daa
daa
jns
scas
out
dec
pushf
in
add
pusha
mov
push
sbb
push
xchg
cmp
into
hlt
punpckhbw
add
inc
sub
movsl
lods
sbbl
lds
enter
adc
lret
xchg
mov
mov
mov
sub
mov
ss
mov
pop
mov
pop
loopne
clc
and
pop
out
inc
in
jno
push
mov
cmp
push
dec
movsl
shr
cmpsl
inc
into
hlt
xor
sub
dec
fucomip
inc
sbb
adcb
ret
es
scas
and
push
sbb
pusha
out
jns
xchg
adc
or
lea
cmpsl
sub
jb
daa
cmpsb
push
push
mov
popa
xor
mov
lea
testb
mov
lret
sub
mov
xchg
gs
pop
icebp
repz
push
xchg
mov
adc
add
fnstsw
jnp
into
xor
in
dec
cmpsl
mov
inc
jns
mov
stos
adc
dec
dec
orl
add
pop
outsb
mov
dec
aaa
in
mov
in
jg
mov
cmp
unpckhps
call
out
sub
pop
ret
inc
lret
jae
xchg
fistpl
lds
ja
dec
cs
jne
adc
push
jns
test
adc
dec
lods
loopne
ljmp
notl
dec
cmp
jge
pop
mov
push
ja
rolb
imul
inc
and
lock
inc
mov
movl
insl
gs
and
push
jo
dec
xchg
dec
add
mov
fisubrs
lock
xchg
mov
jo
xor
add
mov
mov
scas
mov
loope
dec
push
xchg
mov
mov
push
push
test
out
ja
inc
movsl
push
hlt
push
bound
push
rorl
std
or
enter
jns
out
inc
xlat
mov
xorl
cmp
ja
xchg
pop
imul
stos
hlt
mulps
mov
push
push
fbld
sbb
ret
rorb
or
cs
std
mov
sbb
orb
inc
lret
add
shlb
out
ss
add
jbe
stos
mov
mov
adc
xor
aad
cmp
js
rolb
sti
jne
je
das
and
data16
das
xchg
je
adc
ss
in
stos
call
roll
insl
mov
pushf
arpl
inc
adc
call
mov
fdivs
or
sti
mov
mov
fisubl
or
movups
lret
jbe
dec
add
add
in
lds
lock
mov
push
cld
cmp
insb
sbb
data16
mov
repnz
shrl
xchg
push
jno
xor
adc
aaa
cmp
sub
pusha
jg
sbb
sub
test
clc
subl
lods
dec
rorl
and
or
sahf
sbb
ds
addb
movsb
sub
outsl
sbb
iret
test
imul
sub
test
pushf
and
ficomps
or
sarl
adc
jmp
pop
stc
rorb
mov
sub
pop
jge
mov
pop
sarl
jl
mov
dec
push
ljmp
lods
andb
les
mov
lea
ljmp
cmp
hlt
pushf
mov
fwait
xchg
mov
ds
pop
mov
sub
jecxz
in
pop
push
mov
sti
scas
add
mov
and
cld
sub
mov
push
movsl
js
insb
mov
rolb
or
add
push
cmp
imul
fcmovnu
jae
mov
cli
cmp
popa
fstpt
aaa
lcall
sub
jecxz
adc
ss
mov
mov
into
adc
dec
dec
scas
push
or
je
in
mov
push
dec
push
les
enter
xchg
sbb
insl
les
testb
mov
jns
or
mov
jp
lahf
or
int
cmp
fisubrl
das
out
xchg
sub
pop
fwait
push
pop
add
sahf
jns
mov
mov
ret
push
jmp
outsl
push
setg
lea
or
mov
imul
mov
testb
fadd
enter
subb
inc
and
push
push
rcl
dec
add
jle
lcall
and
xor
sub
imull
ret
dec
add
and
jne
arpl
xchg
push
cs
fbstp
stos
xchg
ja
ja
cmp
mov
push
mov
and
push
sbb
push
shll
les
inc
pop
dec
ja
cs
pop
rorl
lret
fabs
imul
popf
je
addb
xchg
jae
cltd
into
lea
jae
inc
mov
inc
mov
aad
jg
push
negl
mov
inc
shr
jle
adc
jne
inc
push
mov
nop
daa
cmp
insl
loopne
aam
and
pusha
nop
sbb
xchg
loopne
aad
mov
cmc
loopne
and
insw
ret
loopne
xchg
push
ret
fldt
inc
mov
xchg
sub
prefetch
aam
sub
sti
mov
mov
fs
or
cmp
outsl
int
pop
mov
jmp
or
push
or
dec
outsl
je
dec
cmpsb
jle
roll
gs
pop
xchg
pop
dec
and
mov
mov
hlt
push
aaa
mov
int
std
jle
adc
decb
add
adc
lcall
popa
jmp
outsb
pop
xor
inc
push
hlt
jmp
test
push
cwtl
lock
mov
lcall
inc
cld
jne
pushf
cmp
add
or
sbb
sub
std
fs
popa
lods
pop
ja
sub
adc
mov
and
adc
adc
adc
pop
or
dec
dec
sarl
test
adc
mov
xor
ret
mov
mov
daa
rorb
mov
push
push
sahf
test
ja
test
aaa
jl
xlat
pop
push
mov
push
sbb
ret
cmp
fldl
lahf
sub
push
scas
inc
push
mov
or
rclb
fnstenv
div
mov
cmpsb
push
in
sub
loope
call
xchg
daa
mov
push
scas
lock
inc
and
cwtl
or
cmpb
pop
roll
stc
cmp
fnstenv
lods
cmp
lds
adc
sub
jg
sbb
or
mov
pop
mov
into
xchg
sti
mov
xchg
jmp
adc
outsb
and
pop
xor
testb
js
jo
mov
jmp
sbb
lea
stos
sbb
shrb
dec
sub
out
fisttpl
cmc
jge
xor
jae
enter
popf
cmpb
xor
adc
test
sub
or
and
xor
fstl
stos
mov
mov
or
push
cmp
test
fwait
sbb
inc
call
push
imul
pop
jge
bnd
sbb
adc
mov
cltd
mov
push
xor
fdivp
je
insl
int3
cmp
mov
pop
into
jge
xchg
hlt
inc
push
clc
cmc
adc
xorl
or
push
jg
push
pop
add
ljmp
outsb
push
outsl
or
pushf
or
andl
imul
loopne
dec
dec
sbb
mov
ja
pop
lahf
inc
fcmovnbe
and
repz
ljmp
repz
sub
dec
fsubr
jnp
lds
dec
xor
push
imul
fxam
stos
jb
das
fldenv
sti
pop
mov
pop
xchg
clc
push
jo
mov
mov
popf
jge
notb
inc
dec
push
mov
js
adc
int
and
jge
add
inc
movsb
jp
popa
push
adcl
ja
ret
jne
int3
xor
mov
mov
sub
xchg
das
outsb
cmc
pop
in
push
add
clc
jae
les
out
aam
int
fwait
cld
fwait
pop
loope
add
sahf
mov
xor
cmpsb
sub
cmpsl
lcall
cmp
popf
jae
xchg
add
jns
jl
out
add
sbb
inc
dec
in
cmp
jg
push
jecxz
aad
adc
dec
mov
jnp
aam
cmpsb
stos
pop
gs
jbe
addb
mov
loop
insl
jg
sub
or
xor
fdiv
adc
xor
sub
or
rcrb
sahf
imul
sbb
pop
outsb
das
sbb
inc
test
mov
lahf
cmc
or
cmp
inc
dec
lock
in
xor
pop
cs
push
xlat
mov
stos
rolb
test
stos
mov
int
pop
dec
loopne
jno
fwait
add
cmp
xor
test
pop
out
adc
xor
pop
push
sti
push
cmp
ficoms
sub
xor
repnz
and
jno
ret
ss
inc
cmp
js
mov
ficoms
mov
cmp
shlb
jbe
loop
push
adc
adcb
jl,pn
cli
daa
stc
pop
test
aas
xchg
mov
iret
movlps
test
rol
adc
daa
notb
scas
mov
sbb
insl
mov
and
and
ss
addr16
mov
or
mov
jbe
jns
gs
out
or
das
pop
inc
pop
mov
les
int3
in
sbb
test
out
test
jno
and
or
das
pop
call
repnz
call
mov
sub
pop
xor
int
sahf
mov
shll
jg
mov
jge
pop
scas
cli
adc
xchg
test
pmaddwd
lea
mov
fistl
sbb
stos
lret
scas
pusha
add
and
inc
into
ds
or
sub
pop
jns
outsl
outsl
mov
cmp
cmpsl
xor
gs
movsb
lret
popa
cwtl
dec
sub
inc
bound
out
push
mov
arpl
mov
inc
jl
push
jne
daa
lret
pop
or
xor
ljmp
dec
xor
mov
gs
push
divb
jbe
inc
mov
notl
jae
xchg
xchg
push
cmp
push
sbb
dec
cmp
out
outsb
pop
mov
jp
jp
int
sub
out
aas
sub
dec
call
mov
mov
testb
popa
lea
rcl
push
sub
xor
fldt
shlb
mov
mov
fisubl
push
fbstp
mov
push
pusha
idivl
or
fstp
sti
xchg
fdivr
movsb
cmp
mov
or
xchg
loope
xor
push
in
hlt
cwtl
js
xchg
shl
mov
mov
push
sub
cmp
scas
ljmp
and
dec
rcl
or
inc
jnp
repz
xchg
inc
xchg
loope
dec
dec
jl
mov
int
xor
inc
sub
xchg
or
das
cli
jo
sbb
cmp
pop
mov
or
ss
mov
aas
push
sub
mov
fsubp
icebp
mov
repz
stos
xchg
pop
mov
adc
jb
nop
push
cmp
rclb
movsb
sti
shlb
pop
fwait
shll
push
ja
movsl
addr16
cmpsb
adc
lret
xor
popf
xor
cmp
mov
out
shll
decl
add
testb
xlat
ds
and
pop
xchg
enter
mov
aad
mov
imul
outsb
ljmp
dec
fdivp
mov
cs
dec
pusha
inc
shr
mov
ret
ret
add
pop
sub
xchg
iret
cmc
out
subl
or
daa
in
inc
in
cltd
std
mov
aam
mov
in
insl
ds
fwait
push
push
jge
mov
jnp
add
sub
outsb
adc
popf
fs
push
pop
jmp
dec
mov
ret
mov
pop
pop
loopne
nop
jae
add
push
insl
sbb
adc
push
mov
rolb
xor
mov
or
inc
ljmp
mov
add
cmpsb
in
arpl
repz
mov
inc
jo
ljmp
lods
ljmp
inc
mov
insl
js
jl
mov
xor
jns
push
fstpt
fldenv
or
or
pop
roll
clc
addl
cmp
xor
ret
lods
jmp
ss
jmp
call
arpl
jb
xor
or
cmp
push
pushf
pop
rorb
pusha
inc
cmc
mov
pop
jb
lds
loop
hlt
lcall
push
cmovbe
addr16
lahf
bound
cmp
mov
fdivr
mov
sub
pushf
sub
xor
insl
dec
jb
mov
sti
mov
es
fcompl
adc
pop
fs
loopne
out
jle
mov
sbb
mov
jle
jmp
sub
insb
mov
inc
dec
mov
aaa
into
cmp
scas
jno
ficoml
mov
aam
fs
xchg
sti
sub
cld
push
push
les
xchg
fwait
stos
cmp
jno
xor
add
imul
mov
xor
cmpsb
data16
scas
pop
sub
or
sub
add
pop
movsl
iret
cmp
data16
aad
push
or
fiadds
mov
int
pop
add
stc
mov
mov
sbb
repz
test
adc
add
xor
pop
faddl
xchg
push
js
push
stos
int
inc
sbb
adc
mov
adc
dec
cmp
xchg
out
push
mov
cmp
cmp
sbb
or
int3
lret
jmp
mov
dec
leave
fnstenv
cmp
mov
add
daa
add
jno
or
adc
inc
inc
cmp
arpl
dec
lods
addb
xchg
cmp
jno
lea
add
mov
dec
test
add
in
adc
dec
leave
xor
popa
pop
in
push
sub
jecxz
jb
push
movsb
adc
cmpb
pop
mov
test
sub
cltd
rorl
js
sub
movsb
inc
popa
and
outsl
cltd
or
pop
sbb
jo
insl
xchg
adc
in
xor
mov
iret
cmpsb
popa
movsb
sub
xor
inc
test
mov
leave
xor
adc
int
dec
in
dec
dec
popa
ljmp
sub
dec
in
dec
aas
call
xlat
cmpsb
stos
jnp
pop
push
xor
aaa
mov
subb
inc
inc
mov
cmc
int3
jnp
imul
imul
lret
adc
and
inc
or
cltd
js
mov
cltd
inc
mov
in
mov
cmpsl
scas
lret
std
int3
jno
les
imul
and
sub
ret
lahf
mov
add
nop
jbe
hlt
addr16
sbb
push
stos
mov
dec
scas
fsubrs
dec
push
call
and
cmpsl
faddl
or
je
pop
in
mov
imul
stos
lods
movl
test
and
inc
fisubl
jb
push
cmp
fucomp
popa
and
cmp
lcall
sbb
add
in
dec
dec
push
cmpsl
or
fildl
push
dec
add
xchg
je
jle
cmp
or
mov
cltd
push
jmp
data16
call
dec
std
sar
and
push
sbb
imul
push
ficomps
std
sub
fnstenv
add
pop
push
jb
inc
cmp
pop
mov
in
loopne
out
lea
or
fmull
gs
cmc
pop
and
lcall
dec
jmp
scas
scas
rol
movsl
mov
aaa
into
sbb
aad
clc
mov
jne
lods
scas
pop
jmp
mov
dec
outsl
js
icebp
inc
repz
int3
xor
dec
add
mov
scas
inc
xchg
jbe
mov
je
out
sbb
addr16
neg
sbb
push
stos
cmp
pop
mov
sub
repz
jge
add
popf
add
aas
adc
and
cld
arpl
sbb
iret
popf
mov
mov
pop
inc
mov
adc
push
push
aaa
inc
shll
in
loopne
xor
push
mov
mov
mov
rorl
mov
xor
jge,pn
pop
xchg
mov
push
xor
cmp
shrd
sarb
fs
and
push
js
shrl
fisubl
mov
push
adc
in
fwait
jecxz
lret
mov
cmpb
dec
and
mov
cmp
in
push
lea
sub
push
std
rorb
bound
sub
in
mov
xchg
mov
sarb
lds
fildll
push
out
xchg
cmp
sbb
jbe
and
nop
lock
mov
xor
insl
jle
mov
out
shrl
lea
shlb
outsb
cmpsl
popf
cwtl
cmp
cld
out
js
xlat
mov
sarb
cmp
cld
sub
xor
push
test
cmp
mov
jo
or
nop
or
shl
or
mov
scas
fiadds
faddl
inc
push
nop
out
inc
scas
push
ljmp
jno
aad
das
mov
xor
fwait
sbb
or
int
and
jmp
and
xchg
cmpsl
sub
sbb
mov
fisubrl
dec
xor
aas
xchg
int
lds
or
cwtl
mov
aaa
ficoml
int3
dec
enter
push
out
dec
loope
cmp
leave
pop
push
push
mov
lret
out
shll
iret
sbb
mov
xor
pop
adc
pop
ljmp
pop
popf
bound
mov
and
inc
sahf
sbbl
js
lret
notl
jns
dec
sub
popa
pop
xchg
adc
pushf
sub
loop
inc
cmp
lret
add
dec
rcrl
mov
shlb
mov
cli
cmpsl
aas
loopne
xchg
xor
inc
fdivrl
mov
incb
adc
imul
adc
rdtsc
or
and
movsb
es
js
jnp
ljmp
cmp
jg
out
inc
sbb
sbbl
mov
mov
pop
xor
dec
pop
imull
jecxz
adc
nop
dec
scas
fbstp
outsl
add
or
mov
int
jg
cmp
shl
inc
jge
das
in
out
out
push
fwait
push
inc
dec
pop
mov
out
sub
cmp
or
clc
push
xor
push
es
xor
or
shlb
cltd
loopne
xchg
xchg
loope
jl
and
cmp
scas
inc
nop
lret
mov
int
jecxz
mov
mov
aad
cmp
xor
and
xchg
scas
xchg
dec
add
movsl
js
jne
bound
jecxz
jbe
jmp
pushf
in
mov
gs
stos
adc
push
fs
xor
incl
pop
inc
lods
movsb
cmp
stc
pop
lcall
push
iret
inc
cld
sbb
sbb
movsl
rcrb
push
xor
imul
mov
loop
jne
popa
jae
sub
mov
ja
ds
inc
popa
into
movsl
icebp
bound
mov
imul
dec
cmp
jns
call
sbb
lock
or
into
xchg
les
clc
xlat
push
lods
mov
add
not
mov
xchg
adc
xchg
js
jb
aaa
adc
cmp
dec
bound
fwait
sahf
and
cmp
enter
icebp
iret
stos
lds
gs
rcrb
add
xchg
or
add
imul
cmpsb
test
mov
adc
pop
pop
pop
ds
cli
imul
mov
icebp
mov
add
loop
fnsave
xor
scas
inc
fidivrs
adc
xor
das
xchg
mov
bnd
pop
or
pushf
mov
xchg
insl
in
ja
pop
in
cmpl
outsb
aaa
and
test
popl
fiaddl
adc
in
add
push
sub
cmp
enter
in
bound
out
stos
adc
dec
loope
dec
add
test
cmp
jmp
hlt
outsb
into
pop
bound
or
lods
in
testb
rorl
push
fldt
data16
push
and
cmpsb
jno
movsb
mov
gs
out
push
mov
and
aaa
push
fstp
outsl
or
or
push
loopne
imul
push
ss
and
pop
or
fscale
gs
jne
sbb
fmulp
data16
test
inc
and
pusha
scas
cltd
adc
adc
pushf
bound
and
je
dec
dec
in
rclb
scas
mov
stos
push
nop
stos
sub
repz
xor
xchg
pop
dec
jl
mov
mov
sarb
lea
pop
rcr
jmp
inc
jno
xor
dec
test
test
or
ds
inc
jge
xchg
idivl
popa
imul
mov
and
inc
add
sbb
je
and
mov
pop
adc
pop
rolb
pop
mov
test
call
stos
mov
lock
adc
in
dec
mov
xchg
pop
or
int3
and
adcb
xor
imul
push
in
mov
jae
sub
pop
vsqrtss
cs
fcomps
push
adcb
jbe
fcomps
aam
movhlps
jb
mov
repnz
jns
dec
cwtl
adcl
call
into
enter
imul
mov
xor
cmp
ds
fnsave
add
mov
adc
jmp
icebp
sbb
push
mov
pop
sahf
sbb
cmp
sbb
cmpsb
cmp
scas
mov
ja
fdivl
jns
mov
test
jae
imul
fcomps
out
stc
jp
dec
mov
jg
add
popf
jo
roll
insl
adc
pusha
jl
and
outsb
dec
mov
push
rol
js
cltd
mov
dec
loop
mov
mov
pop
dec
data16
loopne
incb
inc
sbb
test
mulb
cld
cs
cmp
sbb
mov
jb
call
daa
insl
sub
pop
fnstsw
sahf
sbb
pop
dec
xchg
and
xor
ja
pop
sub
cmp
add
sbb
lds
dec
inc
aad
mov
sbb
jge
lods
mov
mov
ja
mov
in
bound
xchg
cmp
dec
dec
cwtl
pop
aaa
mov
shl
push
pop
lods
or
cmc
loop
xlat
outsb
rol
iret
popf
leave
ss
xchg
out
out
icebp
dec
popa
push
rol
daa
xchg
jbe
insl
sti
mov
call
test
inc
xchg
lock
push
lea
movl
fisubs
sbb
daa
add
sbb
cmpsb
jecxz
add
lahf
test
lcall
pop
and
mov
mov
xor
jbe
ss
lods
dec
sarl
pop
push
scas
xor
shrb
loopne
mov
mov
out
andb
ljmp
xchg
enter
mov
sbb
mov
mov
push
push
test
mov
test
dec
pop
stc
push
jp
push
inc
mov
mov
push
das
aam
adc
stos
sbb
sbb
xor
in
daa
sub
pop
mov
mov
fsubs
lods
xchg
bound
test
add
loop
mov
lods
in
push
jl
and
xchg
pop
mov
dec
movsb
jp
and
jo
sub
adc
add
adc
fsubl
jne
cmp
mov
mov
xor
gs
push
cmpsl
and
in
push
pop
push
and
cmp
sbb
movsb
mov
adc
xor
dec
push
scas
pop
cmp
dec
and
gs
and
mov
add
bswap
sub
pop
inc
les
fidivs
xchg
xchg
arpl
pop
fistl
sbb
cmp
xor
pop
sti
dec
cltd
cmpsl
sub
data16
mov
adc
aaa
dec
xorb
mov
popf
jo
dec
xchg
arpl
pushf
sbb
rcrb
push
dec
jge
add
inc
cwtl
iret
fdivl
daa
insb
jle
xchg
jg
test
or
int
movsb
js
mov
ja
dec
mov
add
jmp
xchg
filds
push
fidivl
pop
lods
inc
push
add
jge
mov
popa
dec
sub
popf
stos
insb
call
dec
mov
sub
inc
and
loopne
ljmp
jl
or
leave
roll
pop
fldl
cltd
push
jecxz
andl
int3
arpl
dec
jne
dec
dec
fidivs
push
lgs
ret
outsl
jge
adc
adc
inc
into
popa
test
arpl
mov
fiaddl
mov
mov
sub
jnp
push
inc
or
xchg
mov
sarb
imul
das
dec
push
nop
dec
pop
testl
sbb
or
repz
stos
cmp
cmp
repnz
mov
fdiv
mov
mov
mov
cli
fbld
mov
jmp
repz
outsl
push
fwait
jb
xor
dec
nop
inc
dec
repz
shll
stos
push
out
inc
sub
cltd
ljmp
inc
ficoms
push
subl
mov
loope
sub
popf
push
cs
pop
mov
lea
add
cmp
adc
stos
xchg
pop
mov
je
mov
adc
pop
pushf
inc
sbb
test
add
pop
jno
push
inc
les
inc
push
pop
pop
sub
pop
rcrb
mov
push
inc
jnp
adc
in
mov
das
mov
sahf
sub
dec
imul
adc
inc
push
lcall
inc
jl
mov
sub
shlb
inc
sti
jp
flds
or
jecxz
jge
mov
dec
xor
neg
sbb
jae
xchg
or
subb
ficompl
and
mov
imul
shl
dec
repz
push
ret
outsb
jge
mov
jle
mov
jle
pop
daa
inc
xor
sub
aaa
fwait
xor
fldcw
mov
sbbl
xor
ja
shlb
mov
std
cmpsl
xor
in
and
test
lods
adc
inc
pop
pop
lcall
bound
lahf
sbb
xchg
jg
js
enter
dec
in
out
mov
xchg
mov
jmp
pop
mov
ret
lock
or
xor
sub
mov
das
dec
inc
loop
cmc
xor
cmp
js
fmuls
sbb
mov
inc
cmpb
shrl
pop
out
imul
dec
outsl
lret
divb
push
xchg
sub
pop
mull
bound
push
lods
ja
ret
sbb
and
mov
adc
push
dec
sub
popf
jne
mov
cli
out
mov
sbb
das
subl
divl
and
cmpsb
mov
xchg
loope
outsb
rorl
fldl
clc
mov
sub
lods
out
sti
push
push
orb
jb
and
push
fwait
test
sub
pushf
incl
pushf
negb
jo
dec
movsb
pop
mov
jmp
sti
inc
pop
data16
stc
cmp
xchg
jbe
out
jle
push
sbb
in
out
add
jle
xchg
aas
rclb
loop
int
pop
hlt
fldenv
jge
push
jnp
push
jp
jg
dec
or
roll
repz
int
in
mov
push
mov
jns
and
mov
push
adc
or
mov
jo
add
add
lods
push
inc
ljmp
inc
mov
filds
push
loope
cmpsb
dec
dec
push
iret
sbb
jne
lds
pusha
fisttpl
and
es
movsl
mov
imul
xchg
repz
ficomps
mov
imull
xchg
push
les
adc
in
das
movsl
or
push
cwtl
pop
call
or
sbb
fs
xchg
cltd
or
addb
loop
out
ret
in
jae
pop
jecxz
sti
pushf
cli
sub
ss
es
push
mov
xor
jb
push
jae
mov
or
dec
lock
mov
mov
xlat
mov
out
out
sbbb
pop
adc
fs
mov
faddp
push
mov
mov
subl
cmp
mov
call
daa
or
test
inc
out
pop
loopne
cmp
fcoms
push
repz
jle
add
or
xchg
adc
sub
call
dec
sub
dec
and
dec
addb
lcall
adc
mov
lahf
pop
sahf
or
shrl
add
nop/reserved
mov
sahf
lds
std
aad
and
or
cmc
movsb
sbb
sub
inc
and
cmp
clc
cli
xchg
out
push
xor
mov
lods
cwtl
das
sbb
add
cmp
adc
or
pop
cld
ljmp
sarb
lahf
sbb
cs
pop
sti
add
lds
inc
lods
push
mov
dec
scas
out
cmp
add
inc
data16
inc
dec
xor
inc
clc
cmp
mov
fistps
lods
jns
je
clc
mov
int
fst
sbb
cs
xor
jmp
sbbl
jp
movsl
ret
jmp
push
inc
pop
loop
test
test
xor
lret
mov
or
jp
dec
cwtl
sub
adc
add
add
mov
in
aaa
sub
xor
sahf
jecxz
mov
mov
aad
ret
hlt
mov
inc
mov
or
xor
lock
dec
dec
mov
test
outsl
or
test
jle
sub
pop
pop
repz
mov
xchg
mov
cmpb
mov
jle
icebp
ret
xchg
outsl
dec
sar
fcom
mov
add
sbbb
inc
out
fcomip
lahf
test
inc
and
mov
mov
fnsave
divb
adc
in
sub
out
or
xchg
cmp
cwtl
mov
xor
cmp
inc
fdivrl
pop
pop
repnz
xlat
dec
lret
les
movsl
loope
cmpsl
adc
or
jl
jmp
mov
data16
push
inc
mov
clc
sbb
lds
outsb
mov
or
mov
sub
and
jnp
mov
push
mov
sahf
hlt
adc
sbb
and
add
loop,pt
addr16
scas
push
mov
add
insb
or
fldl
lods
imul
rcr
sub
xor
add
ljmp
inc
fldcw
iret
pusha
idiv
fld
aas
cmpsb
ss
out
jp
in
aas
xor
cmpsb
inc
insb
out
xor
fldcw
cmp
in
std
out
inc
or
mov
add
into
mov
mov
or
mov
add
mov
push
mov
lods
cmc
push
cmp
push
jo
int3
mov
sahf
sbb
gs
sbb
jns
nop
inc
aam
jp
sub
pop
daa
add
data16
xor
xor
cmc
pop
inc
jmp
nop
fwait
cmp
loop
jbe
inc
sarl
mov
je
fcoml
adcb
icebp
mov
xor
adc
fistps
fidivs
dec
loope
sbb
pushf
cmp
scas
popf
mov
fcoms
pop
shrb
pop
lret
cli
cmp
addb
shl
adc
jne
inc
push
inc
cmovs
hlt
pop
ja
xchg
adcl
aas
sub
add
lcall
cltd
sahf
stc
nop
sarb
inc
ret
rolb
pop
add
sbb
out
subb
sbb
nop
adc
jecxz
fwait
xor
fidivs
ja
fs
cld
cmp
add
incb
hlt
cltd
cld
shl
inc
push
push
mov
notb
dec
aam
aaa
sbb
mov
pop
imul
mov
arpl
cs
push
xrelease
mov
xchg
cmc
lcall
jne
jl
dec
ds
addl
push
xor
add
xor
mov
mov
cmc
mov
adc
iret
cmpsl
loop
cld
and
sahf
jne
push
loopne
sub
sub
push
insl
das
pusha
add
xor
rcrl
jge
arpl
cmpb
fwait
in
or
loope
cli
sub
adc
dec
xchg
dec
mov
jae
sub
rcr
idivb
mov
aad
mov
adc
add
sub
stc
mov
and
cmp
fsts
iret
insb
push
lock
ds
test
sub
inc
fdiv
arpl
fistl
lock
outsb
repz
push
stos
add
sub
fstl
cmp
and
sbb
adc
jae
jae
lret
cld
push
push
test
cwtl
sub
leave
cmp
iret
cwtl
or
mov
aas
cmpsb
push
fcompl
sbb
imul
lret
push
sub
mov
scas
dec
fmul
jecxz
push
inc
data16
fwait
in
pop
dec
pop
jbe
jp
dec
jp
mov
subl
in
cwtl
movsl
cmp
sbb
or
and
xchg
mov
call
and
push
adc
sbb
jno
insb
fistpl
shl
and
adc
mov
cli
mov
lcall
push
loopne
aas
pxor
mov
ljmp
outsb
add
sbb
add
hlt
insl
sbb
dec
ret
sub
ljmp
aad
jb
mov
lods
shlb
insb
stos
les
push
into
dec
dec
arpl
xchg
adc
cld
fcompl
inc
imul
aam
int3
xor
insb
inc
mov
push
nop
es
and
mov
cmp
lahf
cmp
in
in
cmp
sub
insb
sub
cmpsl
outsb
rcrl
pop
sub
cld
sub
cmpsb
sbb
mov
das
stc
adcl
push
push
notb
pop
fsubl
mov
insl
jl
mov
pop
test
insb
pop
mov
ja
dec
push
jne
and
imul
xchg
adcb
mov
leave
jae
add
popa
push
sub
call
mov
mov
bswap
into
and
jl
mov
imul
int
pop
stc
mov
mov
enter
test
pushf
mulb
sub
mov
andl
and
stc
loopne
and
aam
xor
insl
or
xchg
mov
cltd
or
xchg
repz
loopne
xor
push
adc
inc
push
scas
mov
jnp
xor
or
push
sti
lods
mov
dec
xor
lahf
loope
in
aaa
dec
push
movsl
nop
dec
add
dec
mov
adc
out
inc
cwtl
andb
rolb
sti
cmpl
sbbb
jns
lds
add
jle
pop
sub
sub
loopne
in
into
lahf
ss
nop
loope
std
pop
loop
enter
lcall
jbe
call
mov
outsl
inc
ljmp
pop
xchg
loope
mov
or
aam
pusha
fistpl
xchg
dec
push
mov
hlt
add
test
xchg
add
das
dec
or
mov
or
inc
movsb
adcl
push
or
mov
or
or
in
subl
cmc
push
lock
fsubrs
pop
int3
jg
mov
adc
js
movsl
lea
sbb
mov
icebp
mov
pop
add
jne
jl
inc
mov
and
sub
out
pop
std
jg
fcomps
sbb
data16
pop
dec
test
out
and
jnp
in
jl
pop
cmp
mov
cmp
ret
cltd
push
mov
pop
xor
arpl
jmp
lcall
dec
popf
popa
les
xchg
test
xchg
es
add
stos
and
ret
cmc
pusha
cld
or
movsb
rorl
das
lds
push
pop
inc
sti
or
or
loopne
sbb
jp
adc
pusha
jne
inc
ret
out
inc
dec
lcall
dec
out
imul
xor
cltd
xor
mov
imull
inc
imul
into
aad
dec
lcall
mov
out
xchg
out
das
dec
jecxz
sbb
pop
inc
test
add
pop
and
mov
dec
lods
pop
mov
push
mov
int
stc
jns
inc
and
pop
sub
ljmp
jecxz
pushf
test
mov
test
xchg
mov
lcall
ret
cmp
push
dec
cmp
mov
sbb
test
fwait
negl
xor
mov
insb
fbstp
mov
push
mov
push
cs
or
int3
mov
push
ds
dec
sub
out
cli
dec
add
mov
jecxz
push
ds
fsubrs
lret
add
xlat
or
push
jl
and
jo
xor
mov
les
ja
adc
fmull
adc
sarb
and
push
add
cmp
inc
or
cmpsb
dec
mov
inc
jno
cs
sbb
lret
sbb
jle
cmp
jno
push
es
push
push
cli
cs
pop
add
xor
pop
ds
imul
rcrl
jns
or
jb
lcall
imul
aas
ror
xchg
ret
push
sbb
fsubrs
mov
mov
call
pop
adcl
xor
jbe
and
mov
sbb
maxps
loopne
add
incb
sub
pop
shll
sub
add
inc
or
mov
and
sti
sahf
cmpl
aad
data16
mov
dec
adc
xchg
dec
pop
pushf
das
pop
fcomps
fs
cs
lret
in
jne
call
or
xor
jne
mov
jmp
cld
mov
leave
pop
adc
push
jmp
push
std
insb
in
add
pop
mov
pop
mov
scas
aaa
push
xchg
mov
adc
pop
leave
ja
sti
out
xchg
sub
cmc
int
iret
inc
pusha
int3
sbb
xor
dec
movsl
out
outsl
rol
inc
push
stc
push
loopne
or
iret
or
mov
xchg
aam
xor
out
sti
repnz
je
or
mov
cwtl
sbb
inc
stos
out
add
repz
sarl
mov
mov
jae
dec
xlat
nop
adc
mov
test
lcall
jp
sub
clc
fwait
xchg
inc
repnz
xor
or
xchg
mov
lcall
lea
repnz
ficoml
mov
imulb
leave
cmp
lock
push
pop
mov
or
js
das
and
push
pop
jle
shrl
popa
movsb
jmp
mov
cmp
push
jno
sub
jbe
rol
lcall
push
inc
fnsave
es
pop
cmp
adc
repnz
mov
xchg
pop
push
adc
mov
cmp
mov
inc
or
inc
xchg
ret
xlat
jmp
adc
pop
dec
dec
mov
xchg
add
xor
push
cmp
sub
test
aam
xor
and
fcmovb
xchg
mov
push
add
cmp
mov
in
rcr
in
mov
or
push
sub
fcomip
cmp
push
in
mov
pop
cli
xchg
movsl
pop
add
fdivrs
push
in
mov
sbb
push
out
mov
add
data16
icebp
sub
ja
inc
bound
mov
cli
or
add
leave
push
or
mov
mov
inc
lcall
and
addr16
insb
cltd
loope
cmp
lods
inc
rorb
cmp
sbb
bound
fdivrs
xchg
or
push
push
adcl
sahf
aam
outsl
add
or
stos
rorb
stc
mov
inc
int
pop
cld
das
mov
mov
cmp
dec
out
adc
mov
movsb
xchg
sub
loopne
inc
adc
adc
cltd
lock
or
rclb
push
inc
or
pop
xchg
xor
mov
mov
xor
sbb
daa
push
push
fcom
push
mov
or
pop
add
adc
test
sub
inc
testb
repz
mov
mov
adc
fstl
xor
jmp
fists
mov
pusha
cs
filds
mov
pushf
shll
ljmp
notb
test
xor
repnz
fwait
cmp
dec
aad
pop
data16
push
add
mov
xor
push
cmp
inc
call
push
ror
mov
sbb
mov
sub
pusha
dec
pop
les
add
sbb
in
ficoml
cltd
leave
mov
in
les
dec
push
out
test
inc
jecxz
ret
hlt
mov
mov
jbe
jl
push
cmpsl
int
add
fs
inc
add
andl
jp
lock
inc
adc
add
or
sbb
add
imul
fwait
xor
addr16
shrl
push
adc
dec
or
jmp
cwtl
xor
jecxz
xchg
mov
lahf
jle
rcr
out
ret
adc
imul
jne
pop
add
lock
dec
dec
gs
push
jae
xchg
test
sbb
add
jge
xchg
inc
shrl
clc
dec
dec
lods
insl
or
mov
aad
sbb
fwait
test
scas
cs
in
ljmp
gs
cs
orl
andb
sbb
ss
xor
add
jnp
or
sbb
adc
inc
sub
jno
mov
insb
pop
lds
cmp
lcall
pop
movsb
aaa
jnp
jl
xchg
pop
mull
mov
jecxz
xchg
jae
enter
mov
push
mov
sbb
shrl
jmp
cmpsb
cmp
jl
insb
scas
es
xlat
outsb
pusha
mov
mov
fstps
mov
jne
daa
cmp
lds
inc
dec
push
push
out
cmp
push
insl
lods
lret
repnz
mov
in
je
push
inc
loopne
mov
ficomps
mov
mov
adc
repnz
mov
jb
pop
jne
mov
push
add
inc
fs
aam
sub
mov
movsb
add
stc
or
loop
pushf
adcb
mov
icebp
jecxz
jg
shrl
pop
repz
jle
push
and
out
gs
cli
adc
aaa
call
xchg
cld
push
or
mov
push
str
sub
pop
mov
cmp
xorb
aas
imul
sbb
sub
mov
mov
push
lcall
push
out
jl
xchg
xchg
sub
divl
jg
add
mov
pop
lcall
lahf
ss
pop
mov
rcrb
fwait
lods
pop
dec
xchg
decl
outsl
push
movsl
jno
fdivrl
mov
xchg
or
imulb
mov
push
mov
sbb
loope
pop
cli
push
inc
inc
mov
mov
imul
lret
sub
sbb
or
xor
bnd
mov
dec
pop
adc
sbbb
jo
les
lock
mov
daa
iret
pusha
adc
or
sub
push
sub
mov
cli
adc
cwtl
es
decl
jge
popf
das
adc
push
test
stos
and
sbb
sbb
cmp
xchg
mov
cmp
inc
popf
inc
loope
sbb
test
sti
adc
xorb
xor
insl
fmul
outsl
std
cmpsl
ds
xchg
in
iret
jb
fldt
imul
outsl
dec
bound
sti
test
cmp
lcall
jae
jne
sahf
mov
jg
mov
dec
mov
cli
add
mov
push
and
sti
je
jp
sbb
icebp
inc
sub
adc
pop
aas
xor
dec
cmp
sbb
sbb
pop
insl
pop
push
std
out
push
cmp
push
lahf
inc
dec
loopne
test
nop
or
mulb
mov
cld
xchg
in
cwtl
jl
rcrl
mov
call
leave
movsb
repnz
sbb
sbb
and
sbb
into
testb
shlb
cmc
in
push
sarb
das
imul
dec
aad
jne
mov
adc
adc
decb
std
aam
sub
or
je
in
dec
call
push
sahf
imul
es
das
pusha
sbb
and
test
popa
stc
sahf
outsb
sub
or
adc
or
cld
lcall
cwtl
das
aad
cltd
mov
and
fsubs
ret
push
jp
inc
mull
gs
sub
pushf
fs
and
fldcw
pusha
dec
sbb
popf
and
rolb
inc
jg
in
jp
sbb
bound
test
and
jmp
test
mov
cmp
lahf
daa
adc
adc
popa
xor
xchg
jb
scas
sub
in
adc
leave
lret
jno
push
aaa
pop
shrl
dec
push
ja
ss
lock
ficomps
mov
imul
cmpsl
fs
jb
mov
pop
repz
sbb
push
lods
mov
xchg
ret
and
xchg
loop
stos
enter
add
daa
mov
rcll
mov
sub
push
cmp
fnsave
cmc
push
mov
stos
adc
sarl
xchg
jb
addr16
in
aam
jmp
mov
lahf
push
sub
sub
jnp
add
stos
lea
or
dec
and
bound
inc
andb
pop
jmp
ret
lret
and
cld
mov
stos
inc
add
ret
mov
xchg
imull
repz
cmp
mov
jmp
mov
xchg
sub
sub
aam
mov
rorb
je
out
cs
pop
insb
mov
es
hlt
aam
sub
pop
xor
je
cmpb
testl
js
mov
pop
adc
and
mov
adc
xor
int
std
lea
sub
daa
clc
andb
xchg
xchg
sub
test
out
pop
xchg
negl
pop
mov
pop
repnz
outsl
stos
int
cltd
jg
lret
ja
cs
sbb
in
dec
jmp
mov
cmpsl
lcall
jg
jns
addr16
je
ja
loope
rcrl
es
js
test
sbb
mov
cmp
pop
dec
sahf
je
push
sub
cmp
dec
loop
nop
into
movl
xchg
sub
ljmp
mov
pop
pop
daa
mov
mov
je
mov
and
jl
fldcw
mov
js
pop
add
sbb
jmp
jmp
decb
aam
xchg
lock
pop
adc
inc
bound
inc
inc
lret
mov
loope
sbb
mov
shl
shl
pop
orl
and
sti
mov
mov
lods
icebp
stos
mov
pop
sbbl
sub
or
shrl
cmp
xchg
insl
es
cli
inc
movsb
cmc
and
mov
dec
mov
test
test
adc
add
lahf
pop
add
scas
xchg
mov
ljmp
insb
sbb
andl
das
cmpsl
xchg
adc
cli
into
cs
fdivl
testl
xchg
push
iret
orb
sub
sbb
lcall
pop
fidivrs
shll
cmp
fsubp
mov
cmp
shr
stc
in
mov
mov
imul
sub
ss
mov
in
push
out
in
dec
sbb
dec
sahf
xchg
outsb
or
mov
push
sub
adc
gs
and
jmp
sti
sbb
jae
pop
into
bound
sarb
pop
jecxz
pop
adc
mov
gs
loopne
loop,pt
add
lea
ja
xor
sti
cltd
xorl
enter
push
mov
sub
mov
jo
dec
jmp
inc
addr16
enter
mov
mov
or
and
xchg
pop
push
or
pop
rcll
lahf
insb
sbb
or
dec
repz
and
fs
popa
ja
cmpsl
cwtl
push
jp
enter
scas
in
dec
and
pop
xchg
inc
push
xor
in
in
imul
test
loope
push
and
cli
sub
pop
sbb
pop
adc
ja
cmp
pop
fsubl
push
mov
fsubr
pop
insl
adc
movsb
data16
cwtl
insb
sarb
rcrl
je
jecxz
loope
aas
imul
inc
arpl
mov
push
scas
xor
fcmovnbe
push
stos
add
sub
std
or
sub
mov
inc
mov
das
movb
mov
pop
xchg
mov
fcomps
cmpsb
add
shrb
testb
and
sbbb
mov
push
mov
pop
adc
insl
inc
mov
sti
sub
hlt
pop
inc
cltd
outsb
push
out
adc
das
inc
adc
jb
xor
mov
stc
push
lret
xor
xlat
out
mov
ret
pop
gs
lret
inc
lcall
imul
outsl
and
loop
popf
push
call
push
fldt
mov
mov
adc
adc
dec
jbe
jbe
pop
aad
loopne
hlt
int3
ja
pop
cmpl
push
scas
sub
push
pop
fcoms
sahf
sbb
out
sub
cmpsl
mov
mov
bound
popf
stc
sti
ja
adc
inc
fsubrp
add
fmulp
and
pop
imulb
and
add
add
pop
lock
xor
cwtl
xor
inc
roll
cmp
push
dec
out
outsl
dec
lahf
sbb
inc
or
pusha
std
xor
pop
and
ja
lret
iret
fdivrp
xchg
and
mov
call
dec
mov
push
cmp
movq
adc
xlat
mov
adc
jge
sub
jg
aad
in
stos
inc
sbb
dec
inc
stc
and
xchg
and
aas
push
loopne
scas
cld
jg
sbb
push
jle
xchg
cmp
and
les
inc
xchg
rorl
adc
test
dec
loopne
hlt
fmulp
enter
and
int3
smsw
and
test
inc
sub
push
negb
js
movsb
jecxz
sub
adc
sub
and
scas
into
inc
sbb
rorl
and
push
mov
mov
inc
ja
lds
xor
push
sbb
dec
aaa
aas
jl
mov
rclb
xor
ret
pop
aad
cld
sub
pop
loop
lock
xor
or
sahf
lods
push
insl
addr16
cmpsl
movsl
icebp
mov
mov
inc
decl
movsb
adcl
cli
push
mov
cwtl
adc
out
mov
inc
les
imul
insl
or
std
pop
incl
out
jnp
mov
mov
cwtl
mov
or
mov
loop
inc
adc
cmpsb
testb
sbb
push
aad
mov
enter
sub
out
pop
cmp
mov
divb
mov
arpl
stos
inc
cmp
loopne
sbb
jb
inc
xlat
cmp
xor
push
rcrb
add
sbb
pushf
pop
mov
mov
mov
jp
xchg
push
lahf
or
hlt
nop
jnp
mov
out
lea
pop
hlt
xchg
cmp
addr16
rol
push
jno
fisubs
aad
call
les
pop
pop
ror
les
xorb
in
xor
loop
add
sub
js
mov
add
pop
jl
cmc
mov
aaa
jmp
mov
pop
add
dec
divb
sti
push
out
adc
sahf
xor
push
push
add
dec
popa
and
and
stc
xor
dec
cmpsb
and
daa
sti
jbe
xlat
push
inc
cmp
test
jge
pushf
rolb
push
int3
imul
mov
out
xor
mov
adc
xchg
push
jo
mov
int3
sub
rorl
cmovo
xchg
jp
fsubrl
mov
jg
add
inc
ror
fyl2x
ret
fwait
jns
movsb
addr16
jb
xchg
int3
fwait
lret
push
cmp
add
or
and
movsl
je
push
stos
jmp
push
lret
pop
mov
outsb
jl
outsl
mov
xchg
pop
push
jge
inc
and
pop
pop
rcrl
jb
scas
jbe
sarb
and
sti
push
fnsetpm(287
inc
imul
bound
pop
mov
sbb
ret
or
add
test
inc
in
mov
or
addl
in
imul
xchg
inc
cltd
in
mov
and
adc
sub
fldl
pop
movsb
testl
jnp
sbb
inc
mov
ss
xchg
arpl
out
gs
jg
scas
loop
inc
mov
jae
inc
scas
mov
cmc
xchg
jg
jp
mov
lea
dec
not
mov
fistps
inc
outsl
mov
ja
pop
push
out
jmp
jne
mov
lods
push
ljmp
dec
mov
jecxz
xchg
add
imul
aad
mov
xchg
mov
fwait
jle
pop
pop
adc
cmp
mov
cld
add
out
nop
push
movsl
add
jmp
movsl
xchg
dec
adc
mov
bound
push
popf
xor
ficoms
sub
push
clc
jl
xor
xchg
ds
pop
insb
mov
out
test
insb
adc
add
pop
orl
xchg
pop
xchg
xchg
aaa
out
stc
push
dec
mov
lods
cmp
mov
aad
das
jb
cmpsl
jl
stc
mov
imul
xor
outsl
ret
insl
push
dec
push
dec
cmp
shlb
movl
in
push
push
inc
xchg
mov
push
mov
sbb
jge
stc
dec
testl
adc
add
xor
and
cmp
filds
rcl
outsb
aad
lds
pop
mov
sub
in
xchg
xchg
mov
repz
cltd
test
mov
xor
shlb
push
jmp
jle
mov
jge
xchg
xchg
xor
ljmp
loope
push
mov
add
lds
adc
xor
push
jl
mov
cmp
mov
mov
push
add
push
and
aad
andl
mov
stc
add
or
aas
ret
iret
into
scas
out
adcb
inc
mov
and
and
xor
pop
cmpb
inc
ficompl
push
ss
xor
mov
or
les
jno
mov
cs
push
cs
jmp
je
icebp
imul
dec
dec
cmp
or
adc
pop
dec
inc
lcall
and
fisubs
mov
ljmp
adc
repnz
jge
int3
test
dec
add
jle
jmp
inc
mov
sbb
xor
cmp
cwtl
and
dec
aas
xchg
add
ljmp
in
aas
and
jns
cmp
mov
mov
or
insb
popa
idivl
mov
mov
leave
lds
testl
scas
jle
add
jb
push
leave
testb
xchg
pop
int3
and
jae
inc
cli
xchg
add
fisubs
filds
xchg
lock
xchg
sbb
xchg
sbb
jp
fwait
jmp
mov
punpckldq
mov
xor
push
in
les
movl
push
pushf
and
adc
mov
arpl
lret
rclb
inc
inc
mov
in
in
outsb
sar
ljmp
nop
nop
mov
jnp
rolb
dec
and
stos
push
xor
xchg
jae
dec
jg
mov
xchg
dec
ficompl
pop
lret
xor
mov
ret
add
adc
addr16
clc
call
in
adc
xor
cmp
aaa
fdivl
mov
sbb
mov
jle
ficoml
clts
and
xor
inc
jmp
pop
sbb
or
inc
js
repnz
sarl
add
xlat
test
iret
mov
rolb
rcrl
jp
and
jnp
and
cmpsl
fs
gs
jae
inc
inc
jne
aaa
js
mov
dec
inc
es
jb
scas
nop
pushf
mov
mov
dec
mov
or
mov
gs
or
imul
push
mov
adc
bound
jmp
push
cmc
in
xor
dec
and
int
lds
insl
test
rcrb
cmp
push
in
test
sar
jg
and
pop
adc
gs
xchg
fidivl
fcomps
loope
push
mov
lods
shlb
pop
outsb
pusha
loop
sub
mov
adc
sahf
xchg
mov
add
clc
jae
mov
fbld
cwtl
xchg
inc
stos
lcall
and
imul
add
outsb
inc
jno
mov
and
ss
in
xchg
daa
or
data16
sbbb
ret
xrelease
mov
sub
and
shl
pop
loope
std
or
dec
jno
cmpsl
xchg
inc
xchg
test
leave
push
lea
xor
es
xor
shlb
sti
xchg
insl
stos
cltd
test
les
inc
testb
imul
pop
cmp
sub
roll
pop
divb
ret
ja
pop
jmp
cmp
aas
push
jbe
fistps
in
jg
sub
add
arpl
xchg
push
ss
nop
fiaddl
adc
lods
enter
sub
iret
mov
iret
jg
test
sbb
ljmp
sbb
xchg
fdiv
das
into
lods
fsubr
fisubrs
xor
inc
imul
jno
push
lcall
lcall
mov
inc
mov
cmp
add
into
test
pop
cmp
xor
cmovns
sbb
or
mov
pop
loop
in
fadds
adc
pop
jbe
cmp
mov
in
xor
xchg
fsubrl
or
inc
les
sbb
mov
mov
sahf
lret
push
mov
les
aam
add
mov
adc
fidivs
testl
push
push
inc
mov
cltd
lock
push
mov
mov
stos
mov
mov
fstpt
lods
lea
sub
jmp
nop
sub
inc
xchg
mov
cmpsb
dec
sbb
jo
push
mov
outsl
sub
ds
jle
int
push
lds
ja
sbbl
clc
in
sbb
push
scas
jl
mov
jl
pop
call
ds
in
loop
add
mov
pushf
jae
ds
and
scas
cli
iret
cmpsl
adc
enter
inc
sbb
in
mov
mov
ja
pop
jecxz
sbbl
mov
insb
jae
xlat
sub
aad
push
inc
scas
addr16
fildll
test
movsb
dec
popa
dec
test
xchg
jmp
mov
ss
je
call
stc
imul
popf
lods
xor
icebp
negl
jo
popl
imul
stos
fidivrs
adc
inc
cltd
outsb
imul
popf
xor
pop
lea
mov
inc
push
insl
mov
mov
pop
or
pcmpgtd
mov
aaa
cwtl
lret
popw
add
into
sub
or
or
ss
fcomp
sub
xor
and
dec
mov
lds
mov
mov
addr16
rcr
aaa
andb
sbb
pop
adc
ds
lea
lahf
or
dec
pop
mov
pop
outsl
mov
pop
icebp
mov
js
imul
inc
xchg
pop
shlb
mov
je
outsl
dec
inc
inc
and
ret
and
fmulp
out
mov
adc
ret
lcall
or
push
and
int3
sbb
mov
xor
pop
ffreep
inc
int
repnz
adc
xor
insb
add
or
mul
mov
scas
inc
pushf
lock
sub
ftst
movsb
dec
ss
lret
adc
mov
pushf
cli
mov
imul
push
sub
sbb
jns
and
jnp
imul
flds
jecxz
ljmp
addr16
outsb
aas
and
xor
sub
mov
out
ud2
test
and
jmp
pop
leave
cmpsl
jno
addr16
xchg
or
or
cmp
sub
or
sub
dec
pushf
xor
shr
std
mov
mov
push
or
xor
jmp
or
mov
jmp
sub
add
jge
add
push
ja
push
test
dec
jmp
add
scas
jmp
lods
ret
shlb
sub
bound
xchg
inc
js
insb
push
and
sbb
pop
in
test
dec
mov
arpl
aam
add
jl
stos
push
inc
imul
shl
add
and
sbbb
inc
mov
out
jmp
add
adc
inc
dec
inc
or
mov
or
pop
es
mov
mov
xor
add
mov
test
enter
cmp
or
fwait
xor
pop
sub
dec
cmp
push
inc
pusha
mov
or
movsl
pop
sub
sub
mov
jge
inc
jo
arpl
fildl
dec
outsb
in
dec
outsl
cmp
pop
mov
inc
lods
sub
insl
popa
out
mov
xor
lcall
dec
lods
jge
pop
lahf
stos
rcll
sub
xlat
jne
xlat
push
es
mov
adc
push
dec
add
push
pop
aaa
or
mov
inc
jge
idivb
jge
cmpl
je
adcl
jg
inc
ficomps
jb
in
mov
les
push
leave
aas
les
push
mov
fldcw
push
inc
or
inc
lret
pop
bound
pop
repz
repnz
jp
stos
and
add
negl
xchg
test
push
pop
sbb
nop
cwtl
inc
mov
inc
test
or
aad
adc
stc
mov
and
push
cmpsl
fisttps
aam
scas
adc
pop
daa
ret
fsubrs
jae
lods
mov
push
shlb
or
pop
xor
scas
jnp
adc
les
or
lock
scas
cmpsb
out
dec
popa
dec
shrl
ljmp
push
ja
add
inc
push
mov
xchg
leave
inc
lds
pop
out
setle
xchg
and
mov
pop
mulb
testl
sbb
rolb
fsubs
mov
pop
sub
pop
mov
imul
adc
test
pop
outsl
hlt
push
adc
jb
xor
dec
jno
testb
cli
mov
jg
in
shlb
mov
jns
call
add
sbb
sti
cmp
sbb
jle
pop
fsubrs
mov
insl
mov
in
in
das
adc
loop
adc
sarl
aaa
push
out
push
mov
or
cmp
fdivrl
pop
test
dec
aam
xor
in
push
int
and
mov
push
push
jecxz
xchg
das
popf
lods
icebp
lds
or
push
imul
fwait
sti
add
sbb
sbb
mov
int
jp
dec
cli
sbb
call
fwait
xlat
pop
mov
imul
scas
dec
mov
pop
dec
mov
pop
mov
inc
sbb
test
out
out
or
sbb
aas
cwtl
jne
pusha
loope
jne
clc
or
fcmovne
jmp
pop
js
jns
shll
call
dec
loopne
xlat
sbb
mov
or
insl
aam
rcrl
test
jl
sbbb
mov
testl
cmp
or
dec
add
pop
mov
mov
xchg
ljmp
outsb
mov
dec
lret
push
loop
sbb
out
popf
in
arpl
cmp
inc
femms
push
test
dec
fisubl
jnp
push
inc
mov
pop
out
xchg
mov
push
or
scas
out
fnstenv
jg
mov
leave
iret
iret
jecxz
out
frstor
std
lret
js
pop
loop
mov
cmpsl
pop
push
push
test
fistps
cmpsl
movsl
stos
das
xchg
stos
ds
inc
test
cltd
cmpsl
out
inc
fisubrl
pop
adc
inc
ljmp
roll
sti
cmp
jp
add
push
xor
test
jl
in
jg
or
pop
jbe
inc
pop
test
add
and
sub
adc
dec
in
add
cmpsl
xchg
dec
mov
adc
jl
mov
popf
iret
jno
ljmp
pop
mov
xchg
add
inc
mov
jg
cmp
jge
not
xchg
adc
fs
adc
dec
cld
test
rcr
dec
jecxz
xor
sbb
pop
jb
sub
popf
sbb
pop
cmp
add
mov
push
mov
out
xchg
aam
outsl
mov
daa
mov
lods
xor
adc
rcrl
push
gs
pushf
cmp
xor
sub
adc
push
sub
hlt
mov
add
dec
pop
in
fwait
pop
or
and
lods
fsubr
mov
pop
mov
lret
iret
je
sbb
repz
inc
fstl
fcomps
mov
add
outsl
jb
test
arpl
stos
mov
xchg
sub
sub
fcompl
mov
int3
hlt
daa
mov
out
sub
pushf
dec
aad
jl
mov
fcoms
pop
jmp
mov
data16
jns
pushl
shlb
jb
out
adc
xor
xor
scas
inc
sub
xchg
mov
sbb
pop
out
jae
out
xchg
bound
add
pushf
fbstp
jnp
mov
or
les
mov
rorb
lret
lods
mov
aad
push
jmp
inc
pop
call
imul
jo
out
xchg
dec
lret
stc
or
push
testl
sub
or
mov
add
dec
push
nop
addr16
pop
cltd
mov
add
ficomps
adc
sbb
sbb
ret
cmp
pop
or
loopne
lret
adc
push
pushf
popf
ss
mov
repnz
hlt
mov
ret
jg
clc
scas
int3
pop
push
xchg
mov
and
add
jbe
ja
jno
mov
sub
xchg
loopne
stc
or
mov
sbb
sbb
push
in
add
daa
scas
xchg
in
pop
add
aas
xor
imul
cmp
mov
inc
test
dec
jnp
arpl
pop
pop
dec
loope
subl
or
pop
xchg
mov
xor
pop
test
mov
and
and
pop
jns
pop
ret
fsubrs
sub
inc
mov
add
and
jmp
mulb
and
push
test
jle
xlat
jbe
popf
cmp
movsb
ljmp
adc
xor
outsl
mov
enter
add
dec
add
insb
cmpsb
inc
pusha
inc
std
add
aas
xchg
inc
in
cs
in
js
xchg
test
rol
lret
mov
fildll
cmpsl
rclb
repz
int3
stc
or
repz
int
dec
popa
clc
jp
sbb
mov
add
adc
aaa
or
cmp
popf
and
mov
fbld
fisubrs
jns
sub
mov
mov
push
mov
adc
xor
cmpsl
inc
lretw
push
jecxz
pop
jmp
mov
out
stos
push
sub
or
stc
inc
adc
pop
mov
add
mov
add
fidivrs
mov
js
dec
roll
jns
dec
iret
adc
inc
enter
dec
scas
call
dec
jl
cwtl
daa
lods
iret
mov
and
insb
into
out
test
rolb
loope
fdivrs
loop
mov
addr16
gs
call
mov
xchg
insb
rcl
bt
outsb
mov
and
ds
rcll
adc
sub
insb
ret
das
xor
es
dec
pop
clc
cltd
pop
xchg
notl
cltd
sub
xchg
lea
sbb
shrb
jl
mov
push
int
or
push
iret
push
jl
and
enter
rcrb
add
mov
lahf
lcall
out
dec
shlb
out
lret
adc
mov
mov
popa
xchg
xchg
cmp
negl
mov
out
pop
sub
xchg
icebp
add
jb
aad
aad
jmp
pop
lock
and
stos
xor
push
push
sahf
stos
push
rorl
movsb
pop
mov
and
jbe
mov
popa
insl
mov
andps
add
add
sub
mov
outsl
add
adc
push
popa
xchg
xor
out
xchg
rclb
xor
loopne
lret
sbb
hlt
push
addr16
rcll
cmp
lods
xchg
aas
add
or
pop
popa
aam
adc
mov
pop
mov
push
and
mov
aad
push
xor
nop
mov
sti
xchg
fsubs
rcr
fsubrl
mov
movsb
mov
es
std
popa
jnp
jecxz
rcrl
or
int
scas
sub
sub
mov
fisubrl
xlat
out
dec
and
sbb
out
mov
cmp
push
gs
pop
shlb
xor
loop
lods
movq
popa
jne
push
adcb
cmp
cs
dec
stos
ss
push
movsb
inc
xor
sbb
lock
imul
mov
push
xchg
push
add
das
outsb
jo
fs
jle
outsb
and
xor
std
and
dec
pop
repnz
enter
sbb
leave
les
push
jbe
xor
dec
jmp
sti
popf
nop
jae
inc
int
and
jecxz
in
xor
push
out
adc
pop
shrl
cmp
fwait
adc
mov
in
add
mov
in
pop
arpl
stc
and
push
mov
push
mov
iret
jno
enter
jmp
cld
inc
mov
xchg
insl
add
sbb
outsl
xchg
andb
mov
lods
pusha
clc
div
pusha
mov
inc
cmp
mov
jno
ss
xchg
add
ret
sbb
clc
ret
arpl
jg
add
jle
mov
daa
insl
xor
mov
push
jl
xchg
subl
xor
adc
cmp
or
mov
loope
daa
cmp
push
mov
mov
dec
or
adc
stos
adc
push
xchg
call
fldl2t
pop
out
push
inc
mov
dec
pop
xadd
repz
mov
idivb
lea
mov
sbb
cwtl
jb
mov
repnz
ss
ss
pop
xor
mov
ret
icebp
movsl
xlat
adc
not
mov
cld
cmpsl
add
and
stos
mov
mov
sbbl
pop
mov
lods
fildll
clc
or
fiaddl
xchg
enter
mov
roll
add
mov
cwtl
pop
sar
pushf
mov
lds
test
add
enter
loope
and
ja
test
fldenv
add
inc
lods
mov
xchg
int
shl
mov
sar
mov
push
sbb
mov
lds
cltd
outsb
lahf
add
ret
in
das
incb
in
fs
pop
mov
in
lahf
imul
adc
out
xchg
pop
jecxz
add
fsubr
imul
add
add
or
in
lahf
lods
sti
inc
sub
push
adc
xchg
jb
icebp
sahf
lods
cmp
dec
aam
or
cmp
clc
ret
rorl
lock
push
cld
fildl
mov
outsb
lock
dec
add
xchg
call
ror
int
clc
push
clc
mov
js
and
shl
insl
dec
xor
ds
jg
pop
mov
jae
xor
arpl
add
add
int3
xor
inc
fidivrl
mov
stc
in
stc
pop
inc
aad
adc
rcl
pop
pop
and
sar
xor
dec
mov
data16
pop
lds
pop
jb
jns
stos
pop
mov
adc
data16
mov
sub
lahf
adc
gs
popa
jns
hlt
and
jns
sub
xchg
in
inc
popa
pushf
fs
or
mov
jo
mull
mov
cwtl
mov
pop
popa
aas
jle
or
test
inc
mov
loope
out
rorl
push
fdivr
xchg
hlt
scas
in
fwait
sub
add
enter
or
xchg
std
lahf
call
imul
sub
jb
cmpsl
dec
ret
daa
xchg
jecxz
pop
adc
scas
push
mov
pop
mov
nop
adc
inc
loope
mov
adc
pop
bound
mov
das
jecxz
outsl
leave
xor
xor
shr
mov
mov
imul
mov
sub
test
outsl
adc
mov
mov
dec
mov
jmp
lahf
push
push
mov
into
dec
gs
das
fsubrs
int
inc
addr16
mov
mov
cmpsb
cs
lahf
push
in
mov
es
inc
xchg
bound
int
or
xchg
mov
out
sahf
dec
cwtl
mov
aad
adc
inc
dec
stos
mov
cmp
fisubrl
pop
xor
jnp
adc
out
sbb
mov
leave
mov
push
movsb
dec
insb
je
in
movsl
mov
shrl
pop
je
dec
mov
js
fisttps
mov
stos
sbb
xchg
nop
xlat
lret
lds
lret
xchg
jne
mov
test
sbb
mov
bound
andw
jae
push
movsl
push
pop
mov
repz
jecxz
jg
jecxz
dec
or
mov
push
test
lds
push
es
pusha
mov
xchg
ljmp
pop
pop
popf
leave
push
adc
leave
jmp
dec
xchg
jmp
out
test
pop
scas
outsb
popl
fmull
jno
insl
fisttps
xchg
scas
push
mov
fistpl
sub
aad
ds
jp
ds
repnz
adc
subl
xchg
dec
call
shl
add
vmread
outsb
sbb
and
into
popf
sub
insl
jge
pop
push
sub
rolb
repnz
call
lret
hlt
jg
test
aam
repz
jecxz
outsl
jno
and
fadd
xor
out
dec
pop
loope
xchg
mov
lcall
in
jmp
jae
jnp
lods
push
push
adc
movsb
les
aas
icebp
mov
mov
push
fcompl
inc
ficomps
mov
aad
cmc
lahf
stos
es
jbe
push
mov
jb
mov
rorb
cmpsl
and
push
mov
adc
adc
icebp
xchg
mov
and
jno
in
fucom
cmp
cmp
dec
scas
inc
jg
ret
rcl
int
nop
dec
cmp
xor
adc
push
inc
sti
sti
pop
dec
and
leave
pop
insb
dec
sahf
and
out
sarb
mov
mov
dec
mov
icebp
in
dec
mov
adc
mov
or
in
insb
not
dec
push
push
imull
gs
jge
inc
out
sub
mov
mov
pushf
repnz
dec
push
ds
outsl
sahf
jae
jo
xor
es
popf
add
ljmp
dec
fwait
cmpsl
mov
sahf
ss
daa
std
jp
cld
xchg
and
movsb
lea
inc
xchg
stos
jecxz
mov
rcl
sub
das
lods
adc
xchg
jno
pop
popf
sub
push
cltd
xor
cmp
sbb
dec
mov
mov
dec
xchg
xchg
mov
fistpl
mov
jmp
add
ret
add
cwtl
mov
jge
xchg
pusha
pop
in
lods
sub
dec
cmp
mov
xlat
imul
adc
add
test
jns
das
stos
subb
cmp
sub
push
stos
cli
and
sti
jmp
mov
in
imul
mov
and
ds
xor
outsl
repz
lods
cs
test
mov
mov
mov
call
jp
sub
out
cwtl
mov
hlt
mov
xchg
add
int3
loopne
int
cmpb
mov
pushf
or
mov
jns
pushf
cmpsl
pop
neg
mov
add
ror
pop
cmpsl
cmp
hlt
mov
mov
faddp
ss
testb
fsubr
pusha
xor
out
mov
roll
mov
push
or
int
jmp
mov
push
inc
je
and
sbb
out
test
push
push
nop
and
addr16
cmp
popa
jno
and
sub
pop
fwait
loope
loop
loope
xchg
add
in
cmpsb
lahf
jae
movb
or
pop
jb
gs
push
pop
cmp
int3
ljmp
lcall
stos
xor
sarb
xchg
scas
fstl
js
push
je
inc
inc
sbb
mov
aam
xor
imul
fsubr
sub
cmp
stc
out
inc
dec
aaa
in
inc
and
add
test
out
ret
neg
pop
sbb
cmp
jge
sti
out
push
mov
inc
ror
adc
push
and
imul
jbe
aaa
jl
jno
std
cltd
decb
mov
adc
ds
popf
out
adc
popa
dec
adc
xor
xchg
inc
pop
xor
movsb
mov
cld
js
lds
test
lods
and
lret
push
fildl
gs
dec
imul
push
mov
insl
mov
aas
scas
ja
inc
rcrb
lods
aaa
test
mov
ljmp
xor
in
loop
in
ret
insb
pop
scas
out
popa
adc
dec
clc
jae
dec
enter
xorl
incb
cwtl
sbb
aas
mov
pop
imul
les
sbb
sbb
push
inc
dec
shll
flds
popf
mov
subb
pop
and
inc
dec
add
rorb
mov
fists
aad
hlt
lea
cmp
jecxz
movsl
in
subb
mov
sbbb
dec
push
xchg
outsl
cmpsl
add
sti
adc
shlb
dec
in
xor
scas
test
mov
push
sub
fwait
test
stos
push
pop
in
push
xor
add
xlat
xchg
push
repnz
andb
push
mov
ficoms
mov
fstps
cmp
sbb
pop
cmp
fdiv
mov
lret
mov
out
adcl
push
sbb
adc
loope
data16
dec
adc
rcrl
add
popf
es
xchg
sahf
in
dec
scas
mov
jne
adc
or
lahf
cwtl
cmp
imull
dec
data16
mov
push
in
xorb
shll
inc
inc
lods
nop
xor
out
mov
mov
push
cmovno
inc
ja
sbb
adc
lock
js
jge
outsl
cltd
xor
fldcw
xor
mov
mov
jge
xchg
lret
sbb
ds
jb
mov
mov
ror
call
push
je
sbb
xor
bndldx
inc
adc
xchg
xchg
cmpsl
or
sub
pusha
aaa
xchg
ja
imul
push
std
or
jno
jl
lds
push
cmp
pop
jmp
fmuls
mov
out
ret
cs
out
push
xchg
add
int
fucomip
popf
in
sbb
cs
cmc
mov
dec
adc
jle
jbe
dec
icebp
and
pop
xor
jo
jb
jcxz
push
arpl
xchg
inc
pop
idivl
sbb
lods
jmp
cld
jle
adc
jg
sbb
cltd
mov
test
and
aad
jmp
data16
push
call
fimull
jo
nop
dec
fsubr
enter
repz
andb
mov
xor
mov
and
aas
test
cmc
mov
jb
xchg
cmp
movsl
in
fxtract
mov
xchg
xor
xor
rcrl
push
jl
mov
and
neg
out
mov
jne
pop
xor
popf
pop
cmp
dec
xor
in
inc
es
mov
push
leave
icebp
add
les
and
in
sbb
jmp
std
or
dec
mov
popf
aam
ljmp
adc
pop
adc
out
lret
inc
mov
lcall
add
idivl
in
pop
lods
mov
or
xchg
pop
fs
xchg
fwait
dec
add
jle
cmpsb
jns
pop
popf
in
mov
js
inc
shll
mov
dec
cmp
sahf
mov
cmpsl
lcall
xorl
and
sub
push
jg
lcall
adc
pop
push
pushl
push
or
push
fistps
out
push
sahf
aas
loop
or
mov
jge
jmp
or
pop
xchg
rcl
repnz
adc
stc
adc
fsubrs
xor
pop
pop
scas
cld
mov
jne
mov
xor
inc
cld
xchg
jae
mov
lahf
ficomps
decl
mov
stc
nop
stc
mov
imul
scas
mov
or
xor
aaa
fs
cld
or
inc
sbb
lret
inc
lods
inc
jecxz
jno
pop
idivb
hlt
xchg
in
push
add
adc
mov
lds
daa
sbb
testl
inc
int3
nop
sbb
daa
or
scas
mov
sarb
xor
test
mov
pop
xor
test
into
xor
movsl
dec
mov
and
and
lock
clc
and
mov
enter
cld
jnp
mov
lea
call
jle
mov
hlt
lea
adc
rcrl
add
inc
scas
call
shll
enter
or
adcl
sbb
fidivs
jl
mov
jbe
xor
pop
fistps
out
clc
ret
pop
mov
out
jmp
mov
lods
dec
add
arpl
arpl
setp
nop
or
jbe
inc
mov
test
popf
mov
lods
imul
bound
mov
sub
mov
test
cltd
test
and
mov
jae
fnstenv
sbb
je
and
jmp
lods
call
dec
int
shlb
dec
loopne
add
mov
iret
mov
cld
cmp
push
cmp
loopne
jb
loopne
je
fisubl
jmp
jae
shlb
inc
stos
shlb
aas
adc
mov
ret
xor
imul
lock
movswl
iret
imul
cmc
shrb
jmp
and
cmp
aas
lods
pop
inc
pop
lock
lods
xor
push
test
sbb
add
sbb
stos
mov
adc
mov
ljmp
jmp
cmpsb
xchg
xor
movsb
movsl
stos
or
push
into
out
jg
outsb
inc
mov
or
fdivrl
xor
cmp
mov
test
pop
stos
sub
imulb
and
mov
insl
roll
leave
sbbl
mov
mov
and
dec
stc
negl
xchg
pop
adc
jns
mov
pop
sbb
cltd
xchg
cmp
test
pop
lock
mov
adc
push
add
cmpsl
cmpsl
arpl
pop
movlps
or
clc
andl
dec
fcomip
mov
clc
frstor
insl
adc
sbb
mov
xchg
clc
push
test
and
jo
mov
mov
movsb
sbb
stos
dec
out
xor
inc
push
adc
xlat
push
and
add
lret
das
jmp
add
push
lret
adc
mov
aam
arpl
fsubl
stos
add
push
fnstsw
cmp
jbe
cld
shrl
test
and
movsl
push
fadds
shll
xchg
xchg
xchg
dec
pushf
lods
sub
outsb
movsl
sub
stos
xor
lret
iret
push
and
push
or
addl
test
es
pop
pop
pop
jmp
clc
xchg
inc
sub
in
mov
fisubl
push
mov
sbb
jnp
fisubl
fcmovnb
jb
es
stos
inc
sbb
sub
pop
add
pop
pushf
stc
loopne
sahf
mov
jno
mov
mov
imul
mov
xor
aad
xlat
pop
test
pop
daa
fldcw
push
pop
and
enter
int3
mov
cwtl
and
xchg
data16
daa
lahf
pop
mov
jp
testb
and
dec
fbstp
xor
mov
push
sti
daa
or
push
in
cmpsb
lock
movsl
push
daa
jle
in
or
mov
cs
add
xchg
mov
xor
js
stc
imul
scas
les
mov
jmp
jmp
call
aaa
lret
lds
push
xchg
pop
cwtl
fs
adc
or
adc
cmpsb
cmp
mov
xchg
fistpll
bound
mov
pusha
cli
inc
movsl
adc
and
jno
add
mov
push
xor
cmc
sub
outsl
leave
jnp
icebp
rcrl
imul
cmp
call
cmp
pushf
inc
fcomps
ficomps
mov
fxch
dec
push
into
cli
cmpsb
fbld
dec
and
sbb
int3
data16
daa
mov
gs
bound
xor
cmp
inc
dec
stos
shlb
mov
mov
xchg
add
lock
xor
lret
mov
outsb
sub
cmp
push
push
xchg
xor
aas
popa
and
mov
add
aam
push
add
lods
lods
lds
dec
mov
inc
mov
mov
jmp
enter
jle
mov
mov
mov
test
lods
inc
xchg
mov
rclb
aas
and
adc
and
daa
lahf
pop
popa
in
fldt
fmul
push
dec
xchg
jns
add
scas
fbstp
jg
test
inc
jp
mov
loopne
xchg
lock
mov
sub
nop
adc
dec
les
lds
cli
push
or
pop
pop
and
sbb
addr16
mov
ljmp
pop
cmp
and
pop
insb
mov
cltd
movb
clc
push
xor
mov
insl
and
pop
or
dec
or
sub
imul
jnp
fmul
adc
movsb
push
iret
cmpsb
xchg
jl
pop
ljmp
hlt
inc
insb
jle
adc
clc
pop
mov
andb
in
lcall
movsb
mov
add
ja
stc
cwtl
mov
mov
mov
outsb
stos
sbb
repnz
adcb
xchg
jmp
mov
push
and
insl
lcall
cld
xor
loopne
sbbl
mov
imul
scas
xchg
inc
loope
mov
jmp
repnz
mov
iret
mov
sbb
sahf
fimuls
je
lahf
mov
or
cmc
xchg
add
lds
adc
addr16
mov
dec
loop
cmp
pop
jb
dec
movsb
ds
rol
or
mov
mov
inc
xchg
out
dec
enter
inc
fs
outsl
sbb
cli
pushf
les
ljmp
xchg
out
sahf
jb
xlat
shrl
aas
push
ljmp
jno
shr
or
movsl
push
int3
rcr
push
aam
leave
mov
add
fwait
jb
add
sbb
dec
cmp
cmp
sub
inc
mov
xchg
mov
popf
cwtl
sub
insl
jb
jnp
daa
lcall
sbb
cmp
divb
cmpsl
mov
add
adc
rolb
adc
add
std
xor
jae
jne
pusha
or
fs
inc
int
andb
lret
or
loope
test
adc
es
ss
and
shlb
cmp
cwtl
inc
or
in
mov
push
stos
add
mov
mov
sub
aad
mov
inc
dec
leave
loope
and
ja
iret
add
sub
pop
aaa
nop
dec
lea
fcmovnb
sub
fnstcw
in
mov
mov
jnp
cmp
dec
sub
in
stos
push
icebp
adc
stos
cmp
push
loop
dec
arpl
pop
std
push
pop
pop
sub
out
xor
lods
mov
add
ret
inc
mov
ljmp
jno
cli
cwtl
scas
mov
out
shll
cmpsl
ds
push
lods
jg
scas
pop
int
aaa
push
mov
mov
cmp
pop
mov
int
orl
int
cmp
addr16
cmpsl
leave
push
adc
mov
loop
push
sub
push
sbb
mov
imul
addr16
out
cli
xor
mov
subl
fcomps
shrl
fwait
daa
mov
gs
les
push
cs
test
shl
xchg
pop
imul
mov
or
adc
push
xchg
mov
int3
fs
jns
testl
xchg
and
pop
aam
nop
inc
pop
mov
ljmp
pusha
cmpsl
pop
leave
out
xor
push
pop
stc
dec
lock
mov
fwait
inc
pop
icebp
pop
loope
inc
sbb
push
inc
mov
scas
xor
jno
loopne
jmp
loopne
push
pop
and
outsl
xchg
xchg
sahf
pop
push
push
inc
nop
and
sbb
or
inc
test
jmp
aaa
mov
sti
or
add
int
sub
xchg
xlat
stos
dec
aad
mov
push
aas
mov
xor
adc
loopne
ficoml
rcrb
and
mov
mov
add
ljmp
popa
fsubl
mov
push
lods
push
sarb
cmpsb
pop
push
idivb
jnp
mov
pop
movsl
icebp
or
cmpsl
in
cld
push
jbe
out
mov
or
pop
cmp
add
das
sub
in
push
pop
adc
cmpsl
push
dec
fsts
inc
fildll
jmp
imul
mov
stos
pop
into
pop
clc
jle
out
divb
cmp
sub
rcll
jb
ss
cmp
jo
inc
push
jb
pop
outsb
outsb
scas
xor
jmp
adc
inc
cmpb
mov
xchg
xchg
mov
and
inc
xchg
adc
subb
mov
xchg
mov
jle
inc
scas
cmp
push
pushf
orps
dec
mov
jo
sub
popa
adc
sti
shl
ds
mov
xor
mov
bswap
mov
lock
es
xor
push
nop
push
fisubl
ret
xchg
cmp
and
cltd
dec
inc
mov
or
mov
dec
cmpl
inc
out
pop
es
sti
and
aam
stos
lcall
sub
cli
dec
xor
fwait
test
jl
test
lods
sbb
inc
mov
or
mov
loopne
adc
sub
push
mov
lock
lret
lods
jnp
mov
popf
push
shll
dec
or
adc
cmp
cwtl
xorl
jle
pop
cld
mov
fists
out
cmp
aas
into
and
rcl
cmp
push
cltd
jle
mov
fildll
ss
aad
and
mov
cwtl
in
leave
shrl
jbe
rcr
test
out
or
pop
sbb
stc
nop
push
jmp
lods
inc
mov
mov
mov
adc
mov
stos
in
push
mov
loopne
cltd
push
lcall
mov
je
pop
imul
mov
lods
push
mov
and
and
pop
loopne
sbb
pmuludq
pop
in
mov
or
icebp
jl
cmp
mov
fiadds
xchg
lret
cmp
mov
dec
pop
adc
cwtl
pop
inc
pop
mov
or
jb
adc
pop
ss
dec
out
fbld
outsb
ret
mov
cmc
jl
les
sbb
xorb
add
inc
lahf
ss
mov
inc
jbe
mov
adcl
or
insl
ja
dec
pushf
or
scas
push
jmp
inc
pop
jo
jp
pop
scas
add
xchg
mov
es
sbb
mov
add
mov
mov
out
cli
xchg
pop
mov
add
pop
jle
mov
and
leave
cmpsb
jns
push
ljmp
mov
ffreep
push
adc
fidivs
loop
jo
fstpt
or
jp
orb
mov
stos
call
push
fdivl
mov
outsl
push
jbe
mov
mov
mov
aad
push
push
mov
rep
xor
movsl
cwtl
int
rcll
out
pop
nop
outsl
pop
xor
in
jmp
nop
sbb
imul
sbb
dec
or
add
push
fisubrl
mov
outsb
jbe
notl
xchg
lcall
cwtl
call
inc
push
push
in
cmp
or
mov
xor
test
shlb
mov
rolb
push
push
pop
lret
and
lds
insb
cli
adc
mov
divb
shrb
mov
lods
dec
mov
xchg
out
lods
bound
mov
loope
pop
test
inc
sub
mov
and
mov
cwtl
in
testb
adc
stc
dec
aam
jg
pop
fcmovu
lahf
add
adc
mov
mov
insl
das
or
mov
or
mov
inc
xchg
data16
push
sbb
add
jo
and
mov
adc
ret
jae
xchg
iret
add
aad
arpl
ss
pop
sbb
fiadds
aaa
push
xchg
add
out
mov
data16
pop
inc
out
add
jno
cld
dec
hlt
xor
clc
cmpsl
inc
xor
popa
mov
or
dec
cmp
jmp
mov
push
xchg
outsl
mov
idiv
cmpsl
int3
mov
or
call
das
cmc
add
daa
negl
insl
adc
inc
lcall
jb
xchg
sub
push
out
into
rcrb
lcall
subl
loope
mov
jnp
rol
aad
sbb
inc
out
ficomps
popa
insl
cld
dec
sbb
jg
mov
push
mov
cmp
adc
jnp
fnsave
sbb
out
outsb
lret
inc
insl
mov
mov
sbb
sti
mov
inc
sbb
cmpsl
js
mov
push
pop
push
sahf
jnp
sbb
outsl
mov
xchg
cld
lds
negl
inc
mov
cmp
adc
adc
push
sti
sbb
div
push
orl
sahf
ret
or
xor
test
rorl
insb
adc
lock
dec
ljmp
fidivrl
icebp
cmp
xchg
lahf
stos
clc
cmp
jb
fwait
mov
shrl
int
adc
and
adc
fidivl
dec
pop
out
sub
inc
push
mov
sar
popf
add
jae
mov
mov
nop
roll
inc
pop
adc
stos
push
es
mov
pop
cmpsb
mov
adc
daa
sbb
addr16
cmp
rol
sub
aaa
pusha
rcll
es
push
jb
jae
adc
dec
push
mov
icebp
insb
xor
dec
lcall
sub
or
outsl
push
addr16
pop
push
faddl
fdivl
dec
pop
xchg
xchg
jnp,pt
xchg
mov
mov
fiadds
fisttpl
data16
das
jno
leave
xchg
mov
pop
xchg
fdivrl
outsb
jl
pop
push
inc
aad
sbb
icebp
adc
jo
fdivrp
pushf
push
pop
cmpsl
sarl
lods
push
test
push
inc
xchg
jbe
divb
rorl
in
dec
sbb
stc
dec
add
lock
out
jp
divb
scas
dec
xchg
or
insl
ss
scas
aam
loopne
inc
loope
ja
ja
cmp
pop
sbb
adc
ss
aam
push
fstl
cmpsl
push
cs
into
in
cmp
mov
pop
flds
or
ds
inc
nop
lods
leave
addr16
sub
fdivrp
xor
sbbb
dec
ds
pop
or
fwait
push
fdivr
cmp
scas
mov
cmpb
sub
mov
jg
bnd
jp
push
fildl
sbb
lcall
imul
std
test
adc
imul
cltd
int
mov
in
in
lea
add
sbb
pop
mov
cs
add
scas
in
in
pop
fsubl
mov
pusha
or
shll
cmp
sub
js
int3
jmp
or
pop
adcl
out
je
adc
aam
mov
out
push
fwait
aad
cmp
enter
loop
testl
aas
cwtl
das
jno
fnstenv
aam
dec
and
sbbb
add
scas
popa
and
into
pop
clc
xchg
enter
or
xchg
xor
jns
xchg
mov
and
daa
xor
adc
adc
cmp
je
fbstp
add
sahf
and
xor
imul
pop
out
xchg
jb
lods
sub
jnp
jge
movsl
cmp
mov
dec
out
push
sbb
xor
mov
lods
xchg
popf
movsb
mov
mov
imul
gs
fstl
xchg
pushf
mov
lret
or
push
mov
add
or
mov
lods
jmp
lds
dec
mov
scas
outsb
out
inc
jg
pop
pushf
fadd
fmuls
lcall
test
jae
cmpsb
jns
bound
jl
jl
and
xor
repz
lret
add
test
ja
mov
push
notl
mov
cli
lea
fnstsw
sbbl
xlat
pop
andb
push
pop
movsl
and
pop
jg
sbb
cmc
js
clc
jb
dec
pop
xchg
adc
adc
stos
dec
lret
ja
push
test
in
add
ss
jo
sub
inc
sahf
sbb
cld
sti
mov
dec
jmp
dec
gs
cmpl
jnp
push
xchg
xchg
cmp
push
mov
add
cmp
popf
outsb
adc
data16
sbb
xchg
test
xor
incl
push
in
sbb
dec
jb
dec
ret
idivl
xchg
movsb
xchg
sub
imulb
mov
xchg
dec
fbstp
dec
mov
test
int3
lret
or
push
jnp
pushf
rorl
mov
xchg
lahf
pop
xor
mov
push
mov
xor
lcall
mov
sbb
leave
outsb
jge
orl
pop
mov
in
push
mov
adc
and
pop
inc
add
movsl
lock
pushf
in
xchg
mov
fs
lock
sbb
push
sub
dec
mov
add
dec
sbb
out
pop
scas
movsl
cld
pop
sub
cli
aam
setle
mov
jg
mov
addb
xchg
loope
ret
sbb
shll
and
repz
inc
out
ljmp
lds
shll
cltd
adc
jmp
test
push
das
inc
fsubrs
ret
cmc
les
or
cmp
inc
cmp
loope
pop
jae
add
xor
ficompl
inc
data16
mov
mov
imul
mov
aam
inc
loopne
jae
mov
int3
pop
mov
cmp
sbb
pop
jmp
in
rorl
stc
cmp
xchg
cwtl
daa
rsm
mov
outsb
mov
sub
test
into
xor
fs
jg
test
lods
enter
fisubrs
scas
cwtl
mov
out
dec
ret
push
stc
stos
insl
cmpl
jb
test
cmp
adc
lcall
sahf
jo
inc
jecxz
xor
ljmp
xchg
aam
mov
in
mov
es
pop
xchg
xor
sahf
cmp
add
xor
push
sub
xchg
ficoml
xor
scas
jp
fidivl
xor
jne
mov
lret
jle
mov
aaa
fidivrl
outsb
icebp
push
testb
pop
mov
test
lods
push
lds
or
inc
push
popa
enter
or
mov
fdivl
mov
mov
inc
ja
lahf
xchg
daa
shrl
xchg
or
cs
fnstsw
insl
mov
inc
ret
jb
jl
fldln2
mov
mov
mov
mov
add
mov
insl
imul
outsb
stos
pop
repnz
dec
imul
add
xor
stos
data16
lcall
pusha
dec
bound
mov
inc
nop
adc
scas
push
call
push
mov
setnp
mov
and
xchg
iret
mov
jecxz
inc
enter
jno
jmp
and
and
rcr
aas
dec
jmp
pop
xor
scas
xchg
push
xlat
repz
scas
and
daa
or
mov
mov
lock
loopne
cmp
mov
push
xchg
mov
xchg
dec
lods
es
test
int3
jle
mov
orl
cmp
ljmp
push
mov
test
setge
inc
mov
push
pop
sbb
mov
test
repnz
add
sbb
pop
jo
pop
mov
mov
aaa
push
mov
movsl
movsb
repnz
sti
xchg
add
pushf
or
jo
add
scas
mov
dec
cmp
jnp
and
lret
or
call
out
dec
pop
ret
out
cmpsb
sbb
inc
nop
cvtps2pd
mov
decb
loopne
xor
int
imul
cmp
lcall
inc
fldpi
lcall
push
test
mov
sti
pop
sub
sbb
sahf
xchg
sti
outsl
jl
cmp
xchg
and
fcoml
mov
rolb
sub
or
movsl
xchg
xchg
ja
mov
mov
stos
js
ja
rol
pop
repnz
jge
sub
push
adc
divb
xor
fs
imul
dec
stc
gs
jno
push
mov
mov
xlat
mov
push
ret
scas
test
cmp
cmpsl
sub
arpl
xchg
popf
imul
mov
fcmovnb
xchg
clc
shll
push
sbb
outsl
out
shr
inc
mov
dec
outsl
mov
repnz
movsl
sbb
and
adc
repz
fs
dec
push
and
subb
push
pop
mov
ret
pop
imul
jns
and
adc
test
push
xor
gs
sbb
xchg
mov
xchg
mov
cmp
lea
sub
jns
sti
dec
aaa
jbe
mov
xor
sub
cmp
jbe
fs
sub
fimuls
pushf
in
movsl
cmp
xor
test
cmp
xchg
iret
push
push
fcompl
fsubs
lea
mov
out
insl
push
pop
jae
outsb
push
inc
les
inc
inc
pushf
sahf
inc
push
xchg
xchg
cld
or
push
cld
mov
mov
jle
sbb
mov
dec
adc
jl
cmc
cli
xchg
dec
inc
sub
ljmp
mov
call
aaa
cmp
jecxz
pop
xchg
and
xor
bound
fwait
xor
addr16
mov
dec
push
push
je
xor
pop
mov
jo
jl
pop
push
inc
mov
xchg
addl
cltd
cvttpd2dq
mov
movsl
mov
sbb
pop
mov
arpl
ljmp
jecxz
or
mov
cli
lcall
xor
cli
and
jp
nop
push
mov
and
repz
push
add
js
or
repnz
addb
mov
leave
sahf
nop
imul
imul
push
jbe
sbb
xchg
sub
mov
pop
mov
sub
shl
insl
mov
inc
pop
jg
mov
aam
and
mov
push
and
shlb
mov
lds
imul
add
test
ljmp
cld
test
pop
inc
sub
in
stos
cld
push
sub
or
adc
sub
int3
insb
mov
inc
lret
xlat
stos
xor
mov
mov
push
out
leave
push
push
inc
add
and
daa
sahf
in
scas
sbb
adcb
daa
mov
call
sub
dec
enter
les
xlat
int3
sub
jns
xor
dec
movl
loopne
fdivrs
lret
out
je
mov
xchg
stc
je
ss
enter
push
mov
sub
fstpl
pop
add
xor
outsb
call
sbb
insl
enter
or
daa
mov
cld
lcall
movsl
mov
pop
fidivrs
jp
int
xor
loope
push
add
daa
sub
notl
insl
outsb
fsubrp
pop
lds
into
cmpsl
mov
aaa
int
pusha
mov
hlt
jmp
and
mov
insb
sbb
outsb
lea
test
push
mov
dec
loop
popf
stos
xchg
in
and
jne
popf
xchg
add
sub
xchg
mov
add
and
xor
int3
lret
jbe
lods
jle
inc
das
shrb
or
pop
daa
daa
add
pop
out
insl
mov
scas
inc
push
mov
dec
mov
into
scas
fnsave
push
imul
movsb
stos
stc
xor
in
push
aad
sub
sbbl
xchg
dec
std
sbb
ss
mov
imul
cmp
enter
cmp
xchg
lock
or
ds
jp
gs
inc
in
cltd
in
jae
cld
jbe
or
pop
por
lcall
or
in
fld
in
ror
add
pushf
cmp
inc
adc
movsb
push
sarl
cmp
leavew
aam
aas
inc
imul
xorl
dec
pop
add
mov
aad
or
insb
cmp
xchg
insl
jmp
cmpsb
inc
cwtl
push
sbb
stos
cmp
sbb
ljmp
pop
mov
xchg
inc
xor
cld
add
cwtl
sub
gs
dec
scas
and
cmp
shll
mov
mov
andb
jecxz
add
mov
sub
movsb
popa
cmp
out
std
in
mov
mov
lahf
sbb
pop
call
iret
cmp
sbb
sub
cli
jne
pop
imul
mov
call
push
or
cwtl
mov
dec
xcrypt-ofb
cmpsl
stos
ljmp
pop
les
clc
in
daa
ds
sbb
mov
sbb
arpl
iret
jbe
aad
lcall
dec
inc
shll
fidivrl
gs
shlb
out
sbb
stos
mov
add
das
cs
test
popf
lods
xchg
out
adcb
loop
std
mov
inc
push
loop
aam
push
push
inc
lock
jb
sbb
cmp
pop
pop
xchg
sbb
inc
push
xchg
loope
add
xchg
popa
data16
inc
subl
cmp
test
mov
add
or
sbbl
popf
adcb
mov
push
fbstp
sub
mov
adc
lds
ljmp
dec
aas
sarb
push
pop
call
add
mov
lahf
int
xchg
inc
add
ja
xchg
adc
cltd
xlat
mov
push
xor
dec
lea
loopne
ja
imul
int3
xchg
pop
push
cmp
ljmp
sub
aad
repnz
xchg
scas
out
cltd
mov
mov
int
xchg
inc
xchg
loope
adc
fdivp
arpl
dec
xor
call
nop
ljmp
inc
adc
cs
jbe
mov
sub
decb
cmp
jbe
out
push
sti
repz
pop
or
in
cli
je
dec
xor
shll
in
stc
xchg
lret
push
push
or
xchg
sbbb
inc
sti
jbe
ret
dec
in
push
mov
xchg
jmp
jmp
push
xor
ret
ficomps
outsb
fidivrs
cmp
jl
push
xchg
mov
mul
add
mov
dec
loop
or
sub
xchg
mov
xor
adc
sub
cmpsb
pushf
addr16
cltd
mov
push
call
std
cltd
outsl
int3
sarb
cld
lcall
in
les
pop
push
pop
lahf
push
in
xchg
test
es
jmp
inc
lds
ljmp
xchg
in
xor
dec
das
scas
cmp
push
dec
cmpb
bound
je
jge
in
dec
and
decl
sbb
repnz
cld
adc
insl
insl
hlt
push
test
xchg
pop
push
lods
loope
push
jg
push
ss
cmp
jnp
sbb
repz
sahf
test
rolb
pop
pop
jmp
push
cmp
cwtl
jns
cmp
lods
dec
pushf
sub
imul
dec
cmp
idivl
arpl
jb
inc
push
dec
sahf
popf
dec
xchg
fdivs
push
insb
mov
fld
pop
sbb
cmp
outsb
jmp
lock
push
mov
out
push
adc
iret
pop
repnz
ja
cmpsl
mov
popf
daa
cld
inc
push
fiadds
es
inc
fcmovnb
dec
dec
out
xor
mov
xor
cmp
movsl
mov
call
fdivr
push
cs
ja
pop
out
cmpsb
sahf
subb
jg
sub
adc
rcl
mov
xchg
adc
shrl
sbb
mov
xchg
lods
js
jno
mov
sub
adc
push
xchg
xor
cmp
enter
adc
loopne
or
imul
adc
pop
lsl
sub
iret
mov
push
inc
dec
mov
cs
out
sbb
or
xchg
ret
out
inc
mov
repz
fsubs
loopne
jp
clc
add
fistpl
bound
sbb
rorb
ds
mov
mov
xchg
test
fs
sahf
xor
inc
test
das
push
jmp
mov
mov
jno
insl
xor
mov
sub
xor
ret
pop
daa
mov
pop
jl
push
mov
adc
and
pop
add
mov
ljmp
mov
sbbb
cli
pop
mov
mov
scas
lcall
jno
cmp
xchg
add
lret
and
in
stos
xchg
cld
inc
ret
shlb
cs
out
add
cmpsl
push
add
mov
popf
dec
cmp
int3
pusha
ljmp
mov
push
mov
arpl
pop
add
aaa
insb
cli
rcrl
mov
and
sub
arpl
push
dec
jmp
mov
mov
mov
idivb
aad
addl
stos
daa
mov
jae
xchg
or
lea
outsb
nop
daa
movl
push
loope
mov
adcb
push
out
pop
outsb
lds
lds
imul
mov
mov
in
les
push
nop
inc
rorb
sbb
fiaddl
xchg
push
dec
data16
loop
add
outsb
mov
adc
inc
pushf
sarb
add
inc
lds
in
and
or
pop
mov
int3
mov
mov
aad
mov
mul
test
orb
sub
xchg
xchg
fnsave
out
rcll
loopne
out
push
sbb
dec
in
mov
insb
add
inc
fdivl
xchg
enter
push
test
push
inc
push
mov
aaa
iret
aas
cld
push
decb
cltd
pop
sahf
int3
pop
or
sub
fs
jmp
scas
inc
fbld
in
fs
movmskps
std
ljmp
aas
lock
aaa
out
stos
pop
xor
add
shll
out
xchg
push
and
out
test
push
mov
cmpb
or
mov
mov
int3
adc
stos
fidivl
outsb
lods
cmp
push
js
sub
int
in
in
fwait
mov
mov
pushf
nop
and
ret
adc
and
sahf
pop
inc
repnz
push
daa
data16
je
leave
mov
push
andl
lret
inc
push
cmpsb
movsl
gs
mov
int3
arpl
mov
jecxz
jg
sub
ficomps
orb
pop
sbb
mov
pop
jno
call
pop
xchg
push
fldl2t
cmp
mov
outsb
hlt
lods
mov
adc
cmp
mov
ds
jae
xchg
scas
nop
inc
inc
or
test
xor
out
or
xchg
mov
in
jge
je
pop
fsubrp
popf
push
mov
scas
out
movsb
mov
pop
dec
sbb
test
sbb
lret
jmp
cmp
cmp
jae
popa
shl
adc
jae
lods
js
popf
shrl
mov
push
jle
lret
pop
pop
insb
jo
cli
xchg
lods
jge
push
sub
sbb
push
inc
aam
jmp
dec
xchg
negl
mov
aas
push
jae
sbb
mov
push
cmp
cmpsb
imul
mov
jg
sahf
push
add
sti
adc
xchg
sbb
jp
add
jp
divl
jecxz
push
sbb
inc
fsubr
lret
stos
addl
nop
in
das
xor
pusha
or
cld
inc
pusha
or
es
xorb
loop
nop
mov
ds
mov
add
mov
test
call
add
and
jp
insb
fistpll
mov
add
push
push
test
cmpsb
stos
jp
xor
mov
ss
loopne
fcoml
outsl
shrl
nop
jns
push
push
dec
adc
jae
imul
mov
scas
fidivrs
movsb
rep
sub
mov
or
xor
inc
in
sahf
sbb
in
xor
push
mov
xchg
cmp
push
pushf
fiadds
xchg
xchg
lcall
adc
cmp
pop
sub
jp
lcall
jae,pn
jo
mull
jne
pusha
cmp
mov
lea
ss
pop
aad
aam
cmp
enter
dec
xor
aaa
fcmovnbe
lds
mov
inc
ss
mov
into
pop
cli
sti
cmpsb
adc
adc
pop
ret
and
mov
sub
fdivrs
mov
into
in
and
aad
and
leave
or
push
test
and
jle
push
mov
leave
pop
mov
movsl
push
jmp
rclb
push
stos
inc
inc
popa
fdivl
popf
push
sub
stos
mov
ss
add
inc
mov
cmc
inc
xor
or
add
mov
xor
pop
shrb
int
add
pop
xchg
inc
bound
cmc
mov
and
mov
pop
sub
and
gs
ljmp
les
adc
mov
sti
cmp
sbb
jne
call
cmp
movsl
in
pop
cmpsl
iret
sbb
mov
jbe
fwait
es
jmp
adc
jno
and
jge
and
mov
and
xchg
mov
or
jle
add
dec
sahf
xchg
sub
es
cltd
pushf
inc
fucomip
negb
rcr
mov
push
mov
add
or
push
pop
push
xchg
or
mov
cmp
adc
xchg
cld
and
xor
loopne
mov
push
jns
sub
add
jmp
bsf
cmp
push
push
nop
stc
inc
sbb
movsb
aaa
fnstenv
or
addl
cmp
cwtl
das
pop
xchg
out
rorl
push
mov
push
fwait
aaa
or
sub
ss
xchg
adc
sub
lcall
inc
add
dec
jmp
jo
sub
push
or
ret
bound
inc
push
add
subb
push
in
aaa
roll
gs
adcb
jg
lock
fwait
sti
insb
cmpsl
jns
ror
dec
ds
data16
pop
adc
fsubl
pushf
ret
cmpsl
pop
jb
out
cwtl
xchg
sub
add
push
aam
or
xor
push
lock
scas
dec
xchg
adcl
fbld
mov
xor
hlt
xchg
jecxz
lcall
cmp
adcb
mov
mov
test
push
fwait
and
push
dec
movsl
aas
movsl
mov
enter
jle
mov
jge
inc
je
mov
mov
dec
mov
pop
cmp
xchg
xchg
mov
xchg
cmp
and
sbb
lock
pop
add
mov
shrl
icebp
ja
jne
aad
iret
pop
push
mov
and
gs
outsb
cmpsl
iret
sbb
xor
lret
imull
pop
mulb
mov
and
outsl
leave
cmp
sbb
or
fucomp
add
sub
gs
and
insb
fistps
cld
fistl
lock
enter
fdivl
imul
mov
inc
imul
push
cwtl
pop
push
aaa
insl
shr
mov
loop
fs
pusha
push
and
or
push
stos
aam
mov
movsl
ja
jg
sti
daa
push
push
test
sbb
pushf
repz
rolb
pop
xchg
inc
xor
cli
pushf
add
push
jge
adc
mov
fbld
inc
imul
push
xchg
mov
mov
lcallw
ret
adc
test
in
inc
sbb
push
push
or
and
pop
push
add
fwait
xor
stc
pop
ljmp
mov
mov
ret
sbb
cmp
jnp
popa
or
sub
call
xchg
push
xchg
mov
add
add
xchg
jo
ss
push
sbb
push
scas
mov
jbe
std
aad
xlat
add
jno
out
mov
pop
push
push
iret
in
mov
add
adc
hlt
push
fildl
mov
test
push
imul
cmpl
pop
int3
pop
cmp
jae
adc
ds
jb
aaa
out
sbb
ret
sti
syscall
mov
xor
mov
xor
mov
adc
sbb
in
mov
jg
mov
or
bound
pop
or
xchg
cli
jmp
mov
jb
aaa
adc
addr16
popf
xor
inc
adc
xchg
jnp
push
lret
mov
xor
sti
xchg
push
loope
enter
mov
sbb
enter
fidivrs
lret
sti
pop
jl
xor
in
push
js
cmp
aad
pusha
pop
xchg
das
addr16
or
sti
incl
or
and
cmp
lcall
in
test
pop
pop
jl
jns
jg
fsubs
pop
mov
dec
and
ret
mov
lock
outsl
xlat
outsb
mov
enter
lods
jle
ljmp
mov
fs
mov
sub
dec
add
loop
adcb
shl
lret
pushl
pop
cmp
in
shlb
jge
adc
ds
jle
push
dec
in
push
add
fistl
mov
or
ss
arpl
lcall
cli
cmp
in
pop
les
mov
cli
mulb
jb
mov
lods
inc
movsb
std
xchg
add
sbb
push
ja
push
and
inc
xchg
stos
scas
imul
mov
mov
fdivs
call
xor
dec
add
sbb
sub
pop
mov
cltd
push
ds
cmp
and
inc
mov
mov
fstpl
mov
jecxz
pushf
xor
pop
divl
sti
adc
lea
dec
mov
jmp
jb
sahf
xor
sbb
push
jb
sub
adc
clc
popl
mov
repnz
add
sub
jb
ljmp
push
mov
add
mov
or
jmp
out
xor
sub
push
push
shll
mov
icebp
insb
jecxz
or
js
rorl
rolb
loope
push
icebp
movhps
inc
adc
in
shlb
aas
gs
inc
pop
orl
lods
fcompl
rcrb
add
fidivs
xor
in
xchg
orb
xchg
popf
ret
int
pop
fidivl
or
jo
lcall
cmp
in
cmp
fcmove
pop
out
int
push
lods
or
shrb
mov
aaa
xor
sbbb
fsubrl
ja
mov
mov
add
iret
pop
xor
insl
dec
dec
lret
push
cs
in
add
hlt
out
inc
xchg
adc
mov
rorl
mov
rcrl
insb
sub
js
mov
sahf
ret
xchg
cmp
shrl
bnd
in
lcall
xchg
sub
pop
pop
mov
cmp
sbb
sbbl
or
xor
pop
pop
inc
adc
in
imulb
cwtl
ror
test
sub
sbb
inc
loopne
jbe
mov
std
je
mov
cld
xchg
mov
pop
sbb
mov
add
xchg
idivb
iret
nop
jmp
xor
mov
dec
push
insb
pushf
daa
cmp
adc
hlt
outsl
daa
cmp
out
dec
xor
adc
add
sbb
xor
aam
ljmp
inc
pop
or
es
mov
mov
add
xor
push
push
xchg
xchg
sub
insb
xchg
pop
insb
cmpsb
push
fsts
xlat
test
cmp
or
cmp
movsb
inc
mov
ds
data16
sti
pop
and
cmp
mov
out
xchg
mov
push
aad
dec
arpl
jmp
aad
dec
aas
dec
jnp
pop
notl
mov
push
sub
fldenv
mov
push
xor
lret
push
inc
cmpsb
mov
outsl
mov
xlat
push
into
lret
dec
xchg
push
es
pop
jbe
or
ja
stos
inc
xchg
mov
sbb
xor
test
mov
ja
pop
sbb
add
push
ficoms
lahf
call
es
mov
and
dec
jg
mov
sbb
fiaddl
imul
popf
out
xchg
sub
mov
cmp
xchg
lcall
je
arpl
mov
and
arpl
mov
into
inc
ljmp
call
lods
add
lahf
jb
jecxz
outsl
adc
out
gs
int
inc
xor
les
sbb
pop
add
sti
inc
clc
mov
sbb
or
push
arpl
cld
jb
cmpsb
scas
inc
add
cli
xchg
arpl
and
pop
and
adc
jno
les
jno
sub
stos
add
xor
sbb
std
sbb
push
pop
sub
cmp
sbb
mov
inc
test
testl
sbb
sub
push
cmp
push
xor
mov
repz
shlb
add
nop
aam
cwtl
mov
or
mov
mov
add
push
int
pop
js
pop
lahf
cmp
insl
push
pop
mov
mov
xchg
sahf
inc
pop
xchg
lods
daa
mov
cmp
inc
push
hlt
aas
repz
pop
sub
pop
cmp
out
xor
mov
gs
daa
add
sbb
andl
test
jno
jns
inc
data16
shrl
fxch
stos
add
aam
or
push
aad
ja
clc
xchg
and
and
js
adcb
orl
mov
in
js
xchg
pop
mov
cmp
popf
dec
imul
sti
mov
adc
pop
fs
inc
cmp
negb
mov
dec
fdivrl
imul
xor
push
jmp
frstor
sub
sahf
cwtl
mov
mov
js
inc
fadds
sbb
mov
pop
dec
rclb
mov
push
xchg
or
lret
mov
inc
mov
ror
sbb
cwtl
dec
rorl
sbb
or
arpl
cmpb
xchg
mov
ja
inc
pop
cmp
push
in
stc
pop
mov
out
and
les
sbb
pop
sub
xor
mov
sbb
push
in
cld
dec
popa
clc
divl
hlt
pop
adc
add
xor
xlat
sbb
adc
sub
mov
incl
sub
dec
pop
lds
jmp
fmull
push
sahf
lock
test
sub
roll
mov
pushf
xchg
hlt
mov
int3
mov
pop
mov
pusha
gs
icebp
or
adc
fiadds
sbb
sbb
ret
shll
nop
lods
mov
das
stos
mov
stos
adc
inc
inc
xor
addl
mov
mov
sti
scas
inc
movsl
scas
loop
pop
int3
arpl
jp
mov
mov
xor
shrl
cwtl
xor
adc
lret
sbb
sti
pop
xor
es
push
jae
shll
sbb
cmp
cmp
lea
fs
mov
adc
and
pusha
sub
mov
fwait
and
cs
pop
dec
sub
cmp
pop
je
pop
repnz
pop
ljmp
fpatan
adc
sub
fs
fwait
cmpsl
shll
cwtl
outsl
push
mov
mov
sti
idivb
or
loope
sub
push
rcll
cmpsl
out
xchg
add
es
repnz
popf
mov
jnp
sub
stc
cld
fcmovnu
scas
enter
shlb
lahf
push
aas
mov
mov
mov
hlt
ds
mov
jno
test
and
movsb
rol
mov
ret
leave
popf
pop
subb
dec
inc
cld
pop
mov
push
lea
mov
cmpsl
mov
push
sbb
xchg
faddl
and
fmuls
jle
jne
int
xchg
cli
js
mov
inc
jbe
xor
lods
lods
push
dec
roll
sub
or
inc
pop
add
bound
xchg
hlt
add
and
lds
adc
mov
sbb
mov
push
shrl
or
or
test
sbb
push
xchg
jg
das
pop
in
fidivl
xor
jl
fstpt
nop
inc
lods
add
mov
jl
adc
push
push
jbe
pop
jecxz
mov
ja
cmpsb
cmpsb
add
mov
pop
hlt
pop
popf
sbb
sbb
mov
cwtl
and
lcall
and
outsl
movsl
dec
pop
ljmp
xor
enter
dec
mov
aad
xor
mov
pushf
cmp
outsb
add
out
adc
stos
lock
mov
in
jae
push
and
stc
sub
adc
ret
or
mov
loop
dec
icebp
out
dec
loope
rcrb
mov
jmp
jns
add
jae
nopl
arpl
jle
push
adc
jns
cmpsb
pushf
das
sub
enter
jo
mov
dec
sbb
sbb
aas
dec
pop
out
mov
cs
xor
pop
dec
mov
pop
adcb
push
sbb
cmpsl
hlt
outsl
mov
mov
movsl
xchg
sbb
mov
xchg
jl
aaa
dec
out
inc
ja
pop
scas
int
mov
jae
or
jle
loop
sbb
jmp
fidivs
stc
adc
cmpsl
cwtl
mov
adc
mov
ja
or
call
jl
cmp
sahf
fisttps
out
fs
pop
add
es
pop
pusha
xchg
dec
aas
mov
int
cmpsb
pop
call
fs
mov
das
jo
or
sbb
subl
cmp
push
inc
addr16
addr16
in
mov
mov
test
repnz
imul
icebp
or
jbe
adc
int
cmpl
dec
lahf
jb
jbe
addb
jmp
xlat
in
dec
cld
leave
mov
push
add
imul
addr16
adc
cmp
push
sub
lods
mov
outsb
inc
adc
fstpt
mov
xor
or
repz
mov
sub
or
ret
pop
scas
mov
xlat
lods
imul
inc
jle
xchg
in
fistpll
push
sub
xor
fldt
mov
jle,pn
mov
fs
adc
jge
sbbl
jo
shlb
add
push
sub
pop
mov
in
shr
loopne
push
je
mov
mov
repz
dec
sub
outsb
adc
loopne
es
cltd
sbb
repz
fs
call
sarb
fsubl
sub
mov
cmp
mov
pop
rsm
pop
jl
mov
repz
pop
inc
rolb
lock
adc
jp
imul
xor
lahf
sub
pusha
adc
dec
les
repz
sbb
aas
dec
negb
mov
mov
adc
mov
push
lods
out
cli
mov
xor
and
loop
or
sub
sarl
push
je
dec
add
leave
dec
dec
aad
mov
or
mov
orb
sar
cmpsl
sub
push
jbe
out
fists
lds
orl
xor
iret
dec
lds
lock
dec
and
arpl
xchg
and
add
push
push
mov
push
mov
dec
shrb
repnz
mov
xchg
jge,pn
mov
shl
sub
fcomip
into
gs
mov
sti
mov
cmp
dec
cmp
push
add
or
sbb
ljmp
add
sahf
mov
stos
and
cs
movsl
data16
fldl
je
lahf
xchg
jns
mov
xor
mov
pop
lods
inc
pushf
out
sub
stos
sub
mov
outsb
add
xorb
and
adcl
enter
daa
out
pop
sub
pop
lods
lock
lock
inc
pop
xor
jb
jle
pop
enter
addr16
push
push
flds
loop
lock
adc
add
leave
sahf
adc
xchg
cli
cwtl
jno
xchg
jnp
sbb
lret
js
int3
les
sahf
inc
and
pop
mov
sbb
pop
repz
cmp
push
sub
cs
pop
out
mov
pop
xlat
mov
xorb
sub
scas
rcrb
adc
sarl
scas
repnz
push
ds
jno
loop
jae
fldlg2
dec
or
fwait
jbe
shlb
loope
aaa
lock
mov
cmp
in
jbe
inc
orb
push
jne
jno
and
lcall
push
in
push
pop
mov
enter
fsubrl
shl
inc
decb
mov
test
leave
and
cli
ja
cmpsb
test
add
mov
lcall
push
and
jno
ficoml
sbb
aad
inc
out
cmp
fs
dec
adc
imul
xor
xchg
fistpl
pop
mov
or
fists
jecxz
movaps
add
popa
xchg
test
aaa
ficoms
movq
inc
sub
iret
leave
pop
jne
shr
test
push
pop
cld
mov
stos
jle
cmp
loope
dec
mov
jb
pop
lahf
mov
sbb
enter
mov
leave
push
mov
loopne
pop
insb
mov
andb
cld
test
ljmp
lcall
gs
std
leave
js
mov
js
inc
ds
cli
dec
and
test
inc
fldenv
xchg
mov
sarl
sbb
add
dec
ficoml
repz
jns
dec
pop
jbe
xchg
test
loopne
test
shrb
repnz
sbb
mov
lods
and
test
jnp
xor
icebp
fmull
lea
mov
dec
dec
pop
das
and
mov
into
mov
add
imul
pop
rol
sbbb
cmp
pop
sub
push
jl
dec
pop
inc
xchg
loopne
popa
jmp
inc
sub
push
scas
movsl
mov
mov
fidivl
pop
xchg
shrb
test
fxtract
cld
xchg
mov
je
mov
push
mov
jno
insb
movsl
icebp
shrb
and
inc
xchg
mov
pop
or
lret
cltd
and
add
scas
xor
cmpsl
in
xor
push
pop
hlt
loope
ljmp
lods
dec
xchg
cmpsl
dec
les
enter
lcall
repnz
sbb
pop
adc
pop
testl
or
dec
ficoms
sub
loope
shrb
test
int3
lahf
pushf
lock
xor
jp
addr16
adc
mov
adc
push
vshufpd
pop
xchg
sub
scas
inc
mov
rcr
icebp
fidivl
push
fisubrs
nop
clc
pop
pushl
je
push
lods
xchg
xchg
lds
adc
fs
arpl
xchg
shr
jle
jo
mov
or
adc
sub
movsb
xor
js
dec
lahf
ss
jnp
push
adc
inc
das
movsl
icebp
add
add
leave
and
outsb
push
outsb
push
loop
add
ja
dec
pop
add
clc
nop
xorb
mov
jecxz
or
notb
cli
enter
adc
cmpsl
out
or
pop
sub
push
ret
xor
cmp
and
arpl
pop
outsb
loope
mov
jl
ds
testl
mov
push
jle
mov
ljmp
aas
fiaddl
in
adc
repnz
clc
sahf
mov
xchg
mov
jno
sub
and
jecxz
adc
test
std
pop
push
dec
cmp
mov
dec
imul
push
movsl
cmp
pop
mov
test
lret
jp
xchg
je
adc
add
sub
pusha
sti
mov
xchg
xor
arpl
adc
and
xor
xchg
and
shrl
lds
in
outsl
leave
stc
fcoml
push
sbb
sti
out
inc
aas
in
push
push
pop
in
or
rorl
insl
popf
bndstx
fs
fildl
push
inc
jno
cs
fwait
cmp
es
fisttpl
insb
pop
pop
pop
cmpsb
in
push
sub
sub
int3
cmpsb
insl
sub
mov
testl
push
push
out
push
cmp
mov
mov
testl
fcmovbe
mov
js
lods
xchg
add
sbb
xor
fwait
add
idivb
pop
jge
lret
repnz
xchg
xchg
pop
mov
cs
outsl
loop
pop
sbb
inc
mov
sarb
js
test
bound
xor
add
xchg
adc
xor
mov
dec
xchg
enter
mov
mov
xchg
jne
out
jmp
call
scas
gs
jns
dec
cmpsb
cmp
push
les
xor
loope
inc
pop
jp
scas
push
cmp
jmp
or
mov
std
xchg
addr16
dec
mov
mov
out
mov
das
push
shll
inc
je
cmpsb
popa
push
xlat
fmuls
push
cmp
pop
inc
xchg
popa
les
ds
add
sarl
or
xor
push
shrl
and
sub
cmp
sbb
mov
cmp
adc
out
dec
int
stos
mov
rorl
int
loop
popa
lods
cld
adc
push
mov
push
jb
shrl
jb
mov
andb
shrb
or
jno
mov
jns
imul
push
add
pop
cli
adc
push
popf
hlt
add
and
mov
cmp
xchg
ror
mov
leave
fsts
add
rcrl
std
cmpsb
fwait
popf
dec
loope
push
lods
inc
call
add
mov
sub
mov
call
rcll
mov
dec
test
xchg
add
cmc
mov
pop
out
add
in
popf
repz
or
jmp
push
loop
test
cmp
adc
psrad
mov
fstl
jl
and
orl
sub
inc
xorl
movsb
jmp
in
inc
sti
into
lea
dec
cmc
je
inc
sbb
int3
and
xchg
bound
call
mov
jmp
bndstx
mov
fstpl
scas
insb
sbb
push
push
leave
or
ret
mov
push
adc
lahf
cmp
jge
je
mov
fcomp
dec
bound
jbe
test
push
xchg
incb
cltd
das
mov
in
stos
sbb
or
pop
mov
jge
divl
lods
xor
clc
addl
push
push
aad
lods
mov
add
shl
dec
sahf
or
shrl
dec
imul
mov
mov
jle
cltd
pop
mov
and
popf
js
into
or
fucomp
pop
adc
jnp
fistpl
test
sbb
cmc
xchg
clc
jmp
xchg
fmull
sbb
jbe
gs
xor
andb
jne
pop
or
push
mov
cmp
xchg
jns
test
cmp
cs
into
mov
shrl
lods
ret
mov
faddl
xchg
or
and
fidivl
aad
and
clc
dec
frstor
hlt
mov
mov
adc
mov
push
adc
jbe
mov
orl
sub
pop
fildl
cmpsb
xor
repnz
sub
rcll
xor
roll
mov
out
js
cli
popf
mov
xor
or
arpl
add
insl
test
jnp
mov
cmp
loope
jg
mov
or
int
push
mov
test
xchg
sbb
leave
jne
test
mov
call
jbe
mov
mov
or
xchg
mov
dec
and
inc
scas
cmp
xchg
pop
adc
dec
inc
and
pushf
xor
movsl
jo
push
and
xchg
cmp
jmp
rolb
rcrb
cs
cmc
jl
adc
sbb
daa
and
aas
gs
pop
sarl
sbb
fcoms
sbb
mov
fisttpl
push
push
cmpsb
pop
xchg
mov
push
adc
and
dec
scas
jne
lds
outsb
icebp
fldcw
dec
int3
leave
mov
xor
cwtl
gs
mov
or
push
std
out
daa
inc
sbb
int3
fnsave
sub
out
iret
inc
jae
mov
je
rolb
je
xor
lret
lret
cmp
popf
mov
outsb
or
in
leave
in
outsb
push
xchg
cmp
push
loopne
fnstenv
in
std
cmp
mov
movsb
call
in
jp
sbb
or
pop
andl
and
das
cmpsb
xor
outsl
test
xchg
js
xor
push
dec
jge
repz
daa
jnp
call
rorl
pop
cmpsb
mov
lea
dec
int3
push
mov
fmulp
jecxz
fidivs
add
testb
jmp
mov
sub
sbb
push
jl
iret
gs
add
jmp
sbb
cwtl
push
cltd
nop
daa
push
or
pusha
jnp
lock
mov
mov
scas
es
stos
cld
enter
pop
fcmovnb
jg
aad
icebp
stos
aaa
int
sbb
cmp
xor
mov
and
mov
pushf
fildl
popa
jl
ffreep
out
xor
sub
shlb
xor
jno
aad
enter
push
in
fmuls
pop
aas
je
adc
xchg
enter
je
cmovb
es
int3
dec
xchg
mov
or
pop
and
cmp
std
jae
ljmp
xchg
rolb
mov
cld
pop
vpshufd
subl
out
stos
and
xchg
mov
in
xlat
jno
or
in
aas
mov
or
or
and
adc
jae
push
insb
mov
adc
js
insl
mov
dec
mov
setns
or
push
in
xchg
and
inc
or
andb
sbb
add
xor
rorl
adc
sahf
pop
push
xchg
or
add
pop
xchg
call
test
lock
stos
adc
mov
out
add
cmpsb
movsl
lds
push
xchg
call
mov
xchg
hlt
xchg
cmpsl
push
mov
or
push
jge
inc
xor
pop
in
js
cmc
adc
adc
loop
sbb
mov
cmp
pushf
testb
inc
push
pop
in
in
sub
push
dec
xchg
cmpsl
inc
push
out
jmp
xchg
mov
iret
jg
inc
andl
jg
jg
xchg
mov
sbbb
into
pusha
sub
mov
test
aam
adc
cltd
fdivrl
add
fdivs
fildl
repz
xor
aas
shll
dec
lret
rcrb
test
shl
sbb
or
call
or
leave
adc
sbb
loope
repz
or
movsb
pop
test
push
mov
xchg
mov
mov
add
lea
mov
into
pop
outsl
push
outsb
sti
sbb
incb
sub
xchg
sub
mov
insb
adc
push
aam
xor
test
jbe
das
push
or
lea
int3
inc
testb
mov
mov
out
test
adc
icebp
mov
push
inc
pop
jne
mov
mov
imul
and
or
and
push
pushf
jb
je
mov
ljmp
mov
lret
dec
repnz
adc
rcrb
mov
pop
cs
pop
jecxz
rcll
mov
cmp
dec
imul
mov
jp
or
sub
adc
out
cld
div
jmp
mov
mov
mov
mov
das
xchg
loopne
and
loope
jp
mov
js
movsbl
xlat
loop
stos
adc
jns
pusha
adc
scas
sub
addl
cmp
xor
sbb
sbb
sbb
cmp
imull
sbb
ljmp
sbb
insl
xlat
jbe
int
call
push
aas
in
stos
icebp
or
gs
push
mov
fiadds
arpl
cmp
pushf
and
sarb
mov
std
int
in
or
jb
cmp
scas
push
add
ja
stos
hlt
cmp
scas
cmp
push
dec
cmp
clc
jg
sbb
mov
mov
dec
stc
xchg
jg
mov
sahf
and
mov
jp
pop
xor
cltd
in
xchg
pop
fdivl
push
push
jae
mov
adc
pop
jg
into
push
call
xchg
xlat
outsl
mov
movsl
mov
adc
cmp
or
sbb
mov
and
cmc
dec
out
or
sbb
icebp
aam
inc
rolb
leave
mov
negl
dec
lcall
push
pushf
pop
out
jge
jg
mov
out
mov
inc
in
je
clc
sbb
add
aam
adc
or
sub
aad
stos
pushf
mov
dec
lret
enter
add
pop
out
mov
int3
sbb
inc
pop
mov
mov
mov
sub
and
lea
dec
push
push
add
xor
test
rcrb
bound
addr16
jge
cmp
ds
or
jno
lods
mov
dec
mov
stc
arpl
mov
pop
cli
inc
mov
push
xor
aaa
out
add
push
dec
imul
aad
or
pop
bound
jae
aas
dec
adc
mov
push
je
pop
xor
adc
cs
and
shrb
stos
mov
mov
jge
pop
mov
ss
cmp
mov
jbe
fisubs
fnsave
iret
push
repz
mov
fnsave
testl
mov
xchg
nop
pop
flds
insb
adc
xchg
fmull
data16
adc
daa
or
or
xor
pop
clc
sub
and
add
dec
cmp
sub
add
push
adcl
jbe
lds
lahf
aad
sbb
pusha
push
lret
pop
lahf
cmp
out
and
mov
test
call
jne
mov
cmc
push
sbb
data16
lods
inc
pushf
test
into
je
call
mov
push
rorb
popf
lods
sbb
xlat
or
ficoms
ror
ljmp
sbb
hlt
dec
adc
icebp
hlt
mov
into
mov
out
jmp
and
inc
es
inc
mov
adc
mov
ret
pop
lcall
push
cmpsl
dec
lret
lret
mov
jno
mov
aam
inc
push
lcall
xchg
je
int3
rorb
std
shrl
lcall
lret
push
enter
lods
xchg
and
inc
mov
mov
rcll
or
pop
xor
stc
hlt
insl
inc
sti
pop
push
stos
out
cmp
sbb
xor
fists
cmp
adcb
mov
jle
hlt
sub
fs
int
mov
test
sbb
push
pop
dec
pop
inc
add
cmp
leave
adc
jmp
push
call
les
push
nop
icebp
cmc
push
and
or
mov
add
sbb
cmp
rcrb
adc
andl
inc
call
push
enter
outsb
xchg
jnp
mov
mov
or
jp
add
das
mov
shll
mov
das
dec
ss
hlt
icebp
ljmp
adc
sbb
sbb
mov
jb
cmpsl
dec
and
mov
pop
add
mov
insb
or
xchg
adc
insl
in
data16
lahf
movsl
les
pop
rolb
sub
loopne
dec
sbb
fsubs
sub
leave
sbb
iret
enter
xor
fstps
push
call
cmp
adc
int3
ljmp
repz
mov
mov
fsubrl
repnz
sbb
mov
mov
dec
sbb
ds
shrb
adc
cmpl
xchg
sub
cmp
in
jae
nop
add
lock
inc
loope
dec
cld
shlb
mov
call
gs
shld
icebp
xchg
shr
push
insl
sbb
add
jp
pop
sub
pop
in
movsb
inc
dec
cmp
fsubrs
addr16
das
inc
inc
aaa
ljmp
test
or
insl
jge
or
pop
push
in
xchg
call
or
in
adc
loop
dec
scas
roll
push
mov
ret
repz
addr16
sti
cmp
inc
fnsave
les
sub
pushw
test
test
das
fwait
jns
call
lcall
add
sarb
out
or
jne
aam
adc
dec
and
jecxz
mov
fdivs
pop
add
dec
push
lcall
rcll
xchg
in
xchg
sbb
icebp
mov
cmpsl
pop
ret
pop
push
enter
fidivrl
mov
jbe
cld
xchg
inc
mov
sbb
mov
popf
ret
cmpsb
push
push
sub
mov
fsubrs
lea
stc
les
inc
adc
xor
out
nop
mov
loope
jne
lock
and
mov
cmp
mov
in
xor
lea
xlat
aas
je
xor
inc
jmp
icebp
cmc
jmp
pop
fnsave
hlt
or
inc
mov
out
inc
subb
mov
inc
stos
cmc
adc
mov
gs
xchg
sub
lahf
and
std
aaa
stos
je
pusha
add
shrl
jae
test
add
cmpsl
push
ret
int3
arpl
mov
lods
push
scas
jno
addr16
mov
test
xchg
js
add
clc
fwait
lods
mov
out
fsubr
push
shll
push
repnz
jbe
adc
call
pop
lahf
mov
lret
cmpsb
dec
mov
addl
cmc
cmp
in
clc
or
addr16
xor
sti
test
repz
dec
xlat
cmp
movsb
aaa
push
in
adc
jne
es
in
gs
mov
xchg
pop
dec
int3
cmp
and
xchg
sub
out
lea
pop
sub
daa
stos
xchg
rcr
repnz
inc
into
cbtw
jb
mov
movsl
movsl
pop
mov
lahf
jp
leave
or
jg
or
outsl
loope
lods
in
mov
add
xchg
imul
mov
add
imulb
adcb
sub
or
pop
push
xlat
sbb
add
pop
push
mov
mov
xchg
adc
xchg
sbb
ret
mov
pop
outsl
nop
shlb
stc
aas
push
movsl
dec
mov
pop
shlb
dec
lds
xor
mov
jmp
stos
int3
lret
mov
xor
mov
lret
inc
inc
xrelease
dec
push
push
xchg
test
orb
sbb
dec
xor
add
xor
push
jmp
pusha
push
jo
jl
insl
bswap
test
jae
cli
mov
ret
lahf
pushf
outsb
inc
mov
std
or
push
sub
pop
movsb
jmp
fnstcw
pop
cmpsl
sub
fmuls
dec
aam
ss
dec
ja
lret
mov
adc
in
out
imul
imul
push
add
cli
jne
out
sbb
xchg
jae
aas
mov
fiaddl
cld
cmp
cld
test
or
cmp
cmpl
pop
test
or
dec
jo
fs
jnp
cltd
sbb
ret
cwtl
testb
ljmp
adc
inc
sub
orb
ret
sbb
xlat
inc
mov
stos
push
mov
fisubl
jne
out
pop
out
mov
push
mov
inc
ss
jecxz
movsb
or
pushf
lea
adc
mov
push
cmpsb
js
pop
es
paddusw
setge
pop
pop
aas
repnz
push
sti
sub
sub
sub
dec
loopne
mov
and
sahf
shlb
mov
shrb
stos
mov
xchg
nop
jbe
xor
xchg
or
lods
aam
mov
iret
jg
sbb
ret
mov
mov
data16
mov
cltd
jmp
jl
push
movsb
pop
xor
mov
fstpt
inc
push
xor
int3
and
enter
stos
inc
outsl
sbb
cwtl
mov
rorb
add
push
push
repnz
cmpsl
ret
sub
cltd
mov
das
ds
faddl
or
addr16
rolb
adc
bound
push
insl
mov
in
mov
into
add
sbb
cmp
mov
cmp
scas
icebp
mov
repnz
adc
mov
adc
lock
cli
xchg
into
std
inc
in
sub
leave
jno
mov
pop
push
lret
xchg
lcall
inc
call
cltd
xlat
xor
adc
leave
cmp
out
daa
dec
out
cmp
mov
out
pop
sbb
es
mov
cmpsl
int3
pop
je
add
cmc
dec
jae
adc
xchg
test
movsl
rcrb
loope
inc
pop
int
and
xchg
pop
sbb
insb
fildll
xchg
mov
pop
push
or
in
sub
movsb
mov
ja
inc
loopne
cwtl
loope
adc
sbbl
mov
mov
mov
ror
out
imul
sub
cmp
enter
xchg
cli
pusha
mov
xchg
adc
enter
cld
or
addr16
mov
mov
xlat
outsl
mov
fstl
pop
pushf
imul
add
or
mov
dec
incl
or
pusha
fdivr
xchg
lret
cmpb
sbb
ja
lods
inc
fwait
or
pop
xor
pop
mov
xor
mov
inc
pushf
adc
enter
pusha
dec
mov
xor
scas
stc
lea
mov
and
sub
jno
add
add
fs
sbb
pop
mov
test
jne
lods
jbe
lods
cmpsl
or
lcall
fisttpll
out
pop
push
sbb
leave
stos
test
push
push
dec
fcoml
test
jl
repnz
pushw
sbb
cld
fwait
xchg
ljmp
cmp
in
div
adc
fs
aam
inc
lods
push
cs
push
loope
dec
cmp
mov
lahf
mov
push
stos
xor
sub
inc
into
sbb
js
jns
push
inc
cs
shl
xchg
repnz
cmpsl
in
jge
in
push
jns
jae
hlt
mov
cmp
xlat
flds
scas
js
sahf
pop
and
mov
xchg
mov
push
call
jmp
fistl
clc
or
in
ret
adc
imul
repnz
mov
adc
loope
pushf
xor
mov
or
dec
xchg
hlt
mov
xor
mov
lea
sbb
data16
gs
pop
and
xchg
popf
or
mov
sbb
push
jg
sub
roll
in
cmpb
or
repnz
test
fildl
adc
int3
add
xorl
mov
xchg
ljmp
jecxz
stos
inc
popf
iret
dec
sbb
enter
jp
lock
pusha
pop
inc
scas
cmp
fdivs
sbb
mov
dec
shrl
loop
xor
xlat
je
hlt
or
int3
cmp
fld
pop
or
jae
loopne
loope
jnp
pop
je
xchg
daa
lcall
adc
xchg
xchg
gs
pop
in
jg
lds
jns
lahf
mov
sub
mov
adc
push
cmp
fisubrs
negb
mov
jg
cmp
clc
idivl
or
inc
jmp
fcoms
jmp
std
and
xor
adc
mov
sub
out
movb
ss
mov
dec
sarl
jns
xor
iret
xor
outsb
shlb
mov
mov
leave
dec
popf
fildll
js
test
xor
sti
mov
mov
or
or
xorl
dec
push
imul
lahf
cmpsl
fstp
aaa
inc
inc
out
jns
mov
lret
jp
shll
jecxz
mov
pop
jbe
int3
xchg
or
mov
sbb
aad
stos
jmp
test
std
out
nop
test
xchg
insl
aad
gs
cmp
mov
and
out
hlt
jae
jne
imul
sbb
icebp
mov
ljmp
lods
cmp
fidivs
add
faddl
test
xchg
jmp
push
jno
loopne
jnp
lret
pop
adc
out
sbb
dec
inc
fcoms
mov
xchg
outsl
mov
lahf
insb
push
pop
dec
lret
fistpl
push
mov
shrl
push
stos
pop
adc
mov
pop
outsl
pop
mov
leave
xchg
loopne
inc
out
scas
add
sti
cltd
leave
jo
cltd
test
clc
jl
es
sarb
fwait
incl
out
fstl
add
sbb
push
fildl
push
xchg
inc
aas
pusha
stos
cmc
popf
mov
mov
hlt
xlat
repz
ret
shl
ja
or
mov
lods
push
in
dec
dec
inc
sbb
test
push
xchg
sbb
pop
scas
sbb
xor
mov
sbb
mov
lret
lods
and
shrl
ficomps
pop
cwtl
mov
mov
enter
mov
in
cltd
call
cltd
data16
mov
loope
sub
dec
dec
dec
mov
adc
push
stos
dec
loope
icebp
clc
mov
popa
push
imul
ja
pop
jecxz
xchg
xor
mov
out
in
adc
dec
cmp
adc
jns
xor
inc
rcr
iret
mov
xor
dec
iret
flds
cmpsl
adc
mov
lahf
inc
jnp
shl
ja
rcrb
xchg
or
enter
pop
inc
sub
je
jl
mov
push
loope
popf
push
jmp
adc
imul
lea
testb
jle
sub
call
lahf
adc
cmp
vunpckhpd
pop
pushf
push
pop
xor
out
ds
pusha
lds
jg
test
adc
dec
jmp
lret
fxch
nop
push
adc
loopne
dec
jp
cmp
mov
mov
mov
mov
leave
ds
in
outsb
dec
cmpsb
xor
adc
int3
fs
mov
loopne
sbb
movsb
ret
scas
sbb
push
adc
adc
sbb
mov
outsl
xor
mov
test
and
cli
call
cmp
ljmp
addr16
mov
shll
test
inc
outsl
mov
xchg
pop
xor
mov
cmc
sbb
pop
inc
xor
jnp
sahf
cmc
andb
jno
jp
sub
out
mov
mov
out
mov
push
shl
jnp
bound
cltd
mov
dec
xor
dec
add
xchg
jns
movsb
cltd
test
jle
sub
mov
adc
jns
add
inc
cmc
fiadds
inc
lods
sub
inc
shll
addr16
dec
jg
or
outsl
nop
mov
loope
mov
mov
flds
mov
jo
push
scas
fidivrs
dec
out
pop
or
aas
js
outsb
popf
insb
mov
push
jl
addr16
sbb
mov
les
inc
out
and
xorb
out
mov
xchg
xchg
cmp
sarl
dec
mov
push
push
add
and
dec
cmc
test
repz
or
dec
jl
aaa
and
adc
addl
movsl
sti
xchg
lea
mov
inc
push
add
push
outsl
call
cmp
mov
xchg
popf
mov
shrl
or
pop
adc
inc
pop
ja
jle
mov
cmc
shlb
sub
sbbl
xor
in
mov
stos
movsb
nop
cs
das
mov
fnstcw
pop
push
mov
aam
mov
add
lods
sbb
dec
sub
test
inc
nop
test
mov
cmpsl
dec
fdivrp
dec
cmp
jl
fidivrl
outsl
mov
shll
icebp
mov
stc
adc
arpl
fs
insl
ret
cmc
dec
cmp
sbb
pop
jge
adc
cmc
xor
pop
imul
pushf
mov
cmp
inc
loope
sbbb
adc
dec
or
lea
xchg
mov
push
int3
nop
clc
pop
sub
xlat
jmp
jle
sub
out
dec
aas
pop
add
lods
pushf
cvttps2pi
je
mov
lods
ljmp
pop
and
rcrl
sbb
int
out
xor
jno
dec
scas
push
sbb
test
cmp
divl
sbb
push
pop
and
pop
les
lret
or
mov
xor
test
and
in
mov
adc
fistpl
rol
push
push
or
in
cwtl
stos
ljmp
jnp
xor
aas
sub
mov
leave
sarb
cld
mov
mov
outsb
push
push
ret
xor
and
mov
dec
cmp
movsb
inc
es
gs
cmp
addr16
xchg
gs
aas
pop
ret
mov
xchg
jge
out
add
sahf
cli
pusha
cld
inc
xchg
je
cli
insl
sbb
mov
test
hlt
mov
dec
xchg
and
cmpsl
in
dec
push
rorb
or
inc
push
test
frstor
aaa
cmpl
xor
lods
dec
jne
subl
sub
add
aaa
inc
popa
cmpl
mov
je
popa
sahf
xor
test
pop
sahf
hlt
xor
sub
fldcw
jmp
xor
std
sahf
mov
aas
cmp
dec
inc
sbb
sub
popf
popa
imul
xchg
jl
sub
lea
jle
pop
mov
mov
std
xor
push
push
jbe
push
jno
mov
and
fcomp
mov
xor
push
push
pop
popf
add
test
xchg
inc
leave
add
clts
inc
mov
sti
sbb
mov
pop
dec
mov
inc
clc
jg
imul
mov
faddl
pop
push
cmp
les
sbb
sub
clc
shrb
fsubrs
shlb
push
add
out
mov
add
push
and
faddp
mov
add
dec
jne
icebp
out
pop
lahf
sbb
enter
push
out
icebp
pop
inc
or
inc
addr16
stos
hlt
jae
dec
mov
test
icebp
add
xor
push
jmp
adc
lcall
or
in
int3
dec
aam
imul
xlat
cmp
inc
int3
jmp
or
pop
loope
mov
mov
sub
lret
sti
popf
xor
lock
mov
inc
add
push
ja
mov
jecxz
aas
cmpsb
dec
sbb
or
lods
mov
daa
inc
fsubs
add
cmp
rorl
in
jno
sbb
ja
dec
std
adc
cmp
inc
arpl
test
out
mov
dec
mov
mov
mov
sub
jge
std
add
pop
jnp
cmp
stos
push
push
pop
test
push
sbb
pusha
lcall
adc
xchg
pop
jg
bound
jno
pop
ret
lock
adc
mov
fistl
jns
or
pop
jb
sub
xchg
push
jg
mov
ret
jle
es
ficoms
je
iret
cs
out
adc
jb
or
mov
cmp
daa
pop
insl
divb
adcl
cmpsb
sahf
hlt
jne
dec
xchg
test
xchg
sub
mov
mov
mov
aaa
movsl
cli
pop
std
adc
movsb
addr16
popa
into
clc
sbbl
pop
jge
sbb
fstpt
lcall
cmc
jne
mov
bound
ljmp
jge
sbb
leave
jb
imul
sub
stc
push
andl
fsubrp
add
cs
mov
js
mov
mov
addr16
sarb
les
push
ret
ret
mov
imul
pop
add
jb
movsl
fdivrs
es
cmp
cltd
push
mov
aaa
inc
insb
push
repz
jmp
in
cmp
push
mov
inc
dec
sbbb
push
scas
int3
jecxz
adc
push
dec
lods
mov
pop
or
push
inc
and
negl
out
push
aas
inc
cmpsl
pop
mov
fiaddl
das
arpl
sbb
xor
sbb
pushf
mov
xchg
add
sub
xchg
inc
xchg
inc
xchg
cltd
sub
or
scas
push
mov
jp
sbb
aaa
cmpsb
jo
cltd
add
cli
mov
adc
jne
push
xchg
jb
stc
les
or
int3
out
lahf
fstpl
call
jmp
std
shl
sbb
pushf
outsl
rcr
mov
dec
sahf
push
cmp
rol
cld
sbb
stc
ret
and
movsl
pop
adc
js
aaa
mov
in
aas
pandn
fstps
mov
pusha
mov
stos
out
add
jb
dec
sbb
jnp
fiadds
dec
add
mov
lock
arpl
les
pushf
cmp
or
enter
dec
loopne
pop
mov
addl
mov
packuswb
push
push
das
cmpsb
and
std
sbb
dec
mov
pop
mov
and
insl
mov
mov
mov
jmp
sub
dec
mov
cmpsb
pop
imul
ss
fldcw
stos
mov
aad
mov
jno
aas
clc
iret
cs
jno
xchg
clc
adc
jns
or
pop
or
cli
add
fdivs
bound
dec
mov
xchg
push
cmpsl
push
test
dec
lret
loopne
inc
lods
test
inc
hlt
mov
outsl
lret
xchg
sbb
cld
loop
jge
sbb
dec
test
mov
mov
sub
mov
icebp
xchg
dec
and
push
xchg
ljmp
sbb
lea
jp
xchg
jg
gs
add
outsw
pop
mov
je
mov
ja
inc
lcall
and
lcall
push
ficompl
xor
xor
shlb
nop
pop
push
add
daa
loop
in
jno
pop
jg
dec
jae
cmc
test
pop
int
lcall
pop
dec
fistpll
lcall
sub
adc
lcall
call
fdivrl
sti
movsl
mov
add
out
aas
in
rorl
jmp
or
jno
sub
pop
sbb
nop
loop
push
frstor
inc
in
cmpsl
jae
popf
call
or
cmp
mov
mov
faddl
and
and
inc
notb
in
dec
mov
mov
daa
jl
shrl
or
in
ret
mov
jp
pusha
lods
sub
xor
iret
mov
and
add
cmp
xchg
adc
lods
les
inc
test
xchg
adc
dec
leave
inc
sbb
leave
push
movsl
movl
dec
xor
subb
in
cmp
cli
xor
sub
push
fwait
in
cltd
sub
fdivrs
lock
cmp
push
dec
pop
xor
jne
cltd
stos
loopne
xchg
pop
mov
jbe
repnz
pop
out
lds
je
sbb
xchg
in
in
pop
stos
sbb
sub
cld
and
sub
lahf
daa
adc
sbb
lcall
and
mov
mov
icebp
enter
and
push
inc
gs
dec
lods
ficompl
jg
cltd
std
enter
sub
or
int3
hlt
out
inc
push
lcall
push
hlt
mov
imul
jl
int3
ss
popf
and
add
jb
cli
daa
add
sbb
jnp
insb
fbld
xchg
mov
addr16
mov
lret
cli
adc
or
repz
popa
outsb
xorl
or
cmp
clc
jle
mov
mov
xor
in
jno
dec
stos
jl
ljmp
lock
shlb
jg
jp
sub
inc
bound
lods
push
test
std
inc
lahf
leave
popf
pusha
aad
in
test
add
and
leave
rorl
adc
adc
mov
leave
pusha
sub
or
enter
cmpl
mov
mov
ret
xor
fldenv
push
popa
jmp
lods
jmp
sbb
aaa
xchg
or
inc
adc
dec
lods
xor
dec
dec
adc
lock
jb
cmp
idivb
mov
cltd
mov
out
xchg
and
cwtl
lds
fldenv
data16
mov
inc
fistl
inc
into
jecxz
arpl
daa
mov
or
xor
xor
push
inc
push
cmp
inc
push
mov
pusha
aam
movl
idivl
pop
xchg
push
jge
or
lods
fwait
xlat
sarb
or
loop
setbe
mov
dec
dec
mov
repnz
or
xor
movsb
pop
enter
ss
rcrb
jno
fucomi
adc
push
sub
fsubr
test
mov
into
psrad
pushf
lock
imul
adc
int
push
imul
test
inc
push
mov
dec
xor
clc
ret
movsl
cmp
nop
out
push
inc
xor
sbb
mov
jns
adc
rcl
sub
add
repz
sti
fwait
lret
jl
xchg
sahf
scas
cltd
inc
sbb
movsl
mov
sub
sti
xchg
aam
lods
xlat
mov
jnp
jb
and
mov
or
mov
cmpsb
cmp
jmp
push
jge
push
mov
pop
decl
outsl
pop
add
pop
movsb
dec
cmp
dec
jecxz
arpl
movsl
dec
or
cli
mov
testb
ffree
hlt
repz
and
pminub
fiadds
mov
popf
fists
push
push
xchg
dec
jecxz
in
cwtl
lock
mov
scas
inc
xor
or
mov
fsubs
push
xchg
push
orl
add
insb
mov
fistpll
add
push
je
fistl
popa
cli
mov
aaa
inc
mov
add
push
sub
pop
add
add
lds
gs
push
dec
ret
mov
cmpsl
repz
gs
out
mov
popa
cmpl
hlt
cmp
movsb
xor
in
pop
loopne
inc
adc
adc
sbb
mov
lret
int
ret
cmp
and
arpl
in
jge
mov
and
outsb
in
pop
jmp
movsl
pusha
jo
mov
int3
outsb
jg
pop
insb
loopne
insb
jge
cmp
add
test
mov
imul
dec
aad
xchg
mov
sub
pop
int
and
sub
xchg
push
fdivl
lock
fsubrs
in
push
aad
negb
cmc
push
int
mov
push
ljmp
mov
maskmovq
notl
testl
push
cld
imul
in
xchg
inc
jmp
lock
in
sub
stos
daa
movsl
jecxz
lret
and
inc
pop
or
nop
in
fadds
ss
mov
in
xor
push
mov
loope
mov
rclb
icebp
mov
sub
pop
icebp
rcll
lahf
xor
push
or
jl
repz
inc
aad
and
inc
push
mov
test
mov
pop
adc
mov
xor
sbb
or
adc
outsb
fiadds
mov
orb
mov
daa
xchg
or
in
nop
insl
cli
sbb
int
mov
inc
pop
push
fnsave
sti
test
lock
stos
lcall
and
js
flds
fdivs
int3
lahf
sbb
add
int
push
jb
xchg
xor
and
loopne
xor
mov
pop
cli
add
adc
add
out
cwtl
shrl
ljmp
icebp
xchg
cmp
repnz
mov
test
push
jnp
or
push
xchg
mov
insl
jge
mov
adc
ja
pop
xor
fmull
xchg
or
push
sub
cltd
or
xchg
into
add
mov
push
test
cmp
jl
je
pop
sub
jp
cli
adc
mov
andl
xchg
xor
sub
cld
enter
xchg
in
xchg
aas
mov
lock
test
cmpsl
test
insl
repz
aas
dec
enter
inc
mov
push
jmp
rcll
xorb
inc
cltd
mov
dec
or
and
sti
xor
lds
sbb
add
push
lret
cmpsl
add
cmp
movsb
js
sub
int
dec
jmp
sbb
rorl
cmp
daa
aaa
popf
fnsave
jle
aas
pop
outsl
jge
movsl
pushf
repnz
cmp
enter
stos
fadd
test
sub
lret
outsl
ret
dec
test
lret
mov
add
sub
inc
and
js
int3
xor
in
inc
pop
xor
mov
dec
rclb
jne
test
xor
aas
dec
inc
inc
insl
aam
adcl
xor
mov
popa
int
cmp
mov
and
mov
insb
push
js
pusha
out
dec
and
mov
xchg
pop
sbb
popa
pusha
ljmp
mov
addr16
and
mov
sbb
and
inc
popa
fsubl
dec
dec
pop
push
pop
mov
fsub
dec
hlt
mov
lahf
or
push
aaa
shrl
lock
popf
cld
cld
pop
cmp
sbb
push
sbb
push
push
cmp
sub
push
jb
inc
lods
int3
ja
pop
xchg
push
test
xchg
rol
aad
lahf
jbe
pop
pop
mov
mov
arpl
addl
icebp
mov
push
inc
test
mov
fs
xor
mov
outsl
gs
lods
movsl
lds
xor
ret
mov
adc
test
cld
jecxz
pop
inc
lock
mul
imul
jg
loop
enter
inc
popa
mov
fst
pop
mov
sbb
in
mull
add
cmpsl
mov
dec
fbld
mov
adc
out
subl
mov
je
out
pop
adc
and
adc
dec
nop
jle
and
xor
testb
jp
sbb
mov
insb
jb
test
adc
imul
fwait
cmc
sub
pop
cmp
adc
fiaddl
aad
adc
mov
aad
add
xor
cli
xchg
or
das
addb
sub
pop
std
lret
gs
fadd
jg
mov
movsl
dec
bound
jne
mov
add
mov
out
cmpsl
movsb
mov
lods
cmp
lcall
mov
inc
fidivs
iret
sub
lcall
fucomi
ret
and
pop
jae
mov
shlb
xchg
mov
scas
push
sub
lods
fstpt
fbstp
sar
test
test
xchg
adc
mov
push
fwait
push
cli
or
out
jns
int
shll
mov
das
or
and
lahf
mov
daa
outsl
dec
cmc
cmpsb
jle
push
stc
shlb
les
into
fsubs
mov
enter
cmp
cmp
popa
rcrl
fcomps
mulb
inc
imul
or
jg
sub
sbb
mov
fidivrl
mov
push
ja
out
std
popa
stos
and
pop
mov
xchg
sub
jge
popa
mov
int3
sti
mov
mov
popa
fmulp
bound
jo
les
ficoml
cmp
xchg
gs
test
jne
dec
js
jne
lea
cs
setae
and
push
cmp
psubusw
js
xchg
sub
push
imul
inc
in
clc
inc
mov
sbbl
inc
pushf
mov
sbb
out
cwtl
decb
popa
daa
xchg
sbb
or
mov
outsb
add
jecxz
mov
aad
dec
pop
jmp
adc
mov
jb
sahf
shll
test
pop
sub
inc
fiadds
in
add
mov
imul
adc
ljmp
pop
add
cmc
jne
dec
lods
loope
std
mov
jp
mov
or
sbbl
mov
outsb
add
sti
mov
sarl
add
sub
out
ja
lds
mov
out
lret
sarb
dec
pop
data16
mov
js
sub
call
in
add
addr16
mov
and
outsb
add
test
mov
and
xor
test
data16
imul
outsb
stos
push
add
arpl
push
pop
mov
cmc
adcl
dec
loopne
cld
xchg
mov
pop
lock
imul
jl
xchg
lods
test
and
jl
cmpsb
scas
mov
sub
mov
xchg
f2xm1
jo
ss
mov
fisubrl
mov
push
and
and
loopne
xor
out
xor
mov
test
cwtl
pusha
flds
mov
add
pop
leave
loopne
enter
int
insl
sbb
fisttps
outsb
out
sbbl
popf
mov
mov
inc
pop
mov
inc
int
and
push
or
pop
ds
cmp
daa
add
cmp
dec
sbb
sbb
dec
dec
dec
jmp
or
xchg
or
mov
add
jnp,pt
outsb
testl
xchg
or
out
jle
sbb
mov
push
mov
insl
push
stos
sti
inc
flds
cmp
and
in
enter
fdivp
xchg
scas
cmp
lds
faddl
mov
movsb
add
cmpsl
jno
arpl
xchg
iret
in
loope
cmpsl
rorb
aam
negb
cmp
lds
fmull
mov
jle
andl
lods
adc
or
sbb
jne
lods
mov
jl
fs
pop
push
shlb
jo
popa
cmc
cmp
adc
pushf
test
pop
call
fsubs
sahf
sbb
incb
addl
ds
and
or
lds
mov
add
jnp
mov
pop
mov
arpl
lea
into
popf
inc
pusha
add
push
lds
in
inc
aaa
fiaddl
xlat
fs
or
pusha
nop
xchg
decl
pop
call
aad
push
push
les
test
dec
or
mov
xor
sub
dec
xchg
pop
roll
nop
das
push
mov
shlb
cs
test
push
jmp
pop
repnz
in
add
pushf
fildll
cmpsl
mov
mov
lock
xchg
mov
push
mov
jge
adc
test
enter
push
repnz
inc
push
cmp
cwtl
jge
pusha
lcall
jle
dec
mov
xor
fsts
andl
inc
sbb
daa
popf
aaa
into
adc
andb
or
insl
inc
push
sub
adc
aaa
adc
stos
sarb
int3
iret
dec
shr
jge
mov
das
mov
mov
das
ja
negb
jg
inc
cs
cmc
pop
test
xchg
mov
jl
jbe
pop
lock
or
movsl
dec
adc
jnp
inc
shlb
pushf
fidivl
xchg
in
jl
mov
jne
lods
orb
xchg
data16
negl
lods
aas
push
stos
add
cmp
add
xor
add
divl
insb
sahf
push
outsl
adc
stos
inc
mov
stc
je
and
xorl
outsb
scas
cwtl
and
lret
or
or
loope
ss
leave
add
jns
add
push
aas
and
mov
sbb
sahf
cmp
and
es
dec
push
stos
shrb
adc
test
push
inc
jl
aad
mov
mov
push
cli
adc
movsl
in
xchg
adc
iret
pop
imul
imul
sbb
mov
fsubrl
cmc
xor
add
and
mov
test
pop
xchg
dec
dec
cli
or
hlt
mull
pop
jp
dec
jle
in
xchg
and
lea
sub
aad
roll
or
pop
xchg
xor
pop
icebp
adc
sub
jae
inc
cld
inc
cli
xchg
fsubrp
test
aad
cmp
aas
repnz
jnp
loope
pop
mov
add
aas
loopne
pop
push
loop
outsl
sub
pop
insb
lcall
xor
frstor
inc
addr16
jecxz
jae
or
pop
mov
ljmp
sbb
pop
jno
jge
mov
es
cwtl
pop
mov
xor
xor
jns
cwtl
or
lea
add
ja
add
pavgb
jle
cltd
es
push
arpl
adc
mov
rcll
add
lcall
std
jmp
or
ja
lods
mov
jecxz
push
in
int
sub
inc
daa
int
mov
and
rcll
scas
pop
ror
or
cmpsb
mov
cmpsb
mov
jecxz
fs
sub
push
or
cmp
loopne
push
mov
cmpsl
loop
enter
enter
sahf
push
mov
xor
inc
shrb
addb
adc
out
fldenv
clc
idivl
mov
shrb
xor
jne,pn
ds
cmp
mov
pop
imul
popf
mov
fsts
push
cmpps
pop
fnstsw
pop
adc
push
inc
and
xlat
push
fstl
das
or
mov
aas
lock
jmp
inc
loope
testb
jp
leave
sub
push
pop
cli
mov
xchg
dec
pop
push
call
adc
fcmovbe
jo
dec
add
hlt
and
pop
in
xchg
push
cmpsb
dec
fidivl
or
jle
xchg
adc
jbe
test
repz
fsqrt
jnp
daa
mov
sub
dec
fisubrl
les
insb
aad
pushf
lret
popa
cmp
sti
mov
fldl
adcl
mov
pop
sbb
sub
fsts
mov
pop
or
fbstp
popa
ja
mov
pusha
mov
cmp
in
jp
cmp
int
mov
cs
loopne
imul
sbb
mov
jae
dec
and
dec
repz
xchg
xlat
movsl
fchs
xchg
jbe
popa
sub
test
cltd
dec
fisttps
fidivs
pusha
gs
shll
mov
inc
xchg
insb
sbb
jecxz
lods
inc
and
pop
mull
ja
loopne
dec
xor
jl
push
sub
loope
jae
add
cmp
aad
adc
orb
mov
mov
add
xchg
pop
into
into
or
push
push
xlat
sub
cmp
test
fcomps
movsb
pop
cltd
hlt
gs
mov
jge
imul
sub
mov
xor
xchg
mov
ud0
jp
and
sahf
shll
in
pusha
sub
jne
cmc
mov
jns
sub
pop
idivl
lcall
push
clc
pcmpeqb
das
cli
jns
jge
rorb
jp
jge
jg
xor
xchg
inc
jle
dec
push
sarl
and
xlat
out
push
fucom
or
cmpsl
loope
mov
pop
ds
push
or
cmp
pop
jbe
data16
xchg
lret
leave
scas
fidivrl
cmp
pop
cmp
repz
xchg
dec
in
aaa
dec
pop
outsl
pop
adcb
or
sub
ret
mov
sbb
shl
dec
cmpb
ja
shlb
and
bound
xchg
out
ffree
pop
mov
icebp
xchg
in
into
xchg
xor
and
in
je
fwait
clc
jmp
pop
mov
popa
adc
cmpsl
mov
into
incb
outsl
mov
es
fists
inc
popa
pop
jle
rcrb
or
ret
and
cmp
push
add
mov
cmpsb
loopne
mov
nop
mov
cmp
fcomip
movsb
push
inc
xchg
xor
push
or
icebp
or
add
or
push
xor
pop
cmp
popl
mov
repz
adc
dec
scas
jp
ja
outsl
xchg
test
add
jmp
shl
mov
cmp
xor
aam
les
std
xchg
ror
jne
bound
add
adc
push
stos
fdivl
jnp
repnz
pushf
xchg
pop
sub
sub
dec
es
jmp
rcl
ret
mov
fisttps
cmpsl
insl
stc
iret
sbb
incb
inc
test
pop
testl
mov
mov
cli
mov
cmp
push
adc
test
mov
out
inc
pushl
jp
out
cwtl
mov
or
cmp
mov
inc
movsb
push
outsl
hlt
movsb
das
add
mov
cmpsb
ja
jge
add
js
stc
sbb
cli
addr16
sbb
mov
add
daa
adc
insl
push
mov
jno
test
in
or
out
pop
aas
repnz
push
popf
pop
sarl
es
jno
imul
cmp
inc
fdivrs
fsubrl
dec
inc
add
inc
andl
sbb
ss
popl
pop
lods
sbbb
repz
sti
jae
inc
fisubrs
jmp
aam
mov
lea
xchg
jp
ja
and
adc
bound
aam
pop
rcl
or
daa
dec
cli
add
push
stos
sbb
jbe
lcall
cld
dec
frstor
push
out
fidivrl
ret
mov
addr16
adc
sub
stc
xor
je
sbb
into
push
mov
sbb
test
mov
jno
push
ja
adc
decl
push
xor
test
ficompl
jge
ret
xor
insb
mov
loope
test
mov
jnp
dec
or
pushf
add
push
clc
mov
insb
mov
fdivr
cmp
adc
in
mov
leave
add
outsb
mov
lods
loopne
jbe
xor
sub
fsubs
and
xor
inc
cld
fmul
das
jae
dec
or
jle
lods
aam
nop
mov
jae
add
mov
data16
adc
jne
mov
shrb
push
in
jbe
lods
cmp
adc
ret
add
ret
jbe
sub
aaa
or
movsl
dec
xlat
add
roll
adc
push
daa
pop
cmp
sti
popa
add
in
jl
mov
mov
jnp
inc
jmp
shr
xor
das
or
ret
fwait
sbb
div
mov
out
push
sbb
and
cbtw
bound
jb
mov
adc
sub
leave
sbb
ss
mov
cmp
xor
mov
nop
push
in
roll
mov
bound
test
dec
inc
mov
filds
rol
shll
jle
xor
dec
addr16
mov
add
or
mov
es
movsl
xchg
in
loopne
sbb
xor
push
cmp
shlb
lock
cmp
fldenv
test
rcr
push
adc
iret
es
inc
dec
bound
push
movsl
xchg
ljmp
or
test
mov
xchg
push
adc
jno
ja
js
jmp
fcompl
rcrb
nop
negl
fisttps
and
dec
xchg
aaa
jno
bound
xchg
pop
js
or
adcb
xchg
repz
popa
sbb
iret
pop
jae
cmp
sti
adc
mov
pop
call
lcall
push
ljmp
frstor
xchg
aas
push
iret
daa
lods
jmp
scas
outsb
jmp
int
xor
dec
and
clc
push
sti
cmp
scas
subb
or
mov
stc
lea
dec
loopne
scas
jmp
xchg
addr16
mov
mov
rcr
mov
test
cmp
popf
stos
mov
fwait
mov
mov
call
hlt
pusha
iret
cs
cmp
not
jo
sarl
div
insb
xchg
shlb
or
ja
jp
push
adc
sub
adc
xchg
sbb
icebp
xchg
xor
outsb
out
add
xor
stos
jge
pop
pop
jae
popf
loopne
iret
mov
cmpl
hlt
faddp
mov
jge
push
sub
inc
sub
lea
sbb
ret
and
cmpsb
sub
ret
pop
xchg
into
xor
xchg
cmp
stos
hlt
sub
outsl
repz
lods
add
arpl
xor
repz
call
in
movsb
mov
sbb
js
jo
and
jne
add
out
add
mov
mov
pushf
in
mov
mov
fldenv
sub
push
in
movb
test
mov
repz
pop
or
adc
push
dec
ret
cmp
xchg
or
dec
push
push
ret
call
iret
mov
cmp
das
mov
sahf
jge
movsb
mov
cwtl
in
stos
cwtl
int
pop
or
test
inc
and
popa
pop
and
add
xor
xor
aam
das
xchg
test
cmp
mov
lods
push
mov
fnstenv
add
lahf
mov
popf
mov
push
and
or
or
xor
lret
push
lock
xchg
sub
cmp
dec
xchg
icebp
lahf
dec
xchg
and
jb
jg
test
inc
fsubrl
int3
test
roll
inc
lea
sbb
call
inc
addb
scas
inc
insb
je
addr16
xchg
mov
fwait
insb
mov
popa
rclb
shlb
pop
ret
icebp
lods
jmp
xor
addr16
xlat
movsl
mov
xor
jg
mov
out
fildl
xchg
test
lods
cmp
out
or
inc
stc
inc
cld
jge
cmp
jno
testl
rep
popf
loope
es
mov
lods
repnz
jns
dec
pop
xchg
xor
xchg
sub
cmp
js
sbb
jp
repnz
add
mov
shll
cwtl
int3
iret
fcomip
imul
pop
sbb
pop
xchg
rcrb
cmp
dec
in
add
rolb
ss
dec
fiaddl
cmc
mov
mov
push
bound
lea
dec
fldl
gs
arpl
and
f2xm1
sub
cmp
dec
xchg
stos
jb
cmpsl
out
dec
test
mov
sub
xchg
loopne
mov
xchg
rcll
jge
pusha
repnz
data16
inc
pop
insl
fisttpll
pop
out
lds
fstps
fs
and
scas
inc
xchg
out
scas
stos
mov
mov
icebp
xor
pop
pop
iret
and
and
mov
scas
mov
mov
jo
push
jecxz
and
rorl
insb
dec
and
jbe
fs
cld
inc
dec
dec
cmc
sbbl
dec
pop
sub
ror
inc
and
xor
scas
add
std
mov
scas
and
ret
outsb
dec
out
into
mov
inc
dec
mov
xchg
push
nop
divl
mov
jae
subb
cltd
das
or
adc
imul
cmp
fisttpll
es
pop
jo
ja
scas
inc
pop
mov
nop
inc
clc
mov
aad
loope
subl
xchg
xor
inc
add
test
lcall
lods
loopne
sti
fwait
xchg
xor
sub
mov
push
scas
ss
push
hlt
pop
inc
cmp
subb
ljmp
mov
cmp
or
cmp
rcrl
add
adc
jl
jns
movsl
rclw
push
or
sbb
push
pop
dec
dec
leave
inc
pushf
jno
popa
push
sbb
push
decb
sti
cmp
adc
subl
jb
mov
adc
gs
and
cmc
mov
pop
mov
inc
notb
and
outsb
jb
movsl
mov
push
fcoms
pop
or
jns
bound
push
ret
std
hlt
std
cltd
cmp
mov
inc
fldln2
xchg
call
push
fbld
mov
dec
out
add
lcall
loope
mov
push
sub
mov
push
mov
ss
mov
pusha
repnz
out
lds
jl
lock
push
iret
mov
out
out
imul
pop
test
in
cld
daa
sti
fdivrp
out
dec
and
lahf
jno
sarb
xor
int3
imull
mov
popf
mov
jecxz
imul
leave
add
ss
repz
dec
movsb
out
lods
pop
in
test
sub
and
out
mov
jmp
push
in
cwtl
jne
or
rcrl
lds
mov
arpl
push
cltd
mov
popf
adc
sbbl
test
mov
rcll
inc
xchg
icebp
xchg
inc
xchg
and
das
and
adc
push
jmp
sbb
mov
int3
fs
sub
jmp
imul
cmpb
shr
imul
lahf
sub
push
jns
roll
fsubrp
je
das
int3
mov
xchg
push
push
out
mov
push
fwait
xor
in
ja
lds
mov
aaa
xchg
adc
addr16
loope
cmp
jle
xchg
daa
jo
inc
scas
xchg
cmpsb
imul
sbb
arpl
notl
add
scas
push
divb
test
shll
mov
jp
into
mov
add
inc
mov
sahf
add
cmc
mov
add
repnz
xor
push
cmpsb
mov
ret
jnp
subl
adc
int
jae
xchg
adc
sti
cmp
cmpb
mov
add
add
stc
mov
outsl
mov
cmpsb
ret
cmp
scas
inc
and
jmp
xchg
jp
nop
sub
cmp
dec
mov
pop
bound
dec
loopne
pop
pushf
rcll
mov
aad
mov
ret
xchg
pop
fmuls
lock
push
icebp
cmpsb
and
insl
ret
add
repz
jge
movaps
jnp
leave
cs
pop
lcall
enter
pop
jns
adc
dec
fwait
stc
test
ficomps
faddl
pop
mov
sbb
popa
pop
xor
clc
call
sub
inc
lahf
into
cmpsb
mov
fsubrp
int
popa
mov
pop
mov
push
adc
mov
or
mov
mov
push
movsl
jecxz
sub
add
fs
scas
add
inc
add
cmp
push
daa
push
dec
dec
jo
sbb
pop
outsb
or
sbb
int3
icebp
dec
xchg
or
shlb
jmp
test
adc
xchg
cltd
jb
mov
mov
test
outsb
push
fisubrl
fadd
push
repz
mov
test
adc
out
fwait
push
stos
push
lcall
inc
lods
dec
mov
aaa
mov
cld
cmp
ljmp
mov
fbstp
mov
nop
cmpb
icebp
lock
das
or
mov
test
pop
mov
mov
out
push
cmp
sbb
jb
es
lahf
push
mov
fisubrl
fildl
mov
aaa
aas
fidivs
xor
mov
ret
cmpl
jb
subb
sti
sbb
jmp
push
mov
add
in
fidivs
les
nop
iret
push
jecxz
pop
jnp
in
test
jae
mov
add
test
jnp
xor
sub
push
test
pop
xchg
push
jnp
cmp
icebp
sahf
clc
notb
mov
in
test
data16
and
inc
xor
cmp
fstpt
mov
jns
shl
cmc
jno
push
inc
push
mov
mov
sbb
xchg
cmp
cmc
pusha
pushf
jae
out
js
repnz
ret
bound
cmpl
sbbl
add
call
and
mov
inc
jo
popa
rcr
xchg
inc
pop
and
cld
and
lods
pop
rorb
imul
repz
sub
out
cld
inc
xchg
mov
nop
cmpsb
mov
cmc
add
push
xchg
jg
pop
adc
rolb
out
repz
sub
test
inc
int3
test
adc
push
dec
adc
jbe
xor
mov
xor
loopne
fdiv
cmp
nop
jnp
sub
scas
popf
cmp
out
or
lods
scas
xchg
mov
ss
pop
rcrb
or
or
mov
mov
push
rcll
mov
dec
into
cmpsl
arpl
or
cmp
dec
pop
add
aaa
sahf
cmp
out
or
mov
or
add
pop
cltd
adc
fwait
dec
cmp
arpl
pop
mov
jae
in
js
imul
mov
pop
shll
fildl
test
test
insl
jmp
mov
out
and
bound
pop
xorb
rcrl
enter
pop
mov
and
adc
cwtl
inc
pushf
mov
xor
fsubs
clc
dec
sbb
aam
pop
pop
in
lret
repnz
mov
mov
mov
pcmpgtb
popf
fiadds
and
decb
mov
out
cmpsl
int
mov
enter
dec
in
dec
lahf
xchg
mov
inc
fsts
mov
ja
subb
shrb
push
add
mov
daa
cmp
fmull
outsb
sub
stos
cmp
cmpsb
jns
and
dec
lret
mov
or
fildll
push
test
mov
stc
ficoml
or
sbb
sbb
fcoms
mov
fists
and
icebp
data16
cwtl
out
lock
adc
adc
jnp
dec
pop
notl
mov
movsb
cmp
push
cmpsb
xchg
ja
test
out
and
insb
cs
fstpt
mov
inc
fsts
pop
scas
rolb
lret
xlat
inc
jle
or
subl
sbb
push
hlt
push
and
xchg
dec
inc
mov
nop
int3
insl
dec
add
mov
mov
outsb
jnp
xchg
stc
int
mov
pusha
xor
test
pop
add
xor
xlat
xchg
mov
jle
bound
jo
pop
rorl
or
movsb
testl
xchg
nop
dec
fisubrs
stc
sbb
add
outsl
or
or
daa
xor
jle
outsb
into
vmovdqa
sbb
or
xchg
in
mov
ljmp
ficoml
imul
add
pusha
leave
xorb
loope
mov
popa
xor
push
or
sub
jp
cmp
addl
jne
aaa
push
addr16
sub
add
pop
dec
fdivl
lea
push
repnz
fdivrp
test
mov
daa
push
push
in
xor
add
jns
inc
imul
pop
lods
cmp
cmp
sub
or
sub
mov
dec
in
and
pop
sbb
cmpsb
sbb
test
dec
sbbl
fcoms
mov
icebp
cli
sbb
or
xchg
sub
out
aam
add
xor
xchg
icebp
pop
dec
imul
subl
ss
loopne
adc
mov
mov
ljmp
clc
mov
iret
outsl
add
mov
sbbb
push
sbb
mul
mov
dec
adc
jne
and
add
pop
sub
xor
mov
jb
inc
xlat
pop
adc
iret
inc
sbb
dec
push
adc
dec
rorl
stos
es
push
mov
push
mov
mov
addr16
jns
add
in
stos
in
pushf
std
in
fdivrl
cli
xchg
sbb
fists
fadd
xchg
std
shrb
es
xchg
mov
fbld
mulb
lea
xchg
ret
cmp
xlat
and
sbb
cmpsb
iret
lret
test
jp
pop
call
xchg
xchg
jae
lods
dec
sbb
fisubs
daa
mov
mov
lds
bound
pop
cmp
nop
cmc
adc
movsb
leave
sub
mov
jno
out
xlat
or
mov
pop
mov
sub
cld
mov
pop
cmp
aas
adc
sub
daa
in
dec
std
or
inc
ret
dec
and
mov
mov
mov
lods
imul
push
xchg
mov
lods
cmp
repz
push
rcll
push
popa
fnsave
fmul
dec
ss
fwait
lods
lds
push
repz
ss
dec
sub
mov
int
lcall
pop
popf
test
adc
mov
sbb
std
pop
mov
push
and
xor
dec
in
mov
xchg
aas
cmc
mov
dec
imul
fsubl
adc
ds
into
enter
hlt
movsb
leave
pop
cwtl
pop
pop
out
cmp
lcall
in
xchg
sbb
daa
push
out
jp
and
mov
divl
fisubs
data16
es
xchg
in
adc
inc
gs
push
sti
clc
loop
mov
lret
xchg
add
enter
nopl
mov
mov
mov
sti
pop
repz
test
mov
cmp
out
xor
push
push
inc
scas
and
sti
sbb
mov
sub
push
and
push
add
fsubr
ss
iret
cmp
in
xor
in
orb
sbb
mov
jno
lods
sti
in
dec
dec
in
adc
loopne,pt
xchg
dec
ficoms
ja
cmc
sbb
mov
sub
push
mov
push
jne
in
mov
aaa
inc
xor
pop
shrb
popa
push
cmp
pusha
mov
sub
dec
mov
or
faddl
xchg
jl
cmc
in
pop
add
mov
scas
push
out
fbstp
mov
inc
mov
ret
bound
mov
xor
ljmp
mov
pushf
mov
fbstp
mov
mov
movsb
cli
bound
sbb
pusha
push
push
cmp
xor
fstps
arpl
insb
jg
mov
inc
adc
mov
int
ret
iret
data16
adc
xor
popf
stos
aam
mov
clc
sbb
nop
push
sbb
push
jno
cli
sub
pop
fmuls
lahf
inc
cmp
add
dec
inc
sbb
jle
lock
nop
icebp
insb
push
mov
sti
xchg
cmp
xchg
adc
inc
es
dec
push
dec
dec
lods
mov
inc
sub
data16
in
xchg
xchg
dec
cmpsb
nop
mov
or
sti
out
sub
jl,pn
cmc
mov
add
xor
xchg
shrl
pop
sahf
sub
lods
mov
dec
daa
or
adc
or
dec
mov
outsl
andl
xor
mov
add
mov
xor
and
out
pop
xor
ss
sbb
mov
test
dec
adcb
dec
rolb
es
xor
lret
rorl
loope
inc
test
or
fs
daa
mov
lahf
sahf
and
mov
jg
insb
add
lahf
mov
add
pop
jb
pop
mov
xor
jecxz
lock
pop
clc
lods
jae
xor
das
jecxz
fs
mov
daa
adc
insl
popa
mov
inc
jge
push
sub
in
sbb
aam
push
jg
int
dec
fimull
repz
jp
lahf
jge
shll
leave
out
jnp
enter
xorl
sub
pop
test
lds
pop
sbb
ds
xor
jnp
sbb
adc
adc
inc
out
lahf
push
mov
jle
popa
jle
aam
ljmp
test
pop
repz
pop
adc
hlt
xchg
clc
pop
aam
dec
or
jle
mov
jno
mov
cmc
das
loopne
jne
pop
or
xchg
aas
mov
xor
pop
std
das
xchg
rcrl
incb
sahf
xchg
into
test
fmul
out
aad
pusha
and
incb
popa
xchg
push
jno
fdivrp
or
inc
test
push
push
pushf
pop
dec
std
add
rcll
in
popf
pop
inc
push
in
mov
push
das
mov
andl
aas
pop
clc
or
mov
cmpsb
fildl
std
mov
cmpsl
sub
xlat
cmc
and
pop
testb
sub
jmp
mov
sbb
shr
add
ret
fistpll
push
xchg
mov
xchg
mov
inc
movsb
test
shrb
jl
stc
push
mov
and
rcr
cmp
outsl
sbb
imul
pushf
cwtl
cmp
mov
cmpsb
sbb
ss
cmp
shlb
popf
add
mov
xchg
xor
mov
adc
out
cwtl
movsb
dec
mov
gs
shlb
inc
dec
pushf
sub
outsb
aad
test
fwait
dec
pop
sub
push
daa
loope
adcl
inc
mov
stos
cs
rcrb
or
imul
jnp
mov
test
or
addr16
aas
add
test
in
push
jae
loope
arpl
aad
inc
sub
adc
pusha
outsl
outsl
mov
mov
ret
jne
das
test
enter
push
cmc
or
xchg
xchg
scas
enter
aaa
call
int
icebp
adc
bound
add
add
mov
rclb
add
dec
roll
das
mov
scas
sub
rol
sub
out
ss
rclb
rorl
repz
pop
fbstp
fwait
xchg
pop
int
int
lds
mov
cmpsb
or
add
or
pop
insb
pop
dec
pop
fwait
mov
icebp
scas
push
int
xor
rorb
add
sbb
pop
push
sub
dec
cmc
mov
cmpl
daa
movsl
mov
xlat
stc
mov
sub
and
xor
push
ror
pop
push
xor
test
ror
add
mov
hlt
dec
fbld
int
pushf
push
mov
inc
aaa
arpl
and
test
mov
sbb
add
outsb
mov
xchg
and
negl
out
sbb
shll
mov
fistps
paddq
outsb
xchg
jp
mov
test
jo
inc
iret
mov
gs
stc
inc
jne
rclb
lds
inc
icebp
lds
push
outsb
sbbl
lahf
xor
adc
cmp
mov
sbb
push
push
pop
cli
cmp
inc
fprem
jne
cmp
roll
adc
data16
sub
adc
out
xor
pushf
jbe
ljmp
or
in
adc
out
imul
fsubrl
data16
push
push
adc
imul
repnz
ror
jg
add
lcall
and
aas
or
cmp
pop
xlat
lcall
out
in
mov
cmp
xor
and
std
mov
and
mov
xor
xchg
mov
cltd
rcll
sbb
in
inc
mul
xchg
sub
out
lret
sbb
xor
add
xor
out
std
sbbl
xor
shl
pushf
out
push
daa
int3
push
imul
aad
insl
popa
mov
inc
inc
inc
fisubs
xor
push
stc
jle
inc
rolb
fiaddl
adc
xor
in
or
fsubs
outsb
loopne
ret
movsl
mov
mov
xor
adc
cmp
pushf
cmp
pop
inc
fimuls
sbb
push
pop
gs
iret
aas
incl
pop
mov
lret
in
sub
lock
sti
pop
mov
jnp
push
enter
subb
xor
mov
popl
sbbl
or
jp
dec
loop
roll
lret
test
scas
fnsave
inc
icebp
sbb
lea
daa
xor
mov
addb
pop
mov
lret
inc
les
sbb
jge
mov
push
lds
inc
popf
inc
xchg
mov
jmp
ljmp
jne
aad
or
repz
xchg
scas
jl
mov
dec
push
push
rorb
insb
aad
push
add
or
mov
push
push
add
lods
data16
sahf
outsl
cli
add
mov
push
push
fdivrp
mov
ss
or
aaa
push
popa
pop
test
lds
cmp
ret
cmc
push
iret
popl
ss
lret
add
xchg
das
in
gs
stos
xor
pusha
push
jne
shl
cmp
push
iret
loope
xchg
ret
ljmp
mov
cmc
sbb
mov
loope
mov
pop
ret
call
mov
or
lea
adc
js
sub
jle
testl
xor
add
in
pop
sti
sahf
cmp
loopne
iret
push
dec
movsl
push
add
daa
pushf
cli
jo
mov
stos
push
mov
or
push
cmpsl
out
push
mov
cmpsb
cli
xchg
pop
inc
hlt
cli
stc
or
mov
mov
push
dec
pusha
push
lahf
mov
pop
push
sub
stc
je
jg
push
push
dec
fstpt
enter
outsb
adc
sti
inc
dec
mov
enter
es
cmp
push
repz
inc
out
lods
xchg
push
es
daa
inc
mov
cmp
and
stos
xchg
daa
movsl
mov
scas
jg
adc
sbb
ja
mov
into
and
mov
aam
das
int
mov
lret
jmp
push
mov
in
out
sbbb
push
outsl
loop
cld
fnstsw
pop
out
cltd
pop
push
mov
mov
fdivrl
loopne
mov
repz
insl
stos
inc
lahf
outsl
daa
jle
jno
or
mov
movsb
out
stc
je
cmpsb
imul
insl
fs
push
and
gs
jg
xor
fwait
aam
push
psubw
addr16
add
outsl
ds
inc
add
push
dec
and
in
sti
sub
adc
loopne
jmp
cmpsl
xchg
ja
pop
xchg
dec
jne
push
ljmp
and
mov
test
dec
mov
xor
jmp
mov
lock
addr16
sub
pop
lret
dec
sub
adc
xchg
cs
dec
jae
xor
inc
fmull
jge
mov
imul
loope
lea
jle
or
cltd
sahf
lods
xorb
dec
lods
sub
std
rcrl
push
fidivrs
int3
cmpl
incl
mov
fimuls
push
sti
mov
mov
movsl
aad
sbb
dec
inc
adc
notl
pop
movsb
jg
or
inc
rcr
in
clc
inc
icebp
jecxz
stos
mov
cld
dec
stc
push
cmc
dec
lods
inc
mov
push
xor
adcb
aam
repz
and
pop
icebp
adc
xchg
xor
mov
ffreep
bound
push
leave
push
leave
out
subl
call
sub
push
outsl
pop
inc
push
icebp
mov
flds
js
push
add
lret
das
push
add
sbbb
lods
jns
in
mov
xchg
nop
pop
push
push
cmp
subb
cs
jl
xchg
mov
jo
mov
imul
pop
bound
sbb
ficompl
dec
and
xor
jle
pop
popf
fbstp
fsubrs
das
or
cld
push
xchg
and
test
jbe
pop
das
inc
sub
jg
pop
push
mov
sbbb
scas
out
shll
xchg
test
cltd
push
jne
push
outsb
push
lea
or
and
fs
mov
test
test
or
pop
shl
jecxz
jecxz
xor
cwtl
fwait
xorb
pop
mov
sti
sbb
or
jnp
test
dec
bound
add
jne
xlat
and
cli
cmpsb
add
mov
dec
sbb
jne
incl
outsl
or
xchg
jbe
das
or
cwtl
fisubs
ret
cld
pop
mov
jo
shlb
fstpt
shll
fldcw
pop
push
lods
jmp
cmp
stos
mov
inc
fwait
cmpsl
jle
jp
mov
push
and
lds
mov
xor
adc
cs
jnp
mov
iret
jns
imul
pop
cld
aas
xlat
mov
ja
push
jbe
and
sahf
xchg
inc
push
pop
jl
jo
repz
out
add
inc
mov
push
lret
or
cld
cs
test
leave
jbe
or
mov
stc
lahf
in
das
aas
or
pop
xor
jle
add
sub
cmp
mov
ss
mov
push
cmp
push
jne
pop
mov
pop
sub
out
jl
inc
ds
enter
popa
ljmp
vpsrld
xchg
or
imul
outsb
test
cmp
jne
mov
sarb
dec
mov
and
ret
les
push
repnz
nop
in
lret
jl
jo
es
push
fs
inc
and
out
rorb
pop
and
into
mov
sub
in
shrl
add
dec
add
out
mov
pop
loope
daa
ljmp
in
aam
inc
jno
cmc
or
lret
mov
jecxz
mov
jnp
std
push
sarb
aad
xchg
sub
mov
sbb
xor
icebp
rcrl
pop
mov
lock
fucomi
mov
cmp
mov
adc
lahf
mov
sahf
js
xor
test
inc
mov
insb
jl
out
push
jae
mov
dec
jb
pop
mov
dec
pop
insb
fdivs
mov
cli
test
mov
adc
xorl
xor
les
fwait
adc
cmp
lods
in
push
lock
lock
scas
mov
daa
add
ljmp
jb
ds
jae
insl
xchg
aam
mov
fidivs
daa
jo
imul
xchg
adc
rcll
xchg
stc
push
fbld
jp
adc
aas
orl
adc
push
mov
shll
add
sbbl
cmp
sub
sbbl
jecxz
inc
fcomps
mov
aaa
orb
xor
inc
dec
sarb
subb
cmpsl
mov
sbb
xchg
sub
leave
loop
mov
fiadds
mov
subb
jp
inc
add
xchg
mov
fsubl
les
popf
add
mov
addb
outsl
push
int
pushf
cli
lea
sbb
lahf
clc
pop
daa
mov
mov
int
pcmpgtb
sub
movsl
mov
xchg
or
hlt
mov
je
push
pop
test
mov
pop
ret
int3
aam
add
ret
negl
mov
mov
lahf
lods
cmpsl
dec
mov
pushf
push
in
int
push
jne
movsb
out
fwait
cwtl
stc
xchg
adc
xchg
xchg
push
sbb
sti
mov
and
pop
jno
sbb
es
adc
or
bound
scas
push
push
mov
ret
mov
mov
sbb
nop
push
insb
notrack
push
data16
int3
mov
ljmp
dec
pusha
add
xor
inc
add
loopne
mov
sbb
movsb
xchg
jbe
mov
and
icebp
insb
jecxz
aaa
into
loope
int3
addr16
into
lret
push
jne
jb
icebp
push
shlb
cmp
xchg
fldenv
repnz
orl
jo
mov
jo
scas
inc
sbb
add
pusha
pushf
mov
jb
stos
lcall
sub
andb
std
cmp
mov
mov
lock
xchg
aad
pop
mov
push
dec
daa
jecxz
ficoms
repz
mov
mov
pop
push
in
sbb
dec
dec
or
sub
movsl
ljmp
insb
ret
call
sub
mov
add
lret
pop
rcr
leave
mov
into
mov
cmp
imul
shl
and
sub
ret
and
mov
pop
jnp
sbb
pop
pop
adc
sub
sbb
xchg
icebp
cmp
jmp
aaa
cmp
call
jg
fistps
leave
mov
dec
or
cmp
popf
pop
xchg
mulb
outsb
movsl
push
shrd
cs
jge
xor
int
sbb
xchg
ss
stos
inc
out
cmp
add
loope
mov
in
sahf
ds
fldcw
and
inc
mov
or
sub
dec
and
imul
es
push
adc
scas
stc
dec
mov
ja
jb
cmpsl
xchg
shrb
inc
mov
enter
test
sbb
sbb
lods
iret
push
test
pop
movsl
pushf
jecxz
push
sarl
mov
jp
call
mov
push
sahf
adc
sbbl
lods
inc
pop
hlt
xor
inc
loop
outsl
aas
cmpb
inc
mov
out
bound
dec
cli
mov
add
aam
sbb
outsb
sub
mov
ret
fdivr
inc
or
jge
lock
push
out
dec
stos
pop
mov
mov
pusha
test
add
lods
dec
int
dec
jbe
xchg
cmp
mov
lret
mov
xchg
and
fiaddl
cmpsb
or
xor
xchg
mov
cmp
ret
and
xlat
or
mov
imul
mov
out
test
jnp
adc
xchg
add
mov
mov
jb
es
ret
call
dec
adc
test
adc
jp
sbb
popa
push
xor
sbb
push
loopne
dec
push
daa
dec
filds
nop
imul
out
lods
and
test
loop,pt
divl
inc
and
mov
adc
cmp
mov
cmp
push
pop
jnp
xchg
lret
mov
and
scas
in
xchg
dec
mov
cmpsl
insw
pop
lret
ret
xchg
or
fwait
in
aad
fcoml
mov
pushf
push
inc
add
lcall
in
fwait
mov
jg
into
popf
and
inc
lock
xchg
adc
mov
repz
and
dec
ljmp
jae
mov
mov
lcall
lcall
push
pop
scas
test
stos
js
jg
push
sub
sub
pushf
cmp
clc
xchg
dec
cmp
cmpsl
ret
or
adc
mov
pop
xlat
sbb
mov
adc
cmp
insl
xchg
addl
sbb
lock
call
aam
ss
loope
test
xor
in
xchg
push
test
rorl
outsb
cli
lcall
sahf
or
nop
mov
xor
test
fwait
je
xchg
push
cmp
mov
ret
shl
xor
lret
sub
xchg
xor
pop
scas
push
cltd
stos
xor
xchg
xor
add
xor
mov
mov
jp
test
and
lock
xor
pop
push
mov
xchg
adc
and
stc
push
cli
hlt
stos
nop
cs
mov
sbb
cmp
xor
fwait
sti
add
inc
push
xor
adc
cld
push
test
fidivl
sti
push
sub
insb
stos
mov
test
push
fwait
sub
gs
fwait
add
xchg
fstpl
adc
pop
outsl
stc
mov
adc
or
cmpl
push
lret
jl
or
test
std
push
mov
dec
pop
out
xchg
sub
adc
rcll
shll
dec
push
xlat
cmp
pop
pop
imul
jae
call
les
jnp
adc
pop
dec
pop
aad
jle
pop
adc
je
popf
stos
mov
push
xchg
pop
cmp
lcall
push
fldcw
scas
pop
add
inc
add
sub
shrl
mov
cmovae
jge
cli
or
push
gs
aad
adc
hlt
inc
sbb
cmpsl
stos
test
les
sub
mov
pop
xchg
jae
cwtl
lods
es
push
imul
or
ja
data16
xor
and
movsl
enter
lahf
ret
jae
shll
sub
pop
or
push
mov
outsb
push
pop
push
or
xlat
fnop
pop
pop
dec
add
adc
outsl
test
loop
mov
jg
repz
dec
xor
nopl
pusha
fsubrp
addr16
fbstp
add
repz
jle
mov
mov
xor
into
jl
jg
xchg
test
pop
push
int
test
xchg
movsb
adc
dec
sub
popl
mov
icebp
jmp
adc
and
mov
push
xchg
mov
lcall
and
sub
xchg
xor
xchg
imul
inc
sti
scas
aam
xor
push
lods
and
mov
bound
movsl
int
out
pusha
test
mov
in
jnp
xor
daa
popa
xchg
xchg
lret
sarb
iret
xchg
jge
add
cltd
repnz
cmp
fisttps
and
dec
inc
pop
imul
sti
and
cmp
pop
addr16
nop
js
lds
fwait
sarl
repz
bound
xchg
shll
out
aad
push
xchg
or
push
sar
repz
dec
cwtl
mov
xchg
dec
lea
pop
push
daa
or
sbb
fldenv
push
enter
mov
xchg
and
sub
pop
data16
xchg
sub
mov
test
jl
pop
call
in
cltd
push
jmp
clc
jge
int3
ret
in
adc
popa
sub
je
jp
jp
jp
xchg
push
mov
icebp
pop
test
cli
sti
ds
xor
enter
add
cmp
ret
mov
popf
sub
xor
cwtl
mov
xchg
arpl
push
in
test
popf
sahf
inc
or
repnz
iret
movsb
stos
xchg
insb
push
stos
adc
inc
fs
in
scas
out
loop
cmpsl
enter
pop
stc
push
jmp
mov
add
mov
push
or
enter
adc
lcall
mov
xlat
icebp
mov
sub
ret
lcall
or
lock
test
daa
shll
pop
and
stos
jmp
test
stos
cli
jno
mov
xor
out
popf
cmp
aad
out
rcrl
adc
int
cltd
xor
pop
push
cmpsb
sbb
adc
pusha
pushf
mov
lds
sbb
inc
mov
iret
insb
mulb
repz
shrl
in
lods
mov
sbb
cmp
and
and
in
xor
xorl
out
cltd
sbb
mov
mov
loop
sub
jbe
adc
and
jecxz
push
mov
fistps
cmp
jbe
sbb
jns
sub
repz
cmp
lds
in
sti
cltd
dec
in
push
shrl
mov
adc
adc
push
add
pop
incl
push
xchg
in
pop
push
add
insl
push
fnsave
fisttps
sahf
rclb
cwtl
nop
out
xor
jge
mov
ljmp
add
jno
imul
inc
pop
cwtl
outsl
ret
pop
addb
frstor
jno
lcall
adc
pop
push
mov
sub
repz
adcb
loop
or
mov
ss
cmc
mov
sbb
inc
or
and
mov
loopne
push
mov
clc
pop
push
xchg
daa
inc
mov
scas
mov
ss
addr16
mov
sub
mov
outsl
jl
mov
rcrb
xchg
dec
and
aad
lock
stos
inc
mov
jns
leave
push
mov
push
fidivrl
cmp
jl
aas
cmpsl
mov
add
popf
sbb
mov
mov
test
push
jo
fwait
fwait
jne
js
test
cmp
xchg
stc
cmpsl
push
das
rcrl
push
movsl
mov
cld
dec
in
mov
cmp
add
xchg
cmc
and
pop
test
inc
sbb
je
pop
loop
andb
push
sarb
int
xor
lahf
pop
xor
cli
adc
out
int
rcrb
lret
addl
mov
ss
aam
inc
sarl
lods
out
sbb
dec
cmpsb
push
xor
outsb
movsl
add
insb
adc
dec
cwtl
insb
movsl
dec
addr16
mov
outsb
xor
pop
lret
inc
data16
cmp
lods
inc
aas
inc
lods
in
pushf
jg
cmovo
jp
cli
mov
push
or
inc
sbb
mov
fstps
sbbb
ss
daa
addr16
sti
sbb
sbb
xor
mov
cmp
loope
push
cmp
setns
and
in
outsb
jae
jg
shrl
rcl
push
test
cltd
jns
movsl
sub
xor
ja
dec
cmpsb
sahf
fdivr
lock
popl
hlt
dec
sarl
xor
in
jb
addr16
dec
sbb
hlt
repz
xchg
push
sub
cltd
and
iret
loopne
pop
icebp
fcomip
jns
pop
lret
js
jb
out
xchg
xor
sbb
fistps
fsubr
and
mov
push
lock
inc
adc
mov
sbb
pop
arpl
jecxz
lock
lahf
mov
data16
cmp
pop
pusha
in
fisubl
cmpsl
ret
movsl
sti
push
les
mov
jbe
dec
pop
imul
clc
popf
clc
push
std
sub
mov
pop
lds
mov
jae
and
leave
pusha
xor
push
cli
inc
sbb
jle
lods
rorl
jecxz
or
jne
push
aam
dec
mov
mov
in
pusha
cli
lret
sub
xchg
scas
test
lods
ds
mov
out
into
add
jae
ja
mov
sub
je
pop
inc
mov
adc
xor
add
adc
mov
jno
nop
out
in
dec
lea
incb
repnz
cmp
movsb
imul
push
hlt
lcall
leave
lods
cs
clc
sbb
mov
mov
jecxz
push
loope
inc
sbb
mov
or
inc
inc
fildll
push
push
ljmp
add
in
sub
dec
idiv
mov
ljmp
pop
call
addl
icebp
xchg
mov
jecxz
or
xchg
rcll
scas
jns
mov
mov
in
dec
push
and
outsb
imul
stos
cmp
sbb
cwtl
pop
ja
dec
shld
xchg
jnp
jmp
push
stos
out
mov
mov
push
push
or
mov
cld
inc
or
inc
fidivs
pop
adc
insl
or
dec
call
stos
jne
jns
mov
outsl
lock
lcall
lahf
add
jl
pop
adc
mov
pop
movsb
xor
cwtl
xchg
pop
xor
and
rcl
hlt
mov
xor
mov
movsl
jp
xlat
jno
sbb
mov
jge
jecxz
and
jmp
in
mov
lcall
dec
and
leave
ror
into
jne
negb
subl
test
mov
adc
mov
out
sub
xchg
lahf
divl
pop
in
push
pop
sahf
inc
push
add
xorl
xchg
jo
lcall
mov
clc
iret
lds
push
lock
mov
ja
jae
lcall
roll
dec
in
jnp
sub
push
aam
cld
shrl
pop
mov
mov
hlt
xchg
ds
lret
fcoms
fisttpll
push
add
fldenv
mov
popf
rcll
pusha
xor
jmp
add
sub
roll
mov
into
cmp
jns
cwtl
xchg
mov
sbb
cld
scas
adc
mov
or
xor
or
ljmp
daa
test
out
inc
mov
shr
sub
cli
dec
jecxz
outsl
cmc
adc
negl
je
sub
and
and
sbbl
xchg
cli
sahf
loope
test
fidivrl
call
mov
mov
sbb
sub
aam
sub
out
mov
dec
jne
imul
adc
ds
jns
mov
xchg
xchg
jmp
inc
jo
pushf
jg
mov
push
jecxz
fs
xlat
test
mov
mov
pop
aam
push
jo
inc
sub
pusha
inc
ret
insb
incl
dec
jo
fistl
clc
push
ficompl
xor
jg
nop
cmp
sarl
out
and
std
mov
clc
mov
inc
jg
inc
xchg
fldenv
fcomps
pop
hlt
rolb
aad
icebp
orl
dec
and
repz
adc
je
dec
mov
mov
push
in
imul
cmpsl
pop
push
inc
repnz
addr16
imul
stc
aas
jmp
jmp
jnp
sub
mov
fwait
sub
cmp
loope
std
mov
sti
push
mov
imul
push
popl
in
cmp
sti
jmp
or
jns
cmp
ss
stos
inc
test
jge
addr16
loop
cmp
rol
out
adcb
pop
sbb
mov
xchg
lock
loop
xchg
sub
dec
fdivr
test
lods
and
adc
mov
leave
push
mov
iret
bound
sbb
adc
fdivs
rcll
mov
dec
mov
ror
jle
inc
jnp
mov
mov
sub
push
xor
imul
or
stc
test
cmp
jg
pop
lcall
xchg
dec
dec
ret
repz
les
mov
and
je
fistps
or
dec
ret
jbe
sti
hlt
out
mov
mov
xor
fwait
test
sub
lret
push
jge
ja
int3
out
jle
loop
adc
fwait
xchg
js
arpl
addr16
je
sub
aas
push
cmp
sbb
adc
dec
out
mov
les
movsb
jmp
lods
jle
fisubs
jno
push
shr
stc
mov
push
sahf
cld
ret
mov
jp
jl
cmp
sbb
arpl
rclb
lahf
arpl
ds
aaa
out
je
mov
pop
fcomp
push
cmpsb
mov
mov
xor
dec
and
push
rorl
insb
idivb
push
sub
test
stos
mov
xchg
jp
stos
stos
cmp
xor
or
in
and
push
jecxz
sub
inc
aaa
loop
jae
dec
mov
cltd
js
push
lea
lcall
aas
inc
and
mov
fildll
jp
loopne
mov
push
in
add
in
fs
pop
mov
mov
mov
insl
insb
scas
jge
aas
scas
test
inc
cwtl
scas
inc
imul
sbb
sarl
inc
and
lea
xchg
mov
cmpsb
stos
mov
lock
leave
loope
mov
xchg
push
push
movsb
cmp
std
daa
mov
pop
hlt
pop
cmp
sbb
jp
jmp
aaa
cwtl
push
imul
gs
int3
pop
out
sub
dec
stos
xchg
call
fistl
rcrb
testb
mov
adcl
mov
rorb
leave
mov
and
sub
xor
pop
xchg
ret
inc
mov
adcl
fildl
mov
dec
mov
push
sahf
push
jno
and
pushf
or
das
pop
cmp
clc
inc
jae
add
test
jle
push
dec
loop
jno
sbb
mov
aad
dec
leave
adc
shrb
push
pop
jle
das
pop
xor
sbb
bnd
xor
add
mov
test
inc
outsl
push
sbb
ret
pop
inc
dec
mov
xchg
mov
inc
or
jbe
mov
stc
movsb
or
je
inc
nop
mov
lcall
shl
popa
mov
fiaddl
ds
pop
inc
add
adcb
xor
scas
movsl
adc
in
std
pop
je
cld
pop
imul
stos
xor
ficoml
inc
mov
fstps
mov
xchg
je
repz
mov
sub
sbb
xchg
smsw
dec
popa
xchg
lahf
xchg
xchg
ds
mov
stos
or
insl
test
inc
out
addr16
test
mov
pop
push
push
vpmulhuw
pop
loop
fbld
data16
mov
mov
mov
and
shrl
cwtl
xchg
xor
add
mov
sbb
sbbb
mov
push
ljmp
pushf
ds
mov
inc
xchg
in
repz
inc
in
test
ret
add
sub
arpl
dec
mov
in
mov
pop
mov
into
gs
lret
addr16
lret
mov
xchg
inc
dec
movsb
xchg
jge
sbb
inc
push
fwait
dec
test
scas
rclb
loope
mov
repz
inc
fistpll
sbb
imull
pop
icebp
lods
mov
sub
lret
or
mov
pop
cwtl
out
lcall
jb
xlat
popf
fs
xchg
mull
repnz
clc
push
fidivs
mull
fdivl
mov
repz
out
dec
and
lahf
pushf
popa
cld
mov
adc
aaa
repnz
adcl
add
adcb
push
decl
jns
xchg
mov
int3
adc
in
popa
test
in
pusha
xor
jo
fistpl
xor
cmp
mov
repnz
xchg
mov
and
mov
out
jbe
pop
adc
js
lods
ljmp
xchg
aam
fdiv
jecxz
movsl
cmp
add
lahf
mov
jp
cmp
dec
shl
dec
divb
daa
aaa
stos
pushf
arpl
pop
ss
popa
hlt
cmp
cmp
fimull
add
pop
out
push
fs
push
push
sbb
add
jp
lods
out
cmp
lock
bound
subl
test
mov
fldl
cmp
xchg
mov
out
loope
jl
mov
mov
jl
jno
xchg
jle
stc
scas
push
loopne
jle
inc
inc
in
ret
dec
sbb
jmp
sti
ret
outsl
loopne
addr16
sub
pop
fists
xlat
push
mov
xchg
repnz
mov
aad
add
or
mov
pop
and
mov
aaa
cmpsb
mov
in
or
jo
test
ss
repz
imul
aaa
out
cmp
packssdw
test
popa
jo
sbb
mov
gs
dec
push
hlt
lcall
adc
out
nop
or
ret
sub
in
lcall
cwtl
decb
and
push
lret
push
sbb
push
dec
and
insb
jle
ljmp
pop
movsb
and
aad
xchg
stc
pop
and
sbb
mov
enter
loop
jg
cltd
mov
mov
push
adc
jmp
or
test
dec
stc
jno
sub
add
cmc
repnz
setge
leave
cltd
gs
arpl
mov
mov
out
out
inc
sub
mov
fcompl
stc
inc
add
cmpsb
cmp
lahf
stos
push
jne
pop
mov
not
sbb
pop
out
jns
sahf
jl
mov
jno
pop
movb
hlt
in
xor
pop
movsb
and
dec
addr16
popa
scas
dec
in
mov
mov
arpl
ret
ds
or
lret
and
inc
pop
test
mov
daa
push
call
xchg
mov
inc
jno
mov
dec
cmp
mov
in
pop
aam
mov
test
insb
mov
addr16
dec
mov
jbe
jo
mov
pushf
fwait
sti
push
int
jmp
ja
std
lret
das
into
std
and
out
lahf
mov
lahf
popf
outsl
jmp
rcl
gs
scas
out
xchg
js
pop
cmp
add
xchg
dec
mov
sbb
add
sub
mov
rol
jg
mov
jl
sub
fnsave
mov
nopl
lret
jp
jae
mov
je
inc
xor
aas
xchg
push
or
mov
mov
out
add
scas
int3
jo
scas
xchg
sub
mov
aaa
push
mov
mov
sbb
xor
push
dec
dec
popa
jbe
jo
mov
mov
and
cmp
mov
decl
cld
adc
ss
pop
setl
aaa
cmpsb
stc
pop
insl
cmp
cli
mov
scas
aaa
xchg
pop
inc
movsb
add
xchg
movb
xchg
mov
aam
insl
loopne
andl
add
adc
or
lods
dec
shll
out
sti
push
aas
idivb
stos
sbb
push
dec
or
bound
inc
aad
repz
decb
mov
push
int3
scas
aas
jae
jno
pop
xorb
popf
jle
nop
xchg
fcoml
push
icebp
xchg
js
or
dec
popf
jne
cmpsb
inc
inc
pop
and
xor
xor
adc
push
xchg
int
bnd
add
pop
inc
push
or
pop
pushf
jmp
sahf
repz
ss
mov
cmovo
fucomp
pop
add
jl
xor
aas
arpl
call
mov
and
dec
in
cli
jmp
cwtl
pop
push
out
pusha
pop
jne
mov
push
fcoml
push
jnp
pop
in
and
sub
imul
xchg
outsb
xor
and
pop
push
xchg
jle
ret
outsb
lods
xchg
mov
pop
cs
dec
ficompl
mov
and
outsl
jl
movhps
mov
inc
pop
cltd
int3
fs
sti
mov
dec
out
cmp
shrl
loopne
outsb
xorl
push
xlat
shrl
popa
xor
iret
loop
pop
xlat
arpl
out
loop
in
pusha
aad
jne
cmc
loop
add
xlat
nop
pop
push
xor
cmpl
pop
icebp
test
xchg
add
fld
fwait
or
add
orb
mulb
stos
and
loop
mov
or
mov
sub
bound
mov
mov
push
sti
push
mov
inc
mov
ds
dec
repz
and
mov
enter
push
mov
mov
add
adc
pop
imul
movb
mov
cmpsl
sarb
inc
jmp
jecxz
inc
inc
dec
mov
mov
xchg
dec
mov
hlt
cmpsb
adc
adc
out
xchg
testb
faddl
jg
sub
popl
mov
lods
jo
mov
ficomps
xchg
fmuls
das
js
add
clc
cmp
cmp
jne
call
pop
dec
repnz
fsubrs
leave
fstps
and
mov
ret
in
daa
mov
xor
fsubl
pop
insb
mov
scas
mov
push
imul
push
push
inc
lods
xchg
mov
addr16
subb
ja
loop
xor
lods
data16
pop
mov
in
mov
sbb
das
out
cmc
mov
dec
movsl
push
add
mov
imul
xchg
xchg
xchg
mov
idivl
cmc
or
test
fdivs
andb
fdivrs
pop
pop
cmc
pop
sbb
jl
popf
lods
ljmp
pushf
dec
lret
mov
lret
fnstsw
mov
push
je
ja
bound
or
sub
push
insl
sti
and
stc
jge
jecxz
sbb
xchg
jnp
or
cs
in
jno
mov
pop
push
shll
dec
inc
pusha
out
xchg
addr16
jbe
xchg
mov
add
fwait
cmp
add
cmpsb
adcb
call
xchg
fisubl
pop
mov
stos
fsubrs
insb
sahf
or
cmp
call
lea
adc
jl
sbb
std
push
int3
fidivs
lret
pushf
sbb
push
or
loop
pop
pop
ds
xchg
stos
sbb
repnz
popa
pop
daa
sbb
adcl
push
icebp
jecxz
jb
sbb
mov
push
jns
push
sti
fistpl
subl
es
cmp
inc
jmp
cwtl
fstl
mov
lods
push
es
xor
xor
test
cltd
mov
dec
dec
dec
test
cmp
dec
and
jge
push
pop
fwait
push
inc
movsl
and
xchg
mov
pop
pop
repz
ret
fucomip
pop
add
imul
jmp
inc
out
or
out
lret
jo
add
popf
dec
mov
push
addl
repnz
test
dec
and
adc
int
fdivl
push
dec
cmp
pushf
push
aad
xlat
outsl
mov
add
out
xchg
test
test
xor
sub
out
and
mov
mov
dec
inc
pop
and
test
cli
dec
inc
pusha
xor
lds
sub
mov
xchg
jecxz
loop
mov
jbe
lret
xchg
data16
ret
hlt
pop
sub
add
mov
int3
stos
jns
push
rclb
outsb
xchg
xor
pop
fdivl
ficoml
or
jge
or
cmpsb
cmp
jno
repz
clc
xchg
in
jl
xor
lock
mov
xchg
rolb
xor
cmp
cmp
sbb
arpl
dec
movsl
jno
push
rolb
lock
xchg
imul
lock
outsb
push
ljmp
jmp
notb
nop
dec
std
negl
mov
fists
inc
and
adc
lds
or
sbb
sub
mov
sbb
fmul
pop
les
into
repz
ret
inc
outsb
nop
sub
xchg
mov
lahf
data16
and
pop
sbbb
ljmp
sub
je
dec
xor
jmp
std
mov
sbb
add
push
fwait
mov
push
and
sahf
clc
inc
cmpl
xchg
test
popa
jnp
shl
adc
push
inc
int
fsubrl
in
hlt
jo
xor
rcll
jnp
cwtl
sub
pop
xchg
fwait
lock
and
push
fstps
subb
outsl
sar
shll
rorb
out
jmp
cmpsl
add
scas
lock
outsl
pop
dec
mov
or
push
add
jne
push
fsubl
lahf
mul
sub
mov
xchg
add
push
mov
test
fidivs
adc
pop
adc
xchg
lods
inc
mov
add
xor
xchg
or
mov
jmp
mov
ficoml
addb
and
add
rcl
sub
mov
push
andl
jle
or
or
int
push
add
int
orl
inc
lods
imul
dec
fbstp
aaa
dec
andb
out
enter
mov
ret
js
rcrl
push
push
mov
add
jbe
mov
ja
shlb
in
es
bound
fcomp
or
cmp
pop
or
test
sub
pop
and
xchg
aaa
mov
mov
sub
popf
stc
jb
and
or
movsl
stos
jmp
xchg
dec
pusha
testl
fisubl
jle
sbb
push
sarb
adc
fcompl
aad
inc
push
jne
aad
addr16
mov
pop
scas
xor
push
adc
inc
js
xchg
sub
int
push
out
int
js
jno
jne
sub
jp
hlt
fucomip
and
rcrl
pusha
add
sub
xchg
sbb
dec
loopne
jb
pop
sbb
mov
adc
or
in
out
push
sub
nop
inc
jle
xor
or
push
test
aas
fdivp
mov
xor
roll
fwait
cltd
push
and
in
xor
pop
rol
movl
fisttpl
mov
into
and
jp
fbstp
cltd
jne
fwait
jecxz
pop
mov
xor
es
cmp
mov
inc
pop
lock
movsb
es
std
jg
pop
scas
clc
mov
adc
jp
mov
jb
decl
lahf
xchg
sbb
lods
outsb
fwait
pop
arpl
sbb
pop
mov
jmp
mov
sti
inc
xor
xchg
popa
pop
xor
iret
push
sbb
mov
stos
aaa
mov
mov
or
dec
cmp
inc
mov
sbb
vmovhlps
push
push
jb
aaa
into
adc
iret
xorl
daa
test
lods
jmp
inc
out
cli
push
lock
ljmp
pushf
mov
enter
dec
stc
cmpb
or
leave
lahf
cs
mov
inc
jne
add
dec
mov
adcl
dec
outsb
add
xlat
in
adc
sbb
xchg
push
lahf
or
and
inc
movsl
fwait
or
xchg
ret
out
push
push
push
imul
je
dec
dec
or
adc
add
test
rolb
mov
out
dec
jl
jne
mov
ja
aam
jnp
ds
push
and
dec
jno
test
nop
xchg
aam
lahf
mov
mov
push
xchg
ja
mov
movsb
bnd
jae
pop
sbb
pop
js
cmp
pop
xchg
es
mov
xchg
adc
jmp
fidivrl
or
fimull
jns
fs
fstpt
mov
pop
cmp
mov
shll
cld
dec
jbe
pop
mov
cmp
out
mov
je
sub
nop
sub
push
inc
lods
test
repz
inc
fsubrl
into
enter
fldenv
inc
push
cmp
pop
jne
imul
stos
cmp
shll
inc
ljmp
pop
scas
into
ret
sub
push
mov
cmp
clc
and
lods
hlt
dec
push
es
push
sbb
leave
mov
sbbb
xchg
in
and
inc
sysenter
mov
js
adc
xchg
xchg
outsl
sbb
mov
push
ret
imul
jge
mov
add
jmp
inc
out
jmp
mov
dec
pop
mov
inc
xor
in
pop
lock
imul
sbb
xor
xor
lods
int3
lods
push
lret
and
lahf
cmpsb
sbb
cmc
xchg
stc
repz
popa
fsubr
mov
mov
xchg
fnstcw
xchg
dec
leave
push
mov
add
testl
jmp
dec
addr16
pop
enter
rcrl
test
xchg
jg
je
jnp
out
hlt
stc
popa
sub
jb
ret
hlt
cmp
xor
es
shrl
repz
and
mov
push
mov
push
or
fadd
ret
std
out
lea
loope
inc
gs
jne
xchg
cmpsl
ds
sub
je
mov
scas
out
push
push
push
in
xorl
or
pop
or
cmp
cwtl
sub
ret
ds
lcall
sbb
nop
gs
jmp
jmp
dec
mov
push
test
loope
jbe
inc
leave
push
fwait
nop
daa
dec
mov
fisttpl
or
cmp
lds
and
pop
sub
mov
mov
push
jnp
pop
and
in
xor
push
inc
pop
mov
adc
aad
aad
movsb
rcrb
std
scas
sahf
out
fimuls
repnz
mov
loop,pt
adc
or
lods
pop
jo
lds
pop
dec
fldcw
imul
dec
ficoml
je
sbb
ds
jno
aad
or
rcrl
sbb
shll
sbb
adc
lods
test
add
adc
or
sbb
cli
pop
pop
repnz
out
inc
inc
cmc
jns
sti
jmp
push
test
adc
imul
ret
inc
clc
and
insl
in
jl
adc
pop
scas
out
sub
mov
mov
pop
xor
sub
lods
lahf
cmp
out
push
cli
sbb
sub
lret
mov
sbb
popf
gs
jb
sub
or
cltd
das
adc
jmp
orb
push
insl
or
xor
push
cmpsl
dec
filds
mov
fs
xchg
andb
loopne
notl
sub
scas
sub
pop
push
xor
pop
xchg
ss
int
ljmp
mov
pop
xchg
fldcw
ds
sbb
cmc
mov
pop
inc
scas
dec
pop
aad
push
lods
inc
clc
das
test
inc
movsb
repnz
stos
jecxz
push
icebp
clc
mov
jae
cmc
mov
inc
jl
jbe
pop
cmc
insl
adc
jmp
adc
jmp
imul
popa
cmp
in
pop
test
les
adc
pushw
lods
xchg
shr
test
lds
stos
ror
pushf
dec
push
in
sbb
xchg
cmp
xor
pop
push
jae
sarb
loope
and
mov
cmp
sti
sbb
out
dec
scas
out
sahf
adc
add
fidivs
hlt
dec
loop
sbb
mov
insl
in
fwait
ret
add
mov
mov
mov
es
dec
movsl
push
add
jno
mov
sbbl
movsb
andb
mov
pop
insl
jmp
shrl
xor
mov
ret
fildl
push
cmpsl
mov
aas
mov
xchg
icebp
jo
jnp
jecxz
mov
fcoms
sub
idivb
rcl
inc
dec
ds
sbb
jmp
addl
dec
xchg
sbb
rcrl
mov
in
mov
add
popf
cmpsl
push
or
adc
dec
jne
jge
jo
jo
aad
ljmp
push
mov
push
loope
loope
sti
roll
rcrl
fidivs
stc
pop
addr16
inc
sub
pop
jg
loopne
or
mov
jge
nop
clc
inc
or
clc
push
negb
test
data16
fsubrs
arpl
popa
clc
rcrl
add
jecxz
out
push
mov
pop
daa
mov
lods
fwait
bound
jge
sub
adc
sarl
scas
push
jnp
jae
vmovapd
mov
shlb
cwtl
cmpsb
and
adc
adc
in
mulb
mov
xor
xlat
pop
test
into
daa
xor
xchg
ja
in
jge
and
dec
xor
data16
jbe
inc
sbb
mov
mov
sub
ret
call
cmp
pusha
js
jle
sarb
pop
cwtl
jl
cwtl
repz
scas
and
mov
jle
adc
ja
push
cwtl
mov
test
pop
leave
out
push
in
stos
dec
ficoms
push
hlt
xchg
int
mov
addr16
cmp
and
rorb
out
pop
dec
xor
ret
dec
das
jb
inc
mov
les
enter
xor
jp
shl
das
cmp
mov
xchg
out
hlt
xor
ss
gs
jge
mov
loopne
and
dec
lods
and
in
dec
xchg
or
or
and
jg
inc
mov
roll
or
xor
aas
sub
inc
shr
icebp
movsl
xor
decl
cli
fs
inc
daa
ret
cltd
aaa
push
xor
cmp
lods
add
leave
arpl
sar
mov
or
stos
xor
std
gs
sti
jle
lahf
fwait
push
or
jle
out
pop
stc
nop
mov
pop
fstl
loop
mov
sub
sbb
xchg
mov
outsb
leave
xor
add
inc
adc
pop
push
in
or
xor
std
bound
push
xor
loopne
add
cmp
and
inc
pop
and
mov
xor
loopne
sbb
mov
cmp
sub
fs
jp
mov
xchg
imul
dec
dec
insl
or
dec
xor
sub
into
sbbl
xchg
cmpsl
jmp
data16
push
icebp
stc
mov
dec
sub
out
sub
push
pop
stos
jns
popa
jb
movsb
adcb
int3
mov
jne
adc
hlt
addr16
mov
adc
add
bound
mov
xchg
aas
jbe
lods
inc
mov
fwait
std
pop
aas
cli
dec
jp
outsb
test
imul
xchg
fnsave
jns
loopne
mov
fwait
ss
pop
xor
mov
sbb
fistpl
add
mov
das
xchg
into
insl
jecxz
lcall
idiv
cmp
pop
mov
out
movb
xor
sub
fxch
xor
lret
push
aas
mov
in
test
xor
inc
or
sub
sbb
sub
pop
inc
lds
dec
out
movsl
cmpl
insl
call
insb
sbb
ret
hlt
int
data16
out
pop
movsb
or
xor
repz
jno
inc
std
and
popf
mov
sbb
incl
and
mov
cli
mov
jp
xor
ds
fsubs
dec
adc
jae
movsb
out
cmp
clc
push
and
lcall
sbb
cmp
sahf
orb
mov
pop
jbe
aam
mov
test
enter
ljmp
and
jno
cmp
int
dec
sti
mov
icebp
nop
sbb
lock
iret
push
or
mov
rcl
sti
and
xor
mov
hlt
xchg
stos
in
mov
shlb
mov
in
cmp
jno
cvtdq2ps
dec
and
jg
push
xor
mov
lds
mov
jnp
pop
sarb
sbb
dec
push
add
mov
hlt
shr
sub
nop
daa
arpl
push
xlat
leave
xor
dec
and
cmp
inc
fidivrs
adc
pop
in
pusha
lahf
mov
lret
mov
imul
lock
push
dec
jecxz
loopne
inc
xchg
dec
push
movsb
fidivrs
bound
test
jmp
pop
or
jae
mov
jg
push
mov
adc
jb
pop
scas
or
cs
lods
test
ret
cli
inc
cmpsl
hlt
inc
shll
ljmp
jge
sbb
inc
out
push
aam
out
mov
inc
lcall
and
cmp
inc
iret
fsubr
enter
jb
out
insb
loope
fwait
xchg
sarl
pop
in
pop
adc
ds
mov
dec
stos
add
jecxz
nop
daa
imul
xor
or
loopne
out
mov
scas
ss
cmp
out
mov
mov
sbb
dec
mov
arpl
in
rcl
mov
or
adcb
in
xchg
test
idivl
sub
outsb
negb
mov
in
jbe
xchg
mov
pop
out
ja
add
mov
outsb
les
mov
test
pop
xchg
inc
jmp
js
or
out
xchg
iret
and
and
icebp
xchg
mov
add
inc
icebp
mov
mov
jmp
jne
call
fsubp
push
jne
jae
adc
loopne
push
add
ret
mov
inc
loop
fistpl
adc
pop
shrl
pop
cmp
inc
enter
dec
push
aas
mov
jbe
in
or
add
cmp
nop
icebp
push
nopl
cmpsb
testb
out
adc
jno
je
push
inc
arpl
cltd
arpl
pop
shlb
cwtl
loope
sub
push
cmp
addr16
insb
aas
push
fisubrl
inc
gs
mov
push
dec
push
add
or
and
arpl
bound
jnp
mov
out
adc
shl
sub
push
and
outsb
fwait
call
insb
add
pop
dec
pop
mov
adc
popa
cltd
push
cwtl
jae
loop
jnp
sub
rcrl
ss
xchg
mov
push
cmp
lods
repnz
inc
cmpsl
pop
icebp
push
lock
inc
sub
and
aam
xchg
pop
ud0
inc
pop
sbb
push
lahf
subl
shl
shr
xchg
xlat
or
mov
xor
jns
cmp
movsl
mov
pop
lods
push
stos
mov
xchg
sub
ja
dec
xor
jecxz
pusha
test
cmp
sub
sub
adc
mov
movsb
mov
fwait
jg
shlb
stos
inc
dec
setb
push
ljmp
call
jnp
icebp
sbb
fdivrs
xchg
sub
mov
imul
sub
dec
inc
jge
jne
cltd
xor
outsb
add
sub
pusha
nop
rol
jae
jmp
sbb
loopne
inc
imul
outsl
stos
xor
insb
sub
enter
jmp
adc
in
lods
cmc
push
imul
je
outsl
mov
xchg
imul
not
xorl
mov
scas
or
scas
fs
orb
pop
add
mov
xchg
adc
fadds
mov
fldl
push
adc
aam
cmpsb
rcr
pop
jnp
adc
ret
jl
push
aam
icebp
push
testb
neg
push
xor
push
fsubrs
imull
aad
pop
cli
xorb
cmpsl
nop
lret
pop
jecxz
cmpsl
fbstp
push
pusha
inc
mov
cld
cmc
mov
bound
lret
cmp
hlt
or
rclb
repnz
loopne
insl
shlb
mov
loopne
mov
add
add
xor
loope
cmp
loope
mov
xchg
sub
ds
fbld
sbb
inc
imul
xchg
roll
jg
mov
adcl
lds
mov
cwtl
stos
mov
jne
dec
pop
xor
cmpsl
fwait
cltd
sti
jmp
inc
lods
les
in
sbb
and
push
movsl
lds
mov
ja
daa
movsb
mov
mov
daa
enter
add
lods
xchg
cmp
test
xchg
add
xchg
jne
add
dec
bound
and
fs
xchg
dec
iret
mov
subb
or
arpl
jno
sti
sub
push
jge
xlat
jmp
mov
mov
lret
aad
lret
jge
add
push
sub
mov
jo
fstp
mov
test
arpl
mov
pop
je
cvtdq2ps
fdivs
rclb
dec
fldcw
ret
mov
mov
mov
cmpsb
add
jg
mov
icebp
mov
cmp
pop
popa
add
sbb
aas
lea
mov
push
cltd
mov
pop
and
in
push
scas
mov
jne
subb
inc
fmuls
sbb
outsl
mov
adc
rclb
loopne
push
fsubrp
mov
std
jae
pop
clc
jnp
xor
out
add
push
or
and
adc
inc
push
bswap
xor
jns
push
aaa
inc
sbb
movsb
jns
pushf
jg
mov
sti
inc
mov
inc
divl
push
dec
adc
les
and
push
shlb
imul
jecxz
jo
jmp
sub
pop
jnp
and
pop
push
pop
out
mov
jne
and
sti
andl
add
jo
add
adc
inc
and
jne
les
insl
mov
jmp
sbb
sbb
xchg
add
stos
sti
push
lahf
in
inc
ficompl
aad
subl
xor
inc
int
sub
fnstsw
shll
popf
test
mov
xchg
fldcw
xor
jmp
sti
pop
outsb
loopne
mov
mov
or
std
decb
fisubrs
cmp
cmp
shrl
xor
xor
movb
repz
mov
add
inc
aaa
push
shll
iret
mov
jnp
shl
dec
cltd
stos
jg
mov
xor
mov
push
out
add
in
call
sub
push
incl
ret
pop
popf
ret
adc
jl
loop
or
imul
je
add
xchg
fists
loop
pop
adc
add
movsb
inc
lds
inc
popa
xor
or
cmp
aad
dec
fdivs
or
pop
pop
sbb
cmp
xchg
sub
ret
sbb
daa
outsl
cli
fidivs
xchg
insb
pop
cmp
mov
fucomip
mov
xor
pop
push
fistpll
mov
mov
scas
add
mov
jmp
in
mov
jo
sbb
inc
nop
bound
ja
push
and
fsubrl
cwtl
adc
outsl
sti
xor
inc
shlb
push
iret
cmpsb
sub
hlt
out
aaa
dec
mov
fs
movsb
in
sbbl
je
lahf
xor
mov
push
jmp
mov
jo
out
push
leave
jbe
pusha
jnp
xchg
fs
enter
adc
add
push
and
mov
shll
pop
or
loope
leave
scas
pushf
scas
adcl
adc
in
repz
fnstenv
mov
pop
mov
cmp
push
aas
dec
xchg
js
push
outsb
fsubl
lea
movsb
push
js
pop
lret
rclb
inc
xchg
fidivs
test
mov
cld
movsl
icebp
xor
pop
mov
loopne
imul
adc
ret
lds
enter
cmp
pusha
jae
sbb
cmpsb
mov
neg
daa
lcall
dec
icebp
mov
mov
push
xchg
ljmp
pop
fidivl
cmpl
lret
in
pop
xchg
mov
mov
out
rol
sbb
das
add
push
ja
inc
test
inc
push
in
push
or
mov
out
stos
xchg
push
addr16
jb
fcmovnbe
sub
mov
mov
adc
dec
jp
push
fcompl
pusha
dec
in
jne
mov
dec
cmp
fcom
outsb
gs
ret
pop
add
popa
dec
loopne
cs
insb
cmpsb
cmp
lods
rcl
aas
test
or
xchg
mov
jp
test
add
add
mov
and
lea
mov
push
mov
std
cmp
pop
jo
adc
lret
movsb
jmp
jbe
std
inc
ljmp
mov
xchg
popa
sbb
sub
in
mov
lret
bound
cmp
fstpt
bound
lock
dec
pop
xor
mov
mov
xchg
pop
push
dec
xor
movsl
xchg
mov
xchg
push
js
push
pop
and
out
pushl
xor
push
ljmp
pop
cmp
das
sbb
shrb
pop
sub
in
icebp
adc
cmp
pusha
insl
xchg
sbb
dec
pop
out
call
aaa
mov
imul
pop
jle
pop
sbbl
cmp
mov
fsubs
lock
and
imul
data16
sar
addl
cs
xchg
adcl
fwait
inc
mov
cwtl
ds
jo
dec
xlat
rcll
xlat
lods
inc
repnz
mov
mov
fisttpll
mov
sarl
inc
jmp
push
out
aas
int
add
pop
mov
imul
xchg
adc
movsb
mov
psubd
stos
stc
rcrb
pop
xchg
push
mov
ss
or
push
stos
xlat
mov
int3
jmp
or
cmp
pop
or
xor
mov
pop
and
jo
iret
filds
xchg
mov
xor
pushf
hlt
mov
movsb
test
fisubrs
fcomps
mov
les
ret
mov
and
mov
push
lods
call
xor
mov
outsb
sbb
scas
filds
sub
imul
jae
shr
adcl
xor
and
jns
idivb
daa
or
pop
sbb
or
out
in
jae
jle
fwait
sbb
pop
outsl
cmpsl
cltd
mov
nop
mov
adc
and
lret
cld
cmp
xchg
movsb
or
sub
xlat
adc
hlt
dec
sbb
testb
fdiv
roll
fsubrs
pop
pop
xor
push
mov
mov
adc
adc
scas
mov
mov
and
inc
adc
fnstsw
fs
push
mov
ds
inc
test
fmull
adc
sub
lret
mov
cli
insl
mov
movsl
sbb
xor
sub
lods
xchg
mov
mov
mov
inc
adc
push
inc
fimuls
dec
add
bound
loop
test
dec
jbe
cmp
stos
movsb
lock
sbb
mov
xor
movb
outsl
lret
insl
pushf
and
hlt
xor
movsb
push
lds
lds
mul
sub
sbb
push
mov
scas
cmpsl
bound
test
ret
scas
pusha
push
rorb
loope
fildl
call
movsl
pusha
in
jbe
movb
les
sahf
fcomps
push
aas
lea
rolb
fiaddl
test
leave
mov
bound
inc
mov
fbld
or
jo
lock
rcr
in
stos
in
jp
fidivs
pop
cmp
cli
pushf
cmp
ljmp
sbb
jnp
add
xor
mov
cmpsb
cmpb
cmp
or
push
lea
stos
sbbb
cld
xchg
scas
fistpl
in
test
movsb
sbb
icebp
movsl
test
inc
daa
inc
cmpsb
or
aaa
adc
mov
fidivs
inc
clc
scas
je
xor
jecxz
popf
push
push
sbb
sub
cmp
lods
fcmovnu
jne
mov
jno
roll
les
outsb
mov
pop
leave
imul
mov
pop
push
pop
cmc
sbb
jne
xor
mov
stos
mov
pop
lock
pop
icebp
pop
jne
mov
and
push
mov
dec
adc
mov
or
or
mov
mull
jmp
ljmp
lds
xor
mov
lret
or
and
push
ds
fiaddl
mov
ret
mov
ds
fcmovbe
sbbl
call
cld
in
inc
sbb
subl
or
cltd
mov
jge
xor
add
int3
push
xchg
pusha
sub
daa
push
mov
ljmp
or
rcrl
in
jmp
mov
xor
sub
out
fisubs
inc
push
sar
test
jp
lea
cmp
and
push
cmp
xor
in
mov
mov
addb
test
test
lods
push
jmp
ds
sbb
imul
cli
mov
xor
test
pop
pop
pushl
into
in
repnz
sub
int3
lret
dec
fldcw
xor
mov
pushf
fdivl
xor
stos
insb
sub
push
fdivrl
subl
fidivs
push
fisubs
xchg
sbb
add
mov
inc
sbb
clc
inc
sbb
int
test
xchg
pop
xchg
mov
and
adc
adc
mov
pop
gs
outsl
inc
jge
test
call
lods
fcmovnu
insb
dec
and
sbb
inc
or
jnp
ficomps
in
outsb
sbb
and
push
loopne
insl
sbb
pop
sahf
or
inc
adc
lahf
pop
loope
aam
shll
add
inc
mov
out
cmpsl
xchg
sbb
dec
fildll
rcrb
sub
in
mov
mov
enter
sahf
shrb
adc
adc
lock
pop
cmpsb
dec
rcr
and
push
inc
dec
pop
mov
imul
fs
or
mov
enter
out
mov
popf
sbb
aam
ds
or
push
loope
dec
and
ficoms
xchg
sub
loop
jg
test
scas
cs
push
adc
int
lret
aaa
out
push
inc
dec
pusha
dec
stc
dec
mov
push
icebp
lods
addr16
fmulp
test
bound
sbb
xchg
aas
rcll
shll
inc
cmc
jnp
mov
lret
mov
rcrl
ds
call
pop
inc
mov
push
jl
xor
in
sbb
ja
fwait
cs
add
jo
pushf
or
jmp
xlat
rep
xor
mov
xor
and
lahf
ss
cmp
push
pushf
add
je
loop
out
mov
cmp
sbb
mov
or
sahf
sub
push
rolb
icebp
jno
inc
testb
jmp
xor
nop
inc
outsb
gs
sbb
je
repnz
and
fs
daa
out
pop
daa
sub
movsb
inc
testl
jb
stos
xchg
jg
dec
jle
jl
jns
cmp
loop
pop
xor
imul
sbb
scas
cmpsb
lock
or
xorb
dec
jmp
dec
sbb
lcall
pop
mov
and
pop
rorb
cmpsb
sub
loopne
mov
jno
loopne
jno
ret
mov
adc
adc
stos
xchg
mov
or
dec
add
mov
jge
test
stos
mov
incb
in
xchg
push
push
popa
add
outsl
mov
ss
pop
dec
iret
lds
inc
hlt
mov
cld
lock
push
fwait
ret
sub
push
add
mov
lock
dec
pop
add
xor
add
addr16
lahf
ret
ljmp
push
test
ret
cwtl
cltd
fcom
imul
ss
mov
jno
push
mov
sbb
incl
scas
imul
rcrl
mov
loopne
iret
movsb
outsl
leave
xor
xchg
adc
lahf
mov
out
test
xor
test
test
pop
push
ror
cmpsb
jmp
sub
mov
push
mov
les
nop
pmulhw
lret
cltd
cwtl
pop
aam
nop
test
sbb
lret
sub
mov
inc
sub
sarb
jnp
add
push
lret
dec
pop
ss
xor
mov
lock
mov
jp
sub
enter
repnz
mov
adc
js
in
test
fsubr
adc
xor
add
imul
mov
int3
jmp
das
inc
push
cmpsl
add
shrl
mov
fsts
cltd
mov
js
and
xchg
test
das
mov
loop
mov
xchg
add
mov
rorl
cmp
jo
pop
cmp
push
sar
ja
lahf
fs
xorb
push
mov
insb
call
incl
pop
pop
mov
adc
lahf
mov
arpl
xor
and
je
xchg
xchg
cmc
ret
in
das
repnz
dec
mov
out
pop
in
ss
pop
mov
ror
mov
sbb
call
jmp
sub
loope
push
cwtl
jp
scas
inc
cmp
arpl
cs
scas
aaa
adc
cwtl
dec
popf
mov
pop
scas
jns
fcmovnb
dec
ss
aaa
in
xchg
dec
push
jo
out
mov
mov
lds
js
sahf
cli
sbb
adc
lret
fs
cld
mov
adcb
cmp
jecxz
and
scas
add
in
cmp
add
lock
insb
stos
jno
test
loope
dec
adc
cvtpi2ps
mov
imul
cmpsb
push
mov
mov
xor
lods
and
xor
mov
jno
jl
testb
sub
pop
aaa
push
push
mov
and
in
mov
pop
cmp
jp
cwtl
jae
fwait
sbb
adc
movsb
pop
xor
pop
ret
jle
hlt
cmp
ds
xchg
test
shlb
jle
repnz
add
rorb
and
xchg
jmp
push
mov
mov
and
aam
mov
out
xor
out
xchg
jnp
imul
mov
dec
dec
lods
in
xor
mov
out
xor
add
jl
xchg
sub
dec
jecxz
ja
lahf
cwtl
jnp
inc
inc
mov
dec
repnz
stc
popf
adc
nop
add
dec
mov
push
lret
stos
cmp
mov
inc
outsl
jno
jo
adc
lods
jae
cs
clc
movsl
push
push
popf
xor
jmp
mov
js
into
sahf
and
sbb
lret
jle
mov
in
clc
or
xchg
inc
out
sub
cld
push
je
jno,pn
add
push
bound
mov
sbb
pop
lahf
ss
out
mov
test
rol
out
test
fildll
hlt
push
sbb
aas
push
aaa
pop
lret
mov
inc
jl
les
lea
mov
lds
imul
repnz
jnp
and
pop
pop
ja
imul
les
mov
cmp
push
mov
in
out
mov
pop
xchg
jb
daa
movsb
repz
je
bnd
and
xchg
mov
mov
push
cwtl
xor
push
xlat
xchg
cmp
insb
repnz
lret
ds
les
push
scas
push
cmp
xlat
dec
mov
add
push
ficompl
pop
or
jbe
pop
test
pop
push
mov
pop
mov
jp
xchg
pop
and
add
push
pop
cmp
and
iret
push
cmp
push
mov
xchg
std
adc
int
je
jne
jmp
es
pop
push
sub
or
lods
pop
scas
daa
lcall
cltd
push
push
imul
pop
insb
fbstp
jno
push
cmp
fisubs
and
mov
enter
aam
xchg
mov
cmp
inc
int3
insb
mov
xchg
xchg
outsl
push
xor
daa
push
cli
lea
fmul
pusha
mov
xor
xchg
sti
xchg
enter
pop
mov
rcrb
mov
rorb
lcall
or
dec
adc
jno
test
sub
adc
loope
aam
jmp
inc
push
rcrb
lret
xor
pop
or
xor
mov
jp
out
or
mov
daa
mov
fs
jle
adc
shlb
jecxz
cmp
imul
aam
xor
add
daa
push
push
std
aaa
or
add
jle
push
jmp
inc
cmp
cmp
adcl
daa
or
push
adc
lods
inc
pop
mov
jge
ss
popf
fwait
and
xchg
push
jg
jae
cs
sub
push
xchg
lahf
mov
popa
mov
xchg
scas
loopne
sub
aad
stc
mov
jmp
loope
xchg
in
add
incl
add
inc
rclb
cltd
push
or
enter
lret
frstor
movsl
and
fildl
lcall
sahf
jno
or
faddl
pusha
rcrb
pop
ljmp
aam
jbe
xchg
pop
out
je
inc
data16
jne
add
push
pop
pop
fwait
sub
pop
fstpt
in
jo
sbb
loopne
popa
adc
call
movsl
loopne
sahf
and
push
loop
pop
pop
jmp
aaa
stos
test
jmp
and
gs
clc
lret
push
cmp
stc
aaa
into
dec
sub
loopne
sbb
inc
mov
fwait
mull
add
mov
in
mov
test
into
aas
nop
addr16
pop
xor
push
jp
add
cmp
dec
lods
insl
sub
dec
pop
sub
sar
sub
repz
movsl
mov
inc
sbb
jp
mov
mov
icebp
mov
dec
addr16
pop
test
iret
int3
sbb
idivl
mov
jle
lods
gs
out
sbb
jle
adc
sti
inc
call
or
out
jns
push
mov
ljmp
call
es
sub
loope
cmp
xchg
insb
stc
mov
shll
stos
dec
push
xlat
rclb
pop
insl
pop
cwtl
or
mov
pushf
sub
jo
movsb
mov
cltd
xchg
popa
ljmp
outsb
dec
in
dec
mov
cmp
rolb
es
lods
jge
fs
sbb
mov
mov
stos
movsb
shrb
jl
mov
int3
xchg
add
adc
mov
sbb
push
cmp
mov
cmpsb
lods
in
pop
or
mov
jmp
or
adc
jns
push
kxorb
hlt
pop
out
lods
pop
dec
sarb
pushf
push
sar
xor
popa
pop
pop
push
add
aas
mov
loopne
and
sti
push
aam
adc
negl
xchg
pop
icebp
pop
pop
add
push
outsb
lds
mov
scas
and
mov
ret
outsb
cmpsb
cmp
jge
das
lcall
lcall
mov
dec
movsb
xor
xor
xor
pop
bndstx
mov
mov
adc
je
or
pop
add
mov
icebp
movsl
cmp
mov
add
sub
out
sub
jae
aad
adc
xchg
pop
or
mov
jae
xchg
cld
push
mov
in
js
push
fisubl
xor
rol
xchg
inc
push
mov
aad
into
pushf
mov
mov
mov
stos
testl
fwait
push
hlt
aam
in
rcll
push
popf
push
pop
or
cmpb
add
and
mov
push
dec
mov
jo
mov
cs
rcrb
outsb
sub
scas
fidivrs
gs
outsl
mov
je
pop
cltd
mov
repnz
aaa
push
mov
add
sub
cwtl
mov
addr16
test
stos
jae
lcall
sub
mov
xor
daa
test
cmpsb
aaa
clc
lret
gs
inc
xor
lock
dec
push
xchg
mov
xchg
add
dec
fidivl
loope
repz
adc
loopne
push
outsl
mov
add
negl
call
sub
jo
into
cmpsb
das
mov
sub
popf
xchg
push
scas
dec
mov
xchg
add
out
mov
dec
imul
fildl
pop
fwait
rolb
int
mov
aaa
sub
mov
mov
push
mov
std
adc
push
sub
ret
test
adc
sub
mov
and
outsl
jbe
mov
xchg
ss
mov
mov
fstsw
mov
rcr
xchg
push
mov
push
xchg
shl
pop
hlt
adc
and
cs
fwait
test
repnz
addr16
loopne
xchg
sub
sub
pop
sub
xor
test
mov
dec
clc
pusha
inc
xchg
push
shll
mov
ds
dec
into
sbb
mov
mov
add
pop
adc
ljmp
fs
xlat
insl
and
fimull
or
sbbl
or
mov
test
mov
and
inc
fldenv
adc
insl
enter
inc
loope
cld
xchg
rclb
mov
shr
iret
sahf
out
cld
cld
lock
inc
inc
mov
dec
mov
jbe
sub
ret
dec
mov
clc
jae
or
arpl
rolb
data16
pop
int
andb
shl
lahf
jle
mov
lret
mov
inc
mov
jg
cltd
and
int3
mov
lret
inc
out
and
push
fisttps
sbb
jne
inc
test
xor
outsb
rorl
lock
xchg
stos
sahf
jg
mov
or
popa
mov
shlb
pop
jno
xchg
outsl
out
lods
sbb
xorl
cmp
adc
mov
xchg
push
cs
and
sbbl
xchg
sbb
rcrl
pusha
mov
lods
sub
scas
add
popa
test
adc
decl
mov
das
dec
loop
push
sbb
push
outsl
mov
adc
pop
or
or
xchg
out
sbb
filds
and
clc
cmc
push
es
test
xchg
pop
cmpsb
cmpsl
mov
in
stc
idivl
fstl
or
cs
inc
mov
into
mov
insl
ds
outsl
lods
add
push
mov
repnz
leave
scas
dec
pop
mov
daa
gs
inc
std
rorb
push
push
outsb
cmp
ja
mov
pop
pushf
ja
in
ds
outsl
scas
adcl
icebp
sbb
dec
ss
inc
inc
xlat
incl
jae
jp
pop
scas
cltd
pusha
sub
cli
adc
inc
adc
xchg
lret
int3
push
testl
call
dec
icebp
and
sub
loop
roll
loopne
xchg
nop
fisttpl
or
sbb
das
sbb
addr16
mov
test
cs
stos
xchg
lahf
pop
push
js
stos
add
or
xchg
mov
enter
movsl
les
testb
pop
mov
mov
mov
fldl2t
pop
pop
mov
mov
or
das
loopne
testl
or
inc
sub
lret
dec
fnstsw
pusha
ret
dec
rcr
lret
add
adc
ret
aas
std
popa
inc
test
fdivrl
sub
iret
daa
sub
movsb
test
pop
xchg
movsb
pop
out
add
jl
inc
roll
nopl
es
mov
cmpsb
loopne
pop
bound
ret
pop
andb
add
cmp
inc
inc
lock
scas
mov
push
cmc
cmp
dec
push
pop
jl
addr16
cmp
push
inc
and
xor
adc
sub
xor
loop
repnz
dec
ds
jo
je
mov
mov
xchg
int3
mov
addl
add
jmp
iret
mov
les
add
cmpsb
mov
push
inc
fdivl
or
repz
pop
sti
es
sub
flds
jmp
rcll
or
out
or
xchg
mov
cwtl
pop
into
inc
gs
sub
pand
cmp
adc
mov
inc
add
pushf
dec
shlb
dec
ja
mov
in
dec
mov
mov
mov
ss
arpl
xor
sub
repnz
fcmovnbe
mov
cmp
cs
mov
jnp
hlt
fldcw
mov
test
call
test
sbb
pop
sbb
scas
stc
sub
xchg
push
dec
pop
insl
addr16
pop
sahf
cmp
sub
pop
jmp
mov
dec
into
mov
pop
imul
fistl
insb
sub
xchg
and
popf
imul
shlb
xchg
out
push
cmc
push
into
enter
stc
push
testl
movsl
jne
jno
and
loope
fldenv
leave
cmp
rcl
or
scas
mov
notl
outsb
testb
fdivr
push
sbb
mov
fucomi
in
and
mov
sarb
fcomps
mov
loop
mov
popa
add
mov
loopne
sub
dec
in
es
scas
pop
cmc
push
bound
dec
addr16
iret
test
mov
ret
xchg
inc
pop
adcb
stc
negb
mov
jge
test
insl
mov
adc
jns
aam
push
fidivl
or
pop
data16
dec
xor
roll
inc
popa
sbb
iret
das
aam
stos
fcmovbe
ret
push
out
hlt
push
hlt
xor
shr
push
push
dec
xor
push
int3
xor
insl
xor
mov
out
sub
adc
in
fnstenv
xchg
jp
sbb
cmp
test
xchg
call
ss
and
cli
test
and
mov
sub
inc
lds
mov
push
dec
daa
ficomps
or
sub
sahf
pop
dec
pop
dec
mov
popf
pop
negl
mov
mov
cmp
in
sbb
dec
incl
int3
sti
pop
movb
lcall
and
jg
push
lret
cwtl
dec
gs
clc
mov
sub
push
mov
mov
popa
mull
data16
out
adc
rcr
mov
fbstp
out
outsb
outsb
std
dec
or
mov
mov
or
xor
push
pop
bound
repz
and
jge
cmp
sub
add
shr
xchg
scas
adc
or
inc
fs
sahf
dec
and
out
dec
out
fdivrl
call
fisubs
cld
loope
sahf
inc
jmp
mov
dec
mov
mov
xchg
mov
shrb
mov
lret
push
sbb
andb
jbe
cmpsl
dec
sbb
add
fsincos
push
or
mov
scas
pop
in
or
cmp
cmp
add
xor
es
jo
movsl
mov
push
call
jnp
out
or
negl
add
repnz
cld
stos
aas
lods
ljmp
pushf
dec
adc
imul
jge
adc
pop
mov
pop
cmp
add
sahf
xchg
mov
arpl
push
into
gs
inc
or
in
clc
into
xchg
push
cmc
ret
out
jg
loope
call
incl
das
dec
pop
popa
pushf
ficomps
push
sahf
xchg
aaa
jb
xchg
movsb
pop
mov
lcall
and
cltd
mov
cwtl
pusha
lock
out
dec
push
mov
ja
pusha
adc
inc
dec
out
xchg
fsubs
arpl
ffreep
jge
mov
sbb
nop
sub
jge
outsb
cmp
mov
test
mov
sbb
cmpsl
dec
jne
mov
fisttpl
pop
popf
jle
push
mov
arpl
mov
mov
push
mov
and
or
aaa
icebp
lods
scas
rcrb
fcoml
jp
pop
inc
add
xchg
loopne
xor
sarb
sub
iret
data16
pop
xor
xor
imul
loop
ja
cmp
jne
out
push
rcrb
push
or
ret
dec
ficoml
or
shlw
in
push
push
out
xchg
cli
sbb
insb
aad
xchg
mov
div
mov
lret
movsl
and
movsb
fistpll
mov
xor
hlt
xchg
cs
pop
pusha
xchg
pop
out
jbe
dec
out
ja
or
aad
cmc
push
sub
xor
movsl
ret
repz
adc
lds
fidivl
not
icebp
lock
add
data16
lret
adc
les
outsl
xchg
and
xor
adc
pop
mov
imul
in
cmpsl
iret
xchg
roll
dec
mov
adc
mov
push
xlat
dec
test
iretw
and
add
out
out
rolb
shrl
mov
mov
pop
daa
sbb
movsl
js
and
and
jecxz
aas
pop
push
aas
scas
cmp
movsl
pop
stos
mov
xor
push
inc
add
inc
dec
pop
je
mov
sbb
enter
cmp
das
dec
push
fmuls
xchg
mov
fisubl
push
mov
ret
pop
outsl
dec
scas
inc
jno
loope
add
adc
data16
enter
sub
cmp
xor
scas
inc
fsubs
cmpsb
test
mov
mov
ss
fldz
clc
loope
mov
lret
cli
dec
je
inc
cmp
es
dec
sbb
incl
inc
mov
add
dec
aaa
cmc
gs
add
dec
push
xchg
in
out
ss
mov
sbb
xchg
inc
inc
pop
cmp
gs
sbb
mov
cmp
outsb
sti
adc
clc
jg
sub
xor
mov
hlt
xchg
and
leave
adc
push
pop
lock
and
inc
jns
xor
push
mov
push
arpl
sub
or
rcrl
rol
scas
xchg
sub
sub
inc
popa
xor
cmp
cmpsl
call
dec
andb
loope
or
movsl
fnstcw
sub
adcb
dec
ficomps
jnp
and
mov
mov
pushf
mov
lea
repz
inc
pop
push
cmpsb
ds
jae
imul
mov
lahf
rorl
shlb
je
and
fs
cs
push
aaa
into
push
sub
lret
js
jne
imul
stos
aas
pop
push
cmp
push
jnp
iret
push
fadd
pop
mov
rorb
loope
add
in
or
cmc
mov
fcomps
push
cmp
insb
scas
push
fisttps
nop
dec
in
xchg
jecxz
lcall
jae
adc
and
shlb
push
popa
lret
mov
enter
mov
jns
sarb
lods
dec
stos
and
mov
fiadds
jg
xorb
xchg
jne
sub
cmp
jns
jmp
insb
cmp
xor
in
loope
unpckhps
push
cmp
pop
hlt
jmp
cwtl
xor
sub
mov
xor
lahf
inc
ja
cli
shlb
cltd
pop
repnz
addl
pop
enter
sub
cwtl
pop
xchg
fwait
inc
test
repnz
dec
imul
in
rorb
in
scas
and
nop
xchg
ds
jmp
adc
repnz
xor
shll
mov
cli
movsb
jecxz
icebp
js
mov
cltd
js
dec
inc
fwait
jbe
jo
cmpsl
call
or
mov
fisttps
mov
adc
pop
mov
cmpps
mov
mov
icebp
out
push
mov
push
push
inc
dec
add
mov
pop
sub
cmp
shll
imul
roll
ficomps
faddl
mov
lods
shrl
sbb
dec
cld
jb
test
lret
add
cmpsb
xchg
xchg
arpl
xchg
mov
lret
imul
imul
fistpll
pop
incl
sbb
mov
movsl
push
mov
rcl
or
mov
adc
jb
jno
mov
mov
mov
sbb
adc
andl
pop
mov
std
mov
dec
inc
int3
push
in
std
sub
outsb
and
lds
mov
sub
out
inc
dec
aam
aam
lods
dec
in
sub
imulb
xor
cmp
hlt
outsl
xlat
sub
add
aam
test
sbb
movb
dec
or
outsb
and
sub
jmp
inc
dec
cmpl
mov
shlb
and
pop
and
pop
push
mov
cli
xchg
mov
les
cli
inc
cmc
std
dec
scas
adc
repz
push
les
adc
mov
push
in
xlat
push
push
pop
mov
fwait
nop
ljmp
push
addr16
lahf
pushf
inc
int
cmp
push
cli
rcll
mov
cmp
outsl
lcall
and
mov
mov
repnz
aas
xchg
mov
pusha
push
jo
imul
sbb
outsb
add
lods
repz
inc
adc
mov
ja,pn
add
jecxz
push
pop
cli
jns
cmp
or
stc
testl
lock
pop
insl
fucom
popl
pop
add
fwait
mov
xor
pop
int
lret
std
jb
stos
xchg
js
out
mov
leave
and
loop
out
mov
bound
mov
int
jmp
pop
insb
mov
imul
jg
lods
out
inc
imul
sub
mov
sbb
cwtl
test
cmp
mov
cmpsl
push
jg
imul
lahf
xchg
add
push
out
rcr
dec
std
shrd
cmp
cmp
cmp
movups
jge
je
cmp
lcall
jne
ror
xor
jbe
frstor
movsb
es
jecxz
add
pop
imul
jl
rol
shll
pushf
arpl
or
jge
jmp
js
mov
test
int
sbb
xor
push
js
std
repnz
stos
xchg
mov
sbb
test
je
mov
outsb
fwait
iret
fnstsw
dec
pop
imul
dec
xchg
fsts
loop
in
dec
imul
dec
shrl
jp
fldt
and
adc
jbe
and
dec
inc
mov
dec
dec
inc
adc
add
imul
data16
and
in
in
adcb
data16
xor
sbb
xchg
jp
push
movsb
add
and
pop
mov
pusha
imull
push
sub
push
lret
notl
sub
pop
decl
xor
rorl
push
insb
enter
or
or
shrb
jp
pop
inc
test
push
sub
cmpsl
notl
fs
xchg
push
lods
add
ja,pt
jge
fwait
sbb
cmp
xor
stos
rcrl
test
xchg
sub
imul
aaa
pushf
das
or
fldt
adc
test
subb
cmp
adc
int
fldt
mov
int3
push
and
jecxz
ret
jnp
outsb
mov
pop
out
and
xchg
pusha
xlat
icebp
popa
mov
mov
jne
in
mov
ljmp
ljmp
nop
fiaddl
repz
in
arpl
xchg
mov
fbld
rolb
xchg
cmp
ret
or
pop
sbb
push
xchg
mov
lock
rorb
nop
xchg
shl
sub
scas
dec
call
enter
int
mov
inc
pop
add
out
inc
and
xchg
jge
fidivrl
in
les
repz
xor
xchg
push
push
xor
adc
or
xchg
nop
sub
push
inc
add
pop
mov
test
cmp
test
pop
push
mov
mov
xchg
mov
pop
jmp
sub
movsl
cmc
mov
add
push
adc
add
subl
inc
jle
add
cmp
mov
push
pop
dec
cld
mov
mov
sub
test
mov
aas
in
jmp
inc
loop
ret
movsb
mov
xchg
iret
data16
mov
aad
out
in
add
testl
xor
pop
xor
fstpt
dec
stos
adc
mov
xor
fdivrs
sbb
pop
enter
push
jmp
andl
or
push
cmp
sbb
test
mov
add
sub
jns
jb
clc
xchg
in
test
loope
aaa
pop
andl
imul
and
xlat
cmp
xor
andb
lds
lea
sahf
int
or
cmpsl
push
shl
and
divb
idiv
ljmp
adc
dec
outsb
rolb
mov
or
dec
in
jg
les
lahf
test
cmp
pop
push
insl
shrl
xor
jecxz
mov
aas
mov
xlat
rclb
add
cmp
push
cwtl
or
lods
add
test
cld
mov
clc
mov
mov
push
pop
mov
or
cs
lahf
mov
push
test
lea
sub
pusha
add
test
pop
dec
dec
pop
dec
cmc
je
dec
in
cmp
ds
pop
mov
cmpsb
sbb
push
popa
out
test
xchg
cmp
stos
sbb
arpl
push
mov
nop
sub
stc
out
fisubs
jge
aas
xlat
mov
sti
adc
push
sub
inc
es
addr16
jnp
in
lret
data16
adc
daa
sbb
mov
add
mov
aam
fwait
push
inc
cmp
dec
mov
xchg
adc
insl
filds
jo
jb
fwait
lods
or
or
stos
pop
push
mov
jno
inc
pushf
loope
rclb
xchg
out
jl
jae
pop
sub
dec
es
std
and
mov
fidivrl
pop
fidivl
popf
fwait
dec
insl
test
sbb
jmp
testl
mov
test
in
sbb
out
xchg
cs
push
mov
loop
adc
pop
ret
or
cmp
add
arpl
push
inc
push
push
je
aas
jns
loope
jl
cmp
nop
mov
aam
adc
pop
addr16
scas
cmpl
or
shll
xor
shrb
push
or
sub
mov
jbe
pop
add
fimull
repz
mov
sub
sbb
push
lods
dec
fists
jno,pn
jbe
jp
jno
push
daa
inc
arpl
dec
sahf
xor
dec
outsb
sub
mov
rcll
mov
lret
aaa
push
jae
and
repz
or
cmpl
jmp
fnstsw
sahf
mov
sub
adc
dec
push
or
sub
sub
and
jne
movsl
add
fists
xor
pushf
xor
into
popa
mov
lret
xor
jmp
fwait
xchg
call
inc
scas
push
out
xor
mull
mov
sbb
push
xor
sub
nop
fcmovu
jno
mov
cs
test
cmp
outsb
inc
sub
pushf
outsl
ja
cs
lods
xchg
add
orl
cli
push
testl
xchg
mov
adc
mov
lahf
ficoms
xor
out
rcrb
dec
int3
subb
das
test
aam
enter
lods
pop
repnz
je
shlb
adc
outsb
jg
fisttps
rep
mov
fistpll
test
mov
or
xchg
fdivl
and
mov
gs
daa
fmuls
push
mov
shrb
mov
into
cmp
cmp
outsb
add
je
sbb
mov
xchg
pop
fdivs
mov
mov
xor
scas
pop
push
imul
shr
test
mov
xorb
stos
in
mov
aam
es
mov
jae
out
cli
lock
dec
pop
cmpsl
cmc
cmp
out
pop
pop
insb
mov
out
shrb
xor
ss
mov
rcr
leave
mov
cmc
out
out
adc
add
dec
jb
dec
mov
jmp
pop
add
fwait
es
lds
sub
sbb
cli
mov
mov
cmp
lock
sub
pop
mov
mov
aam
inc
ret
pop
jbe
scas
mov
push
hlt
into
mov
push
xlat
adc
lds
das
dec
jne
dec
push
push
inc
movsl
mov
shrb
sub
adc
cmpsl
lods
mov
out
shrb
in
cli
xchg
sbb
mov
jbe
mov
sub
lods
cwtl
stos
stos
dec
stos
cmp
pop
add
movsl
or
test
xor
movsl
in
sbb
pop
repz
fdivr
and
jp
es
mov
je
adc
adc
and
and
rcrb
mov
or
push
xor
cmp
subl
push
inc
xchg
add
sbb
stos
rorl
lods
es
push
fbstp
aas
cmp
inc
fs
fisubrl
test
fimuls
inc
pop
test
push
stc
jle
push
pop
cwtl
das
nop
ja
outsl
test
sub
cmpsb
mov
and
mov
mov
cmc
mov
sbb
jno
in
add
jns
rcr
int3
dec
cs
jb
adcl
mov
in
xchg
daa
mov
dec
call
dec
mov
cltd
ret
call
mov
aad
dec
mov
sbb
add
mov
repz
jae
mov
adc
lahf
mov
dec
xchg
movl
js
dec
add
mov
in
lret
cmp
sub
mov
ja
sbb
pusha
mov
cmp
cmp
pop
xor
test
mov
pop
push
pop
imul
mov
punpckhdq
xchg
sub
mov
jg
push
inc
lret
or
roll
loopne
andb
inc
sahf
sub
xchg
repz
push
jo
sub
pop
push
shrl
cmpsb
lock
push
dec
stos
movnti
xor
jl
sahf
mov
mov
fistps
jle
scas
dec
dec
push
lret
xchg
mov
inc
cmp
xchg
std
adcl
cwtl
push
mov
fstl
iret
ss
test
shrl
xchg
dec
xchg
mov
cmp
xchg
das
and
cwtl
xchg
xor
or
mov
and
cli
xchg
loopne
cltd
and
ret
push
int
mov
loope
insb
xchg
dec
pop
dec
insl
jge
dec
fldcw
nop
xlat
cmp
std
insb
neg
gs
xchg
xor
mov
mov
iret
in
testb
fisubrl
cmp
loop
jb
aaa
pop
adc
sbb
bndstx
nop
outsb
daa
push
in
pop
loop
adc
push
popa
lret
sub
mov
test
inc
out
ja
out
das
xchg
pop
mov
jle
mov
pusha
subl
loope
addl
outsb
mov
mov
ldmxcsr
arpl
adc
int
stos
rclb
ret
cld
aad
loopne
pop
push
les
add
icebp
inc
in
clc
cmp
movsb
mov
incb
gs
and
sub
loope
cmp
pmulhuw
das
jecxz
pop
sub
add
sub
fsubl
jecxz
jnp
xor
ss
push
mov
adc
or
inc
fistps
push
mov
stos
and
neg
pop
push
lcall
dec
call
mov
pop
daa
jmp
mov
dec
das
sbb
imul
push
push
fwait
aaa
daa
or
push
js
frstor
and
dec
out
add
inc
or
xorl
push
mov
cmp
adc
pop
test
sub
mov
ja
jmp
dec
fpatan
adc
pop
jecxz
sub
sbb
inc
lods
mov
xor
add
dec
pop
jp
adc
in
sbb
aas
loopne
or
divb
push
repnz
mov
shlb
jno
scas
mov
int3
stos
xchg
cmp
rolb
mov
movl
xor
xchg
hlt
andb
mov
pushf
in
sub
cmp
cli
pop
lods
fucom
hlt
sbbl
xor
xchg
in
mov
imul
dec
popf
pop
jecxz
dec
in
pop
ret
jae
dec
cmc
mov
xor
adc
xchg
adc
xchg
dec
lcall
sbb
sub
inc
xchg
div
aad
outsl
or
or
es
pop
inc
decb
mov
mov
jecxz
mov
xlat
mov
sub
fsubrs
rol
sub
sbb
imul
push
and
lea
repz
hlt
pop
push
xchg
addl
adc
pop
cmp
imull
lret
inc
fdivr
inc
cmp
pushf
mov
or
aam
mov
testl
add
popa
dec
out
into
mov
fistpll
out
jg
xor
xor
filds
xchg
push
pop
int3
xor
mov
xchg
popa
xor
lea
les
in
xchg
add
lret
fidivrs
mov
lret
xchg
push
dec
roll
mov
jb
out
xlat
repz
popl
sub
aas
hlt
sub
xor
sbb
es
in
add
add
mov
push
jmp
test
shlb
mov
enter
sbbb
sub
fadds
jnp
add
stos
pop
shlb
push
out
xor
outsb
push
xor
or
and
dec
hlt
aas
outsb
jo
arpl
add
js
cmpsl
and
or
clc
adc
or
hlt
xchg
jg
imul
mov
fcmovb
ja
adc
mov
test
mov
inc
notl
ja
nop
push
mov
mov
loopne
inc
push
shll
aas
dec
in
or
jge
push
sub
mov
test
mov
or
xchg
push
les
repz
stc
push
sbb
jns
iret
insl
dec
loope
insl
outsl
loop
jne
imul
mov
pushf
push
xchg
jle
sarb
decl
and
and
rep
and
jno
js
int3
sub
pop
mov
jl
addl
inc
or
pop
dec
add
aad
mov
lret
cmpsb
push
push
pop
sahf
aaa
in
pop
cmp
push
pushf
mov
mov
jle
lock
mov
jge
mov
xor
ret
cmp
adc
add
mov
cmpsb
mov
sbb
enter
aad
mov
rolb
jg
in
stc
mov
sti
stos
push
cmp
leave
push
pop
enter
shl
in
adc
mov
jle
jmp
add
mov
xor
sbb
push
push
or
adc
insl
xchg
int3
mov
andb
and
fnstcw
in
pop
out
and
inc
xor
aad
popf
stc
inc
dec
pushf
out
rclb
fildl
inc
outsb
sub
es
cmp
nop
decl
xor
xchg
ljmp
jne
scas
test
mov
cmp
push
push
mov
mov
jmp
std
sbb
push
push
mov
adc
dec
mov
int
mov
popf
pop
fldenv
push
pop
ss
jno
gs
push
daa
outsl
mov
arpl
inc
pop
pop
xchg
aam
outsl
daa
push
jno
and
jne
push
iret
cmp
lock
push
dec
es
push
scas
sub
dec
xchg
in
push
sub
xchg
cmpsb
js
in
mov
mov
jmp
sar
outsb
shlb
xlat
mov
in
or
loop
sub
or
out
jg
loope
sbb
dec
push
xchg
ds
aas
xchg
cmp
adc
dec
mov
ljmp
in
addl
xchg
in
dec
xchg
loop
int
cltd
sti
push
mov
mov
mov
cmp
mov
outsl
xor
push
push
lahf
or
adc
pop
in
pop
pop
aad
mov
mov
out
dec
mov
shl
jo
rorl
loop
mov
pusha
and
sbb
ret
test
xchg
rclb
loop
mov
inc
and
mov
mov
fstpt
mov
adc
sub
mov
lods
jg
lea
int3
xor
jecxz
jl
outsl
loop
adc
jno
es
add
scas
add
sbb
mov
std
lds
or
xchg
orb
in
mov
imul
xchg
decl
pop
lret
adc
sub
cltd
stos
je
loope
ja
scas
in
nop
stos
rorl
and
lock
push
inc
ss
push
push
or
or
dec
mov
cmp
test
add
xchg
adc
jmp
push
shr
ret
mov
jb
adc
ja
lret
aad
jmp
or
movsb
sbb
mov
fists
xchg
add
faddl
scas
and
mov
out
sbbb
xor
lcall
loopne
push
mov
out
mov
frstor
movsl
mov
fdivrl
in
add
push
jp
dec
pop
xor
repz
sti
adc
clc
dec
cwtl
movsb
ret
fidivrl
or
clc
aam
test
ljmp
add
lahf
stos
push
xlat
notb
push
out
bound
loop
aaa
and
and
inc
imul
xchg
rcr
push
out
divb
adc
mov
data16
dec
mov
test
lret
mov
in
loopne
call
imul
mov
pop
mov
adc
push
mov
pop
addb
cmp
sbb
jns
insl
jge
jle
xchg
fs
add
push
test
ljmp
dec
dec
pop
cmpsl
pop
fnstcw
pop
inc
push
inc
fadds
popa
mov
jge
cmpsb
pop
fisttpl
pop
jae
xchg
test
dec
loop
rorb
sbb
rsm
sub
out
lcall
jns
jmp
ret
adc
out
iret
or
adc
lahf
call
or
pop
cmp
sub
out
loop
into
inc
dec
inc
repnz
add
aad
jb
cld
mov
pop
outsl
xchg
mov
pop
dec
loope
cmp
outsb
sub
cmp
in
jecxz
add
aad
pop
sbb
hlt
cmc
sbb
xchg
sub
test
sbb
mov
in
mov
imul
sbb
fcmovnbe
jge
mov
sub
sahf
outsb
sub
shrb
adc
lea
call
nop
adcb
inc
pushf
pop
dec
clc
je
stos
stos
pop
scas
fcmovne
ss
shrb
clc
out
fimuls
sbb
xor
or
jg
lret
lods
xorl
jmp
sti
adc
xor
and
test
insl
into
push
ss
push
cmc
mov
lods
cmp
push
lock
popf
pop
cmc
into
outsl
shrl
sub
push
rcr
pop
insl
test
and
sub
xor
jmp
fnstenv
call
enter
popf
jb
jae
popl
call
jae
xorl
js
mov
stos
call
cli
pushf
cmpsl
aas
shrl
out
lea
aaa
mov
xorl
lea
hlt
lret
pop
cmpsb
adc
cmc
pop
loopne
clc
sub
push
cmp
loope
cli
dec
push
dec
and
push
add
adc
nop
dec
out
ja
mov
out
popa
inc
xchg
ss
aad
cld
cli
stc
push
inc
scas
sbb
nop
push
sub
out
imul
mov
jp
out
sahf
xchg
fcoms
xorl
mov
dec
sbb
sub
pop
lahf
pop
lock
rcl
addr16
cmp
sub
pop
aad
xchg
and
cmp
and
xchg
gs
addr16
loope
xchg
mov
adc
je
xchg
cmp
fnstenv
pop
sbb
xchg
inc
mov
dec
sub
jle
jnp
das
lea
pop
ljmp
outsb
cmp
add
jmp
out
fdivl
int3
cmp
loop
int
sti
iret
frstor
repz
les
jae
mov
sahf
mov
mov
das
xchg
push
fwait
xor
xchg
adc
popa
mov
and
push
push
fwait
xor
xchg
repnz
or
push
push
jp
jg
cmp
cli
cmpps
pop
out
mov
ret
sbb
in
push
adc
sbb
push
lds
sub
pop
ror
mov
addr16
dec
aas
and
cmp
dec
adc
xor
push
sbb
repz
pop
lcall
inc
push
fisubs
xchg
enter
imul
out
outsl
jns
pop
fbstp
mov
and
xchg
arpl
inc
gs
or
cmp
mov
arpl
lahf
cs
lcall
jnp
std
inc
xchg
das
mov
rsm
imul
cmpb
loop
inc
xor
test
sbb
popa
mov
and
aad
das
dec
mov
push
out
lea
repz
stos
and
sub
lea
and
dec
and
mov
mov
cmp
nop
dec
clc
lea
in
rcrb
jecxz
sarb
sbb
push
xchg
xchg
ret
stos
mov
pusha
xor
dec
xchg
cmpsl
and
stos
jbe
lods
inc
stc
sub
shrl
mov
cmp
xchg
out
mov
int3
xor
js
lods
cmp
clc
inc
ret
sbb
out
leave
inc
mov
jne
push
inc
sbb
pop
lea
xor
mov
xchg
insl
loop
jmp
movsb
lods
jo
test
pop
in
icebp
xor
push
push
out
sbb
outsb
xor
sub
mov
and
push
mov
cmp
add
push
das
fadds
sub
mov
scas
xchg
xchg
mov
push
lss
pop
data16
adc
pop
ljmp
cmp
je
loope
cmp
popf
lock
or
xchg
pop
cmp
jmp
push
je
jg
imul
push
push
outsl
add
jecxz
push
je
mov
jne
xchg
andl
movsb
cmpsl
mov
pmaxsw
xchg
pop
xchg
jno
mov
gs
add
orb
cmp
pop
jmp
dec
insb
sub
xchg
popf
hlt
xlat
call
xor
je
jbe
jle
jbe
adc
inc
or
lret
out
push
idivl
lret
loope
popa
cmp
icebp
adc
out
mov
dec
into
inc
js
cmp
jg
jns
shlb
jae
mov
rcr
pop
leave
scas
je
pop
cmpsb
rcr
mov
mov
jno
dec
in
xchg
jae
dec
fdiv
pop
mov
test
sub
xchg
inc
sti
push
je
or
add
or
pop
repnz
dec
inc
mov
mov
sbb
iret
orb
sbb
notb
inc
xchg
mov
sahf
xor
in
dec
xlat
cmp
in
pop
fwait
cltd
fildll
icebp
add
xlat
out
rcrl
adc
test
bound
lea
dec
movsb
pop
mov
cmpsl
pushf
stc
sub
sub
inc
jmp
dec
sbb
ret
pop
jmp
mov
mov
cltd
jl
and
and
fisttps
cmp
xchg
sub
js
test
push
adc
mov
in
mov
popa
inc
cltd
sbb
daa
inc
xchg
js
movsl
in
push
orb
ret
cmc
nopl
inc
push
dec
cwtl
or
in
aaa
inc
pop
cli
pop
adc
pop
es
ret
hlt
inc
ja
cmpsl
icebp
push
inc
inc
jge
jne
ss
in
addr16
fwait
xchg
mov
mov
imul
add
adc
out
mov
jne
lahf
cmpsl
pop
jbe
xor
sub
ljmp
mov
enter
push
push
fsts
mov
pop
movsl
inc
test
dec
or
push
xlat
stos
xchg
or
pop
mov
mov
out
dec
pop
ret
shll
mov
xor
outsb
xchg
loope
push
mov
add
jns
ljmp
inc
mov
inc
cmp
push
sbb
dec
or
scas
ss
mov
mov
cmp
inc
sub
enter
int3
arpl
dec
cli
icebp
ljmp
mov
dec
dec
dec
push
sub
pop
hlt
fldcw
cmp
adc
jae
push
dec
push
call
jl
repz
mov
insl
pop
or
push
repnz
out
inc
pop
adc
iret
js
jnp
in
dec
mov
xchg
mov
mov
xor
movsl
sbb
push
pop
adc
ja
xor
mov
repz
int3
ret
es
test
ret
push
mov
push
xchg
enter
icebp
cmpsb
dec
sbb
xchg
out
cmp
xchg
loope
inc
mov
scas
mov
fdiv
adcl
lock
testl
scas
shl
fsubr
jmp
mov
mov
sub
lods
push
adc
insl
cld
bound
fistpl
les
adc
xchg
pop
mov
dec
lea
jl
push
mov
pusha
test
pushf
scas
iret
test
cmp
inc
faddl
jb
bound
sbb
imul
jns
mov
pop
mov
stos
les
adc
mov
mov
repnz
push
lcall
test
inc
in
std
jne
sub
and
or
and
out
sub
xor
mull
mov
arpl
call
popa
jns
clc
mov
xlat
mov
aad
xor
adc
jp
outsl
cmc
ret
or
nop
rcll
or
pop
mov
mov
sub
imul
jbe
ret
xor
es
ffree
mov
jl
dec
js
mov
or
lret
and
in
pusha
mov
sbbb
sub
mov
mov
imul
jge
mov
cmp
xor
ret
ret
jmp
js
mov
push
fwait
cmp
lahf
push
lea
xchg
adc
lcall
adcb
jae
inc
push
mov
clc
adc
sbb
push
out
mov
mov
repnz
fcomps
cld
cs
or
inc
in
mov
bound
mov
dec
xlat
jge
mov
clc
aam
movsb
cmp
mov
imulb
push
push
jns
push
push
mov
or
pushf
and
call
mov
pop
and
mov
repnz
sub
cli
test
inc
mov
jns
and
inc
dec
stos
in
out
xlat
sahf
lret
lret
push
or
mov
movsb
dec
arpl
push
sbbb
pop
loope
inc
dec
aas
mov
cmp
repz
and
add
lea
icebp
dec
fdivrp
pop
sub
scas
inc
bound
inc
repz
inc
and
mov
out
push
dec
int3
jo
cmp
hlt
lods
cltd
fucomip
mov
or
inc
inc
test
sbb
mov
retw
stos
push
pop
mov
gs
subb
fucom
iret
xchg
and
cmp
adc
or
call
sub
sahf
repz
js
dec
aad
pop
and
cmc
mov
out
jmp
pop
xchg
and
mov
adc
pminub
fistpl
ljmp
ret
das
fbstp
xchg
loopne
aad
or
sub
dec
push
repz
lock
out
ja
call
or
jg
adc
inc
outsl
xchg
sub
xor
jmp
rcrl
jg
xchg
mov
lea
shlb
addr16
or
mov
push
mov
dec
notb
mov
into
jne
in
cmpsb
out
dec
add
dec
inc
mov
and
rol
repnz
push
add
sub
ljmp
fildll
pop
notl
inc
cld
test
pop
movsb
push
xchg
clc
inc
out
mov
push
pushf
imul
mov
or
sub
gs
fcoms
sub
hlt
push
add
ret
pop
fwait
jno
mov
adc
push
ret
cmp
loopne
in
icebp
and
aaa
push
es
cmpsl
daa
fidivl
je
les
in
sahf
and
or
adc
push
mov
mov
imul
pusha
xor
pop
cli
jne
ret
ret
imul
dec
add
push
mov
mov
cmp
jo
sbb
push
xchg
aaa
push
mov
ficompl
pop
xchg
jne
repz
data16
add
mov
gs
in
hlt
shl
and
nop
rcrb
cmpsb
xor
pop
aaa
test
sub
test
cmpsb
sub
fsubr
icebp
bound
mov
popf
sbb
fcomps
repz
data16
adc
add
push
cmpb
xchg
dec
pushf
insl
lret
lret
pop
sub
call
sbb
push
in
xchg
fldl2t
loope
inc
cmpsb
push
rcll
out
sarl
or
clc
or
cmpsl
aad
shr
sbb
dec
pop
loopne
adc
int
cs
or
std
jnp
xlat
sbb
addb
out
cmc
sahf
cmp
out
test
ret
repz
and
jns
dec
pop
push
testb
pop
mov
pop
mov
cmc
or
mov
or
or
push
shll
xor
jl
out
xchg
push
dec
lahf
ss
icebp
inc
jo
lock
inc
test
adc
xor
subl
leave
pop
sub
xchg
mov
fistl
push
repz
lret
lret
ss
inc
das
fnstsw
push
mov
push
out
sbb
adc
cs
add
testl
xorl
push
mov
xor
ljmp
push
popf
inc
mov
and
shlb
mov
ss
in
jns
lahf
jp
rcrl
push
dec
jnp
stos
mov
cvtpi2ps
movsl
pop
adc
aad
mov
lea
jl
fs
mov
cmc
mov
sti
mov
roll
mov
mulb
outsb
addr16
lcall
aam
hlt
movsl
call
and
in
adc
cltd
inc
sarb
fstpt
push
mov
pop
or
add
sub
adc
jne
mov
dec
add
add
mov
test
pop
cmp
dec
fidivrs
es
or
outsb
pop
lock
mov
add
push
mov
sbb
cs
sbb
leave
cmp
jle
pop
pusha
sub
frstor
or
dec
sub
int3
std
xchg
mov
jno
jecxz
xchg
lcall
cmpsb
push
push
call
pop
push
inc
fnstsw
std
aaa
xor
push
jbe
add
jbe
add
imul
lods
cmp
int3
xchg
push
gs
ds
in
xor
push
mul
in
lcall
mov
mov
cmp
js
add
test
xchg
scas
mull
mov
mov
adc
xchg
lods
xchg
idivl
pop
roll
hlt
mov
xchg
cmpsl
xchg
fadds
mov
and
inc
mov
sub
pop
mov
insl
and
jb
mov
inc
loop
sti
fwait
jle
mov
inc
adc
sbb
sbb
push
out
adc
insl
test
sahf
cli
lcall
adc
push
xchg
mov
adc
aas
inc
mov
mov
mov
test
imul
cmpsb
jp
out
icebp
movsl
mov
or
mov
sbb
stc
shl
js
push
subb
xor
lods
inc
ljmp
mov
lods
mov
fisttpll
into
inc
cmp
sub
pop
test
testb
sbb
mov
jp
adc
push
xor
test
not
imul
pop
mov
ljmp
jno
in
rcrl
hlt
ljmp
enter
sbb
mov
sbb
xchg
bound
outsl
pop
mulb
add
cltd
push
xorl
lret
hlt
mov
mov
fs
int3
pusha
pop
je
je
mov
xchg
lahf
orl
lret
mov
mov
dec
mov
testb
push
aas
jg
mov
push
jne
cmp
pop
fstp
xor
sarb
scas
fnstenv
out
jp
aad
push
push
cmp
pop
icebp
and
xchg
js
dec
add
mov
insl
cli
cmp
dec
imul
out
ss
sub
test
push
pop
adc
dec
mov
sub
ret
outsb
bound
rorb
aas
fldpi
mov
add
xor
and
xchg
push
mov
sbb
and
cld
ljmp
and
icebp
insb
movsl
fisttpl
mov
lahf
or
in
cmp
sbb
rcrb
dec
fistpll
lea
icebp
cs
cmpsb
push
xchg
leave
shll
and
or
jae
outsb
out
cmc
cwtl
repz
shll
push
gs
mov
mov
inc
mov
jne
shrl
cltd
jecxz
mov
push
test
adc
jo
cmp
pop
popf
leave
lcall
xor
dec
jbe
xor
mov
stc
sbb
xor
cmc
mov
dec
xchg
arpl
aaa
mov
jae
push
and
cwtl
insb
mov
movsb
cmp
or
mov
fldl
addr16
sub
jmp
xchg
sub
rcr
ret
call
pop
mov
int
pushf
scas
inc
fnstcw
adc
xchg
aam
and
or
adc
pop
jmp
popa
clc
and
sahf
xor
add
xchg
pop
xorl
mov
mov
xchg
add
icebp
loop
adc
rol
xor
leave
test
pop
adc
cmp
and
sbbl
in
aam
jp
cltd
js
push
out
dec
jge
sbb
outsb
jne
dec
mov
push
add
loop
icebp
push
xchg
and
lods
icebp
js
and
decb
lret
mov
femms
icebp
mov
cmp
mov
addr16
bound
mov
pushw
add
arpl
rcrb
and
mov
add
test
lahf
je
xchg
cwtl
aam
mov
sbb
loopne
das
and
insb
mov
pop
stc
cmc
add
sti
js
or
mov
out
sbb
imul
xor
movsb
imul
jmp
sub
loopne
or
dec
in
mov
sub
jnp
push
lds
add
rolb
pop
dec
and
out
test
test
pop
repz
pop
mov
cld
jg
add
icebp
sub
out
andl
leave
imul
pusha
jo
ljmp
orb
jo
stos
add
mov
mov
jg
inc
xlat
push
sbb
es
and
push
mov
int
jl
cltd
std
push
movsl
xchg
pop
jns
fiadds
mov
and
ljmp
mov
lahf
jbe
int
shlb
movsb
enter
dec
bound
mov
jns
mov
or
push
sub
mov
js
stos
sub
dec
mov
les
lds
pop
or
inc
test
roll
mov
or
mov
cmp
or
data16
stos
cmp
and
mov
fs
loope
add
fstps
mov
jns
clc
and
roll
xor
push
jno
js
mov
adc
test
imul
adc
sti
clc
xor
and
sub
sbb
lods
and
in
je
sub
jmp
sub
pop
xchg
inc
stos
mov
lret
jnp
lods
ret
out
nop
mov
mov
inc
popa
xchg
fcmovu
jae
xor
sti
mov
in
shlb
stc
cmpsl
cwtl
lods
mov
xlat
push
shl
out
xchg
pop
out
int3
xchg
jle
cmp
xor
or
pop
call
mov
scas
mov
shll
fadd
insb
push
mov
aas
cwtl
call
movsb
ss
hlt
addr16
testl
stos
sti
stc
imul
sbb
cmp
pop
leave
mov
jg
pusha
xor
stc
sub
sbb
imul
mov
jae
ffreep
mov
shrl
fwait
mov
sub
pop
jecxz
dec
mov
push
adc
mov
fs
push
cmp
jns
mov
dec
xor
mov
and
lds
es
gs
int3
jb
pop
sub
mov
int
mov
mov
xchg
mov
imul
mov
mov
lcall
inc
leave
stc
mov
mov
addr16
pusha
cli
push
rclb
shlb
arpl
mov
clc
push
push
inc
stos
int3
scas
xor
push
mov
xor
push
out
mov
sbb
sbb
outsb
lea
xchg
lods
mov
sub
clc
dec
sub
movsl
jb
iret
mov
inc
call
jge
sti
mov
sub
lahf
lods
and
iret
sub
xchg
mov
xchg
adc
lods
mov
inc
ret
stc
jns
movsb
and
add
imul
xchg
scas
pop
fcompl
mov
mov
pop
enter
pop
pop
stos
aam
jno
cmp
sbb
in
cmc
xor
push
xor
mov
adc
nop
inc
and
sahf
lods
adc
jns
sbb
ret
push
in
push
pop
and
mov
mov
lret
sub
loopne
pop
test
pop
movsb
ja
cmp
clc
adc
xchg
test
btc
out
aad
xchg
or
movsb
inc
sub
in
subl
or
outsl
push
lds
fwait
inc
sbb
xchg
mov
xchg
in
insl
pop
mov
ror
mov
sbb
jns
or
addr16
push
rorb
pop
adc
sbb
xlat
mov
inc
insb
xor
in
push
jne
icebp
mov
push
ret
lret
cld
test
jae
jne
mov
mov
inc
sahf
jp
cmc
scas
adc
inc
inc
or
inc
pop
sti
cmp
push
push
inc
mov
xchg
int
inc
cld
lds
imul
fsubrs
adc
mull
add
imul
cli
or
rcrl
or
lahf
arpl
cmp
adc
mov
jge
cwtl
aaa
stos
add
pop
inc
adc
cs
and
and
jp
adc
jbe
jbe
gs
mov
test
or
xor
hlt
in
add
push
xor
mov
movsl
cmp
lahf
cli
jno
ds
shl
stos
and
lcall
fidivs
adc
sub
cmpsl
mov
dec
mov
pop
push
daa
jbe
leave
nop
adc
xor
mov
pop
ljmp
jno
push
int3
lret
lret
rcr
mov
mov
ret
or
sahf
push
add
lea
rcrb
xor
cwtl
in
scas
cmpsb
cmp
xor
std
sub
cmpsl
jmp
rcr
sti
push
jecxz
add
adc
loop
inc
mov
jno
mov
test
fldenv
sub
mov
mov
ja
daa
data16
cmp
nop
xchg
add
daa
sbb
cmp
mov
out
sub
imul
repnz
enter
scas
lods
lds
shrl
xor
or
lahf
mov
pop
outsl
ja
mov
dec
cmpsb
or
sbb
outsb
iret
lods
imul
or
js
fldt
ds
imul
lock
lret
jmp
cld
jno
into
xchg
jns
jns
dec
push
mov
and
loope
repz
pop
jg
addr16
fldt
push
xchg
aad
push
and
hlt
aad
lcall
cmc
sbb
test
pop
rcll
test
arpl
hlt
fldt
or
jl
mov
and
xor
sbb
call
mov
dec
sti
aas
add
add
pop
in
sbb
loopne
es
add
into
pop
inc
add
cs
test
xchg
inc
nop
dec
jecxz
ja
in
inc
push
stc
iret
jae
or
ret
ds
rcll
imul
sar
sbb
dec
ficoms
and
sbb
mov
sbb
jbe
aam
or
dec
icebp
pop
mov
add
aaa
cmpsl
push
inc
popa
adc
stos
outsb
add
lret
enter
xchg
sub
push
mov
add
stos
inc
outsl
je
sbb
and
dec
cmp
mov
cmpsb
push
jle
lods
inc
mov
inc
xor
inc
fsubp
mov
lods
aam
add
sbb
push
xchg
sub
adc
and
lods
imul
pop
adc
nop
andb
xchg
lock
stos
aad
repz
add
jge
adc
fisubrs
mov
adc
aaa
call
cli
out
loop
push
mov
loope
and
sub
mov
popf
and
fstps
aad
or
sub
rol
add
xor
pop
xor
adc
idiv
incb
jne
rol
pop
adc
stc
push
push
push
xor
cmp
daa
cmc
xor
mov
out
or
mov
xchg
sub
sti
fiaddl
or
xor
lock
pop
out
jle
cmp
lods
cli
orl
mov
sbb
cwtl
xor
insl
mov
adc
xlat
iret
adc
mov
sub
pop
jb
mov
cmp
out
sti
out
out
mov
pop
xor
in
scas
imul
iret
and
aas
int3
scas
ds
sbb
jmp
jg
adc
dec
pop
enter
mov
inc
fs
loop
orl
lcall
push
js
dec
lods
ljmp
xchg
ja
xacquire
cmp
mov
cmp
and
pop
lods
iret
lcall
dec
jo
lock
pop
out
sub
pop
adc
add
xrelease
mov
scas
sub
js
add
jnp
inc
jb
cli
cmp
inc
mov
pop
stc
mov
pop
mov
movl
push
mov
ljmp
xorl
xlat
push
out
loopne
mov
loopne
mov
adc
mov
fisttps
sti
mov
xchg
loopne
push
es
ljmp
test
das
or
push
inc
andl
adc
cli
test
add
adc
pop
cmp
loop
stos
daa
pop
pop
out
enter
push
ljmp
push
mov
mov
dec
testb
cmpsb
add
fdivr
repz
movsl
in
fsubrl
inc
loop
arpl
fcmovnb
jp
adcl
aaa
shrb
iret
mov
add
dec
pushf
imul
subb
cli
sbb
divb
icebp
jge
outsl
pop
popf
call
mov
enter
shlb
test
das
cmp
loopne
loopne
sub
mov
ret
xor
movsb
lret
fucomip
xchg
shlb
cmpsl
cmp
cld
fsubrs
ja
sarl
data16
xchg
int3
inc
sbb
push
out
jl
repz
dec
dec
push
sbb
aas
jmp
push
xchg
sub
xchg
test
cs
lods
test
fidivs
xchg
loop
in
mov
ret
dec
and
push
mov
push
imul
jo
mov
pop
sub
jbe
psubusb
test
add
out
out
movsb
fadds
test
iret
mov
jbe
movsl
push
sbb
xlat
cmp
mov
ffreep
mov
inc
and
in
insb
xor
dec
fwait
call
rclb
jo
xchg
pop
pop
inc
divb
sub
lea
push
bound
negl
aam
popf
sahf
or
ret
push
mov
push
in
cmp
mov
dec
add
flds
movsl
sar
lock
int3
pop
mov
lds
and
sub
aam
addb
cmp
and
fsubs
xchg
sub
movsb
rorb
sbb
mov
iret
arpl
fisubrl
add
stc
mov
and
lret
repnz
cmpsw
ds
push
add
adc
and
shrb
adc
or
mov
inc
sbb
mov
das
movsb
adc
dec
lahf
adc
dec
adc
jp
arpl
rorl
and
lret
fisubrs
pop
rcrl
inc
sub
add
pop
fnstcw
push
fsubrp
loopne
push
mov
jmp
push
jne
jo
push
push
cmc
in
fwait
pop
pop
aam
lret
pop
int3
and
in
test
js
aad
popa
mov
gs
ret
mov
xlat
enter
fistpl
scas
bound
jl
sbb
js
imul
and
scas
mov
in
sti
insb
pop
testb
push
mov
mov
push
xchg
mov
aas
cwtl
in
push
in
inc
mov
xor
xor
loope
imul
xchg
add
ss
and
mov
cli
cmp
xchg
cltd
jne
pop
lea
in
rol
add
out
push
sarl
jae
scas
dec
cmpsb
push
cmp
push
sarl
and
xchg
mov
adc
mov
xchg
andl
cltd
lods
inc
mov
fisubrl
das
insb
pusha
pop
xchg
mov
cld
out
pop
scas
test
or
lahf
xchg
sub
mov
xor
insl
cmpsb
sub
xlat
mov
lret
jge
and
test
mov
push
sbb
pop
test
lahf
and
leave
and
mov
rorb
repnz
lret
lcall
ja
andl
adc
test
mov
mov
call
xchg
fidivl
fidivl
push
es
inc
fidivrs
faddp
movsb
jl
pop
aaa
lret
xor
ss
xchg
fstps
pop
push
std
out
adc
xor
aad
adc
adc
pop
je
fcoms
and
sub
jbe
dec
adc
inc
sub
push
nop
sub
xchg
mov
sti
mov
mov
inc
idiv
xchg
nop
out
int3
sbb
daa
inc
jnp
fdivl
cmpb
xor
int3
xlat
or
ficoms
jle
adc
adc
and
ss
dec
sbb
pop
lret
sbb
sbb
xlat
repz
jb
fs
dec
inc
pusha
xlat
jmp
and
fs
pop
loopne
push
popf
jmp
cltd
dec
int
js
fidivrs
fwait
jns
addl
test
sbb
mov
mov
lahf
rcrl
push
cwtl
in
inc
jae
insb
jg
mov
cwtl
nop
das
imul
fimull
sbb
cmp
flds
mov
pop
dec
mov
ficompl
pop
adc
jns
jno
mov
sbb
outsb
jl
lahf
mov
cwtl
lret
in
imul
mov
xchg
mov
movsl
mov
mov
cmc
push
jno
shll
mov
cmpl
jle
loopne
cmc
ffree
pop
xlat
dec
jo
mov
push
add
dec
fistpll
push
cmp
jmp
adc
mov
out
insl
sbbl
test
loopne
std
pop
popf
cs
cmp
popf
call
cwtl
mov
or
lret
shrl
daa
mov
scas
mov
psllq
mov
cmp
xchg
push
lret
mov
push
sahf
leave
pusha
sarl
inc
movsb
ret
out
cmc
leave
ret
fiadds
ja
cmp
mov
push
mov
mov
push
imul
jl
shrb
push
fists
in
ret
out
pop
push
mov
add
add
sub
ljmp
lods
mov
dec
pop
repz
inc
out
xchg
xor
int3
xchg
test
aam
cmpsl
cld
in
push
mov
stos
add
add
popa
mov
icebp
sahf
pop
mov
movsb
outsb
pusha
negl
xor
aaa
mov
add
xor
stos
mov
mov
out
dec
cmp
jnp
mov
jae
or
pop
push
jmp
mov
mov
pusha
cmp
adc
cmp
lods
repz
xchg
jle
xor
xchg
data16
lret
push
push
or
and
mov
test
daa
mov
popf
jge
push
push
sti
xor
xor
into
insl
push
dec
loop
adc
xchg
or
push
fsubr
xchg
add
dec
popf
mov
sahf
pop
jge
sbb
push
repz
cmp
scas
mov
dec
mov
iret
xor
clc
loope
push
incb
cli
inc
enter
call
shrl
adc
add
mov
fcomi
adc
dec
xor
test
ja
mov
mov
movsb
les
push
xchg
adc
idivl
sbb
xchg
incl
loopne
cmc
fildll
mov
sub
jae
jo
mov
sti
imul
push
dec
mov
sbb
push
out
dec
incl
stos
stc
scas
mov
les
mov
cli
mov
loop
mov
and
inc
les
sbb
sbb
sub
ja
push
imul
leave
sbb
cld
sbb
out
popa
sbb
jmp
dec
sti
jl
xor
iret
xchg
adc
jg
dec
cwtl
in
mov
dec
or
xor
jne
loop
pop
fwait
jmp
jge
adc
lret
cmc
xor
or
sub
jne
rol
fwait
in
push
push
pushf
testl
add
test
iret
or
lret
pusha
movl
mov
dec
cmp
ljmp
jno
loop
pop
fwait
sbb
mov
movsl
push
inc
cmpsl
xor
out
and
js
cmpsb
inc
in
mov
xor
clc
shrl
jmp
xchg
jbe
inc
jge
jle
in
testl
cmp
jmp
jg
pop
test
scas
inc
sub
adc
adc
xchg
cs
stc
ret
or
mov
jbe
jb
movsb
cwtl
xchg
add
out
fucomp
xlat
adc
cwtl
jmp
mov
scas
xchg
test
add
dec
loopne
icebp
fnstcw
adc
xor
pop
inc
insb
fdivrl
mov
sub
inc
xchg
jmp
inc
cltd
xor
sbb
outsl
mov
mov
pop
pop
add
inc
mov
mov
add
fadd
mov
pop
add
jo
lcall
test
push
push
cmc
push
inc
std
push
scas
sub
mov
add
nop
pop
movsl
dec
adc
push
pop
jae
imul
je
je
movsb
imul
adc
ss
xchg
adc
and
push
and
cmpsb
les
adc
xor
sub
pop
adc
stos
testb
mov
mov
rcl
clc
sbb
int3
shlb
loope
mov
orl
jl
mov
inc
mov
inc
out
lcall
fisubs
mov
jae
pushl
les
ret
pop
xor
sbbl
pushf
pop
mov
sti
in
xchg
hlt
andl
pushf
stos
or
cmp
int
sbb
dec
mov
jle
pop
and
movsb
pop
add
cmp
ja
and
inc
sbb
xchg
sub
insl
add
cwtl
pop
jbe
mov
mov
jnp
jmp
xchg
pop
cmc
stos
test
sarb
cmp
jg
push
adc
and
push
movsl
xchg
sti
sub
imul
push
and
lods
mov
pop
popa
addb
scas
jmp
std
xchg
lock
sbb
adc
int3
cmp
mov
pop
testl
rcrb
in
mov
das
add
data16
inc
imul
xchg
enter
std
fs
push
int3
xchg
shlb
dec
aam
pop
xor
mov
out
test
sbb
cmpsb
mov
call
adc
subl
cmc
add
iret
divl
xchg
adc
xchg
push
rorl
pop
mov
xchg
mov
sbbl
cmp
add
lods
add
pop
movsb
xor
lea
dec
lods
or
fistpll
xchg
ljmp
jmp
shrb
fidivs
xchg
ds
mov
or
mov
pop
xchg
pop
fucomip
xor
jmp
addr16
ds
dec
in
pop
std
xchg
jg
add
xchg
sbb
add
sub
pusha
aaa
cmp
aam
cmp
mov
fbstp
sub
daa
xor
mov
dec
xor
push
ret
pslld
mov
sub
jge
dec
sub
xchg
cmpsl
xor
stos
test
ljmp
aam
vandpd
or
aaa
int
lcall
add
popl
out
and
mov
cli
sbb
lock
and
dec
xchg
mov
pop
xchg
xchg
xor
sub
je
imul
push
das
jle
pop
hlt
int3
mov
pop
jnp
subb
outsl
xor
sub
movsl
jb
dec
push
aad
xor
testb
adc
bound
mov
dec
es
pop
sub
pop
shl
insb
sbb
shll
xchg
adc
or
cmp
cmpsl
jecxz
daa
inc
roll
ror
mov
daa
pop
xchg
jne
mov
adc
movsl
xchg
scas
pop
in
aaa
nop
popf
aam
aad
stos
push
orl
mov
push
cmp
out
sub
jne
subl
mov
cld
ret
pop
jp
or
push
adc
fmul
data16
ss
pop
mov
sub
outsl
enter
pop
cmpsl
and
popf
sbb
fsubrs
pop
enter
imull
sub
mov
jnp
cs
shlb
sbb
pop
push
cmp
adc
int3
iret
and
mov
inc
lahf
jecxz
pusha
data16
adc
leave
mov
fidivl
mov
jmp
cmp
outsl
jnp
adc
int
pop
mov
inc
sbb
push
and
sbb
jae
sbb
aas
fwait
addr16
mov
xor
jmp
mov
mov
xor
sbb
and
cmpsl
inc
into
popf
and
adc
mov
mov
sub
xchg
push
in
popa
div
je
sub
out
ds
mov
mov
int3
push
lcall
cmp
stos
inc
pop
out
je
movsb
aaa
pop
loopne
jg
mov
fucomi
pop
or
movsb
mov
iret
fnsave
sub
cmpsl
dec
lds
inc
dec
jg
cmpxchg8b
lock
xchg
in
shrb
xor
inc
fwait
hlt
adc
fcmovnbe
hlt
sbbl
push
out
je
loop
xor
cmp
fs
add
mov
mov
lahf
mov
ds
mov
jne
icebp
xchg
or
mov
pop
daa
test
sbb
or
stos
adc
rcrl
push
xchg
pop
fbstp
repz
out
test
push
lea
outsb
jl
scas
dec
in
xchg
jns
cltd
cli
imul
pop
add
in
fcompl
jne
testl
mov
push
test
fisubrl
jl
lcall
hlt
iret
popf
pop
jecxz
push
push
xchg
mov
adc
jge
movsb
jbe
push
lds
cmc
in
xor
idivl
iret
sbb
xor
mov
xorl
dec
sbb
ret
sbbb
clc
sub
mov
aad
cltd
inc
xchg
sti
inc
decb
mov
sbb
jmp
cmc
cmp
iret
jg
or
jl
lret
xlat
xchg
sbb
jl
push
inc
imul
dec
movsl
or
pop
imul
add
inc
in
movsb
test
pop
bound
mov
stos
bound
das
cmpsl
dec
xchg
dec
pop
movb
je
sbb
and
cli
xor
pop
jns
popa
ret
sub
cmp
in
xchg
mov
xchg
add
add
mov
inc
lock
jmp
sti
cmp
mov
test
ret
aam
push
rorl
fistpll
mov
pop
sbb
loope
sub
xor
lret
cs
movsb
mov
push
loop
and
mov
loopne
dec
fwait
cmp
fucom
xor
inc
sbb
imul
out
test
in
popa
aad
mov
inc
xchg
mov
les
repnz
pop
test
es
cmp
into
fmuls
adc
in
es
cmpsb
ficoms
sbb
hlt
jl
push
mov
fidivl
aad
cs
loope
cmp
cmp
xlat
ret
sbb
or
pusha
inc
push
xchg
sub
push
inc
out
lods
add
ficomps
dec
jae
mov
fcomip
push
in
and
inc
jae
je
mov
les
icebp
jl
push
jl
jno
inc
sub
xchg
push
push
mulb
cltd
cwtl
ret
loopne
cltd
and
mov
or
data16
add
or
dec
dec
jmp
sub
stos
mov
mov
push
push
pop
mov
push
mov
inc
add
ljmp
adcl
imul
in
or
movb
or
cmp
sahf
clc
aam
xor
push
test
scas
jno
cltd
stos
shrl
inc
sbb
stos
aaa
jl
dec
aaa
dec
sub
push
fimuls
jmp
loop
notb
xchg
cmp
movsb
popa
jge
sahf
loop
out
push
push
mov
xor
sbb
fsts
add
lcall
cmpsb
cmp
aas
cmpb
mov
call
aas
mov
std
adc
insb
mov
shrl
mov
cmpsb
mov
ljmp
or
push
out
xchg
sub
subb
pop
mov
ja
or
xchg
jmp
push
rcrl
add
mov
or
and
or
push
add
and
rcrl
mov
aam
sub
dec
js
fldl
addr16
lea
jbe
ret
imul
insl
aas
popa
imul
inc
ds
mov
enter
insb
mov
rep
mov
cmp
mov
xchg
mov
or
nop
aas
jnp
jb
aad
cmovae
cmp
or
push
xorb
imul
ret
out
movsb
sub
pop
loopne
mov
stos
arpl
jl
push
test
pusha
cmp
popa
xchg
insl
lock
mov
inc
outsb
daa
test
test
into
cmpsl
cmp
leave
rcrl
sbb
aam
mov
sarl
clc
add
inc
out
or
jmp
lret
push
loopne
push
cmp
dec
imulb
xor
sub
sbb
out
push
mov
add
data16
mov
ret
pusha
repz
dec
enter
outsb
leave
mov
dec
sbb
fsubr
xchg
or
push
das
std
push
push
fwait
sub
mov
sub
add
into
xor
cs
sbb
jp
int3
mov
int
fidivl
pop
outsb
imul
mov
pushf
and
push
jb
xchg
mov
dec
fdivrl
inc
and
ret
mov
data16
xchg
xchg
cwtl
mov
mov
cmp
ret
cmp
lcall
enter
pop
enter
add
xchg
push
out
and
mov
sbb
jl
push
hlt
cli
sbb
cmp
add
int
in
imul
jmp
xchg
and
repz
xchg
jne
shll
lds
mov
xchg
fsubrl
test
jae
in
rcll
popa
pop
lahf
push
add
loope
push
in
adc
out
push
fistl
jnp
sbb
enter
sbb
and
jb
insl
mov
ja
add
outsb
xor
das
cmc
mov
push
adc
or
jle
dec
es
push
xlat
inc
pushf
mov
mov
sti
jnp
rolb
or
stos
fsubs
lahf
shll
ret
test
and
pop
loope
or
cmp
sub
xchg
ds
bound
mov
xor
or
jne
or
mov
pop
adc
and
movsb
icebp
sbb
and
imul
xchg
fcompl
shll
aaa
push
das
add
mov
pushf
scas
mov
inc
fiadds
scas
xchg
and
pop
push
call
mov
out
mov
pop
imul
push
cmp
loope
pop
loopne
xorb
xchg
mov
scas
lds
mov
or
and
pop
cmp
out
push
push
adc
aam
mov
out
xchg
sbb
cmc
dec
dec
shrl
jle
jl
pop
mov
lcall
int
pop
icebp
insb
mov
dec
hlt
sbb
je
imulb
cmp
adc
mov
pop
mov
shrl
mov
and
lods
repnz
mov
mov
adcl
pop
scas
add
push
sbb
cmp
dec
inc
call
sbb
ljmp
in
mov
xchg
lcall
sub
dec
inc
pop
ss
lods
addr16
cltd
js
xchg
mov
into
pop
shl
sub
add
scas
mov
lds
adc
mov
or
sbb
mov
inc
insl
ljmp
mov
sbb
pop
enter
pop
call
dec
dec
enter
outsl
mov
xor
outsl
rclb
adc
inc
cltd
shl
scas
inc
data16
pop
mov
inc
jecxz
mov
mov
dec
push
decl
cmpsl
inc
pop
in
out
and
and
stos
jae
cmp
jecxz
stc
in
std
fiaddl
inc
inc
dec
or
or
outsb
mov
lock
xor
jle
sbb
pop
xor
popa
aaa
mov
pop
test
in
in
jo
push
lds
jne
inc
xchg
imul
popf
cld
push
mov
out
ret
adc
and
adc
add
test
cld
out
add
test
jmp
lods
pusha
idiv
add
jg
cltd
icebp
insl
test
add
daa
dec
fldcw
lds
and
stos
sti
mov
fdivrl
lahf
inc
or
lock
mov
pop
sbb
jg
inc
fldz
lahf
cmp
add
popa
xorb
mov
psraw
inc
pop
add
mov
sub
sbbl
xor
push
pushf
addr16
add
xchg
int
mov
pop
cltd
std
sub
jle
mov
mov
dec
adc
fists
cltd
push
mov
in
or
xor
outsb
insb
sbbb
addb
xor
pop
adc
jle
and
test
out
into
xchg
repnz
mov
mov
sub
jl
fidivrs
aad
stos
imul
lods
dec
mov
testb
or
sti
adc
or
inc
cmc
xchg
js
pop
scas
aaa
lret
mov
pop
cmp
fcoms
mov
cmpps
hlt
xor
arpl
sub
lods
pop
xor
adc
jno
mov
ds
push
sub
pop
in
icebp
mov
and
popa
cmpl
or
rorl
xor
sub
jo
or
and
or
cli
lahf
xor
fmul
pop
out
ret
pop
out
cmp
aaa
push
mov
popf
or
or
into
cmp
dec
cmp
pop
sti
xchg
bound
xor
jg
sahf
lret
out
sarl
repz
pusha
cmpsl
ja
pop
dec
scas
pop
mov
sbb
insb
sbb
or
cwtl
xchg
add
pop
mov
movsl
movsl
cmp
jnp
adc
shl
jae
and
push
push
cmp
test
imul
inc
lods
add
in
push
icebp
jo
dec
xor
xor
inc
fldcw
or
cmp
out
sub
pop
ja
test
lods
ljmp
call
mov
mov
cltd
pop
and
aam
inc
sbb
idiv
pop
insl
xor
mov
popa
cmp
pop
jo
xchg
and
mov
xchg
xor
and
or
add
inc
imul
adc
test
push
addr16
inc
lret
jne
sbb
fwait
lcall
insl
lock
sub
pop
or
cmp
dec
movsl
das
push
in
jl
lds
sar
cmpb
or
out
in
mov
adc
mov
sub
dec
dec
fdivs
add
pop
cmp
xlat
pop
aad
lea
sbb
pushf
pop
add
test
aam
jle
pop
mov
xchg
clc
jge
mov
xchg
xchg
sbb
mov
jecxz
imul
aad
jbe
jge
or
shll
dec
lret
jne
mov
dec
mov
jns
inc
inc
xchg
mov
clc
dec
inc
int
jg
aas
pop
bnd
pop
push
cmp
outsb
es
and
into
ret
movsl
xor
leave
pusha
cmp
in
ljmp
jecxz
dec
nop
sbbl
or
imul
scas
ljmp
inc
or
cli
lret
add
adc
popa
xor
push
insl
push
or
sub
mov
adc
xchg
inc
fisubl
inc
mov
shlb
fstl
pop
mov
mov
pop
ljmp
outsl
ret
testb
in
sbb
add
sub
xchg
pop
rorb
jno
jb
shlb
add
adc
mov
fldenv
adc
xchg
mov
test
add
imul
scas
mov
mov
fucomp
mov
data16
fisubs
int3
adc
mov
mov
fsubrl
sti
mov
jle
add
sbb
jb
pop
movsl
and
clc
adc
rcrb
and
push
dec
in
pop
dec
sub
mov
xor
mov
jne
loopne
push
repnz
mov
dec
pop
jmp
push
popf
lret
in
gs
inc
fs
or
popf
pop
movsl
mov
sbb
das
into
jge
xor
pushw
sbb
dec
aaa
in
shll
add
mull
in
sarb
and
cmp
xchg
jmp
dec
sbb
dec
jo
js
popf
jno
inc
inc
pop
js
clc
xchg
out
push
and
jmp
push
hlt
pop
cmp
or
xor
frstor
out
shrb
sbb
or
je
mov
in
and
fstp
jae
or
movsb
or
pop
mov
inc
loope
lret
rcl
jg
push
push
mov
inc
aam
leave
inc
bound
stos
imul
cmp
lods
mov
adc
add
lcall
dec
pop
xchg
mov
cmp
xor
stc
sbb
int3
in
mov
mov
lds
push
outsl
sbb
dec
rcr
push
pop
fiadds
cmp
iret
jle
aad
fisttpl
fistpll
fisubl
mov
cmpsl
pop
addr16
xor
outsl
add
lods
fidivs
push
ds
xchg
pop
jbe
and
rcll
es
addr16
xor
xchg
sti
cmpsl
xor
rolb
mov
ljmp
add
push
mov
push
leave
das
aas
pop
and
sub
mov
sarb
icebp
icebp
mov
das
mov
push
mov
aam
ret
mov
stos
out
fidivs
dec
add
cmpsl
sub
sahf
inc
inc
jb
ja
pop
sbb
ljmp
fwait
mov
mov
lret
repz
subl
insl
insb
mov
sbb
mov
negb
sbbl
xchg
dec
in
outsb
andb
sbb
popl
sbb
popa
add
adc
shlb
adc
pop
add
xor
jmp
cmpsl
pop
into
inc
and
lods
sbb
daa
dec
mov
dec
pop
pop
jmp
xchg
push
ljmp
jb
popf
dec
jmp
or
xor
data16
test
jb
aam
dec
icebp
insb
dec
cld
pop
ja
arpl
xchg
mov
push
push
pushf
lret
jns
add
and
outsb
fcmovnbe
jb
push
dec
fisubrl
or
pop
lahf
add
add
jmp
movsl
sub
jle
cwtl
mov
cwtl
cwtl
add
inc
sbb
mov
mov
fwait
repz
fstp
je
mov
stc
sbb
sti
cmp
sub
test
mov
lret
xlat
jbe
inc
stc
aad
sbb
mov
sbb
mov
adc
or
loopne
or
repnz
imulb
push
cwtl
inc
add
push
in
cmc
cli
aam
xor
inc
std
add
lcall
adc
leave
gs
xor
dec
mov
inc
xor
shl
lea
mov
xlat
sub
and
mov
in
cmpsl
frstor
fsubr
cmp
cs
enter
movsl
addl
in
and
adc
sbb
dec
insl
pop
xor
stc
push
pushf
jle
mov
xchg
or
jp
fwait
imul
fdivs
cld
das
inc
arpl
cltd
xor
inc
aaa
scas
ss
popa
push
cwtl
in
push
mov
ret
fldt
test
mov
loop
ficomps
outsl
mov
push
pop
xchg
dec
pop
test
cld
push
mull
sbb
or
push
stos
inc
pop
dec
add
movsl
mov
pop
and
mov
out
ret
lds
dec
sub
mul
adc
int3
in
rorb
push
out
xorb
xchg
pop
jno
icebp
es
cmpsl
inc
imul
cmp
stos
xlat
pushf
stos
sub
clc
xor
js
adc
ja
insl
jno
xchg
insl
jnp
in
outsb
ret
lds
mov
lock
in
sub
inc
jae
int
jbe
repnz
xchg
lods
adc
cld
xchg
inc
and
pop
roll
adc
loopne
pop
pop
mov
jno
popf
pop
loope
aas
clc
sbb
xlat
sbb
adc
inc
cmp
shrb
dec
lds
and
xchg
leave
and
out
xchg
hlt
lea
mov
pop
insl
inc
je
pop
jl
orb
jg
dec
out
mov
pop
loope
fs
hlt
xchg
and
mov
mov
mov
sub
inc
jecxz
lea
mov
lods
pusha
ds
roll
push
xchg
out
mov
pop
in
pop
cltd
lcall
outsl
sub
test
addl
xor
arpl
adc
add
add
in
lods
cmp
ss
sub
sub
or
pop
jle
call
call
jge
mov
and
push
jmp
shll
stc
mov
das
or
out
mov
les
fbld
stos
lock
xor
pop
inc
stc
cld
in
push
fwait
sbb
les
hlt
pop
adc
hlt
mov
dec
or
jp
mov
lea
xchg
pop
outsb
mov
andl
dec
out
aas
cmpsb
fstpt
inc
xor
ja
js
jmp
fidivs
add
adc
push
sbb
les
es
into
jne
test
jl
mov
or
into
push
inc
adc
push
adc
inc
data16
add
or
pop
sub
pop
insb
repz
jmp
push
adc
subb
mov
jno
shr
xchg
mov
sbb
mov
push
inc
inc
xchg
mov
pop
cltd
repz
add
mov
mov
xor
arpl
cld
mov
inc
jle,pn
xchg
or
inc
cmp
push
iret
fisttpl
dec
out
decb
adc
push
push
test
jecxz
cli
mov
or
jmp
insl
jl
iret
stos
xchg
jns
mov
ljmp
inc
scas
scas
push
ds
inc
ffree
movsl
movsl
xchg
sub
ret
mov
pop
stc
mov
sbb
sub
mov
cmc
xchg
xor
pop
scas
adc
dec
mov
sbb
stos
jge
pop
adc
sar
xchg
call
test
push
ret
inc
stc
cmp
push
push
xor
cli
lea
jmp
or
pop
cld
cmpsl
jae
cltd
mov
mov
bndstx
jecxz
ret
pop
cld
push
leave
mov
mov
xor
jns
inc
jo
mov
addr16
lret
daa
rcr
push
bound
jmp
ret
pop
pushf
jle
dec
pop
stc
push
ljmp
inc
inc
xor
pop
lock
cmp
pcmpgtb
fwait
pushf
lods
push
loope
adc
aad
mov
test
repz
pushf
xchg
pop
add
fldl
add
mov
and
sub
jl
repnz
mov
add
adc
and
sbb
adc
cmp
xchg
cltd
xor
add
sbb
scas
mov
es
jge
inc
ds
fnsave
in
test
aas
adc
in
xor
jecxz
cli
insl
jg
aad
adc
ss
and
in
mov
je
jns
iret
fbstp
ficomps
or
bound
adc
cmp
adc
shll
lcall
cmp
sbbb
or
divl
lods
cli
aam
fsubl
push
ljmp
jno
popa
mov
pop
or
stc
aad
mov
fdivs
cmp
shrl
push
hlt
mov
pushl
shlb
inc
or
sbb
mov
cli
inc
or
xlat
ret
incl
and
fists
mov
xchg
jne
into
fbld
cmp
xchg
jl
sbb
clc
mov
or
arpl
xor
pop
xchg
jp
loope
out
and
and
mov
or
or
jbe
dec
dec
dec
dec
xchg
or
mov
cmovne
adc
mov
shlb
adc
mov
xor
insb
xchg
mov
xchg
je
loope
jne
ljmp
xor
xchg
jp
push
jno
test
add
jne
or
xchg
add
pushf
sub
mov
mov
insl
enter
cld
iret
shr
mov
loopne
jl
mov
xor
in
into
aaa
mov
loop
jb
sahf
fmuls
sbbl
stos
jne
ja
cld
inc
add
out
fisubrl
shrb
xor
cmp
push
jp
xchg
sbb
mov
mov
push
js
xchg
jmp
sbb
cmp
sahf
daa
scas
mov
out
or
inc
leave
scas
inc
sti
test
jae
int
dec
xchg
insb
add
xlat
mov
pop
add
repnz
fistpll
push
faddl
cmpsl
cs
stos
in
pop
repnz
push
mov
jl
icebp
test
cmp
jge
push
fisubl
sub
or
test
mov
fnsave
lock
push
xchg
cwtl
pop
or
mov
or
movsb
jl
add
in
and
jge
mov
jl
cli
add
xor
mov
sbb
jmp
pop
lcall
ret
in
push
mov
and
outsb
rcrb
mov
xchg
out
rclb
sub
push
mov
ficoms
aam
dec
outsl
cmp
cwtl
lret
sti
mov
adc
adc
popa
call
mov
arpl
xor
std
sbb
sbbl
aad
push
outsl
push
mov
dec
nop
xchg
addr16
push
push
pop
dec
das
fbstp
addr16
dec
add
mov
xchg
fnstcw
int
mov
shrb
mov
and
fcomi
mov
sbb
test
jge
scas
iret
js
add
clc
sbb
mov
cs
cmpsb
add
cmp
shrb
inc
fiadds
ffree
xor
sub
mov
xchg
arpl
mov
outsb
in
adc
add
sbb
cmp
gs
popa
ret
jle
mov
adcb
mov
pop
dec
leave
add
aad
cli
dec
mov
pop
and
in
cmp
mov
adc
fsubs
out
mov
sub
sti
les
mov
fcompl
adc
xor
test
ret
mov
ljmp
out
mov
mov
cwtl
jp
xchg
subl
ret
std
cltd
repnz
insb
adc
pop
outsl
movsb
adc
test
inc
out
fcomps
xor
add
jecxz
dec
cmp
inc
jae
cmpsl
fwait
sub
imul
mov
cmp
lods
pop
call
test
outsl
shll
mov
fcoms
mov
mov
insb
add
outsb
test
mov
sbb
push
mov
hlt
mov
loop
adc
sbbl
mov
or
cmp
test
mov
jno
jmp
rolb
int
xor
mov
aaa
aam
sub
aas
push
sbb
lret
les
fucomp
sbbb
test
dec
sbb
mov
xor
out
jae
dec
sub
leave
arpl
push
mov
mov
pop
jle
shlb
mov
inc
xor
cmpsl
ljmp
and
or
and
sub
xor
jl
sbb
jecxz
inc
imul
imul
in
cmc
mov
cmp
dec
lea
ret
rclb
insl
add
scas
in
test
jno
xor
in
mov
push
xor
or
jle
fs
pop
jbe
int
push
ljmp
pop
out
and
push
cmpsl
testl
or
inc
mov
outsb
inc
popa
addb
shlb
xchg
mov
and
sub
fcom
loop
outsb
adc
outsl
jge
jl
mov
mov
fcompl
in
dec
adc
out
xor
push
ret
arpl
pop
aas
and
jno
cmc
enter
fstps
leave
push
imul
adc
xchg
jns
enter
iret
fs
inc
ss
mov
mov
mov
lret
cmp
shll
fcmove
push
clc
xchg
mov
pusha
ja
pop
add
imul
nop
cmc
ret
fwait
in
jns
fs
xchg
push
sbb
mov
imul
hlt
lcall
ror
psubusw
sbb
sub
or
ret
dec
mov
les
std
rcll
ret
jg
add
outsb
testl
pop
not
aam
out
mov
mov
jp
in
xchg
lcall
mov
adc
je
inc
mov
push
or
adc
inc
cs
daa
pop
movsl
les
stos
movsl
mov
aam
cmp
xchg
jne
out
stos
ficoms
bswap
in
mov
insb
xchg
mov
jno
xchg
idivb
rcpps
xchg
sub
fistl
or
pop
scas
in
insb
js
mov
mov
stos
mov
icebp
jns
fdivl
push
xchg
inc
imul
inc
aas
mov
dec
jecxz
jne
or
ret
push
or
sti
dec
push
and
insb
mov
push
rcl
mov
pop
dec
xor
repnz
xchg
add
xchg
add
movsb
cmp
push
call
shlb
pop
sbb
and
ss
xor
mov
divl
clc
rolb
stos
mov
jae
pop
xchg
and
inc
dec
pop
sti
mov
insb
xchg
aaa
pop
add
inc
fistpl
arpl
xchg
aas
bound
push
xchg
sub
cmc
mov
push
clc
jbe
mov
das
cwtl
mov
add
out
push
cmp
xchg
lcall
arpl
test
adc
ljmp
inc
lret
testl
andb
pop
mov
inc
or
and
adc
shlb
stos
lret
insb
pop
inc
gs
lea
adc
mov
pushf
jb
or
xchg
arpl
sbb
add
sbb
das
and
mov
addb
pop
fs
fdivl
test
sbb
shrb
add
cwtl
dec
stos
mov
out
in
xorl
movsb
iret
loope
fdivl
les
xchg
mov
fdivs
es
adc
cmp
daa
xor
dec
in
cmp
add
lods
push
mov
xchg
dec
push
adc
pusha
jmp
aad
into
data16
sti
inc
ss
and
mov
and
lods
lret
clc
sub
lahf
fistpll
dec
stc
cs
xlat
test
dec
fs
fwait
loopne
inc
in
loop
jmp
int
push
cli
adc
test
dec
xchg
int
ret
outsb
adc
fisttps
cld
xchg
xchg
sarb
mov
fsubrp
hlt
dec
call
mov
out
inc
adcl
rolb
pop
sahf
pop
test
daa
mov
arpl
cli
or
and
movsl
xor
shrl
clc
pop
push
pop
fsubr
std
lds
movsl
jecxz
gs
xor
popa
inc
pop
rolb
repnz
and
xor
ret
ret
imul
xchg
xlat
xor
faddp
sbbb
fs
inc
imul
push
cmp
pusha
or
push
cmp
mov
add
xchg
outsb
mov
fnsave
jnp
jmp
mov
rorb
dec
and
daa
mov
stc
inc
inc
sub
xchg
lcall
arpl
imul
jmp
pop
mov
xchg
jl
and
stc
in
mov
or
es
jbe
or
emms
inc
test
sbb
push
mov
cltd
mov
aaa
jne
in
cmc
mov
adc
sub
or
ret
push
aam
jmp
loopne
or
out
outsb
push
mov
cmp
or
cli
push
jge
mov
mov
lcall
jb,pt
fisubl
enter
repnz
pop
push
push
icebp
lock
outsl
pop
adc
les
ret
pop
lods
dec
decl
int
sub
cwtl
mov
cmp
aam
mov
fbstp
decl
push
and
stc
pushf
mov
fst
pop
cltd
sahf
sub
aaa
in
cli
ret
sub
jo
mov
movsl
or
stc
pop
adc
in
cs
data16
jnp
ret
hlt
or
cltd
loop
add
jns
xlat
sbb
es
mov
push
cmp
jl
loope
test
jmp
cmc
pop
xor
mov
lahf
xchg
inc
fstl
data16
xchg
or
movsb
adc
push
jns
cmp
xchg
push
adc
aam
movsl
xor
movsl
call
andb
pop
out
ja
jmp
aaa
xchg
xchg
dec
pop
push
mov
fwait
xor
js
cld
test
inc
mov
dec
stos
pop
jbe
jl
adc
ficomps
push
call
dec
in
out
je
sbb
sub
outsl
js
mov
bound
jg
ss
and
or
arpl
xchg
xlat
xor
dec
pop
jl
lea
mov
std
scas
lcall
xchg
std
aad
loop
mov
and
mov
jmp
dec
cmp
mov
jg
inc
mov
mov
mov
aaa
shrb
push
stc
xor
das
pushf
or
leave
adc
jmp
cli
dec
enter
push
mov
xchg
insl
int3
test
lret
scas
xchg
fadd
and
mov
insl
rcll
adc
divb
push
inc
push
out
ja
gs
int3
test
xor
cld
pop
cmp
mov
pop
shlb
sub
cltd
das
sahf
test
jl
mov
and
lock
fstl
js
jle
jne
lods
cmpsb
jnp
and
inc
test
loop
dec
and
jns
push
and
jae
push
inc
lret
nop
jno
jmp
popa
mov
gs
mov
mov
jo
push
stos
add
mov
sbb
pop
cld
or
pushf
out
xchg
lret
scas
xorb
jg
out
and
xorb
fs
xlat
int
mov
daa
fwait
sbb
add
imul
jmp
test
jno
xor
mov
cld
mov
pop
cli
loop
std
enter
movsl
fadds
nop
mov
and
or
sub
popa
inc
inc
gs
shlb
mov
in
sti
push
lret
or
push
pop
cmp
aas
mov
jle
sahf
shr
iret
cld
add
xor
imul
push
mov
jo
xor
ds
fsubr
xchg
lret
andb
stos
shlb
sbb
lock
jne,pt
lcall
or
push
xor
jg
sub
aad
jns
push
pop
jns
out
gs
aaa
scas
andb
fiadds
pop
sbb
adc
mov
fwait
cmpsl
ds
rep
out
jmp
sahf
cmp
lods
sub
mov
dec
inc
loop
inc
add
ret
lcall
cmp
roll
popa
mov
jo
daa
stos
lcall
mov
mov
ja
mov
adc
js
dec
stos
mov
mov
adc
aaa
jg
imul
mov
fsubl
jg
mov
mov
mov
sub
popf
sub
xorb
in
lahf
fmull
es
or
or
pushf
jle
repz
std
dec
std
adc
mov
int3
jecxz
cmp
cmp
xchg
in
jb
cmp
mov
mov
ret
xor
jl
and
adcb
insl
and
or
sub
daa
jno
mov
xor
int3
decb
or
cmpsl
adc
or
por
and
dec
or
xor
jnp
adc
pop
sbb
cmp
and
mov
mov
rcrl
sbb
mov
movsl
mov
xor
fsubr
inc
mov
sbb
push
fwait
push
scas
lret
pushw
mov
sub
inc
mov
xchg
xchg
aam
and
pop
dec
pop
andb
pop
mov
roll
les
inc
and
adc
add
std
or
shl
jnp
sub
mov
add
mov
les
loopne
or
jmp
xchg
loope
adc
cltd
inc
loopne
or
ja
sub
std
test
sub
hlt
pop
jp
push
lods
int
arpl
cltd
shll
rcr
cmp
adc
xor
cmp
xor
lret
jno
outsl
shlb
cmp
push
xacquire
lods
rclb
loopne
pushf
adc
loope
sbb
out
imul
insb
add
ja
jae
aam
in
enter
ja
fbstp
adc
orb
lcall
inc
ja
ss
shrb
xor
cmpsl
mov
dec
pop
lock
or
jmp
enter
jmp
data16
jo
sahf
or
pop
jp
push
out
push
xchg
xchg
dec
cmp
lods
stc
insl
add
pop
pusha
testl
jae
out
mov
xchg
bswap
repz
test
in
test
or
mov
lcall
push
push
add
adc
fisttpl
xchg
jns
rcll
outsb
sbb
inc
add
fldcw
cmp
jg
jl
das
fdivrp
mov
insb
divl
sub
nop
daa
jno
or
pop
das
sti
into
adc
push
popa
mov
xchg
xor
mov
xchg
pop
pop
and
jo
pop
repz
outsb
dec
jmp
xchg
sub
dec
lock
cmp
les
leave
dec
pop
cmp
mov
pop
inc
pop
adc
and
loope
stos
js,pt
mov
jg
decb
sbb
lods
xorb
scas
jae
mov
jne
jl
enter
mov
mov
adcb
iret
push
dec
shll
sub
sbb
popl
stc
lds
jecxz
adc
mov
lods
sub
pop
int
negl
in
outsb
mov
push
lods
ret
xchg
pop
popa
dec
loop
push
pop
xchg
add
std
jg
push
lods
adc
imul
xor
add
jbe
sbb
stc
or
mov
int
cmp
mov
sbb
cltd
xor
cmpsl
xor
retw
and
rol
gs
push
insb
cwtl
inc
push
pop
add
jnp
adc
adc
or
rolb
lcall
out
mov
bound
mov
or
cmp
xchg
pop
movsb
clc
sbb
push
push
insl
sub
stc
nop
ljmp
or
cmp
movsb
jecxz
adc
xlat
mov
or
and
and
in
jns
in
nop
xor
adcl
cmp
enter
mov
jnp
mov
mov
shlb
out
std
pextrw
or
dec
cmp
jmp
out
sti
fwait
lods
imul
ss
xchg
loop
sub
xchg
outsb
mov
lret
mov
jb
test
dec
lret
test
pushf
in
sbbl
lahf
mov
xchg
mov
dec
sbb
std
push
sub
les
out
pop
cmp
inc
mov
pop
xchg
or
rcll
jns
sahf
or
fdivs
add
mov
inc
sar
jae
stos
cmp
mov
cmp
sarb
lret
and
xor
rorb
or
push
movsb
cmp
test
mov
mov
add
xor
and
rol
movsl
push
fsubrl
inc
mov
jge
jne
or
out
push
push
in
push
jge
add
or
xchg
mov
or
decb
mov
mov
stos
mov
loope
test
shrb
add
stos
xor
cmp
add
push
loop
ror
xchg
mov
pop
jle
stos
cmp
lahf
cmpsb
pushf
fnstcw
test
xchg
nop
sar
pusha
arpl
dec
pop
sub
scas
jbe
mov
mov
dec
out
lods
ret
stc
nop
jnp
mov
inc
rcl
cltd
add
dec
jne
adc
inc
icebp
test
daa
mov
xor
pop
icebp
lret
cld
xchg
adc
xchg
ja
xchg
push
mov
mov
lods
and
inc
inc
add
ficoms
int3
fimuls
and
mov
sbb
in
mov
and
jb
push
movsb
adc
cmc
sti
ret
lcall
jnp
adc
push
int3
arpl
mov
xor
lcall
dec
add
jae
mov
int
lock
fiadds
cltd
lock
sub
outsb
adc
sub
jo
in
stos
xor
std
xor
push
mov
cmp
shl
xor
imul
xchg
push
mov
insb
cltd
imul
mov
adc
cld
adc
jo
nop
pop
rolb
jmp
mov
xchg
mov
cmp
in
cwtl
jmp
mov
mov
fsub
add
jecxz
or
inc
test
xchg
jbe
les
gs
mov
arpl
jns
mov
in
ret
mov
andl
mov
jle
jmp
fwait
pop
mov
xor
or
mov
dec
loope
imul
stc
sbb
mov
jp
jg
call
add
inc
out
xacquire
or
ja
rcrb
sbb
in
aas
push
cmp
ljmp
je
test
xchg
adc
lcall
or
push
xchg
lods
dec
xor
das
js
xlat
loop
ror
jg
subl
ret
push
mov
mov
aad
call
lea
enter
or
xchg
insb
adc
out
xor
out
push
mov
inc
fwait
arpl
inc
inc
jle
mov
jl
push
jae
sub
sub
pusha
lods
xchg
mov
cmpsb
sti
out
inc
dec
lret
adc
or
dec
push
pop
fwait
mov
dec
or
dec
sbb
lahf
ds
addr16
mov
bound
add
daa
dec
lret
dec
imul
sahf
cld
push
fidivl
invd
inc
dec
jg
push
inc
scas
push
iret
pop
fwait
jno
adc
jge
mov
div
push
sub
roll
lret
dec
leave
fnstcw
lea
mov
inc
cs
mov
sbb
je
mov
shl
pop
add
add
adc
outsb
xchg
lea
movsb
mov
xor
mov
test
sbb
outsb
pop
ficompl
jmp
xchg
add
mov
jns
add
shr
pushf
outsl
lahf
std
inc
adc
sbb
jmp
xchg
pop
mov
mov
aas
lcall
pop
jmpw
dec
mov
mov
shr
lods
pop
mov
mulb
std
test
xchg
xlat
lcall
es
test
mov
fsts
scas
xor
lahf
mov
inc
jl
fnstsw
push
lods
jno
int
xor
lds
shrl
mov
jmp
sbb
add
push
jo
subb
scas
and
inc
scas
nop
dec
pop
mov
dec
pop
mov
fwait
lret
test
cmp
cld
mov
lcall
pop
js
cli
ljmp
and
push
sub
jl
test
cmp
cmc
loopne
fdivl
mov
pop
outsb
stos
push
sub
add
scas
inc
push
xor
fsub
add
repnz
xlat
repnz
shrl
push
mov
inc
xor
fisttpll
inc
pop
decb
inc
sub
fisubs
lcall
sahf
aas
add
imul
int
fidivrs
xor
adc
jp
lcall
out
inc
loope
cmp
sub
push
mov
or
out
inc
pushf
pop
ds
mov
popf
ret
jp
add
adc
lea
int
cld
xchg
lods
sub
in
push
xor
dec
rolb
lock
pop
mov
and
xchg
ss
sti
xor
xlat
popa
pusha
ss
xchg
ss
outsl
out
mov
xor
jnp
out
test
movsb
mov
add
out
jl
mov
xor
mov
fstpt
fwait
sub
aaa
int
lahf
sahf
mov
push
push
inc
fidivrs
adc
outsl
cmp
push
outsl
shr
xor
xchg
jnp
sahf
clc
jno
adc
sbb
enter
sbb
jnp
in
mov
enter
jno
jb
cmpsl
mov
pop
fbstp
pop
into
fcompl
mov
mov
repz
int3
lret
cmc
mov
adcb
insl
jp
pop
jp
dec
jl
test
mov
gs
loop
jl
or
jbe
jl
fisttpll
sbb
mov
add
mov
sbbl
jge
push
aaa
popa
inc
out
cmpsl
cs
addr16
sub
dec
cld
sar
addl
xor
das
mov
fisubl
pop
cwtl
cld
ret
ja
daa
mov
fildll
mov
dec
adc
pop
jl
cmp
ja
and
xchg
or
add
movsb
mov
imul
mov
mov
sbb
mov
mov
lret
add
sub
leave
add
loopne
fsubl
jne
xor
sub
mov
repnz
adc
or
cmp
adc
xchg
cmpsb
mov
cli
push
xchg
inc
fidivs
mov
dec
aam
test
sub
outsl
or
inc
ja
insl
enter
push
mov
cmovbe
je
movsl
jno
sub
insl
bound
insl
test
cmp
xor
enter
inc
je
mov
mov
sub
int3
add
sub
push
sbb
add
stos
and
and
cmp
shlb
jmp
cld
inc
jno
stos
cltd
hlt
pop
out
clc
and
std
addr16
or
jo
pop
lea
xor
pop
fidivrs
sbb
pop
mov
lret
ret
jp
and
adc
outsb
lcall
std
loope
data16
push
mov
in
mov
push
je
pop
pop
fidivl
out
push
test
sub
pop
data16
push
xchg
push
stc
xchg
sub
mov
imul
and
fnstsw
inc
and
ljmp
add
dec
cs
bound
dec
mov
jg
cmp
adc
das
inc
dec
mov
aad
ret
add
ljmp
mov
popf
mov
cli
popf
or
mov
jnp
loop
aam
das
fisttpl
xchg
iretw
mov
in
jmp
pop
lea
stc
push
bound
out
or
test
pop
loop
lea
mov
xor
stc
cwtl
sub
and
add
mov
loope
push
lods
add
popa
jae
jmp
add
test
push
or
cmp
or
push
inc
xchg
mov
orl
xor
dec
and
outsl
std
xchg
cs
xchg
xchg
out
cltd
test
mov
pop
es
push
fstps
test
push
sub
aam
es
mov
add
sbb
call
mov
cmpsl
scas
out
in
jb
xor
add
out
mov
lret
outsl
cs
sub
mov
orl
pop
outsb
sub
mov
jno
stos
or
sub
fsubrs
stc
push
fisubrl
testb
xchg
lods
inc
mov
sub
inc
popa
push
orb
mov
stos
push
xor
fs
fldl
sti
lods
shll
and
test
in
xchg
xor
int3
mov
mov
push
push
mov
inc
jmp
mov
andb
subl
fnstenv
xor
jo
sub
shr
jecxz
lea
call
jle
xchg
cmpsb
cld
sub
push
cmovbe
mov
out
insl
mulb
aas
imul
loope
push
jmp
fcmovnb
inc
pop
add
nop
mov
xchg
xor
sti
mov
mov
and
mov
insb
popf
or
mov
xor
shrl
ror
movsl
mov
out
mov
sbb
shrl
mov
out
mov
xor
adc
cmp
jg
jge
scas
pop
ds
mov
cmpsb
adc
pop
jb
mov
inc
sbb
out
push
jns
xchg
push
xchg
popa
cmp
jbe
pusha
sub
popf
pop
mov
xchg
out
cmpsl
daa
fwait
rcrl
dec
jmp
jecxz
xchg
xchg
lahf
negl
mov
sbb
xlat
rorl
sub
inc
fbld
pop
cmp
mov
dec
push
sub
mov
fsubr
mov
xor
or
jg
or
das
mov
adc
jno
gs
arpl
inc
andl
out
adc
lods
orb
stc
jo
xor
jl
es
jns
or
cmpsl
sub
aam
and
cmp
rcll
into
sub
jbe
sbb
sbb
pop
inc
mov
in
sahf
sbb
xchg
aaa
mov
cltd
jecxz
aam
inc
cltd
xor
mov
mov
stc
cwtl
fdivrs
xor
or
mov
insl
out
xor
mov
mov
push
mov
enter
mov
or
mov
test
jns
xor
add
test
and
xor
in
rorb
aad
mov
sbb
icebp
pop
lock
xchg
jnp
pop
insb
push
mov
add
mov
or
imul
fbstp
cmp
dec
pop
push
les
mov
sub
inc
sbb
mov
pop
jmp
dec
loopne
add
out
mov
ja
mov
push
notb
mov
lahf
jns
jp
sbb
mov
jle
pop
sti
psrlq
push
clc
push
xor
sbb
jo
addr16
jmp
stos
scas
add
mov
mov
mov
pop
ja
into
js
imul
mov
fisubl
push
mov
cli
flds
xor
xor
and
mov
cmp
dec
loope
shrb
fadd
push
movsb
cmp
xchg
ljmp
int
pop
dec
dec
dec
and
fnop
in
push
dec
ja
jl
mov
mov
adc
xchg
xchg
lods
dec
adc
add
jmp
or
bound
or
lods
add
cmpsb
cmp
pushf
mov
incl
lahf
pop
in
mov
sti
mov
les
add
push
jae,pn
cld
push
aaa
jecxz
imul
mov
scas
dec
jae
adc
sbb
inc
mov
pop
bnd
shrb
fdivr
or
imul
in
xor
ds
lds
push
xorl
xchg
les
mov
jo
testl
enter
mov
data16
sbb
mov
mov
in
stc
nop
jp,pt
adc
pop
and
mov
arpl
mov
mov
push
and
enter
adc
jecxz
xor
adc
inc
ja
std
lcall
mov
popa
sti
or
mov
jmp
pop
js
loop
dec
hlt
mov
sbb
stos
dec
insl
into
fcoml
fldenv
dec
fiadds
push
xchg
fstpl
pop
aas
rcrb
ss
fwait
daa
or
div
cwtl
and
mov
daa
mov
xor
inc
pop
cmc
push
add
pushf
loope
icebp
xchg
add
or
sbb
aad
pop
in
or
push
test
push
sub
repz
repz
mov
push
repnz
mov
lcall
jae
fdivl
xchg
adc
idiv
mov
test
inc
frstor
fs
adc
inc
sbb
ror
imul
popf
jmp
xchg
pop
popf
mov
push
sahf
xchg
jle
test
push
sbb
push
adc
adc
pop
and
aaa
lahf
ljmp
jbe
dec
test
imul
dec
aad
addb
data16
and
mov
out
lods
ret
out
sub
and
xchg
pop
add
mov
cli
dec
push
arpl
ja
fsubp
aaa
mov
jno
dec
mov
jnp
stc
popf
and
ljmp
cld
mov
sbb
push
sahf
xchg
aas
bswap
cmp
mov
add
adc
mov
cmp
fcom
arpl
jbe
or
movsb
xchg
sub
xor
jp
inc
adc
add
aaa
mov
cmc
xchg
xchg
push
fimuls
arpl
xor
push
popf
or
mov
adc
int3
loope
mov
sarb
jg
stos
jp
test
ds
mov
and
repnz
ret
cld
sbb
ret
cwtl
xor
and
rclb
lret
int3
nop
mov
jmp
std
mov
xchg
sub
adc
push
iret
jecxz
fstps
push
xchg
push
aam
sti
jg
cmpsl
in
ljmp
outsl
outsl
incb
mulb
pop
inc
pop
cwtl
dec
scas
mov
js
js
adc
jecxz
push
mov
pop
push
jmp
pop
jmp
push
adc
dec
mov
or
cmp
rcrl
insl
mov
sbbl
add
mov
xor
jns
in
sarb
xchg
or
jbe
clc
sub
xchg
adc
je
cmpsl
mov
clc
js
sub
xchg
sub
sbb
push
ljmp
jb
jg
xor
popf
pop
loop
or
fdiv
shrb
mov
aad
push
xchg
int
mov
loopne
lea
dec
or
add
pop
mov
jns
jmp
inc
push
add
shrl
pop
flds
mov
cmp
xor
shrb
jno
or
push
repnz
loopne
push
pop
in
or
scas
sub
pop
add
je
and
ret
lds
std
arpl
push
dec
jb
jle
adcb
insb
test
mov
fcomip
cmpsb
insl
imul
jp
movsb
mov
sub
fs
sbb
mov
jns
ja
fwait
push
ret
sbb
xor
cmpsl
out
sbb
pusha
and
adc
lods
pop
addr16
fdivrp
xor
jp
out
or
test
test
cmp
xor
adc
in
movsl
insb
add
inc
out
cwtl
and
mov
xchg
adc
unpckhps
movsl
repnz
xchg
lods
adc
lock
jo
jbe
mov
and
pop
aaa
push
clc
mov
and
das
lods
jmp
hlt
mov
sti
insl
sub
pushf
add
pop
inc
imul
push
jl
mov
or
in
decl
xchg
pushf
imul
or
push
outsb
fists
jns
cld
xor
pop
cmc
mov
xor
jne
lahf
push
inc
xchg
cmpsl
jg
fimuls
inc
fisubrs
hlt
outsb
sub
sbbb
sti
xor
dec
cmp
jno
lock
aaa
dec
sub
push
inc
test
mov
mov
arpl
into
jns
ret
and
sti
shlb
adc
icebp
inc
and
inc
rcl
inc
xchg
jb
ret
jle
sbb
lea
jnp
popf
mov
fldt
xchg
jbe
jmp
cmp
cmp
mov
mov
shr
cli
mov
insl
sub
push
adc
cmp
add
sub
aas
ret
shll
rcr
jle
add
push
pop
cmp
es
aas
incl
hlt
mov
inc
fistpl
xchg
clc
or
loopne
jge
aam
rorb
xchg
mov
lcall
sti
lods
or
cld
mov
or
and
lret
adc
push
loop
jge
int3
rclb
fwait
push
dec
lret
andb
ret
mov
push
inc
ja
aad
popf
rolb
mov
jne
fwait
sti
or
out
push
xor
add
lret
sbb
int3
sub
add
lea
out
add
in
dec
movsb
xchg
cld
in
addr16
imul
aas
iret
icebp
rcr
cld
movsl
mov
xchg
or
out
cmpsl
imul
fbstp
cltd
push
rcl
xor
mov
loope
pop
xor
push
xchg
hlt
mov
into
leave
in
xchg
pop
aam
lret
lret
pop
jae
imul
mov
jo
aam
decb
xchg
sbb
subb
or
fwait
and
lods
mov
cmp
cmp
inc
adc
sahf
pop
imul
pop
dec
jo
test
push
mov
out
repz
cmp
inc
insb
sub
aas
sbb
mov
add
sbb
mov
mov
adc
addr16
inc
leave
and
jnp
mov
push
push
mov
lock
aas
popa
jmp
popf
inc
mov
push
addr16
les
adc
jg
cmp
stos
mov
sub
cs
push
xlat
xchg
fisubrs
ljmp
push
push
mov
shll
push
mov
fisttps
fistl
into
outsl
jge
fidivs
mov
mov
xchg
dec
pop
leave
fldt
push
imul
push
lods
mov
stc
imul
jne
nop
push
pop
push
cmp
pop
cltd
in
ret
icebp
sub
xor
push
pop
fsubrp
rcrl
movsb
lret
dec
xor
ja
jp
dec
cwtl
push
jb
fst
sub
das
pop
cmc
pop
mov
jl
xor
push
loopne
fisubs
addr16
scas
popf
sbb
iret
test
data16
cpuid
xchg
push
jbe
adc
and
cmp
mov
inc
movzbl
in
enter
andl
inc
push
jne
and
hlt
mov
pop
cmp
sub
xlat
test
dec
ret
xor
ret
loop
mov
lahf
sbb
mov
inc
or
jge
out
outsl
pop
xor
push
psubb
mov
and
hlt
mov
std
push
cmpsb
mov
push
ljmp
inc
loop
sub
sbb
lock
repnz
mov
imul
dec
rcrl
pop
sbb
mov
adcl
or
sbb
out
sub
mov
jl
gs
dec
int
inc
js
mov
rcr
lahf
ss
pop
mov
in
pop
inc
loope
or
sbb
mov
jmp
js
inc
mov
incb
pop
mov
lahf
and
xor
lds
inc
addr16
ret
hlt
or
fstpl
pop
push
mov
jmp
les
mov
inc
ret
std
lods
push
jno
sub
xchg
int3
stos
adc
inc
inc
leave
flds
mov
mov
push
mov
aad
and
aam
pop
cmc
jp
mov
and
jns
push
ds
call
mov
and
test
sub
push
arpl
inc
sahf
push
rorb
insl
aas
loop
lret
insl
jge
rclb
scas
dec
pop
rcr
ljmp
mov
rcrl
sbb
add
mov
mov
aaa
push
lcall
sub
jno
mov
mov
inc
sub
loop
jp
lea
mov
ficoms
mov
add
push
ret
mov
jecxz
ljmp
shrl
nop
push
sub
mov
adc
shl
mov
leave
pop
iret
stos
sti
shr
sub
xor
scas
mov
out
jge
cmpsl
enter
cltd
out
stc
jg
shll
or
cli
xor
call
icebp
rcll
push
cmp
stos
lahf
test
xor
ret
add
jae
outsl
mov
jo
mov
jae
dec
sub
pop
in
imul
addl
popl
cmovbe
psrad
sbb
into
lods
cmpsb
mov
imul
stos
jg
jns,pn
aam
mov
jg
jae
cltd
xchg
xchg
sub
jmp
sti
mov
lret
jnp
mov
mov
pop
call
test
add
dec
outsl
dec
clc
cmp
pop
outsb
and
xchg
cmpsb
aaa
jp
or
int3
inc
test
and
dec
pop
jg
imul
and
jge
jle
pop
mov
inc
sbb
cmpsb
imul
lock
shlb
sub
addl
ds
jl
adc
mov
xor
cltd
mov
lret
mov
cmp
das
cmp
ss
and
and
std
sbbl
xor
xchg
mov
cmpsb
hlt
cmpsl
mov
pop
adc
aas
cwtl
shrb
dec
sbb
jbe
addr16
cltd
jmp
dec
std
mov
das
mov
jno
mov
cwtl
lcall
jle
pop
das
xchg
fadds
lret
lcall
mov
mov
fwait
test
inc
test
sbb
jno
mov
repz
out
pop
int
outsl
inc
es
cmc
sbb
shlb
movd
lods
insl
push
mov
dec
stos
mov
jbe
inc
add
fwait
mov
cli
or
or
jg
xchg
dec
lds
test
sub
cmc
cmpb
stos
xchg
xchg
aad
popa
addl
push
dec
pop
packsswb
inc
pop
dec
cs
xchg
xor
fwait
mov
clc
xor
or
repz
hlt
loopne
fcomps
popf
scas
jns
ret
sub
dec
add
push
mov
adc
pop
inc
jmp
mov
push
jb
xor
insb
sub
icebp
popa
imul
push
test
mov
add
into
cmp
jne
add
insb
add
mov
lds
mov
out
test
mov
imul
sbb
out
push
lret
pop
push
jb
ret
rclb
pop
cmp
pop
lret
pop
cli
int
jmp
mov
incb
adc
jge
in
daa
sbb
jl
rclb
pop
stos
sbb
fstpt
adc
cltd
out
mov
ljmp
ljmp
ret
jne
sbb
pop
push
dec
jnp
lcall
mov
inc
and
xor
cld
dec
jns
push
xchg
sbb
repz
sbb
aad
pop
out
cmpsb
cmp
pop
sbbl
push
add
dec
sbb
cld
mov
push
ret
add
imul
bound
loopne
je
cwtl
dec
imul
mov
es
pop
hlt
add
addr16
ret
cmpsl
orb
popa
js
insb
push
imul
sbb
dec
pop
dec
jnp
ljmp
xor
push
or
sbb
push
lret
sahf
into
inc
pop
daa
mov
xchg
jb
cmp
test
lods
pop
nop
pop
mov
shrl
or
sahf
push
loope
add
fucomip
sti
xchg
mov
mov
adc
pop
test
cmp
movsb
out
xchg
mov
lds
ss
out
std
repz
in
es
call
xor
add
pop
pusha
ljmp
mov
imul
stos
sbb
aam
cwtl
mov
dec
call
imul
xor
das
mov
mov
sbb
add
stos
mov
mov
push
dec
popa
clc
jbe
ficomps
call
jmp
std
add
or
xlat
fldl
cmc
push
cmp
mov
add
mov
sbb
xor
scas
imul
ss
adc
test
inc
loope
cs
mov
mov
in
jg
or
cmp
lds
movsb
loopne
rolb
xchg
sub
pushf
scas
mov
rolb
nop
sbb
or
and
dec
repz
negl
xor
shlb
and
or
xchg
adc
jecxz
mov
aas
movsl
cmp
jle
iret
add
pop
cmpsl
add
lods
clc
dec
sub
sbb
adcl
test
mov
repz
push
cs
test
hlt
cmp
repnz
stos
lods
mov
jecxz
xchg
and
lea
sarb
inc
fimuls
and
sbbb
or
imul
mov
push
fsubr
adc
loop
cmp
lds
mov
cli
xor
cli
inc
in
fistpll
sti
movsb
cmp
je
shrl
adc
enter
out
sahf
out
cwtl
scas
rolb
es
lahf
fldl
les
and
push
xchg
xor
lods
js
mov
jb
or
js
pop
mov
push
add
mov
xor
or
add
loope
mov
sub
push
jge
in
add
sarb
scas
int3
bound
xchg
dec
adc
hlt
mov
jge
xchg
mov
push
loopne
mov
rcr
cmp
jbe
xchg
pop
outsl
pushf
addb
jbe
stc
stos
cld
fsubrs
int3
les
in
or
cmpb
push
movsb
pop
or
mov
loopne
jle
add
push
cli
jb
repnz
xor
sub
lret
insl
sub
stos
repnz
icebp
sbb
mov
pop
shlb
dec
inc
lea
imul
lret
stos
insl
xor
shrb
pop
cmp
ret
sahf
mov
js
mov
call
lea
cmp
jnp
insl
adc
int
outsb
sub
mov
lods
out
sbb
pusha
adc
or
dec
dec
push
or
test
jbe
or
sub
fsts
pushf
sub
stc
mov
pop
sub
test
andb
das
adc
cmc
adc
adc
hlt
push
movsl
icebp
sub
repz
fdecstp
xchg
sub
jne
pop
mov
negl
mov
or
sub
ret
in
pop
rolb
pusha
lret
jp
jnp
add
dec
add
xor
push
sbb
pushf
jmp
mov
cmpsl
jne
into
int
sbb
lret
fiadds
js
jp
adc
xchg
incl
movq
mov
es
popa
jge
cmc
lods
inc
daa
push
dec
sbb
mov
lahf
das
repz
fidivs
pop
jno
push
imulw
mov
cvtdq2ps
lret
jmp
adc
jo
repz
jmp
adc
jb
inc
hlt
pusha
lods
xor
jns
movsl
mov
add
mov
xor
sar
out
loopne
and
xor
das
cmp
call
pinsrw
shlb
push
fsubrs
adc
ds
or
and
xchg
push
cmp
scas
jno
inc
sub
xor
rorl
in
mov
mov
hlt
and
push
pop
ljmp
pop
out
sti
inc
and
in
iret
pop
repnz
mov
scas
jns
loope
adc
shlb
cmp
jns
cmp
data16
dec
int3
mov
cmp
fistps
scas
push
rcrb
lea
mov
dec
mov
ucomiss
test
sub
sbb
mov
push
mov
adc
push
and
jg
sti
fimuls
add
outsl
dec
out
sbb
insl
mov
cmp
clc
or
jmp
inc
das
pushf
aas
jb
leave
xor
sarl
sahf
adc
xchg
add
pop
sub
xor
scas
in
jns
imull
call
or
ja
adc
and
mul
mov
int
or
cwtl
inc
cmp
cld
xor
xchg
nop
cmpsl
cmp
inc
mov
lcall
pushl
xchg
roll
daa
aad
mov
insl
cmpb
aaa
rcll
jle
jne
jecxz
mov
cmp
cld
icebp
mov
pop
dec
cs
rorb
push
int
iret
sbbl
popa
es
jmp
inc
decb
push
aas
xor
pop
or
out
pop
rorb
xchg
add
and
repz
and
dec
std
xchg
jg
in
cld
ds
neg
dec
sub
sub
push
pop
hlt
dec
in
pop
pop
adc
add
jae
frstor
insl
push
sbb
roll
mov
jae
jmp
fldl
fs
adc
and
inc
sub
cmpl
or
lods
push
popf
fstl
dec
dec
ljmp
mov
sbb
or
push
cmp
mov
shl
adc
push
lret
or
pop
pop
out
gs
ss
je
out
movsl
inc
pop
imul
je
push
js
insl
and
xchg
test
inc
add
fildll
loope
dec
lods
in
and
nop
sbb
mov
movsb
mov
pop
ljmp
mov
imul
xor
lret
incb
arpl
sahf
xor
xchg
push
inc
push
inc
inc
dec
mov
mov
jnp
aas
sbb
aas
mov
mov
fcmovb
cmp
jb
cmp
fnsave
fcoml
mov
test
hlt
lods
push
or
loopne
mov
loope
sub
dec
or
adc
pop
loopne
sarl
add
xchg
inc
lahf
ljmp
out
pop
das
and
xor
and
mov
das
decl
sub
pushl
dec
notb
xchg
sbbb
jge
popa
inc
repz
imul
sub
pop
nop
nop
sub
pop
mov
jp
xor
ds
fs
in
mov
loopne
jae
cmp
xor
mov
clc
mov
pop
push
or
lcall
enter
lock
mov
js
lods
sbb
push
ljmp
cmp
sub
pop
pop
sbb
lock
adc
sbb
stos
push
in
sub
mov
and
scas
shlb
cwtl
inc
icebp
xor
inc
imul
out
mov
sbbl
clc
repz
lds
xlat
fmull
jecxz
jg
in
icebp
mov
cltd
call
jg
push
test
cmp
fidivrl
adc
jo
sub
aam
shl
lea
out
call
test
xchg
push
add
inc
ss
mov
xor
adc
dec
pop
sarl
inc
std
jb
adc
xchg
lods
ffree
sbb
test
repz
nop
mov
inc
add
mov
and
and
inc
xlat
push
pop
jp
add
xor
repz
in
data16
xchg
xor
movsb
inc
pushf
xor
jae
les
mov
push
in
addr16
adc
mov
mov
pop
xor
dec
arpl
ja
inc
fs
jo
out
dec
movsl
pop
mov
jge
dec
jnp
inc
sbb
aas
fsubl
ret
repz
and
inc
sbb
push
gs
mov
aas
cmp
mov
neg
outsl
sub
das
pop
shlb
fs
pop
ret
insl
jmp
lahf
out
insl
imul
mov
jmp
push
push
inc
enter
adc
das
bound
cwtl
mov
xchg
adc
push
cs
ficoms
fidivl
or
mov
movntq
out
pop
sbb
test
sti
mov
dec
mov
and
xchg
inc
in
xchg
ss
daa
into
outsl
rorl
jns
push
push
xlat
sbb
aas
pop
in
mov
or
lgs
cmp
add
mov
arpl
xchg
outsb
lahf
enter
jo,pn
and
loope
lret
mov
fldl
cmpsl
push
jae
and
push
hlt
shl
inc
ret
mov
cmc
mov
lds
testl
in
mov
pop
mov
idivl
scas
push
mov
xchg
xchg
xchg
lret
mov
lcall
adc
leave
or
xlat
jnp
loope
cmp
out
daa
pop
adc
sti
ficoms
adc
in
outsb
jl
les
xorl
outsb
test
pop
movsb
out
fwait
add
jl
dec
sahf
ds
adc
inc
or
jne
pop
sahf
insl
shlb
addr16
cmc
insb
xchg
mov
rclb
scas
mov
jle
jl
fs
leave
jbe
adc
out
inc
std
outsb
and
add
sub
lds
jnp
ss
inc
ds
mov
inc
popf
fdiv
lds
sub
shl
and
xor
mov
dec
push
adc
fnstsw
cltd
cmp
enter
mov
cs
aad
pop
cmp
lods
mov
sub
arpl
ss
fs
dec
cmpsl
call
xchg
sub
ret
mov
or
icebp
sub
scas
sti
push
pop
adc
out
and
pop
or
pop
ss
nop
cli
scas
pusha
jae
xchg
pop
xchg
mov
add
iret
fldt
ret
xor
mov
xchg
sub
pop
popa
cmp
adc
pop
ja
mov
call
sarb
out
push
pop
repz
ds
dec
or
ds
andl
and
jmp
mov
cmpsb
fidivrl
popf
push
pop
andl
mov
iret
dec
sbb
lds
cs
insl
int
scas
inc
adc
jmp
fs
testl
sbb
data16
push
jmp
gs
and
add
inc
pop
aam
add
mov
daa
jb
idivl
mov
ja,pn
sub
cmp
mov
out
and
and
aaa
in
iret
mov
add
test
scas
cmpsb
addr16
xor
daa
inc
fs
imul
shlb
mov
push
sbb
lcall
movsl
mov
mov
mov
jns
dec
out
cmpsl
or
sarl
enter
rcr
sub
shlb
mov
pop
push
stc
mov
fldenv
jge
sub
cmc
in
pop
daa
sbb
test
loope
orl
or
lods
pusha
daa
push
sbb
pushf
xchg
sub
ja
stos
mov
inc
ljmp
icebp
fildll
jns
movsb
cltd
lcall
jecxz
cmpsl
dec
adcb
in
add
sarb
ret
xchg
jo
cmp
xchg
xchg
push
xchg
stc
cwtl
pop
imul
aad
xor
xlat
pop
out
or
fcmovbe
aad
mov
cmp
inc
fnstcw
or
daa
mov
andb
xor
fyl2x
sti
sub
movsb
push
adc
jecxz
sub
and
lea
in
add
fwait
mulb
addb
rcrb
pop
and
cli
sub
ja
xchg
ret
and
mov
cli
imul
call
flds
cmp
jae
lahf
sub
outsb
lret
fiadds
aad
adc
call
jb
pop
je
loopne
cmp
lods
add
push
sub
mov
or
aaa
jp
mov
xchg
sub
dec
push
add
pop
shl
sbb
jb
adc
jmp
jp
lods
and
cmp
cld
dec
mov
xor
mov
popf
sbb
insl
in
inc
xchg
fcmovbe
lods
jb
in
cmp
notl
pop
into
lahf
movsb
test
out
shr
inc
movsl
xchg
sub
gs
das
sahf
mov
jo
and
xlat
xchg
hlt
mov
ds
adc
and
jp
mov
sarl
jns
rcrl
or
daa
pop
rorl
add
sbb
mov
dec
xchg
lds
push
cmc
xchg
sub
les
lret
in
adc
xchg
mov
jge
sbb
dec
xlat
scas
mov
cmpsl
rcl
out
hlt
nop
mov
cmp
ja
push
or
jbe
pop
data16
enter
xchg
mov
and
ja
lods
popa
rorb
mov
enter
das
xchg
push
cs
dec
adc
lcall
mov
out
jmp
cs
add
or
test
sub
mov
mov
xchg
pushf
imull
xchg
mov
leave
sbb
mov
xor
decl
cmp
push
not
aaa
scas
aas
dec
adc
stos
cmp
ss
sarb
clc
out
sbbb
mov
mov
push
mov
xor
mov
ljmp
jns
or
mov
outsb
push
xorl
push
push
js
add
rol
movsl
pop
cmpsl
in
fdivl
sub
and
mov
pushf
repz
pop
adc
mov
lcall
insl
xor
push
cmp
subb
add
or
adc
daa
jnp
aad
pushf
jae
shll
int3
ja
gs
sub
mov
lahf
loop
xchg
add
xor
lahf
mov
rcll
mov
push
dec
nop
cmc
insb
pop
jo
jne
pop
pop
out
push
cld
add
and
push
xchg
outsb
testl
cwtl
sti
lods
inc
sub
bswap
xchg
hlt
xchg
add
shl
pcmpeqw
dec
push
imul
inc
and
call
push
stos
lods
jg
inc
popa
jns
fs
enter
push
adc
dec
pop
dec
xor
xchg
sbb
hlt
insb
adc
outsb
mov
and
ss
sahf
pop
scas
lods
sarb
ja
push
inc
fstps
clc
movsb
mov
dec
test
fdivrl
lret
sbb
inc
add
imul
push
stos
cmp
repz
flds
or
ja
andb
rcrb
je
add
add
push
fsubrl
arpl
adc
insb
and
push
ret
imul
xchg
sbb
push
mov
or
bound
test
sbb
ret
sub
sub
add
leave
add
ret
pusha
subb
xchg
fs
fs
hlt
int3
jns,pn
pop
jp
pop
cmp
stos
call
and
xor
xchg
lret
test
adc
sahf
sub
push
fsubrs
and
imul
push
adc
jb
ja
pop
xchg
cmpl
push
dec
pop
cmp
aad
fcomps
push
inc
jne
jns
and
cltd
push
push
push
dec
mov
jg
fs
xchg
jle
cltd
iret
or
jl
dec
test
test
inc
xlat
in
fcompl
or
test
sbb
sub
mov
nop
mov
inc
add
or
xor
int
push
pop
pop
dec
fs
jp
and
sub
stos
jge
stos
cmp
test
int
pop
mov
or
ficomps
dec
xor
jp
cltd
out
lods
cmp
lahf
test
inc
xchg
arpl
bound
cltd
enter
int
out
fmul
xchg
pop
push
cmpsl
pop
xchg
scas
outsb
jg
fsubs
jl
rcrl
ret
xchg
mov
in
jns
popa
xor
shlb
cmp
or
data16
outsb
cmp
dec
repz
repz
mov
pop
mov
xchg
cmp
lods
out
xchg
lcall
fcompl
stc
mov
clc
add
fnsave
xor
bound
call
ret
push
lret
inc
push
bound
addr16
cmpsb
jp
ja
jne
dec
or
test
sub
icebp
sbb
rol
out
scas
mov
rcrb
dec
into
jns
in
cmp
fnstcw
xchg
icebp
ret
inc
or
data16
daa
mov
imul
sbb
fbld
fisttpl
sub
mov
cmpsb
out
lds
adc
aam
jbe
fwait
mov
gs
out
adc
adc
jae
mov
repz
addr16
imul
lods
push
out
out
xor
test
stos
repnz
and
scas
adc
inc
inc
iret
lods
dec
shl
push
je
repnz
insl
sub
jns
lods
shl
repz
inc
in
iret
xchg
popa
imull
or
fwait
cmp
stos
cli
xor
imul
adc
inc
in
int
imul
aaa
xchg
mov
pop
call
fisttps
push
popf
pop
and
and
lods
xorb
jecxz
rclb
mov
fsubl
stc
mov
pop
rcrb
lock
cmc
and
xchg
xor
mov
mov
add
ljmp
inc
fcoml
mov
cmp
les
xor
push
push
inc
inc
dec
daa
inc
out
inc
adc
pop
jb
push
xchg
cmpsb
cmp
test
cmp
addr16
repz
and
xchg
xchg
mov
pushf
jo
sub
es
sub
add
and
inc
push
jno
sbb
sub
loopne
loope
ret
add
cmp
mov
mov
mov
add
xchg
test
pop
arpl
mov
data16
jecxz
lret
lds
jl
inc
fdivp
popf
inc
les
movsl
mov
int3
nop
daa
clc
jecxz
sub
sbb
arpl
movsb
lea
mov
lods
adc
shlb
pop
decl
fidivl
mov
cmc
ja
mov
icebp
jle
or
addr16
add
mov
fcoml
sti
sub
and
mov
insl
rcl
xlat
pop
dec
jne
lea
mov
mov
inc
and
popf
and
inc
sub
aam
lds
push
pop
mov
adc
push
cmp
js
daa
jle
push
test
inc
out
pop
pop
xchg
mov
jp
or
pusha
mov
bound
xchg
xor
cmp
push
loop
jecxz
js
out
popa
out
lea
push
jmp
or
scas
test
xlat
dec
popa
xchg
xchg
jbe
mov
push
xchg
aam
test
pop
idivb
add
data16
test
lret
inc
call
sbb
add
out
xor
sbb
rorl
cld
loope
fbld
aad
mov
pusha
inc
adc
push
jno
je
push
lret
faddl
lcall
jg
xchg
mov
cwtl
adc
dec
in
movsb
fnsave
scas
inc
and
or
int3
jno
or
or
dec
clc
mov
loopne
xor
lret
mov
dec
adc
sub
push
push
dec
loopne
setbe
jns
push
and
ja
mov
cli
subps
jbe
fldenv
jecxz
addb
mov
movl
lods
sub
or
push
lahf
sub
push
sub
aad
mov
arpl
sub
and
inc
std
cmc
incb
push
enter
fdivs
mov
addr16
mov
sub
movsl
les
mov
insb
je
test
jo
lahf
jmp
jge
inc
pop
inc
loopne
cmp
outsl
les
repnz
cmp
sbb
and
adc
test
jbe
imul
inc
es
adc
add
out
cli
and
pop
cmc
cmp
jb
scas
pop
jl
rorl
adc
hlt
lcall
stc
push
inc
mov
jg
lock
pop
mov
adc
fistpll
mov
mov
fisubrl
sub
stos
hlt
call
fidivs
add
mov
fucomip
rorl
push
jb
es
push
enter
sahf
movsb
pusha
sti
sbb
inc
pop
sub
sbb
and
pop
mov
repz
loope,pn
add
fisubs
add
cmp
mov
lods
test
inc
jmp
mov
gs
dec
imul
leave
push
in
ss
add
pop
pop
bnd
and
pop
xor
sbb
adc
aaa
cmpsb
cmp
pop
push
cmp
mov
movsb
aaa
pop
inc
daa
into
and
mov
ss
pop
or
data16
test
lods
lods
cmp
pop
add
aad
and
sarb
sub
push
adc
ret
gs
int
cmp
mov
cmpsl
out
inc
outsb
push
scas
pop
jmp
xor
roll
push
inc
fsubr
shrb
inc
fidivl
pop
popa
orl
sub
in
dec
loop
int3
cmp
jno
mov
jmp
adc
push
int3
add
movsl
cmp
push
shll
mov
inc
rcll
test
xchg
arpl
push
fcmovnu
add
push
or
es
push
adc
jmp
dec
add
or
mov
mov
addr16
test
or
mov
popf
xchg
gs
jle
mov
cwtl
xchg
or
jno
push
sub
sbb
inc
mov
or
mov
movsl
mov
xor
pop
ja
inc
sub
fmul
out
mov
ret
and
cwtl
mov
cmc
xchg
sub
mov
dec
ret
mov
dec
pushf
out
lret
pop
lock
pop
cwtl
lock
push
pushf
push
xchg
in
aam
in
lods
cmc
sub
push
or
fidivl
sub
movsb
outsb
or
jle
add
aad
add
pushf
aaa
movsb
popa
das
fsts
jmp
mov
mov
dec
bound
push
out
je
adc
mov
repz
aad
jne
icebp
lcall
mov
aas
aaa
sub
sti
call
test
mov
stos
add
cmc
mov
je
pusha
xchg
int
rep
mov
jns
xchg
lcall
xor
jno
je
lcall
popf
dec
loopne
cmp
mov
je
cmc
cmp
mov
icebp
mov
mov
pop
pushf
lret
and
xor
jno
rcrl
sbbl
fs
mov
divb
setle
cwtl
sub
mov
jae
lods
xchg
mov
and
mov
mov
add
in
test
sbb
fst
cmp
cltd
std
and
outsl
outsb
repnz
mov
xorl
push
es
jp
cli
jnp
repz
cld
mov
cs
mov
in
cmp
sub
push
xchg
insl
loop
lods
inc
out
daa
les
shrl
int
and
inc
mov
and
jns
outsb
inc
add
sub
jbe
sub
mov
push
xor
xchg
cmpsl
stc
xchg
nop
xor
loop
imul
daa
xchg
test
shrl
ret
mov
cmp
test
scas
cmp
clc
insb
fists
xlat
lcall
into
cmp
pop
inc
test
mov
xchg
mov
inc
loop
repnz
jb
fs
fisttpl
add
js
imull
inc
pop
das
sbb
sub
lock
push
xchg
out
xor
mov
cs
rol
outsb
fiadds
mov
pop
add
shl
es
sbb
pop
inc
lds
sbb
imulb
cmp
pop
pop
pop
roll
push
cmp
push
sbb
out
xchg
cmp
into
jl
adc
add
xchg
mov
mov
nop
call
dec
pop
mov
add
adc
mov
ret
sahf
xor
xchg
inc
or
out
popl
lahf
fidivs
push
cld
stos
mov
outsl
daa
movsb
movsl
jmp
xlat
lds
ljmp
jbe
jo
lods
mov
stos
push
inc
xor
jnp
cmp
movsb
rcrb
cltd
xor
inc
jbe
outsl
jp
popa
fbld
stos
enter
jbe
xor
flds
jbe
or
daa
sub
pop
inc
aad
ljmp
dec
push
mov
roll
in
sahf
repz
imul
decl
and
in
or
add
xor
adc
mov
pop
dec
decl
ljmp
cmp
xchg
add
arpl
sub
les
testl
add
cmc
sub
dec
fxch
push
mov
and
popf
cmp
sbb
ds
jo
lahf
inc
or
xchg
in
sub
lods
push
leave
sbb
lret
in
sbb
push
std
stos
mov
inc
sbb
push
adcl
dec
jnp
jle
lcall
jne
test
je
shl
cmpsl
push
xchg
adc
mov
sub
ss
aaa
mov
xchg
or
sbb
pop
insb
daa
mov
lahf
dec
cmp
jb
inc
mov
loopne
and
shlb
movsl
cmp
or
pop
insb
divb
push
adc
or
popa
dec
fadds
pushf
pop
push
out
mov
mov
jmp
std
xchg
je
dec
push
xor
or
push
out
rcl
xor
cs
pop
add
xchg
jne
xchg
sub
mov
mov
sub
inc
stos
mov
test
js
jecxz
inc
and
nop
call
or
sub
cmp
push
sbb
jno
jp
mov
jp
subl
lods
mov
sahf
sub
and
and
lods
cmpsl
out
mov
inc
mov
shrb
test
inc
daa
mov
adc
stos
push
outsb
jb
cmpsb
inc
jecxz
test
std
cltd
add
ds
pop
and
add
push
shr
arpl
insb
dec
aaa
xchg
mov
sahf
lods
pop
pop
dec
push
or
sub
mov
jmp
inc
repnz
inc
mov
das
inc
and
stc
inc
or
cltd
push
jbe
pop
sbbb
fisttps
xlat
insl
nop
out
cmp
pushl
xchg
loop
mov
aaa
or
cmp
pusha
xor
cltd
pop
dec
push
pop
push
cmp
sahf
pop
jecxz
xchg
hlt
fsubl
dec
sbb
les
xchg
sub
mov
dec
lock
inc
mov
mov
cmp
loope
mov
mov
mov
and
iret
sbbl
pop
sbb
lock
xchg
insb
fldenv
add
outsl
mov
clc
mov
sbb
xor
push
mov
movsl
lcall
and
testl
pop
dec
jecxz
cmp
lods
inc
and
dec
clc
fsubrl
negb
push
lods
xor
adc
fldcw
xor
dec
pop
clc
or
mov
inc
int
testb
test
shlb
or
mov
cmp
and
inc
pop
bnd
jne
imul
cmp
and
aas
xchg
cld
movsl
ja
xor
push
data16
mov
insl
adc
xor
les
decb
push
mov
jnp
test
int
andl
loope
push
fstl
pop
jae
xorl
xlat
xor
imul
bnd
mov
mov
test
scas
adc
pop
lret
pusha
cmp
fucomip
cmp
push
add
or
pop
push
pop
xor
into
mov
push
sbb
loop
push
mov
jns
punpckldq
adc
or
mov
pop
xsha1
cmpsb
call
insl
xor
jmp
mov
push
inc
fiadds
test
inc
fnstsw
fisubrs
xchg
test
aas
test
inc
fimuls
dec
fisttps
test
or
cmpsl
or
dec
fists
dec
loopne
shlb
cmp
nop
pop
dec
loope
xchg
cmpsb
mov
orb
out
fisttpll
mov
sub
rol
pop
cmp
dec
pop
icebp
dec
jmp
cmpl
cs
fwait
mov
and
push
ret
cs
addr16
int
jnp
jbe
arpl
outsl
lret
outsb
cmpsl
mov
loop
ja
das
ds
mov
fwait
pop
and
xorb
ljmp
ljmp
testl
movsl
mulb
arpl
xor
xchg
rorl
popf
mov
dec
popf
shlb
inc
lds
push
test
test
rcrl
cmp
mov
cmpl
cmc
loop
pop
clc
stos
imul
shlb
and
xor
adcb
jecxz
mov
cmc
lret
mov
icebp
ss
out
cmp
cltd
loope
add
lret
jmp
jmp
xchg
ljmp
cli
aam
inc
cmc
orl
mov
cmp
and
dec
pop
ret
inc
and
movsl
push
fsts
in
inc
xchg
mull
mov
mov
sbb
inc
cs
or
loop
dec
mov
inc
cmp
sahf
enter
iret
lahf
and
out
jg
and
testb
sbb
fnstenv
scas
jmp
mov
js
push
cmpb
lea
jbe
mov
movsl
xlat
or
stc
outsb
or
negb
inc
lret
lods
add
out
dec
push
cltd
sub
loop
dec
jmp
orb
shlb
aas
mov
adc
mov
shrb
addr16
mov
repz
pushl
cmpsl
mov
and
sbb
test
pusha
fcmovbe
fisubrl
mov
scas
repnz
jg
add
mov
push
ljmp
movsl
stos
xlat
test
repz
sbb
cmp
cmp
xchg
sbb
push
jb
int3
xchg
fldl
cmp
repz
mov
or
out
mov
gs
sub
lret
jne
cli
wrmsr
push
cmp
sahf
xor
ljmp
pusha
inc
pop
insb
push
mov
or
fstl
push
data16
stos
mov
in
dec
in
fcoms
inc
bound
out
cwtl
dec
cmp
jg
mov
pop
cmc
push
pop
add
cli
or
je
pusha
xchg
ss
xchg
out
inc
push
sahf
cmp
push
mov
mov
fs
xchg
or
outsb
mov
gs
push
and
pop
sbb
inc
xor
out
aam
outsl
stos
cmp
cs
cs
in
aas
jb
in
xor
enter
out
inc
scas
shl
cmp
sub
cmp
test
clc
jae
xorb
mov
stos
lret
inc
movsb
cltd
mov
repnz
mov
in
or
test
dec
in
fwait
inc
test
mov
dec
add
mov
mov
cmp
adc
push
or
push
jmp
jp
insl
stc
sahf
adc
fs
lods
mov
mov
push
ret
pop
add
push
aas
mov
jb
out
cwtl
push
mov
ret
fstps
popf
fldl
scas
out
outsl
out
jo,pn
push
mov
sbb
outsl
sub
movsb
jecxz
push
mov
xchg
not
xlat
outsb
add
pop
lcall
je
xor
jmp
popa
adc
loope
xchg
rcrl
mov
enter
dec
mov
push
pusha
xor
arpl
leave
lea
sub
adc
and
pop
adc
pop
cmpsl
aas
inc
imul
into
imul
shll
or
mov
dec
decb
sbbb
and
sahf
mov
push
dec
filds
and
add
ds
insl
mov
aad
mov
mov
jne
cmp
imul
sbbl
push
fdivl
jmp
mov
or
mov
dec
es
and
lcall
mov
mov
bound
or
cmp
push
dec
ret
lock
in
stos
sub
pop
arpl
dec
sbb
mov
mov
enter
mov
data16
or
push
fstpt
inc
fcomi
jp
test
movsb
leave
lods
aas
je
lahf
clc
je
cmp
lods
mov
jp
xchg
xor
sbb
in
push
pop
fldl
fsubl
mov
jmp
xlat
lods
call
hlt
mov
adc
cltd
cmp
sub
mov
xchg
cli
daa
outsb
test
std
sub
xchg
adc
mov
jno
mov
repnz
daa
inc
movsl
and
add
jmp
sarb
jp
jnp
cltd
jb
pop
mov
mov
loop
jmp
adc
loope
ljmp
lret
imul
mov
jno
sub
mov
cmpsl
bound
jge
outsl
xchg
pop
test
mov
mov
stos
adc
call
adc
jo
mov
ljmp
push
xchg
and
pop
jmp
popa
rcl
dec
out
xor
test
out
xchg
xor
pop
push
sti
movsb
aam
mov
ret
push
mov
or
dec
sub
ret
mov
mov
sub
cmpsb
jbe
add
xchg
and
insl
mov
insl
std
test
mov
push
cli
sbbl
mov
cmpl
call
mov
fists
xor
mov
mov
and
aam
sub
add
jp
adc
xchg
add
popf
cmc
mov
jne
dec
aam
daa
divb
or
mov
imul
mov
jmp
addr16
outsl
aad
and
cmp
lods
nop
mov
in
jns
fiaddl
pop
xor
cmc
pop
test
std
bound
add
aaa
int3
or
or
iret
or
push
mov
out
cld
xor
outsb
insb
push
scas
das
negb
jnp
xor
jl
scas
fucom
fbstp
or
or
jne
xchg
mov
fbstp
xchg
pop
and
inc
loope
outsb
inc
mov
fidivl
mov
push
cli
adc
rclb
arpl
cli
outsb
mov
mov
addb
jb
int3
arpl
mov
sub
inc
jecxz
or
movsb
dec
sbb
ret
imul
lcall
lret
sub
mov
jmp
pop
pop
icebp
nop
pop
repz
stos
pushf
xor
imul
or
dec
mov
inc
pop
icebp
cwtl
push
aam
int
fwait
jne
pushf
xor
out
movsb
inc
aaa
pop
mov
pop
out
fdivs
shll
js
mov
test
out
aam
test
add
cmp
mov
jb
dec
inc
cltd
cmpsb
xchg
fwait
sub
repz
in
and
jp
clc
xor
mov
inc
mov
roll
fnstsw
aad
fildl
bound
adc
jo
xor
lods
xor
lock
ds
ljmp
call
orb
push
dec
cmp
jle
adc
and
jbe
nop
sahf
xor
pop
and
push
push
jle
clc
es
jp
shrb
push
inc
addb
xor
aad
les
xchg
mov
push
call
or
jnp
jge
dec
addr16
sbb
cmp
jecxz
out
or
sub
inc
push
add
dec
push
movsl
dec
ljmp
ljmp
xchg
xchg
jae
cmp
or
fsub
cmp
and
xor
in
adc
fidivrl
decb
nop
xor
jecxz
mov
sbb
jbe
xor
fildll
stos
sbb
aas
imulb
jle
jge
rcll
sbb
jge
mov
xchg
mov
adc
jl
mul
jl
lahf
iret
into
int
add
and
lret
push
jmp
inc
sbb
inc
push
sub
jae
push
or
pusha
stos
inc
push
lods
and
ljmp
call
neg
out
pop
fwait
outsl
and
sub
repz
mov
int
imul
scas
fnstcw
int
mov
ficomps
xchg
and
aam
or
data16
push
arpl
sbb
jmp
std
aas
loope
es
test
jle
fcmovnb
pushf
addb
arpl
bndstx
dec
fadd
cmp
push
jae
xchg
shrl
lcall
daa
jb
sub
repnz
loopne
xchg
sbb
or
mov
imul
xchg
add
sbb
pop
repz
and
mov
jp
sub
ds
jg
or
insl
andb
jle
mov
sbb
test
sbb
mov
dec
sub
cltd
mov
inc
inc
adc
aad
inc
pop
popf
jae
jle
push
ljmp
mov
daa
ja
sbb
or
sub
insb
repz
fcomip
dec
add
pop
jb
dec
frstor
iret
out
gs
add
icebp
inc
fiadds
xchg
add
cmp
andb
or
push
or
cltd
idivl
push
repnz
scas
sbb
sarb
rcrb
rcrl
out
jbe
pop
daa
pusha
insb
jle
fisubl
inc
out
mov
out
sbb
inc
rcr
ljmp
popa
inc
lret
dec
jmp
andl
or
icebp
and
loope
ljmp
mov
lds
cli
xchg
rcr
and
andl
pop
test
jl
sub
call
out
mov
adc
icebp
jbe
stos
in
cltd
jg
mov
sub
cmp
cli
and
dec
sbb
ret
movsl
je
push
psubusw
pop
pop
in
pop
jne
xor
dec
addr16
or
and
and
cmp
gs
negl
mov
arpl
adcb
or
jb
pop
sar
and
fbld
push
and
adc
outsb
js
dec
dec
jb
bound
sbb
notb
aas
pop
mov
add
imul
jmp
xor
cmpsl
pop
and
sbb
test
or
add
sahf
insb
lahf
sbb
cli
call
xchg
add
es
or
sbb
imul
pop
les
push
stc
xchg
sbb
into
imul
loop
adc
adc
xor
or
mov
out
inc
pop
inc
or
push
pop
mov
jbe
sahf
and
sbb
fbstp
xlat
stc
or
test
pop
jg
jecxz
int3
lcall
in
popa
and
ret
in
jl
iret
lcall
and
cmpsl
notb
and
jo
cmp
adc
jle
jae
pop
xor
lahf
cli
dec
push
leave
sbb
inc
xlat
lret
lcall
push
negb
sub
jge
cli
cli
sub
mov
pop
int3
fiadds
sub
lret
mov
mov
mov
bound
pop
jbe
mov
add
jge
lea
ds
xor
push
data16
xor
cmp
out
ss
aad
je
shrl
push
mov
xorl
mov
imul
aaa
push
pop
lea
cli
mov
cmc
sbb
xor
xor
cld
cmp
mov
push
jne
mov
in
sub
lods
push
and
jno
stos
mov
jg
adc
cld
lcall
or
jle
and
mov
and
test
push
dec
jae
mov
cmp
repnz
fucomip
pop
pop
add
add
pop
scas
clc
and
lods
icebp
enter
jge
cmp
xchg
imul
xchg
push
pop
into
ret
icebp
arpl
leave
jmp
push
jno
dec
mov
fsubl
sahf
call
add
add
fidivs
ss
pop
inc
cmpsl
adc
cmp
pop
mov
int
call
int
inc
ret
shrb
jnp
hlt
inc
loop
lock
sbb
xor
mov
cwtl
push
inc
shlb
sub
je
std
inc
stc
out
or
sahf
mov
out
xchg
inc
cmp
xorl
jl
push
outsl
shrl
jo
in
mov
jmp
cmpsl
mov
ljmp
mov
rolb
fdivrp
inc
mov
data16
mov
test
lods
popf
add
sti
shll
mov
sub
cmpsb
cmc
jecxz
jne
mov
cwtl
mov
push
movups
stos
ja
xchg
ja
pop
sub
int3
mov
fwait
mov
out
fwait
add
lds
test
mov
mov
pop
xchg
and
cld
pop
daa
arpl
jp
sbb
out
sub
int
movsl
pop
cs
jp
xchg
stos
xor
inc
pop
pop
testb
mov
popa
push
outsb
fdivrs
repz
mov
push
xor
jp
test
inc
pop
add
xor
push
mov
jmp
fisttps
xchg
out
ljmp
xchg
cmp
lahf
ss
shll
sub
cli
dec
jb
xor
mov
and
push
inc
inc
ljmp
int
lret
fldcw
push
jne
mov
stc
sbb
andb
into
lods
jns
pop
cmp
lret
fs
inc
dec
push
push
bound
lret
iret
imul
adc
pop
inc
lret
ja
stos
test
jb
jg
repnz
out
cmp
in
iret
mov
aaa
dec
bnd
subb
dec
add
ficomps
sbb
sti
pop
mov
into
mov
test
imul
adc
ret
negb
pop
jmp
cs
push
sbbb
jb
rcrl
icebp
icebp
jo
andb
in
pop
inc
jecxz
sbb
push
mov
dec
dec
adcl
dec
leave
pop
test
dec
inc
inc
call
ficompl
inc
dec
jae
and
aad
mov
adc
std
and
mov
repz
rcrb
in
dec
js
nop
xor
inc
lahf
lock
jg
das
pop
push
imul
cmp
dec
cmp
mov
mov
or
jo
mov
int
lods
daa
mov
pop
ja
sub
das
cltd
in
push
inc
mov
mov
xchg
arpl
sub
or
inc
push
imul
cwtl
out
adc
cwtl
das
pop
pop
lds
jl
push
imul
ret
push
pop
fidivrs
sbb
int
mov
std
ficomps
test
push
incl
daa
add
sub
sahf
popa
clc
iret
jbe
mov
mov
or
aaa
push
sub
jecxz
mov
fldl
cmp
mov
sub
lsl
adc
and
das
hlt
fistpl
lea
outsb
sub
xchg
or
out
pop
inc
push
aad
dec
pop
xor
cmp
pop
lahf
imull
fs
push
out
in
mov
add
adc
adc
lret
sbb
mov
popf
rcll
nop
mov
call
aam
addb
lock
push
mov
inc
aaa
scas
mov
lock
add
dec
pop
and
idivb
mov
fnstsw
push
ret
push
push
fnstenv
jg
pop
addr16
fwait
mov
cmpsb
cltd
je
repnz
int
nop
xlat
mov
inc
dec
pop
mov
push
mov
sbb
fimull
or
jg
inc
cmp
pop
xchg
test
mov
loop
ret
hlt
hlt
xor
or
fidivl
jno
loop
inc
sbbl
fucom
jp
sbb
mov
insl
mov
cld
mov
add
dec
xor
push
aad
push
mov
sub
push
jo
xchg
inc
pop
push
mov
jnp
xor
xchg
movsl
out
inc
pusha
out
adc
xchg
mov
test
cmpsb
adcb
push
out
cmp
lods
gs
or
aad
ret
push
adcl
aas
fisubl
pushf
lret
jb
sti
mov
shll
jno
push
loope
adc
shrl
pop
adc
pop
test
xor
popf
hlt
push
push
lret
scas
dec
dec
iret
xor
dec
add
inc
fsubrl
dec
mov
or
and
and
xlat
mov
scas
or
daa
jb
shrb
enter
sbb
or
in
pop
sub
sub
nop
pop
dec
mov
xor
ss
add
aas
rolb
out
xor
sub
gs
jmp
mov
aad
mov
xchg
les
and
out
cmp
bound
sti
mov
repz
cmp
call
xor
pop
icebp
adcb
int
ss
xchg
mov
lds
pop
repnz
adc
adc
sub
cld
push
pop
jns
sub
jge
xor
dec
aaa
shl
add
xor
movsb
mov
push
push
popf
push
push
ja
jb
je
test
push
inc
and
and
daa
mov
inc
mov
repz
popa
mov
aaa
pop
movsb
js
adc
adc
push
int
and
cmp
int
fbstp
fs
cmpsb
movhps
popa
repz
jno
cmp
mov
adc
mov
adc
mov
mov
xor
push
movsl
jmpw
sub
xchg
inc
out
stc
gs
lcall
in
cld
rorl
imul
cmp
inc
das
out
xchg
jmp
jle
movsb
pop
push
mov
adc
and
nop
mov
std
dec
imul
aaa
pop
jns
insl
stc
cmp
mov
testl
int3
lret
imul
adc
xchg
int3
add
lods
cmpb
ds
jl
add
mov
std
test
lods
add
inc
rcrb
sti
dec
sub
in
sbb
add
ficoms
or
cmpsl
dec
add
inc
popf
lods
sar
cmp
sbb
jno
idivl
notl
mov
jmp
hlt
mov
mov
icebp
cmp
das
lods
out
scas
mov
stos
mov
mov
push
in
sub
xchg
inc
es
and
push
notl
flds
cmp
mov
mov
push
rcl
inc
xor
push
pop
sahf
xchg
sub
mov
pop
xor
cmpsl
push
adc
mov
iret
add
pusha
hlt
jle
adc
shlb
xchg
push
jmp
shl
sbb
jo
lret
pop
cmp
outsl
es
les
add
mov
dec
or
mov
cmp
insl
scas
sti
ljmp
int3
int3
pop
or
shlb
cmpsl
cmpsb
jns
clc
pop
push
scas
nop
add
jno
push
xchg
adc
jns
mov
pop
icebp
push
add
mov
or
fs
sub
js
xor
lret
mov
sbb
dec
pushf
cmc
shrl
add
adc
xor
fidivl
mov
cmp
clc
andb
cmp
fsubr
cmp
jge
pop
sahf
test
sbb
hlt
iret
inc
clc
fistl
pop
push
or
jnp
dec
push
in
pop
inc
cmc
clc
xchg
mov
lahf
aaa
push
leave
xchg
jl
cwtl
arpl
testb
mov
jg
inc
pusha
std
adc
ret
fbld
xor
and
push
call
sub
into
int3
fimuls
jmp
popf
xor
js
imul
inc
inc
lret
jge
xor
mov
dec
mov
mov
daa
mov
mov
test
addl
xchg
imul
lret
aam
push
mov
push
mov
mov
sahf
xor
into
mov
push
popa
stc
cmpsl
mov
push
fistps
rcrl
into
cltd
or
xchg
cmc
and
fsubl
repnz
mov
xchg
int3
sbbl
cli
je
cmc
iret
mov
fmul
cvtps2pi
in
imul
jno
enter
pop
notb
cmpsl
lret
out
dec
shl
ficompl
adc
mov
call
ja
ljmp
dec
jns
sub
ljmp
dec
push
lods
mull
sub
lret
jb
dec
ret
cld
xor
push
sub
mov
sub
movsb
cmpsl
xorl
add
inc
fimuls
stc
adc
sub
out
cmc
popf
jo
xchg
sub
nop
je
jle
mul
cmpsb
rcrl
inc
push
adc
adc
insl
xchg
insl
sbb
fdivr
rol
stos
sub
lcall
jmp
cmp
movsb
dec
push
rcrl
les
adc
adcl
int3
sub
adc
xor
movsb
fwait
ss
lods
push
mov
fidivl
stos
jge
xlat
scas
fbstp
sub
in
jg
das
pop
sbb
pop
bound
jge
cmc
mov
pop
cmpsb
push
or
pop
mov
scas
int3
int3
mov
das
out
jno
pop
cmp
mov
es
out
cmpsl
dec
mov
mov
je
dec
cmpsb
cmpsb
xor
sbb
mov
ss
cs
f2xm1
cmp
pop
orb
dec
and
sub
inc
jne
xchg
inc
decl
aaa
pop
out
into
aad
mov
cs
out
outsl
pop
icebp
mov
jmp
add
jae
js
cmpl
xchg
sbb
pushf
cmc
sbb
jb
adc
and
nop
out
hlt
xchg
push
shlb
out
arpl
adc
push
rcrl
fwait
testb
or
fldcw
xor
ret
leave
and
mov
xchg
in
jl
or
mov
rcr
sahf
mov
pushf
out
pop
xor
pop
jl
xor
out
inc
xor
add
mov
add
popa
das
testl
jecxz
xchg
ret
loopne
shl
mov
sub
imul
out
mov
jle
mov
dec
inc
jl
and
or
sub
daa
dec
add
lahf
mov
inc
outsb
sahf
mov
daa
ret
add
mov
lcall
and
adc
and
test
sub
mov
mov
fs
xchg
or
and
stc
lock
in
in
mov
add
sub
cmp
sub
sbb
sub
cmpb
or
outsb
mov
mov
cmp
lods
aas
arpl
mov
ret
roll
les
push
iret
push
in
xchg
mov
popa
icebp
mov
int
and
mov
les
in
fsubs
cmp
mov
mov
push
gs
mov
sub
into
cmp
add
fucomp
or
pushf
xor
mov
lea
int3
push
popf
mov
fbld
push
loopne
jnp
pusha
std
xchg
push
xchg
or
sbb
adc
lea
add
mov
sub
int
loopne
iret
pop
lods
daa
mov
mov
enter
scas
inc
je
push
jmp
xchg
int
fwait
jo
xor
fwait
test
adc
mov
es
mov
xchg
sahf
lods
jmp
cld
sbb
leave
mov
push
inc
xchg
lods
inc
cmpsl
push
sbb
pop
lahf
aaa
pop
xchg
add
popa
jne
pop
scas
repz
rorb
adc
mov
xchg
shrl
test
jle
jl
mov
incb
aam
sti
movsl
cmp
or
lahf
cmp
cmp
das
pop
es
test
mov
fisttpl
test
sub
out
pushf
xor
test
jnp
inc
mov
cltd
add
hlt
mov
xor
adc
mov
loopne
sti
adc
sub
and
dec
fbstp
mov
mov
mov
stc
xchg
ret
test
pop
fisubs
seta
push
in
push
test
or
lods
inc
add
xor
out
mov
jbe
fcmovnbe
and
pop
sbb
mov
jb
aas
lahf
pushf
nop
daa
into
lods
fnstenv
pop
cmpsb
cmp
xor
les
pop
fidivl
sbb
dec
test
mov
insb
insl
add
ds
mov
push
call
cmp
insb
lea
aad
lea
mov
lret
sti
push
pop
dec
sbb
mov
in
lahf
push
out
lods
shrl
mov
test
fisttpl
adc
decl
cltd
scas
inc
lret
jne
andl
ret
xor
jge
adc
add
mov
xchg
sahf
fsubl
lods
mov
fildll
sbbb
add
aaa
mov
pop
test
mov
jno
daa
cld
xchg
push
sti
push
lods
xor
subl
mov
dec
out
cmc
in
andl
jmp
emms
into
gs
sti
xchg
shlb
sbb
dec
loope
xchg
outsb
stos
inc
pushf
les
mov
pop
out
mov
pop
scas
cmp
adc
xchg
daa
es
in
ja
aad
or
xchg
sub
xchg
push
montmul
cmpsb
inc
mov
mov
arpl
clc
cmp
pop
inc
fimull
lods
test
pop
mov
cmp
lods
fdivl
dec
mov
shrl
cltd
imul
js
std
xchg
adc
cmp
call
push
mov
ficomps
or
shrl
aam
push
add
adc
and
mov
les
xchg
clc
rorl
add
mov
dec
int3
push
mov
aad
or
sbb
jb
adc
inc
roll
lcall
xor
dec
adc
rorl
decb
adc
jbe
adc
jae
aam
ljmp
mov
dec
shll
cwtl
push
sbb
orb
leave
dec
rorb
add
es
dec
pop
lds
mov
add
dec
in
sbb
dec
pop
scas
inc
dec
rorb
add
and
dec
sbb
dec
xlat
mov
push
fdivrs
or
adc
gs
into
pop
jmp
cwtl
das
adc
or
scas
cmp
adc
push
and
cmpl
jmp
call
and
mov
div
jae
and
stc
testl
and
push
mov
sub
icebp
std
xchg
and
gs
outsl
sti
pop
scas
sub
adc
push
outsl
repz
and
out
xor
dec
out
out
push
ljmp
mov
mov
sbb
sub
loope
sbbl
aas
adc
adc
or
in
imul
or
jo
aaa
adc
pop
mov
and
in
lea
sarb
add
lods
pop
in
popa
clc
pop
enter
or
cmp
cmp
pop
sbb
jmp
add
mov
xor
and
dec
in
shrl
fmulp
popa
psubb
sahf
sub
inc
fmuls
loope
xor
sti
xchg
push
call
mov
stos
inc
fsubp
jns
flds
pop
dec
sbb
dec
push
ffree
pop
adc
shrl
pop
sub
xor
in
sub
mov
daa
mov
jno
mov
add
mov
dec
dec
mov
jp
xchg
sub
scas
lahf
fistps
es
dec
mov
jnp
scas
inc
or
cmp
push
dec
cmp
and
xchg
in
test
daa
or
mov
aaa
mov
inc
fcmovbe
fisttpll
lahf
or
or
ss
jbe
pop
push
sub
test
dec
test
ret
int3
arpl
pop
fwait
mov
push
repnz
aaa
dec
mov
lods
lcall
lret
lock
shrl
sbb
dec
dec
outsb
test
lcall
out
testb
or
das
cmp
ss
push
data16
mov
jecxz
cmpsb
sbb
das
outsb
push
xor
orl
adc
clc
mov
and
dec
dec
loop
addl
movsl
mov
rcr
pop
sahf
or
xchg
das
xor
jp
dec
cmp
jns
imul
int3
or
mov
and
inc
fidivl
shrl
xchg
pop
sahf
lret
sbbl
in
mov
dec
xor
jnp
mov
sarb
loopne
lret
dec
loopne
ss
inc
push
mov
mov
xchg
inc
xchg
nop
mov
lret
push
nop
fwait
adc
sbb
lret
or
out
push
pop
cmc
xchg
in
xorl
mov
push
or
inc
test
dec
loopne
mulb
mov
dec
enter
jb
inc
cwtl
lcall
in
xor
int
jge
cmp
adc
or
insl
xor
call
jmp
jmp
cwtl
scas
jo
cmpsb
cmp
pop
cmp
nop
in
popa
adc
push
movsl
jo
or
xchg
into
push
out
push
mov
sub
sbb
cmp
xlat
xor
int3
jecxz
test
mov
ljmp
cmpsb
lock
xor
push
cmc
sbb
daa
test
loope
dec
loop
jns
push
or
jne
pop
out
and
sbb
and
cmp
inc
outsb
enter
rcrb
out
dec
call
es
imul
pop
repnz
mov
add
in
test
out
xchg
mov
mov
rcll
shrl
enter
ja
cmp
jge
es
pop
or
jo
daa
xchg
sub
mov
dec
movsl
inc
fiaddl
xchg
push
adc
xor
test
adcb
sarb
push
mov
arpl
and
es
loop
inc
pop
fldt
fs
lock
shrb
jle
aas
popa
iret
stos
jns
xor
sub
push
iret
push
nop
test
adc
dec
les
push
ds
xchg
xchg
sbb
ds
mov
out
mov
idivl
ror
test
repnz
jl
hlt
inc
lods
int
cli
dec
sbb
pusha
mov
cwtl
rolb
mov
dec
cmp
pop
rorb
cmp
add
mov
repz
jnp
ret
jo
mov
in
mov
js
out
pop
cmpsl
fldcw
jecxz
sbb
push
mov
div
cmp
popa
ljmp
cmp
rcrl
stos
outsl
fwait
ret
xchg
push
pop
xchg
sub
repnz
movsb
push
int3
cmp
sti
xchg
jg
pushl
pop
das
pop
ret
jle
add
pop
cs
xchg
xor
inc
int
cli
mov
sub
cmp
lea
fisubrs
or
and
mov
mov
aas
repnz
test
push
popf
add
jg
sbb
inc
mov
clc
cs
int3
jb
xlat
insb
push
xchg
push
lcall
outsl
mov
push
mov
add
sub
xor
add
jno
aas
ljmp
push
stos
xchg
sbbl
data16
lea
stos
rclw
mov
xchg
mov
cwtl
sbb
lea
stos
je
negl
nop
mov
or
jg
mov
rcrb
fs
mov
out
pop
scas
pop
mov
push
lret
jg
and
sub
lods
inc
sub
jmp
inc
xchg
xchg
jnp
pusha
cmp
pop
test
std
pop
and
lods
pop
sub
mov
out
sarl
std
aas
loop
push
cmp
outsl
rcll
mov
cli
inc
test
fwait
clc
int
arpl
into
out
pop
int
mov
ljmp
pop
or
push
out
in
xchg
repnz
mov
xchg
aam
pop
mov
xor
outsb
jae
cmc
xor
or
aas
cmpsb
sub
xor
out
int3
das
mov
mov
aas
lock
cmpsb
xor
jmp
rol
movsb
xlat
outsb
mov
inc
movsl
ret
add
rclb
xlat
jns
ss
fiaddl
and
pop
shrl
sub
mov
addr16
mov
and
out
rcl
dec
fdivrs
je
xchg
cwtl
sbb
cld
pop
cmpsb
test
not
insl
mov
cmpb
sbb
ret
mov
arpl
pushf
mov
mov
adc
out
stos
bound
cmp
adc
aas
mov
jns
insl
bound
xor
push
sbbb
cmp
test
sti
sbb
mov
loop,pn
out
adc
lcall
mov
cmc
xor
pop
mov
loop,pn
shr
push
rclb
out
xchg
mov
push
sub
jle
mov
cli
pusha
lods
les
dec
mov
lock
push
rclb
insl
icebp
sub
sub
divb
cmp
adc
clc
daa
out
jbe
in
or
cs
sbb
addr16
mov
pushf
xchg
jb
mov
test
xchg
in
pop
xchg
jnp
dec
sbb
arpl
xchg
sub
insl
lcall
pop
cmc
mov
fsubrp
xor
add
cmp
repz
call
stos
lret
aas
inc
roll
sub
cwtl
jnp
gs
or
mov
cmp
cmp
sbbl
adc
stos
fldenv
mov
jne
mov
out
inc
repz
rcrb
into
cmpsb
pop
pop
add
out
xor
ret
jb
mov
movsl
lcall
aam
cli
pop
cli
rolb
repnz
shlb
into
lods
jge
adc
and
shlb
in
test
cmp
mov
aad
aas
testl
pushf
mov
repz
push
add
sbbb
cltd
aam
dec
ds
jnp
mov
push
xor
jp
ret
inc
cmp
pusha
cmp
dec
lods
cmpl
jg
sahf
cmpb
jne
xor
jne
clc
loop
je
aam
inc
mov
mov
std
inc
mov
test
out
clc
mov
dec
mov
cli
and
fstl
or
mov
insb
mov
mov
clc
in
out
fimuls
hlt
adc
repnz
movsl
cmpsb
mov
cmp
hlt
push
into
lret
xchg
imull
and
inc
mov
gs
pop
call
xorl
inc
add
rolb
insl
cwtl
stc
cmp
cli
lea
sbb
stos
mov
push
out
ss
mov
insl
lcall
cmpb
push
inc
xlat
xchg
jge
dec
sahf
mov
pushf
xchg
clc
cmp
jp
jle
fistpl
enter
unpcklps
outsb
fwait
xchg
ret
inc
xor
inc
jbe
insl
dec
dec
popa
fwait
push
inc
rcrb
and
xchg
jp
cmp
orl
sbb
fs
cmp
sub
stos
add
jg
in
icebp
sub
dec
les
subb
mov
shlb
lods
or
push
sbb
pop
hlt
jne
lcallw
add
addb
test
and
jge
add
mov
jne
icebp
mov
mov
fstpt
sbb
add
sub
pop
insb
xor
jmp
and
push
jbe
and
mov
xor
jge
loop
sbb
xor
bound
sbb
cmpb
pusha
mov
jne
and
jmp
mov
adc
jb
jns
les
fldl
dec
aaa
ficoml
outsl
hlt
inc
adc
gs
sub
sbb
pop
lcall
out
cld
fisttpl
fnstsw
js
pusha
and
enter
xor
outsl
and
inc
mov
sbb
push
cmpsb
mov
sub
mov
push
dec
push
int
inc
xchg
xchg
xor
jno
test
push
dec
out
aas
push
lret
ficoml
or
mov
repnz
popa
fcoml
ljmp
in
sub
test
daa
incb
sti
ret
pop
divb
xor
ret
hlt
ja
stc
and
icebp
aam
sub
arpl
aam
pop
lea
xor
addr16
xchg
insb
jbe
cld
xor
xchg
inc
push
add
addr16
insb
mov
cmpsl
push
pop
les
push
fistpl
ja
icebp
pop
cmp
aas
in
repz
mov
lds
push
into
aam
push
push
fldpi
and
jne
fmuls
cmp
popl
cmp
add
loopne
inc
xlat
test
pop
stc
pop
iret
jne
fsubs
xor
cmpb
or
and
stos
pop
fsts
pop
adc
xor
mov
xchg
cmp
jo
leave
pop
dec
mov
adc
stos
test
shll
push
iret
out
cli
pop
into
lret
xor
ret
les
rcl
jmp
adc
ret
hlt
shr
and
pop
dec
mov
cli
sbb
sti
jo
mov
test
in
movsb
cmp
in
jmp
psllq
cwtl
mov
xlat
or
ficoml
pushf
aas
call
lds
jmp
ret
in
jb
inc
mov
stos
push
ret
fcoms
movl
cmp
jg
sub
mov
loope
or
jnp
jnp
int3
icebp
xor
or
fstl
sbbl
adc
fdivs
fcoms
adc
int3
popa
clc
fcmovu
add
lret
cld
ljmp
mov
jl
iret
lret
jge,pt
subl
xchg
mov
sub
mov
fnstsw
divb
mov
test
push
jnp
sbb
orl
xchg
aas
pop
jle
dec
ja
sahf
outsl
push
add
jno
jno
divb
push
push
push
lret
leave
cmp
push
or
loopne
xor
imul
fs
aaa
push
xchg
xchg
imul
push
cmpsl
xchg
inc
fldt
jmp
in
int3
movsb
xchg
jbe
lret
and
loopne
sahf
xor
add
cs
insb
shlb
xor
jnp
push
push
daa
repnz
fstps
xor
xchg
fcoms
fistl
add
and
lods
inc
pop
inc
int
pop
dec
xchg
pop
mov
xchg
inc
push
lods
inc
xchg
mov
clc
inc
push
cmpsl
mov
hlt
push
call
into
sahf
aas
mov
in
jno
scas
mov
enter
mov
insb
adc
mov
xor
adc
push
scas
in
mov
loope
lea
sbb
sahf
xor
sarb
or
mov
out
xlat
mov
daa
mov
sti
ficoml
fidivl
jae
mov
xor
test
sbb
movsl
arpl
mov
lcall
test
rorb
adc
cmp
sbb
sbb
add
ret
dec
or
add
push
stc
fsubrl
pusha
pop
mov
fcmovne
push
enter
pop
faddp
sub
test
inc
pop
fmul
inc
out
cmpsl
jns
pop
mov
insl
fwait
addr16
fstpl
mov
mov
repz
aaa
jmp
mov
and
and
outsl
xchg
shlb
out
addr16
xchg
push
outsb
mov
sbb
stos
inc
pop
mov
mov
fsubl
ljmp
mov
xor
inc
ja
or
mov
sbb
jge
sbb
mov
bound
adc
or
or
cmpsl
push
or
xor
cld
mov
sarb
or
std
and
pop
clc
cmp
push
xorl
es
fwait
addl
inc
push
fisubs
int3
subl
je
sub
jae
pushf
xchg
push
es
xchg
jbe
std
mov
add
push
lods
ss
jg
inc
jecxz
adc
addr16
lods
inc
test
push
lcall
jne
xor
lock
call
mov
pop
cmpl
add
sub
je
loopne
pushf
xchg
add
clc
or
dec
jbe
jmp
daa
movsl
pop
enter
ljmp
movsb
pop
in
and
sbb
dec
jmp
fs
add
sub
add
adc
xchg
out
ds
sbb
outsb
mov
inc
testb
jae
mov
es
repz
mov
jno
xchg
jne
add
xchg
jp
cwtl
cwtd
and
push
lret
xchg
pop
xor
lahf
push
in
push
cmp
inc
jp
pop
int
xor
sahf
fmuls
xchg
jp
fnstsw
f2xm1
lahf
lea
addb
in
testb
mov
xor
mov
sarl
or
sbb
mov
clc
repnz
push
movsb
enter
movsb
dec
bound
jle
push
popf
mov
cmp
sbb
pop
shrl
push
sbb
scas
inc
aas
push
mov
jno
jp
and
arpl
ja
jg
mov
ja
test
xchg
test
std
sub
out
gs
and
cmp
loop
xadd
scas
lret
cmp
cmp
faddl
push
add
mov
and
mov
bound
call
call
dec
ret
shr
out
mov
rorl
into
and
ret
aad
fldl
mov
mov
lret
stc
stc
and
mov
adc
fmull
xchg
mov
jnp
sarl
stos
sub
cmp
mov
ljmp
or
mov
nop
addb
push
push
hlt
push
lret
icebp
push
sbb
pop
cmpsb
xchg
jge
dec
sbb
sti
dec
add
mov
repnz
int
movsb
inc
mov
fisubl
sub
pop
test
push
add
subl
and
adc
dec
push
enter
push
scas
pop
jbe
test
jo
inc
js
mov
popa
bound
inc
xor
xor
popa
leave
add
xor
sub
jg
xor
inc
hlt
cs
int
fwait
jbe
push
inc
or
jae
movsb
pop
mov
out
scas
inc
insl
cltd
dec
adc
push
ja
adc
dec
mov
mov
jmp
mov
and
pop
repz
shrl
mov
hlt
jnp
jp
xchg
and
mov
mov
insb
lods
or
subl
inc
hlt
cmp
dec
int3
dec
insl
push
rclb
and
jb
daa
movsb
cmp
or
negb
xchg
xchg
cwtl
mov
stc
push
mov
mov
call
add
jno
in
and
rorb
push
mov
cs
push
call
pop
and
jle
sub
cmp
dec
in
pop
inc
cmpsl
outsb
sti
ds
cmp
int3
and
loope
mov
cmpsb
mov
mov
mov
push
mov
mov
out
mov
dec
inc
or
imulb
jmp
les
sbb
loope
or
or
jmp
jle
or
popf
test
add
sbbl
addr16
adc
xor
jne
and
sbb
sbb
popa
aad
xchg
adc
xchg
ja
inc
int
gs
jp
mov
mov
daa
xchg
pop
rclb
imul
xchg
cmp
ljmp
fisubl
sub
inc
adc
imul
xor
int
pop
inc
mov
pop
shrb
out
and
sub
sub
push
push
and
stc
daa
push
outsb
add
inc
gs
icebp
mov
xchg
xor
mov
jbe
loop
pop
inc
cmpsl
popa
inc
adc
daa
mov
mov
je
or
jp
mov
xchg
pop
inc
lcall
jle
gs
movsl
lea
scas
mov
fbld
cmp
inc
mov
jnp
push
lret
xchg
xchg
xchg
inc
lods
xor
fs
xor
push
arpl
stos
rolb
add
push
sub
movsl
lea
jp
xor
sbbb
xchg
das
sbb
loop
or
fiadds
pushf
int3
inc
sbb
mov
xor
xchg
fwait
jno
xor
dec
dec
push
movsb
mov
pop
jb
adc
inc
daa
xchg
sub
les
xorb
pop
icebp
shr
push
enter
xor
test
ret
sub
loop
into
xorb
std
cmpsl
mov
and
inc
fcom
insl
fldcw
jo
pushf
jno
imulb
test
cmpsb
imul
dec
divl
pop
fistpl
xor
bswap
popa
outsl
stc
inc
ret
int
mov
ljmp
inc
push
xchg
push
test
pop
xrelease
cmp
mov
jecxz
lcall
mov
adcb
int
icebp
ljmp
lea
cmpl
rolb
aad
es
movb
add
pop
or
in
mov
adc
push
xchg
fsts
insb
cltd
ljmp
int3
and
push
out
mov
or
jecxz
or
cmc
xor
and
in
adc
inc
fcomps
mov
inc
sub
mov
ss
pop
pop
lret
add
testb
sub
scas
xchg
pop
icebp
and
clc
loopne,pn
outsl
movsl
pop
mov
xor
pop
int
jns
pusha
stos
sub
popa
xlat
sbb
mov
in
in
adc
decb
push
pop
adc
adc
sub
divl
incl
sbb
cmp
mov
cmp
push
leave
mov
incb
xor
dec
nop
shll
sub
mov
sti
and
movl
jecxz
pop
inc
faddp
loop
cmpsb
mov
in
dec
iret
sar
xchg
loop
lret
dec
ret
inc
enter
dec
ljmp
push
cmp
pop
jbe
adc
push
adc
arpl
and
inc
clc
nop
jns
ficoms
cmp
lods
inc
outsb
lret
ss
sub
je
inc
ljmp
ja
xor
mov
pop
fildl
inc
inc
cmp
inc
pop
ds
ds
jge
addr16
push
jmp
inc
pop
push
adc
inc
sbbl
xor
dec
mov
int
push
loope
inc
lds
mov
ret
mov
pop
xor
pop
cmpsb
ret
sbb
push
mov
mov
je
push
addr16
and
sbb
push
jae
btl
mov
nop
mov
jmp
xchg
addr16
jo
jbe
nop
mov
fbld
iret
and
dec
xchg
ss
test
sub
jb
xchg
lret
cmp
and
inc
iret
pop
xor
jb
jmp
add
ds
push
adc
bound
dec
mov
sbb
pop
dec
add
mov
xchg
push
popf
in
push
push
fcoms
fists
fiaddl
jb
jb
inc
mov
cmpsl
jb
jno
cmp
insb
fs
add
mov
arpl
popa
xchg
jns
in
ss
mov
xchg
push
mov
icebp
xor
faddl
adc
lock
xor
stos
dec
sub
lods
inc
fwait
aaa
lods
jo
pop
mov
jp
jg
inc
inc
movsl
push
xor
bound
cmp
test
mov
mov
aaa
mov
cmp
xchg
outsl
or
sub
sub
mov
sarb
jp
loopne
jne
xchg
jp
push
in
inc
pop
test
jo
cltd
xor
rcrb
or
push
mov
mov
sbbb
aad
loopne
mov
adc
push
adc
inc
imul
xchg
mov
sub
aas
loop
dec
mov
psubw
pop
lods
add
xor
bound
lea
cmpb
testl
jl
xchg
sub
xor
pusha
js
pop
pop
xlat
pop
pusha
pusha
test
push
pop
dec
out
pop
clc
sub
dec
dec
loopne
dec
pusha
lds
dec
add
jl
mov
dec
popf
rclb
dec
mov
pop
cmp
mov
cmpl
add
ret
lahf
sbb
negl
and
pop
xchg
popf
es
sub
mov
out
inc
lret
and
push
mov
cmc
fbld
enter
scas
mov
loopne
rclb
enter
hlt
add
inc
mov
xchg
and
inc
and
arpl
inc
lret
shrl
xor
mov
sbb
popf
adcb
lahf
mov
lock
scas
jle
das
sub
mov
dec
sub
xchg
and
cmpsl
icebp
insb
add
in
jb
fisubl
loope
into
fnsave
imul
lea
sub
sbbb
xchg
dec
push
inc
mov
dec
push
push
int
pop
sbb
push
cmp
insb
push
jmp
dec
lea
xchg
mov
sub
jno
cmp
shrl
pop
scas
mov
pop
cmpsl
jbe
mov
pop
cmpsb
inc
test
test
lock
fsubrl
sar
dec
shlb
and
aam
mov
out
dec
imul
inc
sarl
jbe
shlb
mov
fcmovu
push
loope
cmpb
stos
xchg
push
lock
xor
xor
hlt
jne
cli
inc
cmp
and
jp
lods
pop
push
xor
ret
pop
cmp
lock
xchg
push
add
xchg
jno
mov
add
mov
repz
cmc
xlat
outsb
daa
dec
or
push
inc
pop
or
repnz
shll
dec
xlat
decb
pop
imul
and
adc
inc
lds
cli
xchg
movsl
xor
jg
mov
and
test
mov
testl
cwtl
add
add
cli
xlat
cmp
mov
aad
xlat
fdivl
adc
mov
mov
popa
call
repz
call
lods
xor
sub
adc
scas
scas
add
clc
stc
xor
and
ljmp
in
mov
mov
adc
fxch
cmp
in
lret
fisubrl
lea
sbbb
push
and
sbb
cs
sub
not
insb
cltd
ds
mov
cmpsb
add
aam
add
and
jmp
mov
shrl
fwait
jge
sub
int3
aas
jecxz
push
cmp
add
xor
repnz
and
pop
fs
mov
mov
adc
inc
fidivl
pop
out
test
popa
clc
leave
jbe
sti
in
push
pop
sbb
popf
xor
jo
dec
mov
ret
shrl
fcompp
jo
pop
lock
testl
mov
sub
in
xor
pop
cmovnp
inc
sub
pop
popa
imul
lods
mov
push
out
lea
pop
cmpsb
cmp
push
pop
les
jae
popa
movsl
lods
loop
ffreep
call
cwtl
xor
pop
sahf
dec
push
pop
mov
imul
aad
inc
negb
daa
adc
inc
dec
jns
jp
adcb
fwait
xchg
cs
sahf
xor
and
mov
push
pop
xchg
icebp
mov
scas
stc
nop
loope
sbb
sbb
push
ss
mov
mov
psubd
sub
xchg
arpl
daa
jg
movsl
cmp
mov
ret
pop
or
int3
arpl
sub
js
inc
ljmp
lcall
add
es
push
aas
inc
pop
lock
xchg
stc
add
shlb
cmp
xchg
enter
call
lahf
ss
xchg
xor
cmpsb
xor
jns
movsb
sub
out
ss
loop
jg
adc
rcrb
leave
int
push
fldln2
cmc
call
into
inc
cmp
sub
movl
sbb
fldt
inc
mov
ret
hlt
dec
add
push
mov
stc
nop
outsl
cmc
mov
into
ret
dec
jp
push
in
adc
shrl
rcl
jae
pop
repnz
and
xchg
push
aas
jg
xchg
insb
or
arpl
mov
stos
inc
les
enter
stc
nop
dec
cmp
pop
out
lods
mov
jne
decl
mov
cmp
fstpt
xchg
push
outsb
fcoml
cld
hlt
movsb
stc
imul
mov
nop
ja
fimuls
mov
addr16
jmp
adc
into
enter
and
dec
cmp
add
shrb
add
sahf
pop
movsb
sahf
iret
mov
jle
pop
fbld
mov
jg
xlat
mov
out
xchg
cmp
loope
mov
stos
or
mov
cmp
add
push
scas
loop
push
push
adc
test
shll
or
leave
sar
sbb
sub
push
pop
pop
add
xor
icebp
lds
push
pop
test
xchg
pop
js
xchg
shrb
shr
lock
out
dec
fcompl
add
mov
daa
adc
xchg
cmp
call
xor
lahf
sti
inc
stc
enter
call
pushf
ljmp
adc
cmp
jo,pt
insl
out
adc
popf
adc
scas
out
std
fsubs
sti
jns
dec
mov
pop
sbb
nop
mov
inc
or
lcall
xor
push
mov
push
and
inc
adc
cmpsb
sbb
inc
jle
std
lods
push
repz
dec
push
stos
and
lret
pushl
cmp
les
xchg
pop
mull
pusha
mov
push
add
movsl
xor
xor
enter
mov
pusha
aaa
add
fcmovb
sbb
adc
dec
jno
jne
out
mov
je
pop
adc
sub
cs
cs
aas
ret
inc
adc
xlat
pusha
jbe
repz
mov
adc
in
sub
and
sub
stos
jg
jno
sti
push
std
aad
pop
test
jo
cmp
xchg
sub
adc
ljmp
mov
pop
mov
out
out
cwtl
or
mov
imul
popf
mov
jge
adc
pop
or
jp
sahf
data16
ja
leave
mov
jmp
icebp
xchg
jg
mov
aas
movsb
push
dec
sbb
scas
and
loopne
gs
dec
loopne
repz
push
or
mov
frstor
push
ljmp
rcrl
dec
in
pop
aaa
into
dec
and
xchg
pop
lds
lcall
daa
pushf
xor
sub
ds
sub
std
xchg
divl
mov
mov
push
mov
inc
mov
push
call
cltd
pusha
testl
mov
fbstp
loopne
push
rcl
push
call
push
js
push
push
hlt
mov
sbb
rorl
jno
test
push
addr16
inc
fld
adc
mov
sbb
add
test
loopne
lret
sbb
in
xchg
push
outsb
mov
mov
rol
jns
sub
fadd
xchg
inc
call
sarb
es
pop
testb
daa
jp
cmp
cmp
int3
in
aas
cltd
imul
xchg
cmp
cld
pop
shll
imul
popa
fstps
sub
cmp
std
pop
loop
fs
add
cmp
aad
in
imul
outsb
fisubl
sbb
fs
rorl
into
lods
cmp
imul
push
lret
mov
push
int3
in
or
lcallw
int3
loope
lret
ret
cmp
ret
mov
int3
jl
mov
lcall
icebp
jne
iretw
pusha
call
into
sahf
mov
xchg
push
into
fs
or
js
lahf
or
fs
lret
imul
lahf
sub
gs
mov
mov
bound
mov
out
cwtl
ljmp
jno
adc
mov
mov
loop
jnp
mov
sub
in
cmp
mov
xlat
aam
in
jno
mov
bound
add
mov
shl
xor
and
and
mov
xchg
dec
adc
adc
arpl
jnp
ss
mov
and
mov
or
mov
xchg
sbb
dec
mov
shr
std
pusha
cmp
adc
pop
je
movsb
orl
dec
adc
sbb
jns
mov
mov
jl
arpl
fsts
sahf
pusha
push
cli
aad
enter
mov
xchg
xchg
cli
js
hlt
pop
stc
outsl
jge
jl
int3
xchg
imulb
cli
pusha
loope
cltd
out
cmp
adc
mov
std
bound
dec
adc
jl
cli
jmp
add
xchg
cmpsl
inc
jp
jbe
hlt
pop
fsubs
out
ja
into
nop
push
popa
dec
adc
xorb
pop
sbb
sbb
adc
lcall
push
dec
movaps
dec
adc
inc
sub
movsb
lcall
xor
xchg
stc
data16
sub
aaa
push
aad
inc
push
mov
stos
and
jbe
or
clc
outsl
inc
adc
inc
and
adc
mov
dec
cmpsb
xor
dec
movsb
push
xchg
fwait
popa
mov
mov
sbb
dec
mov
sub
inc
adc
leave
sbb
test
fisubs
xor
sarb
cmp
sub
xchg
pop
push
mov
mov
das
imul
mov
jge
mov
movsb
inc
adc
push
xor
add
inc
xor
xor
sub
jge
dec
mov
sbb
inc
push
sbb
jge
mov
mov
cltd
aam
push
mov
cmpsl
mov
mov
push
and
lcall
xchg
inc
mov
and
cmp
jmp
and
sahf
pop
mov
sbbl
xchg
inc
adc
cmpsb
push
jbe
fisttpl
scas
sub
cwtl
mov
or
mov
ja
scas
in
inc
adc
iret
repnz
dec
adc
daa
lret
sub
rcll
sub
xchg
je
aam
mov
mov
cmp
mov
adc
jp
mov
push
sti
repz
push
lds
lds
push
mov
push
js
mov
mov
jecxz
sarb
pushf
fistps
mov
and
sbb
add
pmaddwd
arpl
mov
mov
loopne
cmp
out
add
lea
xchg
sbb
clc
pop
mov
lods
xchg
cmp
cwtl
in
jae
in
jnp
inc
jle
or
jbe
xchg
pop
enter
lock
inc
inc
sarb
xchg
or
scas
sbb
xor
dec
das
mov
out
cmpsl
sub
sbb
mov
roll
add
xchg
xchg
cmp
and
aas
movsl
jns
cmpsl
sub
div
adc
pop
outsl
add
aam
mov
pop
movsb
sub
push
push
pusha
ljmp
test
sbb
rclb
lret
or
or
and
cwtl
push
push
popa
jmp
dec
mov
or
push
cs
adc
movsb
cs
call
xor
orb
orb
push
leave
xchg
mov
cmpsl
ficoml
imul
je
inc
mov
cli
gs
sub
pop
adc
adc
sbbl
or
mov
test
lock
or
push
gs
add
jno
xor
sub
sub
jbe
mov
and
out
add
jns
cld
lods
xor
cmp
push
xor
je
out
sahf
lea
sti
and
fcoms
push
jno
push
cli
movsb
push
add
mov
xchg
cmc
pop
pop
dec
lea
mov
sarb
aad
pusha
push
xor
shrb
sub
lea
aas
and
push
add
push
lods
xor
incl
mov
vcvtps2pd
mov
or
jnp
aam
insb
insl
lods
sub
jne
aam
int3
mov
out
dec
mov
xor
sub
jns
push
add
bound
int
cmp
cmpsb
push
icebp
pusha
fcompl
lcall
pop
je
in
test
std
sahf
and
mov
dec
xchg
push
fsts
cmpsb
push
std
pop
insl
xlat
dec
or
mov
aaa
mov
mov
aam
or
add
push
add
stc
imul
in
mulb
stc
stc
pop
mov
lock
and
mov
fidivl
mov
into
scas
enter
mov
mov
jge
mov
bound
sbb
xchg
dec
inc
setle
lret
mov
enter
sub
push
pop
subb
mov
test
push
mov
ret
popl
jb
shr
out
sbb
int3
pop
and
mov
mov
int
shlb
gs
jecxz
xlat
aas
lock
or
add
mov
rolb
lahf
fs
adcl
rolb
add
cmp
dec
pop
jmp
repnz
popa
repz
mov
dec
loope
push
add
xlat
xchg
inc
sub
xor
pop
cmp
jg
and
mov
imul
nop
jmp
xchg
inc
mov
jg
sub
popf
xor
add
stos
xor
addl
or
cmp
in
sbb
inc
cmc
push
into
jp
add
pop
insb
xchg
fimull
jle
push
arpl
shl
pop
ret
jecxz
sbb
aas
mov
or
mov
imul
pop
out
sbbl
dec
adc
out
jae
xchg
push
sti
mov
inc
or
jb
and
mov
mov
nop
push
xchg
xchg
mov
imul
fnstsw
hlt
push
add
in
pop
sti
mov
xchg
mov
xchg
out
dec
or
aad
jmp
repz
xchg
test
mov
ror
xchg
jo
sahf
clc
leave
ret
in
sub
daa
fidivrl
jle
push
into
cmp
stos
rclb
test
mov
call
mov
mov
fisttpl
sar
mov
mov
or
pop
push
cld
aas
jb
xlat
dec
xor
xchg
jl
sub
cs
mov
jo
pop
cmpsb
das
mov
mov
loope
xor
sub
pop
mov
adc
loopne
adc
jo
jnp
call
ret
lcall
adcb
in
pop
cmp
push
adc
lods
rolb
mov
shlb
icebp
bound
xor
lds
cmp
mov
test
xor
jno
pop
push
fldcw
lret
push
xlat
jns
lods
lds
jge
in
imul
js
test
addr16
mov
adc
loopne
jl
addr16
adc
pop
pop
inc
xchg
inc
faddl
inc
movd
outsb
jmp
dec
imul
jp
cmp
mov
cltd
jo
stc
mov
cmp
jecxz
cmpsb
xor
stos
sbbb
addps
inc
incb
xchg
pop
add
pushf
dec
or
mov
test
outsb
movsb
mov
jg
add
dec
cltd
negl
and
push
or
dec
ljmp
or
adc
adc
adc
inc
inc
push
insl
jg
movsl
js
adc
scas
add
jp
mov
fidivrl
out
aad
adc
xorb
test
insb
mov
aas
int3
xchg
les
notl
sub
cld
pop
in
pop
mov
test
imul
xchg
subb
test
pop
cmpsl
sub
clc
gs
imul
out
sti
repz
das
clc
and
stos
addl
mov
xor
lds
test
hlt
jmp
cmp
jl
arpl
imull
outsb
jle
mov
mov
inc
mov
scas
mov
sti
cltd
repz
bound
sarl
mov
loopne
xor
call
std
and
mov
xchg
shrl
cmp
xor
out
out
push
jo
int
or
insl
xchg
pusha
in
jno
mov
stos
test
aaa
das
pop
inc
adc
in
outsb
push
mov
lret
movsl
push
and
mov
mov
test
inc
roll
in
mov
lea
popf
ficoml
movb
in
pop
arpl
sub
inc
push
das
cmp
cwtl
push
cmp
dec
test
fwait
cwtl
adc
mov
mov
sti
pop
pushl
jecxz
push
add
dec
adc
lds
or
loopne
mov
jnp
js
xor
cmp
je
xchg
sub
mov
into
cmp
repz
inc
adc
push
mov
nop
in
or
sahf
and
mov
cmp
ret
fldl
movb
in
test
lods
xor
mov
mov
pop
sub
movsl
popa
sbb
xor
bound
rcrb
leave
mov
test
sub
test
mov
lahf
fnsave
movsb
pushf
lds
leave
add
out
sub
push
lret
cmp
test
xlat
outsb
popf
addr16
adc
into
ret
mov
inc
data16
xor
and
out
cld
xor
scas
dec
jg
test
jecxz
push
ds
nop
mov
jp
shll
leave
add
cwtl
xchg
and
xchg
ret
xor
cmpsl
lret
scas
rcrb
call
add
sub
mov
adc
lods
in
das
push
mov
insb
out
popf
iret
cmp
subb
xor
and
mov
push
mov
data16
lock
insl
mov
cmpsl
inc
push
inc
out
imul
gs
push
add
add
ret
fidivrl
arpl
add
fwait
cmp
loopne
fstps
or
xchg
push
inc
push
add
mov
jno
inc
dec
or
lea
mov
arpl
add
cmp
and
pop
inc
jne
mov
add
or
mov
lods
inc
or
test
lea
mov
add
shll
jns
pop
xchg
cmp
flds
and
aaa
mov
in
cld
data16
pop
mov
movsl
and
ret
fnstenv
insl
out
mov
sub
insb
sub
sub
outsl
out
stos
lods
mov
mov
insl
icebp
loopne
loopne
mov
mov
push
movsl
dec
add
jmp
mov
mov
mov
fiadds
sahf
pop
cli
in
pop
dec
pop
inc
icebp
cmp
bound
shl
jo
pop
jmp
cmp
jne
repnz
jecxz
push
out
std
mov
add
push
test
aas
movsb
sub
sbb
nop
mov
arpl
push
shr
decb
add
or
fisubl
or
mov
adc
pusha
shl
mov
dec
pop
cltd
data16
cmpsl
enter
call
push
lret
or
xor
adc
mov
inc
mov
imul
jge
repz
addl
inc
pushf
cmp
ror
mov
in
inc
int3
adc
call
stc
loop
inc
push
movsl
cmp
push
sti
xchg
subl
sbb
dec
ss
ret
push
icebp
push
push
jl
add
push
les
jns
pop
mov
xchg
inc
cmp
and
mov
outsb
pop
jbe
lcall
inc
adc
aaa
leave
mov
je
addr16
xor
das
dec
mov
call
mov
daa
mov
or
mov
push
nop
fldl
xor
orb
repz
jns
xor
mov
lods
cmc
data16
inc
sti
add
ret
or
lret
xchg
dec
imul
imul
sti
xchg
dec
adc
sbb
pop
das
fnstsw
pop
xchg
aam
cltd
cmp
aas
xchg
les
pop
xchg
cmp
shll
jl
jmp
movsb
sub
out
mov
mov
orl
cltd
inc
out
and
fwait
adc
xchg
shr
jne
sbb
dec
jne
dec
bound
cli
sub
fwait
leave
out
xor
push
aam
xor
mov
scas
lds
pop
insb
cmc
pop
rorb
ss
and
pop
jp
push
mov
dec
fwait
loopne
xor
jmp
sbb
mov
dec
sarb
xchg
fwait
inc
imull
mov
movsb
jecxz
inc
mov
into
xchg
or
orl
out
or
jae
fwait
sbb
pop
push
push
cltd
stos
xor
push
lahf
inc
lods
cld
cltd
inc
add
negl
mov
je
xchg
movsl
sub
cmp
mov
push
clc
frstor
mov
add
dec
adc
cld
imul
and
jnp
jg
mov
xchg
or
pop
mov
pop
repz
xchg
xchg
insl
test
jp
in
jae
imul
mov
stos
jle
data16
sbb
dec
pop
dec
imul
xchg
add
jle
insb
cmc
lock
adc
xorl
insl
cmc
lret
pop
pop
sbb
jecxz
or
xchg
icebp
sarb
ret
adc
repz
stos
inc
mov
xor
leave
sbb
dec
and
ss
push
inc
or
cmpsl
sub
jno
jbe
ds
sbb
adc
dec
jmp
xlat
push
gs
pop
mov
je,pn
and
cmp
pusha
dec
inc
push
movsl
add
xchg
fdivs
cli
pop
lds
call
push
pop
testl
pop
mov
mov
gs
fdivs
jp
scas
std
pop
pushf
add
xor
adc
and
push
lret
pop
push
nop
inc
cmp
sbb
and
data16
testl
fcmovnb
and
mov
fstpt
scas
fidivrl
pop
ds
popa
repz
ret
int
cli
add
bswap
cmpsb
pop
inc
adc
xchg
pop
data16
into
sti
xchg
add
push
mov
jns
iret
mov
xchg
jb,pt
nop
cmp
mov
pop
mov
fdivl
inc
or
mov
mov
and
push
mov
xor
cmpl
push
cmp
sahf
aaa
popf
and
ret
mov
outsl
stos
lock
mov
mov
adc
ja
jne
pop
add
data16
mov
lcall
cld
ret
mov
jbe
daa
pusha
pop
push
cld
jae
cmpsl
sub
popa
add
push
clc
iret
mov
inc
fwait
cmp
or
sub
daa
cld
pop
push
add
jecxz
jle
aas
pop
sti
dec
xchg
cld
pop
or
loop
dec
in
pop
push
sahf
jbe
and
inc
fidivs
xlat
jl
push
pop
ret
pop
pop
adc
add
and
aad
lret
xchg
mov
push
and
mov
xchg
mov
sbb
jns
daa
leave
mov
lock
cmp
sub
movsb
xor
cmp
xchg
add
push
add
int
movl
sbb
call
fstpt
sub
and
inc
fldl
rorl
jmp
mov
outsl
xor
int
loope
loopne
into
icebp
mov
and
mov
mov
stos
loope
call
std
iret
xchg
neg
ss
int3
jecxz
add
sbb
push
adc
negl
inc
loop
cmp
xchg
cmp
sub
lret
les
mov
sbb
xchg
cmp
jo
jne
mov
dec
inc
scas
popf
inc
jl
pop
cld
inc
gs
pop
cli
mov
sbb
mov
les
mov
lods
lahf
ss
stc
nop
push
adc
psrld
jns
jb,pn
dec
fucomip
jno
cltd
es
mov
push
stc
shlb
stc
fs
xchg
cmp
pop
out
jnp
inc
lea
lret
cwtl
jbe
fstpl
pop
decl
fnsave
fcmovnbe
or
mov
cmpsl
sub
loopne
xchg
mov
or
data16
daa
shll
orl
push
aad
lret
sub
jae
push
fwait
rcrl
adc
or
xchg
xchg
inc
pop
mov
out
stc
lods
lods
daa
data16
iret
cmp
adc
in
and
xor
xchg
inc
cmp
clc
pop
cli
and
jo
in
das
pop
shrl
add
inc
mov
js
cmp
dec
sbbb
mov
scas
js
movsb
jl
insl
mov
xchg
cmp
ss
stos
shll
cmp
out
insl
lods
xor
jp
test
fiadds
or
repz
subl
jns
lahf
inc
or
jo
pop
or
pushf
scas
lock
sbb
jae
leave
dec
pushf
inc
pop
pop
bswap
mov
mov
or
fxch
mov
dec
xor
push
push
push
add
fstl
sub
andl
adc
inc
adc
in
mov
mov
sarb
sbb
mov
mov
dec
cmpsl
xor
scas
jno
sub
adcb
mov
xchg
mov
push
or
push
jmp
pop
fsubrs
aad
mov
lods
ss
push
sar
pop
andb
xchg
push
pushl
enter
int3
ja
loope
out
sub
leave
pop
sub
dec
push
jecxz
mov
mov
jae
pop
cld
imull
fwait
jmp
ja
ffree
hlt
mov
mov
mov
adc
into
cmp
jle
in
shrl
cltd
rolb
inc
xlat
xchg
aaa
jnp
jle
insl
outsl
pop
mov
ficoml
cld
pusha
sub
das
mov
inc
sbb
test
mov
mov
stos
adc
bound
push
clc
jne
pop
lods
out
aas
lahf
mov
lret
mov
mov
cmc
bound
lods
hlt
jp
movsl
push
icebp
fidivrs
push
leave
mov
lds
pop
push
inc
push
push
inc
cld
pop
loop
push
out
jnp
sub
jg
dec
adc
xchg
cmp
imul
leave
mov
lods
xor
ret
xchg
push
stc
loop
pop
mov
mov
pop
push
or
jbe
pop
push
xor
xchg
cmp
and
mov
iret
jne
aas
fcomps
adc
jbe
xor
bound
add
pop
jg
dec
popf
cmp
mov
icebp
loop
fidivs
add
fs
jo
gs
xchg
movsb
sub
cmp
mov
out
andl
lret
dec
insb
imulb
push
mov
mov
xor
mov
pop
sub
jnp
nop
inc
es
lret
jno
orl
add
add
inc
adc
xor
xchg
push
in
xchg
mov
repnz
or
mov
sbb
inc
mov
rcrb
mov
xchg
faddl
fisttpl
test
or
arpl
psrld
les
adc
jbe
nop
ficoml
cmp
xchg
mov
mov
les
out
mov
push
daa
push
pusha
bnd
fnstsw
fs
push
jmp
jo
mov
jg
ret
test
cld
jae
imul
inc
xor
inc
cwtl
lahf
inc
sbb
out
pop
out
loope
pop
out
fiadds
push
xor
xchg
jno
test
rolb
rcr
test
iret
xchg
push
insl
movb
jo
dec
out
jmp
xchg
inc
dec
or
lods
call
adcl
pop
mov
cwtl
inc
push
mov
rolb
into
xchg
push
or
loop
out
dec
ja
add
sub
in
xlat
aaa
icebp
popw
or
nop
cs
adc
bound
pop
cld
pop
lahf
int3
mov
inc
inc
andps
hlt
pusha
mov
data16
jge
mov
call
fs
test
mov
aaa
lahf
push
into
gs
ja
xchg
enter
cld
or
fwait
push
mov
sub
cli
popa
dec
cmp
mov
lcall
mov
sub
mov
xor
pop
in
add
ret
lds
xlat
jp
and
mov
pop
ljmpw
push
push
sub
ret
movsb
ss
out
rolb
cmp
mov
sub
xor
aas
jno
inc
adc
repnz
movsl
fwait
ret
jmp
cmc
mov
push
sub
inc
pop
add
mov
jae
imul
push
ficompl
or
mov
ret
xchg
mov
and
add
mov
iret
xchg
adc
fldl
xor
mov
sub
fildl
mov
ja
sub
mov
xor
sbb
into
fnstcw
sbb
pop
loope
sbb
mov
mov
fadds
jnp
ds
cltd
pop
cwtl
aas
decl
fiaddl
xchg
js
xchg
ffreep
pop
into
push
adc
jle
xorb
adc
dec
or
dec
add
push
sub
js
nop
cmpsb
das
adc
or
mov
sahf
sarl
sbb
or
dec
jg
fisttpll
ss
dec
adc
es
testl
push
mov
inc
repnz
lret
xchg
sub
jns
imul
dec
fistpl
out
jno
or
jns
sarl
outsl
es
imul
cmp
sbb
xchg
cmp
out
jb
lret
xchg
cmp
jle
test
mov
aaa
lcall
mov
stos
lock
scas
pop
in
pop
data16
jne
dec
xor
push
jo
mov
lcall
push
xor
aas
inc
mov
and
fdivrs
cmp
stos
scas
sub
outsl
into
mov
pop
jecxz
xchg
inc
inc
adc
int3
stos
sub
les
mov
mov
xchg
cmp
push
test
mov
pop
repz
mov
dec
pop
data16
nop
popf
push
mov
push
mov
scas
mov
arpl
test
push
idivb
xor
addr16
int
cmpsb
ja
and
mov
mov
fildll
xchg
cmp
lods
inc
or
inc
or
sub
mov
mov
sarb
mov
mov
xchg
loope
pop
push
repz
and
or
fstpt
movsl
pop
clc
js
mov
xchg
dec
xchg
inc
mov
movsb
das
cmpsl
xor
xchg
sub
push
popf
test
mov
negb
xchg
into
xchg
daa
dec
cmp
sub
stos
fadds
xchg
out
jno
cli
or
int3
xchg
pusha
cli
gs
adc
fistpll
lods
jl
mov
mov
sub
mov
inc
or
mov
sbb
mov
mov
cld
pop
adc
test
push
xchg
inc
fdivl
movsl
xchg
or
popf
fnstsw
pusha
jmp
sbb
add
dec
pop
cld
push
stc
pop
test
mov
mov
cmpsb
call
icebp
pop
xchg
xsavec
sub
jbe
fbstp
cmpsl
xor
fcoms
popa
out
in
dec
adc
std
popw
sub
orl
das
mov
dec
orps
xchg
cmp
scas
hlt
pop
hlt
pop
int
loopne
inc
or
cmc
sbb
jecxz
inc
jnp
int
xlat
js
sbb
iret
movsb
push
pop
add
mov
int
push
add
push
loop
leave
and
jle
lcall
sub
js
repz
adc
push
or
mov
dec
test
dec
ja
jge
ljmp
adc
sub
je
push
and
cltd
dec
loope
jae
cwtl
rcll
sbb
insb
add
mov
or
mov
outsb
add
mov
push
sbb
xor
sub
mov
icebp
in
jbe
add
inc
or
in
stc
dec
and
jmp
and
jo
lods
xor
xor
arpl
push
ret
mov
test
mov
dec
jb
pop
push
jl
ja
imul
sub
fwait
inc
mov
scas
stos
xor
add
scas
add
mov
push
jns
mov
movsl
popa
lock
stc
into
lea
aad
aas
xchg
inc
push
cmc
daa
push
add
in
jnp
cld
add
or
cmp
and
arpl
xor
fs
mov
xchg
gs
xor
faddl
roll
mov
in
adc
into
xchg
fidivl
fwait
or
mov
hlt
add
lahf
ds
mov
or
js
call
nop
outsl
das
lods
imul
ja
xor
in
outsb
mov
and
in
stos
outsl
jmp
clc
movsb
ss
bndldx
sbb
adc
je
push
addr16
jbe
mov
sarl
xchg
and
cmp
adc
dec
mov
sbbl
pop
sub
pusha
out
cmp
loop
sub
push
gs
rorb
inc
out
je
mov
mov
push
mov
mov
rcll
mov
mov
cmpsb
lods
inc
xlat
cmc
out
xchg
stc
dec
push
in
sbb
insb
test
enter
dec
les
inc
push
inc
fs
xchg
mov
ss
push
mov
xor
stos
icebp
stos
ss
mov
jne
clc
sub
jo
dec
adc
jl
sarl
insb
insb
repnz
pop
lret
xchg
mov
movsl
inc
mov
pop
sub
mov
cli
xor
add
fcomi
inc
adc
cmpsl
or
mov
ret
scas
or
ja
add
mov
orl
mov
inc
xchg
pushf
cltd
inc
aam
xor
int
orb
or
ja
repz
or
xchg
push
dec
or
loope
pop
jp
xlat
sbbl
pop
cli
pop
inc
xor
mov
mov
push
out
shld
movsb
orl
stos
das
repnz
nop
ficoms
mov
rcl
push
js
out
push
outsb
orb
sub
cmp
jecxz
cmp
faddl
mov
mov
adcl
xor
mov
out
jp
mov
scas
imul
dec
xchg
mov
sti
cli
xor
sbb
test
scas
sub
cmpsb
or
adc
lock
dec
or
pop
or
mov
jo
stos
cs
insl
bswap
stc
repz
lea
es
shrb
and
pop
std
cmpb
int3
fidivrs
roll
or
das
out
mov
sbb
orl
jmp
adc
sahf
aaa
out
dec
rclb
mov
xor
sub
imul
pop
in
imul
xchg
lock
popa
fidivrl
in
push
lret
clc
pop
push
pop
negl
pop
rcll
test
xor
sub
gs
or
shl
fiadds
add
popf
testl
out
sub
movsl
sub
mov
lods
xor
pushf
gs
hlt
loope
and
cmp
push
aad
sbb
iret
add
arpl
cld
arpl
jne
aas
mov
mov
sbb
aam
icebp
xor
data16
and
inc
fidivrl
push
cli
add
pop
out
idivl
xchg
adc
pop
rcr
jge
mov
jl
aam
xlat
in
cmpsb
cmp
stos
inc
test
mov
stos
mov
loop
xchg
push
add
xor
cmpsl
ds
fsubr
jb
call
cmp
rcll
xchg
push
sarl
or
dec
addr16
gs
lret
xchg
adc
inc
test
bound
es
sbb
pushf
mov
test
inc
adc
mov
dec
loop
cmp
imul
push
pop
loope
push
nop
mov
ja
dec
or
imul
push
dec
xchg
sub
dec
push
inc
outsl
lahf
inc
ficoml
pop
jne
sti
push
negb
jmp
and
fwait
lret
nop
loope
nop
cmp
hlt
xor
ss
out
jb
xor
dec
xchg
movsl
sub
lcall
and
xor
mov
jmp
jo
pop
xor
insl
pop
adcb
xor
pop
nop
inc
out
jns
es
xor
lret
inc
adc
dec
adc
xor
scas
and
and
push
iret
lods
inc
add
mov
push
aam
popf
ret
call
stc
scas
xor
addr16
and
or
xor
jo
fidivrl
imul
xchg
mov
fisubrs
scas
ret
out
push
add
sbb
mov
xorb
xor
add
push
es
ljmp
push
clc
out
jns
call
mov
mov
rcll
enter
jnp
lcall
xlat
xchg
lock
addr16
fistpll
xchg
mov
rcr
jp
std
cmp
cmp
sbb
jne
xchg
outsl
xchg
call
mul
je
dec
roll
jo
sbb
andl
pop
fists
shll
lods
or
stc
push
mov
cld
in
es
or
addr16
dec
inc
add
imul
and
add
test
mov
shll
repnz
jcxz
push
sub
rorl
lds
dec
int3
xchg
arpl
xor
sub
faddl
pop
or
sahf
outsl
add
jmp
mov
out
stc
icebp
pop
arpl
fs
pop
jno
fimull
mov
pop
ja
dec
loop
gs
xchg
lcall
call
or
cmp
movsl
cmp
pop
mov
xchg
ret
pop
lds
loope
sbb
pusha
ss
xchg
imul
mov
pushf
fcmovnu
cmp
paddw
mov
bound
fadds
mov
xchg
sub
hlt
jge
sub
xor
shrl
lcall
add
xlat
outsb
and
mov
sub
cmpsl
xchg
adc
stc
out
enter
decl
out
insl
xchg
mov
fisttpll
pop
inc
xor
js
add
mov
call
or
push
mov
sub
lcall
and
jecxz
aas
incb
adc
pop
pop
cmc
push
push
xchg
mov
adc
les
push
sbb
mov
mov
cmc
mov
cmc
sub
stos
inc
inc
dec
loop
fs
xchg
cltd
imul
out
xchg
push
or
cmp
movsl
cmp
pop
lea
xchg
ret
pop
les
loope
pop
add
popa
xor
push
call
mov
test
cmp
push
cld
and
sub
dec
inc
fnstcw
ja
mov
pusha
not
aad
sub
repz
and
inc
pushf
xor
shrl
cltd
mov
xchg
in
fsubrs
and
lea
sub
cmpsb
xchg
adc
dec
loopne
in
leave
push
sbb
dec
aaa
push
out
insb
xchg
mov
fmull
inc
das
stos
inc
popa
data16
cwtl
or
mov
call
pop
or
add
pop
pop
cmp
nop
jp
mov
loop
inc
xlat
std
add
xor
push
xchg
mov
adc
test
fwait
xor
cld
shrl
pop
mov
mov
mov
testb
adc
loop
arpl
lret
imul
out
xchg
sbb
movsl
cmp
pop
mov
ret
scas
lods
inc
loopne
loope
push
add
bound
call
xchg
pop
sahf
cmp
or
das
pop
lock
dec
inc
fidivrl
ja
mov
popa
clc
rcl
xchg
sub
bnd
and
mov
pop
inc
popf
xor
jnp
push
lret
xchg
in
fnstenv
and
mov
sub
movsl
xchg
adc
loopne
in
lret
push
call
popf
mov
mov
fisttpl
pop
inc
cs
inc
pusha
gs
xchg
or
xchg
ljmp
mov
daa
add
rorl
mov
icebp
loope
inc
fdivr
add
xor
pusha
testl
jle
mov
ret
hlt
sti
shrl
push
mov
mov
mov
testl
inc
inc
dec
loop
bound
xchg
xchg
imul
in
xchg
sbb
jno
cmp
mov
lods
inc
loope
adc
call
xchg
or
or
es
pop
dec
inc
fstpt
ja
mov
stc
iret
rcll
pop
and
mov
pop
inc
sahf
xor
lods
xchg
mov
xchg
ljmp
push
cmp
sub
movsb
nop
push
lods
rol
loope
loop
lret
adc
imul
imul
mov
pop
inc
sub
inc
pop
gs
xchg
jg
popa
mov
add
add
pop
mov
and
cmp
mov
loopne
inc
fsqrt
add
xor
popa
clc
dec
push
cwtl
das
xchg
push
lahf
cmpsl
mov
fld
popf
xor
cli
aam
sub
mov
mov
fidivl
mov
clc
in
repnz
push
pop
scas
aas
inc
dec
jecxz
pusha
xor
add
mov
ljmp
jb
aaa
cmp
cmp
mov
scas
inc
fucom
loop
adc
int3
arpl
add
test
or
or
es
pop
dec
inc
fstpt
js
mov
stc
int
xchg
sub
and
mov
pop
inc
sahf
xor
stos
xchg
mov
xchg
call
xsha256
cmpsb
push
cmp
insl
jb
les
les
cmc
loopne
lret
adc
push
dec
xor
arpl
pop
pushf
test
mov
cmpsb
cmp
or
lds
lods
inc
pop
fs
xchg
jge
popa
scas
mov
cwtl
call
or
mov
and
popf
push
pop
ds
jne
mov
ffreep
inc
fprem
add
xor
popa
clc
dec
push
cltd
xor
cmpsb
mov
fdivrs
aad
sub
mov
mov
fidivl
lahf
adc
ljmp
scas
cmp
pop
xor
add
mov
ljmp
jb
xor
push
nop
daa
mov
scas
inc
fndisi(8087
jecxz
adc
int3
arpl
xor
ljmp
mov
cmp
mov
pop
dec
inc
fstpt
jns
mov
stc
lret
rcll
pop
pop
and
sahf
xor
stos
xchg
mov
mov
out
jno
pop
adc
imul
mov
ret
dec
jecxz
fidivs
movhps
dec
xor
popa
imul
ds
aad
and
inc
sub
xchg
jnp
popa
lods
mov
cltd
out
call
mov
push
pop
aas
mov
mov
faddp
inc
fdecstp
jnp
xor
popa
clc
dec
push
cltd
xor
mov
xlat
mov
aad
sub
mov
mov
fidivl
sahf
adc
jmp
or
scas
cmp
dec
in
pop
xor
add
scas
push
ljmp
jb
xor
cmpsl
ds
push
nop
daa
xchg
scas
inc
jecxz
adc
int3
arpl
xor
cwtl
gs
ljmp
mov
cmp
mov
pop
inc
inc
fstpt
jns
scas
cltd
stc
lret
cs
adcb
and
dec
push
aas
sahf
xor
test
lret
cld
in
jno
push
adc
push
lds
ret
repz
push
adc
push
jmp
lcall
ds
aam
and
inc
daa
lods
inc
pop
in
xchg
jp
popa
lods
mov
cltd
out
call
mov
push
pop
aas
mov
mov
fadd
inc
std
jnp
das
pop
stc
dec
push
cltd
xor
mov
sahf
xor
sub
mov
mov
pushf
adc
call
or
scas
cmp
in
pop
ss
xchg
imul
scas
push
jmp
in
and
add
xor
cmpsl
ds
xchg
sub
cmpsl
scas
inc
jecxz
adc
int
sub
dec
jmp
addb
rcl
cmp
mov
pop
inc
inc
fdivl
jns
lods
cwtl
arpl
leave
into
xchg
cs
sbbl
push
ds
ss
shrl
xchg
mov
mov
in
jb
sbb
cmpsl
dec
aaa
stc
nop
imul
scas
mov
fdivl
add
push
ljmp
jno
mov
cmpsl
ds
es
lods
inc
pop
pusha
in
xchg
jns
bound
int3
jmp
mov
push
push
aas
mov
mov
fcmovb
inc
fcomi
sti
jnp
sub
dec
cltd
xor
mov
lahf
ss
hlt
aad
movsbl
inc
repz
fdivl
lcall
out
das
sbb
ds
in
pop
aaa
into
mov
push
in
fsubp
mov
adc
cmpsl
ds
mov
pop
mov
fsub
jp
cli
into
gs
add
jg
pop
mov
mov
cmp
mov
pop
inc
inc
fnsave
jns
stos
xchg
fs
enter
jmp
mov
push
cmp
aaa
outsb
jae
imul
repnz
loop
jae
sbb
test
xor
das
popf
mov
scas
mov
fidivl
int
adc
sub
jmp
mov
xchg
jle
or
rcll
pop
cmp
pop
in
nop
ja
arpl
lret
cld
add
mov
dec
push
inc
xlat
xchg
mov
fadd
inc
fdiv
stc
jl
sub
sti
inc
dec
lcall
lahf
mov
aaa
jmp
insl
and
mov
mov
fnsave
adc
in
xor
sbb
sbb
insl
pop
cmp
mov
push
in
fsub
mov
adc
je
xor
xchg
sub
movsb
mov
fnsetpm(287
jnp
clc
into
sub
add
jge
and
iret
sarl
aad
icebp
sub
push
inc
inc
fnsave
adc
lret
cwtl
das
std
out
sbb
pop
mov
push
cmp
insb
movsb
lea
mov
loopne
jae
sbb
test
imul
pushf
xchg
scas
mov
dec
in
fdivs
int
adc
inc
sub
arpl
or
iret
nop
daa
add
enter
scas
inc
push
pop
out
jne
arpl
enter
add
mov
dec
push
inc
fadds
cmpsb
pop
not
mov
jge
sub
fs
inc
dec
fwait
xor
sbbb
sahf
mov
aaa
jmp
or
mov
fnsave
adc
jecxz
xor
sbb
dec
out
push
cmp
mov
push
in
mov
adc
je
cs
inc
dec
xchg
sub
mov
in
or
into
sub
add
jnp
and
int
aas
add
sub
push
inc
inc
fnsave
jnp
test
lret
cld
in
sbb
push
mov
aaa
push
insl
mov
hlt
mov
jae
sbb
stos
dec
xor
xchg
arpl
enter
scas
mov
dec
out
ss
movd
pop
bound
lods
mov
inc
out
nop
daa
decl
leave
pusha
cmp
scas
inc
push
pop
out
lea
movsl
scas
add
cmp
and
xor
or
subl
pushf
movsb
pusha
not
mov
jle
sub
gs
inc
dec
pushf
xor
sbbl
pushf
mov
cmp
out
fsubrs
or
push
cmp
lea
jne
xchg
adc
scas
cld
xchg
loope
xor
sbb
sbb
push
cmp
xchg
push
out
fcomp
mov
adc
jne
sub
stos
inc
fs
xchg
sub
enter
mov
rcr
out
or
iret
data16
fwait
pop
inc
in
test
and
lret
rolb
add
sub
push
and
push
aas
inc
fidivs
jl
cmpsl
xchg
gs
ret
xor
jecxz
sbb
mov
outsb
mov
ret
hlt
je
push
adc
inc
das
sti
xchg
popa
push
sbb
jmp
aaa
into
add
es
in
push
pusha
lea
js
or
lret
xchg
sub
push
lret
push
mov
push
pop
call
mov
in
xor
and
das
sbb
mov
subl
not
mov
jle
es
inc
inc
pushf
xor
test
xchg
lcall
out
fsubrs
or
pop
cmp
lea
fbstp
xchg
adc
les
xor
push
add
xor
push
out
push
cmp
test
pop
out
xlat
fmull
sub
stos
inc
bound
jle
enter
mov
rcl
out
or
shlb
sub
pop
inc
out
test
and
lret
xlat
jmp
rcrl
notb
dec
fildll
jge
movsl
data16
rol
xor
loope
sbb
sbb
cmp
fsubrs
xchg
push
mov
fcmovu
jne
adc
lods
inc
sub
xor
xchg
sbbb
mov
push
call
add
jo
cmp
pop
mov
test
lods
inc
jecxz
xchg
sub
add
bound
sbb
dec
dec
push
jmp
mov
ret
hlt
cld
and
mov
jg
sub
cltd
mov
dec
fucomip
bnd
and
addr16
ds
popf
xor
pop
test
cwtl
mov
cmp
jmp
jo
push
ret
testl
ret
xchg
fsubp
xor
adc
sbb
call
addl
lock
lea
divl
sub
stos
inc
pusha
dec
xchg
sub
or
dec
iret
aam
jle
icebp
shrl
sub
xchg
and
enter
std
jmp
pusha
notl
dec
loopne
jno
adc
mov
filds
push
dec
xor
jo
test
pop
mov
testl
inc
sub
xchg
pop
fs
xchg
jle
mov
mov
jmp
add
jno
cmp
push
out
push
pop
mov
cmpsb
scas
lods
inc
loope
xchg
sub
add
arpl
mov
dec
push
ljmp
test
lahf
fld
out
test
cli
es
inc
dec
inc
fstpt
sub
xchg
sahf
stc
iret
mov
adcb
or
cmp
sahf
xor
xchg
mov
cmp
jmp
ret
pop
ss
outsb
push
loope
mov
call
adc
sbb
jmp
addl
mov
daa
sub
xchg
sub
or
mov
mov
int
call
push
pop
inc
out
xchg
mov
lret
inc
frndint
out
ret
popa
clc
dec
cmp
push
jg
mov
ret
popf
xor
fldl
push
dec
xor
jno
add
mov
clc
out
fbstp
adc
scas
inc
sub
xchg
pop
arpl
mov
mov
ljmp
jb
cmp
pop
out
push
pop
nop
daa
mov
or
ffreep
xchg
sub
add
xor
mov
dec
push
jmp
test
push
xlat
mov
daa
mov
inc
dec
inc
fdivrl
sub
xchg
pushf
arpl
int
dec
loope
out
sbbl
cmp
ss
xchg
mov
cmp
out
jb
add
pop
xor
push
loop
mov
add
adc
push
mov
xor
arpl
sarl
jno
mov
pop
icebp
rcl
es
js
and
inc
xchg
sub
mov
mov
lret
shr
addb
shrb
and
lock
and
movsl
leave
inc
in
ret
push
sbb
stc
dec
aaa
dec
loope
outsb
adcb
mov
mov
fildl
push
inc
movsb
cmp
add
nop
in
aam
ja
nop/reserved
pop
popa
ss
jp
mov
mov
jmp
int3
cmp
std
add
pop
lock
pop
xchg
sub
stos
scas
inc
ffree
xchg
sub
dec
xor
mov
dec
push
jmp
subl
pushf
movsb
or
out
mulb
mov
inc
dec
inc
fdivrl
sub
cli
lret
mov
loop
in
sbbl
cmp
lahf
ss
mov
lea
cmpsb
cmp
pop
add
pop
xor
stc
nop
push
jecxz
xchg
add
push
sti
pop
mov
xor
popa
dec
cmp
or
es
bnd
and
lods
inc
pop
inc
xchg
ja,pn
lret
bound
iret
jmp
push
and
sahf
push
aas
icebp
mov
and
cmpsb
ret
movl
adc
ss
loop
insb
adcb
mov
mov
fildl
push
inc
movsl
cmp
data16
add
nop
jmp
loope
push
or
call
nop
jp
mov
mov
jmp
int3
cmp
std
add
xor
push
xchg
sub
test
xchg
sub
cs
mov
dec
dec
jmp
subl
mov
out
hlt
daa
mov
inc
inc
inc
fdivl
lds
dec
jecxz
ljmp
cmp
mov
lea
cmpsl
loopne,pt
add
pop
xor
stc
nop
push
mov
scas
mov
mov
cs
ljmp
jno
mov
pop
repz
es
daa
lods
inc
pop
inc
cwtl
das
ja
lret
bound
jmp
imul
repnz
es
ret
fcomi
jecxz
lds
arpl
dec
xor
sbbl
mov
fimull
push
inc
sub
fdivl
add
mov
cli
xchg
jmp
or
mov
add
mov
mov
scas
push
in
loopne
cmp
sti
add
sbb
repnz
push
xchg
sub
cmpsl
mov
fld
xchg
cs
into
gs
mov
inc
dec
in
cmpl
imul
repnz
repnz
inc
inc
inc
fnsave
das
xchg
xchg
fs
mov
in
call
insb
add
cmp
and
lods
test
fsubp
fdivl
add
pop
xor
xchg
push
in
test
add
or
and
pop
dec
aas
jl
jb
mov
pop
hlt
into
rcll
adc
and
cltd
xor
int3
arpl
lret
ljmp
pop
or
outsb
jno
mov
rol
fdiv
loope
adc
fs
inc
xor
fs
imul
mov
mov
or
mov
ds
fnsave
lds
sti
xchg
out
jecxz
add
sbb
push
pop
cmp
mov
mov
lods
push
in
fmulp
cmp
or
sbb
push
xchg
sub
mov
xlat
rcrb
sub
dec
inc
dec
in
cmpl
insb
cltd
sahf
or
in
lock
aas
inc
inc
fnsave
xor
xchg
xchg
fs
lds
sbbb
add
mov
and
stos
test
jae
inc
pop
xor
cli
xchg
gs
in
test
add
or
and
pop
dec
aas
jnp
jb
scas
pushf
pop
hlt
int
nop
daa
add
jnp
and
inc
push
inc
cltd
xor
arpl
lret
cld
call
or
insl
jo
lcall
repnz
jp
cmp
dec
aaa
cli
fisubrl
cmpsw
mov
rorl
mov
xchg
scas
addr16
and
mov
xor
mov
inc
sub
cmpsl
jb
test
mov
test
mov
xchg
int
popf
mov
es
jmp
movsb
mov
rcrb
mov
in
or
inc
dec
mov
mov
dec
cmp
seto
and
cmp
mov
xchg
pop
ret
shl
out
xchg
test
xor
push
or
pop
outsl
and
adc
sbb
rorl
out
sub
dec
adc
pop
mov
mov
jp
sub
adc
xchg
fcompl
mov
dec
mov
inc
mov
inc
fwait
int
adc
enter
xor
cwtl
inc
fildl
mov
mov
mov
fcomip
xchg
inc
jmp
mov
mov
lock
mov
cmp
mov
fistpl
mov
sbb
xor
loop
sbbb
arpl
jecxz
mov
dec
adc
sbb
pavgb
scas
mov
es
imul
orb
call
rcl
or
dec
fidivs
jp
clc
mov
lahf
call
jno
push
mov
mov
push
mov
mov
pop
call
ljmp
je
inc
push
sahf
xlat
cmpl
jmp
xorl
lret
shl
test
jo
or
add
mov
cmpsb
out
test
cs
outsb
pop
jmp
ffree
popf
fwait
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
inc
push
std
sahf
insl
rcrl
test
sub
ret
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
jo
movsl
push
cld
cs
mov
scas
insb
or
es
out
pop
mov
add
popa
add
adcb
pop
mov
icebp
mov
loop
and
mov
jmp
jb
or
in
adc
into
xor
sbb
mov
mov
addl
add
stos
sub
pop
ja
xor
ret
push
sbb
hlt
jbe
scas
mov
or
xchg
frstor
xor
cmpl
mov
or
jge
and
jae
mov
xchg
das
out
hlt
outsb
mov
and
ficoml
scas
mov
and
fimuls
mov
jo
dec
mov
popa
jmp
sub
insb
cmp
dec
scas
mov
out
test
