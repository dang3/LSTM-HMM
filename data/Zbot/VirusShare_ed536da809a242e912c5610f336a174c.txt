push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
shr
cmp
jae
movl
movl
mov
push
mov
push
call
add
sar
cmp
jne
movl
movl
mov
mov
add
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
push
call
add
movzwl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
je
mov
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
push
mov
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
cmpl
jne
movl
movl
movl
movl
cmpl
jne
movl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
cmpl
jne
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
movb
mov
movb
mov
push
lea
push
call
push
mov
push
mov
push
push
mov
push
mov
push
lea
push
call
mov
cmpl
je
cmpl
jne
xor
jmp
movl
mov
add
mov
add
mov
add
mov
movl
mov
add
mov
mov
add
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
mov
mov
movl
mov
cmp
jae
movl
mov
push
mov
push
call
add
mov
movl
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
movl
mov
add
mov
mov
sub
mov
jmp
mov
pop
ret
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
push
ret
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
pusha
movl
mov
mov
push
push
call
push
call
mov
lea
push
mov
push
push
call
test
je
xor
jmp
lea
push
push
push
call
test
jne
call
push
call
add
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
mov
push
call
add
mov
push
mov
push
call
add
push
call
add
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
mov
push
call
add
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
add
mov
pushl
mov
xor
mov
xor
jmp
mov
mov
mov
mov
mov
mov
mov
ret
jmp
mov
pop
ret
int3
push
mov
mov
call
pop
ret
push
mov
sub
mov
mov
mov
mov
movl
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
mov
xchg
test
cs
xorb
pop
adc
icebp
mov
pop
btc
ficoml
pop
or
dec
jge
inc
xor
in
std
jae
dec
inc
shr
enter
jno
inc
mov
shll
clc
mov
lret
or
jle
pop
dec
xchg
mov
shl
inc
and
add
loope
ja
push
out
mov
loopne
int
jmp
mov
cmc
inc
mov
mov
push
push
mov
xchg
cli
push
insl
shlb
pop
jnp
icebp
xlat
push
loopne
cmp
shr
jo
or
aad
or
xchg
lods
jmp
aad
or
xchg
test
mov
clc
push
cs
std
in
lods
dec
lcall
popa
cmp
pusha
sti
addr16
je
shl
movsl
jmp
cmp
xlat
dec
and
js
fidivl
fwait
inc
push
xor
idivb
nop
lret
in
cmp
or
imul
push
lea
rorb
dec
fmuls
mov
push
out
test
pop
dec
xchg
mov
out
add
fwait
test
stc
in
es
cmp
shl
or
fsub
ss
mov
mov
sbb
aaa
lahf
sub
lahf
push
pop
iret
movsl
rcll
inc
sbbl
mov
adc
fucomp
and
jmp
cli
aas
mov
repz
fstpt
rorb
jmp
mov
or
adc
into
scas
push
cmp
stos
in
ja,pn
daa
imul
dec
push
sti
std
repz
daa
shrb
xlat
push
int
jo
xor
cmp
cmpsb
imul
pop
addl
push
sub
push
scas
inc
ret
cmp
and
scas
icebp
xchg
mov
testb
jbe
or
mov
out
loop
add
inc
xor
mov
push
xchg
int
andl
adc
pop
mov
push
inc
xchg
xchg
cmpl
fdivp
cmp
stos
fwait
int
mov
xchg
pop
sbb
jae
std
cmpsb
jecxz
pop
ss
test
jno
jg
sbb
xchg
popa
dec
dec
sub
push
je
fcompl
aad
inc
xchg
or
add
add
loope
inc
es
add
lods
movsl
sti
aaa
inc
adc
aam
dec
xchg
rclb
inc
jo
xchg
std
lcall
xchg
pop
mulb
shll
jecxz
jno
pop
adc
dec
aam
negl
sub
or
or
lock
pushf
mov
mov
into
popl
pusha
mov
mov
pushf
imul
incl
push
imul
imul
mov
push
and
push
cmpsb
stc
mov
pop
outsb
cwtl
inc
add
mov
pop
stc
rolb
les
cmc
xchg
cmpsb
ds
cmp
sbb
xlat
fwait
inc
ret
test
push
mov
rcrl
xchg
out
xchg
mov
call
aad
pop
loop
sub
out
cmp
dec
pusha
insl
mov
mov
mull
and
xorb
dec
scas
movb
lcall
fwait
movsl
mov
loope
xchg
in
seta
movl
out
mov
pop
mov
rcl
dec
enter
sub
and
inc
add
sahf
xor
adc
push
and
test
mov
into
orl
sahf
pop
loop
mov
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
xor
pushf
xor
xchg
xor
mov
xor
test
inc
add
xor
or
inc
add
inc
add
xor
sbb
inc
add
inc
add
inc
add
inc
add
xor
les
inc
add
xor
aam
inc
add
xor
enter
int3
xor
loopne
inc
add
xor
shlb
inc
add
add
add
add
inc
add
inc
add
add
xor
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
xor
lock
in
xor
push
xor
add
xor
add
add
add
add
cmp
add
add
add
add
sbb
add
add
add
add
cmp
add
inc
xor
add
add
add
jp
add
mov
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
movsb
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
add
add
add
dec
xor
add
xor
add
xorb
add
add
mov
xor
add
ljmp
add
add
sbb
add
sub
add
xor
add
cmp
add
add
add
mov
add
divb
add
sub
add
test
add
sub
add
and
add
mov
add
stos
xor
add
xor
add
add
and
add
xchg
xor
add
xor
add
add
mov
add
dec
xor
add
add
xor
add
add
lcall
add
add
add
add
cmp
add
add
add
add
sbb
add
add
add
add
cmp
add
inc
xor
add
add
add
jp
add
mov
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
mov
add
movsb
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
add
add
add
dec
xor
add
xor
add
xorb
add
add
mov
xor
add
ljmp
add
add
sbb
add
sub
add
xor
add
cmp
add
add
add
push
add
imul
insb
insb
outsl
arpl
add
js
inc
jb
popa
je
inc
imul
jae
jb
popa
je
add
inc
add
je
jns
je
insl
inc
imul
jns
add
add
je
jb
arpl
fs
jae
add
icebp
add
fs
imul
add
push
fs
imul
fs
je
insl
inc
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
push
push
add
mov
gs
inc
je
insl
add
rolb
gs
gs
inc
imul
gs
inc
push
add
push
add
je
je
insl
dec
popa
insl
gs
add
leave
add
je
imul
bound
gs
add
out
inc
gs
popa
jae
inc
jb
outsl
jb
add
bound
inc
insb
insb
outsl
arpl
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
xlat
add
je
imul
bound
gs
add
and
insb
gs
fs
popa
imul
insb
gs
bound
arpl
add
insb
outsl
jo
outsb
add
mov
gs
add
movsb
add
insb
ja
imul
je
arpl
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
or
inc
gs
jo
outsb
inc
imul
add
or
push
popa
jbe
inc
imul
add
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
sub
push
gs
insb
outsl
jae
dec
gs
inc
add
addr16
outsb
jne
dec
gs
add
push
gs
jo
outsb
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
jbe
push
gs
gs
popa
insb
jne
inc
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
push
add
gs
insb
inc
js
arpl
gs
js
add
add
gs
insb
inc
bound
je
add
inc
js
jb
arpl
jae
arpl
je
fs
arpl
inc
add
push
add
addr16
jne
jb
inc
imul
inc
jb
addr16
imul
sbb
inc
jb
addr16
arpl
jo
inc
imul
dec
dec
xor
cs
insb
add
add
insl
insl
imul
push
jb
inc
add
add
popa
je
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
or
inc
gs
gs
push
jb
inc
popa
arpl
inc
outsb
je
jns
push
dec
dec
dec
dec
inc
push
cs
insb
add
insl
gs
arpl
add
sub
pop
pop
addr16
popa
imul
cmp
pop
pop
jo
pop
arpl
insl
outsl
fs
aas
add
jo
pop
insw
outsl
fs
push
add
jae
je
popa
jo
pop
je
jo
add
push
add
jae
je
jae
jb
popa
je
gs
add
pop
add
arpl
insb
outsb
add
pop
popa
fs
jae
pop
imul
add
outsl
outsb
je
outsl
insb
data16
add
arpl
je
push
gs
add
out
pop
imul
insl
add
data16
add
je
insl
popa
insb
insb
outsl
arpl
add
insb
insb
outsl
arpl
insl
jae
arpl
cs
insb
jb
jb
cs
add
add
push
add
jo
popa
add
add
add
outsl
add
add
popa
add
add
add
add
add
addr16
jo
outsb
dec
gs
add
jbe
jo
xor
add
add
data16
add
mov
add
je
ficomps
filds
popa
rcrb
jns
mov
add
fcomps
jb
cmpl
push
xchg
je
jae
jne
jno
popa
outsb
push
repz
dec
andl
pusha
xchg
inc
add
xorb
je
mov
add
dec
xchg
je
add
add
sbb
arpl
jns
mov
add
lret
nop
je
jmp
jne
jmp
xchg
gs
mov
add
nop
cmc
inc
add
inc
add
inc
add
inc
add
cmc
inc
add
cmc
inc
add
inc
add
nop
je
sahf
lcall
jg
add
dec
lcall
insl
test
add
add
addr16
jb
imul
add
sub
cs
insl
jae
jg
add
xchg
jg
fs
add
jmp
mov
add
pushf
jb
fsts
arpl
insl
popa
mov
mov
gs
pushf
jb
cltd
xchg
insb
push
add
add
scas
jg
add
jo
xchg
insb
outsl
outsl
repz
addr16
jb
jno
xor
mov
insb
insb
mov
add
dec
nop
je
ds
sub
repz
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
jmp
add
add
repz
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
add
repz
add
dec
add
add
mov
add
dec
hlt
add
pop
repz
repz
repz
aas
hlt
add
mov
jmp
xchg
repz
hlt
add
repz
hlt
add
repz
pop
repz
dec
pop
jmp
repz
jg
add
jecxz
jmp
repz
repz
repz
add
add
add
add
repz
repz
in
add
mov
add
mov
add
movsl
repnz
movsl
jb
add
repnz
movsl
repnz
movsl
repnz
jne
add
jne
add
repnz
repnz
jne
add
jne
add
repnz
repnz
xor
loop
add
add
add
add
xor
repnz
and
repnz
cmc
icebp
add
lret
xchg
gs
repnz
adc
add
cmc
loope
add
call
sbb
add
add
mov
add
sub
pop
popa
and
add
push
add
aas
add
add
mov
add
add
add
dec
in
jb
call
ss
add
inc
add
add
mov
add
mov
add
into
sbb
add
add
mov
add
mov
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
cmc
testb
cmc
testb
in
add
in
add
cmc
testb
cmc
testb
in
add
in
add
mov
add
mov
add
movsl
testb
movsl
testb
mov
add
mov
add
movsl
testb
movsl
testb
jne
add
jne
add
testb
testb
jne
add
jne
add
testb
testb
add
add
xor
testb
and
testb
xor
or
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
mov
add
add
mov
add
cmpsl
add
cmpsl
add
cmpsl
add
cmpsl
add
mull
mov
shll
mov
stc
cmpsl
mov
insl
test
repz
test
repz
test
repz
test
repz
test
repz
mov
std
test
add
mov
popf
test
repz
test
repz
test
repz
mov
inc
test
mov
sbb
mov
sti
test
repz
stos
mov
adc
mov
jmp
popf
mov
jge
mov
add
cmc
add
cmc
add
cli
hlt
add
icebp
hlt
add
sub
add
repz
cmc
add
add
add
or
add
add
add
stc
hlt
add
sub
add
and
add
sbb
add
cmc
add
cmc
add
cmc
add
repz
pop
repnz
pop
repnz
pop
repnz
pop
repnz
repnz
repnz
repnz
repnz
lds
add
outsl
add
add
add
sbb
add
push
add
push
add
push
add
add
pop
push
add
push
add
push
add
add
xchg
add
add
rcrl
add
jo
add
pop
add
or
add
jo
add
insl
add
int
add
mov
add
sbb
add
add
mov
lea
mov
mov
mov
add
mov
mov
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
add
cltd
add
cltd
add
cltd
add
cltd
add
add
cwtl
add
cwtl
add
cwtl
add
cwtl
add
sub
xchg
mov
sbb
mov
add
xchg
mov
inc
xchg
mov
inc
xchg
mov
and
xchg
mov
out
xchg
mov
repz
mov
ja
mov
xchg
cltd
mov
fwait
cltd
mov
sub
add
add
mov
pop
cltd
mov
imul
mov
repz
mov
xlat
cwtl
mov
add
mov
rcll
mov
sbb
and
add
add
sti
lock
icebp
add
icebp
add
adc
add
adc
add
add
add
add
add
add
add
add
add
push
icebp
add
icebp
add
icebp
add
lock
lock
lock
lock
adc
repz
lock
in
lock
repz
repz
repz
repz
testl
add
add
addr16
add
push
push
add
testl
add
add
and
add
push
add
jae
add
ja
add
test
add
push
add
repz
add
jecxz
add
arpl
add
add
push
push
add
popf
push
add
sub
add
push
add
daa
push
add
jmp
add
aad
add
movsl
testb
leave
pop
add
mov
add
add
fmuls
add
lea
mov
add
lea
mov
lea
mov
lea
mov
mov
mov
mov
mov
add
lea
mov
add
lea
mov
lea
mov
add
lea
mov
lea
mov
add
add
mov
add
pop
mov
repz
repz
mov
mov
mov
mov
das
movsb
mov
inc
movsb
mov
inc
movsb
mov
andl
repz
mov
xor
mov
inc
cmpsb
mov
xor
mov
in
movsl
mov
cmc
movsl
mov
jge
add
add
mov
xchg
movsl
mov
xor
movsl
mov
xchg
mov
ja
mov
ret
movsb
mov
add
lock
add
xor
add
xor
add
add
cmc
add
adc
cmc
add
das
cmc
add
out
hlt
add
hlt
add
hlt
add
add
add
add
add
add
cmc
add
adc
cmc
add
add
add
adc
add
add
add
cmc
add
cmc
add
or
add
pop
jo
add
add
inc
push
add
in
imul
add
outsb
add
or
outsl
add
dec
outsl
add
pop
outsl
add
aas
outsl
add
add
add
cmp
insb
add
xor
pop
add
stc
pop
add
adc
add
pop
add
imul
or
pop
add
xor
pop
add
in
pop
add
pop
pop
add
pop
pop
add
xchg
pop
add
sub
mov
mov
xchg
add
xchg
add
add
clc
xchg
add
popf
add
pushf
add
pushf
add
pushf
add
cltd
add
lcall
or
add
add
or
add
or
add
or
lcall
or
add
add
or
add
or
stc
popf
add
add
mov
add
in
popf
mov
in
mov
lcall
call
add
testl
mov
add
jp
mov
popf
mov
jmp
pushf
mov
inc
pushf
mov
inc
pushf
mov
outsl
pushf
mov
mov
repz
mov
sub
add
mov
jmp
cmpsl
lahf
lret
mov
hlt
mov
sbb
cmc
mov
jmp
adc
popa
jne
lods
js
test
or
sbb
push
jo
aam
inc
push
adc
pop
mov
push
sub
inc
outsl
mov
add
sbb
jle
mov
add
pop
repz
idiv
push
lahf
and
popa
push
rep
jmp
mov
dec
adc
adc
repz
imul
jne
adc
loop
iret
adc
add
or
push
xchg
xor
adc
mov
stos
movsl
roll
push
adc
loop
iret
adc
mov
test
into
adc
sub
stos
add
add
xchg
xor
and
iret
adc
inc
add
testl
inc
popa
rcl
adc
mov
lods
inc
loope
rcll
add
mov
sti
sbb
add
adc
int
jmp
xchg
jmp
hlt
dec
inc
imul
cwtl
loop
mov
xor
popf
jp
add
xchg
lods
mov
add
enter
jge
roll
jl
add
pop
das
in
fidivl
push
sbb
loop
sub
jge
lahf
add
mov
add
popf
lea
add
es
jge
pushf
add
mov
loop
faddl
popa
add
popf
call
pop
add
add
mov
mov
int3
leave
icebp
adc
cmp
paddusw
test
mov
lret
test
lea
ljmp
mov
adc
mov
inc
loop
fnstsw
mov
adc
scas
push
and
insl
mov
psubb
cmp
add
pop
hlt
rcrb
out
incb
movsl
dec
dec
xor
mov
aam
lds
dec
mov
adc
popl
and
mov
ss
mov
inc
pop
mov
mov
adc
and
sub
add
popl
sahf
sub
ret
add
add
rorb
mov
inc
rclb
pop
repz
dec
mov
mov
inc
std
mov
into
adc
xchg
add
mov
test
jae
rcll
addr16
mov
pop
lds
rcll
addr16
stos
scas
pop
mov
adc
daa
es
or
out
inc
rclb
das
imul
add
add
fildll
out
cmp
add
or
add
repz
cli
pop
fs
pop
jae
shll
lret
imul
add
mov
insb
mov
add
pop
push
negl
insl
mull
jnp
dec
imul
add
mov
pop
pop
negl
add
add
mov
inc
push
lret
mov
cs
faddl
add
adc
mov
xchg
jno
loopne
add
mov
jo
mov
push
dec
pop
shlb
arpl
and
arpl
repz
pop
cwtl
arpl
push
mov
repz
add
add
imul
mov
sub
pop
adc
repz
pop
clc
push
jns
or
push
test
das
pop
fcoms
cmp
jno
repz
data16
data16
rep
jo
lea
pop
mov
cld
push
call
push
fcomps
push
in
mov
pop
add
xchg
decb
jmp
add
add
sbbl
jae
lds
inc
je
outsl
inc
mov
add
push
push
add
jnp
outsl
add
addr16
or
or
repz
pop
pop
jns
jl
outsb
iret
and
fnstsw
pop
outsl
jmp
test
add
repz
cld
push
sub
fbld
mov
pusha
add
add
add
repz
pusha
cli
xor
or
outsb
mov
lock
jns
add
insb
push
sub
bound
mov
sub
pop
testl
je
bound
add
dec
jae
cmc
out
add
pop
jne
test
gs
add
mov
jbe
pop
je
movsl
out
add
lret
pop
gs
add
les
add
push
pop
jb
outsb
jbe
testl
popa
or
add
add
mov
outsl
jbe
xchg
arpl
imul
es
insb
mov
push
outsb
mov
bound
sbb
mov
bound
sbb
mov
bound
sub
push
imul
add
or
mov
insb
outsb
mov
push
imul
faddl
add
sub
add
sub
add
lea
arpl
outsb
in
push
test
pop
mov
mov
jae
mov
pop
pop
mov
repz
movsb
pop
ljmp
pop
push
add
add
mov
xor
pop
pop
push
popa
dec
push
outsl
adc
adc
pop
push
jo
add
repz
insl
inc
pop
or
mov
and
sub
add
mov
push
sbb
scas
dec
mov
add
je
add
sub
test
push
sub
rcll
add
add
inc
sub
mov
xor
add
and
add
sbb
add
adc
add
or
add
add
add
cli
sub
icebp
repnz
les
and
jg
je
lods
fs
cmp
and
mov
and
xor
outsl
xor
repz
push
fs
or
jne
add
add
add
jp
xor
je
push
inc
or
es
jae
adc
cmp
and
pusha
arpl
dec
jne
call
and
cmp
aas
arpl
push
jno
mov
pusha
outsb
rclb
cmp
inc
or
mov
outsl
je
pop
jne
mov
push
cmp
rolb
or
sbb
fwait
inc
jae
mov
and
add
mov
pop
fs
mov
push
popa
mov
or
leave
movsb
push
imul
mov
or
bnd
je
gs
outsl
mov
insl
push
sub
data16
sbb
or
and
push
pop
cmc
adc
mov
out
push
or
add
jb
out
push
cmp
pop
or
xor
or
sub
push
push
push
and
push
push
xor
loope
xchg
enter
call
shlb
aas
cmpsb
adc
push
xchg
stc
mov
das
xchg
adc
add
call
push
add
add
mov
dec
push
mov
call
bound
xor
repz
push
mov
adc
cmp
repz
push
or
mov
add
cs
je
jne
jb
mov
add
and
adc
and
add
and
icebp
dec
add
and
loope
dec
add
add
add
stos
aaa
dec
jmp
ljmp
and
add
fcoms
cmp
outsb
push
jb
xchg
add
pop
add
dec
add
jae
push
mov
add
jb
add
pusha
dec
insl
adc
imul
pop
fs
imul
add
insb
add
out
insb
add
out
cmp
int
and
add
add
and
test
cmp
sub
dec
outsb
imul
add
or
add
push
push
jne
or
outsl
and
gs
pop
outsb
fs
push
gs
outsl
leave
inc
insl
gs
push
jne
lret
push
gs
or
insl
gs
add
adcl
add
add
repnz
mov
adc
mov
adc
mov
adc
mov
imul
pop
add
push
add
sub
push
inc
mov
nop
push
inc
leave
mov
adc
lcall
cmp
int3
add
mov
and
dec
push
jae
aas
dec
ja
push
pop
jnp
lock
clc
and
add
add
dec
sbb
inc
push
adc
dec
inc
add
pop
repz
xor
inc
xor
inc
dec
int3
pop
test
les
fs
cmp
push
xor
sub
pop
xor
shrb
push
into
fs
call
add
and
mov
imul
repz
mov
mov
cmp
add
add
int3
repz
mov
mov
ja
int3
repz
add
repz
add
repz
mov
add
mov
add
testl
insb
in
add
out
xor
pop
clc
add
out
xor
js
xor
mov
cs
mov
add
add
testl
lds
xor
enter
add
clc
add
out
xor
jns
testl
push
mov
add
lock
mov
xor
add
clc
str
xchg
inc
add
cwtl
inc
add
cwtl
inc
add
xchg
inc
add
xchg
inc
add
add
movsl
xchg
inc
add
hlt
or
lds
add
inc
add
testl
add
hlt
pop
add
inc
add
add
negl
add
inc
add
push
add
testl
add
repz
add
inc
add
jb
mov
add
mov
jae
mov
add
add
mov
add
mov
jno
mov
add
fidivl
mov
add
inc
mov
inc
mov
add
inc
jo
mov
add
mov
jo
mov
push
mov
jo
mov
add
mov
outsl
inc
mov
jo
mov
sbb
push
jo
mov
jo
mov
or
add
repz
repz
repz
fbstp
repz
repz
dec
repz
repz
add
repz
outsl
dec
repz
jne
and
repz
outsb
dec
repz
repz
add
hlt
addr16
xrelease
repz
repz
test
iret
outsl
int3
repz
repz
repz
add
scas
outsl
int3
repz
xchg
repz
outsl
int3
repz
outsl
int3
repz
and
add
adc
test
in
add
repnz
testl
scas
in
add
nop
or
std
xor
add
and
add
and
mov
testb
add
add
lock
repz
lgdtl
xor
jns
out
add
icebp
xor
out
aaa
add
xor
push
testl
add
lock
mov
inc
add
dec
inc
add
testl
add
notl
mov
inc
add
clc
or
stc
dec
inc
add
push
add
dec
inc
add
clc
add
add
add
aad
inc
add
clc
add
testl
add
testl
add
testl
add
testl
xchg
testl
add
insb
inc
mov
add
inc
mov
add
inc
mov
push
mov
sbb
add
mov
add
mov
ja
mov
add
mov
ja
mov
add
mov
ja
mov
add
mov
ja
mov
add
mov
add
mov
push
mov
add
inc
add
repz
fwait
repz
add
int3
repz
xchg
repz
jne
repz
xchg
repz
jne
repz
add
repz
jbe
repz
add
rep
jbe
repz
repz
jbe
repz
jbe
repz
repz
repz
add
repz
repz
xor
jbe
repz
add
repz
dec
rep
add
repz
jbe
repz
add
repz
repz
add
add
int3
repz
stc
add
and
push
ret
xor
or
xor
xor
xor
xchg
out
insl
mov
repnz
xor
ja
incl
sub
mov
add
out
add
out
add
icebp
add
inc
xor
aam
add
add
xor
orl
add
popl
add
mov
add
xor
add
pop
add
hlt
pop
add
inc
add
hlt
or
jne
inc
add
hlt
add
leave
pusha
inc
add
hlt
add
popa
pusha
inc
add
cmc
add
pop
pusha
inc
add
fs
add
add
inc
add
arpl
add
add
popf
arpl
or
or
cltd
arpl
mov
arpl
cmc
hlt
or
andl
add
inc
add
dec
inc
add
jno
mov
inc
mov
inc
mov
add
inc
mov
add
inc
mov
add
mov
jne
mov
adc
add
mov
add
inc
mov
jl
jno
or
add
mov
ja
mov
ja
mov
ja
mov
add
add
mov
inc
mov
xor
movsb
repz
jbe
repz
add
repz
xchg
repz
jbe
repz
add
add
int3
repz
xchg
repz
add
repz
nop
repz
int3
repz
add
repz
repz
jne
repz
add
repz
je
repz
add
repz
dec
repz
test
out
dec
repz
xrelease
repz
add
repz
jbe
repz
add
repz
repz
jmp
inc
sbb
add
add
add
cli
xor
out
jmp
jne
xor
add
ljmp
nop
or
fnstenv
add
jmp
mov
nop
jmp
add
jmp
rcrl
add
in
add
nop
ljmp
jmp
in
pop
xor
sub
pop
xor
sub
add
xor
and
xor
add
icebp
push
add
icebp
or
cmc
pusha
inc
add
lock
add
lock
or
out
add
adc
icebp
add
mov
icebp
add
mov
icebp
add
add
lock
test
icebp
or
cltd
popa
inc
add
add
push
pop
inc
add
add
dec
pop
inc
add
lock
sbbl
add
inc
add
pop
inc
add
jne
mov
jne
mov
jne
mov
or
add
inc
mov
add
inc
mov
add
mov
inc
mov
add
inc
mov
add
jle
inc
mov
or
add
mov
inc
mov
add
inc
mov
jne
mov
jb
mov
je
mov
push
add
repz
jae
repz
add
repz
jp
jbe
repz
cltd
repz
jbe
repz
add
add
int3
repz
int3
repz
add
jbe
repz
nop
repz
repz
jbe
repz
nop
repz
mov
jl
xchg
jbe
repz
add
repz
repz
add
repz
je
repz
add
repz
add
inc
xor
cmp
inc
xor
ret
in
mov
xor
loope
add
out
lods
and
add
call
add
out
jge
xor
enter
gs
add
vpcomw
add
vpshlw
xor
add
xor
stos
mov
in
fldenv
in
in
xorb
jp
in
roll
incb
lods
bound
add
data16
add
add
scas
testl
add
cmc
or
popa
dec
inc
add
testb
dec
dec
inc
add
cmc
sldt
inc
add
cmc
or
add
cmc
adc
push
dec
inc
add
push
add
inc
add
adc
sub
add
hlt
sbb
inc
dec
inc
add
and
sub
add
hlt
and
lea
add
cmc
and
gs
inc
add
add
push
dec
inc
add
add
add
movl
inc
mov
add
inc
mov
xchg
inc
mov
add
mov
nop
inc
mov
nop
inc
mov
add
mov
nop
inc
mov
nop
inc
mov
add
mov
add
mov
nop
inc
mov
nop
inc
mov
add
add
add
mov
or
add
inc
mov
popl
imul
inc
mov
jg
mov
repz
add
mov
add
repz
mov
add
repz
pushf
repz
dec
repz
xchg
repz
xchg
pop
dec
repz
add
add
int3
repz
repz
add
repz
mov
fisttps
popf
repz
int3
repz
xchg
pop
int3
repz
mov
das
int3
repz
add
repz
xor
sahf
nop
cld
add
repz
repz
xor
lock
repz
repz
xor
out
add
add
mov
add
sbb
sti
repz
repz
repz
repz
or
add
repz
repz
adc
add
repz
repz
stos
add
xor
inc
adc
dec
push
add
mov
repnz
ja
ret
bnd
and
jns
add
add
pop
icebp
flds
push
icebp
inc
add
add
pop
add
lds
cmp
pop
add
icebp
pop
add
icebp
arpl
inc
icebp
jp
push
icebp
fildl
push
icebp
jle
push
icebp
jl
xor
repnz
test
aaa
add
icebp
or
scas
icebp
sbb
mov
icebp
push
add
icebp
inc
add
inc
add
push
add
add
lea
add
adc
jo
in
add
cli
add
stc
add
lea
add
lea
add
lea
add
lea
add
lea
dec
lea
push
lea
pop
lea
outsl
lea
jno
dec
add
lea
jl
and
arpl
xor
add
lea
xor
dec
add
lea
lea
xor
repz
jns
and
xchg
repnz
add
add
sbb
js
adc
add
repnz
lods
repnz
add
repnz
xor
mov
test
mov
pop
repnz
fs
add
push
add
inc
add
cmp
add
add
cmp
xor
mov
cmp
add
hlt
fwait
add
hlt
xchg
add
hlt
mov
hlt
daa
add
add
mov
add
mov
add
mov
add
mov
and
pop
add
mov
or
sbb
aad
loop
int
push
add
lea
add
lea
add
add
rorb
add
test
and
cmc
xor
divl
dec
test
xor
hlt
xor
xor
lds
inc
test
nop
xchg
nop
xor
test
xor
sti
jecxz
or
in
mov
sti
cld
xor
sti
mov
xor
sti
test
add
add
ret
sti
test
xor
repnz
xor
icebp
mov
icebp
mov
or
mov
dec
repnz
cmp
mov
xor
icebp
mov
xor
icebp
les
out
xor
icebp
enter
lret
icebp
leave
xor
icebp
int3
xor
lock
xor
push
rcrb
push
fadds
add
jl
add
fistps
loopne
or
loope
or
add
out
call
add
ljmp
add
pushf
test
in
pushf
mov
out
jl
add
jl
add
jl
add
push
add
mov
add
xchg
fwait
add
mov
and
add
xchg
popl
and
mov
add
icebp
and
movsl
icebp
xor
jbe
xor
ja
and
push
icebp
xor
add
aaa
add
add
sbb
mov
icebp
sbb
shl
add
icebp
mov
fwait
icebp
scas
add
mov
add
add
leave
add
add
dec
icebp
addl
icebp
mov
push
icebp
test
dec
icebp
mov
shr
popl
aam
add
mov
pop
push
mov
pop
dec
mov
pop
inc
mov
pop
aas
mov
pop
cmp
pop
cmp
add
dec
lea
dec
lea
add
dec
lea
add
nop
add
add
mov
add
jge
daa
add
mov
add
pop
mov
add
mov
add
mov
add
mov
add
enter
mov
icebp
add
add
icebp
pop
add
icebp
or
lock
icebp
or
adc
nop
add
icebp
push
add
icebp
or
add
icebp
xor
add
data16
inc
add
icebp
xor
mov
icebp
inc
add
icebp
xor
hlt
cmp
hlt
aaa
add
hlt
cmp
repz
hlt
cmp
repz
repz
hlt
cmp
add
repz
add
mov
inc
mov
add
pop
add
nop
add
mov
dec
nop
xor
dec
mov
add
add
add
mov
add
str
in
inc
nop
dec
mov
add
nop
sti
decl
mov
call
nop
stc
jmp
nop
idiv
adc
in
jmp
nop
cmc
call
mov
jmp
mov
lcall
nop
mov
sbb
lahf
lcall
mov
sbb
nop
repz
jb
cltd
jnp
lcall
add
lods
out
jl
scas
out
jne
mov
out
outsl
mov
pusha
mov
popa
incb
out
dec
js
inc
je
cmp
gs
mov
adc
dec
decl
lock
incl
dec
incl
lock
call
lock
decl
lock
jmp
lock
lcall
lock
decb
lock
adcb
daa
lock
incb
add
icebp
out
jae
ljmp
ja
jae
pop
mov
mov
push
xchg
mov
add
mov
test
add
push
add
pop
push
add
dec
push
xor
add
cmp
xor
and
pop
add
sbb
daa
adc
push
or
sbb
add
cli
xchg
add
repnz
add
loope
add
rcrl
add
in
shrb
mov
mov
adc
mov
adc
mov
add
mov
adc
mov
sbb
sarb
push
sarb
enter
lret
sarb
sarb
add
add
ret
add
rolb
rol
add
add
les
mov
rol
mov
leave
add
and
or
push
out
add
mov
and
or
imul
mov
outsl
jbe
cmpsb
outsl
and
or
scas
add
mov
scas
cli
or
add
scas
pusha
scas
cwtl
or
popa
or
scas
or
xor
or
sbb
outsb
pop
or
outsb
adc
cmp
adc
inc
outsb
pop
or
insl
adc
shrb
or
or
sbb
adc
or
scas
out
or
scas
repz
adc
cld
lea
ret
adc
add
add
adc
std
insl
pop
mov
leave
push
mov
sbb
pop
mov
xchg
test
adcb
std
xchg
pop
cmp
pop
push
std
xchg
push
std
jnp
inc
std
fwait
push
cmp
xchg
push
push
std
lahf
push
dec
std
ja
inc
std
in
cmp
out
sbb
sbb
sbb
xlat
adc
std
dec
adc
std
cmpsl
push
std
cld
scas
push
idiv
mov
or
add
add
fxtract
and
leave
repz
mov
mull
mov
jmp
and
in
inc
mov
and
push
jns
and
jno
and
imul
and
push
and
sbb
jle
sbb
pop
jb
in
insl
and
fs
add
adc
and
test
pop
and
shlb
scas
rclb
and
mov
repz
scas
and
adc
sbb
pop
mov
sbb
and
mov
xor
cmp
sbb
and
add
iret
and
add
add
aam
stos
and
mov
mov
es
mov
test
jge
mov
mov
mov
mov
sbb
mov
gs
mov
cld
pop
stos
fwait
cld
pop
insb
lcall
jae
cld
push
imul
insb
push
cld
inc
jb
cld
aas
push
cld
or
add
adc
popa
cld
push
lods
jbe
aaa
lods
aas
cld
sbb
std
cmp
std
daa
outsb
jae
outsb
or
scas
mov
std
movsb
outsb
or
sub
std
or
std
pop
mov
xor
jnp
sub
and
es
das
adc
cld
push
sbb
mov
push
cld
mov
adc
push
adc
cld
or
adc
sti
out
adc
add
enter
enter
leave
add
test
shl
add
testb
push
notb
add
addb
idivb
cmp
push
add
testb
testb
notb
sub
cmp
sub
testb
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
repnz
dec
icebp
push
mov
push
mov
push
mov
push
orb
push
mov
push
dec
mov
push
inc
mov
push
aas
mov
push
push
mov
push
cmp
push
cmp
push
xchg
mov
push
pushf
mov
push
xchg
mov
push
add
add
or
repz
push
lahf
repz
scas
repz
imul
sbb
dec
repz
push
dec
repz
push
mov
pop
push
cmpsl
repz
es
and
lock
and
loop
daa
push
fnstsw
sub
out
mov
sub
cmp
sub
push
cmp
add
mov
xor
idivl
xor
cmpl
xor
lcall
cmp
xor
cmp
xchg
in
std
aas
mov
std
inc
sub
inc
lcall
inc
mov
std
inc
subb
inc
xchg
mov
inc
mov
decl
movsl
decl
add
xchg
mov
dec
mov
dec
sbbb
pop
call
pop
call
pop
call
call
aas
call
call
inc
call
repz
jecxz
pusha
in
mov
jl
mov
jge
mov
pop
add
pusha
add
std
ret
std
mov
add
mov
push
std
cmpsb
add
add
add
add
xchg
add
cli
addl
cli
dec
add
cli
dec
add
add
push
add
dec
add
rolb
pusha
cli
lret
add
les
push
cli
lds
inc
cli
add
xlat
add
xor
daa
xor
push
xor
inc
sub
sub
and
sub
and
sub
and
xor
pop
xor
add
add
push
and
xor
and
and
sbb
and
sbb
xor
sbb
sub
push
xor
adc
xor
mov
xor
movsl
push
xor
xchg
mov
xchg
xchg
mov
mov
test
adc
cs
scas
adc
mov
mov
add
add
aad
mov
les
adc
mov
mov
enter
lret
mov
mov
adc
mov
adc
mov
rclb
mov
jno
aam
jbe
xlat
mov
xorl
fdivrs
lea
sub
add
mov
sti
out
popf
sti
clc
jge
sti
test
xor
lods
add
lea
adc
lea
in
insb
imul
insb
push
mov
insb
jo
mov
insb
outsb
in
lods
and
in
lods
xor
test
xor
test
lods
sub
stos
lods
aam
add
test
add
add
mov
test
add
add
mov
add
mov
xchg
test
repz
test
mov
sbb
mov
mov
add
push
add
lsl
or
mov
mov
add
add
repz
xrelease
mov
mov
mov
dec
cmpsl
mov
adc
repz
cmpsl
mov
cld
add
repz
cmpsl
mov
push
add
repz
repz
nop
repz
repz
repz
repz
repz
add
nop
repz
repz
repz
repnz
repz
repnz
add
add
jmp
add
jmp
add
sub
add
repz
repz
repz
repz
repz
repz
repz
nop
repz
repnz
nop
repz
lea
add
lea
add
add
or
add
add
cli
pop
add
sub
add
add
add
jg
add
into
pop
add
mov
add
sbb
add
add
or
add
testb
sti
pop
add
dec
testl
add
add
gs
add
add
pop
add
adc
add
cmpsl
pop
add
pop
testl
add
testl
add
add
mov
add
add
add
mov
movsb
add
movsb
add
movsb
add
movsb
add
mov
add
add
mov
mov
add
add
mov
mov
add
add
mov
mov
add
add
add
add
mov
add
mov
scas
movsb
mov
popa
add
repz
add
repz
mov
cmp
repz
add
repz
mov
sbb
movsb
mov
push
add
repz
mov
add
movsb
mov
push
movsb
mov
imul
mov
push
mov
sbb
repz
add
mov
cmp
repz
mov
add
inc
add
add
repz
out
repz
out
repz
out
repz
das
repz
repz
repz
mov
add
das
repz
repz
jg
fs
add
or
inc
dec
test
rorl
aam
push
or
jae
adcb
mov
out
es
out
and
cwtl
loope
mov
sbb
mov
imul
xchg
and
pop
fbld
shl
add
mov
jmp
repz
mov
add
mov
add
movsl
repz
movsl
repz
jne
add
jne
add
add
add
repz
jne
add
jne
add
repz
repz
xor
repz
and
repz
xor
repz
and
repz
cmc
repnz
cmc
repnz
in
add
in
add
mov
add
add
mov
add
add
pushf
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
and
out
add
cmc
out
add
in
add
in
add
cmc
out
add
cmc
out
add
in
add
in
add
mov
add
mov
add
movsl
out
add
movsl
out
add
mov
add
mov
add
movsl
out
add
add
add
jne
add
jne
add
testl
add
add
jne
add
testl
add
testl
add
testl
add
add
mov
add
add
mov
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
xor
hlt
add
and
hlt
add
xor
hlt
add
and
hlt
add
cmc
repz
cmc
repz
in
add
in
add
cmc
repz
cmc
repz
in
add
in
add
mov
add
mov
add
movsl
repz
movsl
repz
add
add
mov
add
movsl
repz
movsl
repz
jne
add
jne
add
repz
repz
jne
add
jne
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
pushf
add
mov
add
add
mov
add
add
mov
add
add
mov
add
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
jne
add
lock
lock
jne
add
jne
add
lock
lock
xor
lock
and
lock
xor
lock
and
lock
cmc
out
add
cmc
out
add
in
add
in
add
cmc
out
add
cmc
out
add
in
add
in
add
mov
add
add
add
movsl
out
add
movsl
out
add
mov
add
mov
add
movsl
out
add
mov
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
movsl
hlt
add
movsl
hlt
add
mov
add
add
add
movsl
hlt
add
movsl
hlt
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
xor
hlt
add
and
hlt
add
xor
hlt
add
and
hlt
add
cmc
repz
cmc
repz
in
add
in
add
cmc
repz
cmc
repz
add
add
in
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
in
add
cmc
lock
cmc
lock
in
add
in
add
mov
add
mov
add
add
add
movsl
lock
mov
add
mov
add
movsl
lock
movsl
lock
jne
add
jne
add
lock
lock
jne
add
jne
add
lock
lock
xor
lock
and
lock
xor
lock
and
lock
cmc
out
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
add
add
add
mov
add
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
xor
cmc
add
and
cmc
add
cmc
hlt
add
cmc
hlt
add
in
add
in
add
cmc
hlt
add
cmc
hlt
add
in
add
add
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
xor
hlt
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
jne
add
gs
add
gs
add
xor
icebp
add
and
icebp
add
xor
icebp
add
and
icebp
add
cmc
lock
cmc
lock
in
add
in
add
add
add
cmc
lock
in
add
in
add
mov
add
mov
add
movsl
lock
movsl
lock
mov
add
mov
add
movsl
lock
movsl
lock
jne
add
jne
add
lock
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
movsl
cmc
add
movsl
cmc
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
xor
cmc
add
and
cmc
add
xor
cmc
add
and
cmc
add
cmc
hlt
add
add
add
in
add
in
add
cmc
hlt
add
cmc
hlt
add
in
add
in
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
pop
mov
repz
mov
repz
mov
repz
int3
repz
mov
repz
int3
repz
int3
repz
mov
repz
mov
mov
mov
mov
mov
xchg
xchg
xchg
rorl
add
repz
mov
add
add
repz
repz
nop
repz
mov
add
repz
mov
add
nop
repz
repz
repz
repz
repz
repz
repz
repz
mov
add
repz
mov
add
repz
repz
lcall
shr
add
add
icebp
fidivs
and
arpl
in
cmp
and
pop
leave
sbb
cmc
mov
sub
add
loop
pop
pop
into
adc
jg
pop
jmp
add
xchg
nop
sub
fcoml
xchg
loope
out
mov
icebp
movsb
sahf
push
mov
adc
xchg
sbb
rolb
add
mov
inc
cmp
or
addr16
repnz
subl
bound
cld
xor
scas
iret
fs
andb
mov
add
pusha
scas
mov
aaa
hlt
movsb
xchg
jle
pusha
jae
jmp
mov
cmc
mov
adcb
add
push
sub
inc
outsb
lea
fcmovnbe
cmc
and
push
sub
add
add
push
mov
xor
lahf
movq
out
push
pop
aaa
fiadds
pop
add
xchg
test
fildll
pop
sbb
test
lock
in
pmaxsw
lods
movsl
jne
mulb
jecxz
je
out
or
mov
les
inc
ja
pop
popa
dec
sbb
wrmsr
in
ds
add
add
das
clc
mov
mov
push
shll
scas
inc
sbb
in
mov
lea
pop
add
repz
jnp
mov
movsb
dec
aam
call
jb
popa
jnp
out
loop
repnz
imul
inc
cltd
lret
pusha
sbb
rorl
xchg
iret
inc
add
jne
pop
pusha
cmpsb
jp
enter
add
push
mov
or
xchg
lods
cs
mov
mov
les
cmc
mov
xor
movsl
stos
jmp
scas
mov
out
cmp
sub
nop
fsubr
out
ror
jo
into
sub
jmp
imul
repz
hlt
je
insl
sub
pop
push
call
add
jns
stc
add
add
sbb
out
fstpt
imul
clc
mov
in
dec
jb
cmpsl
xor
mov
jb
in
mov
push
push
call
or
in
mov
jmp
fchs
xor
imul
shl
sbb
shll
push
test
pop
dec
and
jb
mov
leave
add
add
fcomps
sbb
ss
js
stos
js
push
stos
imul
mov
imul
inc
push
movsl
call
lea
dec
lcall
pop
sbb
mov
xchg
jne
movsl
cmp
das
test
cwtl
repnz
loopne
add
add
fsubr
cmp
movl
jmp
shlb
mov
inc
fimuls
fsts
adc
mov
inc
hlt
scas
fisttps
fwait
or
inc
leave
cmpl
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
add
xchg
pop
aaa
pop
out
ficompl
out
mov
arpl
mull
cwtl
xchg
xlat
stos
cltd
adc
jno
sbb
daa
xor
aad
cmp
mov
jae
cmpsb
dec
add
mov
mov
push
mull
mov
sub
test
bound
sbb
lret
bound
aaa
mov
add
push
xchg
out
mov
dec
push
xchg
in
adcb
jp
fldenv
loop
cmp
mov
xchg
aas
adc
xor
sbb
xor
mov
adc
bnd
sti
popf
out
popf
add
icebp
inc
and
pushf
enter
in
dec
jge
jb
xchg
adc
cmp
jb
push
stos
add
add
pusha
shll
pop
jno
jno
adc
testl
inc
cmp
push
push
inc
mov
loopne
outsb
mov
mov
cmp
lret
or
jbe
xor
dec
testb
mov
popl
popf
daa
xor
test
fsubl
add
add
out
movsb
cmp
add
aaa
sub
pop
and
mov
lret
imul
adc
movsb
mov
cmp
stos
cmp
xchg
sbb
xchg
out
mov
dec
subl
jnp
cmp
mov
outsb
imul
mov
ret
mov
add
mov
add
jmp
fnstsw
xor
xor
mov
rol
xchg
xchg
xchg
lahf
addl
adcb
and
mov
jnp
cmp
or
ret
sahf
negb
mov
dec
push
scas
sbb
cmpsb
lret
push
add
movl
cs
add
add
pusha
push
int3
repnz
or
repz
dec
repz
repz
adc
repz
mov
and
int
add
nop
repz
repz
ja
add
repz
xor
into
repz
xor
rorl
add
jnp
add
fwait
xor
xchg
repz
add
add
repz
test
push
repz
repz
repz
repz
jnp
add
repz
repz
js
add
mov
aas
add
add
mov
aas
add
testl
add
add
push
jmp
add
pop
jmp
add
testb
fld1
aas
add
testb
and
testl
add
testl
add
add
cmpsb
call
add
cs
add
inc
fistpll
add
aas
add
fistpll
add
fistpll
add
sbb
mov
sbb
mov
add
negl
mov
inc
mov
sbb
xchg
add
add
mov
clc
jbe
pop
jmp
addr16
dec
stos
addb
je
inc
fdivl
dec
mov
int3
popa
ja
stos
call
popf
in
fwait
pop
xor
xchg
mov
scas
xor
add
xrelease
out
push
mov
pusha
stos
ja
push
mov
orb
mov
arpl
jl
sarl
insl
mov
cmp
sbb
cmpsl
int3
jo
xchg
xchg
rcl
jb
movsl
mov
jg
aas
fwait
push
call
add
xchg
add
test
lret
push
bound
rolb
add
xchg
in
mov
jo
sub
adc
cltd
mov
dec
cmp
push
insl
pop
pop
dec
add
lds
or
cs
xor
pop
push
mov
mov
test
mov
sahf
enter
push
fldcw
jb
jbe
lahf
push
xlat
fnsave
insb
or
mov
imul
inc
cmp
cmp
or
add
pop
cmp
push
lahf
push
imul
or
mov
mov
push
sarb
inc
add
stos
sub
lahf
data16
and
dec
fdivr
iret
and
repz
sub
inc
push
push
fiaddl
shlb
test
das
stos
add
add
bound
pop
add
adc
ret
or
add
mov
popa
adc
mov
ljmp
out
push
push
jne
adc
test
or
call
and
sbb
fadd
mov
or
cmp
insb
and
inc
aas
pop
cwtl
hlt
dec
test
add
mov
add
aad
sub
push
jle
xchg
mov
xchg
mov
jp
sbb
pushf
arpl
cmp
insb
sbb
cld
push
pop
mov
lods
popf
sbb
aad
stos
fistl
scas
out
or
dec
in
xor
jnp
jne
jbe
gs
jp
jbe
repnz
gs
sbb
repz
xor
add
dec
mov
add
add
stos
fidivl
adc
stc
sbb
cmp
push
pop
popa
cmp
adc
lock
insl
data16
lret
enterw
jb
call
fwait
pop
pop
adc
mov
jecxz
or
call
gs
inc
dec
sbb
jno
xchg
pop
dec
sbb
stos
or
add
add
mov
test
push
scas
dec
roll
push
cmc
cmp
orb
mov
fwait
jb
pusha
ret
jne
cmp
je
mov
scas
scas
arpl
pop
mov
stc
popa
mov
mov
xchg
repnz
add
pcmpeqb
mov
mov
das
add
add
fiadds
ret
adc
sahf
sti
or
sbb
push
ja
xor
add
out
sbb
cltd
lods
pop
out
jle
mov
neg
int
dec
sbb
xlat
popa
rolb
pop
fsubs
jnp
adc
sub
xchg
shrb
testb
movsb
adc
sub
and
or
pop
add
add
fwait
lods
pop
in
or
leave
inc
lret
into
aaa
dec
leave
cmp
dec
aam
cmpsl
push
call
outsb
pop
shrl
sbb
sub
addr16
orb
inc
leave
adc
das
xor
fwait
xchg
shll
push
pushf
mov
add
insb
aad
pushf
mov
cmp
out
lahf
add
add
outsl
sub
mov
aas
dec
nop
jge
push
mov
xchg
xor
cmp
jnp
cmc
nop
sub
mov
dec
jb
fidivrl
ljmp
jbe
jno
orb
sarb
push
add
mov
inc
int3
inc
xchg
mov
add
dec
cmpsl
mov
add
jp
enter
repz
jne
imul
or
nop
cli
or
inc
lock
pop
sub
jecxz
add
ret
dec
dec
clc
stos
and
stc
mov
cld
dec
jecxz
adc
je
leave
lods
cmpsl
pop
sub
inc
lods
hlt
mov
mov
cli
jnp
mov
in
sbb
ja
add
add
ret
sbb
jmp
sub
in
icebp
or
lods
iret
insb
xor
sbb
xchg
pop
pushf
arpl
and
stc
popa
test
sbb
cmp
mov
mov
jb
stos
inc
xchg
or
cmp
sub
mov
pop
or
add
sti
fisubl
mov
fists
js
bound
jmp
lcall
mov
fldcw
jb
out
sbb
adcb
inc
mov
bound
push
jle
jmp
jl
xchg
fwait
ljmp
les
fsubrl
clc
mov
sbb
ds
add
add
mov
fdivs
add
pop
jl
adc
xchg
popa
mov
mov
push
and
xchg
addb
addb
mov
mov
mov
insl
clc
lahf
mov
cwtl
pop
stos
adc
lahf
pop
fisubrl
and
pop
test
adc
fimuls
push
outsb
ja
xchg
add
insb
add
into
push
xchg
pop
sbb
add
dec
filds
mov
or
mov
testl
fisubs
popf
push
movl
hlt
imul
adc
cld
in
clc
xchg
loop
mov
test
iret
mov
sahf
cld
adc
adc
divl
arpl
pop
jno
add
addr16
hlt
push
or
dec
cmp
xchg
leave
scas
mov
add
xor
pusha
lcall
mov
dec
push
push
cli
std
lods
js
test
test
push
stos
insl
loope
fcompl
jns
mov
sbb
and
sub
loop
xor
push
inc
lods
inc
lcall
mov
xchg
add
aas
push
movsl
pop
insb
add
pop
mov
stos
std
cmp
std
push
pusha
xchg
add
and
cmp
push
xcrypt-ecb
cmpsl
int
xlat
mov
movsb
sbb
xor
jo
negb
xor
movsl
or
sbb
mov
push
and
cmp
add
les
xchg
xchg
xor
add
cmp
pop
pop
fwait
adc
adc
mov
ljmp
pop
mov
push
int3
jae
mov
addl
shlb
sbb
mov
sahf
mov
loopne
cmp
aam
xlat
sbbl
into
inc
sub
xchg
mov
add
cmp
das
fiaddl
push
push
sbb
pop
add
mov
ret
push
arpl
dec
adc
mov
outsb
lods
pop
xlat
lcall
push
mov
repz
xchg
dec
mov
pop
fs
jle
lret
add
rcr
inc
aas
out
sti
jle
test
xlat
sahf
jg
dec
mov
xor
add
adc
jnp
dec
insb
pop
stc
movsl
popa
incb
mov
data16
sub
push
cmp
ljmp
mov
sbb
cs
sub
adcl
sub
in
inc
addr16
loopne
scas
test
xchg
inc
dec
dec
ret
clc
and
pop
or
jmpw
add
add
sarl
or
add
inc
call
rorb
and
mov
mov
aaa
pop
into
repnz
push
and
cmpsb
jmp
sub
inc
test
mov
in
dec
iret
shll
xchg
jb
cmp
rorb
dec
fisttpll
pop
sbb
inc
je
xchg
push
js
mov
add
sbb
inc
adc
popa
out
mov
push
push
sub
pop
aam
std
or
cmp
push
loope
hlt
and
daa
les
cmp
jecxz
or
fwait
stc
push
add
sbb
pop
les
xor
rolb
fwait
lods
xchg
add
or
xchg
xchg
andb
in
lds
push
sub
out
add
ss
enter
aaa
ret
insl
fprem
mov
cmpsl
jae
dec
test
test
das
lahf
push
push
xor
hlt
hlt
nop
ret
cli
shlb
jp
int3
cmp
xor
mov
mov
sub
rorl
sbb
test
mov
xchg
ljmp
leave
xchg
add
add
and
and
jae
js
xlat
adc
mov
pop
xlat
adc
fcompl
aad
and
jb
aam
or
pop
pop
testb
or
lods
sub
mov
ret
lods
ljmp
adc
ror
push
sbb
adc
in
push
sub
add
adc
imul
mov
xchg
sbb
popf
das
pop
mov
and
jbe
dec
movsl
pop
mov
pop
ds
scas
fld
scas
mov
sbb
add
sub
push
std
cmp
out
lods
mov
mov
mov
xor
fldt
sub
push
stc
add
add
cmp
out
ss
or
in
push
jnp
in
jns
lret
popa
adc
pop
dec
outsb
movsb
sti
add
loopne
xor
mov
dec
out
data16
push
call
imul
ja
push
jge
imul
andl
jnp
mov
jl
add
add
mov
pop
scas
jge
stc
xchg
xchg
pushf
mov
mov
mov
mov
sub
popf
test
movsb
cmp
mov
pop
dec
out
pushf
mov
jp
cs
in
add
stos
push
add
jl
cmp
repz
cmp
int3
mov
data16
lret
dec
movsl
dec
or
in
push
icebp
inc
out
jno
add
lods
inc
stos
fdivs
xor
sub
stos
movsl
xchg
movl
popf
ret
sub
nop
ss
sub
or
cmp
push
pop
daa
add
addb
loop
adc
jmp
pop
dec
daa
ja
jge
mov
insl
adc
jbe
sbb
mov
push
xor
cmpsl
cli
xchg
faddl
add
push
mov
push
movsb
ds
in
mov
add
push
mov
sbb
outsl
icebp
rcrl
shlb
adc
ljmp
addr16
sarl
loop
insb
push
dec
jns
test
mov
mov
cmp
add
jno
es
xchg
push
sbb
cwtl
dec
add
mov
add
push
mov
test
repnz
es
inc
addr16
popf
xchg
idivb
mov
xor
sub
gs
jo
dec
push
mov
hlt
movsb
imul
mov
into
orb
sti
movl
mov
push
cs
dec
pop
mov
mov
mov
test
insl
xchg
pop
add
add
scas
cmpsl
xchg
inc
mov
dec
or
dec
adc
adc
add
cli
test
int3
in
jecxz
or
jge
xor
es
test
xchg
sub
xchg
push
sub
cmp
push
cmp
xor
gs
lock
pop
shlb
jb
add
add
xlat
or
sub
sub
pop
in
xchg
popa
or
mov
shlb
iret
imul
mov
add
inc
cmpsl
ficomps
push
or
inc
lods
fistl
mov
jb
scas
imul
dec
mov
or
rorl
cltd
sarl
ret
add
pop
mov
lods
push
xchg
lds
xchg
cmp
roll
in
jbe
jns
std
shl
popf
cs
xor
fldt
jnp
lea
and
test
arpl
lods
push
mov
repz
and
divb
mov
jbe
insl
inc
cmp
sete
xor
adc
add
aaa
jmp
jno
aam
jb
push
cmp
sub
loopne
mov
lret
lret
movsb
daa
mov
add
mov
out
popa
xor
jg
pop
rolb
loopne
inc
les
cmp
int3
stos
movsb
cmp
data16
and
sbb
aam
mov
add
add
jne
outsb
jae
insl
test
and
test
cmc
out
jo
ja
stc
adc
add
popf
mov
mov
jg
xchg
imul
inc
and
pop
ss
adc
xchg
pop
es
pmaxub
inc
je
ja
pop
mov
popa
test
add
movsl
testb
movsb
push
adc
add
pop
inc
imul
lcall
cwtl
add
lret
incb
push
jns
call
push
jb
mov
or
pop
sbb
fisttpll
idivl
idiv
adc
mov
sbb
lock
insb
fwait
iret
add
add
aad
out
mov
dec
dec
mov
mov
xor
scas
lea
xchg
and
mov
mov
sti
add
test
mov
xor
mov
lcall
pop
xchg
cld
pop
orb
or
xchg
in
scas
pop
fwait
cmp
lock
sbb
inc
loopne
cmp
sti
cmc
pop
insb
add
add
sub
cmpl
push
fcom
xor
in
or
xor
xchg
loop
pop
jb
or
cmp
imul
xchg
mov
inc
pop
sbb
daa
jl
outsb
mov
xchg
jp
imul
sbbb
mov
sbbl
sar
imul
int
daa
rcrb
jle
sbbb
data16
sub
jp
out
enter
fsubrs
cmc
call
and
cmp
into
stc
add
fisubrs
and
xchg
jg
mov
xor
pushf
call
addr16
mov
push
mov
xchg
add
add
sub
mov
push
jo
xchg
in
adc
inc
in
lret
sub
mov
mov
mov
gs
inc
stos
test
push
sub
enter
ret
adc
fldenv
add
mov
pushf
dec
ljmp
bound
pop
rcr
add
popf
and
add
add
push
mov
test
adc
pop
mov
lahf
and
lret
movsl
sti
inc
bound
or
adc
mov
cmp
sti
fwait
popf
into
mov
in
xchg
pop
sbb
mov
adc
es
push
mov
sub
test
das
sub
add
xchg
gs
xlat
pop
jb
or
mov
stos
enter
mov
push
inc
xchg
out
push
sahf
shlb
sahf
imul
addr16
aas
or
cmp
sub
daa
sbb
push
js
mov
sbb
lods
add
add
out
push
fs
dec
je
pop
sbb
jl
fistl
rcll
insl
dec
mov
pop
lahf
outsl
mov
iret
sub
movsl
dec
mov
ja
popf
mov
aaa
aas
movsb
int
pop
out
imul
pop
sbb
fnstsw
mov
call
cmp
rcl
mov
loopne
enter
es
add
push
pop
pushl
pop
and
mov
fdivs
jmp
jl
mov
cmp
outsl
inc
sahf
and
pop
out
and
icebp
cmp
xchg
pop
xchg
dec
push
sti
repz
pop
scas
sub
xlat
pop
dec
out
repnz
sbb
jge
inc
aam
jle
lock
jge
out
xchg
rcrl
push
ficoms
into
fistps
add
push
in
jmp
inc
sub
mov
std
pop
lea
add
dec
jecxz
xor
mov
fmul
insl
mov
add
aad
mov
dec
jb
push
mov
cmp
dec
lahf
dec
jo
decl
stc
bnd
adc
out
mov
addr16
insb
push
push
adc
xor
jge
cmp
inc
add
add
into
stos
test
fistl
popf
fldenv
dec
out
pop
pop
pusha
mov
or
xor
sbb
cmp
and
stos
push
aaa
test
iret
xor
add
in
fimuls
jp
and
test
xlat
aad
sub
pop
iret
xlat
push
repz
ret
mov
add
jg
lret
ret
icebp
push
scas
pop
stos
outsb
add
adc
insl
imul
sbb
xchg
fdiv
dec
and
test
leave
xlat
mov
roll
sbb
mov
shl
adc
pushf
out
adc
daa
clc
neg
pop
out
loope
xchg
and
jmp
mov
subb
add
lods
xlat
sub
push
leave
inc
test
xchg
fnsave
mov
lods
cmp
leave
mov
dec
fcmovu
jl
adcl
cmp
das
dec
movsb
scas
ljmp
cs
rcr
call
lods
adc
test
and
addr16
cld
xchg
fsubrs
insb
or
rcl
outsl
fidivrs
add
in
mov
jle
sub
lret
push
sahf
pop
or
pop
sbb
push
dec
add
cwtl
hlt
subl
inc
int3
incl
push
sub
or
inc
cltd
pop
cs
mov
push
fistpll
push
loope
in
jns
and
repnz
jecxz
lea
add
insb
fstpl
pop
jbe
xchg
sbb
gs
mov
jmp
cmp
xchg
pop
movzbl
dec
daa
inc
sub
loop
pop
dec
cwtl
out
pop
imul
out
cmp
mov
dec
fsubr
inc
sbb
add
jmp
cmpb
leave
lods
std
add
add
sbbb
adc
adc
aas
pop
pop
mov
es
cmp
shrl
and
mov
shrb
pop
rolb
lahf
imul
adc
int
cli
push
lret
jl
or
scas
push
inc
sti
hlt
add
fistpl
or
fadd
lods
mov
test
add
pop
test
pop
dec
or
fstpt
and
es
jns
cmc
mov
sahf
stos
jle
xor
jbe
adc
fcoml
mov
out
arpl
push
test
fbld
inc
mov
mov
lcall
lret
lods
xor
jb
lahf
insl
sub
sub
repz
in
xorb
insb
add
add
mov
dec
out
pop
fs
orb
imul
in
adc
dec
shll
or
mov
pop
test
or
test
mov
jo
lret
xor
inc
out
push
js
dec
mov
or
ljmp
jg
xorl
add
add
cmc
cmc
pop
adc
and
cltd
push
cmp
jl
hlt
push
mov
je
dec
lods
fwait
pop
les
cmc
push
add
rclb
mov
jmp
lock
dec
bound
cmp
subb
rcll
xchg
or
scas
mov
ljmp
test
dec
jae
add
cmp
sbb
add
mov
fsub
je
push
sahf
mov
cld
cmpsl
and
mov
data16
push
lods
fisttpll
cli
add
mov
ret
es
add
rorl
mov
jp
negb
mov
mov
adc
out
out
xor
mov
add
mov
or
xor
je
in
repz
movsb
cmp
mov
loopne
icebp
jnp
js
int3
sbb
lcall
pop
push
xchg
les
add
xchg
adc
xor
rorl
mov
add
dec
ret
jb
int
or
in
inc
mov
pop
xchg
inc
lods
ja
jno
pop
mov
sbb
mov
add
push
test
mov
insl
cmp
and
mov
inc
testb
sbb
and
imul
inc
into
jl
pop
out
jecxz
cmp
xor
fstpt
insl
in
int3
jbe
movsb
add
in
jp
sub
mov
xor
loop
arpl
or
mov
jmp
dec
dec
inc
das
add
add
cld
test
inc
sbb
push
fucomip
xchg
or
xchg
mov
xor
insl
repz
leave
dec
roll
imul
push
mov
inc
cmp
cmp
xor
enter
loope
ficomps
popf
cmp
push
lahf
xchg
loopne
fstpt
imul
cli
sub
test
or
mov
ja
push
outsl
jo
loopne
mov
dec
lret
lcall
sahf
bound
sahf
out
xchg
out
jmp
and
jb
leave
into
test
mov
jp
and
cltd
jb
fisttpll
pop
mov
out
jns
and
inc
dec
mov
push
mov
mov
xchg
std
nop
xchg
xlat
xor
add
mov
push
test
mov
test
add
push
aad
bound
sti
push
pop
xchg
ret
jmp
add
jmp
loope
and
xor
inc
je
add
aam
mov
in
xor
aam
out
rcll
out
cli
jbe
nop
call
push
mov
pop
inc
jno
jp
icebp
pusha
in
pop
xchg
add
add
out
into
or
push
ja
jmp
xchg
roll
inc
push
jo
push
stos
jb
lret
add
mov
js
testl
dec
psubusw
pop
push
aas
icebp
ss
or
les
addr16
xchg
stos
pop
fwait
xchg
fidivl
push
push
fisubl
or
ja
jecxz
adc
add
add
shlb
loopne
inc
sbb
fiadds
or
cmp
mov
in
pusha
sbb
and
je
cmpsb
xchg
fisttpll
xchg
jle
sub
jo
xor
sti
jle
lret
inc
sub
xor
pop
add
xor
shlb
icebp
xchg
outsb
cli
add
xchg
jg
add
add
popa
dec
xchg
stc
pop
iret
cmp
in
test
popf
mov
div
test
int3
shr
in
mov
jae
jo
and
xchg
inc
cld
leave
call
sbb
andl
push
mov
pop
cmp
daa
lcall
and
pop
mov
mov
dec
lock
jo
roll
add
mov
mov
cmp
jecxz
xchg
mov
xchg
mov
push
arpl
inc
and
imul
inc
adc
rolb
pop
mov
icebp
push
mov
shll
testb
sub
fidivrs
in
ds
xor
push
int
add
add
cld
mov
jecxz
push
hlt
das
cmpl
test
and
mov
cltd
scas
arpl
hlt
pop
xchg
fnstenv
dec
pop
dec
aas
push
xchg
divl
lods
dec
pop
mov
lret
cltd
dec
imul
sub
fisttpl
outsb
in
or
xor
lcall
add
aas
and
sbb
sbb
sar
data16
daa
inc
jne
es
and
inc
adc
add
mov
pop
leave
adc
sbb
mov
insl
rcr
andb
cmp
adc
add
test
pop
aam
outsl
stos
popl
mov
lods
repz
lret
push
dec
and
mov
inc
add
add
icebp
int3
loop
outsb
pop
cmp
mov
xchg
inc
dec
cmpsb
add
stc
or
popa
test
in
xchg
push
rcll
test
pop
cmpsl
mov
hlt
mov
jl
mov
fwait
cmp
pop
xor
sbb
imul
pop
pushf
aas
cmp
inc
outsb
out
mov
cmp
add
pop
lds
andb
jns
mov
xor
fstp
lock
and
push
lcall
iret
add
mov
adc
lea
dec
imul
xchg
adc
popa
add
pop
roll
sti
push
pop
inc
mov
dec
lods
xchg
leave
aad
jo
sbb
and
stos
sbb
mov
jbe
push
dec
pop
add
add
inc
adc
ja
cmp
xorb
movsb
cli
movsb
into
enter
and
iret
lea
xor
cwtl
and
mov
addl
into
sbb
ss
jmp
xlat
out
ljmp
push
pop
stos
add
xor
push
jl
test
mov
inc
add
add
lret
push
pop
add
std
xchg
js
pop
inc
push
mov
mov
fidivrl
aam
add
xchg
and
outsl
adc
ljmp
mov
xchg
repnz
pop
out
mov
xchg
notl
std
orl
test
outsl
jae
or
out
popa
fsubr
mov
mov
je
fs
pushf
test
les
add
add
hlt
ljmp
cmp
inc
outsl
add
xlat
add
mov
ja,pt
mov
stos
ja
lahf
mov
inc
fwait
mov
add
repz
orb
xor
jne
push
adc
push
ljmp
test
dec
xor
insb
fwait
or
adc
pop
adc
and
add
add
xchg
notb
out
test
fwait
mov
jle
vmaxss
cs
pop
ja
ficomps
das
sti
loop
jg
shll
inc
pop
adc
xchg
outsl
repnz
jae
sub
xor
push
popf
push
into
scas
sbb
out
and
cmp
pop
incb
negb
jecxz
mov
add
scas
sahf
test
mov
push
dec
xlat
jge
adc
cld
les
add
loop
dec
ss
rcl
sub
scas
add
and
sbb
mov
fdivrl
insb
cs
int
std
cmpsl
cmpsb
test
ds
pop
inc
out
pop
je
in
lcall
inc
push
sub
ss
adc
add
or
sbb
jecxz
sbb
imul
lret
inc
jg
pusha
mov
or
mov
cmpsb
movsl
movsl
ffreep
fiaddl
jns
sub
sub
fidivrl
jg
push
xor
sti
test
mov
jnp
cli
jbe
adc
rcll
add
and
cmp
cmp
add
add
push
fwait
jae
jb
push
in
push
xchg
cmc
pushf
cmpsb
xchg
adc
shrl
cmpb
out
inc
mov
sahf
or
out
movsl
lret
ds
pop
xor
pop
ret
in
inc
cmpl
push
xchg
xor
add
cltd
xchg
lret
aaa
fisttpll
pop
inc
mov
movsb
fstpt
stos
in
add
dec
xchg
add
in
push
leave
mov
gs
push
add
pop
sti
or
sbb
jmp
test
xlat
mov
jnp
clc
push
jp
adc
iret
test
sbb
js
shrb
lcall
mov
adc
lret
add
add
pop
daa
pop
std
push
cmc
fnstsw
jbe
lret
scas
imul
aaa
test
fld
das
sbb
mov
mov
pop
mov
and
pop
or
fwait
xchg
fs
mov
aam
fidivs
iret
aam
popa
push
cmp
inc
pop
ret
cmpsb
sub
lods
lret
add
cmpsl
mov
stos
xor
xchg
ljmp
stc
or
and
mov
cld
ret
loopne
xlat
push
inc
mov
loope
pop
ffree
and
add
and
or
scas
lea
lods
xor
scas
nop
das
jbe
cmp
xlat
jbe
ljmp
mov
aad
xchg
add
add
je
mov
lea
mov
xor
negb
pop
sbb
imul
roll
add
or
push
mov
aad
scas
push
test
adc
push
es
mov
stos
jo
fmull
xchg
mov
push
jp
push
stos
mov
push
jae
add
add
or
out
mov
dec
imulb
push
mov
xor
test
ljmp
jmp
jnp
mov
cld
cmpsb
out
mov
xchg
dec
mov
loope
pop
mov
mov
pop
xor
arpl
add
enterw
sbb
or
stos
inc
in
pop
pop
add
add
inc
insb
clc
ds
fcomi
scas
fstl
imul
mov
add
loop
pusha
or
push
xchg
jne
lret
push
mov
pop
mov
sbb
jns
in
inc
mov
icebp
jmp
add
in
orl
inc
test
insb
add
add
mov
push
jl
aas
sti
es
pop
fs
pop
pop
and
in
push
mov
rolb
xchg
sahf
xchg
or
dec
or
in
insl
ror
ss
push
jo
ja
scas
push
in
in
and
js
or
or
shrb
xor
js
sbb
add
dec
xor
push
mov
das
dec
fcompl
shl
rol
mov
mov
stos
ljmp
inc
aaa
movsb
mov
jnp
push
push
sub
jle
mov
loope
in
adc
fisttps
and
icebp
pushf
xchg
shll
data16
fidivrs
repz
outsb
shl
in
sub
mov
or
insl
add
add
mov
shrb
mov
loopne
test
xchg
mov
ja
push
dec
sbb
mov
mov
xchg
add
cwtl
add
push
push
fstpt
xchg
and
icebp
push
mov
pop
imul
aad
je
xor
and
popf
sub
jle
cmp
shlb
add
in
mov
cltd
or
sbb
enter
adc
shr
mov
mov
lret
inc
nop
inc
outsl
jae
hlt
in
push
add
mov
dec
jmp
aam
push
out
mov
sbb
push
xchg
dec
jbe
and
pop
and
sub
fxch
lods
xor
push
xor
enter
mov
je
add
loopne
add
or
dec
icebp
shll
or
mov
sub
jbe
ret
dec
xor
jnp
fucom
test
sbb
mov
inc
push
fldl
sub
cli
scas
xor
pop
out
pop
mov
movsb
push
xchg
mov
xor
sti
sub
insl
dec
xchg
mov
mov
mov
cmp
mov
add
push
in
cmp
insl
push
jb
xabort
pop
and
inc
jns
adc
cmp
pop
mov
xchg
dec
xchg
inc
ds
test
inc
jb
call
mov
inc
lret
bound
jno
dec
jne
test
pushf
aam
inc
nop
xor
add
cmp
shll
inc
pop
repz
add
filds
mov
xlat
add
daa
add
repz
add
repz
add
out
mov
out
or
xchg
add
repz
add
xchg
add
mov
popa
repz
mov
xchg
add
mov
add
add
outsl
repz
repz
add
repz
add
repz
mov
sub
repz
add
repz
int
xor
enter
repz
nop
lds
das
mov
add
mov
add
nop
lret
lahf
add
aam
pop
add
int3
add
add
add
cmpsb
add
mov
orb
add
xchg
add
popl
add
nop
add
sbb
nop
adc
add
add
outsl
adcb
test
lret
xchg
outsl
jb
nop
jb
mov
jb
xchg
gs
out
add
jnp
je
xchg
out
insb
add
add
xchg
out
insb
add
add
test
cmp
and
mulb
out
outsb
add
insb
add
divb
add
mulb
imulb
cmc
add
sub
push
outsl
add
push
addr16
arpl
test
inc
cmc
and
inc
mulb
add
out
and
mov
add
mov
add
mov
scas
fs
cmpsl
sahf
jne
scas
mov
add
mov
in
fisubs
jno
cmp
imul
xchg
call
cmpsb
jb
cmp
js
and
test
jns
push
hlt
test
xchg
cmpsl
imul
scas
pop
clc
push
gs
mov
scas
daa
mov
lods
jno
jae
sub
popa
mov
cmpsl
bound
push
in
add
sub
inc
incl
iret
inc
mov
insl
push
cmp
sub
add
movl
push
leave
add
adc
mov
repz
repz
lahf
lods
or
arpl
add
lahf
lret
mov
pop
mov
ret
call
outsl
enter
add
xchg
test
fld1
andl
ds
add
repz
pop
outsb
inc
jmp
addr16
push
cli
and
leave
jno
xchg
jmp
imul
gs
xor
pop
adc
mov
gs
ret
push
std
and
outsb
push
mov
add
repz
repz
repz
add
add
hlt
add
mov
add
movsl
add
movsl
add
cli
add
and
push
add
arpl
repz
inc
out
jae
push
out
add
ja
gs
jb
cmp
jbe
cmp
insb
add
out
gs
out
add
mov
cmp
pop
repnz
add
add
mov
inc
add
repnz
add
out
dec
add
cmp
outsb
out
cmp
icebp
icebp
push
add
call
ja
incl
es
call
icebp
pop
add
repnz
push
pusha
imul
dec
dec
mov
add
mov
mov
ljmp
clc
lods
jb
add
and
mov
jae
add
dec
enter
arpl
in
push
aaa
cwtl
outsl
fnstsw
mov
fidivrl
popf
push
cmp
add
sub
insb
mov
add
sub
popa
mov
add
add
mov
scas
jg
loope
mov
push
fdiv
arpl
mov
add
mov
cmc
cmp
mov
idivb
push
sbb
and
add
hlt
pop
mov
or
mov
add
fbld
add
fbstp
lret
testl
mov
out
mov
add
add
repz
mov
dec
or
repz
or
add
xchg
mov
adc
mov
cmp
mov
and
mov
sub
mov
xor
icebp
add
icebp
add
icebp
add
xchg
jmp
or
test
or
das
movsl
cmp
xor
pop
cmpsb
jo
repz
sub
std
mov
add
add
add
jecxz
and
fadds
fimull
cmpsb
add
xor
add
testb
testl
add
notl
notl
xor
inc
add
notb
cld
notb
testl
jno
inc
add
add
testl
imul
inc
add
add
lods
notl
testl
mov
divl
add
add
cmpsb
testl
notw
imull
add
outsb
add
popl
and
add
mov
add
mov
mov
pop
aaa
mov
jecxz
mov
jae
xchg
outsb
inc
ja
push
cmp
je
sbb
add
add
mov
add
mov
add
mov
add
mov
add
mov
mov
add
mov
add
push
add
add
add
mov
out
mov
or
stos
repz
mov
mov
add
add
lret
add
mov
add
pop
pause
add
addb
repz
imul
add
out
mov
movsl
ret
out
mov
sub
repz
add
repz
add
repz
hlt
cmp
repz
repz
add
repz
repz
mov
or
repz
add
repz
repz
repz
nop
sahf
add
repz
lcall
add
lds
roll
sahf
add
repz
movsb
add
pop
add
xchg
add
repz
mov
add
repz
repz
nop
mov
add
popf
add
jmp
add
mov
add
pop
add
mov
add
test
or
repz
dec
repz
xor
or
fwait
mull
inc
repz
cmp
insl
add
cmp
test
and
inc
repz
push
add
sub
add
repz
or
pop
add
rep
add
repnz
popa
add
repnz
push
rep
add
repz
dec
negl
inc
mull
popa
testl
add
add
imull
imull
lret
divl
notl
jl
outsb
add
or
add
mov
add
sub
gs
add
mov
add
jae
inc
add
add
add
inc
add
imul
insb
mov
add
add
add
je
gs
add
mov
imul
add
mov
add
mov
add
mov
add
mov
add
mov
sbb
repz
mov
les
shl
add
add
xrelease
insb
repz
insb
repz
lahf
repz
xchg
repz
add
add
xor
add
add
movl
pop
mov
jle
jno
mov
cs
jl
and
dec
add
repz
mov
out
mov
idivl
mov
loopne
cmc
daa
loopne
frstor
loopne
fnstcw
fmull
pop
loopne
mov
add
add
neg
pop
mov
fistps
loopne
pop
adc
rcr
pop
adc
inc
loopne
cmc
aaa
loopne
std
aaa
loopne
cmc
daa
loopne
frstor
sub
mov
pop
addb
add
jo
daa
mov
rorb
sbbl
add
mov
pusha
mov
add
add
xor
cld
fidivrs
push
mov
jle
or
xor
mov
xchg
out
add
cmpl
daa
testl
add
mov
mov
jbe
sbb
fdivrs
movsl
or
pusha
push
push
outsb
add
mov
testl
pop
in
xor
outsl
xor
outsl
cs
cmc
cmp
dec
add
add
andl
pop
mov
mov
xor
sub
xor
sub
xor
dec
mov
xor
mov
xor
pusha
mov
ljmp
decl
mov
pop
xlat
mov
insl
mov
mov
mov
cmpl
xchg
push
add
add
mov
add
test
mov
xchg
pop
add
insl
add
jle
shrb
jae
xchg
mov
fs
add
repz
sbb
jbe
inc
mov
out
sbb
add
arpl
xchg
jl
adc
repz
fwait
ljmp
mov
mov
add
mov
push
daa
sbb
pop
jbe
test
repz
push
daa
ret
cmp
out
push
xlat
in
sub
repz
mov
push
mov
xchg
mov
icebp
mov
inc
repz
add
jmp
bound
push
adc
mov
repz
repz
sub
aas
add
add
cli
out
mov
repz
adc
jmp
jb
cld
push
adc
mov
repz
repz
in
mov
and
call
add
call
mov
repz
bound
jnp
push
es
cli
add
pop
push
mov
andl
add
popa
pusha
lea
fistpll
mov
pop
fistpll
add
fisttpl
mov
add
add
test
mov
mov
mov
mov
lods
jno
add
out
add
outsb
fisttpl
enter
sbb
push
pusha
leave
push
add
repnz
ljmp
add
add
mov
add
mov
mov
cmp
mov
add
pop
adcl
mov
sahf
flds
mov
add
mov
pop
mov
push
or
lea
repnz
push
xchg
mov
rcll
mov
add
mov
in
add
add
std
jl
jne
push
mov
mov
jb
add
cmpsb
push
sbb
mov
mov
addr16
add
push
xchg
repnz
xchg
jbe
push
mov
out
dec
sbb
inc
xor
out
push
jnp
push
mov
out
mov
xor
cmp
cmp
cmp
add
and
jmp
lret
mov
add
arpl
repz
mov
ret
out
add
test
call
nop
jbe
adc
repz
inc
jbe
testb
push
aas
add
subb
and
adc
xor
pop
adc
push
add
add
add
push
repz
or
jmp
push
incl
aaa
leave
repz
pop
adcb
lock
repz
rcl
pop
sbb
pop
sbb
cmp
pop
add
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
in
cs
add
add
loope
xor
xor
pop
xor
pop
xor
pop
xor
cmp
incl
push
cli
add
test
jmp
add
xor
rcr
mov
jo
mov
testl
add
cs
movsl
pop
xor
add
xor
xor
xor
xor
add
xor
mov
xor
xor
xor
xor
xor
xor
mov
xor
or
xor
or
ljmp
mov
mov
std
scas
mov
xchg
cmovns
je
xchg
cmp
sub
inc
nop
test
add
add
add
mov
mov
adc
mov
sti
mov
lahf
mov
sarl
imul
mov
pop
mov
mov
pop
mov
pop
mov
mov
mov
push
lods
push
and
adc
outsb
pop
cmp
add
pusha
call
mov
subl
repz
jnp
add
cmp
add
repz
dec
rcrl
inc
in
sbb
xor
pop
std
daa
in
cmc
daa
in
std
pop
in
cmc
pop
in
fldl
in
aad
in
in
aad
in
mov
out
pop
mov
xlat
in
sbb
dec
sbb
add
cmp
pop
adc
daa
and
adc
sbb
leave
mov
test
mov
repz
push
mov
into
add
call
cmp
repz
movsl
pop
cs
movsl
pop
cs
xchg
pop
cs
xchg
pop
cs
in
cs
in
cs
aad
cs
aad
cs
in
cs
in
cs
add
add
aad
cs
in
cs
in
cs
aad
cs
aad
cs
movsl
dec
cs
movsl
dec
cs
xchg
dec
cs
xchg
dec
cs
gs
js
in
push
jbe
mov
jp
je
rol
add
xchg
inc
mov
jo
pusha
repz
adc
fmuls
add
add
lods
das
push
cld
lods
das
add
add
inc
sbb
das
inc
sbb
das
xor
stos
das
xor
stos
das
fs
das
fs
das
push
cmp
das
push
cmp
das
inc
pop
shrb
pop
shrb
pop
stos
das
xor
stos
das
in
lods
das
in
lods
das
aam
lods
das
aam
lods
das
les
jmp
jle
mov
push
jle
jecxz
cmpsb
cwtl
mov
push
mov
out
inc
or
add
jae
xchg
mov
jle
insb
outsb
push
mov
out
mov
pop
lods
mov
pop
lods
stos
mov
pop
lods
mov
mov
imull
jnp
xlat
shll
shrl
stos
arpl
mov
jae
mov
imul
stos
mov
mov
pop
ret
pop
ret
imull
add
jge
ret
add
push
loop
push
leave
and
call
sbb
call
sbb
repz
bound
int
sbb
int
sbb
int
sbb
int
stc
aaa
int
stc
daa
int
stc
daa
int
stc
int
dec
fxch
int3
dec
int3
pop
int3
pop
fincstp
int3
pop
mov
add
add
out
pop
mov
xor
pop
sbb
int3
pop
sbb
int3
dec
sbb
dec
add
incl
push
cli
add
clc
incb
and
lock
pusha
lea
jg
mov
or
lock
inc
lahf
in
adcl
in
loope
add
adc
incl
lahf
in
orl
push
add
add
jo
add
add
mov
xor
add
add
dec
push
mulb
out
std
add
rcrb
icebp
mov
rcr
sbb
jmp
jns
mov
fs
mov
jge
mov
das
aam
stos
xor
cmp
xor
pop
stos
xor
stos
das
add
add
mov
in
cmpxchg
loopne
add
add
shlb
iret
jnp
mov
icebp
movsb
adc
add
inc
add
stos
xor
stos
xor
pusha
stos
das
shl
pop
mov
mov
mov
sbb
push
out
out
mov
movsb
jl
add
mov
cmp
sub
or
repz
rol
sbb
sbb
mov
mov
test
repnz
out
mov
jp
ret
lcall
and
sub
push
mov
mov
jp
repz
jp
jne
or
repz
sbb
sbb
add
and
pop
sbb
xor
pop
std
daa
in
cmc
daa
in
std
mul
pop
jmp
mov
push
push
sbb
aas
loope
clc
leave
repz
fidivrs
push
sub
insl
or
repz
or
add
cs
add
movsl
arpl
repz
add
fwait
mov
add
hlt
add
cmc
insb
add
add
inc
hlt
arpl
in
out
arpl
gs
add
enter
mov
push
inc
jbe
data16
dec
sub
int3
jns
ljmp
push
and
push
push
push
push
hlt
add
out
push
add
repz
sub
addr16
repz
add
add
mov
hlt
outsb
add
hlt
arpl
pop
hlt
outsb
add
repz
add
repz
mov
outsl
mov
mov
jb
insb
nop
jae
outsl
mov
xor
push
icebp
test
sar
dec
test
push
mov
cltd
jno
int3
sar
sub
test
add
lahf
bound
or
add
nop
push
jno
fwait
jno
dec
lret
aaa
cwtl
push
push
xchg
insl
mov
popa
mov
add
add
push
add
repz
add
lcall
repz
and
out
mov
movsb
add
repz
repnz
add
repz
mov
and
out
repz
add
jmp
repz
add
repz
mov
repz
repz
repz
add
repz
mov
and
outsl
repz
repz
add
out
aas
repz
add
aam
pop
repz
pop
repz
repz
popl
add
repz
xchg
add
add
test
mov
jge
mov
dec
mov
add
repz
nop
lcall
nop
lahf
add
add
pop
add
mov
or
test
pop
mov
add
repz
mov
add
lahf
add
nop
add
pop
add
xchg
add
pop
icebp
arpl
add
add
mov
add
push
icebp
ja
sbb
pop
add
icebp
je
adc
popa
add
icebp
popa
add
icebp
jb
or
je
cld
lock
lock
mov
out
je
lcall
add
out
arpl
out
je
pushf
out
insl
add
lock
outsb
out
pop
add
lock
nop
out
jb
add
add
cld
out
add
lock
out
jae
mov
add
add
or
add
add
das
add
jns
imul
outsb
mov
imul
add
sbb
add
add
mov
add
stos
add
mov
add
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
repz
add
test
inc
repz
add
int
xor
repz
add
scas
add
jns
add
nop
add
repz
mov
out
add
add
ret
add
repz
repz
add
repz
repz
mov
and
fcomip
sub
shl
add
repz
sahf
repz
repz
repz
repz
cmpsb
add
mov
popl
add
popl
add
repz
add
popl
add
repz
popl
add
lcall
repz
lcall
nop
test
dec
mov
add
xchg
add
mov
add
repz
shl
add
divl
repnz
data16
hlt
add
add
add
hlt
jae
mov
add
cmc
ja
mov
add
ljmp
inc
sbb
gs
fs
push
addr16
fs
insl
pusha
jb
bound
jne
add
xor
jb
test
push
pushl
push
jb
test
gs
outsl
arpl
bound
xchg
arpl
cwtl
gs
xchg
jno
jb
add
mov
mov
dec
jle
lahf
fs
add
mov
nop
imul
jno
and
jae
sub
call
insl
sahf
jno
sub
mov
aaa
mov
mov
jbe
mov
nop
and
incl
push
dec
mov
push
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
aad
test
or
repz
mov
cmp
repz
repz
repz
add
cmc
add
roll
imul
out
mov
ja
mov
pop
add
repz
dec
dec
shl
xor
divl
pop
stc
out
mov
mov
add
add
lock
mov
pop
loope
inc
cltd
or
xchg
adcl
fldl
call
cmpl
mov
xchg
mov
add
movsb
pushf
jo
movsl
adcb
xchg
popf
add
movsb
pushf
jo
sbbb
cmc
jl
jo
jp
imul
mov
add
pusha
xorb
cwtl
inc
aam
add
sub
add
xor
inc
xchg
sub
insl
lea
jno
clc
mov
repz
in
inc
jl
xchg
arpl
nop
insl
inc
repz
mov
jo
cmpsb
nop
jbe
jl
pop
shrb
test
js
add
mov
fs
or
add
mov
arpl
add
add
pop
insl
mov
bound
lock
ret
xor
lock
out
arpl
xchg
inc
inc
add
add
testb
outsl
or
insb
xor
arpl
xchg
inc
outsl
call
xchg
insb
cmpsl
cwtl
je
mov
gs
mov
inc
popa
add
add
mov
gs
test
loopne
arpl
fsubrs
dec
out
add
addr16
outsb
lock
add
mov
insb
imul
add
mov
dec
mov
push
mov
inc
mov
add
add
mov
je
add
add
mov
jns
lea
dec
add
add
mov
pop
add
repz
add
repz
add
repz
repz
shl
xor
repz
add
repz
add
repz
repz
repz
repz
inc
repz
add
repz
repz
add
aam
jno
out
mov
stos
add
repz
add
repz
pop
repz
repz
add
add
dec
repz
sub
repz
mov
lret
repz
mov
repz
nop
mov
pop
mov
add
lcall
shrl
nop
dec
and
sti
push
fnstsw
nop
fists
jmp
mov
sub
add
add
clc
pop
cmpl
pop
mov
mov
jbe
popw
outsb
xchg
dec
add
cmpw
pusha
add
inc
test
push
inc
sbb
add
lahf
mov
pop
mov
mov
int
add
or
mov
outsl
fwait
xchg
scas
mov
lea
add
mov
add
mov
mov
loopne,pt
imul
add
cmp
xor
xchg
jne
mov
ja
push
pop
test
bound
test
inc
sbb
stc
mulb
hlt
lret
mov
fcomi
mov
add
mov
sbb
mov
sbb
mov
daa
cwtl
dec
and
add
add
popl
add
imul
adc
in
ds
or
and
or
and
push
add
mov
stos
mov
mov
lods
lods
sbb
add
xchg
stc
int3
cltd
mov
insl
iret
lcall
mov
mov
es
jbe
xor
mov
xchg
adcb
add
div
inc
test
inc
xor
mov
pop
cli
rep
sbb
loop
pop
shl
xor
xchg
inc
push
movsb
repz
sbb
out
mov
or
add
cwtl
repz
pop
inc
scas
cs
repz
xchg
out
out
add
mov
mov
push
add
add
mov
lahf
cmp
out
sbb
xchg
mov
jp
aaa
sbb
xchg
jmp
push
or
add
repz
mov
add
cwtl
jns
fists
add
xor
inc
das
or
sarb
hlt
mov
mov
xchg
and
movsb
dec
add
fwait
insb
or
jo
add
add
jne
js
cltd
cmpl
xchg
mov
jg
scas
mov
push
loopne
repz
dec
push
xlat
rorl
arpl
jae
nop
fbld
iret
ret
std
ss
sub
shlb
ljmp
jl
jle
pusha
loope
jae
jmp
cmp
nop
pusha
insb
xchg
movsb
push
js
outsb
jge
lcall
add
add
sbb
out
or
out
or
jmp
cld
mov
lock
mov
cli
or
out
add
add
add
add
mov
bound
inc
dec
imul
jae
sub
aam
fcmovb
loop
ret
shl
rclb
aad
sbb
add
pop
pop
mov
add
int3
pop
push
inc
mov
je
mov
mov
mov
jnp
mov
mov
push
test
add
bound
loopne
add
and
mov
push
fdivrl
repnz
out
and
repnz
mull
adc
add
add
xchg
add
add
mov
jp
xchg
jnp
loop
jae
mov
outsl
jns
andb
sarb
ret
add
repz
sub
adc
xchg
add
imul
daa
gs
cmp
fdivrl
mov
nop
sbb
jnp
popa
jae
ljmp
scas
or
or
add
add
add
gs
pop
mov
cmpsb
inc
stos
pop
mov
push
lods
dec
stos
push
repz
xchg
fisttps
jne
sbb
and
adc
xchg
in
add
repz
sahf
stc
adc
out
add
in
in
sbb
jmp
add
pusha
mov
pop
jne
pop
adc
test
jo
jmp
inc
xor
movsb
add
add
into
xor
stos
shll
fsubl
testb
nop
lea
cmpsb
jle
outsl
jp
jbe
xchg
arpl
cltd
jle
add
inc
inc
cli
movsb
aas
inc
idivb
inc
repz
add
test
xor
jbe
xor
gs
add
xchg
rcl
xor
int
cmp
mov
add
or
mov
pop
popf
test
inc
sbb
iret
jmp
out
inc
xor
pushl
notb
push
dec
pop
pop
out
dec
pop
cmp
push
inc
mov
add
add
fwait
push
std
pop
mov
or
add
pop
jp
xor
or
add
orl
add
mov
lret
push
iret
inc
inc
push
leave
or
add
push
dec
call
mov
inc
fimuls
add
mov
out
push
aam
inc
push
out
inc
pop
add
mov
push
mov
inc
repz
lahf
aaa
imul
xor
push
cmp
adc
repz
xlat
iret
adc
sar
cmp
add
add
scas
sbb
ror
xor
rcrl
mov
aad
movsb
outsl
stc
nop
mov
sbb
loope
mov
sub
mov
dec
and
add
repz
pusha
push
in
mov
incl
je
dec
cmpb
mov
cmp
jmp
sub
nop
dec
add
add
sub
std
fstpt
sub
sbb
loop
ficoml
cmc
mov
icebp
or
repz
pushf
add
dec
mov
add
je
pop
das
dec
mov
pop
daa
inc
mov
and
add
ljmp
loop
fstpl
cmpsb
repz
fsub
add
int
inc
xor
repz
add
add
and
sub
fdivs
cmp
fidivrl
fcmovnb
in
add
dec
pop
xchg
mov
test
add
pop
push
jno
add
mov
sahf
ja
lods
cwtl
dec
inc
mulb
pop
push
add
jmp
push
enter
cmp
pop
imul
xchg
jb
gs
add
mov
ret
and
filds
add
jb
ror
je
pushl
lock
loop
push
mov
and
imul
cmp
data16
sub
mov
sub
sbb
stc
or
xchg
std
adc
daa
pop
adc
daa
cmp
add
mov
add
mov
add
mov
pusha
add
add
mov
bound
imul
pop
jns
or
add
add
mov
jno
dec
push
push
mov
inc
repz
add
repz
add
call
rcl
lcall
clc
mov
hlt
out
cwtl
cmc
out
adc
or
loopne
sti
sub
add
add
xor
shll
mov
add
mov
inc
dec
scas
pushf
pop
mov
mov
mov
jmp
scas
mov
mov
push
repz
mov
mov
les
xor
sub
mov
repz
sahf
filds
repnz
fisttps
sbb
mov
or
scas
xor
std
test
dec
movsl
mov
pop
mov
add
add
in
out
div
jmp
sbb
cmp
inc
mov
adc
adc
push
jmp
les
fdivl
ljmp
cmp
add
inc
jb
rolb
sbb
inc
cmpsb
pop
inc
daa
xor
add
push
subl
cmpsb
push
pop
daa
lahf
inc
add
add
mov
jp
and
lea
xor
shll
adc
daa
cmc
cmc
add
and
sub
cmc
add
fsubrp
or
fdivrp
sbb
icebp
lock
push
sub
xor
test
cmp
shlb
add
cmp
xchg
int3
call
pop
or
pusha
jecxz
or
out
sbb
add
add
mov
rol
loope
rorl
add
in
ds
mov
sbb
add
mov
add
mov
add
mov
push
sbb
xchg
mov
aas
pushf
sar
mul
mov
pop
push
push
int3
add
mov
pop
insb
inc
jmp
add
and
gs
add
add
push
xchg
mov
repnz
jge
pop
lahf
cltd
mov
jl
mov
repz
mov
dec
push
ss
call
mov
dec
repz
leave
jge
add
out
mov
xor
jp
insb
cltd
cmpsl
out
mov
scas
mov
and
xchg
int3
add
mov
loopne
mov
jmp
xor
add
sub
xlat
call
add
repz
xchg
loop
cld
inc
cmc
call
cld
cwtl
fdivl
outsb
xor
popa
and
add
xor
sbb
cmp
idiv
aaa
push
xor
xlat
xor
idiv
enter
enter
iret
jae
adc
pushf
fmull
out
mov
in
lock
add
add
repz
mov
lds
jmp
test
sbb
jmp
mov
or
repz
imul
sbb
pop
mov
lods
add
jl
sub
hlt
pop
add
add
jmp
repnz
or
mov
xlat
enter
incl
xor
add
pop
lret
add
pop
fldenv
ss
xor
nop
flds
ss
fildl
inc
adc
mulb
iret
xor
cmc
icebp
add
pop
ss
in
add
adc
push
lock
sbb
jmp
str
or
ljmp
add
scas
xchg
jle
lret
outsb
mov
add
mov
sbb
add
enter
lret
pop
addl
or
aaa
outsb
inc
lea
add
mov
jns
sub
push
int3
sub
insl
je
add
inc
ret
xchg
in
dec
xchg
in
mov
dec
pop
mov
sbb
push
sbb
push
cmc
xchg
cmp
xlat
les
add
mov
add
add
mov
std
adc
repz
in
test
pop
mov
addb
loop
adc
add
jl
sbb
mov
sbb
out
mov
or
sbb
pushf
mull
movsb
loop
call
xchg
out
push
add
xor
stos
ret
add
add
mov
sbb
iret
inc
dec
mov
rcrb
pushf
mov
daa
insb
js
adc
test
rclb
movsb
sbb
repz
or
pusha
sbb
jnp
imul
push
sbb
shrb
repz
or
loop
pop
int
cmp
stc
and
fstps
pop
repz
or
add
ja
cltd
adc
mov
sub
aam
ljmp
in
lods
adc
cmp
xchg
sub
ret
add
imul
push
pusha
xor
add
and
testb
outsl
lock
push
movsl
testb
mov
sbb
push
and
fs
std
pushl
sub
xor
add
or
dec
and
outsb
and
pop
add
pop
push
icebp
push
imul
add
insb
repz
sbb
orl
add
out
push
or
call
sbb
call
negl
add
jmp
add
negb
adc
push
or
std
add
shl
adc
and
adcb
cltd
mov
add
adc
mov
xchg
xchg
push
jp
or
jg
bound
xchg
inc
orl
pop
or
loop
cs
cmp
add
in
sub
out
repnz
mov
loope
mov
repnz
xor
sahf
lods
and
inc
jns
xor
jbe
lret
add
add
push
hlt
std
jae
repz
clc
ret
repz
mov
in
jp
mov
daa
bound
pop
xor
add
enter
add
mov
in
push
xchg
repnz
clc
jg
divl
sub
jmp
adc
adc
jle,pn
ficomps
jne
push
sub
cmc
sub
call
add
sbb
je
cmp
repz
inc
dec
add
xor
adc
add
ja
pop
jns
fs
mov
adcl
into
rcr
cmp
iret
repnz
stos
movsl
xlat
push
insb
out
inc
pop
scas
mov
pop
fsub
dec
push
lock
in
shr
repz
repz
cltd
mov
add
add
das
fsubrl
cmp
cli
xchg
mov
fwait
add
shlb
mov
xchg
popf
push
jne
xorb
fmulp
insl
mov
dec
mul
and
out
notb
out
sbb
nop
movsl
lahf
pop
testl
mov
lea
movsl
or
mov
add
stc
mov
lea
out
mov
xlat
jnp
adc
mov
jo
loop
mov
xchg
sbb
test
mov
imul
cmp
popf
ljmp
mov
repnz
jmp
and
fildll
mov
mov
popf
leave
or
add
add
iret
lcall
aad
sub
data16
adc
mov
jmp
and
scas
outsl
pop
shl
cs
mov
xor
fmull
fildl
adc
add
shl
or
sbb
mov
cld
dec
nop
repz
jb
dec
push
insl
test
pop
cmp
cs
or
add
add
je
xor
mov
inc
sub
dec
fs
ds
cmp
push
dec
into
repnz
loop
mov
jp
inc
cltd
jge
imul
scas
cs
mov
add
nop
std
stos
push
jl
jns
xchg
mov
push
add
add
mov
cltd
mov
fst
ror
repz
jno
adcb
test
std
push
scas
mov
stc
fwait
out
dec
repz
mov
jle
mov
jnp
jmp
pop
sub
xchg
pop
mov
adc
jnp
nop
sub
in
push
repz
cmpsl
scas
jb
add
repz
sbb
loopne
mull
mov
xchg
movsl
lods
jp
stos
mov
jno
mov
lahf
je
out
mov
inc
inc
imul
stos
mov
jecxz
jmp
mov
je
decl
jne
or
std
mov
push
aas
xor
adc
ja
or
cmp
mov
add
add
add
push
out
add
or
xchg
cmc
xchg
mov
testb
loope
test
mov
je
nop
mov
add
mov
mov
faddl
add
imul
cs
mov
dec
bound
inc
pusha
je
inc
jno
push
cmp
adc
jb
or
dec
dec
sbb
gs
add
push
sub
inc
inc
push
or
dec
sub
cmpsl
cli
pusha
pop
faddl
add
aam
fs
push
fildl
add
imul
dec
imul
repz
push
pop
xchg
push
test
mov
cmp
dec
jp
lret
inc
iret
dec
call
addb
xorb
add
xchg
stos
add
repz
fdivr
repz
bound
insb
fs
adc
sbb
push
and
inc
push
outsl
inc
pop
adc
sbb
cmp
dec
xor
scas
fs
cmp
cltd
xor
mov
cwtl
or
rclb
cld
add
test
or
lcall
add
or
inc
out
push
mov
test
cmp
sbb
mov
out
stos
mov
repz
repz
imul
enter
mov
addr16
mov
std
jo
jno
xchg
and
scas
xor
lock
loop
out
lcall
popa
jmp
ret
add
add
arpl
push
push
aaa
cmp
xor
dec
pop
es
or
inc
push
std
sbb
push
sbb
sub
jbe
dec
jnp
out
sub
jmp
jb
pop
push
addr16
push
fs
inc
or
jge
dec
cmp
inc
jg
stos
jp,pt
mov
in
push
xchg
dec
jnp
imul
pop
outsl
jg
cmp
imul
std
aas
das
sub
movsb
out
dec
add
cmp
in
add
mov
fists
orb
rcll
add
mov
dec
pop
les
add
xchg
sahf
loopne
xchg
sahf
aas
imul
cwtd
loopne
mov
cmpsb
movsl
push
push
in
in
inc
mov
mov
pusha
out
lods
fld
jl
lret
or
mov
repz
mov
fs
test
dec
sarl
jmp
jno
jbe
sub
ret
xchg
or
inc
fldenv
add
int3
sub
add
and
pop
sbb
arpl
jmp
aas
pop
cmp
xor
jecxz
outsl
or
or
jmp
jns
and
add
add
rep
test
jbe
jp
mov
add
shll
push
mov
shrl
leave
rclb
movsl
loop
or
add
add
out
cmpsb
push
popa
cli
scas
push
adc
imul
fisubl
jns
lock
mov
or
popf
leave
es
mov
das
imul
pop
lock
or
sahf
inc
push
out
cmp
sub
out
movdqa
pop
popa
shll
bound
xchg
add
ret
cmp
jo
inc
pop
add
add
inc
clc
add
dec
pop
inc
testl
outsb
cmp
inc
arpl
bound
mov
sbb
fstl
cmp
pop
sbb
or
and
fsub
sti
and
cmc
out
sbb
lods
ror
iret
mov
call
mov
lock
ror
ljmp
int3
call
in
add
add
stc
call
in
push
dec
jge
push
pop
insl
daa
sbb
loope
push
jmp
lret
int
dec
jne
test
inc
push
mov
test
add
cmp
cmp
std
add
repnz
pop
call
jmp
dec
jg
incb
add
imulb
in
add
mov
jg
clc
nop
mov
scas
shl
push
mov
repz
dec
lods
mov
lret
imul
test
insb
add
push
xlat
outsl
int3
cmp
loope
loope
xor
mov
pop
call
lock
add
mov
cmpsb
inc
cwtl
repnz
cmp
mov
dec
mov
mov
push
push
jb
dec
pop
ja
dec
arpl
dec
push
push
outsl
push
add
repz
cs
jbe
sub
repz
mov
add
mov
sbb
mov
push
jmp
lret
lea
roll
lret
add
add
repz
xchg
adc
add
stc
jbe
movsl
sub
int
adc
popa
repz
ret
sub
es
mov
inc
add
arpl
sbb
dec
pop
and
push
xor
add
jno
push
jae,pt
jne
jo
jnp
insl
and
ja
fdivp
add
dec
addr16
xchg
add
add
xor
cwtl
inc
popa
aad
sub
enter
pushf
js
test
ss
pushw
xor
cmp
jbe
pop
cmp
test
das
sbb
ds
pop
sbb
and
xor
xor
inc
aas
xor
push
lock
sub
sbb
testl
sub
hlt
add
dec
add
inc
add
add
mov
cli
sbb
int
adc
imulb
push
cltd
xlat
add
or
adc
mov
lods
outsl
fucomp
scas
jno
scas
mov
pop
arpl
cmpsb
pop
jge
pushl
sbb
sub
add
mov
test
pop
xchg
mov
cmp
add
push
insl
add
add
mov
inc
push
mov
sbb
mov
and
add
popa
sbb
and
pop
fsubs
or
ja
pop
sti
jge
aam
dec
sub
cmp
imul
xor
fadds
fwait
add
add
icebp
add
ljmp
xchg
add
add
sub
nop
out
xchg
pop
add
xor
jnp
fsubrp
cmp
std
aad
notb
jmp
mov
cmpsb
sub
inc
jmp
jo
cmp
repz
repz
mov
add
push
cmp
nop
push
es
pop
inc
inc
push
cs
add
repz
fdivp
inc
mov
add
loope
ds
jmp
cmp
shl
jmp
mov
or
repz
shlb
pop
jmp
cltd
inc
jbe
and
and
add
dec
inc
jns
outsl
push
js
cmc
int
push
hlt
in
push
in
std
jmp
nop
nop
fs
add
add
fiaddl
and
mov
out
add
je
imul
xor
les
or
dec
ljmp
inc
jb,pn
test
pop
push
mov
dec
sub
pop
push
cli
sub
xchg
inc
jbe
xor
dec
insl
jbe
testl
arpl
ret
mov
scas
add
mov
add
and
mov
inc
dec
inc
adc
test
out
inc
mov
negb
sub
add
mov
ds
aaa
repz
push
or
mov
addr16
jb
in
daa
jae
out
add
push
cmp
add
mov
push
sub
add
add
mov
enter
loope
mov
test
scas
push
js
mov
dec
sbbl
call
ret
xor
jbe
int3
fildl
into
xchg
pop
lock
pop
inc
arpl
cwtl
add
add
xor
rcrb
ljmp
mov
adc
xor
addb
dec
cltd
cmc
out
jnp
pop
push
add
add
rcr
aam
ret
into
fsubr
ds
mov
mov
cmp
add
inc
aaa
mov
jp
ret
inc
push
push
ret
prefetch
mov
or
je
rcr
or
mov
or
je
mov
add
adc
push
rorl
js
inc
cld
repz
ss
add
cwtl
fdivr
std
imul
aam
incb
mov
flds
mov
std
cld
inc
add
jmp
add
inc
ja
add
roll
push
push
cmpsl
mov
ljmp
lods
xor
mov
repz
mov
mov
push
incl
adc
add
add
nop
push
push
push
mov
ret
adc
mov
filds
ret
dec
push
cmp
gs
std
adc
imulb
inc
hlt
xor
push
inc
lock
pop
jl
add
inc
cwtl
leave
push
jecxz
push
adc
shl
aas
mov
push
cld
sbb
lods
adc
add
pop
or
leave
iret
ja
jmp
fldl2e
push
pop
stc
lods
push
sbb
mov
lret
add
add
lret
add
or
add
pushf
divb
lcall
popa
int
cmpsl
div
push
inc
sbb
movsb
cld
leave
adc
mov
push
sti
add
leave
adc
repz
inc
mov
jno
fs
dec
lret
arpl
filds
add
add
inc
aam
loop
adc
add
imulb
mov
js
sti
inc
mov
push
lret
btr
fdiv
mov
insb
ret
pop
out
movsl
inc
jecxz
cmp
inc
mov
and
sub
pop
loopne
inc
fstpt
xor
repz
inc
fwait
xor
jmp
loope
mov
add
repz
fs
popa
pop
iret
adc
add
ja
mov
inc
std
inc
popa
call
fsubr
mov
push
ljmp
cmp
add
pop
push
push
xchg
push
lret
lock
nop
repz
je
and
aas
sahf
dec
sbb
aad
sbb
dec
repz
addr16
cltd
aad
or
add
add
xor
xchg
mov
shll
mov
jmp
hlt
mov
push
push
pop
jne
popf
mov
movsl
je
mov
aas
mov
pop
jne
sbb
lock
adc
stos
add
in
inc
cld
aad
test
subb
add
or
ret
sbb
addl
push
pop
test
shrb
inc
push
mov
clc
add
add
in
scas
push
mov
outsl
jmp
jne
sarb
push
aaa
hlt
sbb
std
push
or
mov
imul
jle
mov
call
jl
sbb
cmc
addr16
movsl
inc
add
mov
push
add
add
dec
loop
xchg
mov
add
sbb
push
jbe
pop
sbb
leave
outsl
lret
mov
add
dec
mov
inc
in
arpl
mov
inc
in
pop
cmp
sbb
xchg
push
inc
sbb
movsb
cmp
add
aaa
pop
mov
stos
push
in
add
enter
push
orl
and
cmc
out
add
add
enter
jmp
lock
mov
push
clc
mov
in
add
and
dec
xor
inc
and
dec
jnp
ret
bound
jle
js
fistpl
jp
lret
cld
pop
sarb
cld
loop
in
jp
sub
xor
push
clc
push
stc
push
add
mov
xchg
or
cmpsb
lret
jb
add
cltd
daa
cmp
jnp
push
notl
mov
sbb
cld
test
sub
mov
sahf
rclb
or
jae
cmc
mov
dec
add
insb
dec
dec
sbb
mov
sub
xchg
add
push
pop
jecxz
inc
rcl
std
bound
loope
rorb
fs
push
fimuls
push
add
add
pop
mov
add
mov
dec
lcall
push
push
stos
and
je
je
hlt
add
dec
xor
push
call
das
stc
sbb
hlt
add
into
add
pop
xor
mov
out
xor
mov
dec
jp
pop
sti
stc
jne
jecxz
cmp
subl
add
add
mov
or
mov
dec
dec
and
add
push
push
push
loope
mov
inc
jo
xor
roll
and
cmp
mov
inc
mov
ret
push
dec
and
mov
lret
cmp
jge
sbb
and
ds
mov
jae
enter
out
mov
add
cmp
inc
push
mov
xchg
xchg
dec
test
and
push
cli
dec
add
xchg
les
pop
pop
sbb
add
hlt
arpl
jg
cmpsl
mov
mov
push
mov
jp
popa
iret
sub
or
and
mov
cmp
mov
add
repz
add
add
cmpb
xchg
and
daa
cmp
nop
adc
ret
inc
and
add
mov
jmp
mov
int
ret
mov
into
mov
mov
clc
jo
xchg
fiaddl
jbe
out
into
int3
push
adc
add
sbb
sbb
and
add
add
inc
into
push
aad
mov
cld
jbe
popf
into
int3
push
adc
add
or
mov
sbb
std
sbb
adc
dec
cmp
add
bound
int3
jae
aad
push
flds
stc
jmp
adc
std
jmp
jle
add
lock
mov
add
mov
jle
push
mov
push
std
mov
or
lea
cmpb
push
punpckhbw
push
repnz
mov
jne
jge
test
lock
out
mov
cmc
dec
testb
test
cwtl
and
aaa
lock
jne
cwtl
sbb
daa
lock
call
add
leave
add
add
sahf
addl
mov
movsl
dec
and
inc
mov
hlt
fidivrl
jb
pop
dec
fimull
cmp
sbb
mov
cld
repnz
mov
push
mov
mov
push
imul
add
fldt
add
add
inc
or
add
pop
rorl
add
sub
mov
sbb
add
and
inc
inc
cld
pop
aad
push
sbb
mov
cli
mov
fiadds
pop
xor
mov
repz
mov
je
mov
mov
cli
push
ret
and
mov
aas
in
mov
rclb
sbb
mov
bsf
add
jmp
mov
bound
js
test
jle
hlt
ret
ljmp
jo
cmp
js
test
dec
push
fbstp
mov
mov
xor
xorl
outsb
mov
lock
xrelease
test
mov
mov
repnz
xchg
incl
add
mov
and
idivl
and
jle
pop
inc
lret
call
push
stc
std
sbb
jle
cmp
ja
inc
add
pop
les
jae
jp
jmp
add
mov
arpl
lcall
sbb
push
add
punpckhbw
scas
dec
mov
mov
and
xchg
divb
addl
int3
in
jl
pushl
hlt
mov
pop
imul
in
ret
adc
add
xchg
sbb
add
push
mov
pop
mov
xchg
in
ljmp
xor
fucomp
add
fstl
add
add
mov
testb
ljmp
mov
add
sub
mov
mov
push
xrelease
fmuls
cmp
push
or
pop
lods
mov
mov
push
or
mov
call
cmp
xchg
push
or
call
add
out
pop
call
add
dec
out
leave
dec
call
mov
push
hlt
out
jecxz
aam
sub
add
xchg
sub
jle
ss
mov
xchg
decb
pop
jp
push
pop
push
xchg
jmp
out
and
mov
jmp
sub
add
add
cmpsl
add
add
mov
sbb
inc
loopne
ret
sbb
out
sbb
xor
add
jo
jo
add
shufps
daa
inc
popw
jnp
push
fimuls
call
jo
rcll
or
sub
xlat
add
loopne
ret
xchg
pop
push
xchg
call
add
add
fidivl
in
xchg
add
jp
aad
es
cmp
pop
lahf
pop
roll
call
dec
xor
jnp
daa
mov
pop
add
mov
enter
mov
jne
clc
or
lret
outsb
cmc
add
mov
movsb
popl
add
insl
enter
add
add
mov
aad
cmp
add
insb
xor
cmp
jne
clc
jge
sbb
in
mov
int3
test
push
push
loop
or
push
ret
adc
cmp
pop
lahf
mov
xchg
push
pop
ja
std
jne
js
hlt
mov
fcompl
xchg
lods
ss
add
add
add
dec
fisubrl
rcrl
mov
add
add
add
pop
pop
lods
mov
cmp
rcl
movsl
sbb
mov
or
push
in
fmuls
cmp
mov
inc
dec
int3
mov
test
push
out
cli
push
add
mov
into
jle
add
add
mov
sbb
imul
mov
sbb
imul
mov
cld
stos
imul
mov
cld
mov
mov
fdivrl
mov
mov
xchg
repz
mov
jne
jnp
repz
mov
ret
xchg
mov
add
mov
jg
hlt
out
adc
mov
ret
inc
jmp
cmp
add
adc
out
pop
mov
jae
mov
add
subl
mov
cmc
cmp
ret
or
or
jmp
add
mov
call
pop
mov
enter
jle
repz
mov
insb
fdivrs
aaa
inc
das
popa
add
cmp
add
hlt
add
movsl
inc
xor
adc
aas
stc
adc
aaa
std
bound
outsb
cmp
jge
repz
or
push
add
call
sub
icebp
jmp
jo
lock
add
add
outsb
inc
cld
fsubrp
mov
and
xchg
loope
add
mov
je
mov
add
repnz
jmp
jo
hlt
test
dec
lcall
mov
cmc
hlt
add
repnz
cmc
mov
test
idivl
pop
inc
cmc
stc
inc
icebp
into
mov
jge
insl
push
psllw
subw
add
dec
lret
cmp
xorl
add
mov
jl
or
add
je
bound
lahf
mov
jle
ror
out
ficoml
add
cmpsl
mov
add
or
xor
cwtl
add
push
add
push
mov
out
fidivs
add
xchg
or
adc
mov
add
js
add
cmp
mov
push
mov
add
add
xchg
movsb
fldt
add
je
je
cmp
push
mov
jge
xchg
or
push
cmp
stos
sbb
jmp
stos
push
in
add
inc
dec
push
mov
lods
mov
in
xchg
mov
jmp
cld
bound
mov
int
out
pop
sarb
add
inc
add
push
ficoms
jg
je
push
fdivrp
jno
pop
or
js
push
stos
pop
sarl
idiv
call
or
mov
cld
mov
xchg
call
jo
add
test
repz
mov
std
jmp
cmpl
jmp
add
add
or
fs
mov
mov
add
dec
add
in
inc
hlt
data16
jne
fisttps
push
jb
hlt
jne
xchg
adc
sti
mov
int
fwait
add
xchg
xor
movsl
daa
push
lea
push
add
sbb
shrb
adc
xchg
mov
add
cmp
gs
and
mov
rolb
repz
add
clc
cmp
add
cmc
and
mov
sub
add
add
mov
push
pop
adc
mov
ret
add
mov
adc
add
xchg
enter
mov
orl
push
incl
add
mov
shlb
lret
add
idivb
jle
lret
push
fisubrl
enter
cmp
test
lret
mov
inc
loopne,pt
std
aam
int3
aam
mov
lret
push
repz
jge
outsb
mov
cmp
and
aam
cwtl
daa
or
out
pop
or
add
xchg
outsb
cmp
pop
outsb
xor
cmp
inc
mov
and
fs
lcall
cs
lock
xor
mov
repz
mov
sti
insb
ret
xchg
jo
add
out
jle
stos
mov
out
mov
xchg
hlt
out
pop
xor
inc
xor
xchg
lret
and
es
add
ds
test
mov
jmp
ret
imul
loop
outsl
int
std
jmp
dec
iret
mov
out
xchg
sti
pop
in
jo
jmp
sub
inc
loope
xor
sti
inc
insl
or
fadds
ljmp
mov
pop
dec
inc
and
mov
push
cmc
add
pop
push
std
je
mov
add
cmc
add
int
bound
mov
in
call
jo
jno
and
add
in
add
mov
je
clc
popf
push
adc
mov
push
lea
fidivl
mov
add
dec
clc
mov
mov
sub
xorl
or
incl
add
or
dec
jmp
inc
fsubrl
nop
or
sbb
and
mov
push
lcall
jp
hlt
push
cli
dec
sti
pop
stc
mov
jp
cmp
push
or
mov
pop
cmp
push
sbb
nop
mov
push
test
cld
pop
ret
push
cmp
xor
incl
add
xor
lock
je
adcl
ret
mov
add
mov
inc
mov
add
lock
fcomi
iret
jnp
xor
jp
push
pop
pop
loope
add
mov
add
push
dec
jmp
sti
push
std
rcpps
add
scas
fwait
pop
pusha
call
add
jne
lods
sbb
xor
repnz
mov
add
mov
mov
fs
push
mov
lods
jo
cld
or
call
jg
inc
xchg
lods
pop
sbb
jmp
sarb
add
mov
aam
repz
filds
jmp
add
add
pop
lret
push
shll
iret
in
dec
repz
push
mov
fstpl
cltd
dec
outsl
jo
divl
mov
mov
out
push
sbb
sbb
insb
sarb
je
dec
lret
push
fldcw
mov
imul
cmpsb
aaa
and
loop
dec
cmp
and
fs
aas
cmp
lahf
das
pop
lea
add
ret
sbb
repnz
rorb
insb
cld
hlt
call
imul
add
cld
hlt
call
mov
add
lock
ret
xor
addb
std
pushl
mov
mov
xor
push
push
and
mov
add
xchg
mov
call
ss
psubsw
std
decl
jle
fildll
or
mov
add
cmpsb
mov
call
ret
je
leave
dec
jl
cmp
popf
inc
add
and
sti
sti
std
cltd
inc
repnz
sub
jecxz
cltd
jmp
pushf
fsubrs
test
cmpsl
pop
iret
push
jle
add
add
mov
test
dec
push
es
dec
mov
jle
clc
lds
jbe
add
sbb
jbe
insb
aas
adc
sub
push
ret
dec
jns
mov
ror
fildl
mov
jg
sbb
out
push
lret
xor
mov
sbb
push
dec
test
pop
data16
insb
stc
mov
jge
lret
add
add
pop
xor
jg
xor
in
inc
mov
jb
shrb
jle
fsubrl
mov
jge
in
test
push
icebp
int
mov
divb
sbb
xor
das
popa
ret
pusha
jae
jo
mov
jle
xchg
les
stos
fidivrl
push
aas
push
insb
push
mov
orl
add
daa
int
mov
jmp
popl
add
fwait
adc
mov
aaa
cmc
insb
lcall
pusha
mov
push
imul
and
dec
repz
test
call
aaa
shll
add
push
cmc
orl
push
push
test
lock
add
mov
push
call
mov
push
test
testl
je
pop
je
enter
in
data16
mov
testb
pop
pop
add
pop
sub
mov
rclb
xchg
hlt
cmc
add
or
aas
imul
imulb
mov
cmc
add
xor
mov
mov
sub
call
add
add
add
mov
or
lcall
enter
dec
mov
add
mov
cs
and
cwtl
pop
cs
loop
jmp
fwait
test
sbb
add
sti
lcall
pusha
imul
mov
lcall
mov
cs
add
jo
mov
ret
lcall
dec
mov
add
mov
cmp
jbe
xlat
lcall
mov
xor
add
out
sbb
aaa
int3
xor
iret
push
dec
daa
les
inc
push
mov
int3
repz
add
ja
sub
jae
mov
insb
inc
push
daa
add
add
add
repz
movsb
jg
pop
movsl
add
inc
mov
xor
mov
push
ss
inc
push
xlat
movsb
cwtl
movl
sub
sub
jmp
std
insb
dec
xor
mov
dec
addl
inc
xchg
call
insb
add
lds
pminsw
mov
call
add
xlat
repz
enter
pop
sti
add
mov
ljmp
or
mov
xchg
loopne
or
popf
jmp
call
add
fisubs
sbb
pop
pop
gs
pop
mov
xor
add
jmp
in
hlt
arpl
push
lcall
add
mov
out
add
lea
mov
gs
loop
add
loopne
sarl
sbb
adc
add
popa
dec
call
jg
call
add
in
in
sbbl
jae
sbb
push
mov
lret
cmpsb
lds
dec
pushf
nop
inc
mov
nop
test
add
cmp
lock
fwait
xchg
fcompl
sub
cwtl
mov
add
inc
je
add
mov
in
jbe
add
dec
fcoms
leave
xchg
cmc
or
mov
xor
xor
and
mov
add
fistpl
push
pop
imul
push
cbtw
sub
sbb
add
adc
jmp
lfence
adc
inc
pop
jae
mov
xor
mov
das
jge
lods
out
jmp
out
cmpsb
sti
ficoms
test
cs
xlat
mov
test
adc
fildll
repz
out
aaa
mov
cmp
adc
push
mov
orl
add
xchg
repnz
mov
add
add
roll
stos
out
mov
add
std
jmp
add
out
repz
popf
ja
jmp
xchg
loopne
cs
scas
outsl
testl
cmp
fs
stc
iret
sub
call
out
in
mov
out
sbb
popa
test
fisubs
add
popf
data16
jmp
mov
add
add
std
xchg
stos
std
jbe
js
insl
jl
clc
push
ret
stos
std
pop
sub
stc
out
mov
pop
mov
xchg
js
cmp
fwait
push
decb
aam
int3
xor
adc
pushl
mov
sbb
jns
cld
lea
cmpl
add
jl
inc
mov
xor
testb
je
add
sub
cmc
sbb
in
in
repz
stc
mov
xor
push
or
or
int
jl
xor
gs
inc
add
int3
cmpb
add
and
xor
add
lcall
add
pop
rcl
enter
xor
arpl
cmp
or
je
clc
in
popa
aas
mov
push
or
fwait
test
pop
inc
pop
or
xorb
add
mov
ss
hlt
jo
add
mov
pop
sbb
xchg
lcall
sbb
add
popf
xor
sub
test
add
inc
lahf
ss
repnz
insb
dec
lea
inc
jmp
xchg
out
in
jecxz
mov
jb
adc
loopne
cmp
fmull
in
add
mov
loopne
outsl
adcb
stos
push
js
add
push
mov
add
add
mov
cmpsl
fisttpl
call
je
push
mov
inc
jp
call
jo
std
jmp
pushf
add
stos
mov
lahf
add
jmp
sbb
std
push
cli
outsb
shl
pop
add
jbe
sbb
lock
sahf
jmp
mov
jmp
add
add
lahf
cmpsb
jae
clc
roll
repz
adc
je
xchg
mov
add
jns
add
mov
std
cld
push
insl
mov
or
aas
cld
add
repnz
push
loop
jne
xchg
test
jmp
mov
je
xchg
mov
lea
clc
add
add
movsl
repnz
push
cs
mov
call
out
or
mov
push
inc
or
test
test
jne
cld
mov
add
mov
xlat
cwtl
test
and
sbb
lods
sub
dec
xor
scas
cwtl
add
push
push
ds
into
mov
xchg
add
add
mov
mov
add
call
adc
adc
lcall
je
jb
incl
mov
lcall
ljmp
lea
in
pop
std
mov
hlt
repz
loopne
mov
pushf
fistpl
insb
push
xchg
movsb
jbe
add
add
mov
insb
adc
mov
mov
aas
std
sbb
out
repnz
aas
js
xor
outsl
fistps
add
sbb
mov
jae
ljmp
jae
adc
fwait
test
cltd
mov
jbe
pushf
pushf
movsb
mov
mov
movsb
mov
add
stos
std
cmpsb
js
adc
adc
jnp
xchg
outsb
and
repz
fistpl
jmp
adc
add
pop
adc
repz
je
arpl
inc
push
ja
call
adcl
push
pop
das
icebp
into
lods
inc
and
int3
loope,pn
repz
lret
xchg
es
add
and
add
insb
inc
aad
daa
mov
add
jl
push
push
mov
push
mov
test
add
jl
jne
out
inc
or
mov
pushl
mov
rcl
test
pop
jnp
xor
loope
push
mov
rolb
push
jns
in
push
jnp
and
add
out
clc
add
jnp
jb
ja
cld
mov
push
lcall
imul
call
loopne
mov
mov
add
orb
xchg
dec
sbb
add
add
add
je
lds
std
xchg
adc
mov
add
add
sbb
popf
stc
jecxz
xor
decb
addr16
incl
mov
lret
mov
mov
mov
xchg
je
add
pop
out
rcll
andb
mov
xchg
imul
stos
les
add
das
lock
sub
jle
pop
xor
mov
pushf
sub
add
add
mov
add
mov
rorl
sbbl
repz
xchg
sbb
mov
mov
cwtl
stos
add
ljmp
repnz
ret
setns
ret
xchg
js
xchg
xchg
mov
or
mov
ljmp
je
add
add
fstpt
sbb
or
mov
repz
adc
mov
push
ss
les
scas
xchg
jns
call
insb
movb
pusha
or
jmp
mov
jmp
pop
sbb
fisttpll
or
jmp
xrelease
ret
out
mov
add
add
cmp
add
aad
add
jno
movsl
aas
test
gs
lea
repnz
cmp
jbe
and
aas
stos
add
icebp
add
pusha
repnz
std
mov
add
mov
dec
push
jb
and
push
lea
xor
sbb
mov
add
mov
mov
push
cli
int3
add
mov
mov
int3
movsl
jge
mov
incl
daa
dec
and
fcoml
adc
lcall
les
add
or
jmp
push
ret
std
lea
inc
push
add
xorb
jae
daa
mov
add
add
cmp
xorb
ret
dec
clc
rorb
pop
in
ret
clc
xchg
rorl
les
sub
jo
inc
adcb
call
jmp
jne
add
repz
mov
xchg
hlt
mov
out
ret
push
movsl
xor
in
add
add
adc
cmp
scas
jg
mov
out
jmp
leave
divl
mov
add
mov
out
jbe
add
nop
push
xchg
loop
shl
jg
pusha
xchg
mov
jb
jo
add
cmp
pop
mov
mov
mov
jmp
sti
push
push
xchg
test
outsb
inc
icebp
add
add
mov
mov
scas
jmp
xlat
repz
mov
rorl
call
popl
and
sub
adc
add
sete
push
mov
xorl
and
js
std
pushf
push
lds
incb
mov
cmovo
sbb
push
add
add
mov
mov
das
scas
add
testb
mov
inc
call
and
in
es
add
mov
and
testl
cli
out
push
ljmp
sbb
aaa
add
push
loopne
inc
or
add
clc
decl
imul
add
ja
mov
les
and
add
mov
pushl
stc
nop
ljmp
popl
mov
pop
push
int
mov
cmpsb
testl
fstpt
adc
jmp
lret
call
or
ret
add
mov
jae
pop
sbb
add
sbb
mov
and
pushf
pop
rorl
lea
je
mov
iret
add
xor
sbb
iret
sub
repz
push
cmp
out
xor
add
outsl
lret
pop
stos
cltd
out
mov
popa
add
mov
decl
jmp
out
pop
lcall
repz
add
add
addl
faddl
adc
out
adc
add
xor
repz
in
fs
jo
cmp
inc
int3
mov
fs
or
and
jmp
mov
mov
or
and
fwait
jg
pop
repz
push
jb
iret
sub
aad
add
sbb
add
xchg
imul
repz
adc
xor
in
in
mov
sbb
mov
outsb
sarb
je
pop
nop
add
xrelease
xchg
sbb
in
xchg
and
add
repz
mov
sbb
mov
mov
pop
in
xchg
pop
out
add
add
add
ds
and
dec
mov
add
jp
mov
nop
adc
cmp
add
popf
std
test
jne
inc
and
sbb
lea
and
push
inc
and
sarb
in
mov
jl
xor
sbb
and
lods
pop
and
decl
test
add
dec
mov
cmp
lea
movsw
aam
jl
aad
js
add
jae
adc
test
ret
jae
inc
add
movb
xchg
or
jbe
jb
pop
psraw
mov
push
and
add
xor
add
mov
xchg
test
lock
jae
in
xor
shr
rorb
mov
add
or
pop
or
pop
repz
and
jg
adc
out
dec
pop
jmp
dec
out
jle
mov
jg
div
out
ljmp
jge
repz
adc
icebp
out
aas
iret
rcrl
pop
mov
repz
push
xchg
mov
repz
in
je
test
cltd
xor
int3
addb
xor
arpl
imul
idivl
inc
iret
xor
push
lock
arpl
call
push
icebp
add
mov
inc
repz
pop
cmp
adc
pop
mov
mov
int
or
lahf
xor
inc
popa
lahf
lods
inc
inc
in
xchg
std
jmp
repz
dec
mov
call
add
add
push
push
std
mov
aam
push
push
jl
adc
gs
xchg
in
stc
cmp
or
inc
push
aad
addr16
call
bound
add
cmp
add
lret
and
out
add
sbb
jbe
push
addr16
pop
lock
add
lret
pop
ret
jnp
in
in
add
int
std
pushl
push
call
out
mov
mov
jp
xchg
inc
mov
leave
adc
inc
jno
add
mov
push
xor
mov
mov
adc
faddl
lcall
enter
inc
push
pop
mov
sbb
sbb
add
mov
pushf
add
push
ja
add
inc
rorb
incb
add
mov
mov
jle
mov
dec
out
mov
pushf
add
mov
jle
mov
jg
fwait
icebp
mov
notb
inc
insb
insb
cltd
and
loope
dec
mov
fs
arpl
add
pusha
add
add
insb
adc
jne
mov
mov
js
dec
pop
inc
adc
call
dec
cli
repnz
add
je
pop
cmp
xchg
sub
adc
xchg
inc
mov
notl
imul
cs
andb
xchg
push
xor
xchg
pushf
xchg
add
enter
mov
lock
test
or
add
jl
aad
cmp
cmp
aaa
xchg
cmp
ja
lds
xchg
push
jb
cmc
add
xchg
xchg
into
out
xchg
cld
call
xor
call
insb
inc
mov
std
outsb
lahf
jl
adc
call
pusha
add
add
mov
subl
fcoms
dec
mov
cld
adc
movsb
or
xchg
adc
shlb
add
mov
or
xchg
in
ljmp
or
push
xchg
or
in
repnz
or
jne
add
lahf
push
lea
les
jo
mov
call
add
add
cmc
mov
insb
sar
sbbl
jbe
mov
jb
shl
add
pusha
aas
cld
add
outsl
call
shl
mov
sub
pushf
cltd
jl
pushf
add
pusha
addr16
std
lea
add
test
dec
int3
dec
push
pushf
add
add
add
mov
jge
pop
je
mov
out
addl
add
xlat
mov
push
cmp
aas
clc
cmp
jg
shrb
cltd
dec
and
add
out
pop
add
lcall
push
mov
call
push
jl
out
addl
andl
lcall
cli
lahf
jp
fs
mov
cmpsl
add
repz
popf
inc
mov
xor
mov
mov
divl
add
repz
pop
jp
insb
shl
add
mov
out
mov
fs
ret
out
or
inc
xorl
add
add
add
fwait
rol
push
adc
inc
clc
add
jle
jl
add
decb
mov
arpl
addb
xchg
jle
call
cmc
hlt
mov
lret
loope
inc
xor
push
mov
loop
add
jl
add
xchg
lock
loope
cs
add
add
add
jle
sahf
inc
xor
mov
xor
ror
rolb
leave
add
or
divb
rorb
enter
push
mov
lock
test
push
lea
adc
call
popf
in
or
sbb
divl
xchg
into
lds
mov
add
and
lock
jl
add
jno
mov
add
add
mov
add
out
add
das
add
in
in
je
add
in
add
add
add
test
mov
add
mov
lahf
orb
dec
jmp
fwait
add
mov
add
popf
add
sbb
dec
notb
push
int
inc
add
add
pop
mov
add
dec
addb
mov
dec
rorl
int
jns
mov
out
mov
adc
dec
pushf
xchg
mov
out
dec
jg
mov
gs
out
pop
xchg
jle
jg
leave
cmpsb
add
push
mov
adc
cmpsb
out
add
add
adc
jne
sub
insl
xchg
idivb
jle
jg
mov
add
shl
out
sub
jg
outsl
lea
repz
outsl
push
add
repz
sub
jne
and
insl
mov
xchg
sub
xor
je
mov
jbe
or
imul
dec
or
add
push
or
lds
push
je
cmp
and
mov
xrelease
jp
std
push
sti
mov
xchg
mov
pop
loop
mov
add
add
push
xor
jb
test
call
sarl
mov
fadds
add
repz
add
add
or
add
pop
xor
jne
dec
push
inc
mov
cmc
cld
bound
dec
fcomps
movl
or
jmp
adc
hlt
add
jo
mov
mov
js
adc
or
div
clc
add
je
bound
pushl
pop
addr16
xor
aaa
jge
adcl
lret
add
add
jmp
add
dec
pusha
fdivr
loop
push
ljmp
hlt
add
rcl
iret
sub
call
or
or
add
add
popf
cmpsb
je
mov
and
sbb
mov
rorb
lock
add
sbb
push
je
in
add
decl
add
mov
jae
pop
mov
call
pop
dec
mov
xorb
fmul
aam
mov
clc
in
pop
inc
fldl
mov
add
add
ljmp
js
daa
add
out
cmp
ljmp
push
int
mov
or
cmc
jmp
daa
push
ret
xor
add
outsl
cmp
outsl
iret
aas
decl
iret
sti
addb
out
and
in
add
pusha
scas
iret
pop
ljmp
mov
imul
jmp
xor
mov
pop
cli
mov
add
cmp
xchg
jmp
js
int
cmp
call
shr
and
add
add
jl
or
xchg
testb
test
adc
jo
inc
or
nop
hlt
test
mov
add
pop
mov
ret
jnp
int
jbe
lds
out
mov
test
jb
ja
add
insb
out
adc
pushf
inc
and
inc
and
inc
and
add
xor
shl
add
cmc
lock
ljmp
imul
add
add
fisttps
mov
in
xor
adc
xor
mov
in
call
out
inc
and
jne
call
lock
divb
add
mov
jns
dec
sbb
cmp
mov
add
lcall
stc
add
add
sbb
sbb
push
pop
pop
into
and
or
add
shll
sbb
add
cwtl
dec
in
add
xchg
add
cmp
in
push
or
xor
dec
sbb
xor
mov
mov
lea
add
add
add
test
mov
inc
js
test
mov
pop
or
and
pushf
add
mov
repz
jle
add
mov
mov
lahf
divb
and
and
nop
repnz
and
int3
pop
pop
add
sbb
mov
add
cmpsl
fimuls
hlt
mov
call
cmpsl
add
or
xor
je
mov
mov
in
xchg
insb
movsb
outsl
sahf
mov
lahf
adc
stc
cltd
int3
aaa
jmp
cmpsb
dec
mov
jmp
cwtl
aad
jmp
mov
xor
jnp
push
aas
lret
pop
pusha
sub
cld
add
add
or
jae
leave
daa
push
insb
int
push
add
lods
inc
jmp
add
cmc
insb
add
lcall
and
jb
push
or
mov
jo
add
cmp
jmp
flds
jae
lea
div
fs
pop
pop
insb
xor
mov
jmp
push
jnp
or
lea
add
mov
jmp
lahf
icebp
hlt
hlt
xchg
mov
add
cmc
repz
add
hlt
xchg
insb
mov
push
or
mov
or
imul
pushl
hlt
mov
cmp
call
lea
and
shll
add
data16
add
add
add
add
lea
out
fistpl
orl
mov
add
or
test
pop
lea
lret
mov
aam
adc
jne
repz
mov
mov
add
cmpsb
adc
dec
mov
xchg
pop
sub
decb
je
pushf
cmp
inc
rcrb
test
add
fcoml
mov
add
pop
jne
ja
add
repz
mov
add
repz
sub
je
and
mov
mov
out
push
sub
rolb
hlt
out
or
add
add
adc
ja
jle
mov
jecxz
add
push
icebp
out
dec
jnp
jnp
pop
loop
repz
mov
mov
inc
sbb
jne
insl
jle
addb
clc
mov
xrelease
or
lcall
loopne
std
jg
or
adc
xchg
xor
jle
jmp
stos
das
in
cmp
add
xchg
repz
xchg
mov
add
add
add
repz
push
loop
test
int
call
gs
add
jbe
mov
test
or
stc
mov
pop
jge
dec
xchg
lds
loopne
add
jne
std
jne
add
test
add
xor
jne
mov
adc
and
sbb
out
xor
aaa
jge
add
cmp
mov
icebp
add
dec
fcom
decl
push
inc
pop
out
lret
pop
mov
and
ja
in
hlt
lock
in
in
mov
dec
divb
imul
mov
fwait
mov
inc
push
jae
push
mov
stos
dec
xor
add
add
cmp
add
adc
adc
popa
call
jl
push
xor
mov
es
loope
mov
adc
mov
ljmp
aam
insl
decl
xor
inc
add
mov
lods
imul
movb
add
lahf
add
stos
inc
jmp
inc
out
shll
add
add
sbb
push
test
mov
jno
sub
sbb
pop
push
adc
inc
lods
ret
add
insb
lods
mov
mov
popa
jmp
sub
rolb
and
xchg
stos
movsl
ja
add
and
cmp
add
popa
pusha
jmp
add
add
dec
jnp
hlt
out
add
inc
stos
adc
out
sub
incb
cwtl
repz
cmp
iret
push
das
ret
xchg
cmp
imul
repz
adc
jecxz
repz
mov
cwtl
aaa
jp
xchg
das
lret
inc
sahf
mov
jmp
out
mov
adc
ds
pushaw
add
add
pop
repz
das
roll
icebp
push
xchg
and
aad
adc
adc
repz
lds
add
mov
inc
fidivrl
dec
add
inc
xchg
mov
call
cmc
add
stos
fnstsw
dec
clc
inc
loop
add
mov
inc
cld
dec
gs
mov
add
xchg
add
stos
in
pop
std
decl
clc
inc
ljmp
mov
dec
sbb
cmc
mov
out
add
stos
in
mov
fwait
testb
push
mov
test
adc
mov
insl
add
sub
leave
mul
and
add
jl
mov
add
cs
cmp
mov
add
mov
in
add
add
lcall
xlat
inc
lcall
jl
mov
jnp
mov
test
add
mov
stos
add
pop
aam
fdivr
adc
jp
xchg
jb
rorb
test
adc
sbb
mov
popa
movl
add
dec
in
repnz
add
aam
or
add
push
adc
mov
popa
mov
ja
jp
fldcw
or
out
adc
add
xchg
add
insb
lods
or
mov
out
sub
stos
js
out
stos
insb
pushf
and
mov
jno
outsl
cmp
add
orb
out
add
add
daa
sbb
jmp
xchg
xchg
repz
adc
mov
std
jbe
cmova
das
inc
xor
jmp
div
fucompp
or
pop
jb
repz
dec
les
imulb
aas
jo
inc
add
aaa
sahf
cmp
or
mov
repz
dec
ds
jno
add
repz
push
xor
push
adc
cltd
mov
pushaw
int
mov
call
inc
dec
jge
push
add
xchg
mov
inc
fcoms
in
mov
out
add
mov
mov
cmp
push
pop
push
mov
dec
test
xor
add
mov
mov
add
add
in
movsb
rolb
gs
mov
dec
mov
xor
stos
mov
mov
mov
mov
shl
inc
in
js
add
lods
test
add
inc
add
jb
shll
xor
mov
jnp
data16
ret
mov
lods
scas
mov
enter
mov
add
add
outsl
aam
imul
bound
mov
fisttps
movsb
add
adc
into
ljmp
add
add
add
sub
testl
je
jge
mov
jne
repz
cli
inc
adc
and
addr16
jmp
and
add
add
std
fmull
iret
dec
outsl
or
jnp
sub
sub
int3
or
add
push
daa
lret
iret
cmp
jb
push
pop
aas
test
fwait
rol
xorb
mov
jb
push
dec
jmp
dec
jge
pop
pushf
es
ret
ret
add
fldl
push
popl
add
jle
shl
add
aam
pop
jb
iret
rcll
jg
adc
add
mov
jg
pushf
fs
das
movsb
call
insl
dec
add
jg
add
and
or
sti
pop
and
test
jno
cli
mov
add
ljmp
jmp
jle
jnp
xor
add
add
shl
add
ficoml
xor
add
icebp
fadds
and
out
add
push
rolb
test
cmc
add
cmc
cmc
add
sub
add
arpl
sub
addr16
out
lret
call
sub
add
inc
lds
cmp
out
inc
cld
add
add
lds
pop
inc
xchg
leave
testl
or
out
pusha
decl
jl
inc
call
add
jae
pop
jp
sbb
stc
mov
sub
sbb
filds
and
out
add
jl
lock
add
add
mov
je
add
lea
inc
mov
stc
mov
iret
mov
out
add
mov
inc
je
aad
jecxz
lods
out
add
dec
mov
test
call
mov
push
sti
shlb
bound
ret
push
xchg
pop
repz
adc
jl
push
out
pop
insb
call
fistps
jp
insb
push
mov
sub
ljmp
add
add
movsb
sub
jg
repz
xchg
push
idivb
repz
xor
shr
inc
sub
out
pop
packssdw
fisubs
stos
jne
lock
je
repz
sbb
outsl
call
gs
add
jno
push
push
jb
adc
mov
std
push
les
jmp
pop
std
je
add
mov
addr16
cltd
mov
mov
call
subb
loop
mov
ja
xor
push
push
call
sbb
add
sub
lock
and
add
mov
repz
fsubl
push
jnp
xrelease
in
add
mov
jmp
push
add
add
inc
push
pop
aaa
pop
mov
cmp
ret
push
mov
je
cmp
repnz
aas
or
repnz
inc
in
cmp
add
fimull
call
lea
lcall
flds
in
call
lea
icebp
add
pop
inc
add
cmp
or
add
or
add
movsl
addb
aad
test
out
mov
lds
push
enter
add
pop
push
add
mov
nop
mov
sub
sbb
in
add
or
jl
mov
testl
into
add
fmuls
repz
bound
dec
sar
or
add
add
lret
andb
nop
jge
sti
cmp
xlat
adc
push
add
aam
inc
add
push
outsb
xchg
insb
aam
imul
mov
addr16
pop
imul
bound
pop
inc
insb
lcall
insb
push
imul
push
bound
xchg
or
pop
or
cmp
insb
out
add
add
jmp
aad
cli
ja
mov
mov
xchg
inc
mov
adc
jne
fdivrs
cld
scas
fs
sbb
loop
push
xor
sbb
loopne
test
imul
shrl
pop
aad
fisubrl
imul
or
and
pop
xchg
ret
xor
xor
cmp
ljmp
test
pushf
push
aas
call
fmul
inc
jmp
outsl
shlb
cmp
mov
aad
mov
int3
inc
jmp
movsb
add
push
cmc
push
je
push
push
jo
testl
add
adc
or
add
lahf
add
mov
add
add
pop
cmpsl
repnz
push
lock
dec
add
mov
add
sbb
mov
fimuls
xor
std
jbe
fidivs
and
std
jbe
fisubrs
hlt
cmc
std
jbe
xlat
out
cmc
lahf
mov
ss
mov
jnp
je
jle
lods
jl
std
mov
inc
adc
or
jne
pop
sub
add
je
fdiv
addr16
es
xlat
or
lea
cmp
pushl
mov
out
sbb
pushl
add
mov
popf
add
sbb
jo
mov
push
or
pop
cld
xor
popl
mov
ret
test
lea
arpl
or
insl
fs
add
mov
mov
add
add
lock
decl
jae
repz
mov
mov
sahf
mov
mov
jp
sub
sub
push
cmp
add
loope
cmp
adc
fdivr
loope
mov
ja
daa
js
sahf
jmp
xlat
pmulhuw
jmp
and
shll
add
add
rcr
pop
pop
cmpsl
outsl
ret
cmp
mov
fucomp
mov
or
in
jmp
inc
ss
int3
adc
add
add
push
pop
push
add
jbe
adc
xor
orl
dec
push
mov
cmp
test
adc
add
add
mov
std
cltd
pop
jp
inc
xchg
lds
jmp
mov
aam
xchg
mov
hlt
add
stc
divb
imul
aas
jp
sarl
cmpsl
or
add
jne
pop
int3
push
sbb
adc
cmp
movsl
repnz
jbe
enter
outsl
mov
push
sub
add
sbb
jne
popa
lea
push
call
in
movsl
push
dec
addb
inc
enter
pop
call
les
add
clc
and
mov
mov
clc
decl
sub
dec
jmp
mov
inc
cmc
je
sbb
push
test
jg
in
pop
dec
fs
add
mov
jg
add
add
pop
fistpll
dec
mov
sub
mov
sub
pop
sub
pop
jae
xor
aaa
stos
aas
ljmp
mov
inc
add
repz
je
ficompl
fincstp
xchg
fistpll
inc
push
pop
dec
add
call
hlt
rcrb
dec
mov
xchg
or
add
add
pop
cli
fs
mov
add
jae
pop
aad
imul
popa
enter
repz
cmpsl
jb
out
repz
cmp
pop
mov
dec
pop
lea
pop
bound
incb
mov
pop
pop
ret
js
imul
add
xor
jg
repz
lahf
pop
popf
jmp
repz
mov
mov
add
out
mov
push
pop
shll
jge
out
enter
addr16
jmp
sbb
xor
mov
inc
jmp
and
mov
std
xchg
loopne
jae
inc
subl
fildll
bound
andl
repz
add
add
sub
mov
bound
mov
subl
in
aaa
mov
out
jp
dec
add
js
jae
aad
test
xchg
mov
imul
xchg
icebp
mov
push
add
fwait
lods
add
fiaddl
sbb
cmp
add
in
xchg
pop
cmp
add
mov
shlb
xor
cmp
xorl
je
lods
in
ret
cmc
add
jne
call
mov
loope
je
outsl
mov
testb
mov
dec
out
incb
add
out
out
out
add
adc
xchg
insb
scas
pusha
dec
add
popa
cmp
movb
cmp
mov
lock
cwtl
iret
inc
push
and
add
mov
jo
and
ss
dec
add
xchg
hlt
add
iret
push
decb
lock
dec
add
mov
pop
push
push
stc
jp
dec
add
push
mov
xor
push
sti
mov
out
ret
sub
cmc
lcall
add
mov
out
shl
fucomp
fwait
cli
cmpsl
add
lcall
gs
xchg
fsubrl
add
xor
repnz
imul
fimull
call
fimull
insb
inc
cmp
stc
inc
cmpsb
mov
loopne
rep
enter
xor
xor
and
rcr
mov
out
jmp
in
dec
jecxz
pop
ljmp
daa
rorb
mov
mov
add
in
roll
mov
add
popl
jmp
stc
sub
push
push
stos
repz
dec
mov
bound
adc
std
pop
add
adc
mov
mov
and
sub
push
sub
xlat
cmp
iret
pop
mov
jb
adc
jo
imul
leave
mov
inc
add
in
fists
add
add
cmp
inc
jmp
dec
pop
mov
push
mov
pop
lock
pop
incb
push
imul
xchg
mov
repnz
push
inc
pop
inc
and
mov
push
loop
insl
push
xchg
in
xchg
repnz
xchg
cmpsl
add
or
testl
lret
jle
repnz
add
add
fdivl
std
out
add
xor
loope
out
pop
mov
sbb
fnstsw
add
jl
clc
popf
in
mov
add
mov
dec
mov
push
pop
add
mov
out
gs
dec
add
mov
call
push
jge
add
add
jno
add
adc
add
test
dec
dec
mov
mov
mov
fists
mov
test
jmp
xchg
shrb
mov
cwtl
sti
fiadds
filds
add
xor
inc
repz
call
pop
mov
or
cmpsl
add
les
shl
out
push
ja
fadds
add
adc
xchg
icebp
out
subps
add
jle
add
or
mov
push
push
xor
ljmp
out
adc
add
inc
push
mov
add
mov
jmp
out
mov
icebp
out
pop
mov
jle
pop
adc
push
cmc
jmp
xor
sti
inc
jmp
add
add
push
mov
push
mov
movsb
mov
and
pop
fucomp
jbe
pushf
daa
lret
add
inc
jmp
xchg
mov
je
repz
adc
cmp
call
dec
out
jb
dec
out
mov
add
and
jb
inc
mov
shrb
sbb
fimuls
adc
call
add
adc
push
or
push
adc
mov
lahf
push
mov
pop
add
cmpsb
in
mov
pop
mov
fmuls
scas
mov
mov
scas
dec
push
ret
je
lea
je
xlat
jl
push
fadd
call
pop
sub
mov
add
mov
ss
push
add
call
sub
cmc
test
inc
or
aad
out
insl
add
adc
sub
je
fmul
xchg
or
push
imul
out
movsl
add
adc
adc
daa
dec
test
decl
adc
cs
add
sbb
idivl
mov
add
add
push
dec
add
jns
cmp
cmp
loope
dec
jl
je
into
sbb
cmovge
inc
jmp
mov
dec
je
xor
dec
mov
and
cld
jp
pop
fs
pop
jmp
jb
mov
jo
mov
std
pop
pop
scas
jp
sbb
in
fsubp
inc
rcrl
jmp
incb
add
inc
jne
addr16
insb
mov
rcrl
call
fistpl
sti
cmpsl
add
push
mov
mov
fsubs
pop
jae
pop
insb
scas
pop
dec
push
call
jge
mov
enter
dec
or
mov
ds
dec
xchg
sub
mov
test
in
movsl
sbb
cmp
fisttps
add
add
mulb
jbe
adc
or
scas
dec
mov
rclb
mov
repz
push
in
mov
repz
call
pusha
dec
aam
sub
leave
lret
call
pusha
leave
iret
call
idiv
xchg
xchg
lock
inc
loope
scas
add
imul
incl
add
test
jno
adc
pop
adc
mov
sub
sbb
add
mov
xor
or
std
pushl
mov
mov
in
repz
call
fistpl
inc
xor
mov
add
pop
push
call
jle
mov
dec
sahf
add
push
popf
sti
fildl
in
mov
add
cmc
mov
in
enter
test
sub
mov
dec
push
xchg
add
pop
filds
fmull
cld
fiaddl
sub
mov
jae
gs
jae
fldt
adc
xchg
rcrl
mov
inc
jl
jnp
mov
dec
mov
mov
xlat
add
add
mov
inc
mov
mov
inc
add
inc
push
or
add
mov
inc
push
or
add
mov
imul
shll
outsl
xor
mov
add
repz
and
cli
adc
in
lret
repz
in
and
call
or
out
add
add
in
mov
add
sysret
jmp
inc
mov
insb
daa
repz
mov
push
mov
and
adc
addr16
mov
repz
paddusw
mov
repz
push
insb
bound
inc
scas
cld
sbb
adc
sub
lods
add
and
mov
add
lret
stc
mov
int3
cmp
dec
push
addr16
dec
outsl
mov
outsl
ret
jmp
mov
gs
int3
mov
dec
push
push
mov
outsb
sarb
dec
lock
nop
xrelease
or
je
mov
fucomip
mov
repz
add
insb
or
add
add
pop
mov
mov
add
loope
gs
mov
mov
dec
cmpsl
out
mov
and
enter
add
lods
xchg
stc
jne
test
or
sarb
cld
test
push
sbb
dec
in
sbb
ror
je
xor
mov
mov
int
jecxz
xor
js
add
add
mov
adc
jp
pop
mov
test
lahf
sbb
ljmp
cmp
xchg
pop
scas
mov
bnd
test
call
or
mov
cmc
daa
cmpsl
nop
lock
jmp
shlb
add
pop
add
shrl
jp
adc
pop
dec
call
add
add
leave
push
jp
pop
mov
mov
xor
repz
add
mov
bound
sti
je
inc
repz
das
add
jnp
push
cmpsb
dec
je
sahf
dec
out
sbbl
mov
bound
mov
out
mov
cld
push
mov
sbb
fsubr
fldt
in
daa
add
ss
add
mov
call
lock
add
xchg
mov
jp
jge
pop
fs
xchg
mov
mov
mov
jns
inc
bound
xor
add
add
dec
jb
ja
xchg
xchg
hlt
pop
adc
dec
pop
jae
mov
test
mov
jge
in
push
hlt
ljmp
call
lds
insb
add
add
dec
aam
mov
jne
scas
cmp
inc
cmc
push
rclb
push
cld
xchg
divb
xchg
call
fwait
push
xorl
dec
rcll
ljmp
xlat
add
mov
iret
add
imul
sbb
add
or
mov
pop
sub
add
repz
jmp
or
shrb
in
cmc
pop
xor
testl
scas
popf
mov
push
ficompl
adc
push
call
ret
mov
std
pop
out
adc
xchg
popf
mov
push
incl
pop
inc
gs
aad
loopne
jne
mov
jno
mov
mov
cld
xchg
sar
add
mov
pushf
add
loopne
inc
decb
adc
loop
sti
std
stos
cltd
adc
aas
mov
mov
popa
inc
push
pop
push
and
fsts
pop
push
lods
out
sub
cld
or
jge
mov
and
movups
jl
pop
add
fidivl
mov
mov
add
pinsrw
sub
mov
rolb
repnz
xchg
aam
out
pop
jb
adc
out
xchg
jecxz
hlt
or
push
out
aas
loope
add
testl
mov
testl
out
sbb
jmp
sbb
loopne
add
dec
mov
stos
jns
xchg
icebp
out
add
add
adc
adc
push
incl
into
repz
scas
int3
jmp
inc
adc
add
cmpsl
lcall
adc
add
js
or
mov
lods
mov
dec
pop
mov
cmp
cmc
fists
mov
mov
add
inc
jmp
jp
rorl
sbb
add
adc
sub
std
bound
call
repz
je
push
insb
dec
adc
cmp
mov
adc
xor
jmp
jge
xorl
add
scas
cmp
or
xor
sbb
xor
add
jns
push
test
add
outsb
xor
xor
xor
stos
arpl
mov
out
mov
cmp
and
sub
add
mov
xlat
movsb
out
testb
test
lahf
jge
mov
pop
je
add
or
and
add
add
add
mov
sbb
pop
xlat
out
loope
add
and
jmp
mov
insl
fisttpll
pop
shll
push
sar
popa
sub
push
pop
add
pop
xor
jae
hlt
lcall
or
push
sbb
jae
aad
adc
jmp
call
jae
mov
add
xchg
inc
jnp
hlt
out
bound
add
lods
stos
add
add
push
sub
and
add
add
outsl
jecxz
adc
inc
mov
sub
dec
adc
dec
psubb
lcall
int3
jg
jp
add
jmp
ret
jg
sub
add
jecxz
lret
add
add
mov
push
mov
add
std
add
sbb
sbb
adc
clc
dec
adc
hlt
inc
mov
mov
lahf
mov
stc
inc
jle
sbb
mov
pop
call
cmp
pop
xchg
repz
movsl
jg
test
clc
fimull
sbbl
fisttps
add
lods
repz
nop
mov
std
aam
loop
jmp
data16
xchg
jg
sub
or
orl
mov
xor
xorb
pop
pop
into
jl
pop
sub
sub
and
icebp
add
mov
or
subb
in
jle
int
pop
div
push
incl
cmovo
add
int
jmp
mov
push
adc
inc
push
or
add
xlat
pop
inc
cmc
je
and
clc
test
in
add
xor
jmp
and
and
aam
fwait
mov
testl
ja
fs
add
sar
inc
adc
add
add
xchg
aad
and
add
xlat
shll
cmp
sub
decl
sub
ja
add
lea
mov
loope
lcall
mov
pushf
add
je
out
repz
mov
stos
xor
adc
or
icebp
out
add
add
add
cmp
clc
adc
hlt
out
jnp
adc
xchg
jo
mov
inc
repz
jp
out
repz
xor
loop
mov
cmp
mull
fwait
pop
ret
repz
mov
pop
push
push
mov
ss
pop
pop
push
mov
es
sbb
scas
add
pop
ret
repz
push
out
jb
out
add
add
add
add
call
inc
jae
sbb
mov
repz
jo
cmc
call
inc
and
inc
jmp
dec
repz
lock
push
repz
adc
in
iret
mov
pop
cmc
adcl
mov
xchg
js
stc
jb
mov
xor
mov
cmp
insl
jb
add
int3
adc
push
cmp
insl
mov
cmpsl
inc
je
leave
mov
call
xorl
adc
pop
loopne
jne
stc
test
mov
add
pop
push
or
jmp
inc
je
mov
popf
add
out
and
jne
test
jne
add
aam
add
scas
test
sbb
xchg
and
mov
add
jmp
fisttpl
inc
test
pushf
xor
ja
je
and
in
lock
dec
sar
jl
je
cmp
xchg
decl
push
push
mov
or
push
jle
add
decb
xor
je
inc
mov
push
jnp
test
dec
ficompl
add
ja
mov
dec
lods
mov
mov
add
mov
xor
outsl
cwtl
fptan
mov
clc
sbb
outsb
std
add
mov
stos
inc
movsb
dec
rorb
xchg
push
hlt
aas
inc
mov
sti
add
pop
push
dec
repz
shrb
incb
jbe
call
sbb
jmp
testb
daa
add
inc
sahf
cmp
jecxz
scas
xchg
inc
cmp
fiaddl
adc
out
dec
out
jo
scas
out
cmp
dec
aam
call
shll
inc
jbe
cmp
push
test
iret
xchg
xor
cmp
mov
sbb
das
lods
aam
add
mov
dec
icebp
mulb
sub
add
add
xor
filds
add
inc
std
out
leave
insb
in
cmp
xlat
cld
jmp
mov
push
in
push
cmp
mov
cmp
add
sub
cmp
pop
mov
aaa
xchg
mov
push
repnz
xchg
push
out
mov
notl
cmp
or
sbb
lock
inc
mov
add
sub
filds
cmc
jne
and
outsb
inc
cld
mov
es
xor
xorl
push
inc
mov
cmp
pop
or
mov
cmp
xor
push
insl
mov
add
mov
adc
test
pop
pop
into
scas
mov
cld
out
adc
incb
push
mov
add
cmpsb
xor
jmp
inc
decl
push
test
add
pop
adc
and
dec
add
or
add
cmp
mov
pop
sbb
dec
mov
ret
or
push
test
dec
add
pop
cld
sub
mov
into
push
jae
ror
pop
push
push
repz
clc
lods
dec
add
add
or
xor
xchg
clc
inc
call
dec
xchg
xor
jnp
cmp
jle
xor
mov
cmp
mov
and
push
add
mov
mov
push
mov
mov
jae
xor
les
add
mov
movsl
mov
jl
cmp
insb
movsb
or
add
mov
push
cmp
jecxz
fwait
mov
out
jae
popf
add
std
mov
inc
hlt
out
pop
adc
or
sarb
and
add
xor
std
cmp
bound
mov
ja
shr
push
icebp
mov
out
call
add
sub
add
add
cmp
xchg
push
mov
je
ret
pop
push
fs
ds
jmp
jg
add
mov
stc
inc
rorl
repz
jae
mov
xorb
pushl
adc
cmp
jmp
sbb
test
out
jp
cmp
jecxz
jmp
insb
decb
add
add
cmp
std
inc
mov
add
inc
mov
cmc
jb
imul
inc
jbe
hlt
in
jbe
or
inc
or
add
test
call
test
pop
add
mov
sbb
dec
jmp
xrelease
mov
cmc
mov
mov
jae
inc
cmp
sub
add
add
mov
pop
pop
pop
xor
add
cld
mov
rol
pop
dec
in
jnp
cmpsb
add
adc
std
add
popa
mov
incb
jl
hlt
inc
mov
jecxz
xor
pop
push
xor
test
inc
mov
insb
into
enter
push
pop
cs
add
pop
cld
xlat
imul
add
and
dec
xlat
loope
out
sbb
imul
add
cmp
xor
repz
aaa
mov
decl
int3
repz
inc
cmc
out
jecxz
add
inc
mov
mov
rcrl
out
adc
out
sbb
mov
pusha
jmp
faddl
add
push
push
insb
inc
xchg
outsl
jle
mov
bound
adc
jmp
and
out
xchg
rcr
xchg
imul
add
ljmp
adc
push
jmp
repz
stos
push
pop
jge
or
mov
in
iret
jmp
add
dec
sbbl
sub
add
add
mov
mov
call
jo
and
jmp
repz
mov
idiv
in
std
je
push
xchg
and
sub
scas
clc
fs
test
push
out
add
out
or
loop
add
jne
push
int3
std
mov
jl
out
mov
mov
add
add
mov
add
and
jae
add
mov
in
jmp
jne
hlt
cmc
cmp
xor
iret
add
or
pop
xor
mov
sub
inc
or
sub
or
or
js
add
sbb
add
aaa
mov
sbb
lea
push
adc
addr16
add
ret
xor
int
dec
jp
mov
mov
mov
dec
add
mov
lret
pop
or
adc
mov
fdivrp
iret
dec
jp
mov
push
pop
jp
rorl
add
jp
mov
cli
lds
adc
addr16
push
std
incb
sbb
int3
mov
add
inc
test
and
iret
inc
mov
add
pusha
shll
sti
add
fdivs
sub
mov
jnp
fstpt
arpl
out
into
xlat
jle
icebp
out
enter
push
mov
and
push
enter
mov
mov
add
add
shrl
aaa
je
out
inc
out
mov
dec
lret
jmp
aas
loopne
fucomi
push
jb
dec
inc
mov
insb
imul
mov
je
xor
or
sbb
imul
mov
insb
dec
ds
add
or
add
call
bound
neg
add
add
push
out
xchg
mov
cmc
push
je
stc
push
cmp
mov
xchg
cmp
outsl
shl
push
push
mov
dec
fdivrl
mov
xchg
out
call
subl
pop
insb
mov
add
cmp
icebp
add
fwait
xlat
pop
int3
fs
std
jbe
mov
call
incl
add
push
mov
leave
add
mov
xor
out
add
sbb
xchg
mov
and
push
leave
add
or
mov
push
mov
inc
mov
mov
xor
leave
add
or
shrl
out
add
mov
rorl
dec
add
and
jl
add
add
lea
jge
add
test
or
add
dec
add
aaa
stc
ja
rclb
fdivl
lret
lea
add
in
test
rol
pop
stos
mov
push
xchg
adc
incb
movsl
lahf
cmp
mov
lret
mov
aas
or
call
lahf
repz
out
add
add
ret
js
mov
sub
repz
int3
xor
mov
xchg
xor
lds
jbe
sub
aad
mov
in
sbb
ljmp
sub
sbbb
sahf
sbb
push
ljmp
test
aam
sbb
cmpb
and
push
fildl
cmpsb
sti
mov
ret
xor
add
cmp
fildll
testl
test
adc
add
adc
pusha
aad
xor
int
sub
in
lds
jmp
icebp
xchg
jbe
call
test
test
repz
sub
je
jbe
sbb
lea
or
xor
je
scas
sbb
or
adc
add
add
dec
xor
shll
std
jmp
loope
xchg
imul
jb
aaa
fdivs
mov
test
xchg
testb
xor
adc
sub
adc
push
xor
clc
cmpsl
addr16
cld
stos
mov
add
sub
lea
test
inc
add
add
cmp
mov
inc
adc
stc
push
add
and
incb
or
aas
mov
pop
sbb
hlt
push
call
mov
jnp
clc
repz
pusha
inc
in
dec
subb
inc
loop
rclb
add
iret
pop
or
into
sbbl
add
add
sbb
ret
mov
add
xor
add
cltd
outsl
mov
cmp
mov
jns
dec
cmpsb
leave
inc
mov
and
les
sar
xlat
adc
data16
pop
inc
sbb
fldl
bound
sub
in
in
jo
test
pop
xor
daa
add
rcr
add
add
repz
add
je
bswap
movsl
pop
sbb
cmp
add
mov
repz
into
sti
jg
cmpsb
mov
push
mov
push
fwait
repz
mov
cmpsl
mov
repnz
jnp
add
in
cmc
out
pop
jns
scas
lcall
icebp
sti
into
sub
add
ret
mov
add
add
add
lcall
push
sub
call
xrelease
testl
adc
lds
xchg
fistpll
sub
mov
jmp
xchg
jno
stc
fwait
push
mov
iret
cmpsl
add
aas
jg
fincstp
movsl
sbb
add
add
fdiv
add
std
subl
std
push
add
push
sub
add
xor
mov
xor
push
mov
sub
mov
lock
fwait
xlat
decb
cmc
icebp
mov
lea
incl
cmc
inc
add
lock
fwait
sar
mov
sub
add
add
sub
push
mulb
mov
jnp
je
jp
je
je
or
inc
lcall
pop
xor
xchg
lahf
adc
test
sub
sti
mov
jb
push
jmp
push
add
outsl
rorb
pop
stc
mov
call
sbb
add
stos
add
add
add
lcall
xor
mov
addr16
add
mov
add
xchg
inc
out
inc
and
pop
push
test
mov
dec
hlt
push
pop
mov
pcmpgtb
sbb
xor
enter
xchg
shll
xchg
lds
or
mov
add
add
push
scas
repz
outsl
das
and
xor
mov
imul
call
or
out
push
or
fstpt
out
mov
in
pop
adc
out
fcmovne
xor
add
mov
sbb
mov
adc
sub
sub
adc
pop
inc
jmp
add
mov
fsubrs
add
jmp
sub
mov
mov
sti
jne
jmp
mov
out
push
inc
cli
cmp
xchg
addr16
call
roll
or
imul
repz
xchg
rol
ret
rorb
stos
into
or
pop
push
bound
add
mov
ja
call
scas
out
gs
mov
std
mov
fnsave
inc
push
and
sub
std
mov
frstor
inc
shrl
std
mov
shll
ljmp
sbb
mov
test
add
fmull
mov
mov
aaa
jl
sub
add
mov
add
or
add
es
push
cs
sbb
jne
jns
cmpl
adc
dec
call
clc
mov
div
or
sar
xorb
xorb
pop
push
mov
in
aas
mov
mov
test
mov
xchg
pop
add
adc
aas
mov
add
sbb
or
mov
inc
sub
aam
dec
push
or
add
mov
push
or
add
mov
add
je
and
xor
add
outsl
or
adc
fadds
repz
mov
sbb
ds
cmp
mov
iret
mov
add
sub
out
add
xchg
cmp
rep
xchg
scas
xlat
je
scas
lcall
scas
xlat
push
xchg
scas
xlat
dec
xchg
scas
xlat
iret
aas
js
out
jmp
sbb
je
sti
xor
out
add
test
out
mov
cltd
push
cmpsl
add
jg
je
mov
xor
fs
sbb
test
and
es
add
add
pop
xor
call
lahf
jno
mov
inc
ljmp
std
pop
sbb
push
repz
cmp
pop
sub
repz
dec
add
adc
push
mov
mov
dec
xor
call
sbb
std
popf
mov
call
add
add
movsl
addr16
pop
out
into
pop
ret
add
repnz
push
pop
jns
add
je
pop
push
call
push
jle
or
faddp
add
sub
call
scas
ljmp
and
push
adc
imulb
mov
mov
or
add
push
and
pop
ljmp
mov
add
leave
or
cmp
xchg
daa
aas
in
xchg
and
and
mov
add
add
dec
hlt
push
je
inc
add
sub
lea
mov
pop
fdiv
mov
out
hlt
mov
mov
in
fistl
add
scas
mov
cltd
and
or
sbb
add
or
xor
aas
mov
sbb
pop
shrl
lret
repnz
fwait
jg
imul
inc
stos
and
sbb
fwait
inc
stc
lret
repz
adc
sbb
sub
xchg
loopne
fiadds
imul
out
arpl
imul
out
iret
iret
iret
or
addr16
sbb
ret
out
add
add
mov
push
clc
push
repz
scas
out
inc
sahf
aam
or
cld
ret
jmp
aas
insl
mov
notb
js,pt
mov
imul
inc
shlb
call
sbb
sbb
sbb
aas
sbb
repz
xrelease
add
gs
hlt
add
sarb
add
or
sub
adc
call
sub
add
pop
mov
xor
call
cld
insl
rclb
cmp
je
fsubrl
add
fldl
add
and
dec
jmp
add
jns
and
sti
jno
add
add
mov
dec
fstps
out
add
loop
push
jns
and
testb
dec
push
loope
gs
cmpb
or
add
jmp
mov
testb
adcl
in
xor
add
sbb
cmc
mov
jo
push
test
sbb
add
add
mov
add
movsb
inc
and
mov
xchg
mov
jo
mov
fcmove
add
jecxz
mov
je
cmp
mov
adc
subl
sub
jo
add
shl
out
dec
add
fbstp
enter
mov
mov
rcpps
cmp
add
xchg
mov
jmp
xor
jmp
outsb
ds
jb
adc
aas
push
enter
mov
adc
jg
ret
and
sub
repz
mov
insb
add
int
call
and
repz
add
divb
out
out
incl
add
and
push
add
add
add
or
dec
push
pusha
icebp
add
add
outsl
pop
arpl
mov
insb
jg
ja
add
pop
decb
cmp
idivl
cmc
stc
pop
xor
mov
lret
pop
jmp
bound
aam
mov
repz
mov
push
inc
inc
xor
call
mov
movsl
push
rcrb
sbb
out
sbb
add
sub
pop
test
scas
sbb
add
dec
rcll
aas
add
sbb
mov
jo
shll
dec
sarl
dec
sarl
pop
dec
roll
movsl
loopne
and
mov
add
lret
in
push
push
pusha
pop
and
mov
cmc
pushl
repnz
dec
stc
ds
call
add
cmp
add
or
jne
and
lret
addb
fmuls
jne
and
iret
fldz
inc
pop
mov
test
xor
add
sahf
mov
and
lock
mov
pop
inc
add
dec
mov
and
dec
add
cmp
push
mov
pop
jle
sub
add
wrmsr
fisttpll
mov
mov
adc
lea
xchg
mov
dec
or
cli
mov
mov
hlt
jg
mov
fadds
add
int3
lea
mov
or
add
icebp
jno
repnz
xlat
call
and
into
mov
enter
pop
iret
call
add
add
jnp
xchg
int
xlat
xchg
test
call
mov
rclb
cmpsl
ret
jb
scas
xlat
pop
fsubr
or
inc
mov
enter
cwtl
mov
dec
clc
sti
repnz
jbe
add
sbb
xlat
invd
int3
repnz
pop
xlat
iret
sbb
and
adc
xchg
lret
jmp
sbb
dec
call
add
add
scas
dec
xchg
outsl
xlat
pop
or
cmp
mov
add
std
sbb
and
sbb
adc
in
repz
pop
adc
lock
repz
nop
xor
outsb
jle
mov
adc
push
pop
push
mov
repz
push
fdivs
add
fidivrl
xchg
add
pop
fimull
inc
mov
add
adc
pop
sub
sbb
gs
jmp
add
sub
sub
jmp
fs
jmp
test
divl
mov
add
xchg
add
jmp
lcall
jp
add
xor
inc
xchg
pop
dec
lea
leave
add
notb
add
add
xor
and
adc
loopne
arpl
movsl
mulb
gs
push
mov
clc
adc
dec
sbb
and
jp
popf
adc
sub
jne
ja
add
mov
xor
fwait
sahf
int3
add
mov
add
fwait
nop
cmpsb
and
call
push
mov
add
add
lahf
lds
movsb
cld
sbb
push
or
lea
mov
add
in
jae
lret
push
ja
or
inc
jo
jl
push
cmp
add
jp
push
add
mov
fwait
fbld
add
arpl
pop
call
adc
hlt
ret
inc
fisubrs
call
add
jnp
iret
iret
int3
xlat
outsl
lret
cwtl
gs
sub
jg
and
orl
or
ja
mov
ljmp
repz
add
add
insb
inc
inc
out
dec
mov
stos
mov
push
pop
iret
decl
ret
adcl
out
iret
iret
lret
mov
lahf
ret
jmp
add
jb
add
xchg
bound
adc
aaa
lock
andb
dec
sbb
cmp
mov
add
sbb
push
sbb
mov
in
jge
call
cmc
insb
dec
int
in
imul
xchg
ja
lahf
add
mov
outsl
rcl
xchg
in
test
dec
hlt
add
add
xchg
jae
jne
repz
dec
repz
push
adc
and
jle
adc
mov
dec
imul
sti
je
je
std
mov
jl
data16
pop
add
dec
arpl
stos
xor
data16
rolb
jl
pop
arpl
test
bnd
add
add
insb
sub
adc
add
push
mov
test
cmc
add
adc
repnz
cs
add
ret
movsb
repnz
bound
add
sbb
and
scas
mov
test
sbb
xchg
or
clc
xor
out
add
stc
dec
out
or
test
lcall
or
mov
mov
inc
nop
mov
std
cwtl
hlt
jg
add
add
cwtl
xor
mov
cmc
out
ud0
pop
iret
cld
call
pop
enter
mov
add
adcl
mov
sbb
sbb
add
repz
pop
int3
mov
hlt
out
outsl
add
decb
sysenter
out
or
out
out
je
add
add
mov
xchg
mov
arpl
dec
add
jmp
add
xor
jo
iret
testb
outsb
scas
add
repz
nop
scas
jecxz
sub
adc
sbb
call
jae
repz
cmp
jmp
mov
cmp
insb
pop
mov
out
add
repz
mov
add
add
add
call
fwait
ds
lds
movsb
call
pop
or
cwtl
jmp
sub
mov
mov
cwtl
and
xchg
ljmp
test
xchg
movsb
hlt
iret
adc
sub
repz
sub
push
sbb
mov
add
pop
call
insb
add
add
aaa
add
add
call
std
loope
sbb
inc
jne
sar
and
sbb
ret
mov
and
clc
cmpl
jno
sbb
adc
addb
pop
std
decl
inc
adc
testl
and
stc
add
cwtl
jae
add
testb
popa
adc
add
add
sarl
inc
sarl
dec
jmp
xor
mov
inc
insb
and
std
icebp
xor
mov
call
pop
fisttpll
pop
ret
call
pop
fisttpll
pop
ret
call
pop
fstl
pusha
ret
call
fstl
pusha
ret
call
fstpl
pusha
ret
pushl
out
add
std
add
add
lcall
add
loopne
xor
incb
mov
sbb
sbb
pop
mov
inc
pop
pop
ja
rorl
sbb
add
add
mov
incl
rep
fisttps
hlt
out
pop
sti
into
cmp
cmpsl
add
ffree
mov
ja
mov
adc
xchg
jmp
cmc
ret
jnp
fimull
pop
ja
mov
add
jnp
testb
sbb
daa
add
or
cli
push
mov
movb
rorb
xorl
icebp
ds
xlat
incl
add
xchg
sbb
sbb
inc
mov
insb
mov
test
add
fidivrl
call
dec
jnp
or
xor
call
add
add
push
repz
push
call
jb
jnp
int
jne
push
jnp
shr
repz
adc
sbb
insl
imul
call
gs
pop
add
sub
adc
mov
call
mov
test
repz
sbb
in
push
hlt
pusha
in
popf
cmc
add
add
mov
into
add
xor
or
push
imul
push
xchg
mov
das
sbb
stos
add
add
push
mov
insl
inc
addr16
mov
call
mov
repnz
lret
je
and
femms
xchg
add
xor
inc
and
jmp
mov
add
lock
mov
punpckhwd
std
decl
jmp
mov
fs
lea
or
jge
lea
popw
pop
fstpl
xor
incb
jp
add
xor
mov
jo
push
inc
pusha
fstl
mov
fstl
or
add
into
ja
xor
push
add
add
mov
test
sbb
and
cltd
jmp
repz
dec
add
mov
cld
push
mov
jmp
mov
js
xlat
pop
jns
movsb
iret
adc
or
or
adc
out
sbb
loop
add
xor
add
add
scas
lret
call
sbb
dec
call
add
mov
cmpsl
in
clc
bnd
and
fiadds
ss
mov
jle
dec
add
add
call
out
jp
mov
mov
js
add
fdivrs
jmp
add
add
cmc
mov
cli
mov
mov
lods
imul
movsl
mov
cmp
pop
call
push
jecxz
call
loop
call
out
ret
or
adc
sbb
mov
push
xchg
ret
sbb
mov
lock
mov
sbb
in
jne
pop
add
add
notl
call
mov
mov
inc
pop
ss
jmp
outsl
adc
lahf
sti
adc
cmp
jae
psllw
pushl
jp
gs
loope
testb
xor
and
testl
and
icebp
push
leave
pop
roll
mov
add
lock
lea
mov
clc
sbb
hlt
fwait
stc
std
add
add
mov
add
lea
inc
mov
imul
pop
in
inc
rcrl
add
mov
sbb
push
mov
iret
jmp
test
call
fsubrl
push
push
sbb
mov
xor
ret
push
dec
add
add
pop
insb
pop
push
in
pop
inc
mov
pop
adc
arpl
je
std
xor
push
jl
iret
and
repz
mov
jle
add
loopne
push
dec
repz
js
jg
xchg
cmc
out
fcompl
jne
or
add
popf
add
ret
push
or
dec
call
add
add
repnz
mov
mov
mov
jo
mov
jne
push
add
out
mov
testl
in
jg
insb
push
adcb
dec
add
nop
fwait
add
xchg
repz
fs
test
mov
sbb
mov
std
push
test
inc
push
mov
std
push
cwtl
sbb
push
mov
push
xchg
cwtl
inc
call
add
in
repz
push
xor
rorb
std
jb
je
out
decb
push
je
insb
sbb
ja
repz
mov
cmp
std
xchg
out
sbb
mov
hlt
add
inc
add
add
gs
or
andb
rolb
add
lods
xchg
jo
add
js
in
addl
add
jl
or
cs
jle
or
and
xrelease
jns
call
sub
stc
test
add
repz
repz
sbb
mov
nop
inc
bound
data16
rorb
clc
pop
xlat
nop
xchg
pop
or
std
xor
mov
add
push
or
mov
or
xor
mov
adc
loope
lcall
dec
in
xchg
xor
nop
hlt
cld
jmp
push
dec
incb
add
daa
loope
dec
sbb
or
dec
sub
add
and
dec
mov
movsb
gs
mov
pop
xchg
xchg
hlt
push
pop
rorl
add
cmovo
push
mov
mov
sti
bound
jp
sub
repnz
push
pop
jo
cmp
iret
pop
push
out
dec
jg
mov
sti
inc
add
stos
add
cmp
pop
out
into
mov
jo
hlt
sbb
mov
jl
and
cwtl
hlt
cld
push
dec
sahf
insb
xchg
and
mov
add
clc
repz
pop
or
or
cmp
mov
aas
cli
loopne
rorl
call
ja
sub
sbb
scas
mov
icebp
and
daa
and
repnz
repz
cmc
push
orl
or
or
push
push
add
add
add
inc
movsl
pop
mov
add
addl
mov
jmp
mov
sbbl
xor
test
lock
push
mov
call
mov
jbe
and
jae
jne
mov
add
int
pushl
popf
movb
call
add
add
dec
lock
sahf
les
frstor
add
je
mov
stc
test
cmc
out
add
es
ret
in
test
push
cs
add
sbb
and
mov
jge
sbb
lea
mov
mov
enter
sar
mov
mov
hlt
push
enter
add
jge
fcoms
mov
jmp
cmp
add
pop
inc
mov
xor
scas
jmp
xchg
dec
and
lahf
push
lea
mov
hlt
movsb
scas
sti
xchg
dec
and
xchg
lea
lea
lock
scas
call
test
insb
jo
lea
add
or
lds
pop
out
xor
add
or
or
jns
call
push
xchg
add
fs
mov
pop
popf
stos
repz
rcl
jmp
inc
call
adc
mov
inc
call
adc
shlb
inc
outsb
test
out
out
add
repz
add
add
pop
insb
add
jns
jno
mov
jo
add
movsb
xchg
lock
add
cmpsl
pop
js
sbb
cmpsb
mov
movsb
xor
mov
stos
mov
repz
push
popf
loopne
pop
jne
out
lret
cmpsb
mov
movsb
mov
movsb
mov
movsb
std
mov
xor
insl
pushf
cmc
add
add
add
dec
repz
call
out
test
aas
jb
dec
or
test
clc
test
movsb
hlt
add
imul
or
cmp
hlt
push
xor
cmp
inc
or
push
enter
stos
or
pop
cmp
out
cmp
add
dec
int3
data16
pop
testb
adc
std
mov
mov
add
xchg
sahf
add
jne
jae
jne
or
inc
and
iret
mov
xor
push
imul
or
jo
cmp
mov
push
bound
mov
rorb
adc
mov
xchg
cmp
pop
fimuls
add
inc
dec
push
add
push
call
pop
push
icebp
jg
add
shrl
or
inc
mov
push
in
leave
shlb
mov
pop
xchg
mov
repz
aam
nop
je
push
repz
or
mov
std
or
push
push
pop
in
jmp
xchg
pop
in
adc
inc
mov
outsl
jnp
sbb
shll
mov
cltd
cmc
aas
pop
jle
mov
repz
add
mov
add
pop
aas
je
jb
or
call
hlt
filds
es
cmpsl
add
xor
pop
jnp
inc
and
outsb
inc
sbb
mov
or
mov
pop
les
and
or
flds
cmp
fcom
stc
mov
mov
add
sahf
mov
and
or
or
jb
or
cld
xchg
lds
cwtl
sub
push
cwtl
jne
loope
repnz
bnd
in
mov
repz
push
pop
movsb
std
xchg
inc
call
leave
popf
mov
push
std
jo
add
or
dec
mov
icebp
add
add
adc
mov
mov
add
cmp
incl
add
sub
shr
loopne
adc
iret
jns
shr
jne
add
cmp
jp
jmp
jns
mov
sti
jne
add
cmp
je
mov
vmaxps
lods
vmulss
push
mov
add
in
mov
xor
jge
or
sub
pop
inc
icebp
aaa
sti
mov
fistl
mov
fdivl
or
xchg
or
iret
mov
mov
mov
popa
pop
mov
mov
lret
xor
push
and
and
mov
xchg
mov
js
xor
outsl
mov
sbb
add
sbb
adc
pop
jl
mov
jl
test
fmul
push
pop
arpl
mov
xchg
inc
and
and
jne
pushf
pop
fnstenv
mov
hlt
iret
pop
jmp
adcb
je
call
jge
add
or
cmpsb
xor
mov
and
inc
xchg
bound
add
push
fwait
insb
dec
push
jne
add
or
mov
push
hlt
out
je
xchg
add
out
pushl
xchg
fiaddl
outsb
or
loope
adc
lock
push
add
jo
sub
repz
push
jb
add
pop
outsb
pop
int
lret
add
add
jo
xchg
or
test
fsubrl
xchg
out
mov
shll
hlt
insb
dec
hlt
mov
mov
daa
aas
mov
mov
cmpsl
mov
shrl
jb
nop
stc
cld
aam
lahf
call
rorl
fldl
loop
xor
call
enter
mov
nop
add
cmc
add
add
shrb
scas
and
xor
pop
fistpll
add
sbb
fucom
hlt
pop
pop
jle
mov
mov
add
hlt
push
lea
mov
das
imul
push
pushl
or
mov
sti
adc
sub
or
repnz
cmp
xchg
sti
call
clc
subl
add
inc
sbb
xor
sti
pushl
jno
mov
mov
jae
test
out
or
add
push
or
gs
adc
js
pop
sbb
ja
addr16
std
sti
xor
jae
repz
jmp
out
jae
mov
jmp
rcrl
jae
hlt
push
jmp
mov
in
call
add
add
and
popa
std
mov
jg
jnp
out
jae
and
jmp
arpl
out
push
loope
lret
nop
push
out
dec
sub
sub
nop
push
out
xor
loope
pop
nop
out
in
sbb
jb
push
lods
insb
lret
xor
call
mul
pop
xchg
mov
push
hlt
hlt
jge
add
add
shl
popf
push
shll
out
shl
add
daa
add
xor
cmp
mov
push
cltd
loopne
adc
rorb
cmp
mov
int
iret
pop
mov
icebp
jb
mov
repz
pop
inc
inc
cmp
enter
xor
call
and
sbb
and
and
cld
out
mov
inc
jmp
add
test
outsb
inc
in
inc
xor
lea
mov
sbb
orl
and
add
test
repz
popa
mov
jle
lcall
and
mov
aas
cmp
repz
and
pop
lock
dec
leave
mov
test
or
repnz
add
add
jbe
fdiv
jnp
push
int
add
mov
sbb
mov
test
mov
mov
inc
add
or
jle
push
inc
xor
inc
cmc
mov
enter
mov
adc
push
mov
outsb
ss
mov
adc
adc
movsl
mov
adc
add
mov
pop
add
dec
add
pop
mov
shlb
or
add
decb
rcr
push
call
or
push
xor
test
lea
add
pop
xor
movb
inc
std
mov
sti
lds
add
nop
dec
inc
std
mov
insl
add
cli
cwtl
aas
or
je
add
in
insl
add
add
xchg
testb
cwtl
repnz
mov
jbe
cmpb
ljmp
pushf
repnz
xor
add
syscall
jle
jmp
xor
sub
and
cmp
jmp
repnz
xor
cmp
sbb
aas
jge
push
mov
pop
jle
test
jmp
push
add
add
inc
sub
adc
ret
repz
jle
adc
sbb
aas
pushf
repnz
pop
mov
add
jbe
fnsave
dec
mov
jecxz
je
inc
push
xor
faddl
inc
sub
jmp
add
push
adc
jbe
mov
add
pushf
sbb
jne
call
add
jne
add
jecxz
mov
jmpw
xchg
jmp
push
dec
mov
dec
mov
jmp
mov
cmpsl
call
cltd
lea
jmp
js
inc
add
roll
divl
add
mov
sub
pushfw
out
jo
aas
testb
add
add
cmc
dec
cmp
adc
sub
subl
lahf
gs
shlb
in
mov
stc
adcl
jne
cmp
call
lea
xor
mov
and
jge
mov
ljmp
fs
mov
push
std
cltd
outsb
push
inc
mov
cmp
add
inc
imul
push
mov
mov
inc
mov
dec
mov
divb
push
ret
addr16
and
mov
and
cmpsl
ret
mov
add
and
sub
xor
and
xor
outsl
pusha
fildl
xchg
pop
fs
ss
pop
xor
cltd
scas
adc
cmp
and
adc
add
jge
add
mov
push
pop
cli
push
pop
aaa
or
jne
push
cli
out
push
mov
push
xor
or
add
pop
outsl
mov
addb
out
ljmp
jo
adc
sbb
xchg
inc
mov
adc
rep
repz
test
repz
add
add
sahf
xor
in
pop
cli
push
pop
cmp
or
inc
jne
test
sbb
outsl
sti
add
sub
xor
push
pop
jae
dec
mov
je
xchg
pavgb
mov
dec
pushl
push
jmp
je
jmp
jae
leave
dec
mov
xrelease
in
jne
rcr
clc
xrelease
add
add
ret
stc
pop
lea
dec
xor
sarb
sub
ror
mov
sub
or
aas
cld
pop
mov
lret
mov
lock
sarl
push
repz
int
inc
and
inc
jmp
test
pop
pop
xor
xor
test
add
gs
and
inc
mov
int
jge
jne
jmp
pop
sti
push
pop
scas
int
ret
dec
mov
les
xor
push
cmp
in
inc
cmpsb
push
or
ljmp
jo
jne
decl
add
pop
add
add
sub
and
sub
sahf
add
add
int3
push
cmp
into
mov
push
sub
cmpl
push
inc
jnp
add
inc
inc
xor
jae,pt
add
xor
loopne
aaa
call
pop
sub
mov
ljmp
adc
pop
adc
dec
or
pop
enter
push
mov
dec
aas
repz
add
leave
stos
add
add
push
mov
out
dec
test
mov
mov
inc
ret
jmp
rep
les
psrad
js
xor
xchg
scas
add
ljmp
mov
inc
sub
repz
add
jle
adc
or
popf
ljmp
or
add
pop
sub
xchg
hlt
jmp
jle
repz
insl
sar
test
repz
sub
add
aam
pop
add
incl
add
cmp
mov
add
adc
addb
bound
scas
cltd
add
push
das
and
fistps
inc
stc
cmc
and
mov
add
xrelease
mov
jb
jmp
aaa
data16
and
and
and
shll
fst
jne
aad
jmp
mov
jo
je
sub
fimuls
cmc
add
sub
or
push
xor
ss
js
add
push
adc
test
and
ret
add
add
nop
paddb
out
lods
xchg
dec
mov
mov
outsl
in
and
push
push
out
xor
faddp
cmp
add
shll
icebp
bound
mov
test
and
scas
pop
inc
mov
inc
and
icebp
out
xlat
fildl
cmp
or
or
test
sbb
mov
mov
pusha
fmuls
push
add
add
pop
and
movsb
sub
jae
cwtl
dec
and
fmull
mov
mov
adcl
inc
or
adc
jae
stos
push
movhlps
call
pop
sub
adcl
push
movsb
rep
adc
repz
add
jmp
mov
jle
adc
pmuludq
add
daa
jmp
sub
out
add
in
idivl
lret
out
icebp
rcrb
movsb
pop
add
mov
mov
ds
mov
mov
lret
jl
push
sub
out
add
dec
mov
lret
pop
inc
push
dec
sub
jmp
bound
andb
add
pop
fdivrl
dec
mov
xchg
xchg
jne
xchg
jne
popa
inc
jmp
jae
inc
jmp
xchg
out
cmpsb
call
or
popa
and
inc
out
jg
mov
jmp
fsubrs
xor
cmpsl
repz
cmp
cld
das
push
mov
stos
xor
call
loopne
cld
outsb
dec
pop
add
add
dec
inc
jmp
sub
repz
aad
rcll
cmp
inc
sbb
cmp
adc
decl
jnp
test
cmp
ret
repnz
call
mov
fld1
rorb
pop
pop
es
push
push
mov
sti
xor
xchg
je
cmp
add
insb
cld
cli
aas
or
or
push
je
std
jbe
jp
clc
xchg
jb
frstor
add
icebp
cmp
fdivs
shll
fnsave
xchg
pop
test
fdivr
aaa
shr
inc
sbb
fmull
xchg
ss
decl
pusha
fsubr
jle
jmp
imul
aaa
pop
add
add
pop
pushf
test
mov
or
std
ret
popf
les
int3
cltd
mov
xchg
add
std
iret
enter
or
cmc
into
call
rcr
imul
repz
jmp
jmp
fisttpl
sub
or
repz
call
mov
push
xchg
jmp
call
add
add
mov
lods
cmpsb
pop
popf
repz
hlt
arpl
mov
jmp
fldt
adc
adc
out
mov
mov
mov
sbb
lahf
and
inc
mov
add
outsb
roll
repz
inc
jo
pop
dec
push
int3
sbb
dec
icebp
test
jmp
sub
pop
or
call
add
insl
pusha
hlt
add
gs
pop
sbb
call
cmpb
int
push
jmp
jp
or
mov
repz
pop
adc
cwtl
nop
repz
sub
mov
sbb
fidivs
jl
jmp
push
lret
or
xrelease
add
add
addl
dec
and
jns
and
js
mov
jne
mov
jp
and
iret
test
and
sbb
xchg
testb
xorb
inc
insl
inc
and
xchg
mov
inc
leave
and
add
cmc
insb
inc
and
jl
fnsave
sbb
jns
mov
add
imul
insl
add
jp
and
sbb
repnz
scas
hlt
xchg
mov
out
sub
fnstenv
call
mov
out
sbb
movsl
jl
pushl
out
insb
add
lret
adc
addb
lret
lahf
into
fsts
dec
fldl
movl
add
mov
loope
and
add
lods
repnz
mov
mov
add
mov
and
std
lret
int3
dec
sbb
mov
push
jle
test
aam
call
into
repnz
int
mov
pop
xor
dec
adc
adc
pop
add
repz
push
mov
add
mov
jo
pop
testl
push
bnd
add
cli
mov
clc
inc
mov
xor
mov
int3
out
imul
pop
outsb
add
repz
cs
loopne
out
jl
ljmp
pop
imull
mov
and
add
lret
repz
pop
nop
mov
add
xor
sub
nop
dec
movsl
xchg
iret
repz
add
test
call
dec
xlat
js
mov
jmp
fwait
js
add
mov
sub
pop
loope
fwait
pusha
dec
add
inc
loope
mov
xchg
icebp
add
mov
push
icebp
fneni(8087
cld
lds
cld
mov
jmp
aam
dec
in
je
add
mov
jmp
mov
call
add
add
jmp
test
inc
iret
mov
ja
pop
pop
scas
stos
ret
icebp
data16
into
xor
xor
lods
jne
adc
int
aaa
bnd
rolb
call
push
int
sub
xor
add
pop
or
pslld
adc
jle
xor
ljmp
mov
add
jno
jne
mov
call
cld
lret
jle
shll
shlb
shl
in
jo
xor
push
dec
stc
mov
aas
nop
hlt
pop
sbb
out
add
test
xchg
inc
mov
inc
mov
cld
xor
adc
mov
insl
inc
add
add
mov
pushf
gs
lret
adc
or
lret
iret
xor
je
repz
mov
jmp
add
lock
sbb
mov
dec
mov
xor
ljmp
lret
addr16
sub
add
fisttpll
xor
sub
mov
push
xchg
dec
ljmp
push
pop
notl
add
fildll
test
inc
xchg
cmp
dec
out
or
fcompl
cmp
jecxz
aaa
repz
push
int3
push
roll
xchg
sub
stc
fiadds
repnz
add
aad
cld
jmp
xchg
fidivs
or
mov
rorb
push
cld
xchg
xchg
or
jmp
add
add
xchg
repz
sti
jbe
int3
sub
mov
pop
sarb
or
xlat
mov
mov
jmp
push
fistps
jmp
outsl
shll
insb
inc
sbb
repz
lret
in
in
lock
xchg
sti
push
mov
dec
push
pop
xchg
sub
add
lods
lock
mov
pop
pop
dec
sahf
ret
das
ret
roll
clc
gs
push
push
sbb
pop
inc
cld
call
xor
adc
jmp
dec
testb
test
cld
dec
mov
movl
jne
jb
je
push
pop
lock
lds
adc
add
xchg
imul
fildl
je
dec
leave
adc
inc
cmc
mov
pop
push
hlt
movsb
sti
outsb
ljmp
mov
jae
int
push
je
jb
andl
push
out
jnp
push
lret
push
mov
jge
inc
push
or
nop
int3
push
cmpsb
lret
pop
adc
add
mov
test
mov
add
lea
fsubs
lock
fistpl
jmp
fisubl
addr16
push
add
lock
add
adc
lret
mov
add
insb
xchg
test
inc
cmp
mov
insb
cltd
fcoml
jmp
jge
add
out
popa
push
push
sbb
decl
ljmp
jecxz
cmp
sub
pop
fs
loopne
add
in
je
push
loopne
popf
mov
jmp
mov
add
or
sbb
jp
dec
xorb
and
pop
mov
push
hlt
mov
imul
repz
jmp
gs
add
ret
sahf
in
mov
insb
dec
xor
data16
dec
insl
dec
gs
mov
repz
sbb
aas
in
cld
add
sub
cmp
ret
push
orb
jmp
mov
push
mov
add
repnz
jae
clc
jge
cwtl
add
mov
ja
add
add
mov
lds
repnz
movsl
pop
js
ds
mov
xor
lods
xlat
andb
cmp
sbbb
mov
test
repnz
clc
push
in
xor
addl
stc
cmp
add
test
mov
popa
or
movsb
mov
or
sti
adc
add
lret
add
sti
fiadds
pusha
in
and
movsb
jns
in
mov
dec
dec
int3
test
inc
mov
inc
mov
push
fsts
dec
int
sbb
jns
js
cmp
dec
or
adc
popa
inc
call
add
add
enter
repz
dec
jno
roll
add
add
cs
cld
or
leave
jmp
iret
add
popf
lret
hlt
jne
add
movsb
sub
mov
add
push
imul
pop
cmp
jge
adc
aad
repz
or
in
inc
mov
jmp
cld
or
inc
arpl
repz
add
mov
rep
aam
pop
repz
fldl
out
sbb
add
push
out
out
add
jmp
xchg
xrelease
mov
mov
add
ret
sbb
fwait
sti
sti
ficomps
xlat
pop
cmp
out
mov
fmuls
in
repz
imull
add
add
cmp
xchg
adc
repz
adc
and
movsb
push
rorl
push
shll
sbb
jb
repz
add
adc
test
testl
dec
and
scas
jmp
fcomps
stc
add
cmpsb
jmp
lcall
repz
fs
cld
call
mov
add
push
cmp
pop
and
call
xor
and
xor
sub
xor
cmp
xor
inc
add
and
mov
roll
and
fadd
inc
mov
or
pop
jo
js
push
faddl
push
and
insl
ljmp
inc
push
and
add
jl
sub
insl
fmuls
popa
les
hlt
cmp
inc
and
push
lds
jecxz
dec
or
lret
shl
pop
cli
lret
fmul
je
rcr
sbb
and
pop
pop
mov
xor
mov
xchg
cmpsb
fs
repz
mov
sti
adc
mov
outsb
inc
add
add
test
pusha
imul
popa
adc
mov
dec
push
adc
pop
xchg
xor
xor
out
hlt
push
repz
xor
adc
and
xor
add
daa
in
add
stc
repnz
jmp
test
ret
xor
test
call
sahf
pop
ret
sbb
outsb
lods
add
add
popf
insb
movaps
jl
call
or
add
into
jae
loopne
std
jo
lret
cld
fdivrl
inc
jmp
dec
inc
std
pop
cmp
je
fisubrs
pop
cmpb
adc
adc
add
sbb
call
ret
iret
jge
mov
lods
jno
faddl
add
xchg
jne
ja
jne
pand
push
mov
jne
scas
or
mov
lods
and
mov
lret
jle
pop
hlt
in
cmp
jmp
push
pop
hlt
fdivrl
jmp
hlt
push
roll
in
test
jmp
adc
bnd
loopne
addr16
and
pushl
ja
inc
cmc
outsl
add
add
add
pop
cmc
xchg
add
jne
mov
sbb
xor
push
push
std
adc
cs
sub
imul
push
cmp
ja
fstl
psubusw
and
std
mov
xor
sub
pusha
or
cwtl
lahf
add
push
add
mov
je
out
incl
add
sbb
ja
testb
xchg
les
mov
add
out
adc
dec
sbb
add
les
mov
add
negb
cld
and
stos
mov
add
fisubs
stos
int3
cmc
imul
js
jns
cld
pop
jne
add
adc
mov
fidivs
add
add
pop
sbb
int
andb
add
fstpl
and
out
mov
sti
fucomp
pop
mov
jge
bnd
add
jmp
fcoms
aas
out
sbb
mov
pop
fcmovne
ljmp
xrelease
sti
add
loopne
cmp
add
test
push
popl
push
popl
push
popl
add
loopne
fcmove
xrelease
repz
sahf
xchg
sbb
std
mov
push
pop
jmp
call
and
dec
inc
or
movsl
cmpsl
adc
popf
mov
incb
add
add
loop
push
add
out
sbbl
dec
pop
adc
dec
mov
mov
adc
incl
dec
idiv
xlat
lret
jb
adc
push
sarl
idiv
jne
out
shlb
adc
or
call
cmc
xchg
mov
and
mov
or
and
incl
add
cmpsb
mov
push
in
in
in
add
mov
add
mov
add
cmp
inc
pop
mov
xchg
lea
cmp
faddl
add
sti
sti
mov
pop
mull
mov
xor
push
jl
add
add
add
cmpsl
pop
faddl
mov
aam
push
fsubrl
add
add
jg
add
std
inc
push
inc
sbb
scas
mov
out
and
std
popa
jnp
add
sar
aam
and
jl
add
pop
cmc
fcom
fs
jmp
mov
repz
ss
cli
cmp
pop
pop
fadds
mov
loop
test
mov
dec
mov
addr16
jmp
add
add
mov
mov
add
jmp
add
jmp
or
repnz
pushf
pop
ljmp
repz
shlb
jmp
ss
mov
repz
call
pop
hlt
add
add
or
push
cld
testb
bswap
adc
jb
std
jnp
jg
test
test
jecxz
cld
or
repz
xorb
mov
rcr
cld
cmpsb
lea
test
pop
cld
xchg
cld
jmp
repz
push
xor
jb
rsm
jmp
or
sti
dec
fistl
add
and
in
shlb
add
lock
in
add
clc
mov
jle
aaa
movsl
cmc
repz
jo
std
decl
scas
push
test
mov
dec
mov
mov
xchg
jmp
lret
mov
in
pop
cmpsb
sbb
adc
xchg
lock
sbb
je
mov
jecxz
or
add
stos
jno
or
addb
fdivs
pop
adc
jmp
faddl
xchg
test
iret
lea
icebp
andnps
mov
jae
adc
lods
xchg
inc
pop
or
fmull
adc
fdivr
fcoml
faddl
lock
add
lea
testb
or
fs
faddl
in
insb
repz
mov
dec
push
sbb
lcall
hlt
jmp
daa
in
mov
data16
push
push
loop
cli
aaa
xchg
push
pop
add
hlt
jmp
jae
hlt
jmp
mov
mov
pop
add
add
mov
mov
addr16
cmpb
or
pop
mov
pop
int3
repz
add
ljmp
mov
add
repz
jp
push
data16
test
xchg
insb
inc
dec
add
xchg
sbb
loope
jmp
cmc
dec
cmc
popf
sbbb
and
hlt
cli
add
add
movsl
repz
jb
fistpl
lods
test
inc
jb
mov
push
jge
adc
mov
cmp
xchg
or
cmp
aas
or
mov
jmp
jle
jle
cmp
adc
push
push
add
mov
ljmp
out
add
add
add
sub
add
ret
adc
inc
xor
cmc
out
or
mov
in
mov
addl
je
and
aad
out
add
scas
xchg
sbb
inc
in
mov
xor
out
out
mov
outsb
jg
add
sti
or
mov
push
push
in
add
add
add
mov
stos
adc
or
push
mov
add
mov
jae
and
pop
cmp
cld
pop
sbb
xorl
dec
push
roll
add
inc
je
pop
dec
push
and
push
add
insl
push
fwait
pop
mov
cli
mov
add
int3
sub
sub
mov
add
repz
mov
clc
mov
jmp
das
ja
xor
bnd
add
inc
push
sub
lea
sahf
mov
test
aad
pop
sub
arpl
jmp
xchg
mov
ret
adc
mov
jmp
add
add
movsb
je
add
xchg
ret
cmp
stos
cmp
cmc
jmp
mov
iret
repz
bswap
mov
push
pop
stos
xor
in
mov
repz
dec
pop
jb
pop
jp
mov
mov
sub
cld
jmp
mov
add
out
jecxz
sub
mov
add
cli
nop
jne
add
add
aaa
mov
ja
xchg
in
inc
int
jne
xchg
mov
push
popa
xchg
add
hlt
add
js
bound
push
in
repz
imull
test
jne
mov
fcoml
add
jo
jne
jne
jo
std
inc
mov
gs
shll
jns
testl
add
add
sahf
ljmp
and
add
cmpsb
mov
ret
std
and
mov
mov
ss
add
and
jne
jge
mov
in
shll
and
idivb
fwait
add
push
adc
xor
jnp
je
mov
push
idivl
add
adc
sahf
or
push
filds
std
cltd
orb
mov
mov
add
dec
push
addr16
mov
out
loope
lahf
or
notb
shrb
xor
jo
mov
je
sbb
add
mov
test
pop
dec
xor
pop
push
push
lahf
xor
push
mov
call
jg
push
inc
or
add
int3
out
mov
jg
sub
add
dec
repz
dec
add
ret
repz
mov
rcr
inc
mov
ljmp
dec
int3
mov
ljmp
insb
and
sub
mov
push
mov
lcall
push
lds
add
push
int
and
int
xor
shl
test
fildl
addb
push
pop
out
mov
add
cmp
cmpsl
add
sbb
je
cltd
pusha
dec
xrelease
mov
adc
jmp
xrelease
xorb
lds
in
adc
pop
in
jle
xchg
sub
pop
cld
data16
les
add
add
nop
es
mov
shl
sti
mov
xchg
adc
daa
dec
cld
push
add
scas
pop
mov
add
insb
jo
or
adc
jne
sbb
adc
out
push
call
test
pop
xorb
push
fdivrp
or
stc
sbb
test
std
jne
add
inc
xorl
push
xor
mov
cmp
push
pop
pop
fildl
push
outsb
xchg
and
and
push
sbb
sti
addr16
xor
dec
dec
lods
add
cmp
test
xor
outsb
mov
cmp
mov
inc
add
add
mov
push
std
mov
add
mov
add
ja
cwtl
add
add
cwtl
insb
js
int3
scas
xchg
mov
mov
pop
push
pop
mov
dec
movsb
clc
or
int3
push
push
pop
mov
std
mov
pop
scas
adc
inc
add
sbb
pusha
repz
fimuls
mov
lahf
jo
cmp
add
mov
jmp
add
das
sub
es
push
test
jne
test
out
mov
push
xchg
arpl
into
cmpsl
mov
jmp
add
pop
xlat
inc
mov
pushf
inc
pop
jmp
adc
xchg
add
outsl
sub
insb
dec
sbb
js
out
dec
in
loope
mov
popl
add
pop
stos
add
and
fsubl
inc
jmp
mov
mov
int
outsb
inc
jmp
jg
jne
jg
test
fisttps
or
test
repz
je
movaps
or
cld
hlt
jmp
inc
jmp
andl
xchg
dec
mov
pop
and
add
mov
push
sti
cmp
in
mov
add
mov
xchg
add
cmc
add
add
stos
outsl
leave
lcall
fsin
stos
sub
inc
cmc
add
cmp
in
pop
lock
add
and
mov
push
clc
sub
pop
jbe
add
and
add
sbb
fcoml
add
add
sub
add
inc
mov
cmp
cmp
inc
add
push
ljmp
mov
push
pop
out
add
mov
repnz
repnz
stc
xchg
jl
xor
pusha
dec
pop
lds
mov
jnp
push
pop
ret
push
push
pop
repnz
mov
mov
jne
mov
or
add
add
add
cmp
mov
pushl
xor
mov
clc
loopne
ja
lods
inc
dec
or
iret
jge
xchg
push
xor
pop
add
sub
cmp
lods
lret
cmp
xchg
cmp
add
lock
jnp
jmp
or
jmp
add
dec
xor
pop
mov
lods
scas
add
add
mov
add
or
test
in
push
mov
mov
dec
popa
adc
dec
icebp
push
ret
inc
out
js
and
mov
cmp
jne
incb
fisttps
pop
inc
test
iret
js
mov
outsb
adc
frstor
nop
jb
or
clc
mov
inc
jle
iret
mov
mov
inc
loop
ret
sub
add
ss
mov
and
mov
xor
jle
pusha
dec
mov
mov
es
popl
xchg
cmc
jmp
repz
mov
or
lea
or
mov
jmp
lret
insb
scas
mov
mov
sbb
pusha
ret
inc
sub
test
popa
xchg
add
add
repz
add
adc
outsb
shll
mov
add
nop
adc
or
incl
mov
and
push
cmp
fbld
add
sub
std
jmp
fwait
mov
nopl
jmp
in
sub
cld
xor
mov
aaa
inc
mov
add
inc
stc
out
add
xchg
add
mov
cmp
push
mov
aad
mov
orl
jg
dec
adc
push
cmpb
test
int
add
int
inc
in
int
cmpl
std
cmpsl
or
or
xor
cmp
std
aaa
popa
mov
cmpsl
std
pop
in
mov
add
orb
or
xchg
pop
cmpsl
adc
inc
add
in
jnp
jnp
mov
lock
and
cld
arpl
jnp
imul
in
pushf
repz
cmp
push
xor
xchg
adc
pause
jmp
mov
ror
jmp
cli
jmp
notl
cmp
inc
sarb
add
or
jp
dec
xchg
incl
mov
ljmp
mov
inc
mov
or
stos
jg
flds
jae
lods
mov
pushf
popf
xor
testl
frstor
xor
jle
sub
inc
mov
xor
jo
cmpsl
cmp
es
ror
mov
jbe
cmc
and
add
add
xchg
inc
mov
mov
ret
mov
xchg
repz
mov
and
es
xchg
dec
imul
imul
cld
push
add
jmp
mov
and
in
jbe
add
add
out
xchg
jmp
cmp
push
xor
add
add
jo
cld
push
ljmp
inc
adc
push
jmp
xchg
jne
inc
adc
outsb
icebp
or
jmp
pushl
inc
addr16
loope
incl
mov
test
pop
adc
lds
cmp
pop
jne
negb
in
loope
push
mov
stc
adc
hlt
push
push
shrd
add
add
push
cmp
loop
push
sahf
dec
push
arpl
clc
cld
addl
jns
pop
sub
cmp
cs
mov
add
shrb
inc
hlt
mov
xor
lds
mov
in
inc
inc
adc
jl
add
pop
mov
cld
lret
loopne
push
add
add
mov
adc
lea
cmp
pop
fstps
add
dec
std
cltd
repz
int3
repz
mov
stos
rorl
dec
add
lods
iret
cmpsl
loop
imul
loopne
cmp
in
push
xor
lcall
stos
fiaddl
inc
insl
cmp
stos
fwait
sub
inc
arpl
add
add
popf
xor
or
mov
stos
dec
pop
loop
jns
dec
repz
dec
adc
jp
filds
push
ljmp
cmpsb
jle
cltd
call
add
fwait
pop
adc
pop
daa
xor
cmpsb
divl
xchg
addr16
xrelease
push
jne
into
jp
je
call
add
add
je
add
movsb
xor
scas
mov
cld
faddl
dec
mov
cltd
mov
jl
add
or
add
push
mov
shl
loope
mov
repz
cld
fwait
incb
xor
add
add
mov
lcall
into
or
decb
adc
icebp
pop
ret
dec
mov
add
add
add
mov
fnsave
add
popf
mov
idiv
adc
scas
pusha
xor
sti
cmp
ficoms
je
push
jo
jb
int3
adc
outsb
add
dec
movsl
std
jne
push
jo
cli
push
adc
and
mov
mov
xor
add
sub
mov
add
repz
add
out
mov
jbe
inc
mov
lds
adc
loope
lret
adc
addr16
cmp
jns
stc
aas
mov
add
or
fisubl
sbb
push
out
divb
add
sbb
mov
lcall
adc
sbb
mov
add
xchg
faddl
push
pop
or
add
add
enter
push
or
mov
repz
out
daa
stos
xor
mov
std
nop
in
sbb
out
add
add
mov
push
mov
repnz
pushl
mov
jg
inc
mov
or
pop
pop
int
in
adc
sbb
xchg
add
mov
stos
aad
mov
ljmp
out
mov
pop
cmp
mov
mov
dec
cwtl
inc
add
push
inc
jo
jmp
sbb
push
test
sti
hlt
out
add
popa
repz
ja
jl
cmpl
aam
add
jmp
movsl
test
loope
jb
in
sub
fstp
iret
repz
cli
add
add
lock
sti
xor
cmpsl
jbe
js
push
jns
ljmp
popl
xchg
div
mov
push
repz
adc
pop
xchg
and
jl
repz
push
fs
mov
test
add
movsb
cmp
jg,pt
testb
cmp
add
adc
jae
jp
or
adc
testb
add
add
add
std
adc
mov
js
push
loopne
adc
add
shlb
inc
sbb
mov
pop
push
mov
or
adc
std
adc
mov
push
ret
dec
mov
xchg
or
lcall
ss
add
aas
mov
adc
inc
sbb
xchg
lcall
lea
jnp
jns
pushf
call
lahf
mov
mov
ficompl
mov
test
add
push
filds
test
sbbb
nop
jp
xchg
sub
jecxz
fiaddl
push
sub
add
xchg
xor
sbb
dec
xrelease
jle
lret
cmpsl
les
out
test
push
sbb
fwait
test
stos
repz
stc
daa
add
repz
stc
inc
mov
mov
cmp
sbb
fwait
or
sbb
sahf
lahf
jae
inc
add
add
cmpsl
add
add
loope
sbb
rep
loopne
add
add
mov
adc
mov
jb
iret
adc
test
ss
iret
adc
movsb
aad
push
cwtl
xor
ret
mov
adc
repz
add
cld
push
push
cli
cwtl
or
mov
movsl
cld
jmp
int
sti
mov
add
mov
jmpw
mov
add
fwait
dec
xor
mov
dec
shlb
add
pop
inc
cld
add
cli
mov
sbb
divb
test
idivb
hlt
icebp
add
mov
movsb
cmp
sub
xchg
loop
jne
jbe
cmp
jp
dec
add
add
orb
call
loope
push
cltd
lock
sub
incb
in
incb
out
mov
je
sti
sub
ja
mov
bswap
xor
rorl
or
inc
mov
adc
xchg
popf
jae
or
add
add
add
lret
jl
dec
lcall
mov
pushf
test
jle
mov
sub
aas
hlt
decb
push
jnp
or
pop
xchg
push
or
mov
mov
push
hlt
aas
mov
lds
lods
add
repnz
jle
sub
mov
cmc
add
cli
adc
call
add
cld
std
adc
sbb
mov
daa
jmp
fwait
jg
stc
inc
mov
pop
inc
cwtl
pushf
stos
ffreep
mov
xchg
xchg
out
cltd
mov
mov
inc
mov
in
mov
mov
add
ljmp
xchg
cmp
mov
ljmp
add
dec
in
jmp
push
pushf
cmpb
insb
inc
cmc
pop
mov
add
in
repnz
jle
bound
sub
addl
cmc
or
jmp
movsl
mul
in
loop
shll
adc
mov
mov
mov
mov
add
dec
lock
sub
mov
mov
dec
pop
push
fisubrs
adc
mov
push
subb
jecxz
shlb
xchg
dec
incl
and
push
mov
add
mov
shlb
jbe
outsl
add
add
or
sbb
std
jp
mov
jp
and
adc
xor
and
shl
inc
mov
shll
inc
add
add
pop
cmp
lret
add
outsb
loopne
rcrw
pop
lea
roll
pop
iret
add
sbb
ret
lock
roll
mov
mov
ret
lea
decl
in
mov
push
fdivr
or
hlt
sti
mov
push
mov
add
add
or
pop
push
aam
aad
cld
dec
rorl
lret
or
dec
dec
mov
or
mov
inc
call
xchg
orl
or
pop
lock
add
adc
out
mov
push
clc
ret
pop
inc
lock
test
je
add
add
mov
je
mov
pop
movq
add
out
pop
mov
ljmp
stc
mov
mov
sub
or
lahf
mov
and
repz
adc
jmp
add
addb
and
jo
subb
cs
shrb
adc
add
shrb
dec
addr16
add
push
cmc
mov
cmc
sti
cmp
xor
iret
xrelease
xor
and
aaa
hlt
mov
pop
sti
test
into
lret
cmp
and
gs
and
push
add
jmp
xchg
jbe
cmc
pop
sahf
out
fstpl
xor
testl
cli
rolb
loopne
jmp
gs
add
push
xor
add
sub
psubw
add
dec
pop
repnz
push
idivl
xor
mov
dec
inc
and
testl
add
sub
jmp
cmc
mov
imul
data16
mov
test
add
repnz
adc
xor
sbb
cmp
add
icebp
add
sbb
add
push
add
mov
int3
inc
cmp
add
movsl
icebp
or
dec
subl
fmuls
rclb
fs
jns
nop
or
ficoms
sbb
dec
cli
scas
data16
cli
jo
and
adc
dec
in
mov
cwtl
dec
pop
jecxz
add
fldt
add
or
cmovnp
cmp
xchg
sub
xchg
mov
mov
inc
lods
sti
lret
inc
jl
cmp
add
jns
adc
add
xor
aaa
repz
outsb
mov
mov
call
sub
loopne
cli
inc
jl
jmp
jg
out
push
ret
pop
xor
jbe
sbb
add
lea
out
gs
or
sub
dec
loopne
xor
addr16
push
mov
or
loopne
xor
jne
sbb
fwait
jmp
inc
nop
jbe
sbb
shrl
fcompl
out
cwtl
mov
bound
test
je
aaa
jns
repz
mov
insb
add
mov
mov
add
xor
cld
call
enter
mov
and
ret
jge
mov
or
adc
lahf
outsl
add
and
jb
les
fcmove
mov
bound
jne
cmc
mov
jb
jno
mov
cld
jmp
hlt
add
or
iret
add
add
mov
xor
dec
enter
sbb
call
outsb
sbb
jb
add
jg
jp
aad
jne
mov
out
lods
jmp
test
testb
loopne
cmp
pop
jo
add
jl
andl
mov
std
aad
add
sbb
hlt
jo
push
test
add
jle
sub
js
cld
out
add
hlt
add
ljmp
sbb
jno
add
inc
xchg
std
add
and
mov
mov
pop
aas
shl
jae
dec
add
jnp
clc
push
int3
mov
addl
arpl
mov
push
pop
shlb
loope
mov
mov
mov
into
and
ud2
std
add
add
adc
jge
hlt
push
add
mov
mov
jb
push
mov
hlt
inc
std
jecxz
leave
jmp
in
sub
sbb
add
stos
xor
daa
jl
mov
ss
inc
pop
stos
cmp
ss
mov
xchg
repz
add
ljmp
add
or
add
rorl
xor
orb
jnp
insb
mov
int
mov
add
pop
cmp
cmp
jp
iret
add
sti
jg
hlt
bnd
sbb
jmp
mov
in
sbb
cmp
xchg
mov
or
xor
mov
add
inc
mov
and
call
jne
inc
add
xor
xchg
in
xchg
xor
ljmp
push
mov
sbb
icebp
das
test
into
cmp
hlt
sub
xchg
cld
ljmp
mov
std
call
icebp
call
cmp
add
mov
xor
sbb
mov
cmp
add
je
xchg
mov
mov
mov
pop
lcall
xor
adc
lret
jge
clc
jmp
pushl
movsl
enter
fisttpll
push
jnp
jo
jp
repz
sbb
adc
out
incb
and
incb
hlt
jp
xor
mov
add
add
repz
adc
pop
mov
adc
sbb
pop
adc
leave
pop
into
pushf
movsl
mov
mov
cmp
je
pop
add
popa
lock
mov
mov
repz
dec
add
loope
xor
aas
mov
inc
clc
or
andl
add
fs
sub
cld
or
subl
add
enter
repz
fwait
add
fildl
adc
out
jmp
hlt
adc
idivb
jmp
ss
testl
pusha
sbb
cld
loopne
pop
cs
inc
inc
ret
and
lahf
outsl
push
test
pop
aaa
add
add
pusha
mov
ds
push
js
jo
add
outsl
cwtl
add
repz
xor
retw
in
orb
mov
add
adc
xor
push
in
or
mov
mul
inc
mov
dec
rolb
jmp
shrl
add
jne
push
push
imul
inc
icebp
add
add
mov
push
sub
pop
imul
jae
dec
push
cld
jg
pusha
jl
in
add
and
mov
add
push
xchg
mov
sar
cs
push
incl
add
je
fidivrl
dec
xor
jle
mov
lock
in
add
mov
inc
add
add
pop
jge
jne
outsb
mov
mov
decb
loopne
in
cmpl
push
push
xor
movsl
testl
test
push
out
add
test
add
mov
jl
add
lock
dec
jmp
mov
push
clc
mov
add
adc
adcl
add
push
cli
addl
dec
pushf
add
pop
push
jle
hlt
inc
mov
sti
pop
lds
mov
mov
mov
add
fldl
daa
push
and
or
push
scas
call
pop
pop
mov
cwtl
mov
xlat
mov
sahf
sbbl
mov
xor
fs
std
push
inc
pushl
add
int
aaa
add
hlt
mov
jbe
and
xor
popf
ja
mov
jge
incl
xor
mov
cwtl
in
mov
push
jle
sbb
push
mov
out
fcoml
bnd
mov
aad
lea
test
sbb
cltd
je
repz
clc
ret
add
add
bnd
pop
jmp
sub
jmp
sbb
adcl
xchg
repnz
sub
jo
nop
cld
cli
fsubrs
arpl
inc
push
nop
mov
xor
test
or
adc
aam
push
inc
jmp
clc
inc
icebp
call
or
mov
add
add
or
add
xor
mov
das
sub
daa
inc
jmp
mov
jg
jl
jg
dec
add
add
adc
mov
repnz
mov
jbe
ljmp
cli
or
mov
push
xor
mov
add
adcl
jbe
or
add
add
stc
xor
mov
add
in
jle
mov
andb
or
add
xor
push
inc
xor
push
and
cmc
push
push
jecxz
mov
test
pshufw
repz
jmp
shll
pop
pusha
mov
or
push
lea
adc
adc
pushf
cltd
pusha
xor
lea
add
ret
cmc
and
cwtl
push
xchg
fwait
add
dec
out
push
xchg
addr16
or
pop
movb
dec
mov
add
lea
push
add
lcall
push
sub
mov
add
xchg
ja
mov
out
repz
lret
ret
add
repz
push
lahf
dec
add
repz
add
repz
int3
mov
pop
adc
and
dec
or
fiadds
mov
cld
jmp
out
pop
sti
sbbl
xor
sahf
addr16
add
jg
test
jo
repz
add
dec
sti
fs
add
add
xlat
or
fwait
out
and
mov
jmp
dec
mov
std
or
repz
xchg
js
xlat
stos
jl
sti
cmpl
cmc
shrl
xor
adc
incb
test
mov
and
jmp
pusha
dec
sahf
bndstx
adc
ret
add
add
adc
add
sbb
leave
addr16
mov
daa
fwait
int
nop
repz
into
ja
jp
mov
jne
jnp
mov
adcb
std
push
sub
jne
jo
mov
add
pushl
mov
je
sub
loop
lock
dec
cmpsl
xchg
add
int
xchg
cmpsl
xchg
pop
sahf
cld
in
test
sbbb
outsb
mov
test
test
leave
cmc
je
lods
fs
testb
rorb
pop
mov
testb
push
shl
add
inc
or
leave
repz
mov
hlt
lea
stc
lea
movb
lea
pop
inc
pop
adc
jg
lock
decl
and
pop
loop
lds
add
out
fwait
add
hlt
je
jmp
adc
notl
pop
stc
ljmp
add
mov
in
fildll
add
repz
xchg
pushf
repz
lods
mov
jmp
fldpi
xchg
add
add
add
add
add
ljmp
daa
fcompp
mov
int3
add
cli
add
jmp
jmp
add
ret
add
fwait
sbb
sbb
jmp
cmp
mov
call
jmp
xchg
loope
repnz
adc
add
fldenv
xchg
mov
jne
dec
or
push
rcll
nop
sub
repz
jnp
push
bound
cld
popa
push
xchg
add
mov
jmp
and
add
adc
sub
stos
xor
bound
add
adc
xorl
add
add
jae
cld
pusha
lds
imul
xor
sbb
sbb
sarb
es
movsl
xrelease
lahf
in
mov
fs
push
push
jge
xchg
add
xor
push
push
pop
lock
mov
add
pusha
jae
leave
add
add
lods
cmc
xchg
dec
cmc
shrb
mov
outsb
stos
or
cmc
mov
cmp
mov
sbb
int3
test
fadds
adcb
int
rolb
or
xor
movsl
popl
or
je
pop
iret
pushf
addr16
add
adc
pusha
pop
mov
add
std
fwait
add
adc
mov
rorl
xchg
jnp
add
mov
mov
pop
xchg
movsb
jae
add
decl
pushf
mov
repnz
outsl
inc
add
repz
mov
cmpsb
or
mov
cmpsb
dec
sbb
lret
lcall
add
add
outsl
dec
jecxz
mov
add
jae
rorl
enter
es
xchg
xchg
jge
fwait
aas
xchg
mov
je
xor
daa
and
xchg
and
call
js
insb
mov
daa
mov
jno
mov
cld
gs
jmp
jb
hlt
aaa
and
add
xchg
ficompl
add
xchg
fisttps
xchg
xor
or
mov
repz
fcoml
fwait
fwait
aad
repz
mov
mov
xchg
push
es
and
testl
or
cmp
push
pop
adc
testb
lods
inc
decb
fwait
in
push
xrelease
jo
rclb
js
add
add
and
add
jne
pushl
cld
adcb
cmpb
or
add
mov
mov
out
je
xchg
test
cmc
je
pop
jecxz
jne
jg
inc
in
call
mov
jb
lea
adc
add
push
call
mov
lock
xor
add
add
add
mov
add
pminsw
idiv
inc
sub
negb
movups
sti
mov
push
mov
mov
pop
ja
or
add
add
fdivs
cld
add
pop
adc
divl
leave
repz
pop
js
push
or
push
test
add
pop
aas
js
add
add
xor
lock
fs
push
adc
ja
inc
pop
inc
inc
cmp
cmp
pop
and
dec
repz
mov
adc
mov
sbb
gs
subb
fildl
sbb
xor
ret
cmpb
lahf
pop
fadd
add
add
mov
pop
sahf
jno
lahf
mov
inc
xchg
mov
insb
inc
add
push
aas
pop
repz
out
lea
movl
or
std
cmp
add
mov
out
and
shlb
cmp
sbb
add
mov
imul
or
cmpsb
jle
scas
add
add
inc
add
cli
jmp
xchg
je
std
lea
add
jg
xadd
mov
nop
xor
repz
mov
andl
outsb
add
mov
mov
add
or
fnstcw
and
push
call
or
jns
fadds
add
cmp
add
repz
xor
js
int
mov
in
push
cmp
jb
xor
clc
add
add
lcall
jne
push
hlt
cmp
inc
je
push
hlt
sahf
jne,pn
jbe
xor
mov
pop
ss
idivb
adc
jb
add
orb
imul
inc
mov
icebp
divl
cmc
and
adc
xchg
jae
add
js
sbb
jl
adc
pop
call
or
mov
rcrb
add
call
imul
rcrl
xorl
fmulp
imul
lea
xchg
add
dec
cmpsl
aas
gs
add
and
mov
add
add
out
mov
pop
scas
push
push
pop
push
test
imul
and
adc
add
or
sti
jge
shrb
push
dec
mov
jmp
add
insl
inc
add
add
mov
mov
add
adc
data16
bnd
add
outsb
scas
pop
lods
and
int
jmp
ljmp
add
jae
xchg
outsl
add
jb
lds
mov
sub
mov
fimull
push
mov
cmpb
lods
out
call
add
mov
lods
loop
mov
repz
sbb
adc
add
or
and
jmp
mov
sub
mov
xchg
mov
out
ret
lea
addb
fcoml
je
add
xor
adc
in
and
xor
or
mov
fistpl
test
add
jae
std
xor
sub
pushf
adc
aaa
add
out
add
jno
std
dec
pushl
pop
mov
jp
pop
mov
mov
ret
cmp
add
cmc
sbb
cmp
andl
sbb
sysenter
jbe
je
inc
addr16
cmp
bswap
data16
push
jne
add
aas
dec
sub
in
xlat
sbb
inc
add
aaa
jnp
or
mov
imul
adc
sbbl
mov
add
mov
add
mov
icebp
mov
sub
mov
std
jns
adc
mov
int3
mov
movaps
mov
add
stc
mov
add
outsl
push
hlt
add
jb
xchg
ret
subl
cmp
fisttpl
jo
outsb
popa
jp
fnstenv
push
add
mov
clc
jge
xchg
sti
push
jo
outsb
cmp
int
hlt
jmp
frstor
and
pop
lods
in
add
mov
xchg
dec
jp
out
add
pop
std
jae
testl
fwait
xor
fchs
movsl
xchg
add
cmp
mov
add
mov
sbbl
push
push
jp
sti
test
rcll
repz
adc
mov
fsubl
jbe
loope
in
clc
dec
jns
ds
sarb
jae
ss
decl
gs
iret
xor
jmp
mov
sub
in
popa
xchg
repz
pushf
insb
mov
add
add
xchg
cld
jo
mov
sub
js
jmp
xchg
repz
sub
jmp
addr16
cmp
pop
addr16
ja
icebp
mov
decl
add
mov
add
xor
stc
and
push
decl
std
ja
and
gs
xchg
movsb
xchg
cmc
idivb
clc
mov
add
jb
adcb
repz
xor
add
fwait
xchg
movsl
push
push
cli
lcall
jo
std
adc
xchg
sub
jge
ja
cmp
repz
push
lahf
xchg
lahf
push
lea
push
lea
aad
stos
jbe
xchg
data16
mov
cli
out
sahf
jl
int3
mov
add
insl
add
sti
cmpb
add
adc
clc
pop
mov
cmovo
imul
cmc
clc
xor
pop
xlat
cmpsl
mov
orl
mov
sti
or
add
mov
and
jecxz
out
lods
imul
es
imul
rep
mov
jmp
add
nop
jo
jbe
mov
hlt
jmp
pop
lcall
add
pop
outsb
testl
jne
addr16
pop
aad
cmp
mov
out
out
pop
cwtl
xor
and
mov
sub
out
incl
shll
jbe
inc
cwtl
xor
outsl
add
or
jne
mov
add
xchg
push
mov
mov
outsl
shll
js
cmp
std
xchg
and
inc
jns
jb
jl
js
jbe
jns
aam
in
jmp
jns
leave
push
loope
cld
aam
jbe
fnstsw
add
push
jge
mov
icebp
or
ja
lds
icebp
ret
lret
or
addb
push
mov
mov
lcall
cmp
repz
lcall
into
je
add
icebp
std
xor
sbb
pushf
adc
aaa
add
in
pop
icebp
add
cmc
cmpsb
ret
insl
repz
sti
pop
hlt
mov
les
psubusb
cld
cmp
xor
cmp
add
popf
pop
ret
cli
insb
and
lahf
or
int
in
pop
jae
add
mov
xor
cmp
xchg
rorl
add
xor
popa
jne
orl
jmp
loop
add
pop
sub
lret
add
fsubs
leave
add
icebp
lock
cmp
add
add
cwtl
lock
call
out
fcomi
mov
popf
add
iret
push
ret
rcll
std
jns
adc
fnsave
add
push
out
add
xor
rol
leave
pop
dec
pop
add
insl
fcomi
mov
repz
jb
add
xchg
clc
ret
jecxz
cmp
repz
dec
add
add
clc
adc
fstps
push
jmp
pop
int
call
sbbb
pop
add
xchg
jle
int3
repz
imul
faddp
add
inc
fmulp
repz
cmp
cmp
jns
add
xchg
pop
cli
mov
mov
add
add
repz
cli
add
popl
mov
adc
add
outsb
fldl
jmp
leave
jno
aaa
push
leave
test
fsubrl
mov
xor
aas
jmp
shll
test
data16
adcl
xor
jne
sbb
andb
mov
sbb
mov
sbb
ja
cmp
jp
andb
sarl
insb
leave
out
jb
scas
push
fs
add
call
xor
shlb
cmc
add
xchg
pusha
sub
add
hlt
add
int
push
cmc
cmp
cmp
adc
push
mov
mov
test
stc
sbbl
mov
ret
push
imul
lcall
add
in
pop
cmc
add
std
dec
inc
add
push
gs
clc
test
cmp
das
hlt
outsl
push
cmpsb
into
add
mov
and
and
or
and
mov
cmp
ja
add
add
pop
ret
pop
iret
push
jp
push
pop
add
add
add
in
sar
dec
arpl
add
incl
xchg
jle
fs
imul
xor
inc
mov
sub
cltd
js
inc
mov
jmp
mov
test
hlt
call
lock
aad
sub
jmp
cmc
add
xchg
pop
jae
ljmp
add
pop
hlt
jmp
sarl
call
jnp
ret
rorl
jmp
inc
push
pop
daa
jo
repz
mov
jle
mov
sub
and
pop
mov
ljmp
fildll
adc
and
fcomip
jmp
add
lea
push
mov
popf
add
add
pop
ret
call
push
idiv
movsb
repz
sbb
jbe
rclb
nop
repz
dec
xor
inc
lock
loopne
add
sub
lea
ret
dec
jo
loope
hlt
mov
xor
adc
push
je
loope
add
insb
cld
orb
pcmpeqb
mov
push
int
subl
add
add
out
jo
dec
add
loopne
push
mov
popa
in
jbe
add
in
movsb
in
enter
lock
push
dec
icebp
add
dec
push
lea
push
call
cmp
mov
cmp
inc
mov
lds
insb
cld
jmp
lods
mov
lea
std
incl
add
je
push
pop
lock
xor
pop
inc
and
add
mov
mov
fs
mov
sbb
decl
sbb
or
iret
jp
xor
inc
jmp
fnstcw
jb
cmc
mov
jb
test
pop
call
in
or
pop
mov
fcmovnb
or
mov
inc
mov
add
shlb
faddp
stos
pop
mov
sub
lcall
and
jl
leave
jecxz
pusha
pop
call
mov
arpl
repz
mov
sbb
cmovbe
mov
hlt
jmp
loope
int3
adc
sbb
js
cmp
mov
add
add
std
cli
arpl
push
sti
outsb
enter
mov
loope
mov
cli
insl
pushf
mov
jmp
xchg
repz
pop
adc
mov
mov
jmp
xchg
jmp
popa
xchg
fimuls
ja
jmp
jle
sub
repz
push
push
jmp
insb
add
add
inc
push
push
mov
jle
dec
mov
cld
add
sarl
fistps
pop
mov
add
repz
inc
jl
leave
adc
ret
mov
and
les
repz
jl
stc
xchg
mov
mov
adc
lret
cmc
test
jns
addl
add
pop
js
cmp
int
cmpb
dec
add
jne
xlat
adc
gs
js
jge
add
xor
add
jecxz
in
std
out
add
adc
mov
loopne
std
lea
mov
ljmp
je
lcall
jae
js
clc
add
std
push
int
incl
add
jo
jg
mov
pop
push
cmp
jno
pop
fcoms
adc
shll
imul
je
in
add
push
mov
fsts
out
cmp
decl
push
push
pop
or
inc
jle
mov
add
adc
add
mov
push
jg
or
incl
add
ss
fsubs
test
insl
xlat
mov
loop
and
adc
inc
repz
add
shrb
loopne
punpcklwd
scas
sbb
add
xor
mov
scas
pop
ret
fs
pslld
inc
ror
cmpsb
hlt
fs
outsl
mov
cmpsb
inc
cmc
jmp
add
fidivl
lods
pop
idivl
orb
mov
js
daa
test
cmp
fld1
nop
inc
femms
xchg
inc
nopl
jmp
xlat
popf
jp
sub
cwtl
outsb
add
adc
call
dec
xor
jmp
jmp
dec
pop
cmp
insl
pop
jns
pop
pop
fdivr
shl
cld
push
add
add
dec
push
movsl
xchg
mov
xor
cmpsl
cli
lock
sub
pop
adc
pop
add
push
xor
sub
jns
dec
aas
faddl
orl
add
or
adc
call
int3
leave
add
pushf
push
mov
xchg
enter
xor
mov
adc
pop
lret
es
std
je
add
push
jl
inc
lock
je
out
add
jo
std
je
gs
je
repz
je
repz
ja
enter
pop
push
jmp
cmovo
icebp
dec
mov
push
mov
jecxz
shld
cld
mov
cmc
call
orl
or
outsb
xor
jne
insl
les
cld
decb
pop
adc
add
cmpsb
inc
mov
xlat
aas
je
pop
lea
push
std
and
scas
cld
sbb
jne
jne
and
push
repnz
mov
mov
push
pop
mov
jmp
adc
addr16
das
or
jg
pop
std
mov
je
punpcklbw
lret
pop
add
push
decl
jge
xchg
pop
adc
add
out
mov
iret
aas
je
repz
mov
pop
cmp
lcall
repz
or
fucomip
xchg
sbb
push
lcall
sbb
cmp
jae
jb
das
push
sub
into
push
pop
push
ja
pop
rolb
or
add
add
mov
lret
fadd
and
and
filds
daa
lock
pop
push
call
call
in
iret
bound
add
add
mov
add
scas
fsubr
push
shll
add
xorl
add
adc
xor
nop
pusha
rclb
test
mov
add
add
sbb
ret
mov
into
mov
repnz
dec
push
lds
add
lods
mov
push
ret
xchg
outsb
inc
int
ret
sti
xchg
xchg
inc
int
popa
or
pusha
push
add
cmp
push
push
add
xor
cmc
add
jp
or
iret
xor
mov
xor
mov
mov
and
add
add
jmp
mov
push
and
out
mov
add
inc
and
hlt
push
call
out
xor
xor
idivb
ljmp
jp
sbb
xchg
and
es
je
gs
push
testb
mov
push
mov
pop
xor
addr16
jmp
shlb
jo
mov
add
mov
mov
getsec
clc
adcb
push
arpl
inc
imul
sar
adc
notb
pop
jl
lea
mov
add
repz
pop
or
ss
pop
or
cmovne
inc
cmp
inc
subb
add
roll
out
repz
add
movsl
out
push
xor
test
add
psadbw
add
jg
jle
jmp
scas
shlb
fldcw
pop
push
inc
xor
pusha
stos
icebp
out
add
add
ficomps
add
repz
rcll
jnp
or
xchg
ljmp
clc
inc
jmp
add
int3
repz
cmp
movsl
bound
adc
dec
push
pop
dec
addr16
jb
out
push
adc
hlt
add
xorl
test
mov
sahf
in
in
lret
pop
cld
pusha
int
test
mov
pop
cld
jo
push
jmp
bound
repz
sti
cmp
cmp
sbb
adc
sbb
add
loope
xor
push
jae
jmp
mov
push
jecxz
mov
push
push
sub
or
mov
inc
clc
pushf
xor
mov
rcll
pop
in
add
add
add
outsl
clc
lea
add
jo
hlt
in
loopne
cmc
icebp
std
adc
outsb
xor
in
je
ss
lock
sub
add
test
je
or
sub
push
sbb
leave
imul
cli
outsl
adc
outsl
adc
inc
or
popa
mov
hlt
inc
sbb
cmpsl
std
jne
leave
popa
popa
xor
sti
jb
mov
xlat
inc
je
jecxz
add
mov
addr16
xor
call
pusha
mov
dec
dec
mov
movsl
mov
into
pop
add
add
pop
pop
sub
test
push
aas
bnd
lea
inc
xchg
iret
rorb
pop
lea
mov
dec
push
xchg
sbb
and
shlb
or
add
push
push
pushl
rol
sub
repz
fucomi
bnd
cmp
addr16
add
add
cmp
into
test
and
mov
mov
sub
add
xchg
or
fmul
xchg
adc
je
jmp
addb
mov
dec
xchg
pop
push
out
stos
pop
push
pop
jmp
iret
ja
daa
hlt
or
andl
jmp
cmpl
xor
jno
subl
add
out
add
pop
mov
js
inc
add
pop
clc
int3
sub
movsb
ret
repnz
pop
push
jno
sbb
push
pop
jne
xorb
sbb
out
push
pop
add
push
aas
imul
sti
xorb
fcoml
out
ljmp
ret
sub
repz
add
shlb
rcrl
cmp
push
ljmp
fsubrp
add
push
mov
jmp
dec
inc
in
xor
outsl
or
fdivr
ljmp
std
bound
dec
arpl
jne
mov
jg
sbb
bound
insb
sub
cmpsb
jmp
pop
in
push
call
add
fisttpll
inc
fs
dec
add
mov
add
mov
add
cs
mov
movsb
pop
leave
mov
andl
push
and
push
adc
cmp
push
std
inc
into
dec
std
rcll
add
push
std
btr
jge
sti
xlat
cmpsl
lea
imul
add
ja
xchg
cs
aas
mov
mov
lock
clc
or
dec
jge
xchg
int
and
push
pop
sti
jge
pushf
and
pop
or
std
pop
stos
and
ja
push
repz
xchg
jmp
pop
or
add
scas
lds
and
std
imul
fstpt
add
add
mov
push
add
xchg
out
mov
je
and
outsl
add
fwait
mov
sub
cmovle
mov
call
add
jmp
add
push
jmp
lods
stos
and
mov
gs
repz
mov
in
add
mov
xchg
lsl
repz
add
push
nop
mov
sbb
mov
lds
int
jbe
adc
data16
rcl
testb
test
fucom
imul
adc
sbb
mov
jb
push
xchg
aam
jg
mov
add
sbb
fstps
int
cltd
dec
fbld
nop
loop
push
add
ret
adc
add
or
sbbl
push
clc
and
mov
daa
call
add
rcr
and
sub
adc
pop
hlt
icebp
addl
inc
and
mov
pop
mov
and
mov
dec
push
mov
shll
sti
je
jo
and
add
leave
icebp
je
jbe
and
cmp
addl
adc
sbb
inc
and
lahf
push
mov
sub
js
inc
jo
ja
push
ror
and
mov
incl
mov
shl
andb
mov
and
movaps
decl
aaa
and
cmp
cmp
aaa
or
add
add
jo
dec
je
leave
call
inc
test
mov
push
cs
jne
rcr
and
cs
xchg
jns
jo
inc
inc
jo
mov
les
mov
dec
repz
fadd
fwait
imul
icebp
ret
repz
push
mov
jno
jecxz
adc
outsl
into
fwait
add
add
rorb
pop
xchg
ljmp
rdpmc
aad
fsts
jle
jmp
push
sbb
cmp
repz
cmpsb
icebp
jp
dec
mov
pop
xchg
daa
movsb
mov
jmp
mov
push
ret
push
bound
push
rcll
push
call
adcb
add
leave
sti
iret
mov
cld
mov
lods
or
call
jb
mov
cld
lahf
sbb
sub
out
jmp
pop
sbb
pop
sbb
pop
cld
or
lahf
test
cld
push
push
jbe
inc
xchg
bound
mov
in
add
cmpsb
stc
sti
incl
add
mov
jns
pop
adc
call
into
es
adc
push
movsl
xor
xor
inc
xor
out
xchg
xor
dec
loopne
add
fldcw
idiv
je
in
sahf
clc
add
out
add
imul
sub
mov
mov
add
imul
mov
into
dec
pop
add
add
testb
mov
mov
addr16
add
pop
popa
sbb
mov
dec
pop
jge
push
fiadds
sub
and
popa
pop
fsubs
xchg
mov
mov
ja,pn
push
fbld
cwtl
mov
mov
dec
mov
lea
add
std
movnti
xchg
loope
and
add
xor
sbb
sbb
sub
cmc
pop
adc
add
lea
test
rep
test
mov
fisttpll
inc
pop
lcall
mov
jge,pt
scas
cmpsl
mull
mov
mov
movb
fcoml
call
add
add
fwait
push
sbb
dec
jg
fadd
push
jge
pop
test
xor
std
cmp
or
dec
sub
inc
ret
and
or
sti
dec
cld
or
dec
jbe
push
les
sar
sti
xchg
jecxz
jbe
inc
in
aam
dec
xchg
data16
ja
pop
mov
jbe
add
add
push
dec
cld
bound
pop
stos
push
pop
mov
test
js
jo
push
lret
or
push
jmp
jmp
cmp
push
jbe
lret
aam
dec
jg
aas
dec
jg
and
lods
aaa
mov
lea
loopne
dec
call
jbe
std
jne
fwait
std
and
sub
add
lret
or
cld
jmp
je
ss
add
cmpb
je
pop
testl
adc
dec
std
adc
notb
add
push
or
fdivs
adc
clc
xor
push
clc
xor
or
jno
call
push
call
cmovo
orl
push
call
add
add
mov
fistpll
or
mov
inc
pop
add
lahf
std
rorb
cmp
mov
pop
or
and
sbb
cmp
fdivr
stos
pop
mov
cld
and
in
cld
sbb
les
sar
mov
add
pop
and
mov
or
or
add
add
inc
into
lret
sbb
pop
and
daa
pop
jns
xor
iret
orl
stc
mov
loope
jg
fadd
or
fiadds
pop
js
sub
movsl
adc
pop
repz
adc
jbe
pop
out
or
jl
push
mov
inc
add
pop
inc
pop
cmp
call
add
add
iret
scas
jecxz
out
repz
and
adc
out
mov
jo
outsl
jecxz
pusha
dec
adc
mov
fdivrs
loope
push
lahf
push
enter
push
rcrb
adc
inc
mov
fisttpll
sbb
fcmovu
sti
xchg
fistpll
push
loop
add
add
add
arpl
ja
repz
rdpmc
push
hlt
sub
inc
jmp
and
mov
dec
cld
xor
cmp
sub
adc
mov
js
push
lcall
push
inc
and
pop
push
adc
rcll
mov
testl
cmc
sub
add
loop
add
add
and
pushl
je
jns
fmuls
xor
push
aas
mov
jg
cmp
addl
std
adc
bound
decl
pop
push
mov
pop
or
jmp
adc
mov
call
test
aad
movsb
jle
add
imul
je
ljmp
xor
cmp
sub
call
pop
out
adc
pop
xlat
cld
loop
pop
imul
mov
jmp
adc
call
cmp
pop
pop
imul
add
dec
daa
aad
pop
add
dec
mov
cmp
je
cmp
jnp
cmp
stc
push
add
add
int3
repz
jl
cmp
pusha
movsl
subl
gs
shrb
les
lahf
bound
call
loope
rcrb
or
jl
jnp
mov
mov
in
xlat
jg
mov
lods
dec
repz
or
lods
pop
pop
dec
aad
sahf
mov
mov
cltd
inc
pop
jbe
or
add
mov
dec
xlat
inc
xchg
test
test
aad
jmp
add
int
or
mov
push
bound
repz
or
sahf
sti
aam
in
jmp
addr16
cld
push
or
aad
fcmovb
stc
mov
fcom
rolb
mov
dec
jne
sbb
jne
add
add
sbb
xchg
in
push
xor
lods
lods
sti
in
jmp
inc
mov
jne
lret
add
cmp
push
popf
cld
dec
dec
icebp
cmp
incl
jg
inc
gs
ret
sub
in
sbb
outsl
shll
mov
loop
adc
add
xor
call
orl
and
mov
add
stos
imul
mov
sbb
mov
sbbl
inc
sub
add
mov
repnz
pop
dec
push
and
mov
sub
je
add
test
shll
add
adc
jae
add
cwtl
leave
sti
or
add
shrb
adc
sar
pushf
mov
cmp
inc
pop
add
adc
adc
in
push
sbbb
cmp
jns
cmpsb
add
iret
jecxz
rorb
dec
dec
add
add
pop
xchg
adcl
std
pop
iret
enter
addr16
repz
jg
inc
sarl
add
add
js
mov
aam
scas
fiaddl
je
cmp
mov
stos
xchg
cmp
xor
sub
js
and
pop
inc
xlat
sbb
jg
fisttpll
shrb
inc
adc
lods
or
sub
jmp
mov
jg
pop
scas
fst
push
scas
and
add
in
push
lret
out
pop
daa
xchg
mov
xchg
jb
in
jns
mov
inc
jbe
mov
xchg
call
iret
notb
stos
jg
push
jb
in
cltd
mov
add
bound
call
mov
xor
test
sub
push
dec
push
sbb
mov
movsb
addr16
inc
jl
add
adc
or
add
add
out
neg
or
call
xchg
mov
cld
push
fidivrs
add
imul
cmp
pushl
adc
dec
insl
imul
popa
std
je
inc
shll
mov
and
repz
std
add
ret
mov
inc
add
push
push
sbb
ret
rorb
add
mov
xchg
xor
test
and
mov
test
jb
call
rcll
enter
push
mov
ficoms
jl
dec
cmpb
pop
sbbl
add
sub
jae
ret
mov
lret
pop
jns
mov
xchg
cltd
shll
pop
jns
and
dec
dec
add
add
adc
add
or
ffreep
sbbb
ss
mov
fmuls
lea
sbb
decb
dec
scas
sbb
push
lea
call
decl
stc
mov
fistps
cmp
jne
or
cmpsb
je
mov
outsb
and
or
add
add
xchg
bnd
or
cmp
add
insb
xchg
insb
fwait
sub
pop
jmp
jg
hlt
jmp
xor
in
sysexit
inc
jnp
iret
sub
aad
outsb
adc
lahf
xor
lahf
jecxz
ret
add
mov
cmp
add
repz
cmp
and
xor
add
add
aam
mov
in
or
call
imul
fstps
ret
movsb
pop
idiv
pop
inc
ds
movsl
lcall
stc
mov
sbb
pusha
mov
in
enter
sbb
xchg
mov
daa
mov
mov
and
repnz
push
adc
xchg
call
ror
adc
add
add
js
inc
clc
xor
jecxz
aas
div
push
adc
sbb
mov
lea
lea
les
call
idivb
les
stos
call
test
or
xor
jmp
xor
mov
add
xor
cmc
fildl
add
mov
imul
jo
add
add
insl
testb
mov
dec
je
add
and
repnz
mov
add
push
mov
cmp
mov
sarl
sub
dec
dec
add
mov
loopne
mov
cmp
mov
fwait
daa
and
dec
dec
add
mov
add
add
jae
sahf
xchg
out
xor
arpl
or
push
ret
cwtl
xor
xor
cmp
lea
sub
aaa
std
xchg
shlb
std
adc
jmp
add
push
cli
hlt
loopne
dec
inc
jmp
add
adc
pop
push
mov
ss
or
add
add
or
jo
xor
aaa
daa
jno
jnp
cmp
xor
mov
jo
test
xor
repz
jg
cmp
jne
mov
mov
mov
add
dec
inc
jbe
pop
loopne
cld
iret
cmp
sub
repz
aam
push
add
ds
and
jmp
add
test
sti
dec
push
pop
xor
cld
push
popa
mov
add
enter
pop
loopne
cld
dec
cmp
fsts
rol
mov
repz
cmc
or
repnz
stc
push
std
cwtl
ds
cmova
popf
js
or
pop
repnz
adc
add
lea
mov
add
mov
pop
jmp
pop
cmp
cmc
je
xor
pop
decb
mov
out
jg
mov
sbb
mov
cmpb
or
add
cmp
pushl
inc
std
jne
jne
sub
pop
push
lock
xchg
std
bound
push
call
xchg
and
pop
add
add
roll
mov
pop
mov
jo
inc
push
cmc
test
mov
or
das
std
sbb
sbb
mov
mov
dec
xchg
sarb
add
mov
add
arpl
rorl
fs
xorl
std
es
inc
mov
pusha
icebp
das
std
cmp
lret
dec
add
add
add
mov
add
push
or
test
outsb
lea
sbb
or
mov
cmp
pop
pop
xchg
xor
movsb
subl
or
push
das
sbb
ljmp
test
aam
mov
insl
xchg
lock
call
repz
mov
add
add
add
sar
and
add
stos
in
mov
outsb
stos
andnps
jge
xchg
xor
sub
xchg
jmp
rorb
cmpsl
mov
xchg
dec
add
cld
inc
adc
cmpsb
jge
adc
mov
sub
mov
ss
pop
in
fmull
out
adc
pop
testb
or
int
mov
jb
std
pushf
ss
rorl
insl
xchg
pushf
ss
cltd
push
mov
stc
repz
shlb
push
xchg
out
aaa
push
cmc
jg
ja
arpl
or
out
mov
repz
sbb
lea
cld
into
aas
push
mov
lcall
lcall
add
mov
idiv
ljmp
add
adc
sbb
test
fsubr
cltd
xor
addl
stc
ljmp
jo
add
repz
jbe
in
pop
ljmp
xorl
push
rcrb
or
jp
aas
lock
std
jne
mov
push
xor
cmpsb
mov
std
adc
testb
add
add
loope
addb
pop
call
inc
or
mov
mov
push
add
loopne
sub
xor
insb
std
sbb
sub
addl
int
in
mov
cmp
sbb
loopne
jecxz
in
dec
fdivrl
xor
es
adc
add
shl
cld
mov
or
movl
std
int
mov
add
add
push
lcall
repz
mov
xor
shrb
pusha
ss
aam
cmpsb
in
imul
add
pop
add
insb
mov
and
shlb
adc
das
jg
arpl
clc
fildll
dec
adc
add
lret
mov
jl
adc
leave
jno
add
push
outsl
rorb
or
push
jno
js
sti
sub
or
adc
cmp
xor
bswap
mov
mov
dec
xchg
push
repz
or
cld
xor
sub
add
cmp
adcl
loopne
add
add
leave
mov
call
popl
ror
std
adc
jbe
fucomi
lret
or
or
xlat
lock
pop
add
xor
mov
jo
add
test
push
cmpb
push
std
decb
cmp
jge
lea
fwait
push
call
add
add
js
call
xorl
je
pop
jo
or
mov
decb
push
jo
cmpb
sub
std
jle
cmp
jl
dec
decl
xchg
in
mov
fcom
xchg
mov
cmp
jb
incb
mov
clc
mov
mov
and
dec
add
add
std
stc
sbb
andl
fiaddl
lea
jae
out
into
cld
loope
sbb
jb
addl
push
and
xchg
pushl
xchg
andb
add
es
js
pop
test
jae
je
dec
lea
inc
notl
push
or
jecxz
test
mov
icebp
daa
std
inc
add
jae
add
mov
repz
sbb
xor
nop
int3
sbb
sub
mov
mov
sub
out
repz
insb
shrb
mov
cmp
add
add
add
xor
stc
or
mov
das
jg
jmp
sbb
mov
sbbl
jbe
sub
out
mov
add
jge
add
ficomps
sub
sub
fcomip
push
in
hlt
add
mov
test
jb
cmp
add
repz
jb
stc
push
xchg
bound
xor
mov
das
and
test
sbb
ret
data16
jp
aad
cmp
dec
and
cld
insl
enter
iret
sbb
add
sbbb
je
cmp
inc
xchg
inc
in
sub
xor
insl
dec
movsb
jecxz
inc
jp
dec
jno
es
aas
jo
stc
fdivs
mov
je
filds
mov
add
push
pop
or
fs
roll
aas
neg
sbb
add
testl
lea
fists
movsl
aaa
mov
pop
fisttpl
add
shlb
sti
in
mov
int3
dec
test
pop
push
inc
mov
std
add
arpl
decl
test
push
lea
inc
cmpl
movups
xor
test
jecxz
jmp
scas
outsl
lock
push
je
movsl
mov
xchg
stos
lock
jge
xchg
xor
or
rorb
add
add
fwait
xchg
std
jns
or
xor
je
popf
mov
clc
lea
add
in
jns
cmp
sbb
sbb
push
aam
xchg
mov
mov
cmp
add
sub
jg
add
sbb
mov
xchg
mov
pmuludq
pusha
adc
negl
add
sbb
shrl
outsl
sub
das
jmp
sti
dec
andb
stos
outsl
mov
jp
jge
adc
call
mov
jne
adc
loope
iret
es
sbb
repz
arpl
pop
shlb
cld
or
call
shrl
dec
mov
cmp
xorb
sbb
sub
jmp
sbb
add
or
lahf
add
xor
das
int3
sub
jae
sub
xor
in
xchg
xchg
jl
dec
xor
shlb
inc
jmp
jb
je
push
mov
xor
pop
addl
addl
add
sub
out
sub
push
pusha
call
ret
stc
movb
sti
test
jno
out
jns
imul
xchg
jp
call
mov
push
adc
and
outsl
negl
std
ljmp
or
push
pop
or
push
sbb
inc
mov
push
xor
mov
dec
adc
je
jo
and
sub
sub
xchg
jmp
add
and
imul
pushl
fsubr
mov
rcrl
pop
ret
test
in
adcl
push
lcall
inc
adc
test
ret
fbstp
xchg
sbb
sbb
mov
iret
mov
inc
inc
add
rcrb
or
std
mov
call
inc
add
add
iret
mov
jmp
sar
decl
lock
mov
cmc
cmpl
add
movsl
mov
or
mov
adc
adc
dec
fbstp
mov
dec
lods
repnz
jg
sbbb
sbb
add
add
and
mov
mov
add
negb
pop
rcr
les
add
lcall
jbe
xor
addr16
xchg
sbb
mov
jno
jnp
movsl
xor
sub
or
ss
xlat
inc
cmp
push
ror
fwait
jo
fwait
mov
sti
add
sub
add
add
or
fs
cmp
add
movaps
xrelease
in
mov
mov
mov
cld
aam
sarl
sbb
nop
xrelease
push
push
sub
test
sub
pusha
les
cmp
cmp
adc
add
add
jbe
add
add
xchg
loopne
or
push
movsb
jl
add
outsl
clc
cli
cmp
test
std
push
xor
add
or
shrl
sbb
shrl
or
ja
in
lret
leave
cmpsb
pusha
mov
data16
push
add
push
lock
mov
add
pop
cld
sbb
lock
add
loop
add
add
push
add
xchg
add
sar
repz
loop
rorl
push
mov
mov
inc
popf
rorl
mov
sbb
or
mov
or
mov
ret
xchg
insl
add
sbb
incl
add
pop
lret
lea
push
mov
lock
add
dec
xor
and
and
pushf
inc
std
je
into
incb
push
xor
dec
or
int3
sbb
add
movl
les
lret
jo
pushf
cwtl
lea
inc
cld
cmp
sub
xchg
or
hlt
jmp
leave
add
add
mov
sub
mov
jns
mov
add
push
push
int3
addb
cwtl
xchg
es
sub
mov
xor
push
jg
test
push
std
xor
ljmp
jo
add
leave
idivl
ficomps
hlt
stc
push
push
sub
je
and
add
sub
and
mov
cld
rcrl
add
adc
jbe
fnstenv
xchg
mov
dec
call
fmul
cld
hlt
test
pop
jno
icebp
cmp
lahf
push
data16
and
push
stos
mov
inc
jmp
mov
jg
mov
jl
call
addr16
call
mov
inc
add
add
andl
mov
in
cmp
icebp
add
pop
xor
lods
test
mov
iret
cmpl
aas
int3
and
add
xor
jecxz
or
das
cld
mov
jecxz
nop
lea
cld
stc
insl
int
enter
cmc
insl
rorl
adc
add
pop
push
push
or
push
pusha
sub
push
sbb
incl
add
pop
push
adc
add
mov
add
hlt
push
decl
sbb
std
fldenv
sbb
incl
iret
sbb
xchg
inc
cmc
inc
xor
xchg
gs
fiaddl
dec
inc
subl
sbb
add
or
jne
push
add
push
push
incl
add
dec
sbb
mov
hlt
aas
mov
or
mov
push
or
push
pop
inc
sbb
sbb
or
pushf
add
add
inc
ljmp
stos
jae
jmp
dec
gs
mov
mov
ljmp
mov
mov
xor
sbb
add
add
sbb
sbb
inc
jg
cwtd
pop
cmc
adc
lea
xor
jmp
repz
rol
and
out
jmp
sarb
insb
sbb
ret
lea
test
hlt
push
mov
je
add
iret
cltd
mov
cld
out
add
add
jo
cld
push
pop
cwtl
cmp
in
bound
aad
mov
repz
or
mov
ljmp
dec
sub
mov
repz
jns
in
dec
sub
outsb
sub
and
aam
push
inc
lret
jmp
adc
int3
dec
std
std
push
dec
mov
ret
add
add
add
scas
std
std
pop
mov
outsl
and
stos
call
add
mov
in
jbe
add
in
push
orl
aas
loopne
cmp
lea
xchg
std
inc
js
int3
sbb
std
push
or
push
std
loop
add
outsl
adc
add
add
jne
mov
sar
dec
adc
test
xchg
lcall
adc
dec
and
stc
push
push
or
imul
dec
repnz
cli
push
sbb
rclb
ljmp
xchg
inc
call
mov
sbb
clc
cmp
incl
sub
adc
rolb
add
pushf
decl
add
jbe
sbb
clc
cmp
inc
jno
stc
shl
bound
cmpsb
jmp
ret
xchg
js
mov
pop
dec
movsb
or
add
fadd
fwait
sub
add
movsl
ret
jmp
mov
hlt
jmp
adc
add
addr16
pop
xchg
jmp
xchg
mov
sti
test
add
inc
add
inc
inc
lds
xchg
jmp
mov
xor
test
add
inc
sti
push
aaa
scas
xor
jmp
ljmp
mov
xor
add
push
sub
cld
ljmp
ds
add
jmp
popf
mov
cld
xchg
xchg
push
pop
sub
ss
add
mov
push
push
negb
test
xchg
repz
or
sbb
dec
push
add
enter
push
cld
pop
jo
mov
pop
sti
aam
add
push
sbb
adc
adc
cld
das
aaa
xor
add
bound
push
bound
xlat
lea
push
test
mov
jge
add
mov
sub
adc
cmp
clc
cmp
sbb
pop
cmpl
lea
sbb
mov
fmuls
add
mov
push
xchg
popf
inc
and
add
and
mov
or
iret
mov
icebp
add
and
mov
add
add
inc
adc
add
mov
loopne
mov
mov
push
adc
xchg
or
push
push
shrl
movsb
cmp
mov
inc
ret
stos
mov
and
or
or
sbbl
or
cmp
std
xor
add
add
cmp
cmc
leave
ds
mov
mov
mov
sub
xchg
jmp
add
ljmp
sbb
adc
jecxz
div
jmp
add
lds
sub
cmp
cmp
repz
pop
xchg
jmp
fbstp
jge
add
add
mov
je
outsl
iret
rorl
push
jo
cwtl
cmpsl
and
adc
add
fistpll
cld
adc
and
mov
jmp
xchg
call
stos
lahf
dec
jg
out
xor
adc
movsl
mov
lea
pop
shll
jmp
sbb
jmp
arpl
add
pusha
pop
inc
in
sbb
jmp
jecxz
cld
jo
or
inc
or
push
xchg
sub
repz
repnz
rorl
add
mov
repz
out
je
int3
imul
mov
jmp
cmc
addl
inc
rcrl
dec
push
lea
and
pop
pop
lods
call
mov
jno
rdtsc
push
add
add
add
movsb
cmc
addl
inc
xchg
repz
push
mov
ja
pop
lods
call
mov
jo
psllw
add
gs
adc
xor
or
bnd
daa
xor
xchg
ret
cmpsl
sti
decl
test
mov
add
roll
clc
jae
cwtl
and
push
jle
add
add
pop
repnz
or
mov
or
add
ret
pop
fcoms
dec
or
mov
xchg
enter
enter
jge
test
add
test
jae
or
mov
and
or
add
inc
cld
jnp
or
mov
repz
mov
add
movsl
repz
cmpsl
add
add
scas
or
xchg
jmp
repnz
jmp
cmp
addr16
sub
pop
jmp
inc
xor
out
bnd
add
mov
xor
fmul
add
jmp
add
add
hlt
jmp
jle
iret
mov
js
add
xchg
add
xchg
jmp
xchg
sub
rcrb
leave
mov
rcll
add
or
and
cmp
fsubr
repz
xchg
mov
add
or
and
addl
repz
sbb
add
call
insb
or
enter
call
je
scas
enter
jg
fwait
insb
int3
add
add
gs
add
xchg
dec
push
jae
and
hlt
add
jne
mov
xacquire
cli
jbe
and
xchg
jo
incl
dec
cmp
cmc
jns
daa
cmc
icebp
push
lea
add
in
call
imul
add
or
and
push
mov
and
jmp
sub
or
mov
push
mov
cmp
add
mov
add
loop
jnp
or
add
push
pushl
mov
jmp
jae
sar
add
add
or
or
sti
cmp
jl
sbb
jb
gs
xchg
das
decl
sub
stos
pop
pop
jo
roll
clc
or
or
mov
adc
sahf
inc
aad
jb
jno
scas
add
scas
sti
mov
add
inc
jmp
add
outsl
neg
or
inc
mov
add
dec
mov
out
ret
in
adc
or
stos
sbb
xor
in
scas
lds
test
jmp
inc
in
xor
mov
xchg
mov
test
add
icebp
rcrl
bnd
roll
icebp
sbb
push
jmp
or
add
data16
cld
jb
fadds
xrelease
adc
test
repz
insb
push
repz
add
iret
add
mov
mov
call
rolb
push
insb
int3
sbb
test
or
nop
rol
call
and
jmp
jbe
or
add
sbb
testb
mov
xlat
sub
fildl
fisubrl
stc
add
inc
xor
cmp
idivb
adc
std
jae
out
add
testb
mov
xchg
out
out
xor
add
sbb
add
cmc
xor
fistps
nop
ds
inc
mov
jb
je
jns
sbb
arpl
addl
lods
add
mov
add
aad
sti
lcall
jg
roll
stos
xor
add
testb
jne
push
push
mov
cmp
add
sbb
sbb
test
xor
out
mov
add
loop
push
fs
call
inc
inc
jmp
inc
push
pop
testl
push
add
add
dec
jecxz
push
mov
sti
adc
push
dec
hlt
inc
mov
sti
xchg
shlb
lahf
inc
jae
sub
lds
lea
test
mov
xchg
andb
add
pop
repz
xor
jmp
add
mov
push
mov
enter
adc
cltd
add
repz
scas
xlat
rolb
mov
fildl
repz
outsl
lret
adc
adc
mov
xor
test
add
mov
enter
test
cmp
clc
cmp
xor
xlat
mov
sbb
loopne
sbb
jl
xlat
test
sbb
or
xor
shr
xrelease
add
add
out
sbb
jmp
add
popa
inc
repz
jo
rcrl
orl
add
call
sub
mov
das
sub
jne
lds
roll
repz
repz
xor
or
add
add
add
xchg
jp
aam
xchg
add
or
add
mov
mov
xor
mov
cmp
es
ljmp
stc
mov
aaa
jmp
inc
jne
std
idiv
std
psubsw
jmp
int
popf
testb
gs
in
nop
clc
add
test
or
add
repnz
adc
icebp
and
add
mov
testb
xlat
xor
test
imul
push
mov
add
pop
insb
xor
mov
or
loopne
inc
pop
jmp
sar
fdiv
cmpl
sub
enter
and
xchg
cs
je
loopne
arpl
jl
mov
add
sbb
adc
add
cmp
fsubs
push
ljmp
adcb
js
add
xchg
shlb
xor
out
repz
mov
push
mov
hlt
repz
stos
jecxz
gs
pusha
loope
nop
scas
roll
sbb
int
jp
mov
add
fists
cmc
or
outsb
popl
add
or
sub
xlat
leave
sbb
jmp
outsb
dec
or
adc
rcl
sbb
lret
call
sbb
pop
jmp
cmpsl
outsl
loopne
scas
rcl
sub
bnd
cmp
jp
add
and
sbb
xchg
jmp
pop
mov
jle
movaps
add
mov
loope
icebp
add
incb
add
sbb
mov
add
scas
xchg
or
pushf
and
jmp
repz
jb
sbb
mov
xchg
rcrb
jne
les
jmp
jb
jbe
jge
mov
add
aad
call
adc
add
mov
testb
add
add
cmc
lods
dec
push
js
call
xor
pop
jne
jb
jne
rol
mov
repnz
push
ret
loopne
call
push
out
or
inc
shl
add
mov
mov
imul
or
scas
cmp
arpl
lods
std
jg
cmp
add
jns
incl
bnd
add
add
inc
pop
les
mov
or
sbb
add
int3
adc
ljmp
dec
push
xor
xchg
iret
add
mov
xchg
pop
jae
testb
sbb
cld
push
cmp
test
xor
add
call
mov
or
in
js
or
sbb
jae
add
ljmp
in
fdiv
cmp
sub
dec
in
mov
hlt
adc
or
lahf
mov
jg
repz
pop
adc
jg
add
pop
inc
clc
sbb
mov
fmuls
aam
dec
shr
or
scas
xchg
mov
or
mov
hlt
or
mov
mov
add
scas
pop
add
sti
dec
pop
enter
jns
push
sbb
decl
add
out
pop
adc
or
inc
xor
add
or
or
insl
dec
testl
aad
sti
jmp
testb
bound
add
mov
inc
in
addr16
jmp
add
adc
sbb
inc
jmp
popl
inc
jle
add
aad
sti
or
repz
repz
push
or
cli
incl
jmp
aaa
in
shrb
jl
fimull
jmp
jae
mov
push
lea
in
xor
std
sbb
outsl
call
add
inc
shl
push
call
and
decl
addr16
push
outsl
in
pop
pushf
add
jns
adc
mov
rcll
and
movsb
repnz
hlt
je
add
add
popf
ret
loop
psadbw
sti
jmp
sbb
mov
cld
repz
cmc
mov
add
pushl
sbb
inc
xchg
insb
mov
push
movsb
cli
and
mov
sub
hlt
int3
stos
sti
xchg
mov
add
sbb
cmp
add
sub
mov
jg
cwtl
sbb
sbb
out
push
add
sbb
mov
lods
lea
test
add
add
jl
je
pop
push
lret
jbe
daa
movsb
mov
jmp
imul
repz
js
jbe
sub
jmp
in
addl
push
pusha
jecxz
ljmp
rep
js
out
mov
mov
add
xor
sub
add
pop
jo
mov
es
je
push
inc
jmp
or
xchg
sbb
mov
aam
subps
iret
sbb
push
aas
add
fcompl
cmp
xchg
jae
call
jae
iret
setbe
stos
xchg
xor
jb
jb
cmp
or
xlat
mov
add
add
adc
add
scas
repnz
fldl
insb
inc
xchg
cmpsl
jp
call
movsb
jg
bound
push
jbe
cmp
rcr
add
loopne
jbe
jge
data16
insb
aam
int
xor
mov
ret
stos
mov
cmpsb
adc
push
adc
hlt
mov
std
xor
or
add
testl
outsb
or
test
call
pop
pop
in
mov
add
cmp
daa
lock
or
cld
movsl
test
push
jmp
cmpsl
call
subl
cld
lea
add
mov
xor
or
fsub
and
add
fnstenv
dec
addr16
mov
hlt
lret
stc
mov
xor
inc
jmp
xchg
ret
call
mov
ret
push
pop
xor
add
mov
lcall
dec
mov
push
std
pop
and
out
or
add
dec
in
mov
dec
or
loope
idiv
mov
push
dec
je
repz
add
add
nop
out
test
sub
cmc
iret
add
pop
add
push
hlt
je
xor
sbb
jl
add
div
jmp
subb
stc
and
loope
dec
movsb
je
add
rcrl
bnd
outsl
lock
ret
call
jo
insl
sbb
rorb
mov
add
ret
add
in
je
call
xor
nop
insb
inc
movsl
cmp
ficomps
repz
aam
insb
inc
sub
jne
adc
addr16
xor
sti
sbb
jmp
arpl
pop
mov
xor
xor
in
fisttpll
insb
xchg
js
jp
mov
xlat
roll
je
add
jae
jne
adc
mov
inc
pop
add
push
inc
jne
lds
xchg
mov
xchg
or
pop
cmc
add
and
jmp
movsb
data16
outsl
lock
add
mov
in
sti
cld
cmp
jmp
add
mov
std
jne
sti
outsb
adc
push
std
incl
add
and
xrelease
cmc
or
movsl
hlt
repnz
mov
fwait
ret
ret
dec
mov
scas
std
jne
add
add
in
test
test
mov
repz
je
js
or
inc
xchg
xor
jl
or
pop
dec
add
mov
in
repz
lods
adc
add
add
rcll
xchg
mov
incb
push
add
aas
lret
fiaddl
mov
inc
in
push
std
mov
or
pop
pop
aad
pop
dec
adc
push
pop
add
pop
lahf
adc
cmpsl
adc
sbbl
adc
or
mov
and
mov
mov
inc
repz
addr16
cmp
add
adc
mov
sti
add
add
cwtl
xchg
mov
aam
or
out
xchg
movsb
pop
adc
test
mov
jbe
jo
movsl
inc
xchg
mov
push
cli
add
repz
dec
movsl
insb
int3
lahf
fisubrs
test
pop
xor
xchg
idiv
xchg
inc
or
or
int3
pushf
sbb
add
add
enter
mov
mov
mov
cmpsb
das
xchg
jge
xchg
xchg
cmpl
add
xorb
ss
push
xchg
mov
lret
mov
jo
or
sub
aas
jmp
sub
jo
repnz
jge
add
adc
lds
lahf
pop
stos
sti
sti
push
jb
or
sti
add
push
jbe
data16
add
int
sub
mov
data16
out
outsl
inc
push
fdivl
mov
mov
xor
jo
cs
or
out
mov
pop
or
pushf
add
testb
clc
and
mov
dec
aaa
or
add
add
outsb
aaa
and
mov
pop
sti
xor
add
insb
call
in
pop
hlt
add
jbe
or
popf
push
mov
jp
jl
or
fcoms
or
std
mov
add
fwait
xchg
xor
mov
std
xchg
or
mov
or
push
inc
rclb
xchg
push
inc
incl
add
add
ljmp
xor
bswap
jmp
xlat
ud0
push
sbb
addb
adc
cli
jae
mov
pop
fwait
mov
and
cmp
call
fisttps
repnz
repz
lock
rorl
hlt
jmp
add
ss
jae
rep
inc
add
add
sahf
dec
clc
inc
mov
adc
stos
lds
mov
jmp
push
cmp
jle
outsl
push
js
mov
jmp
pop
push
mov
add
jecxz
dec
outsb
and
out
stc
and
adc
fiadds
mov
sti
add
icebp
jl
insl
add
jg
add
mov
add
mov
rolb
jmp
add
mov
push
repz
aam
loop
jmp
jecxz
sti
xchg
sub
xor
jb
sti
jmp
adc
add
pop
inc
icebp
mov
call
xchg
test
arpl
mov
mov
js
call
mov
inc
popf
xchg
jb
in
jne
jmp
add
repnz
add
add
out
sti
orb
adc
mov
movsb
inc
push
stos
addb
dec
cltd
dec
jmp
je
push
je
dec
je
je
dec
mov
ds
jmp
js
and
stos
call
lea
adc
scas
and
movsl
add
or
repnz
ret
adc
add
rcrb
xchg
call
test
insb
subb
and
mov
dec
adc
and
in
mov
or
je
mov
mov
and
cmp
lret
test
add
and
and
jbe
or
inc
adc
sub
fs
mov
or
xorl
add
add
jg
and
jne
add
xchg
ret
or
mov
and
push
fs
cld
imul
dec
add
cld
jle
fstpl
dec
repz
push
push
dec
out
jmp
add
xor
mov
repz
out
sahf
dec
fadds
negb
test
cmp
call
out
aas
add
inc
out
add
add
add
sub
testb
mov
pop
add
repz
out
push
jmp
dec
jl
sub
out
adcb
add
push
mov
add
mov
or
jge
bound
add
out
call
sahf
xchg
add
jl
divb
add
add
jnp
sti
je
popf
sti
pop
lock
ss
push
sub
fadds
sbb
or
jmp
popa
cmp
xor
addb
divb
mov
cs
int3
repz
pop
cmpsl
loopne
fxch
repz
rorb
sahf
repz
and
dec
push
and
hlt
add
add
movsl
sub
fldl
mov
std
je
jb
lock
test
jl
cmp
testl
ljmp
ljmp
mov
call
mov
push
std
push
lods
or
sbb
stc
add
jl
call
and
in
push
push
loopne
or
add
gs
pop
pop
pushf
mov
decl
outsl
inc
mov
push
mov
mov
mov
pop
and
xlat
jecxz
fdivr
push
mov
push
call
jns
adc
push
shlb
lock
gs
jmp
fidivs
rclb
jo
jecxz
and
add
mov
jmp
lret
mov
mov
xor
add
add
or
fcoml
mov
cs
test
inc
or
outsb
inc
mov
jno
or
std
jae
bound
lods
add
mov
push
dec
inc
jmp
inc
outsl
inc
xchg
fildl
ljmp
lcall
repz
or
jmp
daa
jl
ljmp
jge
dec
add
add
aas
jle
test
jb
add
test
cs
xchg
fldt
xor
jbe
adc
clc
mov
rcrl
hlt
jmp
sub
inc
jmp
iret
push
mov
loopne
jg
data16
into
aam
or
mov
idivl
es
push
add
add
js
in
mov
in
sti
push
mov
xor
fs
gs
ficomps
sti
cld
das
add
push
daa
jmp
push
out
mov
mov
mov
lea
sti
jmp
adc
bound
clc
in
and
iret
inc
jmp
fidivrl
dec
push
mov
dec
push
mov
add
ret
mov
dec
pop
divb
rcrb
and
fidivrl
or
mov
inc
mov
aad
xor
cmp
jnp
cmc
repz
adc
push
outsb
jg
ret
data16
add
cli
jecxz
mov
and
push
js
add
jp
std
adc
mov
pop
fdivl
jle
add
add
js
decl
push
xor
ss
shrl
dec
push
pop
lock
adc
fsubrl
inc
mov
add
sub
pop
xorl
push
cld
adc
jo
hlt
ljmp
or
rorl
fdivrl
pusha
sub
dec
clc
adc
add
ja
mov
push
mov
in
and
repz
movsl
and
cmp
cmp
fistpl
push
sub
jmp
jecxz
iret
pop
fnstsw
pop
cli
push
hlt
fcompl
fcmovne
pop
push
out
pop
in
test
mov
pop
mov
dec
and
pop
add
inc
adc
jne
jmp
add
jp
dec
add
add
add
jae
mov
in
jmp
add
inc
inc
push
jg
push
fdivrl
xor
push
xor
mov
cmp
sub
add
sbb
sti
jmp
pop
jge
lock
lods
adc
mov
in
sti
push
pop
test
or
jne
loopne
call
add
jne
xor
jl,pn
push
test
repz
xchg
cmp
leave
pop
js
lds
out
or
fists
fistps
fs
inc
jne
and
lea
cmp
mov
cli
fs
and
inc
arpl
icebp
call
fwait
jae
jne
inc
and
imul
add
pop
scas
aas
and
icebp
add
jne
mov
and
push
inc
and
insb
mov
and
xlat
aas
and
imul
pop
xor
push
dec
add
mov
sbb
ret
jno
mov
scas
xor
inc
mov
cmp
or
popa
cmp
xchg
sar
dec
and
add
push
cmp
insb
arpl
addb
push
mov
out
adc
fmull
inc
out
fidivl
fmull
dec
push
incl
mov
push
fdivrl
mov
imul
lock
imul
mov
push
add
sbb
or
jns
mov
xlat
test
add
pop
repz
add
repz
pusha
push
and
xorl
sub
xchg
jecxz
pmaxub
sbb
add
xor
jle
inc
dec
out
jmp
aaa
add
hlt
fs
pop
insb
repnz
cli
xchg
push
mov
fcmovne
inc
push
scas
pop
hlt
jmp
mov
ljmp
add
ret
pusha
dec
or
pop
jle
xchg
decb
jg
add
sbb
xchg
lods
inc
mov
jae
jmp
adc
jo
out
mov
xchg
pushl
mov
xchg
add
je
pop
jl
xchg
sbb
pop
xor
ja
adc
cld
push
inc
jge
pop
add
mov
add
outsb
push
dec
sti
iret
repz
dec
inc
xor
push
cmp
mov
push
cmc
jg
shrb
add
jne
lret
bound
mov
cmp
dec
add
cmc
jno
add
int3
adc
xor
mulb
mov
test
xor
mov
cmp
imul
inc
lods
outsl
mov
je
jl
cld
add
add
imulb
call
and
pop
inc
push
adc
loopne
adc
repz
sahf
mov
dec
mov
dec
sub
sub
shlb
jge
test
mov
cmpb
adc
inc
lock
inc
add
xchg
fildl
mov
dec
push
inc
enter
add
add
int3
les
inc
loop
xchg
stos
mov
inc
pop
lds
push
inc
mov
jae
lea
xor
sbb
jmp
iret
fmul
add
adc
add
or
inc
mov
jae
fsubl
adc
aas
add
mov
inc
mov
dec
mov
inc
cmpsl
add
cmp
add
add
dec
repz
inc
jl
ljmp
xchg
cld
inc
mov
mov
inc
daa
add
push
aad
mov
mov
jg
ljmp
push
std
inc
mov
dec
inc
lahf
xor
mov
add
inc
mov
mov
xor
mov
sbb
fldl
add
mov
add
out
add
inc
hlt
dec
repz
fnstcw
add
cs
stos
popl
lahf
cltd
mov
add
out
inc
push
sub
repz
cmp
add
out
gs
sub
repz
jns
xor
dec
daa
add
test
mov
add
lahf
cmp
add
movsl
push
stos
popl
cmp
cltd
adc
xchg
fistl
lock
mov
jne
inc
add
inc
cmc
xchg
sti
push
es
fwait
lock
add
push
fmull
inc
in
sbb
out
fwait
in
xor
mov
add
cmovo
out
fwait
clc
add
add
jne
inc
add
inc
jne
pop
push
mov
fwait
sbb
xor
mov
aam
adc
push
cmpsb
out
fwait
adc
add
mov
adc
fisubl
sahf
test
aas
add
imul
adc
fisubl
sahf
xchg
out
add
sub
inc
mov
jge
dec
fisubl
sahf
add
add
das
lret
mov
adc
lcall
add
add
leave
xor
jnp
adc
pop
aas
sbb
add
mov
rclb
int3
int3
mov
lahf
inc
mov
xor
repz
pushf
xor
mov
sbb
xor
repz
jl
ljmp
add
rep
testb
jns
dec
repz
xchg
pushf
xor
mov
or
cmp
dec
repz
jg
ljmp
enter
xchg
mov
pushf
jg
ljmp
jg
inc
mov
dec
les
dec
fidivl
int
inc
add
ss
mov
pop
add
add
repz
mov
or
add
loopne
shll
inc
mov
jo
subb
xor
push
push
dec
add
jmp
lret
and
fiadds
not
and
xor
and
adc
inc
inc
inc
jmp
shl
call
add
sti
aaa
or
add
adc
mov
or
mov
add
xor
add
popa
mov
xor
popa
addb
cmc
xor
out
stos
add
cmp
xor
in
sub
pop
sub
test
jno
cld
xor
sbb
pop
and
add
cmp
pop
fdivrl
imul
sbb
out
sbb
test
into
sarl
sbb
mov
push
pop
test
pop
sbb
lcall
nop
clc
lea
adc
sbb
jp
call
leave
push
mov
mov
push
sar
pop
add
cmp
or
incl
add
ljmp
aaa
pusha
scas
pop
je
mov
es
inc
cli
cld
inc
out
or
cwtl
add
sbb
mov
shlb
sub
dec
ds
mov
sbb
sbb
ja
idivl
gs
dec
fucomip
mov
ja
add
add
push
adc
loop
sbb
jmp
insl
mov
add
scas
test
sub
orb
dec
add
fbld
mov
fs
mov
push
test
and
mov
repnz
insb
cli
rcl
sti
cmpsb
pop
into
test
xrelease
mov
add
out
test
add
jecxz
and
or
ljmp
fisttps
sub
je
and
and
fildl
pusha
push
lret
test
pop
mov
and
jne
mov
fidivs
cmpsb
pop
in
add
pop
or
test
push
scas
or
jae
or
add
add
repnz
mov
lret
inc
ds
out
or
mov
jno
icebp
mov
rorl
loope
mov
add
inc
loope
ds
xor
idivb
lret
mov
lret
gs
add
inc
push
push
ss
mov
stc
push
test
sub
add
jae
mov
xor
je
mov
cmp
dec
and
popf
dec
clc
addr16
add
in
mov
push
cmc
cld
leave
xchg
cld
mov
ret
scas
lea
cmp
dec
push
add
mov
xor
jae
stc
scas
push
adc
dec
adc
fistpl
je
loop
add
mov
inc
add
add
push
out
call
int3
pop
add
pop
xchg
adc
popa
push
decl
adc
lahf
in
fadds
mov
jbe
dec
insl
sbb
xchg
mov
icebp
jbe
push
add
jb
fldl
sti
pop
in
push
push
add
mov
add
insl
mov
add
add
daa
ja
repz
pop
mov
jmp
jg
jmp
add
xchg
pop
cwtl
imul
jle
movsl
pop
jl
popf
pop
subl
stos
cld
call
and
data16
xchg
jmp
nop
repz
push
fcoms
fs
out
mov
add
xor
sti
jmp
iret
inc
jmp
adc
outsb
inc
int
inc
addr16
jbe
cmc
nop
repz
outsl
rcr
cmpsb
call
imul
iret
mov
and
push
or
gs
int
and
add
in
aas
and
loope
pushl
lods
pop
xor
jo
add
jp
add
mov
mov
mov
outsl
jge
stos
jecxz
xor
cld
mov
cmp
cmp
inc
and
call
lods
xor
adc
stos
jecxz
rol
cld
mov
adc
test
add
jmp
sub
stc
ret
insl
xor
das
in
and
jne
add
mov
inc
dec
jns
mov
push
cmpsb
hlt
or
stc
mov
fstp
mov
roll
int3
ds
push
out
pop
xchg
jge
mov
or
mov
incb
sub
mov
test
or
out
outsl
sar
add
sub
adc
cld
jb
push
pop
and
gs
push
xor
lret
cld
add
add
jle
lds
gs
out
pop
sar
adc
and
adc
sub
jae
daa
fwait
repz
cld
arpl
repz
insl
outsl
rcl
jmp
add
out
add
repz
add
add
ljmp
repz
out
scas
pop
daa
add
adc
mov
add
repnz
movsb
add
add
or
aad
int
pusha
out
popa
daa
add
add
push
jo
cmpsl
add
imul
pmaxub
clgi
xchg
stc
mov
call
movl
push
adc
push
or
lods
lret
push
test
add
rcl
mov
add
add
ror
out
repz
jp
bnd
mov
test
xrelease
pusha
insl
or
int3
mov
lea
js
insb
dec
std
test
cmp
into
xrelease
sbb
jns
cmc
pop
inc
and
jnp
repnz
orl
das
and
add
and
add
mov
pop
mov
movsl
dec
cmpb
jne
dec
cmp
cmp
popa
or
mov
adc
adcl
cli
movsl
gs
outsl
sbb
sub
add
lods
add
adc
jmp
jnp
lock
div
jecxz
mov
lret
cld
mov
enter
ret
mov
incl
add
mov
aas
mov
ret
xchg
add
sar
roll
decl
or
aaa
or
aaa
sub
xorb
int
dec
ret
dec
add
jg
cmpsb
out
lcall
lret
fs
cld
push
add
xchg
scas
sbb
lea
cld
add
add
push
fcomps
mov
pusha
dec
jo
inc
fsts
inc
jnp
pop
add
daa
xchg
inc
inc
xchg
psadbw
jecxz
xchg
inc
sti
outsb
or
in
or
outsl
inc
mov
daa
fs
sbb
mull
mov
pop
or
dec
int
outsb
aas
test
popa
jnp
dec
daa
add
add
add
cmc
test
jl
pop
aad
ljmp
sbb
inc
mov
and
ljmp
js
jl
or
lds
push
mul
in
ss
add
adc
sti
jmp
fdivs
jmp
out
clc
xlat
pop
pop
pusha
push
pop
sub
out
add
dec
cld
mov
lret
iret
sti
inc
xchg
jns
or
push
iret
mov
hlt
ss
in
xrelease
mov
and
jb
mov
in
decl
xor
push
test
cmp
mov
flds
add
dec
sub
testb
mov
add
pop
push
and
jmp
cmp
mov
icebp
and
sub
push
dec
and
xor
rcl
orb
or
jnp
testl
add
mov
add
mov
pop
sub
sbb
cld
adc
and
adc
decl
sbb
mov
add
adc
cltd
add
or
add
pop
adc
fidivrl
das
inc
dec
cli
sti
mov
dec
inc
mov
adc
cltd
enter
jp
jl
inc
add
jp
int
add
mov
or
and
mov
pop
mov
xchg
mov
das
negl
std
jbe
shrl
adc
add
aad
ljmp
mov
add
repz
inc
cwtl
je
add
jl
adc
xor
jp
sti
imul
jle
enter
jl
add
pop
js
mov
ret
ljmp
add
jecxz
loop
jle
adc
jp
clc
add
fidivrl
add
sar
outsl
aas
test
sbb
aad
add
stos
mov
jmp
cmp
mov
scas
dec
inc
jmp
push
rclb
jl
sti
jbe
iret
je
lret
scas
sbb
adcb
inc
dec
stos
jp
dec
xrelease
xchg
out
push
jl
push
mov
bound
add
inc
cmp
xor
in
pushf
adc
or
icebp
push
cmp
ret
dec
mov
jge
mov
pop
sub
xchg
test
sahf
inc
mov
sahf
inc
xor
into
movsl
inc
and
enter
shll
and
adc
inc
cmc
add
add
add
lock
cmc
dec
jg
stos
mov
push
jge
call
push
xor
pushl
dec
cld
jmp
lds
pop
mov
je
mov
inc
add
ret
push
int
and
in
push
clc
sub
cmp
cmpsl
popf
jl
sub
mov
xlat
inc
pop
ret
push
int
add
add
push
clc
sub
cmp
addr16
pop
mov
and
rcll
int
jo
call
lret
inc
cmp
out
jbe
ja
jl
enter
test
jg
jl
push
adcb
insb
fs
int3
fidivl
out
lds
cmp
pushf
xor
ljmp
add
xor
ljmp
xor
scas
sub
ljmp
xor
aam
xor
lret
jmp
xor
stc
call
jo
adc
xor
add
rcll
xor
pop
mov
inc
movsl
repz
fcomps
fldl
mov
mov
lds
add
xchg
jns
mov
mov
add
add
repz
inc
add
add
jg
dec
inc
add
push
lret
cmp
enter
mov
in
insb
shlb
jmp
je
es
jle
cmp
push
mov
test
lret
mov
lret
jl
push
and
xchg
xor
clc
jmp
enter
add
add
fdivs
call
repz
sbb
sbb
movsl
notb
sub
add
testb
je
add
pushf
cmp
ja
jbe
or
adc
cmp
out
add
lcall
xor
xchg
adcl
loope
cmpsb
out
in
xor
xchg
idiv
add
add
jbe
add
jecxz
cli
ljmp
or
mov
sahf
dec
jg
cmc
addl
mov
clc
mov
call
pushf
fs
orb
stos
repz
sbb
fmull
movsb
repnz
fidivrl
mov
push
pushf
cli
imul
in
or
mov
leave
xchg
inc
add
add
mov
lock
cmp
dec
pop
shrb
leave
ss
rolb
xchg
inc
les
dec
fiaddl
mov
repz
push
fldcw
int
cmp
ljmp
enter
cs
pop
shrb
filds
cmp
inc
sbb
add
je
sub
jnp
ret
fistl
imul
xchg
stos
ror
stos
mov
lcall
enter
fcmovnb
sbb
enter
sub
mov
outsl
jecxz
mov
mov
sar
pop
stc
xrelease
call
dec
fistl
pop
sbb
jmp
add
add
adc
push
call
push
fistl
dec
stos
push
shrl
add
adc
ret
movl
mov
xrelease
test
adc
jecxz
enter
xchg
add
xchg
and
add
or
dec
jp
test
sti
mov
jp
add
add
add
es
add
jns
add
mov
sub
sbb
xor
add
sub
cld
pushl
mov
adc
sub
mov
lds
mov
inc
dec
es
leave
aaa
sti
add
addl
arpl
add
push
mov
mov
and
bnd
add
push
cmc
sti
out
mov
pop
add
repnz
mov
incl
out
nop
xorl
mov
aaa
add
ja
fdivr
xor
push
popa
and
push
dec
and
inc
inc
and
loope
xor
fmull
cmpl
call
psubsw
pop
pop
mov
or
add
test
inc
or
add
arpl
xchg
shll
xchg
out
add
loop
pushl
inc
inc
and
mov
jae
jb
xor
idivl
sub
call
add
jp
out
or
sub
jno
add
ljmp
pop
inc
movb
mov
cmp
repnz
add
push
jmp
inc
test
popa
inc
mov
pop
cmp
dec
test
stos
dec
mov
ljmp
pop
out
mov
sbb
xor
stc
mov
aas
add
add
test
push
and
or
cwtl
and
insb
dec
cmovns
pcmpgtw
add
shrl
jmp
mov
js
lds
fcmovnb
cld
loopne
test
push
lock
cmc
add
ret
pop
sub
sub
add
add
and
flds
ret
fwait
test
lock
and
lds
repz
adc
int3
ljmp
sbb
std
inc
dec
filds
add
add
ja
jmp
ja
shl
or
add
or
bnd
add
imul
jl
jg
mov
cwtl
cli
jmp
out
and
testb
xor
and
add
repz
cld
sti
and
dec
pop
adc
and
jno
call
jmp
clc
add
mov
add
mov
testb
adc
lcall
push
mov
enter
mov
and
mov
hlt
andb
lret
jmp
orl
lret
lret
stos
pop
subl
ja
in
in
sarb
dec
dec
call
lret
mov
add
mov
add
call
lret
mov
test
cmpsl
or
repz
movlps
into
pop
and
push
add
iret
pop
loop
mov
into
das
jne
cmc
testb
insb
ret
jg
pop
das
mov
inc
arpl
jmp
sbb
pop
push
sbb
shll
ljmp
bnd
add
out
mov
pop
stos
stos
data16
add
jg
inc
mov
jne
cmpsl
push
loopne
insb
and
loopne
outsb
dec
loopne
push
loopne
mov
add
sub
add
xrelease
sub
jmp
lds
pop
adc
dec
pop
and
leave
inc
push
jo
pop
popa
fs
pop
adc
add
adc
dec
js
or
insb
lret
cmp
sub
fs
pop
sub
push
or
je
int
and
lds
out
mov
das
ret
and
jmp
mov
or
orl
je
fucomip
lret
add
mov
call
and
add
push
mov
punpckhdq
mov
inc
xchg
jecxz
ret
ljmp
je
jecxz
icebp
add
adc
mov
cmp
sti
xchg
movsb
repnz
sti
pop
mov
call
jo
addl
sti
inc
sub
mov
out
mov
loope
add
add
int3
mov
decl
mov
hlt
lods
jle
decl
mov
add
mov
xchg
mov
stos
pop
test
movsb
xlat
jmp
and
add
nop
fistpl
int
adc
ljmp
jmp
ds
decl
or
dec
vmread
jl
pop
sub
add
add
mov
pushf
repz
mov
push
decb
inc
push
adc
lock
push
test
insl
ret
fsubrp
jo
test
insl
ret
mov
mov
cli
mov
jg
inc
mov
clc
bnd
das
mov
sbbl
add
repz
divl
sti
fidivrl
xor
add
dec
repz
xor
repz
pop
and
ljmp
mov
and
jmp
cltd
fldenv
mov
add
jae
sbb
mov
sti
into
mov
das
test
adc
je
add
rcl
add
in
lea
sti
xchg
ror
fisttpl
mov
inc
jne
cmp
add
rcr
push
pop
pop
sbb
in
push
les
jecxz
outsb
stos
repz
sahf
inc
in
stos
popl
xchg
lea
push
add
add
push
add
add
pop
jmp
adc
call
xchg
cltd
mov
add
cmp
divb
cs
xchg
xor
call
scas
jle
incl
add
mov
cmp
jne
sub
hlt
jb
add
sbb
ret
xchg
and
jne
xor
testb
xchg
adcb
jb
xor
and
and
testb
mov
dec
push
pop
cmp
cmp
cmp
add
sub
in
xor
add
lea
int3
xchg
gs
mov
cmp
fists
dec
cmp
call
push
lea
xor
ret
jnp
ret
mov
pop
mov
or
mov
dec
mov
scas
aad
adcl
mov
jmp
popa
push
mov
pop
jg
or
repnz
or
add
rcrl
lds
and
mov
insl
je
test
pop
adc
adc
das
cli
push
add
sbb
adc
lahf
repz
mov
daa
add
mov
mov
addb
pop
add
cmpsl
jmp
mov
mov
lods
movb
xor
add
add
enter
xchg
lods
mov
adc
add
jns
add
add
popf
mov
jg
mov
rcrl
dec
iret
rorl
mov
std
in
sub
repz
pushf
inc
inc
jmp
shl
xchg
mov
aas
jb,pn
movups
js
cmp
add
xchg
sbb
adc
adc
jmp
lret
inc
int
add
in
lds
daa
mov
lock
jns
add
fildll
mov
jbe
outsb
and
add
sub
ljmp
adc
pop
cmc
sti
decl
sbb
push
cmc
sti
decl
sub
add
add
adc
outsl
inc
xor
aas
mov
fildll
xor
lret
adc
cmpb
incb
sbbl
jne
repz
insl
cld
jne
and
cmpsb
sti
icebp
add
mov
sbb
int3
pushf
or
push
sbb
jb
int3
xchg
or
nop
xor
sarl
sbb
add
add
pop
mov
sbbb
hlt
stc
jne
add
mov
fstl
mov
push
inc
aad
arpl
sti
mov
add
fisubrs
add
js
sub
lret
decl
mov
add
ret
jbe
jl
pushf
repz
subb
lds
inc
insb
pop
scas
test
jne
pushfw
add
add
adc
orb
add
imul
loop
and
xorl
cmp
push
sysret
cs
insb
sub
mov
add
or
jecxz
shr
jo
insb
sub
add
mov
sub
push
and
sbb
sub
jl
movq
out
pusha
add
add
inc
mov
jmp
add
dec
mov
cmp
dec
notl
push
call
push
cmp
jmp
lcall
pushf
daa
and
xlat
jl
ror
repz
insb
push
inc
sbb
lret
dec
inc
pop
sbb
push
xchg
add
dec
fldl
jmp
cmp
add
mov
in
cmp
jecxz
add
inc
insl
inc
add
lret
imul
push
in
shrb
add
out
xchg
pop
push
push
inc
cld
adc
sub
sub
cmp
jg
cmpsl
out
add
add
test
sub
push
or
push
jne
and
testl
add
add
call
cmc
add
mov
cmc
push
fcomip
push
js
jmp
mov
jle
and
add
mov
mov
test
adc
aas
add
xor
in
es
adc
mov
cmpl
pushf
xor
test
decl
pushf
fwait
decl
add
add
fwait
sbb
std
mov
sbbb
cmp
test
and
push
mov
ror
fwait
or
dec
mov
mov
inc
add
sbb
add
push
inc
mov
inc
xor
xchg
inc
or
dec
lahf
je
cld
xchg
add
sti
les
outsb
inc
fcompl
add
repz
fwait
pusha
call
push
mov
inc
popa
sub
mov
dec
mov
adc
mov
adc
repnz
fidivrs
lahf
cmp
inc
out
push
lret
pushf
je
call
jle
ljmp
test
pushf
mov
inc
mov
shl
dec
xchg
add
add
mov
sti
insb
iret
and
jb
stos
test
add
into
cwtl
or
mov
mov
push
xor
sbb
lahf
fwait
mov
sub
mov
inc
mov
test
inc
roll
das
sub
cmpl
scas
jne
pop
cmpb
je
pop
cmpl
add
add
cmp
pop
sub
adc
dec
push
push
pop
outsb
adc
xor
pusha
pop
outsl
push
test
stos
cli
lcall
mov
inc
imul
jp
adc
mov
mov
adc
jp
or
mov
pop
push
add
add
jle
xor
fsubr
idivl
loopne
cmpb
outsb
push
xor
adc
int
lods
inc
mov
cmpb
test
cmp
mov
int3
pushf
push
std
subl
mov
jnp
pusha
into
dec
mov
inc
add
nop
adc
inc
pop
pop
stos
mov
testb
mov
xchg
jl
rclb
inc
adc
aam
push
sub
je
xor
jnp
test
jae
fadds
scas
repz
mov
inc
shll
inc
jp
pushf
lea
jmp
clc
add
mov
xor
fildl
jl
push
and
cwtl
cmpsl
adc
hlt
xchg
cmpsl
add
in
cld
add
add
hlt
jmp
mov
fwait
les
xor
pusha
ds
pushf
pop
test
mov
add
andb
insb
les
std
xchg
add
jmp
adc
add
cld
jb
add
out
and
xlat
xor
push
testl
fnstsw
fwait
es
ds
add
add
sbb
lea
pushl
jl
lds
testl
sti
stc
decl
xor
mov
repz
sub
xlat
or
test
mov
add
jecxz
mov
push
sbb
add
outsl
cmp
movsl
pushf
shll
add
add
out
in
xor
sub
scas
out
sub
mov
sub
push
pop
push
xor
or
pop
incb
lcall
dec
adc
xchg
adc
clc
adc
add
cld
mov
mov
jmp
add
sti
outsb
inc
in
push
cmp
rep
sbb
sbb
mov
out
data16
out
push
call
add
pushl
int
inc
or
push
popf
ffreep
aaa
je
jbe
call
pop
imul
pushf
js
pushf
call
call
or
out
push
movsb
cld
jne
repz
add
int3
mov
inc
xchg
mov
imul
pushf
movsb
je
add
movsb
jnp
js
pushf
and
cmp
je
fs
pop
loope
add
xchg
xchg
sub
or
cmp
jle
repz
out
fwait
mov
jmp
cmp
stos
jns
jae
cmc
add
shlb
dec
sti
jmp
mov
inc
sbb
adc
ss
add
push
lahf
xchg
stc
das
add
andb
add
pop
inc
sbb
dec
repz
stc
pop
add
inc
cmpsl
ret
cs
ljmp
adc
pop
xchg
jg
mov
mov
or
jmp
mov
test
pop
ljmp
mov
test
aad
add
cmp
add
jbe
cmp
sbb
xor
call
cmc
and
add
mov
push
mov
loopne
sub
dec
jmp
bound
jbe
faddl
test
inc
add
out
add
movsb
hlt
mov
xor
or
pop
mov
movsb
hlt
jmp
add
xor
jne
add
popf
jns
cld
incb
jmp
test
or
inc
sub
jae
orb
cwtl
pop
and
mov
mov
jge
add
xor
mov
andl
jbe
clc
insb
cmp
adcb
pop
or
or
inc
add
inc
add
inc
popa
jl
xor
in
les
add
push
nop
mov
fmuls
mov
dec
xchg
cmpsb
orb
mov
pushf
cmp
cltd
call
adc
pop
pop
xchg
cld
loope
xor
fsts
test
inc
mov
mov
cltd
mov
dec
jl
aas
add
dec
pushf
cld
or
mov
pop
out
cmp
cltd
cmp
aas
add
add
hlt
jl
cld
fistpl
cwtl
cld
pop
repz
add
shll
add
mov
mov
fstl
mov
mov
andl
stos
mov
popf
push
add
popf
stos
cmp
ss
xchg
rep
or
jmp
jecxz
inc
into
mov
lahf
sbb
add
add
and
lods
lahf
adc
mov
pop
cmpsb
cld
push
popf
xor
sub
dec
and
inc
mov
add
xor
pop
add
orb
ret
dec
sbb
test
xor
lock
xor
addr16
fwait
in
nop
repz
inc
movsb
jne
add
add
popl
sbb
pop
rcr
icebp
add
push
mov
mov
lea
sub
jno
xor
inc
jmp
aaa
xor
imul
mov
push
jmp
fistpll
push
movsb
lock
jns
adc
and
mov
sub
add
cmp
dec
imul
mov
clc
andl
jns
or
or
inc
jns
or
std
adc
fwait
jp
add
xchg
pushf
xor
cmpl
dec
xor
rolb
aam
mov
or
jo
xchg
mov
dec
add
lds
cmpsb
cld
add
add
mov
xchg
cld
mov
mov
and
adc
mov
mov
jmp
stc
pushf
subb
aas
test
push
daa
stc
cmovno
pushf
adc
mov
adc
cltd
pushf
cld
fisttps
pushf
adc
mov
aaa
out
mov
jmp
repz
adc
add
clc
or
mov
pop
dec
test
sahf
fcom
daa
rorb
pop
pop
push
pushf
imulb
xor
mov
out
divb
xor
cmp
stos
enter
xchg
sub
test
outsb
pushf
repz
cmp
inc
test
pusha
sub
mov
jmp
adc
out
mov
rcrl
add
mov
fidivrl
hlt
jmp
lock
add
fs
adc
sbb
adc
add
xlat
dec
call
in
dec
jbe
ret
adcb
inc
lds
mov
or
mov
push
ret
mov
cs
or
mov
sbb
lds
fsubr
out
add
repz
jmp
adc
or
jmp
hlt
repz
sub
jmp
sbb
or
aas
and
outsb
inc
or
and
popf
daa
sbb
outsl
inc
or
xor
cmp
jne
sbbl
pop
adc
and
mov
pushf
sbb
hlt
mov
dec
mov
add
add
cmc
hlt
mov
cmp
jge
sbb
pop
jecxz
jbe
add
cmp
fsubr
pop
jge
and
jo
and
dec
ss
xor
jmp
je
outsb
dec
sbb
loopne
mov
and
and
imul
imull
mov
mov
jno
add
add
test
jp
pusha
enter
mov
call
fs
mov
sbb
lret
inc
and
call
ss
test
test
mov
test
flds
jno
adc
notb
add
push
repz
iret
mov
std
cltd
repz
cmc
jnp
outsb
xchg
sub
addr16
and
cmc
cwtl
add
add
mov
out
movsl
bnd
cmc
mov
pop
cmp
nop
sahf
cld
or
mov
xchg
enter
push
out
add
sbb
sub
or
xchg
jae
aaa
cwtl
subb
je
ljmp
push
out
add
aam
push
andb
add
add
nop
stos
xchg
add
adc
sti
pushf
add
stos
pop
or
hlt
add
push
aaa
sbb
sar
and
or
jp
mov
daa
sbb
dec
pop
push
addl
pop
mov
mov
and
test
mov
mov
adc
and
push
jg
sti
ss
add
mov
test
nop
repz
incl
xlat
pop
mov
loopne
and
shlb
mov
lea
cmp
icebp
and
adcl
test
clc
add
sahf
sub
lea
fsubl
mov
jo
jle
or
ljmp
or
sub
add
pop
xor
mov
add
add
aas
or
lock
sbb
and
test
lock
sbb
rolb
lock
mov
fisttpl
loopne
daa
xorb
add
or
lock
cmp
cmp
mov
lds
and
in
xchg
lea
hlt
imul
add
adc
loopne
cmovl
call
movsb
sbbb
jo
das
push
bound
cld
and
hlt
mov
xchg
jae
ljmp
pop
fisttpl
pop
dec
jmp
shl
int
incl
outsl
dec
jl
lods
fbld
inc
cltd
sub
mov
stc
xchg
mov
hlt
jmp
add
pop
hlt
adc
decb
lahf
iret
in
inc
fwait
shrl
lret
clc
jns
ficoms
mov
xor
or
loop
push
lret
jo
subb
adc
pusha
ds
mov
mov
jmp
add
or
jmp
aad
idivb
and
cld
lcall
xchg
jb
rcll
pusha
int3
movl
pusha
aam
call
push
out
push
jmp
sbb
loopne
cmc
mov
jmp
in
loop
repnz
push
jecxz
and
push
loopne
out
sub
hlt
add
cwtl
insb
inc
icebp
push
or
subl
jb
jecxz
stos
lret
and
push
add
add
nop
repz
lods
sti
add
in
es
sub
add
add
sbb
aad
je
popf
sbb
add
lock
pop
xchg
jo
jge
add
xor
call
dec
subl
test
mov
xor
xor
add
or
inc
add
pushf
scas
adc
data16
in
pop
cs
push
ret
mov
jg
mov
lcall
fsts
and
loope
or
cld
jae
mov
pop
xchg
decl
lret
adc
adc
psllw
sti
mov
mov
nop
jae
lcall
sbb
add
mov
mov
clc
ret
adc
lds
fdivrs
mov
cmp
pop
mov
sbb
out
mov
decl
dec
sbb
leave
nop
outsb
dec
repz
mulb
inc
inc
test
xchg
mov
xchg
cmpb
idivl
add
cld
imul
or
adc
or
cmp
add
or
sub
jmp
out
xor
test
add
jmp
clc
add
arpl
xchg
jmp
inc
mov
pop
jb
ljmp
rep
push
cwtl
mov
push
cwtl
or
xchg
sti
jmp
mov
outsb
stos
in
adc
jae
push
push
or
add
cld
fsub
add
jmp
stos
jmp
push
jp
sti
pushf
arpl
xchg
xchg
sti
ret
mov
push
jae
jmp
jg
pop
into
xchg
out
cmpsl
push
sub
and
jne
or
sub
lret
and
mov
iret
adc
jo
add
nop
and
jb
jecxz
and
and
mov
out
add
sti
add
add
or
fdivr
adc
push
lods
call
mov
xor
decl
mov
data16
adc
data16
or
call
call
and
pop
mov
fmull
or
insb
cmc
jne
sti
cli
pop
mov
sti
pushl
icebp
add
icebp
add
repnz
and
in
cmpl
add
out
add
inc
fs
mov
repnz
mov
sbb
outsb
mov
cld
cmp
ja
xchg
pop
cmpsl
jae
rolb
push
push
repz
pop
jbe
inc
jb
aas
mov
pop
lea
sbb
xchg
cmp
xchg
mov
rolb
mov
orb
and
mov
cld
add
add
jns
out
aas
mov
cld
cld
xorl
pop
push
mov
and
testl
sbb
xor
ds
fnstcw
repnz
fmuls
lret
cld
pushfw
mov
icebp
les
push
lea
cmp
imul
lahf
js
out
inc
add
add
sti
jg
push
or
js
xchg
jl
inc
or
fwait
and
xchg
or
pop
repz
xchg
lret
xchg
cmp
adc
add
sbb
icebp
shll
adc
mov
jge
add
add
dec
and
xchg
fwait
adc
sub
fcompl
add
or
or
mov
sti
mov
adcl
lcall
jmp
mov
xor
sub
icebp
mov
mov
or
fistl
pop
inc
data16
jmp
mov
xor
mov
loop
mov
lds
incb
add
jnp
mov
push
adc
push
xchg
lret
jo
mov
js
add
testl
jmp
push
pop
sbb
mov
sbb
call
mov
lea
adc
jl
pop
ljmp
call
adc
push
add
dec
push
outsl
xchg
cld
cmp
pop
mov
mov
add
pop
cmpsl
xor
jmp
pop
pushf
in
jnp
cwtl
in
jnp
xchg
int
push
in
test
rol
sub
adc
call
jg
push
pop
jmp
pop
jl
jnp
nop
dec
jp
test
push
movsb
jnp
cld
mov
pop
loop
mov
push
pop
ss
sbb
xchg
lock
decl
shlb
add
add
xchg
pop
cmp
xchg
push
add
pop
in
cld
jns
rcll
repz
out
cvtdq2ps
fwait
repz
in
hlt
add
mov
cmovg
fcomi
lret
pop
mov
nop
std
shll
out
add
repz
fisttpll
testb
repz
pushl
or
add
in
or
jmp
push
arpl
dec
notb
mov
cmp
mov
sti
je
nop
adc
ds
jl
xor
out
add
lcall
mov
jnp
fstl
sub
adc
jne
adc
and
cmpsl
jne
add
add
pop
nop
adc
jo
filds
jmp
arpl
sti
jmp
sub
or
mov
jmp
ja
faddp
dec
add
and
mov
jg
inc
push
cmpsb
add
popf
sti
ljmp
test
icebp
add
notl
add
add
cmc
icebp
mov
pusha
je
std
bnd
jne
test
les
mov
cmp
cli
jae
std
xor
add
cmp
clc
mov
inc
out
jb
std
shlb
xchg
jecxz
add
mov
inc
add
add
mov
in
cmpb
cld
fdiv
iret
xchg
testb
add
add
mov
cmc
aas
mov
shlb
add
add
loopne
mov
fiaddl
sub
aas
add
inc
sub
sarl
outsb
xchg
call
pop
adc
xorps
cld
jno
or
mov
mov
in
push
pop
cmpsb
fistpl
jecxz
xor
int
and
fcomps
push
add
add
test
jo
jo
adc
push
pop
cmpsl
add
repz
push
loopne
aaa
push
call
xchg
stc
add
data16
test
imul
add
insl
xchg
pop
sbb
das
nop
jbe
adc
xchg
adc
and
jle
add
out
fcomi
mov
add
and
inc
shl
inc
mov
insb
dec
outsb
adc
add
in
add
jb
lds
jl
int
jl
fldcw
add
adc
dec
add
pop
iret
sbb
rcrl
jae
rcrb
adc
iret
and
sahf
movsb
dec
mov
mov
xchg
or
and
push
add
xchg
iret
and
mov
repz
add
jmp
add
dec
bound
test
or
push
xor
jmp
hlt
mov
add
aas
and
cmc
jmp
push
adc
add
xor
xlat
mov
shlb
cli
call
push
jbe
mov
mov
xor
add
cmc
in
mov
mov
and
imul
lock
pushl
dec
sti
jmp
addr16
pushl
cld
cwtl
jb
out
sti
je
jp
add
xor
or
jnp
inc
jb
add
inc
add
negb
adc
lea
add
rclb
add
add
dec
pop
inc
jae
sbb
and
add
add
jmp
add
or
add
push
push
cvtdq2ps
incl
sbb
out
or
pop
add
jle
mov
xor
add
hlt
hlt
fwait
std
xor
add
popf
xor
mov
add
leave
es
fmull
jmp
nop
push
in
imul
insb
jns
aam
adc
cmpsl
add
mov
jne
sbb
testl
repz
add
aam
xchg
xor
loope
jl
adcl
in
or
notl
adc
mov
push
insb
call
add
adc
add
adc
mov
push
adc
add
adc
add
push
rorl
mov
jb
jno
xchg
cltd
fwait
xchg
xrelease
pop
pushf
leave
cli
add
jg
add
fwait
sti
push
nop
fwait
jne
repz
and
rclb
add
bound
jne
sub
call
mov
pop
xchg
jb
adc
mov
add
inc
add
fldl
add
xor
fldl
mov
inc
cmpsl
testb
cwtl
inc
push
inc
jne
ljmp
sbb
call
test
add
in
mov
ljmp
xor
xor
std
and
add
add
jbe
and
mov
jle
pop
addb
mov
jbe
cld
push
fsubl
cld
mov
mov
call
or
pop
iret
or
push
lcall
pop
jnp
je
out
jnp
pop
adcl
mov
lret
jp
arpl
mov
add
add
dec
dec
jmp
dec
and
stc
xor
inc
jae
add
sti
or
clc
pop
add
fisubl
mov
mov
push
pop
scas
jle
hlt
sbb
lcall
fs
pop
xchg
jno
in
mov
jmp
mov
push
xor
mov
fwait
enter
insl
inc
subb
add
add
scas
add
jmp
test
jmp
jle
outsl
sub
adc
call
daa
xor
jmp
or
outsl
mov
add
jne
hlt
push
faddl
js
sub
bnd
dec
pop
cmc
ret
inc
jmp
mov
mov
insl
movsb
mov
jmp
add
add
fisttps
test
repz
pusha
iret
and
shr
test
repz
xlat
sbb
addr16
jg
pop
mov
repz
cli
mov
pop
mov
pop
aaa
and
gs
pop
sub
decb
xorl
fnstenv
pop
call
add
sub
lret
cmp
adc
jp
mov
mov
xchg
or
mov
cmp
lcall
test
sti
pushl
jecxz
pop
cmc
add
testb
sahf
mov
or
and
xor
popf
mov
pop
adc
sbbb
add
add
xor
sti
jmp
fstps
call
jno
or
add
and
mov
jnp
in
sbb
jl
dec
push
mov
pop
add
cwtl
jbe
jo
mov
mov
jnp
stos
addr16
add
cmp
and
add
xor
mov
movsb
mov
shl
aam
or
mov
data16
mov
xchg
mov
jbe
inc
push
jb
inc
test
push
pop
mov
jmp
and
stc
sub
addb
scas
shr
add
jmp
pop
insb
bnd
jp
add
jle
xlat
ret
fwait
jne
jp
sub
lods
mov
and
push
mov
push
add
icebp
mov
jmp
ret
push
es
iret
call
cmp
cmc
push
int3
repz
add
mov
xlat
mov
cltd
ja
and
or
and
repz
roll
jmp
add
add
insb
je
orb
sbb
cmp
adc
addb
adc
and
jmp
stos
mov
pop
nop
repz
aad
xlat
call
shrl
jmp
dec
jg
fsubl
in
jmp
lock
mov
shrl
add
add
and
add
cmp
inc
cmc
ss
mov
mov
add
into
cmpsl
arpl
repnz
shl
add
cmp
mov
pop
push
sbb
outsl
repz
mov
test
outsl
inc
movsl
cmpsl
push
push
test
in
jne
push
push
fwait
cld
push
cwtl
je
sti
mov
ljmp
mov
add
in
pushf
adc
add
sub
mov
cli
ljmp
call
inc
js
sub
mov
mov
push
push
js
push
inc
ds
mov
xchg
or
mov
push
inc
jns
lds
add
dec
inc
lea
in
add
mov
pcmpgtb
adc
xorb
add
orl
cld
jae
decl
jmp
outsb
mov
incl
adc
dec
aaa
int
adc
cmp
jmp
ret
insl
mov
sahf
jnp
inc
push
test
adc
jno
jg
hlt
jmp
icebp
clc
and
push
xchg
repz
push
or
add
je
add
add
dec
fucomip
add
add
mov
in
inc
pop
xor
lock
pop
fld
jnp
in
mov
fsubrs
roll
inc
aad
pop
imul
add
mov
mov
cmp
add
cmc
adc
cmp
rolb
stc
jb
cmp
incb
xor
out
cmp
add
insb
sti
xchg
push
jns
jo
sti
into
popa
jo
cmp
es
sbb
mov
sahf
adc
xchg
sbb
mov
in
inc
jmp
xchg
js
outsb
add
icebp
adcw
pop
jge
mov
dec
loope
sti
add
or
push
test
add
push
rcll
dec
push
add
add
jp
cmp
xchg
cwtl
push
call
outsb
pop
jg
sbbl
ljmp
jg
inc
mov
inc
int
mov
pushl
inc
movsl
mov
sti
je
imul
movsl
imul
push
add
outsl
setbe
cld
test
add
mov
inc
xor
out
mov
inc
mov
mov
rorb
jns
mov
push
cwtl
mov
fxch
pop
addr16
jns
or
jnp
mov
movsb
mov
pop
adc
add
das
mov
inc
mov
das
adc
add
out
mov
inc
mov
mov
add
adc
add
out
xchg
inc
mov
je
add
dec
adc
add
das
hlt
icebp
out
int3
repz
stc
fdivrs
aaa
push
push
fucomp
int3
repz
dec
std
cmpsb
add
mull
add
loope
add
mov
adc
mov
inc
mov
insb
int
imull
add
add
and
mov
call
jmp
jae
xor
ret
stos
or
sbbb
xor
jmp
cmc
int3
repz
sub
je
jmp
cmp
mov
jecxz
or
dec
adcb
sub
dec
inc
adc
push
mov
icebp
repz
insb
mov
adc
add
or
sub
add
or
je
pop
add
jne
loopne
add
mov
jo
ja
cmpsl
push
mov
jbe
in
inc
cmp
pop
add
leave
ja
add
and
test
lea
hlt
ds
jmp
into
clc
jnp
repnz
add
and
call
mov
mov
lock
repnz
fisubs
add
ficoms
outsb
adc
test
repnz
pushf
jecxz
ret
add
xor
scas
push
lea
and
dec
aaa
cli
dec
sbb
xacquire
push
push
mov
pop
jae
mov
lock
add
add
mov
incl
mov
hlt
and
xchg
xor
mov
jg
xchg
in
inc
mov
jmp
imul
add
push
and
mov
sbb
fs
cld
jmp
leave
and
pop
add
mov
adc
stc
and
add
lea
sub
iret
stc
repnz
insb
xor
lret
ret
adc
out
jo
scas
jecxz
fmull
es
add
sub
add
mov
lock
jp
push
or
out
pusha
enter
pop
mov
jmp
testb
xchg
daa
test
add
jne
jne
jo
jnp
je
roll
add
loop
insb
xchg
and
leave
push
jmp
add
incl
or
add
jmp
mov
xor
dec
idiv
aas
jmp
ljmp
call
test
add
dec
je
cmp
rol
ret
cli
fsubr
loope
jmp
add
add
xor
in
push
jnp
stos
repz
jg
aas
jmp
out
add
adc
push
lahf
test
mov
ja
add
mov
cli
fisttpl
out
push
call
xor
jo
push
hlt
jle
push
loope
push
lahf
testb
xchg
iret
aam
je
test
inc
sbb
testb
mov
testl
add
je
add
loope
jb
int3
out
testl
push
inc
dec
imul
xor
orl
testb
inc
adc
sbb
mov
pop
aaa
test
das
or
or
add
add
cltd
adc
add
add
ret
je
cmp
dec
outsl
js
pop
int
add
push
out
xlat
mov
outsb
ret
push
call
mov
fnstenv
repz
jne
addr16
pop
repnz
mull
iret
pop
repnz
movsb
pusha
decl
call
inc
pop
push
movsb
jo
adc
fiaddl
ret
xor
jmp
lds
add
cmp
push
xchg
ret
fldt
jb
mov
mov
cmpsb
cmpsl
in
es
pop
adc
xorl
ret
out
int3
repz
xor
int
outsb
pop
lret
daa
or
leave
pop
lock
out
or
loope
mov
hlt
or
test
sti
or
adc
frndint
cmp
add
imul
adc
mov
cmc
push
cld
push
hlt
aaa
das
mov
fstps
dec
into
push
mov
add
xchg
insb
jl
xor
mov
xchg
addr16
xchg
das
lds
adc
sti
and
push
add
jnp
je
add
pop
clc
sti
fcompl
jne
mov
add
in
pop
fiaddl
dec
add
mov
or
jl
adc
or
add
sbb
push
repnz
or
push
mov
pop
dec
cmp
or
inc
push
cld
pop
out
push
xor
imul
sbb
add
mov
xor
mov
popa
jno
sub
xor
pop
add
inc
mov
add
add
out
add
rclb
and
pop
or
loope
cld
ljmp
stos
je
repnz
push
or
call
and
cld
decl
lcall
sbb
into
rclb
in
or
inc
mov
lea
mov
mov
push
xor
arpl
add
sbb
sbb
adcl
hlt
mov
sbb
sbb
cmp
add
pop
enter
pop
incl
testl
pushf
scas
flds
imul
test
mov
outsb
hlt
ret
pushf
mov
fisttpl
js
gs
add
fldt
xorb
addr16
or
bnd
lock
repz
jecxz
mov
jnp
jae
mov
sti
out
loope
bnd
hlt
jmp
out
int3
repz
add
pop
jg
mov
shrl
insl
push
xchg
lahf
repz
movsb
jno
sub
add
mov
push
fcmove
mov
dec
test
xchg
inc
jmp
fs
hlt
push
push
cltd
push
ss
gs
loopne
jl
jne
nop
js
shll
sbb
add
test
fwait
mov
sahf
pop
loop
andb
cld
xor
or
pop
loopne
jmp
pop
loopne
jmp
add
push
push
add
into
pop
add
insb
sti
push
scas
les
xor
xor
add
ds
psllw
jmp
call
sti
test
add
mov
arpl
sti
mov
dec
mov
mov
dec
mov
mov
call
add
xor
mov
jb
gs
orb
popf
loope
cld
decl
in
rclb
mov
xorb
add
pop
jmp
pop
adc
xor
cmp
jecxz
inc
add
data16
adc
jo
sti
stc
pop
movsl
jb
mov
popa
cld
jecxz
repnz
pop
sbb
jmp
add
add
cmp
add
inc
mov
add
movsb
punpckhdq
xchg
in
rcrb
mov
jns
pop
fs
popf
jmp
pop
in
jp
fldenv
repz
inc
test
aad
or
jno
int3
repz
add
inc
incb
sti
xchg
pop
sub
cmc
xlat
inc
lds
xchg
cld
or
jno
add
add
and
fs
icebp
sti
pop
adc
jle
jmp
add
add
ret
ret
jmp
mov
push
stos
push
mov
ret
push
dec
int
jmp
clc
ret
repz
jo
outsb
pop
movsb
imul
cmpb
testb
xchg
pop
je
cmc
mov
add
test
test
adc
and
sahf
je
mov
mov
pop
sub
push
dec
or
push
hlt
inc
push
lock
or
nop
ss
pop
aaa
sti
xor
and
rcll
in
repz
pusha
lret
adc
pop
jnp
jg
mov
xor
push
out
mov
pop
in
add
add
loop
mov
in
adc
je
out
cmp
inc
jo
add
add
not
push
rolb
mov
push
mov
test
add
pushf
mov
imul
aad
push
pop
xor
sbb
cs
jmp
jnp
and
xchg
mov
dec
mov
js
add
add
mov
pop
adc
inc
xor
outsl
jb
or
sti
fwait
arpl
jne
pop
push
mov
mov
pop
add
mov
scas
cld
mov
clc
add
dec
push
cmp
pop
decl
daa
repz
add
adc
or
mov
add
and
mov
and
sbb
add
pop
incl
flds
dec
cmpb
or
mov
movsl
mov
lock
movsb
adc
decl
data16
inc
popf
mov
movsb
inc
fbld
add
xor
xchg
repz
cmc
xchg
repz
jmp
mov
jle
aad
sub
cmp
mov
push
add
add
jg
jmp
add
cmp
xor
mov
pusha
sahf
aaa
jge
jecxz
and
dec
repz
lret
fs
aas
mov
mov
mov
inc
push
adc
xor
leave
mov
add
dec
gs
mov
in
cmp
mov
add
fcoml
stc
cmp
add
add
pop
icebp
aaa
sub
sub
ret
sti
add
dec
gs
pop
repz
loop
loope
push
cmc
and
test
into
fs
aas
jmp
test
arpl
mov
jo
xor
mov
add
mov
push
mov
popa
sbb
push
int
incl
add
xchg
xor
jo
adc
std
or
jle
pusha
fisttps
or
insb
mov
and
dec
and
pop
cli
addr16
imul
mov
inc
add
lock
ljmp
shlb
imul
out
mov
cmp
cmc
test
add
fcmovb
cld
decl
mov
inc
mov
mov
std
mov
dec
mov
cmp
ret
fists
imul
or
ds
cld
pop
loop
scas
jge
add
call
sub
dec
push
pop
push
or
iret
dec
mov
and
adc
or
mov
les
sbb
test
add
mov
mov
cmp
or
xlat
mov
aam
pushl
ss
lret
add
cmp
fmull
sub
mov
fwait
popf
xchg
jae
daa
add
mov
pop
bound
dec
insb
aam
mov
jmp
sarb
xchg
mov
add
in
repnz
and
xchg
popf
mov
in
jp
rorb
xchg
sub
cltd
shl
inc
stos
jo
jmp
rcr
popa
pop
xor
add
push
mov
int3
popa
mov
or
outsl
leave
fistps
ret
aaa
pop
test
inc
mov
jg
fwait
out
jmp
repnz
jmp
add
sub
popa
push
xorl
andl
mov
bound
mov
cs
cmc
mov
repz
scas
lahf
repz
mov
cmc
push
lds
push
insb
test
leave
fdivr
jmp
int3
outsl
add
hlt
xchg
dec
call
pop
stc
xchg
movsb
cld
jne
add
popf
jno
and
testl
inc
jne
inc
and
int3
daa
inc
fs
xchg
movsb
imul
gs
sti
test
das
add
mov
divb
sarb
dec
mov
movsb
fsubs
add
cltd
iret
or
jo
or
mov
push
xor
xchg
incl
popl
push
add
pushl
aam
pop
into
call
cs
xor
pop
jb
mov
lret
pop
movsb
fistpl
mov
mov
push
jb
fistl
int3
dec
jp
fcoms
out
mov
call
add
dec
pop
dec
rcll
sbb
popf
mov
outsb
or
mov
or
add
jge
out
push
mov
in
fs
pop
jmp
pop
fcomps
in
shrb
push
stos
test
add
cmp
adc
rorl
and
sbb
out
mov
mov
add
out
test
icebp
jle
or
and
pushf
shlb
add
dec
sbb
xchg
lds
cmp
out
mov
js
pop
sbb
shll
repz
pop
dec
sbb
mov
mov
pushf
inc
in
imul
sti
jmp
or
clc
xchg
loope
xchg
les
pop
push
shr
mov
jmp
dec
out
test
mov
dec
insb
dec
jmp
or
add
add
fildl
lods
clc
dec
pop
test
xchg
cmp
add
mov
sub
mov
mov
cmp
add
sbb
inc
add
push
adc
push
jmp
or
jns
je
icebp
sub
minps
inc
mov
cld
and
push
jmp
or
add
jbe
mov
incb
push
call
icebp
mov
add
xor
incl
js
js
idiv
jne
mov
testl
inc
add
jo
cmp
sub
push
test
cld
loop
push
loopne
pop
mov
add
push
pop
push
dec
rcll
xchg
ja
dec
push
adc
add
or
add
pusha
cmpl
decl
mov
sbb
inc
sbb
add
mov
int3
push
add
add
jmp
dec
mov
add
sbb
push
lahf
subl
jmp
or
cld
cmp
xchg
sub
mov
add
xchg
mov
jle
loopne
mov
jno
push
or
or
add
and
jecxz
fs
lcall
adc
xor
jmp
sub
into
jmp
xchg
cmp
pop
add
mov
push
loopne
pushf
movsl
hlt
jmp
add
ret
mov
add
inc
pop
out
out
mov
dec
sub
mov
repz
fsub
adc
ud1
pop
add
mov
push
xchg
dec
xrelease
or
jmp
repz
mov
mov
pop
dec
insb
inc
loop
negb
call
cmp
xor
or
add
roll
inc
add
or
jo
or
and
mov
call
das
or
je
cld
mov
lcall
je
jmp
cmp
pop
mov
aaa
and
push
sti
fisttps
mov
xchg
mov
hlt
add
jae
lods
int
jp
in
sub
cmp
add
imul
js
cld
jmp
out
add
mov
movsb
dec
push
int
cmp
jne
popf
xchg
movsb
dec
push
dec
and
add
mov
inc
mov
inc
cmp
mov
scas
scas
dec
fidivl
cmp
cltd
in
mov
rcr
scas
dec
mov
dec
mov
add
mov
xchg
dec
cld
repz
push
hlt
je
jmp
into
aas
jae
cmp
inc
push
push
inc
or
mov
inc
mov
dec
movsb
mov
ljmp
or
int3
inc
mov
push
sub
mov
mov
rcr
pusha
jle
hlt
in
mov
insb
xchg
xchg
push
imul
repnz
inc
add
add
ret
pusha
fisttpl
push
and
repz
mov
mov
subl
inc
clc
repz
pop
inc
push
sti
repz
add
sub
or
aad
mov
je
xlat
pop
cli
push
mov
repnz
mov
out
mov
je
test
ficoml
push
lret
std
mov
add
add
push
je
nop
pop
jne
repz
pop
sti
sbb
imul
jmp
cli
push
push
pop
adcl
xor
xchg
repz
pop
rcll
jno
addr16
ds
imul
dec
add
daa
loop
mov
in
pushf
mov
adc
push
mov
mov
jmp
xor
xor
add
out
or
and
nop
repz
mov
add
jne
or
out
data16
out
xchg
or
mov
jg
jno
push
push
scas
lods
jecxz
mov
cmp
je
cmp
mov
lock
jmp
stc
adc
insb
mov
data16
pop
pop
jle
push
ret
dec
mov
add
hlt
lock
mov
lcall
movsb
cld
mov
pop
sub
cmp
dec
and
je
cwtl
outsl
or
pop
lea
shl
ja
cmpb
testl
xchg
add
dec
adc
fmull
xlat
or
lds
aas
jae
add
jle
stc
imul
incl
inc
dec
push
shlb
adc
pop
lds
clc
cmp
pop
jle
cmc
or
mov
mov
push
dec
dec
movsb
xor
sbbl
loop
lcall
dec
mov
jle
or
dec
js
xchg
dec
jo
fs
dec
stos
dec
adc
icebp
adcb
addr16
add
dec
clc
jmp
pusha
clc
jmp
push
mov
pop
sub
mov
fs
adc
pop
loopne
jmp
js
sti
push
cmp
jmp
add
insb
jg
push
adc
mov
add
mov
add
adc
jl
test
inc
dec
sti
cmp
or
jmp
add
sbb
stos
leave
stos
xchg
repz
jb
shr
in
mov
add
testb
aaa
ret
mov
xchg
sbbl
or
mov
or
or
lea
sti
push
ds
jne
adc
add
jl
push
mov
stos
test
mov
pop
mov
std
add
add
test
add
incl
mov
xor
push
andb
lea
call
outsl
inc
jne
fildl
gs
or
add
jb
cli
xor
cld
idivl
sti
add
das
xchg
sub
cld
lcall
hlt
add
and
sub
push
call
add
mov
cmc
inc
je
mov
inc
ss
push
jge
das
add
dec
push
and
mov
mov
xor
pop
call
call
pop
sub
call
enter
or
push
mov
lret
inc
mov
lret
aaa
adc
sub
pop
cltd
push
inc
push
jno
push
mov
adc
cld
jg
call
add
movsb
addr16
mov
pop
lock
pop
push
rcll
rorb
pop
xor
fimull
mov
divl
aad
out
inc
add
xchg
repz
pop
mov
shll
push
gs
cmp
jmp
ret
stos
dec
es
fwait
ror
xor
cmpsl
add
mov
repz
rorl
dec
add
add
pusha
dec
gs
fistps
addr16
dec
lcall
mov
repz
jns
dec
xor
pop
xor
jmp
dec
jle
test
lahf
call
cmp
test
pop
or
inc
xor
add
repz
xchg
mov
inc
sti
push
or
or
dec
sti
jmp
inc
dec
sti
imul
add
jmp
sti
jmp
aas
push
cmp
test
repz
fwait
add
pop
dec
mov
dec
repnz
cmp
int
icebp
add
cmp
or
stos
mov
mov
add
repz
stos
or
pop
jb
jns
dec
sti
add
cmp
call
iret
icebp
push
add
sti
imul
dec
cli
pushl
pop
jo
lods
cmp
pop
cmp
sti
cmp
pop
test
icebp
add
push
mov
pop
nop
jo
add
gs
xorb
push
jne
orl
cmp
mov
mov
adcl
pop
cmp
cmp
std
jmp
add
scas
jne
add
lock
mov
or
test
andb
pop
push
movsb
inc
cld
jecxz
andl
mov
push
mov
out
out
movb
bound
stos
inc
lret
and
and
add
push
and
int3
cmpsl
mov
std
mov
rorl
push
std
push
je
pop
xor
mov
fidivrs
jae
add
je
mov
or
push
std
xor
mov
fs
dec
inc
push
jb
int
repz
pop
pop
lret
dec
pop
mov
push
sahf
cmp
repnz
push
les
ficompl
inc
shlb
jno
jmp
ret
stos
mov
test
aad
dec
punpckhwd
mov
add
shl
hlt
add
inc
dec
enter
rorl
bound
adc
add
dec
push
add
mov
cld
shrb
mov
std
jnp
ret
and
icebp
mov
je
jne
and
dec
and
addr16
aad
mov
fnsave
aaa
imull
dec
jno
int
jne
xchg
ret
jmp
add
jge
lds
cltd
mov
repz
repz
sti
jmp
loopne
pop
jmp
repz
call
and
xor
pop
jge
and
add
fucomi
adc
dec
sub
inc
xor
scas
repnz
and
mov
pop
hlt
xor
push
repz
add
add
cmc
cmc
add
imull
and
testb
aad
add
mov
outsl
inc
movsl
inc
jecxz
mov
outsl
inc
mov
outsl
or
and
or
inc
jne
cli
mov
hlt
push
inc
outsl
sbb
xchg
dec
push
xchg
add
dec
fisttpll
inc
xor
dec
mov
cld
add
add
jns
adc
aad
pop
daa
cmpsl
pop
sarb
push
lret
adc
pop
decl
das
jecxz
nop
pop
mov
lea
imul
jmp
sbb
lea
imul
sbbb
es
adc
jmp
and
pop
mov
adc
mov
add
mov
lahf
subl
jo
repz
inc
dec
jmp
ret
xor
jmp
sub
imul
mov
fidivrs
ja
mov
lods
orl
ret
pop
in
pop
ds
adc
repz
sub
bnd
jmp
add
push
out
imul
iret
psubd
jmp
inc
xor
faddl
int3
repz
dec
call
call
orb
sbb
xchg
adc
cmp
mov
sbb
and
mov
jae
jmp
xor
sbb
adc
inc
jnp
pop
pop
xor
add
add
nop
repz
adc
push
add
mov
push
mov
repz
fs
adc
call
mov
add
or
sub
or
je
jg
repnz
cmpsb
sub
mov
inc
add
sti
sti
pushl
pop
or
sbb
add
lcall
add
xor
lcall
push
mov
lea
dec
sub
cwtl
cli
addr16
fisttpll
rcll
inc
shl
cmpl
mov
mov
pushf
mov
sti
ljmp
push
push
push
js
mov
fs
pop
cld
pop
test
mov
pop
call
jae
out
cmp
add
add
shrb
call
or
or
cwtl
inc
cmp
mov
mov
decl
mov
aad
pop
mov
dec
ficompl
shrl
pop
into
push
call
mov
jmp
imul
cld
adc
or
rcrb
incl
add
lcall
cld
mov
pop
push
int3
repz
add
cmp
sahf
addr16
ret
imul
popf
cmp
push
mov
notb
mov
in
xchg
je
sbb
lock
pop
repz
icebp
data16
mov
cmc
pop
or
jo
mov
cmc
loop
enter
or
lods
xor
enter
cli
pop
dec
movsl
inc
dec
inc
hlt
pop
add
add
les
cltd
sti
pop
repz
jle,pt
add
dec
inc
jnp
ret
or
dec
test
test
aas
jmp
jbe
mov
rorl
sti
adc
insb
inc
xchg
js
testl
pop
cmc
mov
int3
inc
add
xchg
int
mov
pushf
leave
sub
add
xchg
rcrb
fmul
inc
pushf
adc
cmpl
mov
ljmp
call
es
add
insb
ret
clc
or
inc
xchg
testb
imul
test
std
jmp
cmc
call
test
mov
loopne
out
repnz
cmp
inc
xor
add
xchg
aas
push
adc
xacquire
movsl
getsec
and
cmc
add
outsb
or
jns
std
inc
decl
dec
push
sub
in
mov
inc
in
arpl
dec
mov
sbb
jecxz
mov
decl
adc
addb
mov
lea
fadd
dec
pop
pushl
add
add
pop
das
rcll
inc
push
int3
dec
cmc
fsubs
testl
jbe
jno
xchg
ret
mov
aaa
adc
sbb
pop
arpl
dec
cld
jns
ss
andl
or
inc
scas
lea
ficompl
push
call
hlt
adc
shrl
repz
inc
push
std
testb
mov
or
inc
call
xchg
cld
jmp
sbb
stc
mov
out
shlb
jae
ret
insl
mov
ret
mov
shlb
xchg
sub
inc
pop
rcrb
and
adc
xor
jae
mov
bound
rdpmc
aad
jmp
mov
inc
cmp
insb
and
add
add
repz
xor
add
pushf
jnp
stos
ds
dec
dec
enter
inc
sti
jge
leave
sti
cltd
mov
pushf
sti
dec
aas
cs
mov
adc
popl
insl
enter
sbb
in
mov
or
jne
or
pop
testl
mov
enter
add
add
mov
cld
cld
outsl
out
inc
jmp
mov
ret
pop
jle
push
and
repnz
movsb
sti
outsb
or
or
add
cmc
shlb
pop
push
lea
rolb
gs
outsb
or
in
mov
pop
aaa
loop
push
out
push
sub
loope
sub
dec
add
add
jecxz
cld
adc
lods
jge
test
ljmp
mov
dec
cli
jmp
or
pop
in
mov
mov
inc
dec
xor
mov
loopne
das
lea
loop
incl
or
cmp
adc
adc
lea
dec
pop
call
push
sar
add
aad
add
mov
jl
jnp
lahf
xor
jecxz
xor
mov
daa
pop
inc
dec
cld
mov
ret
shr
xchg
xor
gs
sbb
or
mov
mov
mov
ss
add
std
pop
cmp
out
mov
mov
jbe
mov
jo
add
out
add
add
mov
cmp
pop
cltd
loope
cmp
mov
orb
fadds
inc
loop
jnp
push
cmp
mov
int3
repz
mov
cmpsl
or
mov
gs
push
inc
test
lods
cmp
std
pop
not
aad
repz
pusha
in
ret
inc
or
fisttpll
push
xchg
stos
pop
test
add
or
mov
push
insl
or
jne
dec
aaa
cli
dec
cmp
cmc
mov
repz
outsl
pop
ret
dec
data16
orb
xor
mov
loopne
xor
loop
mov
lahf
mov
inc
jae
hlt
cld
dec
aam
icebp
mov
repz
idivl
xor
mov
mov
icebp
shlb
ss
add
shlb
std
push
movl
out
cmpsl
jbe
out
cmpsl
sbb
xchg
iret
mov
bound
add
dec
js
inc
xchg
jae
lds
sahf
cmpsl
cmpsl
mov
clc
dec
repz
xchg
pop
call
testl
repz
mov
cmpsl
xchg
pop
cmpb
mov
fimuls
xchg
pusha
sub
add
lds
mov
dec
cmp
jg
mov
sbb
xchg
sbb
xor
push
cld
inc
dec
jp
sarl
jb
mov
xor
cmp
inc
imul
dec
xchg
fisubl
rcll
idivl
add
or
jecxz
jb
lods
shlb
lds
call
add
int3
les
inc
hlt
xor
push
dec
stos
xor
jno
fcoms
sbb
getsec
xchg
or
mov
push
movb
shl
adc
adc
loop
out
pop
rolb
les
mov
or
adc
andb
pop
xlat
in
and
pop
leave
stc
stos
ss
mov
movsb
or
add
std
add
repz
pop
ficomps
sub
dec
rol
mov
mov
repnz
addr16
cld
inc
inc
mov
dec
mov
inc
adc
inc
or
lret
fwait
cmp
dec
addl
sub
dec
dec
add
add
mov
lea
mov
jecxz
fcoml
add
add
inc
cmp
repz
mov
inc
ss
push
mov
xor
and
cmp
rep
das
jbe
mov
jle
pop
cld
mov
mov
pusha
ss
shlb
sub
popl
jae
dec
and
add
das
inc
sub
pushf
cmpsl
mov
and
adc
pushf
pusha
loope
mov
pop
inc
ja
dec
repz
mov
dec
sti
fstps
pusha
les
bound
scas
push
cwtl
adc
cmp
add
scas
fwait
xchg
pop
dec
pusha
les
stos
fwait
iret
xorl
das
inc
cmpsl
rep
fwait
mov
add
add
xlat
adc
hlt
pop
inc
sarb
push
pop
dec
das
ss
inc
ret
ja
dec
pop
bound
sti
sub
jecxz
push
cmp
push
xchg
cmp
cmp
mov
sar
shl
filds
push
pop
mov
aas
jle
addr16
dec
dec
push
mull
jne
pushl
into
andb
add
mov
and
fwait
popa
jnp
mov
out
dec
incl
cltd
push
mov
mov
sar
xor
mov
pusha
leave
mov
dec
cmp
aas
add
mov
je
pop
xor
das
sub
sub
cmp
jmp
andl
mov
add
add
inc
xlat
mov
aas
mov
orb
roll
scas
sbb
adc
inc
push
out
pop
add
call
out
jmp
sarb
add
jbe
shlb
pop
mov
subb
push
les
sub
scas
mov
add
push
lahf
ljmp
add
mov
add
stc
shlb
cmc
movsl
out
ja
push
xchg
ljmp
mov
out
pop
push
add
inc
ljmp
and
andl
ljmp
fmull
test
std
roll
stos
flds
mov
stos
or
rsm
or
add
add
mov
jmp
sub
out
mov
test
or
mov
pop
outsl
test
aas
mov
sbb
xchg
test
sbb
jecxz
or
cmp
dec
repz
or
subl
test
mov
mov
sbb
rep
test
ljmp
add
jg
jb
pop
inc
and
dec
sbb
pop
push
or
xlat
lods
repnz
xchg
popa
pop
pop
je
or
or
cmpsb
nop
sbb
pop
jne
inc
enter
jle
or
popa
repz
sbb
ret
popa
dec
or
nop
je
jae
ljmp
fidivl
add
iret
fs
je
ret
push
add
pop
fidivl
repz
insl
dec
loope
xchg
outsb
sbb
je
outsb
and
sub
movsb
lods
pop
icebp
adc
adc
sbb
dec
jge
adc
mov
lods
dec
dec
mov
mov
xchg
int
xchg
lds
jae
adc
lret
add
push
movsb
jae
dec
push
in
xchg
dec
mov
push
mov
jecxz
lods
mov
add
add
pop
or
shll
sub
out
mov
push
mov
push
pop
cli
shll
mov
pop
stos
cli
leave
shlb
fbstp
out
jnp
cli
shll
cmp
mov
gs
and
add
sti
shrl
mov
jle
push
cmp
sbb
jle
push
imul
xorl
frstor
pop
ret
mov
loopne
and
mov
fwait
and
push
add
mov
jae
pop
pop
aaa
mov
aas
in
or
fisubs
sub
aas
xchg
push
or
mov
pop
xchg
push
sub
xchg
add
mov
shlb
movsb
or
outsb
sub
xchg
test
lds
xlat
jecxz
loope
sub
mov
xor
or
sub
es
xor
or
mov
mov
test
pushf
and
add
pop
int
or
push
jo
pop
scas
ljmp
into
leave
ss
jno
dec
push
out
ret
inc
jno
mov
xchg
mov
push
jo
andl
arpl
add
or
xchg
xchg
and
add
or
mov
test
or
jo
outsl
jp
or
or
add
repnz
leave
mov
inc
test
mov
mov
and
push
icebp
jmp
xchg
or
jmp
scas
jmp
inc
sub
inc
sahf
add
shrb
jo
jmp
insl
in
test
in
push
shrl
ljmp
and
ds
jecxz
xchg
inc
lea
int3
icebp
test
or
add
inc
mov
sti
cmp
dec
repz
ljmp
sti
fcom
cmpsl
arpl
and
pop
sbb
xor
frstor
and
shll
xor
push
out
adc
and
mov
xor
cli
mov
or
xor
cmp
xor
roll
pusha
sub
push
sub
add
icebp
pusha
out
jmp
faddp
xchg
mov
sbb
scas
cmpsl
imul
ss
fldl
push
scas
sti
roll
cmp
repz
cmpsl
or
shrl
add
jnp
test
sbb
xlat
imul
xlat
jnp
loop
mov
or
sbb
xlat
push
jle
xlat
add
add
outsl
jge
rcrl
cs
xchg
push
inc
jmp
test
mov
imul
jmp
leave
xchg
mov
sbbb
cltd
xor
mov
or
inc
pop
pop
mov
pop
insl
add
sub
jecxz
jl
fcmovnbe
and
push
xor
add
ret
mov
insl
pop
repz
dec
adc
sub
stos
fisubrl
dec
gs
mov
fisubrl
pop
nop
movsl
inc
fisubrl
mov
mov
test
jmp
or
les
xchg
push
insb
pop
dec
in
sarl
push
insb
pop
inc
aad
ja,pn
insb
or
repz
or
xchg
sbb
insb
add
add
push
in
insb
test
jmp
xchg
inc
lods
movsb
mov
ljmp
adc
adc
inc
lea
inc
rolb
shll
inc
and
int
ret
and
int
nop
lea
insb
adc
mov
outsl
or
jmp
fdivrl
dec
mov
pop
bound
pop
xchg
mov
add
imul
pop
test
movsl
xor
pushf
addr16
mov
mov
shrl
cmp
cs
rcll
outsl
pop
mov
cli
roll
outsl
pop
mov
cld
shrl
in
sub
mov
shrl
dec
sub
xor
shrl
dec
cli
push
mov
aaa
jno
lock
test
das
out
fnsave
xlat
enter
out
add
add
mov
mov
mov
pop
out
popa
aad
shll
and
add
aaa
out
xlat
jecxz
or
fimuls
xor
pop
repz
stos
add
lret
test
pop
iret
xlat
xor
mov
sub
cs
stos
inc
sub
pop
and
adcb
or
jae
repz
loope
add
add
mov
test
dec
pop
xlat
mov
test
mov
loope
je
or
dec
popf
repz
xlat
fwait
pushf
jmp
in
mov
int3
jge
test
inc
sub
pop
push
pop
or
or
sub
loop
fiaddl
ret
cmpsw
xlat
mov
mov
pop
or
add
pushf
pop
ss
or
cmpsb
cmp
lea
int3
sbb
lcall
or
pop
je
into
pop
pop
mov
mov
inc
push
aam
sbb
pop
or
ss
das
cmp
int3
jge
loopne
aas
repz
lret
mov
cmp
pusha
ds
adc
in
fisubl
cltd
add
add
test
and
pop
adc
aaa
ficoms
sub
mov
pop
xchg
jne
enter
pop
test
adc
sub
pop
push
insb
pop
lods
out
jmp
je
cmp
addr16
insb
lret
addl
fcompp
and
sub
xor
add
adc
push
add
add
inc
rorl
cmp
jecxz
cmpl
xor
sti
jmp
sbb
push
scas
xchg
aad
jmp
nop
lock
mov
call
sub
rclb
sbb
scas
ss
jl
add
shl
and
and
pushf
push
and
rcrl
and
jmp
nop
repz
add
jmp
adc
cwtl
add
add
insb
int
xor
scas
sti
out
jmp
jmp
out
add
iret
out
or
add
add
int
les
cmc
pusha
xchg
lahf
out
or
xor
mov
add
pusha
xchg
out
or
jns
add
add
add
mov
xchg
mov
addl
popf
movsl
les
gs
mov
call
in
mov
cmp
decl
daa
jns
or
push
add
andnps
lcall
or
ljmp
xchg
push
or
pcmpgtw
jmp
daa
dec
add
add
xchg
call
push
sbb
mov
or
imul
in
mov
stc
call
sbb
ljmp
repz
test
jbe
sbb
pop
and
sub
jecxz
add
cmp
mov
xor
add
add
mov
jmp
mov
test
pop
mov
rcrb
adc
inc
xlat
ret
shrl
mov
and
mov
dec
mov
sub
mov
icebp
push
repz
mov
push
pop
or
es
mov
movsb
xchg
add
push
shrb
and
add
add
add
sti
adcl
inc
jmp
adc
pop
call
sbb
mov
fs
mov
test
and
insb
dec
movsl
sbb
lds
lea
jl
jle
jae
jbe
xchg
dec
and
daa
int
add
iret
and
add
std
outsb
pop
add
add
je
add
popf
mov
xchg
xchg
xchg
fs
psadbw
lods
pop
repz
fcoms
inc
xor
mov
sti
jmp
repz
cwtl
decl
das
hlt
add
add
pop
add
repz
mov
xor
add
out
adc
jg
mov
xrelease
mov
cmp
xor
push
cld
fucom
pcmpgtb
cld
jae
aas
jae
popl
dec
mov
notb
out
pusha
add
or
mov
cwtl
pop
cli
xor
mov
cs
decl
dec
nop
inc
cmpsb
push
mov
or
pop
cld
or
addl
add
pop
stc
sub
lods
or
or
in
push
adc
mov
in
sub
lret
cwtl
inc
jae
xchg
jnp
mov
sbb
hlt
lods
push
mov
call
sbb
and
ret
cmpl
into
jo
and
ficomps
sbb
jae
stos
add
mov
jmp
sbb
insb
js
push
ljmp
add
mov
imul
addl
add
xor
jne
adc
clc
ret
pop
sbb
addl
repz
js
sbb
sbb
add
add
ret
sbb
pop
mov
xor
imul
push
or
repz
lahf
cmp
add
mov
add
add
test
sti
bound
pop
movsb
inc
data16
jns
dec
cmp
sti
out
xor
fidivs
jmp
shrb
scas
pop
sti
jb
lods
sti
lahf
pminsw
adc
pop
call
pop
add
mov
mov
aas
cli
pushl
imul
test
aas
cli
incl
add
jl
add
imul
fstl
inc
push
add
cmc
add
push
data16
mov
rorb
imul
icebp
add
and
out
add
adc
cmp
add
cmp
add
lock
ljmp
imul
lock
xchg
push
and
push
sti
jmp
push
and
add
mov
mov
mov
add
sbb
decl
mov
xchg
lea
decl
mov
lahf
mov
decl
mov
xchg
mov
decl
mov
lahf
lea
dec
or
decl
lret
fcoms
decl
mov
jmp
inc
loop
decl
shl
orb
dec
jge
cld
sbb
incl
mov
pop
add
add
adc
jmp
push
push
xchg
sbb
xchg
enter
cmp
cmp
xchg
dec
fistpl
pop
sbb
or
add
cltd
pushf
dec
repz
stos
sbb
sbb
jmp
add
repz
pusha
dec
fwait
cmpsb
add
jbe
stos
repz
sbb
mov
inc
xchg
rclb
pop
add
add
stc
mull
xor
dec
jbe
sub
les
sbb
sarl
lahf
push
add
dec
repz
lret
ret
add
adc
outsb
push
outsl
sub
test
andl
sbb
lret
add
sbbl
stc
jo
sub
pop
outsb
add
add
add
outsl
sarb
mov
je
fcoms
enter
dec
sbb
xchg
imul
in
dec
test
sti
popl
inc
jno
sbb
adc
sub
xor
cmc
pop
mov
push
cmp
lahf
adc
add
pushf
ja
sti
gs
xchg
outsl
inc
mov
aas
and
xchg
js
add
out
call
xor
es
and
addb
rcll
push
xlat
cld
call
and
std
adc
sbb
mov
xor
xor
lcall
mov
add
je
cwtl
push
movsb
xor
test
jg
jl
mov
aas
jae
or
add
add
sahf
push
jl
or
adc
lret
inc
lods
std
pop
push
in
xchg
sbb
push
mov
push
adc
lds
inc
push
pop
cmpsb
and
mov
jae
or
push
fidivl
jp
push
or
mov
mov
mov
push
or
add
mov
orb
jmp
add
add
sub
jb
pusha
lahf
mov
add
repz
repnz
test
push
mov
cmpsb
mov
inc
mov
sbb
cli
test
adc
ret
push
adc
mov
add
mov
or
mov
push
lahf
add
add
push
pop
push
dec
jo
mov
xchg
lahf
out
xor
fsubrl
mov
mov
loopne
leave
add
add
inc
aas
loopne
add
repz
or
mov
repz
ljmp
sbb
call
jb
sti
cmp
push
loope
es
mov
adc
nop
push
push
sti
jmp
add
add
cld
in
pop
out
test
jmp
or
inc
jmp
unpckhps
jmp
shlb
test
or
or
ljmp
push
xor
lcall
orl
test
push
sbb
outsl
or
mov
das
sti
ljmp
pop
adc
add
jbe
sti
ljmp
lcall
test
jnp
mov
cmp
sbbl
or
clc
sar
loop
xor
dec
xchg
aas
pop
push
jae
and
xchg
cs
dec
int
idiv
mov
cld
adc
mov
pop
pop
out
mov
nop
or
jb
jne
cld
jns
clc
aas
mov
pop
dec
add
add
int3
mov
cmp
or
jmp
or
div
adc
xchg
add
jl
jae
fnstenv
aas
mov
mov
sbb
ret
test
jbe
ja
scas
imul
xchg
pop
call
data16
adc
sti
fs
mov
add
mov
jmp
xchg
fwait
adc
or
adc
xor
add
into
cwtl
xchg
stos
shrl
sti
mov
daa
in
add
jle
cld
xor
pop
enter
clc
repz
js
xlat
in
ror
jae
add
cli
test
sbb
jmp
adc
add
xchg
shlb
xor
add
push
and
push
xor
add
dec
sbb
and
sub
aaa
inc
icebp
xchg
repz
ja
int
cmp
mov
xchg
call
xorb
cmc
push
inc
call
arpl
into
ficoms
xchg
add
add
add
adc
mov
mov
lods
xchg
mov
js
clc
add
mov
xchg
mov
mov
or
mov
cmc
test
cld
pavgw
mov
lea
xchg
add
cmc
std
adc
fnsave
test
fimull
or
in
add
add
add
test
xor
in
push
clc
ds
mov
mov
or
je
je
xchg
shrb
clc
aas
cld
fidivs
add
mov
add
or
nop
dec
negb
lds
lcall
adc
pop
outsl
xor
inc
xchg
shl
bound
xor
nop
addr16
add
and
push
cld
mov
fiadds
std
pop
xor
mov
hlt
jmp
ljmp
xchg
rorb
add
int
push
add
scas
mov
data16
mov
inc
ljmp
pop
js
mov
xor
repz
inc
out
cmpb
or
movsl
iret
add
sbb
iret
add
add
test
pushf
pop
xor
add
fisttpll
mov
repz
or
push
loop
dec
mov
addl
test
inc
hlt
icebp
testl
sti
jmp
and
jb
lock
movsl
cmp
pop
mov
add
jo
outsl
jecxz
adc
testb
dec
adc
add
repz
push
insb
xor
and
movl
movsl
dec
ljmp
pusha
dec
add
sbb
xchg
dec
rorb
jmp
xchg
jb
out
mov
jl
lds
push
mov
repz
xchg
or
push
sti
jmp
pusha
xor
into
cltd
push
sti
bound
testb
add
cmc
cmpsl
push
rclb
or
ljmp
sti
ljmp
les
add
inc
and
xchg
fs
mov
mov
nop
ja
cmp
mov
add
testl
test
fwait
andb
cmp
cwtl
icebp
dec
sub
dec
push
push
add
add
in
decb
and
lcall
pop
out
dec
mov
fsts
inc
das
testl
or
out
cld
and
out
out
mov
add
jmp
jl
mov
mov
pop
dec
push
call
cmpsb
jg
fs
sbb
mov
xchg
nop
and
in
ja
add
add
push
sbb
inc
pusha
add
outsb
fistpl
add
inc
int
or
lock
mov
inc
div
push
hlt
lods
add
jecxz
aas
jae
mov
mov
xor
mov
jmp
sub
mov
das
inc
mov
sbb
nop
or
in
add
hlt
jmp
add
push
nop
push
pop
hlt
mov
cmp
sbb
jmp
clc
dec
or
sub
add
jmp
and
outsb
sbb
jmp
add
push
xor
jg
hlt
jmp
add
mov
or
ja
iret
add
jo
xor
int
jnp
xchg
movsb
xor
jmp
add
add
repz
cmp
mov
jmp
mov
repnz
nop
repz
cwtl
inc
and
lcall
sub
stc
callw
call
bound
sbb
adc
dec
add
xchg
mov
fnstsw
adc
mov
in
stc
call
bound
or
add
add
rclb
add
mov
xor
jne
add
mov
jmp
jne
add
repnz
das
cmp
sub
pushl
insl
inc
jecxz
std
hlt
add
jno
dec
mov
inc
dec
psrld
push
scas
dec
sub
mov
ret
sti
punpckhdq
or
and
add
popf
push
cld
rcpps
ljmpw
dec
roll
xlat
lock
jno
or
push
lea
add
xor
lcall
or
or
sbb
pushl
test
pop
loopne
dec
ljmp
addl
inc
int
dec
or
dec
or
jl
fldl
add
inc
int
push
clc
sbbb
sysret
dec
ud0
push
xchg
adc
outsb
and
xor
xchg
xchg
add
mov
inc
mov
mov
ficomps
hlt
aas
mov
mov
out
jmp
pop
push
adc
sub
sub
cli
adc
pusha
push
movsb
lret
fwait
adc
cltd
addb
test
int
imul
pop
add
add
mov
and
add
ret
rcrl
pop
pop
jge
fildl
xchg
adc
jmp
mov
daa
jo
and
adc
divl
repz
bound
fstpl
mov
add
js
into
aad
loopne
repz
mov
xchg
add
or
cmp
push
mov
xchg
lret
or
add
inc
mov
in
pop
fnstsw
jge
pop
mov
adc
add
push
mov
push
adc
mov
mov
inc
adc
jge
mov
adc
adc
jge
js
call
movsl
mov
mov
add
aad
push
clc
outsb
movsl
in
fldenv
inc
ljmp
sbb
mov
mov
jb
sbb
je
add
jbe
adc
push
adc
aaa
pop
sbb
add
shrb
add
fbstp
aas
mov
or
loope
test
dec
add
add
mov
add
rolb
ret
mov
xrelease
aaa
mov
in
xchg
push
clc
dec
lea
sbbl
cmpsb
xchg
push
clc
mov
jle
rorb
pop
shl
and
mov
sbb
mov
inc
aaa
inc
pop
and
iret
adc
leave
jle
dec
insb
adcl
add
add
pop
addr16
leave
mov
mov
ret
sti
sti
jg
add
in
int3
repz
hlt
insl
jle
add
mov
negl
xor
icebp
mov
fwait
pop
aad
roll
mov
clc
popa
js
and
outsb
push
xchg
js
and
pushf
pusha
push
fdivl
sbb
or
pushf
lock
lds
jmp
mov
pusha
addb
int3
jns
in
arpl
repnz
jmp
shrl
jle
adc
jo
js
cmp
adc
add
dec
add
mov
pop
pusha
faddl
mov
insb
inc
sbb
push
cmp
pushf
jmp
mov
imul
mov
jmp
jge
pop
je
jmp
cli
into
add
add
add
add
mov
jg
mov
in
mov
out
insb
jne
pop
mov
ret
repz
repz
hlt
ret
cmc
test
mov
fdivl
jne
adc
jns
add
incl
ljmp
arpl
out
adc
add
add
lods
mov
jge
testl
aam
push
in
mov
inc
lcall
por
test
add
scas
mov
pop
add
add
mov
add
jbe
add
pop
or
adc
je
mov
mov
add
cmp
aas
push
or
xchg
add
cwtl
or
inc
sub
push
daa
push
call
inc
adc
xchg
or
cld
jne
adc
repz
lock
jmp
hlt
call
sbb
jne
adc
hlt
mov
hlt
xchg
sahf
mov
or
stc
mov
in
pushf
xchg
add
push
push
sti
add
ret
push
pusha
and
jmp
out
insb
movsb
out
mov
adc
mov
or
jl
sti
aaa
je
jmp
insb
lods
jmp
mov
or
mov
sti
pop
pushf
mov
pushf
repz
mov
jae
daa
inc
test
fiaddl
xor
call
cmpsb
movsl
mov
add
lock
add
mov
jo
lods
imul
inc
dec
int
jno
add
subb
cmp
pusha
les
or
aad
or
hlt
add
add
push
ds
mov
add
movl
pop
insl
dec
adc
mov
bound
jne
adc
dec
flds
add
call
mov
cs
adcb
fildll
mov
insb
jge
jns
hlt
sub
insb
jge
adc
aaa
adc
jg
sub
adc
mov
mov
inc
lea
std
outsl
jge
fidivs
and
and
mov
jo
hlt
sahf
scas
cld
mov
or
lock
dec
flds
add
pushf
mov
psrld
sbbl
dec
in
icebp
sbbl
push
in
xchg
push
lods
cli
je
je
add
lods
adc
adc
ret
xor
add
test
lea
sbb
clc
xor
andnps
loope
add
mov
mov
jb
add
int
inc
xchg
inc
xor
cmp
mov
mov
pop
pusha
add
jge
xchg
dec
in
dec
repz
cmp
dec
fadds
inc
fisttps
pop
dec
repz
mov
sti
jle
xchg
popa
xchg
xchg
or
bound
jl
orl
dec
xchg
add
sub
mov
dec
ljmp
add
add
xchg
testb
mov
inc
repnz
int3
mov
cmc
addr16
insl
inc
mov
xlat
add
pop
mov
add
jmp
push
or
callw
mov
or
movsb
out
or
pushf
adc
xor
stc
stos
add
and
bnd
sbb
pop
mov
add
add
repz
dec
les
add
push
cmpsb
adc
aas
mov
ret
shr
add
add
aam
pusha
int3
daa
out
push
mov
adc
insl
dec
xchg
cmpsb
xor
ljmp
aaa
sub
cli
xchg
inc
dec
dec
xchg
inc
push
cmp
jns
lcall
out
pop
cli
out
cwtl
clc
bound
add
repz
sbb
jp
add
push
add
push
xorl
adc
cmc
test
jnp
jnp
std
out
jne
stos
inc
adc
jne
xor
mov
sbb
and
pusha
in
adc
mov
loopne
jle
loopne
inc
incl
add
mov
sub
daa
jae
aam
insl
inc
ljmp
add
sbb
cli
inc
inc
fsubr
inc
push
loopne
out
mov
push
pop
mov
sbb
push
mov
add
in
sarb
jg
mov
shll
inc
lcall
decb
call
cltd
add
add
test
cld
jae
mov
mov
or
cmp
bound
add
mov
add
inc
mov
mov
push
inc
mov
adc
dec
hlt
add
hlt
jne
xchg
sti
or
repz
xlat
jle
repz
sti
cmp
inc
inc
imul
roll
outsb
test
add
cmp
xchg
inc
sbb
cmpsl
jle
add
sahf
cltd
repz
pop
jns
xor
add
jbe
jnp
stc
jo
ja
pop
sti
addr16
pop
dec
nop
hlt
ds
push
jle
pop
dec
mov
jmp
repz
insb
movsb
repz
and
add
test
movsb
fistpll
fisttps
scas
cmp
or
sti
repnz
add
xor
add
pop
jg
jae
push
subl
into
push
enter
add
xchg
sub
lock
fisttps
ja
icebp
add
adc
mov
outsl
dec
fprem
mov
mov
repz
testl
bound
aaa
pushf
xchg
ljmp
int3
sti
mov
add
add
lcall
bound
mov
mov
inc
mov
or
mov
jge
jne
clc
lods
repz
jmp
xor
xchg
dec
sahf
pushl
xchg
mov
xor
xchg
mov
jp
std
out
jbe
scas
test
jl
mov
add
mov
add
xchg
rorl
add
enter
pop
cmpl
add
js
lock
cld
sub
adc
push
cld
mov
hlt
cmpsl
fincstp
js
fsubs
push
ljmp
aas
fisttpl
pop
dec
mov
test
or
dec
mov
lea
jl
jl
mov
incb
or
pushl
and
xchg
sbb
pop
mov
add
sbb
pop
xor
cmpb
add
cmp
push
inc
add
nop
add
dec
xor
mov
sub
add
xor
dec
fisttpl
mov
faddp
mov
pushf
out
sti
and
aam
xchg
out
lahf
add
jp
pushf
out
repz
aam
push
sbb
add
cmp
pop
push
test
cwtl
jge
pusha
sub
pop
sbb
out
push
sti
out
movsb
push
mov
lock
jmp
out
mov
call
add
scas
std
pop
xchg
dec
out
aaa
push
sbb
rcrl
add
dec
or
mov
pop
jg
add
add
jbe
sbb
pop
push
stc
data16
adc
imul
sub
loop
add
and
bnd
repnz
push
test
shl
into
mov
add
fsubrs
mov
repz
jp
test
pop
decl
rorb
inc
movsl
inc
xrelease
pop
adc
rolb
jo
jmp
sub
add
jnp
add
sarb
inc
clc
pop
imul
mov
ljmp
movsl
insl
jl
xlat
cmc
decl
xchg
inc
hlt
jbe
flds
pop
fldl
pop
loope
ss
in
cs
icebp
lea
testb
sub
aad
jo
add
pusha
add
test
xlat
add
imul
add
add
dec
cmp
jne
filds
or
shl
pop
jae
or
mov
fdivl
lret
cmp
sub
cmpl
loopne
inc
jns
call
aam
inc
aam
cmp
neg
jns
rclb
pop
in
add
sub
inc
push
adcb
into
shll
add
fstpt
int
push
mov
mov
sbb
mov
les
clc
ltr
fidivrl
test
rorb
push
push
cmpl
ja
jmp
jnp
or
test
or
hlt
add
inc
mov
or
ljmp
ss
add
add
test
xlat
lds
call
aam
clc
icebp
ljmp
cmp
hlt
mov
mov
xchg
hlt
mov
int3
data16
add
jmp
rcr
xchg
jno
add
pusha
lock
repz
ret
add
sti
mov
jnp
pushw
pop
aaa
js
popf
push
sar
mov
and
push
push
mov
add
xchg
jecxz
movsb
cmp
xchg
sub
jnp
movntq
out
jle
movl
insb
and
jnp
out
jmp
jb
dec
enter
push
cmc
jp
adc
push
addl
popl
bound
pop
sbb
jae
cli
dec
or
push
add
mov
loop
fdecstp
setnp
inc
add
add
cli
and
xlat
outsb
cmp
jb
insl
sbb
aaa
cli
inc
xor
into
mov
repnz
add
repnz
sbbl
cli
inc
inc
fidivs
cmp
out
push
mov
ret
jb
rorb
subb
push
das
cli
mov
jne
xor
loopew
inc
mov
cmp
cmp
add
cltd
fdiv
decl
inc
add
lcall
leave
fdivr
mov
xlat
test
shrb
jge
mov
aam
or
add
mov
mov
mov
push
call
fdivr
mov
fildl
mov
pop
xchg
pusha
inc
in
into
adc
or
loopne
inc
int3
pop
lods
jge
add
add
add
loopne
icebp
hlt
outsl
mov
lock
mov
push
cmp
repnz
std
pushw
call
add
repz
and
cwtl
or
fistl
inc
cmp
leave
xlat
pop
ds
jns
fildll
jmp
dec
pop
enter
sbb
mov
mov
add
int3
jp
out
outsb
sub
add
pop
out
clc
femms
out
mov
lcall
cld
lcall
push
xchg
pushf
mov
pusha
sbb
and
sub
pop
mov
mov
or
push
je
cmc
cvtpi2ps
jo
lret
mov
clc
test
and
bound
add
stos
movsl
add
je
loope
ds
pusha
lds
xchg
cmp
call
sub
add
dec
and
sub
jne
and
pop
fcomp
test
repz
inc
out
mov
add
push
cli
iret
outsb
mov
sbb
adc
add
subb
xor
dec
xor
push
jp,pt
aaa
push
mov
or
scas
outsl
into
int3
adc
add
je
add
mov
xchg
lock
jle
sbb
out
xor
push
incb
add
outsb
je
outsb
arpl
mov
jmp
jp
mov
mov
dec
cwtl
add
add
ret
in
add
push
rorb
add
jo
fnstsw
push
pop
pop
jmp
mov
pusha
js
dec
push
cmp
adc
ret
je
add
sbb
and
incl
sar
enter
popa
cmp
ror
pop
mov
mov
push
mov
push
add
add
test
push
nop
jb
push
mov
cli
inc
jnp
icebp
pop
dec
cmp
cmp
and
decl
cmp
outsl
xchg
cmp
test
fisttpl
push
xchg
sarb
fcoms
xor
icebp
pop
push
hlt
jle
inc
pop
nop
js
mov
movsl
rcr
jl
in
dec
in
sbb
outsb
xor
xchg
iret
add
add
push
ret
cltd
dec
hlt
popa
sbb
neg
mul
jns
pop
dec
shr
jmp
das
sbb
xlat
call
test
xor
test
in
inc
lods
sbb
das
in
bound
add
jo
in
add
sarb
cli
scas
adc
loope
mov
call
insb
sub
add
mov
jo
mull
add
add
das
pop
or
push
test
movl
aad
jmp
cs
in
ds
cli
mov
mov
test
push
out
sub
fld
jmp
sub
in
add
and
push
leave
ja
add
cld
fadds
test
aas
stc
mov
add
inc
mov
mov
aaa
sti
add
add
out
jp
sbbl
cmp
jbe
call
faddp
test
bound
add
xrelease
dec
jbe
gs
cmp
pushfw
cmp
pop
adc
add
add
push
mov
notb
and
mov
dec
je
add
or
repnz
sbb
xor
add
jle
xchg
push
lds
or
decl
push
or
fwait
out
adc
adc
stos
dec
push
inc
or
fsts
loope
dec
rolb
or
mulb
bound
add
pop
ret
add
lgs
or
stc
and
xorl
pushf
clc
add
add
push
jmp
add
fadds
into
test
adc
into
das
lock
call
inc
mov
js
fdivl
sub
js
or
enter
ja
sub
mov
mov
and
fdivl
sub
js
fsubs
loopne
pop
clc
xor
add
sbb
sbb
lret
mov
adc
test
jecxz
cwtl
inc
ffree
xor
jmp
or
push
jne
adc
mov
out
subl
out
ret
repnz
shll
add
packuswb
jmp
cwtl
jmp
add
jo
mov
jb
dec
pop
inc
pop
movsl
add
add
add
xchg
pop
and
jle
add
fcoml
inc
jmp
pusha
xchg
add
dec
popa
sbb
xchg
add
cmp
add
sbb
add
and
push
jle
or
add
js
and
pop
mov
jmp
imul
stos
out
add
sahf
mov
loopne
add
add
leave
pop
add
inc
out
call
test
dec
adc
cmp
dec
testb
cmc
dec
add
xor
and
ret
push
mov
ja
jl
lret
mov
subl
mov
pop
or
mov
or
or
add
push
pop
add
add
pop
xchg
pop
mov
call
or
jo
add
or
xchg
jl
or
add
test
fsin
incl
int3
mov
popf
adc
adc
mov
sbb
mov
shrl
out
out
decb
cli
repnz
xchg
mov
xchg
dec
clc
push
loopne
loop
add
loop
gs
add
push
cli
out
adc
data16
je
clc
cmp
pop
fsub
mov
or
clc
mov
insl
sbb
stos
add
mov
ljmp
repnz
mov
mov
lods
add
mov
divl
mov
or
loopne
ja
loopne
dec
imul
mov
push
nop
je
aam
insl
sub
or
add
or
add
repz
fimuls
aad
jmp
mov
jb
outsb
inc
inc
pop
js
push
cmp
add
or
jmp
adc
or
push
loope
mov
gs
add
adc
jge
scas
repz
fcoml
sbb
out
repz
push
cwtl
outsl
inc
jno
jbe
mov
add
add
mov
add
shr
mov
repz
std
sub
bound
push
xchg
jp
pop
rcll
mov
push
addb
scas
dec
push
push
shl
push
add
dec
outsl
inc
sahf
jle
and
cmc
mov
call
into
mov
adc
scas
mov
or
inc
mov
in
inc
lds
mov
add
inc
daa
jmp
data16
xor
cmpsb
lods
push
rolb
bound
lock
call
stc
mov
test
hlt
add
mov
icebp
push
dec
loopne
sti
mov
int
orl
xchg
int3
mov
ds
call
inc
decl
inc
xlat
pop
dec
orl
add
add
movsl
cmp
ds
mov
pop
add
movsb
mov
lea
push
cmp
pop
jo
das
mov
fwait
add
sub
int3
decb
les
clc
jae
jnp
mov
out
addr16
icebp
fwait
repz
scas
repz
adc
mov
fdivs
push
testb
add
push
pop
adc
push
xor
insb
aad
ret
mov
dec
insl
jecxz
pop
dec
loopne
mov
outsb
jb
jecxz
lods
popa
pop
pop
jmp
pop
xor
outsb
shll
fadds
xchg
ja
lcall
push
sub
jbe
add
push
outsl
je
ja
lahf
jmp
add
add
dec
sahf
jmp
or
jmp
mov
fildll
js
cmp
sub
test
xor
pop
cli
fsubrl
adc
ss
pop
loope
xor
add
sub
sub
movb
rolb
jmp
or
add
test
add
and
call
add
add
sub
add
adc
jmp
push
test
testb
lods
hlt
test
push
push
add
lock
lea
push
push
sbb
add
xor
inc
jno
arpl
mov
push
test
sub
mov
adc
cmpsl
push
add
out
loope
les
add
mov
or
das
jmp
mov
loop
or
inc
push
dec
or
std
in
loop
int
orl
int3
incb
push
push
push
dec
inc
std
clc
dec
and
movsl
add
sub
leave
cmp
xchg
mov
and
faddl
mov
or
add
mov
pop
rcll
jg
add
cmpl
jg
int3
rcll
or
add
mov
hlt
sub
cs
int
lock
add
out
leave
mov
mov
loope
sbb
mov
jl
mov
inc
ljmp
ret
call
add
addb
ret
aad
mov
mov
insl
lods
iret
or
inc
add
lods
mov
mov
jg
dec
arpl
push
or
lods
insb
mov
jg
dec
inc
aam
or
out
rorb
sub
std
paddq
les
or
gs
in
xchg
test
or
inc
repnz
out
mov
add
xchg
push
mov
xchg
mov
add
inc
das
cmc
stc
jg
jmp
jmp
pop
add
push
inc
inc
pop
lret
fisttps
lret
aam
jo
cltd
nop
movsb
inc
xor
jo
in
in
stc
cltd
out
sbb
fcoml
xchg
jg
or
xchg
mov
in
movsl
hlt
test
mov
add
mov
cmpb
add
rclb
xchg
out
lahf
or
mov
addl
rorl
mov
cmc
add
ret
repz
or
lahf
orb
pop
adc
decl
cmp
pop
sahf
cwtl
jmp
test
repz
sub
or
scas
inc
iret
in
dec
rolb
add
xlat
pusha
shrl
or
mov
das
aad
stos
mov
or
mov
in
xchg
add
jo
dec
lcall
or
dec
mov
outsb
push
ror
inc
push
mov
mov
jl
ds
incb
int3
push
in
pop
cmp
cld
mov
nop
cs
xor
outsl
add
add
adc
cmp
cltd
cli
call
fldl
push
sbb
es
repz
call
out
jp
repz
ljmp
or
das
daa
call
add
sar
mov
xchg
mov
test
dec
or
out
add
add
repz
shr
incl
cli
out
jle
cmpsl
iret
call
xchg
out
xchg
push
push
add
mov
or
sub
cmp
pop
lret
insl
add
imul
adc
rclb
push
out
in
out
cmp
daa
cmpsb
ljmp
repz
mov
mov
in
add
add
int3
daa
cli
and
push
xchg
push
ss
mov
jmp
pop
mov
stc
enter
inc
ret
xchg
pop
jmp
and
push
cwtl
xchg
inc
push
push
out
jae
adc
jmp
mov
add
pop
ds
mov
test
cmpsl
idiv
pushf
inc
add
add
add
lea
add
mov
dec
push
pop
jmp
test
sub
mov
mov
jecxz
lock
mov
pcmpeqw
in
cmpb
jne
movsl
inc
scas
add
and
jo
or
sub
mov
cmc
cmp
jl
add
push
jl
inc
cmp
inc
popf
jp
inc
sbb
inc
cli
leave
incb
bound
mov
sti
mov
push
lock
and
add
ret
mov
call
jnp
aad
push
pop
pushl
ja
je
sar
pop
mov
cli
fldcw
jne
fs
repz
push
pop
xlat
xchg
rclb
add
mov
and
shl
mov
std
leave
sti
adc
lretw
addr16
in
or
call
add
repz
aad
sti
out
mov
es
add
adc
mov
sbb
cmpb
clc
jns
or
or
push
ret
xor
push
movsl
xor
sub
add
add
fs
test
sar
fidivl
cmp
add
ret
xchg
pop
pop
int3
repz
mov
mov
popa
jmp
in
test
jbe
jmp
sti
ja
bound
fldt
ja
pop
add
dec
repz
cld
or
mov
stc
mov
std
bound
repnz
add
add
inc
repnz
mov
or
dec
addr16
nop
cld
mov
dec
push
ror
push
push
mov
das
and
fiaddl
or
in
test
mov
add
rorl
mov
add
cmc
push
mov
divb
mov
add
lods
fstpt
addb
and
cli
jae
scas
jb
push
mov
push
test
sbb
orl
inc
adc
rolb
movsl
adc
jne
add
add
xor
rcrb
mov
in
hlt
stos
mov
push
push
mov
adc
sub
mov
xchg
jle
pop
inc
push
sub
push
pop
imul
mov
add
call
adc
aam
add
inc
mov
scas
push
fisttpl
shlb
jge
mov
dec
lock
jno
mov
jne
inc
inc
lods
fwait
out
pop
lock
cli
add
mov
mov
add
aad
rcrl
jnp
mov
sar
add
hlt
jo
and
cmp
push
mov
shrb
loopne
imul
lahf
jecxz
inc
repz
lds
movsb
cli
btr
add
mov
mov
add
enter
fcmovne
call
pushf
lret
into
call
add
xor
xor
jl
ja
mov
jg
repz
hlt
push
jno
add
add
call
jl
shlb
push
dec
adc
movl
inc
les
push
dec
cmc
jo
lret
cli
mov
nop
lret
cmpsl
cmp
jle
pop
mov
enter
fstpt
push
aad
imul
and
rcl
sbb
les
pusha
xchg
mov
pop
push
lret
add
add
jnp
sub
int3
cli
jmp
adc
std
call
test
jmp
push
stc
test
xchg
repz
mov
jmp
pop
mov
xor
lret
jle
daa
icebp
add
test
xlat
aaa
icebp
add
or
xchg
push
xor
popf
add
lock
add
add
pop
sbb
test
testb
call
orb
and
popl
mov
dec
incl
mov
mov
pushl
inc
xorb
push
fcomip
push
add
sbb
mov
in
ret
or
adc
or
add
pop
mov
and
add
add
sub
jns
psubq
fdivs
pushf
mov
repz
inc
push
adc
test
or
add
ret
jne
inc
aad
popa
loop
inc
pushf
in
adc
dec
in
mov
adc
mov
mov
cs
stc
repz
sbb
cmpsl
testb
jmp
add
test
inc
push
dec
fcoms
pop
inc
pop
jg
mov
cmpb
lret
mov
mov
leave
mov
cwtl
sbb
lahf
icebp
add
repz
and
loopne
cmp
roll
adc
sub
jmp
lret
cmp
outsl
cmp
push
insl
daa
mov
adc
lahf
or
cli
scas
mov
add
xchg
lret
mov
dec
inc
loope
imul
sub
cmp
push
xor
push
and
and
repz
push
or
hlt
add
mov
xor
cmp
adc
outsl
shl
adc
jmp
test
add
xchg
sub
fisubs
call
add
add
inc
dec
aam
test
nop
repz
pop
jecxz
mov
outsl
roll
repnz
int3
adc
jbe
je
xor
cmc
jne
mov
test
add
testb
call
jno
jae
iret
mov
idiv
adc
add
icebp
lods
scas
cwtl
and
add
in
test
test
dec
push
inc
sbb
nop
in
add
lock
test
hlt
add
sub
insl
pushl
cmp
ss
lret
adc
decb
push
stos
and
incb
jnp
lds
push
or
dec
xor
pop
mov
shlb
add
add
add
dec
out
dec
addb
adc
mov
mov
sti
adc
popl
pop
pop
cmp
sti
cmpsb
mov
pop
jb
rclb
mov
push
fldt
mov
cs
or
stos
push
dec
jg
push
dec
pop
repz
enter
sbb
or
lods
popf
iret
xchg
cmp
repz
ret
add
add
fnstenv
cmp
adc
pop
inc
in
rol
flds
sbb
pusha
and
ret
mov
adc
mov
sub
lock
push
dec
sbb
aad
mov
fisttpl
mov
adc
add
mov
jne
and
mov
add
xchg
push
or
sub
movsb
sbb
in
out
xchg
jmp
inc
aas
das
bound
lret
sbb
add
fstl
mov
fiadds
xor
jne
mov
sbb
lret
out
fucomp
insl
fnstcw
lock
push
dec
and
gs
jecxz
add
je
add
add
rcrl
add
outsb
cmp
cld
add
add
push
push
dec
in
js
icebp
call
pop
pushw
sub
and
gs
xor
in
lret
jne
add
dec
icebp
jns
and
mov
std
or
jo
add
mov
clc
and
add
sub
add
mov
push
subl
add
cmp
or
insb
mov
inc
pop
or
push
fwait
inc
push
or
add
lret
mov
or
fidivs
pop
mov
sbb
jle
outsb
pop
adc
int3
mov
outsb
pop
push
fnsave
daa
cs
pop
xchg
out
int3
or
xchg
add
xchg
inc
dec
cld
pop
out
sti
jg
movsl
incb
mov
filds
mov
push
push
clc
adc
rorl
mov
lds
repz
push
sti
ljmp
cs
pop
sub
jnp
xor
xchg
repz
js
or
or
sbb
stos
es
call
pop
add
add
adc
lock
aaa
pushf
lret
sbbb
int
inc
xchg
mov
add
dec
hlt
stos
mov
mov
cwtl
dec
and
stos
dec
imul
mov
hlt
out
into
jmp
cmp
mov
add
jmp
out
fwait
lret
ret
jl
repz
sub
push
and
add
pop
add
and
add
xchg
jo
sub
inc
and
lret
ret
out
repz
cmpb
mov
add
movsl
loopne
fs
sbb
mov
jo
insl
mov
lahf
out
repz
inc
lods
adc
gs
jo
test
jo
adc
lret
fwait
jmp
add
add
daa
jb
mov
call
jle
mov
outsb
inc
mov
mov
mov
mov
movsl
lret
clc
lods
xor
out
jns
test
rcrl
jns
or
mov
ds
mov
cmp
jle
stc
outsl
mov
cmp
out
imul
add
lods
add
jne
mov
out
ficompl
mov
mov
jbe
test
into
decl
stc
or
cmp
cmp
mov
sbbl
cli
std
mov
dec
das
int3
dec
cmp
testb
xchg
loop
std
mov
dec
mov
add
add
push
or
add
add
rorl
adc
dec
lds
or
add
mov
push
and
xchg
add
out
and
add
div
out
aas
mov
aad
cld
xchg
aaa
push
repnz
and
mov
push
inc
pusha
adc
das
jne
mov
dec
je,pn
stos
dec
int3
stos
jnp
cmc
out
add
add
stos
sti
addl
mov
push
in
cmp
call
xchg
sbb
mov
loopne
loope
dec
xchg
lret
or
xor
into
or
mov
bound
int
inc
xor
repz
jmp
in
insl
ds
orl
sub
jmp
lods
jbe
pop
sbb
push
add
and
or
out
cmp
call
inc
mov
rol
cmp
push
divl
or
adc
sbb
cmp
jmp
push
repz
mov
roll
clc
jb
or
adc
jmp
cmc
adc
push
jae
orl
repnz
add
add
push
addl
cmpps
add
lods
dec
gs
mov
inc
fstp
call
mov
mov
pop
add
adc
lcall
push
lea
adc
rorb
push
data16
sub
mov
jecxz
fisubrs
add
dec
aam
jno
inc
or
orb
into
dec
call
fwait
inc
int3
bound
jnp
daa
mov
pop
rorl
pusha
and
fidivrs
jno
cmp
and
mov
mov
shrb
loope
add
inc
dec
out
pop
faddl
xor
inc
out
inc
dec
hlt
xor
je
insb
inc
or
add
sti
sahf
dec
call
cmp
bound
ficompl
daa
mov
es
cmp
cs
push
adc
jecxz
push
and
orb
out
imul
push
aas
test
or
dec
leave
fsubrs
jl
and
push
push
jbe
mov
lahf
mov
jne
add
add
mov
mov
jg
repnz
mov
jmp
mov
mov
out
sar
inc
mov
movsb
lmsw
pushf
fwait
mov
jno
push
xorb
adc
out
test
nop
repz
sub
add
cmpsl
ret
sub
repz
and
inc
adc
or
add
add
mov
sarb
bound
lods
sti
inc
adc
pop
mov
add
inc
jecxz
fiadds
xor
fs
and
cli
ds
or
add
gs
inc
adc
xor
std
mov
xchg
addb
mov
jns
sti
aaa
lea
jge
cmc
add
add
add
push
stc
enter
add
and
dec
push
decl
mov
shll
idivl
clc
test
and
das
cmpl
jno
add
xor
mov
jae
pop
pop
add
ds
xor
add
jnp
xchg
push
lea
mov
jecxz
sub
ud2
add
add
je
popl
mov
or
push
or
stos
add
mov
push
adc
adc
push
adc
adc
or
xchg
test
rcll
rorl
xchg
ret
sbb
mov
notl
mov
or
lret
pop
movsl
mov
xchg
push
inc
or
add
inc
repz
test
mov
mov
mov
push
and
mov
cld
testb
enter
cld
fiadds
adc
jmp
std
mov
jo
cmp
cmpsb
add
mov
ljmp
fwait
jno
add
lods
adc
mov
adc
popa
out
xor
js
or
add
pop
mov
subb
lret
dec
mov
insb
and
repz
or
leave
jmp
repz
mov
adc
push
jmp
pop
sahf
call
not
xor
jno
mov
push
cmp
jecxz
jmp
xchg
hlt
inc
mov
lds
xchg
cwtl
inc
in
add
add
dec
jmp
dec
repz
lahf
xchg
outsb
dec
cltd
lret
cmpsb
pusha
xor
pusha
dec
xchg
out
push
xor
jb
outsl
or
bound
repnz
adc
in
ret
jae
in
in
test
jne
je
icebp
mov
test
sbb
mov
pop
mov
pop
push
lea
push
call
add
add
and
stc
xlat
scas
in
add
lea
in
call
scas
in
add
fdiv
test
lods
or
jmp
mov
movl
jmp
pop
addb
mov
enter
sti
mov
mov
mov
lret
and
jns
pushf
jecxz
or
add
add
mov
jnp
dec
jecxz
clc
imul
inc
dec
push
lds
xor
pop
jne
aaa
inc
sahf
mov
push
dec
int
or
int
jbe
sub
mov
loop
mov
adc
icebp
scas
jne
dec
inc
lock
std
and
dec
mov
xchg
sbb
lea
adc
xchg
aas
in
jl
add
dec
popa
sti
setns
fwait
adc
add
dec
cmp
xchg
ds
pcmpgtw
add
sbb
mov
mov
mov
push
mov
push
pop
lahf
or
repz
sbb
fiaddl
mov
insl
xor
sbb
mov
in
mov
sbb
adc
insb
in
cmp
add
inc
sub
repz
nop
push
sub
imul
or
mov
mov
fucomp
repz
mov
xchg
xchg
lret
lods
loop
cmp
jmp
sub
in
fimuls
mov
push
icebp
jbe
or
hlt
add
jne
dec
je
cmpsl
push
rcrl
jle
jmp
filds
add
sub
jo
lret
jmp
gs
incl
adc
sti
xchg
sub
lock
loopne
dec
fsubrs
xchg
inc
pusha
idiv
pop
inc
lahf
add
mov
movsb
movsl
testb
xor
or
mov
idivb
mov
cmp
div
add
setne
jge
push
add
add
cwtl
idiv
bound
add
fsubrs
je
jp
je
test
push
mov
mov
iret
sti
bound
dec
push
pushl
je
and
test
xor
pushf
sbb
adc
adc
fldt
dec
call
lret
into
testb
dec
xor
dec
inc
mov
outsl
inc
pop
add
add
insb
loope
cld
je
jnp
mov
xchg
mov
test
test
push
out
push
rcl
nop
call
adc
pop
xor
xor
out
daa
pushl
int
add
xchg
mov
or
add
call
fwait
mov
call
add
gs
mov
pop
push
add
pop
add
out
sahf
daa
loope
sbb
xchg
fwait
movsl
mov
lods
ficomps
adc
test
pushl
out
fsincos
getsec
or
out
mov
cwtl
xor
add
fwait
daa
mov
mov
inc
and
push
cwtl
xchg
xor
jmp
add
add
jo
add
setnp
mov
lods
cli
cld
jecxz
rclb
daa
pop
outsb
jge
jmp
push
adc
test
out
cli
mov
idivl
xchg
out
cli
cltd
adc
std
inc
fdivr
call
sti
cmp
mov
outsl
push
bound
add
pop
outsl
out
mulb
adc
add
mov
jl
aad
mov
mov
dec
pop
notb
insl
lods
fisubrl
test
notb
testb
in
testl
jne
pop
je
std
push
addb
lea
incl
pop
je
fcomip
push
push
cmp
shll
pop
lods
mov
mov
add
repnz
repnz
pslld
push
mov
mov
mov
test
addl
mov
rcll
xorl
or
mov
test
pop
stos
int
sub
test
mov
xchg
jb
inc
jne
sti
cmp
mov
fcoms
pop
dec
leave
into
lahf
push
pop
inc
test
add
add
aas
gs
or
testl
lcall
inc
out
push
call
divb
inc
call
pop
nop
testb
repz
mov
arpl
js
dec
loopne
dec
shl
xor
jl
sti
pop
mov
mov
call
add
add
xlat
testl
js
cld
or
out
mov
imul
out
data16
fistps
repz
inc
sti
outsb
mov
mov
call
test
repz
clc
test
add
add
add
jp
shll
jl
add
add
add
sbb
mov
je
fldl
out
addr16
push
js
lds
jne
or
jne
or
jne
or
jne
mov
fadd
inc
mov
shlb
incb
pushf
push
cwtl
push
cwtl
fiadds
jb
mov
push
mov
pushf
push
rolb
hlt
add
add
add
aaa
aaa
add
mov
popa
ljmp
add
scas
jmp
mov
dec
or
loope
mov
xchg
daa
ds
dec
jns
xor
inc
or
push
test
add
outsb
loope
call
pusha
add
cmp
testb
xor
add
out
pop
mov
add
test
testb
imul
or
add
lds
lods
and
jl
jl
lds
push
or
rcll
mov
rcll
clc
mov
in
jne
mov
ljmp
add
xchg
jae
add
add
lea
jne
bound
xchg
mov
incl
mov
sti
cmp
mov
inc
js
hlt
and
test
inc
ret
mov
xchg
or
add
in
dec
adc
pop
popa
ds
jp
loopne
bnd
jl
sub
adc
fcompl
sarl
outsl
xchg
or
add
mov
push
dec
adc
out
adc
lock
clc
arpl
outsb
jl
or
and
jg
repnz
adc
loopne
das
add
jp
xchg
outsl
cmp
jp
lahf
adc
add
fwait
xchg
ja
rcll
jp
adc
cs
jb
cmpsl
ret
repnz
fwait
cmp
add
xrelease
outsb
shr
outsl
add
nop
cld
test
repz
mov
sub
ss
add
aaa
add
jmp
mov
inc
mov
cli
outsb
call
lods
je
sbb
cli
fdivr
lcall
rclb
xor
push
xchg
out
add
add
add
mov
outsl
mov
xchg
mov
mov
rol
xchg
jbe
fsubrl
fwait
orl
enter
inc
lock
lahf
push
push
push
je
idivb
adc
sub
popl
je
jne
or
mov
adc
jg
add
or
add
dec
jmp
add
data16
pop
push
xchg
add
adcl
add
mov
mov
cltd
dec
cld
pop
push
loop
jne
lea
rol
push
sbbb
jns
hlt
aas
mov
mov
or
add
data16
mov
sti
xor
rol
lcall
dec
enter
adc
add
ffree
pop
xchg
in
cmp
faddl
dec
push
dec
sub
repnz
sbb
dec
mov
push
fldcw
fidivrs
mov
add
cld
sub
jmp
mov
jo
inc
movsl
pop
xlat
sarl
lods
xor
gs
movsl
shll
add
aam
pop
mov
add
pop
xchg
stos
mov
call
add
aad
cmp
fwait
push
xchg
adc
pop
cmp
add
add
loope
xchg
out
sahf
data16
insb
je
push
xor
mov
jae
push
shll
xchg
lahf
cs
inc
int
xor
jmp
and
push
add
add
insb
sti
jo
jmp
pop
sbb
inc
and
test
mov
in
into
je
or
jle
add
adc
jne
daa
ss
scas
adc
mov
mov
jecxz
movsl
xchg
insb
in
push
sbb
lahf
out
mov
fildll
mov
mov
das
adc
jmp
cmp
add
mov
lock
add
sbb
add
pushf
lcall
testl
inc
gs
into
je
orb
arpl
jmp
mov
add
xchg
int
mov
jmp
dec
push
jmp
xor
mov
leave
ss
push
fucomip
xchg
mov
call
or
pop
pop
sbb
add
xchg
xchg
fwait
je
enter
lcall
ja
rclb
mov
mov
test
or
adc
lcall
pushf
push
pop
mov
mov
jl
mov
dec
cld
mov
sbb
int3
mov
inc
adc
lds
bound
add
shlb
or
or
mov
in
aad
sbb
es
pop
fdivrl
test
mov
repz
inc
subl
dec
xchg
shlb
xor
enter
jns
clc
inc
mov
out
fsubl
or
mov
pushf
xor
xor
add
frstor
pop
jo
sub
add
mov
call
xchg
add
sbb
and
jmp
xlat
imul
cwtl
cmp
repz
js
ficompl
sub
add
adc
push
fnstenv
ficoms
mov
jmp
je
pop
insl
xrelease
add
sub
repz
pushf
outsb
inc
lds
xor
mov
jne
ficoms
mov
jmp
mov
outsb
push
add
jb
add
or
and
inc
aam
add
adc
add
sbb
push
and
testb
or
add
sub
lods
inc
xchg
xor
inc
xchg
rorl
xchg
jle
gs
icebp
xchg
addb
repz
mov
insb
mov
add
jbe
sbb
out
and
sahf
mov
je
fwait
dec
push
mov
add
xor
xchg
sti
adc
add
lea
and
test
jg
add
mov
cli
mov
and
and
std
ss
pop
jo
mov
adc
cli
mov
aas
mov
xchg
test
out
push
adc
mov
data16
repz
arpl
add
mov
jle
sti
popa
and
push
ret
flds
jns
fwait
hlt
pop
repz
add
add
dec
dec
pop
test
xchg
rolb
inc
pop
aaa
xchg
inc
adc
mov
out
adc
sub
mov
jg
hlt
out
mov
repz
or
imul
add
call
add
jne
add
repz
loop
jne
out
je
dec
cltd
push
js
or
shr
add
add
mov
add
int
hlt
add
xchg
add
mov
repz
int3
mov
sarl
js
jmp
push
sahf
cli
cmpsb
test
vcvttsd2si
pop
mov
and
xchg
pusha
inc
int
sub
cmpsl
jg
test
lahf
repz
pop
outsb
test
pop
adc
and
add
xchg
jmp
repnz
movl
add
xchg
mov
test
xchg
cmp
xlat
mov
jmp
lea
mov
add
mov
aaa
add
frstor
jnp
in
leave
data16
das
or
sbb
push
nop
add
test
add
add
imul
dec
xor
mov
mov
and
sbb
adc
out
push
std
out
jmp
test
mov
xchg
sti
fsubr
invd
cmp
xchg
adc
adc
pop
mov
icebp
pop
and
sub
mov
sti
pop
adc
add
add
add
mov
ret
jge
inc
mov
push
aad
cli
jmp
jno
bound
adc
sub
in
cmp
sti
call
mov
mov
pusha
addb
f2xm1
lret
jge
decb
pop
repz
mov
lcall
movsb
add
mov
mov
js
add
daa
lcall
outsl
jmp
add
xor
fmuls
mov
lea
sbbb
add
rclb
lcall
jb
bound
jmp
xor
ds
cmpsb
adc
or
xchg
sbb
lret
out
sti
mov
test
faddl
cltd
psadbw
push
out
mov
repnz
add
outsl
push
shrl
andl
addr16
insl
js
sub
cltd
dec
xchg
xor
cmp
add
stc
pushf
cli
cmp
pushf
adc
fadds
add
in
test
add
add
repz
pop
sbb
mov
inc
jmp
int3
in
test
repz
les
sub
add
push
ds
ds
stc
aam
push
add
nop
cmpl
in
jne
insl
aas
xor
mov
divb
and
jg
hlt
movl
xor
xorl
sbb
adc
out
aaa
pop
jmp
repz
movsb
cmc
pop
roll
std
out
mov
hlt
scas
shrb
xor
adcb
xchg
jnp
andb
mov
or
clc
add
mov
mov
loope
nop
sub
lea
dec
pop
xchg
std
in
std
lea
je
jb
mov
sub
sti
adc
dec
add
add
mov
mov
movsl
push
add
xor
hlt
mov
add
push
adc
push
mov
push
ret
cmovns
leave
add
xor
mov
mov
ss
xrelease
xchg
std
push
mov
jmp
loopne
cwtl
xchg
jns
fadds
insb
bound
repz
or
lret
add
lea
jmp
mov
mov
mov
xchg
fidivrs
jmp
lahf
pushf
xor
jp
cmp
add
sub
cld
push
xchg
fnstsw
dec
lcall
push
push
mov
or
les
repnz
std
movsl
xchg
mov
mov
and
mov
add
cmpsl
mov
inc
test
push
ds
movsl
adc
or
jb
add
cmp
add
cwtl
cld
rolb
xchg
insb
addl
add
or
sbb
repz
aam
add
jmp
repz
insb
cmpl
add
iret
pop
add
test
add
movsl
insl
shll
xlat
push
add
add
mov
adcl
xor
cmp
sbb
bound
mov
lock
adc
mov
jge
xor
lock
mov
adc
outsl
add
in
shll
and
add
stc
out
dec
mov
cs
mov
xchg
sbb
lds
push
add
mov
adc
jo
adc
push
cmp
mov
push
add
fcoml
inc
sahf
xor
add
cmp
add
das
dec
out
xchg
inc
adc
test
jmp
add
in
pushf
jmp
lahf
ja
adc
hlt
cs
sbb
test
adc
push
inc
add
push
out
cmpl
scas
pop
or
mov
cmp
mov
mov
xchg
call
mov
cltd
lahf
hlt
inc
mov
pop
jmp
and
daa
adc
add
add
add
push
call
insb
ret
mov
mull
adc
repz
and
jle
sbb
or
adc
add
in
push
add
js
pop
lods
and
fwait
sub
ja
xor
movsb
rolb
in
cld
jmpw
jmp
daa
and
jp
push
add
jmp
jle
add
iret
repz
xor
mov
and
fidivrl
add
cli
cld
cmp
inc
jmp
or
std
lahf
adc
jmp
ja
dec
mov
sbb
cltd
insb
jp
stc
add
add
mov
shrb
add
add
mov
sti
stos
aas
xor
mov
push
rorl
and
or
push
add
mov
in
out
pop
mov
mov
adc
notl
dec
in
hlt
or
call
xor
and
add
cmpl
push
cmc
adc
mov
adc
add
lds
fucom
repz
fstl
adc
or
add
lcall
and
movsb
adc
je
adcl
ret
movsb
push
es
test
jnp
jnp
fimull
jae
fimull
mov
ss
or
fiaddl
add
lds
nop
sbb
add
das
jg
call
call
pushf
cmp
xchg
jg
lea
mov
jp
and
arpl
repz
dec
xlat
rorl
mov
jl
loopne
dec
call
ret
xlat
xor
aas
mov
aaa
xorb
jg
or
xor
imul
mov
das
mov
add
rcl
sti
inc
mov
scas
mov
xor
mov
call
add
or
mov
jp
xchg
mov
jg
repz
mov
call
xchg
in
loope
out
adc
pop
cmc
dec
repz
sbb
call
jge
mov
or
repnz
add
add
mov
addl
add
xlat
adc
fwait
ss
push
adc
repz
orl
jmp
lahf
cmp
ds
fcoml
inc
jmp
mov
add
xchg
repz
pushf
daa
mov
cmp
bound
in
add
sahf
cmp
int3
and
in
cli
decl
sub
add
add
rcrb
jns
add
dec
push
mov
add
jnp
call
rorb
adc
mov
std
or
int3
andb
aaa
add
stc
stos
push
mov
stos
sub
push
gs
sahf
test
xor
mov
ljmp
add
popa
cs
aas
mov
pop
bound
push
pop
mov
xor
ficoml
cli
jae
mov
add
or
push
xor
push
jne
pop
inc
pushf
xchg
xchg
cli
add
icebp
aas
mov
xorl
adc
arpl
mov
add
mov
mov
out
repz
aaa
jo
adc
out
out
jno
faddl
and
lock
adc
repz
adc
hlt
shrd
insb
ret
pop
jmp
rorl
or
mov
lock
fwait
add
lcall
mov
repnz
repz
add
add
or
cmpsb
add
decl
pushf
mov
xchg
mov
jmp
rclb
repz
cmp
mov
cli
add
lea
add
lahf
or
or
sti
imul
jb
test
jl
add
mov
je
mov
call
gs
sbb
add
add
nop
add
cmpsb
and
sub
mov
fdivr
mov
xchg
adc
jg
cli
cld
xchg
add
stos
dec
adc
mov
pop
jne
out
push
add
clc
or
xchg
addr16
jp
test
add
cmp
add
dec
adc
clc
or
xchg
lcall
outsl
je
add
add
ljmp
pop
aaa
test
push
outsb
pusha
out
add
mov
xorl
pop
idiv
and
jns
out
jae
or
adc
pop
xchg
divl
insb
pushf
cld
cli
outsl
loop
ljmp
incl
divl
xchg
test
mov
rclb
jns
cmp
cli
push
add
add
insl
loop
xchg
and
jns
mov
jb
add
adc
cmc
out
mov
testl
or
or
mov
loopne
mov
mov
fldl
cmp
mov
dec
adcl
mov
sti
stc
repz
pop
stc
mov
aas
adc
add
add
xchg
cmpb
cmpsl
add
sub
adc
and
push
icebp
push
clc
pop
repz
or
hlt
imull
insb
inc
sub
cmp
xchg
jp
sbb
add
imul
ret
xorb
cmp
or
loopne
pop
dec
repz
add
add
adc
es
sbb
add
out
xchg
outsb
push
outsl
rcr
mov
add
jg
je
add
sbb
cli
call
inc
mov
add
push
and
stc
cld
ja
inc
jmp
and
jge
test
xchg
add
adc
fwait
iret
je
mov
add
xor
jmp
movsb
outsb
dec
rorl
or
cmpsb
cmp
stc
adc
mov
mov
add
add
fstpl
mov
push
pop
daa
in
add
push
jle
mov
cmpsb
movb
pop
mov
je
dec
rolb
lock
inc
and
mov
add
sbb
add
out
mull
icebp
mov
in
int
add
dec
scas
cli
add
shr
pop
jae
test
jl
test
jl
mov
call
test
jl
push
stos
lea
inc
iret
out
faddl
adc
push
into
out
in
adc
leave
ret
inc
add
aas
in
ucomiss
repnz
ds
add
mov
mov
je,pt
pop
js
insl
add
add
je,pt
pusha
es
adc
push
in
clc
push
adc
fistpl
xlat
pop
push
negl
adc
aam
mov
mov
jno
ret
je
lcall
sbb
mov
test
mov
lret
add
mov
and
cmp
imul
jg
mov
sbb
ret
mov
leave
mov
call
xchg
leave
mov
xor
adc
cmpsl
add
lods
or
fdivs
inc
xchg
ret
cltd
mov
jae
in
pop
jg
ja
clc
mov
lods
jbe
xor
aam
lds
subb
call
add
jo
and
and
loopne
cmp
aam
mov
and
call
movsb
xor
daa
roll
jmp
mov
das
cmp
subb
jns
in
inc
lock
shrl
fnstcw
inc
popa
fwait
mov
jo
inc
in
mov
lea
or
jo
sub
faddl
mov
add
jmp
fmuls
adc
fisttpl
sahf
inc
adc
bound
cli
pop
xor
cmp
add
mov
mov
cmc
push
pop
pushf
pop
mov
cmc
sub
xchg
insb
or
in
out
sub
cmpsb
or
pop
jmp
mov
push
addl
mov
testl
add
inc
clc
mov
push
mov
or
mov
add
jo
jbe
out
xor
jae
jp
sub
outsb
imulb
or
ds
adc
pop
adc
fistl
outsb
xchg
bound
add
xchg
movsl
outsb
jmp
ret
adc
divl
incl
add
bound
aad
loop
push
je
mov
xchg
shrl
or
sub
test
mov
adc
call
shrb
mov
sarl
add
addr16
psllq
and
mov
pusha
leave
scas
mov
shll
les
lea
fs
add
cmp
push
adc
out
inc
in
out
adc
stos
rorl
mov
xchg
push
mov
leave
mov
xchg
insb
movsl
or
hlt
mov
xchg
jno
and
call
add
lods
es
sub
mov
outsl
leave
xchg
insb
lods
pop
or
add
sbb
jmp
xor
dec
sti
add
add
dec
cmp
push
jb
inc
shll
test
ja
cmp
lea
cltd
or
sbbl
insb
add
xchg
mov
vpmacssww
adc
jecxz
and
icebp
sub
jbe
cmc
daa
jle
jmp
adc
stc
cs
mov
es
mov
push
repz
add
push
insb
je
stc
or
in
orl
insl
xlat
call
pop
repnz
adcl
xor
or
cmc
addb
mov
mov
add
pop
test
test
test
cmpsl
add
addl
jo
lea
jmp
mov
or
mov
add
add
int
dec
adc
mov
inc
or
mov
and
mov
ret
jns
in
push
cli
imull
andb
xchg
vunpcklpd
jo
repnz
sti
cmp
sar
and
add
or
call
iret
or
add
add
mov
push
call
addr16
jne
inc
out
dec
mov
sti
mov
mov
push
add
jns
aaa
mov
repz
leave
jl
fldenv
es
mov
pop
addr16
fmuls
or
add
inc
jl
ret
repnz
mov
outsl
jl
add
add
jno
add
mov
notl
mov
sbb
repz
jl
sbb
out
stos
nop
dec
icebp
repz
pop
pop
shll
mov
fs
sub
lea
testb
mov
sbb
jmp
sbb
call
push
hlt
add
jo
xchg
dec
jae
push
mov
and
add
add
leave
shll
push
xor
loope
jp
jmp
jle
loope
mov
inc
mov
aas
add
jmp
inc
add
jmp
pop
and
stos
xchg
repz
jb
and
sbb
imul
pop
repnz
xchg
in
mov
cli
jmp
jb
add
outsl
add
add
add
scas
or
jne
insl
push
sbb
push
pop
std
mov
test
jo
bound
pop
mov
add
enter
jo
add
mov
movsl
imul
push
leave
mul
add
or
add
lcall
sbb
cmc
psllw
stc
adc
pop
add
xorl
add
imul
add
lds
sub
leave
and
mov
std
push
rcll
push
xchg
add
mov
cmp
fwait
or
fdivrl
push
nop
add
pushl
sarl
mov
test
ljmp
cmpl
add
add
rorl
decl
lods
mov
jg
xchg
orl
aaa
inc
fs
cmc
out
inc
add
mov
rorb
and
inc
je
outsl
sub
xor
add
pushf
or
js
pop
pop
add
shll
pushl
out
push
loop
call
fisttpll
mov
sbb
add
nop
lock
dec
mov
jo
ja
add
mov
loop
dec
in
inc
mov
stc
jb
sub
jbe
enter
jae
jo
add
jge
out
jg
test
adc
or
mov
jmp
sarb
inc
inc
adc
insb
adc
mov
pop
lahf
jp
pop
iret
ljmp
add
jmp
lds
adc
or
cmc
add
or
push
out
jp
ret
sbb
push
xor
mov
test
div
fstps
jp
fld
or
mov
and
call
xlat
jns
add
dec
add
jne
push
push
in
mov
notb
test
je
add
add
shrb
bound
mov
push
jmp
push
fmuls
notb
push
stos
fimuls
lea
adc
lds
je
xor
nop
adc
pop
mov
pop
cmp
je
pop
clc
inc
stos
dec
enter
insl
add
movsl
icebp
bound
out
mov
mov
add
add
add
roll
mov
mov
sti
pop
dec
pop
mov
pushl
dec
mov
add
xchg
mov
pop
lret
lahf
mov
mov
pushl
int3
push
or
mov
dec
push
pop
lret
pop
mov
mov
pushl
int3
pop
pop
jg
inc
out
mov
add
add
pop
mov
mov
add
adc
jle
mov
dec
decl
add
repz
jno
jg
into
inc
je
pushl
jle
mov
jp
xchg
insl
cmp
repz
push
mov
jbe
repz
xchg
mov
pop
leave
mov
mov
lret
or
out
int3
jecxz
jp
repz
add
add
aaa
push
out
mov
shrb
xlat
insb
rcl
cmp
call
pop
xchg
xor
jnp
fisttpll
mov
mov
insb
push
add
sub
out
fisubs
mov
jmp
arpl
stc
sub
pop
and
cli
fists
inc
mov
repnz
mov
sbb
add
add
das
fldl
jmp
dec
out
push
ror
shrl
xor
jmp
add
pop
insb
jmp
push
jnp
jmp
cmp
pop
add
cmp
push
or
add
pop
push
add
pop
testb
cmp
pop
mov
notb
jmp
push
dec
xor
dec
mov
add
jns
push
pop
jp
inc
add
sti
jns
and
inc
mov
dec
xor
loopne
dec
xor
pop
adc
testb
jne
add
sbb
dec
dec
lea
loop
jl
add
mov
inc
cld
xor
bound
mov
sti
aas
xor
insb
mov
pop
sbb
jle
pop
repnz
add
pop
and
ss
or
cli
cli
and
enter
mov
movnti
jp
push
jae
call
or
clc
or
dec
dec
stc
cli
mov
ret
sbb
aam
jle
mov
cmc
inc
repz
leave
enter
in
movq
dec
cmp
loop
int3
pop
adc
pop
jle
add
inc
repz
add
ja
add
neg
insl
shl
cmp
sbb
add
add
jno
push
pop
jno
imul
xchg
ja
add
push
ret
call
pop
cmp
jbe
add
push
insb
lahf
sti
pop
cmp
pop
ja
testb
lahf
fucom
js
pop
jnp
jmp
pop
jae
imul
mov
pop
and
xor
out
jmp
xor
jne
add
mov
test
jbe
insb
mov
repz
mov
loop
jmp
mov
je
jl
orl
fs
add
add
pop
jmpw
repz
arpl
repz
mov
sub
or
repz
testl
add
outsl
jle
cmp
pop
aad
or
out
dec
or
pop
pop
call
push
jmp
cwtl
out
add
add
add
pop
adc
mov
fnstenv
scas
sub
jb
fprem1
test
daa
inc
outsb
cmp
jb
jae
je
in
inc
hlt
imul
jmp
inc
in
outsb
stos
repnz
jmp
add
in
dec
hlt
mov
push
hlt
ret
fistpl
sti
dec
hlt
jp
les
mov
cli
cli
and
pop
add
add
js
outsb
jne
lods
ljmp
cld
jmp
mov
push
jbe
aam
mov
out
clc
fs
pop
and
shr
inc
cmpsl
pop
cli
mov
pop
incb
pop
sbb
pop
mov
inc
push
pop
mov
in
mov
repz
jle
cld
arpl
repz
inc
jmp
add
xchg
add
pop
inc
into
mov
add
mov
push
xchg
ja
add
dec
add
and
dec
in
insl
pop
mov
lahf
push
loope
pop
mov
push
jae
push
mov
mov
daa
scas
in
jbe
lcall
lahf
notl
xor
add
or
outsb
mov
into
fldl
in
int
std
jae
cmp
fsubrl
imulb
xor
das
cmp
jle
sbb
push
jne
jmp
out
cmc
ror
cmc
arpl
ret
mov
int
xchg
mov
aad
and
je
sub
jl
icebp
call
jl
xchg
test
hlt
call
add
in
bound
xchg
jle
mov
add
repz
jle
or
dec
outsb
add
movsl
fdivs
cld
jbe
xor
in
sbb
add
cmp
or
xchg
out
add
push
flds
xor
imul
lods
imul
xlat
aaa
ja
popa
mov
lret
lcall
pusha
jp
add
add
cmp
jne
loope
je
mov
inc
fildll
in
notl
push
inc
test
adc
jbe
and
jl
test
push
decl
jge
push
test
out
or
sbb
mov
mov
xor
jp
pop
xor
ret
dec
push
pop
and
out
cli
into
fistpl
add
add
jo
in
add
inc
arpl
pop
mov
aad
or
fs
ret
rorb
lahf
cwtl
mov
pop
fs
ret
or
jb
add
adc
punpcklbw
ficompl
cli
mov
add
scas
push
pop
sbb
sub
mov
shrb
pop
add
sti
push
add
test
dec
jp,pt
outsl
into
scas
push
xlat
decb
dec
rep
testl
je
je
fs
repz
fisttpll
out
fs
notl
push
xchg
loopne
pop
out
pop
mov
into
jae
adc
jp
pop
mov
push
adc
lcall
add
je
inc
push
shl
push
cmpsl
roll
add
popf
stc
push
mov
jge
dec
push
cli
ds
js
pop
mov
xrelease
ljmp
int3
addr16
push
out
lahf
xor
mov
iret
xchg
mov
jmp
popl
imul
xor
mov
jmp
insl
sar
test
add
mov
add
dec
mov
outsb
inc
add
test
mov
mov
add
and
jne
in
cmp
cmpsb
xlat
add
jmp
call
dec
clc
je
jbe
push
je
mov
sub
sub
add
xlat
mov
sbb
call
mov
adc
push
add
scas
mov
add
mov
mov
call
lods
dec
pop
cmp
je
neg
or
sub
add
cs
scas
mov
scas
jno
scas
xchg
roll
fsub
cmc
mov
mov
pop
pop
inc
cld
and
or
dec
sti
jnp
adc
hlt
repz
sti
jecxz
cmp
incl
add
fcoms
xchg
int
add
mov
testb
dec
inc
xchg
pop
scas
mov
rclb
push
or
test
pop
out
imul
xchg
scas
ja
leave
jae
mov
fnstenv
fsts
hlt
out
daa
jnp
arpl
pop
fmulp
sbb
add
mov
notb
pop
jbe
adc
sub
pop
mov
insb
stc
fxch
mov
inc
ret
pop
das
repz
or
jmp
je
scas
addr16
fs
adc
sti
stos
pop
lock
fdivr
incb
adc
sbb
sub
pop
mov
cli
mov
add
lods
adc
xchg
popf
jae
mov
dec
add
negb
pop
fistpl
insl
inc
pop
stc
bnd
jo
push
ss
pushf
outsb
dec
das
insb
push
addl
mov
rclb
gs
adc
int3
adc
add
or
jne
sbb
inc
jmp
sbb
push
xchg
jae
add
jae
add
add
out
sub
push
std
and
gs
mov
add
cmp
lds
add
aaa
cli
out
inc
cli
ljmp
je
outsb
sub
je
ja
decl
cmp
lds
mov
call
mov
pop
xor
add
push
push
and
cmp
add
add
cs
jmp
test
dec
sub
cwtl
aad
sti
sti
fs
lock
add
cmp
add
xchg
data16
dec
incb
imul
std
cmp
out
add
pop
test
dec
fstps
pop
cltd
ljmp
dec
or
jnp
scas
gs
xor
repz
add
jg
fmuls
jnp
sub
sub
and
mov
pop
xchg
xchg
jbe
xchg
aam
call
mov
xlat
xchg
and
sbb
or
xor
or
scas
mov
or
fisttps
jae
cmpsl
fcomps
and
fistpl
fsubrs
sar
push
push
movl
popa
adc
add
push
arpl
jmp
fcmovne
pop
outsb
movsl
push
pop
dec
xor
dec
pushf
dec
add
dec
out
inc
pop
lds
mov
lods
jmp
pusha
or
pusha
jae
or
add
aaa
jl
jmp
je
jnp
lea
push
into
pop
push
jmp
add
out
scas
cmp
mov
add
jae
cli
jo
push
out
or
hlt
leave
in
jbe
sub
gs
repz
repz
xchg
aaa
mov
repz
negb
add
iret
add
or
or
add
add
adc
jmp
add
xor
test
cmc
pushl
add
add
push
int3
dec
ja
add
add
outsb
dec
aam
mov
push
dec
fldenv
jne
push
call
xor
jae
sub
out
mov
mov
rorb
divb
push
out
test
cmc
jmp
pop
orl
je
insl
ds
mov
loop
popf
mov
add
adc
add
add
push
or
push
add
push
sbb
repnz
push
add
nop
leave
enter
shl
and
sti
imul
push
xchg
push
sti
lea
stc
xchg
push
sbb
mov
dec
rorb
push
or
cmp
pusha
push
cmp
push
dec
repz
enter
dec
pop
test
add
pop
sub
jle
pop
lea
mov
mov
imul
mov
aas
pop
add
dec
dec
pop
loop
pop
popa
shlb
jmp
sbb
stos
pop
rorl
mov
push
or
add
nop
xor
addr16
mov
out
push
std
daa
sbb
sub
rcl
add
add
repz
imul
les
popw
pop
outsl
inc
mov
jae
add
push
sbb
jmp
dec
repnz
outsb
jl
push
je
icebp
fs
int
push
add
call
ret
mov
add
or
fsubp
pop
push
sar
add
adc
movb
aam
push
pop
pusha
repnz
cli
scas
mov
jb
mov
xchg
hlt
dec
pop
jg
mov
cmpl
add
xchg
outsb
mov
lds
adc
aad
je
nop
pop
push
mov
cli
push
icebp
pop
sti
hlt
or
inc
add
outsb
xor
lds
cli
mov
add
and
push
imul
pop
roll
pop
pop
xchg
add
add
mov
popf
mov
les
add
out
sub
mov
cld
xor
test
sti
mov
imul
sub
mov
das
cli
mov
testb
mov
add
xor
mov
test
mov
dec
or
test
in
pop
adc
add
add
push
or
dec
inc
fmuls
dec
lock
mov
mov
and
jne
pop
rcr
mov
call
mov
add
test
mov
sti
stc
inc
push
jne
inc
mov
int3
xor
ret
lods
dec
cli
mov
dec
cli
mov
dec
incb
add
add
sbb
pop
pop
pop
pop
pop
shl
dec
mov
sti
pop
pop
mov
popa
adc
dec
hlt
sub
push
xlat
outsb
sub
shlb
mov
outsb
sub
pop
or
xor
cs
inc
outsb
daa
mov
cld
cli
inc
ret
inc
ret
xor
jnp
xor
jae
and
imul
arpl
adc
pop
inc
adc
add
add
or
pop
fistpll
hlt
data16
hlt
push
scas
mov
filds
in
xlat
clc
add
iret
add
adc
hlt
mov
mov
jmp
inc
outsl
shll
clc
mov
bound
aaa
push
adcb
data16
pop
cli
adc
data16
movsl
lock
addr16
add
add
mov
vsubps
jmp
mov
fdivrs
repz
cli
sahf
mov
jg
loopne
mov
mov
mov
add
repz
pop
repz
add
mov
ljmp
je
cli
mov
mov
push
add
add
lea
cmp
lret
lods
pusha
mov
orl
out
dec
push
xor
adc
inc
mov
add
out
sub
mov
inc
pushl
call
gs
dec
lcall
test
or
fmuls
call
or
call
inc
push
xchg
add
or
add
out
mov
and
popl
push
syscall
add
and
incb
or
dec
divps
dec
leave
dec
add
mov
std
cmp
mov
in
cmp
sbb
cmp
pop
and
fnstsw
jno
test
pop
xor
jae
inc
push
popl
aaa
in
push
add
add
xchg
dec
movsb
pushf
es
outsl
rclb
mov
push
stos
fcomps
add
pop
addr16
add
xor
xchg
out
adc
jecxz
inc
ret
aas
cmp
out
push
pop
iret
sub
sub
pop
and
add
xchg
push
jge
xor
jne
inc
sbb
les
push
insb
inc
clc
loope
iret
add
add
repz
push
iret
arpl
add
xor
and
ret
std
mov
pop
je
mov
loopne
jmp
cwtl
fsubp
orl
fsubp
push
fisubrs
add
js
jmp
fs
fildll
jb
popa
xchg
lods
pop
jmp
mov
les
rcr
push
cli
jb
add
jecxz
xchg
sbb
add
insl
inc
out
mov
add
inc
jle
xlat
jb
add
add
jbe
rcll
fcomps
out
btr
add
and
cmp
adc
sub
cmp
lcall
cmpsb
into
or
mov
sub
pop
lcall
sub
add
sbb
orl
fs
ret
adc
xchg
push
pop
sub
push
push
jge
data16
jp
add
stc
mov
repz
pop
ss
add
mov
add
ss
xor
mov
nop
je
xchg
sbb
xchg
xlat
xchg
adc
decb
xchg
adc
add
mov
sti
mov
ret
shlb
ret
enter
inc
add
pop
jg
test
add
mov
dec
cmpl
int
scas
xchg
mov
das
mov
stc
mov
mov
dec
add
enter
outsb
mov
scas
out
xchg
fwait
jbe
pop
fldl2t
dec
or
shl
cld
add
add
outsl
adc
outsl
sbb
jp
push
and
insb
subb
mov
pop
int3
adc
mov
outsb
scas
mov
inc
imul
add
repz
dec
pop
aam
dec
or
jp
ljmp
outsl
out
stc
or
ret
and
adc
outsl
sbb
bound
and
add
or
idivb
and
leave
mov
fimull
adc
sbb
cmp
mov
dec
lds
in
or
xchg
and
pop
pop
data16
xor
jmp
mov
call
stos
sbb
add
add
add
xor
and
in
es
add
lods
mov
lock
test
add
cmp
and
pusha
pop
add
je
jno
or
adc
push
sub
sbbl
sbb
push
scas
dec
sti
dec
dec
lock
mov
and
push
or
mov
cli
incl
add
inc
cmp
xor
add
add
in
or
cmp
add
lret
repnz
std
adc
sub
dec
mov
je
rol
and
filds
sarl
test
add
mov
pop
add
or
and
sbb
or
ret
add
je
pop
mov
jo
dec
inc
sbb
add
add
out
mov
aas
add
or
mov
push
push
dec
rol
and
outsb
shrb
addr16
iret
xchg
dec
xchg
pop
jo
add
adc
jecxz
clc
pop
aam
rclb
sub
enter
jmp
add
add
inc
nop
sti
xchg
add
repz
outsl
pop
fstpt
hlt
out
in
in
mov
imul
scas
sbb
pop
pop
or
add
jg
sbb
add
lods
pop
inc
mov
out
jl
pop
rolb
pop
add
inc
call
jg
nop
cli
sbbl
add
add
add
or
jle
int
mov
inc
jmp
nop
repz
pop
ffree
lds
jle
adc
inc
addb
mov
push
aam
lock
fistpll
int
repnz
fbstp
sbb
clc
call
inc
dec
cli
jmp
int3
cmc
push
and
pusha
xor
aad
add
add
add
pop
aad
jp
cmp
add
enter
inc
call
icebp
je
cs
pop
popf
and
je
cmp
mov
push
mov
test
es
mov
loop
outsl
testl
xor
mov
mov
pop
stc
dec
jle
and
cmpsl
adc
add
add
cmc
les
xchg
int3
and
cmc
out
add
mov
sar
shlb
dec
imul
out
imul
addl
decl
scas
sbb
mov
cs
jns
dec
pop
jmp
pushl
jle
nop
fldl
fidivs
add
mov
add
add
mov
sub
mov
iret
andb
mov
in
pop
cmp
out
sbb
js
repz
out
xor
repz
adc
cmpsb
add
in
popf
add
out
xchg
sbb
inc
repz
sbb
cmpsb
add
dec
adc
add
add
jae
std
lcall
mov
pop
popa
iret
scas
fcomip
andb
out
mov
repz
sub
jle
test
mul
inc
sahf
sti
jg
mov
out
jle
nop
gs
push
lds
sbbl
lds
push
add
inc
imul
xor
inc
add
add
push
lds
lods
add
push
lds
lret
stos
add
rol
push
adc
add
rol
add
add
rol
insb
shrl
jmp
and
add
int3
dec
jae
out
push
jmp
xlat
mov
jmp
or
dec
jae
mov
pop
add
hlt
cmc
jbe
lods
sub
hlt
mov
incl
add
cmp
lock
cmp
or
mov
cmc
push
cmp
pop
and
push
mov
stos
push
add
dec
push
push
xchg
and
mov
call
add
jmp
cmc
add
mov
jecxz
push
fwait
cltd
divl
add
adc
pop
sti
mov
add
add
mov
mov
mov
in
stos
gs
js
push
sti
pusha
notb
pop
ds
adc
add
out
rolb
lock
mov
pop
pushl
pop
pushl
jmp
ljmp
jnp,pt
mov
iret
mov
ret
scas
cli
fcomip
cmp
incl
add
xchg
pop
jg
rcrb
int3
pop
repz
and
xor
test
je
add
scas
imul
inc
clc
or
ret
repz
hlt
out
sahf
bound
xorb
dec
inc
mov
cmpsl
add
out
mov
fisubrl
cmpsb
loopne
push
dec
rep
inc
add
add
mov
mov
mov
jmp
mov
inc
aad
xorb
mov
fistpll
loop
add
inc
nop
repz
add
cmpsl
jecxz
push
cmpsb
fucompp
stc
hlt
inc
filds
cld
outsb
and
sbb
outsb
cmp
xchg
mov
pop
std
scas
and
mov
mov
add
add
add
mov
add
push
mov
jmp
nop
shlb
lret
adc
mov
out
lahf
test
xor
notl
into
dec
jne
orl
int
push
hlt
dec
inc
sti
pop
fs
call
add
out
mov
push
lea
sub
dec
divl
mov
jmp
icebp
jae
add
add
xchg
je
and
cwtl
dec
mov
xchg
or
iret
mov
je
jmp
jae
mov
push
loopne
cli
icebp
dec
push
call
push
mov
push
loope
sub
call
inc
and
in
jmp
int
pop
icebp
jae
fsubrs
sub
dec
cmpsb
pop
out
sbb
incl
add
fidivl
sbb
lahf
out
aas
adc
adc
call
incl
loopne
lea
adc
push
jmp
sti
pop
loop
inc
mov
or
mov
rorl
mov
shll
push
inc
push
cltd
decb
enter
fadds
cmp
sti
add
adc
lcall
adc
add
add
je
xlat
jmp
dec
add
mov
sub
jnp
cmp
inc
rclb
add
repz
aas
ja
add
outsl
or
xchg
enter
adc
daa
test
subb
pop
out
add
andl
in
aad
inc
into
rorl
add
dec
xchg
and
add
and
sbb
mov
pop
fmull
test
inc
addr16
cmpb
sub
push
andl
outsb
std
xchg
call
sti
push
xor
call
push
dec
outsl
jge
mov
cli
je
pop
xor
or
pop
xor
xchg
addl
push
pop
add
add
cld
mov
cmc
mov
repz
xchg
js
cwtl
movsl
data16
and
push
sbb
test
jne
orl
repz
add
add
gs
idivl
push
icebp
add
lcall
or
jmp
cld
pushl
imul
mov
cmc
jae
add
pop
xor
or
or
add
push
mov
jae
clc
je
pop
add
hlt
dec
mov
cmp
jmp
roll
imul
dec
push
sti
divl
jb
cwtl
adc
mov
and
push
push
dec
aam
andl
jnp
loope
faddl
mov
shll
test
add
pop
push
jle
test
or
or
je
dec
icebp
int
push
jmp
xchg
dec
add
fimuls
repnz
into
iret
push
repz
push
loop
loop
cmp
cmp
call
or
dec
decb
aam
cli
mov
repz
jmp
dec
sub
add
pop
add
mov
out
sub
mov
fdivr
pop
inc
mov
mov
out
push
lock
inc
fdivl
scas
ss
cmp
lahf
ds
sbb
jmp
stos
mov
out
int3
mov
jo
loopne
fwait
jg
orl
sahf
out
cmp
test
add
push
add
add
adc
lods
fistps
repz
or
or
mov
imul
lcall
add
cmp
or
jmp
repz
push
inc
sti
jne
std
or
jbe
mov
fsubl
out
jmp
fsts
sti
into
sbb
add
add
mov
inc
aam
cmp
call
mov
rol
pop
pop
sub
cmp
sub
or
add
arpl
add
ljmp
popf
xor
lcall
jmp
add
push
mov
inc
fisubl
push
outsb
addr16
aaa
xor
loopne
mov
add
add
andl
push
cmp
dec
xor
cli
mov
xor
mov
sub
adc
add
lock
adc
pop
dec
jmp
lock
mov
mov
int3
rolb
int3
fmuls
dec
int3
rcrb
in
jae
sbb
jl
sbbb
pop
popf
dec
push
popf
dec
push
add
add
jge
fwait
jge
incb
popf
dec
aas
popf
dec
cmp
dec
xor
incb
dec
jnp
dec
addr16
cmp
dec
sbb
dec
adc
and
pop
jge
incb
repz
push
loop
add
out
mov
out
mov
add
mov
out
pop
loop
add
add
in
add
out
push
in
add
out
push
in
add
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
out
sbb
out
push
in
add
jecxz
add
out
sbb
out
adc
out
add
out
sub
add
add
add
aad
jmp
jae
jmp
mov
adc
outsl
adc
ja
jmp
adc
jecxz
jmp
jmp
jmp
repz
aaa
adc
cmp
jmp
das
adc
xor
jmp
jnp
jmp
popl
add
xchg
jmp
popl
adc
popl
adc
or
add
cmc
and
cmc
cmc
and
in
sbb
in
sbb
mov
adc
mov
adc
movsl
cmc
or
movsl
cmc
or
mov
add
mov
add
movsl
cmc
cld
shld
clc
pcmpeqw
hlt
pcmpeqw
lock
in
pcmpgtw
push
adc
aam
jne
cmpsb
adc
mov
pop
add
add
xor
cmc
movsb
adc
cmc
and
cmc
mov
pmaddwd
mov
cmc
hlt
mov
mov
scas
orl
fwait
dec
cmpsl
xchg
dec
mov
orl
fwait
dec
xchg
xchg
dec
xchg
mov
popl
dec
incb
mov
jg
dec
jnp
dec
ja
add
xchg
dec
mov
loope
dec
dec
jge
dec
xchg
dec
decb
dec
decb
dec
incb
dec
incb
dec
aas
mov
cmp
dec
xor
dec
sub
repz
push
loop
add
out
mov
out
test
out
lods
call
out
movsb
call
out
add
add
sub
add
loop
add
call
out
test
out
js
out
shl
out
fsub
out
test
out
aam
out
insb
out
add
out
add
add
out
pusha
out
add
out
add
out
dec
out
jmp
jnp
jmp
jg
jmp
add
jmp
mov
jmp
xchg
or
push
or
pop
or
push
or
pop
or
sbb
jmp
and
jmp
sub
jmp
push
or
and
jmp
iret
or
jno
jmp
jbe
jmp
pop
or
cmpsl
or
add
add
xor
repnz
push
and
icebp
push
push
in
and
in
sbb
cmc
icebp
sbb
cmc
icebp
adc
in
and
in
sbb
push
mov
adc
movsl
icebp
adcb
icebp
mov
sbb
icebp
and
movsl
icebp
js
jne
sbb
das
sbb
hlt
or
jne
in
or
add
or
gs
loopne
xor
icebp
fmuls
mov
or
dec
inc
mov
mov
cltd
dec
mov
dec
mov
dec
jns
dec
stos
cltd
dec
out
jns
xor
dec
fwait
cltd
dec
sub
decb
cltd
dec
incb
add
add
orl
cmpsl
pushf
dec
inc
pushf
dec
fstpl
push
xchg
dec
push
mov
mov
cltd
dec
push
xchg
repz
loopne
out
fsub
out
fsub
out
out
jecxz
add
out
add
jecxz
add
out
add
in
add
out
test
out
and
add
add
cwtl
out
add
out
or
out
test
out
movsb
out
add
out
add
call
add
call
add
add
add
call
jmp
in
jmp
xor
jmp
addr16
jmp
add
jmp
push
or
jmp
pop
or
jmp
or
jmp
outsl
adc
sbb
jmp
push
or
dec
or
popl
jmp
xchg
or
iret
or
lret
or
notb
notb
xor
add
xor
testb
inc
or
idivb
xor
divb
and
cmc
sub
cmc
cmc
sub
cmc
and
cmc
sbb
cmc
adc
cmc
or
cmc
add
cmc
clc
or
cmc
lock
in
or
call
add
in
gs
loopne
mov
fistl
sbb
roll
sbb
lret
xchg
sbb
movl
sbb
mov
xchg
mov
sbb
enter
les
sbb
mov
xchg
sbb
mov
adc
sbb
fwait
jge
decb
xchg
sbb
xchg
add
xchg
jg
sbb
jnp
sbb
loope
sbb
fldl
sbb
imul
out
call
cld
out
xor
out
add
jmp
add
jmp
add
out
sbb
out
cld
sti
out
adc
out
add
out
or
out
or
out
cmp
add
add
out
add
add
cmp
add
add
out
pushf
cld
out
nop
cld
out
test
out
mov
out
mov
out
mov
cld
out
cwtl
cld
out
jl
add
pop
pop
jmp
pop
pop
jmp
pop
pop
jmp
popl
jmp
aas
pop
jmp
fisttpll
jmp
add
add
cmp
jmp
add
jmp
push
pop
jmp
popl
jmp
popl
pop
jmp
jnp
jmp
jae
jmp
pop
or
movsl
bnd
jne
jo
jne
insb
or
push
or
pusha
or
pop
or
add
gs
or
repnz
or
repnz
push
xor
repnz
or
repnz
or
icebp
inc
or
icebp
cmp
in
cmp
in
xor
cmc
icebp
and
cmc
icebp
sbb
in
sbb
in
adc
mov
adc
mov
or
movsl
icebp
cmpsl
or
icebp
add
mov
sti
test
testl
repz
sbb
out
xchg
sbb
jmp
sbb
out
sbb
jecxz
sbb
fists
sbb
xlat
test
rcll
sbb
lret
test
push
xchg
sbb
mov
test
mov
sbb
mov
sbb
scas
xchg
sbb
stos
test
cmpsl
test
mov
xchg
sbb
fwait
test
xchg
test
xchg
add
add
xchg
sbb
mov
repz
adc
out
or
out
sbb
out
adc
out
add
out
cld
cli
out
call
cli
out
pop
clc
out
in
cli
out
mov
cli
out
loopne
out
fdivr
out
enter
cli
out
sar
out
int3
cli
out
pop
cli
out
push
cli
out
sar
add
add
and
out
push
clc
out
sbb
out
movsl
cli
out
adc
out
push
clc
out
dec
clc
out
jne
add
pop
jmp
push
or
cltd
add
jmp
and
jmp
sbb
jmp
sub
jmp
and
jmp
sbb
jmp
add
jmp
flds
jmp
popl
cmp
jmp
popl
push
jmp
stc
add
jmp
or
mov
stos
or
mulb
or
notb
or
testb
testb
add
or
jnp
jne
ja
divb
idivb
or
divb
or
mulb
or
cmc
lcall
cmc
xchg
or
cmc
mov
cmc
cmc
mov
cmc
cmc
xchg
mov
test
sbb
jge
sbb
jns
sbb
jne
sbb
jno
add
xchg
sbb
insl
xchg
sbb
imul
sbb
pop
xchg
sbb
pop
xchg
push
xchg
push
xchg
sbb
dec
xchg
sbb
dec
xchg
incb
sbb
inc
xchg
sbb
cmp
xchg
xor
xchg
sbb
sub
xchg
and
xchg
sbb
sbb
xchg
adc
xchg
repz
add
add
xchg
out
mov
out
mov
out
ret
add
cli
out
sahf
cli
out
mov
out
cmpsb
cli
out
stos
cli
out
outsb
cli
out
cli
out
push
cli
out
pop
cli
out
ds
out
push
cli
out
inc
cli
out
dec
cli
out
dec
cli
out
add
out
idiv
out
cli
stc
out
fdivrp
out
repnz
out
add
add
ljmp
add
cli
out
push
cli
add
popl
or
jns
jmp
jno
jmp
lods
pop
jmp
movsl
pop
jmp
popf
pop
jmp
xchg
pop
jmp
mov
pop
jmp
mov
add
lods
pop
jmp
in
jmp
fldl
jmp
aad
jmp
int
jmp
cmc
repnz
in
push
or
repnz
cmc
repnz
or
repnz
in
push
or
repnz
mov
decb
mov
cli
or
repnz
repnz
repnz
add
add
jne
fimull
gs
or
rorb
jne
into
or
lret
repnz
or
ret
repnz
or
repnz
xor
repnz
or
sbb
movsl
xchg
sbb
mov
test
cltd
test
xchg
xchg
sbb
xchg
xchg
sbb
lea
incb
add
add
test
jns
sbb
jne
sbb
jno
sbb
insl
test
imul
pop
test
pop
test
push
xchg
sbb
push
xchg
sbb
dec
test
decb
sbb
inc
xchg
sbb
inc
xchg
sbb
cmp
test
xor
xchg
repz
push
out
data16
out
mov
out
scas
sti
out
add
add
xchg
sti
out
cmp
add
out
mov
out
cmpsl
in
out
jae
out
mov
out
mov
in
out
mov
in
out
stos
in
out
cmpsb
in
out
jb
out
outsb
in
out
pop
in
out
push
in
out
inc
in
out
ds
out
dec
in
out
inc
in
out
push
in
out
dec
in
out
cli
jmp
add
add
pop
add
popa
add
push
add
mov
jmp
pop
add
mov
add
mov
jmp
jns
jmp
jno
jmp
faddl
jmp
aam
jmp
cltd
add
cltd
add
xchg
add
pop
add
mov
add
leave
add
pop
add
mov
jmp
testb
and
pop
and
divl
pop
xor
imull
pop
and
mulb
pop
cmc
negb
pop
in
sbb
in
push
pop
cmc
notb
pop
cmc
testb
in
or
in
push
pop
mov
add
mov
incb
movsl
idiv
push
movsl
div
push
mov
repnz
add
add
movsl
imul
push
movsl
mul
push
jne
loop
jne
fiadds
gs
push
gs
push
jne
rolb
jne
into
push
gs
testb
mov
jle
or
mov
xchg
or
mov
or
mov
or
lods
mov
test
mov
mov
mov
cltd
xchg
or
xchg
mov
xchg
add
add
mov
mov
or
adcl
or
jne
or
jno
or
insl
mov
imul
or
pop
mov
pop
xchg
or
push
mov
push
xchg
repz
ret
add
mul
add
cmc
out
aaa
cmc
out
data16
out
pop
stc
out
pop
stc
out
add
add
mov
out
stos
stc
out
scas
stc
out
xchg
stc
out
xchg
out
jp
out
jle
out
cmp
add
stc
out
mov
out
mov
out
cmpsb
mul
add
mul
add
mul
add
out
outsb
mul
add
out
inc
testb
popl
jmp
add
add
cmp
xor
add
pop
add
gs
push
add
dec
add
pop
add
push
add
popl
add
popl
add
insl
add
jns
jmp
mov
add
movsl
add
xchg
add
add
add
xchg
add
gs
add
jne
push
add
gs
add
xor
repz
xor
repz
and
repnz
in
push
add
cmc
repnz
add
in
push
add
mov
push
add
add
add
movsl
repnz
add
repnz
out
add
repnz
or
in
or
loope
or
fstl
or
aad
or
rorl
or
leave
mov
lds
or
mov
mov
mov
or
mov
or
lods
nop
or
test
nop
or
mov
add
popf
nop
or
cltd
mov
xchg
nop
or
xchg
mov
lea
or
test
or
jge
or
jns
or
jne
or
jno
repz
cli
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
add
mul
add
out
pop
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
lock
and
call
adc
call
add
add
popl
call
sub
call
cli
call
in
call
fdivrp
call
repnz
call
sbb
jmp
or
add
push
add
adc
jmp
cmp
add
out
lret
add
movsl
out
lret
add
test
add
mov
add
mov
jne
scas
add
stos
add
cmpsl
add
notl
sbb
inc
inc
mov
and
testl
and
inc
cmp
flds
movsl
out
add
outsb
xor
packssdw
mov
testb
and
add
div
je
insl
inc
and
xor
pop
mov
mov
mov
xchg
decl
les
mov
add
mov
jnp
aad
jnp
mov
lea
fsts
jg
jbe
jg
mov
jle
testb
inc
loopne
or
add
sbb
outsb
jmp
lea
cld
cmp
mov
add
dec
or
les
incl
ljmp
mov
jle
push
add
mov
push
jg
xchg
repz
xchg
jbe
repnz
mov
out
jbe
cli
ss
shl
call
mov
decl
in
xchg
sahf
jecxz
sar
in
fs
dec
push
insl
lods
stc
mov
in
push
scas
push
inc
lret
scas
movb
add
add
add
or
jmp
lods
add
xlat
nop
test
push
push
pop
sbb
mov
stc
sbb
inc
jae
push
les
iret
loope
sbb
inc
xlat
scas
add
dec
cwtl
jnp
scas
pushf
add
cli
add
dec
cwtl
jnp
iret
lahf
add
stc
pop
stos
or
lock
insl
out
mov
sub
add
cltd
sbb
or
cwtl
jnp
dec
lahf
push
sbb
cmp
repz
movsb
sub
inc
lret
or
call
pusha
xor
jmp
sbb
jmp
int3
cwtl
jnp
iret
sahf
sbb
and
xchg
jnp
mov
add
cmc
mov
inc
xchg
scas
or
mov
mov
roll
mov
ret
add
add
jo
jp
xlat
out
jae
std
jle
add
lock
or
push
mov
gs
add
loop
sbbl
jl
lret
hlt
lcall
call
mov
sbb
data16
xor
gs
in
icebp
add
jbe
inc
and
mov
inc
inc
pop
mov
ret
jbe
sub
jmp
incl
add
jecxz
inc
call
pavgb
incb
push
test
dec
push
mov
mov
inc
outsl
or
and
mov
push
test
inc
scas
cmovae
pop
out
je
mov
push
xchg
in
xchg
add
inc
jecxz
dec
mov
push
test
test
or
sti
cmp
sbb
mov
mov
add
add
sbb
add
orl
loop
cmp
push
pushf
mov
lret
adc
or
push
loop
cltd
lea
push
add
cwtl
mov
out
xor
xor
inc
sbb
adcb
stc
call
out
xor
push
stc
call
add
movsl
out
xor
jp
mov
xor
out
mov
addr16
xor
pushf
or
jo
out
xor
test
adc
adc
and
call
stos
nop
leave
add
push
jle
mov
scas
sbb
jmp
lahf
add
cmc
add
dec
jae
jmp
aaa
push
cli
xchg
add
add
add
popf
sbb
outsb
leave
xchg
jnp
push
lahf
add
sbb
push
rorl
jbe
jge
jle
jo
mov
mov
or
sub
sbb
xor
mov
push
adc
mov
call
jbe
adc
js
addl
inc
and
sbb
outsl
jl
hlt
jl
call
es
inc
sbb
add
push
gs
pop
xchg
cmp
imul
out
jecxz
jmp
adc
cwtl
push
addl
inc
and
cmp
push
cmpsb
ja
push
fs
call
mov
inc
sbb
subl
cld
ret
idiv
jb
cwtl
cld
jb
jns
cmp
jae
mov
in
sarl
testl
add
add
pop
loopne
add
jge
scas
push
aas
call
in
adc
rcrl
add
movsl
popa
or
iret
test
adc
push
cmp
adc
fwait
popf
adc
mov
sti
dec
je
idivl
jne
xchg
sbb
push
maxps
std
dec
mov
negl
sbb
push
rorl
jg
xor
jp
mov
cli
add
add
or
leavew
xor
sbb
or
sti
push
pop
jbe
cmc
add
out
or
add
pop
popa
mov
out
repnz
testb
decb
jg
add
pop
orl
cmc
cmc
orl
add
mov
les
fldl2t
out
xchg
dec
mov
xchg
cmpsl
test
jle
cmp
jae
push
popl
ljmp
cli
sub
adc
and
call
sub
adc
sbb
jge
out
jne
sbb
into
mov
inc
jae
or
push
ljmp
jae
or
or
add
add
xchg
or
stos
js
cli
xchg
repz
lret
sbb
arpl
or
push
loop
int3
xchg
sbb
add
cmc
ret
mov
adc
xchg
mov
jge
repz
jp
jl
and
add
pushl
push
idiv
es
push
imulb
call
add
jmp
jae
push
loope
add
adc
jb
push
mov
add
xor
idiv
divb
push
mov
add
sub
mov
je
sbb
or
jae
push
jne
add
mov
or
pop
fiaddl
add
cmpb
xchg
adc
or
sub
mov
add
add
dec
lcall
roll
sti
iret
cltd
mov
mov
push
sti
push
cli
pop
or
push
mov
cmp
push
push
mov
fsubr
add
or
add
adc
je
fs
mov
add
adc
ljmp
push
push
push
mov
add
jge
mov
or
mov
add
and
daa
xor
jge
pushf
hlt
xor
adc
pop
jb
std
or
repz
jb
icebp
repnz
sbb
pand
and
repnz
testl
in
push
cmp
mov
inc
xor
jp
or
icebp
add
in
xchg
add
add
add
or
call
sub
dec
xchg
mov
ljmp
jle
cmp
mov
jle
sbb
mov
push
xchg
std
push
jne
cmpsl
shl
test
bound
or
push
mov
mov
or
add
test
jle
mov
outsb
inc
mov
cld
sahf
xchg
dec
jmp
stos
or
add
jne
cmc
jmp
jbe
push
push
cmc
pushl
jge
call
mov
add
stc
sub
fnstsw
cmc
ret
cmpsb
je
pop
or
jnp
aaa
add
lea
jl
idivb
call
add
add
loop
mov
inc
xchg
jbe
and
mov
jmp
cli
cmc
adcl
je
out
clc
add
jns
scas
testb
std
mov
decl
pushl
xor
mov
or
or
jge
push
mov
cmp
sti
dec
sahf
addb
sbb
out
add
aad
or
dec
sahf
adcb
pop
out
out
in
sti
vmread
incb
or
mov
jns
push
xor
adc
mov
popa
or
pop
aam
add
push
pushl
loop
mov
and
je
repz
clc
fwait
or
nop
je
loopne
xchg
cmpsl
addl
loop
mov
jge
ja
jg
add
add
outsl
roll
push
add
sbb
or
or
popf
repz
pop
daa
jbe
stc
and
sbb
adc
shll
in
mov
sti
push
jnp
fldl
jns
decl
or
inc
arpl
mov
orb
nop
mov
or
stos
push
mov
ljmp
add
push
cli
push
lock
sbb
mov
jle
jo
rorl
ljmp
dec
pop
or
repz
movsb
sub
addb
repnz
stc
ss
jo
or
inc
or
call
pop
xor
jmp
or
jmp
xchg
scas
push
imul
xor
mov
jb
add
and
iret
rclb
bound
ljmp
sub
add
cs
add
adc
dec
push
out
inc
and
dec
sbb
cwtl
adc
cli
stc
cli
out
mov
mov
xor
je
xor
je
xor
je
jmp
lock
sub
hlt
jns
xor
rol
add
add
lcall
jge
je
lea
addl
jg
ds
pusha
je
negb
jp
pop
je
push
pop
je
push
je
push
pop
je
push
push
je
es
je
push
push
je
cmp
lcall
jae
inc
xchg
jae
pop
xchg
jae
shl
jae
mov
incl
add
mov
jg
mov
mov
mov
sarl
jle
outsb
or
pop
sti
add
js
scas
adc
jae
nop
sbb
jecxz
les
mov
add
andl
add
divb
adc
add
repz
mov
or
add
leave
rolb
and
popa
or
and
xchg
call
add
xor
add
dec
lcall
es
cmp
call
jmp
std
or
orl
ret
sti
add
scas
hlt
mov
xchg
hlt
inc
or
scas
sbb
repz
repz
add
add
cmc
into
add
call
push
loope
sbb
test
xchg
mov
adc
stc
jle
enter
repz
adc
push
xchg
jp
push
cli
jge
pushf
jle
push
add
clc
mov
jge
xor
pop
jne
daa
mov
push
mov
xchg
jle
add
cli
add
add
jmp
out
or
pushl
stc
call
ret
or
jne
sbb
clc
shl
mov
ljmp
lods
adc
push
out
mov
add
addl
lds
adc
outsb
jge
push
sub
mov
idiv
jbe
rolb
lock
mov
jns
addl
aam
jns
inc
jge
subl
jge
out
decl
jae
in
idiv
repz
mov
cld
add
scas
cltd
inc
pop
mov
inc
cmpsb
sbb
decl
cmp
decl
add
bswap
push
add
adc
jl
adc
push
add
push
in
inc
fs
clc
cli
imul
add
add
mov
sbb
jg
and
lfs
lahf
and
sbb
shl
add
aaa
addr16
xchg
mov
test
mov
in
cli
push
adc
loopne
repz
call
and
xor
out
mov
and
inc
call
jmp
pop
stos
incl
add
push
aad
movq
xchg
ret
shlb
add
mov
adc
jbe
adc
stc
dec
repz
add
xor
push
incl
movsl
sbb
in
dec
mov
add
push
mov
neg
sar
dec
add
jmp
add
stc
push
in
jne
cmpb
jle
add
add
sar
mov
jmp
rclb
add
out
push
or
loope
in
jge
cld
stc
stos
push
pop
or
or
xchg
repz
jle
mov
jge
scas
add
jmp
outsb
in
mov
nop
mov
add
or
jnp
inc
cli
jbe
jge
out
incl
add
cmc
hlt
add
mov
shll
sbb
jae
decw
je
or
imul
mov
ljmp
mov
jns
xchg
cmc
mov
add
out
scas
inc
je
mov
jne
jne
or
jb
push
jb
dec
call
es
gs
jl
mov
add
mov
xchg
bts
jg
push
jae
xor
icebp
cli
and
jg
mov
call
iret
mov
or
cmp
sbb
add
hlt
leave
icebp
cli
jecxz
jg
mov
jp
mov
repz
ret
dec
out
mov
adc
inc
outsl
lea
mov
lret
enter
xchg
or
decl
cltd
std
add
add
mov
xchg
std
imul
decl
imul
repz
popl
out
mov
out
mov
test
adc
out
mov
out
mov
xor
adc
out
mov
out
mov
iret
stos
fsin
xlat
adc
out
mov
out
mov
adc
add
mov
rcll
mov
out
mov
mov
adc
out
mov
out
mov
xor
xor
inc
cli
stc
jmp
repz
jmp
repz
add
jmp
repz
loop
stc
push
mov
add
jmp
repz
add
mov
repz
push
add
jmp
repz
mov
add
jmp
repz
stc
mov
and
stc
jmp
repz
pop
in
add
icebp
add
gs
add
stos
dec
cld
call
icebp
add
and
icebp
add
add
add
and
push
cld
std
push
cld
decl
push
cld
ljmp
push
cld
decl
push
cld
decl
push
cld
lcall
cld
pushl
push
cld
call
push
cld
out
push
cld
push
push
cld
dec
push
cld
call
push
cld
pushl
push
cld
lcall
push
cld
jmp
xchg
mov
std
imul
std
add
add
push
xchg
std
inc
loop
std
cmp
cltd
std
xor
std
sub
std
and
sbb
cltd
std
or
cltd
std
sti
out
std
repz
cltd
std
jmp
mov
std
mov
std
lret
or
decl
lods
std
mov
stos
std
stos
test
std
fwait
xlat
stos
std
add
add
mov
leave
lods
cmp
xchg
stos
jno
fldcw
popa
sti
int
pop
sti
mov
push
sti
sbb
stos
inc
sti
int
cmp
iret
stos
xor
pop
stos
sub
pop
stos
and
xchg
adc
out
mov
repz
add
lcall
icebp
cli
int
jmp
cli
xchg
sar
gs
add
add
sar
pushf
mov
cli
cltd
pushf
test
cli
jmp
cltd
cli
add
lock
stc
icebp
sub
stc
xor
clc
stc
aas
sbb
stc
sbb
or
stc
gs
stc
push
stc
idiv
test
sub
stc
dec
and
stc
pop
sbb
stc
push
adc
stc
negl
clc
stc
jecxz
clc
stc
psadbw
stc
cmc
cmc
idiv
xor
clc
stc
xchg
add
add
adc
clc
stc
inc
push
clc
stc
inc
push
clc
stc
sub
div
stc
cmc
and
clc
stc
add
clc
stc
clc
stc
adc
clc
stc
add
cld
decl
cld
lcall
cld
jmp
pop
cld
dec
pop
cld
jmp
pop
cld
jmp
push
jmp
data16
decl
addr16
lcall
addr16
pushl
cld
incl
add
or
data16
lcall
imul
pushl
imul
jge
cld
ljmp
cld
decl
push
call
push
ljmp
push
push
imul
pushl
cld
decl
mov
mov
rorb
std
mov
mov
xor
std
jnp
mov
add
add
imul
arpl
pop
dec
mov
push
mov
mov
inc
orb
xor
mov
sub
mov
and
mov
sbb
mov
adc
std
or
mov
add
xchg
std
sti
in
std
repz
nop
std
jecxz
nop
std
nop
std
lret
xchg
nop
std
ret
repnz
nop
mov
divl
nop
add
add
mov
mul
xchg
imull
nop
xor
pop
nop
jno
inc
nop
imul
sti
nop
pop
testl
xchg
dec
mull
xchg
inc
div
cltd
cmp
out
mov
pop
cmpsb
sub
shll
sbb
out
mov
jmp
add
icebp
add
in
add
add
fdecstp
sbb
repz
out
stc
out
stc
jae
clc
stc
pop
idiv
stc
inc
out
stc
cmp
clc
stc
dec
aaa
clc
stc
and
clc
stc
cmp
es
stc
out
clc
stc
ss
stc
xchg
es
stc
popf
es
stc
mov
div
stc
mov
idiv
jnp
idiv
imul
stc
xlat
cmc
idiv
leave
add
add
repz
repz
pop
clc
stc
xor
push
stc
push
push
stc
add
cld
pushl
cld
cmp
aas
popa
cld
jmp
cld
decl
cld
pushl
cld
call
cld
incl
cld
cmp
jmp
cld
cmp
cmp
mov
cld
incl
add
lods
cld
pushl
arpl
lcall
cld
decl
cld
jmp
popa
cld
pushl
arpl
jmp
arpl
inc
arpl
inc
arpl
ljmp
push
cld
decl
sahf
std
std
rorl
lret
bound
std
mov
jo
std
stos
test
std
fwait
cmpsb
mov
std
add
add
cmp
std
jnp
mov
std
imul
arpl
std
pop
push
sahf
std
push
inc
sahf
std
dec
rcrb
cmp
std
xor
std
and
std
sbb
std
adc
std
or
popf
std
add
mov
jmp
repz
fpatan
add
repz
add
mov
repz
test
repz
cltd
repz
xchg
repz
popl
repz
mov
xlat
mov
jmp
mov
jnp
dec
repz
inc
repz
cmp
sub
sub
jns
and
ja
sbb
scas
xchg
adc
mov
imul
add
or
stc
mov
icebp
stc
fistps
icebp
stc
adc
stc
repz
stc
pop
add
stc
adc
icebp
stc
in
sbb
stc
jmp
in
lock
lods
in
lock
in
lock
jmp
div
stc
aas
daa
lock
push
daa
lock
jge
lock
mov
sub
stc
icebp
sub
stc
sub
stc
xchg
sub
stc
fwait
in
out
stc
xor
in
out
stc
jae
add
in
out
stc
fisttpl
lock
mov
lock
mov
jg
sti
jmp
xchg
sti
mov
mov
pushl
sti
push
mov
jmp
mov
dec
mov
jmp
mov
pushl
sti
mov
xchg
sti
inc
xchg
sti
jmp
cmc
add
jbe
add
xor
add
cmc
add
push
cmc
add
gs
incl
cmc
add
xor
add
mov
std
decl
pushf
std
adc
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
pushf
std
shrl
decl
popf
std
ret
decl
popf
std
stos
dec
popf
std
add
add
fwait
jp
std
xchg
jb
std
mov
popf
std
jnp
std
decl
outsl
pop
icebp
or
mov
inc
jne
in
bound
push
pop
outsb
mov
push
add
hlt
stos
pop
ret
push
les
push
lds
mov
test
pop
bound
jno
rep
add
pushf
push
jp
xchg
bound
mov
add
sbbl
popa
adcl
add
mov
pop
inc
jb
gs
push
mov
adc
dec
push
push
push
and
arpl
pop
sbb
push
inc
pusha
icebp
cmp
js
repz
iret
pop
adc
repnz
pop
inc
lock
push
jcxz
call
insb
mov
cmp
pop
push
lret
aad
outsl
sarb
add
or
lods
jb
dec
into
imul
mov
imul
pop
push
jmp
pop
pop
jne
push
pop
insl
test
pop
jne
cs
push
cmpb
pop
dec
inc
ds
sbb
push
nop
sub
sbb
push
jae
rcrl
xor
jecxz
pop
xor
aad
and
mov
inc
adc
add
add
inc
inc
add
mov
cmp
pop
jne
sti
dec
insl
gs
dec
add
inc
je
dec
xor
insb
fdivs
je
lret
push
imul
out
sub
pop
xor
pop
popa
adc
arpl
dec
data16
mov
dec
add
inc
data16
sub
or
add
aas
outsl
aaa
inc
push
dec
xlat
dec
arpl
add
stos
push
jne
int3
push
bound
bound
jne
adc
mov
insl
imul
sti
pusha
add
xor
sti
pop
push
mov
pusha
add
fs
xchg
outsl
gs
dec
add
imul
mov
ja
pop
data16
je
ret
lea
je
add
add
and
popa
popa
xor
std
cwtl
mov
pop
je
xor
sub
inc
jae
clc
xor
je
cmp
cmc
repz
repnz
add
popa
sti
pop
mov
push
negb
push
add
fcomip
movb
pop
aam
mov
pop
lods
pop
mov
inc
rcll
repz
dec
push
mov
add
mov
cmp
test
repz
jae
push
test
add
repz
jne
push
je
pop
pop
pop
and
call
pop
es
and
data16
cmc
push
inc
push
mov
add
mov
fs
out
xor
add
sub
scas
pop
sbb
pop
push
jmp
add
add
mov
test
mov
bound
push
cmpsl
push
push
fs
push
pop
fs
inc
pop
ds
popa
pop
xchg
outsl
jle
push
outsb
jp
push
add
sbbb
jle
pop
jne
push
xor
sti
sub
jmp
pop
add
dec
inc
jb
pop
fs
mov
push
add
add
test
jb
push
add
mov
cmp
push
jne
jno
imul
data16
cmp
add
pop
je
dec
sub
shl
inc
add
push
jne
aaa
inc
pop
gs
gs
add
xor
jae
dec
gs
add
push
and
pop
ljmp
add
push
add
dec
imul
add
insl
push
mov
outsb
add
pop
decl
das
push
push
xor
fildll
pop
outsb
icebp
sti
pusha
das
sahf
sbb
incb
mov
pop
fs
pop
popa
mov
out
imul
aaa
cli
push
movsl
int3
imul
mov
js
insb
cli
dec
pusha
mov
jo
sbb
pop
push
pop
jns
gs
add
cmp
jns
and
dec
xor
inc
sub
outsb
cmp
int3
mov
das
pop
sub
push
pop
pop
mov
push
push
fs
push
fcomip
stos
add
pop
ss
in
dec
xlat
xor
dec
and
repz
add
dec
or
pop
adc
mov
pop
add
dec
cld
dec
mov
add
cmp
push
fcompl
add
ja
call
outsb
push
pop
int
ja
rcrl
nop
bound
test
jno
dec
jp
mov
insb
add
je
sub
jns
push
jne
push
repz
mov
push
push
pop
insl
dec
fstpl
ret
imul
lea
jno
fidivrl
je
lret
imul
in
sub
fstpl
sbb
add
push
add
or
pop
outsl
jmp
mov
jne
scas
push
inc
lds
pop
jmp
push
push
jne
outsb
push
push
mov
jae
jns
int
mov
push
jne
cs
inc
jge
pop
pop
add
pop
add
ret
icebp
imul
arpl
out
dec
outsl
inc
pop
dec
imul
xor
add
add
ret
jae
sub
cmp
stc
add
pop
inc
imul
repnz
jb
data16
pop
outsl
imul
push
jb
dec
fs
std
sub
dec
jne
cmc
icebp
inc
add
push
and
je
push
insl
mov
insb
outsb
inc
gs
add
add
xor
add
fs
and
clc
xor
cld
or
dec
ljmp
add
inc
imul
out
add
test
out
gs
std
and
imul
outsb
dec
mov
mov
gs
mov
mov
aaa
imul
js
jo
push
mov
xchg
push
ds
mov
dec
movsl
jb
push
xchg
xor
pop
xchg
push
pop
repz
push
dec
test
dec
mov
add
repnz
cs
jo
cmp
push
popa
push
arpl
pop
dec
jb
push
arpl
dec
cmp
mov
sbb
iret
dec
adc
lds
addr16
add
repz
fbld
pop
mov
divb
add
ret
dec
notl
aad
mov
out
mov
js
shrl
mov
push
pusha
dec
add
nop
and
mov
fs
push
mov
repz
inc
push
imul
pop
outsl
jl
pop
push
mov
addr16
arpl
sbb
and
les
add
add
jmp
dec
movzbl
dec
mov
fs
cmpsb
dec
imul
add
stos
dec
imul
pop
push
fstpt
ficompl
add
xchg
inc
insl
add
sub
je
push
insl
jne
notb
negb
inc
repz
addr16
test
add
push
adc
popa
sbb
add
pop
jne
and
je
add
movsl
notb
add
dec
je
shrb
pusha
outsb
shll
jne
pusha
add
push
insl
mov
hlt
cmp
mov
arpl
fs
xor
dec
jne
ss
imul
jne
mov
fs
lahf
arpl
std
sbb
jl
imul
outsl
add
add
sub
inc
je
pop
insl
pop
and
outsl
dec
xor
mov
inc
sub
push
iret
cmp
icebp
inc
pop
add
cmp
das
fs
and
jmp
push
incl
xor
stos
in
outsl
mov
inc
ds
out
arpl
insl
mov
dec
push
add
add
repz
jo
push
lret
dec
ret
repz
inc
push
pushf
dec
cmp
push
push
push
mov
repz
add
push
jl
aaa
dec
js
sbb
dec
sub
repz
add
arpl
leave
imul
repz
dec
push
popa
in
addr16
dec
in
push
inc
jo
repz
iret
push
adc
mov
add
cmpsb
cmp
push
or
add
testl
add
xor
jbe
fs
jo
outsb
imul
pop
push
push
jmp
imul
das
push
xor
add
xor
xchg
dec
push
xor
add
popa
dec
fs
push
inc
push
cld
pop
add
out
arpl
add
add
rorb
mov
sub
xor
mov
pusha
sbb
dec
imul
repz
xor
xchg
push
add
jmp
push
insb
push
cmp
fdiv
inc
inc
inc
xor
add
xor
add
push
dec
imul
inc
pusha
je
push
addr16
mov
addl
push
push
imul
add
dec
arpl
sub
adc
popa
sbb
outsb
lret
add
push
jne
int
fs
leave
xor
inc
data16
repnz
add
xor
inc
data16
repnz
mov
pusha
outsl
mov
data16
int3
std
lea
pusha
je
fisubl
jno
push
push
jne
pop
imul
pushw
pushf
std
ds
add
jno
insb
push
popf
dec
dec
inc
imul
outsb
add
push
gs
andl
xor
insl
imul
std
jge
or
push
gs
cs
pushl
push
imul
std
movsl
mov
pop
je
sbb
jmp
repz
fs
push
lods
add
repz
popa
or
popa
add
add
pushf
inc
call
imul
push
push
inc
jns
ret
repz
add
mov
insl
addr16
imul
push
sub
repz
dec
test
repz
push
push
mov
push
ja
sub
dec
dec
imul
icebp
ss
clc
inc
inc
push
dec
cmp
dec
inc
xor
add
sbb
dec
loop
jno
jecxz
push
jmp
rorl
or
push
inc
sub
push
data16
dec
outsb
or
push
jmp
addr16
outsl
movsl
fs
fisttpl
add
xor
dec
imul
pusha
dec
mov
mov
push
imul
push
outsb
jp
push
fs
xor
stos
add
add
lock
outsl
xor
mov
sbb
aam
dec
outsl
mov
imull
mov
inc
aas
jb
push
push
outsl
mov
add
icebp
dec
jae
and
imul
sub
mov
insl
cmp
gs
sub
dec
cmc
dec
outsl
aam
dec
insl
aam
fs
in
addl
cmp
or
imul
ja
div
add
ds
fs
inc
push
or
aas
dec
gs
sub
inc
js
adc
cmp
imul
inc
dec
gs
xor
outsl
mov
xor
dec
gs
sbb
outsl
mov
decl
sub
call
insb
push
mov
add
popf
pusha
push
pusha
outsl
pop
stos
pop
gs
std
arpl
stos
dec
gs
stos
dec
je
jle
add
insb
push
pop
dec
add
aas
jne
pop
arpl
pop
dec
add
push
das
in
dec
filds
push
mov
cmc
add
aaa
push
lods
push
inc
inc
mov
jmp
iret
dec
adc
add
add
mov
notb
popa
mov
dec
divb
ja
call
pusha
xorb
js
pusha
mov
testl
push
mov
inc
dec
ret
repz
add
dec
pushf
cs
sub
add
dec
jl
sub
repz
shll
fs
fstl
inc
mov
add
mov
fs
int
jno
lret
dec
fs
jmp
dec
inc
fisttpll
push
fildl
xor
sbb
test
pop
add
xor
std
push
dec
outsb
cli
outsb
push
fs
ja
movsl
push
push
push
shlb
lahf
dec
push
test
add
mov
shlb
push
shrb
push
pop
pop
pusha
test
pop
xchg
add
add
cmc
dec
push
stc
dec
imul
dec
gs
inc
pusha
addr16
xchg
cmp
inc
mov
dec
jne
xchg
inc
arpl
out
jge
push
jne
xchg
push
pusha
je
and
out
push
add
pop
imul
repz
jb
daa
inc
fs
add
imul
add
add
aaa
icebp
cmp
outsb
leave
dec
outsb
inc
out
mov
ljmp
popa
sbb
arpl
int3
std
fisttpl
pushw
int3
std
or
sub
into
sub
add
and
push
aas
mov
int3
std
xchg
mov
push
insl
mov
push
imul
fs
add
add
jo
push
push
jle
bound
out
add
insl
test
push
jne
popa
imul
imul
dec
mov
arpl
mov
aas
repz
cmp
mov
sub
pop
and
inc
xchg
pop
add
dec
addb
cmp
push
sub
repnz
cmc
pop
inc
pop
rorb
pop
fadds
add
add
scas
es
jnp
adc
inc
push
arpl
cmp
add
repz
cmp
bound
inc
pop
inc
mov
roll
dec
faddl
dec
fsubs
push
addr16
push
aam
mov
mov
inc
dec
ret
pop
cmp
int3
pop
adc
enter
mov
xchg
sub
sub
pop
inc
mov
dec
jne
fcomip
add
add
das
fs
inc
pusha
push
jmp
outsl
dec
icebp
xor
jl
das
fs
les
sbb
daa
lcall
stos
push
push
sub
inc
jmp
mov
inc
or
xor
dec
or
je
mov
mov
ds
dec
les
dec
jne
shrb
pop
outsl
aam
gs
add
add
movsl
out
jbe
repnz
jne
cld
jne,pt
sbb
pop
jae
testl
push
or
jne
les
gs
or
add
push
pop
outsl
mov
idivl
ja
pop
data16
and
pop
jne
lea
insb
bound
addr16
add
testl
add
mov
add
insl
imul
mov
pop
add
cmp
ss
popl
push
add
cmp
addr16
sub
scas
incb
push
inc
insb
in
dec
push
dec
in
daa
push
dec
in
pop
gs
daa
push
dec
mov
pop
push
mov
pop
addr16
add
pushf
pop
push
add
inc
gs
cmp
jno
das
outsl
repz
push
hlt
mov
pop
popa
repz
inc
pop
rcrb
inc
lds
inc
ret
pusha
pop
popf
add
pop
xchg
xor
push
movsl
push
hlt
xchg
push
loop
mov
and
fs
push
call
imul
pop
loope
push
imul
cmc
adc
pop
mov
adc
push
adc
push
pop
push
lods
pop
or
xor
and
or
mov
add
adc
pop
push
outsl
fstpl
push
dec
int3
outsb
inc
outsl
sarb
inc
int3
pop
xor
pop
inc
push
sbbl
inc
outsl
nop
inc
dec
inc
test
xor
add
add
pop
repz
inc
fs
push
pop
jl
pop
jne
mov
arpl
add
jmp
dec
dec
in
inc
outsl
inc
mov
inc
dec
fnsave
outsl
push
fadds
cmp
pop
cmp
mov
dec
sbb
ss
mov
jmp
sub
cmp
js
divl
add
pop
pop
inc
shrl
push
cs
js
add
add
int3
and
enter
imulb
push
popa
notl
mov
inc
jo
cs
jb
push
fs
pop
imul
add
sbb
cmp
fs
es
inc
enter
sub
gs
add
xor
js
imul
addr16
aas
jne
xor
daa
outsb
mov
pop
outsb
test
add
jnp
popa
push
adc
inc
jno
xor
jmp
push
push
push
cltd
pop
jne
test
push
lea
pop
sub
pop
popa
and
push
sar
dec
xor
outsb
sub
xlat
jg
inc
add
std
mov
xor
aas
outsl
jmp
aas
dec
je
push
add
cmp
add
or
cmp
leave
add
add
add
push
cmpsl
push
add
xor
divb
mov
cli
add
pop
add
push
aam
pop
pop
mov
cmp
pop
pop
dec
movsb
pusha
cmp
pop
cmp
lret
push
mov
jns
inc
pop
mov
xor
push
xor
inc
xchg
inc
xchg
pop
cli
aaa
mov
repz
add
add
in
pop
test
push
inc
push
repnz
push
dec
lds
pop
mov
pop
push
pop
mov
inc
add
push
bound
insl
sbb
and
leave
xor
mov
pusha
adc
rcrl
pop
push
insl
add
dec
add
lcall
fldt
les
adc
cmpsl
popa
push
fs
push
push
add
sub
cmp
movsb
sub
pop
test
pop
imul
mov
pop
jne
int3
push
outsb
dec
ret
pop
mov
dec
dec
mov
add
ret
idivl
jb
daa
jne
shlb
jb
cmp
xchg
add
sbb
aas
fs
cmp
je
sub
fwait
pop
imul
insl
subb
add
add
rolb
fs
push
insl
jne
or
push
mov
enter
js
add
pusha
jae
or
aam
insb
add
sub
adc
jne
or
push
outsl
inc
cmp
sbb
adc
add
cmc
inc
outsb
or
push
jns
and
or
pop
jae
pop
dec
push
mov
add
cmp
cmp
add
add
mov
add
stc
sub
dec
jb
push
inc
jno
das
add
inc
gs
dec
gs
mov
std
dec
mov
dec
insl
bound
std
dec
mov
arpl
dec
insl
inc
outsl
inc
push
mov
ds
outsl
pop
je
insb
push
imul
push
outsl
int
sub
dec
aas
add
add
push
push
cmp
pop
dec
push
mov
inc
pusha
mov
push
lds
popa
mov
inc
cmp
mov
call
push
cltd
push
add
jne
call
inc
pop
cmp
adc
repz
pusha
inc
mov
mov
pop
add
push
aam
push
push
aad
ds
mov
push
xor
add
mov
sub
xchg
push
add
add
repnz
lock
xchg
pusha
jmp
mov
xor
jmp
rcrl
pop
mov
and
xor
cmp
fstps
dec
fcompl
jnp
add
mov
pusha
sbb
lods
xor
pusha
cld
insb
and
mov
push
xor
dec
push
pop
add
push
pusha
fidivl
and
xchg
cmp
add
add
sub
pusha
aad
dec
push
jmp
xor
imul
cwtl
add
in
aas
add
push
js
gs
xor
add
and
and
hlt
sub
test
je
gs
int
outsb
jbe
data16
mov
xchg
add
and
andb
push
movsl
push
pop
gs
add
push
sub
nop
push
outsl
gs
pop
imul
add
fdivp
push
popa
fldcw
dec
popa
stc
push
imul
repz
add
cmp
add
dec
in
add
dec
imul
dec
decb
dec
push
dec
fistps
dec
ret
fdivr
jp
or
je
or
mov
add
lods
cmp
fcmovnu
std
mov
pop
push
fistps
xchg
loopne
push
repz
push
fdivr
and
notl
in
dec
push
call
adc
std
mov
sub
pop
outsb
pop
mov
std
sbb
sub
xchg
ds
xchg
push
mov
push
jmp
add
call
pop
addl
jb
mov
ss
leave
aaa
sub
jns
dec
xor
push
cmp
mov
pop
dec
dec
movsb
push
call
cmp
push
add
pushf
repz
push
xor
jnp
or
inc
push
call
xor
aam
cmp
cmp
push
leave
xor
push
mov
xor
add
pop
pop
jne
jo
push
icebp
popl
fwait
mov
pop
imul
push
push
push
popf
xor
adc
push
jle
jne
imul
dec
gs
push
out
add
xor
push
push
popl
xor
add
test
jns,pn
pop
insl
int
push
add
popl
add
pcmpeqw
add
cld
addr16
fstps
cmp
add
jne
fiadds
xor
insl
and
inc
bound
sbb
jne
ret
sbb
sub
push
add
jne
rorb
push
jo
out
xor
jbe
arpl
or
dec
add
add
jno
data16
cmc
out
addr16
or
je
std
arpl
jo
xchg
outsl
gs
add
adc
adc
testb
jo
mov
and
std
lahf
mov
je
mov
je
lods
das
add
and
cltd
and
insl
xor
mov
incl
arpl
fnstcw
add
add
add
mov
inc
add
push
imul
add
out
arpl
add
mov
push
inc
push
ljmp
jno
cmp
mov
pop
mull
popa
push
push
ret
repz
add
pop
aam
sub
sub
pop
lret
add
xor
daa
and
xor
add
loopne
mov
repnz
subb
repz
fbld
test
das
mov
mov
push
jmp
es
pop
jae
add
test
call
xor
inc
ss
mov
push
sbb
mov
repnz
cmp
dec
imul
xor
hlt
jb,pn
add
adc
sub
dec
fs
add
je
fildl
push
jne
push
push
push
ds
push
repz
ret
sub
test
push
insb
mov
ret
fisttpl
add
sahf
push
dec
pop
jnp
fs
gs
jne
bound
sub
jne
push
pop
dec
push
push
outsb
and
jne
mov
add
add
mov
je
mov
sti
arpl
add
pop
popa
cmp
or
hlt
push
add
ss
inc
fldl
jb
xor
jne
xlat
or
hlt
cmp
and
xor
pop
insb
adc
push
add
sti
arpl
das
data16
add
aam
inc
outsb
jmp
sti
cmp
adc
add
fnstenv
add
sbb
enter
enter
movsl
sti
outsl
xchg
add
mov
add
out
outsb
jp
cmp
pop
jmp
addr16
mov
add
outsb
xor
and
jle
add
and
scas
xor
xchg
fs
int
std
dec
mov
fs
add
jmp
imul
fidivrs
push
add
xor
dec
test
add
add
xor
dec
jno
sbb
imul
add
adc
jp
or
cs
repz
inc
dec
hlt
cmp
aaa
orl
xor
leave
sub
or
mov
add
add
xor
sub
dec
cld
inc
xchg
sub
xor
add
repz
aaa
clc
inc
mov
notb
fisttpll
xor
cmp
mov
mov
aam
pop
xor
pop
dec
and
pop
pop
xor
es
sub
pop
jne
mov
push
jne
push
inc
pusha
add
add
sub
cmc
add
add
pushf
sub
push
test
sbb
mov
insb
dec
gs
insb
inc
je
bound
jmp
lods
inc
push
fwait
stos
cld
pop
mov
dec
js
mov
push
popl
fs
push
jne
insb
inc
dec
pop
imul
inc
push
pop
inc
mov
testl
add
add
les
fs
and
add
inc
outsb
xchg
adc
nop
add
gs
outsw
jle
fs
in
mov
gs
fs
adc
int3
adc
push
ljmp
add
icebp
dec
je
add
es
adc
and
dec
add
fsubl
pop
je
or
gs
arpl
add
aaa
add
xor
je
pop
inc
outsb
mov
push
gs
daa
sbb
fldl
mov
daa
je
clc
es
je
ficomps
popa
pusha
mulb
popa
outsl
icebp
cmp
dec
inc
or
push
mov
fisttpll
dec
jg
das
jle
and
std
cli
mov
cmp
outsb
push
mov
dec
and
dec
add
add
in
sub
xor
outsl
sbb
mov
add
icebp
inc
dec
outsl
jmp
aaa
decb
repz
sub
mulb
inc
sub
cmp
movsl
inc
inc
push
test
dec
and
outsb
dec
cmp
repz
bound
and
or
add
cld
inc
xor
inc
xlat
sub
add
cs
mov
and
add
xor
jmp
xchg
repz
daa
in
cmp
sub
dec
test
repz
mov
dec
jge
lock
add
repz
inc
fs
jb
dec
dec
jl
push
jge
fs
imul
inc
pop
and
fs
inc
sub
add
add
jmp
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
gs
add
gs
add
xor
cmc
add
and
cmc
add
add
add
xor
cmc
add
and
hlt
add
cmc
hlt
add
in
add
in
add
cmc
hlt
add
cmc
hlt
add
in
add
in
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
jne
add
jne
add
gs
add
gs
add
mov
std
incl
add
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
add
lret
mov
std
decl
std
decl
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
icebp
mov
push
inc
mov
sub
mov
sub
sub
movsl
mov
xchg
ljmp
rcrl
dec
or
popl
add
mov
stos
xor
mov
insl
mov
adc
or
mov
or
mov
ljmp
pop
arpl
test
stos
sbb
pushw
add
repz
repz
movsl
icebp
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
xor
add
xor
icebp
add
and
icebp
add
xor
icebp
add
and
lock
cmc
lock
in
add
in
add
cmc
lock
cmc
lock
in
add
in
add
mov
add
mov
add
movsl
lock
movsl
lock
mov
add
mov
std
decl
std
decl
std
incl
add
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
add
repz
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
mov
add
mov
add
movsl
cmc
add
movsl
cmc
add
mov
add
mov
add
movsl
cmc
add
movsl
cmc
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
add
add
gs
add
xor
cmc
add
and
cmc
add
xor
cmc
add
and
cmc
add
cmc
hlt
add
cmc
hlt
add
in
add
in
add
cmc
hlt
add
cmc
hlt
add
mov
std
decl
std
decl
std
decl
std
decl
add
lcall
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
cmc
icebp
add
in
add
in
add
cmc
icebp
add
cmc
icebp
add
in
add
in
add
mov
add
mov
add
movsl
icebp
add
movsl
icebp
add
mov
add
mov
add
movsl
icebp
add
movsl
icebp
add
jne
add
jne
add
gs
add
add
add
jne
add
jne
add
gs
add
gs
add
xor
icebp
add
and
icebp
add
xor
icebp
add
and
lcall
mov
std
decl
std
decl
std
decl
std
decl
std
decl
add
lcall
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
and
testb
xor
testb
and
testb
cmc
cmc
add
cmc
cmc
add
in
add
in
add
cmc
cmc
add
cmc
cmc
add
in
add
in
add
mov
add
mov
add
movsl
cmc
add
movsl
cmc
add
mov
add
mov
add
movsl
cmc
add
movsl
cmc
add
add
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
add
lcall
mov
std
decl
std
decl
std
decl
std
decl
std
decl
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repnz
add
add
jne
add
repnz
repnz
xor
repnz
and
repnz
xor
repnz
and
repnz
cmc
icebp
add
cmc
icebp
add
in
add
in
add
cmc
icebp
add
cmc
icebp
add
in
add
in
add
mov
add
mov
add
movsl
icebp
add
movsl
icebp
add
mov
add
add
add
movsl
icebp
add
movsl
icebp
add
jne
add
mov
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
add
lcall
mov
std
decl
std
decl
std
decl
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
mov
add
mov
add
movsl
testb
movsl
testb
jne
add
add
add
testb
testb
jne
add
jne
add
testb
testb
xor
testb
and
testb
xor
testb
and
testb
cmc
cmc
add
cmc
cmc
add
in
add
in
add
cmc
cmc
add
cmc
cmc
add
in
add
in
add
mov
add
mov
add
add
add
mov
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
incl
add
mov
std
decl
std
decl
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
cmc
repnz
in
add
in
add
mov
add
mov
add
movsl
repnz
movsl
repnz
mov
add
mov
add
add
add
movsl
repnz
jne
add
jne
add
repnz
repnz
jne
add
jne
add
repnz
repnz
xor
repnz
and
repnz
xor
repnz
and
repnz
cmc
icebp
add
cmc
icebp
add
in
add
mov
decl
std
incl
add
mov
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
incl
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
and
testl
add
testb
in
add
in
add
cmc
testb
cmc
testb
in
add
in
add
mov
add
mov
add
movsl
testb
add
add
mov
add
mov
add
movsl
testb
movsl
testb
jne
add
jne
add
testb
testb
jne
add
jne
add
testb
testb
xor
testb
and
testb
mov
decl
std
decl
std
decl
std
incl
add
mov
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
std
decl
out
mov
out
mov
out
add
add
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
mov
out
add
add
mov
out
mov
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
xor
repz
and
repz
xor
repz
and
repz
cmc
repnz
cmc
repnz
in
add
in
add
cmc
repnz
cmc
repnz
in
add
in
add
add
add
mov
add
movsl
repnz
movsl
repnz
mov
add
mov
add
movsl
repnz
movsl
repnz
jne
add
jne
add
repnz
repnz
jne
add
mov
decl
std
decl
std
decl
std
decl
pop
call
std
out
add
xchg
hlt
add
mov
mov
lea
mov
mov
adc
mov
cli
cmpl
push
jle
add
jle
sbb
repnz
cli
pop
cmp
aas
mov
add
nop
mov
ljmp
or
fwait
cmc
mov
mov
pop
jmp
add
jecxz
stos
repz
sbb
mov
xchg
add
pop
test
jge
neg
push
sub
add
add
lock
adc
cltd
aas
add
xchg
jg
mov
mov
lods
lcall
inc
pop
pop
push
add
test
add
cmp
add
add
ror
or
cltd
stc
push
add
je
pop
and
icebp
jg
lret
cltd
mov
fidivrl
and
add
lock
repnz
fldcw
ss
out
fsts
inc
shr
add
inc
cmpsb
or
lcall
add
xchg
repz
leave
jmp
cmp
add
mov
test
movsb
sti
in
add
ficoms
aaa
hlt
add
pop
dec
push
jecxz,pt
adc
xchg
and
sub
out
data16
addb
into
fnstsw
incl
cmp
cmp
fnsave
jne
push
pop
addr16
stc
mov
out
push
jle
jp
in
adc
adc
add
add
add
fadd
or
adc
fnstsw
mov
mov
movsl
add
cmc
adc
mov
jl
lods
gs
jle
sahf
adc
pop
xlat
sbb
ror
sbb
dec
and
ret
ja
fnstsw
inc
add
xchg
std
jg
negb
sbb
cmpb
sub
add
std
decl
xchg
sbbl
xor
repz
loop
inc
int3
xor
daa
jmp
adc
pop
jo
or
xchg
call
xchg
repz
or
cmp
adc
hlt
fwait
pop
sti
out
adc
mov
sti
push
xchg
or
push
jnp
add
pop
ja
push
insb
cmp
sub
aaa
mov
mov
ret
xor
push
jge
fwait
or
daa
das
data16
rcll
in
addr16
out
out
add
cmp
nop
push
call
xchg
xor
xorb
add
or
or
fcoms
mov
dec
push
or
add
add
pop
test
stc
cld
jne
dec
fldl
int3
pop
jmp
int3
jmp
add
or
and
push
scas
stc
ds
xorl
rolb
xchg
int3
call
jb
jbe
popf
sbb
mov
xchg
imul
cwtl
mov
mov
or
mov
and
dec
add
add
int
stc
ljmp
pop
mov
adc
add
cmp
add
clc
cli
pushl
repnz
cli
jbe
or
cld
or
jnp
je
xorb
cmc
jne
push
ja
ret
cmc
adc
mov
int3
cmc
cmp
add
add
insb
aad
or
or
jmp
jae
incl
add
cmpsl
stc
mov
xchg
std
push
mov
in
add
mov
mov
fmuls
pushf
adc
adc
out
jo
cli
or
and
nop
loope
jecxz
aam
cltd
push
lock
mov
mov
jl
add
rorl
mov
jecxz
sub
add
add
fwait
push
mov
xchg
mov
or
sbb
int3
popa
notb
inc
lods
push
mov
rep
aam
repnz
add
icebp
sub
inc
mov
adc
repz
pop
and
pushf
push
mov
jge
jecxz
xchg
fsub
add
divl
mov
loope
add
add
push
cmc
out
mov
ss
mov
or
filds
lea
sub
mul
ss
xlat
jecxz
adc
testb
fwait
sbb
je
out
mov
repz
push
lock
inc
jle
stc
cmp
xor
adc
xor
add
in
xchg
jmp
pop
nop
xchg
fimull
pop
and
add
mov
pop
int3
add
and
imull
jmp
dec
jge
arpl
add
pop
dec
in
adc
dec
int
xchg
adc
repz
test
add
mov
jae
je
shl
flds
idiv
add
add
xchg
roll
jp
rolb
into
jns
pop
int
pushl
roll
cmp
or
je
je
or
push
loop
and
jbe
dec
call
cmc
mul
add
mov
mov
testl
push
es
sub
test
ja
add
add
mov
icebp
jae
sbb
add
lods
add
jg
xchg
or
dec
push
int3
out
pop
mov
lds
test
jge
mov
cltd
jge
xchg
enter
cld
adc
mov
xor
jno
movsbl
in
cs
or
mov
ret
xchg
cmp
mov
add
das
push
in
mov
lahf
adc
sti
jae
repz
in
add
pushf
add
iret
xchg
ja
into
ret
stos
jbe
mov
out
push
lahf
cmp
ljmp
mov
adc
out
das
cmp
mov
or
js
repz
fistps
add
mov
mov
xor
outsl
cwtl
mov
jle
rcrb
lds
das
add
pop
test
fdivr
dec
das
dec
add
push
call
imul
and
imul
jg
pushf
mov
ljmp
lcall
lcall
subb
dec
adc
add
mov
imul
sti
dec
sbb
dec
inc
jmp
dec
dec
test
adc
dec
addb
adc
sbb
repz
pop
dec
mov
push
mov
sar
xor
or
jl
mov
cmc
add
mov
fsubs
rcll
ffree
ret
inc
or
add
mov
jecxz
inc
push
jae
sub
ljmp
jne
xor
jne
or
jno
mov
repz
pusha
leave
jns
cmpsl
or
les
jns
insb
clc
add
das
insl
adc
jo
add
mov
xchg
mov
enter
mov
xor
mov
add
add
mov
testb
roll
jle
test
jns
orb
jg
test
jae
test
mov
jg
iret
pop
sbb
mov
ja
jle
lcall
sbb
repz
lcall
jp
or
pop
stc
or
test
add
add
test
or
repz
lods
jb
mov
test
add
imulb
or
test
mov
push
mov
fnsave
add
mov
and
jb
push
push
mov
cmp
fdiv
xchg
or
mov
divl
jmp
jp
jns
inc
push
sbb
add
mov
dec
iret
negl
jnp
sub
lock
push
and
sub
or
jb
int
daa
mov
inc
mov
jmp
clc
pop
in
inc
jno
xor
cmp
xchg
pop
xchg
shl
add
pop
insl
inc
lds
xor
je
sarl
add
arpl
aam
pusha
add
add
adc
and
bound
ret
mov
jge
mov
mov
movsl
insl
sbb
in
bound
add
jmp
mov
roll
pop
out
push
inc
add
jne
sub
cmc
xor
jo
add
cli
xorb
or
mov
lsl
sti
cmc
mov
into
mov
les
ja
loope
roll
testb
je
aaa
jecxz
jo
xchg
cmp
mov
cmc
jo
jmp
mov
jbe
xor
loope
push
xor
or
loop
ret
mov
cltd
jp
test
incb
jne
lcall
out
push
mov
out
jbe
clc
sbb
sbb
xchg
incb
imul
sub
add
pop
std
jle
insb
mov
pop
inc
je
adc
cld
std
out
jle
pop
mov
roll
vmread
pop
adc
mov
btr
mov
inc
pusha
or
and
add
add
push
xor
sub
mov
icebp
sbb
dec
cmp
pop
mov
xor
clc
clc
daa
cmp
add
mov
mov
mov
pop
cmpsb
jg
repz
loopne
outsb
jnp
cmp
js
add
cmp
push
pop
rolb
jmp
sbb
mov
pusha
pop
std
ja
divl
pop
fmull
imull
jnp
push
pop
adc
add
or
loopne
icebp
gs
addl
push
push
enter
test
jp
subl
xchg
mulb
xchg
mov
sbb
out
push
repz
inc
mov
inc
or
cmp
mov
xchg
loopne
jecxz
jl
fwait
xchg
add
in
add
jge
mov
or
add
or
testl
jle
push
add
cmp
jae
push
mov
sub
lcall
int3
aam
adc
decl
jb
jne
or
addr16
repnz
or
dec
cmc
je
out
cld
cmp
sub
sbbb
mov
stos
icebp
lea
imul
add
add
mov
js
je
push
jne
shrb
inc
add
add
fisubrl
mov
sti
mov
imul
ds
orl
mov
fwait
add
mull
adc
call
cmovne
rol
inc
mov
jo
rclb
add
lahf
push
aam
push
adc
repz
mov
out
mov
incl
pop
jne
rcll
ret
add
cmp
lds
movsl
outsb
xor
pop
add
in
jb
or
std
xchg
mov
icebp
fsubp
nop
inc
inc
lret
mov
mov
out
add
jo
add
jo
js
sub
add
add
mov
js
jmp
and
adc
push
or
rcrl
out
idiv
les
cmp
xchg
jo
std
sub
pusha
jl
repnz
add
mov
adc
testl
cmp
mov
faddp
xchg
gs
jge
mov
sbb
out
add
pop
hlt
push
xchg
testb
inc
int
add
int
insb
dec
add
and
mov
mov
xor
jnp
inc
inc
or
mov
adc
adc
ja
loope
mov
repz
sub
jmp
mov
jge
xchg
pop
sub
mov
pop
arpl
add
xchg
cmp
shlb
push
shlb
rcrb
cmp
sbb
mov
mov
mov
idiv
mov
leave
subl
loop
sar
testb
jb
je
jae
je
dec
jp
psrlq
add
jne
mov
inc
dec
xor
and
push
das
test
bound
mov
add
imul
aad
pop
repz
mov
push
sahf
test
icebp
push
add
data16
jmp
mov
jo
mov
cmp
decl
std
decl
nop
ja
jl
pop
je
xchg
mov
xchg
gs
mov
loopne
popa
adc
dec
rcpps
or
or
add
shl
outsl
imul
jb
xchg
jl
rcll
cli
cmp
pop
ss
mov
push
test
adc
dec
or
mov
daa
fnstsw
or
repz
int
cmpsl
cmp
clc
insb
loope
ss
divl
inc
adc
loope
lcall
add
add
pop
call
mov
cwtl
mov
cmpsl
inc
or
add
adc
daa
addb
mov
lock
sbbl
movsl
incl
subb
or
ljmp
push
jecxz
add
dec
iret
add
in
jo
push
js
insb
inc
push
push
js
lods
add
add
in
clc
cmp
xchg
jne
js
mov
or
mov
and
je
addr16
sub
jl
xchg
sti
cmpsb
je
mov
into
ret
add
adc
add
decl
das
push
jecxz
gs
int
enter
mov
test
mov
dec
bound
add
inc
jbe
add
push
mov
cmpsb
xor
jae
je
insl
shrb
mov
inc
and
xchg
test
add
add
rolb
add
fiaddl
jns
cmpsl
xchg
cmp
mov
je
jne
add
repnz
test
add
and
hlt
add
cltd
rorl
test
addl
add
ret
mov
test
dec
mov
testl
mov
push
int3
mov
leave
stos
add
cmp
pop
jle
add
add
sub
shlb
aad
mov
dec
inc
xchg
stc
test
jo
jle
js
push
pop
repnz
mov
or
inc
shlb
jge
call
int
sti
mov
add
mov
cli
jnp
add
mov
inc
mov
int
fsubrs
add
mov
loopne
jmp
xchg
jecxz
xor
es
mov
push
insb
fiadds
inc
addl
fwait
mov
or
mov
sbb
cmpsb
push
jae
jbe
mov
add
add
mov
jmp
outsl
out
out
outsl
out
cmp
mov
add
jbe
adc
mov
out
xchg
js
adc
jle
cld
fnsave
jg
arpl
push
or
add
push
repz
and
push
and
aam
push
or
sub
add
add
xorl
out
stc
pushf
arpl
in
add
std
lret
call
dec
ljmp
aas
jns
cmc
leave
jne
roll
and
cmp
mov
ret
test
pop
or
test
fildll
fs
mov
sbb
inc
add
add
jbe
rcrb
mov
add
filds
je
jo
or
out
jae
divb
cmp
xor
cmpl
or
dec
xchg
out
jae
or
dec
shl
add
xor
ret
xchg
mov
js
lock
and
scas
xor
je
dec
adc
add
add
add
mov
mov
es
add
shrb
cs
dec
add
aaa
fsubp
jle
call
data16
dec
icebp
add
je
mov
push
push
add
into
xchg
xchg
enter
xchg
mov
mov
xor
add
pop
shrb
push
jo
hlt
adc
add
and
mov
outsb
jae
cmp
add
repz
notb
popf
jge
pop
lock
movsl
cld
cmp
pop
pusha
mov
mov
mov
psubb
lahf
lds
push
pop
pop
pushf
pusha
push
jae
out
testb
rcrl
jmp
dec
add
add
dec
add
jnp
push
lss
call
div
lds
add
jle
pop
mov
jo
lahf
jl
or
hlt
add
mov
jnp
std
mov
or
adc
jmp
mov
jo
test
test
ljmp
adc
or
add
jl
icebp
add
add
fdivrs
mov
gs
jb
jmp
inc
jns
add
repnz
in
pop
push
cli
je
inc
ret
sub
jb
mov
mov
fwait
push
subl
cld
rol
mov
stc
xchg
clc
cmc
adc
fdivrs
icebp
push
cli
or
adc
testl
out
dec
clc
dec
mov
adc
or
sbb
stc
sbb
lock
jp
pop
loopne
mov
jno
jl
testb
pusha
dec
idiv
mov
int3
daa
subb
fpatan
add
ds
cmp
insb
push
xor
idiv
push
ss
aaa
imul
sub
mov
cli
add
add
shll
es
xchg
push
mov
arpl
ret
sbb
push
es
imul
pop
push
sbb
rcrb
ss
add
mov
icebp
and
pop
pop
mov
imul
cli
rorb
push
imul
scas
push
sub
and
movsb
cmc
sbb
dec
data16
add
add
dec
dec
push
ret
sbb
pop
pop
jno
insl
or
sbb
xor
xchg
insl
mov
adc
inc
rcrb
cltd
insl
push
leave
pop
pusha
lret
rcr
jp
jbe
psubusb
mov
andb
pop
int3
pop
push
outsl
out
pop
push
dec
mov
in
jns
ljmp
add
je
lods
dec
adc
mov
add
pop
pop
adc
insl
sysenter
xchg
std
dec
sub
into
lahf
jl
xchg
xchg
push
inc
lret
push
std
lods
push
in
adc
leave
push
mov
in
cs
push
daa
xchg
sub
icebp
jo
or
repz
mov
dec
repnz
lret
mov
or
shrb
add
add
iret
leave
pop
ret
bound
dec
jo
insl
subl
mov
je
or
and
ja
dec
cli
je
popa
mov
xchg
test
div
mov
adc
mov
adc
cs
lock
hlt
jbe
pop
mov
in
inc
cmp
mov
add
add
add
xor
lods
adc
testl
cmp
arpl
sti
cli
jae
dec
add
sbb
jne
push
jp
and
cmp
xor
push
push
fdiv
mov
gs
cmp
pop
sti
push
push
xor
inc
jno
xor
inc
cmp
or
testl
bound
inc
add
add
xchg
dec
data16
pop
fistpll
fsubs
add
adc
gs
jae
inc
fs
inc
push
push
movl
dec
test
sarb
or
add
fdivr
decl
cmp
cli
pop
xchg
stc
xchg
divb
push
cltd
cmpb
cmp
adc
sub
popa
repz
jle
add
dec
add
mov
imul
mov
ret
stos
imul
push
inc
ror
jge
lret
add
mov
push
adc
pusha
mov
stos
xor
jge
fs
imul
jo
mov
int3
mov
mov
jmp
test
pop
jmp
jl
ja
and
add
outsb
xor
out
pop
lea
push
ds
add
mov
stc
es
mov
jo
pop
shrl
les
and
jno
push
bound
outsl
shll
inc
mov
arpl
push
add
outsb
jnp
add
xlat
loopne
mov
and
or
push
or
sahf
ret
pusha
add
add
sti
adc
add
mov
andl
repz
push
jmp
xchg
pushf
idiv
stos
pop
or
push
int3
or
stc
xor
loopne
pop
div
sbb
out
mov
call
xchg
cmc
sub
pop
inc
movsl
push
add
add
cmp
add
add
gs
jl
hlt
frstor
jne
jnp
mov
xor
mov
inc
add
daa
sub
scas
xlat
jp
and
xor
add
xchg
insl
cld
stos
rcl
call
jbe
std
orb
roll
pusha
jns
dec
pop
movsb
movl
cmp
int
cmp
mov
arpl
jg
js
push
popf
std
pop
add
add
dec
pop
ret
sahf
or
lcall
jbe
or
sahf
xchg
jmp
add
push
mov
ja
xor
lahf
xchg
jbe
test
fwait
pop
or
jbe
dec
jb
das
dec
popf
rolb
mov
ljmp
pop
jbe
jae
jnp
data16
add
rep
inc
add
add
fcmovnb
xchg
shlb
add
jae
std
mov
imul
ds
pop
xlat
add
je
xchg
std
pop
adc
rep
mov
or
or
out
fldcw
xor
add
adc
rep
mov
lock
imul
inc
outsl
sub
ss
gs
fcmovnbe
ret
sub
jp
add
add
add
xchg
scas
stc
ret
or
push
data16
cmp
xor
xchg
mov
inc
popa
mov
cmp
bound
xor
out
jl
addr16
jnp
lea
shl
daa
test
data16
push
clc
cwtl
dec
dec
pop
rcrb
lock
cmp
add
scas
call
sti
sub
sahf
test
inc
test
hlt
or
pop
out
stc
jg
jmp
jae
cmpsb
sub
mov
test
push
or
cmp
mov
inc
jne
jmp
cmp
hlt
jo
add
add
add
sub
mov
add
lods
push
and
sbb
xor
icebp
add
cmp
scas
pop
inc
xor
dec
mov
push
sub
mov
in
mov
adc
fcmovbe
iret
cli
adc
pop
popa
adc
pop
test
pop
sub
decl
dec
insl
fsubp
push
mov
aas
dec
xchg
dec
rcl
mov
add
cld
test
cld
or
sbb
inc
test
lea
dec
xchg
insb
sbb
or
leave
inc
std
inc
lret
dec
jp,pn
enter
sti
or
loopne
cmp
shlb
outsb
dec
cmp
xchg
adc
imul
jo
or
cmc
mov
or
sbb
add
add
nop
in
dec
add
repz
cmp
lea
lea
adc
pop
mov
popa
xchg
in
mov
add
and
push
ret
mov
aaa
mov
mov
inc
pop
mov
arpl
out
inc
mov
pop
cmp
add
out
xchg
hlt
add
pop
mov
add
hlt
call
sbb
out
repz
mov
call
push
push
push
out
add
data16
and
push
inc
lret
pop
or
pop
xchg
aam
inc
sub
movsl
dec
and
decl
jb
cli
mov
mov
add
jl
cmp
adc
std
lock
push
stc
jmp
test
mov
in
popa
lock
add
lea
testb
scas
inc
sbb
cmp
je
repz
add
clc
pop
xor
pop
lahf
cmp
mov
jo
std
insl
js
add
cmc
addb
jnp
in
add
mov
add
sarb
mov
xor
jo
add
mov
testb
jns
add
add
loop
je
sbb
icebp
cmp
cmc
add
shrb
lods
sub
jae
adc
leave
adc
test
add
jg
add
push
xchg
rorb
js
aas
mov
sub
xchg
lret
or
or
mov
scas
xchg
sbb
cmp
add
adc
jle
add
out
fnstenv
push
cwtl
pop
test
xchg
insb
add
in
incb
push
adcb
or
fucomi
add
inc
popa
cmp
xchg
repz
enter
jbe
mov
mov
out
ret
mov
fs
fdiv
sub
push
fbstp
and
insb
sub
dec
stc
out
jecxz
in
sub
add
or
movsl
pop
mov
push
push
mov
add
jle
push
xlat
xchg
jbe
xlat
xchg
int
pop
js
fadd
lret
leave
out
repnz
movsb
mov
pop
mov
mov
or
mov
push
mov
sbb
add
adc
test
mov
ljmp
iret
push
or
add
add
jmp
bound
pop
push
pop
mov
pusha
test
jge
test
sarb
cwtl
mov
mov
inc
jae
push
nop
repz
stc
imul
orb
out
scas
or
sbb
mov
pop
rorb
push
out
scas
or
stc
jo
add
xor
rolb
add
mov
xor
add
subl
sub
in
sub
mov
sub
xor
imul
cmc
popa
jp
pop
inc
mov
mov
inc
pop
mov
lcall
in
add
add
insb
imul
mov
idiv
inc
jne
punpckhwd
test
xchg
mov
add
add
add
pop
notb
imul
mov
xchg
or
adc
pop
xchg
fisttps
ret
or
mov
out
sbb
fdivr
mov
xchg
mov
or
or
rcrl
shl
aas
mov
adc
mov
mov
or
fs
add
or
dec
push
mov
add
mov
popf
adc
mov
cmp
repz
mov
and
add
lock
popf
lock
jge
fisttps
pop
jmp
add
repz
andb
pop
ret
dec
outsl
pop
inc
pop
testb
push
mov
add
add
xchg
jo
test
or
add
or
repz
ds
out
ds
inc
leave
ljmp
int
out
push
mov
push
add
xchg
inc
sub
out
add
cld
out
std
stos
add
std
ret
add
push
xchg
or
mov
xor
icebp
addb
add
add
xchg
insb
push
roll
cmp
repnz
mov
xchg
xor
loope
inc
or
repnz
out
stos
or
repnz
out
sbb
sbb
ds
cmp
repnz
fnstcw
in
pop
roll
lcall
test
add
int3
or
insl
mov
or
add
and
inc
movsl
call
out
inc
icebp
sarl
adc
jle
inc
jne
jl
xchg
mov
adc
jle
inc
gs
inc
gs
psubw
dec
pop
mov
addr16
lock
or
in
or
add
dec
mov
mov
mov
insb
inc
in
pop
cld
xchg
mov
adc
jg
pusha
add
add
aam
imul
add
fidivrl
mov
insl
movq
aas
mov
mov
int
cmc
cs
iret
xchg
insb
int3
dec
mov
xor
pusha
int3
dec
xchg
fildl
dec
ss
mov
test
popa
pop
outsl
xor
aas
mov
cmp
jo
pushf
push
and
mov
dec
jbe
cs
add
dec
dec
xchg
xor
pusha
dec
repz
dec
pop
push
fstl
xlat
push
inc
out
push
pop
adc
jge
sub
in
js
lret
adc
sub
and
js
cmpsl
add
mov
and
js
shlb
adc
add
insb
pop
push
dec
dec
mull
push
xor
fwait
add
add
fs
js
into
daa
add
mov
inc
xor
pop
add
lods
and
les
shlb
add
mov
sbbl
jno
sub
sbb
xchg
in
pop
add
mov
cmp
jmp
add
in
mov
pop
sbb
adc
pop
test
add
add
mov
arpl
jb
cwtl
mov
or
nop
outsb
push
ror
push
sbb
mov
push
xchg
cmc
rcr
jnp
mov
test
push
js
adc
dec
in
or
lock
adc
ljmp
mov
and
rorb
and
adc
add
cmp
cs
roll
insb
inc
movsl
imul
sub
ja
inc
jne
jl
ss
shr
imul
bound
shlb
add
cmp
xchg
mov
cwtl
shrl
cmp
jp
inc
xor
fwait
mov
push
pop
pop
push
fcompl
incl
negl
add
out
and
pop
pop
push
imul
mov
mov
xchg
aas
out
pop
jmp
call
das
popa
push
les
jmp
incl
xchg
frstor
jns
jecxz
repz
js
shlb
out
jmp
mov
and
lahf
pop
jo
mov
add
out
pop
icebp
pushf
hlt
pop
add
push
hlt
inc
push
cmpb
idiv
fwait
or
adc
pop
pop
out
pop
fwait
in
outsl
inc
les
add
mov
sub
adc
add
orb
xchg
and
jg
arpl
pop
xchg
adc
add
js
mov
repz
and
jg
dec
sub
adc
add
js
mov
repz
stos
ret
rcrb
pop
and
outsb
add
add
add
arpl
repz
fwait
add
dec
push
cs
sbb
push
fists
add
cmpb
mov
aas
adc
test
in
sub
jb
inc
mov
jb
movsb
inc
jmp
hlt
dec
mov
fnstenv
or
pushf
push
test
add
bound
in
mov
or
repnz
xor
loope
inc
test
push
cmp
rol
repnz
test
cli
sub
lahf
or
inc
loope
ljmp
inc
and
faddl
xor
sarl
aad
and
xchg
add
add
dec
sarb
mov
add
jg
inc
mov
fimull
push
sub
iret
inc
cld
cs
lods
into
inc
add
jb
rorl
clc
std
xor
aas
add
scas
add
mov
inc
add
mov
xchg
aad
shlb
inc
test
inc
shlb
inc
xchg
aad
shlb
inc
mov
mov
pop
popf
ds
add
pop
adc
add
in
ds
aam
add
out
test
test
or
add
pop
xor
xchg
pop
std
sbbb
jne
xchg
dec
pop
xchg
ja
fcmovne
add
mov
orb
pop
sbb
mov
mov
cld
out
xchg
add
add
dec
push
out
cli
pop
add
loope
mov
clc
ljmp
cld
mov
cmp
sti
out
xchg
mov
mov
std
add
dec
std
mov
out
sub
push
roll
mov
xor
cld
xchg
sub
xlat
lods
xchg
xor
xchg
add
add
mov
add
out
clc
add
repnz
sarl
in
notl
pusha
push
push
xchg
jnp
mov
js
mov
pop
or
jns
test
add
addb
shlb
mov
dec
cs
mov
nop
js
jns
pop
sbb
aam
mov
aam
icebp
clc
sbb
mov
mov
add
fldcw
test
cld
xchg
lock
subl
dec
dec
xchg
loop
popf
int
cmp
out
xor
jge
cmp
sub
sahf
cmc
xor
sti
mov
call
inc
push
sbb
scas
jecxz
mov
dec
in
popf
lods
lcall
push
pusha
sub
jg
inc
in
pop
in
add
add
push
jg
inc
in
pop
cld
jbe
add
dec
dec
mov
int3
jl
fs
and
xor
add
adcb
pop
in
mov
pop
pop
mov
pushf
std
xchg
dec
adc
scas
in
cmp
add
aas
mov
stos
out
roll
shll
jbe
cmp
lret
and
or
add
add
stc
shll
out
int
in
rcr
pop
dec
pop
js
scas
xchg
adc
add
aas
mov
dec
xchg
ds
test
pop
js
mov
in
cmp
les
sub
pop
call
enter
ret
repz
scas
jae
and
mov
aas
mov
repz
sub
add
jb
jo
pop
jns
push
dec
pop
fbld
inc
jns
mov
cmpsl
daa
add
sub
pop
or
pop
dec
pop
call
push
outsb
pop
test
call
mov
mov
repz
xchg
add
jmp
and
adc
dec
inc
out
push
dec
adc
xchg
mov
push
js
jg
jae
outsb
mov
xor
inc
mov
cmp
jmp
add
lret
cmp
jmp
inc
dec
stc
lods
lret
jnp
add
or
cli
out
jne
loope
cmp
shrb
enter
js
jnp
mov
or
jb
dec
sub
sub
push
sbb
rorb
sbb
in
sarb
iret
dec
xchg
add
push
test
cmp
push
add
out
sub
js
inc
mov
pop
cld
lods
adc
xchg
fidivl
pop
popf
adc
xor
testl
mov
scas
adcb
jecxz
xchg
incl
inc
and
shlb
pop
fnsave
pushf
mov
enter
add
add
mov
stc
mov
mov
or
mov
psrlw
mov
pushf
hlt
addr16
shlb
mov
out
scas
mov
adc
movsb
lods
aas
mov
mov
movsl
ret
test
or
scas
mov
pop
ds
std
sub
cli
les
add
fldl
ds
std
xor
loop
test
pop
ficoms
fs
scas
mov
mov
mov
aas
mov
jl
mov
rep
and
xchg
adc
sub
ljmp
mov
es
cmpsb
lahf
xor
sti
stos
sub
xchg
sbb
sti
add
add
jae
and
sbb
repz
add
adc
fildll
sub
dec
dec
pop
out
idiv
insb
jg
imul
das
dec
pop
xlat
and
jno
fstpt
out
adc
jl
push
int3
pop
fbld
aam
cmp
mov
add
jle
test
xor
icebp
outsb
sub
xchg
aaa
orb
sbb
sbb
loopne
movsb
add
add
daa
lahf
call
sbb
or
sub
loopne
pop
out
dec
test
scas
dec
or
or
fucom
jle
mov
jb
pop
sbb
xchg
cli
pop
add
jle
sbb
dec
dec
test
inc
repz
stc
xor
icebp
ja
std
lcall
icebp
mov
add
jmp
dec
orl
pop
shr
lret
aas
pop
cs
mov
inc
or
cmpsl
add
lods
int3
rol
pop
addl
dec
addl
inc
shr
lret
dec
or
lods
adc
inc
lret
dec
scas
cmp
or
in
sub
add
xchg
add
pop
cmp
aaa
push
cmp
mov
fbld
mov
movb
decl
ror
inc
jae
ret
leave
pop
test
icebp
jno
xor
dec
add
es
mov
or
mov
jmp
add
and
mov
pop
push
mov
je
es
arpl
mov
pop
add
add
roll
les
mov
pop
xlat
xchg
aas
pop
mov
ja
or
pop
mov
pop
jle
xlat
cld
jg
fisubs
xchg
repnz
cmp
sti
or
inc
inc
jg
mov
mov
adc
xchg
je
ret
mov
xor
xchg
jbe
push
add
add
test
pop
inc
inc
adc
xchg
in
jecxz
cmp
inc
inc
bnd
sti
xlat
js
sti
inc
xchg
or
inc
jae
in
jmp
push
dec
loope
out
adc
push
pop
jnp
mov
ss
scas
stc
jmp
repz
outsb
shr
push
add
pop
jnp
clc
test
add
mov
add
loopne
in
xor
enter
test
rorb
sahf
outsb
mov
repz
add
out
push
push
outsl
test
aas
dec
jae
into
fildll
cld
dec
inc
xchg
add
or
inc
stc
jmp
dec
mov
fdivs
lock
cmpsb
sub
jne
mov
or
add
movsl
out
jns
hlt
mov
and
in
stc
mov
jge
add
mov
subl
add
add
sti
push
and
dec
push
cmc
xchg
insl
jb
out
mov
je
add
lcall
les
stc
mov
decl
mov
dec
pushl
icebp
add
fildl
clc
mov
add
mov
out
xchg
cli
dec
adc
mov
mov
cs
mov
adc
pop
aad
cmp
add
je
xlat
or
sbb
decl
movsl
ds
cli
cltd
or
inc
mov
aam
mov
test
std
decl
aaa
xor
adc
xor
jnp
test
add
lahf
adc
cli
pop
mov
push
dec
cmpsl
mov
cli
cmp
inc
repz
aas
movsb
dec
adc
inc
out
sbb
inc
movsb
dec
sbb
inc
js
adc
dec
out
mov
jo
outsb
insb
fs
incb
mov
pop
xchg
inc
out
cmovno
aad
lret
jbe
adc
xor
add
out
sub
test
add
pop
sahf
inc
cmp
fcmovnu
pop
or
push
cmp
outsb
fs
jp
adc
sbb
fistl
int3
repz
fildll
cmc
out
xorl
jmp
filds
cli
xchg
jo
stc
pop
out
fisttpl
ss
aas
adc
je
aas
stc
cmpsb
pop
addb
stos
cmp
stc
insb
add
add
add
sarb
out
je
icebp
jns
push
arpl
repz
mov
or
cmp
mov
inc
es
outsl
inc
and
jae
stos
and
stc
add
jmp
push
and
mov
dec
xor
loope
xchg
add
adc
add
add
dec
out
cmc
jne
inc
out
clc
fists
inc
in
mov
or
insb
jmp
add
add
inc
cld
cmc
mov
fsubr
bound
jnp
lcall
push
jne
and
divb
mov
mov
rcll
shl
lahf
cmp
add
push
std
incl
sub
int3
dec
mov
ja
mov
btrl
sbb
rolb
sahf
or
xchg
in
fidivrl
loopne
xor
inc
std
out
cli
cmp
or
xorl
xor
aam
imul
cmp
rol
dec
mov
cmp
mov
mov
inc
pushf
icebp
roll
dec
les
add
jnp
cld
out
mov
xchg
enter
call
outsb
inc
mov
xor
repz
mov
jb
sbb
jo
cmp
add
push
or
daa
add
ds
xorl
mov
pop
stos
fwait
leave
mov
ret
jmp
cmpsl
mov
add
xor
hlt
or
mov
add
add
mov
add
test
insb
mov
dec
rcr
cmp
mov
lahf
mov
insb
iret
rorb
testl
xchg
lea
aam
out
inc
jmp
int
add
dec
dec
cmp
jbe
sbb
add
push
cli
mov
dec
push
test
and
cld
add
add
adc
sbb
jbe
lea
cmp
sbb
cld
mov
xchg
cmp
insb
dec
shlb
lahf
cmp
add
inc
add
divl
ret
inc
dec
push
mov
das
dec
incl
adc
gs
cmp
cmp
pop
xor
mul
or
out
xor
and
add
div
dec
call
push
add
scas
mov
in
movsb
es
lea
divb
into
clc
adc
in
stc
test
out
add
inc
sub
jne
mov
and
cmc
jne
stc
iret
test
stc
or
push
andb
fcmovu
ss
pop
adc
mov
add
jge
je
subb
sarb
cli
mov
adc
add
dec
fwait
in
or
mov
dec
adc
cmp
sbb
inc
lea
call
popf
std
out
pop
std
das
mov
or
add
jg
cli
ret
loope
je
leave
or
inc
insl
es
ss
add
data16
xchg
repz
pop
stc
mov
cmp
outsl
daa
mov
lret
out
stos
repz
js
cmc
ret
pop
outsl
daa
mov
push
cli
cmp
daa
scas
popl
cmp
jmp
cmp
daa
jbe
fstpt
shlb
pop
test
fiadds
je
xor
xchg
mov
pop
mov
add
cmp
add
push
stc
fcoml
repz
mov
fistps
dec
cmp
lahf
mov
inc
adc
mov
into
push
xchg
push
adc
and
mov
test
stc
jl
cmp
in
push
jns
mov
in
add
dec
push
sbb
inc
cmc
add
add
lahf
cmp
loope
jmp
call
push
in
in
mov
icebp
push
add
add
aad
mov
sbb
xor
jne
or
call
add
jne
insl
jmp
out
stc
push
pop
mov
add
or
or
push
push
xor
add
inc
jecxz
adc
xrelease
cmp
stc
pushl
loope
add
xor
out
push
lcall
mov
movsl
out
cmc
jne
insl
icebp
ljmp
addr16
in
out
cld
push
test
or
ret
mov
xor
shl
rcr
rep
clc
cmpb
xor
popa
adc
nop
xchg
dec
add
add
jae
enter
xchg
mov
lods
test
dec
mov
rcr
mov
shl
pop
sub
xchg
or
decl
dec
std
add
xor
or
or
test
clc
or
jns
xchg
hlt
cmc
ret
jecxz
mov
pusha
pop
xchg
dec
xchg
cwtl
addl
aas
repz
mov
jnp
add
add
mov
mov
aam
out
mov
xchg
rep
mov
sbb
cmpsl
add
xor
mov
cmpsb
adc
jecxz
add
dec
push
push
inc
ss
jecxz
test
daa
shr
mov
loopne
adc
inc
jg
pop
xor
iret
xor
add
dec
mov
test
dec
jo
repz
push
or
jg
cmp
loop
stc
aam
loop
jmp
pusha
cmp
out
insl
test
repz
stc
cmpsl
call
cmc
cmp
mov
stc
push
pop
dec
or
repz
jmp
mov
fs
sub
jbe
jmp
add
push
adcw
push
test
out
call
test
lock
cli
pop
mov
movsl
add
mov
mov
divb
jae
or
and
sub
fistpll
mov
lock
add
fsubrs
std
add
add
cmp
stc
lcall
xlat
out
iret
cmp
jle
push
icebp
test
imul
mov
aas
mov
add
cs
in
dec
cli
jmp
lret
pop
setb
jns
loop
add
cs
pop
loop
outsb
dec
dec
cs
sbb
add
lret
dec
add
add
dec
insl
adc
cs
lea
inc
sub
xchg
cmc
pop
adc
mov
shll
cli
dec
insl
jl
add
enter
std
jmp
xor
sub
cmpsl
sbb
adc
rcl
repz
and
cmp
clc
out
pop
out
in
test
push
cmpsb
daa
add
lret
jbe,pt
add
add
and
sub
dec
mov
cmc
popf
popf
jecxz
or
ret
xor
cmpsb
add
xor
negl
sti
data16
popf
out
mov
xor
pop
sbb
test
out
sub
enter
loop
mov
or
inc
jns
cmp
mov
aad
ret
add
add
shrb
jae
push
mov
in
repz
mov
jae
dec
out
hlt
iret
xor
mov
jnp
insl
loop
scas
clc
in
loop
stc
aam
sub
mov
push
adc
xor
mov
xchg
add
push
je
sub
push
andl
cld
add
add
jmp
incb
je
jb
cld
push
jb
hlt
les
add
xor
mov
add
push
pop
dec
out
mov
in
xchg
jne
jne
add
js
add
sub
inc
and
hlt
addb
xor
je
add
scas
sbb
cmp
mov
clc
cli
mov
stc
xor
push
mov
push
in
std
dec
movsb
orb
xor
pop
and
adc
sbb
push
adc
std
inc
dec
mov
add
cli
adc
sbb
add
push
cmp
add
in
mov
adc
inc
xchg
add
add
xchg
cli
mov
cs
dec
sbb
add
scas
loope
dec
adc
add
je
in
mov
inc
jns
std
test
jmp
faddl
testb
rcrl
enter
add
out
shll
pop
mov
jnp
out
lret
repz
popa
negl
add
add
xorb
int
lret
mov
les
rcrl
outsb
dec
jp
das
add
shl
call
mov
jl
sub
mov
add
add
add
xlat
sub
popl
fisttpl
cmp
mov
add
repz
shll
outsl
sub
in
test
add
jg
in
sub
mov
cmp
mov
or
mov
js
xor
cmpsl
sbb
sub
xor
adc
push
mov
test
dec
cli
add
stc
subl
cmpsb
add
mov
call
cltd
mov
mov
sbb
flds
push
mov
cmc
lock
dec
repz
push
add
fs
pushl
test
lods
adc
lock
mov
stc
jmp
icebp
call
mov
bound
adc
push
dec
jmp
add
pushl
fisttps
movsl
add
add
arpl
jmp
add
xor
icebp
je
add
sahf
inc
mov
mov
cli
add
and
adc
dec
mov
pop
pop
push
and
pop
lea
xchg
push
ljmp
lea
adc
inc
mov
add
cmpsl
sub
cli
arpl
mov
pop
cmp
clc
out
sub
and
jl
jle
xchg
add
mov
sbb
jb
xchg
mov
movsb
mov
call
outsl
sbb
negb
scas
jl
sub
icebp
mov
ds
ficoml
pop
add
call
add
repz
test
repz
sbb
out
or
loope
jle
outsb
rorl
add
xor
adc
xchg
repz
xchg
add
repz
movl
addr16
add
daa
call
and
repz
sub
mov
ret
movsb
mov
or
sub
jmp
cmp
jge
mov
stc
mov
movsl
lahf
loopne
add
sub
aad
add
add
data16
add
cmpsb
add
rolb
fabs
sub
loope
mov
jno
movsb
lahf
in
mov
mov
popf
cmpsb
sub
int3
in
push
enter
les
ret
call
add
and
jne
cmpsb
xor
push
mov
shl
adc
out
imul
add
mov
push
or
jns
mov
imul
inc
mov
fcomi
clc
fiaddl
add
outsl
ljmp
mov
add
daa
sub
push
pop
or
pushl
and
fcomi
add
adc
xchg
and
cmp
pushf
aaa
and
add
add
add
dec
sbb
mov
and
cli
sbb
dec
adc
mov
cli
pop
loope
test
cmp
into
stos
adc
and
mov
es
sub
and
shlb
out
or
cli
pop
xor
cli
jns
and
sub
enter
jmp
ss
add
add
push
rol
repz
rol
push
daa
mov
pop
or
xchg
ds
aas
lods
push
repz
mov
jge
inc
adc
inc
jl
adc
imul
adc
aaa
ds
test
pusha
mov
daa
push
int
js
aas
adc
sbb
std
sub
es
xchg
es
outsb
xor
sti
and
add
add
adc
inc
leave
aam
data16
sarl
mov
hlt
ret
jmp
dec
add
sarl
mov
outsl
shlb
add
mov
mov
push
mov
call
jb
outsl
aad
xchg
dec
add
je
nop
sub
push
repz
hlt
gs
cmp
push
xor
mov
push
bound
add
pop
sub
int
jl
push
sbb
shrl
je
jmp
jg
sub
in
mov
push
mov
call
bound
aad
mov
push
sbb
sbb
mov
clc
mov
std
mov
or
push
or
and
add
xor
inc
add
add
xor
dec
call
divb
ror
test
and
icebp
jp
dec
addb
mov
call
scas
mov
bound
add
sub
je
sbb
std
mov
aad
push
fstpl
decl
dec
mov
call
adc
enter
mov
inc
add
add
cmp
mov
xchg
mov
pop
or
push
add
divb
push
andb
mov
adc
mov
and
outsl
psrld
mov
iret
pop
dec
cli
pop
das
dec
mov
mov
out
aaa
push
cli
mov
mov
setae
xor
ja
mov
sub
add
out
out
data16
out
in
mov
pop
jo
push
mov
dec
jo
or
pushf
dec
ret
mov
repz
or
scas
mov
mov
int3
add
and
fildll
add
mov
and
lahf
bound
jmp
adc
dec
cmpsl
dec
and
mov
scas
pop
or
clc
insb
add
sub
cmp
and
add
lea
mov
add
add
add
scas
sbb
rcl
xor
pop
bound
sub
enter
mov
or
and
jmp
adc
add
fcompl
jge
in
repz
daa
aam
test
dec
lret
mov
popa
or
and
jmp
add
add
inc
testb
xchg
repz
repz
insl
imul
vpcomq
add
testl
jbe
not
mov
inc
mov
iret
xchg
rcl
dec
push
shrb
int
mov
sbb
cs
shrl
mov
mov
insb
push
xor
cmp
es
add
movsl
ds
adc
jp
push
bnd
call
out
sub
dec
jno
rolb
adc
cmp
testl
mov
add
push
adc
sbb
dec
xchg
xor
dec
and
inc
movsb
xchg
ret
dec
and
add
mov
addr16
mov
cmp
sub
rcrb
cli
cmp
shl
pop
sbb
fwait
and
cs
test
mov
ret
jae
sbb
xchg
lcall
mov
leave
out
rcrb
cli
adc
repz
int3
shl
lahf
shll
insb
ja
or
mov
add
repnz
push
jb
add
out
xchg
insl
cmp
out
fcmovnu
aas
call
rcl
addl
rcr
pushf
cmpsb
mov
fnsave
cmc
inc
cltd
insb
pop
clc
push
hlt
mov
mov
push
push
xor
fst
pop
mov
jecxz
jo
jae
mov
repnz
add
pop
push
loop
outsb
jno
push
ret
or
pop
enter
ljmp
aas
jbe
xor
enter
mov
or
adc
inc
insb
dec
cmpsl
cmp
mov
popa
jmp
pop
fwait
stc
push
jmp
loopne
mov
mov
sbb
stc
test
mull
jle
push
stc
fs
jb
loope
add
mov
jno
mov
aaa
sbb
cmc
jge
js
dec
add
xor
ret
and
or
adcb
ds
mov
repnz
movnti
scas
jno
mov
add
adc
repnz
mov
icebp
add
inc
leave
repnz
inc
std
push
rcl
xchg
add
push
aaa
push
add
mov
imul
imul
sbb
aaa
std
cmp
test
mov
imul
push
mov
or
pop
pop
dec
or
mov
push
orb
mov
mov
in
call
incb
test
std
out
or
mov
clc
repz
add
mov
mov
mov
add
add
je
xchg
cmp
cli
pop
decb
aaa
and
adc
inc
sub
lds
or
lds
dec
sub
pop
int
es
or
repz
adc
sbb
outsb
ret
jae
mov
or
imull
add
add
ja
mov
fistpll
outsb
push
xchg
gs
add
lret
bnd
sbb
out
pop
lret
jg
cltd
xchg
jbe
jo
lahf
or
mov
sbb
je
mov
xchg
lea
fcoms
pop
sarl
lret
mov
ljmp
aaa
mov
mov
stc
test
add
adc
pop
mov
dec
push
repz
out
ss
sti
push
jbe
dec
flds
mov
je
repz
mov
mov
nop
xor
in
xor
lahf
add
xchg
sbb
in
shlb
inc
sbb
test
out
and
push
mov
xor
or
add
jb
add
out
add
out
test
imul
pop
fsubr
jp
stos
adc
ret
dec
cmp
lods
mov
and
testb
incl
inc
dec
repnz
call
fisubrs
or
std
sub
add
inc
loope
add
cmc
int
std
ret
inc
mov
cmp
add
jbe
add
cmpsb
idiv
loop
mov
nopl
mov
adc
xorb
jb
add
shl
aas
add
es
ds
xor
cmp
xchg
int3
aas
xchg
jno
outsb
enter
or
or
mov
mov
xchg
xor
add
dec
inc
nop
jge
push
repz
repnz
mov
fimull
shl
je
mov
push
mov
int3
shlb
dec
jae
lea
pause
xchg
movsb
je
add
sbb
jge
or
inc
cli
sub
or
cmc
or
aam
adc
sbb
or
jns
add
mov
lret
pusha
int3
ja
outsb
int3
imul
mov
std
or
call
cld
adc
pusha
scas
jmp
stos
pop
or
pusha
lret
lahf
push
in
into
mov
add
cli
imul
fsub
dec
icebp
out
cmp
sbb
pop
mov
fcmove
pop
add
push
fwait
and
pop
push
bound
add
sub
or
jnp
call
out
hlt
push
bound
rcll
push
int
stc
ds
jb
mov
and
pop
sub
and
enter
lea
pop
push
sbb
test
insl
jecxz
or
iret
add
cmp
add
jmp
pop
cli
add
addl
sti
icebp
insl
jecxz
insb
repnz
call
xor
pop
loope
or
negl
mov
mov
dec
sub
out
aad
imul
add
cmp
push
je
int
idiv
ficompl
out
add
cmp
push
adc
jb
jp
jp
roll
jmp
imul
stos
idiv
mov
mov
dec
in
jb
cld
lea
incl
add
outsb
add
pop
dec
xor
cli
ret
sub
out
push
adc
or
mov
iret
mov
pop
dec
clc
cli
fwait
pop
and
xchg
and
stc
jae
xchg
pop
ror
incl
dec
loope
dec
aaa
aad
inc
jmp
adc
sbb
push
ret
sahf
stc
xor
cmpb
mov
ret
mov
add
pop
int
dec
int3
and
xchg
mov
ds
adc
jg
repz
lea
add
mov
iret
test
shrb
mov
mov
pop
sahf
out
popf
mov
out
xlat
mov
pop
sbb
xor
or
or
push
jo
add
add
mov
dec
iret
iret
adc
repz
iret
iret
incl
repz
mov
iret
mov
jl
iret
cmpl
jl
iret
xlat
jl
iret
add
repz
repnz
push
pusha
and
repz
cwtl
mov
sub
repz
stos
xchg
add
and
jmp
add
int
and
clc
mov
mov
icebp
outsb
jle
fsubs
lahf
xchg
push
enter
mov
out
movsl
sub
xor
jmp
repz
sub
jmp
test
leave
mov
jmp
testb
cmc
inc
mov
add
in
push
mov
mov
add
add
fdivl
add
xor
inc
sbb
cmp
sbb
sbb
xor
adc
addb
inc
dec
push
arpl
push
aas
xlat
movntq
add
xor
sbb
add
testb
lea
and
push
mov
cmp
jbe
add
mov
add
dec
adc
shll
jae
and
adc
add
add
decl
mov
cwtl
mov
add
and
cmp
add
jmp
sbb
add
push
std
incl
sbb
cs
cmc
add
or
std
mov
loopne
push
cmpsb
adc
rcrl
add
dec
loope
mov
shl
int3
xchg
repz
xlat
or
adc
inc
xlat
mov
add
hlt
and
xlat
push
cmp
xchg
push
nop
outsl
jmp
jle
xchg
hlt
or
and
jae
pop
adc
ja
add
repz
jae
add
insb
cwtl
add
add
adc
sbb
insb
jg
adc
jp
xlat
repz
fidivrs
call
or
and
repz
repz
ficompl
aam
add
loopne
es
test
repz
repz
ds
repz
sub
ja
stc
mov
and
stos
je
mov
add
xchg
or
mov
push
shrl
orl
or
notl
repz
ja
cld
pop
lcall
xchg
stc
add
ss
add
adc
test
pop
push
sub
or
mov
pop
pop
mov
pop
test
add
xor
bound
add
lea
sbb
add
add
mov
or
in
mov
add
mov
orl
dec
mov
dec
sub
decl
lock
loopne
outsb
or
mov
mov
std
out
orl
out
pminub
pop
dec
into
jmp
add
add
cwtl
bnd
clc
nop
xchg
psubq
xchg
add
enter
add
add
sub
lret
and
xor
xchg
dec
cmpb
xchg
mov
mov
push
cmp
push
mov
into
bound
js
xchg
jmp
pop
lcall
add
add
js
or
js
adc
ljmp
sbb
inc
sti
adc
movsl
addb
add
pushf
adc
incl
or
cmp
sbb
pop
or
js
xchg
idivl
stos
adc
mov
mov
ret
and
add
jmp
inc
lods
test
xchg
or
movl
fs
push
cs
or
call
sbb
dec
bound
loop
cmp
in
sub
mov
incb
mov
stc
jge
mov
int
adc
incl
je
add
jmp
add
add
add
popf
xorb
incb
jmp
push
add
call
pushf
jno
ret
std
adc
sbb
fsubl
mov
sbbl
mov
sbb
jne
adc
hlt
ret
jne
xchg
xchg
idiv
bound
in
cmp
push
pop
jl
push
xchg
movsl
pop
enter
add
testb
pushf
jp
andl
sbb
xor
xor
push
fildll
shlb
jmp
mov
adc
inc
jp
xor
xor
sarb
popa
push
push
mov
or
arpl
enter
push
push
dec
aam
loop
jb
cmp
add
push
test
lret
lea
stc
or
pop
adc
add
jae
popf
cmp
testl
or
or
push
mov
pop
mov
jnp
pop
inc
test
vphadduwq
push
fwait
cld
out
pop
or
ja
hlt
popf
sbbl
out
inc
fbld
add
xor
repnz
add
imul
inc
lds
inc
in
mov
inc
sub
mov
aaa
mov
xlat
jl
sti
xor
pop
les
ret
jmp
sbb
imulb
popl
jg
push
mov
and
sbb
popf
out
aas
iret
testl
aas
iret
testl
stos
int
loopne
clc
push
inc
add
add
lcall
call
jge
add
mov
mov
aam
test
bound
and
sub
push
in
push
mov
cmp
test
mov
fistpll
xchg
jno
xchg
into
lahf
test
and
shl
inc
fcomp
mov
loope
movsl
push
push
std
out
xchg
jnp
add
add
iret
pop
test
xchg
sbb
repz
cld
out
in
jnp
aas
add
cld
sti
je
lock
adc
jns
call
cld
xor
jmp
jb
pop
cmp
jbe
out
outsl
sbb
add
inc
clc
scas
js
cmp
arpl
jmp
notb
scas
xor
sbbl
loope
cmp
mov
add
add
stos
mov
mov
sti
test
adc
jp
lcall
out
in
idiv
outsb
loop
jne
jmp
divb
out
mov
rcl
mov
add
cltd
std
cmp
add
xchg
loop
gs
cli
pop
xchg
cli
popa
mov
je
loop
gs
jmp
cmp
add
add
add
nop
movsl
mov
jle
aas
cs
pop
inc
push
pop
mov
lods
gs
js
fs
mov
int
out
mov
adc
mov
xchg
mov
fcoml
lds
scas
dec
pop
repz
xchg
push
hlt
repz
mov
jle
jle
shl
sbb
mov
push
jns
add
cmpb
hlt
add
add
loop
jg
and
mov
or
mov
or
add
scas
push
js
out
sub
add
out
mov
pop
cmpsb
push
jns
or
sub
add
fistl
add
jnp
clc
sysenter
jnp
adc
jo
mov
xchg
fwait
outsl
aad
mov
xchg
sbb
add
add
outsb
rclb
mov
cmp
repz
cmp
or
jo
mov
sahf
mov
out
daa
or
imul
orb
xor
mov
jb
stos
pop
and
add
out
push
roll
fmull
test
or
stc
popf
mov
rolb
add
add
dec
push
jl
movsl
rcll
cli
lock
call
mov
lcall
or
ljmp
cmp
dec
mov
insb
out
sub
dec
mov
js
andb
push
stos
jp
add
jnp
cmp
in
add
testl
mov
mov
add
add
ror
lret
jl
add
pop
push
lea
ja
ret
add
mov
mov
push
in
stc
roll
cmp
jg
dec
or
jg
cmovne
pop
push
inc
ret
push
sbb
adc
mov
push
pop
add
adc
or
bnd
test
adc
jb
xchg
inc
jo
cwtl
subl
add
dec
pop
add
dec
mov
add
mov
std
lcall
xchg
push
push
sbb
int
int3
or
inc
je
cld
incl
rep
push
in
addl
cmp
inc
mov
cli
inc
cmp
lods
jae
js
add
mov
insb
outsl
movsl
add
pop
pop
js
add
add
dec
ja
add
repz
in
lcall
repnz
outsl
push
add
ja
ss
fildll
sub
call
pop
xchg
test
fisttpl
int3
test
xchg
xchg
sarl
repz
clc
jbe
icebp
jbe
call
movsb
xlat
js
add
add
add
ret
mov
clc
out
pop
mov
stos
je
pop
test
test
add
adc
cld
clc
mov
or
test
mov
inc
push
add
pop
cli
jle
mov
or
iret
repz
out
lods
jb
add
xor
test
lret
leave
mov
add
add
repnz
hlt
mov
imul
ja
idiv
jno
insl
or
jne
add
jecxz
cs
jmp
lcall
cmc
mov
incl
inc
call
es
divb
inc
or
mov
push
xor
jmp
or
jne
mov
call
bound
mov
mov
push
add
add
in
mov
mov
sbb
mov
stc
orb
stc
fistl
cli
je
cmp
rcll
push
add
add
jns
shl
xchg
xchg
mov
imul
mov
push
test
dec
push
push
add
or
data16
iret
clc
push
in
std
incl
add
push
xlat
clc
jmp
std
rcl
in
mov
inc
dec
test
add
add
push
repz
int3
sub
or
jecxz
dec
jo
lcall
xchg
imul
repz
inc
mov
aas
sbb
mov
ret
mov
loopne
mov
pop
mov
xchg
push
xor
pusha
inc
mov
sub
add
add
mov
jbe
repz
mov
hlt
fldenv
add
loop
add
out
push
jno
cld
fcom
mov
scas
jo
add
jle
jne
xor
mov
push
loope
jmp
mov
mov
push
cli
test
pop
ds
jmp
sub
add
cmp
inc
ljmp
lret
idiv
call
ret
jle
int
mov
inc
jmp
sub
push
pop
js
mov
xchg
rorb
add
dec
xor
pop
xchg
xor
xor
wbinvd
pop
xchg
jle
in
or
std
decl
addb
add
shlb
jno
std
orb
add
add
xor
push
add
inc
jne
rol
decl
jne
lea
lea
sbb
inc
in
int3
leave
pop
sbb
pop
mov
xchg
mov
testl
xor
dec
cmp
bound
xor
inc
add
mov
inc
sahf
push
test
sub
in
pop
movsl
sub
mov
add
loopne
xchg
jo
adc
add
mov
mov
add
dec
test
dec
mov
push
push
pop
jne
add
cmp
push
cmp
jns
cmovo
jo
pop
dec
add
stc
add
andb
jg
or
mov
cld
stc
add
add
xchg
cmp
cld
imul
cld
gs
bswap
repz
mov
pop
push
xor
mov
mov
cld
mov
cli
pop
push
adc
sti
data16
repz
psubb
cmpsl
add
xor
in
and
loop
daa
lret
sbb
out
or
callw
lea
add
add
pushf
mov
jle
jle
xor
movsl
outsb
mov
jecxz
add
xor
fldenv
clc
fmull
add
mov
adc
jg
add
aaa
insb
lcall
pop
mov
push
xchg
sti
adc
lahf
mov
fs
adcb
clc
aam
sti
jb
mov
mov
insb
iret
test
ds
add
fucomi
inc
jmp
mov
cmc
or
xrelease
adc
rclb
jbe
stc
mov
mov
xchg
fcmovne
andl
push
mov
adc
lock
je
call
mov
push
call
cmp
cwtl
sti
notb
add
add
cmp
movsb
bound
dec
out
divl
add
test
add
mov
hlt
add
es
in
add
xorl
imul
mov
stc
incb
not
xor
add
int3
add
test
clc
call
add
add
fsubr
xchg
mov
decw
or
pop
mov
in
aad
test
dec
cs
dec
adc
push
pop
mov
in
pushf
cmp
aad
dec
cmc
push
pop
pop
dec
dec
pop
pop
and
decl
xor
pop
rcll
add
pop
dec
adc
inc
mov
mov
cld
add
add
xchg
mov
daa
add
xor
cwtl
ret
cmc
sti
mov
add
mov
pop
dec
xor
xchg
xorb
ss
out
shr
cmc
lahf
push
aad
mov
cmpsl
rorl
subl
sahf
pop
aaa
sbb
cmpsl
add
imul
add
mov
and
ss
scas
lret
adc
add
js
out
push
iret
notl
fbld
adc
add
add
cld
adc
iret
or
into
repz
cmp
cli
shlb
ja
call
and
sbb
push
cmc
stc
sbb
imul
jmp
iret
repz
bound
sti
adc
jge
add
repz
add
add
lcall
jb
lcall
mov
jmp
xchg
inc
jmp
pop
cli
adc
mov
add
jecxz
divl
mov
mov
aam
or
jp
mov
adc
mov
clc
call
and
stc
call
mov
jne
and
jne
and
add
xor
loope
sbb
shll
ljmp
jne
mov
lret
adc
lret
in
leave
jb
les
jns
jb
les
jns
dec
out
add
movsl
mov
and
je
and
cli
stc
pop
push
and
add
push
sbb
dec
fwait
ljmp
fwait
lods
sub
movsb
ja
add
add
lea
pushf
fdivl
mov
ja
test
jbe
mov
test
int3
or
outsl
add
xchg
test
into
subb
das
rcrb
or
push
jo
nop
mov
clc
mov
cmp
push
sahf
pushf
add
pop
and
test
stc
pusha
repz
push
push
cmp
stos
adc
add
pop
or
jae
cwtl
jbe
push
and
ljmp
cmp
or
add
repz
mov
repz
add
repz
repz
pop
mov
ret
sbb
and
mov
push
addr16
cs
jmp
add
repnz
add
mov
fsubr
pop
add
push
fmuls
in
testb
pop
clc
xor
popf
dec
sub
xchg
pop
and
test
psllq
jmp
nop
inc
clc
pop
nop
ljmp
ja
clc
into
add
clc
mov
or
outsb
aad
ljmp
pop
jmp
aaa
shll
jmp
cmp
or
add
out
jmp
pusha
test
cmc
xchg
xor
mov
loopne
dec
add
testb
push
dec
push
mov
push
cmpsb
add
jns
jne
jno
mov
dec
divl
cs
loopne
test
sub
jmp
push
or
scas
cli
call
add
add
fucom
insl
inc
gs
lret
call
mov
je
sti
idiv
and
jb
clc
cwtl
loopne
sub
jmp
xorl
sarb
in
pop
add
lret
pop
cmp
lds
or
popa
gs
push
sarb
test
add
add
sti
stos
lock
test
fmull
add
fwait
loopne
test
dec
push
stc
add
addl
jae
mov
shld
dec
adc
sbb
jl
xchg
jo
adc
add
rcr
add
sub
dec
sub
adc
cltd
fsub
jo
pop
sbb
jle
test
or
cmp
push
cmp
out
push
mov
jp
inc
jae
xchg
jb
out
pusha
and
add
and
inc
xchg
sti
std
sub
addl
repz
jne
fstpt
add
cmp
push
xchg
push
fidivs
out
in
scas
xchg
xor
xchg
js
sti
rolb
jmp
mov
jns
pop
loop
push
out
push
or
in
adc
lahf
xchg
cld
inc
mov
mov
in
mov
in
clc
adc
push
sub
add
add
push
je
jle
je
mov
mov
mov
jne
add
in
xor
dec
fadds
fcmove
inc
mov
aas
in
outsl
in
movsl
sbb
ja
jne
ljmp
aaa
jmp
stos
fidivl
jb
sti
or
fidivl
lods
pusha
jmp
jb
add
lret
add
jmp
insl
dec
push
testb
loopne
call
test
mov
ret
jbe
cli
leave
mov
jle
fs
or
in
push
lea
cld
jmp
and
push
int
insl
inc
mov
inc
pop
mov
push
mov
jne
je
insl
test
mov
into
sbb
movsl
je
je
inc
mov
add
add
jbe
add
fidivs
add
lea
scas
cli
call
mov
addr16
cmp
lods
and
repnz
sbb
ja
push
shrb
sbb
loopne
fnstcw
cmpsl
loopne
cmp
sbb
mov
jae
mov
data16
ljmp
add
enter
and
stc
mov
push
dec
stc
sbb
jmp
enter
or
in
add
lds
enter
fsubr
jae
dec
inc
clc
push
and
dec
dec
hlt
hlt
jae
xor
jle
scas
arpl
cwtl
jbe
and
pop
jmp
mov
hlt
sti
xchg
add
push
fiadds
inc
inc
inc
add
add
enter
fmuls
mov
subl
bound
repz
inc
mov
aad
xchg
xor
cmpsb
clc
push
stos
add
xlat
jg
repz
mov
test
add
ljmp
push
and
push
in
sub
mov
jmp
stos
xor
xchg
arpl
test
add
add
mov
in
cs
insl
sub
mov
inc
jmp
insl
sub
scas
mov
mov
adc
rep
or
mov
dec
rep
add
insl
lcall
jmp
xchg
arpl
test
dec
repz
sti
add
sbb
push
inc
jmp
iret
repz
jo
bound
add
movsl
clc
pop
fmull
shrb
add
fidivl
xchg
cs
xor
xor
insb
cs
inc
mov
push
xor
adc
push
jge
ljmp
mov
cmp
addr16
test
hlt
add
and
add
add
bound
add
xchg
add
add
add
jb
add
hlt
idiv
rcll
mov
inc
add
lcall
adc
decl
jbe
cwtl
pop
aaa
adc
hlt
clc
xchg
scas
jne
je
jmp
mov
add
pop
jb
cmpsb
add
jae
jno
mov
cs
add
hlt
xchg
push
add
add
mov
pop
xor
jmp
add
adc
dec
ficompl
cltd
add
pusha
hlt
stc
inc
mov
add
inc
testb
adc
sub
scas
out
jl
jo
outsl
nop
jp
fimull
out
jp
inc
loop
jmp
xlat
je
sbb
out
add
mov
scas
mov
out
out
repz
ret
xchg
js
add
divb
mov
repz
push
hlt
jmp
jp
notl
adc
out
testb
insl
jae
dec
icebp
add
mov
call
insl
clc
push
jmp
jmp
xor
ret
outsb
xchg
add
add
mov
in
bound
test
call
movsl
jle
dec
add
outsl
incl
addr16
or
cmc
dec
repz
pop
pop
in
dec
repz
lock
sub
adc
clc
imul
rep
out
pop
fcomi
inc
test
lret
dec
sar
pop
out
and
pop
lods
mov
add
add
inc
jmp
mov
loopne
and
add
xor
inc
or
cmp
adc
push
lea
inc
jmp
test
in
pop
adc
lock
mov
ss
jne
imul
sahf
enter
iret
addb
mov
pop
insb
lret
mov
add
insl
ds
add
pop
lock
divps
cli
loopne
clc
aas
add
das
dec
mov
xor
iret
fisubl
out
in
out
stos
fiaddl
loope
pop
sbb
pop
fldcw
fidivrs
add
in
sbb
cwtl
push
iret
fidivrl
pushf
push
mov
test
in
pop
dec
in
add
add
pushf
in
adc
dec
daa
in
push
rclb
add
lock
inc
fdivrl
test
cmp
insb
fimuls
lods
dec
ljmp
repz
ret
fcomip
into
sbb
mov
fwait
repz
mov
in
cmp
jecxz
xor
ss
add
loop
or
add
push
xor
adc
add
ljmp
pop
loop
pop
sbb
add
ds
test
aaa
push
jo
add
pop
pop
or
mov
and
fs
addr16
add
div
out
jmp
ret
jns
insl
dec
sbb
add
testl
pop
jp
sub
add
mov
shrl
js
sbb
xor
mov
jp
lea
push
cmc
pop
and
shlb
bound
add
rolb
inc
clc
aam
outsb
outsb
push
lock
add
js
add
clc
jne
mov
incl
push
repz
movsb
dec
bound
mov
jl
mov
dec
test
add
gs
addb
add
sahf
inc
enter
cli
data16
inc
add
idivb
inc
cmp
xor
orb
flds
mov
or
orb
call
sahf
les
adc
mov
shll
mov
cmpsb
push
jle
divl
mov
push
lds
add
gs
cld
add
add
pop
mov
data16
dec
or
fisttps
adc
rcrb
cmp
dec
aas
cld
fcoml
or
rorl
add
aad
cmpsb
lret
ret
jge
mov
clc
mov
or
shl
push
add
das
loope
pop
pop
loope
dec
loop
push
pop
outsb
jge,pn
xchg
gs
aas
dec
cld
mov
into
xlat
jae
jb
add
add
test
jmp
nop
dec
pop
mov
iret
aad
mov
xor
ss
xchg
loopne
ficomps
loopne
mov
out
popf
pusha
js
cmc
testl
repz
popa
inc
push
push
jo
cmp
inc
cmp
gs
cmpl
repz
ret
mov
add
xchg
ficoms
xor
filds
add
mov
add
cmc
add
aam
out
inc
jmp
int
add
xor
xchg
push
and
cli
shlb
je
fists
ret
pusha
sub
push
push
xor
idivl
iret
fs
bound
es
mov
add
fdivrs
cmp
xchg
clc
into
add
or
mov
add
fucomi
negl
fmul
fs
bound
add
cmc
add
jmp
and
xor
cli
pop
outsb
ss
pop
shrl
jle
adc
jbe
in
push
mov
dec
clc
imul
mov
add
and
cmp
sub
cmc
mov
mov
cmc
movaps
test
inc
adc
mov
mov
fcos
push
pop
jle
sahf
test
or
and
shlb
push
add
sbb
hlt
aas
mov
test
gs
stc
cltd
hlt
aas
mov
push
into
add
add
add
jo
or
and
or
or
call
pop
sbb
mov
std
cwtl
cmp
mov
mov
add
add
mov
adc
inc
add
mov
inc
mov
call
push
push
pop
cld
xchg
add
pop
syscall
jge
test
repz
and
or
and
push
fildl
add
mov
cmc
pop
or
jle
dec
lret
sbb
repz
xor
ljmp
repnz
addr16
test
sub
test
jo
or
mov
xchg
jecxz
mov
xchg
pop
or
add
inc
fucomi
mov
add
repz
cltd
stos
dec
or
adc
xlat
fcmovnb
repz
add
stos
repz
add
add
jg
inc
cmc
lods
jb
pop
iret
fdivrl
xchg
jb
in
ficoms
dec
clc
xchg
jo
jne
ss
inc
add
pop
push
mov
mov
mov
test
test
or
mov
inc
mov
push
out
sub
ss
sub
out
pop
push
mov
cld
lret
incl
in
jb
cmpsb
add
add
xchg
dec
bound
in
xchg
repz
neg
xor
icebp
mov
aaa
lahf
testl
and
add
outsl
leave
dec
jb
std
ljmp
leave
out
jle
je
or
cmc
cmc
push
xor
mov
or
cmp
mov
stc
std
dec
mov
add
int
sbb
cmc
jl
loope
jne
mov
sub
adc
lock
insl
push
jp
adc
push
test
inc
jne
stc
inc
lock
cmpl
lods
mov
mov
push
lret
in
loope
loopne
and
or
int3
lret
mov
sbb
cs
fs
add
add
add
jmp
ja
pop
pushf
xor
mov
clc
lret
mov
scas
nop
inc
mov
jg
mov
lcall
xchg
ja
stc
add
fcom
or
inc
add
pop
dec
dec
in
lea
stc
leave
repz
xlat
fstpt
push
dec
int3
out
iret
fsubr
mov
insl
sbb
ret
add
repz
mov
outsb
test
mov
cmp
mov
jg
pop
inc
sbb
inc
bound
jns
int
nop
xor
or
int
lahf
aaa
sti
inc
mov
movsb
xlat
aas
xor
shlb
add
sub
fsubr
inc
xorl
add
lock
stos
add
mov
jge
push
dec
add
add
inc
ret
add
jae
int3
pop
fstl
ljmp
xor
popa
outsb
int3
cmp
fimull
mov
push
push
mov
push
add
jmp
xchg
dec
adc
mov
jne
pop
add
inc
test
scas
ret
in
popl
dec
or
sbb
repz
xchg
xor
add
xchg
insb
inc
jecxz
add
jbe
push
cwtl
xor
add
incl
movsb
lret
and
repz
or
cltd
out
clc
inc
mov
std
je
add
inc
cmpsb
mov
jl
xor
icebp
add
repnz
sti
jmp
pop
jmp
push
insb
inc
lock
outsb
xchg
call
clc
jns
jmp
addr16
adc
add
movw
daa
insl
or
and
mov
fldl
sbb
je
mov
add
xchg
jle
jge
popf
decl
sub
or
and
int3
lret
push
or
inc
popa
loopne
pusha
pop
idiv
dec
sbb
push
jg
xor
arpl
cld
xor
sbb
int3
lret
and
fdivr
mov
call
lret
jg
add
add
pop
gs
clc
roll
sti
repz
and
jmp
int
nop
mov
std
orl
add
and
add
mov
int3
sti
stos
sbb
add
fwait
repz
out
xor
mov
rclb
or
ljmp
aam
xor
rcll
jmp
add
add
inc
aam
xor
xchg
test
and
out
and
aam
xor
mov
pop
int
rcrl
stos
ja
adc
cmp
arpl
aad
add
les
icebp
sbb
cmp
popl
mov
push
clc
mov
pop
js
xchg
add
add
or
mov
lock
int3
clc
gs
dec
sbb
xor
mov
jbe
push
xor
jle
jmp
test
shll
shlb
test
fs
orl
insb
in
add
insl
int3
adc
jmp
inc
lock
shlb
std
adc
shrb
add
outsb
add
add
mov
shll
enter
mov
ret
mov
add
mov
movsl
cli
push
push
stc
incl
pop
inc
gs
add
hlt
jl
pop
movsb
cli
jmp
mov
cmp
sahf
cmp
pop
jnp
rol
notb
stc
ja
sub
cmc
add
aad
or
jnp
je
add
mov
adc
mov
push
call
xor
lcall
ss
push
xchg
push
inc
clc
cmp
lcall
call
iret
push
mov
inc
hlt
fmul
lcall
int3
xor
and
aas
lock
lcall
nop
xor
cli
pop
fcoms
dec
aas
in
add
add
movsb
add
mov
aad
cmp
test
jge
inc
xchg
mov
push
pop
mov
lea
and
repz
cmc
adc
decl
roll
roll
int3
inc
repz
test
int3
rcrb
flds
ss
imul
je
test
scas
sar
pushl
gs
bnd
pop
jp
add
enter
jg
testb
ret
add
mov
jmp
adc
loop
and
mov
in
cld
test
push
add
cmc
in
clc
stos
repz
les
add
inc
pop
sbb
leave
outsb
lods
inc
add
std
dec
repz
jg
push
or
jge
or
jmp
add
xchg
pop
inc
clc
ss
inc
add
push
aad
mov
push
int
cmpl
insl
lds
add
clc
ficoms
push
inc
pusha
int
add
xchg
jb
xor
push
les
xchg
rclb
pop
iret
dec
jb
push
in
shll
push
out
test
mov
mov
call
rolb
jmp
repnz
movsl
sub
imul
mov
jae
jle
fisttpll
fcomi
sbb
movl
in
jno
inc
push
fsubrp
fcoms
xor
sub
mov
mov
sbbb
pop
jmp
test
push
jbe
add
test
in
and
sar
add
add
mov
inc
hlt
cmp
cmp
and
stc
fldt
jg
fwait
pusha
nop
inc
fistpl
es
js
fmull
dec
ss
ja
mov
sbb
orl
fiaddl
ficoml
push
ja
add
bswap
out
adc
add
push
add
fdivl
add
mov
add
pop
add
into
fistpl
jne
sub
fdiv
cmp
xor
xchg
int3
jns
push
into
fcmovbe
add
out
imulb
jp
pop
insl
inc
fsubl
push
push
mov
arpl
push
loop
add
int3
aaa
mov
mov
xchg
ss
call
stc
frstpm(287
js
add
inc
mov
mov
jp
mov
inc
outsb
int
pop
ljmp
stos
ljmp
int3
imul
cld
imul
repz
pop
int3
pop
add
pop
push
clc
scas
std
ret
adc
mov
out
jnp
add
push
sbb
cltd
cwtl
fucomi
pop
leave
push
add
js
cltd
andb
data16
mov
xchg
jmp
add
add
and
call
pmuludq
jmp
pop
inc
push
adc
jnp
jo
ror
testl
push
divb
les
cs
inc
int
rcll
mov
inc
and
pop
push
outsb
jecxz
adc
orb
inc
add
add
add
jg
cli
pusha
mov
sub
xor
mov
ret
jge
jae
shrl
xor
lock
mov
xor
push
and
cli
inc
jae
je
inc
pop
clc
call
and
push
add
lock
sbb
test
dec
push
mov
cmp
mov
add
push
add
bswap
push
pop
pop
mov
pop
xchg
cmp
mov
xlat
jge
std
or
clc
sub
push
inc
fdivl
pop
lret
movsb
jne
mov
inc
add
xchg
int3
push
ss
push
sbb
insl
leave
rcll
sbb
dec
pop
xchg
lock
push
and
leave
push
xchg
insb
or
mov
cmp
mov
add
jb
sub
je
repz
mov
stos
repz
lahf
sti
das
xor
pop
repz
ret
cwtl
out
cmpsl
ds
repz
ds
lahf
dec
hlt
pop
clc
xor
mov
dec
leave
daa
sub
aas
jl
xor
add
xor
push
les
push
sub
leave
push
jl
stos
stc
inc
mov
pop
jbe
lret
cmp
lods
sti
sub
das
mov
add
btr
out
pop
add
test
repnz
ds
sbb
enter
pop
add
ret
cltd
push
inc
or
lret
dec
aas
add
push
and
les
sar
dec
sub
dec
in
cmp
push
xlat
add
jmp
xchg
cmp
cld
insb
cli
scas
xor
cli
scas
adc
jl
call
add
jno
xrelease
xchg
clc
dec
andps
jmp
iret
push
cmp
filds
or
insb
pop
cwtl
enter
mov
aad
rep
fmul
dec
stc
add
in
xor
inc
hlt
dec
popf
push
shlb
lret
loop
movsl
inc
scas
test
mov
sub
pop
shll
pop
sub
mov
add
sub
jbe
flds
push
push
pop
mov
icebp
mov
sbb
call
loop
inc
mov
shll
jmp
mov
repnz
repnz
jne
lods
adc
je
add
dec
movsl
js
mov
add
mov
mov
or
mov
add
add
lock
lcall
add
inc
push
pop
test
cli
cmpsl
xchg
fadd
in
push
dec
add
jbe
insl
stos
pop
mov
mov
pop
test
out
mov
test
popa
or
push
adc
faddl
or
xor
jnp
fiaddl
pop
mov
push
aad
repz
sti
add
add
mov
dec
test
int
fwait
xor
jle
cmc
dec
aas
xor
cmpsl
ljmp
repz
add
aas
ret
sti
scas
out
jecxz
sub
dec
mov
and
sub
inc
mov
jmp
fs
jmp
add
mov
push
js
outsb
pop
hlt
add
add
mov
pop
sbbb
adc
add
scas
aas
adc
sarl
add
frstor
std
aam
inc
add
xor
push
jb
outsb
iret
jb
fldt
dec
dec
lret
lret
out
repnz
divl
pop
sti
xor
arpl
xor
push
aas
sarb
jae
hlt
mov
inc
jmp
jb
jo
sbb
into
and
add
dec
outsb
rclb
mov
in
mov
dec
adcb
jmp
loopne
clc
aad
fcomi
add
mov
mov
mov
pop
cmpsl
jmp
subl
add
es
add
mov
jb
call
scas
xchg
and
jecxz
jmp
out
pop
cmpsb
jle
je
add
xor
jl
out
clc
out
or
cmpb
or
lock
add
push
mov
jb
mov
push
movsb
dec
mov
rol
mov
in
pop
es
je
jns
or
xor
sysexit
adc
dec
lret
jbe
sub
iret
xor
pop
adc
jl
in
movsb
arpl
xchg
adc
cmp
add
add
dec
xor
stc
adc
pop
addr16
jle
mov
in
dec
cltd
call
lahf
xchg
stc
or
addl
add
sbb
ret
xchg
in
popf
les
mov
add
push
std
sahf
mov
call
adc
lods
test
sub
add
inc
lea
inc
popf
add
add
aad
pop
mov
sub
pop
or
pop
xchg
in
dec
mov
and
add
fisttps
lret
sbb
adc
mov
clc
je
lcall
pop
dec
add
pop
pop
aaa
cmpsb
push
hlt
cmp
in
stos
inc
adc
mov
dec
jno
enter
pop
sub
push
add
add
pop
mov
cld
add
inc
jmp
mov
repz
mov
clc
ss
inc
int
lret
push
or
cmp
mov
jbe
mov
xor
es
jne
jne
jbe
adc
stc
ljmp
mov
nop
lret
push
mov
jle
mov
inc
pusha
add
add
push
jns
gs
daa
in
mov
jae
add
cli
add
jo
cli
inc
xor
or
mov
jg
dec
cmp
or
xchg
call
jo
or
mov
or
push
imul
incl
jle
lock
jle
jne
push
or
jp
inc
add
add
xchg
gs
ljmp
into
ret
idivl
cmp
addb
jle
add
addb
inc
shlb
divb
aad
je
xchg
ds
mov
ret
add
nop
mov
push
cld
cld
pop
aad
add
mov
aas
mov
xchg
cmpsb
or
es
mov
dec
addr16
push
fisttpl
test
add
add
pop
in
rcr
mov
inc
push
clc
fcoml
add
cmp
mov
shlb
xor
mov
popa
pushf
stc
or
cmp
in
mov
adc
pop
in
stc
xor
pop
les
aaa
sub
mov
jg
cmp
mov
addr16
daa
mov
add
mov
pop
lret
mov
add
push
lods
add
jae
in
repnz
push
gs
movsbl
xchg
mov
out
jecxz
jecxz
or
jmp
lahf
notl
add
repnz
data16
add
movb
and
push
sub
jno
mov
inc
xchg
add
add
adc
add
and
jmp
mov
and
inc
pop
imul
call
sub
add
repz
mov
insb
sbb
inc
or
sbb
jg
inc
xor
icebp
pop
outsl
push
repz
psubq
testb
jmp
enter
add
add
js
pushl
or
xor
add
inc
add
in
add
xorb
jb
mov
sbb
cmp
shlb
fists
js
psllq
cli
mov
sbb
imull
xor
xchg
push
lock
sbb
jge
sti
jp
shll
inc
incl
add
mov
ficomps
inc
inc
ljmp
out
fisttpll
sub
jne
adc
or
xor
mov
sub
shrl
cmp
repnz
pop
or
add
add
xor
aas
cmp
fdivrl
add
lea
or
mov
mov
in
xchg
push
add
add
add
pop
jg
inc
adc
les
jle
fidivrl
clc
ja
incl
xchg
lds
jg
out
icebp
gs
fmuls
lcall
loopne
insl
out
enter
imul
stc
xor
idiv
das
nop
div
cs
sub
jl
cmp
mov
push
das
nop
testl
add
lds
insb
flds
mov
push
mov
loopne
ds
mov
mov
aaa
mov
mov
mov
sbb
mov
mov
leave
je
push
and
add
mov
insl
clc
aam
sbb
in
push
clc
into
inc
outsl
rclb
jmp
sbb
add
sbb
mov
ss
adc
std
push
or
ja
mov
std
imul
es
push
or
or
filds
pusha
mov
pop
xchg
lret
and
pop
cmpsb
cmp
stos
xor
xchg
insb
mov
and
xorl
pop
cld
add
add
xor
cli
jne
adcl
xor
jnp
cmp
mov
add
outsb
add
cmp
add
xor
mov
add
cli
adc
mov
insb
dec
adc
jnp
cmp
pop
mov
insb
sti
cmp
jae
and
cmp
decl
or
jns
idivb
jb
push
add
xor
lods
add
orl
std
sar
jnp
int3
xor
pop
mov
adc
mov
add
jae
inc
xor
dec
inc
dec
adc
xchg
addb
mov
inc
xchg
lret
mov
or
in
xchg
xor
test
cltd
mov
mov
loope
xchg
add
mov
dec
test
les
fildl
call
adc
sbb
push
insb
lea
pop
xor
push
stos
xchg
divl
pop
xor
sub
mov
mov
add
repz
les
jae
hlt
jb
std
mov
mov
lds
and
add
add
cmp
jno
sarl
pop
mov
lods
xor
ret
lret
jmp
test
push
xchg
cwtl
jne
jae
jl
add
mov
ds
cmp
mov
addb
es
jecxz
dec
jb
lret
insl
mov
jle
add
add
repz
inc
out
imul
scas
stos
jecxz
cld
xlat
out
jmp
or
pop
shrl
mov
jg
clc
cld
fcmovne
add
mov
rcl
outsb
outsb
pop
shll
push
popl
add
add
sbb
and
inc
lea
dec
call
ss
cmp
add
add
jg
lock
cmp
dec
xchg
ljmp
xorb
xchg
fidivl
inc
or
mov
xorb
pop
or
sub
mov
lds
mov
sbbb
sub
add
ret
add
xor
call
lock
cmp
adc
mov
add
add
mov
jne
pop
sahf
mov
push
movsl
test
xchg
xchg
aas
aaa
test
jo
lds
or
das
or
lahf
xchg
add
cld
in
or
add
popa
adc
dec
push
inc
les
xchg
jecxz
ja
adc
fs
call
mov
or
pop
inc
ja
movsb
mov
add
les
ja
add
repz
out
fwait
in
inc
mov
stos
gs
loop
dec
nop
dec
lcall
fistps
or
mov
sub
sub
icebp
fs
data16
and
pop
mov
jle
popf
xchg
mov
add
mov
push
push
dec
sbb
jge
add
lock
sbb
mov
mov
aaa
lahf
add
dec
repnz
sbb
cmp
or
xchg
mov
int3
daa
add
sbb
and
xchg
or
xchg
out
add
fnstcw
mov
scas
cmp
cs
sub
repz
clc
jge
inc
mov
repz
add
add
stos
clc
jb
aas
xchg
jmp
jb
add
call
sbb
pop
inc
dec
xor
aas
pop
jb
jmp
push
add
hlt
pop
add
clc
movsl
hlt
add
jmp
pop
inc
gs
icebp
add
insl
mov
je
popf
pop
adc
or
add
add
sub
jne
dec
cli
adc
test
insl
add
push
cmp
inc
and
lods
stc
jne
mov
add
repz
mov
cmp
ret
push
mov
inc
inc
push
aas
negl
dec
hlt
pop
add
push
lcall
xchg
lds
test
cld
mov
add
stc
push
test
mov
adc
testl
jl
inc
mov
mov
mov
in
and
int
rcrb
push
sbb
sbb
jbe
dec
jge
xchg
or
in
adc
mov
adc
stos
inc
add
insl
xor
fsubs
sahf
repz
add
xorl
cmp
sbb
ljmp
jmp
sbb
push
sbb
stos
add
cmc
adc
loopne
xchg
adc
cwtl
scas
fdivp
cltd
scas
fdivrp
sbb
add
mov
sti
adc
loop
int
lea
inc
div
adc
mov
int3
repz
xchg
scas
cmc
arpl
add
cmp
ret
das
jns
jns
xchg
es
jmp
stc
add
sti
dec
repz
mov
inc
clc
hlt
das
std
inc
jmp
mov
push
loopne
sbb
std
xor
sbb
sti
iret
repz
imul
in
jne
test
faddp
mov
add
add
jo
jge
js
cmc
xchg
inc
stc
add
insl
lret
repz
jb
cmp
push
into
mov
lods
push
inc
in
shll
clc
cs
cmc
jmp
jae
ds
ret
inc
push
bound
testb
push
incl
pop
jle
fiaddl
jge
add
add
add
push
mov
adc
inc
xor
sub
pop
addr16
add
lock
mov
sbb
sbb
dec
adc
out
stc
je
repz
adc
jo
or
mov
ja
or
cltd
jns
aam
lods
stc
pop
xor
adc
mov
mov
add
div
jmp
loope
inc
mov
stos
jae
movb
adc
stc
subl
je
sub
in
scas
dec
xchg
add
pop
add
pushf
nop
add
fisubrl
andl
stc
mov
pushf
stos
adc
add
add
iret
stos
jg
shrl
push
je
cmp
add
sbb
xor
dec
stos
ljmp
fwait
cwtl
mov
jbe
stos
sbb
insb
adcb
notl
mov
popa
mov
jmp
sbb
fcomip
inc
lret
pusha
stos
aas
jg
and
inc
shrl
sub
mov
jmp
xchg
stos
xchg
cli
jmp
stos
cwtl
push
pop
jo
test
add
adc
movsl
add
lods
push
stc
mov
movsb
add
and
sbb
fwait
xor
nop
and
outsl
sub
repz
clc
xchg
or
lcall
stos
clc
cmc
mov
jle
xor
or
pushf
and
repz
pushf
cli
push
xor
or
out
test
add
add
insb
sbb
xor
add
mov
fs
and
add
jo
cs
cld
or
lods
jecxz
sub
jae
dec
outsb
jns
cmc
fprem1
scas
hlt
scas
daa
shlb
or
cmpsb
fstps
cmc
leave
clc
jmp
aas
pop
add
pop
insl
and
pop
adc
mov
add
add
add
mov
stc
je
idiv
je
notl
pop
pop
or
sub
push
bound
ljmp
pop
inc
xor
scas
adc
clc
es
mov
jecxz
and
pushf
ja
test
add
adcl
push
lock
cltd
add
mov
in
rorl
fcmovnb
ss
add
add
xor
sub
ret
out
push
mov
add
mov
inc
pop
adc
hlt
pmullw
stc
push
inc
jb
dec
fidivrs
cmp
push
push
or
mov
mov
xor
cmp
mov
or
cmpsl
out
jg
and
jnp
stos
jae
add
add
fwait
js
lahf
out
push
aad
adc
ret
aas
mov
inc
mov
inc
mov
mov
cmp
lret
mov
jmp
sbb
jae
das
test
data16
add
movsl
gs
icebp
push
shll
aas
adc
add
pushf
push
adc
add
add
mov
cli
dec
sahf
mov
aas
adc
jo
sub
add
cld
scas
out
stos
push
pop
out
stc
stos
repnz
insb
enter
clc
xlat
rcrb
ljmp
mov
stc
sahf
jnp
push
push
lods
push
int
xor
insb
enter
mov
stos
insl
loope
insb
aaa
push
cmpsb
jmp
frstor
add
les
lock
adc
js
sbb
cmp
repnz
mov
call
mov
jae
adc
lock
xor
pusha
out
add
inc
mov
mov
std
cli
dec
jge
adcb
cmp
call
add
add
mov
pop
add
add
subl
cli
jmp
nop
outsl
inc
mov
push
call
sbb
fmuls
mov
push
sbb
pop
add
dec
jg
push
and
sbb
mov
cmp
dec
lcall
mov
mov
pop
pop
mov
mov
add
add
xor
cmp
or
jmp
push
in
sbb
adc
and
adc
je
iret
decb
adc
jnp
xchg
inc
test
add
js
das
bound
lret
repz
jo
push
inc
repz
xlat
out
jb
inc
add
rcrl
je
in
cmp
add
lahf
jg
inc
mov
jmp
mov
mov
repz
inc
hlt
xchg
into
mov
cmovle
add
lret
clc
scas
mov
icebp
fmulp
sub
inc
arpl
loop
pop
outsb
es
pop
aaa
add
movl
jmp
aad
insl
loope
xchg
in
in
cs
insb
add
add
je
jge
fwait
test
and
cmp
mov
pusha
add
pushf
insl
int
insb
jge
mov
outsb
cmp
jmp
je
addl
in
and
outsb
or
inc
sbb
insb
cld
jo
repz
lcall
cmpsb
push
je
add
add
loop
cmp
je
cmpsl
stc
adc
call
push
cli
incl
test
adc
hlt
pop
pop
dec
jo
pop
ja
add
mov
or
mov
imul
repz
je
add
je
add
adc
push
mov
add
fwait
jne
add
add
gs
xor
inc
lock
movsb
std
lock
pushfw
daa
dec
and
iret
mov
scas
adc
mov
idiv
xor
ficoms
mov
add
lock
mov
test
pop
fiaddl
enter
push
lret
adc
emms
or
xchg
sbb
mov
cwtl
test
add
mov
rcll
nop
or
dec
or
test
xchg
inc
xchg
repz
movsb
mov
xchg
or
cmc
push
nop
popf
xchg
or
mov
inc
or
xchg
sub
aam
or
repnz
fnsave
push
sub
nop
into
add
lahf
adc
loop
lds
push
dec
xchg
add
add
add
jg
popf
or
out
pusha
ss
insb
mov
mov
cmp
inc
cmp
sub
call
inc
push
sbb
jb
sahf
jb
rclb
lahf
add
or
in
jb
lahf
mov
or
jmp
pushf
mov
mov
adc
mov
popl
dec
add
add
cltd
inc
mov
adc
sbb
cwtl
gs
jb
jb
xchg
inc
imul
fimull
push
jae
mov
adc
pop
clc
ja
loope
xor
inc
mov
add
sub
add
cli
outsb
inc
dec
pop
cli
push
dec
leave
out
add
add
arpl
imul
add
dec
adcl
fsubrl
call
in
xor
test
jnp
add
jg
popa
xorb
adc
adc
jg
jmp
idivb
loope
pop
clc
add
inc
adc
mov
jne
dec
push
test
add
add
clc
pop
loopne
dec
pop
and
adc
dec
xor
xchg
pop
xchg
stc
lea
sub
addl
aad
movsb
cmpl
add
movsl
hlt
clc
mov
or
test
push
imul
out
rorl
mov
fnstsw
clc
pop
push
or
mov
push
or
mov
add
add
add
add
push
or
mov
stc
jecxz
rolb
stos
mov
cmp
btr
jp
fimuls
jno
inc
lock
add
add
sub
mov
stc
mov
mov
lds
jae
test
js
jns
lock
sbb
popf
fists
out
push
add
jmp
or
out
adc
fwait
pop
orl
mov
xchg
hlt
jo
adc
mov
loope
popf
insl
sbb
xor
adc
insl
inc
or
popf
jmp
rorl
clc
scas
and
mov
xchg
cmp
notl
xchg
inc
push
xchg
or
clc
jle
add
add
outsb
xchg
iret
or
negl
insl
or
es
mov
or
insl
aad
push
stc
fs
pop
or
jno
out
ljmp
add
sbb
push
bnd
je
bnd
cli
ljmp
insl
sub
testl
sub
adc
add
inc
lret
pop
jl
or
lds
jnp
fmuls
hlt
jge
cld
cmc
jle
scas
loopne
or
lret
testb
sub
testl
clc
jl
test
mov
scas
arpl
mov
repz
aaa
cli
pushl
mov
jo
test
inc
add
mov
mov
idivl
add
mov
inc
mov
roll
xchg
adc
jecxz
sbb
sbb
add
mov
repz
mov
cli
jnp
ja
stc
push
movsl
sbb
test
test
mov
add
jge
mov
dec
add
ja
test
sar
sub
test
or
push
mov
add
adc
push
push
jle
out
or
xchg
ljmp
repz
or
loop
dec
ljmp
jl
stos
mov
lahf
ret
cwtl
movl
pop
lahf
arpl
js
xlat
add
imul
dec
nop
push
or
sub
mov
out
dec
subb
shrd
add
lret
hlt
add
add
inc
xchg
dec
mov
scas
jae
xor
jl
and
jae
mov
jb
popf
sub
cmc
ja
insb
repz
or
movsb
mov
add
push
clc
mulb
insl
jae
and
jo
decl
sbb
aas
sbb
mov
popa
add
imul
decl
xchg
jp
sahf
add
add
push
sbb
sub
outsl
in
adc
ljmp
or
out
adc
add
add
je
mov
scas
js
push
push
mov
and
stos
jge
jne
dec
jp
mov
inc
std
xor
pusha
push
call
jbe
pop
pop
dec
stos
mov
add
add
and
add
inc
mov
push
push
or
push
jmp
icebp
add
xor
jg
lock
insl
jle
jle
lock
add
add
gs
mov
xchg
lahf
add
andl
dec
and
add
lds
in
and
test
enter
add
pushf
jae
xchg
inc
add
mov
lcall
andl
in
nop
stc
lret
pinsrw
cld
jl
mov
add
in
cmpsb
loope
add
jbe
ret
cwtl
stc
jnp
xchg
cmpl
call
pop
sbb
or
repz
add
imul
push
scas
mov
add
xorb
and
loop
adc
outsl
sub
push
ljmp
in
mov
mov
call
and
mov
inc
cwtl
push
add
sub
mov
push
fdivs
and
xor
mov
xor
and
xchg
xor
sub
xchg
jne
xchg
mov
push
jg
add
into
out
pushf
pushf
and
fs
pop
rcll
insb
gs
pop
adc
insl
enter
mov
pop
fwait
inc
call
jbe
js
fldl
enter
jns
fstps
les
dec
enter
adc
jmp
xchg
test
in
pop
push
orl
mov
push
and
lock
rcl
add
add
incb
cmc
rcl
clc
cmpsb
or
or
ja
xorb
dec
sahf
mov
add
mov
pop
scas
push
mov
gs
jge
out
sbb
data16
mov
jno
cmpsb
jecxz
add
mov
adc
or
insb
in
decl
jge
popf
sbb
cli
je
jb
js
insl
or
xor
add
add
pop
insb
xor
ljmp
sub
adc
leave
pop
sahf
jne
mov
dec
insl
or
adc
mov
lcall
loope
in
dec
les
pop
or
mov
lahf
add
mov
lock
cmp
cld
mov
lcall
add
add
sbb
xchg
cli
add
sub
mov
dec
jne
hlt
cmp
jecxz
xchg
je
pop
dec
stc
or
sbb
push
int3
clc
jl
aam
inc
mov
jns
sub
call
or
add
loope
in
les
rep
pop
mov
jge
jbe
pop
in
jbe
pop
leave
jl
clc
loopne
mov
clc
rorb
add
jle
sti
push
jb
add
sub
btr
add
sub
jl
out
ljmp
inc
testb
cwtl
jle
ret
cwtl
fwait
and
inc
into
test
out
jl
jmp
inc
fwait
jno
movsl
roll
jno
pop
sub
and
in
mov
add
mov
jae
sub
hlt
mov
or
inc
mov
add
jne
pop
mov
mov
add
add
or
pop
adc
or
add
mov
lea
das
ja
add
hlt
test
jmp
ds
xor
cmp
add
adc
mov
xor
test
jmp
call
xor
cmpl
mov
repnz
sbb
xchg
jne
jne
pop
sti
jae
out
cmp
xor
and
pop
fisttpll
lock
jbe
xor
jge,pn
in
jb
mov
cmp
cmc
xchg
cmc
jbe
jmp
push
add
add
ss
cli
pushl
insl
mov
in
rcrl
cmp
push
stos
movsb
jg
fisttpll
jl
mov
cld
or
outsl
in
mov
addl
stc
fistl
in
jnp
xchg
stc
mov
jle
rclb
xchg
push
mov
push
int3
lcall
cmp
orb
orb
add
cmp
iret
rcl
add
xor
xchg
push
pop
test
ret
ret
pop
je
adc
jl
std
sbb
cmp
out
cmpsl
jle
add
lcall
jge
repz
pop
js
andb
inc
add
adc
add
mov
sbb
ss
xchg
mov
add
mov
adc
shll
aad
pop
ja
inc
ja
cld
pcmpgtd
add
inc
mov
ss
loopne
jns
lahf
xchg
mov
pop
jno
fnsave
pop
sbb
in
xchg
mov
ja
repz
dec
faddl
and
fdivrl
lods
pop
and
inc
xor
cmp
shl
or
or
in
in
push
je
add
dec
mov
jge
idivl
mov
scas
aas
ja
sbb
inc
ss
sbb
mov
mov
pop
in
jge
clc
mov
pop
lea
cmp
test
sbb
cmp
mov
pop
call
arpl
pop
ret
or
mov
call
call
incl
add
cmc
mulb
pop
mov
dec
adcl
add
mov
inc
hlt
xchg
xor
mov
cmp
jne
cmc
push
ljmp
clc
fs
cmp
jecxz
push
rcll
outsb
jl
sarb
rorb
ss
sarl
or
out
call
pop
push
in
push
inc
test
add
add
outsb
xor
ljmp
mov
inc
data16
dec
mov
stc
inc
mov
stc
jp
mov
int3
daa
aam
xor
fdivr
sbb
stc
xchg
add
cld
adc
sbb
call
xor
adc
or
rcrb
stos
mov
add
mov
add
mov
and
cltd
sbb
dec
mov
xor
lcall
pop
add
out
ds
popa
adc
hlt
pushf
xchg
repz
inc
jl
movsl
xchg
repz
insb
mov
jmp
push
mov
stos
push
bound
adc
mov
or
mov
add
xchg
jbe
xchg
push
jbe
nop
mov
xchg
jg
btr
pop
xor
arpl
nop
jp
push
cmp
push
mov
stos
lods
cwtl
cmp
add
cs
roll
cmp
shll
or
xchg
mov
pusha
inc
jmp
jo
xchg
fwait
jmp
movsb
jo
bound
add
ss
jo
sti
mov
jo
pop
push
shll
clc
mov
inc
inc
add
push
mov
outsb
xor
mov
adc
jl
mov
add
adc
mov
mov
mov
add
pop
addl
repnz
incl
stc
jbe
insl
xor
mov
add
jno
insl
je
or
and
ret
pop
xor
jmp
xchg
push
inc
movsl
jae
je
jb
and
repz
xor
sar
cltd
insl
jae
dec
mov
cli
test
sbb
movsl
jmp
sbb
or
cmp
mov
insl
adc
out
sbb
xor
or
xchg
outsb
adc
daa
xor
movb
mov
add
dec
jg
push
cld
jg
hlt
fs
stc
sti
adc
and
mov
jecxz
fldenv
dec
nop
test
aam
add
out
cld
lds
jno
pushl
add
shll
je
mov
push
icebp
and
into
stc
xchg
leave
leave
add
ret
pop
outsl
inc
add
add
pusha
xchg
add
mov
in
ljmp
leave
or
mov
rol
add
test
test
fs
xchg
test
mov
sub
in
add
pop
adcl
insl
shrb
mov
add
pop
je
test
ds
out
dec
sahf
lock
add
out
mov
jp
jbe
stc
sbb
fs
and
test
add
out
call
or
pop
and
add
sbb
popa
out
inc
push
dec
cmp
lahf
add
mov
ret
into
clc
xchg
mov
adc
xor
addl
mov
lods
add
add
inc
jmp
ss
mov
push
testl
or
mov
cld
outsl
cmc
push
rcrl
cld
divl
and
xchg
sahf
cmove
ss
inc
or
xor
in
mov
add
stc
and
sti
and
lea
jbe
push
scas
jg
dec
ret
add
add
in
add
std
stc
idiv
cmc
jne
or
in
incb
jg
lcall
sti
mov
cmpsb
mov
mov
ja
cld
imul
pop
cld
lcall
test
add
jne
test
add
ret
shl
xlat
movb
dec
nop
add
dec
jne
push
pop
sub
push
pop
out
bswap
mov
aas
or
or
add
mov
cmp
sarb
adc
push
sbbl
stc
std
jge
ret
xor
xchg
out
loopne
push
js
stos
push
cmp
ret
mov
addr16
loopne
xchg
xor
jecxz
jp
add
add
repz
xor
or
inc
andl
mov
imul
or
adc
bound
mov
and
mov
repz
sub
addr16
aam
sub
into
ss
test
add
add
repz
add
pop
mov
jmp
adc
mov
add
adc
je
add
je
ficoms
aas
add
jbe
loope
ljmp
aam
andb
add
xchg
push
jbe
in
test
clc
data16
cwtl
jecxz
or
xchg
repz
je
mov
ds
cmp
jp
pop
aad
push
jb
add
dec
and
sub
jp
bound
ret
push
sahf
aaa
fiaddl
fs
add
outsb
clc
out
mov
cmp
insb
inc
mov
dec
incl
inc
pop
cmp
insb
shll
add
out
jge
pop
insb
shll
or
insb
or
cmpsb
loopne
and
stc
mov
loop
add
add
gs
mov
test
sbb
stc
mov
fisttpll
mov
push
daa
ror
dec
leave
cmpsl
filds
push
mov
cs
and
xor
fldt
in
sub
push
mov
xorb
push
push
mov
add
loop
ljmp
int3
cld
xor
cmp
test
ror
mov
add
xor
ljmp
or
cmp
xor
stc
push
aam
stc
testl
push
jo
jp
add
xchg
aad
repz
lcall
push
js
je
or
push
fs
inc
mov
sbb
dec
add
int3
jae
test
mov
sbb
dec
cmp
aaa
cmp
xchg
jge
add
fucomi
pop
inc
sti
in
jb
ja
repnz
xor
inc
mov
lock
jmp
jge
and
imul
or
movsb
jno
adc
push
mov
jmp
or
arpl
and
pop
cmp
in
pop
mov
aas
out
xchg
add
addl
orl
or
mov
hlt
add
movb
push
xchg
jbe
add
pop
pushl
and
sbb
xor
xchg
xchg
sahf
or
or
push
jnp
in
add
or
mov
jne
icebp
cmpsl
test
mov
aad
jbe
je
add
lret
xchg
in
idivl
repnz
mov
and
ret
adc
push
insl
add
out
inc
mov
push
push
mov
add
in
fldl
in
repnz
cmpsb
das
pop
pop
cmp
or
cwtl
push
push
xchg
stc
js
mov
push
stc
call
jne
je
push
cld
add
add
sub
and
push
mov
add
ret
push
sahf
loopne
ss
stc
mov
mov
sti
push
mov
push
pop
repnz
decl
insb
xor
test
pop
int3
mov
mov
sbb
xchg
adc
pop
xchg
aam
fldl
push
add
add
xchg
fdivrl
test
jnp
loope
pusha
dec
fnstsw
xchg
or
jb
jg
adc
jg
adc
dec
adc
jl
mov
mov
cmp
mov
fs
pop
out
fimull
bound
sub
or
in
icebp
int3
xchg
ja
out
add
add
push
mov
add
jmp
jns
jmp
mov
jno
jno
mov
inc
mov
sub
ror
in
xchg
and
add
xor
mov
add
add
fldl
lahf
icebp
pop
punpckhbw
test
into
or
cwtl
rolb
das
cmp
jae
add
iret
js
call
add
ficompl
imul
add
clc
fdivrl
inc
jmp
adc
or
xor
add
outsb
add
popa
jnp
lds
and
add
outsb
add
cmp
add
adc
cmp
repz
les
clc
aam
out
jmp
add
pop
cli
out
pop
pusha
inc
pushf
clc
hlt
sti
out
add
insb
inc
in
xor
mov
movsl
jne
aad
cmc
lea
and
xor
clc
shlb
jne
mov
cmp
add
mov
push
push
or
mov
cmpb
jae
jbe
jle
xchg
push
or
pop
pop
out
xor
daa
hlt
add
add
mov
insb
dec
cld
je
stc
push
popf
je
je
jb
cld
xor
lahf
add
jbe
and
mov
push
dec
mov
mov
in
cmp
pop
mov
xchg
fs
mov
lret
cld
decl
add
inc
pop
ljmp
mov
add
add
test
js
mov
mov
xlat
add
arpl
inc
or
or
mov
sbb
xchg
inc
adc
mov
enter
or
xor
sarb
lret
or
out
mov
int
jno
jmp
xchg
jb
maxps
ret
and
ljmp
iretw
rcr
sub
add
sub
push
in
out
daa
out
cmpsb
jecxz
imul
sub
xorb
leave
stos
mov
fbld
mov
divl
mov
jg
xor
out
mov
pushf
xor
mov
ja
inc
shr
js
fists
insb
pop
add
pop
push
add
sub
div
jnp
push
xor
inc
jns
mov
lods
ret
icebp
add
add
mov
adc
fldl
xor
xchg
lret
and
jnp
loope
insl
outsb
adc
insb
scas
push
and
jne
adc
stos
out
ss
and
pop
mov
add
add
push
jae
shrb
jne
test
repz
repz
repz
repz
repz
repz
add
add
xor
lock
and
out
add
cmc
out
add
in
add
in
add
cmc
out
add
cmc
out
add
in
add
in
add
mov
add
mov
add
movsl
aas
aaa
add
aaa
add
aas
aaa
add
cmpsl
aaa
add
jnp
add
jnp
add
add
testl
add
testl
add
add
mov
mov
mov
xor
mov
mov
mov
mov
ss
mov
mov
mov
mov
xor
add
add
mov
ss
mov
mov
add
add
mov
ss
mov
mov
mov
mov
add
mov
mov
mov
ds
jmp
add
jle
push
jmp
add
ret
repz
add
imul
mov
jmp
add
add
mov
jmp
add
fwait
ljmp
jmp
add
jmp
add
xor
stos
repz
add
add
repz
repz
repz
inc
xor
jmp
repz
repz
add
add
repz
repz
repz
repz
repz
repz
jmp
repz
repz
repz
repz
repz
repz
xor
jmp
repz
repz
jne
add
gs
add
gs
add
pop
xchg
add
add
and
hlt
add
cmp
add
hlt
add
and
cmp
add
repz
in
add
in
add
outsb
cmp
add
repz
in
add
in
add
movsb
cmp
add
repz
movsl
repz
mov
repz
movsl
repz
movsl
repz
sbb
add
add
add
add
mov
mov
cmp
mov
mov
mov
add
mov
mov
mov
cmp
mov
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
add
mov
jmp
add
jmp
add
xorl
repz
add
jmp
add
add
repz
mov
repz
add
jmp
add
int
arpl
jmp
add
add
sub
jmp
repz
repz
repz
repz
repz
ja
add
repz
repz
repz
add
subl
repz
repz
repz
sub
jmp
repz
repz
subb
repz
repz
repz
repz
repz
repz
subb
movsl
lock
movsl
lock
jne
add
pop
pshufb
add
lock
jne
add
cld
push
cmp
add
add
lock
xor
pshufb
lock
xor
and
add
lock
cmc
out
add
cmp
cmp
in
add
in
add
cmc
out
add
lahf
lock
out
add
in
add
mov
add
sub
add
out
add
mov
add
add
add
add
mov
mov
jbe
mov
mov
mov
mov
jp
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
mov
mov
mov
mov
arpl
pop
add
mov
mov
mov
inc
mov
mov
add
add
mov
mov
add
mov
jmp
mov
loope
dec
repz
dec
repz
add
add
mov
in
mov
roll
repz
add
add
mov
out
mov
mov
xchg
repz
add
add
dec
repz
mov
loope
mov
push
test
xchg
add
add
or
add
repz
or
add
repz
or
in
repz
adc
jmp
repz
add
add
or
jmp
repz
or
ljmp
add
or
in
repz
mov
add
outsl
inc
add
hlt
add
mov
outsb
inc
add
hlt
add
lods
outsb
inc
add
hlt
add
jb
add
jge
inc
add
add
jne
add
insl
hlt
add
dec
outsb
inc
add
inc
add
hlt
add
std
je
add
hlt
add
das
hlt
add
jge
inc
add
repz
out
repz
or
outsb
inc
add
repz
mov
add
jle
mov
add
addb
addl
add
pop
add
mov
mov
test
pop
add
mov
add
jl
mov
mov
add
loopne
mov
mov
add
fistpll
mov
mov
add
fistpll
mov
mov
add
shl
repz
add
loope
mov
cmc
in
repz
mov
jmp
add
jno
dec
repz
add
loope
int3
repz
add
jno
int3
repz
add
add
mov
call
jmp
int3
repz
add
add
push
repz
add
add
in
add
btr
jmp
repz
and
add
repz
repz
and
add
repz
repz
and
add
repz
repz
jb
add
repz
repz
add
mov
repz
repz
push
mov
jmp
repz
and
inc
add
lock
out
lock
dec
dec
cmp
pop
jno
add
lock
icebp
lock
pop
dec
cmp
lea
add
lock
lods
dec
cmp
int
inc
add
lock
popa
pop
cmp
add
add
jne
add
data16
mov
cmp
int
inc
add
add
imul
cmp
in
dec
cmp
xor
lock
popf
pop
cmp
int
cmp
xor
push
add
mov
fidivrs
mov
add
fidivrs
mov
fidivrs
mov
add
jmp
aas
add
add
mov
add
jmp
add
ljmp
dec
add
mov
add
aas
mov
mov
add
aas
mov
mov
add
jmp
add
jmp
mov
jmp
add
add
mov
jmp
add
add
leave
insl
mov
fiadds
mov
jmp
add
in
mov
mov
repz
xchg
lret
xchg
ret
xchg
mov
repz
mov
repz
int3
rep
add
repz
add
repz
add
add
repz
sbb
add
repz
mov
add
mov
add
repz
repz
and
jmp
repz
repz
and
in
repz
and
in
repz
repz
and
out
repz
add
call
pop
and
jmp
repz
xor
mov
cmp
push
mov
cmp
cmpsb
mov
cmp
sarb
cmp
arpl
add
bound
add
hlt
add
and
add
hlt
add
movsl
hlt
add
lcall
add
add
movsl
hlt
add
movsl
hlt
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
add
mov
add
add
mov
add
add
mov
add
hlt
decl
pop
sbb
mov
adc
mov
sbb
push
sbb
repz
pop
sbbb
and
or
jo
add
jo
cli
pop
sbbb
and
push
pop
pop
adc
jbe
clc
push
ds
add
add
dec
pop
sahf
pop
rcrb
xchg
pop
fcomps
jle
loopne
jbe
call
repz
adc
and
adc
notb
js
sahf
adc
xchg
adc
mov
adc
and
add
adc
and
adc
and
adc
and
adc
and
sbb
js
xor
jg
xor
js
xor
add
add
cltd
rdmsr
std
mov
scas
xor
jns
xor
js
xor
jg
inc
cwtl
xor
cwtl
das
xor
js
xor
pop
xor
jge
xor
popf
pushl
add
popf
pop
xor
jge
xor
jge
xor
jge
xor
jg
inc
add
add
mov
add
xor
add
xor
add
xor
add
xor
add
xor
inc
xor
add
jns
jne
test
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
sti
and
add
add
jmp
add
gs
add
xor
sti
test
ficomps
pushf
mov
push
sbb
sbb
cwtl
negb
in
mov
push
sbbl
sub
pop
jns
adc
subps
popa
decb
jl
push
mov
fimuls
pushf
mov
push
bsf
add
mov
jbe
in
mov
push
push
or
pop
push
sbb
testb
sbbb
jp
push
dec
bound
pop
pop
ss
insb
and
jbe
and
ds
xor
push
adc
inc
and
adc
and
adc
ficoms
cwtl
and
adc
and
adc
push
adc
add
shlb
adc
and
sbb
jbe
and
adc
and
adc
and
adc
and
call
and
sbb
sbb
sbb
negb
jo
sahf
sbb
add
ja
cmp
test
cmp
ja
inc
cwtl
xchg
cmp
mov
cmp
add
add
ja
cmp
test
cmp
mov
pop
cmp
xchg
cmpsl
cmp
mov
cmp
dec
pop
clc
gs
repz
cmp
xchg
pop
cmpsl
lahf
cmp
xchg
cmp
xchg
cmp
ja
cmp
dec
cmp
inc
cmp
xlat
ss
addr16
add
xchg
ds
movsb
ds
mov
add
add
push
cld
aam
xchg
cli
in
mov
incb
push
adc
push
and
and
xor
xor
inc
aas
xchg
cli
push
aas
sar
fs
loope
je
mov
test
sar
xchg
aas
adc
movsb
aas
mov
inc
clc
incl
add
sbb
jmp
hlt
xor
fldl
add
ss
add
add
add
daa
add
xor
push
mov
or
int3
pop
mov
cld
pop
inc
or
pusha
xchg
or
xchg
or
fistl
popf
mov
pop
pop
pop
mov
jns
mov
xchg
cmp
sbb
xchg
jns
lsl
sbb
mov
add
adc
add
mov
and
pop
mov
insl
or
fwait
adc
insl
mov
repz
sbb
sbb
push
push
pop
hlt
adc
js
pop
sbb
sbb
aad
mov
lret
and
adc
movsl
adc
leave
sbb
add
pop
pop
dec
sbb
fcompl
sbb
add
sub
lret
adc
ljmp
repz
and
adc
sbb
sbb
sbb
sbb
adc
push
sbb
cmp
leave
cmp
cmpsb
call
cmp
mov
or
movb
sub
ss
jns
mov
lcall
add
aaa
in
out
fldl
or
mov
jp
aaa
cmp
mov
aaa
push
fwait
mov
mov
repz
scas
repz
js
xor
lahf
pop
xor
cwtl
pop
xor
mov
add
xor
inc
xor
out
xor
out
xor
xchg
in
ss
add
cmpsl
in
aaa
add
pop
aaa
xlat
in
aaa
in
aaa
xchg
in
aaa
jle
push
cmp
clc
cmp
sbb
cmpl
cmpl
and
cmp
cmp
push
cmp
cli
lea
and
push
cmp
std
aaa
cmp
sti
std
cmp
das
cmp
push
cld
mov
mov
adc
add
stos
or
push
add
adc
push
adc
jle
adc
jle
adc
popa
cwtl
pop
rcrl
mulb
push
push
pop
mov
push
mov
ret
xchg
mov
incb
adc
adc
test
sbb
jne
sbb
gs
adc
add
push
cmpsb
sbb
push
ficomps
rol
repz
sbb
push
sbb
pop
mov
pop
mov
push
adc
jo
imul
adc
add
repz
adc
and
adc
add
push
adc
add
mov
mov
xor
add
gs
push
je
rorb
or
sbb
or
or
or
sbb
or
inc
xorb
rcrl
cmp
mov
cmp
cmp
jle
aaa
mov
leave
aaa
inc
jg
add
mov
repz
lahf
mov
jae
bound
or
stos
xor
add
add
mov
fisubrl
xchg
inc
cs
xchg
inc
movsl
test
mov
jbe
das
in
jbe
xor
cmpsb
cld
cmp
mov
cmp
mov
inc
jl
xor
cmpsb
add
dec
jecxz
ds
leave
mov
in
aas
in
clc
jge
add
lock
xor
in
xor
xorl
add
pop
jmp
inc
xor
push
jmp
xor
add
pop
ss
in
out
mov
out
mov
cmp
std
fwait
cmp
add
cmp
add
cmp
add
cmp
cmp
in
mov
adc
push
adc
scas
adc
push
xchg
adc
lret
testb
ret
adc
das
adc
pop
adc
les
xchg
fwait
mov
adc
mov
inc
scas
cld
decl
or
pop
ret
pop
jae
call
pop
aaa
adc
adc
mov
add
andb
sbb
mov
and
daa
addl
add
push
movsb
push
pop
push
xlat
push
xchg
or
sbb
or
sbb
or
int
test
lock
sbb
or
sbb
jl
add
or
sbb
or
or
or
or
or
or
or
or
or
or
or
or
or
add
and
mov
mov
or
ds
mov
and
xchg
cmp
xchg
in
inc
xchg
xchg
cmp
xchg
add
pushf
enter
outsb
xor
lcall
aaa
fs
pop
cmp
iret
dec
clc
mov
mov
addr16
xchg
ss
jecxz
add
sbbl
das
sahf
sbb
cmp
xchg
push
cmp
xchg
xchg
dec
clc
add
loop
xor
out
xor
out
xor
inc
xor
call
out
xor
in
xor
push
xor
movsb
xor
loopne
xor
in
xor
jmp
xor
add
lahf
jmp
xor
out
xor
in
xor
ljmp
mov
ljmp
cli
ljmp
mov
sbb
mov
cmp
sub
dec
ss
push
ss
out
mov
cmp
or
xchg
or
ja
or
push
test
add
test
adc
leave
sub
cmpsl
ror
enter
pop
mov
push
xor
dec
add
mov
lret
mov
decl
adc
ficoml
xlat
pop
out
adc
pop
in
cwtl
pop
jp
mov
mov
arpl
mov
inc
pop
cmp
dec
pop
or
pop
pop
loopne
jg
lret
add
into
push
jge
movb
pop
dec
push
jecxz
leave
add
movsl
adc
push
add
or
add
or
or
jl
imul
or
or
jmp
rorb
dec
or
or
pop
or
or
or
or
or
or
or
or
add
sub
add
mov
pop
dec
clc
popf
repz
jg
xor
jge
xor
jge
xor
mov
sbb
sarl
js
insb
cmp
mov
roll
mov
sbb
mov
loop
mov
cmp
popf
cmp
mov
mov
xchg
test
repnz
add
test
test
ss
xchg
or
scas
xchg
mov
flds
std
xchg
ljmp
add
clc
decl
add
jbe
dec
xor
loopne
xor
xor
pop
xor
out
jecxz
ss
shll
std
in
aaa
and
sbb
sar
mov
cmp
std
bound
adc
fidivrl
add
add
in
cld
aas
aas
fwait
jnp
jae
test
xor
aas
push
std
stc
aas
mov
idiv
sub
out
xor
loopne
xor
or
sarb
push
push
mov
pop
or
mov
or
cwtl
sub
pop
subl
adc
add
jnp
adc
cli
add
push
cltd
add
pextrw
mov
mov
or
mov
or
movsl
outsl
or
movsl
jno
hlt
xchg
arpl
xchg
pop
push
or
sub
sbb
cmp
and
adc
pop
or
femms
push
or
fwait
or
loop
or
decb
add
or
pop
push
add
dec
push
hlt
or
push
repnz
push
clc
or
push
dec
or
lods
or
xor
mov
or
mov
or
or
or
stos
or
or
or
or
or
or
push
or
push
mov
cmp
cwtl
ret
cmp
add
add
mov
pusha
cmpb
cwtl
imul
gs
mov
cmp
cwtl
xor
nop
sub
cmp
subb
or
push
cmp
xchg
call
xchg
jecxz
hlt
mov
xor
xchg
sysexit
add
xor
and
xor
xchg
xor
xchg
leave
xor
add
add
test
add
cmpsl
cmp
sti
push
aas
pop
out
add
movsl
xchg
clc
incl
add
fbstp
xor
fisttps
xor
xor
in
xor
pop
xor
in
xor
loope
xor
loope
xor
loope
xor
mov
or
test
pop
loope
xor
loopne
xor
add
mov
push
dec
jecxz
xor
mulb
xor
div
xor
loop
xor
cltd
or
pop
addl
mov
jp
push
cmp
push
inc
pop
addl
bound
push
pop
ret
outsl
mov
out
pop
das
mov
dec
pop
aas
fwait
popl
inc
mov
jg
pop
add
add
jnp
push
nop
sbbl
je
or
fs
or
gs
or
push
dec
or
cmp
out
mov
mov
insl
stos
repz
cld
add
add
roll
mov
loope
cmpsl
add
rolb
jp
jle
add
adc
add
fildl
dec
adc
inc
adc
add
out
add
push
add
xchg
add
adc
add
adc
decl
fwait
mov
sysexit
addr16
addr16
movsb
or
cld
inc
or
dec
cld
mov
aaa
cld
or
lret
or
or
or
scas
xchg
mov
daa
cmp
xchg
cmp
xchg
jbe
inc
add
add
test
xor
adcl
stc
ss
mov
cmp
iret
inc
clc
or
jg
xor
aaa
xor
lahf
in
xor
sahf
push
xor
jle
and
sbb
xor
add
xor
add
xor
dec
mov
add
dec
xor
test
cmp
dec
ss
insb
sarl
ja
lods
ss
cmp
daa
aaa
fidivrl
ret
aaa
loope
in
aaa
outsb
ds
cmp
aas
xchg
cmp
aas
scas
cmp
aas
xlat
cmp
or
pop
aas
sub
std
je,pt
loope
popf
cmp
sarb
inc
jmp
add
cmp
inc
cld
cmp
mov
outsl
leave
lahf
add
mov
jge
add
out
add
addl
xchg
addl
mov
add
push
add
jnp
add
imul
mull
push
lcall
inc
hlt
sbb
mov
xor
mov
xor
insl
add
add
pushf
shl
mov
adc
leave
jl
hlt
cmp
mov
pop
jge
in
ja
enter
mov
cmpsb
repz
add
repz
add
shl
ljmp
hlt
fwait
add
cmc
mov
inc
cmc
testl
cmc
add
xchg
cmc
mov
xor
popw
mov
gs
push
clc
loopne
xor
add
add
and
xlat
testb
outsb
mull
push
jl
aaa
push
and
insb
push
cmp
mov
sar
mov
mov
stc
push
or
or
cli
push
or
clc
xchg
add
and
das
lret
xor
adc
add
cs
pop
xor
hlt
xor
leave
in
xor
out
cmp
xlat
out
lret
add
add
mov
cmp
mov
cmp
cmpsb
jl
stos
cmpsb
das
cmp
sbb
dec
xchg
push
cmp
inc
cmp
ds
jns
cmp
jno
cmp
imul
cmp
pop
cli
cmp
int3
cmp
cmpsb
inc
jg
xlat
inc
nop
cmp
inc
movsb
cmp
inc
lods
cmp
cmp
cmp
hlt
cmp
add
push
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
insb
repz
cmp
cmpsl
cmp
repz
cmp
repz
pop
inc
inc
add
ds
cmp
divb
add
fdivrs
div
jb
negl
dec
and
and
std
decl
in
inc
mov
repnz
mov
in
mov
push
lock
cwtl
adc
push
mov
in
xchg
add
mov
js
lock
stc
or
or
push
popa
xabort
pop
js
add
out
mov
add
add
mov
hlt
cmp
sti
fistl
leave
cld
js
popf
cld
test
sti
or
stc
cmp
stc
enter
hlt
stc
xchg
push
cli
icebp
clc
xchg
clc
add
mov
push
stc
popa
clc
push
stc
ss
mov
xchg
call
pushl
add
pushf
xor
aaa
jae
idiv
popf
incl
add
or
popf
stos
std
jmp
add
inc
repz
out
icebp
xchg
add
icebp
filds
add
pop
or
les
cmp
push
cwtl
cmp
inc
in
int
lahf
xor
xor
sbb
ss
getsec
bound
mov
cmp
stc
iret
aaa
push
icebp
mov
add
jo
gs
cmp
test
mov
sbb
xchg
enter
cmp
add
mov
push
xor
mov
lret
xor
jg
xor
xor
sub
add
adc
dec
inc
sub
xor
jnp
in
inc
mov
cmpsl
inc
shlb
inc
rdmsr
dec
inc
inc
xor
inc
imul
pop
inc
divl
add
add
dec
inc
xor
out
call
inc
aaa
aaa
iret
aaa
or
cltd
cmp
test
in
cmp
cmp
cmp
mov
idiv
test
add
cmp
xor
inc
inc
xor
inc
aad
jo
cs
dec
pop
xor
xor
lock
mov
cwtl
sbb
sbb
add
cltd
mov
dec
cmpl
in
xorl
repnz
pop
test
push
push
lock
or
cld
incl
dec
hlt
std
sti
mov
out
test
out
sub
mov
sahf
sti
jne
dec
testb
sub
cmp
imulb
inc
idivb
cwtl
cmc
fstl
imull
add
push
repz
push
std
cmp
movsl
negl
clc
shl
testl
inc
negl
in
xor
clc
or
stc
adc
cmp
stc
sbb
and
clc
test
cli
out
clc
sub
dec
stc
stc
stc
adc
ljmp
repz
push
add
hlt
movl
loope
mov
sub
inc
add
repz
add
rolb
xchg
repz
mov
push
ret
add
cmc
sbb
xor
pop
sub
inc
jl
sub
or
cs
jp
sub
sub
cs
cmp
movsb
mov
push
das
pop
push
dec
das
out
fsubrl
mov
std
mov
add
xor
cld
repnz
loopne
cmp
popa
cmp
xor
cmp
adc
and
xchg
cmp
jg
cmp
cmp
cmp
in
xchg
xor
jne
test
cmp
pushl
idiv
sub
inc
lock
push
xor
inc
xorb
inc
nop
aaa
add
add
xor
aaa
xchg
inc
std
aaa
cmp
push
cmp
cmp
cmp
and
ret
cmp
cmp
push
cmp
sbb
xchg
and
mov
sub
out
pop
aas
clc
decl
cld
decl
lock
out
pop
call
out
mov
je
test
add
fsubs
push
cld
and
cld
test
hlt
mov
je
cmc
dec
gs
cmc
popf
gs
in
push
push
cli
cmp
push
cli
and
movsb
sti
imul
xchg
sti
das
mov
mov
les
repz
push
clc
jmp
add
add
add
hlt
push
add
xor
hlt
repz
dec
repz
hlt
and
sub
lcall
repnz
dec
cmc
test
jmp
add
jns
das
lock
adc
xor
clc
in
cmp
in
pop
std
movsl
in
mov
std
imul
outsb
out
sbb
ja
out
std
int
fwait
cld
sbb
dec
cld
sbb
add
add
gs
add
loope
das
push
mov
cmp
out
or
mov
cmpsb
loope
loopne
fnstcw
enter
rclb
cmp
pushf
cmp
je
cmp
data16
add
scas
arpl
xor
inc
push
ss
cmp
ss
ss
add
mov
add
ss
aaa
nop
add
aaa
aaa
add
cmp
and
cmp
push
ds
aas
pop
aas
mov
pop
aas
mov
aas
es
stc
aas
movsl
maskmovq
shl
add
pop
daa
and
cmpsb
daa
cmp
sub
pop
xor
xorb
es
xor
es
xor
add
dec
es
xor
and
xor
loope
andl
sbb
xor
and
in
and
test
outsl
xor
xchg
xor
sub
iret
lahf
aaa
lock
sbb
or
sub
inc
cmpb
jle
enter
push
stc
shlb
stc
ljmp
stc
and
add
add
mov
cmpsl
stc
sahf
mov
loope
in
mov
sti
xor
fs
jge
stos
cli
mov
je
in
fs
fs
jmp
push
jl
pusha
lds
out
in
mov
in
nop
in
out
in
shr
jle
pxor
dec
out
pop
out
gs
sub
sub
add
clc
in
mov
out
xchg
leave
out
out
add
and
ds
out
jg
ret
out
add
hlt
out
loope
hlt
out
ds
sbb
shl
pop
icebp
adc
repnz
test
lock
out
lock
repnz
icebp
or
xor
ljmp
repz
shl
xchg
repz
and
cmp
mov
mov
ds
add
ljmp
xor
loope
xor
scas
xor
test
jnp
dec
xor
mov
repnz
fwait
shrb
ja
pop
xchg
fldcw
mov
jne
jle,pn
xor
cmp
xor
push
inc
xor
clc
jmp
mov
add
add
add
and
jg
add
sub
aaa
adc
cmp
lahf
cmp
sbb
mov
cmp
sbb
mov
cmp
push
leave
pop
movsb
cmp
pop
int
add
cmp
and
cmp
sbb
out
pop
and
dec
ds
and
add
and
ds
and
aas
andl
and
aas
add
aas
frstor
ret
aas
jle
aam
xchg
out
aas
mov
std
and
add
mov
hlt
jecxz
add
stc
mov
in
repz
data16
sbb
sbb
fprem
nop
cwtl
cmp
andb
adc
or
inc
stc
das
popa
dec
stc
cmp
add
popa
out
push
pop
sar
pop
sar
push
shll
cmpsb
mov
shlb
out
pop
xorb
jns
repz
or
negb
in
testb
idivb
out
jmp
jmp
jmp
jmp
in
sbb
jge
mov
in
and
add
add
pusha
jmp
cmpsl
jmp
cmp
push
ljmp
fsubrp
jnp
cmp
inc
out
call
lock
cmpsb
lock
or
aam
iret
in
imul
jae
dec
out
shr
in
push
out
es
sbb
pop
in
jmp
xchg
repz
aas
xor
cmp
sub
add
mov
sbb
add
push
mov
sub
sti
cli
sub
insl
sti
push
cs
fisubl
das
pop
loope
xor
mov
cmp
mov
cmp
stos
mov
bsf
xor
leave
test
cmp
lahf
das
clc
std
repz
jg
xor
jge
xor
pop
xor
pop
cld
xor
insb
and
xor
add
mov
lahf
xor
and
xor
and
xor
and
xor
sub
inc
and
jecxz
hlt
and
ss
and
xor
mov
jns
outsb
daa
repnz
mov
or
loope
cmp
push
pop
outsb
cmp
sbb
cmp
sbb
jmp
testl
xor
add
xchg
and
xor
and
xor
and
mov
in
lcall
pop
test
jmp
jmp
jmp
notl
out
push
jo
xchg
jmp
loop
inc
out
mov
shr
push
stos
sbb
cld
jecxz
decl
hlt
or
adc
sbb
add
jl
hlt
inc
pop
loopne
arpl
sbbl
pop
call
in
jecxz
test
add
repz
hlt
out
in
hlt
pmulhuw
das
in
cmc
dec
in
cmc
das
in
cmc
in
cmc
outsl
in
cmc
iret
in
cmc
scas
in
cmc
pmulhw
out
in
test
or
cmc
out
testb
scas
out
testl
push
testl
out
test
imulb
out
outsl
out
dec
fildll
lock
pop
out
or
push
out
and
cmp
cmp
arpl
sub
inc
jae
sub
in
icebp
sub
add
cmp
sub
mov
add
test
sub
gs
cs
cld
subb
cld
push
cs
cld
xor
mov
repz
fucomp
and
in
lock
shrb
std
mov
mov
cmp
sahf
nop
cs
sahf
jo
add
and
mov
sub
shlb
add
add
mov
and
aaa
imul
and
cmp
xor
jmp
and
or
pusha
aaa
stc
and
test
and
aaa
mov
and
aaa
sub
shlb
leave
and
aaa
mov
sbb
cmp
sbb
cmp
pop
js
sub
cmp
sbb
cmp
sbb
cmp
add
push
scas
jmp
in
jmp
les
lret
mov
in
jmp
movsb
adc
or
lock
test
in
das
test
jmp
jne
jmp
jne
jmp
gs
jmp
gs
jmp
push
pusha
jmp
push
je
decl
sbb
add
mov
add
add
mov
add
add
sbb
add
add
mov
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
mov
jmp
add
jmp
add
jmp
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
mov
add
movsl
lock
movsl
lock
mov
add
mov
add
movsl
lock
movsl
lock
jne
add
jne
add
add
add
lock
jne
add
jne
add
lock
lock
xor
lock
and
lock
xor
lock
and
lock
cmc
out
add
cmc
out
add
in
add
in
add
cmc
out
add
cmc
out
add
in
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
or
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
mov
jmp
add
jmp
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
in
add
in
add
cmc
hlt
add
cmc
hlt
add
in
add
in
add
mov
add
mov
add
movsl
hlt
add
movsl
hlt
add
mov
add
mov
add
movsl
hlt
add
add
add
jne
add
jne
add
gs
add
gs
add
jne
add
jne
add
gs
add
gs
add
xor
hlt
add
and
hlt
add
xor
hlt
add
and
hlt
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
jmp
add
add
repz
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
repz
add
add
repz
repz
repz
repz
repz
repz
repz
and
icebp
add
xor
icebp
add
and
lock
cmc
lock
in
add
in
add
cmc
lock
cmc
lock
in
add
in
add
mov
add
mov
add
movsl
lock
movsl
lock
add
add
mov
add
movsl
lock
movsl
lock
jne
add
jne
add
lock
lock
jne
add
jne
add
lock
lock
xor
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
jmp
add
jmp
add
add
repz
add
pop
or
shrl
adc
sbbl
imul
leave
xchg
lock
popf
cmp
xchg
pop
sarb
sbb
sbbl
es
xlat
insl
adc
cmpsb
xchg
cmpsb
dec
into
lret
dec
mov
inc
xchg
xor
stos
ljmp
add
add
add
mov
mov
pop
dec
cli
call
mov
repnz
jg
hlt
ja
and
cmp
push
imul
lea
cmpsl
test
fwait
xor
and
cmp
cwtl
sub
pop
xor
dec
mov
cmp
xchg
jp
into
xchg
sbb
adc
inc
mov
add
jae
sub
mov
or
add
insl
jg,pn
cmp
sti
pop
jae
je
loope
movsl
int3
les
cmp
adc
dec
xchg
push
js
jg
mov
out
bnd
movsb
mov
jmp
scas
pop
mov
add
stc
imul
sub
add
inc
js
ret
lret
sti
cmpl
dec
xchg
mov
out
adc
lea
jne
loop
push
xor
or
fwait
outsl
or
sbb
std
mov
jae
bound
xor
repz
add
xor
xor
pop
or
loop
add
add
add
xor
es
or
add
cmp
xor
in
xchg
ja
out
roll
cmp
pop
push
hlt
jo
dec
push
push
inc
or
push
push
pop
es
push
jns
mov
push
push
test
mov
push
mov
cld
jecxz
mov
stos
jp
pop
xor
push
add
add
stos
add
mov
xor
adc
fsubl
jnp
mov
mov
test
aam
sti
pop
or
push
mov
mov
imul
decl
pop
fldcw
inc
das
sub
jmp
out
push
jge
mov
push
sub
je
mov
sahf
fs
push
cmp
add
add
cmc
add
icebp
jmpw
sbbb
xor
hlt
adc
lahf
dec
or
jb
fadds
andb
iret
sub
push
mov
xchg
xchg
mov
mov
push
fiadds
mov
icebp
lds
push
loope
int3
roll
mov
repnz
dec
jne
data16
xchg
es
jo
mov
add
jb
mov
xchg
imul
and
xchg
aad
xchg
inc
dec
adc
fwait
jecxz
idivl
push
xchg
movsb
repnz
cs
or
aad
pushf
mov
scas
mov
push
ret
dec
mov
mov
and
xor
push
js
daa
inc
dec
testl
pusha
sbb
add
add
mov
or
negb
cwtl
jb
dec
lcall
gs
movsl
pop
clc
ss
les
mov
es
mov
fsub
repnz
xorl
mov
jb
fstl
and
dec
mov
mov
stc
outsl
sub
add
add
jno
icebp
cmc
in
cli
add
lods
push
mov
cmp
ret
adc
adc
jge
or
js
adc
jmp
push
test
jbe
pop
xchg
xchg
xchg
int3
jb
mov
dec
pop
out
inc
enter
popa
xor
sub
daa
and
lret
out
aad
inc
mov
add
add
jg
inc
add
outsl
in
cld
js
out
jnp
fmulp
clc
ds
dec
lock
imul
jae
les
adc
xchg
loope
int3
fdivrs
aas
aas
jle
push
pop
mov
inc
incl
sbb
pop
jle
push
inc
stos
xor
sub
xor
mov
sbb
mov
jl
cld
add
add
ret
imul
cmpb
xchg
jmp
mov
mov
ret
int3
mov
xlat
mov
jl
loopne
shl
fsts
add
push
mov
add
jl
clc
pop
test
mov
add
jl
call
cmp
jl
lock
mov
add
jl
cld
lret
mov
add
add
test
hlt
sysexit
add
xchg
jge
hlt
push
mov
dec
lock
testb
test
fsub
add
mov
push
call
phsubw
flds
mov
add
in
pop
cmpsl
in
leave
jl
or
decl
add
mov
rorb
add
fdivrs
aas
aas
jl
cmpl
clc
mov
mov
mov
clc
or
mov
push
pop
mov
pop
mov
repz
push
popf
add
cmc
inc
add
push
inc
xor
ds
mov
add
daa
cli
mov
je
add
add
mov
jl
cld
pop
jge
mov
call
mov
mov
jns
mov
inc
add
and
fdivrs
ds
vmulps
call
jl
xor
mov
or
inc
inc
inc
jp
mov
call
add
add
adcl
inc
inc
jp
cmpl
push
mov
push
jns
mov
jl
clc
je
add
jp
clc
pop
sbb
les
adc
test
or
test
mov
jp
push
sarl
add
add
add
sysenter
add
or
adc
out
mov
repnz
cld
fwait
inc
add
pop
scas
adc
hlt
add
mov
std
ljmp
ret
int3
pop
aas
aas
aas
jp
mov
push
dec
mov
mov
int3
fdivrs
ds
ds
add
cmp
cmpl
jns
mov
jl
mov
add
mov
or
jns
or
xor
mov
add
inc
js
add
mov
or
lea
cld
pop
cmpsl
hlt
cmp
mov
mov
add
mov
mov
cli
xorb
mov
jns
lock
or
add
mov
mov
jns
or
mov
dec
clc
pop
clc
adc
dec
jecxz
dec
test
or
loop
dec
les
or
js
or
sti
jmp
mov
js
cmpl
inc
xchg
jp
in
mov
add
test
dec
call
add
add
mov
lock
add
ja
add
dec
lock
adc
sub
add
jbe
push
pop
mov
add
mov
inc
add
adc
pop
adc
popa
pop
mov
ja
or
pop
in
pop
pop
cmpsb
loopne
dec
sti
add
jl
hlt
pop
mov
add
sti
add
add
or
add
jns
mov
mov
adc
rorl
add
mov
mov
ja
add
jg
subl
decl
pushl
mov
movsb
call
adc
mov
push
adc
add
mov
add
add
pop
mov
push
mov
idiv
mov
mov
mov
mov
jl
mov
incl
hlt
pop
mov
mov
push
nop
mov
adc
xor
jle
pop
dec
aaa
jle
cmpl
push
incl
jl
clc
je
add
jle
clc
pop
sbb
std
repz
add
cld
pop
mov
add
pop
mov
push
lret
lahf
hlt
mov
vmulps
mov
lret
mov
jl
add
xor
ret
int3
dec
cmp
int3
fnstcw
js
mov
mov
pop
mov
mov
sarl
pop
mov
inc
hlt
pop
scas
in
mov
testl
jge
clc
add
repz
adc
add
mov
jl
sbb
jl
clc
pop
mov
mov
push
les
add
repz
mov
mov
jl
mov
mov
int3
cmp
shlb
mov
xor
pop
aaa
aaa
add
dec
aaa
jl
mov
sti
cmp
test
mov
sti
jmp
daa
hlt
mov
cmpsb
ret
int3
push
aaa
aaa
jl
cmp
mov
add
fmuls
xchg
hlt
push
cmp
sahf
loopne
dec
adc
mov
fisttps
or
add
jl
test
mov
push
movsb
div
incl
add
adc
fwait
add
mov
push
push
push
dec
lock
adc
xchg
movsb
mov
mov
clc
orl
inc
and
add
mov
or
lea
pop
mov
cmp
jae
pop
mov
andl
dec
jp
call
pop
mov
add
mov
inc
adc
mov
test
mov
ret
sbb
mulb
inc
je
inc
or
mov
add
cwtl
mov
clc
adcl
dec
fs
sub
jp
in
sbb
cld
xor
test
nop
fwait
or
int3
repz
push
and
sti
decl
jb
or
add
mov
rep
or
clc
xchg
mov
push
incl
test
mov
add
mov
mov
mov
dec
xor
push
dec
lock
outsb
mov
sbb
push
fwait
add
mov
mov
mov
lock
vmptrst
repz
cltd
inc
push
pop
scas
hlt
push
add
add
cmp
jge
iret
repz
jnp
fadds
lahf
fmuls
enter
pop
mov
mov
push
mov
push
mov
mov
clc
or
mov
jo
movsb
mov
add
inc
lret
lods
js
fmuls
xrelease
js
loopne
outsl
mov
fadds
das
inc
mov
js
mov
add
add
fidivrs
repz
mov
pop
push
call
comiss
adc
mov
mov
jo
movsb
add
xlat
mov
push
pop
test
dec
repz
mov
mov
clc
adc
mov
push
mov
cli
inc
outsl
mov
and
mov
mov
add
mov
clc
or
mov
outsl
push
test
mov
mov
testb
outsb
push
pushf
add
pmaddwd
dec
ja
or
pop
mov
clc
xor
adc
sti
push
push
decb
mov
mov
add
ret
add
mov
das
outsb
in
push
jmp
inc
shlb
int3
pop
outsb
in
inc
stos
mov
pop
loope
mov
mov
jecxz
pop
pop
dec
das
outsb
in
hlt
movl
mov
repz
call
getsec
or
test
mov
repz
mov
add
mov
outsb
in
clc
mov
add
add
shll
add
push
incl
add
add
mov
or
repz
mov
jno
clc
add
mov
repz
mov
mov
inc
mov
add
mov
add
add
fldln2
mov
add
pushf
mov
repz
lea
jns
mov
push
xchg
mov
repz
adc
pop
mov
insb
ds
dec
or
add
hlt
inc
add
out
mov
mov
xchg
cmp
inc
mov
mov
add
add
or
les
notl
das
aaa
mov
push
mov
call
getsec
std
mov
add
and
clc
adcl
mov
popa
add
mov
mov
push
call
getsec
add
dec
in
imul
cmpsb
lock
insb
loopne,pt
add
pop
insb
inc
fcompl
cmpsl
sti
mov
add
push
movsl
mov
mov
ds
mov
inc
push
insl
inc
add
addr16
jmp
mov
add
insl
dec
in
mov
mov
imul
lock
mov
xrelease
or
add
clc
addl
into
testl
jae
push
mov
inc
sti
mov
in
insb
inc
add
push
clc
or
repz
xchg
push
mov
inc
je
or
cmp
adc
arpl
mov
ret
mov
or
clc
add
add
in
imul
add
sbb
jge
cltd
divl
shl
mov
getsec
std
xorb
insb
or
insb
cmp
std
lret
std
mov
pop
xor
pop
sbb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
adc
nop
xor
rcrl
lock
mov
int3
jmp
sbb
cli
aas
and
add
mov
add
add
xchg
ret
push
xor
ret
xor
ret
stos
xor
ret
mov
sub
xor
rolb
jb
sub
add
add
or
mov
popf
mov
push
mov
shll
mov
inc
ss
pop
ss
ret
cmc
shll
xor
hlt
ss
ret
outsb
ret
mov
jne
or
ret
sahf
aaa
in
scas
aaa
inc
ret
mov
aaa
ret
jmp
ret
add
add
mov
adc
mov
lret
insb
cmp
lret
jl
repnz
lret
cmp
lret
in
cmp
int3
adc
jne
and
push
int3
inc
cmp
int3
pop
cmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
