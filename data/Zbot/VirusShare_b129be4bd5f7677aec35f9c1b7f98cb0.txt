mov
std
call
in
add
call
pushl
pop
adc
leave
ret
push
fistpll
in
not
mov
add
dec
neg
leave
ret
adc
movb
flds
fcmovu
outsl
psadbw
in
iret
and
stc
inc
dec
adc
pop
sti
aas
lock
add
inc
neg
add
sub
loopne
adc
pop
sub
lea
push
jo
push
hlt
push
pop
fs
jbe
and
push
mov
std
add
inc
clc
push
sbb
cmp
add
mov
imul
jl
xchg
xchg
repnz
neg
inc
add
mov
dec
test
add
jbe
lods
or
inc
pop
dec
inc
mov
outsb
fsubrs
inc
dec
inc
mov
ss
aaa
xchg
negl
lcall
mov
add
push
jnp
out
lret
idiv
dec
data16
push
mov
inc
mov
or
outsl
movl
negb
in
dec
add
adc
xor
pop
mov
pushl
add
dec
pop
inc
dec
inc
add
push
dec
fstpt
lock
push
clc
push
call
test
cmp
in
adc
inc
scas
pop
push
and
lock
ret
dec
sub
sub
sub
insl
mov
in
push
push
aam
dec
adc
notl
inc
add
dec
xchg
das
push
inc
and
dec
or
sidtl
mov
rcrb
fimuls
enter
or
jbe
pop
ret
push
inc
sbb
add
push
mov
dec
xor
sub
ds
jne
inc
dec
adc
icebp
mov
pop
mov
xchg
icebp
mov
fimuls
dec
imulb
push
mov
out
xchg
in
push
outsl
dec
jbe
push
add
add
arpl
aad
inc
pop
pushf
loope
or
clc
push
frstor
jbe
push
lret
dec
lock
add
mov
push
push
sbb
in
push
cmpsl
mov
mov
aaa
in
inc
in
sbb
inc
lock
decb
cmpsb
loopne
repnz
sbb
add
inc
popa
mov
jb
std
flds
and
push
shrl
add
xlat
call
aaa
inc
mov
and
inc
dec
inc
or
or
xchg
fneni(8087
pop
ret
daa
loopne
daa
cmp
mov
dec
mov
outsl
movsb
inc
in
push
push
sbb
in
jae
fs
xor
inc
dec
data16
push
test
lcall
movsl
popa
mov
dec
mov
dec
adc
fwait
mov
xchg
sub
mov
dec
sub
lods
movsb
inc
lret
fs
in
adc
ss
sbb
jne
push
fildl
repz
imul
sahf
fimuls
push
ret
shll
rorb
mov
mov
fisttpll
loopne
push
pop
xchg
lock
xchg
imul
cmp
mov
dec
mov
dec
sbb
dec
inc
adc
dec
jmp
adc
push
imul
push
fisttpl
lods
sub
lock
in
push
jb
push
scas
adc
sahf
mov
jmp
clc
lods
lods
popa
insb
cmp
xchg
cmp
fxtract
or
rol
sbb
das
fmull
cld
inc
xor
inc
dec
or
lret
mov
popf
leave
rcr
nop
test
inc
fld
fistl
rorb
adc
enter
mov
pop
repz
adc
outsl
inc
pop
mov
sti
mov
dec
cmp
adc
push
ss
and
dec
mov
cmpsl
imul
icebp
dec
or
jne
mov
inc
imul
sub
mov
ja
ja
mov
in
and
dec
mov
popa
negl
add
add
aam
pavgb
sbb
cmp
jne
mov
rorb
dec
add
mov
fst
sub
or
add
dec
dec
fidivl
in
roll
shlb
or
mov
or
inc
add
inc
into
inc
dec
xor
fdecstp
or
js
add
clc
lea
push
lea
push
and
cwtl
xor
ja
jp
lods
mov
inc
push
sbb
stc
fs
bound
push
cli
aas
pavgb
mov
imul
add
inc
sbb
fidivrl
ret
fimuls
out
sbb
lock
mov
and
rorl
inc
adc
jne
lret
xor
rclb
and
in
imul
xor
fidivl
subl
std
and
in
pop
sbb
in
sti
sbb
push
and
push
subl
out
js
das
add
cmp
loope
add
mov
mov
push
dec
pop
repz
mov
push
xor
sbb
fiaddl
cmpsl
loopne
clc
fisubrl
orl
xor
outsb
sbb
lret
jp
jmp
xchg
test
sbb
rolb
push
daa
sti
pop
jmp
ret
add
inc
sbb
xchg
jbe
sbb
cwtl
sub
std
clc
push
and
xor
rcrl
cmp
lods
and
lods
dec
dec
lock
push
lret
dec
pop
sbb
dec
and
fldcw
test
stos
icebp
mov
mov
inc
rcr
rorl
dec
pop
inc
leave
aam
xorl
lds
hlt
push
push
mov
cmp
inc
arpl
fidivl
or
fidivrl
cld
loop
mov
popa
pop
es
loopne
in
lock
rcll
cmp
jo
aaa
ds
pop
daa
adc
call
dec
inc
pop
call
mov
filds
popa
outsb
dec
cmp
pop
hlt
test
and
in
ja
and
sbb
addr16
imul
inc
or
inc
ficoml
inc
lret
insb
loopne
or
nop
inc
push
fmuls
sbb
push
clc
jp
push
jnp
cmp
bound
inc
shl
roll
mov
shll
jbe
out
sbb
pop
or
push
push
fimull
sub
inc
sahf
lods
icebp
stc
into
cltd
inc
mov
ficomps
das
mov
cmp
pop
ret
mov
push
sub
aas
test
push
push
xchg
inc
pop
push
dec
inc
or
push
mov
push
cmp
filds
es
lahf
mov
inc
sti
fnstcw
add
or
pop
sbb
jecxz
push
insb
push
push
and
outsl
mov
lcall
add
shl
outsb
flds
push
inc
and
jb
or
jecxz
adc
inc
add
insb
cli
pop
pusha
imul
cmp
mov
sub
mov
roll
repz
arpl
out
jo
adcl
lods
push
clc
cs
jne
or
add
fisubl
outsb
testl
or
push
test
mov
push
bound
test
in
fstps
inc
jecxz
jo
aaa
adc
xor
add
jge
inc
inc
jo
pop
inc
insb
push
nop
mov
xor
rorb
je
or
jbe
stc
dec
repnz
neg
inc
push
mov
cltd
enter
shl
pop
lods
in
fisubrs
xchg
imul
int3
pop
int3
clc
jge
inc
js
fcomip
jb
xor
or
pop
repnz
inc
decb
test
xchg
ret
fisttpll
mov
scas
xchg
inc
icebp
stos
repz
rolb
out
xchg
pop
fnstcw
adc
pop
lahf
or
decb
cld
dec
dec
push
lcall
sub
in
fidivl
mov
dec
test
jbe
pusha
fisubl
jl
or
jmp
push
call
sti
lea
outsl
dec
dec
or
dec
inc
lea
push
push
and
daa
or
push
test
rorb
xor
sub
sbb
jnp
aas
ss
lods
cmp
call
and
sbb
xor
aad
pop
dec
or
pop
sbb
mov
add
xchg
fldcw
dec
outsl
mov
and
sbb
es
and
in
rorl
mull
shlb
and
ss
xor
push
or
sbb
push
js
jae
outsb
dec
push
ret
push
push
cld
sbb
jnp
add
jo
ret
repnz
and
pop
daa
mov
popf
pop
in
jb
dec
mov
add
jb
mov
cwtl
pop
js
push
or
adc
dec
mov
stc
dec
xchg
fidivrs
mov
imul
hlt
or
out
or
mov
jle
inc
in
sbb
cs
mov
fs
push
insb
xor
push
cwtl
int
in
push
inc
int
int
movsl
js
xor
add
xor
fistpl
adc
mov
mov
rorb
daa
jl
movl
imul
mov
rorb
add
mov
fucompp
inc
mov
insl
mov
xor
fcmovnbe
xchg
xlat
mov
mov
dec
push
xor
sbb
seta
ljmp
mov
fadds
jmp
sbb
pop
rorl
call
sbb
or
cwtl
push
lret
and
aam
rcr
xlat
sbb
inc
testl
insb
inc
insb
ret
mov
dec
push
adc
xor
xchg
jecxz
and
xchg
pushf
jbe
lret
or
cmp
rcll
pop
pop
cld
adc
and
jb
jbe
jo
scas
sub
mov
sub
adc
div
sbb
jne
mov
and
imul
mov
lock
aaa
push
rcl
inc
inc
xchg
dec
inc
pop
or
inc
push
insb
push
xlat
mov
cmp
fimull
add
movl
inc
dec
jl
shr
mov
push
or
sbb
jbe
or
inc
cld
aas
pextrw
dec
pusha
cmp
jne
add
shr
jb
sti
inc
andl
push
add
pusha
xor
stc
cmp
xor
sbb
test
pop
xchg
push
or
ss
mul
mov
scas
and
shl
lea
push
test
data16
dec
mov
cmc
push
adc
enter
jbe
inc
repz
add
pop
into
sbb
and
push
hlt
sub
fdivs
fmuls
dec
lret
test
pusha
dec
xchg
jne
ret
dec
clc
pop
addb
add
push
inc
sbb
clc
mov
xchg
stos
jb
sbb
sbb
aas
mov
cld
sbb
add
dec
das
faddp
add
lock
cmp
jne
xor
cmp
xchg
cmc
sti
pop
cmpsl
inc
push
dec
add
addr16
push
xchg
into
xor
inc
jbe
add
xor
inc
push
jmp
xor
lcall
jns
in
hlt
mov
cmp
call
xchg
ss
imul
repnz
cmp
flds
jl
mov
popf
nop
pop
cld
sbb
or
aaa
je
movsb
push
dec
push
sub
jecxz
pop
dec
sahf
cmp
xchg
rolb
push
sub
or
dec
push
cmp
mov
push
outsb
pop
add
ss
push
adc
test
nop
imul
rolb
push
lcall
pop
inc
dec
sarb
es
push
add
sub
cltd
sub
bound
jne
shl
inc
mov
push
rorb
ret
push
sub
adcb
xor
rol
cmp
mov
dec
and
lret
fadds
les
ljmp
xor
jmp
lahf
push
cmp
sbb
jmp
fsubrl
inc
sbb
inc
or
in
mov
or
sbb
jecxz
dec
imul
js
push
int3
outsl
bound
inc
mov
xchg
jl
sbb
ret
shrl
dec
fldenv
test
mov
outsl
mov
lcall
loopne
adc
jl
mov
stc
cmp
inc
sbb
dec
dec
mulb
sbb
or
xchg
inc
mov
add
and
stos
push
out
stc
xchg
jo
sub
dec
pop
mov
push
add
jmp
xchg
ds
add
push
mov
push
inc
loop
xchg
ljmp
pop
inc
imul
xchg
pop
insl
adc
lret
add
pop
mov
sbb
dec
or
mov
sbb
inc
jnp
popa
nop
loopne
cmpsb
mov
pop
in
xchg
icebp
arpl
mov
inc
adc
hlt
xlat
push
movsb
sahf
adc
adc
fmuls
rclb
dec
and
mov
insl
push
fmuls
clc
mov
push
loope
mov
pushf
movsb
cmpsl
or
dec
popa
pop
adc
cmpsb
ljmp
in
fadd
rolb
dec
mov
mov
into
rorb
mov
insl
xor
or
lahf
mov
sbb
dec
lock
jp
xor
add
pop
test
dec
add
mov
dec
insb
jae
sub
cli
xchg
inc
sbb
ret
add
xchg
cmp
jp
jo
icebp
pop
dec
add
aaa
inc
sbb
aam
push
dec
mov
rcrl
fwait
cmpsb
xor
shrl
cmc
mov
xor
lock
push
aaa
or
dec
inc
loope
rol
dec
fdivl
ljmp
leave
out
gs
push
sub
xorl
sbb
mov
add
mov
sub
or
pushf
ret
gs
imul
inc
inc
stc
jo
jbe
ficoml
xchg
in
movsl
push
dec
add
inc
inc
jbe
adc
jb
inc
and
adc
jmp
outsb
pinsrw
int
mov
adc
addb
or
pop
sti
xchg
aad
add
clc
fisttps
lods
js
mov
sbb
add
aad
aad
add
aas
insl
xchg
push
stos
pop
or
dec
dec
pop
mov
mov
cmp
xor
pusha
push
push
cs
pop
roll
outsl
lret
sub
sbbb
jo
fldenv
jle
movsb
test
insb
dec
aad
rcll
and
sub
mov
mov
sahf
pushf
fs
sub
inc
and
add
bound
pushf
jno
loopne
repnz
add
add
sub
test
xchg
mov
rolb
push
or
sbb
jmp
mov
add
and
sbb
push
inc
dec
add
imul
stc
add
sub
loopne
jo
xchg
push
mov
pop
xorl
mov
push
xor
dec
imul
add
sbb
cmp
imul
xchg
push
loop
xor
rol
outsl
insb
adc
adc
push
cmpb
dec
inc
clc
add
dec
stos
sbb
inc
lds
addl
cmp
push
sub
sub
loopne
ss
fimull
mov
jne
aaa
mov
push
push
iret
cmpsb
add
js
dec
call
rol
mov
push
inc
xchg
inc
adc
jb
pop
and
scas
fildl
sti
scas
adc
or
and
in
jb
or
or
js
pop
xor
fs
dec
inc
push
sub
ret
addb
sahf
popa
pop
insl
sahf
mov
cmc
aaa
mov
xlat
mov
sbbl
scas
outsl
nop
jl
movsl
cmp
mov
push
inc
inc
push
dec
inc
mov
in
inc
adc
lea
xchg
mov
push
or
xor
pop
dec
sub
push
sub
push
scas
sub
movsb
push
add
sub
divl
insl
push
cmpsb
mov
xor
add
ja
shll
jge
call
inc
leave
or
sbb
ret
loop
and
cli
dec
int
mov
adc
sub
cld
popa
dec
push
gs
mov
inc
add
push
pop
mov
es
in
adc
imul
inc
sub
push
movsl
sbb
add
in
add
cmp
push
setns
imul
push
cmpb
and
js
enter
add
inc
fwait
loopne
outsl
jle
jns
scas
xchg
push
js
push
sbb
mov
and
and
push
movsb
dec
call
flds
ja
dec
or
popf
popf
add
push
adc
adc
lret
andb
cmp
sbb
jmp
dec
mov
push
xchg
inc
push
mov
push
xor
mov
in
adc
rolb
pop
add
and
lock
out
adc
dec
inc
movb
pop
shlb
fdivs
dec
jp
push
xor
push
adc
rorl
cmp
and
notl
mov
sbb
xor
mov
add
addr16
call
popa
xchg
inc
sti
jae
push
ja
jmp
inc
ds
mov
pop
scas
mov
loop
ljmp
pop
fsub
xlat
dec
cmp
add
imul
xlat
movsl
ret
sbb
add
out
add
cmpsl
iret
ja
das
call
popa
rorb
sub
add
outsb
xchg
push
and
push
dec
in
cs
in
sub
push
ret
imul
sbb
add
xor
mov
mov
ss
popa
or
ss
cmp
cld
daa
inc
outsl
scas
in
mov
loopne
inc
push
lock
ja
mov
or
rcll
cmp
sbb
inc
repnz
icebp
aas
jge
cmp
push
push
push
jae
and
pushf
dec
inc
lock
iret
cmpsb
adc
repnz
fs
hlt
push
imul
dec
jbe
mov
les
cmp
cmpsl
and
push
xchg
insb
pusha
sti
subl
inc
orl
push
popa
les
ret
xor
lods
and
orb
roll
std
stc
fimull
pusha
sub
add
xor
xlat
or
stos
sbb
loop
jo
mov
sbb
dec
ret
mov
fld
loopne
mov
cmpsl
push
inc
push
pop
push
es
sahf
mov
or
xlat
pop
js
adc
pusha
not
inc
js
cltd
mov
ret
dec
mov
lods
fadds
and
pop
stos
add
addr16
dec
in
push
inc
pop
cmp
add
inc
hlt
testb
xor
ja
xchg
push
jecxz
daa
fisubrs
lahf
js
sub
pop
dec
xor
xor
or
cld
inc
sbb
rcl
push
mov
in
nop
ja
mov
xor
dec
in
push
jnp
lds
pop
mov
pop
dec
aaa
and
xor
mov
addb
fcmovnb
xor
mov
call
and
into
test
lret
push
aas
pop
inc
lcall
add
push
sbb
adcl
jo
adc
js
mov
and
test
xchg
arpl
sbb
adc
mov
int3
test
leave
inc
dec
xor
push
add
icebp
cwtl
mov
sbbb
add
xchg
push
sbb
rol
and
add
mov
mov
push
xchg
je
push
sbb
rorb
or
dec
sub
lcall
mov
out
loopne
roll
sahf
add
sbb
into
xchg
pop
lea
push
lea
jl
ds
addl
mov
rorl
push
inc
add
xchg
dec
int
loopne
stc
fwait
adc
add
or
mov
nop
push
cmp
inc
add
pop
dec
jb
lds
add
add
ds
sbbb
jmp
push
xchg
push
push
test
mov
cmp
dec
jb
pop
jbe
mov
jb
dec
inc
jecxz
or
add
xor
and
pop
loope
icebp
push
lret
xor
add
inc
loopne
and
fdivl
movsb
xchg
sbb
cmpsb
pop
aam
pop
addr16
cltd
mov
leave
addl
push
push
push
cmp
addb
dec
loopne
jg
sbb
ja
pop
das
and
dec
inc
or
push
arpl
or
lcall
xor
aam
dec
mov
and
sbb
inc
sbb
ficoms
inc
sub
or
mov
out
jo
sbb
repz
sub
jmp
rcl
out
and
je
sbb
mov
dec
call
subl
mov
pop
pop
inc
and
add
dec
lods
adcl
jns
add
mov
jno
lods
mov
inc
popf
sbb
mov
add
add
pop
inc
imul
pop
add
add
out
test
sbb
add
add
inc
add
push
bound
adc
popf
or
xchg
insl
adc
mov
test
cwtl
add
or
lsl
pop
or
mov
lods
mov
addr16
add
adc
push
mov
flds
inc
jae
sti
mov
scas
add
cld
movsb
add
leave
lds
fisubrs
xor
loopne
xchg
es
dec
out
test
imul
orb
add
jne
loope
mov
rolb
int3
add
or
pop
cmp
jle
pop
pop
add
push
add
test
jbe
sub
outsl
loope
es
add
sub
add
jnp
dec
aas
or
testl
adc
sbb
sbb
sub
outsl
outsl
aas
cmp
add
xor
js
fildll
pop
push
nop
mov
clc
add
add
in
repz
mov
lcall
imul
push
xchg
push
test
frstor
add
rcrb
int
subps
xor
lock
mov
or
rorb
push
jle
iret
sbbb
or
xchg
pop
jno
ret
clc
add
push
stos
lods
add
jbe
imul
push
push
icebp
sbb
or
popa
add
idivl
fcmovbe
sbb
lock
popf
sub
outsl
adc
pop
add
sub
fsub
mov
mov
or
popa
jl
add
or
aaa
add
dec
sbb
sarl
mov
and
mov
sahf
in
je
xlat
jo
cs
adc
cmp
mov
jo
pop
addb
xchg
andb
mov
lock
in
sub
icebp
dec
add
mov
mov
fcomps
shrb
mov
jae
sub
in
add
fucomi
mov
add
mov
ja
sub
pop
les
roll
dec
ss
popa
fwait
sbb
push
fsubrl
fisttps
pop
stc
vmread
insl
fcomps
push
and
cli
cmpsl
pop
negb
jle
daa
and
shlb
mov
add
call
jns
add
loopne
push
shlb
insb
imul
jo
inc
add
lods
int3
sub
push
push
in
hlt
lret
push
incb
ds
mov
mov
or
pop
outsb
jmp
and
add
or
sub
test
jmp
rorb
arpl
add
jo
jnp
fstpt
jnp
inc
into
jecxz
mov
xchg
out
movsl
xchg
cmp
adc
ja
mov
negl
inc
rorl
das
mov
or
mov
and
jb
push
xchg
sahf
lods
clc
sub
pop
rcrb
fs
push
fmull
movsl
jne
adc
mov
in
adc
stos
popf
push
sub
in
js
lcall
insl
xor
mov
loope
arpl
imul
xlat
in
xchg
sub
in
out
or
pop
shrl
addb
mov
ret
pop
mov
and
addb
repnz
dec
fcoms
std
fnstsw
gs
sbb
push
sbb
adc
or
cwtl
jne
sub
add
fcmovbe
roll
add
pop
xor
mov
xlat
in
dec
test
adc
jecxz
add
push
fsubs
or
enter
fldt
inc
xchg
xor
mov
aad
adcb
cld
jnp
mov
and
add
add
sbb
xchg
push
loopne
inc
sub
gs
xor
lcall
jge
pop
cmp
imul
or
jnp
lea
or
punpckhbw
pushf
popa
imul
jns
jne
aad
pop
inc
iret
add
adc
stos
or
aam
dec
lock
jl
loope
sbb
pop
or
mov
adc
jbe
popf
xchg
jns
jo
lret
xchg
sbb
and
jmp
mov
ljmp
into
mov
and
push
ds
inc
jle
fdivrs
test
stos
xchg
popa
mov
test
inc
xor
in
fdivr
pop
xlat
aas
icebp
mov
add
fcomps
imul
je
or
clc
pop
ficoml
xlat
cmc
mov
or
mov
cld
insb
lahf
lret
xchg
and
rorb
sub
sbb
push
xor
lret
jne
sbb
scas
jmp
cmp
movsb
pop
ret
lods
lds
sub
push
xlat
daa
shll
jnp
das
scas
lock
jp
add
add
pop
cld
cwtl
adc
je,pn
scas
jle
data16
data16
sahf
inc
push
jecxz
pop
in
push
popa
iret
sub
xlat
sbb
inc
fsubrl
dec
clc
lods
or
roll
maskmovq
negl
sub
adc
mov
sbb
jno
sbb
js
hlt
and
das
xchg
imul
adcl
sbb
lea
mov
sub
jmp
adc
cli
lea
fldt
fdivs
mov
roll
cmp
add
sub
or
loop
jge
outsl
test
cmpsb
xchg
mov
test
aaa
xor
and
lret
ja
lds
sti
jae
ret
cmp
add
sbb
call
or
fmul
mov
out
outsl
insb
sarb
mov
mov
insb
mov
or
dec
xlat
outsb
jae
cmpsl
xlat
dec
xchg
orl
ret
insb
jo
jecxz
mov
xorl
xchg
push
dec
dec
sbb
rcrb
sbb
rol
popa
push
sbb
cmp
jne
jmp
sahf
jb
je
mov
sbb
in
adc
sbb
lahf
ds
icebp
xor
xor
pop
es
aaa
pop
stos
sub
das
mov
aad
cwtl
int
pop
les
incb
sub
mov
inc
add
mov
pusha
lret
ja
call
sti
add
pop
clc
and
mov
shll
lret
cmp
scas
jge
mov
mov
push
adc
shrb
mov
adc
cmp
jo
lods
outsl
inc
cmpsb
outsl
dec
sbb
imull
cmc
adcl
mov
imul
or
sub
ljmp
add
in
jo
out
fsts
jns
jg
push
out
ret
push
jns
in
xlat
xor
mov
push
mov
cmpsl
jne
notl
fstpt
lods
imul
nop
xor
les
hlt
or
stc
loopne
in
jb
mov
adc
inc
sub
imul
jmp
push
lea
and
mov
test
fcmovu
push
loope
jae
pop
push
in
mov
xor
add
or
dec
pop
pop
lds
mov
pop
icebp
xchg
mov
xlat
sbb
pushf
test
sahf
ss
repnz
daa
add
push
into
sub
dec
push
fcomp
sbb
into
addl
mov
and
out
mov
push
mov
shrb
xchg
xchg
fistpl
jp
loopne
and
insl
cmp
lcall
sbb
sarb
add
gs
insb
cmpsb
sbb
out
jnp
dec
daa
dec
push
cmpsb
mov
das
adc
add
and
sahf
push
and
cmpsl
test
mov
pop
bound
pop
insl
or
or
cmp
inc
cs
jecxz
jno
clc
mov
jmp
jp
and
inc
insb
sbb
push
mov
cmp
xchg
mov
xor
mov
pop
push
mov
xor
pop
or
lret
popa
test
loopne
dec
push
out
inc
pop
inc
jbe
xchg
into
xchg
pop
lods
imul
sbb
das
push
mov
ret
popa
mov
fdivl
stc
fcos
or
ss
push
jo
orl
pop
mov
and
inc
fsubrs
xor
out
das
mov
jle
jb
xchg
push
cmp
mov
loop
cmp
xor
jne
stc
hlt
sub
ret
add
cli
fstl
xchg
mov
outsb
insb
sbb
popf
fnsave
mov
test
dec
push
in
and
out
int3
adc
call
mov
das
mov
ljmp
lock
fs
push
adc
mov
and
test
in
ljmp
mov
sti
push
jg
cmp
jnp
push
push
jbe
js
ret
xchg
add
mov
ja
adc
sub
aaa
mov
movsb
pop
xor
mov
mov
dec
int
popa
loope
aam
je
sub
or
or
jle
pop
cmp
cmp
push
out
fdivrs
xor
sub
xor
sub
pop
pop
fildl
ljmp
add
repnz
push
and
andb
stos
pop
push
mov
js
mov
adc
movsb
roll
cmp
mov
adc
and
rcrl
out
in
and
dec
pop
adc
mov
sahf
aad
rcll
adc
imul
int
pop
and
lods
pop
xor
sti
js
push
rorb
xchg
lds
loopne
sub
nop
stos
nop
mov
lods
xchg
fs
clc
add
sbb
push
insb
jp
add
nop
test
and
sbb
iret
xor
xor
mov
es
dec
aad
xlat
push
test
sbb
mov
out
hlt
xor
dec
insb
cwtl
test
in
add
data16
jle
mov
jle
andl
adcb
jp
dec
inc
cs
in
pop
in
xchg
cmp
insl
insl
loope
in
push
mov
inc
insl
cmp
sbb
cli
pop
mov
fwait
or
pop
movsb
orb
add
data16
mov
jo
cmc
lcall
add
in
mov
popf
test
jb
xor
add
or
aam
adc
les
popa
popa
pop
fldcw
add
adc
pop
jmp
loop
push
sbb
outsb
dec
mov
and
push
mov
test
movsb
data16
fnstenv
cmc
stc
es
test
stos
mov
pop
lea
cmp
sub
lock
mov
sub
dec
into
push
nop
cmpsl
jecxz
outsb
adc
je
pusha
push
and
dec
jo
mov
pop
test
sahf
insl
xor
dec
jg
lea
mov
xor
push
sub
push
and
lret
adc
or
sbb
dec
mov
sbb
cmpsl
in
and
inc
xchg
popf
inc
xor
rol
xchg
mov
adc
arpl
mov
xchg
mov
inc
cmpsb
or
or
cmp
mov
xchg
imul
sub
add
jnp
xchg
imul
add
jae
or
scas
or
movsb
ror
mov
sbb
inc
repz
add
pop
ja
test
into
in
into
jl
negl
test
out
add
pop
int
sub
mov
or
push
scas
outsl
xchg
andl
and
mov
sbb
lock
ss
inc
cmp
push
jbe
jp
and
dec
ljmp
daa
pop
fidivs
cwtl
dec
in
pop
jmp
fildl
pop
test
mov
inc
mov
jbe
out
adc
dec
insb
in
and
nop
jb
cli
lock
pop
rclb
sbbl
and
mov
sti
divb
mov
add
jne
mov
push
add
sbb
lea
mov
int3
adc
jge
jne
jno
mov
mov
leave
xlat
lds
repnz
add
rcrb
dec
dec
sti
das
insb
pop
mov
sub
and
icebp
push
push
push
mov
les
icebp
icebp
cmp
xchg
mul
loop
repnz
mov
mov
mov
sbb
dec
mov
sbb
lds
jl
lods
cmp
sub
sbb
ss
mov
nop
adc
ljmp
xchg
add
push
fistpl
and
add
push
mov
push
push
aaa
mov
jp
push
mov
in
faddl
cmp
mov
inc
insb
xchg
test
lds
mov
mov
bound
inc
cmpsb
loop
data16
mov
movsl
mov
sarb
mov
insl
daa
clc
xor
rclb
jne
in
add
inc
push
mov
adc
sbb
cmp
in
cmp
pop
sbb
dec
sub
es
pop
fistpl
xchg
inc
mov
dec
xor
sti
loope
jne
cmp
in
pop
loopne
add
mov
dec
out
inc
rcll
jmp
and
inc
jnp
or
mov
mov
cmpl
rol
pop
imul
mov
pop
std
scas
or
and
ss
push
mov
cmp
dec
or
scas
movsl
inc
test
jle
pusha
fadd
add
nop
andl
inc
pop
dec
lock
sbb
add
pop
ret
shr
fildll
sbb
xor
dec
repz
jl
xorl
inc
rclb
call
cltd
mov
mov
icebp
pusha
mov
or
enter
lcall
out
sub
jo
outsl
or
push
rcll
fsubrl
pop
movsl
push
jnp
jae
notb
pop
sbbl
xchg
fstpt
pop
xor
icebp
cmpl
xor
mov
mov
jbe
pop
or
push
pushf
sub
ja
and
push
shlb
mov
inc
or
jmp
cmpsb
daa
mov
jg
and
mov
into
inc
gs
stc
mov
pop
sbb
push
out
pop
dec
icebp
add
loope
jge
add
call
jbe
icebp
dec
push
fnstsw
dec
and
fldcw
or
pop
xchg
sub
fdivr
shlb
iret
adc
ss
pop
add
and
pop
and
data16
pop
adc
mov
cld
mov
lret
and
jge
cli
std
insl
pop
loope
arpl
bound
imul
pop
xor
imul
sub
push
xchg
pop
cmpsl
mov
into
xchg
sbb
pop
repz
sbb
lret
push
lcall
or
sti
pop
outsl
arpl
mov
xor
stc
mov
scas
in
mov
pop
jns
lods
xchg
push
add
mov
stos
and
fiaddl
test
cmpsl
xchg
cmp
fcmovbe
hlt
and
jp
pop
loopne
test
scas
outsb
cmp
mov
test
aaa
lcall
xchg
mov
les
mov
xlat
sbb
jle
hlt
pop
ficoml
dec
xor
push
test
adc
addb
call
ljmp
imul
test
out
jb
mov
insb
fdivrl
sahf
das
push
fmuls
cmp
xchg
cmc
test
ss
lods
jmp
jl
mov
jecxz
mov
fcoms
ret
mov
movsl
push
stc
bound
dec
dec
inc
fcmovb
dec
aas
cld
jno
or
push
inc
mov
cmc
dec
mov
into
movd
xchg
or
inc
pusha
ds
clc
cmp
dec
sahf
inc
dec
loop
push
clc
push
call
mov
sti
adc
outsl
sub
or
je
sarb
inc
gs
icebp
sbb
rclb
insb
aaa
fildl
int
mov
sub
and
cmp
adc
je
sbb
outsb
and
outsb
jecxz
add
push
inc
dec
and
mov
dec
leave
pop
dec
ror
add
in
f2xm1
cmp
insb
xor
movsl
addl
clc
scas
sbb
sti
push
and
int
xor
rolb
iret
xchg
adc
push
mov
test
xchg
xlat
mov
inc
sub
lock
xor
cld
mov
mov
mov
xchg
jno
jb
ss
xor
push
leave
xor
mov
movsl
btr
jo
pop
rcrb
adc
lret
call
arpl
adc
cmp
push
mov
or
jnp
ficompl
push
jae
xrelease
movsl
notl
sub
jo
clc
dec
in
mov
in
inc
sbb
dec
mov
adc
or
in
fadd
push
data16
mov
mov
jecxz
jmp
loope
push
pop
dec
cmpsb
jge
adc
pop
fldt
cmp
sub
adc
out
scas
ret
xchg
das
mov
popf
sub
ss
jecxz
jmp
pop
pop
clc
insb
icebp
in
xchg
out
in
cmpsl
push
cli
jmp
push
sub
push
cwtl
jbe
mov
scas
xor
imul
xor
idivb
scas
loope
pop
ds
pop
mov
mov
mov
testb
test
int
out
mov
ljmp
add
cli
mov
lcall
xlat
orl
lods
push
ror
ficoms
rclb
call
cmp
shrl
shrl
les
push
inc
js
adc
or
xor
xchg
push
inc
sti
addr16
mov
push
arpl
daa
mov
xor
or
mov
loope
enter
push
shll
mov
jp
rolb
subb
lods
mov
out
mov
and
push
push
add
and
gs
fs
jecxz
xor
testb
pop
jb
mov
mov
pop
push
int3
ss
mov
inc
aaa
jecxz
enter
push
or
jl
clc
sar
or
sbb
aad
pop
stos
insl
xlat
ds
pop
idivb
arpl
inc
ja
mov
ja
jbe
jp
stos
cld
jp
pop
pop
daa
filds
mov
push
xchg
mov
sbb
mov
adc
insl
fcomps
imul
stc
aaa
mov
jns
insl
cs
mov
rcll
inc
dec
adc
cmp
or
lret
sarl
scas
data16
xor
and
push
sub
pop
fisubl
shll
mov
adc
push
add
and
mov
imul
jge
dec
xchg
inc
cmp
gs
xchg
sbb
enter
mov
xchg
xchg
cli
push
jg
in
mov
inc
fildll
add
popl
jns
insl
clc
ret
fnstcw
enter
mov
sub
cmp
fcmovbe
into
push
sub
and
loope
leave
inc
cmpsl
jge
push
xchg
in
andl
or
movsl
ds
jo
jnp
mov
mov
ljmp
icebp
mov
ret
or
scas
cltd
sahf
insb
call
push
pop
and
push
es
ljmp
mov
fbstp
inc
faddl
push
popa
div
movsl
inc
cmp
sahf
mov
xor
ja
aas
xlat
sbb
sub
jbe
les
mulb
gs
popa
cltd
sub
ds
xorl
insb
ljmp
cmp
push
adcl
pop
insb
or
lret
enter
out
mov
lcall
dec
cmp
xor
sub
repz
clc
fildll
jns
aam
fcomp
cmp
mov
ljmp
movsb
pop
dec
fistpl
cmp
scas
inc
and
jle
fstps
cmp
cmp
fdivl
xor
fcompl
pop
jnp
les
popf
inc
shll
jbe
mov
inc
sbb
add
inc
mov
mov
repnz
clc
sub
push
imul
in
stos
sbb
or
and
rclb
sbb
das
mov
or
pusha
mov
fsubrs
mov
jl
adc
pop
clc
in
mov
ret
or
or
aaa
out
test
add
or
and
add
bound
jp
popa
imul
or
test
and
pop
xor
xchg
push
mov
mov
dec
in
fcompl
inc
adc
ficoms
rol
pop
mov
in
xor
jbe
fstpt
sti
les
mov
fs
sbb
fidivrl
xor
sub
int
inc
rcrb
mov
push
xor
cmp
and
in
popf
hlt
cs
xor
mov
decb
dec
fcoms
mov
test
shlb
mov
outsl
lods
mov
cmpsl
mov
in
out
pop
lock
test
sahf
std
in
inc
mov
repz
rcrb
shlb
and
enter
fwait
sbb
data16
mov
xorl
data16
mov
dec
stc
add
inc
inc
test
jbe
and
jo
xchg
add
insl
jo
xchg
jmp
aas
movsl
pop
jecxz,pt
in
ret
jmp
pushf
push
subb
jecxz
and
adc
jnp
popf
mov
adc
les
ja
leave
aad
imul
sbb
sbb
outsl
ja
adc
cmp
daa
jo
subb
nop
adc
shll
fstpt
jl
fnsave
jge
cs
aaa
add
imul
js
inc
data16
mov
lea
mov
jl
lret
cmpsl
repz
and
dec
fildl
movsb
repz
lea
mov
mov
stos
in
mov
aam
cmp
pusha
repnz
scas
fdivrl
jge
sar
dec
stc
outsl
in
outsb
or
out
xor
push
imul
mov
call
sbb
sub
xor
jnp
pop
or
jecxz
rcl
and
addl
cmp
sbb
xor
inc
push
clc
jno
lret
push
push
or
rcll
xor
add
jge
and
insl
push
adc
ja
push
ds
jge
inc
sbb
jp
popf
add
mov
lds
xchg
lock
and
jle
mov
push
mov
in
sub
cmp
jmp
mov
mov
push
fmuls
adc
subl
fdivrs
cwtl
sub
fadds
lock
addb
divb
push
jno
rorl
adc
leave
xchg
pop
scas
ret
push
xlat
test
or
inc
pop
add
cmpsl
daa
pop
daa
cmp
push
pop
pop
sbb
inc
xchg
dec
mov
jecxz
push
mov
jo
lea
or
dec
mov
jns
insl
mov
daa
mov
sti
push
mov
sub
dec
in
or
pop
rclb
lea
pop
and
jns
fwait
lcall
dec
or
orb
fs
mov
pop
lret
xor
lock
xor
mov
lahf
adc
popl
add
jno
paddw
mov
jg
cmp
jge
fdivl
idivb
popa
nop
hlt
inc
inc
stos
aaa
pop
jmp
test
inc
push
mulb
cmc
add
sbb
lock
push
dec
xor
cmp
push
mov
pop
shl
in
icebp
add
jmp
mov
jae
or
sbb
mov
insl
jl
xchg
scas
adc
sbb
push
mov
or
rcrb
inc
shrd
mov
adc
fadds
fldt
scas
jnp
xchg
mov
mov
dec
pop
ds
les
fs
push
out
int3
inc
mov
and
fnstsw
out
adc
sbb
and
sbb
adc
addb
jbe
clc
inc
imull
jne
dec
sub
pop
movsb
ss
repz
fs
mov
das
sub
push
leave
mov
adcb
subb
push
paddusw
mov
fcomi
in
jo
dec
incl
sbb
xchg
std
adc
mov
lock
or
mov
outsl
popa
in
lcall
inc
push
insl
xchg
negl
imul
lock
comiss
xor
faddl
or
hlt
add
sbb
mov
aaa
pusha
xchg
out
cwtl
jo
sub
dec
xor
xor
push
repz
in
daa
add
xlat
push
fistps
fstl
movsb
pop
repnz
popa
cmpsl
lahf
jo
pop
xchg
jle
addr16
jb
pusha
js
pop
mov
out
cmp
sub
mov
fiaddl
push
push
cmpb
or
test
std
fsubp
rol
pop
adc
dec
lahf
xor
xor
lock
mov
shlb
gs
adc
pop
ret
mov
in
jo
js
and
or
sub
scas
xchg
rcr
shrl
test
js
pusha
sbb
inc
push
mov
jnp
xlat
sbb
cmc
cmc
sbb
jo
lods
clc
pusha
test
inc
sbb
jle
loope
outsb
xchg
mov
js
push
add
xor
sub
mov
addl
cmp
mov
lock
jne
clc
push
test
push
cmp
shl
imul
adc
fsubr
and
shll
cli
rclb
shl
pop
inc
movsb
lahf
fwait
push
fistpl
cltd
out
test
push
mov
popf
popa
sbb
movsl
cmp
daa
clc
push
adc
fwait
iret
lods
xor
mov
sub
add
daa
ret
sbb
test
int3
dec
scas
outsb
pop
mov
icebp
jb
testb
sbb
add
push
int
loopne
jmp
jecxz
pop
scas
testb
dec
sbb
mov
adc
and
push
out
add
mov
xchg
jae
sub
or
adcl
xor
inc
loope
in
adc
cmpl
mov
stos
jl
mov
xchg
mov
xor
xchg
jle
stos
data16
in
testb
lods
inc
push
sbb
in
into
cmp
xor
cmpb
outsl
or
gs
adc
dec
xchg
fistps
add
mov
add
into
jbe
sbb
cmp
test
dec
xor
push
and
roll
cmc
xchg
incl
mov
fdivs
rcll
sbb
cmpsb
in
cmp
push
push
clc
insl
fcmovnb
dec
pop
lcall
inc
dec
inc
dec
shrl
dec
in
jge
mov
add
mov
mov
lock
xchg
mov
inc
pop
dec
mov
cltd
clc
sbb
aad
stc
std
dec
add
jle
xchg
dec
mov
and
cmp
loope
or
decb
test
aas
xchg
lcall
add
sub
ljmp
in
out
push
fdiv
mov
dec
insl
ss
mov
test
or
xor
mov
std
sbb
mov
sbb
aas
cmp
aaa
push
bound
pop
fcmove
sub
jns
lds
imul
push
sub
popa
bound
in
inc
mov
in
lret
lret
mov
insb
xchg
add
jnp
cmpl
addl
ja
mov
xchg
sub
or
pop
jecxz
jne
jbe
das
sti
lods
jae
jb
stos
shl
pop
add
xor
out
jne
inc
pushf
push
fistpll
enter
sub
mov
lods
add
inc
cmp
and
mov
inc
cwtl
mov
imul
cwtl
cmc
std
shlb
pop
dec
into
loop
scas
mov
scas
les
mov
ds
in
dec
xor
sbb
dec
dec
je
pop
daa
mov
jnp
std
test
or
data16
push
rcr
lods
xchg
add
pop
testl
mov
mov
push
js
xor
js
sbb
fdiv
icebp
pusha
pushf
inc
addl
and
popa
add
sub
aam
or
jbe
aas
pop
fdivrs
xchg
rol
cmpl
pop
and
mov
xchg
adc
dec
insb
lret
shrb
or
div
pop
dec
cs
je
jnp
in
mov
inc
and
jp
mov
hlt
sub
pusha
lret
aad
pop
addr16
mov
push
sub
inc
incb
cmovbe
fst
popa
stos
push
dec
lods
or
jbe
add
push
or
xchg
xchg
inc
aaa
movsl
ret
scas
les
loope
rorb
in
mov
mov
cmp
lret
mov
outsl
insb
jp
mov
or
inc
jbe
mov
mov
icebp
out
push
popf
ret
js
fsubs
out
mov
add
xchg
das
mull
loope
pop
pop
movsb
jl
cmp
in
fimull
imul
stos
push
dec
mov
mov
mov
shl
movsb
nop
loope
xchg
out
les
add
xchg
imul
xchg
leave
or
sbb
aad
dec
mov
filds
pop
arpl
push
inc
scas
cmp
dec
lahf
ja
jbe
jg
lods
cmpsl
xor
test
add
xchg
fcmovb
addb
and
mov
jo
pop
in
inc
in
pop
jne
push
mov
imul
sub
cmp
lahf
inc
xor
jno
xor
pop
mov
xor
rorl
inc
mov
inc
jne
and
andl
inc
adc
in
jecxz
pop
mov
jecxz
push
enter
cmp
push
fstps
shr
test
pushf
add
imulb
dec
pop
clc
dec
jg
xchg
jbe
out
xchg
in
sub
push
addb
sbb
or
cld
loopne
mov
push
inc
mov
das
loopne
jle
outsl
and
outsb
aaa
cmp
sub
pop
push
jmp
mov
dec
into
divb
lea
jle
and
xor
lds
gs
rorb
inc
xor
adc
daa
or
out
add
xchg
dec
push
inc
jae
adc
lds
outsl
dec
bound
in
cs
popf
pop
add
sbb
ljmp
push
inc
clc
xchg
jmp
mov
cwtl
test
test
stos
insl
insl
dec
adc
clc
data16
jmp
mov
cmp
adc
jmp
aam
dec
push
push
xchg
xchg
std
imulb
ss
mov
pop
cmp
mov
mov
aaa
jne
push
test
inc
das
jle
push
les
addr16
inc
jmp
mov
lds
add
jne
push
loope
jl
sbb
mov
aas
push
pop
mov
mov
lock
dec
test
push
sbb
popf
mov
mov
pop
out
jns
cwtl
mov
mov
add
push
mov
mov
xchg
sub
fwait
adc
imul
outsb
in
decb
add
dec
jecxz
sbb
das
push
and
or
sub
dec
fadd
lea
cli
outsl
and
call
inc
sub
sti
xor
mov
sub
mov
ljmp
lret
test
push
ret
in
dec
movsl
mov
shrl
shl
xchg
sti
loopne
inc
push
sub
jge
push
xor
and
popa
js
fadd
fs
xchg
mov
in
std
push
fstl
adc
xor
cwtl
jecxz
pop
pop
test
mov
add
mov
xchg
ds
insb
mov
lods
cld
mov
shlb
xor
cmpsl
test
jnp
cmp
cmp
mov
movsl
scas
pop
xlat
adc
mov
in
aas
xor
call
ja
cmc
shll
fiadds
ret
push
movsb
rolb
jmp
mov
jb
adc
jmp
mov
mov
or
adc
pop
sub
adc
or
xor
insb
sti
lds
jg
and
sub
jne
mov
mov
add
imul
push
mov
cmp
aaa
loopne
mov
xor
dec
mov
cmp
pop
mov
clc
inc
cld
mov
rcll
push
adc
call
adc
push
lods
jmp
sbb
push
mov
pop
fsts
int
hlt
push
pop
jnp
xor
mov
fbld
je
adc
mov
add
leave
inc
cltd
nop
and
das
shll
push
mov
jo
adc
and
mov
clc
popf
sti
push
addl
ud0
xchg
or
xor
pop
mov
add
jg
pop
jl
mov
loopne
adc
leave
mov
pop
push
sahf
inc
cltd
or
outsb
mov
adc
push
jno
xor
mov
loope
push
inc
mov
sti
mov
pusha
fs
call
dec
pop
das
fldl
divl
call
xchg
pop
sub
rolb
or
fdiv
pop
aam
mov
and
push
in
das
rclb
arpl
hlt
jno
xchg
rcl
xor
pop
mov
jp
mov
sub
inc
out
jno
aad
push
cmp
repz
fsubp
pshufw
movsl
or
call
std
loop
std
inc
pushf
data16
lods
test
loopne
jne
or
jg
aaa
jae
inc
pop
add
push
mov
mov
mov
pop
movsb
jns
movsb
cmc
rolb
adc
enter
dec
add
mov
push
jmp
loope
insb
pop
sbb
mov
pop
xchg
stc
dec
clc
mov
xchg
mov
mov
imul
outsb
movsb
adc
into
xchg
and
stos
lods
mov
int
inc
dec
dec
dec
fdivs
test
add
lock
add
lahf
rorl
xchg
mov
out
add
cmp
cs
popf
mov
pusha
sahf
pop
push
cmp
and
mov
addl
mov
arpl
mov
mov
inc
mov
jne
sub
sub
adc
jno
jbe
sahf
jle
call
mov
mov
int3
and
pop
sub
imul
sub
add
mov
sahf
jnp
in
testl
dec
sub
mov
in
add
or
mov
xlat
mov
and
jo
loopne
pop
lret
dec
enter
xor
jp
jne
mov
push
daa
xlat
fidivrl
lea
or
inc
push
or
cmp
xorl
jo
leave
pop
je
rcr
mov
cmp
add
dec
lea
mov
pop
pop
fildl
inc
sbb
addr16
ja
mov
sub
ret
adc
cs
mov
es
mov
jge
xor
or
xor
mov
mov
lock
stc
enter
jp
mov
cwtl
inc
inc
sbb
dec
push
mov
ds
cmpsb
jno
sbb
les
enter
mov
sti
xchg
fdivrs
add
outsb
shr
stos
lea
out
mov
je
add
sub
outsl
cmp
mov
jne
push
xchg
mov
insl
addl
jne
into
scas
repz
sti
pop
sub
data16
call
add
pop
dec
std
push
sub
sub
negl
outsl
das
mov
cmc
adc
push
xor
cmp
inc
add
out
addr16
cmp
ret
push
daa
pop
loop
cmovp
or
pop
mov
or
jno
add
adc
movsl
fisttpl
pop
fidivs
inc
std
sbb
test
adc
insb
cld
mov
or
loop
inc
rcrb
jmp
mov
int3
jp
out
int3
add
or
sahf
jo
addb
popf
push
sbb
outsl
mov
mov
push
jg
lahf
cmp
xchg
inc
and
cmp
inc
fldenv
fstps
add
push
fdivrl
aaa
xlat
mov
nop
lods
add
test
add
dec
add
push
dec
std
push
sub
xchg
inc
mov
or
je
mov
clc
jo
pop
xor
int
cmpb
nop
mov
push
sbb
mov
push
push
test
icebp
push
pop
adc
mov
mov
andb
dec
and
sbb
jecxz
movsl
data16
ja
sub
jnp
xchg
bound
mov
adc
adc
test
or
push
repnz
movsb
leave
scas
test
sbb
pop
subl
pop
xchg
into
fnstsw
adc
cmp
cmpsb
js
insl
inc
das
test
adc
test
test
jecxz
outsl
fnstsw
mov
and
div
aam
sbb
nop
push
adc
adc
xchg
sbb
sbb
ficoml
rcrb
in
cmpb
xchg
test
xor
loopne
lods
jg
inc
dec
adc
test
cmp
xchg
mov
test
rcl
push
insl
sarl
dec
mov
mov
lret
outsb
pop
push
push
or
call
sbb
dec
xor
ss
xchg
adc
sbb
sbb
inc
dec
ljmp
icebp
jg
add
xor
mov
cmpsl
sbb
ss
movsl
aam
inc
xchg
outsb
mov
xor
xor
mov
sub
fsubs
std
bound
push
xchg
lods
insb
sbb
lret
mov
push
dec
pop
fistps
xlat
sarl
push
inc
sub
inc
push
push
jno
add
adc
sub
lds
imul
push
push
ror
add
push
adc
jno
jp
xchg
mov
and
sbb
inc
lock
inc
insl
mov
xor
push
cmc
lds
mov
iret
push
inc
insb
std
jb
bound
or
xchg
stos
xchg
adc
std
fiadds
aad
or
adc
dec
in
daa
cmp
inc
add
adc
insb
pop
mov
mov
fdivs
or
jle
sbb
decb
shlb
loope
fidivrs
adc
testl
fisttpll
loope
cld
and
mov
mov
call
test
mov
sahf
xor
sub
sub
sbb
mov
and
lods
repnz
or
popa
ret
inc
add
sbb
fildl
mov
shrb
cltd
inc
mov
inc
cmpsl
pop
fldt
xchg
clc
setno
dec
ja
loope
push
cwtl
daa
aam
dec
jne
inc
ret
notb
and
sahf
rol
mov
sub
into
sbb
cmp
sbb
imul
ds
mov
cld
stos
add
flds
ret
sbb
push
push
sub
into
push
cld
pop
pop
and
movntq
add
push
aam
xchg
mov
ljmp
loop
repz
pop
dec
pop
push
ds
fidivl
mov
lds
pop
jecxz
movsb
mov
mov
imul
insl
cwtl
jp
test
add
push
push
je
insl
or
into
or
mov
cmp
ljmp
jecxz
arpl
sbb
jno
inc
movsb
push
push
push
dec
out
push
add
jb
inc
sarl
les
cmp
dec
mov
pop
xchg
jl
shrl
leave
aaa
jbe
pop
call
je
loop
js
or
loope
in
loope
lret
push
pop
dec
jb
pusha
aas
push
cmc
lods
mov
je
push
outsb
clc
add
hlt
jbe
icebp
call
xchg
mov
xchg
push
pop
imul
daa
jne
sbb
adc
pop
in
gs
or
push
cwtl
cs
push
xor
inc
mov
dec
outsl
shll
or
ds
fadds
and
outsl
and
in
dec
popa
adc
jno
or
mov
mov
push
frstor
arpl
sub
subl
lea
rol
add
sbb
fnstsw
and
fwait
aad
test
mov
stc
sub
inc
push
sbb
mov
loope
pop
xchg
or
adc
insb
lods
add
popf
fcoml
sub
das
sbb
adc
fsub
or
pop
inc
sub
idivb
and
aad
js
ja
mov
sbb
sub
sbb
push
ja
mov
sbb
gs
push
xor
sub
mov
stos
pop
outsb
pop
cmp
test
pop
or
fmuls
dec
dec
pop
dec
mov
ret
and
mov
push
icebp
loopne
lds
mov
out
xor
pop
or
xchg
adc
push
jo
xor
aam
stos
push
cmp
lret
or
mov
in
daa
adc
mov
loop
dec
jge
and
lea
les
hlt
cmc
fisttpll
jg
pop
fidivrl
mov
mov
xor
inc
jg
outsb
jne
bswap
inc
cmp
ljmp
stos
sbb
dec
sbbl
cmpsb
sbb
push
sbb
or
fcmovnu
out
shl
jl
inc
dec
xor
fsubrs
mov
fiaddl
xchg
xchg
add
add
inc
in
push
mov
pusha
pop
xchg
jmp
shlb
mov
sub
pushl
rolb
xorl
arpl
cwtl
sub
cmovno
nop
mov
lret
mov
pop
adc
out
push
mov
cmc
pop
pop
push
xlat
cwtl
iret
sub
mov
rcrl
jmp
dec
inc
lods
in
rcll
test
aas
jns
xlat
cmc
mov
push
xor
and
nop
lds
test
jne
mov
stc
mov
rcrl
cmp
jnp
sbb
add
or
movsb
frstor
dec
negb
popf
ljmp
mov
jmp
roll
sti
dec
adc
imul
adc
fstpt
cmp
popw
clc
push
mov
cmp
mov
out
or
add
ret
push
sub
inc
xor
adc
pop
lret
push
pop
popf
cmp
xlat
cmpl
mov
fistl
cmp
mov
and
mov
lea
jne
cmp
mov
rol
popf
cmp
mov
mov
mov
fisttpll
add
adc
rolb
xchg
jmp
sub
mov
movsl
ficompl
jle
jno
xchg
add
icebp
push
loopne
pop
or
sub
adc
sbb
mov
les
test
adc
fisubl
mov
jecxz
inc
push
pusha
add
sbb
insl
inc
sub
xor
inc
mov
push
add
lods
or
mov
fcmove
jbe
loope
jb
inc
mov
mov
data16
or
mov
add
adc
fmuls
push
sub
fistpll
lds
cmp
pop
adcb
scas
sub
cli
shll
or
outsb
jmp
outsl
mov
ja
adc
xchg
loop
sbb
std
mov
leave
fsts
stos
and
or
mov
sbb
data16
and
add
cmpsb
test
shll
xchg
pop
cmp
adc
mov
in
js
fdivrl
jne
or
out
rcrl
inc
mov
inc
test
jmp
ret
push
hlt
jbe
outsl
add
xsaves
insl
aas
test
mov
xchg
orb
xlat
sbb
iret
mov
push
cld
test
and
add
mov
xchg
test
pop
clc
das
shrb
mov
xchg
pop
mov
mov
and
adc
inc
sti
jno
mov
jp
test
add
add
das
hlt
lds
or
sub
movsb
lea
shrb
pop
jle
ss
pop
les
nop
jae
dec
fidivl
and
push
add
sbb
sub
scas
jge
and
mov
shll
mov
ss
xchg
movsl
cmp
xor
sbb
fistl
cwtl
xor
fidivl
repnz
inc
sti
repz
lret
inc
insb
add
dec
mov
fbstp
fisubl
xor
out
mov
push
adc
cwtl
insl
inc
roll
jne
push
xor
xchg
fsubs
faddp
inc
lret
movb
inc
icebp
cmp
push
pushf
dec
push
js
mov
mov
mov
decb
cmp
jecxz
jb
shrb
pop
pop
mov
insl
dec
or
and
sarb
inc
pop
xchg
nop
leave
ss
and
mov
cld
movd
mov
fcompl
aas
push
js
mov
jg
jnp
or
or
inc
pop
arpl
scas
cwtl
sub
shll
out
sub
test
pop
movsb
and
loop
les
int3
pushf
pop
or
test
add
or
lea
add
add
insl
mov
loope
decb
and
sbb
rcrb
sbb
xor
orb
scas
push
fsts
xchg
daa
daa
lcall
xchg
aas
clc
pop
aad
jne
push
rcr
addl
popa
ret
scas
andb
mov
push
outsb
jge
mov
xor
in
mov
jl
or
shl
adc
rcr
pop
loopne
nop
negl
scas
jg
roll
mov
lret
jns
lods
pop
mov
sbb
and
cmp
and
mov
ret
loope
test
mov
adc
sub
xor
shll
push
sub
pushf
dec
jno
in
fsts
mov
jg
xchg
pop
mov
push
jp
cmp
cmpl
dec
mov
sar
sub
mov
mov
nop
int3
sub
mov
aad
inc
or
cmp
popa
mov
pusha
or
mov
xchg
cwtl
fbstp
mov
popf
xchg
sbb
lock
dec
imul
mov
int
rorb
and
imul
jmp
xor
push
inc
imul
or
pop
cmp
sti
repnz
loope
cmp
inc
lea
ss
pop
pop
lea
cmp
in
ret
std
repnz
mov
push
mov
movsl
cs
clc
orb
int
push
loope
test
ja
mov
das
adc
imul
xorb
lock
fs
mov
imul
inc
pop
aaa
pop
cmp
in
ja
sbb
sbb
jae
pop
mov
fwait
stc
adc
orb
inc
mov
cmpsl
ljmp
lcall
sub
inc
mov
add
in
jnp
outsb
push
aaa
or
xorl
leave
shll
mov
fists
cmpsl
push
xor
or
mov
call
push
loope
lcall
lcall
fistps
adc
not
clc
das
call
out
shll
mov
mov
xchg
loop
mov
sbb
sub
popa
daa
or
repz
fisttpl
je
xor
jge
shl
pop
xor
dec
push
ds
je
sbb
popa
cli
jg
dec
outsl
pop
push
in
inc
das
mov
sbb
in
data16
jbe
psraw
loop
rcrl
or
int
lcall
sub
fdivrl
add
cmpsb
cmp
outsl
add
aad
sub
pop
push
jmp
mov
pop
mov
jp
cwtl
pop
sub
ret
pop
mov
jmp
and
xchg
add
pop
pushf
mov
js
mov
test
inc
neg
mov
sti
cmpxchg
lods
add
push
adc
sti
nop
mov
out
addb
and
and
shr
push
aaa
or
adc
test
jmp
pop
adc
sub
in
inc
sti
arpl
mov
lret
push
shlb
push
jg
sub
push
out
push
in
rcll
shll
push
sub
dec
push
test
stos
movsl
imulb
test
sub
fisttpl
dec
lret
mov
inc
mov
rorb
mov
pop
adc
xlat
repz
pop
shlb
sahf
cmp
lcall
xor
sub
sub
dec
or
mov
iret
mov
inc
mov
xor
sbb
ret
sbb
jbe
pop
outsb
pop
mov
cs
and
mov
mov
pop
stos
mov
or
sbbl
gs
mov
push
fcompl
cmp
mov
jl
cli
rol
ljmp
jne
xor
fwait
ret
and
jbe
sub
jp
dec
ljmp
lret
loopne
lcall
ss
pushf
test
fwait
loop
cmp
scas
adc
bound
jo
loope
mov
hlt
fcmovne
clc
pop
push
insb
call
add
add
hlt
dec
aas
jo
fcmovnbe
push
xchg
xchg
mov
push
mov
iret
outsb
scas
add
loope
jbe
test
jmp
frstor
loopne
sbb
outsl
leave
insl
pop
std
adc
xchg
adc
cld
in
dec
sub
movsl
mov
cmp
add
je
test
jg
sbb
and
mov
sbb
test
std
inc
sub
push
in
nop
and
or
adc
sbb
jbe
stos
adc
pop
push
mov
mov
push
inc
add
loopne
fcoms
push
iret
shlb
stos
mov
jmp
adc
pop
cmp
push
mov
adc
fiadds
mov
scas
insb
daa
and
jno
or
jmp
lahf
rolb
mov
push
mov
pop
adc
lods
jmp
pop
inc
cmp
jo
mov
push
inc
jmp
sub
ds
xchg
or
mov
push
or
pop
mov
adc
popa
push
das
in
scas
adc
mov
jmp
in
push
xor
xchg
adc
xor
movb
sub
cmp
mov
xchg
vpmadcswd
or
js
cmpsl
inc
es
pop
icebp
pop
push
dec
sub
xorb
ret
rorl
nop
adc
fmuls
adc
shll
or
add
lcall
aas
jns
sti
mov
dec
sbb
adc
push
xor
repz
sbb
mov
jg
mov
jl,pt
push
mov
mov
aad
pop
outsb
ja
loope
cs
int3
jb
orl
xchg
fstp
aaa
and
scas
fnstenv
cmp
jb
mov
out
repz
sub
mov
adc
or
pop
out
sub
shrb
xor
adc
jle
inc
inc
js
fsubrl
mov
push
jbe
mov
lahf
outsl
andb
shll
jae
xchg
mov
sub
pop
mov
int3
stos
sub
insl
les
shl
cmp
out
jge
xchg
mov
lds
adcb
xor
mov
mov
mov
loopne
and
addr16
jae
pop
mov
cmp
mov
imul
ret
inc
mov
jle
into
and
scas
dec
jo
dec
ds
in
movsb
stc
or
sbb
cs
jecxz
add
xor
fisubrl
sbb
shlb
outsb
or
sub
test
idiv
fnstsw
out
repz
xor
xchg
jne
mov
mov
cmp
fcmovnb
ljmp
inc
flds
test
sub
pop
leave
cmp
call
das
xor
cmp
paddb
xchg
pop
pushw
loopne
xchg
mov
movsb
pop
rcr
mov
fisttps
push
mov
lret
daa
cmpsl
dec
int
lock
mov
push
jno
shl
adc
mov
push
jecxz
lock
xor
lahf
cmp
fisubrl
ficoml
sti
push
stos
test
mov
das
push
cmpsb
mov
xor
xchg
xchg
into
push
mov
mov
iret
dec
or
rcl
jno
sbb
mov
test
pop
ljmp
dec
movsl
dec
pop
mov
pop
in
jmp
cmp
cmp
in
in
mov
dec
lods
js
sub
sbb
cs
jbe
mov
mov
mov
ds
andb
mov
fdivr
cmc
pextrw
lea
jp
clc
jne
mov
cmp
arpl
sub
std
and
dec
pop
roll
repz
inc
insl
in
arpl
into
push
lret
inc
test
lcall
pop
cmp
lock
out
rcrb
inc
xor
mov
cs
lret
ds
iret
in
inc
loop
in
jbe
sahf
push
sbb
negb
cmp
jo
mov
dec
pusha
add
out
inc
pusha
push
pusha
popa
test
notl
mov
mov
sub
movsl
sbb
mov
enter
aam
outsb
aas
mov
mov
rclb
out
jo
sub
in
std
js
inc
add
push
dec
dec
push
and
add
stos
jg
jmp
push
movsl
or
jge
jo
hlt
inc
stc
scas
cmp
mov
test
aad
and
int3
xchg
outsb
je
add
setle
arpl
push
lcall
xor
sub
inc
xor
sub
cltd
and
or
cmp
bound
ret
inc
pmuludq
imul
xor
stos
push
inc
ret
aam
in
aad
mov
push
add
cmp
or
mov
divb
inc
out
ds
cmc
mov
push
pushf
inc
cmpsl
ss
in
mov
xchg
or
fcomps
pop
jnp
fcoml
popl
xor
add
push
xor
dec
icebp
arpl
sarl
mov
or
pop
pop
inc
fisubl
les
ljmp
and
imull
mov
sbb
sbb
add
out
mov
outsl
das
or
adc
repnz
fidivl
xchg
aaa
insl
aaa
fcoml
jg
insb
push
idivl
hlt
dec
pop
mov
hlt
arpl
cld
scas
dec
ja
dec
or
dec
mov
shrl
fsubrs
sti
mov
jbe
sub
ds
push
jg
dec
stos
or
jp
insb
xor
mov
inc
cli
add
mov
cmp
scas
mov
push
enter
jle
mov
aam
ds
inc
dec
cmp
xchg
jne
fadd
orb
bound
cmp
push
js
js
jbe
cmp
xor
popf
xchg
inc
insl
fdivs
mov
ficoml
leave
arpl
push
mov
ljmp
mov
test
dec
jl
adc
rcll
xchg
outsl
dec
loope
into
sbb
mov
fisubrl
add
fimuls
pop
mov
sub
sbb
loopne
add
lods
inc
cmpb
ds
xchg
cltd
and
add
sub
pop
push
push
inc
test
push
jg
add
and
js
sbb
push
pop
sub
addb
lea
and
cmp
xchg
dec
dec
mov
ljmp
adc
sub
push
rcrl
mov
pop
sbb
xor
inc
mov
insl
nop
pop
lea
fidivl
jne
lock
ss
ret
or
loop
and
xor
mov
xor
jg
sbb
js
and
xchg
or
inc
jecxz
iret
in
sbb
sbb
jnp
xor
nop
enter
loopne
subb
clc
jbe
jg
fwait
das
sbb
mov
test
inc
shrd
incl
arpl
adc
xchg
add
insl
pop
cli
jg
dec
bound
clc
dec
pop
lds
imul
push
add
pop
bt
repz
jl
mov
sub
ljmp
mov
roll
in
adc
pop
out
insl
insb
sbb
inc
add
cmp
mov
dec
insl
sub
test
add
xchg
jg
cmc
test
cmp
add
push
loope
cli
pop
fcomps
jns
mov
jle
popa
pop
add
sub
int3
shl
dec
mov
cmc
idivl
pop
inc
mov
push
insb
mov
movsl
out
xchg
shll
or
mov
iret
push
jb
or
or
mov
push
insb
xorl
lock
jl
jbe
scas
xchg
inc
popa
add
pop
lods
loopne
pop
pop
push
mov
scas
fisubrs
dec
and
sub
xlat
mov
cmpsb
bound
sar
jg
enter
dec
add
movsl
lea
mov
sub
cltd
xchg
push
push
or
mov
ds
cmpsb
mov
nop
loop
and
dec
pop
fstps
cmpsl
sub
push
das
inc
in
aas
cmp
bound
inc
lods
and
cltd
arpl
inc
shll
xor
test
adc
addl
pop
pop
jne
push
inc
test
in
mov
mov
xchg
or
lret
cmp
sti
jmp
shrb
inc
adcl
jmp
push
jne
pop
jl
jge
in
mov
pushf
sub
imul
mov
jb
sti
or
jo
das
jo
or
mov
aad
sbb
push
fnstsw
and
lret
mov
lret
mov
fnstsw
sub
aas
out
inc
inc
mov
out
enter
movsl
cmp
or
xor
idiv
in
stos
mov
add
mov
push
xchg
js
ret
adc
push
xor
aam
movsl
stos
and
repnz
mov
jl
call
js
fmull
rcl
xor
insl
or
shr
inc
xchg
rol
ss
sbb
or
sub
shrb
lock
and
repnz
xchg
xor
xchg
mov
and
orw
cwtl
insb
add
aam
sahf
imul
in
sub
mov
loop
fs
sub
mov
pusha
adc
addr16
pshufw
or
and
push
cli
dec
in
rclb
call
jge
pop
lock
xchg
mov
mov
pop
cs
stos
push
pusha
lret
stc
push
icebp
dec
jge
mov
adc
sarb
mov
cwtl
jmp
dec
js
cmp
int
mov
ss
mov
push
sub
mov
cmpsb
or
jb
and
xor
push
jmp
aam
and
adc
scas
cli
idivb
cmc
inc
adc
mov
in
rorb
nop
fwait
push
and
je
out
pop
les
xor
cmp
pop
int3
xor
xchg
mov
inc
test
jne
sub
jb
ret
push
mov
sbb
or
aam
xor
pop
jp
ficomps
push
ss
jns
or
mov
pushf
pop
cld
clc
pop
aam
leave
or
add
in
andl
lods
pop
jmp
shll
das
xchg
push
lahf
or
inc
ret
lea
add
icebp
pop
std
loopne
popa
das
aad
int3
stc
and
add
cmp
and
sub
bsr
cwtl
pop
out
inc
dec
jae
frstor
mov
shr
mov
push
mov
adc
cld
shl
cmp
dec
inc
dec
mov
insb
fnsave
mov
push
out
in
sbb
mov
sbb
in
incb
popa
stos
dec
xchg
sbb
mov
pop
jo
divl
roll
fdivrp
scas
cmc
fnsave
add
jp
fildl
mov
insl
mov
ja
fnstenv
les
imulb
inc
pop
jmp
fcompl
adc
mov
cmpl
jo
jl
and
inc
pop
jbe
add
dec
ret
mov
rorb
push
inc
or
xchg
fidivrl
pop
mov
push
ret
test
lea
insl
fistpll
sbb
jl
xor
in
pop
in
testb
push
repnz
sbb
xor
mov
cli
out
aas
out
les
or
fistl
push
popa
pop
cwtl
fdivr
sub
shrb
cld
aam
mov
aaa
iret
lret
push
sbb
sbb
sbb
in
std
arpl
cmp
cmpl
test
movsb
xor
sub
rcr
fldl
mov
mov
sbb
adc
sbbb
dec
mov
aam
test
inc
dec
dec
jo
cmpsb
subb
jb
adc
sbb
mov
push
mov
cli
jge
cmpb
pop
sub
in
and
rolb
adc
iret
sub
shlb
and
dec
cmp
or
sbb
shl
je
jl
and
mov
ja
inc
clc
xor
data16
pop
test
jno
add
scas
aam
push
xchg
and
inc
xlat
push
lahf
mov
pop
jmp
test
inc
jl
fucom
sub
or
test
push
int3
mov
fdivs
shll
inc
xchg
sbb
lock
lret
push
cmc
dec
sahf
test
push
cmp
and
pop
aaa
add
rcrb
push
mov
push
pop
pop
mov
xor
pop
fsubrl
mov
insl
outsl
cwtl
test
andb
fs
push
add
and
insl
fwait
dec
mov
je
ds
js
cmp
xchg
dec
mov
fcmovnb
mov
add
and
out
jl
test
xchg
and
clc
push
in
stos
sub
and
loope
or
inc
popa
add
sbbb
sbb
sub
xor
add
enter
outsl
sub
lea
cmc
pop
dec
lods
rcl
adc
aad
scas
in
xchg
dec
mov
ja
sub
jno
dec
imul
add
std
nop
xor
rclb
cmp
cmp
ret
adc
fcmovb
or
push
cli
or
jnp
jbe
or
cwtl
sbb
das
dec
stc
or
lahf
movsb
fadds
loop
call
sahf
outsl
and
cmc
add
adc
xchg
inc
sbb
andl
pop
test
pop
sub
inc
mov
xchg
jno
arpl
mov
xor
xchg
lods
ljmp
jg
jo
dec
into
cmp
sub
sub
cmpsb
unpcklps
testb
out
stos
sbb
outsb
mov
bound
push
bound
pop
adc
sbb
gs
mov
push
mov
inc
iret
enter
dec
das
mov
push
mov
add
and
pushf
call
jl
sbb
les
pusha
lcall
rclb
insl
mov
mov
lock
adc
pop
js
sub
fists
xor
cmp
movsl
ss
push
ja
xchg
sarb
cmp
js
and
adc
add
scas
mov
xor
mov
clc
push
pop
push
shlb
popf
adc
mov
jge
xlat
repz
sub
ret
sub
out
adc
fwait
or
xchg
addr16
mov
lea
jno
sbb
pop
std
cmpsl
rorl
out
sub
add
test
pop
push
adc
push
inc
pop
lock
pop
jmp
mov
rol
xchg
sub
paddw
enter
jge
xor
cmpsb
jmp
inc
idivl
popf
pusha
test
add
add
mov
scas
jg
adc
inc
pop
rcl
outsl
das
pop
mov
dec
loop
insl
xchg
ljmp
pop
iret
fs
fwait
mov
cmp
jns
xchg
push
cs
ja
sub
mov
mov
and
fsubp
outsb
bound
mov
js
jecxz
mov
jno
mov
dec
sbb
std
pusha
shll
lcall
lea
test
jl
into
pop
je
and
ja
leave
iret
jnp
inc
popf
loope
sub
mov
cs
mov
lods
test
jecxz
daa
push
test
sbb
cwtl
lcall
lods
cs
test
movsl
mov
add
mov
jno
xorb
mov
mov
add
icebp
mov
inc
mov
adc
adc
fdivr
mov
shl
es
imull
subl
cld
shl
jge
mov
jg
cli
lret
adcl
jp
aad
cmp
xchg
sbb
scas
ljmp
in
sub
std
jns
jecxz
sbb
les
push
add
push
andl
jge
sub
cmc
fildl
xchg
cmpsb
sbb
adc
mov
push
jb
sbb
in
add
notb
enter
xchg
mov
shr
pop
int3
test
push
inc
xlat
push
jge
mov
shlb
aad
ret
sahf
sub
push
jno
xlat
xchg
inc
ljmp
mov
popa
popa
cmpsb
inc
sub
fwait
andl
aam
sub
inc
addb
arpl
mov
xlat
mov
dec
fbld
insl
jle
push
int3
sti
aaa
leave
fdivr
stos
in
jecxz
mov
rcrb
arpl
mov
push
jo
imul
das
js
inc
add
lds
testl
xchg
add
in
pushl
and
jp
mov
pop
pop
shrb
test
push
cld
js
sub
je
cmp
push
push
das
dec
lahf
pop
cmc
icebp
ret
movsl
pop
or
mov
xchg
push
stc
loop
iret
shrb
adc
cmpsl
push
roll
push
xchg
jo
and
lods
ja
xor
in
mov
mov
or
sahf
sub
scas
push
mov
push
jl
cmp
mov
mov
push
add
popf
push
scas
mov
sub
out
in
cmp
push
pop
fadds
clc
jg
cmpb
lret
cmp
imul
pusha
loopne
mov
and
js
jmp
push
cmpl
cltd
repz
in
or
in
andl
fcomps
call
push
bndldx
cmp
sub
and
sbb
dec
sbb
mov
fildll
addr16
clc
adc
and
popa
popl
sbb
fldt
fwait
out
mov
adc
les
aam
push
call
adc
xchg
inc
pop
cli
outsb
jp
outsb
bswap
push
xor
fucomip
or
jmp
rcll
pop
das
out
ds
pop
push
adc
adc
lock
add
or
adc
rcrb
or
popa
jmp
mov
xchg
xchg
mov
or
stc
pop
notb
insl
mov
mov
imul
add
mov
pop
into
inc
push
fistps
jnp
pop
loopne
jbe
jbe
dec
fistps
xchg
lea
shll
and
jne
insl
lcall
das
sbbb
sbb
scas
push
aam
inc
bound
test
mov
rclb
dec
arpl
fmull
mov
xchg
out
inc
inc
add
fwait
and
adc
ljmp
mov
loope
lds
pop
inc
loop
ret
xchg
jmp
sbb
pop
jb
fdivrp
aas
out
jp
cmc
scas
xorb
popa
pop
lods
repz
in
push
xor
dec
pop
inc
jle
das
add
xlat
bound
dec
add
jnp
stc
inc
fisubrs
sti
pop
sbbl
inc
dec
jge
lds
popa
dec
jg
cmpsl
mov
mov
sub
pop
sarl
ret
mov
flds
sub
test
ljmp
das
lds
push
pusha
lods
nop
mov
xchg
aad
mov
and
and
ret
dec
lahf
fnstcw
or
sub
adc
aaa
mov
jp
rcrb
push
out
inc
push
push
mov
fisttps
mov
and
jnp
sub
movsl
scas
or
fimull
adc
xchg
mov
lcall
dec
enter
mov
and
adc
sahf
aaa
aad
lods
xchg
insb
pop
cmp
inc
fisttps
sbb
mov
test
cmpsl
lock
mov
dec
or
rclb
ljmp
orl
pop
shr
inc
mov
xchg
add
jbe
mov
sub
aam
mov
fdivrs
inc
push
xorb
push
data16
js
inc
shrd
ss
das
and
pop
mov
ljmp
fistps
aas
push
xor
mov
inc
insl
pop
loope
sub
and
pop
shr
outsb
std
sub
stc
mov
mov
lea
pushf
mov
add
mov
ficoms
sub
push
out
aaa
push
stc
mov
xor
shlb
sbb
inc
arpl
stos
cli
and
and
fmull
in
mov
stos
mov
test
int
push
jnp
or
push
sbb
push
mov
jno
xlat
roll
mov
inc
xchg
sti
std
out
in
hlt
inc
sahf
jns
in
add
testl
lods
mov
jo
cmc
mov
jp
stos
jl
add
popf
test
jle
repnz
sbb
push
setl
scas
fidivrl
fiaddl
jae
mov
inc
rclb
sti
sub
mov
or
in
and
scas
insl
mov
fsubp
lahf
je
fstl
xchg
pop
cmovo
into
ret
ret
lods
outsl
movl
call
out
add
mov
mov
jle
pusha
adc
fisttpl
adc
lcall
lods
cs
pop
or
test
js
sti
test
loopne
testl
idiv
out
cwtl
xor
push
push
add
incl
mov
dec
and
icebp
or
test
add
cmp
push
pop
adc
pop
push
push
popa
jns
sub
sbb
int3
lcall
jae
movsl
fbstp
or
push
fsub
mov
fdivs
bound
push
sarl
imul
lods
stos
cmp
cld
js
pop
orl
pop
push
ds
roll
mov
jb
and
out
pop
sbb
adc
or
mov
jl
xchg
mov
aas
pop
jno
xor
add
mov
push
fisttpl
nop
fwait
mov
ds
mov
icebp
xchg
ds
leave
inc
or
push
add
mov
push
mov
mov
or
jle
leave
leave
add
mov
sub
clc
mov
jae
or
pop
stos
sbb
js
aas
fadd
mov
or
inc
mov
loopne
dec
pop
ds
dec
jmp
mov
push
sbb
pop
daa
cmp
cmp
mov
test
mov
mov
lods
nop
and
out
pop
add
cld
rorb
clc
cmp
or
add
loope
lock
push
pop
ds
xor
lret
test
pop
jl
mov
fisubrs
decb
add
data16
imul
mov
xchg
stc
sbb
test
je
xchg
pop
lahf
stos
js
push
sbb
push
pop
or
pop
in
adc
insl
push
mov
dec
push
pop
and
xchg
outsl
sub
test
lahf
push
or
insl
cmp
adc
lds
fwait
inc
loopne
cmp
mov
mov
pop
rcrl
push
or
pop
adc
into
or
outsl
rcl
orb
test
cmpsb
and
cmp
clc
mov
mov
sbb
sub
sbb
out
sbb
loop
loopne
cmpsl
xor
add
aas
fs
cmp
subl
mov
dec
mov
cmp
in
push
pusha
mov
imul
mov
jecxz
movsb
neg
push
hlt
ja
push
gs
mov
push
inc
xor
pop
push
or
sbb
cld
jne
es
mov
movsl
push
cli
mov
in
stos
xchg
mov
roll
or
pop
sbb
lret
pop
jle
stos
cmpsl
xchg
daa
ja
adc
push
xor
push
aad
fnop
mull
jb
dec
add
subb
cs
pop
dec
jmp
in
shlb
dec
lret
sbb
xor
mov
mov
cld
scas
loopne
std
sub
enter
push
pop
mov
pop
mov
inc
fists
call
or
jmp
cmpsl
lods
mov
cmp
mov
add
inc
pop
je
fprem
ljmpw
enter
cwtl
lcall
inc
fisttpll
adc
inc
mov
in
mov
lods
outsl
mov
mov
mov
addr16
cltd
in
mov
lea
jle
popf
into
fmull
fsubs
jp
cwtl
dec
jecxz
roll
mov
cwtl
push
mov
dec
cmpsb
push
lods
mov
jnp
push
dec
dec
int3
stos
sbb
pop
lds
sub
or
cli
daa
negb
fcmovnb
cwtl
sar
xor
mov
cmpsb
or
push
jge
movl
jecxz
or
push
mov
xchg
xor
jl
mov
and
mov
outsl
mov
push
mov
mov
or
adc
mov
ljmp
push
fildll
xchg
clc
out
test
pop
cmp
outsl
and
outsb
sarb
daa
gs
xor
inc
mov
pop
add
pop
xchg
fs
daa
test
outsb
sbb
inc
pop
fisubrl
mov
xchg
imul
sbb
out
fcomps
js
push
lret
rolb
jle
movsl
out
pop
pop
in
push
mov
cmp
pop
std
out
adc
adcl
std
divb
mov
and
and
inc
push
out
or
cmp
lcall
mov
mov
sbb
fisubrl
mov
fs
push
fcoms
cld
inc
pop
pop
pop
lock
cmc
cmp
inc
dec
xor
data16
fcoms
or
dec
push
pop
jp
cmp
addl
shr
arpl
rcrb
lock
fstps
fmuls
fistl
jne
mov
sbb
jnp
push
jo
push
subb
pop
sub
aas
test
mov
pop
bswap
pop
mov
jle
inc
push
jnp
pop
dec
adc
das
sbb
mov
inc
jo
xor
sbb
ret
mov
lds
push
xchg
fwait
subl
and
and
jo
mov
ds
out
xchg
mov
mov
sbb
cmp
imul
and
rcrl
lcall
dec
ffreep
jp
mov
adc
mov
loope
in
aam
data16
mov
adc
pop
ret
adc
jmp
pop
cld
jnp
lods
mov
add
xlat
push
push
sbb
popf
jb
pop
in
pop
rorb
or
jne
pop
clc
je
xlat
add
lahf
dec
repz
cs
notb
mov
rcl
cmc
stos
fcoms
pop
mov
xor
fisubrs
xor
pushf
fdivr
push
push
xor
push
scas
and
cmpb
rclb
out
jmp
outsb
mov
sbb
into
dec
sahf
negl
rcr
in
pop
jmp
aam
enter
aaa
adc
pop
xor
imul
ja
popf
jo
xchg
mov
aam
fisttpl
insl
xchg
push
or
mov
inc
cmp
mov
mov
daa
jns
sbb
mov
mov
pop
outsl
jo
fcom
adc
xor
mov
faddl
and
push
adc
loop
mov
call
and
stos
mov
adc
les
adc
inc
pop
js
mov
hlt
inc
cmc
cli
cmp
xchg
jecxz
or
mov
inc
lock
add
roll
jecxz
sbb
mov
lods
sub
fucomi
aaa
add
mov
mov
sbb
mov
mov
and
popf
xchg
jmp
cmp
dec
xor
ss
push
clc
mov
dec
loope
fldl
mov
inc
cwtl
mov
lea
jbe
add
pop
jns
push
lock
shl
ret
nop
add
sub
stc
add
add
fidivs
xchg
dec
sarb
jl
ja
ss
xor
or
fidivl
lods
out
stos
idivb
rcll
pop
aaa
cmp
jmp
lret
fs
mov
out
in
out
jne
js
push
and
loop
shrl
out
insl
scas
dec
sub
adc
shlb
mov
jg
repnz
clc
dec
subb
psubsb
adc
std
inc
std
mov
out
push
clc
dec
js
pop
mov
jne
je
push
popa
cmpsb
mov
and
adc
pop
dec
fmull
xor
mov
mov
cli
add
loopne
sbb
jecxz
fisubrs
cltd
pop
jne
scas
adc
dec
popf
mov
les
loopne
push
xchg
mov
push
rorb
mov
mov
jb
and
loopne
ret
mov
or
xchg
or
scas
cmp
dec
adc
jmp
insb
clc
cmc
nop
cmpsl
jmp
fimull
lods
pop
dec
fmul
or
cmpsb
or
or
add
adc
movsl
rep
cli
leave
ljmp
es
lret
jne
pop
or
je
mov
loop
shl
push
add
push
insl
lods
fs
and
je
jnp
icebp
adcb
xchg
in
shlb
imul
in
fcmovu
aad
nop
jnp
pop
dec
pop
mov
adc
inc
dec
insb
data16
xchg
jae
xchg
and
fisubrs
les
dec
inc
je
push
test
cmp
dec
xorb
subl
mov
outsl
pop
fcmovnb
inc
ds
add
mov
adc
rol
mov
add
inc
or
or
fdivrl
adc
push
scas
gs
popf
fdiv
mov
mov
mov
push
pop
xor
mov
pop
cli
push
call
jecxz
scas
add
mov
cmpsb
stos
lock
repnz
sbb
cld
jnp
insb
push
hlt
xor
xor
push
je
mov
test
cmp
push
lock
ja
lods
pop
imul
js
adc
iret
idiv
cmp
xchg
pop
fdivs
push
lcall
jne
xchg
mov
pop
jae
push
jp
lea
jp
fdivr
pushf
push
or
jne
pop
pop
in
call
popa
roll
mov
and
mov
jnp
test
js
jmp
stc
out
stc
mov
arpl
faddp
xor
loope
cmpsl
mov
pop
sub
aaa
pop
jg
fwait
in
push
fwait
dec
add
mov
testl
hlt
lods
cmp
sub
loope,pn
add
inc
and
jle
sub
stc
mov
lret
xchg
mov
aaa
ds
jmp
pushf
into
push
pusha
push
xor
cwtl
lea
movsl
sbb
mov
jns
jae
test
lea
inc
pop
pusha
mov
sbb
subl
adc
add
loopne
andl
sarl
mov
fisttpl
push
data16
push
int
stos
jno
outsl
mov
std
jle
and
cmpsb
imul
fisubrs
std
jp
pop
int3
mov
pop
and
add
ret
pop
test
mov
scas
in
push
lods
mov
loopne
or
roll
fimull
pushf
sub
add
and
adc
icebp
loope
pop
push
fisubl
fst
or
pusha
scas
push
outsb
inc
jge
add
xchg
xlat
xor
and
push
insl
mov
std
xchg
pop
cmp
loope
mov
xchg
outsl
stos
nop
jg
inc
insl
cld
add
jmp
fistps
inc
xor
ficoms
rol
popf
mov
and
jmp
cld
adc
pop
sub
cmp
loopne
sub
xor
insb
jo
rclb
xchg
testl
pop
and
mov
sbb
das
push
dec
mov
jle
mov
cli
clc
and
stos
movsb
test
add
test
add
sub
sbb
shrb
jmp
xor
adc
stos
enter
ret
mov
jg
lcall
rol
cld
xchg
je
jo
inc
and
pop
mov
je
dec
in
inc
lds
push
ror
test
mov
fbstp
es
push
dec
aam
pusha
dec
inc
or
lea
es
out
lods
std
push
addl
popa
inc
sub
aad
mov
lea
pop
scas
bound
jge
mov
inc
xchg
add
lock
cmp
fcmovu
shll
fcmovu
adc
loopne
mov
pop
rclb
cmp
sti
test
xchg
adc
mov
adc
ja
lcall
adc
rol
sub
push
loope
mov
mov
cli
popa
rorl
call
jb
fstl
pop
mov
mov
mov
pop
sub
push
inc
loop
cmp
mov
dec
outsl
enter
sti
jl
rolb
xor
jne
ficompl
cmpl
sub
or
fldcw
xchg
pop
sbb
das
jns
fdivp
aaa
mov
sbb
cmp
mov
mov
or
gs
cmp
jecxz
je
adc
popa
mov
add
cld
sarb
ja
loopne
push
or
sti
pop
fnstcw
aas
or
inc
add
inc
cmpsl
mov
inc
or
insl
inc
jno
and
inc
fsubrs
ss
outsb
sti
les
or
pop
std
cwtl
fwait
or
mov
fnstsw
cmp
mov
pop
xlat
insl
push
mov
inc
decl
dec
mov
xchg
xchg
adc
test
jne
js
jecxz
jne
pop
push
inc
fdivrl
inc
mov
mov
outsl
xchg
xchg
push
adc
mov
cmc
jae
fwait
imul
inc
bnd
ds
mov
shlb
push
cld
lret
inc
and
fstpt
pop
xor
nop
daa
jg
ds
add
inc
cwtl
into
sahf
push
push
xor
pop
movl
xchg
repnz
push
jb
cltd
pop
loopne
mov
outsl
sbb
je
dec
xchg
xor
jnp
inc
mov
pop
cmc
sub
dec
lea
js
aam
dec
ja
mov
fs
jne
movsl
mov
insl
aas
stc
mov
jp
pop
mov
add
sub
das
xchg
hlt
insl
push
outsl
adc
xchg
inc
and
daa
ljmpw
and
arpl
jle
inc
sub
jg
push
xchg
mov
inc
test
iret
test
and
rclb
invd
orl
mov
sti
in
mov
mov
inc
loope
cmc
out
push
sbb
ds
outsb
jg
dec
xor
adc
mov
pop
loopne
jmp
inc
insl
std
sbb
mov
push
or
incl
into
push
adc
sub
pop
sbb
test
mov
mov
bound
bswap
adc
popa
imulb
and
daa
fmull
lret
adc
dec
test
xlat
push
inc
adc
je
cltd
shl
dec
and
dec
xchg
fcompl
lret
aaa
mov
xchg
test
pop
adc
mov
mov
and
rorl
xor
add
pushf
insl
rcl
std
clc
adc
xor
in
sbb
jp
mov
cld
call
movsb
sub
aam
xor
jae
xchg
popa
ficoml
stos
outsb
aas
sub
sbb
jg
pop
cli
fdivl
and
mov
lcall
sahf
push
dec
shr
jb
lds
xlat
cs
call
sub
and
xchg
sub
mov
shlb
aad
or
push
and
loopne
xor
idivb
cmp
out
push
push
out
push
adc
and
or
pop
xor
out
xor
lret
cld
adc
mov
pminub
fisubrl
pop
jg
dec
and
cmpsl
push
jmp
mov
sbb
andl
adc
insl
xchg
movsb
std
outsl
or
shlb
and
adc
pop
adc
mov
cmp
scas
sub
dec
add
pop
or
test
add
inc
insl
std
icebp
shrl
subb
cmp
dec
mov
jmp
mov
xor
enter
mov
aam
jmp
pop
mov
jg
push
jbe
stos
test
es
fisttpl
outsl
fildll
scas
clc
mov
rorl
mov
mov
mov
std
jle
shl
inc
das
mov
jns
jg
or
or
test
inc
cmc
test
adc
add
add
add
cmpsb
lods
mov
dec
call
xor
js
testl
aaa
push
iret
rcll
in
pop
or
or
daa
cmp
ja
push
ja
sbb
in
jno
or
pop
js
sbb
sub
sub
xor
js
sti
xchg
cmp
inc
aam
jnp
lds
inc
mov
stos
mov
adc
xchg
xorb
ret
repnz
mov
shlb
mov
in
out
ja
xchg
ret
iret
js
pop
test
cs
mov
push
insl
jmp
hlt
adc
leave
inc
mov
out
pop
cmp
mov
mov
shrl
insl
cwtl
push
xchg
push
movsl
sub
fidivs
xchg
add
pop
stos
test
ljmp
sti
mov
cltd
cmp
sarb
icebp
and
mov
daa
xchg
icebp
mov
pop
sbb
sti
mov
out
inc
iret
xchg
pusha
loope
lds
notb
stos
insl
jo
sahf
cs
add
insl
adc
inc
packuswb
arpl
jp
icebp
mov
mov
mov
pop
ljmp
or
add
lea
jp
xchg
mov
and
sub
jg
push
inc
add
fldcw
std
sbb
adc
shr
in
scas
loopne
fcomp
insl
or
or
sbb
or
push
sbb
jecxz
sub
pop
shlb
call
jno
xor
xorb
cmp
jns
jns
and
push
sbb
fldcw
orb
jle
or
and
sti
aam
inc
pop
mov
inc
sarb
cmp
sub
pop
pop
pop
jecxz
out
push
mov
dec
xor
orl
into
dec
mov
mov
aam
cmpps
in
std
add
or
and
mov
push
cmp
inc
mov
out
push
cld
cmp
test
neg
xchg
or
lret
int3
push
xchg
mov
jecxz
jmp
inc
les
push
arpl
aaa
incb
add
stc
cmp
inc
js
daa
fdivrs
rol
and
fildll
mov
xchg
aaa
clc
in
mov
sub
into
fisubl
inc
mov
lods
testb
pop
pop
mov
and
loop
hlt
sti
add
inc
inc
imul
popa
int
sub
sub
cltd
lock
rcl
adc
adc
jbe
rclb
dec
dec
sbbb
mov
int
or
jnp
addr16
or
push
push
cwtl
cmp
loope
aad
push
mov
roll
cmpsb
sbb
mov
mov
lods
push
inc
leave
rolb
add
stc
mov
sti
or
and
int
es
lret
popa
mov
mov
mov
xlat
bound
jle
rcl
popf
pop
ss
mov
push
xor
cwtl
int3
push
fadd
cwtl
ds
jbe
jo
push
xchg
popf
xchg
add
rorb
mov
pop
das
mulb
imul
adc
add
mov
gs
inc
je
jne
inc
cmp
mov
xor
lock
mov
dec
repz
pop
push
lret
dec
ljmp
jmp
push
inc
mov
add
stos
shlb
jmp
xchg
lahf
xchg
loopne
jmp
inc
scas
fdivrl
aam
xor
iret
insl
pop
push
cmp
jb
aas
mov
adc
mov
sbb
int3
jns
mov
outsl
add
pop
arpl
inc
pushf
out
dec
xchg
pop
add
cli
aad
bound
mov
xor
stos
loope
xchg
adc
shrb
mov
out
xor
jmp
and
rcrb
pushf
sbb
loope
and
pop
cmp
mov
mov
scas
jecxz
sbb
std
inc
in
inc
sub
jg
ds
ljmp
jle
push
add
sub
loop
inc
dec
stos
enter
pop
adc
in
das
fs
fistl
adc
cwtl
or
push
fidivrl
js
les
lea
xchg
or
push
xchg
stc
icebp
out
gs
xchg
mov
adc
aas
lret
ds
aam
mov
mov
mov
jns
xor
fiadds
inc
pop
imul
dec
mov
mov
mov
outsb
or
adc
out
loopne
jp
mov
or
call
xchg
add
repnz
or
push
inc
fdivs
mov
xchg
sub
lahf
mov
fs
cmp
test
outsl
add
jle
rclb
clc
adcb
fildll
lea
inc
xchg
fimuls
or
cmp
and
jecxz
ss
fadds
and
jmp
sub
addl
test
jp
add
dec
cmp
jmp
cltd
and
sbb
sub
clc
sbb
cmc
loopne
movsb
ffreep
sub
xchg
fnstsw
cmc
inc
xchg
out
push
xchg
inc
lods
mov
test
mov
jo
je
and
xchg
mov
mov
popa
fcoms
lods
mov
sub
pop
aas
pop
in
pop
test
imul
scas
cmp
rcrl
ret
jae
lea
stos
fidivs
test
scas
push
jno
or
lock
push
mov
addr16
and
fisttpl
inc
rolb
sahf
sub
aad
sbb
fldcw
pop
xchg
push
xchg
and
mov
sahf
dec
lret
mov
pop
mov
sahf
rol
std
cltd
in
mov
decb
orl
pop
sbb
adcb
iret
mov
dec
dec
pop
push
clc
cmpsl
or
mov
xchg
mull
mov
adc
mov
inc
pop
nop
mov
test
loop
lea
jge
popa
aas
push
ret
and
cmp
shl
cwtl
sti
aas
jle
jnp
mov
mov
add
cwtl
jecxz
xor
cmp
mov
mov
mov
sub
test
add
movsl
ficoml
and
sub
push
push
mov
push
add
cli
push
jp
xchg
pop
or
sahf
and
rorb
adc
dec
stos
add
jo
cld
pop
test
test
mov
sahf
rol
mov
xchg
push
jge
or
xchg
jle
mov
pop
aaa
push
add
pushf
loope
in
popa
dec
fdivrs
insl
jp
pop
das
stos
ljmp
in
mov
ds
mov
ljmp
in
push
xchg
fsubrl
push
test
xlat
outsl
cmc
movsl
outsl
icebp
dec
sbb
orb
mov
adc
pop
nop
push
cmpsb
inc
es
lods
mov
stos
testl
ja
or
xchg
loopne
sub
mov
push
pop
xor
je
mov
mov
dec
in
xchg
fildll
frstor
cmp
adc
fistpll
jl
push
clc
andl
insb
adc
adc
rorl
inc
inc
sub
push
in
pushl
pusha
jae
out
cmp
sub
jo
shlb
fimull
ret
pop
add
aad
or
dec
pop
stos
push
aad
add
ja
xchg
call
mov
mov
jle
popa
aaa
das
into
fnstenv
ret
adc
xor
jne
nop
inc
xchg
xchg
imul
or
popa
cwtl
filds
in
stc
call
adc
ror
push
or
or
lds
cld
bound
bound
push
icebp
pop
xchg
clc
and
push
or
pop
add
sbb
dec
add
sbb
or
sti
adc
les
les
mov
das
call
movsl
add
or
jb
add
mov
sub
sbb
dec
ret
vmovdqu
cwtl
add
or
and
dec
push
lcall
insb
les
test
xlat
int3
push
outsb
or
sbb
xchg
out
push
sbbb
fisubrl
and
add
dec
mov
incl
push
dec
daa
xchg
lret
loop
mov
sbb
ljmp
mov
scas
aam
repz
jge
sbb
mov
fildl
dec
cmp
aas
fcmovb
fcomps
ret
mov
sub
into
je
fwait
dec
xor
adc
fdivl
mov
ret
and
mov
in
sub
rcll
outsl
xor
cwtl
shlb
inc
sbb
insl
mov
sbb
lmsw
mov
pop
clc
add
test
clc
fsubrl
jle
or
xchg
fdivrl
ds
jg
leave
pop
mov
mov
leave
push
cmp
and
xchg
cmpsl
inc
cmp
jmp
wbinvd
psrld
mov
sbb
dec
outsl
mov
addl
add
cmc
inc
sbb
xchg
mov
mov
xor
mov
cmp
jno,pt
stos
jno
inc
nop
fidivl
push
mov
call
test
add
mov
lds
in
or
sub
jl
inc
rcrb
push
pop
iret
insb
rolb
sub
incb
add
cmc
ret
mov
mov
pusha
idivb
inc
mov
xlat
popf
js
cmp
outsl
and
movb
xchg
mov
pop
xor
insb
bound
mov
pop
dec
jp
rcr
insb
filds
push
jmp
add
mov
in
jnp
sbb
sbb
ffreep
lea
adc
xchg
sbb
adc
add
cmp
fidivrl
test
incl
mov
push
adc
inc
mov
jbe
scas
add
jnp
xor
mov
mov
pop
fnstsw
mov
xlat
jl
jecxz
icebp
lock
and
out
cwtl
cmp
jb
ret
cmp
popa
ja
inc
jl
mov
xor
scas
xor
pop
lret
out
pop
loopne
dec
sbb
add
jg
xchg
adc
lcall
pop
outsl
sbb
sbb
clc
and
cmc
mov
sub
add
outsl
iret
or
jo
bound
loope
xor
or
cmp
jle
rolb
adc
lcall
fiaddl
push
loop
ja
fldl
mov
mulb
and
pushf
jle
dec
sbb
pop
clc
mov
movl
es
out
mov
xor
popa
xchg
xchg
mov
adc
sbb
sub
xor
add
aaa
mov
ret
test
cmp
or
loop
int3
inc
mov
xchg
jae
pop
fwait
push
sahf
pop
loop
lock
fs
lret
add
push
test
sbbl
jbe
jae
popa
clc
sbb
mov
mov
hlt
dec
outsb
mov
add
into
adc
pusha
ror
aas
sub
cmp
dec
cli
or
int
mov
lcall
add
adc
push
or
sarb
dec
dec
mov
fiaddl
and
lea
aas
lods
pop
jecxz
cmpsb
mov
sti
inc
mov
cmp
cli
in
lods
mov
bound
push
pusha
pop
movsb
inc
cmpsb
outsl
cmp
jmp
adc
clc
cmpl
adc
or
shr
shrl
mov
adc
xor
jo
inc
pop
test
xchg
int
fisttps
loopne
call
pop
fdivrl
sbbb
push
test
xchg
sub
cmc
cmp
jns
js
add
sbb
stos
and
sub
push
ficompl
jne
pop
lods
mov
inc
lock
and
push
subl
inc
jg
mov
pusha
out
fildll
lret
jmp
mov
adc
rcr
ja
mov
test
sbb
fs
push
dec
sub
mov
cld
lock
add
fidivrs
stc
or
push
fadds
incl
xchg
pop
add
pop
mov
mov
mov
xor
pop
insb
outsl
out
add
add
add
pusha
sti
or
out
addb
mov
cmpsl
and
add
ret
cmp
js
push
xor
arpl
mov
inc
inc
cmp
mov
sbb
popf
cmp
xchg
jne
mov
je
loopnew
push
scas
insl
insb
pop
mov
inc
das
xchg
lret
sti
out
mov
or
and
aas
mov
gs
mov
rcll
or
clc
pushf
lsl
mov
dec
aaa
or
movsl
xor
loopne
push
push
xchg
jno
iret
ret
push
pop
cld
dec
popa
xor
push
aam
mov
hlt
cld
adc
or
or
clc
das
cld
mov
add
imul
daa
mov
mov
add
push
xor
sub
cli
shlb
jno
aad
test
pop
lock
cmp
pop
jecxz
xchg
call
dec
cmpsl
mov
push
out
fdivr
ret
jl
sbbl
in
jmp
pop
or
mov
mov
sub
push
call
inc
or
mov
sti
sahf
cmp
out
das
insb
jl
push
in
push
cli
flds
dec
adc
lret
mov
pop
jo
xchg
xchg
add
pop
leave
xchg
jp
sub
cmp
mov
jno
add
jae
xchg
pop
ds
cld
push
or
inc
mov
add
js
gs
ja
adc
sbb
pop
pop
adc
mov
mov
jge
add
jo
sar
aaa
jnp
jp
scas
iret
popa
jno
stos
arpl
mov
mov
dec
mov
inc
jmp
subb
add
dec
xchg
repz
sub
arpl
pop
xor
cmpsb
bound
aad
aam
inc
mov
repnz
ds
jno
mov
neg
push
popf
xchg
iret
add
mov
addl
shrb
insb
jl
sub
jl
clc
xchg
mov
push
push
mov
adc
pop
mov
das
scas
pop
test
loopne
sub
cmp
loop
fucomp
push
or
mov
jns
inc
in
sbb
dec
push
ficomps
leave
shlb
sbb
scas
mov
hlt
push
jne
xlat
dec
and
clc
stc
pop
ljmp
mov
lock
and
jmp
pop
inc
rolb
rcrb
jecxz
stos
enter
add
aad
push
add
mov
or
idiv
andw
ss
es
scas
and
out
imul
xor
or
push
xchg
bound
adc
cmpsb
jp
stos
xchg
push
dec
mov
aad
fs
push
adc
or
push
fbld
xor
mov
test
mov
and
test
dec
ss
push
es
cmp
aaa
mov
mov
scas
push
mov
cmc
rcll
pop
sbb
stc
sbb
add
loopne
or
pop
cmp
ljmp
cmp
and
push
rolb
adc
cltd
sub
jmp
push
fcomps
fdivrs
decl
subb
inc
cmc
xchg
inc
cmpsb
out
xchg
lahf
and
sbb
shl
or
int
pop
fdivr
insl
jne
mov
mov
test
cld
out
ljmp
js
push
pop
inc
cmpsb
test
jle
fldt
pop
lea
mov
push
and
fsubrs
push
xchg
incl
int3
cld
jbe
and
mov
scas
les
mov
sbbl
push
and
into
lret
pop
push
mov
pop
sbb
xor
or
imul
cmp
mov
jg
push
pop
xorb
lcall
jle
mov
xor
clc
out
pusha
stos
aaa
cmp
fisubrl
scas
shrb
js
xor
addb
push
jecxz
xor
add
out
popl
outsl
das
jge
shlb
add
jmp
and
push
dec
mov
mov
in
jl
sub
push
les
push
add
add
arpl
mov
mov
push
adc
push
repz
in
icebp
mov
mul
in
xchg
ljmp
jno
shlb
roll
lock
fidivl
pop
pop
or
scas
mov
jp
sbb
lahf
fidivs
movsb
jno
shl
push
insb
ljmp
adc
fstl
jg
testb
sub
cmp
push
movsb
je
das
insl
sbb
pop
test
loope
mov
inc
jmp
outsl
push
adc
mov
sbb
jno
xchg
add
jo
popf
popl
movsl
sbb
push
cs
hlt
sbb
filds
xchg
sbb
mov
cmp
icebp
aas
dec
mov
jbe
jae
mov
add
xchg
cmc
mov
fstl
aaa
sbb
fdivrl
repnz
pop
nop
pusha
shlb
adc
cwtl
lea
fnsave
add
dec
sar
das
jge
insl
addb
lcall
push
pop
mov
or
iret
xchg
push
push
fadd
sbb
inc
pop
jnp
lahf
xlat
cmpl
jae
sub
adc
push
xchg
roll
dec
inc
je
ret
pop
clc
sbb
andb
jno
in
sub
call
out
pop
adc
aam
sbb
dec
notw
stc
sub
sub
pop
stos
mov
sbb
mov
sahf
call
les
mov
ret
push
cmp
into
add
jbe
xchg
and
pushf
mov
pop
or
adc
dec
mov
push
rcll
ljmp
xor
fcomps
jecxz
outsb
outsl
fists
fists
mov
clc
pop
aad
bound
jl
push
out
push
subb
push
or
mov
dec
inc
pop
fcompl
xor
fistps
or
pop
aam
mov
out
test
or
mov
ja
outsl
outsl
lret
icebp
je
add
sub
scas
push
popa
ret
add
sbb
and
mov
pop
push
les
daa
mov
jbe
xor
push
or
jecxz
mov
test
and
push
pop
mov
lods
push
clc
mov
cld
dec
dec
xor
add
sub
push
xchg
rorb
fisubs
fwait
rclb
int3
jge
jne
lods
dec
daa
in
inc
les
inc
jge
mov
mov
add
test
mov
push
imul
rolb
jge
call
fmul
gs
pusha
sbb
iret
test
fcompl
mov
inc
jo
cmpsl
fdivp
push
jmp
fxch
sbb
flds
sub
cs
inc
mov
dec
adc
mov
inc
lret
mov
xchg
pop
mov
or
and
ss
and
dec
push
mov
dec
leave
pop
in
out
add
fdivrl
repnz
pop
mov
jp
mov
adc
mov
sti
or
lahf
jo
dec
lock
ss
or
jb
inc
push
mov
aam
and
negb
cwtl
sub
xchg
mov
hlt
cmp
dec
call
cmp
sub
pop
pop
mov
neg
mov
and
fst
scas
xchg
add
mov
xlat
adc
fwait
adc
jnp
in
sub
cmp
xor
pop
nop
mov
lds
ljmp
fistps
aad
push
cs
sbb
mov
push
data16
jge
jbe
and
pop
fcmovu
cltd
lds
aaa
adc
popa
jne
leave
outsl
dec
cmp
ret
jae
pop
jge
push
sub
test
hlt
movsl
fcmovnbe
dec
lock
sti
mov
pop
jl
mov
gs
andl
inc
in
iret
clc
pop
mov
pop
sub
jge
inc
jne
mov
lea
dec
fstl
inc
int
dec
pop
shl
shrl
aad
mov
cwtl
push
jmp
fildll
push
dec
jecxz
xchg
or
xor
sub
fmull
mov
shrl
inc
push
leave
xchg
sub
inc
test
rorl
fildll
std
neg
lds
cmp
pop
lods
inc
pop
pop
aam
sub
in
adc
shrl
fildl
loop
mov
ret
ja
mov
push
inc
jecxz
pop
insb
cli
loop
mov
cltd
lea
or
mov
inc
sub
lea
xchg
push
cld
orb
sbb
jnp
daa
stos
mov
mov
xchg
push
xchg
es
add
push
lret
aaa
pop
rep
std
inc
or
cli
dec
mov
addl
jmp
mov
imul
mov
mov
xchg
popaw
imul
xchg
mov
stos
inc
jmp
mov
xchg
mov
push
push
cmp
rol
or
or
mov
lds
xchg
pop
out
ds
test
loop
or
sbb
sbb
lock
pop
inc
test
adc
inc
testl
rclb
fstpt
rorb
mov
push
jns
and
mov
push
in
dec
das
xchg
mov
out
jecxz
jle
jo
xchg
fsub
pop
lods
cmp
adc
mov
push
jns
aad
sahf
fadds
adc
mov
les
mov
iret
sti
ret
jmp
movsl
inc
addb
mov
mov
pop
call
insl
cld
xchg
out
loopne
ljmp
rcll
cs
cld
push
fucomip
pop
sbb
shlb
mov
jge
leave
inc
jmp
push
or
jne
mov
push
or
mov
ss
call
push
lds
aas
push
out
mov
shrl
ret
push
pop
repz
dec
outsl
mov
push
repz
push
movsb
cmp
subl
decb
jg
push
adc
pushf
mov
mov
stos
push
mov
xchg
pop
push
mov
inc
xor
cwtl
xor
es
jns
adc
mov
pop
mov
loope
jge
or
sub
inc
xchg
mov
call
stos
dec
inc
orl
jg
add
jb
pop
gs
cmp
movsb
enter
jle
pop
sbb
lea
imul
imul
and
sub
sarl
mov
mov
push
xlat
das
xor
jo
ret
mov
fnstsw
and
mov
adcl
add
les
arpl
mov
xchg
xchg
mov
roll
insb
pushf
mov
pop
aas
gs
push
pop
js
fs
fistl
sbbl
aaa
mov
jle
insl
push
sbb
nop
xorl
dec
inc
outsl
mov
mov
js
inc
fldt
mov
adc
fisttpll
icebp
cli
xorl
fldcw
enter
sbb
pop
loopne
ret
xor
pop
faddp
aad
mov
adcb
in
add
fcmovbe
sub
jge
jne
lods
mov
cmp
inc
ret
test
add
cwtl
cli
aad
cli
lock
into
aam
jle
lcall
iret
jbe
sub
popa
icebp
imul
clc
in
ret
popf
cmp
mov
lcall
mov
rclb
pop
pop
in
in
bound
xor
aam
inc
jbe
jns
jecxz
movsb
mov
add
xor
fists
mov
mov
cmc
push
fidivrl
mov
mov
push
jmp
inc
adc
sub
xchg
and
dec
stos
aad
pop
stos
ljmp
mov
dec
js
je
or
sbb
into
mov
cwtl
shl
insl
mov
mov
in
outsl
jl
clc
add
and
cs
gs
icebp
xor
lds
and
xchg
inc
fsubs
sar
push
pop
in
pop
or
stos
jno
cmp
mov
dec
cmp
sbb
ret
mov
pop
lock
data16
cli
push
jno
mov
and
shlb
sbb
movsb
ret
test
add
push
adc
sub
sbb
jle
jne
push
xchg
push
mov
cmp
adc
mov
adc
cmp
addr16
dec
insb
mov
add
jb
or
in
xor
push
adc
mov
bound
or
lods
addr16
into
xchg
add
incb
pop
mov
rorl
js
test
jge
aad
pop
and
orb
nop
imull
data16
mov
sub
push
rcrl
aad
inc
out
outsl
js
bound
je
scas
rcrl
cli
mov
mov
xchg
sub
push
mov
inc
xchg
jae
mov
aas
in
ja
out
mov
fnsave
sub
adc
adc
push
cmp
and
hlt
aaa
inc
test
sahf
scas
ret
rorb
sbb
jle
pop
pop
je
jnp
test
push
repnz
push
mov
fcmovnb
push
jl
ds
dec
and
pushl
xor
loope
cmpsb
mov
out
int
outsl
or
loop
mov
scas
mov
mov
mov
shlb
inc
repz
popa
roll
sub
pop
pop
loopne
or
popl
xchg
xchg
dec
inc
scas
pop
jmp
das
mov
or
mov
mov
push
sarl
adc
or
xchg
jno
movsl
cmp
inc
out
adc
das
in
outsb
mov
arpl
push
xchg
jl
outsl
in
xor
call
stc
lret
push
in
loopne
push
jmp
aaa
call
int3
in
jl
push
jb
popa
jp
popa
mov
sub
ljmp
mov
sbb
and
jmp
push
ljmp
cli
xchg
dec
test
jnp
push
adc
into
mov
decl
xchg
add
pop
or
push
xchg
sub
cld
int3
sahf
xchg
inc
sub
jbe
pop
lcall
imul
fstps
sub
mov
imul
rcr
dec
sub
pop
shlb
in
adc
sub
mov
aad
mov
inc
hlt
notb
push
jmp
pop
dec
cmpsl
jno
in
pop
jge
mov
adc
std
lods
mov
inc
sarl
mov
popf
or
and
rcrb
icebp
push
cmp
pop
add
cmp
pop
mov
mov
mov
loopne
lahf
movsl
cmpsb
pushf
ret
cmpsb
push
mov
fwait
pop
mov
pusha
fs
clc
outsl
loopne
out
and
sub
mov
and
sahf
loopne
fisubs
pop
push
sbb
and
in
ja
push
mov
push
popf
enter
mov
push
jecxz
xchg
sbb
xor
jp
das
pop
push
bound
sub
sbb
push
aaa
insl
dec
incl
adc
test
adc
mov
sub
cmp
inc
push
adc
mov
mov
jo
add
mov
enter
mov
jmp
sbb
pop
push
outsl
xchg
cld
xchg
call
iret
mov
sbb
adc
xor
in
fcmovnu
loope
clc
daa
adc
fists
test
pop
into
std
out
adc
out
test
js
xor
sub
xchg
mov
pop
clc
mov
into
and
jecxz
test
mov
call
xlat
imulb
xchg
test
repnz
xor
adc
hlt
lods
xchg
xchg
lret
incl
loope
stc
xor
iret
mov
mov
cmp
mov
jge
push
inc
or
movsb
test
es
out
or
int3
mov
mov
sub
inc
push
mov
cmp
adc
shl
jecxz
push
inc
jl
mov
sub
rolb
dec
shl
push
xor
fcomp
ss
ret
jle
adc
sbb
mov
clc
push
mov
and
stos
ficoms
in
sahf
out
xchg
mov
test
sbb
insb
and
and
push
mov
mov
dec
inc
cmc
xchg
cmp
sub
xchg
add
ja
cmpl
mov
jo
pop
mov
sub
mov
inc
lcall
cmp
xchg
mov
out
loopne
loopne
es
sub
sub
sti
leave
add
sub
iret
xchg
dec
lea
pop
test
push
les
jb
jle
and
cmc
aaa
outsl
aam
sbb
cld
pop
jecxz
pop
icebp
cmp
adc
outsb
daa
outsb
pop
sub
dec
mov
dec
adc
cmp
aaa
shlb
dec
inc
mov
xor
mov
and
fistpl
sub
sbbb
fisttpl
xor
mov
insb
jge
lahf
jmp
jo
mov
popa
outsb
mov
or
les
or
iret
and
in
inc
je
jge
fucomip
filds
movl
fs
inc
fimull
enter
pop
pop
xchg
ret
shll
cmpl
leave
jmp
mov
mov
jg
mov
dec
pushf
mov
out
mov
rclb
std
repnz
inc
sub
xchg
jo
adc
xlat
pop
or
test
aas
in
sarl
and
pop
fistpl
in
sbb
sbb
add
dec
je
pusha
and
push
xor
dec
adc
movsl
rcl
retw
jbe
mov
popf
push
and
iret
fdivrs
jae
inc
imul
pushf
or
ror
in
call
or
adc
cmp
stc
cmpsb
push
fsubrs
and
loopne
sbb
adc
mov
ret
ret
xchg
les
jne
popf
mov
add
lcall
mov
push
inc
int
pop
mov
clc
fucomp
pop
jb
sbb
adc
jecxz
xchg
push
cmpsb
mov
movsl
dec
iret
mov
mov
pop
cmc
inc
rorl
sahf
pushf
pop
inc
xor
test
xchg
jecxz
inc
call
bound
in
jecxz
pop
xor
fisttps
jl
xchg
fcoml
cmp
in
mov
mov
loop
mov
fs
sbbl
stos
sbb
js
add
pusha
jecxz
dec
daa
or
jmp
outsl
mov
or
enter
mov
scas
or
and
pushf
push
dec
mov
sub
mov
out
add
mov
dec
mov
adc
aas
addr16
dec
cmpsb
adc
fcoml
hlt
out
hlt
adc
cmpsb
scas
mov
sub
xchg
faddl
and
lods
push
xchg
mov
xor
push
cmpsb
js
lea
mov
scas
in
and
movsl
aas
add
cli
dec
lcall
addr16
add
test
xchg
push
add
xor
pushf
xor
sub
negb
inc
outsb
xchg
pusha
add
or
imul
inc
pop
xor
push
xor
in
inc
stos
pop
pop
pop
testb
sti
sbb
or
test
adc
dec
ds
aas
clc
fistpll
sub
test
xor
xor
or
xchg
ja
loopne
loop
xchg
or
or
pop
lods
and
sub
movsl
jbe
jns
jg
inc
into
adc
cmp
dec
rorl
xchg
push
bound
pop
cmpsl
dec
pop
cld
pop
aas
popl
pop
add
les
or
fs
jg
loope
arpl
das
insb
imul
rol
mov
push
mov
icebp
dec
cmp
stos
mov
mov
push
dec
cmp
test
aas
imul
adc
xchg
ss
push
outsb
pop
bsf
mov
cld
mov
aam
loope
or
sbb
push
mov
movl
clc
shlb
sub
lods
dec
cwtl
dec
inc
or
rol
and
lcall
testb
out
lock
cmpsl
xchg
ss
or
jl
and
mov
out
dec
test
icebp
push
and
inc
and
lcall
shrd
ss
loopne
addr16
dec
rcrl
inc
aam
and
jecxz
movl
pushf
jne
sbb
add
pop
js
hlt
add
xchg
and
fiaddl
out
enter
xor
imul
jle
lcall
mov
pop
ret
mov
std
cmp
iret
rclb
mov
mov
jle
xchg
fwait
mov
adc
sub
xor
imul
insb
ja
cmc
pusha
sti
adc
sbb
ss
and
clc
jg
jns
movsb
movsl
cwtl
rcrb
call
mov
mov
cmpsb
cltd
out
sbb
inc
stos
loope
pusha
jl
xchg
loopne
mulb
notl
rorb
jnp
int
rorb
call
sbb
ret
clc
add
pop
test
mov
test
mov
xor
cmp
mov
pushf
inc
pop
sbb
cld
je
pop
lock
jg
scas
xor
rcll
mov
xorl
popa
outsl
mov
xchg
pop
cmp
jl
jmp
ffreep
mov
xchg
pop
les
shl
sbb
stc
fs
mov
das
inc
pop
add
xor
pop
outsb
ja
adc
and
jnp
repz
addb
clc
pop
cmp
test
cmp
pop
mov
pop
add
adc
adc
shlb
xchg
mov
dec
cs
push
icebp
jbe
and
out
mov
pop
lods
inc
sub
push
xchg
and
aad
xor
inc
mov
bound
hlt
test
loopne
mov
out
dec
or
inc
dec
dec
jns
cmc
sub
inc
fildl
add
mov
cmp
imul
xlat
mov
inc
das
mov
push
out
stc
gs
jg
pop
mull
push
fldcw
sub
mov
loope
add
xchg
dec
dec
fldenv
ds
test
fldcw
sbb
xor
push
std
sahf
pop
fldt
cs
jmp
out
ss
mov
adc
xchg
pop
mov
arpl
sbb
adc
add
push
fildll
loopne
adc
jge
lods
pop
loop
addr16
sti
sbb
outsb
movl
add
mov
mov
push
icebp
pop
mov
sbb
orb
mov
add
ss
cmp
leave
in
pop
out
or
mov
xchg
and
aam
sarl
add
inc
insl
aam
adc
filds
lds
and
cmc
mov
mov
je
adc
sub
sbb
pusha
data16
pop
icebp
cmp
cmp
cwtl
les
ja
out
pop
aas
pop
cmp
les
mov
icebp
lods
inc
push
lahf
out
mov
movsb
jle
shr
cmpsl
inc
sub
lret
dec
sbb
inc
push
cmp
inc
sarl
aad
pop
add
push
aad
dec
jnp
jmp
mov
or
dec
insl
bound
fwait
push
push
imul
shll
pop
mov
test
je
or
jno
lds
mov
mov
adc
arpl
sub
and
cmp
jp
lret
les
adc
mov
and
in
inc
orb
mov
inc
shlb
sbb
inc
cmp
pop
sarb
js
mov
inc
test
jl
mov
or
and
in
mov
out
mov
adc
xor
or
xchg
clc
outsb
sarb
lods
std
ds
data16
xor
pop
mov
add
pop
icebp
dec
ljmp
xchg
cmp
inc
add
adc
mov
adc
add
adc
out
push
les
mov
in
add
pop
push
fimuls
lods
test
mov
mov
xchg
jg
shl
in
mov
shlb
push
js
mov
push
call
ja
xchg
rcr
lods
loop
cmc
jecxz
or
testb
add
popf
ja
fisubrl
loopne
movsb
divb
mov
das
jge
scas
rcll
sbb
es
and
loope
jbe
push
mov
cmp
out
xor
sub
clc
test
loopne
adc
or
add
mov
mov
push
shrl
shl
aam
push
adc
xchg
xchg
mov
test
pop
or
es
enter
cmp
mov
cmpsl
aas
cwtl
xor
add
push
add
movsl
outsb
pop
jbe
sbb
mov
inc
into
ss
rcll
inc
jmp
test
pop
push
and
add
sbb
lock
daa
add
in
xchg
push
cmc
xchg
je
and
shll
test
orl
mov
bound
out
add
negl
dec
push
push
adc
stos
inc
xchg
pushl
and
fistpl
mov
dec
sti
cmp
arpl
ret
adc
pop
mov
outsl
in
or
jecxz
cli
dec
clc
pushf
aad
inc
push
xchg
cmp
mov
pop
test
or
outsb
outsb
out
mov
push
insb
push
push
sub
xlat
ret
out
mov
jge
sbb
movsl
sar
jp
inc
sub
daa
sbb
mov
outsb
outsl
xor
pusha
inc
outsl
nop
or
and
or
xchg
fwait
mov
mov
std
rcll
cmpsl
cmp
nop
bound
es
gs
pusha
lods
addr16
aad
inc
arpl
fcomp
mov
inc
icebp
inc
shlb
dec
dec
jno
pop
js
add
jbe
mov
ficoml
pop
sbb
jbe
lea
adc
in
sbb
jae
mov
add
add
mov
in
ret
push
mov
vprotq
shll
jle
xchg
sbbl
pop
jp
push
push
pop
dec
mov
adc
ja
mov
inc
out
loope
push
fimull
aas
lahf
and
aam
adc
cmp
orb
repnz
mov
ret
xchg
or
and
outsb
pop
push
pop
xchg
stos
inc
mov
pop
sahf
jne
push
push
mov
out
sbb
in
out
es
js
add
loop
mov
xchg
sbb
call
sti
je
sbb
test
adc
aam
dec
je
mov
popa
and
push
loopne
in
push
inc
ds
push
shll
dec
adc
dec
ja
repnz
enter
push
sbb
mov
add
or
xchg
mov
insl
mov
mov
jp
xor
inc
fnstsw
fmulp
push
pop
adc
xchg
pop
inc
mov
jl
adc
sub
mov
pop
les
or
mov
inc
jg
shl
sti
mov
imul
arpl
rcrb
push
xor
add
clc
lods
filds
pop
lcall
lahf
out
fisubrl
es
outsl
fiadds
popa
mov
or
or
mov
imul
or
fmuls
mov
rorl
jecxz,pt
mov
loope
or
mov
add
jmp
stc
scas
mov
pusha
clc
ret
push
sbb
fwait
push
push
ret
gs
mov
push
xor
roll
fcoms
or
or
jbe
icebp
mov
dec
test
popa
stc
and
sbb
dec
std
jno
inc
imul
dec
repnz
adc
xchg
mov
inc
cmp
adc
ror
and
icebp
ljmp
roll
fmull
mov
cld
lea
ljmp
mov
cmc
dec
outsl
lds
arpl
mov
mov
xchg
inc
xor
ds
js
outsb
gs
cltd
bound
add
cli
mov
outsl
rcll
lret
clc
xchg
pop
adc
xchg
xor
inc
sub
rcrb
out
call
add
hlt
das
jg
movsb
hlt
mov
test
adc
sbb
adc
and
push
sbb
cmp
adc
movsl
cli
mov
add
cwtl
push
cmpsl
sbb
pop
xorb
mov
cmp
sbb
xchg
mov
adc
cmp
ss
jg
inc
movsl
daa
cli
out
xchg
fwait
or
pop
sbb
mov
in
ret
mov
fstpl
test
inc
dec
jmp
sahf
and
stos
ss
aas
add
mov
in
outsl
sub
idivl
daa
jge
das
fdivr
push
insb
sbb
fildll
rclb
mov
mov
fs
lock
sysret
mov
cmp
xor
nop
xchg
add
mov
dec
adc
jne
mov
cmp
call
xor
mov
fcmovu
inc
outsl
add
enter
push
shlb
jb
dec
xor
pop
rcll
clc
lea
xor
jns
mov
gs
jmp
cltd
fs
xor
mov
cmp
mov
cli
mov
add
xchg
sub
add
clc
sbb
dec
mov
outsl
mov
mov
clc
fwait
addr16
dec
cmpsl
jb
mov
je
sti
cmpsl
mov
divl
and
fcoml
and
add
pop
lock
or
push
adc
decb
loope
pop
jmp
mov
mov
sbb
pop
divb
mov
shrl
cld
pop
fxch
sbb
xchg
ret
ret
add
js
xor
js
enter
mov
aaa
enter
dec
fucompp
and
inc
sbb
jmp
push
add
adc
sbbb
lock
mov
test
or
lret
dec
scas
add
sti
sbb
sbbl
add
push
jecxz
sbb
push
leave
fldl
add
std
fs
mov
pop
fdiv
mov
xchg
or
out
sbb
je
mov
or
jne
and
lods
orl
add
push
iret
push
pusha
lcall
int
jmp
cld
push
ror
push
xchg
inc
cld
push
mov
outsb
test
or
ljmp
rolb
loopne
cmpsl
cmp
pop
nop
in
adc
mov
es
mov
xchg
or
lds
stc
mov
std
adc
lods
mov
mov
stos
popa
cmp
sub
mov
add
into
dec
out
jo
das
je
push
adc
jns
fimull
fistpll
lods
pop
pop
aad
inc
push
clc
fdivl
and
ds
add
pop
cmp
outsb
mov
jns
in
insb
pop
xchg
xor
inc
dec
xchg
arpl
push
and
xchg
push
jl
dec
bound
and
scas
aaa
sbb
sbb
add
lods
fstps
mov
or
jns
mov
push
dec
fbstp
jg
stos
jbe
lcall
adc
dec
or
or
mov
pop
dec
cld
fistpl
push
outsl
mov
cmpsb
out
jle
or
fisttps
cmp
adc
sub
mov
sub
sbb
adc
mov
out
insl
pop
sub
in
mov
sahf
mov
add
xlat
into
xor
lcall
stc
jp
adc
pop
int3
adc
mov
imul
xor
push
pop
pop
addb
orb
adc
jmp
adc
pop
lahf
std
cmp
ljmp
push
jl
nop
add
mov
lea
adc
mov
add
enter
sbb
xor
sbbb
jecxz
out
sti
imul
xchg
loope
mov
sub
icebp
jg
and
cmp
mov
mov
lret
popf
mov
aas
out
jge
dec
add
mov
push
in
nop
ret
pop
inc
or
aaa
fdiv
or
pop
dec
testb
call
div
mov
outsl
add
ret
std
std
or
addr16
aam
adc
pop
inc
inc
push
fildl
xchg
dec
mov
dec
test
push
aam
xchg
js
aas
arpl
addr16
arpl
pop
das
cmp
mov
xchg
mov
xchg
aam
lock
fiadds
sbb
mov
adc
sub
mov
fs
fldenv
add
lcall
mov
aaa
enter
dec
sbb
sbb
push
push
mov
mov
sarl
cli
aaa
int3
add
mov
pop
mov
jbe
sti
xchg
leavew
inc
andl
cmp
sbb
mov
push
or
fwait
fs
push
mov
pusha
pop
jne
cs
mov
loopne
sub
dec
jl
je
cmp
repz
mov
push
or
push
notl
jl
mov
imul
sub
repz
mov
mov
sub
push
sarb
sti
adc
sbb
scas
cmpsb
test
std
movb
xlat
outsl
test
dec
mov
idiv
and
mov
aad
jle
out
aad
pop
pop
pop
mov
push
sbb
adc
and
push
negb
xchg
pop
insl
int
xorl
je
mov
mov
mov
inc
dec
inc
je
mov
notb
inc
pop
setno
lea
ljmp
and
not
inc
pop
jbe
cltd
fsubl
dec
aaa
push
add
add
inc
xlat
or
push
lods
insb
out
lock
push
je
dec
sub
or
loopne
hlt
fistps
in
xor
push
loope
ljmp
lahf
xor
mov
insb
xchg
arpl
sbbb
or
sahf
mov
jp
sbb
lods
fcmovu
hlt
fists
inc
lret
idivl
pop
or
popa
inc
jg
ljmp
xchg
sub
sbb
ljmp
mov
push
xor
pop
rcll
lods
mov
mov
andb
movsl
push
std
dec
insb
notb
dec
inc
pop
cli
mov
pop
insw
sbb
les
dec
aaa
decl
and
ret
lcall
mov
ja
movsb
jle
repnz
push
xlat
mov
adc
test
cmc
or
shrb
sarl
xchg
test
popa
loope
rcll
das
or
dec
add
bound
das
jl
mov
addb
fidivrl
adc
cs
aas
movsb
out
in
and
or
imul
test
mov
mov
fs
cmp
in
addb
rclb
addr16
sbb
aad
ror
dec
adc
mov
jno
dec
push
jp
dec
lods
repnz
into
repz
adc
icebp
lret
test
push
mov
mov
les
aam
shl
sahf
test
sub
push
push
dec
cmc
cltd
in
stc
imul
inc
cmpsl
incb
ss
mov
jmp
add
push
test
mov
iret
and
pop
inc
pop
sub
lret
outsl
mov
cmp
out
leave
shll
mov
rcl
jo
jbe
add
xchg
in
lret
ret
das
mov
and
mov
sahf
cmp
jb
cli
add
rclb
mov
aas
popa
icebp
mov
push
pop
mov
add
shrb
shrl
ja
je
or
clc
scas
sbb
xchg
mov
testl
loop
and
push
hlt
test
pop
rcrl
fidivrl
arpl
cmc
outsb
xchg
dec
push
popa
rcr
es
adc
ja
adc
test
mov
or
sti
xchg
movsl
repnz
pop
and
cld
jnp
jp
or
add
xchg
add
lods
mov
jmp
test
push
push
repnz
shl
inc
and
cmpsl
jo
cltd
push
popf
push
sub
insb
fisttpll
cmp
outsb
mov
pop
test
dec
sbb
fst
stos
add
sbb
fisubl
ljmp
or
outsl
mov
and
mov
inc
push
mov
sub
sub
mov
lock
loopne
stc
das
sti
lea
mov
popa
sub
insl
and
xchg
ja
or
sbb
mov
dec
aad
clc
adc
push
mov
sub
test
stc
cmpb
sub
fwait
lcall
pushf
jo
sbbb
stc
or
cmpl
mov
fs
loopne
xor
jp
push
inc
mov
push
sbb
push
jb
sbb
pop
adc
jns
cmp
lods
mov
pop
orb
les
je
inc
lods
scas
fistpl
xorb
push
and
clc
mulb
dec
idivl
cmp
push
push
sti
push
pushf
and
mov
or
data16
mov
ds
jmp
ljmp
jg
cmp
pop
mov
mov
and
jp
xor
mov
fldenv
fstpt
push
lods
bound
mov
add
call
arpl
sbb
mov
xchg
lods
les
ret
loope
add
dec
hlt
ljmp
vcvtpd2dqy
aad
cmp
jecxz
push
mov
mov
xor
lock
inc
and
rcl
std
das
mov
dec
mov
dec
mov
pushf
outsl
and
das
sub
and
or
ret
fcomp
outsb
or
sbb
xor
int3
push
nop
int
xchg
add
or
jp
dec
movsb
ljmp
repnz
jg
les
or
popf
inc
inc
cmp
add
adc
jbe,pt
jo
push
or
enter
jg
mov
and
mov
and
and
ret
test
insl
sti
jg
dec
js
xchg
in
xchg
and
xchg
mov
scas
jg
jnp
add
jnp
in
iret
adc
dec
call
dec
mov
test
dec
or
lahf
orl
or
mov
dec
push
mov
lahf
dec
test
test
aaa
jbe
loopne
fwait
pop
call
pop
psadbw
xchg
sub
add
and
loope
adc
push
icebp
lds
pop
jne
dec
je
std
cmp
adc
sbb
xor
and
dec
scas
xchg
test
xchg
jb
sbb
shl
lret
int3
aaa
or
ss
test
outsl
arpl
sbb
fbstp
outsb
inc
cmc
or
daa
stos
movsb
push
in
xor
push
orl
ljmp
mov
outsb
cmp
sti
loopne
clc
int3
inc
mov
and
loope
sub
loope
jae
ffree
sarl
jb
pop
loop
jns
and
fistps
stc
out
and
cmpsb
outsl
std
rorb
xor
add
fdivs
add
in
or
aaa
sbb
and
sub
push
xor
pop
je
pop
push
sbb
dec
loop
and
stos
repnz
ret
lret
cmc
jmp
jbe
push
xchg
addr16
mov
mov
adc
xchg
sbb
dec
dec
aaa
inc
cmc
ret
pop
xor
pushl
outsb
fcmovnbe
inc
xchg
pop
jne
sbb
xchg
repnz
cli
push
out
dec
loope
push
fldt
cmc
sbb
jnp
aad
cmp
cwtl
lock
arpl
jae
cld
dec
pop
cmp
mov
xor
jbe
mov
cmpsb
test
cs
test
pushf
in
mov
pusha
repnz
dec
rol
dec
mov
push
mov
jmpw
mov
hlt
or
or
mov
sbb
jmp
std
mov
and
sbb
test
mov
dec
icebp
sbb
fnstsw
stos
test
loope
xchg
dec
or
adc
xchg
test
inc
std
pop
adc
jb
pop
adc
jb
mov
dec
mov
fwait
mov
add
xchg
into
popa
mov
popa
ds
cmpb
scas
and
ret
dec
addb
nop
fists
mov
scas
imul
sub
adc
adc
or
pop
fnstenv
mov
xor
xchg
insb
cmp
out
sbb
adc
lock
xchg
enter
outsl
mov
inc
inc
out
pop
lock
fwait
pop
fdivl
pop
mov
in
mov
xor
ret
out
add
ljmp
sahf
loopne
sbb
cmpsb
je
out
lss
and
gs
inc
test
ss
cld
ret
push
push
mov
sbb
cmp
hlt
or
aad
outsb
insl
mov
test
xchg
jno
xchg
in
xor
imul
popf
dec
or
mov
mov
test
or
notb
sahf
mov
sub
movb
push
arpl
xor
jb
icebp
int
js
in
pop
push
das
cwtl
or
push
jmp
xlat
arpl
popa
mov
cld
sub
xor
fiadds
imul
xor
or
stos
add
sbb
dec
and
in
cmpsl
mov
inc
loopne
je
nop
mov
mov
add
xor
mov
or
flds
leave
jae
and
aas
and
data16
addl
pop
imul
fbld
jne
adc
outsb
call
xor
iret
xchg
mov
les
fimuls
mov
and
aaa
ss
mov
pop
adcl
sbb
mov
dec
inc
fcomip
mov
mov
stc
stos
lds
std
insl
incl
and
mov
add
scas
mov
or
sub
inc
call
lock
dec
cmp
pop
pusha
imul
push
add
mov
mov
sub
xchg
das
testb
movsl
fwait
aas
cmp
out
movsl
mov
jg
adcb
loopne
sub
jg
xchg
mov
clts
adc
jp
mov
lock
adc
scas
or
mov
mov
pop
cltd
aad
cwtl
jb
xchg
dec
test
je
mov
adc
xchg
mov
mov
push
pop
xchg
cmc
cmpb
inc
std
cld
add
sbb
int
sub
repz
aam
ret
add
scas
inc
mov
add
flds
lcall
icebp
mov
sbb
cs
cs
jnp
fdivs
mulb
cld
int3
push
insb
sbb
loopne
iret
cmp
subl
std
jp
sub
mov
aad
mov
call
jbe
shrb
aam
mov
mov
js
dec
add
mov
inc
test
sbb
inc
cli
loop
jle
adc
repnz
iret
call
fadds
xchg
mov
cld
ljmp
mov
in
and
push
adcl
pop
push
xchg
out
or
imul
sahf
sub
test
pop
daa
sub
jnp,pn
jp
lcall
or
and
mov
int3
das
movl
sbb
lea
adc
xchg
movsb
into
orb
and
push
fwait
or
sub
lock
outsl
mov
lcall
jp
sbbb
in
fucomip
add
mov
dec
add
and
adc
fnstsw
jmp
and
xchg
cmp
or
aad
mov
mov
or
push
push
es
sbb
scas
adc
in
inc
call
divl
mov
sub
lret
ret
outsl
cmp
aaa
shl
pusha
or
dec
fistl
aad
icebp
adc
push
decl
clc
mov
xor
cmp
mov
imul
mov
jo
aam
cmp
push
xchg
cmp
inc
nop
inc
sub
and
call
mov
or
inc
adc
or
pop
adc
push
hlt
dec
shl
xor
sub
jnp
sub
adc
outsl
mov
xchg
pop
in
adc
clc
or
xor
push
cld
mov
sbb
sub
iret
daa
js
rorb
movsb
dec
and
cld
ret
lret
lahf
loop
pop
and
fwait
sub
lds
je
xchg
pop
push
mov
add
push
dec
clc
shrb
mov
xlat
pop
mov
call
add
jecxz
jno
ret
and
push
xchg
or
jl
jb
addl
add
or
outsl
cmp
push
es
xor
or
inc
or
and
sbb
js
push
sahf
sub
inc
sbb
mov
orl
inc
outsb
ret
add
sub
pushl
pop
mov
sbb
sbb
mov
or
mov
cmpsb
ret
test
incl
in
and
jne
inc
out
pop
dec
xor
data16
jne
or
test
nop
mov
ja
pop
jmp
dec
lods
insl
aam
xchg
xchg
xor
mov
cli
mov
imul
cltd
loope
mov
inc
push
in
cmp
insl
sti
jg
jmp
enter
push
push
into
mov
xchg
push
movsl
loop
sub
sub
cmpsb
sub
mov
xor
add
lods
mov
sti
cli
mov
out
push
push
mov
lcall
addb
adc
ret
push
icebp
andb
or
mov
ret
pushf
inc
insb
sbb
outsl
cmpsb
push
jge
inc
and
inc
push
adc
loop
mov
cltd
dec
sbbb
adc
sbb
push
push
mov
repnz
adc
xor
jne
insl
inc
popa
mov
jbe
inc
mov
data16
dec
add
pop
pop
movsb
lea
cmp
nop
jno
mov
or
mov
das
lock
test
lret
add
push
in
cld
cmp
in
adcb
inc
adc
cld
push
and
fs
cltd
or
scas
ds
push
pop
jno
lock
ja
pop
fsubl
jbe
scas
and
fsubrs
push
std
push
mov
or
xlat
xchg
test
jo
cld
cs
fsin
inc
mov
cld
adc
loope
pop
pop
add
xchg
arpl
fwait
jno,pt
movsl
std
lds
pop
cmc
jl
popf
jno
pop
push
stos
mov
mov
add
sbb
das
add
popf
loopne
inc
adc
mov
add
xlat
pop
mov
sub
lods
cmpl
cmp
lahf
fsubrs
lret
fwait
in
dec
mov
cmp
add
push
jnp
scas
outsb
jge
ds
xchg
outsl
jl
and
push
cld
pop
out
xchg
xlat
lds
stos
loope
jp
cmpb
pusha
jb
xchg
lods
movsl
cmp
cmp
fcmovne
das
dec
and
mov
orb
and
icebp
aas
add
push
xchg
mov
xchg
not
mov
pop
inc
scas
inc
dec
or
imul
nop
push
adc
pop
into
sti
adc
dec
and
and
sti
inc
das
mov
cmp
xor
sbb
scas
sbb
and
pop
mov
cmpsb
mov
add
aas
inc
mov
mov
add
pusha
xor
mov
lock
loope
inc
cmp
dec
xchg
inc
int3
mov
cmp
push
cs
cmp
mov
pop
jl
lock
pop
push
scas
sbb
subl
mov
xchg
lds
scas
out
or
inc
jge
dec
mov
sbb
lock
sub
test
push
shr
sub
pop
loope
xchg
xor
cmp
mulb
xchg
ja
rcll
lds
sbb
or
stc
andb
jbe
clc
pushl
imul
shlb
mov
mov
push
sub
out
inc
int
jle
sbb
pop
loopne
arpl
adc
mov
cmpsl
xchg
ds
sbb
fsts
shll
sbbb
cwtl
shrb
es
jle
push
js
jp
sbb
fidivrl
fsubp
addr16
negb
jne
ss
outsb
or
dec
xchg
icebp
sar
inc
pusha
sbb
pop
ror
mov
std
mov
adc
xlat
enter
mov
jmp
pop
js
mov
cwtl
cld
pop
xor
imul
xchg
dec
fcmovu
mov
mov
push
subl
ret
push
mov
mov
xor
add
inc
mov
and
in
clc
lea
mov
dec
add
sub
mov
or
inc
mov
mov
or
icebp
and
pusha
stos
out
mov
add
adc
jge
mov
psubw
push
push
xchg
dec
jnp
lock
xchg
cmp
push
cs
jne
pop
xlat
inc
nop
or
jae
sub
arpl
mov
iret
push
popf
xchg
inc
aad
push
das
test
sub
dec
add
pushl
inc
or
mov
pusha
inc
mov
mov
test
add
push
cli
nop
lret
mov
mov
test
cwtl
sarb
cs
shlb
push
mov
cli
sti
ret
sbb
sub
movsl
shll
leave
lock
loop
cmp
xchg
push
mov
inc
push
add
pop
imul
ret
push
pop
push
mov
or
out
icebp
and
cwtl
lcall
imulb
imul
cmp
xor
loope
clc
mov
and
mov
and
out
fptan
ret
loop
dec
rolb
hlt
addr16
mov
cwtl
cltd
lods
fadd
movsl
repz
movsb
mov
scas
and
popa
xchg
mov
pushf
mov
xor
inc
insl
inc
ljmp
hlt
push
mov
pusha
popa
xchg
xchg
les
jne
jnp
clc
adc
int
push
outsl
out
clc
cmp
xchg
jne
aas
dec
add
jbe
gs
mov
push
rorb
ss
test
add
add
daa
sub
push
and
xchg
aam
aaa
mov
iret
jo
imul
stos
fmuls
leave
out
jb
cmp
lcall
pop
xchg
mov
cmp
fstl
fst
jg
mov
adc
mov
mov
sub
mov
out
pop
pop
roll
sbb
fidivrs
xchg
ret
or
xchg
or
xchg
xor
notb
addr16
xchg
mov
or
push
addr16
push
pop
dec
les
test
or
lret
and
push
fistpll
push
pusha
aas
lds
clc
add
shll
push
push
btl
jge
inc
mov
test
jg
push
fwait
push
inc
movsb
sub
pop
jl
cmp
inc
add
push
jp
push
mov
push
jl
mov
mov
cmp
sub
adc
adc
aad
mov
and
xchg
rorb
push
xor
inc
jl
add
scas
add
loop
pusha
pop
add
test
addb
cltd
and
popf
adc
sahf
out
jg
imul
mov
cltd
lcall
lock
dec
lea
jl
xor
icebp
pop
and
cmp
es
cmp
mov
or
cmp
jg
mov
jge
jl
mov
insl
add
add
mov
cmp
pop
das
inc
stc
out
pop
adc
je
mov
gs
negl
mov
imul
lods
aad
cld
lret
in
push
rorl
idivl
stos
outsb
les
in
push
mov
das
scas
xchg
repnz
std
jmp
faddl
hlt
inc
sbbl
je
das
mov
inc
fwait
das
repnz
cli
push
mov
aaa
mov
rorl
test
sbbl
or
inc
imul
sub
dec
fists
mov
sti
mov
lahf
mov
call
mov
push
jmp
sahf
rol
test
aas
dec
mov
jge
inc
mov
cld
int
xchg
and
lock
inc
aam
aaa
dec
cmpsl
nop
mul
jg
xor
pop
and
add
xor
fdivrs
or
mov
fdiv
mov
sub
sub
imulb
dec
int
push
mov
movsb
nop
popa
jmp
nop
pop
inc
ret
sbb
out
sub
icebp
mov
das
xlat
loopne
dec
test
fwait
push
es
jmp
hlt
je
xchg
fcomip
in
shll
pop
sbb
add
mov
cmp
into
faddl
xchg
xor
xor
sub
decb
int3
fwait
jecxz
in
inc
or
inc
mov
pop
clc
xor
mov
pop
push
push
les
sub
jl
cmpsb
push
sbb
mov
mov
inc
mov
imul
test
adc
sahf
dec
mov
testb
sub
jmp
loopne
inc
and
jne
cli
outsl
xor
xchg
inc
or
test
aad
call
jmp
lea
sbb
mov
or
into
lods
add
mov
pop
mov
nop
jge
or
mov
je
xlat
mov
adc
bound
fiadds
shrb
inc
lock
cmp
adc
js
xchg
cmp
movsl
inc
rcrb
outsl
adc
dec
push
out
rcr
dec
and
outsl
mov
call
add
stos
and
not
dec
xchg
decb
and
jne
jl
rolb
dec
repz
int3
add
xchg
push
jbe
lock
test
mov
mov
in
xchg
mov
notl
add
stos
fwait
push
stc
xchg
stos
ss
push
xchg
mov
push
int
xchg
repnz
adc
add
mov
aaa
push
add
mov
xlat
dec
ret
stos
loop
test
push
xlat
pop
mov
xor
fisttpl
pusha
or
cmc
jge
mov
adc
adc
cmp
mov
roll
adc
test
push
imul
enter
loopne
inc
pop
std
pop
xor
aaa
shrl
push
mov
dec
movsl
in
or
jmp
cmp
outsb
and
fcmovnbe
mov
bound
fisttpl
pop
cmp
lods
sub
jnp
aaa
mov
fildl
lods
loope
add
mov
mov
mov
test
and
les
cmp
push
push
and
addr16
js
lret
inc
lret
xchg
pop
mov
prefetch
repz
lret
inc
mov
addl
ss
jnp
test
lea
adc
or
int3
sbb
push
push
lret
cmp
cmp
xorb
jae
lods
daa
sub
jb
sub
out
sub
mov
orl
or
jp
lret
sbb
ss
and
adc
push
sub
ret
inc
dec
scas
test
add
ja
or
mov
loope
int
jle
jge
mov
int3
mov
pop
addl
mov
loopne
cmp
sbb
rcrb
hlt
movsb
inc
icebp
scas
or
sbbl
outsl
stc
movsb
sti
inc
xor
in
push
out
pop
je
cmp
addr16
pop
lahf
jb
out
pop
mov
dec
loope
adc
jmp
inc
jp
push
ret
loop
xchg
into
mov
add
call
pop
insl
add
ss
outsl
lcall
popf
add
add
rcll
cli
decl
push
mov
push
xor
jnp
or
dec
mov
jo
pusha
or
mov
aam
ds
or
sbb
jo
push
les
dec
std
lods
movsl
cmp
aaa
push
pusha
xor
inc
sbb
dec
xchg
out
aad
ret
inc
stc
xor
add
stc
popf
loop
inc
mov
inc
pop
inc
or
mov
jmp
ja
sub
sbb
jne
cmp
mov
out
stos
sbb
fiadds
xchg
add
icebp
pextrw
aas
or
cmp
mov
fiaddl
xchg
lahf
inc
test
clc
sub
sbb
orb
mov
push
and
push
enter
lock
div
push
lds
mov
xor
mov
icebp
jle
hlt
push
mov
adc
xor
in
lcall
cpuid
and
xor
fsts
lods
lcall
or
push
fstp
outsb
decl
cmc
xor
lods
adc
mov
xor
das
pushf
fcoms
rclb
lahf
sbbb
jg
jg
cmp
in
repz
ss
sbb
jmp
int3
in
sti
inc
sbb
pusha
lock
jmp
in
or
ret
into
leave
lret
mov
pop
xchg
mov
push
hlt
mov
xlat
add
and
sbb
lods
push
xor
in
jo
aad
sub
dec
and
call
inc
jg
lock
ret
adc
loop
mov
add
les
mov
jle
data16
in
fs
xorb
pop
lds
jo
mov
push
cmpsl
inc
repz
cld
jb
cmpsb
repnz
fmuls
mov
push
pushf
lds
inc
xor
cld
pop
dec
icebp
arpl
or
push
push
ss
mov
jmp
pop
enter
lcall
push
clc
push
sub
rcrb
rcll
push
popa
adc
add
adc
push
jp
mov
cmpsb
mov
bound
scas
add
jp
mov
jmp
pushl
cld
add
inc
sti
xorb
aaa
inc
fbld
or
aam
mov
loopne
je
stc
les
xchg
jg
sbb
mov
mov
adc
sub
xchg
popf
xchg
jno
cld
call
xor
cltd
int3
push
xchg
stc
fmuls
push
int
jns
aad
in
inc
xchg
mov
jns
fldl
sti
jbe
cmp
sbb
outsl
mov
in
data16
or
sbb
jecxz
add
mov
adcb
das
ret
insl
data16
jp
push
cmp
lcall
imulb
pushf
jp
fwait
cli
push
inc
shrl
jns
call
gs
outsb
push
movsb
aam
xchg
mov
add
dec
dec
xor
bound
enter
inc
hlt
mov
push
jae
ds
add
adc
pop
or
lods
ja
pop
movsl
dec
test
pop
stos
cmp
pop
loopne
mov
js
repz
ds
sbb
lds
int
push
push
popa
js
nop
cltd
cld
push
shll
xchg
das
lock
dec
mov
sbbl
lret
dec
jg
or
dec
sbb
call
inc
push
xor
mov
pop
aaa
fidivs
jbe
stos
xchg
bound
sarb
clc
lea
repnz
push
mov
mov
cmp
sub
imul
push
mov
int
adc
fmuls
pop
pop
clc
ret
and
push
sub
mov
into
aad
xchg
test
pop
push
mov
cmp
clc
fadds
shrb
cmp
out
stos
sbbl
mov
into
loop
jecxz
cwtl
lds
adc
ss
inc
test
sub
test
test
inc
in
out
push
outsl
mov
sbb
dec
mov
sti
adc
mov
push
mov
shll
fidivrl
sub
pop
mov
mov
ja
mov
adc
or
clc
jmp
push
pusha
add
enter
mov
aad
xor
in
mov
scas
xchg
sub
pop
and
mov
mov
jg
loopne
loop
cmpl
cmpsb
pop
sub
out
push
popf
popaw
sub
cwtl
xchg
fs
cmp
push
push
stc
repnz
inc
testb
cli
fmuls
out
popl
and
mov
fimull
iret
aad
jle
jg
sub
pop
loopne
or
add
mov
pop
mov
mov
dec
stos
pop
loop
mov
push
or
stos
jmp
lock
aas
xchg
add
lret
in
sbb
test
lods
jg
inc
jo
cmp
fwait
cmpsb
mov
adcl
mov
dec
sbb
rolb
lret
iret
outsl
hlt
pop
flds
mov
mov
pop
mov
mov
pop
incb
or
test
pushf
mov
mov
mov
jo
dec
xchg
sbb
dec
stos
scas
dec
aas
inc
lds
cmp
or
push
mov
lds
outsb
insl
fs
mov
xchg
dec
adc
int
ret
jns
adc
fiadds
fsubs
je
jo
shr
inc
jae
push
bound
mov
inc
jae
sbb
xlat
xchg
or
jb
add
clc
sbb
fistpl
andl
outsl
add
jbe
xor
pop
push
loopne
mov
pop
cmp
fcoms
inc
inc
ja
sbb
cmp
popf
add
sbb
add
mov
cmp
inc
mov
loopne
test
in
fsubr
in
sbb
and
loopne
ret
mov
dec
in
add
out
mov
sbb
jbe
enter
or
xchg
call
icebp
pop
xchg
cld
in
and
mov
fildl
add
jno
or
or
rcrb
mov
out
pop
inc
mov
gs
push
xor
shlb
mov
ljmp
push
or
cs
test
rolb
add
fildl
push
add
faddl
jno
int
cmp
pop
clc
jmp
js
adcl
jns
or
or
rcll
sar
push
push
incl
inc
xchg
pushf
xor
imul
bound
addb
loop
mov
in
out
loop
pushf
inc
popf
iret
jb
pop
sub
mov
out
mov
aad
bound
mov
bnd
sub
fsub
or
and
mov
lods
lds
test
pop
stos
sub
or
mov
pushf
es
int
scas
dec
mov
sub
jl
outsl
mov
aaa
cmp
jb
inc
adc
mov
inc
sti
mulb
subl
iret
sbb
dec
cmp
adc
int
insl
dec
mov
int3
call
test
pop
in
enter
push
jne
or
andl
ljmp
ljmp
jmp
jecxz
pop
cli
inc
fimuls
movsb
adc
hlt
loope
ss
cmp
dec
rcll
jae
pop
loopne
.byte
mov
std
call
in
add
call
pushl
pop
adc
leave
ret
push
fistpll
in
not
mov
add
dec
neg
leave
ret
adc
movb
flds
fcmovu
outsl
psadbw
in
iret
and
stc
inc
dec
adc
pop
sti
aas
lock
add
inc
neg
add
sub
loopne
adc
pop
sub
lea
push
jo
push
hlt
push
pop
fs
jbe
and
push
mov
std
add
inc
clc
push
sbb
cmp
add
mov
imul
jl
xchg
xchg
repnz
neg
inc
add
mov
dec
test
add
jbe
lods
or
inc
pop
dec
inc
mov
outsb
fsubrs
inc
dec
inc
mov
ss
aaa
xchg
negl
lcall
mov
add
push
jnp
out
lret
idiv
dec
data16
push
mov
inc
mov
or
outsl
movl
negb
in
dec
add
adc
xor
pop
mov
pushl
add
dec
pop
inc
dec
inc
add
push
dec
fstpt
lock
push
clc
push
call
test
cmp
in
adc
inc
scas
pop
push
and
lock
ret
dec
sub
sub
sub
insl
mov
in
push
push
aam
dec
adc
notl
inc
add
dec
xchg
das
push
inc
and
dec
or
sidtl
mov
rcrb
fimuls
enter
or
jbe
pop
ret
push
inc
sbb
add
push
mov
dec
xor
sub
ds
jne
inc
dec
adc
icebp
mov
pop
mov
xchg
icebp
mov
fimuls
dec
imulb
push
mov
out
xchg
in
push
outsl
dec
jbe
push
add
add
arpl
aad
inc
pop
pushf
loope
or
clc
push
frstor
jbe
push
lret
dec
lock
add
mov
push
push
sbb
in
push
cmpsl
mov
mov
aaa
in
inc
in
sbb
inc
lock
decb
cmpsb
loopne
repnz
sbb
add
inc
popa
mov
jb
std
flds
and
push
shrl
add
xlat
call
aaa
inc
mov
and
inc
dec
inc
or
or
xchg
fneni(8087
pop
ret
daa
loopne
daa
cmp
mov
dec
mov
outsl
movsb
inc
in
push
push
sbb
in
jae
fs
xor
inc
dec
data16
push
test
lcall
movsl
popa
mov
dec
mov
dec
adc
fwait
mov
xchg
sub
mov
dec
sub
lods
movsb
inc
lret
fs
in
adc
ss
sbb
jne
push
fildl
repz
imul
sahf
fimuls
push
ret
shll
rorb
mov
mov
fisttpll
loopne
push
pop
xchg
lock
xchg
imul
cmp
mov
dec
mov
dec
sbb
dec
inc
adc
dec
jmp
adc
push
imul
push
fisttpl
lods
sub
lock
in
push
jb
push
scas
adc
sahf
mov
jmp
clc
lods
lods
popa
insb
cmp
xchg
cmp
fxtract
or
rol
sbb
das
fmull
cld
inc
xor
inc
dec
or
lret
mov
popf
leave
rcr
nop
test
inc
fld
fistl
rorb
adc
enter
mov
pop
repz
adc
outsl
inc
pop
mov
sti
mov
dec
cmp
adc
push
ss
and
dec
mov
cmpsl
imul
icebp
dec
or
jne
mov
inc
imul
sub
mov
ja
ja
mov
in
and
dec
mov
popa
negl
add
add
aam
pavgb
sbb
cmp
jne
mov
rorb
dec
add
mov
fst
sub
or
add
dec
dec
fidivl
in
roll
shlb
or
mov
or
inc
add
inc
into
inc
dec
xor
fdecstp
or
js
add
clc
lea
push
lea
push
and
cwtl
xor
ja
jp
lods
mov
inc
push
sbb
stc
fs
bound
push
cli
aas
pavgb
mov
imul
add
inc
sbb
fidivrl
ret
fimuls
out
sbb
lock
mov
and
rorl
inc
adc
jne
lret
xor
rclb
and
in
imul
xor
fidivl
subl
std
and
in
pop
sbb
in
sti
sbb
push
and
push
subl
out
js
das
add
cmp
loope
add
mov
mov
push
dec
pop
repz
mov
push
xor
sbb
fiaddl
cmpsl
loopne
clc
fisubrl
orl
xor
outsb
sbb
lret
jp
jmp
xchg
test
sbb
rolb
push
daa
sti
pop
jmp
ret
add
inc
sbb
xchg
jbe
sbb
cwtl
sub
std
clc
push
and
xor
rcrl
cmp
lods
and
lods
dec
dec
lock
push
lret
dec
pop
sbb
dec
and
fldcw
test
stos
icebp
mov
mov
inc
rcr
rorl
dec
pop
inc
leave
aam
xorl
lds
hlt
push
push
mov
cmp
inc
arpl
fidivl
or
fidivrl
cld
loop
mov
popa
pop
es
loopne
in
lock
rcll
cmp
jo
aaa
ds
pop
daa
adc
call
dec
inc
pop
call
mov
filds
popa
outsb
dec
cmp
pop
hlt
test
and
in
ja
and
sbb
addr16
imul
inc
or
inc
ficoml
inc
lret
insb
loopne
or
nop
inc
push
fmuls
sbb
push
clc
jp
push
jnp
cmp
bound
inc
shl
roll
mov
shll
jbe
out
sbb
pop
or
push
push
fimull
sub
inc
sahf
lods
icebp
stc
into
cltd
inc
mov
ficomps
das
mov
cmp
pop
ret
mov
push
sub
aas
test
push
push
xchg
inc
pop
push
dec
inc
or
push
mov
push
cmp
filds
es
lahf
mov
inc
sti
fnstcw
add
or
pop
sbb
jecxz
push
insb
push
push
and
outsl
mov
lcall
add
shl
outsb
flds
push
inc
and
jb
or
jecxz
adc
inc
add
insb
cli
pop
pusha
imul
cmp
mov
sub
mov
roll
repz
arpl
out
jo
adcl
lods
push
clc
cs
jne
or
add
fisubl
outsb
testl
or
push
test
mov
push
bound
test
in
fstps
inc
jecxz
jo
aaa
adc
xor
add
jge
inc
inc
jo
pop
inc
insb
push
nop
mov
xor
rorb
je
or
jbe
stc
dec
repnz
neg
inc
push
mov
cltd
enter
shl
pop
lods
in
fisubrs
xchg
imul
int3
pop
int3
clc
jge
inc
js
fcomip
jb
xor
or
pop
repnz
inc
decb
test
xchg
ret
fisttpll
mov
scas
xchg
inc
icebp
stos
repz
rolb
out
xchg
pop
fnstcw
adc
pop
lahf
or
decb
cld
dec
dec
push
lcall
sub
in
fidivl
mov
dec
test
jbe
pusha
fisubl
jl
or
jmp
push
call
sti
lea
outsl
dec
dec
or
dec
inc
lea
push
push
and
daa
or
push
test
rorb
xor
sub
sbb
jnp
aas
ss
lods
cmp
call
and
sbb
xor
aad
pop
dec
or
pop
sbb
mov
add
xchg
fldcw
dec
outsl
mov
and
sbb
es
and
in
rorl
mull
shlb
and
ss
xor
push
or
sbb
push
js
jae
outsb
dec
push
ret
push
push
cld
sbb
jnp
add
jo
ret
repnz
and
pop
daa
mov
popf
pop
in
jb
dec
mov
add
jb
mov
cwtl
pop
js
push
or
adc
dec
mov
stc
dec
xchg
fidivrs
mov
imul
hlt
or
out
or
mov
jle
inc
in
sbb
cs
mov
fs
push
insb
xor
push
cwtl
int
in
push
inc
int
int
movsl
js
xor
add
xor
fistpl
adc
mov
mov
rorb
daa
jl
movl
imul
mov
rorb
add
mov
fucompp
inc
mov
insl
mov
xor
fcmovnbe
xchg
xlat
mov
mov
dec
push
xor
sbb
seta
ljmp
mov
fadds
jmp
sbb
pop
rorl
call
sbb
or
cwtl
push
lret
and
aam
rcr
xlat
sbb
inc
testl
insb
inc
insb
ret
mov
dec
push
adc
xor
xchg
jecxz
and
xchg
pushf
jbe
lret
or
cmp
rcll
pop
pop
cld
adc
and
jb
jbe
jo
scas
sub
mov
sub
adc
div
sbb
jne
mov
and
imul
mov
lock
aaa
push
rcl
inc
inc
xchg
dec
inc
pop
or
inc
push
insb
push
xlat
mov
cmp
fimull
add
movl
inc
dec
jl
shr
mov
push
or
sbb
jbe
or
inc
cld
aas
pextrw
dec
pusha
cmp
jne
add
shr
jb
sti
inc
andl
push
add
pusha
xor
stc
cmp
xor
sbb
test
pop
xchg
push
or
ss
mul
mov
scas
and
shl
lea
push
test
data16
dec
mov
cmc
push
adc
enter
jbe
inc
repz
add
pop
into
sbb
and
push
hlt
sub
fdivs
fmuls
dec
lret
test
pusha
dec
xchg
jne
ret
dec
clc
pop
addb
add
push
inc
sbb
clc
mov
xchg
stos
jb
sbb
sbb
aas
mov
cld
sbb
add
dec
das
faddp
add
lock
cmp
jne
xor
cmp
xchg
cmc
sti
pop
cmpsl
inc
push
dec
add
addr16
push
xchg
into
xor
inc
jbe
add
xor
inc
push
jmp
xor
lcall
jns
in
hlt
mov
cmp
call
xchg
ss
imul
repnz
cmp
flds
jl
mov
popf
nop
pop
cld
sbb
or
aaa
je
movsb
push
dec
push
sub
jecxz
pop
dec
sahf
cmp
xchg
rolb
push
sub
or
dec
push
cmp
mov
push
outsb
pop
add
ss
push
adc
test
nop
imul
rolb
push
lcall
pop
inc
dec
sarb
es
push
add
sub
cltd
sub
bound
jne
shl
inc
mov
push
rorb
ret
push
sub
adcb
xor
rol
cmp
mov
dec
and
lret
fadds
les
ljmp
xor
jmp
lahf
push
cmp
sbb
jmp
fsubrl
inc
sbb
inc
or
in
mov
or
sbb
jecxz
dec
imul
js
push
int3
outsl
bound
inc
mov
xchg
jl
sbb
ret
shrl
dec
fldenv
test
mov
outsl
mov
lcall
loopne
adc
jl
mov
stc
cmp
inc
sbb
dec
dec
mulb
sbb
or
xchg
inc
mov
add
and
stos
push
out
stc
xchg
jo
sub
dec
pop
mov
push
add
jmp
xchg
ds
add
push
mov
push
inc
loop
xchg
ljmp
pop
inc
imul
xchg
pop
insl
adc
lret
add
pop
mov
sbb
dec
or
mov
sbb
inc
jnp
popa
nop
loopne
cmpsb
mov
pop
in
xchg
icebp
arpl
mov
inc
adc
hlt
xlat
push
movsb
sahf
adc
adc
fmuls
rclb
dec
and
mov
insl
push
fmuls
clc
mov
push
loope
mov
pushf
movsb
cmpsl
or
dec
popa
pop
adc
cmpsb
ljmp
in
fadd
rolb
dec
mov
mov
into
rorb
mov
insl
xor
or
lahf
mov
sbb
dec
lock
jp
xor
add
pop
test
dec
add
mov
dec
insb
jae
sub
cli
xchg
inc
sbb
ret
add
xchg
cmp
jp
jo
icebp
pop
dec
add
aaa
inc
sbb
aam
push
dec
mov
rcrl
fwait
cmpsb
xor
shrl
cmc
mov
xor
lock
push
aaa
or
dec
inc
loope
rol
dec
fdivl
ljmp
leave
out
gs
push
sub
xorl
sbb
mov
add
mov
sub
or
pushf
ret
gs
imul
inc
inc
stc
jo
jbe
ficoml
xchg
in
movsl
push
dec
add
inc
inc
jbe
adc
jb
inc
and
adc
jmp
outsb
pinsrw
int
mov
adc
addb
or
pop
sti
xchg
aad
add
clc
fisttps
lods
js
mov
sbb
add
aad
aad
add
aas
insl
xchg
push
stos
pop
or
dec
dec
pop
mov
mov
cmp
xor
pusha
push
push
cs
pop
roll
outsl
lret
sub
sbbb
jo
fldenv
jle
movsb
test
insb
dec
aad
rcll
and
sub
mov
mov
sahf
pushf
fs
sub
inc
and
add
bound
pushf
jno
loopne
repnz
add
add
sub
test
xchg
mov
rolb
push
or
sbb
jmp
mov
add
and
sbb
push
inc
dec
add
imul
stc
add
sub
loopne
jo
xchg
push
mov
pop
xorl
mov
push
xor
dec
imul
add
sbb
cmp
imul
xchg
push
loop
xor
rol
outsl
insb
adc
adc
push
cmpb
dec
inc
clc
add
dec
stos
sbb
inc
lds
addl
cmp
push
sub
sub
loopne
ss
fimull
mov
jne
aaa
mov
push
push
iret
cmpsb
add
js
dec
call
rol
mov
push
inc
xchg
inc
adc
jb
pop
and
scas
fildl
sti
scas
adc
or
and
in
jb
or
or
js
pop
xor
fs
dec
inc
push
sub
ret
addb
sahf
popa
pop
insl
sahf
mov
cmc
aaa
mov
xlat
mov
sbbl
scas
outsl
nop
jl
movsl
cmp
mov
push
inc
inc
push
dec
inc
mov
in
inc
adc
lea
xchg
mov
push
or
xor
pop
dec
sub
push
sub
push
scas
sub
movsb
push
add
sub
divl
insl
push
cmpsb
mov
xor
add
ja
shll
jge
call
inc
leave
or
sbb
ret
loop
and
cli
dec
int
mov
adc
sub
cld
popa
dec
push
gs
mov
inc
add
push
pop
mov
es
in
adc
imul
inc
sub
push
movsl
sbb
add
in
add
cmp
push
setns
imul
push
cmpb
and
js
enter
add
inc
fwait
loopne
outsl
jle
jns
scas
xchg
push
js
push
sbb
mov
and
and
push
movsb
dec
call
flds
ja
dec
or
popf
popf
add
push
adc
adc
lret
andb
cmp
sbb
jmp
dec
mov
push
xchg
inc
push
mov
push
xor
mov
in
adc
rolb
pop
add
and
lock
out
adc
dec
inc
movb
pop
shlb
fdivs
dec
jp
push
xor
push
adc
rorl
cmp
and
notl
mov
sbb
xor
mov
add
addr16
call
popa
xchg
inc
sti
jae
push
ja
jmp
inc
ds
mov
pop
scas
mov
loop
ljmp
pop
fsub
xlat
dec
cmp
add
imul
xlat
movsl
ret
sbb
add
out
add
cmpsl
iret
ja
das
call
popa
rorb
sub
add
outsb
xchg
push
and
push
dec
in
cs
in
sub
push
ret
imul
sbb
add
xor
mov
mov
ss
popa
or
ss
cmp
cld
daa
inc
outsl
scas
in
mov
loopne
inc
push
lock
ja
mov
or
rcll
cmp
sbb
inc
repnz
icebp
aas
jge
cmp
push
push
push
jae
and
pushf
dec
inc
lock
iret
cmpsb
adc
repnz
fs
hlt
push
imul
dec
jbe
mov
les
cmp
cmpsl
and
push
xchg
insb
pusha
sti
subl
inc
orl
push
popa
les
ret
xor
lods
and
orb
roll
std
stc
fimull
pusha
sub
add
xor
xlat
or
stos
sbb
loop
jo
mov
sbb
dec
ret
mov
fld
loopne
mov
cmpsl
push
inc
push
pop
push
es
sahf
mov
or
xlat
pop
js
adc
pusha
not
inc
js
cltd
mov
ret
dec
mov
lods
fadds
and
pop
stos
add
addr16
dec
in
push
inc
pop
cmp
add
inc
hlt
testb
xor
ja
xchg
push
jecxz
daa
fisubrs
lahf
js
sub
pop
dec
xor
xor
or
cld
inc
sbb
rcl
push
mov
in
nop
ja
mov
xor
dec
in
push
jnp
lds
pop
mov
pop
dec
aaa
and
xor
mov
addb
fcmovnb
xor
mov
call
and
into
test
lret
push
aas
pop
inc
lcall
add
push
sbb
adcl
jo
adc
js
mov
and
test
xchg
arpl
sbb
adc
mov
int3
test
leave
inc
dec
xor
push
add
icebp
cwtl
mov
sbbb
add
xchg
push
sbb
rol
and
add
mov
mov
push
xchg
je
push
sbb
rorb
or
dec
sub
lcall
mov
out
loopne
roll
sahf
add
sbb
into
xchg
pop
lea
push
lea
jl
ds
addl
mov
rorl
push
inc
add
xchg
dec
int
loopne
stc
fwait
adc
add
or
mov
nop
push
cmp
inc
add
pop
dec
jb
lds
add
add
ds
sbbb
jmp
push
xchg
push
push
test
mov
cmp
dec
jb
pop
jbe
mov
jb
dec
inc
jecxz
or
add
xor
and
pop
loope
icebp
push
lret
xor
add
inc
loopne
and
fdivl
movsb
xchg
sbb
cmpsb
pop
aam
pop
addr16
cltd
mov
leave
addl
push
push
push
cmp
addb
dec
loopne
jg
sbb
ja
pop
das
and
dec
inc
or
push
arpl
or
lcall
xor
aam
dec
mov
and
sbb
inc
sbb
ficoms
inc
sub
or
mov
out
jo
sbb
repz
sub
jmp
rcl
out
and
je
sbb
mov
dec
call
subl
mov
pop
pop
inc
and
add
dec
lods
adcl
jns
add
mov
jno
lods
mov
inc
popf
sbb
mov
add
add
pop
inc
imul
pop
add
add
out
test
sbb
add
add
inc
add
push
bound
adc
popf
or
xchg
insl
adc
mov
test
cwtl
add
or
lsl
pop
or
mov
lods
mov
addr16
add
adc
push
mov
flds
inc
jae
sti
mov
scas
add
cld
movsb
add
leave
lds
fisubrs
xor
loopne
xchg
es
dec
out
test
imul
orb
add
jne
loope
mov
rolb
int3
add
or
pop
cmp
jle
pop
pop
add
push
add
test
jbe
sub
outsl
loope
es
add
sub
add
jnp
dec
aas
or
testl
adc
sbb
sbb
sub
outsl
outsl
aas
cmp
add
xor
js
fildll
pop
push
nop
mov
clc
add
add
in
repz
mov
lcall
imul
push
xchg
push
test
frstor
add
rcrb
int
subps
xor
lock
mov
or
rorb
push
jle
iret
sbbb
or
xchg
pop
jno
ret
clc
add
push
stos
lods
add
jbe
imul
push
push
icebp
sbb
or
popa
add
idivl
fcmovbe
sbb
lock
popf
sub
outsl
adc
pop
add
sub
fsub
mov
mov
or
popa
jl
add
or
aaa
add
dec
sbb
sarl
mov
and
mov
sahf
in
je
xlat
jo
cs
adc
cmp
mov
jo
pop
addb
xchg
andb
mov
lock
in
sub
icebp
dec
add
mov
mov
fcomps
shrb
mov
jae
sub
in
add
fucomi
mov
add
mov
ja
sub
pop
les
roll
dec
ss
popa
fwait
sbb
push
fsubrl
fisttps
pop
stc
vmread
insl
fcomps
push
and
cli
cmpsl
pop
negb
jle
daa
and
shlb
mov
add
call
jns
add
loopne
push
shlb
insb
imul
jo
inc
add
lods
int3
sub
push
push
in
hlt
lret
push
incb
ds
mov
mov
or
pop
outsb
jmp
and
add
or
sub
test
jmp
rorb
arpl
add
jo
jnp
fstpt
jnp
inc
into
jecxz
mov
xchg
out
movsl
xchg
cmp
adc
ja
mov
negl
inc
rorl
das
mov
or
mov
and
jb
push
xchg
sahf
lods
clc
sub
pop
rcrb
fs
push
fmull
movsl
jne
adc
mov
in
adc
stos
popf
push
sub
in
js
lcall
insl
xor
mov
loope
arpl
imul
xlat
in
xchg
sub
in
out
or
pop
shrl
addb
mov
ret
pop
mov
and
addb
repnz
dec
fcoms
std
fnstsw
gs
sbb
push
sbb
adc
or
cwtl
jne
sub
add
fcmovbe
roll
add
pop
xor
mov
xlat
in
dec
test
adc
jecxz
add
push
fsubs
or
enter
fldt
inc
xchg
xor
mov
aad
adcb
cld
jnp
mov
and
add
add
sbb
xchg
push
loopne
inc
sub
gs
xor
lcall
jge
pop
cmp
imul
or
jnp
lea
or
punpckhbw
pushf
popa
imul
jns
jne
aad
pop
inc
iret
add
adc
stos
or
aam
dec
lock
jl
loope
sbb
pop
or
mov
adc
jbe
popf
xchg
jns
jo
lret
xchg
sbb
and
jmp
mov
ljmp
into
mov
and
push
ds
inc
jle
fdivrs
test
stos
xchg
popa
mov
test
inc
xor
in
fdivr
pop
xlat
aas
icebp
mov
add
fcomps
imul
je
or
clc
pop
ficoml
xlat
cmc
mov
or
mov
cld
insb
lahf
lret
xchg
and
rorb
sub
sbb
push
xor
lret
jne
sbb
scas
jmp
cmp
movsb
pop
ret
lods
lds
sub
push
xlat
daa
shll
jnp
das
scas
lock
jp
add
add
pop
cld
cwtl
adc
je,pn
scas
jle
data16
data16
sahf
inc
push
jecxz
pop
in
push
popa
iret
sub
xlat
sbb
inc
fsubrl
dec
clc
lods
or
roll
maskmovq
negl
sub
adc
mov
sbb
jno
sbb
js
hlt
and
das
xchg
imul
adcl
sbb
lea
mov
sub
jmp
adc
cli
lea
fldt
fdivs
mov
roll
cmp
add
sub
or
loop
jge
outsl
test
cmpsb
xchg
mov
test
aaa
xor
and
lret
ja
lds
sti
jae
ret
cmp
add
sbb
call
or
fmul
mov
out
outsl
insb
sarb
mov
mov
insb
mov
or
dec
xlat
outsb
jae
cmpsl
xlat
dec
xchg
orl
ret
insb
jo
jecxz
mov
xorl
xchg
push
dec
dec
sbb
rcrb
sbb
rol
popa
push
sbb
cmp
jne
jmp
sahf
jb
je
mov
sbb
in
adc
sbb
lahf
ds
icebp
xor
xor
pop
es
aaa
pop
stos
sub
das
mov
aad
cwtl
int
pop
les
incb
sub
mov
inc
add
mov
pusha
lret
ja
call
sti
add
pop
clc
and
mov
shll
lret
cmp
scas
jge
mov
mov
push
adc
shrb
mov
adc
cmp
jo
lods
outsl
inc
cmpsb
outsl
dec
sbb
imull
cmc
adcl
mov
imul
or
sub
ljmp
add
in
jo
out
fsts
jns
jg
push
out
ret
push
jns
in
xlat
xor
mov
push
mov
cmpsl
jne
notl
fstpt
lods
imul
nop
xor
les
hlt
or
stc
loopne
in
jb
mov
adc
inc
sub
imul
jmp
push
lea
and
mov
test
fcmovu
push
loope
jae
pop
push
in
mov
xor
add
or
dec
pop
pop
lds
mov
pop
icebp
xchg
mov
xlat
sbb
pushf
test
sahf
ss
repnz
daa
add
push
into
sub
dec
push
fcomp
sbb
into
addl
mov
and
out
mov
push
mov
shrb
xchg
xchg
fistpl
jp
loopne
and
insl
cmp
lcall
sbb
sarb
add
gs
insb
cmpsb
sbb
out
jnp
dec
daa
dec
push
cmpsb
mov
das
adc
add
and
sahf
push
and
cmpsl
test
mov
pop
bound
pop
insl
or
or
cmp
inc
cs
jecxz
jno
clc
mov
jmp
jp
and
inc
insb
sbb
push
mov
cmp
xchg
mov
xor
mov
pop
push
mov
xor
pop
or
lret
popa
test
loopne
dec
push
out
inc
pop
inc
jbe
xchg
into
xchg
pop
lods
imul
sbb
das
push
mov
ret
popa
mov
fdivl
stc
fcos
or
ss
push
jo
orl
pop
mov
and
inc
fsubrs
xor
out
das
mov
jle
jb
xchg
push
cmp
mov
loop
cmp
xor
jne
stc
hlt
sub
ret
add
cli
fstl
xchg
mov
outsb
insb
sbb
popf
fnsave
mov
test
dec
push
in
and
out
int3
adc
call
mov
das
mov
ljmp
lock
fs
push
adc
mov
and
test
in
ljmp
mov
sti
push
jg
cmp
jnp
push
push
jbe
js
ret
xchg
add
mov
ja
adc
sub
aaa
mov
movsb
pop
xor
mov
mov
dec
int
popa
loope
aam
je
sub
or
or
jle
pop
cmp
cmp
push
out
fdivrs
xor
sub
xor
sub
pop
pop
fildl
ljmp
add
repnz
push
and
andb
stos
pop
push
mov
js
mov
adc
movsb
roll
cmp
mov
adc
and
rcrl
out
in
and
dec
pop
adc
mov
sahf
aad
rcll
adc
imul
int
pop
and
lods
pop
xor
sti
js
push
rorb
xchg
lds
loopne
sub
nop
stos
nop
mov
lods
xchg
fs
clc
add
sbb
push
insb
jp
add
nop
test
and
sbb
iret
xor
xor
mov
es
dec
aad
xlat
push
test
sbb
mov
out
hlt
xor
dec
insb
cwtl
test
in
add
data16
jle
mov
jle
andl
adcb
jp
dec
inc
cs
in
pop
in
xchg
cmp
insl
insl
loope
in
push
mov
inc
insl
cmp
sbb
cli
pop
mov
fwait
or
pop
movsb
orb
add
data16
mov
jo
cmc
lcall
add
in
mov
popf
test
jb
xor
add
or
aam
adc
les
popa
popa
pop
fldcw
add
adc
pop
jmp
loop
push
sbb
outsb
dec
mov
and
push
mov
test
movsb
data16
fnstenv
cmc
stc
es
test
stos
mov
pop
lea
cmp
sub
lock
mov
sub
dec
into
push
nop
cmpsl
jecxz
outsb
adc
je
pusha
push
and
dec
jo
mov
pop
test
sahf
insl
xor
dec
jg
lea
mov
xor
push
sub
push
and
lret
adc
or
sbb
dec
mov
sbb
cmpsl
in
and
inc
xchg
popf
inc
xor
rol
xchg
mov
adc
arpl
mov
xchg
mov
inc
cmpsb
or
or
cmp
mov
xchg
imul
sub
add
jnp
xchg
imul
add
jae
or
scas
or
movsb
ror
mov
sbb
inc
repz
add
pop
ja
test
into
in
into
jl
negl
test
out
add
pop
int
sub
mov
or
push
scas
outsl
xchg
andl
and
mov
sbb
lock
ss
inc
cmp
push
jbe
jp
and
dec
ljmp
daa
pop
fidivs
cwtl
dec
in
pop
jmp
fildl
pop
test
mov
inc
mov
jbe
out
adc
dec
insb
in
and
nop
jb
cli
lock
pop
rclb
sbbl
and
mov
sti
divb
mov
add
jne
mov
push
add
sbb
lea
mov
int3
adc
jge
jne
jno
mov
mov
leave
xlat
lds
repnz
add
rcrb
dec
dec
sti
das
insb
pop
mov
sub
and
icebp
push
push
push
mov
les
icebp
icebp
cmp
xchg
mul
loop
repnz
mov
mov
mov
sbb
dec
mov
sbb
lds
jl
lods
cmp
sub
sbb
ss
mov
nop
adc
ljmp
xchg
add
push
fistpl
and
add
push
mov
push
push
aaa
mov
jp
push
mov
in
faddl
cmp
mov
inc
insb
xchg
test
lds
mov
mov
bound
inc
cmpsb
loop
data16
mov
movsl
mov
sarb
mov
insl
daa
clc
xor
rclb
jne
in
add
inc
push
mov
adc
sbb
cmp
in
cmp
pop
sbb
dec
sub
es
pop
fistpl
xchg
inc
mov
dec
xor
sti
loope
jne
cmp
in
pop
loopne
add
mov
dec
out
inc
rcll
jmp
and
inc
jnp
or
mov
mov
cmpl
rol
pop
imul
mov
pop
std
scas
or
and
ss
push
mov
cmp
dec
or
scas
movsl
inc
test
jle
pusha
fadd
add
nop
andl
inc
pop
dec
lock
sbb
add
pop
ret
shr
fildll
sbb
xor
dec
repz
jl
xorl
inc
rclb
call
cltd
mov
mov
icebp
pusha
mov
or
enter
lcall
out
sub
jo
outsl
or
push
rcll
fsubrl
pop
movsl
push
jnp
jae
notb
pop
sbbl
xchg
fstpt
pop
xor
icebp
cmpl
xor
mov
mov
jbe
pop
or
push
pushf
sub
ja
and
push
shlb
mov
inc
or
jmp
cmpsb
daa
mov
jg
and
mov
into
inc
gs
stc
mov
pop
sbb
push
out
pop
dec
icebp
add
loope
jge
add
call
jbe
icebp
dec
push
fnstsw
dec
and
fldcw
or
pop
xchg
sub
fdivr
shlb
iret
adc
ss
pop
add
and
pop
and
data16
pop
adc
mov
cld
mov
lret
and
jge
cli
std
insl
pop
loope
arpl
bound
imul
pop
xor
imul
sub
push
xchg
pop
cmpsl
mov
into
xchg
sbb
pop
repz
sbb
lret
push
lcall
or
sti
pop
outsl
arpl
mov
xor
stc
mov
scas
in
mov
pop
jns
lods
xchg
push
add
mov
stos
and
fiaddl
test
cmpsl
xchg
cmp
fcmovbe
hlt
and
jp
pop
loopne
test
scas
outsb
cmp
mov
test
aaa
lcall
xchg
mov
les
mov
xlat
sbb
jle
hlt
pop
ficoml
dec
xor
push
test
adc
addb
call
ljmp
imul
test
out
jb
mov
insb
fdivrl
sahf
das
push
fmuls
cmp
xchg
cmc
test
ss
lods
jmp
jl
mov
jecxz
mov
fcoms
ret
mov
movsl
push
stc
bound
dec
dec
inc
fcmovb
dec
aas
cld
jno
or
push
inc
mov
cmc
dec
mov
into
movd
xchg
or
inc
pusha
ds
clc
cmp
dec
sahf
inc
dec
loop
push
clc
push
call
mov
sti
adc
outsl
sub
or
je
sarb
inc
gs
icebp
sbb
rclb
insb
aaa
fildl
int
mov
sub
and
cmp
adc
je
sbb
outsb
and
outsb
jecxz
add
push
inc
dec
and
mov
dec
leave
pop
dec
ror
add
in
f2xm1
cmp
insb
xor
movsl
addl
clc
scas
sbb
sti
push
and
int
xor
rolb
iret
xchg
adc
push
mov
test
xchg
xlat
mov
inc
sub
lock
xor
cld
mov
mov
mov
xchg
jno
jb
ss
xor
push
leave
xor
mov
movsl
btr
jo
pop
rcrb
adc
lret
call
arpl
adc
cmp
push
mov
or
jnp
ficompl
push
jae
xrelease
movsl
notl
sub
jo
clc
dec
in
mov
in
inc
sbb
dec
mov
adc
or
in
fadd
push
data16
mov
mov
jecxz
jmp
loope
push
pop
dec
cmpsb
jge
adc
pop
fldt
cmp
sub
adc
out
scas
ret
xchg
das
mov
popf
sub
ss
jecxz
jmp
pop
pop
clc
insb
icebp
in
xchg
out
in
cmpsl
push
cli
jmp
push
sub
push
cwtl
jbe
mov
scas
xor
imul
xor
idivb
scas
loope
pop
ds
pop
mov
mov
mov
testb
test
int
out
mov
ljmp
add
cli
mov
lcall
xlat
orl
lods
push
ror
ficoms
rclb
call
cmp
shrl
shrl
les
push
inc
js
adc
or
xor
xchg
push
inc
sti
addr16
mov
push
arpl
daa
mov
xor
or
mov
loope
enter
push
shll
mov
jp
rolb
subb
lods
mov
out
mov
and
push
push
add
and
gs
fs
jecxz
xor
testb
pop
jb
mov
mov
pop
push
int3
ss
mov
inc
aaa
jecxz
enter
push
or
jl
clc
sar
or
sbb
aad
pop
stos
insl
xlat
ds
pop
idivb
arpl
inc
ja
mov
ja
jbe
jp
stos
cld
jp
pop
pop
daa
filds
mov
push
xchg
mov
sbb
mov
adc
insl
fcomps
imul
stc
aaa
mov
jns
insl
cs
mov
rcll
inc
dec
adc
cmp
or
lret
sarl
scas
data16
xor
and
push
sub
pop
fisubl
shll
mov
adc
push
add
and
mov
imul
jge
dec
xchg
inc
cmp
gs
xchg
sbb
enter
mov
xchg
xchg
cli
push
jg
in
mov
inc
fildll
add
popl
jns
insl
clc
ret
fnstcw
enter
mov
sub
cmp
fcmovbe
into
push
sub
and
loope
leave
inc
cmpsl
jge
push
xchg
in
andl
or
movsl
ds
jo
jnp
mov
mov
ljmp
icebp
mov
ret
or
scas
cltd
sahf
insb
call
push
pop
and
push
es
ljmp
mov
fbstp
inc
faddl
push
popa
div
movsl
inc
cmp
sahf
mov
xor
ja
aas
xlat
sbb
sub
jbe
les
mulb
gs
popa
cltd
sub
ds
xorl
insb
ljmp
cmp
push
adcl
pop
insb
or
lret
enter
out
mov
lcall
dec
cmp
xor
sub
repz
clc
fildll
jns
aam
fcomp
cmp
mov
ljmp
movsb
pop
dec
fistpl
cmp
scas
inc
and
jle
fstps
cmp
cmp
fdivl
xor
fcompl
pop
jnp
les
popf
inc
shll
jbe
mov
inc
sbb
add
inc
mov
mov
repnz
clc
sub
push
imul
in
stos
sbb
or
and
rclb
sbb
das
mov
or
pusha
mov
fsubrs
mov
jl
adc
pop
clc
in
mov
ret
or
or
aaa
out
test
add
or
and
add
bound
jp
popa
imul
or
test
and
pop
xor
xchg
push
mov
mov
dec
in
fcompl
inc
adc
ficoms
rol
pop
mov
in
xor
jbe
fstpt
sti
les
mov
fs
sbb
fidivrl
xor
sub
int
inc
rcrb
mov
push
xor
cmp
and
in
popf
hlt
cs
xor
mov
decb
dec
fcoms
mov
test
shlb
mov
outsl
lods
mov
cmpsl
mov
in
out
pop
lock
test
sahf
std
in
inc
mov
repz
rcrb
shlb
and
enter
fwait
sbb
data16
mov
xorl
data16
mov
dec
stc
add
inc
inc
test
jbe
and
jo
xchg
add
insl
jo
xchg
jmp
aas
movsl
pop
jecxz,pt
in
ret
jmp
pushf
push
subb
jecxz
and
adc
jnp
popf
mov
adc
les
ja
leave
aad
imul
sbb
sbb
outsl
ja
adc
cmp
daa
jo
subb
nop
adc
shll
fstpt
jl
fnsave
jge
cs
aaa
add
imul
js
inc
data16
mov
lea
mov
jl
lret
cmpsl
repz
and
dec
fildl
movsb
repz
lea
mov
mov
stos
in
mov
aam
cmp
pusha
repnz
scas
fdivrl
jge
sar
dec
stc
outsl
in
outsb
or
out
xor
push
imul
mov
call
sbb
sub
xor
jnp
pop
or
jecxz
rcl
and
addl
cmp
sbb
xor
inc
push
clc
jno
lret
push
push
or
rcll
xor
add
jge
and
insl
push
adc
ja
push
ds
jge
inc
sbb
jp
popf
add
mov
lds
xchg
lock
and
jle
mov
push
mov
in
sub
cmp
jmp
mov
mov
push
fmuls
adc
subl
fdivrs
cwtl
sub
fadds
lock
addb
divb
push
jno
rorl
adc
leave
xchg
pop
scas
ret
push
xlat
test
or
inc
pop
add
cmpsl
daa
pop
daa
cmp
push
pop
pop
sbb
inc
xchg
dec
mov
jecxz
push
mov
jo
lea
or
dec
mov
jns
insl
mov
daa
mov
sti
push
mov
sub
dec
in
or
pop
rclb
lea
pop
and
jns
fwait
lcall
dec
or
orb
fs
mov
pop
lret
xor
lock
xor
mov
lahf
adc
popl
add
jno
paddw
mov
jg
cmp
jge
fdivl
idivb
popa
nop
hlt
inc
inc
stos
aaa
pop
jmp
test
inc
push
mulb
cmc
add
sbb
lock
push
dec
xor
cmp
push
mov
pop
shl
in
icebp
add
jmp
mov
jae
or
sbb
mov
insl
jl
xchg
scas
adc
sbb
push
mov
or
rcrb
inc
shrd
mov
adc
fadds
fldt
scas
jnp
xchg
mov
mov
dec
pop
ds
les
fs
push
out
int3
inc
mov
and
fnstsw
out
adc
sbb
and
sbb
adc
addb
jbe
clc
inc
imull
jne
dec
sub
pop
movsb
ss
repz
fs
mov
das
sub
push
leave
mov
adcb
subb
push
paddusw
mov
fcomi
in
jo
dec
incl
sbb
xchg
std
adc
mov
lock
or
mov
outsl
popa
in
lcall
inc
push
insl
xchg
negl
imul
lock
comiss
xor
faddl
or
hlt
add
sbb
mov
aaa
pusha
xchg
out
cwtl
jo
sub
dec
xor
xor
push
repz
in
daa
add
xlat
push
fistps
fstl
movsb
pop
repnz
popa
cmpsl
lahf
jo
pop
xchg
jle
addr16
jb
pusha
js
pop
mov
out
cmp
sub
mov
fiaddl
push
push
cmpb
or
test
std
fsubp
rol
pop
adc
dec
lahf
xor
xor
lock
mov
shlb
gs
adc
pop
ret
mov
in
jo
js
and
or
sub
scas
xchg
rcr
shrl
test
js
pusha
sbb
inc
push
mov
jnp
xlat
sbb
cmc
cmc
sbb
jo
lods
clc
pusha
test
inc
sbb
jle
loope
outsb
xchg
mov
js
push
add
xor
sub
mov
addl
cmp
mov
lock
jne
clc
push
test
push
cmp
shl
imul
adc
fsubr
and
shll
cli
rclb
shl
pop
inc
movsb
lahf
fwait
push
fistpl
cltd
out
test
push
mov
popf
popa
sbb
movsl
cmp
daa
clc
push
adc
fwait
iret
lods
xor
mov
sub
add
daa
ret
sbb
test
int3
dec
scas
outsb
pop
mov
icebp
jb
testb
sbb
add
push
int
loopne
jmp
jecxz
pop
scas
testb
dec
sbb
mov
adc
and
push
out
add
mov
xchg
jae
sub
or
adcl
xor
inc
loope
in
adc
cmpl
mov
stos
jl
mov
xchg
mov
xor
xchg
jle
stos
data16
in
testb
lods
inc
push
sbb
in
into
cmp
xor
cmpb
outsl
or
gs
adc
dec
xchg
fistps
add
mov
add
into
jbe
sbb
cmp
test
dec
xor
push
and
roll
cmc
xchg
incl
mov
fdivs
rcll
sbb
cmpsb
in
cmp
push
push
clc
insl
fcmovnb
dec
pop
lcall
inc
dec
inc
dec
shrl
dec
in
jge
mov
add
mov
mov
lock
xchg
mov
inc
pop
dec
mov
cltd
clc
sbb
aad
stc
std
dec
add
jle
xchg
dec
mov
and
cmp
loope
or
decb
test
aas
xchg
lcall
add
sub
ljmp
in
out
push
fdiv
mov
dec
insl
ss
mov
test
or
xor
mov
std
sbb
mov
sbb
aas
cmp
aaa
push
bound
pop
fcmove
sub
jns
lds
imul
push
sub
popa
bound
in
inc
mov
in
lret
lret
mov
insb
xchg
add
jnp
cmpl
addl
ja
mov
xchg
sub
or
pop
jecxz
jne
jbe
das
sti
lods
jae
jb
stos
shl
pop
add
xor
out
jne
inc
pushf
push
fistpll
enter
sub
mov
lods
add
inc
cmp
and
mov
inc
cwtl
mov
imul
cwtl
cmc
std
shlb
pop
dec
into
loop
scas
mov
scas
les
mov
ds
in
dec
xor
sbb
dec
dec
je
pop
daa
mov
jnp
std
test
or
data16
push
rcr
lods
xchg
add
pop
testl
mov
mov
push
js
xor
js
sbb
fdiv
icebp
pusha
pushf
inc
addl
and
popa
add
sub
aam
or
jbe
aas
pop
fdivrs
xchg
rol
cmpl
pop
and
mov
xchg
adc
dec
insb
lret
shrb
or
div
pop
dec
cs
je
jnp
in
mov
inc
and
jp
mov
hlt
sub
pusha
lret
aad
pop
addr16
mov
push
sub
inc
incb
cmovbe
fst
popa
stos
push
dec
lods
or
jbe
add
push
or
xchg
xchg
inc
aaa
movsl
ret
scas
les
loope
rorb
in
mov
mov
cmp
lret
mov
outsl
insb
jp
mov
or
inc
jbe
mov
mov
icebp
out
push
popf
ret
js
fsubs
out
mov
add
xchg
das
mull
loope
pop
pop
movsb
jl
cmp
in
fimull
imul
stos
push
dec
mov
mov
mov
shl
movsb
nop
loope
xchg
out
les
add
xchg
imul
xchg
leave
or
sbb
aad
dec
mov
filds
pop
arpl
push
inc
scas
cmp
dec
lahf
ja
jbe
jg
lods
cmpsl
xor
test
add
xchg
fcmovb
addb
and
mov
jo
pop
in
inc
in
pop
jne
push
mov
imul
sub
cmp
lahf
inc
xor
jno
xor
pop
mov
xor
rorl
inc
mov
inc
jne
and
andl
inc
adc
in
jecxz
pop
mov
jecxz
push
enter
cmp
push
fstps
shr
test
pushf
add
imulb
dec
pop
clc
dec
jg
xchg
jbe
out
xchg
in
sub
push
addb
sbb
or
cld
loopne
mov
push
inc
mov
das
loopne
jle
outsl
and
outsb
aaa
cmp
sub
pop
push
jmp
mov
dec
into
divb
lea
jle
and
xor
lds
gs
rorb
inc
xor
adc
daa
or
out
add
xchg
dec
push
inc
jae
adc
lds
outsl
dec
bound
in
cs
popf
pop
add
sbb
ljmp
push
inc
clc
xchg
jmp
mov
cwtl
test
test
stos
insl
insl
dec
adc
clc
data16
jmp
mov
cmp
adc
jmp
aam
dec
push
push
xchg
xchg
std
imulb
ss
mov
pop
cmp
mov
mov
aaa
jne
push
test
inc
das
jle
push
les
addr16
inc
jmp
mov
lds
add
jne
push
loope
jl
sbb
mov
aas
push
pop
mov
mov
lock
dec
test
push
sbb
popf
mov
mov
pop
out
jns
cwtl
mov
mov
add
push
mov
mov
xchg
sub
fwait
adc
imul
outsb
in
decb
add
dec
jecxz
sbb
das
push
and
or
sub
dec
fadd
lea
cli
outsl
and
call
inc
sub
sti
xor
mov
sub
mov
ljmp
lret
test
push
ret
in
dec
movsl
mov
shrl
shl
xchg
sti
loopne
inc
push
sub
jge
push
xor
and
popa
js
fadd
fs
xchg
mov
in
std
push
fstl
adc
xor
cwtl
jecxz
pop
pop
test
mov
add
mov
xchg
ds
insb
mov
lods
cld
mov
shlb
xor
cmpsl
test
jnp
cmp
cmp
mov
movsl
scas
pop
xlat
adc
mov
in
aas
xor
call
ja
cmc
shll
fiadds
ret
push
movsb
rolb
jmp
mov
jb
adc
jmp
mov
mov
or
adc
pop
sub
adc
or
xor
insb
sti
lds
jg
and
sub
jne
mov
mov
add
imul
push
mov
cmp
aaa
loopne
mov
xor
dec
mov
cmp
pop
mov
clc
inc
cld
mov
rcll
push
adc
call
adc
push
lods
jmp
sbb
push
mov
pop
fsts
int
hlt
push
pop
jnp
xor
mov
fbld
je
adc
mov
add
leave
inc
cltd
nop
and
das
shll
push
mov
jo
adc
and
mov
clc
popf
sti
push
addl
ud0
xchg
or
xor
pop
mov
add
jg
pop
jl
mov
loopne
adc
leave
mov
pop
push
sahf
inc
cltd
or
outsb
mov
adc
push
jno
xor
mov
loope
push
inc
mov
sti
mov
pusha
fs
call
dec
pop
das
fldl
divl
call
xchg
pop
sub
rolb
or
fdiv
pop
aam
mov
and
push
in
das
rclb
arpl
hlt
jno
xchg
rcl
xor
pop
mov
jp
mov
sub
inc
out
jno
aad
push
cmp
repz
fsubp
pshufw
movsl
or
call
std
loop
std
inc
pushf
data16
lods
test
loopne
jne
or
jg
aaa
jae
inc
pop
add
push
mov
mov
mov
pop
movsb
jns
movsb
cmc
rolb
adc
enter
dec
add
mov
push
jmp
loope
insb
pop
sbb
mov
pop
xchg
stc
dec
clc
mov
xchg
mov
mov
imul
outsb
movsb
adc
into
xchg
and
stos
lods
mov
int
inc
dec
dec
dec
fdivs
test
add
lock
add
lahf
rorl
xchg
mov
out
add
cmp
cs
popf
mov
pusha
sahf
pop
push
cmp
and
mov
addl
mov
arpl
mov
mov
inc
mov
jne
sub
sub
adc
jno
jbe
sahf
jle
call
mov
mov
int3
and
pop
sub
imul
sub
add
mov
sahf
jnp
in
testl
dec
sub
mov
in
add
or
mov
xlat
mov
and
jo
loopne
pop
lret
dec
enter
xor
jp
jne
mov
push
daa
xlat
fidivrl
lea
or
inc
push
or
cmp
xorl
jo
leave
pop
je
rcr
mov
cmp
add
dec
lea
mov
pop
pop
fildl
inc
sbb
addr16
ja
mov
sub
ret
adc
cs
mov
es
mov
jge
xor
or
xor
mov
mov
lock
stc
enter
jp
mov
cwtl
inc
inc
sbb
dec
push
mov
ds
cmpsb
jno
sbb
les
enter
mov
sti
xchg
fdivrs
add
outsb
shr
stos
lea
out
mov
je
add
sub
outsl
cmp
mov
jne
push
xchg
mov
insl
addl
jne
into
scas
repz
sti
pop
sub
data16
call
add
pop
dec
std
push
sub
sub
negl
outsl
das
mov
cmc
adc
push
xor
cmp
inc
add
out
addr16
cmp
ret
push
daa
pop
loop
cmovp
or
pop
mov
or
jno
add
adc
movsl
fisttpl
pop
fidivs
inc
std
sbb
test
adc
insb
cld
mov
or
loop
inc
rcrb
jmp
mov
int3
jp
out
int3
add
or
sahf
jo
addb
popf
push
sbb
outsl
mov
mov
push
jg
lahf
cmp
xchg
inc
and
cmp
inc
fldenv
fstps
add
push
fdivrl
aaa
xlat
mov
nop
lods
add
test
add
dec
add
push
dec
std
push
sub
xchg
inc
mov
or
je
mov
clc
jo
pop
xor
int
cmpb
nop
mov
push
sbb
mov
push
push
test
icebp
push
pop
adc
mov
mov
andb
dec
and
sbb
jecxz
movsl
data16
ja
sub
jnp
xchg
bound
mov
adc
adc
test
or
push
repnz
movsb
leave
scas
test
sbb
pop
subl
pop
xchg
into
fnstsw
adc
cmp
cmpsb
js
insl
inc
das
test
adc
test
test
jecxz
outsl
fnstsw
mov
and
div
aam
sbb
nop
push
adc
adc
xchg
sbb
sbb
ficoml
rcrb
in
cmpb
xchg
test
xor
loopne
lods
jg
inc
dec
adc
test
cmp
xchg
mov
test
rcl
push
insl
sarl
dec
mov
mov
lret
outsb
pop
push
push
or
call
sbb
dec
xor
ss
xchg
adc
sbb
sbb
inc
dec
ljmp
icebp
jg
add
xor
mov
cmpsl
sbb
ss
movsl
aam
inc
xchg
outsb
mov
xor
xor
mov
sub
fsubs
std
bound
push
xchg
lods
insb
sbb
lret
mov
push
dec
pop
fistps
xlat
sarl
push
inc
sub
inc
push
push
jno
add
adc
sub
lds
imul
push
push
ror
add
push
adc
jno
jp
xchg
mov
and
sbb
inc
lock
inc
insl
mov
xor
push
cmc
lds
mov
iret
push
inc
insb
std
jb
bound
or
xchg
stos
xchg
adc
std
fiadds
aad
or
adc
dec
in
daa
cmp
inc
add
adc
insb
pop
mov
mov
fdivs
or
jle
sbb
decb
shlb
loope
fidivrs
adc
testl
fisttpll
loope
cld
and
mov
mov
call
test
mov
sahf
xor
sub
sub
sbb
mov
and
lods
repnz
or
popa
ret
inc
add
sbb
fildl
mov
shrb
cltd
inc
mov
inc
cmpsl
pop
fldt
xchg
clc
setno
dec
ja
loope
push
cwtl
daa
aam
dec
jne
inc
ret
notb
and
sahf
rol
mov
sub
into
sbb
cmp
sbb
imul
ds
mov
cld
stos
add
flds
ret
sbb
push
push
sub
into
push
cld
pop
pop
and
movntq
add
push
aam
xchg
mov
ljmp
loop
repz
pop
dec
pop
push
ds
fidivl
mov
lds
pop
jecxz
movsb
mov
mov
imul
insl
cwtl
jp
test
add
push
push
je
insl
or
into
or
mov
cmp
ljmp
jecxz
arpl
sbb
jno
inc
movsb
push
push
push
dec
out
push
add
jb
inc
sarl
les
cmp
dec
mov
pop
xchg
jl
shrl
leave
aaa
jbe
pop
call
je
loop
js
or
loope
in
loope
lret
push
pop
dec
jb
pusha
aas
push
cmc
lods
mov
je
push
outsb
clc
add
hlt
jbe
icebp
call
xchg
mov
xchg
push
pop
imul
daa
jne
sbb
adc
pop
in
gs
or
push
cwtl
cs
push
xor
inc
mov
dec
outsl
shll
or
ds
fadds
and
outsl
and
in
dec
popa
adc
jno
or
mov
mov
push
frstor
arpl
sub
subl
lea
rol
add
sbb
fnstsw
and
fwait
aad
test
mov
stc
sub
inc
push
sbb
mov
loope
pop
xchg
or
adc
insb
lods
add
popf
fcoml
sub
das
sbb
adc
fsub
or
pop
inc
sub
idivb
and
aad
js
ja
mov
sbb
sub
sbb
push
ja
mov
sbb
gs
push
xor
sub
mov
stos
pop
outsb
pop
cmp
test
pop
or
fmuls
dec
dec
pop
dec
mov
ret
and
mov
push
icebp
loopne
lds
mov
out
xor
pop
or
xchg
adc
push
jo
xor
aam
stos
push
cmp
lret
or
mov
in
daa
adc
mov
loop
dec
jge
and
lea
les
hlt
cmc
fisttpll
jg
pop
fidivrl
mov
mov
xor
inc
jg
outsb
jne
bswap
inc
cmp
ljmp
stos
sbb
dec
sbbl
cmpsb
sbb
push
sbb
or
fcmovnu
out
shl
jl
inc
dec
xor
fsubrs
mov
fiaddl
xchg
xchg
add
add
inc
in
push
mov
pusha
pop
xchg
jmp
shlb
mov
sub
pushl
rolb
xorl
arpl
cwtl
sub
cmovno
nop
mov
lret
mov
pop
adc
out
push
mov
cmc
pop
pop
push
xlat
cwtl
iret
sub
mov
rcrl
jmp
dec
inc
lods
in
rcll
test
aas
jns
xlat
cmc
mov
push
xor
and
nop
lds
test
jne
mov
stc
mov
rcrl
cmp
jnp
sbb
add
or
movsb
frstor
dec
negb
popf
ljmp
mov
jmp
roll
sti
dec
adc
imul
adc
fstpt
cmp
popw
clc
push
mov
cmp
mov
out
or
add
ret
push
sub
inc
xor
adc
pop
lret
push
pop
popf
cmp
xlat
cmpl
mov
fistl
cmp
mov
and
mov
lea
jne
cmp
mov
rol
popf
cmp
mov
mov
mov
fisttpll
add
adc
rolb
xchg
jmp
sub
mov
movsl
ficompl
jle
jno
xchg
add
icebp
push
loopne
pop
or
sub
adc
sbb
mov
les
test
adc
fisubl
mov
jecxz
inc
push
pusha
add
sbb
insl
inc
sub
xor
inc
mov
push
add
lods
or
mov
fcmove
jbe
loope
jb
inc
mov
mov
data16
or
mov
add
adc
fmuls
push
sub
fistpll
lds
cmp
pop
adcb
scas
sub
cli
shll
or
outsb
jmp
outsl
mov
ja
adc
xchg
loop
sbb
std
mov
leave
fsts
stos
and
or
mov
sbb
data16
and
add
cmpsb
test
shll
xchg
pop
cmp
adc
mov
in
js
fdivrl
jne
or
out
rcrl
inc
mov
inc
test
jmp
ret
push
hlt
jbe
outsl
add
xsaves
insl
aas
test
mov
xchg
orb
xlat
sbb
iret
mov
push
cld
test
and
add
mov
xchg
test
pop
clc
das
shrb
mov
xchg
pop
mov
mov
and
adc
inc
sti
jno
mov
jp
test
add
add
das
hlt
lds
or
sub
movsb
lea
shrb
pop
jle
ss
pop
les
nop
jae
dec
fidivl
and
push
add
sbb
sub
scas
jge
and
mov
shll
mov
ss
xchg
movsl
cmp
xor
sbb
fistl
cwtl
xor
fidivl
repnz
inc
sti
repz
lret
inc
insb
add
dec
mov
fbstp
fisubl
xor
out
mov
push
adc
cwtl
insl
inc
roll
jne
push
xor
xchg
fsubs
faddp
inc
lret
movb
inc
icebp
cmp
push
pushf
dec
push
js
mov
mov
mov
decb
cmp
jecxz
jb
shrb
pop
pop
mov
insl
dec
or
and
sarb
inc
pop
xchg
nop
leave
ss
and
mov
cld
movd
mov
fcompl
aas
push
js
mov
jg
jnp
or
or
inc
pop
arpl
scas
cwtl
sub
shll
out
sub
test
pop
movsb
and
loop
les
int3
pushf
pop
or
test
add
or
lea
add
add
insl
mov
loope
decb
and
sbb
rcrb
sbb
xor
orb
scas
push
fsts
xchg
daa
daa
lcall
xchg
aas
clc
pop
aad
jne
push
rcr
addl
popa
ret
scas
andb
mov
push
outsb
jge
mov
xor
in
mov
jl
or
shl
adc
rcr
pop
loopne
nop
negl
scas
jg
roll
mov
lret
jns
lods
pop
mov
sbb
and
cmp
and
mov
ret
loope
test
mov
adc
sub
xor
shll
push
sub
pushf
dec
jno
in
fsts
mov
jg
xchg
pop
mov
push
jp
cmp
cmpl
dec
mov
sar
sub
mov
mov
nop
int3
sub
mov
aad
inc
or
cmp
popa
mov
pusha
or
mov
xchg
cwtl
fbstp
mov
popf
xchg
sbb
lock
dec
imul
mov
int
rorb
and
imul
jmp
xor
push
inc
imul
or
pop
cmp
sti
repnz
loope
cmp
inc
lea
ss
pop
pop
lea
cmp
in
ret
std
repnz
mov
push
mov
movsl
cs
clc
orb
int
push
loope
test
ja
mov
das
adc
imul
xorb
lock
fs
mov
imul
inc
pop
aaa
pop
cmp
in
ja
sbb
sbb
jae
pop
mov
fwait
stc
adc
orb
inc
mov
cmpsl
ljmp
lcall
sub
inc
mov
add
in
jnp
outsb
push
aaa
or
xorl
leave
shll
mov
fists
cmpsl
push
xor
or
mov
call
push
loope
lcall
lcall
fistps
adc
not
clc
das
call
out
shll
mov
mov
xchg
loop
mov
sbb
sub
popa
daa
or
repz
fisttpl
je
xor
jge
shl
pop
xor
dec
push
ds
je
sbb
popa
cli
jg
dec
outsl
pop
push
in
inc
das
mov
sbb
in
data16
jbe
psraw
loop
rcrl
or
int
lcall
sub
fdivrl
add
cmpsb
cmp
outsl
add
aad
sub
pop
push
jmp
mov
pop
mov
jp
cwtl
pop
sub
ret
pop
mov
jmp
and
xchg
add
pop
pushf
mov
js
mov
test
inc
neg
mov
sti
cmpxchg
lods
add
push
adc
sti
nop
mov
out
addb
and
and
shr
push
aaa
or
adc
test
jmp
pop
adc
sub
in
inc
sti
arpl
mov
lret
push
shlb
push
jg
sub
push
out
push
in
rcll
shll
push
sub
dec
push
test
stos
movsl
imulb
test
sub
fisttpl
dec
lret
mov
inc
mov
rorb
mov
pop
adc
xlat
repz
pop
shlb
sahf
cmp
lcall
xor
sub
sub
dec
or
mov
iret
mov
inc
mov
xor
sbb
ret
sbb
jbe
pop
outsb
pop
mov
cs
and
mov
mov
pop
stos
mov
or
sbbl
gs
mov
push
fcompl
cmp
mov
jl
cli
rol
ljmp
jne
xor
fwait
ret
and
jbe
sub
jp
dec
ljmp
lret
loopne
lcall
ss
pushf
test
fwait
loop
cmp
scas
adc
bound
jo
loope
mov
hlt
fcmovne
clc
pop
push
insb
call
add
add
hlt
dec
aas
jo
fcmovnbe
push
xchg
xchg
mov
push
mov
iret
outsb
scas
add
loope
jbe
test
jmp
frstor
loopne
sbb
outsl
leave
insl
pop
std
adc
xchg
adc
cld
in
dec
sub
movsl
mov
cmp
add
je
test
jg
sbb
and
mov
sbb
test
std
inc
sub
push
in
nop
and
or
adc
sbb
jbe
stos
adc
pop
push
mov
mov
push
inc
add
loopne
fcoms
push
iret
shlb
stos
mov
jmp
adc
pop
cmp
push
mov
adc
fiadds
mov
scas
insb
daa
and
jno
or
jmp
lahf
rolb
mov
push
mov
pop
adc
lods
jmp
pop
inc
cmp
jo
mov
push
inc
jmp
sub
ds
xchg
or
mov
push
or
pop
mov
adc
popa
push
das
in
scas
adc
mov
jmp
in
push
xor
xchg
adc
xor
movb
sub
cmp
mov
xchg
vpmadcswd
or
js
cmpsl
inc
es
pop
icebp
pop
push
dec
sub
xorb
ret
rorl
nop
adc
fmuls
adc
shll
or
add
lcall
aas
jns
sti
mov
dec
sbb
adc
push
xor
repz
sbb
mov
jg
mov
jl,pt
push
mov
mov
aad
pop
outsb
ja
loope
cs
int3
jb
orl
xchg
fstp
aaa
and
scas
fnstenv
cmp
jb
mov
out
repz
sub
mov
adc
or
pop
out
sub
shrb
xor
adc
jle
inc
inc
js
fsubrl
mov
push
jbe
mov
lahf
outsl
andb
shll
jae
xchg
mov
sub
pop
mov
int3
stos
sub
insl
les
shl
cmp
out
jge
xchg
mov
lds
adcb
xor
mov
mov
mov
loopne
and
addr16
jae
pop
mov
cmp
mov
imul
ret
inc
mov
jle
into
and
scas
dec
jo
dec
ds
in
movsb
stc
or
sbb
cs
jecxz
add
xor
fisubrl
sbb
shlb
outsb
or
sub
test
idiv
fnstsw
out
repz
xor
xchg
jne
mov
mov
cmp
fcmovnb
ljmp
inc
flds
test
sub
pop
leave
cmp
call
das
xor
cmp
paddb
xchg
pop
pushw
loopne
xchg
mov
movsb
pop
rcr
mov
fisttps
push
mov
lret
daa
cmpsl
dec
int
lock
mov
push
jno
shl
adc
mov
push
jecxz
lock
xor
lahf
cmp
fisubrl
ficoml
sti
push
stos
test
mov
das
push
cmpsb
mov
xor
xchg
xchg
into
push
mov
mov
iret
dec
or
rcl
jno
sbb
mov
test
pop
ljmp
dec
movsl
dec
pop
mov
pop
in
jmp
cmp
cmp
in
in
mov
dec
lods
js
sub
sbb
cs
jbe
mov
mov
mov
ds
andb
mov
fdivr
cmc
pextrw
lea
jp
clc
jne
mov
cmp
arpl
sub
std
and
dec
pop
roll
repz
inc
insl
in
arpl
into
push
lret
inc
test
lcall
pop
cmp
lock
out
rcrb
inc
xor
mov
cs
lret
ds
iret
in
inc
loop
in
jbe
sahf
push
sbb
negb
cmp
jo
mov
dec
pusha
add
out
inc
pusha
push
pusha
popa
test
notl
mov
mov
sub
movsl
sbb
mov
enter
aam
outsb
aas
mov
mov
rclb
out
jo
sub
in
std
js
inc
add
push
dec
dec
push
and
add
stos
jg
jmp
push
movsl
or
jge
jo
hlt
inc
stc
scas
cmp
mov
test
aad
and
int3
xchg
outsb
je
add
setle
arpl
push
lcall
xor
sub
inc
xor
sub
cltd
and
or
cmp
bound
ret
inc
pmuludq
imul
xor
stos
push
inc
ret
aam
in
aad
mov
push
add
cmp
or
mov
divb
inc
out
ds
cmc
mov
push
pushf
inc
cmpsl
ss
in
mov
xchg
or
fcomps
pop
jnp
fcoml
popl
xor
add
push
xor
dec
icebp
arpl
sarl
mov
or
pop
pop
inc
fisubl
les
ljmp
and
imull
mov
sbb
sbb
add
out
mov
outsl
das
or
adc
repnz
fidivl
xchg
aaa
insl
aaa
fcoml
jg
insb
push
idivl
hlt
dec
pop
mov
hlt
arpl
cld
scas
dec
ja
dec
or
dec
mov
shrl
fsubrs
sti
mov
jbe
sub
ds
push
jg
dec
stos
or
jp
insb
xor
mov
inc
cli
add
mov
cmp
scas
mov
push
enter
jle
mov
aam
ds
inc
dec
cmp
xchg
jne
fadd
orb
bound
cmp
push
js
js
jbe
cmp
xor
popf
xchg
inc
insl
fdivs
mov
ficoml
leave
arpl
push
mov
ljmp
mov
test
dec
jl
adc
rcll
xchg
outsl
dec
loope
into
sbb
mov
fisubrl
add
fimuls
pop
mov
sub
sbb
loopne
add
lods
inc
cmpb
ds
xchg
cltd
and
add
sub
pop
push
push
inc
test
push
jg
add
and
js
sbb
push
pop
sub
addb
lea
and
cmp
xchg
dec
dec
mov
ljmp
adc
sub
push
rcrl
mov
pop
sbb
xor
inc
mov
insl
nop
pop
lea
fidivl
jne
lock
ss
ret
or
loop
and
xor
mov
xor
jg
sbb
js
and
xchg
or
inc
jecxz
iret
in
sbb
sbb
jnp
xor
nop
enter
loopne
subb
clc
jbe
jg
fwait
das
sbb
mov
test
inc
shrd
incl
arpl
adc
xchg
add
insl
pop
cli
jg
dec
bound
clc
dec
pop
lds
imul
push
add
pop
bt
repz
jl
mov
sub
ljmp
mov
roll
in
adc
pop
out
insl
insb
sbb
inc
add
cmp
mov
dec
insl
sub
test
add
xchg
jg
cmc
test
cmp
add
push
loope
cli
pop
fcomps
jns
mov
jle
popa
pop
add
sub
int3
shl
dec
mov
cmc
idivl
pop
inc
mov
push
insb
mov
movsl
out
xchg
shll
or
mov
iret
push
jb
or
or
mov
push
insb
xorl
lock
jl
jbe
scas
xchg
inc
popa
add
pop
lods
loopne
pop
pop
push
mov
scas
fisubrs
dec
and
sub
xlat
mov
cmpsb
bound
sar
jg
enter
dec
add
movsl
lea
mov
sub
cltd
xchg
push
push
or
mov
ds
cmpsb
mov
nop
loop
and
dec
pop
fstps
cmpsl
sub
push
das
inc
in
aas
cmp
bound
inc
lods
and
cltd
arpl
inc
shll
xor
test
adc
addl
pop
pop
jne
push
inc
test
in
mov
mov
xchg
or
lret
cmp
sti
jmp
shrb
inc
adcl
jmp
push
jne
pop
jl
jge
in
mov
pushf
sub
imul
mov
jb
sti
or
jo
das
jo
or
mov
aad
sbb
push
fnstsw
and
lret
mov
lret
mov
fnstsw
sub
aas
out
inc
inc
mov
out
enter
movsl
cmp
or
xor
idiv
in
stos
mov
add
mov
push
xchg
js
ret
adc
push
xor
aam
movsl
stos
and
repnz
mov
jl
call
js
fmull
rcl
xor
insl
or
shr
inc
xchg
rol
ss
sbb
or
sub
shrb
lock
and
repnz
xchg
xor
xchg
mov
and
orw
cwtl
insb
add
aam
sahf
imul
in
sub
mov
loop
fs
sub
mov
pusha
adc
addr16
pshufw
or
and
push
cli
dec
in
rclb
call
jge
pop
lock
xchg
mov
mov
pop
cs
stos
push
pusha
lret
stc
push
icebp
dec
jge
mov
adc
sarb
mov
cwtl
jmp
dec
js
cmp
int
mov
ss
mov
push
sub
mov
cmpsb
or
jb
and
xor
push
jmp
aam
and
adc
scas
cli
idivb
cmc
inc
adc
mov
in
rorb
nop
fwait
push
and
je
out
pop
les
xor
cmp
pop
int3
xor
xchg
mov
inc
test
jne
sub
jb
ret
push
mov
sbb
or
aam
xor
pop
jp
ficomps
push
ss
jns
or
mov
pushf
pop
cld
clc
pop
aam
leave
or
add
in
andl
lods
pop
jmp
shll
das
xchg
push
lahf
or
inc
ret
lea
add
icebp
pop
std
loopne
popa
das
aad
int3
stc
and
add
cmp
and
sub
bsr
cwtl
pop
out
inc
dec
jae
frstor
mov
shr
mov
push
mov
adc
cld
shl
cmp
dec
inc
dec
mov
insb
fnsave
mov
push
out
in
sbb
mov
sbb
in
incb
popa
stos
dec
xchg
sbb
mov
pop
jo
divl
roll
fdivrp
scas
cmc
fnsave
add
jp
fildl
mov
insl
mov
ja
fnstenv
les
imulb
inc
pop
jmp
fcompl
adc
mov
cmpl
jo
jl
and
inc
pop
jbe
add
dec
ret
mov
rorb
push
inc
or
xchg
fidivrl
pop
mov
push
ret
test
lea
insl
fistpll
sbb
jl
xor
in
pop
in
testb
push
repnz
sbb
xor
mov
cli
out
aas
out
les
or
fistl
push
popa
pop
cwtl
fdivr
sub
shrb
cld
aam
mov
aaa
iret
lret
push
sbb
sbb
sbb
in
std
arpl
cmp
cmpl
test
movsb
xor
sub
rcr
fldl
mov
mov
sbb
adc
sbbb
dec
mov
aam
test
inc
dec
dec
jo
cmpsb
subb
jb
adc
sbb
mov
push
mov
cli
jge
cmpb
pop
sub
in
and
rolb
adc
iret
sub
shlb
and
dec
cmp
or
sbb
shl
je
jl
and
mov
ja
inc
clc
xor
data16
pop
test
jno
add
scas
aam
push
xchg
and
inc
xlat
push
lahf
mov
pop
jmp
test
inc
jl
fucom
sub
or
test
push
int3
mov
fdivs
shll
inc
xchg
sbb
lock
lret
push
cmc
dec
sahf
test
push
cmp
and
pop
aaa
add
rcrb
push
mov
push
pop
pop
mov
xor
pop
fsubrl
mov
insl
outsl
cwtl
test
andb
fs
push
add
and
insl
fwait
dec
mov
je
ds
js
cmp
xchg
dec
mov
fcmovnb
mov
add
and
out
jl
test
xchg
and
clc
push
in
stos
sub
and
loope
or
inc
popa
add
sbbb
sbb
sub
xor
add
enter
outsl
sub
lea
cmc
pop
dec
lods
rcl
adc
aad
scas
in
xchg
dec
mov
ja
sub
jno
dec
imul
add
std
nop
xor
rclb
cmp
cmp
ret
adc
fcmovb
or
push
cli
or
jnp
jbe
or
cwtl
sbb
das
dec
stc
or
lahf
movsb
fadds
loop
call
sahf
outsl
and
cmc
add
adc
xchg
inc
sbb
andl
pop
test
pop
sub
inc
mov
xchg
jno
arpl
mov
xor
xchg
lods
ljmp
jg
jo
dec
into
cmp
sub
sub
cmpsb
unpcklps
testb
out
stos
sbb
outsb
mov
bound
push
bound
pop
adc
sbb
gs
mov
push
mov
inc
iret
enter
dec
das
mov
push
mov
add
and
pushf
call
jl
sbb
les
pusha
lcall
rclb
insl
mov
mov
lock
adc
pop
js
sub
fists
xor
cmp
movsl
ss
push
ja
xchg
sarb
cmp
js
and
adc
add
scas
mov
xor
mov
clc
push
pop
push
shlb
popf
adc
mov
jge
xlat
repz
sub
ret
sub
out
adc
fwait
or
xchg
addr16
mov
lea
jno
sbb
pop
std
cmpsl
rorl
out
sub
add
test
pop
push
adc
push
inc
pop
lock
pop
jmp
mov
rol
xchg
sub
paddw
enter
jge
xor
cmpsb
jmp
inc
idivl
popf
pusha
test
add
add
mov
scas
jg
adc
inc
pop
rcl
outsl
das
pop
mov
dec
loop
insl
xchg
ljmp
pop
iret
fs
fwait
mov
cmp
jns
xchg
push
cs
ja
sub
mov
mov
and
fsubp
outsb
bound
mov
js
jecxz
mov
jno
mov
dec
sbb
std
pusha
shll
lcall
lea
test
jl
into
pop
je
and
ja
leave
iret
jnp
inc
popf
loope
sub
mov
cs
mov
lods
test
jecxz
daa
push
test
sbb
cwtl
lcall
lods
cs
test
movsl
mov
add
mov
jno
xorb
mov
mov
add
icebp
mov
inc
mov
adc
adc
fdivr
mov
shl
es
imull
subl
cld
shl
jge
mov
jg
cli
lret
adcl
jp
aad
cmp
xchg
sbb
scas
ljmp
in
sub
std
jns
jecxz
sbb
les
push
add
push
andl
jge
sub
cmc
fildl
xchg
cmpsb
sbb
adc
mov
push
jb
sbb
in
add
notb
enter
xchg
mov
shr
pop
int3
test
push
inc
xlat
push
jge
mov
shlb
aad
ret
sahf
sub
push
jno
xlat
xchg
inc
ljmp
mov
popa
popa
cmpsb
inc
sub
fwait
andl
aam
sub
inc
addb
arpl
mov
xlat
mov
dec
fbld
insl
jle
push
int3
sti
aaa
leave
fdivr
stos
in
jecxz
mov
rcrb
arpl
mov
push
jo
imul
das
js
inc
add
lds
testl
xchg
add
in
pushl
and
jp
mov
pop
pop
shrb
test
push
cld
js
sub
je
cmp
push
push
das
dec
lahf
pop
cmc
icebp
ret
movsl
pop
or
mov
xchg
push
stc
loop
iret
shrb
adc
cmpsl
push
roll
push
xchg
jo
and
lods
ja
xor
in
mov
mov
or
sahf
sub
scas
push
mov
push
jl
cmp
mov
mov
push
add
popf
push
scas
mov
sub
out
in
cmp
push
pop
fadds
clc
jg
cmpb
lret
cmp
imul
pusha
loopne
mov
and
js
jmp
push
cmpl
cltd
repz
in
or
in
andl
fcomps
call
push
bndldx
cmp
sub
and
sbb
dec
sbb
mov
fildll
addr16
clc
adc
and
popa
popl
sbb
fldt
fwait
out
mov
adc
les
aam
push
call
adc
xchg
inc
pop
cli
outsb
jp
outsb
bswap
push
xor
fucomip
or
jmp
rcll
pop
das
out
ds
pop
push
adc
adc
lock
add
or
adc
rcrb
or
popa
jmp
mov
xchg
xchg
mov
or
stc
pop
notb
insl
mov
mov
imul
add
mov
pop
into
inc
push
fistps
jnp
pop
loopne
jbe
jbe
dec
fistps
xchg
lea
shll
and
jne
insl
lcall
das
sbbb
sbb
scas
push
aam
inc
bound
test
mov
rclb
dec
arpl
fmull
mov
xchg
out
inc
inc
add
fwait
and
adc
ljmp
mov
loope
lds
pop
inc
loop
ret
xchg
jmp
sbb
pop
jb
fdivrp
aas
out
jp
cmc
scas
xorb
popa
pop
lods
repz
in
push
xor
dec
pop
inc
jle
das
add
xlat
bound
dec
add
jnp
stc
inc
fisubrs
sti
pop
sbbl
inc
dec
jge
lds
popa
dec
jg
cmpsl
mov
mov
sub
pop
sarl
ret
mov
flds
sub
test
ljmp
das
lds
push
pusha
lods
nop
mov
xchg
aad
mov
and
and
ret
dec
lahf
fnstcw
or
sub
adc
aaa
mov
jp
rcrb
push
out
inc
push
push
mov
fisttps
mov
and
jnp
sub
movsl
scas
or
fimull
adc
xchg
mov
lcall
dec
enter
mov
and
adc
sahf
aaa
aad
lods
xchg
insb
pop
cmp
inc
fisttps
sbb
mov
test
cmpsl
lock
mov
dec
or
rclb
ljmp
orl
pop
shr
inc
mov
xchg
add
jbe
mov
sub
aam
mov
fdivrs
inc
push
xorb
push
data16
js
inc
shrd
ss
das
and
pop
mov
ljmp
fistps
aas
push
xor
mov
inc
insl
pop
loope
sub
and
pop
shr
outsb
std
sub
stc
mov
mov
lea
pushf
mov
add
mov
ficoms
sub
push
out
aaa
push
stc
mov
xor
shlb
sbb
inc
arpl
stos
cli
and
and
fmull
in
mov
stos
mov
test
int
push
jnp
or
push
sbb
push
mov
jno
xlat
roll
mov
inc
xchg
sti
std
out
in
hlt
inc
sahf
jns
in
add
testl
lods
mov
jo
cmc
mov
jp
stos
jl
add
popf
test
jle
repnz
sbb
push
setl
scas
fidivrl
fiaddl
jae
mov
inc
rclb
sti
sub
mov
or
in
and
scas
insl
mov
fsubp
lahf
je
fstl
xchg
pop
cmovo
into
ret
ret
lods
outsl
movl
call
out
add
mov
mov
jle
pusha
adc
fisttpl
adc
lcall
lods
cs
pop
or
test
js
sti
test
loopne
testl
idiv
out
cwtl
xor
push
push
add
incl
mov
dec
and
icebp
or
test
add
cmp
push
pop
adc
pop
push
push
popa
jns
sub
sbb
int3
lcall
jae
movsl
fbstp
or
push
fsub
mov
fdivs
bound
push
sarl
imul
lods
stos
cmp
cld
js
pop
orl
pop
push
ds
roll
mov
jb
and
out
pop
sbb
adc
or
mov
jl
xchg
mov
aas
pop
jno
xor
add
mov
push
fisttpl
nop
fwait
mov
ds
mov
icebp
xchg
ds
leave
inc
or
push
add
mov
push
mov
mov
or
jle
leave
leave
add
mov
sub
clc
mov
jae
or
pop
stos
sbb
js
aas
fadd
mov
or
inc
mov
loopne
dec
pop
ds
dec
jmp
mov
push
sbb
pop
daa
cmp
cmp
mov
test
mov
mov
lods
nop
and
out
pop
add
cld
rorb
clc
cmp
or
add
loope
lock
push
pop
ds
xor
lret
test
pop
jl
mov
fisubrs
decb
add
data16
imul
mov
xchg
stc
sbb
test
je
xchg
pop
lahf
stos
js
push
sbb
push
pop
or
pop
in
adc
insl
push
mov
dec
push
pop
and
xchg
outsl
sub
test
lahf
push
or
insl
cmp
adc
lds
fwait
inc
loopne
cmp
mov
mov
pop
rcrl
push
or
pop
adc
into
or
outsl
rcl
orb
test
cmpsb
and
cmp
clc
mov
mov
sbb
sub
sbb
out
sbb
loop
loopne
cmpsl
xor
add
aas
fs
cmp
subl
mov
dec
mov
cmp
in
push
pusha
mov
imul
mov
jecxz
movsb
neg
push
hlt
ja
push
gs
mov
push
inc
xor
pop
push
or
sbb
cld
jne
es
mov
movsl
push
cli
mov
in
stos
xchg
mov
roll
or
pop
sbb
lret
pop
jle
stos
cmpsl
xchg
daa
ja
adc
push
xor
push
aad
fnop
mull
jb
dec
add
subb
cs
pop
dec
jmp
in
shlb
dec
lret
sbb
xor
mov
mov
cld
scas
loopne
std
sub
enter
push
pop
mov
pop
mov
inc
fists
call
or
jmp
cmpsl
lods
mov
cmp
mov
add
inc
pop
je
fprem
ljmpw
enter
cwtl
lcall
inc
fisttpll
adc
inc
mov
in
mov
lods
outsl
mov
mov
mov
addr16
cltd
in
mov
lea
jle
popf
into
fmull
fsubs
jp
cwtl
dec
jecxz
roll
mov
cwtl
push
mov
dec
cmpsb
push
lods
mov
jnp
push
dec
dec
int3
stos
sbb
pop
lds
sub
or
cli
daa
negb
fcmovnb
cwtl
sar
xor
mov
cmpsb
or
push
jge
movl
jecxz
or
push
mov
xchg
xor
jl
mov
and
mov
outsl
mov
push
mov
mov
or
adc
mov
ljmp
push
fildll
xchg
clc
out
test
pop
cmp
outsl
and
outsb
sarb
daa
gs
xor
inc
mov
pop
add
pop
xchg
fs
daa
test
outsb
sbb
inc
pop
fisubrl
mov
xchg
imul
sbb
out
fcomps
js
push
lret
rolb
jle
movsl
out
pop
pop
in
push
mov
cmp
pop
std
out
adc
adcl
std
divb
mov
and
and
inc
push
out
or
cmp
lcall
mov
mov
sbb
fisubrl
mov
fs
push
fcoms
cld
inc
pop
pop
pop
lock
cmc
cmp
inc
dec
xor
data16
fcoms
or
dec
push
pop
jp
cmp
addl
shr
arpl
rcrb
lock
fstps
fmuls
fistl
jne
mov
sbb
jnp
push
jo
push
subb
pop
sub
aas
test
mov
pop
bswap
pop
mov
jle
inc
push
jnp
pop
dec
adc
das
sbb
mov
inc
jo
xor
sbb
ret
mov
lds
push
xchg
fwait
subl
and
and
jo
mov
ds
out
xchg
mov
mov
sbb
cmp
imul
and
rcrl
lcall
dec
ffreep
jp
mov
adc
mov
loope
in
aam
data16
mov
adc
pop
ret
adc
jmp
pop
cld
jnp
lods
mov
add
xlat
push
push
sbb
popf
jb
pop
in
pop
rorb
or
jne
pop
clc
je
xlat
add
lahf
dec
repz
cs
notb
mov
rcl
cmc
stos
fcoms
pop
mov
xor
fisubrs
xor
pushf
fdivr
push
push
xor
push
scas
and
cmpb
rclb
out
jmp
outsb
mov
sbb
into
dec
sahf
negl
rcr
in
pop
jmp
aam
enter
aaa
adc
pop
xor
imul
ja
popf
jo
xchg
mov
aam
fisttpl
insl
xchg
push
or
mov
inc
cmp
mov
mov
daa
jns
sbb
mov
mov
pop
outsl
jo
fcom
adc
xor
mov
faddl
and
push
adc
loop
mov
call
and
stos
mov
adc
les
adc
inc
pop
js
mov
hlt
inc
cmc
cli
cmp
xchg
jecxz
or
mov
inc
lock
add
roll
jecxz
sbb
mov
lods
sub
fucomi
aaa
add
mov
mov
sbb
mov
mov
and
popf
xchg
jmp
cmp
dec
xor
ss
push
clc
mov
dec
loope
fldl
mov
inc
cwtl
mov
lea
jbe
add
pop
jns
push
lock
shl
ret
nop
add
sub
stc
add
add
fidivs
xchg
dec
sarb
jl
ja
ss
xor
or
fidivl
lods
out
stos
idivb
rcll
pop
aaa
cmp
jmp
lret
fs
mov
out
in
out
jne
js
push
and
loop
shrl
out
insl
scas
dec
sub
adc
shlb
mov
jg
repnz
clc
dec
subb
psubsb
adc
std
inc
std
mov
out
push
clc
dec
js
pop
mov
jne
je
push
popa
cmpsb
mov
and
adc
pop
dec
fmull
xor
mov
mov
cli
add
loopne
sbb
jecxz
fisubrs
cltd
pop
jne
scas
adc
dec
popf
mov
les
loopne
push
xchg
mov
push
rorb
mov
mov
jb
and
loopne
ret
mov
or
xchg
or
scas
cmp
dec
adc
jmp
insb
clc
cmc
nop
cmpsl
jmp
fimull
lods
pop
dec
fmul
or
cmpsb
or
or
add
adc
movsl
rep
cli
leave
ljmp
es
lret
jne
pop
or
je
mov
loop
shl
push
add
push
insl
lods
fs
and
je
jnp
icebp
adcb
xchg
in
shlb
imul
in
fcmovu
aad
nop
jnp
pop
dec
pop
mov
adc
inc
dec
insb
data16
xchg
jae
xchg
and
fisubrs
les
dec
inc
je
push
test
cmp
dec
xorb
subl
mov
outsl
pop
fcmovnb
inc
ds
add
mov
adc
rol
mov
add
inc
or
or
fdivrl
adc
push
scas
gs
popf
fdiv
mov
mov
mov
push
pop
xor
mov
pop
cli
push
call
jecxz
scas
add
mov
cmpsb
stos
lock
repnz
sbb
cld
jnp
insb
push
hlt
xor
xor
push
je
mov
test
cmp
push
lock
ja
lods
pop
imul
js
adc
iret
idiv
cmp
xchg
pop
fdivs
push
lcall
jne
xchg
mov
pop
jae
push
jp
lea
jp
fdivr
pushf
push
or
jne
pop
pop
in
call
popa
roll
mov
and
mov
jnp
test
js
jmp
stc
out
stc
mov
arpl
faddp
xor
loope
cmpsl
mov
pop
sub
aaa
pop
jg
fwait
in
push
fwait
dec
add
mov
testl
hlt
lods
cmp
sub
loope,pn
add
inc
and
jle
sub
stc
mov
lret
xchg
mov
aaa
ds
jmp
pushf
into
push
pusha
push
xor
cwtl
lea
movsl
sbb
mov
jns
jae
test
lea
inc
pop
pusha
mov
sbb
subl
adc
add
loopne
andl
sarl
mov
fisttpl
push
data16
push
int
stos
jno
outsl
mov
std
jle
and
cmpsb
imul
fisubrs
std
jp
pop
int3
mov
pop
and
add
ret
pop
test
mov
scas
in
push
lods
mov
loopne
or
roll
fimull
pushf
sub
add
and
adc
icebp
loope
pop
push
fisubl
fst
or
pusha
scas
push
outsb
inc
jge
add
xchg
xlat
xor
and
push
insl
mov
std
xchg
pop
cmp
loope
mov
xchg
outsl
stos
nop
jg
inc
insl
cld
add
jmp
fistps
inc
xor
ficoms
rol
popf
mov
and
jmp
cld
adc
pop
sub
cmp
loopne
sub
xor
insb
jo
rclb
xchg
testl
pop
and
mov
sbb
das
push
dec
mov
jle
mov
cli
clc
and
stos
movsb
test
add
test
add
sub
sbb
shrb
jmp
xor
adc
stos
enter
ret
mov
jg
lcall
rol
cld
xchg
je
jo
inc
and
pop
mov
je
dec
in
inc
lds
push
ror
test
mov
fbstp
es
push
dec
aam
pusha
dec
inc
or
lea
es
out
lods
std
push
addl
popa
inc
sub
aad
mov
lea
pop
scas
bound
jge
mov
inc
xchg
add
lock
cmp
fcmovu
shll
fcmovu
adc
loopne
mov
pop
rclb
cmp
sti
test
xchg
adc
mov
adc
ja
lcall
adc
rol
sub
push
loope
mov
mov
cli
popa
rorl
call
jb
fstl
pop
mov
mov
mov
pop
sub
push
inc
loop
cmp
mov
dec
outsl
enter
sti
jl
rolb
xor
jne
ficompl
cmpl
sub
or
fldcw
xchg
pop
sbb
das
jns
fdivp
aaa
mov
sbb
cmp
mov
mov
or
gs
cmp
jecxz
je
adc
popa
mov
add
cld
sarb
ja
loopne
push
or
sti
pop
fnstcw
aas
or
inc
add
inc
cmpsl
mov
inc
or
insl
inc
jno
and
inc
fsubrs
ss
outsb
sti
les
or
pop
std
cwtl
fwait
or
mov
fnstsw
cmp
mov
pop
xlat
insl
push
mov
inc
decl
dec
mov
xchg
xchg
adc
test
jne
js
jecxz
jne
pop
push
inc
fdivrl
inc
mov
mov
outsl
xchg
xchg
push
adc
mov
cmc
jae
fwait
imul
inc
bnd
ds
mov
shlb
push
cld
lret
inc
and
fstpt
pop
xor
nop
daa
jg
ds
add
inc
cwtl
into
sahf
push
push
xor
pop
movl
xchg
repnz
push
jb
cltd
pop
loopne
mov
outsl
sbb
je
dec
xchg
xor
jnp
inc
mov
pop
cmc
sub
dec
lea
js
aam
dec
ja
mov
fs
jne
movsl
mov
insl
aas
stc
mov
jp
pop
mov
add
sub
das
xchg
hlt
insl
push
outsl
adc
xchg
inc
and
daa
ljmpw
and
arpl
jle
inc
sub
jg
push
xchg
mov
inc
test
iret
test
and
rclb
invd
orl
mov
sti
in
mov
mov
inc
loope
cmc
out
push
sbb
ds
outsb
jg
dec
xor
adc
mov
pop
loopne
jmp
inc
insl
std
sbb
mov
push
or
incl
into
push
adc
sub
pop
sbb
test
mov
mov
bound
bswap
adc
popa
imulb
and
daa
fmull
lret
adc
dec
test
xlat
push
inc
adc
je
cltd
shl
dec
and
dec
xchg
fcompl
lret
aaa
mov
xchg
test
pop
adc
mov
mov
and
rorl
xor
add
pushf
insl
rcl
std
clc
adc
xor
in
sbb
jp
mov
cld
call
movsb
sub
aam
xor
jae
xchg
popa
ficoml
stos
outsb
aas
sub
sbb
jg
pop
cli
fdivl
and
mov
lcall
sahf
push
dec
shr
jb
lds
xlat
cs
call
sub
and
xchg
sub
mov
shlb
aad
or
push
and
loopne
xor
idivb
cmp
out
push
push
out
push
adc
and
or
pop
xor
out
xor
lret
cld
adc
mov
pminub
fisubrl
pop
jg
dec
and
cmpsl
push
jmp
mov
sbb
andl
adc
insl
xchg
movsb
std
outsl
or
shlb
and
adc
pop
adc
mov
cmp
scas
sub
dec
add
pop
or
test
add
inc
insl
std
icebp
shrl
subb
cmp
dec
mov
jmp
mov
xor
enter
mov
aam
jmp
pop
mov
jg
push
jbe
stos
test
es
fisttpl
outsl
fildll
scas
clc
mov
rorl
mov
mov
mov
std
jle
shl
inc
das
mov
jns
jg
or
or
test
inc
cmc
test
adc
add
add
add
cmpsb
lods
mov
dec
call
xor
js
testl
aaa
push
iret
rcll
in
pop
or
or
daa
cmp
ja
push
ja
sbb
in
jno
or
pop
js
sbb
sub
sub
xor
js
sti
xchg
cmp
inc
aam
jnp
lds
inc
mov
stos
mov
adc
xchg
xorb
ret
repnz
mov
shlb
mov
in
out
ja
xchg
ret
iret
js
pop
test
cs
mov
push
insl
jmp
hlt
adc
leave
inc
mov
out
pop
cmp
mov
mov
shrl
insl
cwtl
push
xchg
push
movsl
sub
fidivs
xchg
add
pop
stos
test
ljmp
sti
mov
cltd
cmp
sarb
icebp
and
mov
daa
xchg
icebp
mov
pop
sbb
sti
mov
out
inc
iret
xchg
pusha
loope
lds
notb
stos
insl
jo
sahf
cs
add
insl
adc
inc
packuswb
arpl
jp
icebp
mov
mov
mov
pop
ljmp
or
add
lea
jp
xchg
mov
and
sub
jg
push
inc
add
fldcw
std
sbb
adc
shr
in
scas
loopne
fcomp
insl
or
or
sbb
or
push
sbb
jecxz
sub
pop
shlb
call
jno
xor
xorb
cmp
jns
jns
and
push
sbb
fldcw
orb
jle
or
and
sti
aam
inc
pop
mov
inc
sarb
cmp
sub
pop
pop
pop
jecxz
out
push
mov
dec
xor
orl
into
dec
mov
mov
aam
cmpps
in
std
add
or
and
mov
push
cmp
inc
mov
out
push
cld
cmp
test
neg
xchg
or
lret
int3
push
xchg
mov
jecxz
jmp
inc
les
push
arpl
aaa
incb
add
stc
cmp
inc
js
daa
fdivrs
rol
and
fildll
mov
xchg
aaa
clc
in
mov
sub
into
fisubl
inc
mov
lods
testb
pop
pop
mov
and
loop
hlt
sti
add
inc
inc
imul
popa
int
sub
sub
cltd
lock
rcl
adc
adc
jbe
rclb
dec
dec
sbbb
mov
int
or
jnp
addr16
or
push
push
cwtl
cmp
loope
aad
push
mov
roll
cmpsb
sbb
mov
mov
lods
push
inc
leave
rolb
add
stc
mov
sti
or
and
int
es
lret
popa
mov
mov
mov
xlat
bound
jle
rcl
popf
pop
ss
mov
push
xor
cwtl
int3
push
fadd
cwtl
ds
jbe
jo
push
xchg
popf
xchg
add
rorb
mov
pop
das
mulb
imul
adc
add
mov
gs
inc
je
jne
inc
cmp
mov
xor
lock
mov
dec
repz
pop
push
lret
dec
ljmp
jmp
push
inc
mov
add
stos
shlb
jmp
xchg
lahf
xchg
loopne
jmp
inc
scas
fdivrl
aam
xor
iret
insl
pop
push
cmp
jb
aas
mov
adc
mov
sbb
int3
jns
mov
outsl
add
pop
arpl
inc
pushf
out
dec
xchg
pop
add
cli
aad
bound
mov
xor
stos
loope
xchg
adc
shrb
mov
out
xor
jmp
and
rcrb
pushf
sbb
loope
and
pop
cmp
mov
mov
scas
jecxz
sbb
std
inc
in
inc
sub
jg
ds
ljmp
jle
push
add
sub
loop
inc
dec
stos
enter
pop
adc
in
das
fs
fistl
adc
cwtl
or
push
fidivrl
js
les
lea
xchg
or
push
xchg
stc
icebp
out
gs
xchg
mov
adc
aas
lret
ds
aam
mov
mov
mov
jns
xor
fiadds
inc
pop
imul
dec
mov
mov
mov
outsb
or
adc
out
loopne
jp
mov
or
call
xchg
add
repnz
or
push
inc
fdivs
mov
xchg
sub
lahf
mov
fs
cmp
test
outsl
add
jle
rclb
clc
adcb
fildll
lea
inc
xchg
fimuls
or
cmp
and
jecxz
ss
fadds
and
jmp
sub
addl
test
jp
add
dec
cmp
jmp
cltd
and
sbb
sub
clc
sbb
cmc
loopne
movsb
ffreep
sub
xchg
fnstsw
cmc
inc
xchg
out
push
xchg
inc
lods
mov
test
mov
jo
je
and
xchg
mov
mov
popa
fcoms
lods
mov
sub
pop
aas
pop
in
pop
test
imul
scas
cmp
rcrl
ret
jae
lea
stos
fidivs
test
scas
push
jno
or
lock
push
mov
addr16
and
fisttpl
inc
rolb
sahf
sub
aad
sbb
fldcw
pop
xchg
push
xchg
and
mov
sahf
dec
lret
mov
pop
mov
sahf
rol
std
cltd
in
mov
decb
orl
pop
sbb
adcb
iret
mov
dec
dec
pop
push
clc
cmpsl
or
mov
xchg
mull
mov
adc
mov
inc
pop
nop
mov
test
loop
lea
jge
popa
aas
push
ret
and
cmp
shl
cwtl
sti
aas
jle
jnp
mov
mov
add
cwtl
jecxz
xor
cmp
mov
mov
mov
sub
test
add
movsl
ficoml
and
sub
push
push
mov
push
add
cli
push
jp
xchg
pop
or
sahf
and
rorb
adc
dec
stos
add
jo
cld
pop
test
test
mov
sahf
rol
mov
xchg
push
jge
or
xchg
jle
mov
pop
aaa
push
add
pushf
loope
in
popa
dec
fdivrs
insl
jp
pop
das
stos
ljmp
in
mov
ds
mov
ljmp
in
push
xchg
fsubrl
push
test
xlat
outsl
cmc
movsl
outsl
icebp
dec
sbb
orb
mov
adc
pop
nop
push
cmpsb
inc
es
lods
mov
stos
testl
ja
or
xchg
loopne
sub
mov
push
pop
xor
je
mov
mov
dec
in
xchg
fildll
frstor
cmp
adc
fistpll
jl
push
clc
andl
insb
adc
adc
rorl
inc
inc
sub
push
in
pushl
pusha
jae
out
cmp
sub
jo
shlb
fimull
ret
pop
add
aad
or
dec
pop
stos
push
aad
add
ja
xchg
call
mov
mov
jle
popa
aaa
das
into
fnstenv
ret
adc
xor
jne
nop
inc
xchg
xchg
imul
or
popa
cwtl
filds
in
stc
call
adc
ror
push
or
or
lds
cld
bound
bound
push
icebp
pop
xchg
clc
and
push
or
pop
add
sbb
dec
add
sbb
or
sti
adc
les
les
mov
das
call
movsl
add
or
jb
add
mov
sub
sbb
dec
ret
vmovdqu
cwtl
add
or
and
dec
push
lcall
insb
les
test
xlat
int3
push
outsb
or
sbb
xchg
out
push
sbbb
fisubrl
and
add
dec
mov
incl
push
dec
daa
xchg
lret
loop
mov
sbb
ljmp
mov
scas
aam
repz
jge
sbb
mov
fildl
dec
cmp
aas
fcmovb
fcomps
ret
mov
sub
into
je
fwait
dec
xor
adc
fdivl
mov
ret
and
mov
in
sub
rcll
outsl
xor
cwtl
shlb
inc
sbb
insl
mov
sbb
lmsw
mov
pop
clc
add
test
clc
fsubrl
jle
or
xchg
fdivrl
ds
jg
leave
pop
mov
mov
leave
push
cmp
and
xchg
cmpsl
inc
cmp
jmp
wbinvd
psrld
mov
sbb
dec
outsl
mov
addl
add
cmc
inc
sbb
xchg
mov
mov
xor
mov
cmp
jno,pt
stos
jno
inc
nop
fidivl
push
mov
call
test
add
mov
lds
in
or
sub
jl
inc
rcrb
push
pop
iret
insb
rolb
sub
incb
add
cmc
ret
mov
mov
pusha
idivb
inc
mov
xlat
popf
js
cmp
outsl
and
movb
xchg
mov
pop
xor
insb
bound
mov
pop
dec
jp
rcr
insb
filds
push
jmp
add
mov
in
jnp
sbb
sbb
ffreep
lea
adc
xchg
sbb
adc
add
cmp
fidivrl
test
incl
mov
push
adc
inc
mov
jbe
scas
add
jnp
xor
mov
mov
pop
fnstsw
mov
xlat
jl
jecxz
icebp
lock
and
out
cwtl
cmp
jb
ret
cmp
popa
ja
inc
jl
mov
xor
scas
xor
pop
lret
out
pop
loopne
dec
sbb
add
jg
xchg
adc
lcall
pop
outsl
sbb
sbb
clc
and
cmc
mov
sub
add
outsl
iret
or
jo
bound
loope
xor
or
cmp
jle
rolb
adc
lcall
fiaddl
push
loop
ja
fldl
mov
mulb
and
pushf
jle
dec
sbb
pop
clc
mov
movl
es
out
mov
xor
popa
xchg
xchg
mov
adc
sbb
sub
xor
add
aaa
mov
ret
test
cmp
or
loop
int3
inc
mov
xchg
jae
pop
fwait
push
sahf
pop
loop
lock
fs
lret
add
push
test
sbbl
jbe
jae
popa
clc
sbb
mov
mov
hlt
dec
outsb
mov
add
into
adc
pusha
ror
aas
sub
cmp
dec
cli
or
int
mov
lcall
add
adc
push
or
sarb
dec
dec
mov
fiaddl
and
lea
aas
lods
pop
jecxz
cmpsb
mov
sti
inc
mov
cmp
cli
in
lods
mov
bound
push
pusha
pop
movsb
inc
cmpsb
outsl
cmp
jmp
adc
clc
cmpl
adc
or
shr
shrl
mov
adc
xor
jo
inc
pop
test
xchg
int
fisttps
loopne
call
pop
fdivrl
sbbb
push
test
xchg
sub
cmc
cmp
jns
js
add
sbb
stos
and
sub
push
ficompl
jne
pop
lods
mov
inc
lock
and
push
subl
inc
jg
mov
pusha
out
fildll
lret
jmp
mov
adc
rcr
ja
mov
test
sbb
fs
push
dec
sub
mov
cld
lock
add
fidivrs
stc
or
push
fadds
incl
xchg
pop
add
pop
mov
mov
mov
xor
pop
insb
outsl
out
add
add
add
pusha
sti
or
out
addb
mov
cmpsl
and
add
ret
cmp
js
push
xor
arpl
mov
inc
inc
cmp
mov
sbb
popf
cmp
xchg
jne
mov
je
loopnew
push
scas
insl
insb
pop
mov
inc
das
xchg
lret
sti
out
mov
or
and
aas
mov
gs
mov
rcll
or
clc
pushf
lsl
mov
dec
aaa
or
movsl
xor
loopne
push
push
xchg
jno
iret
ret
push
pop
cld
dec
popa
xor
push
aam
mov
hlt
cld
adc
or
or
clc
das
cld
mov
add
imul
daa
mov
mov
add
push
xor
sub
cli
shlb
jno
aad
test
pop
lock
cmp
pop
jecxz
xchg
call
dec
cmpsl
mov
push
out
fdivr
ret
jl
sbbl
in
jmp
pop
or
mov
mov
sub
push
call
inc
or
mov
sti
sahf
cmp
out
das
insb
jl
push
in
push
cli
flds
dec
adc
lret
mov
pop
jo
xchg
xchg
add
pop
leave
xchg
jp
sub
cmp
mov
jno
add
jae
xchg
pop
ds
cld
push
or
inc
mov
add
js
gs
ja
adc
sbb
pop
pop
adc
mov
mov
jge
add
jo
sar
aaa
jnp
jp
scas
iret
popa
jno
stos
arpl
mov
mov
dec
mov
inc
jmp
subb
add
dec
xchg
repz
sub
arpl
pop
xor
cmpsb
bound
aad
aam
inc
mov
repnz
ds
jno
mov
neg
push
popf
xchg
iret
add
mov
addl
shrb
insb
jl
sub
jl
clc
xchg
mov
push
push
mov
adc
pop
mov
das
scas
pop
test
loopne
sub
cmp
loop
fucomp
push
or
mov
jns
inc
in
sbb
dec
push
ficomps
leave
shlb
sbb
scas
mov
hlt
push
jne
xlat
dec
and
clc
stc
pop
ljmp
mov
lock
and
jmp
pop
inc
rolb
rcrb
jecxz
stos
enter
add
aad
push
add
mov
or
idiv
andw
ss
es
scas
and
out
imul
xor
or
push
xchg
bound
adc
cmpsb
jp
stos
xchg
push
dec
mov
aad
fs
push
adc
or
push
fbld
xor
mov
test
mov
and
test
dec
ss
push
es
cmp
aaa
mov
mov
scas
push
mov
cmc
rcll
pop
sbb
stc
sbb
add
loopne
or
pop
cmp
ljmp
cmp
and
push
rolb
adc
cltd
sub
jmp
push
fcomps
fdivrs
decl
subb
inc
cmc
xchg
inc
cmpsb
out
xchg
lahf
and
sbb
shl
or
int
pop
fdivr
insl
jne
mov
mov
test
cld
out
ljmp
js
push
pop
inc
cmpsb
test
jle
fldt
pop
lea
mov
push
and
fsubrs
push
xchg
incl
int3
cld
jbe
and
mov
scas
les
mov
sbbl
push
and
into
lret
pop
push
mov
pop
sbb
xor
or
imul
cmp
mov
jg
push
pop
xorb
lcall
jle
mov
xor
clc
out
pusha
stos
aaa
cmp
fisubrl
scas
shrb
js
xor
addb
push
jecxz
xor
add
out
popl
outsl
das
jge
shlb
add
jmp
and
push
dec
mov
mov
in
jl
sub
push
les
push
add
add
arpl
mov
mov
push
adc
push
repz
in
icebp
mov
mul
in
xchg
ljmp
jno
shlb
roll
lock
fidivl
pop
pop
or
scas
mov
jp
sbb
lahf
fidivs
movsb
jno
shl
push
insb
ljmp
adc
fstl
jg
testb
sub
cmp
push
movsb
je
das
insl
sbb
pop
test
loope
mov
inc
jmp
outsl
push
adc
mov
sbb
jno
xchg
add
jo
popf
popl
movsl
sbb
push
cs
hlt
sbb
filds
xchg
sbb
mov
cmp
icebp
aas
dec
mov
jbe
jae
mov
add
xchg
cmc
mov
fstl
aaa
sbb
fdivrl
repnz
pop
nop
pusha
shlb
adc
cwtl
lea
fnsave
add
dec
sar
das
jge
insl
addb
lcall
push
pop
mov
or
iret
xchg
push
push
fadd
sbb
inc
pop
jnp
lahf
xlat
cmpl
jae
sub
adc
push
xchg
roll
dec
inc
je
ret
pop
clc
sbb
andb
jno
in
sub
call
out
pop
adc
aam
sbb
dec
notw
stc
sub
sub
pop
stos
mov
sbb
mov
sahf
call
les
mov
ret
push
cmp
into
add
jbe
xchg
and
pushf
mov
pop
or
adc
dec
mov
push
rcll
ljmp
xor
fcomps
jecxz
outsb
outsl
fists
fists
mov
clc
pop
aad
bound
jl
push
out
push
subb
push
or
mov
dec
inc
pop
fcompl
xor
fistps
or
pop
aam
mov
out
test
or
mov
ja
outsl
outsl
lret
icebp
je
add
sub
scas
push
popa
ret
add
sbb
and
mov
pop
push
les
daa
mov
jbe
xor
push
or
jecxz
mov
test
and
push
pop
mov
lods
push
clc
mov
cld
dec
dec
xor
add
sub
push
xchg
rorb
fisubs
fwait
rclb
int3
jge
jne
lods
dec
daa
in
inc
les
inc
jge
mov
mov
add
test
mov
push
imul
rolb
jge
call
fmul
gs
pusha
sbb
iret
test
fcompl
mov
inc
jo
cmpsl
fdivp
push
jmp
fxch
sbb
flds
sub
cs
inc
mov
dec
adc
mov
inc
lret
mov
xchg
pop
mov
or
and
ss
and
dec
push
mov
dec
leave
pop
in
out
add
fdivrl
repnz
pop
mov
jp
mov
adc
mov
sti
or
lahf
jo
dec
lock
ss
or
jb
inc
push
mov
aam
and
negb
cwtl
sub
xchg
mov
hlt
cmp
dec
call
cmp
sub
pop
pop
mov
neg
mov
and
fst
scas
xchg
add
mov
xlat
adc
fwait
adc
jnp
in
sub
cmp
xor
pop
nop
mov
lds
ljmp
fistps
aad
push
cs
sbb
mov
push
data16
jge
jbe
and
pop
fcmovu
cltd
lds
aaa
adc
popa
jne
leave
outsl
dec
cmp
ret
jae
pop
jge
push
sub
test
hlt
movsl
fcmovnbe
dec
lock
sti
mov
pop
jl
mov
gs
andl
inc
in
iret
clc
pop
mov
pop
sub
jge
inc
jne
mov
lea
dec
fstl
inc
int
dec
pop
shl
shrl
aad
mov
cwtl
push
jmp
fildll
push
dec
jecxz
xchg
or
xor
sub
fmull
mov
shrl
inc
push
leave
xchg
sub
inc
test
rorl
fildll
std
neg
lds
cmp
pop
lods
inc
pop
pop
aam
sub
in
adc
shrl
fildl
loop
mov
ret
ja
mov
push
inc
jecxz
pop
insb
cli
loop
mov
cltd
lea
or
mov
inc
sub
lea
xchg
push
cld
orb
sbb
jnp
daa
stos
mov
mov
xchg
push
xchg
es
add
push
lret
aaa
pop
rep
std
inc
or
cli
dec
mov
addl
jmp
mov
imul
mov
mov
xchg
popaw
imul
xchg
mov
stos
inc
jmp
mov
xchg
mov
push
push
cmp
rol
or
or
mov
lds
xchg
pop
out
ds
test
loop
or
sbb
sbb
lock
pop
inc
test
adc
inc
testl
rclb
fstpt
rorb
mov
push
jns
and
mov
push
in
dec
das
xchg
mov
out
jecxz
jle
jo
xchg
fsub
pop
lods
cmp
adc
mov
push
jns
aad
sahf
fadds
adc
mov
les
mov
iret
sti
ret
jmp
movsl
inc
addb
mov
mov
pop
call
insl
cld
xchg
out
loopne
ljmp
rcll
cs
cld
push
fucomip
pop
sbb
shlb
mov
jge
leave
inc
jmp
push
or
jne
mov
push
or
mov
ss
call
push
lds
aas
push
out
mov
shrl
ret
push
pop
repz
dec
outsl
mov
push
repz
push
movsb
cmp
subl
decb
jg
push
adc
pushf
mov
mov
stos
push
mov
xchg
pop
push
mov
inc
xor
cwtl
xor
es
jns
adc
mov
pop
mov
loope
jge
or
sub
inc
xchg
mov
call
stos
dec
inc
orl
jg
add
jb
pop
gs
cmp
movsb
enter
jle
pop
sbb
lea
imul
imul
and
sub
sarl
mov
mov
push
xlat
das
xor
jo
ret
mov
fnstsw
and
mov
adcl
add
les
arpl
mov
xchg
xchg
mov
roll
insb
pushf
mov
pop
aas
gs
push
pop
js
fs
fistl
sbbl
aaa
mov
jle
insl
push
sbb
nop
xorl
dec
inc
outsl
mov
mov
js
inc
fldt
mov
adc
fisttpll
icebp
cli
xorl
fldcw
enter
sbb
pop
loopne
ret
xor
pop
faddp
aad
mov
adcb
in
add
fcmovbe
sub
jge
jne
lods
mov
cmp
inc
ret
test
add
cwtl
cli
aad
cli
lock
into
aam
jle
lcall
iret
jbe
sub
popa
icebp
imul
clc
in
ret
popf
cmp
mov
lcall
mov
rclb
pop
pop
in
in
bound
xor
aam
inc
jbe
jns
jecxz
movsb
mov
add
xor
fists
mov
mov
cmc
push
fidivrl
mov
mov
push
jmp
inc
adc
sub
xchg
and
dec
stos
aad
pop
stos
ljmp
mov
dec
js
je
or
sbb
into
mov
cwtl
shl
insl
mov
mov
in
outsl
jl
clc
add
and
cs
gs
icebp
xor
lds
and
xchg
inc
fsubs
sar
push
pop
in
pop
or
stos
jno
cmp
mov
dec
cmp
sbb
ret
mov
pop
lock
data16
cli
push
jno
mov
and
shlb
sbb
movsb
ret
test
add
push
adc
sub
sbb
jle
jne
push
xchg
push
mov
cmp
adc
mov
adc
cmp
addr16
dec
insb
mov
add
jb
or
in
xor
push
adc
mov
bound
or
lods
addr16
into
xchg
add
incb
pop
mov
rorl
js
test
jge
aad
pop
and
orb
nop
imull
data16
mov
sub
push
rcrl
aad
inc
out
outsl
js
bound
je
scas
rcrl
cli
mov
mov
xchg
sub
push
mov
inc
xchg
jae
mov
aas
in
ja
out
mov
fnsave
sub
adc
adc
push
cmp
and
hlt
aaa
inc
test
sahf
scas
ret
rorb
sbb
jle
pop
pop
je
jnp
test
push
repnz
push
mov
fcmovnb
push
jl
ds
dec
and
pushl
xor
loope
cmpsb
mov
out
int
outsl
or
loop
mov
scas
mov
mov
mov
shlb
inc
repz
popa
roll
sub
pop
pop
loopne
or
popl
xchg
xchg
dec
inc
scas
pop
jmp
das
mov
or
mov
mov
push
sarl
adc
or
xchg
jno
movsl
cmp
inc
out
adc
das
in
outsb
mov
arpl
push
xchg
jl
outsl
in
xor
call
stc
lret
push
in
loopne
push
jmp
aaa
call
int3
in
jl
push
jb
popa
jp
popa
mov
sub
ljmp
mov
sbb
and
jmp
push
ljmp
cli
xchg
dec
test
jnp
push
adc
into
mov
decl
xchg
add
pop
or
push
xchg
sub
cld
int3
sahf
xchg
inc
sub
jbe
pop
lcall
imul
fstps
sub
mov
imul
rcr
dec
sub
pop
shlb
in
adc
sub
mov
aad
mov
inc
hlt
notb
push
jmp
pop
dec
cmpsl
jno
in
pop
jge
mov
adc
std
lods
mov
inc
sarl
mov
popf
or
and
rcrb
icebp
push
cmp
pop
add
cmp
pop
mov
mov
mov
loopne
lahf
movsl
cmpsb
pushf
ret
cmpsb
push
mov
fwait
pop
mov
pusha
fs
clc
outsl
loopne
out
and
sub
mov
and
sahf
loopne
fisubs
pop
push
sbb
and
in
ja
push
mov
push
popf
enter
mov
push
jecxz
xchg
sbb
xor
jp
das
pop
push
bound
sub
sbb
push
aaa
insl
dec
incl
adc
test
adc
mov
sub
cmp
inc
push
adc
mov
mov
jo
add
mov
enter
mov
jmp
sbb
pop
push
outsl
xchg
cld
xchg
call
iret
mov
sbb
adc
xor
in
fcmovnu
loope
clc
daa
adc
fists
test
pop
into
std
out
adc
out
test
js
xor
sub
xchg
mov
pop
clc
mov
into
and
jecxz
test
mov
call
xlat
imulb
xchg
test
repnz
xor
adc
hlt
lods
xchg
xchg
lret
incl
loope
stc
xor
iret
mov
mov
cmp
mov
jge
push
inc
or
movsb
test
es
out
or
int3
mov
mov
sub
inc
push
mov
cmp
adc
shl
jecxz
push
inc
jl
mov
sub
rolb
dec
shl
push
xor
fcomp
ss
ret
jle
adc
sbb
mov
clc
push
mov
and
stos
ficoms
in
sahf
out
xchg
mov
test
sbb
insb
and
and
push
mov
mov
dec
inc
cmc
xchg
cmp
sub
xchg
add
ja
cmpl
mov
jo
pop
mov
sub
mov
inc
lcall
cmp
xchg
mov
out
loopne
loopne
es
sub
sub
sti
leave
add
sub
iret
xchg
dec
lea
pop
test
push
les
jb
jle
and
cmc
aaa
outsl
aam
sbb
cld
pop
jecxz
pop
icebp
cmp
adc
outsb
daa
outsb
pop
sub
dec
mov
dec
adc
cmp
aaa
shlb
dec
inc
mov
xor
mov
and
fistpl
sub
sbbb
fisttpl
xor
mov
insb
jge
lahf
jmp
jo
mov
popa
outsb
mov
or
les
or
iret
and
in
inc
je
jge
fucomip
filds
movl
fs
inc
fimull
enter
pop
pop
xchg
ret
shll
cmpl
leave
jmp
mov
mov
jg
mov
dec
pushf
mov
out
mov
rclb
std
repnz
inc
sub
xchg
jo
adc
xlat
pop
or
test
aas
in
sarl
and
pop
fistpl
in
sbb
sbb
add
dec
je
pusha
and
push
xor
dec
adc
movsl
rcl
retw
jbe
mov
popf
push
and
iret
fdivrs
jae
inc
imul
pushf
or
ror
in
call
or
adc
cmp
stc
cmpsb
push
fsubrs
and
loopne
sbb
adc
mov
ret
ret
xchg
les
jne
popf
mov
add
lcall
mov
push
inc
int
pop
mov
clc
fucomp
pop
jb
sbb
adc
jecxz
xchg
push
cmpsb
mov
movsl
dec
iret
mov
mov
pop
cmc
inc
rorl
sahf
pushf
pop
inc
xor
test
xchg
jecxz
inc
call
bound
in
jecxz
pop
xor
fisttps
jl
xchg
fcoml
cmp
in
mov
mov
loop
mov
fs
sbbl
stos
sbb
js
add
pusha
jecxz
dec
daa
or
jmp
outsl
mov
or
enter
mov
scas
or
and
pushf
push
dec
mov
sub
mov
out
add
mov
dec
mov
adc
aas
addr16
dec
cmpsb
adc
fcoml
hlt
out
hlt
adc
cmpsb
scas
mov
sub
xchg
faddl
and
lods
push
xchg
mov
xor
push
cmpsb
js
lea
mov
scas
in
and
movsl
aas
add
cli
dec
lcall
addr16
add
test
xchg
push
add
xor
pushf
xor
sub
negb
inc
outsb
xchg
pusha
add
or
imul
inc
pop
xor
push
xor
in
inc
stos
pop
pop
pop
testb
sti
sbb
or
test
adc
dec
ds
aas
clc
fistpll
sub
test
xor
xor
or
xchg
ja
loopne
loop
xchg
or
or
pop
lods
and
sub
movsl
jbe
jns
jg
inc
into
adc
cmp
dec
rorl
xchg
push
bound
pop
cmpsl
dec
pop
cld
pop
aas
popl
pop
add
les
or
fs
jg
loope
arpl
das
insb
imul
rol
mov
push
mov
icebp
dec
cmp
stos
mov
mov
push
dec
cmp
test
aas
imul
adc
xchg
ss
push
outsb
pop
bsf
mov
cld
mov
aam
loope
or
sbb
push
mov
movl
clc
shlb
sub
lods
dec
cwtl
dec
inc
or
rol
and
lcall
testb
out
lock
cmpsl
xchg
ss
or
jl
and
mov
out
dec
test
icebp
push
and
inc
and
lcall
shrd
ss
loopne
addr16
dec
rcrl
inc
aam
and
jecxz
movl
pushf
jne
sbb
add
pop
js
hlt
add
xchg
and
fiaddl
out
enter
xor
imul
jle
lcall
mov
pop
ret
mov
std
cmp
iret
rclb
mov
mov
jle
xchg
fwait
mov
adc
sub
xor
imul
insb
ja
cmc
pusha
sti
adc
sbb
ss
and
clc
jg
jns
movsb
movsl
cwtl
rcrb
call
mov
mov
cmpsb
cltd
out
sbb
inc
stos
loope
pusha
jl
xchg
loopne
mulb
notl
rorb
jnp
int
rorb
call
sbb
ret
clc
add
pop
test
mov
test
mov
xor
cmp
mov
pushf
inc
pop
sbb
cld
je
pop
lock
jg
scas
xor
rcll
mov
xorl
popa
outsl
mov
xchg
pop
cmp
jl
jmp
ffreep
mov
xchg
pop
les
shl
sbb
stc
fs
mov
das
inc
pop
add
xor
pop
outsb
ja
adc
and
jnp
repz
addb
clc
pop
cmp
test
cmp
pop
mov
pop
add
adc
adc
shlb
xchg
mov
dec
cs
push
icebp
jbe
and
out
mov
pop
lods
inc
sub
push
xchg
and
aad
xor
inc
mov
bound
hlt
test
loopne
mov
out
dec
or
inc
dec
dec
jns
cmc
sub
inc
fildl
add
mov
cmp
imul
xlat
mov
inc
das
mov
push
out
stc
gs
jg
pop
mull
push
fldcw
sub
mov
loope
add
xchg
dec
dec
fldenv
ds
test
fldcw
sbb
xor
push
std
sahf
pop
fldt
cs
jmp
out
ss
mov
adc
xchg
pop
mov
arpl
sbb
adc
add
push
fildll
loopne
adc
jge
lods
pop
loop
addr16
sti
sbb
outsb
movl
add
mov
mov
push
icebp
pop
mov
sbb
orb
mov
add
ss
cmp
leave
in
pop
out
or
mov
xchg
and
aam
sarl
add
inc
insl
aam
adc
filds
lds
and
cmc
mov
mov
je
adc
sub
sbb
pusha
data16
pop
icebp
cmp
cmp
cwtl
les
ja
out
pop
aas
pop
cmp
les
mov
icebp
lods
inc
push
lahf
out
mov
movsb
jle
shr
cmpsl
inc
sub
lret
dec
sbb
inc
push
cmp
inc
sarl
aad
pop
add
push
aad
dec
jnp
jmp
mov
or
dec
insl
bound
fwait
push
push
imul
shll
pop
mov
test
je
or
jno
lds
mov
mov
adc
arpl
sub
and
cmp
jp
lret
les
adc
mov
and
in
inc
orb
mov
inc
shlb
sbb
inc
cmp
pop
sarb
js
mov
inc
test
jl
mov
or
and
in
mov
out
mov
adc
xor
or
xchg
clc
outsb
sarb
lods
std
ds
data16
xor
pop
mov
add
pop
icebp
dec
ljmp
xchg
cmp
inc
add
adc
mov
adc
add
adc
out
push
les
mov
in
add
pop
push
fimuls
lods
test
mov
mov
xchg
jg
shl
in
mov
shlb
push
js
mov
push
call
ja
xchg
rcr
lods
loop
cmc
jecxz
or
testb
add
popf
ja
fisubrl
loopne
movsb
divb
mov
das
jge
scas
rcll
sbb
es
and
loope
jbe
push
mov
cmp
out
xor
sub
clc
test
loopne
adc
or
add
mov
mov
push
shrl
shl
aam
push
adc
xchg
xchg
mov
test
pop
or
es
enter
cmp
mov
cmpsl
aas
cwtl
xor
add
push
add
movsl
outsb
pop
jbe
sbb
mov
inc
into
ss
rcll
inc
jmp
test
pop
push
and
add
sbb
lock
daa
add
in
xchg
push
cmc
xchg
je
and
shll
test
orl
mov
bound
out
add
negl
dec
push
push
adc
stos
inc
xchg
pushl
and
fistpl
mov
dec
sti
cmp
arpl
ret
adc
pop
mov
outsl
in
or
jecxz
cli
dec
clc
pushf
aad
inc
push
xchg
cmp
mov
pop
test
or
outsb
outsb
out
mov
push
insb
push
push
sub
xlat
ret
out
mov
jge
sbb
movsl
sar
jp
inc
sub
daa
sbb
mov
outsb
outsl
xor
pusha
inc
outsl
nop
or
and
or
xchg
fwait
mov
mov
std
rcll
cmpsl
cmp
nop
bound
es
gs
pusha
lods
addr16
aad
inc
arpl
fcomp
mov
inc
icebp
inc
shlb
dec
dec
jno
pop
js
add
jbe
mov
ficoml
pop
sbb
jbe
lea
adc
in
sbb
jae
mov
add
add
mov
in
ret
push
mov
vprotq
shll
jle
xchg
sbbl
pop
jp
push
push
pop
dec
mov
adc
ja
mov
inc
out
loope
push
fimull
aas
lahf
and
aam
adc
cmp
orb
repnz
mov
ret
xchg
or
and
outsb
pop
push
pop
xchg
stos
inc
mov
pop
sahf
jne
push
push
mov
out
sbb
in
out
es
js
add
loop
mov
xchg
sbb
call
sti
je
sbb
test
adc
aam
dec
je
mov
popa
and
push
loopne
in
push
inc
ds
push
shll
dec
adc
dec
ja
repnz
enter
push
sbb
mov
add
or
xchg
mov
insl
mov
mov
jp
xor
inc
fnstsw
fmulp
push
pop
adc
xchg
pop
inc
mov
jl
adc
sub
mov
pop
les
or
mov
inc
jg
shl
sti
mov
imul
arpl
rcrb
push
xor
add
clc
lods
filds
pop
lcall
lahf
out
fisubrl
es
outsl
fiadds
popa
mov
or
or
mov
imul
or
fmuls
mov
rorl
jecxz,pt
mov
loope
or
mov
add
jmp
stc
scas
mov
pusha
clc
ret
push
sbb
fwait
push
push
ret
gs
mov
push
xor
roll
fcoms
or
or
jbe
icebp
mov
dec
test
popa
stc
and
sbb
dec
std
jno
inc
imul
dec
repnz
adc
xchg
mov
inc
cmp
adc
ror
and
icebp
ljmp
roll
fmull
mov
cld
lea
ljmp
mov
cmc
dec
outsl
lds
arpl
mov
mov
xchg
inc
xor
ds
js
outsb
gs
cltd
bound
add
cli
mov
outsl
rcll
lret
clc
xchg
pop
adc
xchg
xor
inc
sub
rcrb
out
call
add
hlt
das
jg
movsb
hlt
mov
test
adc
sbb
adc
and
push
sbb
cmp
adc
movsl
cli
mov
add
cwtl
push
cmpsl
sbb
pop
xorb
mov
cmp
sbb
xchg
mov
adc
cmp
ss
jg
inc
movsl
daa
cli
out
xchg
fwait
or
pop
sbb
mov
in
ret
mov
fstpl
test
inc
dec
jmp
sahf
and
stos
ss
aas
add
mov
in
outsl
sub
idivl
daa
jge
das
fdivr
push
insb
sbb
fildll
rclb
mov
mov
fs
lock
sysret
mov
cmp
xor
nop
xchg
add
mov
dec
adc
jne
mov
cmp
call
xor
mov
fcmovu
inc
outsl
add
enter
push
shlb
jb
dec
xor
pop
rcll
clc
lea
xor
jns
mov
gs
jmp
cltd
fs
xor
mov
cmp
mov
cli
mov
add
xchg
sub
add
clc
sbb
dec
mov
outsl
mov
mov
clc
fwait
addr16
dec
cmpsl
jb
mov
je
sti
cmpsl
mov
divl
and
fcoml
and
add
pop
lock
or
push
adc
decb
loope
pop
jmp
mov
mov
sbb
pop
divb
mov
shrl
cld
pop
fxch
sbb
xchg
ret
ret
add
js
xor
js
enter
mov
aaa
enter
dec
fucompp
and
inc
sbb
jmp
push
add
adc
sbbb
lock
mov
test
or
lret
dec
scas
add
sti
sbb
sbbl
add
push
jecxz
sbb
push
leave
fldl
add
std
fs
mov
pop
fdiv
mov
xchg
or
out
sbb
je
mov
or
jne
and
lods
orl
add
push
iret
push
pusha
lcall
int
jmp
cld
push
ror
push
xchg
inc
cld
push
mov
outsb
test
or
ljmp
rolb
loopne
cmpsl
cmp
pop
nop
in
adc
mov
es
mov
xchg
or
lds
stc
mov
std
adc
lods
mov
mov
stos
popa
cmp
sub
mov
add
into
dec
out
jo
das
je
push
adc
jns
fimull
fistpll
lods
pop
pop
aad
inc
push
clc
fdivl
and
ds
add
pop
cmp
outsb
mov
jns
in
insb
pop
xchg
xor
inc
dec
xchg
arpl
push
and
xchg
push
jl
dec
bound
and
scas
aaa
sbb
sbb
add
lods
fstps
mov
or
jns
mov
push
dec
fbstp
jg
stos
jbe
lcall
adc
dec
or
or
mov
pop
dec
cld
fistpl
push
outsl
mov
cmpsb
out
jle
or
fisttps
cmp
adc
sub
mov
sub
sbb
adc
mov
out
insl
pop
sub
in
mov
sahf
mov
add
xlat
into
xor
lcall
stc
jp
adc
pop
int3
adc
mov
imul
xor
push
pop
pop
addb
orb
adc
jmp
adc
pop
lahf
std
cmp
ljmp
push
jl
nop
add
mov
lea
adc
mov
add
enter
sbb
xor
sbbb
jecxz
out
sti
imul
xchg
loope
mov
sub
icebp
jg
and
cmp
mov
mov
lret
popf
mov
aas
out
jge
dec
add
mov
push
in
nop
ret
pop
inc
or
aaa
fdiv
or
pop
dec
testb
call
div
mov
outsl
add
ret
std
std
or
addr16
aam
adc
pop
inc
inc
push
fildl
xchg
dec
mov
dec
test
push
aam
xchg
js
aas
arpl
addr16
arpl
pop
das
cmp
mov
xchg
mov
xchg
aam
lock
fiadds
sbb
mov
adc
sub
mov
fs
fldenv
add
lcall
mov
aaa
enter
dec
sbb
sbb
push
push
mov
mov
sarl
cli
aaa
int3
add
mov
pop
mov
jbe
sti
xchg
leavew
inc
andl
cmp
sbb
mov
push
or
fwait
fs
push
mov
pusha
pop
jne
cs
mov
loopne
sub
dec
jl
je
cmp
repz
mov
push
or
push
notl
jl
mov
imul
sub
repz
mov
mov
sub
push
sarb
sti
adc
sbb
scas
cmpsb
test
std
movb
xlat
outsl
test
dec
mov
idiv
and
mov
aad
jle
out
aad
pop
pop
pop
mov
push
sbb
adc
and
push
negb
xchg
pop
insl
int
xorl
je
mov
mov
mov
inc
dec
inc
je
mov
notb
inc
pop
setno
lea
ljmp
and
not
inc
pop
jbe
cltd
fsubl
dec
aaa
push
add
add
inc
xlat
or
push
lods
insb
out
lock
push
je
dec
sub
or
loopne
hlt
fistps
in
xor
push
loope
ljmp
lahf
xor
mov
insb
xchg
arpl
sbbb
or
sahf
mov
jp
sbb
lods
fcmovu
hlt
fists
inc
lret
idivl
pop
or
popa
inc
jg
ljmp
xchg
sub
sbb
ljmp
mov
push
xor
pop
rcll
lods
mov
mov
andb
movsl
push
std
dec
insb
notb
dec
inc
pop
cli
mov
pop
insw
sbb
les
dec
aaa
decl
and
ret
lcall
mov
ja
movsb
jle
repnz
push
xlat
mov
adc
test
cmc
or
shrb
sarl
xchg
test
popa
loope
rcll
das
or
dec
add
bound
das
jl
mov
addb
fidivrl
adc
cs
aas
movsb
out
in
and
or
imul
test
mov
mov
fs
cmp
in
addb
rclb
addr16
sbb
aad
ror
dec
adc
mov
jno
dec
push
jp
dec
lods
repnz
into
repz
adc
icebp
lret
test
push
mov
mov
les
aam
shl
sahf
test
sub
push
push
dec
cmc
cltd
in
stc
imul
inc
cmpsl
incb
ss
mov
jmp
add
push
test
mov
iret
and
pop
inc
pop
sub
lret
outsl
mov
cmp
out
leave
shll
mov
rcl
jo
jbe
add
xchg
in
lret
ret
das
mov
and
mov
sahf
cmp
jb
cli
add
rclb
mov
aas
popa
icebp
mov
push
pop
mov
add
shrb
shrl
ja
je
or
clc
scas
sbb
xchg
mov
testl
loop
and
push
hlt
test
pop
rcrl
fidivrl
arpl
cmc
outsb
xchg
dec
push
popa
rcr
es
adc
ja
adc
test
mov
or
sti
xchg
movsl
repnz
pop
and
cld
jnp
jp
or
add
xchg
add
lods
mov
jmp
test
push
push
repnz
shl
inc
and
cmpsl
jo
cltd
push
popf
push
sub
insb
fisttpll
cmp
outsb
mov
pop
test
dec
sbb
fst
stos
add
sbb
fisubl
ljmp
or
outsl
mov
and
mov
inc
push
mov
sub
sub
mov
lock
loopne
stc
das
sti
lea
mov
popa
sub
insl
and
xchg
ja
or
sbb
mov
dec
aad
clc
adc
push
mov
sub
test
stc
cmpb
sub
fwait
lcall
pushf
jo
sbbb
stc
or
cmpl
mov
fs
loopne
xor
jp
push
inc
mov
push
sbb
push
jb
sbb
pop
adc
jns
cmp
lods
mov
pop
orb
les
je
inc
lods
scas
fistpl
xorb
push
and
clc
mulb
dec
idivl
cmp
push
push
sti
push
pushf
and
mov
or
data16
mov
ds
jmp
ljmp
jg
cmp
pop
mov
mov
and
jp
xor
mov
fldenv
fstpt
push
lods
bound
mov
add
call
arpl
sbb
mov
xchg
lods
les
ret
loope
add
dec
hlt
ljmp
vcvtpd2dqy
aad
cmp
jecxz
push
mov
mov
xor
lock
inc
and
rcl
std
das
mov
dec
mov
dec
mov
pushf
outsl
and
das
sub
and
or
ret
fcomp
outsb
or
sbb
xor
int3
push
nop
int
xchg
add
or
jp
dec
movsb
ljmp
repnz
jg
les
or
popf
inc
inc
cmp
add
adc
jbe,pt
jo
push
or
enter
jg
mov
and
mov
and
and
ret
test
insl
sti
jg
dec
js
xchg
in
xchg
and
xchg
mov
scas
jg
jnp
add
jnp
in
iret
adc
dec
call
dec
mov
test
dec
or
lahf
orl
or
mov
dec
push
mov
lahf
dec
test
test
aaa
jbe
loopne
fwait
pop
call
pop
psadbw
xchg
sub
add
and
loope
adc
push
icebp
lds
pop
jne
dec
je
std
cmp
adc
sbb
xor
and
dec
scas
xchg
test
xchg
jb
sbb
shl
lret
int3
aaa
or
ss
test
outsl
arpl
sbb
fbstp
outsb
inc
cmc
or
daa
stos
movsb
push
in
xor
push
orl
ljmp
mov
outsb
cmp
sti
loopne
clc
int3
inc
mov
and
loope
sub
loope
jae
ffree
sarl
jb
pop
loop
jns
and
fistps
stc
out
and
cmpsb
outsl
std
rorb
xor
add
fdivs
add
in
or
aaa
sbb
and
sub
push
xor
pop
je
pop
push
sbb
dec
loop
and
stos
repnz
ret
lret
cmc
jmp
jbe
push
xchg
addr16
mov
mov
adc
xchg
sbb
dec
dec
aaa
inc
cmc
ret
pop
xor
pushl
outsb
fcmovnbe
inc
xchg
pop
jne
sbb
xchg
repnz
cli
push
out
dec
loope
push
fldt
cmc
sbb
jnp
aad
cmp
cwtl
lock
arpl
jae
cld
dec
pop
cmp
mov
xor
jbe
mov
cmpsb
test
cs
test
pushf
in
mov
pusha
repnz
dec
rol
dec
mov
push
mov
jmpw
mov
hlt
or
or
mov
sbb
jmp
std
mov
and
sbb
test
mov
dec
icebp
sbb
fnstsw
stos
test
loope
xchg
dec
or
adc
xchg
test
inc
std
pop
adc
jb
pop
adc
jb
mov
dec
mov
fwait
mov
add
xchg
into
popa
mov
popa
ds
cmpb
scas
and
ret
dec
addb
nop
fists
mov
scas
imul
sub
adc
adc
or
pop
fnstenv
mov
xor
xchg
insb
cmp
out
sbb
adc
lock
xchg
enter
outsl
mov
inc
inc
out
pop
lock
fwait
pop
fdivl
pop
mov
in
mov
xor
ret
out
add
ljmp
sahf
loopne
sbb
cmpsb
je
out
lss
and
gs
inc
test
ss
cld
ret
push
push
mov
sbb
cmp
hlt
or
aad
outsb
insl
mov
test
xchg
jno
xchg
in
xor
imul
popf
dec
or
mov
mov
test
or
notb
sahf
mov
sub
movb
push
arpl
xor
jb
icebp
int
js
in
pop
push
das
cwtl
or
push
jmp
xlat
arpl
popa
mov
cld
sub
xor
fiadds
imul
xor
or
stos
add
sbb
dec
and
in
cmpsl
mov
inc
loopne
je
nop
mov
mov
add
xor
mov
or
flds
leave
jae
and
aas
and
data16
addl
pop
imul
fbld
jne
adc
outsb
call
xor
iret
xchg
mov
les
fimuls
mov
and
aaa
ss
mov
pop
adcl
sbb
mov
dec
inc
fcomip
mov
mov
stc
stos
lds
std
insl
incl
and
mov
add
scas
mov
or
sub
inc
call
lock
dec
cmp
pop
pusha
imul
push
add
mov
mov
sub
xchg
das
testb
movsl
fwait
aas
cmp
out
movsl
mov
jg
adcb
loopne
sub
jg
xchg
mov
clts
adc
jp
mov
lock
adc
scas
or
mov
mov
pop
cltd
aad
cwtl
jb
xchg
dec
test
je
mov
adc
xchg
mov
mov
push
pop
xchg
cmc
cmpb
inc
std
cld
add
sbb
int
sub
repz
aam
ret
add
scas
inc
mov
add
flds
lcall
icebp
mov
sbb
cs
cs
jnp
fdivs
mulb
cld
int3
push
insb
sbb
loopne
iret
cmp
subl
std
jp
sub
mov
aad
mov
call
jbe
shrb
aam
mov
mov
js
dec
add
mov
inc
test
sbb
inc
cli
loop
jle
adc
repnz
iret
call
fadds
xchg
mov
cld
ljmp
mov
in
and
push
adcl
pop
push
xchg
out
or
imul
sahf
sub
test
pop
daa
sub
jnp,pn
jp
lcall
or
and
mov
int3
das
movl
sbb
lea
adc
xchg
movsb
into
orb
and
push
fwait
or
sub
lock
outsl
mov
lcall
jp
sbbb
in
fucomip
add
mov
dec
add
and
adc
fnstsw
jmp
and
xchg
cmp
or
aad
mov
mov
or
push
push
es
sbb
scas
adc
in
inc
call
divl
mov
sub
lret
ret
outsl
cmp
aaa
shl
pusha
or
dec
fistl
aad
icebp
adc
push
decl
clc
mov
xor
cmp
mov
imul
mov
jo
aam
cmp
push
xchg
cmp
inc
nop
inc
sub
and
call
mov
or
inc
adc
or
pop
adc
push
hlt
dec
shl
xor
sub
jnp
sub
adc
outsl
mov
xchg
pop
in
adc
clc
or
xor
push
cld
mov
sbb
sub
iret
daa
js
rorb
movsb
dec
and
cld
ret
lret
lahf
loop
pop
and
fwait
sub
lds
je
xchg
pop
push
mov
add
push
dec
clc
shrb
mov
xlat
pop
mov
call
add
jecxz
jno
ret
and
push
xchg
or
jl
jb
addl
add
or
outsl
cmp
push
es
xor
or
inc
or
and
sbb
js
push
sahf
sub
inc
sbb
mov
orl
inc
outsb
ret
add
sub
pushl
pop
mov
sbb
sbb
mov
or
mov
cmpsb
ret
test
incl
in
and
jne
inc
out
pop
dec
xor
data16
jne
or
test
nop
mov
ja
pop
jmp
dec
lods
insl
aam
xchg
xchg
xor
mov
cli
mov
imul
cltd
loope
mov
inc
push
in
cmp
insl
sti
jg
jmp
enter
push
push
into
mov
xchg
push
movsl
loop
sub
sub
cmpsb
sub
mov
xor
add
lods
mov
sti
cli
mov
out
push
push
mov
lcall
addb
adc
ret
push
icebp
andb
or
mov
ret
pushf
inc
insb
sbb
outsl
cmpsb
push
jge
inc
and
inc
push
adc
loop
mov
cltd
dec
sbbb
adc
sbb
push
push
mov
repnz
adc
xor
jne
insl
inc
popa
mov
jbe
inc
mov
data16
dec
add
pop
pop
movsb
lea
cmp
nop
jno
mov
or
mov
das
lock
test
lret
add
push
in
cld
cmp
in
adcb
inc
adc
cld
push
and
fs
cltd
or
scas
ds
push
pop
jno
lock
ja
pop
fsubl
jbe
scas
and
fsubrs
push
std
push
mov
or
xlat
xchg
test
jo
cld
cs
fsin
inc
mov
cld
adc
loope
pop
pop
add
xchg
arpl
fwait
jno,pt
movsl
std
lds
pop
cmc
jl
popf
jno
pop
push
stos
mov
mov
add
sbb
das
add
popf
loopne
inc
adc
mov
add
xlat
pop
mov
sub
lods
cmpl
cmp
lahf
fsubrs
lret
fwait
in
dec
mov
cmp
add
push
jnp
scas
outsb
jge
ds
xchg
outsl
jl
and
push
cld
pop
out
xchg
xlat
lds
stos
loope
jp
cmpb
pusha
jb
xchg
lods
movsl
cmp
cmp
fcmovne
das
dec
and
mov
orb
and
icebp
aas
add
push
xchg
mov
xchg
not
mov
pop
inc
scas
inc
dec
or
imul
nop
push
adc
pop
into
sti
adc
dec
and
and
sti
inc
das
mov
cmp
xor
sbb
scas
sbb
and
pop
mov
cmpsb
mov
add
aas
inc
mov
mov
add
pusha
xor
mov
lock
loope
inc
cmp
dec
xchg
inc
int3
mov
cmp
push
cs
cmp
mov
pop
jl
lock
pop
push
scas
sbb
subl
mov
xchg
lds
scas
out
or
inc
jge
dec
mov
sbb
lock
sub
test
push
shr
sub
pop
loope
xchg
xor
cmp
mulb
xchg
ja
rcll
lds
sbb
or
stc
andb
jbe
clc
pushl
imul
shlb
mov
mov
push
sub
out
inc
int
jle
sbb
pop
loopne
arpl
adc
mov
cmpsl
xchg
ds
sbb
fsts
shll
sbbb
cwtl
shrb
es
jle
push
js
jp
sbb
fidivrl
fsubp
addr16
negb
jne
ss
outsb
or
dec
xchg
icebp
sar
inc
pusha
sbb
pop
ror
mov
std
mov
adc
xlat
enter
mov
jmp
pop
js
mov
cwtl
cld
pop
xor
imul
xchg
dec
fcmovu
mov
mov
push
subl
ret
push
mov
mov
xor
add
inc
mov
and
in
clc
lea
mov
dec
add
sub
mov
or
inc
mov
mov
or
icebp
and
pusha
stos
out
mov
add
adc
jge
mov
psubw
push
push
xchg
dec
jnp
lock
xchg
cmp
push
cs
jne
pop
xlat
inc
nop
or
jae
sub
arpl
mov
iret
push
popf
xchg
inc
aad
push
das
test
sub
dec
add
pushl
inc
or
mov
pusha
inc
mov
mov
test
add
push
cli
nop
lret
mov
mov
test
cwtl
sarb
cs
shlb
push
mov
cli
sti
ret
sbb
sub
movsl
shll
leave
lock
loop
cmp
xchg
push
mov
inc
push
add
pop
imul
ret
push
pop
push
mov
or
out
icebp
and
cwtl
lcall
imulb
imul
cmp
xor
loope
clc
mov
and
mov
and
out
fptan
ret
loop
dec
rolb
hlt
addr16
mov
cwtl
cltd
lods
fadd
movsl
repz
movsb
mov
scas
and
popa
xchg
mov
pushf
mov
xor
inc
insl
inc
ljmp
hlt
push
mov
pusha
popa
xchg
xchg
les
jne
jnp
clc
adc
int
push
outsl
out
clc
cmp
xchg
jne
aas
dec
add
jbe
gs
mov
push
rorb
ss
test
add
add
daa
sub
push
and
xchg
aam
aaa
mov
iret
jo
imul
stos
fmuls
leave
out
jb
cmp
lcall
pop
xchg
mov
cmp
fstl
fst
jg
mov
adc
mov
mov
sub
mov
out
pop
pop
roll
sbb
fidivrs
xchg
ret
or
xchg
or
xchg
xor
notb
addr16
xchg
mov
or
push
addr16
push
pop
dec
les
test
or
lret
and
push
fistpll
push
pusha
aas
lds
clc
add
shll
push
push
btl
jge
inc
mov
test
jg
push
fwait
push
inc
movsb
sub
pop
jl
cmp
inc
add
push
jp
push
mov
push
jl
mov
mov
cmp
sub
adc
adc
aad
mov
and
xchg
rorb
push
xor
inc
jl
add
scas
add
loop
pusha
pop
add
test
addb
cltd
and
popf
adc
sahf
out
jg
imul
mov
cltd
lcall
lock
dec
lea
jl
xor
icebp
pop
and
cmp
es
cmp
mov
or
cmp
jg
mov
jge
jl
mov
insl
add
add
mov
cmp
pop
das
inc
stc
out
pop
adc
je
mov
gs
negl
mov
imul
lods
aad
cld
lret
in
push
rorl
idivl
stos
outsb
les
in
push
mov
das
scas
xchg
repnz
std
jmp
faddl
hlt
inc
sbbl
je
das
mov
inc
fwait
das
repnz
cli
push
mov
aaa
mov
rorl
test
sbbl
or
inc
imul
sub
dec
fists
mov
sti
mov
lahf
mov
call
mov
push
jmp
sahf
rol
test
aas
dec
mov
jge
inc
mov
cld
int
xchg
and
lock
inc
aam
aaa
dec
cmpsl
nop
mul
jg
xor
pop
and
add
xor
fdivrs
or
mov
fdiv
mov
sub
sub
imulb
dec
int
push
mov
movsb
nop
popa
jmp
nop
pop
inc
ret
sbb
out
sub
icebp
mov
das
xlat
loopne
dec
test
fwait
push
es
jmp
hlt
je
xchg
fcomip
in
shll
pop
sbb
add
mov
cmp
into
faddl
xchg
xor
xor
sub
decb
int3
fwait
jecxz
in
inc
or
inc
mov
pop
clc
xor
mov
pop
push
push
les
sub
jl
cmpsb
push
sbb
mov
mov
inc
mov
imul
test
adc
sahf
dec
mov
testb
sub
jmp
loopne
inc
and
jne
cli
outsl
xor
xchg
inc
or
test
aad
call
jmp
lea
sbb
mov
or
into
lods
add
mov
pop
mov
nop
jge
or
mov
je
xlat
mov
adc
bound
fiadds
shrb
inc
lock
cmp
adc
js
xchg
cmp
movsl
inc
rcrb
outsl
adc
dec
push
out
rcr
dec
and
outsl
mov
call
add
stos
and
not
dec
xchg
decb
and
jne
jl
rolb
dec
repz
int3
add
xchg
push
jbe
lock
test
mov
mov
in
xchg
mov
notl
add
stos
fwait
push
stc
xchg
stos
ss
push
xchg
mov
push
int
xchg
repnz
adc
add
mov
aaa
push
add
mov
xlat
dec
ret
stos
loop
test
push
xlat
pop
mov
xor
fisttpl
pusha
or
cmc
jge
mov
adc
adc
cmp
mov
roll
adc
test
push
imul
enter
loopne
inc
pop
std
pop
xor
aaa
shrl
push
mov
dec
movsl
in
or
jmp
cmp
outsb
and
fcmovnbe
mov
bound
fisttpl
pop
cmp
lods
sub
jnp
aaa
mov
fildl
lods
loope
add
mov
mov
mov
test
and
les
cmp
push
push
and
addr16
js
lret
inc
lret
xchg
pop
mov
prefetch
repz
lret
inc
mov
addl
ss
jnp
test
lea
adc
or
int3
sbb
push
push
lret
cmp
cmp
xorb
jae
lods
daa
sub
jb
sub
out
sub
mov
orl
or
jp
lret
sbb
ss
and
adc
push
sub
ret
inc
dec
scas
test
add
ja
or
mov
loope
int
jle
jge
mov
int3
mov
pop
addl
mov
loopne
cmp
sbb
rcrb
hlt
movsb
inc
icebp
scas
or
sbbl
outsl
stc
movsb
sti
inc
xor
in
push
out
pop
je
cmp
addr16
pop
lahf
jb
out
pop
mov
dec
loope
adc
jmp
inc
jp
push
ret
loop
xchg
into
mov
add
call
pop
insl
add
ss
outsl
lcall
popf
add
add
rcll
cli
decl
push
mov
push
xor
jnp
or
dec
mov
jo
pusha
or
mov
aam
ds
or
sbb
jo
push
les
dec
std
lods
movsl
cmp
aaa
push
pusha
xor
inc
sbb
dec
xchg
out
aad
ret
inc
stc
xor
add
stc
popf
loop
inc
mov
inc
pop
inc
or
mov
jmp
ja
sub
sbb
jne
cmp
mov
out
stos
sbb
fiadds
xchg
add
icebp
pextrw
aas
or
cmp
mov
fiaddl
xchg
lahf
inc
test
clc
sub
sbb
orb
mov
push
and
push
enter
lock
div
push
lds
mov
xor
mov
icebp
jle
hlt
push
mov
adc
xor
in
lcall
cpuid
and
xor
fsts
lods
lcall
or
push
fstp
outsb
decl
cmc
xor
lods
adc
mov
xor
das
pushf
fcoms
rclb
lahf
sbbb
jg
jg
cmp
in
repz
ss
sbb
jmp
int3
in
sti
inc
sbb
pusha
lock
jmp
in
or
ret
into
leave
lret
mov
pop
xchg
mov
push
hlt
mov
xlat
add
and
sbb
lods
push
xor
in
jo
aad
sub
dec
and
call
inc
jg
lock
ret
adc
loop
mov
add
les
mov
jle
data16
in
fs
xorb
pop
lds
jo
mov
push
cmpsl
inc
repz
cld
jb
cmpsb
repnz
fmuls
mov
push
pushf
lds
inc
xor
cld
pop
dec
icebp
arpl
or
push
push
ss
mov
jmp
pop
enter
lcall
push
clc
push
sub
rcrb
rcll
push
popa
adc
add
adc
push
jp
mov
cmpsb
mov
bound
scas
add
jp
mov
jmp
pushl
cld
add
inc
sti
xorb
aaa
inc
fbld
or
aam
mov
loopne
je
stc
les
xchg
jg
sbb
mov
mov
adc
sub
xchg
popf
xchg
jno
cld
call
xor
cltd
int3
push
xchg
stc
fmuls
push
int
jns
aad
in
inc
xchg
mov
jns
fldl
sti
jbe
cmp
sbb
outsl
mov
in
data16
or
sbb
jecxz
add
mov
adcb
das
ret
insl
data16
jp
push
cmp
lcall
imulb
pushf
jp
fwait
cli
push
inc
shrl
jns
call
gs
outsb
push
movsb
aam
xchg
mov
add
dec
dec
xor
bound
enter
inc
hlt
mov
push
jae
ds
add
adc
pop
or
lods
ja
pop
movsl
dec
test
pop
stos
cmp
pop
loopne
mov
js
repz
ds
sbb
lds
int
push
push
popa
js
nop
cltd
cld
push
shll
xchg
das
lock
dec
mov
sbbl
lret
dec
jg
or
dec
sbb
call
inc
push
xor
mov
pop
aaa
fidivs
jbe
stos
xchg
bound
sarb
clc
lea
repnz
push
mov
mov
cmp
sub
imul
push
mov
int
adc
fmuls
pop
pop
clc
ret
and
push
sub
mov
into
aad
xchg
test
pop
push
mov
cmp
clc
fadds
shrb
cmp
out
stos
sbbl
mov
into
loop
jecxz
cwtl
lds
adc
ss
inc
test
sub
test
test
inc
in
out
push
outsl
mov
sbb
dec
mov
sti
adc
mov
push
mov
shll
fidivrl
sub
pop
mov
mov
ja
mov
adc
or
clc
jmp
push
pusha
add
enter
mov
aad
xor
in
mov
scas
xchg
sub
pop
and
mov
mov
jg
loopne
loop
cmpl
cmpsb
pop
sub
out
push
popf
popaw
sub
cwtl
xchg
fs
cmp
push
push
stc
repnz
inc
testb
cli
fmuls
out
popl
and
mov
fimull
iret
aad
jle
jg
sub
pop
loopne
or
add
mov
pop
mov
mov
dec
stos
pop
loop
mov
push
or
stos
jmp
lock
aas
xchg
add
lret
in
sbb
test
lods
jg
inc
jo
cmp
fwait
cmpsb
mov
adcl
mov
dec
sbb
rolb
lret
iret
outsl
hlt
pop
flds
mov
mov
pop
mov
mov
pop
incb
or
test
pushf
mov
mov
mov
jo
dec
xchg
sbb
dec
stos
scas
dec
aas
inc
lds
cmp
or
push
mov
lds
outsb
insl
fs
mov
xchg
dec
adc
int
ret
jns
adc
fiadds
fsubs
je
jo
shr
inc
jae
push
bound
mov
inc
jae
sbb
xlat
xchg
or
jb
add
clc
sbb
fistpl
andl
outsl
add
jbe
xor
pop
push
loopne
mov
pop
cmp
fcoms
inc
inc
ja
sbb
cmp
popf
add
sbb
add
mov
cmp
inc
mov
loopne
test
in
fsubr
in
sbb
and
loopne
ret
mov
dec
in
add
out
mov
sbb
jbe
enter
or
xchg
call
icebp
pop
xchg
cld
in
and
mov
fildl
add
jno
or
or
rcrb
mov
out
pop
inc
mov
gs
push
xor
shlb
mov
ljmp
push
or
cs
test
rolb
add
fildl
push
add
faddl
jno
int
cmp
pop
clc
jmp
js
adcl
jns
or
or
rcll
sar
push
push
incl
inc
xchg
pushf
xor
imul
bound
addb
loop
mov
in
out
loop
pushf
inc
popf
iret
jb
pop
sub
mov
out
mov
aad
bound
mov
bnd
sub
fsub
or
and
mov
lods
lds
test
pop
stos
sub
or
mov
pushf
es
int
scas
dec
mov
sub
jl
outsl
mov
aaa
cmp
jb
inc
adc
mov
inc
sti
mulb
subl
iret
sbb
dec
cmp
adc
int
insl
dec
mov
int3
call
test
pop
in
enter
push
jne
or
andl
ljmp
ljmp
jmp
jecxz
pop
cli
inc
fimuls
movsb
adc
hlt
loope
ss
cmp
dec
rcll
jae
pop
loopne
add
test
fs
mov
into
inc
sti
ss
mov
adc
test
in
adc
cld
mov
xchg
add
xchg
repnz
shll
lods
mov
pop
or
fcoml
mov
insl
and
arpl
pop
jp
mov
xor
dec
xchg
int
imul
sub
dec
and
push
aam
jns
mov
cli
inc
and
clc
push
aam
push
cmpsb
insl
or
mov
jns
add
pop
pop
sub
imulb
lods
jp
and
repnz
push
sar
jp
push
sub
ffreep
jbe
mov
insl
add
ljmp
iret
and
lock
lret
xchg
xchg
bound
hlt
add
movsl
pop
jae
push
adc
ss
add
in
xchg
lcall
mov
lods
leave
fwait
mov
or
in
cli
xchg
popa
jmp
sbb
jb
mov
test
sarl
jge
lods
xorl
stos
dec
push
pop
loop
je
adc
or
cmp
aam
push
push
std
xchg
mov
or
cli
mov
sub
je
or
jmp
adc
or
mov
ljmp
out
test
mov
adc
ljmp
out
dec
inc
dec
imul
ficomps
icebp
filds
lret
jns
and
sub
adc
sbb
mov
data16
push
lock
mov
aas
cmp
mov
sysenter
dec
xor
xor
cmp
in
add
js
or
jne
mov
pop
mov
push
mov
test
outsb
mov
in
jecxz
xor
inc
aam
pop
pushf
rcl
cmpsl
dec
sbb
lea
lret
in
inc
push
lds
push
aam
sub
or
movsb
sbb
xchg
lods
mov
lods
push
sbb
clc
insl
jmp
inc
popa
fstps
fs
jle
inc
pop
sbb
js
jae
sub
das
std
and
mov
sbb
xchg
aad
mov
fmuls
inc
cld
iret
xchg
shrl
adcl
loop
sbb
jae
stos
mov
adc
push
push
xorb
xchg
fdiv
int3
lds
jne
push
cmp
fistpl
fsubrs
xchg
inc
mov
sub
shlb
dec
xor
push
pop
adc
inc
dec
jle
mov
sarb
mov
andl
aad
rcrl
adc
call
cmp
mov
push
push
fisubrl
xor
mov
push
add
insb
loopne
adc
es
pop
jbe
fcomip
int
aam
fadds
outsb
orb
mov
inc
mov
sbb
int3
dec
in
leave
xlat
fistpl
aaa
andb
xor
nop
mov
call
cs
frstpm(287
in
pop
fsubs
lock
mov
pop
mov
scas
push
lods
and
xor
loop
aad
lret
fildl
xchg
mov
inc
adc
mov
cli
mov
loope
jnp
ljmp
je
inc
adc
imul
mov
jle
sbb
pop
and
push
fldenv
dec
mov
lea
pop
lods
faddl
jg
rorl
push
or
jbe
jg
adc
mov
cmp
pusha
cli
movsl
mov
insb
xor
lcall
sbb
jl
jb
js
mov
xor
push
add
sbb
adc
mov
push
cmp
leave
ret
mov
jbe
outsl
in
xor
loop
loop
mov
sub
pop
sbb
ljmp
push
sbb
sahf
ja
push
xor
cmpsl
mov
in
lods
jge
dec
dec
int3
inc
lret
inc
mov
das
inc
rcr
push
mov
pop
pop
jno
subl
outsl
mov
lahf
lahf
popa
mov
cmp
test
popf
cli
mov
insl
mov
testl
notb
cmp
or
and
fisttps
mov
lea
sub
sub
and
adc
or
mov
jnp
jns
or
push
stc
mov
aam
jg
and
lock
sti
push
cld
push
lret
clc
add
cld
aad
stos
out
clc
addb
cmc
rcrl
add
fistps
pop
mov
adc
das
stos
sbb
sbb
fmuls
pop
mov
push
outsb
mov
mov
mov
fsubr
or
xor
fldt
mov
sbb
ret
jmp
xchg
cmp
jmp
dec
std
jg
stos
inc
adc
mull
xor
xor
rclb
test
mov
xchg
fistpll
lcall
jp
or
les
push
jno
sub
cmp
lock
adc
xor
int
sbb
imul
aad
mov
daa
mov
jns
scas
arpl
jmp
rcrl
rcl
cltd
push
mov
push
dec
sbb
or
xchg
jbe
negb
jle
pusha
mov
ret
or
and
aam
cmp
nop
or
popf
add
mov
push
mov
aaa
popa
arpl
pop
imul
popf
leave
dec
in
sti
add
cmp
pop
test
xlat
mov
or
lds
scas
or
cmc
outsl
pop
add
xor
or
or
les
cmpsl
call
xchg
sbb
dec
cmpsl
loopne
sbb
push
inc
lcall
push
test
mov
push
shrb
je
xchg
add
bound
rol
stos
dec
rcll
pop
adcl
orb
mov
adc
outsl
mov
dec
jo
cmp
push
repz
xor
clc
jmp
xor
inc
outsb
dec
xor
sbb
lea
sbb
mov
in
jae
inc
xlat
ret
pop
inc
stos
data16
adc
clc
or
or
lahf
mov
xchg
or
xor
shrb
cmp
mov
aaa
jl
outsb
fidivl
in
pop
xchg
in
add
addb
ss
mov
or
test
dec
or
or
jg
and
mov
imull
rol
out
sbb
lea
ljmp
hlt
rorl
rorl
push
inc
mov
into
pusha
std
add
xchg
push
imul
hlt
outsl
xchg
push
cwtl
dec
push
lea
dec
or
xor
pop
je
mov
test
lret
loope
add
mov
aad
lret
jb
fdivr
sbb
xchg
je
cwtl
inc
inc
mov
and
ret
sub
testb
inc
mov
dec
pop
sub
and
xchg
xchg
adc
inc
pusha
xchg
stos
lds
mov
je
xchg
scas
mov
mov
mov
mov
xchg
or
aad
xor
sbb
int
test
xchg
jecxz
test
inc
mov
adc
es
or
and
push
pop
dec
pop
push
aaa
and
mov
adc
sub
mov
movsb
hlt
leave
mov
or
decl
pop
or
insb
shll
dec
push
pop
xchg
or
loop
push
ljmp
push
out
add
inc
xchg
loopne
fnstenv
movsb
gs
pop
mov
cmpsb
sub
pop
xor
leave
xor
dec
aam
xchg
aas
insb
pop
mov
orl
jl
icebp
sub
inc
cmc
lahf
outsb
jp
icebp
add
int3
or
sbb
ret
cmp
adc
mov
adc
call
jle
sbb
fnsave
and
add
sub
frstor
repz
push
pop
xor
jg
add
mov
jno
inc
lret
pop
outsl
push
lods
orl
push
inc
add
lds
dec
popa
mov
xchg
lcall
dec
mov
icebp
add
mov
lock
dec
or
std
addr16
mov
scas
nop
push
loope
shl
ja
jo
push
je
stos
pop
push
dec
sbb
jae
pop
pop
stos
sub
jo
pop
add
push
xor
inc
cli
or
mov
fildll
pop
sti
inc
shrl
xlat
dec
pusha
xchg
mov
mov
outsl
cmp
cltd
shr
add
popa
and
pop
push
out
adc
mov
ds
sbb
imul
data16
xchg
adc
fidivrl
insl
loopne
fdivl
dec
pop
pcmpgtw
jecxz
cmp
imul
popa
out
adc
inc
fisttpll
jne
sahf
pop
je
lret
lock
leave
shr
push
adc
mov
xchg
cmp
and
jecxz
adc
aam
cli
inc
pusha
fs
cmp
cmp
inc
fwait
jnp
and
adc
mov
xchg
test
jnp
cld
cmpsl
divl
or
pop
cltd
sub
mov
enter
outsl
rcrb
sbb
push
mov
call
cmp
xlat
mov
test
inc
dec
xchg
repnz
outsl
xor
and
jg
add
add
fisubrs
test
outsb
paddq
ljmp
popf
pop
out
cmp
fs
js
stos
fisubrl
xorl
into
les
mov
jmp
push
mov
in
call
inc
out
push
aas
daa
gs
mov
imul
movsb
shll
dec
je
jle
mov
lods
jl
and
jl
mov
lock
xchg
out
sbb
fistpl
leave
dec
loopne
sub
sub
mov
jmp
arpl
add
push
mov
imul
insl
outsb
or
or
mov
out
push
dec
jno
fnstenv
lea
and
clc
leave
fsubl
out
push
pop
sub
and
jmp
push
in
scas
mov
pop
dec
mov
bound
mov
and
int
mov
sub
rcrb
push
xchg
dec
xor
xor
mov
mov
pop
push
cmp
je
mov
sub
loope
std
jo
stos
mov
inc
cmp
js
sub
scas
fldl
fcompl
roll
insb
cld
lods
pop
add
fs
mov
or
loop
fdivrl
cs
mov
adc
movsl
mov
add
xchg
mov
pop
or
cmc
mov
mov
mov
jbe
aas
aaa
sahf
sbb
adc
cs
aam
fildl
pop
adc
lods
and
push
cmpb
jbe
mov
xor
pop
mov
dec
xor
pop
adc
les
xchg
ficomps
cs
add
or
das
stc
pop
or
je
mov
notb
adc
fisttps
lret
inc
fadd
int
ret
insl
mov
dec
inc
push
mov
or
xchg
push
jl
cmc
and
sbb
rorb
fistpll
pusha
das
sbb
cmp
inc
in
dec
fdivrs
js
cmp
mov
sbb
pop
sahf
jmp
movb
pop
daa
movl
xchg
test
mov
push
cld
pushl
ret
and
lret
cmp
ss
shl
jne
xchg
inc
sbb
std
test
insl
dec
xorb
push
sub
pop
lret
sub
or
or
pusha
ss
jmp
jle
xchg
hlt
sbb
mov
push
adc
xor
popf
aaa
dec
in
dec
lock
inc
pop
outsb
mov
popf
xchg
test
xor
ficompl
mov
imul
es
insl
insl
leave
cmpsb
sarl
inc
push
pop
arpl
in
sbb
outsl
mov
cld
xchg
pop
rorb
lock
cltd
repnz
add
dec
inc
inc
mov
jno
mov
xlat
lret
jns
adc
mov
mov
outsl
std
and
test
inc
dec
pop
nop
and
fdivrs
xchg
jp
adc
inc
xor
xchg
or
test
daa
hlt
mov
mov
mov
sbb
xor
decb
out
ret
xor
mov
dec
test
push
ss
xchg
sbb
xchg
loopne
cs
mov
push
cmc
fwait
mov
cmp
lret
mov
pusha
call
scas
lock
add
inc
test
js
inc
cmp
push
pop
and
cld
mov
adc
jp
leave
test
out
fimull
pop
sub
or
jns
mov
repz
fisttpl
inc
inc
mov
inc
mov
std
fdivl
jge
iret
push
and
jo
fists
and
jae
sub
mov
xor
addr16
push
mov
pop
sbb
xchg
mov
mov
imul
pop
sub
mov
addr16
mov
stos
ret
mov
out
aam
test
rcrb
mov
jmp
test
inc
inc
outsl
mov
cmp
pop
jge
stos
lods
roll
inc
sarl
pusha
dec
cmp
pop
out
call
sbbl
push
jns
push
xchg
pop
mov
jnp
mov
pop
sbb
pop
scas
int
cmp
orb
add
sub
mov
cwtl
mov
ficoms
pop
dec
push
pop
cld
jg
ss
and
sti
scas
mov
lods
xor
mov
jne
pop
std
pop
and
adc
sub
cmp
sub
ljmp
fdivs
lods
sbb
out
ret
addb
hlt
iret
dec
or
sub
mov
and
mov
stos
dec
lret
sub
sbb
pop
add
sub
mov
cmp
sbb
sti
fistpll
insb
fs
leave
rol
in
fwait
push
es
jno
cmp
or
push
mov
cmpsb
jle
aaa
fiadds
in
and
idiv
into
cwtl
lock
sbb
daa
jae
call
imul
test
xchg
mov
aad
adc
sub
idivb
mov
and
mov
cld
pop
mov
push
sub
cld
arpl
out
into
ljmp
aaa
jle
ret
sarl
pop
xchg
je
cs
loop
insl
outsl
push
adc
in
loop
and
mov
jb
dec
leave
or
push
fcoms
arpl
xor
je
test
mov
pop
call
mov
and
lahf
sub
inc
addr16
call
push
dec
and
add
xlat
push
mov
sbb
clc
les
adc
sbb
movsb
cmp
and
scas
repnz
aaa
icebp
decl
popa
jno
sub
ror
lea
xor
outsl
movsl
ret
scas
xchg
sbb
or
adc
sti
insl
mov
adcb
xchg
div
jb
movsl
repz
sbb
sub
xchg
xchg
cmp
pop
lock
xor
test
jp
lea
repnz
push
and
scas
mov
loopne
or
xchg
push
add
stos
sub
pop
pop
loop
outsl
sub
out
sbb
dec
fs
pop
push
jo
add
popf
clc
lock
or
mov
aam
adc
adcl
test
and
insb
push
dec
dec
mov
das
icebp
push
mov
lods
mov
scas
mov
lock
add
inc
adcb
add
xchg
xchg
loop
xchg
loop
outsb
push
sbb
dec
int
inc
jl
je
sbb
pop
mov
and
or
adc
and
dec
call
dec
xchg
notb
mov
xchg
ret
mov
mov
js
or
jle
mov
or
movsl
push
aaa
mov
push
pop
fstpl
test
cmc
loopne
insb
xchg
jns
outsb
push
lahf
lds
out
mov
shlb
inc
bound
test
push
push
aam
pop
add
adcl
scas
mov
rcr
incb
out
icebp
or
idivl
cmp
lock
pop
ficoml
xor
in
mov
xchg
push
sbb
adc
lods
nop
mov
dec
lods
ss
je
outsl
addr16
stc
loope
and
fs
scas
aas
pop
insb
and
pop
cld
sub
leave
jb
xchg
jmp
sub
lea
cmp
ds
mov
popa
jmp
push
dec
je
adc
testb
into
or
push
insb
add
xlat
in
sub
sub
jae
push
xchg
lea
mov
inc
mov
popa
lahf
mov
jmp
xchg
icebp
or
add
ret
jl
fstps
scas
fbstp
test
xchg
hlt
aad
sub
rorl
popf
shlb
aaa
cmp
or
test
rcl
jmp
mov
xlat
dec
sahf
jo
std
pop
outsl
popa
inc
movsb
pop
aaa
or
lock
and
pop
scas
dec
pop
push
xchg
call
cmp
ljmp
xchg
inc
aaa
ss
adc
sbb
rcr
lret
je
inc
cs
or
xchg
jl
pop
add
inc
gs
add
iret
pusha
pusha
stos
leave
pop
xor
sbb
push
jl
lcall
pop
cmp
or
cmp
xor
gs
xchg
shll
push
fdiv
movsl
add
mov
je
lock
movsl
imul
gs
out
and
notb
jle
fsubrl
insb
pop
sub
cs
loop
and
mov
dec
add
in
or
lods
decb
psrad
and
ljmp
jg
cld
ffree
pop
and
inc
jge
movsl
lahf
xor
loopne
bound
loop
or
jg
pop
sub
add
pop
pusha
lds
vpsubusb
push
sub
test
dec
add
pop
lock
cmp
out
shrb
sub
lcall
pop
shlb
mov
addr16
push
pop
stc
fwait
mov
jp
dec
shr
test
dec
mov
pop
mov
in
idivb
cmp
add
dec
push
outsl
mov
mov
insb
mov
mov
stc
out
mov
bound
das
inc
movsb
mov
sbb
adc
dec
jae
pop
mov
aad
sub
filds
lea
sahf
jbe
into
mov
cwtl
sbb
je
xor
cmp
cmp
xor
lods
inc
pop
cld
add
push
or
jo
xor
test
das
add
add
push
dec
out
and
call
push
clc
fbld
inc
lds
inc
dec
xchg
add
add
cmp
stc
cmp
cmpsl
sbb
jbe
mov
mov
ljmp
dec
in
loopne
xlat
lods
jne
inc
aam
shr
or
mov
cld
adc
jg
repnz
inc
cmp
rolb
dec
mov
pop
loop
adc
loopne
stc
mov
add
and
and
outsl
xor
in
test
decl
sub
push
cmpsl
cmpsb
fistl
sbb
iret
mov
mov
stos
mov
out
nop
addb
mov
cmp
xchg
mov
sub
cmc
push
jnp
xchg
fstpt
shrb
sub
mov
cmp
xor
outsl
vpinsrw
out
fstl
xor
jl
xchg
ds
pop
push
sub
mov
xchg
in
xchg
je
xchg
ja
xor
jl
inc
jg
shr
push
std
or
sbb
adc
xchg
bswap
test
sbb
or
mov
push
push
or
dec
rorl
jbe
data16
aad
cltd
add
mov
jns
cmp
or
xchg
inc
sub
add
dec
roll
inc
bnd
mov
ja
mov
cli
and
mov
or
add
dec
scas
scas
mov
ss
jno
stos
outsl
mov
jecxz
push
addl
mov
adc
das
jl
cmc
fs
ficoms
and
push
imul
pmaxsw
add
mov
add
lods
shl
xchg
subb
insl
xor
gs
and
iret
adc
mov
adc
sahf
push
add
fistpll
sbb
icebp
loopne
jae
jae
lock
xchg
xor
arpl
in
inc
mov
and
decl
popf
or
mov
mov
or
addr16
hlt
out
xchg
add
fistps
repnz
mov
popf
inc
pop
lds
mov
pop
jo
mov
and
mov
test
mov
cmp
mov
mov
pop
inc
or
into
in
aaa
xchg
cmp
insb
lret
hlt
pop
cld
pusha
loope
icebp
dec
sub
into
or
push
mov
cmc
sbb
nop
sbb
icebp
out
mov
test
insb
pushf
inc
nop
es
jp
push
sbb
stos
pop
mov
or
and
adc
jmp
dec
mov
call
xor
gs
pop
popa
loop
mov
stos
call
sbbl
lret
and
mov
jb
outsb
scas
sub
push
mov
add
mov
sti
fbld
cmp
scas
push
mov
jle
push
loopne
ret
mov
sbb
mov
sub
push
test
push
add
dec
pushf
mov
sbb
sub
shrb
mov
out
arpl
icebp
xor
cmpb
andb
call
or
add
lcall
dec
add
imul
dec
push
fucomi
inc
mov
cmpsl
xor
or
js
sub
das
in
adcl
stc
or
cli
lods
inc
inc
test
adcb
xchg
insl
imul
mov
push
dec
lahf
xchg
sub
sub
lcall
xchg
pop
and
cltd
inc
push
repz
or
imul
cmp
mov
cmp
outsl
insb
aaa
lds
and
cmpl
inc
jg
in
cmovle
xchg
inc
call
xchg
pushf
and
mov
or
insl
push
pop
pop
loopne
ds
repz
loopne
inc
mov
xchg
jle
sti
add
adc
adc
sub
js
or
push
add
in
jle
arpl
adc
push
rclb
jmp
xchg
jl
daa
pop
cmp
mov
xor
es
cmp
imul
push
and
mov
xchg
shlb
push
push
pop
clc
fcoms
jl
pop
andl
push
pop
call
jbe
pop
aas
fidivs
ljmp
rorl
or
daa
mov
incl
jge
arpl
adc
adc
mov
fdivl
dec
test
xor
sub
in
or
out
pop
mov
or
movsl
icebp
cmpsl
dec
pusha
push
push
push
call
fwait
test
add
cmp
dec
xor
xchg
push
mov
ljmp
cmp
ja
mov
dec
andl
dec
aad
xor
pop
gs
and
pop
push
cmp
mov
fucomp
rcrl
xor
xchg
dec
add
stos
inc
or
sub
mov
jno
xor
fstpt
inc
inc
xchg
pop
or
icebp
mov
dec
mov
pop
jae
dec
mov
inc
push
jl
cmpb
push
je
out
push
mov
mov
mov
imul
inc
jno
pushf
push
dec
inc
data16
or
jne
pusha
test
add
insl
scas
lods
pop
sbb
xchg
inc
stos
fbld
jne
add
cmc
movsl
xor
inc
stc
and
cli
mov
push
inc
fucomp
clc
mov
lret
cmp
add
test
ror
lret
loope
xchg
shr
mov
not
inc
mov
xor
xchg
or
mov
and
ss
adc
test
xchg
inc
pusha
inc
xchg
push
xlat
xor
dec
or
mov
mov
call
add
loope
les
jns
mov
adc
scas
push
add
adc
pop
test
mov
andl
mov
mov
jbe
pop
je
sahf
pop
bound
out
sub
jae
xchg
popf
mov
orl
sbb
testb
mov
int3
icebp
sbb
enter
pop
popa
add
pop
add
mov
fimuls
leave
sbb
push
pop
mov
sbb
fcomps
rcrb
mov
shll
inc
test
loopne
mov
add
mov
lret
bnd
push
cmp
aam
jbe
movsl
add
adc
or
negb
incb
jnp
lcall
aam
push
stos
decl
enter
outsl
jg
pop
cmp
cmp
xchg
fnsave
add
inc
in
outsb
lret
gs
sti
sub
push
out
xor
inc
nop
xor
and
mov
or
push
or
aam
mov
and
out
xchg
daa
inc
dec
cmp
out
lret
inc
ja
xchg
shl
lock
sbb
cmpsb
adc
push
pop
jno
sbb
addb
jle
outsb
mov
popa
out
sbb
and
pop
sub
shrl
add
mov
loop
cli
mov
sbb
nop
jae
leave
sbb
in
out
mov
mov
test
add
aas
dec
mov
push
pop
aad
inc
push
scas
insl
lods
or
icebp
add
test
testb
mov
inc
int3
test
jmp
or
stos
rclb
inc
lahf
popa
xchg
mov
sbb
sub
aad
xchg
adc
nop
mov
fnstsw
jmp
bts
push
clc
stos
push
cmp
fdivs
loopne
mov
stos
xor
sub
out
and
xchg
lret
adc
add
sbb
stc
mov
jmp
test
in
cmp
sbb
int
les
ljmp
pop
xchg
pop
jp
xchg
insl
ret
stos
push
push
mov
call
jae
out
ljmp
lcall
daa
sbb
mov
popf
cmpsl
pop
adc
mov
cltd
xchg
sub
inc
pop
int
ret
add
sbb
mov
or
stos
xor
mov
and
dec
clc
outsb
mov
in
ret
aam
stos
xchg
popf
jbe
push
dec
imul
pop
sbb
jg
shlb
repz
push
push
lea
ret
or
jo
sbb
loope
mov
and
cmpsb
push
jae
mov
dec
pop
pop
lret
mov
mov
lret
and
adcl
push
insb
mov
sub
mov
stc
lods
cli
sbb
push
flds
sbb
mov
inc
push
iret
pop
push
aas
inc
push
push
test
stos
ret
popa
add
mov
or
inc
aam
clc
fmull
and
stos
lret
daa
mov
insl
sbb
dec
notl
mov
int
push
adc
mov
jle
push
int
lahf
jns
dec
push
or
outsl
xor
fwait
int
dec
loop
out
mov
adc
fidivrl
addb
mov
push
jmp
add
jecxz
cmp
dec
adc
adc
add
jb
inc
mov
jo
loop
into
test
lcall
mov
dec
sub
adc
imul
add
mov
ljmp
pop
std
loopne
xchg
jg
dec
push
inc
xchg
sbb
mov
or
movsl
adc
xchg
decb
aam
cwtl
nop
sub
lret
daa
or
mov
addb
mov
stos
push
lods
test
mov
pusha
test
out
mov
push
jbe
fists
hlt
test
xrstor
sbbl
mov
movsb
pop
sbb
lcall
lcall
movsb
call
icebp
add
bndldx
aaa
test
jg
cmpsb
mov
mov
out
mov
adc
ret
xchg
js
xchg
cmp
dec
orb
push
lea
add
dec
jp
pop
lret
out
pusha
mov
addr16
sub
subb
ss
movsb
test
imul
adc
outsl
mov
inc
xchg
mov
jge
pop
arpl
mov
out
addb
test
movsl
jne
mov
scas
xor
je
loope
mov
fisttps
xchg
inc
cli
pand
mov
push
or
call
sti
ret
jmp
cmp
or
mov
or
xchg
add
inc
inc
insb
imul
repnz
repnz
adc
jbe
inc
inc
insl
jmp
cwtl
or
mov
push
test
jg
test
mov
stos
adcb
or
adc
loope
jle
inc
les
and
mov
mov
movsb
bswap
aas
aad
inc
aam
add
rorb
lea
jle
int
in
rcrl
testb
push
pop
inc
add
sbb
mov
gs
add
jb
stc
inc
lock
fcoml
jmp
lret
stc
lock
or
xchg
sahf
repnz
jp
dec
adc
xlat
jge
mov
push
shrb
or
loopne
insb
jo
adc
jecxz
sub
fsts
push
cmp
insb
scas
lea
mov
sahf
adc
adc
pop
pop
icebp
fisttps
xchg
shrb
add
sub
sub
push
push
push
int3
fistpll
insl
outsl
mov
out
test
idivl
dec
and
decl
pop
adc
stos
xor
or
lret
mov
je
jne
mov
sbb
pop
pop
jge
daa
aaa
inc
mov
or
lods
xchg
popa
cld
sub
into
mov
adc
sub
or
add
fcomip
or
xchg
addr16
xor
ljmp
push
enter
adc
outsb
jb
cmpsb
lock
and
mov
add
cmc
mov
es
mov
lds
sbb
pop
loopne
dec
loopne
sub
jle
and
sbb
or
add
adc
inc
ds
dec
sbb
cmp
int
push
or
add
mov
pop
cli
adc
into
adc
xchg
loope
mov
sub
das
icebp
sbb
jl
add
shrb
adc
test
or
clc
jo
addb
pop
inc
dec
in
das
addl
xor
dec
fdivl
dec
push
inc
add
and
mov
adc
mov
sbb
add
and
clc
rorb
xor
adc
outsb
xor
imul
add
and
add
movsl
push
clc
inc
add
mov
sub
rcr
mov
add
rcl
cmpsb
daa
add
add
push
rclb
gs
roll
outsb
pop
inc
jmp
lahf
inc
mov
add
mov
add
test
loopne
dec
lds
lret
ret
xchg
cmp
sbb
pusha
pop
mov
inc
lret
push
ss
in
mov
stc
mov
ret
pusha
or
loopne
insl
lret
lahf
adc
and
push
add
push
jp
inc
jle
inc
int
mov
pop
cmp
xchg
neg
sbb
rcll
jb
dec
sbb
jno
pop
jnp,pn
push
cmp
push
inc
xor
xor
xor
arpl
lea
dec
outsb
xor
push
sub
cmp
sub
push
mov
mov
outsl
adc
loopne
xchg
xor
fists
or
outsl
cmpsl
in
andb
xor
test
mulb
pop
fildll
xchg
xor
mov
icebp
call
pop
adc
inc
fldl
jle
clc
mov
and
call
mov
jg
fsts
xchg
cmp
cmpsb
sbb
mov
and
pusha
sub
testb
inc
mov
outsl
popa
push
insb
xchg
jl
ljmp
add
xor
insl
pand
dec
lret
push
dec
dec
repnz
psraw
dec
mov
dec
addb
or
mov
cmp
xchg
int
daa
cmp
addb
dec
sbb
add
fisttpl
js
aaa
fdivs
dec
lds
xchg
fistl
hlt
sbb
push
mov
add
in
inc
push
pop
add
xchg
loope
stos
aad
jns
int3
cmc
inc
rorl
es
pop
push
add
pop
lods
ds
fistpll
fcomp
ss
dec
inc
jl
rolb
or
scas
push
jns
jb
cmp
push
lods
rol
rcr
xchg
and
fnstsw
pop
bound
add
fldt
xor
inc
push
movsl
ret
daa
jp
test
sbb
mov
repz
insb
xchg
or
in
into
or
enter
jae
incl
push
sbb
call
call
ret
dec
cmp
ret
in
jbe
dec
inc
idivl
pop
out
ljmp
lock
dec
inc
xor
jle
dec
push
fcomp
mov
push
adc
js
adc
inc
mov
mov
xor
iret
push
sbb
pop
pop
adc
xor
inc
ror
dec
lods
mov
fs
pavgw
xor
and
sub
ss
xor
fld
mov
in
add
push
or
lock
dec
jnp
mov
enter
outsb
arpl
pop
dec
cmp
add
and
pop
mov
popa
lahf
push
shl
jl
jbe
adcb
xor
pop
jp
or
mov
add
or
test
ss
rep
dec
jmp
test
xchg
mov
sub
lcall
fs
aam
sub
into
inc
adc
sub
pop
add
xlat
out
and
push
push
aaa
cmp
hlt
adc
dec
outsb
ljmp
sub
ja
rol
ret
dec
adc
add
inc
jp
add
repz
gs
pop
xchg
push
xchg
in
mov
shr
or
lcall
xor
movsb
push
sbb
or
sbb
push
mov
int
leave
xor
pop
aad
flds
push
fwait
pop
inc
stos
inc
inc
jnp
call
loopne
outsl
dec
arpl
push
mov
add
push
push
lock
ret
sbb
or
cmp
push
pop
idivb
rorl
mov
dec
add
add
scas
xchg
fiadds
dec
mov
insb
sbb
jnp
rolb
xor
mov
js
dec
push
scas
adc
or
sub
sub
rcpps
or
push
inc
test
xor
sbb
ret
mov
mov
and
cltd
sbb
mov
in
xchg
sub
sbb
inc
sub
lcall
jns
ja
jae
add
call
dec
imul
ret
insb
jbe
leave
ja
bound
pop
and
xchg
les
inc
roll
cmpsb
xchg
daa
in
mov
mov
ja
in
in
ret
arpl
sbb
rclb
stos
mov
dec
jmp
lret
or
dec
mov
push
xor
inc
push
aas
stc
adc
mull
out
inc
aam
push
test
lds
mov
push
ret
and
push
dec
inc
clc
bound
dec
push
mov
mov
push
outsb
push
mov
add
popf
jecxz
inc
nop
insb
xlat
scas
aaa
repz
clc
dec
mov
cld
call
das
aam
pop
jno
shlb
outsl
rcrl
xor
push
push
stos
pusha
insl
ja
int3
fidivrl
xorl
and
clc
gs
push
pusha
daa
arpl
pushf
sbb
mov
xlat
inc
xor
mov
nop
arpl
inc
leave
daa
jmp
imul
adc
and
add
xchg
cwtl
aas
dec
inc
push
insl
dec
clc
fdivs
sub
adc
dec
mov
and
pop
mov
pop
inc
xlat
inc
das
jle
adc
pmaddwd
xor
mov
adc
inc
or
shrb
fstps
adc
clc
clc
dec
movsb
lock
dec
ljmp
dec
clc
arpl
xchg
test
adc
add
pop
or
push
push
stos
cltd
mov
push
and
nop
call
add
jne
dec
xchg
mov
fsubl
xchg
lcall
add
push
push
cmp
jnp
or
adc
adc
jge
cltd
pop
inc
testb
nop
inc
rorb
dec
ret
inc
shll
dec
pop
pop
mov
movsb
push
xchg
clc
inc
je
push
out
or
add
fnstcw
inc
cmp
idivl
pop
fldenv
fldenv
adc
or
mov
test
mov
xlat
add
mov
ret
cmp
out
fsubp
xor
pop
sbb
cmp
insl
or
mov
push
stos
pop
jge
andb
insl
movsl
fists
repnz
cmp
lret
inc
ret
xor
leave
mov
mov
and
aaa
in
push
outsl
add
sbb
nop
in
aaa
out
inc
pop
das
push
pop
testb
adc
add
jbe
push
jno
mov
jns
in
or
loopne
sbb
clc
push
movsb
in
cld
push
mov
or
mov
loop
and
add
adc
dec
enter
adc
test
push
mov
jae
add
jl
mov
jne
cltd
cmp
jge
mov
ficoms
imul
pop
repz
call
jne
and
std
adc
cmpsb
sub
adc
xor
movsb
ret
adc
xor
dec
pop
dec
nop
jmp
movb
or
lock
push
xor
mov
lahf
cld
imul
push
das
aas
fcmovu
or
or
clc
jnp
in
mov
mov
cli
jg
frndint
mov
push
push
js
sub
sbb
dec
nop
push
inc
dec
jge
addl
cmp
adc
mov
mov
dec
andb
mov
mov
cmp
lret
ljmp
xchg
sahf
lds
inc
jl
js
cmp
push
xor
repnz
or
xchg
xchg
mov
test
push
adc
pop
fcomip
dec
mov
sbb
dec
or
clc
jp
in
push
out
or
cld
adc
loope
cmpsb
mov
push
xchg
rorb
pop
adc
or
or
push
pop
cmp
sbb
dec
sbb
cwtl
sbb
fmulp
xor
xchg
std
filds
loopne
dec
insb
xchg
testl
xor
or
xchg
fsubrl
cmp
nop
xchg
mov
push
aas
cld
sbb
xor
lds
mov
add
fsub
sarb
ret
add
dec
rol
or
les
in
inc
xchg
dec
je
add
dec
xlat
ror
fldenv
adc
inc
and
add
mov
lods
fldenv
imul
xchg
pop
fldt
mov
loop
jp
xor
fisubrl
push
jp
jp
dec
push
in
lret
inc
pop
push
shll
cmpsl
out
in
jnp
mov
push
mov
push
scas
add
mov
in
leave
test
leave
pop
sbb
or
xchg
fists
dec
lret
fdivs
cli
in
icebp
inc
dec
testl
dec
adc
xor
fdivl
icebp
xor
adc
fs
jne
xor
sbb
inc
jns
add
pusha
cld
dec
movsl
sub
dec
inc
push
jg
sub
inc
dec
mov
insl
push
leave
pop
jb
mov
xchg
mov
iret
sub
cmp
sbb
sub
mov
adc
dec
std
add
pusha
imul
add
lds
imul
out
pop
cmp
cltd
sbb
sub
mov
loop
mov
sahf
dec
dec
dec
outsb
push
pop
popa
dec
inc
add
xchg
orb
lcall
testb
mov
sub
call
sub
sbb
ja
inc
dec
movsb
and
shrl
push
fildl
inc
lea
sbb
addr16
jnp
push
in
scas
call
movsl
in
das
add
dec
cmp
andl
les
push
cld
int3
popf
xchg
fmull
sbbl
sarl
and
ss
cs
push
push
addb
cli
dec
inc
pop
pusha
fists
fisttpll
and
sbb
adc
pushf
js
sbb
test
inc
imul
inc
cs
mov
jl
dec
inc
mov
xor
sub
inc
mov
push
ds
sub
in
push
inc
stc
ljmp
mov
outsb
adc
pop
add
fcmovnbe
aam
mov
inc
or
dec
popf
negl
ljmp
ret
pushl
fimuls
iret
imul
imul
xchg
cmp
push
pop
xor
adc
sti
mov
inc
dec
adc
xchg
rol
dec
cmpl
pop
imul
jns
in
add
sahf
sahf
or
adc
push
cs
pop
push
cmpsl
xchg
cmc
jmp
push
es
mov
jns
push
or
dec
int
cwtl
sub
pushf
push
std
faddl
test
push
dec
int
sub
mov
push
mov
inc
inc
xchg
or
xchg
cld
lcall
popa
add
add
inc
test
xchg
rol
dec
inc
pop
das
or
rorb
mov
dec
insb
dec
jae
xchg
pop
mov
call
add
add
out
xor
pmulhuw
inc
xchg
push
xor
inc
push
stc
call
mov
pop
outsl
xor
loop
es
xchg
mov
sub
or
stc
cmp
test
ja
xchg
hlt
sub
pop
push
xor
dec
dec
dec
loopne
sub
push
mov
jmp
mov
push
push
xor
outsl
movsl
xchg
cld
imul
xor
fidivl
gs
inc
xor
scas
ja
lds
xor
js
add
inc
div
rclb
sbb
and
adc
ljmp
ss
inc
mov
rcll
push
add
inc
subl
jl
adc
inc
dec
mov
or
addr16
and
push
fcomps
mov
fiaddl
inc
lods
sti
out
daa
imul
dec
imul
aaa
in
cmp
test
mov
and
xor
xor
mov
add
xchg
add
xchg
or
push
adc
repz
roll
fistps
lds
aad
movsl
add
push
pop
sbb
insl
fists
sbb
sub
stos
lea
cmp
into
fdivrp
mov
fimuls
aaa
aaa
jno
push
outsb
pop
add
jae
sahf
pop
pop
icebp
dec
inc
rolb
fldcw
dec
mov
sar
call
lods
jb
push
lds
jnp
inc
xchg
push
add
jl
and
jnp
fldcw
jbe
shrl
adc
xor
aas
pop
test
mov
fwait
xor
sub
dec
test
and
or
jbe
mov
pusha
fiaddl
mov
inc
shrb
add
test
ja
aam
stos
pop
xor
call
push
cmp
push
pushf
nop
clc
push
hlt
icebp
movaps
enter
pushf
mov
cmp
push
flds
call
mov
sbb
adc
das
int
pop
dec
jle
xchg
loopne
inc
outsl
dec
push
adc
imul
fwait
xorb
push
addr16
and
jnp
push
insb
imul
mov
scas
dec
cltd
int
daa
out
and
fs
cli
xchg
inc
inc
dec
inc
dec
inc
push
add
ja
fs
push
dec
inc
je
ljmp
jae
data16
imul
jae
push
push
push
push
jg
arpl
imul
add
dec
dec
dec
pop
pop
push
arpl
insl
sti
pushl
je
add
aaa
xor
cmp
xor
add
inc
std
mov
imul
push
inc
mov
push
dec
push
test
jo
pop
clc
mov
push
popa
jb
jno
push
insl
popa
je
add
push
inc
dec
pop
push
inc
push
push
lods
and
ss
outsb
dec
outsl
dec
jns
pushl
gs
dec
add
ja
insb
gs
jns
jns
dec
dec
ja
dec
push
pop
imul
addr16
inc
xor
ja
and
mov
jno
adc
mov
dec
dec
pop
jae
pop
or
jg
dec
push
inc
dec
push
pop
inc
inc
jae
inc
dec
dec
outsl
push
xchg
jno
dec
jno
std
idiv
xchg
push
inc
bound
pop
inc
imul
aaa
push
push
jb
mov
jbe
data16
imul
imul
cmp
js
inc
sti
mov
data16
js
jae
je
jb
insb
bound
cmp
pop
xor
push
xor
sbb
dec
js
jno
sub
dec
adc
push
push
scas
dec
jg
jns
push
push
pop
push
dec
add
dec
arpl
push
test
addr16
outsb
jo
fcmovnu
pop
imul
aaa
data16
in
arpl
gs
add
imul
push
imul
repnz
addr16
push
jo
fidivl
ret
cmp
je
xor
push
push
inc
push
push
fldl
pop
cs
mov
add
enter
divb
cld
fbld
dec
inc
inc
outsb
jae
dec
js
pop
xor
dec
push
dec
insb
xchg
aad
xchg
push
pop
push
dec
dec
inc
push
stos
sbb
mov
jg
dec
jns
dec
dec
dec
add
sbb
xchg
popa
jae
jne
or
pop
ficoml
xor
jo
jne
addr16
mov
js
sbb
arpl
xor
dec
inc
test
js
push
inc
pop
jae
aaa
xor
add
xchg
ret
decl
arpl
jae
jns
mov
jno
sar
lea
arpl
fs
fisttpll
adc
imul
mov
call
jne
push
inc
inc
xor
push
inc
fisttpl
ret
inc
push
inc
mov
test
pop
int
add
ja
mov
fucomi
outsl
in
push
inc
pop
js
arpl
inc
dec
push
pop
jns
outsl
outsl
lods
add
dec
inc
pop
dec
fldt
ficoml
iret
aad
dec
inc
inc
push
add
pop
sti
lods
jno
dec
ljmp
shll
mov
xor
push
push
dec
inc
add
push
cmp
mov
je
gs
inc
push
insb
ror
xor
pop
push
into
ss
js
jno
jo
in
fistps
push
je
push
subb
pusha
inc
dec
bound
push
je
jp
sti
or
jne
jbe
addr16
inc
fs
inc
jae
outsb
pop
mov
jb
addr16
pop
bound
fdivrl
outsb
inc
inc
jne
inc
fs
dec
inc
js
arpl
push
or
mov
addl
arpl
bound
xor
mov
xor
push
inc
pop
add
push
dec
xor
xor
sub
pop
sub
mov
rcll
xchg
outsl
or
outsl
push
sbb
in
rorb
imul
arpl
xor
repnz
pop
pop
loope
ss
imul
or
push
xchg
push
sbb
dec
dec
pop
cmp
pop
insb
gs
mov
inc
sti
aaa
push
addr16
pop
lds
out
push
adc
ja
imul
inc
imul
bound
sub
xchg
inc
imul
jne
dec
popa
js
notb
shll
mov
in
dec
dec
jbe
push
dec
insb
dec
imul
push
outsb
inc
dec
arpl
sbb
fimuls
dec
dec
dec
push
gs
dec
jb
jne
jno
xchg
sbb
cmp
push
jecxz
addr16
sbb
or
ljmp
imul
jle
dec
cmp
js
dec
inc
jns
jecxz
push
push
outsb
dec
outsl
jne
outsl
fs
call
popf
jne
xor
out
outsb
dec
pop
sub
dec
bound
mov
push
imul
sub
imul
js
dec
ss
adc
mov
mov
mov
inc
inc
push
jecxz
in
scas
outsl
fistl
inc
push
push
ret
aaa
insl
arpl
dec
in
pop
insl
imul
lcall
push
push
bound
call
fisttpl
push
jo
push
jno
insl
dec
push
mov
or
js
data16
fstpt
arpl
jae
ss
lods
outsl
in
gs
jo
pop
dec
push
jne
push
outsb
insb
int3
push
pop
jb
lea
jmp
cmp
insb
pusha
jo
sbb
dec
xor
dec
ret
xchg
fimull
mov
fdivr
sbb
xor
xor
addr16
stos
mov
adc
dec
movsb
in
add
push
stos
dec
je
bound
outsb
inc
dec
mov
add
rolb
movsl
lods
lods
mov
cmp
cmp
dec
sbb
dec
dec
inc
xor
mov
inc
dec
push
dec
insw
scas
imul
jbe
test
imul
jb
mov
js
sub
xchg
pop
mov
pop
rorl
fdivrl
jno
sub
pop
imul
push
outsb
pop
roll
push
pusha
jno
lods
ljmp
adc
jns
adc
mov
aaa
ja
and
push
imul
mov
push
jg
imulb
mov
push
inc
push
push
dec
jg
fsubs
pop
ja
ficompl
in
jae
xorb
adc
pop
fsubrl
ja
stos
push
push
adc
inc
inc
dec
dec
sub
dec
leave
mov
inc
pop
dec
mov
dec
out
ja
lods
mov
dec
outsl
ret
fdivl
sbb
mov
xor
push
mov
push
stos
test
mov
imul
xchg
insl
jmp
mov
dec
lods
jno
lods
test
test
pop
push
push
dec
push
dec
xor
or
push
push
push
sti
ljmpw
lods
fistl
sub
lret
pop
mov
pop
inc
xchg
aaa
mov
pop
mov
jns
jo
sub
sbb
jns
sub
push
jne
sbb
push
movsb
addr16
xor
fs
js
ret
cmpl
insl
pop
push
insl
pop
pop
pop
mov
mov
outsl
jne
jns
aaa
fiaddl
jo
inc
jne
cli
sbb
rorb
inc
push
pop
push
mov
arpl
imul
adc
mov
xor
dec
jb
shl
xchg
sbb
scas
ja
mov
fistps
xor
addl
adc
dec
push
dec
data16
loopne
xor
je
jno
push
icebp
cmpsb
xchg
lcall
fnstenv
push
ja
xlat
dec
or
xor
jecxz
mov
jb
jno
add
mov
sub
mov
jno
in
push
lds
push
push
popa
test
cli
in
mov
push
outsl
ss
cwtl
fs
or
std
mov
pop
pop
imul
push
pop
inc
shlb
in
ret
dec
outsb
jp
sub
push
xor
dec
sbb
pop
test
mov
outsl
bound
popa
add
cmp
cmp
push
push
ret
add
lret
jle
hlt
rol
inc
sbb
inc
popa
dec
clc
xchg
and
call
push
ss
or
call
pop
movsl
das
xchg
xlat
mov
inc
outsb
je
cmp
pop
push
aas
dec
or
inc
or
and
dec
inc
mov
inc
push
sbb
insb
adc
xor
adcl
movsb
jle
or
push
push
xor
or
xchg
fdivs
adc
lods
insl
orl
jge
jo
subb
pop
sub
and
fdivrl
ljmp
jbe
jge
adc
lret
pop
outsb
mov
outsb
js
jbe
push
std
push
lods
push
adc
pop
push
je
pop
mov
insl
outsl
jne
jbe
js
fcomps
mov
or
push
pushl
test
pop
add
lds
mov
inc
cmp
sub
and
pushf
ja
mov
cmpsl
push
xor
pop
arpl
dec
mov
sbb
ret
pop
xor
inc
xor
ja
aaa
fisubrl
mov
push
jae
jge
fwait
push
xor
inc
push
push
rolb
or
dec
cld
push
inc
rolb
jns
outsl
in
sub
aam
icebp
outsb
addr16
je
fs
cmp
push
push
adc
jbe
ja
imul
imul
outsb
pop
push
sub
imul
adc
fcmovbe
jns
imul
push
xor
dec
jnp
cltd
inc
cmp
lods
es
outsl
dec
sbb
addr16
loopne
call
clc
xlat
pop
aaa
dec
mov
pop
jmp
bound
push
xor
outsb
cld
fisttps
imul
int3
sbb
jg
pushl
fucomip
outsb
cmc
jmp
and
inc
into
fldenv
fsubrl
decl
inc
mov
push
lret
xchg
rorb
out
pop
cmp
ljmp
jmp
and
clc
shl
and
lret
pop
fwait
test
call
push
loope
das
jne
test
iret
fildll
fsubl
add
jg
jae
xor
push
fisubs
sbb
inc
iret
add
imul
incl
scas
inc
inc
mov
pop
jecxz
inc
imul
cltd
xor
lcall
idivb
jp
lods
sub
out
pop
sub
leave
jg
push
xchg
lods
sub
push
jo
les
faddp
ret
aad
or
mov
incl
mov
fsubl
filds
leave
adc
rcrb
jnp
mov
std
add
scas
ss
lcall
fisubs
xor
push
rcrl
mov
orb
in
cmp
cld
das
cld
les
mov
sahf
sbb
inc
call
call
repz
cmpsb
cs
xor
test
pop
loope
or
in
or
loopne
lcall
int
je
mov
add
and
test
inc
cmp
mov
pop
clc
lcall
pop
sub
or
pop
into
jg,pt
lret
nop
jp
stos
jge
test
jmp
push
ret
stos
dec
shlb
adcb
xchg
call
push
das
insl
clc
incl
test
fidivrl
fidivs
jne
lret
adc
jo
cmpsl
jnp
inc
aam
aas
sbb
push
jl
cli
outsb
das
lods
xor
jmp
xchg
int
adc
adc
xchg
mov
shlb
fs
sub
mov
outsb
mov
lock
jns
xchg
push
dec
or
or
dec
or
movsl
or
mov
call
repz
push
stc
pop
loop
mov
frstor
cmc
sarb
and
repnz
movsl
push
mov
and
movsl
inc
fistl
repnz
data16
ljmp
dec
int
dec
loope
pushf
add
adc
shll
pop
jecxz
jle
add
push
decl
sub
dec
aad
sbb
andb
cs
mov
addr16
call
jo
dec
nop
and
push
dec
jecxz
popa
ljmp
cmpsl
bound
pop
dec
icebp
lcall
xchg
adc
mov
pushf
addl
aaa
inc
rcll
push
in
test
adc
les
stos
dec
insb
add
loopne
inc
xor
cmp
rcr
xchg
cmpsb
jo
and
ljmp
sbb
out
or
orb
xchg
lods
sub
cwtl
mov
or
mov
inc
lret
out
in
mov
adc
repnz
out
ja
jne
lcall
jmp
ret
lea
dec
cmp
mov
xchg
push
lahf
xchg
mov
jb
dec
jo
pushl
jg
clc
adc
loopne
out
push
leave
sbb
mov
pushl
clc
sub
jae
std
pop
mov
xchg
sbb
sbb
enter
loopne
dec
call
bound
sub
jbe
outsl
loopne
and
fucomip
mov
addr16
call
outsb
ds
push
jp
enter
int
or
fisubrs
ret
or
pusha
aaa
incb
push
mov
cmpsb
std
mov
pop
addb
insl
xor
jb
inc
lret
jge
or
cmp
sub
shl
jg
cmp
mov
adc
aad
mov
fsubs
sub
mov
inc
lea
inc
rcrb
out
movsl
mov
cmp
mov
mov
scas
outsb
inc
les
mov
or
jmp
pop
sub
jp,pn
adc
mov
dec
lret
test
pop
and
cwtl
aad
cmp
loopne
or
and
xor
push
nop
pop
fistpll
cmc
dec
lcall
ucomiss
add
hlt
imul
movl
imul
inc
or
sub
dec
inc
mov
xchg
aad
xchg
sbb
fucom
mov
ss
call
out
pop
mov
mov
dec
sahf
loope
mov
mov
jp,pt
push
fisttpl
jns
xchg
pop
aaa
fdivrp
jmp
insb
lock
push
adc
das
les
fstpt
or
xchg
cli
das
hlt
xchg
scas
mov
test
pop
mov
dec
lcall
jo
adc
jbe,pn
test
mov
add
xor
ds
cmp
outsl
pop
loop
gs
mov
mov
jmp
ds
test
std
pop
aaa
dec
sub
push
mov
sub
add
adcb
call
xorl
out
pop
int
loope
jmp
das
pop
mov
fwait
mov
stos
dec
iret
imull
add
fsubp
movsl
ret
mov
dec
cli
sbb
sub
lret
ret
inc
cmpsl
out
stc
ljmp
rclb
dec
cltd
jge
adc
lcall
jp
loopne
lods
dec
ss
xchg
fildl
pop
std
jmp
mov
mov
push
loopne
pop
mov
js
fildll
decl
dec
aas
rorl
outsl
icebp
sub
add
xchg
jg
ret
jge
out
xchg
sbb
shlb
sbb
mov
add
je
outsb
or
sbb
out
sub
add
push
pop
xor
xchg
aad
jns
scas
and
ljmp
pop
push
jne
out
add
or
xor
add
dec
roll
addr16
adc
idiv
lret
outsb
ret
push
xchg
xor
jns,pt
xor
jmp
movsb
sub
mov
dec
dec
jge
js
or
test
sbb
divl
mov
or
xchg
inc
inc
fistps
jb
mov
and
cmp
push
mov
inc
call
ljmp
sarl
popa
jbe
jl
inc
push
lahf
daa
add
orl
add
ficoml
lods
inc
fsubl
call
inc
mov
sarb
dec
dec
jp
xorb
or
push
inc
test
call
in
sbb
lret
into
test
cli
add
aas
or
mov
and
dec
sbb
lods
in
incl
daa
mov
stos
and
rcrl
lock
lcall
dec
aam
adc
jg
sti
sbb
popf
popa
ret
ret
push
adc
aaa
pop
push
test
mov
pusha
jns
inc
bound
or
jecxz
clc
lea
sti
sub
out
test
dec
and
ljmp
inc
pusha
sbb
adc
push
or
mov
dec
lretw
clc
jnp
jbe
xchg
jne
test
ds
jmp
sbb
push
inc
mov
clc
xor
adc
pop
rcrb
mov
cmpsb
sub
loope
div
sbbl
mov
insl
out
call
sti
fwait
insl
jl
push
inc
idivb
repnz
cld
push
push
call
iret
push
aas
push
cmpl
jmp
out
jb
int3
in
push
lret
ljmp
sub
pop
out
xor
sbb
lds
fadds
pop
lods
mov
ret
jno
insl
andl
mov
mov
es
mov
add
test
push
stc
jb
xor
or
into
jmp
push
leave
cmp
push
cmp
xlat
jae
xchg
jg
mov
rcrl
push
roll
lods
xchg
rorb
pop
out
clc
addb
insl
stos
mov
add
dec
iret
jge
cmpsb
and
push
bound
imul
mov
lcall
mov
outsl
cld
mov
cmc
xchg
ror
aad
fidivl
arpl
mov
call
lds
sahf
daa
cmp
pop
xor
lcall
mov
ds
movsl
push
sarl
outsl
sbb
cmp
inc
in
push
int
sbb
mov
and
or
ds
push
fadd
mov
and
and
sahf
mov
fimull
jp
sti
pusha
lods
xor
or
pop
loopne
jmp
inc
cwtl
scas
mov
inc
lds
jl
adc
fistpll
cwtl
mov
fcomip
or
sbb
fsubr
push
cs
add
loop
aas
mov
ret
mov
inc
test
cmpsb
repnz
dec
nop
cmc
mov
scas
scas
sbb
sbb
sub
mov
mov
push
add
and
fildll
decb
xchg
sub
sub
dec
aam
push
sahf
pushf
andb
inc
and
leave
loop
pushf
dec
mov
push
aam
lock
clc
divb
sub
ret
fsubr
cmpsb
sar
icebp
sub
xchg
sub
or
inc
xor
or
loopne
push
mov
dec
fisubl
jae
and
xchg
and
pop
sub
or
jns
jbe
fwait
and
mov
push
jmp
and
cli
jg
adc
decb
sbb
xchg
hlt
jne
and
pusha
cmpsb
clc
neg
jnp
fwait
in
sub
cmp
pop
ljmp
outsl
lock
jp
ret
clc
jmp
or
mov
push
movl
lods
sbb
pop
jge
mov
fcos
ljmp
push
loopne,pt
loop
fisttpll
out
mov
outsl
int
mov
dec
sbb
dec
cmp
mov
sti
push
mov
repz
std
js
movsl
call
in
addr16
and
mov
lcall
lret
incl
xor
inc
push
adc
push
clc
jg
int3
jae
stc
lret
mov
cs
adc
icebp
xchg
out
clc
mov
in
fcoml
fidivl
push
or
imulb
hlt
repnz
xchg
int3
popa
out
mov
decl
popf
rol
dec
ljmp
and
push
fldenv
inc
jg
aaa
outsb
dec
inc
mov
mov
lret
cmp
rcr
clc
jg
fwait
mov
fstp
insl
cmpl
adc
lret
pop
jp
in
push
je
lahf
fs
rcll
bound
sbb
sub
and
mov
inc
rcrl
call
clc
push
mov
push
inc
or
inc
pusha
push
and
incl
repnz
stos
lret
bound
in
or
pop
add
fdivl
jnp
or
mov
aaa
mov
cmpsl
jmp
pop
or
mov
scas
dec
inc
movsl
call
adc
sahf
stos
mov
loopne
fs
jge
cmp
icebp
inc
iret
inc
ds
cli
cmp
mov
cli
repz
xor
dec
rcrl
sub
push
dec
jg
ret
mov
aaa
rclb
aas
aad
push
and
icebp
int3
std
dec
dec
pushl
xchg
aas
and
pusha
insl
add
cli
mov
adc
xor
jne
or
fiaddl
outsb
leave
enter
inc
lds
pushl
fcompl
out
sub
mov
mov
mov
jge
fiadds
or
mov
andl
dec
adc
pop
hlt
sub
ret
push
dec
fmull
mov
stc
or
mov
jmp
outsb
jmp
cmp
jecxz
jecxz
pop
xchg
mov
pushf
xchg
fstpt
xor
imul
es
sub
cmp
das
lock
push
sub
aad
insb
jp
orb
add
aam
ljmp
jno
cmpsl
decl
std
mov
lret
sbb
xchg
cli
addb
vandnps
dec
jg
in
ljmp
mov
in
and
fisubl
or
xchg
pop
mov
pop
mov
ljmp
cmp
jmp
xor
mov
push
lods
pop
iret
pop
in
mov
es
push
xchg
scas
add
mov
cmpsl
xchg
xchg
mov
enter
test
mov
push
clc
cwtl
push
inc
addr16
lret
out
jne
outsl
call
or
pop
cli
pop
clc
lret
aad
inc
popf
loopne
scas
jne
das
hlt
dec
fidivl
lcall
test
jp
jb
mov
shl
cwtl
cltd
mov
jg
jge
sbb
mov
in
add
mov
stos
push
mov
jo
jle
pop
xchg
mov
stos
dec
dec
jns
shl
jl
sbb
movsl
cmpl
testl
mov
mov
xchg
pop
mov
sbb
fdivr
movsl
outsl
pushw
fsubrl
jb
lock
mov
int3
adc
cwtl
xchg
cmpsl
mov
insb
push
in
imul
sbb
pop
sahf
lods
lock
push
pushl
fldenv
jno
fwait
inc
push
cmpsl
das
or
gs
subl
and
fistps
fldenv
std
lcall
xor
out
mov
loop
call
and
pop
cwtl
nop
sbb
mov
test
inc
ljmp
push
add
xchg
mov
out
loop
outsl
clc
pop
pop
loope
popa
cmp
inc
popa
or
in
mov
xor
dec
mov
sbb
fdivrs
daa
push
call
imul
push
sbbl
out
orl
call
sbb
pusha
out
sub
pusha
mov
add
inc
jl
xchg
jle
inc
pop
data16
xor
shrb
inc
lahf
loope
cmp
or
imull
sub
scas
stos
shlb
imul
inc
cmp
dec
ret
inc
dec
and
testb
fucomip
mov
fnop
pop
in
jne
lahf
cltd
and
push
enter
fbld
push
jo
daa
or
mov
add
aas
repnz
das
dec
je
lods
xor
add
inc
and
inc
jg
push
push
mov
mov
in
inc
mov
lahf
sub
jecxz
std
in
add
adc
inc
xchg
cmp
pushl
std
or
and
sbb
lcall
dec
fbld
out
call
das
std
ljmp
inc
and
push
pop
adc
jno
cmpsl
aaa
mov
mov
std
xchg
mov
xchg
mov
add
xchg
push
mov
sbbl
ljmp
pop
jmp
push
sbb
xchg
cmp
push
sbb
jp
std
xchg
xchg
leave
sbb
sbb
in
aam
push
cli
jae
stos
xor
mov
jecxz
cld
mov
add
xchg
scas
pop
cltd
idiv
add
push
xchg
inc
sbb
outsl
std
movsl
sbb
sub
pusha
inc
xchg
iret
sbb
cs
dec
or
call
ja
jecxz
inc
jge
push
cwtl
jmp
push
hlt
mov
push
xchg
int
shrl
pusha
roll
dec
push
push
dec
dec
dec
dec
inc
dec
inc
dec
ljmp
mov
imul
add
outsb
dec
jns
jne
xor
sbb
pop
mov
xor
imul
push
std
xor
movsl
sub
test
call
push
dec
inc
push
and
xor
imul
jns
jb
dec
gs
dec
inc
inc
dec
dec
fs
add
das
les
dec
inc
dec
inc
inc
inc
dec
inc
push
add
cmp
add
or
jo
push
add
mov
push
push
push
dec
push
jbe
add
inc
inc
jo
jae
mov
ja
test
hlt
idiv
push
dec
jno
js
dec
fs
imul
push
xor
mov
cli
xor
arpl
scas
call
push
push
outsl
inc
pop
push
push
dec
push
push
push
inc
push
js
push
outsl
imul
xor
aaa
dec
jae
popa
push
push
dec
push
dec
jb
add
clc
or
pop
pusha
push
adc
dec
dec
push
dec
push
cli
mov
inc
js
push
jo
jb
inc
inc
dec
pop
inc
push
push
dec
inc
dec
mov
add
jo
push
mov
sub
jnp
incb
imul
insb
add
arpl
decb
popf
xor
xor
movsb
push
push
inc
inc
pop
inc
jp
fcmovnu
je,pn
xor
add
bound
jno
popa
aaa
inc
dec
call
decb
push
inc
push
dec
push
mov
pop
add
je
les
outsb
pop
add
outsl
lret
jne
test
sub
push
inc
pop
mov
loopne
xchg
dec
jae
fwait
mov
insb
addr16
xor
xchg
test
loope
cmp
insb
imul
insl
sti
sbb
xchg
push
pop
inc
inc
push
push
pop
pop
push
mov
xor
push
mov
jno
data16
push
xlat
push
stos
jg
mov
sub
test
outsb
push
jb
insb
filds
push
insb
inc
dec
inc
js
je
jne
xorb
xor
jbe
int
fmull
es
insl
shlb
dec
xchg
mov
dec
inc
rorb
insl
aaa
inc
jns
bound
mov
cmp
jns
push
inc
push
fmull
push
push
push
fisubl
xchg
push
mov
push
imul
add
push
pop
push
dec
pop
push
dec
cmp
fs
fs
imul
addr16
jne
stos
dec
inc
insb
popa
outsb
inc
dec
jno
dec
push
adc
inc
pop
pushl
jbe
aaa
pop
dec
js
inc
je
pop
inc
push
dec
push
dec
push
pop
add
dec
dec
inc
dec
pushf
dec
inc
fs
das
aad
dec
insl
dec
insb
push
push
push
push
dec
jb
dec
ja
push
push
mov
or
xchg
add
test
lods
sub
imul
jae
movsl
jb
scas
stos
stos
mov
pop
push
sub
or
push
je
push
jno
and
insl
jns
and
das
mov
insl
repz
push
imul
je
popa
insb
fwait
insb
inc
push
sarl
jbe
outsl
mov
or
out
decb
inc
js
inc
addr16
jns
xor
push
imulb
jecxz
inc
fs
inc
push
jae
push
imul
push
or
mov
out
push
inc
push
xor
mov
cmp
bound
lea
ret
cli
inc
sub
pop
sub
jns
in
fildll
pop
popa
push
adc
jbe
imul
jno
jno
insw
imul
cmp
mov
dec
xor
pop
push
inc
fisttps
inc
push
negb
mov
sbb
out
jno
insl
dec
lea
push
inc
lcall
test
jo
out
mov
add
mov
in
add
stos
push
mov
fimull
dec
push
lea
lea
std
out
xor
hlt
in
inc
fstpt
jbe
outsb
inc
jne
add
mov
imul
dec
inc
jb
dec
push
clc
mov
fisttps
pop
inc
inc
dec
jle
push
arpl
push
outsb
mov
scas
bound
push
add
push
pop
jmp
jmp
push
insb
bound
ja
mov
dec
jecxz
test
jmp
push
inc
imul
and
mov
pop
pop
aam
sbb
ja
and
push
dec
sub
inc
pop
push
andb
fisubl
inc
scas
add
outsl
push
inc
mov
gs
xorl
cld
insl
js
das
inc
sti
push
push
dec
popa
jne
mov
pop
push
outsb
mov
push
bound
push
stos
xor
push
sub
sub
and
push
inc
ds
lea
adc
cs
rcrb
push
imul
xor
xchg
cmp
jnp
add
js
imul
mov
or
pop
inc
imul
mov
mov
outsb
push
gs
into
jne
dec
inc
inc
inc
inc
inc
mov
testb
gs
xlat
inc
mov
dec
jo
insl
test
arpl
sub
outsl
lods
idivb
inc
insb
cli
inc
fwait
dec
dec
dec
jbe
data16
mov
sub
jbe
jo
outsb
xchg
fldt
mov
std
xorb
insb
xor
scas
xchg
xor
mov
subl
fwait
pop
push
insb
xor
imul
mov
in
push
inc
jbe
gs
push
ja
je
outsl
or
arpl
outsl
lahf
imul
add
push
je
mov
into
mov
ja
sbb
adc
insl
addr16
inc
add
fdiv
inc
jb
popf
pop
jns
outsb
inc
js
stos
aam
mov
js
rcl
pop
je
fs
into
lds
sub
aaa
int3
movsl
lods
inc
fistl
pop
jl
mov
outsb
mov
pop
pop
popa
push
rorl
add
mov
adc
iret
inc
js
fucomi
lea
lods
dec
mov
outsb
je
xor
mov
push
jo
push
inc
dec
pop
jo
inc
shlb
adc
push
lods
fisttpl
aaa
dec
dec
dec
and
stos
push
outsl
xor
bndldx
lock
sub
pop
imul
ss
xor
xor
jecxz
jl
int
dec
dec
xor
add
push
sbb
bound
insb
ja
je
fistl
lret
sbb
arpl
mov
nop
push
jae
dec
inc
jae
insl
sbb
jo
lret
dec
and
or
pushl
dec
or
imulb
imul
outsl
mov
inc
jae
jno
jo
mov
push
jae
dec
dec
mov
rcll
fcoms
sbb
mov
pusha
and
outsl
imul
test
outsb
int3
addr16
data16
mov
jbe
jo
dec
add
rcr
mov
add
dec
jae
pop
pop
dec
sbb
lods
push
sub
and
xchg
xor
sbb
in
push
push
test
inc
into
mov
call
xchg
push
dec
in
je
jne
fadd
add
xor
inc
mov
repz
es
stos
xchg
lods
dec
ret
imul
fstl
gs
push
jl
lods
mov
arpl
leave
pop
xor
mov
jbe
mov
pop
and
dec
jo
xor
jnp
arpl
mov
mov
dec
and
push
sub
insb
jno
jbe
mov
aad
sub
pop
gs
jbe
pop
les
xor
xor
in
lods
ret
jne
adc
mov
jno
addr16
in
push
inc
sub
push
inc
out
pop
sub
ja
imul
push
insb
rorl
dec
imul
mov
inc
cmp
dec
inc
shl
add
pop
pusha
mov
push
inc
jbe
inc
mov
sub
lea
pop
push
mov
loope
xchg
stos
mov
test
sbb
mov
cmp
push
mov
je
inc
jnp
lock
popa
jns
inc
push
push
dec
adc
mov
fsubrl
xchg
fiadds
or
test
pop
out
cmpsb
arpl
xchg
pop
jmp
mov
inc
cmp
inc
imul
mov
push
daa
mov
lods
push
insl
mov
xchg
xchg
push
popa
mov
aad
mov
movsl
inc
leave
call
rcrl
arpl
lcall
mov
push
js
push
dec
xor
movl
into
mov
push
lock
mov
outsl
ljmp
or
ret
and
lods
jno
cmp
movsl
pop
adcl
lods
fdivs
popa
jns
dec
in
push
push
inc
jno
imul
mov
imul
pushl
dec
or
add
xor
add
or
movsb
and
mov
mov
jae
fnstenv
push
es
popa
and
push
out
xchg
das
xor
lods
andb
push
push
dec
in
push
inc
push
gs
add
mov
push
fistps
pop
leave
rol
dec
jo
inc
dec
test
push
inc
jecxz
adc
xorb
cmp
mov
jg
cmc
cmc
lret
mov
dec
xor
add
add
inc
pop
add
jg
das
add
addb
lds
add
inc
pop
stos
hlt
cmp
mov
jle
outsl
push
outsl
add
lcall
and
dec
and
mov
mov
cwtl
mov
cmp
mov
add
pop
into
push
jge
add
jle
bound
xchg
lock
dec
jg
push
std
mov
add
ja
pop
int
sbb
mov
lods
icebp
test
daa
add
inc
ret
subl
pop
fdiv
xlat
cmp
jge
icebp
loop
lea
pop
or
icebp
push
shl
mov
jecxz
movsb
jnp
call
rclb
fchs
push
sub
mov
add
xor
in
das
push
mov
pop
mov
or
pusha
xchg
cmp
pop
rolb
sbb
pop
add
add
mov
fwait
test
add
cmp
xor
sti
adc
not
adc
add
lcall
mov
or
hlt
imul
add
adc
add
pop
sub
xchg
add
or
adc
sub
pushl
adc
mov
adc
mov
cmpsl
mov
out
notl
mov
add
addl
inc
push
push
enter
repz
jl
cmpsl
or
mov
scas
pop
mov
repz
mov
mov
dec
lods
add
inc
add
sbb
inc
or
mov
sub
popf
lret
add
ja
cmp
mov
adc
pusha
push
jbe
test
pusha
mov
cmp
jo
call
fisubl
adc
jne
lods
in
jmp
jbe
mov
int3
adcb
adc
push
sti
add
fbstp
les
movsl
cmp
das
inc
rcl
pop
add
fsincos
pop
popa
outsb
sti
cmp
jnp
imul
push
cmp
fsubrs
dec
daa
add
sbb
adc
lret
outsl
mov
fnstenv
lods
rcll
sub
and
movsb
or
adc
rep
dec
xchg
mov
fisttps
ret
sbb
jle
mov
sub
sub
or
cld
fst
or
dec
push
jns
cs
add
outsl
and
or
xlat
cld
outsl
pushf
push
push
cmpsb
test
inc
sub
mov
clc
shrb
inc
dec
pop
xchg
mov
mov
adc
or
js
sub
add
and
push
jle
pushf
push
adc
decb
fs
popl
mov
fcmovnu
push
les
aas
mov
mov
mov
jae,pn
push
jbe
mov
frstor
mov
or
std
ret
sbb
and
pop
pusha
add
movsl
in
dec
hlt
addl
cmp
push
lods
shrb
add
lea
lahf
es
adc
jno
addb
pop
outsl
test
loope
int
xor
cwtl
sbb
stos
mov
in
hlt
mov
jno
ret
pop
or
push
pop
pop
loopne
dec
lea
cld
mov
jecxz
shlb
sti
decl
aas
std
push
hlt
push
inc
add
jle
addb
add
and
fadd
shrb
outsb
loope
movsl
or
ret
push
mov
lcall
out
inc
and
adc
mov
dec
add
jge
cs
pusha
jle
call
int
lea
and
out
mov
test
add
add
pop
subb
add
cwtl
jmp
je
bound
and
fdivr
jbe
in
xchg
mov
mov
outsb
aaa
push
add
pop
mov
jl
pop
test
xchg
mov
adc
scas
mov
sub
jg
mov
lods
int3
inc
mov
sub
or
mov
movsl
sub
push
test
fstl
xchg
clc
cmp
adc
in
adc
lods
mov
push
or
icebp
test
xor
cld
push
popa
enter
sbb
xchg
stos
bound
inc
pop
fcmovnu
mov
cld
push
gs
fdivrl
or
loop
in
sbb
pusha
cmpsl
pop
push
push
daa
into
aas
and
imul
adc
fisubs
cmp
mov
sub
dec
jmp
push
pop
and
loopne
mov
scas
pop
inc
jl
mov
push
cmc
lcall
xchg
lods
addl
xchg
mov
sbb
add
insl
jb
fldt
or
testl
les
lret
mov
bound
mov
push
cmp
std
cmp
addl
inc
roll
dec
or
in
mov
das
ja
push
jo
mov
stc
add
fsubrs
insl
jg
lock
repz
jmp
cwtl
or
sub
cmpsl
xchg
arpl
daa
cmp
jno
jbe
test
fisttps
bound
jno
and
jae
jne
lret
add
and
ret
adc
mov
lds
movsl
mov
addr16
inc
push
mov
inc
fwait
out
mov
mov
push
ljmp
fs
mov
mov
iret
jns
xor
jmp
inc
cmp
cmp
ret
sub
pop
add
stos
cmc
mov
stc
rol
xchg
pop
ljmp
das
sbb
test
pop
sbb
cld
mov
dec
aam
xchg
mov
cmp
out
roll
mov
xchg
xor
push
pop
sub
sti
stos
xor
pop
arpl
xchg
inc
ret
add
pop
pop
adc
outsl
pop
clc
sbb
outsb
out
int
adc
add
ljmp
mov
mov
sbb
movsl
inc
adc
or
lods
addr16
mov
mov
sbb
hlt
inc
and
adc
movsl
mov
inc
sbb
mov
das
mov
sbb
shrl
mov
xchg
mov
inc
loopne
gs
scas
insl
add
out
test
mov
shll
pop
arpl
mov
int
xchg
mov
incb
lahf
cmpb
add
cwtl
shll
jle
cli
mov
jmp
cmp
mov
loopne
call
stc
insb
mov
or
xchg
sarb
sbb
and
aam
in
ret
add
cmpsb
rcrb
xchg
pop
call
push
xchg
pop
icebp
rep
add
sbb
cmpsl
ss
jp
fimuls
jle
add
inc
push
inc
and
pop
mov
sbb
mov
inc
and
decl
and
xchg
cmp
mov
rcrb
jns
movl
dec
fsubrl
fimull
scas
movaps
aas
or
fisubs
adc
push
mov
or
sbb
jne
jmp
nop
sahf
jmp
pop
cltd
outsb
mov
imul
test
sub
call
test
add
xor
push
push
adc
mov
jmp
cld
xchg
mul
xchg
incb
sbb
and
cltd
into
xchg
sub
xchg
ja
and
pop
sub
lock
nop
sbbb
iret
xchg
mov
lods
iret
sub
outsb
jne
je
or
iret
inc
pop
jne
enter
rcrb
fwait
les
cmp
dec
stos
mov
add
stos
leave
arpl
lods
lods
sub
in
mov
je
pop
outsl
pusha
mov
mov
sbb
xlat
jbe
inc
pop
or
jae
sti
in
pusha
mov
lcall
ljmp
cwtl
and
loopne
sub
adc
add
lods
jns
mov
or
addr16
fsubrs
ret
and
or
insl
les
lretw
sti
jno
shl
aaa
jb
inc
sbb
addr16
mov
adc
mov
shll
outsl
out
jae
dec
xor
or
test
jp
xlat
movsl
data16
jbe
lret
ja
adc
adc
outsl
xor
inc
jmp
inc
rorb
ds
cmp
sub
movsl
mov
sub
scas
dec
in
out
mov
jg
int
jbe
pop
pop
xchg
clc
mov
or
inc
mov
hlt
fcmovnb
adc
icebp
dec
pusha
adc
inc
mov
adc
push
mov
lods
call
inc
sub
gs
int
sbb
or
mov
fsubl
je
out
pop
or
push
and
sub
cmp
nop
lods
jne
clc
jnp
rcr
mov
inc
inc
mov
dec
push
jge
sti
leave
pop
cmp
into
push
lcall
das
insb
jl
test
sub
and
jp
icebp
sbb
aas
jmp
xor
fldl
inc
mov
int3
xor
dec
xchg
in
pushf
xchg
arpl
mov
jle
jp
or
fnstsw
out
dec
imul
jno
iret
test
aam
push
loope
jb
andb
or
inc
aam
aaa
mov
inc
int3
mov
insb
loope
test
mov
test
movsb
push
insb
xor
aas
or
mov
sub
mov
sub
dec
out
mov
repz
xchg
pushl
ds
aad
arpl
popl
inc
dec
adc
int3
in
sub
es
and
cld
aas
stos
hlt
lods
mov
rcl
jb
jo
into
fdivp
movsl
sub
lret
ret
jb
jmp
aaa
xor
int3
lahf
dec
push
pop
push
pop
rcll
sbb
adc
in
in
pop
xchg
stc
rcrl
pop
leave
aaa
or
and
out
inc
push
jg
xchg
xor
out
stc
mov
push
push
ds
or
and
lahf
fcmovnu
in
jg
adc
ljmp
push
xchg
xchg
test
fs
cmpl
das
mov
adc
cmp
movsl
ljmp
aad
imul
test
sahf
mov
jl
rorb
xor
sub
gs
in
mov
mov
sbb
mov
mov
dec
mov
mov
mov
jl
in
lret
movb
test
test
rclb
lods
out
mov
lcall
or
bound
insl
cli
fcomi
stos
sbb
sbb
inc
repnz
sub
push
and
test
xlat
cli
and
fsubs
xchg
iret
or
xchg
inc
orb
lods
inc
mov
jp
call
lahf
xchg
loope
and
mov
sub
inc
dec
push
jne
sahf
cmpsb
lods
xchg
mov
lret
dec
pop
outsl
cmp
mov
push
and
ffree
movsb
mov
sub
js
mov
and
ret
jg
and
jmp
pop
sahf
jle
sub
lcall
xchg
pushf
in
flds
or
mov
sub
mov
or
fwait
jmp
ret
pop
xchg
cmp
scas
push
xchg
jp
arpl
pop
cmc
add
mov
xchg
pop
js
rol
pop
clc
jae
cmc
dec
add
pop
jmp
pusha
pop
es
sbb
xlat
jmp
notb
mov
inc
push
pop
imul
xor
out
outsl
or
pop
scas
loop
or
push
xorl
loopne
mov
adc
and
fildl
pop
decl
arpl
and
inc
jae
lock
nop
and
sbb
repz
jge
push
jg
mov
pop
pop
dec
jl
loopne
mov
add
ja
push
xor
lahf
push
xor
xor
fmuls
adc
jns
arpl
or
dec
aam
push
and
fnstenv
ss
or
leave
adc
and
jle
clc
xlat
xchg
repz
inc
fists
call
jae
mov
das
mov
in
adc
cmp
cmp
and
scas
cmp
in
push
in
push
mov
lret
jg
outsl
mov
or
adc
jne
lock
sbb
loop
pusha
fdivrl
and
in
fists
push
fldenv
movsl
scas
fldt
mov
mov
loopne
maskmovq
imull
test
add
ljmp
pop
fisubs
clc
ds
lret
cmp
roll
in
rep
nop
xchg
pop
push
and
dec
jmp
out
pop
hlt
xchg
xchg
or
jl
inc
stos
jg
mov
push
jg
loop
fidivl
cs
pop
cmp
mov
inc
je
sub
sbb
in
sbb
popl
test
dec
fbld
sbb
xchg
adc
push
inc
sbb
mov
add
rorb
xchg
push
ret
add
pop
mov
pop
inc
sbb
pop
or
outsb
sbb
add
shl
lea
hlt
fwait
cmp
shll
cmp
out
aaa
and
repz
sub
les
fidivrs
mov
dec
cmp
loopne
mov
and
cli
bound
xor
ret
and
das
sbb
mov
sbb
fistpll
adc
mov
scas
sbb
cmp
inc
jnp
add
or
ret
mov
cmp
pushl
mov
cli
aad
rcr
aad
cmp
popf
xchg
aad
aam
lret
xchg
inc
mov
aaa
std
push
mov
cmpsl
cmpsb
inc
aaa
xchg
jp
push
and
cmp
pop
or
lea
or
cmc
and
std
ret
adc
call
sbb
sbb
and
add
ffreep
movsl
or
js
popa
jge
ljmp
std
push
xchg
adc
fbstp
mov
shl
mov
push
inc
addr16
inc
fnstcw
mov
lahf
ret
lahf
pusha
or
push
ss
xor
mov
nop
cmp
or
jmp
lock
dec
jle
push
and
ds
cs
sbb
call
test
das
cli
nop
push
data16
cmp
outsl
out
mov
ret
or
aam
rorl
loope
shl
test
out
sbb
lcall
add
jmp
fs
push
out
sbb
mov
movsl
inc
jle
nop
hlt
jp
in
test
mov
rcrl
hlt
es
sub
cmp
add
dec
jo
mov
rclb
ja
mov
pop
jle
sbb
jnp
sub
movsl
addl
int3
mov
pushf
jns
xor
mov
shlb
and
loopne
cmc
jg
mov
fsubrs
int
push
push
push
popf
testl
dec
dec
pushf
sbb
or
repnz
pop
jo
cli
fildl
icebp
jb
dec
lcall
cmc
pop
mov
stc
mov
mov
jae
mov
pop
popf
jo
std
in
push
enter
clc
xchg
mov
cmp
addr16
shll
jne
shll
jae
fcomi
add
mov
insl
addl
jl
cli
pop
leave
and
pusha
mov
mov
fistl
insb
rcrb
add
dec
mov
cli
cli
pop
mov
aam
pushl
mov
adc
push
pusha
test
xor
cmpsb
push
jnp
xor
ja
movsl
aas
or
mov
mov
adc
cli
xchg
jle
inc
in
sbb
jg
lea
or
stos
adc
inc
push
out
cmp
mov
imul
pop
pop
daa
or
lret
fucom
leave
mov
mov
pop
and
add
insb
mov
std
mov
or
push
lock
push
add
int
inc
or
sub
sbb
fsubl
jae
ret
jmp
cli
sub
mov
lock
aaa
xlat
xchg
jnp
leave
ljmp
mov
push
sbb
adc
mov
insl
xchg
outsl
loopne
test
mov
loope
mov
in
call
clc
pop
and
test
fs
mov
mov
inc
mov
jno
bound
cmpl
push
or
or
inc
inc
mov
jno
mov
movsl
pop
or
add
add
lds
dec
lods
push
or
mov
dec
mov
ret
sub
lret
or
call
jle
cmpsb
jo
lods
mov
or
fwait
xchg
mov
dec
iret
aaa
data16
outsl
mov
xor
loopne
xor
xchg
pusha
cmp
pop
cltd
xor
push
sbb
mov
test
das
mov
loope
sub
or
or
sbb
mov
push
lcall
insl
das
mulb
sbb
orb
pop
inc
stos
add
push
ret
movb
sti
fistps
inc
sbb
mov
push
sbb
push
mov
xor
xchg
ror
sbb
dec
or
push
por
mov
jmp
outsl
inc
jp
rorl
or
aam
inc
push
scas
hlt
mov
pop
cld
pop
mov
addb
push
push
arpl
xchg
call
adc
shlb
mov
push
gs
mov
inc
mov
jg
call
stos
popa
les
sub
xchg
cld
push
dec
or
movsb
decl
or
push
mov
divb
jle
clc
scas
icebp
lods
xor
repnz
testl
loope
fwait
pop
mov
pushf
jle
lcall
int3
xchg
addl
adc
xchg
fcmovnu
call
push
jae
push
sbb
jl
add
or
mov
aam
inc
cmp
es
fiadds
push
pop
lds
xchg
mov
xchg
adc
loope
daa
sub
rolb
dec
add
mov
jle
cmpsb
ds
popa
adc
shll
pop
std
aad
test
mov
pop
cltd
sub
ljmp
dec
xor
or
push
mov
pop
mov
mov
xchg
hlt
jae
inc
mov
movsl
jbe
ja
adc
jmp
icebp
push
dec
mov
sub
roll
les
mov
push
andl
xlat
sbb
in
ds
arpl
mov
adc
test
sarl
jl
dec
sti
adc
jne
mov
dec
loopne
jne
push
jg
xchg
popw
stos
hlt
add
mov
jno
ja
pop
pop
or
mov
pop
mov
subl
gs
ret
aas
push
test
sbb
inc
inc
je
push
mov
in
aaa
dec
xor
fmuls
jnp
sti
fisubs
ljmp
mov
cmpb
jge
jne
pop
lods
mov
das
dec
std
rolb
cwtl
loop
cmp
shr
fildl
lods
movsb
rorb
aas
mov
fsubrl
mov
mov
sbb
notb
adc
pushf
sub
or
inc
pop
and
fisubrs
out
mov
into
dec
inc
outsl
test
sbb
subl
sub
movsb
or
inc
mov
push
mov
fsub
adc
les
adc
sub
pop
movsb
mov
call
call
add
loope
incl
fisubrl
or
adc
ret
cwtl
inc
inc
mov
add
insl
cmpsb
incb
jl
push
in
ds
xchg
mov
outsl
inc
ja
int3
cmp
xlat
or
outsl
adc
mov
imul
sbb
mov
jp
add
ror
pop
sbb
ret
aam
cmp
ljmp
addl
arpl
push
data16
jb
pop
filds
into
jl
xlat
pop
dec
adc
mov
jmp
mov
aam
dec
and
xor
cmc
aaa
jnp
movsb
fdivrl
inc
call
enter
or
mov
ret
outsl
fisubl
rcrb
scas
sub
loopne
movsb
sbb
dec
adc
inc
cmp
mov
pop
pop
cmp
pop
cmp
mov
cmp
lcall
jb
popf
rcl
in
mov
cli
les
push
test
xor
fstps
mov
ljmp
clc
add
insl
movsb
xor
jg
cmc
or
push
lds
stos
sti
xchg
fs
push
jle
sbb
xor
push
mov
stos
rol
gs
adc
adc
or
sbb
iret
cld
xchg
das
cmp
loop
jae
pop
xorb
arpl
pop
cmpb
loop
push
sarl
xor
cmpsl
lock
test
xor
cmp
icebp
jno
cmc
pop
sbb
cmovg
mov
inc
jg
pop
pop
inc
aaa
arpl
xor
pop
shll
outsl
scas
or
movsb
movsb
mov
push
rcll
js
xor
and
rcl
push
inc
stc
loop
insl
mov
jg
xchg
adcb
aad
call
lods
insl
or
jne
pop
xlat
pop
adcl
jmp
popf
rcl
sbb
out
push
xor
pop
inc
add
xlat
mov
in
aaa
xchg
push
int3
pop
ret
enter
daa
stos
sub
cmp
fsubl
push
inc
inc
dec
xor
aaa
dec
call
ficoml
mov
jbe
and
testb
inc
inc
mov
jg
push
or
mov
rorl
mov
ret
xchg
add
push
mov
hlt
es
je
js
push
dec
sbb
mov
dec
in
insb
mov
push
jle
mov
jno
mov
inc
rcll
test
daa
and
xor
and
pop
call
jbe
aaa
ret
adc
and
adc
pop
jl
or
lods
scas
pop
cld
mov
xor
outsl
xor
inc
mov
jno
sbb
and
push
mov
and
daa
into
lahf
fsub
lea
mov
add
cmc
test
fld
lds
xor
push
in
outsb
jnp
cltd
mov
push
push
les
fs
lea
sub
std
add
in
test
xlat
mov
push
cmp
xor
sub
xor
mov
and
push
das
mov
jmp
shrb
mov
data16
ja
inc
pop
adc
cmpl
fdivr
bound
enter
xor
stos
cmpsl
loope
jecxz
pop
sub
jecxz
add
xor
loop
aas
mov
dec
insl
mov
mov
aam
inc
xor
xor
data16
test
jno
addb
add
xchg
push
lods
std
movb
dec
imul
add
mov
xor
xor
test
cmp
pop
push
xor
push
and
sbb
adc
add
test
adc
sub
std
xchg
jae
jmp
ds
add
testb
cmpb
fistpll
arpl
lcall
mov
stos
cmp
int3
lcall
enter
rclb
fistpl
loope
mov
xchg
lods
pop
in
pop
insl
clc
add
push
arpl
sti
or
fcmovnbe
out
fcmovnu
leave
and
adc
mov
jle
mov
jo
loop
mov
jle
cwtl
xchg
inc
xchg
out
rcrl
outsb
mov
test
dec
aad
or
inc
popa
ret
lahf
filds
cld
in
mov
sbb
in
ret
mov
lods
jmp
lea
cmp
mov
fs
jne
inc
xlat
clc
ja
or
sub
fldenv
mov
xchg
jecxz
add
call
add
rcr
daa
and
mov
mov
mov
mov
mov
push
inc
dec
push
loopne
mov
xchg
xor
divb
outsb
and
scas
pop
call
loopne
shrb
rol
cmpsb
jmp
inc
sahf
jge
dec
dec
mov
xchg
andl
mov
push
ret
dec
shr
loopne
xlat
push
mov
or
pop
fcoml
jg
inc
push
cmp
or
push
frstor
sbb
or
cmc
sbb
dec
add
fwait
ds
or
inc
dec
xor
es
inc
pand
test
push
xor
les
scas
or
decl
add
inc
push
sub
lret
les
add
decb
rolb
leave
xchg
xor
daa
shll
pop
push
jle
inc
icebp
int
xchg
sub
das
aam
jmp
outsl
xor
jne
cmp
mov
mov
pushf
lret
mov
loope
es
pop
mov
sbb
pop
dec
cld
fsub
aad
or
js
sub
sbb
adc
cmp
push
mov
xor
jne
inc
cmp
pushf
aas
or
jg
push
rolb
xchg
inc
xor
push
imul
sti
popa
test
lods
lcall
fbstp
arpl
fbld
ret
or
push
iret
adc
jp
and
add
call
sbb
inc
insl
popa
mov
fld
or
adc
and
xor
cmp
inc
cs
test
add
mov
ja
lahf
enter
add
dec
fadds
push
mov
int
and
shll
cmpsl
inc
cs
sbb
mov
inc
jbe,pt
clc
add
sbb
aas
out
into
dec
inc
dec
push
mov
mov
lret
and
int3
add
xorb
jg
lret
sbb
movsl
sbb
std
lods
adc
sbb
ja
add
movb
ficoms
sti
dec
imul
push
cmp
movsl
hlt
sub
popl
xlat
sbb
adc
clc
mov
dec
test
mov
xor
pop
pop
jg
mov
jl
and
imul
cmp
out
dec
push
xor
mov
or
adc
dec
das
pop
xchg
sar
stos
push
jl
aaa
aad
rclb
cltd
ja
movsb
das
dec
xchg
aaa
and
push
movsl
sbb
jb
test
in
jmp
aad
add
cmp
pop
xchg
aam
in
fistps
xor
mov
leave
cmc
jbe
std
inc
cwtl
inc
push
test
cwtl
xor
ret
sbb
inc
cld
lret
jbe
call
add
lret
cld
add
add
mov
adc
outsl
jge
std
mov
das
dec
inc
or
mov
int
pop
enter
jo
mov
push
xlat
dec
pop
test
pop
sub
inc
or
movsl
pusha
and
mov
mov
cwtl
add
add
xor
pop
aad
and
clc
inc
jne
push
in
roll
arpl
outsl
fildl
pushw
or
js
jno
dec
rolb
pop
hlt
hlt
out
cmpsb
adc
cmpsl
jg
xor
jbe
dec
mov
cmc
ljmp
cmp
adc
inc
imul
mov
dec
cmc
and
pusha
jbe
and
fistps
push
std
lock
pop
or
and
in
mov
pop
ret
add
testl
xchg
mov
pushf
adc
mov
push
dec
inc
push
outsl
mov
add
mov
fnstcw
jle
roll
fdivp
out
dec
adc
outsb
loop
js
das
cmp
cld
stos
out
and
mov
push
inc
xor
fistpll
aas
test
push
jbe
mov
rcrl
mov
fndisi(8087
push
sub
sar
dec
sbb
sarl
jecxz
scas
push
ljmp
pop
push
gs
daa
dec
out
adc
push
mov
jg
sub
ret
and
and
out
jbe
stos
xor
out
lcall
cmp
test
mov
xor
jb
ja
insl
push
ss
mov
mov
pop
dec
cmp
mov
or
adcb
adc
lahf
push
pop
sub
xchg
ret
inc
sbb
imul
idivb
mov
dec
pop
and
adc
push
fcoms
mov
fmul
adc
fsubrs
insl
loope
aas
dec
xor
nop
fs
fnstsw
mov
add
lea
pop
adc
lcall
arpl
rol
adc
sub
sbb
mov
cmpsb
fcmovnb
pop
int
dec
in
test
jle
pop
mov
add
sahf
sub
pop
add
mov
call
pop
xlat
cmp
sbb
cli
es
xchg
loope
adc
jo
mov
mov
test
jo
xor
xor
xchg
adc
outsl
pop
jl
and
repnz
adc
ror
je
pushf
jne
jl
inc
ds
pop
dec
rcl
decb
movsl
adc
ljmp
sub
or
sub
and
cmp
sub
xchg
mov
fnstenv
or
loop
fcos
popa
sub
push
imul
movsl
addl
jo
mov
add
cmpl
lods
into
jnp
or
arpl
pop
jg
test
leave
call
xchg
mov
cld
mov
adc
pop
incl
push
inc
test
jge
pop
cmp
das
sbb
mov
fs
andb
cmp
add
std
inc
push
scas
cltd
sub
ret
cmc
and
pop
popf
and
jle
push
adcb
incl
cltd
pop
mov
push
in
lods
inc
aas
xchg
xchg
add
or
lock
sar
mov
fcomip
pusha
roll
scas
xchg
mov
adc
sbb
adc
sub
mov
add
and
daa
sbb
pop
sub
daa
clc
sbb
dec
iret
xchg
pop
dec
push
cmpsl
mov
cmp
arpl
xchg
push
cmp
sub
jle
add
adc
add
arpl
shlb
or
cld
flds
iret
adc
mov
pusha
adc
lods
or
push
adcl
pop
in
push
push
mov
sbb
inc
pop
int
mov
dec
aam
or
mov
push
stos
in
pop
ret
data16
je
pop
mov
enter
inc
xor
loop
addr16
sub
and
aaa
jle
arpl
scas
mov
gs
and
fnstcw
mov
scas
cmpsb
dec
test
test
ret
adc
insl
pop
mov
nop
or
outsl
adc
in
aaa
mov
int3
push
cltd
pop
jl
sti
mov
shll
dec
pop
push
inc
popa
inc
ljmp
or
jo
xchg
dec
cmp
mov
jle
repz
mov
clc
cmp
xchg
clc
sbb
jo
inc
imul
out
adc
pushf
repz
ret
dec
sbb
adc
ja
frstor
push
inc
pop
call
hlt
rcl
cmp
aad
pop
out
dec
fnstenv
xor
fildll
sub
mov
pop
icebp
out
sbb
mov
mov
push
rcpps
lods
push
push
std
fwait
mov
aam
cmp
or
sbb
sbb
inc
movq
mov
data16
or
fldt
adc
or
cmp
dec
in
mov
or
push
jnp
mov
mov
pop
mov
fst
ret
in
pop
or
adc
pop
int
repz
xchg
sbb
mov
mov
lds
fidivrs
adc
test
je
add
rolb
cltd
mov
outsb
mov
bound
cwtl
adc
hlt
insl
xchg
mov
cmp
jnp
xchg
xor
sub
dec
sti
inc
or
sbb
popa
mov
and
xlat
sbbl
jb
xchg
jle
fadds
je
jbe
pop
mov
movb
inc
adc
sub
pusha
mov
test
push
das
pop
cmp
xchg
addl
inc
mov
call
in
nop
adc
out
add
aas
jp
es
icebp
dec
fsubl
movsb
mov
jns
lea
cmp
cmp
dec
adc
dec
lds
comiss
jns
add
push
mov
flds
mov
or
and
sbb
in
in
jne,pn
ffreep
dec
sbb
xor
lods
int
mov
and
push
cmpb
repnz
cmp
fst
push
mov
sub
jg
outsb
jbe
in
pop
jecxz
adc
add
mov
leave
dec
push
fstpl
movsb
loop
cli
pop
mov
mov
dec
inc
data16
xchg
jg
pop
pop
mov
stc
jmp
mov
int3
fmull
stos
xchg
jmp
push
imul
cmpb
jbe
mov
push
xor
mov
push
mov
mov
inc
mov
out
scas
hlt
xchg
addl
loope
push
in
aas
fimuls
mov
aaa
push
push
pop
lock
jae
push
dec
push
adc
int3
cs
jg
pop
das
push
jb
jl
mov
rol
jb
inc
mov
sti
fildll
andb
ljmp
jmp
xor
or
jnp
lret
dec
push
imul
push
lods
faddl
or
or
das
inc
cmc
popf
ret
sbb
fwait
xchg
popf
pop
fistps
test
test
and
das
lds
cmpl
pop
mov
lahf
adc
xchg
pop
ja
sub
test
pusha
test
divb
aad
pop
xchg
pusha
ds
loopne
add
lods
xchg
add
push
bswap
dec
inc
add
adc
sub
pop
in
test
sub
pop
dec
adc
dec
lods
stos
lret
cld
xor
fistpll
xchg
mov
aaa
push
dec
or
das
adc
rorl
icebp
ret
push
jge
mov
into
cwtl
cmp
cwtl
mov
repnz
pop
clc
outsl
ret
or
jl
xor
mov
imul
daa
les
pop
and
shrl
mov
mov
or
js
inc
inc
xor
ss
loope
mov
cmp
scas
adc
and
sub
and
icebp
pop
clc
mov
in
fcomi
add
cmpsl
xchg
pop
and
subl
call
je
push
xchg
cmp
or
test
icebp
mov
jbe
loop
and
mov
inc
mov
cmc
pop
push
xchg
mov
jg
fs
dec
and
push
filds
adc
mov
xchg
roll
or
cli
fistpl
xor
inc
sbb
pop
xchg
fidivrs
push
hlt
lcall
xchg
add
inc
fdivr
cwtl
lods
sbb
andl
rclb
and
xchg
sub
adc
push
dec
cmc
fldt
inc
pusha
dec
std
adc
inc
enter
mov
cli
and
cmpsb
cli
lcall
jmp
push
scas
test
pop
cltd
inc
adc
mov
jne
loopne
movsl
and
les
xlat
push
jns
adc
in
lds
dec
xchg
lods
or
faddl
addr16
dec
fmuls
fldenv
or
cltd
or
mov
or
loop
aaa
clc
jg
adc
jle
mov
sub
pop
mov
cmpsl
and
jle
jne
pop
fsubs
mov
outsb
loopne
js
jecxz
push
cmp
les
ffree
sub
or
daa
push
xchg
jge
jbe
ljmp
sbb
fisubrl
xchg
push
sub
outsl
mov
mov
loope
dec
in
jle
test
arpl
das
fsubl
push
fnstsw
inc
mov
int
in
addr16
or
sbb
cmp
movsb
iret
mov
cmpl
mov
dec
sbb
sub
mov
adc
cmc
push
xchg
push
fildl
shll
ljmp
cmc
cmp
or
push
mov
and
dec
mov
ficompl
sub
test
or
decb
cmpsl
fs
rcrl
or
xchg
mov
or
xor
dec
jne
sbb
mov
mov
and
inc
ja
pushf
lea
in
push
jle
pop
frstor
cmpsl
cmp
repz
pop
aaa
std
sub
stc
movsb
push
sub
adc
cmp
mov
scas
cmp
dec
and
into
loope
fwait
and
pop
fwait
jmp
pop
cmp
adc
ja
mov
orb
add
popf
mov
pop
fs
cmp
aad
mov
pop
push
sbb
dec
push
pop
xchg
js
ss
mov
add
jecxz
pop
mov
dec
fdivrp
pop
movsb
test
rolb
loope
lock
add
movsb
sub
dec
xor
subb
outsl
leave
shll
mov
lds
in
ficompl
xrelease
mov
lea
es
push
int
gs
mov
fstl
movsl
test
outsb
lcall
add
ficompl
shl
dec
sbbl
ret
test
lods
sti
hlt
lea
add
add
push
int
in
fidivrl
mov
dec
xchg
push
out
aam
or
fstpt
pop
subl
incl
rorl
mov
scas
inc
sbb
xor
cld
icebp
and
inc
pop
mov
ja
pop
fsubrs
hlt
push
ds
or
push
cmp
xor
testb
pop
int3
stc
outsl
jp
xchg
scas
test
out
xlat
inc
xchg
lds
xor
adc
xchg
incl
dec
clc
out
push
add
add
outsl
pop
je
mov
mov
out
or
xor
ja
and
fisubrs
arpl
call
pop
mov
jp
mov
jns
test
hlt
mov
cmc
dec
mov
cld
lcall
pop
inc
mov
jae
add
and
adc
xchg
outsb
jp
mov
ja
lcall
ficomps
adc
xor
push
out
sti
loopne
jbe
push
int
fistpll
mov
sbb
and
fsub
roll
xor
hlt
ja
leave
push
repnz
dec
sbb
sbb
js
jge
outsb
xorb
inc
mov
sbb
push
cld
xor
jecxz
xchg
sub
add
in
bound
lods
dec
hlt
xchg
cld
lds
push
hlt
mulb
in
js
fildl
or
and
lock
jge
test
mov
add
orl
lock
les
mov
fimuls
xchg
cmpsl
repz
or
ret
lea
je
dec
mov
mov
stc
aad
dec
gs
jno
push
in
dec
or
push
lods
cltd
in
or
test
mov
stc
test
std
aad
pop
mov
push
ljmp
xor
lahf
pusha
jmp
inc
dec
dec
cmp
push
and
outsb
adc
loope
jno
mov
xlat
sbb
fidivl
adc
and
nop
sbb
mov
je
or
sbb
fcoml
inc
or
cmp
les
dec
jno
fcmovbe
adc
xchg
xchg
hlt
jmp
cmc
pop
or
mov
movsb
and
add
fsubrs
cmp
pop
inc
inc
sub
cmp
sub
xor
iret
mov
test
xor
mov
bndstx
stos
insl
std
mov
inc
aad
cwtl
pop
push
xor
cli
mov
rolb
rorl
sub
sub
push
aas
pop
adc
or
lcall
mov
inc
jg
add
shll
jae
and
lods
mov
sbb
sub
mov
adc
cs
lahf
cwtl
ret
push
cld
std
xchg
nop
adc
jg
jecxz
std
inc
adc
insl
out
xchg
pop
xchg
adc
lcall
push
das
sbb
ret
jmp
dec
add
test
mov
fwait
sbb
inc
mov
test
rclb
pop
scas
repnz
dec
mov
add
int3
nop
pop
adc
sub
std
negb
dec
imulb
mov
xlat
popf
popf
adc
in
daa
pop
cmpsb
jns
and
inc
sub
push
shrl
xorb
mov
cmp
add
add
sub
daa
faddp
rorl
sbb
push
into
lock
lock
xchg
xchg
dec
jl
pop
jg
and
in
out
mov
out
loop
lret
movsb
mov
popf
popa
rorl
bound
and
andl
fcomi
mov
push
and
lds
push
aam
ss
add
or
aad
cmc
push
call
push
sbb
xlat
push
and
out
movsl
mov
xor
repz
jecxz
mov
inc
je
cmp
jne
fimuls
lods
insl
pop
mov
add
std
loop
and
loopne
dec
and
outsl
or
fdivs
jns
lods
cmp
ja
testb
leave
jle
dec
adc
mov
sbb
adc
push
cmp
inc
inc
mov
xchg
xor
mov
dec
cmp
jb
sbb
mov
in
sbb
mov
sub
aam
clc
pop
pusha
cmpsb
or
xorb
mov
adcb
sbb
jnp
mov
js
add
testb
xlat
rorb
xchg
daa
mov
cwtl
jno
mov
je
or
fwait
xchg
test
dec
sub
fisttpll
sahf
jno
mov
add
add
sub
fdivs
xchg
jle
hlt
dec
sub
es
inc
je
inc
mov
add
adc
jl
fisttpl
call
stos
ret
adc
and
and
dec
lahf
imul
mov
sub
sbb
pop
arpl
les
cmc
cltd
pcmpeqd
repnz
and
mov
addr16
psraw
mov
call
mov
loope
mov
xor
insl
xor
jmp
ficoml
jmp
outsl
pop
jg
sub
mov
lods
and
fucomip
add
xchg
xchg
and
xchg
ss
mov
mov
xchg
rorb
pop
cmc
in
inc
and
test
mov
mov
repz
inc
clc
les
mov
adc
jbe
mov
mov
pop
sub
mov
movsb
mov
xlat
or
test
mov
push
mov
es
sarb
pop
push
mov
mov
je
mov
or
popa
sbb
mov
mov
and
and
jg
mov
test
or
inc
cmp
ret
xorb
jg
mov
lods
inc
call
insl
cmp
icebp
lea
adc
or
cmpsl
dec
addr16
lcall
push
loopne
aad
orl
lods
xor
pop
mov
and
mov
fs
sbb
test
je
loop
mov
js
jo
push
cmp
and
jae
and
mov
xchg
mov
jnp
testl
scas
sub
das
aam
ret
dec
push
or
lcall
stos
jmp
inc
and
mov
jo
dec
test
xchg
notb
mov
pop
idivl
mov
mov
mov
addb
xchg
cmp
or
adc
or
das
push
pop
mov
push
push
test
mov
rolb
movsb
testl
enter
sbb
xor
test
adc
nop
ret
incl
dec
mov
pop
pop
loope
jmp
dec
jmp
jmp
push
in
ja
sbb
cmp
ret
in
sub
mov
fldl2e
add
mov
and
push
adc
or
repnz
adc
stos
cmp
adc
call
jecxz
mov
xor
inc
aas
add
fbstp
sbb
sub
in
mov
rcrl
jno
cmp
cmp
mov
adc
jo
push
add
shl
adc
scas
cmp
or
adc
mov
dec
xorb
sbb
insb
subb
sub
dec
sar
xchg
outsl
and
loope
test
in
js
mov
dec
or
sti
roll
out
shlb
fcomps
cld
push
or
cmp
ja
or
test
and
cmp
push
and
popf
push
mov
ret
dec
shll
repnz
mov
mov
push
jg
jecxz
rclb
cmpsl
sti
mov
les
cmpsb
fiaddl
sub
dec
pop
mov
cld
mov
jo
cmc
pop
inc
xchg
inc
cmp
mov
popf
push
fsubs
and
ja
mov
clc
mulb
incl
xchg
leave
mov
sub
test
out
out
aaa
pop
repz
int
rorl
mov
pop
ds
inc
push
cld
leave
add
adc
insl
xchg
out
push
xor
and
pop
int3
add
xchg
pop
repnz
add
fisttps
enter
sub
shll
mov
movsl
or
jbe
mov
and
andb
mov
iret
adc
push
mov
int
rorl
leave
test
repz
adc
fwait
std
sbb
outsl
iret
arpl
add
pushf
mov
or
repz
sbb
addl
sbb
ja
loop
sbb
mov
fdivs
sbb
push
mov
int3
xchg
dec
add
mov
int
mov
sbb
shll
dec
push
scas
movsb
xchg
xchg
mov
sub
mov
push
sub
sub
sbb
pop
mov
repz
cmp
and
sub
stos
add
or
adc
push
lds
rolb
aam
stos
jb
out
sub
push
sti
js
mov
ret
and
dec
jo
addr16
sub
push
cmp
lock
ds
inc
add
and
fs
fiadds
mov
mov
jb
or
sbb
dec
adc
sub
mov
or
mov
aam
push
sbb
std
dec
jecxz
into
into
and
mov
cltd
or
leave
mov
js
sti
cmpsb
mov
popa
pop
pop
or
xchg
imul
and
aaa
out
sbb
push
adc
mov
xchg
mov
adc
je
les
test
push
push
pushf
ja
push
repz
jecxz
daa
jp
jg
xor
rcrb
xchg
ret
cmp
into
scas
cmp
insb
mov
lret
stos
mov
loopne
ret
xchg
mov
js
js
add
and
jno
test
fnstcw
jb
lahf
inc
pop
dec
adc
testl
lods
mov
hlt
pop
or
out
add
push
adc
cmp
jp
fcmovne
test
mov
sub
les
jecxz
or
es
or
or
and
stc
sub
sti
adc
push
sarl
push
mov
fbstp
invd
sub
xchg
roll
mov
aas
pop
push
hlt
sar
fstps
sub
add
mov
jp
addr16
mov
push
add
push
loopne
xchg
adc
inc
jle
push
jno
mov
pop
mov
add
or
out
add
inc
push
push
jno
lock
pop
inc
jne
and
mov
inc
popa
or
xor
jnp
mov
mov
lea
insb
adc
cmpsb
add
rorb
pop
mov
out
leave
push
dec
pop
inc
insl
jmp
sub
test
mov
cs
sbb
js
mov
stos
roll
cltd
rcr
mov
outsl
xor
mov
inc
sahf
inc
int3
pop
mov
pop
lea
pop
fwait
inc
idiv
ret
inc
jmp
or
cli
inc
insb
jl
mov
push
or
dec
cs
jno
lcall
or
insl
mov
xchg
scas
or
inc
ja
fidivrl
mov
xchg
int
mov
sbb
jne
lret
add
push
adc
mov
movsl
adc
loope
dec
into
push
mov
or
lret
sbb
dec
inc
ret
insl
clc
xchg
push
inc
repnz
test
sub
sbb
hlt
out
mov
lret
loope
aam
clc
out
rcr
rclb
push
add
cwtl
ss
sbb
dec
jo
inc
xor
dec
int3
pop
inc
popa
jno
sbb
dec
and
sub
adc
testb
pop
jl
xchg
mov
or
js
add
dec
or
lret
sbb
nop
popf
std
or
popf
les
adc
push
mov
cmp
and
mov
orl
bound
dec
pop
loopne
fistpl
fbld
iret
cs
adc
jb
in
stos
jecxz
lahf
push
roll
pop
aam
call
lock
call
mov
iret
popa
jge
clc
in
xor
addl
roll
das
in
lahf
mov
scas
out
jo
std
mov
cmpsb
inc
in
mov
stc
iret
push
xor
push
mov
sub
mov
jmp
loopne
aas
gs
mov
adc
data16
pop
xchg
das
mov
lret
sti
adc
add
es
jge
xor
jg
loopne
mov
fidivs
sbb
movsl
mov
mov
mov
aaa
jbe
sub
pop
fs
inc
pop
sub
shll
movsb
mov
xchg
es
adc
mov
cmp
pop
inc
and
retw
mov
out
fisubrl
mov
or
push
pop
xchg
cmp
andb
xchg
popf
push
adcb
xor
fstpt
xor
sbbl
adc
mov
push
mov
cwtl
sbb
push
add
pop
fidivl
inc
fimuls
mov
jl
fwait
push
fnsave
push
fbstp
xchg
jne
mov
push
push
dec
mov
push
inc
add
dec
xchg
shll
push
mov
sbb
fadd
pop
jl
mov
test
xlat
xor
ja
mov
xor
inc
icebp
cmp
test
xor
ds
mov
ret
movb
les
inc
sarl
xchg
mov
mov
and
jnp
lock
cmp
test
push
dec
sbb
loopne
fsubs
sub
push
pop
cld
xchg
jns
das
mov
scas
push
shl
sti
push
mov
mov
xor
insb
subl
lods
fsubr
jmp
roll
add
ret
lds
ss
stc
repz
imul
mov
mov
aas
in
jb
push
pop
xor
mov
push
push
jne
push
jle
outsb
sbb
les
adc
sub
sbbl
popf
push
mov
lock
inc
aad
and
xor
jnp
stos
xchg
js
fistpll
je
xchg
test
sub
in
jg
sbb
dec
pusha
pop
xor
jle
sbb
mov
and
outsl
aaa
sahf
sbb
mov
outsl
push
notl
ret
adc
and
xchg
popl
cmp
or
adc
sbb
pop
jp
mov
or
cmp
fidivl
push
mov
or
inc
fisttpl
push
jge
cmpsl
xchg
daa
mov
clc
aaa
cltd
test
mov
and
xchg
xchg
jno
sahf
adc
and
sbb
ret
push
ret
fwait
push
cmpsb
push
dec
cmpsl
pop
cmpl
push
xor
or
ljmp
ss
lahf
mov
mov
lahf
sub
cmp
popa
pop
pop
mov
inc
cmc
xchg
aam
es
mov
cmc
leave
dec
pusha
and
mov
mov
lods
test
and
data16
inc
jnp
xor
and
sbb
dec
pop
pop
icebp
incl
daa
inc
mov
push
fisttps
fidivs
mov
cmpsl
pop
or
notb
push
cmpsb
ret
aad
xor
jecxz
dec
push
cld
ret
movl
sub
add
pop
pop
mov
inc
mov
mov
inc
cld
jle
cli
js
mov
test
pushf
or
cmp
out
aad
icebp
pop
xor
and
adc
mov
and
loope
decb
ja
pop
mov
ja
cmp
out
xchg
mov
sbb
adc
shlb
push
lcall
in
insb
ja
popa
mov
rorb
out
xor
cli
mov
mov
jnp
push
mov
std
and
test
fldenv
mov
out
cwtl
enter
inc
shll
cld
or
xor
addr16
sbb
cli
daa
mov
xor
movsl
mov
mov
and
sbb
push
push
xor
cmpsl
dec
xorb
cmp
call
jns
ds
and
rclb
jbe
movsl
outsl
pop
xor
mov
pushf
cmp
dec
xor
stos
outsb
std
fnstenv
ds
movsl
mov
incl
scas
sub
gs
cmpsl
addb
inc
lock
orb
add
ret
push
rclb
test
aad
push
xchg
jbe
jbe
cmc
push
out
inc
mov
mov
xchg
mov
mov
xchg
xchg
jno
mov
xchg
and
pop
std
out
scas
xchg
ret
and
fimuls
or
add
jno
push
loop
cli
and
xchg
aam
lods
aas
jns
xchg
das
or
repz
cs
mov
outsl
mov
push
mov
mov
aam
dec
lock
mov
sub
jge
push
repz
lock
dec
jl
call
cmp
mov
push
xor
inc
dec
adc
xchg
push
lea
popl
pop
daa
push
js
jno
xchg
sbb
mov
jnp
or
inc
ds
inc
push
xchg
and
std
or
and
xchg
pusha
in
lea
lret
jne
out
add
loopne
mov
movsb
pop
imul
mov
outsb
adc
pop
pop
lea
lods
icebp
das
push
rclb
push
ljmp
push
mov
les
jl
out
or
mov
and
pop
sarb
add
daa
lods
xor
jae
push
dec
fsubrs
pop
push
pop
test
sbb
mov
dec
mov
mov
jp
test
shll
idiv
outsl
jg
cmc
lret
dec
pop
adc
sbb
xchg
bound
ret
imul
push
movsl
cmp
sbb
push
xor
sbbl
hlt
xchg
addl
lret
cmp
push
cld
xchg
adc
lahf
cmp
std
das
dec
cmc
mov
lds
ficoms
push
loopne
xor
sbb
mov
sub
les
xchg
inc
fcoms
jne
xchg
mov
in
pop
sbb
jns
and
push
in
subl
ret
lds
das
das
rorl
sbb
xchg
fwait
jmp
into
inc
push
in
xlat
pop
push
cmp
sbbb
sbb
xchg
lea
bound
popf
xchg
jge
out
inc
push
ret
pop
jecxz
imul
sti
dec
aaa
sub
inc
adc
or
in
xchg
xor
xchg
scas
icebp
sahf
outsl
mov
add
lcall
loope
notl
mov
nop
sub
or
dec
orb
pop
lds
inc
mov
pop
decb
sbbl
cmpb
pusha
adc
jmp
ljmp
adc
cmp
movb
dec
loopne
inc
aas
cmp
idiv
inc
jno
sub
add
clc
jle
jb
adc
inc
iret
mov
pop
jnp
mov
dec
scas
xchg
push
imul
sub
sbb
xor
cmpsl
xor
pop
inc
mov
push
lcall
gs
std
call
popa
cs
repnz
sbb
fxch
daa
mov
js
std
aaa
xor
sbb
xlat
mov
movlps
or
shlb
ret
int
or
xor
shll
inc
and
call
gs
and
xor
cmp
out
mov
xor
cmp
add
insb
cmpsb
cs
loop
sub
sahf
adc
xchg
icebp
sub
pop
and
movsl
aam
mov
jns
push
fisttps
es
or
add
call
cmpsb
inc
outsl
scas
mov
xchg
outsb
mov
in
jb
out
inc
mov
popf
mov
cmc
mov
sub
iret
and
ljmp
xor
sbb
inc
cmc
ret
or
lock
jns
scas
push
dec
adc
sbb
loope
xor
add
insl
jg
mov
ljmp
add
inc
popa
das
pusha
ljmp
lahf
ljmp
std
mov
push
fcompl
inc
rolb
pop
lods
mov
xchg
sub
mov
dec
jle
popl
inc
clc
jp
aaa
adc
sahf
sbb
pop
fs
int
mov
mov
mov
int3
mov
rcrl
int
lret
add
sbbb
mov
xor
mov
repz
cmpsl
xchg
subb
mov
outsb
ds
or
loop
push
out
pop
frstor
insl
add
lock
ror
push
fdiv
adc
sbb
cmpsl
nop
adc
mov
nop
xor
jg
jecxz
scas
lret
mov
adc
popa
mov
push
push
clc
mov
pop
mov
out
sbb
dec
in
aas
xchg
cmp
test
push
aad
push
or
xchg
js
jge
dec
mov
dec
enter
mov
add
scas
aaa
pop
aaa
ljmp
xchg
nop
stos
je
arpl
mov
xchg
sbb
xchg
mov
andl
sub
hlt
ds
cltd
out
add
outsl
cmp
cmp
lea
out
mov
jl
jmp
mov
pop
repnz
call
jmp
adc
dec
fstps
sub
stos
sub
mov
push
mov
add
mov
xchg
insl
dec
pop
push
fnsave
mov
dec
push
outsl
push
jecxz
mov
jmp
lcall
fcomps
jp
imul
inc
add
loopne
mov
sub
sbb
or
rolb
push
push
stos
mov
adc
mov
pop
xchg
mov
inc
daa
cli
nop
mov
pop
loop
sbb
sbb
outsb
in
inc
jo
dec
mov
inc
dec
cmpsb
sbb
sti
cli
test
cli
xor
add
iret
mov
mov
hlt
fwait
es
test
movsl
or
cmp
les
mov
mov
sbb
mov
sbb
fisubrs
test
mov
dec
push
imulb
inc
mov
ljmp
inc
mov
lds
leave
pop
mov
data16
out
pop
xor
push
push
sbb
cmpsl
or
fchs
sbb
outsb
jb
xchg
push
insb
out
and
fs
bound
jle
out
loop
aam
test
mov
cmp
stc
js
pop
mov
jle
hlt
movsl
movsb
push
cld
sbb
push
xor
and
cmp
xchg
xchg
cmpl
lcall
jno
les
mov
cmp
loopne
leave
cmp
and
neg
sbb
mov
cmc
dec
and
sub
mov
pushf
xor
push
ret
lods
fmull
add
ljmp
sbb
xchg
bound
das
jmp
cmpsl
enter
or
pop
pop
sbb
out
icebp
das
jg
cltd
jmp
jg
test
sti
popf
addr16
inc
pop
jmp
insl
sub
inc
out
mov
rcrb
mov
rcl
xor
adc
pop
fwait
add
das
inc
jmp
push
pusha
cmp
add
sbb
or
into
mov
out
sub
inc
cld
adc
enter
mov
sub
mov
and
arpl
jl
fldl
fwait
rcrb
scas
inc
movb
adc
fnstenv
inc
dec
ret
cld
sub
movsb
jno
mov
fwait
dec
push
pop
jg
push
or
js
or
loope
mov
decb
movsl
cmp
push
xor
cwtl
cmpb
test
rcll
mov
sar
pop
insl
xor
fmull
mov
cli
mov
mov
jne
roll
cltd
add
fistpl
je
cld
into
add
neg
adc
aas
mov
mov
cmp
addr16
rcl
push
addr16
test
pop
rcrl
inc
pop
add
imul
mov
pop
lock
cli
hlt
loope
ds
ds
mov
popf
pop
dec
outsb
pop
or
adc
loope
inc
mov
cwtl
inc
cs
hlt
xchg
xor
imulb
cmp
bound
in
in
xor
mov
sbbb
subb
cmp
pop
cltd
sbb
mov
aad
loope
add
sbb
cmpsl
ja
pop
fsub
mov
push
outsl
xchg
out
imul
pop
call
aaa
sub
into
jmp
cmovne
adc
xor
das
repz
push
fidivrl
mov
call
xor
test
aad
rclb
clc
scas
mov
shll
xchg
cwtl
sbb
incl
dec
popa
mov
fs
sbb
fistpl
pop
sbb
movb
out
dec
or
loope
pushl
iret
rorb
mov
aad
xor
adc
in
fildl
xor
mov
mov
jecxz
sbb
rcr
add
dec
int
xorb
mov
jbe
push
nop
jge
or
mov
aad
out
jno
xor
inc
fs
add
cltd
repnz
lods
mov
mov
push
daa
pop
and
lods
call
arpl
xchg
mov
dec
aas
stos
fidivs
adc
xlat
add
sti
push
cmp
sbb
cld
xchg
mov
xchg
xchg
aas
fsubr
das
dec
rorl
lahf
mov
ret
add
inc
je
shlb
mov
stos
mov
lods
outsl
and
mov
pushf
dec
std
inc
or
pop
out
test
sub
sti
or
insb
add
addr16
pushf
arpl
xor
lods
adc
jnp
mov
adc
mov
lcall
mov
in
add
dec
sub
das
je
mov
lea
sub
das
adc
mov
xchg
test
inc
repz
jp
testb
movsb
or
nop
clc
mov
aad
jge
sbb
dec
sbb
out
rorl
mov
adc
mov
paddw
imulb
push
dec
into
pop
sbbl
push
mov
cmp
or
fs
push
call
dec
mov
cmpsl
pusha
jne
rcrb
mov
mov
cmp
cmp
ds
pop
xchg
lahf
or
push
mov
test
jmp
cli
mov
aas
adc
in
lcall
sbb
mov
or
and
mov
lds
incl
sbb
sbb
and
call
inc
and
inc
insb
jecxz
jge
mov
test
fimuls
push
cmp
andb
cmp
inc
jp
mov
inc
sbb
fs
cmp
jg
inc
mov
mov
jns
adc
sbb
push
cmpsl
test
incl
or
ss
mov
mov
mov
pop
mov
xchg
inc
dec
adc
mov
push
jne
cmp
jae
loope
imul
mov
push
and
push
enter
inc
xor
sub
and
sub
sahf
fidivrl
pop
inc
lods
and
jne
jle
rorb
jmp
test
inc
jno
sub
jge,pn
loopne
scas
fmull
pushw
xor
call
ds
andb
std
add
and
out
mov
insb
pop
cli
xor
mov
pop
or
movsb
mov
dec
jno
lret
pop
ljmp
movsb
pop
mov
ret
cmp
jns
sbb
jbe
and
push
adc
loop
in
jb
loopne
and
push
mov
addl
loope
push
aad
pop
push
mov
dec
daa
loop
jge
mov
leave
sbb
adc
je
pop
xchg
or
or
inc
mov
pop
jmp
test
push
and
pop
outsb
mov
mov
fsts
nop
inc
subb
mov
into
cli
inc
mov
cmc
xlat
pop
mov
push
iret
lea
les
xchg
jmp
daa
rcl
rorb
loope
pop
mov
jg
shll
decl
pop
fildll
or
add
jb
loop
push
lods
lret
mov
imul
mov
fnsave
or
xchg
popa
out
loop
mov
sbb
leave
cmp
loopne
pusha
jle
fisttpl
pop
scas
rorb
stc
dec
sbbb
orb
stos
sahf
out
jns
pop
test
mov
dec
cld
pop
pop
mov
pop
push
cltd
xor
out
aam
stc
pop
mov
sbb
in
outsl
cli
or
sub
cs
sub
shll
add
pop
dec
fmul
insl
cmp
cli
mov
scas
or
cli
xchg
push
stos
pop
js
shr
js
cmp
dec
push
fstps
in
mov
push
sub
mov
aaa
cltd
xchg
clc
and
mov
sbb
xor
mov
lcall
decb
add
lret
and
sbb
sub
call
dec
imull
loopne
cmpsl
loopne
push
sti
mov
lock
cld
adcl
jmp
loope
adc
cmpsb
inc
dec
std
jae
clc
ja
jl
hlt
les
adc
fwait
jle
daa
hlt
sbb
popa
cmp
incl
outsl
cs
dec
out
adc
push
xchg
pop
mov
dec
cs
stos
mov
inc
push
loope
xor
xor
clc
es
inc
gs
mov
mov
shrb
xor
lahf
cli
lods
inc
fadds
push
je
in
xchg
cmpsb
loopne
mov
mov
fildl
mov
xor
mov
cmpsb
loop
inc
adc
jg
jle
jbe
mov
into
cmp
orb
mulps
dec
pop
sti
xchg
in
jl
mov
fsts
jg
test
pop
pop
flds
push
and
cwtl
insb
jmp
mov
cmp
jb
xchg
mov
dec
fwait
and
ficoml
lahf
sbb
in
add
mov
ds
add
pop
jbe
fstps
pop
in
jbe
cmc
int
outsl
js
stc
popf
push
aam
sarl
fwait
ret
clc
pop
pop
fisubrl
dec
shll
jp
push
sbb
push
lcall
pop
or
xchg
lahf
push
sub
cmpsb
out
dec
xor
jbe
mov
inc
mov
shrl
cmp
outsl
ja
add
jo
hlt
lcall
mov
pop
adc
shr
and
pop
inc
out
xchg
mov
pop
and
data16
pushf
or
adc
xchg
fnstsw
or
stos
xrelease
clc
insb
das
andl
or
dec
cld
add
je
xchg
icebp
inc
in
dec
pushf
call
mov
rolb
and
loop
dec
outsl
daa
ret
mov
shl
pop
xchg
cmp
pushl
decb
dec
daa
or
add
jl
and
jle
outsb
stos
lahf
mov
xor
adc
add
fldcw
movsl
sub
out
or
ret
sbb
enter
fistps
mov
mov
adc
mov
mov
dec
scas
pop
mov
loope
pop
das
je
mov
pop
push
lret
mov
jecxz
pushl
mov
jne
push
cmp
or
mov
aas
addb
mov
rolb
xor
mov
pushl
inc
adc
or
test
or
test
mov
fiaddl
mov
jge
movsl
xlat
inc
call
cltd
fwait
push
xlat
hlt
outsl
je
nop
xor
or
mov
xchg
stos
push
fmull
mov
jb
adc
push
lea
adc
sbb
mov
pop
stos
xchg
xchg
mov
lahf
adc
cmc
push
out
std
and
divb
sub
fwait
and
sahf
daa
cli
jb
sbb
adc
inc
aad
mov
push
incl
cmp
lods
or
insl
arpl
xor
pop
rcl
cmp
adc
push
clc
push
xor
xor
pusha
pop
mov
sbb
outsb
cs
and
xchg
imul
nop
into
jo
adc
add
jg
cli
and
sub
sub
jo
enter
pop
or
inc
addr16
sahf
push
mov
xchg
rclb
or
push
andl
leave
mov
leave
mov
pop
jmp
sub
call
jg
push
xchg
inc
dec
shrl
pusha
not
fcmovbe
jno
bound
mov
mov
aad
xchg
popa
test
test
cmc
aaa
loope
int3
in
out
sub
add
xlat
leave
cmc
pop
cld
push
add
call
lahf
and
ret
ljmp
inc
out
orb
hlt
mov
aad
inc
arpl
xchg
bound
sbb
in
int
lock
adc
mov
sti
lcall
mov
ss
adc
loop
movsb
push
rolw
in
jnp
in
in
clc
hlt
inc
repnz
cwtl
add
es
mov
dec
mov
cmp
fisttpl
add
or
pop
into
fistps
mov
adc
cmpsl
stos
jne
insl
pop
adcb
lods
xor
sub
xor
cwtl
cs
lahf
out
adc
inc
xor
aaa
mov
mov
jge
out
or
sbb
ret
pop
ds
std
xor
call
or
lea
mov
fwait
pop
repz
or
and
jp
adc
push
in
xchg
pop
cmp
rol
cwtl
xor
ljmp
test
loop
xor
mov
sub
xor
inc
scas
adc
pop
mov
rcrb
xlat
js
fildll
jg
pop
sbb
pusha
xchg
rcrb
sti
rcrb
sbb
and
sbb
jno
inc
and
mov
neg
mov
xor
pop
xor
stos
jmp
cmp
gs
xor
lds
xchg
clc
sbb
icebp
mov
pop
and
andb
rol
inc
or
jge
pop
jo
and
mov
int
jns
sbbl
scas
adc
adc
push
dec
or
mov
pop
xchg
push
jle
lret
das
mov
mov
adcb
aad
aaa
inc
sub
add
mov
outsb
inc
lods
mov
mov
xchg
mov
inc
inc
xchg
mov
push
rorb
call
sbb
das
mov
adc
jo
xor
popf
jbe
or
lods
ret
xor
iret
mov
dec
pop
das
push
add
jge
cmp
and
cltd
push
add
xor
dec
rorl
mov
mov
inc
das
faddl
mov
subb
inc
pop
mov
mov
adc
in
sub
xchg
sub
popa
xor
dec
aad
xchg
add
cmp
or
sti
xor
lds
mov
or
aas
sbb
add
add
loopne
fists
jl
stos
jno
pop
jno
mov
mov
or
push
mov
sarl
xor
mov
sub
xor
sbb
adc
idivl
fs
popa
cmp
jg
call
ljmp
roll
push
cmp
sbb
out
clc
sbb
fists
sbb
lock
lea
add
scas
incb
pop
mov
cmp
movsl
xchg
aam
movsb
pop
scas
pop
out
pop
fidivrs
lea
dec
rcl
xchg
sub
or
sahf
ja
cmp
lock
movl
aas
ja
push
repz
push
call
ret
add
push
and
and
sub
jle
int3
imul
sbb
loopne
out
xlat
daa
insl
mov
inc
and
mov
enter
push
push
rolb
pop
add
add
jl
push
mov
add
out
es
inc
icebp
mov
test
fwait
cmp
cs
clc
cltd
jg
call
mov
dec
and
pop
lods
mov
clc
push
sbb
mov
pop
in
popa
scas
xor
ret
pop
addl
lock
jp
in
sbb
cwtl
push
sub
lds
xchg
clc
rolb
shll
inc
adc
test
mull
adc
mov
jl
xchg
or
pop
pop
adc
sub
cmp
sub
lock
pop
testb
or
xchg
and
and
sbb
mov
dec
mov
addr16
and
in
pop
popf
mov
out
test
sarl
xchg
mov
test
mov
call
testb
scas
sbb
pop
mov
cmp
fwait
repz
out
jmp
sub
jno
jge
pop
mov
fisubrs
jo
enter
jge
ljmp
sub
xchg
in
jo
xchg
pop
add
lds
jl
loope
pop
pop
mov
jmp
inc
aas
pushf
ret
movsl
jbe
cld
sub
mov
inc
data16
sub
sub
cmc
daa
sbb
jg
imul
iret
pop
das
js
push
pop
push
addr16
mov
adc
in
pushl
jns
pop
cs
dec
pop
rcrb
push
mov
addr16
push
and
mov
ret
push
inc
inc
je
adc
jbe
cmp
sub
ret
stos
fcomp
loop
and
pop
call
mov
mov
sbb
sbb
bound
shll
fstpl
lcall
in
and
jecxz
adc
scas
cmp
fstpt
and
shl
js
jnp
cmpsl
movsl
lahf
jo
sbb
sbb
inc
popf
inc
jl
mov
push
aad
iret
pusha
pusha
xchg
lods
jge
pop
adc
xlat
mov
xorb
je
pop
fildll
push
xor
ljmp
jnp
loopne
push
sbb
cmp
nop
adc
test
mov
ds
mov
fistl
inc
push
mov
mov
sbbl
adc
mov
xorl
pusha
sub
mov
scas
pop
jns
mov
mov
xchg
or
cmc
mov
cld
sbb
test
rcll
pop
xor
sbb
mov
dec
data16
push
jp
in
or
aas
or
imulb
in
xchg
or
add
clc
sub
inc
push
sahf
les
push
or
daa
inc
addr16
out
sub
test
dec
mov
std
jmp
or
mov
inc
xchg
test
sbb
bound
mull
sbb
dec
fildl
cld
mov
loop
stc
jl
and
ds
mov
sarl
mov
iret
std
inc
xor
mov
les
mov
inc
fcoml
call
push
stos
pop
clc
loop
aad
push
stos
xchg
rcr
cmc
adc
jae
es
clc
negb
dec
xor
dec
test
sub
and
mov
jnp
and
mov
jmp
mov
das
xchg
push
mov
xlat
jge
pushl
mov
cli
and
inc
push
sub
add
adc
outsl
mov
cmp
int3
mov
pop
imul
cmp
dec
fldenv
repz
dec
jmp
dec
xchg
xchg
pop
mov
pop
xchg
xchg
rolb
add
call
mov
fisttpl
sub
repnz
mov
xchg
push
mov
mull
ret
cld
aad
jl
cmpsb
jo
mov
cld
mov
je
movsl
enter
mov
lock
iret
sub
je
jno
sub
imul
jbe
adc
sub
mov
sarl
movsb
or
sub
jge
lock
cmp
xchg
push
cmp
xlat
dec
imul
cmpb
xorl
push
lock
pop
fcmovnb
sbb
jae
sbb
incb
mov
push
test
cmp
lods
and
insl
sub
je
dec
sub
das
pop
lods
mov
mov
push
jns
sub
jmp
mov
inc
outsb
inc
imul
mov
shlb
shlb
loopne
arpl
add
lret
xchg
test
fdivs
mov
in
dec
shll
mov
add
and
pop
sub
xchg
inc
and
cmp
aaa
aaa
popf
icebp
jle
mov
mov
sbb
sbb
dec
mov
push
pshufw
cmp
add
inc
xor
mov
stc
or
cmpl
int
inc
adc
mov
shl
mov
mov
push
nop
fmuls
fdivrl
cmp
jb
push
xchg
xor
repz
sbb
lods
xchg
xchg
xor
dec
adc
sti
inc
movsl
xchg
jnp
mov
or
mov
mov
push
filds
pop
mov
dec
fisttpll
jno
cwtl
mov
popf
arpl
and
movsl
dec
push
dec
mov
fists
push
inc
orl
push
jbe
cmp
mov
out
and
cmp
xor
sti
push
es
add
pop
test
mov
sub
test
inc
gs
bound
jecxz
loop
lret
adc
aam
dec
addr16
sarb
insl
test
dec
jge
or
xchg
push
push
ds
ds
and
int
push
xor
xchg
aam
xorb
in
jo,pn
lock
mov
jnp
scas
cmp
ljmp
mov
add
loope
adc
and
or
xchg
test
les
fs
lods
sarb
sbb
add
and
jb
jne
outsb
pop
fsubrs
mov
push
clc
loopne
and
test
push
idivb
or
jecxz
jns
and
push
pop
mov
fs
xorl
call
sub
sbb
mov
scas
cmc
int3
add
mov
xor
std
aaa
xchg
add
stc
adc
and
lret
fwait
std
shll
out
cli
push
rclb
sbbb
mov
fisubs
nop
jae
arpl
push
xchg
mov
pop
xchg
test
add
fst
inc
lret
pop
mov
test
add
mov
xor
adc
jecxz
fxrstor
inc
inc
aaa
je
inc
mov
dec
adc
xchg
int
inc
into
sbb
push
insb
push
mov
lods
jmp
fs
jl
mov
and
push
mov
sub
arpl
push
xchg
bound
push
push
fwait
mov
loopne
xor
jo
aas
mov
cltd
add
lock
sbb
sub
pop
mov
ret
mov
xchg
xor
mov
aad
ljmp
mov
dec
daa
daa
mov
cld
push
iret
test
mov
and
sbb
aam
sbb
call
cld
or
clc
push
mov
pop
jb
mov
pop
das
test
hlt
dec
xchg
les
lods
ljmp
xchg
jo
ss
xor
push
adc
das
in
outsb
xchg
dec
inc
stc
sub
pushf
rcrb
inc
clc
cmpsl
cwtl
xor
dec
sub
add
clc
sbb
cmp
add
loopne
pop
cmpsl
movsl
pusha
ret
inc
cmp
test
sbb
sub
or
popf
rorb
push
cmp
rclb
pop
xor
push
xchg
xchg
push
loopne
lret
inc
push
imul
test
xchg
push
fisubl
mov
in
xchg
decl
jge
outsl
aad
push
imull
mov
lods
test
stc
lea
sahf
and
int
pusha
jg
subb
and
push
sbb
loop
jnp
mov
inc
xor
and
int
sarl
pop
sbb
arpl
daa
and
rol
lea
adc
lods
xchg
mov
rcll
in
rorl
daa
ret
mov
sti
mov
sti
sbb
movl
pop
sbb
mov
pop
lret
loop
and
ficompl
add
aas
loopne
mov
rorb
pusha
fistpll
add
pop
pop
pop
setno
push
lret
mov
or
and
fstps
mov
idivb
fwait
sub
pop
xchg
jae
xor
adc
and
lahf
dec
leave
movlps
pop
dec
cs
fiaddl
in
jle
je
aam
push
out
or
sub
push
cwtl
mov
out
mulb
repz
movsl
jb
adc
imul
cmpsb
pop
sub
inc
mov
arpl
and
outsl
inc
outsl
call
adc
cmp
dec
mov
or
adc
mov
aad
adcl
xchg
lock
jne
in
movntps
leave
hlt
inc
jg
pop
mov
xchg
xchg
sub
jg
lahf
cli
mov
xchg
fwait
es
adc
mov
inc
das
pop
pop
shrb
mov
xlat
sub
sbb
jp
shlb
pusha
sti
or
cmp
inc
sti
mov
dec
ja
add
push
clc
push
aam
push
or
fdivrs
jno
movsl
add
ljmp
push
in
aad
lret
jp
rcl
jecxz
popa
mov
fildll
xlat
aaa
push
or
les
pop
ret
adc
xor
push
lret
xchg
mov
and
sub
outsl
int
cld
sub
jp
cli
testb
stos
mov
jb
add
mov
loopne
push
ret
dec
jnp
cli
or
icebp
xchg
pop
mov
divb
xor
jg
insl
push
mov
cld
stos
icebp
dec
mov
stos
movsl
inc
test
loopne
adc
js
or
inc
mov
in
test
sti
xor
jns
insb
cmpsl
mov
mov
aaa
inc
std
rep
inc
fisttpll
sub
sub
sbb
in
mov
pop
ljmp
xlat
jbe
push
xor
imul
xchg
divl
mov
cli
add
dec
lea
sbb
xor
jp
jae
xor
decl
test
test
xchg
popf
cmpsl
stos
std
jbe
jecxz
out
jo
or
nop
es
push
lret
pop
pushf
movsb
mov
pop
push
enter
xor
lahf
fisubs
std
sub
gs
pushf
xlat
xor
testb
push
jle
fdivrs
or
andb
cli
fstpl
push
adc
ljmp
jg
add
push
enter
pop
jne
xchg
lods
cmp
movsl
inc
add
lds
clc
jmp
push
cmp
or
adc
jmp
loopne
push
mov
mov
sbb
inc
lret
xchg
xchg
add
mov
jbe
sti
xchg
arpl
subb
clc
loopne
push
rcrl
xchg
inc
push
test
push
mov
mov
call
cmp
scas
xchg
ret
mov
xor
push
arpl
inc
mov
adc
sub
mov
or
xchg
mov
push
cmp
mov
in
pusha
aaa
gs
sar
fs
sbb
xchg
pop
sbb
stos
jo
aas
and
nop
insb
ret
cmp
xor
dec
mov
jo
mov
adc
jae
fistps
sub
inc
sub
mov
test
incl
repnz
and
push
stos
ja
mov
pop
mov
sbb
add
imul
scas
or
outsl
pop
or
gs
test
fildl
addr16
push
and
mov
hlt
xchg
das
fcmovne
xor
jae
or
popa
cmp
scas
fucom
call
or
mov
pop
clc
or
adc
jne
addl
push
clc
push
pop
jecxz
jg
bound
cmp
pop
movsl
push
sbb
xchg
movsb
sahf
xorb
cmc
pop
rcl
add
mov
mov
jae
dec
insb
or
add
rcrb
mov
lcall
dec
neg
push
mov
mov
sti
imul
adc
mov
adc
jge
add
mov
addl
adc
lea
and
dec
sub
mov
ja
fidivs
cld
scas
in
adc
ljmp
or
sub
jo
sahf
hlt
mov
pop
aam
xchg
ljmp
add
jb
cmpb
add
lcallw
sti
clc
lcall
mov
ja
repz
xchg
cmp
out
cmpsb
push
cmc
xchg
or
nop
mov
pop
clc
int3
jo
stos
fldcw
or
pusha
pop
ds
cld
xchg
test
lret
jg
mov
xorb
pushf
dec
jns
sbb
add
xor
add
cmp
pop
sbb
call
pop
push
push
and
mov
in
mov
jecxz
std
fwait
or
dec
das
cld
cmp
andb
shr
xchg
pop
mov
pop
imull
xchg
jp
cmp
jg
ret
pop
daa
cld
inc
mov
xchg
addl
xchg
sbb
ja
push
sbb
outsl
popa
outsb
sub
mov
mov
rcll
js
push
rcll
sub
not
pop
clc
pop
push
and
mov
jecxz
jl
test
pop
js
je
mov
pop
jecxz
outsb
jge
jg
iret
out
inc
pop
imul
push
in
push
mov
movsl
andb
fsts
add
cli
stos
mov
push
aam
inc
into
loopne
lret
clc
jle
add
ljmp
movsb
add
das
mov
in
lods
jl
fwait
jbe
fsubp
outsl
pop
movl
in
jge
scas
fdivr
lods
scas
in
cmp
pop
outsl
push
aas
mov
lods
jb
jl
inc
inc
sub
or
fistpll
mov
xchg
or
ss
mov
aas
lock
jle
lds
cld
test
cmp
jg
inc
mov
pop
mov
jmp
and
and
fwait
add
mov
sub
mov
push
jle
mov
inc
in
int
jg
out
or
pop
sub
push
int3
mov
int3
jbe
sub
add
loopne
xchg
add
mov
push
jecxz
and
fisttpl
add
jl
ljmp
hlt
sbb
pop
fistps
test
or
xor
sbb
mov
subl
lock
adc
sbb
dec
sbb
loopne
test
ja
shl
repz
into
lahf
or
push
out
adc
scas
fidivl
decb
jp
xchg
xor
movsl
incl
sbb
movntps
mov
insb
int3
subl
orb
loopne
xchg
stos
clc
std
std
pop
dec
jle
popa
idivl
jg
addl
sarb
or
aaa
ret
xchg
imul
sub
daa
dec
sbb
inc
xchg
mov
inc
add
clc
dec
inc
jg
arpl
jne
sbb
out
pusha
pop
dec
and
xor
sbbb
xchg
pop
adc
push
push
lea
test
push
xor
clc
cmp
dec
adc
cwtl
mov
mov
shlb
cmp
pop
add
aam
mov
sahf
loope
jae
pop
cmp
or
mov
rcr
into
cmp
jge
addr16
sarb
and
shr
mov
lds
adc
icebp
ljmp
fs
popf
xchg
lods
stc
rcrl
rolb
sbb
mov
in
add
es
jl
pop
lds
in
xchg
movsb
repnz
inc
jecxz
ds
jno
icebp
jge
aad
inc
xchg
xchg
lcall
hlt
xchg
pop
rcl
aaa
shrl
daa
mov
mov
stc
outsb
cld
fwait
pop
mov
cmc
arpl
push
sub
xchg
add
mov
loopne
dec
int
je
jo
inc
icebp
stos
inc
mov
pop
scas
loop
adc
add
dec
mov
fsubrl
ficoms
cmp
xchg
jle
outsb
or
pop
push
dec
out
inc
test
fildl
fidivs
ja
andl
fdivrl
mov
cli
mov
gs
adc
jne
sub
mov
gs
push
fmulp
push
ja
adc
xchg
fdivrs
cmc
fs
into
lods
add
inc
mov
repnz
popf
fnstcw
inc
pop
int3
xchg
pushl
adc
int3
lds
push
cmp
push
idiv
mov
add
and
cmp
insl
imul
sub
dec
scas
or
ja
shll
push
iret
sbb
pop
mov
mov
andb
mov
mov
repz
mov
test
pop
pop
cli
dec
or
mov
mov
sub
jp
adcl
shll
stc
inc
push
cmpsb
push
or
adc
das
dec
cld
cmp
aaa
cwtl
out
mov
lods
or
cmp
shrb
sbb
lea
mov
call
lahf
fs
xor
mov
mov
punpcklbw
adc
mov
ret
pop
test
add
incl
mov
in
jecxz
cmp
mov
and
ret
push
fwait
mov
out
or
movl
rcrb
mov
not
insb
or
push
cmpsl
fucomip
adc
cmp
sub
jae
or
gs
aaa
fdivrl
sub
inc
mov
mov
aam
iret
push
les
sbb
lret
xchg
xor
push
dec
mov
rcrb
pop
and
addr16
lea
xchg
mov
mov
xchg
loop
mov
fdivp
xor
sbb
pushf
and
lods
orb
movsb
hlt
adc
inc
lock
pop
dec
orl
repz
loopne
shr
mov
inc
sub
xchg
add
sbb
faddl
dec
sub
out
test
sbb
sbb
incl
xchg
mov
adc
mov
clc
push
mov
fdivl
mov
dec
cwtl
or
repnz
dec
fistps
mov
mov
and
cmp
sub
or
xchg
xchg
jbe
and
enter
sarb
ror
lock
mov
fcmovb
xor
mov
push
aam
test
shr
fstps
inc
xor
shrb
in
and
cmp
pop
or
sub
xchg
clc
pop
and
add
mov
sti
out
enter
aad
mov
gs
icebp
rclb
movsl
out
mov
mov
sbb
mov
and
dec
mov
and
sbb
pop
or
andb
sarb
dec
mov
pusha
jecxz
sub
jb
pop
mov
inc
hlt
mov
hlt
outsl
add
stos
clc
or
mov
add
sbb
adc
clc
mov
std
adc
xchg
inc
fisttpll
cmc
scas
mov
push
sub
and
icebp
cmpsl
mov
cmp
stos
push
mov
sub
pop
stos
mov
mov
push
aam
jb,pt
and
and
sar
or
xchg
icebp
cmp
dec
hlt
dec
sub
aaa
xchg
mov
adc
pop
jno
xlat
out
fadds
int
addb
ret
ret
rorb
inc
loopne
rcll
dec
lret
mov
and
ret
add
mov
daa
jecxz
rol
or
sti
adc
fstl
lods
repnz
cli
lods
insl
cmp
sub
icebp
cmpsb
stos
std
fistps
push
xchg
cmp
jb
sarl
stos
movsl
ja
repnz
jl
int3
jnp
mov
lahf
aad
xchg
mov
sti
jmp
outsl
inc
in
pop
jecxz
or
mov
mov
dec
lahf
cmp
mov
or
jg
push
adc
xchg
popf
das
add
mov
dec
mov
pop
std
ret
sarb
cmp
xlat
jecxz
mov
outsb
xchg
mov
rolb
cmp
imul
imulb
or
lret
xor
aaa
lock
in
push
cmp
or
imull
sbb
push
fnsave
cmp
clc
test
or
adc
imul
and
not
ljmp
cmp
aaa
adc
movsl
or
fidivrl
xor
leave
dec
sub
cmp
lcall
jb
fstpl
mov
fcmovbe
xor
and
dec
les
and
or
mov
or
icebp
pop
sub
pop
mov
push
push
pop
rcrl
ds
dec
sbb
add
mov
pop
sbb
pop
xorb
pushf
mov
xchg
enter
mov
sarl
ficoml
jl
arpl
pop
movsb
dec
jbe
aad
aam
sbb
push
xchg
jl
and
and
sbb
aam
mov
push
rorl
fwait
sub
sbb
pop
js
incl
in
std
lcall
lea
mov
mov
inc
arpl
outsl
and
xchg
es
arpl
ds
imul
test
mov
outsl
dec
mov
je
xor
mov
push
and
mov
idiv
xchg
push
pop
push
xchg
jno
icebp
ja
dec
adc
sub
sti
stos
aaa
aad
outsl
test
stos
xor
sarb
dec
mov
jle
mov
inc
mov
add
aad
cmc
nop
dec
add
and
bound
xchg
or
mov
xor
sub
test
mov
bound
mov
jge
imull
fs
or
hlt
rcll
inc
xchg
jns
aas
imul
nop
or
int
loope
jae
push
sbb
loop
or
add
xor
in
push
addl
lock
cltd
outsb
push
adc
inc
or
ss
mov
fdivr
lods
xor
mov
add
into
data16
inc
inc
fiadds
pop
sbb
and
sub
rol
frstor
jp
cmp
fs
push
xchg
cld
xor
add
cwtl
xor
xor
je
pop
imul
adc
and
addb
mov
fucomi
pop
or
mov
add
mov
mov
jne
xor
mov
fistps
ljmp
dec
inc
imul
xor
and
cld
mov
int3
or
js
push
pop
push
jbe
pusha
sbb
jmp
movsb
or
adc
jecxz
outsl
cld
dec
roll
mov
pop
push
mov
pop
clc
fidivl
jnp
inc
fstpl
loopne
jecxz
das
lcall
lods
negl
xlat
adc
sarb
xchg
jg
lret
pushf
adc
adcb
dec
jne
jle
xchg
pusha
stos
fwait
out
or
aas
mov
xchg
ret
lret
and
xlat
lea
fcomip
andl
inc
and
call
mov
sbb
jae
hlt
pop
clc
or
cmp
ret
push
xor
loopne
mov
jnp
fldl2e
mov
add
mov
test
cmp
inc
or
pop
loopne
jnp
fs
repnz
pusha
adc
rorl
fldt
fisttpl
dec
adc
mov
test
lahf
mov
mov
fsubrl
mov
js
mov
aaa
sub
mov
add
popf
out
jle
pop
fnstsw
outsl
sbb
mov
xor
pop
orb
aas
fwait
imul
lret
pop
push
add
sbb
daa
sub
repnz
ret
sbb
mov
fwait
mov
cli
inc
and
lcall
fcomp
pop
js
cli
aam
mov
js
or
lcall
andl
mov
addr16
jl
jg
sbb
cmovge
mov
mov
sbb
rcll
in
outsb
or
shll
mov
mov
lcall
mov
inc
out
jg
adc
icebp
les
sbbb
inc
sub
aam
mov
mov
cmc
sbb
dec
orb
sbb
pop
loop
fisttps
sub
sbb
cmpb
test
and
arpl
pop
mov
inc
xorb
jno
adc
cltd
sbb
add
lock
jbe
and
and
outsl
int
inc
sti
pop
cltd
inc
clc
inc
xchg
push
aas
jp
sub
shll
in
jp
dec
inc
mov
push
pop
fscale
test
pop
and
and
mov
inc
add
dec
dec
fisubs
ficoml
jmp
lcall
lds
pusha
cmp
dec
xchg
in
add
or
dec
std
pop
loopne
clc
inc
std
jmp
and
lahf
cmp
inc
cmp
mov
mov
shrb
imul
lret
and
xor
inc
inc
in
loop
mov
enter
lret
mov
push
push
xchg
scas
xor
or
cmp
cmp
ljmp
cltd
pop
push
inc
mov
or
icebp
lahf
clc
ja
cli
and
push
and
cmp
fmull
push
lock
ja
fs
mov
cmpsb
cmp
lds
es
in
ja
xchg
call
mov
jo
mov
fcoms
sbb
fwait
mov
std
es
lea
icebp
or
push
add
jle
loope
inc
ret
popf
and
cmp
es
iret
orb
push
out
jecxz
stos
out
popa
lods
inc
inc
imull
int3
cmp
mov
ja
add
movsb
scas
jbe
mov
push
mov
fcom
inc
cmc
andb
adc
cmp
add
aas
mov
dec
push
xchg
dec
out
adc
dec
push
mov
xchg
cld
shlb
cmp
push
xchg
popa
cltd
inc
test
call
nop
jae
push
ficoms
pop
mov
jp
fsubrs
stos
mov
imul
jbe
pop
dec
dec
das
sahf
and
xor
lock
dec
inc
dec
icebp
ret
shrl
sbb
sub
shlb
outsb
cli
mov
in
scas
and
jb
adc
mov
enter
jae
adcl
jg
adc
dec
insb
call
adc
xor
aaa
push
es
stos
outsl
mov
call
and
iret
loop
popa
jmp
imul
xchg
and
or
jge
movsb
les
test
in
aam
dec
or
inc
adc
popa
add
fwait
xchg
inc
cmp
icebp
sbb
add
adc
xor
aaa
mov
mov
sbb
inc
pushf
or
imul
xchg
mov
adc
test
daa
popa
mov
loopne
lock
aaa
jle
dec
add
addr16
pop
adc
xlat
loop
push
adc
scas
push
aam
pminsw
cmpl
pop
xor
iret
cmc
add
adc
and
loop
cld
push
pop
adc
mov
ss
cmp
jle
fldenv
and
push
mov
mov
sub
dec
push
mov
mov
outsb
jmp
add
outsb
mov
mov
mov
test
lods
xor
fs
ss
jo
loop
sub
inc
bound
push
cli
mov
mov
sub
ljmp
in
add
es
rcrl
fcmovnb
dec
and
or
push
imul
movsl
arpl
jbe
fcomps
sbb
push
mull
add
dec
clc
mov
add
mov
inc
rol
out
ret
adc
sub
sub
shr
xchg
dec
push
and
sbb
mov
ljmp
xchg
scas
mov
and
add
sti
stc
mov
xor
loopne
push
jo
cmp
fdivrs
in
fcoms
adc
cmpsb
cmp
and
popf
test
inc
movsl
push
xor
sbb
sarl
insl
insb
sbb
mov
cmp
xor
aaa
xor
sbb
iret
enter
aas
pop
ljmp
mov
leave
sbb
dec
mov
pop
loop
aad
test
sti
pusha
inc
mov
sub
xchg
rcrb
lret
xchg
mov
or
xor
and
fsts
in
and
cmp
mov
inc
xlat
in
and
add
addb
rclb
loope
mov
jbe
jmp
adc
leave
push
jnp
lret
mov
dec
es
fwait
cmp
and
push
mov
sbb
push
fstp
jle
or
xor
and
mov
fidivl
lahf
jne
in
push
jo
push
test
int
jnp
hlt
mov
add
cltd
fs
les
xchg
add
and
call
loopne,pt
mov
out
subb
sub
and
sbb
jbe
in
adc
scas
ja
sub
cmpsb
js
aad
fistps
dec
sbb
jb
pop
push
or
mov
lds
sbb
xchg
push
incl
mov
jbe
inc
sub
or
loopne
ss
adc
push
sub
cmp
lret
pop
dec
pop
fwait
xlat
or
ret
sbbb
cmpsb
pop
movsl
ficoml
or
mov
xorl
pop
out
mov
inc
fwait
adc
cmp
pop
aaa
mov
mov
aas
popa
stos
in
idivb
aad
mov
inc
sbb
push
mov
jmp
iret
loopne
scas
mov
pop
mov
xor
sbb
cld
jb
sbb
cmp
mov
or
sub
lahf
xor
mov
call
test
xor
mov
cld
add
jge
rcl
and
mov
aaa
ss
pop
mov
call
aaa
hlt
adc
jmp
cwtl
cld
xchg
and
test
ljmp
pop
inc
sbb
push
repz
jne
jmp
add
and
popa
ficompl
jecxz
out
sbb
ja
xor
fs
mov
int3
movb
scas
push
cltd
push
mov
mov
xchg
xchg
add
xchg
add
sahf
orb
outsl
jecxz
fistps
fidivs
loopne
jg
cltd
pusha
xor
or
sarb
push
sarl
sub
icebp
pop
sbb
loop
mov
cli
add
lods
repz
sub
jge
or
lahf
adc
jnp
pop
and
cli
in
pop
cmpsl
dec
sub
hlt
shll
ljmp
adc
lret
pop
aaa
pop
jmp
lock
xchg
inc
sub
pusha
jg
sbb
jmp
out
push
mov
mov
jns
shll
fsts
jg
ljmp
addl
test
test
mov
push
idivl
inc
mov
xchg
icebp
fbstp
cmpsb
jbe
adc
fsubr
pop
dec
pop
add
lcall
jo
sbb
xor
das
ucomiss
les
push
pop
sbb
cmpsb
jmp
pusha
lret
and
inc
ret
cmc
das
add
sub
mov
mov
mov
inc
and
or
cwtl
push
sub
push
pop
adc
pop
sbb
test
sub
adc
adc
cmp
jle
mulb
sub
cmp
xor
mov
push
pop
bound
icebp
inc
pop
pusha
sub
push
push
sbb
pop
push
xor
or
jecxz
lcall
mov
mov
pusha
or
inc
fnsave
mov
mov
adc
push
inc
ret
stc
add
push
mov
xchg
sub
mov
add
jg
test
xor
movsb
jge
fcoml
frstor
popa
or
sbb
fistl
roll
pop
std
data16
arpl
aad
loope
jl
mov
int
loope
inc
push
pop
frndint
and
sub
inc
pop
pop
mov
xchg
pop
jge
and
mov
cmp
imul
lock
jo
lret
mov
sub
pop
enter
mov
jne
hlt
scas
pop
and
cmpsb
jmp
cmp
test
mov
mov
stos
cmp
out
loopne
shll
jecxz
sub
jo
aas
loope
or
mov
cmp
ja
pop
mov
test
rorl
inc
sbb
add
fisubs
sbb
inc
pop
push
or
sahf
and
xor
cmpsb
cmp
mov
idiv
add
std
les
sub
test
fbld
inc
mov
cmp
out
sbb
sub
arpl
and
sti
stos
cmp
aaa
pop
sbb
les
jmp
mov
sti
in
std
dec
js
cwtl
outsl
jb
subl
jno
lds
enter
and
mov
icebp
cs
cli
daa
in
add
cmp
push
push
imul
push
aas
adc
popa
shll
sub
push
aad
xor
outsb
mov
notl
js
adc
push
inc
ja
shlb
or
mulb
add
pop
push
pop
adc
addr16
dec
fscale
mov
jp
int3
ret
les
hlt
ja
or
dec
cmpsl
lret
gs
lahf
popf
scas
jge
pop
iret
insb
out
sbb
aaa
mov
add
lds
and
push
push
pushf
dec
mov
jp
inc
les
pop
jg
scas
std
sub
mov
negl
jno
adc
mov
mov
ret
sarl
mov
outsl
cmc
imul
insl
inc
loope
aaa
pop
adc
mov
sti
filds
scas
adc
insb
add
addb
add
adc
ljmp
ja
mov
dec
outsl
pop
movl
add
pop
and
cmp
sub
fistpll
ljmp
cltd
push
xor
lds
jb
or
cmpsl
loop
jo
mov
sbb
adc
and
outsl
lds
es
shr
test
lea
in
in
gs
cmp
jmp
div
or
outsl
test
dec
rcll
cli
das
mov
mov
adc
sub
mov
dec
out
lcall
mov
mov
in
cmp
movsl
mov
icebp
mov
mov
mov
and
xor
or
push
loop
xor
insb
lret
lds
gs
scas
cmp
sbb
sbbb
std
mov
xor
lock
push
cwtl
xor
jns
jp
mov
dec
mov
ret
ljmp
or
and
insl
add
fnstcw
add
addl
lea
clc
ja
lret
in
mov
fs
iret
les
nop
push
pop
clc
add
bound
movsb
lcall
push
stos
dec
push
sub
ret
iret
xor
pop
jp
inc
adc
inc
jge
fstp
filds
out
add
loop
subl
loop
ret
ja
and
repz
mov
jp
dec
fs
sbb
push
jb
jno
jmp
sarl
mov
insb
aas
movsb
shrb
in
movsb
mov
xchg
jg
jmp
push
jecxz
bound
loop
test
inc
sbb
cwtl
dec
mov
stos
push
cmp
fsubl
pop
test
fwait
mov
and
into
in
xor
scas
ja
mov
call
push
loopne
push
dec
mov
dec
out
daa
jb
sarl
ficompl
mov
or
sbb
xchg
mov
and
xchg
rcrb
add
mov
lock
mov
jne
xchg
xorl
das
mov
cmp
sub
or
mov
test
mov
out
out
dec
add
test
push
and
sub
xchg
mov
xor
sbb
lods
aam
popf
mov
mov
bound
push
dec
daa
fidivrs
mov
mov
lods
mov
rorl
push
leave
jg
add
in
push
mov
fadds
sub
fsin
std
xlat
cmp
repnz
in
push
pop
jnp
lret
rol
push
lcall
inc
rcl
push
ja
push
mov
faddp
in
pop
or
xchg
add
and
inc
shlb
decl
push
icebp
repnz
nop
push
xchg
mov
or
mov
xchg
imul
inc
adc
aaa
cmp
and
iret
jns
lds
fwait
push
pop
xorl
test
or
or
rcll
test
mov
sbb
xor
loope
push
icebp
mov
xor
adc
outsl
aaa
add
lcall
aam
mov
xor
in
mov
lock
mov
sbbb
add
test
lods
cmpb
in
sub
xor
aad
adcb
ss
xchg
inc
lods
fs
or
repz
mov
fildl
aad
adc
jno
or
mov
add
clc
mov
dec
jle
sub
jne
lds
jecxz
bound
lock
fcomps
fdivrl
jecxz
adc
or
filds
push
and
xchg
mov
push
mulb
in
cwtl
test
add
cmp
adc
pop
fisttpl
pusha
adc
test
sti
push
xchg
mov
fadds
je
mov
mov
sahf
addr16
scas
imul
push
scas
ss
xchg
cwtl
mov
jl
stos
stc
dec
mov
cmpl
sub
dec
cli
mov
nop
or
add
cmp
je
sbb
xor
push
stc
mov
cld
lea
jo
mov
fwait
adc
rolb
aad
lock
xchg
and
sub
out
popa
aas
popf
stos
inc
fcompl
in
add
ret
fwait
push
jns
in
iret
test
cmp
xchg
icebp
mov
xor
imul
cmp
jbe
add
inc
int
loopne
push
mov
stos
fxrstor
or
cmp
dec
imul
mov
std
movsl
loopne
adc
popf
rcl
scas
stos
outsb
outsl
dec
in
fidivl
repz
out
mov
shr
add
sub
in
cmp
test
pop
test
adc
negb
inc
aaa
sbb
pop
cltd
jbe
mov
pop
inc
pop
ja
adc
loopne
jo
xor
js
test
enter
call
sarb
push
push
xchg
add
inc
inc
je
stc
push
push
insb
adc
pop
and
push
or
pushf
je
stc
jle
imul
pop
pop
push
cmp
loop
repz
andb
mov
inc
cmc
xor
inc
jno
decl
fs
adc
ja
fisttpl
pop
and
cwtl
jmp
cld
shl
jecxz
cs
movsl
das
dec
sub
mov
xor
loop
pop
fdivs
push
xor
lds
pop
ljmp
sbb
dec
sbb
xor
push
ret
or
in
sub
jmpw
sub
ljmp
pop
std
out
stos
mov
clc
idiv
je
inc
cld
ffree
dec
inc
or
jecxz
test
data16
pushf
std
push
aam
ja
adc
je
dec
mov
clc
lods
adc
jns
cmp
mov
mov
sbb
loopne
movsb
xchg
inc
jmp
sbb
push
fwait
push
nop
sub
xchg
or
cmp
pop
bound
mov
push
mov
outsb
or
dec
ffreep
or
xchg
mov
jg
push
push
push
mov
or
addr16
aam
enter
mov
arpl
push
ret
dec
and
pop
mov
mov
enter
lock
jmp
mov
arpl
in
aaa
fsubs
cmp
xchg
dec
ljmp
daa
cmp
sbb
push
outsl
insl
mov
aam
xlat
fldcw
mov
inc
xlat
jecxz
roll
adc
decb
ja
jns,pt
adc
pop
inc
inc
mov
cmp
cmp
jns,pn
inc
stc
icebp
iret
js
xchg
fnsave
and
pop
mov
push
mov
pop
pop
lods
dec
push
push
cmp
add
gs
mov
std
dec
or
hlt
popf
xor
hlt
out
loopne
outsb
ficoml
or
jb
sub
outsl
pop
jle
jmp
push
ss
dec
add
push
stos
fbstp
xchg
and
popa
fiaddl
xchg
xor
es
loope
loopne
dec
mov
xor
fbstp
jbe
add
test
adc
shll
and
push
es
sarl
fstpt
xor
fld
mov
dec
xor
add
test
ss
xchg
fstl
fldl
sbb
test
lods
jg
xor
xchg
subb
and
sub
std
cmp
pop
imulb
dec
test
push
insb
dec
roll
jmp
sbb
pop
or
sbb
xchg
adc
inc
ljmp
push
and
loopne
sub
inc
adc
xor
shrl
jmp
xchg
es
dec
adc
daa
int3
lods
mov
data16
gs
std
mov
frstor
adcl
out
and
std
insl
jg
test
movsb
and
inc
adc
mov
loopne
lock
or
pop
in
aaa
cmp
mov
inc
sbb
or
pusha
test
mov
push
sub
sbb
inc
aaa
xor
mov
push
dec
je
push
push
lret
mov
data16
in
mov
loope
ja
iret
cmpsl
jge
hlt
and
inc
jnp
es
sbb
int3
mov
ljmp
lret
inc
push
ret
mov
push
pusha
mov
ljmp
bound
jb
pusha
dec
dec
out
mov
push
lods
aas
xchg
and
lods
sbbl
mov
test
data16
jno
push
or
sbb
push
mov
jo
mov
loope
add
hlt
or
pop
popf
lods
out
inc
and
test
xor
xor
dec
call
mov
loope
out
enter
sbb
pop
sahf
idivb
sbb
decl
xchg
cmp
inc
mov
cmp
filds
outsl
bound
mov
pop
adcl
arpl
cwtl
jb
dec
add
das
aad
xchg
and
sbb
lods
pusha
clc
xchg
fistps
pushf
fs
mov
mov
mov
stos
fwait
push
loop
out
ret
add
cmp
jb
dec
mov
hlt
dec
adc
iret
test
ret
pop
push
jecxz
add
mov
inc
lock
rcrb
in
xor
mov
fisubrl
xchg
cmc
decl
out
mov
popf
and
mov
xlat
lfs
bound
imul
pop
sti
xchg
jecxz
add
mov
jo
xor
fisubrl
imul
sub
ja
xchg
xchg
xor
sub
rcrl
mov
mov
sub
push
fucomip
push
adc
fadd
and
add
pusha
xchg
jp
mov
pop
inc
lock
mov
cltd
pop
inc
call
add
pusha
loope
mov
fimuls
cwtl
in
inc
loop
xchg
outsl
jo
xchg
std
push
das
inc
fsin
sub
jno
mov
cmp
lcall
out
hlt
sub
fwait
sti
jae
test
add
ss
and
movsl
pop
xchg
push
or
mov
loopne
lods
mov
hlt
inc
sub
add
jl
add
fsubrl
inc
mov
jmp
repz
sub
pop
xchg
js
out
mov
add
das
add
adc
fiaddl
fisttpl
repnz
scas
shrb
pop
js
dec
and
dec
leave
adc
push
mov
aaa
lock
jmp
push
push
aaa
arpl
mov
mov
or
shrl
sub
or
aad
lds
movsl
or
cmp
insl
sub
mov
lock
add
rolb
call
subb
daa
ja
xor
jnp
pop
cwtl
pop
lods
or
pop
or
sbb
pop
out
mov
push
mov
jecxz
mov
adcb
mov
push
jb
stc
cmp
cli
sbb
cld
in
out
cmp
or
inc
daa
pop
add
mov
or
pop
outsb
push
gs
xor
push
xchg
fcom
mov
pop
inc
xchg
bound
imul
movsb
push
testl
cmp
out
loop
shrb
sub
inc
pop
imul
mov
jle
or
xor
fimuls
imul
push
mov
cmp
pop
lcall
dec
test
bound
mov
push
jge
pop
nop
mov
mov
dec
in
test
push
or
lods
outsl
enter
int3
clc
mov
aad
push
dec
sbb
ds
cmpsb
dec
or
jecxz
lock
pop
cld
in
bound
xor
fsubl
and
es
cwtl
pop
or
lods
or
or
xchg
enter
mov
sub
push
lods
in
mov
mov
mov
clc
cltd
xor
adc
jo
sbb
fdivrl
mov
sbb
cmc
outsl
int
fcmovbe
repnz
xor
movsb
test
dec
fbld
adc
into
int3
repnz
ficoml
push
outsb
js,pt
mov
xchg
lahf
shrb
cltd
mov
xchg
adc
mov
push
ror
xchg
setp
outsl
ss
sbb
enter
cwtl
cmp
pop
xchg
sar
pop
orb
aad
cmp
mov
lahf
mov
xor
sub
push
mov
pop
jecxz
loop
jb
mov
jg
enter
mov
adcb
and
fisttpll
div
jmp
faddl
insl
add
mov
add
add
cmp
pop
or
xor
push
cmp
jg
pusha
inc
lods
out
pushf
ret
mov
pop
jmp
add
std
mov
repnz
cmp
sbb
cmpsl
nop
test
popa
add
sbb
sbb
sahf
and
ret
mov
xchg
push
loope
sti
stos
mov
pop
outsb
clc
shlb
add
mov
jle
lea
push
les
addb
mov
adc
pop
or
push
xchg
push
repz
aad
sbb
pushf
push
lcall
push
jle
push
jo
xchg
fbstp
es
fisttpl
aam
adc
outsl
sbb
or
pop
scas
pop
je
push
stos
xorl
mov
test
push
jns
sbb
sub
sub
arpl
inc
xor
repz
xor
fcompl
fadds
jmp
sub
negb
ljmp
pop
xchg
sarl
inc
repz
add
add
mov
mov
sbb
pushf
cwtl
dec
mov
mov
xchg
adc
aad
dec
addr16
pop
push
lret
jl
push
mov
data16
test
push
xor
jge
mov
addr16
push
mov
add
push
lock
push
gs
xchg
jp
dec
sub
cmp
lods
jge
push
data16
in
scas
gs
sbb
fildll
pop
ljmp
sub
adc
pop
push
aas
jl
pusha
mov
mov
fcom
adc
test
push
cmpsl
adc
sbb
inc
aam
pusha
inc
daa
mov
fildll
inc
sar
std
pop
pop
pop
and
add
or
test
pop
add
sub
push
out
loop
sbb
shll
inc
repnz
inc
rclb
sub
addr16
push
fistps
or
mov
sti
ja
icebp
cli
mov
arpl
stos
mov
inc
sbb
or
or
sub
movsl
fisttpl
xchg
test
jecxz
decl
sub
iret
xor
mov
fistl
lock
lods
shll
or
gs
pusha
pop
mov
sub
into
push
nop
xor
test
mov
ret
cmp
sbb
push
and
clc
addl
dec
pop
decl
xchg
pushf
sub
inc
js
push
cli
filds
inc
mov
and
ljmp
mov
push
push
sarb
jle
cmp
push
mov
dec
pop
pop
xlat
push
push
subb
mov
aam
jmp
jne
dec
inc
inc
pushf
adc
push
sub
push
xchg
or
lock
fucomi
daa
add
xor
add
pop
je
lods
out
fildl
adcb
call
mov
jecxz
imul
cmp
mov
xorl
mov
pushf
imulb
lods
and
icebp
mov
clc
aaa
aad
sbb
push
call
out
shr
les
push
lock
push
movsl
clc
in
bound
sub
jg
cli
nop
inc
xor
fiaddl
push
aaa
jl
jo
xchg
rorl
push
mov
dec
sarb
cmp
push
js
fnstenv
aas
call
mov
mov
int3
add
xor
or
cs
out
lock
cli
aaa
cmc
cmp
rolb
subb
sarb
xor
std
shlb
test
fdivrl
fistl
out
js
push
add
bound
aad
js
cmp
or
adc
inc
and
loope
push
in
hlt
push
mov
out
loop
mov
in
fstps
add
cmp
loopne
xor
std
jne
add
icebp
subl
inc
mov
mov
mov
sbb
and
mov
mov
ret
into
fldl
jne
ss
divb
lcall
test
add
mov
xor
fs
push
je
ret
mov
mov
and
gs
out
mov
dec
dec
nop
jg
int
cmpsb
cmpsb
ljmp
dec
xchg
dec
cmp
mov
adc
dec
pop
push
inc
movsb
ss
aas
rclb
outsl
xor
push
cmc
inc
jge
out
or
mov
decl
in
mov
stos
and
sub
mov
and
ficompl
ret
test
pop
outsl
xor
sti
rcrl
es
pop
mov
push
aam
lret
bound
clc
dec
inc
filds
movsb
inc
lcall
xlat
ss
jmp
pushf
sub
or
mov
jns
daa
inc
lock
or
and
loope
dec
cmp
dec
fcoml
pop
ljmp
in
pop
push
pop
pushf
aaa
push
mov
jg
sub
insl
std
or
adc
inc
sub
ss
jo
xchg
push
stos
xchg
or
mov
loope
inc
bound
mov
imul
or
mov
mov
add
aas
mov
iret
test
jo
adc
les
mov
sub
xor
popl
add
xor
les
aad
or
xor
or
jl
stos
test
push
cmp
es
add
fs
xor
cmpsl
loope
test
add
jg
mov
jge
push
adc
and
test
ds
push
xchg
push
cmp
lret
adc
pop
test
test
scas
sub
lds
in
lods
ja
les
and
movsb
push
nop
cmp
ljmp
not
jmp
outsl
push
add
pop
pop
int
stos
clc
adc
std
xchg
mov
jl
mov
push
js
push
pop
and
sub
aas
int
lcall
test
add
dec
out
das
cmp
push
into
inc
test
jecxz
xchg
lahf
iret
mov
pop
hlt
xor
mov
mov
push
fidivs
aaa
mov
inc
pop
mov
or
imulb
fdivrs
icebp
jp
push
leave
mov
loope
push
sub
jle
aaa
mov
jbe
negl
inc
mov
call
movsb
es
fsubs
js
roll
or
dec
popf
je
cmp
jne
test
out
dec
dec
jmp
push
mov
mov
adc
mov
lds
xor
mov
cmp
push
popa
pushl
les
std
stos
enter
out
jp
js
or
fistpll
andb
lcall
push
mov
ljmp
hlt
or
cmpsl
push
negl
jp
jmp
fisttpll
shrl
mov
or
push
call
cmpsl
js
aad
dec
pop
xchg
cwtl
popa
sbb
or
or
xor
std
fnstsw
ljmp
stos
mov
mov
pushl
fisubrl
adc
call
rolb
jo
ret
push
cmp
ss
xchg
push
mov
rcll
and
leave
adc
sub
ficoml
js
repnz
adc
mov
jle
mov
jo
data16
add
mov
or
incl
decl
push
pop
dec
inc
mov
xorl
adc
loop
mov
inc
stos
jle
hlt
sub
mov
lret
out
jle
mov
in
inc
loopne
dec
cwtl
mov
push
adc
jmp
pop
test
xlat
add
pop
out
sbbb
add
or
cmpsb
movsb
add
stc
fistpll
and
stos
xchg
adc
inc
stos
or
fisubl
xchg
imul
test
adc
xor
lds
aam
call
adc
xchg
push
mov
or
add
lcall
cmp
nop
xchg
dec
xor
es
enter
add
lcall
add
push
pop
mov
pop
in
mov
sbb
out
das
std
aam
push
cmpsb
push
pop
mov
and
dec
pop
dec
dec
mov
adc
sub
dec
shlb
outsl
push
fsubrs
enter
cs
fistpll
ljmp
xchg
push
es
mov
popa
mov
sbb
shll
xchg
mov
mov
add
loop
jne
cmpsb
adc
mov
pop
mov
pop
mov
jno
movsb
add
cmp
xchg
ljmp
sub
addl
dec
and
das
mov
lock
mov
loope
mov
insl
push
sub
mov
popa
in
add
sbb
adc
mov
or
jns
pop
clc
aad
push
out
mov
push
jmp
int3
jbe
lods
shl
fists
incl
cld
inc
data16
imul
jmp
and
loope
mov
jae
mov
lock
rcrl
xchg
cmpsb
pushw
gs
mov
idivl
int
sub
outsb
outsl
icebp
lea
xor
adc
jl
aaa
divl
rcll
bound
or
std
mov
mov
xor
mov
test
push
push
push
bnd
push
repz
jns
push
or
adc
adc
xchg
or
inc
and
outsl
push
js
mov
push
aad
hlt
inc
mov
faddl
pop
aad
clc
push
push
or
ret
xor
lds
insl
cli
mov
sbb
sbb
mov
outsl
adc
mov
mov
adc
cltd
inc
jl
xchg
je
push
push
xorb
and
cmp
sub
scas
inc
int3
out
inc
dec
mov
bound
jo
jle
inc
in
bound
push
leave
pusha
mov
mov
push
push
movsl
loopne
nop
pop
cmp
int
test
sub
inc
mov
movsl
call
xchg
add
shrb
je
push
lods
movsb
ds
loope
cmp
out
add
shl
cs
pop
stos
xchg
sub
or
mov
lcall
cmp
mov
mov
out
mov
movsb
push
lahf
adc
cli
mov
xchg
xchg
imul
or
push
mov
inc
inc
and
pop
pop
jp
jbe
das
les
jb
push
aas
xchg
sbb
jmp
mov
pusha
xor
idiv
dec
push
and
enter
jb
pop
dec
inc
mov
ss
dec
sub
mov
sub
push
in
cmp
or
dec
push
inc
imul
insb
jae
xor
pop
mov
cmp
jecxz
jbe
bound
movsb
test
mov
fsubs
mov
fwait
push
mov
mov
mov
push
mov
and
sub
and
jb
fs
add
in
test
and
dec
dec
jo
jb
fidivrs
inc
ss
aam
insl
scas
inc
cmp
out
adc
xorl
cltd
jnp
sbb
mov
jge
adc
mov
push
cs
mov
jne
dec
icebp
or
sti
je
imul
sbb
add
sub
aam
popa
clc
adc
pusha
add
sub
movsl
sbb
and
dec
push
sti
pmuludq
jp
mov
xchg
mov
jb
or
adc
repnz
aas
adc
cmp
pop
les
add
or
aad
mov
stc
mov
iret
aad
jl
mov
scas
add
jp
adc
test
and
mov
inc
cmp
cmp
xchg
or
mov
outsb
mov
imul
cmc
outsb
inc
sbb
mov
jmp
jg
inc
mov
insb
lds
add
push
in
pop
xchg
push
cmc
and
leave
aaa
and
pop
sarl
lds
cltd
icebp
sbb
push
sbb
push
ljmp
jg
fldln2
mov
inc
nop
push
in
or
or
sbb
inc
sub
jg
ds
mov
jno
xchg
sub
and
xor
sbb
add
push
inc
addr16
es
xchg
scas
jne
mov
leave
dec
or
iret
dec
dec
movsb
in
sbb
cli
add
jl
loop
jno
adc
stos
adc
hlt
outsl
fsub
jp
lods
bound
or
in
or
or
aam
std
lahf
repnz
cli
clc
and
or
xor
push
xchg
cmp
sub
sub
stos
mov
push
add
cmp
and
xchg
mov
jo
mov
push
xchg
add
mov
inc
pusha
adc
lahf
sub
jo
dec
imull
sbb
call
lds
scas
push
fsub
jg
xchg
push
inc
pop
push
pop
jle
pop
inc
out
lcall
std
data16
movsl
imull
ret
int
fs
sub
and
pop
push
adcl
inc
ja
cmpsl
sarb
orl
pop
mov
push
and
and
rorb
aad
sbbl
mov
or
xlat
fwait
xor
int3
lahf
xchg
xor
jge
sbb
adc
or
jg
jg
and
in
jnp
pop
cmp
gs
jecxz
call
push
lods
call
cwtl
ficoms
flds
mov
lea
adc
mov
rclb
outsb
cltd
in
scas
push
inc
jnp
pushf
lret
inc
push
ret
std
outsl
and
ret
int3
xor
icebp
sbb
jg
movsb
and
bound
mov
push
pusha
shrl
popa
cmp
pop
cld
enter
push
cmpsb
pop
push
cmpsl
and
lret
mov
jg
jae
pop
test
adc
andb
cmp
das
jl
and
dec
into
push
dec
test
sub
lcall
inc
bound
sarb
mov
les
stos
push
lock
add
inc
repnz
push
rcrb
loop
mov
mov
adc
push
jb
daa
mov
pusha
fwait
cli
movsb
test
cmp
ljmp
inc
test
fistpll
outsb
in
aaa
mov
pop
adc
pop
sbb
mov
cmp
mov
mov
and
inc
jns
inc
pushf
push
cmp
xchg
cmp
pop
jp
rolb
jl
sub
cmpsl
icebp
sub
imul
dec
sub
push
outsb
dec
loope
insb
and
in
xchg
cli
bound
xor
or
add
bound
test
aas
sub
fs
fcom
mov
cwtl
call
mov
imulb
jae
sbb
cmpsb
fists
repnz
stc
ljmp
sbb
fs
push
adc
cmc
push
pop
andb
hlt
adc
ja
push
jge
add
out
mov
add
or
xor
cmp
push
adcl
lcall
inc
adc
test
push
push
mov
insl
adc
sbb
xchg
sbb
ljmp
xor
mov
xor
cltd
stc
push
mov
dec
inc
mov
lret
jecxz
fcoml
xchg
cmp
hlt
fwait
mov
sbb
cmp
jecxz
mov
sub
pop
mov
pop
adc
sub
test
outsb
popa
inc
pop
jb
cli
add
jmp
ja
add
fldenv
lods
adc
or
cmpl
cmp
in
shrb
xchg
add
aad
inc
jle
or
jbe
cltd
xor
adc
dec
jl
or
gs
gs
call
std
pop
or
pop
fwait
xor
imul
test
lcall
ljmp
sub
in
stos
ret
jno
add
push
lcall
push
movsl
leave
pop
inc
pop
mov
mulb
out
inc
xor
jge
pop
movl
add
flds
stos
inc
pop
shlb
and
xchg
hlt
jns
pop
pop
inc
pop
flds
imul
aam
test
adc
and
add
sar
sub
pcmpeqw
call
in
mul
in
jne
jno
adc
sub
cmpsl
inc
or
sub
int
mov
lea
nop
cmp
sub
pop
pop
mov
sub
sti
sahf
ret
int3
push
addl
mov
sub
pushf
sub
mov
cmc
lods
cmpsb
jae
jp
push
pop
xchg
cmpsl
mov
sti
sbbl
leave
scas
pcmpgtb
std
mov
dec
jne
push
lcall
cwtl
lods
or
xor
mov
sbb
mov
sbb
and
popf
scas
and
mulb
mov
or
mov
cmp
andl
jecxz
outsb
add
lret
clc
hlt
ret
or
hlt
adc
sub
push
fs
ds
bound
shlb
filds
and
adc
cmp
aam
sub
mov
jbe
stos
jb
aaa
xchg
inc
nop
rolb
mov
xor
ss
aas
jecxz
dec
rolb
and
mov
jp,pn
fisttpl
scas
mov
lds
jmp
cmp
clc
movsb
stc
push
jl
iret
xchg
arpl
mov
push
ds
fsubrl
lahf
add
fstpl
test
sbb
ljmp
add
inc
mov
pop
pushf
dec
scas
push
or
mov
xchg
clc
add
jae
dec
adc
movsl
or
je
out
mul
ret
inc
or
jg
arpl
shrl
fdivrl
hlt
leave
sub
enter
dec
hlt
pop
aaa
outsb
sub
fwait
stc
cmpsl
pop
jecxz
addb
hlt
test
push
bound
sub
loopne
xchg
push
mov
and
jle
stos
sahf
das
or
mov
cmp
sbb
jbe
movsb
pusha
inc
xchg
insb
xor
in
and
aaa
jnp
jo
clc
aam
add
dec
fsubl
das
dec
ds
cmc
cmpsb
outsb
int
fisubl
lock
je
cmp
hlt
scas
add
sub
je
movsb
addr16
push
sbb
push
adc
enter
mov
or
xchg
cmp
cwtl
xorb
cmpsl
dec
popa
pop
jmp
lods
lea
in
lahf
arpl
pop
clc
sbb
lock
jg
nop
fchs
pop
cmc
sbb
push
sub
loop
push
mov
aaa
ja
inc
xchg
insb
ja
testl
push
aam
aas
testb
stc
mov
shl
inc
sbb
stc
or
add
repz
daa
jle
rclb
inc
xor
xor
push
ficoms
pushf
dec
addl
jmp
push
mov
jno
movsl
dec
xor
cmp
imul
cwtl
movsb
das
add
mov
aad
das
mov
hlt
shrb
add
xor
out
cli
jg
arpl
xor
cmc
ret
or
push
lods
das
cmp
lea
ljmp
sbb
sbb
inc
nop
loope
xchg
ds
ss
lea
jno
mov
outsb
clc
movsl
jle
mov
clc
sub
cmpsb
mov
xchg
or
fistps
fdiv
jbe
mov
test
popa
imul
hlt
or
or
xchg
sub
dec
outsb
pop
add
nop
cli
in
popf
push
cmp
xor
in
jmp
mov
arpl
mov
mov
pmaxub
aaa
mov
or
fst
orl
pop
lods
pop
inc
cld
enter
mov
addl
sbb
mov
pop
jnp
cltd
and
or
sbb
cmp
mov
mov
lcall
ret
push
inc
xor
fdiv
ret
sub
add
test
cmp
clc
sbbl
mov
decb
mov
adc
sub
push
jae
aad
xor
fisubl
mov
movsl
roll
pop
test
push
xor
clc
dec
mov
lcall
imul
pop
mov
inc
xor
popf
inc
push
daa
int3
push
pop
outsb
pop
int
mov
pop
push
jne
mov
loope
adc
js
adc
mov
mov
pextrw
cmpsb
call
int3
mov
push
dec
adc
fwait
imul
rclb
sub
inc
leave
sbb
and
lcall
sbb
jecxz
push
clc
outsl
xchg
loop
jl
mov
jo
inc
aam
and
and
lods
or
cli
nop
addr16
inc
mov
ljmp
inc
xchg
inc
nop
and
addl
pop
sbb
xchg
lcall
push
fwait
add
test
pop
sbb
shlb
sahf
inc
in
xchg
mov
dec
insb
loop
data16
inc
add
mov
inc
pop
and
pusha
mov
xchg
clc
jg
mov
xor
xchg
sbb
sub
cmpsl
and
lock
adc
loope
rorl
movl
jl
push
mov
dec
pushf
fs
sahf
rolb
push
ds
inc
in
ljmp
aam
mov
test
out
lret
adc
jge
andl
lret
or
inc
insb
ljmp
cmp
test
pop
sbb
sbb
xor
es
xor
mov
out
nop
int3
rcr
xor
outsl
add
push
inc
sub
lods
sub
fcoms
mov
cmp
sbbl
insb
lods
shl
ja
mov
popa
loop
inc
inc
lods
pop
addl
imul
js
into
xchg
push
test
lods
rcrl
outsl
mov
xchg
jle
or
pop
jl
add
jl
jbe
ret
add
mov
negb
or
or
movsb
andl
sbb
add
aaa
fdivrp
pushf
or
xchg
movsl
sarl
ljmp
cmp
pop
mov
stos
mov
push
xchg
testl
fisubs
pop
add
divl
popa
aas
les
sbb
fildll
xlat
int3
shl
inc
pop
pop
pop
femms
push
imul
ret
dec
cwtl
cltd
dec
sbb
insb
jo
das
mov
fsts
hlt
fadd
mov
jo
jg
bound
push
lock
push
js
cmp
dec
int
or
out
adc
test
daa
bound
scas
mov
test
xor
sbb
call
stos
inc
sbb
fbstp
push
and
jecxz
and
cmpsl
lahf
dec
lock
xchg
hlt
test
pop
pop
rcl
dec
sub
pushf
mov
push
inc
pop
outsl
adc
lds
push
sub
mov
out
sbb
in
sahf
loop
clc
pop
mov
add
xchg
js
xchg
and
xchg
xor
imul
add
stc
lock
sub
and
stc
lret
test
outsl
lods
out
ljmp
xchg
xor
gs
daa
jne
jbe
lea
dec
and
mov
outsl
int
hlt
mov
addl
add
shll
mov
hlt
push
daa
es
int
jg,pn
imul
mov
inc
rcrl
dec
sub
sub
mov
enter
mov
push
ret
loopne
jmp
cmpsl
and
aam
fmuls
mov
lret
or
ljmp
jge
adc
insl
push
shll
fisttpl
jne
movsb
adc
xchg
sbb
aaa
and
mov
adc
pop
lods
and
and
test
aaa
incb
sub
fstpt
adc
jo
mov
push
ljmp
nop
leave
rcll
push
dec
dec
hlt
decl
cmp
rcrb
jns
fdivrl
pop
cmp
add
push
jmp
or
mov
or
mov
dec
imul
das
loope
mov
add
cmp
lahf
movsl
or
push
in
push
jbe
jmp
dec
daa
aad
inc
mov
mov
or
aam
shl
xchg
gs
aam
arpl
adc
push
rorb
mov
push
pop
cmpsl
mov
inc
mov
pop
aam
pushf
cmp
ljmp
lcall
das
mov
mov
in
outsl
fldt
push
jnp
or
mov
xchg
cwtl
clc
mov
xchg
les
inc
imull
push
sub
iret
mov
sbb
cmp
or
xor
aad
or
push
in
mov
sbb
outsl
mov
cmp
cmpsl
divb
fcoml
adc
mov
pop
pop
cmpsl
add
xor
xor
mov
test
xor
test
push
or
sub
jne
in
notl
clc
pop
adc
in
jne
imul
add
jg
call
loop
mov
insl
test
insl
imul
addr16
test
mov
mov
jecxz
adc
mov
test
fdivl
xor
sub
xchg
packsswb
inc
xor
add
fsubrs
popa
sbb
push
push
and
dec
je
mov
pusha
jnp
mov
popf
jl
lret
or
push
xor
sbb
aas
daa
out
push
shlb
xchg
shl
gs
push
in
fcmovne
xor
lods
mov
xor
das
xor
cwtl
xchg
xor
add
rcrl
cs
add
cmpsb
add
lea
sbb
jbe
jne
movsl
xorl
push
jl
out
mov
or
int
shl
imul
fisttps
jnp
cmp
out
mov
data16
add
rclb
push
loope
pop
mov
sub
xlat
dec
fwait
push
cs
std
jecxz
lcall
in
push
arpl
jb
push
lcall
fcomps
es
or
inc
jmp
mov
test
sbb
fcmovu
jb
imul
inc
add
jecxz
push
pop
xor
sub
or
movl
xchg
dec
js
in
jo
jg
and
mov
add
mov
pop
inc
out
fcoms
pop
insb
js
jns
outsb
dec
push
cld
ret
and
sub
mov
push
xlat
push
pop
or
mov
pop
pop
ljmp
imul
repz
add
dec
and
lcall
pop
insl
or
inc
xchg
cmpsl
jnp
sbb
pop
mov
sbb
add
adc
mov
sahf
in
sti
cmp
in
cltd
inc
lcall
in
pop
push
push
ss
sub
jmp
jle
nop
jg
add
call
xchg
movsb
pop
jmp
ret
movsl
rolb
repz
mov
fwait
jae
jge
std
pop
out
xor
into
inc
test
jno
ds
mov
adc
xchg
xorb
hlt
fistpl
push
test
in
stos
andb
mov
inc
roll
loop
ret
aas
mov
dec
jne
push
push
mov
jnp
or
mov
stc
or
mov
mov
call
push
ds
ss
push
and
pop
adc
sbb
sub
push
inc
dec
dec
sub
punpckhdq
decb
xchg
shrb
push
fldl
movb
andl
test
je
mov
mull
aas
push
shl
pop
and
xchg
subl
nop
stc
mov
ljmp
sub
in
mov
xchg
ljmp
inc
push
leave
sbb
clts
loop
rolb
mov
icebp
inc
int3
lods
int3
inc
adc
sub
cmpb
sbb
push
and
or
sub
xor
mov
fs
cmp
mov
es
inc
cli
push
pop
xor
mov
movsl
ljmp
add
mov
std
lcall
int
mov
sbb
adc
cmp
js
xchg
in
fdivrl
push
add
mov
or
add
mov
insl
les
cmp
sub
add
in
js
inc
sub
dec
sbb
arpl
inc
in
or
testl
sti
arpl
fs
mov
sub
mov
jg
fcom
xchg
ja
into
sbb
dec
lret
inc
ss
xor
repnz
add
sub
hlt
add
data16
jo
rcr
outsl
rol
mov
xchg
roll
ficomps
pop
dec
test
roll
out
mov
pop
lods
inc
fimull
and
cli
icebp
jge
jmp
jecxz
jmp
test
push
cmovnp
icebp
insl
add
cmp
pushf
push
jbe
cmp
call
loopne
dec
sub
push
mov
pop
dec
ja
dec
mov
gs
icebp
adc
shrb
xor
stc
push
jo
mov
testb
and
xchg
jmp
mov
sar
mov
mov
repnz
das
sar
xchg
xchg
mov
xchg
ja
cli
std
lea
andl
push
xor
ret
pop
or
add
xchg
or
pop
sbb
jb
and
aaa
outsl
cli
movsl
stos
test
sub
lahf
iret
popf
push
mov
push
jne
jne
inc
add
add
imul
pop
sbb
jns
dec
aad
or
rcr
leave
inc
push
and
and
cmpsl
idiv
in
adc
xchg
dec
adc
shll
cmpb
jmp
xor
not
shll
jns
fidivs
sarl
mov
clc
push
xor
xchg
out
cmc
out
fisubs
inc
cmp
mov
cs
cmpsb
or
mov
mov
pushf
xchg
sarb
xor
jne
std
mov
pop
inc
or
jecxz
movsb
repz
mov
mov
mov
push
or
sub
imul
sub
mov
dec
mov
and
fcompl
adc
hlt
xchg
fs
lds
ds
xor
push
xor
je
or
jo
out
lds
xor
jnp
fcoml
das
jae
xlat
loop
mov
js
pop
inc
push
das
stc
adcl
jne
shlb
mov
jns
lcall
jb
xor
pop
fwait
test
jle
add
xor
jge
dec
mov
ss
insl
sbb
push
push
insl
ret
lcall
in
inc
pop
xchg
jns
pushf
lret
or
jl
jl
divb
add
pcmpgtd
ja
bound
inc
outsb
ret
mov
test
std
push
sbb
xorb
jno
or
mov
cmp
shll
rcl
stos
sbb
mov
xor
fdivp
shr
cmp
adc
inc
xchg
out
movsb
or
lds
bextr
fcom
notb
ljmp
in
push
add
push
clc
ret
cmp
bound
insl
cld
and
pop
daa
hlt
in
hlt
test
sub
outsl
movb
or
stos
hlt
sti
xchg
mov
fst
adc
cmp
stos
loop
and
insl
dec
rolb
xchg
push
pusha
add
scas
out
shll
push
xor
aad
clc
andb
xchg
cld
out
xlat
xchg
xchg
das
aad
sub
test
mov
enter
mov
enter
ljmp
pop
fwait
fisubs
fcomip
movsl
mov
lahf
pop
pop
and
adc
adc
out
jp
pop
loopne
stos
jbe
jb
or
inc
sar
in
sbb
loop
mov
jg
scas
fists
jo
adc
adc
imul
mov
mov
icebp
sub
fcmovb
sbb
mov
jbe
aaa
sub
movsl
out
dec
or
jnp
push
lcall
sub
mov
mov
mov
nop
sbb
test
fcmovnbe
mov
and
add
sbb
adc
jmp
jb
push
cmp
shll
lock
push
nop
stos
arpl
cld
decl
popf
insl
inc
daa
dec
adc
in
ljmp
mov
adc
xchg
outsb
out
in
fmull
std
add
pop
mov
gs
lcall
sbb
jmp
subb
jmp
test
inc
adc
call
add
or
jbe
and
mov
xor
cmpsb
mov
cmp
pop
movsb
sub
ret
inc
mov
rcl
mov
test
int
scas
jle
add
clc
and
clc
inc
insb
dec
shrb
mov
push
mov
out
adc
push
lock
push
aam
mov
cmp
jge
mul
test
dec
mov
dec
iret
ret
daa
mov
shrl
js
call
or
pop
daa
jb
mov
mov
push
inc
jecxz
mov
pop
loope
pop
push
cmc
mov
sub
jbe
sbb
mov
repnz
xor
sbb
adcl
outsb
mov
cmp
xchg
or
hlt
sbb
xchg
push
jp
or
clc
pushw
add
mov
fstpt
popf
or
mov
adc
repz
or
adc
leave
int3
mov
nop
adc
xor
inc
repz
pushf
inc
and
mov
leave
movsb
lret
pop
or
jmp
aaa
icebp
jbe
jae
sub
dec
cs
imul
rclb
xchg
pusha
or
outsl
ss
test
test
mov
xchg
loop
xor
repnz
and
dec
xchg
mov
pop
loopne
mov
mov
cwtl
inc
bound
or
cmp
pop
push
lods
cmp
fildl
mov
push
mov
xchg
push
sahf
mov
cltd
imul
in
pop
jg
movsl
dec
repz
jg
mov
jle
cmp
inc
cld
jle
insb
jg
sub
adc
xor
push
test
fidivrs
and
test
mov
push
or
fistpl
sub
aam
int
cli
mov
ret
add
push
pushf
ror
jns
shll
sbb
in
fwait
ret
jne
ret
mov
hlt
mov
sbb
inc
add
inc
and
cmp
movsb
lds
mov
loop
out
outsl
lahf
inc
cmp
dec
das
cld
push
jno
je
sbb
mov
ret
hlt
cmp
xchg
loope
add
xchg
imul
test
lock
bound
xor
loope
addl
outsb
ja
cwtl
jb
push
inc
pop
scas
fwait
aas
lahf
imul
das
inc
or
lock
jo
popf
sbb
mov
aaa
dec
es
dec
mov
push
cmp
scas
fdivrp
test
push
sub
push
xor
iret
ficomps
mov
dec
int3
add
inc
mov
ljmp
insl
scas
and
in
inc
lock
mov
insb
inc
xlat
aaa
jge
fildl
add
push
inc
ja
push
fisubrs
test
fildll
clc
aaa
jno
repnz
orb
sarb
push
bound
sub
data16
bound
mov
xchg
stos
enter
mov
sub
rcrl
ss
add
sub
mov
xchg
mov
adc
das
fdivl
add
andb
loop
in
stos
mov
lahf
stos
popa
enter
ss
ret
clc
cmpsb
sbb
mov
insl
jmp
inc
mov
sarb
lods
jg
nop
cmpsb
xor
cmp
imul
cmpsb
in
mov
mov
cwtl
lcall
fadd
lcall
fcoml
leave
jb
gs
lods
ja
mov
and
je
pop
push
test
cmp
outsl
dec
int
xchg
ljmp
in
std
sbb
rcll
jnp
aad
outsl
jg
fisttpll
fmul
sbb
dec
inc
cmp
xor
push
loopne
inc
jae
push
repz
test
sub
mov
and
ret
and
roll
jge
outsb
cmp
std
or
sbb
stos
inc
sbb
sub
out
sub
jno
and
negl
mov
adc
mov
sbbb
lods
popa
dec
xchg
lock
ret
sbb
xchg
push
cmp
xor
and
psllq
inc
push
les
xlat
push
mov
int
xor
cmp
push
addb
jne
pop
push
mov
fidivrl
xchg
aad
movsl
aaa
into
adc
push
xlat
cs
das
adc
aam
fwait
xor
adc
cmp
movsl
jbe
and
pop
and
sbb
push
or
int3
test
xchg
jmp
loop
ret
sub
std
push
test
jmp
jbe
imul
push
dec
iret
inc
push
jbe
push
or
ficoms
sti
das
shll
or
rcrb
add
adc
mov
jl
pop
leave
pop
jnp
sbbb
or
mov
add
mov
pop
add
inc
jne
ljmp
fdivs
sbb
push
adc
into
jo
ss
jo
inc
sbb
dec
lcall
pop
cmp
xchg
test
mov
cld
adc
jmp
rol
inc
mov
popf
out
bound
mov
fadd
lds
rclb
or
cmp
push
push
jmp
fsubrs
loope
sbb
push
cs
aaa
cmc
test
push
popf
arpl
xor
arpl
shl
adc
xor
jl
sub
stos
pop
nop
into
in
aaa
pop
js
xor
jne
xor
sub
pop
clc
outsl
mov
pusha
mov
js
loopne
adc
in
sub
dec
mov
pop
inc
pop
inc
adc
mov
das
insb
pop
mov
push
xchg
enter
jge
push
test
adc
ret
in
sub
mul
insb
or
popa
sub
add
mov
add
enter
cld
jg
cmp
add
xchg
sub
outsl
popl
mov
sbb
insl
add
ljmp
test
or
sbb
xchg
dec
xor
pop
call
xchg
pop
inc
sub
outsl
push
lret
out
push
add
pop
dec
pop
arpl
xchg
push
aaa
stos
sbb
popf
push
sbb
cmp
js
xchg
add
lret
idivl
mov
fmul
push
push
mov
aad
adc
push
mov
je
xor
fldt
mov
les
inc
push
in
out
and
aam
mov
ljmp
cli
pushf
dec
mov
flds
mov
push
and
and
ss
pop
lahf
call
xor
dec
pusha
dec
xchg
mov
lret
inc
add
jbe
mov
mov
outsl
insb
aam
sahf
loop
lret
add
pusha
xchg
stos
stc
push
roll
loope
movsb
enter
pushf
add
and
push
fdivl
ds
dec
pop
mov
push
scas
cli
movsb
enter
aam
shll
mov
mov
ljmp
add
or
movsb
mov
or
mov
dec
lods
lret
sub
fsts
das
jb
lock
insb
ss
mov
or
in
into
fldt
adc
repnz
xor
je
xor
in
ficomps
push
stc
and
xchg
fwait
jle
out
movsl
popa
and
es
in
icebp
mov
ret
leave
jge
movb
cmp
cs
mov
push
mov
jecxz
jge
cmpsb
fiadds
inc
out
xchg
ss
loopne
or
mov
addr16
push
mov
das
push
and
aad
test
icebp
ret
enter
icebp
movsl
repz
sbb
dec
out
ljmp
pop
cwtl
stos
sub
imul
decb
jecxz
loope
lock
dec
sbb
test
iret
mov
lods
into
push
lret
repz
ret
dec
cmp
mov
int
in
add
out
sbb
adc
pop
out
pop
mov
jnp
add
adc
xlat
jmp
icebp
das
xor
loopne
je
mov
leave
adc
clc
mov
add
jmp
dec
and
enter
mov
fisttps
inc
aaa
mov
gs
jl
cwtl
sbb
mov
jle
test
sub
imul
insl
loope
fistpll
mov
js
jns
pushf
xchg
aas
push
rorb
sbb
sahf
ljmp
push
pop
sti
outsl
add
jne
enter
mov
sub
out
aam
xorb
lret
cmp
lods
pop
aaa
push
hlt
xor
xor
iret
jb
sub
stos
mov
loopne
inc
adc
stos
push
fcoms
push
inc
mov
push
rolb
mov
cltd
pusha
xchg
jp
sbbb
or
popa
out
fcmovnu
stos
aaa
stc
cmpsl
sub
ret
ss
adc
push
pop
push
and
mov
jo
int
jmp
sti
and
ljmp
mov
pop
sub
jae
cmpsb
aam
scas
add
cmpsb
in
and
sbb
push
adc
out
ljmp
xchg
push
inc
xchg
pushf
popf
test
daa
aas
pop
das
and
std
aaa
std
subb
test
mov
sub
or
ja
ret
ss
shlb
lds
dec
mov
cmpsb
je
mov
jns
sahf
ficompl
jo
cmpsb
xchg
sub
jg
inc
movaps
xor
adc
mov
insb
sbb
jle
jo
mov
imul
adcb
fists
ret
inc
rorb
mov
rol
outsl
or
add
cmc
adc
or
cli
das
cld
dec
test
xor
push
js
pop
ds
and
sbb
cmpsb
push
pop
lcall
mov
out
xorl
xlat
inc
dec
mov
fwait
dec
ja
mov
clc
jg
mov
mov
cmpsl
in
outsb
jae
pop
mov
loop
xor
pushl
adc
bound
sub
popa
xchg
adcb
xor
outsb
add
dec
scas
in
inc
fistpl
jo
fimull
cli
enter
insl
cli
scas
adc
jb
xchg
daa
dec
jne
dec
add
xor
adc
jp
jle
sub
insl
inc
loopne
jmp
mov
sar
pop
add
push
inc
push
pop
shll
test
test
aaa
loop
cmp
inc
push
lods
mov
mov
dec
mov
rcr
cwtl
pop
hlt
out
mov
jp
and
xor
mov
push
pop
jne
pop
dec
push
repz
push
cmpsb
cmp
lcall
shll
outsl
add
call
lcall
jmp
xchg
xor
iret
pushl
push
ds
cmp
xor
jp
or
lcall
sub
push
or
sahf
cmp
and
cs
push
fstl
mov
das
ret
adc
sbb
lods
xchg
push
and
cmp
sbb
sahf
adc
imul
push
jb
push
cltd
mov
gs
dec
mov
ret
push
adc
sub
icebp
inc
loop
inc
std
imul
outsb
inc
add
mov
mov
cmp
sbb
dec
mov
cltd
or
adc
xor
sub
jne
outsl
aas
mov
inc
push
push
inc
xchg
cmp
hlt
push
mov
imul
xchg
loop
push
mov
in
outsl
movsl
loop
add
loop
in
andb
dec
mov
add
fnstsw
xor
test
fsubrp
pop
fcmovnb
jbe
fsubrl
testb
mov
pusha
in
dec
cmpl
addr16
imul
mov
jnp
mov
jge
and
loopne
push
dec
pop
adcl
dec
imul
mov
clc
xchg
lea
aaa
sub
mov
pushl
cld
mov
scas
sbb
add
adc
push
ds
das
cmp
das
ds
loope
nop
gs
clc
dec
outsb
scas
das
sub
add
mov
sub
xor
lds
xchg
pushl
inc
addr16
subb
sbb
sbb
xchg
jo
hlt
push
adc
ljmp
xchg
das
lret
repnz
setb
jecxz
mov
js
xor
jbe
adc
imul
cld
sub
xchg
mov
mov
daa
lods
pop
pushf
out
mov
add
cld
test
addb
fldcw
sub
cmp
dec
inc
xchg
out
jne
enter
sarl
mov
cltd
mov
mov
jg
push
mov
call
and
adc
mov
mov
cmp
cld
mov
push
inc
jmp
xor
push
xor
cmc
mov
les
inc
cltd
or
loopne
je
jmp
sub
mov
xor
mov
sbbl
add
pop
pop
inc
das
jns
inc
mov
sub
stos
xchg
push
popa
jg
inc
or
cmp
pop
add
xor
mov
ret
dec
arpl
jl
mov
mov
and
lcall
jbe
sub
push
dec
xor
adc
jmp
cmp
pop
popa
stos
sahf
xchg
or
mov
sbb
push
aam
fidivs
add
mov
int3
nop
stos
mov
stos
icebp
sub
add
mov
iret
imull
andb
outsb
dec
xchg
lahf
jne
jle
push
add
dec
jl
xchg
mov
xor
add
rclb
into
loop
xchg
lahf
or
movsl
sub
lret
nop
sahf
pop
cs
cmpl
jmp
jnp
and
sbb
cli
xor
clc
call
dec
test
jno
outsl
cli
push
mov
inc
xchg
lea
orl
outsl
dec
mov
push
sub
mov
in
jbe
loope
shl
lock
mov
sub
clc
sbb
adc
xchg
nop
pop
gs
test
or
pop
inc
pop
aad
fisttps
mov
xor
mov
dec
imul
loope
imul
aam
pop
aam
push
xor
push
test
rol
jnp
adc
push
adc
les
popa
mov
sbbb
push
lds
int
dec
inc
cltd
lock
dec
or
xchg
sbb
repz
push
out
into
scas
inc
aam
inc
mov
mov
lcall
add
out
cmp
js
pusha
pop
inc
cmpl
out
sbb
adc
mov
dec
insb
sbb
mov
fstl
push
stc
pop
jbe
cmp
ds
adc
push
jbe
add
mov
jle
mov
enter
imul
and
imul
dec
cmpsb
mov
mov
cmp
dec
stos
std
pop
jle
push
in
adc
jnp
hlt
int3
cwtl
and
rorl
add
ljmp
fdivr
mov
adc
inc
js
in
call
push
insb
fldcw
adc
adc
ljmp
sarb
jbe
scas
adc
jmp
jle
jge
push
mov
jmp
ret
in
xorb
mov
cmp
cmp
add
xor
mov
iret
push
fldl
addr16
sub
mov
addl
lahf
fs
ja
cmp
fnstcw
inc
aaa
mov
mov
sub
les
test
sbb
dec
dec
sbb
mov
or
loop
movsb
mov
adc
mov
xor
or
addl
mov
sub
inc
pop
mov
or
arpl
push
jae
xchg
bound
test
sub
inc
cs
sti
push
imul
cmpsl
call
icebp
jnp
xchg
fsubrs
imul
dec
fsubrp
push
inc
mov
cmp
add
incl
or
pop
sbb
sub
lret
add
cli
inc
jg
inc
xor
scas
in
jp
shr
sti
xor
int
sbb
xchg
push
push
lock
adc
push
in
insl
add
mov
lret
jb
pop
sbb
std
lcall
push
imul
lret
pushf
outsb
cmp
mov
in
call
clc
or
roll
test
idivb
jg
loopne
adc
cld
dec
movsb
dec
cmp
aas
xchg
clc
or
mov
fstl
shlb
inc
pop
or
out
sub
push
out
pop
xor
xor
ja
lock
repnz
fsubl
out
sbb
aam
jg
push
aaa
xchg
jge
add
pop
pop
ficoml
pushf
dec
sub
in
test
add
mov
outsl
dec
dec
test
ja
scas
mov
and
xorl
pop
mov
mov
lods
pop
std
adcb
mov
jecxz
sti
test
test
inc
enter
jbe
das
insb
jo
test
jo
sub
cs
and
imul
adc
shll
std
scas
lods
cltd
xchg
scas
outsl
mov
idivb
mov
rolb
and
mov
inc
rclb
mov
mov
ss
add
cmpsl
lock
les
push
loopne
stos
int3
mov
add
sub
repz
shrl
fsubl
dec
out
mov
popa
and
jae
leave
cmc
mov
outsb
fs
out
sub
push
push
in
subb
rorb
sub
cmp
loopne
pop
ffreep
mov
enter
incl
movsb
sbb
pop
add
outsb
outsl
or
movsl
arpl
inc
into
cmp
outsl
inc
fiaddl
xor
aad
sub
pop
pop
dec
push
dec
dec
inc
and
ja
or
aam
cmp
jmp
xchg
fucomip
push
jnp
xchg
dec
sbb
sbb
and
aam
push
es
addr16
test
adc
fisubs
pop
ret
decl
cmpsb
push
roll
add
roll
cmp
jo
pushf
movsb
int
outsb
insl
loop
xchg
or
pop
cmp
mov
outsb
fisttps
enter
add
mov
mov
out
push
sarb
aaa
jno
and
rcrl
pushl
xchg
repz
adc
test
or
lods
fadd
inc
fcomip
xchg
xlat
negb
push
movmskps
outsl
aaa
pop
adc
fs
pushf
js
cmp
aad
insl
loopne
daa
or
outsl
pop
js
jb
adc
mov
xchg
icebp
hlt
xchg
sub
pop
add
out
in
ret
add
xchg
mov
addl
mov
clc
or
aaa
pop
clc
rorl
sub
sti
imul
sub
mov
jb
test
gs
sub
mov
or
jge
and
mov
sbb
leave
aad
inc
es
and
pop
in
cmp
xor
pushf
pop
adc
in
incl
push
push
and
mov
pop
xor
mov
stos
push
xor
and
dec
mov
adc
icebp
mov
sub
jmp
js
jg
fdivrl
iret
push
inc
lock
mov
and
push
jmp
pusha
or
jl
xchg
xchg
aam
cld
jg
movsb
mov
sub
fdivrs
movsb
dec
jg
aaa
stos
imul
xchg
push
cmp
jge
mov
sbb
sbb
stc
jle
jo
test
and
pushf
ja
push
fdivr
daa
mov
les
aaa
outsl
cmp
mov
aad
mov
xchg
pop
cmpsl
and
xchg
adcw
clc
cmc
hlt
movsb
cmc
test
sahf
xchg
adc
sar
cs
push
mov
loop
shl
test
mov
pop
ret
cmp
mov
call
push
lret
sub
int
pop
and
pop
pop
push
add
sti
or
ret
and
mov
xchg
add
cs
scas
cli
sbb
push
fadd
lea
int
xchg
decl
rcll
mov
das
lret
fistpl
mov
lret
cmp
ret
sbb
int3
sbb
sub
mov
adc
jg
addb
stos
pop
add
cmp
mov
inc
outsl
add
jne
xchg
imul
xlat
mov
or
pop
mov
mov
pop
aas
js
ret
mov
rcl
xchg
sub
pop
idivb
add
fcoms
adcb
fidivl
test
insl
and
push
enter
sbb
icebp
in
add
loop
iret
mov
sbb
stos
xor
inc
mov
sub
sub
aaa
cmpsl
xchg
adcb
adc
aaa
push
andl
cmp
icebp
cmp
pop
or
std
and
incl
orb
ret
icebp
xchg
push
hlt
mov
dec
es
sbb
xchg
push
pusha
mov
das
inc
call
aam
cmc
push
jmp
pop
scas
dec
pop
call
lds
jge
icebp
sbb
popf
xchg
or
rorl
or
inc
in
mov
cmpl
fadd
mov
and
inc
sbb
jb
sbb
in
stos
and
jb
jmp
or
pop
out
push
inc
pop
inc
mov
pop
and
push
pop
dec
mov
mov
xchg
adc
push
jl
das
add
pop
dec
or
push
mov
decb
push
or
aas
inc
lock
sbb
sti
stos
pop
pushf
sub
cmpl
je
movsb
popa
ucomiss
call
add
fdiv
lcall
call
inc
sbb
inc
add
mov
mov
push
push
or
lret
rcrl
hlt
shrb
les
js
or
pushf
jmp
fwait
loope
inc
in
outsb
lcall
rol
xchg
dec
pop
shl
loopne
push
ret
xchg
sbb
add
rcrb
fimuls
imul
mov
mov
imul
repnz
cmpsl
push
mov
dec
in
jle
push
pop
xlat
fiaddl
movsb
adc
pop
pop
mov
pop
dec
xchg
xchg
lret
decb
jecxz
dec
xchg
pushf
mov
jecxz
out
pop
lea
mov
pop
out
mov
mov
pop
es
mov
enter
sub
xor
lods
sti
cmp
ljmp
or
stos
test
inc
xchg
loope
or
jmp
fbstp
push
lahf
pop
sub
sub
adc
mov
jae
cs
popf
xor
ja
mov
es
cmpsb
mov
cmp
cmp
dec
push
std
sub
rcl
dec
sbb
lret
call
incl
fcomps
push
mov
lret
and
mov
paddd
adc
and
sub
dec
xorl
add
movsl
add
inc
push
sbb
xchg
rorl
dec
mov
xor
inc
cmc
mov
leave
in
add
dec
jns
ja
insb
push
and
je
sub
lods
xor
push
add
dec
in
jle
push
cmpsb
movsb
sbb
cmp
outsl
add
loopne
out
dec
adc
sbb
or
push
lahf
xchg
or
and
les
arpl
push
testl
ja
stc
test
sbb
or
xchg
sti
pop
inc
mov
stos
sbb
mov
enter
dec
jns
cmp
inc
sub
lea
in
lcall
pop
jnp
sub
push
push
cmpsb
test
sub
aam
dec
push
rcrl
loopne
dec
dec
stc
insl
sar
push
movl
mov
fiadds
insb
pop
data16
or
xorb
mov
lock
and
xor
lret
fucomi
inc
fdivl
mov
mov
jno
inc
clc
inc
mov
outsb
pop
xor
lcall
testl
jg
or
push
pop
push
adc
notb
frstor
mov
xlat
mov
mov
jl
imul
repnz
in
mov
loopne
lret
mov
push
out
sub
lcall
adc
in
xor
xor
aas
mov
mov
push
aaa
push
or
popa
loope
imul
pop
ror
xchg
mov
mov
shl
lfs
adc
mov
imul
insl
sbb
shll
ljmp
mov
in
out
mov
ucomiss
add
jae
mov
stos
fisubrs
outsb
push
aaa
leave
fists
and
test
enter
in
call
or
push
mov
or
or
sbb
fwait
or
rolb
jae
pop
ficompl
mov
ss
jg
cltd
ds
jo
popa
xor
cwtl
sar
in
loop
mov
push
popl
mov
push
jmp
jecxz
inc
inc
test
xchg
dec
dec
xchg
push
call
dec
xchg
and
enter
jge
stc
popf
add
std
aaa
aam
mov
lds
inc
nop
cmp
mov
stos
mov
or
cmp
js
push
inc
add
incl
sbb
add
in
ds
or
or
xor
int
xchg
mov
xor
pop
inc
out
fwait
push
dec
inc
or
outsl
cmp
dec
int
scas
fnsave
push
mov
stos
ret
add
or
push
lock
cwtl
fstl
stos
or
mov
push
clc
sub
mov
jge
pop
adc
sbb
mov
loop
push
cwtl
and
out
ret
ss
sarl
mov
xor
sarl
jecxz
mov
test
mov
sbb
test
mov
mov
inc
jno
aaa
lret
adc
fbld
enter
mov
jmp
movb
jecxz
mov
jmp
mov
shll
lods
inc
das
std
mov
push
jp
and
js
cmp
sbb
sarb
icebp
lea
push
sbb
and
cmc
adc
adc
mov
and
and
xchg
cli
adc
mov
inc
nop
mov
or
sahf
pop
push
lret
mov
nop
add
cld
push
pop
sbb
or
das
test
jo
mov
stos
aam
shlb
rcl
cltd
mov
fbstp
push
or
xor
mull
repnz
jae
sub
je
dec
cld
fisubrs
mov
xchg
ret
mov
jb
loope
outsb
add
aaa
sub
add
clc
sub
dec
pop
ffree
dec
cld
add
add
sub
mov
sbb
rorl
je
enter
inc
add
xor
pop
mov
pop
or
pop
push
dec
mov
mov
xchg
adc
pop
cmp
mov
rcrl
clc
call
dec
aas
mov
lea
cmp
cmp
jl
add
dec
mov
jecxz
jg
pop
mov
adc
fldt
in
je
sbb
cmpsb
outsb
cmpsb
inc
fxch
adc
jmp
std
shrb
rcl
inc
mov
lahf
clc
xor
fstl
mov
cmp
dec
ret
loope
push
cmp
test
stos
push
pop
jne
mov
shrb
cmp
dec
add
sbb
lahf
cmpsl
ret
inc
cmc
addr16
pop
orb
cli
inc
cld
cmp
dec
adcb
stos
cmp
fdivrl
cltd
adc
shll
outsl
rcl
jnp
push
sbb
inc
repz
lea
rcr
popf
jp
xchg
add
push
ds
or
cmp
push
loope
cmpsl
in
jecxz
in
cmc
leave
push
gs
incb
inc
sti
xchg
pop
push
mov
mov
xchg
mov
ljmp
pop
sub
ja
icebp
or
pop
push
lds
pop
aad
push
imul
mov
jnp
mov
jo
push
cmpsb
outsl
or
iret
mov
loop
aas
adc
or
xchg
les
sub
jb
loopne
shl
mov
mov
push
sub
lds
call
and
dec
pop
flds
adc
jge
mov
std
nop
hlt
aaa
pushf
adc
dec
xchg
adc
cmp
pop
jnp
jno
dec
xchg
jne
fcmovnb
icebp
cltd
mov
and
je
testb
lods
cltd
xor
mov
sbb
push
mov
cmpsb
dec
test
and
outsb
dec
push
mov
std
fwait
push
fwait
subl
push
push
pop
imul
push
je
stos
sub
lea
cmpsl
adc
jp
arpl
dec
xor
movsb
cmp
nop
loop
rcll
dec
ret
mov
xchg
aam
outsb
lret
mov
mov
pop
add
mov
fmuls
dec
jl
mov
decb
mov
xchg
push
mov
outsl
jmp
push
xor
mov
xchg
pop
call
sbbb
cld
inc
cmc
sub
xor
sti
rcll
sub
cli
outsl
jp
mov
test
btr
adc
test
and
outsl
shr
xor
adcl
sar
mov
outsb
iret
sahf
jae
mov
lock
jecxz
pop
das
or
jns
loope
cmc
cmp
loopne
push
cmpsb
dec
ffreep
pop
addl
xlat
stos
cltd
dec
xor
jmp
sbb
flds
jl,pn
jl
lock
mov
stos
mov
mov
ret
pop
loope
add
insl
mov
add
fwait
xchg
movsl
lea
pop
or
mov
sbb
fisttpl
or
loopne
fwait
lock
jmp
in
clc
aam
add
out
and
ret
cmpsl
push
fcoml
rcrb
cs
push
or
fmuls
pop
mov
insb
arpl
sbb
test
lds
adc
sub
test
fnstsw
loopne
dec
stos
push
or
sbb
xor
std
adc
jecxz
fildll
push
push
outsb
sub
mov
pop
mov
jmp
push
sarl
xchg
movsl
cwtl
pop
in
xchg
push
mov
les
cli
mov
add
popf
ret
dec
mov
or
cs
lret
icebp
pusha
and
mov
pop
push
inc
in
lret
out
insb
imul
nop
xor
faddp
or
ss
add
call
jl
jle
inc
js
xchg
pop
cld
pop
sub
mov
pushf
mov
jbe
pop
clc
pop
push
andb
or
out
ljmp
mov
add
nop
pop
jp
cmp
les
push
pop
sti
shll
in
cli
and
cltd
sar
aam
les
jmp
das
and
scas
pop
pop
pop
lret
arpl
mov
jbe
adcl
aaa
xor
adc
test
sti
lods
or
jno
mov
imul
dec
fbld
and
sub
mov
ja
ja
in
outsl
pushw
subb
imul
mov
rorl
add
out
xchg
xchg
push
jne
xchg
inc
cmc
ret
mov
mov
cmpsb
cld
sbb
sub
mov
inc
mov
inc
hlt
cmp
aas
mov
xlat
in
push
dec
cmp
aam
ficoms
rorb
mov
fimuls
das
ror
outsb
or
test
inc
xchg
cmc
mov
xor
test
sbb
mov
and
mov
mov
inc
cmpsl
test
divl
mov
add
fsubrs
xor
add
fistps
fdivrl
in
dec
in
ss
jg
dec
adc
rcll
outsb
fcmovnbe
aad
in
mov
adcl
pop
or
add
test
or
sbb
dec
mov
insb
jmp
cld
mov
mov
jae
mov
xor
sahf
stc
test
leave
hlt
loope
fisttpll
jbe
mov
xor
jle
repz
inc
or
int
in
pop
mov
jp
mov
dec
inc
mov
push
mov
outsb
jl
mov
sbb
adc
aaa
sbb
adc
and
outsl
pushl
aad
lret
and
sbb
in
fldcw
mov
or
je
in
inc
mov
insl
xor
or
push
dec
mov
mov
sub
clc
fildll
outsl
xor
pushf
dec
fsubp
jno
dec
or
sbb
xor
mov
sarb
pop
sbb
inc
andl
mov
adc
sbb
repnz
cmpl
mov
in
mov
out
sbbb
ss
pop
jecxz
in
nopl
or
sti
scas
in
dec
jne
and
sub
loope
out
incb
mov
or
ret
fisubl
mov
lahf
roll
test
inc
inc
sbb
pop
call
jno
insl
sbb
cmc
shrl
shr
dec
std
cmc
clc
xchg
adc
gs
pusha
pop
mov
xor
shlb
nop
aad
test
dec
cmp
add
xchg
jp
movsb
cwtl
out
push
mov
adc
movl
pusha
shll
adc
pop
out
loopne
in
test
sub
push
rolb
mov
daa
mov
bound
nop
push
js
xor
inc
cmp
add
fdivs
push
add
xlat
iret
divl
mov
loop
in
stos
pop
shrl
mov
rcll
inc
adc
xchg
mov
imul
fldenv
clc
ljmp
lret
int3
mov
jnp
jecxz
mov
rcll
and
out
pop
notl
testl
cmp
jl
imul
xorb
dec
aam
jmp
into
xchg
push
jl
call
frstor
iret
cmp
sar
push
mov
xchg
aaa
dec
sbb
or
scas
addb
jmp
loopne
shrb
rolb
in
in
out
lds
stc
mov
jg
cli
mov
shlb
lea
shrl
sbb
xorb
pop
mov
sbb
ss
out
sub
add
dec
mov
push
or
dec
ja
adc
fsubl
xchg
fcomp
jge
and
pop
shl
fs
inc
subl
mov
filds
and
cmpsl
shlb
out
xor
and
mov
cmp
lods
adc
fcmovnbe
pop
fcmovne
fwait
sbb
pop
and
outsb
mov
int
mov
jo
push
or
jne
xchg
dec
adc
clc
stos
xchg
pop
ljmp
jns
dec
gs
enter
inc
jo
pop
inc
pop
push
cmp
cld
ffreep
or
push
xor
loop
movsb
jp
mov
aas
dec
and
dec
mov
pop
push
mov
insb
or
xor
fistpll
daa
sbb
insl
fbld
inc
adcb
push
xor
xlat
rol
add
scas
jge
shrl
jo
xchg
adc
mov
lret
lock
outsl
call
inc
stos
icebp
testl
mov
clc
jns
in
mov
or
adc
and
mov
call
test
cltd
and
enter
imul
lods
stc
mov
test
movsb
xor
aaa
fstp
aam
inc
push
mov
mov
or
xchg
mov
inc
sbb
ja
call
mov
jecxz
xchg
pop
cmp
dec
mul
push
mov
mov
call
int
dec
in
xchg
and
mov
je
scas
sti
cwtl
or
popf
push
data16
aam
dec
pop
push
inc
push
mov
mov
push
aas
push
or
cmpsb
rcr
lds
add
dec
pushw
inc
sti
pop
and
ja
push
out
lcall
js
loope
mov
jecxz
mov
movsb
pop
jae
adc
inc
testl
mov
mov
or
sbb
lea
test
mov
lock
mov
jae
sub
les
fwait
mov
shrl
mov
test
xlat
cltd
ret
dec
outsl
xchg
into
hlt
or
push
xchg
mov
in
das
insl
clc
mov
xchg
lds
sbb
fsubrs
pusha
aas
sbb
push
dec
arpl
in
and
data16
and
mov
testl
or
in
dec
sub
mov
sub
add
outsl
jl
aad
ret
pusha
xchg
add
fwait
out
push
aam
adc
mov
inc
push
stc
fstps
mulb
mov
adc
imul
sbb
loopne
mov
outsb
sbb
mov
popf
inc
push
adc
dec
insb
pop
cld
or
mov
add
jle
imul
aas
fs
push
adc
lods
outsl
fsubrl
fmul
xor
adc
xor
add
scas
outsl
mov
xchg
jmp
jle
mov
push
adc
push
sarb
jbe
sub
and
pop
mov
mov
pop
repz
sbb
mov
cmpsb
dec
xor
pop
lret
cmp
fnstsw
push
dec
cltd
mov
ja
mov
rcrl
cli
ret
mov
push
mov
sbb
loop
and
sar
decl
notb
dec
push
xchg
or
fdivl
jns
sbb
add
xchg
pushf
subl
dec
rol
cmpsb
mov
in
in
mov
add
bound
lret
jp
adc
push
ljmp
call
inc
cmp
popa
mov
lret
mov
cmc
outsl
xchg
sub
sub
cwtl
dec
push
sti
inc
xchg
imulb
fwait
jmp
ds
std
push
xor
cs
add
fidivl
dec
or
jl
xchg
or
pop
and
xchg
mov
inc
repz
xchg
sub
es
add
cltd
rorl
jge
push
sbb
pop
mov
call
stos
mov
cwtl
inc
mov
imul
fsubl
mov
jae
adc
mov
mov
and
aad
push
test
loopne
xor
dec
rorb
adcb
aaa
rcrb
out
flds
fwait
lds
pop
jg
xchg
mov
decl
sti
cs
out
wbinvd
inc
dec
aas
out
aad
or
or
jg
push
mov
test
sbb
rorb
lahf
mov
fwait
repz
adcb
in
pop
pop
pop
fdiv
mov
xor
addb
test
jb
cltd
leave
out
push
adc
test
and
jne
add
shlb
mov
sbb
mov
ds
mov
mov
pop
stos
cmp
jmp
adc
pushl
and
in
or
or
cmp
mov
cld
shll
jo
pop
fxrstor
aam
jno
loope
in
adc
das
in
and
sbbb
jmp
fs
popf
or
jbe
push
stos
std
ret
call
adc
aas
inc
mov
aad
mov
fldenv
cmp
out
or
outsl
lea
ret
adc
insl
add
inc
ss
insl
stos
add
ficompl
cmpsl
dec
mov
mov
adc
mov
mov
mov
push
add
push
push
cmpl
push
jo
fisttpl
icebp
or
jl
push
xchg
insb
scas
xlat
das
outsb
mov
shll
inc
fcmovbe
ljmp
mov
jnp
push
mov
mov
push
idiv
xchg
mov
fcmovnu
movsb
js
das
testl
nop
xor
lock
lods
push
adc
lods
or
and
lea
call
cmp
movsb
lods
mov
sub
fs
inc
mov
adc
jg
push
std
std
insl
int
divb
mov
push
cwtl
mov
mov
test
mov
dec
mov
loop
popa
pop
add
inc
inc
inc
mov
adc
clc
testb
sti
mov
sarb
cmpl
lock
jle
dec
movsl
sti
jmp
push
mov
push
stc
dec
in
cmpb
test
fdivs
add
jl
call
aad
mov
clc
add
pop
repnz
call
js
sbb
adc
push
cmp
mov
aas
mov
fnstcw
push
push
jle
shll
dec
outsb
push
xor
scas
sti
cmpsb
lea
add
orb
pop
xchg
rcll
mov
push
push
and
pop
xor
push
push
loopne
jg
pop
sbb
dec
add
outsl
xchg
iret
pop
out
fndisi(8087
dec
dec
or
cmp
push
push
lds
sbb
sub
sbb
rcrb
jmp
mov
add
sub
pusha
dec
sbb
das
out
mov
push
adc
scas
pop
mov
sub
out
add
xchg
add
call
cmp
mov
lret
inc
aad
ret
mov
push
jecxz
inc
outsb
xor
decb
std
xchg
inc
adc
leave
pop
arpl
sub
sbb
fistpl
cmp
mov
and
mov
cs
pop
les
mov
fidivrl
or
int
int3
xor
cltd
jo
icebp
sbb
mov
lret
mov
xchg
mov
mov
daa
pop
push
mov
aad
test
call
incl
push
cld
add
loop
inc
mov
into
lahf
dec
sbb
xor
add
inc
mov
jg
ja
out
push
pop
mov
dec
shrl
xchg
inc
cs
cmc
xchg
lret
cli
enter
fisttps
je
fiaddl
cmc
js
push
sbb
adc
enter
xchg
scas
pop
call
dec
cltd
fsubp
stc
sbb
adc
scas
cmp
in
popf
test
sahf
andb
ds
cwtl
data16
mov
jle
jns
daa
es
jp
add
test
jg
adc
mov
loope
insb
xor
and
les
add
lock
xchg
xchg
inc
push
mov
adc
clc
aas
fstps
pop
pushf
add
mov
inc
jo
push
cld
jmp
pop
push
das
stos
int3
in
and
fisubs
jno,pt
mov
and
aad
push
mov
insb
ljmp
mov
push
and
dec
push
push
loopne
icebp
in
mov
fsts
dec
rcrl
or
or
add
mov
std
loopne
mov
addl
jecxz
lret
add
jg
add
ret
mov
mov
push
cltd
dec
or
xor
push
orb
sbb
sbbb
inc
loope
pop
jl
pop
fninit
xorps
mov
cmp
cmp
xchg
mov
insl
adc
sub
adc
insl
lret
int3
push
sbb
inc
xor
jae
cmpsb
shr
sub
jp
fucom
ljmp
sbb
aad
pusha
cmpsb
clc
lea
mov
roll
test
cli
movsl
pop
call
fadds
jbe
pop
add
call
adc
sbb
or
inc
lods
stos
and
dec
fcomip
mov
sbbb
sbb
pusha
gs
insl
xlat
in
lods
daa
cmp
lret
roll
sbb
xchg
popf
mov
loope
pop
cmp
inc
subl
movsl
ficompl
clc
sbb
inc
push
les
jle
hlt
push
ret
fimuls
dec
push
add
loopne
push
jge
or
andb
jbe
adc
in
lods
sbb
push
push
out
fcoms
bound
mov
inc
pop
mov
mov
movsb
in
bound
sub
xchg
push
and
fcmovnu
dec
les
add
das
xorb
jno
aad
inc
sbb
cld
stc
mov
cmp
test
sbb
lcall
jp
inc
dec
mov
mov
mov
lods
std
cmpsb
add
push
and
adc
mov
clc
adc
mov
inc
xor
push
popf
cmc
mov
inc
jp,pn
fs
shlb
repz
arpl
call
rcrl
xchg
movsb
ljmp
adc
lcall
fldl
pop
nop
sbb
aas
jmp
cmp
nop
dec
and
mov
push
lret
fcmovu
je
mov
lret
js
shll
in
addb
aaa
pop
clc
jnp
in
xchg
mov
sub
jns
sbb
pop
incl
mov
sub
shrb
incb
push
test
ret
pop
lahf
in
cmpsl
test
aaa
stos
jmp
cmp
repnz
loopne
sbb
daa
and
sbb
lret
lods
das
movsb
cmp
iret
inc
inc
std
adc
mov
jmp
mov
mov
push
xor
push
rcl
ret
mov
aam
pop
aaa
and
cwtl
pop
insl
test
popa
mov
mov
add
mov
cld
adc
cmpsl
xchg
mov
aas
rorl
das
cld
mov
or
mov
std
jne
xor
adc
push
testl
stos
movsl
arpl
push
fstpl
fdivrl
fwait
cli
cmp
inc
or
mov
mov
sbb
out
mov
xchg
stc
pop
add
sub
and
adc
jb
mov
xchg
xchg
xor
cmc
hlt
das
mov
repnz
mov
aaa
std
mov
push
fcoml
sub
enter
int3
into
or
sub
cld
adc
mov
pop
sbb
sbb
add
pop
and
fisubl
dec
jl
cwtl
adc
mov
pusha
cmp
insl
icebp
aas
and
cli
movsl
fnsave
sub
or
xor
scas
cmp
dec
stos
repz
call
add
ret
gs
pandn
mov
sub
xor
mov
sub
sar
inc
inc
sbb
inc
shlb
lret
fwait
subl
jno
sub
nop
sub
in
sar
xor
rorl
add
mov
xor
cmpsl
hlt
cmp
popf
ljmp
xchg
and
scas
leave
xor
sbb
jg
and
loopne
icebp
adc
subl
xchg
filds
arpl
xchg
inc
jge
push
rclb
icebp
lods
xchg
das
or
jmp
sti
stc
dec
mov
jp
or
in
scas
outsb
cmc
mov
xchg
rcrl
testb
sub
icebp
or
dec
icebp
enter
mov
cwtl
pop
and
inc
add
fcmovne
bsr
or
ret
adc
sbb
inc
mov
pop
cmc
sbb
pop
or
jmp
popa
xchg
sbb
mov
stos
div
add
xor
aad
enter
dec
xchg
mov
sub
test
mov
or
push
inc
fdiv
xor
fisubrs
cmp
daa
test
lcall
cld
addb
inc
dec
sub
movsb
mov
sgdtl
mov
push
insl
mov
cmp
or
sub
in
push
scas
ret
mov
jnp
mov
loope
push
and
add
lods
scas
cli
pop
adc
cmc
mov
aaa
and
mov
std
in
outsl
dec
mov
pop
inc
xor
jg
test
testb
cltd
out
lret
sub
fs
pop
aam
das
mov
decl
sbb
test
addr16
inc
jo
das
fldcw
mov
lret
pop
jnp
push
shll
inc
pop
sub
xor
add
xor
ret
xchg
loope
ja
push
xchg
jg
and
addl
adc
jge
xchg
call
mov
adc
cmpw
orl
div
cli
ret
cld
cmc
pop
adc
mov
fldt
cld
loopne
mov
test
rol
pushf
mov
inc
icebp
testb
popf
jmp
mov
inc
xorl
mov
and
pop
jecxz
shrl
cmp
clc
or
mov
decb
mov
sbb
iret
fdivs
cmp
and
fbld
not
not
outsl
fistpl
jg
imull
or
cld
xchg
add
adc
icebp
das
outsb
add
fstl
jns
pop
imul
pop
mov
bound
xor
popa
aas
aaa
jae
pop
clc
mov
outsl
jb
jns
gs
ja
dec
push
push
dec
ss
jg
add
inc
gs
jno
ja
dec
imul
imul
mov
add
rclb
fldenv
imul
jae
icebp
in
test
popa
jb
insb
jne
jno
js
push
cmp
pop
dec
js
gs
dec
jle
addr16
xchg
lods
sbbb
push
outsl
ja,pt
inc
add
fs
arpl
std
ret
jno
gs
xor
xor
inc
sbb
fists
xor
imul
push
arpl
dec
push
insb
imul
push
push
jecxz
arpl
dec
push
adc
sbb
push
mov
inc
imul
pop
pop
outsb
inc
imul
mov
outsl
popa
dec
inc
jbe
arpl
imul
je
notb
adc
dec
sbb
push
inc
cld
dec
dec
out
addl
add
dec
add
ficomps
jne
inc
pop
inc
jns
inc
pop
mov
push
dec
daa
bound
push
push
das
cld
aam
mov
dec
imul
addr16
js
in
lods
mov
push
cmpsl
insl
add
imul
or
inc
inc
dec
dec
inc
push
dec
jle
cmp
lods
pop
xlat
in
cmp
mov
inc
jo
jb
pop
dec
cmp
je
push
xor
cmp
pop
imul
bound
push
mov
inc
mov
pop
js
push
std
jg
jns
imul
jne
jb
xor
xor
sbb
mov
add
jb
mov
or
sub
popa
pop
mov
test
sbb
dec
cmp
bound
shll
jl
xor
sti
notb
inc
cmp
cmp
dec
popa
push
in
test
lods
js
push
dec
xor
test
outsb
inc
mov
push
sbb
inc
or
inc
ja
lods
xor
inc
sbb
mov
dec
outsl
ja
push
dec
addr16
push
push
arpl
push
std
jg
push
imul
jbe
arpl
jno
outsb
and
rcrb
movsb
cs
sbb
cmp
inc
lods
mov
mov
inc
js
imul
cmp
insb
outsl
pop
xor
or
xor
imul
fcmovnb
ret
or
inc
dec
cli
xor
dec
jo
sti
in
outsl
aaa
push
push
inc
push
dec
inc
dec
add
adc
dec
push
pop
mov
dec
fs
push
fs
dec
js
popa
mov
mov
push
push
ja
push
imul
lcall
or
push
test
push
aaa
jg
inc
xor
jno
bound
mov
loope
bound
roll
push
dec
dec
pop
cs
push
hlt
jns
dec
addr16
add
jp
dec
pop
popa
sub
dec
pop
push
xor
cmp
jg
sbb
sbb
and
outsb
push
jno
ret
out
insl
or
lret
push
imul
inc
addr16
xor
and
xor
xor
jne
movl
push
push
incl
lea
jmp
jae
arpl
fidivrl
icebp
insl
jecxz
fs
inc
lahf
inc
loopne
dec
gs
or
mov
push
fs
shrb
fnstsw
stos
add
lods
jb
dec
add
push
jne
dec
xor
jae
xor
dec
dec
xchg
addr16
outsl
inc
inc
inc
or
outsl
xchg
jle
push
dec
inc
ret
inc
fs
add
jbe
inc
push
mov
bound
pop
push
insb
push
inc
jbe
pop
gs
dec
push
outsb
jno
inc
add
push
fists
jnp
jg
int3
ja
outsw
insb
jo
push
xor
jae
add
dec
sti
mov
push
xor
jns
jno
jp
adcb
insl
insl
loopne
fisubrl
shlb
xor
dec
sbb
jl
cs
in
ss
push
add
sub
aad
int
stos
mov
or
sbb
sbb
dec
add
fildl
cmpsl
bound
inc
xchg
push
pop
pop
dec
dec
sub
das
sub
dec
insl
push
popa
inc
xor
push
push
outsl
jno
insb
push
xor
pop
test
sub
push
mov
dec
mov
dec
inc
xor
out
push
fistl
cmp
aaa
lods
inc
push
dec
push
subb
mov
push
push
je
mov
jne
inc
jb
addr16
je
jb
sub
imul
lea
inc
push
sbb
inc
insb
ret
sti
insl
bound
dec
and
js
jbe
mov
in
lea
pop
bound
lods
pop
js
in
popa
inc
inc
movsb
inc
mov
frstor
pop
sub
dec
imul
pushl
push
dec
jne
xor
pop
js
jns
push
mov
aaa
or
push
jb
fisubrl
sbb
loope
push
push
bound
outsl
sub
decb
push
mov
inc
or
fs
bound
sub
dec
push
push
jb
mov
mov
cmp
add
inc
pop
lods
or
je
push
jbe
outsl
inc
pop
xor
test
jb
push
inc
jbe
insl
inc
xorb
dec
push
adc
mov
or
gs
stos
add
aad
dec
dec
pop
outsl
push
lret
daa
push
bound
inc
js
outsb
dec
sahf
test
adc
adc
fwait
or
add
add
lea
addr16
jno
pop
inc
sub
or
gs
outsb
xchg
dec
jo
stos
scas
data16
xor
mov
mov
or
jns
bound
mov
xor
push
dec
jbe
xor
inc
push
sahf
insb
xor
sub
jg
gs
push
outsl
push
push
jne
jb
sub
jb
adc
and
lods
push
add
outsb
outsb
push
and
mov
pop
popa
rorl
lea
insb
and
push
push
movsl
xchg
or
pop
js
cli
insl
jae
insl
jg
mov
nop
cmp
inc
dec
push
dec
in
jbe
fbstp
or
xor
js
adcl
dec
cmp
scas
lods
mov
lods
inc
mov
xor
inc
lods
sbb
fwait
test
test
insb
dec
and
pop
dec
dec
jbe
jbe
arpl
stc
push
push
aaa
mov
and
mov
js
outsb
inc
sub
lahf
sbb
sbb
add
mov
and
enter
push
push
imul
xor
pop
fidivl
inc
mov
jo
ja
inc
inc
dec
movsl
mov
push
xchg
sub
imul
mov
ss
push
jmp
mov
cmp
insb
cmp
popa
sbb
mov
push
cmp
mov
sub
outsl
mov
xchg
adcl
dec
imul
mov
je
jo
jno
aaa
add
sarb
inc
gs
inc
test
and
xor
ret
xchg
push
loopne
aad
pop
mov
bound
dec
dec
gs
loop
imul
push
jne
js
insl
cmp
mov
sarl
cmp
lcall
jmp
fldt
sarb
je
insb
push
popa
movsl
shlb
xor
inc
out
mov
sub
fiaddl
mov
sub
pop
lods
bound
push
push
outsl
mov
dec
inc
sub
inc
ficoml
scas
jne
sarb
clc
add
mov
fcomps
pop
in
mov
mov
cmovb
scas
push
inc
outsb
push
mov
push
cmp
imul
pop
ret
out
das
adc
dec
xor
jne
xchg
dec
push
outsb
pop
dec
inc
push
shrl
outsl
sbb
push
inc
dec
ret
push
dec
and
je
mov
dec
lods
sub
fdivrs
lea
in
or
insb
inc
dec
push
rcrb
ss
addb
cs
imul
jbe
popa
xor
lea
daa
sub
fcmovb
or
jns
gs
adc
mov
jb
mov
mov
outsl
jae
inc
fcmovnu
inc
jecxz
pop
jo
icebp
outsb
das
fsub
inc
jae
dec
dec
movsl
inc
push
dec
xorb
imul
push
dec
push
in
inc
pop
imul
je
ja
cs
fisubl
je
ret
mov
push
stos
inc
or
sub
out
xchg
out
mov
insb
fistl
sub
clc
push
ljmp
xor
jne
inc
insb
mov
je
inc
adc
dec
sub
inc
sti
jae
pop
scas
xor
sar
lods
mov
add
insl
mov
inc
or
pop
ja
test
mov
movsb
cmp
inc
sbb
cmp
in
imulb
pushf
dec
inc
fs
jb
bound
sbb
mov
outsb
and
outsb
lea
sub
xor
pop
mov
js
dec
push
imul
arpl
xchg
cwtl
xchg
pop
sub
ja
test
xor
add
xor
pop
mov
jne
push
bound
loop
imul
scas
fidivl
jns
push
outsl
inc
insb
pop
push
popa
fidivl
scas
addr16
addr16
inc
jnp
push
popf
pop
outsl
fwait
test
cmp
push
outsl
mov
push
cmp
ja
lds
push
pop
insl
inc
adc
arpl
mov
test
inc
jo
push
mov
lds
ret
js
inc
add
loope
mov
imul
push
nop
sub
dec
push
ret
rorb
shrl
inc
inc
aaa
jne
mov
jmp
add
inc
enter
ss
addr16
icebp
dec
jb
dec
aaa
dec
xchg
lcall
mov
and
dec
cmpsb
dec
push
adc
les
jns
fcoms
jecxz
push
dec
push
out
xor
lods
decb
insl
dec
xchg
push
data16
sbb
and
push
inc
int3
outsl
or
movl
inc
int
imul
jmp
xchg
or
jne
aad
imul
rcrl
xlat
sub
into
push
insl
add
or
mov
add
test
mov
sub
int
lcall
jns
mov
xor
mov
subl
dec
push
dec
inc
bound
push
mov
push
or
int
push
pop
lret
push
outsb
data16
sub
outsb
adc
inc
mov
sbb
dec
inc
add
cs
jbe
inc
loopne
inc
in
cs
pop
packsswb
fs
stos
xor
insb
das
mov
and
or
outsb
rcr
push
sbb
sub
push
pop
jno
push
xor
lret
mov
push
push
je
push
bound
sub
inc
push
cmp
mov
sub
xchg
jb
add
mov
js
addr16
push
mov
jbe
dec
mov
shrl
lock
clc
insl
mov
inc
in
sti
push
xchg
push
mov
test
gs
pop
stos
xor
mov
inc
pop
sub
mov
je
sub
cmp
and
dec
sbb
push
push
dec
xor
sbb
ja
std
mov
ljmp
dec
xchg
stos
push
mov
loop
popa
fiaddl
inc
das
adc
inc
movsl
rolb
hlt
popa
jo
dec
repnz
mov
push
outsl
testl
leave
bound
sub
add
pushf
dec
test
fisubrs
adc
push
fisubs
lahf
fisttpll
lea
outsl
jo
lea
pop
push
jno
mov
insl
loope
insl
dec
aam
shrb
jbe
outsb
add
ret
inc
or
stos
cmp
scas
loope
sub
test
sub
pop
mov
inc
xor
jl
pop
mov
dec
stos
std
pop
jg
add
scas
mov
decl
jg
neg
stos
ja
out
adc
mov
sti
idiv
jg
iret
or
stos
idivl
jge
fcomi
pop
jmp
scas
insl
in
mov
pop
xor
jge
mov
pop
fistl
stos
xor
sub
push
scas
jg
fcmovnbe
jle
sti
jne
push
lcall
mov
out
sbb
fistpll
fisttps
pushl
jne
jmp
jge
scas
dec
cmp
lret
je
pushl
jg
insl
fistpl
pop
add
es
fisubrl
sbb
mov
in
add
mov
mov
in
fildll
pop
mov
mov
cs
cmc
jmp
fisubrl
fistps
adc
xor
xchg
pop
insl
fwait
imul
stos
or
mov
jbe
sbb
shll
out
into
mov
insl
fcmovnu
mov
scas
pop
scas
das
sbbl
mov
pop
jmp
outsb
clc
insl
outsb
lahf
cmp
adc
push
pop
jo
imul
cmpsl
scas
adc
mov
mov
and
lds
sahf
sub
fistpl
push
out
mov
jl
std
pop
lahf
movsb
ljmp
mov
sbb
je
and
insl
fistl
je
bound
pop
mov
mov
scas
xor
inc
inc
fcomip
mov
lret
mov
fsubrp
lret
lret
int
mov
lcall
shrb
or
popa
jg
jge
lds
cs
gs
adc
cli
pop
call
mov
test
mov
into
jl
divb
push
ljmp
ret
xor
mov
lods
fistpl
xor
jg
ja
insl
outsb
imul
cmpsl
mov
jmp
shll
das
jo
or
cs
jge
mov
mov
cmp
rcrl
js
jae
fwait
sbb
fsub
and
stos
loopne
ljmp
fidivs
mov
std
push
lret
stos
cli
mov
push
cs
outsb
lret
adc
std
lods
xor
sbb
imul
xor
lea
mov
sti
test
push
int3
xchg
fstps
mov
jl
mov
mov
pop
decb
push
push
sbb
mov
mov
xor
ds
mov
outsb
data16
cltd
jb
stos
jne
jbe
clc
enter
jno
fistps
sbb
mov
ss
dec
lods
cmc
adc
push
iret
and
ja
push
lcall
test
call
stos
jae
xor
fbstp
sub
ss
out
stos
testl
jmp
iret
stos
pop
adc
push
ljmp
aad
xchg
aam
push
daa
jg
fwait
inc
cmp
pop
mov
mov
lcall
add
fsubp
push
mov
adcl
cli
push
fdivrs
xor
push
aaa
jle
dec
add
insl
xchg
and
or
add
cmp
xchg
mov
jge
movsl
pushf
stos
adc
mov
sbb
orl
mov
es
test
mov
dec
pop
push
imul
adc
jge
cmc
cmp
pop
xorb
mov
and
fucomip
repnz
or
inc
sub
and
sbb
mov
fs
sarb
fwait
jo
shll
lods
xlat
lret
mov
mov
sbb
xchg
pop
lods
cmp
or
cs
insb
cmp
std
cmp
lock
mov
out
pop
push
push
mov
dec
insl
out
xor
jmp
sbb
mov
push
jge
mov
xchg
lea
inc
mov
dec
pop
mov
mov
scas
inc
rorl
lcall
imul
out
into
inc
sub
and
xlat
ss
fistl
cmp
mull
imul
sbb
insl
imul
ds
inc
lcall
jbe
push
scas
mov
cli
outsb
mov
dec
mov
mov
shl
cmp
ds
stos
inc
xor
rcrl
cmp
push
xchg
clc
loope
loopne
dec
fldt
xchg
rcl
sbb
mov
cmp
pop
call
pusha
and
mov
sbb
cmp
mov
and
cmp
test
push
adc
imul
jg
jo
fwait
sbbl
push
jmp
or
jg
out
fimull
cwtl
outsb
decw
lahf
std
movsb
sub
cmp
rolb
lahf
imul
jb
filds
neg
xor
scas
or
bound
mov
mov
xor
sarl
mov
add
push
fwait
sub
das
std
adc
out
jo
cmp
std
lret
push
repnz
movsb
add
or
pop
int3
cmp
inc
mov
stc
pop
fwait
rcll
sbb
lret
sub
mov
push
push
arpl
jne
inc
fwait
insb
mov
or
jmp
sbb
int
mov
mov
mov
cmpsl
xor
cs
jmp
mov
imul
lahf
jne
out
xchg
and
adc
iret
pop
clc
scas
mov
adc
cmc
xor
jp
imul
ljmp
movsb
pop
ss
andl
mov
lock
xchg
mov
or
xchg
sbb
xchg
pop
sbb
add
mov
lods
lock
in
mov
jge
std
inc
adc
sub
std
test
or
mov
xchg
add
jae
lcall
addr16
lcall
ret
ss
inc
add
mov
dec
jg
data16
pop
test
adc
adc
jns
inc
jmp
dec
imul
pop
jae
jno
mov
push
mov
jg
adc
push
adc
inc
and
fidivs
loopne
mov
std
adc
xchg
es
or
int3
cmc
mov
cmc
shrl
aaa
clc
or
andl
pop
dec
xlat
push
ret
fcmovnu
push
adc
jns
dec
es
cmp
filds
mov
add
faddp
sub
jge
in
xor
popa
pop
ret
leave
aad
negl
dec
out
mov
sub
pop
jnp
xchg
lret
inc
mov
sub
push
xor
cld
lcall
mov
sbb
cmpsl
and
fstpl
shll
mov
das
push
jne
jl
addl
mov
out
jecxz
movl
cmpsl
mov
out
aam
jo
inc
jle
or
mov
scas
jbe
inc
jecxz
bound
add
scas
pop
into
mov
dec
fldl
inc
xchg
scas
mov
sub
cmp
push
xor
xchg
adc
shl
pop
fwait
jbe
cmp
lods
sbb
out
dec
scas
loop
fistps
fsubr
pop
pop
jmp
sbb
gs
inc
rcll
jmp
aas
jae
xchg
mov
in
lock
or
dec
ja
hlt
call
jge
cs
subl
jnp
xchg
adc
test
mov
movsl
lock
sahf
test
test
adc
ja
sub
daa
ficompl
lcall
stc
sbb
loopne
es
xchg
in
xchg
test
cmp
or
xchg
les
sbb
xchg
subl
rorl
addl
mov
ljmp
sbb
shlb
sub
test
jp
enter
rcll
sti
push
push
ss
test
jg
out
ss
fwait
mov
mov
pop
sub
fisttps
ret
or
mov
inc
push
negb
xlat
lcall
pop
or
mov
in
mov
sbb
mov
pop
jmp
xor
lret
inc
notl
call
lahf
xlat
xor
scas
cmp
xchg
icebp
addl
cwtl
pop
sbb
lret
ret
and
sub
cmc
pop
add
dec
ja
pop
inc
dec
mov
insb
xorb
dec
inc
xchg
out
popf
int3
stos
xchg
mov
add
inc
fistpll
ret
mov
pop
int3
enter
pop
idivl
xchg
lods
in
sub
push
cmp
jne
adc
or
pop
jo
xchg
pop
ret
jecxz
xor
fwait
inc
les
es
add
mov
call
arpl
test
negl
dec
xor
stos
pop
sbb
sub
push
stc
pop
add
adc
mov
cmp
ficompl
inc
mov
cmp
popa
test
or
push
lret
in
scas
ds
insb
fldt
pop
push
divl
popa
or
data16
aad
add
or
ret
loope
addr16
jns
pop
cmp
imul
mov
cwtl
sub
loopne
jnp
push
xor
push
mov
jge
mov
inc
jae
or
mov
mov
xor
inc
mov
cmp
jo
push
cmpsl
pop
pop
mov
push
js
shlb
out
or
mov
dec
inc
sub
pop
mov
popf
pop
sub
lcall
xor
ss
sbb
and
jge
pop
inc
das
push
mov
mov
js
and
jb
cmp
mov
fld
push
cmp
mov
aad
lock
in
in
sub
ja
orl
mov
push
ret
stos
cmp
icebp
call
jae
rorb
ljmp
xchg
sarl
pop
pop
stos
into
ljmp
add
push
jae
aas
out
jg
pop
add
mov
int
rolb
pop
sbb
xor
rdpmc
jl
iret
roll
cmp
push
cmpsl
xor
in
or
cs
imul
sahf
movsl
jmp
mov
rol
stos
imul
mov
stos
dec
pusha
xor
imul
imul
loop
jg
stos
in
lcall
jecxz
jmp
jo
dec
or
and
add
mov
mov
adc
inc
mov
mov
jne
xchg
fisubs
pushf
push
jp
dec
popf
push
jne
bswap
lods
orl
xor
pop
out
mov
cli
mov
leave
loopne
or
jae
outsb
cmp
mov
nop
sti
lcall
cmp
dec
xchg
inc
push
xor
add
push
inc
inc
jae
jne
pop
daa
lahf
sbb
lock
cmpb
fdivr
gs
inc
xor
push
jae
popf
xchg
lods
popf
push
cmp
pushf
shrb
pop
add
cmp
data16
dec
fcmove
jo
xor
fsubrs
inc
test
rcr
scas
out
cmp
fstl
mov
addl
cmpl
iret
ds
fldcw
pushl
test
std
enter
movb
or
and
pop
dec
sbb
pop
fbstp
rcll
add
xor
push
push
data16
int
js
outsb
fwait
push
pop
push
dec
and
xor
pop
push
cmp
scas
adc
sti
in
hlt
push
std
inc
out
adc
inc
sub
jp
scas
jmp
pop
adc
out
xchg
ret
cmp
push
je
mov
insb
push
push
daa
push
mov
sub
fcomip
dec
fwait
in
fldt
out
mov
adc
dec
ds
push
mov
enter
cmp
dec
pop
lock
inc
pop
popf
test
jo
icebp
out
push
ss
cmc
int3
sub
mov
mov
lcall
pop
and
test
jp
sub
xor
push
add
das
dec
add
mov
sar
mov
push
or
ffreep
ljmp
or
into
sub
mov
dec
xor
or
mov
test
lcall
mov
pop
xor
mov
gs
lret
shll
push
sbb
ja
pop
mov
inc
sbb
add
mov
jecxz
insb
hlt
fadds
sub
cli
inc
xchg
scas
dec
pop
pop
mov
push
adc
out
das
dec
in
andl
mov
cmp
out
adc
arpl
mov
lcall
popf
xor
push
lea
ret
xchg
cld
and
enter
mov
lcall
clc
jo
jb
bound
stos
dec
sub
cwtl
dec
mov
sahf
mov
mov
mov
ja
xor
cmpsb
inc
push
or
mov
dec
je
ret
movsl
dec
fwait
mov
out
outsb
into
lret
shl
test
inc
add
mov
rcrb
mov
push
xlat
aam
xor
push
cmc
cmc
jg
enter
aam
mov
add
clc
fldcw
ret
rclb
es
roll
js
xchg
out
fidivl
cmp
cmp
cs
xchg
jge
orb
leave
shl
fcmovb
and
push
shl
mov
lret
das
ljmp
inc
pop
dec
scas
hlt
inc
daa
pop
xchg
imul
pop
hlt
pop
mov
push
push
and
lods
adc
sahf
jae
add
movsl
add
add
loope
shrb
sbb
cmp
imul
fldt
sub
loope
push
scas
xlat
int
dec
mov
or
shrl
jne
ret
sub
add
pop
stos
stos
cmp
inc
add
iret
gs
lcall
adc
pop
jnp
pop
add
movl
ficompl
mov
xlat
adcl
mov
loope
and
push
pop
jnp
cmp
int3
or
rol
shrb
sbb
or
jo
out
arpl
jp
fwait
stos
lret
cmp
mov
inc
cwtl
mov
ret
push
sub
sbb
ret
imul
pushw
js
add
rcll
loopne
out
mov
mov
xchg
leave
xchg
xchg
fiaddl
add
add
lods
fs
and
sar
and
enter
cwtl
pushf
sbbl
sahf
jo
test
jns
mov
cwtl
outsb
push
push
jmp
jp
mulb
xchg
add
imul
neg
std
dec
push
or
xchg
ljmp
adcl
test
xor
cmp
call
mov
pop
repz
mov
push
push
and
in
add
cs
mov
sub
or
jnp
add
sbb
sub
cmp
imul
sub
lahf
xor
pinsrw
not
stos
test
call
inc
inc
cmpl
mov
icebp
mull
es
stc
jbe
rorl
adc
loopne
mov
adcl
push
pop
push
sbb
push
movsb
cmpsl
pop
mov
out
jge
out
out
sbb
cmp
xor
and
ds
sbb
xchg
scas
mov
stos
mov
lcall
push
add
outsl
mov
add
int
lea
inc
cmpsb
pop
mov
add
xor
jmp
iret
pop
mov
jbe
ljmp
jecxz
cltd
xor
stos
adc
or
lahf
out
fadd
add
cmp
js
jns
leave
ficomps
test
faddp
aam
clc
sarl
pop
insb
adc
inc
int
ja
mov
mov
repz
ljmp
cli
test
stos
popa
xchg
out
loopne
or
xchg
movsb
sub
int
jo
dec
movsl
testl
mov
pop
dec
rcrl
jno
stos
outsb
or
decb
jge
pop
rcll
aam
add
mov
ret
es
loop
xor
sti
lds
or
ret
ret
jmp
or
xchg
cmp
out
jo
add
sbb
jo
mov
cmp
ljmp
dec
sbbl
cmp
ja
pop
loopne
mov
add
mull
jb
cmpsb
ja
shl
mov
inc
fcomip
mov
cltd
lret
cltd
and
fbstp
push
scas
jb
push
lds
jmp
jo
cmp
mov
daa
mov
adc
pusha
sub
jg
stos
scas
add
enter
lcall
jns
addl
sbb
fsubl
xchg
lods
outsb
stos
movsb
cs
add
movsl
mov
add
pop
cmp
lcall
out
fnstsw
scas
inc
cmp
xor
push
xchg
into
in
adc
rolb
jge
rcrb
jo
and
inc
nop
leave
rcrl
dec
fidivs
lds
jmp
mov
pushf
leave
sbb
loopne
test
rolb
pop
js
or
jnp
push
scas
xor
jge
mov
fldt
ljmp
jbe
scas
mov
sbb
xor
jo
ja
mov
es
adc
cmc
push
adcb
scas
movsb
add
rol
ret
testb
pop
adc
scas
or
jecxz
ret
ret
push
repnz
scas
pop
mov
sahf
int
sbb
inc
add
jg
xor
roll
das
sub
sbb
jmp
cltd
lret
sbb
pop
mov
dec
cltd
nop
xchg
or
lods
mov
sbb
call
adc
ljmp
jb
ficompl
mov
xor
add
fisttpl
pop
dec
lret
push
dec
out
push
or
jne
sub
jo
scas
add
xchg
addr16
and
or
pop
mov
mov
ja
and
sub
les
xchg
mov
gs
sub
inc
xchg
fldcw
xor
dec
movsb
and
and
xor
rclb
mov
in
pop
pop
fiaddl
ret
pusha
mov
jo
icebp
dec
fcomps
cmp
mov
imul
in
sbb
in
push
push
xchg
dec
mov
and
mov
sahf
dec
mov
xor
stos
mov
pop
gs
sub
mov
scas
in
test
mov
movsl
js
loope
add
cmp
jne
aad
cmpl
shrl
cmp
std
ss
stos
ror
lret
movsb
pop
mov
and
out
mov
dec
pop
inc
dec
rcrb
repnz
add
loope
jb
ljmp
js
xchg
push
pushf
sub
sub
lret
movsl
fcmovne
gs
pop
push
popl
icebp
test
les
adc
and
test
icebp
aam
movsl
push
sbbb
and
mov
sti
push
pushf
enter
in
in
cmp
mov
rcll
leave
lds
push
iret
mov
cmp
andb
jmp
shlb
dec
pusha
push
pop
push
and
pop
mov
popa
test
es
push
cmc
loopne
dec
sub
notl
jge
xor
jnp
push
mov
or
cs
test
sar
aas
sahf
and
ljmp
pop
mov
pop
cmpsb
arpl
sbb
je
cli
in
mov
psubsb
adc
fisubl
mov
push
sub
jo
or
cmp
js
xchg
push
les
add
xlat
push
jno
mov
push
add
pop
into
inc
dec
pop
mov
scas
js
jge
or
and
dec
cmp
sub
inc
cmp
gs
lea
xchg
mov
push
icebp
jo
xor
cmp
dec
jge
jg
sbb
add
mul
mov
and
push
cmpsb
pushf
fldenv
mov
fxsave
lret
in
mov
mov
xor
ljmp
movsb
mov
es
cmp
or
sbbl
cltd
mov
pusha
mov
or
push
lahf
pop
lahf
add
mov
lahf
in
xor
ficoms
mov
mov
mov
test
push
mov
btrl
out
fidivl
sub
mov
push
fcomip
imul
push
cmc
rol
jmp
jecxz
mov
xor
xorl
cmp
mov
daa
divl
je
jo
ljmp
xor
pushf
mov
xor
add
bswap
xlat
int
sub
jecxz
repz
push
or
pusha
mov
aam
repnz
inc
mov
cli
dec
jno
push
sbb
repnz
fcompl
xchg
lds
dec
fnstsw
mov
add
lea
imul
out
adc
sahf
ret
and
in
test
out
daa
cli
insl
mov
popa
fcmovb
loopne
jmp
mov
sub
fisttpl
push
mov
jo
xchg
and
sbb
shlb
enter
xchg
xor
out
aad
scas
push
test
or
xchg
jl
into
inc
xchg
adc
pop
pushf
enter
dec
pop
aam
loop
add
enter
mov
pop
mov
out
add
leave
loopne
cmpb
cmp
mov
adc
scas
movsb
adc
pop
cwtl
add
int3
dec
pop
or
mov
scas
jmp
add
pop
fs
pop
cmpsb
cmc
xorb
sbb
fnsave
loopne
in
add
push
xor
jmp
push
sub
mov
sbb
adc
pop
aam
pop
dec
mov
pop
adc
sbbb
lret
add
imull
and
cmp
fs
xchg
lret
sbb
cmp
mov
push
or
pop
sbb
push
out
rorl
pmaddwd
aad
xchg
stos
popa
mov
mov
jne
jns
or
inc
pusha
sarb
pop
pop
in
in
dec
ss
add
popa
jo
mov
cmc
gs
ret
or
pusha
enter
data16
cmc
inc
out
mov
cli
sbb
cmp
add
pusha
mov
shrl
inc
stc
out
pop
mov
add
fs
mov
rol
sahf
adc
rolb
mov
nop
loope
or
fcmove
outsb
popa
jae
dec
popf
pop
idiv
and
add
in
popa
or
sub
mov
pop
inc
das
push
shrl
lods
jge
xor
cmp
mov
aam
add
ljmp
add
jb
inc
gs
je,pt
outsb
scas
clc
and
adc
mov
push
adcb
stos
jmp
mov
mov
cmp
ror
and
stos
paddsb
rolb
add
sub
xchg
jb
shlb
xor
push
int
push
add
es
scas
or
and
xor
lods
jo
jbe
incb
pop
into
adc
cmp
inc
sub
cs
cmpsb
out
pop
ret
scas
cmpsb
and
inc
xchg
ret
mov
jp
xchg
jb
mov
cmpsb
or
imul
mov
scas
inc
mov
cmp
xchg
mov
mov
adc
mull
ja
mov
cmpb
mov
cmc
add
inc
cmp
mov
fdivrp
test
mov
push
push
in
dec
push
inc
jp
sub
mov
loop
iret
je
mov
aam
fs
add
cmp
jne
lret
xchg
push
mov
dec
loopne
ds
adc
loopne
testl
jne
js
mov
fwait
fwait
scas
mov
push
or
xor
push
rclb
push
push
inc
scas
das
or
add
ret
and
push
cmp
lcall
xchg
loope
fdivrl
decl
test
mov
rolb
loopne
int3
hlt
xlat
sbb
aam
push
scas
aam
jl
jae
sti
hlt
fidivl
pushf
sarb
dec
push
lcall
or
js
idivl
leave
hlt
in
clc
sbb
push
xor
adc
loopne
xchg
sar
sbb
jg
dec
sbb
add
add
add
mov
pop
push
lcall
ret
mov
sbb
in
xchg
mov
mov
js
loopne
rcrl
arpl
xor
fisubl
sbb
cmp
dec
sahf
movsb
jnp
push
and
cmpb
mov
test
shl
hlt
push
stc
pop
push
inc
sbb
in
and
pusha
jb
mov
inc
xchg
mov
xchg
lahf
test
in
push
pop
sahf
adcl
adc
mov
push
pop
sbb
mov
dec
dec
cmc
and
mov
sbb
pop
pushf
sbb
pop
cmp
rclb
push
mov
add
in
in
sahf
mov
dec
lcall
and
cs
or
push
jp
cwtl
sahf
cmp
lcall
adcb
and
push
adc
addl
sti
add
gs
lret
outsl
jge
adc
mov
out
sbb
es
jo
stos
sub
add
mov
fcmovne
push
decl
in
daa
popa
sarb
xor
mov
add
mov
xor
xchg
mov
xor
mov
cmp
rcl
test
push
outsb
and
mov
cmp
roll
pop
xchg
and
and
pop
pop
loop
cmp
cmp
inc
xor
scas
or
rcr
fwait
std
pop
stos
mov
xchg
mov
dec
movsl
push
push
add
scas
inc
mov
lcall
mov
inc
xchg
movsl
and
cmp
or
sbb
dec
adc
lcall
idiv
icebp
loop
sbb
dec
lret
lret
mov
popl
cmpsb
jp
out
out
dec
aad
mov
and
xchg
dec
mov
pusha
sbb
jno
mov
dec
jmp
or
xor
xor
fisubl
sbb
pop
es
rol
inc
cmp
in
sbb
leave
in
gs
push
xor
ss
nopl
mov
pop
mov
subl
fisubrl
cmp
jg
inc
sbb
sbb
inc
jge
faddl
mov
fwait
xchg
or
xor
cmp
movsb
adc
test
out
call
out
in
and
jns
loopne
aam
cli
cmp
and
call
stos
xor
scas
orl
or
jecxz
add
out
test
jge
mov
dec
dec
cmp
and
testb
or
pop
cmp
push
push
jl
mov
add
icebp
jb
fbstp
xor
testl
cld
in
aas
cmp
sbb
mov
outsb
icebp
test
push
rol
cltd
stos
mov
loop
jl
jl
push
out
inc
pop
rcl
jnp
jmp
ljmp
cmpb
cmp
push
scas
pushf
lods
push
push
pop
mov
lahf
and
and
call
sub
fwait
mov
icebp
push
push
jno
lret
add
sbb
jb
arpl
add
and
pop
push
pop
mov
call
add
cli
sub
mov
mov
push
subb
jge
xlat
mov
push
mov
mov
cmc
test
pop
sub
movl
fiaddl
loope
test
sub
dec
cmpsb
jo
cmp
cmc
cmp
mov
bound
add
fimuls
cwtl
xor
stos
adc
mov
imul
jmp
cmp
enter
dec
fildll
popf
mov
jb
fbld
andl
xorb
dec
imul
fadd
aad
lods
ja
leave
aam
mov
lock
mov
adcb
and
add
dec
cmp
xor
push
mov
jg
roll
out
push
add
inc
sub
decl
mov
or
lret
jge
ds
add
enter
ret
pop
pop
mov
dec
jmp
sahf
jns
jae
add
dec
or
jno
pop
int
sub
push
push
sbb
jne
sar
mov
or
fs
push
test
xchg
insl
fidivs
mov
lods
ret
adc
leave
gs
add
pop
aad
xchg
rcl
xlat
ja
add
jp
or
adc
or
push
add
lods
cmp
mov
test
out
xchg
iret
xchg
xchg
push
cmpsl
xor
scas
push
repz
inc
dec
sub
adc
les
scas
cmp
push
dec
dec
cmpsb
cmp
sti
xlat
push
roll
fstpt
ficoms
cmp
xchg
data16
aas
das
adc
loop
xorl
xchg
and
cmpsb
dec
inc
sub
sbb
push
mov
inc
out
xchg
push
inc
xor
dec
pop
push
jo
int
mov
push
rol
into
mov
mov
mov
incb
adc
test
shll
sbb
movsb
xor
popf
iret
js
and
adc
inc
or
and
sbb
shll
or
imul
inc
sbb
imul
push
xchg
jmp
iret
pop
mov
icebp
aad
out
dec
out
lahf
mov
adc
lret
add
pop
mov
xor
lock
xchg
shr
inc
into
add
push
mov
mov
dec
inc
scas
mov
pop
loope
inc
push
jae
xor
inc
sbb
cmpsb
jp
adc
loop
dec
push
jne
aas
inc
cwtl
rclb
cmp
jmp
leave
gs
lods
fldz
cmpsl
add
cmpsb
inc
jae
lea
mov
test
and
jge
into
push
cmp
les
call
dec
cltd
mov
mov
enter
pop
fldt
cmp
xchg
pop
jmp
dec
or
es
in
or
rcrb
xchg
bound
insl
push
shlb
mov
pop
pop
cs
aam
jmp
adc
and
dec
mov
xchg
enter
mov
scas
clc
mov
clc
into
dec
cs
imul
dec
push
fidivs
adc
push
gs
mov
ljmp
loop
push
push
or
inc
daa
xorl
pop
add
dec
out
dec
mov
pop
dec
icebp
add
jmp
jo
cmpsl
daa
loopne
sbb
jae
lret
push
push
mov
clc
lret
in
add
lock
fsubp
enter
out
mov
cltd
mov
movsb
or
test
mov
sahf
mov
scas
inc
mov
push
sub
or
iret
addl
mov
ret
mov
cmp
or
decb
mov
mov
mov
cmc
adc
push
and
push
out
sub
jg
dec
mov
mov
cltd
movsb
jmp
push
cmp
ja
cmpsb
in
leave
nop
mov
mov
pop
ret
push
push
jecxz
inc
and
enter
jg
es
push
lock
or
xchg
and
cld
imul
xor
inc
cs
mov
or
negl
fsubl
sub
aam
dec
sti
pushf
jle
mov
mov
xchg
popa
and
mov
add
lock
mov
dec
xor
xchg
cmp
subl
mov
ret
stos
leave
nop
jmp
push
icebp
lcall
xchg
add
rolb
mov
loope
stos
ds
iret
mov
data16
push
cmp
sub
add
pop
push
inc
mov
pop
sub
fisubrl
jo
or
jb
lcall
cmpsb
daa
push
push
jl
pop
add
mov
ret
and
jns
sbb
popa
dec
add
imul
add
inc
lret
rolb
int3
xchg
ljmp
xchg
or
cmp
into
loope
fcmovnb
mov
ljmp
xchg
and
jno
xlat
inc
lret
sbb
call
das
xorl
cmc
mov
repz
scas
outsb
in
test
das
das
pop
icebp
loopne
imul
leave
sub
pop
or
jnp
xor
sarb
in
push
inc
lock
fs
fs
loop
xchg
es
nop
sub
lret
into
pop
mov
inc
add
add
jne
pop
or
jg
push
add
push
aam
pop
adc
out
aam
sahf
ret
inc
stc
fcmovb
lret
and
push
xchg
stos
lea
ret
dec
mov
inc
push
test
aam
fwait
inc
pop
lock
xor
jne
imul
cwtl
fisttpll
icebp
pusha
jp
imul
jo
inc
push
scas
cmp
loopne
shl
ds
xor
std
pop
es
stos
inc
es
popf
jae
xchg
je
adc
push
sub
sub
cmpsb
xchg
xlat
ds
jb
scas
popa
dec
test
rolb
inc
xchg
push
jo
mov
fwait
sti
mov
std
movsl
xor
jno
pop
xor
sbb
inc
pop
push
data16
scas
sbb
jmp
mov
cmp
push
mov
push
sbb
sub
andb
test
sub
jae
inc
mov
mov
cmp
ss
xor
loope
inc
pop
xchg
pop
xor
fildll
cwtl
mov
mov
pop
sbb
sub
adc
push
and
xchg
jmp
cmp
scas
and
jp
jo
ss
rorl
or
sbb
ret
rol
repz
sbb
fcomi
jmp
inc
fsubl
js
push
je
std
ret
jne
add
mov
xor
cld
fwait
mov
push
cmpsl
dec
out
or
sbb
filds
scas
rolb
push
or
inc
jp
pop
icebp
pop
out
rcrl
stos
rcrl
rorl
rolb
jle
stos
mov
test
loopne
js
stos
xor
lods
bound
mov
sub
and
lods
mov
lret
xor
mov
test
xlat
stc
addb
leave
xor
repnz
sub
pop
out
mov
enter
adcb
out
ret
mov
lock
dec
and
int3
test
push
ficomps
test
jo
hlt
push
loopne
subl
and
push
inc
cmp
sarb
jo
xchg
stos
in
push
int
sub
out
pop
xchg
or
mov
cmpsb
push
sbb
leave
fwait
or
js
push
test
push
ss
loope
mov
bound
pop
sub
loopne
enter
ret
loope
hlt
scas
int3
mov
leave
in
pop
cmc
dec
stos
sbb
subl
mov
lcall
loopne
es
inc
mov
mov
push
mov
sbb
out
cmp
jmp
dec
aad
adc
lret
ret
js
adc
dec
push
orb
cli
pop
push
inc
jb
or
add
dec
mov
test
xchg
ror
sahf
pusha
stos
inc
daa
adc
push
imul
mov
sub
adc
in
mov
icebp
enter
xchg
mov
jae
adc
pop
lret
cmp
push
lret
pop
fimuls
pop
xor
add
lods
loopne
cmc
inc
int3
lcall
pop
mov
into
adc
icebp
add
xor
out
and
and
xlat
jmp
mov
icebp
std
mov
push
je
sub
mov
cmp
and
xor
divl
lret
xchg
mov
xchg
cmp
push
sbbl
push
and
int
or
repnz
ss
pop
mov
jmp
stos
xchg
dec
adc
and
jge
mov
push
mov
inc
fs
dec
mov
push
cmp
mov
cmp
insl
in
cmp
xor
addb
jae
and
adc
adc
insb
pop
adc
stos
or
jbe
mov
test
or
enter
jne
roll
jne
loope
cmp
sbb
out
xlat
dec
mov
sub
icebp
push
orl
aad
xchg
dec
jge
jno
dec
push
pop
mov
into
sbb
cmpsb
jle
pop
push
mov
add
aad
scas
flds
addl
nop
das
jmp
insl
jge
pop
add
mov
rcrl
inc
in
icebp
pop
stc
sub
jmp
sbb
shll
or
or
daa
lds
jge
push
fmul
mov
jo
push
xlat
add
cmp
push
jp
inc
add
lret
gs
into
in
or
push
dec
ljmp
hlt
notl
scas
bound
mov
inc
cmpl
dec
mov
inc
lret
mov
mov
sub
mov
sbb
xchg
fcmovnu
fcmove
adc
pushf
repnz
push
pop
aam
das
cmp
dec
mov
adc
push
fcmove
decl
bound
cwtl
clc
ret
mov
scas
aam
sub
stos
lahf
lcall
sahf
mov
outsb
call
jmp
mov
icebp
iret
inc
push
mov
xchg
mov
lcall
pop
lds
ljmp
scas
xchg
push
push
fiaddl
mov
rcl
xor
inc
push
lret
out
push
inc
jo
xchg
int3
dec
and
sbb
sti
daa
daa
gs
int
loopne
pop
shll
mov
sub
xor
adc
push
sarl
pop
jmp
and
test
fildl
inc
push
shlb
aas
add
arpl
mov
jno
mov
xor
addb
push
mov
lret
loopne
hlt
mov
les
mov
mov
rolb
and
cmpsl
add
enter
or
dec
and
mov
fistpll
pop
sbb
add
jge
loop
sub
or
into
test
adc
lret
sbb
mov
or
mov
stos
adc
loop
insl
dec
jo
push
add
push
mov
sar
xor
jmp
call
stos
add
aad
xchg
pop
scas
pop
dec
pop
and
dec
dec
adc
or
out
xlat
lret
push
jmp
sahf
mov
xor
sbb
jg
inc
adc
stos
loop
or
cmpsl
fidivs
cmc
sub
insb
xor
jmp
jne
test
inc
jl
mov
andb
xor
stc
adc
dec
icebp
mov
loopne
lds
inc
mov
xchg
sbb
xor
mov
pop
inc
xor
and
mov
dec
mov
xchg
sub
aam
lret
stos
jbe
pop
xchg
sub
push
adc
mov
or
and
jno
cmc
lods
incl
repz
movsl
and
jmp
fsubp
add
in
mov
gs
mov
std
scas
add
mov
mov
sbbl
rolb
push
and
jmp
iret
enter
into
and
push
dec
xchg
or
pop
insb
pop
add
test
stos
or
or
jb
or
mov
rcrb
inc
lods
movsb
ret
sbb
jmp
scas
shll
dec
in
les
fcmovne
push
popf
sbb
and
xchg
inc
es
aam
ret
sbb
push
mov
mov
add
pop
jo
fcoml
xchg
jae
loopne
push
cs
inc
popa
xor
ds
movsl
stos
stos
push
pop
adc
xchg
mov
ljmp
xchg
ljmp
jmp
mov
imull
lcall
pop
push
add
mov
stos
jno
jp
push
enter
dec
push
scas
enter
sbb
mov
dec
subl
mov
out
cmpsl
add
push
mov
jnp
fstpt
add
mov
mov
sub
push
adc
push
mov
pop
inc
add
neg
and
lea
mov
shll
cmp
xchg
es
xor
cmpsl
pop
add
lods
xor
test
mov
loopne
sbbl
addb
jno
pop
in
push
sub
jbe
test
daa
push
mov
xchg
xchg
push
idivb
aaa
in
mov
jmp
sbb
jo
loopne
shl
stos
jno
mov
gs
ret
aam
xchg
xchg
inc
pop
xchg
xor
push
call
jno
push
in
pop
xchg
inc
inc
or
inc
je
test
iret
jne
ds
test
sub
popf
pop
xchg
inc
mov
inc
push
daa
xchg
cmp
xchg
pop
adc
xchg
and
jecxz
test
mov
aad
mov
mov
cmp
lcall
mov
popf
jbe
xchg
add
inc
mov
in
je
notl
add
stc
cmp
ds
dec
fs
jg
lcall
inc
xor
imul
xor
inc
mov
lods
sahf
push
mov
pusha
and
mov
xor
addr16
sbb
jo
sub
pop
or
mov
push
test
rorl
push
mov
push
adc
mov
lahf
orb
pushf
addb
ds
push
fucomp
mov
std
cmp
adc
ds
fstp
dec
cltd
sarb
push
add
mov
xchg
xor
xchg
out
add
cs
out
or
hlt
xor
in
sbb
and
addr16
xchg
cmp
xor
lods
and
loopne
enter
cmp
mov
mov
pop
xor
ret
push
cs
xchg
and
pop
dec
out
cmpsb
push
xlat
sbb
fwait
bnd
sbb
add
out
lcall
adc
lcall
xor
inc
cmp
js
add
adc
stos
insb
stos
inc
mov
loope
dec
in
push
cmp
in
jns
push
or
roll
mov
push
iret
push
out
pop
andb
xor
adc
add
xor
sbb
add
pop
mov
dec
xchg
inc
lahf
adc
mov
pop
xchg
mov
scas
dec
hlt
nop
pop
lret
or
pop
pushf
js
or
jb
mov
out
out
adc
jp
imul
mov
mov
das
shll
out
loope
stc
xor
sbb
loopne
xchg
add
xor
xor
mov
cmpsl
or
mov
jg
add
jne
adc
pop
cmpsb
popf
add
test
int
loopne
add
loopne
xor
jle
sub
repnz
fcmovbe
mov
jge
data16
lret
pusha
push
adc
aam
mov
test
hlt
sbb
adc
mov
stos
inc
mov
jmp
sbb
loopne
sbb
cmp
mov
xchg
test
xchg
sbb
jb
js
sub
mov
mov
aam
aad
mov
and
sub
and
movsl
js
call
jns
mov
xchg
mov
inc
xor
push
pop
sbb
stos
loopne
push
add
push
lods
enter
push
jae
or
lods
loope
sub
xor
push
xor
rorl
xor
cmpsb
push
dec
in
jle
jne
add
js
popf
push
push
sub
xchg
stc
into
pop
xchg
mov
aam
mov
mull
pop
cmp
add
mov
xchg
int
lret
loopne
cmp
sbb
cmp
push
or
hlt
lret
pop
fwait
sub
ret
push
in
cmc
sub
add
aaa
ss
cmpl
dec
jno
in
aas
sub
jl
ljmp
loope
cmp
jb
sahf
or
jle
loopne,pn
sti
jnp
js
or
or
inc
mov
mov
push
cmp
sbb
push
mov
push
cli
inc
daa
jae
call
inc
scas
lahf
mov
loop
ljmp
xchg
jmp
push
push
out
sub
pop
daa
push
xor
hlt
cmp
scas
pop
shlb
push
popf
sub
imul
in
cmp
mov
jp
outsb
push
lods
rolb
pop
sub
loope
je
mov
cmpsl
pop
out
jmp
or
jg
das
js
pop
cli
adc
push
push
inc
arpl
es
out
sahf
jnp
add
sti
xchg
ljmp
fdivrl
pop
out
jb
pop
cmp
or
adc
pop
cmp
js
mov
imul
sarl
cmpsl
sbb
adc
pushf
arpl
push
jmp
lods
xorb
ljmp
lret
or
sti
mov
inc
and
out
cmpsl
call
mov
out
jecxz
jge
rcll
shlb
or
cwtl
or
mov
push
loopne
adc
jbe
push
jl
in
call
icebp
or
or
mov
lcall
or
int
pushf
add
jno
add
inc
into
add
cltd
stos
cmp
mov
fwait
nop
mov
adc
lds
movsl
dec
out
jnp
pop
scas
out
stos
call
pop
rol
mov
mov
lcall
push
comiss
loopne
fldt
loopne
sub
or
nop
lcall
scas
add
sbb
push
xlat
pop
xchg
add
loope
scas
pop
add
enter
scas
and
mov
mov
dec
inc
out
loopne
jnp
dec
jae
out
push
popf
sahf
and
mov
ljmp
push
push
mov
sbb
sbb
and
push
cmp
icebp
adc
mov
test
mov
sbb
pushf
leave
inc
and
pushf
lock
xor
fcmovu
mov
xchg
shlb
add
cmp
mov
addl
jmp
std
outsb
sbb
popa
inc
cmpsb
jo
scas
sub
sub
dec
aam
mov
lcall
shll
and
call
mov
lret
xchg
mov
ficoml
jecxz
pusha
lock
xchg
and
or
imul
push
pop
into
aad
sahf
mov
push
pop
fistps
sub
das
or
inc
call
xor
xchg
test
adc
adc
push
cmp
adc
adc
in
int3
xlat
cmp
inc
ret
mov
sbb
mov
jo
xlat
add
test
dec
andb
mov
mov
stc
pop
pop
jb
jb
arpl
inc
in
int
cmc
shlb
test
xlat
mov
cmp
out
dec
movb
in
push
mov
dec
lea
add
push
dec
loop
xchg
lods
mov
and
cmc
pop
cmpsb
inc
scas
mov
push
loop
mov
add
ud1
in
shlb
outsb
jb,pn
push
push
dec
das
jno
dec
es
enter
pusha
ljmp
daa
or
loope
sub
pop
shrb
push
sub
jbe
subb
outsb
jbe
push
add
ret
inc
mov
in
js
fimull
add
inc
lods
js
push
sbb
inc
mov
lods
and
in
pop
pop
mov
pop
push
cmpsb
cmc
fwait
adc
adc
iret
inc
hlt
push
jecxz
push
shlb
adc
or
xchg
or
ret
scas
les
xor
in
add
push
sbb
inc
out
add
enter
fwait
mov
and
pop
ret
insb
or
dec
out
mov
sbb
add
add
xor
mov
mov
jnp
sbb
test
sbb
into
outsb
pop
push
andb
mov
je
xor
jne
sbb
dec
dec
cmp
xchg
mov
mov
outsl
cmpsb
mov
pop
test
xchg
cwtl
testl
sahf
add
sbb
mov
stos
or
test
push
movsl
pop
mov
pop
lods
sahf
popa
lods
push
popa
loopne
out
jae
adc
lcall
inc
repnz
inc
fwait
adc
addb
sar
xor
adc
cli
clc
push
jno
pop
mov
daa
push
dec
test
xor
lret
call
or
lcall
rcrl
push
xor
jecxz
out
jecxz
ja
hlt
dec
pusha
cmpsb
pop
out
sbb
inc
mov
lahf
scas
pop
nop
add
sub
push
xor
cmp
ficoml
jp,pn
das
push
out
repz
and
fiaddl
or
dec
xor
loopne
push
lcall
popf
repnz
insb
jb
pop
mov
mov
stos
adc
outsl
xor
sub
mov
roll
je
rorb
inc
repnz
loopne
dec
sarb
inc
jge
lcall
lret
int
cmpsl
mov
lds
idiv
nop
pop
cmp
mov
sub
cmpsb
jp
js
sbb
mov
adc
add
mov
adc
inc
pop
pop
inc
add
call
add
dec
jne
inc
imul
fs
imul
mov
push
je
je
jo
outsb
outsw
inc
adc
outsl
arpl
loopne
fs
jae
dec
outsl
fs
mov
cmp
fs
add
ds
dec
popa
insl
gs
inc
jne
xor
push
push
sbb
dec
dec
inc
outsl
jb
popa
ret
jbe
scas
cmp
popa
addr16
inc
sub
jmp
pop
sti
pop
insb
ja
imul
add
lods
push
lds
in
and
add
add
add
mov
or
ds
xor
in
testb
or
add
add
mulb
add
push
add
pop
scas
mov
xor
sub
mov
cmp
lods
stos
je
xlat
sahf
dec
mov
lret
jb
out
jnp
pop
cmp
push
sti
aam
or
data16
add
or
fistl
push
daa
rorb
fldenv
jb
or
repz
push
pop
push
imul
mov
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
jbe
cld
xchg
arpl
xor
push
inc
cmp
mulb
xor
out
sarb
arpl
insl
jg
test
insl
xchg
bnd
lret
in
test
sub
idivl
loop
int3
mov
jno
pop
push
dec
adc
out
jbe
adc
test
and
xchg
shll
add
cmp
inc
add
xchg
jns
fidivl
xchg
rcll
pop
xchg
stos
mov
in
adc
adc
aam
imul
xor
loope
int3
mov
aam
mov
movsb
xchg
int
mov
ljmp
sbb
repnz
ret
mov
mov
or
stos
inc
mov
and
and
mov
xor
cld
xor
push
add
lret
inc
mov
push
jnp
call
cmp
sti
push
stc
enter
pop
data16
mov
cmc
sub
movsbl
push
xor
int3
daa
shlb
push
sub
lcall
and
pop
mov
pop
aas
movsl
sbb
imul
into
cmp
std
leave
or
cmp
test
pop
add
repnz
leave
jno
cmp
rcr
shlb
jle
jge
cmp
xor
pushf
in
fidivrs
and
repz
push
in
push
fmull
ljmp
pop
push
sub
mov
in
jmp
aad
add
cmpsb
icebp
pop
lret
or
mov
adc
mov
iret
dec
inc
scas
xchg
sbb
ljmp
xor
sbb
mov
add
mov
inc
sub
cmpsl
sub
cwtl
push
ret
inc
fwait
int3
jg
push
mov
ja
xor
imul
sub
in
sub
stc
ja
je
lods
push
sbb
.byte
mov
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
sbb
add
add
call
pop
add
add
add
addb
addb
add
sbb
add
inc
add
sub
add
add
add
rolb
addb
add
sbb
add
add
add
dec
add
adc
add
mov
add
sub
add
and
add
inc
add
add
add
add
mov
std
mov
imulb
mov
idivl
out
push
mov
hlt
sti
mov
cli
mov
cli
mov
repnz
imull
mov
idiv
scas
cli
ljmp
mov
mov
repnz
stc
mov
idiv
outsl
stc
mov
cmc
das
hlt
imull
idivb
idiv
clc
idiv
std
mov
cld
cmc
push
hlt
aas
hlt
mov
repz
stc
out
cmc
ljmp
repz
mov
imul
std
cmc
jg
mov
cli
mov
icebp
idivb
hlt
mov
cmc
ljmp
jg
mov
icebp
mov
icebp
mov
std
imulb
mov
cmc
mov
out
cli
ljmp
mov
divl
icebp
mov
cli
cmc
out
aas
cmc
mov
cld
cli
out
icebp
mov
repnz
sti
jg
mov
cmc
imulb
repnz
imull
cld
std
jg
mov
clc
mov
sti
cmc
das
repz
cli
mov
repnz
push
mov
div
aas
cld
imul
repnz
jg
mov
hlt
mov
mov
cmc
idivb
std
cmc
outsl
div
outsl
sti
cld
mov
mov
imulb
imull
mov
cld
mov
hlt
idivl
std
mov
repz
cli
imull
sti
aas
std
mov
repnz
scas
repz
div
push
cmc
aas
ljmp
mov
lock
das
lock
das
cld
idivb
std
out
mov
lock
hlt
das
cli
mov
hlt
std
jg
std
outsl
idivb
sti
outsl
mov
stc
mov
idivb
mov
std
std
std
outsl
stc
idivb
mov
hlt
scas
cld
hlt
aas
std
imulb
icebp
mov
clc
cmc
outsl
idivb
idiv
cli
hlt
out
stc
jg
push
cld
mov
cld
hlt
das
cmc
idiv
cmc
hlt
out
cld
imull
mov
mov
idivb
ljmp
idivb
cld
mov
repnz
cmc
mov
mov
std
aas
lock
mov
mov
std
imull
hlt
outsl
std
imulb
jg
mov
cmc
hlt
mov
mov
clc
mov
pushl
hlt
hlt
outsl
div
out
clc
mov
sti
mov
push
out
clc
mov
cli
imulb
cmc
mov
cli
mov
push
mov
outsl
divl
std
imul
mov
clc
mov
std
std
aas
std
idivb
icebp
mov
repz
mov
idivb
hlt
ljmp
lock
cmc
hlt
jg
mov
hlt
das
div
mov
idiv
repz
std
outsl
hlt
imull
mov
stc
mov
repz
mov
hlt
imul
push
outsl
cli
out
cmc
mov
cld
hlt
out
cmc
mov
clc
mov
idivl
std
mov
mov
stc
mov
cmc
mov
stc
push
mov
sti
mov
hlt
mov
div
scas
hlt
hlt
scas
divb
cmc
mov
std
imulb
mov
repnz
scas
std
mov
sti
std
das
mov
repz
clc
idiv
std
mov
lock
stc
mov
std
push
mov
stc
mov
clc
imull
mov
lock
repnz
hlt
std
outsl
cmc
cld
aas
icebp
cmc
imull
lock
repz
cmc
scas
idivl
cld
std
out
repz
mov
stc
mov
std
imull
hlt
mov
repz
std
aas
div
mov
ljmp
std
std
mov
clc
mov
repz
das
mov
das
clc
mov
divl
mov
cmc
aas
stc
hlt
mov
cld
aas
cmc
mov
stc
mov
hlt
mov
sti
cld
out
clc
mov
hlt
mov
sti
idiv
idivl
cmc
mov
cmc
mov
div
aas
cld
outsl
clc
cmc
push
mov
hlt
mov
pushl
cmc
das
hlt
outsl
sti
mov
lock
aas
icebp
std
mov
mov
repnz
mov
cld
mov
std
mov
repz
mov
cli
cld
aas
jg
imulb
sti
mov
cld
mov
sti
cmc
aas
clc
mov
repnz
ljmp
repnz
aas
clc
mov
sti
hlt
out
idivb
mov
idiv
aas
icebp
mov
hlt
mov
std
imul
stc
mov
idiv
jg
push
cld
scas
icebp
mov
repnz
das
hlt
cmc
das
repz
idivl
std
mov
clc
std
das
lock
lock
lock
idiv
outsl
cli
ljmp
cmc
mov
repz
mov
repnz
lock
cli
mov
std
jg
cld
sti
mov
icebp
mov
hlt
mov
cld
mov
cmc
imull
mov
mov
repnz
stc
mov
clc
cld
aas
std
cmc
scas
cmc
mov
stc
cld
out
cli
mov
repz
sti
mov
idiv
push
mov
clc
mov
hlt
hlt
das
idivl
stc
ljmp
push
mov
lock
divb
ljmp
mov
sti
mov
cli
outsl
hlt
cld
das
cld
scas
repz
mov
stc
mov
div
jg
mov
idivb
mov
cmc
mov
sti
mov
divb
lock
repnz
divb
std
ljmp
std
push
imull
std
outsl
cli
cld
outsl
std
scas
icebp
mov
cli
std
jg
hlt
out
stc
scas
idiv
sti
mov
stc
mov
divl
sti
cld
aas
stc
mov
clc
mov
clc
std
das
repnz
cld
mov
imull
imul
sti
mov
lock
mov
idivl
cld
std
das
stc
out
icebp
hlt
mov
mov
repz
cli
mov
cld
hlt
mov
mov
idiv
push
ljmp
hlt
jg
clc
hlt
outsl
hlt
std
out
cld
imulb
imull
sti
imul
push
jg
hlt
jg
mov
div
jg
mov
stc
mov
idiv
mov
hlt
push
mov
div
jg
mov
std
idiv
cld
mov
cli
mov
std
mov
mov
sti
mov
clc
idivl
mov
hlt
cld
das
cld
outsl
idivb
repz
sti
mov
idivb
stc
idiv
cld
mov
lock
pushl
std
out
repnz
push
std
das
icebp
mov
cli
hlt
outsl
pushl
sti
hlt
jg
mov
cld
std
push
mov
clc
mov
sti
mov
stc
mov
std
std
mov
mov
sti
std
mov
cld
scas
std
mov
repz
mov
mov
outsl
clc
imull
clc
mov
hlt
mov
cmc
jg
mov
idiv
jg
hlt
mov
mov
repz
cli
mov
stc
std
aas
div
aas
push
clc
imulb
mov
cld
out
div
out
sti
cmc
outsl
imulb
div
outsl
lock
mov
hlt
aas
sti
mov
lock
aas
mov
std
mov
cld
scas
cld
mov
cli
mov
repz
repnz
mov
imulb
hlt
cmc
aas
push
aas
div
out
sti
hlt
jg
cld
push
mov
std
imulb
std
das
stc
std
jg
mov
divl
cld
mov
std
das
hlt
mov
cli
imulb
stc
hlt
das
cld
out
repnz
std
mov
hlt
das
stc
mov
hlt
mov
div
outsl
div
outsl
lock
hlt
mov
divb
std
idiv
hlt
aas
icebp
cmc
mov
mov
sti
cld
aas
hlt
cmc
jg
std
aas
cmc
mov
cli
std
das
lock
div
mov
idivb
mov
icebp
mov
cld
mov
clc
imulb
mov
cld
mov
icebp
std
mov
hlt
imull
repnz
repz
icebp
mov
std
mov
std
mov
idivb
mov
sti
mov
cld
mov
cld
clc
cmc
jg
idivl
mov
idiv
scas
idiv
scas
idiv
push
mov
idivb
mov
cli
mov
idiv
scas
cld
cld
out
repz
hlt
mov
repnz
cmc
mov
div
mov
mov
cmc
mov
cmc
out
div
mov
cmc
aas
std
idivl
std
mov
icebp
cld
out
das
idivl
clc
mov
lock
out
cmc
mov
std
std
out
lock
sti
mov
sti
cmc
das
repz
cld
mov
clc
mov
cld
cld
jg
mov
sti
ljmp
mov
clc
ljmp
jg
mov
hlt
out
idivl
out
cmc
cld
aas
cld
mov
cmc
mov
mov
sti
mov
hlt
mov
mov
std
imull
divb
mov
repz
das
repnz
mov
idivb
cmc
outsl
cld
std
out
clc
mov
lock
std
das
mov
repz
repz
icebp
mov
cld
mov
mov
icebp
mov
cld
mov
clc
imull
idivb
hlt
jg
mov
sti
mov
clc
mov
clc
mov
cmc
mov
icebp
mov
cld
mov
mov
icebp
das
cli
mov
icebp
mov
cmc
scas
lock
sti
idivl
div
mov
mov
cmc
mov
repnz
repnz
icebp
mov
cmc
cmc
mov
mov
cld
mov
std
mov
cmc
cld
out
repnz
hlt
cmc
outsl
cli
mov
hlt
clc
mov
std
idiv
repz
mov
icebp
mov
cmc
hlt
das
idiv
mov
mov
std
mov
std
mov
cld
mov
repnz
std
outsl
icebp
mov
cli
mov
clc
mov
cli
std
out
cld
imull
mov
stc
mov
cmc
imull
sti
cld
mov
cmc
das
std
outsl
mov
idiv
outsl
sti
mov
cli
stc
mov
clc
mov
lock
divl
mov
lock
mov
mov
divb
divl
mov
stc
mov
divb
mov
sti
imull
cld
mov
div
mov
cld
aas
repnz
sti
mov
mov
clc
cld
das
cld
jg
std
jg
imulb
cld
imull
idiv
cmc
hlt
scas
mov
idivl
mov
repz
mov
sti
aas
sti
mov
stc
ljmp
mov
cli
mov
mov
repz
lock
cli
cld
outsl
repz
add
mov
add
add
add
add
and
add
add
sbb
sub
jo
add
push
dec
add
jl
add
mov
add
dec
add
mov
dec
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
