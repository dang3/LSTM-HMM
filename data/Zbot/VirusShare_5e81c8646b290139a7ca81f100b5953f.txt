incl
cbtw
sti
add
pop
in
das
in
pusha
pop
popa
popf
xchg
int
xor
pop
pop
leave
ret
pop
ret
mov
fucomi
or
pop
pop
leave
ret
dec
adc
adc
pop
pop
add
adc
pop
ret
nop
add
sbb
jg
notl
xor
aas
adc
nop
adc
inc
dec
dec
adc
add
cltd
insl
idiv
adc
inc
adc
inc
add
dec
inc
or
es
lods
push
push
or
and
and
jnp,pt
adc
or
or
or
fmulp
sbb
inc
dec
and
jge
fidivl
sbb
add
adc
movq
inc
or
jno
and
nopl
adc
fstp
in
jbe
add
nop
or
jbe
fcmovne
mov
push
mov
inc
ret
sbb
dec
or
mov
pusha
insl
or
mov
adc
in
lods
mov
pusha
addr16
adc
mov
mov
daa
negl
divl
std
adc
roll
pop
fisttpl
insl
and
dec
cwtl
cmp
cmp
inc
popa
stc
insb
imul
nop
nop
dec
pop
imul
sub
cmp
sbb
xor
sub
mov
push
flds
in
dec
add
incl
push
mov
add
movl
mov
mov
sub
mov
cmp
lea
stc
mov
or
not
sbb
xor
adc
ljmp
lahf
bound
fstpt
mov
cld
adc
lods
testl
mov
xor
push
or
not
neg
mov
mov
popf
mov
add
dec
inc
xor
mov
mov
aas
add
js
fidivs
cmpsl
cmp
pop
cmp
in
repnz
jae
sti
xor
mov
cli
mov
mov
push
add
mov
out
cld
dec
lods
or
lret
add
lock
xor
mov
fstps
adc
or
add
xor
xor
jnp
mov
inc
xor
inc
jne
outsl
mov
jne
xor
add
shlb
decl
and
insl
in
repz
inc
sbb
aam
xchg
mov
add
pop
mov
fstp
push
sbb
jmp
add
imul
repnz
dec
jne
xor
out
lds
jmp
mov
loope
montmul
cmpsb
pop
xor
les
add
cs
pushw
rep
aas
mov
sbb
or
popa
divb
dec
clc
inc
rol
inc
jge
out
mov
pop
repz
push
push
jl
push
loopne
imul
cmp
lret
notb
inc
or
push
in
or
xchg
gs
mov
neg
je
test
arpl
push
les
adc
mov
sub
add
push
bound
xor
pop
cmc
pop
jle
popa
lods
jne
pusha
sub
push
sbb
xor
adc
mov
mov
lock
mov
dec
andb
adc
sbb
dec
or
icebp
outsb
jbe
out
xchg
xor
mov
loopne
jg
in
add
mov
outsl
and
ret
gs
push
pop
add
and
add
and
in
mov
cmp
push
je
or
or
std
in
pushl
push
out
aad
cmpb
mov
sbb
sbb
add
push
test
xchg
clc
mov
add
repz
add
pusha
pop
mov
add
xor
in
mov
sbb
add
clc
push
mov
jecxz
xor
add
xchg
dec
divb
lret
cmp
ja
fsubs
add
xchg
sbb
add
add
inc
xchg
call
sarb
adc
mov
movb
sub
mov
mov
pushl
dec
dec
lea
pop
icebp
jle
jne
sub
test
add
stc
mov
std
fldt
pushl
jae
mov
push
iret
sbb
add
out
mov
mov
and
test
rorl
xor
mov
insb
in
out
xchg
or
push
xchg
sti
cmc
orl
in
inc
xor
adc
sub
inc
add
mov
add
loope
std
jmp
push
addl
add
pop
sbb
mov
sti
daa
out
jle
sub
cmp
movsl
inc
arpl
push
jb
aas
mov
shl
cmp
cld
fists
and
stc
rcll
jg
cmp
daa
rcrl
iret
mov
pop
clc
in
dec
scas
inc
stos
mov
pop
jge
push
js
add
faddl
and
pushf
add
and
and
add
push
pop
push
sub
add
pushl
cmc
dec
adc
lea
mov
add
jne
andl
push
in
icebp
push
loop
test
or
leave
lods
sub
xor
and
idivb
cltd
push
fimuls
int
aas
shl
dec
es
xchg
mov
sub
in
stc
addr16
shl
sub
addl
sub
lret
adc
loopne
addr16
cli
pop
outsb
cmp
xorl
jl
jmp
jbe
pop
adc
and
mul
pop
mov
mov
int3
sub
sbb
sbb
jae
xchg
mov
arpl
mov
mov
not
js
pop
pop
daa
xor
das
dec
mov
ror
lds
roll
out
out
das
nop
and
add
daa
adc
call
ficoms
ror
arpl
cld
outsb
aam
jmp
rcl
mov
loopne
scas
not
aaa
test
mov
lcall
pop
lea
and
or
repz
or
rcrl
push
cli
dec
jb
ror
repz
sub
fimull
scas
repz
rolb
shrb
mov
dec
and
or
jno
cmp
lods
dec
decb
loop
idivl
add
jbe
aaa
inc
loope
pop
imul
sbb
jge
dec
in
sub
rorb
sbb
aas
loope
mov
xor
shr
sub
fwait
loope
mov
ljmp
or
mov
rolb
test
push
mov
idivl
inc
jmp
outsl
push
sahf
sbb
lock
mov
jno
subb
mov
jge
inc
dec
add
cmp
jno
lock
repnz
jg
insb
out
pusha
mov
fisubs
sbb
inc
add
xor
pop
arpl
mov
mov
cmc
movsb
into
addr16
lret
leave
js
pop
fidivrl
sbb
sbb
mull
or
mov
out
add
pusha
adc
icebp
add
jmp
mov
add
arpl
int3
lahf
movsl
inc
cmp
punpcklwd
jo
cmp
int
shl
iret
pop
mov
lret
in
lds
insb
or
inc
and
pop
loope
and
das
call
repnz
divb
fisubrl
ret
jecxz
aad
aas
xor
inc
in
leave
clc
ja
or
xor
add
mov
fistpl
sbbl
in
adc
jb
loopne
fwait
adc
arpl
imul
fisttps
xchg
ss
int3
into
loopne
sbb
xor
pop
jecxz
stos
lcall
out
in
testb
add
ss
in
es
psubd
cmpsl
fwait
add
ljmp
addr16
icebp
pushl
jl
add
pop
ret
sub
int
idiv
sarl
test
not
bound
mov
add
add
into
inc
aad
orl
cld
pop
dec
les
fistps
push
repnz
icebp
enter
jo
hlt
out
push
sub
es
cmp
and
cmp
popa
mov
or
stos
ret
jno
clc
mov
frstor
icebp
lret
pop
and
jbe
imul
lods
in
mov
add
imul
inc
inc
add
jge
movsl
inc
sbb
sub
xlat
das
jno
call
or
cmp
push
sub
mov
jns
add
enter
or
push
adc
pushf
mov
or
pushf
push
insb
jb
pop
ret
in
lock
in
pop
pop
jo
les
sbb
push
mov
mov
popa
inc
adc
sub
fwait
sbb
outsl
dec
test
out
mov
pusha
mov
fnsave
jb
push
aad
cmpsl
clc
dec
imul
or
and
aas
inc
xor
fninit
add
mov
out
sub
sub
in
lock
in
aad
adc
cld
mov
mov
sub
sbb
jbe
xchg
add
xor
movsb
adc
dec
and
xchg
fcoms
jg
add
jo
pushf
cltd
inc
test
data16
es
pop
push
pop
arpl
insl
xor
jae
rcl
xor
lea
adc
sbb
xor
mov
add
addl
pop
daa
xor
xacquire
or
and
push
mov
jp
mov
rcrb
fcomp
mov
cmp
es
xlat
test
insb
or
fcoml
fadd
pop
jb
fildl
and
in
lret
pop
mov
mov
and
pop
jo
jne
aaa
add
fmull
iret
in
adc
and
jge
cli
cltd
cmp
movsb
mov
adc
dec
xor
data16
jg
sar
add
sbb
and
add
movsb
dec
ffreep
push
shl
inc
loop
mov
fdivrl
out
inc
lea
fildl
imul
push
push
mov
mov
xor
cmpsl
mov
sbb
insb
dec
fsubl
jg
stc
or
add
and
test
and
push
cmp
jl
fwait
sbb
inc
pop
out
mov
insl
fmul
jp
add
mov
inc
cmp
mov
adc
outsl
pusha
loopne
xor
inc
rorl
inc
sbb
sbb
neg
mov
sti
out
dec
fst
push
ret
pop
push
inc
lods
cwtl
aad
aas
and
or
dec
pop
xor
out
fcompl
pop
xchg
or
fiaddl
pop
stc
pop
out
repz
push
hlt
add
xchg
in
loopne
inc
xor
pop
dec
mov
pop
pusha
dec
sub
notb
push
mov
and
mov
fwait
add
rolb
sbb
nop
adc
sub
lods
xlat
les
cmpsb
les
or
lods
fwait
push
jnp
flds
adc
call
fs
jnp
sub
dec
cli
adc
or
pop
mov
pop
daa
into
dec
and
or
mov
mov
lcall
arpl
incb
ret
enter
cmp
and
push
js
jge
sbb
sub
cmp
sbb
cmpsl
and
mov
dec
outsl
into
fnsave
jge
into
cltd
or
js
xchg
sbb
mov
mov
enter
inc
popa
std
rorl
fdivl
mov
add
rol
mov
or
scas
jge
inc
and
push
mull
inc
xchg
jb
enter
push
mov
aas
jp
jnp
push
es
ret
jb
mov
pop
dec
sbb
cmpsl
or
jo
dec
pop
les
adc
addl
lea
cwtl
adc
in
cmp
jge
jle
xor
xchg
push
sbb
ffreep
mov
cld
data16
into
add
inc
mov
les
adc
xor
es
sub
js
xchg
test
pop
add
sub
pop
xchg
js
mov
jb
push
sar
fcmovu
sub
jae
lock
push
or
push
clc
push
mov
xor
sbb
loopne
add
lds
sub
js
inc
xor
aaa
sub
insl
cwtl
or
sub
inc
dec
or
enter
fsubr
leave
add
ret
sbb
out
lahf
decb
out
lret
jae
pop
jb
cmpsb
add
ljmp
push
inc
cmp
inc
sub
sbb
ss
cmc
xchg
add
cmp
xor
dec
or
in
in
or
xor
dec
push
clc
fsubrp
add
cmp
push
cmp
js
dec
sbb
add
fstps
insb
ds
sbb
pop
jnp
aad
mov
pop
inc
cwtl
sbb
mov
popf
outsb
cmpsl
push
xor
in
dec
out
xor
repz
jne
or
les
in
je
data16
out
aaa
pop
out
xor
xor
aad
cld
sbb
xchg
or
mov
dec
cmp
int3
add
imul
sub
pop
add
cmp
sbb
push
fstpt
test
lcall
ret
inc
imul
data16
sbb
int3
or
std
inc
aaa
fisubs
adc
aaa
push
push
fsubrl
sarb
or
cmp
lock
pop
mov
int
int
insb
lock
int3
pop
mov
push
fimuls
add
cmp
pop
ret
mov
push
testl
add
pop
aas
pop
lock
fcomp
xor
dec
sbb
sbb
or
lock
loope
ljmp
mov
and
adc
std
xchg
notl
inc
add
les
cmp
and
pop
std
aaa
sbb
push
xchg
xchg
into
sbb
pusha
cmp
mov
sub
mov
scas
dec
inc
push
mov
aas
outsl
je
out
or
add
movd
jmp
push
mov
mov
jnp
outsl
and
inc
movsb
fs
mov
dec
lcall
jecxz
call
xor
dec
mov
mov
xchg
outsb
fsubr
js
xor
hlt
imul
push
mov
imul
jae
push
jbe
jge
jecxz
lret
popf
pop
lock
je
pop
pop
mov
or
dec
adc
jno
add
inc
es
xor
fmuls
sub
rolb
sbbl
add
sbb
rorb
push
insb
xor
add
jbe
call
hlt
fcomps
mov
gs
ja
mov
aam
and
insb
and
mov
loope
or
add
jle
adc
dec
pop
out
pop
out
scas
dec
mov
pop
sub
xchg
jae
xchg
adc
and
pop
xchg
push
sbb
test
sub
push
rcll
les
xorb
ret
add
hlt
and
adc
xor
lock
int3
loop
fs
int3
xor
cmp
dec
or
mov
add
pop
mov
jmp
adc
or
adc
jp
add
fwait
mov
pop
repnz
shlb
fldl
rcr
dec
sub
or
mov
lods
mov
pop
in
sahf
ljmp
and
cmpsb
mov
mov
and
mov
aaa
xor
lock
or
scas
lods
int3
add
and
mov
adc
adc
rorl
cmp
dec
dec
inc
mov
xchg
xor
xor
cwtl
sbb
rcl
inc
popl
testl
jle
mov
rol
imul
insl
shrl
xor
loop
or
testb
in
pop
lea
rol
outsb
jcxz
jns
stos
or
movsl
ret
test
push
pop
mov
cmp
ja
mov
xchg
and
pushf
gs
inc
test
or
cmp
xchg
add
mov
scas
in
add
inc
mov
ret
jne
push
xchg
and
adc
sbb
into
out
adc
shl
and
xchg
mov
sbb
push
push
jmp
bound
adc
xchg
add
xor
cmpsl
mov
ds
outsl
push
imul
cwtl
rorb
jno
adc
pop
outsb
pop
filds
jmp
mov
cmc
lcall
imul
fsubp
dec
pushf
mov
jmp
inc
jmp
push
sub
adc
pop
ljmp
or
or
daa
cmp
lock
xor
sub
sbb
ja
icebp
cli
push
pop
cmpl
in
out
mov
jb
sbb
jmp
out
pop
cmp
xorb
insl
nop
cwtl
ret
aad
add
add
data16
test
sbb
xor
xor
sbb
xor
cmp
xlat
inc
clc
les
cmp
jae
fld
addl
pop
adc
mov
dec
mov
adc
push
stc
pop
sub
rcl
aad
xchg
add
dec
inc
sbb
mov
mov
sbb
dec
icebp
push
jge
and
out
fdivrs
sub
lret
lock
lea
jb
sbb
mov
lock
addr16
jg
sbb
jmp
xchg
in
aas
inc
out
lock
aam
cmpl
out
sbb
imul
aas
adc
jno
adc
addr16
stos
and
subl
jl
adc
and
or
or
or
js
dec
fnstenv
sbb
test
jb
pop
ja
jne
insl
je
rcrb
mov
mov
inc
adc
das
mov
into
sub
dec
ret
inc
lods
pop
inc
out
inc
dec
sbb
xor
movb
cmp
mov
adc
sub
sub
imul
sbb
sbb
ret
sub
xor
and
fldl
loope
lret
or
add
flds
jg
mov
not
pop
jge
fistpl
shll
mov
and
xor
or
mov
and
int
shlb
mov
dec
movsb
pcmpgtw
push
cwtl
push
jne
sbb
add
movsl
xchg
bound
fdivrl
xchg
mov
add
pop
xor
sub
test
inc
insb
mov
inc
mov
popa
mov
outsl
dec
sbb
add
adc
sbb
mov
fisubrl
fimull
jae
pusha
into
mov
aas
mov
ret
dec
out
xor
pop
loop
and
std
dec
loop
pop
inc
dec
xor
add
inc
lret
jle
jecxz
mov
xchg
cmp
sbb
xchg
fists
sub
sbb
cli
sub
jne
sub
popa
inc
and
jne
addb
mov
xor
clc
cmp
test
jne
rolb
in
setne
sbb
ret
jmp
andps
push
stos
cmp
sub
mov
es
fildll
adc
int
mov
mov
ljmp
adc
jae
int3
inc
subb
bound
cltd
andl
mov
jl
in
add
add
jp
cmpsb
hlt
cmc
enter
scas
xlat
insb
mov
fcoml
xor
push
nop
jle
sub
popa
adc
xor
or
loopne
hlt
cmp
sbb
sub
sub
cmp
jbe
into
ja
xor
popl
fistpl
and
mov
lock
or
xchg
out
mov
ja
cmp
add
xor
es
into
or
xchg
or
pop
int3
xor
insb
cmpsb
mov
fiaddl
add
jp
out
das
shlb
les
lahf
xor
icebp
lahf
jbe
adcl
push
mov
inc
push
inc
jmp
out
push
fbld
loopne
or
fsubl
repz
push
xlat
pusha
dec
std
pop
xchg
add
adc
jg
rorl
jecxz
xchg
inc
shlb
inc
sbb
pop
lods
and
dec
ja
sbb
loop
lahf
xchg
sbbl
add
movsb
lahf
sub
mov
mov
pop
add
add
inc
or
pop
aas
cltd
fiaddl
add
pop
xchg
icebp
cld
ss
addr16
stos
inc
mov
cltd
and
mov
in
aas
clc
decb
cwtl
repnz
mov
jmp
add
add
lods
loope
insb
add
jne
adc
jno
fwait
push
cmp
mov
into
mov
dec
mov
arpl
int3
sahf
cld
int3
cmp
lret
roll
stos
rep
daa
and
jo
jp
loop
pusha
inc
filds
mov
or
push
jp
add
out
cmp
dec
test
aaa
jmp
cld
pop
mov
ret
in
xor
mov
push
mov
add
rol
test
dec
jns
dec
and
mov
pushf
jecxz
push
and
int
scas
push
inc
fistpll
mov
cmp
mov
fidivrs
add
notb
add
fisubrs
push
shll
xchg
rol
add
je
ja
shrb
aad
int
out
out
and
and
mov
int
jb
icebp
inc
xchg
fimuls
mov
add
or
mov
inc
xor
imulb
inc
mov
mov
shrl
xor
jl
mov
push
lret
xbegin
in
xor
add
push
scas
inc
pop
lcall
jmp
inc
mov
push
lea
imul
or
inc
cmp
std
in
push
lea
push
pop
push
inc
cmp
sub
sub
push
add
lcall
jno
jmp
imul
sub
xchg
pusha
and
jno
sub
das
shr
aaa
fildll
pop
loop
mov
and
inc
or
mov
in
scas
lock
sbb
mov
fidivs
jge
test
jnp
shr
lds
cmp
jecxz
jl
inc
mov
fcomp
cmpsl
int
xor
jmp
mov
push
mov
shlb
xor
jb
imul
push
push
bound
cmp
setp
cmpsl
adc
in
xchg
inc
lods
cwtl
xor
adc
adc
adc
daa
xor
adc
mov
add
je
and
ljmp
sub
test
jne
popa
inc
lcall
nop
test
insb
leave
addb
xor
sub
push
pop
cmpb
jne
sub
loopne
iret
lock
or
mov
data16
jmp
imull
adc
jbe
daa
pushf
and
das
fisubs
scas
mov
filds
pop
sub
dec
dec
xchg
clc
jae
lret
in
sbb
std
or
adcb
cli
mov
lods
fadds
fisubs
hlt
bound
out
sub
push
mov
add
aad
add
push
push
push
ficomps
rcr
je
sbb
or
inc
dec
cmp
push
mov
es
push
daa
enter
or
dec
ret
or
popf
xor
loop
xor
pusha
mov
adc
add
mov
imul
mov
sar
xchg
sub
sbb
lcall
inc
push
and
sbb
icebp
inc
sti
jne
pusha
loope
xchg
sub
sarb
mov
mov
clc
rol
xchg
sub
cmp
inc
jge
addr16
jae
clc
lret
pop
mov
or
sbb
es
addl
cmp
cmpsl
js
stos
push
cli
test
jecxz
mov
add
insl
and
pop
xor
and
ja
aam
movsl
movsl
inc
incb
popw
sbb
xor
jge
adc
gs
xor
cmpsb
les
or
jge
jo
or
inc
xlat
and
addb
lock
loop
lcall
mov
cmpsl
rorl
xor
je
cmc
icebp
or
mov
or
push
add
or
in
sbb
pop
sbbb
add
cmp
in
loope
psraw
out
push
mov
es
sbb
mov
orb
enter
dec
push
and
xchg
or
cmp
dec
cmpsb
add
sahf
dec
and
data16
fadds
gs
cli
rcr
stc
nop
xor
or
jno
enter
mov
sub
adc
rolb
push
loope
and
and
ja
jg
or
jno
fisttpl
mov
stos
or
mov
out
bound
jge
dec
adc
adc
push
in
dec
pushl
add
sbb
adc
test
adc
or
xor
add
mov
cli
add
ja
and
arpl
push
dec
cltd
pop
ja
cmp
test
push
and
inc
test
dec
test
std
int3
fwait
jo
jo
lret
sbb
out
ret
lret
and
dec
inc
loop
lods
popa
jo
movsb
mov
and
mov
dec
sbbb
loop
inc
sbb
loopne
je
out
movsl
push
popa
lcall
es
push
add
shll
xor
sti
cmc
mov
fs
repnz
call
in
inc
mov
sti
adc
es
sarb
push
cmc
sub
add
pushf
jae
xchg
mov
ret
cwtl
inc
ss
sbb
fisttps
dec
inc
in
xor
xor
inc
sbb
xor
test
fcoml
push
mov
or
shll
les
repnz
fadds
filds
pop
out
and
test
jne
pop
popa
pop
or
roll
out
inc
mov
push
dec
in
mov
shll
iret
cmp
sub
or
loope
cli
repz
add
or
arpl
lret
bound
jo
adc
lods
adc
test
sbb
subl
or
add
into
add
xorl
sti
orl
or
movsb
imul
mov
mov
add
or
enter
out
pusha
rol
adc
jecxz
daa
sbb
xchg
xchg
adc
mov
ja
inc
aaa
movsl
daa
nop
ja
cmp
jne
and
out
js
out
roll
insl
pop
test
and
and
stc
add
add
nop
out
mov
add
or
mov
mov
adc
pop
ljmp
dec
cwtl
xchg
cmp
movsb
and
andb
xchg
test
int3
sub
test
movl
jbe
push
lods
sbb
push
test
and
xor
pop
mulb
mov
je
xchg
mov
push
mov
mov
stos
mov
fimull
dec
cwtl
mov
rcll
into
mov
xchg
inc
hlt
jb
jbe
push
xor
cmp
sbb
scas
imull
xor
mov
loop
ret
test
inc
movl
jg
mov
push
inc
adc
mov
test
fsubr
pushf
ret
test
xchg
stos
mov
mov
sub
sub
addb
dec
flds
in
mov
inc
stos
pop
lock
sbb
test
call
imul
inc
sub
sub
fisubs
pop
cwtl
jo
ret
adc
sbb
es
aad
jl
mov
sub
enter
or
xor
popf
ja
das
outsl
jb
xchg
clc
shll
or
or
test
ja
aaa
cmp
cli
ss
or
js
addl
adc
pushf
adc
push
jbe
in
repz
adc
push
and
movsb
or
push
popa
in
pop
pop
mov
addr16
iret
and
inc
jne
inc
mov
icebp
jmp
test
lods
or
xchg
inc
in
es
xor
sub
in
gs
and
mov
fwait
pushf
sti
sarb
ljmp
or
ss
jg
gs
push
testl
loope
lret
neg
sub
jge
imulb
test
je
das
or
lods
roll
add
jo
sbb
sub
add
push
fcomip
sub
sub
and
addb
addl
divb
xor
addr16
push
addr16
shrl
xor
sbbb
hlt
ficomps
fwait
mov
mov
add
jae
mov
fsts
stos
sbb
jge
add
std
or
daa
mov
xor
cltd
aas
sbb
adc
lcall
shrl
rolb
fiaddl
cmp
das
mov
and
inc
or
push
inc
loop
hlt
out
cmp
ret
push
fwait
enter
lcall
sub
cmpsb
mov
xchg
push
and
bound
das
sbb
stos
xor
arpl
icebp
aaa
mov
cmp
into
inc
idivl
stos
lods
or
inc
dec
aaa
jne
ret
xor
aad
push
sar
push
adc
loopne,pt
test
clc
sahf
xor
mov
dec
sub
xchg
inc
fimull
add
mov
rcrb
stos
xchg
xchg
lock
push
test
jne
mov
in
sub
jp
imul
std
aas
icebp
adcb
pushf
cmp
cmp
sarl
es
fsubl
cmpsb
je
push
call
std
or
dec
popf
dec
mov
ret
or
cltd
fdivr
xor
mov
push
imul
bound
hlt
fiadds
das
mov
xor
push
shrb
aaa
js
xorb
mov
cld
cmp
inc
rcl
js
jnp
or
xor
mov
je
push
inc
inc
dec
popf
jle
pop
adc
pusha
test
sub
iret
fs
rcrl
arpl
sar
dec
ret
xor
add
add
xor
ds
pushl
add
enter
cwtl
int3
push
inc
aas
imul
lahf
test
js
test
push
inc
mov
jnp
test
add
std
sub
push
mov
pop
mov
addb
xchg
lahf
add
xor
cmp
mov
pop
add
cmp
mov
lret
sbb
push
add
add
das
add
addr16
lcall
and
mov
jg
add
or
and
sti
fbstp
xchg
addl
addr16
add
add
popf
mov
scas
les
dec
fld
ja
and
push
loopne
cmp
rolb
add
jle
mov
inc
fnstenv
repnz
aad
nop
or
mov
xchg
insl
insb
pop
lock
std
decl
hlt
push
mov
fs
sub
std
mov
and
dec
mov
out
xor
pop
or
int
and
iret
push
lret
pop
mov
cmovl
sti
fcomps
das
rolb
push
add
adc
lcall
call
jbe
mov
xchg
sbb
out
and
pop
out
fs
mov
in
movsl
sub
filds
movsb
stos
jmp
push
loop
andb
mov
sbb
ds
clc
incl
dec
add
in
sub
out
mov
mov
lret
mov
incl
aad
pop
stc
inc
xchg
ror
nop
fiadds
mov
call
ds
add
jae
adc
mov
adc
test
or
cmp
jp
cmc
push
imul
xchg
pop
arpl
adc
test
mov
and
mov
xor
sahf
scas
cmp
push
mov
fcmovne
jg
sub
shlb
aam
lock
test
movzbl
adc
or
insb
push
stos
inc
enter
loope
rclb
jecxz
ja
and
decl
mov
xor
mov
cmp
fnstsw
pop
in
push
aaa
lret
jnp
add
int
mov
lods
loop
mov
fstpl
movsl
pop
cld
sbb
inc
push
imul
jl,pn
cld
and
das
dec
pushf
and
pop
and
outsb
or
pop
fcompl
hlt
add
hlt
sbb
mov
sarb
sbb
fucom
sbb
xlat
mov
mov
push
mov
adcl
les
les
les
inc
pop
and
stc
cmp
loopne
push
loope
mov
adc
adc
ljmp
xchg
mov
inc
xor
mov
imul
hlt
adc
mov
push
mov
hlt
rclb
adc
shrb
int
push
dec
les
adc
jae
fwait
hlt
push
push
fisubs
pusha
mov
pop
cmpsl
bound
jne
dec
imulb
bound
xor
xor
int3
xchg
jbe
mov
or
repz
mov
shr
out
mov
add
sbb
sbb
aaa
imul
shlb
cmpsb
sbb
cwtl
mov
imul
pop
mov
inc
cs
xlat
repz
push
rolb
jle
xor
cmc
sti
arpl
out
repz
or
or
js
inc
mov
into
test
call
add
les
fwait
loope
rorl
loope
fbstp
dec
jne
add
adc
inc
movsl
call
fidivrl
or
push
lods
out
out
cmp
adc
jmp
orb
or
test
loop
inc
mov
test
push
jne
push
mov
xor
aas
jge
in
in
sub
lds
sbb
mov
rorb
dec
add
mov
stos
hlt
inc
out
mov
jne
cmpsb
js
dec
int3
in
ret
shll
jg
roll
mov
rolb
dec
dec
jmp
adc
jne
scas
fimull
cmp
sub
mov
ja
mov
and
inc
dec
dec
pop
outsl
pop
push
jecxz
xchg
adcb
inc
cmp
and
aas
ret
mov
call
push
sbb
call
mov
addl
mov
in
call
orb
inc
test
mov
inc
call
inc
fs
popa
mov
xor
cli
xor
dec
inc
xor
add
dec
mov
ds
test
sti
xchg
aaa
jno
popa
inc
ret
xor
add
sahf
sub
dec
sbb
mov
sahf
scas
loop
sti
and
pop
adc
sub
xchg
adc
pusha
pushf
push
popf
mov
rolb
loope
call
sbb
lds
das
xor
inc
add
add
clc
inc
push
ja
pop
lock
push
and
and
ljmp
bound
add
mov
clc
xchg
and
cmp
gs
inc
aam
popf
sbb
sub
dec
js
js
jmp
enter
enter
cs
or
mov
mov
shlb
sarl
clc
les
xor
cltd
and
xlat
jns
inc
movsb
pop
mov
icebp
and
cmp
lds
daa
mov
push
pop
out
xor
pop
cmpsl
bound
insb
dec
dec
pop
aam
movsl
sbb
in
jae
rcrl
shrl
test
sti
testb
testl
shrb
push
jle
dec
aad
cmp
das
loopne
xor
dec
fstp
fs
test
xlat
inc
xchg
cmp
arpl
inc
adc
lods
sbb
mov
int3
cmp
inc
mov
pop
out
popa
test
xchg
mov
dec
sbb
or
push
dec
sarl
popf
lcall
fdivrp
xlat
jns
cmp
imul
lcall
cmp
iret
sub
sub
xor
and
mov
call
mov
dec
push
adc
xchg
jmp
and
sub
mov
bound
pusha
and
data16
jbe
sub
aam
push
dec
add
sbb
in
ja
lret
xor
add
push
push
pop
orb
add
mov
test
jb
shlb
call
dec
pop
orl
mov
mov
sub
inc
xchg
xchg
xchg
jnp
add
stos
sub
jbe
sub
es
xchg
jo
sbbl
jl
pop
mov
jle
cmp
push
cmpsl
fldcw
adc
int
ret
cmp
in
and
jmp
mov
sub
jno
inc
jb
mov
das
dec
les
pop
imul
sbb
adc
rolb
cmp
xor
jno
and
js
xchg
movsl
imul
in
insl
test
sub
jge
pop
mov
fidivl
mov
data16
mov
mov
add
cmp
rclb
xchg
jl
loope
pop
push
ret
or
loope
adc
jg
xchg
jbe
mov
fwait
sub
jo
inc
dec
mov
lock
add
sub
sub
dec
push
loopne
mov
fchs
cltd
rcrb
clc
mov
adcb
jno
in
cmp
adc
lds
inc
mov
mov
je
call
pop
mov
dec
test
das
cmpsl
add
mov
or
push
rorl
mov
or
xorb
and
push
adc
mov
cmp
inc
inc
pop
lds
lea
out
inc
hlt
sub
enter
js
ret
hlt
xchg
es
adc
jno
scas
ljmp
push
in
push
fs
leave
in
aad
pop
vpcmpeqw
les
adc
addr16
add
es
dec
sbb
test
sbb
mov
cmp
cmp
push
or
lods
test
inc
xorb
cmp
hlt
test
inc
jb
les
and
addl
test
ljmp
add
pusha
fmul
sub
xchg
out
sbb
sbb
push
incl
insl
pushf
cmp
loopne
mov
pop
aaa
sub
cmpsl
repz
push
inc
mov
lret
pusha
repnz
and
and
cmpsl
and
stc
and
xchg
sbb
mov
xchg
divb
mov
adc
hlt
inc
inc
je
mov
ss
adc
add
subb
cmp
filds
cmp
pop
in
int
pop
lret
stos
jne
xor
jne
int3
adc
inc
iret
mov
sbbl
mov
jge
leave
test
rolb
cmp
ret
dec
pop
das
cli
push
aam
mov
or
es
and
xchg
stos
loopne
sub
insb
pop
or
in
push
repnz
xor
xchg
add
dec
add
or
call
sbb
stc
adc
cli
add
xchg
mov
push
dec
fsubs
mov
hlt
test
adc
std
sbb
adc
sbb
cltd
addb
or
sbb
jmp
testb
push
add
shlb
pushl
mov
inc
lcall
popf
inc
or
dec
add
mov
std
call
jmp
cli
inc
add
fcoms
inc
movsl
push
int3
add
ljmp
ljmp
add
push
mov
xor
add
lcall
loopne
idivl
push
cs
jne
es
int3
sbb
jmp
clc
int3
lret
xchg
mov
xchg
bound
dec
inc
fcoms
incl
inc
add
pop
add
mov
rcll
sub
add
sti
icebp
xchg
jbe
fbstp
roll
dec
ss
or
add
sti
jg
shld
xchg
insl
imul
shll
and
data16
fistpll
fs
or
mov
loope,pt
jl
add
jmp
mov
roll
lcall
xor
sahf
rcrl
adc
imul
add
mov
bound
and
test
sub
jl
push
add
add
daa
repnz
lea
jmp
mov
pop
adc
je
add
and
add
ljmp
pop
jp
icebp
movsl
mov
mov
add
add
test
faddl
incl
lock
and
push
xchg
lods
lahf
addl
pop
cmp
add
fldl
nop
sbb
ss
cwtl
mov
idiv
xchg
insb
mov
ret
push
or
sbb
pop
loopne
aam
xchg
add
xchg
xor
stos
adc
push
fwait
mov
adc
inc
ja
fwait
xor
mov
flds
shll
adc
lds
or
mov
divb
pusha
gs
inc
jl
fistpll
and
outsb
push
xchg
mov
inc
or
mov
cltd
push
mov
test
ficoms
mov
iret
loope
xchg
push
jle
pusha
mov
cmp
adc
xchg
cltd
out
adc
in
jecxz
mov
xor
cmp
hlt
xor
push
cmp
or
jnp
adc
push
cltd
jo
movsb
push
sarl
adc
or
icebp
jns
cmpsb
fwait
jmp
mov
or
adc
cwtl
add
outsl
das
cld
in
gs
or
pop
xorb
mov
ja
das
xchg
sbb
dec
mov
push
mov
and
inc
rcr
adc
in
adc
aam
cmc
int3
xchg
mov
out
lods
sub
mov
andb
fxch
test
push
icebp
lock
jg
lods
gs
cltd
push
adc
ret
test
push
mov
pop
jecxz
lcall
add
hlt
fisubs
js
aaa
or
pop
js,pt
mov
dec
fdivrl
movsb
inc
adc
das
daa
test
mov
mov
ja
adc
das
cld
popl
mov
add
inc
mov
ret
mov
addr16
inc
jmp
imul
xchg
jle
popa
iret
dec
in
pop
outsl
aaa
lock
js
orb
decl
cli
pop
cltd
cwtl
pushf
test
addb
leave
nop
inc
xor
pop
sub
mov
cmpsb
sub
cmp
clc
test
add
mov
sbb
sub
pop
sbb
idivb
lret
das
inc
bnd
pusha
mov
pop
xor
push
push
shlb
lock
sti
push
add
imul
xchg
nop
and
inc
and
clc
push
in
mov
add
jmp
out
or
mov
cmpsl
test
adc
popf
andl
pop
mov
lods
nop
dec
xchg
or
add
xor
mov
xchg
or
adc
xchg
jb
push
lods
cli
sbb
cmp
and
xor
or
mov
ror
mov
adc
lds
std
sbb
pop
cmc
push
and
test
adc
xchg
les
ja
pop
dec
xorl
test
scas
test
loope
outsl
shr
dec
pushf
fcmovnu
sbb
pop
rol
imul
push
roll
xor
jmp
ss
ds
push
subb
push
test
das
xor
add
mov
xchg
scas
xchg
stos
lds
pop
jmp
push
push
mov
imul
outsb
jo
dec
imul
add
dec
iret
add
in
fdivrl
add
and
dec
fwait
sub
mov
mov
data16
push
mov
test
mov
jmp
test
xchg
outsl
shrb
push
gs
jl,pn
pop
mov
mov
jg
sti
aad
sub
inc
cld
inc
xor
scas
ret
aaa
mov
inc
mov
sarl
cwtl
mov
int
fdivp
pop
push
jge
adc
icebp
shrb
adc
xor
pushl
sub
add
ret
rcll
daa
or
mov
hlt
mov
inc
dec
fadds
mov
pop
sbb
pop
test
lock
lea
bound
add
insl
lods
xchg
ss
dec
in
sahf
test
cwtl
jo,pt
call
fistl
movsb
inc
inc
sbb
and
add
xlat
lahf
fwait
push
or
pop
mov
stos
aaa
xor
mov
jl
adc
and
repnz
mov
xor
push
inc
inc
aas
inc
jo
sti
jge
pushl
mov
cmp
test
mov
push
xor
push
sbb
ds
popf
add
movsl
pinsrw
jne
rcr
clc
aas
rorb
xchg
or
or
push
adc
test
call
xor
rorl
int3
pop
pop
arpl
ljmp
cmp
fldl
testb
scas
mov
xlat
int3
ss
sbb
arpl
ds
push
pop
or
subl
inc
mov
ficomps
or
ds
icebp
push
mov
or
sub
fcoml
fistpl
xor
inc
js
mov
ret
add
aam
pop
addr16
sti
loope
inc
push
xchg
sbb
pop
imul
xor
mov
or
push
sub
inc
inc
mov
dec
xor
cmp
jno
fmull
outsl
fwait
cmp
cltd
mov
pop
test
mov
in
idiv
lahf
sbbl
xchg
xchg
cmp
pop
add
fmull
sti
mov
mov
push
add
das
icebp
pop
clc
sub
add
data16
xchg
jge
jbe
add
pop
in
xchg
aam
lcall
call
cmp
inc
mov
sbb
push
sbb
dec
rolb
jnp
shrb
push
xor
sti
dec
or
add
lock
sub
movsb
shlb
mov
sub
jl
inc
mov
pop
fsubr
mov
cli
cmp
or
shlb
fildll
sub
mov
mov
mov
mov
xor
int3
jb
movsb
push
pop
ss
mov
adc
icebp
mov
mov
xor
cmpsb
inc
push
lcall
xor
jae
xor
add
ret
jg
rcr
adc
or
pop
jecxz
mov
ljmp
push
inc
jo
or
jg
mov
xor
cltd
imul
lcall
dec
out
add
lret
sbb
pop
out
push
dec
add
pop
test
aaa
pop
test
jl
push
fidivrs
push
pop
xor
mov
aas
and
xor
fsts
out
rcr
in
lcall
mov
xchg
rcrb
push
mov
lock
mov
fidivl
pop
add
roll
jne
cmpsl
ljmp
or
loope
lock
rcll
xchg
lds
and
loopne
push
loopne
jmp
add
mov
lock
stos
in
jae
cmp
sti
arpl
aaa
cmpsl
push
fsubrs
push
in
pusha
int3
pop
adc
adc
iret
inc
scas
es
lods
jp
in
sbb
cmp
sbb
xchg
push
test
adc
lds
out
aam
lret
das
mov
pop
xchg
lock
stc
mov
jbe
fmuls
lcall
fcomp
or
fwait
or
stc
fstps
mov
adc
lods
pop
mov
add
movsl
cmpsb
xorb
andb
pop
cmpb
ss
stos
inc
dec
shll
adc
pop
fadds
mov
cmp
inc
shlb
push
popf
push
ss
cmpsl
idivl
in
daa
adc
add
xor
insb
jp
dec
cli
imul
jo
ret
repnz
hlt
aaa
adc
jne
xor
dec
push
cmp
aam
ret
xchg
aad
ljmp
push
fcomi
popa
jo
and
test
inc
cmp
aam
add
dec
sub
or
adc
cltd
or
out
adc
stc
sbb
pop
pop
pusha
dec
add
pop
cmp
loop
arpl
push
dec
sbb
mov
fbld
add
loop
loope
xor
lret
pop
add
test
aas
sbb
fstpt
adc
xor
pop
lret
mov
gs
xchg
cld
add
mov
lods
pusha
mov
sub
and
pop
in
adc
imul
add
aam
imul
test
mov
mov
faddl
mov
out
out
mov
mov
adc
and
push
cmpsl
inc
mov
gs
cmp
addr16
inc
xor
ds
test
sbb
adc
xchg
inc
add
fistpll
rorb
jge
leave
sbb
stos
sub
add
popf
getsec
jae
dec
sbb
inc
dec
scas
popf
xor
out
sbb
fldl
or
mov
or
arpl
lcall
sti
fs
enter
sbb
jge
fwait
mov
adc
pop
sti
adcb
cld
or
cmp
push
shr
xor
fmul
movsb
mov
cmp
and
cwtl
sub
lcall
dec
xor
cmpsl
or
sti
data16
or
dec
mov
icebp
push
cmp
fwait
es
idiv
inc
sbb
push
mov
stos
out
int
push
inc
adc
inc
js
inc
adc
and
pop
xor
fwait
daa
into
sub
shlb
loop
out
xchg
aad
or
lea
pop
subl
loop
fistl
sub
pop
mov
pop
insb
imul
jnp
jnp
xor
pop
mov
addl
out
and
or
lds
cmp
or
xchg
stos
out
and
mov
xchg
inc
rcr
dec
xor
data16
decb
and
pop
xor
mov
adc
lret
hlt
adc
inc
jmp
fidivl
sub
js
xor
ret
mov
aam
sbb
add
or
scas
jmp
dec
fildll
mov
push
jne
lds
xchg
lds
std
pushl
push
decl
xor
xchg
scas
mov
sbb
pop
cld
inc
mov
add
jp
inc
mov
xchg
push
cmc
ljmp
decl
les
inc
pop
add
inc
and
arpl
adc
fldt
das
jge
fs
fs
pop
ds
dec
aas
inc
call
sub
fistpll
push
add
and
sbb
push
cs
jne
add
fbld
and
jmp
or
mov
faddp
add
inc
in
pop
add
insl
or
and
inc
or
add
test
mov
push
mov
incl
inc
and
pop
dec
lret
jb
mov
push
jle
push
dec
enter
add
mov
test
xchg
decl
fists
loop
add
inc
aad
je
lea
negl
aam
decl
sub
shlb
cs
and
stc
cmp
scas
pop
mov
imull
leave
cs
movsl
mov
test
sbb
add
das
cmc
add
subb
mov
insl
ljmp
ss
xorl
lock
call
andb
mov
sbb
sbb
daa
dec
push
adcl
data16
out
outsl
xchg
xor
fstpt
test
xor
adc
adc
lret
jg
and
inc
bound
clc
cltd
mov
and
test
sub
mov
jne
dec
out
or
adc
mov
fwait
ljmp
fnstenv
lea
in
test
sub
pop
lcall
xor
test
data16
inc
sbb
popf
inc
lock
jg
ret
ret
iret
movb
sbb
sbb
add
les
addr16
mov
test
daa
pop
lcall
jle
dec
xchg
sub
divl
add
inc
leave
mov
leave
mov
mov
xor
sbb
sbb
popa
mov
or
adc
clc
incl
mov
es
pushf
clc
dec
xor
mov
or
jmp
mov
fisttps
mov
or
mov
and
adc
jge
pop
das
in
outsb
xchg
addr16
or
clc
jb
sbb
mov
cmp
ljmp
cmp
lcall
pop
lret
push
dec
sub
stos
adc
call
sbbl
cmp
js
mov
ret
roll
push
stc
hlt
push
insb
idivl
insb
mov
cmp
lcall
cmc
fisttpl
fbld
sbbb
xor
aaa
outsb
outsb
xchg
dec
jnp
mov
jp
sub
adc
in
js
ret
popf
pop
insl
scas
mov
in
jge
repz
testb
mov
in
call
enter
push
lahf
xchg
aaa
pop
cmp
push
adc
sub
pop
shrl
jg
and
jo
inc
and
or
inc
mov
add
out
xchg
inc
and
cli
xchg
dec
lods
cmp
iret
addl
inc
add
fisttpl
pop
cltd
jle
mov
insb
xor
add
call
test
sub
aas
repnz
sar
int3
or
test
or
jmp
das
pop
inc
sbb
jge
loop
divl
shlb
sub
and
aam
lcall
roll
adc
jns
cwtl
in
sbb
ljmp
test
and
mov
add
pop
jp
repnz
xlat
or
jge
pop
cmc
hlt
sbb
mov
jg
dec
add
xor
sarl
cmp
imul
scas
in
xchg
adc
sbb
subb
out
daa
sbb
adc
or
and
sbb
sub
jecxz
push
movsl
add
es
aam
out
addr16
arpl
gs
and
int
adc
pop
or
movsl
and
fcomip
lods
stos
in
add
xchg
fisttps
jg,pn
mov
xchg
dec
push
ja
and
icebp
test
adc
lahf
dec
jno
pop
orb
jmp
arpl
incl
jbe
xchg
scas
stos
or
sub
leave
cmpsb
in
push
mov
mov
testl
rolb
outsb
sbb
std
or
es
adc
xchg
xor
inc
rcrl
lea
addl
jg
xchg
lret
rcrl
pop
jle
inc
sbb
cmp
add
mov
or
push
sub
push
add
out
nop
mov
pushf
std
cmp
sub
xlat
add
test
mov
jle
jl
arpl
stc
lds
pop
sbb
dec
push
push
add
push
mov
cmp
jmp
xor
cmp
lods
loop
out
lahf
test
lock
adcl
out
les
loopne
jle
js
and
loop
dec
das
mov
test
push
dec
inc
loope
lock
pop
add
jmp
ret
cmp
scas
pop
loopne
adc
mov
sbb
or
std
fwait
xchg
cmpsl
xor
int3
sub
pusha
faddp
add
xor
jg
sub
nop
subl
rcrb
push
sub
sarb
or
addr16
rolb
jbe
ss
xchg
xchg
jmp
xchg
or
mov
inc
ljmp
out
addl
xchg
lret
mov
addl
dec
add
pop
xchg
mov
aaa
fcoml
xacquire
loop
leave
fnsave
aam
xchg
fstl
jns
test
aad
mov
or
push
jg
ds
call
out
pop
pshufw
inc
dec
daa
and
mov
iret
outsl
popf
pushf
pop
push
push
xchg
jne
mov
fadd
add
fists
icebp
add
xchg
rcll
dec
std
mov
and
leave
pushf
cli
rcrb
sub
dec
ret
lahf
and
pop
mov
outsb
sbb
xor
imul
das
rcrl
divb
pushl
call
mov
les
stc
jmp
cmp
sub
and
lcall
mov
fmull
into
sub
push
pop
loopne
aaa
cli
adc
nop
dec
push
push
cltd
inc
or
lret
or
fildll
inc
enter
cmp
lock
sbb
loope
rolb
add
adc
inc
xor
jno
maxps
inc
jmp
mov
pop
pop
inc
sub
mov
adc
lret
das
pop
arpl
xor
div
jo
pop
clc
sub
lods
mov
cmp
mov
adc
sub
bound
test
pop
dec
addr16
clc
and
test
inc
xchg
test
roll
je
add
xor
mov
ret
int3
js
test
mov
call
rclb
incl
sub
sub
mov
inc
adc
ja
pop
jle
or
call
mov
xchg
in
add
fnstcw
pop
adc
pop
mov
or
lahf
repz
or
arpl
or
rcr
and
xchg
repz
stos
int
bound
sub
xchg
pop
cmp
push
sahf
in
das
sar
jbe
sbb
jle
icebp
xchg
dec
gs
mov
adc
or
data16
inc
ss
pop
xchg
out
jecxz
stc
and
jg
arpl
fcomp
add
and
pop
cmp
jecxz
dec
notl
or
clc
xchg
subl
das
push
adc
lods
test
call
sbb
push
pop
mov
rcl
addr16
out
in
mov
jl
movups
fidivs
nop
shl
mov
in
imul
or
sbb
adc
stos
pop
or
jge
fsubrs
sub
or
push
and
sub
insl
cld
sete
fbstp
xor
fbstp
push
outsl
push
rolb
fistps
scas
mov
loop
xor
or
or
jle
roll
std
movl
or
cli
fistpll
sbb
filds
stc
mov
dec
jnp
fcmovnu
xchg
sub
hlt
cmp
push
test
je
push
cmp
inc
cmp
nop
cld
and
and
push
or
cld
aaa
xlat
fistps
mov
lds
in
roll
mov
inc
jmp
and
add
cmp
and
in
xchg
or
ret
in
inc
lds
push
rcrb
inc
in
int3
aad
lds
xor
and
mov
aaa
xor
call
add
out
ljmp
jnp
sbbb
mov
mov
rolb
inc
and
push
and
sub
pop
inc
push
jns
call
aam
add
fiaddl
push
test
sbb
adc
adc
adc
push
bound
adc
call
arpl
and
or
or
fs
and
andl
test
ds
mov
xor
movsb
lea
pop
adc
adc
jnp
cld
lret
iret
push
sbb
je
adc
imul
adc
jb
test
jl
xor
adc
in
loopne
clc
cmpb
out
sub
pop
or
in
adc
pop
xor
jle
push
lock
sub
jnp
std
adc
les
enter
mov
mov
and
or
fcmove
rclb
adc
les
or
xor
inc
adc
adc
cwtl
repz
ret
mov
push
hlt
testl
outsl
xchg
mov
ret
add
notb
push
xor
mov
push
lock
test
rorw
xchg
hlt
xor
hlt
lcall
decb
ret
xchg
push
dec
clc
sbb
lods
xchg
popa
inc
mov
xor
out
mov
mov
xor
les
jl
in
or
bound
loopne
jle
cmp
shlb
push
shl
adc
xor
jnp
cltd
pop
loopne
test
cld
inc
jns
push
mov
adcb
xor
mov
or
push
or
push
je
mov
pop
mull
js
cmp
nop
mov
xor
loopne
cmp
sbb
shll
fcoms
add
andl
fwait
push
shll
and
xchg
and
mov
jb
es
mov
dec
mov
mov
sub
dec
lcall
or
pop
cld
pop
popa
and
in
div
pop
shlb
dec
cmp
pop
xor
insb
testb
lahf
in
jno
mov
or
or
inc
dec
pop
xchg
mov
test
ja
xlat
push
push
push
incl
rolb
lcall
jnp
pusha
mov
cmpsl
bound
pop
sbb
stos
mov
xor
adc
loopne
or
arpl
adc
mov
lds
call
add
fisubs
sbbl
adc
xor
sbb
fwait
inc
dec
or
pop
or
add
dec
push
shlb
divl
sar
sahf
push
xor
shlb
adc
add
dec
and
jp
mov
push
or
addl
xchg
adc
or
test
inc
lahf
push
data16
mov
loopne,pt
ror
mov
xchg
or
popf
xchg
std
clc
pop
inc
cli
out
or
pusha
rorl
addl
adc
and
or
or
mov
jno
xlat
or
cmp
test
dec
mov
mov
mov
push
or
data16
pop
mov
and
in
ret
sahf
lret
lock
nop
lods
cmp
fs
decb
mov
cld
add
mov
js
add
adc
push
add
inc
add
aam
add
inc
inc
jp
je
iret
fisubs
repnz
jne
sbb
adc
dec
ljmp
incb
xchg
xor
testb
jp
stos
pop
std
icebp
dec
sbb
daa
mov
addl
push
sbb
orl
mov
faddl
jae
cmpsl
push
jne
sub
push
lock
sarb
and
fsubl
lea
inc
icebp
aaa
push
into
sub
pop
bound
and
mov
xchg
std
xchg
cli
imul
sbb
xchg
jecxz
fld
out
pop
inc
ja
pop
sbb
dec
xor
in
jmp
enter
sbb
adc
jg
cmc
into
rcr
jp
mov
incl
stos
pusha
lock
xchg
rcr
add
inc
nop
xchg
jg
adc
mov
test
popa
std
mov
adc
ret
popf
nop
cltd
pushf
arpl
iret
aam
xor
xchg
pop
test
aam
jmp
subb
push
stos
lods
popa
arpl
pop
addl
mov
test
cmp
jbe
sti
inc
arpl
add
pop
leave
rcrb
push
repnz
add
mov
jno
decl
orb
in
mov
cmp
sahf
and
mul
dec
lret
lods
les
push
rcll
je
jnp
or
ret
scas
sarl
sbb
mov
iret
outsl
fsubrl
xchg
inc
cwtl
mov
mov
xchg
push
ljmp
mov
sahf
inc
or
push
dec
mov
xor
sbbl
push
push
inc
push
loopne
mov
addb
add
sub
cmp
and
aas
mov
imul
fucomp
sbb
adc
nopl
push
jns
mov
lret
mov
mov
xor
lret
push
xchg
dec
enter
ja
xor
mov
and
mov
mov
bound
lds
pop
addr16
add
addb
jg
mov
jg
ljmp
add
orl
mov
pop
les
dec
sub
push
jne
fisttpll
gs
leave
mov
cmp
sbb
cmp
dec
push
or
outsl
push
fwait
pop
xor
hlt
or
lock
mov
arpl
dec
jge
ss
and
addr16
imul
adc
inc
and
and
sbb
inc
vcmpps
xor
and
or
data16
out
xchg
push
test
aaa
mov
aad
push
pop
mov
std
int3
pop
cli
lock
adc
or
je
cmp
sub
loope
bound
pop
ljmp
push
jbe
xor
ds
sub
in
pop
pop
loopne
sub
ret
or
ret
add
jne
out
dec
test
push
jmp
or
loopne
jmp
js
jmp
inc
xchg
mov
fsubp
adcb
fdivr
jg
mov
daa
je
push
movsb
test
arpl
sbb
mov
or
sbb
and
mov
mov
std
leave
test
repz
stos
or
or
inc
push
jmp
jle
push
lret
enter
and
pushf
xor
sar
cmc
jg
xor
mov
in
sub
mov
cmp
cltd
push
add
in
outsl
cmc
add
hlt
jne
mov
pop
das
add
stos
lret
inc
push
sbb
mov
push
clc
mov
sub
dec
out
mov
jnp
repnz
movsl
adc
or
leave
mov
sbb
outsb
lock
outsb
adc
stos
rolb
mov
lock
adc
mov
in
arpl
lahf
cld
inc
pop
add
cmp
pop
sbb
pop
add
jecxz
shlb
insl
mov
and
ljmp
xor
jg
adc
fnstsw
mov
in
clc
push
jb
push
imul
shrb
pop
stos
incl
dec
xchg
or
jl
mov
sub
adc
dec
fnstsw
sbb
xlat
and
mov
mov
add
xor
or
js
mov
jo
mov
adc
mov
insb
lea
cld
cmp
dec
or
push
cmp
or
mov
xchg
jns
push
mov
sarb
inc
mov
jecxz
jo
and
negb
sbb
mov
or
hlt
aad
add
xchg
xor
dec
fwait
loop
jb
push
xor
cld
push
stos
add
adc
data16
mov
cli
jmp
push
jecxz
ret
dec
or
dec
jno
add
and
or
jo
cmpsl
inc
lock
call
xor
stos
xlat
or
bound
inc
mov
shr
add
dec
adc
sbb
loop
inc
sbb
mov
fldcw
or
cmp
incb
cli
scas
cmp
mov
inc
icebp
loopne
arpl
fsubp
mov
in
jae
out
fisubs
std
xor
xchg
inc
sub
pushl
lret
or
inc
mov
mov
jecxz
ret
dec
sbb
dec
ret
pop
add
in
outsl
jp
inc
inc
es
aam
xor
test
ja
dec
test
cld
int3
dec
pop
push
adc
or
xor
jle
xor
insl
loopne
inc
mov
movsl
das
loope
and
add
dec
nop
xor
dec
jnp
cmc
pop
cmp
pop
fimull
xchg
arpl
cmp
pop
js
xor
sbb
sbb
fdivrs
adc
mov
or
xchg
and
mov
ret
ljmp
mov
jmp
divb
mov
jecxz
sub
adc
stc
out
rcrl
sbb
or
mov
flds
insb
add
sub
out
pop
add
push
hlt
adc
mov
ljmp
rcl
mov
pop
fnstenv
mov
repz
lea
mov
call
mov
je
sarb
movups
jle
pop
sti
test
cmpsb
mov
fadds
lcall
sar
pop
movsb
pusha
mov
mov
lret
add
or
neg
add
gs
sbb
mov
mov
jbe
add
sti
push
icebp
or
jmp
ss
cmpsb
mov
inc
les
out
xchg
push
bound
ss
mov
arpl
mov
sub
mov
xor
xchg
add
dec
lret
inc
cld
sbb
mov
or
or
rol
pop
cli
pushl
cmp
jno
pop
cmp
flds
sahf
inc
and
sub
mov
mov
out
inc
adc
sub
repnz
xor
pushf
push
cmp
cmp
cs
lods
rorb
jb
fidivl
jbe
in
mov
pop
xchg
xadd
nop
add
sub
adc
push
adc
lea
data16
int3
and
loope
cltd
pushl
dec
push
data16
xlat
add
sar
jge
test
pop
dec
xlat
mov
adc
rorl
inc
pop
outsl
push
negb
setbe
test
jmp
lock
movsb
cmp
into
add
add
cmp
adc
imulb
fcompl
mov
stc
fistl
fiaddl
xor
ja
jb
or
adc
mov
or
add
data16
pop
sbb
sub
stc
jp
mov
and
dec
frstor
ljmp
orl
xor
data16
sub
sub
icebp
xchg
mov
das
lock
push
imul
adc
ret
adc
pop
or
xchg
mulb
push
jp
int3
subb
rcl
fcomps
mov
arpl
call
dec
rorb
dec
cmp
xchg
sbb
in
add
and
std
mov
cld
repz
or
add
add
cmpsl
and
and
mov
or
js
xchg
das
inc
xor
stos
pop
dec
mov
jmp
cmpsw
ret
clc
mov
insb
or
add
leave
or
sbbb
cs
dec
outsl
cld
adc
pop
mov
jmp
pop
call
push
sarl
testb
ret
mov
mov
pop
push
jno
rcrl
jmp
push
ret
mov
sub
aas
inc
push
ds
outsb
xor
mov
decb
repz
shrb
add
fucomip
loopne
dec
xchg
mov
rcll
adc
push
inc
int3
ficoms
test
cld
movsl
das
hlt
clc
int3
add
sbb
push
push
stos
xchg
inc
cwtl
fmuls
jb
jmp
iret
add
cmpsb
mov
jo
je
xchg
adcl
outsl
lock
mov
xor
pop
gs
add
xchg
sbb
mov
and
add
test
push
xchg
mov
fwait
decl
xchg
fnstcw
xor
mov
iret
dec
sbb
lea
insl
out
xchg
popa
pop
insl
je
push
mov
cmp
dec
adc
push
jb
xchg
pop
mov
sbb
das
lock
sbb
mov
popa
fadds
icebp
sbb
lods
xor
mov
adc
cmp
or
and
cli
incb
dec
dec
mov
inc
pushl
push
sub
leave
sbbb
mov
mov
aad
push
hlt
lods
jae
fstpt
pop
ljmp
fs
and
cltd
mov
fdivrp
leave
adc
push
hlt
sub
ljmp
mov
pusha
push
sbb
loop
sub
mov
add
shl
cmpsb
sub
test
push
pop
fstpt
lret
stos
mov
das
gs
jmp
and
aas
inc
fstpt
pop
jo
loop
adc
clc
add
or
cmc
cmp
push
call
adc
or
clc
scas
mov
adc
and
pop
xor
mov
pop
cs
adcl
pop
add
adc
fildl
js
test
adc
or
fildll
mov
aaa
repz
mov
cld
outsl
ljmp
add
out
lret
rorl
mov
das
lock
mov
sahf
cld
lea
or
mov
ret
cmpsb
call
loope
pop
femms
hlt
mov
fcmovnu
xchg
pop
lret
lea
push
mov
pop
pushf
adc
dec
cmp
mov
enter
add
iret
rol
imul
jae
pop
pop
lcall
push
sbb
out
dec
xor
fistpll
xor
mov
icebp
aaa
fwait
sbb
pop
mov
or
test
xchg
jmp
fmuls
mov
les
add
negb
xlat
scas
add
or
je
loop
xchg
xchg
sub
jecxz
add
inc
sub
inc
repz
in
mov
movsb
sub
xchg
movaps
xchg
test
sub
cld
cmp
icebp
popa
data16
lret
inc
loop
mov
ret
adc
andb
loop
je
sbb
and
inc
pop
xchg
or
jmp
xor
movsl
stc
rolb
mov
mov
in
inc
mov
mov
int3
push
and
insl
sbb
loope
outsl
aam
jle
adc
fildl
dec
dec
or
lods
ret
xor
sbb
mov
stos
jmp
jbe
add
test
scas
adc
std
add
fistps
sti
arpl
pop
outsb
xchg
mov
dec
mov
or
out
cld
stc
add
ja
das
cmc
in
movups
inc
push
and
mov
jbe
xchg
xchg
dec
cld
mov
mov
mov
addr16
sbb
pushf
das
loope
lds
movsl
cmp
add
jnp
popf
push
xchg
in
clc
inc
dec
cmp
loopne
idivl
movsl
mov
js
pop
loop
jne
das
push
sti
ret
xor
mov
inc
imul
test
mov
adc
mov
mov
rol
add
add
aaa
out
stos
popa
fcmovbe
roll
and
fs
or
jecxz
jg
aad
mov
fnstsw
or
icebp
cmc
mov
mov
scas
add
popa
jl
das
xchg
xor
ret
fwait
test
out
mov
mov
push
clc
out
out
pop
add
mov
lds
jne
mov
call
or
or
cmpl
dec
mov
ja,pt
insb
ficompl
out
shlb
pop
inc
das
movsb
fiaddl
mov
adc
scas
rorl
sbb
loopne
add
int
mov
cmpl
dec
ss
incl
test
inc
push
lds
rclb
and
sub
in
int
adc
mov
add
dec
mov
test
outsl
lock
bound
pop
mov
sub
mov
inc
inc
jp
jp
out
sbb
and
and
jp
add
mov
or
adc
and
leave
xor
int3
insb
sbb
adc
cmpsl
clc
ret
push
imulb
add
lods
xor
sbb
subl
pop
pop
pop
mov
in
or
subb
mov
sbb
inc
push
mov
and
pop
imul
mov
rcr
jl
insl
lods
xchg
sbb
adc
aad
mov
inc
pop
cmp
dec
je
adcb
cmpsb
adc
sbb
inc
out
fildll
or
lahf
dec
mov
test
sbb
jmp
push
sub
popf
lret
mov
adc
xchg
je
rolb
fcoml
pushl
test
mov
pop
test
xor
js
and
push
mov
pushf
ss
push
pop
sar
aaa
sar
pop
fisubs
insb
push
lods
jno
and
and
push
xchg
push
test
mov
mov
rcrl
fdivrs
ret
pop
inc
add
fwait
int3
test
mov
push
push
sub
push
je
fs
movb
dec
cli
loop
xor
inc
sbb
fbstp
lods
jns
cli
in
pop
xor
gs
lea
in
lcall
mov
jne
mov
arpl
stos
adc
push
ljmp
cld
sarl
lcall
jle
lods
and
jno
or
push
inc
mov
or
xor
mov
inc
int3
enter
fildl
mov
and
or
xchg
ljmp
jle
std
mov
mov
jecxz
add
mov
dec
call
into
pop
add
pushf
mov
clc
xchg
icebp
xor
pop
cmp
clc
jmp
loope
insb
xchg
inc
jae
inc
scas
cmp
fsub
icebp
ret
and
shl
ds
and
incl
xchg
aaa
xor
xchg
mov
sti
lock
inc
aam
pop
push
push
cmp
pop
addb
pop
mov
pop
inc
add
test
xor
adc
and
inc
sbb
stc
jno
add
jno
or
cmpb
inc
sbb
or
push
adc
push
ss
cwtl
or
std
lods
add
sub
test
fwait
ds
sbb
cmpsb
sub
repz
mov
bound
and
mov
and
stos
push
xchg
xlat
jno
mov
jno
les
ret
mov
testb
xchg
stos
inc
ret
incl
push
xor
lock
mov
add
incb
jg
adc
dec
lahf
imul
adc
scas
lods
or
xchg
push
sbb
bound
arpl
dec
insl
call
loope
add
xchg
and
enter
and
ret
jecxz
inc
push
jns
sahf
push
out
jle
jnp
pushf
jo
push
dec
adc
in
pop
das
or
or
add
sbb
pop
push
in
decl
in
daa
and
and
lcall
add
mov
or
jg
and
sub
push
addr16
mov
insl
mov
sbb
ja
push
addr16
add
clc
sub
sbb
int3
sub
mov
dec
test
xchg
bound
jp
sbb
sub
clc
pop
and
xor
sbb
pop
rolb
inc
icebp
pop
mov
je
sbb
adc
add
insb
aam
xchg
test
or
push
pop
adc
daa
sbb
mov
js
cmp
shlb
and
out
adc
dec
push
in
stc
cli
addr16
inc
clc
ret
subl
adc
cmp
insl
xchg
imul
push
mov
sbb
enter
pop
movsb
dec
xchg
clc
ljmp
int
and
je
push
clc
fsubrs
insl
lock
jg
cmp
loop
gs
fwait
xchg
pop
pop
call
mov
subb
movsl
xor
call
andb
xchg
and
aaa
shr
shl
mov
es
daa
idivb
or
xchg
imul
sbb
mov
sbb
fsubl
mov
or
jmp
scas
mov
rclb
mov
mov
pop
ljmp
sub
leave
mov
jbe
pop
mov
jno
add
or
sbb
dec
lods
outsb
std
fisttpl
mov
test
loope
or
outsb
jle
das
cld
repz
xchg
xor
jbe
or
aam
decb
lea
add
pop
daa
outsl
add
call
lock
and
lea
rcr
jg
xchg
mov
mov
lock
sbb
aas
insb
xchg
mov
dec
push
sub
sub
lcall
repnz
add
lret
mov
adc
loopne
pop
lods
and
aas
xlat
inc
inc
rcrb
fnstsw
hlt
ljmp
xchg
orb
pop
ss
fisttpl
stos
ss
mov
jle
dec
add
sub
loopne
adc
inc
out
iret
fnsave
jno
sub
push
xlat
jecxz
add
jo
scas
cmpsl
cli
test
mov
mov
popa
pop
fistpll
xlat
and
sub
adc
sub
mov
ret
pop
inc
lock
outsl
or
add
aad
popf
jge
scas
daa
mov
js
mov
std
dec
inc
repz
movsl
lea
scas
cmp
mov
shr
fbstp
pushf
dec
push
pop
jecxz
out
jge
add
scas
call
cmc
in
xchg
mov
fs
xor
dec
ja
mov
jnp
sti
sbb
jg
out
arpl
xor
push
repnz
ja
fdivr
filds
jae
pop
adc
inc
aad
inc
inc
roll
sbb
pop
or
xor
jo
push
push
xor
mov
mov
or
scas
fcoms
in
or
mov
rolb
cli
out
mov
xor
sar
loopne
lahf
popf
inc
lcall
jns
sarb
test
das
test
pop
mov
cltd
pusha
jbe
or
or
push
push
daa
adc
cli
mov
xchg
dec
or
adc
les
push
push
mov
xchg
or
pop
pusha
daa
dec
mov
rcll
pop
lock
cltd
mov
add
adc
dec
cmp
push
mov
cld
rolb
sub
std
in
ds
and
dec
daa
scas
sbb
jg
call
dec
inc
es
sbb
push
pop
dec
scas
jecxz
std
fistpll
lret
pop
out
inc
push
push
sbb
inc
mov
adc
adcb
inc
sbbl
fsubl
jl
jo
jle
xchg
ljmp
shrl
and
cmp
inc
ds
add
jl
loope
std
or
outsb
enter
iret
mov
dec
or
mov
mov
mov
js
add
pushf
mov
mov
add
and
mov
jno
inc
xchg
add
pop
je
mov
inc
mov
inc
sti
jne
sbb
push
sbb
dec
cld
mov
adc
nop
sarb
addl
cltd
mov
aaa
cmp
push
lret
ret
aaa
ja
jecxz
and
mov
jns
sahf
fdivr
ret
fcoml
cmp
push
shrl
push
call
icebp
inc
sbb
mov
fbstp
dec
jg
jns
loop
outsl
scas
jmp
sti
jl
clc
sbb
add
sub
sbb
inc
or
push
and
lods
xchg
fs
or
pushf
push
jl
or
cmp
pusha
jnp
dec
notb
das
jne
insl
test
lea
aam
fs
inc
push
pop
xlat
or
pop
xchg
cmpsl
test
aam
fcomip
decl
push
andb
jo
shlb
lret
mov
data16
adc
test
call
repz
mov
xchg
ud0
xchg
cmp
cs
jp
in
addb
inc
hlt
lret
cmpsl
sub
add
cli
ds
sarb
dec
xor
sbb
mov
shrl
pop
insb
fildll
add
cmp
lock
popl
sbb
xchg
out
fimuls
aaa
pop
cli
pop
and
jle
sbb
stos
xor
subb
enter
fists
lods
push
or
lds
push
inc
jo
mov
push
scas
inc
adc
jno
mov
jbe
aad
icebp
jg
push
adc
xchg
decb
mov
rorl
cmp
inc
imul
js
jno
pop
jg
ficoml
in
clc
and
loopne
mov
xor
sub
in
mov
mov
in
adc
mov
pop
js
clc
js
sahf
lret
fcmove
scas
lahf
jbe
test
jge
adc
xchg
clc
and
add
out
ds
pop
fdivr
inc
test
movsl
std
nop
mov
dec
and
aaa
mov
cwtl
and
outsl
out
icebp
jg
mov
call
pop
aad
jno
shlb
xor
sbb
std
sub
push
xchg
fcmovnb
faddl
mov
mov
xor
sahf
out
sub
mov
adc
add
mov
ljmp
lcall
call
fdivl
call
insl
inc
add
pop
clc
push
call
je
scas
xchg
pop
jmp
pop
and
int
cmpl
jmp
xor
add
in
sbb
stos
push
jmp
addb
add
cmp
test
fstpt
jb
dec
add
roll
and
xor
or
bound
cwtl
add
lods
or
jnp
xchg
pop
sbb
mov
push
mov
jp
lea
mov
shrl
mov
dec
lretw
es
call
mov
cmp
loop
cld
jnp
dec
jns
xlat
mov
repnz
rcl
pop
test
adc
loop
imul
sahf
shll
mov
pop
or
and
aam
and
push
jg
les
xchg
jne
rolb
lods
lock
mov
and
or
cmp
lahf
loop
sbb
jbe
test
lea
mov
adc
aas
push
mov
and
inc
dec
jecxz
mov
std
fs
and
add
std
mov
inc
jae
cmp
sub
mov
outsl
loop
cmpl
inc
and
insl
mov
or
adc
test
and
dec
cmp
rorb
inc
jne
adc
jmp
adc
xchg
or
dec
lds
pop
mov
test
mov
cmpsb
data16
adc
push
sbb
fbld
adc
jle
dec
add
inc
lret
sti
dec
mov
or
cmp
inc
xchg
dec
out
xchg
fmull
hlt
test
mov
sub
mov
add
ret
add
lcall
ljmp
daa
mov
cld
pop
test
push
or
pop
sub
add
aas
jbe
cmp
aad
pop
ret
xchg
lea
pusha
jmp
outsb
inc
fmuls
and
mov
or
scas
push
daa
aam
mov
dec
fstpt
jmp
movsl
cs
add
adc
notl
mov
imul
add
ljmp
jge
cld
adc
push
nop
adc
or
fld
dec
inc
push
icebp
cld
xchg
inc
adc
rclb
cmp
push
and
lret
subl
test
add
adc
in
or
or
sbb
out
aam
icebp
mov
rolb
mov
add
xor
lea
adc
add
fwait
inc
jge
addb
js
fsubrl
cld
testb
adc
mov
inc
fwait
ljmp
push
out
loopne
push
rcr
or
mov
inc
and
adc
lret
add
and
add
add
incb
loop
adc
pusha
lods
push
jmp
mov
and
fwait
push
and
add
sbb
xchg
and
aas
add
fnstcw
adc
cs
rorb
mov
dec
xor
pop
shlb
pop
xor
and
add
xor
mov
rolb
and
mov
cmp
mov
inc
lods
int
adc
sbb
aam
stc
loop
add
jge
xor
inc
push
push
adc
add
lods
in
cmp
sti
push
jno
mov
xor
sbb
pop
rorb
ss
shll
xchg
sbbb
push
jo
or
dec
sbb
mov
pop
mov
push
push
aam
cmp
inc
or
mov
pop
stos
rcl
add
inc
aam
fcmovnb
in
or
mov
daa
mov
adc
roll
das
sbb
add
addr16
shll
xchg
dec
cld
lds
test
or
add
adc
cwtl
je
sub
mov
nop
outsl
dec
sub
push
lcall
cmp
adc
push
aam
or
pusha
mov
std
filds
imul
add
fwait
inc
roll
push
inc
jo
fwait
in
ds
mov
je
push
das
push
rolb
nop
cltd
scas
adc
cmpb
xor
or
rclb
cmp
adc
jb
hlt
sub
ret
addb
pushf
fbstp
sti
lods
sbb
add
jne
or
dec
andb
jge
inc
fistps
cmp
sbb
mov
rolb
dec
lods
lret
int
jo
inc
xor
hlt
hlt
rcrl
pushf
imul
in
cmc
pop
inc
or
jge
adc
lods
cmp
xchg
adc
scas
pop
dec
enter
or
mov
mov
das
add
sbb
xchg
lock
in
cld
je
jae
scas
popf
xor
fiaddl
mov
jb
add
lret
add
pop
xor
lds
adc
mov
xor
std
sbb
push
cld
and
add
fidivs
bound
add
test
push
adc
pop
shll
mov
mov
int
cmp
xchg
lock
rorb
pusha
sbbl
lret
lock
inc
or
outsl
lea
leave
sbb
inc
sub
jbe
bound
rclb
add
xlat
daa
cmpsb
pop
push
lods
out
or
insl
andl
cs
pop
insl
ret
ljmp
sub
mov
jo
xor
cli
ljmp
adc
and
xchg
xchg
lahf
or
mov
pop
mov
jo
push
push
cld
ljmp
loop
cmp
test
xor
shlb
sbb
shrl
in
dec
sbb
mov
dec
push
inc
adc
sbb
int
hlt
inc
les
test
addl
aad
xor
dec
lods
inc
adc
iret
xchg
jmp
push
repnz
or
mov
in
and
es
push
dec
shr
xor
cmp
push
mov
mov
adc
out
clc
xchg
mov
sbb
pop
rcrb
push
cmp
int3
dec
pop
test
fidivs
js
push
enter
or
adcb
sbb
xchg
cmpsb
imul
or
sub
cwtl
andl
fldcw
mov
adcl
or
push
cmp
adc
jb
jno
lods
orb
sub
push
jae
js
add
fdivrs
ret
cmpsb
stos
fmuls
out
sbb
mov
xorl
arpl
inc
cld
incl
cld
mov
and
cmp
andb
pop
xchg
xor
mov
xchg
inc
adc
jo
mov
nop
mov
xchg
mov
and
mov
outsl
hlt
ss
ja
xlat
dec
inc
mov
lea
fisubrl
xchg
and
dec
sub
cmc
mov
dec
inc
mov
gs
pop
cmp
gs
aad
fwait
sbb
cmp
push
and
pop
loope
cmp
icebp
or
dec
out
mov
sar
add
inc
in
inc
fldcw
xor
mov
pop
dec
pop
xor
adc
dec
xor
repz
xor
mov
jle
or
sbb
cmc
sub
add
pop
hlt
jle
movsb
ja
or
jg
repz
push
cmc
shr
xor
pop
mov
fdivs
xchg
shrb
ljmp
and
xchg
adc
mov
push
rorl
pop
or
sub
pop
outsl
add
mov
mov
add
inc
aad
aam
insb
out
out
xor
mov
shrb
xchg
lret
pop
push
sub
mov
movsl
mov
addr16
xor
pop
ljmp
gs
lcall
cmp
int
rorb
cmp
sarb
push
mov
arpl
in
mov
or
imul
push
js
test
mov
mov
and
or
sbbl
jmp
mov
xchg
inc
pop
sub
pop
mov
mov
or
sarl
fcomps
test
lret
jle
xor
outsb
inc
clc
mov
or
adc
jmp
fwait
jle
movsb
enter
mov
jg
in
adc
add
mov
fimull
adc
sbb
and
inc
add
mov
jbe
jge
adc
add
cwtl
xor
xor
cmp
addl
fwait
rorl
fcompl
mov
cld
bswap
add
or
fisubrl
jg
xchg
adc
leave
xchg
in
daa
dec
adc
push
clc
cmp
hlt
xchg
add
xchg
cli
and
mov
adc
adc
xchg
inc
call
jecxz
or
pusha
rcrb
mov
aad
inc
sbb
xor
arpl
inc
push
cwtl
sub
scas
mov
popa
mov
andb
cwtl
add
enter
add
mov
sub
syscall
mov
push
daa
ror
les
pop
inc
sbb
dec
dec
adc
data16
leave
mov
dec
call
jg
xchg
cmp
mov
pop
push
movsb
pushf
xor
cmp
adc
inc
cmp
push
push
add
push
xlat
and
jmp
adc
fcomps
test
int3
call
popa
add
xor
in
mov
aam
push
cmp
xchg
movsl
leave
fdivl
lds
xchg
adc
sahf
xchg
lock
fwait
jbe
jne
mov
insl
mov
mov
stos
imul
xor
push
mov
adc
ss
lea
push
mov
inc
xchg
fmull
mov
mov
movsl
mov
fiaddl
icebp
insb
mov
pushf
ljmp
scas
mov
push
xchg
pop
xor
xchg
pop
fdivr
xor
and
daa
pop
cmc
or
adc
jle,pt
lea
push
cmp
sbbl
dec
dec
adc
jg
int3
sbb
lcall
sub
fbld
inc
adc
ja
xchg
push
jo
jl
outsl
or
sub
repz
jg
or
ret
or
or
int3
xchg
push
insb
mov
daa
cli
add
ss
aaa
adc
pushl
and
push
add
idivl
dec
mov
jl
insb
jnp
jmp
and
in
cli
fsubrs
mov
incl
popa
js
scas
iret
pop
jns
sahf
push
pop
cmp
xchg
test
sub
ja
dec
xchg
pop
cmp
adc
add
xchg
rcr
ja
int
push
cld
fidivs
jmp
mov
xchg
pop
gs
mov
mov
test
aam
std
xchg
adc
stos
jg
jb
add
mov
push
pop
repz
cmc
out
scas
mov
subl
imul
jp
aam
inc
inc
je
jbe
subb
out
negb
and
orb
das
shr
fadd
lret
pop
addr16
add
fists
lods
lahf
adc
pop
arpl
jne
daa
in
mov
dec
aas
lock
leave
or
mov
mov
mov
pop
push
outsl
or
inc
adc
sbb
add
adc
fsts
add
mov
sbb
divl
mov
adc
das
dec
cmp
icebp
adc
lock
jg
outsl
jp
and
xchg
sbb
xorl
cmp
decl
icebp
and
jge
dec
mov
cmpl
imul
and
out
data16
add
fsubl
push
cltd
cld
pop
fiadds
mov
jecxz
jecxz
pop
adc
add
ja
iret
lea
push
sahf
cmp
push
fwait
sbb
fistl
cmc
dec
sarl
xchg
and
addr16
filds
ss
roll
int3
mov
dec
push
inc
in
and
pop
sbb
add
popa
clc
jmp
lret
rcll
sbb
mov
push
idivb
inc
push
mov
inc
pop
stos
jg
mov
push
mov
cli
add
loop
jl
icebp
cs
pop
and
or
and
out
adc
fwait
jecxz
adc
jae
outsb
push
je
and
jp
and
incl
mov
fucomi
mov
js
and
imul
aad
push
leavew
add
inc
outsl
jg
or
andl
sbb
js
in
lcall
in
shll
pusha
ja
nop
xor
test
add
js
mov
fisubl
sub
and
adc
pop
js
jne
lahf
mov
mov
add
repnz
xor
ud2
movsl
loop
add
mov
sbb
fldt
rclb
into
stos
mov
push
jl
jge
cs
mov
icebp
imul
sbbb
lds
pusha
imulb
mov
das
popf
sbb
aam
add
adc
pop
out
inc
sahf
dec
sar
xchg
adc
push
and
jo
scas
jmp
cmpb
bound
repnz
lods
jg
mov
add
sbb
stc
out
std
add
in
mov
in
mov
shrb
scas
and
shlb
cwtl
mov
test
out
pop
mov
stos
pop
cltd
ja
mov
subb
adc
fdivr
add
fiadds
push
or
or
push
stc
mov
js
loop
jle
ficompl
out
or
cli
inc
xorl
clc
ljmp
mov
and
and
cmp
std
mov
ret
enter
scas
sbb
mov
and
mov
or
xchg
outsb
hlt
in
mov
inc
cmpsl
push
adc
jae
xchg
ds
push
dec
mov
into
hlt
adc
cmp
pop
ljmp
fcomip
sbb
cmp
stos
and
push
sub
roll
shrb
xor
xor
lock
bound
iret
repnz
fsubrs
or
test
je
fwait
xor
jg
enter
sub
sbb
sbb
push
into
ljmp
std
pushf
sbb
repnz
lahf
fldl
js
fstp
call
push
clc
ret
sub
jle
pop
fnstsw
out
mov
jg
sub
or
dec
push
call
or
shrl
outsl
mov
cwtl
adc
jecxz
cmpsl
xchg
ljmp
lock
movsb
and
insl
or
je
mov
negb
ror
jmp
sub
aas
sbb
xor
addr16
enter
jg
iret
dec
shll
shrl
jno
xchg
push
orb
movsl
xchg
lock
call
outsl
add
gs
fistpll
test
xor
std
xchg
or
inc
nop
cmp
aad
cmpsb
out
or
mov
pop
je
dec
insl
ja
dec
adc
sbb
lcall
pop
jno
inc
mov
repz
aaa
mov
in
cmc
pop
lock
mov
dec
adc
and
aaa
push
pop
mov
inc
inc
mov
push
es
stos
pop
pop
cmp
imul
lock
push
pop
jo
add
cmp
mov
xchg
dec
dec
inc
in
xor
mov
adc
ficoml
fcoml
add
inc
or
add
mov
push
add
jno
add
push
or
test
pop
jecxz
sbb
gs
icebp
iret
enter
or
mov
and
xor
sub
enter
cmp
rcr
push
loopne
arpl
inc
sbb
push
jg
mov
dec
outsl
inc
mov
lods
xchg
cld
test
push
push
divb
lcall
dec
bound
inc
cld
or
inc
add
adc
das
fst
and
cmpsb
test
xor
push
push
nop
push
mov
jl
call
loope
jge
mov
or
jmp
das
mov
push
fs
or
xorb
inc
ret
fisttps
jle
adc
add
loope
sub
negb
jb
adc
cmp
xor
ja
ret
xor
inc
sub
das
lock
dec
mov
gs
mov
mov
or
jge
xlat
pushf
sub
stos
inc
xchg
cld
jg
and
push
adc
add
xchg
scas
rcrb
das
fisubl
add
sub
cmpsl
add
fbld
test
xchg
pop
fsubrs
dec
into
dec
lods
jle
mov
fidivs
push
pop
mov
mov
sbb
addl
cmc
mov
mov
and
xchg
andb
and
insl
push
lock
push
outsl
pop
je
loope
push
sbb
mov
mov
idiv
push
mov
dec
pop
cmp
iret
das
jo
adc
push
cmpsl
mov
mov
mov
or
push
test
xor
call
lock
dec
out
jl
hlt
or
xor
lret
frndint
jmp
mov
repnz
lret
sbb
jo
push
imul
mov
cmpsb
in
mov
outsl
mov
popf
add
adc
sti
inc
mov
fnstsw
pop
jne
mov
inc
test
cwtl
test
mov
int
stos
push
xchg
add
add
mov
jae
jle
jmp
out
mov
ljmp
enter
pop
adc
lock
lahf
je
push
cmp
adc
adc
imul
dec
dec
ja
jns
sbb
lock
cmp
inc
mov
lcall
loop
pop
cltd
out
fcmovbe
test
hlt
dec
imul
dec
jo
aas
roll
mov
or
jecxz
sbb
cmpsl
sub
xor
cld
sub
ja
dec
sbb
push
int
mov
sar
dec
pop
sub
push
inc
inc
jge
push
adc
adc
cmp
dec
lea
cld
cli
sub
ss
adc
je
and
cld
sbb
mov
pop
es
cmp
or
test
fildl
sbb
ja
push
sub
cltd
lods
cmp
cltd
loop
int
mov
iret
add
ja
mov
ja
pop
jnp
add
xchg
lods
pusha
shlb
test
jle
sub
cs
add
ret
inc
inc
pop
jo
test
shll
push
mov
pop
int3
fldenv
mov
add
ss
adc
arpl
xrelease
and
je
ja
xor
adc
cld
xor
xchg
jne
sbb
inc
add
scas
push
sti
xor
mov
fisttps
and
mov
add
mov
pop
sub
test
stos
xor
insl
xor
into
cld
inc
mov
out
cmp
pop
jmp
cli
and
and
in
mov
xor
lock
inc
jmp
inc
xchg
daa
mov
jo
adc
aaa
inc
aaa
hlt
jecxz
imul
shrb
fldl
mov
sub
test
inc
in
add
xor
dec
xor
xchg
cmpsl
lar
push
add
xor
lods
scas
mov
roll
sti
adc
fcomps
inc
cmc
data16
js
sbb
dec
or
fidivs
cmp
xor
adc
nop
inc
mov
and
enter
xor
jae
cwtl
dec
sub
mov
cmp
sarl
adc
xor
push
xor
xor
pusha
adc
int
add
dec
nop
cmpb
cmp
ds
in
fiadds
push
sub
in
mov
push
pop
mov
inc
xor
dec
xor
notl
test
mov
push
push
pop
bound
xchg
pop
mov
mov
push
adc
adc
lahf
add
aad
and
jge
cmp
sub
add
xchg
loop
rorb
dec
jne
sbb
jp
rorb
push
cmp
sahf
je
mov
sub
aad
cmp
ret
outsb
jle
push
cmp
xor
pushf
jp
int
popl
inc
inc
test
das
cmp
mov
sub
xor
in
lahf
shll
cmp
ljmp
xchg
cmp
lods
clc
inc
sub
fisttps
push
in
inc
icebp
into
cld
outsl
andl
and
pop
jg
xchg
push
dec
rclb
stc
or
rolb
push
lret
inc
xchg
jnp
jg
mov
ljmp
lods
lret
and
call
js
cs
pslld
je
jmp
mov
cmc
mov
dec
cmp
mov
inc
in
fists
je
adcb
shll
lock
in
rclb
cmp
sbb
mov
shlb
fidivrs
inc
repz
jbe
jno
loopne
mov
cmp
les
sbb
fildll
icebp
pop
pushf
or
lcall
sbb
scas
jge
mov
jg
cmpsb
sbbb
pop
inc
pop
lcall
imul
add
xchg
dec
loopne
cli
mov
mov
mov
loope
jge
push
orb
out
mov
ja
addr16
xchg
shrb
ja
lret
push
adc
add
xchg
add
les
das
cmc
mov
ror
imul
or
lret
ret
ret
pusha
mov
and
mov
ljmp
or
insb
decl
clc
jecxz
cs
cmp
test
imul
hlt
mov
dec
stc
into
cld
jbe
ret
push
stos
nop
das
push
lods
cmpsl
lods
jecxz
leave
add
push
push
ror
jge
fwait
icebp
sbb
int3
popf
btc
xlat
les
loop
mov
adc
iret
add
pop
mov
aas
sub
icebp
nop
repz
sbb
in
test
mov
xchg
mov
imul
stos
cmp
mov
hlt
push
aam
popa
jle
mov
frstor
cmp
cwtl
jge
jge
adc
cmp
jnp
mov
pop
pop
ffreep
xor
inc
bound
bound
ss
lret
mov
nop
xchg
xchg
cmp
xchg
mov
arpl
mov
jg
ficoml
xchg
add
adc
push
jb
or
stos
shr
add
mov
cmpsl
pop
jbe
cli
loopne
in
cmpsl
xor
aaa
insl
sub
or
sbb
push
testl
lock
and
sbb
push
mov
pop
out
out
cmp
pop
sub
mov
sbb
add
push
mov
or
ret
jns
daa
or
jg
lea
bound
mov
shll
pop
fdivs
popf
adc
int3
adc
test
or
jo
cmp
lods
std
filds
pop
mov
push
inc
cmp
cmp
loop
sbb
dec
push
mov
insb
clc
fsubr
sbb
lret
pop
ss
xchg
popa
mov
or
jle
push
mov
xchg
sbb
js
movb
add
sahf
pop
imul
pop
or
cmpsl
inc
call
movsl
push
jge
xchg
mov
xchg
call
or
jl
inc
inc
mov
lds
inc
lret
mov
add
rclb
adc
adc
filds
insl
adc
loop
rcll
insl
negl
outsl
test
push
out
daa
mov
cld
data16
stos
jg
bound
mov
push
inc
sub
add
mov
xor
cmp
fsubs
pop
ret
and
adc
jp
adc
in
in
pop
push
add
int3
js
jecxz
insl
stos
and
fwait
scas
adc
xlat
xchg
fadds
comiss
or
faddl
cmc
or
pop
std
sbb
sbb
in
mov
push
mov
ljmp
insl
out
std
cmp
mov
int3
dec
stc
outsl
push
mov
das
nop
in
mov
cmp
adc
les
xchg
add
hlt
dec
repz
fwait
push
cmp
pop
rorl
int3
mov
inc
xchg
cld
cmpsb
lods
out
mul
jb
test
mov
das
pop
add
push
or
inc
jl
and
inc
or
add
mov
inc
daa
cli
and
fldt
and
sbb
clc
test
pop
negl
movsb
in
jg
lea
mov
test
xor
mov
sub
hlt
or
and
enter
bound
push
outsb
lahf
pusha
push
fists
adc
sbb
adc
mov
push
pop
stos
clc
push
std
scas
jnp
xchg
sub
lods
fimuls
pushf
sti
mov
sar
jg
out
aam
push
and
loopne
dec
mov
jg
popa
cmp
cltd
sbb
add
cwtl
xlat
xchg
inc
aaa
mov
fiadds
int
inc
rclb
inc
adc
inc
push
mov
add
wrmsr
or
fildll
lock
rolb
addr16
arpl
test
and
jo
int3
inc
pop
cmp
call
dec
push
imul
xchg
and
push
dec
outsb
lds
push
or
dec
pop
pop
fcmovbe
pop
arpl
nop
jo
jg
adc
adc
call
mov
add
mov
jne
lock
push
dec
and
aaa
jp
jg
mov
shr
popf
in
jge
inc
mov
ljmp
les
pop
clc
mov
mov
sbb
sbb
mov
inc
jl
fidivrl
pop
insl
mov
or
ljmp
mov
ret
add
rorb
jbe
mov
pop
jo
js
idivb
test
mov
push
in
mov
das
cmc
mov
xorb
push
xchg
mov
subl
mov
cmp
sbb
push
out
xchg
test
push
or
adc
fldenv
and
sahf
inc
and
inc
pushf
movsb
or
stos
push
dec
add
aad
or
jb
sub
sub
sbb
test
fcomps
push
dec
out
dec
sbb
or
mov
mov
inc
xchg
xor
scas
mov
cmp
cmp
mov
ja
pusha
mov
push
and
sbb
mov
mov
pusha
scas
jge
ss
loopne
addl
inc
mov
jmp
shrb
clc
inc
sbb
jnp
sub
sub
sub
gs
rorl
mov
and
push
arpl
dec
adc
mov
popa
aad
mov
adc
into
neg
pop
aam
es
and
xor
andb
enter
loope
push
mov
sbb
xchg
add
push
mov
cmpb
mov
loope
cmpl
mov
lods
add
mov
cmp
nop
inc
xor
adc
sub
push
dec
xor
loopne
ss
mov
in
push
push
jl
jae
xchg
pop
stc
sti
xchg
push
add
add
inc
or
inc
fsts
dec
pop
les
enter
loopne
mov
stos
jne
sti
xlat
orb
fldenv
push
jge
mov
loopne
fcmovne
or
push
dec
movntq
out
add
incl
lea
push
aam
mov
add
dec
pop
jl
pushf
adc
ljmp
icebp
or
xor
xchg
test
arpl
pop
fbstp
mov
into
add
dec
cmp
jbe
cmp
push
loopne
or
js
and
out
sar
ror
fdivp
js
add
scas
bound
add
jno,pn
and
es
call
xor
test
sbb
bound
cmc
divl
xor
mov
inc
sbb
xchg
sbb
outsl
mov
call
stc
sbbb
xchg
inc
mov
insl
rcl
add
mov
in
mov
and
mov
sbb
mov
das
lock
fidivs
fcompp
insb
lock
hlt
jg
movsl
push
pushf
js
pop
push
push
andl
push
pop
rcl
test
jp
in
incl
fidivrl
test
mov
sub
push
or
pushl
jno
je
fildl
int3
mov
aad
mov
icebp
fwait
clc
out
mov
or
pop
inc
jge
jne
hlt
fildll
and
mov
incl
les
xor
out
and
ret
sbb
test
test
pop
mov
cmp
lods
cmc
xchg
call
mov
xchg
xchg
add
cmp
lea
mov
dec
lock
insb
lods
jo
jg
ds
fidivl
outsb
mov
jmp
mov
and
bound
pusha
sbb
mov
dec
xor
push
xchg
cmp
push
loope
push
adc
pushf
pop
add
push
cli
das
jno
jbe
or
cs
aam
mov
and
pop
push
mov
jns
notl
out
ljmp
mov
sub
or
outsb
lods
insb
dec
cmpl
inc
mov
dec
push
lcall
incl
ds
xor
lods
pusha
test
mov
mov
cld
not
sub
decl
jne
adc
icebp
outsl
jne
ss
mov
jg
add
loop
or
sbb
dec
daa
bound
int
mov
sbb
pop
sbb
xchg
out
and
add
adc
sti
inc
mov
aad
inc
and
sbb
dec
and
inc
neg
inc
int3
shrb
sbbb
jmp
adc
dec
decl
outsl
xor
sub
icebp
stos
pushf
xchg
arpl
inc
mov
std
cmpsb
mov
sub
int
scas
inc
cli
push
push
lock
add
xor
push
lret
adc
sbb
jo
or
cwtl
pop
mov
add
dec
imul
adc
push
xchg
add
jmp
nop
call
and
pop
push
adc
jne
iret
lock
sub
add
add
adc
stos
mov
dec
or
lock
and
rcrb
add
mov
int3
sbb
addl
push
inc
test
or
loopne
mov
pop
cltd
ljmp
ret
jle
inc
mov
pminsw
ret
and
inc
bound
fisubrl
adc
dec
pop
add
adc
add
adc
and
mov
rorl
dec
mov
lahf
or
adc
and
and
lcall
sbb
ret
js
or
ss
mov
call
jno
jecxz
dec
mov
shll
inc
stos
bound
push
dec
sbb
aam
add
pop
mov
pop
xor
jl
andb
daa
sbb
mov
in
sub
stos
cmp
out
and
in
loopne
scas
pop
mov
inc
insl
cltd
dec
sub
roll
or
in
add
in
into
rorl
jae
stc
inc
pusha
mov
mov
mov
shll
jne
outsl
repz
xor
or
push
bound
jmp
jbe
aad
or
sub
incl
pop
sub
stc
pop
hlt
adc
xchg
sub
stc
or
lcall
sub
xorl
je
dec
sbb
inc
mov
add
add
repz
sub
lds
fstpl
call
pop
push
jbe
mov
fsubl
imul
and
fcmovnu
cmp
cmp
and
jb
ds
fsubrl
pop
mov
push
call
adc
cmc
notb
addr16
icebp
and
ret
mov
add
inc
xor
add
loopne
sarl
add
imul
adc
outsl
dec
scas
shll
jne
bound
jg
lret
and
inc
testb
stos
fidivl
mov
dec
dec
arpl
xchg
add
std
jno
and
bnd
ret
add
pushf
addb
mov
mov
aam
insb
outsb
sub
into
in
mov
mul
inc
lahf
daa
inc
int3
cmp
add
dec
or
das
push
pop
sbb
out
and
add
in
add
notb
out
test
jl
enter
xor
mov
inc
es
test
aas
sbb
xchg
jecxz
les
sub
imul
add
das
lock
cmp
pop
mov
and
sub
xlat
loopne
jno
sar
add
jp
ss
in
sub
sti
rolb
js
outsl
or
negb
or
add
cmc
pop
fucom
mov
xlat
inc
loope
cmpsl
sahf
mov
dec
insl
pop
std
jns
jp
insb
lcall
into
ret
xor
mov
or
pop
subb
mov
xor
xor
loop
lock
call
aad
incl
addr16
push
orb
add
rcrb
xor
rcll
fldcw
sbb
int
shlb
push
sbb
iret
bound
popl
dec
ficoms
cmp
ljmp
and
mov
outsl
cmp
cmc
and
daa
pop
call
out
test
cmp
add
add
je
push
adc
jb
add
mov
popf
sbb
jbe
or
movsl
in
and
inc
sub
inc
mov
mov
xchg
adc
push
mov
mov
enter
and
nop
jne
add
mov
out
out
jnp
mov
push
xor
ja
push
adc
or
dec
ljmp
jg
sbb
call
fwait
ljmp
iret
xor
lds
mov
pop
mov
data16
lock
popf
scas
imul
push
or
xchg
jecxz
and
incl
call
add
mov
outsl
adc
jp
and
call
orl
mov
bound
sbb
fs
inc
cld
inc
mov
mov
out
add
hlt
xchg
sbb
fmuls
add
add
dec
in
ljmp
bound
inc
movsl
fsts
jb
pusha
mov
fs
ret
cwtl
je
insl
push
and
sbb
push
shll
loop
cmpsl
inc
add
push
pop
mov
add
cmp
mov
mov
jne
insl
leave
inc
and
add
cmpsb
aaa
cli
mov
lea
cmp
imul
divb
push
cmp
xchg
jae
mov
sub
and
sbb
or
cmpb
push
dec
es
outsb
ret
xor
inc
add
inc
aaa
mov
scas
push
sub
or
call
dec
add
outsl
aam
iret
xchg
inc
or
adc
xlat
sub
rclb
lahf
rol
cmp
in
or
es
std
cmp
ljmp
dec
push
add
popl
out
dec
shll
jle
clc
adc
punpckldq
inc
fdivrl
leave
push
push
or
xor
loope
xchg
and
nop
and
lret
stc
adc
add
pop
leave
cltd
nop
add
sar
ficompl
fisttps
rorl
jns
sarl
sbb
mov
daa
push
gs
orb
test
or
dec
fwait
call
xchg
ljmp
dec
sub
mov
iret
inc
ss
push
sarl
test
xchg
mov
in
jle
clc
xchg
add
pop
dec
test
mov
std
scas
xor
push
fisubl
mov
adc
mov
sbb
mov
scas
outsl
mov
sbb
push
or
into
inc
dec
testb
and
and
lock
jb
add
adc
add
lock
push
addl
pushf
mov
pop
int3
pop
cmp
dec
pop
shlb
outsb
cmc
aad
loope
int3
sbb
ljmp
test
mov
adc
jp
popa
pop
inc
das
sub
add
pushf
dec
inc
scas
outsb
repnz
movsb
jnp
add
jle
xor
pushf
pop
jp
sbb
xchg
dec
and
aaa
adc
adc
mov
add
inc
inc
idivl
and
icebp
lea
add
pop
mov
dec
lds
push
push
push
or
add
and
loopne
push
int3
sbb
pop
or
loope
xchg
rcrb
mov
or
mov
push
inc
adcl
flds
mov
cli
xchg
mov
in
out
push
lea
fcoms
ret
scas
and
lock
outsb
shll
sbb
pop
xlat
jne
dec
decl
push
or
push
ret
lcall
add
adc
mov
pop
sarl
mov
loop
sub
push
cmp
fs
add
or
lods
sub
enter
dec
mov
pop
jge
imul
das
lret
mov
in
movsl
xlat
enter
cs
xorl
cmp
cwtl
dec
and
push
pushf
or
movsl
lock
out
inc
mov
lods
push
dec
cmpsb
pop
and
or
sbb
dec
dec
cmpsb
adcb
cmp
and
fstps
push
int
pop
stos
es
xchg
sub
sub
fcmovnbe
sbb
ret
nop
xor
pop
roll
cmp
scas
clc
pop
insl
lret
iret
mov
adc
mov
outsb
nop
movsl
xor
mov
inc
lcall
dec
mov
cld
xchg
loope
dec
pop
mov
xor
and
ds
jae
out
sti
add
inc
mov
push
and
sahf
pop
cli
fsub
aaa
hlt
dec
pop
sub
sub
mov
nop
inc
mov
arpl
scas
cltd
jle
repnz
fs
clc
dec
mov
cmp
clc
aas
je
data16
jno
inc
cli
rclb
aaa
fidivrs
dec
pop
in
mov
xor
pop
aaa
jle
add
pusha
sbb
out
mov
cmp
lds
std
adc
xchg
mov
test
pop
js
xchg
cmp
or
int
je
fwait
mov
push
das
jge
mov
lea
mov
mov
lock
loope
jl
fmuls
dec
out
iret
fnsave
or
dec
jg
inc
xor
cmpsb
loopne
insl
jnp
adc
ljmp
mov
add
dec
insb
repnz
xor
roll
cmc
outsl
sub
lret
cmp
nop
jp
sarl
or
out
shll
or
and
or
sub
push
mov
jecxz
mov
pop
das
sub
add
jl
mov
adc
xchg
divb
pop
xchg
cmpsb
scas
jecxz
mov
stc
fnstcw
pop
lods
sub
push
xorl
jmp
loopne
mov
cld
jecxz
mov
test
adc
stos
aaa
cmc
insl
jb
jl
push
sub
push
add
pop
dec
out
mov
pushf
sub
lods
das
or
jg
jg
cmpb
add
mov
or
inc
dec
push
and
mov
add
jmp
in
jnp
ja
add
sub
push
push
fs
sbb
cli
jg
sub
jne
int
and
fldcw
fldl
sti
call
lret
pop
lods
adc
gs
aad
inc
pop
lock
div
push
jne
jmp
sub
mov
fbld
or
mov
outsl
pop
adc
fnstenv
iret
inc
lods
shll
pop
cwtl
mov
mov
cmp
xor
mov
ficomps
orl
and
mov
sub
lret
add
movsb
fisubl
sub
inc
cld
lods
jo
push
sarl
pop
push
je
sbb
adc
dec
movsb
add
jns
mov
lods
aas
xchg
adc
data16
ret
je
fdivs
dec
nop
dec
mov
cmp
movsl
loop
mov
aas
mov
add
inc
inc
out
les
pop
std
in
push
adc
or
leave
push
cmp
lea
pusha
inc
int3
push
pushf
pop
push
or
inc
mov
leave
in
add
in
test
addb
mov
jl
xlat
xchg
ret
sbb
adc
popa
lret
mov
push
inc
push
fsubrs
add
shlb
aad
pop
mov
mov
add
loop
out
or
outsb
insb
in
push
sub
roll
les
inc
aad
lods
inc
and
mov
repnz
cmpsl
mov
xlat
mov
es
jb
and
in
xchg
aad
jnp
xor
call
mov
test
outsl
sub
psubsb
xor
mov
push
push
jmp
add
out
push
xchg
add
nop
fsubrp
subb
push
ja
adc
icebp
and
pushf
xor
pop
stos
push
or
cmpsb
scas
dec
dec
push
jmp
xor
cmp
and
cmp
cs
leave
mov
fwait
dec
pop
ja
dec
nop
mov
test
mov
push
dec
enter
cltd
sub
xchg
jp
loop
movsb
fadd
sub
pushf
inc
dec
xchg
adc
sbb
pop
int3
stos
add
sub
aaa
fmuls
sarb
jne
fbld
ja
leave
movsl
push
loop
decl
cld
cs
call
stos
or
add
push
jo
test
pop
dec
andl
sbb
or
out
adc
mov
mov
inc
cmc
in
or
ret
jp
idiv
push
loope
flds
jp
mov
rclb
fdiv
popf
sub
loopne
daa
ficomps
getsec
add
sahf
lods
jo
sbb
jmpw
mov
call
fisttpl
rcl
and
push
dec
les
iret
ret
mov
mov
xorl
lds
sub
xor
loopne
fldl2e
mov
mov
fnstsw
xchg
push
mov
fsubs
gs
ss
icebp
aaa
popf
shr
or
push
pusha
cmpsl
test
andb
mov
das
mov
dec
xchg
testb
fistl
mov
inc
cwtl
mov
push
in
call
add
gs
mov
push
aam
fidivs
sub
outsl
sbb
push
inc
pop
into
nop
and
mov
xchg
movsb
out
push
dec
xchg
jnp
pusha
jb
mov
sbb
clc
cld
ss
pop
and
adc
push
pop
lcall
and
mov
jne
aaa
scas
add
insl
jbe
xlat
popf
ret
aam
pop
jno
lods
gs
fisttpll
test
sbb
ljmp
inc
call
or
pop
inc
fsubrl
mov
pop
mov
mov
jnp
mov
and
adc
mov
jmp
lret
cmp
ljmp
jl
inc
mov
es
mov
je
mov
jnp
xchg
subl
mov
pop
rclb
inc
adc
xchg
dec
xor
and
mov
lcall
dec
das
aam
icebp
and
daa
inc
mov
mov
lahf
mov
push
ja
sbb
cld
mov
leave
inc
xchg
sahf
repz
divb
sub
adc
fiadds
ret
xchg
fucomip
fiadds
lock
add
popf
repnz
lods
push
cld
incl
mov
sarb
pavgb
in
in
dec
push
div
or
outsl
fnstsw
inc
jo
dec
pop
hlt
js
loope
pushf
push
mov
jl
mov
lock
push
or
lock
pop
std
xor
xchg
jo
mov
xor
and
testl
frstor
stos
ljmp
sar
sarb
or
xor
or
ret
or
sahf
testl
jmp
jb
in
mov
aad
lea
mov
insb
jb,pt
subl
mov
ret
jmp
loope
adc
push
lods
adc
cmpsb
cwtl
inc
arpl
loopne
mov
addb
leave
push
outsl
cld
add
movsl
or
sub
lea
lock
inc
imul
fbld
dec
jnp
cwtl
inc
sub
dec
jbe
mov
cmp
popa
shr
pop
and
mov
add
test
jmp
cmp
clc
test
imulb
jo
mov
int3
mov
inc
mov
cld
and
dec
repnz
outsl
inc
cli
imul
stos
adc
xor
sub
sub
popa
idiv
mov
dec
adc
mov
jl
add
in
fdivrp
add
enter
xor
sbb
les
fildll
lock
xchg
fstpt
ljmp
aas
add
lcall
xchg
and
and
inc
jg
insb
sub
fldt
or
add
iret
sbb
arpl
add
cli
test
sbb
std
pop
clc
mov
adc
out
sub
adc
add
adc
or
sti
mov
rclb
test
stos
loopne
retw
pop
in
lea
fcomps
and
jg
push
dec
sbb
or
cmpsb
push
lcall
sbb
or
cli
cs
or
and
xor
shlb
adc
and
cmpsl
pop
mov
or
mov
clc
sub
fdivr
sbb
pop
jmp
fstps
push
adc
fmuls
mov
incb
xor
enter
cwtl
xor
je
out
inc
ficoms
xchg
or
inc
push
clc
cltd
stc
arpl
and
ret
and
int3
mov
mov
mov
cmp
lret
loopne
popa
test
pop
sbb
inc
sbb
fadds
dec
mov
into
in
jbe
inc
jg
loop
jecxz
sbb
enter
sbb
pushl
mov
xor
cltd
in
mov
mov
fwait
add
mov
jg
test
push
cs
cmpsb
das
add
shll
sub
adc
push
mov
mov
mov
pop
cld
and
pop
rclb
mov
dec
mov
cmp
jnp
lds
adc
pop
pop
add
mov
rcrb
xchg
or
push
pop
add
cld
mov
movsl
sbb
arpl
jb
sub
test
aam
or
clc
lret
rcrb
aaa
sbb
xor
lahf
hlt
mov
decl
sbb
sbb
cltd
xchg
adc
xchg
inc
outsl
cld
in
nop
add
dec
xchg
adc
xchg
pop
sbb
in
mov
insb
mul
out
lea
in
je
mov
sti
cmp
arpl
test
push
cmp
cli
cli
jg
sub
je
out
fadds
push
pop
jbe
jmp
iret
arpl
jecxz
mov
jle
incb
push
mov
pop
sub
or
aad
stc
xchg
out
imul
mov
out
mov
lret
push
sti
js
addr16
xor
scas
or
scas
mov
or
inc
sti
iret
cmp
outsb
xchg
jp
push
out
sub
aam
jmp
jecxz
mov
shlb
ret
adc
ffreep
jg
shlb
cmp
test
or
lcall
cli
mov
xchg
test
int
and
dec
pop
dec
jp
jg
test
xchg
cmp
fstpt
loopne
or
flds
jbe
aas
mov
add
mov
cmpsl
mov
das
out
insl
mov
cmc
nop/reserved
and
push
lahf
xorl
xor
and
aam
add
movsl
out
jg
shll
dec
in
cwtl
or
jl
lea
adc
loop
adc
loopne
lcall
cmpsb
faddp
xor
push
cld
push
mov
ret
in
mov
inc
inc
imul
adc
or
std
lods
cmpsb
dec
lds
lahf
lret
cmpsb
andl
mov
xchg
push
imul
mov
xor
and
jg
mov
push
inc
cmp
and
push
data16
aam
imul
sbb
cmpsb
scas
rorl
idiv
incb
cld
mov
shr
icebp
xor
add
cltd
ret
out
mov
dec
std
xor
fs
lods
shrl
js
fildll
das
ret
mov
in
xchg
clc
aam
cmc
arpl
dec
orb
jge
lea
push
rcl
cld
clc
or
sbb
iret
mov
mov
adc
add
push
inc
or
adcb
adc
aam
rclb
adc
cltd
or
nop
mov
and
sbb
ss
pop
arpl
pushf
dec
xor
pop
mov
scas
adc
test
hlt
outsb
mov
in
or
inc
hlt
mov
das
aam
push
int
test
in
mov
mov
cli
or
xchg
and
mov
divl
cmp
aas
dec
addr16
sbb
in
rcr
fisubl
jne
cmp
xchg
jae
mov
ret
add
xchg
clc
mov
mov
jb
dec
sub
or
push
adc
mov
loop
loop
inc
pusha
ljmp
fucomp
test
xchg
repz
ds
add
cmpsl
pop
adc
in
pusha
ljmp
insl
mov
inc
or
sub
daa
jmp
hlt
mov
cmp
inc
xchg
mov
insb
mov
cwtl
push
mov
lcall
insl
mov
adc
out
or
int
call
xor
aam
dec
in
lret
pop
cli
push
lock
inc
cmp
dec
cmp
les
jmp
xchg
push
dec
lcall
mov
rcll
mov
xchg
cwtl
or
fisttpl
movsl
pop
adc
icebp
inc
daa
jbe
push
adc
adc
or
mov
sbb
aaa
jg
arpl
loopne
push
aam
xor
pop
cmp
jnp
xor
mov
loopne
jo
loope
sub
push
add
add
outsl
cmc
inc
pushl
aad
ljmp
push
pop
dec
std
push
add
adc
scas
sbb
mov
and
divl
inc
rorb
scas
add
cmp
sbb
test
add
inc
mov
loop
pop
stos
ret
out
outsb
xchg
fisubl
or
pop
arpl
jmp
sbb
ljmp
notb
fwait
mov
mov
lea
popf
insb
cmp
push
sbb
loop
jle
or
out
mov
arpl
jo
dec
mov
adc
inc
xchg
push
stos
sti
ret
dec
adc
lahf
ret
push
scas
fisubrs
mov
repz
add
out
or
mov
jp,pt
jg
pop
aas
sbb
dec
mov
push
clc
ja
roll
in
jmp
inc
sar
sar
jne
out
cmp
jle
xlat
dec
jne
pop
outsl
les
fcoms
stos
xchg
jae
inc
dec
jle
lods
push
fnstsw
test
les
sub
sbb
mov
cmpsb
clc
out
cmp
adc
cmp
nop
imul
outsl
push
cmp
and
aaa
dec
sub
and
mov
mov
in
lea
xchg
dec
insl
gs
lock
adc
sub
or
mov
dec
enter
test
adc
sbb
cmpsl
sub
adc
fdivp
jle
jecxz
aam
icebp
outsl
rolb
or
adc
nop
inc
jl
outsl
sub
call
fs
decl
rolb
rcrb
movsl
cmpl
aad
xor
jecxz
lret
mov
pop
adc
mov
or
arpl
mov
push
push
xchg
in
movsl
lods
das
jno
stos
inc
insl
mov
clc
das
pop
add
ret
call
lret
lds
cmp
sbb
cld
pop
add
inc
jno
xor
les
xchg
jb
sub
adc
xchg
cwtl
jo
test
ljmp
push
rclb
cwtl
jp
dec
insl
pop
push
jp
add
decb
hlt
je
mov
mov
fwait
out
das
mov
adc
mov
lods
inc
sahf
popa
std
lock
sub
fwait
mov
mov
je
sbb
popf
inc
xlat
push
push
inc
stc
push
cmp
in
pushl
or
dec
leave
icebp
mov
popf
pop
addr16
dec
popf
dec
test
test
addb
mov
loopne
adc
call
inc
push
adc
dec
xchg
lock
not
call
sbb
test
inc
adc
es
shrl
mov
jbe
mov
mov
and
fs
mov
jo
push
pushf
arpl
push
jp
or
xor
in
inc
dec
packsswb
or
cli
lret
cmp
push
outsb
fwait
imul
mov
and
test
loopne
leave
push
into
lds
fsubs
rolb
popa
mov
sbb
cli
dec
lods
dec
mov
lds
lock
adc
call
inc
push
sub
pop
leave
out
adc
push
or
shlb
pop
jp
in
inc
sbb
cwtl
ss
mov
and
push
leave
jo
mov
lods
pop
add
jge
repnz
loopne
cmpsb
pop
jno
rol
fistps
jmp
in
add
inc
jnp
inc
mov
insl
pop
add
call
dec
jb
inc
les
jbe
pop
pusha
jmp
mov
lret
push
sbb
mov
fildl
mov
cmp
or
sub
dec
mov
rcll
xor
mov
push
sub
xchg
or
fidivrl
dec
in
incl
jp
push
test
mov
ss
hlt
lock
cli
movsl
dec
sbb
adc
adc
sub
cmpsl
and
into
or
je
jle
pop
imul
movsl
mov
mov
mov
pop
jecxz
fildll
imul
inc
sbb
decb
push
notb
movsl
dec
mov
pop
cmpsb
jle
mov
in
adc
test
fcmovu
jno
pushl
in
sahf
shll
jle
jns
stos
sbb
jecxz
fists
aas
mov
aam
jmp
mov
popa
push
jecxz
cmc
outsl
mov
imulb
mov
xchg
fiaddl
test
pop
xchg
xor
hlt
aaa
loopne
imul
ja
sub
push
inc
adc
mov
fbld
adc
cs
and
ja
ljmp
or
or
fsts
mov
xor
xor
popa
push
and
sub
jge
cwtl
mov
mov
mov
fsubr
mov
lret
sbb
faddp
and
jb
cld
popa
test
lea
jp
sbb
int3
pop
aas
sbb
push
pop
popa
xor
cmpsl
fcmovnbe
lcall
jno
fsts
idiv
movsb
jmp
xor
sti
adcl
and
hlt
mov
dec
in
cld
outsl
xor
sbb
ljmp
pop
sub
push
xor
adc
dec
daa
lcall
adc
popf
mov
call
sbb
dec
mov
push
notl
inc
outsl
pop
out
pop
mov
inc
je
or
bnd
outsb
stc
aaa
icebp
xchg
ficoml
popf
sub
sbb
xchg
and
lcall
xchg
lret
movhps
mov
out
or
in
pop
ficompl
call
add
push
pop
jge
dec
xchg
jl
mov
test
cmc
sub
orl
call
shl
pop
and
sub
rcr
pop
sub
push
sub
sbbb
fisttps
cmp
out
imul
mov
sbb
jge
in
pop
dec
out
pop
cltd
or
push
mov
outsb
inc
mov
sbb
fcmovnbe
sysexit
xor
pusha
shlb
ret
push
or
adc
popf
xchg
arpl
lcall
pushl
lods
xchg
mov
iret
xor
mov
mov
lods
out
push
inc
jmp
inc
cmp
or
push
aaa
and
sub
in
lret
sbbb
cmp
test
mov
mov
aad
ja
nop
xor
mov
arpl
xchg
es
fwait
imul
sub
xchg
add
loop
xor
pop
adc
pop
fiadds
or
xchg
inc
xor
jecxz
adc
push
adc
mov
sub
test
cmp
je
jle
cli
adc
and
push
dec
subb
mov
adc
jg
test
sub
in
mov
loopne
pushf
inc
fs
ljmp
mov
push
dec
dec
test
xchg
add
jne
cmpsb
xchg
xor
adc
xchg
pop
fs
test
xor
sub
mov
in
pop
mov
lahf
pop
nop
inc
ret
dec
push
jle
push
test
xor
pop
inc
mov
outsl
inc
pop
add
and
mov
pop
push
inc
and
out
cs
clc
jg
sbb
icebp
into
in
aas
pop
and
loop
notl
mov
into
add
inc
fistpll
loop
daa
sbb
lock
std
or
jecxz
aas
xchg
pop
xlat
mov
les
inc
mov
add
adc
cmpsb
adc
pop
ret
outsl
lock
pop
cmp
insb
ljmp
push
cmp
adc
out
push
hlt
loop
cmp
dec
call
pop
clc
adc
psllw
rolb
popl
cmp
cmpsb
lds
mov
dec
mov
pop
cld
lcall
mov
pop
scas
int
inc
scas
lea
mov
cli
cmpsb
out
cmpl
je
cmpb
mov
xor
enter
dec
sub
hlt
mov
lods
push
call
in
xor
outsb
dec
jne
sub
scas
dec
jae
cmp
fcomip
data16
xor
mov
test
mov
or
rcr
insb
les
adc
faddl
sub
mov
xchg
ds
jbe
inc
cmp
mov
add
push
std
mov
clc
sbb
mov
mov
hlt
leave
iret
lahf
pop
shrb
pop
pop
loope
inc
xor
sbb
cmp
push
inc
add
sbb
mov
pop
sbb
test
imul
mov
adc
sbb
cld
mov
add
sbb
inc
inc
incl
add
jle
das
xor
sub
xor
mov
mov
sub
jecxz
inc
pop
fldl
cli
jecxz
xor
add
loop
sub
outsl
fldt
and
adc
xchg
repnz
mov
fdivrs
bound
mov
sub
push
cmpsl
aam
add
jecxz
ds
in
mov
jg
stos
mov
or
daa
icebp
fimuls
adc
sbb
xchg
mov
push
sub
inc
push
sbb
mov
cmpsl
stos
jmp
cmp
and
push
icebp
jns
push
icebp
out
xor
pushf
or
push
pushf
cli
in
aas
mov
jecxz
adc
cmp
sub
dec
and
jg
push
push
push
push
sti
loope
cwtl
andl
mov
push
adc
stos
sbb
mov
je
jnp
dec
pop
pop
or
andl
push
fnstcw
dec
js
pop
cmpsl
mov
push
xchg
sub
push
xchg
stos
add
shr
es
rclb
daa
hlt
sub
aaa
adc
rcrb
xchg
adc
jnp
pop
test
add
cmpb
xchg
push
xor
rcll
sub
and
lcall
loopne
movl
lods
pop
fisubrl
loop
or
or
push
add
inc
inc
cli
jae
push
adc
or
mov
pop
test
stos
mov
push
jmp
or
loopne
mov
dec
mov
das
sub
sub
mov
cmpb
sbb
sub
icebp
outsl
ss
jbe
dec
inc
inc
aas
popf
icebp
mov
adc
and
pop
inc
jae
vprotw
mov
enter
inc
dec
fists
dec
or
repnz
push
or
inc
gs
push
cli
lcall
mov
repz
mov
mov
and
inc
sti
ret
subl
dec
mov
pop
pop
mov
cmp
test
rcll
sbb
add
insl
int3
push
lock
and
adc
fmull
and
dec
add
cmpsb
mov
int3
pusha
xorb
mov
push
popa
fmuls
sbb
inc
cmp
addb
enter
adc
sbb
sub
sbb
cs
push
adc
out
push
mov
outsl
orb
ss
cmp
and
les
inc
mov
je
int
mov
cmpb
es
sahf
scas
adc
out
xchg
shlb
lret
mov
or
xor
loopne
adc
mov
xor
jp
scas
clc
je
add
mov
cmp
lcall
xchg
push
lock
addl
divl
push
fcoms
adc
in
lea
push
paddsb
cmpl
out
shl
je
adc
xchg
lcall
lret
xor
fidivrl
clc
inc
ret
or
aaa
inc
mov
mov
cmp
mov
cltd
mov
dec
jne
mov
icebp
ja
pop
inc
mov
int3
out
push
scas
mov
fsubrl
dec
ss
lock
in
add
mov
inc
repnz
call
shrb
jp
outsl
inc
fimull
mov
mov
inc
lock
mov
andl
pop
mov
fnclex
cmp
push
call
cmpsb
outsb
and
jo
mov
ljmp
jg
dec
cltd
xchg
inc
xor
xlat
push
loope
rcrl
and
mov
inc
mov
cmp
test
movsl
and
jecxz
mov
push
add
clc
cld
dec
pop
xchg
xor
add
pop
jmp
fst
sbb
xor
rorl
imul
pop
lret
call
add
mov
repnz
jno
xor
dec
lods
mov
sbb
cmp
jmp
int3
andl
popa
test
dec
jge
or
sbb
lret
mov
dec
pop
inc
int3
jbe
push
xchg
lahf
cli
xchg
cli
fwait
pop
aas
stos
jb
xlat
mov
dec
xchg
lcall
inc
mov
push
movl
in
and
in
xlat
inc
std
jge
add
daa
jle
lds
cmp
popa
xor
ss
loope
mov
pop
js
jbe
lock
mov
ret
int
mov
dec
push
hlt
loopne
cmp
mov
adc
pop
test
out
inc
sub
pop
lret
xor
xchg
pusha
cs
adc
das
mov
mov
pushl
sub
jle
sbb
ret
test
jg
xchg
dec
inc
imul
adc
arpl
arpl
xchg
sub
cmpsb
nop
cmc
fadds
push
shl
rorb
sub
mov
out
jle
subw
pusha
pop
add
fucom
gs
push
ret
gs
outsl
cmp
loop
pushl
adc
add
addr16
push
xchg
add
mov
data16
inc
adc
sbbl
push
outsl
int3
into
add
cmp
xor
and
add
push
lock
sub
and
pop
xor
mov
shr
add
add
adcl
cmpl
imul
andb
popf
add
pusha
xchg
push
add
cmp
orb
or
hlt
and
fildl
and
mov
imul
lret
xor
loope
sbb
inc
jnp
xchg
xchg
aas
lds
jnp
dec
jp
and
jmp
js
cmp
cmc
fiaddl
ret
xchg
sub
push
loope
and
add
push
nop
mov
pusha
in
push
sarl
ds
subl
test
push
lock
mov
push
lock
mov
orb
inc
repz
jns
push
mov
jb
stc
imul
mov
jg
ret
or
jne
rorl
fadd
add
sub
xor
adc
sub
les
divl
adc
sbb
or
or
lock
mov
lods
add
adc
or
adc
ja
loop
fildl
xor
inc
adc
adc
sub
mov
orb
jp
xor
iret
div
add
add
dec
sub
and
xor
fdiv
sbb
xor
mov
and
ret
popf
iret
xor
adc
or
push
push
fwait
stos
loop
add
ret
in
pusha
mov
lret
pop
cmpsl
adc
test
or
cltd
mov
and
dec
push
pop
mov
fsub
ret
filds
push
fistl
sub
imul
mov
adcl
mov
das
cmc
gs
mov
dec
sbb
sub
adc
or
sbb
addl
dec
shl
sbb
test
mov
inc
adc
outsl
aas
imulb
test
lea
ss
lods
adc
sbb
lds
loopne
inc
gs
xor
popf
or
dec
inc
cwtl
or
shll
adc
int
ficomps
pop
les
mov
sub
mov
les
jg
insb
icebp
fdivr
xchg
and
adc
fnstcw
push
jmp
cld
or
add
fwait
sti
pushf
cld
or
cmp
push
sti
mov
jb
xchg
outsb
inc
dec
cmpb
push
inc
dec
or
mov
clc
jns
adc
or
push
mov
int3
shll
aam
lds
xchg
repz
mov
orb
int3
cmp
lods
cmpsb
inc
dec
jl
mov
int
xor
testb
jmp
add
or
push
sub
xchg
lods
mov
sub
in
loop
pop
xor
orl
mov
fs
mov
sbb
scas
mull
js
adc
adc
push
jae
cwtl
dec
adc
xchg
in
sbb
sarl
mov
pop
inc
enter
add
push
push
push
aad
repnz
clc
add
mov
or
cltd
test
add
mov
xchg
mov
bound
icebp
rolb
cmp
inc
add
in
adc
je
push
add
repnz
xor
js
popa
push
sbb
xor
adc
mov
test
jo
mov
stos
cwtl
jno
or
ljmp
jge
aam
fdivs
pop
inc
mov
push
pop
mov
mov
mov
jg
subl
shlb
aad
fcmovnbe
mov
jl
in
data16
ds
fdivl
or
je
inc
adc
cld
insl
cmp
inc
lods
add
rclb
xchg
out
push
ja
popf
in
cmp
push
sub
loopne
sub
mov
cmpl
je
rcll
mov
xchg
daa
sbb
in
dec
je
mov
test
push
inc
cmp
lock
les
mov
daa
loopne
mov
jmp
imull
loopne
xorb
cmp
pop
cmp
xchg
shll
das
andl
push
mov
fcompl
lahf
ss
xor
push
jmp
cmpb
sub
addb
insb
in
sbb
insb
lods
pushf
loop
adc
aad
dec
xchg
sbb
movsl
sub
add
cld
shufps
push
sarb
or
jns
cmp
xlat
flds
pop
dec
push
mov
es
je
cmp
jmp
sbb
sbb
add
dec
add
mov
pushf
out
sub
cmp
arpl
test
lock
pusha
mov
mov
and
mov
mov
lods
pushf
jmp
xor
or
pop
fdivrs
xchg
jbe
adcl
xor
push
test
sbb
adc
movsb
aam
lret
xchg
mov
in
and
add
jbe
sub
jns
mov
test
sarl
add
std
shlb
mov
adc
jmp
add
ret
stos
dec
std
decl
in
add
aaa
push
inc
push
or
mov
dec
jnp
fs
sahf
cwtl
inc
fstpl
sbb
pop
ret
je
or
aaa
lahf
outsl
cltd
call
xchg
fistpll
xor
rorb
scas
inc
adc
push
nop
cmpsl
incl
push
adc
scas
xchg
loope
lret
call
mov
cmp
jmp
add
ret
mov
xchg
xchg
and
pop
fsts
movsb
loop
dec
adc
xchg
enter
mov
mov
push
jge
ret
dec
fs
cmp
repz
or
daa
pop
sub
hlt
jae
cmp
cmpsb
add
add
arpl
mov
call
les
movsb
decb
mov
cmpsl
ret
xor
faddl
push
and
sub
pop
mov
fnsave
ljmp
out
aaa
mov
jns
lods
pop
cmp
outsl
lahf
stc
inc
or
pop
inc
stos
decl
das
add
add
jo
inc
add
or
insl
and
mov
xor
adc
fdivl
rcrl
xor
ljmp
lods
xor
add
jl
inc
roll
xor
es
jg
decl
std
xor
mov
mov
or
lret
and
mov
dec
js
sbb
xchg
xor
icebp
mov
icebp
or
ret
push
popa
sub
add
push
xchg
push
sbb
outsb
push
cmpsb
je
adc
adc
das
aam
stos
mov
lock
add
jns
jmp
adc
adc
sbb
into
jecxz
lea
outsl
nop
fst
lds
ds
mov
mov
or
cmp
and
jne
std
sub
mov
add
sbb
mov
fsub
fmul
mov
or
cwtl
sub
add
or
add
jg
fidivs
mov
sbb
add
dec
jl
ljmp
mov
add
dec
adc
and
pop
and
adcl
jne
mov
inc
jg
xchg
mov
movl
leave
pop
outsl
enter
pop
js
ljmp
dec
xchg
push
mov
sub
pusha
imul
das
jl
nop
out
xchg
push
loope
jmp
arpl
lcall
aas
dec
test
adc
in
inc
inc
dec
shrb
add
and
add
or
in
and
aas
and
sbb
popa
inc
sbb
sti
mov
sbb
jo
inc
jnp
push
aad
loope
xchg
stos
loopne
xor
inc
jbe
push
xor
fldcw
aas
mov
sub
add
adc
adc
in
ds
push
fildll
gs
cmp
xchg
xchg
testb
test
adc
call
adc
stos
lahf
sbb
and
lds
subb
scas
cmp
or
clc
jns
cmp
iret
cmp
sbbl
mov
push
push
jg
loop
inc
lcall
xchg
fcmovnb
adc
shl
adc
and
xor
jg
adc
mov
jbe
xchg
add
cmp
stos
mov
or
test
cmpsl
add
fnstenv
push
out
mov
and
sbb
dec
cmp
in
jecxz
test
in
repnz
dec
imulb
push
fldt
inc
popf
pop
test
or
mov
add
fistpll
sub
inc
jne
outsl
loopne
ds
test
nop
adc
adc
mov
shll
dec
push
mov
sbb
js
ljmp
enter
inc
xor
mov
xchg
in
or
data16
add
mov
mov
test
push
adc
bound
push
xor
xor
pop
aam
xchg
inc
dec
sbb
sub
jbe
dec
ljmp
jne
and
adc
pop
push
adc
or
push
push
mov
cld
dec
movsl
add
daa
add
add
imul
imul
jae
sub
sub
inc
mov
inc
loope
test
mov
push
sub
cmp
cmp
movsl
out
rcrl
mov
hlt
out
xchg
cmc
inc
call
pop
test
mov
xor
jb
push
aam
mov
cmc
inc
and
mov
fdivl
dec
pushf
sbb
pop
or
add
adc
mov
mov
push
andb
xchg
inc
push
xchg
fcoms
icebp
movsl
stos
jl
jg
sub
inc
or
iret
scas
add
dec
test
mov
sbb
out
sub
mov
and
shl
or
add
mov
cmp
inc
push
mov
in
push
dec
rcll
sahf
cwtl
jne
rcr
jl
lret
sub
or
adcb
mov
js
xchg
pop
sbb
add
popa
inc
cmpsl
addb
adc
lea
pop
sub
xchg
and
mov
fbstp
jae
stos
push
mov
out
mov
out
jle
fmull
and
add
or
inc
xor
xlat
movsb
mov
es
ds
adc
adc
inc
mov
repnz
jb
xchg
pop
out
in
mov
mov
push
rcl
rcll
stos
loopne
jno
add
dec
cld
jo
testb
and
ret
pop
iret
push
xchg
sbb
ficompl
aas
ljmp
enter
cmp
jmp
pop
fs
mov
add
sbbl
mov
mov
lahf
clc
xor
add
pop
sbb
push
int3
out
fcos
call
jecxz
xchg
push
jl
lods
add
push
dec
test
subl
sub
dec
jecxz
push
stc
mov
push
push
aas
add
and
aaa
mov
aam
rolb
mov
ret
push
cmp
mov
push
mov
aad
incl
xchg
adc
cmp
mov
pop
loop
stos
outsl
mov
cmpsb
and
cld
lahf
add
loopne
cmp
neg
out
bound
rcrl
inc
test
adc
mov
jmp
in
cltd
into
into
or
cli
mov
inc
jle
mov
clc
loopne,pn
xor
cmp
push
sbb
sarb
push
out
iret
bound
mov
adc
push
push
pop
pop
mov
add
lock
aas
pop
popa
add
add
push
sub
add
je
adc
xchg
and
inc
jo
pop
cmp
jne
sub
int
mov
test
call
loop
sub
xchg
dec
mov
inc
fwait
push
adc
test
push
iret
notb
add
xor
xor
jmp
dec
pop
shlb
xor
jmp
lods
sahf
xchg
mov
outsl
addr16
out
test
xor
lods
and
sub
jg
cmp
das
hlt
inc
repnz
pop
push
shrl
cmp
mov
push
add
sbb
add
push
aaa
popa
push
cmp
hlt
out
mov
cltd
call
mov
push
xchg
inc
add
ljmp
add
fwait
pusha
loopne
sbb
in
cmc
test
cmp
bound
mov
sbb
mov
xor
inc
cmpsb
pop
mov
mov
adc
add
into
cmp
pop
push
jne
push
hlt
mov
or
seto
mov
pop
das
jb
sbb
and
cld
rep
add
or
lods
jp
jmp
out
inc
sub
cli
sub
pop
lcall
xchg
int3
in
ret
mov
stos
rcll
add
iret
add
jg
outsl
ja
lret
dec
push
xor
loope
mov
dec
stos
ds
sub
push
inc
mov
repnz
fcoml
lea
pop
orb
cmp
fwait
shrl
inc
and
addb
je
xchg
jge
incl
jo
pop
repz
fst
popa
mov
icebp
pop
mov
or
inc
add
outsl
insb
stos
fadds
push
lret
mov
aaa
decb
fs
stc
out
mov
push
js
jle
mov
jb
jge
push
movsb
push
lock
repnz
push
popa
sti
adc
out
mov
xchg
jbe
jmp
lcall
out
pusha
inc
adc
ret
mov
std
das
fimuls
pop
clc
cld
fmull
inc
cld
lret
stos
mov
push
add
or
addr16
mov
sbb
xorb
out
in
bound
fmuls
test
sub
push
jmp
pop
pop
xorb
js
cmpsl
iret
pop
mov
mov
xor
xlat
lret
mov
rcrb
or
sub
mov
sbb
nop
mov
sub
mov
mov
mov
sub
cmp
notb
push
or
pushf
mov
push
mov
jmp
loop
sbb
and
add
aad
mov
xor
gs
push
pop
dec
add
out
sub
mov
imul
data16
sbb
andl
int
sub
sbb
jg
popf
add
add
adc
mov
ret
add
xor
cmp
mov
aam
lods
imul
stc
jge
push
fadds
mov
shrb
inc
dec
add
sbb
mov
xchg
push
add
mov
adcb
sub
sbbb
fnsave
aaa
js
fwait
out
cmpsl
or
mov
xchg
pop
mov
or
mov
or
inc
lock
pop
cwtl
in
push
sub
in
jbe
in
cmp
push
cmp
push
xor
pop
jle
addl
jge
jae
pusha
push
push
xchg
lea
scas
orb
in
or
xchg
call
and
jbe
push
shl
jb
jb
or
out
add
sub
xchg
es
pop
inc
lock
ret
fnstsw
std
mov
clc
adc
mov
icebp
and
cmpsl
dec
psllw
orb
dec
sbb
adc
enter
data16
test
inc
cs
or
loop
inc
ja
mov
mov
xor
inc
cmp
mov
pop
sbb
jge
fbstp
testb
out
and
dec
aam
inc
in
shrb
fadds
lea
mov
out
or
inc
jo
shrl
subb
sbb
aaa
sbb
jb
mov
push
aam
inc
adc
sahf
sub
imul
outsl
fadds
out
cs
cmp
and
lods
cwtl
or
mov
sbbl
dec
lds
or
cmp
mov
push
mov
in
ret
popa
icebp
mov
push
inc
icebp
jmp
cmp
cmp
and
pop
in
mov
addl
out
xor
add
or
idivb
repz
lock
dec
rcl
not
ret
jbe
mov
ljmp
pop
rolb
int3
inc
pop
or
sub
push
mov
cmp
daa
fs
mov
pop
inc
dec
sbbb
mov
xchg
addl
xchg
pushf
mov
mov
imul
xor
mov
insb
hlt
push
add
movb
nop
lret
fcmovb
lods
xor
cmp
mov
adc
popa
sbb
mov
cmpsb
ret
jno
sub
xor
sbb
mov
mov
scas
pop
js
aam
imul
xchg
ret
outsb
aam
sbb
imul
out
mov
adc
xchg
inc
popf
loop
ret
xor
cmp
fwait
jp
add
andl
in
adc
insl
ficoms
adc
pop
lds
fists
push
filds
sbbb
decb
add
int3
pop
adc
sbb
mov
jbe
dec
add
std
mov
sbb
or
dec
jge
sti
out
daa
dec
xlat
jmp
push
xchg
or
pop
inc
or
inc
push
loope
stos
aaa
hlt
jo
jno
pop
jns
jb
xchg
push
dec
push
jmp
xchg
jecxz
cld
test
in
inc
inc
mov
mov
or
add
dec
push
xor
shrb
rolb
pop
jmp
push
xchg
xchg
aaa
fisubl
add
mov
sub
es
lcall
add
rcrl
xchg
add
fcomps
lds
push
das
fildll
xor
add
xchg
add
dec
cld
and
cs
sbb
xchg
in
lea
jle
push
std
pop
jnp
mov
jae
ret
dec
mov
lods
lret
dec
jo
outsl
icebp
gs
cltd
mov
inc
mov
icebp
dec
or
popf
pusha
cli
lock
pop
mov
ja
gs
pop
push
stc
mov
sub
mov
out
and
mov
out
add
fnsave
xchg
rolb
or
ret
int
gs
push
in
adc
add
data16
pinsrw
sti
fbstp
lods
mov
sub
pop
inc
pop
sub
roll
stos
jmp
and
inc
dec
jge
mov
and
cmp
scas
mov
push
pop
mov
fcomip
sbbb
add
push
sub
mull
and
mov
outsb
jo
adc
pop
enter
sar
lret
mov
cwtl
bound
bound
push
and
xchg
mov
cmpb
sbbb
pushl
lock
insb
xorb
faddp
into
mov
int3
lock
leave
mov
outsb
cmp
test
fiadds
fildl
dec
js
clc
or
sbb
jge
iret
and
hlt
in
or
test
cld
jns
xor
sub
hlt
sbb
sub
push
add
jp
mov
call
jle
and
jb
inc
hlt
pop
mov
imul
push
nop
cmp
xor
ljmp
push
jne
in
sahf
rcrl
mov
xchg
test
mov
and
xchg
aas
add
fnstsw
ja
add
rolb
aam
add
xchg
out
push
leave
out
add
add
ljmp
aad
stos
rorb
jnp
nop
xchg
xor
fcomps
roll
pop
inc
fiadds
lock
fwait
outsl
lret
and
outsl
loopne
adc
jnp
mov
jle
inc
negl
push
mov
imul
mov
test
push
dec
shlb
stc
outsl
aaa
cmpsb
mov
fchs
mov
fmull
sub
lods
es
stos
jno
or
sbb
dec
gs
sbb
loopne
shll
lcall
nop
sarb
pop
popf
stos
jae
iret
add
jge
xor
in
add
cmpl
testl
sub
nop
sbb
jl
inc
jp
in
sub
adc
pop
inc
dec
inc
xor
or
sub
jecxz
jmp
clc
and
xor
jo
cli
or
pop
cmp
sbb
and
sub
mov
sub
and
add
rorb
adc
mov
and
pop
jbe
xchg
xchg
xchg
into
push
add
push
cmp
jo
add
lret
rcll
repz
pop
and
inc
rorl
jae
push
test
je
xchg
xchg
dec
add
fnstenv
adc
ret
and
lds
clc
dec
popf
pxor
dec
enter
pop
test
rsm
addl
xchg
mov
jb
mov
xor
adc
push
imul
and
addr16
mov
adc
push
mov
push
andb
sbb
lahf
sbb
inc
mov
popf
jmp
cmp
jbe
sub
inc
mov
cltd
loop
mov
or
fdivs
lea
les
mov
add
mov
push
inc
movsb
add
jecxz
add
jecxz
adc
cmp
sahf
fldl
xchg
scas
dec
xorb
mov
add
test
push
push
popf
adc
cmpsl
cmp
insl
repnz
and
and
lret
and
inc
test
sbb
rcll
fildl
mov
ret
adc
push
push
jg
xor
hlt
xchg
adc
adc
loopne
mov
sub
jge
in
sub
data16
filds
inc
sub
test
xchg
adc
lret
in
add
or
stos
add
dec
cmp
incl
daa
pushf
ss
sbb
mov
stos
sbb
std
jg
pusha
and
les
ds
xchg
adc
cmpsb
std
and
test
pop
sbb
jo
pop
add
fmuls
jb
inc
dec
das
and
outsl
sarb
xchg
add
scas
mov
xchg
ss
jge
dec
call
inc
lcall
lret
icebp
mov
dec
test
xorl
mov
cli
fnstsw
daa
nop
fadds
stos
cmp
inc
xor
mov
and
and
fbstp
push
xlat
sub
outsl
jmp
andl
mov
or
sbbb
sbb
pop
mov
lahf
adc
pop
sbb
repnz
bndldx
mov
mov
icebp
xchg
data16
jbe
imul
mov
mov
mov
inc
std
fsubl
push
mov
push
cld
add
inc
movsl
mov
mov
add
inc
adc
add
push
xchg
mov
jecxz
adc
or
xchg
xlat
adc
jle
sub
addr16
jb
test
mov
dec
lock
mov
add
idivb
mov
inc
ret
loop
pop
sub
adc
mov
mov
mov
jl
and
cmp
and
add
outsb
xchg
cmp
jnp
mov
sub
je
and
xchg
clc
and
inc
adc
xchg
xlat
rorl
rolb
stos
push
test
sub
rclb
pop
inc
and
les
sub
pop
or
es
in
push
rclb
dec
subl
loope
sbb
mov
push
jo
les
inc
xchg
movsb
into
cli
nop
inc
mov
jb
jno
add
sub
fcoms
and
sbb
lret
cltd
adc
inc
mov
xchg
orl
lock
neg
lods
xchg
daa
mov
and
aaa
lret
inc
aaa
loopne
mov
fwait
hlt
xorb
jmp
pop
pop
and
xor
fdiv
fadds
inc
add
pop
xchg
sbb
or
pop
in
xchg
mov
push
mov
xor
mov
mov
push
sbb
inc
lods
stos
push
orl
and
addl
pop
add
inc
xor
xchg
das
or
hlt
xchg
addb
inc
xor
cs
jp
adc
call
add
ret
loope
jo
inc
push
ljmp
or
cs
test
mov
jp
sub
stos
dec
or
add
inc
inc
sbb
outsl
push
pushf
and
sbb
xchg
cmp
xchg
sub
push
inc
or
mov
adc
popa
imul
fcoms
adc
adc
stos
testb
mov
jno
xor
mov
out
inc
outsl
cwtl
inc
mov
test
xor
mov
push
inc
dec
xor
leave
sbb
sbb
xchg
hlt
hlt
icebp
and
enter
cmp
hlt
lods
inc
andb
jecxz
icebp
ss
or
xor
loopne
insl
xchg
arpl
hlt
adc
adc
cmc
jmp
test
ja
lcall
shll
mov
push
movsb
loopne
mov
adc
es
iret
adc
and
imul
ret
push
mov
push
pop
sbb
adc
imull
push
in
mov
inc
repz
add
out
push
add
push
push
jnp
push
jge
sarl
and
adc
shll
inc
sti
dec
cli
jge
sbb
js
mov
cmp
sub
xor
and
rcll
jl
rorb
shr
and
stos
mov
inc
xchg
add
push
or
add
scas
adc
push
adc
cli
cwtl
mov
inc
imul
adc
lret
and
cld
adc
add
push
inc
pop
xor
lods
andb
nop
stos
sahf
xor
aad
xor
mov
or
mov
test
sbb
int3
test
nop
xchg
mov
movsl
jo
loope
push
call
jns
sbb
stc
adc
mov
add
xor
add
lahf
dec
jo
inc
or
sub
cmp
push
sbb
shl
mov
sub
mov
clc
xchg
or
test
dec
std
movb
and
fstpl
dec
xchg
lds
repz
in
push
data16
xlat
outsl
stos
or
gs
fildl
or
inc
xor
pop
jne
sti
int
inc
sbb
mov
rcr
xchg
pop
push
cmp
sbb
inc
ficoms
in
lock
into
or
add
mov
je
sbb
pop
cld
jne
cwtl
aam
add
idivb
outsl
cmc
push
hlt
sbb
ja
fs
add
and
ljmp
int3
cmp
sbb
sbb
xchg
sbb
les
adcb
fwait
imul
pop
addb
pop
fimuls
mov
loopne
or
xchg
push
push
ss
sub
clc
dec
jne
and
sub
das
mov
scas
fcoml
push
push
lcall
cmp
inc
mov
dec
pop
pop
cld
jp
andb
inc
xchg
lods
shlb
fcom
cmp
pop
xor
test
xor
lods
fdiv
fldcw
clc
xlat
and
fcom
loope
inc
subl
shlb
fwait
mov
fdivl
into
pop
ficoms
fnstenv
or
fmuls
shrb
or
push
mov
sahf
sbb
sbb
adc
gs
inc
dec
add
stc
push
or
and
std
inc
jecxz
push
lock
mov
cld
cmpsl
jl
fwait
add
add
or
dec
lret
add
ljmp
std
test
aad
jge
inc
in
add
mov
notb
pop
lods
xor
pop
xchg
sbb
xlat
inc
fstp
push
sbb
dec
lock
hlt
and
mov
subb
jno
jl
and
jmp
sbb
idivb
adc
or
jns
es
cmp
sub
add
dec
add
jmp
cmc
jmp
rorb
add
mov
notb
mov
cwtl
loope
xchg
mov
pop
xchg
xchg
lods
mov
fildl
or
or
pop
mov
xchg
pop
add
mov
jmp
popa
sbb
pop
xchg
enter
insb
and
dec
cs
cmp
mov
cmpsl
stc
jae
sbb
inc
mov
push
pop
mov
pop
into
inc
lcall
inc
outsl
sbb
clc
dec
orb
mov
stos
push
add
and
sbb
popa
movsl
loop
jg
jp
xchg
lahf
leave
fsts
pop
add
push
fldl
int
mov
jecxz
outsl
hlt
iret
or
ss
dec
dec
push
loopne
pop
pop
pushl
testb
in
xlat
inc
dec
jge
mov
mov
mov
gs
push
daa
xor
adc
inc
lds
mov
and
rcll
int3
or
test
xor
jg
aam
out
popl
xchg
in
in
notb
add
push
mov
xchg
lock
or
adc
adc
add
gs
int3
sub
mov
or
and
jne
mov
pop
andl
out
push
sub
mov
cld
inc
jl
cmc
roll
xor
iret
adc
or
in
mov
icebp
push
inc
pop
add
dec
repnz
call
cli
test
adc
add
test
leave
insb
div
xchg
out
lahf
mov
push
fnstsw
cmpsb
pusha
mov
jmp
imul
filds
mov
push
mov
cli
inc
leave
xchg
les
xor
mov
in
or
shr
mov
movsl
push
adc
xchg
mov
test
mov
fwait
cld
es
mov
pushf
adc
loopne
aad
or
cmp
cmc
xchg
push
les
inc
jg
andnps
in
lea
cltd
and
and
aaa
cmc
test
inc
test
fiadds
push
sti
push
lock
rolb
add
adc
idivb
mov
adc
xor
ret
das
filds
jno
shrb
mov
lcall
in
ret
inc
pusha
pop
test
arpl
cmc
dec
lcall
outsb
mov
and
push
imul
imul
or
loope
cld
imul
mov
mov
rcll
adc
icebp
movsl
or
jo
rorl
es
fdivl
je
pop
out
out
fimull
inc
outsl
sbb
push
out
pop
inc
sbb
jbe
adc
jae
outsb
xchg
inc
adc
insb
add
das
std
pushf
push
mov
das
stc
mov
sbb
sub
xchg
pop
cld
ljmp
loope
or
repz
in
and
jmp
sti
incb
mov
pop
out
push
xchg
loope
cmpsb
or
loop
sbb
lret
and
mov
lret
add
xchg
sub
lock
aas
and
jns
sbb
inc
aam
insl
ret
mov
cmp
push
dec
cmp
mov
rorb
dec
les
push
sarl
push
push
inc
mov
jbe
mov
ss
add
or
push
sub
mov
xchg
cmp
inc
mov
popa
test
sbb
mov
inc
cmpsl
sbb
jbe
dec
lds
xor
jle
and
dec
add
or
and
add
mov
add
sub
pop
sbb
jl
pop
jbe
mov
cmc
adc
fldt
mov
mov
fwait
popa
cmp
js
add
and
push
out
out
into
mov
push
xchg
out
es
mov
xchg
xor
cs
jg
inc
mov
sbb
push
xlat
stos
sub
mov
imul
mov
add
sbb
jne
sbb
addr16
lock
mov
cs
sub
sub
mov
cmpsl
jp
sbb
sbb
stc
fdivr
pop
dec
daa
inc
push
ja
push
or
pop
mov
orl
in
mov
sbb
movsb
xlat
stos
sub
outsb
mov
mov
add
jp
jecxz
mov
ja
and
es
into
or
jecxz
pop
jbe
mov
sub
loop
ja
cmp
daa
push
shrl
inc
jnp
das
push
dec
pop
flds
and
jnp
outsl
cli
push
fcompl
xchg
inc
mov
and
leave
dec
fiadds
dec
xchg
incl
push
push
stos
sarl
add
loop
adc
push
push
lods
or
rcll
adc
icebp
repz
jg
movsl
push
xlat
loopne
jnp
xchg
jae
in
xor
addr16
pop
add
jmp
adc
adc
push
cli
push
adc
pop
jmp
test
sub
bound
xchg
imul
add
mov
mov
shll
mov
pop
mov
iret
mov
es
jg
ss
ds
aam
icebp
sub
or
aas
pop
dec
lock
sub
stc
movb
movsl
adc
inc
incl
xor
test
fbstp
daa
or
clc
add
mov
add
inc
jnp,pt
mov
jge
cwtl
add
pop
test
mulb
sbb
fs
ds
stos
loopne
add
lahf
pop
js
cmpsl
jno
shll
and
jmp
outsl
shrb
rcr
stos
aad
jge
xchg
sub
pushf
mov
dec
push
scas
in
test
out
mov
leave
pop
enter
les
in
fwait
mov
jl
inc
push
mov
pop
or
add
das
jmp
pushf
out
and
dec
jp
cli
cmc
xchg
mov
repnz
push
int3
repz
lret
inc
add
idivl
nop
adc
or
lret
into
lret
loopne
xchg
lcall
loopne
push
inc
dec
mov
and
adc
nop
shll
es
idiv
mov
or
pop
lahf
xor
outsb
jmp
mov
sti
mov
dec
sbb
adc
addb
xchg
and
and
add
add
addr16
clc
push
cmc
xchg
filds
xchg
cmp
es
pop
shll
inc
pop
cwtl
jge
push
dec
mov
sbb
xchg
jecxz
nop/reserved
mov
test
xchg
jns
mov
or
sbb
push
cmpb
xor
sbb
cli
es
add
fdivs
cmpsb
pop
xchg
cmp
cmp
push
push
outsb
ss
pop
jl
jl
lcall
ljmp
lock
repz
ffreep
push
aam
xchg
mull
dec
mov
shll
sub
shrb
and
fstpl
sbb
fstps
add
ret
xor
sub
es
mov
fisttpll
inc
sub
test
test
mov
loop
adc
lgdtl
cld
movl
inc
aaa
stos
out
in
decb
pop
cltd
and
icebp
jmp
int
sbb
push
leave
mov
xor
lea
push
xor
push
sub
pop
ljmp
ficoms
movsb
fimuls
lds
xchg
xor
jl
dec
sbb
pop
hlt
and
pop
ljmp
movsb
add
push
pop
xchg
hlt
sbb
aam
scas
and
mov
push
js
pop
mov
shr
loopne
cs
gs
in
adc
popf
and
jl
ret
iret
inc
mov
mov
fnsave
adc
cmp
popa
push
scas
repnz
jo
push
xor
sub
add
xchg
dec
push
jbe
add
mov
daa
and
rorl
fisubl
add
xchg
mov
call
xlat
outsb
ret
in
stos
repz
faddl
addb
mov
es
sub
push
jg
push
push
or
or
add
loope
cmpsb
xchg
sub
push
loope
xchg
inc
cld
and
aad
cmpsl
clc
mov
enter
loopne
lcall
add
sar
push
mov
mov
mov
add
mov
imul
inc
mov
ret
test
xor
nop
loopne
js
clc
or
mov
dec
inc
push
test
jo
andb
int
enter
add
hlt
mov
mov
and
jo
push
data16
test
mov
adc
and
add
scas
mov
in
fs
cmp
lock
je
dec
stos
sbb
lret
pop
clc
xchg
jle
inc
and
cmpsl
call
outsl
adc
int3
adc
rclb
lahf
bound
jmp
fidivrs
xor
fwait
out
outsb
xlat
sub
and
out
jmp
sbb
jo
and
pop
mov
subb
xchg
and
or
push
push
add
mov
ficoml
enter
adcl
imul
sub
test
push
pusha
add
ret
test
ret
repz
int3
dec
cmc
xchg
cwtl
out
jno
xlat
pop
or
jp
add
lret
ret
iret
mov
mov
dec
icebp
pop
adc
add
sbb
push
push
rol
aas
enter
lahf
lahf
xchg
jmp
sbb
inc
adc
rolb
scas
cltd
jb
and
jnp
mov
lcall
or
cs
add
push
or
mov
lret
fwait
stos
or
ret
insb
push
fldt
fcoms
test
sbb
sub
int
faddl
lret
sub
mov
call
jbe
sub
and
insb
push
subb
mov
loop
arpl
mov
push
xchg
or
sbb
adc
add
sub
out
sbb
out
and
xor
or
mov
mov
inc
jnp
gs
xor
push
flds
js
push
lretw
sbb
cmp
push
jge
lea
mov
push
stc
insb
dec
inc
push
andl
add
add
or
dec
inc
out
sub
into
fcomps
pop
mov
mov
stos
aam
dec
lret
inc
adcb
pop
dec
sub
int
sti
loop
add
hlt
cmpsw
loopne
fdivrl
mov
push
and
stc
loope
das
out
outsb
repz
mov
in
lahf
add
testb
push
cld
std
cmp
mov
and
int
or
adcb
rolb
xor
xor
sarl
stos
or
dec
sbb
xor
add
rcll
sarl
pop
mulb
fiadds
mov
or
add
and
sarl
push
add
or
inc
lret
stos
ljmp
push
xchg
add
inc
std
dec
sub
push
stos
cmp
addr16
adc
adc
add
mov
lods
mov
add
into
add
test
or
mov
add
adc
push
aam
jmp
jmp
arpl
push
jb
add
ret
add
imul
mov
bound
adc
pop
js
xlat
ja
adc
push
cmpsb
add
testl
inc
fisubs
leave
shlb
xor
mov
push
dec
push
adc
xor
inc
aad
test
fadds
add
mov
loopne
fs
repz
adc
cmp
cmp
int3
adc
xchg
stos
xchg
sub
mov
lods
cmp
and
mov
sub
lock
jbe
js
ja
lods
add
cmc
stc
insl
rcl
push
insb
test
fwait
movsb
out
arpl
subl
jne
push
push
cmp
add
jmp
lds
dec
lds
xlat
fcompl
out
lcall
stos
cmp
inc
push
and
adcb
or
sub
out
and
cmp
mov
loopne
mov
adc
mov
sbb
sub
inc
xor
add
lods
dec
loop
mov
ds
mov
in
or
lcall
sub
cli
pop
shlb
adc
adc
mov
aam
inc
xor
xor
push
pop
xchg
rolb
in
add
in
add
inc
test
mov
out
add
inc
or
cld
notl
jg
and
aam
out
jp,pn
jnp
out
sbb
mov
rolb
clc
mov
or
leave
rclb
lahf
rorb
sbb
add
out
test
pop
and
xor
sub
pop
andb
xchg
imul
cmp
rcr
mov
pop
add
cltd
mov
jno
push
clc
insb
jae
adc
mov
lock
or
popa
inc
adc
call
add
jl
rcrb
out
inc
shlb
push
xchg
cmpb
test
dec
push
cmpsl
aas
and
jecxz
rcrb
add
xlat
out
lret
int
cmp
fdivs
aas
aad
adcb
cs
sub
adc
jle,pn
cmp
cmp
lock
sub
es
testl
ror
add
add
inc
les
sbb
out
testl
mov
mov
cmp
xchg
mov
mov
call
dec
movsl
push
mov
rorb
rcrb
dec
rcll
rcrb
inc
jb
xchg
outsl
xor
loopne
das
es
hlt
add
pusha
dec
lock
or
dec
in
in
pop
xlat
push
loop
sbbb
xor
mov
push
fstps
loope
aam
adc
mov
outsl
imul
lret
add
testl
cmp
add
test
andb
add
dec
mov
xchg
fistps
add
jne
sahf
repz
inc
mov
xchg
mov
mov
mov
adc
repz
mull
dec
into
add
and
sub
push
out
dec
sbb
adc
or
inc
stos
jmp
xlat
cmpsl
cwtl
jbe
jbe
inc
test
xor
jae
or
inc
dec
mov
push
dec
push
xor
mov
mov
and
add
cli
dec
add
mov
add
fmuls
es
stos
in
aam
add
cmp
bound
mov
loopne
cli
inc
sub
xor
iret
sub
aas
add
push
testb
jl
mov
xor
add
data16
add
loope
mov
adc
pop
rcll
push
add
mov
inc
mov
cmp
inc
loopne
jg
mov
mov
gs
fstpt
jne
popa
movl
mov
xor
push
cwtl
adc
inc
adc
pop
mov
and
inc
sti
sub
mov
add
xor
test
sub
adc
or
cmp
sbb
rclb
lret
adc
jno
mov
bound
inc
mov
loop
pusha
cmpb
push
clc
in
pop
sub
jo
loopne
pop
push
pushf
adc
inc
and
jl
xor
aam
and
data16
dec
pop
xor
mov
call
faddl
nop
out
stos
cmpb
in
jo
cmc
cmp
lods
movsb
pop
enter
dec
cmpl
fstpl
jge
mov
xor
mov
adcb
xchg
inc
aam
mov
scas
lock
rcll
dec
shlb
popf
ljmp
and
testl
jmp
lret
or
mov
adc
call
lret
push
cmpsb
adc
dec
push
and
outsb
xor
hlt
xchg
setne
inc
test
test
sti
mov
cld
cmpsl
stos
mov
jmp
movsl
mov
jo
ds
pop
sar
je
push
arpl
mov
add
mov
add
jge
inc
outsb
fisttps
and
repnz
fimull
push
fucomp
fstpt
jge
lea
sub
dec
and
push
out
jmp
dec
outsb
fmuls
rorb
leave
mov
sbb
add
aas
push
add
add
and
xchg
ljmp
mov
add
xchg
adc
idiv
mov
jmp
add
mov
mov
imulb
shrb
nop
aam
push
add
nop
and
stos
pop
xorl
add
popf
dec
push
ljmp
popa
shl
out
sbb
push
shlb
cmp
addl
pushf
push
push
cmp
add
add
add
jge
inc
incb
testl
cmpsl
addl
pop
adc
fistpll
test
xor
push
sub
lea
std
or
ljmp
push
add
jecxz
push
xchg
outsl
pop
jno
and
xchg
jp
xor
adc
in
dec
and
das
push
dec
mov
std
in
das
pushl
push
add
fldcw
loop
mov
das
rorb
rcl
cmpb
in
call
add
mov
adc
xorl
inc
and
sub
dec
xlat
add
xchg
mov
into
test
sbb
xor
cmc
decl
cld
in
je
push
lret
mov
push
fstpt
popa
jbe
lods
aad
std
pop
adc
sub
dec
pop
or
and
stos
adc
mov
pop
or
rorb
adc
in
mov
data16
xchg
pusha
test
and
repnz
insl
xchg
scas
and
sahf
and
and
out
mov
fidivrl
call
sub
cli
mov
push
push
dec
pusha
bound
lahf
addr16
mov
inc
inc
aas
into
fdiv
push
cmc
ret
insb
jp
shlb
inc
outsb
sub
and
push
jge
pop
add
and
or
jmp
je
pop
fcmovnu
sub
inc
adc
inc
rcrb
add
add
mov
sub
scas
repz
adc
hlt
cmp
out
adc
inc
xchg
adc
pop
mov
xchg
pop
fisttpl
jnp
dec
adc
sub
dec
push
jae
add
sbb
pusha
ret
cmp
lds
movl
mov
aaa
adc
fmuls
fs
xor
gs
insb
sbb
mov
dec
out
int3
sbb
cmp
in
insl
or
jp
push
outsl
gs
mov
or
and
sub
insl
adc
mov
out
ljmp
mov
sysenter
andl
das
add
inc
cmpsl
lds
xchg
and
pop
fldlg2
push
add
icebp
mov
ret
pusha
scas
lcall
in
add
jmp
test
xlat
or
aad
or
scas
lock
dec
lds
xor
push
popf
or
cwtl
fldcw
pop
mov
inc
xchg
sub
and
hlt
or
sbb
inc
test
push
pop
inc
imul
jecxz
test
xchg
mov
aaa
mov
pop
dec
les
xchg
sbbb
xor
add
fadds
cmpsl
adc
cld
mov
cmp
mov
pop
cmp
xor
xchg
outsl
icebp
fbld
lcall
test
cmp
mov
arpl
and
mov
stos
aad
add
add
inc
adc
fldcw
out
mov
insb
or
lret
mov
push
ret
out
loop
dec
push
inc
cltd
adc
call
jecxz
xorb
out
sub
sub
ss
dec
jbe
mov
dec
sub
pop
cs
pop
sbb
repz
and
add
or
and
out
mov
les
sub
cmp
sbb
dec
cmp
xchg
fwait
mov
test
testl
xlat
aad
ljmp
int3
or
test
xchg
jb
adc
and
ret
jne
pop
xchg
adcb
js
cmp
add
mov
pushf
ret
mov
and
and
mov
aad
push
data16
dec
sub
hlt
mov
pop
push
xchg
pop
shl
inc
das
pusha
jo
bound
xchg
sub
sbb
and
jg
out
pop
inc
pop
filds
pop
pop
pop
lods
test
mov
test
cmp
adc
mov
das
sbb
cli
pop
xor
sub
push
cmpsb
out
dec
insb
add
push
fsin
add
dec
test
mov
dec
shll
js
adcb
les
es
mov
xor
das
inc
pop
mov
dec
mov
shl
mov
add
push
fnsave
sbbb
sub
pop
push
xor
leave
stos
int
xor
add
mov
cmpsb
into
stos
dec
in
mov
or
mov
adc
and
mov
xorb
mov
fisttpll
inc
add
mov
cmova
add
cmp
pushf
dec
or
adc
and
and
in
sub
xchg
add
adc
push
add
push
repz
add
sub
addr16
test
dec
fbld
aad
loope
fldenv
flds
lds
pminub
mov
or
fildll
push
inc
movl
mov
fsubrl
cmp
es
pop
and
push
imul
mov
insb
mov
pop
and
mov
inc
jmp
sbb
shll
inc
mov
stos
mov
test
dec
and
out
add
filds
or
testl
std
mov
jl
or
data16
adcb
and
jle
cli
and
in
mov
cmp
rcrb
leave
call
cld
leave
sub
add
ficoms
ret
imul
les
mov
mov
std
and
cmp
xor
test
sub
nop
adc
jo
psadbw
fs
gs
pop
add
push
not
imul
add
and
ret
sti
clc
adc
mov
mov
and
jbe
bound
loope
scas
addl
mov
jb
fwait
cli
dec
push
dec
add
inc
inc
jle
cmc
cmp
sub
and
cmc
mov
frstor
fiaddl
xor
inc
jmp
add
ret
or
xor
lret
push
mov
fmul
movsl
sbb
loop
add
lods
add
jmp
cmpsl
xchg
jo
sbb
mov
shlb
jge
mov
adc
xor
sbb
add
mov
les
lock
mov
jno
pop
and
adc
adc
push
inc
cwtl
shll
jecxz
jb
jne
dec
rcrb
das
sbb
xor
add
and
mov
xchg
inc
mov
adc
loope
rcll
pop
inc
mov
shlb
add
add
add
jno
nop
fsubrl
js
rcll
xchg
clc
fisubl
pop
aaa
inc
add
inc
lahf
cld
daa
cmp
or
aaa
mov
daa
aad
dec
cld
sahf
movl
aas
jns
loope
fwait
inc
test
push
xor
lahf
xor
xchg
loopne
add
popa
and
push
inc
outsl
xchg
add
sarl
inc
loopne
mov
notl
pop
add
mov
cmp
ret
add
repz
or
imul
add
jo
pop
mov
dec
adc
fnstsw
and
sbb
test
add
sub
cmp
fndisi(8087
mov
repnz
inc
fucomp
mov
jecxz
cmp
cmp
jbe
pusha
dec
bound
loopne
push
lds
and
xor
or
or
cs
ljmp
cmp
iret
inc
ret
shrb
jnp
test
pop
stc
push
in
and
flds
jp
or
push
shlb
loopne
push
sub
cld
addb
aad
jg
and
and
leave
fldenv
push
ja
das
divl
lock
xchg
inc
adc
fwait
stc
add
sarb
loope
push
faddl
adc
xchg
add
add
loopne
cmp
jb
ret
popf
adc
into
inc
xor
icebp
sahf
add
or
subb
rclb
add
fwait
push
sbb
js
xchg
cmpsb
mov
or
cmpsb
adc
or
fs
adc
cmp
push
adc
icebp
sbbb
add
ljmp
stc
and
loopne
push
adc
or
pusha
mov
lcall
inc
and
sarb
cmp
lods
mov
or
in
push
rorl
xor
scas
loopne
adc
cmp
jmp
push
aam
inc
and
lcall
scas
dec
pop
xor
aam
ja
and
mov
mov
fidivl
movsb
and
loopne
ljmp
pop
das
lock
and
add
cltd
das
mov
ljmp
adc
add
orb
push
notb
sbb
lock
loopne
xchg
push
xchg
ja
cwtl
out
jp
mov
jle
xchg
mov
fwait
xor
fbstp
mov
testl
sub
roll
adc
adc
incl
test
js
push
popf
out
pop
loop
xchg
std
scas
imul
sub
call
mov
cld
das
dec
or
xchg
jecxz
push
sbb
or
adc
outsl
adc
add
aam
inc
push
in
loope
loop
pushf
insb
out
pop
je
fwait
aaa
clc
pop
jg
push
mov
shl
arpl
decb
stc
add
scas
cmp
adc
ficomps
add
call
push
adc
or
fsubrl
adcl
ret
jg
inc
pushf
add
test
int3
add
rclb
dec
rcrl
xchg
sub
aas
repnz
cmpsb
pop
inc
call
jno
and
incb
sbb
push
push
sarb
mov
xlat
aaa
rep
cli
adc
pop
add
pop
mov
mov
les
sbb
cs
into
and
jns
adc
push
push
das
jge
stc
xchg
pop
inc
mov
adc
add
sub
les
in
mov
dec
ljmp
adc
mov
sub
sbb
and
adc
call
fmul
call
pushl
inc
xchg
popa
push
lret
pop
add
popa
xor
push
das
xor
jns
in
push
sti
or
sub
addl
jge
std
jg
hlt
add
dec
aam
push
fmull
sbb
movsl
into
das
cld
decl
outsl
adc
push
out
pop
sbb
or
rorl
mov
mov
and
scas
add
incl
cs
in
xchg
and
or
adc
faddp
cld
mov
lcall
add
pop
ljmp
je
add
mov
ficoml
mov
jg
mov
mov
in
push
sbb
pop
jl
sub
add
sub
dec
test
pushf
in
ss
mov
outsl
call
jp
rcrb
data16
inc
sahf
inc
in
sbb
pop
je
data16
sbb
out
or
decl
mov
mov
mov
xchg
sbb
es
and
sbb
mov
mov
or
mov
xor
daa
in
arpl
jg
je
and
sbb
xchg
data16
add
test
add
in
dec
mov
je
lea
mov
sbb
imul
add
or
mov
cmp
fisubrs
mov
loope
mov
xor
pop
cli
pop
adc
sbb
mov
shrl
pop
cli
inc
mov
stos
xchg
mov
insb
ret
stc
adc
ss
jmp
orl
fistps
repz
mov
mov
adc
lret
mov
fistpll
inc
push
ja
sbb
or
mov
mov
xor
push
aaa
insl
xor
cld
lcall
lret
mov
mov
push
fimuls
or
cld
sub
push
mov
jmp
mov
xchg
push
scas
call
add
mov
xlat
pop
je
or
dec
mov
push
ret
test
add
ljmp
mov
xlat
push
dec
sbb
loop
std
or
movsl
xchg
jmp
add
mov
test
scas
pop
adc
pop
cli
outsl
mov
loope
ficoml
shrl
dec
and
lock
sub
repz
lods
xchg
js
mov
into
fcmovne
sub
das
cld
ret
xor
iret
dec
mov
ljmp
dec
and
dec
adc
sbb
mov
call
test
and
mov
jae
xchg
pop
mov
push
fildll
add
mov
add
loope
aam
pop
mov
push
jg
imul
es
dec
loop
lods
enter
cmpsb
dec
shrb
inc
imul
fdivs
js
insl
pusha
push
das
inc
outsl
sub
jge
jmp
jmp
dec
mov
inc
es
cli
scas
jge
push
xor
add
xor
sarb
test
push
cmp
adc
pop
out
adc
test
xchg
js
push
adc
fs
adc
mov
cmovb
inc
mov
pop
mulb
cmp
mov
xor
mov
daa
punpckhdq
xlat
fiadds
idiv
mov
sub
dec
sub
int
and
or
jne
call
xlat
push
comiss
add
mov
ret
push
mov
movb
jg
andl
and
jl
jne
cld
or
in
mov
int3
mov
sbb
lea
in
push
sbb
arpl
rcrl
icebp
test
add
jmp
xchg
stos
adc
cmp
and
sub
ja
sahf
and
pusha
addb
pop
or
adc
mov
mov
enter
jl
sub
leave
fstps
cs
jns
mov
outsb
out
cmpl
and
jle
arpl
stos
ja
xor
xchg
mov
pushl
icebp
jmp
sbb
add
adc
fiaddl
jmp
call
aam
inc
lret
stos
je
std
fildll
mov
loope
jp
xor
inc
lahf
ss
les
mov
ljmp
pop
addr16
nop
xchg
std
pusha
stos
mov
pop
lahf
jg
mov
pop
or
mov
shrl
mov
mov
outsl
cld
xchg
adc
add
jmp
pop
add
lock
push
cld
or
rorl
data16
fld
nop
adc
dec
outsl
sub
dec
mov
test
mov
pop
jl
sub
es
sub
push
lds
sbb
pop
add
or
sub
add
mov
mov
jnp
cs
add
outsl
xor
iret
call
fiadds
jle
xor
push
xor
outsl
jg
icebp
pop
daa
cwtl
or
cmpsl
das
and
dec
mov
je
imul
jmp
test
push
jo
jecxz
xor
out
cld
fbld
and
shl
je
xchg
mov
mov
cmp
pop
test
and
lock
sti
xchg
adc
fdivr
cmp
enter
push
hlt
add
push
loopne
inc
les
inc
int
pushf
add
sbb
mov
mov
and
cld
inc
mov
sub
shrl
mov
cmpsl
mov
das
sti
mov
dec
dec
loopne
mov
mov
and
pop
and
ret
rcrl
inc
mov
sub
sbb
lods
cmp
fmuls
mov
call
add
or
das
sbb
xchg
add
hlt
inc
pop
rclb
sbb
shl
add
mov
pop
mov
adc
adc
adcb
pop
or
inc
mov
and
shrb
add
pusha
adc
adc
xor
aas
mov
push
add
or
xor
inc
mov
or
add
mov
std
and
add
inc
adc
subb
sbb
xorl
fildl
js
mov
mov
inc
inc
ret
adc
inc
xchg
sbb
cmpsb
mov
in
cld
enter
sub
jle
loopne
and
pop
adc
pusha
adc
mov
aam
xor
push
in
in
bound
jge
mov
fsubrl
sub
adc
ret
jbe
and
inc
jae
jb
add
dec
jle
es
adc
adcl
adc
test
popa
mov
je
jp
sub
cmp
adc
xchg
adc
sbb
scas
data16
xchg
push
sub
or
test
imul
loopne
sbb
gs
sahf
and
cmp
or
adc
stc
xor
inc
pop
push
hlt
insb
push
sbb
test
or
cmp
test
fimuls
mov
insl
or
sub
dec
or
outsl
int
add
inc
xchg
xlat
fildl
or
test
inc
or
sarb
pop
inc
test
add
addr16
daa
add
testl
mov
and
and
sub
test
add
in
dec
or
push
inc
sub
inc
inc
lret
addb
pavgb
dec
leave
inc
test
divb
sbb
inc
and
push
inc
cmc
das
jno
push
pushf
jle
test
mov
push
sti
insl
das
xor
add
jnp
loop
inc
movb
call
cs
ret
xchg
sahf
hlt
lret
das
push
and
lea
push
test
xorl
outsl
jo
inc
and
sub
sbb
clc
cmp
rcll
adcb
add
test
sub
inc
in
add
sub
or
flds
pop
mov
or
mov
aam
push
adc
fldcw
outsb
aad
jl
jmp
aad
vmread
incl
pusha
push
loopne
sub
inc
ret
inc
lea
cmp
loopne
js
sbb
mov
mov
bound
jmp
stos
test
test
adc
push
xor
add
xor
stos
leave
mov
test
fisttpl
inc
mov
outsl
stos
cld
mov
mov
aas
add
mov
lcall
ror
popa
test
into
test
jmp
mov
and
push
into
sub
adc
mov
enter
shl
or
or
rol
xchg
das
sub
and
out
jl
add
or
jp
mov
js
jns
pop
push
jns
inc
mov
aas
aaa
dec
push
and
mov
xchg
and
setne
cmp
push
out
sbb
mov
xchg
cmp
add
addr16
mov
rol
pop
aam
jbe
lahf
cmp
sub
add
adc
ss
sub
jbe
ret
orl
cld
jae
sahf
mov
lcall
adc
xchg
push
shll
rorb
decl
orb
shlb
and
and
rcl
add
xchg
push
push
pop
pop
loopne
lods
cmp
pop
rolb
mov
sub
loop
adc
inc
add
mov
add
and
add
and
cltd
test
pushf
mov
adc
and
dec
jb
add
mov
mov
ror
xchg
or
es
xor
add
sub
loop
xchg
insb
xorb
hlt
stos
mov
out
push
mov
or
pushf
fcompl
xchg
mov
aas
test
cli
add
orl
jo
int
pop
js
out
cmp
out
jae
in
or
add
sub
fiaddl
cld
lods
cwtl
adc
xor
ja
pusha
add
cmc
or
aam
loope
fisttpll
push
pop
mov
adc
add
jbe
add
test
inc
xor
mov
mov
push
sbb
jmp
leave
cmp
jo
push
adc
rclb
xor
jno
fildl
clc
pop
outsb
lods
cwtl
iret
lcall
loopne
mov
and
xchg
sbbb
dec
mov
mov
push
add
scas
fstpt
sbb
out
call
push
mov
sub
scas
xor
mov
push
leave
arpl
dec
pop
push
aaa
push
push
sbb
lock
je
inc
push
movsl
lock
push
adc
jnp
lret
adc
repnz
int
sbb
or
cmp
shlb
divl
add
mov
jb
jb
mov
jnp
inc
and
and
stos
lods
sub
jmp
orb
lods
into
or
dec
dec
test
dec
cwtl
rolb
push
xchg
add
or
hlt
sbb
and
iret
sub
sbb
mov
leave
shll
ret
push
sub
sub
and
movsb
aam
adc
test
push
or
xchg
jge
xchg
or
negb
jae
lods
and
adc
mov
fnstcw
cmp
mov
aad
adc
test
mov
js
in
inc
mov
cmpsb
addb
movsb
add
outsb
fstps
sbb
pop
xor
int3
lahf
outsb
dec
cmp
ja
add
imul
sbbb
pop
aaa
xor
and
cmp
mov
add
inc
std
ss
ret
fisttpll
clc
data16
popf
loop
outsl
negl
orl
xor
ja
shll
xlat
jae
aaa
inc
enter
lods
sub
jge
sahf
int
adc
fmull
sub
lret
inc
push
inc
add
call
stos
add
int3
inc
jl
push
fdivs
fmuls
xlat
mov
sub
cwtl
pop
sarl
add
adc
mov
pusha
roll
mov
push
test
jne
add
inc
add
pop
xor
fidivrs
mov
mov
sub
xchg
shll
add
inc
xor
fildl
rorb
fisttps
cmp
shrb
sahf
sub
aaa
inc
cmp
add
push
loope
cltd
pop
adc
mov
shrl
xor
push
pop
cmp
push
fstpl
fisubrl
add
xor
pushl
hlt
mov
add
sahf
sub
je
lret
ja
cwtl
adc
pop
daa
nop
inc
xchg
in
int3
inc
pop
adc
inc
cld
push
ljmp
inc
sarl
inc
jo
push
repnz
fstpl
adc
andl
out
ljmp
icebp
imul
daa
fstpl
push
and
push
std
jbe
inc
scas
dec
andb
inc
sbb
sar
out
mov
stc
scas
cltd
out
xchg
lods
xchg
mov
aaa
icebp
pop
add
vmwrite
push
pop
outsl
sub
ficomps
jl
insb
or
aam
inc
jg
daa
popl
xchg
dec
add
xor
inc
adc
das
hlt
incl
clc
loope
push
popa
pop
popa
mov
stc
mov
jne
cmp
shll
jbe,pn
stos
push
pop
fwait
ret
into
aas
hlt
inc
pop
cld
fimuls
sbb
lcall
ds
and
ljmp
add
lahf
add
int3
mov
in
adc
fwait
stos
adc
adc
inc
mov
sar
cmc
test
adc
and
andps
mov
cli
jp
nop
sub
pop
jb
push
xor
movl
and
insb
mov
push
cmp
negb
ds
add
gs
call
mov
addr16
test
xchg
aad
adc
test
jmp
push
pushf
xchg
rcrl
shll
pop
std
mov
pop
lahf
cs
sub
fstps
cmp
and
push
push
fstpt
loop
add
xchg
int
add
loopne
outsl
hlt
sbb
add
add
fldt
sub
insl
adc
jne
pop
add
dec
mov
inc
adc
mov
pop
push
das
out
add
jl
aam
pop
inc
pop
mov
jl
out
mov
mov
jb
pop
jecxz
and
push
adc
scas
or
mov
sub
pop
xor
push
lock
popf
cmpsb
xchg
add
pop
add
loope
and
sbb
aaa
inc
xchg
mov
cli
sbb
hlt
sub
xor
push
mov
xchg
xorb
add
fdivr
outsl
or
inc
and
popl
push
push
mov
and
or
in
mov
xchg
cltd
mov
das
je
out
test
add
shlb
cmp
pusha
xor
leave
xor
pop
fsub
data16
jge
outsl
ss
pop
int3
pop
shrl
mov
arpl
sub
cld
jg
jno
cmp
sub
dec
add
jbe
jo
inc
adc
and
iret
mov
add
movsb
les
test
test
stos
jo
mov
mov
mov
imul
rclb
xchg
mov
in
std
cmpb
add
cld
xorl
and
pop
mov
das
or
inc
lret
sbb
add
jge
add
ret
ss
insl
loopne
ljmp
sbb
lds
sbb
adc
hlt
xchg
cli
mov
jne
mull
popf
loop
add
cmp
push
test
jg
loop
cmpsl
sub
scas
mov
shlb
xchg
inc
jl
and
adc
test
insb
cs
lea
cs
fcompl
adc
and
dec
data16
and
leave
jne
pop
pop
test
lds
loopne
shll
test
sub
mov
test
rclb
sbb
test
jge
aam
in
nop
add
fistps
and
ljmp
mov
adc
aad
cmp
out
mov
pop
lahf
push
push
fnstsw
cs
mov
fcmovnu
mov
insb
nop
shl
out
and
stos
add
dec
lods
mov
decb
push
jge
stos
inc
or
or
mov
mov
xor
ret
pop
rcl
xchg
add
jg
dec
adcb
ds
inc
and
bound
or
pushl
roll
ret
pop
nop
pop
outsb
xchg
lcall
add
adc
aaa
xchg
adc
jno
jmp
outsb
inc
mov
add
test
jl
sahf
jecxz
pop
pusha
pop
nop
stos
fidivs
lret
aam
sbb
cmp
clc
into
jmp
idiv
adc
add
sbb
sub
push
out
push
gs
xor
fnsave
push
mov
outsb
fdivs
rcrb
dec
dec
das
sarl
sbb
inc
mov
cmp
lret
pushf
call
nop
int3
cmp
dec
mov
sub
cltd
push
test
addr16
xchg
mov
adcb
and
inc
or
das
mov
jb
test
nop
es
and
js
sbb
in
xchg
incl
mov
cmc
adc
jnp
sub
push
pop
icebp
push
xchg
jecxz
sbb
pop
add
and
inc
or
mov
gs
and
and
rcrl
pop
mov
adc
popl
mov
das
rorl
add
mov
popf
enter
jo
jmp
xor
cld
gs
cld
sbb
xlat
loop
adc
mov
daa
add
fdivr
or
aaa
lds
jne
insb
or
mov
adc
nop
fdiv
sbb
jae
movsb
inc
add
jg
jg
shlb
sub
push
ret
xchg
cmp
mov
fs
test
mov
lock
testb
mov
jb
mov
jp
mov
hlt
lea
mov
dec
cli
jmp
pop
jmp
sub
orl
xlat
daa
sbb
and
sbb
js
xchg
dec
bound
cmpsl
sbb
jns
inc
subb
outsl
jle
loopne
shr
popa
inc
lock
int3
ret
sub
js
adc
fsubr
push
mov
fisubrl
jb
rcrl
sub
cmp
je
test
movb
adc
add
and
mov
add
movsb
or
push
ss
div
mov
stos
lcall
or
lret
out
mov
inc
add
frstor
adc
fsubl
and
inc
lds
aad
mov
ret
call
sar
fistpll
aad
lods
cld
jecxz
test
ret
and
mov
adc
out
cmpsl
mov
mov
push
inc
outsb
and
popf
mov
sti
xchg
mov
add
add
cld
add
sbb
xor
lock
fdivrl
adc
xchg
cli
aaa
mov
rcll
cmp
add
loopne
sub
push
pop
ja
mov
pop
out
test
imul
fcmovu
mov
adc
mov
or
mov
xor
sub
inc
sub
cmc
inc
pop
mov
lods
enter
or
test
stos
xchg
iret
pop
sbb
inc
xorb
mov
xchg
or
jp
add
xchg
mov
test
adc
addb
loopne
ljmp
add
insb
ret
xor
xchg
or
loop
add
add
add
dec
clc
push
adc
imulb
push
aad
adc
mov
sarb
pop
and
loop
mov
outsb
ds
add
int
icebp
dec
add
cmp
mov
sbb
jo
push
mov
test
es
or
push
sub
cltd
rclb
movsl
or
idiv
add
xor
data16
mov
sbb
sti
fwait
jnp
out
imul
enter
jo
adc
pop
mov
dec
push
dec
stc
add
mov
lret
adc
xlat
xchg
into
push
and
lock
call
pop
push
inc
push
jmp
test
frstor
add
or
orb
movb
hlt
ljmp
push
scas
ret
adc
jb
or
loopne
and
xor
xchg
loop
aad
and
testl
mov
jne
push
push
adc
in
or
mov
sti
mov
roll
cmpsb
mov
loope
mov
push
subl
dec
xchg
in
ret
or
push
ljmp
xchg
pusha
cs
and
and
sub
and
sahf
cmpl
outsb
dec
sarb
xor
add
fcompl
andb
mov
mov
cwtl
add
mov
jecxz
dec
jnp
add
mov
jecxz
gs
sub
inc
pop
adc
pop
inc
ret
push
xor
icebp
adc
pushl
mov
adc
sub
rcrb
sbb
push
ror
dec
cli
dec
add
and
add
add
loop
pop
pop
and
or
mov
push
movsb
sbb
pop
jl
cmpsl
gs
mov
lcall
mov
imul
fcmovnu
rorb
dec
push
or
dec
ljmp
test
or
and
jp
pop
out
rcl
jnp
loopne
push
jnp
sahf
icebp
test
je
add
add
aaa
dec
jg
add
dec
pop
andl
pop
sti
and
jnp
shrl
mov
inc
and
test
sub
xchg
js
ret
popa
xchg
adcl
or
lahf
add
repz
mov
or
cmp
das
mov
fstpt
and
inc
arpl
pop
jge
cmp
jg
mov
icebp
cmove
mov
mov
repnz
mov
ret
xchg
xor
push
and
btc
cs
sub
leave
sub
out
sti
lods
gs
outsl
cs
lcall
mov
adc
ffreep
aas
jb
bound
inc
or
cmpxchg
fdiv
pop
rolb
loope
test
mov
ljmp
dec
jne
fldl
xchg
aas
dec
cltd
or
or
insb
outsl
sub
jmp
adc
pop
cmpsb
or
inc
adc
push
les
add
push
jnp
std
sub
or
fdivrl
pop
and
inc
inc
push
or
inc
daa
cmp
inc
clc
and
rcrb
popa
xchg
test
clc
cmp
mov
pop
ljmp
adc
pop
xor
mov
test
jns
lock
call
daa
js
dec
pushf
add
js
cli
ret
les
ljmp
xor
cs
jg
shrl
std
fwait
les
in
dec
and
push
inc
es
fbld
nop
xchg
xchg
es
rcll
or
adc
std
add
mov
lock
jns
popa
mov
loope
or
mov
xchg
sub
and
mov
mov
or
das
cld
cmp
mov
imul
mov
inc
cmp
and
inc
mov
sbb
cmp
shll
pop
fwait
push
clc
jbe
mov
cmpsl
mov
mov
repnz
xor
xchg
and
subb
mov
jp,pn
xor
mov
and
push
loop
mov
lds
add
pop
test
ljmp
mov
das
cld
add
sub
jo
insb
fdivrl
mov
add
in
sbb
dec
jl
jmp
int3
std
add
sub
je
sub
mov
cmpsb
mov
fwait
adc
sub
or
jmp
add
std
std
and
mov
pop
jnp
clc
sbb
lods
ds
inc
icebp
xchg
sbbb
rorb
jecxz
or
pop
jecxz
testb
xlat
shrb
pop
jo
sub
insb
outsl
jg
jg
sub
fnstsw
sbb
push
call
pop
sti
dec
add
mov
adcb
inc
shlb
xchg
shl
jnp
ja
sbb
stc
fcomip
sub
add
into
mov
jno
pop
sbb
dec
pop
pop
je
into
das
push
lock
pop
sub
pand
sub
mov
jl
push
shl
and
add
or
das
cmovno
jmp
aas
sbb
mov
mov
hlt
xorb
jg
les
xchg
popl
cmp
outsb
icebp
inc
mov
push
test
pop
jg
hlt
aaa
sbbl
mov
mov
push
cmp
stc
cmpl
pop
icebp
out
or
dec
xor
add
pop
mov
mov
in
mov
movsb
xchg
das
std
push
idivb
sub
es
xchg
fcmovnbe
imulb
dec
inc
dec
fs
daa
nop
jge
pop
shr
mov
sub
pop
add
addb
stos
jno
mov
shrl
incl
push
or
inc
das
in
adc
pop
add
rolb
pusha
inc
pop
adc
mov
adc
mov
add
inc
pop
push
add
xchg
or
sub
jge
inc
mov
sbb
mov
xor
outsl
xchg
jae
adc
xor
hlt
pop
ret
dec
pushf
hlt
daa
cmp
stos
loop
andb
mov
pop
mov
xchg
mov
inc
and
sub
hlt
xor
fdivrl
sbb
xor
adc
mov
shl
nop
inc
xchg
mov
and
inc
mov
push
bswap
sbb
xchg
mov
fwait
mov
xor
mov
fstl
ja
push
sarb
lea
add
add
or
xor
inc
rol
add
pop
mov
rclb
aam
and
push
and
inc
cmovs
mov
daa
add
in
fmul
rcr
add
dec
inc
rcrb
pop
lds
shl
pop
sahf
xor
adc
rcr
dec
mov
and
push
aad
sbb
mov
jnp
cmpb
cwtl
cmpsb
int3
fcmovnb
push
enter
sbb
sahf
arpl
in
lahf
adc
out
gs
loop
xchg
sub
xchg
rclb
addr16
cmc
jno
push
into
adc
pop
in
jl
mov
pop
mov
mov
fmuls
adc
mov
sbb
inc
mov
sbb
data16
call
icebp
jo
fwait
stos
dec
and
inc
pop
in
sub
adc
mov
clc
sbb
pusha
in
push
fs
or
add
mov
push
inc
in
test
call
inc
xor
lea
dec
pop
add
cmp
mov
mov
mov
xchg
stos
es
sbb
adc
xor
call
jne
jge
psubsb
and
sbb
jns
rolb
mov
sub
dec
jnp
add
cli
inc
xchg
or
or
xor
sub
or
push
pop
push
loope
cmp
call
mov
push
scas
mov
jmp
jl
cli
sub
popf
sub
repnz
xor
xchg
mov
std
mov
and
mov
dec
jmp
aam
test
cld
pop
loopne
jecxz
les
mov
out
scas
or
fnstsw
dec
mov
sahf
fmuls
js
xchg
cmp
cli
sbb
xor
das
mov
jle
and
sti
mov
mov
adc
push
mov
ds
call
mov
xlat
pop
or
inc
faddp
adc
adc
scas
add
loope
push
std
jg
pop
je
addl
insb
and
cwtl
pop
leave
in
or
xchg
pop
call
test
les
pop
and
jae
jg
add
fwait
insl
jne
mov
ret
mov
add
ud0
clc
ficoms
sub
lret
shlb
mov
mov
enter
mov
ljmp
andl
inc
shll
mov
sbb
cld
cmc
aad
loop
dec
sub
push
int
cmc
cmpsb
pop
fs
inc
mov
xorb
mov
mov
or
sub
jp
les
imul
cli
decb
mov
xchg
push
pop
push
sub
sub
jne
and
xor
or
dec
pop
out
adc
frstor
lds
and
mov
mov
cld
lods
and
nop
jne
test
push
icebp
in
pop
fcomp
notb
bound
and
or
movsl
into
rorb
sahf
pop
and
bound
jno
imul
cld
ljmp
dec
cwtl
imul
push
mov
add
push
jno
inc
insb
lock
cmp
jg
dec
stos
mov
sub
cmpsb
incl
ret
enter
and
loop
inc
xchg
outsl
mov
pop
sbb
scas
mov
bound
subl
inc
or
push
lret
mov
nop
pop
mov
lock
rcrb
popf
nop
out
hlt
sbb
test
repz
andb
push
and
mov
and
les
jg
push
or
popl
loop
mov
adc
das
mov
sbb
jg
andl
das
mov
or
cld
pop
adc
ja
mov
inc
jns
add
in
outsl
mov
mov
jmp
add
jmp
enter
push
in
pop
out
or
pop
sahf
dec
int3
dec
mov
or
xchg
xchg
sti
out
dec
cmp
nop
ret
mov
push
pop
mov
inc
addr16
test
push
sbb
and
inc
insb
add
inc
fidivrl
inc
incl
in
push
fldcw
stc
subb
fcmovnu
rorl
cwtl
sar
xchg
in
pop
cmp
xchg
push
imul
xchg
call
lcall
call
cli
jle
cli
or
test
addl
mov
sub
add
dec
sbb
dec
mov
pop
icebp
mov
push
adc
in
in
adc
push
sbb
sbb
popa
fistpll
ss
sbb
mov
dec
cld
call
push
adc
into
loopne
cmp
imulb
push
pop
mov
mov
or
das
mov
adc
mov
pop
cli
jns
inc
ljmp
cld
cwtl
out
bound
and
xchg
pop
repz
inc
mov
sbb
add
push
mov
test
xor
ds
adc
and
pop
fistpl
sbb
lock
add
jno
fistl
push
ljmp
call
loopne
into
aas
stos
sub
movsb
clc
rcr
pop
es
fwait
sub
pop
stos
ljmp
push
ss
fbstp
shr
mov
add
inc
das
add
shrl
loope
fbstp
movsl
adc
pusha
dec
ja
dec
nop
inc
cmp
popf
jbe
adc
jecxz
pushf
movsb
movsb
movsl
loope
movb
xchg
fsubr
aaa
xor
push
gs
rcrb
outsl
hlt
pop
mov
xchg
sub
data16
out
pushw
into
pop
dec
xchg
fcompl
inc
fistpll
jg
addl
cmp
dec
imul
out
mov
lret
subb
pushl
fidivrl
pop
test
cmp
sub
loope
fsts
and
rolb
in
js
insl
xchg
xor
cli
or
cltd
arpl
mov
sub
loopne
jmp
ret
jnp
aad
dec
dec
add
jbe
push
hlt
mov
outsl
sbb
fildll
push
or
mov
dec
gs
fistps
scas
xor
and
fldenv
or
add
or
adc
pop
xor
inc
or
or
or
aaa
mov
sti
mov
jle
jns
pop
mov
pop
lahf
test
mov
pop
flds
mov
std
pop
mov
pop
sub
pop
pop
add
ljmp
popa
sti
pop
ljmp
pop
orl
ret
push
mov
mov
icebp
lods
mov
stc
cmpsl
adc
into
popl
jbe
test
mov
mov
outsl
std
test
dec
stc
and
adc
ret
int3
ret
aad
das
xchg
cli
push
push
icebp
and
dec
add
push
clc
sar
add
or
fildll
movsb
leave
sbb
or
cltd
fldenv
decl
sub
mov
imul
cmpsb
loop
mov
xorb
lods
push
into
push
js
test
jecxz
pop
jge
inc
jns
push
sbb
inc
pop
subb
jb
push
cmp
pop
rorb
jg,pn
cmp
and
jmp
imul
inc
fldcw
fwait
call
dec
insl
insl
sub
mov
das
std
and
popf
in
push
clc
das
imul
pop
mov
inc
mov
testb
fbld
sbb
iret
ljmp
cmc
sub
cld
adc
inc
mov
sub
repz
or
sbb
cld
rcrl
aas
pop
sub
mov
jp
mov
stos
shll
xchg
and
xchg
call
movsl
insl
imul
mov
or
jnp
dec
xchg
loopne
gs
mov
jb
cs
cli
sub
or
jae
cld
or
in
push
add
pop
scas
shr
scas
add
mov
inc
fdecstp
mov
adc
xchg
sub
pop
inc
lret
mov
mov
jp
push
push
and
pop
fdivrp
out
xchg
mov
mov
dec
cmp
jne
aaa
les
call
push
mov
mov
dec
data16
fistpll
in
dec
leave
fdivr
inc
cwtl
inc
adc
mov
std
lods
xor
cmc
adc
loopne
sub
das
lret
iret
popf
pop
cld
xor
add
ljmp
inc
mov
ror
icebp
fbstp
inc
dec
or
inc
rolb
push
push
daa
push
mov
stos
dec
lds
dec
dec
shlb
sub
push
push
dec
lea
shlb
inc
fistl
clc
pop
mov
and
in
inc
mull
in
add
inc
test
xorl
ja
lds
inc
daa
jne,pt
call
push
aas
and
aaa
decb
and
in
icebp
sbb
sbb
lret
ficompl
fwait
jns
in
rcrb
xchg
cmc
leave
add
divl
mov
mov
js
call
cli
jg
xchg
xchg
xchg
sub
fstpl
xchg
xorb
inc
dec
leave
ffreep
xchg
pop
cmp
gs
push
adc
push
movsb
outsb
fdivrl
mov
aas
add
pop
push
sub
and
sub
nop
mov
incl
cbtw
sti
add
pop
in
das
in
pusha
pop
popa
popf
xchg
int
xor
pop
pop
leave
ret
pop
ret
mov
fucomi
or
pop
pop
leave
ret
dec
adc
adc
pop
pop
add
adc
pop
ret
nop
add
sbb
jg
notl
xor
aas
adc
nop
adc
inc
dec
dec
adc
add
cltd
insl
idiv
adc
inc
adc
inc
add
dec
inc
or
es
lods
push
push
or
and
and
jnp,pt
adc
or
or
or
fmulp
sbb
inc
dec
and
jge
fidivl
sbb
add
adc
movq
inc
or
jno
and
nopl
adc
fstp
in
jbe
add
nop
or
jbe
fcmovne
mov
push
mov
inc
ret
sbb
dec
or
mov
pusha
insl
or
mov
adc
in
lods
mov
pusha
addr16
adc
mov
mov
daa
negl
divl
std
adc
roll
pop
fisttpl
insl
and
dec
cwtl
cmp
cmp
inc
popa
stc
insb
imul
nop
nop
dec
pop
imul
sub
cmp
sbb
xor
sub
mov
push
flds
in
dec
add
incl
push
mov
add
movl
mov
mov
sub
mov
cmp
lea
stc
mov
or
not
sbb
xor
adc
ljmp
lahf
bound
fstpt
mov
cld
adc
lods
testl
mov
xor
push
or
not
neg
mov
mov
popf
mov
add
dec
inc
xor
mov
mov
aas
add
js
fidivs
cmpsl
cmp
pop
cmp
in
repnz
jae
sti
xor
mov
cli
mov
mov
push
add
mov
out
cld
dec
lods
or
lret
add
lock
xor
mov
fstps
adc
or
add
xor
xor
jnp
mov
inc
xor
inc
jne
outsl
mov
jne
xor
add
shlb
decl
and
insl
in
repz
inc
sbb
aam
xchg
mov
add
pop
mov
fstp
push
sbb
jmp
add
imul
repnz
dec
jne
xor
out
lds
jmp
mov
loope
montmul
cmpsb
pop
xor
les
add
cs
pushw
rep
aas
mov
sbb
or
popa
divb
dec
clc
inc
rol
inc
jge
out
mov
pop
repz
push
push
jl
push
loopne
imul
cmp
lret
notb
inc
or
push
in
or
xchg
gs
mov
neg
je
test
arpl
push
les
adc
mov
sub
add
push
bound
xor
pop
cmc
pop
jle
popa
lods
jne
pusha
sub
push
sbb
xor
adc
mov
mov
lock
mov
dec
andb
adc
sbb
dec
or
icebp
outsb
jbe
out
xchg
xor
mov
loopne
jg
in
add
mov
outsl
and
ret
gs
push
pop
add
and
add
and
in
mov
cmp
push
je
or
or
std
in
pushl
push
out
aad
cmpb
mov
sbb
sbb
add
push
test
xchg
clc
mov
add
repz
add
pusha
pop
mov
add
xor
in
mov
sbb
add
clc
push
mov
jecxz
xor
add
xchg
dec
divb
lret
cmp
ja
fsubs
add
xchg
sbb
add
add
inc
xchg
call
sarb
adc
mov
movb
sub
mov
mov
pushl
dec
dec
lea
pop
icebp
jle
jne
sub
test
add
stc
mov
std
fldt
pushl
jae
mov
push
iret
sbb
add
out
mov
mov
and
test
rorl
xor
mov
insb
in
out
xchg
or
push
xchg
sti
cmc
orl
in
inc
xor
adc
sub
inc
add
mov
add
loope
std
jmp
push
addl
add
pop
sbb
mov
sti
daa
out
jle
sub
cmp
movsl
inc
arpl
push
jb
aas
mov
shl
cmp
cld
fists
and
stc
rcll
jg
cmp
daa
rcrl
iret
mov
pop
clc
in
dec
scas
inc
stos
mov
pop
jge
push
js
add
faddl
and
pushf
add
and
and
add
push
pop
push
sub
add
pushl
cmc
dec
adc
lea
mov
add
jne
andl
push
in
icebp
push
loop
test
or
leave
lods
sub
xor
and
idivb
cltd
push
fimuls
int
aas
shl
dec
es
xchg
mov
sub
in
stc
addr16
shl
sub
addl
sub
lret
adc
loopne
addr16
cli
pop
outsb
cmp
xorl
jl
jmp
jbe
pop
adc
and
mul
pop
mov
mov
int3
sub
sbb
sbb
jae
xchg
mov
arpl
mov
mov
not
js
pop
pop
daa
xor
das
dec
mov
ror
lds
roll
out
out
das
nop
and
add
daa
adc
call
ficoms
ror
arpl
cld
outsb
aam
jmp
rcl
mov
loopne
scas
not
aaa
test
mov
lcall
pop
lea
and
or
repz
or
rcrl
push
cli
dec
jb
ror
repz
sub
fimull
scas
repz
rolb
shrb
mov
dec
and
or
jno
cmp
lods
dec
decb
loop
idivl
add
jbe
aaa
inc
loope
pop
imul
sbb
jge
dec
in
sub
rorb
sbb
aas
loope
mov
xor
shr
sub
fwait
loope
mov
ljmp
or
mov
rolb
test
push
mov
idivl
inc
jmp
outsl
push
sahf
sbb
lock
mov
jno
subb
mov
jge
inc
dec
add
cmp
jno
lock
repnz
jg
insb
out
pusha
mov
fisubs
sbb
inc
add
xor
pop
arpl
mov
mov
cmc
movsb
into
addr16
lret
leave
js
pop
fidivrl
sbb
sbb
mull
or
mov
out
add
pusha
adc
icebp
add
jmp
mov
add
arpl
int3
lahf
movsl
inc
cmp
punpcklwd
jo
cmp
int
shl
iret
pop
mov
lret
in
lds
insb
or
inc
and
pop
loope
and
das
call
repnz
divb
fisubrl
ret
jecxz
aad
aas
xor
inc
in
leave
clc
ja
or
xor
add
mov
fistpl
sbbl
in
adc
jb
loopne
fwait
adc
arpl
imul
fisttps
xchg
ss
int3
into
loopne
sbb
xor
pop
jecxz
stos
lcall
out
in
testb
add
ss
in
es
psubd
cmpsl
fwait
add
ljmp
addr16
icebp
pushl
jl
add
pop
ret
sub
int
idiv
sarl
test
not
bound
mov
add
add
into
inc
aad
orl
cld
pop
dec
les
fistps
push
repnz
icebp
enter
jo
hlt
out
push
sub
es
cmp
and
cmp
popa
mov
or
stos
ret
jno
clc
mov
frstor
icebp
lret
pop
and
jbe
imul
lods
in
mov
add
imul
inc
inc
add
jge
movsl
inc
sbb
sub
xlat
das
jno
call
or
cmp
push
sub
mov
jns
add
enter
or
push
adc
pushf
mov
or
pushf
push
insb
jb
pop
ret
in
lock
in
pop
pop
jo
les
sbb
push
mov
mov
popa
inc
adc
sub
fwait
sbb
outsl
dec
test
out
mov
pusha
mov
fnsave
jb
push
aad
cmpsl
clc
dec
imul
or
and
aas
inc
xor
fninit
add
mov
out
sub
sub
in
lock
in
aad
adc
cld
mov
mov
sub
sbb
jbe
xchg
add
xor
movsb
adc
dec
and
xchg
fcoms
jg
add
jo
pushf
cltd
inc
test
data16
es
pop
push
pop
arpl
insl
xor
jae
rcl
xor
lea
adc
sbb
xor
mov
add
addl
pop
daa
xor
xacquire
or
and
push
mov
jp
mov
rcrb
fcomp
mov
cmp
es
xlat
test
insb
or
fcoml
fadd
pop
jb
fildl
and
in
lret
pop
mov
mov
and
pop
jo
jne
aaa
add
fmull
iret
in
adc
and
jge
cli
cltd
cmp
movsb
mov
adc
dec
xor
data16
jg
sar
add
sbb
and
add
movsb
dec
ffreep
push
shl
inc
loop
mov
fdivrl
out
inc
lea
fildl
imul
push
push
mov
mov
xor
cmpsl
mov
sbb
insb
dec
fsubl
jg
stc
or
add
and
test
and
push
cmp
jl
fwait
sbb
inc
pop
out
mov
insl
fmul
jp
add
mov
inc
cmp
mov
adc
outsl
pusha
loopne
xor
inc
rorl
inc
sbb
sbb
neg
mov
sti
out
dec
fst
push
ret
pop
push
inc
lods
cwtl
aad
aas
and
or
dec
pop
xor
out
fcompl
pop
xchg
or
fiaddl
pop
stc
pop
out
repz
push
hlt
add
xchg
in
loopne
inc
xor
pop
dec
mov
pop
pusha
dec
sub
notb
push
mov
and
mov
fwait
add
rolb
sbb
nop
adc
sub
lods
xlat
les
cmpsb
les
or
lods
fwait
push
jnp
flds
adc
call
fs
jnp
sub
dec
cli
adc
or
pop
mov
pop
daa
into
dec
and
or
mov
mov
lcall
arpl
incb
ret
enter
cmp
and
push
js
jge
sbb
sub
cmp
sbb
cmpsl
and
mov
dec
outsl
into
fnsave
jge
into
cltd
or
js
xchg
sbb
mov
mov
enter
inc
popa
std
rorl
fdivl
mov
add
rol
mov
or
scas
jge
inc
and
push
mull
inc
xchg
jb
enter
push
mov
aas
jp
jnp
push
es
ret
jb
mov
pop
dec
sbb
cmpsl
or
jo
dec
pop
les
adc
addl
lea
cwtl
adc
in
cmp
jge
jle
xor
xchg
push
sbb
ffreep
mov
cld
data16
into
add
inc
mov
les
adc
xor
es
sub
js
xchg
test
pop
add
sub
pop
xchg
js
mov
jb
push
sar
fcmovu
sub
jae
lock
push
or
push
clc
push
mov
xor
sbb
loopne
add
lds
sub
js
inc
xor
aaa
sub
insl
cwtl
or
sub
inc
dec
or
enter
fsubr
leave
add
ret
sbb
out
lahf
decb
out
lret
jae
pop
jb
cmpsb
add
ljmp
push
inc
cmp
inc
sub
sbb
ss
cmc
xchg
add
cmp
xor
dec
or
in
in
or
xor
dec
push
clc
fsubrp
add
cmp
push
cmp
js
dec
sbb
add
fstps
insb
ds
sbb
pop
jnp
aad
mov
pop
inc
cwtl
sbb
mov
popf
outsb
cmpsl
push
xor
in
dec
out
xor
repz
jne
or
les
in
je
data16
out
aaa
pop
out
xor
xor
aad
cld
sbb
xchg
or
mov
dec
cmp
int3
add
imul
sub
pop
add
cmp
sbb
push
fstpt
test
lcall
ret
inc
imul
data16
sbb
int3
or
std
inc
aaa
fisubs
adc
aaa
push
push
fsubrl
sarb
or
cmp
lock
pop
mov
int
int
insb
lock
int3
pop
mov
push
fimuls
add
cmp
pop
ret
mov
push
testl
add
pop
aas
pop
lock
fcomp
xor
dec
sbb
sbb
or
lock
loope
ljmp
mov
and
adc
std
xchg
notl
inc
add
les
cmp
and
pop
std
aaa
sbb
push
xchg
xchg
into
sbb
pusha
cmp
mov
sub
mov
scas
dec
inc
push
mov
aas
outsl
je
out
or
add
movd
jmp
push
mov
mov
jnp
outsl
and
inc
movsb
fs
mov
dec
lcall
jecxz
call
xor
dec
mov
mov
xchg
outsb
fsubr
js
xor
hlt
imul
push
mov
imul
jae
push
jbe
jge
jecxz
lret
popf
pop
lock
je
pop
pop
mov
or
dec
adc
jno
add
inc
es
xor
fmuls
sub
rolb
sbbl
add
sbb
rorb
push
insb
xor
add
jbe
call
hlt
fcomps
mov
gs
ja
mov
aam
and
insb
and
mov
loope
or
add
jle
adc
dec
pop
out
pop
out
scas
dec
mov
pop
sub
xchg
jae
xchg
adc
and
pop
xchg
push
sbb
test
sub
push
rcll
les
xorb
ret
add
hlt
and
adc
xor
lock
int3
loop
fs
int3
xor
cmp
dec
or
mov
add
pop
mov
jmp
adc
or
adc
jp
add
fwait
mov
pop
repnz
shlb
fldl
rcr
dec
sub
or
mov
lods
mov
pop
in
sahf
ljmp
and
cmpsb
mov
mov
and
mov
aaa
xor
lock
or
scas
lods
int3
add
and
mov
adc
adc
rorl
cmp
dec
dec
inc
mov
xchg
xor
xor
cwtl
sbb
rcl
inc
popl
testl
jle
mov
rol
imul
insl
shrl
xor
loop
or
testb
in
pop
lea
rol
outsb
jcxz
jns
stos
or
movsl
ret
test
push
pop
mov
cmp
ja
mov
xchg
and
pushf
gs
inc
test
or
cmp
xchg
add
mov
scas
in
add
inc
mov
ret
jne
push
xchg
and
adc
sbb
into
out
adc
shl
and
xchg
mov
sbb
push
push
jmp
bound
adc
xchg
add
xor
cmpsl
mov
ds
outsl
push
imul
cwtl
rorb
jno
adc
pop
outsb
pop
filds
jmp
mov
cmc
lcall
imul
fsubp
dec
pushf
mov
jmp
inc
jmp
push
sub
adc
pop
ljmp
or
or
daa
cmp
lock
xor
sub
sbb
ja
icebp
cli
push
pop
cmpl
in
out
mov
jb
sbb
jmp
out
pop
cmp
xorb
insl
nop
cwtl
ret
aad
add
add
data16
test
sbb
xor
xor
sbb
xor
cmp
xlat
inc
clc
les
cmp
jae
fld
addl
pop
adc
mov
dec
mov
adc
push
stc
pop
sub
rcl
aad
xchg
add
dec
inc
sbb
mov
mov
sbb
dec
icebp
push
jge
and
out
fdivrs
sub
lret
lock
lea
jb
sbb
mov
lock
addr16
jg
sbb
jmp
xchg
in
aas
inc
out
lock
aam
cmpl
out
sbb
imul
aas
adc
jno
adc
addr16
stos
and
subl
jl
adc
and
or
or
or
js
dec
fnstenv
sbb
test
jb
pop
ja
jne
insl
je
rcrb
mov
mov
inc
adc
das
mov
into
sub
dec
ret
inc
lods
pop
inc
out
inc
dec
sbb
xor
movb
cmp
mov
adc
sub
sub
imul
sbb
sbb
ret
sub
xor
and
fldl
loope
lret
or
add
flds
jg
mov
not
pop
jge
fistpl
shll
mov
and
xor
or
mov
and
int
shlb
mov
dec
movsb
pcmpgtw
push
cwtl
push
jne
sbb
add
movsl
xchg
bound
fdivrl
xchg
mov
add
pop
xor
sub
test
inc
insb
mov
inc
mov
popa
mov
outsl
dec
sbb
add
adc
sbb
mov
fisubrl
fimull
jae
pusha
into
mov
aas
mov
ret
dec
out
xor
pop
loop
and
std
dec
loop
pop
inc
dec
xor
add
inc
lret
jle
jecxz
mov
xchg
cmp
sbb
xchg
fists
sub
sbb
cli
sub
jne
sub
popa
inc
and
jne
addb
mov
xor
clc
cmp
test
jne
rolb
in
setne
sbb
ret
jmp
andps
push
stos
cmp
sub
mov
es
fildll
adc
int
mov
mov
ljmp
adc
jae
int3
inc
subb
bound
cltd
andl
mov
jl
in
add
add
jp
cmpsb
hlt
cmc
enter
scas
xlat
insb
mov
fcoml
xor
push
nop
jle
sub
popa
adc
xor
or
loopne
hlt
cmp
sbb
sub
sub
cmp
jbe
into
ja
xor
popl
fistpl
and
mov
lock
or
xchg
out
mov
ja
cmp
add
xor
es
into
or
xchg
or
pop
int3
xor
insb
cmpsb
mov
fiaddl
add
jp
out
das
shlb
les
lahf
xor
icebp
lahf
jbe
adcl
push
mov
inc
push
inc
jmp
out
push
fbld
loopne
or
fsubl
repz
push
xlat
pusha
dec
std
pop
xchg
add
adc
jg
rorl
jecxz
xchg
inc
shlb
inc
sbb
pop
lods
and
dec
ja
sbb
loop
lahf
xchg
sbbl
add
movsb
lahf
sub
mov
mov
pop
add
add
inc
or
pop
aas
cltd
fiaddl
add
pop
xchg
icebp
cld
ss
addr16
stos
inc
mov
cltd
and
mov
in
aas
clc
decb
cwtl
repnz
mov
jmp
add
add
lods
loope
insb
add
jne
adc
jno
fwait
push
cmp
mov
into
mov
dec
mov
arpl
int3
sahf
cld
int3
cmp
lret
roll
stos
rep
daa
and
jo
jp
loop
pusha
inc
filds
mov
or
push
jp
add
out
cmp
dec
test
aaa
jmp
cld
pop
mov
ret
in
xor
mov
push
mov
add
rol
test
dec
jns
dec
and
mov
pushf
jecxz
push
and
int
scas
push
inc
fistpll
mov
cmp
mov
fidivrs
add
notb
add
fisubrs
push
shll
xchg
rol
add
je
ja
shrb
aad
int
out
out
and
and
mov
int
jb
icebp
inc
xchg
fimuls
mov
add
or
mov
inc
xor
imulb
inc
mov
mov
shrl
xor
jl
mov
push
lret
xbegin
in
xor
add
push
scas
inc
pop
lcall
jmp
inc
mov
push
lea
imul
or
inc
cmp
std
in
push
lea
push
pop
push
inc
cmp
sub
sub
push
add
lcall
jno
jmp
imul
sub
xchg
pusha
and
jno
sub
das
shr
aaa
fildll
pop
loop
mov
and
inc
or
mov
in
scas
lock
sbb
mov
fidivs
jge
test
jnp
shr
lds
cmp
jecxz
jl
inc
mov
fcomp
cmpsl
int
xor
jmp
mov
push
mov
shlb
xor
jb
imul
push
push
bound
cmp
setp
cmpsl
adc
in
xchg
inc
lods
cwtl
xor
adc
adc
adc
daa
xor
adc
mov
add
je
and
ljmp
sub
test
jne
popa
inc
lcall
nop
test
insb
leave
addb
xor
sub
push
pop
cmpb
jne
sub
loopne
iret
lock
or
mov
data16
jmp
imull
adc
jbe
daa
pushf
and
das
fisubs
scas
mov
filds
pop
sub
dec
dec
xchg
clc
jae
lret
in
sbb
std
or
adcb
cli
mov
lods
fadds
fisubs
hlt
bound
out
sub
push
mov
add
aad
add
push
push
push
ficomps
rcr
je
sbb
or
inc
dec
cmp
push
mov
es
push
daa
enter
or
dec
ret
or
popf
xor
loop
xor
pusha
mov
adc
add
mov
imul
mov
sar
xchg
sub
sbb
lcall
inc
push
and
sbb
icebp
inc
sti
jne
pusha
loope
xchg
sub
sarb
mov
mov
clc
rol
xchg
sub
cmp
inc
jge
addr16
jae
clc
lret
pop
mov
or
sbb
es
addl
cmp
cmpsl
js
stos
push
cli
test
jecxz
mov
add
insl
and
pop
xor
and
ja
aam
movsl
movsl
inc
incb
popw
sbb
xor
jge
adc
gs
xor
cmpsb
les
or
jge
jo
or
inc
xlat
and
addb
lock
loop
lcall
mov
cmpsl
rorl
xor
je
cmc
icebp
or
mov
or
push
add
or
in
sbb
pop
sbbb
add
cmp
in
loope
psraw
out
push
mov
es
sbb
mov
orb
enter
dec
push
and
xchg
or
cmp
dec
cmpsb
add
sahf
dec
and
data16
fadds
gs
cli
rcr
stc
nop
xor
or
jno
enter
mov
sub
adc
rolb
push
loope
and
and
ja
jg
or
jno
fisttpl
mov
stos
or
mov
out
bound
jge
dec
adc
adc
push
in
dec
pushl
add
sbb
adc
test
adc
or
xor
add
mov
cli
add
ja
and
arpl
push
dec
cltd
pop
ja
cmp
test
push
and
inc
test
dec
test
std
int3
fwait
jo
jo
lret
sbb
out
ret
lret
and
dec
inc
loop
lods
popa
jo
movsb
mov
and
mov
dec
sbbb
loop
inc
sbb
loopne
je
out
movsl
push
popa
lcall
es
push
add
shll
xor
sti
cmc
mov
fs
repnz
call
in
inc
mov
sti
adc
es
sarb
push
cmc
sub
add
pushf
jae
xchg
mov
ret
cwtl
inc
ss
sbb
fisttps
dec
inc
in
xor
xor
inc
sbb
xor
test
fcoml
push
mov
or
shll
les
repnz
fadds
filds
pop
out
and
test
jne
pop
popa
pop
or
roll
out
inc
mov
push
dec
in
mov
shll
iret
cmp
sub
or
loope
cli
repz
add
or
arpl
lret
bound
jo
adc
lods
adc
test
sbb
subl
or
add
into
add
xorl
sti
orl
or
movsb
imul
mov
mov
add
or
enter
out
pusha
rol
adc
jecxz
daa
sbb
xchg
xchg
adc
mov
ja
inc
aaa
movsl
daa
nop
ja
cmp
jne
and
out
js
out
roll
insl
pop
test
and
and
stc
add
add
nop
out
mov
add
or
mov
mov
adc
pop
ljmp
dec
cwtl
xchg
cmp
movsb
and
andb
xchg
test
int3
sub
test
movl
jbe
push
lods
sbb
push
test
and
xor
pop
mulb
mov
je
xchg
mov
push
mov
mov
stos
mov
fimull
dec
cwtl
mov
rcll
into
mov
xchg
inc
hlt
jb
jbe
push
xor
cmp
sbb
scas
imull
xor
mov
loop
ret
test
inc
movl
jg
mov
push
inc
adc
mov
test
fsubr
pushf
ret
test
xchg
stos
mov
mov
sub
sub
addb
dec
flds
in
mov
inc
stos
pop
lock
sbb
test
call
imul
inc
sub
sub
fisubs
pop
cwtl
jo
ret
adc
sbb
es
aad
jl
mov
sub
enter
or
xor
popf
ja
das
outsl
jb
xchg
clc
shll
or
or
test
ja
aaa
cmp
cli
ss
or
js
addl
adc
pushf
adc
push
jbe
in
repz
adc
push
and
movsb
or
push
popa
in
pop
pop
mov
addr16
iret
and
inc
jne
inc
mov
icebp
jmp
test
lods
or
xchg
inc
in
es
xor
sub
in
gs
and
mov
fwait
pushf
sti
sarb
ljmp
or
ss
jg
gs
push
testl
loope
lret
neg
sub
jge
imulb
test
je
das
or
lods
roll
add
jo
sbb
sub
add
push
fcomip
sub
sub
and
addb
addl
divb
xor
addr16
push
addr16
shrl
xor
sbbb
hlt
ficomps
fwait
mov
mov
add
jae
mov
fsts
stos
sbb
jge
add
std
or
daa
mov
xor
cltd
aas
sbb
adc
lcall
shrl
rolb
fiaddl
cmp
das
mov
and
inc
or
push
inc
loop
hlt
out
cmp
ret
push
fwait
enter
lcall
sub
cmpsb
mov
xchg
push
and
bound
das
sbb
stos
xor
arpl
icebp
aaa
mov
cmp
into
inc
idivl
stos
lods
or
inc
dec
aaa
jne
ret
xor
aad
push
sar
push
adc
loopne,pt
test
clc
sahf
xor
mov
dec
sub
xchg
inc
fimull
add
mov
rcrb
stos
xchg
xchg
lock
push
test
jne
mov
in
sub
jp
imul
std
aas
icebp
adcb
pushf
cmp
cmp
sarl
es
fsubl
cmpsb
je
push
call
std
or
dec
popf
dec
mov
ret
or
cltd
fdivr
xor
mov
push
imul
bound
hlt
fiadds
das
mov
xor
push
shrb
aaa
js
xorb
mov
cld
cmp
inc
rcl
js
jnp
or
xor
mov
je
push
inc
inc
dec
popf
jle
pop
adc
pusha
test
sub
iret
fs
rcrl
arpl
sar
dec
ret
xor
add
add
xor
ds
pushl
add
enter
cwtl
int3
push
inc
aas
imul
lahf
test
js
test
push
inc
mov
jnp
test
add
std
sub
push
mov
pop
mov
addb
xchg
lahf
add
xor
cmp
mov
pop
add
cmp
mov
lret
sbb
push
add
add
das
add
addr16
lcall
and
mov
jg
add
or
and
sti
fbstp
xchg
addl
addr16
add
add
popf
mov
scas
les
dec
fld
ja
and
push
loopne
cmp
rolb
add
jle
mov
inc
fnstenv
repnz
aad
nop
or
mov
xchg
insl
insb
pop
lock
std
decl
hlt
push
mov
fs
sub
std
mov
and
dec
mov
out
xor
pop
or
int
and
iret
push
lret
pop
mov
cmovl
sti
fcomps
das
rolb
push
add
adc
lcall
call
jbe
mov
xchg
sbb
out
and
pop
out
fs
mov
in
movsl
sub
filds
movsb
stos
jmp
push
loop
andb
mov
sbb
ds
clc
incl
dec
add
in
sub
out
mov
mov
lret
mov
incl
aad
pop
stc
inc
xchg
ror
nop
fiadds
mov
call
ds
add
jae
adc
mov
adc
test
or
cmp
jp
cmc
push
imul
xchg
pop
arpl
adc
test
mov
and
mov
xor
sahf
scas
cmp
push
mov
fcmovne
jg
sub
shlb
aam
lock
test
movzbl
adc
or
insb
push
stos
inc
enter
loope
rclb
jecxz
ja
and
decl
mov
xor
mov
cmp
fnstsw
pop
in
push
aaa
lret
jnp
add
int
mov
lods
loop
mov
fstpl
movsl
pop
cld
sbb
inc
push
imul
jl,pn
cld
and
das
dec
pushf
and
pop
and
outsb
or
pop
fcompl
hlt
add
hlt
sbb
mov
sarb
sbb
fucom
sbb
xlat
mov
mov
push
mov
adcl
les
les
les
inc
pop
and
stc
cmp
loopne
push
loope
mov
adc
adc
ljmp
xchg
mov
inc
xor
mov
imul
hlt
adc
mov
push
mov
hlt
rclb
adc
shrb
int
push
dec
les
adc
jae
fwait
hlt
push
push
fisubs
pusha
mov
pop
cmpsl
bound
jne
dec
imulb
bound
xor
xor
int3
xchg
jbe
mov
or
repz
mov
shr
out
mov
add
sbb
sbb
aaa
imul
shlb
cmpsb
sbb
cwtl
mov
imul
pop
mov
inc
cs
xlat
repz
push
rolb
jle
xor
cmc
sti
arpl
out
repz
or
or
js
inc
mov
into
test
call
add
les
fwait
loope
rorl
loope
fbstp
dec
jne
add
adc
inc
movsl
call
fidivrl
or
push
lods
out
out
cmp
adc
jmp
orb
or
test
loop
inc
mov
test
push
jne
push
mov
xor
aas
jge
in
in
sub
lds
sbb
mov
rorb
dec
add
mov
stos
hlt
inc
out
mov
jne
cmpsb
js
dec
int3
in
ret
shll
jg
roll
mov
rolb
dec
dec
jmp
adc
jne
scas
fimull
cmp
sub
mov
ja
mov
and
inc
dec
dec
pop
outsl
pop
push
jecxz
xchg
adcb
inc
cmp
and
aas
ret
mov
call
push
sbb
call
mov
addl
mov
in
call
orb
inc
test
mov
inc
call
inc
fs
popa
mov
xor
cli
xor
dec
inc
xor
add
dec
mov
ds
test
sti
xchg
aaa
jno
popa
inc
ret
xor
add
sahf
sub
dec
sbb
mov
sahf
scas
loop
sti
and
pop
adc
sub
xchg
adc
pusha
pushf
push
popf
mov
rolb
loope
call
sbb
lds
das
xor
inc
add
add
clc
inc
push
ja
pop
lock
push
and
and
ljmp
bound
add
mov
clc
xchg
and
cmp
gs
inc
aam
popf
sbb
sub
dec
js
js
jmp
enter
enter
cs
or
mov
mov
shlb
sarl
clc
les
xor
cltd
and
xlat
jns
inc
movsb
pop
mov
icebp
and
cmp
lds
daa
mov
push
pop
out
xor
pop
cmpsl
bound
insb
dec
dec
pop
aam
movsl
sbb
in
jae
rcrl
shrl
test
sti
testb
testl
shrb
push
jle
dec
aad
cmp
das
loopne
xor
dec
fstp
fs
test
xlat
inc
xchg
cmp
arpl
inc
adc
lods
sbb
mov
int3
cmp
inc
mov
pop
out
popa
test
xchg
mov
dec
sbb
or
push
dec
sarl
popf
lcall
fdivrp
xlat
jns
cmp
imul
lcall
cmp
iret
sub
sub
xor
and
mov
call
mov
dec
push
adc
xchg
jmp
and
sub
mov
bound
pusha
and
data16
jbe
sub
aam
push
dec
add
sbb
in
ja
lret
xor
add
push
push
pop
orb
add
mov
test
jb
shlb
call
dec
pop
orl
mov
mov
sub
inc
xchg
xchg
xchg
jnp
add
stos
sub
jbe
sub
es
xchg
jo
sbbl
jl
pop
mov
jle
cmp
push
cmpsl
fldcw
adc
int
ret
cmp
in
and
jmp
mov
sub
jno
inc
jb
mov
das
dec
les
pop
imul
sbb
adc
rolb
cmp
xor
jno
and
js
xchg
movsl
imul
in
insl
test
sub
jge
pop
mov
fidivl
mov
data16
mov
mov
add
cmp
rclb
xchg
jl
loope
pop
push
ret
or
loope
adc
jg
xchg
jbe
mov
fwait
sub
jo
inc
dec
mov
lock
add
sub
sub
dec
push
loopne
mov
fchs
cltd
rcrb
clc
mov
adcb
jno
in
cmp
adc
lds
inc
mov
mov
je
call
pop
mov
dec
test
das
cmpsl
add
mov
or
push
rorl
mov
or
xorb
and
push
adc
mov
cmp
inc
inc
pop
lds
lea
out
inc
hlt
sub
enter
js
ret
hlt
xchg
es
adc
jno
scas
ljmp
push
in
push
fs
leave
in
aad
pop
vpcmpeqw
les
adc
addr16
add
es
dec
sbb
test
sbb
mov
cmp
cmp
push
or
lods
test
inc
xorb
cmp
hlt
test
inc
jb
les
and
addl
test
ljmp
add
pusha
fmul
sub
xchg
out
sbb
sbb
push
incl
insl
pushf
cmp
loopne
mov
pop
aaa
sub
cmpsl
repz
push
inc
mov
lret
pusha
repnz
and
and
cmpsl
and
stc
and
xchg
sbb
mov
xchg
divb
mov
adc
hlt
inc
inc
je
mov
ss
adc
add
subb
cmp
filds
cmp
pop
in
int
pop
lret
stos
jne
xor
jne
int3
adc
inc
iret
mov
sbbl
mov
jge
leave
test
rolb
cmp
ret
dec
pop
das
cli
push
aam
mov
or
es
and
xchg
stos
loopne
sub
insb
pop
or
in
push
repnz
xor
xchg
add
dec
add
or
call
sbb
stc
adc
cli
add
xchg
mov
push
dec
fsubs
mov
hlt
test
adc
std
sbb
adc
sbb
cltd
addb
or
sbb
jmp
testb
push
add
shlb
pushl
mov
inc
lcall
popf
inc
or
dec
add
mov
std
call
jmp
cli
inc
add
fcoms
inc
movsl
push
int3
add
ljmp
ljmp
add
push
mov
xor
add
lcall
loopne
idivl
push
cs
jne
es
int3
sbb
jmp
clc
int3
lret
xchg
mov
xchg
bound
dec
inc
fcoms
incl
inc
add
pop
add
mov
rcll
sub
add
sti
icebp
xchg
jbe
fbstp
roll
dec
ss
or
add
sti
jg
shld
xchg
insl
imul
shll
and
data16
fistpll
fs
or
mov
loope,pt
jl
add
jmp
mov
roll
lcall
xor
sahf
rcrl
adc
imul
add
mov
bound
and
test
sub
jl
push
add
add
daa
repnz
lea
jmp
mov
pop
adc
je
add
and
add
ljmp
pop
jp
icebp
movsl
mov
mov
add
add
test
faddl
incl
lock
and
push
xchg
lods
lahf
addl
pop
cmp
add
fldl
nop
sbb
ss
cwtl
mov
idiv
xchg
insb
mov
ret
push
or
sbb
pop
loopne
aam
xchg
add
xchg
xor
stos
adc
push
fwait
mov
adc
inc
ja
fwait
xor
mov
flds
shll
adc
lds
or
mov
divb
pusha
gs
inc
jl
fistpll
and
outsb
push
xchg
mov
inc
or
mov
cltd
push
mov
test
ficoms
mov
iret
loope
xchg
push
jle
pusha
mov
cmp
adc
xchg
cltd
out
adc
in
jecxz
mov
xor
cmp
hlt
xor
push
cmp
or
jnp
adc
push
cltd
jo
movsb
push
sarl
adc
or
icebp
jns
cmpsb
fwait
jmp
mov
or
adc
cwtl
add
outsl
das
cld
in
gs
or
pop
xorb
mov
ja
das
xchg
sbb
dec
mov
push
mov
and
inc
rcr
adc
in
adc
aam
cmc
int3
xchg
mov
out
lods
sub
mov
andb
fxch
test
push
icebp
lock
jg
lods
gs
cltd
push
adc
ret
test
push
mov
pop
jecxz
lcall
add
hlt
fisubs
js
aaa
or
pop
js,pt
mov
dec
fdivrl
movsb
inc
adc
das
daa
test
mov
mov
ja
adc
das
cld
popl
mov
add
inc
mov
ret
mov
addr16
inc
jmp
imul
xchg
jle
popa
iret
dec
in
pop
outsl
aaa
lock
js
orb
decl
cli
pop
cltd
cwtl
pushf
test
addb
leave
nop
inc
xor
pop
sub
mov
cmpsb
sub
cmp
clc
test
add
mov
sbb
sub
pop
sbb
idivb
lret
das
inc
bnd
pusha
mov
pop
xor
push
push
shlb
lock
sti
push
add
imul
xchg
nop
and
inc
and
clc
push
in
mov
add
jmp
out
or
mov
cmpsl
test
adc
popf
andl
pop
mov
lods
nop
dec
xchg
or
add
xor
mov
xchg
or
adc
xchg
jb
push
lods
cli
sbb
cmp
and
xor
or
mov
ror
mov
adc
lds
std
sbb
pop
cmc
push
and
test
adc
xchg
les
ja
pop
dec
xorl
test
scas
test
loope
outsl
shr
dec
pushf
fcmovnu
sbb
pop
rol
imul
push
roll
xor
jmp
ss
ds
push
subb
push
test
das
xor
add
mov
xchg
scas
xchg
stos
lds
pop
jmp
push
push
mov
imul
outsb
jo
dec
imul
add
dec
iret
add
in
fdivrl
add
and
dec
fwait
sub
mov
mov
data16
push
mov
test
mov
jmp
test
xchg
outsl
shrb
push
gs
jl,pn
pop
mov
mov
jg
sti
aad
sub
inc
cld
inc
xor
scas
ret
aaa
mov
inc
mov
sarl
cwtl
mov
int
fdivp
pop
push
jge
adc
icebp
shrb
adc
xor
pushl
sub
add
ret
rcll
daa
or
mov
hlt
mov
inc
dec
fadds
mov
pop
sbb
pop
test
lock
lea
bound
add
insl
lods
xchg
ss
dec
in
sahf
test
cwtl
jo,pt
call
fistl
movsb
inc
inc
sbb
and
add
xlat
lahf
fwait
push
or
pop
mov
stos
aaa
xor
mov
jl
adc
and
repnz
mov
xor
push
inc
inc
aas
inc
jo
sti
jge
pushl
mov
cmp
test
mov
push
xor
push
sbb
ds
popf
add
movsl
pinsrw
jne
rcr
clc
aas
rorb
xchg
or
or
push
adc
test
call
xor
rorl
int3
pop
pop
arpl
ljmp
cmp
fldl
testb
scas
mov
xlat
int3
ss
sbb
arpl
ds
push
pop
or
subl
inc
mov
ficomps
or
ds
icebp
push
mov
or
sub
fcoml
fistpl
xor
inc
js
mov
ret
add
aam
pop
addr16
sti
loope
inc
push
xchg
sbb
pop
imul
xor
mov
or
push
sub
inc
inc
mov
dec
xor
cmp
jno
fmull
outsl
fwait
cmp
cltd
mov
pop
test
mov
in
idiv
lahf
sbbl
xchg
xchg
cmp
pop
add
fmull
sti
mov
mov
push
add
das
icebp
pop
clc
sub
add
data16
xchg
jge
jbe
add
pop
in
xchg
aam
lcall
call
cmp
inc
mov
sbb
push
sbb
dec
rolb
jnp
shrb
push
xor
sti
dec
or
add
lock
sub
movsb
shlb
mov
sub
jl
inc
mov
pop
fsubr
mov
cli
cmp
or
shlb
fildll
sub
mov
mov
mov
mov
xor
int3
jb
movsb
push
pop
ss
mov
adc
icebp
mov
mov
xor
cmpsb
inc
push
lcall
xor
jae
xor
add
ret
jg
rcr
adc
or
pop
jecxz
mov
ljmp
push
inc
jo
or
jg
mov
xor
cltd
imul
lcall
dec
out
add
lret
sbb
pop
out
push
dec
add
pop
test
aaa
pop
test
jl
push
fidivrs
push
pop
xor
mov
aas
and
xor
fsts
out
rcr
in
lcall
mov
xchg
rcrb
push
mov
lock
mov
fidivl
pop
add
roll
jne
cmpsl
ljmp
or
loope
lock
rcll
xchg
lds
and
loopne
push
loopne
jmp
add
mov
lock
stos
in
jae
cmp
sti
arpl
aaa
cmpsl
push
fsubrs
push
in
pusha
int3
pop
adc
adc
iret
inc
scas
es
lods
jp
in
sbb
cmp
sbb
xchg
push
test
adc
lds
out
aam
lret
das
mov
pop
xchg
lock
stc
mov
jbe
fmuls
lcall
fcomp
or
fwait
or
stc
fstps
mov
adc
lods
pop
mov
add
movsl
cmpsb
xorb
andb
pop
cmpb
ss
stos
inc
dec
shll
adc
pop
fadds
mov
cmp
inc
shlb
push
popf
push
ss
cmpsl
idivl
in
daa
adc
add
xor
insb
jp
dec
cli
imul
jo
ret
repnz
hlt
aaa
adc
jne
xor
dec
push
cmp
aam
ret
xchg
aad
ljmp
push
fcomi
popa
jo
and
test
inc
cmp
aam
add
dec
sub
or
adc
cltd
or
out
adc
stc
sbb
pop
pop
pusha
dec
add
pop
cmp
loop
arpl
push
dec
sbb
mov
fbld
add
loop
loope
xor
lret
pop
add
test
aas
sbb
fstpt
adc
xor
pop
lret
mov
gs
xchg
cld
add
mov
lods
pusha
mov
sub
and
pop
in
adc
imul
add
aam
imul
test
mov
mov
faddl
mov
out
out
mov
mov
adc
and
push
cmpsl
inc
mov
gs
cmp
addr16
inc
xor
ds
test
sbb
adc
xchg
inc
add
fistpll
rorb
jge
leave
sbb
stos
sub
add
popf
getsec
jae
dec
sbb
inc
dec
scas
popf
xor
out
sbb
fldl
or
mov
or
arpl
lcall
sti
fs
enter
sbb
jge
fwait
mov
adc
pop
sti
adcb
cld
or
cmp
push
shr
xor
fmul
movsb
mov
cmp
and
cwtl
sub
lcall
dec
xor
cmpsl
or
sti
data16
or
dec
mov
icebp
push
cmp
fwait
es
idiv
inc
sbb
push
mov
stos
out
int
push
inc
adc
inc
js
inc
adc
and
pop
xor
fwait
daa
into
sub
shlb
loop
out
xchg
aad
or
lea
pop
subl
loop
fistl
sub
pop
mov
pop
insb
imul
jnp
jnp
xor
pop
mov
addl
out
and
or
lds
cmp
or
xchg
stos
out
and
mov
xchg
inc
rcr
dec
xor
data16
decb
and
pop
xor
mov
adc
lret
hlt
adc
inc
jmp
fidivl
sub
js
xor
ret
mov
aam
sbb
add
or
scas
jmp
dec
fildll
mov
push
jne
lds
xchg
lds
std
pushl
push
decl
xor
xchg
scas
mov
sbb
pop
cld
inc
mov
add
jp
inc
mov
xchg
push
cmc
ljmp
decl
les
inc
pop
add
inc
and
arpl
adc
fldt
das
jge
fs
fs
pop
ds
dec
aas
inc
call
sub
fistpll
push
add
and
sbb
push
cs
jne
add
fbld
and
jmp
or
mov
faddp
add
inc
in
pop
add
insl
or
and
inc
or
add
test
mov
push
mov
incl
inc
and
pop
dec
lret
jb
mov
push
jle
push
dec
enter
add
mov
test
xchg
decl
fists
loop
add
inc
aad
je
lea
negl
aam
decl
sub
shlb
cs
and
stc
cmp
scas
pop
mov
imull
leave
cs
movsl
mov
test
sbb
add
das
cmc
add
subb
mov
insl
ljmp
ss
xorl
lock
call
andb
mov
sbb
sbb
daa
dec
push
adcl
data16
out
outsl
xchg
xor
fstpt
test
xor
adc
adc
lret
jg
and
inc
bound
clc
cltd
mov
and
test
sub
mov
jne
dec
out
or
adc
mov
fwait
ljmp
fnstenv
lea
in
test
sub
pop
lcall
xor
test
data16
inc
sbb
popf
inc
lock
jg
ret
ret
iret
movb
sbb
sbb
add
les
addr16
mov
test
daa
pop
lcall
jle
dec
xchg
sub
divl
add
inc
leave
mov
leave
mov
mov
xor
sbb
sbb
popa
mov
or
adc
clc
incl
mov
es
pushf
clc
dec
xor
mov
or
jmp
mov
fisttps
mov
or
mov
and
adc
jge
pop
das
in
outsb
xchg
addr16
or
clc
jb
sbb
mov
cmp
ljmp
cmp
lcall
pop
lret
push
dec
sub
stos
adc
call
sbbl
cmp
js
mov
ret
roll
push
stc
hlt
push
insb
idivl
insb
mov
cmp
lcall
cmc
fisttpl
fbld
sbbb
xor
aaa
outsb
outsb
xchg
dec
jnp
mov
jp
sub
adc
in
js
ret
popf
pop
insl
scas
mov
in
jge
repz
testb
mov
in
call
enter
push
lahf
xchg
aaa
pop
cmp
push
adc
sub
pop
shrl
jg
and
jo
inc
and
or
inc
mov
add
out
xchg
inc
and
cli
xchg
dec
lods
cmp
iret
addl
inc
add
fisttpl
pop
cltd
jle
mov
insb
xor
add
call
test
sub
aas
repnz
sar
int3
or
test
or
jmp
das
pop
inc
sbb
jge
loop
divl
shlb
sub
and
aam
lcall
roll
adc
jns
cwtl
in
sbb
ljmp
test
and
mov
add
pop
jp
repnz
xlat
or
jge
pop
cmc
hlt
sbb
mov
jg
dec
add
xor
sarl
cmp
imul
scas
in
xchg
adc
sbb
subb
out
daa
sbb
adc
or
and
sbb
sub
jecxz
push
movsl
add
es
aam
out
addr16
arpl
gs
and
int
adc
pop
or
movsl
and
fcomip
lods
stos
in
add
xchg
fisttps
jg,pn
mov
xchg
dec
push
ja
and
icebp
test
adc
lahf
dec
jno
pop
orb
jmp
arpl
incl
jbe
xchg
scas
stos
or
sub
leave
cmpsb
in
push
mov
mov
testl
rolb
outsb
sbb
std
or
es
adc
xchg
xor
inc
rcrl
lea
addl
jg
xchg
lret
rcrl
pop
jle
inc
sbb
cmp
add
mov
or
push
sub
push
add
out
nop
mov
pushf
std
cmp
sub
xlat
add
test
mov
jle
jl
arpl
stc
lds
pop
sbb
dec
push
push
add
push
mov
cmp
jmp
xor
cmp
lods
loop
out
lahf
test
lock
adcl
out
les
loopne
jle
js
and
loop
dec
das
mov
test
push
dec
inc
loope
lock
pop
add
jmp
ret
cmp
scas
pop
loopne
adc
mov
sbb
or
std
fwait
xchg
cmpsl
xor
int3
sub
pusha
faddp
add
xor
jg
sub
nop
subl
rcrb
push
sub
sarb
or
addr16
rolb
jbe
ss
xchg
xchg
jmp
xchg
or
mov
inc
ljmp
out
addl
xchg
lret
mov
addl
dec
add
pop
xchg
mov
aaa
fcoml
xacquire
loop
leave
fnsave
aam
xchg
fstl
jns
test
aad
mov
or
push
jg
ds
call
out
pop
pshufw
inc
dec
daa
and
mov
iret
outsl
popf
pushf
pop
push
push
xchg
jne
mov
fadd
add
fists
icebp
add
xchg
rcll
dec
std
mov
and
leave
pushf
cli
rcrb
sub
dec
ret
lahf
and
pop
mov
outsb
sbb
xor
imul
das
rcrl
divb
pushl
call
mov
les
stc
jmp
cmp
sub
and
lcall
mov
fmull
into
sub
push
pop
loopne
aaa
cli
adc
nop
dec
push
push
cltd
inc
or
lret
or
fildll
inc
enter
cmp
lock
sbb
loope
rolb
add
adc
inc
xor
jno
maxps
inc
jmp
mov
pop
pop
inc
sub
mov
adc
lret
das
pop
arpl
xor
div
jo
pop
clc
sub
lods
mov
cmp
mov
adc
sub
bound
test
pop
dec
addr16
clc
and
test
inc
xchg
test
roll
je
add
xor
mov
ret
int3
js
test
mov
call
rclb
incl
sub
sub
mov
inc
adc
ja
pop
jle
or
call
mov
xchg
in
add
fnstcw
pop
adc
pop
mov
or
lahf
repz
or
arpl
or
rcr
and
xchg
repz
stos
int
bound
sub
xchg
pop
cmp
push
sahf
in
das
sar
jbe
sbb
jle
icebp
xchg
dec
gs
mov
adc
or
data16
inc
ss
pop
xchg
out
jecxz
stc
and
jg
arpl
fcomp
add
and
pop
cmp
jecxz
dec
notl
or
clc
xchg
subl
das
push
adc
lods
test
call
sbb
push
pop
mov
rcl
addr16
out
in
mov
jl
movups
fidivs
nop
shl
mov
in
imul
or
sbb
adc
stos
pop
or
jge
fsubrs
sub
or
push
and
sub
insl
cld
sete
fbstp
xor
fbstp
push
outsl
push
rolb
fistps
scas
mov
loop
xor
or
or
jle
roll
std
movl
or
cli
fistpll
sbb
filds
stc
mov
dec
jnp
fcmovnu
xchg
sub
hlt
cmp
push
test
je
push
cmp
inc
cmp
nop
cld
and
and
push
or
cld
aaa
xlat
fistps
mov
lds
in
roll
mov
inc
jmp
and
add
cmp
and
in
xchg
or
ret
in
inc
lds
push
rcrb
inc
in
int3
aad
lds
xor
and
mov
aaa
xor
call
add
out
ljmp
jnp
sbbb
mov
mov
rolb
inc
and
push
and
sub
pop
inc
push
jns
call
aam
add
fiaddl
push
test
sbb
adc
adc
adc
push
bound
adc
call
arpl
and
or
or
fs
and
andl
test
ds
mov
xor
movsb
lea
pop
adc
adc
jnp
cld
lret
iret
push
sbb
je
adc
imul
adc
jb
test
jl
xor
adc
in
loopne
clc
cmpb
out
sub
pop
or
in
adc
pop
xor
jle
push
lock
sub
jnp
std
adc
les
enter
mov
mov
and
or
fcmove
rclb
adc
les
or
xor
inc
adc
adc
cwtl
repz
ret
mov
push
hlt
testl
outsl
xchg
mov
ret
add
notb
push
xor
mov
push
lock
test
rorw
xchg
hlt
xor
hlt
lcall
decb
ret
xchg
push
dec
clc
sbb
lods
xchg
popa
inc
mov
xor
out
mov
mov
xor
les
jl
in
or
bound
loopne
jle
cmp
shlb
push
shl
adc
xor
jnp
cltd
pop
loopne
test
cld
inc
jns
push
mov
adcb
xor
mov
or
push
or
push
je
mov
pop
mull
js
cmp
nop
mov
xor
loopne
cmp
sbb
shll
fcoms
add
andl
fwait
push
shll
and
xchg
and
mov
jb
es
mov
dec
mov
mov
sub
dec
lcall
or
pop
cld
pop
popa
and
in
div
pop
shlb
dec
cmp
pop
xor
insb
testb
lahf
in
jno
mov
or
or
inc
dec
pop
xchg
mov
test
ja
xlat
push
push
push
incl
rolb
lcall
jnp
pusha
mov
cmpsl
bound
pop
sbb
stos
mov
xor
adc
loopne
or
arpl
adc
mov
lds
call
add
fisubs
sbbl
adc
xor
sbb
fwait
inc
dec
or
pop
or
add
dec
push
shlb
divl
sar
sahf
push
xor
shlb
adc
add
dec
and
jp
mov
push
or
addl
xchg
adc
or
test
inc
lahf
push
data16
mov
loopne,pt
ror
mov
xchg
or
popf
xchg
std
clc
pop
inc
cli
out
or
pusha
rorl
addl
adc
and
or
or
mov
jno
xlat
or
cmp
test
dec
mov
mov
mov
push
or
data16
pop
mov
and
in
ret
sahf
lret
lock
nop
lods
cmp
fs
decb
mov
cld
add
mov
js
add
adc
push
add
inc
add
aam
add
inc
inc
jp
je
iret
fisubs
repnz
jne
sbb
adc
dec
ljmp
incb
xchg
xor
testb
jp
stos
pop
std
icebp
dec
sbb
daa
mov
addl
push
sbb
orl
mov
faddl
jae
cmpsl
push
jne
sub
push
lock
sarb
and
fsubl
lea
inc
icebp
aaa
push
into
sub
pop
bound
and
mov
xchg
std
xchg
cli
imul
sbb
xchg
jecxz
fld
out
pop
inc
ja
pop
sbb
dec
xor
in
jmp
enter
sbb
adc
jg
cmc
into
rcr
jp
mov
incl
stos
pusha
lock
xchg
rcr
add
inc
nop
xchg
jg
adc
mov
test
popa
std
mov
adc
ret
popf
nop
cltd
pushf
arpl
iret
aam
xor
xchg
pop
test
aam
jmp
subb
push
stos
lods
popa
arpl
pop
addl
mov
test
cmp
jbe
sti
inc
arpl
add
pop
leave
rcrb
push
repnz
add
mov
jno
decl
orb
in
mov
cmp
sahf
and
mul
dec
lret
lods
les
push
rcll
je
jnp
or
ret
scas
sarl
sbb
mov
iret
outsl
fsubrl
xchg
inc
cwtl
mov
mov
xchg
push
ljmp
mov
sahf
inc
or
push
dec
mov
xor
sbbl
push
push
inc
push
loopne
mov
addb
add
sub
cmp
and
aas
mov
imul
fucomp
sbb
adc
nopl
push
jns
mov
lret
mov
mov
xor
lret
push
xchg
dec
enter
ja
xor
mov
and
mov
mov
bound
lds
pop
addr16
add
addb
jg
mov
jg
ljmp
add
orl
mov
pop
les
dec
sub
push
jne
fisttpll
gs
leave
mov
cmp
sbb
cmp
dec
push
or
outsl
push
fwait
pop
xor
hlt
or
lock
mov
arpl
dec
jge
ss
and
addr16
imul
adc
inc
and
and
sbb
inc
vcmpps
xor
and
or
data16
out
xchg
push
test
aaa
mov
aad
push
pop
mov
std
int3
pop
cli
lock
adc
or
je
cmp
sub
loope
bound
pop
ljmp
push
jbe
xor
ds
sub
in
pop
pop
loopne
sub
ret
or
ret
add
jne
out
dec
test
push
jmp
or
loopne
jmp
js
jmp
inc
xchg
mov
fsubp
adcb
fdivr
jg
mov
daa
je
push
movsb
test
arpl
sbb
mov
or
sbb
and
mov
mov
std
leave
test
repz
stos
or
or
inc
push
jmp
jle
push
lret
enter
and
pushf
xor
sar
cmc
jg
xor
mov
in
sub
mov
cmp
cltd
push
add
in
outsl
cmc
add
hlt
jne
mov
pop
das
add
stos
lret
inc
push
sbb
mov
push
clc
mov
sub
dec
out
mov
jnp
repnz
movsl
adc
or
leave
mov
sbb
outsb
lock
outsb
adc
stos
rolb
mov
lock
adc
mov
in
arpl
lahf
cld
inc
pop
add
cmp
pop
sbb
pop
add
jecxz
shlb
insl
mov
and
ljmp
xor
jg
adc
fnstsw
mov
in
clc
push
jb
push
imul
shrb
pop
stos
incl
dec
xchg
or
jl
mov
sub
adc
dec
fnstsw
sbb
xlat
and
mov
mov
add
xor
or
js
mov
jo
mov
adc
mov
insb
lea
cld
cmp
dec
or
push
cmp
or
mov
xchg
jns
push
mov
sarb
inc
mov
jecxz
jo
and
negb
sbb
mov
or
hlt
aad
add
xchg
xor
dec
fwait
loop
jb
push
xor
cld
push
stos
add
adc
data16
mov
cli
jmp
push
jecxz
ret
dec
or
dec
jno
add
and
or
jo
cmpsl
inc
lock
call
xor
stos
xlat
or
bound
inc
mov
shr
add
dec
adc
sbb
loop
inc
sbb
mov
fldcw
or
cmp
incb
cli
scas
cmp
mov
inc
icebp
loopne
arpl
fsubp
mov
in
jae
out
fisubs
std
xor
xchg
inc
sub
pushl
lret
or
inc
mov
mov
jecxz
ret
dec
sbb
dec
ret
pop
add
in
outsl
jp
inc
inc
es
aam
xor
test
ja
dec
test
cld
int3
dec
pop
push
adc
or
xor
jle
xor
insl
loopne
inc
mov
movsl
das
loope
and
add
dec
nop
xor
dec
jnp
cmc
pop
cmp
pop
fimull
xchg
arpl
cmp
pop
js
xor
sbb
sbb
fdivrs
adc
mov
or
xchg
and
mov
ret
ljmp
mov
jmp
divb
mov
jecxz
sub
adc
stc
out
rcrl
sbb
or
mov
flds
insb
add
sub
out
pop
add
push
hlt
adc
mov
ljmp
rcl
mov
pop
fnstenv
mov
repz
lea
mov
call
mov
je
sarb
movups
jle
pop
sti
test
cmpsb
mov
fadds
lcall
sar
pop
movsb
pusha
mov
mov
lret
add
or
neg
add
gs
sbb
mov
mov
jbe
add
sti
push
icebp
or
jmp
ss
cmpsb
mov
inc
les
out
xchg
push
bound
ss
mov
arpl
mov
sub
mov
xor
xchg
add
dec
lret
inc
cld
sbb
mov
or
or
rol
pop
cli
pushl
cmp
jno
pop
cmp
flds
sahf
inc
and
sub
mov
mov
out
inc
adc
sub
repnz
xor
pushf
push
cmp
cmp
cs
lods
rorb
jb
fidivl
jbe
in
mov
pop
xchg
xadd
nop
add
sub
adc
push
adc
lea
data16
int3
and
loope
cltd
pushl
dec
push
data16
xlat
add
sar
jge
test
pop
dec
xlat
mov
adc
rorl
inc
pop
outsl
push
negb
setbe
test
jmp
lock
movsb
cmp
into
add
add
cmp
adc
imulb
fcompl
mov
stc
fistl
fiaddl
xor
ja
jb
or
adc
mov
or
add
data16
pop
sbb
sub
stc
jp
mov
and
dec
frstor
ljmp
orl
xor
data16
sub
sub
icebp
xchg
mov
das
lock
push
imul
adc
ret
adc
pop
or
xchg
mulb
push
jp
int3
subb
rcl
fcomps
mov
arpl
call
dec
rorb
dec
cmp
xchg
sbb
in
add
and
std
mov
cld
repz
or
add
add
cmpsl
and
and
mov
or
js
xchg
das
inc
xor
stos
pop
dec
mov
jmp
cmpsw
ret
clc
mov
insb
or
add
leave
or
sbbb
cs
dec
outsl
cld
adc
pop
mov
jmp
pop
call
push
sarl
testb
ret
mov
mov
pop
push
jno
rcrl
jmp
push
ret
mov
sub
aas
inc
push
ds
outsb
xor
mov
decb
repz
shrb
add
fucomip
loopne
dec
xchg
mov
rcll
adc
push
inc
int3
ficoms
test
cld
movsl
das
hlt
clc
int3
add
sbb
push
push
stos
xchg
inc
cwtl
fmuls
jb
jmp
iret
add
cmpsb
mov
jo
je
xchg
adcl
outsl
lock
mov
xor
pop
gs
add
xchg
sbb
mov
and
add
test
push
xchg
mov
fwait
decl
xchg
fnstcw
xor
mov
iret
dec
sbb
lea
insl
out
xchg
popa
pop
insl
je
push
mov
cmp
dec
adc
push
jb
xchg
pop
mov
sbb
das
lock
sbb
mov
popa
fadds
icebp
sbb
lods
xor
mov
adc
cmp
or
and
cli
incb
dec
dec
mov
inc
pushl
push
sub
leave
sbbb
mov
mov
aad
push
hlt
lods
jae
fstpt
pop
ljmp
fs
and
cltd
mov
fdivrp
leave
adc
push
hlt
sub
ljmp
mov
pusha
push
sbb
loop
sub
mov
add
shl
cmpsb
sub
test
push
pop
fstpt
lret
stos
mov
das
gs
jmp
and
aas
inc
fstpt
pop
jo
loop
adc
clc
add
or
cmc
cmp
push
call
adc
or
clc
scas
mov
adc
and
pop
xor
mov
pop
cs
adcl
pop
add
adc
fildl
js
test
adc
or
fildll
mov
aaa
repz
mov
cld
outsl
ljmp
add
out
lret
rorl
mov
das
lock
mov
sahf
cld
lea
or
mov
ret
cmpsb
call
loope
pop
femms
hlt
mov
fcmovnu
xchg
pop
lret
lea
push
mov
pop
pushf
adc
dec
cmp
mov
enter
add
iret
rol
imul
jae
pop
pop
lcall
push
sbb
out
dec
xor
fistpll
xor
mov
icebp
aaa
fwait
sbb
pop
mov
or
test
xchg
jmp
fmuls
mov
les
add
negb
xlat
scas
add
or
je
loop
xchg
xchg
sub
jecxz
add
inc
sub
inc
repz
in
mov
movsb
sub
xchg
movaps
xchg
test
sub
cld
cmp
icebp
popa
data16
lret
inc
loop
mov
ret
adc
andb
loop
je
sbb
and
inc
pop
xchg
or
jmp
xor
movsl
stc
rolb
mov
mov
in
inc
mov
mov
int3
push
and
insl
sbb
loope
outsl
aam
jle
adc
fildl
dec
dec
or
lods
ret
xor
sbb
mov
stos
jmp
jbe
add
test
scas
adc
std
add
fistps
sti
arpl
pop
outsb
xchg
mov
dec
mov
or
out
cld
stc
add
ja
das
cmc
in
movups
inc
push
and
mov
jbe
xchg
xchg
dec
cld
mov
mov
mov
addr16
sbb
pushf
das
loope
lds
movsl
cmp
add
jnp
popf
push
xchg
in
clc
inc
dec
cmp
loopne
idivl
movsl
mov
js
pop
loop
jne
das
push
sti
ret
xor
mov
inc
imul
test
mov
adc
mov
mov
rol
add
add
aaa
out
stos
popa
fcmovbe
roll
and
fs
or
jecxz
jg
aad
mov
fnstsw
or
icebp
cmc
mov
mov
scas
add
popa
jl
das
xchg
xor
ret
fwait
test
out
mov
mov
push
clc
out
out
pop
add
mov
lds
jne
mov
call
or
or
cmpl
dec
mov
ja,pt
insb
ficompl
out
shlb
pop
inc
das
movsb
fiaddl
mov
adc
scas
rorl
sbb
loopne
add
int
mov
cmpl
dec
ss
incl
test
inc
push
lds
rclb
and
sub
in
int
adc
mov
add
dec
mov
test
outsl
lock
bound
pop
mov
sub
mov
inc
inc
jp
jp
out
sbb
and
and
jp
add
mov
or
adc
and
leave
xor
int3
insb
sbb
adc
cmpsl
clc
ret
push
imulb
add
lods
xor
sbb
subl
pop
pop
pop
mov
in
or
subb
mov
sbb
inc
push
mov
and
pop
imul
mov
rcr
jl
insl
lods
xchg
sbb
adc
aad
mov
inc
pop
cmp
dec
je
adcb
cmpsb
adc
sbb
inc
out
fildll
or
lahf
dec
mov
test
sbb
jmp
push
sub
popf
lret
mov
adc
xchg
je
rolb
fcoml
pushl
test
mov
pop
test
xor
js
and
push
mov
pushf
ss
push
pop
sar
aaa
sar
pop
fisubs
insb
push
lods
jno
and
and
push
xchg
push
test
mov
mov
rcrl
fdivrs
ret
pop
inc
add
fwait
int3
test
mov
push
push
sub
push
je
fs
movb
dec
cli
loop
xor
inc
sbb
fbstp
lods
jns
cli
in
pop
xor
gs
lea
in
lcall
mov
jne
mov
arpl
stos
adc
push
ljmp
cld
sarl
lcall
jle
lods
and
jno
or
push
inc
mov
or
xor
mov
inc
int3
enter
fildl
mov
and
or
xchg
ljmp
jle
std
mov
mov
jecxz
add
mov
dec
call
into
pop
add
pushf
mov
clc
xchg
icebp
xor
pop
cmp
clc
jmp
loope
insb
xchg
inc
jae
inc
scas
cmp
fsub
icebp
ret
and
shl
ds
and
incl
xchg
aaa
xor
xchg
mov
sti
lock
inc
aam
pop
push
push
cmp
pop
addb
pop
mov
pop
inc
add
test
xor
adc
and
inc
sbb
stc
jno
add
jno
or
cmpb
inc
sbb
or
push
adc
push
ss
cwtl
or
std
lods
add
sub
test
fwait
ds
sbb
cmpsb
sub
repz
mov
bound
and
mov
and
stos
push
xchg
xlat
jno
mov
jno
les
ret
mov
testb
xchg
stos
inc
ret
incl
push
xor
lock
mov
add
incb
jg
adc
dec
lahf
imul
adc
scas
lods
or
xchg
push
sbb
bound
arpl
dec
insl
call
loope
add
xchg
and
enter
and
ret
jecxz
inc
push
jns
sahf
push
out
jle
jnp
pushf
jo
push
dec
adc
in
pop
das
or
or
add
sbb
pop
push
in
decl
in
daa
and
and
lcall
add
mov
or
jg
and
sub
push
addr16
mov
insl
mov
sbb
ja
push
addr16
add
clc
sub
sbb
int3
sub
mov
dec
test
xchg
bound
jp
sbb
sub
clc
pop
and
xor
sbb
pop
rolb
inc
icebp
pop
mov
je
sbb
adc
add
insb
aam
xchg
test
or
push
pop
adc
daa
sbb
mov
js
cmp
shlb
and
out
adc
dec
push
in
stc
cli
addr16
inc
clc
ret
subl
adc
cmp
insl
xchg
imul
push
mov
sbb
enter
pop
movsb
dec
xchg
clc
ljmp
int
and
je
push
clc
fsubrs
insl
lock
jg
cmp
loop
gs
fwait
xchg
pop
pop
call
mov
subb
movsl
xor
call
andb
xchg
and
aaa
shr
shl
mov
es
daa
idivb
or
xchg
imul
sbb
mov
sbb
fsubl
mov
or
jmp
scas
mov
rclb
mov
mov
pop
ljmp
sub
leave
mov
jbe
pop
mov
jno
add
or
sbb
dec
lods
outsb
std
fisttpl
mov
test
loope
or
outsb
jle
das
cld
repz
xchg
xor
jbe
or
aam
decb
lea
add
pop
daa
outsl
add
call
lock
and
lea
rcr
jg
xchg
mov
mov
lock
sbb
aas
insb
xchg
mov
dec
push
sub
sub
lcall
repnz
add
lret
mov
adc
loopne
pop
lods
and
aas
xlat
inc
inc
rcrb
fnstsw
hlt
ljmp
xchg
orb
pop
ss
fisttpl
stos
ss
mov
jle
dec
add
sub
loopne
adc
inc
out
iret
fnsave
jno
sub
push
xlat
jecxz
add
jo
scas
cmpsl
cli
test
mov
mov
popa
pop
fistpll
xlat
and
sub
adc
sub
mov
ret
pop
inc
lock
outsl
or
add
aad
popf
jge
scas
daa
mov
js
mov
std
dec
inc
repz
movsl
lea
scas
cmp
mov
shr
fbstp
pushf
dec
push
pop
jecxz
out
jge
add
scas
call
cmc
in
xchg
mov
fs
xor
dec
ja
mov
jnp
sti
sbb
jg
out
arpl
xor
push
repnz
ja
fdivr
filds
jae
pop
adc
inc
aad
inc
inc
roll
sbb
pop
or
xor
jo
push
push
xor
mov
mov
or
scas
fcoms
in
or
mov
rolb
cli
out
mov
xor
sar
loopne
lahf
popf
inc
lcall
jns
sarb
test
das
test
pop
mov
cltd
pusha
jbe
or
or
push
push
daa
adc
cli
mov
xchg
dec
or
adc
les
push
push
mov
xchg
or
pop
pusha
daa
dec
mov
rcll
pop
lock
cltd
mov
add
adc
dec
cmp
push
mov
cld
rolb
sub
std
in
ds
and
dec
daa
scas
sbb
jg
call
dec
inc
es
sbb
push
pop
dec
scas
jecxz
std
fistpll
lret
pop
out
inc
push
push
sbb
inc
mov
adc
adcb
inc
sbbl
fsubl
jl
jo
jle
xchg
ljmp
shrl
and
cmp
inc
ds
add
jl
loope
std
or
outsb
enter
iret
mov
dec
or
mov
mov
mov
js
add
pushf
mov
mov
add
and
mov
jno
inc
xchg
add
pop
je
mov
inc
mov
inc
sti
jne
sbb
push
sbb
dec
cld
mov
adc
nop
sarb
addl
cltd
mov
aaa
cmp
push
lret
ret
aaa
ja
jecxz
and
mov
jns
sahf
fdivr
ret
fcoml
cmp
push
shrl
push
call
icebp
inc
sbb
mov
fbstp
dec
jg
jns
loop
outsl
scas
jmp
sti
jl
clc
sbb
add
sub
sbb
inc
or
push
and
lods
xchg
fs
or
pushf
push
jl
or
cmp
pusha
jnp
dec
notb
das
jne
insl
test
lea
aam
fs
inc
push
pop
xlat
or
pop
xchg
cmpsl
test
aam
fcomip
decl
push
andb
jo
shlb
lret
mov
data16
adc
test
call
repz
mov
xchg
ud0
xchg
cmp
cs
jp
in
addb
inc
hlt
lret
cmpsl
sub
add
cli
ds
sarb
dec
xor
sbb
mov
shrl
pop
insb
fildll
add
cmp
lock
popl
sbb
xchg
out
fimuls
aaa
pop
cli
pop
and
jle
sbb
stos
xor
subb
enter
fists
lods
push
or
lds
push
inc
jo
mov
push
scas
inc
adc
jno
mov
jbe
aad
icebp
jg
push
adc
xchg
decb
mov
rorl
cmp
inc
imul
js
jno
pop
jg
ficoml
in
clc
and
loopne
mov
xor
sub
in
mov
mov
in
adc
mov
pop
js
clc
js
sahf
lret
fcmove
scas
lahf
jbe
test
jge
adc
xchg
clc
and
add
out
ds
pop
fdivr
inc
test
movsl
std
nop
mov
dec
and
aaa
mov
cwtl
and
outsl
out
icebp
jg
mov
call
pop
aad
jno
shlb
xor
sbb
std
sub
push
xchg
fcmovnb
faddl
mov
mov
xor
sahf
out
sub
mov
adc
add
mov
ljmp
lcall
call
fdivl
call
insl
inc
add
pop
clc
push
call
je
scas
xchg
pop
jmp
pop
and
int
cmpl
jmp
xor
add
in
sbb
stos
push
jmp
addb
add
cmp
test
fstpt
jb
dec
add
roll
and
xor
or
bound
cwtl
add
lods
or
jnp
xchg
pop
sbb
mov
push
mov
jp
lea
mov
shrl
mov
dec
lretw
es
call
mov
cmp
loop
cld
jnp
dec
jns
xlat
mov
repnz
rcl
pop
test
adc
loop
imul
sahf
shll
mov
pop
or
and
aam
and
push
jg
les
xchg
jne
rolb
lods
lock
mov
and
or
cmp
lahf
loop
sbb
jbe
test
lea
mov
adc
aas
push
mov
and
inc
dec
jecxz
mov
std
fs
and
add
std
mov
inc
jae
cmp
sub
mov
outsl
loop
cmpl
inc
and
insl
mov
or
adc
test
and
dec
cmp
rorb
inc
jne
adc
jmp
adc
xchg
or
dec
lds
pop
mov
test
mov
cmpsb
data16
adc
push
sbb
fbld
adc
jle
dec
add
inc
lret
sti
dec
mov
or
cmp
inc
xchg
dec
out
xchg
fmull
hlt
test
mov
sub
mov
add
ret
add
lcall
ljmp
daa
mov
cld
pop
test
push
or
pop
sub
add
aas
jbe
cmp
aad
pop
ret
xchg
lea
pusha
jmp
outsb
inc
fmuls
and
mov
or
scas
push
daa
aam
mov
dec
fstpt
jmp
movsl
cs
add
adc
notl
mov
imul
add
ljmp
jge
cld
adc
push
nop
adc
or
fld
dec
inc
push
icebp
cld
xchg
inc
adc
rclb
cmp
push
and
lret
subl
test
add
adc
in
or
or
sbb
out
aam
icebp
mov
rolb
mov
add
xor
lea
adc
add
fwait
inc
jge
addb
js
fsubrl
cld
testb
adc
mov
inc
fwait
ljmp
push
out
loopne
push
rcr
or
mov
inc
and
adc
lret
add
and
add
add
incb
loop
adc
pusha
lods
push
jmp
mov
and
fwait
push
and
add
sbb
xchg
and
aas
add
fnstcw
adc
cs
rorb
mov
dec
xor
pop
shlb
pop
xor
and
add
xor
mov
rolb
and
mov
cmp
mov
inc
lods
int
adc
sbb
aam
stc
loop
add
jge
xor
inc
push
push
adc
add
lods
in
cmp
sti
push
jno
mov
xor
sbb
pop
rorb
ss
shll
xchg
sbbb
push
jo
or
dec
sbb
mov
pop
mov
push
push
aam
cmp
inc
or
mov
pop
stos
rcl
add
inc
aam
fcmovnb
in
or
mov
daa
mov
adc
roll
das
sbb
add
addr16
shll
xchg
dec
cld
lds
test
or
add
adc
cwtl
je
sub
mov
nop
outsl
dec
sub
push
lcall
cmp
adc
push
aam
or
pusha
mov
std
filds
imul
add
fwait
inc
roll
push
inc
jo
fwait
in
ds
mov
je
push
das
push
rolb
nop
cltd
scas
adc
cmpb
xor
or
rclb
cmp
adc
jb
hlt
sub
ret
addb
pushf
fbstp
sti
lods
sbb
add
jne
or
dec
andb
jge
inc
fistps
cmp
sbb
mov
rolb
dec
lods
lret
int
jo
inc
xor
hlt
hlt
rcrl
pushf
imul
in
cmc
pop
inc
or
jge
adc
lods
cmp
xchg
adc
scas
pop
dec
enter
or
mov
mov
das
add
sbb
xchg
lock
in
cld
je
jae
scas
popf
xor
fiaddl
mov
jb
add
lret
add
pop
xor
lds
adc
mov
xor
std
sbb
push
cld
and
add
fidivs
bound
add
test
push
adc
pop
shll
mov
mov
int
cmp
xchg
lock
rorb
pusha
sbbl
lret
lock
inc
or
outsl
lea
leave
sbb
inc
sub
jbe
bound
rclb
add
xlat
daa
cmpsb
pop
push
lods
out
or
insl
andl
cs
pop
insl
ret
ljmp
sub
mov
jo
xor
cli
ljmp
adc
and
xchg
xchg
lahf
or
mov
pop
mov
jo
push
push
cld
ljmp
loop
cmp
test
xor
shlb
sbb
shrl
in
dec
sbb
mov
dec
push
inc
adc
sbb
int
hlt
inc
les
test
addl
aad
xor
dec
lods
inc
adc
iret
xchg
jmp
push
repnz
or
mov
in
and
es
push
dec
shr
xor
cmp
push
mov
mov
adc
out
clc
xchg
mov
sbb
pop
rcrb
push
cmp
int3
dec
pop
test
fidivs
js
push
enter
or
adcb
sbb
xchg
cmpsb
imul
or
sub
cwtl
andl
fldcw
mov
adcl
or
push
cmp
adc
jb
jno
lods
orb
sub
push
jae
js
add
fdivrs
ret
cmpsb
stos
fmuls
out
sbb
mov
xorl
arpl
inc
cld
incl
cld
mov
and
cmp
andb
pop
xchg
xor
mov
xchg
inc
adc
jo
mov
nop
mov
xchg
mov
and
mov
outsl
hlt
ss
ja
xlat
dec
inc
mov
lea
fisubrl
xchg
and
dec
sub
cmc
mov
dec
inc
mov
gs
pop
cmp
gs
aad
fwait
sbb
cmp
push
and
pop
loope
cmp
icebp
or
dec
out
mov
sar
add
inc
in
inc
fldcw
xor
mov
pop
dec
pop
xor
adc
dec
xor
repz
xor
mov
jle
or
sbb
cmc
sub
add
pop
hlt
jle
movsb
ja
or
jg
repz
push
cmc
shr
xor
pop
mov
fdivs
xchg
shrb
ljmp
and
xchg
adc
mov
push
rorl
pop
or
sub
pop
outsl
add
mov
mov
add
inc
aad
aam
insb
out
out
xor
mov
shrb
xchg
lret
pop
push
sub
mov
movsl
mov
addr16
xor
pop
ljmp
gs
lcall
cmp
int
rorb
cmp
sarb
push
mov
arpl
in
mov
or
imul
push
js
test
mov
mov
and
or
sbbl
jmp
mov
xchg
inc
pop
sub
pop
mov
mov
or
sarl
fcomps
test
lret
jle
xor
outsb
inc
clc
mov
or
adc
jmp
fwait
jle
movsb
enter
mov
jg
in
adc
add
mov
fimull
adc
sbb
and
inc
add
mov
jbe
jge
adc
add
cwtl
xor
xor
cmp
addl
fwait
rorl
fcompl
mov
cld
bswap
add
or
fisubrl
jg
xchg
adc
leave
xchg
in
daa
dec
adc
push
clc
cmp
hlt
xchg
add
xchg
cli
and
mov
adc
adc
xchg
inc
call
jecxz
or
pusha
rcrb
mov
aad
inc
sbb
xor
arpl
inc
push
cwtl
sub
scas
mov
popa
mov
andb
cwtl
add
enter
add
mov
sub
syscall
mov
push
daa
ror
les
pop
inc
sbb
dec
dec
adc
data16
leave
mov
dec
call
jg
xchg
cmp
mov
pop
push
movsb
pushf
xor
cmp
adc
inc
cmp
push
push
add
push
xlat
and
jmp
adc
fcomps
test
int3
call
popa
add
xor
in
mov
aam
push
cmp
xchg
movsl
leave
fdivl
lds
xchg
adc
sahf
xchg
lock
fwait
jbe
jne
mov
insl
mov
mov
stos
imul
xor
push
mov
adc
ss
lea
push
mov
inc
xchg
fmull
mov
mov
movsl
mov
fiaddl
icebp
insb
mov
pushf
ljmp
scas
mov
push
xchg
pop
xor
xchg
pop
fdivr
xor
and
daa
pop
cmc
or
adc
jle,pt
lea
push
cmp
sbbl
dec
dec
adc
jg
int3
sbb
lcall
sub
fbld
inc
adc
ja
xchg
push
jo
jl
outsl
or
sub
repz
jg
or
ret
or
or
int3
xchg
push
insb
mov
daa
cli
add
ss
aaa
adc
pushl
and
push
add
idivl
dec
mov
jl
insb
jnp
jmp
and
in
cli
fsubrs
mov
incl
popa
js
scas
iret
pop
jns
sahf
push
pop
cmp
xchg
test
sub
ja
dec
xchg
pop
cmp
adc
add
xchg
rcr
ja
int
push
cld
fidivs
jmp
mov
xchg
pop
gs
mov
mov
test
aam
std
xchg
adc
stos
jg
jb
add
mov
push
pop
repz
cmc
out
scas
mov
subl
imul
jp
aam
inc
inc
je
jbe
subb
out
negb
and
orb
das
shr
fadd
lret
pop
addr16
add
fists
lods
lahf
adc
pop
arpl
jne
daa
in
mov
dec
aas
lock
leave
or
mov
mov
mov
pop
push
outsl
or
inc
adc
sbb
add
adc
fsts
add
mov
sbb
divl
mov
adc
das
dec
cmp
icebp
adc
lock
jg
outsl
jp
and
xchg
sbb
xorl
cmp
decl
icebp
and
jge
dec
mov
cmpl
imul
and
out
data16
add
fsubl
push
cltd
cld
pop
fiadds
mov
jecxz
jecxz
pop
adc
add
ja
iret
lea
push
sahf
cmp
push
fwait
sbb
fistl
cmc
dec
sarl
xchg
and
addr16
filds
ss
roll
int3
mov
dec
push
inc
in
and
pop
sbb
add
popa
clc
jmp
lret
rcll
sbb
mov
push
idivb
inc
push
mov
inc
pop
stos
jg
mov
push
mov
cli
add
loop
jl
icebp
cs
pop
and
or
and
out
adc
fwait
jecxz
adc
jae
outsb
push
je
and
jp
and
incl
mov
fucomi
mov
js
and
imul
aad
push
leavew
add
inc
outsl
jg
or
andl
sbb
js
in
lcall
in
shll
pusha
ja
nop
xor
test
add
js
mov
fisubl
sub
and
adc
pop
js
jne
lahf
mov
mov
add
repnz
xor
ud2
movsl
loop
add
mov
sbb
fldt
rclb
into
stos
mov
push
jl
jge
cs
mov
icebp
imul
sbbb
lds
pusha
imulb
mov
das
popf
sbb
aam
add
adc
pop
out
inc
sahf
dec
sar
xchg
adc
push
and
jo
scas
jmp
cmpb
bound
repnz
lods
jg
mov
add
sbb
stc
out
std
add
in
mov
in
mov
shrb
scas
and
shlb
cwtl
mov
test
out
pop
mov
stos
pop
cltd
ja
mov
subb
adc
fdivr
add
fiadds
push
or
or
push
stc
mov
js
loop
jle
ficompl
out
or
cli
inc
xorl
clc
ljmp
mov
and
and
cmp
std
mov
ret
enter
scas
sbb
mov
and
mov
or
xchg
outsb
hlt
in
mov
inc
cmpsl
push
adc
jae
xchg
ds
push
dec
mov
into
hlt
adc
cmp
pop
ljmp
fcomip
sbb
cmp
stos
and
push
sub
roll
shrb
xor
xor
lock
bound
iret
repnz
fsubrs
or
test
je
fwait
xor
jg
enter
sub
sbb
sbb
push
into
ljmp
std
pushf
sbb
repnz
lahf
fldl
js
fstp
call
push
clc
ret
sub
jle
pop
fnstsw
out
mov
jg
sub
or
dec
push
call
or
shrl
outsl
mov
cwtl
adc
jecxz
cmpsl
xchg
ljmp
lock
movsb
and
insl
or
je
mov
negb
ror
jmp
sub
aas
sbb
xor
addr16
enter
jg
iret
dec
shll
shrl
jno
xchg
push
orb
movsl
xchg
lock
call
outsl
add
gs
fistpll
test
xor
std
xchg
or
inc
nop
cmp
aad
cmpsb
out
or
mov
pop
je
dec
insl
ja
dec
adc
sbb
lcall
pop
jno
inc
mov
repz
aaa
mov
in
cmc
pop
lock
mov
dec
adc
and
aaa
push
pop
mov
inc
inc
mov
push
es
stos
pop
pop
cmp
imul
lock
push
pop
jo
add
cmp
mov
xchg
dec
dec
inc
in
xor
mov
adc
ficoml
fcoml
add
inc
or
add
mov
push
add
jno
add
push
or
test
pop
jecxz
sbb
gs
icebp
iret
enter
or
mov
and
xor
sub
enter
cmp
rcr
push
loopne
arpl
inc
sbb
push
jg
mov
dec
outsl
inc
mov
lods
xchg
cld
test
push
push
divb
lcall
dec
bound
inc
cld
or
inc
add
adc
das
fst
and
cmpsb
test
xor
push
push
nop
push
mov
jl
call
loope
jge
mov
or
jmp
das
mov
push
fs
or
xorb
inc
ret
fisttps
jle
adc
add
loope
sub
negb
jb
adc
cmp
xor
ja
ret
xor
inc
sub
das
lock
dec
mov
gs
mov
mov
or
jge
xlat
pushf
sub
stos
inc
xchg
cld
jg
and
push
adc
add
xchg
scas
rcrb
das
fisubl
add
sub
cmpsl
add
fbld
test
xchg
pop
fsubrs
dec
into
dec
lods
jle
mov
fidivs
push
pop
mov
mov
sbb
addl
cmc
mov
mov
and
xchg
andb
and
insl
push
lock
push
outsl
pop
je
loope
push
sbb
mov
mov
idiv
push
mov
dec
pop
cmp
iret
das
jo
adc
push
cmpsl
mov
mov
mov
or
push
test
xor
call
lock
dec
out
jl
hlt
or
xor
lret
frndint
jmp
mov
repnz
lret
sbb
jo
push
imul
mov
cmpsb
in
mov
outsl
mov
popf
add
adc
sti
inc
mov
fnstsw
pop
jne
mov
inc
test
cwtl
test
mov
int
stos
push
xchg
add
add
mov
jae
jle
jmp
out
mov
ljmp
enter
pop
adc
lock
lahf
je
push
cmp
adc
adc
imul
dec
dec
ja
jns
sbb
lock
cmp
inc
mov
lcall
loop
pop
cltd
out
fcmovbe
test
hlt
dec
imul
dec
jo
aas
roll
mov
or
jecxz
sbb
cmpsl
sub
xor
cld
sub
ja
dec
sbb
push
int
mov
sar
dec
pop
sub
push
inc
inc
jge
push
adc
adc
cmp
dec
lea
cld
cli
sub
ss
adc
je
and
cld
sbb
mov
pop
es
cmp
or
test
fildl
sbb
ja
push
sub
cltd
lods
cmp
cltd
loop
int
mov
iret
add
ja
mov
ja
pop
jnp
add
xchg
lods
pusha
shlb
test
jle
sub
cs
add
ret
inc
inc
pop
jo
test
shll
push
mov
pop
int3
fldenv
mov
add
ss
adc
arpl
xrelease
and
je
ja
xor
adc
cld
xor
xchg
jne
sbb
inc
add
scas
push
sti
xor
mov
fisttps
and
mov
add
mov
pop
sub
test
stos
xor
insl
xor
into
cld
inc
mov
out
cmp
pop
jmp
cli
and
and
in
mov
xor
lock
inc
jmp
inc
xchg
daa
mov
jo
adc
aaa
inc
aaa
hlt
jecxz
imul
shrb
fldl
mov
sub
test
inc
in
add
xor
dec
xor
xchg
cmpsl
lar
push
add
xor
lods
scas
mov
roll
sti
adc
fcomps
inc
cmc
data16
js
sbb
dec
or
fidivs
cmp
xor
adc
nop
inc
mov
and
enter
xor
jae
cwtl
dec
sub
mov
cmp
sarl
adc
xor
push
xor
xor
pusha
adc
int
add
dec
nop
cmpb
cmp
ds
in
fiadds
push
sub
in
mov
push
pop
mov
inc
xor
dec
xor
notl
test
mov
push
push
pop
bound
xchg
pop
mov
mov
push
adc
adc
lahf
add
aad
and
jge
cmp
sub
add
xchg
loop
rorb
dec
jne
sbb
jp
rorb
push
cmp
sahf
je
mov
sub
aad
cmp
ret
outsb
jle
push
cmp
xor
pushf
jp
int
popl
inc
inc
test
das
cmp
mov
sub
xor
in
lahf
shll
cmp
ljmp
xchg
cmp
lods
clc
inc
sub
fisttps
push
in
inc
icebp
into
cld
outsl
andl
and
pop
jg
xchg
push
dec
rclb
stc
or
rolb
push
lret
inc
xchg
jnp
jg
mov
ljmp
lods
lret
and
call
js
cs
pslld
je
jmp
mov
cmc
mov
dec
cmp
mov
inc
in
fists
je
adcb
shll
lock
in
rclb
cmp
sbb
mov
shlb
fidivrs
inc
repz
jbe
jno
loopne
mov
cmp
les
sbb
fildll
icebp
pop
pushf
or
lcall
sbb
scas
jge
mov
jg
cmpsb
sbbb
pop
inc
pop
lcall
imul
add
xchg
dec
loopne
cli
mov
mov
mov
loope
jge
push
orb
out
mov
ja
addr16
xchg
shrb
ja
lret
push
adc
add
xchg
add
les
das
cmc
mov
ror
imul
or
lret
ret
ret
pusha
mov
and
mov
ljmp
or
insb
decl
clc
jecxz
cs
cmp
test
imul
hlt
mov
dec
stc
into
cld
jbe
ret
push
stos
nop
das
push
lods
cmpsl
lods
jecxz
leave
add
push
push
ror
jge
fwait
icebp
sbb
int3
popf
btc
xlat
les
loop
mov
adc
iret
add
pop
mov
aas
sub
icebp
nop
repz
sbb
in
test
mov
xchg
mov
imul
stos
cmp
mov
hlt
push
aam
popa
jle
mov
frstor
cmp
cwtl
jge
jge
adc
cmp
jnp
mov
pop
pop
ffreep
xor
inc
bound
bound
ss
lret
mov
nop
xchg
xchg
cmp
xchg
mov
arpl
mov
jg
ficoml
xchg
add
adc
push
jb
or
stos
shr
add
mov
cmpsl
pop
jbe
cli
loopne
in
cmpsl
xor
aaa
insl
sub
or
sbb
push
testl
lock
and
sbb
push
mov
pop
out
out
cmp
pop
sub
mov
sbb
add
push
mov
or
ret
jns
daa
or
jg
lea
bound
mov
shll
pop
fdivs
popf
adc
int3
adc
test
or
jo
cmp
lods
std
filds
pop
mov
push
inc
cmp
cmp
loop
sbb
dec
push
mov
insb
clc
fsubr
sbb
lret
pop
ss
xchg
popa
mov
or
jle
push
mov
xchg
sbb
js
movb
add
sahf
pop
imul
pop
or
cmpsl
inc
call
movsl
push
jge
xchg
mov
xchg
call
or
jl
inc
inc
mov
lds
inc
lret
mov
add
rclb
adc
adc
filds
insl
adc
loop
rcll
insl
negl
outsl
test
push
out
daa
mov
cld
data16
stos
jg
bound
mov
push
inc
sub
add
mov
xor
cmp
fsubs
pop
ret
and
adc
jp
adc
in
in
pop
push
add
int3
js
jecxz
insl
stos
and
fwait
scas
adc
xlat
xchg
fadds
comiss
or
faddl
cmc
or
pop
std
sbb
sbb
in
mov
push
mov
ljmp
insl
out
std
cmp
mov
int3
dec
stc
outsl
push
mov
das
nop
in
mov
cmp
adc
les
xchg
add
hlt
dec
repz
fwait
push
cmp
pop
rorl
int3
mov
inc
xchg
cld
cmpsb
lods
out
mul
jb
test
mov
das
pop
add
push
or
inc
jl
and
inc
or
add
mov
inc
daa
cli
and
fldt
and
sbb
clc
test
pop
negl
movsb
in
jg
lea
mov
test
xor
mov
sub
hlt
or
and
enter
bound
push
outsb
lahf
pusha
push
fists
adc
sbb
adc
mov
push
pop
stos
clc
push
std
scas
jnp
xchg
sub
lods
fimuls
pushf
sti
mov
sar
jg
out
aam
push
and
loopne
dec
mov
jg
popa
cmp
cltd
sbb
add
cwtl
xlat
xchg
inc
aaa
mov
fiadds
int
inc
rclb
inc
adc
inc
push
mov
add
wrmsr
or
fildll
lock
rolb
addr16
arpl
test
and
jo
int3
inc
pop
cmp
call
dec
push
imul
xchg
and
push
dec
outsb
lds
push
or
dec
pop
pop
fcmovbe
pop
arpl
nop
jo
jg
adc
adc
call
mov
add
mov
jne
lock
push
dec
and
aaa
jp
jg
mov
shr
popf
in
jge
inc
mov
ljmp
les
pop
clc
mov
mov
sbb
sbb
mov
inc
jl
fidivrl
pop
insl
mov
or
ljmp
mov
ret
add
rorb
jbe
mov
pop
jo
js
idivb
test
mov
push
in
mov
das
cmc
mov
xorb
push
xchg
mov
subl
mov
cmp
sbb
push
out
xchg
test
push
or
adc
fldenv
and
sahf
inc
and
inc
pushf
movsb
or
stos
push
dec
add
aad
or
jb
sub
sub
sbb
test
fcomps
push
dec
out
dec
sbb
or
mov
mov
inc
xchg
xor
scas
mov
cmp
cmp
mov
ja
pusha
mov
push
and
sbb
mov
mov
pusha
scas
jge
ss
loopne
addl
inc
mov
jmp
shrb
clc
inc
sbb
jnp
sub
sub
sub
gs
rorl
mov
and
push
arpl
dec
adc
mov
popa
aad
mov
adc
into
neg
pop
aam
es
and
xor
andb
enter
loope
push
mov
sbb
xchg
add
push
mov
cmpb
mov
loope
cmpl
mov
lods
add
mov
cmp
nop
inc
xor
adc
sub
push
dec
xor
loopne
ss
mov
in
push
push
jl
jae
xchg
pop
stc
sti
xchg
push
add
add
inc
or
inc
fsts
dec
pop
les
enter
loopne
mov
stos
jne
sti
xlat
orb
fldenv
push
jge
mov
loopne
fcmovne
or
push
dec
movntq
out
add
incl
lea
push
aam
mov
add
dec
pop
jl
pushf
adc
ljmp
icebp
or
xor
xchg
test
arpl
pop
fbstp
mov
into
add
dec
cmp
jbe
cmp
push
loopne
or
js
and
out
sar
ror
fdivp
js
add
scas
bound
add
jno,pn
and
es
call
xor
test
sbb
bound
cmc
divl
xor
mov
inc
sbb
xchg
sbb
outsl
mov
call
stc
sbbb
xchg
inc
mov
insl
rcl
add
mov
in
mov
and
mov
sbb
mov
das
lock
fidivs
fcompp
insb
lock
hlt
jg
movsl
push
pushf
js
pop
push
push
andl
push
pop
rcl
test
jp
in
incl
fidivrl
test
mov
sub
push
or
pushl
jno
je
fildl
int3
mov
aad
mov
icebp
fwait
clc
out
mov
or
pop
inc
jge
jne
hlt
fildll
and
mov
incl
les
xor
out
and
ret
sbb
test
test
pop
mov
cmp
lods
cmc
xchg
call
mov
xchg
xchg
add
cmp
lea
mov
dec
lock
insb
lods
jo
jg
ds
fidivl
outsb
mov
jmp
mov
and
bound
pusha
sbb
mov
dec
xor
push
xchg
cmp
push
loope
push
adc
pushf
pop
add
push
cli
das
jno
jbe
or
cs
aam
mov
and
pop
push
mov
jns
notl
out
ljmp
mov
sub
or
outsb
lods
insb
dec
cmpl
inc
mov
dec
push
lcall
incl
ds
xor
lods
pusha
test
mov
mov
cld
not
sub
decl
jne
adc
icebp
outsl
jne
ss
mov
jg
add
loop
or
sbb
dec
daa
bound
int
mov
sbb
pop
sbb
xchg
out
and
add
adc
sti
inc
mov
aad
inc
and
sbb
dec
and
inc
neg
inc
int3
shrb
sbbb
jmp
adc
dec
decl
outsl
xor
sub
icebp
stos
pushf
xchg
arpl
inc
mov
std
cmpsb
mov
sub
int
scas
inc
cli
push
push
lock
add
xor
push
lret
adc
sbb
jo
or
cwtl
pop
mov
add
dec
imul
adc
push
xchg
add
jmp
nop
call
and
pop
push
adc
jne
iret
lock
sub
add
add
adc
stos
mov
dec
or
lock
and
rcrb
add
mov
int3
sbb
addl
push
inc
test
or
loopne
mov
pop
cltd
ljmp
ret
jle
inc
mov
pminsw
ret
and
inc
bound
fisubrl
adc
dec
pop
add
adc
add
adc
and
mov
rorl
dec
mov
lahf
or
adc
and
and
lcall
sbb
ret
js
or
ss
mov
call
jno
jecxz
dec
mov
shll
inc
stos
bound
push
dec
sbb
aam
add
pop
mov
pop
xor
jl
andb
daa
sbb
mov
in
sub
stos
cmp
out
and
in
loopne
scas
pop
mov
inc
insl
cltd
dec
sub
roll
or
in
add
in
into
rorl
jae
stc
inc
pusha
mov
mov
mov
shll
jne
outsl
repz
xor
or
push
bound
jmp
jbe
aad
or
sub
incl
pop
sub
stc
pop
hlt
adc
xchg
sub
stc
or
lcall
sub
xorl
je
dec
sbb
inc
mov
add
add
repz
sub
lds
fstpl
call
pop
push
jbe
mov
fsubl
imul
and
fcmovnu
cmp
cmp
and
jb
ds
fsubrl
pop
mov
push
call
adc
cmc
notb
addr16
icebp
and
ret
mov
add
inc
xor
add
loopne
sarl
add
imul
adc
outsl
dec
scas
shll
jne
bound
jg
lret
and
inc
testb
stos
fidivl
mov
dec
dec
arpl
xchg
add
std
jno
and
bnd
ret
add
pushf
addb
mov
mov
aam
insb
outsb
sub
into
in
mov
mul
inc
lahf
daa
inc
int3
cmp
add
dec
or
das
push
pop
sbb
out
and
add
in
add
notb
out
test
jl
enter
xor
mov
inc
es
test
aas
sbb
xchg
jecxz
les
sub
imul
add
das
lock
cmp
pop
mov
and
sub
xlat
loopne
jno
sar
add
jp
ss
in
sub
sti
rolb
js
outsl
or
negb
or
add
cmc
pop
fucom
mov
xlat
inc
loope
cmpsl
sahf
mov
dec
insl
pop
std
jns
jp
insb
lcall
into
ret
xor
mov
or
pop
subb
mov
xor
xor
loop
lock
call
aad
incl
addr16
push
orb
add
rcrb
xor
rcll
fldcw
sbb
int
shlb
push
sbb
iret
bound
popl
dec
ficoms
cmp
ljmp
and
mov
outsl
cmp
cmc
and
daa
pop
call
out
test
cmp
add
add
je
push
adc
jb
add
mov
popf
sbb
jbe
or
movsl
in
and
inc
sub
inc
mov
mov
xchg
adc
push
mov
mov
enter
and
nop
jne
add
mov
out
out
jnp
mov
push
xor
ja
push
adc
or
dec
ljmp
jg
sbb
call
fwait
ljmp
iret
xor
lds
mov
pop
mov
data16
lock
popf
scas
imul
push
or
xchg
jecxz
and
incl
call
add
mov
outsl
adc
jp
and
call
orl
mov
bound
sbb
fs
inc
cld
inc
mov
mov
out
add
hlt
xchg
sbb
fmuls
add
add
dec
in
ljmp
bound
inc
movsl
fsts
jb
pusha
mov
fs
ret
cwtl
je
insl
push
and
sbb
push
shll
loop
cmpsl
inc
add
push
pop
mov
add
cmp
mov
mov
jne
insl
leave
inc
and
add
cmpsb
aaa
cli
mov
lea
cmp
imul
divb
push
cmp
xchg
jae
mov
sub
and
sbb
or
cmpb
push
dec
es
outsb
ret
xor
inc
add
inc
aaa
mov
scas
push
sub
or
call
dec
add
outsl
aam
iret
xchg
inc
or
adc
xlat
sub
rclb
lahf
rol
cmp
in
or
es
std
cmp
ljmp
dec
push
add
popl
out
dec
shll
jle
clc
adc
punpckldq
inc
fdivrl
leave
push
push
or
xor
loope
xchg
and
nop
and
lret
stc
adc
add
pop
leave
cltd
nop
add
sar
ficompl
fisttps
rorl
jns
sarl
sbb
mov
daa
push
gs
orb
test
or
dec
fwait
call
xchg
ljmp
dec
sub
mov
iret
inc
ss
push
sarl
test
xchg
mov
in
jle
clc
xchg
add
pop
dec
test
mov
std
scas
xor
push
fisubl
mov
adc
mov
sbb
mov
scas
outsl
mov
sbb
push
or
into
inc
dec
testb
and
and
lock
jb
add
adc
add
lock
push
addl
pushf
mov
pop
int3
pop
cmp
dec
pop
shlb
outsb
cmc
aad
loope
int3
sbb
ljmp
test
mov
adc
jp
popa
pop
inc
das
sub
add
pushf
dec
inc
scas
outsb
repnz
movsb
jnp
add
jle
xor
pushf
pop
jp
sbb
xchg
dec
and
aaa
adc
adc
mov
add
inc
inc
idivl
and
icebp
lea
add
pop
mov
dec
lds
push
push
push
or
add
and
loopne
push
int3
sbb
pop
or
loope
xchg
rcrb
mov
or
mov
push
inc
adcl
flds
mov
cli
xchg
mov
in
out
push
lea
fcoms
ret
scas
and
lock
outsb
shll
sbb
pop
xlat
jne
dec
decl
push
or
push
ret
lcall
add
adc
mov
pop
sarl
mov
loop
sub
push
cmp
fs
add
or
lods
sub
enter
dec
mov
pop
jge
imul
das
lret
mov
in
movsl
xlat
enter
cs
xorl
cmp
cwtl
dec
and
push
pushf
or
movsl
lock
out
inc
mov
lods
push
dec
cmpsb
pop
and
or
sbb
dec
dec
cmpsb
adcb
cmp
and
fstps
push
int
pop
stos
es
xchg
sub
sub
fcmovnbe
sbb
ret
nop
xor
pop
roll
cmp
scas
clc
pop
insl
lret
iret
mov
adc
mov
outsb
nop
movsl
xor
mov
inc
lcall
dec
mov
cld
xchg
loope
dec
pop
mov
xor
and
ds
jae
out
sti
add
inc
mov
push
and
sahf
pop
cli
fsub
aaa
hlt
dec
pop
sub
sub
mov
nop
inc
mov
arpl
scas
cltd
jle
repnz
fs
clc
dec
mov
cmp
clc
aas
je
data16
jno
inc
cli
rclb
aaa
fidivrs
dec
pop
in
mov
xor
pop
aaa
jle
add
pusha
sbb
out
mov
cmp
lds
std
adc
xchg
mov
test
pop
js
xchg
cmp
or
int
je
fwait
mov
push
das
jge
mov
lea
mov
mov
lock
loope
jl
fmuls
dec
out
iret
fnsave
or
dec
jg
inc
xor
cmpsb
loopne
insl
jnp
adc
ljmp
mov
add
dec
insb
repnz
xor
roll
cmc
outsl
sub
lret
cmp
nop
jp
sarl
or
out
shll
or
and
or
sub
push
mov
jecxz
mov
pop
das
sub
add
jl
mov
adc
xchg
divb
pop
xchg
cmpsb
scas
jecxz
mov
stc
fnstcw
pop
lods
sub
push
xorl
jmp
loopne
mov
cld
jecxz
mov
test
adc
stos
aaa
cmc
insl
jb
jl
push
sub
push
add
pop
dec
out
mov
pushf
sub
lods
das
or
jg
jg
cmpb
add
mov
or
inc
dec
push
and
mov
add
jmp
in
jnp
ja
add
sub
push
push
fs
sbb
cli
jg
sub
jne
int
and
fldcw
fldl
sti
call
lret
pop
lods
adc
gs
aad
inc
pop
lock
div
push
jne
jmp
sub
mov
fbld
or
mov
outsl
pop
adc
fnstenv
iret
inc
lods
shll
pop
cwtl
mov
mov
cmp
xor
mov
ficomps
orl
and
mov
sub
lret
add
movsb
fisubl
sub
inc
cld
lods
jo
push
sarl
pop
push
je
sbb
adc
dec
movsb
add
jns
mov
lods
aas
xchg
adc
data16
ret
je
fdivs
dec
nop
dec
mov
cmp
movsl
loop
mov
aas
mov
add
inc
inc
out
les
pop
std
in
push
adc
or
leave
push
cmp
lea
pusha
inc
int3
push
pushf
pop
push
or
inc
mov
leave
in
add
in
test
addb
mov
jl
xlat
xchg
ret
sbb
adc
popa
lret
mov
push
inc
push
fsubrs
add
shlb
aad
pop
mov
mov
add
loop
out
or
outsb
insb
in
push
sub
roll
les
inc
aad
lods
inc
and
mov
repnz
cmpsl
mov
xlat
mov
es
jb
and
in
xchg
aad
jnp
xor
call
mov
test
outsl
sub
psubsb
xor
mov
push
push
jmp
add
out
push
xchg
add
nop
fsubrp
subb
push
ja
adc
icebp
and
pushf
xor
pop
stos
push
or
cmpsb
scas
dec
dec
push
jmp
xor
cmp
and
cmp
cs
leave
mov
fwait
dec
pop
ja
dec
nop
mov
test
mov
push
dec
enter
cltd
sub
xchg
jp
loop
movsb
fadd
sub
pushf
inc
dec
xchg
adc
sbb
pop
int3
stos
add
sub
aaa
fmuls
sarb
jne
fbld
ja
leave
movsl
push
loop
decl
cld
cs
call
stos
or
add
push
jo
test
pop
dec
andl
sbb
or
out
adc
mov
mov
inc
cmc
in
or
ret
jp
idiv
push
loope
flds
jp
mov
rclb
fdiv
popf
sub
loopne
daa
ficomps
getsec
add
sahf
lods
jo
sbb
jmpw
mov
call
fisttpl
rcl
and
push
dec
les
iret
ret
mov
mov
xorl
lds
sub
xor
loopne
fldl2e
mov
mov
fnstsw
xchg
push
mov
fsubs
gs
ss
icebp
aaa
popf
shr
or
push
pusha
cmpsl
test
andb
mov
das
mov
dec
xchg
testb
fistl
mov
inc
cwtl
mov
push
in
call
add
gs
mov
push
aam
fidivs
sub
outsl
sbb
push
inc
pop
into
nop
and
mov
xchg
movsb
out
push
dec
xchg
jnp
pusha
jb
mov
sbb
clc
cld
ss
pop
and
adc
push
pop
lcall
and
mov
jne
aaa
scas
add
insl
jbe
xlat
popf
ret
aam
pop
jno
lods
gs
fisttpll
test
sbb
ljmp
inc
call
or
pop
inc
fsubrl
mov
pop
mov
mov
jnp
mov
and
adc
mov
jmp
lret
cmp
ljmp
jl
inc
mov
es
mov
je
mov
jnp
xchg
subl
mov
pop
rclb
inc
adc
xchg
dec
xor
and
mov
lcall
dec
das
aam
icebp
and
daa
inc
mov
mov
lahf
mov
push
ja
sbb
cld
mov
leave
inc
xchg
sahf
repz
divb
sub
adc
fiadds
ret
xchg
fucomip
fiadds
lock
add
popf
repnz
lods
push
cld
incl
mov
sarb
pavgb
in
in
dec
push
div
or
outsl
fnstsw
inc
jo
dec
pop
hlt
js
loope
pushf
push
mov
jl
mov
lock
push
or
lock
pop
std
xor
xchg
jo
mov
xor
and
testl
frstor
stos
ljmp
sar
sarb
or
xor
or
ret
or
sahf
testl
jmp
jb
in
mov
aad
lea
mov
insb
jb,pt
subl
mov
ret
jmp
loope
adc
push
lods
adc
cmpsb
cwtl
inc
arpl
loopne
mov
addb
leave
push
outsl
cld
add
movsl
or
sub
lea
lock
inc
imul
fbld
dec
jnp
cwtl
inc
sub
dec
jbe
mov
cmp
popa
shr
pop
and
mov
add
test
jmp
cmp
clc
test
imulb
jo
mov
int3
mov
inc
mov
cld
and
dec
repnz
outsl
inc
cli
imul
stos
adc
xor
sub
sub
popa
idiv
mov
dec
adc
mov
jl
add
in
fdivrp
add
enter
xor
sbb
les
fildll
lock
xchg
fstpt
ljmp
aas
add
lcall
xchg
and
and
inc
jg
insb
sub
fldt
or
add
iret
sbb
arpl
add
cli
test
sbb
std
pop
clc
mov
adc
out
sub
adc
add
adc
or
sti
mov
rclb
test
stos
loopne
retw
pop
in
lea
fcomps
and
jg
push
dec
sbb
or
cmpsb
push
lcall
sbb
or
cli
cs
or
and
xor
shlb
adc
and
cmpsl
pop
mov
or
mov
clc
sub
fdivr
sbb
pop
jmp
fstps
push
adc
fmuls
mov
incb
xor
enter
cwtl
xor
je
out
inc
ficoms
xchg
or
inc
push
clc
cltd
stc
arpl
and
ret
and
int3
mov
mov
mov
cmp
lret
loopne
popa
test
pop
sbb
inc
sbb
fadds
dec
mov
into
in
jbe
inc
jg
loop
jecxz
sbb
enter
sbb
pushl
mov
xor
cltd
in
mov
mov
fwait
add
mov
jg
test
push
cs
cmpsb
das
add
shll
sub
adc
push
mov
mov
mov
pop
cld
and
pop
rclb
mov
dec
mov
cmp
jnp
lds
adc
pop
pop
add
mov
rcrb
xchg
or
push
pop
add
cld
mov
movsl
sbb
arpl
jb
sub
test
aam
or
clc
lret
rcrb
aaa
sbb
xor
lahf
hlt
mov
decl
sbb
sbb
cltd
xchg
adc
xchg
inc
outsl
cld
in
nop
add
dec
xchg
adc
xchg
pop
sbb
in
mov
insb
mul
out
lea
in
je
mov
sti
cmp
arpl
test
push
cmp
cli
cli
jg
sub
je
out
fadds
push
pop
jbe
jmp
iret
arpl
jecxz
mov
jle
incb
push
mov
pop
sub
or
aad
stc
xchg
out
imul
mov
out
mov
lret
push
sti
js
addr16
xor
scas
or
scas
mov
or
inc
sti
iret
cmp
outsb
xchg
jp
push
out
sub
aam
jmp
jecxz
mov
shlb
ret
adc
ffreep
jg
shlb
cmp
test
or
lcall
cli
mov
xchg
test
int
and
dec
pop
dec
jp
jg
test
xchg
cmp
fstpt
loopne
or
flds
jbe
aas
mov
add
mov
cmpsl
mov
das
out
insl
mov
cmc
nop/reserved
and
push
lahf
xorl
xor
and
aam
add
movsl
out
jg
shll
dec
in
cwtl
or
jl
lea
adc
loop
adc
loopne
lcall
cmpsb
faddp
xor
push
cld
push
mov
ret
in
mov
inc
inc
imul
adc
or
std
lods
cmpsb
dec
lds
lahf
lret
cmpsb
andl
mov
xchg
push
imul
mov
xor
and
jg
mov
push
inc
cmp
and
push
data16
aam
imul
sbb
cmpsb
scas
rorl
idiv
incb
cld
mov
shr
icebp
xor
add
cltd
ret
out
mov
dec
std
xor
fs
lods
shrl
js
fildll
das
ret
mov
in
xchg
clc
aam
cmc
arpl
dec
orb
jge
lea
push
rcl
cld
clc
or
sbb
iret
mov
mov
adc
add
push
inc
or
adcb
adc
aam
rclb
adc
cltd
or
nop
mov
and
sbb
ss
pop
arpl
pushf
dec
xor
pop
mov
scas
adc
test
hlt
outsb
mov
in
or
inc
hlt
mov
das
aam
push
int
test
in
mov
mov
cli
or
xchg
and
mov
divl
cmp
aas
dec
addr16
sbb
in
rcr
fisubl
jne
cmp
xchg
jae
mov
ret
add
xchg
clc
mov
mov
jb
dec
sub
or
push
adc
mov
loop
loop
inc
pusha
ljmp
fucomp
test
xchg
repz
ds
add
cmpsl
pop
adc
in
pusha
ljmp
insl
mov
inc
or
sub
daa
jmp
hlt
mov
cmp
inc
xchg
mov
insb
mov
cwtl
push
mov
lcall
insl
mov
adc
out
or
int
call
xor
aam
dec
in
lret
pop
cli
push
lock
inc
cmp
dec
cmp
les
jmp
xchg
push
dec
lcall
mov
rcll
mov
xchg
cwtl
or
fisttpl
movsl
pop
adc
icebp
inc
daa
jbe
push
adc
adc
or
mov
sbb
aaa
jg
arpl
loopne
push
aam
xor
pop
cmp
jnp
xor
mov
loopne
jo
loope
sub
push
add
add
outsl
cmc
inc
pushl
aad
ljmp
push
pop
dec
std
push
add
adc
scas
sbb
mov
and
divl
inc
rorb
scas
add
cmp
sbb
test
add
inc
mov
loop
pop
stos
ret
out
outsb
xchg
fisubl
or
pop
arpl
jmp
sbb
ljmp
notb
fwait
mov
mov
lea
popf
insb
cmp
push
sbb
loop
jle
or
out
mov
arpl
jo
dec
mov
adc
inc
xchg
push
stos
sti
ret
dec
adc
lahf
ret
push
scas
fisubrs
mov
repz
add
out
or
mov
jp,pt
jg
pop
aas
sbb
dec
mov
push
clc
ja
roll
in
jmp
inc
sar
sar
jne
out
cmp
jle
xlat
dec
jne
pop
outsl
les
fcoms
stos
xchg
jae
inc
dec
jle
lods
push
fnstsw
test
les
sub
sbb
mov
cmpsb
clc
out
cmp
adc
cmp
nop
imul
outsl
push
cmp
and
aaa
dec
sub
and
mov
mov
in
lea
xchg
dec
insl
gs
lock
adc
sub
or
mov
dec
enter
test
adc
sbb
cmpsl
sub
adc
fdivp
jle
jecxz
aam
icebp
outsl
rolb
or
adc
nop
inc
jl
outsl
sub
call
fs
decl
rolb
rcrb
movsl
cmpl
aad
xor
jecxz
lret
mov
pop
adc
mov
or
arpl
mov
push
push
xchg
in
movsl
lods
das
jno
stos
inc
insl
mov
clc
das
pop
add
ret
call
lret
lds
cmp
sbb
cld
pop
add
inc
jno
xor
les
xchg
jb
sub
adc
xchg
cwtl
jo
test
ljmp
push
rclb
cwtl
jp
dec
insl
pop
push
jp
add
decb
hlt
je
mov
mov
fwait
out
das
mov
adc
mov
lods
inc
sahf
popa
std
lock
sub
fwait
mov
mov
je
sbb
popf
inc
xlat
push
push
inc
stc
push
cmp
in
pushl
or
dec
leave
icebp
mov
popf
pop
addr16
dec
popf
dec
test
test
addb
mov
loopne
adc
call
inc
push
adc
dec
xchg
lock
not
call
sbb
test
inc
adc
es
shrl
mov
jbe
mov
mov
and
fs
mov
jo
push
pushf
arpl
push
jp
or
xor
in
inc
dec
packsswb
or
cli
lret
cmp
push
outsb
fwait
imul
mov
and
test
loopne
leave
push
into
lds
fsubs
rolb
popa
mov
sbb
cli
dec
lods
dec
mov
lds
lock
adc
call
inc
push
sub
pop
leave
out
adc
push
or
shlb
pop
jp
in
inc
sbb
cwtl
ss
mov
and
push
leave
jo
mov
lods
pop
add
jge
repnz
loopne
cmpsb
pop
jno
rol
fistps
jmp
in
add
inc
jnp
inc
mov
insl
pop
add
call
dec
jb
inc
les
jbe
pop
pusha
jmp
mov
lret
push
sbb
mov
fildl
mov
cmp
or
sub
dec
mov
rcll
xor
mov
push
sub
xchg
or
fidivrl
dec
in
incl
jp
push
test
mov
ss
hlt
lock
cli
movsl
dec
sbb
adc
adc
sub
cmpsl
and
into
or
je
jle
pop
imul
movsl
mov
mov
mov
pop
jecxz
fildll
imul
inc
sbb
decb
push
notb
movsl
dec
mov
pop
cmpsb
jle
mov
in
adc
test
fcmovu
jno
pushl
in
sahf
shll
jle
jns
stos
sbb
jecxz
fists
aas
mov
aam
jmp
mov
popa
push
jecxz
cmc
outsl
mov
imulb
mov
xchg
fiaddl
test
pop
xchg
xor
hlt
aaa
loopne
imul
ja
sub
push
inc
adc
mov
fbld
adc
cs
and
ja
ljmp
or
or
fsts
mov
xor
xor
popa
push
and
sub
jge
cwtl
mov
mov
mov
fsubr
mov
lret
sbb
faddp
and
jb
cld
popa
test
lea
jp
sbb
int3
pop
aas
sbb
push
pop
popa
xor
cmpsl
fcmovnbe
lcall
jno
fsts
idiv
movsb
jmp
xor
sti
adcl
and
hlt
mov
dec
in
cld
outsl
xor
sbb
ljmp
pop
sub
push
xor
adc
dec
daa
lcall
adc
popf
mov
call
sbb
dec
mov
push
notl
inc
outsl
pop
out
pop
mov
inc
je
or
bnd
outsb
stc
aaa
icebp
xchg
ficoml
popf
sub
sbb
xchg
and
lcall
xchg
lret
movhps
mov
out
or
in
pop
ficompl
call
add
push
pop
jge
dec
xchg
jl
mov
test
cmc
sub
orl
call
shl
pop
and
sub
rcr
pop
sub
push
sub
sbbb
fisttps
cmp
out
imul
mov
sbb
jge
in
pop
dec
out
pop
cltd
or
push
mov
outsb
inc
mov
sbb
fcmovnbe
sysexit
xor
pusha
shlb
ret
push
or
adc
popf
xchg
arpl
lcall
pushl
lods
xchg
mov
iret
xor
mov
mov
lods
out
push
inc
jmp
inc
cmp
or
push
aaa
and
sub
in
lret
sbbb
cmp
test
mov
mov
aad
ja
nop
xor
mov
arpl
xchg
es
fwait
imul
sub
xchg
add
loop
xor
pop
adc
pop
fiadds
or
xchg
inc
xor
jecxz
adc
push
adc
mov
sub
test
cmp
je
jle
cli
adc
and
push
dec
subb
mov
adc
jg
test
sub
in
mov
loopne
pushf
inc
fs
ljmp
mov
push
dec
dec
test
xchg
add
jne
cmpsb
xchg
xor
adc
xchg
pop
fs
test
xor
sub
mov
in
pop
mov
lahf
pop
nop
inc
ret
dec
push
jle
push
test
xor
pop
inc
mov
outsl
inc
pop
add
and
mov
pop
push
inc
and
out
cs
clc
jg
sbb
icebp
into
in
aas
pop
and
loop
notl
mov
into
add
inc
fistpll
loop
daa
sbb
lock
std
or
jecxz
aas
xchg
pop
xlat
mov
les
inc
mov
add
adc
cmpsb
adc
pop
ret
outsl
lock
pop
cmp
insb
ljmp
push
cmp
adc
out
push
hlt
loop
cmp
dec
call
pop
clc
adc
psllw
rolb
popl
cmp
cmpsb
lds
mov
dec
mov
pop
cld
lcall
mov
pop
scas
int
inc
scas
lea
mov
cli
cmpsb
out
cmpl
je
cmpb
mov
xor
enter
dec
sub
hlt
mov
lods
push
call
in
xor
outsb
dec
jne
sub
scas
dec
jae
cmp
fcomip
data16
xor
mov
test
mov
or
rcr
insb
les
adc
faddl
sub
mov
xchg
ds
jbe
inc
cmp
mov
add
push
std
mov
clc
sbb
mov
mov
hlt
leave
iret
lahf
pop
shrb
pop
pop
loope
inc
xor
sbb
cmp
push
inc
add
sbb
mov
pop
sbb
test
imul
mov
adc
sbb
cld
mov
add
sbb
inc
inc
incl
add
jle
das
xor
sub
xor
mov
mov
sub
jecxz
inc
pop
fldl
cli
jecxz
xor
add
loop
sub
outsl
fldt
and
adc
xchg
repnz
mov
fdivrs
bound
mov
sub
push
cmpsl
aam
add
jecxz
ds
in
mov
jg
stos
mov
or
daa
icebp
fimuls
adc
sbb
xchg
mov
push
sub
inc
push
sbb
mov
cmpsl
stos
jmp
cmp
and
push
icebp
jns
push
icebp
out
xor
pushf
or
push
pushf
cli
in
aas
mov
jecxz
adc
cmp
sub
dec
and
jg
push
push
push
push
sti
loope
cwtl
andl
mov
push
adc
stos
sbb
mov
je
jnp
dec
pop
pop
or
andl
push
fnstcw
dec
js
pop
cmpsl
mov
push
xchg
sub
push
xchg
stos
add
shr
es
rclb
daa
hlt
sub
aaa
adc
rcrb
xchg
adc
jnp
pop
test
add
cmpb
xchg
push
xor
rcll
sub
and
lcall
loopne
movl
lods
pop
fisubrl
loop
or
or
push
add
inc
inc
cli
jae
push
adc
or
mov
pop
test
stos
mov
push
jmp
or
loopne
mov
dec
mov
das
sub
sub
mov
cmpb
sbb
sub
icebp
outsl
ss
jbe
dec
inc
inc
aas
popf
icebp
mov
adc
and
pop
inc
jae
vprotw
mov
enter
inc
dec
fists
dec
or
repnz
push
or
inc
gs
push
cli
lcall
mov
repz
mov
mov
and
inc
sti
ret
subl
dec
mov
pop
pop
mov
cmp
test
rcll
sbb
add
insl
int3
push
lock
and
adc
fmull
and
dec
add
cmpsb
mov
int3
pusha
xorb
mov
push
popa
fmuls
sbb
inc
cmp
addb
enter
adc
sbb
sub
sbb
cs
push
adc
out
push
mov
outsl
orb
ss
cmp
and
les
inc
mov
je
int
mov
cmpb
es
sahf
scas
adc
out
xchg
shlb
lret
mov
or
xor
loopne
adc
mov
xor
jp
scas
clc
je
add
mov
cmp
lcall
xchg
push
lock
addl
divl
push
fcoms
adc
in
lea
push
paddsb
cmpl
out
shl
je
adc
xchg
lcall
lret
xor
fidivrl
clc
inc
ret
or
aaa
inc
mov
mov
cmp
mov
cltd
mov
dec
jne
mov
icebp
ja
pop
inc
mov
int3
out
push
scas
mov
fsubrl
dec
ss
lock
in
add
mov
inc
repnz
call
shrb
jp
outsl
inc
fimull
mov
mov
inc
lock
mov
andl
pop
mov
fnclex
cmp
push
call
cmpsb
outsb
and
jo
mov
ljmp
jg
dec
cltd
xchg
inc
xor
xlat
push
loope
rcrl
and
mov
inc
mov
cmp
test
movsl
and
jecxz
mov
push
add
clc
cld
dec
pop
xchg
xor
add
pop
jmp
fst
sbb
xor
rorl
imul
pop
lret
call
add
mov
repnz
jno
xor
dec
lods
mov
sbb
cmp
jmp
int3
andl
popa
test
dec
jge
or
sbb
lret
mov
dec
pop
inc
int3
jbe
push
xchg
lahf
cli
xchg
cli
fwait
pop
aas
stos
jb
xlat
mov
dec
xchg
lcall
inc
mov
push
movl
in
and
in
xlat
inc
std
jge
add
daa
jle
lds
cmp
popa
xor
ss
loope
mov
pop
js
jbe
lock
mov
ret
int
mov
dec
push
hlt
loopne
cmp
mov
adc
pop
test
out
inc
sub
pop
lret
xor
xchg
pusha
cs
adc
das
mov
mov
pushl
sub
jle
sbb
ret
test
jg
xchg
dec
inc
imul
adc
arpl
arpl
xchg
sub
cmpsb
nop
cmc
fadds
push
shl
rorb
sub
mov
out
jle
subw
pusha
pop
add
fucom
gs
push
ret
gs
outsl
cmp
loop
pushl
adc
add
addr16
push
xchg
add
mov
data16
inc
adc
sbbl
push
outsl
int3
into
add
cmp
xor
and
add
push
lock
sub
and
pop
xor
mov
shr
add
add
adcl
cmpl
imul
andb
popf
add
pusha
xchg
push
add
cmp
orb
or
hlt
and
fildl
and
mov
imul
lret
xor
loope
sbb
inc
jnp
xchg
xchg
aas
lds
jnp
dec
jp
and
jmp
js
cmp
cmc
fiaddl
ret
xchg
sub
push
loope
and
add
push
nop
mov
pusha
in
push
sarl
ds
subl
test
push
lock
mov
push
lock
mov
orb
inc
repz
jns
push
mov
jb
stc
imul
mov
jg
ret
or
jne
rorl
fadd
add
sub
xor
adc
sub
les
divl
adc
sbb
or
or
lock
mov
lods
add
adc
or
adc
ja
loop
fildl
xor
inc
adc
adc
sub
mov
orb
jp
xor
iret
div
add
add
dec
sub
and
xor
fdiv
sbb
xor
mov
and
ret
popf
iret
xor
adc
or
push
push
fwait
stos
loop
add
ret
in
pusha
mov
lret
pop
cmpsl
adc
test
or
cltd
mov
and
dec
push
pop
mov
fsub
ret
filds
push
fistl
sub
imul
mov
adcl
mov
das
cmc
gs
mov
dec
sbb
sub
adc
or
sbb
addl
dec
shl
sbb
test
mov
inc
adc
outsl
aas
imulb
test
lea
ss
lods
adc
sbb
lds
loopne
inc
gs
xor
popf
or
dec
inc
cwtl
or
shll
adc
int
ficomps
pop
les
mov
sub
mov
les
jg
insb
icebp
fdivr
xchg
and
adc
fnstcw
push
jmp
cld
or
add
fwait
sti
pushf
cld
or
cmp
push
sti
mov
jb
xchg
outsb
inc
dec
cmpb
push
inc
dec
or
mov
clc
jns
adc
or
push
mov
int3
shll
aam
lds
xchg
repz
mov
orb
int3
cmp
lods
cmpsb
inc
dec
jl
mov
int
xor
testb
jmp
add
or
push
sub
xchg
lods
mov
sub
in
loop
pop
xor
orl
mov
fs
mov
sbb
scas
mull
js
adc
adc
push
jae
cwtl
dec
adc
xchg
in
sbb
sarl
mov
pop
inc
enter
add
push
push
push
aad
repnz
clc
add
mov
or
cltd
test
add
mov
xchg
mov
bound
icebp
rolb
cmp
inc
add
in
adc
je
push
add
repnz
xor
js
popa
push
sbb
xor
adc
mov
test
jo
mov
stos
cwtl
jno
or
ljmp
jge
aam
fdivs
pop
inc
mov
push
pop
mov
mov
mov
jg
subl
shlb
aad
fcmovnbe
mov
jl
in
data16
ds
fdivl
or
je
inc
adc
cld
insl
cmp
inc
lods
add
rclb
xchg
out
push
ja
popf
in
cmp
push
sub
loopne
sub
mov
cmpl
je
rcll
mov
xchg
daa
sbb
in
dec
je
mov
test
push
inc
cmp
lock
les
mov
daa
loopne
mov
jmp
imull
loopne
xorb
cmp
pop
cmp
xchg
shll
das
andl
push
mov
fcompl
lahf
ss
xor
push
jmp
cmpb
sub
addb
insb
in
sbb
insb
lods
pushf
loop
adc
aad
dec
xchg
sbb
movsl
sub
add
cld
shufps
push
sarb
or
jns
cmp
xlat
flds
pop
dec
push
mov
es
je
cmp
jmp
sbb
sbb
add
dec
add
mov
pushf
out
sub
cmp
arpl
test
lock
pusha
mov
mov
and
mov
mov
lods
pushf
jmp
xor
or
pop
fdivrs
xchg
jbe
adcl
xor
push
test
sbb
adc
movsb
aam
lret
xchg
mov
in
and
add
jbe
sub
jns
mov
test
sarl
add
std
shlb
mov
adc
jmp
add
ret
stos
dec
std
decl
in
add
aaa
push
inc
push
or
mov
dec
jnp
fs
sahf
cwtl
inc
fstpl
sbb
pop
ret
je
or
aaa
lahf
outsl
cltd
call
xchg
fistpll
xor
rorb
scas
inc
adc
push
nop
cmpsl
incl
push
adc
scas
xchg
loope
lret
call
mov
cmp
jmp
add
ret
mov
xchg
xchg
and
pop
fsts
movsb
loop
dec
adc
xchg
enter
mov
mov
push
jge
ret
dec
fs
cmp
repz
or
daa
pop
sub
hlt
jae
cmp
cmpsb
add
add
arpl
mov
call
les
movsb
decb
mov
cmpsl
ret
xor
faddl
push
and
sub
pop
mov
fnsave
ljmp
out
aaa
mov
jns
lods
pop
cmp
outsl
lahf
stc
inc
or
pop
inc
stos
decl
das
add
add
jo
inc
add
or
insl
and
mov
xor
adc
fdivl
rcrl
xor
ljmp
lods
xor
add
jl
inc
roll
xor
es
jg
decl
std
xor
mov
mov
or
lret
and
mov
dec
js
sbb
xchg
xor
icebp
mov
icebp
or
ret
push
popa
sub
add
push
xchg
push
sbb
outsb
push
cmpsb
je
adc
adc
das
aam
stos
mov
lock
add
jns
jmp
adc
adc
sbb
into
jecxz
lea
outsl
nop
fst
lds
ds
mov
mov
or
cmp
and
jne
std
sub
mov
add
sbb
mov
fsub
fmul
mov
or
cwtl
sub
add
or
add
jg
fidivs
mov
sbb
add
dec
jl
ljmp
mov
add
dec
adc
and
pop
and
adcl
jne
mov
inc
jg
xchg
mov
movl
leave
pop
outsl
enter
pop
js
ljmp
dec
xchg
push
mov
sub
pusha
imul
das
jl
nop
out
xchg
push
loope
jmp
arpl
lcall
aas
dec
test
adc
in
inc
inc
dec
shrb
add
and
add
or
in
and
aas
and
sbb
popa
inc
sbb
sti
mov
sbb
jo
inc
jnp
push
aad
loope
xchg
stos
loopne
xor
inc
jbe
push
xor
fldcw
aas
mov
sub
add
adc
adc
in
ds
push
fildll
gs
cmp
xchg
xchg
testb
test
adc
call
adc
stos
lahf
sbb
and
lds
subb
scas
cmp
or
clc
jns
cmp
iret
cmp
sbbl
mov
push
push
jg
loop
inc
lcall
xchg
fcmovnb
adc
shl
adc
and
xor
jg
adc
mov
jbe
xchg
add
cmp
stos
mov
or
test
cmpsl
add
fnstenv
push
out
mov
and
sbb
dec
cmp
in
jecxz
test
in
repnz
dec
imulb
push
fldt
inc
popf
pop
test
or
mov
add
fistpll
sub
inc
jne
outsl
loopne
ds
test
nop
adc
adc
mov
shll
dec
push
mov
sbb
js
ljmp
enter
inc
xor
mov
xchg
in
or
data16
add
mov
mov
test
push
adc
bound
push
xor
xor
pop
aam
xchg
inc
dec
sbb
sub
jbe
dec
ljmp
jne
and
adc
pop
push
adc
or
push
push
mov
cld
dec
movsl
add
daa
add
add
imul
imul
jae
sub
sub
inc
mov
inc
loope
test
mov
push
sub
cmp
cmp
movsl
out
rcrl
mov
hlt
out
xchg
cmc
inc
call
pop
test
mov
xor
jb
push
aam
mov
cmc
inc
and
mov
fdivl
dec
pushf
sbb
pop
or
add
adc
mov
mov
push
andb
xchg
inc
push
xchg
fcoms
icebp
movsl
stos
jl
jg
sub
inc
or
iret
scas
add
dec
test
mov
sbb
out
sub
mov
and
shl
or
add
mov
cmp
inc
push
mov
in
push
dec
rcll
sahf
cwtl
jne
rcr
jl
lret
sub
or
adcb
mov
js
xchg
pop
sbb
add
popa
inc
cmpsl
addb
adc
lea
pop
sub
xchg
and
mov
fbstp
jae
stos
push
mov
out
mov
out
jle
fmull
and
add
or
inc
xor
xlat
movsb
mov
es
ds
adc
adc
inc
mov
repnz
jb
xchg
pop
out
in
mov
mov
push
rcl
rcll
stos
loopne
jno
add
dec
cld
jo
testb
and
ret
pop
iret
push
xchg
sbb
ficompl
aas
ljmp
enter
cmp
jmp
pop
fs
mov
add
sbbl
mov
mov
lahf
clc
xor
add
pop
sbb
push
int3
out
fcos
call
jecxz
xchg
push
jl
lods
add
push
dec
test
subl
sub
dec
jecxz
push
stc
mov
push
push
aas
add
and
aaa
mov
aam
rolb
mov
ret
push
cmp
mov
push
mov
aad
incl
xchg
adc
cmp
mov
pop
loop
stos
outsl
mov
cmpsb
and
cld
lahf
add
loopne
cmp
neg
out
bound
rcrl
inc
test
adc
mov
jmp
in
cltd
into
into
or
cli
mov
inc
jle
mov
clc
loopne,pn
xor
cmp
push
sbb
sarb
push
out
iret
bound
mov
adc
push
push
pop
pop
mov
add
lock
aas
pop
popa
add
add
push
sub
add
je
adc
xchg
and
inc
jo
pop
cmp
jne
sub
int
mov
test
call
loop
sub
xchg
dec
mov
inc
fwait
push
adc
test
push
iret
notb
add
xor
xor
jmp
dec
pop
shlb
xor
jmp
lods
sahf
xchg
mov
outsl
addr16
out
test
xor
lods
and
sub
jg
cmp
das
hlt
inc
repnz
pop
push
shrl
cmp
mov
push
add
sbb
add
push
aaa
popa
push
cmp
hlt
out
mov
cltd
call
mov
push
xchg
inc
add
ljmp
add
fwait
pusha
loopne
sbb
in
cmc
test
cmp
bound
mov
sbb
mov
xor
inc
cmpsb
pop
mov
mov
adc
add
into
cmp
pop
push
jne
push
hlt
mov
or
seto
mov
pop
das
jb
sbb
and
cld
rep
add
or
lods
jp
jmp
out
inc
sub
cli
sub
pop
lcall
xchg
int3
in
ret
mov
stos
rcll
add
iret
add
jg
outsl
ja
lret
dec
push
xor
loope
mov
dec
stos
ds
sub
push
inc
mov
repnz
fcoml
lea
pop
orb
cmp
fwait
shrl
inc
and
addb
je
xchg
jge
incl
jo
pop
repz
fst
popa
mov
icebp
pop
mov
or
inc
add
outsl
insb
stos
fadds
push
lret
mov
aaa
decb
fs
stc
out
mov
push
js
jle
mov
jb
jge
push
movsb
push
lock
repnz
push
popa
sti
adc
out
mov
xchg
jbe
jmp
lcall
out
pusha
inc
adc
ret
mov
std
das
fimuls
pop
clc
cld
fmull
inc
cld
lret
stos
mov
push
add
or
addr16
mov
sbb
xorb
out
in
bound
fmuls
test
sub
push
jmp
pop
pop
xorb
js
cmpsl
iret
pop
mov
mov
xor
xlat
lret
mov
rcrb
or
sub
mov
sbb
nop
mov
sub
mov
mov
mov
sub
cmp
notb
push
or
pushf
mov
push
mov
jmp
loop
sbb
and
add
aad
mov
xor
gs
push
pop
dec
add
out
sub
mov
imul
data16
sbb
andl
int
sub
sbb
jg
popf
add
add
adc
mov
ret
add
xor
cmp
mov
aam
lods
imul
stc
jge
push
fadds
mov
shrb
inc
dec
add
sbb
mov
xchg
push
add
mov
adcb
sub
sbbb
fnsave
aaa
js
fwait
out
cmpsl
or
mov
xchg
pop
mov
or
mov
or
inc
lock
pop
cwtl
in
push
sub
in
jbe
in
cmp
push
cmp
push
xor
pop
jle
addl
jge
jae
pusha
push
push
xchg
lea
scas
orb
in
or
xchg
call
and
jbe
push
shl
jb
jb
or
out
add
sub
xchg
es
pop
inc
lock
ret
fnstsw
std
mov
clc
adc
mov
icebp
and
cmpsl
dec
psllw
orb
dec
sbb
adc
enter
data16
test
inc
cs
or
loop
inc
ja
mov
mov
xor
inc
cmp
mov
pop
sbb
jge
fbstp
testb
out
and
dec
aam
inc
in
shrb
fadds
lea
mov
out
or
inc
jo
shrl
subb
sbb
aaa
sbb
jb
mov
push
aam
inc
adc
sahf
sub
imul
outsl
fadds
out
cs
cmp
and
lods
cwtl
or
mov
sbbl
dec
lds
or
cmp
mov
push
mov
in
ret
popa
icebp
mov
push
inc
icebp
jmp
cmp
cmp
and
pop
in
mov
addl
out
xor
add
or
idivb
repz
lock
dec
rcl
not
ret
jbe
mov
ljmp
pop
rolb
int3
inc
pop
or
sub
push
mov
cmp
daa
fs
mov
pop
inc
dec
sbbb
mov
xchg
addl
xchg
pushf
mov
mov
imul
xor
mov
insb
hlt
push
add
movb
nop
lret
fcmovb
lods
xor
cmp
mov
adc
popa
sbb
mov
cmpsb
ret
jno
sub
xor
sbb
mov
mov
scas
pop
js
aam
imul
xchg
ret
outsb
aam
sbb
imul
out
mov
adc
xchg
inc
popf
loop
ret
xor
cmp
fwait
jp
add
andl
in
adc
insl
ficoms
adc
pop
lds
fists
push
filds
sbbb
decb
add
int3
pop
adc
sbb
mov
jbe
dec
add
std
mov
sbb
or
dec
jge
sti
out
daa
dec
xlat
jmp
push
xchg
or
pop
inc
or
inc
push
loope
stos
aaa
hlt
jo
jno
pop
jns
jb
xchg
push
dec
push
jmp
xchg
jecxz
cld
test
in
inc
inc
mov
mov
or
add
dec
push
xor
shrb
rolb
pop
jmp
push
xchg
xchg
aaa
fisubl
add
mov
sub
es
lcall
add
rcrl
xchg
add
fcomps
lds
push
das
fildll
xor
add
xchg
add
dec
cld
and
cs
sbb
xchg
in
lea
jle
push
std
pop
jnp
mov
jae
ret
dec
mov
lods
lret
dec
jo
outsl
icebp
gs
cltd
mov
inc
mov
icebp
dec
or
popf
pusha
cli
lock
pop
mov
ja
gs
pop
push
stc
mov
sub
mov
out
and
mov
out
add
fnsave
xchg
rolb
or
ret
int
gs
push
in
adc
add
data16
pinsrw
sti
fbstp
lods
mov
sub
pop
inc
pop
sub
roll
stos
jmp
and
inc
dec
jge
mov
and
cmp
scas
mov
push
pop
mov
fcomip
sbbb
add
push
sub
mull
and
mov
outsb
jo
adc
pop
enter
sar
lret
mov
cwtl
bound
bound
push
and
xchg
mov
cmpb
sbbb
pushl
lock
insb
xorb
faddp
into
mov
int3
lock
leave
mov
outsb
cmp
test
fiadds
fildl
dec
js
clc
or
sbb
jge
iret
and
hlt
in
or
test
cld
jns
xor
sub
hlt
sbb
sub
push
add
jp
mov
call
jle
and
jb
inc
hlt
pop
mov
imul
push
nop
cmp
xor
ljmp
push
jne
in
sahf
rcrl
mov
xchg
test
mov
and
xchg
aas
add
fnstsw
ja
add
rolb
aam
add
xchg
out
push
leave
out
add
add
ljmp
aad
stos
rorb
jnp
nop
xchg
xor
fcomps
roll
pop
inc
fiadds
lock
fwait
outsl
lret
and
outsl
loopne
adc
jnp
mov
jle
inc
negl
push
mov
imul
mov
test
push
dec
shlb
stc
outsl
aaa
cmpsb
mov
fchs
mov
fmull
sub
lods
es
stos
jno
or
sbb
dec
gs
sbb
loopne
shll
lcall
nop
sarb
pop
popf
stos
jae
iret
add
jge
xor
in
add
cmpl
testl
sub
nop
sbb
jl
inc
jp
in
sub
adc
pop
inc
dec
inc
xor
or
sub
jecxz
jmp
clc
and
xor
jo
cli
or
pop
cmp
sbb
and
sub
mov
sub
and
add
rorb
adc
mov
and
pop
jbe
xchg
xchg
xchg
into
push
add
push
cmp
jo
add
lret
rcll
repz
pop
and
inc
rorl
jae
push
test
je
xchg
xchg
dec
add
fnstenv
adc
ret
and
lds
clc
dec
popf
pxor
dec
enter
pop
test
rsm
addl
xchg
mov
jb
mov
xor
adc
push
imul
and
addr16
mov
adc
push
mov
push
andb
sbb
lahf
sbb
inc
mov
popf
jmp
cmp
jbe
sub
inc
mov
cltd
loop
mov
or
fdivs
lea
les
mov
add
mov
push
inc
movsb
add
jecxz
add
jecxz
adc
cmp
sahf
fldl
xchg
scas
dec
xorb
mov
add
test
push
push
popf
adc
cmpsl
cmp
insl
repnz
and
and
lret
and
inc
test
sbb
rcll
fildl
mov
ret
adc
push
push
jg
xor
hlt
xchg
adc
adc
loopne
mov
sub
jge
in
sub
data16
filds
inc
sub
test
xchg
adc
lret
in
add
or
stos
add
dec
cmp
incl
daa
pushf
ss
sbb
mov
stos
sbb
std
jg
pusha
and
les
ds
xchg
adc
cmpsb
std
and
test
pop
sbb
jo
pop
add
fmuls
jb
inc
dec
das
and
outsl
sarb
xchg
add
scas
mov
xchg
ss
jge
dec
call
inc
lcall
lret
icebp
mov
dec
test
xorl
mov
cli
fnstsw
daa
nop
fadds
stos
cmp
inc
xor
mov
and
and
fbstp
push
xlat
sub
outsl
jmp
andl
mov
or
sbbb
sbb
pop
mov
lahf
adc
pop
sbb
repnz
bndldx
mov
mov
icebp
xchg
data16
jbe
imul
mov
mov
mov
inc
std
fsubl
push
mov
push
cld
add
inc
movsl
mov
mov
add
inc
adc
add
push
xchg
mov
jecxz
adc
or
xchg
xlat
adc
jle
sub
addr16
jb
test
mov
dec
lock
mov
add
idivb
mov
inc
ret
loop
pop
sub
adc
mov
mov
mov
jl
and
cmp
and
add
outsb
xchg
cmp
jnp
mov
sub
je
and
xchg
clc
and
inc
adc
xchg
xlat
rorl
rolb
stos
push
test
sub
rclb
pop
inc
and
les
sub
pop
or
es
in
push
rclb
dec
subl
loope
sbb
mov
push
jo
les
inc
xchg
movsb
into
cli
nop
inc
mov
jb
jno
add
sub
fcoms
and
sbb
lret
cltd
adc
inc
mov
xchg
orl
lock
neg
lods
xchg
daa
mov
and
aaa
lret
inc
aaa
loopne
mov
fwait
hlt
xorb
jmp
pop
pop
and
xor
fdiv
fadds
inc
add
pop
xchg
sbb
or
pop
in
xchg
mov
push
mov
xor
mov
mov
push
sbb
inc
lods
stos
push
orl
and
addl
pop
add
inc
xor
xchg
das
or
hlt
xchg
addb
inc
xor
cs
jp
adc
call
add
ret
loope
jo
inc
push
ljmp
or
cs
test
mov
jp
sub
stos
dec
or
add
inc
inc
sbb
outsl
push
pushf
and
sbb
xchg
cmp
xchg
sub
push
inc
or
mov
adc
popa
imul
fcoms
adc
adc
stos
testb
mov
jno
xor
mov
out
inc
outsl
cwtl
inc
mov
test
xor
mov
push
inc
dec
xor
leave
sbb
sbb
xchg
hlt
hlt
icebp
and
enter
cmp
hlt
lods
inc
andb
jecxz
icebp
ss
or
xor
loopne
insl
xchg
arpl
hlt
adc
adc
cmc
jmp
test
ja
lcall
shll
mov
push
movsb
loopne
mov
adc
es
iret
adc
and
imul
ret
push
mov
push
pop
sbb
adc
imull
push
in
mov
inc
repz
add
out
push
add
push
push
jnp
push
jge
sarl
and
adc
shll
inc
sti
dec
cli
jge
sbb
js
mov
cmp
sub
xor
and
rcll
jl
rorb
shr
and
stos
mov
inc
xchg
add
push
or
add
scas
adc
push
adc
cli
cwtl
mov
inc
imul
adc
lret
and
cld
adc
add
push
inc
pop
xor
lods
andb
nop
stos
sahf
xor
aad
xor
mov
or
mov
test
sbb
int3
test
nop
xchg
mov
movsl
jo
loope
push
call
jns
sbb
stc
adc
mov
add
xor
add
lahf
dec
jo
inc
or
sub
cmp
push
sbb
shl
mov
sub
mov
clc
xchg
or
test
dec
std
movb
and
fstpl
dec
xchg
lds
repz
in
push
data16
xlat
outsl
stos
or
gs
fildl
or
inc
xor
pop
jne
sti
int
inc
sbb
mov
rcr
xchg
pop
push
cmp
sbb
inc
ficoms
in
lock
into
or
add
mov
je
sbb
pop
cld
jne
cwtl
aam
add
idivb
outsl
cmc
push
hlt
sbb
ja
fs
add
and
ljmp
int3
cmp
sbb
sbb
xchg
sbb
les
adcb
fwait
imul
pop
addb
pop
fimuls
mov
loopne
or
xchg
push
push
ss
sub
clc
dec
jne
and
sub
das
mov
scas
fcoml
push
push
lcall
cmp
inc
mov
dec
pop
pop
cld
jp
andb
inc
xchg
lods
shlb
fcom
cmp
pop
xor
test
xor
lods
fdiv
fldcw
clc
xlat
and
fcom
loope
inc
subl
shlb
fwait
mov
fdivl
into
pop
ficoms
fnstenv
or
fmuls
shrb
or
push
mov
sahf
sbb
sbb
adc
gs
inc
dec
add
stc
push
or
and
std
inc
jecxz
push
lock
mov
cld
cmpsl
jl
fwait
add
add
or
dec
lret
add
ljmp
std
test
aad
jge
inc
in
add
mov
notb
pop
lods
xor
pop
xchg
sbb
xlat
inc
fstp
push
sbb
dec
lock
hlt
and
mov
subb
jno
jl
and
jmp
sbb
idivb
adc
or
jns
es
cmp
sub
add
dec
add
jmp
cmc
jmp
rorb
add
mov
notb
mov
cwtl
loope
xchg
mov
pop
xchg
xchg
lods
mov
fildl
or
or
pop
mov
xchg
pop
add
mov
jmp
popa
sbb
pop
xchg
enter
insb
and
dec
cs
cmp
mov
cmpsl
stc
jae
sbb
inc
mov
push
pop
mov
pop
into
inc
lcall
inc
outsl
sbb
clc
dec
orb
mov
stos
push
add
and
sbb
popa
movsl
loop
jg
jp
xchg
lahf
leave
fsts
pop
add
push
fldl
int
mov
jecxz
outsl
hlt
iret
or
ss
dec
dec
push
loopne
pop
pop
pushl
testb
in
xlat
inc
dec
jge
mov
mov
mov
gs
push
daa
xor
adc
inc
lds
mov
and
rcll
int3
or
test
xor
jg
aam
out
popl
xchg
in
in
notb
add
push
mov
xchg
lock
or
adc
adc
add
gs
int3
sub
mov
or
and
jne
mov
pop
andl
out
push
sub
mov
cld
inc
jl
cmc
roll
xor
iret
adc
or
in
mov
icebp
push
inc
pop
add
dec
repnz
call
cli
test
adc
add
test
leave
insb
div
xchg
out
lahf
mov
push
fnstsw
cmpsb
pusha
mov
jmp
imul
filds
mov
push
mov
cli
inc
leave
xchg
les
xor
mov
in
or
shr
mov
movsl
push
adc
xchg
mov
test
mov
fwait
cld
es
mov
pushf
adc
loopne
aad
or
cmp
cmc
xchg
push
les
inc
jg
andnps
in
lea
cltd
and
and
aaa
cmc
test
inc
test
fiadds
push
sti
push
lock
rolb
add
adc
idivb
mov
adc
xor
ret
das
filds
jno
shrb
mov
lcall
in
ret
inc
pusha
pop
test
arpl
cmc
dec
lcall
outsb
mov
and
push
imul
imul
or
loope
cld
imul
mov
mov
rcll
adc
icebp
movsl
or
jo
rorl
es
fdivl
je
pop
out
out
fimull
inc
outsl
sbb
push
out
pop
inc
sbb
jbe
adc
jae
outsb
xchg
inc
adc
insb
add
das
std
pushf
push
mov
das
stc
mov
sbb
sub
xchg
pop
cld
ljmp
loope
or
repz
in
and
jmp
sti
incb
mov
pop
out
push
xchg
loope
cmpsb
or
loop
sbb
lret
and
mov
lret
add
xchg
sub
lock
aas
and
jns
sbb
inc
aam
insl
ret
mov
cmp
push
dec
cmp
mov
rorb
dec
les
push
sarl
push
push
inc
mov
jbe
mov
ss
add
or
push
sub
mov
xchg
cmp
inc
mov
popa
test
sbb
mov
inc
cmpsl
sbb
jbe
dec
lds
xor
jle
and
dec
add
or
and
add
mov
add
sub
pop
sbb
jl
pop
jbe
mov
cmc
adc
fldt
mov
mov
fwait
popa
cmp
js
add
and
push
out
out
into
mov
push
xchg
out
es
mov
xchg
xor
cs
jg
inc
mov
sbb
push
xlat
stos
sub
mov
imul
mov
add
sbb
jne
sbb
addr16
lock
mov
cs
sub
sub
mov
cmpsl
jp
sbb
sbb
stc
fdivr
pop
dec
daa
inc
push
ja
push
or
pop
mov
orl
in
mov
sbb
movsb
xlat
stos
sub
outsb
mov
mov
add
jp
jecxz
mov
ja
and
es
into
or
jecxz
pop
jbe
mov
sub
loop
ja
cmp
daa
push
shrl
inc
jnp
das
push
dec
pop
flds
and
jnp
outsl
cli
push
fcompl
xchg
inc
mov
and
leave
dec
fiadds
dec
xchg
incl
push
push
stos
sarl
add
loop
adc
push
push
lods
or
rcll
adc
icebp
repz
jg
movsl
push
xlat
loopne
jnp
xchg
jae
in
xor
addr16
pop
add
jmp
adc
adc
push
cli
push
adc
pop
jmp
test
sub
bound
xchg
imul
add
mov
mov
shll
mov
pop
mov
iret
mov
es
jg
ss
ds
aam
icebp
sub
or
aas
pop
dec
lock
sub
stc
movb
movsl
adc
inc
incl
xor
test
fbstp
daa
or
clc
add
mov
add
inc
jnp,pt
mov
jge
cwtl
add
pop
test
mulb
sbb
fs
ds
stos
loopne
add
lahf
pop
js
cmpsl
jno
shll
and
jmp
outsl
shrb
rcr
stos
aad
jge
xchg
sub
pushf
mov
dec
push
scas
in
test
out
mov
leave
pop
enter
les
in
fwait
mov
jl
inc
push
mov
pop
or
add
das
jmp
pushf
out
and
dec
jp
cli
cmc
xchg
mov
repnz
push
int3
repz
lret
inc
add
idivl
nop
adc
or
lret
into
lret
loopne
xchg
lcall
loopne
push
inc
dec
mov
and
adc
nop
shll
es
idiv
mov
or
pop
lahf
xor
outsb
jmp
mov
sti
mov
dec
sbb
adc
addb
xchg
and
and
add
add
addr16
clc
push
cmc
xchg
filds
xchg
cmp
es
pop
shll
inc
pop
cwtl
jge
push
dec
mov
sbb
xchg
jecxz
nop/reserved
mov
test
xchg
jns
mov
or
sbb
push
cmpb
xor
sbb
cli
es
add
fdivs
cmpsb
pop
xchg
cmp
cmp
push
push
outsb
ss
pop
jl
jl
lcall
ljmp
lock
repz
ffreep
push
aam
xchg
mull
dec
mov
shll
sub
shrb
and
fstpl
sbb
fstps
add
ret
xor
sub
es
mov
fisttpll
inc
sub
test
test
mov
loop
adc
lgdtl
cld
movl
inc
aaa
stos
out
in
decb
pop
cltd
and
icebp
jmp
int
sbb
push
leave
mov
xor
lea
push
xor
push
sub
pop
ljmp
ficoms
movsb
fimuls
lds
xchg
xor
jl
dec
sbb
pop
hlt
and
pop
ljmp
movsb
add
push
pop
xchg
hlt
sbb
aam
scas
and
mov
push
js
pop
mov
shr
loopne
cs
gs
in
adc
popf
and
jl
ret
iret
inc
mov
mov
fnsave
adc
cmp
popa
push
scas
repnz
jo
push
xor
sub
add
xchg
dec
push
jbe
add
mov
daa
and
rorl
fisubl
add
xchg
mov
call
xlat
outsb
ret
in
stos
repz
faddl
addb
mov
es
sub
push
jg
push
push
or
or
add
loope
cmpsb
xchg
sub
push
loope
xchg
inc
cld
and
aad
cmpsl
clc
mov
enter
loopne
lcall
add
sar
push
mov
mov
mov
add
mov
imul
inc
mov
ret
test
xor
nop
loopne
js
clc
or
mov
dec
inc
push
test
jo
andb
int
enter
add
hlt
mov
mov
and
jo
push
data16
test
mov
adc
and
add
scas
mov
in
fs
cmp
lock
je
dec
stos
sbb
lret
pop
clc
xchg
jle
inc
and
cmpsl
call
outsl
adc
int3
adc
rclb
lahf
bound
jmp
fidivrs
xor
fwait
out
outsb
xlat
sub
and
out
jmp
sbb
jo
and
pop
mov
subb
xchg
and
or
push
push
add
mov
ficoml
enter
adcl
imul
sub
test
push
pusha
add
ret
test
ret
repz
int3
dec
cmc
xchg
cwtl
out
jno
xlat
pop
or
jp
add
lret
ret
iret
mov
mov
dec
icebp
pop
adc
add
sbb
push
push
rol
aas
enter
lahf
lahf
xchg
jmp
sbb
inc
adc
rolb
scas
cltd
jb
and
jnp
mov
lcall
or
cs
add
push
or
mov
lret
fwait
stos
or
ret
insb
push
fldt
fcoms
test
sbb
sub
int
faddl
lret
sub
mov
call
jbe
sub
and
insb
push
subb
mov
loop
arpl
mov
push
xchg
or
sbb
adc
add
sub
out
sbb
out
and
xor
or
mov
mov
inc
jnp
gs
xor
push
flds
js
push
lretw
sbb
cmp
push
jge
lea
mov
push
stc
insb
dec
inc
push
andl
add
add
or
dec
inc
out
sub
into
fcomps
pop
mov
mov
stos
aam
dec
lret
inc
adcb
pop
dec
sub
int
sti
loop
add
hlt
cmpsw
loopne
fdivrl
mov
push
and
stc
loope
das
out
outsb
repz
mov
in
lahf
add
testb
push
cld
std
cmp
mov
and
int
or
adcb
rolb
xor
xor
sarl
stos
or
dec
sbb
xor
add
rcll
sarl
pop
mulb
fiadds
mov
or
add
and
sarl
push
add
or
inc
lret
stos
ljmp
push
xchg
add
inc
std
dec
sub
push
stos
cmp
addr16
adc
adc
add
mov
lods
mov
add
into
add
test
or
mov
add
adc
push
aam
jmp
jmp
arpl
push
jb
add
ret
add
imul
mov
bound
adc
pop
js
xlat
ja
adc
push
cmpsb
add
testl
inc
fisubs
leave
shlb
xor
mov
push
dec
push
adc
xor
inc
aad
test
fadds
add
mov
loopne
fs
repz
adc
cmp
cmp
int3
adc
xchg
stos
xchg
sub
mov
lods
cmp
and
mov
sub
lock
jbe
js
ja
lods
add
cmc
stc
insl
rcl
push
insb
test
fwait
movsb
out
arpl
subl
jne
push
push
cmp
add
jmp
lds
dec
lds
xlat
fcompl
out
lcall
stos
cmp
inc
push
and
adcb
or
sub
out
and
cmp
mov
loopne
mov
adc
mov
sbb
sub
inc
xor
add
lods
dec
loop
mov
ds
mov
in
or
lcall
sub
cli
pop
shlb
adc
adc
mov
aam
inc
xor
xor
push
pop
xchg
rolb
in
add
in
add
inc
test
mov
out
add
inc
or
cld
notl
jg
and
aam
out
jp,pn
jnp
out
sbb
mov
rolb
clc
mov
or
leave
rclb
lahf
rorb
sbb
add
out
test
pop
and
xor
sub
pop
andb
xchg
imul
cmp
rcr
mov
pop
add
cltd
mov
jno
push
clc
insb
jae
adc
mov
lock
or
popa
inc
adc
call
add
jl
rcrb
out
inc
shlb
push
xchg
cmpb
test
dec
push
cmpsl
aas
and
jecxz
rcrb
add
xlat
out
lret
int
cmp
fdivs
aas
aad
adcb
cs
sub
adc
jle,pn
cmp
cmp
lock
sub
es
testl
ror
add
add
inc
les
sbb
out
testl
mov
mov
cmp
xchg
mov
mov
call
dec
movsl
push
mov
rorb
rcrb
dec
rcll
rcrb
inc
jb
xchg
outsl
xor
loopne
das
es
hlt
add
pusha
dec
lock
or
dec
in
in
pop
xlat
push
loop
sbbb
xor
mov
push
fstps
loope
aam
adc
mov
outsl
imul
lret
add
testl
cmp
add
test
andb
add
dec
mov
xchg
fistps
add
jne
sahf
repz
inc
mov
xchg
mov
mov
mov
adc
repz
mull
dec
into
add
and
sub
push
out
dec
sbb
adc
or
inc
stos
jmp
xlat
cmpsl
cwtl
jbe
jbe
inc
test
xor
jae
or
inc
dec
mov
push
dec
push
xor
mov
mov
and
add
cli
dec
add
mov
add
fmuls
es
stos
in
aam
add
cmp
bound
mov
loopne
cli
inc
sub
xor
iret
sub
aas
add
push
testb
jl
mov
xor
add
data16
add
loope
mov
adc
pop
rcll
push
add
mov
inc
mov
cmp
inc
loopne
jg
mov
mov
gs
fstpt
jne
popa
movl
mov
xor
push
cwtl
adc
inc
adc
pop
mov
and
inc
sti
sub
mov
add
xor
test
sub
adc
or
cmp
sbb
rclb
lret
adc
jno
mov
bound
inc
mov
loop
pusha
cmpb
push
clc
in
pop
sub
jo
loopne
pop
push
pushf
adc
inc
and
jl
xor
aam
and
data16
dec
pop
xor
mov
call
faddl
nop
out
stos
cmpb
in
jo
cmc
cmp
lods
movsb
pop
enter
dec
cmpl
fstpl
jge
mov
xor
mov
adcb
xchg
inc
aam
mov
scas
lock
rcll
dec
shlb
popf
ljmp
and
testl
jmp
lret
or
mov
adc
call
lret
push
cmpsb
adc
dec
push
and
outsb
xor
hlt
xchg
setne
inc
test
test
sti
mov
cld
cmpsl
stos
mov
jmp
movsl
mov
jo
ds
pop
sar
je
push
arpl
mov
add
mov
add
jge
inc
outsb
fisttps
and
repnz
fimull
push
fucomp
fstpt
jge
lea
sub
dec
and
push
out
jmp
dec
outsb
fmuls
rorb
leave
mov
sbb
add
aas
push
add
add
and
xchg
ljmp
mov
add
xchg
adc
idiv
mov
jmp
add
mov
mov
imulb
shrb
nop
aam
push
add
nop
and
stos
pop
xorl
add
popf
dec
push
ljmp
popa
shl
out
sbb
push
shlb
cmp
addl
pushf
push
push
cmp
add
add
add
jge
inc
incb
testl
cmpsl
addl
pop
adc
fistpll
test
xor
push
sub
lea
std
or
ljmp
push
add
jecxz
push
xchg
outsl
pop
jno
and
xchg
jp
xor
adc
in
dec
and
das
push
dec
mov
std
in
das
pushl
push
add
fldcw
loop
mov
das
rorb
rcl
cmpb
in
call
add
mov
adc
xorl
inc
and
sub
dec
xlat
add
xchg
mov
into
test
sbb
xor
cmc
decl
cld
in
je
push
lret
mov
push
fstpt
popa
jbe
lods
aad
std
pop
adc
sub
dec
pop
or
and
stos
adc
mov
pop
or
rorb
adc
in
mov
data16
xchg
pusha
test
and
repnz
insl
xchg
scas
and
sahf
and
and
out
mov
fidivrl
call
sub
cli
mov
push
push
dec
pusha
bound
lahf
addr16
mov
inc
inc
aas
into
fdiv
push
cmc
ret
insb
jp
shlb
inc
outsb
sub
and
push
jge
pop
add
and
or
jmp
je
pop
fcmovnu
sub
inc
adc
inc
rcrb
add
add
mov
sub
scas
repz
adc
hlt
cmp
out
adc
inc
xchg
adc
pop
mov
xchg
pop
fisttpl
jnp
dec
adc
sub
dec
push
jae
add
sbb
pusha
ret
cmp
lds
movl
mov
aaa
adc
fmuls
fs
xor
gs
insb
sbb
mov
dec
out
int3
sbb
cmp
in
insl
or
jp
push
outsl
gs
mov
or
and
sub
insl
adc
mov
out
ljmp
mov
sysenter
andl
das
add
inc
cmpsl
lds
xchg
and
pop
fldlg2
push
add
icebp
mov
ret
pusha
scas
lcall
in
add
jmp
test
xlat
or
aad
or
scas
lock
dec
lds
xor
push
popf
or
cwtl
fldcw
pop
mov
inc
xchg
sub
and
hlt
or
sbb
inc
test
push
pop
inc
imul
jecxz
test
xchg
mov
aaa
mov
pop
dec
les
xchg
sbbb
xor
add
fadds
cmpsl
adc
cld
mov
cmp
mov
pop
cmp
xor
xchg
outsl
icebp
fbld
lcall
test
cmp
mov
arpl
and
mov
stos
aad
add
add
inc
adc
fldcw
out
mov
insb
or
lret
mov
push
ret
out
loop
dec
push
inc
cltd
adc
call
jecxz
xorb
out
sub
sub
ss
dec
jbe
mov
dec
sub
pop
cs
pop
sbb
repz
and
add
or
and
out
mov
les
sub
cmp
sbb
dec
cmp
xchg
fwait
mov
test
testl
xlat
aad
ljmp
int3
or
test
xchg
jb
adc
and
ret
jne
pop
xchg
adcb
js
cmp
add
mov
pushf
ret
mov
and
and
mov
aad
push
data16
dec
sub
hlt
mov
pop
push
xchg
pop
shl
inc
das
pusha
jo
bound
xchg
sub
sbb
and
jg
out
pop
inc
pop
filds
pop
pop
pop
lods
test
mov
test
cmp
adc
mov
das
sbb
cli
pop
xor
sub
push
cmpsb
out
dec
insb
add
push
fsin
add
dec
test
mov
dec
shll
js
adcb
les
es
mov
xor
das
inc
pop
mov
dec
mov
shl
mov
add
push
fnsave
sbbb
sub
pop
push
xor
leave
stos
int
xor
add
mov
cmpsb
into
stos
dec
in
mov
or
mov
adc
and
mov
xorb
mov
fisttpll
inc
add
mov
cmova
add
cmp
pushf
dec
or
adc
and
and
in
sub
xchg
add
adc
push
add
push
repz
add
sub
addr16
test
dec
fbld
aad
loope
fldenv
flds
lds
pminub
mov
or
fildll
push
inc
movl
mov
fsubrl
cmp
es
pop
and
push
imul
mov
insb
mov
pop
and
mov
inc
jmp
sbb
shll
inc
mov
stos
mov
test
dec
and
out
add
filds
or
testl
std
mov
jl
or
data16
adcb
and
jle
cli
and
in
mov
cmp
rcrb
leave
call
cld
leave
sub
add
ficoms
ret
imul
les
mov
mov
std
and
cmp
xor
test
sub
nop
adc
jo
psadbw
fs
gs
pop
add
push
not
imul
add
and
ret
sti
clc
adc
mov
mov
and
jbe
bound
loope
scas
addl
mov
jb
fwait
cli
dec
push
dec
add
inc
inc
jle
cmc
cmp
sub
and
cmc
mov
frstor
fiaddl
xor
inc
jmp
add
ret
or
xor
lret
push
mov
fmul
movsl
sbb
loop
add
lods
add
jmp
cmpsl
xchg
jo
sbb
mov
shlb
jge
mov
adc
xor
sbb
add
mov
les
lock
mov
jno
pop
and
adc
adc
push
inc
cwtl
shll
jecxz
jb
jne
dec
rcrb
das
sbb
xor
add
and
mov
xchg
inc
mov
adc
loope
rcll
pop
inc
mov
shlb
add
add
add
jno
nop
fsubrl
js
rcll
xchg
clc
fisubl
pop
aaa
inc
add
inc
lahf
cld
daa
cmp
or
aaa
mov
daa
aad
dec
cld
sahf
movl
aas
jns
loope
fwait
inc
test
push
xor
lahf
xor
xchg
loopne
add
popa
and
push
inc
outsl
xchg
add
sarl
inc
loopne
mov
notl
pop
add
mov
cmp
ret
add
repz
or
imul
add
jo
pop
mov
dec
adc
fnstsw
and
sbb
test
add
sub
cmp
fndisi(8087
mov
repnz
inc
fucomp
mov
jecxz
cmp
cmp
jbe
pusha
dec
bound
loopne
push
lds
and
xor
or
or
cs
ljmp
cmp
iret
inc
ret
shrb
jnp
test
pop
stc
push
in
and
flds
jp
or
push
shlb
loopne
push
sub
cld
addb
aad
jg
and
and
leave
fldenv
push
ja
das
divl
lock
xchg
inc
adc
fwait
stc
add
sarb
loope
push
faddl
adc
xchg
add
add
loopne
cmp
jb
ret
popf
adc
into
inc
xor
icebp
sahf
add
or
subb
rclb
add
fwait
push
sbb
js
xchg
cmpsb
mov
or
cmpsb
adc
or
fs
adc
cmp
push
adc
icebp
sbbb
add
ljmp
stc
and
loopne
push
adc
or
pusha
mov
lcall
inc
and
sarb
cmp
lods
mov
or
in
push
rorl
xor
scas
loopne
adc
cmp
jmp
push
aam
inc
and
lcall
scas
dec
pop
xor
aam
ja
and
mov
mov
fidivl
movsb
and
loopne
ljmp
pop
das
lock
and
add
cltd
das
mov
ljmp
adc
add
orb
push
notb
sbb
lock
loopne
xchg
push
xchg
ja
cwtl
out
jp
mov
jle
xchg
mov
fwait
xor
fbstp
mov
testl
sub
roll
adc
adc
incl
test
js
push
popf
out
pop
loop
xchg
std
scas
imul
sub
call
mov
cld
das
dec
or
xchg
jecxz
push
sbb
or
adc
outsl
adc
add
aam
inc
push
in
loope
loop
pushf
insb
out
pop
je
fwait
aaa
clc
pop
jg
push
mov
shl
arpl
decb
stc
add
scas
cmp
adc
ficomps
add
call
push
adc
or
fsubrl
adcl
ret
jg
inc
pushf
add
test
int3
add
rclb
dec
rcrl
xchg
sub
aas
repnz
cmpsb
pop
inc
call
jno
and
incb
sbb
push
push
sarb
mov
xlat
aaa
rep
cli
adc
pop
add
pop
mov
mov
les
sbb
cs
into
and
jns
adc
push
push
das
jge
stc
xchg
pop
inc
mov
adc
add
sub
les
in
mov
dec
ljmp
adc
mov
sub
sbb
and
adc
call
fmul
call
pushl
inc
xchg
popa
push
lret
pop
add
popa
xor
push
das
xor
jns
in
push
sti
or
sub
addl
jge
std
jg
hlt
add
dec
aam
push
fmull
sbb
movsl
into
das
cld
decl
outsl
adc
push
out
pop
sbb
or
rorl
mov
mov
and
scas
add
incl
cs
in
xchg
and
or
adc
faddp
cld
mov
lcall
add
pop
ljmp
je
add
mov
ficoml
mov
jg
mov
mov
in
push
sbb
pop
jl
sub
add
sub
dec
test
pushf
in
ss
mov
outsl
call
jp
rcrb
data16
inc
sahf
inc
in
sbb
pop
je
data16
sbb
out
or
decl
mov
mov
mov
xchg
sbb
es
and
sbb
mov
mov
or
mov
xor
daa
in
arpl
jg
je
and
sbb
xchg
data16
add
test
add
in
dec
mov
je
lea
mov
sbb
imul
add
or
mov
cmp
fisubrs
mov
loope
mov
xor
pop
cli
pop
adc
sbb
mov
shrl
pop
cli
inc
mov
stos
xchg
mov
insb
ret
stc
adc
ss
jmp
orl
fistps
repz
mov
mov
adc
lret
mov
fistpll
inc
push
ja
sbb
or
mov
mov
xor
push
aaa
insl
xor
cld
lcall
lret
mov
mov
push
fimuls
or
cld
sub
push
mov
jmp
mov
xchg
push
scas
call
add
mov
xlat
pop
je
or
dec
mov
push
ret
test
add
ljmp
mov
xlat
push
dec
sbb
loop
std
or
movsl
xchg
jmp
add
mov
test
scas
pop
adc
pop
cli
outsl
mov
loope
ficoml
shrl
dec
and
lock
sub
repz
lods
xchg
js
mov
into
fcmovne
sub
das
cld
ret
xor
iret
dec
mov
ljmp
dec
and
dec
adc
sbb
mov
call
test
and
mov
jae
xchg
pop
mov
push
fildll
add
mov
add
loope
aam
pop
mov
push
jg
imul
es
dec
loop
lods
enter
cmpsb
dec
shrb
inc
imul
fdivs
js
insl
pusha
push
das
inc
outsl
sub
jge
jmp
jmp
dec
mov
inc
es
cli
scas
jge
push
xor
add
xor
sarb
test
push
cmp
adc
pop
out
adc
test
xchg
js
push
adc
fs
adc
mov
cmovb
inc
mov
pop
mulb
cmp
mov
xor
mov
daa
punpckhdq
xlat
fiadds
idiv
mov
sub
dec
sub
int
and
or
jne
call
xlat
push
comiss
add
mov
ret
push
mov
movb
jg
andl
and
jl
jne
cld
or
in
mov
int3
mov
sbb
lea
in
push
sbb
arpl
rcrl
icebp
test
add
jmp
xchg
stos
adc
cmp
and
sub
ja
sahf
and
pusha
addb
pop
or
adc
mov
mov
enter
jl
sub
leave
fstps
cs
jns
mov
outsb
out
cmpl
and
jle
arpl
stos
ja
xor
xchg
mov
pushl
icebp
jmp
sbb
add
adc
fiaddl
jmp
call
aam
inc
lret
stos
je
std
fildll
mov
loope
jp
xor
inc
lahf
ss
les
mov
ljmp
pop
addr16
nop
xchg
std
pusha
stos
mov
pop
lahf
jg
mov
pop
or
mov
shrl
mov
mov
outsl
cld
xchg
adc
add
jmp
pop
add
lock
push
cld
or
rorl
data16
fld
nop
adc
dec
outsl
sub
dec
mov
test
mov
pop
jl
sub
es
sub
push
lds
sbb
pop
add
or
sub
add
mov
mov
jnp
cs
add
outsl
xor
iret
call
fiadds
jle
xor
push
xor
outsl
jg
icebp
pop
daa
cwtl
or
cmpsl
das
and
dec
mov
je
imul
jmp
test
push
jo
jecxz
xor
out
cld
fbld
and
shl
je
xchg
mov
mov
cmp
pop
test
and
lock
sti
xchg
adc
fdivr
cmp
enter
push
hlt
add
push
loopne
inc
les
inc
int
pushf
add
sbb
mov
mov
and
cld
inc
mov
sub
shrl
mov
cmpsl
mov
das
sti
mov
dec
dec
loopne
mov
mov
and
pop
and
ret
rcrl
inc
mov
sub
sbb
lods
cmp
fmuls
mov
call
add
or
das
sbb
xchg
add
hlt
inc
pop
rclb
sbb
shl
add
mov
pop
mov
adc
adc
adcb
pop
or
inc
mov
and
shrb
add
pusha
adc
adc
xor
aas
mov
push
add
or
xor
inc
mov
or
add
mov
std
and
add
inc
adc
subb
sbb
xorl
fildl
js
mov
mov
inc
inc
ret
adc
inc
xchg
sbb
cmpsb
mov
in
cld
enter
sub
jle
loopne
and
pop
adc
pusha
adc
mov
aam
xor
push
in
in
bound
jge
mov
fsubrl
sub
adc
ret
jbe
and
inc
jae
jb
add
dec
jle
es
adc
adcl
adc
test
popa
mov
je
jp
sub
cmp
adc
xchg
adc
sbb
scas
data16
xchg
push
sub
or
test
imul
loopne
sbb
gs
sahf
and
cmp
or
adc
stc
xor
inc
pop
push
hlt
insb
push
sbb
test
or
cmp
test
fimuls
mov
insl
or
sub
dec
or
outsl
int
add
inc
xchg
xlat
fildl
or
test
inc
or
sarb
pop
inc
test
add
addr16
daa
add
testl
mov
and
and
sub
test
add
in
dec
or
push
inc
sub
inc
inc
lret
addb
pavgb
dec
leave
inc
test
divb
sbb
inc
and
push
inc
cmc
das
jno
push
pushf
jle
test
mov
push
sti
insl
das
xor
add
jnp
loop
inc
movb
call
cs
ret
xchg
sahf
hlt
lret
das
push
and
lea
push
test
xorl
outsl
jo
inc
and
sub
sbb
clc
cmp
rcll
adcb
add
test
sub
inc
in
add
sub
or
flds
pop
mov
or
mov
aam
push
adc
fldcw
outsb
aad
jl
jmp
aad
vmread
incl
pusha
push
loopne
sub
inc
ret
inc
lea
cmp
loopne
js
sbb
mov
mov
bound
jmp
stos
test
test
adc
push
xor
add
xor
stos
leave
mov
test
fisttpl
inc
mov
outsl
stos
cld
mov
mov
aas
add
mov
lcall
ror
popa
test
into
test
jmp
mov
and
push
into
sub
adc
mov
enter
shl
or
or
rol
xchg
das
sub
and
out
jl
add
or
jp
mov
js
jns
pop
push
jns
inc
mov
aas
aaa
dec
push
and
mov
xchg
and
setne
cmp
push
out
sbb
mov
xchg
cmp
add
addr16
mov
rol
pop
aam
jbe
lahf
cmp
sub
add
adc
ss
sub
jbe
ret
orl
cld
jae
sahf
mov
lcall
adc
xchg
push
shll
rorb
decl
orb
shlb
and
and
rcl
add
xchg
push
push
pop
pop
loopne
lods
cmp
pop
rolb
mov
sub
loop
adc
inc
add
mov
add
and
add
and
cltd
test
pushf
mov
adc
and
dec
jb
add
mov
mov
ror
xchg
or
es
xor
add
sub
loop
xchg
insb
xorb
hlt
stos
mov
out
push
mov
or
pushf
fcompl
xchg
mov
aas
test
cli
add
orl
jo
int
pop
js
out
cmp
out
jae
in
or
add
sub
fiaddl
cld
lods
cwtl
adc
xor
ja
pusha
add
cmc
or
aam
loope
fisttpll
push
pop
mov
adc
add
jbe
add
test
inc
xor
mov
mov
push
sbb
jmp
leave
cmp
jo
push
adc
rclb
xor
jno
fildl
clc
pop
outsb
lods
cwtl
iret
lcall
loopne
mov
and
xchg
sbbb
dec
mov
mov
push
add
scas
fstpt
sbb
out
call
push
mov
sub
scas
xor
mov
push
leave
arpl
dec
pop
push
aaa
push
push
sbb
lock
je
inc
push
movsl
lock
push
adc
jnp
lret
adc
repnz
int
sbb
or
cmp
shlb
divl
add
mov
jb
jb
mov
jnp
inc
and
and
stos
lods
sub
jmp
orb
lods
into
or
dec
dec
test
dec
cwtl
rolb
push
xchg
add
or
hlt
sbb
and
iret
sub
sbb
mov
leave
shll
ret
push
sub
sub
and
movsb
aam
adc
test
push
or
xchg
jge
xchg
or
negb
jae
lods
and
adc
mov
fnstcw
cmp
mov
aad
adc
test
mov
js
in
inc
mov
cmpsb
addb
movsb
add
outsb
fstps
sbb
pop
xor
int3
lahf
outsb
dec
cmp
ja
add
imul
sbbb
pop
aaa
xor
and
cmp
mov
add
inc
std
ss
ret
fisttpll
clc
data16
popf
loop
outsl
negl
orl
xor
ja
shll
xlat
jae
aaa
inc
enter
lods
sub
jge
sahf
int
adc
fmull
sub
lret
inc
push
inc
add
call
stos
add
int3
inc
jl
push
fdivs
fmuls
xlat
mov
sub
cwtl
pop
sarl
add
adc
mov
pusha
roll
mov
push
test
jne
add
inc
add
pop
xor
fidivrs
mov
mov
sub
xchg
shll
add
inc
xor
fildl
rorb
fisttps
cmp
shrb
sahf
sub
aaa
inc
cmp
add
push
loope
cltd
pop
adc
mov
shrl
xor
push
pop
cmp
push
fstpl
fisubrl
add
xor
pushl
hlt
mov
add
sahf
sub
je
lret
ja
cwtl
adc
pop
daa
nop
inc
xchg
in
int3
inc
pop
adc
inc
cld
push
ljmp
inc
sarl
inc
jo
push
repnz
fstpl
adc
andl
out
ljmp
icebp
imul
daa
fstpl
push
and
push
std
jbe
inc
scas
dec
andb
inc
sbb
sar
out
mov
stc
scas
cltd
out
xchg
lods
xchg
mov
aaa
icebp
pop
add
vmwrite
push
pop
outsl
sub
ficomps
jl
insb
or
aam
inc
jg
daa
popl
xchg
dec
add
xor
inc
adc
das
hlt
incl
clc
loope
push
popa
pop
popa
mov
stc
mov
jne
cmp
shll
jbe,pn
stos
push
pop
fwait
ret
into
aas
hlt
inc
pop
cld
fimuls
sbb
lcall
ds
and
ljmp
add
lahf
add
int3
mov
in
adc
fwait
stos
adc
adc
inc
mov
sar
cmc
test
adc
and
andps
mov
cli
jp
nop
sub
pop
jb
push
xor
movl
and
insb
mov
push
cmp
negb
ds
add
gs
call
mov
addr16
test
xchg
aad
adc
test
jmp
push
pushf
xchg
rcrl
shll
pop
std
mov
pop
lahf
cs
sub
fstps
cmp
and
push
push
fstpt
loop
add
xchg
int
add
loopne
outsl
hlt
sbb
add
add
fldt
sub
insl
adc
jne
pop
add
dec
mov
inc
adc
mov
pop
push
das
out
add
jl
aam
pop
inc
pop
mov
jl
out
mov
mov
jb
pop
jecxz
and
push
adc
scas
or
mov
sub
pop
xor
push
lock
popf
cmpsb
xchg
add
pop
add
loope
and
sbb
aaa
inc
xchg
mov
cli
sbb
hlt
sub
xor
push
mov
xchg
xorb
add
fdivr
outsl
or
inc
and
popl
push
push
mov
and
or
in
mov
xchg
cltd
mov
das
je
out
test
add
shlb
cmp
pusha
xor
leave
xor
pop
fsub
data16
jge
outsl
ss
pop
int3
pop
shrl
mov
arpl
sub
cld
jg
jno
cmp
sub
dec
add
jbe
jo
inc
adc
and
iret
mov
add
movsb
les
test
test
stos
jo
mov
mov
mov
imul
rclb
xchg
mov
in
std
cmpb
add
cld
xorl
and
pop
mov
das
or
inc
lret
sbb
add
jge
add
ret
ss
insl
loopne
ljmp
sbb
lds
sbb
adc
hlt
xchg
cli
mov
jne
mull
popf
loop
add
cmp
push
test
jg
loop
cmpsl
sub
scas
mov
shlb
xchg
inc
jl
and
adc
test
insb
cs
lea
cs
fcompl
adc
and
dec
data16
and
leave
jne
pop
pop
test
lds
loopne
shll
test
sub
mov
test
rclb
sbb
test
jge
aam
in
nop
add
fistps
and
ljmp
mov
adc
aad
cmp
out
mov
pop
lahf
push
push
fnstsw
cs
mov
fcmovnu
mov
insb
nop
shl
out
and
stos
add
dec
lods
mov
decb
push
jge
stos
inc
or
or
mov
mov
xor
ret
pop
rcl
xchg
add
jg
dec
adcb
ds
inc
and
bound
or
pushl
roll
ret
pop
nop
pop
outsb
xchg
lcall
add
adc
aaa
xchg
adc
jno
jmp
outsb
inc
mov
add
test
jl
sahf
jecxz
pop
pusha
pop
nop
stos
fidivs
lret
aam
sbb
cmp
clc
into
jmp
idiv
adc
add
sbb
sub
push
out
push
gs
xor
fnsave
push
mov
outsb
fdivs
rcrb
dec
dec
das
sarl
sbb
inc
mov
cmp
lret
pushf
call
nop
int3
cmp
dec
mov
sub
cltd
push
test
addr16
xchg
mov
adcb
and
inc
or
das
mov
jb
test
nop
es
and
js
sbb
in
xchg
incl
mov
cmc
adc
jnp
sub
push
pop
icebp
push
xchg
jecxz
sbb
pop
add
and
inc
or
mov
gs
and
and
rcrl
pop
mov
adc
popl
mov
das
rorl
add
mov
popf
enter
jo
jmp
xor
cld
gs
cld
sbb
xlat
loop
adc
mov
daa
add
fdivr
or
aaa
lds
jne
insb
or
mov
adc
nop
fdiv
sbb
jae
movsb
inc
add
jg
jg
shlb
sub
push
ret
xchg
cmp
mov
fs
test
mov
lock
testb
mov
jb
mov
jp
mov
hlt
lea
mov
dec
cli
jmp
pop
jmp
sub
orl
xlat
daa
sbb
and
sbb
js
xchg
dec
bound
cmpsl
sbb
jns
inc
subb
outsl
jle
loopne
shr
popa
inc
lock
int3
ret
sub
js
adc
fsubr
push
mov
fisubrl
jb
rcrl
sub
cmp
je
test
movb
adc
add
and
mov
add
movsb
or
push
ss
div
mov
stos
lcall
or
lret
out
mov
inc
add
frstor
adc
fsubl
and
inc
lds
aad
mov
ret
call
sar
fistpll
aad
lods
cld
jecxz
test
ret
and
mov
adc
out
cmpsl
mov
mov
push
inc
outsb
and
popf
mov
sti
xchg
mov
add
add
cld
add
sbb
xor
lock
fdivrl
adc
xchg
cli
aaa
mov
rcll
cmp
add
loopne
sub
push
pop
ja
mov
pop
out
test
imul
fcmovu
mov
adc
mov
or
mov
xor
sub
inc
sub
cmc
inc
pop
mov
lods
enter
or
test
stos
xchg
iret
pop
sbb
inc
xorb
mov
xchg
or
jp
add
xchg
mov
test
adc
addb
loopne
ljmp
add
insb
ret
xor
xchg
or
loop
add
add
add
dec
clc
push
adc
imulb
push
aad
adc
mov
sarb
pop
and
loop
mov
outsb
ds
add
int
icebp
dec
add
cmp
mov
sbb
jo
push
mov
test
es
or
push
sub
cltd
rclb
movsl
or
idiv
add
xor
data16
mov
sbb
sti
fwait
jnp
out
imul
enter
jo
adc
pop
mov
dec
push
dec
stc
add
mov
lret
adc
xlat
xchg
into
push
and
lock
call
pop
push
inc
push
jmp
test
frstor
add
or
orb
movb
hlt
ljmp
push
scas
ret
adc
jb
or
loopne
and
xor
xchg
loop
aad
and
testl
mov
jne
push
push
adc
in
or
mov
sti
mov
roll
cmpsb
mov
loope
mov
push
subl
dec
xchg
in
ret
or
push
ljmp
xchg
pusha
cs
and
and
sub
and
sahf
cmpl
outsb
dec
sarb
xor
add
fcompl
andb
mov
mov
cwtl
add
mov
jecxz
dec
jnp
add
mov
jecxz
gs
sub
inc
pop
adc
pop
inc
ret
push
xor
icebp
adc
pushl
mov
adc
sub
rcrb
sbb
push
ror
dec
cli
dec
add
and
add
add
loop
pop
pop
and
or
mov
push
movsb
sbb
pop
jl
cmpsl
gs
mov
lcall
mov
imul
fcmovnu
rorb
dec
push
or
dec
ljmp
test
or
and
jp
pop
out
rcl
jnp
loopne
push
jnp
sahf
icebp
test
je
add
add
aaa
dec
jg
add
dec
pop
andl
pop
sti
and
jnp
shrl
mov
inc
and
test
sub
xchg
js
ret
popa
xchg
adcl
or
lahf
add
repz
mov
or
cmp
das
mov
fstpt
and
inc
arpl
pop
jge
cmp
jg
mov
icebp
cmove
mov
mov
repnz
mov
ret
xchg
xor
push
and
btc
cs
sub
leave
sub
out
sti
lods
gs
outsl
cs
lcall
mov
adc
ffreep
aas
jb
bound
inc
or
cmpxchg
fdiv
pop
rolb
loope
test
mov
ljmp
dec
jne
fldl
xchg
aas
dec
cltd
or
or
insb
outsl
sub
jmp
adc
pop
cmpsb
or
inc
adc
push
les
add
push
jnp
std
sub
or
fdivrl
pop
and
inc
inc
push
or
inc
daa
cmp
inc
clc
and
rcrb
popa
xchg
test
clc
cmp
mov
pop
ljmp
adc
pop
xor
mov
test
jns
lock
call
daa
js
dec
pushf
add
js
cli
ret
les
ljmp
xor
cs
jg
shrl
std
fwait
les
in
dec
and
push
inc
es
fbld
nop
xchg
xchg
es
rcll
or
adc
std
add
mov
lock
jns
popa
mov
loope
or
mov
xchg
sub
and
mov
mov
or
das
cld
cmp
mov
imul
mov
inc
cmp
and
inc
mov
sbb
cmp
shll
pop
fwait
push
clc
jbe
mov
cmpsl
mov
mov
repnz
xor
xchg
and
subb
mov
jp,pn
xor
mov
and
push
loop
mov
lds
add
pop
test
ljmp
mov
das
cld
add
sub
jo
insb
fdivrl
mov
add
in
sbb
dec
jl
jmp
int3
std
add
sub
je
sub
mov
cmpsb
mov
fwait
adc
sub
or
jmp
add
std
std
and
mov
pop
jnp
clc
sbb
lods
ds
inc
icebp
xchg
sbbb
rorb
jecxz
or
pop
jecxz
testb
xlat
shrb
pop
jo
sub
insb
outsl
jg
jg
sub
fnstsw
sbb
push
call
pop
sti
dec
add
mov
adcb
inc
shlb
xchg
shl
jnp
ja
sbb
stc
fcomip
sub
add
into
mov
jno
pop
sbb
dec
pop
pop
je
into
das
push
lock
pop
sub
pand
sub
mov
jl
push
shl
and
add
or
das
cmovno
jmp
aas
sbb
mov
mov
hlt
xorb
jg
les
xchg
popl
cmp
outsb
icebp
inc
mov
push
test
pop
jg
hlt
aaa
sbbl
mov
mov
push
cmp
stc
cmpl
pop
icebp
out
or
dec
xor
add
pop
mov
mov
in
mov
movsb
xchg
das
std
push
idivb
sub
es
xchg
fcmovnbe
imulb
dec
inc
dec
fs
daa
nop
jge
pop
shr
mov
sub
pop
add
addb
stos
jno
mov
shrl
incl
push
or
inc
das
in
adc
pop
add
rolb
pusha
inc
pop
adc
mov
adc
mov
add
inc
pop
push
add
xchg
or
sub
jge
inc
mov
sbb
mov
xor
outsl
xchg
jae
adc
xor
hlt
pop
ret
dec
pushf
hlt
daa
cmp
stos
loop
andb
mov
pop
mov
xchg
mov
inc
and
sub
hlt
xor
fdivrl
sbb
xor
adc
mov
shl
nop
inc
xchg
mov
and
inc
mov
push
bswap
sbb
xchg
mov
fwait
mov
xor
mov
fstl
ja
push
sarb
lea
add
add
or
xor
inc
rol
add
pop
mov
rclb
aam
and
push
and
inc
cmovs
mov
daa
add
in
fmul
rcr
add
dec
inc
rcrb
pop
lds
shl
pop
sahf
xor
adc
rcr
dec
mov
and
push
aad
sbb
mov
jnp
cmpb
cwtl
cmpsb
int3
fcmovnb
push
enter
sbb
sahf
arpl
in
lahf
adc
out
gs
loop
xchg
sub
xchg
rclb
addr16
cmc
jno
push
into
adc
pop
in
jl
mov
pop
mov
mov
fmuls
adc
mov
sbb
inc
mov
sbb
data16
call
icebp
jo
fwait
stos
dec
and
inc
pop
in
sub
adc
mov
clc
sbb
pusha
in
push
fs
or
add
mov
push
inc
in
test
call
inc
xor
lea
dec
pop
add
cmp
mov
mov
mov
xchg
stos
es
sbb
adc
xor
call
jne
jge
psubsb
and
sbb
jns
rolb
mov
sub
dec
jnp
add
cli
inc
xchg
or
or
xor
sub
or
push
pop
push
loope
cmp
call
mov
push
scas
mov
jmp
jl
cli
sub
popf
sub
repnz
xor
xchg
mov
std
mov
and
mov
dec
jmp
aam
test
cld
pop
loopne
jecxz
les
mov
out
scas
or
fnstsw
dec
mov
sahf
fmuls
js
xchg
cmp
cli
sbb
xor
das
mov
jle
and
sti
mov
mov
adc
push
mov
ds
call
mov
xlat
pop
or
inc
faddp
adc
adc
scas
add
loope
push
std
jg
pop
je
addl
insb
and
cwtl
pop
leave
in
or
xchg
pop
call
test
les
pop
and
jae
jg
add
fwait
insl
jne
mov
ret
mov
add
ud0
clc
ficoms
sub
lret
shlb
mov
mov
enter
mov
ljmp
andl
inc
shll
mov
sbb
cld
cmc
aad
loop
dec
sub
push
int
cmc
cmpsb
pop
fs
inc
mov
xorb
mov
mov
or
sub
jp
les
imul
cli
decb
mov
xchg
push
pop
push
sub
sub
jne
and
xor
or
dec
pop
out
adc
frstor
lds
and
mov
mov
cld
lods
and
nop
jne
test
push
icebp
in
pop
fcomp
notb
bound
and
or
movsl
into
rorb
sahf
pop
and
bound
jno
imul
cld
ljmp
dec
cwtl
imul
push
mov
add
push
jno
inc
insb
lock
cmp
jg
dec
stos
mov
sub
cmpsb
incl
ret
enter
and
loop
inc
xchg
outsl
mov
pop
sbb
scas
mov
bound
subl
inc
or
push
lret
mov
nop
pop
mov
lock
rcrb
popf
nop
out
hlt
sbb
test
repz
andb
push
and
mov
and
les
jg
push
or
popl
loop
mov
adc
das
mov
sbb
jg
andl
das
mov
or
cld
pop
adc
ja
mov
inc
jns
add
in
outsl
mov
mov
jmp
add
jmp
enter
push
in
pop
out
or
pop
sahf
dec
int3
dec
mov
or
xchg
xchg
sti
out
dec
cmp
nop
ret
mov
push
pop
mov
inc
addr16
test
push
sbb
and
inc
insb
add
inc
fidivrl
inc
incl
in
push
fldcw
stc
subb
fcmovnu
rorl
cwtl
sar
xchg
in
pop
cmp
xchg
push
imul
xchg
call
lcall
call
cli
jle
cli
or
test
addl
mov
sub
add
dec
sbb
dec
mov
pop
icebp
mov
push
adc
in
in
adc
push
sbb
sbb
popa
fistpll
ss
sbb
mov
dec
cld
call
push
adc
into
loopne
cmp
imulb
push
pop
mov
mov
or
das
mov
adc
mov
pop
cli
jns
inc
ljmp
cld
cwtl
out
bound
and
xchg
pop
repz
inc
mov
sbb
add
push
mov
test
xor
ds
adc
and
pop
fistpl
sbb
lock
add
jno
fistl
push
ljmp
call
loopne
into
aas
stos
sub
movsb
clc
rcr
pop
es
fwait
sub
pop
stos
ljmp
push
ss
fbstp
shr
mov
add
inc
das
add
shrl
loope
fbstp
movsl
adc
pusha
dec
ja
dec
nop
inc
cmp
popf
jbe
adc
jecxz
pushf
movsb
movsb
movsl
loope
movb
xchg
fsubr
aaa
xor
push
gs
rcrb
outsl
hlt
pop
mov
xchg
sub
data16
out
pushw
into
pop
dec
xchg
fcompl
inc
fistpll
jg
addl
cmp
dec
imul
out
mov
lret
subb
pushl
fidivrl
pop
test
cmp
sub
loope
fsts
and
rolb
in
js
insl
xchg
xor
cli
or
cltd
arpl
mov
sub
loopne
jmp
ret
jnp
aad
dec
dec
add
jbe
push
hlt
mov
outsl
sbb
fildll
push
or
mov
dec
gs
fistps
scas
xor
and
fldenv
or
add
or
adc
pop
xor
inc
or
or
or
aaa
mov
sti
mov
jle
jns
pop
mov
pop
lahf
test
mov
pop
flds
mov
std
pop
mov
pop
sub
pop
pop
add
ljmp
popa
sti
pop
ljmp
pop
orl
ret
push
mov
mov
icebp
lods
mov
stc
cmpsl
adc
into
popl
jbe
test
mov
mov
outsl
std
test
dec
stc
and
adc
ret
int3
ret
aad
das
xchg
cli
push
push
icebp
and
dec
add
push
clc
sar
add
or
fildll
movsb
leave
sbb
or
cltd
fldenv
decl
sub
mov
imul
cmpsb
loop
mov
xorb
lods
push
into
push
js
test
jecxz
pop
jge
inc
jns
push
sbb
inc
pop
subb
jb
push
cmp
pop
rorb
jg,pn
cmp
and
jmp
imul
inc
fldcw
fwait
call
dec
insl
insl
sub
mov
das
std
and
popf
in
push
clc
das
imul
pop
mov
inc
mov
testb
fbld
sbb
iret
ljmp
cmc
sub
cld
adc
inc
mov
sub
repz
or
sbb
cld
rcrl
aas
pop
sub
mov
jp
mov
stos
shll
xchg
and
xchg
call
movsl
insl
imul
mov
or
jnp
dec
xchg
loopne
gs
mov
jb
cs
cli
sub
or
jae
cld
or
in
push
add
pop
scas
shr
scas
add
mov
inc
fdecstp
mov
adc
xchg
sub
pop
inc
lret
mov
mov
jp
push
push
and
pop
fdivrp
out
xchg
mov
mov
dec
cmp
jne
aaa
les
call
push
mov
mov
dec
data16
fistpll
in
dec
leave
fdivr
inc
cwtl
inc
adc
mov
std
lods
xor
cmc
adc
loopne
sub
das
lret
iret
popf
pop
cld
xor
add
ljmp
inc
mov
ror
icebp
fbstp
inc
dec
or
inc
rolb
push
push
daa
push
mov
stos
dec
lds
dec
dec
shlb
sub
push
push
dec
lea
shlb
inc
fistl
clc
pop
mov
and
in
inc
mull
in
add
inc
test
xorl
ja
lds
inc
daa
jne,pt
call
push
aas
and
aaa
decb
and
in
icebp
sbb
sbb
lret
ficompl
fwait
jns
in
rcrb
xchg
cmc
leave
add
divl
mov
mov
js
call
cli
jg
xchg
xchg
xchg
sub
fstpl
xchg
xorb
inc
dec
leave
ffreep
xchg
pop
cmp
gs
push
adc
push
movsb
outsb
fdivrl
mov
aas
add
pop
push
sub
and
sub
nop
mov
inc
cmpsl
and
inc
addl
test
and
lea
pop
xor
stos
or
mov
inc
or
pop
and
and
repnz
mov
jecxz
sub
bound
daa
and
leave
sub
int
jmp
je
dec
push
es
testb
lock
pushf
int
mov
jecxz
jbe
jmp
fistps
jl
xlat
fistpl
jns
loopne
mov
dec
inc
shrb
js
pop
fistps
popf
mov
repnz
insl
push
inc
jo
imul
push
adc
in
lea
sub
sbb
pop
gs
fs
jbe
ss
xor
mov
mov
and
in
addr16
iret
add
push
jae
dec
dec
aad
loope
or
inc
mov
mov
repz
arpl
or
pop
addl
xchg
pop
mov
sbb
inc
adc
loopne
lcall
adc
ret
mov
ficomps
dec
js
mov
jb
call
ss
mov
adc
mov
jg
out
cld
aas
rorl
pop
mov
sbb
bound
sbb
das
outsl
decl
mov
mov
lock
mov
movsb
je
aaa
xor
repnz
push
clc
or
stc
xchg
out
js
or
jecxz
cmc
pop
nop
jno
call
ret
inc
xor
sahf
sbb
and
cltd
out
push
and
cmc
ret
add
mov
je
lds
hlt
incl
and
mov
and
dec
sub
outsl
pop
loopne
jmp
outsb
push
jecxz
push
mov
incb
or
add
data16
repz
jb
shrl
addr16
push
xchg
loope
mov
test
or
and
and
daa
jl
repnz
jle
rol
or
adcb
aaa
repz
lahf
js
incb
clc
add
or
jge
mov
test
adc
add
loope
inc
push
pop
mov
adcl
pop
aas
inc
jl
sub
in
fistpll
push
push
add
sub
add
rcrl
or
lods
mov
popa
lahf
and
dec
bound
test
lods
ret
popa
int3
jmp
add
dec
and
push
lock
sbb
jo
fucomip
mov
pop
xor
push
arpl
cwtl
ret
inc
icebp
out
lods
pushl
loop
fldl
mov
add
outsl
insl
sub
mov
mov
cwtl
pop
ret
xchg
std
adc
cmp
mov
rorb
adc
mov
or
jp
in
mov
push
mov
inc
hlt
and
fcomip
insl
sub
in
and
iret
dec
inc
xor
jno
cmp
jmp
adc
ljmp
adc
sub
cmp
out
cmp
mov
cmp
or
js
adc
mov
rcrl
sbb
mov
leave
lds
lods
std
ljmp
or
aad
and
pop
push
sub
lcall
mov
push
and
loopne
sbb
cmp
daa
add
or
push
les
jl
mov
push
xchg
stos
popf
and
add
sbb
movsl
and
mov
loopne
ror
dec
dec
push
xor
outsl
inc
shrl
and
sub
push
fsub
add
push
and
push
stos
test
je
inc
sub
mov
pop
xchg
out
pop
int3
jge
popl
mov
or
push
mov
pop
les
js
stc
js
std
xchg
xor
xor
add
lock
adc
insl
mov
push
imul
and
adc
dec
icebp
inc
xchg
push
movl
dec
dec
js
add
mov
cmpsl
test
push
and
and
lock
mov
jbe
sub
jno
jo
stc
push
inc
rorl
cmp
dec
stos
ljmp
das
and
pop
mov
inc
xorb
and
pop
js
mov
les
cmp
jmp
pushf
and
dec
mov
or
loop
dec
jb
lahf
rorl
pop
sub
cltd
popa
dec
inc
mov
imul
addr16
add
imul
iret
cwtl
jge
ljmp
cmp
mov
push
test
loopne
fdivs
inc
jno
mov
adc
adc
sbb
cmp
adc
adc
or
dec
adc
outsb
out
dec
mov
or
xchg
xor
ret
pop
inc
push
cltd
frstor
daa
push
loope
xchg
dec
adc
xor
inc
subb
cmp
popa
mov
fdivrs
xor
mov
lret
test
push
aam
add
sub
cmp
sub
jmp
test
adc
and
add
aam
fwait
jecxz
xor
inc
pop
ja
push
in
pushf
push
lods
fucomip
das
mov
push
testl
test
mov
xor
inc
rorl
call
pop
lret
xor
and
incl
ja
leave
scas
icebp
testb
pusha
jg
shrb
rorl
xor
std
mov
loope
and
and
add
sub
cli
lret
outsb
add
mov
aad
sbb
call
mov
ds
inc
sub
mov
test
inc
add
dec
push
sbb
test
rclb
dec
test
call
sub
mov
cmp
orl
mov
shrb
cmp
dec
jnp
jle
mov
scas
or
adc
lea
xchg
add
test
push
adc
push
insb
sbb
clc
jg
mov
fcoms
mov
adc
or
xorl
int
les
cmpsb
jbe
ljmp
std
cmc
mov
jg
cmpl
popf
and
in
mov
dec
xchg
jmp
sbb
jmp
cmp
iret
pop
and
xchg
test
loop
lret
push
adc
aad
xchg
or
ds
cli
fisubrl
repz
lret
xorl
lock
test
incl
mov
inc
sub
jbe
or
int3
xor
and
out
cltd
xchg
movsb
add
ljmp
dec
xchg
lods
push
addpd
lods
or
lret
in
inc
jg
fcmovbe
aaa
lret
add
fwait
xchg
mov
roll
ja
mov
insl
jmp
add
inc
filds
nop
add
pushf
mov
mov
inc
sub
sbbb
fimull
test
scas
jp
dec
push
dec
arpl
fwait
jbe
pop
mov
or
rcrl
add
dec
repz
es
decb
hlt
xor
fidivrl
jne
mov
pop
push
adc
and
aas
inc
test
divb
pop
xor
mov
nop
jl
xchg
jmp
push
int
popa
xor
aaa
jne
fsubrl
or
mov
jmp
push
int3
cmc
xrelease
popa
mov
push
and
pop
orb
mov
out
fisttpll
scas
outsb
adc
sub
scas
out
cmpb
es
adc
frstor
sarl
xchg
pusha
jle
inc
cld
push
add
pop
xchg
lds
jno
ficoml
js
inc
scas
nop
cmp
cmp
pop
dec
cmc
push
or
mov
sbb
inc
cmp
sbb
mov
and
pop
cmp
xlat
les
jb
adc
xor
stos
rorl
mov
jg
xchg
add
popf
pop
push
fisttps
jmp
xor
xchg
jae
int
and
pop
bound
test
cmp
shll
jbe
mov
out
push
rorl
fs
inc
adc
push
sahf
add
push
sbb
clc
pop
add
push
sbb
test
nop
shr
ljmp
mov
push
and
data16
xchg
ficoml
lea
stos
js
mov
dec
js
clc
popf
and
je
daa
jge
fistpll
or
push
insb
lret
add
aaa
mov
sbb
push
fcmovbe
fstp
stos
movsl
loopne
lods
aad
push
cmpsb
pop
mov
daa
push
pusha
or
frstor
mov
or
jmp
arpl
cmc
mov
push
mov
cs
imul
pusha
inc
sub
cwtl
mov
mov
cmp
inc
jg
jmp
das
xor
inc
sbb
shlb
sbbb
dec
add
mov
dec
rcrb
push
nop
js
ficoms
jecxz
leave
adc
gs
es
mov
sar
cmpsb
pop
sbb
mov
sbb
inc
dec
pop
mov
jg
fisttps
in
pop
and
ss
test
out
jb
pushf
das
clc
jg
add
mov
add
cwtl
test
adc
add
add
jb
add
lcall
lea
xchg
mov
inc
mov
lcall
xchg
lea
mov
push
mov
mov
jbe
out
mov
or
pop
ret
pop
fs
sbb
repnz
call
inc
sub
cmc
notb
sar
fldenv
inc
mov
mov
outsl
mov
mov
rorb
movsb
push
lret
mov
decb
lcall
mov
outsl
cld
fistps
adcb
cltd
aam
lock
jecxz
jg
or
pop
lods
cmp
mov
mov
pop
add
or
jo
inc
jge
fbld
outsb
xchg
adc
xchg
cmp
mov
testb
push
and
loope
xchg
jmp
or
and
sbb
mov
decb
and
jl
pop
mov
or
clc
push
jmp
or
push
sar
call
inc
test
sbb
jg
push
inc
es
sub
or
jno
add
xor
jg
adc
enter
inc
or
xchg
xor
or
ficomps
xchg
cltd
jns
xchg
fstpt
dec
pop
mov
ljmp
in
jle
insl
movl
xchg
lea
mulb
dec
add
outsl
std
adc
fdivrs
je
dec
inc
fwait
negb
inc
inc
loop
mov
enter
adc
lds
mov
mov
add
arpl
cmp
inc
inc
ret
clc
insb
ds
arpl
xor
cmp
jo
adc
sub
add
inc
test
jo
xor
in
movsb
out
cmpl
or
xor
mov
and
pop
test
xchg
dec
add
insb
mov
or
and
mov
adc
sti
icebp
or
inc
addr16
jnp
es
in
ret
loopne
push
mov
stc
xchg
mov
mov
or
repnz
lea
mov
jmp
das
fistpl
push
scas
or
je
add
ds
mov
and
sbb
or
testb
cmpb
ss
mov
inc
xor
dec
adc
rcrb
jge
adc
jge
rcl
lret
fldt
xchg
pop
and
mov
pop
clc
and
lahf
add
shl
shll
clc
clc
pusha
xor
lea
es
inc
ljmp
xor
es
jle
sbb
mov
jge
out
cmpb
leave
push
dec
or
fsubrl
iret
pop
cltd
and
gs
push
inc
aaa
lret
clc
in
cmpsl
out
xor
xor
and
loop
ds
jp
pop
mov
mov
cmp
adc
pusha
jno
loope
ret
rclb
or
daa
mov
mov
je
ds
decl
aaa
mov
outsl
add
outsb
aaa
icebp
lea
lret
and
xchg
xor
or
mov
sahf
dec
out
das
sti
cwtl
loopne
fimull
scas
and
movsb
bound
add
pop
inc
push
lods
mov
sub
ds
leave
inc
test
test
out
sub
sbb
inc
lds
dec
movsb
mov
or
mov
roll
rcrb
pop
xor
loopne
jl
push
sub
cs
adc
sub
mov
pop
pop
test
movsb
pop
rolb
adc
inc
and
add
sbb
in
in
insb
mov
adc
and
hlt
jge
rclb
add
mov
push
sbb
mov
add
push
dec
ret
decb
xchg
xchg
dec
sub
daa
test
das
pop
or
cmp
bound
in
push
aas
hlt
add
pop
mov
iret
ljmp
inc
or
xchg
jecxz
add
fcmovb
add
lds
shlb
mov
addb
dec
mov
add
and
enter
mov
mov
pop
dec
loopne
inc
dec
cmp
xor
and
sub
sbb
gs
das
xchg
scas
mov
repz
jmp
mov
mov
incb
adc
test
inc
cltd
cwtl
mov
std
add
cmp
out
fmuls
pop
adc
aas
stos
or
dec
je
sub
jo
or
imul
mov
jbe
inc
inc
add
adc
pop
mov
mov
cwtl
jns
sub
das
lock
int
rcl
in
fistpll
xor
inc
inc
jb
inc
loop
cli
xchg
mov
test
mov
cld
jbe
mov
cmc
das
fistps
movsb
jae
pop
mov
xlat
jg
int
fistps
addr16
xor
sbb
out
add
ljmp
iret
in
mov
sub
and
mov
insl
cld
push
loope
mov
sbb
clc
mov
lock
test
inc
sbbb
shl
mov
mov
incl
out
pop
add
mov
mov
fsubs
or
jg
mov
and
imul
repnz
xor
clc
xchg
ret
pop
decb
je
mov
fists
pop
mov
sbb
jg
jge
push
addl
sbb
xor
sarb
add
and
mov
test
mov
adc
mov
inc
jnp
enter
pop
icebp
test
and
dec
xor
not
popf
testb
rolb
aas
pop
mov
jmp
std
cmp
shrb
cmp
lcall
insb
add
add
jecxz
mov
inc
dec
inc
jle
stos
iret
or
stos
and
sbb
rorl
pop
test
mov
push
in
shr
into
inc
sub
mov
mov
loopne
ja
stos
movsl
addb
outsb
outsl
insl
mov
sarb
add
dec
dec
dec
and
inc
insb
push
aad
popa
sub
sbb
sub
sarb
aam
mov
stos
jge
pop
testl
xchg
or
pop
mov
ja
lea
xchg
fldenv
mov
shlb
pop
cmp
sbb
or
add
lods
jae
mov
shll
ja
add
cmp
addb
sti
xchg
loope
jl
rol
or
adc
add
inc
xchg
mov
mov
mov
cmpb
or
daa
clc
pop
pop
shlb
xor
push
add
push
mov
ret
dec
adc
jae
jae
or
int
pop
push
inc
xor
push
mov
jb
mov
cmp
xor
mov
jb
sub
inc
pop
xchg
test
adc
inc
inc
push
jnp
addr16
addl
jmp
dec
push
adc
adcl
loopne
xchg
shlb
call
inc
xor
inc
xor
jle
pusha
push
mov
pushf
push
mov
sub
pop
dec
lret
call
or
je
xchg
add
add
xor
sbb
or
add
fsub
mov
and
call
popf
jb
fadd
cmp
cmp
push
dec
push
inc
in
leave
xor
inc
push
push
repnz
aas
call
xchg
adc
cmp
bound
jb
adc
jecxz
cmpb
inc
lods
dec
clc
inc
add
sub
popf
adc
lds
add
shlb
dec
jno
pop
dec
pop
js
push
and
test
cltd
xchg
mov
add
fistpll
sub
jp
adc
fdivrp
inc
dec
inc
cmpsl
xchg
ret
add
in
and
daa
or
sti
mov
fiadds
out
in
rcr
inc
push
mov
or
fiadds
jge
mov
aad
cmp
enter
or
fdivrl
inc
in
sbb
push
push
jmp
push
test
adc
xor
dec
xor
adc
pop
stos
and
iret
es
inc
sarb
and
into
and
mov
into
xor
mov
push
jo
xchg
adc
adc
or
adc
or
add
mov
sbb
repnz
addr16
lds
js
and
pop
pop
add
jl
and
outsl
pop
adc
addb
loopne
add
add
jbe
mov
aad
iret
xchg
xor
inc
sti
daa
add
andl
xchg
adc
or
sub
xor
fidivrl
jmp
inc
mov
xlat
cmp
jp
mov
out
add
clc
add
lock
test
push
inc
mov
sbb
jp
dec
and
add
pop
add
pop
dec
pop
cmp
hlt
loope
cld
mov
inc
pop
cmp
imull
pop
add
adc
mov
add
jne
insl
and
js
pop
add
pop
adc
jge
pop
loop
out
outsb
and
lcall
rclb
mov
inc
mov
sbb
adc
lds
cmp
xchg
and
add
lods
stos
mov
xor
addr16
and
xor
test
or
shll
pop
push
iret
ret
outsb
pop
cmp
std
xchg
orb
sarb
xlat
xchg
stos
pop
lcall
add
dec
dec
lds
xorb
les
loop
mov
test
je
in
fbld
lfs
xchg
sub
mulb
insb
sbb
add
push
push
xor
push
cmp
mov
xchg
dec
sbbl
adc
dec
add
push
nop
cmpl
add
dec
add
ss
push
ret
dec
fistpll
push
cli
sub
sbb
std
push
mov
and
jmp
shr
xor
and
hlt
icebp
ret
je
rcll
js
push
push
jl
sahf
in
xor
mov
rcll
sub
ret
adc
add
add
lahf
push
mov
sub
outsl
cmp
xchg
jne
in
out
xchg
dec
mov
lds
mov
pop
sub
push
add
pop
mov
test
jmp
pop
mov
les
xchg
pop
dec
iret
inc
sbb
xor
cld
daa
xlat
inc
mov
or
adc
push
jnp
mov
sbb
inc
cmp
push
outsb
xchg
ja
loope
adc
int
out
and
jle
loop
push
mov
add
sarb
xchg
and
and
addl
inc
inc
dec
shrl
push
mov
in
loopne
add
shlb
xchg
xchg
xchg
lods
and
jns
push
mov
test
cmp
in
bound
inc
mov
ret
shlb
xchg
or
sarl
inc
js
sti
lea
xor
push
stos
cmp
push
mov
mov
mov
lock
xor
mov
dec
pop
ja
sbb
jg
xchg
mov
fs
xchg
je
ret
adc
mov
movl
add
pop
in
sarb
das
push
icebp
fistpll
scas
daa
cmc
mov
sub
add
mov
cmc
sbb
xor
idiv
push
clc
pop
mov
mov
loope
add
xchg
aad
fcomi
sbb
inc
rsm
lret
jg
add
mov
add
mov
push
jp
mov
in
lahf
add
das
in
lret
bound
mov
push
jmp
and
test
jns
shr
fcmove
pop
std
adc
add
push
cld
dec
loopne
adc
rcll
xlat
ret
pop
adc
test
add
inc
xor
insb
shrb
push
arpl
inc
cld
jg
fiaddl
outsb
cwtl
xor
mov
mov
pop
ss
shrl
mov
mov
or
xor
mov
loop
jne,pt
push
rolb
mov
lret
jle
jmp
in
add
push
enter
fnstenv
arpl
jno
jne
cmp
hlt
pop
icebp
das
pop
dec
pop
aad
mov
mov
mov
adc
int
cmp
dec
loope
lock
or
or
in
mov
add
adc
fistpl
cmpsb
pushf
cmp
jo
cwtl
sub
clc
incl
push
insb
add
dec
and
inc
mov
pop
cs
add
aaa
or
cld
inc
cmp
add
fmuls
ljmp
dec
sbb
add
mov
andb
push
xchg
subb
stos
bound
fildll
flds
cmc
notl
js
sbb
push
call
pop
xor
clc
dec
icebp
call
outsb
shll
test
test
jg
dec
inc
aam
jne
pop
push
fwait
hlt
pop
aad
call
add
adc
insb
push
aad
in
mov
and
pop
xlat
inc
cld
and
sub
sub
enter
lret
dec
cwtl
mov
inc
inc
xchg
xchg
xor
pop
sub
in
adc
cli
outsl
and
jp
adc
add
lret
add
fldt
shrb
mov
or
sub
mov
or
adc
scas
xchg
xor
pushl
or
arpl
and
push
xor
aas
dec
sahf
insb
lds
in
mov
push
aam
cmp
push
cmp
push
jge
fwait
and
repnz
filds
sbb
mov
insb
xlat
or
addb
enter
ret
imul
xor
nop
jg
sub
add
push
hlt
dec
repnz
or
ljmp
aaa
mov
jg
inc
incb
xchg
int3
stos
scas
inc
aaa
jle
ret
push
aas
and
lret
ret
out
dec
popf
std
lret
movsl
sbbb
notb
pop
mov
stc
das
cld
fisttps
leave
test
xor
jmp
je
xor
pop
lds
in
jae
mov
bound
ret
jmp
pop
incb
sti
sbb
loope
inc
sub
in
mov
fdivrp
jbe
cmp
dec
push
lcall
jge
mov
fs
sub
mov
sbb
lcall
jo
fsubp
lcall
fadd
pusha
mov
pop
xchg
loopne
ja
or
push
inc
dec
cmpsb
arpl
lcall
out
xor
pushl
test
sub
mov
fsub
dec
pusha
das
jg
movsl
scas
mov
dec
pop
pop
dec
clc
shrl
sbb
or
xchg
sbb
in
adc
xlat
inc
mov
test
std
mov
mov
in
enter
xor
sbb
jno
loope
jo
daa
xchg
mov
lods
mov
dec
decl
add
sti
sbb
test
inc
das
shrb
int3
orb
adc
pop
mov
push
inc
xchg
mov
or
pop
test
jno
lds
inc
or
clc
or
and
sub
dec
cmp
mov
inc
xor
jbe
and
cli
xchg
jmp
mov
adc
cmc
pop
fiaddl
mov
pop
ja
add
mov
outsb
adc
pop
loope
sub
test
andb
jge
or
dec
mov
or
pop
scas
cwtl
jmp
fildl
inc
in
push
jg
mov
adc
in
in
out
inc
push
repz
cli
dec
data16
call
ljmp
pop
out
lret
jb
dec
jle
mov
mov
push
lods
xchg
mov
rcr
lods
cmp
jmp
pop
aas
xor
sub
xor
fcoms
scas
jns
test
fs
mov
jne
movsl
mov
add
clc
ljmp
push
and
fdivrl
hlt
or
in
jg
add
ffree
inc
xor
xchg
xchg
repz
inc
xchg
sub
pop
fdivrp
mov
clc
mov
dec
xchg
ljmp
jno
pop
sbb
mov
dec
icebp
outsb
push
inc
mov
cmpsb
rcl
and
inc
sub
outsl
mov
iret
outsb
add
inc
arpl
scas
mov
movsl
leave
push
stc
or
jb
mov
inc
lahf
fdivl
je
adc
scas
fnstcw
adc
aad
loopne
icebp
fbld
jmp
ret
out
or
mov
add
add
outsb
mov
subl
jo
mov
pop
shl
test
jne
lcall
mov
js
jmp
movsb
outsl
or
add
jle
or
pusha
ret
gs
xor
ljmp
test
xchg
rclb
push
add
push
and
pop
sub
mov
addb
cmc
rcr
or
mov
or
test
in
jge
and
dec
aad
dec
pop
sub
add
sar
mov
loopne
jne
fdivrs
loopne
imul
lret
test
das
jge,pn
das
add
adc
ret
sbb
imul
addb
dec
mov
jo
jno
add
jge
add
leave
mov
xchg
mov
cmp
add
mov
test
push
add
and
and
sub
push
mov
lar
xchg
add
sub
mov
mov
fmulp
push
call
out
fisttps
or
and
mov
dec
stos
jle
push
xor
test
adc
pop
mov
jl
movsl
mov
cmpsl
pop
inc
add
fstpt
test
or
stos
cld
inc
mov
inc
cmp
lds
outsb
and
dec
les
pop
push
adc
sub
cmpsb
clc
pop
add
mov
xchg
jp
adc
sbb
xorb
cmp
fcoms
jmp
lods
pop
xor
lds
push
dec
rol
sarl
inc
xor
les
mov
aad
inc
dec
adc
movb
lret
xor
inc
pop
xchg
out
mov
clc
push
xor
es
sahf
bound
or
fisubrl
jp
adc
pop
ret
das
js
popa
call
sbb
xchg
mov
sar
mov
in
add
xor
adc
push
fcoml
dec
icebp
sbb
out
cltd
jle
out
outsl
std
aaa
clc
cmpl
pop
push
testl
jno
test
jnp
mov
or
mov
stc
sub
pushf
sbb
mov
mov
das
icebp
dec
daa
imul
push
push
daa
xchg
jle
ffreep
movsl
add
call
adc
push
rcl
xor
dec
mov
and
xor
jae
and
xchg
leave
sub
std
xor
jg
xchg
out
outsl
inc
inc
xchg
sub
jl
insb
mov
adc
fisubrl
mov
mov
cld
pop
xor
add
je
outsb
fcoml
sbb
jmp
sbb
mov
rcr
or
adc
sahf
mov
add
incb
xlat
and
aam
or
mov
gs
jae
test
add
jb
mov
loop
idivb
add
cmpsb
mov
std
das
hlt
xor
ja
inc
add
cs
cltd
dec
lds
xchg
nop
jae
das
sbb
add
outsl
ja
and
push
and
mov
or
mov
imul
pop
mov
out
mov
out
mov
mov
lret
and
inc
mov
cmp
mov
sbb
inc
call
sub
in
scas
notb
addb
aas
or
add
loop
add
cmp
aaa
icebp
jae
and
mov
mov
xchg
pop
call
sub
sbb
sbb
and
cmpl
mov
ja
cli
jnp
mov
jg
sub
sbb
jae
rorl
mov
lcall
pop
dec
and
insl
add
idiv
add
adc
cmp
dec
lcall
in
xchg
and
roll
aaa
mov
pop
loop
lahf
scas
push
jno
adc
nop
cmp
shlb
dec
add
cmp
mov
adc
jle
xor
clc
lahf
jae
adc
cmp
popa
mov
aam
bound
cmc
and
adc
test
jecxz
cmp
push
movsl
pop
sarb
ror
add
insl
lods
pop
call
hlt
fmull
test
mov
popw
sbb
call
addr16
push
and
test
inc
push
sub
mov
addb
jo
mov
mov
insb
in
mov
jp
and
push
je
cltd
fwait
sub
xor
mov
test
inc
adc
out
orb
icebp
xor
xor
lcall
jg
push
push
aad
enter
push
dec
lock
test
into
xchg
mov
mov
inc
sub
shl
xchg
lods
dec
mov
rorl
mov
outsl
call
adc
and
js
shll
fwait
sub
or
inc
xor
cld
inc
cli
ret
pusha
jg
lods
xor
call
das
mov
mov
jo
jp
pop
cmp
cs
rcrb
jbe
stos
orb
mov
std
dec
aaa
add
xor
sahf
mov
dec
mov
scas
cli
sub
xchg
mov
stos
dec
std
and
jmp
xorb
pop
icebp
hlt
push
xlat
push
inc
push
or
sub
jl
das
push
sbb
push
cmp
test
shlb
pop
mov
fbld
pop
jl
adc
add
jmp
mov
test
ljmp
in
addr16
inc
xlat
sti
sbb
dec
xchg
sahf
jg
aaa
mov
dec
leave
cmp
scas
adc
test
sbb
mov
xchg
sbb
push
jbe
gs
and
add
mov
lahf
jno
pop
shl
pop
add
jle
and
adc
stos
add
pop
jl
jge
mov
and
mov
rolb
fsubl
mov
or
mov
and
mov
jns
cld
loop
cli
inc
jmp
lock
les
sub
call
adc
add
adc
sbb
das
jl
lods
and
push
inc
add
or
repz
mov
mov
icebp
adc
in
cmpsb
dec
ds
rclb
pushl
out
ds
sub
adc
outsl
add
adc
negb
mov
mov
dec
fists
mov
in
out
pop
and
jbe
push
pop
add
push
push
jnp
inc
push
pop
jo
aas
pop
jmp
test
shll
subl
and
dec
adc
cmp
mov
aad
sbb
adc
cli
cmpsb
lea
es
inc
test
cmp
adc
lahf
lret
inc
inc
dec
nop
sbb
ja
sarb
adc
movsl
xchg
lds
mull
out
call
test
std
sub
popf
mov
xchg
xchg
mov
aad
dec
rol
mov
ljmp
call
cmp
ficomps
clc
lret
je
sbb
jge
stos
lcall
add
sti
mov
aas
sti
adc
jne
pop
cli
jns
out
inc
inc
jo
les
movsb
or
lock
mov
pushl
incb
int3
adc
dec
or
and
push
push
dec
pop
int
add
push
jl
add
int
outsb
xchg
push
repz
mov
mov
test
mov
pandn
mov
push
jmp
movsl
push
lret
mov
dec
das
jne
dec
sub
arpl
es
cld
adc
mov
push
xchg
adc
int3
xor
jge
sub
and
rolb
jg
jle
or
ds
adc
rcrb
or
out
sbb
movsl
mov
cmp
mov
out
clc
xchg
xor
and
inc
fidivs
sub
in
out
and
pop
adc
or
push
pop
cmp
ja
jb
fildl
mov
sub
mov
jne
jecxz
xchg
dec
and
jbe
test
incl
sub
inc
sub
arpl
es
inc
outsl
popa
test
pop
cmp
dec
aaa
pushf
sub
fistpll
repnz
fwait
jo
sbb
sbb
mov
test
mov
sbb
movsl
lret
cmp
call
xchg
sbb
mov
dec
cmp
sub
jmp
push
adc
imul
sbb
outsl
or
in
shrb
or
mov
pop
shrl
mov
shr
mov
jge
shr
lret
push
xchg
pop
fnstenv
das
frstor
stos
loope
jae
int3
pop
mov
js
and
addr16
or
pop
fisubs
add
rorl
rcrl
out
leave
fucom
fstpt
enter
inc
leave
jle
pop
or
mov
inc
cmc
cltd
push
rcrb
fdivr
loop
inc
insb
mov
and
add
mov
and
scas
sbb
filds
cld
inc
xor
out
fwait
mov
mov
xchg
stos
mov
sub
mov
decl
lock
mov
rcrl
inc
mov
imul
fsts
inc
je
out
imul
sub
out
pop
pop
xchg
inc
insb
ljmp
fnsave
rcrb
int3
mov
jno
subb
cs
mov
cld
in
jb
xchg
aas
inc
aam
inc
xorl
adc
out
push
out
lods
cmp
lcall
dec
mov
cmc
fistpll
and
dec
push
in
jecxz
dec
mov
mov
test
int3
imul
insl
sarl
jmp
jl
orb
into
fnstenv
test
rcr
cmpsl
mov
lods
mov
lea
pop
add
jbe
lds
mov
movsb
cli
mov
mov
and
sub
push
xor
add
mov
sbb
mov
andb
lods
fadds
add
aam
loopne
call
lods
push
test
cmp
outsb
iret
lds
or
push
mov
aaa
cmp
rorl
mov
dec
aam
push
add
je
sbbl
clc
not
clc
add
stos
mov
jae
add
and
icebp
ljmp
imul
sahf
sbb
xchg
or
add
push
sbbb
jge
mov
pop
js
inc
pop
sahf
push
add
jbe
clts
mov
incb
add
ds
ret
out
clc
jae
fisubl
nop
jecxz
imul
pop
sti
mov
push
jnp
inc
sub
cmc
push
xor
stos
push
loop
jge
adc
cmpsb
jecxz
adc
out
mov
popa
add
in
push
xchg
add
dec
mov
adc
mov
jg
sub
mov
cmp
and
jg
add
daa
test
aaa
clc
pop
je
movsl
or
mov
push
push
jbe
xchg
pop
outsl
fcmovbe
inc
cmp
jp
jne
test
mov
ret
or
cmp
mov
in
sub
divb
jecxz
and
lock
rorb
clc
cmpsl
ds
pop
xchg
mov
daa
adc
xchg
inc
es
stos
repz
popl
das
mov
lret
inc
push
xchg
push
add
repnz
mov
fcmovne
aas
lods
jg
mov
push
inc
fwait
ljmp
in
push
xor
mov
aaa
data16
and
addr16
xor
jge
jle
add
mov
add
cs
and
stc
sbbl
mov
stc
sbb
inc
lcall
incb
lret
jecxz
nop
lock
jno
das
fmull
loopne
call
mov
loop
mov
outsl
or
andb
pop
push
or
and
loope
mov
lret
dec
xchg
int
mov
inc
gs
mov
jb
lock
and
mov
cld
shrb
pop
clc
mov
enter
rclb
in
loope
ljmp
outsb
mov
dec
mov
fstl
and
jmp
shlb
loope
mov
iret
pop
fisubrl
inc
leave
jp
fstl
jle
mov
shrb
lods
ret
jecxz
je
sub
lcall
in
pop
push
mov
aam
je
clc
xor
movsb
das
mov
aam
int3
test
shlb
push
sbb
push
mov
imul
jne
mov
dec
repz
lahf
in
mov
inc
xchg
test
or
or
fildl
add
es
pop
pop
ret
cmp
das
inc
hlt
cmp
mov
mov
jle
aam
out
xchg
lds
mov
jecxz
inc
aaa
cli
jmp
mov
test
mov
insl
inc
mov
ret
mov
scas
add
lret
pusha
dec
push
pusha
push
loop
mov
mov
and
pop
dec
xor
add
std
xorl
rorb
sub
jmp
push
or
arpl
insb
adc
sti
pop
push
movsl
cmp
push
xor
push
dec
xchg
jge
adc
into
cmp
clc
mov
xor
cld
mov
decb
bound
icebp
inc
out
loop
movsb
loop
stc
int3
aam
adc
inc
lds
mov
aas
popl
or
lcall
xchg
fsub
dec
and
xchg
jg
cltd
sar
push
or
lock
adc
adc
pop
cs
aam
adc
mov
inc
ss
inc
adc
lods
ffree
fcomip
cmpsb
cmp
lock
mov
cld
push
fsubr
cmp
cmp
mov
jbe
mov
incl
lcall
das
push
sbb
shlb
inc
std
int3
jbe
xor
jno
and
push
std
mov
push
sti
and
cmp
idiv
sbb
inc
mov
dec
and
push
fidivrl
inc
add
loopne
sarb
fdivr
mov
daa
push
nop
and
lock
push
adc
cli
and
pop
adc
mov
and
scas
outsl
or
into
cmc
pop
inc
outsl
lock
mov
pop
jmp
movsb
pushf
add
lahf
enter
cmc
adc
sahf
and
xchg
fbld
imul
ds
mov
mov
mov
mov
mov
add
pop
inc
pop
lea
decl
mov
aad
inc
nop
xor
adc
lret
xor
or
cs
dec
pop
andb
cwtl
push
xchg
sbb
xchg
sbb
mov
loop
loopne
adc
mov
push
dec
xor
lock
test
mov
call
jnp
xor
enter
lret
sub
ljmp
dec
cmp
dec
cmc
insb
bound
mov
call
cmp
insl
sti
and
add
pop
ljmp
jle
mov
pop
shrl
outsl
mov
cmp
mov
inc
inc
mov
jg
jg
dec
or
sub
mov
cli
jg
cli
xchg
jecxz
fistps
sub
cmp
inc
or
jno
in
sub
or
ret
daa
jmp
cld
test
call
xlat
hlt
aaa
mov
call
xchg
mov
cmp
jbe
scas
scas
sub
div
lret
mov
pop
dec
pop
sbb
shl
jg
mov
pop
leave
push
dec
das
xchg
outsl
dec
xchg
stc
fbld
xchg
sbb
cli
ljmp
sub
jg
aaa
cld
cmp
popa
pusha
cltd
dec
hlt
sbb
push
aas
inc
cmc
push
shl
movsb
int3
insl
push
test
ds
cmp
xlat
sub
mov
test
add
arpl
cmpb
cmp
mov
mov
dec
mov
sub
lock
dec
cmpsb
pop
jge
inc
dec
rol
pop
out
jmp
outsl
sub
mov
dec
xlat
adc
mov
jmp
adc
or
lret
and
popa
mov
jae
sti
jg
dec
or
sbb
xchg
mov
fdivrl
popa
lea
aam
lds
popf
xrelease
jne
rorl
stc
jl
test
dec
movsl
lret
mov
jne
push
out
ljmp
cwtl
dec
cs
xchg
mov
and
cmp
incl
push
xchg
lahf
sub
enter
sub
adc
xchg
xor
andb
mov
push
movsb
pusha
cmp
mov
sahf
inc
xchg
sbb
pop
and
addb
loop
adc
xor
push
add
sahf
and
lods
adc
fwait
mov
inc
andl
pop
int
inc
cmc
cmp
push
push
or
stos
loopne
mov
mull
push
adc
stos
das
lds
push
ja
pusha
dec
test
sbb
cltd
xchg
leave
mov
testl
pop
outsl
mov
sbb
jle
sub
loop
and
add
adc
sbb
xor
lahf
lcall
outsl
mov
add
or
fadds
and
or
js
add
insb
dec
mov
arpl
and
add
cmpsl
enter
lea
sbb
loop
aaa
mov
xor
mov
and
push
test
mov
es
ficomps
out
cltd
sub
aas
xor
fisubs
mov
inc
cs
ja
lcall
add
mov
mov
push
nop
icebp
inc
sbb
mov
jno
int
push
lock
jg
mov
icebp
mov
push
jno
in
addr16
add
outsl
sahf
sub
inc
or
jb
mov
sbb
pop
aad
jb
and
mov
rolb
shlb
adc
andb
mov
sub
push
repnz
shrb
mov
dec
push
scas
push
mov
pminsw
push
or
push
and
sub
lret
sarl
in
pop
mov
jae
add
jb
or
add
sahf
movsb
pop
inc
push
imul
orb
cld
test
fbld
pop
fdivrp
clc
xchg
xlat
dec
xchg
test
inc
and
mov
cmp
stos
in
jle
fistps
sub
outsb
imulb
and
cmpsl
push
pop
sbb
push
mov
cmpl
or
mov
sub
jp
lock
ja
xchg
xchg
dec
pop
add
xchg
cmp
lret
mov
dec
and
loopne
xor
adc
stos
aam
xor
pop
mov
and
sbb
jo
pop
jae
mov
cwtl
das
push
or
shrb
xlat
leave
and
into
push
and
jle
and
popa
negl
ds
adc
fisubs
movb
xchg
jg
ret
jo
mov
xor
fsub
mov
lret
popa
movsb
jno
ds
fcmovnu
pop
loopne
add
pop
mov
vmovddup
daa
out
int3
push
addl
aad
addr16
adc
adc
push
mov
int
xorl
dec
roll
decl
shrb
loopne
jmp
mov
adc
cld
mov
push
jae
scas
in
jmp
cmp
adc
cli
jge
mov
sbb
push
rorl
mov
test
add
or
idivb
push
cltd
lret
stos
cmpsb
lahf
pop
pop
mov
sub
out
ja
outsl
sbbb
int3
test
loop
sub
aas
sub
rol
xor
ror
inc
cli
adcl
sti
or
mov
mov
jg
je
inc
and
leave
or
orps
sbb
outsl
push
inc
mov
ret
scas
mov
push
mov
push
ljmp
inc
lods
mov
sub
lock
aaa
insb
xchg
dec
inc
out
xor
insb
push
pop
pushf
pop
sub
fidivs
movsb
pop
pop
andl
sbb
leave
lahf
xor
jg
sbb
push
dec
arpl
mov
sub
andl
push
cld
lods
adc
add
pop
dec
int
mov
mov
sbb
lock
or
push
iret
mov
fdivs
rclb
mov
flds
mov
and
adc
push
lcall
nop
mov
into
sbb
jns,pn
incl
dec
pop
push
aaa
inc
scas
test
ljmp
adc
and
sti
adc
mov
es
bound
stc
scas
loop
mov
mov
mov
lea
testb
and
in
scas
or
aaa
or
inc
ja
adc
jmp
xor
sbb
das
icebp
aas
add
in
pop
sti
mov
mov
cmp
idivl
sarl
jle
mov
or
mov
call
pushf
add
call
inc
pop
dec
xor
push
jae
mov
sbbb
mov
add
je
insl
pushf
je
outsl
sub
retw
out
loopne
xlat
push
and
stos
or
ss
pop
inc
and
jp
cmpsb
pop
insb
lock
dec
cmp
jb
cld
in
pop
xchg
and
sarb
mov
jbe
or
dec
push
lock
inc
and
mov
aad
fucom
adc
in
sti
push
mov
fmuls
and
lcall
jno
ds
cmp
jmp
out
movb
add
ret
adc
inc
clc
push
rcrb
push
aaa
fsubs
adc
cli
sahf
cmp
add
stos
lock
xchg
popf
or
xor
push
lds
lret
aaa
std
outsl
or
xchg
push
les
dec
imul
xor
addr16
jge
jb
cmp
outsl
sbb
pop
lods
int
enter
out
xor
dec
mov
popa
xor
pusha
add
std
pop
jae
fiadds
cmpsb
cwtl
mov
sti
mov
hlt
jmp
loopne
mov
xor
inc
dec
adc
lcall
jo
add
mov
inc
movsl
je
mov
adc
sti
das
ss
mov
js
fcompl
fldpi
fs
rorb
or
add
sbb
pop
cmp
movsl
push
mov
movsl
insb
ds
or
popa
in
nop
cmp
mov
pop
ljmp
sub
in
js
xor
aam
push
sbb
mov
ja
or
aam
mov
push
push
add
je
pop
pop
mov
sbb
fcomp
sub
test
sar
or
mov
xorb
ret
sahf
nop
mov
xchg
outsb
mov
cwtl
jne
push
inc
add
sbb
adc
jge
inc
or
inc
adcl
orb
ret
adc
loopne
adc
push
mov
push
dec
pop
inc
pusha
sub
pop
sub
cmp
dec
cli
fmull
mov
test
push
repnz
jle
push
mov
test
dec
pop
inc
jno
mov
pop
mov
or
jno
inc
mov
lcall
add
and
xchg
jnp
rol
dec
push
push
int
bound
rorb
imul
sub
inc
push
mov
dec
push
int
stos
roll
and
dec
pop
push
out
stos
or
imul
mov
daa
or
add
int3
xor
je
lret
lret
std
daa
fildll
adc
and
clc
push
add
lods
mov
add
rclb
dec
xor
push
adc
enter
xor
xor
add
fcompl
cmp
cmp
adc
xlat
adc
jl
or
jno
dec
jno
int3
and
mov
mov
scas
xchg
adc
sub
call
addr16
stos
adcb
out
fiaddl
or
enter
and
dec
hlt
sti
or
lcall
push
xor
lahf
inc
mov
fnstcw
or
sbb
out
cmp
pop
cmp
and
std
mov
faddp
add
pop
xor
adc
cmp
add
mov
xor
fisttpll
xor
cmp
xor
jne
add
dec
dec
ror
adc
pop
lds
mov
inc
inc
dec
jg
in
sbb
rcrb
fcmovnbe
sub
push
inc
imul
dec
sub
add
mov
imulb
push
das
mov
fsubrs
faddp
popf
push
enter
push
subl
movb
shll
pop
mov
push
add
loopne
movsl
jp
sub
test
insb
and
inc
outsl
aaa
push
stos
lret
mov
jl
dec
test
popf
or
pop
and
pop
mov
decl
icebp
imul
loopne
pushf
imul
sub
sub
push
rcrl
jo
xchg
cmp
sbb
adc
icebp
add
insl
pop
add
lds
mov
and
inc
cmpsb
dec
jl
ret
ja
pop
loopne
dec
xchg
sbb
orb
fs
dec
sub
imul
das
hlt
outsb
jmp
repnz
das
ret
jae
add
sahf
decl
addr16
mov
loop
inc
cmp
cmp
sub
in
ljmp
dec
int
std
inc
pusha
push
jge
icebp
jne,pt
or
mov
test
lcall
or
orb
inc
inc
or
lds
push
mov
aam
xchg
xor
pop
jl
sub
cld
mov
ret
insb
push
cmp
enter
popa
sarl
cmc
bound
outsl
mov
mov
and
ljmp
mov
xor
rcr
shrb
loop
mov
and
xor
loopne
jl
enter
ret
inc
inc
jmp
push
pushf
push
daa
inc
faddl
fcmove
dec
pushf
xchg
repz
cs
loop
or
push
mov
jg
mov
out
push
inc
sbb
push
pop
xor
sbb
pushf
push
jbe
jbe
sub
adc
cmp
xchg
sbb
decl
lods
jg
xor
aam
sbb
xchg
test
shll
adcb
hlt
add
add
loopne
and
pop
shll
sbb
scas
hlt
mov
push
insb
inc
dec
or
fwait
jne
loop
inc
jbe
bnd
repz
in
or
and
cmpsl
cmp
adc
adc
push
inc
cmp
and
push
lds
mov
cmp
fsts
idivl
push
fdiv
mov
adc
xor
inc
xor
mov
int
mov
adc
mov
inc
push
adc
in
icebp
inc
inc
sbb
test
or
outsb
sub
int
test
sub
dec
inc
adc
sbb
js
mov
outsb
adc
rclb
test
clc
mov
or
jl
lock
mov
inc
mov
sbb
iret
dec
fnstcw
xor
ja
subb
and
lret
ret
jnp
in
xorb
movsl
sub
lret
lock
push
shlb
and
mov
daa
mov
sub
repz
jns
loop
xlat
add
add
mov
popf
xor
out
push
jle
lock
push
dec
or
sub
add
xor
sbb
inc
es
imul
addr16
call
adc
repnz
es
mov
inc
add
sti
aam
addb
or
test
lcall
call
shlb
pop
or
jbe
ret
leave
add
sub
imull
rcll
add
sbb
xor
nop
les
pop
adc
mov
jp
mov
and
andb
or
lds
mov
test
jp
mov
rol
add
mov
mov
mov
clc
aam
push
add
in
fisubrs
push
adc
xchg
inc
fadds
adc
mov
ficoms
iret
ds
sub
and
clc
rcrl
std
and
notb
in
xchg
adcl
dec
push
adc
gs
sbb
cmp
add
bound
cmp
std
dec
pop
adc
and
add
addb
adc
push
ja
add
or
adc
enter
lds
fistl
xchg
fwait
inc
mov
popa
xor
frstor
addb
xor
lods
mov
sbb
lea
movsl
mov
xor
nop
or
xor
popa
bound
xor
xchg
add
jle
xor
push
repz
mov
clc
lds
mov
mov
stos
stos
sbb
mov
bound
js
mov
add
jne
mov
xor
mov
and
and
sbb
es
andb
rorl
in
mov
stos
out
pop
cs
xor
and
add
negl
adc
jbe
loop
adc
push
pop
adc
add
and
rcr
lods
push
int3
clc
jmp
movsl
cmp
cmp
xchg
pop
xor
stos
cwtl
sub
in
or
ret
adcl
and
mov
pop
repz
and
jbe
add
xor
loop
popa
je
mov
inc
arpl
inc
enter
xor
adcb
push
mov
push
xlat
push
mov
sub
lcall
push
fldcw
rolb
adc
jge
mov
or
push
cmp
dec
lahf
pop
out
mov
cmp
aad
popa
xor
es
cwtl
push
jne
hlt
jne
lock
mov
push
cwtl
fadds
push
je
pop
sbb
dec
inc
mov
xor
jmp
lret
jb
or
incb
mov
mov
sub
pusha
dec
jmp
loop
clc
dec
ret
data16
lahf
xor
jge
adc
fs
movsl
loopne
sub
cwtl
adc
mov
dec
lret
js
push
loope
cmp
pop
loop
add
idivl
out
ret
jo
int3
fdivrl
push
shll
and
daa
mov
pop
lret
fs
fistpl
mov
sbb
add
jl
mov
test
in
call
inc
mov
inc
dec
add
inc
add
cmp
inc
inc
pop
pop
or
pop
test
incl
push
mov
add
daa
jne
xor
add
add
fdivrl
aam
inc
jnp
pop
inc
and
mov
lds
adc
ret
add
or
jg
sbb
cli
sub
mov
cmpsb
add
dec
and
add
adc
bound
or
out
dec
scas
shl
add
xor
out
add
loop
lcall
call
pop
popa
mov
push
and
mov
jmp
cld
inc
add
pop
mov
xor
add
push
cmp
mov
in
in
aaa
sbb
xor
dec
or
cmpsb
add
inc
int
sbb
outsb
shll
lods
or
adc
mov
pop
mov
dec
push
cmp
mov
push
xchg
and
addb
movsb
in
roll
es
incl
outsb
in
adc
mov
xchg
push
pop
aam
and
mov
inc
add
add
cld
mov
mov
pop
cli
lcall
fdivs
sub
jnp
push
jmp
je
adc
xchg
xchg
icebp
mov
mov
add
testb
out
call
dec
loope
cmp
fs
shll
xchg
xorl
and
out
mov
call
or
std
push
fsubs
xlat
adc
lret
mov
dec
pop
addr16
push
mov
stc
mov
clc
sub
jb
add
inc
inc
mov
hlt
jg
sti
sbb
jg
mov
je
in
insb
jge
clc
push
out
call
rcrb
decb
es
ja
push
mov
js
imul
inc
xchg
push
aaa
mov
movsl
dec
add
por
mov
dec
add
popa
sarb
ljmp
fcoms
dec
lret
adc
shlb
jg
call
icebp
jl
je
mov
daa
sub
mov
lods
inc
mov
andb
xlat
mov
adc
mov
cmp
xchg
dec
or
inc
sbb
leave
fisttps
pop
loop
inc
call
sarl
inc
sbb
or
lret
arpl
xchg
call
push
mov
adc
clc
pushf
adc
fisttps
out
test
cld
pop
movsb
cld
icebp
dec
std
jbe
dec
and
in
or
mov
xchg
cltd
subl
cmp
sub
add
scas
incl
loopne
pop
aaa
fcmovbe
outsb
add
pop
pop
push
dec
inc
inc
mov
test
dec
test
or
test
jnp
aad
mov
jbe
in
shll
jo
bswap
addb
add
scas
outsb
lahf
mov
rcr
decl
cmp
loop
mov
xchg
test
lods
mov
lods
and
mov
mov
clc
ljmp
adc
mov
aad
mov
mov
adc
push
movsl
lods
push
imul
add
in
notb
mov
daa
lea
inc
lea
cli
add
mov
outsl
outsl
rolb
inc
xor
test
and
adcl
add
fldl
addb
lret
sub
cmc
aad
test
lcall
xor
mov
outsb
or
add
int3
gs
out
mov
add
cli
xchg
rorb
adc
mov
fxrstor
and
inc
inc
mov
adc
cltd
orl
or
add
inc
mov
sarb
mov
dec
add
call
and
mov
add
dec
fnstsw
addb
test
or
mov
mov
loop
lock
adc
lock
xchg
adc
inc
pop
enter
sar
push
orb
sahf
daa
xor
or
fbld
das
data16
push
ja
pop
std
push
or
das
or
pop
lahf
add
test
js
nop
sbb
lcall
das
inc
lcall
aaa
mov
push
or
test
pop
lret
leave
pop
loop
mov
cmp
imulb
xchg
movsb
test
sbb
inc
fiaddl
sbb
sbb
pop
jae
mov
call
inc
int3
test
lock
mov
sbb
mov
and
stc
dec
or
add
fisubrs
testl
js
inc
subb
dec
jmp
pop
shlb
push
inc
leave
push
jl
clc
push
loope
rcll
mov
sahf
jp
mov
xchg
loop
cmpsl
mov
loopne
inc
adc
cmovne
push
add
loop
mov
ljmp
and
push
ja
and
inc
xlat
push
imul
ljmp
pop
sbb
addb
pop
push
iret
sub
jecxz
mov
inc
fdivrl
mov
dec
push
jb
mov
mov
push
xchg
cmpsl
jbe
mov
or
hlt
lods
pop
xor
shll
jg
dec
or
and
aas
aas
notb
inc
xor
scas
in
sbb
into
les
and
xor
adc
inc
or
movsb
popf
adc
xlat
mov
mov
pop
loopne
outsl
in
mov
jb
lods
and
add
cs
adc
scas
push
negl
cwtl
imul
adc
push
aaa
pop
mov
js
mov
scas
fistpll
mov
mov
push
imul
push
lods
sbb
in
sub
and
mov
outsl
shl
ja
mov
adc
add
xchg
fcmovu
ffreep
or
sbb
cld
leave
lods
jecxz
jecxz
add
xor
add
out
sahf
sqrtps
nop
push
push
js,pn
insl
adc
sbb
outsl
xor
add
or
adc
lods
pop
test
jne
aad
xor
push
js
insb
je
outsb
icebp
gs
sub
aad
inc
mov
arpl
ja
mov
loopne
fdivr
push
psubw
and
test
loop
add
leave
cli
out
mov
add
stos
gs
rcr
mov
call
mov
ds
mov
sbbb
push
sbb
pop
pop
enter
mov
aas
je
lods
push
mov
cmp
pop
shr
dec
in
out
mov
ret
xchg
ja
call
mov
das
test
jle
outsl
sbb
notb
push
push
std
lret
add
inc
imul
cmc
mov
in
test
andb
cmp
imul
sub
les
lret
incl
xor
fsubp
adc
and
add
les
shl
inc
icebp
arpl
cli
in
mov
sub
push
leave
inc
stc
mov
enter
fmuls
ja
and
add
ret
inc
frstpm(287
add
addr16
arpl
int
adc
addb
mov
sbb
add
sbbb
es
sbb
or
mov
pop
aas
jb
mov
fs
cmp
movb
push
movsl
jg
jmp
ljmp
in
cmc
xor
shll
and
out
cwtl
inc
insl
or
push
xchg
add
add
repnz
js
lret
loopne
add
adc
pop
mov
mov
sbb
sbb
aad
jno
add
xor
xor
or
fstpt
pop
push
add
ret
sbb
ja
shrl
add
jae
loop
outsl
orl
or
add
dec
stos
mov
mov
mov
sbb
mov
cmp
inc
add
adc
shlb
aas
or
cmp
cmc
fcomip
lods
push
adc
andb
cmp
xchg
push
sub
mov
or
aaa
pop
jle
xor
or
pop
lods
enter
dec
push
into
jns
add
jecxz
outsl
push
add
push
mov
add
movsl
jle
fiaddl
roll
xchg
data16
call
xor
cwtl
push
jns
pop
xchg
sbb
push
xchg
andl
into
inc
out
sbbl
add
cmp
and
out
and
mov
mov
adc
and
scas
cli
in
xor
and
popf
popf
xor
jl
sbb
mov
push
xchg
pop
nop
push
inc
flds
push
inc
test
jg
dec
sbbb
inc
rclb
sti
cmp
push
pop
inc
inc
fistl
dec
add
andl
test
cmp
inc
xlat
sub
clc
iret
xchg
lret
fdivrs
pop
sub
in
push
ret
pop
pop
adc
inc
mov
add
shlb
jno
and
mov
push
adc
ficompl
jno
cmp
mov
lock
outsl
fucomi
mov
mov
cltd
push
js
jecxz
aas
or
loopne
mov
pusha
adc
fsubs
cmc
push
inc
roll
xor
subl
and
mov
cmp
adc
inc
push
ljmp
and
pop
sub
lock
cmp
adc
popf
sub
rolb
cld
or
fs
mov
mov
dec
bndstx
add
sbb
push
xchg
sbb
add
push
adc
mov
pop
push
rclb
sub
xor
and
test
test
cmpsb
inc
pop
push
add
mov
cli
cmp
mov
mov
push
mov
add
inc
cmp
mov
mov
jne
jns
push
and
cmpsl
pusha
cltd
mov
mov
imul
push
push
pop
stc
xor
lahf
das
add
mov
jg
mov
xor
and
cltd
flds
mov
mov
fwait
or
mov
xchg
clc
pop
pop
sub
sbbb
push
leave
pop
pop
jbe
sbb
cmpsb
into
loop
push
sbb
or
cmc
stos
and
subb
push
aas
mov
frstor
xchg
push
xchg
push
aam
xor
or
lcall
stc
jl
push
sub
enter
es
dec
repz
mov
outsl
fwait
inc
int
xchg
mov
negb
les
and
or
inc
fld
jb
aas
repz
clc
and
jno
or
inc
pop
xchg
clc
out
ljmp
popa
xchg
gs
pop
push
or
pusha
loop
mov
lods
mov
add
out
stc
mov
test
js
sub
mov
mov
push
outsb
cmp
mov
adc
mov
clc
jae
outsl
shrb
adc
outsl
test
adc
call
cs
xorl
shr
fwait
das
insb
cmc
add
cwtl
sub
adc
xchg
repnz
jge
cli
cmc
xchg
test
inc
adc
cmpb
dec
dec
pop
je
outsl
sub
je
or
xchg
fdivr
incl
test
adc
jg
cmp
aad
and
nop
in
inc
subl
lock
xchg
xchg
pop
sbb
into
mov
js
sub
add
xchg
mov
push
push
xlat
sbb
add
jae
test
dec
pop
loopne
add
mov
jno
call
in
jge
mov
fisubl
lcall
jae
ljmp
insl
or
out
outsb
fiadds
push
xor
mov
aam
cmpb
xchg
stc
icebp
pop
mov
dec
mov
lock
dec
leave
int3
inc
jo
incb
sub
sub
pop
cmp
adc
mov
aam
scas
test
hlt
out
cmp
pop
push
fdiv
dec
add
pop
sti
sbb
in
sbb
adc
inc
xchg
je
xor
mov
shll
shll
jl
add
mov
lret
aaa
hlt
sub
sbb
jnp
sub
cmc
sub
mov
cmpsl
adc
fwait
dec
cmpsl
aaa
loop
clc
push
pusha
out
int3
cmp
xchg
fwait
shrl
xchg
mov
inc
xchg
add
repz
psadbw
push
mov
clc
lret
fsubrs
call
adc
call
les
jl
mov
in
inc
xor
dec
inc
ljmp
pop
mov
daa
jbe
cmp
or
js
call
notl
int3
dec
pop
mov
std
lret
out
or
rorl
movsb
add
xor
pop
cli
outsl
je
pop
imul
mov
pusha
pop
dec
cmp
out
call
cmp
and
popf
add
clc
push
add
fsubl
mov
mov
or
xor
fdivrl
decl
inc
jge
push
sub
inc
sarb
cld
xchg
inc
adc
cmp
dec
push
outsl
jp
call
lock
inc
lock
fisttps
dec
push
push
andb
jmp
push
jo
bound
jno
lods
dec
inc
pop
adcb
imul
fstps
jg
lea
jle
pop
jae
add
daa
add
jge
sub
test
out
pop
ja
rcll
popa
es
adc
pop
movsb
mov
lcall
pusha
xor
decl
outsl
sub
out
daa
stc
in
push
fisubrl
ds
mov
adc
cmp
mov
lds
xor
jle
daa
ja
lods
stos
insl
or
insl
ljmp
mov
or
fisttps
dec
dec
cwtl
cli
mov
jo
adc
mov
mov
add
or
and
lcall
cmpsl
out
inc
test
scas
mov
ret
divb
insl
mov
test
pop
stos
je
jmp
mov
aaa
adc
add
ss
mov
decl
test
lea
push
das
out
out
push
inc
lea
dec
jns
loopne
push
mov
sbb
shr
cmp
pusha
adc
push
cmp
fidivl
cli
pop
mov
xor
movsl
outsl
std
inc
xchg
jbe
mov
add
mov
incl
fs
stos
push
mov
loop
pusha
out
mov
je
fwait
rclb
popa
mov
or
cmp
cmp
aas
jp
and
mov
fucomip
mov
mov
push
dec
mov
sbb
or
popf
lock
test
add
clc
adc
mov
pop
jb
das
xor
mov
jae
fstps
or
pushl
dec
xor
cld
es
push
xchg
pushf
and
cltd
out
outsb
pop
push
loop
jge
test
cmp
fildll
mov
cmp
adc
xor
insl
dec
jg
jg
cmp
sub
icebp
push
je
and
cmp
mov
mov
xor
mov
pop
push
pop
or
out
adc
loope
add
push
icebp
outsl
cld
ret
dec
push
movsl
dec
mov
shlb
std
adc
fbstp
mov
inc
cmp
test
mov
add
xchg
add
stos
lods
inc
xchg
outsb
aam
cmp
xchg
and
inc
mov
or
fbld
scas
adc
jg
les
stos
cmp
jns
cmp
aam
in
icebp
and
test
insb
into
xchg
imul
fldt
cmp
dec
mov
sub
or
inc
icebp
mov
bound
cmp
rclb
dec
inc
pop
lret
or
push
lea
mov
cmp
push
jns
pop
pop
xor
jnp
mov
in
ss
inc
dec
leave
movb
outsl
jne
popf
in
bound
loopne
out
movsl
icebp
daa
inc
sbb
jge
sbb
popf
add
fists
jle
insl
add
cmc
mov
or
dec
push
ljmp
sbb
push
lret
sahf
std
pop
mov
inc
xchg
mov
pusha
sub
lcall
mov
lcall
icebp
and
sbb
pusha
and
add
jg
sbb
add
xor
mov
push
shll
cmc
popa
enter
fsubrs
or
adc
jg
inc
outsl
out
outsl
mov
xchg
fwait
aad
xor
push
dec
insb
jp
iret
pop
push
cmpsl
dec
fmul
xor
cld
sahf
pusha
mov
jnp
inc
js
inc
lret
or
imul
jl
mov
popa
jmp
enter
xlat
mov
xchg
mov
mov
clc
jle
adc
adc
fdivrs
or
xor
mov
push
mov
jns
xchg
add
ficomps
loopne
sarl
popf
inc
mov
fildll
rolb
pop
and
jo
adcl
mov
inc
cld
mov
faddl
dec
and
xchg
mov
adc
inc
stos
loope
cmp
stos
xchg
jns
in
ja
mov
je
mov
lret
mov
adc
and
cmp
in
xchg
movl
inc
pop
mov
inc
inc
pushf
pop
mov
fucom
das
inc
add
xchg
bnd
and
cmc
add
mov
sbb
loope
repz
outsb
jge
ficomps
push
jbe
add
sbb
jmp
pop
aam
push
dec
pop
inc
mov
and
cmc
dec
adc
je
xor
mov
jl
adc
mov
or
fisubrs
sub
inc
fdivrl
mov
inc
and
das
les
add
mov
loop
dec
imul
pop
int
sub
adc
jle
or
mov
loopne
cmp
or
pop
sbbb
xchg
fbld
add
aaa
push
pop
int
mov
scas
and
or
shl
sub
sub
stos
test
jo
repz
adc
cltd
push
inc
pop
das
add
insl
cmpsl
push
xor
adc
lea
inc
add
daa
add
cmp
daa
cmp
in
sti
rolb
lock
lods
and
or
rolb
adcb
add
push
push
or
mov
mov
dec
mov
or
test
pop
dec
lock
nop
and
js
outsb
adc
rorb
or
popa
cmp
fwait
adc
mov
fwait
mov
lods
pop
flds
jmp
iret
dec
pop
adc
xchg
fmuls
mov
jg
mov
fisttps
adc
mov
mov
inc
subb
mov
in
or
dec
inc
cmp
lods
ds
mov
pop
movsb
test
add
dec
test
xor
loop
adc
lahf
add
xor
sub
adc
or
sbb
xchg
outsl
inc
sti
ret
out
mov
mov
add
test
test
jmp
sub
xorb
jge
sahf
jae
rcrb
rorl
add
sub
addl
ret
fcompp
lock
or
notl
cmpsb
fstps
and
push
insb
ljmp
inc
lds
enter
shrb
xchg
dec
add
xor
repnz
xor
inc
sub
adc
mov
adc
call
jbe
pop
test
fistpll
jo
ljmp
daa
decl
sub
rcll
cli
stc
iret
pop
push
out
push
or
mov
leave
das
cmp
fisttpl
mov
shrl
jae
lcall
loopne
or
aaa
mov
ret
lods
rol
pop
clc
sbb
popf
adc
mov
xchg
mov
mov
add
loopne
lock
test
jnp
pop
mov
pop
dec
cmpsl
int3
movsb
aad
push
outsb
inc
bound
mov
pop
test
shl
enter
and
xchg
repnz
enter
and
mov
or
sti
call
mov
push
sub
std
cmovne
mov
decl
shrb
add
divl
sti
mov
mov
or
pop
leave
adc
clc
or
mov
into
or
stos
xchg
fnstsw
popf
xchg
ret
je
das
call
ja
pop
adc
xchg
popa
adc
jno
inc
push
inc
cltd
xchg
add
inc
sbb
dec
sbb
inc
push
xor
or
push
push
cmp
pop
inc
movsb
add
pusha
or
popa
andl
jns
mov
out
call
clc
jle
test
inc
inc
jl
sbb
mov
imul
sbb
int3
pop
dec
decb
mov
xchg
lock
inc
cmp
jl
sarl
daa
mov
popa
inc
sbb
or
daa
mov
rcll
push
scas
int3
jmp
fnstenv
jb
add
jl
inc
insl
cld
das
ja
fidivl
mov
fcmovb
cmpsb
cmp
inc
adc
in
divb
lock
adc
sub
inc
adc
or
fists
push
dec
and
das
mov
mov
xchg
cmovg
dec
test
mov
fsubrl
or
sub
aad
clc
inc
divb
faddl
xchg
add
jno
stc
sub
les
inc
cmp
icebp
and
lock
sbb
sti
fbld
lea
push
jg
pop
cld
and
nop
mov
clc
ja
dec
adc
pop
cli
mov
fdivrs
adc
mov
mov
cs
mov
in
xchg
dec
test
adc
aaa
adc
dec
sbb
adc
mov
jns
scas
mov
mov
fistpll
fxtract
xor
mov
pop
xchg
jo
xchg
subb
dec
das
shl
lea
pop
dec
rcl
sub
xor
sbb
pop
inc
xor
clc
mov
jmp
inc
and
lods
jge
dec
shr
mov
sub
inc
pop
cmp
ja
mov
int3
mov
aaa
pushf
cmp
loope
or
add
mov
into
mov
or
outsl
shrb
pop
mov
dec
xor
mov
lock
cmpsl
sub
repnz
outsb
and
mov
mov
pop
mov
shl
in
sbb
out
inc
mov
dec
ljmp
enter
test
adc
mov
inc
sbbb
sti
pop
mov
in
rol
iret
xchg
xlat
mov
xchg
adc
sub
daa
jns
push
or
divl
hlt
or
loope
fcomps
aaa
pop
cmp
dec
mov
repz
ror
cmp
pop
add
rol
insb
add
pop
add
inc
pushl
cmpsb
lcall
in
xor
and
sbb
push
iret
pop
sahf
inc
cmp
ljmp
test
push
sti
cld
loopne
sub
sbb
inc
ds
or
lret
sub
push
rcll
aam
sub
adc
repz
and
mov
inc
push
fstl
clc
add
inc
adc
push
sub
mov
inc
repz
push
xchg
sbb
pop
adc
mov
subl
push
sub
cmp
sub
add
and
test
insb
pop
imul
mov
into
push
aas
das
fldl
push
sahf
cld
mov
sbb
xlat
pop
add
aaa
jnp
pop
fistpl
clc
xchg
add
aad
call
bound
or
in
adc
jne
div
ds
loope
adc
sub
add
pop
lea
cld
mov
aam
mov
aaa
dec
hlt
shl
hlt
inc
fadds
xlat
inc
sbb
xor
add
sub
sbb
ret
stos
loopne
push
jge
adc
enter
pop
and
add
mov
pusha
aaa
cld
or
push
add
popf
adc
shrl
jp
aad
sub
add
pushf
mov
cmp
cld
mov
mov
add
cmpsl
sarl
sub
add
inc
mov
sub
fdivs
jecxz
xor
xor
cmp
or
push
cmp
into
pop
inc
mov
int3
sbb
add
fadds
add
add
add
pop
andb
push
adc
clc
mov
lahf
sub
pop
xchg
mov
push
test
mov
pusha
cmovb
pop
les
mul
in
mov
add
mov
inc
xchg
add
xchg
push
icebp
je
sub
mov
add
loopne
mov
add
test
jmp
lock
and
jecxz
fisubl
mov
aam
imul
sarb
stos
cmp
jb
pop
icebp
sub
lret
les
pop
aam
push
das
add
in
in
push
loop
inc
dec
mov
and
fucom
mov
mov
add
jne
cmp
or
and
aam
cmpl
ljmp
jns
clc
xchg
cmpsb
adc
ds
arpl
sub
and
jbe
inc
or
je
ret
cmpsb
fsubrs
fldenv
push
sbb
fs
scas
hlt
xchg
xor
int3
popa
push
orl
out
in
or
sti
std
mov
xchg
int
sar
pop
test
jbe
dec
dec
rorl
leave
fcmovbe
fsubl
inc
mov
sbb
rcl
inc
inc
push
pop
testb
lret
push
cmp
or
sub
inc
xor
js
fdivs
inc
add
adc
rclb
mov
pop
or
leave
dec
push
inc
sbb
add
popf
dec
adc
out
cmp
out
add
add
sbb
scas
xor
or
adc
test
mov
cmp
lods
mov
fmull
hlt
sub
lock
xor
pop
aas
mov
test
sbb
xor
mov
xor
dec
shll
ret
jmp
cmpsb
push
mov
adc
push
ret
push
mov
sbb
test
mov
push
mov
outsl
add
andl
lcall
rolb
inc
add
or
cmp
jge
movsl
js
dec
add
mov
pop
loop
push
sbb
sarb
jmp
iret
mov
xchg
loop
out
rcrb
inc
adc
add
aam
decl
pushl
pop
or
andb
cmp
in
pushf
mov
pop
rcll
pop
mov
mov
push
stos
mov
mov
mov
repz
scas
mov
add
stos
aaa
push
pop
add
xchg
pop
lea
mov
lds
sub
shrb
pop
and
fs
imul
add
ja
fs
fs
and
cmp
jg
inc
icebp
inc
sahf
jns
fsubs
mov
xor
insl
pop
mov
xchg
inc
adc
adc
mov
fwait
mov
clc
loopne
in
mov
cmp
and
dec
push
push
popf
and
test
jl
adc
in
add
dec
add
divb
jg
add
cmp
lret
xchg
push
or
insb
lods
dec
and
add
fistl
jecxz
cmp
ja
jb
dec
or
cmp
dec
test
movsl
cwtl
je
pop
outsl
sub
cmc
push
out
adc
ljmp
push
lret
push
je
stc
inc
hlt
and
test
and
cmpb
insl
pop
inc
call
lcall
add
stc
jns
mov
cli
mov
inc
cwtl
fs
jecxz
cs
sbb
mov
repz
mov
lock
fsubrl
adc
ds
dec
daa
inc
mov
adc
xchg
cmp
clc
push
rorb
mov
push
push
cld
dec
hlt
push
pop
adc
fadd
cwtl
and
sub
push
cmp
xchg
movsl
mov
nop
xchg
and
inc
cld
add
cmp
jno
fstpt
adc
insl
cmp
xlat
clc
ljmp
pop
sti
dec
xchg
jge
test
mov
loopne
cmp
push
cld
sub
das
sub
outsl
inc
jne
test
lock
or
mov
or
pop
pusha
add
pop
es
inc
cld
or
xchg
jns
pop
pop
divl
dec
clc
push
jns
ret
pop
pop
jmp
xchg
sti
and
xchg
repnz
scas
repz
dec
aad
add
aam
out
mov
enter
xchg
jne
mov
mov
filds
arpl
xchg
xchg
test
jbe
inc
xchg
xchg
mov
push
scas
incb
into
cmpsl
adc
xchg
xor
aad
dec
out
pop
push
and
subb
xchg
mov
and
push
fnsave
mov
dec
popa
dec
jnp
adcl
decb
dec
adc
cmc
jecxz
cli
int3
sbb
movsb
pop
cmp
es
mov
mov
inc
das
xor
shll
cli
jg
jmp
das
into
mov
roll
xor
sub
pop
dec
cltd
xchg
pop
add
insl
mov
xchg
mov
mov
test
jp
sub
and
add
mov
cmp
sub
adc
push
mov
or
xorl
push
mov
ficoml
inc
and
icebp
fcomip
xchg
pop
mov
cmc
lds
ss
sub
in
pop
icebp
xor
ret
shll
sbb
pop
outsl
scas
test
lahf
scas
cmp
popf
ljmp
adc
imul
decb
cmp
dec
xchg
sub
fsubs
rcll
pop
mov
jp
mov
loopne
xor
dec
int3
mov
fisubrs
pop
imul
xchg
mov
push
pop
clc
call
mov
jmp
imul
jmp
push
inc
add
push
mov
and
cmpsl
pop
adc
adc
test
jecxz
incl
out
mov
in
rcll
xchg
clc
xor
loopne
stos
loop
les
and
sbbl
inc
daa
mov
hlt
sbb
addb
xor
cmp
aas
mov
inc
cwtl
dec
sbbb
pop
enter
mov
cld
dec
aad
add
jno
cmp
pop
pop
push
push
sbb
jb
out
add
adc
subl
fnstenv
and
cmp
xor
mov
adc
push
pop
cwtl
insl
xchg
rolb
push
add
jmp
outsl
pop
adcb
sub
loopne
popf
es
add
adc
ljmp
pop
mov
sub
std
push
pop
popf
dec
ret
inc
add
cli
dec
cmp
inc
outsb
dec
lock
arpl
fimull
sbb
mov
inc
aam
repnz
xor
dec
mov
rcrb
adc
ret
mov
push
repz
das
or
xchg
mov
pop
lods
add
je
mov
cmp
add
ja
fsubl
aad
mov
push
lock
add
fildl
cld
jg
cld
add
pop
push
cmpl
adc
ljmp
lock
sub
pop
add
orb
xlat
sub
fidivrl
push
pop
lret
jle
lret
rorl
lsl
out
fistl
test
push
push
xlat
pop
popa
fwait
out
jno,pn
aas
das
jg
lret
outsl
or
aam
xchg
outsb
xchg
mov
addb
in
call
inc
ret
adc
in
clc
sub
in
cmp
dec
mov
hlt
insl
fldt
filds
lcall
scas
push
into
lret
jne
add
or
cli
aaa
les
sti
lock
lret
pop
push
pop
cmovle
sub
cmp
outsl
mov
or
mov
pop
push
repnz
ret
xor
outsb
stc
daa
fcom
call
or
add
pop
xchg
inc
dec
stos
xlat
inc
jle
mov
out
fmull
sbbl
pusha
add
call
mov
add
and
inc
and
ret
jo
inc
mov
jp
push
inc
mov
stos
dec
in
ss
add
jb
insl
add
arpl
fcmovu
add
testb
scas
fmull
mov
hlt
adc
inc
sbb
subb
addr16
mov
dec
popf
loope
mov
and
dec
inc
mov
mov
mov
inc
mov
in
or
pop
adc
push
or
rolb
xchg
sub
nop
stos
out
cmp
push
jle
hlt
rcl
hlt
addl
shlb
enter
jnp
mov
das
dec
mov
push
mov
std
imul
xor
xchg
je
xor
sbb
jp
aam
cmpsb
and
xchg
add
push
in
adc
call
inc
pop
sbb
das
pushl
hlt
imul
mov
dec
rcrb
add
ljmp
add
sub
aaa
sub
mov
or
jg
or
and
mov
in
pusha
sub
fnstcw
mov
mov
out
cmp
addr16
scas
push
pop
adc
cmp
or
push
inc
jno
divl
and
outsb
pop
inc
adc
and
out
dec
dec
inc
pop
push
cmp
adcb
sub
mov
sti
rorl
inc
inc
mov
pop
pop
inc
mov
cld
add
push
add
push
adc
mov
mov
adc
lock
jg
call
inc
insb
hlt
lds
std
cmp
or
mov
les
xchg
xor
jbe
or
push
add
movsl
cli
subb
out
aas
pop
lcall
aas
jmp
adc
fsubrl
ljmp
xor
daa
sbb
mov
mov
pushl
mov
mov
push
scas
lods
dec
and
ja
ljmp
sub
push
pop
dec
sub
dec
mov
and
and
fst
out
decl
test
out
adc
flds
inc
ret
lret
lret
lea
sub
and
sbb
cli
or
stc
xorl
mov
inc
add
mov
mov
add
and
cli
mov
mov
push
add
xchg
pop
orl
insl
add
mov
fwait
sahf
add
xchg
nop
jmp
add
stos
xchg
rcl
jo
arpl
shrb
icebp
insl
add
mov
mov
fldt
ret
pop
hlt
div
mov
rorb
movsb
inc
mov
add
insl
mov
mov
aam
xchg
ja
mov
in
ds
rcrb
into
jle
aaa
call
stos
inc
dec
or
call
jg
cmpsb
mov
repz
adc
sets
scas
sub
add
sub
cmc
jo
sti
pop
stc
sub
cmp
adc
pop
xchg
or
fcomps
mov
xchg
cmp
clc
fstpl
movsl
push
lods
sub
adc
inc
cs
inc
cs
das
add
xor
cmpsb
mov
gs
adc
pop
mov
add
aaa
cmc
cmp
idivl
fiadds
or
and
cmp
test
mov
cld
out
fldcw
push
pop
stos
xor
ljmp
lds
mov
fistps
xchg
mov
int3
adc
aaa
mov
inc
dec
xchg
jmp
pop
dec
std
outsl
cmp
push
add
scas
jae
and
loopne
lods
in
push
out
sahf
xchg
mov
into
nop
lea
pushl
lock
lock
or
cld
sub
out
test
mov
inc
int
mov
fsubrs
xor
mov
adc
mov
incl
cld
xor
and
popa
sbb
push
add
loopne
pop
mov
nopl
push
lret
int3
mov
push
pop
rolb
aas
fmuls
rorl
or
bound
xor
jg
ja
je
and
sbb
cmpsl
in
mov
push
shll
adc
mov
sub
xor
jo
push
outsl
mov
lods
jle
cmp
push
fstpl
int3
insb
mov
les
clc
or
jecxz
and
in
push
cmpsl
stos
mov
dec
outsb
push
xlat
sbb
fcoml
outsl
in
mov
or
mov
and
pop
pop
ljmp
jo
xchg
mov
enter
lods
sarb
dec
outsl
pop
orb
xchg
sub
xchg
mov
add
test
and
fildl
das
or
cwtl
scas
pop
into
pop
jo
jmp
std
add
iret
inc
or
xchg
xchg
mov
push
cmc
test
jl
push
sar
popf
sbb
xchg
add
ja
repz
xor
stos
inc
xorl
insl
mov
enter
cmp
cltd
les
inc
ljmp
int3
xlat
mov
popf
data16
push
outsl
je
adc
insb
fsts
repnz
pop
pop
mov
in
fisubrs
outsl
push
add
das
push
rorl
xchg
xchg
scas
test
hlt
sbb
cli
jmp
push
movsb
mov
sub
xchg
inc
test
pop
stos
sub
jo
adc
cwtl
rcr
jns
jne
ja
and
pop
hlt
sbb
jmp
sbb
pusha
cmp
scas
movl
cmpsl
xor
push
sbb
lcall
push
iret
cmp
adc
rcr
mov
dec
push
push
in
add
and
out
cs
insl
out
or
push
or
add
push
add
dec
xchg
xor
addl
imul
addr16
sbb
and
mov
outsl
mov
cltd
invd
inc
adc
add
lahf
test
inc
jns,pn
sbb
dec
jno
inc
repnz
pop
test
inc
out
test
rorb
js
add
push
cmp
mov
ret
mov
cmpsb
inc
xor
int3
xorb
pop
cs
ret
es
jg
lret
daa
push
push
fcomp
push
add
fcoml
mov
pop
sub
test
push
cmc
or
hlt
jbe
mov
call
xor
adc
sub
jns
adc
mov
test
and
mov
aaa
or
push
jl
stos
and
inc
pop
int
rolb
lock
arpl
test
dec
cwtl
adc
cmpsl
in
aaa
jns
mov
out
cmpsl
aas
jp
and
xchg
jne
jne
jb
lock
push
stc
lock
inc
sbb
sar
cwtl
insl
sar
and
pop
push
icebp
jl
lods
add
lahf
mov
xchg
aam
mov
push
ds
in
lret
push
pop
loop
aas
jne
icebp
ret
cmpsb
push
cld
sub
push
aad
and
inc
adc
inc
jge
lock
fcoml
cltd
inc
dec
sub
das
iret
sbb
mov
test
push
sub
mov
mov
push
fists
pop
pop
xor
addb
mov
mov
jl
push
mov
xor
imulb
mov
push
cmp
add
or
push
add
or
add
adc
mov
jmp
clc
adc
popa
push
es
xor
clc
test
lock
cld
push
insb
fs
mov
pop
sub
es
or
loopne
ret
mov
sub
push
test
adc
sbb
and
loope
clc
pop
loop
mov
loopne
push
pop
cmp
push
mov
pop
mov
xchg
pop
xor
add
mov
les
stos
clc
or
repnz
rcrb
aaa
inc
push
cli
movq
fwait
rolb
adc
xor
push
aad
fists
aaa
loop
jg
sbb
mov
mov
push
mov
or
das
call
test
aas
es
xor
fstpl
jl
mov
mov
and
xchg
adc
call
jo
mov
or
aam
das
lds
push
mov
inc
filds
ljmp
fistpll
cmp
push
sbb
loopne
mov
and
inc
xor
adc
ffreep
sub
cmp
sub
or
mov
dec
jo
stc
mov
outsb
in
fs
jl
lret
ljmp
and
je
sbbb
xchg
xor
xor
mov
sahf
dec
push
or
mov
inc
and
push
pop
pop
xchg
pop
add
dec
xor
shl
sbbb
inc
jle
adc
and
gs
cmp
fists
dec
push
in
int
sbb
lods
inc
mov
fwait
clc
mov
lock
mov
sub
pushf
jbe
fldl
fiadds
sub
dec
nop
mov
jno
xchg
jl
daa
dec
xor
roll
cli
inc
test
push
repz
lea
lock
jp
daa
sbb
shrl
add
and
testl
xchg
arpl
dec
add
out
push
cwtl
loop
sub
dec
mov
add
inc
repnz
adc
sub
mov
add
xor
mov
das
or
sahf
call
jg
push
mov
xchg
mov
inc
inc
sti
scas
pop
inc
xor
mov
add
mov
call
add
enter
inc
mov
jl
mov
sti
adc
push
into
les
neg
inc
mov
xchg
pop
sbb
dec
fidivs
es
dec
imul
test
cmpl
adc
dec
lahf
and
pop
mov
inc
mov
pop
adc
push
rorb
orl
enter
call
pop
jo
mov
adc
imul
call
jo
add
test
rcll
aad
icebp
loope
lret
add
or
mov
mov
rcr
jmp
push
adc
xor
fsubr
jae
lahf
insb
sub
dec
pop
jb
cmp
mull
iret
and
pop
cmp
pop
xlat
adc
inc
push
outsb
nop
call
lods
sub
sub
pop
fdivrl
sub
hlt
test
je
mov
aaa
in
les
call
push
push
xchg
inc
push
fisubs
adc
ror
rorb
shrl
sbb
jg
pop
aam
jle
and
add
push
xchg
mov
adcb
test
jne
fimull
adc
push
ror
cmp
and
or
inc
adc
mov
inc
movups
mov
dec
roll
cmpsb
xchg
push
icebp
and
adcb
scas
test
mov
adc
das
repz
mov
rclb
inc
dec
rorl
sbb
iret
xchg
push
popf
add
in
adc
aad
pandn
jbe
mov
dec
xor
ljmp
sbb
mov
xchg
in
push
add
popa
dec
xor
mov
inc
into
gs
adc
bound
push
push
sub
adc
aad
outsl
push
cwtl
ret
pop
fdivrl
movsl
ficoml
add
jmp
inc
adc
inc
test
push
and
mov
jmp
add
pop
add
cmp
rorb
add
dec
in
add
into
ret
loop
or
cld
jecxz
fmull
xor
push
mov
fisttpl
icebp
sti
add
adc
fiadds
inc
inc
in
pop
js
orb
hlt
addb
push
icebp
cli
xor
dec
adc
lcall
lds
adc
mov
clc
out
jae
icebp
xchg
shrb
xor
push
outsb
cmp
adc
sbb
dec
sahf
add
sbb
clc
pop
pop
loope
loopne
sbb
xchg
jno
or
repnz
xor
push
sub
pop
lock
mov
jge
dec
subb
sbb
stos
ljmp
xchg
cwtl
or
mov
sar
inc
sub
pushf
pop
add
fcoms
inc
shrb
pop
jno
arpl
lock
ja
or
subl
dec
dec
pop
sub
les
jp
ds
pop
mov
dec
push
int
ret
push
sub
popa
mov
icebp
mov
push
jecxz
cmp
cmp
data16
mov
into
mov
imul
and
push
pop
stos
imul
out
pop
test
push
mov
adc
ret
push
jmp
inc
je
mov
or
jl
pop
cmp
add
cwtl
loope
lds
fs
xchg
inc
int3
and
je
adc
lret
cmp
testb
dec
inc
loope
adc
or
into
mov
dec
push
push
push
mov
xchg
cmp
inc
adc
lret
jp
inc
popf
push
cmp
inc
push
lcall
pop
cmp
cmp
fwait
mov
das
mov
lock
add
test
pushf
pop
mov
mov
mov
enter
or
sub
sub
jbe
sbb
add
and
mov
lret
adc
pop
daa
add
test
aam
out
js
lcall
or
filds
inc
inc
pop
push
nop
xor
pusha
jae
mov
fists
inc
push
mov
das
loope
lds
and
mov
pop
inc
adc
or
lock
add
jg
add
inc
roll
addr16
cmp
out
mov
inc
ror
std
jo
cltd
outsb
xorb
fisubs
adc
aaa
mov
lock
mov
jge
call
xlat
aad
divb
add
push
or
outsb
ret
sbb
pop
cmp
iret
pop
adc
ljmp
out
and
sub
cmp
rcll
aaa
aas
ljmp
addb
mov
add
stc
mov
lahf
in
es
fimuls
scas
rolb
adc
sbb
sbb
sti
cmp
sbb
int
and
stos
inc
lods
rolb
sbb
std
in
jp
movsl
mov
push
or
cwtl
movsb
rorb
push
vpackuswb
movsl
sub
xchg
jbe
xor
loopne
pop
mov
mov
faddp
pusha
inc
xor
xor
aam
push
mov
mov
xchg
or
insl
add
shrb
xor
adc
lock
mov
sbb
outsl
test
pusha
mov
adc
add
or
mov
andl
cmp
lcall
cmp
jno
add
out
and
sbb
mov
lds
std
mov
mov
stos
popa
shlb
dec
jb
in
in
clc
pop
ljmp
sbb
loop
mov
push
fiadds
pop
into
pop
in
int3
jecxz
sbb
cmpsl
inc
push
andb
int3
call
inc
pop
add
test
mov
imul
adc
dec
push
shlb
popa
adc
subb
dec
mov
aas
sub
jmp
jo
roll
mov
ljmp
add
out
sbb
and
or
inc
or
inc
cmp
rorl
bound
loope
loop
and
mov
or
mov
nop
imul
lods
add
lahf
sarl
aas
sbb
mov
inc
and
test
cmpsl
mov
mov
out
add
jecxz
daa
jo
add
or
call
xchg
repnz
lret
cmp
outsl
sar
sarl
cmc
add
or
push
pop
and
int
adc
pop
les
rclb
aad
repnz
mov
out
mov
dec
add
xchg
add
call
pop
lods
add
aaa
aaa
cs
add
mov
lcall
mulb
pop
sti
pushl
call
add
rcrl
popa
add
filds
test
mov
sahf
xor
call
loopne
scas
in
popf
inc
add
add
lcall
outsb
loope
adc
push
sbb
test
scas
and
xchg
add
and
jo
negb
or
test
xor
xchg
stos
imul
leave
cmp
mov
addl
adc
and
mov
fnstsw
mov
mov
push
dec
xor
out
and
fdivl
add
das
push
fnsave
cmp
or
jns
mov
inc
rclb
ret
mov
xor
add
sub
mov
addl
stos
adc
shlb
push
dec
les
inc
adc
mov
adc
ljmp
call
into
mov
xchg
add
add
mov
pop
stos
inc
and
jnp
mov
decl
test
xor
orl
das
mov
mov
test
add
test
inc
xor
bound
cli
testl
lret
xor
fildl
loope
pop
lcall
inc
xchg
and
xchg
pop
mov
mov
cmp
jcxz
or
les
or
cli
aaa
add
push
test
cmp
or
xchg
sbb
in
sbb
and
mov
and
push
leave
arpl
mov
cmp
filds
jbe
add
cmp
add
pop
in
dec
movl
data16
gs
hlt
movsl
lock
adc
cmp
sub
pop
mov
jno
dec
push
or
mov
fistpll
lretw
mov
mov
in
mov
or
push
outsb
xchg
addb
lea
sti
push
mov
inc
dec
cwtl
shll
outsl
or
aam
sbb
lods
out
in
fistl
das
insb
pop
jle
sbb
push
addb
adc
xchg
and
dec
ja
mov
sbb
inc
add
jae
stc
or
aaa
mov
sti
bound
dec
data16
shl
mov
ljmp
cld
sub
adc
outsl
cld
mov
push
ds
imul
sub
sbb
xor
decl
sbb
pushf
sbb
fistpl
je
dec
inc
leave
or
mov
loopne
scas
xchg
inc
popa
int
out
int
addr16
ljmp
cld
enter
test
inc
inc
lea
pop
popa
or
orb
sub
nop
loope
mov
inc
test
adc
incl
xor
push
sbbb
addr16
addb
mov
out
cmp
adc
cmp
shl
std
jg
mov
js
lds
les
and
cmp
pop
adc
add
std
lods
imul
jle
insb
pop
fs
jmp
mov
dec
mov
orb
outsb
xchg
dec
ss
das
cmp
inc
jecxz
add
cwtl
mov
nop
fsubs
outsl
add
lret
test
clc
das
adc
mov
sbb
jo
add
sbb
mov
idiv
cli
jmp
les
je
clc
outsb
and
push
or
movsl
dec
mov
lds
aas
fldl
enter
add
jg
filds
mov
ret
clc
js
cmc
orb
pushl
mov
ja
pop
lret
push
add
mov
stos
repnz
loop
jno
cmp
jmp
je
scas
sub
adc
dec
xchg
add
mov
stos
pop
lret
xlat
test
dec
sub
mov
shrb
jb
outsl
sbb
jg
add
in
int3
add
sub
jle
xlat
dec
pop
cmc
pop
scas
adc
mov
sbb
outsb
decl
add
jo
xor
xlat
cmpsb
cmp
lea
lock
adc
add
xchg
push
ret
jg
cmc
sbb
xchg
ss
data16
jmp
sub
jno
icebp
int
leave
push
jns
xor
jg
idivl
ljmp
pop
cmpb
jns
cmp
sbb
stos
mov
mov
adc
std
aaa
pusha
adc
pushf
test
push
xchg
dec
push
shlb
fbld
sbb
stos
scas
fsts
cli
lds
or
insb
adc
out
loopne
std
sbb
xor
pop
push
cli
mov
negb
and
hlt
lcall
cmpsb
fstpt
ds
pop
out
or
mov
adc
inc
xchg
mov
pop
int3
js
icebp
fmull
js
cld
bound
addr16
ds
gs
or
rolb
mov
pop
add
aad
in
mov
cmpsb
test
xor
mov
sub
sbb
or
decl
inc
lret
aaa
xchg
push
add
lods
rcr
outsl
cmp
xchg
hlt
mov
aas
inc
and
mov
jg
lret
imull
nop
cmp
xchg
scas
push
pushf
mov
xchg
add
mov
pop
cmpl
lods
insb
mov
ret
pop
dec
push
lock
mov
fbld
orl
test
and
stos
cmp
and
call
test
shlb
mov
push
sub
push
dec
mov
jne
and
sub
add
mov
jmp
loopne
loope
out
jge
sub
loopne
adc
in
lods
mov
stos
jge
xor
xor
pop
fistps
test
mov
dec
pusha
jl
in
lahf
insb
dec
mov
loope
xchg
pop
cld
push
daa
pop
push
fisubrl
repnz
adc
add
inc
lea
insb
cld
or
mov
aaa
xchg
xlat
mov
repnz
mov
fwait
mov
rcll
mov
sub
ret
mov
test
lock
pop
shrl
js
mov
fs
outsl
mov
inc
loope
mov
xchg
adcl
sub
scas
popl
or
aad
enter
pop
incb
ret
popf
inc
rorl
bound
xchg
sbb
ffreep
movsb
gs
lret
push
imul
inc
mov
push
insb
dec
add
lcall
mov
push
push
rorl
out
dec
adc
clc
or
adc
fisttpl
clc
and
and
sti
xchg
stos
lret
xchg
sbb
adc
sbb
jge
push
pop
inc
sbb
rorb
mov
jecxz
out
push
or
push
pop
add
in
mov
mov
repz
nop
pop
pop
xchg
mov
movsl
call
aas
sbb
mov
cmp
pop
ljmp
cmp
jnp
pop
sub
enter
push
mov
inc
inc
fstpt
ljmp
adc
loop
dec
jne
daa
out
cmp
or
rcr
in
push
push
aaa
test
cld
stc
loopne
subb
add
xchg
movsb
adc
dec
test
cld
add
pop
addb
in
leave
adc
adc
jg
lods
mov
nop
adc
dec
mov
cmpsb
imulb
mov
cltd
cmp
push
add
fstpt
test
lds
sub
orb
clc
dec
add
jg
add
fcomip
pop
subl
push
add
xor
sbb
push
lea
mov
mov
mov
dec
and
pop
call
push
and
cs
and
pop
dec
and
sub
jg
in
or
mov
pop
push
mov
mov
sub
or
adc
inc
push
pushf
inc
es
das
cld
pop
in
out
fsubrl
movl
mov
cmp
sahf
xlat
inc
jnp
jp
xchg
call
jmp
scas
add
sbb
sahf
jmp
lds
sbb
idiv
sub
les
and
xchg
xlat
or
dec
movsb
sbb
inc
dec
xchg
filds
pop
jns
test
or
add
sub
add
pop
mov
daa
add
lea
mov
outsl
or
popa
out
push
or
cld
ljmp
std
bound
rcrl
in
dec
add
pop
lret
jmp
sbb
mov
pop
insl
sub
shl
jge
test
xchg
gs
sahf
and
mov
mov
sbb
sti
mov
sti
je
inc
xchg
pop
and
sub
fildl
add
pop
pop
jp
aad
xchg
pop
mov
bound
pop
icebp
insl
mov
cmovg
inc
stos
adc
rcl
adc
int
mov
pop
outsb
mov
jmp
inc
or
int
xchg
mov
sbb
and
push
scas
faddl
fbld
mov
xchg
dec
mov
rorl
inc
sbb
xchg
cltd
clc
pop
mov
subb
or
jo
es
sbb
pop
and
pop
sahf
lret
cmp
sbb
cmp
sub
jg
mov
and
pop
mov
add
dec
jo
sbb
js
mov
fmul
in
std
scas
add
push
cmpsl
jns
and
push
es
jae
ret
mov
pop
loopne
push
xor
fisubrl
insb
mov
in
jge
add
xchg
arpl
push
pop
in
iret
xchg
clc
lods
add
loopne
and
fbstp
cli
sbb
mov
inc
stos
sub
jge
mov
imul
add
popa
sub
pop
ror
push
push
orb
aad
jge
popa
sbb
mov
pop
sti
mov
inc
mov
hlt
test
sbb
and
cmpsl
push
in
jg
inc
ret
addl
pop
jnp
sbb
mov
cs
popf
leave
xor
lea
loop
mov
and
outsl
je
or
hlt
dec
fwait
cmp
dec
in
jl
lahf
call
fs
sub
cld
xchg
jbe
scas
jnp
call
popa
stc
push
add
sub
bound
or
sub
int3
sbb
mov
bound
add
xchg
add
fists
ss
loope
dec
mov
push
or
xchg
mov
dec
xchg
loope
mov
pop
cmc
enter
dec
dec
loope
and
shlb
arpl
push
lea
js
sub
filds
test
lea
decb
mov
and
subl
xchg
cmp
jmp
outsb
loop
paddsw
frstor
push
ss
nop
cwtl
icebp
enter
adc
push
add
cmp
sbb
inc
and
fs
fnstsw
push
pop
fstps
arpl
xchg
xor
nop
addr16
les
stc
or
mov
pop
das
jns
xor
loopne
xchg
and
cmp
bound
int
movsl
aas
aas
sub
addr16
cmp
shlb
js
pop
sti
dec
decl
insb
ret
xor
mov
mov
add
add
repz
pop
fsubrl
loopne
inc
test
adc
jo
jge
sub
notb
bndldx
aaa
pop
push
hlt
outsl
pop
clc
push
aad
push
lods
outsl
or
jno
xorl
mov
inc
inc
push
mov
lea
mov
sbb
enter
cmp
addr16
and
pop
stc
dec
push
inc
xchg
cld
dec
fdivr
mov
xchg
jecxz
loopne
jle
pop
pop
ljmp
mov
pop
nop
jmp
xchg
mov
outsl
mov
pop
test
shrb
filds
or
pop
add
inc
dec
outsb
inc
ds
idivb
call
jb
or
outsl
and
les
lock
adc
or
loope
and
call
ret
popa
ljmp
cmpb
inc
cmpsb
jle
test
adc
xchg
add
add
cmp
fistps
xor
fists
add
xchg
mov
mov
in
sbb
add
xchg
ret
add
stos
outsl
push
jmp
sarb
xor
aas
notb
push
xchg
notl
jg
inc
cs
fs
lret
fs
sbb
mov
push
adc
inc
pusha
sbb
mov
xor
cli
pusha
pusha
iret
js
cltd
mov
in
mov
mov
lcall
push
mov
pop
test
adc
jbe
add
lds
add
xchg
cld
sbb
lea
push
inc
sbb
addb
adc
mov
outsl
je
mov
gs
outsl
faddl
lods
mov
in
loopne
std
push
jns
cltd
test
adc
pop
push
sbb
add
or
cmc
jne
ja
arpl
test
jmp
ss
lock
xor
pop
push
mov
fidivs
sbb
push
sbb
sub
mov
imul
cmpsb
js
jp
cli
mov
or
xchg
out
repz
cli
and
sbb
dec
aaa
and
loopne
sbb
es
or
mov
fistpl
mov
xchg
lahf
insw
and
les
jmp
pusha
aas
in
jle
rorl
enter
adc
and
and
push
dec
stos
iret
mov
les
inc
inc
subb
and
push
jmp
lret
and
stos
dec
jnp
push
mov
pop
jbe
xchg
jmp
add
outsb
mov
je
fisubrl
mov
or
into
sub
mov
adc
inc
or
lds
inc
and
ret
adc
push
push
dec
xchg
gs
and
cmp
cmpsl
cs
sti
mov
stos
xchg
or
jae
mov
adc
push
push
pop
mov
stos
push
and
add
push
setno
lret
mov
lret
fst
bound
inc
rolb
cmpsb
cmc
push
sbb
andl
sbb
repnz
or
clc
jo
add
sbb
jnp
or
and
sahf
dec
dec
cmpsb
mov
dec
sar
push
dec
push
popa
xor
bound
xor
nop
mov
inc
cmpsb
mov
add
add
inc
jmp
decb
jbe
cs
push
xor
jns
push
mov
cmc
inc
and
aaa
clc
mov
sub
ds
into
dec
cmp
inc
lcall
jmp
mov
fdiv
lods
nop
fst
ret
loope
or
fisttpll
loope
ds
sarb
scas
lods
loope
fucomip
jno
jne
cltd
and
xchg
xor
dec
mov
xchg
outsl
xchg
mov
repnz
xor
adc
ds
leave
lock
inc
add
mov
hlt
xlat
jg
add
lods
jge
or
das
int
xchg
push
ss
rclb
scas
xorl
dec
rcl
inc
scas
mov
stos
int
mov
ljmp
dec
add
mov
cmp
mov
scas
pop
xor
jg
add
lret
iret
out
cwtl
fadd
mov
pop
lods
sbb
add
stos
inc
outsb
enter
and
out
push
scas
addb
push
in
push
push
push
cs
xchg
dec
pop
pop
cld
xlat
ficoml
mov
mov
test
inc
push
mov
cmpsb
mov
stos
dec
dec
popa
cmp
mov
adc
movsb
mov
dec
cli
negb
adc
loop
test
out
lock
sbb
sub
lock
cmp
adc
lcall
adc
or
and
pop
loope
sbb
data16
add
loopne
mov
jle
mov
mov
mov
in
sub
popa
or
in
aaa
pop
sbb
mov
and
cli
pop
insl
lods
mov
and
icebp
cmp
iret
ss
and
xor
mov
adc
jecxz
mov
sbb
pop
sub
cmp
xor
or
sbb
cmp
call
imul
fstp
sub
inc
push
pusha
or
inc
inc
int
xor
icebp
je
cmovl
cmp
icebp
pop
push
add
mov
andl
push
fsubrs
lahf
rcll
idivb
pop
mov
mov
inc
push
fists
lods
cmp
xchg
mov
mov
push
filds
jo
sub
add
mov
clc
mov
push
mov
mov
mov
lcall
lds
pushl
inc
testl
enter
or
pusha
loop
push
pop
cmpsb
dec
adc
push
pop
iret
aaa
fninit
xor
push
sub
dec
pusha
inc
and
pop
bound
imul
icebp
inc
lcall
rcll
pusha
imul
pusha
lret
mov
popa
or
stc
push
lock
push
in
adc
fdiv
cltd
roll
push
bound
ja
aaa
jge
sub
in
jp
ret
and
push
push
adc
adc
icebp
xchg
out
push
jl
adc
movsb
insb
adc
bound
outsb
sbb
fadds
mov
adc
aad
sub
insb
test
addb
lcall
popa
nop
mov
call
jns,pt
cld
inc
roll
and
test
call
and
xchg
mov
or
cmpsb
fxch
mov
clc
sub
insl
sub
xchg
ss
pushf
or
jecxz
adc
cmpsl
jecxz
pop
pop
call
xor
lcall
in
xchg
mov
inc
incb
aas
dec
loop
lds
inc
xor
mov
dec
das
je
jg
sub
arpl
jno
push
jne
pop
mov
pushl
call
cmp
cmp
pusha
roll
sbb
call
jmp
mov
les
fldl
inc
lret
mov
jle
push
fstpl
xchg
sar
mov
xchg
bound
lahf
sti
scas
shrb
mov
sbb
jle
ja
lea
jecxz
sbb
mov
cmc
lret
and
xchg
or
outsb
incl
mov
pop
and
ret
sub
fldt
pop
mov
push
incl
test
mov
xchg
aas
jge
outsl
dec
dec
sub
movb
mov
pop
in
jl
jmp
jp
fldt
adc
mov
das
pop
js
nop
lahf
mov
push
call
xor
divb
jle
mov
cld
outsb
shlb
orb
and
sub
cmp
andl
fcmovnb
push
loopne
jmp
xchg
lcall
push
pop
jp
bound
xor
adc
add
iret
or
popf
pushf
in
inc
fsts
pop
arpl
and
adc
fldt
xor
aas
and
pop
sub
xor
push
pop
add
cmp
pushf
leave
cmpsb
add
pop
repz
mov
jbe
movsl
cmp
push
or
mov
add
call
mov
xor
std
aam
and
outsl
lds
mov
adc
push
pop
nop
rolb
mov
aas
or
push
mov
mov
jecxz
push
jl
cmp
dec
push
pop
or
sbb
pop
xchg
cld
sbb
push
mov
jne
mov
pop
add
sub
mov
dec
push
es
xor
data16
mov
sub
mull
dec
xlat
push
xchg
test
lret
or
and
dec
sbb
jmp
jl
int3
call
test
cmp
fs
in
sbb
cmpsl
clc
scas
sub
sahf
and
icebp
lcall
sbb
shlb
mulb
adc
cmp
or
shll
ja
hlt
inc
lock
inc
dec
dec
icebp
jge
pop
mov
fs
jp
sub
clc
adc
iret
mov
enter
mov
gs
or
ds
je
std
sbb
mov
or
xchg
gs
daa
daa
xor
mov
sbb
mov
cmc
popa
or
push
not
rorb
mov
push
das
sub
pop
std
rorl
or
jbe,pt
inc
div
add
lock
jle
mov
mov
faddl
push
out
fwait
call
int
loopne
mov
cmp
das
hlt
xchg
xor
rorb
xchg
shlb
cmp
in
mov
inc
mov
nop
jle
pop
push
jmp
mov
cmp
out
cld
pushl
popf
fcompl
jl
call
inc
mov
pop
repnz
add
rcll
xchg
pop
push
ljmp
mov
xchg
sbb
pop
xor
push
cwtl
jb
sub
inc
ret
mov
int
hlt
sub
test
cmpsl
xchg
xor
fwait
push
mov
mov
or
or
outsb
out
rcrl
shrl
jle
lods
and
into
out
xchg
cmc
aaa
cmp
mov
pop
xchg
mov
test
sbb
mov
dec
cmp
jge
shl
lock
fidivl
scas
das
adc
jae
fistl
add
rclb
sbb
test
or
fcomip
lods
adc
mov
clc
lods
repnz
or
add
insl
cld
jmp
xor
loope
xchg
aaa
xchg
jbe
lods
inc
add
adc
in
jb
aam
push
dec
push
mov
add
xchg
les
mov
fsubl
dec
sti
pusha
sub
inc
mov
mov
dec
cltd
adc
leave
mov
mov
or
or
add
fiadds
mov
mov
icebp
pushf
daa
cmpl
xchg
xor
pop
push
fistpll
outsl
jnp
jl
sub
mov
and
testb
push
out
sub
cmp
jno
test
cli
fstpl
push
add
mov
dec
add
ffree
scas
shrb
movsl
lcall
out
adc
push
xchg
scas
and
es
test
or
out
add
fwait
push
test
mov
add
or
call
dec
mov
jg
sub
je
loope
int3
xchg
xor
cmpsb
push
fadd
and
sub
decl
mov
test
sbb
lahf
dec
lcall
ror
mov
outsl
in
add
idivl
dec
push
mov
mov
inc
lods
fs
push
push
sub
inc
outsl
std
sbb
cmp
mov
fsubs
adc
lds
mov
and
pop
mov
inc
pop
mov
into
addr16
filds
and
cli
cmp
mov
xor
pop
test
enter
or
in
inc
pop
jns
adc
and
int
std
mov
xor
popf
les
mov
loope
fildl
in
jnp
dec
insb
fneni(8087
jle
cld
incl
or
out
cs
mov
lods
repz
shl
sub
jmp
mov
and
loope
mov
aam
sbb
fistpll
jne
mov
test
xchg
mov
incl
out
movl
mov
mov
pop
shlb
inc
pushf
loop
andl
push
outsb
aad
sbb
scas
mov
pop
fcoms
adc
dec
jp
push
inc
sbb
leave
adc
xchg
dec
adc
dec
jmp
add
sbb
dec
push
xor
ljmp
cmpb
ljmp
sbb
outsb
adc
movsl
push
sub
push
and
loopne
clc
jge,pt
pusha
loope
lcall
test
lock
mov
inc
push
lock
adc
outsl
in
jg
mov
jne
sub
js
mull
fstps
pop
call
in
outsl
and
cmp
xor
mov
sbb
and
jmp
dec
add
shlb
icebp
xor
lds
iret
jle
es
fistpll
and
outsl
in
or
fldl
dec
ret
lea
lret
pushf
loopne
cmp
xchg
outsb
es
repz
or
cmp
mov
or
pop
mov
pop
add
mov
sahf
and
adc
inc
inc
pop
arpl
bound
aaa
call
aad
movsl
jle
test
jne
ror
cmp
mov
cmp
push
push
cs
cmp
movsb
popa
lahf
add
sbb
jbe
loopne
test
push
sbb
jno
pusha
dec
sbb
jno
jp
adc
outsl
lret
cmp
int
test
xor
insb
cmp
inc
enter
call
fdivr
mov
ret
fidivrl
iret
dec
push
push
mov
mov
adc
sbb
xchg
sahf
ds
mov
add
rorb
inc
push
cmp
outsb
inc
pop
orb
xor
in
cmp
push
mov
add
push
nop
mov
out
sahf
fnstsw
sub
pop
dec
mov
out
out
xchg
scas
mov
push
outsb
and
sub
adc
in
jne
call
adcb
dec
jne
cmp
imul
mov
shll
imul
out
xchg
sub
ja
ret
pop
push
sub
sbb
dec
es
fisttpl
repz
cli
sbb
jle
jno
mov
pop
stos
mov
mov
int
pop
ds
jne
fcmovbe
and
aaa
movsb
rcrl
xchg
jg
pushl
mov
mov
sub
push
sbb
clc
loop
push
or
outsb
sbb
and
popf
pop
inc
pop
jle
xchg
adc
and
push
popa
pop
jp
in
sub
push
add
jmp
sbb
sahf
xlat
lds
pop
inc
insb
dec
cltd
mov
adc
cmp
and
popf
dec
jo
mov
push
in
adc
add
pop
push
aam
mov
cmc
insl
sbb
push
lds
cmp
add
je
pop
btr
mov
push
and
lahf
or
adcl
xchg
loopne
outsl
into
leave
add
into
aaa
add
das
lock
mov
imul
push
cmc
aam
and
xchg
outsl
mov
jle
add
test
clc
adc
fidivs
jecxz
fisttpl
push
jbe
push
jg
loop
cmp
gs
push
je
decl
icebp
daa
clc
popf
orb
push
lock
jl
add
pop
cltd
xor
ret
stos
push
negb
dec
sub
cld
fimull
sbb
out
outsl
not
cmc
shrl
xlat
lahf
push
data16
addb
mov
jo
decb
stos
xchg
or
mov
dec
lcall
sub
jbe
fisttpl
adc
mov
mov
inc
adc
or
idiv
mov
cmpsl
fs
push
or
fstps
lods
add
out
xchg
inc
xchg
mov
pop
adcl
lcall
loope
cmp
mov
mov
sbb
sbb
sbb
addr16
mov
push
adc
negb
mov
es
rol
loope
sbbl
mov
js
mov
dec
sub
ja
mov
add
pop
adc
push
mov
insl
jae
int3
es
hlt
lods
test
mov
cld
shlb
xchg
sub
dec
ljmp
cs
jecxz
cmp
pop
popa
pop
sub
push
mov
jns
movsb
das
pop
add
push
fucomip
or
repnz
cmp
fs
xlat
mov
inc
subb
inc
fcoml
shrl
dec
ja
add
lea
jl
mov
test
aad
mov
cmpsl
arpl
lock
ret
or
fstl
imul
insl
adc
inc
sbb
popa
and
aas
pushl
push
jl
jmp
mov
lock
adc
movsb
fnstsw
fbld
mov
sub
push
out
dec
xchg
test
test
mov
or
not
flds
popf
cmp
and
pop
testb
cs
mov
push
addr16
loopne
mov
dec
divb
pop
test
xchg
push
adc
cmc
mov
insb
cltd
push
jnp
and
pop
decb
cmp
mov
xor
outsb
jp
and
das
das
xchg
push
jg
stos
lods
sahf
sub
xchg
mov
cltd
jnp
fcmovnb
fistl
fistpl
clc
mov
sbb
insb
test
xorl
in
xor
sub
cld
adc
das
stos
ljmp
or
aaa
mov
rcrl
cmpl
sbb
sahf
sbb
fcmovu
push
mov
cmpsl
mov
test
cmp
mov
xchg
mov
ss
push
mov
pusha
call
dec
adc
test
pushf
lods
icebp
xchg
sub
or
inc
and
lock
sub
test
inc
push
and
sub
sbb
nop
pop
push
idiv
push
sbb
jo
xor
adc
jg
ret
inc
rorb
mov
das
mov
daa
xor
mov
stos
ret
sbb
imul
das
push
sub
daa
sub
lahf
repnz
adc
decl
pop
mov
in
xor
aas
mov
mov
mov
cmpsb
jp
adc
push
jle
int
fs
popa
push
lock
cltd
mov
mov
mov
push
imul
dec
mov
inc
push
sbb
pop
sbb
test
cmp
fsubrl
push
adc
or
cwtl
mov
ljmp
lahf
push
pushf
push
mov
inc
movsl
ja
xchg
and
decl
mov
insb
xchg
xchg
js
adc
or
mov
fbld
subb
pop
mov
cmpsb
cltd
push
xor
sbb
add
jl
mov
cli
out
pop
daa
iret
mov
das
dec
pusha
xorb
inc
cwtl
aad
xchg
jge
pop
mov
cmp
sub
mov
into
stc
icebp
je,pn
mov
dec
lock
sbb
push
fldcw
pushf
mov
sbb
pop
loopne
cld
jecxz
mov
negb
add
add
rcrl
push
adc
mov
insl
push
dec
sti
mov
cmpsb
mov
jle
clc
sbb
loop
fildll
mov
push
imul
icebp
mov
mov
adc
outsl
xchg
cmp
sub
adc
inc
sbb
push
pop
adc
jo
mov
and
stos
popf
stc
ret
fldenv
dec
ja
and
lret
pop
jg
repnz
jae
and
fiadds
pushl
lea
dec
jl
xor
mov
test
push
xchg
sbb
pusha
mov
test
pop
xor
lods
push
mov
int3
clc
push
or
push
mov
lods
test
test
mov
ljmp
jp
sbb
add
and
mov
xchg
mov
leave
rcrl
jns
jle
ret
inc
in
fcmovnu
inc
adc
and
xchg
mov
jmp
stc
push
jno
insb
xchg
addr16
xor
nop
cltd
lods
insb
outsl
push
cwtl
in
push
outsb
inc
and
insl
repz
outsb
cld
pop
pop
sbb
imul
dec
or
loop
nop
rdpmc
lock
cmc
jmp
daa
xor
lods
imul
sbb
fimull
scas
nopl
inc
outsl
je
pusha
mov
add
inc
insl
mov
subb
rol
fisttpll
sub
push
in
push
and
adc
ja
mov
sub
inc
in
insl
xchg
outsb
cmp
in
mov
nop
stos
jge
push
inc
add
int3
add
sti
or
and
adcb
add
mov
test
cmp
inc
rcrl
mov
cmp
js
sub
xchg
dec
shl
popa
jg
or
push
notb
lahf
xor
push
or
aam
cwtl
cmp
adc
inc
fistps
sub
scas
adc
outsl
jle
aas
xlat
insl
stos
or
mov
push
movsl
test
stos
sub
and
mov
mov
movsb
test
pop
repz
xor
leave
sub
inc
pop
seta
pop
mov
clc
inc
clc
add
mov
nop
fnsave
push
fldenv
mov
add
fs
movsb
addr16
adc
mov
js
mov
jo
jecxz
mov
lcall
sbb
adc
or
lret
dec
push
jmp
lret
call
enter
adc
pop
push
les
cld
gs
iret
jb
aad
push
loopne
in
mov
add
test
jbe
mov
cld
jne
adc
icebp
cwtl
dec
std
sub
add
addr16
mov
pop
push
cmp
arpl
mov
or
mov
decb
orb
call
fwait
mov
wbinvd
inc
lds
fucom
inc
jno
mov
icebp
pop
mov
ret
rcrb
scas
add
mov
out
decl
out
popa
mov
xchg
inc
andl
lds
testl
mov
das
cmc
mov
xchg
pop
je
insl
out
or
incb
inc
dec
mov
ljmp
xchg
lods
incb
les
sarl
aad
or
mov
sub
cmpsl
sub
rorl
aas
add
inc
and
pop
cltd
pushf
aas
xchg
and
outsl
fmuls
lcall
mov
mov
or
rorb
int
rcrb
sbbb
popa
out
fdiv
dec
dec
cmp
arpl
mov
dec
repnz
lcall
shrl
cld
jmp
or
and
movsb
lcall
cli
lods
mov
or
adc
out
add
xchg
out
mov
or
test
lcall
mov
cmpsb
lahf
dec
mov
xchg
fbld
sbb
push
fs
and
enter
and
sbb
and
mov
lds
sbb
jle
or
xchg
adc
pop
ljmp
xor
sub
cmpsl
push
cmpsb
mov
int
or
ret
mov
and
insl
outsl
sar
movsl
inc
add
push
jge
pop
test
mulb
mov
mov
add
fldl
sti
mov
pushf
push
in
pop
js
dec
ljmp
pop
fsubp
lcall
jg
or
mov
push
jns
fdivs
hlt
pop
mov
in
xor
push
scas
sbb
push
in
mov
pop
lods
scas
mov
test
fimuls
push
insb
mov
mov
sub
and
pop
cmp
and
dec
and
add
shl
push
mov
mov
popa
xchg
jecxz
jns
pushf
or
xchg
jecxz
aaa
sbb
add
rcll
shl
jmp
bound
jl
ljmp
mov
ljmp
pushl
mov
les
push
ds
or
push
or
outsb
mov
out
ljmp
js
sbb
loop
adc
test
jns
lcall
int3
mov
and
or
roll
pop
dec
push
incb
xchg
daa
cmp
loopne
xchg
and
cmp
mov
rcrl
jmp
jecxz
cmp
mov
push
adc
cs
inc
pushf
fs
mov
fwait
jp
bound
sahf
call
jns
mov
jmp
orb
pop
test
inc
das
xor
xor
push
sbbl
cmp
dec
aam
pushf
popf
int
ljmp
insl
add
xchg
xchg
icebp
clc
out
test
aam
inc
fs
xlat
test
mov
fmuls
imul
cmp
push
lock
mov
loope
mov
das
sbb
adc
cmp
push
lods
push
mov
aas
and
or
xchg
add
popa
mov
fistps
and
lret
inc
cwtl
cmp
pop
clc
push
push
js
add
cmpsb
test
je
fidivrl
inc
insb
test
aas
mov
popa
das
ret
jle
popa
xchg
repz
dec
das
sbb
movsl
pusha
pop
and
aas
mov
and
inc
dec
xchg
sbb
cmp
xchg
lcall
fsubrs
dec
push
popf
ss
push
xchg
aaa
incl
mov
pop
and
scas
mov
xor
cli
dec
add
adc
dec
or
popf
popf
mov
out
jnp
mov
lock
gs
xchg
jg
sub
test
mov
notl
mov
inc
dec
out
jo
adc
sti
jle
jg
xchg
or
movsl
ljmp
test
addr16
fwait
js
mov
jbe
mov
or
or
push
xor
les
lea
adc
adc
pop
cmp
xchg
das
and
lret
and
mov
dec
ret
out
lret
jp
add
and
out
out
popa
xor
das
cmpsb
int
nop
or
mov
mov
in
pusha
jl
ss
into
ret
pop
shlb
pop
shrl
xchg
jbe
out
dec
jecxz
adc
test
sub
out
push
test
pop
and
sarl
adc
subl
adc
and
aad
in
in
rclb
mov
fildll
repz
xchg
mov
add
lock
add
pop
mov
push
push
jge
test
pop
fists
ds
jecxz
mov
fs
sub
jns
das
jo
stc
xor
stc
adc
ds
movl
les
std
and
aad
inc
xor
jp
pop
notb
test
les
add
in
add
dec
xchg
push
push
jecxz
test
pop
arpl
std
fwait
mov
sub
insb
clc
mov
pusha
pop
xchg
imul
inc
lea
mov
out
dec
fbld
out
test
insb
in
inc
lock
icebp
test
pushf
movsl
add
and
mov
dec
or
testl
push
and
scas
jmp
cld
fldt
cltd
cmpl
js
nop
bound
mov
adc
gs
adc
decl
test
inc
or
xor
sti
cmp
mov
stc
test
jg
mov
loopne
pop
daa
sub
aad
dec
outsl
lock
icebp
mov
sbb
cld
rcr
clc
jmp
push
xchg
jne
popl
scas
xor
mov
pop
pop
and
cmpsb
popl
pop
cld
movsl
sbb
and
add
or
outsl
pop
fdivrs
adc
mov
adc
clc
mov
outsb
add
mov
inc
loope
shl
das
lock
dec
int3
cmp
adc
xor
cmpb
das
and
push
jp
je
lock
and
xchg
pop
inc
pushf
mov
xlat
pop
ljmp
out
lock
in
pop
mov
lds
lock
subl
adc
ljmp
and
mov
lds
push
or
sbb
movsl
sbb
pop
and
xchg
call
cmpsb
in
adc
test
dec
jg
out
mov
or
addl
xchg
das
cld
aaa
clc
xchg
pop
loopne
pop
incb
mov
xor
test
xlat
dec
add
mov
xchg
inc
insl
jge
sbb
mov
mov
adc
arpl
add
lods
dec
push
scas
out
enter
mov
fimuls
lahf
jp
jmp
cmc
xor
call
inc
mov
push
ds
cmp
mov
testb
jp
sti
dec
inc
leave
push
hlt
or
rol
shll
xchg
inc
or
jmp
and
and
jmp
nop
push
decl
or
xor
adcb
cmpsb
jns
push
sbb
mov
data16
and
push
jne
sub
lods
insl
adc
add
mov
push
ds
aas
jne
jg
push
mov
add
rcrb
out
xchg
jmp
flds
and
and
xor
arpl
pop
incb
xor
rcrb
add
or
sbb
mov
mov
je
or
test
jmp
repnz
sti
add
jnp
outsb
mov
push
mov
xchg
movsl
add
adcb
int3
mov
xchg
fmul
into
rolb
std
mov
push
in
addb
inc
popa
push
mov
ret
inc
sbb
push
add
xlat
dec
in
mov
ljmp
xor
pop
loop
lea
in
cs
or
ja
mov
xchg
xor
push
and
outsl
das
xchg
sbb
pop
sbb
cmp
cli
ret
into
inc
jno
cmpl
lods
scas
pop
xlat
aam
fisttps
std
xchg
adc
or
and
push
mov
bound
icebp
test
mov
pushf
adc
ret
pusha
rcr
aaa
cmc
mov
mov
or
dec
sub
idiv
fildll
push
mov
in
adc
ret
scas
cmpsl
mov
mov
mov
sbb
xor
outsl
out
pusha
lret
add
aad
fwait
and
or
and
dec
sti
out
lcall
cld
sti
inc
stos
add
lret
jno
int3
fldenv
js
sbb
pop
lcall
inc
add
push
push
or
dec
mov
jg
imul
or
cmpsb
cmp
mov
sbb
mov
adc
cld
dec
shlb
jmp
cmp
fiaddl
or
mov
rorl
sarl
mov
mov
filds
and
and
jg
pop
rorb
outsl
jo
adc
es
fdivr
pop
jl
jle
inc
push
cmp
cmp
adc
inc
leave
hlt
sbbb
sar
call
jbe
js
loope
gs
mov
in
icebp
sbb
es
popa
dec
es
and
sbb
pushl
mov
xor
xlat
jno
aad
test
mov
das
adc
cmpsb
aad
lods
jp
repnz
jp
adc
dec
jmp
ja
call
add
inc
dec
dec
push
arpl
mov
loope
movsl
or
sub
mov
jle
ja
push
mov
push
out
and
jne
scas
xor
jl
xchg
loopne
dec
push
or
mov
cld
pop
outsl
mov
ret
pop
push
ja
dec
jnp
sbb
sub
nop
dec
shlb
leave
je
jns
sti
or
xor
ret
mov
int3
jp
pop
or
push
out
pusha
enter
mov
xlat
mov
fstpt
xchg
mov
pop
fdivs
fdivrs
je
add
into
data16
mov
ljmp
sbb
movsl
or
pop
test
ja
and
jg
push
push
rorb
adc
rorb
add
mov
jne
insb
sub
inc
cmp
dec
adc
mov
out
in
sbb
mov
mov
mov
and
pop
mov
adc
clc
ljmp
adc
adc
movsl
add
pusha
mov
mov
jbe
and
loop
pop
or
incb
mov
mov
test
cli
out
subb
cmp
sarl
decb
jmp
aam
pop
add
push
push
mov
rclb
call
decl
mov
outsb
jmp
lock
gs
or
mov
sub
shrb
mov
loop
sub
sahf
leave
aas
jns
mov
adc
add
aad
inc
and
mov
out
rorl
pop
lds
dec
ret
push
push
mov
or
das
xor
mov
lds
lcall
cmpsb
ljmp
lods
pop
lock
mov
mov
jge
or
call
pushf
sbb
lds
lret
adc
fs
cmp
pop
clc
icebp
sbb
test
jmp
pop
leave
xchg
xor
and
fistpll
push
mov
xchg
fdivl
fistpll
pop
inc
and
xchg
notb
test
inc
pop
pusha
imul
pop
xchg
ffree
adc
decl
repz
or
shrb
pop
dec
cmp
jnp
mov
push
nop
int3
sub
cmp
push
fstpt
icebp
or
xor
mov
cmp
push
lret
sbb
push
mov
outsl
push
fcoms
enter
imul
neg
inc
mov
test
popa
loope
sbb
ret
rorb
je
push
pushf
or
ret
aaa
loop
sub
aad
mov
or
pushl
jne
and
and
jecxz
psrld
in
push
rorl
xor
pushf
add
leave
repnz
mov
xchg
push
and
pop
arpl
mov
scas
sub
orb
push
mov
clc
aam
pop
dec
xchg
inc
lahf
outsl
rcrb
mov
jb
iret
rorb
push
cs
push
xor
xor
in
mov
cld
cmp
or
clc
ja
repnz
mov
and
push
sbb
dec
dec
sbb
popf
jo
pop
mov
add
inc
cs
icebp
cmp
fstpt
scas
ret
enter
xchg
sbb
push
sub
addl
xor
lea
sbb
dec
dec
sbb
mov
loop
cli
jp
xor
cmp
lahf
adc
cmp
jo
ljmp
sbb
adc
mov
push
cmp
mov
mov
lahf
daa
push
mov
out
and
mov
mov
xor
sub
les
xchg
xchg
xor
mov
movsl
inc
pop
lods
roll
fists
ja
mov
les
or
fldcw
scas
enter
addb
or
mov
repnz
rorl
clc
cmp
and
mov
mov
pop
fdivl
mov
ja
jl
lret
adc
push
sti
out
pusha
pop
cmp
test
aaa
push
push
pop
je
mov
mov
mov
or
nop
add
shlb
imul
sahf
mov
xor
or
insb
mov
scas
push
cmp
stos
xchg
sub
push
aad
in
pop
xorb
clc
fisttps
hlt
mov
popfw
add
lahf
fists
insb
je
ror
enter
test
inc
sbb
lahf
in
call
and
movsl
mov
repz
les
in
sub
pop
and
andb
aam
cmpsb
cmc
cmp
call
shll
inc
mov
cmp
inc
mov
cld
mov
inc
mov
mov
mov
int
jb
sbb
inc
cld
sbb
pop
outsl
xchg
pop
fsubrp
sbbb
jp
pop
inc
push
out
or
scas
fisubrl
dec
pop
xchg
cwtl
sbb
push
mov
pop
aas
xor
sbb
ljmp
or
jecxz
push
mov
mov
pop
xor
imul
push
mov
subl
jbe
xor
popf
dec
lahf
sub
inc
outsl
adc
fistl
xor
add
mov
pop
push
xchg
pop
cs
mov
cmc
xchg
outsl
mov
dec
pusha
pusha
orl
cwtl
iret
push
mov
mov
push
xchg
lock
lahf
test
pop
icebp
sbb
jp
inc
sbb
sbb
in
or
out
push
push
cs
and
pop
call
test
push
fidivrs
shl
cld
push
jns
mov
das
push
pop
cli
jne
inc
cmp
bound
cmp
movsb
cli
cmp
dec
les
cmp
adc
shll
push
adc
xchg
jl
in
icebp
sub
outsb
in
call
dec
mov
outsl
cli
roll
pop
and
and
jp
lods
stos
ret
popf
mov
incl
cmpsb
inc
cltd
mov
dec
xor
jp
decb
out
add
push
pushf
addb
dec
push
cwtl
add
je
fsubrs
sub
and
clc
jg
or
add
loopne
mov
loope
push
hlt
xchg
int3
lock
lcall
inc
shrb
jmp
lea
pop
adc
sub
mov
jns
iret
daa
scas
dec
cld
sbb
lock
and
cmpsl
xlat
incl
fistps
js
mov
pop
ret
dec
mov
dec
jge
mov
adc
push
xor
mov
sub
imul
mov
cmpl
ljmp
jae
and
push
das
std
ljmp
mov
push
xor
and
popf
sbb
inc
pop
adc
adc
sbb
mov
cmp
lcall
mov
loop
adc
inc
sbb
xchg
and
pop
mov
loop
mov
xor
or
lret
push
fmull
std
ret
push
inc
jae
idivl
cs
sti
movsl
outsb
ja
mov
push
or
jb
es
lods
dec
lea
inc
push
repnz
shrl
in
xchg
loope
std
adc
sbbb
stc
cmp
fidivrs
add
hlt
out
xor
pop
stos
mov
into
adc
add
dec
fisttps
data16
mov
call
jl
bswap
cmp
scas
mov
das
std
or
pop
push
lock
rcll
ficompl
adc
dec
xchg
dec
dec
cld
jg
call
push
std
pop
dec
sub
sbb
dec
inc
inc
lret
flds
aas
loope
push
or
nop
fiadds
les
push
mov
fistps
rcrb
cli
lcall
dec
in
cmc
daa
in
cwtl
xchg
adc
pop
cmp
pmulhuw
sti
inc
test
into
push
mov
mov
jge
fs
mov
mov
mov
lcall
lock
icebp
jecxz
jae
fucomp
and
btr
mov
shl
cld
adcb
popf
call
push
sub
xor
fidivl
jns
js
mov
xor
mov
pop
mov
mov
mov
dec
dec
fcomi
lods
addr16
pusha
inc
loope
add
mov
and
or
icebp
lods
test
mov
loopne
outsl
scas
fs
jmp
pop
inc
stos
sbb
sti
or
or
out
test
sete
sbb
xchg
dec
jg
nop
jg
mov
add
andb
mov
xlat
xchg
push
xchg
popf
adc
outsb
push
cmpb
mov
imul
es
dec
inc
bound
lods
ljmp
xor
pusha
flds
call
mov
test
inc
cld
pop
mov
lock
add
and
fwait
cli
dec
xchg
sbb
xor
int
cmp
mov
add
and
mov
pop
pop
adc
cs
mov
xchg
push
cmpsb
sub
orb
push
push
push
jp
xor
dec
es
outsl
inc
jns
cwtl
cmp
jns
lahf
shll
aaa
lahf
cmc
and
fs
xor
outsl
lods
cli
mov
daa
mov
insl
inc
pushl
sub
ja
or
xchg
adc
add
xchg
and
das
cmp
mov
call
in
es
add
cld
out
or
iret
mov
test
xor
scas
call
cmpsb
push
sub
fildll
add
imull
or
or
int3
mov
je
out
decl
test
cmpb
mov
insb
adc
outsl
pusha
leave
add
cwtl
shrl
mov
shl
or
xchg
cltd
push
push
mov
shrb
push
inc
adcl
es
pop
pop
aaa
sub
je
sti
add
mov
aad
mov
xchg
xor
adc
add
insb
ljmp
test
xor
sti
jg
sub
inc
fldenv
stc
addb
out
cmpsb
shll
mov
or
shrl
pop
mov
jae
in
fistpl
scas
clc
outsl
mov
rcll
mov
and
and
sbb
fucomp
icebp
loop
jns
dec
sub
mov
xchg
daa
add
push
add
mov
inc
mov
dec
stos
push
cld
mov
xchg
lahf
sub
call
jg
fldt
mov
adc
lret
or
jg
std
mov
pushf
push
xchg
mov
mov
test
cld
push
add
popf
push
lret
into
cli
sub
dec
cmpsb
insl
pop
xchg
mov
jmp
mov
stos
mov
gs
les
lods
or
and
push
shll
popf
add
mov
inc
sub
lcall
or
sbb
add
jbe
push
adc
push
cmpsb
fistpll
pop
push
in
lret
adc
and
dec
das
std
adc
arpl
into
imul
xchg
mov
scas
mov
mov
xchg
inc
mov
jno
incl
pop
jecxz
data16
jg
add
arpl
sahf
je
pop
sbb
pusha
push
fadd
jae
jmp
inc
subl
cltd
mov
push
std
add
iret
cmp
lds
out
jmp
outsl
ljmp
test
lods
pop
mov
fildll
xchg
mov
aaa
add
sub
cmpsb
stc
xchg
and
mov
cli
push
dec
push
es
cld
jp
fsubrs
outsl
xor
pop
jo
mov
pop
int3
mov
lock
dec
mov
test
sbb
stos
loop
push
pop
xlat
sub
sarl
jl
mov
std
lea
sub
dec
enter
bound
mov
inc
lods
add
and
xchg
insl
cld
pop
sbb
ds
cmp
inc
xor
decl
ja
sbbl
imul
mov
pop
insb
arpl
cmpl
jnp
popf
dec
fsubrs
pop
push
cmp
popa
scas
mov
cmp
pop
faddl
ret
mov
fcmovbe
dec
outsb
push
std
fistl
cmp
adc
inc
and
mov
sbb
adc
cmp
jmp
adc
ljmp
hlt
incl
pusha
dec
lret
mov
scas
sbb
jp
mov
jb
test
subb
int
sub
sbb
lods
aas
dec
and
rol
test
cmpsb
xor
call
mov
or
xchg
mov
mov
or
dec
or
xchg
stos
cmpsb
mov
mov
jno
push
out
aam
or
sti
fcmovnb
and
xchg
jns
add
loopne
loope
fisttpl
sub
lcall
or
mov
xchg
cmp
push
dec
cmpsb
pusha
stc
pop
aam
lret
push
scas
and
cmp
test
dec
in
inc
jnp
orb
in
das
pop
adc
out
ret
mov
add
jo
pop
mov
dec
nop
inc
jp
and
pop
mov
movsb
jecxz
inc
adc
fdivrs
scas
mov
sbb
aas
push
mov
scas
mov
ret
fstl
sub
fcmovne
mov
test
mov
push
mov
jnp
cld
jmp
mov
ret
add
in
add
sbb
jbe
sub
xor
pop
lods
jns
mov
add
outsl
pop
mov
int3
jbe
fildll
mov
sub
and
ret
push
push
adc
jb
jae
inc
pop
fsub
adc
xor
mov
push
cli
xchg
dec
ret
lock
movsl
lods
subb
enter
pop
insl
add
hlt
rcrb
stos
scas
filds
dec
inc
popl
rcr
cmp
mov
mov
mov
jge
and
mov
ffree
adc
add
lcall
jl
ja
push
or
pop
dec
sbbb
sbb
std
shl
sbb
les
das
fildll
inc
dec
xor
arpl
xorb
adc
mov
icebp
enter
bound
scas
test
sysexit
scas
mov
inc
aas
lcall
sub
mov
and
mov
loop
adcb
cwtl
icebp
lahf
cwtl
lock
das
xchg
lea
push
insb
and
outsb
aaa
mov
push
pop
sub
aam
push
jmp
dec
or
pushf
loope
pop
leave
aam
pop
xchg
push
nop
pushf
add
out
daa
jp
mov
or
je
mov
cmp
mov
add
fistpl
pop
sub
mov
mov
frstor
jge
in
jmp
es
sbb
mov
ret
push
mov
and
adc
or
mov
or
sub
sbb
sarl
mov
ja
xchg
insl
nop
test
outsl
mov
dec
mov
cld
mov
hlt
mov
movsl
cmp
jmp
imul
mov
dec
sub
cmp
arpl
sub
movups
push
pop
xchg
jecxz
pop
mov
inc
clc
inc
cld
push
stc
js
repz
xlat
and
and
dec
fistpll
mov
movsl
jg
shll
adc
cmpsb
sbb
or
jg
imul
jne
or
roll
mov
pop
fcoms
ret
adc
cli
xor
pop
jbe
pop
adc
mov
inc
sti
or
sub
and
mov
daa
jg
test
aam
je
or
inc
insl
in
cmp
sbb
popf
andl
lods
sub
mov
shlb
and
das
fadd
mov
cmp
out
adc
lock
mov
sbb
lea
dec
std
push
push
mov
arpl
pop
sbb
push
push
rcrb
mov
lahf
scas
mov
sbb
aad
inc
aaa
push
mov
mov
cltd
imul
add
insb
cmpb
or
cli
pop
mov
jecxz
cmp
js
sbb
outsl
pop
int
or
mov
cmp
cld
add
mov
gs
movsb
imul
xor
dec
imul
pop
lock
cli
push
push
xor
push
inc
and
loopne
and
adc
orb
daa
fs
outsl
insb
fnstsw
stc
mov
add
insl
es
dec
cmp
or
or
sub
or
push
mov
jnp
scas
or
bound
clc
iret
dec
add
add
cmp
mov
clc
outsl
mov
push
addr16
cmp
inc
cmp
push
xchg
push
inc
sub
add
insl
inc
rorl
das
jnp
mov
push
ret
sar
push
repz
mov
jbe
outsb
inc
adc
mov
jns
add
mov
sbb
aas
insl
cmc
mov
out
testl
mov
push
mov
add
in
jle
aad
jmp
sbb
incb
push
test
scas
test
cmp
xchg
pop
sbb
xchg
enter
je
lcall
fisubl
mov
cs
mov
sub
stc
push
aaa
dec
test
cs
cld
add
mov
jo
pop
in
jl
fmull
adc
sti
dec
pop
add
mov
insb
mov
ret
and
mov
and
mov
decb
dec
cld
mov
insb
jl
aaa
jb
mov
mov
sti
dec
lea
pop
inc
notb
xor
aas
xor
pushf
mov
adc
mov
out
xchg
jnp
inc
push
sti
lret
lods
pop
jl
mov
rorb
sub
std
adcb
popa
mov
inc
or
ss
loope
inc
and
rcll
mov
int
mov
jg
lock
insl
and
jno
lcall
or
imul
jg
or
add
xchg
rcrb
mov
shlb
xor
inc
rcl
into
xchg
jb
cmp
mov
ja
xor
in
or
cmp
jg
outsl
mov
je
add
adc
jp
inc
mov
test
cmp
xchg
cli
daa
fildl
fisubrs
cmp
ljmp
shrb
xchg
adc
sbbb
add
mov
ja
das
sub
fcom
jnp
adc
add
push
outsb
mov
mov
add
cmpl
mov
pop
adc
adc
out
cmp
ljmp
insb
jg
popa
and
push
push
jbe
pop
rorl
or
mov
xchg
mov
push
prefetcht2
mov
sbbl
jns
fucomi
or
push
add
push
pop
outsb
add
mov
cmpsb
xchg
in
inc
xchg
dec
sbb
sub
xor
sub
movsb
mov
arpl
js
fdivrp
es
cwtl
sub
cmpsl
dec
cmpsb
inc
or
pushl
in
test
inc
mov
or
mov
outsl
call
fwait
outsb
ret
or
call
pushf
movsl
pop
inc
jo
fiaddl
mov
ja
adc
popf
sbb
adc
and
adc
mov
loopne
scas
add
aam
push
inc
xchg
add
fsts
test
iret
adc
repz
and
ret
xor
adc
jp
push
inc
mov
mov
fs
pop
stos
scas
mov
xchg
add
andl
mov
and
std
mov
mov
addl
inc
inc
shr
add
call
outsl
inc
sbb
movsl
imul
test
andps
adc
ret
sub
cmpsl
kortestw
in
jbe
cmp
push
and
inc
xor
sbb
icebp
movsl
fsubl
mov
sub
adc
sub
std
mov
mov
mov
addr16
xor
xchg
inc
loope
jnp
out
ljmp
and
bsr
jge
std
repz
mov
dec
gs
fcmovu
push
bnd
pop
test
add
jp
std
push
pop
and
push
cmp
or
lret
cmp
lret
mov
or
inc
jne,pn
repnz
push
adc
adc
sbb
test
lods
aam
divb
and
mov
mov
ljmp
mov
aas
lds
loopne
mov
or
push
inc
loope
rorb
push
xor
push
jae
loope
nop
cli
inc
in
adcb
cmc
sbb
and
or
roll
mov
mov
call
jg
clc
pop
pop
pcmpgtw
xorb
or
cmp
mov
cmp
sub
nop
out
lea
call
aaa
xchg
popa
add
ljmp
lock
ret
adc
rorl
arpl
les
inc
sbb
lret
jg
add
stos
or
jg
sbb
push
js
lret
xchg
xchg
add
add
mov
jp
ret
movl
rcl
clc
ds
cmc
mov
insb
lock
cli
mov
and
or
outsl
mov
sbb
jge
fbld
aaa
testl
testl
xchg
jmp
das
das
std
xchg
adc
push
fildll
xchg
cmp
out
pshufw
mov
and
mov
dec
test
loope
push
xor
or
mov
ret
in
ret
add
pop
xchg
jmp
sar
jno
or
or
jb
cmpsl
push
push
mov
mov
in
inc
in
mov
test
icebp
cmp
mov
mov
pop
xchg
mov
xor
popa
in
out
mov
pop
dec
pop
sub
jg
clc
div
mov
mov
push
xor
mov
mov
and
pop
xchg
outsl
aaa
mov
repnz
lea
jo
push
sbb
mov
xchg
cmpb
ja
cli
outsl
test
mov
jle
xor
pop
sub
jae
and
jg
lcall
push
cmp
fsubr
das
mov
loope
in
mov
push
les
sbb
rcrl
mov
popa
dec
jmp
das
mov
fcmovb
lods
sti
sub
les
filds
xchg
mov
out
mov
orl
jb
fdivrs
out
pusha
adc
loope
pop
mov
push
stos
push
cmp
test
mov
pop
adc
in
test
and
loopne
mov
and
xchg
xor
mov
push
mov
sub
adc
adc
nop
or
cld
jg
dec
ljmp
imul
inc
push
jnp
ljmp
test
push
push
dec
add
mov
inc
adc
pop
push
add
mov
std
mov
fistpl
push
ret
ficoms
sahf
sbb
jg
pop
mov
enter
inc
xchg
mov
imul
cltd
les
stos
xor
jno
mov
jecxz
push
out
push
pusha
pop
aam
outsl
icebp
inc
fdivl
adc
xlat
xchg
inc
or
push
test
dec
mov
fcmovne
pusha
roll
scas
scas
sbb
jb
mov
sub
jbe
cli
xor
aaa
loop
jecxz
negb
and
arpl
pop
mov
jp
xchg
out
pop
outsb
decl
dec
sbb
mov
jb
xor
fidivl
js
jo
inc
adc
dec
test
jg
call
mov
mov
push
xlat
jno
fsubs
aad
pop
loop
xchg
pop
mov
inc
nop
test
jno
or
ret
sub
pop
pop
loopne
bnd
fmul
adcb
inc
mov
pop
jno
cltd
mov
sbbl
jmp
cli
inc
or
push
cli
fistl
adc
ljmp
mov
cmp
das
lock
inc
xor
push
mov
enter
addr16
mov
gs
lea
pushf
adc
andb
sub
outsb
pop
rclb
and
pusha
in
out
outsb
push
test
or
stc
movsl
js
or
jne
inc
aaa
inc
mov
mov
jo
mov
adc
insl
sbb
incl
inc
mov
cmpb
paddb
pop
jo
dec
lods
or
fistpll
pushl
loop
shll
das
sbb
pop
into
push
sub
std
inc
adc
mov
dec
dec
xor
movsb
jnp
xor
cmpb
incb
add
sbb
and
mov
and
test
push
imul
xchg
dec
inc
lcall
les
repz
iret
dec
cmp
cs
xchg
push
dec
pop
pop
adc
in
int3
pop
or
scas
sub
pop
shl
in
sti
xchg
sbb
popa
popf
mov
inc
xchg
or
push
mov
fs
clc
sbb
ret
iret
add
stos
cld
or
je
push
cmpsb
mov
mov
sbbb
mov
outsl
in
das
adc
xor
adc
mov
or
outsl
rcrl
lret
xor
xchg
dec
js
mov
ljmp
fcmovnb
dec
es
jp
gs
fimull
mov
dec
stos
mov
pop
inc
xchg
add
jp
pop
aaa
lahf
movsl
addb
jne
scas
and
and
mov
cmp
pusha
fiaddl
out
jmp
fidivrl
mov
lods
or
fcmovnbe
ja
push
adc
xchg
movsb
sub
mov
lcall
xor
xchg
repz
popl
in
test
pusha
es
ret
loop
rcr
mov
adc
and
inc
sarb
loope
movsb
dec
dec
add
subb
and
data16
orb
fnstsw
addl
frstor
push
fwait
sbb
pop
cwtl
inc
sub
sub
jo
xchg
push
sub
inc
and
loope
aam
loop
mov
pushf
or
ret
insb
dec
sub
adc
ja
std
ret
lcall
sbb
and
cmp
inc
jge
loop
mov
insb
sub
pop
in
jl
mov
arpl
sub
and
int3
subl
push
mov
mov
push
xchg
and
je
add
lock
dec
mov
inc
jle
stos
jl
push
pop
aas
faddl
pop
xchg
lea
andl
pusha
inc
or
and
add
xchg
movsw
jecxz
mov
sbb
hlt
and
mov
shr
out
das
mov
pop
decl
cmp
cmp
jo
mov
bound
inc
loopne
pop
lock
mov
cmpsl
lret
pop
lcall
sti
aas
pop
inc
sub
jp
sbb
jg
pusha
iret
sbb
push
aaa
jbe
ret
jae
inc
xlat
jecxz
and
clc
outsl
cmp
and
xchg
je
xor
clc
sbb
inc
pusha
inc
add
push
sbb
out
rorl
push
repnz
jg
inc
pop
adc
test
xor
mov
dec
sub
jb
test
push
sbb
fistl
fdivr
mov
lods
add
roll
mov
xor
xor
jl
xlat
fwait
jne
or
cmc
std
pusha
cld
sub
cwtl
or
jg
xchg
push
popa
sub
dec
and
adc
sbb
bound
in
jo
mov
push
test
mov
pop
dec
negb
fstpl
ja
testb
leave
testb
dec
call
mov
shl
leave
push
ljmp
test
out
push
jns
lds
pop
pop
fidivrl
xor
xor
dec
sti
sub
or
rorb
xor
cld
mov
roll
and
imul
repnz
inc
fstl
pop
push
call
mov
movsl
pop
cs
jl
mov
add
mov
outsl
sub
lret
cmp
mov
jp
cmpsl
stos
mov
cmp
daa
and
xor
movsb
js
pop
aad
sbb
or
clc
jb
inc
inc
add
push
adc
mov
cld
adc
push
cmp
xchg
push
es
lods
cmpsb
insl
cs
shlb
adc
cmp
iret
in
pop
sbbb
cmp
sub
or
lock
popa
ret
dec
rcll
xchg
fs
cmpl
xor
in
mov
shll
dec
fldenv
add
inc
decl
outsl
das
mov
sbb
mov
loope
out
inc
negl
lea
and
jns
addb
sub
adc
or
cwtl
fbstp
int
test
xchg
dec
les
mov
testl
inc
sbb
icebp
mov
jno
cmpsb
push
inc
sbb
or
int3
inc
inc
sub
or
rcr
add
test
loop
dec
fs
daa
mov
sbbl
xchg
dec
cmp
pop
in
mov
add
sub
cmp
jg
loopne
mov
cmp
mov
lds
pop
dec
inc
push
arpl
fisttps
inc
movsb
and
sub
imul
jbe
sub
popf
pop
or
pop
mov
js
pushl
and
ret
cltd
lock
fists
jne
lds
inc
or
sub
sbb
xchg
or
jg
fcmovne
mov
push
lahf
test
xor
push
lods
ljmp
or
and
pop
ja
bound
mov
loope
aas
rol
aam
xchg
xchg
and
pusha
enter
dec
flds
cmc
ljmp
sub
inc
daa
mov
mov
stos
push
push
jmp
adc
xorb
aad
call
and
pop
push
pusha
cmp
adc
mov
in
mov
push
xchg
outsl
bound
xchg
test
rcll
vprotq
cwtl
leave
shrl
sbb
clc
ret
enter
dec
popl
add
cmpsb
ljmp
pop
lahf
jb
pop
cli
xlat
adc
pop
sbb
mov
imul
dec
inc
nop
mov
int
popa
xchg
mov
es
js
add
dec
gs
add
push
andl
sbb
add
sbbb
jg
sub
out
adc
mov
push
leave
pop
sbb
stos
outsb
shll
cli
clc
enter
pop
call
fs
bound
in
push
mov
fwait
xor
pusha
sub
dec
or
outsl
jae
jg
jge
cmp
sarl
push
sbbb
jg
out
mov
or
mov
aas
sub
pop
decl
mov
lods
inc
les
ljmp
test
leave
icebp
push
sbb
inc
loopne
idivb
fwait
add
jge
leave
and
test
and
cmp
ljmp
mov
adcb
mov
mov
repnz
bound
mov
mov
aas
iret
icebp
jmp
inc
call
adc
inc
imul
jle
jge
cmovo
cmc
in
pop
or
cmpsb
pop
aaa
jl
fucomp
roll
fiadds
cli
mov
inc
pop
push
icebp
movsl
inc
push
and
fsub
call
pop
add
outsl
mov
fidivrl
shrd
push
dec
rorl
mov
push
inc
sub
mov
xchg
repz
mov
mov
ljmp
inc
jns
mov
pushl
jmp
pop
push
and
daa
cld
add
xor
jecxz
sub
add
cli
mov
jp
adc
xchg
and
or
insb
inc
jge
or
sub
ret
adc
mov
sbb
mov
pop
scas
rcr
test
test
fldenv
ret
sub
pop
lret
adc
cs
xchg
fistps
lcall
push
shlb
ret
push
jp
inc
and
shll
cmpsb
pusha
fisttps
pop
push
decl
lahf
gs
enter
push
push
mov
fadd
fldt
and
inc
dec
rcrb
int
mov
sarl
lods
pop
cld
out
pop
out
clc
in
mov
jbe
or
inc
shlb
fdiv
scas
add
xor
fld
sbb
outsl
js
js
nop
sarl
fisttpll
push
adc
loope
xchg
mov
inc
jp
repz
pop
call
xor
cmc
cmpsl
dec
xchg
xchg
adc
xor
sbb
lock
aaa
call
dec
xchg
or
popa
lahf
add
loop
lret
enter
sub
sbb
loop
fldl
adc
jp
dec
jg
pop
je
sbb
sub
sbb
iret
repz
mov
add
cmp
nop
fsub
cli
cmpsb
dec
mov
jo
cmp
cmp
test
je
test
icebp
fs
mov
or
aad
jmp
or
shll
adc
cmp
cmp
mov
incl
jns
ret
push
aad
mov
sahf
sbb
add
jb
pop
cld
cmpsb
sub
repnz
xor
sarl
mov
sub
cmp
mov
push
xchg
cltd
and
add
inc
iret
pusha
and
push
push
mov
cmp
cmp
mov
cmp
ret
call
cmc
movsl
outsl
loopne
xchg
and
push
daa
outsb
cwtl
mov
aaa
adc
mov
iret
mov
sbb
push
cs
xor
mov
mov
enter
dec
jl
or
ret
shr
out
sarl
xor
cld
lods
sub
cwtl
push
sub
sub
lret
inc
or
push
clc
fcomip
cmovl
inc
mov
mov
jle
insl
mov
mov
xchg
jae
ss
jmp
bt
sub
mov
sbb
les
push
jmp
mov
aam
inc
in
ja
pop
push
mov
fcomps
xor
adc
and
push
sarb
push
xchg
inc
sbb
adc
pop
loop
testl
mov
insl
mov
fs
test
rcr
mov
shll
aad
mov
sub
mov
stc
push
add
push
in
movsb
fisttps
test
cwtl
or
imul
fldt
sub
adc
lret
xor
rcrl
test
inc
lds
dec
pop
mov
es
lock
mov
xchg
mov
ljmp
leave
test
clc
cmpsb
mov
mov
lods
ds
mov
mov
movsl
movsb
or
mov
jl
loopne
inc
sub
xchg
push
cld
xor
pop
std
mov
sti
and
mov
in
jecxz
cli
mov
sub
mov
cmp
nop
mov
fwait
cmc
xor
push
mov
push
pop
xor
incl
mov
sub
daa
leave
add
pop
dec
rcl
mov
loopne
mov
out
pusha
addl
cmp
inc
test
xchg
test
push
scas
fistps
push
mov
add
loopne
leave
push
cmc
ss
rorl
cli
imul
push
jecxz
push
and
out
xchg
adc
loopne
seta
repz
sbb
ljmp
int3
decl
call
orb
out
test
call
xchg
sahf
aaa
clc
jp
jl
add
in
xor
fiadds
mov
inc
jne
jmp
test
aad
jl
test
jg
pop
fidivrl
shrl
iret
mov
sub
and
rorb
gs
and
es
movsl
fisubrl
leave
ret
mov
cld
dec
aaa
aam
jb
dec
xchg
push
ja
xchg
dec
ljmp
das
data16
fcmovnb
xlat
mov
bound
inc
add
jb
lea
sbb
gs
sub
sbbb
movsl
jg
dec
mov
push
outsl
adc
xor
xor
aas
fidivs
outsl
scas
cmp
mov
js
jl
test
lahf
daa
xor
shlb
jns
sub
mov
test
xor
jg
and
mov
jae
push
jecxz
das
xor
cmpsb
pushf
push
out
cmpb
or
idiv
call
bound
jmp
pop
jbe
inc
in
sbb
push
jecxz
cltd
inc
stos
lock
xchg
pop
jmp
pop
add
inc
inc
ja
leave
pop
out
sub
mov
xchg
cmc
or
rcrb
fists
loope,pn
aas
outsl
or
pusha
push
pop
je
mov
test
and
push
push
insb
out
scas
enter
std
lret
outsl
jne
addr16
sarl
add
add
add
sbb
sub
inc
mov
sbb
shrl
cmc
les
aas
call
cmp
es
xchg
jg
test
add
lahf
bound
lahf
sub
lcall
pushl
rcrb
imul
loope
popa
lods
test
fdivrp
mov
jmp
outsb
pushf
enter
mov
xchg
add
mov
je
or
cmp
in
aaa
sub
push
imul
imul
pop
pop
daa
sub
inc
icebp
adc
pop
sbb
sbb
push
mov
inc
xchg
push
aam
jmp
inc
int3
pop
lods
xor
xor
loope
fnstcw
fbstp
adc
and
xorb
sbb
in
pop
lds
in
lods
nop
push
xchg
addb
pop
out
pop
mov
mov
add
or
cltd
sbb
imul
js
jb,pn
rcr
push
adcl
divl
test
mov
aas
popl
pop
sbb
das
push
icebp
cld
xor
hlt
lds
and
jmp
mov
push
or
out
dec
cmc
ret
sbb
mov
jle
fimull
adc
test
push
insl
fcmovnu
mov
in
div
sahf
push
icebp
mov
mov
pop
pop
mov
sbb
movsb
mov
mov
gs
adc
movsl
cmpsb
jo
and
adcl
rorb
sbb
sbb
out
test
jne
out
push
mov
mov
inc
rcr
jge
cmp
sbb
push
and
nop
daa
dec
cld
mov
fsubrs
add
lods
inc
jle
outsl
mov
test
xlat
and
push
in
ret
adc
xchg
imul
stos
inc
insl
jo
inc
sbb
xor
cmc
pop
mov
cmp
pop
jbe
dec
mov
out
push
mov
out
push
xchg
mov
cmp
fnstsw
jecxz
lcall
push
add
sti
dec
mov
mov
test
jo
fcomps
fildll
ljmp
and
aad
dec
inc
mov
adc
cmpb
mov
push
jo
fnop
fs
adc
loopne
fimuls
xor
push
or
sbb
pop
into
fistpll
pop
mov
inc
inc
cmpsb
pop
subb
dec
shll
inc
clc
fisubrl
imul
stos
cli
add
out
fcomps
sub
sub
ret
fstp
out
lods
pop
call
mov
dec
xor
adc
imulb
or
jmp
lods
repnz
dec
shrl
xchg
jnp
lock
loop
push
mov
loop
pop
fildl
clc
or
test
mov
call
cmc
andb
or
sub
pop
adc
mov
insl
pusha
cmp
js
xorb
cld
incb
shrb
leave
xor
shlb
sbb
sbb
sbb
cli
je
push
loop
or
dec
and
fsubl
xchg
cld
fcompl
aaa
pop
adc
sti
mov
xchg
jmp
mov
push
pop
push
push
and
sti
icebp
test
dec
mov
push
mov
and
inc
lock
rorb
jge
add
hlt
inc
rorl
cwtl
or
sbb
ret
iret
ljmp
je
lods
call
in
push
push
mov
jle
mov
push
aaa
cld
ljmp
andl
push
inc
mov
lds
mov
lock
jne
dec
xchg
jae
sbb
adc
mov
pusha
or
xchg
movsb
aaa
outsb
cld
adc
sti
insl
imul
mov
cmp
jg
xchg
mov
and
repz
movsb
aam
mov
lock
lods
pop
pop
mov
cmp
clc
jmp
mov
adc
out
repz
sub
pop
clc
xchg
push
cltd
push
mov
mov
push
popa
or
loopne
jmp
inc
lea
pop
fs
lret
movsl
aaa
js
fistl
out
add
adc
cmp
gs
dec
mov
and
das
aam
jecxz
fildl
repz
insb
movsl
and
sub
sbb
ret
mov
cwtl
jle
or
loopne
sbbl
sub
pop
ljmp
xor
aaa
add
mov
push
lods
and
or
mov
in
insl
adc
mov
jno
mov
ret
mov
mov
cli
decl
jo
inc
mov
add
push
sub
xor
cmpb
out
mov
loope
cli
xchg
incb
mov
iret
inc
rorb
and
leave
mov
and
stc
neg
sub
inc
loopne
mov
pop
cs
jle
adc
cmpsb
and
add
or
mov
mov
inc
test
pop
xor
cli
lods
cmp
pop
mov
lea
shlb
and
test
imul
shll
pop
mov
or
lods
addr16
aad
inc
jl
mov
jns
sub
es
inc
sub
aaa
xchg
test
adc
adc
loopne
sub
hlt
add
pop
jbe
mov
icebp
aas
std
and
sub
jnp
jmp
dec
hlt
xchg
mov
mov
and
mov
cwtl
adc
mov
in
mov
fsubrs
xlat
cmp
add
add
and
out
test
mov
mov
stos
sbbl
pop
hlt
add
loop
pop
jg
call
mov
rcrl
mov
aaa
mov
pushf
les
or
rcrl
bound
mov
js
pop
imul
mov
and
jg
in
out
pop
xor
es
inc
adc
jmp
xor
or
aad
insb
cli
cld
mov
or
mov
rolb
or
clc
insl
add
adcb
sbb
push
push
loope
outsl
in
cs
sub
adc
pop
fistpll
add
movsl
inc
negl
sbb
jbe
dec
cli
and
cwtl
leave
jne
jmp
mov
mov
jo
call
movsb
insb
adc
sbb
fistpl
je
addr16
stos
xchg
ss
mov
ret
aas
cmpsl
es
das
xchg
dec
pop
cmpsb
mov
jb
or
add
icebp
fiaddl
out
dec
add
cltd
sbb
mov
in
daa
add
jo
mov
loopne
mov
lahf
and
stos
adc
stos
mov
inc
pop
sbb
and
push
sub
mov
ret
fldl
inc
pop
inc
mov
and
mov
add
addl
cld
mov
pop
shlb
andb
sahf
into
dec
cld
mov
mov
pop
inc
inc
inc
cli
subl
out
clc
cmp
cmp
xlat
adc
ret
inc
add
push
xor
paddb
pusha
lret
pop
sbb
int
pop
dec
xor
insb
mov
ljmp
loopne
cmpsb
xor
loope
sbb
es
adc
or
lds
mov
fwait
ret
push
jle
xor
add
aas
fisubrl
fmuls
inc
fbld
out
ljmp
in
xor
inc
jle
fld
push
jo
pop
pop
imul
cld
pop
ret
bound
shlb
hlt
or
pushf
lock
pop
cmpsb
jb
mov
stc
inc
cli
bound
xor
mov
cltd
inc
out
inc
push
pop
mov
sbbb
movsb
sbb
pop
test
add
jp
int
jmp
inc
aaa
gs
and
in
push
jecxz
mov
dec
icebp
sbb
sbb
pop
fsubl
jg
das
jno
rorl
or
ja
jnp
je
cmp
or
clc
mov
sub
out
adc
dec
lods
flds
iret
or
adc
enter
js
cli
sarb
add
xchg
adc
xchg
xchg
aaa
out
pop
pop
push
nop
mov
loope
test
pop
in
sub
ds
daa
adc
dec
lahf
pop
std
sbb
mov
fcoms
add
call
pop
mov
cmp
loopne
sub
fstpl
mov
cmp
lods
leave
pop
popa
inc
pushf
and
test
adc
fabs
or
ja
outsl
fistpll
push
dec
sub
lods
stos
idivl
dec
sahf
es
and
or
adc
scas
mov
out
pusha
mov
mov
push
pop
test
loop
pop
jno
sub
sbb
jne
xchg
or
adc
adc
mov
sbb
pop
jb
mov
je
adc
lods
mov
mov
leave
add
sarb
xor
scas
lret
dec
xchg
jge
jmp
decl
add
push
mov
or
push
or
xor
andb
loope
cmpsb
jae
sub
xchg
std
mov
or
adc
jmp
xchg
cmpl
push
jle
in
cmp
xor
mulb
add
adc
or
outsl
incl
dec
cmc
mov
and
push
or
pop
stos
decb
bound
push
lret
out
dec
loop
pop
mov
push
sbb
pop
xor
jge
and
loope
push
inc
ret
loope
test
rcrl
cs
mov
push
push
rcrb
adc
jbe
loopne
dec
push
inc
or
test
inc
fistpll
into
addl
adc
adc
mov
sbb
sbb
cld
outsl
lcall
inc
ret
rclb
scas
adc
das
push
lods
inc
jnp
icebp
mov
adc
jne
push
pop
sub
stc
addb
push
inc
mov
test
mov
out
xchg
mov
mov
dec
popa
cmp
andb
push
push
jmp
push
jns
jae
mov
fninit
fucomp
dec
mov
mov
test
insb
loop
mov
rcll
sub
enter
clc
cwtl
inc
fildll
ficompl
test
sahf
cmp
pop
xor
push
cld
rorl
ret
pop
loope
xchg
and
roll
dec
mov
lret
adc
jmp
xchg
pusha
jmp
lock
mov
std
mov
pop
cmp
or
inc
enter
or
adc
and
sti
mov
or
or
testb
xor
jp
enter
lea
das
mov
pop
pop
inc
daa
fs
call
sbb
push
cli
pop
dec
out
or
mov
inc
pop
mov
push
mov
adc
or
mov
les
and
cmp
mov
inc
stc
push
sub
jmp
jecxz
mov
pop
std
mov
lds
add
jp
inc
loope
jg
cmpsl
add
cmp
jo
or
adc
test
imul
sub
cmp
test
and
rcl
and
adc
icebp
cmpsb
lret
add
adc
xor
lds
mov
push
mov
ffree
aas
lea
call
add
adc
inc
adc
push
js
sub
xchg
in
test
mov
es
or
push
shll
andb
adc
xchg
add
push
ret
xchg
xlat
aas
shll
mov
add
lret
fistpll
mov
aam
lahf
mov
adc
xchg
ss
cmc
daa
mov
or
mov
add
and
and
dec
cmp
les
mov
cltd
cli
enter
jl
stc
inc
pushl
out
insl
pop
sti
mov
xorb
stos
outsl
cld
jbe
shrb
pop
arpl
mov
lock
jae
stc
aam
mov
add
sub
jecxz
movsb
loope
sahf
mov
lods
test
pop
cmp
xchg
add
pop
add
pop
mov
xchg
fidivrs
ss
subb
adc
lods
mov
aas
jmp
int3
inc
arpl
adc
mov
mov
jmp
sbb
jo
ret
cmpl
decl
pushl
dec
mov
mov
dec
adc
nop
dec
jb
ds
shll
incb
aaa
or
test
and
aad
inc
cmp
ret
addr16
pop
cmc
mov
jo
jo
out
sbb
out
out
mov
fdivrp
pop
xor
pop
inc
cmp
inc
stos
xchg
adc
int
jle
aaa
mov
xlat
xor
hlt
adc
incl
rcrb
fisubl
data16
scas
nop
fs
cmc
and
push
roll
mov
push
enter
iret
mov
sbb
push
aaa
inc
cltd
movsl
push
inc
cmp
jo
test
pop
mov
xor
js
fistpll
in
je
inc
or
sub
or
pop
std
outsl
adc
ja
in
and
push
add
je
fs
es
mov
and
and
mov
and
dec
outsb
loop
sarb
add
cmp
pop
sbb
add
cs
pop
jmp
fdivrs
sbb
lea
repnz
popa
aam
fdivrp
es
adc
sub
and
in
jnp
das
insb
lock
ljmp
and
push
and
sbb
xchg
ljmp
jmp
lret
dec
cmp
push
jb
adc
add
adc
rorb
std
cmc
movsl
fildll
mov
shrb
roll
sub
pusha
orl
sbb
mov
xchg
orb
loope
pop
push
jbe
push
or
or
fldt
adc
adc
jo
sub
push
or
mov
mov
sbb
dec
or
inc
add
mov
mov
adc
notb
stc
out
cmp
outsb
add
jns
shll
das
jno
hlt
ja
out
test
sbb
jae
rcr
add
std
or
data16
rcrl
mov
cmp
call
cli
xchg
jge
je
movsb
enter
dec
cmpsl
cs
cmpsl
adc
push
sub
or
lahf
aaa
mov
mov
loop
xchg
mov
mov
cmp
sbb
or
cmp
jns
int
dec
ljmp
test
loope
popa
cmc
enter
lret
mov
imul
push
movsl
ss
out
push
inc
jg
xchg
or
je
inc
outsl
cld
lods
pop
pop
gs
add
jmpw
push
ja
rolb
loope
ss
and
sub
ret
iret
adcb
push
je
sti
mov
sub
ds
daa
push
testb
stos
dec
nop
popa
mov
mov
and
je
sti
nopl
sbb
jg
fs
sub
push
xor
loope,pn
jle
movsl
je
sbb
in
ljmp
shl
mov
jge
sub
mov
sub
mov
dec
lret
addl
mov
jecxz
sbb
jp
push
pop
mov
fs
dec
jecxz
sar
add
movsl
mov
lea
pop
jns
sbb
iret
inc
std
insb
cmp
pop
add
subb
add
cmp
and
jl
aas
and
adc
sbb
cs
adc
loopne
xchg
data16
jmp
and
dec
push
dec
mov
sub
sarl
mov
add
push
sub
xor
in
inc
adc
nop
stos
and
cmp
mov
stc
cmp
xchg
aam
mov
scas
ds
fistl
aaa
xor
aam
or
cmp
cmpsl
fbstp
or
mov
roll
cli
repnz
fcom
addb
sub
clc
pop
push
sub
mov
pop
outsb
xor
dec
mov
ret
pushf
xor
pop
jle
out
into
xor
xor
xchg
jge
xor
add
add
insb
std
dec
add
push
loope
mov
fisubrs
and
dec
jno
xchg
jb
or
jmp
loopne
inc
insl
leave
xchg
sbb
sub
adc
push
xor
shrl
int3
les
mov
daa
xchg
cmp
xchg
jg
test
xor
jmp
ds
xchg
cwtl
pop
push
in
jl
out
jo
mov
inc
dec
push
sbb
pop
in
or
jmp
lcall
mov
fwait
clc
mov
enter
cbtw
fs
jmp
dec
or
inc
icebp
pop
icebp
mov
cmc
xchg
adc
jo
mov
sub
bound
sarb
xchg
in
pop
adc
sbb
ss
adc
add
adcl
inc
test
or
pop
fcom
add
push
push
adc
cmpb
cmp
sahf
sbb
sbb
data16
inc
jp
enter
mov
scas
ret
aam
loop
push
shrl
xchg
mov
test
push
pop
clc
outsl
incl
or
jmp
mov
out
cs
push
stos
mov
call
mov
inc
xchg
inc
mov
repnz
push
jecxz
cwtl
incb
xchg
adc
rcl
dec
mov
cmp
jmp
popf
dec
sbb
subl
push
std
call
add
mov
jmp
stos
jmp
lock
sbb
add
xor
pushl
bound
inc
sub
jl
and
repz
push
les
dec
pop
xor
jge
lds
outsb
out
and
pop
mov
jecxz
mov
cltd
sbb
inc
mov
mov
adc
mov
jge
sbb
jg
cmc
rcrb
out
mov
sub
leave
dec
add
mov
icebp
addl
fmulp
and
pop
and
std
out
push
sub
dec
mov
and
addl
jg
push
mov
movsl
addb
pusha
testb
sub
dec
ds
jl
rorb
std
or
sub
addr16
mov
sub
xor
andb
add
mov
icebp
pop
push
out
in
or
je
loop
fildll
sbbb
inc
fs
test
imul
les
clc
xorl
lock
lods
push
nop
push
xchg
adc
cmp
dec
testb
adc
out
or
adc
aas
adc
xlat
jg
aam
inc
push
lods
test
jmp
je
bound
mov
jno
lcall
push
xchg
cltd
flds
outsl
nop
push
push
js
mov
xor
icebp
or
jb
dec
sbb
cltd
mov
push
adc
bound
jmp
js
lods
mov
popa
enter
mov
rol
outsb
inc
inc
loope
inc
lea
lods
shrl
aad
aam
fwait
outsl
adc
std
xchg
xor
sarb
xor
add
and
mov
jle
jecxz
pusha
loopne
rcr
out
iret
mov
das
jo
nop
sbb
xlat
push
imul
lcall
das
pop
mov
pop
dec
pop
sbb
fcmovnbe
pop
mov
cmpsb
or
mov
pop
mov
lods
push
pop
ret
movsl
outsb
add
lcall
cmp
jns
aas
lea
cld
mov
dec
insl
enter
inc
icebp
in
loop
int3
mov
pop
xor
and
orb
lcall
dec
arpl
test
inc
mov
xor
loope
cmp
mov
pop
xor
sbb
jnp
and
aaa
lock
cli
iret
push
adc
popa
aaa
pop
aas
cmc
movsb
std
imul
mov
push
std
push
inc
mov
add
xor
cwtl
ds
xchg
clc
jg
mov
sbb
dec
xchg
shrb
ja
hlt
das
jo
aas
adc
pusha
pop
mov
stc
jno
dec
negb
jge
and
jl
adc
outsb
sbb
adc
repnz
decl
icebp
ja
test
rcrl
xor
jl
and
sub
fdivs
mov
xor
mov
cmpb
nop
xor
sbb
fadds
imulb
aam
cli
or
lea
mov
sbb
pop
sub
dec
test
or
mov
scas
mov
mov
xor
cmp
mov
dec
xor
fcoml
inc
add
fsubl
mov
cli
ja
xor
sbb
jle
shl
pop
fmuls
dec
mov
xchg
and
test
push
pusha
fsubs
sahf
push
sub
ret
push
jb
mov
int3
mov
add
loope
adc
cmp
loop
push
adc
mov
outsb
int3
out
outsl
pop
inc
pop
and
aaa
dec
addl
lods
xor
in
jo
or
push
mov
mov
rcrl
clc
sub
cmp
lock
in
jg
jne
add
push
cmp
sub
incl
mov
sbb
popf
jg
hlt
pop
inc
jg
sub
cmp
shl
adc
fs
xchg
push
mov
sti
aaa
xchg
adc
mov
mov
cmp
mov
pushf
push
icebp
or
jbe
and
clc
arpl
xchg
into
sahf
stos
sahf
jb
dec
fcmovnbe
in
daa
out
filds
lcall
xor
dec
mov
or
mov
hlt
test
mov
dec
hlt
lds
stos
jg
push
sub
add
or
mov
cmp
int3
les
or
rcr
orl
orl
push
sbb
lock
mov
pop
or
xchg
jmp
jne
adc
out
sbb
cli
xorb
add
cld
jp
clc
inc
mov
sbb
loopne
cmpl
dec
std
mov
jne
test
test
mov
je
add
enter
aas
xchg
adc
mov
pop
push
std
push
aad
orl
dec
lock
pop
lds
inc
mov
sbb
in
in
sbb
fdivrl
mov
xchg
push
icebp
mov
or
test
shl
push
js
or
cmpsl
lock
lds
xor
repnz
addb
sub
ficoms
aaa
inc
clc
and
shl
movsl
icebp
and
xchg
and
jnp
jecxz
aad
add
shl
mov
cmp
movsl
xchg
insl
pop
out
or
rorl
clc
loop
lods
mov
inc
sbb
mov
mov
lds
mov
adc
test
push
pop
ja
pop
aas
pop
sub
adc
cmp
xor
clc
call
mov
leave
pop
fs
dec
add
push
mov
lods
jnp
sti
mov
cmp
jo
dec
cld
mov
or
bnd
xor
frstor
scas
add
mov
adc
stos
sbb
dec
or
lcall
mov
cmp
adc
and
out
loop
xchg
shlb
push
push
jg
sbb
dec
add
je
inc
cmc
add
daa
and
ret
jno
das
sahf
cwtl
mov
lret
out
sbb
adc
mov
clc
mov
add
pop
push
fidivs
and
pop
adc
incb
daa
out
clc
out
popa
mov
adc
stos
lock
dec
mov
pop
pop
rolb
stc
sub
movsl
and
mov
jg
rcll
das
call
incl
mov
xor
adc
testl
shll
hlt
addr16
cmpsb
jle
adc
xor
xor
or
icebp
cmc
mov
int
jne
lea
sbb
or
cwtl
fidivrl
mov
pusha
pusha
or
mov
mov
push
jge
adc
int
add
incl
fs
testl
call
jmp
int
or
push
or
push
scas
lahf
inc
cmc
sbb
add
aam
and
lods
mov
lea
jnp
push
xor
daa
sbb
out
jbe
inc
enter
push
jl
outsb
std
jb
stos
faddp
jnp
les
cmp
lods
add
stos
outsl
cwtl
stos
adc
ret
clc
pop
adc
lret
pop
hlt
lret
pop
xchg
dec
inc
loopne
ret
inc
adcl
pushl
mov
cmp
pop
insb
lahf
cmp
xor
pushf
mov
sub
sbb
push
adc
add
and
add
fists
aaa
mov
test
push
lock
test
repnz
adc
mov
nop
loope
push
push
aad
jne
and
cwtl
inc
mov
mov
jmp
dec
hlt
mov
or
fsubs
xor
rolb
fsubl
push
push
testb
aam
das
xchg
dec
paddw
loopne
cmp
sbb
ja
adc
push
aad
and
fnstenv
popf
fnstcw
flds
cmc
inc
jmp
std
ret
sub
jno
pop
fwait
aaa
sub
fwait
add
xlat
jbe
sbb
push
imul
fcomps
lds
add
mov
mov
aas
lock
ja
test
mov
pop
outsb
jp
dec
sbb
pusha
imul
es
cmc
rol
pop
movsb
dec
popf
sub
decb
andb
sbb
inc
cli
dec
cli
add
pop
repz
dec
out
or
cmc
xchg
xorb
xor
add
hlt
pop
mov
mov
cmpsl
popf
xor
push
jg
and
add
in
and
decl
scas
adc
rcrl
loope
xor
lds
stos
and
test
jle
mov
cmp
xchg
xchg
dec
lds
out
fisttps
in
les
ret
out
jg
add
pop
and
sub
insb
cmpsb
dec
ja
fs
jecxz
and
cmp
pop
inc
and
cmp
push
jl
pop
roll
out
lods
sub
inc
icebp
add
fwait
cli
push
dec
loopne
imul
cmp
fsubrl
imul
dec
xchg
push
les
inc
movsl
lret
adc
clc
dec
jg
cld
pop
push
mov
iret
int3
xchg
loope
add
stos
es
out
cli
jg
movsl
insb
xor
mov
push
test
cmc
cmp
mov
pop
mov
test
pushf
call
cld
mov
adc
je,pn
test
dec
push
int
xchg
cltd
popa
loop
mov
jecxz
push
mov
cmpsb
cwtl
sbb
lret
in
add
js
pop
dec
int
fcmovbe
sbb
imul
ljmp
inc
add
cmp
mov
scas
sbb
jecxz
test
push
pop
sbb
and
pop
push
adc
filds
inc
cmpsb
inc
or
addr16
jmp
push
cmp
inc
jbe
xor
inc
jmp
repz
loop
mov
loop
mov
outsb
mov
jmp
aaa
test
nop
inc
sub
mov
or
test
jns
das
dec
fldl
mov
imul
jl
int
cltd
sbb
xchg
xor
sbb
cmp
out
iret
sbb
mov
das
jmp
cltd
fistl
fsubrl
inc
push
rcr
mov
fdivp
inc
mov
xchg
je
inc
adc
mov
mov
pop
jmp
cmp
sub
lea
pushf
leave
fistpll
jl
push
or
fbstp
sar
mov
xchg
add
xchg
in
mov
fistpll
pop
dec
xor
xorb
daa
jle
cmpsl
jecxz
sbb
pop
decl
hlt
out
fxch
inc
cli
jno
out
js
fcmovnb
and
inc
pop
nop
and
xor
cmp
loope
cmpb
shlb
cmp
push
add
js
jnp
jae
out
inc
filds
mov
mov
and
dec
test
jg
aad
mov
pop
cmp
jnp
adc
lock
mov
add
loop
cwtl
or
lods
adc
push
ja
dec
ret
cltd
cltd
pushf
pop
mov
or
xor
bound
sbb
jl
xchg
cs
adc
push
rorl
mov
std
mov
insb
pusha
lds
dec
je
jne
js
test
adc
fstl
cli
or
je
stc
daa
adc
mov
jp
fldenv
aad
loopne
je
ds
lret
mov
add
add
insb
les
ljmp
dec
push
mov
cmpsl
jae
out
lahf
pop
add
call
dec
fwait
and
decw
adc
inc
call
mov
xchg
sbb
imul
push
pop
ss
lcall
mov
or
iret
fwait
push
pop
aaa
jg
dec
sub
movsb
in
cmp
test
cld
pop
mov
les
ss
inc
outsb
inc
movsb
add
and
cli
outsl
in
mov
xor
adc
fbld
es
lea
xchg
cmc
xor
test
lods
enter
mov
fwait
icebp
sbb
lds
xor
xchg
mov
fadds
fcmovnu
dec
push
test
jnp
mov
push
insl
lods
insb
hlt
jg
lret
test
push
testb
push
jg
outsl
dec
and
add
bound
cltd
rolb
xor
xor
rorb
std
inc
in
ret
mov
std
repnz
add
stc
ds
jmp
dec
jbe
testb
pop
dec
mov
lds
insb
std
daa
push
cmp
pop
in
jmp
scas
int
hlt
add
cltd
insb
jg
mov
mov
push
adc
lods
pusha
add
imul
jno
dec
and
pop
cmc
in
arpl
jbe
arpl
jmp
push
cs
mov
loope
dec
xchg
fmuls
cmpsb
in
pop
sti
or
cld
xor
fstpt
inc
inc
repz
mov
mov
in
dec
fwait
cmpb
addl
fists
pop
xchg
and
mov
jbe
icebp
jge
in
add
xor
orb
das
icebp
add
les
pop
inc
fidivl
clc
in
fistpl
or
decl
testb
cli
pop
addr16
xchg
test
push
ss
cmc
pop
fsubrp
cmp
mov
mov
push
je
sub
push
jge
std
pop
jb
xchg
mov
push
add
stos
dec
jno
add
rcrl
mov
pop
mov
add
cmp
pop
in
adc
sbb
cwtl
mov
unpckhps
in
push
and
inc
xchg
sub
into
shll
imul
cld
sbb
cmp
xchg
sub
in
lods
lret
xchg
push
data16
adc
dec
mov
fucomip
test
cmpsb
js,pt
lods
movsl
cmpb
pusha
and
scas
sahf
sbb
fisttpl
stos
mov
xor
out
movsb
std
pop
jne
push
push
push
lret
call
cli
lcall
ret
adc
call
cwtl
xor
lea
andb
xlat
xchg
mov
shrl
ret
addl
and
cmc
add
inc
imul
das
inc
dec
sbb
dec
xor
mov
notl
loope
jnp
jbe
pop
loopne
push
dec
mov
mov
loop
jecxz
cmpsl
out
mov
mov
pop
inc
mov
pushf
ljmp
or
add
inc
push
jo
in
and
jl
inc
add
dec
stos
add
add
rorb
sbb
dec
mov
mov
inc
aas
mov
mov
jmp
aaa
xor
jg
fisubrs
shll
inc
clc
lret
scas
dec
std
scas
iret
int3
leave
xor
fisubs
popf
mov
cmp
dec
jae
cmp
addb
test
sbb
push
call
xchg
fcoms
stos
sub
and
jo
inc
out
adc
cmp
inc
mov
and
pop
adc
lret
add
je
mov
out
dec
dec
aas
mov
ret
outsb
mov
sbb
jecxz
cmp
adc
dec
jbe
cmp
icebp
inc
mov
dec
inc
outsl
flds
xor
jp
adc
outsl
in
and
into
mov
test
hlt
mov
call
pop
adc
or
test
pop
xchg
xchg
xchg
cmp
fcos
sbb
mov
sub
sub
xchg
pop
cmc
stc
adc
fwait
fs
add
fidivrl
adc
movsl
loop
movsl
aas
iret
push
std
mov
outsb
adc
aad
je
mov
dec
outsb
jp
shll
cmp
loope
cmp
pop
call
test
addl
jns
loopne
inc
xchg
bound
mov
dec
push
pop
adc
shl
push
jl
movsl
push
xchg
shll
or
pushl
xor
dec
ds
push
fs
out
push
je
pushl
pop
inc
mov
xchg
mov
ret
mov
cmp
jno
or
inc
add
jb
mov
lea
sub
rorl
pop
cmpl
stos
bswap
and
out
mov
and
mov
shrb
test
lahf
xchg
xchg
jecxz
lea
stos
cmp
jmp
mov
dec
repz
in
and
das
xchg
sub
dec
xor
icebp
mov
mov
es
addr16
ret
lods
add
daa
push
mov
xor
pop
lcall
or
fldt
clc
test
lahf
dec
cwtl
cwtl
iret
pop
inc
ljmp
jne
or
xchg
dec
mov
jg
cmp
and
xor
xor
and
aam
jg
clc
aam
mov
cmp
cmc
leave
scas
mov
rcll
je
in
adc
jle
add
les
xchg
clc
and
adcb
filds
xchg
repnz
cmp
and
xchg
das
pop
subb
shl
out
or
fldt
cwtl
aam
into
dec
sub
das
test
push
sub
addl
hlt
inc
mov
fidivrs
ds
lods
nop
and
push
and
neg
sbb
pop
mov
nop
lcall
adc
adc
in
jmp
in
clc
add
xor
in
mov
lea
scas
jl
mov
jle
pop
mov
ds
push
mov
fwait
repz
scas
push
jg
sarl
mov
shll
fwait
or
fdivs
xchg
rcll
mov
daa
inc
xchg
and
sbb
mov
pop
xchg
dec
push
int3
lods
iret
inc
mov
arpl
rorl
cmpsb
iret
push
shlb
add
sub
inc
xchg
jmp
aaa
call
ljmp
dec
enter
arpl
je
fwait
xor
divb
mov
lds
decl
inc
addr16
lods
mov
fs
stos
push
xchg
push
jnp
ljmp
mov
jecxz
sarl
pop
cmpsb
adc
mov
movsb
mov
mov
fwait
and
test
incl
iret
leave
and
fsub
push
movsl
cwtl
mov
jg
and
icebp
mov
outsl
cmpsb
jnp
mov
jg
stos
xchg
sub
aad
imul
push
popa
repnz
inc
cmp
xor
es
or
sarb
lret
lea
adc
out
cwtl
adc
sub
mov
pusha
test
mov
cltd
sti
push
lock
outsl
loope
lds
fwait
lahf
inc
sbb
cmpsb
cmp
cs
cmp
mov
inc
jge
jo
decl
dec
xchg
subl
ljmp
popf
adc
cs
popf
enter
clc
mov
sub
ret
lock
fbstp
adc
mov
adc
addb
ffreep
pushf
xor
jns
mov
fldl
fistpll
or
sbbl
pop
jle
mov
adc
add
data16
xor
andl
pop
push
sbb
pop
std
jb
dec
cmp
loopne
xor
xor
xor
mov
outsb
lds
dec
js
cmp
je
xor
sti
inc
or
mov
ret
jne
adc
out
lret
or
add
or
add
dec
xchg
mov
xor
mov
arpl
pop
sbb
and
lea
inc
mov
gs
xchg
fcomi
cmpsl
ljmp
adc
inc
ljmp
insb
xchg
mov
or
mov
stc
test
push
jne
cmp
test
loop
mov
mov
jo
inc
mov
aad
adc
ret
sub
mov
stos
insb
std
mov
mov
xchg
fcoml
cli
push
cmp
idivb
sti
add
je
inc
mov
sub
mov
push
das
cs
insl
mov
mov
push
das
adc
hlt
das
pop
outsl
mov
fstl
leave
ss
inc
mov
xchg
push
insl
ds
adc
jae
cmc
lahf
outsl
out
insl
mov
fcomi
push
xchg
jmp
or
add
aaa
jnp
ds
adc
pop
jo
lds
push
sub
imul
xchg
insl
inc
or
ja
clc
not
push
jge
pop
movsl
mov
out
xchg
mov
lahf
leave
mov
repz
clc
push
sti
adc
xchg
pop
and
mov
ret
outsb
es
sbb
cmp
sbb
mov
and
adcl
jmp
das
rcll
push
cs
and
in
aas
jae
and
mov
push
push
stos
xlat
mov
mov
pop
imul
test
jmp
pusha
loopne
aas
jo
mov
mov
cmp
adc
fsub
jg
pop
pop
popf
ret
add
lret
iret
movups
add
mov
lret
fistps
cmp
int
or
dec
cmp
xchg
jle
pop
outsl
aas
push
pushf
shrl
jnp
stos
cwtl
adc
stos
jle
add
jecxz
and
hlt
or
push
mov
and
jg
rcrl
sar
push
sbb
jns
push
cmp
or
in
xor
lret
push
movsb
xchg
and
call
inc
call
push
lret
fldcw
add
jmp
aaa
jle
clc
jns
js
dec
jge
repz
bound
call
in
and
and
cli
aas
hlt
jg
dec
stos
fadds
jnp
es
push
pop
mov
push
mov
xchg
dec
data16
xor
mov
and
push
outsb
mov
pop
js
cmp
push
sbb
cmc
mov
ret
mov
movsb
nop
dec
sub
dec
and
xchg
mov
orl
incl
cs
lcall
stc
data16
pop
add
aam
mov
add
push
mov
mov
inc
loopne
mov
cs
xor
loop
push
push
js
fimuls
mov
je
sub
adc
inc
pop
push
jp
pop
mov
sub
pop
scas
loop
mov
fs
aaa
pop
cmpb
sti
pop
js
mov
pop
sub
push
pop
jmp
cltd
clc
mov
mov
cs
push
lods
sbb
cmpsb
gs
jnp
pop
jl
cmp
jge
aaa
fcmovbe
push
fsts
data16
and
data16
pusha
movsb
sti
cmp
lcall
sahf
inc
fistl
addr16
xlat
dec
adc
pop
inc
sub
sar
inc
xchg
cmp
pandn
lods
stos
fwait
xchg
pop
je
fs
inc
mov
cmc
stos
es
and
sbb
and
ficomps
decl
gs
pop
rcr
inc
fisubrl
mov
lea
mov
cld
pop
lea
sub
add
lods
fcomip
fs
fists
add
scas
jb
and
loope
push
mov
push
push
mov
mov
dec
shll
add
lock
std
pop
adc
mov
xor
js
std
das
test
push
nop
mov
shrb
lcall
ret
mov
fstl
aam
push
cld
movsl
and
mov
sub
inc
mov
xchg
sahf
rcrb
and
pop
push
in
loopne
or
jge
dec
xchg
loopne
fisubs
hlt
out
jmpw
out
xor
scas
and
jbe
mov
adc
out
cmpsl
sub
jecxz
jbe
lods
sbb
aaa
loope
inc
adcb
jne
orl
xor
es
pop
jg
shrl
sahf
fs
adc
cs
mov
lret
les
xor
mov
fadds
sub
scas
movb
add
mov
cli
rorb
addl
iret
sbb
and
decl
movl
inc
ds
mov
jmp
adc
inc
pop
outsb
mov
loopne
les
inc
sbb
sbb
add
adc
dec
adc
repz
lods
orl
push
xchg
xchg
dec
xchg
pop
mov
rep
push
pusha
mov
jnp
test
inc
xor
sti
dec
or
into
sbb
jecxz
jp
dec
je
fsubrs
movsl
sarb
imul
pop
jl
std
push
loop
and
fdivr
inc
mov
in
xchg
jp
jne
mov
cmc
add
subb
mov
push
sbb
xchg
mov
js
push
xchg
cli
addr16
addb
sbb
ret
push
jb
dec
addr16
mov
push
je
fbld
out
int3
push
sbb
xchg
mov
inc
or
loopne
jb
repz
xchg
cli
mov
jbe
aam
mov
adc
and
test
jmp
xchg
push
or
and
pop
adc
pop
fbld
sub
ret
mov
std
insl
das
fistps
orl
jo
aas
fidivl
sub
fwait
xor
inc
xor
lods
ljmp
mov
outsb
jae
cmp
and
mov
jl
stc
test
xlat
dec
sub
iret
loop
dec
das
insb
xor
inc
xor
sbbb
sbb
jns
das
clc
or
push
lahf
sahf
mov
icebp
or
add
and
scas
loope
cmpsb
push
arpl
cmc
dec
mov
test
push
pop
outsl
cmp
nop
nop
pushf
pop
cli
jmp
pop
or
dec
pop
sar
mov
cmpsb
and
sbb
mov
lea
imul
dec
js
int
cli
cmp
lret
icebp
xchg
mov
movl
mov
loopne
lods
and
dec
cmp
and
mov
xor
mov
aas
or
scas
jecxz
mov
mov
jle
sub
pop
shr
jmp
mov
xchg
cli
roll
divb
ljmp
fsubrl
sub
mov
mov
xchg
in
stc
mov
xchg
mov
out
es
push
cwtl
orb
das
int3
add
lods
or
cmc
pop
push
sub
mov
dec
and
call
push
mov
es
nop
out
data16
dec
loop
or
cmp
mov
mov
mov
and
dec
jp
lahf
sbb
imul
inc
inc
sub
lret
cli
daa
add
mov
ss
adc
in
mov
dec
jb
ret
lcall
or
fucomp
dec
aam
mov
ret
push
aad
sbbb
clc
les
js
ficoms
xor
mov
icebp
filds
pop
xor
inc
and
mov
rorl
xchg
mov
xor
xchg
dec
mov
je
and
mov
or
fsub
or
mov
repnz
cmpsb
ljmp
mov
sub
cmp
js
mov
add
ret
jge
das
fdivl
inc
loop
pop
dec
out
pop
arpl
jecxz
and
cmp
xchg
xchg
dec
xor
push
loop
mov
fidivrl
lods
jb
inc
xchg
cmp
inc
std
sbb
insb
dec
mov
xchg
cmp
sbb
lahf
clc
lods
decl
sbb
nop
ss
xor
jae
mov
mov
pop
inc
test
mov
sub
jnp
jl
adc
add
sbbl
dec
adc
hlt
lds
pusha
or
out
loop
fdivl
test
mov
pop
ret
xchg
ja
testb
ror
das
mov
or
mov
in
test
sbb
pop
push
repz
cmp
push
and
lods
vcvtdq2ps
and
pop
cli
mov
push
fld
dec
mov
test
rorl
mov
push
nop
ja
mov
insl
inc
imul
jle,pn
mov
lock
pusha
punpckhdq
jecxz
sbb
mov
mov
and
dec
pop
dec
push
inc
bound
push
adcl
jo
inc
jmp
in
ljmp
pop
pop
cmpsb
sbb
or
sub
sbb
jne
push
pop
add
mov
cmp
or
pop
clc
dec
or
bound
push
enter
mov
pop
in
jle
les
inc
imul
or
mov
or
bnd
adc
incl
push
xchg
inc
inc
movsl
test
jecxz
lea
push
cs
xchg
dec
xor
and
push
add
incb
inc
pop
or
lods
or
in
dec
jmp
shrl
mov
jo
inc
xor
incl
imul
stos
rcrl
xchg
pop
mov
inc
inc
jb
scas
cmp
in
idiv
add
call
xchg
mov
adc
stc
xchg
pop
aad
or
or
in
outsl
sbb
xor
dec
out
xor
div
das
add
push
cmc
ds
data16
aaa
add
pushl
ja
xor
out
mov
jne
cmc
aaa
mov
xchg
adc
pushf
sbb
jge
xchg
pop
xchg
sub
mov
int
pop
xor
clc
ss
not
xchg
stos
std
jo
das
cli
test
sarl
pop
mov
std
dec
xor
mov
sti
add
mov
pop
inc
pop
cwtl
ja
loop
rolb
push
scas
fisttps
dec
jmp
mov
mov
out
test
fadd
mov
sbb
rclb
hlt
adc
ljmp
mov
sub
jno
adc
push
test
pushl
and
or
xor
shll
adc
or
test
mov
adc
xchg
fwait
subl
xchg
call
or
iret
dec
dec
das
mov
push
mov
mov
cld
mov
push
ret
adc
cmp
fisttps
inc
shr
sub
push
icebp
shrl
stos
mov
fisttps
dec
pop
jno
sub
out
shrb
cmp
push
dec
js
or
cli
ja
and
pushf
pop
sti
stos
fistpl
ja
xchg
adc
shrb
scas
cmp
dec
aad
add
dec
sbb
jp
jg
fisttps
pop
notl
es
das
pop
or
fcoml
rolb
fbstp
hlt
scas
and
shrb
xor
mov
in
push
dec
and
adc
clc
push
dec
test
out
pop
xchg
xchg
int
mov
pop
shll
mov
cmp
inc
insb
mov
push
das
cmp
sub
cld
mov
cmc
aas
les
and
test
add
test
call
cmp
xor
or
les
addr16
les
mov
les
stos
test
shll
pop
lock
mov
sub
mov
ljmp
out
add
add
ret
loop
pop
jge
xlat
and
call
ljmp
jo
loop
dec
sub
das
jge
dec
movsl
xor
cmpsl
inc
push
les
outsb
mov
xor
nop
test
push
cmp
fcomp
insb
adc
idiv
aam
js
dec
pop
test
orl
in
sub
mov
xor
xor
test
add
stos
pop
add
dec
push
outsb
xchg
test
pop
lock
mov
dec
xchg
push
popa
test
sub
mov
adc
push
jg
mov
jle
enter
aas
call
push
iret
fwait
out
push
xchg
cld
ret
jns
mov
mov
adc
in
rcr
adc
sub
mov
or
test
sbb
ljmp
cmp
sub
rcrl
idivb
mov
cmp
and
data16
mov
mov
jno
mov
jg
jecxz
xchg
sbb
pop
or
ss
or
dec
enter
rorb
inc
imul
inc
mov
out
stc
push
add
mov
repnz
loopne
push
mov
rol
mov
pushf
mov
pop
or
pop
dec
test
std
cmpsb
and
sahf
movsl
ss
sbb
sbb
int
sbbb
xchg
push
jo
xor
incl
mov
sub
out
dec
dec
daa
jecxz
imul
cmc
mov
fisttpl
push
lcall
rcll
mov
jb
cs
aaa
adc
roll
jae
aad
xchg
pushf
mov
pop
cli
fisubs
xchg
les
mov
adc
xchg
jno
out
aaa
or
lret
or
test
push
outsb
mov
repz
mov
sbb
insl
mov
loopne
out
les
call
jg
add
ror
rol
mov
mov
inc
or
mov
js
popa
call
add
lcall
dec
xchg
out
clc
mov
aam
sbb
lea
mov
add
addr16
sahf
into
and
jne
pop
nop
add
xor
push
jg
inc
nop
mov
adc
jbe
loopne
cmpsb
das
adc
pop
js
jg
aam
xor
cli
call
mov
mov
inc
testb
xchg
incb
sub
imul
mov
cld
push
movsb
popf
fadd
pop
sbbb
mov
jl
sub
rcll
or
add
ret
jmp
add
stos
mov
dec
sub
mov
enter
aas
xor
iret
sbb
inc
ja
jns
fldl
adc
ret
jo
mov
in
sub
xorl
hlt
ljmp
push
push
aaa
cwtl
xor
mov
pop
cltd
xor
aas
outsb
insb
add
mov
notl
jecxz
pop
icebp
xor
pop
ret
lret
nop
fwait
adc
fiaddl
jg
mov
and
outsb
and
cmp
jne
mov
ss
jns
and
mov
insl
sub
scas
fbld
jl
push
mov
mov
stos
pop
vucomisd
dec
in
push
pop
mov
push
fwait
bswap
fwait
and
xchg
mov
jl
shll
lret
pop
mov
addb
add
mov
xchg
dec
jmp
orl
xor
or
push
cmc
fildll
dec
adc
lds
repz
icebp
xchg
test
push
push
inc
xchg
stos
mov
mov
pop
mov
jle
push
std
xchg
and
inc
or
clc
pusha
call
rolb
sbb
cmp
dec
jge
sub
aad
in
mov
std
sbb
fnstsw
out
xor
inc
lock
jmp
jnp
cmp
adc
je
push
ljmp
and
lahf
push
pop
pop
xor
dec
pop
and
and
fs
fists
popf
sub
mov
mov
clc
xchg
sbb
add
int3
inc
loop
pop
mov
or
fst
jno
into
push
fs
dec
pusha
inc
inc
inc
xlat
fnstsw
leave
icebp
add
dec
mov
jmp
mov
fnstenv
sub
xor
les
cmp
or
mov
test
inc
lret
ljmp
cmp
jl
lret
lcall
pop
pop
jbe
cmp
sahf
in
sbb
icebp
daa
sbbl
insb
insl
outsb
pop
sub
adc
clc
xchg
inc
sbb
jecxz
cmp
ret
adc
movsb
dec
pushf
dec
xchg
adc
sbb
sti
fstl
sbb
mov
jne
cld
pop
aam
mov
dec
xlat
xor
mov
psllw
or
in
inc
ljmp
imul
or
rclb
push
push
inc
std
icebp
lcall
adc
ja
lahf
in
arpl
push
sbb
in
push
sbb
add
inc
mov
mov
das
faddl
mov
sub
sbb
dec
aam
movb
rorb
adc
pop
movsl
pop
fidivs
test
mov
jl
xchg
cmpl
lcall
faddp
mov
sti
orb
or
inc
and
popf
aaa
xor
arpl
cmpsl
mov
xchg
mov
fwait
jbe
cmp
mov
push
add
les
pop
loopne
sbb
inc
sub
sbb
sub
aas
push
pushl
orb
cltd
jae
sbb
jb
movb
mov
call
pop
fcmovnb
push
lcall
enter
scas
inc
and
sbb
cld
std
and
mov
jg
push
sub
dec
pop
movsl
divb
in
rcr
push
mov
pushf
jns
clc
jb
inc
or
mov
xchg
adc
xchg
test
fsub
cmp
sub
adc
imul
dec
leave
test
push
js
iret
outsl
mov
clc
ffree
adc
pop
pop
cmc
sbb
jl
mov
icebp
fdivr
imul
push
das
shrb
jns
pop
mov
test
fbld
dec
testl
mov
ret
sub
xor
sti
add
nop
negl
int
xchg
cmp
or
inc
or
fmuls
jne
in
lock
clc
push
mov
lock
lock
das
mov
and
fbld
sbb
ucomiss
mov
fs
pop
jae
ja
or
add
les
add
jg
pop
mov
pop
nop
push
out
push
adc
shrb
scas
aaa
in
loope
inc
scas
mov
fmuls
movsb
xor
cmpsb
cli
mov
lea
mov
data16
add
js
out
mov
shlb
push
loopne
pop
pop
xchg
sbb
cmp
cmp
add
add
pop
test
punpckldq
or
inc
sbb
xor
lahf
or
outsl
cmp
xchg
es
hlt
sbb
in
bound
jno
insb
inc
negb
inc
xchg
mov
sub
lahf
inc
icebp
xor
pop
or
inc
lcall
cmovp
and
movsb
mov
sbb
leave
pusha
xchg
cmpsl
cli
fisttpl
lahf
pop
mov
adc
jp
gs
shrl
xor
lock
xchg
cwtl
push
es
inc
pop
pop
adc
xor
cs
pop
loopne
dec
call
dec
mov
ja
test
icebp
call
push
sbb
loop
xchg
cmp
cwtl
dec
adc
stos
push
cwtl
ja
jo
rol
and
xor
aas
mov
sbb
jne
xchg
jecxz
mov
test
sub
repnz
dec
scas
and
ss
push
clc
in
or
in
sub
clc
sbb
ss
and
cmpsb
xchg
xor
notb
dec
ss
test
mov
jmp
push
dec
cmpsb
outsb
and
push
fbld
or
fisttps
shll
mov
std
push
dec
jge
mov
testl
rol
push
sahf
sub
out
and
pop
jle
lret
es
push
add
add
xchg
sbb
dec
ret
daa
nop
fadds
cmpsb
ret
lods
repz
xor
cmp
sbb
cmp
mov
cmp
xchg
sbb
cld
fwait
popf
mov
je
mov
mov
flds
outsl
jl
adc
jno
jno
adc
lea
outsl
cmp
or
ret
std
mov
and
sub
add
orb
in
sub
fmulp
and
pushf
out
sbb
cld
ret
pop
mov
adc
xchg
xor
and
jecxz
push
sbb
mov
mov
testb
aas
inc
stc
pop
call
cmpsb
aas
pop
gs
gs
int3
shrb
cmpsl
lods
not
jne
pop
movsl
dec
sbb
outsb
jg
inc
push
clc
decl
xor
popa
jae
xchg
outsb
lds
xor
pop
adc
pop
pushf
xchg
ret
jbe
add
mov
das
fistpl
xor
cmpsb
xchg
pop
scas
jae
mov
push
popf
stos
popa
xor
or
jp
inc
aad
jge
xlat
fldt
sbb
xchg
xchg
sub
inc
je
decl
sbb
adc
xchg
rorl
or
jno
cmc
add
ret
popa
jo
xor
add
push
pop
mov
adc
xor
xor
cwtl
pop
clc
adc
mov
int
out
adc
mov
das
subl
jge
notl
jp
xchg
das
out
push
push
mov
lret
dec
int3
mov
lcall
xchg
mov
xchg
in
call
inc
clc
das
jmp
jb
test
pop
stos
inc
push
and
lods
jmp
gs
mov
ret
std
ljmp
decl
cmc
fsubs
mov
out
ret
cmc
mov
inc
ljmp
ja
sbb
pop
dec
pop
and
test
jecxz
stc
in
sbb
mov
xchg
sar
aaa
mov
movsl
pop
add
rcll
sbb
clc
jbe
sbb
cmpb
xchg
das
sbb
out
and
outsl
in
testb
js
popa
outsb
jl
arpl
push
fmuls
lahf
xchg
pop
aam
add
push
push
outsb
push
testl
cmpsb
sub
xchg
xchg
in
rclb
daa
mov
dec
cmp
mov
and
adcl
lret
lret
arpl
mov
or
pusha
lods
and
push
sub
xlat
or
lds
sbb
pop
mov
mulb
sbb
inc
scas
data16
add
cmovs
mov
mov
inc
mov
mov
adc
int
les
push
push
test
ss
mov
inc
incl
test
xchg
add
xchg
cmpb
pop
js
sti
push
fstpl
or
push
inc
adc
fadd
das
outsl
mov
sbb
jne
sub
lahf
xor
sub
jl
test
mov
cmp
xor
push
icebp
mov
mov
xor
loop
clc
mov
adc
fistps
dec
lea
adc
ret
push
stos
fldt
je
clc
xchg
add
je
mov
mov
jl
movsb
jbe
pop
cmp
fstpt
or
bound
fildll
sarb
sbb
ss
add
jl
jo
fdivrl
pushf
add
xchg
xchg
dec
repz
lea
bound
add
out
sub
mov
faddl
jg
decl
int
dec
std
cwtl
ret
out
xchg
pop
dec
jl
or
adc
pop
mov
or
push
mov
loope
inc
or
mov
sub
jb
jb
fldenv
xchg
push
lock
sbb
lret
inc
fists
pop
or
mov
pop
nop
sbb
xchg
add
mov
jnp
mov
pop
jno
mov
aas
mov
cmp
jno
shlb
test
jg
mov
ret
fnstsw
lea
addr16
xor
mov
mov
pop
push
and
pop
add
je
lods
jnp
lea
add
mov
adc
push
cmp
test
cmp
stc
les
push
mov
pop
cmp
push
sbb
ljmp
sbb
test
incl
scas
mov
and
cmp
sub
mov
mov
mov
cltd
and
push
push
jo
inc
sti
sub
popa
and
out
in
adcb
dec
push
xor
aad
clc
insl
fcoml
lods
not
test
je
dec
les
outsl
jns
dec
int3
adc
and
dec
std
mov
fistps
pop
lods
push
lock
or
sub
push
xchg
stos
cs
dec
sbb
pop
ss
pop
xor
mov
adc
in
mov
out
adc
xchg
ffreep
cmc
sarb
out
subl
loope
xchg
pop
jle
mov
or
cmpsb
pop
bt
push
repnz
sbb
jns
enter
test
out
cmpsl
jbe
cmpsl
jl
add
addb
mov
xchg
add
mov
add
sahf
pop
cmp
push
outsl
ljmp
or
mov
jo
jne
add
xchg
loop
lcall
sbb
xor
ja
mov
jo
adc
cli
inc
sbb
cli
sbb
jl
lret
mov
inc
shrl
pop
movsl
call
pop
dec
lret
movsl
sbb
mov
fsubp
mov
push
pop
or
pushf
test
or
xor
mov
sti
jno
mov
mov
hlt
pusha
fcomip
movsl
int
fmull
xor
test
or
nop
mov
pop
aaa
sahf
aad
and
pop
inc
push
call
add
xlat
lock
test
jmp
xchg
pop
jnp
or
cmp
loopne
add
xchg
xchg
stos
ret
cmpsl
aam
pop
call
test
xor
data16
fabs
pop
sub
pop
or
fadd
pop
sub
sub
cmp
mov
push
sbb
aaa
mov
jl
cmp
cmp
push
add
in
shlb
dec
les
sbb
arpl
add
cmpsb
cs
fwait
pop
cld
ljmp
cli
mov
sub
scas
jmp
pop
pushl
shlb
ror
lock
ss
dec
popf
dec
cmpsb
adc
pop
cmp
fs
js
sbbb
pusha
lret
loopne
dec
mov
ja
dec
outsl
cld
mov
fwait
adc
into
xchg
roll
mov
in
cmc
aas
insb
ror
jle
inc
mov
mov
adc
lods
les
inc
loopne
push
mov
aaa
adc
dec
and
lret
aaa
and
jo
jno
pusha
loope
jmp
lds
or
xchg
mov
fcomip
mov
and
cmpsb
sbb
push
test
out
push
cmpb
es
aam
mov
xor
pushl
lcall
outsb
cmp
mov
call
xor
jg
add
dec
xor
lods
mov
ja
imul
pop
popf
xchg
inc
cli
and
sahf
jns
cmc
sbb
jb,pt
enter
cli
adc
lods
push
nop
xchg
xchg
out
xor
orb
xchg
push
lods
push
or
test
sbb
popa
adc
ret
inc
nop
and
lahf
out
lds
pop
pop
cmp
aaa
sub
xchg
out
mov
fimuls
ds
or
mov
andb
scas
or
sbb
cld
pop
xchg
aaa
jae
scas
popa
xor
gs
in
mov
adcb
add
movl
add
add
es
cli
nop
mov
and
and
push
cli
pop
inc
and
mov
pushf
add
inc
adc
jno
je
or
xor
lock
xor
rcll
fstpt
jg
xor
dec
scas
xchg
sub
sbb
sti
adc
lret
decl
mov
adcb
jge
mov
mov
insb
xchg
mov
adc
xor
jp
push
fdivr
ljmp
jb
ret
add
mov
add
xor
test
mov
call
cmp
lock
movsl
scas
gs
inc
sub
decl
test
outsb
movsb
aad
pop
pop
add
mov
bound
je
push
jmp
dec
cs
lods
mov
fisubl
mov
idiv
fs
jp
sbb
push
test
in
lret
inc
cld
pop
xchg
or
mov
shl
xor
mov
push
pop
sahf
mov
cli
jns
jmp
mov
adc
add
test
cld
jo
jle
mov
adc
or
push
push
aas
pushf
adc
lret
iret
call
repnz
rolb
gs
lds
xor
mov
mov
addl
fs
xchg
sub
shrb
lds
mov
lahf
data16
sbb
dec
push
les
jno
pop
stos
sbb
xchg
pop
and
push
sahf
pop
or
jecxz
enter
jne
das
lock
lds
incb
lret
mov
inc
mov
jbe
movsl
sbb
decl
mov
and
sub
dec
ffreep
or
addb
orb
adc
xor
push
push
inc
push
subl
cmp
mov
pop
fs
movsb
sarb
cmp
mov
std
pushl
cmp
aaa
cmp
hlt
mov
push
pop
adc
sbb
mov
jo
pop
sub
inc
mov
and
outsl
ds
sar
pop
data16
lock
movsl
addr16
movsl
push
enter
ljmp
mov
fisttpll
call
pop
jno
int
movsl
cmp
add
xorb
enter
movsl
inc
aam
or
sbbb
inc
jmp
in
sahf
test
insb
jg
jl
fstl
cmpsl
cmp
inc
jmp
out
inc
repnz
cld
mov
mov
add
sbb
and
inc
subb
push
fnstsw
dec
movsl
jnp
xor
int3
sbb
xchg
decl
cwtl
in
jl
xchg
jge
xchg
iret
jnp
aam
loopne
inc
negl
repz
mov
shlb
or
stos
enter
cld
lods
arpl
jo
add
add
ret
sbb
clc
and
dec
enter
mov
jbe
push
sbb
jmp
sub
fsubl
push
dec
push
xchg
sub
lcall
test
pop
jle
jmp
ljmp
imul
mov
inc
std
shl
mov
adc
in
movsb
mov
cltd
xor
xchg
rolb
sti
push
sbb
jecxz
sub
fstpl
js
xor
outsl
sbb
cmpsb
pop
clc
mov
gs
mov
and
mov
sub
push
pop
push
push
xchg
subb
pop
or
das
add
filds
addr16
dec
or
inc
jecxz
scas
fimuls
insb
add
xor
jge
roll
xor
orl
pop
mov
cli
push
test
fidivl
mov
push
je
jg
stc
stos
sub
cld
rcll
sub
pop
and
out
hlt
sub
aaa
push
pop
ljmp
cli
or
xchg
or
add
adc
mov
pusha
push
in
outsl
mov
in
inc
cmpl
outsb
mov
push
or
loope
hlt
xor
sti
outsl
mov
in
and
aam
or
push
jg
aaa
add
xor
mov
pop
loopne
das
jmp
mov
adc
testl
adc
sti
scas
lea
add
adc
xor
sbb
fs
pop
ss
jle
cmpsb
add
inc
pop
lock
sub
inc
loop
add
inc
movsl
ja
xchg
adc
test
mov
scas
mov
inc
jl
int3
cmp
and
push
out
lcall
pop
xor
inc
sub
fstpt
push
inc
rorb
cmp
pop
cld
push
fdivs
lods
dec
jl
dec
insb
orb
inc
dec
jg
loop
sbb
push
mov
sarl
adc
enter
aam
outsl
pusha
lock
lods
sbb
out
int
or
add
mov
xorl
xchg
or
stc
push
pop
incb
add
cmc
push
cld
ja
mov
andl
inc
mulb
and
mov
repz
adc
xchg
test
movsl
adc
xor
push
or
or
mov
lret
lahf
mov
mov
pop
icebp
jmp
adcl
jns
pop
out
inc
cmp
clc
push
xchg
push
mov
dec
dec
push
js
jge
inc
aaa
loopne
std
mov
adc
cld
adc
adc
adc
push
cmpb
xor
clc
test
pop
sti
ret
rcrb
aam
outsb
cld
pop
push
inc
push
mov
outsl
dec
sub
sbb
sti
cmp
mov
scas
lods
lret
jg
mov
jp
stos
nop
jp
testl
into
dec
cmpsb
ficoms
pop
cs
cli
xchg
and
out
stos
cmc
add
shl
testb
xchg
dec
jne
xlat
shll
mov
or
into
sbb
mov
rol
pusha
inc
jns
xor
sub
stos
outsl
push
movsl
mov
stos
pop
adc
inc
jl
mov
in
adc
inc
lea
jo
outsl
inc
pop
mov
cs
ds
jae
jnp
outsb
jge
lock
dec
jb
sub
mov
dec
outsl
cmpsb
mov
dec
xchg
add
dec
lret
jo
out
jl
mov
aad
xchg
sub
fdivs
sbb
xchg
mov
decl
adc
shr
jne
lret
add
inc
pop
or
cli
lods
lret
inc
popa
in
pop
into
aaa
mov
lea
add
and
fdivrp
cld
rcrb
lock
inc
nop
pop
fsub
arpl
lea
push
enter
jg
adc
loopne
inc
mov
xchg
inc
mov
clc
leave
cmpsl
cmpsb
out
push
adc
pop
les
bound
fbstp
hlt
lahf
outsl
mov
add
jg
mov
dec
ret
rorl
mov
push
or
test
mov
mov
fists
or
add
cmpb
mov
add
cwtl
sbb
push
ja
fstpl
inc
mov
push
das
or
jno
lods
xlat
jecxz
ret
push
test
ljmp
pop
dec
mov
push
or
and
lahf
dec
sub
mov
push
bound
or
inc
aad
sti
mov
movq
leave
daa
imulb
jp
clc
movsb
cs
int
jo
sbb
test
inc
in
push
movsl
jb
js
jns
incb
sti
mov
and
jae
out
loop
mov
outsl
bound
addb
mov
addr16
mov
or
in
movsb
into
leave
jmp
mov
xchg
decl
jl
ljmp
sbb
jecxz
fisttpl
cwtl
dec
dec
ljmp
xor
lock
in
lods
loopne
test
or
pop
cmc
ja
xor
inc
xchg
pop
rol
xchg
xor
sub
mov
mov
addr16
or
fisubs
inc
sbb
out
mov
pop
jb
mov
pop
fwait
outsb
adc
aaa
loopne
xchg
pop
call
ret
sub
lods
es
pop
insb
mov
fadds
xchg
sub
dec
insb
sbb
out
xchg
insl
push
shlb
and
jmp
add
cs
push
lods
mov
jg
push
sti
scas
ficompl
jbe
cmp
ljmp
test
adc
call
sub
shrl
and
enter
mov
push
loopne
outsl
pop
faddl
test
insb
push
jns
rclb
test
cmp
cs
xor
sahf
es
xlat
das
adc
pop
fwait
and
lret
dec
push
int
cmp
pop
fcoms
xor
push
push
and
das
shlb
cs
inc
std
stos
lea
pop
orl
pop
inc
pop
fs
jmp
jae
push
inc
shlb
mov
imul
push
stos
repz
rcrb
call
push
dec
push
cli
es
jp
bound
cmp
mov
test
jp
shll
xor
cld
repnz
ss
pop
add
fstl
adc
cmp
push
cmp
in
scas
bswap
sbb
inc
jl
or
sbb
decb
flds
mov
out
adcl
mov
or
dec
popf
mov
fldenv
rorb
push
sti
push
sbb
inc
and
orb
push
pop
fldt
push
mov
pop
les
sub
cmp
rcl
pushf
ret
sbb
je
rorb
iret
lret
outsl
enter
lahf
test
push
sti
in
jbe
add
pop
fdivrp
aas
mov
std
out
mov
nop
push
dec
test
jne
or
dec
or
pop
aad
cmc
mov
mov
push
ljmp
lahf
or
xor
cmpb
stc
add
push
daa
insl
jle
or
movsb
jl
insl
pop
mov
cmp
gs
push
nop
xlat
dec
ret
inc
cld
jg
push
mov
cmp
pop
aad
mov
xor
int
clc
xchg
mov
and
inc
dec
lahf
loope
mov
or
ficompl
or
push
push
mov
pushl
pop
fisubrs
sbb
inc
sbb
cmp
mov
add
mov
popa
mov
or
inc
push
push
xor
and
test
sub
fimull
sub
sub
iret
loop
add
and
loope
movsb
add
xchg
inc
inc
addb
pop
mov
mov
aaa
ds
or
icebp
fiaddl
and
adc
movb
leave
movsl
sub
mov
jns
mov
mov
mov
jns
out
xchg
jge
or
mov
cmp
scas
gs
sbbl
and
imul
sbb
jg
adc
xlat
cmc
lea
incb
jecxz
and
jecxz
push
in
xor
jl
xor
aad
jno
jmp
aam
stos
jmp
xchg
cmp
cs
popf
xor
mov
adc
jo
push
add
mov
add
fwait
popa
or
push
mov
fnsave
je
cld
pop
xor
lahf
adc
lock
call
decl
test
mov
loopne
add
and
jl
lods
fs
pop
fsub
mov
imul
sarl
push
gs
shlb
mov
data16
xchg
popa
repz
pop
add
imul
jbe
in
xor
or
pop
loopne
dec
lahf
test
test
cli
pop
push
aad
test
ljmp
mov
adcb
imul
hlt
cltd
cmp
mov
mov
clc
es
mov
add
push
cmp
push
sbb
or
subl
das
loope
jno
pusha
sbb
mov
xor
add
loopne
lods
mov
inc
and
mov
cmp
mov
pop
or
jno
ds
movsb
rclb
sar
nop
cmpsl
lds
loope
push
jge
xlat
stos
inc
xchg
cwtl
inc
sbb
pop
dec
or
mov
mov
dec
pushf
add
loopne
push
sti
push
pop
and
add
pop
ret
push
mov
lcall
inc
es
push
ljmp
ret
inc
pop
push
push
cmpsb
loope
push
add
jbe,pt
decl
dec
fidivrl
nop
pop
or
add
sti
es
aaa
cld
hlt
push
insb
sbb
pop
mov
xchg
dec
rolb
jmp
push
mov
stc
and
jae
mov
mov
aaa
mov
cmp
mov
and
or
jmp
pushf
pushf
lods
mov
outsl
push
and
add
mov
jecxz
hlt
sub
decl
xor
push
sti
xor
fsubrs
test
push
xor
adc
dec
mov
adc
fdivrp
das
hlt
jg
ds
adc
cmp
imul
mov
filds
pop
adc
jbe
nop
adc
mov
call
pop
mov
xor
sub
out
pop
cli
or
outsb
outsb
jbe
imul
loop
in
adc
loopne
jmp
add
mov
pop
sub
mov
jbe
jo
pop
inc
mov
jg
call
mov
movsl
popf
push
mov
repnz
int3
sbb
clc
lods
sbb
notb
fdivl
or
push
sti
jg
mov
cmp
dec
cmp
or
movsb
mov
fcomps
mov
mov
test
mov
mov
jg
push
cmp
and
nop
out
xchg
dec
bound
jg
cmp
clc
ret
jmp
popf
mov
cli
sbb
xchg
in
subl
inc
out
fidivs
push
test
orl
sub
cwtl
stos
dec
popf
lret
addr16
inc
fdivrp
movsl
mov
repnz
sub
iret
repnz
leave
inc
adc
xchg
cmp
je
push
mov
dec
mov
mov
push
mov
jo
sbb
ljmp
xor
pop
int3
cmpl
mov
das
jg
inc
cmc
lret
es
daa
dec
or
lcall
fstl
outsl
pop
ss
sahf
mov
cmp
sub
dec
xchg
xchg
jle
sub
lcall
dec
jne
test
das
push
add
test
adcb
cld
or
and
sar
mov
ret
aam
out
sub
dec
aaa
mov
jmp
in
loop
pop
lods
and
lock
lcall
dec
je
add
cwtl
or
jge
dec
out
and
cli
mov
in
inc
adc
mov
test
mov
scas
sbb
cmp
test
bound
lods
lret
lret
cli
sarl
mov
and
lods
mov
leave
pop
fbstp
jo
mov
cmp
stos
out
repnz
sbb
inc
ret
push
ljmp
aad
adc
ds
pusha
fdivl
xchg
int
leave
movsb
xor
lcall
stos
mov
sub
push
jnp
shll
shrl
add
and
test
xor
or
test
mov
jl
lds
jno
fdivp
jno
fcompl
in
stc
icebp
sub
jp
add
test
cmc
mov
xorb
and
repnz
and
and
xlat
mov
push
stos
sbb
mov
mov
push
lret
sub
or
movsl
pop
xor
loop
jge
repz
jg
mulb
clc
and
jnp
pusha
lahf
pop
out
cmp
mov
add
pop
adc
cmpsl
jmp
insl
mov
popa
inc
add
push
aas
sti
es
inc
mov
jmp
mov
add
push
movl
inc
mov
mov
leave
or
js
mov
or
adc
sbb
pop
jecxz
data16
mov
mov
sub
ds
or
push
les
xchg
lahf
es
cmpsl
add
xor
inc
cld
ret
add
push
jb
mov
adc
sub
mov
fneni(8087
push
fiaddl
repz
cmc
pop
stos
mov
out
orb
push
cs
dec
xor
call
scas
inc
testb
int
mov
push
lea
or
in
inc
push
jg
clc
aas
mov
inc
daa
inc
mov
push
or
aam
cli
mov
int
sbb
adcl
push
jnp
adc
mov
fidivl
xchg
call
push
add
decl
sub
dec
test
ret
xor
xor
movsl
mov
dec
mov
or
push
inc
mov
cmc
cmp
icebp
testb
mov
jmp
fmull
enter
jge
push
pop
aas
es
push
sub
aas
insb
idivb
ja
mov
rorb
add
insb
loop
mov
mov
pushw
xor
arpl
adc
lcall
jno
xacquire
add
orb
outsl
push
xor
mov
ja
insb
call
ljmp
pop
cli
std
jno
fnstenv
je
popa
ljmp
add
dec
sbb
outsl
in
lret
aaa
push
xchg
outsb
sbb
into
adc
sbb
mov
loopne
adc
mov
outsl
rorl
inc
addb
dec
sub
imul
jb
fisttpl
int3
mov
jg
xchg
mov
cs
dec
ret
roll
clc
lea
das
pop
shr
jp
pop
jl,pn
inc
mov
cmp
mov
ja
xchg
test
mov
xchg
cld
fsubs
popf
mov
mov
dec
lret
jnp
mov
jb
dec
and
loop
fcompl
and
or
lret
movsl
decl
add
pusha
movsb
push
mov
mov
stos
test
or
lods
pop
cli
aaa
dec
lcall
ljmp
das
sbb
lock
lret
rcll
cmp
sub
sub
xor
fidivrl
pushf
inc
inc
mov
rcl
sbb
incb
cli
add
pop
nop
cmpb
lcall
data16
fiadds
outsl
sbb
lahf
pop
cmpsb
mov
push
add
pop
loopne
and
mov
add
daa
into
rclb
les
xchg
mov
sbb
xchg
jo
mov
stos
outsl
add
addb
imul
cli
mov
mov
pop
push
lock
jmp
adc
ja
das
cmpsl
bound
dec
ficoml
test
cmpb
movsb
enter
test
xor
xor
int
add
jge
push
sub
sbb
icebp
mov
in
rcl
and
ret
cmp
mov
mov
out
mov
cli
jl
out
insl
inc
jnp
inc
mov
fisubrl
bound
push
fstpl
cli
push
jge
out
incb
and
xor
or
adc
pop
clc
mov
adc
dec
jnp
shrb
fcmovb
test
inc
incb
movsl
adc
mov
sti
bound
mov
inc
mov
aad
les
aaa
adc
fistl
sbb
fldl
mov
mov
xchg
sti
imul
dec
outsl
and
mov
adc
inc
or
js
and
and
nop
pushf
cwtl
push
clc
lea
ja
add
pop
sbb
scas
test
mov
ds
fsqrt
lods
addr16
adc
sbb
or
inc
fmul
fwait
mov
icebp
sbbb
mov
jg
adc
ffreep
fbstp
push
mov
adc
mov
push
mov
push
pusha
mov
mov
xchg
push
dec
in
pop
cmp
push
pop
sub
mov
inc
pop
xor
fisttps
sahf
mov
xchg
push
mov
test
jnp
sub
int
mov
cmp
mov
mov
int3
jecxz
clc
fldenv
mov
or
imul
stos
add
and
or
sbbl
aas
shr
daa
insl
inc
push
jl
flds
mov
das
adc
rcrb
sub
or
push
push
xchg
inc
aam
sbb
mov
lahf
add
arpl
sarb
mov
out
or
insb
inc
dec
jbe
inc
mov
sub
push
adc
or
mov
cld
fcmovnu
jmp
cld
leave
push
add
mov
jl
cs
loop
or
sbb
sbb
fdiv
mov
adc
outsb
fwait
and
cmp
or
inc
ja
fidivrl
sbb
or
out
divb
call
add
dec
pusha
out
mov
push
jns
jbe
dec
add
stc
mov
in
out
jne
cmpsb
xor
cmp
fsts
lahf
inc
stos
jl
cld
jg
push
sub
xor
lea
pop
scas
sar
icebp
xlat
insl
hlt
add
cmpb
mov
pop
js
mov
subb
push
mov
mov
ja
push
mov
shrb
adc
add
xchg
dec
ds
sub
decl
push
adc
movsl
or
gs
shl
jle
sbb
jno
push
and
fsubs
pop
pop
push
jle
inc
and
aas
and
add
add
repnz
pop
call
jl
or
mov
movsl
push
xlat
insb
ljmp
mov
add
daa
jle
call
sbb
out
or
fmul
sbbb
rcrb
jbe
aad
inc
sub
and
es
das
push
insl
hlt
mov
test
inc
jne
mov
pop
js
clc
decb
lret
push
insl
outsb
or
sbb
cli
in
aas
xchg
icebp
cmpsb
and
les
push
test
lret
xchg
mov
jmp
jmp
inc
or
scas
adc
dec
fisubs
fsubl
sub
dec
jl
push
aam
in
dec
push
inc
std
mov
outsl
mov
sbb
aam
sti
mov
imul
cmp
inc
int
movsb
sbb
mov
pop
mov
pop
sahf
adc
and
dec
rcrl
xchg
popa
xor
mov
jp
fisttps
ss
mov
mov
or
fistps
xchg
pop
cmp
add
and
jb
inc
rcll
push
loop
cmp
dec
inc
loope
das
xchg
aad
xchg
inc
sti
mov
fiadds
in
decb
repnz
and
rcll
mov
out
into
vpavgb
xchg
mov
mov
pop
pop
inc
sahf
aas
pop
mov
xorb
sbb
inc
push
cli
jno
lea
outsb
push
pop
lea
sbb
ja
fcmovb
loope
data16
jecxz
sarl
in
inc
mov
or
lods
cmc
xchg
inc
mov
outsl
dec
inc
js
andb
and
jg
int3
ds
sarb
or
mov
pop
sbb
loopne
sbb
fidivrs
nop
jle
adc
or
mov
int3
mov
adc
xchg
mov
and
mov
sbb
xchg
xor
mov
push
xorl
sbb
out
scas
adcl
shll
aaa
pop
insl
push
stc
aad
sbb
add
or
testb
dec
mov
push
test
ja
out
inc
xchg
jle
fbstp
adc
das
add
roll
icebp
mov
pop
leave
cmp
inc
clc
pop
mov
pop
add
lret
pop
std
mov
ljmp
pop
jle
fldcw
or
mov
iret
xor
cmpb
je
jmp
jp
dec
stos
ret
js
data16
negl
out
and
loop
push
mov
ljmp
adc
mov
addb
inc
les
xor
push
test
fs
adc
test
sbb
sbb
adc
xchg
mov
repz
push
mov
inc
fisubl
xor
aaa
incb
mov
adcl
fcmovnbe
fwait
cltd
mov
lcall
adc
fistpll
adc
and
ja
jnp
jo
add
loope
adc
sub
push
cld
test
mov
xchg
jae
mov
lds
xchg
cld
ret
mov
cwtl
and
inc
lock
outsl
lods
ret
or
es
out
sub
ficoml
mov
clc
fs
fisubrl
lret
inc
roll
scas
dec
push
ret
fistps
xor
call
inc
aaa
lock
setg
movsb
jns
mov
cld
xchg
les
cmpl
jle
jl
out
loope
pop
mov
or
xchg
push
mov
mov
clc
sbb
loop
jns
xchg
lock
mov
jg
mov
ss
add
adc
insl
sub
lods
insl
call
jns
stos
fs
xchg
movsb
inc
enter
mov
sbb
sub
jno
in
and
jg
les
rclb
xor
aam
inc
pop
jnp
das
add
stos
sub
adc
shl
in
arpl
cmc
mov
or
jl
test
xchg
xchg
mov
and
pop
test
or
push
aaa
push
lock
psllw
add
cld
jne
fists
push
ret
mov
push
ret
sbb
xchg
pop
outsb
adc
fisubs
add
sti
leave
cltd
jno
lahf
sbb
nop
and
popa
es
add
or
aad
sti
xchg
in
fnstsw
outsl
enter
and
sub
clc
decl
xor
into
adc
push
add
fwait
mov
mov
pop
adc
stos
fisubrs
mov
sbb
call
fisubrs
pop
sti
mov
mov
daa
and
loope
xchg
cmp
adc
inc
dec
sub
xchg
aas
cmp
jg
xchg
push
xchg
aas
cwtl
mov
enter
sbb
pop
xchg
cmp
les
mov
jge
and
iret
fbstp
xchg
jl
cli
imul
push
popa
js
mov
dec
sbb
repnz
pushf
aaa
jmp
adc
flds
inc
iret
xchg
jmp
dec
les
jge
js
les
inc
jnp
jle
jmp
add
mov
aad
xchg
nop
aam
sub
out
inc
or
adc
mov
in
mov
inc
cmpsl
adc
and
aas
xchg
test
fmuls
inc
cmp
sbb
jmp
enter
sbb
stc
adc
mov
imul
stc
not
mov
jno
mov
fldenv
lahf
push
sbb
cmp
mov
push
adc
test
and
add
cli
lahf
cmp
push
fidivs
test
dec
inc
lcall
inc
cmp
xchg
pushf
inc
sahf
cmp
xor
xorl
outsl
std
out
les
aas
cltd
insl
lea
frstor
jg
popf
insl
pop
sbb
dec
sti
xchg
sbb
add
jge,pn
jge
fnstcw
lods
and
jge
adc
pop
mov
popa
push
dec
shl
xchg
jecxz
xchg
lret
sti
fisttpl
daa
push
mov
or
sub
mov
mov
fmul
negb
jge
mov
std
xor
push
repz
leave
aas
adc
outsl
cld
pop
loop
cld
push
cld
lods
sbb
ds
outsl
jl
jae
shlb
test
movsb
add
ljmp
sarl
int
lahf
das
fs
jg
pop
cmp
dec
dec
xor
fists
sbb
cmc
data16
in
loop,pn
inc
stos
addl
sub
pop
push
iret
pop
popf
scas
mov
aas
mov
inc
test
pop
imul
sbb
jg
mov
xchg
push
test
and
incb
test
sub
shrb
nop
out
sbb
daa
mov
insl
push
pop
adc
xor
stc
add
das
and
push
mov
andl
and
out
and
outsl
in
push
dec
into
out
mov
sub
cmc
loope
xchg
inc
mov
push
and
stc
int
sbb
cld
jecxz
ds
adc
inc
dec
dec
stos
fcmovnb
cmpb
xchg
add
es
or
xor
pop
sub
mov
inc
out
call
dec
arpl
push
fildll
das
mov
mov
cmp
in
jnp
outsl
fwait
mov
pop
push
loope
xchg
daa
jg
scas
in
das
mov
movsl
ret
iret
mov
les
andb
and
sub
jle
call
incl
loope
push
inc
pushf
xchg
ds
push
cmp
mov
or
or
ret
outsl
in
push
rorl
or
inc
or
out
mov
mov
cmp
data16
sbb
mov
jg
xchg
into
inc
pop
add
push
mov
cld
mov
fstl
push
adc
mov
inc
int3
inc
xor
movl
inc
add
dec
repz
adc
xlat
fcmovnbe
adc
addr16
fnstenv
loop
fisubrs
out
sub
orl
mov
call
mov
jg
out
xorl
hlt
imul
and
outsl
adc
sbb
sbb
hlt
sbb
adc
sbb
pop
sbb
jg
mulb
mov
pop
nop
data16
lret
add
or
inc
shll
inc
test
aad
sahf
stc
cmp
mov
gs
inc
adc
mov
rorl
sub
int
js
adc
mov
cmp
es
dec
and
insb
pusha
aam
pop
pop
sub
out
adc
inc
sbb
data16
lcall
imul
outsl
cli
fildl
pop
push
or
fwait
add
pop
xor
imul
dec
jle
sub
les
fldz
add
mov
pop
and
cmc
mov
adc
push
and
mov
ret
pop
and
lahf
cs
inc
out
das
std
pop
adc
pop
mov
pushf
or
jg
mov
cli
push
notl
aaa
movsl
adc
into
jle
add
rol
xchg
cmovnp
loop,pt
fdivp
jne
ret
sub
test
adc
jne
dec
int
hlt
sbb
and
inc
inc
subb
lds
pop
inc
cmpsb
shr
lahf
clc
lret
mov
mov
xchg
dec
lock
fmulp
mov
aad
mov
mov
in
test
or
pop
mov
clc
fisttpll
push
rcr
shll
push
enter
cmp
sub
add
mov
dec
test
jecxz
lods
jo
push
mov
mov
shl
dec
xor
aaa
js
dec
or
mov
into
neg
push
lods
xchg
in
loope
jge
decb
scas
das
dec
or
add
lea
sub
int3
add
movsl
jo
pop
scas
fldt
lock
movsb
jb
add
and
cmpsb
inc
jb,pn
ret
lds
popa
ret
mov
mov
repz
out
fdivrl
lock
out
sub
repnz
outsb
sub
mov
imul
test
ret
test
mov
cmp
xchg
jbe
dec
fwait
mov
push
and
rorb
pop
jbe
ret
adc
xchg
addb
ror
mov
or
addr16
fld
cmc
and
aad
movq
push
cld
in
in
jp
dec
jb
lcall
or
notl
pushf
mov
andb
xor
mov
and
ds
push
inc
call
sbb
andb
and
pushf
push
xchg
icebp
in
lods
pop
test
fcmove
push
xchg
hlt
in
adc
outsl
sub
fwait
out
in
mov
jae
nop
xchg
adc
sub
sub
push
das
inc
gs
adc
sub
jne
fidivs
test
je
sbb
add
add
mov
mov
or
pop
and
mov
mov
cld
in
lcall
pop
out
ds
add
out
hlt
mov
inc
push
jbe
test
sahf
xchg
mov
jle
dec
or
hlt
movsl
jp
call
xchg
adcb
ret
scas
mov
add
pop
cli
andl
std
xchg
iret
cmp
sbb
out
xchg
mov
and
or
push
and
enter
dec
cmpsb
clc
bound
dec
mov
push
aaa
mov
rclb
xor
or
sub
js
xchg
cwtl
xor
aaa
mov
xchg
sarb
jg
bound
mov
push
sub
or
imul
sbb
les
mov
outsl
shrb
bound
mov
movsl
sub
xor
decl
loopne
sahf
xor
test
js
add
add
movsl
xchg
mov
sub
std
pop
inc
sarb
dec
fistl
jns
arpl
inc
and
ja
adc
das
loope
popf
cmp
das
aad
adc
push
xor
repnz
std
mov
pusha
nop
pusha
dec
add
xchg
xor
lcall
movlhps
push
mov
or
xor
rorb
mov
test
or
fbstp
inc
data16
sub
mov
mov
lods
test
subl
les
mov
out
cmp
or
fsubrl
mov
or
mov
add
xchg
inc
lahf
iret
jg
lock
xchg
adc
stos
xchg
and
and
sbb
aas
rcrl
or
add
aam
mov
mov
fnstsw
in
mov
rcrl
or
call
fbld
pushf
and
insb
je
das
cmpsl
cmp
call
and
mov
mov
push
jg
xchg
push
shll
movl
add
subb
dec
popa
cmp
fs
jg
mov
sbb
loop
add
mov
xlat
fs
outsl
fmull
cmpsl
push
mov
in
adc
pop
and
in
mov
lds
mov
adc
movsl
cmp
or
xorl
xchg
clc
cmp
mov
xor
cld
jg
scas
sbb
mov
sbb
xor
rcrb
loop
adc
sub
outsl
decl
loopne
xchg
pop
add
inc
test
clc
mov
mov
add
sbb
xlat
inc
fldl2e
nop
cmp
cltd
sti
mov
loopne
and
mov
push
das
add
std
pop
sti
adc
or
push
loop
sub
scas
test
lea
jl
and
push
xchg
sbb
mov
repz
loope
sbb
add
xchg
cli
cmp
fimull
cld
mov
push
aad
mov
sbb
lcall
mov
pop
and
pushf
cli
dec
jns
and
rcll
adcb
mov
aad
adc
adc
or
push
adc
fucom
mov
xchg
push
lahf
fidivl
push
movsl
decl
lock
adc
ljmp
mov
xor
mov
dec
test
imul
push
sub
rolb
jnp
mov
filds
sarb
scas
push
ffreep
fimull
movsl
test
push
xchg
jo
jo
iret
adc
ja
and
xor
aaa
inc
decl
fsubrl
sbb
and
xor
and
movsl
pop
test
jle
addl
adc
outsl
popa
pop
fcomip
pop
xor
cmpl
jl
andl
xchg
sbb
jns
inc
jge
sarb
ds
xor
lahf
outsb
mov
push
sub
cmp
pushf
rorb
test
es
lock
adc
sub
xor
call
jl
jle
jl
cmp
aam
out
roll
and
jbe
inc
inc
femms
mov
cmc
mov
lods
inc
sub
les
sbbl
out
push
rcrl
sub
mov
xchg
icebp
add
dec
jmp
adc
test
xor
jnp
xor
add
add
sarl
xchg
ret
sbb
or
mov
loope
add
and
adc
xor
in
jno
adc
mov
dec
mov
jmp
mov
xchg
setne
jnp
mull
insb
push
test
jg
lods
xchg
fcoml
test
dec
adc
cmp
pop
xchg
mov
pop
cmp
jmp
dec
dec
sbb
dec
jl
mov
loopne
xor
pushf
sub
ja
jle
push
imul
jnp
jg
mov
pop
pusha
xlat
outsl
mov
inc
mov
push
iret
popf
jnp
jo
aaa
je
jg
push
mov
jmp
fildl
outsl
cld
cmp
in
lock
pop
jns
xchg
sub
sub
mov
repnz
pop
push
push
cli
les
push
mov
push
hlt
aaa
jle
inc
out
or
jne
loope
jle
notb
rcl
mov
push
fs
or
addb
outsl
mov
mov
rorb
push
sti
push
js
jae
outsl
lock
repz
in
dec
into
sub
sub
imul
ljmp
xchg
sbb
add
jb
lock
fwait
leave
fbld
or
loop
dec
jne
adc
mov
push
outsl
outsl
frstor
jns
jmp
jae
or
jmp
xchg
cmp
rcl
addl
filds
imul
js
mov
inc
jnp
inc
cmp
push
push
mov
pop
dec
cwtl
push
movsl
inc
cs
cmp
mov
and
pop
stos
push
push
aaa
dec
cmp
xchg
adc
fsubr
stos
pop
dec
cmc
xor
inc
cmp
ljmp
xor
xchg
xchg
and
sbb
loope
hlt
sbb
dec
lret
ret
rorl
adc
xor
sbb
gs
adc
add
outsb
jo
icebp
notb
and
jo
clc
sarl
lds
bound
test
jp
and
sub
sub
push
lret
mov
orb
imul
movsb
out
jmp
pop
js
adc
xchg
pushl
fwait
or
into
imul
push
dec
mov
and
adc
add
test
xchg
das
pop
sbb
test
ja
pop
add
popf
out
lret
adc
cwtl
xor
sti
fisttpl
dec
add
or
arpl
or
push
frstor
adc
in
add
setnp
ret
lods
rcrl
sub
fists
fnsave
adc
push
cmpsl
mov
into
fs
aas
push
sarb
pop
xor
pop
sti
jg
pushf
push
enter
adc
fucom
lock
push
and
add
pusha
insb
mov
xorl
cmp
mov
or
aaa
into
sbb
dec
fiaddl
fsubrl
pop
add
cmpb
xchg
pop
movsb
out
and
xchg
jmp
and
push
stos
subb
ds
mov
cmc
cmp
mov
hlt
jbe
lahf
jg
stos
aaa
inc
iret
mov
mov
shll
loop
daa
xor
pop
pop
loope
into
xchg
and
and
mov
rorb
mov
mov
in
push
ljmp
je
rorl
push
aas
mov
test
xchg
jg
mulps
sbb
int3
sahf
adc
mov
push
push
mov
push
jnp
setae
adc
ss
lods
push
or
or
adc
sbbb
test
and
mov
popa
and
push
and
icebp
sbb
cmpsl
inc
outsb
fmuls
cld
mulb
mov
cld
push
xchg
test
insb
pushl
pop
jle
andl
stc
jl
pusha
xchg
cmp
pop
xchg
add
ret
lock
push
jne
test
gs
out
lahf
jg
stos
test
fst
push
mov
sub
pop
clc
lods
lret
hlt
jb
lds
loope
mov
dec
push
or
and
adc
fisttps
jge
lcall
push
mov
setnp
dec
ja
adcl
xchg
mov
mov
adc
inc
jnp
dec
mov
dec
jne
xor
clc
adc
sub
jg
push
pop
pop
out
inc
ds
xor
and
ror
or
sub
inc
lret
xchg
mov
repnz
loope
xchg
gs
lahf
xchg
cmp
mov
shlw
outsb
inc
dec
mov
cmp
mov
shll
push
shrl
decb
lds
cs
pop
pusha
mov
adcb
loope
mov
mov
mov
sub
ss
inc
or
test
mov
xchg
mov
add
outsl
add
adc
outsb
dec
incl
cmc
cmpsb
jle
mov
push
inc
and
inc
clc
shll
jb
sub
repnz
mov
gs
in
std
arpl
add
cmp
add
push
xor
mov
pop
ret
jbe
mov
jmp
ret
or
in
sub
inc
cltd
clc
add
jge
idivb
ja
scas
mov
pop
xchg
call
cmp
aas
and
mov
xchg
cmpsb
mov
cmp
push
jg
sub
add
cwtl
adc
enter
and
ss
fimuls
xor
push
inc
jbe
and
cmpsl
popa
imul
bound
cltd
xor
out
xchg
addr16
jmp
fdivs
movsb
outsl
stc
or
in
inc
jo
out
xchg
ds
pop
jl
cmp
and
insb
das
stc
repnz
or
enter
jecxz
push
jecxz
sub
rcll
ss
test
add
push
imul
outsl
sbb
and
lcall
or
jns
sti
jno
rcpps
sbb
cs
jbe
popf
mov
dec
cmpsl
stos
inc
es
sbb
fsubrl
cmp
stc
add
scas
inc
mov
aas
in
inc
cltd
insl
and
inc
pop
jo
call
hlt
outsb
cmp
in
std
and
xorl
lret
dec
mov
mov
es
inc
xor
mov
aas
aam
inc
mov
cmp
dec
nop
cmp
fistl
mov
pusha
cmp
sub
or
repnz
call
loope
xchg
mov
dec
lret
xchg
mov
outsl
hlt
iret
fisubl
jl
inc
mov
jp
out
cltd
sarb
das
test
sti
sbb
repz
mov
std
pop
and
xchg
and
mov
cli
inc
addr16
cmp
jecxz
cld
loop
insb
sti
aaa
inc
add
mov
outsb
and
dec
inc
sub
adc
imulb
ds
push
rcr
sti
call
mov
pop
outsl
je
adc
sbb
xor
add
lock
icebp
ficompl
fbld
mov
mov
xor
ja
jb
out
pop
adc
add
aam
and
inc
or
xor
add
or
pop
dec
and
add
fsubrs
lock
nop
adc
push
sub
jmp
imul
mov
pop
negl
fstl
adc
jl
adc
test
fsubp
fiaddl
fcmovnb
jmp
test
jnp
out
clc
call
jecxz
mov
mov
adc
test
out
mov
popf
pop
mov
inc
sbb
dec
sub
cltd
dec
scas
mov
adc
lods
sbb
adc
sbb
adc
shrb
add
dec
es
leave
inc
popa
jnp
sahf
adc
xchg
es
jns
pop
pop
icebp
add
fs
cld
cwtl
dec
cld
sbb
mov
push
push
subl
mov
es
add
jnp
jno
ljmp
jne
jbe
loopne
jns
insb
lahf
icebp
outsl
add
aad
popa
push
dec
lcall
outsl
inc
mov
rorl
test
movsl
clc
ret
inc
aam
xor
out
jecxz
jo
incb
xor
je
and
bound
sti
loope
inc
sbb
and
les
or
mov
inc
mov
pop
mov
imul
test
cmpl
inc
in
sbb
inc
icebp
fists
out
adc
repz
push
jl
call
mov
subb
push
jns
ret
xorl
lods
insb
mov
adc
sbb
enter
or
lcall
push
pop
cmp
inc
mov
mov
push
adc
ja
or
hlt
ret
adc
push
imul
lock
push
and
sub
jno
mov
jge
rorl
in
pop
icebp
inc
jmp
lods
xchg
xchg
lods
aaa
clc
sub
cmpl
mov
pop
cwtl
inc
inc
sub
cld
fisttpl
fisttps
adc
jge
or
cmpsb
pusha
xchg
nop
js
hlt
dec
lods
xchg
xchg
mov
fadd
jne
xor
cmp
inc
lods
push
xor
mov
rclb
ljmp
lods
repz
sub
dec
or
add
pusha
sub
jg
dec
push
mov
and
mov
lock
jmp
inc
lds
stos
mov
jmp
mov
pop
mov
mov
pop
loopne
hlt
ja
xchg
mov
cs
mov
push
mov
pop
idiv
pop
mov
xchg
adcl
and
lods
mov
push
dec
sti
mov
mov
inc
dec
shrb
in
call
insl
jo
jmp
mov
add
sbb
adc
pop
shll
decl
adc
mov
mov
inc
adc
xchg
js
addl
sahf
push
mov
pop
jp
ljmp
pop
push
bound
jecxz
movsb
lods
sahf
jnp
mov
or
cmpsb
xchg
mov
lds
enter
mov
push
mov
popa
cmpsl
loop
and
incl
hlt
clc
jo
and
add
into
cs
push
daa
sbb
pminsw
sub
pusha
or
xchg
dec
aam
fisttps
or
pusha
rcrb
xlat
sti
in
mov
lsl
pop
lods
and
pop
jae
stc
aam
js
movsb
leave
dec
inc
jecxz
in
dec
incl
jno
mov
or
inc
sbb
mov
addl
and
mov
xor
pushf
inc
sbb
stos
jl
cmp
ret
jg
xchg
inc
adc
mov
inc
outsl
adc
pop
mov
add
jo
je
xor
out
mov
test
pop
lret
mov
sbb
xlat
ja
rorb
sub
and
cld
loopne
push
pop
sbb
ja
out
sub
cmc
dec
inc
pop
push
aad
ja
adc
sbb
mov
jmp
aam
clc
or
fnstcw
mov
mov
mov
or
dec
or
decl
leave
cmpb
dec
and
jg
out
sub
add
cmpsb
andl
fldl
call
rcll
pop
add
inc
and
shr
mov
pop
adc
push
lock
icebp
mov
test
mov
int3
pop
addr16
jbe
daa
push
adc
fsubrs
jge
xchg
xchg
jbe
mov
loopne
cmpsl
push
cmp
fs
cld
push
pop
or
jo
sub
in
dec
shrb
adc
sbb
mov
je
sti
outsl
icebp
pusha
sub
and
xor
mov
inc
mov
fs
xchg
cs
dec
lds
scas
pop
incl
rcrl
lods
xor
cltd
pop
bswap
jbe
cmc
push
pop
cmc
push
insb
cmpsl
inc
ret
outsl
pop
and
push
adc
sub
outsl
push
std
je
ficoms
movsl
repz
cmpl
or
fildl
push
shlb
fs
negb
jns
sub
add
outsl
js
fiaddl
fwait
add
movsl
push
jne
clc
testb
aas
jl
lret
jnp
cld
ja
filds
in
sbb
ss
loopne
cmp
sub
and
add
xor
das
sbb
lahf
xchg
add
adc
aam
xchg
fstl
lods
pop
fs
sub
inc
mov
int
loop
pop
sub
sbb
sbb
inc
out
js
mov
add
ret
mov
push
inc
cld
adc
add
mov
dec
xchg
mov
sub
jo
and
sbbl
adc
add
add
pop
pop
orb
push
mov
cmpsb
int3
cmp
cwtl
enter
cmp
mov
adc
jnp
repz
xor
fmuls
inc
cmc
lods
movsb
lret
repnz
das
fwait
mov
or
dec
mov
leave
lock
nop
decl
pop
or
je
cwtl
push
add
ja
mov
in
loop
jecxz
or
std
fwait
decb
movsb
mov
je
xor
stos
push
pop
fisubl
arpl
cld
xchg
cmpsl
sbb
jne
dec
insl
fidivl
pop
popf
out
ljmp
or
add
imul
shlb
rcll
insl
sub
push
aad
mov
xlat
mov
push
or
add
push
mov
mov
jl
adc
aam
cmp
loopne
cmc
lea
push
push
pushf
aaa
push
les
dec
rcrl
pop
sub
push
push
jg
mov
adc
push
and
add
xchg
adc
jnp
and
jmp
jg
fisttpll
push
xchg
in
jae
add
daa
repz
mov
daa
pop
int
push
mov
les
jmp
mov
mov
sub
pop
nop
mov
call
xor
loopne
pop
addr16
rcrb
inc
xchg
xchg
pusha
push
jle
cmp
push
inc
insb
adc
mov
movsb
adc
out
add
mov
cltd
or
imul
xor
inc
inc
cld
gs
fs
cmp
xor
ret
jbe
mov
data16
out
mov
das
insl
sahf
pop
xor
mov
adc
xchg
nop
cltd
jge
xor
iret
adc
adc
bound
dec
loopne
jno
xchg
into
loope
js
outsb
test
aas
mov
sahf
pop
and
sbb
fwait
mov
add
xor
je
or
sbb
pop
clc
lea
xchg
enter
rorl
sub
dec
sub
lcall
clc
mov
loopne
outsl
aam
jle
add
jmp
outsl
hlt
inc
sti
pop
push
xchg
sbb
and
xlat
mov
in
adc
lret
jg
cs
jle
mull
movsl
or
mov
add
xlat
test
push
xchg
mov
inc
mov
pusha
dec
pop
add
inc
nop
jmp
shlb
dec
cmp
and
add
fwait
clc
cmp
sbb
and
call
loope
mov
lret
lea
add
test
andb
das
jmp
clc
pop
mov
add
cli
jp
rcrb
add
or
mov
arpl
into
cmp
push
xor
xchg
inc
cli
adc
insb
pop
std
xor
mov
push
cld
shrb
and
add
fmuls
mov
mov
sub
adc
int3
dec
push
dec
lock
insl
mov
fwait
jmp
leave
sbb
inc
mov
imul
pushf
in
idivb
fadds
or
push
lock
or
loopne
movsb
jmp
insl
or
imul
cmpsl
jp
inc
pminub
jge
aam
iret
jp
xor
or
xchg
or
repz
je
xchg
mov
adc
adc
decl
push
mov
mov
bound
sbb
insb
cld
push
lret
sub
add
or
ljmp
sbb
pop
fwait
movsb
insl
sbb
push
and
pop
push
lock
pop
clc
leave
in
mov
sti
mov
push
and
pop
movsl
mov
add
shrl
inc
bound
pop
or
lret
jg
in
pop
and
add
jge
test
andl
pop
sbb
jbe
loope
nop
lret
in
inc
ljmp
int
mov
adc
xchg
cmpsl
mov
push
xchg
push
dec
add
aam
adcl
push
xchg
jl
inc
ljmp
mov
movsl
js
xor
rcl
jmp
push
nop
jge
mov
loop
pop
cmp
outsl
lock
es
push
add
dec
outsl
icebp
mov
movsl
enter
scas
pop
dec
loop
je
cmp
out
cld
pop
dec
in
cmpsb
pop
dec
mov
lds
mov
cmp
test
jae
addr16
outsl
stos
sbbl
adc
xorb
lret
imul
mov
pop
pop
cli
lea
lods
push
jo
insb
sub
test
pop
call
incb
lds
mov
andb
outsl
jge
ret
push
mov
ss
inc
ror
or
call
movsl
lea
stos
inc
inc
xor
dec
out
fwait
inc
cmp
adc
mov
divl
pop
push
xlat
push
jl
cli
scas
adc
xor
outsl
cld
test
mov
popa
les
push
mov
push
mov
mov
incb
shl
das
push
les
push
mov
notb
clc
hlt
push
add
xor
rorb
lea
inc
add
in
test
nop
imul
ret
cltd
icebp
dec
or
lock
jmp
ror
and
aaa
sub
inc
and
pop
mov
push
adc
leave
aam
push
loop
xor
sarb
in
aam
sub
ljmp
push
push
clc
arpl
xchg
jne,pn
xor
mov
mov
mov
lods
sub
pop
lods
outsb
out
test
int3
push
add
outsl
incl
ret
in
repz
ret
push
jge
xor
xor
dec
push
roll
xor
pop
fcomip
das
mov
ss
sbb
movsb
xor
inc
fisttps
enter
lods
inc
mov
es
fcmovb
push
adc
cs
int
fwait
push
sub
cmp
hlt
sub
dec
js
jne
decl
les
lock
inc
enter
loop
loope
fldt
mov
icebp
push
and
jg
mulb
push
and
adc
nop
adc
mov
dec
jno
in
mov
adc
cmpsb
decl
test
push
dec
jmp
inc
les
outsb
stos
les
nop
sahf
pop
mov
add
addr16
sbb
ret
aaa
clc
pushl
push
mov
push
add
cmpsl
jg
xor
fiadds
fsubl
sub
inc
jmp
mov
or
jo
push
push
push
mov
jg
decl
jae
add
xchg
xor
fsubs
push
or
mov
ret
jg
cmpsb
adc
sbb
clc
daa
repnz
jno
mov
mov
icebp
pop
cltd
loopne
xchg
dec
in
xor
loopne
pop
js
sbb
dec
ja
adc
mov
jns
addr16
inc
inc
stc
sub
mov
dec
stos
xchg
mov
jge
aam
ss
pop
lock
cmc
pop
inc
sub
jecxz
add
push
mov
test
cmp
inc
orb
and
push
mov
fdiv
daa
pop
cmp
lock
js
and
jno
repz
cmp
push
adc
adc
xor
pop
fimull
xor
minps
addr16
adc
ss
push
pop
loop
inc
pop
fimull
ljmp
jno
mov
xchg
mov
jle
out
cltd
sub
sub
and
test
aaa
mov
cwtl
push
add
cmp
dec
dec
test
cld
xchg
fs
jecxz
aaa
push
push
xchg
inc
popa
mov
sbbl
cwtl
pop
sub
into
sub
lods
pop
mov
inc
rcrb
in
sbb
mov
test
xor
pop
std
mov
push
cmp
ret
push
adc
push
or
lods
and
mov
subb
xlat
xchg
mov
push
sti
pop
cli
std
xor
sbb
jbe
add
mov
decl
mov
jae
inc
sbb
xchg
roll
mov
add
mov
xor
or
scas
in
and
cs
push
repnz
loope
lods
xchg
or
lret
call
mov
out
cmp
mov
mov
je
pop
pop
inc
sub
cmpsl
ds
pop
out
jbe
adc
push
add
mov
and
jecxz
movsb
es
push
loopne
inc
or
push
aam
nop
inc
insl
sbb
addl
aaa
pop
js
pop
and
ljmp
inc
subl
mov
xchg
test
ficoml
movsb
inc
insl
mov
xchg
sub
lret
or
xchg
outsb
or
loop
pop
or
push
lods
or
cmp
gs
push
mov
jbe
int
add
mov
jge
inc
pop
movsb
leave
pop
cmp
loop
mov
xchg
sbb
jae
and
and
xchg
popf
xor
out
push
and
in
dec
iret
cmpb
xor
call
lds
or
cltd
int3
insb
insl
xchg
test
adc
lret
dec
ja
xchg
stos
add
cmp
test
sarl
ret
pop
mov
fwait
xchg
sub
lds
mov
push
in
mov
sbb
sbb
and
mov
lret
out
mov
jb
ret
push
cmpsb
push
frstor
cld
decl
pusha
rclb
sbb
jle
and
dec
mov
inc
cld
or
cltd
iret
fwait
das
sub
orl
push
inc
add
dec
xlat
pushf
rcrb
aad
ja
jo,pn
pop
sbb
icebp
jo
adc
popa
mov
jae
jp
dec
shll
inc
jne
and
imul
inc
test
mov
dec
jo
and
jns
dec
ret
es
mov
outsl
test
cmpsb
loopne
popf
push
loopne
data16
lcall
xchg
cmp
popa
test
cmp
pop
adc
xor
mov
into
xchg
inc
push
xchg
fsubrl
and
push
mov
test
push
cld
ret
fisubrs
call
inc
ja
sbb
out
cli
fildll
nop
loopne
ljmp
jne
xor
mov
fwait
lods
sbb
das
jge
xor
pop
aam
data16
jecxz
push
jg
inc
xchg
mov
sbb
push
fnstcw
cmpsb
aaa
ss
hlt
add
je
repnz
out
mov
in
fdivr
xor
sub
imul
scas
rcrb
inc
jne
push
jg
call
clc
mov
fiaddl
xor
test
sub
cmp
xor
ja
add
or
xor
out
ds
mov
shl
aad
aad
setbe
and
dec
mov
ss
add
xchg
stc
fistpl
inc
adc
adc
ja
icebp
sbbb
push
lods
pop
scas
inc
dec
stos
push
push
mov
jle
xor
scas
cmp
call
in
or
stc
xchg
push
out
mov
fwait
pop
sbb
push
push
pop
mov
subl
mov
inc
xor
cld
jbe
push
into
dec
mov
or
jle
jbe
lret
cwtl
push
outsb
orl
adc
mov
cmpsb
mov
jne
add
mov
sub
and
leave
mov
pushf
mov
pop
push
jo
push
mov
adc
mov
mov
mov
xchg
or
xchg
mov
ljmp
stos
rorl
cmpsl
adc
jecxz
jo,pn
push
loop
lods
sarb
xchg
mov
mov
add
cmpsl
stos
ficoms
or
jge
mov
or
xchg
mov
test
sbb
jl
js
mov
push
nop
push
dec
pop
jg
flds
fcompl
pop
enter
ficoms
outsb
leave
mov
mov
push
dec
dec
shlb
inc
fldl
mov
je
push
add
add
lahf
push
pop
jp
test
pop
sbb
in
add
hlt
lret
push
call
cmp
addb
mov
cld
je
xchg
adc
div
mov
ror
push
xchg
jbe
and
sub
jmp
xor
js
fisttpll
std
aas
mov
push
adc
fistps
out
sub
adc
and
inc
xchg
xlat
outsb
jl
pop
addr16
mov
std
popf
jne
push
and
fcmovu
mov
pop
and
add
pop
les
shll
insb
icebp
jg
sub
shrl
add
pop
cs
xchg
mov
popf
and
pop
stos
sbb
cmpsl
sbb
gs
or
xor
and
pop
jg
les
iret
stc
pop
cs
gs
imul
aad
adc
cmp
lcall
psrld
xchg
insb
test
icebp
sub
cs
add
iret
insl
jo
inc
xor
xlat
lock
andb
pushf
inc
std
sub
cli
mov
lret
add
mov
cmp
inc
mov
popa
dec
push
ss
lea
test
stos
into
sbb
pop
push
inc
arpl
pop
outsb
decl
mov
add
push
lods
test
jl
test
popa
cmp
xchg
arpl
nop
in
out
inc
mov
pop
sbb
ss
lods
pop
jno
dec
fstl
shrl
popa
and
push
fildll
in
mov
cmp
push
cmp
andl
mov
add
mov
mov
push
aaa
dec
or
shrl
jbe
sbb
push
in
inc
sahf
adc
push
mov
push
push
mov
int3
pop
sbb
call
pop
dec
and
loopne
dec
xor
sbb
ret
adc
mov
sub
push
je
in
mov
loope
test
mov
jecxz
fmuls
lods
mov
out
pop
ret
and
lea
std
dec
dec
jns
clc
dec
lcall
loope,pn
mov
adc
xor
loop
rorl
mov
and
mov
rcrb
sbb
frstor
outsl
sub
pop
push
movsb
xchg
xchg
push
mov
mov
push
xor
movsl
mov
popa
lret
lods
in
cmp
inc
cmpsl
nop
lds
mov
in
cld
or
push
pushf
je
mov
pop
inc
fists
push
daa
xchg
mov
or
fisttps
scas
jae
mov
int
out
xchg
scas
subb
cmpsl
jl
cmp
or
and
mov
dec
rcr
and
sbb
mov
dec
dec
mov
enter
mov
fisubl
jo
push
pop
stos
fisttps
mov
sbb
mov
adc
add
xchg
and
sub
add
xor
jo
adc
clc
jbe
mov
xor
ljmp
loopne
push
pop
test
rcll
std
jbe
cmp
push
push
xchg
push
ja
xor
test
js
nop
xor
sbb
dec
scas
jle
outsb
divl
int3
aas
aaa
outsb
mov
mov
and
inc
xorb
and
adc
cs
cmpsb
clc
cmp
jge
inc
pushf
js
popl
shll
roll
rclb
lahf
xorl
nop
pop
add
jb
popf
int
mov
pop
mov
mov
aas
mov
rcll
lea
js
sbb
mov
jge
aas
adc
adc
ss
and
jmp
adc
jae
jge
inc
es
gs
push
pop
cli
jno
sbb
je
lcall
outsl
pop
mov
or
sbb
cmp
aad
mov
sub
xor
loope
shrb
add
ret
push
dec
lods
test
roll
sti
mov
pop
dec
sub
mov
adc
pop
adc
fbld
inc
mov
pop
xchg
arpl
push
dec
add
xchg
sbb
mov
and
outsl
mov
mov
jbe
mov
cs
add
cmp
add
ljmp
fildll
cmpsb
lahf
add
cmpsl
or
pop
xor
xchg
inc
jg
push
jecxz
mov
mov
or
fsubs
adc
orl
mov
inc
lea
cs
ud2
and
rorb
jns
sbb
sbb
lds
mov
sbb
pushf
notl
sbb
mov
adc
pop
cmp
mov
pop
mov
loopne
pushl
cmp
push
aaa
add
adc
in
xchg
insl
or
nopl
sbb
mov
add
leave
test
cld
lret
fnsave
cmp
test
mov
js
sub
and
bound
addb
clc
adc
mov
cmp
xor
mov
pop
jo
mov
pusha
xchg
jnp
jo
or
fistpl
incl
bound
add
xchg
nop
jno
inc
stos
stc
mov
das
mov
aaa
fwait
addb
xchg
cltd
jne
add
test
loopne
jnp
cmp
cmp
lret
shll
aad
pusha
das
sbb
in
mov
out
call
adc
push
xor
push
cmp
push
lret
adc
mov
add
mov
les
out
jle
inc
mov
inc
jns
adc
fildll
pusha
jmp
cmpl
and
push
imul
mov
mov
cmc
js
push
sub
mov
sbb
adc
adc
icebp
inc
mov
clc
shr
sbb
cmp
arpl
hlt
outsl
pop
call
icebp
scas
jns
daa
cmp
imul
push
iret
mov
in
sarl
xor
xor
sub
lret
ja
inc
cmp
movsb
stc
and
mov
lods
insb
cwtl
lock
or
les
pop
mov
shlb
jmp
outsb
hlt
dec
jae
iret
inc
pop
or
mov
movsl
mov
mov
insb
inc
inc
xchg
ret
mov
pop
sub
repz
filds
jbe
fcomip
ficomps
and
out
std
sub
mov
lahf
dec
outsb
mov
add
mov
jg
sbb
sbb
pop
lods
hlt
lret
or
jl
push
call
fs
fldenv
inc
sub
outsl
sub
xchg
fisttps
dec
cmp
ret
fcoms
int
shlb
pop
mov
icebp
lock
repz
jecxz
pushl
xchg
cli
mov
hlt
and
nop
inc
in
inc
clc
pop
das
dec
fsubrp
cmpl
xchg
daa
fwait
into
and
jp
mov
adc
mov
sbb
frstor
les
sub
inc
or
aaa
clc
mov
sub
stc
mov
into
sti
mov
jne
in
call
jle
aas
imul
add
adc
pusha
test
push
call
ret
inc
pop
ret
clc
cmp
faddl
inc
xchg
mov
add
pop
and
push
xchg
call
je
and
sub
or
in
cmp
add
push
pushw
jne
adc
and
and
or
test
repz
not
daa
xlat
adc
or
cltd
orb
mov
hlt
lahf
decb
jne
pop
in
push
and
in
push
mov
sbb
and
hlt
leave
fbstp
adc
sbb
in
jb
inc
mov
or
es
arpl
iret
mov
mov
filds
pop
inc
jo
pop
add
cwtl
movsl
enter
mov
add
lahf
scas
cld
mov
sbb
lcall
or
fsubs
das
insl
dec
lcall
inc
hlt
mov
icebp
add
cwtl
arpl
pusha
sub
lea
bound
and
mov
cmpsl
arpl
or
inc
sarb
call
addl
sub
test
lods
lret
and
pop
pop
mov
or
add
add
idiv
pop
shlb
sbb
mov
dec
fld
stos
adc
outsl
cld
gs
test
enter
test
ljmp
in
adc
jmp
pop
mov
and
sub
cli
mov
inc
iret
fcomps
cmp
sbb
mov
mov
push
lea
lock
out
mov
sbb
rclb
lea
shlb
push
loopne
mov
clc
or
push
dec
loop
xor
adc
lcall
mov
xchg
fs
outsl
cld
lods
movsl
and
add
xchg
stc
mov
nop
shlb
mov
aam
jp
sarb
dec
push
or
inc
cld
jb
sub
in
fisttpl
add
mov
inc
and
std
adc
jl
dec
sub
jecxz
ds
mov
sbb
sbb
fiadds
adc
mov
mov
cld
push
push
cmp
lock
imul
lock
and
fs
push
popf
or
sarl
jp
pop
xor
inc
xlat
and
add
mov
rol
mov
jne
push
lahf
stos
clc
cmp
lock
inc
jge
clc
push
and
mov
incl
push
or
rorl
lods
pop
add
pop
jle
popa
pop
in
fsubr
aad
in
subl
inc
cs
sbb
xchg
xor
jl
and
lcall
shl
ja
jmp
xchg
rolb
notb
out
dec
mov
lea
das
dec
sbb
mov
xor
xchg
test
loope
imul
xchg
test
push
mov
xchg
into
aaa
es
inc
mov
int3
mov
xchg
mov
nop
add
xchg
lret
xlat
jns
pop
inc
jge
xchg
popa
cmp
jbe
jmp
lods
cmp
lea
pop
pop
enter
out
sbb
sbb
out
call
mov
add
mov
pop
nop
jbe
xchg
fwait
ret
mov
insl
add
stc
push
loope
pushl
mov
push
sar
scas
es
notl
cmpsl
cmpsl
clc
and
jecxz
aas
hlt
pop
call
jle
inc
mov
push
push
cmp
sub
repz
lahf
nop
jne
imul
push
pushl
movsl
testl
sbb
mov
mov
xor
mov
pop
mov
pop
in
stos
cmp
bound
xchg
pop
test
cmp
mov
inc
gs
inc
mov
mov
push
repnz
or
push
push
adc
rcl
xlat
cmpsb
call
mov
xor
stos
jo
push
and
fisubl
ret
iret
jg
decl
inc
sarb
negl
lahf
push
and
mov
fcoms
aam
cmp
mov
sbbl
push
popa
shlb
outsb
iret
mov
push
xor
out
jmp
out
aas
sbb
dec
in
insb
sarl
out
sti
fucomip
decl
rcrb
popl
stos
adc
sbb
push
and
fimuls
cmp
fldlg2
in
sub
shlb
das
push
push
push
out
sub
ror
aam
jb
xchg
mov
inc
or
out
jae
inc
cmpsl
fsts
push
mov
jb
or
call
add
enter
cmpsb
idivl
loopne
clc
sub
jns
loope
mov
and
scas
inc
or
sbb
jecxz
repz
rorb
sti
jmp
pop
addb
xchg
outsb
xchg
cmp
xor
adc
xor
push
sub
jo
mov
lods
add
into
daa
in
lret
jb
pop
jbe
popa
lahf
enter
call
repz
push
lods
xchg
icebp
in
out
fwait
add
push
jmp
adc
pushl
mov
in
pop
ja
mov
ja
enter
jp
pushf
adc
and
loop
dec
aas
sub
jne
addr16
orl
dec
xchg
das
push
pop
ficompl
cli
and
jl
xchg
fmul
mov
int3
test
cli
popf
mov
mov
jns
push
pop
mov
cmp
loop
ret
jo
jns
sahf
movsl
mov
scas
sbb
mov
add
inc
dec
stc
and
in
xchg
ljmp
test
dec
imul
out
cmp
stc
fst
adc
jg
js
mov
adc
scas
xor
jecxz
pusha
add
sub
pop
inc
mov
lcall
fildll
xchg
push
dec
jl
bswap
push
neg
arpl
jbe
pop
clc
test
push
pop
sub
ja
scas
xor
cld
pushl
mov
hlt
inc
pop
subl
notl
lret
or
outsl
popa
adc
lcall
or
aam
sub
stos
loop
adc
dec
call
incl
jmp
leave
pop
lret
into
sbb
sub
imul
inc
loope
pop
inc
out
ljmp
mov
movsl
push
insb
das
outsl
sbb
sub
pop
or
fsubs
bound
test
adc
cmp
jae
jne
mov
mov
test
pushl
clc
lds
pushf
add
xor
je
cld
or
xor
mov
mov
hlt
call
scas
sbb
notl
das
movsl
mov
cmp
inc
inc
ljmp
in
jle
ret
xor
adc
aas
push
insl
adc
stc
lret
adc
mov
dec
xchg
notl
sbb
test
jmp
mov
and
dec
ljmp
test
aad
push
cmpsl
ja
add
push
dec
mov
jg
mov
mov
sar
stos
push
or
mov
fildl
or
mov
mov
xchg
mov
jmp
adc
jne
or
incl
inc
and
stos
sub
mov
daa
enter
ljmp
or
aad
push
jbe
add
sub
jg
pop
sbb
hlt
pop
dec
mov
xor
movsb
lds
mov
fildl
imul
pop
cli
ljmp
mov
in
cltd
push
xchg
lcall
pop
stos
popf
jge
jg
out
mov
popa
push
aaa
bound
pop
jecxz
cld
ljmp
mov
push
sub
mov
fdivs
incl
lds
daa
fsubrp
call
inc
inc
push
out
adc
divb
fimuls
ret
ljmp
icebp
aaa
int
test
stos
cmp
or
lret
jmp
testl
lcall
dec
jb
iret
dec
adc
aam
call
jg
mov
xchg
in
or
fnstsw
push
gs
mov
lcall
pop
out
mov
pop
jmp
test
adc
xor
fildll
rol
daa
sub
jbe
js
out
pop
jl
fisttps
ljmp
loop
mov
sub
mov
and
jg
pushl
das
mov
imul
and
mov
mov
test
scas
adc
and
pushl
gs
mov
mov
xchg
dec
cld
loop
lods
mov
loope
cmp
jmp
fistpll
mov
mov
cmp
inc
data16
test
xor
ljmp
icebp
lahf
cmpl
adcl
mov
fnstcw
push
repz
sub
fcoms
ljmp
or
enter
lods
cltd
dec
pop
clc
cs
sub
addr16
test
pop
call
push
enter
dec
inc
dec
popf
pushf
aaa
outsl
jle
mov
out
decl
sahf
popf
jp
pop
mov
mov
loope
or
xchg
sbb
icebp
ja
or
orl
insb
or
fmul
int
lret
dec
repz
add
cmp
fidivrl
jl
lds
jns
push
mov
or
sub
xchg
sbb
imul
push
ss
aaa
inc
mov
or
xchg
sarb
call
pop
ret
in
mov
iret
and
mov
xchg
dec
push
dec
enter
jge
popf
xor
ljmp
lcall
mov
std
pop
ljmp
xchg
rep
inc
pushl
mov
icebp
and
pop
cli
aam
sub
cmp
hlt
jne
or
cmp
jbe
mov
test
dec
repnz
mov
inc
scas
into
das
fidivs
lods
pop
orb
cmc
call
mov
mov
frstor
and
test
popa
jmp
xchg
scas
andl
decl
clc
xor
inc
iret
sub
lahf
cmpsl
dec
test
push
ret
sub
std
js
jnp
int
ds
loop
mov
bound
subb
jnp
sub
push
adc
decl
inc
adc
xchg
ficoml
push
jmp
imull
sahf
jnp
pop
call
or
shl
xchg
xchg
sti
fldt
fbstp
pop
mov
push
int3
add
pop
sti
sub
mov
aaa
daa
insb
jle
ljmp
jmp
sbbl
jg
rclb
push
dec
sbb
add
mov
cmpb
incl
lret
or
aas
sub
mov
jmp
jo
mov
or
call
mov
adc
call
jo
xor
adc
out
daa
jo
jno
dec
pop
shll
out
or
and
sbb
or
lcall
loop
test
in
xchg
dec
mov
cmc
add
movsb
mov
idiv
push
addr16
testb
inc
pop
sub
sbb
lods
roll
in
xchg
pushl
xchg
aam
xchg
leave
add
mov
decl
test
test
addl
mov
jns
cs
or
fistpll
cld
mov
lock
nop
xchg
pop
into
movsl
and
adc
dec
popa
pusha
or
das
xor
ja
pop
add
sub
stos
jmp
shlb
ja
push
hlt
call
mov
loope
dec
outsl
std
jge
shlb
jns
scas
repz
mov
dec
fdivrl
lods
push
dec
inc
push
and
inc
hlt
add
ret
mov
call
pop
add
add
push
mov
jg
mov
fwait
jmp
fsubs
mov
jnp
insb
add
push
and
lcall
xor
pop
test
mov
push
jae
pop
mov
arpl
pop
or
sbb
gs
imul
mov
cmpsl
and
mov
arpl
lcall
fldt
lods
ja
ljmp
xchg
cld
adc
cmpb
loop
cmp
and
call
cs
scas
sub
jo
jge
maskmovq
divl
ljmp
sbb
stos
cmp
nop
lock
lea
fwait
xor
sbb
fcompl
push
pop
mov
mov
in
jp
or
sbb
je
cs
mov
dec
notb
lret
and
lock
xlat
xor
clc
push
fidivrl
das
cmc
ds
std
mov
fimuls
ljmp
pop
mov
mov
mov
xchg
inc
mov
cwtl
and
in
sar
mov
lcall
into
and
clc
mov
lcall
mov
jmp
mov
jg
mov
xor
mov
pushw
pop
sub
sbb
std
decl
sub
mov
pop
jb
xchg
and
fnstsw
xchg
outsl
cld
incl
out
ljmp
loopne
aaa
cmpsb
push
push
negl
mov
dec
inc
pop
push
sub
fistpl
inc
data16
jae
divl
dec
xor
jg
jmp
fbstp
add
aas
ja
inc
sar
xchg
push
imul
pop
lods
sbb
sbb
pop
sbbl
xchg
cmp
mov
xchg
push
ljmp
jg
xor
jae
loope
les
add
insl
shlb
imul
xorl
xchg
fiadds
pushf
xor
repnz
call
mov
aad
pop
or
mov
xor
mov
push
dec
fsts
std
jecxz
or
or
xchg
sub
mov
mov
dec
hlt
clc
dec
mov
cmp
stos
pushl
jge
rcrb
sbb
lcall
std
call
rolb
popf
sub
ss
lock
cmpsb
addr16
divb
cltd
das
inc
in
ret
nop
scas
lds
cmp
les
ljmp
or
mov
mov
addr16
jg
mov
add
fistps
int3
jl
and
mov
cltd
pop
sbb
push
push
popa
mov
out
hlt
adc
adc
and
push
sub
ljmp
fbstp
out
or
and
ljmp
jl
push
cmp
add
or
pop
mov
mov
pop
jnp
es
mov
mov
aad
mov
push
es
cmc
sbb
and
push
iret
in
xlat
pushf
mov
cmp
mov
cs
addr16
push
stos
jl
das
sbb
or
call
test
out
lret
in
xchg
jmp
shrl
jno
addr16
xchg
jp
sbb
fldt
leave
fnclex
dec
cli
push
movsl
aad
fidivs
or
sarl
in
xchg
jnp
in
cmc
lcall
outsl
push
cmp
out
mov
push
mov
mov
cwtl
pop
es
testl
jle
lahf
lods
aaa
jg
mov
mov
mov
cld
adc
aas
sbb
shl
repnz
bound
sbb
clc
cmp
dec
or
aaa
jge
xor
dec
xlat
add
jg
pushf
ja
cmpsb
push
add
push
stos
cwtl
dec
mov
cld
pop
int
push
int3
imul
jae
mov
fidivrl
shlb
pop
cld
adc
add
lds
sar
mov
sbb
dec
jo
es
ljmp
stos
dec
clc
stc
inc
jns
xor
stc
jecxz
push
leave
ljmp
push
sbb
cmc
ret
ljmp
imul
xchg
lret
pop
test
jae
aad
or
push
fbstp
mov
push
or
sub
xchg
mov
inc
xor
clc
mov
out
aad
popa
mov
outsl
roll
lods
mov
stos
psubusb
out
jg
pushl
ret
inc
lds
movsl
fists
test
xchg
loope
pushl
cli
cmp
aad
into
shrb
scas
push
inc
mov
pop
cltd
aas
pop
push
scas
aaa
mul
call
call
jmp
push
push
mov
cltd
xchg
push
test
mov
gs
clc
pop
std
call
push
dec
lret
xchg
dec
es
ss
out
out
popa
fdivrs
dec
adc
add
out
cmp
and
ljmp
je
pop
js
and
test
hlt
call
int3
sbb
fstp
lods
push
mov
mov
arpl
sarb
dec
int3
lds
aad
jmp
mov
jecxz
notb
popf
xchg
push
inc
inc
jg
fildll
out
mov
jbe
scas
mov
and
stos
sbb
rcl
incl
test
test
stos
push
popf
mov
lcall
mov
xchg
out
sbb
xchg
sbb
and
in
pop
or
mov
test
jge
cmp
mov
or
sti
lcall
adc
dec
movsb
dec
mov
out
mov
jmp
stos
cwtl
iret
cld
inc
es
jge
cmp
dec
inc
mov
bound
mov
mov
dec
stos
movsl
mov
push
pop
mov
fdivl
push
mov
mov
ljmp
xor
jne
and
jno
xchg
andb
or
js
xchg
push
dec
scas
aas
ljmp
icebp
lcall
ss
jg
push
and
movsl
daa
mov
inc
mov
mov
add
and
idivb
adc
add
ljmp
xor
popf
incl
xor
shrl
or
cmpsl
xchg
nop
jnp
mov
and
sbb
int
cmpsb
mov
test
adc
jp
sbb
sbb
scas
shr
jle
rcrl
ljmp
mov
cs
or
cmc
adc
ljmp
aad
fadds
xlat
jl
or
or
adc
cmc
mov
test
mov
dec
orl
sahf
data16
fdiv
mov
mov
pop
outsb
mov
jns
jmp
xchg
sub
jmp
cmp
push
mov
fwait
xor
cmp
dec
inc
add
mov
cmp
nop
mov
test
xor
sbb
inc
jg
decl
loopne
cmp
ret
xchg
nop
mov
test
pushl
cli
jmp
mov
adc
js
fstps
pop
xor
cld
movsl
mov
lea
iret
mov
int3
ljmp
jmp
mov
xlat
cmp
jns
scas
fdivrp
fstps
insl
xchg
push
aaa
or
fnstsw
out
mov
sahf
mov
cld
push
cmpsl
call
fucomip
dec
sbb
outsl
lahf
icebp
test
out
mov
inc
sbb
fucom
jl
imul
cmp
lods
mov
stos
mov
add
outsl
call
add
sub
orl
leave
pop
jmp
stos
popf
mov
mov
outsl
xchg
cmc
lcall
mov
ljmp
jle
lret
push
jo
adc
enter
jb
and
fcmovbe
mov
push
jg
xor
and
pop
loop
repz
btc
call
jg
add
xor
sbb
or
xchg
insb
mov
ds
lea
sbb
sbb
int
dec
stos
aam
sar
imul
call
and
xor
inc
inc
out
push
out
daa
ja
sub
lock
call
lret
pop
jmp
inc
movsl
mov
mov
push
adc
inc
fs
call
mov
shlb
push
xchg
imul
and
lcall
mov
sub
and
das
and
ret
pushl
sub
arpl
rcrl
mov
sar
add
mov
cmpsl
das
mov
clc
push
adc
lcall
pushl
rcr
mov
push
ds
hlt
push
jae,pt
dec
xchg
insl
dec
ss
dec
pop
gs
in
fwait
call
incw
sbb
pop
cltd
cmp
jae
test
movsl
call
out
push
je
bound
jae
add
mov
pushl
push
add
sub
push
repz
lods
push
mov
dec
les
fldl
pop
std
sbb
clc
ljmp
xor
mov
pop
inc
pop
popf
das
mov
pushl
xor
xchg
mov
call
faddl
push
jg
stos
cmp
data16
jns
cli
sub
test
lea
lods
pusha
mov
ret
arpl
pop
aam
push
mov
xchg
ret
icebp
mov
les
notl
xor
in
push
cmc
pop
bound
and
repz
cld
ljmp
push
jecxz
aaa
loopne
xor
rorb
jns
mov
mov
cli
lahf
dec
aad
lahf
push
xor
nop
sti
in
call
sbb
dec
faddl
insl
pop
cmp
mov
push
ror
lcall
imull
mov
out
in
es
pop
dec
inc
push
sub
push
in
outsl
mov
lock
jg
pop
sub
js
in
xchg
sub
in
jmp
popa
dec
repnz
int
ficoml
fldcw
mov
jmp
std
aad
lret
mov
icebp
cmp
xchg
mov
shl
mov
lods
ds
insl
hlt
or
repz
insl
cmpb
fpatan
adc
cli
lcall
inc
mov
lods
std
lcall
test
inc
cli
mov
xorl
cmp
filds
mov
mov
jo
or
push
outsl
and
cli
jg
fnstcw
or
das
and
xchg
into
outsb
sbb
xchg
inc
xor
pop
pop
mov
gs
jns
jmp
mov
xchg
out
or
jg
xor
cmp
mov
jecxz
push
in
mov
cltd
stos
int3
inc
mov
jmp
push
xor
xchg
icebp
nop
cmp
push
or
ss
repz
stc
push
xchg
push
sahf
icebp
das
icebp
imul
push
mov
imul
call
ljmp
add
data16
add
outsb
jb
lcall
or
ja
test
outsb
dec
xor
divb
pop
sub
push
xchg
js
call
mov
loopne
aas
call
call
int3
adc
or
psrad
inc
add
pop
fcompl
scas
mov
pushf
rcll
xchg
incl
pusha
jg
inc
mov
jmp
push
dec
push
and
je
dec
adc
add
pop
ljmp
lods
mov
nop
push
dec
jecxz
push
jns
sub
mov
enter
popf
in
push
incl
and
stos
aam
lret
out
movsl
push
outsl
in
mov
pop
or
push
in
int3
inc
cmp
mov
out
pop
ficoml
mov
decl
mov
imul
mov
xchg
or
jle
push
test
mov
adc
xchg
iret
scas
jmp
test
pusha
cmp
adc
adc
dec
mov
xchg
scas
or
add
cmp
mov
ret
roll
pushl
rol
inc
les
hlt
mov
adc
out
mov
jg
call
and
mov
call
jbe
mov
cmp
cmpsl
sarl
mov
test
outsb
fwait
repz
inc
pop
call
mov
iret
xor
shrl
and
xor
cmpsl
mov
lcall
mov
dec
fistps
push
scas
adc
jp
insl
dec
shrb
ret
mov
sbb
lcall
cmp
inc
push
pop
shrb
aad
push
pop
xor
fs
dec
adc
push
mov
sar
mov
imulb
call
popf
mov
xor
test
jne
decl
clc
push
jnp
mov
addr16
mov
por
push
fmuls
inc
jae
push
decl
xchg
std
push
push
sub
sbb
sarb
lcall
add
gs
inc
out
sub
inc
dec
and
mov
cmp
out
dec
dec
add
aaa
jo
sahf
mov
nop
sub
mov
and
out
movsb
inc
fsubl
sub
cltd
xchg
ljmp
push
sbb
mov
pusha
adc
pop
and
das
xor
gs
stc
mov
lret
mov
pushl
fwait
ret
mov
testl
jmp
pop
cmp
inc
scas
insb
lcall
sbb
int
lods
insl
test
pop
dec
repnz
ljmp
inc
cmp
sub
pop
mov
loop
cmc
scas
aam
mov
cmpsb
call
test
xchg
mov
sti
sub
out
andb
pop
popf
cld
cmpsl
fidivrl
sti
outsb
lods
mov
xchg
push
push
jg
sti
cmp
call
add
in
mov
xor
arpl
pop
call
cli
jg
cmp
push
mov
rcl
push
stc
lods
cwtl
mov
fstpt
pop
mov
ljmp
sbb
jl
cmp
in
add
es
inc
jg
inc
jecxz
push
shll
jp
ror
sbbb
bound
out
shlb
lcall
cmpl
mov
fimuls
sbb
stos
sar
push
lea
xchg
stc
out
mov
cmp
lods
ss
mov
repz
and
hlt
cmp
loopne
mov
clc
out
mov
insb
cmp
fnsave
push
js
stc
sti
mov
gs
pinsrw
aad
icebp
xlat
mov
pop
incl
stos
ret
orb
add
adc
cmpb
aam
aam
test
pop
loop
lret
mov
push
in
fucomi
adc
insb
jl
cmp
test
mov
arpl
cmc
lahf
sub
jbe
mov
dec
das
mov
jg
sub
mov
pop
add
jns
les
sahf
movsl
std
mov
mov
adc
inc
ret
test
shll
sub
in
xchg
add
clc
call
lea
jo
cli
adc
and
mov
ret
sbb
sbb
call
mov
repnz
ds
mov
icebp
jns
dec
inc
out
jne
movsl
jmp
fninit
sbb
xor
fs
add
sbb
mov
fisubrl
decl
jl
mov
aas
idiv
adc
repnz
mov
xchg
bound
decl
push
inc
repz
mov
xor
addr16
out
sbb
loop
or
mov
fwait
dec
fstpl
stc
out
scas
dec
pop
jmp
aam
ja
pop
repnz
jg
and
xchg
enter
cli
mov
cs
mov
cmovne
jg
aaa
fdivrp
ljmp
cmc
or
js
xlat
ret
clc
adc
leave
out
xchg
jnp
xlat
mov
mov
ljmp
mov
push
push
and
jp
sar
jmp
inc
js
outsl
pop
addr16
push
rclb
aam
and
mov
adc
dec
sub
jb
mov
daa
sub
mov
pop
andb
call
push
or
mov
andb
cli
and
sbb
inc
call
bound
dec
shll
mov
out
mov
sbb
and
decl
popf
add
jne
aam
adc
and
and
sti
pop
ret
stos
pop
mov
mov
clc
mov
dec
cmp
xchg
es
mov
jg
cmp
cmc
ja
aad
jns
and
test
repz
addl
sti
stos
lods
mov
popf
jne
push
scas
cld
add
rcr
adc
cmp
and
mov
decl
rcll
shlb
stos
out
cmp
mov
pop
clc
test
mov
fsts
das
in
jl
std
pushl
cli
push
and
xor
adc
repz
cs
sbb
dec
xchg
outsl
mov
test
les
mov
decl
mov
jne
sbb
mov
and
inc
push
mov
jle
mov
call
mov
in
push
lds
cld
dec
jl
inc
outsb
lock
incl
pushf
adc
fbstp
lds
mov
and
into
popa
xchg
push
mov
std
shrl
ss
pop
clc
outsl
lock
or
std
mov
cmp
imul
decl
call
pop
loop
jne
mov
sbb
lcall
std
jbe
dec
lcall
das
mov
filds
data16
cwtl
ljmp
dec
fldl
fucomip
fucomip
sbb
stos
in
sub
jae
int
xchg
divl
fisubl
test
sarl
mull
cld
nop
push
or
and
test
or
outsl
icebp
jmp
pop
xor
or
lods
dec
ret
dec
xorl
movb
paddsw
out
push
or
clc
stos
add
xchg
dec
add
adc
imul
xlat
pop
jno
imul
mov
jg
outsl
inc
jle
mov
jb
negl
loope
in
decl
shll
pushf
pop
iret
mov
dec
outsb
ss
fildll
aad
cld
incl
xchg
mov
add
fiadds
fldt
inc
imull
out
dec
cld
mov
pop
push
jle
iret
pop
inc
imul
dec
cli
mov
mov
mov
add
cmc
sub
cmpsb
adc
pushl
cld
fcomps
rcl
xchg
xchg
adc
cwtl
aad
popf
dec
leave
pop
adc
sub
push
std
aam
pop
pop
jl
cld
sbb
mov
inc
mov
push
sub
sub
incl
movsl
call
lret
neg
daa
cmp
pusha
adc
pushl
pop
adcb
imul
dec
jmp
ficoms
imul
pop
repnz
ss
std
call
das
dec
jo,pt
and
imul
nop
dec
pop
xor
lcall
jb
push
jae
dec
xor
daa
sub
sbb
cltd
in
mov
dec
rolb
out
cmp
mov
inc
lods
add
mov
xchg
and
jl
or
bound
call
pop
loop
dec
pop
sahf
push
stos
and
xchg
out
mov
sbb
sbb
push
xchg
jne
icebp
mull
out
mov
mov
jg
lods
notl
out
cli
fcoml
dec
sub
push
cmc
xor
push
mov
adc
in
pusha
pop
mov
jp
call
add
mov
lds
pop
cld
sti
inc
sub
ret
cmp
ljmp
or
bound
out
and
aad
jae
fstpt
adc
ljmp
arpl
lret
pop
xchg
sbb
and
mov
call
or
dec
dec
jns
or
dec
jbe
aad
sbb
shl
jg
add
push
lahf
mov
sbb
into
daa
push
jae
out
adc
cmp
jg
jge
push
movsl
push
jae
pop
push
loop
data16
psubw
xor
cs
ret
adc
xlat
insb
jge
decl
addr16
test
xlat
cmp
sbb
inc
mov
mov
sub
fsubl
decl
std
decl
xchg
adc
adc
dec
push
mov
mov
inc
icebp
decl
pushf
insb
test
add
jmp
or
pop
cld
pop
and
mov
mov
sar
cli
inc
in
pop
and
or
testb
call
insl
call
ret
inc
cmc
stos
cmp
int3
inc
push
lcall
add
pusha
fildll
data16
mov
add
pop
loop
incl
rolb
out
dec
sub
mov
arpl
decl
xchg
mov
xlat
xor
inc
mov
adc
xchg
ljmp
and
pushl
in
jmp
mul
push
mov
rolb
ljmp
mov
test
cmp
call
add
mov
test
idivb
or
cs
add
pop
fstps
sti
adc
jae
mov
in
addr16
aam
xchg
rolb
lods
sbb
or
mov
lret
in
lock
lea
jl
fcomip
mov
gs
mov
shl
pop
xchg
insl
cmc
pop
test
imul
ljmp
rcl
inc
push
xchg
and
cli
or
cmp
jg
fists
in
add
or
hlt
sbb
sub
icebp
push
mov
push
push
xchg
xor
clc
sub
jl
mov
ljmp
fmuls
std
mov
scas
sahf
fwait
sub
mov
es
decb
dec
add
ljmp
mov
cwtl
fsts
data16
jmp
outsl
imul
add
daa
jmp
iret
mov
rorl
roll
push
mov
std
decl
jg
and
adc
push
push
out
sub
mov
call
adc
cmpsl
jbe
jmp
fmull
in
mov
add
lret
loop
sub
mov
push
dec
inc
mov
idiv
mov
pop
fsts
and
lods
push
addb
dec
jg
movsb
jg
push
aad
movsb
xor
or
lea
dec
pop
imul
dec
ja
js
mov
test
adc
pushf
push
outsb
test
cli
je
inc
mov
and
shll
xchg
test
adc
testl
cltd
addl
push
and
sbb
ljmp
dec
popf
jg
clc
lcall
mov
ja
sub
inc
rolb
ljmp
xor
xor
fadd
xchg
jns
into
jge
sub
inc
lret
stos
adc
lcall
jge
mov
leave
jbe
sbb
cwtl
ljmp
fldl
std
lcall
cli
outsl
pop
test
imul
cmp
loope
enter
mov
cmp
cmp
lea
std
or
mov
hlt
dec
lock
inc
stc
mov
xchg
pusha
push
mov
lret
lock
lcall
nop
mov
sbb
push
mov
jns
or
icebp
inc
test
sbb
std
mov
cs
xchg
lods
push
inc
push
push
push
jnp
fldt
int3
cwtl
iret
stos
test
pushl
sbb
push
fadd
and
mov
stc
pusha
mov
mov
jge
gs
iret
mov
aad
call
jo
inc
pop
mov
stos
cltd
insl
mov
xchg
inc
rclb
mov
pop
cld
incl
pop
cmp
mov
mov
xchg
lock
sbbl
icebp
shlb
jl
aad
mov
stos
out
imul
fcomps
dec
push
or
mov
jge
lds
mov
mov
sarb
xor
pop
clc
inc
clc
cwtl
pop
pop
xchg
loope
and
lret
es
negl
idivb
push
jg
sbb
jg
iret
lahf
out
adc
in
mov
xchg
decl
cmpsl
xor
lahf
dec
cmpsb
jb
xor
or
nop
fsubs
mov
cmp
xchg
lods
out
sti
dec
fildll
mov
in
js
add
push
adc
call
mov
jo
or
pop
rolb
fisubrs
lcall
mov
mov
fstpt
iret
mov
stc
stos
js
xor
lods
repz
mov
rorb
push
xrelease
clc
sbb
das
ficoms
ss
daa
lods
addr16
pusha
cmp
scas
inc
jle
sti
popf
pop
xorb
jecxz
dec
mov
mov
icebp
adc
jmp
ds
pop
ds
or
jg
cmp
jns
push
cmpsl
loop
sahf
test
xchg
in
popf
lahf
add
push
push
dec
std
sbbl
sbb
jmp
test
or
or
je
jne
add
mov
ret
add
fcomps
incb
pop
outsb
shl
pushl
xor
cli
adcl
or
in
sub
popa
or
fnstsw
push
cmp
cmpsl
mov
mov
push
mov
mov
mov
inc
cltd
and
shll
jmp
test
jp
mov
mov
cld
push
xor
mov
jae
arpl
lahf
rcr
ljmp
fnstcw
lcall
fimull
out
adc
and
pop
clc
ljmp
mov
in
popa
xchg
push
aaa
mov
pop
cmp
xor
movsl
mov
cmc
incl
mov
add
sahf
mov
lret
xchg
jne
fimull
in
mov
lahf
pop
or
addr16
std
sahf
stos
into
sarl
mov
push
scas
outsb
mov
pushl
call
push
push
inc
jb
xchg
xor
and
movb
fs
cmc
fildll
push
mov
aas
fildll
dec
mov
push
ja
mov
fucomi
call
lds
jg
or
mov
adc
mov
loop,pt
lcall
repz
lea
jmp
lahf
dec
dec
mov
imul
fsubl
shrl
ret
call
imul
add
pushf
jge
subl
ljmp
in
pop
inc
mov
push
fs
jnp
in
inc
push
and
lret
add
mov
xchg
cmp
lock
mov
mov
in
js
scas
fildl
ss
mov
pop
gs
jmp
out
push
stos
repz
cmp
pop
push
sti
xlat
lcall
stos
lcall
clc
daa
loope
jp
jae
mov
add
call
pop
repz
push
loop
pop
pop
adc
imul
sbb
movsl
ljmp
shll
and
int3
mov
shlb
mov
mov
adc
stos
jg
jmp
fisttps
scas
popa
mov
or
push
imul
sub
fwait
mov
mov
aas
stos
call
clc
or
and
lret
xchg
mov
jns
pushf
xchg
std
inc
cli
incl
das
pushf
in
fwait
in
sti
xor
roll
jmp
mov
das
adc
pusha
ja
pusha
sub
out
in
xor
shrl
ljmp
aam
scas
fwait
mov
out
add
jns
mov
push
inc
xchg
pop
das
cld
adc
repnz
cmp
test
test
pop
imul
push
cltd
jne
mov
call
add
rclb
scas
out
scas
dec
mov
push
roll
jg
ljmp
push
push
push
cmc
test
jmp
add
insw
adc
and
into
in
lret
jmp
xchg
sti
mov
sbb
lea
adcl
sbb
repnz
cmpl
cmp
add
scas
push
dec
push
xchg
jmp
repnz
mov
mov
add
sub
pop
arpl
movsl
rorb
inc
rclb
adc
fdivrl
xchg
mov
test
call
outsl
cltd
pop
sub
jnp
mov
out
cwtl
shlb
fildll
stc
jle
decl
js
xor
sbb
jg
idivl
insb
loop
mov
mov
xchg
mov
add
roll
enter
aaa
xchg
mov
cli
lahf
cmp
sti
sbb
inc
jmp
mov
fs
gs
lods
dec
cld
mov
jg
jg
inc
inc
and
cmp
outsl
jb
in
sub
fcoml
lock
push
lret
shlb
pop
mov
sbb
mov
lcall
arpl
insl
add
adc
das
notb
insl
jno
test
sbb
and
xchg
dec
orl
mov
jmp
mov
mov
aad
repz
insl
sbb
pop
ds
push
call
sub
or
mov
fildll
xchg
push
mov
mov
push
pushl
inc
mov
imul
das
push
dec
jg
dec
push
fbstp
icebp
ljmp
lcall
ja
aaa
and
jmp
cmp
in
dec
daa
adc
lcall
sub
xor
stos
testl
push
std
adc
mov
push
daa
push
jg
mov
or
sar
ljmp
lock
xor
add
inc
xchg
sarl
jl
xchg
mov
nop
or
mov
jbe
repz
inc
in
icebp
xchg
add
sub
and
fwait
mov
jo
jg
sbb
gs
mov
xchg
dec
in
mov
cli
and
sti
aaa
enter
fisubrs
mov
pop
cld
push
jnp
jns
jmp
ret
clc
fwait
ds
push
loopne
and
insl
fisubrl
sbbb
push
mov
dec
in
stos
xor
dec
out
movsb
mov
lcall
mov
mov
test
or
adc
pop
loop
call
sbb
mov
cmp
lock
in
aad
jg
dec
mov
loope
sbb
xor
es
ficoms
les
mov
bound
mov
push
xor
push
aas
outsl
pop
loop
cmp
pusha
iret
push
cmp
aad
inc
pop
dec
stc
mov
xchg
or
pop
ljmp
inc
sub
outsb
inc
movsl
mov
pop
xchg
das
cmp
push
and
repz
xchg
push
icebp
call
add
jmp
mov
pushf
cmp
clc
pop
add
sti
ja
mov
jge
test
jmp
sbb
sti
movb
inc
sbb
cmpsl
xchg
inc
movsl
movb
pop
test
das
icebp
sub
mov
mov
push
arpl
sub
sub
ja
jg
incl
add
and
pop
mov
fdivrl
pop
or
int3
sbb
adc
lcall
xchg
test
lret
jbe
mov
jmp
mov
sub
xchg
sub
mov
sahf
ljmp
pushl
dec
push
mov
mov
out
cmp
cmp
shl
sbb
inc
sub
incl
push
push
std
out
adc
dec
push
lock
das
mov
in
cmc
gs
jg
fxam
testl
and
arpl
adc
mov
push
outsb
xchg
gs
mov
lock
jg
inc
mov
adc
xchg
shrb
push
jb
push
inc
adc
incl
push
lret
xchg
icebp
stc
dec
sbbl
das
adc
ljmp
das
lock
pusha
clc
or
ds
out
repz
sub
pop
insb
or
decl
js
lret
lds
orl
xchg
lret
enter
decl
cld
ljmp
xchg
shll
int3
fsubr
cmp
lcall
push
jmp
jge
xor
int3
daa
icebp
inc
mov
rclb
std
stos
sub
jg
call
inc
pusha
push
fimull
lock
mov
lahf
cmpsb
adc
jmp
jo
or
pop
les
pop
dec
es
add
cwtl
lods
jmp
clc
cltd
lret
out
roll
cmc
pop
push
lcall
xchg
sbb
mov
out
cmp
sahf
test
push
aaa
negl
mov
test
push
adc
push
frstor
call
imull
sub
std
ljmp
xor
add
test
out
and
loopne
pushl
mov
test
mov
pusha
push
mov
or
das
rolb
push
pop
mov
repz
sub
into
sar
mov
test
mov
lret
push
pop
lret
add
data16
ret
fcoms
icebp
pushl
lock
mov
fidivs
xchg
push
dec
sahf
pusha
push
decl
dec
sbb
sbb
mov
cmp
pushl
stos
repnz
adc
pop
rorl
mov
jp
call
clc
lahf
mov
dec
jmp
mov
mov
dec
negl
or
push
daa
cmp
pop
xor
inc
xor
pop
cli
sub
sub
shll
mov
pop
loope
daa
inc
or
outsl
cld
incl
es
push
cmpsb
fidivrl
cld
clc
insl
mov
cmc
add
push
sub
notb
aaa
test
loop
sub
push
push
shl
insb
das
jbe
ret
addr16
inc
xlat
lcall
sbb
lcall
cmp
clc
enter
scas
xchg
inc
decl
xlat
aad
dec
hlt
pop
pop
loop
sti
and
add
in
mov
decl
adc
sti
les
cmp
ficoms
imul
adc
jns
inc
call
ljmp
dec
fdivrs
sub
mov
je
sti
into
fidivrs
clc
xchg
bound
insl
mov
fcmovb
ljmp
stos
popf
lcall
mov
loopne
imul
jmp
sub
in
and
sub
sbb
dec
sar
dec
test
push
mov
ret
lods
je
lods
or
ret
lahf
jp
jle
loopne
popa
jne
jnp
cmp
or
outsl
cld
pushl
mov
fstps
mov
push
jno
mov
ljmp
push
icebp
mov
mov
xlat
push
pop
fsubl
aam
mov
lcall
call
test
mov
adc
and
jle
cmp
movsl
jp
jnp
cmp
pop
mov
clc
jge
push
into
idiv
lea
sbb
cmpsl
pop
pop
xor
push
or
ljmp
aaa
in
ret
in
test
pop
mov
push
ljmp
imul
pop
out
dec
sub
rolb
xchg
subb
mov
cltd
xlat
loopne
sbb
mov
das
xor
aam
mov
xor
test
cwtl
push
scas
push
push
mov
int
jg
mov
xchg
scas
sbb
inc
xchg
push
mov
add
xchg
pusha
mov
lcall
cmpsb
std
add
sarb
out
mov
pop
pop
pop
fdivr
xchg
mov
in
mov
adc
jmp
sub
sbb
cltd
mov
sub
pushl
mov
stos
jge
xchg
lea
sub
pusha
adc
insb
jmp
dec
loopne
loope
cmp
mov
sarl
daa
ljmp
jmp
repz
xchg
lcall
outsb
sbb
inc
cmp
pusha
imul
int3
dec
test
rcr
call
outsl
mul
popa
sub
imul
sbb
cmp
mov
xchg
cmp
xor
cmp
or
inc
jg
dec
jecxz
dec
adc
sbb
xlat
ja
das
push
clc
jg
fnstsw
xchg
push
add
iret
or
add
push
lock
lock
jmp
jl
cmp
outsb
fcmovnb
cmp
adc
jmp
mov
push
cs
mov
mov
sub
push
pop
mov
adc
cmpsb
decl
jge
adc
ljmp
cld
outsl
mov
push
mov
jecxz
std
orl
cmp
jmp
test
aaa
adcl
scas
repz
ret
jns
inc
subl
mov
in
push
cmc
push
xchg
mov
je
sar
xor
in
out
mov
shlb
addr16
hlt
or
push
pop
pop
sbb
add
mov
xor
adc
ljmp
fiaddl
mov
daa
imul
repz
cmp
fnstsw
jmp
mov
mov
mov
sbb
xchg
or
pop
clc
cwtl
push
pop
cmpsb
xchg
sbb
dec
and
xor
and
pop
std
or
mov
rolb
mov
cld
out
fbld
sub
push
ljmp
test
incb
sbb
sti
dec
push
xchg
mov
leave
fxch
mov
xchg
movsb
xchg
ss
aam
and
push
mov
jns
shlb
inc
jb
cmc
or
hlt
arpl
jno
scas
sbb
inc
cmp
lcall
push
jbe
test
fnstcw
and
mov
xor
jns
arpl
loop
idiv
lea
shlb
mov
inc
mov
xor
lea
ljmp
mov
aas
dec
std
sub
cmp
sbb
test
ljmp
loopne
jecxz
stos
test
push
adc
loop
adc
not
pop
cld
xor
push
fnstcw
jbe
mov
pop
int3
pushl
sbb
rol
and
mov
xor
mov
xor
xchg
dec
cmp
hlt
imul
int
ds
cmp
test
inc
outsl
add
sbb
pop
mov
in
lock
shl
jb
popl
xor
jle
mov
mov
inc
scas
adc
ret
xor
push
dec
mov
das
hlt
sarb
or
ret
popa
jb
fsubrl
sub
in
ficoms
adc
outsb
jp
dec
pop
mov
mov
fstpl
aam
clc
mov
fistpll
add
pushl
xchg
xor
mov
fcomps
aam
clc
xor
leave
dec
lea
decl
push
mov
jg
and
jo
stos
xchg
pop
add
mov
mov
jge
movsl
shr
shrl
push
sub
mov
mov
xchg
aad
loop
cmp
or
loopne
pop
jl
call
and
and
xchg
jae
insl
es
test
jg
and
jecxz
in
pop
fisttpll
fwait
cltd
inc
or
sub
mov
jno
jmp
pop
test
dec
jo
ds
leave
sbb
mov
sahf
adc
xchg
mov
mov
mov
adc
pop
cltd
sub
sti
repz
mov
adc
mov
mov
or
xor
pushl
and
int
insl
adc
mov
fmul
hlt
das
out
ljmp
dec
push
add
loope
repnz
fidivl
icebp
in
rorl
outsl
cld
push
imul
lods
mov
imull
sub
mov
cmpsl
cltd
xor
mov
int3
andl
or
jle
mov
xchg
xchg
xor
pusha
mov
lock
cltd
push
test
pop
je
inc
data16
sbb
xchg
hlt
pushl
inc
adc
jle
mov
jbe
aad
mov
test
daa
push
jge
cmp
or
ljmp
lahf
cmp
jle
ds
incb
data16
push
inc
push
xor
roll
push
scas
xchg
inc
call
cmp
test
jbe
mulps
in
lods
xor
test
or
pushl
clc
sub
or
xchg
sbb
push
cmpsl
int
cmp
adc
dec
xlat
and
mov
xor
pop
call
lret
push
cmp
adc
pop
mov
gs
and
andb
aam
add
icebp
jmp
shll
ljmp
arpl
cmp
incl
sub
add
push
cmpsb
xchg
out
repz
iret
dec
stc
repz
inc
call
push
xchg
pop
inc
cmp
call
jne
addr16
or
jmp
mov
lods
adc
lock
out
jno
xchg
fneni(8087
sbb
mov
add
adc
outsl
mov
sti
les
push
shrl
or
sub
push
mov
pop
jbe
sbb
and
add
sar
add
push
or
add
gs
sbb
pop
loopne
and
pop
lods
sahf
pop
or
and
lcall
movsb
xchg
sbb
add
cmp
outsb
xchg
mov
mov
dec
scas
add
pushl
sbb
mov
dec
jge
mov
test
add
gs
std
sub
dec
or
lea
ret
push
adcb
cmp
sub
sbb
adc
clc
dec
sbb
imul
lahf
adc
outsl
pop
clc
jg
cmpsl
stos
push
fcomps
and
mov
andl
xchg
jo
fistl
and
jg
xchg
inc
stc
adc
or
lcall
jnp
shlb
sbb
xchg
rolb
cmp
or
xchg
jp
mov
call
mov
mov
sub
pushl
test
nop
fcomp
test
rep
xchg
mov
pop
jg
pop
adc
movsl
les
xchg
pop
popf
mov
sub
lcall
into
es
ficomps
jg
xor
xchg
repz
xchg
cmp
xchg
js
fimuls
in
inc
lods
mov
repz
xchg
sub
jp
inc
pop
shlb
jmp
les
fbld
cmp
push
pop
mov
mov
xchg
cli
cmp
jb
or
imulb
push
aad
mov
pop
jg
pushl
daa
sbb
dec
loop
jno
xor
mov
call
xchg
cli
add
jne
mov
ret
incl
push
and
test
sub
cmpsb
dec
out
int
sbb
das
and
sbbb
sar
jg
stos
sahf
jmp
cmpsl
rorl
in
mov
incl
mov
popl
jecxz
ljmp
in
cmp
movsb
push
inc
cmc
and
adc
xchg
mov
movsb
incl
or
frstor
mov
decl
jg
cld
xchg
mov
and
fdivr
mov
fsubl
fnsetpm(287
test
sbb
filds
lcall
insl
xchg
icebp
ljmp
mov
ficoms
mov
mov
pop
cmc
rcl
out
fwait
scas
lret
mov
call
fsub
lret
and
repnz
data16
imul
popa
in
and
jns
sbb
ljmp
mov
shlb
push
notl
inc
inc
mov
jg
pop
cmp
cmpsl
cmc
add
sbb
lret
mov
lahf
arpl
and
stc
jecxz
lcall
incl
enter
push
mov
xchg
inc
fdivrl
stos
shll
lcall
mov
int
dec
adc
or
inc
push
xchg
aaa
bound
push
ffree
xor
fildll
inc
outsl
cld
fsubl
es
fsubr
test
adc
xchg
sub
jmp
enter
mov
orl
add
dec
and
sub
decb
dec
xchg
fidivs
xchg
xor
mov
cmc
adc
cmpsb
xor
mov
jmp
in
es
inc
fiaddl
xchg
rorb
lods
adc
jnp
mov
pushl
stos
mov
and
mov
movsl
std
adc
push
fcmove
mov
sarl
cmc
inc
add
dec
aam
xchg
jge
or
push
into
inc
adc
nop
movsb
xchg
pushw
fmuls
ljmp
and
mov
adc
leave
aas
adc
getsec
fiadds
loop
sub
adc
test
and
push
inc
or
push
cmp
xor
aad
cmc
pop
mov
fsubp
and
scas
stos
push
jg
dec
sbbl
push
cwtl
xchg
mov
mov
es
inc
mov
pushf
dec
ljmp
cli
xchg
mov
push
cmc
mov
mov
icebp
jmp
sub
jg
dec
sbb
movsb
mov
popa
movsl
dec
decb
dec
dec
jp
stos
push
jmp
out
pop
ljmp
out
mov
jne
jp
out
adc
inc
loop
jne
pop
std
decl
add
jg
daa
loop,pn
sub
and
mov
and
pop
out
enter
icebp
das
leave
enter
call
repnz
subb
inc
jmp
pop
inc
lcall
mov
popf
loopne
popa
es
mov
jmp
mov
add
and
insl
mov
pop
xchg
fstl
idiv
incl
mov
pusha
lds
dec
in
cld
add
xchg
inc
mov
inc
sbb
xlat
icebp
fistpl
ljmp
xlat
push
ja
rorb
pushf
adc
fdivl
das
sti
and
mov
call
movsb
xchg
stc
mov
sti
cvtdq2ps
pushl
mov
sub
cmp
mov
lods
xchg
mov
mov
push
xor
leave
mov
and
std
faddl
pop
notb
mov
out
push
push
cmp
loop
xchg
pinsrw
ss
call
pop
movsl
nop
in
mov
adc
add
xor
movsb
pop
xchg
jg
and
push
jne
mov
and
fcomp
repz
adc
cmp
fcomi
sarb
jg
sti
cmp
pop
rolb
cld
push
dec
push
xchg
jg
outsl
lock
add
add
ret
and
fistpll
add
dec
inc
and
add
shl
mov
in
xchg
xor
pop
adc
ljmp
sbb
adc
stos
jb
mov
mov
jne
sbb
popf
pushl
clc
mov
imul
push
lret
mov
out
push
mov
loop
inc
ljmp
inc
pusha
dec
dec
fsts
ja
xor
adc
jb
pop
scas
popf
mov
sub
dec
adc
lods
movsb
add
jnp
xchg
jnp
std
stos
mov
lods
add
push
cmp
mov
push
loopne
inc
lock
orb
movsl
mov
pop
pop
movsb
and
jns
adc
dec
imul
mov
or
mov
out
pop
cmp
lea
std
decb
inc
inc
jge
mov
repz
loope
sbbb
push
mov
es
jg
push
out
aam
sbbl
mov
push
inc
rorb
cs
call
fnstcw
ljmp
mov
and
mov
call
bndstx
mov
call
or
xchg
loopne
dec
mov
repnz
scas
push
sbb
incl
fimull
clts
movd
add
mov
ljmp
arpl
mov
inc
jmp
cwtl
int3
xor
and
xchg
out
sub
stc
mov
insl
cs
push
mov
dec
pop
adc
fdivp
xor
xchg
mov
mov
pop
jg
scas
dec
jecxz
fstpt
mov
cmp
movsl
loopne
clc
stc
loopne
lods
xchg
test
repz
lret
lcall
xor
ret
es
xchg
cmp
test
in
faddl
jp
jb
inc
sbb
fstpt
lods
jnp
pop
incb
mov
test
and
ja
push
sub
cli
subl
ljmp
xor
repz
aad
aas
cli
testb
xor
jmp
lds
xor
ffreep
lea
sub
fdivs
mulb
mov
pop
xor
sahf
adc
mov
cs
int3
lea
push
dec
push
loop
or
mov
mov
sub
or
mov
lcall
scas
xor
pop
inc
or
aad
sub
clc
ljmp
push
lret
mov
dec
sub
pop
mov
insb
mov
ja
aas
push
mov
pop
clc
pop
jb
jmp
les
dec
lcall
pop
loopne
loop
add
je
js
jecxz
xor
cmpl
or
jmp
outsl
mov
inc
and
cwtl
stc
rclb
test
decl
aam
adc
mov
gs
sbb
cmp
out
xchg
push
adc
push
mov
fstpl
pop
call
cmpsl
insb
arpl
xor
or
cmp
out
add
clc
xchg
sub
fcoms
inc
push
sti
jg
stos
aaa
sahf
push
cmc
mov
andb
xchg
pop
andl
je
dec
push
xor
add
sbb
dec
popf
push
xor
das
push
add
and
imul
inc
clc
mov
daa
in
push
dec
cld
mov
push
jns
movsb
movsb
mov
xchg
xchg
cmc
ljmp
jg
enter
mov
notl
mov
nop
cli
lea
dec
sub
filds
call
fpatan
sbb
dec
insl
push
dec
int
fdivl
stos
xor
popf
jmp
jno
aaa
clc
cmp
push
sub
das
mov
mov
mov
lods
out
dec
in
idivl
cld
dec
and
pusha
movsb
rclb
push
jl
jns
in
pushf
xchg
test
imul
pop
stos
std
fimuls
pop
push
call
jecxz
or
call
cmpsl
cmp
and
js
mov
mov
pop
ljmp
sbb
out
xchg
or
jo
or
lahf
mov
insl
rorb
enter
lcall
adc
iret
mov
daa
mov
jl
das
dec
or
mov
or
jle
jg
push
xchg
hlt
fisttpll
and
adc
iret
jl
rclb
adc
incl
jns
inc
repnz
fistps
adc
sub
out
sbb
nop
inc
jecxz
xor
ljmp
lret
mov
ret
xlat
mov
jecxz
push
or
decl
push
xor
or
movsb
icebp
jae
mov
leave
lahf
jle
clc
incl
cmpsb
out
mov
rcr
or
mov
int3
js
outsl
and
std
pop
cmp
icebp
je
pop
lods
lds
xlat
ret
outsl
es
mov
lret
arpl
sar
sub
sahf
sbb
not
cmpsl
rorl
cmc
outsl
decl
pop
mov
and
outsl
scas
push
das
in
pop
stos
xlat
xchg
enter
xor
mov
and
or
mov
cli
ret
push
cmp
lock
xchg
arpl
daa
or
mov
xchg
lcall
std
ret
mov
xchg
or
sbb
sbb
call
push
xor
pop
int
xchg
mov
movups
outsl
add
lret
cld
fstpt
push
ud0
decl
shlb
loop
lcall
ljmp
add
jae
mov
cmpsl
loopne
mov
inc
or
ficomps
movsl
adc
lods
inc
sbb
jae
xor
sub
jo
scas
inc
in
sub
ljmp
push
push
push
int
inc
sub
pop
push
je
jle
test
fistpll
stos
fisttpll
xor
std
pushl
xchg
mov
aam
xchg
jl
sbb
fnsave
pop
push
orb
imul
cmp
sbb
sub
mov
jge
test
scas
loopne
push
or
mov
vorpd
cmc
rolb
test
mov
aam
lock
and
push
xchg
push
mov
mov
adc
xor
sar
std
pushl
lret
negl
cwtl
jmp
repz
lods
outsl
mov
frstor
aas
fs
arpl
pop
fstpt
xor
mov
dec
fs
mov
or
mov
dec
mov
jne
pop
mov
notl
icebp
mov
decl
lret
aad
push
mov
add
data16
sub
test
ficompl
adc
xchg
das
lock
outsl
incl
cmp
cmpsl
add
or
sbb
pushl
mov
pop
int
sub
and
inc
sbb
sub
daa
dec
add
jmp
inc
cmp
sub
ljmp
push
bound
xor
mov
add
out
and
mulb
pushl
push
dec
lea
add
inc
jns
mov
mov
push
addr16
popf
rep
ret
inc
or
leave
stos
fwait
cmc
scas
push
xchg
in
iret
mov
out
pop
mov
sar
push
push
lods
pushf
mov
jle
pop
fistpll
shll
data16
sbb
sub
mov
mov
jae
mov
mov
incl
mov
scas
mov
push
pop
movsb
add
out
mov
mov
lcall
in
pop
cmp
add
insl
xchg
movsl
jg
ret
xorb
aaa
jle
imul
arpl
je
jae
loopne
stos
andb
negb
les
lock
sub
pushf
enter
xchg
push
push
aaa
jg
jmp
jb
clc
lea
dec
imul
in
sahf
adc
loopne
or
aam
push
aad
decl
ds
das
dec
push
pop
out
pop
dec
subl
and
mov
call
cli
aas
sub
aad
inc
scas
pop
push
loope
roll
cmc
mov
psllw
aaa
leave
testb
mov
sub
jbe
dec
out
xchg
push
int
std
sub
adc
incl
sbb
das
shr
add
dec
js
pop
es
dec
scas
mov
incl
jbe
stc
stos
push
pushf
push
cli
add
cmp
imul
dec
sbb
pop
testl
mov
call
ljmp
xchg
mov
mov
shlb
sar
aaa
clc
mov
push
fwait
add
enter
pusha
jl
enter
hlt
loopne
sti
jmp
pop
imul
sbb
in
cmp
mov
pop
jle
sub
prefetch
or
dec
sbb
repnz
fdivrs
push
stos
adc
xor
pushl
add
lret
jmp
or
xor
test
cwtl
jbe
out
or
cmp
inc
xchg
pop
std
mov
xchg
push
push
push
adc
popf
enter
jg
movsl
test
xchg
cmpsl
cs
inc
lret
icebp
or
pop
cli
sti
sub
jb
xor
decb
incl
popf
sbb
jg
and
loop
orb
fdivs
push
mov
enter
clc
pop
push
xchg
lret
rcr
jb
pushf
notl
sbb
inc
and
mov
xchg
scas
rcll
sbb
addb
clc
popl
sub
mov
mov
adc
cld
xor
lods
mov
icebp
sub
push
icebp
out
and
jmp
xchg
cmp
and
stos
rorb
dec
mov
jae
fiaddl
sub
cld
jg
add
cli
lahf
push
xor
js
int
mov
push
adc
xor
mov
push
inc
lret
call
or
movsb
incl
rol
dec
adc
outsb
cltd
cmp
loopne
xlat
sahf
xchg
adc
ja
push
pop
adc
das
add
adcl
test
fcmovnu
in
cli
les
clc
out
pop
add
lea
movl
cmp
adc
or
add
push
mov
pop
push
popa
xchg
rdpmc
adc
push
push
out
mov
mov
icebp
adc
daa
sarb
ja
add
test
stos
movsb
fimuls
mov
andb
add
fs
loopne
orb
imul
jle
sbb
ret
aaa
ljmp
cmp
lret
fisttpll
and
pop
mov
mulb
loop
dec
xchg
ds
xchg
pop
aas
loopne
sbb
cltd
mov
test
add
aaa
or
mov
pop
jbe
jl
xchg
test
fistpll
aaa
adc
cmp
add
jle
push
pop
loope
add
lcall
in
push
inc
roll
lock
sti
add
sahf
stos
and
xchg
dec
adc
sub
mov
test
ljmp
ret
addb
imul
mov
or
mov
mov
add
fistpl
fs
cwtl
cld
lcall
xchg
fnstsw
repnz
rclb
movsl
pop
aas
or
lcall
mov
push
test
iret
add
call
add
insl
jo
jb
push
je
imul
dec
outsl
fs
gs
add
jb
sbb
gs
jb
arpl
cmp
in
mov
and
jb
outsb
je
dec
fs
imul
lcall
push
push
mov
jne
dec
outsb
outsw
inc
xor
outsb
push
push
fs
js
jo
imul
mov
jae
insl
push
imul
out
pop
mov
or
scas
push
insb
and
mov
jb
outsb
or
push
or
push
insl
lock
sti
xor
push
outsl
inc
dec
xchg
popa
addr16
inc
push
lret
in
push
add
dec
mov
cmpl
jle
or
add
add
add
push
sub
pop
adc
and
add
or
mov
xlat
push
add
cmp
or
pop
sti
or
int3
pop
sub
adc
int
rolb
adc
add
cmp
fs
mov
pop
enter
xor
cs
je
js
sbb
add
mov
ret
aaa
cs
jl
add
dec
pop
push
add
mov
sahf
frstor
jb,pn
repz
pop
add
in
daa
inc
jae
arpl
jmp
rclb
je
dec
pop
push
add
clc
iret
cmova
push
roll
and
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
addb
add
add
add
add
add
add
sbb
push
add
add
add
orb
add
jo
add
cwtl
add
orb
add
rolb
orb
add
call
add
add
add
addb
add
add
addb
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
cmp
add
js
add
mov
add
add
add
xor
add
lock
xor
add
sbb
xor
add
inc
add
sub
add
push
add
add
add
add
add
add
add
sub
add
or
add
xor
add
pop
add
add
or
add
add
add
add
add
or
add
add
pop
testb
rolb
add
add
add
add
add
testl
add
add
add
add
add
cld
add
mov
add
or
add
add
add
incb
add
add
or
add
add
add
add
adc
add
or
add
add
add
add
mov
add
or
add
add
hlt
add
adc
add
or
add
add
or
add
cmp
add
or
add
add
call
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
pushf
push
add
adc
add
or
add
add
mov
add
sub
add
or
add
add
or
add
add
add
add
add
sbb
mov
add
or
add
add
add
add
adc
add
or
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
add
add
push
add
adc
add
or
add
push
add
xor
add
or
add
add
add
push
add
call
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
mov
add
cwtl
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
or
add
add
add
lods
add
add
add
add
add
add
push
add
add
add
or
add
push
add
inc
xor
jo
add
inc
xchg
add
add
add
add
add
add
add
xor
add
add
push
xchg
add
add
add
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
in
in
add
in
add
les
lods
mov
mov
xchg
lods
lods
add
xor
test
add
movsb
add
add
add
add
add
add
add
add
je
xor
insb
add
add
add
add
addb
test
pop
add
mov
add
xchg
add
add
xchg
add
hlt
hlt
add
in
in
add
jecxz
add
fcmovnu
add
lret
cmpsl
ret
lcall
add
cwtl
cwtl
add
int3
add
mov
add
add
mov
imul
lods
add
rol
mov
lret
add
add
loopne
add
ljmp
dec
test
test
push
aas
outsl
push
push
xchg
add
incl
cmp
jns
add
inc
jp
add
add
test
jbe
test
and
cld
cld
cld
add
adc
adc
adc
adc
adc
push
pop
add
cld
adc
pop
add
add
pop
add
loop
add
lret
lret
or
adc
pop
adc
add
push
repz
incl
add
adc
pop
adc
adc
adc
jecxz
out
pop
adc
loop
add
ret
jecxz
out
pop
adc
push
int
lret
lret
rcl
adc
lret
repz
jmp
add
loope
loope
pop
add
adc
adc
adc
adc
adc
adc
stc
push
incl
add
incl
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
adc
add
adc
add
adc
add
das
xor
add
add
jo
jo
jg
jg
incl
add
add
nop
add
add
add
incl
addb
add
mov
mov
add
out
add
incl
cltd
or
push
push
push
push
push
push
pusha
cltd
cltd
xchg
push
push
push
pop
push
push
push
push
jbe
cltd
xchg
push
push
push
mov
ja
cltd
xchg
push
mov
sti
xor
or
sub
push
push
ja
imul
ja
jns
pop
movsl
push
push
push
push
mov
ja
jns
push
repz
mov
push
aad
ja
jns
push
aas
mov
push
push
mov
ja
jns
push
push
mov
push
ja
jns
push
push
push
cld
push
push
push
push
ja
jns
push
push
push
lds
push
push
ja
jns
data16
jns
ja
ja
ja
ja
js
jns
adc
adc
xor
xor
adc
out
mov
jns
adc
inc
mov
jmp
mov
add
imul
or
sti
or
or
cltd
cltd
or
add
cltd
cltd
cltd
pop
sti
or
or
cltd
cltd
cltd
cltd
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
cmp
add
add
and
inc
add
add
add
add
add
dec
popl
add
add
add
add
add
add
add
add
add
add
and
add
adc
add
adc
add
push
inc
dec
add
sbbl
aas
mov
add
xchg
xchg
add
int3
cmc
add
sar
add
out
add
fcmovu
add
repnz
incl
incl
inc
inc
inc
inc
inc
inc
add
add
add
inc
inc
inc
inc
inc
inc
add
push
inc
add
add
add
add
fstp
push
inc
sbb
mov
add
and
and
and
and
fstl
cmp
stos
sub
cltd
cltd
cltd
stos
stos
sub
cltd
cltd
cltd
lcall
cmp
stos
sub
mov
or
push
add
mov
sub
add
add
mov
es
inc
add
js
mov
inc
inc
add
ja
mov
inc
inc
add
ja
mov
inc
inc
add
ja
mov
inc
inc
add
ja
js
mov
add
fstp
fstp
fstp
sub
inc
add
fstp
fstp
fstp
sub
inc
add
ja
ja
mov
add
and
and
and
and
inc
sbb
mov
inc
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
aam
add
add
add
add
adc
adc
add
add
sub
add
verw
nop
add
lldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
imul
inc
add
and
add
xor
add
and
add
add
or
add
add
rolb
add
add
jae
add
add
add
add
add
add
add
add
adc
adc
add
and
and
and
and
and
xor
xor
xor
xor
xor
add
xor
and
xor
xor
xor
xor
add
add
push
sub
push
sub
add
add
add
add
jae
add
arpl
adc
inc
sub
add
and
inc
xor
add
adc
add
adc
xor
add
add
and
add
add
xor
add
push
add
push
add
push
add
inc
add
inc
add
inc
add
push
add
push
add
push
add
push
add
sbb
add
push
add
push
add
inc
add
and
sub
xor
inc
add
inc
add
inc
add
aaa
dec
add
ds
add
add
or
add
adc
add
jae
xor
arpl
inc
and
add
add
arpl
inc
add
add
add
add
add
add
add
je
push
adc
or
add
inc
add
jae
cs
push
add
jae
jl
pop
add
arpl
test
add
cmp
add
cmp
add
add
call
aam
and
aam
and
jecxz
and
pushl
xor
xor
jae
add
je
add
je
add
arpl
add
addl
add
add
add
add
add
add
xchg
add
xchg
add
add
pushf
add
sahf
add
add
add
mov
add
cmpsb
add
stos
add
movsb
add
lods
add
scas
add
mov
je
mov
je
mov
je
mov
jbe
mov
jge
mov
add
inc
xchg
add
inc
xchg
add
dec
xchg
add
xchg
add
push
mov
add
pop
movsb
add
pop
test
add
mov
adc
mov
adc
mov
pop
imul
add
ret
add
les
adc
les
adc
les
adc
roll
adc
roll
addl
addl
test
add
int
mov
lret
add
roll
mov
add
add
add
xchg
add
ret
add
roll
and
aam
and
jecxz
and
jecxz
and
in
and
add
fwait
repz
pushf
repz
mov
hlt
add
movsb
hlt
add
stos
hlt
add
hlt
add
stc
add
sti
add
incl
and
incl
xor
add
hlt
add
incl
inc
mov
repz
add
mov
pushf
add
mov
add
mov
incl
lret
fxch
lds
loop
roll
call
out
add
in
in
cld
cmc
out
add
div
add
sti
repz
sti
testb
std
std
add
incl
add
sbb
add
add
add
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
add
mov
mov
mov
lds
mov
mov
mov
mov
add
add
vshufps
mov
mov
popf
cltd
cmpl
mov
ret
sbb
add
add
enter
enter
lds
rol
enter
enter
sbb
add
add
ret
ret
ret
ret
enter
rol
ret
ret
ret
rolb
sbb
add
mov
mov
mov
mov
mov
mov
sbb
add
mov
mov
mov
mov
mov
mov
pop
pop
push
sbb
pusha
add
add
adc
adc
unpckhps
cltd
mov
adc
adc
push
adc
add
pop
pop
push
sbb
add
add
mov
mov
mov
lds
mov
mov
mov
mov
pop
push
jnp
pusha
add
ret
mov
mov
mov
cmpsl
mov
vshufps
mov
add
or
mov
add
enter
enter
lds
rol
enter
enter
dec
or
inc
sbbl
add
add
add
ret
ret
ret
ret
mov
rol
ret
ret
ret
rolb
or
xchg
add
add
add
add
sarl
mov
mov
mov
mov
mov
dec
or
push
sbb
add
add
add
add
mov
mov
mov
mov
mov
push
push
dec
dec
or
push
sbb
add
add
add
and
sub
and
cs
pop
or
movsl
movsl
movsb
jnp
and
and
cs
push
or
push
push
push
dec
dec
mov
sbb
add
add
add
mov
mov
mov
lds
mov
mov
mov
mov
push
dec
lahf
test
add
add
add
ret
mov
mov
mov
mov
mov
rol
mov
mov
mov
rolb
push
push
push
test
or
add
add
add
enter
enter
lds
rol
enter
enter
cmp
push
push
push
lahf
mov
or
add
add
add
ret
ret
ret
ret
scas
enter
rol
ret
ret
ret
rolb
push
push
push
mov
add
add
add
add
mov
mov
scas
scas
scas
scas
mov
mov
mov
pop
inc
cmp
push
lahf
fwait
fwait
push
dec
or
add
add
mov
mov
mov
mov
mov
fs
inc
cmp
sbbl
add
cmp
sub
and
cs
xor
inc
scas
mov
scas
mov
sub
and
das
or
inc
insl
mov
cmp
dec
or
add
xchg
xchg
xchg
xchg
xchg
jae
scas
mov
mov
data16
mov
insl
addr16
mov
test
push
push
push
dec
or
add
lea
xchg
xchg
mov
scas
movsb
jle
jb
jb
jno
insl
push
insl
mov
mov
adc
add
add
add
add
xchg
mov
scas
scas
scas
movsb
gs
jno
jo
push
bound
mov
addb
jb
xchg
xchg
mov
outsl
lods
scas
scas
scas
movsb
fs
insl
insl
insl
addr16
pop
pop
addr16
push
push
push
or
add
add
add
jb
jb
jb
jb
fs
scas
mov
mov
fs
pop
pop
pop
js
lahf
pushf
jl
aas
cmp
or
add
add
add
scas
scas
scas
scas
scas
scas
mov
mov
mov
test
cwtl
test
scas
test
mov
xchg
mov
aas
cmp
add
add
scas
scas
scas
scas
scas
scas
test
dec
test
pushf
lcall
jnp
addb
mov
test
stos
scas
mov
mov
mov
test
mov
xchg
ja
pop
nop
fs
inc
or
jb
jno
insl
insl
push
scas
scas
scas
cmpsl
movsb
pop
pop
pop
pop
pop
inc
inc
inc
aas
aas
aas
cmp
pop
bound
add
insl
insl
addr16
inc
scas
scas
cmpsl
movsb
mov
inc
aas
aas
aas
aas
cmp
cmp
pop
bound
insl
insl
push
bound
inc
scas
cmpsl
mov
aas
aas
aas
aas
cmp
cmp
cmp
cmp
pop
mov
addr16
pop
pop
pop
pop
inc
cmpsl
mov
aas
aas
cmp
cmp
cmp
cmp
aaa
cmp
inc
or
bound
inc
ds
or
lahf
cltd
mov
xor
sub
sub
add
or
add
add
and
inc
add
add
add
add
add
sbb
add
adc
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
call
add
add
add
add
adc
adc
add
add
sub
add
adc
fs
add
add
add
add
adc
add
add
sbb
push
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
mov
addb
ja
ja
ja
add
js
xchg
js
xchg
ja
stos
js
xchg
ja
ja
orb
clc
orb
ja
ja
ja
add
mov
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
add
add
add
add
add
or
add
add
rolb
add
or
add
or
add
add
add
add
add
add
add
adc
add
sbb
sbb
add
sbb
pop
add
push
and
sbb
and
sbb
sub
and
sub
das
add
sub
add
xor
add
add
xor
add
cs
and
xor
and
xor
add
xor
sub
cmp
sub
xor
xor
cmp
xor
cmp
cmp
cmp
xor
add
cmp
add
je
cmp
add
add
dec
add
pusha
add
insl
add
insb
add
jns
pop
jae
add
jns
imul
add
jnp
popa
ja
add
jnp
arpl
add
ja
jb
js
js
jle
add
addl
add
add
xchg
add
xchg
add
mov
add
mov
add
mov
bound
add
test
ja
addb
add
add
les
add
roll
add
jecxz
insb
xchg
add
xchg
add
popf
add
mov
add
xchg
xchg
add
cltd
xchg
add
popf
lcall
pushf
popf
add
popf
add
cmpsb
movsl
add
scas
mov
mov
mov
add
cmpsb
movsb
add
test
add
stos
cmpsl
add
test
test
stos
stos
stos
add
scas
stos
add
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
leave
add
mov
enter
roll
lret
test
aam
mov
out
add
add
mov
enter
enter
lret
leave
enter
lret
into
lret
lret
into
add
int
add
ror
add
ror
add
ror
add
rolb
rcl
aam
aad
aam
rcl
aam
aam
aad
aam
aad
add
aad
add
xlat
add
aad
add
aad
add
xlat
xlat
add
add
fcom
add
fcom
add
fcom
add
fcmovnbe
add
fcom
add
fcom
add
fcmovbe
add
fst
add
fcom
add
fcom
add
fcmovbe
add
fadds
flds
rcr
fadds
fcomp
add
fcmovu
add
fcmovu
add
fstp
add
fstp
add
fcmovu
add
fcmovu
add
fstp
add
add
add
add
add
add
add
add
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loop
add
jecxz
add
in
add
loope
add
in
add
hlt
stc
add
lock
lret
add
sti
sti
add
sti
incl
loope
loope
loop
loope
in
loope
loop
in
in
in
out
in
in
out
call
call
loop
loop
in
in
in
call
in
out
jecxz
call
add
ljmp
jmp
ljmp
in
in
jmp
add
in
in
add
out
out
add
out
in
add
lock
in
lock
repnz
add
incl
cmc
div
add
div
add
div
add
stc
repz
stc
hlt
add
stc
cmc
add
stc
cmc
add
sti
clc
add
std
cli
add
stc
stc
add
cld
stc
add
incl
add
add
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
push
pop
pushf
mov
test
lods
mov
cmpsb
pushf
mov
mov
mov
lods
stos
lods
lahf
stos
test
popw
add
add
mov
mov
mov
mov
mov
mov
sarb
xchg
push
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
popf
lea
add
mov
mov
mov
inc
inc
inc
in
mov
mov
mov
out
mov
mov
mov
ret
mov
mov
ds
inc
inc
inc
in
mov
mov
mov
mov
mov
jne
pop
push
add
add
add
add
mov
lds
mov
cmp
inc
in
mov
mov
mov
mov
mov
add
add
add
add
mov
mov
mov
cmp
inc
in
mov
mov
mov
call
clc
popf
nop
add
add
add
add
mov
aaa
cmp
cmp
inc
inc
inc
inc
in
mov
out
mov
jp
mov
add
add
add
add
leave
mov
mov
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
in
mov
mov
mov
jbe
mov
add
add
add
add
mov
mov
mov
cmp
cmp
ds
inc
inc
inc
inc
in
mov
rol
mov
rol
clc
ret
add
add
add
mov
mov
aaa
aaa
cmp
cmp
cmp
ds
les
sarl
mov
add
add
add
add
mov
mov
ret
and
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
jl
enter
add
add
add
mov
aaa
aaa
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
jns
mov
add
add
add
add
mov
mov
mov
cmp
cmp
mov
mov
mov
mov
out
rol
cli
mov
add
add
add
add
mov
mov
mov
mov
cmp
cmp
in
mov
mov
mov
les
mov
add
add
add
add
mov
mov
mov
aaa
aaa
aaa
aaa
cmp
mov
mov
mov
mov
mov
mov
add
add
add
mov
ret
mov
mov
mov
mov
and
in
leave
mov
mov
mov
mov
mov
mov
jns
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jp
mov
add
add
rol
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jns
mov
add
add
aam
xlat
jecxz
loop
in
aad
aad
fcomp
fnclex
fucom
in
mov
js
mov
add
add
clc
jmp
jle
mov
add
add
lret
call
call
call
in
out
jmp
jmp
jmp
lock
jmp
stc
loope
clc
mov
add
add
add
mov
lret
xchg
xchg
mov
pop
pop
pop
imul
bound
pop
imul
loopne
lcall
add
add
add
out
icebp
mov
repz
jae
xor
daa
pop
cmpb
inc
sbb
dec
jg
jg
aam
mov
add
add
add
add
xchg
jno
sti
mov
add
add
lcall
pop
add
push
cmpsl
loope
out
add
add
out
mov
jnp
add
dec
bound
pop
pop
push
ss
orb
outsl
mov
mov
lret
int
mov
mov
dec
or
pop
adc
or
orl
test
mov
mov
int3
mov
sbb
xor
xor
aas
sub
adc
add
xchg
repnz
mov
add
sbb
adc
add
add
add
add
add
add
add
add
add
add
add
and
add
push
or
add
add
adc
add
adc
add
add
add
jg
jg
inc
add
add
incl
addb
add
mov
add
iret
iret
add
fcom
add
out
add
lock
add
incl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
addr16
ja
ja
ja
jbe
inc
mov
mov
test
test
ret
enter
push
mov
int3
lret
mov
lods
int3
ret
int3
test
lret
mov
lcall
and
and
cmp
test
mov
and
cmp
mov
test
test
int3
ret
int3
test
lret
mov
mov
test
ret
leave
test
lret
mov
mov
test
test
test
test
test
mov
int3
int3
int3
int3
enter
test
test
test
test
mov
push
add
pop
enter
mov
test
test
inc
inc
inc
inc
add
add
inc
inc
inc
inc
inc
inc
inc
inc
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
add
add
add
add
add
xor
add
add
and
add
add
add
add
and
inc
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
data16
pop
imull
stos
stos
stos
stos
mov
add
add
pop
pop
add
add
add
int3
int3
int3
int3
rolb
dec
ja
ja
jo
jo
add
add
add
pop
add
add
add
jo
pop
adc
pop
negl
fstp
fst
jg
adc
adc
add
xor
add
add
jae
adc
adc
add
add
add
add
loopne
inc
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
jmp
add
add
add
push
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
scas
add
add
add
add
and
inc
add
add
add
add
add
xor
add
add
imul
add
add
add
insb
add
add
add
insl
add
add
add
add
add
add
add
add
scas
add
sub
add
xor
add
and
add
add
or
add
add
rolb
add
add
push
or
add
add
add
add
add
add
add
adc
add
adc
adc
adc
and
add
daa
cmp
or
cmp
add
and
add
and
and
and
and
and
xor
xor
xor
add
xor
xor
xor
xor
xor
cmp
cmp
xor
add
inc
add
push
add
cmp
add
ds
add
cmp
add
inc
pop
add
push
push
add
pop
add
dec
pusha
add
push
add
push
insb
add
jae
or
add
dec
pusha
add
dec
add
pop
push
aas
pop
imul
pop
outsb
add
popa
jbe
or
add
gs
or
add
push
jae
or
arpl
inc
inc
inc
add
inc
add
add
inc
add
add
add
push
add
push
add
push
add
add
add
pop
add
add
popa
add
arpl
inc
pop
add
data16
insb
add
arpl
push
push
add
arpl
arpl
push
push
imul
jb
jb
jae
jae
je
je
jp
jp
jg
jg
jnp
jnp
or
jp
add
jnp
add
xchg
add
jb
add
mov
inc
jb
add
xchg
pop
mov
add
xchg
add
mov
or
mov
mov
add
lahf
scas
add
mov
adc
mov
orl
orl
add
xchg
add
movsl
add
mov
add
jecxz
add
incl
outsl
iret
add
rolb
inc
incl
addb
add
test
test
add
mov
add
xchg
xchg
add
fwait
xchg
add
cwtl
add
sahf
sahf
add
pushf
mov
add
mov
mov
add
mov
add
test
test
test
stos
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
sarl
mov
ret
ret
xchg
incl
mov
incl
mov
ret
enter
lret
lret
les
into
movl
lret
lret
add
into
enter
into
add
ror
add
ror
add
ror
add
ror
add
ror
add
aad
add
rcl
add
rcl
add
rcl
add
aam
add
xlat
roll
rcl
rolb
aam
aam
add
fcom
add
add
fst
add
fcomp
add
add
fcmovu
add
fcomp
add
add
fcmovu
add
add
add
add
in
add
jecxz
add
in
add
add
repz
aam
incl
loopne
loopne
loope
loope
jecxz
jecxz
jecxz
jecxz
in
in
in
in
out
out
jecxz
jecxz
in
in
out
out
out
out
in
in
out
out
out
jmp
add
jmp
add
in
jmp
in
in
in
add
out
out
add
jmp
add
repz
lock
lock
repz
hlt
repz
hlt
hlt
add
div
add
div
add
clc
clc
add
stc
stc
add
sti
sti
add
incl
inc
cmp
pusha
cmp
add
add
pop
sub
pop
or
or
pop
or
add
or
add
add
or
jmp
pop
xor
sbb
jmp
add
or
xor
push
iret
push
and
xor
add
add
movups
xor
jl
push
cmp
xor
sgdtl
xor
cmp
push
adc
shlb
cmp
aaa
xor
add
add
push
sbb
xor
cmp
adc
xchg
out
xchg
js
dec
inc
cmp
xor
sbb
or
cmp
jp
inc
lock
mov
dec
inc
cmp
xor
sub
add
add
xor
add
inc
dec
adc
dec
adcb
add
xor
or
dec
adc
mov
js
lods
mov
dec
inc
xor
xor
movsb
or
add
insb
sgdtl
xor
xchg
lret
xchg
jne
lcall
xchg
adc
xor
add
insb
or
add
add
pusha
or
rolb
dec
xor
lcall
xchg
in
adc
add
pusha
add
add
add
add
xor
dec
xor
xchg
scas
lcall
dec
cmp
add
or
or
xor
dec
xor
test
shlb
mov
xor
or
or
xor
cmp
jge
xchg
lock
mov
cwtl
xchg
mov
cmp
push
or
or
add
dec
jb
dec
jnp
xchg
stos
mov
mov
dec
jns
dec
cmp
ud2
add
shlb
je
ja
mov
lock
mov
dec
jb
cmp
or
or
xor
dec
dec
dec
js
mov
lock
mov
dec
dec
dec
cmp
or
or
add
inc
dec
jno
jge
xchg
stos
mov
mov
js
dec
inc
cmp
ud2
add
shlb
dec
jno
jge
xchg
lods
ljmp
jno
inc
cmp
or
or
xor
inc
dec
jno
jge
fwait
mov
shll
inc
mov
jge
jno
inc
cmp
or
or
add
inc
dec
jno
jge
pushf
aad
gs
pop
sub
mov
js
dec
inc
cmp
ud2
add
shlb
dec
jno
orl
aas
cmpsl
mov
dec
inc
cmp
or
or
xor
inc
dec
jle
xchg
mov
dec
sub
sub
ds
mov
inc
aaa
xor
or
or
push
adc
adc
adc
adc
and
sbb
adc
adc
adc
adc
adc
ud2
add
rolb
sbb
test
and
outsb
push
sub
pop
das
pushw
pop
cs
add
clts
adc
adc
adc
es
dec
push
imul
sub
and
adc
adc
ud2
add
invlpg
dec
dec
jno
jge
xchg
mov
lock
xchg
jno
dec
cmp
ud2
add
add
add
shlb
inc
jno
jge
xchg
stos
ret
lock
mov
js
inc
or
xor
or
add
pusha
or
xor
outsl
dec
jno
jge
fwait
lods
leave
fsubp
in
lret
stos
fwait
mov
jno
outsl
or
or
add
movsl
or
or
dec
jno
jge
pushf
mov
into
in
mov
mov
jno
dec
pusha
or
or
add
add
cvtps2pi
inc
dec
jbe
mov
jmp
lock
test
dec
inc
cmp
add
pusha
add
or
xor
cmp
jns
mov
lock
cmp
xor
or
add
add
add
add
or
xor
cmp
jns
mov
lock
cmp
xor
or
add
add
add
add
add
dec
mov
add
add
adc
adc
add
add
sub
add
verr
add
add
add
push
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
mov
inc
add
add
adc
inc
add
add
adc
inc
add
add
add
add
sub
add
aas
add
add
add
cmp
add
adc
dec
add
add
add
add
xor
add
adc
push
add
add
cmp
add
adc
push
add
add
add
add
add
add
add
das
add
add
add
xor
add
adc
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
addb
add
add
mov
add
push
add
add
pop
add
sub
rolb
xchg
add
add
add
add
add
push
add
add
push
add
add
add
add
inc
or
add
add
add
add
lahf
add
imul
inc
add
add
add
add
add
add
add
add
ret
add
add
add
je
insb
add
pop
add
jb
outsl
add
jb
add
jae
xor
xor
adc
add
add
add
add
rolb
add
mov
add
add
add
add
add
push
add
add
sbb
outsl
add
add
incl
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
push
add
add
imul
push
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
sbb
jg
dec
add
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
imul
push
add
add
incl
add
add
add
add
add
add
add
add
add
cld
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
jb
insl
add
add
add
jae
and
push
add
arpl
imul
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
jne
insb
add
add
outsl
add
add
add
outsl
add
insl
add
and
inc
add
add
and
dec
add
je
jae
add
push
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
arpl
imul
add
insl
add
outsb
add
and
push
add
je
je
insb
add
and
push
add
insl
add
jns
and
xor
xor
xor
xor
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
add
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
arpl
imul
add
imul
and
inc
add
add
jae
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
inc
inc
and
add
inc
push
dec
and
push
add
fs
enter
push
mov
or
mov
and
add
add
addl
and
and
sbb
inc
and
or
push
addl
adcl
mov
add
adc
and
inc
push
adc
inc
or
push
inc
push
push
and
add
test
sbb
and
adc
and
add
dec
add
sbb
push
inc
es
inc
push
mov
sbb
dec
sbb
adc
adc
adc
add
push
test
and
add
add
mov
and
adc
or
inc
inc
inc
add
nop
or
and
add
inc
inc
add
and
inc
and
adc
adc
adc
inc
test
and
and
or
orb
andb
sbb
adc
nop
adc
or
add
and
and
inc
inc
add
adc
and
inc
and
add
or
orl
nop
inc
test
inc
inc
push
addb
or
push
mov
dec
and
inc
or
andl
and
test
add
and
test
or
es
and
or
push
or
inc
dec
inc
add
inc
inc
add
and
mov
inc
adc
dec
push
or
addb
es
add
and
add
or
test
adc
sbb
addb
push
push
nop
or
sbb
inc
dec
and
addl
add
add
addl
addb
and
add
or
adc
push
add
sbb
es
es
adc
or
add
or
orl
dec
add
sbb
or
add
push
and
or
push
push
and
adc
and
test
sbb
inc
add
add
and
adc
nop
dec
add
inc
add
and
inc
es
or
enter
nop
push
add
or
addb
adc
inc
and
and
roll
sub
add
movsl
add
add
add
add
add
add
add
fwait
ja
add
jg
add
mov
add
filds
fistpll
incl
jmp
roll
lods
aas
sti
add
cmc
fildl
in
std
roll
mov
add
idivl
add
jge
add
jne
add
aaa
xchg
add
aaa
xchg
add
cmp
xchg
add
std
filds
lahf
jg
add
div
add
jne
add
mov
add
aaa
xchg
add
aas
sti
add
aaa
mov
fstpt
mov
jmp
mov
mov
add
jne
add
mov
filds
jmp
jg
add
xor
repz
xor
fildl
jmp
aas
xchg
add
cmc
mov
mov
add
mov
filds
mov
neg
add
jg
add
aaa
filds
sti
mov
testl
sti
call
add
mov
add
jg
add
ja
add
cmp
incl
cltd
mov
mov
add
jne
add
pushl
add
mov
add
jne
add
mov
filds
lahf
jne
add
mov
add
jg
add
mov
add
std
fwait
add
jge
add
mov
add
jge
add
mov
add
jge
add
aas
mov
add
pushl
add
mov
mov
lahf
std
filds
mov
stos
mov
add
mov
add
mov
add
aas
mov
jmp
testl
out
mov
add
mov
add
mov
add
std
lahf
add
neg
add
cmc
lahf
add
mov
add
jg
add
cmp
xlat
add
mov
add
mov
mov
lods
jg
add
jge
add
cmp
sti
add
xor
mov
add
idivl
add
mov
mov
add
mov
fwait
add
std
xchg
add
jge
add
jne
add
jne
add
negl
add
aaa
mov
mov
cmp
mov
add
cmc
xlat
add
jge
add
aaa
xlat
add
cmc
testl
jmp
lahf
add
cmc
testl
out
jg
add
mov
add
mov
xchg
add
ja
add
cmc
mov
add
ja
add
jne
add
jne
add
ja
add
aaa
testl
lret
std
xlat
add
cmp
mov
testl
scas
sti
add
xor
sti
add
jge
add
jne
add
mov
add
neg
add
jge
add
mov
repz
aaa
fwait
add
cmp
lahf
add
mov
mov
fwait
aaa
filds
in
mov
mov
leave
aas
mov
sti
cmc
mov
test
mov
add
cmc
roll
fwait
std
roll
mov
xchg
add
cmc
sti
add
mov
lahf
add
mov
add
mov
add
ja
add
fildl
int
fwait
add
mov
mov
lods
std
roll
xor
mov
lahf
mov
add
not
add
mov
stos
cmp
xchg
xchg
fdivl
movsl
xchg
mov
clc
and
pop
add
insb
mov
es
inc
jmp
push
test
stos
pop
cmpb
push
push
scas
pop
imul
ds
data16
mov
add
inc
cmp
loop
imul
add
pop
aaa
sahf
adc
sahf
push
ret
mov
les
pop
push
mov
scas
add
test
stos
push
pusha
mov
imul
sbb
xlat
insl
jecxz
jp
insl
test
add
lock
enter
mov
add
sub
mov
push
dec
or
ja
pop
aaa
ljmp
mov
lea
and
js
scas
add
jg
jno
mov
ljmp
es
aam
ljmpw
rcll
push
shrb
inc
fucomp
push
fiaddl
outsb
stos
xchg
mov
enter
jl
fnstsw
aad
lock
call
es
adc
outsb
stos
out
insl
and
in
leave
add
int3
lods
fs
test
push
xchg
sbb
pushf
jp
mov
ljmp
setns
xchg
and
into
mov
sbb
lods
adc
push
pop
xchg
outsb
add
call
js
stos
and
scas
call
and
jle
push
add
mov
shll
gs
or
bound
icebp
mov
lcall
cmp
xchg
rorl
js
int
jecxz
pop
mov
dec
pop
pop
sahf
icebp
addr16
mov
cld
dec
je
js
pushf
mov
inc
sbb
das
lods
xchg
incl
les
cmp
insl
or
dec
outsl
jp
mov
stos
enter
out
sbb
pop
xchg
xchg
scas
xorl
mov
push
scas
fistps
lret
ss
push
aam
rorb
movsb
das
add
fdivs
mov
lcall
mov
add
mov
decl
jae
ret
mov
adc
xor
and
and
sbb
pop
sub
daa
stos
int
jb
leave
fnstcw
and
clc
cmpl
mov
pop
outsb
xchg
sub
loope
jg
mov
xor
push
mov
pusha
bound
insb
scas
cmp
in
push
inc
xor
inc
mov
cmp
out
lahf
mov
loope
subl
into
jb
dec
xorl
ffreep
or
cmp
jecxz
cli
fwait
mov
lock
mov
pop
inc
fldenv
xchg
add
test
bound
push
cwtl
ud1
fistpll
std
sub
daa
iret
push
or
popl
sbb
xor
or
loope
fcmovnb
ss
int3
xchg
pop
mov
rorl
inc
mov
mov
xchg
dec
movsb
inc
or
shlb
and
pop
push
or
cli
xorl
mov
add
add
cmp
in
cmp
sbb
cmp
sub
add
cmp
inc
cmp
push
cmp
cmp
jb
add
add
add
cmpb
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
outsl
jae
dec
gs
popa
addr16
