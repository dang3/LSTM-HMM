push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
sbb
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
add
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
add
cmp
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
stos
call
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
stos
stos
incl
or
add
and
add
and
add
and
add
and
add
and
add
add
lock
add
and
add
add
push
and
add
add
loopne
add
inc
and
add
and
add
add
and
add
and
add
add
add
and
add
and
add
add
and
add
add
cmpsb
and
add
and
add
add
xor
add
in
and
add
add
add
add
insb
and
add
and
add
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
and
add
and
add
and
add
and
add
and
add
add
lock
add
and
add
add
push
and
add
add
loopne
add
inc
and
add
and
add
add
and
add
and
add
add
add
and
add
and
add
add
and
add
add
cmpsb
and
add
and
add
add
xor
add
in
and
add
add
add
add
insb
and
add
and
add
add
add
add
nop
and
add
add
add
add
popa
jo
jb
add
jge
dec
jo
outsb
dec
jne
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
xchg
add
je
jne
jb
outsb
je
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
jbe
push
jns
gs
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
inc
imul
gs
je
imul
inc
add
repnz
imul
jb
je
arpl
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
je
imul
bound
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
insb
outsl
jae
dec
popa
outsb
fs
add
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
data16
je
je
dec
popa
outsb
fs
add
dec
add
insb
outsb
inc
add
dec
add
popa
insb
dec
outsl
arpl
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
dec
jo
outsb
push
push
popa
je
add
push
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
jns
inc
gs
push
jns
push
imul
jae
push
arpl
add
add
ja
push
fs
jb
ja
push
popa
arpl
jb
jne
add
gs
push
outsl
outsl
insb
add
xor
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
jle
inc
gs
imul
gs
add
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
mov
lock
into
shlb
cmp
aaa
leave
push
gs
nop
cmp
movsb
mov
not
pushf
imul
outsb
in
xchg
arpl
enter
xlat
xchg
in
lret
pop
jne
jnp,pt
enter
clc
mov
xor
mov
dec
ret
dec
cld
sbb
xor
gs
push
clc
xor
push
xlat
int3
cmpsb
dec
movsl
push
data16
shll
pop
dec
leave
jle
arpl
les
sti
pop
in
mov
cli
dec
fistpl
xor
xchg
jmp
and
sub
shll
stos
sbb
dec
loopne
loopne
aam
jecxz
cmp
sub
aad
mov
lahf
xchg
test
cmp
mov
cmp
xchg
pusha
mov
sbb
stc
jbe
and
pop
adc
insl
pop
cmp
add
fwait
dec
jnp
leave
jecxz
pop
push
andb
inc
shlb
pop
dec
xor
js
push
lods
inc
dec
xchg
lds
bound
cmpsb
aad
push
es
popf
jns
push
dec
mov
outsb
push
cmp
insl
inc
adc
out
into
inc
in
xor
je
xchg
and
cmc
push
pop
jg
sti
cmp
dec
xchg
or
add
and
pop
movsl
stos
shll
sti
rol
popf
xchg
jae
popa
aad
or
jge
push
outsb
lea
xor
sub
mov
orb
mov
add
enter
pop
jno,pn
pop
cmp
pop
cmpsb
int
int
arpl
mov
gs
mov
pop
fadds
and
aas
sbb
ja
push
ret
xchg
imul
adc
jnp
icebp
push
push
insl
lahf
cltd
lds
fs
push
sbb
rcll
imul
jle
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
addl
add
cmpsb
add
test
add
mov
or
add
roll
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jle
add
jnp
lods
stos
lods
add
test
push
mov
mov
mov
lret
leave
lret
int
rcl
shr
rcl
shl
iret
rcl
hlt
int3
into
int
enter
enter
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
not
rcl
cld
std
xlat
fcom
xlat
fcom
aam
dec
rcl
dec
int
aad
aad
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
sbb
mov
jnp
mov
sar
mov
leave
leave
lret
call
iret
iret
aam
aad
xlat
xlat
fcom
fdivr
aam
aam
into
int3
into
dec
int3
into
call
aad
dec
into
int
sarl
mov
lods
lods
std
cmpsb
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
call
fcom
fcom
fdivr
aam
aad
int3
into
into
dec
leave
lret
into
into
inc
mov
mov
mov
test
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
bound
pop
fs
ds
sbb
sbb
push
or
sbb
cmp
aaa
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
enter
iret
iret
call
aam
call
aad
dec
rcl
dec
enter
inc
ret
mov
mov
ljmp
movsb
movsl
sahf
sahf
popf
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jg
jle
jle
jg
jo
jno
popa
popa
arpl
cmp
lea
inc
mov
outsb
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
enter
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
fwait
lcall
aas
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
pusha
fcoms
addl
jmp
outsl
outsl
out
addr16
fdivs
ret
jle
js
js
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
cmpsb
lcall
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
jp
js
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
mov
xchg
jg
jno
jo
jne
je
jle
jge
addb
xchg
data16
cmp
ss
jge
cltd
fwait
cltd
lea
test
lods
sti
lods
stos
lods
lods
lods
lods
test
mov
fwait
xchg
xchg
xchg
incl
jge
js
js
jp
jp
xchg
cwtl
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
rdmsr
inc
inc
inc
dec
imul
xchg
xchg
leave
cltd
cltd
fistps
lcall
mov
mov
mov
mov
mov
fwait
jmp
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jp
lods
cmpsl
lods
add
adc
test
mov
incl
xchg
decb
xchg
sahf
sahf
pushf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
xchg
nop
in
xchg
push
jne
push
or
inc
or
or
daa
sub
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
lcall
cmpsb
cmpsl
ljmp
lods
pushl
mov
test
std
ret
xchg
lods
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
lcall
mov
call
xchg
xchg
xchg
xchg
xchg
sahf
popf
pushf
mov
test
movsl
negl
jl
movsl
push
push
push
outsl
dec
dec
dec
popaw
pusha
arpl
jae
mov
jle
orl
int
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
js
mov
cmpsb
mov
mov
lods
lods
mov
movsl
add
mov
add
pop
adc
mov
lcall
mov
call
xchg
xchg
call
xchg
xchg
cltd
lcall
sahf
sahf
mov
std
mov
cwtl
cltd
out
nop
xchg
nop
nop
xchg
les
cltd
lcall
mov
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
cmp
mov
jb
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
movsb
mov
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
cltd
cltd
lcall
sahf
mov
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
lcall
fwait
mov
cld
popf
mov
xchg
insb
xchg
xchg
pop
jg
cwtl
dec
jp
fwait
cmp
imul
push
addr16
sahf
sbb
movsl
adc
ljmp
adc
lods
pcmpgtd
scas
adc
mov
imul
mov
insb
mov
lcall
lods
lods
lods
scas
movsb
mov
mov
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
sahf
jmp
movsb
movsb
jmp
mov
xchg
decl
mov
mov
xchg
xchg
js
fwait
jo
lcall
call
cs
decl
adc
or
call
add
cltd
add
mov
adc
lods
sbb
mov
outsl
pushl
pop
outsb
mov
and
mov
and
rolb
les
mov
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
scas
mov
shlb
lcall
movsb
jmp
cmpsb
test
test
cmpsb
cmpsl
lcall
jle
decl
inc
outsl
decl
sub
mov
pop
incl
push
push
incl
add
mov
pop
call
add
cltd
add
lahf
add
cmpsl
or
pushl
es
mov
sub
sub
inc
sub
lds
cmp
enter
leave
mov
cld
scas
mov
lret
movsb
dec
mov
mov
add
add
add
stos
mov
push
adc
test
ljmp
popf
jmp
test
lods
ljmp
mov
scas
scas
scas
jmp
jb
decl
or
incl
or
add
push
incl
add
mov
push
decl
add
xchg
add
fwait
add
mov
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
lahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
test
push
incl
add
lea
push
decl
add
pushf
add
mov
add
lods
add
mov
jb
ret
dec
inc
mov
into
inc
call
inc
call
inc
nop
fmuls
fmuls
fisttpl
fisttpl
ficoml
call
test
std
mov
mov
mov
lahf
lahf
or
add
add
add
add
inc
dec
adc
jp
mov
cmpsl
scas
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsl
decl
sbb
xchg
sbb
mov
pop
decl
or
mov
push
call
add
popf
add
add
cmpsb
add
test
add
ja
int
mov
aad
cwtl
call
push
fwait
ficoml
fstl
jmp
pop
pushf
jmp
push
popf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
mov
sahf
add
inc
inc
adc
jns
mov
movsb
cmpsb
lcall
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
xchg
and
call
call
or
call
add
lcall
jmp
add
mov
fs
mov
xor
fisubl
jmp
bound
in
test
in
cmpsl
jmp
test
imul
faddl
ret
mov
cmpsl
cmpsl
mov
lahf
mov
add
add
add
inc
aas
adc
jae
fwait
xchg
cwtl
call
sahf
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
outsl
lcall
sub
xchg
push
call
add
cltd
add
mov
add
lods
add
mov
pushl
movq
roll
jmp
jo
jmp
jo
jmp
jno
jmp
jne
jmp
mov
out
je
out
je
out
je
jmp
xchg
mov
test
lcall
sahf
add
add
adc
outsb
js
mov
sahf
pushf
lcall
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
mov
cmp
xor
fwait
sbb
call
pop
jmp
add
add
mov
pushl
add
leave
sbb
fsts
jmp
ja
jmp
jle
in
xorb
repnz
hlt
test
push
cmpb
aam
inc
mov
stos
cmpsl
sahf
sahf
popf
daa
sahf
sahf
mov
add
add
add
pusha
add
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
mov
lcall
cmp
inc
jl
movsb
inc
jle
movsb
ss
lcall
lcall
add
test
pusha
ljmp
add
add
ret
add
shlb
mov
jmp
mov
push
mov
push
xchg
ret
push
nop
push
nop
xchg
stc
mov
out
mov
inc
ret
ret
clc
lods
lods
test
xor
popf
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
ret
mov
jge
lcall
dec
cmp
dec
test
mov
push
pusha
lcall
add
cmpsb
add
lods
add
mov
arpl
mov
add
enter
xlat
xor
call
xchg
cltd
push
cltd
push
fwait
pushf
enter
enter
int3
cld
popf
int3
cli
popf
into
sti
cltd
lret
push
xchg
sar
mov
dec
mov
rcrb
popl
cltd
fwait
lcall
ss
add
cmp
dec
jecxz
pop
popa
call
mov
mov
mov
sar
enter
mov
mov
ljmp
mov
movsb
sub
fwait
push
pop
lcall
add
add
mov
popa
mov
add
enter
rorb
jne
loopne
xchg
out
mov
push
cmpsb
into
push
cmpsb
int3
clc
cmpsl
into
cli
test
iret
sti
test
sar
std
stos
iret
cmpsl
iret
push
sahf
jmp
mov
dec
enter
mov
into
lahf
sahf
lahf
dec
xchg
xchg
xchg
add
fwait
cltd
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
jne
jb
mov
mov
mov
ret
inc
inc
mov
leave
leave
inc
ret
mov
test
movsl
push
xchg
scas
push
mov
scas
dec
xchg
mov
add
movsl
add
stos
add
mov
arpl
mov
add
into
add
fadds
jae
loopne
jl
out
pop
test
negb
sar
cld
mov
cli
mov
sti
mov
cld
mov
mov
mov
mov
std
mov
std
mov
push
movsb
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
sbb
dec
outsb
jo
mov
mov
aam
jmp
not
rcl
std
int3
into
int
lret
dec
lret
lret
lret
lret
leave
leave
mov
scas
ljmp
push
mov
lods
cmp
lcall
add
add
mov
fs
mov
add
rolb
outsl
call
add
filds
je
call
jb
cli
scas
sar
cld
mov
std
mov
fdivr
mov
fdivr
mov
fdivr
inc
mov
lret
jmp
mov
call
lret
int
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
leave
movb
in
out
jmp
test
in
leave
fsubp
fsubp
fcmovnu
xlat
fcmovnu
cli
aam
std
int3
iret
into
mov
imul
jmp
add
mov
mov
add
lret
call
add
fildl
jbe
in
jbe
in
xor
cli
mov
loopne
std
ret
std
inc
fdivrp
std
dec
loopne
dec
fdivrp
dec
inc
std
leave
sti
mov
lret
leave
sar
mov
mov
xchg
adc
add
add
incl
std
incb
std
incl
hlt
cmc
cmc
or
in
jmp
in
out
in
sub
out
out
dec
ljmp
xchg
call
out
aad
fstp
jmp
mov
xchg
cmpsl
cmp
movsb
push
jmp
popa
pushl
push
dec
add
xlat
add
add
ljmp
sti
mov
loop
cld
int3
in
dec
in
dec
in
std
into
in
dec
jecxz
dec
loope
std
shl
dec
in
shl
shl
cli
out
mov
inc
ret
test
cmpsl
mov
xchg
xchg
add
add
add
incl
std
incl
cmc
idiv
add
repnz
hlt
repnz
in
repnz
pop
out
repnz
out
in
pop
fsubp
loope
lds
sti
lahf
and
lcall
add
stos
add
mov
fs
mov
add
add
fildl
je
in
jp
in
push
jl
negl
cli
mov
std
shl
cld
shl
shr
std
shl
std
shl
aad
call
jmp
fucomi
fucompp
std
iret
loope
repz
in
fcos
leave
lret
lret
test
xchg
and
xchg
xchg
add
std
cli
add
std
stc
add
cli
stc
add
cmc
repz
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
lret
add
rolb
jb
fldl
jbe
out
jns
out
sbb
push
jbe
cli
std
fsubr
fucomi
std
fldpi
fucomi
fsubr
fsubr
jmp
jmp
std
fsubrp
fsubrp
std
shl
push
ret
out
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loop
add
mov
xchg
lods
jl
repnz
pop
lcall
ljmp
add
mov
add
int3
add
aam
jae
fiadds
je
jmp
sub
cld
shl
std
fucomip
fsubr
fldl2e
call
jmp
std
shl
cli
shl
sti
shl
stc
into
test
in
mov
jmp
rcr
call
fcom
sti
mov
mov
lcall
add
add
add
xlat
aad
mov
mov
sahf
jmp
sub
lahf
add
stos
add
mov
mov
add
rolb
outsb
call
add
loopne
js
ljmp
cli
cwtl
cld
lret
cld
lret
jecxz
cli
idivl
aam
hlt
mov
sar
icebp
mov
into
jmp
mov
iret
std
ljmp
imul
fndisi(8087
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
lret
add
mov
loopne
ss
mov
add
mov
data16
mov
add
dec
push
jo
rorl
jbe
fistl
ja
loop
cmp
call
scas
int3
ljmp
std
loopne
ret
cld
fildll
neg
mov
enter
into
in
enter
rcl
shl
xlat
fcmovnb
out
loopne
in
in
test
out
lock
jmp
lret
lret
push
lods
lods
stos
adc
cmpsb
test
add
ret
mov
ret
ret
popf
stos
aam
dec
cmp
test
insb
scas
and
js
mov
dec
test
ret
stc
lret
gs
test
mov
out
mov
mov
enter
int3
rcl
int3
mov
int
mov
rcl
jg
fcmovu
jb
loopne
gs
in
out
out
jmp
div
sub
div
and
repnz
fstp
or
mov
into
add
add
add
mov
rolb
mov
test
lcall
jne
ljmp
mov
sarb
mov
ret
cmpsl
enter
leave
ret
enter
int3
jp
into
shlb
iret
rcll
rcl
dec
inc
aam
aad
aad
fsubs
fcomp
ficompl
fneni(8087
fstl
fsubp
loope
loopne
in
out
ljmp
cli
testl
std
std
add
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
into
lret
ror
and
aad
sbb
rclb
rcl
aam
rcl
aad
rcr
fadds
fstp
add
add
in
add
in
ljmp
incb
mov
mov
add
ret
lds
rol
sub
mov
mov
push
rol
or
mov
add
into
lret
rolb
rcl
aam
rcl
aam
aad
aam
aad
xlat
add
fsub
add
aam
add
loop
add
fnstsw
add
out
add
icebp
lock
std
incl
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
into
ror
jmp
aam
cmc
rcl
sar
into
into
sar
int
int
lret
int3
lret
mov
mov
stos
stos
lods
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
into
iret
xlat
xlat
xlat
call
aad
dec
rcl
dec
into
into
dec
lret
mov
mov
cld
stos
stos
lods
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jne
je
data16
dec
inc
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
lret
rcl
sar
rcl
sar
lret
inc
mov
pushl
stos
test
popf
popf
sahf
xchg
xchg
xchg
jmp
outsl
jo
pop
adc
add
add
add
add
add
jg
addl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
insl
insl
outsb
push
pop
pop
cmp
aaa
cmp
jo
jo
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
cmpsl
cmpsl
test
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
lcall
popf
xchg
cltd
fcoml
addl
jmp
js
sarb
jnp
jp
jns
jb
jb
push
push
push
cmp
jae
pushf
sahf
pushf
mov
scas
lods
repz
scas
scas
sti
scas
lods
scas
std
cmpsl
cmpsl
test
call
test
call
mov
lods
jmp
lods
lods
leave
movsb
movsb
movsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
outsb
outsb
pop
lods
movsb
stos
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsb
outsb
outsb
orl
cltd
lcall
mov
xchg
xchg
xchg
lcall
cmpsb
cmpsl
mov
mov
mov
mov
stc
mov
mov
cmpsl
mov
addb
add
add
add
add
popa
or
lods
mov
movsl
lahf
mov
decl
mov
cwtl
cwtl
xchg
std
sahf
sahf
mov
negl
cmpb
push
push
jo
pop
pop
outsl
insl
insl
insl
xchg
subl
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
jl
mov
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
movsb
cmpsl
call
xchg
xchg
call
cltd
cltd
cwtl
lcall
fwait
lahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
xchg
aam
mov
out
xchg
ja
notb
cmp
dec
jl
mov
ss
mov
jae
mov
outsl
pushl
sbb
mov
mov
scas
scas
jle
mov
add
add
add
pop
pusha
pusha
or
mov
lcall
sahf
popf
jmp
mov
xchg
decl
addl
xchg
jae
cld
xchg
pop
cmp
dec
jns
nop
cmp
xchg
sub
xchg
sbb
cltd
adc
lahf
or
imul
mov
insb
pushl
pop
jae
mov
pop
xchg
mov
lods
lods
xchg
popf
lahf
lahf
adc
add
add
pusha
pop
pusha
or
stos
mov
stos
movsb
test
mov
test
ljmp
test
lcall
pop
jns
mov
push
mov
decl
adc
xchg
push
decl
add
call
add
test
pushl
jp,pn
mov
das
jle
enter
lret
dec
pop
cwtl
inc
stos
mov
mov
mov
cmpsl
cmpsl
test
add
add
add
pop
or
movsb
stos
in
mov
test
scas
scas
mov
mov
mov
mov
mov
cmpsb
cwtl
mov
decl
addps
xchg
push
incl
add
mov
push
call
add
cmpsb
add
mov
outsb
inc
cmp
dec
inc
call
inc
nop
call
inc
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
add
add
add
pop
or
popf
mov
ljmp
mov
mov
mov
mov
movsb
test
call
sbb
decl
or
decl
add
mov
add
scas
add
mov
dec
xchg
call
push
pushf
ficompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
cmpsl
xor
jg
add
add
dec
dec
dec
pop
jl
jp
pushf
cwtl
lcall
scas
mov
mov
mov
mov
mov
mov
lahf
gs
xchg
cs
lcall
and
call
add
sahf
add
cmpsl
add
mov
mov
xor
jmp
insl
test
in
lods
ljmp
out
jae
jmp
jns
call
test
std
mov
test
addb
add
dec
dec
dec
pop
outsl
insl
imul
test
fwait
lcall
mov
mov
sar
mov
jmp
cmp
mov
sub
cwtl
or
lcall
pop
ljmp
add
rorl
out
mov
jmp
mov
out
test
push
xchg
out
mov
mov
test
push
fwait
lcall
sub
push
push
push
dec
pop
addr16
loopne
mov
mov
sarb
mov
xchg
jmp
sub
lcall
ljmp
add
add
int3
adc
jmp
popa
mov
push
xchg
ret
push
cltd
cwtl
stc
lcall
negl
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
pushl
pop
xchg
lods
dec
test
mov
add
jmp
add
add
lret
add
fldenv
cmp
cmc
mov
sar
clc
test
cli
test
sar
cld
lods
sar
sti
cmpsb
lret
jmp
mov
inc
mov
stos
jne
popf
popf
or
add
add
push
push
dec
aaa
jae
jae
stos
stos
test
out
into
int
lret
sti
leave
leave
enter
enter
mov
stos
bound
jmp
add
mov
gs
add
iret
add
fiaddl
xchg
push
xchg
cld
mov
std
mov
xlat
mov
xlat
mov
sar
jmp
rol
scas
lods
scas
mov
add
add
add
add
pop
or
aad
dec
loop
loopne
loope
fcmovnu
ffree
fcmovu
aam
xlat
out
shll
test
push
pop
ljmp
add
enter
xlat
add
in
jl
icebp
push
mov
std
ret
loop
std
loop
inc
loopne
std
leave
loopne
dec
dec
cld
fdivr
out
mov
lret
mov
xchg
pushf
pushf
pushf
sbb
add
add
std
add
incb
jmp
out
sbb
in
in
xor
loopne
loop
mov
mov
mov
add
mov
fs
add
into
add
faddl
je
ljmp
std
ret
std
shl
std
shl
shl
shl
std
xlat
out
out
std
aam
push
xlat
fcmovne
sar
mov
mov
and
add
add
std
incl
std
std
add
incb
aam
aad
mov
pop
mov
sahf
or
test
pop
pushl
add
rolb
outsl
filds
jne
out
pop
mov
cli
mov
std
shl
std
fldl2e
std
cld
fld1
sti
std
cld
shl
push
xlat
xlat
sti
mov
popf
sahf
das
add
add
int3
into
int
mov
fs
mov
add
mov
add
add
loope
ja
out
xor
cli
int3
loope
stc
lret
test
xlat
icebp
rcl
out
aam
in
aam
out
shl
in
shl
in
fsubr
mov
stos
das
std
std
std
add
add
add
aad
mov
jb
or
mov
insl
inc
sbb
lret
and
aad
xchg
fists
clc
in
mov
out
jecxz
leave
jmp
fidivrs
leave
sarl
in
ficompl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
push
xchg
mov
nop
fidivrl
jg
rol
lods
mov
mov
ret
nop
aam
enter
int3
insl
aam
int
aam
rorl
xlat
xlat
cmp
das
in
fisubs
in
lock
in
in
or
std
incb
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
leave
and
rcl
pop
mov
rcl
or
loope
or
int
add
std
std
add
std
add
add
add
int3
into
shufps
or
int
int
stos
stos
stos
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
mov
xchg
enter
enter
rol
mov
scas
scas
insb
lods
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
mov
enter
sar
aad
std
rcl
sar
into
into
iret
std
mov
stc
mov
test
andb
pop
add
add
add
add
add
add
add
add
jae
jb
data16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aad
dec
iret
into
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jae
jae
xchg
adc
jo
ret
popa
mov
push
insl
jb
popa
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jae
daa
and
add
add
add
jae
jae
popf
xchg
pushf
mov
test
xchg
xchg
or
test
push
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
popf
fwait
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
mov
cmpsl
cld
mov
xchg
xchg
xchg
cld
sahf
sahf
pushf
cmc
lcall
mov
push
push
imul
jg
mov
xchg
testl
mov
mov
jo
mov
scas
lods
push
stos
stos
lods
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
jbe
out
nop
arpl
std
pushf
inc
jne
cmpsb
ss
lods
sub
pushl
sbb
mov
jl
mov
mov
imul
into
add
xchg
pop
lods
movsb
stos
test
popf
pushf
sahf
jmp
movsb
cmpsb
call
imul
xchg
inc
jb
lea
imul
push
popa
call
or
mov
push
outsl
pushl
and
inc
sub
lds
inc
fwait
scas
divb
stos
stos
or
add
add
pushf
lahf
test
test
mov
pushl
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shll
lret
ds
iret
inc
mov
aad
mov
aam
xchg
dec
lcall
mov
add
add
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
ljmp
aaa
outsb
call
push
pop
call
add
mov
add
mov
push
xchg
fcompl
loope
mov
jmp
cmpsb
call
fwait
mov
mov
cmpsb
test
add
add
popa
arpl
mov
fwait
cld
mov
mov
mov
mov
mov
pushf
dec
jle
pushf
xor
cwtl
and
xchg
push
pop
jmp
add
mov
addr16
xor
jmp
jp
push
jle
out
jg
fstps
mov
and
add
add
adc
push
cmp
mov
mov
ret
ret
mov
jmp
inc
jge
sahf
and
lcall
add
mov
fs
or
dec
xchg
out
lea
push
xchg
push
xchg
push
xchg
jmp
cmpsl
inc
mov
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
pop
push
pushl
add
aad
js
jmp
scas
clc
cmpsl
iret
stc
stos
iret
cld
lods
sar
sti
scas
sar
cld
lods
sar
ljmp
fldenv
std
std
add
outsl
jno
mov
mov
aam
aam
aam
rcl
out
leave
leave
leave
cli
mov
mov
jmp
add
add
aad
jae
out
xchg
clc
pop
std
mov
fdivr
inc
cld
rcr
std
rcr
lock
ret
in
test
dec
addl
stos
add
in
in
or
out
jmp
outsb
fisubl
mov
add
mov
add
add
out
cmp
std
iret
in
shl
call
in
aam
std
aad
push
leave
aad
into
in
scas
scas
lods
popa
jg
addl
add
add
std
std
add
std
push
lret
lret
shrl
sahf
sbb
lods
add
mov
add
loop
jns
cmc
push
cmpsl
std
loopne
std
xlat
out
cld
out
cld
shl
std
aam
sti
shl
push
fsin
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
or
cmp
out
mov
aam
call
mov
shl
in
aad
ljmp
scas
vsqrtps
add
add
rol
mov
stos
xchg
dec
and
ret
int3
lret
js
mov
fdivrs
lret
adc
int
xlat
int3
rcrb
rcl
dec
jecxz
loope
out
out
in
out
in
sbb
rol
add
mov
cmp
movsb
lods
arpl
lods
mov
ret
lds
int3
sbb
bswap
int3
into
or
aad
push
std
add
std
incl
lods
std
std
add
sarb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
jecxz
pop
mov
std
and
jns
in
mov
inc
mov
sub
fimuls
pushf
test
negl
out
jp
mov
inc
jle
loope
add
adc
xchg
shll
jmp
lock
aas
lret
cmpsl
push
bound
arpl
xchg
js
andb
mov
lcall
mov
xor
popf
push
stos
call
cld
popl
mov
movb
ret
out
sbb
popa
outsb
inc
mov
push
mov
add
inc
jae
mov
ret
dec
sbb
jmp
jmp
out
pusha
cmpsl
pop
adc
sbb
jno
fwait
xchg
loop
lods
and
scas
mov
subb
and
adc
jb
mov
push
lds
or
push
mov
sub
dec
pop
adc
mov
jnp
mov
fimull
fdivrs
sbb
fcmovnb
push
je
push
int3
cli
mov
xor
sub
out
pop
jae
test
cmp
xchg
mov
xchg
cmc
jns
mov
mov
gs
loop
add
dec
ret
ret
mov
aas
sub
stos
inc
ret
scas
outsb
mov
push
adc
es
cmp
xlat
dec
dec
insl
repz
inc
jns
add
lods
jmp
add
and
pop
inc
pop
cmp
dec
incl
popf
and
mov
stos
xor
pushf
es
sbb
sbb
mov
aas
insb
lock
cmp
adc
mov
outsb
test
cli
mov
sbb
inc
or
xchg
ds
sub
cmc
pop
cltd
cmp
gs
aad
pop
jle
rclb
dec
mov
cmpl
shlb
xchg
jg
inc
or
push
shll
mov
cmp
jecxz
and
movsb
jno
inc
adc
xor
add
loope
cmp
push
icebp
fbstp
loope
push
rorb
mov
cmp
int3
outsb
inc
adc
dec
mov
hlt
imul
outsb
lods
je
xchg
add
push
fistpll
adc
push
loop
imul
push
jecxz
sbb
dec
repz
mov
inc
jo
lods
int3
shlb
cmp
mov
dec
push
aam
repnz
les
cli
arpl
or
jg
mov
insb
inc
mov
mov
mov
cli
pop
cmp
lods
add
sti
push
sub
jne
mov
lahf
lret
das
fiadds
rorl
icebp
popa
xchg
sbb
bswap
testb
sbb
xchg
mov
or
pop
cmc
rcll
mov
loop
push
dec
jb
and
cmpsw
cmp
xchg
cli
shll
mov
outsl
ljmp
std
roll
push
enter
lods
inc
ja
jo
imul
frstor
mov
mov
mov
fcomip
aaa
and
mov
push
mov
mov
int
push
fs
loope
dec
aaa
cmpl
outsl
popa
mov
cmp
loope
sub
jle
jge
jno
icebp
sub
pop
push
pop
jp
hlt
das
addl
xor
pop
enter
pop
pop
jl
cmp
dec
mov
cli
or
adc
mov
out
push
mov
sar
jns
or
sbb
inc
add
addr16
inc
fdivl
mov
clc
pop
xchg
inc
mov
xchg
gs
mov
mov
sbb
movsl
es
push
fisubrl
pop
mov
data16
std
std
cmpsb
je
cmpsl
cmpb
mov
cmpsb
mov
lock
mov
add
lods
dec
xchg
and
int3
pop
jo
xor
jp
lods
dec
ret
xchg
add
xor
loop
sub
test
gs
lahf
push
add
cli
adc
inc
cmp
data16
and
rolb
movsl
mov
test
mov
adc
pop
or
lret
cmp
cmp
js
out
cmp
dec
idivb
pop
mov
in
mov
and
or
dec
adc
adcl
aaa
jl
jno
addr16
lret
inc
pop
add
sbb
sbb
xor
fsubrs
js
outsl
jns
stc
xchg
adc
push
cld
lds
test
xor
cmp
pop
call
sti
orl
dec
push
lds
jp
cmpsl
pop
xor
lea
repz
shll
xlat
cli
mov
call
sahf
mov
repnz
mov
push
xor
nop
push
rcl
xchg
in
rorl
fldl
inc
adc
aam
xchg
mov
or
push
out
push
push
mov
lret
out
mov
cmp
out
cmp
push
clc
cmp
adc
gs
or
cmp
stos
jmp
jae
repnz
mov
out
dec
inc
and
movsb
mov
xor
out
int
test
or
lods
cmp
or
sbb
imul
aad
fs
icebp
xchg
or
imul
jbe
lea
add
in
fs
insl
xor
push
movsl
xchg
sub
jns
in
subl
push
scas
jge
mov
in
pop
mov
sbb
sbb
aas
add
jns
les
lcall
pop
test
xchg
cltd
sub
mov
push
sub
adc
jg
in
scas
addr16
popf
test
push
aam
add
lods
or
and
push
in
mov
sbb
pop
mov
mov
pop
rolb
vpsraw
mov
jno
cmp
fcmove
cli
scas
jp
js
ljmp
mov
add
shll
pop
add
mov
jo
aam
jo
push
testl
in
jp
mov
ds
inc
pop
pop
cmc
nop
push
arpl
dec
mov
adc
jo
sbb
ret
lahf
ss
push
mov
xor
daa
mov
jge
sub
enter
addr16
or
and
sbb
cmp
jmp
jne
add
mov
rcrb
aad
ret
mov
jmp
aam
or
adc
movsl
insl
fildl
mov
lahf
cmp
pop
es
xorb
movsl
aam
arpl
xor
sub
es
sbbl
js
lahf
fistpl
mov
sbb
cmpb
cmp
stc
nop
aad
ret
notb
scas
daa
out
ja
dec
xor
xchg
imul
mov
in
jno
pop
fistpll
rcll
inc
es
pop
out
bound
or
sbb
xchg
sub
cmp
subb
in
mov
nop
jge
mov
mov
daa
xchg
out
fwait
stc
test
cmp
je
dec
jne
sarb
gs
lret
push
out
cmc
jmp
negl
adc
pop
cmp
push
cmp
ja
dec
push
xchg
add
shlb
pop
inc
adcb
push
aas
jo
jb
add
arpl
pop
stos
aaa
pop
je
add
dec
daa
outsl
out
adcb
pop
jg
push
jb
fildll
pop
stc
jae
push
lods
pop
xchg
adcb
jl
lret
lods
out
xor
add
mov
pop
push
mov
jno
je
and
adc
lods
inc
cli
xor
lods
gs
bound
xor
mov
jmp
jmp
repz
pop
adc
mov
scas
inc
fistl
mov
lret
or
jg
pop
lahf
ss
leave
push
popf
cli
mov
push
jecxz
and
jae
insl
inc
ficompl
xorb
ljmp
lret
cmp
rcrl
push
jmp
inc
scas
or
push
and
ret
stc
push
inc
fiaddl
fidivs
data16
pop
outsb
movsb
cmp
aas
insl
push
js
decb
cltd
xor
inc
xlat
nop
in
cmp
sti
mov
sahf
and
xchg
sub
push
xor
inc
pusha
xchg
sub
xor
outsl
jp
into
imul
xor
sbb
push
jp
nop
popf
mov
mulb
arpl
xor
push
into
gs
adc
lods
pop
call
push
jmp
fimull
fbstp
and
push
pop
popf
xor
mov
adc
sub
bound
dec
in
sti
imul
dec
stos
xsha256
cmpsb
shrl
and
mov
dec
pop
scas
jge
lret
bound
lds
int3
arpl
cmp
cmpsl
stos
cmp
add
pop
repz
fdivp
rorb
imul
xchg
jb
and
icebp
or
in
push
sub
jb
mov
mov
and
lahf
shll
repnz
jbe
andb
arpl
jge
stos
inc
stc
sbb
mov
mov
push
jmp
scas
push
popf
pop
movsl
testb
jae
cmp
inc
sub
jp
add
cmp
xchg
imul
fnstenv
scas
adc
xchg
nop
je
lcall
int
insb
inc
adc
xor
aam
insl
or
sbb
jg
jge
outsl
jg
andl
and
adc
test
fnstenv
dec
adc
sub
mov
cmc
insl
and
and
push
adc
and
hlt
mov
out
clc
mov
sbb
in
and
pop
ja
dec
jo
fwait
xchg
outsl
push
in
pusha
cmp
pop
xor
add
adc
insl
shll
xchg
sub
dec
fidivs
lret
es
inc
into
ljmp
loop
popf
xor
add
icebp
jne
jg
in
scas
inc
or
cli
xchg
fwait
fs
mov
dec
mov
xchg
inc
dec
xchg
andl
nop
push
jne
andl
rclb
jmp
mov
cld
scas
sbb
int3
inc
testb
push
mov
fs
jl
pop
and
outsl
jp
cmpsb
imul
xor
fisttpll
or
pop
repz
mov
mov
push
xchg
inc
dec
in
aas
lret
bound
pop
mov
or
insl
cmp
dec
pop
rcr
outsl
or
leave
outsb
mov
imul
mov
dec
cli
xchg
jb
adc
inc
inc
or
stos
pop
pop
in
orl
jecxz
call
sahf
mov
push
movsl
cmp
adc
nop
test
aas
outsb
cmpsb
mov
sbb
loop
cmp
insb
add
int3
jmp
mov
nop
shrl
xlat
xchg
repnz
jecxz
xchg
sub
add
mov
or
test
adc
fwait
push
lods
inc
mov
inc
push
dec
lret
bound
mov
arpl
push
into
mov
outsb
push
mov
sti
outsb
push
popf
pushf
sbb
mov
insl
scas
pop
repnz
or
dec
inc
insl
add
call
testl
pop
jle
fsubrl
inc
arpl
jno
push
call
dec
sbb
mov
adc
sbb
in
xor
xor
mov
push
push
fs
inc
mov
jmp
pop
jbe
xlat
nop
jnp
scas
insb
cmp
insl
incl
popa
clc
data16
ret
mov
fsubl
aam
rorl
inc
sti
xchg
aaa
movsb
pop
repz
push
push
mov
daa
pop
daa
enter
cld
xchg
jo
xchg
sub
add
cwtl
xchg
xchg
or
rcrl
jl
cmp
repnz
cmp
mov
jl
repz
roll
loopne
lock
mov
ljmp
divl
pusha
pop
cmc
movsl
fidivrs
ror
dec
fs
xor
test
cs
fstps
sub
je
inc
xlat
push
xchg
jmp
or
dec
in
test
mov
sub
dec
fnstenv
dec
pop
out
nop
popa
adc
push
aas
fidivs
jae
pusha
gs
sub
xchg
dec
bndldx
iret
out
lods
jle
pop
andl
inc
mov
jmp
push
dec
loope
dec
ds
gs
faddl
std
xchg
push
xor
adc
shl
push
sbbb
nop
fbstp
mov
andb
jno
mov
push
sub
je
xor
inc
sbb
popf
xor
aad
fst
imul
aam
insl
mov
mov
add
push
popf
xchg
je
test
and
inc
nop
daa
cmp
fidivs
pop
jnp
dec
out
mov
sbb
das
pop
lods
ret
jg
xchg
jno
test
lcall
fstpl
and
adc
push
aam
nop
daa
cmp
sub
dec
and
inc
call
add
notb
outsb
add
shrb
sbbb
cmp
subl
xchg
shr
xor
jecxz
inc
aad
jmp
aam
mov
or
or
mov
cwtl
das
sahf
mov
add
and
mov
les
mov
sub
mov
pop
test
gs
sub
test
xor
pusha
cld
clc
out
adc
sarl
lahf
ss
pop
sahf
adc
insl
cli
xor
fs
mov
dec
push
ja
sbb
outsb
in
aas
ficomps
hlt
mov
lret
stc
push
daa
adc
pop
test
clc
adc
xchg
sub
stos
xchg
sub
mov
fistps
rcrb
xor
insl
jno
mov
jbe
xor
fisttpl
mulb
push
pushf
fistps
mov
es
pushf
xor
mov
lea
fistl
outsb
gs
in
adc
jne
xchg
clc
enter
sbb
enter
xor
sbb
in
popf
cmp
mov
ret
sbb
sbb
mulb
mov
xchg
or
pop
jp
into
gs
fstenv
icebp
pop
out
push
das
pop
out
mov
ror
mov
inc
fldt
shlb
rol
ja
xchg
lret
mov
jno
push
jmp
sbb
or
cs
testb
pop
dec
shll
loop
inc
and
into
push
rcrl
addr16
xor
xchg
sbb
cmpsl
mov
and
inc
cld
xchg
xor
push
push
in
data16
inc
movsl
xchg
mov
in
stc
sahf
push
xchg
sub
mov
iret
add
pusha
negl
mov
scas
inc
aad
cmp
mov
les
jns
or
xchg
in
popf
xor
mov
into
gs
sub
jge
nop
daa
aam
daa
mov
add
mov
xchg
testl
test
iret
pushw
mov
mov
sbb
xor
fistpll
in
into
dec
inc
inc
mov
scas
test
jge
iret
aas
add
cmc
mov
and
push
sub
mov
je
adc
jge
mov
stc
iret
inc
flds
sbb
lods
sub
pop
scas
jb
pop
pop
icebp
dec
push
jge
sahf
mov
push
in
insb
or
std
xchg
mov
dec
into
gs
mov
or
popa
fsubrs
push
push
cmpsl
fs
inc
dec
sub
jge
test
mov
fcoms
insl
cli
dec
dec
in
sbb
bound
lret
loope
jnp
fiadds
pop
repz
mov
movsb
or
mov
adc
cltd
xor
xor
mov
xor
shrl
cld
pop
cmc
sub
xor
add
jnp
push
movsb
xor
adc
sbb
lea
leave
lds
xor
ret
push
pop
js
in
pop
loope
mov
mov
mov
mov
mov
call
sub
inc
push
fbstp
rcll
cmpsl
ret
aas
leave
mov
push
cltd
sti
inc
stc
sub
jg
leave
adc
ljmp
bound
clc
add
aam
std
mov
addr16
out
shrl
repz
jp
jae
dec
and
inc
pop
dec
dec
pop
repnz
iret
jl
in
adc
cwtl
xchg
mov
imul
cmc
cltd
inc
fwait
or
into
and
push
les
out
aaa
adc
psllq
jmp
sti
cmp
or
fmuls
and
cmp
inc
imul
add
pop
repnz
mov
or
mov
cmp
jns
ss
lret
lock
into
sub
pop
jl
in
and
cmp
add
or
sbb
repnz
mov
mov
sbb
arpl
aas
dec
fwait
aam
xor
jb
push
mov
xor
es
mov
insb
jp
shlb
inc
mov
push
aas
fmull
inc
les
call
lds
scas
inc
jmp
or
and
or
stos
pop
sahf
adc
lods
adc
pop
cltd
lcall
dec
inc
xchg
int
lea
div
mov
jg
pusha
aas
or
xchg
pusha
xchg
sub
icebp
push
lret
bound
adc
inc
xchg
pop
push
aas
sti
xchg
mov
shrb
lods
dec
in
pop
daa
mov
pop
xchg
xor
add
les
xor
push
jle
loop
jbe
adc
inc
jae
nop
dec
hlt
and
xor
push
add
lock
outsl
push
pop
adc
mov
shrl
data16
add
test
jp
cli
push
cmpsb
cmp
test
lret
ja
fbstp
jmp
cmp
in
mov
add
hlt
jae
xchg
push
adc
sbb
dec
outsb
push
mov
push
sub
rorb
pop
loope
mov
jp
test
add
push
lods
pop
mov
mov
sub
inc
jg
push
jmp
test
shrl
jecxz
pop
aam
scas
inc
jl
cmp
iret
xor
adc
cld
xchg
or
movsb
pop
lahf
mov
pop
popf
fisubs
pop
dec
push
fwait
xor
addr16
push
stc
mov
or
movsb
cmp
fwait
mov
xor
adc
xor
mov
cmp
xchg
sub
and
mov
sub
ret
xor
mov
stos
inc
test
nop
int
add
loope
popf
shll
ret
inc
xchg
sub
icebp
lods
stos
inc
pop
outsl
pop
mov
les
add
jae
pop
cmc
jo
sahf
xor
into
in
xor
frstor
sahf
xor
test
xor
arpl
jne
pop
ss
xchg
test
add
mov
push
cmp
into
cmp
nop
daa
inc
sbb
cmpsb
addr16
cltd
mov
xor
push
insb
add
leave
rclb
add
mov
xchg
push
adc
cltd
add
sbb
add
out
add
mov
imul
outsb
pop
fdivl
xchg
lds
mov
add
sbbb
dec
call
addr16
fidivl
pop
cmpsl
mov
rorb
push
psubb
addl
mov
pop
divb
adcb
cs
nop
pusha
movsb
sahf
xor
sbb
xor
repnz
mov
fnsave
pusha
testl
push
lds
adc
pop
sbb
int
in
xchg
fmul
fbstp
mov
xchg
sub
mov
arpl
dec
loope
fimull
out
mov
clc
pop
sbb
adc
cmp
gs
outsl
out
cmp
pop
cmc
es
clc
sub
ds
pushf
rorb
cs
faddl
mov
adc
xchg
or
xchg
mov
and
mov
pop
hlt
lcall
mov
jl
aam
int3
arpl
stos
aaa
into
repz
xchg
sub
inc
jbe
dec
push
cmp
inc
jb
inc
dec
data16
mov
ret
mov
ficoml
shll
lods
inc
sub
dec
mov
sarl
rcrl
pop
out
add
les
and
inc
push
movsb
sub
divb
mov
mov
sub
mov
out
xchg
shrl
fsts
adc
dec
loope
testl
test
adc
push
testb
jp
decl
push
out
imul
out
push
test
push
sub
jp
pop
sahf
jge
push
in
das
lahf
jge
and
inc
rcrl
outsb
add
push
fld1
jg
jb
and
or
cwtl
das
outsb
xchg
mov
jne
dec
rcrl
mov
mov
mov
sub
inc
mov
jns
mov
xchg
lcall
add
push
popa
and
push
jae
add
cmp
mov
call
stc
add
mov
mov
out
pop
sbb
scas
inc
jg
sub
xchg
mov
sub
jmp
or
mov
imul
xchg
inc
fst
inc
clc
jne
fs
les
sbb
xchg
push
pop
out
mov
inc
ficompl
aam
mov
inc
popa
clc
push
es
icebp
xorl
dec
movsb
sbb
aad
push
call
inc
rorl
push
test
inc
mov
mov
inc
push
mov
scas
lret
iret
scas
inc
jbe
mov
xchg
out
inc
mov
jo
pop
fsubs
inc
sub
shrl
dec
mov
and
jle
aas
dec
loop
jno
imul
outsl
in
mov
cmp
shrl
imul
adc
adc
jecxz
adc
xor
loope
jbe
xchg
push
adc
mov
dec
inc
xor
icebp
out
pop
push
dec
xchg
sub
pop
stc
mov
mov
pop
dec
loope
mov
jle
push
lods
out
test
jne
push
stos
hlt
sub
and
jns
enter
pop
mov
inc
fcmove
stc
les
sbb
mov
xlat
iret
jns
push
stos
sbb
dec
mov
cmp
gs
dec
out
push
add
xlat
xchg
lds
shll
cld
std
mov
dec
call
popf
push
mov
cltd
xor
aam
or
clc
cmp
scas
push
sahf
xor
mov
fstl
pusha
mov
push
xchg
xor
pop
adc
push
mov
mov
mov
xor
ds
movsl
movsl
mov
or
das
mov
ljmp
ret
mov
stc
mov
mov
lahf
xchg
jp
out
imul
scas
out
mov
cmp
lret
mov
and
leave
sbb
mov
ljmp
imul
push
jmp
or
and
sbb
xchg
mov
into
cmp
outsl
push
sbb
mov
test
adc
movsl
lea
pop
cld
xchg
arpl
dec
loope
ret
mov
cmpsb
push
add
jnp
jne
loope
push
stc
nop
xchg
jb
stc
test
mov
dec
cli
das
jmp
pop
ja
dec
push
cmpsl
ds
sti
or
pop
or
pop
out
stos
pop
dec
loop
int3
jg
mov
inc
fidivl
and
xchg
xchg
pop
icebp
mov
mov
mov
es
loope
pop
aad
push
out
dec
outsb
cmc
mov
cltd
xor
fnstcw
adc
movsl
sti
xchg
xlat
mov
popa
clc
in
test
xchg
shrl
clc
sar
add
adc
enter
lds
push
movsl
dec
xchg
push
or
pop
push
sub
pop
pushf
shrl
mov
lods
inc
xchg
ds
mov
or
pop
cmp
nop
nop
push
les
addb
push
mov
imul
add
shlb
and
push
lcall
insb
lds
sti
mov
adc
inc
pop
cmp
push
bound
or
add
pusha
jb
cmp
call
repz
ret
hlt
adc
aam
fcmovne
xor
dec
sbb
fldcw
popf
imul
dec
sbb
dec
mov
cmp
xor
adc
stos
sbb
arpl
fs
push
rcr
cs
pop
pop
ret
rcll
push
shrb
jmp
test
or
sbb
in
scas
mov
dec
mov
mov
popa
stos
loop
dec
fistpll
clc
inc
fcmove
xchg
out
lret
xlat
xchg
push
jmp
in
leave
adc
cwtl
mov
and
or
test
lcall
push
mov
sbb
push
in
push
cmp
sub
mov
sbb
movsb
outsl
mov
sbb
sub
jnp
hlt
xor
sub
xchg
insb
call
lret
sub
mov
inc
mov
lods
xlat
push
jmp
iret
pop
ret
xor
sub
or
in
add
cmp
and
dec
test
cmp
pop
mov
dec
add
mov
jmp
repnz
xchg
mov
stc
dec
mov
je
inc
inc
dec
jecxz
gs
jo
fidivs
pop
stos
shll
test
jne
inc
or
sbb
roll
adc
mov
addb
xchg
push
iret
js
add
mov
xor
sbb
imul
mov
mov
xor
aaa
cmpl
xchg
mov
mov
sbb
cmp
cmp
js
cmp
push
jae
cmp
cmp
xor
popa
jno
aas
dec
orb
nop
inc
shrl
mov
push
cmc
xor
push
adc
mov
jno
cmp
hlt
xor
es
mov
sub
sbbl
push
add
sbb
pusha
popf
cltd
pop
scas
and
scas
fmuls
into
add
inc
or
js
xor
cmc
mov
dec
pop
xchg
xor
jns
lea
or
cmp
pop
and
pop
jae
or
pop
cld
push
sub
clc
cltd
and
xor
lea
loopne
insb
scas
pop
scas
or
stos
jns
mov
sbb
lahf
lea
loop
movsb
mov
stc
dec
shr
jae
scas
lds
mov
dec
shlb
cmc
pop
sahf
fadds
mov
insl
sbb
lods
and
out
movsb
xor
aad
adc
cmp
sub
push
xor
or
pop
xchg
fs
ret
jl
daa
inc
in
lods
mov
fisttpl
lock
into
gs
adc
and
inc
push
inc
dec
aam
cmp
je
outsl
dec
push
pop
lock
pop
xchg
add
jae
cmp
sbb
clc
shrl
ljmp
xor
jmp
fwait
cmp
inc
ret
pop
xor
add
subb
mov
mov
in
jg
bound
imul
sbb
loope
or
and
jmp
and
adc
lds
dec
loopne
add
mov
repz
or
in
mov
mov
push
std
inc
or
pop
mov
movsb
xor
dec
and
int
loope
jecxz
inc
out
das
fwait
add
jge
cmp
lds
and
lcall
lret
push
lds
mov
sub
dec
mov
lds
sub
mov
test
out
movsl
int3
orb
in
cwtl
pop
sti
xor
sbb
arpl
out
inc
enter
push
lcall
orb
loop
pop
es
inc
pop
sub
cltd
jbe
lret
mov
sub
test
stc
nop
mov
adc
into
inc
loope
fsubl
popf
lods
jge
lods
adc
stc
add
jnp
cmpsb
xchg
lds
jmp
leave
xor
ds
push
cmc
adcb
xchg
and
repz
mov
outsb
xchg
adc
and
cmp
cld
pop
rolb
mov
iret
push
xor
xlat
push
mov
jg
nop
js
daa
sub
pop
mov
sub
push
xchg
sub
jae
inc
fidivrl
jp
sbb
and
fdivrs
jp
mov
rorb
xchg
outsb
xchg
add
pushf
xor
int
mov
adc
fs
call
dec
lret
xor
leave
ja
xchg
flds
lret
xchg
sub
sub
jbe
in
ljmp
fsubrp
orb
xchg
mov
loopne
pop
adc
fs
scas
and
push
rolb
or
out
jmp
push
loop
ljmp
shl
mov
fwait
hlt
cmp
xchg
sub
bound
adc
pushf
xchg
cmp
les
mov
sbb
or
outsl
cmp
loop
cmpsb
push
ret
js
mov
insl
or
rcrb
mov
xor
xor
mov
stos
fcoms
push
dec
mov
nop
mov
xchg
mov
xlat
ds
push
sub
ror
pusha
add
aaa
cmp
mov
arpl
and
in
jg
mov
mov
push
pop
rclb
je
pop
adc
in
adc
add
push
xor
sbb
cmp
ljmp
push
ds
add
xchg
leave
mov
sub
pushf
sbb
stc
add
insl
in
movsb
cmp
jne
out
lahf
xor
lcall
mov
and
xchg
fbld
mov
and
xchg
ret
push
mov
popl
arpl
sbb
xchg
xlat
sti
hlt
or
adc
dec
xor
jae
lahf
inc
sbb
pop
push
lret
ret
sub
jnp
dec
or
add
cs
sahf
test
adc
in
jns
lea
push
inc
loope
dec
xchg
sub
xchg
cli
jbe
inc
cwtl
sub
lret
insb
sbb
lods
mov
cmp
arpl
xor
imul
mov
insl
dec
adc
adc
fstpl
xchg
pop
out
xchg
mov
cmp
rcrl
ljmp
mov
aam
pop
dec
insl
pop
addr16
cltd
sub
jns
mov
icebp
je
jmp
int3
repz
pusha
loopne
adc
roll
pop
enter
loopne
jne
popa
insl
div
add
sbbb
and
push
sbb
sub
jecxz
mov
adc
repnz
loopne
or
mov
pushf
push
ret
mov
mov
shll
jl
ret
lock
jo
sub
push
out
push
sbb
add
int
dec
sbb
into
push
mov
mov
mov
lods
push
test
xlat
add
mov
sbb
jae
out
mov
pop
and
xor
adc
imul
lcall
test
add
test
xchg
inc
cmp
imul
ds
popa
hlt
mov
iret
pop
mov
aaa
mov
add
andb
clc
mull
mov
sbb
cltd
test
sbb
adc
sub
pop
pop
movsb
mov
xlat
inc
xlat
adc
cld
jb
sbbl
hlt
mov
pop
lret
test
out
outsl
add
xor
pushf
popa
inc
dec
add
xchg
mov
pop
ret
adc
jb
or
jne
aas
pop
inc
mov
sub
shll
lods
add
mov
mov
pop
scas
pop
ret
imul
mov
pop
popf
rcrl
je
insb
fcomip
mov
mov
mov
cmp
xor
add
pop
xchg
fdiv
into
gs
ljmp
imul
mov
mov
xchg
imul
sbb
lret
xchg
je
pusha
cs
mov
scas
popa
xchg
sub
cli
inc
dec
loope
sbb
mov
jge
orb
cmp
pusha
test
xor
mov
xor
in
or
mov
lock
gs
imul
jo
je
fdivl
dec
inc
fsubr
adc
loop
int3
aad
dec
mov
push
es
add
push
rcrb
lret
loop
mov
pop
iret
xor
stc
addr16
loop
ficomps
mov
and
sbb
jo
sar
or
xchg
fisttpll
cmpsl
pushl
pop
cld
or
arpl
sbb
or
mov
div
mov
cmp
dec
lods
inc
jp
inc
fdiv
mov
in
cmp
decb
inc
sub
test
push
in
fsubrp
adcb
insb
mov
mov
and
lcall
dec
mov
shlb
and
sub
xchg
push
adc
in
pop
push
cmpsl
push
add
jl
pop
popl
lods
inc
inc
mov
in
xchg
in
mov
sub
loopne
rorl
out
ja
or
aas
or
sub
pusha
adc
pop
xchg
add
mov
cs
ds
push
out
ja
xor
xchg
adc
nop
in
adc
inc
mov
in
adc
add
mov
or
or
add
out
xor
popf
sub
into
ds
movsb
sub
pop
js
dec
bound
imul
jp
pop
inc
fs
out
add
jmp
fstpt
pop
sub
cmp
sbb
adcb
das
mov
stos
xchg
rcll
adc
in
syscall
xchg
pop
push
jno
fstl
std
adc
insb
adc
leave
or
in
jns
sahf
in
fcos
aam
out
loopne
push
adc
sub
mov
stc
data16
xchg
pop
pop
or
cmp
sub
sbbb
mov
mov
std
stos
xchg
movsb
lods
inc
ljmp
leave
jle
lods
mov
adc
das
int3
dec
loopne
push
lcall
inc
xchg
xchg
cmp
mov
test
out
mov
shll
push
cmpsb
add
sub
aad
fwait
inc
mov
dec
je
dec
enter
sub
jmp
adc
ljmp
or
lods
cmp
mov
sub
mov
add
out
pop
and
sub
dec
ljmp
cmp
stos
jo
das
stos
jp
push
popf
xorb
outsl
cmpsb
scas
jmp
pop
icebp
jb
push
push
pusha
out
mov
test
out
xchg
lods
cltd
push
arpl
add
xlat
fstpt
lods
xchg
jl
jmp
lret
pushf
jl
jno
xor
jnp
pop
cwtl
cld
js
imul
imul
js
cmpsl
iret
jno
imul
lret
jo
pop
and
mov
pop
adcl
sbb
sub
push
sbb
rorl
fdivl
sub
lods
flds
rcl
add
adc
sub
xchg
ds
sbb
xchg
pop
mov
fsts
xor
fisubl
lds
or
sub
cmp
push
mov
mov
in
fldt
add
xchg
xchg
sub
xchg
cwtl
push
and
out
ds
leave
push
xor
movsb
fiadds
femms
dec
add
test
int3
clc
popa
lret
std
mov
je
xor
xchg
inc
xor
adc
pop
xchg
loop
shll
stos
lea
cmp
xor
test
or
mov
pop
in
out
and
shlb
negl
or
add
imul
jle
loope
cs
cli
in
add
lcall
pop
fs
cmp
insb
popf
xor
iret
int
adc
sub
pop
les
addr16
or
jns
ds
sub
sahf
or
sbb
loope
mov
cmp
aas
xchg
mov
mov
shr
shl
dec
inc
mov
mov
sub
pop
pop
pop
dec
in
lret
xlat
mov
sbb
test
sbb
or
lock
test
sbb
lea
xor
cmp
xchg
lahf
ss
add
add
sub
scas
aad
loop
inc
xchg
aas
fsubrs
sub
gs
xor
inc
lods
sbb
repnz
mov
mov
mov
popa
pop
mov
or
cmpsl
mov
popa
into
gs
test
push
push
enter
mov
xor
jbe
pop
cmp
nop
push
int3
jmp
xor
out
cmpsb
adc
add
repnz
test
and
xor
sub
mov
inc
aad
divb
icebp
mov
pop
xor
xchg
sahf
es
push
adc
cmp
adc
test
mov
push
call
ffree
jmp
and
inc
push
cmp
dec
fbstp
sarb
add
push
out
and
adc
jo
dec
gs
jg
testl
cltd
popa
testb
mov
sub
aas
cltd
sub
shrl
pop
shl
test
mov
jecxz
pop
adc
outsb
filds
jge
aad
mov
in
cmp
inc
xor
inc
out
inc
loopne
ds
test
sbb
psubusw
out
pushf
jnp
shrb
divb
fstps
or
push
cs
jb
cmc
arpl
dec
cmc
push
push
jnp
js
scas
rclb
xchg
adc
test
pop
repnz
dec
loopne
je
xor
fs
mov
in
xchg
mov
mov
cmp
pop
enter
movsl
testb
adc
push
mov
mov
aas
stos
inc
mov
and
das
mov
dec
xchg
cli
push
sbb
sbb
repz
cmpsl
add
insl
dec
dec
call
mov
and
ds
inc
cmpsb
and
pop
adc
test
xor
mov
xor
xor
cld
stc
adc
sbb
sub
xchg
pop
or
ja
sub
scas
inc
mov
adcl
into
cmp
repnz
adc
inc
jmp
jo
test
sbbb
loop
or
ret
scas
inc
lods
and
jg
lahf
jae
mull
jp
aam
stos
add
jge
stos
xchg
jne
xchg
pop
mov
dec
movsb
xchg
rolb
cld
out
test
subl
xor
sub
out
xchg
std
jnp
push
cmp
repnz
cmp
stos
mov
cmp
rorl
jae
jae
push
movsl
and
inc
jne
mov
popl
push
dec
sti
cmpsl
test
inc
fwait
xor
popf
push
in
rorb
fiaddl
sbb
push
dec
jae
repz
imul
int
sahf
jb
cmp
push
inc
dec
aad
add
xor
pop
push
inc
mull
xor
xchg
push
jae
cmp
das
push
inc
push
push
data16
frstor
xchg
jmp
inc
inc
ret
mov
ftst
xchg
mov
mov
stos
inc
lret
lret
fnsave
lret
fsubp
pusha
pop
shll
mov
clc
push
cli
mov
sbb
out
xchg
xlat
les
scas
inc
sarl
stc
nop
daa
in
xchg
sarl
mov
add
mov
pusha
cmpsl
fwait
adc
sarb
stos
xchg
cli
xorl
sbb
sub
pop
sub
jp
bound
pop
insb
sahf
fisubrl
mov
and
lret
les
inc
aas
cmc
shlb
jmp
cltd
cmpsb
mov
mov
mov
jbe
lret
xchg
std
fs
loopne
xchg
clc
jnp
or
fldenv
pop
sub
sti
push
loop
lret
das
js
pop
hlt
sbb
mov
nop
call
inc
xchg
fdiv
mov
adc
add
cld
popa
and
es
or
addl
adc
call
daa
lcall
inc
aam
icebp
rcrl
or
test
mov
roll
or
cmp
int3
sbb
sti
mov
enter
mov
and
les
andb
jmp
lock
pusha
ret
daa
jns
movsb
pop
mov
lods
xchg
lock
add
je
fbld
mov
aad
xor
dec
adc
inc
lea
ja
jge
in
mov
push
inc
test
test
xor
jno
push
in
scas
sbb
jmp
fldenv
lds
lret
cltd
xor
popa
cs
mov
mov
mov
jnp
fdivl
mov
sub
fmull
pushf
or
cmp
inc
stc
nop
js
mov
lock
aad
dec
fcoms
loope
stc
aad
lea
testb
out
shll
inc
imul
dec
gs
pop
dec
dec
lret
dec
sub
lods
cmp
insb
into
sbb
scas
cld
lea
cmc
and
lods
aam
pusha
test
ret
sbb
aad
mov
iret
enter
inc
outsl
sub
mov
and
test
mov
sahf
xor
sti
cmp
insl
jnp
adc
es
mov
push
fcomip
cs
movsb
ficomps
in
adc
rcrb
adc
add
stos
mov
or
and
fwait
imul
lods
and
out
pop
in
mov
push
popf
xor
cmp
and
dec
mov
mov
xchg
pop
mov
lea
xchg
jb
test
mov
xchg
sub
jns
xchg
dec
daa
jmp
mov
test
add
mov
nop
add
cli
push
mov
xchg
rolb
outsb
movsl
add
adcb
out
jno
leave
daa
popa
clc
pop
ljmp
xchg
mov
movsl
stc
jns
dec
inc
mov
scas
pop
cmp
push
and
mov
jne
sbb
or
inc
xchg
repz
xchg
cmp
add
jb
or
sub
and
inc
sub
pop
sbbb
cmp
pop
xchg
adc
adc
imul
inc
sbbl
lret
cmp
add
mov
fdivl
pop
adc
and
adc
shrl
icebp
xchg
out
push
loope
shrl
das
stos
inc
sahf
imul
pop
mov
int3
scas
jge
rclb
add
add
pusha
and
push
andl
cmpsl
roll
add
lods
inc
sti
and
int3
arpl
jl
test
lret
cld
ret
repz
arpl
xor
push
andl
out
mov
jge
fldcw
shll
fbld
xchg
sbb
std
out
stos
mov
pop
xchg
mov
stc
add
sub
sbb
rcrb
int
and
ja
pcmpeqd
clc
mov
clc
mov
outsb
push
dec
adc
imul
pop
and
int3
scas
imul
aam
aaa
or
js
dec
adc
movsb
fwait
xchg
sub
lods
push
sub
and
pop
inc
inc
loope
dec
cmp
xchg
sbb
je
cmp
add
xchg
test
shlb
dec
aad
add
cmp
mov
push
push
or
aad
sbbb
test
jle
dec
orl
mov
rolb
mov
movsl
aas
push
out
shll
cmp
fwait
add
dec
mov
movsl
lds
jo
sub
push
pop
cmp
sysexit
sub
xor
out
and
repz
orb
ja
iret
add
movsb
or
push
jp
out
stos
js
in
stos
lea
mov
or
push
mov
xor
add
pop
test
or
push
mov
int3
add
mov
inc
push
out
add
push
lods
outsl
push
pop
jae
push
and
mov
cmp
mov
lods
xchg
pop
into
inc
xchg
and
pop
mov
mov
mov
adc
sbb
mov
mov
ret
pop
lret
mov
stc
loop
xchg
fwait
shlb
enter
cmpsl
or
sbb
inc
mov
cs
stos
lahf
stos
aam
sub
push
insb
ljmp
inc
cmc
adc
in
popf
in
iret
shrl
pop
nop
fdivrl
out
lods
aas
ret
xlat
test
cmp
fcomps
and
xchg
sbb
xchg
jge
lea
aaa
inc
repz
in
out
nop
jns
enter
dec
hlt
shlb
and
fiaddl
js
dec
sar
inc
mov
xchg
push
cmpsb
jae
pop
test
inc
xchg
sbb
std
sbbb
inc
test
xor
test
pop
add
mov
cmc
aad
unpcklps
ud0
mov
jae
jge
popa
enter
jns
fisubrl
or
stos
mov
sub
ja
das
dec
xor
jp
imul
cs
gs
int
inc
je
jmp
xchg
lock
xlat
xlat
mov
inc
cli
sbbb
xchg
shll
cmp
ds
out
xchg
mov
popa
clc
fstps
stos
outsl
cmp
push
xor
xchg
jae
cmp
in
pop
hlt
rep
ljmp
shll
aaa
adc
push
dec
daa
in
mov
and
jae
test
std
aad
push
jb
imull
sbb
fdivrl
gs
cwtl
jge
add
fsts
lret
cmp
and
sbb
popf
cmp
cld
cmpsl
jo,pt
mov
push
in
adc
call
in
mov
int
jae
ja
sbb
mov
mov
and
fistl
fisttpl
mov
call
leave
jg
jge
sbb
inc
sahf
jne
loopne
xchg
add
sub
cmp
push
test
lahf
xor
add
mov
sbb
adc
sbb
jae
or
push
inc
sub
shlb
mov
lcall
andl
fistpll
rcr
hlt
addr16
push
call
or
repnz
sbb
pop
mov
inc
xchg
ja
sbb
arpl
fiaddl
rorl
lret
stos
lods
gs
mov
loop
movsb
pop
pop
lods
outsl
rcrl
xor
enter
mov
pop
mov
hlt
lods
or
leave
enter
jae
mov
sti
xchg
mov
sbb
xchg
out
add
repz
pop
cmpb
mov
sarl
mov
stos
imul
xor
and
adc
leave
xor
or
insb
jo
push
inc
out
mov
mov
mov
lods
adc
or
xchg
jnp
ret
inc
shrl
lods
adc
xchg
jne
mov
cmp
imul
out
lahf
int3
or
push
xchg
hlt
xchg
add
pop
daa
mov
push
lods
adcb
repz
les
sahf
cmp
insb
out
fistl
mov
mov
and
insb
mov
push
jmp
pop
lods
jo
jge
repnz
push
call
lea
push
jg
mov
jnp
sbb
cmp
sahf
mov
imul
cmp
mov
lcall
cmp
aam
outsb
js
outsl
into
or
popa
inc
mov
xchg
dec
cmpsb
xor
and
adc
mov
lret
xchg
sbb
add
mov
test
adc
push
push
xor
mov
ret
xor
cmpsb
xchg
xchg
push
pop
bound
jns
dec
inc
enter
jnp
jae
sahf
mov
or
lret
jns
pop
push
das
xchg
adc
push
xchg
inc
test
dec
pop
push
std
lret
jno
mov
lret
push
or
jo
mov
add
sub
mov
in
jmp
pop
sti
es
dec
mov
add
xchg
cmpsl
add
movsl
lds
xchg
rol
hlt
and
pop
inc
sbb
pop
mul
push
test
pop
push
int
lds
xor
in
notl
jle
jmp
out
test
push
mov
and
sub
pop
int
das
cmp
imul
movsb
mov
jae
call
enter
es
xchg
xor
shl
ret
scas
or
int3
pop
adc
push
insl
aam
jo
xor
enter
int3
test
dec
fdivrl
cmp
inc
jnp
loopne
push
lcall
es
sub
inc
adc
adc
add
xor
fwait
or
mov
inc
mov
add
repnz
adc
inc
repz
idivl
pop
mov
testb
es
sub
push
nop
mov
pop
push
leave
jnp
cli
je,pt
repnz
cltd
xor
jno
and
inc
mov
popa
inc
fsts
mull
push
sbb
xor
icebp
cmp
and
outsb
mov
jle
inc
sti
lret
insb
test
ds
lods
add
mov
out
mov
dec
jnp
mov
cmpsl
out
enter
cmpsb
cmp
mov
aas
adc
subb
enter
adc
sti
lret
mov
mov
push
sub
or
std
fldt
sbb
pop
outsb
adc
stos
daa
cmp
push
stc
test
or
sub
push
jl
pop
adc
adc
pop
jb
shlb
imul
popa
inc
andl
or
cmpsb
add
sbb
dec
mov
or
sahf
or
adc
orl
popa
mov
push
jae
push
bound
ret
out
insl
mov
mov
lret
cmp
push
push
pushf
or
fs
xor
inc
pushf
push
pop
cli
add
popa
xor
inc
sahf
hlt
pop
cmpsb
imul
xchg
test
jmp
cmp
testl
test
rolb
notb
xor
push
outsb
push
jno
mov
enter
sub
sub
inc
adc
je
inc
test
sahf
push
retw
pop
cltd
addr16
add
sub
jne
push
imul
fsubrl
pop
adc
push
jle
inc
scas
insb
andl
popa
xchg
dec
lods
and
in
add
aaa
xchg
imul
lods
mov
inc
outsl
lock
cmpsl
and
cmp
mov
mov
inc
out
fsubr
ljmp
testl
add
lahf
imul
movsb
daa
pop
mov
xchg
pop
imul
jb
inc
xor
out
add
lea
orl
outsb
flds
adc
jp
rcll
jmp
pop
fisttpl
mov
cld
movsb
push
add
in
pusha
jne
xor
pop
outsl
add
pop
xor
fmul
mov
push
push
jmp
sahf
mov
in
and
jle
mov
lret
jnp
xchg
xor
sbb
fidivrl
push
xor
push
xlat
outsb
mov
xchg
push
lods
lcall
sub
jl
enter
pop
add
dec
xchg
clc
push
push
js
mov
into
sub
add
push
imul
mov
push
out
and
mov
les
mov
dec
lea
fnstcw
divl
mov
add
and
call
xchg
pop
mov
lods
sbb
test
gs
sub
scas
inc
and
cmpsl
push
lret
and
inc
in
mov
out
testb
mov
leave
mov
movsl
mov
mov
pushf
cmp
fldcw
and
and
or
jb
shrb
mov
adc
iret
outsb
mov
mov
arpl
push
scas
test
cmpsl
cmp
or
jns
lahf
push
jmp
dec
out
lcall
cld
cmp
pop
jecxz
xchg
sub
adc
jo
sub
outsb
stos
xor
cmp
push
jns
mov
pop
shlb
xchg
loop
lock
add
out
xchg
push
adc
js
mov
jae
les
mul
jae
mov
pop
outsb
rcl
sbb
push
test
add
pop
and
jae
inc
jecxz
mov
sub
sbb
xchg
sti
mov
inc
fstpl
mov
mov
xor
push
cwtl
or
pusha
sbb
mov
dec
loop
pop
or
xorl
bound
jb
dec
sub
test
ljmp
data16
popa
xchg
xor
cmp
push
xchg
repz
push
loopne
mov
arpl
jecxz
sbb
pop
ss
xchg
mov
ljmp
dec
push
mov
into
imul
popf
lock
and
mov
in
sbb
call
sub
sahf
dec
mov
jnp
fistpll
dec
fstpl
xor
repz
aad
sub
loop
es
push
push
popa
xorl
iret
xchg
pop
add
fdivl
fnstcw
dec
jg
or
push
fsubr
or
fsubrs
sub
cmpsl
stos
jl
and
cs
cwtl
mov
int3
fs
cmp
hlt
fsubr
cmp
pop
out
or
sub
sub
lods
ret
push
sarb
xor
push
test
xchg
push
ja
push
push
sbb
jne
sbb
cld
lret
movsb
inc
in
push
data16
add
sti
pop
insb
daa
mov
rolb
test
xchg
jmp
jbe
mov
xchg
les
shlb
pop
stos
dec
mov
orb
fcomps
xor
in
jg
out
je
out
inc
sub
sahf
xor
mov
push
rcll
push
test
push
lcall
and
cmc
imul
add
in
insb
mov
test
jmp
ror
inc
pop
fldcw
leave
fldenv
and
mov
popf
pusha
jbe
pop
jg
xchg
call
push
lock
notb
xchg
loopne
jle
es
jnp
adc
or
das
out
push
adc
ss
arpl
loope
xlat
adc
adc
push
ret
in
push
pop
cs
sbb
repz
xchg
dec
lock
shrl
fbld
hlt
in
stos
mov
shlb
push
sbb
cmp
fidivs
xchg
pop
rolb
jns
inc
or
sub
pop
mov
out
popf
ret
xor
je
cmp
mov
xor
leave
cmpsb
addr16
mov
cmp
int
jb
cmpsl
push
lds
inc
xchg
out
mov
mov
fs
xchg
and
cmp
lods
adc
sbb
mov
jecxz
cmpb
jae
movsl
jle
jb
sbb
push
pop
ss
movsb
ret
das
call
add
loopne
popl
movsb
mov
xor
mov
mov
jecxz
jle
mov
ljmp
dec
aad
and
xchg
pop
jl
xchg
loop
mov
or
out
in
scas
cmpsl
cmp
push
push
mov
pop
fnstsw
lea
jae
data16
push
outsl
popf
ss
aaa
sti
fistps
xchg
clc
fidivs
mov
mov
test
add
dec
and
dec
pop
int3
daa
add
inc
shlb
mov
daa
ds
test
out
ret
pop
or
nop
daa
push
dec
cmp
clc
push
scas
push
push
loop
xchg
adc
nop
jb
cs
js
jle
push
aas
adcb
test
mov
or
stc
adc
addr16
rcrb
xlat
mov
add
cmpsl
push
outsl
stc
rcr
jo
mov
cmp
pop
outsb
mov
dec
call
repz
lea
mov
test
mov
push
jne
pusha
dec
mov
cmp
cmp
xor
lret
xlat
flds
mov
insl
xchg
cmp
mov
jp
sub
mov
or
subl
cld
lods
inc
ret
xchg
cld
stos
lea
fs
add
jmp
add
cmp
out
mov
mov
mov
adc
mov
das
inc
mov
inc
xlat
enter
repnz
push
sbb
shl
jl
addr16
xchg
jne
lcall
and
push
cmp
jb
mov
cmova
jmp
adc
jmp
insl
sbb
mov
mov
push
loope
push
fsubl
dec
fdivrs
and
cltd
mov
int3
push
jne
or
ss
cld
mov
fsubl
jns
idivl
xchg
movsl
jge
bound
sub
loopne
lret
out
cld
into
mov
push
insl
mov
ljmp
cmp
mov
flds
bnd
lock
testb
out
sub
jae
hlt
adc
xchg
cmp
sti
fnsave
push
outsl
push
jns
inc
call
insl
jge
lods
mov
fildl
cld
jae
jb
movsl
cmpsb
sbbl
sti
xchg
imul
adc
inc
leave
and
sbb
movsb
imul
aas
push
jo
push
cwtl
sub
pop
mov
in
xor
jae
xchg
and
xchg
xlat
pop
movsb
gs
add
sub
mov
mov
fsubrl
ss
and
fwait
mov
je
out
lahf
mov
inc
sbb
pop
aaa
sbb
movsb
addl
mov
jae
divl
and
push
push
pusha
and
and
jne
sbb
jg
push
pop
movsb
std
stos
jge
xchg
adc
pop
movsl
mov
xchg
xor
lods
mov
push
fldpi
or
xchg
cli
movsb
sbb
cmp
aad
mov
dec
jo
mov
jns
jbe
pusha
jo
adc
clc
xchg
mov
stos
pop
test
push
dec
add
push
jmp
mov
scas
sbb
xchg
dec
mov
mov
outsl
fincstp
mov
ja
mov
int3
cltd
sbb
mov
mov
gs
xchg
loope
les
call
stos
and
daa
pop
jl
outsb
scas
dec
lea
jno
cld
xchg
int
add
mov
sbb
or
pop
and
push
jno
cwtl
stos
inc
adc
leave
pop
rorb
mov
cmp
and
sarb
enter
pop
repnz
dec
fbstp
mov
mov
lods
inc
jne
xchg
jmp
inc
cs
js
addr16
sub
adc
subl
sub
test
out
dec
je
jp
jecxz
sbb
out
jmp
jns
movsl
insl
rcrb
sbb
push
imul
push
movsbl
inc
mov
dec
outsl
stc
cmp
sub
in
add
lods
sti
jbe
cwtl
xor
jg
int
jmp
test
push
cs
mov
aad
add
jb
xor
mov
das
enter
inc
xchg
xor
jb
mov
ljmp
icebp
pusha
sbb
mov
cmp
lahf
sbb
push
mov
in
mov
mov
sbb
jecxz
dec
adc
push
jmp
test
cmc
push
insb
daa
sub
dec
fildl
xchg
aad
and
lods
xchg
cmp
cmp
fidivs
mov
cmpsb
dec
fs
aas
pop
adc
sub
sbb
push
jmp
mov
jo
rcrb
adc
pusha
sbb
jne
bound
repz
stos
cwtl
or
imul
xor
mov
pop
push
add
and
pop
test
push
jno
xchg
fld1
cmc
pop
int
jno
mov
or
inc
pop
sarl
fisubl
adc
cmp
call
lret
push
jmp
push
add
ss
stos
decl
or
xchg
fsubs
mov
repz
sti
push
setp
int3
in
add
cwtl
fcomi
lahf
mov
rcll
arpl
data16
adc
inc
inc
pop
xor
ljmp
popf
xor
call
jmp
out
push
jne
or
imul
mov
mov
mov
pop
rcrl
cmp
pop
sub
mov
insl
push
mov
rcr
repz
in
jns
cwtl
movsb
cmp
testb
xchg
dec
cltd
lods
popf
cmp
imul
jl
in
dec
mov
adc
aas
inc
mov
dec
in
pusha
repz
imul
mov
push
inc
pop
inc
aad
ja
jge
mov
jmp
fstps
xor
jp
repz
mov
cltd
inc
ret
ds
push
aam
push
xchg
aaa
mov
js
push
popa
orb
mov
sub
cld
cltd
xor
out
adc
out
mov
xchg
jmp
xchg
sbb
decb
fwait
and
sub
push
out
sub
ss
mov
rcll
xor
pop
sahf
adcb
or
in
mov
and
call
rcrl
sbb
popf
popf
aas
cmp
dec
or
cmp
test
inc
popf
call
xchg
stos
sbb
and
stos
pop
lret
stos
inc
test
push
lea
lods
cmp
icebp
mov
pop
ret
xlat
mov
mov
or
cmp
imul
sbb
push
xchg
clc
cmp
sub
incb
xchg
dec
inc
in
test
insl
add
and
negb
jg
enter
sbb
push
movsl
nop
xchg
mov
or
sub
sbb
lock
pop
out
xchg
mov
add
mov
jbe
aaa
das
loopne
mull
sti
cmp
sub
jmp
jle
fdivl
mov
lods
clc
pop
and
aad
dec
xchg
test
add
lret
push
clc
pop
and
int3
or
mov
out
push
fdivl
ja
pop
mov
sahf
subb
sbb
mov
pop
in
andb
loop
jo
aam
xchg
test
bound
jne
out
ja
imul
mov
and
mov
mov
shrl
mov
ja
sub
sub
out
cwtl
in
test
outsb
cmp
test
mov
dec
and
in
pusha
jl
shrl
mov
ret
lock
aam
cli
mov
ds
pusha
sub
jne
push
inc
mov
pop
or
adcl
push
pop
jno
sbb
iret
mov
ret
jnp
mov
mov
scas
das
jae
cmp
xor
clc
cltd
ret
mov
fsubrp
push
ds
jl
shld
mov
scas
adc
mov
mov
dec
les
sub
jmp
out
xchg
inc
insl
xchg
loope
adc
sarl
xchg
in
add
js
push
mov
lock
and
test
cmpsb
dec
sub
daa
push
sub
mov
lock
cmp
mov
push
push
or
lods
cmp
adc
jbe
and
std
or
dec
insl
rclb
popl
pop
scas
stc
je
inc
lea
pop
scas
jb
cmp
fstl
mov
jns
bound
push
mov
jl
xor
pop
adc
jno
repnz
std
test
fmul
imul
iret
or
inc
ds
clc
negl
jle
and
out
enter
push
in
in
std
sbb
dec
add
or
rclb
sbb
push
cld
jbe
sbb
insl
or
adc
lret
cmp
bound
mov
pop
fsubs
inc
dec
mov
mov
cmp
cli
inc
xchg
pop
inc
mov
mov
or
sub
addr16
test
dec
add
push
repz
int
addl
mov
imul
xor
mov
lods
mov
push
add
sbb
and
sbb
push
outsl
movsb
pop
dec
adc
ficompl
adc
daa
xor
push
mov
adc
dec
in
mov
stc
jl
ret
andl
mov
sbb
stos
pop
movsl
cltd
mov
mov
shlb
jne
dec
in
test
imul
mov
clc
aad
xchg
pop
lods
scas
rclb
lret
push
shll
xchg
ss
push
mov
jo
mov
inc
or
inc
lods
push
pop
jle
xor
mov
addr16
add
in
arpl
rorb
int
jnp
sbb
or
gs
scas
loopne
fucomip
shlb
cmpsl
aas
cmpsb
mov
inc
arpl
and
and
push
aas
sbb
jne
mov
dec
scas
aam
inc
and
test
and
xchg
mov
fimull
mov
adc
in
sub
enter
into
test
out
mov
sarb
dec
pop
iret
xchg
cs
pop
sub
daa
mov
fisubrs
cmp
mov
dec
pop
adc
insl
add
adc
mov
shrl
shl
mov
ret
dec
scas
push
mov
xchg
mov
sbb
or
mov
les
add
movsl
fisubrl
ffreep
nop
inc
mov
xchg
xchg
or
fisttpll
fnstenv
loopne
and
xchg
adcb
push
push
or
sahf
xchg
movsl
ficompl
lret
sbb
ficoms
arpl
popf
popa
ljmp
in
add
stos
inc
adc
testb
into
push
push
insb
xor
cmp
xor
lea
mov
jb
mov
leave
sbb
adc
popa
clc
or
push
cli
cli
xchg
scas
mov
sbb
mov
test
cmp
imul
ds
cs
xchg
add
and
ja
mov
fldpi
ljmp
sbb
adc
andb
jg
fcmovb
push
into
mov
push
fwait
sub
hlt
push
out
inc
rcrb
stos
outsb
or
xchg
pop
imul
xchg
cwtl
or
rcr
jae
fldcw
dec
sbb
cmpsl
dec
sbb
std
or
sub
out
pop
lahf
stc
inc
fs
xchg
cs
jb
xlat
mov
pop
fmull
xchg
mov
jge
push
iret
int3
fmul
xor
add
lret
pop
sub
ja
xchg
pusha
cmp
shll
mov
aas
bound
das
test
cmc
leave
stos
lods
out
xchg
ja
popf
mov
into
js
clc
mov
add
pop
rol
inc
push
je
stos
xor
arpl
loop
and
gs
mov
fdivs
into
jl
aad
mov
int3
fdivrp
fsubrs
rolb
out
mov
ret
iret
dec
mov
repnz
es
inc
ficompl
inc
push
popf
xchg
jl
jne
mov
xchg
and
int
mov
or
dec
daa
pop
push
stc
ffree
inc
stc
enter
insl
fs
iret
fnstsw
push
inc
cs
mov
movsl
es
or
daa
xchg
scas
ret
xor
cltd
pop
sbb
fisubs
loope
and
repz
jl
into
add
jbe
push
in
push
in
xchg
xchg
push
mov
push
daa
mov
mov
pop
lret
test
mov
mov
movnti
or
jae
xchg
sub
lea
in
aam
sub
fstpt
imul
mov
ja
loopne
push
call
lods
imul
in
scas
adc
push
sbb
das
push
push
mov
es
add
jmp
xor
sub
repz
xor
cltd
insb
inc
stc
mov
mov
xchg
push
sbb
in
test
popa
or
popf
lret
cs
cld
cli
pop
mov
add
push
cmp
insb
outsb
jb
lcall
cmpsb
cld
enter
test
add
jne
lahf
test
bound
mov
lock
jge
push
ljmp
iret
push
xchg
and
cmc
lahf
enter
sahf
xor
cmp
push
int
add
std
icebp
sbb
jae
jo
mov
cmp
dec
fcomps
pusha
insb
push
jl
mov
push
in
xor
cltd
ja
and
fdivs
or
ret
ret
xchg
mov
dec
cld
sar
adc
cmp
xor
mov
and
xor
adc
call
and
cmpsb
fdivrp
movups
leave
jne
aam
pop
or
in
fs
mov
inc
sbb
add
jle
lahf
mov
lahf
cmpsl
jp
fsts
sub
flds
cwtl
or
inc
push
dec
sbb
mov
dec
mov
sub
test
push
cmp
loope
call
cmp
cmp
adc
pop
das
cmp
pop
cmp
sbb
mov
or
fidivrs
pop
ds
xor
push
add
sbb
cld
stc
test
stos
sbb
stos
int3
push
pop
dec
leave
filds
cmp
xor
sub
xchg
push
pusha
jb
repnz
xlat
test
lret
bound
and
loopne
pop
loopne
int
inc
inc
inc
inc
dec
in
lock
mov
sbb
xchg
xor
mov
fnstcw
test
inc
jecxz
ljmp
inc
lcall
and
xor
cmp
fwait
cmp
addl
jmp
shl
dec
std
pop
fsubs
sahf
sbb
jns
sbb
lea
int
lea
idiv
stos
jg
stc
or
mov
adc
loopne
subb
pushf
pop
cmp
negb
pop
mov
fcmove
jnp
cld
hlt
adc
xchg
jno
mov
mov
pop
cmpsl
dec
flds
js
pushf
adc
inc
loopw
lret
mul
push
xchg
pop
pop
pop
jge
mov
iret
sub
pop
hlt
mov
xchg
lea
imul
test
mov
mov
das
push
insb
sbb
in
mov
ja
push
xchg
push
aaa
clc
inc
xchg
and
push
outsb
fs
sahf
jno
xchg
scas
xlat
aaa
pop
cltd
clc
jb
cmp
out
add
roll
xchg
jge
call
push
lds
or
xor
add
shll
scas
cs
fcmovnu
cld
or
insb
add
pushf
pop
dec
test
fidivl
jo
xchg
jbe
sub
mov
xchg
dec
sub
pop
shlb
popa
push
icebp
xchg
sub
bound
xor
rcrb
xchg
lret
nop
sbb
out
jge
lahf
fwait
icebp
test
jge
std
js
mov
inc
dec
aas
add
push
fidivs
mov
jo
mov
mov
mov
dec
daa
mov
cmp
cmp
pop
into
jle
mov
mov
arpl
xchg
xchg
int
or
lahf
mov
push
fsts
out
adc
pop
xlat
xor
mov
dec
xchg
inc
fiadds
orb
sbb
cmc
adc
in
push
cmp
sbb
xchg
ja
mov
ret
mull
pop
push
movsb
pop
jo
mov
icebp
jl
and
cmp
push
lret
jae
rorb
movsl
jge
int3
scas
add
sub
in
stc
mov
xchg
cwtl
fcmovb
lahf
mulb
sti
pushf
sub
cmp
scas
ret
int
push
sahf
sbb
xchg
push
and
inc
inc
in
mov
adc
push
inc
ss
das
out
sbbb
sbb
popf
sbb
out
aam
sti
add
xor
rorl
ja
jp
sub
xchg
adc
cmp
sbb
sbb
xchg
lcall
cwtl
inc
or
mov
scas
push
add
es
rcll
sbb
mov
and
sub
inc
cmp
pop
rorb
push
fcomps
xchg
insb
jle
push
andb
rcrl
sub
popf
dec
cli
sarb
sbb
or
mov
jecxz
ret
testl
dec
pop
or
bound
fstp
inc
pop
cmp
lods
jmp
xchg
scas
mov
fcomip
ret
sbb
pop
jb
data16
lret
test
fwait
push
fisttpll
fs
cmpsl
inc
mov
pop
xchg
scas
mov
orl
jno
inc
aaa
xchg
push
imul
sbbb
xchg
fstpt
pop
jg
inc
inc
hlt
xchg
fdivrs
mov
xor
push
loopne
sub
add
xor
loop
and
jno
mov
scas
nop
xor
adc
loop
mov
clc
test
sti
fistpl
mov
push
sub
stc
or
sbb
push
addr16
daa
pop
sub
sbb
xor
sar
push
loopne
daa
into
fldl
and
xchg
outsb
inc
js
jne
push
sub
orl
scas
and
dec
sbb
stc
js
cmp
cmp
pop
insb
add
sbb
out
cwtl
push
imul
shr
add
xlat
bndstx
cwtl
dec
inc
inc
test
adc
cmc
add
adc
enter
mov
out
aad
sub
jmp
loope
dec
mov
mov
sbb
add
test
sbb
repz
mov
call
cmc
in
sbb
xor
mov
xor
or
stc
mov
das
xchg
mov
pop
lods
jne
and
iret
xlat
outsb
add
pop
push
jne
pop
cmpsb
data16
mov
scas
push
and
adcl
push
int
or
out
stos
sbb
aam
pop
out
jecxz
call
les
mov
add
ret
cltd
xlat
pop
or
dec
inc
movsl
fistpl
push
inc
ja
xor
mov
and
movsl
and
leave
xchg
inc
mov
imull
xchg
out
sbb
stc
push
xchg
adc
pushf
shll
pop
jle
popf
lods
iret
mov
in
aam
inc
pop
or
cwtl
rol
loopne
imul
dec
mov
or
pop
cmpl
in
sub
pop
xchg
subb
lahf
aad
cmpsb
and
xor
xchg
mov
dec
xor
or
mov
movsb
aas
add
cmp
movsb
mov
xchg
pop
js
enter
mov
dec
mov
ret
adc
jle
dec
shufps
test
push
lret
mull
imul
pop
mov
xor
adc
in
inc
add
sti
fldenv
shrl
sub
pop
cltd
or
mov
mov
neg
dec
and
inc
nop
sbb
aaa
sahf
xor
dec
mov
shrb
pop
clc
loop
mov
adc
sub
mov
push
call
cld
mov
and
leave
scas
xchg
xchg
sub
sub
or
pop
filds
mov
mov
iret
mov
push
or
and
mov
stos
test
push
push
adc
enter
pop
sti
or
out
pop
mov
sub
add
pop
scas
sub
jns
fs
fbstp
add
mov
push
jecxz
loopne
add
js
push
test
out
fbld
lea
jl
ret
adc
dec
adc
mov
sub
in
lahf
sub
mov
mov
sbb
cwtl
pop
mov
mov
jl
ret
jp
int3
arpl
cltd
pop
movsl
xchg
jne
enter
outsb
sbb
inc
cmp
fxch
dec
pop
iret
mov
std
or
adc
repz
aas
loopne
shl
xchg
js
mov
js
and
inc
cs
mov
bound
mov
pop
and
mov
fcomip
add
out
and
mov
fidivrs
sarb
ret
jg
ror
rolb
lcall
dec
cmpsb
lret
lret
sbb
sbb
hlt
ja
cmp
xor
dec
in
dec
push
sub
mov
mov
enter
aad
insl
mov
outsb
pop
mov
gs
mov
xchg
js
cli
pushf
push
or
push
test
pop
inc
xchg
adc
das
imul
popa
ss
mov
mov
insl
cld
add
daa
pop
das
sbb
leave
int
rorb
inc
inc
mov
pop
mov
setbe
and
jne
push
jp
je
loopne
or
movsl
push
fimull
inc
mov
add
mov
jg
cwtl
outsl
data16
mov
mov
idivb
jnp
pop
addr16
xor
sarb
adcl
push
sub
cmc
clc
leave
loop
leave
sbb
fldl
and
pop
push
inc
scas
xor
xchg
pop
bound
repz
xchg
mov
ljmp
and
push
divl
or
cmpsb
pop
xor
aaa
inc
ds
jmp
and
or
mov
test
popf
adcl
in
insb
pop
cs
mov
loope
mov
dec
iret
mov
std
pop
inc
fdivs
call
pop
testb
insl
and
stc
nop
and
xchg
jns
sub
jno
movsl
and
cli
mov
xor
inc
mov
aad
jno
or
fdivr
sub
push
sub
jnp
ja
lds
imul
mov
or
pop
test
mov
xchg
bound
lcall
mov
movsb
sbb
insb
xor
fdivs
mov
or
iret
call
jg
cmpl
xchg
mov
mov
push
jnp
mov
and
cmp
xchg
sub
push
inc
cmp
pop
subl
mov
sbb
sbb
add
divb
ja
fdivl
and
push
jbe
push
push
xchg
insl
movsl
xchg
idivb
shll
add
les
mov
adc
loop
or
jl
lods
sub
stos
push
fldenv
gs
fs
jno
leave
insl
arpl
mov
add
xchg
movzbl
rol
nop
flds
frndint
sbbl
mov
xchg
add
mov
movsl
push
stos
jbe
push
ret
jb
leave
push
dec
data16
out
xchg
sbb
test
test
aas
push
loop,pn
cmc
icebp
add
test
and
cmp
fdiv
add
ja
inc
ret
mov
pop
mov
into
xrelease
loop
inc
sub
pop
inc
addr16
push
shrl
lahf
loop
in
fstpl
scas
push
inc
imul
shr
jae
push
popl
mov
and
out
aas
jmp
jo
push
popf
adc
adc
out
mov
cmpsb
inc
add
aas
aaa
pop
hlt
inc
jae
mov
daa
mov
or
jmp
or
sti
mov
iret
inc
lea
cwtl
scas
or
fwait
iret
pop
add
icebp
add
adc
jae
xchg
pop
push
enter
push
jae
jg
mov
jp
push
pop
or
dec
stos
in
sbb
out
addb
push
inc
fsubl
jno
or
push
mov
mov
repnz
mov
cmp
shrl
pop
sahf
cmp
leave
shll
leave
pop
std
xchg
pop
test
idivl
push
outsb
add
mov
or
rorl
pop
cmp
dec
ljmp
inc
adc
sbb
sbb
out
loope
jae
push
jg
ss
cmp
push
pop
movsl
lods
test
inc
int
pop
les
sub
loope
or
adc
mov
scas
repnz
jbe
lock
xchg
sub
or
xor
push
jbe
jo
nop
push
push
ja
jle
test
es
add
mov
dec
jns
mov
pop
imul
add
out
mov
iret
and
arpl
dec
fwait
sub
outsb
dec
jl
loope
ljmp
fdivs
push
push
xchg
add
test
lret
dec
adc
or
aam
and
dec
cmp
cmc
sbb
fnstcw
arpl
test
arpl
int
push
fbld
fsubrs
vunpcklpd
dec
push
pusha
daa
mov
daa
lcall
inc
fildll
insb
mov
aas
xor
imul
jl
mov
stc
sub
sbb
cmpsl
daa
jecxz
or
jl
test
adc
sahf
addr16
lods
daa
mov
mov
es
jno
mov
cmp
fdivrl
xchg
scas
lahf
jne
sar
cmp
cld
adc
int3
outsl
test
into
rcrb
or
mov
xlat
xchg
pop
sbb
imul
pushf
push
fbld
push
fsubrl
mov
sbb
sub
pop
jp
xchg
insb
imul
movsb
cmp
mov
mov
jns
in
cmp
xor
fld
ret
mov
or
cmp
push
dec
add
add
movsb
mov
idivl
into
in
sbb
dec
mov
cmp
imul
jle
addr16
push
dec
jecxz
stc
jl
cmp
cmp
and
into
arpl
psadbw
lods
out
lea
test
lret
cld
xchg
mov
sub
jcxz
mov
flds
dec
or
orb
pop
push
push
xlat
int
nop
xchg
out
xor
pop
lret
rorb
dec
mov
into
fstpl
xchg
xor
nop
mov
dec
pop
pop
jmp
test
ror
xchg
dec
lods
lea
int
stc
xchg
insl
mov
lds
adc
xchg
lahf
push
fisubl
jl
add
adc
scas
and
xor
push
test
and
shlb
mov
test
xlat
scas
lea
xor
addr16
pop
mov
inc
pushf
jg
and
sahf
xor
xor
in
es
gs
enter
xchg
fildll
arpl
sbb
not
leave
aaa
fnstenv
leave
mov
nop
jle
adc
xchg
shll
sbb
outsl
cli
in
data16
rolb
xor
cmpsb
enter
or
mov
jnp
inc
cmp
imul
nop
aam
push
jp
xchg
inc
dec
aam
jg
xor
inc
out
adc
add
mov
inc
aam
xor
clc
xchg
mov
das
addr16
push
pop
stc
mov
ja
sub
jbe
xchg
xchg
ret
js
jnp
movsl
xchg
pusha
loope
dec
push
pop
push
dec
or
shll
mov
mov
fstl
test
jae
mov
call
sub
inc
fdivrl
shll
bound
nop
mov
dec
ret
sti
sti
pop
loopne
dec
bound
and
or
test
call
das
pop
dec
in
pop
sub
cld
push
sub
stos
inc
push
sub
jae
jb
push
in
aaa
mov
lahf
icebp
scas
inc
insb
lods
push
pop
xor
cmp
xchg
scas
or
and
pop
aaa
ret
mov
lret
adc
mov
in
jbe
shlb
loope
rcrl
into
out
je
pop
out
jo
imul
lcall
pop
andl
sub
push
lock
sub
into
mov
out
mov
sti
in
and
inc
stos
inc
jns
dec
add
push
lds
mov
pop
jmp
fcmovnbe
insl
int
dec
cli
sub
add
roll
scas
pop
ss
sub
or
xor
lret
ja
mov
jnp
es
mov
dec
pop
cmpsl
sub
mov
sub
inc
xchg
shll
gs
lret
xlat
jecxz
imul
out
scas
dec
lret
popa
xorl
ss
cli
jle
inc
jo
test
test
les
push
popf
loop
pop
pop
inc
xor
xor
out
ss
push
mov
xor
push
mov
push
jb
push
mov
sub
pop
icebp
lcall
add
push
es
cli
cld
stos
pop
cmp
cmpb
in
loope
and
dec
push
ljmp
pushf
adc
xor
jle
push
jle
or
repz
out
xor
fdivrs
xchg
mov
push
fwait
test
ret
and
jns
stos
jns
std
stos
les
stos
add
daa
xor
push
mov
mov
push
in
notl
push
xchg
mov
or
xor
xchg
imul
repnz
hlt
stc
mov
pop
jle
out
test
lcall
es
inc
mov
testb
or
jb
ljmp
not
xor
sahf
pop
std
xorl
test
andb
shll
loop
cmc
pop
leave
dec
xchg
xchg
scas
jp
or
insl
sub
test
cwtl
daa
mov
or
jl
jp
jle
dec
cmp
xchg
push
cltd
mov
cld
jae
insl
stos
lods
xor
fimuls
push
nop
cmp
push
insb
sub
call
pop
jecxz
repz
ficoms
cmc
jnp
xor
xchg
das
and
loope
int3
sub
sub
inc
testl
sbb
pop
pop
out
cmp
fidivrs
test
gs
mov
int3
sbb
adc
stos
xor
test
dec
xor
inc
cmc
loope
and
push
clc
and
jo
cwtl
outsl
dec
test
fdiv
mov
mov
cmp
push
call
and
ret
xlat
shll
sbb
push
sahf
lahf
push
push
mov
popf
xor
leave
je
inc
in
lcall
adc
inc
in
and
push
push
pushf
inc
sub
jae
sub
mov
xor
notb
in
fs
mov
testl
fs
rcll
add
mov
push
inc
cmp
popf
jnp
push
and
inc
jno
cmp
lret
iret
or
popa
sbb
insl
push
popf
sahf
aas
sub
stc
ss
gs
mov
stos
pop
mov
das
mov
push
lods
pop
movsl
or
pop
jns
mov
jno
sahf
and
mov
and
xchg
or
push
gs
mov
inc
in
fwait
mov
jno
icebp
outsb
adc
movsb
mov
pop
adc
orb
xor
imul
adc
ljmp
andl
into
push
orl
and
add
xchg
pop
adc
scas
add
mull
sti
cmp
aas
into
add
dec
fdivs
test
and
into
test
add
push
in
out
and
call
xchg
lds
dec
cmpsb
or
std
pop
mov
std
clc
lods
cmpsl
xchg
jb
jp
filds
mov
adc
repnz
and
nop
addr16
pop
out
sub
out
mov
mov
outsl
ret
mov
cld
test
insb
bound
mov
scas
ja
push
nop
cmp
or
xchg
popa
adc
sub
mov
fcoms
mov
cld
mov
scas
ret
xor
jbe
imul
das
lock
loop
stos
push
jecxz
test
inc
psubsw
inc
pop
stc
mov
test
addr16
nop
mov
std
std
xchg
insb
and
push
lea
pushl
xor
leave
loope
dec
les
or
dec
outsl
mov
leave
in
fldt
nop
sbbl
lret
out
inc
sbb
subl
inc
adc
mov
lods
add
cmc
push
sbb
mov
and
cmpsl
or
dec
outsb
stc
ds
adc
dec
test
iret
fs
fdivrl
mov
sbb
xchg
andb
mov
xchg
ret
imul
idivb
test
lahf
inc
aad
sbb
mov
jg
inc
lret
popa
push
stos
scas
xor
xor
dec
mov
xor
loope
xor
es
lock
mov
jecxz
jo
pop
sub
or
int
xchg
fstps
aad
mov
js
insb
and
xor
jl
out
cmp
in
pusha
shrb
call
ror
ljmp
xchg
scas
adc
aad
sbb
lds
inc
test
rcrb
and
xor
inc
sub
mov
mov
sbb
fs
mov
jmp
mov
js
arpl
adc
mov
xor
fs
test
jnp
mov
test
dec
scas
outsl
and
sbb
mov
fnstenvs
push
inc
jge
add
jmp
pop
fbld
xor
cmp
cli
adc
sub
inc
xor
adc
dec
jle
jge
xchg
outsb
enter
pop
imul
cmp
pop
dec
mov
mov
shrb
imul
jo,pn
loop
jne
mov
repz
cmc
sbb
es
cli
stos
iret
daa
adc
stos
xchg
fdivrl
imul
sbb
jge
cmp
inc
jo
push
adc
enter
jb
fs
sbbl
pop
scas
cmp
add
aaa
das
or
mov
dec
jecxz
xchg
cmp
pop
lods
lock
add
pop
dec
ja
jp
xor
dec
mov
mov
imul
popf
jp
add
adc
mov
add
mov
lds
mov
sbb
roll
xchg
lret
jmp
bound
in
xchg
mov
out
divb
or
cmpsl
out
and
sbb
ds
inc
xor
add
movsl
fldenv
xlat
dec
scas
pop
divl
dec
jo
inc
push
mov
cld
pop
or
leave
aas
jb,pn
and
das
pop
in
rclb
cmp
fdivl
xor
inc
shl
sub
out
push
les
rcl
dec
aaa
inc
jp
sbb
aaa
inc
fisubrs
jecxz
clc
repz
scas
xor
push
ljmp
jno
insb
arpl
cltd
adc
rcll
mov
repnz
into
enter
xchg
testl
sub
sbb
mov
push
pop
adc
pop
pop
adc
pop
xor
pop
icebp
or
fwait
jo
fs
push
aas
loop
nop
push
or
push
imul
mov
negl
pusha
jb
mov
xor
and
sub
lret
inc
lret
ror
add
jne
xchg
fimuls
lods
jle
push
inc
leave
cmpsl
jg
subl
push
xchg
push
xor
orl
mov
or
test
inc
sub
loope
mov
push
and
int
adc
cmp
fcmovb
std
jbe
leave
pop
cmp
fs
mov
add
xor
push
mov
jle
cmp
pop
popa
stos
ds
adc
inc
sahf
mov
movsl
ljmp
movsb
cmp
sbb
leave
sbb
pop
xchg
insl
adc
push
push
inc
sbb
push
jne
mov
cs
push
mov
or
mov
stc
and
push
or
add
push
xor
jg
dec
adc
pop
push
or
jp
cld
xchg
mov
mov
and
notb
push
pop
in
pop
mov
pop
pop
imul
aad
xchg
in
cmp
std
ret
movsb
fildl
xchg
lret
dec
shrb
ret
scas
inc
xor
into
popa
fs
xchg
lds
inc
pop
cmp
mov
dec
or
daa
push
inc
xchg
cmp
lds
push
cmp
xor
mov
jbe
pop
ds
cld
outsl
add
jne
testl
in
leave
push
lods
push
jbe
sub
cmp
lret
pop
scas
loope
mov
leave
aas
cmpb
mov
and
andb
cmp
lea
or
ds
mov
dec
push
rcrl
dec
mov
movsb
repnz
mov
inc
sub
mov
inc
stos
mov
aaa
pop
test
insl
mov
dec
push
aad
sub
fidivs
cmp
fnstcw
xor
lret
cld
and
dec
bound
test
imul
push
push
je
mov
sub
mov
jo
mov
shr
pusha
mov
pushf
pop
xchg
aad
scas
pop
dec
xlat
imul
xor
addl
insb
lods
fcmovbe
xor
popa
movsb
fidivrl
pusha
lahf
lret
bound
shr
inc
mov
stos
dec
cmpb
shrl
out
cld
inc
sub
sar
xchg
sbb
in
gs
dec
lea
push
cli
roll
imul
add
out
test
dec
adc
jnp
stc
inc
add
mov
sub
andb
xchg
scas
ret
or
dec
xorb
aam
mov
xchg
das
add
jmp
push
xchg
cs
cwtl
push
cmc
int
sub
out
es
push
or
cmp
shlb
in
push
fdivrp
mov
shlb
or
sbb
pop
and
cmpsl
hlt
pushl
mov
dec
es
mov
push
cltd
jle
xchg
mov
inc
jle
mulb
mov
adc
jl
sub
fwait
rolb
add
xchg
adc
in
jle
dec
xchg
cmc
pop
add
aaa
push
xor
adc
in
icebp
mov
push
pop
mov
jg
std
stc
jecxz
push
lods
sub
push
add
lock
pop
xchg
imul
sti
aam
icebp
pop
xchg
fsubrs
mov
stc
xchg
mov
inc
jns
cld
call
adc
stos
scas
stos
jbe
jae
test
inc
adc
pop
inc
add
iret
add
jbe
push
or
subb
sbbb
out
add
jl
cmp
in
mov
add
pop
pop
adc
cmp
cltd
aas
push
jecxz
dec
pop
sbb
push
pop
push
jecxz
inc
adc
mov
popf
notl
inc
xchg
cmp
aaa
adc
out
pushf
stos
inc
sub
push
push
xchg
adc
inc
outsb
lret
cmpb
repz
loope
sbb
dec
push
fcomi
cmpsl
inc
mov
test
pusha
enter
jnp
es
arpl
sbb
enter
adc
test
insb
dec
push
icebp
cmc
pop
shlb
pushf
dec
in
mov
repnz
inc
call
mov
cmp
andb
fisubrs
push
lods
pop
es
xor
lods
dec
dec
mov
xlat
dec
and
xchg
xchg
sbb
push
adc
out
sub
je
dec
sub
test
xor
popf
push
lret
aad
shll
cld
dec
pop
mov
or
aas
push
sbb
lea
cmp
lsl
fildl
mov
sub
cmp
jge
lds
in
in
inc
xlat
push
xchg
inc
je
enter
out
push
test
ror
adc
in
shl
jge
mov
pop
fwait
sbb
and
add
and
push
fs
xor
fldcw
mov
sbb
orl
aas
loope
cmp
xchg
pop
mov
into
jbe
push
pop
dec
xchg
adc
jg
pop
pop
jae
sti
aaa
push
nop
dec
xor
negb
lret
ljmp
cmp
je
adc
sub
xorb
ds
dec
es
leave
scas
pop
ret
sbb
arpl
icebp
adc
imul
jmp
stos
mov
out
xor
frstor
fisubs
dec
push
xor
orl
sbb
inc
je
add
add
sti
ja
test
rcll
jg
xor
je
ss
decl
in
outsl
cs
dec
in
jns
fidivs
jle
mov
inc
out
cmpsl
ret
inc
enter
in
xchg
loop
mov
sbb
jmp
call
into
pop
gs
lds
rcl
in
cmp
or
inc
fs
and
out
inc
jo
adc
xchg
mov
scas
addr16
scas
sub
jb
icebp
push
iret
insb
hlt
in
clc
lods
inc
ljmp
dec
fnstcw
xchg
jmp
jl
and
mov
cmp
mov
sub
fdivrl
mov
mov
jecxz
cmp
sub
pop
lret
pop
dec
icebp
addl
jle
sahf
push
outsl
cltd
or
xchg
mov
rcrl
inc
add
add
cld
aas
mov
cmp
push
call
ficoml
cld
inc
jne
mov
xorw
mov
fmull
push
popf
sbb
inc
add
mov
dec
arpl
lret
lock
mov
call
xlat
cmp
aas
fldl
aam
in
or
loope
push
sahf
in
mov
push
add
mov
mov
fs
mov
cmpsb
loop
in
lcall
shrd
pop
mov
jbe
bound
mov
xchg
pop
adc
gs
jb
and
mov
cmp
add
pop
xor
ret
dec
scas
mov
adc
es
cld
mov
or
sub
int
push
testb
popl
lret
pop
jns
adc
sbb
mov
sbb
mov
insb
fucomip
push
jo
or
add
xorb
dec
cwtl
push
rcr
jb
adc
mov
pop
test
jbe
imul
mov
je
rorl
sub
push
movsl
out
jecxz
sub
lea
lea
mov
pusha
xor
aas
jge
push
jo
inc
call
out
or
hlt
aas
jg
repnz
jne
adc
push
test
cwtl
roll
lock
scas
cwtl
das
inc
xchg
lahf
push
or
mov
pop
lods
xchg
push
mov
pusha
fcompl
outsl
push
adc
pop
mov
mov
js
jbe
or
sub
ret
aaa
call
fldenv
ljmp
sbb
sbb
test
and
inc
sub
jae
into
fisubrl
mov
aam
sbb
loopne
shlb
ja
out
xor
jno
aam
repz
pop
jmp
sti
ds
ret
pop
popa
mov
push
in
arpl
rclb
dec
enter
ret
pushf
mov
cli
ror
push
in
cld
xor
adc
inc
pop
xchg
inc
sub
jbe
out
cs
test
out
add
pop
jnp
les
push
lret
push
cltd
mov
out
in
mov
xchg
dec
aas
push
pushf
mov
add
cmc
ds
jl
push
or
sbb
shl
cmp
push
cmc
and
jbe
and
js
clc
shl
loop
sbb
xor
es
xor
push
out
cmp
jbe
mov
mov
add
sbb
jne
data16
sbbl
or
pop
idivl
mov
divl
pop
movsl
xchg
and
pop
jns
add
lcall
xor
or
inc
xchg
lcall
push
je
arpl
cmpsl
orb
jbe
sub
dec
sahf
push
stos
test
mov
rep
movsl
mov
fiaddl
pop
mov
or
sub
outsb
xchg
dec
popa
adcl
sub
inc
add
cmp
data16
jae
mov
push
js
push
and
push
clc
dec
or
testb
inc
pop
push
push
push
fwait
rorb
inc
cs
inc
test
imul
je
mov
jbe
pop
xchg
xchg
mov
adc
dec
push
mov
sub
aas
sti
dec
or
xchg
movsb
or
mov
cmc
shlb
rol
push
call
cmpsl
inc
cs
ss
call
mov
cs
js
lods
dec
imul
inc
sub
xor
inc
sub
arpl
jb
movsl
xor
hlt
adc
mov
ja
insb
out
cld
sahf
stos
jnp
loope
mov
pop
shlb
cmp
insb
iret
sub
les
scas
int3
jbe
outsl
inc
push
je
push
loope
dec
sbb
push
fs
test
rcrl
stos
gs
or
js
sub
and
xor
ret
dec
cmp
fwait
adc
int
sbb
out
push
loope
jno
std
pop
jne
pop
add
mov
data16
imull
mov
mov
lret
lret
pop
or
sub
push
insl
sub
arpl
xorb
mov
dec
test
sbb
dec
mov
out
in
lock
inc
aad
pop
hlt
loop
sub
shrb
lds
sti
lret
out
push
int
dec
cmpb
jmp
jo
pop
inc
push
movsb
out
jmp
das
repz
xor
outsl
sbb
mov
aaa
loop
mov
jb
sti
mov
rorl
pop
jp
mov
loope
and
stc
gs
sbb
push
mov
pop
mov
jg
sub
ret
adc
adc
negl
xor
sbb
push
and
ud2
mov
shlb
mov
in
mov
fmulp
jecxz
mov
cmp
push
sahf
hlt
adc
pop
mov
test
pop
int
into
shll
fwait
popa
test
sbb
mov
mov
jns
fs
ds
push
mov
push
mov
imul
adc
adc
scas
inc
clc
bound
dec
mov
int
xor
xor
lds
outsb
loopne
mov
sub
and
or
insb
or
xor
lcall
jecxz
sub
clc
imul
xor
ficoml
cld
movsb
jp
ja
add
pop
adc
mov
repz
sbb
lds
xor
lea
xor
stos
popa
addb
jbe
mov
jg
lock
inc
ja
cmp
nop
xor
or
sahf
cmpb
jecxz
push
sub
sbb
rolb
shlb
aad
movsb
mov
andl
inc
jbe
clc
iret
mov
fnsave
cmpsb
sub
mov
stos
cmp
and
sub
and
out
sbb
loope
mov
xchg
scas
inc
add
dec
loope
test
mov
inc
cmp
testl
jge
cmp
cltd
js
add
pushf
repnz
mov
clc
or
sbb
cs
outsl
lods
enter
sbb
lods
cmp
mov
out
inc
jecxz
or
imul
add
leave
xchg
out
loope
ret
sti
popf
test
sub
mov
loop
pop
sub
or
cs
xchg
sub
adc
mov
mov
mov
dec
mov
jmp
mov
push
mov
mov
das
mov
push
outsb
jo
call
push
call
or
stc
inc
jge
imul
and
sbb
mov
mov
or
mov
mov
sbb
jl
adc
fwait
pop
out
lret
test
pop
mov
sbbl
int3
adc
shl
outsl
cmc
aad
or
mov
jmp
cmc
sbb
aam
jg
stc
sub
jge
push
cmpsl
pop
in
add
mov
dec
and
lock
jg
mov
lcall
ret
rcl
dec
dec
dec
in
jo
jg
adc
push
push
or
rcr
xchg
imul
div
shll
pop
pusha
ret
lret
jl
mov
stc
outsb
movsl
inc
pop
sbb
fsubp
add
adc
cs
jo
push
push
xchg
shrl
xchg
fldenv
repz
adc
pusha
mov
jae
inc
mov
push
sbbb
pop
mov
cmp
or
mov
int3
pop
mov
popf
cmp
xor
test
dec
mov
iret
inc
inc
dec
lods
mov
push
outsb
call
add
cltd
push
mov
mov
enter
icebp
mov
gs
pop
enter
sub
cmp
pusha
rol
daa
mov
bound
push
pop
jle,pt
shrb
mov
adcb
stc
push
std
sub
mov
sub
xchg
fnstcw
std
adc
fcompl
or
pop
add
addr16
or
or
mov
xlat
mov
pop
call
testl
sub
testb
mov
outsl
mov
add
daa
inc
lods
xor
adc
test
fnsave
popf
cmp
add
popl
add
sub
sub
pop
lret
sbb
dec
jnp
aam
ror
dec
test
daa
inc
pop
stos
cmc
adc
lret
loopne
pushf
pop
pop
cmpsb
setae
xchg
out
shll
in
push
daa
fs
xor
or
add
scas
mov
sub
xor
jnp
pop
int
or
mov
adc
fimuls
out
mov
fwait
repnz
dec
mov
mov
jg
rcll
push
js
scas
cs
notb
pop
dec
inc
add
hlt
push
mov
mov
jle
stc
int
lahf
inc
nop
lods
fisttpl
fisubl
mov
test
pop
cwtl
iret
push
test
xor
sub
mov
cmc
mov
clc
sti
loopne
sub
scas
inc
dec
sub
movsb
cmpb
mov
loop
xchg
mov
cmp
out
pop
aaa
push
jge
adc
add
adcl
jecxz
jmp
cltd
outsb
je
mov
jno
push
push
jb
sbb
mov
testl
int3
shrb
jecxz
nop
inc
cmpsl
out
jb
enter
and
test
fdivrl
push
sahf
inc
popa
shlb
es
mov
xlat
dec
mov
dec
lea
movsb
xchg
out
enter
pop
push
fnsave
xchg
aam
cltd
sbb
mov
jnp
in
cmp
out
sarl
das
pop
jno
pop
jno
outsb
cmp
imul
insl
jp
cmp
xor
cwtl
pop
pushl
add
or
fwait
scas
hlt
cmp
push
sbb
fcomps
xor
stc
adc
push
loop
xor
outsb
mov
mov
imul
cmc
mov
nop
or
or
pop
pusha
dec
mov
adc
loop
in
push
push
push
punpckhdq
aas
subb
xchg
adc
pop
jmp
sub
mov
sub
mov
dec
pop
mov
imul
mov
icebp
ffree
stos
aam
invd
jbe
subb
and
and
push
std
xchg
cmp
push
ljmp
jmp
cmc
cmp
inc
cltd
cmc
or
pop
or
lahf
or
fwait
bound
adc
inc
mov
out
xchg
jbe
fiaddl
das
pop
pop
mov
pushf
push
dec
ds
in
dec
jecxz
mov
push
insl
cs
stos
pop
pop
fbstp
lret
out
xchg
adc
lds
paddsb
test
mov
sub
mov
loope
pop
fidivs
mov
or
mov
sbb
sbb
inc
mov
leave
push
inc
jmp
lret
adc
mov
sbb
or
xchg
popa
mov
jb
push
pop
pop
mov
nop
sub
pop
sub
jg
lahf
cli
hlt
mov
mov
mov
out
fcmovb
push
fs
out
mov
imul
in
push
sub
xor
xchg
mov
test
xchg
push
mov
sub
push
jbe
xchg
test
sub
das
inc
subb
leave
xor
mov
push
sub
rorb
or
xchg
sbb
shlb
push
jp
sbb
add
rcrb
mov
lods
inc
fcmovnbe
sbb
sub
ret
inc
pop
and
insl
xchg
ret
sub
pop
jecxz
cli
add
int3
or
scas
sbb
outsl
into
inc
push
popf
in
push
sbb
lret
loop
in
lods
bound
pop
lock
pop
push
dec
jb
jge
les
pop
push
fnsave
xchg
mov
xchg
xor
fcmovnu
add
mov
cmp
pop
xchg
and
nop
sahf
cmp
sub
pop
es
inc
iret
mov
xor
mov
mov
negl
mov
push
mov
leave
mov
push
and
out
sahf
fwait
inc
xor
jb
sbb
adc
adcl
test
scas
repz
lahf
jae
shrl
cli
movsb
imul
ret
int3
iret
ja
or
mov
xchg
in
test
mov
and
stos
cwtl
ds
lret
subb
and
push
popf
outsb
cld
lcall
icebp
in
imul
mov
xor
dec
inc
adc
cmpsb
push
cwtl
decl
cs
negb
add
fldt
inc
or
fwait
or
leave
jle
mov
or
jo
sub
arpl
sub
mov
jae
clc
push
pop
addr16
sbb
sbb
push
mov
mov
aad
cmp
shl
pop
imulb
jecxz
mov
push
xchg
add
push
dec
mov
nop
add
addr16
fcoms
mov
xchg
ss
mov
loopne
insl
loop
inc
sahf
add
decl
into
fcmovnu
jae
loop
xchg
adc
stc
xlat
sbb
dec
filds
sub
rorl
lods
mov
movsb
jl
movsl
fstpt
jp
jns
push
fwait
cmp
lock
and
das
inc
inc
push
dec
mov
pop
push
fnstcw
scas
scas
cli
or
pmulhw
and
int
pop
and
pop
xchg
cld
cmpsb
in
test
rorb
cltd
insl
or
mov
sti
movsb
imul
and
xor
inc
inc
inc
jne
rclb
mov
outsl
fnstsw
mov
out
or
inc
nop
roll
cmp
fwait
insl
loopne
test
mov
pop
add
xchg
mov
dec
mov
mov
xchg
mov
jmp
xlat
push
addb
jns
and
mov
sub
jle
std
sub
outsl
push
adc
subb
lahf
test
in
mov
lock
mov
fstl
popf
inc
and
sub
sti
add
cltd
mov
in
pop
jb
mov
das
xchg
insl
mov
sub
in
inc
in
xor
push
push
and
cmp
xor
shl
adc
out
lret
cmpsb
mov
mov
scas
pop
xor
ret
xor
and
pusha
dec
jbe
sbb
lahf
jbe
fistps
cmpsb
jbe
movsl
xor
add
fmuls
notb
xor
repnz
add
test
inc
cld
movsb
cs
scas
sub
pop
jl
mov
jae
jp
out
pop
call
hlt
xchg
push
mov
inc
shlb
adc
or
jae
push
daa
popa
inc
dec
inc
js
adc
jbe
push
jbe
cmc
mov
test
dec
aad
ret
jg
je
add
aad
ss
sub
or
test
add
lods
pop
outsl
ja
xchg
cli
out
fwait
movsb
sti
push
jbe
pop
daa
arpl
leave
pop
lret
mov
and
fimull
or
add
add
jb
inc
xor
jo
adc
push
dec
xor
add
js
outsl
pop
mov
lods
inc
data16
test
cli
sub
push
jb
cmc
sub
push
in
aaa
out
inc
out
je
mov
addl
cld
sbb
lret
sbb
vfmsubaddpd
nop
inc
stc
sahf
pop
subl
lock
add
pop
aaa
fwait
subb
fisubrl
push
xlat
js
mov
dec
xor
jp
or
push
popf
cmp
cli
je
aaa
cmpsb
push
cwtl
mov
push
out
lds
popf
roll
mov
fs
mov
test
fistl
mov
stos
mov
add
in
cmp
decb
xchg
cld
movsb
sti
add
and
xchg
iret
mov
les
lret
inc
push
xorb
dec
ja
xor
dec
pop
mov
inc
mov
clc
or
add
jg
mov
mov
or
scas
or
cs
clc
pop
andb
push
sbb
ss
adc
dec
dec
pop
jp
lcall
packssdw
aas
jl
fwait
push
sub
and
push
mov
inc
pusha
scas
ja
xchg
pop
ja
loop
sbb
cmp
xor
ret
cltd
or
mov
and
call
sbb
js
imul
aaa
shl
mov
mov
out
insb
pop
jmp
aam
adc
loopne
lret
jo
xchg
sub
test
mull
lret
sbb
ficoml
nop
add
popa
dec
scas
push
sahf
xlat
stos
dec
jp
sub
sahf
sub
subl
dec
divb
mov
inc
push
cmp
mov
pop
imul
out
ds
mov
rol
aam
test
loope
int
ja
int
sahf
arpl
movsb
cmp
xchg
cmp
pop
out
mov
popf
pop
cmp
sbb
sub
mull
stos
mov
sub
movsl
mov
inc
insl
sub
mov
jnp
arpl
lret
cld
fwait
insl
xor
cltd
pop
sbb
loop
rcll
ljmp
mov
jno
cmpsb
es
add
pop
js
cmp
cwtl
dec
aaa
push
dec
mov
mov
enter
or
dec
mov
mov
outsb
je
fdivr
imul
add
int
roll
jge
loopne
imul
xchg
and
mov
pusha
jge
xchg
lods
fwait
sti
xchg
cltd
or
mov
or
sub
xorb
push
push
call
cmp
mov
loopne
and
and
jno
dec
rclb
mov
into
and
testl
ret
xchg
add
cwtl
test
push
cmp
mov
jbe
jecxz
push
adcl
inc
lret
dec
and
test
icebp
movsl
cld
and
js
add
subl
jo
push
ret
hlt
fists
lea
ret
cmp
push
bound
leave
push
pop
shl
icebp
xchg
mov
add
push
and
sub
add
sbb
mov
mov
dec
mov
iret
in
push
push
in
or
push
subb
add
fists
es
mov
pushf
push
scas
icebp
pusha
xchg
inc
popf
cmpsb
ja
mov
or
mov
cli
and
fsubr
xlat
outsb
fsubrp
jae
sbb
mov
lods
jmp
xchg
jle
nop
hlt
sub
sub
inc
pop
cmp
dec
dec
add
out
test
es
cmpsl
jb
addr16
les
add
je
imul
imul
add
adc
es
inc
mov
jmp
dec
cli
push
dec
push
inc
in
sub
xchg
jne
sbb
scas
inc
sbb
cwtl
test
and
es
ret
dec
sub
movsl
pop
ss
int
rcrl
add
inc
jno
inc
fdivl
sbb
out
cs
dec
xor
add
sahf
cmp
shl
sub
jno,pn
cmpsl
test
fcomps
nop
das
sub
adc
xchg
hlt
mov
inc
or
mov
mov
loopne
xor
mov
cmp
cli
ret
dec
in
push
loope
xor
aas
lea
and
push
ss
js
cmp
xlat
icebp
jbe
mov
shll
fwait
pop
hlt
cmpsl
sub
test
mov
std
call
jp
mov
or
xlat
fstps
sub
mov
enter
lret
dec
fucomip
sub
aas
lcall
xchg
in
jge
dec
jl
mov
pop
pop
xor
lea
ss
push
out
shll
xchg
add
mov
les
sarb
xor
scas
mov
jbe
test
xchg
push
mov
lahf
data16
adc
or
jb
ljmp
sub
pushf
mov
ja
imul
in
push
sahf
imul
mov
mov
jle
outsl
out
rcrl
xlat
data16
cmp
mov
fidivrl
jb
lods
push
add
adc
or
leave
js
sub
movsl
cltd
je
mov
dec
lods
in
or
sbb
rdtsc
add
or
push
xchg
sub
int3
cld
mov
jb
or
xor
adc
and
insl
xor
jae
push
mov
inc
cmp
xor
std
jo
ficomps
test
out
push
add
arpl
push
mov
adc
sahf
mov
xchg
mov
pop
lret
rclb
les
mov
fnclex
addl
xchg
pop
xlat
cwtl
iret
loope
test
inc
rcr
test
fs
inc
dec
xchg
mov
aad
cmp
divb
xor
adc
pop
adc
lahf
and
lock
xor
and
sub
cmpsb
inc
ret
pushl
xor
mov
sub
inc
xlat
adc
xchg
push
insb
sbb
rorl
lret
adc
push
cmpsb
pop
loope
inc
fdivrs
jb
leave
pop
scas
lret
cld
jne
mov
mov
dec
pop
xor
xor
adc
mov
adc
or
inc
mov
mov
or
fwait
xor
jo
add
cmpsl
push
call
shrl
inc
lret
sbb
and
push
adc
js
scas
cmp
push
jb
adc
inc
or
adc
pop
mov
test
add
xchg
sarl
pusha
mov
ficomps
xchg
dec
pop
adc
jo
ss
pop
push
sahf
lods
mov
lcall
pop
outsb
ja
jge
out
cmp
dec
pop
mov
iret
mov
outsb
rclb
add
hlt
sub
cld
add
out
sub
psubsb
loop
dec
and
call
sub
sbb
mov
loope
inc
call
lcall
movsl
insb
aam
stos
add
hlt
pop
jp
adc
mov
fcompl
stos
std
divb
sbb
sbb
js
lea
push
xor
jb
loope
sbbb
sub
xlat
add
outsb
or
fcmovb
dec
adc
ret
and
div
push
sub
sahf
and
test
movsb
push
or
mov
xchg
push
stos
in
jne
in
mov
cwtl
push
lock
and
sti
fwait
dec
cmp
xchg
je
pop
cmp
mov
cmc
dec
inc
repnz
in
xchg
push
jne
outsl
in
leave
roll
into
mov
push
and
dec
fsubr
enter
xchg
out
lret
cmp
jo
jl
sub
lret
sarb
mov
jne
lcall
dec
fs
shrl
adc
fldl
fiadds
add
xor
mov
jae
jns
ficoms
mov
insb
xchg
fcoml
sub
mov
fs
enter
push
xlat
mov
pop
dec
push
popf
jg
pop
mulb
cld
mov
pop
xor
shrl
clc
lcall
xchg
cmc
adc
push
xchg
cmp
daa
push
call
inc
push
repnz
sub
inc
pop
outsl
sbbb
xchg
lock
cmp
test
lcall
loopne
mov
jo
dec
mov
je
ja
and
daa
jbe
loope
jl
dec
and
andb
in
jb
imul
out
imul
xor
sbb
mov
pop
lahf
shrb
out
and
shrb
sbb
or
sub
popf
and
pushw
mov
dec
sahf
jbe
mov
ret
xchg
add
lret
push
and
and
pop
into
cmp
mov
xchg
mov
mov
cmp
dec
inc
fwait
sti
inc
aas
cwtl
outsl
pop
mov
divb
pop
inc
xor
test
pusha
jl
in
xor
movsb
inc
stos
loop
in
push
xor
aas
les
add
or
inc
dec
pop
mov
xchg
nop
daa
dec
xchg
jmp
outsb
scas
mov
mov
cld
out
lcall
push
push
in
inc
mov
or
loope
lret
push
mov
cmpsl
mov
sub
fldt
mov
jnp
pop
lods
sbb
fidivl
push
shlb
mov
cli
and
out
popa
cwtl
shrb
jb
shrb
xchg
mov
ss
xor
repz
repz
pushf
scas
push
xchg
cmpsl
push
inc
testb
push
xchg
test
into
xor
push
mov
mov
movsl
ret
dec
jge
jecxz
das
adc
push
repnz
cld
mov
repnz
in
dec
arpl
mov
or
rcr
sbb
xchg
sbb
imull
cltd
sti
xor
rcrl
aas
hlt
jg
mov
mov
pop
insb
daa
jb
inc
push
dec
xchg
xor
sbb
loope
test
scas
or
mov
cmc
mov
pop
cmpsl
jmp
popf
clc
std
ret
sahf
cmp
iret
jecxz
jecxz
gs
adc
scas
or
xchg
push
mov
add
aam
add
inc
mov
push
xchg
shl
pop
aas
stos
mov
pop
int
push
dec
jp
xchg
icebp
jnp
jae
mov
das
scas
sub
lds
fwait
into
pop
fnsave
push
cli
push
fcomip
cli
or
int
mov
inc
lret
mov
cld
mov
outsl
ljmp
pop
xchg
cld
xchg
push
add
out
xor
scas
popw
hlt
sbb
dec
add
mov
dec
push
outsl
jge
jge
je
stos
sbb
cmpsb
mov
push
jge
or
into
xor
int
mov
sbb
fwait
sarb
sbb
mov
int
mov
sub
mov
pop
or
rolb
and
js
and
lock
lods
xor
mov
jno
xor
sahf
and
pushf
push
rcrl
sub
push
mov
enter
and
out
stos
jne
cli
popl
mov
add
loopne
jecxz
mov
hlt
pop
mov
xchg
push
pop
xchg
sub
jg
pop
cmp
nop
sarl
xorb
insl
iret
mov
sbb
int3
gs
fdiv
jl
lods
scas
sbbb
popa
sub
mov
xchg
je
fs
xor
sub
lahf
insl
shrb
int
pop
arpl
cs
add
rcrb
popa
stos
std
push
cwtl
xor
pop
sub
sub
add
pop
jno
pop
mov
out
inc
push
mov
fiadds
fisubrs
add
sti
test
fisttpll
jg,pt
inc
out
inc
mov
jnp
int3
sbb
iret
sub
sbb
mov
imul
add
pop
ret
into
cmpsl
cmpsl
ret
loopne
and
jno
dec
call
mov
push
sti
mov
imull
sub
adc
fidivs
test
dec
out
cld
mov
rol
ret
daa
lcall
lea
add
sbb
adc
and
mov
ret
pop
aad
pusha
pop
jg
mov
dec
jo
jns
mov
xor
dec
xor
xchg
push
je
push
adc
inc
dec
xor
or
mov
in
xchg
sub
test
or
test
lret
lret
jbe
xor
jne
sub
test
jmp
push
sahf
lods
fistps
pop
dec
jae
xor
cmp
addr16
xchg
pop
out
dec
out
popa
ss
call
push
das
scas
jp
mov
in
jmp
out
mov
ljmp
pop
jbe
subl
pop
scas
lahf
sbb
fisubs
dec
outsb
outsb
xchg
mov
sti
ret
adc
imul
jne
daa
inc
jmp
and
add
mov
popf
sbb
imul
outsb
aad
hlt
shlb
mov
enter
and
or
scas
dec
mov
mov
imul
fidivl
pop
adc
dec
mov
sbb
pop
sbb
aas
push
es
add
lods
lods
pop
shlb
push
jecxz
repz
inc
and
movl
rol
sbb
in
enter
add
push
adc
mov
inc
lea
sub
push
test
movsl
xor
or
nop
jle
adc
push
mov
xchg
sbb
sahf
lods
sbb
outsl
jnp
loop
or
sbb
ror
std
loop
jg
fs
andl
inc
jmp
add
sbb
test
paddd
jns
mov
xchg
sbb
gs
pop
stos
and
jno
sti
or
fisubrs
ds
mov
out
sti
int3
pop
pop
int3
orb
cmp
in
jg
sarb
jne
inc
pop
add
pushf
scas
jle
and
mov
add
in
test
into
or
dec
stc
mov
jno
add
roll
cmp
inc
mov
and
mov
shrb
mov
imul
movsb
dec
aas
push
cwtl
sub
lods
cltd
push
inc
ret
ljmp
sbb
das
test
int3
fimuls
arpl
jb
movsl
lcall
xor
gs
scas
bound
mov
mov
loopne
mov
pop
add
jecxz
and
dec
push
jmp
rcll
xchg
xlat
pop
cmp
ljmp
adc
scas
pop
dec
lret
pop
pop
cmpsb
scas
inc
ljmp
pop
push
xchg
scas
or
mov
mov
push
stos
mov
push
mov
inc
push
cmpsl
popa
jl
lock
adc
mulb
push
and
fldcw
inc
xorb
scas
incb
jmp
and
jg
imul
out
stc
pop
dec
inc
vmwrite
movsb
xchg
mov
sub
xlat
fst
mov
and
inc
jmp
inc
int
jb
or
xchg
and
mov
inc
js
ds
push
mov
mov
in
xchg
mov
testb
mov
outsb
mov
icebp
mov
cmp
dec
mov
adc
stos
adc
inc
dec
insl
in
aam
lcall
cmp
mov
sahf
xchg
inc
inc
dec
xchg
mov
adc
xchg
nop
sbb
add
icebp
ljmp
jb
test
out
xchg
imul
aaa
int3
pop
lods
inc
and
std
inc
xchg
push
out
and
cltd
bound
loopne
add
stos
pushf
and
dec
adc
std
lcall
fs
mov
arpl
xchg
push
aaa
testl
ret
inc
sbb
test
mov
cmc
imul
mov
and
insl
and
rclb
cltd
sub
mov
or
repz
push
lea
fidivrl
or
lret
cmp
fmuls
leave
stos
or
fucomp
in
pop
loopne
pop
cmp
add
daa
cmpsb
sbb
xor
cmc
pop
ja
and
aad
jl
push
jecxz
cmp
sti
stos
not
int
push
and
xchg
jbe
call
std
adc
jbe
xchg
xchg
shrl
lds
int
movsl
outsb
adc
pop
enter
out
testl
jb
decl
pop
shlb
mov
out
test
test
cmc
mov
sbb
xchg
and
mov
fs
fadd
mov
ss
jl
and
iret
or
dec
adc
mov
lds
and
repz
stos
cmp
orl
lahf
push
insl
xor
jae
mov
daa
out
lods
inc
fstps
push
loop
test
push
or
xor
pop
push
and
sbb
mov
cwtl
jns
mov
test
inc
cmpsw
adc
cmc
arpl
mov
cs
add
in
mov
pop
js
sbb
pop
mov
dec
pop
movsl
fldt
lods
pop
cmp
jl
jl
add
push
popf
pop
sahf
into
lods
into
popf
sbb
and
pop
jne
xor
adc
and
adc
fsubs
xchg
insl
push
pop
into
out
or
adc
push
insl
fidivl
mov
inc
sub
pop
cmp
xchg
jae
jbe
gs
sar
and
lods
cld
xchg
fmulp
dec
arpl
repz
insl
push
leave
sub
testb
pop
inc
clc
or
lret
fnstenv
sub
sbb
dec
add
jo
push
popa
lcall
add
inc
addr16
test
jge
and
jo
sub
inc
sbbl
sbb
jne
lea
cli
pop
pop
iret
mov
push
mov
scas
popa
cmp
fwait
inc
jmp
dec
test
hlt
mov
fstpt
cwtl
pop
lcall
pop
loopne
add
mov
clc
sbb
adc
xor
pop
mov
movsb
jmp
or
push
mov
and
cmp
push
sti
pop
test
fcomps
mov
fldt
push
sahf
jo
xchg
mov
movsb
jg
cmp
popa
out
loop
and
jg
repz
out
cltd
stos
xchg
mov
or
cmp
add
sbb
inc
and
cld
sarb
sub
daa
mov
xchg
fcomps
xor
jle
aam
gs
adc
mov
scas
mov
jo
daa
lods
cmp
xor
push
push
rcll
sahf
ja
and
in
outsl
jg
popa
mov
ljmp
cwtl
sbb
enter
loop
ret
out
mov
xlat
in
imul
or
mov
popf
es
into
sbb
negl
or
cmpsl
cmp
mov
pop
out
aaa
mov
mov
sbb
jg
movsl
cmp
out
jnp
adc
out
fs
test
scas
aaa
mov
call
movsb
repnz
mov
sbb
fxch
lods
out
mov
jb
xor
stc
push
call
sbb
or
xchg
fldenv
hlt
cmp
xchg
mov
xor
sbb
enter
sub
rorb
rorb
dec
adc
es
pop
lods
ljmp
test
subb
aaa
pop
ljmp
lock
inc
cs
add
and
addb
test
mov
nop
cli
add
fistl
test
and
push
mov
jnp
clc
icebp
cmp
mov
pusha
mov
cmp
mov
dec
loope
arpl
aam
popa
fldcw
cwtl
mov
and
mov
cwtl
data16
xchg
arpl
ret
faddl
negl
cmovno
or
xorb
and
xchg
push
shll
je
mov
xor
push
push
call
mov
sub
loopne
mov
or
xchg
sub
int
sti
repz
mov
and
in
test
stc
stc
fucomp
aaa
daa
jo
addr16
push
or
lea
adc
cmp
pushf
mov
mov
mov
scas
ret
in
mov
out
mov
push
jge
mov
fld
aas
or
in
addr16
call
fsubs
mov
push
lock
fsubl
inc
or
loope
imulb
stc
cs
dec
sti
fdivrl
xlat
dec
fisttps
loop
rol
addr16
mov
loope
cs
jge
sub
xor
pop
into
sub
test
hlt
mov
outsb
add
cmp
mov
mov
stos
rolb
ja
inc
cli
repnz
ss
test
push
add
lods
and
ror
ds
loop
in
pushf
jae
lahf
daa
decb
or
pop
fidivrl
imul
in
mov
int
pop
sbb
insb
mov
fidivs
ret
inc
ja
hlt
pop
add
ret
enter
add
imul
sbb
push
and
test
and
je
orps
lods
jl
fidivl
shl
inc
cwtl
cltd
icebp
mov
loop
mov
aaa
mov
dec
test
out
aad
sti
pop
jle
enter
loope
mov
push
loop
push
popa
call
ds
in
sbb
ja
test
ja
imull
leave
cmp
cs
imul
imul
insl
mov
out
into
mov
sub
cmp
scas
fwait
test
aam
das
inc
pop
push
aas
fsubrs
je
pusha
andb
divb
pushl
and
in
addb
cld
pushf
in
dec
xlat
icebp
ljmp
push
xor
or
popf
mov
dec
mov
jns
inc
in
hlt
inc
add
ja
out
jne
cltd
cmpsl
add
push
xor
pop
add
shll
pop
adc
push
mov
mov
mov
xor
mov
mov
adc
mov
jp
pop
or
inc
lods
fisttpll
push
fisttps
lret
inc
mov
xor
leave
pop
xchg
adc
add
inc
cmp
bound
xchg
jmpw
jp
fistpl
add
push
push
xchg
dec
push
xor
mov
scas
add
sbb
mov
sbb
jg
mov
mov
aaa
dec
cmp
cmc
cmp
pop
mov
mov
and
inc
sub
lods
dec
pop
mov
xchg
les
push
xchg
cmpsl
and
fmuls
sbb
testl
jl
sub
or
cli
or
adc
add
dec
or
gs
fwait
sti
enter
inc
shll
sarb
mov
xchg
dec
sub
aas
icebp
mov
xor
in
sub
jb
sbb
popa
in
in
jp
add
test
xor
movsl
cmp
leave
aam
mov
rcrl
xchg
inc
je
test
loopne
lahf
ja
fwait
imul
lcall
lcall
repnz
stos
and
orl
push
pop
jno
push
jno
imul
inc
sub
movsb
or
inc
andb
loop
rcrb
pop
mov
xchg
es
lods
aam
pop
mov
jb
add
popf
cmp
insl
adc
cmp
shl
mov
ds
shlb
push
testb
and
push
test
cmp
mov
inc
pop
das
inc
or
xchg
add
pop
shrl
fiaddl
pop
push
mov
in
cli
adc
pop
xchg
mov
pop
mov
out
in
enter
mov
jg
shl
mov
shr
fwait
enter
js
xchg
xchg
sub
iret
fstpl
or
faddl
out
mov
lahf
and
outsb
inc
xor
lods
dec
cmp
test
test
bound
bound
jge
mov
test
sti
xchg
sahf
loop
movsb
sbb
jecxz
mov
mov
ret
mov
push
scas
push
xlat
sbb
mov
push
ret
enter
popa
imul
arpl
shrl
ljmp
movsl
test
stc
or
test
cmpsl
mov
mov
adc
xchg
jb
mov
pop
xchg
cmpsb
push
sarl
mov
outsl
jl
push
leave
mov
xor
push
mov
push
dec
xchg
sbb
cltd
inc
push
sbb
adc
out
sar
adc
adcl
mov
sbb
jg
and
pop
inc
pop
stc
mov
or
add
jp
xlat
cmp
sbbb
test
ja,pt
add
pop
sub
jge
cmpl
push
push
jmp
in
hlt
sbb
iret
out
inc
std
lods
movsb
mov
push
lret
pop
cmp
ret
push
sub
and
mov
pop
data16
xchg
mov
scas
pop
cld
stc
data16
mov
lds
dec
std
xlat
xlat
and
xchg
ljmp
and
xchg
sub
out
jp
mov
add
pop
addr16
add
adc
arpl
pop
sub
fcmovu
add
mov
mov
push
push
push
jmp
adc
loope
mov
jp
jb
cmp
and
movsb
inc
push
inc
stos
iret
fs
inc
aad
aad
insl
ret
add
xchg
jp
adc
stos
sbb
fcompl
mov
lock
mov
dec
adc
and
fwait
mov
sbb
rolb
pop
jg
test
loopne
sbb
and
cltd
fcoms
scas
push
fidivs
or
pop
pop
push
jmp
jo
jo
sbb
ficoml
xorb
mov
inc
push
mov
loopne
sbb
cmp
ljmp
mov
in
add
pop
lock
lods
inc
stos
inc
cmpsl
aad
cmc
rcll
dec
pop
aaa
add
pop
add
lea
inc
xor
int
cmp
insb
sarb
out
mov
addr16
stos
dec
stc
lock
xchg
mov
ljmp
in
sbbl
pop
pushf
daa
shl
xchg
pop
jecxz
scas
and
mov
into
loope
jnp
rorb
adc
bound
jg
ss
vpandn
add
lock
push
mov
leave
out
xchg
dec
aam
dec
mov
cld
fldcw
inc
popa
cmc
in
fs
cmc
push
test
out
mov
mov
push
iret
in
jbe
xor
pop
das
shr
pop
mov
cltd
mov
imul
je
cmp
loop
pop
sahf
jno
push
add
xchg
cld
and
loope
popa
mov
mov
or
loop
icebp
lock
cli
mov
fildll
dec
iret
mov
mov
mov
adc
pop
mov
repz
add
addl
mov
sub
xchg
add
or
out
jg
call
or
dec
mov
jmp
cmp
dec
xor
inc
xlat
outsl
shl
pop
mov
stos
mov
sbb
mov
shrb
mov
mov
dec
shlb
mov
cmp
rorb
fwait
mov
cltd
je
stos
mov
out
js
pop
mov
pop
addr16
dec
bnd
mov
ret
clc
and
jne
test
xchg
test
sarl
jbe
mov
lds
shrb
add
sbb
out
and
pop
xor
sahf
fiadds
rorb
xor
hlt
lcall
xchg
sar
inc
mov
imul
sbb
and
fwait
or
fmull
xchg
out
push
jmp
mov
dec
lret
out
mov
fidivrl
sub
xchg
orb
sub
xchg
adc
int3
out
jae
fsubrs
inc
test
rcrl
lea
push
movsl
adc
clc
subb
test
mov
mov
insl
mov
push
rcll
loope
shrl
mov
xor
cmp
jp
xchg
sbb
cmp
daa
es
mov
popw
and
leave
icebp
sti
stos
mov
ljmp
mov
fcompl
cmp
enter
call
jns
mov
xchg
cmp
aad
icebp
push
pushf
xor
inc
leave
mov
incl
sbb
cmp
xor
jb
adc
hlt
mov
cmp
push
cmp
in
mov
pushf
inc
inc
push
rclb
lahf
movsl
push
mov
cmpsl
sti
push
pusha
in
adc
jl
fldt
nop
push
out
inc
xchg
aas
out
jecxz
nop
les
mov
test
lea
faddl
and
mov
cmc
mul
into
aas
inc
add
es
cmp
lods
pop
cld
stos
clc
daa
outsl
cmp
or
shr
fidivl
sub
in
lods
cmp
ret
mov
jns
ret
ret
add
pop
xchg
dec
aam
push
sbb
push
push
stc
xchg
dec
jno
dec
cltd
shrb
xlat
jbe
lock
sarl
and
mov
sub
insl
clc
in
idiv
or
sub
mov
and
js
int3
in
aaa
jns
nop
xor
test
rolb
mov
xor
pop
jmp
loopne
mov
movl
clc
push
xor
inc
pop
enter
inc
in
push
lret
into
push
rcrb
pusha
test
mov
or
bound
addb
movsb
add
push
xor
mov
xchg
sbb
xchg
hlt
push
fbstp
xchg
push
pop
into
mov
or
push
mov
std
and
xor
adc
or
sbb
inc
enter
mov
pop
push
dec
sbb
int3
iret
xor
jne
hlt
pop
jae
shll
pop
scas
jno
xor
cld
mov
lock
popf
cltd
cmp
mov
inc
lahf
push
arpl
aad
push
fsubrs
adc
or
stos
inc
sub
push
jne
lret
inc
jbe
shl
test
pop
push
and
in
lods
aad
ja
lds
pop
lahf
sbb
add
testb
lods
adc
je
mov
sub
push
xchg
loopne
repnz
sbbb
pushf
jmp
mov
or
and
or
cmp
je
sub
mov
cmp
and
loope
pop
hlt
jno
and
mov
push
test
lcall
pop
clc
xchg
mov
rcr
jno
stos
lock
fstps
andb
lahf
or
mov
xorps
xchg
lcall
pop
mov
je
jne
xlat
xchg
xchg
cmp
mov
xor
pop
mov
sub
sub
sbb
add
je
cld
stos
daa
cmp
cmpsb
pop
insl
daa
idiv
or
mov
pop
jge
ja
add
jbe
int3
rcrb
xor
jge
lds
sbb
lahf
pop
mov
fnstcw
mov
clc
or
out
xchg
sub
push
or
test
xchg
inc
enter
mov
rcll
mov
push
daa
pop
and
enter
mov
outsl
mov
lods
push
add
adc
fldenv
aaa
pop
cld
insb
push
subl
repnz
lret
movsl
add
cs
or
scas
mov
mov
add
scas
mov
data16
add
xchg
out
test
sub
jnp
jle
mov
cmp
in
cs
lret
fidivl
test
loopne
fstl
jp
dec
mov
je
push
dec
std
jmp
orl
xor
cmp
pushw
inc
mov
lret
int
sub
and
pop
lods
std
dec
cmp
push
dec
loop
rclb
or
mov
add
adc
pusha
div
sub
cmp
fidivrs
fdivrl
cmp
fstpt
pop
into
push
jge
les
adc
mov
jo
test
dec
jecxz
shl
pop
cmp
imul
mov
pop
jnp
pushf
lcall
enter
xchg
ss
sbb
mov
mov
sub
cs
or
pop
inc
sub
lret
into
cmp
push
iret
mov
jmp
jecxz
cmp
call
add
mov
aaa
orl
lret
mov
std
in
les
push
xorb
or
divl
sar
outsb
jmp
sbb
push
popf
fwait
jbe
push
dec
mov
flds
ds
add
jns
es
sub
mov
les
mov
mov
pushf
les
xchg
jecxz
add
stc
orl
add
cmp
incl
data16
sbb
mov
out
add
int3
xor
adc
cmovle
adc
xchg
add
add
mov
push
sbb
test
andb
idivb
mov
push
leave
xchg
jno
and
jae
sub
stos
cli
enter
or
adc
fistl
out
test
mov
aas
mov
in
dec
push
dec
xchg
xchg
sub
mov
dec
push
clc
nop
lock
aad
popf
push
push
insl
icebp
aaa
rorb
lret
add
test
cmp
inc
mov
ret
push
fdivl
mov
leave
outsb
sub
mov
aaa
xchg
mov
insb
jl
test
ret
aam
pop
sbbb
shll
push
add
pop
mov
mov
mov
adc
xchg
mov
fcom
mov
push
push
sbb
enter
and
mov
aad
mov
mov
jnp
cmp
in
std
push
inc
jno
loop
sub
cmpsb
push
mov
popf
lods
stos
cmp
push
mov
lret
imul
dec
dec
adc
loopne
mov
pop
sbb
push
jo
jmp
int3
xchg
popf
jg
adc
xchg
sbb
and
adc
mov
orb
jmp
add
rclb
mov
loopne
push
test
jmp
in
repnz
sarl
xlat
mov
fldenv
sub
dec
pop
pop
sub
cwtl
das
int3
test
test
addr16
hlt
cmp
sub
xchg
in
fucomp
lea
repnz
jg
xor
add
call
in
push
inc
dec
pop
adc
add
inc
mov
jne
imul
push
in
or
jle
xor
rclb
out
xor
mov
or
sub
or
jno
adc
mov
test
dec
movsl
xlat
nop
js
ret
xor
xor
cwtl
xchg
das
test
fldl2e
or
jae
inc
jae
mov
sub
mov
stos
cli
mov
sub
push
test
xchg
shrb
xlat
and
fldt
notl
stos
call
out
push
xchg
cmp
cmpsl
dec
or
dec
pop
jbe
inc
popa
cmp
cmp
ret
or
fstpt
push
stos
xlat
gs
adc
icebp
push
leave
into
cmp
lods
movsb
js
lds
sbb
sahf
dec
sbb
jge
push
fs
subl
adc
lcall
mov
lods
xor
aad
test
push
mov
xchg
push
or
int3
or
jae
sahf
movsb
sub
and
mov
std
sti
rcrl
lahf
pop
sahf
sarb
pop
imul
ds
lret
mov
rorb
and
iret
cs
jecxz
movsb
lock
sub
in
rorb
mov
mov
cmp
push
sub
mov
sub
ret
pop
xchg
iret
cmpsl
loope
mov
add
mov
or
pop
cmpl
pushl
das
add
test
cmp
fwait
and
jle
mov
and
pop
pusha
mov
xchg
lock
fwait
mov
fsubr
pop
cmc
inc
inc
xlat
sbb
xchg
jb
das
cmp
dec
cmp
jae
fwait
fs
mov
rcll
test
fnstenv
bound
mov
mov
fcmovbe
fdivl
cmpsb
jmp
adcb
aad
movsl
icebp
dec
inc
pop
out
mov
xchg
adc
jbe
xchg
mov
mov
rcll
cmp
or
jbe
cmpsl
pushf
and
in
and
das
nop
cmp
dec
ret
pop
inc
dec
jl
jb
pop
mov
inc
dec
jecxz
push
popf
iret
mov
ljmp
xchg
jne
mov
dec
push
push
aaa
jb
rclb
push
jmp
inc
add
and
and
sub
add
mov
pushf
mov
ficoml
fmull
outsl
sbb
fisubs
ret
xor
es
and
cwtl
xor
rorl
jmp
lahf
mov
shll
xor
xchg
xchg
xlat
dec
es
push
sar
mov
fildl
hlt
fistpl
out
sbb
cmp
mov
insb
push
inc
and
adc
scas
pop
push
mov
xchg
and
sbb
repz
enter
scas
inc
xorb
out
hlt
adc
lret
push
lcall
rcll
imul
test
lds
xchg
ret
call
or
dec
inc
orb
loope
pusha
or
push
mov
cmp
das
scas
inc
ficomps
push
shr
lahf
adc
xchg
mov
repz
out
int
sub
repnz
popa
jns
cmp
jg
pop
mov
fwait
lahf
or
xlat
jl
xchg
loop
cmp
repnz
mov
ret
xchg
leave
int
jecxz
stos
adc
mov
xor
or
push
rep
jl
sarl
popf
sub
push
xchg
mov
adc
cmovs
shlb
pusha
icebp
pop
lcall
inc
repnz
shlb
addr16
pop
fistl
cld
xor
and
sarl
inc
jp
mov
mov
movb
cmp
fmuls
movsl
jo
xchg
pop
mov
jns
dec
pop
cltd
ja
sbb
loop
mov
add
loop
stos
xchg
pop
adc
inc
inc
movsb
xchg
scas
mov
xor
jg
dec
push
pop
dec
or
adc
negb
cmpsb
jge
mov
notl
rolb
jnp
mov
xorb
rcl
insl
aam
cmpsl
pop
fisttpll
in
mov
xchg
out
push
faddp
adc
sbb
insb
outsb
add
cmp
mov
xor
lds
mull
mov
test
cmpsl
sub
testb
sub
iret
xorb
addr16
lock
pop
add
jbe
je
fs
std
xchg
out
adc
mov
rorl
fld
in
jp
push
ljmp
mov
in
jno
sahf
out
test
jg
add
push
jge
imul
sbb
sbb
enter
mov
negb
loop
fnsave
sbb
xor
inc
enter
lcall
icebp
ret
shll
jmp
or
xor
jnp
sbb
in
fwait
stc
dec
stos
inc
jl
and
sub
inc
test
inc
sbb
pop
loopne
pop
insl
cmpsl
fdivs
aad
dec
mov
xchg
fcmovne
mov
out
in
add
mov
sub
push
notl
mov
arpl
mov
pop
mov
sub
and
dec
sti
lcall
sbb
fnstsw
inc
xor
fnstenv
loop
xor
in
js
push
xchg
sbb
into
enter
jnp
xor
sbb
mov
repnz
pop
rclb
cmp
push
test
push
fwait
push
sub
xor
push
pushw
insb
add
sbb
xchg
push
adc
sbb
hlt
cmpsb
sub
out
pop
aad
jno
sub
aad
fdivl
in
pop
mov
popf
sbb
push
sub
lcall
jge
or
out
push
pop
divb
fsubs
mov
xchg
int3
arpl
add
mov
pop
int
or
int
fdivr
loope
lods
scas
cmp
push
int
mov
mov
or
sbb
out
dec
mov
xchg
movsb
scas
pop
mov
es
xchg
add
decl
stc
xor
mov
cld
inc
and
inc
fdivrl
sub
fsts
inc
jae
popf
jo
call
mov
mov
and
sbbb
sbb
inc
sub
ja
call
mov
popa
xchg
dec
inc
pop
mov
popf
xor
loop
push
notl
int
add
test
or
fldl
mov
adc
cmc
mov
xor
aas
add
mov
push
mov
es
out
lock
pop
enter
out
jmp
cmp
call
fstpt
or
pushf
cld
pop
sub
cmp
out
jbe
andl
pushf
fs
dec
xor
or
mov
les
pop
out
jecxz
aam
add
mov
sub
sub
sub
out
ja
fidivl
cli
xchg
scas
add
fidivrs
inc
push
push
daa
add
sub
ret
jo
fdivs
fisubrs
dec
pop
cmpsl
dec
or
mov
sbb
dec
lea
int
pushf
int3
fdivs
jmp
pop
mov
pop
loop
mov
aam
ffreep
out
les
cmpsl
ds
lret
jg
sub
jns
data16
in
jno
je
daa
xchg
xlat
pop
adc
test
and
popa
decb
jo
mov
inc
inc
inc
push
mov
or
mov
add
or
add
cmp
cmc
decb
xor
push
ljmp
xchg
cmp
sub
stos
inc
mov
ror
repnz
add
lahf
lods
stc
idiv
jo
push
sbb
cmp
dec
dec
dec
inc
subb
xlat
xchg
jne
mov
fsubr
push
lea
inc
out
ss
in
sub
push
scas
inc
xchg
daa
lret
int3
mov
imul
daa
adc
pop
push
and
or
mov
mov
pop
adc
pop
mov
xchg
jae
movsb
lahf
dec
pusha
add
int3
mov
std
xchg
ficompl
test
jl
and
jb
mov
pop
jae
ss
jb
mov
or
rcl
mov
hlt
dec
push
inc
out
adc
out
clc
push
lcall
push
loopne
or
ret
inc
fsub
js
arpl
lcall
fdivr
or
add
xor
aaa
imul
ss
and
jmp
jmp
add
cmp
testb
mov
cld
pushl
adc
xchg
loope
mov
insb
sti
fs
adc
adc
and
mov
stc
out
ficomps
push
mov
aas
jo
mull
iret
mov
imul
xor
and
cmc
in
pop
ja
int
xchg
mov
sbb
or
jmp
lds
test
iret
data16
movsl
cmp
pop
adc
xchg
jo
jg
jb
icebp
lea
mov
cmpsb
movsb
aas
jl
and
and
cmp
inc
pop
push
ljmp
jno
xchg
pop
cld
rorl
daa
lds
dec
es
mov
mov
inc
movsl
rcll
lock
icebp
jle
dec
out
pop
leave
pusha
andl
dec
lods
xor
rcrl
stos
shlb
sbb
popa
mov
roll
push
or
xor
lods
std
push
xchg
data16
pushf
sub
jo
dec
jne
or
push
jb
aaa
cltd
fisttpll
sub
mov
ret
call
and
flds
jno
jle
enter
std
shll
into
push
lods
mov
push
in
push
mov
rcrl
xchg
mov
rcrl
jmp
lods
xchg
pop
dec
cli
mov
pop
loope
fisttps
test
jns
and
mov
mov
jle
jne
test
scas
xchg
loope
in
loop
dec
jecxz
test
jnp
push
out
add
inc
gs
xor
xchg
pop
pop
adc
aas
in
inc
in
jmp
inc
in
jmp
xor
leave
in
jp
shrb
aam
adcb
cmpsl
cli
jne
sub
shr
popl
mov
mov
or
push
shr
loopne
inc
mov
push
push
pop
push
pop
xrelease
jbe
mov
cwtl
pop
movsl
fists
in
xchg
imul
lret
mov
add
lods
inc
std
push
xlat
outsb
std
mov
xor
xchg
push
les
mov
out
les
pop
pop
imul
pop
cmp
es
dec
fnstsw
lahf
ss
out
lret
push
jmp
pop
cmpsl
mov
cs
push
daa
aas
jle
sub
add
pop
xchg
sub
cwtl
das
sar
mov
jecxz
or
out
sahf
adc
lods
inc
inc
es
xor
push
in
cwtl
mov
mov
cmpb
cmp
push
pop
push
xor
stos
lock
add
lock
push
jmp
ja
push
mov
cwtl
jno
nop
sbb
fdivrl
dec
push
mov
lahf
sbb
xchg
pop
cltd
dec
leave
fisttpl
fisubs
xor
insl
or
movsb
cmp
test
mov
push
ret
pop
test
pusha
test
mov
jb
test
popf
jo
lock
divb
xor
mulb
insl
jge
and
dec
adc
mov
movsb
aas
mov
mov
or
fsubr
sbb
push
inc
jl
shl
add
and
sub
inc
fisubrl
pop
dec
lock
pop
lods
repz
inc
aaa
gs
scas
push
iret
fdivl
inc
mov
pop
aas
cmp
fidivl
xlat
rol
dec
aad
gs
imul
sub
outsl
mov
xchg
push
in
jo
sti
imul
cmc
out
lret
and
movsl
jno
out
in
xor
dec
add
loopne
xor
mov
mov
push
bound
inc
inc
jge
pusha
dec
cltd
mov
mov
cmpl
aad
jle
xchg
dec
fcomi
jl
in
clc
sbb
mov
bnd
xchg
inc
out
add
or
iret
xorb
adc
shll
ja
xchg
out
ljmp
push
aas
hlt
mov
mov
in
outsl
adc
scas
jle
gs
push
addb
in
add
ljmp
mov
adcb
jo
enter
incb
jae
push
jge
or
data16
in
leave
sub
push
mov
in
mov
dec
subl
imul
insb
mov
out
add
gs
pop
ja
cmpsb
xor
jmp
pop
sbb
rcrl
and
mov
cmc
in
mov
ss
mov
loopne
fwait
jmp
leave
test
add
dec
xchg
fiaddl
cwtl
mov
lahf
ss
or
scas
adc
adc
fnop
push
xchg
js
jbe
add
jmp
popf
sbb
or
mov
sub
cmpsl
mov
cmp
cld
cltd
push
xor
inc
pop
addl
int3
cltd
jne
test
fnstsw
fwait
inc
sub
call
movb
pop
call
and
popa
dec
or
fdivl
or
das
adc
xor
ffree
shl
repz
js
dec
cmp
mov
lds
daa
int
mov
xchg
in
rdpmc
mov
or
xor
jns
sbb
lea
inc
adc
sub
imul
and
rep
inc
and
push
dec
clc
pop
or
sahf
fnsave
imul
jg
mov
dec
fistps
jnp
shlb
inc
test
mov
js
mov
inc
insb
push
gs
arpl
sbb
mov
sbb
movl
jae
inc
out
push
mulb
rclb
jg
pop
jle
test
add
idiv
sub
push
mov
aad
xor
xlat
mov
or
sbbl
jmp
mov
push
es
testb
push
xchg
jge
out
xor
popa
outsl
and
lcall
inc
outsb
and
lahf
addr16
sbb
dec
mov
stos
cwtl
daa
sub
inc
sbb
mov
ds
shl
mov
jae
out
stc
xchg
lahf
xor
mov
and
xchg
dec
aad
lcall
mov
fwait
xor
mov
addr16
xor
inc
pop
xchg
xchg
sbb
jmp
flds
out
cmpl
pop
push
and
lea
push
adc
jno
dec
push
or
or
xlat
into
adcl
lahf
or
lods
and
add
std
push
adc
aam
mov
dec
dec
cmp
sbb
mov
mov
loopew
repnz
xchg
mov
push
fiaddl
iret
push
mov
sti
test
inc
aad
dec
sbb
inc
stos
jl
mov
pop
mov
or
jge
movsb
add
xorb
push
sub
adc
lcall
hlt
jbe
mov
gs
lods
or
and
cli
movsb
push
into
jo
or
es
pop
mov
pop
int3
divl
xchg
test
adcb
xchg
push
or
adc
mov
xchg
test
call
cmp
outsl
xor
out
inc
test
sub
adc
xchg
test
mov
add
cmpsb
mov
mov
inc
push
ffreep
push
outsl
adc
add
jno
jno
packsswb
xchg
iret
jno
add
sbb
fucomp
outsb
arpl
mov
cmp
or
cmpsl
scas
sarw
xchg
ja
jmp
lahf
mov
push
mov
repnz
repz
mov
jb
push
pushf
push
or
std
negb
into
test
mov
cld
jl
add
lods
xchg
mov
pusha
dec
fs
dec
pop
and
adc
shll
xor
pop
dec
addr16
mov
aas
dec
mov
addr16
lods
insl
outsb
xchg
mov
dec
pop
fcom
sbb
sbb
lock
dec
out
xchg
push
inc
imul
pop
adc
and
mov
push
sub
gs
jo
and
mov
call
shr
jo
repnz
cmp
idivb
ret
test
jmp
cmpsl
dec
pop
shl
xchg
aas
insl
cli
jl
ret
pusha
mov
push
test
mov
hlt
dec
aaa
stc
je
jl
inc
mov
adc
loop
gs
sub
mov
mov
addr16
icebp
lahf
cli
pop
in
inc
ror
hlt
add
sbb
sub
out
xchg
mov
xchg
xchg
mov
dec
cmp
test
fcmovne
iret
cmp
test
fisttpll
popf
lds
cs
test
sbbl
push
pushf
icebp
test
cmc
enter
push
mov
mov
xchg
les
rclb
out
sub
movsb
jo
in
pop
xchg
push
outsb
mov
sbb
out
scas
in
aam
repz
movsb
xchg
or
push
add
lea
dec
mov
push
icebp
mov
ja
sub
jns
jmp
outsl
xor
cmp
int3
cmp
insl
test
mov
jb
jg
mov
fdivs
call
cmp
add
or
add
sub
or
adc
je
add
mov
pop
insl
cmpsl
pushl
aas
movsl
sub
repz
push
pop
out
jns
lcall
cwtl
das
sbb
jge
mov
or
pop
mov
sub
das
mov
jae
pop
not
lods
mov
mov
testl
pop
add
jo
ja
call
loop
adc
pop
outsl
inc
xor
pop
pop
ss
fdivrs
fcomps
push
or
sahf
andl
sarl
inc
pop
or
into
mov
lret
adc
jmp
fidivrl
int
dec
loop
lock
pop
xchg
jp
shll
pop
mov
negb
push
inc
imull
inc
aad
and
or
gs
and
mov
add
cmp
incb
sar
sub
scas
ds
sub
or
inc
jno
std
aaa
sarl
and
cmp
pop
push
xchg
jb
sahf
and
push
bound
push
repz
icebp
mov
push
out
jbe
adc
testb
dec
imul
sbb
int3
sub
jae
or
gs
movsl
xchg
insb
adc
dec
inc
cltd
fidivs
jmp
fmull
mov
stos
inc
mov
sarl
in
add
cmp
test
sbbb
push
mov
stc
insl
out
ja
hlt
push
or
sub
jb
lret
pop
dec
mov
xchg
xor
gs
mov
xor
jae
addr16
and
mov
data16
rorb
test
movsb
vpaddb
outsl
fisttpl
fidivs
rcrl
add
dec
orl
lret
fnstenv
adc
jmp
enter
xchg
push
icebp
int
fnsave
push
inc
push
popa
decb
mov
pop
sarb
xlat
lea
inc
aad
filds
out
incl
bound
jp
test
add
add
xor
jmp
jp
jp
sbb
movsb
sbb
push
adc
mov
jae
out
push
inc
add
and
shll
sarl
ljmp
cmp
test
sbb
lahf
lods
xchg
mov
sarl
jmp
outsb
sbb
and
pop
push
mov
sub
push
pop
mov
cwtl
fucomip
cld
jno
pop
xlat
stc
in
fprem
fildll
inc
mov
adc
push
and
gs
push
and
mov
ljmp
jno
movsl
pop
fisubl
mov
aas
mov
jno
and
inc
das
mov
push
mov
cmp
jmp
mov
lea
jg
jl
cmpsb
nop
add
and
push
arpl
call
or
lea
add
add
sub
pop
sbb
or
sub
xchg
sub
aad
in
es
mov
add
enter
and
mov
hlt
jns
mov
lock
or
adc
inc
xlat
and
cmc
stc
sahf
ss
enter
jno
mov
lea
push
mov
jno
xchg
mov
mov
lahf
push
in
pushw
movsb
out
cld
and
xchg
pop
idivb
xchg
add
insl
add
jno
mov
and
fstpt
lret
mov
rcr
add
pop
or
jmp
mov
push
xor
js
sub
fildll
lds
pop
cmpsb
push
sbbl
mov
repnz
push
fcompl
andb
fimull
in
inc
outsb
into
push
test
aas
push
hlt
push
movsl
ljmp
jg
mov
sbb
sar
mov
xor
xor
cmpsl
jb
push
dec
mov
rcr
xor
cmp
repz
or
scas
aaa
in
or
mov
inc
stc
popf
jmp
lea
out
jmp
or
stc
inc
jbe
cmpsl
lahf
mov
out
xchg
fwait
lods
xchg
into
xchg
add
test
xchg
aaa
mov
inc
xlat
adc
lods
outsl
std
jbe
pushf
pop
ret
sbb
out
pop
inc
sub
dec
mov
add
mov
test
jmp
add
bound
xchg
and
lds
movsl
fstps
or
pop
lahf
add
je
xchg
sarb
addr16
push
add
scas
test
pop
pop
mov
in
das
enter
loopne
push
popf
sub
imul
jg
xchg
sbb
mov
nop
mov
jg
cld
mov
js
rorb
jg
push
adc
stos
mov
cld
jl
adc
xchg
sbb
jecxz
cmpsl
ret
jge
lahf
idiv
pop
push
jne
cli
or
bound
add
push
lret
cltd
pop
repz
sbb
daa
and
fisttpl
orl
js
cwtl
sbb
push
jle
stos
and
aas
pop
mov
lret
sbb
cli
push
mov
inc
in
jo
adc
into
loope,pt
push
and
sub
dec
cmc
cltd
inc
fxch
bound
mov
dec
icebp
ss
mov
push
arpl
mov
lea
xchg
pop
repz
in
iret
mov
aas
test
sahf
push
xor
adc
or
adc
arpl
fdivl
add
dec
pusha
shrl
pop
mov
popa
lret
add
bound
pop
fildl
repnz
pop
mov
sub
mov
movsb
pop
les
jecxz
outsl
mov
pusha
call
sub
xor
push
bound
fdivrp
or
fiaddl
mov
xchg
xchg
and
neg
mov
pop
pop
jmp
mov
push
pop
inc
rolb
ja
sahf
rolb
test
push
jp
mov
or
aaa
cmc
ret
adc
push
lock
mov
pop
ja
dec
gs
inc
jb
push
cmpsl
dec
adc
scas
loop
mov
mov
xlat
mov
aaa
aas
popf
xor
decl
jno
mov
cmp
repnz
shl
sbb
dec
addl
lods
inc
testb
xchg
in
enter
dec
dec
push
jo
mov
adc
mov
pop
cmp
jne
loopne
mov
cmc
mov
sti
pop
cmp
lret
lahf
mov
adc
aad
pop
mov
les
xchg
js
cvtps2pd
mov
inc
push
dec
pop
xlat
insl
sahf
pop
and
lret
pop
out
cmp
mov
lret
fdivp
sbb
pushf
shrb
mov
orb
test
sbb
cmc
mov
fs
mov
xchg
mov
cld
and
outsb
dec
or
jo
out
push
jle
mov
sub
sub
fistps
jle
push
pop
test
int3
fistl
pop
sbb
inc
xor
int
ficoms
rorb
push
fldenv
dec
loope
xchg
test
sti
hlt
imul
bsf
jno
roll
add
pop
sbbl
icebp
in
lods
inc
mov
jne
dec
rcrl
fsubrs
xchg
les
stos
and
rorb
lahf
lds
repnz
out
mov
push
xchg
inc
pop
dec
in
loop
stos
in
cmp
int3
pop
repz
pop
or
in
ret
ret
sbb
pop
jo
jo
cwtl
mov
adc
jbe
nop
testl
pop
aad
ss
rorl
stc
dec
sbb
xchg
sbb
cmp
xor
std
xchg
mov
lahf
stos
adc
ret
xchg
push
outsb
clc
ret
cmpsb
fsubl
popa
sub
xchg
mov
inc
xor
je
stos
xchg
xchg
push
je
jmp
adc
cmc
mov
stos
and
and
mulb
mov
outsb
gs
sahf
mov
add
ss
add
mov
addr16
cld
outsl
add
adc
xor
xchg
add
in
aas
mov
inc
out
xor
lcall
in
arpl
mov
lds
lcall
mov
jg
mov
or
fidivl
notb
dec
mov
repz
or
mov
mov
xor
arpl
sbbl
aas
aam
lea
push
cmp
mov
loope
adc
jno
inc
dec
xchg
add
lds
cs
not
leave
push
jae
clc
jge
lds
mov
push
aam
popa
and
ficompl
call
into
jecxz
jmp
out
mov
cmpb
xchg
sub
cli
mov
outsl
movsl
std
addr16
imul
pop
cmc
test
dec
scas
inc
push
xchg
sub
mov
mov
gs
push
inc
lds
sub
into
data16
xor
in
push
es
mov
notl
sub
cmp
adc
arpl
or
inc
scas
inc
xor
xlat
mov
dec
cmp
stos
jns
xchg
stos
ds
lahf
push
sahf
out
fidivs
cmp
cmp
adc
in
aas
loopne
leave
test
inc
aam
sub
scas
sbb
mov
icebp
push
dec
cmp
std
cltd
cltd
rcll
nop
in
notl
inc
nop
dec
push
repnz
fstpt
lds
imull
rorl
mov
dec
insl
sbb
fbstp
dec
decl
repz
lcall
shrb
data16
std
mov
les
xor
xchg
jge
fcomps
xchg
dec
push
rcr
ret
jle
popa
scas
test
out
fldenv
lea
xchg
and
or
outsb
add
lods
sub
and
lahf
fstpl
jae
dec
test
xchg
cmp
fs
leave
adc
hlt
dec
fidivrs
jg
addb
insl
shrb
or
stos
aas
xlat
adc
movq
sti
fwait
cltd
addl
sub
dec
test
mov
mov
pushf
dec
mov
sti
add
ss
jbe,pn
sti
mov
test
mov
pop
jb
push
push
test
adc
aad
inc
xor
loopne
in
add
jecxz
sub
popf
cmpsb
push
dec
pusha
add
pop
jo
sbb
and
and
dec
push
andb
ss
adc
adc
nop
xchg
dec
add
cmp
mov
xchg
lods
cmp
fstl
pop
push
sub
or
pop
lock
sub
sbb
cmp
out
mov
cmpb
add
lret
shrb
rclb
mov
sbb
xor
cmp
sub
push
adc
cmc
js
sub
dec
dec
push
in
mov
cmp
jb
adc
pop
and
xchg
push
xchg
je
in
mov
lcall
and
je
call
xor
mov
jnp
aas
push
int3
pop
inc
dec
or
adc
sbb
jge
jg
dec
mov
mov
clc
cli
aad
inc
sbb
out
dec
xor
pop
add
sti
outsl
into
mov
sbb
mov
and
mov
das
inc
loope
adcl
mov
sahf
sbb
mov
push
cmp
fisttps
jl
ja
cmp
jne
add
mov
and
ret
daa
mov
clc
push
aad
sbb
add
aas
adc
lods
inc
mov
scas
sbb
mov
xchg
xlat
jmp
push
outsl
xor
add
out
sub
or
xor
sub
clc
xor
in
insb
daa
push
arpl
test
arpl
mov
xor
imull
std
and
jo
cmp
jbe
sub
insb
push
dec
test
xchg
push
add
pop
nop
lret
jp
jecxz
ficompl
add
push
lods
sbb
stc
mov
dec
pusha
pop
mov
stos
inc
stos
xlat
push
xlat
fisttps
or
pop
mov
div
jmp
add
push
xor
ljmp
cmp
sub
test
dec
dec
mov
mulb
je
push
mov
or
shr
or
vpsrlw
adcb
insl
in
sbb
stos
cld
test
roll
cltd
pushf
or
mov
fldl
inc
jge
js
add
shlb
mov
sahf
cmc
inc
shll
std
fwait
adc
sub
pop
addr16
mov
iret
and
xor
aaa
pop
xchg
jle
pusha
cmp
pop
add
cmp
mov
pop
adc
or
push
insb
pop
mov
xchg
sbb
je
shll
push
inc
xchg
mov
in
adc
add
xchg
mov
push
in
repnz
jns
sub
int3
mov
jns
fistl
push
mov
pop
cmpsb
cmp
xchg
xchg
mov
icebp
insb
push
mov
cmp
or
pop
std
ret
adc
iret
fbld
int3
aam
enter
jecxz
cld
js
test
lret
sbb
xor
cmp
add
fidivs
jmp
popa
sbb
xor
movsl
insb
enter
pop
lcall
insl
int
in
or
sbb
mov
int3
aam
pop
cmpsb
lock
push
mov
push
iret
cwtl
mov
rol
lcall
mov
cltd
mov
lods
and
cmp
mov
or
push
ds
mov
test
jmp
test
xlat
mov
push
je
repz
add
xor
push
inc
sti
mov
dec
jp
repz
loopne
dec
into
in
add
sub
mov
inc
mov
xor
sub
outsl
shrl
dec
scas
sub
mov
pop
jge
cmp
js
and
sbbb
push
movsb
int
ljmp
push
cmc
outsb
out
mov
jg
fsubr
push
insl
jnp
adc
push
jno
nop
or
and
mov
enter
adc
cmp
pop
test
inc
in
sub
not
das
mov
aam
pop
adc
cmc
in
xchg
sti
ss
push
imul
ret
jnp
pop
repz
imul
cld
test
outsb
sbb
lods
jns
stos
or
shll
push
outsb
mov
mov
out
sti
mov
sti
sub
shr
aas
shlb
test
push
es
jno
popf
and
sbb
lods
and
push
mov
fs
dec
scas
push
xor
movsb
repnz
pop
hlt
mov
push
sub
js
jae
outsl
xlat
or
test
add
jno
ljmp
lea
pop
adc
xchg
data16
das
push
loopne
mov
mov
cltd
rcll
shll
leave
fstpt
mov
xchg
andb
mov
mov
pusha
int3
in
pop
ljmp
jnp
inc
cmp
ss
imulb
fmull
jbe
and
jg
add
mov
xor
into
and
in
pop
push
loop
fwait
or
lahf
mov
or
xchg
xchg
lock
mov
pop
cs
sbb
stos
jnp
mov
sahf
push
xor
xchg
jbe
mov
cld
pop
jl
lods
fldcw
test
sub
iret
mov
das
out
dec
jl
dec
xor
in
imul
inc
cltd
idiv
push
fstpt
jle
lret
fwait
or
jo
pushf
push
mov
js
push
popf
push
xor
push
iret
push
outsb
add
dec
loop
cs
sbb
insl
pop
push
dec
js,pn
or
and
jecxz
in
cwtl
push
fldt
or
pop
loop
add
lcall
testl
test
pop
js
outsb
pop
cwtl
ss
mov
pop
cltd
sub
fidivs
cmp
adc
mov
cmp
jecxz
adc
fdivs
cmp
mov
pop
xchg
push
outsl
daa
jge
mov
andb
inc
aad
sbb
sub
insl
or
sbb
arpl
pop
out
pop
or
jne
sti
push
in
or
cmp
pop
into
fildl
add
ja
pop
mov
shlb
adc
xor
dec
xchg
jp
lret
pop
les
mov
icebp
fstps
aaa
add
fs
popf
jo
adc
jae
out
dec
mov
in
imul
mov
imul
imul
in
fwait
jno
xchg
sub
mov
mov
cmc
push
cltd
imul
in
mov
push
sub
pop
aam
xor
shl
and
cmp
int3
xchg
lahf
stos
rep
dec
pop
pop
stc
pop
adc
mov
les
mov
bound
cmc
xor
sub
fidivrs
dec
adc
shll
push
push
insl
mov
pop
aaa
jecxz
jno
sub
lods
jnp
dec
out
push
mov
fstenv
jns
and
mov
imul
mov
and
jae
dec
xchg
popf
xor
jl
test
cld
lret
and
ss
cmp
cs
xchg
cmp
cld
mov
movsl
mov
dec
sub
dec
das
add
add
cmp
mov
jmp
xchg
or
rcrl
fs
pop
ret
xchg
inc
pop
add
je
icebp
pop
and
mov
and
setl
sarl
jbe
adc
jmp
jl
xor
mov
sub
sahf
jge
jbe
stos
inc
push
fwait
pop
add
jp
das
mov
mov
test
imul
fidivl
dec
fiaddl
adc
sti
dec
test
xchg
lahf
xor
and
mov
int3
pop
push
push
mov
xchg
das
mov
sub
xchg
into
fisubrl
addr16
mov
dec
out
mov
sub
cmpsb
xor
jo
dec
inc
or
fsubr
fxch
lcall
fcmove
pop
lock
in
adc
xchg
call
lahf
repz
push
fstps
je
fisubrs
add
cmp
cmpsl
out
fisttpll
sbb
repz
mov
repz
into
fiaddl
jp
ja
sbb
stos
xor
test
push
test
pop
fsubrs
sahf
in
lock
scas
add
adc
enter
fucompp
and
jmp
enter
jns
aad
mov
lahf
xor
or
pop
mulb
dec
mov
imul
mov
xorl
push
mov
in
push
adc
xor
and
ss
dec
test
adcl
push
mov
test
xor
out
out
sti
mov
jbe
or
sub
insl
andb
daa
rclb
or
loop
sbb
push
sub
jnp
pop
pop
add
add
push
mov
sbb
jmp
outsb
ret
mov
repnz
mov
and
push
adc
lret
sbb
jecxz
sub
push
sub
mov
mov
xchg
xchg
out
add
add
push
add
stc
mov
ret
das
or
or
push
mov
sbb
movsl
outsl
inc
push
mov
jne
js
aas
stos
and
ficoml
cld
push
out
andb
or
lods
mov
outsl
leave
cmp
pop
sbb
pop
aad
leave
repz
ss
pop
negl
or
xor
sbb
repnz
sub
adc
nop
adc
js
mov
lods
insl
add
or
add
mov
lret
and
sub
nop
mov
test
je
out
call
insl
and
or
pop
inc
hlt
mov
jns
ds
sbb
mov
adc
or
and
xchg
cs
sub
xchg
clc
inc
xchg
out
or
in
ret
pop
sub
pusha
lea
addl
test
sbb
rolb
int
ds
xor
aam
or
rorl
pop
push
sub
cmp
outsb
test
inc
aad
pop
sbb
cmp
sub
mov
push
popf
cmpsb
jmp
add
mov
int3
dec
das
xchg
and
jns
movsl
nop
mov
arpl
mov
jg
iret
stc
loopne
sqrtps
bound
pushw
stos
inc
sbb
pop
lods
mov
pop
in
mov
push
bndstx
fisubrl
xchg
mov
pusha
fmuls
repnz
adc
int3
or
shr
add
push
or
shll
aaa
push
xchg
sub
cmp
or
mov
ja
and
add
push
js
outsb
in
cmp
scas
outsb
sub
xchg
sub
xorb
out
sub
loopne
push
cwtl
pop
aas
mov
mov
aas
addr16
inc
lea
mov
sub
add
movsb
shll
ljmp
sbb
jle
add
sahf
mov
xchg
adc
sbb
mov
adc
movsb
jmp
xor
inc
lods
data16
lods
dec
adc
out
add
fcmove
xchg
call
dec
push
pop
outsb
and
insl
arpl
push
ret
inc
push
mov
jmp
cld
push
lea
cmc
xchg
sbb
shrl
dec
ljmp
dec
fsubr
jge
push
sbb
sub
mov
fbstp
xchg
cmp
std
xchg
mov
adc
out
sbb
or
fcomi
mov
jmp
fisttpl
icebp
in
lods
jge
stc
lods
scas
arpl
xchg
inc
subb
dec
out
inc
int3
push
jb
bound
repz
sub
pusha
lea
dec
pop
stc
mov
dec
or
xor
pusha
jg
jnp
sbb
aam
aas
add
fs
and
ss
aam
adc
fiaddl
int
dec
jle
fnstenv
mov
lods
inc
dec
mov
add
aas
dec
dec
and
aad
push
inc
insb
push
dec
shrd
je
mov
lods
outsl
fs
mov
mov
jmp
daa
jo
lds
mov
adc
adc
push
and
mov
enter
icebp
xor
daa
outsb
pop
out
js
and
add
xchg
add
jns
je
dec
mov
pop
inc
push
stos
sti
jae
xor
lods
mov
mov
jecxz
arpl
sub
fldt
mov
cmc
insl
rol
xchg
fwait
insl
dec
repz
lret
stos
lods
cs
sahf
pop
int
ljmp
shll
and
mov
dec
pop
cmc
push
inc
dec
sub
sti
pop
pcmpeqb
jle
pop
pop
mulb
lea
xchg
or
sub
in
int
and
sbb
ret
push
arpl
pop
ret
lds
iret
es
outsb
dec
rcr
or
negb
sub
fbstp
or
cwtl
scas
test
cmc
xor
aaa
xchg
les
sub
fcomps
dec
pop
loop
and
push
jne
data16
je
orl
pop
push
lds
test
lds
adc
add
push
mov
push
pushw
mov
jnp
jno
fcompl
sbbb
iret
in
and
inc
rol
mov
cmp
pusha
push
mov
or
leave
mov
fsts
mov
stos
es
pop
call
pop
loopne
lds
popa
call
adc
shl
lea
cmp
insl
jge
jp
push
cmp
into
push
idivb
in
jns
and
mov
adc
jns
mov
lret
sub
dec
dec
icebp
iret
mov
mov
adcl
cmp
sub
negl
mov
pop
sub
int
repz
push
faddl
test
shl
pushf
pusha
xlat
icebp
popa
mov
ds
adc
test
sarb
xchg
adc
mov
repz
dec
mov
aad
add
mov
fsubs
sbb
jge
sub
sbb
inc
xor
lock
arpl
addl
adc
test
fcmovu
xchg
leave
sbb
lea
sub
mov
jnp
pop
inc
jl
and
jmp
enter
mov
push
inc
bound
icebp
enter
add
js
enter
lods
int3
mov
ss
or
sbb
lods
pop
fdivrs
lcall
pop
iret
jbe
adc
cmp
pushf
dec
lods
mov
jp
leave
test
mov
sub
add
push
sbb
cmc
xchg
push
sbb
mov
incl
rclb
dec
loope
add
cmp
mov
pop
mov
popa
xor
and
ret
sbb
mov
push
cmpsl
inc
xor
mov
push
and
rclb
dec
mov
jbe
adc
ja
push
test
and
xchg
cmpsl
mov
jp
add
adc
cmp
pushl
movsl
and
pop
adc
out
sbb
add
mov
cmc
push
pop
add
hlt
xchg
xor
fmul
popf
movsl
adc
sbb
jo
jecxz
inc
sti
stos
inc
adc
add
movsl
cs
adc
pop
jmp
rcrl
sbbl
int3
xchg
xor
fnsave
fildll
dec
mov
dec
mov
cmc
cmp
dec
les
icebp
enter
inc
lcall
and
ret
jo
push
test
mov
int3
jge
das
mov
xor
sbbb
mov
xchg
lods
or
or
movsl
repz
ror
sub
sahf
addr16
nop
dec
cmp
sbbb
ret
ret
cltd
mov
in
insl
add
notb
push
add
das
bound
inc
jae
aas
fstps
mov
lcall
lahf
and
cmp
loope
push
out
jg
sahf
ss
xchg
push
cmc
mov
cmpsb
les
inc
and
rcr
repnz
cmp
push
rep
xlat
lods
fisubs
mov
ret
call
pop
mov
out
ret
jl
fucomp
das
sahf
dec
dec
ror
mov
sarb
adc
imul
mov
es
ret
xchg
mov
movsb
mov
stos
out
pop
adc
and
inc
stos
pop
cmpsl
cwtl
lods
testl
or
inc
lret
outsb
jp
out
sar
sbb
add
popf
jp
insl
xor
movsl
jg
inc
mov
cs
ror
xor
jae
mov
scas
mov
jno
dec
icebp
iret
stos
ljmp
xor
mov
push
insb
jg
loop
outsb
clc
xor
push
cmc
mov
push
or
xchg
inc
aas
mov
jno
add
rcll
mov
sub
aas
jb
mov
flds
fldl2t
fstl
jp
xchg
jne
jp
aaa
addb
decl
pop
lods
mov
xlat
xor
xchg
or
mov
sahf
or
jmp
repnz
cmpsb
dec
roll
xchg
mov
insl
shrl
les
aaa
cmp
adc
xor
cs
mov
pop
bswap
pop
cmp
pushf
pop
aad
addb
jle
bound
xor
or
cs
mov
xlat
pop
jmp
pop
pop
imul
mov
repz
ja
cli
sbb
daa
inc
fcoml
lods
push
dec
repnz
imul
xchg
xor
scas
and
push
or
iret
push
imul
add
fcompl
stc
push
loop
movsl
fsubr
out
pop
cmp
mov
mov
lea
xor
push
insl
orb
push
movsl
rclb
mov
cmp
outsl
cs
shrl
pushl
in
lock
sub
push
stos
aam
jne
push
adc
scas
inc
or
arpl
jb
and
xor
mov
pusha
jmp
je
xchg
mov
xchg
sub
mov
or
mov
fidivs
stos
mov
push
fcoms
pop
leave
jne
pop
mov
mov
cmp
xlat
test
or
cmc
les
cmp
insl
lfs
or
and
ret
sarb
dec
add
mov
imulb
rclb
inc
pop
adc
push
mov
icebp
dec
sub
orb
fcompl
lret
into
adc
mov
fidivs
xchg
adc
sub
nop
dec
fiadds
jge
in
cmp
cmp
jl
aam
testb
nop
lea
jbe
jecxz
mov
dec
les
mov
push
sti
push
cmpsl
ret
scas
xchg
mov
lock
cmp
fcmovbe
push
stos
aaa
scas
ja
mov
and
cmp
jmp
dec
xchg
nop
pop
repnz
movsl
cmc
or
mov
cwtl
push
aas
mov
test
xchg
sub
cmpb
xchg
push
xor
mov
pop
mov
add
xor
xor
arpl
inc
orl
outsb
fs
jmp
cmp
setge
out
adc
xchg
orl
and
aaa
mov
les
adc
and
sub
fdiv
nop
stos
and
adc
das
jle
push
jnp
mov
xchg
pushf
in
into
mov
iret
stos
data16
xlat
jns
or
adc
lret
lret
loope
sub
test
pop
lret
fdivrs
jge
adc
inc
add
nop
mull
scas
mov
inc
fisubrl
add
dec
lods
cmp
add
les
sub
or
xchg
cld
inc
lds
xor
cmc
mov
mov
cltd
clc
push
pop
movsb
scas
in
mov
dec
push
fiaddl
jmp
mov
jle
push
inc
sub
jbe
mov
push
lds
xchg
loop
xor
cmc
push
xor
pushf
xchg
push
push
mov
lahf
gs
adc
jp
icebp
cmp
cmp
cmp
test
pop
pushf
rorb
push
adcb
incb
into
repnz
cwtl
loopne
repz
ret
cmp
test
jbe
call
or
mov
or
push
scas
pop
push
hlt
cmp
sahf
mov
cmp
popa
call
test
fidivs
xor
inc
fisubs
daa
cmp
aam
aaa
test
mov
mov
imul
pop
mov
xchg
call
dec
mov
mov
cmp
inc
jecxz
fimuls
pop
and
pushf
lea
sarl
jl
mov
mov
dec
mov
aas
add
push
dec
and
fcmovu
das
xorl
cmc
push
arpl
cltd
xor
sbb
adc
jae
xlat
sbb
push
outsl
sub
lahf
movsb
mov
xlat
ret
cwtl
cmp
cwtl
lock
push
mov
notl
int
psllw
xchg
pop
add
int3
mov
adc
ja
cmp
mov
pop
shl
insb
insl
cmpsb
pop
jae
lea
loope
cmp
cmp
in
lcall
add
add
mov
sub
and
scas
fidivrl
inc
adc
fcompl
adc
mov
ror
xor
add
test
es
stos
push
jno
les
les
into
enter
xchg
xchg
and
ja
add
adc
ja
add
add
bound
xchg
sahf
xchg
icebp
inc
mov
leave
sub
or
popf
insl
pop
in
sub
jne
adc
cmpsl
cmp
test
mov
mov
lods
jmp
push
add
shll
or
lret
lock
jl
cmp
and
fcomps
and
fldl
mov
gs
cmp
lock
cmpsl
sbb
pop
push
add
fsubrs
and
sub
into
repnz
sbb
ss
test
mov
cmp
and
fcomps
add
and
lahf
sbb
pop
push
out
js
aas
stos
rorb
imul
mov
lea
rorl
mov
dec
cmpsb
lock
push
push
xor
or
and
and
ljmp
es
inc
stos
inc
fstp
bound
stos
mov
cmpsb
les
test
sbb
fld
jns
inc
jge
jae
call
in
xor
push
lock
into
xrelease
dec
push
es
pop
jns
add
adc
and
lods
ret
jbe
std
nop
jnp
out
or
out
push
outsb
add
movsl
mov
add
gs
sbb
dec
dec
dec
mov
stos
arpl
scas
sbb
pop
pop
out
aaa
push
arpl
loopne
sti
or
cwtl
ds
mov
sub
subl
imul
push
xchg
cmpsl
test
divb
push
sbb
ror
mov
mov
jle
jl
lods
mov
iret
push
jl
movsb
sti
rcrb
cwtl
bound
pop
cltd
and
jmp
add
loope
xlat
cmp
push
mov
push
fldenv
mov
xchg
out
mov
or
cmp
cmc
pushf
and
mov
and
mov
and
and
ja
cli
sub
insl
mov
insl
mov
hlt
mov
in
and
lahf
xor
pop
mov
cmp
loope
add
mov
mov
fistpll
or
mov
pop
out
and
rcl
cmp
xor
or
pop
pop
jns
mov
push
sub
movsb
pop
pop
hlt
mov
arpl
adc
mov
icebp
jl
pop
stos
ds
test
dec
sub
mov
imul
js
cmpsl
cmp
lea
call
push
mov
repz
adc
fs
test
fcoms
xor
add
or
inc
mov
or
seta
jl
sbb
dec
std
dec
iret
ds
jg
sbb
les
mov
mov
jbe
leave
push
push
stos
inc
ss
cltd
mov
lods
shrb
mov
pusha
stos
inc
add
jle
mov
and
leave
mov
mov
roll
fldt
jp
outsl
data16
mov
repnz
push
fidivs
mov
test
cmc
sti
push
sbb
cmp
adc
cltd
aas
bound
repnz
testb
inc
xchg
popa
js
jb
mov
in
cld
jae
pop
pop
pushf
test
adc
jns
or
ret
cmp
mov
mov
sbb
shlb
inc
out
nopl
add
mov
xchg
movsb
test
xlat
jbe
adc
ret
cmp
xchg
ja
test
dec
or
out
push
jae
xchg
loop
add
pop
mov
sbb
sbb
push
insl
jle
dec
mov
fsubs
pop
in
int3
mov
or
jmp
out
rolb
loopne
lahf
out
sbbb
nop
pop
adc
mov
push
test
dec
dec
cli
inc
mov
sub
cld
sub
sub
shrl
fisubl
std
push
repz
mov
imul
lret
mov
scas
push
ret
and
jbe
mov
jge
and
fsubs
lods
mov
sahf
insb
aad
jnp
mov
xorb
dec
int3
xchg
shl
mov
sbb
cmp
test
sub
xchg
lahf
stos
cmp
repz
rorl
decl
sbb
push
aas
fistl
and
pop
fcomps
xor
into
mov
lret
popf
int
jne
test
dec
xchg
pop
dec
cmp
push
cmp
xor
adc
pop
repz
xchg
push
aaa
jp
push
xchg
and
test
and
fs
lea
sbb
rcrb
sub
aas
sbb
cmpsl
hlt
mov
pop
mov
movsb
pop
sub
out
dec
rcll
xchg
icebp
inc
iret
fwait
pop
out
pop
test
int3
cmp
cs
hlt
mov
ljmp
icebp
add
inc
xchg
pusha
stos
fcoml
sub
jb
sbb
sbb
xchg
outsl
or
test
les
sub
ret
jge
icebp
dec
cmp
xchg
gs
add
ja
out
sub
imul
movsb
jle
pop
out
fnstenv
sarl
enter
and
ficomps
ss
imull
movsl
in
insl
sub
shrl
cmp
xchg
outsl
les
pop
cmp
jnp
enter
cmp
cmp
pop
pop
add
aaa
xchg
outsb
add
xchg
jns
mov
movsb
scas
filds
and
scas
push
jecxz
test
mov
dec
repnz
icebp
push
sti
fwait
fwait
push
cld
pop
test
cmp
inc
inc
inc
xchg
push
mov
push
jecxz
sbb
cmp
add
stc
jl
mov
imul
mov
jl
mov
stos
jge
flds
sbb
stc
stc
pop
shlb
pop
faddp
jecxz
aad
fisttpll
mov
rcll
es
mov
fstps
add
sbb
xchg
dec
ja
cmpl
mov
test
push
mov
jo
shlb
or
cwtl
mov
add
and
mov
data16
stos
push
hlt
lret
fdivl
mov
mov
add
xor
sbb
pop
bnd
add
jns
lahf
cltd
lods
popl
xchg
add
iret
xchg
mov
sub
inc
adc
cwtl
test
sar
test
push
and
cmc
mov
ret
mov
loop
cmp
pop
inc
pop
hlt
jno
cmp
lret
hlt
add
xor
pop
int
add
fwait
lods
sub
sbb
jl
mov
xlat
dec
in
repnz
imul
mov
mov
xlat
mov
fnsave
das
jnp
fisubrs
ficoms
sub
scas
xor
das
or
pop
push
fwait
divl
shll
imul
cld
arpl
push
xchg
jmp
jg
cmpsl
cmp
imul
pusha
idivb
add
test
jecxz
es
iret
and
jp,pt
out
adc
call
mov
test
sub
pop
ja
les
test
add
rolb
pop
mov
mov
push
shrb
cld
ljmp
shl
xor
lods
and
mov
inc
dec
pop
inc
lahf
push
inc
fidivs
pop
xorb
push
lods
ljmp
add
into
test
inc
sbbl
dec
mov
dec
lcall
insb
cmpsl
sbb
xlat
jne
ljmp
xchg
aam
add
mov
addr16
add
push
into
sbb
mov
mov
std
push
clc
cli
mov
in
mov
pop
stos
shlb
pop
jbe
mov
mov
lock
inc
xchg
mov
pop
push
xorl
dec
iret
cltd
repnz
in
enter
scas
and
mov
rorb
pop
cmp
sub
mov
int3
sbbl
push
repnz
mov
ret
push
fimull
lret
or
insb
ret
sub
sbb
aaa
mov
mov
fsts
sub
andb
xor
add
shrb
outsl
mov
fidivrs
out
cmp
mov
loop
jbe
sub
jle
ds
icebp
mov
mov
mov
fs
mov
fsubrl
cmp
push
js
adc
mov
ds
push
pop
dec
fsubs
xchg
or
pop
mov
push
sbb
mov
ret
jle
add
sbb
mov
add
pop
mov
out
popf
adc
lret
aas
shlb
adc
mov
push
mov
stos
popl
push
movsl
gs
inc
aaa
pushf
and
fnstsw
xchg
fldenv
sbb
sub
xor
jmp
jl
pop
xor
lret
ret
xlat
cld
sub
mov
arpl
lcall
dec
enter
imul
cmp
sbb
leave
fisttps
push
outsl
sub
push
out
es
mov
jns
pop
and
mov
fsubrl
xchg
mov
add
add
movsb
stc
or
fsubs
push
and
aaa
xchg
xor
push
cmp
mov
pusha
mov
mov
gs
mov
mov
test
lret
mov
scas
push
dec
stc
push
popf
sti
pop
iret
add
push
movsl
inc
xchg
out
jg
jmp
aaa
stos
mov
cmpl
enter
ficoml
mov
push
push
jo
scas
sbb
jmp
out
jecxz
das
cmc
dec
arpl
rcrl
daa
mov
lret
sub
xchg
sbb
fidivs
add
test
std
and
xchg
xchg
pusha
subl
mov
lock
push
dec
out
mov
lods
cmp
fildll
mov
xchg
out
sbb
cs
shlb
in
mov
fnsave
loope
cmp
test
shufps
into
sub
push
stos
std
fsub
dec
pop
stos
fsubl
xor
ljmp
jge
push
lcall
and
add
ds
dec
jp
pop
pop
xchg
rorl
lock
loop
jecxz
cmp
xchg
nop
sub
sub
imul
cld
dec
cmp
xchg
pop
sub
jle
pop
sub
lds
in
cli
sbb
xlat
repz
dec
xchg
call
adc
pop
jg
stos
adc
pushf
mov
rcr
cmpl
and
inc
outsb
dec
imul
and
push
or
mov
es
ret
sbb
mov
lods
mov
loope
and
cltd
and
scas
ljmp
out
mov
shlb
jae
divb
pop
clc
jg
xor
or
xchg
aas
jbe
mov
pop
xchg
aad
mov
stc
jo
dec
test
scas
mov
out
in
add
scas
xor
mov
cmp
insb
inc
aad
loopne
xchg
pop
in
stos
inc
je
xchg
xchg
jns
mov
and
inc
fs
sahf
imul
mov
add
pop
mov
ret
roll
and
loopne
push
adc
jnp
je
push
sub
pop
cli
pusha
mov
jmp
enter
dec
cmc
mov
push
into
pop
fsub
and
fstpt
movsb
inc
cmp
movsl
add
mov
mov
repz
lret
xlat
pop
ds
imul
or
and
mov
xchg
subl
shll
cmpsb
ret
mov
mov
lock
std
push
js
mov
mov
mov
mov
dec
loope
repz
enter
inc
xchg
insl
add
xchg
outsl
cmp
hlt
aas
int3
js
sub
mov
clc
mov
lds
ffreep
lcall
cmp
inc
cmp
push
sub
ds
cmp
pop
jmp
or
lret
stos
push
push
pop
es
xchg
push
insb
jle
lret
push
push
and
add
dec
in
jo
stos
inc
repnz
arpl
out
push
int
xor
mov
insl
inc
mov
cli
es
pop
mov
cmp
sub
vpshuflw
jne
frstor
out
pop
mov
mov
push
roll
or
shlb
sub
cmp
test
shr
adc
popl
sub
inc
add
cmp
scas
mov
xor
test
pop
cmp
pop
fiadds
fwait
stos
lret
adc
ja
jne
sub
push
xchg
xchg
sub
aas
repz
and
lock
cmp
stos
jne
pusha
shld
mov
adc
pop
sbb
pop
sbb
loop
xacquire
pop
dec
adc
mov
or
rcrb
mov
ljmp
and
imul
test
cmp
insb
adc
push
jno
add
fldt
push
mov
pop
sbb
out
inc
pop
repz
adc
sbb
dec
aas
int3
std
mov
loop
push
cwtl
lock
inc
push
inc
pop
push
add
in
jge
dec
outsl
dec
sbb
xlat
sub
push
dec
add
stos
addps
lret
lods
outsl
push
jecxz
xor
mov
mov
mov
mov
jle
out
push
and
les
fwait
loop
shrl
scas
loop
or
popa
hlt
and
jb
cs
fs
rcr
jae
divb
mov
pop
in
mov
jl
push
cwtl
movsb
leave
xor
xchg
fmuls
add
pop
int
jge
sbb
notb
es
outsl
push
setnp
jp
xor
aaa
mov
adc
enter
xor
mov
sbb
xor
jg
or
xchg
add
mov
int3
rorl
cmp
inc
mov
lret
cmp
cmc
nop
cltd
or
fs
jp
and
pop
push
insl
mov
int
and
pop
repnz
test
adc
into
fstl
lods
shlb
jno
xor
out
fcom
sti
xchg
add
cmp
out
daa
cwtl
dec
adc
xchg
icebp
inc
inc
into
jecxz
add
push
shlb
icebp
jno
sub
sub
insb
xchg
cmc
xor
mov
xchg
enter
mov
pop
jp
jne
rcrl
sbb
lret
std
call
mov
adc
dec
das
mov
sbb
dec
jg
push
jle
mov
adc
mov
push
mov
pop
adcb
lods
xor
sbb
ret
mov
cmc
pop
mov
out
and
dec
jecxz
mov
imul
mov
sbb
mov
xchg
dec
xchg
sbb
xor
test
pop
mov
xor
xchg
mov
aad
movsb
or
daa
xchg
subl
adc
mov
lea
dec
jnp
cmp
es
ret
pop
jae
adc
int
jns
mov
nop
and
ret
jbe
mov
test
shlb
testb
push
xor
shrb
lret
loopne
shld
adc
les
push
mov
fwait
pop
test
adc
sbb
jb
fsubrs
js
mov
fidivrl
call
push
in
pop
cmp
or
outsb
pop
inc
clc
jge
pusha
jp
pop
je
pop
or
imul
or
mov
jg
jmp
pushf
mov
arpl
xchg
xor
or
pop
iret
in
icebp
inc
sbb
push
jae
cli
mov
lea
cmp
push
in
pop
sar
mov
pop
xchg
pop
sub
scas
xor
sbb
and
bound
jae
jns
add
inc
in
mov
loop
pop
ljmp
inc
add
incl
push
cmpsb
push
mov
lret
mov
sub
xchg
adc
inc
or
jp
xor
lock
adc
mov
jo
pop
das
add
icebp
repnz
mov
aam
insl
ficomps
mov
xorl
xchg
scas
stc
nop
sbb
sub
ljmp
jecxz
push
out
icebp
dec
push
adc
iret
xchg
jnp
mov
dec
inc
ficompl
shl
jb
out
and
pop
fimuls
test
jae
xchg
mov
das
and
orb
pop
aas
movsbl
cmpsb
daa
push
xor
xchg
test
in
sub
push
mov
cltd
repz
cmp
repz
xchg
out
mov
dec
mov
jnp
add
jno
mov
lods
sahf
repz
xor
jns
mov
pop
in
adcl
xchg
inc
cmp
repnz
jl
jae
inc
sub
stos
mov
in
jle
jo
testb
sub
idivb
mov
jmp
pop
lods
outsl
ret
stos
aaa
out
add
data16
jnp
cmp
in
test
sahf
icebp
psrlq
mov
lds
cmp
ss
push
cwtl
out
lds
repz
sub
jmp
dec
mov
test
xor
push
adc
jae
jne
xchg
cwtl
stos
inc
das
pop
jb
pop
mov
or
push
inc
mov
jnp
ja
test
inc
pop
shr
cmpsb
in
test
dec
mov
sbbb
dec
mov
popa
add
cltd
test
jne
aad
out
xchg
jno
xchg
sub
xor
sub
ret
and
push
sbb
xchg
les
or
outsl
iret
mov
mov
test
dec
mov
xor
aad
lock
pop
clc
push
mov
dec
decl
lods
cmpsl
inc
xchg
sub
push
dec
shl
push
lods
aaa
dec
std
jge
or
inc
fstl
sbb
lea
imulb
icebp
sub
add
jns
mov
arpl
inc
int3
or
fwait
rclb
cwtl
xlat
mov
push
xlat
std
push
pusha
sbb
mov
sub
dec
push
incb
dec
adcb
ja
cwtl
xchg
xchg
shrb
pop
mov
fdivrl
mov
insl
adc
ss
mov
inc
test
test
xor
push
lret
cmp
bound
rcl
cmp
shlb
mov
int3
xchg
gs
push
mov
addl
push
add
xchg
push
or
or
sbb
mov
sub
fcompl
sub
pop
movsb
cmp
testl
movsl
cmp
pop
cmp
loop
bound
out
leave
xor
push
out
push
push
adc
mov
pop
dec
mov
les
pop
or
jmp
stos
mov
pop
imulb
movsl
cmpsb
mov
enter
xchg
mov
dec
out
lods
loope
jne
sub
or
push
inc
mov
push
aad
jle
adc
test
mov
into
push
add
push
mov
dec
xor
nop
xchg
or
mov
and
jbe
xlat
and
mov
dec
xchg
push
jmp
lret
dec
jb
out
std
jo
bound
cwtl
or
lds
in
sub
rorl
xchg
or
dec
mov
dec
mov
mov
ss
sbb
dec
aaa
dec
pop
das
jmp
xor
dec
es
pop
push
scas
rcll
fcomp
data16
jae
fsubrs
outsl
test
xchg
cmc
cmp
and
leave
or
xchg
cli
pop
cmp
cli
ret
fimull
xor
hlt
jne
ficoml
push
add
or
xor
dec
add
mov
push
dec
mov
insl
ret
and
push
and
push
frstor
sub
out
pop
popa
mov
test
clc
push
lret
test
sbb
add
and
ret
jnp
or
pop
cmp
fstpt
lret
test
test
popa
pop
ljmp
lock
imulb
cmp
xor
andb
xchg
jle
xchg
push
xor
push
sahf
lods
je
notl
mov
in
mov
int3
aad
jae
sbb
int
mov
orl
cmp
push
ret
aad
mov
fmul
loopne
and
in
jge
ret
pop
mov
icebp
and
movsl
cltd
les
shl
mov
mov
push
or
mov
fidivrl
mov
cmc
stos
fldcw
cmp
jl
aam
add
cmp
mov
out
xchg
jl
mov
jmp
movsb
fists
jno
adc
push
rcrb
enter
std
jp
xchg
jb
jle
cmp
mov
shlb
push
pushf
enter
loop
sahf
inc
ss
push
cmp
lahf
xor
movsl
pop
shll
ljmp
rcrb
mov
cmpsl
jns
mov
dec
adc
sahf
pop
out
js
xchg
and
dec
scas
roll
jb
xlat
daa
mov
xor
or
inc
dec
movsb
inc
std
adc
lcall
lods
cmp
xchg
mov
clc
or
push
mov
sub
aaa
lret
mov
push
xchg
fnsave
inc
mov
xor
rcrb
out
lods
pushf
insb
ja
fdivrl
inc
jmp
aas
rorb
lods
cmp
dec
mov
stos
fstps
std
cmp
or
cmp
jne
test
enter
inc
sahf
les
jmp
pop
pushf
jmp
arpl
mov
movsb
inc
mov
xor
mov
mov
jg
xor
add
scas
xchg
jne
push
ss
sbb
dec
into
xchg
icebp
cs
daa
and
cmp
mov
hlt
dec
push
xor
popf
outsl
fidivrs
add
in
xchg
gs
aad
mov
loop
push
adc
sub
shlb
in
xor
jge
xchg
cltd
in
pushf
sarl
popa
imull
jno
int
fwait
xor
inc
mov
or
je
xchg
in
push
ret
ss
cmovle
aam
xor
xchg
rorl
es
and
jo
pop
orb
testb
insb
out
jge
sbb
add
int3
push
je
ret
cmp
adc
in
dec
lcall
leave
loope
ja
in
cwtl
fsubs
sub
pusha
cmp
inc
pop
scas
std
iret
pop
fidivl
adc
fisttps
cmp
das
daa
mulb
inc
sub
inc
xchg
cmpl
das
fstl
push
xor
gs
fisubrs
pop
sbb
xchg
and
mov
jge
fsubs
pop
sahf
cmp
fsubp
adc
mov
aad
cmp
push
rcll
and
add
jl
out
fmuls
test
mov
jle
and
push
inc
repnz
jp
jmp
xlat
imul
rcr
jb
ficomps
ds
push
scas
xchg
cli
std
add
shl
lahf
lcall
mov
push
xlat
sbb
sti
cmp
imul
inc
jne
inc
dec
fdivl
jecxz
cmova
or
fsubrs
xchg
adc
push
mov
fnstsw
or
mov
rcl
call
sub
into
jae
adc
jl
pop
js
mov
mov
push
xor
mov
leave
sub
sahf
ret
push
fwait
mov
xor
xor
test
out
pop
sbb
filds
and
xchg
out
les
scas
test
fistpl
repnz
cmp
inc
clc
push
shlb
xor
ljmp
outsb
dec
push
inc
fistl
push
out
mov
mov
or
fnstcw
pop
mov
lahf
sub
je
push
jbe
xchg
into
jp
iret
xor
in
pop
mov
add
push
sub
negb
mov
mov
fcmovnu
int
jb
dec
in
popfw
call
cmp
outsl
add
sbb
inc
call
repnz
push
outsb
mov
and
movsl
arpl
fbld
dec
adc
ss
jbe
mov
imull
adc
cltd
andl
roll
btr
xor
sbb
shrb
jb
aam
in
imul
push
push
xchg
daa
jmp
and
pop
mov
inc
or
pop
in
divl
and
push
imul
dec
cmpl
or
in
jl
pop
outsb
or
push
mov
gs
ja
inc
lds
xor
sbb
pop
sub
inc
divl
or
mov
shrb
jmp
mov
sbb
inc
pop
gs
fnstenv
xchg
fs
jbe
test
or
imul
push
jmp
adc
xchg
or
mov
inc
sbb
xchg
xchg
loopne
jg
movsb
into
mov
xchg
pop
xor
out
sbb
aad
pop
xor
sub
inc
dec
scas
je
and
jmp
mov
cwtl
stos
loop
faddl
or
dec
push
sub
in
insb
pop
jecxz
bound
mov
fucomi
in
mov
sub
iret
fstp
pop
mov
mov
push
test
rclb
adc
xchg
ss
or
add
testb
mov
and
xor
in
push
inc
mov
dec
popf
xor
mov
stos
sub
ret
pop
or
inc
jle,pt
roll
pop
hlt
push
cmp
fisubl
mov
stc
xchg
dec
sbbl
fmul
or
add
mov
jnp
imul
push
inc
stos
in
and
jo
aas
pop
add
dec
mov
or
mov
add
imul
outsb
sbb
mov
fisubrl
adc
out
sti
pop
xor
ror
aaa
pop
rol
fsubr
mov
repnz
insl
inc
fcompl
jg
or
mov
nop
pop
or
dec
jecxz
mov
push
ja
add
mov
and
dec
out
fnsave
jbe
cmpsl
dec
mov
leave
test
add
inc
mov
cmc
or
adc
and
xchg
sbb
je
cli
shr
aam
out
pop
scas
sub
repz
ljmp
and
mov
pushf
xor
add
jl
inc
mov
xchg
sub
out
jb
mov
xor
inc
jl
lods
mov
dec
cwtl
cli
ds
ss
jo
in
ja
push
dec
mov
jle
aaa
jg
addl
xor
in
jb
scas
mov
daa
pop
jmp
xchg
cmovg
repz
loope,pt
mov
jmp
xchg
mov
dec
push
cli
fs
enter
xorl
or
in
push
or
sub
iret
mov
dec
inc
arpl
mov
inc
movsb
xor
movsl
and
cmp
sub
push
pop
push
sbb
sub
pop
repz
stos
sbb
nop
idiv
dec
in
lahf
cmp
shrb
lods
jge
pop
bndstx
lock
data16
xchg
lods
xchg
dec
mov
rolb
mov
daa
mov
pop
sahf
xlat
rcr
pop
jge
lods
cltd
arpl
fsubrl
xor
sbb
fistpll
js
xor
mov
mov
fdivrp
cwtl
push
pop
aaa
int3
out
push
out
mov
into
fdivrl
sbb
aas
xchg
out
xchg
mov
dec
pop
inc
clc
imul
into
popf
xor
push
or
xor
repnz
dec
jns
mov
insl
mov
cmp
push
sbb
jl
fcomi
mov
test
xchg
sub
or
testl
sbb
mov
mov
out
push
outsl
add
lock
mov
jmp
sbb
add
cmp
mov
mov
cmp
inc
xchg
sub
stos
pop
mov
dec
leave
push
testb
outsl
jnp
lds
bnd
cmp
xchg
jns
fcomps
sub
in
jmp
or
lret
xchg
push
std
lret
rcr
loopne
push
pusha
jae
mov
clc
mov
xchg
rolb
jbe
cmc
mov
lahf
adc
rcr
inc
in
ljmp
mov
stos
and
fstps
js
xchg
aam
pop
or
pop
mov
adc
mov
inc
dec
mov
pop
and
dec
test
add
fidivs
mov
mov
adc
sahf
xchg
dec
mov
jb
cwtl
sub
iret
insl
std
movsb
push
loop
sbb
xchg
mov
push
pop
psubsw
mov
jnp
push
movsl
push
shll
sar
sub
xor
add
in
mov
mov
mov
pop
mov
js
out
fdivs
fcoms
scas
dec
jp
xchg
ljmp
mov
dec
lret
push
jecxz
inc
cli
outsb
cmp
outsl
addl
inc
call
cltd
rorb
sbb
aas
xchg
xchg
adc
push
addl
gs
inc
inc
into
in
repnz
jmp
into
imul
leave
int
mov
sub
shll
jbe
sub
adc
mov
dec
fisttps
test
aaa
dec
daa
adc
sub
call
imulb
notb
shll
xchg
sbb
dec
outsb
xor
fsubr
adc
stc
cmp
gs
es
xchg
lea
mov
push
fsubl
dec
push
sbb
mov
imul
inc
cs
sarb
jns
rolb
add
pusha
cmp
mov
gs
int3
mov
inc
pop
lods
leave
fistl
int3
lret
xchg
add
inc
xchg
and
es
mov
or
rclb
push
inc
cltd
fldt
call
je
add
pop
jecxz,pn
test
cmp
insb
cmp
lds
loope
inc
push
nop
loop
test
sub
inc
inc
xchg
in
rclb
xor
bound
jg
jns
sbb
and
jp
inc
fs
in
push
push
mov
ret
fldl
divl
icebp
or
sub
xchg
mov
sbb
insb
loope
sahf
add
push
dec
and
mov
out
movsb
arpl
loop
clc
xchg
repnz
mov
push
shlb
push
lods
xchg
sti
nop
je
lret
aas
loop
and
mov
mov
jg
pop
mov
mov
sub
and
popf
dec
and
xchg
pop
xor
adc
mov
lds
in
psrlq
jg
dec
jecxz
jle
hlt
xchg
sbb
adc
out
das
xor
or
cmp
push
pushf
dec
ljmp
cmc
lahf
fidivl
push
adc
in
mov
inc
scas
pushf
adc
pop
fildll
cmp
jecxz
es
adc
std
popa
gs
scas
xchg
mov
inc
iret
inc
and
gs
inc
in
and
fldl
push
add
pop
xor
inc
test
add
cld
xchg
xchg
cmpsl
das
cwtl
and
mov
and
iret
dec
outsb
dec
pop
xchg
pop
push
xor
insb
xchg
sub
jae
and
dec
mov
dec
scas
mov
xorl
in
mov
sarl
test
mov
mov
xor
mov
push
jnp
ret
add
fstl
xchg
cmpsl
out
add
inc
insl
mov
pop
mov
test
mov
lea
mov
outsl
mov
scas
jno
test
mov
insb
or
xor
mov
xchg
or
insb
loop
scas
ret
jns
lahf
mov
or
xor
pop
rol
mov
repnz
dec
clc
adc
adc
or
movsb
xchg
jl
ficomps
loope
icebp
ds
test
lret
or
dec
add
pop
jns
aaa
lea
inc
dec
lea
cwtl
ret
sbb
or
add
les
mov
adc
fdiv
mov
dec
push
xorl
or
and
lods
mov
stc
cmp
sbb
mov
inc
cmp
mov
jp
cli
lock
mov
jge
jno
add
andl
das
and
ficoms
mov
mov
or
aam
add
dec
decl
and
nop
fdiv
mov
lods
idivb
add
shll
fs
mov
aam
in
mov
cmp
xchg
loop
jb
mov
call
mov
or
cmp
pop
add
xchg
int3
scas
fnstsw
mov
stc
and
pusha
cmp
nop
lods
pop
push
outsl
mov
push
pop
ret
jno
cld
cmp
dec
lods
int
inc
ret
inc
cmp
pop
fwait
mov
pushl
sub
sbb
ss
jno
jae
notl
jb
fsubr
stos
sub
mov
xorl
adc
shll
out
jl
pop
fmuls
arpl
jg
xor
ret
cli
add
shll
cmp
push
mulb
xor
add
negb
cmp
push
xor
test
jl
push
push
ret
punpcklwd
sub
push
outsb
loope
xchg
pop
ficoml
test
test
adc
fmul
or
pop
cmp
loop
and
jo
inc
les
test
mov
cmp
adc
out
mov
mov
test
stos
sub
fs
add
adc
cmp
jns
dec
inc
mov
mov
fisubl
stos
inc
cltd
inc
push
cltd
inc
in
cltd
test
mov
addl
jns
stos
lds
cld
mov
jno
sbb
push
adc
jbe
xchg
in
xchg
enter
inc
sub
bound
cmp
xorl
popa
cmp
dec
sub
pushf
push
insl
xchg
pop
adc
cli
and
addr16
lods
jb
fnsave
loopne
pop
lock
cmp
add
leave
push
cmc
mov
cli
and
enter
xchg
movsl
pop
repnz
in
aad
jo
hlt
insl
stc
dec
dec
repz
jae
pop
sub
jns
std
aas
pop
xchg
and
or
pop
test
sbb
adc
jns
cmpsl
jmp
test
sti
jo
cltd
mov
ds
shrl
push
rcll
xor
scas
xchg
pop
movsb
dec
fsub
test
out
out
dec
cltd
loop
mov
xor
jbe
jg
in
imul
fstpt
stc
inc
or
adc
adc
test
lods
pop
mov
jb
mov
addr16
movsb
cmp
sub
mov
xchg
popa
stc
out
push
mov
dec
in
pushf
and
or
cmp
sub
mov
enter
aaa
sarb
pop
fwait
loope
push
adc
dec
int3
fdivl
jmp
cli
xchg
sbb
dec
aaa
call
push
shr
cmp
mov
xchg
cmp
ss
arpl
add
jns
xor
leave
es
stc
movsl
mov
je
test
mov
insl
outsb
add
sarl
mov
int
cmp
mov
mov
fnsave
xor
mov
xchg
incl
enter
stos
jbe
mov
push
jo
push
xchg
sub
shl
adc
sub
insb
shlb
sub
gs
jnp
cmp
into
imul
in
ss
aas
xchg
mov
inc
fcmovbe
add
imulb
inc
add
and
add
inc
in
test
push
mov
dec
out
xor
pop
mov
and
idivb
mov
les
add
jg
mov
push
dec
mov
int
cmp
gs
jmp
and
loopne
cltd
sbb
pop
or
fdivrl
icebp
test
popf
ja
iret
test
out
das
jno
pusha
and
xchg
or
sbb
clc
dec
subl
test
xchg
jle
and
sbb
and
popa
stos
inc
inc
mov
sub
in
or
xchg
xchg
lahf
into
iret
shlb
adc
pop
cmova
lods
cmp
mov
mov
lea
adc
popa
cmpsl
mov
test
fsubs
xchg
sbb
stos
enter
cmp
sub
cmp
cli
fstpt
fisttpl
lods
leave
scas
sbb
fcompl
mov
sub
sbb
mov
xchg
sbb
data16
gs
fsubrl
push
xlat
push
fsubs
adc
mov
js
add
or
dec
and
cmpsb
les
int3
lock
sbb
push
dec
inc
dec
mov
roll
mov
int
fucomi
mov
and
cld
mov
xlat
out
jle
inc
fidivl
arpl
sub
pop
subl
pop
data16
xchg
jns
lods
test
inc
test
ja
mov
jecxz
movsb
aaa
clc
mov
push
das
movb
sbb
mov
sbb
cmpsb
add
rol
lret
cld
dec
repnz
call
pop
notb
call
dec
inc
inc
push
cmp
lcall
inc
clc
aaa
out
add
fimull
fnstcw
and
sahf
pop
rcll
pop
movsl
insl
adc
jp
loope
inc
mov
or
jo
aad
push
jmp
jnp
arpl
imul
cmpsb
in
sti
dec
in
imul
xchg
adc
addb
sbb
push
push
nop
xchg
push
fadds
insb
leave
sbb
push
out
insl
sub
ljmp
xor
add
ds
sub
lea
sub
stos
out
xor
add
mov
js
mov
adc
sbb
into
mov
xor
out
incl
std
xchg
outsb
mov
outsb
pop
inc
sbb
jns
sbb
push
mov
and
cmp
push
pusha
sahf
pop
cmp
mov
call
test
push
jmp
stc
jbe
movsl
sub
cmp
jb
dec
addr16
jle
sub
pop
cmp
cs
xchg
adc
dec
and
sbb
sub
test
sarl
icebp
shll
fidivs
aad
aad
and
mov
dec
adc
mov
fisttpl
arpl
fdiv
mov
sarl
jecxz
cmpl
ds
dec
mov
cmp
dec
push
jl
cmpsb
lcall
popa
cli
lret
cmpsb
lock
scas
add
std
pop
sbb
int3
mov
arpl
cmp
lret
mov
icebp
mov
inc
push
ror
cli
pop
scas
data16
sbb
lcall
push
xlat
pop
mov
insb
cmp
or
push
push
out
jle
loope
notb
xlat
or
lds
and
sub
pushf
lods
jl
test
imul
scas
in
nop
push
adc
push
popa
or
sub
xorl
stos
and
add
xor
or
iret
js
arpl
add
adc
popa
data16
and
ds
test
mov
psllw
mov
xorb
aad
inc
test
lret
push
dec
loope
lahf
imul
je,pt
xchg
ja
dec
push
cmp
orb
popf
lods
cli
mov
mov
into
push
stc
es
scas
lds
pop
adc
arpl
jp
jg
fs
push
stos
xlat
int
lret
jecxz
ficomps
xrelease
sub
pop
sub
jecxz
mov
and
lock
push
insl
lea
test
in
hlt
xchg
xchg
pop
cmc
addb
daa
outsl
push
or
mov
mov
rcl
cmp
push
pop
scas
int3
arpl
stc
push
in
dec
outsl
sarl
lods
inc
cli
adc
adcb
sbb
ljmp
ficoml
shlb
inc
cli
popa
rcrl
pop
jge
mov
cmp
xchg
ja
push
test
xchg
dec
loopne
xor
sbb
mov
lret
inc
xor
push
fmull
cmp
in
add
pop
jae
lahf
sahf
or
and
scas
jne
rcrl
push
sub
ja
inc
mov
pop
or
mov
push
xor
bound
mov
inc
test
ret
stos
jmp
inc
out
subl
aam
lahf
repnz
cmc
sbb
fs
or
push
movsb
cmp
xchg
ret
xchg
jne
scas
std
pop
insb
das
rcll
inc
xchg
xor
xor
lds
mov
xor
pop
stos
nop
mov
adc
jecxz
stc
pop
fidivs
clc
push
sub
dec
jb
ja
les
ss
std
call
lds
inc
xor
dec
sbb
push
int3
scas
push
xlat
or
popf
xor
jo
add
mov
jns
fisubs
adc
pop
rcrl
xchg
outsb
lds
fs
aad
dec
es
mov
and
je
xchg
sub
jmp
xchg
fistl
dec
outsb
loop
mov
decl
lock
and
pop
movsl
mov
sbb
add
push
sbb
adc
dec
movsl
dec
add
push
test
and
adc
ret
outsb
shll
push
inc
rcrl
insl
mov
xchg
fucomip
iret
loopne
sbb
pusha
xor
push
loop
ret
rcl
rcrb
dec
sarb
pcmpgtb
pusha
ret
ficoms
add
push
jb
decl
xchg
aas
mov
hlt
xor
ds
out
testl
lahf
add
jae
sti
lods
test
dec
mov
js
rcrb
push
ds
cmp
add
dec
aas
xor
mov
fucomp
les
cmp
aas
imul
nop
dec
cmp
xor
lods
pop
jns
shrb
adc
fdivrl
sbb
pop
sbb
stos
xor
insl
outsb
jl
mov
dec
mov
adc
push
pop
xchg
dec
push
test
push
xlat
inc
adc
bound
rol
pushl
arpl
inc
aas
dec
add
push
cltd
stos
cmc
sub
push
fnstenv
fisubs
pop
shlb
jo
lods
ja
test
push
push
jg
jnp
mov
add
mov
pop
std
cli
test
in
fstpl
into
aam
in
lods
mov
sbbl
je
scas
addl
scas
or
faddp
decb
sub
dec
push
jmp
mov
aad
addl
andl
xor
out
out
mov
ss
push
jg
sbb
add
enter
lods
insl
xor
out
pop
cmp
inc
les
loop
test
xchg
popl
fmuls
push
inc
mov
test
sbb
clc
xchg
jns
mov
cmp
aaa
push
adc
jge
push
xor
jae
mov
out
cli
xchg
bound
sbb
adc
ss
and
jle
jge
add
fs
sub
arpl
xchg
sbb
jne
fidivrl
inc
lret
leave
add
mov
andl
mov
and
xor
push
sbb
sub
jle
pop
loopne
dec
or
int3
pop
sub
int3
cmp
shrl
in
dec
pop
aaa
hlt
push
es
dec
cmp
mov
pop
shlb
jp
or
lcall
push
insl
inc
pop
xor
mov
movl
hlt
jbe
stos
add
cmp
inc
xor
xlat
dec
lret
jns
pop
hlt
sahf
fs
fistl
adc
mov
cmp
ret
addb
or
xchg
sub
mov
jmp
cli
pop
jbe
rcrl
rcr
push
mov
movsl
fisubrl
test
and
je
cs
adc
idivb
lock
mov
and
test
push
lcall
and
adc
rcll
imulb
push
adc
shll
lds
push
ljmp
orl
lods
rorl
mov
add
mov
or
cmp
scas
dec
fadds
sub
mov
mov
lds
sbb
xchg
into
jecxz
add
sbb
adc
mov
sub
mov
shl
xchg
and
in
or
mov
das
inc
test
shrl
xor
scas
pop
mov
mov
call
cli
dec
pop
es
adc
shl
out
mov
ljmp
test
and
push
fildl
fs
mov
xor
movsb
movsl
add
push
or
in
xor
add
fcoms
xlat
gs
jb
sbb
inc
jmp
sub
cmp
dec
pop
repz
dec
and
shlb
int
ret
mov
out
cmp
xor
pop
jo
loopne
push
or
xchg
ja
mov
aas
push
into
adc
sub
add
movsl
push
test
add
popa
rclb
je
int3
cmpb
in
aas
mov
xchg
sbb
test
jl
adc
push
ja
daa
js
je
dec
inc
pop
call
in
lods
mov
xor
sbb
mov
cmpl
sub
jecxz
cmp
iret
pusha
mov
fsubp
mov
push
inc
ss
inc
xor
andb
mov
popf
imul
pop
sahf
addr16
cltd
leave
in
loop
fdivrp
dec
dec
test
imul
repz
jmp
mov
pusha
adc
adc
das
lods
inc
ja
and
or
cvtdq2ps
adc
jl
pop
in
xchg
sahf
push
dec
or
jne
outsl
sbb
jne
nop
push
sub
mov
jno
push
aaa
sbb
mov
sarl
notb
ficompl
adcb
ret
and
leave
lods
cmp
push
xor
push
dec
mov
or
jno
and
loope
sbb
mov
jl
in
rcrl
clc
loop
out
inc
mov
pop
inc
and
in
popf
jmp
addr16
push
jo
fldt
popf
cld
mov
scas
inc
gs
aas
int3
fnsave
dec
orl
dec
out
mov
cld
cmpsl
push
dec
shrl
roll
pop
cmp
dec
fs
out
and
sub
stc
cs
adc
push
adc
movsl
mov
xor
dec
popa
dec
repz
cmp
and
pusha
add
lret
pop
pop
insl
leave
push
jns
pusha
pop
mov
pusha
aad
ret
mov
rol
xchg
sub
lds
or
das
icebp
lret
notb
lea
xchg
out
pop
rep
inc
adcl
add
aad
or
pop
inc
mov
cmc
test
in
inc
fwait
addr16
icebp
pop
pop
scas
add
jmp
std
bound
out
pop
std
pop
sbb
setle
in
xor
inc
rorb
lret
or
jle
push
cmp
push
cmp
test
xchg
mov
mov
jge
shl
dec
xchg
shr
mov
mov
out
mov
fistl
or
jns
adc
orl
cmc
shll
stos
and
jb
pusha
test
iret
or
sbb
xchg
mov
popf
or
dec
pop
and
mov
cmp
sub
aaa
jnp
cwtl
in
shl
sbb
clc
sbb
xor
rorl
mov
ret
cld
arpl
xor
enter
je
jecxz
hlt
insl
xrelease
test
insl
enter
subl
pop
insb
push
test
mov
les
popl
cmp
mov
dec
push
lods
mov
loop
movsb
mov
pop
mov
fnstsw
mov
sti
pop
inc
lea
mov
sub
push
in
sub
inc
bound
xorl
daa
movsl
sub
adc
jo
ja
dec
and
cmp
outsb
lods
out
add
imull
hlt
mov
adcb
mov
and
add
out
dec
outsb
test
lcall
int
jbe
inc
inc
fsubs
mov
dec
mov
jmp
sarb
adc
add
mov
test
inc
or
fwait
adc
pop
sbb
subl
xchg
cmp
jmp
repz
jg
adc
jecxz
lods
cmp
addr16
ret
xlat
sbb
mov
test
and
dec
data16
jmp
das
addr16
or
repnz
push
lahf
mov
popa
sub
mov
cmp
pop
cld
mov
jo
fldenv
xchg
or
shll
popf
xchg
les
out
add
sbb
add
mov
mov
fisubrl
and
shl
mov
stos
movsb
push
ret
pusha
sbb
push
jae
xorl
mov
mov
mov
int3
sbbb
aad
push
repnz
insb
jne
mov
leave
and
and
mov
sahf
and
xchg
pop
arpl
push
xor
push
rcll
popf
and
int
addr16
fsubr
lea
jge
dec
shrb
sbb
xor
dec
pop
add
sub
jno
adc
push
lock
or
and
and
xchg
sub
cmp
add
push
or
cld
and
fwait
daa
cltd
int
dec
push
push
insl
push
daa
xor
or
sbbl
test
ss
jne
popa
mov
adc
add
push
andl
and
int
pop
lret
mov
arpl
adc
pop
into
push
mov
imulb
cwtl
fiaddl
pop
shr
lret
mov
sarb
add
xchg
cmp
xor
rorb
call
inc
push
stos
call
xor
scas
lods
sbb
int
mov
nop
or
mov
mov
and
xchg
push
jmp
mov
xor
jnp
sbb
ds
pushf
mov
aam
xchg
sub
cmp
int3
pop
xor
dec
jl
inc
push
mov
fsubrs
faddp
sub
xchg
or
sub
and
or
decb
out
adc
ss
jg
or
xchg
fsubrp
idivb
mov
lods
jmp
jmp
into
xchg
sbb
jecxz
shrb
sub
out
add
lea
shlb
dec
mov
cmpsl
ds
adc
push
leave
movb
nop
xor
lahf
push
jno
pop
lret
imul
pushf
jmp
bound
jnp
cmp
jbe
rsqrtps
dec
in
in
enter
jmp
pop
popf
sbb
ficoms
mov
loopne
and
fmul
addr16
test
sub
mov
mov
or
cwtl
std
mov
push
mov
jae
and
lcall
mov
adc
outsb
ds
mov
mov
xchg
cmp
xchg
popf
test
or
ret
adc
mov
jle
xor
out
push
inc
inc
lock
in
ret
lods
pop
add
test
fcomps
dec
add
out
popf
push
xchg
cmp
xchg
push
cmp
inc
push
pop
outsb
cmp
sub
je
stos
xchg
faddl
push
mov
mov
inc
js
xchg
lcall
sub
lcall
jo
out
inc
sbb
or
cli
jecxz
and
cli
push
sub
cmp
imul
pop
cmp
gs
cli
pop
push
jne
gs
scas
push
and
cmp
add
fidivl
scas
sub
pop
cmc
fsubrs
jb
aam
or
xchg
outsb
or
insl
or
mov
sarl
rcll
test
loop
hlt
lods
xor
mov
cltd
cmp
inc
fcoms
xor
ret
push
pushf
gs
sbb
ja
mov
or
sub
inc
sub
push
xchg
repnz
xchg
mov
dec
add
jae
jo
mov
mov
into
mov
mov
push
popa
mov
jne
sub
xchg
adc
jmp
lea
dec
cmc
outsb
jae,pt
sub
fmull
or
rorl
cs
xlat
popa
adc
iret
or
pop
scas
loope
ljmp
cmp
inc
or
cltd
test
dec
sub
sbb
mov
xlat
in
pop
int
mov
cmp
pop
vpackuswb
hlt
xor
inc
jl
pop
sub
adc
push
rclb
fsts
decl
cmpsl
push
adc
and
or
jb
mov
xchg
pop
or
popf
pop
cwtl
dec
movsb
sti
sti
mov
dec
in
sbb
repz
aad
cs
out
mov
adc
stc
nop
mov
adc
adc
cmp
cmp
iret
or
fisubrs
fcmovnb
inc
call
push
jae
xchg
rcrl
scas
rdtsc
lret
icebp
and
or
add
jae
in
rcrb
xchg
outsb
les
mov
jns
jbe
xor
mov
and
xchg
fdivrs
jmp
mov
sub
jae
lock
adc
ja
sbbl
aas
sub
lods
or
out
pextrw
scas
xchg
in
push
call
fisttpl
lahf
repnz
push
test
andb
inc
sbb
jle
mov
push
push
add
stos
xchg
jns
jl
icebp
fmuls
push
das
mov
pushf
mov
pusha
dec
pop
pop
in
stc
jae
movsb
sub
int3
jae
roll
inc
out
dec
sbb
in
mov
fldcw
pop
outsb
lahf
jle
jge
imul
dec
sbb
sub
add
add
push
mov
mov
push
and
mov
and
pop
outsb
jp
adc
mov
mov
pop
stos
cs
imul
enter
iret
out
lret
pop
push
cmp
mov
add
lahf
insb
sub
pop
sbb
fsubrs
loope
jg
fdiv
fs
stos
inc
dec
clc
sti
daa
push
sub
outsb
inc
pop
call
push
test
std
xchg
add
icebp
mov
pop
adc
int3
jmp
sub
jle
pushf
daa
adc
cmc
push
ljmp
notb
popf
cld
in
cmpb
mov
in
xchg
fxch
mov
xchg
sbb
js
lods
enter
test
add
sub
sbbb
and
cld
jne
shll
fsubrp
adc
cmp
mov
mov
or
stos
in
inc
fildll
xor
mov
jmp
inc
xchg
push
cltd
cmpsl
xchg
push
test
xchg
dec
or
arpl
mov
rorb
in
and
repnz
and
adc
adc
or
ljmp
popf
jg
pop
bound
jp,pt
enter
dec
out
leave
mov
pop
ja
mov
aam
jo
dec
leave
jp
sub
and
or
inc
clc
das
mov
lahf
jp
pop
jmp
pushf
out
into
mov
addr16
add
inc
mov
fsubrp
fs
fs
int3
arpl
or
fnsave
ljmp
or
loop
mov
mov
add
out
and
jl
or
and
aaa
shl
mov
mov
aad
xchg
fsubl
movsl
jo
scas
das
cli
push
or
shrl
add
lret
in
cmpsb
mov
inc
ljmp
pusha
lret
cmpsl
push
int
daa
movsl
jbe
mov
adc
roll
push
cmc
xor
inc
inc
aaa
push
add
daa
jl
jecxz
imul
adc
fwait
outsb
sbb
mov
cmp
inc
add
dec
cmp
pop
push
xchg
mov
ret
adc
xor
jns
int3
mov
adc
sti
dec
or
or
mov
xchg
fcmovne
aam
imul
and
adc
push
loop
fcomps
lret
jnp
adc
shlb
jecxz
push
jb
xlat
xor
mov
mov
rep
mov
hlt
jecxz
sti
push
sub
popf
jo
out
jle
pushf
or
jg
stc
shr
sub
cmc
xchg
aad
lcall
push
test
xchg
dec
and
adc
lods
pusha
call
and
sub
push
fsts
bound
imul
lret
mov
adc
add
pop
repz
aam
fcomip
test
in
adc
adcl
or
jecxz
or
int
push
lret
scas
negl
xchg
mov
rorl
inc
stos
aad
sub
movsb
mov
enter
mov
xor
adc
icebp
cs
stos
push
outsb
jno
xchg
pop
sbb
or
jg
les
inc
cs
loope
push
pop
push
jl
jg
fwait
les
insl
das
sahf
and
pop
xchg
cmp
cwtl
xor
addr16
push
inc
mov
shlb
xchg
push
mov
mov
hlt
inc
inc
push
cwtl
jnp
inc
js
iret
push
mov
fcoml
insl
cmp
jnp
aad
jno
loop
pop
cmpsl
push
mov
sub
or
lahf
loopne
aaa
push
cltd
fcomip
lds
xchg
and
mov
sbb
out
mov
xor
push
je
popa
icebp
mov
inc
cmp
jae
pop
cwtl
xchg
mov
mov
xchg
pop
int
xor
arpl
push
inc
test
mov
ds
mov
pop
dec
fisttps
jmp
fisubrl
cmp
mov
int
mov
sub
push
aas
xorb
mov
fcomp
add
lods
mov
jae
push
popf
int
xor
inc
popa
and
rcr
sub
sbb
imul
aaa
outsb
lds
vmulps
dec
jecxz
test
ljmp
jb
in
xor
or
sar
mov
mov
pop
and
adc
mov
bound
lret
lahf
mov
jle
sbb
inc
push
repz
imul
adc
fucomi
and
sbbb
push
jmp
push
lcall
scas
xor
nop
lods
mov
dec
push
repz
sub
test
int3
adc
push
iret
and
ficoml
mov
jbe
push
and
push
divl
mov
ds
mov
loope
sbb
dec
push
jbe
sub
sbb
sarl
cltd
andl
lcall
stos
xor
xchg
or
mov
add
mov
push
int
outsl
mov
mov
nop
inc
and
rcl
jmp
mov
jnp
ss
lret
or
mov
dec
pushf
mov
and
int
sub
push
xor
pop
out
loop
xchg
add
icebp
xchg
insl
mov
mov
out
adc
call
mov
sbb
sbb
lods
sbb
dec
dec
sbb
mov
jne
popa
sbb
fsubl
das
icebp
rolb
sub
dec
arpl
ja
xchg
cld
add
imul
popa
getsec
lods
mov
lea
stos
push
xchg
mov
shrb
loopne
xchg
adc
adc
add
cmpb
imul
cltd
mov
pushf
mov
pop
cli
mov
movsb
imul
sti
leave
sbb
leave
mov
inc
mov
mov
adc
push
jns
mov
inc
lahf
mov
in
pushl
scas
or
ds
mov
cmp
adc
or
sub
fnstcw
fistpl
xor
idivb
mov
testl
je
iret
loope
xchg
mov
cmp
sbb
sbb
call
fs
xlat
jmp
dec
xchg
das
inc
dec
imul
xor
mov
jne
stos
ja
nop
mov
and
push
xchg
pop
js
mov
enter
popa
ret
in
dec
jnp
jns
loope
aad
arpl
ret
dec
add
aad
inc
mov
mov
es
push
xchg
mov
test
mov
inc
pop
das
movsb
shlb
inc
dec
in
das
out
cmp
mov
push
xor
pushf
and
iret
and
sub
stc
bound
or
data16
xchg
sbb
jnp
pop
mov
push
mov
sub
cmp
fisubrl
aad
push
movsl
jg
fwait
aam
adc
push
and
dec
lock
xchg
loope
popf
aaa
ret
sbb
in
xor
cmp
data16
adcb
push
add
pop
mov
hlt
push
cmp
pusha
push
inc
mov
scas
pop
stos
and
xchg
or
adc
jle
popf
xor
out
ja
lds
lcall
sbb
push
loop
sub
scas
fildl
jb
fiadds
pop
repz
push
in
or
dec
add
mov
xchg
popf
ss
outsb
rorl
in
adc
inc
mov
adcl
repnz
es
sub
inc
push
inc
out
dec
scas
test
ret
fsub
cmp
call
jmp
outsl
lret
das
mov
insl
adc
ds
jg
add
add
repnz
xchg
dec
cmp
mov
gs
enter
enter
sub
stos
in
pop
xor
pcmpgtd
pusha
ret
faddp
stos
andl
dec
arpl
ds
daa
lock
and
xchg
stos
ds
push
push
cmc
imul
popf
push
imul
fmull
push
lret
inc
insb
shlb
pushf
aas
lret
lods
loopne
adcl
test
adc
cmc
inc
inc
or
add
mov
add
xchg
sbb
cs
push
jp
je
add
mov
dec
and
scas
cmp
cs
mov
dec
dec
loop
sarb
pop
push
scas
xor
jne
jne
pop
jl
sub
sub
fisubl
push
movsb
cld
lea
push
popa
repz
adc
sti
push
inc
pushf
arpl
jae
xchg
pop
lds
and
stos
sbb
scas
mov
mov
fisttpl
loop
push
push
and
repz
in
sub
enter
and
cmp
mov
or
repnz
int3
fwait
adc
mov
push
icebp
nop
push
cmp
stc
stc
inc
testb
jae
pop
es
repz
sub
dec
mulb
rcrl
es
mov
pushf
loopne
mov
lods
pop
mov
movsl
std
push
test
push
xchg
sub
ret
xor
mov
dec
adc
xor
fwait
pop
dec
int
mov
cmc
mov
and
insl
xor
ss
lods
les
aad
dec
pusha
aad
shr
clc
pop
mov
and
sub
dec
lea
ss
gs
or
and
pop
test
fcmovbe
adc
loopne
cmc
mov
cmpsl
lret
sub
call
pop
loopne
sub
cmc
rol
adc
repnz
inc
call
mov
cmpsb
ja
stos
mov
and
add
xor
mov
sub
stos
mov
mov
and
inc
mov
pop
repz
mov
jae
jmp
inc
dec
xor
ret
jnp
out
push
out
out
cmpsb
inc
cld
mov
dec
add
addl
push
in
rep
in
sti
fcoml
loope
xchg
or
popf
and
xor
insl
loopne
fiaddl
rol
sub
fwait
jmp
mov
test
iret
lret
sbb
adc
shlb
adc
stos
enter
fwait
lods
sti
inc
fcmovnb
add
cli
rcl
imul
and
lret
sti
loop
dec
dec
daa
idivl
dec
push
or
flds
lea
notb
iret
jne
sub
icebp
xor
adc
xlat
mov
xchg
mov
jg
push
popf
mov
xchg
sbb
out
xchg
dec
fdiv
shrl
lods
lods
icebp
adc
mov
out
cmp
xchg
adc
add
nop
addr16
lret
push
and
popa
push
leave
mov
jno
cld
outsl
rclb
and
std
xor
xor
lods
mov
dec
jp
jge
sbb
in
fistpl
rolb
mov
test
movsb
jecxz
into
lds
sbb
mov
pop
jmp
add
adc
fmuls
mov
push
mov
aad
inc
and
sbb
enter
clc
shrl
pusha
cmp
sub
lea
je
pop
outsl
cltd
xchg
stos
inc
adc
push
and
enter
xchg
dec
fs
hlt
push
jne
clc
call
mov
aad
add
dec
pop
insb
std
jne
addr16
mov
add
pop
popl
sub
fiadds
cltd
lret
xor
adc
push
into
mov
xor
jns
add
jp
mov
push
shll
xor
sub
out
push
loope
fs
int3
jecxz
jl
adc
push
and
push
fdivl
mov
mov
mov
add
fdiv
pop
mov
popa
mov
in
inc
orl
xchg
fnstsw
push
js
push
sub
cmc
loope
int
sub
mov
or
xchg
sbb
call
pusha
cmp
scas
push
sub
push
pop
push
pushf
xor
lds
gs
push
arpl
iret
or
iret
loope
movsb
mov
jmp
sahf
cmp
lock
jb
add
test
and
xor
mov
mov
xchg
mov
mov
pop
aaa
jne
clc
push
adc
rcrb
inc
dec
mov
pusha
sub
mov
pusha
jne
mov
push
pusha
inc
fiadds
add
test
pop
insl
pop
cmpsb
mov
xchg
daa
psllq
nop
std
loopne
jnp
lcall
xchg
mov
inc
mov
ja
xchg
repnz
push
out
push
xchg
and
inc
pop
mov
adc
in
sbb
ret
adc
push
jno
mov
addb
fistpl
push
push
sbb
in
jns
pop
dec
dec
scas
divb
sbb
mov
jnp
nop
sbb
nop
push
push
jmp
dec
fcmovnbe
stos
adc
cmp
inc
ja
aad
xor
push
jbe
test
fdivrs
aad
stc
sbb
add
xchg
shll
mov
sti
xor
aam
sub
jg
pusha
fisttpl
mov
cmc
push
inc
push
jno
mov
fsub
loope
mov
leave
pop
lret
or
adc
outsb
push
sahf
outsb
je
sahf
xor
push
add
arpl
popw
sahf
xchg
ret
push
xlat
sbb
lcall
fisttpll
sbb
test
mov
jmp
mov
enter
jae
jae
insl
sbb
ljmp
fldcw
shrb
dec
sbb
lock
icebp
insb
push
cltd
dec
add
ror
and
push
lock
xchg
inc
aam
gs
cmc
in
or
fcompl
xchg
pop
xor
mov
and
push
adc
cmc
ss
mov
sbb
inc
loope
jno
mov
fbstp
push
sbb
xor
xchg
inc
mov
mov
js
repz
and
add
int3
movsl
iretw
sub
mov
in
sbb
cmp
inc
mov
cmpsl
mov
sbbb
sub
rcll
xor
sub
sbb
mov
imul
sbb
ror
inc
outsb
add
pop
dec
mov
hlt
sub
and
cmpsl
mov
and
iret
mov
xchg
pop
es
mov
movsl
mov
jecxz
cmp
imul
adc
dec
push
add
push
xor
ficoml
lods
add
iret
push
fs
xor
adc
std
popa
pop
mov
cwtl
lea
fdivl
push
dec
dec
cmp
je
sbb
ret
push
test
jecxz
movsl
clc
sub
pusha
mov
mov
push
pop
jne
jo
dec
xchg
lahf
cmp
in
ret
jecxz
out
mov
adcb
push
and
sahf
cld
add
dec
inc
testl
stos
inc
stos
out
fiaddl
inc
and
jge
ljmp
xor
mov
sahf
test
cmpsl
xchg
push
and
std
sahf
mov
xor
lret
dec
lods
jecxz
enter
adc
into
dec
sahf
pop
repnz
inc
jb
mov
push
xchg
inc
scas
lea
mov
xchg
lds
ljmp
push
dec
cmp
pop
cmp
pop
idivb
mov
int3
in
in
cmp
imul
sbb
pop
jle
mov
clc
cmp
cmpsl
mov
stos
lea
mov
fwait
popa
sbb
adc
into
cmp
mov
dec
cmp
push
iret
rcrb
push
es
daa
faddl
lods
loopne
mov
mov
pop
icebp
adc
and
jnp
push
dec
out
cmpsb
dec
ja
notb
aaa
into
daa
jmp
push
je
cmp
mov
cmp
sbb
ret
adc
sub
mov
jo
dec
pop
xor
pop
cmpsb
sarb
nop
mov
ficoml
or
or
out
adc
subb
or
ret
hlt
inc
sbb
dec
or
cmc
push
in
pop
iret
adcb
mov
mov
jnp
scas
dec
jl
xor
imul
xor
mov
xchg
sbb
dec
fcmovnu
outsl
add
mov
std
and
sarl
inc
psadbw
in
rcl
enter
leave
cmp
sbb
jp
test
inc
je
stos
mov
ljmp
sbbb
nop
mov
mov
testb
jmp
mov
ds
add
dec
dec
xchg
sub
adc
sub
mov
hlt
pop
xchg
movsl
cmp
mov
or
cmp
pop
das
pop
iret
daa
sub
mov
dec
mov
adc
mov
les
xor
in
push
test
scas
xlat
xchg
mov
js
cmpsl
cld
mov
in
lods
mov
push
outsb
iret
stos
pop
gs
mov
push
adc
enter
sbb
cmc
pop
mov
fwait
mov
jno
mov
mov
cmp
mov
mov
add
or
cld
xchg
and
dec
inc
leave
sbb
push
and
rcrb
push
pop
push
and
dec
dec
cmp
icebp
mov
mov
je
fisubs
bound
das
xor
add
and
or
push
inc
insl
mov
xchg
inc
popa
inc
and
ja
fildll
push
dec
push
mov
xchg
jecxz
dec
jne
bound
push
adc
pop
popf
xor
cmc
repnz
fisubrs
repnz
cs
lcall
push
sbb
pusha
ss
add
lret
xlat
jne
inc
fldt
xchg
cmp
and
dec
aaa
bound
push
mov
icebp
or
jl
fwait
mov
xchg
jge
ds
outsb
cmc
int
mov
and
icebp
xlat
ret
inc
fstps
add
stos
cli
jp
pushf
sub
fisttps
mov
add
arpl
or
popf
loope
xchg
or
pop
push
and
dec
sbb
sub
mov
mov
jnp
fistpl
arpl
push
cltd
jle
insl
fcoml
and
adc
ret
ror
aas
imul
das
inc
mov
push
mov
inc
jbe
insl
xchg
ljmp
xor
mov
ljmp
or
das
adc
lret
push
jns
test
mov
xchg
pop
ret
div
sbb
shlb
mov
mov
pop
popf
arpl
xchg
mov
adc
scas
xchg
sarb
es
cld
subb
int3
cli
mov
sarl
lahf
hlt
lods
icebp
mov
sahf
and
jno
mov
js
inc
jecxz
mov
dec
int3
idivl
sub
rclb
add
adcl
mov
mov
sbb
negb
je
rcl
aad
fs
fsts
mov
sbb
adc
shrl
xchg
adc
aas
test
mov
jae
adc
or
xchg
leave
loopne
mov
jl
push
xlat
cmpsl
popf
jle
cld
fdivp
and
popf
mulb
inc
mov
add
imul
add
inc
jae
add
xchg
fstpt
mov
pop
repnz
js
mov
push
xor
cmpsb
sbb
jle
mov
mov
std
nop
rorb
and
jp
mov
jle
int3
and
cmc
lret
inc
fdivrs
sbb
fistl
sbbl
add
fsubrs
repnz
cmp
scas
adc
pop
adc
pop
sarl
push
in
push
or
mov
mov
sahf
jnp
test
mov
out
xor
xchg
call
sub
xchg
pop
mov
ds
lods
fldenv
xor
imul
cmp
jae
cmp
test
iret
loope
push
nop
cmp
test
push
cmp
sbb
mov
lods
dec
lret
outsb
cmp
lods
loopne
push
int
xor
fidivrs
xchg
jno
push
or
rorl
out
stos
jecxz
int
iret
xor
outsb
insb
xor
sahf
addl
and
pop
lock
cmp
jnp
scas
pusha
sbb
ror
sahf
or
xorb
push
xchg
out
cmp
jns
pop
insl
add
in
pop
pop
adc
cmp
scas
push
jb
and
cltd
dec
xlat
sbb
in
test
sbb
mov
out
xchg
stos
out
jge
ds
inc
push
ja
mov
daa
iret
std
jbe
out
sti
in
mov
cmp
loopne
xchg
xor
pop
test
dec
ds
mov
shrd
rcrl
jbe
daa
stos
lea
lcall
mov
push
and
fcoms
push
cld
xchg
dec
cmp
add
and
push
mov
sbb
dec
sub
imul
cmp
les
push
fs
fbld
adc
inc
jecxz
mov
lret
sub
sub
rcrl
pop
aaa
cmpsb
mov
inc
pusha
dec
clc
or
sub
dec
lods
das
out
cmp
sbb
pop
out
fdiv
add
xchg
mov
ret
cli
test
test
sub
mov
cmp
test
shr
or
cmpsl
fs
pop
cld
sbb
add
push
or
dec
pushf
push
jnp
sub
lret
adc
cld
mov
jb
and
sub
jecxz
sbb
mov
sti
and
cmpsl
daa
les
pop
cwtl
frstor
mov
cmpsl
dec
jecxz
clc
xor
test
frstor
cmp
icebp
xor
mov
ret
inc
popa
cmc
sub
stos
cmc
movsb
cmp
pop
lret
into
ret
cmp
push
jb
lock
xor
jecxz
clc
or
push
loopne
hlt
aad
ret
pop
je
xlat
jge
loop
cmp
sahf
rcll
iret
and
mov
scas
add
cmp
hlt
mov
adc
pop
or
mov
cmp
mov
mov
inc
mov
jns
jl
jmp
mov
into
adc
push
dec
aaa
pusha
mov
cmp
lds
mov
popf
cltd
notl
ret
xchg
adc
dec
dec
test
xchg
add
fisttps
add
in
mov
inc
lret
pop
outsl
inc
call
sti
or
lret
stos
push
stos
fisubs
xchg
xor
jb
mov
loop
icebp
out
sub
mov
inc
cmp
add
mov
inc
adc
test
mov
fadd
jecxz
and
insb
inc
dec
fcoml
mov
out
dec
mov
mov
and
mov
push
mov
stos
dec
xchg
lahf
lods
pop
ret
ffree
andb
outsl
inc
mov
test
inc
mov
ja
cmpsl
das
clc
mov
bound
mov
adc
aaa
push
inc
cmp
cmp
clc
inc
jae
stos
clc
scas
xor
jle
jae
clc
movsb
das
clc
and
inc
stos
and
mov
or
and
ret
sarb
cmpsl
or
jne
mov
faddl
fstp
xor
adc
lahf
push
mov
pusha
aad
dec
mov
test
pop
das
cmp
cmpl
imul
and
inc
gs
test
xor
cmpsl
leave
sbbb
inc
dec
in
xor
fisubrl
mov
or
jmp
jne
roll
insb
stos
xchg
dec
or
push
scas
sub
jne
sub
daa
scas
adc
jo
cmpsl
mov
iret
out
cld
add
sub
inc
aas
aad
and
sbbl
dec
aaa
adc
push
mov
mov
ljmp
ss
ja
fcoms
mov
test
xor
add
outsb
decb
adc
cmp
ja
xor
fwait
lods
mov
outsl
push
cs
jmp
jp
add
add
sbb
inc
les
ret
repz
inc
inc
and
push
adc
mov
sub
jmp
add
cmp
mov
mov
cmpxchg
xchg
sub
pop
or
cwtl
jns
push
sbb
mov
sub
adc
scas
push
mov
dec
jnp
adc
ja
dec
add
ret
jle
out
or
test
cmp
xchg
cmc
cmovns
xchg
mov
pop
aam
filds
mov
jmp
inc
jns
xchg
fmul
xor
mov
loopne
addr16
push
mov
mov
push
lahf
add
shrl
push
insb
push
out
pinsrw
cmp
out
cmp
xchg
insl
sbb
mov
lock
cs
pop
stc
mov
sarb
pop
push
or
pop
jae
and
pop
push
push
fidivs
and
test
and
aad
or
int3
jecxz
adc
push
and
jmp
xchg
adc
lds
xor
repz
push
nop
insb
insb
rorl
xchg
or
scas
mov
jo
cmp
inc
inc
cmovo
jb
fcompl
pop
clc
nop
pop
jecxz
in
std
pop
xchg
and
jb
sbb
int
or
daa
out
je
sub
push
popf
leave
mov
cli
gs
addr16
pop
mov
and
fs
cld
adc
jne
mov
pop
push
stos
es
xchg
mov
movsl
mov
and
or
inc
test
jle
test
repnz
addr16
mov
je
cmp
mov
inc
les
sti
aam
sub
push
mov
add
dec
test
adcb
cmp
push
pop
mov
lcall
xchg
xchg
jno
mov
es
inc
lret
and
push
or
testl
adc
push
adc
icebp
jmp
fbstp
ret
jp
fs
xor
cmp
mov
mov
gs
lret
sti
movsb
cmp
stc
pop
pop
sti
adc
xchg
sbb
pop
scas
mov
sahf
mov
fsubrl
xchg
popf
std
testl
jmp
lret
inc
popa
std
sti
xor
pop
stos
inc
lea
out
push
push
ljmp
mov
fmul
mov
daa
lret
jnp
sbb
push
shlb
insl
add
jg
stos
dec
inc
cmc
mov
sub
imul
or
dec
imul
xchg
rolb
jne
mov
cmp
in
add
testb
je
cli
jns
into
loop
inc
push
xor
ljmp
repnz
es
push
popa
mov
dec
rcl
in
mov
outsl
mov
icebp
ljmp
push
stos
fwait
jp
hlt
mov
and
enter
stos
into
fs
mov
cmp
mov
repz
or
cmp
mov
frstor
lcall
popa
inc
adc
adc
xchg
mov
sbb
sub
xchg
sub
sarb
or
inc
or
test
in
sbb
dec
stc
icebp
cmp
out
dec
and
mov
cld
mov
dec
test
dec
lcall
inc
cmpsb
cmpsl
sub
jno
push
test
lcall
cld
insb
cmpsl
jns
or
movsl
jle
test
mov
imul
push
call
movsb
les
xchg
std
or
jl
iret
fildl
jp
add
fbld
fisubl
jns
pop
and
and
sahf
into
and
hlt
fwait
lods
sub
jge
jnp
jno
pop
mov
das
xor
cmpsb
push
testb
movsl
adc
jns
cld
stos
fisttpll
adc
cmp
and
inc
fadd
ljmp
mov
jae
or
fnstsw
xor
fsubrs
adc
ds
orl
adc
and
popa
les
js
arpl
xor
pop
jno
out
hlt
push
jo
adc
scas
pop
mov
ljmp
pop
xchg
repz
in
and
xor
mulb
mov
push
aas
cmp
test
mov
xchg
sbb
adc
add
xchg
loope
xchg
xchg
push
sub
lea
loop
pop
shr
out
imul
lcall
repnz
dec
enter
and
ret
dec
cmp
inc
aad
ja
dec
mov
and
mov
inc
loopne
cltd
mov
pusha
mov
je
jo
sub
loop
inc
int
push
pushl
ficompl
jo
mov
cld
xchg
mov
in
lret
inc
pop
movaps
inc
sub
push
pop
mov
js
sub
scas
jns
data16
sub
popf
loope
adc
in
pushf
or
loope
movsb
adc
pop
adc
repz
jp
add
pushf
idivl
dec
fucomip
test
adc
mov
nop
jo
movsl
push
jecxz
out
cmp
in
nop
fwait
mov
sti
jl
dec
dec
pop
aam
xor
shr
sub
push
jbe
jge
cwtl
sahf
cmp
cmp
jae
jae
inc
add
cs
iret
mov
pop
and
jne
xchg
loopnew
pop
inc
ret
dec
pop
shlb
lret
sti
out
push
jmp
lock
push
adc
hlt
and
pop
dec
lret
sbb
xor
xor
jmp
out
std
call
cmp
sbb
xor
sbb
inc
adc
pop
inc
push
arpl
push
cmp
mov
mov
inc
fidivrs
push
cmp
and
cmp
mov
jmp
mov
adc
clc
stos
mov
call
in
sbb
adc
js
pop
inc
push
rorl
cmp
rorb
cmp
jmp
repz
ret
inc
xchg
push
mov
jecxz
stc
mov
sub
pop
cmpsl
mov
inc
enter
sbb
movsl
popf
data16
lret
lock
cs
fnstenv
or
or
dec
and
dec
subl
and
ss
stos
jecxz
mov
into
loopne
mov
imul
das
cmp
fsubrs
push
shl
out
data16
push
pop
push
jl
imulb
push
scas
sub
push
sbb
mov
lods
ja
inc
cltd
cli
insl
into
pop
adc
lret
pop
pop
adc
cmc
mov
paddq
cmp
adc
mov
push
into
dec
push
aas
cld
jmp
and
sbb
cmpsb
pop
sub
stos
sbb
dec
push
dec
cmp
dec
cld
lret
movsl
test
push
jbe
mov
add
or
jle
rcrb
xchg
lret
dec
jo
mov
adc
loope
pop
imul
rcrb
mov
cmc
imul
cmpsl
enter
xorb
mov
pop
hlt
adc
repnz
stos
pop
shl
or
movsb
cmpsl
ret
int
xchg
cmp
aaa
iret
xor
add
inc
xchg
je
gs
loop
and
clc
jae
lock
xchg
xchg
sub
imul
fcmovu
daa
inc
mov
mov
sti
xchg
mov
pushf
cwtl
test
xchg
popf
mov
shlb
xor
pop
scas
mov
cmpsb
inc
leave
xlat
jg
pop
out
mov
xchg
jmp
lcall
mov
push
push
leave
movsl
orb
push
imul
add
pop
cmp
lcall
lcall
nop
sbb
bnd
xor
es
or
mov
imul
orb
test
jle
lods
outsl
ret
adc
aaa
insl
add
dec
push
movsb
jecxz
in
mov
lea
test
stc
xor
cmp
in
pcmpgtw
or
cmp
mov
push
push
popf
push
jl
mov
cltd
movsb
fwait
cmpsl
aad
mov
hlt
adc
xchg
sbb
lds
das
or
cli
mov
pop
mov
jnp
mov
out
enter
push
stos
push
or
stos
movb
push
stos
and
mov
push
push
scas
shl
or
inc
fcomps
das
sub
pop
dec
test
pop
hlt
mov
mov
adc
inc
sbb
pop
out
fwait
or
in
stc
dec
jns
jns
lods
add
mov
fcompl
sub
sub
inc
negb
dec
scas
repz
negl
cmp
jno
pop
cltd
mov
push
adc
pop
outsb
cmp
and
aas
shl
aas
fdivl
adc
xchg
inc
aas
sub
push
ds
push
mov
insb
in
daa
sbb
aam
sbbb
pop
rcrb
and
inc
popa
ljmp
std
test
lods
ss
inc
sti
sbb
arpl
sbb
addl
imul
mov
push
jl
call
jl
sub
into
sti
mov
jae
lock
les
push
aas
pop
scas
pop
mov
jb
dec
scas
add
loope
sbb
or
in
incl
dec
std
push
add
cmpsb
xor
aad
mov
insb
sbb
push
xchg
sub
push
leave
xchg
or
mov
pop
jp
cmp
jge
ror
add
dec
inc
fsubr
inc
cmp
pusha
fistpll
out
push
adc
gs
scas
push
dec
shlb
mov
and
xchg
mov
and
sbb
jge
dec
scas
xchg
cmpsl
jle
shr
pop
or
pop
out
movsl
sahf
sub
aaa
adc
mov
into
jecxz
adcb
andl
fmuls
orl
sbb
rclb
push
or
xor
mov
sar
adc
add
adc
enter
push
outsb
push
gs
adc
dec
mov
sar
inc
mov
cmp
gs
les
push
stos
es
movsl
pop
in
add
fsubl
push
in
fs
or
xor
sti
sub
incl
jecxz
into
imul
mov
cli
mov
je
dec
dec
adc
add
sahf
js
cltd
xor
sbb
gs
movsb
or
lock
dec
mov
in
inc
push
jg
gs
movsl
push
adc
ja
pop
mov
rclb
xchg
out
cmp
iret
fdivr
movsl
lods
jmp
cmp
popf
jns
pop
mov
sbb
sbb
shll
mov
daa
adc
pop
cld
lods
inc
jl,pn
mov
mov
insb
fidivs
loop
inc
frstor
ljmp
shr
fdivs
mov
push
fdivp
mov
movsl
mov
mov
sbb
dec
lret
cmp
xchg
sub
or
xchg
scas
sub
repz
pop
mov
sahf
and
push
aaa
iret
data16
cmpsl
gs
mov
test
sbb
lds
les
jae
push
addl
mov
nop
cmp
push
mov
cs
sarb
sub
sub
divb
in
mov
or
sub
cwtl
gs
sub
sub
negl
lcall
sub
mov
stc
sub
xchg
jo
jo
ret
scas
pop
xor
mov
daa
jns
adc
out
sbb
test
and
inc
daa
sti
insb
inc
lods
push
setnp
mov
sbb
push
dec
sub
jns
cmp
gs
sbb
jbe
insb
sub
mov
pop
icebp
sbb
and
adc
jge
adc
pop
pop
mov
sub
jl
mov
jle
xchg
push
push
shrl
adc
or
lcall
pop
cmp
pop
jecxz
shr
rorl
test
pop
pushf
repz
inc
and
sti
xchg
test
jnp
lock
movsl
mov
push
or
les
push
xor
sub
mov
jo
out
push
popa
sti
push
cltd
mov
imul
sub
int3
fdivs
inc
movsl
cmp
out
pop
lcall
lahf
jae
mov
inc
jo
mov
testb
xchg
adcb
jecxz
es
je
fistps
shrl
dec
dec
icebp
fwait
sbb
mov
pop
inc
sahf
aaa
dec
add
add
xchg
sbb
enter
mov
pusha
lret
mov
pop
sub
lcall
stos
jecxz
cs
mov
push
dec
test
sbbb
cmp
jecxz
lahf
adc
adcl
cmp
je
and
lret
mov
mov
clc
mov
ret
scas
jno
inc
call
sub
loop
adc
ds
push
mov
out
or
jno
in
call
into
in
push
das
fnstenv
pop
xor
xor
and
out
cmc
push
hlt
pop
loopne
add
and
cs
sbb
sub
out
or
mov
insb
xchg
xchg
xchg
jmp
push
sbb
ds
addl
dec
fadds
into
enter
test
gs
or
ja
pop
aam
cmp
out
lods
pop
fisubrs
mov
repz
dec
loopne
push
fisubrl
pop
fwait
sti
sub
push
mov
jne
test
xchg
stos
das
sbb
shrl
popf
mov
bound
mov
add
sti
lock
cmp
in
lret
xchg
add
loopne
dec
dec
sti
lcall
out
lods
add
push
xchg
fcomi
dec
popa
outsl
pushf
jb
mov
mov
jbe
pop
icebp
fsts
mov
push
shrb
xchg
enter
mov
mov
push
dec
test
push
inc
xlat
sbbl
cmp
cmpsl
pop
fcmovne
or
cmpsb
sahf
xor
repnz
jl
cs
call
into
sub
mov
mov
jae
or
insl
jbe
or
in
leave
mov
push
cmp
loop
xlat
dec
sub
jns
aad
xchg
pop
xchg
call
out
add
mov
out
ret
outsl
xor
dec
ret
sub
pushf
adc
sub
mov
or
inc
cwtl
lret
pushw
push
int3
cld
shll
jae
repnz
ficoms
data16
cmc
jae
clc
inc
imul
lods
bound
std
loop
outsl
mov
out
scas
jbe
mov
jns
adcb
jle
hlt
dec
faddp
cmp
push
dec
scas
push
repz
test
ret
xchg
repz
mov
fsubrl
adc
inc
add
cmp
adc
mov
jp
ds
sub
iret
out
scas
pop
or
cmp
stos
xchg
add
bound
pop
fldt
cmp
push
mov
clc
sub
sahf
ror
jge
loop
xchg
les
popf
cmpsl
orb
flds
fcos
cli
cmp
and
pop
testb
inc
in
xor
pop
mov
cmc
pop
sub
inc
pop
jl
imul
jbe
ljmp
xor
jge
jmp
loope
jmp
and
loopne
or
jns
xor
cmp
and
out
sbbl
in
inc
ljmp
in
mov
inc
stos
popa
inc
sub
cmpsb
sub
cmp
sub
leave
outsl
sbb
lcall
mov
sub
push
sti
adc
sbb
push
in
and
inc
popa
scas
xchg
xor
pusha
xchg
sub
std
hlt
mov
sub
rcll
idivl
jae
sbb
mov
inc
sarl
shl
lcall
clc
in
jbe
bound
xchg
lods
inc
mov
jb
in
xlat
in
nop
test
out
jecxz
jb
incl
mov
mov
mov
pop
out
xchg
jmp
cmc
adc
lret
and
or
cmp
addr16
scas
mov
jle
test
mov
mov
mov
sahf
loop
lcall
lcall
push
inc
shll
mov
xor
scas
test
or
push
js
add
ret
cmp
xor
mov
sub
out
push
inc
ffree
adc
cmpsl
int3
mov
add
jno
es
mov
cmp
mov
out
loope
pushf
lods
aad
pusha
rorl
add
cld
sub
lods
xor
cmp
das
or
inc
and
rcrl
rcpps
fsub
ds
mov
pop
mov
sarl
push
inc
rorl
icebp
xor
push
std
xchg
add
push
mov
subb
pop
mov
pop
in
mov
xor
sbb
add
cmp
es
bound
fwait
clc
stos
adc
push
sub
push
mov
push
inc
bound
int
push
addr16
daa
cmp
add
dec
test
and
pop
aas
mov
add
cwtl
test
andb
rcrb
adc
cli
add
dec
jae
in
push
rclb
divb
mov
pop
scas
in
ret
into
ss
popf
mov
mov
fadds
xor
lret
ret
add
mov
loope
insl
fnstsw
pop
icebp
pop
lea
dec
xchg
or
fcomi
aaa
add
dec
lods
lahf
aam
adc
xchg
or
loop
push
dec
pop
arpl
movsb
cmp
push
les
inc
shlb
jecxz
in
dec
cmpsl
popf
fcoms
mov
cwtl
mov
fistps
rcrb
jge
int
data16
bound
mov
and
mov
leave
sbb
cli
lcall
dec
outsl
cs
xor
mov
pop
jp
xchg
pop
sub
sbbb
sub
seto
imul
or
rcrb
test
mov
jnp
sub
shlb
rorl
sub
test
and
pop
mov
arpl
dec
add
jns
jne
movsl
into
sub
push
pop
push
jp
je
leave
and
sub
xchg
je
and
les
call
shl
pop
adc
push
in
cmp
cmp
xor
popf
loop
mov
mov
adc
xor
adc
push
add
mov
fdivl
bound
arpl
pusha
sub
mov
pop
stos
jne
daa
aaa
mov
cmpl
adc
stos
jle
mov
test
cltd
stc
test
adc
push
into
mov
push
scas
and
mov
xor
insb
outsb
sub
pop
or
push
jmp
ja
es
data16
xlat
xor
mov
cmp
rol
iret
aad
je
or
push
xchg
insb
insb
rcrl
or
mov
lock
enter
outsl
push
call
test
lods
push
hlt
cmp
cwtl
cmp
je
js
rsm
sti
mov
xchg
sub
mov
mov
mov
jae
pop
cmpsl
mov
scas
and
push
pop
std
aad
jp
stos
lods
leave
fnsave
push
sub
cmpsl
mov
dec
in
cmp
pop
jle
adcl
out
pop
cmpsb
iret
notb
in
daa
jne
stos
inc
insb
mov
pop
sbb
pop
rorb
and
jno
push
out
adc
outsb
lahf
movsl
mov
fwait
sub
outsl
push
adc
repz
mov
movsb
dec
repz
inc
push
mov
or
sub
lods
jns
jecxz
mov
lret
inc
add
and
loopne
int3
fdivrp
add
data16
fstpl
push
rorl
add
pop
xor
aas
xchg
jns
orb
inc
xlat
dec
jle
into
mov
clc
or
and
popa
mov
push
dec
inc
cwtl
lea
in
loopne
pop
lcall
and
jp
daa
sub
fiadds
out
pop
lret
fsubs
test
in
sbb
or
or
jl
nop
in
sub
add
inc
stos
inc
cwtl
bound
out
and
scas
xchg
add
mov
push
jmp
push
mov
cmpsl
addr16
sti
jns
jecxz
cmpsl
lock
xor
loope
stc
out
xchg
mov
movsl
mov
adc
iret
rorb
cmp
jns
pop
nop
mov
mov
add
stc
xchg
mov
or
mov
es
push
mov
jb
adc
jg
push
or
in
in
dec
loop
add
cld
mov
push
mov
andl
lret
vextractps
jne
pop
pop
and
pop
sbb
in
test
faddl
and
fstps
int
jae
sbb
cmp
cmc
sbb
fbstp
loope
ret
inc
mov
mov
mov
mov
shr
adc
out
in
add
sbb
mov
mov
mov
sahf
sbb
out
lret
mov
out
inc
pop
icebp
fidivrs
jo
pinsrw
cmp
mov
or
xor
imul
xchg
cmpb
or
sub
or
std
test
cmpsl
jg
jecxz
pop
outsl
pop
lds
jg
xor
movsl
adc
dec
or
bound
scas
jl
nop
sarb
pop
out
and
mov
cmpsb
pop
or
loope
xchg
push
adc
mov
inc
in
ja
cmpsl
orl
adc
dec
loop
and
aam
shrb
sbb
ja
pushf
nop
bound
mov
out
iret
testb
and
out
leave
paddd
ret
repz
fwait
jb
sub
lea
roll
add
imul
xchg
mov
fstpl
movsl
sahf
fs
mov
addr16
mov
or
sbb
aas
fcmove
mov
outsb
lock
dec
loope
mov
cmp
icebp
std
cltd
fcoms
adc
addl
sbbb
xchg
movsb
mov
lret
loope
shrb
inc
das
dec
inc
add
fs
jb
push
sbb
cmpl
mov
push
mov
mov
mov
rcr
inc
enter
mov
jns
inc
add
pop
dec
mov
sbb
or
adc
arpl
nop
xchg
sub
jg
jns
scas
sub
sbbl
hlt
iret
imul
mov
adc
dec
sub
fsub
test
adc
test
das
je
cmpsl
inc
enter
cmpb
ret
mov
loopne
inc
shlb
popa
paddd
push
ja
sub
adc
sbb
test
add
test
inc
xor
out
repnz
push
outsb
add
aam
mov
adc
mov
lret
in
fisubrs
push
add
lea
in
ljmp
xor
push
jbe
pop
ret
mov
inc
repnz
addr16
cmp
xchg
and
cld
addl
out
jns
stc
loop
bt
dec
sub
push
cmp
mov
inc
addr16
mov
pop
push
or
sub
mov
xchg
push
xchg
fadds
stos
scas
push
jno
movhps
fimull
pop
mov
jb
andl
xor
into
fstpl
in
aas
pop
fisttpll
ret
shll
call
push
inc
xor
jecxz
or
inc
ljmp
xchg
stos
mov
jge
xor
outsl
sub
mov
cmpsb
add
cmp
test
cmp
jne
mov
mov
scas
pop
push
adc
ss
pop
enter
lods
add
xchg
pusha
or
lods
mov
les
mov
addr16
and
sahf
add
bound
shlb
sbb
sbb
and
ljmp
jae
xchg
mov
sub
xchg
daa
ds
or
dec
cmp
pop
and
das
ljmp
cmp
pop
add
add
jl
aaa
push
dec
mov
mov
mov
xor
notl
or
aad
imul
xchg
jo
add
mov
test
lcall
pop
or
push
xchg
nop
or
mov
pushf
and
call
ret
pop
cmp
es
ss
sbb
popf
mov
sbb
loope
xchg
dec
adc
xor
jmp
lea
ja
inc
pop
adc
cmp
ljmp
push
push
jno
sbb
sub
in
aad
ds
sub
aad
xor
int
incb
test
dec
inc
cmc
adc
in
sbb
cwtl
insb
add
jp
aas
sub
sbb
xchg
aam
dec
mov
js
cmp
push
mov
pop
xor
sarb
and
sti
mov
icebp
loopne
jmp
or
cmpsl
or
call
lcall
lahf
rclb
mov
lcall
and
jmp
dec
sbb
je
jo
ret
pop
mov
add
jno
sbb
and
xchg
xor
data16
out
push
lret
push
push
popf
fwait
or
sub
xor
popa
xchg
jle
lds
and
cmp
mov
pop
mov
movsl
mov
call
in
packssdw
adc
sbb
addr16
addr16
sbb
add
lods
dec
inc
lea
xor
fistps
mov
mov
fdivs
nop
js
xor
imul
test
dec
aas
inc
mov
jbe
pop
test
mov
test
loope
cmp
lcall
pop
mov
pop
jne
lea
push
repnz
int3
sub
iret
xor
dec
mov
mov
movsl
and
inc
pop
sub
sub
sbb
movsb
lods
pusha
push
lcall
in
subl
into
mov
je
sub
push
repz
repz
mov
mov
rcr
bound
mov
imul
dec
mov
mov
fwait
adc
shlb
xchg
cmpsb
roll
fnsave
pop
pop
stos
mov
addr16
repz
cltd
test
pop
or
ss
cs
sti
sahf
or
mov
sbb
dec
movsl
jnp
add
je
gs
mov
xchg
in
pop
mov
mov
push
ror
pop
enter
jnp
mov
mulb
push
xor
andl
aam
or
sarb
repnz
addr16
lock
xchg
ficoms
push
stc
movsl
xchg
xchg
push
mov
lahf
outsb
popf
cmp
pop
insb
inc
in
push
cmp
in
testb
pop
push
adc
ficomps
mov
sbb
loop
fstp
xor
adc
cmp
lahf
sti
repnz
cld
inc
mov
or
cs
shr
popa
rorb
je
jp
push
idiv
inc
sbb
xchg
xor
or
mov
decl
sbb
scas
xor
inc
insl
hlt
xchg
xchg
push
or
icebp
add
stos
cmc
addr16
rclb
rcrb
push
jbe
jnp
xchg
movsl
push
shlb
push
xor
aad
rolb
mov
jp
popa
xchg
push
imul
movsl
es
fnstenv
rcrl
and
popf
xor
test
shlb
cmpsb
leave
cmp
xchg
sbbl
mov
add
xchg
into
leave
xor
and
iret
push
movsb
ret
je
mov
out
sti
aad
iret
and
jo
jae
jns
adc
insb
out
xor
in
jnp
pop
aaa
or
je
iret
imul
or
mov
mov
pusha
icebp
nop
inc
sti
add
lret
ret
aad
jns
shlb
or
xchg
or
add
sub
sarb
jns
lock
jno
jnp
inc
jl
nop
adc
stos
hlt
js
mov
icebp
insb
xor
test
dec
lods
push
adc
mov
push
jge
ljmp
mov
adc
mov
insb
insl
loopne
mov
fwait
xor
push
mov
test
and
push
lea
test
inc
jae
popa
fdivrl
push
ja
scas
sbb
cmp
jecxz
fdivrs
push
cs
shlb
adc
popf
shl
cld
push
jns
jle
dec
loope
dec
pop
push
std
sbb
mov
aaa
or
dec
cmp
repz
xchg
mov
jmp
mov
stc
sub
movsl
pop
arpl
xchg
mov
call
sub
cmovno
adc
dec
cmp
mov
lods
mov
adc
adc
cltd
pop
negl
fsubr
fildll
outsl
add
mov
jns
leave
mov
mov
mov
dec
fs
add
add
push
xchg
jne
movl
mov
lret
lret
sub
arpl
jnp
or
mov
cli
negb
push
sub
add
dec
mov
out
outsl
lahf
push
arpl
into
out
push
adc
push
push
inc
or
into
xchg
es
sbb
xor
cmp
insl
add
jecxz
and
dec
add
lcall
or
pushf
mov
out
ljmp
mov
jl
pop
fxch
enter
push
shl
pop
mov
repz
cmpsl
popf
add
add
loope
icebp
stos
pop
leave
cld
mov
es
in
inc
fistl
push
arpl
insb
add
fildll
movsb
or
push
mov
mov
cwtl
cmp
mov
push
scas
push
call
inc
inc
stc
xor
cmp
mov
adc
sbb
sahf
imul
lea
mov
mov
sbbb
jo
sub
daa
lahf
pusha
pop
or
jb
sti
fstpt
fnstcw
push
repnz
pop
and
inc
sub
push
cmp
add
pushf
lret
imul
jo
iret
jb
subl
fcoms
leave
outsl
shl
xor
scas
pop
insl
je
int
dec
sbb
shlb
push
cmp
mov
push
outsb
aad
adc
orl
pop
or
cmp
and
inc
aaa
stos
pushw
inc
aas
sbb
jae
mov
or
xchg
inc
out
mov
out
ds
xchg
xor
pop
sbbl
mov
add
pusha
test
sti
mov
enter
push
jo
xchg
xor
mov
scas
sbb
fcmovb
test
dec
xlat
mov
and
or
and
or
daa
xor
mov
insb
imull
inc
daa
mov
loop
inc
fmul
add
sub
xor
ja
pop
xor
es
jbe
jo
es
in
fsts
call
adc
mov
pop
ja
fdivrs
sub
out
xor
lahf
inc
and
popf
stc
lods
push
push
jl
sbb
mov
aad
fldl
unpckhps
mov
ficompl
fs
pop
jno
mov
xor
pop
ja
int3
sub
repz
stc
leave
test
enter
mov
mov
iret
cmp
add
mov
stos
inc
sbb
lds
cmp
push
addr16
test
push
and
mov
and
inc
mov
enter
jmp
jnp
sbb
sub
cltd
std
pop
scas
sbb
mov
pusha
mov
xor
sub
or
ljmp
xchg
xchg
pop
lock
mov
cltd
sbb
cmp
ss
popf
push
les
pop
lret
or
pop
adc
rcr
jge
and
cs
in
clc
shl
mov
xor
js
add
sub
aad
mov
mov
aaa
jne
mov
adc
cmp
sbb
lahf
adc
ds
inc
incb
bound
xchg
aas
push
mov
xchg
sbb
out
les
addr16
adc
push
xchg
xor
jg
mov
push
test
or
xor
or
or
rorb
xchg
mov
and
lock
mov
sub
jp
repnz
mov
sbb
add
dec
nop
xor
jns,pt
leave
or
inc
testl
mov
mov
aam
pop
push
pop
xor
jl
sub
ret
jle
xchg
sti
movsb
aad
outsl
jmp
sbb
loope
insl
adc
sbb
out
pop
push
mov
xchg
push
mov
mov
mov
pop
repz
mov
imul
xchg
jnp
andb
or
mov
xchg
adc
mov
test
bound
and
mov
push
subl
clc
fimull
dec
repz
lock
cmpb
in
in
loopne
cltd
mulb
sarl
mov
mov
cmpsl
jns
adc
iret
lods
jbe
mov
movsl
cmc
cmp
test
jg
mov
xorb
outsb
ja
ret
das
inc
add
sahf
bnd
ja
loop
test
loop
test
adc
and
loope
mov
in
push
jnp
lcall
inc
jb
inc
sub
xor
inc
add
ficoml
and
mov
pushf
xchg
das
or
xlat
aas
or
dec
adc
jae
mov
mov
stos
shlb
or
adc
jle
and
dec
fisubs
sub
push
dec
out
into
dec
ljmp
mov
dec
movsb
rcrb
mov
jb
mov
in
pushf
repnz
aad
jge
push
addr16
pop
cld
rorl
sub
mov
test
jp
mov
jle
incb
mov
popf
sbb
into
jmp
aaa
mov
cmp
iret
adc
addr16
sbb
push
and
mov
cld
out
lods
xchg
imul
push
testb
or
cld
enter
mov
xchg
repz
ret
jmp
sbb
mov
mov
or
sub
inc
sbb
insb
and
pop
jle
jg
xor
sub
mov
test
jg
mov
pop
scas
in
bnd
ret
jge
jge
cmpsb
xchg
jns
inc
loop
stc
push
add
fimull
fs
push
push
cmp
rcrb
das
or
jmp
fadds
call
adcl
sbb
leave
mov
adc
sarl
sub
out
sbb
and
push
add
jae
cwtl
mov
int
cli
mov
xchg
jne
test
pushf
push
and
xor
scas
lods
xor
js
ja
decl
cmc
cmp
mov
cwtl
adc
std
pop
push
xor
inc
cwtl
rol
cwtl
cmpsb
jo
sub
test
xchg
pop
sub
or
dec
jp
xchg
mov
popf
int3
xor
cli
or
movsb
xor
adc
vcmptruesd
ja
clc
clc
mov
jae
test
cli
test
and
jo
cmp
push
scas
adc
mov
push
jp
cmpsl
aas
int3
repnz
aad
mov
imul
repnz
inc
dec
mov
pop
test
loope
sub
jp
pushf
dec
iret
adc
adc
lea
popf
jo
imul
mov
sub
out
mov
cmpsl
cmp
out
add
pop
fadd
cs
decb
stos
push
mov
jo
jg
xor
sbb
stos
sbb
repz
call
push
sub
mov
mov
push
push
pop
jb
in
push
or
ret
xor
in
mov
addb
insl
js
ret
add
fsubl
pusha
rolb
push
mov
nop
bound
imul
pushf
mov
outsb
xorb
icebp
or
push
pop
mov
sti
test
aam
sahf
gs
iret
lahf
pop
jo
dec
sbb
mov
mov
aaa
xchg
or
jmp
loope
and
icebp
xchg
mov
mov
sbb
stos
sbb
fnstenv
les
ja
xchg
and
add
xchg
push
pop
idivb
sub
cmp
xchg
popf
mov
cmp
insb
sub
xchg
sub
add
aaa
test
std
push
movsb
leave
mov
nop
cmp
mov
cli
push
lret
or
movsl
sub
mov
sarb
outsl
filds
sub
mov
outsb
mov
mov
insl
lds
or
push
andl
insb
loopne
cmpsb
and
mov
push
push
jb
lret
cmp
dec
vpmulhw
incl
in
xor
sbb
test
pop
add
jns
call
fildl
in
fldenv
fcoml
test
and
push
call
cmpsb
stos
sbb
inc
cmp
mov
push
xchg
jle
jecxz
push
shll
pop
inc
jg
jmp
jne
push
arpl
cs
xor
jecxz
jmp
push
dec
out
jno
jb
rcrl
add
cmpsb
xor
adc
mov
lret
push
push
repz
jno
movb
add
fidivrs
mov
daa
fdivrl
dec
inc
dec
mov
dec
hlt
cmc
cmpsb
push
adc
mov
mov
pusha
aam
adc
loopne
lea
test
mov
mov
add
or
pop
mov
sub
sbb
cmpsb
add
loope
aam
adc
mov
js
cmpsb
or
outsb
push
sub
xor
cmp
bound
mov
iret
test
scas
f2xm1
push
roll
xor
jnp
adc
fidivs
icebp
or
pop
dec
jg
jns
scas
inc
pop
fs
xrelease
or
loop
movsl
adc
jo
adc
sub
leave
xor
sahf
cmpsb
gs
sbb
outsb
add
das
les
loopne
push
mov
push
cmpb
dec
cmp
subb
xchg
pop
sub
mov
fisubrs
orb
add
loopne
and
fisttpl
xchg
mov
adc
daa
lcall
pusha
inc
and
movsl
xchg
push
pop
or
movsl
mov
sarb
xchg
pop
pop
lods
xchg
pop
out
push
add
aaa
icebp
insb
jecxz
nop
mov
sbb
inc
xchg
add
jg
ficomps
mov
xor
xchg
dec
push
mov
clc
lret
dec
mov
pop
xor
and
push
fxch
pop
lock
out
adc
iret
xchg
fisubrs
outsb
pop
inc
mov
imul
mov
shlb
xor
xchg
out
imulb
aas
movsb
add
xchg
mov
push
and
jae
mov
pop
or
cli
pop
es
xor
inc
rolb
adc
push
mov
pop
xchg
in
xchg
roll
std
mov
mov
mov
sub
cmp
sub
cmp
mov
push
adc
test
daa
inc
cmp
or
roll
inc
int3
scas
adc
xor
ficoms
sub
dec
xchg
dec
insb
stos
pop
jmp
in
addl
scas
es
pop
sub
subl
mov
loopne
mov
inc
data16
jno
jno
cmpsl
ret
sti
es
jle
mov
inc
fdivrs
jge
or
repnz
mov
adc
jl
push
pop
jo
push
jl
xor
into
and
cltd
je
push
testb
stos
dec
loop
out
adc
idivb
jmp
push
xor
push
inc
push
test
xchg
arpl
xchg
mov
lret
in
iret
xor
dec
cmp
cmp
and
lods
jne
mov
rcrl
inc
mov
cmc
pop
pop
std
xor
cmp
xchg
inc
pop
mov
popf
dec
stc
mov
repz
les
loopne
or
loop
adc
and
aam
inc
push
mov
movsb
cmp
rorl
sub
sbb
fwait
jne
push
inc
push
out
jno
leave
mov
pop
and
xchg
mov
jg
add
push
push
hlt
push
pop
hlt
cmp
jl
testl
dec
adc
pop
dec
jle
popl
popa
clc
call
fbstp
int
fstps
outsb
shrb
std
jo
imul
loope
sahf
lods
bnd
popa
cwtl
lret
mov
cmp
and
mov
cmpb
pop
movsb
mov
xchg
ds
mov
dec
mov
sbb
das
pop
sbb
inc
xlat
xor
loopne
fdivrs
inc
inc
xchg
adc
mov
sahf
push
addr16
mov
arpl
push
jo
mov
daa
outsl
les
push
inc
test
ja
inc
mov
cmp
sbb
jmp
movsl
call
popf
xor
test
aad
dec
mov
jmp
in
push
ret
and
incl
mov
test
ror
pushf
stc
lea
adc
lea
mov
push
in
push
cld
or
in
xor
mov
fisttps
std
push
cmp
aaa
xchg
es
jne
sub
mov
jb
xchg
push
lcall
stc
mov
push
fdivr
in
pop
shll
adc
mov
pop
and
jecxz
scas
mov
es
push
repz
call
adc
add
icebp
das
adc
push
cs
inc
lods
out
jp
daa
adc
test
jns
repnz
xor
lahf
inc
xchg
add
xor
stos
fisttpll
sub
mov
iret
mov
sub
les
adc
and
cli
add
and
xchg
imul
jmp
aad
shl
jp
pop
jnp
add
dec
dec
movsl
hlt
cmp
call
addb
jbe
dec
scas
imul
mov
aam
mov
sbbb
cmp
cmp
jns
sbb
decl
lock
jecxz
adc
xor
add
jns
rolb
xchg
ret
or
fdivrs
fidivl
inc
sbb
mov
adc
push
das
xchg
push
mov
xchg
sbb
sbb
dec
cmpsb
sbb
pop
dec
pop
jle
mov
mov
lds
cwtl
mov
into
aas
movsb
call
push
lods
scas
daa
xor
lret
in
bound
cltd
dec
adc
lret
mov
mov
fistps
push
dec
pop
aad
mov
int
mov
int3
lret
sbb
inc
jne
add
leave
push
adc
mov
andb
shll
ja
jbe
es
aad
add
mov
push
cli
ljmp
add
mov
push
out
stos
inc
rol
sub
jp
lret
dec
mov
and
out
lods
mov
sar
mov
pop
adc
mov
mov
jns
dec
popa
ja
aaa
leave
xchg
sub
push
addr16
out
cmp
cmp
jb
and
pusha
xor
les
jno
in
jnp
pop
je
cmp
cltd
jo
or
push
cmp
jp
rclb
push
loop
fldt
sbb
xchg
dec
out
jne
sbb
imul
aad
test
in
xchg
pop
jmp
ljmp
mov
or
mov
out
xchg
mov
mov
daa
es
test
push
insl
adc
or
cmpsb
add
mov
cltd
mov
mov
idiv
add
pop
push
mov
fisubl
lcall
out
pusha
fsubl
jns
mov
hlt
jp
nop
mov
ret
inc
pop
ljmp
imul
jno
sub
cmp
xchg
push
out
test
adc
adc
roll
in
mov
lcall
push
mov
insl
mov
fwait
cmpsl
call
stos
fidivrs
out
and
mov
mov
or
adc
sbb
mov
fisubs
icebp
mov
outsl
pop
jns
and
inc
stos
sub
cmp
add
imul
out
les
push
insb
shrl
mov
cmpl
adcb
push
mov
popf
ss
das
push
or
jnp
push
sbb
pushf
fimull
int3
sub
pop
jg
push
xor
movsb
dec
out
int
mov
cld
ror
push
or
mov
cmp
mov
xchg
nop
mov
push
icebp
notb
imul
cli
jne
cmp
imul
out
lds
or
nop
sub
or
lods
pop
movsl
jae
xlat
jg
cltd
ljmp
fiaddl
mov
rcrb
jg
lret
jge
xchg
mov
dec
movsb
pop
xchg
inc
sbb
jae
loope
mov
rcrl
je
jmp
clc
adc
xchg
add
push
jo
mov
adc
push
sti
sbb
or
cs
in
mov
iret
scas
das
loopne
ret
dec
jl
mov
adc
jne
mov
xorl
adc
data16
dec
loope
jge
or
push
sbb
cmpsb
or
and
jne
push
cmc
sbb
and
popa
outsb
mov
in
test
jnp
mov
mov
add
mov
pop
push
push
xchg
cmp
out
ja
pop
sub
jno
in
sbb
mov
pop
mov
ds
rcrb
fsubrl
add
loop
and
or
adc
xchg
test
loope
xor
jnp
fisubs
arpl
xchg
mov
loope
inc
sub
push
xchg
jb
mov
cmp
nop
xchg
add
xlat
fwait
cmp
lret
mulb
cmpsl
in
add
sbb
scas
and
jno
mov
xchg
mov
in
inc
loop
and
jnp
sub
sub
add
imul
je
int
mov
mov
dec
js
mov
shlb
inc
int3
shlb
ret
ret
and
and
lods
mov
lods
xchg
add
add
mov
fstpt
mov
scas
daa
lcall
std
push
xor
shrl
outsb
add
stc
cmp
in
imul
mov
push
cld
and
or
add
ljmp
iret
neg
sub
mov
and
daa
adc
and
fwait
add
and
mov
add
in
mov
sbb
rorl
sbb
dec
fmuls
mov
arpl
cmp
mov
dec
mov
add
push
popf
pop
filds
and
and
icebp
in
movsb
pop
xchg
cmp
add
xor
fisubrl
mov
or
jae
fcoms
mov
xchg
imul
mov
imul
push
pop
add
mov
scas
addr16
dec
mov
popf
inc
sahf
scas
out
sbb
or
outsl
jge
xchg
pusha
cmp
cmp
fsubs
cmpsl
mov
cltd
ret
rcrb
add
out
sbb
and
lret
pop
ret
test
and
mov
xchg
lcall
rcl
and
das
nop
loope
movsl
push
jbe
xchg
xchg
pop
jo
arpl
fisubs
fwait
push
fcomps
dec
xor
cmp
rcr
scas
adc
les
sti
imul
pusha
ds
repnz
xor
cmpsb
fdivs
or
divb
push
ret
das
gs
subb
push
mov
cmp
test
lahf
or
mov
pop
data16
lret
or
shll
sub
mov
cmpsb
and
bound
or
or
into
rcr
out
mov
enter
mov
pop
cmp
mov
outsb
cwtl
mov
mov
in
push
mov
mov
ljmp
and
jb
jg
sub
jg
popa
xor
dec
adc
fdiv
mov
pop
in
test
jno
xor
xchg
xchg
jp
shlb
push
add
test
dec
xchg
sub
xor
mov
pop
idivl
lods
dec
push
xchg
add
js
xor
pop
mov
ficoms
or
cmp
add
out
insl
pusha
mov
jp
gs
pop
lds
pop
sub
push
pop
add
mov
cmpsb
popa
neg
pushf
mov
adc
fstl
pop
movsl
mov
int3
or
pusha
lods
int3
outsl
push
xchg
sbb
mov
pop
rcll
insb
je
sahf
xor
and
cmc
jnp
test
mov
adc
xlat
das
rolb
sbb
in
cmp
sbb
mov
jo
xchg
lods
out
lahf
dec
enter
stos
mov
shrl
cmp
push
and
aas
inc
fimuls
loope
gs
pop
adc
dec
out
mov
insl
jl
addb
cmp
dec
and
or
cmp
mov
fstpl
sbb
fnstenv
fidivl
sub
fs
dec
jae
add
add
fstps
mov
cmp
sahf
adc
push
loop
fstpl
jb
pop
movsb
inc
jns
push
test
add
movsl
mov
xor
jmp
jno
cs
inc
inc
xchg
sub
in
nop
lds
inc
xor
adc
push
mov
jnp
in
push
addb
movsb
pop
inc
testl
leave
push
xchg
inc
fcmovne
js
mov
adc
push
add
js
sahf
insl
ss
jle
shr
sub
add
jle
call
push
stos
xchg
xchg
cmp
push
sbb
rcrl
pop
in
push
mov
sbb
xor
stos
arpl
lea
or
imul
sub
sub
sahf
xorl
lcall
sub
mov
mov
ret
outsl
mov
imul
mov
lar
xor
xchg
cs
pop
mov
bound
mov
pop
dec
lahf
fdivp
shrb
cmpsl
xor
and
in
imul
xlat
mov
fwait
push
mov
pop
inc
pop
cltd
and
mov
hlt
push
je
xchg
cmpsl
xor
hlt
scas
lock
and
jns
sbb
ja
or
lahf
xchg
movsb
add
mov
mov
loopne
loope
insl
stos
mov
call
dec
pop
sahf
jp
mov
adc
dec
pop
cmp
and
cs
je
add
cmp
push
arpl
sub
scas
pop
mov
lds
fcmovbe
sub
jmp
adc
mov
into
loop
sub
mov
jnp
mov
add
in
bound
hlt
lods
push
aaa
ficoms
add
pushl
sub
mov
mov
or
mov
push
pop
sub
xchg
or
daa
insl
daa
lcall
sub
push
orl
pop
mov
cltd
int3
sarb
mov
mov
bound
nop
aam
scas
rcl
lods
dec
jmp
xlat
stos
xchg
and
scas
dec
repnz
xor
push
xor
mov
mov
scas
in
loopne
cmpb
mov
mov
popa
mov
idivb
pop
ldmxcsr
sbb
aas
adc
imul
imul
adc
push
xchg
mov
shl
pop
add
movsl
dec
mov
sbb
sbb
sbb
pop
pop
cmc
adc
mov
xlat
pop
scas
pop
sarl
aas
lahf
mov
loope
jg
rcrb
inc
pop
add
fldpi
lret
push
cmpsl
out
adc
popa
xor
stc
pop
adc
sbb
xchg
orl
sti
pusha
test
loop
shl
cli
dec
mov
or
sub
iret
sub
lods
or
sbb
sbb
mov
add
lods
adc
cli
test
jg
mov
and
xchg
jl
mov
sbb
popw
mov
jge
xorl
jecxz
sbb
or
add
jge
loope
jno
pop
add
dec
and
inc
shll
and
mov
xlat
rorl
addb
adc
stos
mov
add
es
popf
out
mov
xor
jmp
sub
out
or
rol
sbb
mov
mov
std
arpl
scas
sbb
push
mov
jg
andl
inc
fmuls
pop
repnz
mov
jns
lds
test
lods
or
fiadds
data16
push
imul
cmp
mov
jle
mov
movsb
jl
push
rcr
mov
mov
mov
stc
mov
mov
arpl
icebp
in
int
fmull
pop
rclb
fdiv
sub
sbb
shl
dec
pushf
add
insl
test
dec
mov
rcr
mov
iret
nop
jns
pop
movsl
jb
pusha
sub
imul
mov
adc
mov
popa
shl
xchg
shl
adc
inc
push
pop
xchg
fwait
sub
mov
dec
and
inc
scas
mov
stos
mov
sahf
push
inc
xchg
xchg
push
mov
imul
fs
ja
push
jl
or
lcall
popa
mov
ss
xchg
testl
das
pop
or
push
dec
xchg
pop
aas
rcll
push
mov
or
fs
lock
popf
push
or
test
scas
mov
cmpsl
out
jmp
and
sbb
sub
cmpb
sub
add
mov
xlat
push
jmp
push
clc
imul
and
cwtl
pusha
fs
push
out
dec
je
xchg
in
push
push
repz
fcoml
test
mov
pop
out
push
adc
or
mov
fldenv
int3
aaa
pop
cmp
mov
imul
lds
mov
mov
xchg
sub
ficompl
lcall
leave
pop
stos
sub
fbld
jle
outsb
jle
dec
std
lods
xchg
push
movsl
insl
iret
orl
push
jno
sahf
scas
ss
rcrb
popa
ss
jae
test
out
mov
push
or
sahf
jg
adcl
lret
stc
sbb
ljmp
cmp
fcoms
and
les
scas
mov
mov
ret
mov
inc
jbe
enter
iret
cmp
pop
jecxz
xchg
rol
repnz
shl
sahf
insl
jge
cmc
pop
lret
mov
shll
insl
push
xor
add
adc
xchg
jecxz
int3
mov
inc
sub
jbe
testb
mov
xchg
je
std
imul
clc
fdivs
sbb
fisubrl
stos
xchg
or
enter
inc
sub
shrb
jnp
mov
pop
stos
cmp
shl
pusha
inc
scas
test
rolb
mov
xor
sbb
sahf
and
scas
call
cmpsb
negl
push
mov
aam
pop
lock
pop
imul
bound
lcall
dec
lea
clc
out
mov
pop
dec
mov
orb
sbb
lds
or
bound
fcmove
xchg
loopne
cs
nop
dec
jne
mov
jb
jl
pop
mov
sub
jns
loope
fistl
dec
add
sub
sbb
push
shrw
lret
mov
loopne
jmp
jecxz
cmp
mov
push
xchg
xor
inc
jmp
imul
pushf
lea
cs
in
stos
aad
fwait
stos
fldt
push
mov
mov
outsl
xchg
pop
lahf
adc
fisttpll
sbb
adc
jne
cld
push
jl
jp
leave
popf
out
cmpsb
into
sbb
decb
mov
scas
xchg
cmpsl
mov
mov
iret
jmp
aaa
mov
inc
push
inc
std
jae
ficoml
xchg
clc
fs
shll
lods
push
cmp
push
icebp
inc
inc
push
push
std
lods
repz
enter
sub
or
or
cmp
je
out
lods
js
or
lods
mov
jecxz
mov
jbe
imul
xor
roll
mov
add
rol
sar
dec
mov
add
jne,pn
clc
mov
or
adc
fisubl
inc
mov
outsl
jecxz
xor
mov
push
out
push
call
jp
lock
nop
sub
iret
aad
jne
mov
sbb
push
and
ret
sbb
adc
xchg
add
and
add
stc
nop
std
or
xor
pusha
negl
orb
xor
add
xor
in
sbb
js
push
cmp
inc
xchg
push
sub
imul
fnstsw
pop
add
popf
fldt
ret
mov
iret
arpl
mov
mov
dec
pop
insb
pop
mov
ljmp
icebp
push
sbb
shr
xor
xor
sub
movsb
jp
fwait
mov
cs
scas
push
sbb
shr
outsb
lock
and
in
lahf
lods
inc
mov
push
cwtl
mov
push
xchg
cs
cmpsb
shrl
ljmpw
add
gs
xor
adc
jb
stc
inc
dec
sub
rol
cwtl
scas
inc
lret
out
dec
mov
jbe
push
test
imul
pop
icebp
test
mov
imul
icebp
mov
pop
and
pop
mov
sbbl
out
imul
sub
lcall
test
or
jne
ret
mov
push
imul
movsl
push
xchg
test
lock
push
jle
xor
bndstx
data16
ret
xor
pop
ja
mov
jp
dec
fsubrs
sub
sarb
push
push
jmp
lahf
xchg
sbb
jae
mov
adc
lahf
imul
fimull
cld
cmp
std
jmp
das
psrld
inc
pop
pop
dec
test
push
imul
popf
xchg
repnz
loope
inc
pusha
gs
lret
out
push
xor
cmpsl
sbb
fmul
sub
sbb
mov
sahf
not
ret
adc
movsl
mov
rclb
sub
sub
out
int3
mov
mov
add
xchg
std
cmp
and
loop
aam
jno
mov
fwait
or
aas
lahf
push
lods
jge
mov
jecxz
loopne
cs
aad
ja
mov
test
lret
sbb
cld
sahf
cmp
sar
das
cmp
pop
leave
pop
mov
shl
repnz
inc
mov
loope
enter
enter
mov
je
xchg
stos
xchg
xlat
lret
cvtdq2ps
xchg
mov
scas
add
pextrw
pop
push
lods
pop
outsl
ja
insl
xchg
dec
imul
aam
pop
stos
in
push
mov
das
xor
pusha
xor
jno
mov
ja
shlb
fisubl
push
imul
inc
lods
cwtl
mov
arpl
lahf
lret
or
jmp
into
out
getsec
scas
inc
int3
pop
lock
jmp
aad
rorb
lods
jmp
fmul
idivl
dec
in
int
fsubrs
stc
sbb
sub
in
out
xchg
int3
popf
jnp
cld
rcrb
jge
iret
data16
mov
push
popa
or
xchg
into
orl
inc
sub
jno
cmp
mov
ret
xchg
mov
sub
mov
mov
mov
daa
leave
inc
add
hlt
push
imul
and
adc
jnp
mov
add
pop
enter
pop
jmp
or
mov
mov
scas
jg
sbb
xor
scas
pusha
xchg
push
pop
jae
sub
sub
iret
sbb
xor
shl
push
pop
and
fcompl
fbld
jb
loopne
add
cmp
push
outsb
lret
popa
iret
lods
outsb
hlt
gs
roll
mov
inc
mov
stc
nop
repz
aad
xchg
pop
xor
pop
sbb
add
stc
and
cmp
jne
int3
fdivrl
shrb
std
xchg
push
in
and
stc
xchg
aas
into
sbb
ja
mov
rcrl
insb
pop
cmp
lea
mov
mov
js
xorl
add
call
fsubl
adc
push
mov
xlat
bound
test
xchg
sub
mov
dec
pop
sarl
pushf
inc
inc
dec
sbbl
push
mov
test
data16
pop
out
inc
pop
imul
or
xchg
dec
mov
xor
movsl
inc
push
shr
cld
or
push
loope
push
sub
adc
icebp
push
nop
add
stos
and
sub
arpl
fidivl
divb
or
pop
dec
mov
mov
add
xchg
push
mov
repz
stos
push
jne
ja
call
add
idivl
fbstp
add
cmp
std
xchg
xchg
pop
pop
jae
cmp
sub
or
loop
testb
inc
mov
or
lret
popf
and
jbe
jecxz
inc
push
hlt
xchg
popf
loope
pop
or
arpl
fucom
pop
dec
cltd
or
ret
cmp
dec
popf
icebp
cmpsl
mov
ljmp
mov
pop
jg
add
repnz
push
push
sbb
add
lods
mov
sahf
xor
dec
enter
mov
outsl
test
fnsave
push
and
mov
pop
notb
shr
dec
adc
ret
addr16
test
bswap
cmp
adc
ljmp
mov
das
pop
clc
aam
xchg
push
sbb
mov
dec
pop
fs
lret
push
aam
insb
cmpsl
ret
insb
bound
lret
adc
or
lods
je
out
stc
jne
mov
fcomi
xor
jge
mov
push
pop
and
xor
in
pop
fsubs
adc
ds
lods
fs
sbb
fbstp
xchg
pusha
dec
jnp
cmp
call
addl
jmp
scas
xchg
mov
or
ret
mov
cwtl
add
pop
test
out
insb
add
or
push
out
lock
cmp
icebp
fwait
xor
movsb
aad
inc
dec
js
test
pop
jae
sub
push
jge
cmpsl
cmpsl
xor
sub
es
out
cld
in
fildll
cmp
mov
bnd
fsubs
xchg
mov
sbb
jmp
cmp
shrl
pop
add
iret
int3
test
scas
pop
dec
out
jmp
in
out
movsl
pop
xchg
shrl
shl
ja
incl
jne
fwait
into
in
jbe
icebp
sub
cmp
xor
or
lcall
xchg
outsl
push
inc
fists
or
lcall
mov
add
jmp
or
call
shll
popa
xor
push
repnz
mov
pusha
outsb
int
orl
rcrb
aad
notb
inc
mov
fistpll
push
outsb
lcall
test
xchg
call
in
lds
insl
xchg
sbb
fs
in
mov
in
xlat
mov
jno
jge
movsb
orl
sub
mov
insb
cmp
mov
stos
xchg
ja
mov
inc
adc
mov
mov
add
lret
mov
out
out
adc
dec
mov
icebp
sbb
pop
lods
lahf
test
or
stos
add
sub
xor
mov
lcall
hlt
mov
cmp
sbb
pop
xchg
and
lds
divl
stos
push
jmp
nop
jnp
push
out
pop
push
fs
je
sub
mov
pop
rol
jnp
add
adc
hlt
fisubs
mov
sti
nop
ss
bound
sbb
mov
pusha
sub
roll
mov
cmc
idivl
push
dec
movsb
xchg
jl
mov
fisttps
push
mov
js
arpl
test
daa
insb
jmp
fimull
test
test
mov
dec
aad
sahf
fdivl
xor
push
push
shl
repz
mov
or
xchg
ja
fwait
pop
adc
push
fisubl
jle
mov
sub
dec
pop
lcall
xor
addr16
push
outsb
cmp
es
cmp
push
xchg
jecxz
imul
mov
insl
sti
and
fidivl
into
jne
push
fmulp
lret
sub
movsb
pushf
lock
pop
rorb
push
lcall
or
xchg
or
out
mov
xchg
ds
jl
movsl
push
data16
cltd
push
xor
outsl
cmc
cmp
add
inc
stos
pop
mov
sti
mov
adcb
test
pop
xchg
repz
stos
mov
clc
out
jge
mov
pinsrw
adc
out
shl
lret
cmp
xor
sbb
lods
xchg
xchg
add
std
mov
fiaddl
mov
pusha
out
call
and
outsl
jns
add
mov
call
clc
pop
mov
fsubp
aaa
test
or
testl
inc
sbb
lock
sbbb
dec
insb
sub
sbb
fidivrl
cmp
aas
jbe
es
das
xchg
lret
jns
hlt
cmp
cmp
push
mov
icebp
adcb
xor
mov
mov
sbb
jle
mov
pop
jg
pop
inc
push
push
icebp
jae
mov
jmp
inc
add
ficoml
in
cli
icebp
outsl
mov
push
cmp
or
and
daa
ss
test
gs
mov
cld
xchg
lock
push
inc
xchg
sbb
mov
ret
pop
inc
imul
into
or
stos
jno
lock
cmp
lods
pop
dec
je
cmp
je
dec
loope
cmp
push
dec
mov
sti
jg
mov
rclb
mov
in
mov
dec
add
adc
push
enter
push
cs
je
data16
stc
pusha
mov
jecxz
xor
lds
dec
or
out
or
hlt
lods
pop
imul
cmc
push
mov
nop
jge
mov
test
and
mov
sbb
lds
push
inc
mov
sub
adc
mov
int
push
xchg
push
out
lock
cmp
sub
pop
test
dec
adc
pop
push
sub
pop
addl
aam
lods
xchg
sahf
pop
inc
lahf
add
push
notl
pusha
fildl
mov
or
inc
pop
pop
cmc
mov
je
hlt
xchg
push
mov
sarb
sbb
inc
into
mov
rcrb
push
mov
pop
jne
aaa
cs
push
mov
mov
or
bndstx
aam
in
mov
imul
or
sub
in
mov
les
or
xchg
insl
stc
pushf
push
cmp
sti
ret
mov
push
push
and
cmc
jbe
jae
pop
filds
pop
stos
mov
mov
lea
int
stc
in
push
scas
cmp
dec
mov
mov
jmp
test
cmpsl
mov
add
dec
jg
test
dec
int3
sbbl
dec
mov
xchg
inc
scas
enter
pop
mov
adc
aam
xor
paddsw
fnstcw
mov
ds
jp
cmpb
and
outsl
adc
nop
push
mov
sub
and
add
sbb
jge
lcall
push
jle
inc
mulb
ret
insl
pop
mov
je
popf
aaa
cmp
lods
xor
dec
fwait
mov
push
or
shrl
or
lret
lret
fnsave
sbb
and
xchg
sbb
pop
or
push
mov
pop
movsl
sbb
rcll
subb
and
insl
sahf
xor
das
imul
mov
shll
jb
sbb
and
fdivs
ficoms
gs
or
and
xor
rorb
mov
inc
mov
dec
sub
icebp
psubsw
mov
rorl
mov
adc
lret
nop
mov
shlb
pop
pop
lock
mov
mov
js
cwtl
out
aas
dec
int3
arpl
pop
ljmp
es
dec
fildll
aad
imul
dec
sub
mov
int3
add
fsub
aaa
push
mov
out
pop
add
sbb
xor
les
mov
jne
cld
lret
xor
dec
outsb
sub
mov
mov
cmp
into
jecxz
stos
inc
adc
mov
scas
test
fiaddl
fsubrs
cltd
hlt
mov
push
jg
fisttps
imul
aam
fimull
xlat
icebp
and
insb
xchg
daa
inc
push
or
adc
push
pop
and
int
or
sbb
push
xchg
push
fidivl
mov
das
or
push
mov
in
pusha
cwtl
jg
cmovnp
xor
bound
lods
inc
loope
push
stos
sbb
push
aaa
sub
arpl
adc
popa
fmul
enter
jmp
mov
xor
lret
push
subb
out
test
loopne
xor
out
jecxz
adc
jnp
adc
mov
push
bound
loopne
jmp
add
jno
push
and
adc
lret
negl
mov
sub
add
mov
jns
stc
or
fildl
add
push
push
push
adc
pop
cli
xchg
push
cmc
mov
das
jne
and
pusha
or
les
jns
imull
scas
adc
sbb
notl
cmp
call
sub
test
dec
mov
mov
les
fcoms
cmp
insb
cmp
dec
pop
mov
fsub
inc
loopne
mov
pop
mov
push
popl
mov
xchg
mov
shlb
sbb
lahf
xor
mov
mov
mov
ja
in
pop
sti
rorl
cmpsb
add
imulb
lods
sub
outsb
test
or
or
or
cld
xor
push
dec
out
sub
sub
into
jl
popa
push
mov
add
push
enter
xchg
and
jg
cmpsb
xchg
dec
adc
mov
sbb
fidivs
sub
xchg
add
and
push
sarl
data16
mov
mov
test
push
addr16
shlb
xchg
xchg
in
in
jae
mov
push
lahf
js
jbe
int
inc
lcall
xchg
out
shl
sti
xor
clc
gs
add
sbb
ds
xor
test
dec
rorb
inc
pop
xchg
gs
pop
xchg
mov
loop
aam
xor
mov
pop
or
dec
xchg
scas
sbb
dec
dec
pop
pop
js
int
cmp
sbb
sbb
ss
das
jae
mov
iret
jno
xchg
add
xchg
insl
mov
adc
mov
add
cmp
add
iret
ds
dec
lods
icebp
adc
inc
adc
lahf
sbb
gs
fisubrl
inc
in
loop
int3
popa
add
xchg
cld
out
jnp
stc
pop
xchg
and
ret
xor
sarb
loopne
mov
bound
xor
jno
insl
sarl
jno
push
shl
sbb
movsb
mov
ja
loopne
xchg
or
mov
pop
inc
test
dec
cmp
pop
lret
inc
out
inc
imul
movswl
inc
outsl
sbb
jge
push
lahf
xor
and
lods
add
pop
stos
mov
pusha
jne
sbb
dec
pusha
bound
rcll
mov
push
je
cmpsl
scas
mov
xchg
stos
pop
adc
push
aam
adcl
add
popf
pop
mov
mov
addb
movsl
movsl
mov
icebp
mov
loope
cmp
dec
sub
call
pushf
repz
sub
push
mov
dec
adc
xchg
sbb
push
enter
mov
adc
mov
and
push
ss
inc
xor
jns
inc
xlat
cmp
xor
imul
enter
push
inc
push
xor
idiv
xor
and
stos
es
test
sarl
insl
sub
mov
pop
ret
les
inc
pusha
add
xchg
dec
xchg
inc
sbb
pop
ljmp
mulb
or
daa
fmuls
outsb
dec
push
jl
fcomps
pop
pushf
out
test
adc
mov
daa
cmp
test
push
imul
enter
cmpsb
or
in
or
rcrb
or
push
loopne
je
cltd
sub
add
popa
test
bound
out
or
and
push
arpl
or
xchg
aas
pop
push
lret
xchg
inc
in
ja
into
push
dec
xchg
sbb
vpsubd
xor
jge
inc
aam
and
leave
sbbb
int3
test
fs
cs
lea
jb
mov
xchg
test
jl
pushf
jg
sbb
loope
jle
pop
das
repz
mov
out
add
pushf
and
cmp
arpl
scas
mov
or
es
out
je
fadd
daa
repnz
lret
mov
inc
loop
dec
lahf
movsb
or
or
adc
mov
sbb
mov
dec
cmc
push
notb
xchg
data16
dec
inc
mov
jge
in
sub
xor
je
push
pop
in
lods
add
dec
icebp
dec
jne
pop
addr16
insb
test
scas
scas
filds
subb
or
or
int
outsb
stos
ficoml
pop
pushl
mov
aad
movsl
mov
ljmp
inc
mov
dec
and
mov
into
xlat
jle
loop
or
add
mov
jbe
xor
add
pop
das
popf
das
xchg
notb
add
sub
sbb
aad
mov
faddl
mov
jecxz
jmp
dec
icebp
lock
add
popf
fs
call
mov
popf
lods
stc
adc
push
sti
popf
cld
outsl
sbb
add
push
sahf
sbb
dec
xchg
incl
mov
test
das
repnz
adc
adc
sub
push
sub
cmp
cmpsb
lock
xchg
pop
lods
adc
dec
aad
push
sub
push
inc
mov
enter
sbb
test
rclb
pop
inc
in
pushl
aam
pushf
imul
call
cmp
int
shll
push
mov
pop
mov
jns
aam
sub
aas
repz
or
inc
mov
lds
mov
mov
mov
pop
mov
ret
or
pop
mov
push
rorl
lcall
subl
scas
fs
xor
cmp
xchg
pop
adc
mov
adc
sub
sbb
inc
arpl
dec
ds
test
jmp
leave
push
into
adc
repz
adc
jb
std
xchg
addr16
in
dec
repnz
xchg
sub
mov
inc
and
daa
lcall
ds
shlb
movl
into
mov
in
pop
out
push
mov
vpaddb
hlt
xchg
popa
lcall
jae
mov
xchg
xchg
cmpps
mov
sbbl
add
decl
cli
inc
xlat
cld
pop
in
xor
cwtl
push
push
loope
pop
gs
into
fwait
xor
pop
mov
mov
pop
fcomip
cmp
jns
imul
pop
test
pop
adc
loop
mov
sub
test
or
adc
shrb
jmp
push
sarl
lret
xchg
lock
adcb
ja
iret
andb
arpl
cs
xchg
cmc
mov
adc
repnz
fsubs
or
xor
movsb
mov
cmp
cmp
push
jmp
xchg
lods
mov
ret
call
pop
fbld
xchg
lea
aam
sub
and
fwait
outsb
or
into
cmc
aaa
shl
stc
sub
lods
push
outsb
outsl
jge
je
mov
movsl
test
in
mov
aaa
inc
std
inc
cmpsb
ret
xor
ds
das
out
lds
xchg
cmp
ds
subb
test
data16
loope
cmp
sbbb
int3
cmp
icebp
pop
xchg
pop
stos
ficoms
andb
lret
xorl
cwtl
cmpsl
or
dec
in
mov
cmc
ja
mov
mov
add
lods
cld
inc
mov
sbb
jnp
test
test
dec
movsb
dec
sub
setg
fnstenv
js
or
adc
shlb
aad
xor
adc
xor
jb
lods
push
push
adc
mov
stos
pop
lods
xor
ret
js
fadd
popf
cmc
jp
mov
cwtl
mov
sbb
fnstenv
jmp
dec
xchg
inc
int3
mov
xchg
cmpsl
out
inc
aad
hlt
mov
dec
lcall
out
lea
int3
cmp
insb
repz
shlb
mov
ss
sbb
push
push
lahf
fists
mov
std
fadds
test
add
sbbb
js
push
in
dec
dec
mov
xor
sahf
add
push
adc
pusha
imul
and
lea
fcompl
es
or
cmp
cmp
mov
pop
and
shll
les
mov
cs
mov
push
std
out
mov
sbb
adc
inc
cltd
xor
repnz
push
pop
fnsave
testl
daa
shrl
test
sbb
loope
pop
inc
pop
adc
sub
and
pushf
scas
push
xchg
add
and
pop
jbe
loopne
ljmp
pusha
into
mov
sbb
jbe
add
imul
repnz
es
or
adc
mov
push
mov
push
out
mov
test
xchg
jo
ljmp
mov
mov
filds
xchg
pop
mov
sbb
lea
cmpsl
add
lahf
push
inc
lea
push
inc
xor
mov
in
ss
insb
movsb
repnz
dec
mov
xchg
lret
dec
in
adc
mov
je
fpatan
cmp
pop
adc
xchg
les
inc
fsubrs
rcl
das
adc
loopne
nop
rcrl
jae
dec
mov
mul
in
adc
sbb
pop
xchg
cmp
xor
out
fwait
daa
xchg
fdivrs
outsb
mov
add
cmp
sahf
lds
pop
fdivl
pop
mov
mov
fcmovbe
icebp
push
dec
mov
daa
daa
dec
mov
imul
inc
ds
lods
outsl
retw
adc
leave
push
inc
imul
inc
xor
in
out
int3
arpl
xor
cs
int
cmp
pop
jle
pushf
rcrl
and
loop
testb
testb
mov
xchg
mov
in
inc
pusha
mov
push
cmc
js
or
out
xchg
sub
negb
xchg
pop
nop
inc
pop
mov
pop
cmc
mov
testb
xchg
adc
pop
push
mov
adc
popf
lods
andl
call
lods
cld
outsl
mov
dec
xchg
mov
pop
jo
stos
mov
dec
jp
jge
lods
inc
pop
in
fwait
cmp
pop
scas
js
dec
sbb
pop
push
ret
pop
movsb
rorl
fidivl
pop
mov
pushf
shrb
or
push
xor
mov
out
fsub
je
sbb
je
mov
push
jno
or
dec
movsl
shrl
leave
fnsave
nop
incb
pop
cmp
loopne
hlt
xor
dec
push
pop
sub
sar
pop
stc
lret
jo
or
rorb
mov
xor
repz
lahf
arpl
inc
inc
add
mov
in
aas
push
out
push
cmpsl
test
outsb
xor
ret
hlt
fimull
or
add
or
sahf
push
xchg
sti
repz
xchg
mov
ret
popl
push
aad
cmpsb
jmp
mov
inc
out
lahf
mul
ds
stc
mov
neg
call
and
insb
cld
jp
insb
pop
push
sahf
add
xor
sbbb
mov
in
lds
mov
jnp
mov
icebp
call
cmc
mov
nop
aad
cltd
jo
testb
stos
test
adc
jae
es
and
mov
pop
fsub
xchg
pop
ja
dec
movsl
add
out
push
fsubrl
fldt
or
sub
ficomps
std
aam
xor
mov
mov
andl
sti
xor
add
pop
repnz
lahf
int3
test
lds
or
shll
mov
cmp
addl
insb
inc
dec
pop
add
inc
fisttpl
dec
outsb
sbb
test
lahf
xchg
gs
aas
int3
xor
in
dec
inc
mov
lahf
imul
popa
clc
out
movsl
push
and
push
test
loopne
cmp
std
mov
add
jae
sbb
mov
sahf
fidivl
es
test
jnp
aas
movsl
inc
test
fildll
hlt
mov
insb
jmp
jmp
sbb
pop
jmp
mov
push
fadds
jbe
int3
movsb
adc
or
xchg
iret
and
adc
add
and
or
or
fcom
push
fcompl
xchg
sub
push
repz
sub
pusha
std
xchg
cmp
dec
ljmp
ss
ss
push
pushf
and
into
xor
push
in
sbb
and
cmpsl
data16
std
es
scas
jnp
std
nop
outsl
fdivl
mov
popf
mov
inc
or
das
mov
das
popf
cmpsb
inc
xchg
xchg
jnp
dec
call
sub
insl
adc
insl
ss
sbb
xor
push
or
dec
mov
pushf
bnd
ret
pop
loop
cmp
xor
mov
mov
sarb
faddp
xor
pop
push
push
cld
dec
or
mov
insb
lods
mov
adc
pushf
xorl
incb
xchg
out
sub
cmp
inc
pop
test
shlb
inc
roll
mov
in
pop
lock
push
sub
js
fcoms
mull
jno
movsb
push
sbb
stos
cli
and
stos
push
add
rcrb
js
lods
test
sbb
jbe
out
push
inc
push
jns
insb
and
movb
addb
fldcw
inc
test
ja
filds
lret
xlat
data16
mov
and
imul
ret
dec
loope
cmp
push
mov
inc
or
xor
mov
movsl
xor
imul
dec
xorb
jmp
aad
jmp
notl
daa
jmp
xchg
push
insb
sub
mov
loope
mov
cmc
shufps
jp
mov
leave
scas
loop
push
icebp
jo
test
xchg
mov
div
pop
mulb
push
xchg
inc
inc
and
lods
sbb
addr16
sbb
inc
mov
sti
pop
cmpps
inc
push
ss
bound
loop
lods
jo
mov
adc
and
inc
das
lods
mov
pop
fiaddl
popl
pop
icebp
jae
add
xchg
js
movb
in
add
aaa
and
stc
add
push
pop
xchg
test
jns
enter
movsb
mov
cmp
cmp
insb
pop
adc
andl
in
push
add
push
xchg
add
test
xchg
dec
cmp
insb
xorb
jecxz
pop
movzbl
je
mov
iret
js
add
add
call
stos
mov
movsl
out
sahf
jnp
add
fwait
pop
mov
mov
inc
ds
jo
sbb
push
or
adc
mov
jae
maxps
int3
imul
bound
sub
xchg
xor
pop
repz
lods
cli
and
shld
cltd
pop
sbb
sub
sbb
and
lahf
push
and
mov
popa
add
cvtss2sd
dec
xchg
roll
mov
aaa
xchg
pushf
in
inc
pop
orl
mov
leave
push
test
jo
sub
jmp
adc
jno
mov
lock
aad
sbb
shrl
and
hlt
popa
inc
jno
cli
cmp
lcall
and
dec
cwtl
movsb
out
inc
fnstsw
mov
push
shrl
pushl
sub
and
inc
ljmp
divb
movsb
lds
xchg
jo
jbe
sbb
xchg
add
scas
xorl
push
add
sbb
std
bound
or
repz
fucomi
leave
aaa
push
rorl
sub
imul
mull
lds
sub
cmc
iret
and
cltd
lahf
mov
jo
dec
out
pushf
ds
or
xor
xchg
inc
push
mov
cld
inc
xor
in
inc
sbb
cmpsb
jg
xchg
dec
adc
jno
push
out
std
add
mov
sahf
jbe
cmpsb
mov
mov
cmp
jle
inc
pop
or
sbb
popf
adc
xor
xchg
sahf
xchg
add
fcomp
xor
mov
mov
sti
loopne
icebp
inc
mov
add
inc
push
xor
fs
in
das
sbb
imul
ja
movsl
je
sti
movsb
pop
xchg
insb
scas
adc
lock
cmp
adc
enter
jbe
cld
mov
addr16
fisttpl
adc
jnp
and
cmp
mov
xchg
outsl
fisttps
mov
enter
vcvtps2dq
xchg
arpl
adc
push
add
dec
pop
test
scas
pushf
retw
dec
xor
add
cmp
and
maxps
push
mov
loopne
jbe
mov
or
test
mov
dec
pop
cld
mov
pushf
ds
push
xchg
notb
push
dec
xor
leave
gs
mov
push
and
jnp
push
andl
add
xorl
sub
jle
mov
scas
pushf
jg
add
mov
in
pushf
test
sbbl
outsb
sub
mov
xor
mov
cmp
loopne
add
sub
or
mov
cmp
orb
cmp
in
ja
out
fcmovb
rorl
xchg
shrb
inc
jmp
dec
fwait
lcall
aaa
ljmp
mov
pop
mov
xchg
call
fstps
fidivrs
aas
dec
push
rep
loope
bound
insl
testl
fstpl
jl
pushf
mov
dec
dec
stos
incl
or
xchg
arpl
test
lret
std
mov
das
lods
xchg
testl
stos
fidivrl
or
fs
std
test
int
push
jo
arpl
out
out
cmp
xor
sub
int
std
adc
scas
xchg
inc
push
sar
dec
mov
push
ljmp
movl
jmp
lret
cld
sti
xchg
adc
push
lods
enter
xchg
outsb
xor
add
lods
pop
sbb
xchg
pop
scas
inc
mov
fmulp
and
mulb
into
adc
pop
and
jecxz
out
or
dec
mov
aad
shl
mov
movsb
sbb
sbbl
push
mov
cmpsl
inc
or
mov
push
adc
jb
jae
enter
jmp
xor
add
scas
call
ss
in
xor
mov
xchg
sub
aad
xchg
test
sbb
adc
cmp
notl
pop
xor
ret
hlt
pop
sub
cmp
jb
sbb
mov
sbb
sbbl
lahf
push
aad
mov
int3
arpl
jecxz
loop
push
or
aam
pop
add
mov
xor
negl
fsubrs
sar
cmp
dec
fistps
dec
ffree
pop
push
jo
lds
inc
adc
push
fbld
adc
icebp
movsl
jne
test
fwait
push
or
push
mov
mov
pop
mov
cwtl
das
jae
mov
lcall
push
ds
out
scas
xor
pop
aad
pop
fisttpl
mov
movsb
mov
xor
ret
push
pop
jb
lahf
pop
xor
and
test
scas
mov
xchg
addr16
ds
test
cmpsl
jne
sub
insl
les
mov
push
cmp
leave
mov
cli
jmp
in
lds
mov
cmp
xchg
fcmovnb
sti
mov
loop
cmp
enter
fdivrs
and
enter
pop
adc
push
pop
mov
into
jge
int3
dec
cld
xor
loopne
nop
adc
add
imul
sub
stos
mov
mov
pop
in
mov
and
xchg
push
and
sarb
testb
mov
pusha
pop
mov
into
xchg
inc
cltd
lds
pop
jg
xchg
or
add
mov
inc
adc
jns
sbb
mov
ds
sti
outsb
sbb
jnp
xchg
sub
loop
mov
mov
cmp
aas
std
fwait
test
movsb
mov
jnp
xor
sub
xchg
mov
mov
fwait
jp
cmp
xchg
lahf
xchg
lods
xchg
mov
andl
hlt
mov
out
jge
shll
dec
and
fldcw
push
mov
fistl
testl
out
in
mov
jbe
fimuls
in
ljmp
sbb
ja
push
mov
mov
xchg
and
pop
sbb
and
inc
pop
sbbb
or
inc
ds
or
dec
inc
cmpl
daa
inc
scas
xor
adc
cli
daa
fsubrs
repz
or
jns
mov
add
ja
pop
sbb
dec
in
sti
pop
sbb
es
lods
inc
bound
cmp
xchg
adc
shl
imul
push
ret
aam
cld
xchg
scas
xchg
mov
jp
push
adc
popa
mov
fnsave
das
cmp
sbb
jne
hlt
sahf
pusha
es
cld
jnp
jl
fadd
jne
jbe
insl
mov
les
out
dec
cmp
fcoml
sbb
movsb
or
decb
imul
add
inc
cltd
lcall
enter
lret
jae
or
lret
out
aas
or
lds
popf
fwait
jbe
in
jmp
xchg
pop
scas
cmpsl
sbb
leave
jno
ret
mov
repz
dec
negl
push
add
cmpsb
cmc
xchg
lret
js
mov
pop
clc
xor
dec
gs
jmp
push
andl
sbb
mov
cltd
mov
mov
xchg
xor
setno
mov
fisttpll
mov
add
push
cmc
pop
mov
xchg
sti
pop
fisubl
pop
inc
mov
jne
jle
leave
mov
mov
sbb
outsl
add
add
jno
fidivs
call
lds
xchg
mov
int
aas
loope
push
sbb
push
call
inc
jmp
jecxz
cmpsb
cltd
data16
inc
xchg
adc
inc
ret
iret
out
sbb
aaa
gs
bt
xor
mov
jg
fidivrs
iret
adc
leave
fucomi
xchg
lret
lock
es
pop
or
jg
notl
pusha
or
test
push
in
lret
sti
stos
stc
sbb
and
lcall
jae
insb
sbb
adc
jecxz
mov
imul
ret
xor
adc
popa
pop
imul
hlt
js
jmp
push
fisttpll
sbb
and
dec
inc
pop
jno
loopne
outsl
and
dec
mov
out
sbb
push
pushf
das
mov
inc
or
mov
cmp
ret
lock
lock
or
xchg
jle
cmc
add
ret
lods
in
pop
xchg
sbb
fildl
int3
call
jecxz
mov
loopne
pop
or
push
sahf
sub
mov
or
jecxz
les
loop
sahf
mov
lock
nop
daa
fcoml
sub
dec
adc
loope
sub
sub
push
das
add
scas
testl
pop
xorl
adc
sub
pusha
pop
fldenv
cmp
rcr
jnp
orl
adc
and
mov
insb
lds
test
mov
jnp
cmp
insb
pop
add
jp
jmp
hlt
push
inc
dec
in
sbb
adc
movsl
notl
xorb
aad
addl
and
pop
imul
into
xor
push
nop
mov
mov
rcr
lds
adc
mov
pushw
ss
push
rorb
add
sub
bound
pop
adc
repz
xchg
fwait
nop
out
push
faddl
call
dec
popf
push
dec
aam
out
rol
jmp
adc
pop
adc
addr16
jb
test
xorl
add
pushf
orb
adcb
jmp
xor
jno
dec
loopne
loop
fs
fsubrs
xor
pop
or
cmp
out
out
add
xchg
lock
sahf
xlat
mov
std
aaa
movsb
cs
out
fistps
mov
leave
dec
jmp
jmp
movsb
rclb
in
cmc
mov
cld
sahf
mov
testb
es
fldt
les
nop
and
sub
mov
xchg
push
fmuls
and
add
xchg
insl
mov
cmpsb
addb
sub
jbe
dec
adc
stos
xchg
pop
adc
push
mov
outsl
or
inc
pop
lret
out
lock
ret
mov
lods
setp
xor
inc
in
xorl
and
iret
cltd
test
icebp
push
jmp
mov
sahf
adc
jmp
ljmp
pop
sub
jmp
push
push
stos
imul
or
mov
and
shl
dec
rol
pop
push
pop
insl
xchg
push
test
out
jmp
jg
aas
xor
or
jno
inc
or
jl
sub
addb
cmp
ja
lea
mov
stos
inc
jg
repz
inc
push
cwtl
mov
dec
sti
mov
lret
push
out
das
daa
push
cmc
pusha
mov
dec
std
jo
inc
jp
jae
scas
and
sbb
pop
adc
inc
gs
sub
or
rorl
mov
inc
testb
arpl
cmp
int3
scas
mov
push
cmpl
ss
push
movsb
in
cmp
dec
in
xor
xorl
mov
data16
xchg
push
aam
mov
jne
cmp
xchg
cli
mov
pop
xchg
dec
lea
lcall
fsubl
sub
test
lods
cmp
out
je
xchg
scas
orl
sub
test
frstor
pop
rclb
lret
cmp
je
add
dec
pop
jp
loope
xchg
shl
sbb
sub
mov
mov
movsb
loop
fsubrl
call
arpl
dec
arpl
ds
repz
rcll
mov
imul
push
fcoms
aaa
fcmovu
push
lret
js
and
movsl
cld
enter
sbb
push
and
sbb
lods
inc
xchg
pop
pop
cmpsl
add
or
test
mov
test
roll
cmpsl
fwait
gs
xor
in
jns
outsb
out
test
inc
or
adc
fwait
enter
fldl
iret
fldl
gs
hlt
bound
fcmovbe
inc
inc
add
mov
xor
xchg
pop
test
add
inc
sbb
sti
lds
mov
les
or
add
xchg
sub
xor
loop
ret
mov
outsb
adc
outsb
jp
lods
arpl
lods
cmp
outsl
push
push
addb
jne
es
pop
orb
mov
jo
push
jecxz
jle
mov
jecxz
iret
stos
dec
in
out
popf
jno
clc
and
rolb
dec
popf
and
push
cmp
aaa
sbbb
mov
out
dec
mov
stos
icebp
pop
push
and
fcoml
pop
in
dec
mov
rclb
or
mov
xchg
test
vmaxps
mov
add
or
cmpsl
loope
subl
xchg
lds
ljmp
jmp
push
xchg
outsl
test
je
and
rclb
or
push
scas
subb
gs
fwait
sub
out
inc
mov
adc
mov
fidivrl
iret
pop
fsubrs
sbb
imul
call
jge
jg
test
and
jae
fimuls
in
pop
sub
jnp
xor
lcall
and
aaa
mov
and
daa
sub
test
add
pop
out
fadds
push
or
jbe
hlt
fwait
stos
inc
or
or
adc
rorb
jne
test
dec
cli
movsl
sbb
sub
fists
xchg
sub
shll
ret
jp
xor
ja
cmpsl
adc
dec
es
xor
mov
insl
rcrb
inc
adc
mov
push
dec
out
cmp
jge
adc
popa
inc
rolb
cmpb
pop
xchg
mov
sub
fcoms
inc
pop
inc
sbb
les
push
or
loope,pt
pop
lods
int
dec
fisubrl
or
shll
call
jo
imul
icebp
jp
mov
adc
and
rcl
xlat
outsb
jns
add
xchg
sbb
outsl
push
rcll
pop
mov
test
aaa
or
loop
inc
cli
dec
add
push
aas
sbb
cmp
cmp
or
fnstsw
fcmovbe
mov
jg
jmp
inc
dec
push
lods
sti
out
pop
sahf
sbb
adc
stos
mov
pushf
xchg
mov
pop
mov
repnz
mov
sub
jge
mov
push
imulb
loope
pusha
ljmp
aaa
pop
xor
and
inc
add
jbe
lock
push
adc
xchg
rep
loop
pop
lret
insb
fistpll
or
or
cmp
or
xchg
lds
and
jnp
mov
xor
inc
aaa
into
js
sbb
imul
jae
sbb
pop
ljmp
jecxz
ja
push
call
mov
pop
sti
xchg
jge
test
adcl
test
repz
outsb
mov
push
add
cmc
aaa
xchg
cmc
in
sbb
mov
push
cmp
dec
std
out
clc
and
in
mov
add
jg
xchg
dec
in
mov
insb
or
adc
nop
stc
stos
jb
or
shrl
xchg
fwait
icebp
mov
push
xchg
jne
lds
xor
out
sbb
mov
in
ret
ret
push
jno
mov
loope
inc
loope
add
sub
xor
enter
or
xor
test
xor
test
stos
or
stos
popl
cs
xchg
sub
push
fcomps
test
mov
and
scas
adc
dec
cmp
sbb
sub
mov
add
insb
imul
inc
popw
jo
pop
mov
pop
or
push
mov
and
jb
iret
cmp
pop
divl
jmp
adc
inc
fldcw
into
jmp
test
cli
dec
loope
arpl
movsb
xchg
call
hlt
pop
xor
xor
pop
aaa
jno
inc
mov
jno
gs
fildll
mov
push
repnz
subb
je
lods
insb
cmpsb
cmp
sbb
cmp
cmp
dec
test
ds
das
rorb
pushf
jno
cld
jge
lahf
push
stc
sbb
movsl
jae
sub
add
and
or
mov
in
fwait
jns
in
mov
lcall
or
addb
rorb
shll
fdivrs
pop
jno
and
bound
cmp
movl
add
pushfw
iret
lds
cmpsb
push
jmp
and
sub
lcall
jmp
push
data16
js
lea
dec
aam
mov
pop
sti
mov
int
lahf
fnstenv
cmc
in
fnstcw
and
jp
insl
and
jo
mov
xor
and
adc
and
out
pop
out
ja
mov
mov
push
xchg
pop
lea
push
and
ja
push
sar
mov
scas
xchg
movsb
mov
fsubrl
subl
into
fwait
call
cmpsb
incb
add
xor
decb
push
ret
adc
pusha
lret
out
inc
sub
in
addr16
cwtl
lahf
push
lods
pop
mov
ss
in
arpl
xor
sub
movsb
pop
clc
xchg
xchg
stos
jp
inc
sbb
mov
xor
or
add
xchg
ss
xchg
sub
xor
dec
cmp
mov
pop
fadds
or
je
clc
arpl
xchg
insl
sub
jge
cmp
mov
mov
mov
fnsave
push
push
xor
mov
xchg
pop
insb
add
xchg
push
mov
inc
push
cli
loopne
in
ljmp
fimull
dec
in
pop
daa
sub
movsl
insb
add
outsl
xchg
cmc
adc
mov
jp
loope
into
pop
cmp
test
inc
call
xor
dec
lahf
pop
xor
sub
pop
mov
fldz
inc
lcall
and
lods
mov
sub
dec
mov
or
test
in
cwtl
mov
add
or
fsubrs
fiaddl
xor
xchg
xchg
cmp
inc
test
xchg
mov
rorl
loope
dec
dec
aaa
xchg
dec
sbb
aas
push
adc
in
sti
cmp
popa
js
cmp
les
enter
push
cltd
cli
stos
fcompl
and
jno
in
xchg
lea
add
stos
xchg
cmpsl
inc
or
inc
mov
movl
daa
dec
in
adc
push
and
insb
add
sarl
and
jnp
ret
fistl
out
shl
movsb
test
mov
lds
cmp
push
mov
inc
movsl
push
sti
cltd
cmp
enter
inc
ljmp
loopne
sub
fwait
arpl
into
xchg
push
aad
or
out
shll
push
int3
mov
add
sbb
je
and
int3
mov
and
lea
aad
xchg
xor
shr
hlt
pmulhuw
push
sbb
inc
fidivl
dec
mov
pop
and
xor
sub
xchg
aaa
iret
jno
mov
push
pop
add
xor
adc
arpl
inc
int3
fs
outsb
subb
jmp
or
sub
gs
aas
pushf
call
cmp
or
call
sbb
popa
shll
push
ss
icebp
nop
out
add
iret
dec
aaa
add
std
cltd
xor
xchg
jno
pop
arpl
and
inc
inc
sub
xlat
cmp
imull
mov
adcb
mov
loop
repz
loop
addr16
iret
add
and
jne
leave
and
cmp
sub
sub
sar
mov
sub
iret
subb
pop
shlb
pop
pop
js
or
fsts
repnz
lahf
pop
fucom
mov
idivl
sbb
enter
lahf
pop
push
pop
lock
or
into
pop
cmc
mov
insb
xchg
mov
mov
rclb
xchg
lds
lret
int
sbb
aam
icebp
mov
dec
mov
push
add
scas
loop
int
xchg
xchg
subl
jns
out
test
ljmp
das
shl
xor
push
rcrb
mov
jae
fsts
lods
or
cmpl
movsb
xor
sahf
dec
mov
dec
enter
sub
mov
je
xor
je
lods
ljmp
xchg
push
or
pop
push
mov
je
cmp
int
lock
mov
push
push
or
fwait
xor
imul
shlb
imul
push
out
mov
xor
fstps
shrb
mov
subb
pop
fwait
mov
push
fidivl
xor
xor
pop
out
test
bnd
addr16
mov
sub
jg
sarb
dec
int
sbb
int3
into
sub
fbld
inc
xchg
push
fs
mov
loopne
xor
cltd
in
cmpsl
ret
les
or
mov
es
push
xor
or
dec
mov
and
push
mov
loopne
xlat
icebp
jl
sub
pop
cmc
pop
dec
in
std
push
dec
jle
cmpsb
pop
cmp
xchg
sbb
mov
lock
fldcw
jo
add
xchg
out
jo
pop
pop
je
cltd
dec
xor
cmp
jno
inc
pop
ret
add
sub
aaa
pop
dec
mov
inc
add
shlb
lock
outsl
add
out
pop
sbb
repnz
in
mov
mov
das
mov
in
out
movsl
popf
xor
or
loopne
add
cmp
faddl
sbb
shlb
inc
adc
in
daa
or
push
sbb
notl
xchg
nop
cmc
cmp
stos
frstor
pop
aaa
jne
stos
pop
cmp
ljmp
fcmovnb
test
scas
bound
icebp
lahf
xorl
cmc
cmp
jg
cmp
pop
mov
sub
shll
sbb
mov
insl
rclb
rorb
repz
pop
ds
pop
sbb
dec
sahf
stos
dec
dec
jg
push
ja
pop
sarl
inc
push
popf
scas
mov
repz
and
je
cmp
adc
stos
and
icebp
pop
push
and
cmp
rcrl
mov
pushf
dec
or
cwtl
push
push
dec
clc
js
cmp
in
shrl
push
shlb
pop
adc
push
cmp
inc
adc
push
push
popf
test
xlat
mov
xchg
push
push
and
mov
or
sub
cmp
pop
push
sub
mov
jb
cmp
lock
add
inc
sahf
xchg
das
sbb
addr16
lcall
rorl
add
push
jmp
in
xchg
mov
xorb
stc
pop
fisubs
mov
enter
int3
scas
push
adc
adc
cmp
loope
xor
inc
movsb
or
out
mov
ret
repz
pop
xchg
das
pop
in
push
loope
sub
scas
out
xchg
jp
cmp
jne
ja
mov
push
ljmp
jno
fucom
pop
das
add
add
aas
push
loop
negl
xchg
hlt
mov
pop
sbb
jae
cmp
ret
sub
incb
iret
push
sub
add
jne
outsb
inc
or
stos
shrl
sbb
adc
lock
mov
sbb
push
pop
loopne
movntps
mov
ret
push
lods
hlt
or
sub
sbb
dec
inc
cmc
mov
fiaddl
lcall
cwtl
xlat
xchg
daa
mov
dec
or
jno
jp
pop
lock
pop
push
cwtl
mov
aad
mov
or
or
or
push
ds
jno
mov
mov
mov
mov
sbb
add
cmp
mov
cwtl
addr16
inc
lret
pop
sub
xor
inc
mov
xor
sub
and
jb
stos
mov
add
stos
in
cs
ret
test
mov
in
xor
rcrb
pop
push
push
pop
xchg
push
sub
mov
mov
mov
imul
sub
mov
xchg
nopl
push
fiadds
int3
pop
lahf
mov
popa
add
mov
adc
pop
cltd
cli
inc
dec
sub
pop
aad
pop
enter
pop
jecxz
outsb
dec
sarl
mov
call
pop
daa
rdpmc
scas
lods
dec
sub
jl
sbb
pop
into
and
pop
jne
hlt
cmp
imul
jns
popa
mov
ret
mov
fmul
in
push
dec
push
sub
popf
add
inc
pop
add
pop
xor
inc
pop
aas
jle
or
loop
pop
adc
mov
pop
sub
outsb
and
incb
test
sub
sub
pop
or
fnsave
push
cli
addr16
push
mov
imul
outsb
lods
inc
or
pop
jp
lret
lea
ret
mov
push
je
cs
mov
mov
add
pusha
shrl
inc
lods
push
imul
dec
into
xorb
cmpsl
mov
repz
insl
mov
in
test
sahf
stos
xor
repnz
in
push
xchg
test
push
jle
and
mov
ljmp
popf
sub
call
mov
sbb
pop
subl
or
or
lahf
les
or
insb
push
xor
lds
movsl
push
stos
aaa
and
les
mov
mov
shlb
add
in
jnp
leave
lods
or
into
cmp
stos
and
leave
cmp
leave
cmc
lahf
test
ja
mov
pusha
daa
pop
adc
inc
push
jle
xchg
scas
imul
loop
in
out
push
fs
and
or
ret
cmp
push
aam
test
mov
inc
add
pop
out
jl
aad
or
das
inc
lahf
xlat
lds
gs
and
mov
enter
add
or
fwait
test
test
rsm
xor
shll
pusha
or
or
frstor
adc
and
es
insl
cwtl
cmc
adc
dec
lcall
les
aad
fistps
int3
movsb
and
into
adc
jns
jb
dec
add
fwait
enter
jae
or
cmpb
fimull
and
lods
jg
xchg
mov
mov
movsl
xor
test
or
and
mov
sub
outsl
mov
pop
lret
inc
jg
jnp
fidivs
and
pop
scas
mov
rcr
or
movsl
pop
mov
pop
enter
mov
data16
mov
dec
test
testb
xlat
cld
sub
test
and
loope
popa
sub
or
mov
and
ss
fisubs
push
jae
sbb
sbb
inc
outsl
inc
scas
in
pop
mov
sarb
loopne
mov
dec
loop
je
lods
and
imul
xor
or
sbb
repz
in
andb
loop
iret
inc
aaa
out
jl
jmp
sarb
xor
lods
icebp
ljmp
xlat
rclb
sahf
insb
in
cmpsl
fisubrs
int
mov
mov
xchg
sbb
pop
pop
jg
das
shlb
adc
les
inc
std
push
das
xchg
mov
mov
pop
xchg
mov
add
clc
addr16
js
scas
mov
out
dec
cmp
pop
cmp
cltd
sub
gs
enter
leave
mov
rorb
fdivp
movsb
pusha
mov
andb
sbb
dec
push
popf
mov
insl
pop
pop
adc
mov
adc
push
lret
cmp
cld
stc
lret
sbb
or
cmp
iret
pop
mov
sub
lcall
xlat
pop
pop
mov
pop
sti
mov
in
dec
rclb
lock
and
and
and
nop
out
push
ljmp
imul
mov
dec
jb
sti
inc
cmp
js
cmp
mov
ret
inc
jp
jns
and
imul
pop
fsubl
leave
push
clc
push
inc
arpl
iret
nop
fldcw
adc
int
pusha
push
outsl
out
insb
rclb
mov
cwtl
and
jmp
mov
call
or
sti
and
xchg
data16
adc
repnz
sub
pop
jb
rcrl
outsb
mov
xchg
xor
out
or
adc
ds
add
fcoms
mov
push
mov
clc
iret
push
jg
jecxz
push
add
cmp
adc
jl
add
mov
jns
pop
lahf
test
xchg
ret
xor
pop
sbb
push
nop
mov
fisttps
iret
push
fsts
jnp
mov
xchg
test
js
push
ret
adc
push
repz
sbbb
data16
lea
jbe
and
or
in
mov
mov
int3
out
jmp
imul
ret
mov
fiadds
adc
lahf
outsl
stc
imul
dec
inc
sahf
imulb
mov
jnp
nop
popa
mov
pusha
or
les
xor
dec
test
shr
fcmovnbe
ret
std
jmp
das
aam
add
lea
or
lret
cwtl
xor
xchg
mov
sbb
mov
jmp
sbb
push
call
pop
mov
mov
aas
leave
sub
mov
sbb
pop
sbb
dec
into
gs
jmp
cmpl
neg
pushf
or
adc
sub
inc
imul
inc
in
cmp
cmpsl
adc
jmp
pushf
pop
xchg
jb
add
ret
push
out
daa
push
out
mov
jmp
xor
in
das
push
push
lret
nop
cs
daa
out
xor
jge
push
mov
leave
int
inc
inc
stc
inc
mov
push
adc
inc
xchg
xor
mov
xchg
movsl
sbb
arpl
push
cmp
lcall
stc
sub
pop
addb
aad
adc
xor
in
mov
mov
cli
or
mov
mov
and
cmp
mov
jo
adc
adc
mov
bound
shll
test
or
push
sbb
mov
xor
scas
jno
loope
call
xlat
jg
jecxz
adc
jmp
movsb
cmp
aad
and
fbstp
cmp
std
xchg
pop
shlb
xchg
sbb
mov
push
popf
jns
lods
ljmp
and
or
ljmp
and
imul
sbb
or
sbb
xor
test
jl
out
inc
cld
inc
xchg
sbb
std
cltd
adc
in
inc
pop
mov
leave
int
xor
nop
or
lcall
repnz
in
mov
mov
sbb
pop
lods
lds
push
lds
mov
scas
notl
cmp
fincstp
mov
mov
push
fcmovnu
lea
xchg
scas
in
repnz
ds
push
into
lea
xor
popf
push
mov
vshufps
shll
das
inc
inc
cmp
das
and
das
push
jb
pop
adc
mov
jle
xor
cwtl
fistps
xchg
mov
adc
jnp
xor
push
ret
pusha
mov
lret
fwait
jo
mov
or
xchg
nop
mov
outsl
sub
jl
test
adc
sarb
arpl
mov
test
decl
adc
push
adcb
adc
jae
push
and
cmp
shl
jbe
jmp
jae
adc
sub
and
shlb
sub
mov
shll
adc
ja
xchg
inc
je
out
jle
sbb
call
mov
push
outsl
test
jne
sbb
jns
cltd
leave
fucomp
idivl
fbstp
ret
mov
jg
cmp
movsl
mov
sbb
das
and
push
mov
mov
mov
das
ljmp
mov
into
cs
loopne
je
push
and
repz
cmp
pop
into
xor
ret
lcall
add
cmpsl
push
pop
push
int
cmpsb
sti
xchg
fld
jo
insb
scas
sbb
push
inc
aaa
into
jae
insb
sbb
in
dec
sbb
jno
sub
jle
dec
enter
outsb
pop
cmpsl
mov
jecxz
or
roll
mov
adc
mov
cmpsb
jne
andl
icebp
insl
scas
mov
adc
mov
inc
insl
mov
addr16
orb
hlt
das
icebp
jecxz
pop
xor
outsb
mov
stos
mov
enter
sbb
mov
sub
fdivrl
sub
mov
xor
mov
dec
ficoms
mov
or
jo
push
mov
mov
and
nop
xchg
sub
lret
sbbl
inc
inc
jp
jmp
jae
add
loope
mov
pop
or
adc
rorb
jp
insl
pop
lock
mov
ja
fbstp
xchg
mov
rorl
nop
daa
xchg
jo
cmc
mov
mov
sub
inc
pop
test
outsb
jns
mov
push
leave
pop
xor
mov
push
mov
jecxz
pop
sub
adc
int3
xor
push
notl
pop
jne
add
pop
fs
sbb
pop
or
sub
or
outsb
or
jge
sbb
mov
test
xchg
insb
jle
lahf
out
jbe
cld
inc
sub
inc
sbb
stc
or
popa
adc
sub
jmp
xchg
addr16
add
mov
and
sbb
xor
loopne
add
cltd
loope
loop
test
mov
and
mov
pop
int3
je
pop
lods
dec
pop
pop
mov
cmpsb
sub
push
aad
or
jae
testb
sbb
arpl
mov
call
mov
jne
mov
cwtl
aam
cwtl
das
add
mov
mov
cmpsl
jns
in
jns
adc
andl
inc
insb
shlb
dec
inc
rcrb
inc
dec
jmp
sbb
inc
imul
popf
imul
xchg
test
decl
movsl
xor
out
xchg
lods
adc
dec
xor
pop
mov
push
mov
xchg
loopne
jg
pusha
mull
mov
mov
in
mov
in
js
leave
pop
adc
repz
inc
mov
ret
xlat
roll
je
jge
jl
pop
lds
xor
pop
xchg
pushw
call
scas
sarb
iret
cmpsb
js
adc
fsubr
jp
inc
xchg
sub
pop
mov
inc
icebp
scas
subb
repnz
stc
scas
inc
cmp
mov
push
repnz
and
ret
arpl
mov
mov
mov
in
fs
mov
call
mov
mov
shlb
push
xor
bound
aam
cmp
push
loope
test
ret
ret
int3
outsl
sbb
jb
enter
sub
pop
fldl
or
leave
fidivl
push
ret
js
inc
mov
rorb
sbb
push
jmp
jp
sbb
orb
jnp
adc
or
mov
outsb
mov
into
loopne
add
repz
roll
repnz
sbbl
push
add
xchg
mov
movsb
testl
mov
dec
pop
cmpsb
sub
movsl
xchg
add
std
dec
lods
inc
jg
xor
ret
pop
push
clc
mov
pop
mov
test
loopne
mov
xchg
and
int3
fsub
jae
out
mov
adc
bound
data16
ret
push
cmp
push
popa
inc
loopne
daa
xchg
sub
jmp
push
add
stc
rorb
popa
xor
cs
fisubs
imulb
push
sbb
call
jo
dec
imul
xchg
movsl
mov
or
and
pop
mov
mov
loopne
push
das
into
jecxz
mov
out
test
stos
inc
pop
xor
xor
and
or
aam
jecxz
loop
sub
xor
dec
in
gs
jb
dec
imulb
sbb
pushf
ljmp
xchg
orb
push
fisttpll
mov
xchg
push
sub
push
mov
aaa
pushf
imul
jecxz
imul
add
lcall
popa
add
in
adc
sbb
das
mov
gs
cmp
mov
push
cmovp
stos
das
fidivl
daa
fldl
dec
push
cmp
xchg
sbb
loope
add
rolb
push
dec
xlat
jnp
jae
pop
jp
cmp
xchg
xchg
mov
jge
mov
sbb
sub
dec
mov
jno
arpl
xor
cmp
daa
cmp
aam
out
or
loope
or
daa
sub
dec
cmpsl
ja
je
ljmp
jb
outsb
sahf
pusha
fisttpl
pop
xchg
insb
shrb
cmc
iret
xchg
push
jb
in
arpl
das
stos
jno
ljmp
adc
push
dec
out
rclb
cmc
dec
out
push
fbstp
or
jbe
ljmp
imul
mov
pusha
lret
and
cmp
iret
xchg
popa
mov
sub
xor
lods
and
mov
mov
je
movsb
xchg
cmp
ret
aas
sbb
lods
es
sub
fcomip
fsubrl
sub
popf
mov
and
or
jp
mov
jmp
daa
sbb
popf
push
inc
mov
push
lods
call
xchg
insl
repnz
pop
mov
cmpsl
jp
es
mov
add
jno
and
adc
mov
lret
dec
mov
test
les
repz
jg
ret
mov
or
iret
mov
fimull
testb
adc
jns
jbe
sarb
fidivs
popa
fmull
sbb
jp
and
dec
fdiv
jg
xor
and
lods
xchg
les
mov
dec
repnz
inc
arpl
push
fcomps
mov
pop
jl
xchg
add
movsb
mov
mov
push
aam
push
sub
sub
and
rcll
mov
xchg
xchg
mov
not
aad
insl
testl
or
arpl
das
adc
out
outsb
test
int3
add
adc
lods
cmp
insl
adc
mov
fimuls
and
jns
popf
int3
lahf
mull
inc
clc
stc
or
jae
pop
movsb
repnz
mov
loop
test
and
sti
mov
ret
xor
xchg
sub
push
ret
outsb
leave
cwtl
loopne
dec
sub
push
dec
add
lcall
push
xlat
and
or
sbb
out
pop
push
data16
in
jg
fnstcw
mov
adcb
enter
jb
lahf
xor
inc
jo
inc
dec
sbb
int3
adc
and
rcrb
insb
sub
push
pop
cmp
xchg
lods
cmp
lock
daa
mov
xor
je
idivl
fdivs
stos
lods
lds
insl
inc
int3
jg
pop
pop
negl
out
sub
addr16
loop
es
out
mov
dec
xchg
sub
daa
jbe
pop
int
adc
cltd
add
mov
js
jne
push
inc
dec
mov
inc
push
sbb
pop
orb
cltd
subb
mov
cmc
fwait
in
icebp
ret
pop
dec
scas
sub
scas
cli
pushf
andl
sbb
mov
cmp
jo
jl
lahf
xlat
adc
int3
lds
scas
pop
cmp
dec
push
push
xor
xor
add
or
clc
pop
push
inc
lcall
mov
mov
test
leave
movsl
icebp
addr16
mov
push
inc
cmp
inc
out
jmp
sbb
push
icebp
ret
mov
sub
gs
out
pushf
lock
mov
xor
popa
inc
jl
ds
mov
dec
out
pop
xor
imul
pop
mov
mov
in
ror
cli
in
mov
stos
insl
shr
je
lock
push
inc
adcb
icebp
xchg
inc
mov
addb
je
sti
mov
ret
lds
mov
repnz
loop
loop
insl
es
rol
jns
jnp
mov
es
inc
fstpt
and
sub
pop
bound
jle
and
fstpt
test
or
ds
inc
jle
xor
mov
push
sbb
rol
shrb
lods
mov
gs
mov
and
cli
or
dec
jecxz
jb
xor
stos
push
and
int3
daa
pop
mov
in
sub
cli
dec
lret
xor
hlt
xor
mov
add
push
dec
sahf
sti
adc
cmpl
mov
aam
arpl
cmpb
jmp
out
cmp
mov
je
mov
gs
xor
dec
xor
hlt
enter
int
nop
add
es
test
adc
or
fwait
test
adc
sbb
mov
bound
add
enter
push
dec
stos
dec
cmpsb
add
lds
sub
dec
jecxz
sahf
pop
sub
push
mov
rcll
adcl
inc
test
ret
fldcw
aad
mov
and
mov
out
xchg
lea
cmpsl
or
ss
cmp
popa
pop
cmp
xchg
scas
repnz
rep
imul
sbb
arpl
lods
sub
icebp
inc
dec
cmp
jg
cmp
inc
xchg
mov
inc
jo
dec
rcr
rclb
and
cs
sbb
clc
add
sub
jg
xchg
pop
push
pop
mov
and
sub
jns
leave
pop
repnz
mov
jns
hlt
sqrtps
adc
js
mov
xorb
ljmp
cltd
fidivl
test
cmp
jns
and
jns
xchg
pusha
mov
pop
jb
mov
shl
xor
mov
pop
in
subl
lret
enter
nop
xchg
mov
pop
shrl
and
and
orb
pop
lret
push
popf
xlat
pop
sbb
cld
and
inc
orl
shll
push
pusha
stc
xchg
sub
gs
jb
add
jns
dec
aam
pop
push
outsb
pop
mov
xchg
mov
push
adc
lret
jno
sti
or
es
jae
dec
mov
das
jo
or
shll
pop
add
cmpsl
pop
jno
outsl
rol
popf
jbe
ss
and
pop
lods
stos
jmp
popf
inc
int3
xor
mov
arpl
xchg
mov
xor
sbb
push
xchg
xlat
and
jo
dec
dec
loop
testl
push
scas
pop
inc
jns
lahf
lods
dec
cmpsl
inc
adc
mov
add
pop
cmc
sbb
adc
cmp
lds
aad
mov
in
scas
mov
jmp
lret
and
cmp
mov
jne
or
jecxz
je
mov
iret
add
mov
pop
pop
cmp
stos
cmp
call
or
xchg
dec
jno
jb
les
dec
hlt
pop
jbe
mov
pushf
mov
lods
and
fiadds
push
xchg
mov
mov
mov
mov
outsb
dec
popf
fucomi
cmpsl
shrl
imull
push
mov
stos
lea
xlat
xor
divps
in
jge
scas
jnp
lea
sar
push
es
and
inc
fstpt
pop
mov
dec
test
inc
inc
inc
cmpsb
aad
mov
push
fdivrs
adc
cwtl
push
sbb
jnp
out
pop
jecxz
or
pop
imul
loopne
pushf
sub
and
mov
sti
jnp
adc
arpl
pop
jo
sti
lds
out
call
or
add
mov
clc
xchg
scas
and
iret
pop
jae
out
mov
and
test
lods
sar
imul
jl
jo
std
jmp
repz
cs
jno
test
shll
and
fmuls
mov
int
sahf
push
mov
repz
push
sbb
dec
aad
sub
xchg
mov
std
jbe
mov
jg
dec
push
andl
push
leave
mov
fstps
into
js
inc
pusha
mov
jl
pop
aaa
mov
fs
data16
lret
lret
cld
mov
push
jmp
pusha
enter
pushf
or
mov
cltd
or
out
mov
imul
and
xchg
sub
sbbl
pop
xor
sbb
ds
jmp
test
jo
lock
mov
je
dec
out
xchg
notl
loope
sub
pop
sub
adcb
into
pop
mov
bound
lahf
test
mov
xchg
scas
inc
mov
icebp
jge
fsts
push
cs
pusha
mov
jecxz
dec
dec
jmp
add
adc
lcall
sbb
fimuls
add
sub
test
adc
mov
mov
fs
mov
mov
fwait
dec
frndint
lcall
cwtl
outsl
daa
push
xchg
jb
aaa
or
cmp
dec
sbbl
adc
stos
jmp
sub
mov
pusha
fwait
push
push
or
sarl
lods
loop
inc
lock
into
and
rorb
icebp
movsl
stos
pop
sbb
insb
push
cmp
xor
dec
jae
jmp
imul
jp
jno
stos
cmpsb
cmpsl
in
call
les
mov
aaa
sub
lahf
push
dec
mov
mov
cmp
aam
xor
movsl
lods
adc
pop
scas
add
iret
jns
adc
lock
dec
cmpsb
xchg
mov
addr16
xor
or
fucomi
push
int
mov
push
mov
test
loope
jno
enter
mov
dec
dec
stos
cltd
mov
xor
pop
jmp
loopne
cmp
push
dec
xor
outsl
inc
pop
mov
mov
inc
stc
mov
stc
sbb
xchg
aad
popf
mov
push
jb
and
xlat
aas
xchg
add
jp
xchg
dec
jae
aad
lea
iret
loop
scas
icebp
mov
mov
psadbw
outsb
daa
mov
mov
pop
cwtl
data16
cmp
sbb
popf
outsl
mov
xchg
push
xchg
push
mov
jb
mov
xor
inc
pmullw
pop
adc
rcl
in
mov
enter
rcll
pop
sub
adc
into
gs
add
jg
in
push
rol
adcb
sub
movsl
dec
es
sub
cmp
cld
outsl
inc
lock
inc
adc
jno
adc
test
pushf
push
mov
add
lcall
dec
lds
sub
inc
inc
arpl
iret
pop
fs
cmpsl
das
inc
mov
push
scas
mov
push
ja
sbb
add
jl
repnz
inc
jmp
pop
jo
ljmp
jmp
sbb
push
xor
shrl
xchg
mov
fld
mov
cmc
inc
pop
xor
fsubrl
loopne
mov
fsin
testb
jge
loope
ds
ja
fwait
test
inc
leave
cmpsb
mov
push
sbb
xor
fs
das
push
frstor
push
mov
lret
loope
jecxz
rolb
jge
pop
or
nop
mov
insl
test
mov
inc
leave
fbstp
mov
jns
and
pop
sbbl
mov
jg
sbbb
add
cmpsl
fwait
jae
xorl
leave
into
enter
push
jns
jecxz
sbb
pop
flds
jg
jecxz
fcomi
out
fwait
xor
push
mov
adc
sub
mov
ljmp
pop
lods
insl
rcrb
or
cs
add
mov
out
cld
sub
insl
pop
push
cmp
imul
mov
or
sti
xchg
pop
inc
popf
pop
mov
jmp
shl
adc
cmp
lea
fadds
inc
arpl
pop
imul
mov
call
mov
hlt
shl
cld
clc
nop
into
lods
cmc
int3
shr
pop
cmpsb
cld
int
sub
dec
cmpsb
jg
jb
nop
mov
lock
fidivrs
sub
xchg
xor
dec
inc
push
jg
or
jne
subb
sbb
mov
mov
les
lret
lds
add
mov
and
fdivrl
adc
add
add
es
popf
push
jl
mov
jbe
pop
mov
ficoml
pop
int
sbb
cmp
jmp
add
push
sub
push
les
or
push
xchg
je
sub
jmp
pop
jbe
mov
mov
arpl
sbb
push
popf
daa
cmp
mov
and
inc
push
aas
or
int3
push
loopne
and
ror
and
loopne
cld
filds
jnp
test
fwait
mov
lret
pop
sub
insb
inc
notb
test
cmp
das
or
mov
xchg
add
inc
cmpsl
mov
shrl
xchg
sahf
sbb
lods
sub
adc
or
inc
lret
sti
push
out
mov
sbb
add
jecxz
dec
push
and
stc
outsl
inc
loope
jne
sti
ds
cmp
rol
sub
push
lcall
push
mov
and
js
add
xor
iret
push
daa
outsl
mov
hlt
lahf
jbe
push
or
imul
cwtl
sbb
fmul
daa
dec
adcb
push
incb
lds
mov
shrd
sbb
aam
cmp
dec
outsl
add
pcmpgtb
push
xchg
in
test
popa
add
lds
sub
jl
or
cmp
cmpsl
out
fmuls
jecxz
adc
push
xor
fisubs
push
dec
lcall
jne
mov
sub
inc
fsub
das
adc
mov
xor
push
inc
movsl
inc
adc
push
mov
xor
inc
or
in
ficoml
mov
mov
fcom
pop
test
shrl
pop
daa
addl
out
cmpsl
sbbb
int
fbstp
call
cmp
inc
xor
ret
xchg
push
into
xor
rcll
hlt
inc
loop
ss
leave
pop
cmpsb
push
or
out
aam
pop
adc
iret
rol
leave
jne
push
inc
ds
aaa
sub
not
sub
dec
scas
jo
adc
stc
popf
adc
sbb
je
inc
pusha
cmp
push
movsl
xor
aam
adc
movsl
push
cmp
les
mov
mov
push
jl
std
xchg
mov
cmp
rcrl
bound
or
scas
and
bound
testb
push
jns
mov
sbb
and
movsl
inc
push
pushf
xor
cmp
test
jl
xor
aam
rclb
out
sahf
out
outsb
lds
dec
jecxz
vpsrlw
jno
std
pop
or
aam
jg
outsl
lea
cmc
pop
js
js
add
fucomi
add
cmpsb
js
and
push
call
sbb
sub
xor
mov
inc
mov
and
sbb
cmp
xor
lret
cltd
mov
pop
icebp
mov
push
or
mov
mov
sbb
mov
outsl
test
xchg
popl
shrl
pop
ret
pushf
fwait
mov
outsl
addb
pop
sahf
and
dec
aad
cmpsb
les
iret
shrb
mov
sub
jmp
mov
fcomip
aas
mov
icebp
adc
mov
stos
insb
inc
xlat
pop
lock
add
es
mov
fidivs
mov
sbb
adc
jae
inc
inc
insb
das
imul
pop
push
mov
inc
fldl
inc
outsl
neg
mov
mov
dec
adcb
pop
lock
aaa
xchg
mov
in
out
test
dec
adc
xlat
in
mov
sbb
cmp
cmpsb
pop
dec
adc
test
or
inc
mov
lods
inc
add
pop
outsb
push
imul
cld
fs
cmp
mov
jns
cmp
lods
lcall
hlt
mov
inc
shrb
js
mov
mov
stc
aaa
fldenv
dec
cmp
xor
bound
xchg
inc
out
push
jp
fbld
nop
xor
jb
aas
movsl
cmp
imul
fsubs
and
test
int3
aaa
in
iret
movsb
pop
mov
mov
incb
or
clc
mov
in
test
or
or
push
jp
fsubrl
pop
icebp
movsl
cmp
data16
icebp
cmp
jno
add
push
out
sti
xchg
and
add
nop
les
clc
sub
stos
inc
daa
dec
in
loope
add
or
cs
pop
push
mov
fcmove
ret
push
ja
pop
daa
pop
rcrl
cmp
aad
pop
mov
movsb
mov
mov
hlt
fsubrs
adc
sub
movsl
cmp
andl
popf
shlb
test
out
and
push
mov
fdivrl
mov
xor
scas
or
mov
iret
jno
jge
call
loope
or
adc
lret
enter
inc
test
test
cli
mov
push
push
sub
push
inc
in
rcll
aaa
push
testb
leave
sbb
sbb
or
stc
mov
jnp
shlb
add
mov
pop
xor
out
sbb
lahf
das
je
push
and
adc
dec
add
repz
adc
pop
mov
lock
push
mov
psrlq
xchg
imul
repnz
mov
mov
outsl
mov
and
icebp
adc
adc
jg
jne
lret
push
fcmovne
out
push
stos
sub
bound
shr
adc
es
push
test
outsl
aam
icebp
dec
adc
testl
shrl
mov
pop
scas
test
or
shr
loopne
jnp
mov
cmp
clc
dec
mov
pop
jno
add
push
popa
test
aam
inc
sti
cmp
or
enter
bound
test
inc
and
or
mov
lods
imul
outsb
stos
dec
mov
adc
mov
xor
ljmp
mov
push
lret
outsl
les
cmpsb
jnp
pusha
dec
mov
push
inc
daa
cld
jns
pop
mov
fildl
adc
loopne
fs
xchg
insb
xchg
in
sbb
mov
dec
mov
or
sub
add
pop
xchg
mov
into
test
jecxz
adc
xor
xor
or
add
in
shll
xor
fisubrs
push
loop
stos
fstps
cmpl
insb
mov
cwtl
jnp
sarl
inc
push
outsl
fisttpll
sbb
std
popa
jb
call
scas
inc
pop
add
mov
sbb
cmpsb
push
int
stos
js
test
fadd
in
mov
mov
and
mov
pop
mov
or
jmp
jge
insb
sub
push
incb
inc
xchg
add
adc
lret
and
pop
fwait
jo
sub
push
jo
add
pcmpeqd
xor
push
mov
adc
sbbb
fdivs
xchg
insb
inc
mov
rol
dec
repz
mov
mov
and
loopne
adc
ja
orb
pop
fdiv
clc
push
fmull
mov
push
jmp
mov
jo
or
repnz
shl
dec
xor
jns
sub
sub
test
test
lods
cmp
mov
or
addl
mov
pop
faddl
and
xlat
sub
mov
mov
cmp
cmp
in
xor
clc
data16
inc
cli
mov
andb
test
mov
pop
imul
test
bound
or
mov
xchg
mov
sbb
jne
inc
cs
lds
cmp
vpavgb
mov
aad
pop
bnd
adc
dec
push
mov
das
adc
shlb
xchg
sti
and
scas
gs
lahf
dec
fidivrs
repz
mull
jg
push
mov
and
int3
out
lock
jno
sub
aas
inc
jmp
inc
fstpl
pop
mov
decb
mov
push
sarl
sub
inc
jmp
dec
or
imul
jo
mov
xchg
sbb
cmp
cmp
cs
mov
jecxz
loopne
xor
fmull
fs
push
mov
das
and
push
adc
jb
xor
jp
adc
pop
and
sbbb
orl
jmp
daa
jbe
shrl
into
icebp
and
push
xor
jb
xchg
shlb
dec
xchg
lret
ss
repz
jno
daa
mov
xlat
repz
clc
pop
movsl
or
cs
das
cli
mov
loopne
pop
and
or
inc
popf
cmc
imul
lcall
loop
subb
jle
mov
push
call
out
std
xchg
xchg
es
popf
mov
jns
push
fcompl
xor
pop
adc
test
notb
or
sub
sub
inc
sbb
imul
inc
jne
ja
fcmovne
mov
push
push
inc
mov
fisubs
and
andl
stos
push
in
jno,pt
dec
lock
outsl
notb
stos
int
push
ss
jl
mov
les
adc
xor
xor
xor
jge
mov
add
leave
fnstenv
pop
fs
enter
mov
cmp
mov
jmp
fcomp
xchg
and
decl
std
push
stos
lods
mov
pop
enter
mov
jno
insl
test
popf
dec
dec
out
sti
test
je
insl
jg
and
xor
orb
jnp
mov
imul
ds
aaa
into
pop
adc
adc
inc
lret
test
cltd
pop
pusha
jecxz
sbb
stos
stos
jbe
int3
mov
mov
lock
xor
ret
mov
fstl
or
xor
pop
test
sbb
test
xchg
les
jl
pop
sub
lods
add
repz
ja
inc
pop
iret
je
mov
or
push
jp
les
pushf
mov
add
mov
aas
test
or
mov
mov
add
ljmp
adc
pop
xchg
sbb
push
cmp
test
les
cwtl
out
dec
dec
pop
xorb
syscall
arpl
jo
ja
in
xchg
imul
add
and
dec
push
push
insb
inc
test
fwait
xor
lods
std
ficoms
mov
adc
adc
pop
push
mov
test
xor
js
stos
add
xchg
andb
mov
lds
pop
into
adcl
pusha
mov
or
xor
inc
sub
pop
inc
loope
and
arpl
mov
adc
adc
rclb
xor
sub
pop
adc
pop
insl
xor
jp
pop
cmp
lahf
sub
das
lock
fstl
out
pusha
andl
dec
dec
adc
adc
mov
or
push
xlat
sbb
mov
lds
aas
mov
dec
adc
ss
jns
cmp
rorl
add
add
push
sahf
mov
mov
call
sbbb
jg
daa
mov
mov
sbbb
cmp
rcrl
xchg
dec
xor
fldl
ret
or
js
std
xchg
cmp
mov
cmp
mov
jne
ficoml
movsl
into
lcall
mov
fs
mov
mov
xchg
xchg
lcall
out
cmpsl
stos
fs
push
jb
pop
mov
aad
jp
mov
add
mov
divl
inc
test
push
or
stos
daa
lods
dec
test
sti
data16
inc
pop
or
sub
inc
lcall
loopne
ftst
cmp
add
filds
xchg
loope
adc
shl
mov
adcb
mov
xor
aad
popa
push
lret
nop
mov
out
push
in
cmpsb
jno
pop
mov
pop
hlt
mov
push
mov
lods
cmp
mov
ret
xor
push
pushf
shr
xchg
xor
lea
dec
loopne
js
dec
stos
or
cmp
or
rolb
mov
mov
cmp
decb
es
jle
adcb
mov
int
insl
mov
cld
outsl
int3
cmp
mov
lahf
mov
push
push
jge
mov
loopne
inc
stc
mov
jge
and
mov
mov
dec
cwtl
jle
cmp
jp
xor
int
or
and
jae
shlb
adc
mov
testl
ljmp
shrb
mov
add
inc
ljmp
rorl
add
fwait
push
mov
jae
aam
and
popa
sub
xchg
scas
add
sub
and
sbb
jle
inc
mov
test
lcall
vpsrlq
das
repz
outsb
dec
stos
je
imul
dec
ret
je
imul
idivl
insl
ret
ficomps
jg
jnp
sub
int3
inc
rcrb
bound
mov
addr16
mov
mov
dec
loop
out
call
pop
icebp
cmpsb
iret
mov
int3
insb
dec
add
push
mov
xchg
jg
inc
in
mov
dec
jne
mov
push
xchg
mov
mov
mov
sbb
testl
mov
movsb
mov
stc
daa
push
fldt
ret
pusha
aaa
sbb
lcall
jge
jb
in
jl
pop
scas
dec
insb
sub
addr16
mov
cmp
icebp
xorb
push
orb
es
mov
push
movsb
mov
xor
enter
outsb
jmp
push
movsb
out
pop
pop
loop
pop
sahf
fnstenv
sarb
mov
cmp
and
jnp
in
call
in
sbbb
fidivs
jne
stos
inc
push
xchg
je
sbb
out
cltd
cmp
or
repz
jge
adc
fimuls
mov
test
stos
outsb
mov
jecxz
loopne
lods
sub
mov
ret
mov
fdivr
or
mov
flds
dec
lea
arpl
outsl
sub
negb
js
dec
mov
pop
jns
ja
loope
js
push
mov
mov
int
sbb
ret
in
fyl2xp1
out
cmpsb
sti
popl
test
inc
ficompl
push
inc
pop
xchg
addb
popl
dec
add
ret
outsl
imul
mov
add
roll
outsl
cs
gs
int3
xor
dec
test
fwait
mov
loopne
test
roll
add
test
jnp
scas
scas
loopne,pn
add
mov
adc
inc
fisubs
xor
fisttps
test
inc
addb
push
mov
cmp
and
addr16
jae
shlb
rclb
mov
or
and
cltd
or
lret
cmp
jbe
sti
cmp
test
xor
xchg
scas
ret
out
mov
test
push
dec
add
jecxz
mov
leave
es
xchg
inc
lahf
je
mov
mov
cld
insl
sub
xchg
and
ret
je
push
notb
fneni(8087
ja
cmp
cld
dec
mov
sbbl
sbb
nop
ret
bound
and
cmpsl
xor
pusha
jp
leave
stos
lods
fwait
pop
and
lahf
mov
shl
mov
sbb
fs
sub
cmp
dec
test
in
mov
fisubrs
mov
cmpb
jmp
test
lods
inc
in
xorl
ret
lea
adc
inc
push
jbe
int
inc
push
sub
push
jg
hlt
xor
xor
adc
ja
add
mov
adc
ljmp
ja
int
stos
cmpsl
fisubrl
aad
sbb
push
sti
dec
or
adc
int
pop
adc
fsts
lods
pop
das
pop
loop
push
fnstenv
mov
cmp
in
adc
int
cltd
out
repz
pop
andl
mov
lahf
pusha
sbb
sbbl
aam
mov
data16
adc
cltd
sub
not
in
sti
inc
out
daa
sbb
mov
and
inc
inc
sub
sbb
cmp
xlat
push
in
adc
bound
mov
jae
mov
int
sbb
lret
mov
shlb
mov
sti
cli
mov
add
scas
sbb
ds
xchg
pop
adc
cmp
sbb
add
jg
daa
cs
insl
shrb
mov
mov
leave
and
xchg
cmpsb
jns
incb
push
incl
ficoml
mov
and
incl
nop
sub
push
movsl
cmp
push
add
push
adc
inc
mov
xchg
dec
icebp
jl
cld
pop
loop
add
lock
sbb
shlw
cmpsl
hlt
jns
adc
orb
aad
lea
lods
repz
inc
sarb
adc
scas
inc
inc
mov
test
ffree
enter
out
test
jbe
mov
mov
xchg
and
test
sub
push
jb
mov
sub
cli
mov
mov
sarl
aam
hlt
test
scas
out
dec
lods
pop
xchg
sbb
jl
mov
add
daa
or
xchg
push
pop
jge
cmpsl
xor
lock
dec
xchg
adc
loope
mov
daa
add
mov
mov
mov
jns
pop
jmp
shlb
push
xor
push
add
pop
leave
std
and
sub
mov
or
repz
fidivrs
push
jle
mov
xor
xlat
outsb
pop
push
push
aam
dec
push
jecxz
pop
repnz
pop
mov
cmp
lds
jb
pop
test
pop
loopne
mov
enter
lods
lds
push
xorb
cmp
test
into
adc
cmp
outsb
sbb
xor
xor
out
mov
enter
mov
stos
mov
pop
cmc
into
pop
dec
cmpsb
add
jl
lock
push
sub
int
repnz
test
aam
popf
mov
push
ret
pushl
outsl
repz
dec
data16
dec
cmpsb
dec
xchg
lods
pop
xchg
sub
and
add
mov
int
call
jo
imul
pushf
inc
inc
dec
clc
loopne
out
in
ss
mov
stos
shll
inc
pop
xor
loopne
addr16
iret
dec
into
aas
adc
sub
mov
xor
jo
sub
sti
xchg
daa
nop
daa
mov
sbb
mov
rcrb
add
and
mov
jle
lret
insb
in
lock
andl
cli
lods
xor
sahf
lahf
xchg
das
add
push
jmp
decb
outsl
adc
inc
std
pop
outsb
pop
cwtl
mov
inc
jne
inc
pop
sbb
iret
cmp
nop
jl
lahf
shll
sti
xchg
jns
pop
scas
dec
adc
mov
push
int
inc
out
je
cmp
xor
mov
stos
inc
inc
push
in
jge
fimull
lods
fidivl
cwtl
sbb
jbe
inc
pusha
fstps
mov
push
int3
test
pop
divb
lret
sub
call
mov
mov
aam
or
and
dec
int3
mov
icebp
add
les
loop
hlt
cmp
pop
lock
mov
movsb
and
sub
fs
jle
mov
stos
fnstenv
repz
cmpsb
cmp
push
push
lret
movsl
ljmp
adc
je
sbb
mov
adc
mov
sbb
push
push
dec
or
cmp
mov
inc
negl
fildl
or
add
jecxz
mov
in
jge
loopne
mov
sub
adc
cld
cmpsb
mov
popa
fbstp
sbb
decl
jns
jl
xchg
stc
mov
pop
shlb
xor
or
xlat
popa
mov
fcomi
sub
push
mov
push
aaa
xor
mov
xor
xchg
sahf
sbb
pop
adc
aaa
cmpsb
lds
xor
mov
inc
cmp
sbb
mov
ret
push
ds
jl
pop
push
and
dec
inc
mov
sbb
mov
sbb
movsb
jmp
xchg
mov
dec
cmp
int
adc
sub
pusha
outsb
test
data16
dec
sbb
loope
scas
sbb
mov
jmp
fnstsw
imull
mov
aam
andl
xchg
jns
pop
jmp
push
inc
rol
cmp
adc
lds
jge
jmp
xor
xor
es
push
xor
imul
xor
pop
sti
push
jl
test
int
fxtract
sahf
out
iret
inc
sbb
fsubrs
js
and
lret
xor
pop
in
push
icebp
stc
sbb
nop
cmc
js
insl
cmp
mov
int3
mov
sub
mov
hlt
imul
mov
lcall
inc
push
jmp
or
or
lods
mov
fisubs
jae
faddl
add
pop
and
add
gs
imul
sub
jno
pop
sub
add
jl
movsl
inc
scas
mov
fpatan
mov
mov
xor
lea
test
mov
xchg
xor
loop
mov
mov
and
pop
andb
cmp
cmp
test
xrelease
or
int
in
mov
mov
js
in
mov
pop
insb
xchg
fwait
aam
add
lods
sbb
pop
sub
out
pop
xchg
decl
int
xchg
incl
dec
adc
push
xchg
pusha
lret
dec
sub
popa
aam
jbe
pcmpeqw
sub
lds
mov
push
sub
and
xor
fwait
repnz
pop
adcb
test
test
ror
pop
add
mov
dec
jp
call
clc
les
mov
popf
imul
jle
mov
lret
test
stc
mov
adc
ja
jbe
pop
stos
inc
mov
mov
mov
sbb
mov
inc
aas
imul
push
std
pop
cld
rcrl
adc
in
lret
arpl
je
lcall
cs
daa
aad
inc
scas
or
mov
cmp
mov
xor
inc
fs
in
mov
inc
mov
shll
mov
adc
xchg
pop
neg
mov
movsl
addr16
js
mov
jmp
lahf
repnz
movsl
ja
xchg
push
repnz
jle
cs
repnz
or
inc
outsl
movsl
lret
inc
push
call
add
inc
fs
inc
int3
pushf
pop
popa
test
stos
pop
jg
mov
ret
fmull
mov
iret
iret
daa
ljmp
addl
and
clc
inc
inc
sub
inc
inc
arpl
sahf
pop
rcrl
cmpsl
or
mov
out
test
sbb
cmp
cwtl
adc
push
stc
sub
out
cs
sub
nop
mov
jno
popf
sub
popf
sbb
sbb
sbb
sub
sub
dec
sbb
test
and
shl
dec
add
pushf
decl
and
add
outsl
je
mov
aam
lret
pop
push
in
mov
mov
jmp
cmp
fs
xor
mov
push
fdivrs
cmp
mulb
xchg
popa
xchg
jae
neg
sub
sti
pushf
mov
and
loopne
shrb
jmp
in
into
shrb
jmp
cmc
or
mov
adc
pop
lock
mov
nop
test
push
jo
fwait
cmc
mov
scas
fcomi
mov
fistpll
adc
das
xchg
add
cmp
and
fcoml
dec
mov
sub
fdivl
pop
mov
xchg
fs
jns
pop
jl
stos
scas
or
sti
orl
loopne
and
jp
arpl
shlb
jmp
pop
lock
pop
ja
adc
clc
jne
ret
sbb
or
ja
daa
mov
or
mov
outsl
inc
sub
testb
sub
jp
and
mov
test
lret
stc
adc
lods
insl
xor
into
push
cmc
or
xchg
cwtl
icebp
mov
fincstp
mov
decb
imul
xor
repz
je
inc
les
mov
imul
mov
subl
mov
cmpsl
sub
xor
sub
sbb
adc
xchg
xorb
shll
add
inc
mov
cld
sub
addr16
sub
aam
push
or
xchg
nop
out
or
jbe,pn
fs
push
push
pop
mov
mov
aaa
mov
or
jnp
sbb
cmp
bound
mov
mov
nop
outsb
mov
sub
cltd
sbb
mov
add
gs
add
push
imulb
push
test
fisubs
in
xor
pop
xchg
test
push
lcall
pusha
cmp
pop
shll
sub
outsb
sbb
into
push
in
imul
ss
push
adc
gs
scas
mov
insb
dec
xchg
cmp
cmp
pop
lret
sub
scas
adc
lods
in
pusha
ss
dec
stc
das
idivb
shrl
std
sbb
sub
mov
jo
nop
add
hlt
mov
icebp
fdivrl
iret
mov
jb
roll
mov
fmull
icebp
and
add
xor
fsubrl
add
mov
pusha
cli
test
pop
jno
xchg
add
sbb
xchg
int3
mov
sbb
push
out
test
jmp
pop
ja
adc
pop
cwtl
fsubrp
leave
jnp
repnz
mov
cmp
mov
pushf
aaa
dec
call
les
mov
add
in
movsb
test
in
orl
jno
or
out
psubq
arpl
jbe
mov
dec
jno
sahf
popf
inc
pusha
out
xchg
rolb
xor
jge
jmp
stc
or
stc
imul
mov
jns
std
inc
cltd
and
fisubl
pop
iret
ljmp
add
add
scas
inc
inc
adc
or
aaa
shl
xor
pop
fs
pusha
xor
outsb
loope
sbb
mov
notl
out
shl
and
fwait
stc
movl
cmp
ret
addr16
cwtl
je
popa
jns
shll
or
and
pop
dec
popa
cmpsb
cmpsb
lods
popw
ret
and
sbb
je
fdivl
xor
ret
hlt
subb
lcall
mov
push
nop
std
add
dec
loope
lock
sub
sub
mov
and
cmp
lcall
inc
xor
or
xchg
rcrb
outsb
pusha
fistpl
cmpsb
rclb
sbb
cmpsl
jb
cmp
out
roll
inc
test
and
repz
out
pop
mov
and
popf
dec
mov
cld
scas
dec
sbb
sbb
mov
ljmp
jne
inc
lret
imul
and
dec
sbb
fbld
cmpsb
or
loop
sbbb
repz
mov
jge
and
test
out
inc
sarb
ret
inc
mov
scas
in
jbe
popa
cmp
push
push
outsb
clc
out
bound
sub
mov
add
mov
adc
ljmp
aas
hlt
xchg
push
lret
xor
xlat
imul
lret
ret
xchg
and
int3
mov
pop
imul
xrelease
pushf
fucom
iret
push
adc
sbb
cmc
jo
in
push
mov
out
fcmovbe
dec
lock
inc
js
imul
jg
ss
jge
je
fildll
push
pusha
addr16
and
in
std
lret
add
or
and
sti
and
cmp
mov
dec
cmp
mov
and
rcl
lods
inc
xchg
xor
ret
cwtl
stos
push
cwtl
sub
dec
in
dec
jns
repz
jg
data16
xlat
pop
sahf
or
or
mov
mov
jnp
scas
out
aaa
push
mov
push
shrl
push
jg
popl
mov
out
jg
adc
xor
push
jbe
xchg
fucomp
clc
hlt
mov
jge
cmp
xchg
push
add
xor
movsb
inc
push
lods
lods
ljmp
es
lock
add
xchg
ss
sti
sbb
aam
les
sub
or
shll
lret
stos
hlt
out
xchg
enter
pop
je
mov
stc
insl
repnz
std
adc
add
shlb
testl
insl
add
fnstenv
test
sub
nop
add
and
adc
js
lods
pop
in
or
vpinsrw
fwait
std
dec
fisubrs
and
push
jle
cmp
shll
shrb
outsb
setp
lock
inc
jp
pop
lods
adc
push
scas
loope
sbb
jmp
data16
fnstcw
inc
sahf
leave
mov
or
ds
add
or
pop
jb
sub
adc
mov
fcmovnbe
mov
inc
or
add
cmp
mov
pop
add
sbb
and
ljmp
stos
shll
lds
data16
xlat
pop
dec
loopne
clc
shrb
bnd
arpl
push
fildll
fldcw
sbb
pushf
mov
mov
test
bt
add
cs
call
sbbl
or
cmp
mov
sbb
sub
in
daa
outsl
sub
inc
cmpb
movsb
sub
jb
mov
outsb
testl
xchg
insb
fsubl
lcall
xor
repnz
sub
iret
shl
hlt
push
inc
and
sub
lcall
out
inc
ljmp
scas
inc
mov
dec
int
dec
out
push
out
cmp
subl
repnz
mov
sarb
add
add
push
dec
jle
jns
insl
add
lcall
sub
sahf
sbb
lcall
jmp
sti
jg
inc
fwait
pop
adc
popa
decb
add
mov
or
es
adc
mov
mov
dec
mov
xchg
cmpsb
ds
mov
pop
outsb
push
movsb
push
mov
decl
push
mov
jge
mov
xlat
sub
outsl
and
jl
sub
sbb
addr16
inc
push
stos
insb
inc
loopne
fs
ret
pop
orb
pop
pop
push
mov
fwait
push
je
xchg
cmp
dec
sar
xchg
push
mov
mov
mov
push
xor
mov
and
fldenv
bound
add
jmp
fwait
push
test
shr
pop
movsb
aaa
push
sbb
lea
pushf
xor
add
push
and
fdiv
or
pop
imul
jp
sub
mov
es
sbbl
dec
shlb
out
sahf
std
test
inc
ss
xor
jo
sbb
or
inc
std
aad
in
and
mov
cltd
out
jne
out
mov
and
rcl
xchg
sub
mov
pushf
inc
pop
lds
sub
in
js
xchg
sub
in
vpunpckhqdq
mov
push
push
pop
sub
test
nop
xor
dec
add
cmc
cs
jo
fsubrs
xchg
sbb
lret
or
dec
repnz
in
add
inc
cmp
push
xchg
push
js
sbb
jge
mov
rep
xchg
clc
pop
cmp
pop
dec
push
jmp
fcomip
push
jmp
jl
and
out
or
jl
push
sahf
int
mov
rcrb
jl
mov
jne
pop
or
fs
pusha
and
inc
enter
mov
bound
popa
and
test
mov
clc
xchg
pop
loope
ret
insl
not
xchg
sub
add
sub
cmp
movsb
cmp
sti
cmp
cmp
mov
lock
sbb
or
stos
inc
sub
ljmp
xor
out
testl
jmp
jb
popf
push
sahf
jb
push
daa
int
pop
das
call
mov
lahf
scas
push
cld
xlat
xchg
pop
mov
mov
cwtl
jg
mov
into
jl
repnz
xchg
dec
sti
lods
addl
daa
ret
adc
bound
jmp
cmpsl
out
int
jg
ds
push
out
ret
sub
jp
repz
xchg
and
loopne
push
cmp
mov
mov
cs
jge
bound
enter
cmc
sbb
mov
cld
mov
fdivp
imul
cmpsb
add
into
addr16
rcr
push
in
mov
je
scas
or
push
fidivrs
hlt
clc
sub
mov
lds
rorl
mov
repnz
test
imul
mov
ficompl
in
push
cli
dec
mov
test
add
xor
push
insb
pusha
sahf
clc
jno
mov
lods
xchg
je
mov
adc
jmp
inc
sti
aaa
loopne
and
mov
repz
inc
and
jl
out
and
cmp
cld
scas
sbb
or
jbe
or
push
and
insl
fwait
repnz
rclb
push
shrl
popf
sti
or
push
testb
fldenv
les
and
int3
or
dec
add
push
call
dec
inc
aaa
outsl
mov
pop
mov
andl
jecxz
mov
pop
fnsave
dec
cwtl
cmp
mov
in
xchg
sub
cmp
jae
mov
mov
ret
mov
jmp
sti
cltd
add
addr16
cmp
cwtl
fwait
insb
mov
adc
pop
cmc
daa
add
aad
iret
jl
mov
pop
push
and
add
fwait
push
testb
insb
aaa
dec
xchg
lret
divl
adc
sub
cltd
shrl
rolb
add
js
xchg
pop
and
mov
les
lods
in
fcmovbe
inc
mov
imulb
cmc
push
xchg
pop
jae
fstpt
pop
inc
lcall
and
jns
repnz
push
or
lret
sbbb
cmpsb
in
in
mov
push
in
rcl
faddl
lea
mov
mov
stos
lods
jmp
adc
lea
or
mov
fcomp
test
dec
lcall
or
adcl
incb
xchg
add
push
and
aas
subb
cli
push
or
ret
rcll
mov
add
add
mov
pop
adc
push
ds
into
pop
lahf
out
shrl
sti
xchg
and
sbb
test
lea
ljmp
cmp
push
test
jne
repnz
jmp
pop
jnp
xor
cmp
xlat
hlt
inc
cltd
stos
clc
outsb
jl
cmpsl
inc
push
rclb
nop
or
stc
or
andb
and
pop
mov
push
out
inc
es
loopne
cmp
push
js
lds
push
fwait
xor
cmp
adc
in
fwait
shrl
mov
pop
mov
sub
add
je
in
xor
adc
cltd
je
sub
incl
mov
gs
dec
xchg
int3
test
cmp
testl
bound
roll
pop
imulb
cli
dec
sub
aam
lods
inc
cli
push
out
lds
push
mov
or
xchg
mov
jl
and
add
jecxz
mov
sbb
push
out
andb
pop
pop
fnstenv
xor
mov
insl
jnp
pop
out
loopne
sub
and
sub
cld
cltd
or
xchg
xor
mov
sbb
movl
lret
xchg
sub
xchg
popa
aad
cs
push
imul
fdivrs
pushf
xor
popa
ljmp
jecxz
xor
dec
inc
fidivrl
fsubl
push
pop
pop
mov
dec
mov
aaa
cmp
ret
jns
pop
dec
outsl
jle
lods
scas
pop
or
inc
cmpsl
les
iret
sub
mov
mov
cmp
rol
pop
inc
scas
dec
xchg
xor
popa
inc
hlt
adc
dec
pushf
mov
dec
movsb
cmp
faddp
rolb
loope
jge
push
cli
inc
out
xchg
xchg
jb
inc
mov
xchg
cmp
push
aam
in
push
and
mov
movsl
stc
pushf
jo
movb
out
test
pushf
mov
ret
pop
sbb
push
xor
mov
or
mov
fcmovnb
add
ljmp
add
ret
sbb
adc
js
leave
test
popf
cmpsl
addb
sbb
stos
mov
daa
outsb
testb
jns
and
xchg
push
jmp
mov
mov
pop
pushf
in
into
jle
mov
das
orb
es
std
sbb
es
push
test
insl
clc
pop
outsb
stos
fcmovbe
clc
ss
cmp
inc
fadds
jae
sbb
push
fwait
stc
add
jp
dec
das
pop
jle
add
xor
fs
or
pop
mov
jnp
or
mov
jmp
fwait
adc
xlat
test
mov
dec
loope
pusha
jmp
mov
movsw
cmp
adc
rcll
test
xor
push
ljmp
inc
sub
mulb
dec
sub
out
daa
out
cmp
mov
rcrl
pop
xchg
fs
out
sub
mov
mov
lret
xchg
aad
and
cmpsl
push
pop
fxch
jno
and
adc
dec
inc
xor
subl
mov
fwait
xchg
cmc
aaa
cmpsl
push
push
sub
hlt
pop
xor
mov
sub
pop
jb
push
xor
aad
cmp
xchg
scas
push
sub
rcrl
dec
sbb
hlt
or
ljmp
js
or
mov
add
jmp
xchg
sub
out
pusha
pop
fs
aad
decb
fsubp
pusha
ss
push
stos
ds
mov
in
inc
loope
xchg
mov
add
push
andl
inc
pop
mov
xchg
jge
xchg
ret
cmp
mov
imul
push
mov
mov
pushf
sbb
mov
dec
add
loop
popa
jbe
sar
mov
add
test
xlat
rorb
nop
aam
popa
rcll
adc
jp
push
xor
mov
pop
lahf
loopne
fsubs
outsb
fidivrs
xchg
pop
xchg
inc
mov
repnz
repz
ror
mov
add
sub
mov
xor
adc
sbb
xchg
xchg
imul
or
add
inc
loope
inc
das
insb
mov
ja
or
jl
insl
add
and
in
cmp
adc
jns
xchg
cmc
arpl
jno
jae
aas
fs
movl
mov
mov
mov
sbb
xchg
xor
outsb
jge
ret
dec
mov
push
ds
into
mov
mov
idivb
cmp
jge
test
insb
mov
inc
loop
ficomps
pop
xor
js
mov
pop
lea
pop
and
int
add
mov
push
mov
or
dec
dec
inc
cmpsb
clc
repnz
lock
add
mov
repz
sub
inc
mov
inc
fistps
out
rcrl
lock
mov
push
cmp
test
xchg
dec
add
shll
jns
in
xchg
xor
test
shll
call
xor
ljmp
dec
sub
pop
call
and
mov
dec
imul
push
or
bound
push
test
lea
pop
push
lock
mov
stos
pop
repnz
rolb
cltd
hlt
and
adc
ds
sub
cltd
xchg
xlat
push
sarb
push
aas
push
push
jge
arpl
sbbl
fcoml
mov
arpl
add
aaa
mov
cmpl
iret
pop
jl
xchg
daa
into
je
jge
cmp
mov
loope
pop
add
shlb
je
outsb
jno
pop
or
lcall
sahf
sub
and
mov
cmpsb
mov
push
mov
das
jg
pop
mov
shll
shrl
lds
xlat
nop
repnz
mov
dec
pusha
cmpsl
push
jmp
ret
movsl
inc
inc
popf
imul
mov
fisubrs
dec
movswl
inc
imul
addr16
xchg
cmp
outsl
xor
cli
sbb
aaa
pushf
not
dec
sbbl
fwait
jns
scas
shrl
je
jns
daa
and
ret
lret
clc
adc
sahf
bound
int3
mov
arpl
inc
fdivrs
lock
in
into
scas
notb
fisttpl
pop
sbb
mov
stos
jecxz
inc
adcl
icebp
mov
mov
dec
fcoms
mulb
lret
push
stos
add
ret
cmpsl
lock
xor
lcall
pop
mov
mov
push
imul
inc
sbb
stc
sahf
and
test
andb
mov
andl
add
clc
pop
sbb
pop
leave
mov
lods
or
adc
out
push
ljmp
and
cwtl
loopne
pop
mov
mov
push
sub
scas
movsb
gs
mov
jns
lcall
rorw
out
pop
push
leave
xchg
test
ja
fs
loopne
cmpsb
fisttps
and
stc
mov
movsb
pop
hlt
xchg
adc
sbb
std
adc
dec
sbb
mov
cmpsl
dec
fsubs
lret
movsl
mov
jae
add
lods
popa
adc
mov
data16
push
dec
lea
cmp
mov
pop
push
inc
pusha
mov
lods
sti
sbb
loopne
jno
lcall
shrb
mov
adc
shrb
xchg
lcall
cld
mov
shrb
push
daa
jo
mov
jo
cld
push
lods
sub
andb
jp
inc
int3
cli
and
into
dec
cmp
andl
fsts
or
mov
outsb
imul
mov
push
test
dec
mov
cmpsl
pop
imul
rorb
and
and
mov
pop
insl
add
jno
pop
es
adc
sahf
push
mov
mov
xchg
pushf
jmp
lods
cmp
fdivs
or
sub
lahf
xor
std
rcl
out
mov
testl
fsubrl
mov
fldt
pop
pop
cld
icebp
test
lods
out
pop
ds
push
in
or
insb
fisttpl
repz
mov
lock
and
shr
push
inc
jg
or
jmp
inc
bound
movsl
icebp
push
mov
xchg
cmpsl
dec
mov
jge
insl
or
jo
outsb
jp
ret
pop
add
enter
xchg
les
ja
pop
mov
shl
mov
mov
or
mov
stos
loopne
mov
inc
jne
movsl
daa
addr16
ret
xor
stc
aam
imul
repnz
mov
xchg
xor
sub
cmp
cmp
fcomps
ss
stc
nop
adc
pop
enter
out
jae
mov
inc
sub
push
out
hlt
leave
add
repz
cltd
lock
inc
sbb
xor
xor
inc
repz
or
fiadds
fs
xor
and
inc
mov
mov
mov
enter
push
in
mov
scas
push
rclb
lock
rcrl
call
sbb
test
inc
mov
pop
jg
ret
mov
and
shlb
inc
and
dec
pop
test
and
gs
xor
in
add
cmp
xchg
int3
jbe
or
out
cwtl
xlat
mov
imul
lcall
mov
scas
in
dec
scas
push
sbbb
pop
in
mov
mov
add
dec
mov
jle
sub
ljmp
pop
pop
sub
mov
add
sbb
loop
adc
add
xchg
test
and
leave
sub
sub
pop
mov
xchg
xchg
pop
push
fcmovnu
movsl
dec
leave
push
jmp
int
js
mov
fs
push
jmp
sub
pusha
cld
xchg
jbe
sub
push
mov
pop
push
enter
add
mov
int
ja
addr16
inc
jmp
xchg
into
xchg
dec
fs
sti
xlat
push
out
inc
xchg
push
popf
ret
ds
sbb
xchg
mov
loope
inc
imul
or
mov
out
movsb
mov
jae
cli
fsubs
or
lea
mov
xchg
inc
mov
lret
cmp
fidivs
cmp
cmp
inc
incb
jmp
xchg
daa
pop
jmp
jb
pop
xchg
fstl
jbe
fcmovb
inc
pop
inc
inc
push
icebp
hlt
outsb
and
ja
shll
pop
mov
ret
jmp
or
icebp
xchg
js
jp
imulb
addr16
xor
subl
fnsave
and
test
testl
mov
aas
sbb
cmp
ss
inc
jmp
std
inc
sub
fcmovbe
adc
add
mov
sub
ja
pusha
ss
push
jge
cmp
imul
mov
arpl
cmp
add
mov
add
dec
inc
mov
rorb
repz
shl
frstor
mov
push
xchg
mov
repz
fs
out
cs
add
nop
inc
ss
cs
neg
or
loop
and
data16
jae
jl
mov
cmp
lods
inc
test
lock
or
pop
and
rol
repz
pop
mov
mov
add
or
xchg
imul
in
add
cmp
inc
lods
out
xor
loopne
cmp
mov
cmp
inc
mov
jle
lods
inc
xor
das
add
jae
ja
adc
mov
add
jg
outsl
dec
movsb
adc
mov
mov
inc
ret
jnp
insl
mov
push
shll
cmp
pop
int
imul
popa
leave
orl
mov
push
adc
jb
and
inc
adc
jbe
shll
cmp
repz
scas
fucomi
aas
jle
outsl
jge
cmp
insl
jge
and
loop
xor
adc
mov
jb
bound
lea
scas
mov
mov
imul
pop
aaa
add
add
inc
push
push
bndstx
mov
aaa
xor
dec
pop
gs
rcl
inc
popf
gs
lcall
push
fldenv
xchg
lock
dec
push
es
inc
enter
fs
out
mov
add
cmp
cmpsl
ds
and
lds
clc
mov
mov
outsb
add
pop
mov
sub
jle
adc
xlat
dec
dec
sbbb
jo
jle
jmp
jp
sbb
jb
sarl
jp
push
inc
sub
cltd
js
cwtl
ss
cmc
addr16
adc
ret
add
mov
mov
aad
cmp
test
test
xor
fwait
loope
mov
js
es
test
mov
out
mov
aaa
into
lret
imul
enter
shrl
aas
icebp
xchg
movsb
mov
popf
scas
dec
mov
sbb
xchg
pop
lcall
dec
jb
rclb
test
cmp
out
in
push
jmp
mov
xor
inc
mov
xor
and
push
jge
inc
movsb
mov
jns
dec
stc
sbbb
cmp
inc
push
jno
ds
jno
xor
adc
pusha
ss
iret
pop
and
pop
test
or
mov
cli
call
repz
jns
pop
or
jg
and
inc
scas
inc
mov
or
add
loop
or
sbb
cmp
mov
insb
mov
pop
aad
add
add
jl
add
pushf
mov
stos
xorl
pop
or
pop
js
out
xlat
push
repz
xchg
dec
test
jmp
xrelease
aas
jg
add
outsb
jnp
and
pop
add
mov
sub
scas
push
imul
push
scas
or
dec
lods
scas
call
addl
push
in
or
rorl
cmp
mov
iret
stos
scas
ja
jns
push
jae
test
push
mov
mov
or
popa
cmpl
mov
push
scas
xor
sub
repnz
movsl
jo
enter
mov
lret
push
inc
dec
aam
daa
or
adc
out
adcb
or
sahf
andl
xchg
insl
push
adc
cwtl
out
std
mov
sbb
jae
fs
xchg
bnd
jne
jecxz
ja
popa
and
test
mov
xor
sbb
push
inc
mov
lods
frstor
push
add
andb
stos
test
ja
mov
dec
sar
pushf
mov
sbb
mov
push
pop
jmp
sub
inc
fs
lahf
imull
xchg
mov
add
je
addr16
xor
cld
insl
faddl
push
jno
mov
push
aam
jle
cmp
add
nop
push
push
xchg
out
cmp
aas
sarb
push
test
iret
mov
ret
sub
int
mov
mov
dec
mov
in
outsb
push
nop
rol
sub
mov
imul
ss
out
in
mov
xchg
and
fistpll
addr16
jnp
push
push
and
lret
sub
inc
adc
xor
jns
inc
inc
inc
cmc
gs
xchg
scas
pop
insl
xor
xchg
mov
repz
mov
add
les
pop
mov
ret
imul
int
loopne
out
ficompl
add
daa
add
roll
ja
lods
mov
add
iret
int
lock
in
stos
lea
push
add
sbb
sar
repz
into
fnsave
das
jbe
mov
cmp
inc
jp
cld
dec
pop
jmp
lcall
imull
notb
push
pop
mov
or
imul
inc
and
xchg
jecxz
es
xor
pop
je
mov
jle
in
cli
fistpll
push
push
and
mov
and
int
xor
xchg
cld
insl
mov
dec
stc
mulb
outsb
pop
adc
inc
scas
pusha
negl
mov
push
ja
repz
cmpsl
add
pop
push
rorl
je
sbb
or
ljmp
add
loope
rclb
add
pop
nop
sub
inc
inc
cmp
repnz
cmp
ret
cmpsb
fbstp
add
xchg
fnsave
ret
fnstenv
ja
sub
sbb
mov
fsubp
js
xchg
jle
fwait
xsha1
cmpsb
or
inc
push
mov
sbb
push
push
or
fiadds
jno
mov
das
add
cmp
mov
or
lcall
or
notb
lds
into
or
lock
xchg
xor
dec
out
push
or
mulb
push
divb
cmpsb
cmp
push
out
repnz
pop
js
mov
loop
aas
loop
setg
stos
mov
repz
adc
loope
scas
cmp
xorb
ror
subb
mov
sar
fisubrs
test
add
jl
andb
scas
mov
or
cmpsb
xlat
scas
sub
push
push
loopne
xor
add
jle
rorb
lahf
lock
bound
cwtl
in
jb
cmc
gs
mov
push
sbb
jmp
pop
mov
adc
repz
int
aam
out
pop
dec
and
dec
adc
addr16
lods
popa
orl
mov
lret
les
cmp
jne
mov
negl
js
push
inc
or
mov
aad
mov
dec
and
sub
ljmp
sbbb
std
cmpsb
imul
mov
or
imul
xorl
pop
dec
mov
inc
pop
mov
into
test
fs
cmp
das
fdivrl
dec
fsts
pop
pop
in
inc
jg
fdivl
insl
lret
gs
dec
xchg
jns
pusha
jecxz
add
sub
and
xchg
mov
xchg
notl
hlt
sub
cmp
ffreep
mov
shlb
push
xlat
sbb
push
les
add
mov
pmaddwd
cmp
xor
mov
aam
ret
mov
fwait
cltd
imul
test
jb
ret
das
ret
into
mov
dec
pusha
enter
loope
push
dec
hlt
js
loop
push
mov
jb
mov
xor
jnp
mov
mov
stos
inc
cmp
js
pop
sbb
xchg
push
jle
xor
lods
js
push
inc
sbb
adc
sub
rcll
popa
addl
stos
push
lds
and
jmp
insl
ficoml
outsl
scas
std
inc
sub
inc
mov
andl
hlt
adc
stc
rcll
push
movl
nop
mov
movsl
xor
jmp
jge
sbb
mov
aad
aad
sub
pop
ja
xchg
cmp
iret
nop
fbstp
xchg
arpl
data16
ja
fs
loopne
push
pop
in
pop
cmp
nop
and
push
mov
pop
xchg
mulb
mov
jne
scas
sarl
jbe
sub
mov
ds
mov
add
fidivs
adcl
dec
mov
ss
ret
outsl
hlt
jg
mov
leave
out
shll
xor
dec
cmp
popa
xor
xchg
jbe
pop
and
pop
mov
aas
dec
shlb
or
adc
cltd
icebp
push
and
mov
out
or
les
or
inc
repz
and
outsl
xorl
lock
lahf
es
pop
stc
push
or
lods
int
dec
sbbb
cmp
popf
or
push
ficompl
sub
movsb
mov
mov
mov
push
mov
out
or
add
data16
cmp
push
mov
lea
loope
out
in
xchg
mov
sarl
clc
jne
aas
xor
mov
arpl
js
mov
mov
sbb
xchg
mov
jg
loope
sub
push
push
movsl
mov
add
std
or
adc
push
push
test
mov
xchg
push
mov
jle
sub
icebp
fstps
rcrb
add
mov
jge
in
nop
pop
outsb
sub
lods
xchg
jg
out
fcomps
mov
sbb
lock
cmp
or
cltd
idivb
add
mov
jns
out
shr
cld
or
cmp
pop
sbb
aam
scas
xchg
pusha
mov
cmp
mov
or
cmp
sub
jmp
test
call
and
xchg
sub
mulb
std
add
cmpsl
sbb
fdivr
shlb
mov
xor
pop
imulb
jae
inc
movsl
scas
push
sub
sbb
outsb
in
sarb
cmp
daa
cmp
jecxz
insl
add
pop
xchg
jge
push
cmc
push
inc
mov
mov
mov
inc
lods
int3
and
mov
mov
and
xchg
push
adc
add
imul
lock
mov
lret
adc
xor
loopne
imul
bound
incb
mov
adc
add
xor
popf
mov
push
lret
out
mov
flds
push
inc
das
lret
hlt
inc
dec
movsl
sub
or
in
shrl
lock
imul
sbb
std
scas
movsb
aaa
in
and
dec
push
into
test
loope
andl
sti
test
clc
loopne
and
push
jmp
jl
hlt
mov
lea
out
mov
in
andl
xchg
add
outsl
lahf
adc
out
pop
push
mov
loopne
cmp
mov
mov
push
aam
mov
shl
cwtl
lods
adc
jnp
movsl
lea
xchg
sti
sahf
sbb
and
xchg
xchg
sbb
or
push
xchg
mov
out
mov
xor
cmp
pushf
loop
rcll
out
mov
sub
and
stos
loopne
cmp
aam
mov
jge
sub
in
mov
pop
dec
mov
jg
fwait
jbe
nop
ret
xchg
ret
jo
jecxz
xchg
inc
mov
fldcw
faddl
icebp
xchg
and
rorl
sbb
xor
lds
mov
mov
inc
fidivl
push
in
popa
testl
jle
data16
sbb
std
jo
cmc
sbb
lds
test
adc
adc
pop
movsl
loopne
mov
popf
push
mov
cmpl
inc
into
or
dec
dec
faddl
sub
sbb
xchg
enter
in
pop
push
out
mov
mov
outsb
or
sbb
pop
mov
adc
fbld
enter
in
std
lea
or
dec
std
sbb
mov
jb
jl
adc
in
inc
inc
pop
mov
add
adc
sbbl
inc
sahf
xchg
sub
into
scas
pusha
jg
sub
push
mov
iret
rorl
mov
mov
xlat
mov
xchg
mov
push
jne
dec
inc
adc
jae
loopne
outsl
js
test
push
in
pop
loopne
js
inc
stc
cmp
jmp
sub
adc
into
lods
sub
and
mov
push
aam
xchg
stos
cmp
test
out
lret
out
shll
test
push
push
sahf
mov
movsb
jge
mov
popf
mov
or
sbb
data16
cwtl
cmp
ds
pusha
lods
xchg
jbe
in
sti
pop
xchg
or
push
lret
daa
out
loope
cmpsl
inc
fs
jae
xchg
inc
xlat
sub
mov
ror
xor
mov
push
scas
pop
push
sub
in
mov
dec
add
sub
das
pop
mov
call
stos
mov
pop
add
mov
inc
cs
test
pop
dec
aam
hlt
jle
dec
jmp
les
mov
addr16
push
cmp
dec
mov
jp
sub
arpl
sbb
clc
push
xor
loope
movsb
or
je
jae
xchg
mov
or
and
pop
jo
mov
adc
dec
pop
into
mov
pop
rclb
cwtl
xorl
lret
test
mov
jo
sub
jnp
cmp
cltd
push
mov
je
jp
mov
pop
sub
mov
mov
push
stos
inc
lock
push
wrmsr
out
xor
stos
sub
sub
mov
xchg
aad
adc
fs
or
xor
lret
sti
sbb
test
fdecstp
incb
and
dec
fidivrl
sbb
fs
xor
outsl
xchg
push
subb
or
inc
test
in
cmp
adc
pop
rorl
jg
ljmp
xor
stos
dec
mov
ficoml
xor
mov
pop
push
adc
or
lret
xor
ljmp
pusha
cwtl
xor
jg
js
push
stos
add
xor
enter
shr
arpl
repnz
sbb
adc
jnp
cmpsb
jnp
and
and
fnstenv
jae
xor
jl
dec
inc
adc
xor
jg
loop
out
decl
mov
jne
sti
fwait
mov
add
in
sub
cli
or
aaa
hlt
add
dec
cmp
leave
hlt
shlb
push
mov
imul
inc
jg
idivb
popa
fadd
inc
push
pop
fs
ja
pop
mov
dec
cmpsl
int3
data16
or
scas
ret
fwait
mov
pop
mov
test
ret
lahf
push
movsb
xlat
in
mov
dec
cmp
sub
jge
std
dec
add
ret
or
rcrb
xchg
imul
outsb
out
xor
xchg
roll
test
imul
ljmp
mov
rcll
ljmp
push
lods
ret
insb
push
push
add
xlat
cwtl
shll
decb
mov
pop
sarb
fdivrs
push
pop
and
add
cmpsb
hlt
xlat
stos
and
lahf
ja
sub
divb
cld
cs
add
or
dec
ds
jge
adc
push
and
loopne
fsubrl
rcl
sbb
bound
or
pusha
jns
addr16
xchg
fnsave
mov
dec
pop
xchg
pushf
xor
mov
cmp
cs
mov
mov
call
jp
dec
test
es
and
in
lahf
ss
test
notb
cwtl
lcall
fwait
notb
jnp
imul
add
cltd
xor
ljmp
mov
jecxz
dec
bnd
ret
lock
loope
out
scas
add
add
add
fisttpl
sub
xchg
in
loop
xchg
push
rcll
adc
cmpsb
sbb
add
shrl
xlat
testb
fsubrs
or
mov
adc
xchg
mov
push
aad
inc
addr16
push
mov
outsl
addl
mov
popa
or
xchg
cs
sahf
mov
les
mov
pop
xchg
test
mov
cmp
test
xchg
pushf
cmpsb
xlat
cmp
add
xor
xorb
mov
or
dec
adcb
xchg
ja
mov
lret
fists
cmp
mov
lds
iret
pop
cmp
shlb
jp
mov
dec
lea
push
shlb
xchg
repz
call
inc
loop
movsb
lods
outsb
popf
fiadds
fsubrs
mov
clc
dec
gs
ds
cmpsb
cld
fmuls
mov
cmp
test
or
adc
cmp
testl
fwait
cld
cmp
out
xor
pop
pop
rcl
daa
mov
test
cmpsb
cmp
push
aad
mov
out
add
cmp
repnz
in
out
push
leave
inc
stc
inc
inc
mov
push
in
int
cmp
adc
adc
out
aas
push
sub
dec
jecxz
cmp
fwait
insb
sub
inc
cmpsb
loop
pop
arpl
repnz
cmpsl
out
repnz
or
test
sahf
movsl
adc
out
mov
push
sub
dec
lea
fidivrl
jge
shrb
pop
cmc
imul
movsb
mov
popa
fwait
aad
mov
push
jno
nop
pusha
stc
xchg
mov
outsl
mov
inc
push
mov
fnstenv
add
xchg
pushf
divb
jb
sahf
ljmp
rclb
cmp
insl
ss
or
lods
xchg
jp
jne
jae
aaa
mov
cmp
pop
add
js
imul
popf
sbb
and
jne
fs
loopne
dec
inc
and
repnz
es
cld
insl
mov
mov
lahf
out
add
idivb
sbb
sbb
in
mov
mov
mov
mov
jmp
jmp
xchg
and
mov
shrb
test
sub
cmp
mov
or
lods
jge
mov
fdivrl
test
leave
mov
and
out
inc
sbb
push
movsb
mov
push
out
sub
push
mov
lea
lea
mov
movsl
dec
shrb
or
add
movsl
xchg
pop
scas
push
call
gs
das
ds
inc
fimuls
adc
mov
pop
insl
xchg
adc
lods
fstpt
mov
mov
sahf
aad
pop
repz
jmp
addl
dec
mov
and
jge
aas
and
or
pushl
jnp
mov
adc
push
adc
dec
arpl
wrmsr
fisubs
sub
sub
sbb
mov
lods
das
cmp
je
nop
mov
ret
pop
xor
jl
or
jnp
or
mov
data16
cmp
cmp
pop
mov
ja
xchg
ret
hlt
and
cld
rcrl
cltd
cs
mov
repnz
cli
xlat
shll
mov
xor
xlat
scas
xor
adc
push
fwait
cld
dec
pop
xor
mov
jge
jecxz
into
data16
jmp
in
stos
dec
mov
jo
or
inc
pop
das
sub
scas
sub
ja
mov
jne
push
mov
cmp
loop
add
int
mov
aaa
push
loopne
xchg
sub
daa
fcmovne
mov
frstor
xor
mov
pop
dec
in
pusha
or
das
xor
sahf
jecxz
pop
mov
mov
and
mov
adc
out
push
push
xchg
pop
es
push
sbb
dec
or
pop
aam
pop
int
scas
add
repz
hlt
mov
push
movsb
sbb
fadd
movsl
addr16
push
and
insl
lahf
popa
leave
rorb
lret
xor
enter
repz
lds
inc
dec
pop
mov
test
fstpt
gs
push
lock
jecxz
nop
mov
xchg
add
push
cmp
or
sbb
leave
adc
stos
jge
jge
int3
call
xchg
cmc
mov
js
sahf
add
sbb
xor
xor
mov
out
les
xor
cmp
data16
pop
sarb
push
pop
mov
jl
inc
flds
lret
pop
adc
mov
xchg
inc
adc
int3
jp
lcall
and
pop
sub
test
js
ja
out
pop
call
icebp
loopne
out
adc
sbb
cmp
sub
enter
jg
or
leave
and
js
sbb
or
jl
nop
mov
out
sbb
mov
jb
cmp
das
add
xor
and
aas
fs
sarl
xor
jmp
in
or
insb
sub
mov
test
lods
adc
dec
dec
pop
jl
imul
jp
push
les
movsb
jae
mov
or
mov
in
pop
add
repnz
sub
mov
aas
dec
pop
loopne
mov
cmp
ds
inc
test
xor
pushf
mov
add
or
shl
decl
aad
pop
mov
xchg
xchg
cli
push
lea
cwtl
pop
les
ret
ret
je
sbb
test
lret
cld
xor
int
push
rcrl
mov
jne
xchg
into
lahf
jae
mov
ficoms
fsubrs
push
in
lcall
sbbb
or
movsl
cmc
sub
or
push
mov
std
push
std
inc
cmpsl
push
xor
and
mov
leave
stos
out
rcrl
iret
addr16
jecxz
mov
mov
sbb
inc
arpl
mov
jmp
pop
mov
out
test
lods
jno
call
dec
cmp
jnp
xor
std
rol
mov
imul
add
xor
movsb
push
push
mov
pop
mov
loope
jnp
push
or
cmpsl
jne
cltd
cmpsb
add
iret
adcl
cmp
addr16
pop
inc
mov
rorb
test
xchg
shlb
inc
lret
ja
dec
popfw
xor
dec
add
je
in
jne
movsb
jl
jo
scas
cltd
imul
ja
push
add
xchg
inc
in
imul
inc
dec
or
jle
cmp
test
adc
adc
fisttps
aam
add
jo
out
jg
into
pop
cmpsl
sbb
mov
pop
add
inc
jle
mov
mov
xor
fsub
add
mov
cwtl
sub
push
ds
lods
into
lods
inc
cmc
dec
and
cli
push
int3
aad
sbb
insl
dec
push
pop
mov
add
pop
cwtl
or
and
test
add
mov
enter
dec
fucomp
loop
addb
mov
pop
mov
popf
data16
into
xchg
in
add
enter
fldl2t
mov
sbb
rolb
pop
hlt
mov
adc
mov
push
mov
xor
inc
inc
imul
loopne
sbb
xor
xchg
sahf
imul
and
aaa
lret
mov
jl
push
or
dec
shlb
jo
pop
imul
push
pushf
xor
int3
or
aas
pop
sarb
push
gs
mov
xchg
js
sbb
cmp
jns
dec
das
inc
jp
mov
jecxz
loop
cmpsl
stc
and
or
jns
jge
ficomps
xor
lods
push
cmp
xchg
fcomi
mov
ja
sub
mov
push
stos
repnz
mov
pop
adc
xchg
inc
jp
or
jl
cli
mov
mov
cltd
inc
imul
adc
xchg
or
pop
subl
arpl
std
not
jno
xchg
call
and
lea
in
movsl
lret
fdivs
inc
imul
insb
ret
ret
mov
mov
xchg
pop
cmc
ret
cli
cmp
cmp
in
insl
jp
sbb
dec
in
shl
jge
insb
sub
aam
sub
pop
xor
cmp
cltd
dec
inc
ret
outsl
and
or
pusha
jne
sbb
sti
seta
mov
stc
daa
daa
mov
iret
data16
out
cmc
in
push
add
data16
cs
jp
mov
xchg
dec
add
cmp
fwait
dec
push
repz
dec
out
fcoml
or
pop
mov
or
int3
push
insl
and
xor
scas
icebp
mov
mov
rcll
int
jnp
or
rcrb
ja
jecxz
fbstp
inc
cli
insl
xchg
pop
fsubs
pop
out
mov
inc
jl
sbb
sbb
jecxz
jmp
mov
xor
popf
in
jp
xor
sarl
rorl
out
cmp
aad
or
jae
cwtl
stos
mov
cmpsb
insl
add
sbbb
fisttpll
shr
test
or
push
out
shrl
lahf
popf
inc
dec
mov
mov
push
fs
aad
xchg
outsb
pop
jns
adc
sub
lods
scas
es
ret
decb
sub
iret
pop
cmp
out
cmp
into
movsl
lds
xchg
add
jb
sbbl
pop
sub
lods
and
aaa
add
jmp
mov
pop
inc
xlat
cmpb
jecxz
sub
mov
cmp
xchg
rol
mov
insb
popa
loopne
pop
pop
cmp
cltd
repnz
iret
pop
in
test
loope
and
int
in
add
repnz
dec
cmp
push
lds
cmp
aas
push
mov
pop
cmc
xorb
cmp
inc
pushf
sbb
mov
mov
jl
pop
add
pop
test
fidivl
or
xor
frstor
push
sub
add
and
fs
mov
inc
test
xchg
mov
mov
add
push
bound
and
xlat
test
or
imul
cmpsb
imul
dec
adc
test
xchg
pop
lods
sbb
or
mov
and
decl
sbb
mov
ja
testb
mov
or
adc
xor
mov
cmp
pop
loop
ret
sub
dec
rcrb
testl
or
cmp
out
lock
enter
adc
push
fwait
xor
pop
xor
jmp
insb
test
mov
xchg
xchg
mov
jo
lock
jge
pop
xor
xchg
sub
push
sub
sbb
xor
pop
je
cld
sar
dec
repz
jmp
fnclex
pop
xor
jo
and
xor
sbb
imul
lea
movsl
mov
in
pop
das
mov
repnz
cmp
pop
jbe
pop
and
ret
data16
mov
test
jg
or
shr
mov
mov
cli
mov
les
test
ljmp
dec
pop
hlt
jp
sti
adc
or
jo
cli
leave
out
push
jo
push
jb
shr
pop
sahf
sbb
and
adc
jge
xor
cmp
insl
out
dec
les
ret
ret
push
sbb
pop
dec
add
aad
xor
or
mov
lea
sarb
adc
and
push
ds
data16
lods
or
mov
dec
sarb
pop
out
popf
and
aam
jmp
in
jecxz
add
test
mov
notl
adc
pusha
add
inc
shr
jmp
fwait
sub
aas
repz
bound
fcmovnu
xchg
mov
dec
dec
xlat
mov
push
mov
enter
shlb
inc
inc
mov
dec
mov
bound
dec
sub
movsb
lods
jg
cmp
int
mov
adc
xchg
jo
mov
add
bound
mov
push
in
mov
mov
adc
jp
outsb
cmpsl
stc
lcall
aam
xchg
les
xchg
inc
test
add
mov
add
lock
arpl
push
sahf
and
insb
mov
shrb
sbb
sub
sbb
jmp
imulb
cmp
inc
andb
dec
dec
cmp
enter
cmp
iret
scas
jo
addr16
dec
mov
dec
pusha
lret
mov
mov
or
cmp
bound
xchg
andb
fidivl
push
rcrl
in
fidivl
xchg
daa
shrl
push
ds
pop
iret
aam
loope
mov
out
ret
xor
push
dec
aas
push
imul
popf
scas
sarl
imulb
jge
leave
lods
data16
fwait
push
mov
xchg
jo
lret
cmp
lahf
mov
fsincos
aad
cs
xor
mov
ja
out
jo
inc
into
nop
xchg
pop
ret
fucompp
mov
scas
lahf
sti
mov
fnstcw
sbb
sub
movsb
rol
imul
sbb
cmp
jge
out
lcall
sub
out
xor
jmp
and
loop
in
hlt
push
or
test
xchg
adc
sbb
push
in
jne
inc
jge
jge
mov
pop
popf
jg
jae
sub
lock
dec
aad
mov
mov
xlat
mov
dec
sbb
aaa
loop
sti
setno
clc
xlat
jmp
or
ss
pop
rcrb
fidivrl
popa
mov
scas
push
jmp
cmp
or
mov
xchg
arpl
bound
adc
stos
loopne
lret
push
mov
scas
std
cmp
sub
push
cmpsl
sbb
sbb
mov
in
jbe
fidivrl
inc
lock
inc
or
scas
xor
das
or
into
lret
insb
js
lds
fdivl
add
stos
push
das
shrl
pop
mov
test
lret
mov
adcb
bound
test
inc
sub
daa
imul
xor
outsb
xor
jne
test
pslld
pop
pop
cmc
dec
popa
or
sbb
inc
push
out
jae
sti
pop
xor
jmp
xorb
push
js
jo
int
fnstenv
push
sub
inc
xchg
xor
cli
mov
in
int3
push
ja
push
cmpsl
mov
pop
and
sbbl
popa
loopne
push
scas
and
mov
mov
loopne
push
movsb
adc
jl
lret
nop
sbb
popa
dec
mov
mov
pop
or
sub
pushf
or
stc
pusha
lock
add
or
scas
iret
popf
imul
js
gs
sti
test
pop
fwait
cltd
mov
lods
cmp
mov
scas
push
loop
mov
cwtl
call
js
outsl
rcr
repz
mov
stos
stos
mov
jnp
dec
mov
push
test
scas
jge
pop
mov
fidivrs
lahf
sarl
aas
or
push
ss
mov
dec
sub
or
and
rol
xchg
add
xchg
dec
fwait
es
adcb
addr16
out
sbb
sbb
xchg
or
jnp
shlb
mov
adc
lds
sti
or
shl
in
sub
stos
call
daa
insb
xor
jecxz
aaa
mov
out
add
xor
add
pop
imul
or
inc
popa
movsb
popa
pushf
loope
call
dec
je
fsts
bound
inc
sub
fldl
sbb
add
je
lret
or
jecxz
ljmp
test
jbe
inc
es
inc
jno
pop
adc
in
mov
ss
out
cmp
adc
in
repnz
mov
jns
mov
mov
outsl
loop
pusha
stos
clc
sbb
sub
xchg
rcrb
in
inc
mov
daa
outsb
mov
insb
iret
ja
int3
push
pushl
sub
cs
aaa
jb
mov
sub
xchg
or
push
aad
inc
push
aas
data16
push
or
les
mov
mov
push
inc
sbb
addr16
sbb
adc
mov
mov
xchg
xchg
stc
enter
scas
insl
ret
shrb
fbstp
xchg
and
sbb
test
fdivrl
lcall
enter
out
sbbb
xchg
pop
pop
dec
add
in
sub
lds
mov
aas
sub
repnz
pushf
insl
loopne
inc
mov
mov
pusha
fnstenv
lea
je
aas
cmpsb
cmp
stc
lds
shll
push
push
out
mov
push
jne
inc
mov
xor
xlat
mov
popa
scas
mov
test
stos
and
xlat
js
jns
test
popa
jbe
and
push
xchg
call
movsb
xor
sub
mov
adc
fucomip
adcb
xchg
add
mov
jo
lret
fimuls
mov
in
pop
repnz
pop
scas
fidivs
jns
lock
cmp
or
out
jnp
mov
out
ja
ficomps
dec
loope
sahf
loope
add
push
in
xchg
xor
cmp
je
mov
test
inc
out
hlt
inc
xchg
imul
mov
or
iret
mov
in
mov
dec
dec
mov
add
pop
lea
mov
sti
hlt
push
push
mov
insl
cmp
lret
jle
pop
lds
cmp
dec
les
aam
xchg
test
scas
pop
lret
ficomps
fwait
out
sbb
je
in
data16
insb
mov
cs
mov
es
mov
mov
or
stos
mov
adc
mov
xchg
xor
rorb
push
xor
call
add
orb
or
sbb
mov
out
inc
pop
xor
testl
adc
xor
gs
ds
popf
dec
mov
ret
jb
and
jne
push
cmpb
popf
mov
popf
xor
aas
in
pusha
movsl
cmp
adcb
pop
pushf
mov
sbb
dec
icebp
rcrl
lock
and
mov
stos
xor
dec
dec
mov
xor
jge
dec
clc
jnp
sbb
in
pop
lods
mov
xor
xchg
dec
out
daa
sbb
inc
insl
fdiv
test
clc
ds
cld
push
mov
test
notb
pop
xor
pop
cmpsl
ret
in
jmp
into
mov
popf
cwtl
sub
lea
fdivrp
cld
dec
fucomip
or
cmp
mov
leave
cmc
sub
mov
mov
loope
nop
xor
in
icebp
pop
adc
sarb
and
jecxz
bound
test
mov
loope
xor
sti
pop
xchg
jle
jb
xlat
fimull
jnp
dec
and
mov
inc
jecxz
lock
out
and
pop
push
and
add
xor
iret
sahf
sti
inc
cmpsl
cmp
pop
movsb
pop
inc
lcall
or
cmpsl
cld
outsl
sbb
mov
and
aas
mov
lds
clc
dec
call
xchg
lret
xchg
mov
adc
push
scas
and
xor
and
sti
jbe
dec
call
inc
jae
inc
in
adc
dec
sub
jbe
push
scas
mov
xor
fwait
xor
cmpsb
pushf
stos
test
jb
push
mov
loopne
cmp
js
faddp
popf
les
sub
into
pop
enter
inc
xchg
jns
mov
cld
outsl
mov
push
fbld
or
sti
and
fwait
jno
dec
ret
inc
cld
pop
pop
mov
mov
sub
bound
rcrl
insl
or
int
and
or
pop
repz
cmp
add
xorb
mov
cs
fnstenv
movb
ja
and
loop
rol
inc
xchg
imul
dec
pop
adc
pop
push
jmp
fldcw
testb
pop
cmpsl
sbb
and
lea
in
push
out
lret
es
mov
imul
setb
daa
jge
pop
fsubp
mov
sbb
out
lahf
pop
call
jl
hlt
adc
fmul
bound
test
jnp
ljmp
mov
ret
outsl
xor
mov
bswap
mov
ss
push
les
mov
stos
popf
xor
fimuls
xchg
mov
arpl
lret
inc
dec
add
jge
jle
ficompl
sub
xor
mov
or
mov
test
inc
out
pop
xor
pushf
bound
push
sbb
jbe
inc
je
add
into
test
or
inc
inc
mov
mov
shl
jge
inc
lds
jge
push
jg
and
out
das
fidivrl
push
les
ds
inc
adc
inc
lfs
add
fisttpll
cmp
cmp
data16
movsl
int3
pop
add
push
cld
stos
icebp
std
sub
cs
mov
inc
pop
rcrl
repnz
pushf
scas
pop
adc
cwtl
hlt
int
mov
push
dec
xor
insl
inc
pop
lahf
repnz
or
pop
lock
jns
inc
cli
jns
dec
and
adc
xchg
inc
sub
add
pop
repnz
sub
jg
ret
subl
dec
cmp
sbb
mov
repnz
mov
movsb
fldcw
test
inc
outsl
orb
dec
mov
ret
decb
xchg
pop
test
fdivr
fucomip
das
cli
push
enter
es
jae
and
popf
or
les
cmp
idivl
dec
cmp
sbb
int3
push
fnstcw
in
test
jecxz
mov
fcomi
sub
dec
lods
cmp
adc
cld
inc
push
dec
mov
icebp
mov
fcoms
rcll
gs
add
and
call
scas
clc
sbb
cmc
mov
dec
and
jge
or
pop
stos
cmp
out
pop
or
xor
or
jge
dec
shll
push
test
push
and
push
out
rorl
popf
ja
inc
rclb
inc
data16
dec
movsl
aas
cltd
or
mov
aam
mov
scas
cmc
and
mov
testb
insb
mov
pop
ljmp
jno
out
ret
push
pop
fcomp
test
mov
lock
push
push
dec
test
sub
add
sbb
les
sbb
jne
ret
pop
push
mov
cli
lahf
jg
xchg
sbb
test
in
dec
sti
rorb
mov
mov
xchg
fucomip
out
es
xchg
pusha
mov
push
or
dec
lea
pushf
xchg
or
push
sub
pop
jge
stos
pop
repnz
loope
xor
aam
inc
cli
mov
sbb
arpl
test
jns
push
in
or
scas
mov
lahf
movsl
lahf
ljmp
andl
mov
in
add
es
pop
aas
lock
out
adc
scas
das
cld
dec
shrb
push
push
orl
mov
jmp
push
jle
sub
js
or
xchg
push
push
lcall
jno
aad
fidivrl
jae
xor
fists
jg
popf
inc
xchg
cmpsl
mov
cltd
cmc
enter
jne
cmp
xchg
or
enter
xlat
inc
cmpsl
stos
jmp
adc
pusha
pop
outsl
adcl
lret
dec
popf
add
aas
cmp
out
pusha
mov
mov
mov
inc
and
cltd
popf
xor
ljmp
popf
jno
ja
mov
and
clc
xchg
push
cmpl
inc
jg
jb
inc
f2xm1
inc
into
push
cltd
fstp
mov
cmp
lret
bound
jmp
xorb
push
xor
sub
add
fisubl
iret
movsl
mov
lds
cmp
dec
and
arpl
mov
jecxz
and
call
cld
out
jecxz
loop
jp
fmul
mov
add
ret
fbstp
adc
test
pop
or
int3
js
xchg
push
cmp
ret
and
out
in
mov
and
movsl
js
dec
imul
jl
adc
jge
add
aas
enter
pop
cmp
fidivl
pop
cmpsl
stc
cmpsl
mov
sbb
push
push
add
nop
jo
xchg
sub
or
loopne
popa
sub
xchg
jle
fisubrl
lret
push
in
inc
scas
in
rcr
cmp
cmp
lods
sti
test
rcrb
jnp
aam
fbld
cs
cs
dec
pushw
test
lahf
cmpsl
out
add
or
mov
cmp
lret
pop
cbtw
das
mov
inc
mov
jns
inc
clc
pop
popa
aam
pop
jbe
pop
test
imul
push
jae
push
movsb
addr16
lcall
movsl
cmp
fdiv
mov
mov
loopne
shlb
add
inc
xor
in
notl
aam
pop
jb
in
jp
ja
shr
sub
sbb
adc
cs
push
outsl
and
dec
sbb
inc
sti
mov
movsb
dec
sub
addr16
js
xlat
jle
pop
cld
xchg
orl
test
mov
enter
test
cmp
pop
and
ficompl
inc
pusha
ss
lds
mov
icebp
cs
pop
frndint
inc
mov
and
out
jmp
xorl
jle
or
movsl
pushf
jp
dec
mov
dec
es
je
loope
mov
out
jne
decl
xchg
sub
pop
cli
push
add
clc
cmpsl
and
movsl
sarl
mov
cmpsl
in
shl
das
cmc
xchg
sub
les
imul
in
addl
xchg
mov
shll
imul
cmp
add
sub
or
aaa
fucom
xor
lahf
mulb
scas
faddl
mov
jmp
jecxz
insb
or
sahf
mov
dec
push
imul
sti
pop
fidivs
lds
push
push
lcall
mov
cli
into
stos
lahf
test
inc
lods
fdivrl
loope
icebp
cmp
dec
nop
pop
adc
repz
sub
pop
ret
lea
lods
sbb
rorb
cld
pop
adc
rcrl
jmp
jns
jns
push
sahf
aas
mov
jo
int
add
and
mov
xchg
outsl
cld
xchg
mov
je
js
jl
lea
xchg
dec
pop
push
jmp
fdivl
xchg
inc
nop
mov
jg
mov
push
stos
repz
cmpsl
aas
mov
mov
shr
ret
lahf
cld
fbld
icebp
outsb
add
xchg
mov
sub
enter
mov
lock
lods
fldcw
adc
dec
mov
lcall
ficomps
inc
enter
jecxz
xchg
dec
mov
sub
or
nop
mov
ds
jmp
ret
mov
inc
aaa
mov
call
popa
lods
push
mov
pop
leave
push
mov
in
iret
scas
out
fisubl
test
mov
pop
scas
sarb
mov
outsb
adc
xchg
sub
mov
mov
pop
loopne
pop
shlb
jecxz
jnp
stos
dec
push
mov
push
hlt
movsb
fldenv
mov
xchg
data16
test
iret
cmp
xor
rclb
insb
js
add
ficomps
mov
loopne
mov
repz
and
jne
shll
sbb
cli
int3
sub
test
dec
loopne
daa
mov
mov
jp
into
xchg
outsb
cmp
std
jo
xor
out
and
jb
mov
lcall
mov
inc
inc
mov
xchg
add
xchg
dec
adc
rol
call
add
dec
mov
repz
out
dec
mov
pop
icebp
test
cmpsl
push
sbb
neg
shll
loope
cs
out
mov
out
xchg
add
xchg
xor
adc
push
das
pushf
mov
mov
testl
push
das
cmp
mov
pop
cmp
out
pop
pop
in
sbb
insl
sub
adc
mov
loop
jmp
and
inc
adc
faddl
gs
push
popa
mov
mov
add
les
jo
into
lret
jmp
jmp
in
loopne
xor
mov
fdivl
dec
push
lods
sti
scas
dec
pop
or
fcomp
xor
out
nop
push
shll
in
call
fdiv
add
dec
jbe
movhlps
adc
jle
xchg
cmpsb
xor
xchg
add
imul
call
jb
sahf
fdivl
fidivrs
xor
pop
mov
aas
ret
sbb
and
repz
push
pop
jno
xlat
push
ficompl
repnz
sahf
movsl
outsb
call
test
lods
jmp
lock
jo
in
pop
push
loope
mov
mov
into
pushf
mov
subl
sub
mov
jns
sbb
sub
test
inc
pop
repz
movsl
scas
add
pop
mov
push
sbb
hlt
or
pop
dec
fildll
mov
xchg
test
dec
jbe
paddb
dec
loope
pusha
xchg
cld
mov
sbb
xchg
pop
repz
mov
fsubrs
ret
add
xor
xor
or
or
ret
shrl
xchg
out
sub
sbb
inc
dec
mov
fnstsw
lds
push
call
and
outsl
shrl
xchg
les
cld
lcall
mov
sub
push
xor
int
out
imul
dec
fildl
pop
out
adc
mov
fs
jnp
dec
dec
imul
aas
push
pop
out
xchg
cmp
dec
sbb
inc
pop
test
into
cmp
cld
dec
or
sbb
mov
jle
imul
sbb
lahf
in
cli
sbb
addb
xor
mov
roll
arpl
push
mov
leave
andb
jg
iret
int
mov
rcrl
aam
pop
mov
mov
sbb
lret
jbe
lods
sub
inc
cmpsb
adc
and
or
das
or
jmp
inc
mov
sub
mov
ja
pop
repz
in
cli
xchg
ja
les
mov
pop
jge
ds
and
test
bound
stos
daa
dec
add
mov
into
xlat
push
stos
loopne
test
test
pushf
inc
nop
lahf
out
popa
es
xchg
roll
cmp
inc
jb
out
gs
seta
out
cmp
cmp
les
pushf
leave
cmc
mov
and
jl
sub
rorl
leave
inc
pop
lods
jl
int
pop
incl
push
call
mov
mov
test
iret
sbbb
inc
loop
repnz
jno
push
je
xchg
pop
repz
iret
jp
jmp
pop
push
inc
dec
lods
inc
jle
test
pop
bound
or
stos
xchg
js
aam
xchg
sub
cwtl
in
cwtl
cmp
and
push
push
cmc
inc
ficoml
outsl
loopne
testl
jns
push
push
movsl
adc
pop
dec
int3
jbe
je
mov
in
shll
or
push
fcomps
mov
out
jmp
push
xor
fsubr
jae
shlb
je
mov
fldl
aam
js
adc
xor
imul
mov
or
fsubr
inc
and
popf
fnsave
nop
push
test
mov
fldl2t
pop
gs
pop
js
lahf
arpl
call
popf
pop
jo
into
mov
aaa
into
jnp
arpl
idivb
call
push
std
ja
xor
insb
add
pop
out
xchg
ret
bound
outsb
add
jbe
int3
orb
mov
jl
jnp
jmp
in
mov
repz
cmp
push
out
and
decb
sbb
push
sarl
lcall
in
pushf
fistpll
jmp
mov
sbb
es
imul
inc
out
frndint
or
loop
mov
lods
mov
sub
shr
ret
aas
jb
add
lcall
movsb
fmulp
lret
or
test
push
xor
int3
push
mov
sbb
in
mov
push
popf
pop
mov
inc
loop
aas
call
inc
lock
sbb
ret
andl
adc
and
into
jno
jecxz
arpl
inc
sti
push
shrl
jo
daa
pop
mov
xchg
test
and
pop
aas
into
inc
pop
push
push
mov
xchg
or
mov
pusha
mov
mov
inc
loop
push
adc
inc
stos
and
fwait
cmp
push
cmp
sbb
repnz
js
int3
ss
inc
mov
fsubr
sti
push
aam
fistps
ljmp
mov
test
test
pushf
jbe
rcl
loope
push
ret
pusha
sbb
negb
stos
sahf
arpl
clc
iret
jecxz
hlt
inc
and
xchg
mov
or
push
sarb
pop
imulb
mov
xchg
fldenv
mov
std
mov
inc
dec
pop
inc
out
add
fadd
imul
xchg
scas
pushl
std
pop
scas
pop
and
lea
cmp
dec
clc
mov
fists
xlat
mov
lret
cmpl
lods
inc
mov
adc
cld
sub
inc
pushf
test
pop
leave
xchg
adc
std
ljmp
adc
mov
fs
jl
adc
xchg
add
dec
loop
stos
jns
adc
out
add
ss
pop
jge
or
or
hlt
imul
js
adc
mov
sub
out
out
dec
in
dec
fidivrs
shrb
inc
mov
jbe
push
aam
xor
aaa
mov
push
or
stos
fildll
cmp
addb
pop
jecxz
sub
add
mov
inc
addr16
ja
es
dec
mov
fwait
les
call
push
das
insb
jne
jl
or
mov
inc
cmpsl
js
dec
xchg
push
jmp
mov
pushf
movsb
dec
mov
push
ljmp
pop
jg
mov
mov
movb
add
jge
dec
fucomi
sahf
repz
xchg
xor
or
xchg
repnz
sbb
test
fcoml
lret
jbe
popa
cwtl
cs
dec
nop
out
mov
fsubl
inc
rorb
mov
aad
push
fsubs
jbe
std
sti
and
loop
les
mov
jnp
jmp
out
xorb
out
push
sbb
out
pop
sahf
jne
mov
mov
sti
cld
outsl
loope
push
push
testl
and
nop
sbb
lret
ds
cmpsb
popa
xchg
fwait
xor
cmp
psadbw
jp
sub
sbb
je
cwtl
pop
mov
xchg
mov
jmp
xor
clc
push
mov
mov
or
dec
lods
cmpsb
in
or
mov
je
jmp
push
pop
push
cmovs
cmpsb
imul
out
insl
jne
sahf
ja
cmp
mov
sti
stos
or
popa
clc
lods
sub
add
imulb
or
insb
mov
lcall
insb
adc
xchg
insb
or
xchg
adc
imul
xor
leave
gs
adc
dec
mov
mov
jno
mov
push
or
std
xchg
pop
jge
lea
fstpt
or
jmp
lahf
cmp
jg
mov
inc
loopne
adc
lahf
sub
mov
pop
xor
dec
pop
stc
push
fiadds
cmp
into
cwtl
xchg
fwait
enter
out
loop
jp
aaa
push
and
mov
xchg
push
dec
mov
dec
xlat
cltd
jbe
test
xchg
cmp
mov
hlt
mov
imul
popf
xor
inc
jle
cwtl
xor
or
subl
mov
in
lods
adc
out
pop
je
or
xor
cltd
repz
xor
andb
js
rolb
sub
lcall
and
mov
cltd
and
scas
es
or
mov
mov
add
mov
dec
mov
or
xor
stc
sahf
dec
mov
cltd
rcl
call
insb
in
jl
jae
daa
call
fisubl
xchg
insl
mov
popa
mov
xchg
repnz
out
mov
jne
cwtl
int
aam
cli
or
stos
adc
test
jmp
test
sub
and
sbb
cmpsl
jl
nop
jo
sbb
push
mov
add
fdivrs
fs
adc
daa
mull
pusha
mov
fcompl
scas
push
js
cmp
and
or
shrl
cmp
cmpl
popl
pusha
mov
clc
sti
xchg
adc
mov
cmp
or
xor
lcall
and
push
je
and
bound
les
jns
repz
xor
sbb
js
cmc
and
pusha
int
jmp
int
xchg
in
dec
and
cmpsl
cld
enter
out
sub
sbb
cmp
mov
cmpsl
adc
sbb
mov
push
outsb
hlt
push
jno
cmpsb
mov
jle
test
pop
in
testl
add
pusha
aas
xchg
jmp
adc
pop
lds
imul
jo
cltd
mov
adcl
xor
xchg
pop
lcall
call
mov
test
lock
cs
push
jge
cmp
xchg
lcall
jle
xor
hlt
mov
push
out
mov
jmp
or
xor
test
cltd
xchg
icebp
mov
lret
mov
pusha
incb
or
xchg
cmp
or
push
outsl
inc
mov
mov
aam
and
js
pop
bound
fnsave
pop
das
data16
insl
pop
stos
popf
aas
mov
add
xchg
mov
cmp
aas
fidivrs
cmp
loope
and
xor
mov
push
aam
enter
dec
sti
lds
xchg
jnp
sbb
and
cld
xorl
add
loopne
inc
gs
cwtl
test
stc
pop
mov
jl
mov
lock
adc
add
popl
ja
outsl
daa
fidivl
mov
gs
xor
lods
jo
fists
inc
scas
ja
out
cs
mov
lcall
adcb
sbb
jp
jl
mov
pop
pusha
rolb
out
fwait
lahf
ja
in
call
fdivs
into
mov
add
mov
inc
mov
lahf
adc
xchg
in
stc
fisubs
stc
nop
mov
imul
mov
mov
pop
in
cli
pop
add
ret
jg
hlt
mov
outsb
cmp
xchg
shrb
arpl
pop
outsl
loop
jg
mov
adcl
sub
mov
mov
jmp
inc
mov
add
test
inc
mov
push
lock
aam
mov
icebp
xchg
and
mov
test
mov
call
or
hlt
pop
jg
fldenv
lds
push
push
jo
iret
xor
cmpsb
loope
pusha
push
adc
jmp
add
ror
out
aaa
stos
lret
push
dec
jecxz
push
inc
in
fisubrl
cli
push
cld
xor
jge
push
lcall
es
mov
addr16
leave
mov
xor
repz
and
jns
scas
jmp
das
cmp
xchg
mov
sub
cli
xchg
cmc
mov
mov
aaa
sub
fsts
jno
cld
jp
inc
dec
adc
mov
xchg
mov
mov
lret
stc
pop
lahf
ss
sbb
pop
jle
in
stos
stc
and
fisubrs
sbb
push
insl
clc
dec
test
xchg
xchg
mov
fdivs
aam
cmp
stos
mov
cmp
pop
jns
dec
and
lahf
nop
cmp
mov
or
fsts
or
sbb
xchg
xor
xor
js
ss
and
fsubs
or
sbb
push
xchg
xchg
int
mov
outsl
hlt
pop
inc
pop
xor
and
repnz
ds
call
mov
dec
movsb
adc
dec
ja
add
pop
ret
xorb
cltd
mov
push
mov
jb
je
jbe
adc
test
outsb
inc
invd
lahf
xchg
mov
test
dec
mov
or
lock
jb
pop
mov
mov
xchg
sbb
nop
mov
call
push
aam
insl
clc
aas
ljmp
sub
cltd
jo
out
mov
mov
ja
mov
xor
mov
daa
in
pop
cmp
rcl
pop
pop
cmp
imul
lds
rcl
fs
and
movl
dec
andb
shr
push
mov
in
push
mov
pusha
in
lret
fisubl
inc
sbb
xchg
or
fcomps
cmp
clc
gs
pop
or
dec
jp
popf
inc
cmp
popf
jg
xchg
movsl
sbb
les
dec
mov
cmp
or
xchg
movsl
lea
pushf
out
pop
adc
mov
lret
addr16
push
lret
xor
testl
inc
adc
cld
int
or
push
fstpl
mov
dec
sahf
sub
cltd
push
inc
sti
inc
repz
sbb
add
data16
xchg
jmp
imulb
stc
sub
inc
in
jg
or
jbe
cmp
jge
lret
daa
hlt
popf
lods
aam
jbe
cli
adc
sbb
and
jle
cli
cmpsb
add
int3
xor
xor
sti
jmp
scas
out
ficoml
lret
inc
or
pop
jns
sub
call
jns
xor
lods
mov
push
lea
add
mov
jmp
inc
pop
repnz
aaa
jmp
push
cmp
sbb
rcr
jbe
and
mov
fildl
repnz
int
loope
dec
dec
fsubrs
mov
popa
mov
es
cmp
pusha
cld
in
push
addr16
push
lods
mov
pop
sub
movsb
dec
dec
leave
or
pop
sete
cmp
xor
add
dec
loopne
push
mov
stos
addr16
icebp
jnp
fdivl
push
dec
ss
inc
xchg
inc
jb
mov
xchg
bound
or
daa
adc
mov
mov
lret
out
clc
loope
mov
test
inc
sub
push
jno
fiadds
pop
or
clc
fldl
notb
stos
mov
data16
xchg
lock
jae
rolb
adc
fcomp
das
adcl
inc
out
add
push
stos
cmpxchg
mov
shll
mov
lds
outsb
pop
adc
hlt
inc
out
mov
sub
daa
mov
fnstcw
cmp
sub
cmp
bound
mov
into
popa
insb
out
jno
and
idiv
iret
popf
stc
jnp
cmp
adc
mov
pop
jae
add
fbld
mov
fsubl
in
lcall
fprem
aas
pop
jge
nop
scas
sbb
jns
nop
daa
push
cltd
dec
push
push
mov
lret
rorb
lea
add
pop
fwait
push
das
test
loop
xchg
jb
scas
dec
call
and
xor
mov
xchg
fidivl
and
test
lods
add
xchg
shll
adc
lret
les
push
jmp
jl
sub
ds
pop
movsb
jg
clc
dec
push
js
out
rcl
in
add
jnp
sub
scas
add
cmpb
push
stos
pop
cmp
adc
xchg
jae
xchg
adc
pop
mov
scas
mov
addr16
mov
aas
shrl
dec
clc
or
lret
lds
stos
add
xor
les
push
adc
imul
lret
xor
pop
adc
push
inc
pushf
and
jb
les
jg
mov
jmp
popa
loope
stos
xchg
rolb
in
mov
adc
push
fcmovnb
xor
xor
jnp
fstps
or
push
frstor
mov
jno
gs
dec
gs
mov
push
and
dec
adcl
shlb
xor
aam
adc
in
pushf
push
jo
fcoms
push
mov
mov
loope
sbb
rorl
rorl
inc
ficompl
xchg
pop
lods
jae
xchg
lret
pop
mov
andb
adc
push
fldenv
push
jb
inc
push
cmpsb
dec
lds
into
cmp
pop
ret
repz
nop
fdivl
arpl
mov
xor
inc
adc
inc
pop
ret
xor
fcomps
adc
mov
pop
and
nop
inc
imul
dec
imul
nop
mov
imul
mov
ljmp
ja
pop
adc
js
bound
cmpsl
es
adc
pop
loope
mov
pop
adc
aas
pop
mov
xor
jbe
cmp
pop
dec
push
pushf
or
mov
aam
je
mov
add
xchg
fwait
jae
and
popf
idivl
aam
inc
negl
xchg
insl
rorl
xchg
sarl
inc
jmp
adc
pop
icebp
shll
iret
mull
mov
add
cli
xor
pop
cmp
ss
mov
enter
jnp
test
popa
mov
add
or
mov
cmpsl
fiadds
ffreep
or
xchg
xchg
imul
lahf
fnstenv
inc
or
mov
lds
out
shlb
cmpsb
cmpsb
vfmsubaddps
or
mov
movsl
lret
in
xchg
push
ror
jecxz
jg
mov
loop
push
and
add
dec
lea
mov
test
xor
aaa
mov
cmpl
pop
mov
push
je
ja
fimuls
ret
aaa
loop
mov
sbb
outsb
jle
pop
mov
jbe
shll
stc
loopne
scas
xchg
aaa
pop
shl
mov
add
mov
ret
lods
push
ljmp
call
imul
ljmp
outsl
loopne
sub
cli
sub
mov
daa
pop
mov
inc
aas
incl
cli
ljmp
lock
mov
ret
ja
aam
and
int3
adc
pop
jbe
mov
inc
adc
mov
jo
sbb
scas
push
movsl
scas
ret
mov
sub
xchg
push
dec
mov
call
lds
loope
mov
call
cmp
rclb
lds
lret
es
dec
iret
jae
mov
imul
sbb
cmp
movsb
bound
inc
dec
mov
inc
sbb
adc
rep
aaa
movsl
xor
add
stos
lods
sahf
aad
add
inc
cmp
movsb
add
rcrb
sti
dec
loopne
lret
jb
sbb
loop
jb
out
mov
pop
cmp
sarb
add
call
push
sarl
xchg
scas
mov
mov
ret
dec
outsb
add
out
aaa
mov
imul
lahf
lods
inc
aam
push
clc
test
or
xchg
ss
into
mov
movsb
loop
sbb
shrb
push
mov
cmpsb
add
jg
int3
fdivp
mov
xor
cmpsl
mov
fsts
hlt
test
ss
fsub
sub
cmc
sbb
add
xor
xor
xchg
jns
pop
push
je
adc
jmp
pushf
pop
push
add
cmp
les
enter
add
scas
rcrb
add
movsb
push
jnp
int3
shlb
das
mov
clc
cmpsl
push
pop
mov
sarb
adc
xor
das
fs
mov
mov
cmp
inc
shrb
cmp
add
ret
cmpsl
fsubs
loopne
cmp
ja
and
jo
xchg
adc
mov
push
js
or
gs
push
orb
data16
into
mov
adcb
pop
fisttps
add
pop
add
pop
out
adc
pop
inc
xchg
insb
push
mov
fimull
mov
inc
cmpsl
ss
inc
aad
fptan
subl
adc
inc
fcmovnu
xchg
mov
les
and
repnz
insb
loopne
loopne
mov
jne
push
jecxz
aaa
icebp
cld
stos
stos
add
aas
addr16
cltd
pusha
ds
ds
xlat
outsl
xchg
push
in
test
lret
pop
pusha
shlb
mov
or
scas
push
xchg
mov
mov
xor
mov
mov
inc
fsubr
jg
mov
mov
mov
lret
pop
mov
jo
sbb
and
pushf
clc
stc
js
cli
adcb
pop
xchg
push
fmul
test
or
popa
andb
push
ja
mov
popf
xor
out
imul
sbb
xchg
in
push
pop
mov
mov
fmull
xchg
and
mov
jecxz
imul
test
mov
pushf
dec
pop
dec
jo
jle
repnz
cltd
mov
cmp
sbb
call
popf
jne
popf
inc
push
ja
jmp
or
xor
lods
pop
loop
xlat
fildll
or
adc
in
mov
adc
dec
in
fwait
jle
cltd
std
pop
pop
mov
test
jns
les
test
pop
iret
rcrl
test
pop
sbb
shl
jno
repz
push
mov
dec
xor
inc
clc
ret
in
aaa
stos
lret
jnp
push
inc
int3
mov
ja
sub
jmp
cli
subl
mov
mov
and
sbb
ret
std
inc
loope
or
pop
pop
adc
cmp
fbstp
lahf
aas
mov
and
and
loope
inc
cmp
mov
cmp
cs
subb
rclb
pop
jne
sbbb
aam
or
xor
ds
cs
mov
aad
or
jp
jg
sub
movsb
inc
mov
xchg
jo
lea
sbb
inc
jmp
pop
inc
dec
or
shrw
fidivs
das
xlat
jnp
lret
and
add
jnp
mov
inc
lds
leave
cld
sbb
iret
jg
ljmp
test
adc
data16
scas
xchg
pop
mov
mov
testb
and
push
icebp
push
call
stos
xor
xchg
mov
les
sbb
aad
dec
mov
fcmovbe
insb
adc
movb
sbb
lahf
repz
push
sub
sub
cmpsl
push
or
xchg
imul
hlt
cmp
jmp
push
stc
fwait
mov
shlb
mov
in
sbb
push
mov
int3
mov
loopne
repnz
sahf
push
lods
fcmovnbe
nop
mov
mov
dec
out
jnp
sub
mov
pavgw
jg
ror
sti
jae
xor
jecxz
sub
or
rorl
mov
jg
mov
cmp
pop
adc
mov
add
ret
neg
mov
cltd
ret
call
pop
mov
push
mov
in
repnz
scas
xorl
out
xor
loop
out
xchg
add
cld
push
data16
jge
imul
xchg
orb
xchg
add
dec
les
dec
js
push
rcrl
add
sub
js
test
clc
push
test
xor
hlt
mov
xor
add
mov
dec
mov
aad
test
pop
iret
jae
rcrb
pop
insl
scas
jg
mov
dec
test
jle
jo
xchg
mov
jae
jecxz
roll
xchg
cmc
sbb
ret
or
xchg
movsl
fcomps
faddp
or
mov
mov
hlt
add
push
stos
mov
cmp
out
push
pop
jge
inc
movsb
mov
leave
and
scas
push
mov
neg
sub
jnp
add
or
mov
jbe
aas
test
sub
cli
pop
add
cwtl
loope
arpl
jl
pop
lock
popf
sub
mov
adc
mov
outsb
adc
lahf
inc
pop
movsb
jecxz
push
lcall
inc
lods
xchg
out
test
adc
psubusb
fidivrs
insl
jl
in
xor
js
xchg
push
pop
testb
lods
mov
xor
decb
push
adc
dec
xor
xor
dec
pop
cmpsl
pop
sub
cli
out
repnz
sub
inc
xor
in
sbb
mov
lret
and
dec
dec
and
test
push
ds
sbb
repz
push
nopl
jp
inc
mov
repnz
ljmp
rorl
dec
add
test
fucompp
fildll
shrl
add
ret
xchg
xchg
xrelease
sub
popf
push
lahf
pop
pop
xor
addb
mov
pop
and
ret
das
push
dec
mov
int
xlat
repnz
cmp
ja
xor
dec
mov
pop
ficompl
hlt
inc
aas
lds
cmp
fimuls
jae
or
lods
mov
add
jge
icebp
lahf
xor
push
in
push
or
enter
jnp
adcb
jle
push
mov
aad
test
and
pop
roll
mov
dec
iret
lahf
xchg
sub
sbb
xor
inc
loope
jmp
fmull
mov
insl
push
insl
adc
push
popa
daa
or
movsb
inc
push
or
jae
dec
cmp
hlt
loope
dec
pop
dec
add
int3
icebp
xor
push
sub
loopne
mov
pop
pop
inc
bound
addl
sbb
xor
lds
ds
ja
sahf
test
enter
in
ret
popl
or
jmp
cmp
jmp
push
stos
mov
lods
jmp
dec
sub
mov
pop
mov
mov
fwait
loope
mov
jnp
add
push
inc
mov
subl
mov
jecxz
sbb
mulb
in
fdivs
pop
pop
sbb
outsl
pop
pop
movsb
cmp
cmp
xor
mov
mov
inc
push
xor
js
leave
adcl
mov
lret
fs
cld
loopne
inc
aas
lcall
adc
stos
dec
outsl
mov
mov
or
pop
aad
sub
mov
std
lods
inc
leave
fisubl
mov
mov
aas
orl
sub
jb
rcrl
dec
mov
pop
xchg
cmp
pop
sarl
int3
iret
mov
enter
out
jae
bound
pop
pop
dec
dec
pop
mov
rorl
xor
leave
push
incb
out
mov
aas
aaa
stos
lods
enter
dec
adc
lds
dec
loope
and
notl
jmp
int3
lock
mov
jmp
hlt
adc
jmp
or
outsb
imull
mov
jnp
xlat
xchg
fs
ret
jb
sbb
mov
push
int
loopne
mov
add
xor
daa
gs
xchg
adc
lcall
inc
lret
insl
mov
cwtl
insl
or
lock
mov
lret
pop
sub
fsubl
xor
jo
mov
pop
or
push
adc
sub
cwtl
daa
test
inc
ficompl
push
out
stc
jae
cld
outsb
fwait
xchg
xor
jnp
xlat
hlt
cmp
aas
fistpll
out
rcrb
or
jmp
icebp
aad
mov
xchg
fldt
mov
xor
stos
repnz
or
push
mov
cmp
adc
je
idiv
out
ds
cltd
out
pop
mov
ret
mov
dec
fnstenv
jae
inc
lcall
stc
nop
mov
inc
pop
cmpsb
xor
xchg
push
orl
pop
mov
mov
loopne
lea
dec
das
imul
mov
or
inc
inc
lods
test
sub
pop
dec
jmp
xchg
inc
push
sti
movsb
mov
and
nop
stos
push
out
jns
jo
setp
lea
fwait
cld
adcb
pushf
stos
jmp
fsub
push
stos
dec
or
movsb
mov
sahf
xor
subb
fldt
mov
push
mov
cmp
lret
std
jl
mov
mov
mov
es
or
adc
and
mov
lods
push
add
add
push
cwtl
faddl
push
iret
push
mov
xchg
icebp
mov
lds
outsb
clc
push
mov
pop
lds
divl
mov
add
and
fwait
xor
insl
mov
mov
out
dec
scas
loope
adc
icebp
movsl
fildll
lcall
inc
cmc
ja
sbb
jl
pop
ds
dec
es
in
inc
stos
push
push
xchg
inc
add
sub
mov
leave
in
push
jno
mov
inc
sbb
icebp
fiaddl
out
jle
test
icebp
ficoms
adc
inc
xchg
stos
inc
int
push
mov
jecxz
xchg
jle
push
daa
mov
xor
sbb
cmp
or
inc
and
dec
ljmp
das
fisubrl
insb
mov
dec
inc
xor
xor
xor
call
xchg
sub
dec
fbld
clc
pop
sahf
imul
inc
pop
xchg
ds
push
adcb
dec
cmp
push
scas
das
push
popa
jnp
sub
pop
inc
xchg
cmpsl
je
ljmp
push
jg
pop
or
shrl
cmp
sub
push
sub
sub
cwtl
shl
test
sub
inc
sahf
mov
xor
xchg
les
mov
jno
lock
push
test
inc
pop
adc
and
jmp
xchg
filds
movsb
aad
and
enter
cmp
nop
sbb
in
mov
pop
cld
adc
test
inc
jle
outsl
xchg
js
cs
pop
add
inc
mov
jl
sub
jb
push
jbe
jmp
jecxz
js
fld
push
ss
rorb
xchg
cmp
add
cwtl
mov
mov
sbb
rclb
idivb
sub
jnp
arpl
push
fldcw
call
mov
mov
subl
sahf
dec
and
std
das
movsb
adcl
into
sub
leave
lahf
lcall
jne
xor
scas
sbb
into
mov
jns
fwait
add
or
pop
dec
in
pop
hlt
inc
loopne
dec
mov
cmpsb
ret
jns
add
mov
push
lods
xor
inc
xchg
js
cmp
aad
stos
incb
test
leave
nop
leave
andl
xor
xchg
jmp
and
mov
and
cmp
es
cwtl
sti
xchg
lret
sub
scas
repz
fdivrl
shlb
cmp
repz
or
mov
lods
pop
jmp
cmp
or
das
cmp
insb
rorl
rcr
jno
pop
ss
or
mov
bound
lahf
adc
pop
mov
decb
sub
aad
lret
pop
mov
push
jecxz
mov
mov
jp
fildll
cmpsb
lock
push
mov
push
je
jo
xchg
cmp
cld
mov
jg
mov
inc
fidivl
imul
fcmovne
pop
add
rcll
mov
jb
inc
mov
cwtl
out
xor
pop
and
pop
scas
ds
fcom
pop
mov
xchg
out
mov
xchg
and
push
iret
xlat
roll
push
add
cli
jg
mov
outsl
cmp
cmp
pop
jge
sub
daa
mov
dec
adcb
cwtl
int
lret
pop
movsb
inc
jmp
inc
jle
cmp
push
mov
insl
stos
mov
and
arpl
addl
sbb
sub
fisttpl
repnz
stos
inc
sbb
std
and
mov
inc
ljmp
out
sbb
pop
fcomps
pop
pusha
je
push
mov
fldln2
sti
cli
fildl
fs
ja
addb
or
orl
imul
aad
mov
xchg
adc
xchg
outsb
adc
mov
cmp
inc
xchg
jae
xor
leave
repnz
push
mov
xchg
addps
scas
mov
ds
andb
ficomps
or
add
aam
push
and
int
mov
xor
out
xchg
andb
daa
dec
hlt
push
dec
daa
into
aad
lahf
stos
aam
and
xlat
fs
inc
or
dec
sbb
add
lahf
imul
int
inc
cltd
sbb
jno
fsubrl
inc
inc
jno
jne
fmul
out
clc
in
clc
negl
inc
pusha
cmpsb
and
sbb
xor
fwait
lock
adc
add
test
ja
fldcw
std
mov
mov
jge
aas
push
add
and
test
pop
icebp
push
movsb
xchg
sbbb
pop
popa
testl
lds
sbb
fs
sbb
inc
mov
outsl
andl
inc
jmp
andb
xor
inc
push
cwtl
fsts
out
push
cs
enter
pmaxub
pop
rclb
jae
mov
aam
push
jmp
in
and
cs
xor
sub
mov
je
cmp
movsb
cmp
divl
mov
jg
adc
push
fldt
xor
push
aas
into
pop
mov
mov
cmp
sub
jp
lods
add
sbb
clc
sahf
dec
xor
mov
inc
add
clc
lods
inc
cwtl
das
jae
pusha
xor
insb
xchg
stos
lock
ret
sub
leave
dec
cmp
in
fistl
jno
sbb
jp
mov
jae
pop
sbbb
mov
and
inc
xlat
pop
bswap
fwait
cwtl
gs
dec
xchg
mov
cmpsl
xchg
mov
mov
out
out
dec
das
cmpsb
std
xchg
xor
lods
loope
xor
mov
and
pop
fwait
popa
adcb
xor
inc
jle
mov
cwtl
xchg
mov
ds
or
stc
decb
in
xchg
dec
pop
add
arpl
nop
adc
hlt
push
cmp
fbld
mov
pop
sub
das
je
pop
icebp
sbb
leave
iret
and
pop
jae
xlat
xchg
arpl
lods
mov
rclb
das
gs
arpl
xchg
mov
sub
sbb
popf
xchg
mov
dec
adc
xorl
insl
cltd
mov
mov
cmp
and
cltd
inc
xchg
sbb
jno
cmp
pushf
scas
and
in
adc
push
aaa
mov
or
outsl
push
sldt
jecxz
mov
jo
mov
test
iret
loopne
pushf
mov
into
sti
repnz
data16
lock
push
rclb
fs
lods
inc
mov
into
xor
imul
push
xchg
jbe
adc
dec
push
xor
sti
and
add
daa
hlt
mov
notl
repz
mov
int3
jg
jle
stos
mov
fisubs
int
std
xchg
jnp
dec
sbb
pushf
sbb
or
test
in
jns
cli
lret
sub
call
mov
std
lods
inc
daa
sub
adc
rcll
dec
fldl2t
jp
loope
cmpsl
mov
hlt
imul
sahf
jo
bound
mov
arpl
inc
out
inc
jne
xchg
mov
mov
dec
dec
in
sbb
add
inc
push
adc
mov
cmpsl
push
inc
cmc
out
loopne
loopne
xor
ret
xor
adc
andb
cmpsb
roll
or
fdivs
and
cmpsl
dec
inc
xchg
inc
push
cmp
push
mov
add
ret
mov
je
dec
cmp
test
jg
xlat
xrelease
sahf
sub
mov
push
xlat
arpl
push
in
insl
mov
xor
andb
xor
mov
jo
jl
pop
push
in
jnp
dec
loop
pushf
movsl
xchg
repz
inc
push
movsl
sub
push
loop
out
ljmp
mov
mov
cltd
jp
cwtl
fbstp
jns
cmp
leave
inc
stos
jae
mov
push
imul
pop
inc
and
mov
dec
out
inc
mov
lds
or
dec
cli
or
daa
into
lret
repz
pop
shll
xchg
daa
fucomp
pop
cmc
push
dec
jge
jns
scas
sti
mov
xchg
sub
in
lcall
popf
push
mul
add
pop
sbb
shl
je
sbb
ja
push
fwait
mov
add
lds
xor
in
out
aam
dec
xlat
dec
sbbl
outsb
jecxz
pop
mov
lahf
cmpb
mov
in
insl
lret
int3
addr16
dec
int
je
xor
push
xchg
dec
aas
pop
aad
cmp
mov
mov
mov
cmc
xchg
mov
sbb
add
pushf
sub
popa
rol
xchg
add
adc
pushw
xchg
dec
and
inc
mov
sbb
xorl
pusha
testl
jle
sbb
cmp
mov
daa
jge
push
jae
fildll
rclb
insb
fistps
out
dec
cmpb
pop
imul
mov
pushf
pop
out
xchg
add
sti
stos
mov
ljmp
lret
pop
mov
lcall
mov
pop
or
pop
inc
jns
sti
inc
jp
sti
add
mov
int
xchg
add
pop
hlt
xchg
add
jge
sub
in
ljmp
mov
sbb
repz
adc
inc
bound
pushl
xchg
lahf
mov
sbb
xchg
sub
enter
imul
inc
push
inc
mov
imul
adc
js
xor
and
push
mov
xor
sub
mov
pcmpgtw
repz
dec
add
out
mov
lds
insb
xchg
and
sub
pushf
pop
jno
pop
jnp
and
sahf
xchg
inc
sub
or
rolb
mov
xchg
inc
inc
ljmp
adc
dec
dec
cmp
dec
push
xchg
aam
cmp
mov
in
push
fstps
iret
jnp
add
rol
movsb
std
push
inc
push
mov
aaa
cmovae
out
out
lea
bound
adc
mov
std
sbb
loopne
cltd
lock
cli
into
cld
mov
lock
add
or
scas
mov
mov
mov
jle
dec
push
xor
packssdw
adc
in
mov
cltd
add
enter
push
push
outsb
push
lcall
push
dec
or
jmp
adc
aas
push
sbbl
ss
pop
fisttpl
and
jp
jecxz
aad
or
in
pop
dec
lcall
dec
push
inc
sub
out
mov
push
jmp
js
popf
icebp
inc
cltd
iret
cltd
inc
js
mov
scas
jbe
jg
adc
inc
lret
cmp
cmp
jmp
cmp
popa
mov
push
jp
fstpt
fwait
lret
imul
std
cmp
sbb
pushf
subl
popf
cmp
pop
dec
xor
cmpsb
subl
lods
cmpsl
cltd
xor
ss
out
mov
add
lcall
gs
add
dec
das
mov
mov
xor
cmp
mov
add
mov
mov
and
icebp
jle
adc
jbe
xor
arpl
or
fnstsw
icebp
cli
andl
inc
insl
sar
adc
iret
xchg
push
repz
push
decl
je
ret
mov
dec
pushf
adc
sub
shr
mov
aaa
sbb
xchg
jo
inc
pop
js
cmpsl
test
into
addr16
ffreep
jle
adc
loop
gs
mov
lock
push
mov
jmp
data16
aad
dec
pop
sbb
inc
push
pop
cmc
push
add
mov
scas
add
lcall
mov
push
add
push
ss
in
mov
inc
je
jns
jbe
mov
fiadds
xchg
mov
test
rcl
pop
add
jns
inc
cli
aam
popa
lods
pop
dec
add
test
or
testb
xchg
add
jbe
ret
les
out
cmp
pop
mov
fcoml
mov
inc
enter
popa
xchg
add
push
cltd
std
jb
adcb
adc
int3
and
xchg
mov
test
repnz
add
mov
ds
les
cld
fucomp
sbb
push
rcll
jo
jb
fsubrp
fnstsw
sub
movsl
sbb
xlat
dec
scas
mov
or
pop
xchg
jno
fdivrs
scas
lcall
cmpsl
nop
pop
mov
fistps
stos
jecxz
fs
push
xchg
push
aam
lods
jne
imul
xor
imul
enter
test
jecxz
xor
in
shlb
xor
cmc
mov
std
ja
push
call
push
mov
mov
ret
movsl
mov
cltd
sub
imulb
icebp
jo
imul
and
push
test
sbb
shl
jl
push
sbb
mov
ss
insb
pop
hlt
jl
outsb
jle
mov
fwait
xchg
cltd
jl
sbb
int3
call
or
sbb
push
lods
ret
les
loope
mov
cli
and
les
aam
hlt
movsl
das
mov
or
cmp
jmp
lods
xor
and
inc
jno
or
mov
pop
and
nop
cmpsl
out
xchg
dec
lahf
loopne
addr16
xor
repz
xor
adc
cmp
test
mov
mov
orl
imul
sarl
mov
cmp
push
lret
dec
leave
mov
mov
bound
cltd
idivb
fs
xlat
outsb
cmp
repnz
inc
pop
cmc
mov
in
in
cltd
out
adc
inc
int3
insl
scas
jbe
jne
sbb
fdivrs
and
rol
cld
and
hlt
cli
and
add
mov
lret
daa
jge
test
sbb
idivb
neg
pop
cmpb
dec
jl
xchg
in
xlat
dec
loop
cmp
mov
or
jns
sbb
shrb
imul
add
cld
sbb
jnp
jb
das
faddl
popf
test
sbbb
bound
push
xchg
or
pop
push
or
fnstsw
jge
dec
pop
inc
jg
xor
cmp
maxps
xchg
pop
mov
and
aaa
mov
fiaddl
add
subb
leave
pop
push
adc
jmp
lds
adc
jge
fdiv
pop
cmpsl
bnd
sbb
test
mov
and
or
inc
mov
cmp
cmp
test
xor
int
push
pop
insl
xchg
repz
xlat
add
aaa
mov
mov
fsubs
clc
push
bound
addr16
inc
ret
adc
in
inc
test
mov
int3
lods
jmp
adcl
test
sahf
ficoml
push
cmp
cwtl
outsl
aam
push
ret
outsl
xchg
mov
fmulp
popa
adc
fistpl
jne
sbb
fcomi
xchg
loopne
xchg
insl
add
and
xor
jle
test
rcrb
add
lods
jo
pop
mov
inc
movsb
mov
inc
aad
test
mulb
push
jmp
out
aaa
insl
shr
out
adc
push
orb
or
pop
sub
dec
ljmp
or
cs
mov
ljmp
outsb
lret
lret
mov
or
negb
cmp
xchg
fdivrl
out
clc
mov
pushf
sub
xchg
clc
dec
and
rorb
push
adc
arpl
inc
mov
push
icebp
adc
pop
outsl
jb
mov
pop
mov
fcmovnb
loope
icebp
mov
add
sub
push
inc
rclb
lods
add
inc
fs
adc
ret
sti
xchg
mov
jecxz
enter
and
ss
jg
or
lods
sub
pop
imul
dec
rol
add
bound
fdivrl
sahf
cld
pop
stos
or
mov
xchg
xchg
call
sbb
lret
adc
mov
lock
lret
in
lahf
xlat
imul
cli
ljmp
or
rcl
mov
mov
loop
cmp
cmp
mov
mov
adc
xor
sbb
push
ljmp
jno
std
arpl
push
mov
pop
sbb
adc
and
lcall
jo
cmpsb
popa
ret
jnp
sbb
sbb
mov
sub
sub
rclb
pop
sbb
xor
push
jbe
lret
cmpl
dec
mov
pusha
mov
xchg
push
shll
aas
mov
push
push
push
xor
daa
inc
fiaddl
stc
fbstp
leave
xchg
stos
cli
fs
mov
scas
inc
in
pop
nop
lahf
mov
je
out
aad
cmpsl
mov
scas
call
cld
test
sahf
jo
movsb
dec
push
push
fwait
and
inc
lret
icebp
out
mov
xchg
sbb
out
ja
pop
ret
mov
sub
pop
outsb
sbb
pushl
int
fsubrp
mov
dec
or
xor
andb
pusha
jecxz
fucomip
dec
adc
subl
or
ja
andb
add
bound
inc
daa
mov
pop
scas
and
aam
sbbb
leave
mov
dec
pop
sbb
dec
pop
adc
xchg
arpl
mov
mov
adc
pop
inc
imul
jp
clc
dec
pushf
repnz
add
or
or
push
sub
push
adc
push
xchg
xor
jno
mull
stc
arpl
add
push
mov
inc
cli
jecxz
jg
xchg
fidivs
mov
sarb
shlb
inc
negb
jns
test
adc
pushf
xchg
xor
stc
mov
mov
xchg
jmp
fwait
sub
outsb
arpl
dec
xor
imulb
add
push
jmp
sbb
xchg
mov
push
inc
sbbl
mov
mov
cmp
imul
sbb
dec
ja
jg
pop
scas
lock
shll
and
cltd
fwait
ret
lcall
pop
icebp
mov
aaa
test
push
int3
pop
nop
aaa
ret
add
push
mov
xor
lds
adc
xor
arpl
dec
repz
mov
cwtl
inc
aas
fldl
jns
negl
sub
out
mov
push
sbb
jb
ds
dec
push
sbbl
nop
popa
lahf
ss
das
mov
lock
mov
cltd
push
repz
sub
nop
popf
cmpl
aas
pop
mov
fmull
jo
sbb
negl
cmp
or
jno
inc
xchg
scas
mov
daa
test
adc
cmp
push
loope
mov
int3
orl
test
sbb
in
mov
mov
mov
mov
icebp
loop
or
scas
popf
lret
push
push
and
out
jle
clc
popf
lods
ret
mov
leave
xor
cmp
cmp
outsb
or
rcrb
aaa
inc
enter
jg
rorl
mov
pop
adc
mov
pop
mov
dec
jmp
add
xor
es
cwtl
adc
push
jae
int3
push
inc
mov
out
mov
mov
inc
decl
push
xchg
pop
fldpi
out
call
lret
jge
jae
jno
imul
aam
xchg
push
ja
xlat
bnd
mov
jp
movsb
dec
pop
adc
jge
pop
jo
fidivl
xchg
cld
popl
and
or
jmp
test
add
push
inc
fsubrp
repz
stc
or
fstp
loop
dec
add
scas
xlat
xchg
mov
xchg
sahf
xor
das
jmp
rcrb
sub
xor
jb
int3
pop
xchg
cmc
nop
mov
xor
adc
jg
jl
mov
arpl
or
jg
rclb
repz
insl
out
mov
mov
push
daa
jp
pop
dec
popa
xor
sahf
lcall
sahf
push
xchg
mov
ficompl
xchg
pop
pop
xor
add
mov
jmp
ljmp
lods
sub
and
sub
mov
inc
std
jle
ds
mov
je
into
mov
dec
add
lds
pushf
jg
test
out
enter
pop
test
add
mov
je
scas
aam
popa
and
mov
mov
js
jp
pop
push
stc
les
repnz
jo
inc
sub
push
dec
lahf
xor
cld
popf
cli
test
fstpt
and
push
push
adc
pop
hlt
fs
outsb
dec
xor
xchg
mov
jnp
jbe
stc
sub
mov
addr16
inc
xorl
imul
xchg
inc
jb,pn
push
push
sbb
adc
sbb
cld
sub
adc
xor
clc
js
sub
xlat
mov
mov
sub
sahf
mov
inc
call
in
mov
sub
aam
das
mov
mov
icebp
jmp
clc
iret
lods
or
adc
push
lods
ror
xchg
mov
loopne
xor
sub
aad
dec
lahf
stos
push
in
or
xor
in
test
in
xlat
jo
lods
and
add
pop
push
xchg
shrl
push
in
mov
cmp
or
stos
mov
push
cmp
jl
repnz
sub
sarl
mov
cs
and
mulb
and
popf
outsl
pop
push
jg
stos
inc
pop
jge
adc
xchg
mov
in
aas
mov
xchg
cmpsl
xchg
lods
je
mov
data16
cmp
mov
xchg
in
in
dec
add
sub
sbbb
jne
dec
arpl
loope
inc
std
cvttps2pi
and
and
lahf
jmp
xchg
cmpb
aas
pushf
or
xchg
jnp
push
fistl
fsubrs
insb
add
popf
xor
mov
dec
push
popf
add
leave
aas
cld
xorb
sbb
cmp
cli
sbbb
loopne
fisttpll
in
sub
mov
inc
mov
or
or
cmp
iret
dec
movsb
ja
mov
xor
cs
stos
inc
push
popf
sbb
inc
add
jb
xchg
dec
sbbl
lcall
leave
mov
pop
enter
add
mov
loopne
outsl
add
dec
es
xchg
or
cmp
lret
jp
jle
scas
or
es
cmpsl
inc
ds
insl
sbb
leave
fnstcw
repz
out
push
fwait
jb
out
jns
pop
adc
sbb
mov
clc
or
loop
mov
and
inc
inc
cmpl
fnstsw
nop
cltd
and
jnp
xor
jne
cmpsb
ja
fsubs
xchg
xchg
jns
jo
cmp
and
inc
cli
cmp
popf
call
andl
loope
push
sahf
test
mov
push
divl
jbe
add
dec
dec
icebp
mov
pop
and
dec
inc
mov
cmp
ds
mov
jbe
jecxz
imul
inc
mov
je
loope
out
fstps
jmp
stos
js
notb
lcall
idivb
push
js
cmpsb
popf
xchg
scas
aas
loopne
mov
jae
repnz
jmp
pop
add
test
or
cld
lods
or
push
and
push
lods
dec
cmpsl
loope
mov
repz
mov
lret
xchg
xlat
xchg
addr16
inc
lock
sbb
xor
aas
rcrl
aaa
negb
mov
es
jnp
push
xchg
push
or
cltd
xor
pop
and
mov
je
sub
or
inc
scas
xlat
jno
mov
hlt
in
adc
jae
cmpsb
loop
pop
in
xchg
sub
cmp
mov
idivl
popf
sub
lret
inc
push
pop
cmc
push
inc
cmp
dec
je,pt
int
aam
fiaddl
lods
xchg
test
into
shlb
pop
or
jo
enter
or
and
insb
add
xchg
and
push
dec
inc
mov
dec
scas
popa
lret
cs
insl
test
fwait
and
dec
sub
loop
mov
push
pop
xor
and
inc
cmc
jmp
xchg
cmpsb
stos
mov
inc
mov
xor
adc
aaa
push
call
and
push
lea
xor
lea
or
fsubs
sub
push
jge
in
mov
imul
mov
dec
dec
imull
and
xchg
cld
push
jae
sbb
xchg
loop
xlat
push
aaa
sahf
imul
mov
adc
ljmp
xor
enter
lahf
and
push
sarl
inc
and
pop
movsl
cmp
and
pop
push
repnz
sub
xor
inc
dec
dec
pop
cld
aaa
out
mov
call
or
in
inc
pushf
inc
inc
or
or
leave
push
aaa
movsl
repnz
jnp
or
or
xor
aas
out
std
or
popa
popa
clc
cwtl
dec
adc
inc
sarl
push
nop
xor
fistpl
mov
out
imul
les
repz
pusha
lock
inc
mov
ret
pop
mov
lods
rcrl
lcall
jne
and
push
jae
xchg
xor
bound
xchg
mov
or
push
aas
pushl
xchg
or
shrl
push
jmp
pop
xor
pop
pop
cmp
lcall
jecxz
sub
enter
mov
jp
xchg
adc
stos
push
mov
mov
fcoml
lcall
fisubl
and
adc
stos
xchg
xor
lock
out
sbb
mov
jno
jp
mov
in
fdivl
mov
adc
sti
stos
repz
and
imul
push
mov
in
xchg
ds
adc
lea
add
and
jne
jne
dec
inc
imul
dec
out
cmpsl
loop
xchg
jo
inc
test
xor
cmp
fcomip
cmc
mov
out
repnz
ret
dec
nop
push
jle
mulb
loop
cmp
jno
pushf
sbb
mov
jns
rcr
xor
lock
out
mov
jmp
push
out
mov
mov
scas
jb
and
rorb
push
sbb
inc
jnp
pop
adc
add
mov
fisttps
hlt
jl
cmp
mov
add
mov
push
add
push
xor
dec
pop
jnp
cld
xchg
jnp
and
mov
and
ss
cmp
lea
ret
das
das
or
sbb
cmc
pop
pusha
push
bnd
add
jo
fs
ds
loope
int
hlt
addr16
push
movsl
icebp
xor
into
and
mov
mov
inc
fnstcw
adc
xorl
enter
cwtl
das
loope
imul
mov
mov
adc
jle
mov
add
incb
pusha
jnp
sahf
pop
scas
iret
xor
jle
lock
in
ds
mov
or
add
sbb
push
inc
xlat
js
xor
push
pop
dec
add
arpl
fsubrl
imul
and
lock
les
pop
ret
jmp
insb
cmpsb
cmp
ljmp
sbb
aam
addr16
loop
shlb
int
xchg
loop
out
jno
arpl
sbb
bound
mov
dec
in
cwtl
out
cmpsb
sarl
push
decb
mov
pop
mov
adc
dec
cmp
and
sbb
cltd
sub
and
jb
adc
lds
pop
jb
add
dec
nop
cwtl
gs
ds
inc
mov
jecxz
imul
out
inc
imul
jne
gs
cmp
ss
mov
xor
cmp
push
push
push
repnz
outsl
mov
notl
sub
cmp
sub
test
dec
lea
lret
negl
xchg
leave
and
sbb
mov
lahf
cmp
popf
mov
sub
pop
push
je
mov
lods
mulb
cmp
xchg
aas
push
mov
lret
cld
xchg
add
icebp
add
sbb
jecxz
jns
cld
imul
dec
movsb
sbb
aam
lods
pop
mov
out
repz
nop
xor
jmp
pop
mov
or
jae
jnp
sti
mov
int
jne
sbb
stos
pop
add
cs
mov
int
jecxz
inc
push
imul
jo
sbb
pusha
pop
xlat
mov
sbb
scas
popl
icebp
lahf
int
shl
test
sub
popf
push
shrl
dec
enter
and
pop
pop
add
or
lahf
cmp
push
inc
scas
in
jge
das
lods
mov
mov
loope
call
stos
cmpsl
mov
push
repz
cld
ds
jae
sub
and
xor
data16
test
pusha
add
imul
out
insb
push
aas
decl
xchg
sti
adc
adc
jno
add
nop
pop
shr
cmp
jecxz
and
xor
pushf
mov
fcoml
push
push
mov
mov
call
adc
adc
or
sbb
add
mov
call
xchg
adc
loopne
rcrb
dec
enter
jne
xor
lahf
cli
loope
call
add
ret
ja
inc
sub
test
mov
hlt
lods
in
or
into
into
gs
mov
xchg
in
dec
scas
repnz
jmp
and
test
test
movsl
ffree
sti
stos
shll
adc
leave
push
fdivl
jecxz
sub
mov
stos
xchg
mov
int3
adc
xlat
xor
imul
sbb
or
inc
sbb
movsb
sub
xor
repz
push
fwait
mov
inc
xor
cmp
popa
mov
aad
out
shr
imul
xor
dec
cmp
stc
nop
jno
sub
sbb
pop
xchg
loopne
fstpt
stos
lret
sub
aad
leave
push
push
sti
push
mov
jbe
jmp
push
cmp
repnz
fs
scas
aad
xor
ret
push
into
fdivp
mov
or
cmpl
cmpsl
mov
xlat
pop
dec
dec
pop
push
sbb
stos
mov
rcrl
dec
xchg
xchg
lock
push
xchg
fidivs
das
xchg
adc
loope
aas
jb
jno
addr16
cmpsl
ret
pop
mov
fsubl
mov
mov
lds
aas
dec
mov
insb
or
sbb
xor
pop
xor
jno
inc
xlat
mov
or
lret
or
inc
ss
mov
mov
ja
orb
int
push
mov
add
lds
mov
aad
cmp
push
jo
outsl
notl
sbb
mov
dec
arpl
ret
jb
int3
and
and
fldt
test
cli
fsubrl
push
mov
inc
adc
sbb
jno
dec
xchg
dec
repnz
mov
pop
sar
in
jg
xor
mov
jl
scas
dec
jecxz
pop
xchg
dec
jne
js
mov
push
cltd
mov
push
sub
jne
or
es
lock
and
divb
loop
push
ffreep
dec
jmp
lahf
push
pop
fldl
in
in
repnz
test
fldenvs
mov
jne
mov
add
fwait
ja
push
push
sbb
insl
scas
adc
jg
push
outsb
aam
pop
mov
sbb
xchg
mov
insl
gs
push
mov
imul
sbb
outsb
jecxz
insb
mov
cli
mov
scas
sarb
test
test
popf
mov
sub
inc
fidivrl
mov
leave
pusha
pop
mov
sub
les
push
pop
imul
decb
sbb
shll
lcall
gs
fnstcw
sbb
pushf
add
push
or
outsb
dec
cld
cmp
pop
shrb
inc
pop
movsb
in
dec
lock
sbb
dec
leave
cmp
shlb
xor
int3
aam
scas
or
outsb
add
adc
or
fdivs
pop
mov
xchg
mov
shlb
mov
or
adc
mov
inc
mov
popa
inc
cmp
mov
in
sub
test
loope
inc
ficoms
mov
pop
inc
sub
dec
stc
popf
loop
shr
xchg
inc
mov
cmp
inc
popf
inc
mov
lret
shl
loopne
and
sub
pop
xor
ss
sbbl
pop
je
dec
jmp
fucomip
xchg
aas
gs
xchg
sbb
nop
mov
jns
insl
fmull
add
daa
pop
adc
cs
fdivp
fldl
mov
xor
lods
mov
push
jmp
shll
call
jle
dec
ficomps
push
push
cmp
imull
fcmove
mov
cltd
hlt
int3
dec
mov
aas
into
sub
loope
lods
fwait
inc
xchg
sub
fdivl
and
and
nop
pop
adcl
in
fstl
nop
push
adc
js
in
sbb
rolb
adc
popf
lds
in
or
call
test
cmp
adc
fbld
jns
fcomps
cmp
push
jle
movsb
dec
addr16
sub
pusha
pop
mov
pmovmskb
movntq
js
add
push
fadd
inc
adc
or
or
sbb
sub
xor
sub
xor
inc
cmc
out
cmp
pop
ret
pop
lcall
push
inc
push
jge
xor
gs
pop
and
ret
push
popf
adcl
cmp
mov
dec
ljmp
xchg
mov
pop
mov
cmpsb
outsl
mov
ret
imul
clc
sbb
and
jge
into
cmc
test
adc
nop
jne
out
mov
popl
mov
in
jecxz
mov
xchg
cmp
imul
lret
lock
in
mov
sar
mov
mov
in
xlat
enter
ret
lods
dec
aad
outsl
mov
adc
push
push
int3
jecxz
jae
cs
sub
repz
gs
lds
clc
ds
in
js
in
movsl
mov
fldl
xchg
js
pop
dec
or
sbb
outsl
mov
dec
xchg
out
test
sub
bound
mov
inc
cwtl
lods
inc
aam
shrl
filds
jge
cmpsl
lret
and
ljmp
inc
testl
cmpsb
jbe
rolb
mov
jnp
adc
les
or
mov
or
xchg
pop
out
xor
leave
jmp
cli
mov
addl
test
pop
and
test
imulb
cmpsb
add
fcomps
outsb
jns
jb
inc
lcall
adc
ljmp
jge
es
xchg
cwtl
inc
fsubrs
test
je
testl
dec
push
lcall
cmc
loopne
add
inc
jae
xlat
movsb
popa
mov
xchg
int
adc
es
mull
mov
xlat
add
pop
lods
lock
sarb
std
jnp
adc
ret
adc
xchg
push
sbb
stos
clc
out
fs
mov
add
inc
lods
mov
pusha
cmpsb
xor
and
add
pop
cli
or
lods
fcmovne
jg
mov
jl,pn
dec
inc
rcll
data16
jmp
xchg
push
in
les
adc
sbb
cmp
cmc
cmc
cltd
je
cmpsl
cmp
push
jmp
add
cmp
xlat
mov
xor
icebp
in
jb
scas
ljmp
sti
xchg
cmp
dec
data16
pushf
test
negb
mov
out
mov
cwtl
les
mulb
push
mov
dec
cmpsl
sub
in
pop
cmpsl
stos
int3
xchg
pop
std
xchg
pop
or
fidivs
imul
popa
xlat
and
arpl
and
push
scas
xor
pop
mov
lcall
sub
lret
clc
xor
pop
jle
add
mov
or
xor
jmp
mov
je
add
aaa
jae
pop
mov
jb
and
inc
sub
xor
aas
pop
mov
jbe
fisttps
push
xor
lds
or
jbe
xor
jne
insb
jp
mov
test
scas
dec
fidivs
mov
std
movsl
cmp
decl
in
push
pushf
push
out
sahf
mov
ret
outsb
test
sbbb
lods
and
nop
leave
cmpsb
inc
pushf
call
cmp
cmpsb
ret
cld
push
cltd
mov
out
outsl
push
mov
lgs
jmp
push
out
xor
ficomps
lods
ljmp
popf
mov
imulb
gs
daa
inc
xor
movsb
rol
hlt
rclb
pop
push
scas
jnp
into
jbe
loopne
fdivl
add
daa
and
push
popf
lods
aas
movsb
push
frstor
xor
ss
lea
pop
pop
outsl
mov
cmpsl
ds
stos
test
ret
insl
jns
ja
rclb
xor
ret
andl
push
xchg
push
mov
aaa
lahf
lods
mov
dec
iret
dec
pop
sub
jecxz
mov
mov
fidivrl
xchg
xor
hlt
rolb
jnp
pop
cmpl
ds
fstenv
incb
and
mov
into
or
mov
and
adc
data16
push
mov
dec
inc
bound
and
mov
ror
sbb
dec
movsl
adc
cli
shlb
push
mov
fisubrs
clc
jb
cmp
mov
bound
adcb
cmp
jg
pop
popf
or
iret
jno
test
cld
pop
xor
and
xchg
dec
mov
cmp
jmp
cmp
push
cmpl
mov
stc
test
push
or
cmpsl
pop
mov
and
add
xchg
push
leave
adc
ljmp
xor
cli
test
and
popf
xchg
and
mov
testl
nopl
sbb
pop
jne
sti
cmp
sub
jl
cmp
out
insl
iret
dec
popa
jno
add
sub
fsubp
pop
int3
decb
js
ret
cltd
ja
nop
test
cmp
jae
xchg
adc
or
movsb
sub
ljmp
sbb
mov
leave
in
rolb
ss
dec
pop
iret
fildl
lock
shlb
push
nop
add
das
loop
or
loopne
pop
lods
fstpt
xor
loope
movb
stos
cmp
and
sub
sub
mov
sbb
jmp
lock
rorb
pop
lods
movsb
icebp
inc
outsl
movsb
nop
arpl
xchg
lods
xchg
shll
filds
icebp
mov
aad
cmpsb
add
popa
js
and
mov
test
mov
inc
addr16
das
dec
push
or
repnz
das
rcl
aad
mov
int3
jae
ret
insb
sub
mov
insb
in
mov
mov
push
insl
sub
cmp
lahf
pushf
call
adc
inc
rorb
lock
in
pop
lahf
push
pusha
xor
jmp
sub
rep
add
loop
bound
jmp
jae
xor
movsb
fwait
add
out
popf
xchg
xor
mov
into
dec
cmpsl
ret
movsb
es
sbb
aad
sahf
idivb
scas
mov
js
test
inc
lret
rorb
jae,pn
imul
adc
xchg
adc
and
movsb
shrl
daa
jge
cs
in
lcall
mov
shrb
loope
pop
pushf
fdivp
inc
fldenv
ds
fmull
int
fsubs
pop
fadd
push
or
scas
add
jne
jb
pop
pop
pop
and
shrb
and
pop
movsl
jbe
shrl
sub
lods
inc
pop
aam
mov
sub
sbb
sub
fsts
jo
jle
ja
jecxz
mov
sub
stc
push
xor
punpcklwd
insb
and
insb
push
or
jmp
mov
icebp
dec
dec
fcmovnbe
inc
push
in
enter
mov
into
pusha
call
stos
push
iret
push
pop
jbe
dec
test
popa
sub
fildll
cmp
xor
or
call
ds
mov
jmp
or
cltd
push
sahf
inc
pop
test
and
lods
push
repz
hlt
xor
pop
int3
inc
mov
movlps
xor
nop
mov
testl
inc
mov
and
ljmp
divl
inc
test
and
xchg
rorl
xchg
fistps
or
and
mov
into
test
sub
pop
sbb
jnp
jae
jae
inc
xor
cltd
adc
js
out
mov
lahf
add
aad
sbb
out
push
cwtl
jle
dec
xchg
mov
jecxz
jnp
mov
xchg
ljmp
xchg
xor
cmp
call
ret
pop
fnclex
stos
out
cld
loopne
test
lret
testl
int3
lret
ljmp
pop
mov
scas
out
mov
inc
test
xorb
aas
push
scas
arpl
dec
cmpsb
xor
mov
cli
aaa
into
sub
jo
icebp
aad
and
jle
pop
imul
dec
mov
aad
and
cmp
jge
cltd
insb
mov
les
jge
ror
rep
jg
jmp
jmp
adc
sbb
arpl
psubsb
mov
ss
jo
sar
jmp
lcall
mov
clc
xchg
lret
lcall
mov
fildl
xchg
sub
sbb
sbb
jo
int3
js
adc
jo
xchg
xchg
stos
std
shll
inc
pop
dec
adcb
into
push
mov
mov
mov
out
insb
in
mov
xchg
pop
cld
add
cmp
cmp
imul
xchg
test
dec
xchg
xorb
mov
add
fistpl
push
les
jg
addb
xchg
into
aas
push
jl
aaa
into
sub
jnp
int
dec
jg
or
imull
or
jmp
and
mov
icebp
adc
inc
push
fwait
mov
adc
iret
mov
stos
lds
jns
insb
dec
adc
cmp
pop
rep
int
repz
loop
mov
movsl
mov
fildl
mov
sub
mov
mov
jmp
sbb
dec
mov
jmp
mov
xchg
xchg
cld
push
ja
scas
inc
fsts
push
insl
outsb
xor
loopne
iret
jbe
jl
addr16
movsb
hlt
pop
or
fs
or
add
arpl
pop
push
jb
inc
pop
jno
and
fisubrs
into
movsb
jo
sbb
or
movsb
cmp
mov
pop
lcall
movsb
or
push
sub
jne
sub
mov
lods
mov
mov
aam
pop
and
xchg
jl
ljmp
sub
push
in
aas
sahf
mov
fsubp
mov
data16
scas
dec
in
sti
imul
test
ret
xor
es
xchg
xchg
imul
test
mov
sub
pop
stc
or
andb
sub
lahf
dec
sub
movsl
push
add
nop
or
and
cmp
push
mov
xchg
and
fs
mov
mov
pop
lods
lahf
push
xor
pop
shll
jl
outsb
mov
and
inc
fldcw
dec
pop
cmpb
and
dec
arpl
cld
call
scas
sub
pop
pop
or
sbbl
push
inc
loope
jns
mov
mov
adc
aaa
or
or
and
shl
jb
int3
and
dec
jnp
sub
inc
lock
imul
test
add
ret
aam
das
inc
repz
mov
pusha
inc
clc
pop
hlt
sub
insb
filds
jnp
inc
bound
dec
mov
inc
outsl
jnp
fldenv
repz
or
gs
xchg
push
xor
fisubs
ds
adc
jge
movsl
data16
loopne
xor
in
or
mov
push
mov
mov
fnstsw
mov
lods
pop
sub
mov
in
addr16
rcrl
shlb
xor
js
push
dec
fisttps
add
mov
add
inc
mov
pop
dec
inc
rclb
int
mov
dec
mov
ljmp
and
push
loope
inc
out
int3
gs
mov
and
aam
mov
adc
daa
lcall
lcall
dec
iret
popa
cld
out
push
dec
cmp
lods
inc
cmc
mov
insl
testl
es
xchg
ja
pop
jmp
mov
and
stos
ds
mov
cmpsb
imul
iret
lcall
loope
stos
mov
inc
aas
imul
jecxz
cli
cltd
adc
push
or
je
out
add
mov
inc
repnz
push
xor
or
mov
jno
sahf
dec
mov
pop
xor
fcom
cld
dec
pushl
cwtl
pop
adc
icebp
in
sbb
ret
pushf
ja
push
lods
mov
add
push
scas
int
sbb
fsubr
fadd
and
in
sub
int
cmp
fildll
mov
sub
pushf
sub
fstpl
mov
cltd
dec
sbb
jg
pop
in
es
lock
sub
mov
sti
push
in
roll
mov
popa
out
daa
cmp
jno
sbb
add
lcall
jb
clc
insl
fdivl
sbb
inc
ret
pop
lods
push
dec
insb
into
dec
lods
sub
into
and
cmp
or
or
adcl
push
mov
sbb
add
arpl
push
mov
sbb
cmc
dec
adc
add
mov
cmpsb
les
stos
push
cmp
xchg
pop
dec
pop
clc
push
lret
leave
adc
ss
out
xchg
movsl
inc
inc
jmp
fs
into
dec
sub
sbb
jb
xor
fistps
call
xchg
fcmovnbe
stos
cmp
adc
shrb
push
push
sbb
xor
sub
mov
int3
scas
nop
sub
sub
dec
idivb
inc
jl
xor
mov
stos
mov
fnstenv
in
mov
and
sub
add
jae
pop
cmp
mov
dec
xchg
sbb
sub
test
lods
mov
lret
push
sub
aad
mov
pop
repz
or
cmp
lahf
loop
in
add
add
repz
xor
add
call
lcall
fwait
cmp
mov
add
mov
adc
mov
push
and
add
int3
push
fimuls
jl
inc
add
in
data16
sbbb
xchg
mov
jl
in
ficoms
or
xchg
push
lds
cmpsb
les
in
push
pushf
mov
ljmp
mov
rclb
divb
inc
and
out
dec
and
lods
outsl
mov
cld
xchg
data16
jae
mov
sahf
add
out
shlb
and
cltd
or
and
sarb
mov
enter
sti
push
cmp
dec
pop
xchg
in
pop
and
xchg
sub
dec
pop
imul
test
in
lock
inc
dec
pop
pusha
xor
sub
pop
push
adc
rcrb
int3
sub
aas
sbb
sarb
aad
mov
adc
pop
paddw
xor
adc
inc
lret
daa
mov
stos
sarl
ret
dec
ljmp
jb
sub
xchg
push
xlat
lock
dec
cmp
cmp
aad
hlt
icebp
je
fiaddl
insb
pop
cmp
out
inc
stos
inc
cltd
push
push
or
and
iret
sub
mov
pop
ljmp
mov
cwtl
or
cli
out
pop
sub
xor
mov
dec
push
imul
hlt
in
jge
shrl
xchg
aaa
repnz
xchg
or
cmp
sub
push
sbb
xor
cmpsl
int3
inc
jns
in
push
loop
or
ds
lds
sarl
adc
cmp
dec
mov
xor
addr16
out
notb
mov
mov
pop
or
jae
aad
imul
daa
mov
or
or
adc
jg
ret
adc
push
xorl
adc
mov
mov
pop
pushf
mov
push
xchg
idiv
popa
xor
sub
aas
in
dec
inc
push
jne
insl
sahf
fucomip
xor
pop
repz
mov
or
outsl
les
bound
mov
dec
jo
add
into
xchg
int
iret
sbb
in
neg
loop
xchg
pop
fcomps
jb
jae
cmpsl
in
mov
push
out
mov
lods
popf
dec
jle
pusha
mov
fwait
test
mov
lret
sub
push
aaa
mov
inc
fdivl
jmp
ljmp
aam
xlat
jecxz
mov
xor
mov
movsl
insb
sbb
aad
mov
mov
push
adc
js
xor
pop
out
xchg
daa
ds
adc
out
adc
inc
jnp
xchg
or
lds
out
stos
pop
mov
aaa
adc
test
fisubrs
pop
call
ret
mov
mov
jnp
fcoml
popfw
and
dec
mov
jb
xchg
xchg
js
adcb
std
jle
in
mov
in
push
loop
enter
inc
jp
push
lret
jmp
inc
ja
out
andl
nop
xor
cld
adc
push
lds
push
in
notl
in
aas
push
mov
shll
mov
test
fisttpl
inc
xchg
test
dec
adc
mov
mov
adc
xchg
jle
cs
outsb
xor
test
insl
and
adcl
nop
jge
in
lods
mov
cs
cmpsb
push
jne
ljmp
test
and
push
data16
mov
fmuls
sub
pop
loopne
mov
xchg
and
sarb
inc
lret
repz
ljmp
in
sub
mov
or
mov
fwait
arpl
and
out
cltd
int3
loopne
cmp
ljmp
fwait
sbb
push
out
scas
imul
lret
jne
push
jbe
clc
push
in
pop
loopne
push
in
leave
lcall
cmp
ficomps
ret
psubsw
rcrl
cmp
cli
dec
and
cmpsb
in
sub
lahf
xorb
xchg
adc
xchg
adc
out
in
pop
and
in
mov
pushl
test
xor
mov
adc
push
daa
fnstcw
bound
das
add
js
dec
ret
add
sti
sbb
jnp
addb
mov
loop
mov
mov
int
and
mov
imul
jge
out
sub
shlb
outsb
xorb
inc
mov
or
mov
or
mov
shrl
popf
pop
popf
xchg
mov
mov
or
sbb
lea
jp
lods
lods
mov
popf
jns
sub
mov
lret
sti
lret
loopne
cmc
sbb
jb
push
lret
fdivrs
add
iret
mov
into
gs
or
pop
cli
insb
add
mov
xchg
add
mov
dec
jl,pt
outsb
push
dec
sbb
cli
adc
faddl
fisubrl
movsl
cmc
outsb
aad
xlat
add
daa
arpl
sbb
stc
or
inc
lcall
and
mov
sti
xchg
cmp
dec
ds
dec
cwtl
cli
cld
and
ja
stos
xor
inc
mov
mov
scas
adc
push
inc
pop
test
or
cmp
add
mov
loopne
cmp
xor
es
fs
add
insl
ljmp
or
dec
mov
pushf
mov
rcl
jl
xchg
insb
shlb
bound
add
and
mov
jmp
adc
push
gs
into
xchg
mov
inc
jbe
mov
outsl
and
stos
xchg
xor
and
cmp
dec
fisttpll
loopne
push
aam
cmp
rol
fwait
sub
cmp
ret
xor
ds
stos
adc
out
outsl
jecxz
and
jmp
push
jle
decb
lahf
fdiv
mov
mov
es
and
or
jns
cmc
loopne
cwtl
mov
sbb
jp
pusha
loopne
pop
sbb
xchg
daa
xlat
jmp
lods
xlat
pop
lea
add
mov
xor
jecxz
mov
jl
mov
mov
cmp
stc
xchg
push
stos
xor
loope
lds
sbb
sbb
lds
sbbb
mov
fmull
sub
add
push
lods
daa
push
cmp
pop
leave
dec
jecxz
cmp
clc
mov
in
stos
push
arpl
in
scas
xor
or
mov
mov
add
cmp
sub
pop
xchg
sahf
scas
add
add
lret
pop
jmp
sti
mov
fst
push
out
xchg
add
nop
roll
insb
jno
mov
mov
rorl
and
arpl
or
adc
nop
jg
or
jecxz
lcall
sub
je
push
dec
mov
jge
scas
dec
cmp
lahf
loopne
rcrb
jp
xchg
gs
fidivs
ss
lret
mov
push
aas
pop
pusha
js
push
mov
pop
scas
xchg
rcrl
mov
repnz
cmpsl
cmp
fcomip
sbb
xchg
cwtl
xor
add
xchg
push
outsl
adc
sbb
adc
add
in
icebp
xor
into
inc
into
iret
clc
in
movsl
popf
sub
lcall
xor
and
dec
dec
mov
cmp
incl
and
iret
jae
fsincos
pop
or
fidivrl
movsb
lret
cmp
aas
pop
jl
arpl
shll
cmp
fiadds
xchg
push
mov
mov
jle
stos
cmp
jnp
and
or
jle
bound
fdivrl
pop
repnz
push
xor
es
bnd
push
push
push
loopne
mov
xchg
ljmp
out
popa
les
cld
roll
out
xchg
addr16
js
addl
fdivrs
mov
xor
sahf
xchg
adc
cwtl
imul
in
mov
push
jb
add
sbb
loopne
cmp
shl
aad
sub
fsub
xchg
cli
das
addr16
inc
mov
cmp
test
pop
dec
clc
pop
jo
outsl
mov
add
jae
mov
jnp
jae
jb
add
or
lods
mov
inc
push
popl
icebp
xchg
push
inc
stos
push
cmp
pop
cs
pusha
ret
inc
test
and
sub
jge
xchg
in
fwait
lahf
mov
cwtl
lods
inc
jmp
sti
push
pushf
mov
mulb
mov
jb
out
popf
dec
outsl
jae
sub
sbb
xchg
dec
mov
fmuls
mov
mov
sub
pop
fnstenv
cmp
in
js
fimull
negb
pop
fucomp
jns
test
mov
dec
cmp
mov
pushf
push
out
lcall
jp
xchg
mov
xor
jbe
or
add
mov
fcmovnbe
push
lods
sub
cmpsl
add
push
adc
cmp
hlt
fs
cmc
xchg
cmp
dec
adc
mov
in
xchg
lret
xchg
mov
xor
scas
push
or
push
push
fcmovbe
movsb
out
sti
popf
mov
mov
xor
pusha
xchg
xchg
aam
or
data16
cmpsl
mov
leave
insb
fisubrl
jl
ja
test
or
sahf
ret
sbb
inc
aas
mov
std
sbb
pause
mov
ret
ss
in
cmc
aas
pushf
loopne
sbb
adc
addb
cmp
lds
sub
popa
je
rcl
pop
ret
sub
cmp
cmc
push
inc
cmpsl
outsb
dec
and
pop
addr16
stos
loope
lods
sbb
popa
clc
mov
into
jg
mov
pop
mov
sub
hlt
mov
push
cs
jo
sub
sbb
test
std
aaa
sbb
mov
call
loopne
sbb
xchg
adc
adc
ret
jp
das
mov
pop
dec
dec
fstpl
aad
dec
cmp
dec
jl
sub
rcrl
jae
add
arpl
pop
nop
stos
mov
repz
cmpsb
cwtl
fidivrl
add
mov
notl
stos
inc
enter
jb
std
mov
dec
test
mov
add
jb
sbbl
fwait
mov
idivl
xor
push
nop
push
adc
insl
or
jns
out
repnz
mov
push
jbe
lock
lea
pushf
xor
sub
icebp
mov
js
popa
xor
add
jnp
add
cwtl
jb
jmp
inc
add
xchg
pusha
cmc
push
enter
sbb
sarl
outsl
push
lods
fbstp
addl
add
jmp
std
jo
test
and
fcomp
ljmp
jnp
mov
jg
insb
shll
test
mov
sbb
push
mov
inc
jg
sbb
arpl
cmp
pop
xlat
mov
cmp
shr
imulb
lret
les
jg
subl
insb
sti
jmp
cmp
ss
add
adc
stos
cmp
inc
int3
mov
movsl
cld
sub
pop
dec
xchg
frstor
shlb
int3
aam
cmp
imul
pushl
hlt
cmpsl
imulb
popf
mov
inc
or
cs
stos
es
shrb
jg
fwait
mov
mov
push
sub
ds
subb
jmp
add
mov
movsl
icebp
dec
or
and
cmp
jp
adcb
nop
cmc
and
mov
pop
cld
sub
sub
mov
sbb
push
jb
in
fs
xchg
push
sub
cwtl
jle
mov
jle
sarb
scas
inc
jge
fidivrl
pop
lret
mov
mov
inc
mov
mov
push
jmp
cmp
jb
push
jecxz
in
and
mov
iret
js
and
dec
push
fiadds
mov
inc
and
arpl
int3
in
inc
pushf
xchg
push
pop
out
aad
das
rorl
mov
in
xor
aas
mov
daa
aas
imul
imul
gs
shl
loopne
pop
jne
pop
movsl
iret
lods
pop
leave
ret
mov
ja
ss
pop
out
lds
movq
scas
nop
adc
mov
mov
xchg
cmc
or
sar
jo
das
mov
nop
mov
jbe
mov
pop
repnz
jne
or
decl
xor
stc
push
fiaddl
push
push
enter
pop
in
jmp
and
fdivl
test
cmpsl
push
cmp
inc
outsl
pop
pop
int
cmp
shlb
mov
dec
xchg
in
enter
imul
sub
xchg
insl
add
mov
sbb
mov
add
stc
setbe
pop
push
and
sbb
mov
cld
cltd
lods
inc
or
pop
dec
fisttps
sahf
shrl
mov
pop
daa
pop
test
cmc
push
out
popf
adc
mov
mov
mov
and
or
call
cmp
aam
mov
mov
pop
push
dec
loope
sar
xchg
ret
push
xor
push
ds
aam
sbb
mov
rclb
movsl
cmp
fldl
mov
cmp
pop
insl
jecxz
and
mov
clc
sub
and
repz
movsl
loop
adc
stos
xor
mov
ja
packuswb
mov
cld
hlt
mov
dec
pusha
out
daa
adc
xchg
cmp
icebp
hlt
jl
fs
adc
pop
in
dec
inc
fs
aaa
push
int
ficoml
jg
repnz
std
cmpsl
add
mov
push
rolb
in
inc
icebp
mov
js
inc
aas
jg
inc
mov
cmp
test
sub
nop
adc
xor
out
test
stos
push
jnp
bswap
add
cmp
pop
xor
and
inc
pop
ds
jge
sahf
mov
pushf
or
push
mov
and
fidivs
adc
pop
lcall
ret
xor
in
xchg
push
in
push
pop
and
inc
fwait
or
lret
repz
sub
mov
xor
mov
mov
cmp
add
pop
add
adc
adc
adc
sbb
rcl
pop
cmp
in
jno
lret
repnz
pop
jno
push
icebp
inc
pop
xor
mov
xor
mov
movsb
mov
inc
fadds
xlat
pop
xor
rol
push
pop
ss
sub
stos
rcrl
cld
test
dec
fsubl
into
jp
jle
pusha
inc
mov
jne
outsb
stos
cmp
mov
fwait
in
fs
or
mov
lahf
jae
test
mov
loop
cmpsl
mov
loopne
lret
dec
add
mov
clc
movsl
shlb
gs
xor
mov
and
shrb
lret
dec
and
daa
mov
dec
pop
xor
xor
test
int
or
mov
xchg
or
adc
push
jmp
adc
jne
mov
stos
das
cmp
or
test
enter
lcall
jp
jle
test
fsubrp
xchg
jl
add
scas
xchg
xor
ja
ds
adc
xchg
hlt
xor
mov
test
imul
popf
jmp
lea
leave
jl
fisttpl
cli
xor
inc
push
push
dec
rolb
rorb
lods
push
mov
jb
aad
js
push
sub
jnp
push
out
push
cmpsl
pop
mov
popa
and
out
cs
gs
ret
packssdw
mov
int
int
xchg
push
in
lds
jae
ja
roll
cwtl
cltd
adc
scas
pop
mov
add
dec
pop
bound
sub
mov
pop
adc
inc
xor
push
loope
cmpsb
push
mov
mov
ficoml
cmp
outsb
call
lods
pop
adc
jge
dec
pop
dec
jp
or
frstor
or
sbb
jg
out
rcrb
pop
sahf
or
pop
cmp
jmp
and
lcall
nop
cmpsl
push
pop
andl
cmp
push
xchg
adc
lahf
clc
sbb
mov
rorl
adc
dec
loope
push
sbb
test
loopne
lahf
int
xchg
sub
push
mov
mov
repnz
or
fwait
sbb
and
pop
shll
xor
mov
jae
jb
jbe
push
sbb
sub
inc
add
xchg
push
int3
mov
jl
aam
imul
jne
pop
imul
inc
push
inc
movsl
ret
cmpsl
pop
dec
sbb
fmul
pop
mov
xchg
iret
jae
repnz
movsl
pop
movsl
cmp
xchg
pop
stos
movsl
cwtl
leave
enter
ljmp
xor
les
nop
mov
push
repz
pop
lea
cmp
jbe
loop
sahf
cmp
dec
jnp
xor
and
inc
or
cmc
sub
mov
pushf
andb
or
ds
sahf
iret
push
nop
push
and
std
daa
and
add
xor
scas
pop
mov
mov
dec
pop
xchg
test
inc
cwtl
dec
les
xchg
dec
mov
cltd
in
inc
cs
pop
adc
mov
jne
jmp
push
mov
cmp
add
cmc
xchg
xorb
outsl
push
call
pop
or
adc
jmp
mov
orl
or
cmc
leave
push
hlt
dec
lcall
popa
jmp
inc
pushf
cmpsb
cmc
dec
out
js
inc
insl
add
or
sub
xchg
add
mov
outsl
jle
xchg
or
imul
inc
fs
jl
cmp
and
sbbl
or
sub
and
add
xor
mov
and
movsb
pop
pop
pop
inc
add
sub
add
sbb
js
cltd
cmpsl
cmp
scas
sub
icebp
pusha
lock
mov
xchg
addr16
stc
jno
mov
sbb
cmp
and
insb
pushf
mov
das
repz
xchg
rcll
pop
bound
inc
cwtl
and
push
mov
mov
cmp
jle
sub
imul
outsl
inc
push
xchg
fcomps
das
jbe
into
xor
pop
fwait
adc
cmc
xor
je
fwait
js
shl
adc
into
sub
test
inc
or
pusha
sbb
pop
push
in
pop
repz
and
mov
fsubl
rcr
inc
cmc
int3
repnz
repnz
jge
jg
nop
or
dec
push
loop
ret
in
sti
mov
sub
sbb
push
inc
xchg
sbb
imulb
pusha
add
xchg
mov
icebp
movsl
pop
sti
incb
es
dec
and
adc
add
stos
jle
mov
inc
mov
in
push
xor
fwait
loop
xchg
lcall
out
in
out
xchg
xchg
aas
inc
dec
fidivrl
aad
decb
lret
push
push
out
das
sbb
popf
sub
mov
pop
pop
dec
or
daa
mov
pusha
sub
stos
aas
pop
sbb
aad
repnz
push
pop
dec
loopne
sub
cmpsb
aas
ret
mov
in
pop
in
or
and
xchg
jnp
cmpsb
insb
mov
lods
inc
icebp
sti
das
cmp
rclb
rclb
or
mov
or
cli
cmc
cltd
xor
adc
ss
xrelease
scas
dec
and
clc
push
icebp
movsb
inc
lods
xchg
inc
rcrl
mov
and
adc
xor
js
das
dec
pop
enter
cmp
xchg
push
icebp
mov
mov
inc
mov
dec
adc
adc
insb
insl
ret
mov
mov
pop
push
adc
mov
fnstcw
mov
aas
das
inc
push
mov
or
jge
outsb
outsl
inc
ja
lret
pop
ja
add
gs
lods
or
adc
jmp
mov
cs
bnd
pop
imul
fwait
not
cmp
jno
dec
lret
inc
movsl
icebp
js
aad
sub
ljmp
call
in
push
mov
cltd
adc
sub
roll
test
inc
dec
xlat
ja
popa
sti
outsb
ja
aaa
into
clc
cwtl
testl
popf
sub
dec
push
gs
ret
xor
push
sbb
sub
pop
jecxz
dec
xlat
jmp
stos
clc
shrl
push
inc
sbb
repnz
lcall
lcall
and
xchg
adc
push
jp
cltd
xor
popf
out
jmp
inc
pop
roll
xor
pop
push
xchg
sub
negl
jle
mov
rcrl
mov
cmpsb
mov
sarb
pop
je
and
outsb
mov
mov
xchg
in
inc
subb
mov
in
es
dec
movsb
addr16
xor
add
mov
mov
push
jle
scas
jns
aaa
int
and
int
mov
insb
xchg
mov
fcmovb
push
outsl
inc
and
fdiv
popa
inc
iret
xchg
lods
icebp
and
dec
loopne
xor
jae
divl
push
call
aad
push
mov
lods
xor
push
outsb
bound
jo
mov
xor
call
dec
je
loop
in
sub
insl
lods
es
jmp
aas
mov
mov
mov
dec
inc
gs
pop
jo
cmp
mov
pusha
aaa
mov
negl
add
cmpsb
js
pushf
dec
push
inc
mov
sub
or
sbb
mov
sbb
mov
jns
adcl
lods
inc
clc
dec
repnz
mov
jp
pusha
nopl
dec
push
add
fdivrl
cwtl
lcall
and
js
andl
ret
stos
out
sbb
cmpsb
sub
inc
push
movsl
push
jae
in
sub
ds
jo
inc
fcompl
sub
in
shlb
lahf
add
sahf
in
sbb
mov
int3
jbe
inc
adc
jl
shrl
lahf
jne
out
push
incb
out
jno
add
movsb
sbb
push
mov
fwait
push
xor
roll
cmc
or
lds
mov
push
add
jae
adc
mov
jle
stos
or
pop
cmp
lret
adc
jmp
inc
xor
outsb
pushf
mov
ret
and
sti
aam
xchg
push
int3
ffreep
les
mov
cltd
fstps
in
mov
pop
sub
sbb
cmc
sti
mov
mov
pop
clc
jp
aad
lret
push
in
icebp
mov
jae
out
insb
pop
repnz
xor
filds
mov
jno
pop
repnz
movsl
push
ljmp
pop
out
pop
sub
or
enter
ret
iret
and
mov
loope
stc
stos
insl
and
lock
mov
sbb
ficoms
movsb
and
loope
sub
mov
sbbb
mov
mov
push
cmp
gs
or
sbb
or
nop
adcb
dec
outsl
les
dec
jecxz
sbb
xor
pop
sbb
push
ret
or
aas
adc
mov
mov
outsl
push
je
and
cmp
mov
stos
fstpt
iret
or
rcrl
add
int
into
xor
xchg
xchg
mov
cwtl
xor
test
sbb
sub
xor
xchg
jl
pushf
cmp
jecxz
mov
divl
outsb
aas
int
xchg
rcll
lea
cmp
imull
lret
bound
imul
pcmpgtb
in
dec
sub
pop
add
jl
out
mov
mov
stc
popf
iret
cmp
mov
mov
xor
or
mov
cwtl
cld
sub
mov
adc
shrl
xchg
mov
iret
fsubr
add
jmp
filds
xorb
push
cmp
movsb
or
dec
lcall
cmp
cli
lret
pop
out
ret
jge,pn
mov
add
stos
mov
xlat
repnz
aam
mov
icebp
xchg
pop
test
mov
mov
lcall
in
fstpl
nop
daa
dec
out
cmpsl
xchg
cmp
in
fisttps
and
xchg
cmc
lods
fadds
imulb
repz
jmp
lret
push
lock
pop
and
cmp
pop
cmp
cmpsb
cltd
push
sbb
iret
shrl
add
lea
scas
inc
or
popf
lock
lcall
push
jbe
dec
cli
pop
negl
mov
xor
and
pop
dec
jns
cmpsb
push
jge
cmc
leave
std
test
out
xchg
jnp
lea
lds
xor
movl
out
repnz
fadds
push
imul
test
and
dec
cs
mov
mov
and
pop
aas
xor
mov
pop
pop
jp
repz
sub
mov
inc
outsl
in
pop
jo
jge
hlt
mov
adc
ja
sti
push
adc
in
push
inc
pusha
orb
jp
or
jg
sub
dec
cwtl
daa
outsl
mov
shlb
mov
call
or
ljmp
insl
inc
adc
xor
roll
mov
mov
jl
pop
int
jp
lcall
push
and
jl
das
mov
pop
ss
loop
inc
adc
push
mov
in
cmp
mov
aas
fwait
stc
insb
jnp
xchg
push
dec
dec
sbb
mov
test
mov
cmpsl
mov
fsubl
mov
mov
mov
fdivrp
rorb
popaw
jae
out
xchg
push
addr16
mov
shrl
fstpt
and
add
xchg
cmp
dec
sub
dec
rcll
mov
cmpsl
cs
push
and
add
test
pop
aaa
out
bound
roll
jo
fisubrl
rol
fdiv
inc
lods
daa
decb
push
push
fxch
or
push
test
aad
aaa
leave
aaa
into
out
mov
ret
fildl
test
pushw
loop
jo
arpl
int
test
mov
pushf
inc
add
sbb
ss
addr16
jmp
pop
xchg
sbb
mov
subb
jnp
mov
lret
jns
dec
mov
loopne
dec
cmc
fnstenv
sub
int
sbb
cmp
xchg
fistl
and
aam
imul
pop
lahf
push
pop
mov
mov
shlb
repnz
mov
andl
pop
pop
pop
dec
inc
xor
pop
aaa
and
jmp
pop
cld
inc
roll
cltd
xor
popa
outsl
loop
or
fs
dec
mov
inc
iret
fucomi
jmp
mov
xor
lret
or
or
cmp
jbe
push
jle
xor
push
xchg
dec
test
repz
test
cmp
or
pop
push
out
fs
mov
add
aaa
iret
sbb
xor
xor
cmp
and
mov
mov
jae
jp
and
pop
mov
jecxz
cmp
xlat
pop
fpatan
dec
sbb
jb
sub
ret
cmc
std
in
sub
and
fcomps
or
and
in
lds
jbe
pop
pop
jne
out
in
std
pop
sbb
in
repnz
cmp
jb
scas
add
in
mov
jae
push
push
testb
ret
dec
jnp
mov
shll
sub
dec
sbb
icebp
das
mov
xor
shll
push
mov
sarl
adc
dec
mov
bound
test
or
or
fcmovne
jb
daa
jle
fimuls
xchg
adc
dec
pop
cltd
fcomps
in
xchg
dec
pop
lods
nop
roll
lret
ss
cs
dec
aad
dec
add
cmpsb
cmp
mov
mov
mov
xchg
jne
popa
push
cwtl
ret
iret
maxps
jne
cmpsl
and
fs
push
roll
popf
gs
inc
clc
aas
fbstp
sub
repz
xchg
xchg
shrl
into
gs
mov
outsb
popf
sbb
les
sbb
sti
cmp
mov
push
xlat
xor
add
jge
push
pop
stc
cmpb
dec
and
pop
inc
fdivrp
mov
data16
movsb
pop
std
pop
sub
cmpb
outsl
fsubrl
add
xchg
adc
xor
jno
pop
lret
jb
in
mov
inc
mov
mov
les
insl
jmp
sbb
inc
ljmp
insl
fcmove
push
or
in
xlat
clc
adc
pushf
cli
xchg
inc
lcall
out
sbb
ds
test
push
test
mov
insl
hlt
sub
cmp
mov
push
pop
push
inc
mov
leave
mov
insb
int3
jnp
bound
pop
mov
scas
add
popf
cmp
iret
int
sub
fstl
scas
into
mov
test
fistps
fisttps
push
insl
movsl
cmp
dec
cmp
subb
adc
pushf
pusha
leave
ficomps
aad
arpl
push
mov
dec
add
pop
mov
fstpt
sub
xor
push
testl
pop
xor
cld
xor
add
lock
sbbl
fdiv
lret
lret
sbb
push
and
or
cs
mov
pop
sub
lret
mov
int
xchg
cmpsl
push
sarb
and
inc
dec
into
xchg
xor
adc
in
stos
popf
fldenv
mov
sbb
inc
push
push
icebp
insb
push
add
cmp
or
orb
adc
pop
lea
xor
insl
sub
sub
lock
sub
aad
xchg
stc
aam
jnp
arpl
in
bnd
xchg
add
imul
jns
sub
cmp
shl
push
sbb
cmpsl
subb
imul
js
cmpsb
mov
lods
cmp
jp
into
das
lret
sti
push
push
push
ret
clc
add
out
push
rcll
inc
aad
cwtl
stos
push
dec
xchg
dec
inc
cli
leave
pop
insb
in
jl
call
add
pause
and
lds
or
xchg
dec
or
scas
push
mov
sbbl
and
sbb
adc
mov
ds
inc
ljmp
jo
xor
mov
sbb
jae
cmc
cmpsl
ds
out
jns
and
pop
push
push
add
test
in
push
cmp
mov
xor
mov
or
in
mov
dec
loopne
sarb
sub
fdiv
cmpsb
xor
pop
xchg
push
aaa
lahf
sarb
roll
bound
cs
mov
pop
pushf
aad
pop
lcall
mov
ret
mov
mov
idivb
pop
sub
fstl
sarb
add
or
push
outsl
sbb
inc
gs
mov
mov
jnp
int
push
ljmp
sbb
cld
lcall
mov
sarb
js
and
aam
sbb
icebp
or
mov
addr16
and
testl
mov
outsl
inc
mov
loopne
adc
clc
or
pusha
cmpsl
xor
push
sub
into
jns
shrb
aad
into
push
ret
fisubs
push
out
fwait
pop
dec
movsl
mov
push
dec
rcr
ja
test
pop
insl
cwtl
push
and
loopne
outsl
jns
rcll
ljmp
hlt
sub
dec
lock
int3
xchg
xor
enter
lock
xlat
xchg
sbb
test
fimuls
test
fcoms
sub
repz
fxtract
and
mov
into
insl
or
inc
outsb
adc
xchg
orl
daa
mov
mov
leave
frstor
mov
push
in
fidivl
mov
sub
icebp
or
data16
dec
shlb
sti
cmp
sub
pop
movsb
inc
subb
daa
mov
or
mov
jle
out
push
outsb
ret
sub
xchg
jg
xchg
and
repnz
hlt
mov
sub
dec
cltd
lock
dec
mov
mov
dec
mov
divl
add
leave
sub
imul
addr16
in
cmc
fs
pop
rclb
lahf
jbe
push
push
pop
inc
add
xchg
xor
push
push
sbbb
and
cmpsl
cmp
lea
or
or
push
cmp
push
insb
xor
pusha
test
xchg
lods
andl
mov
lods
jb
lds
les
and
mov
cmp
movsb
fildll
mov
pop
mov
aaa
mov
repnz
adc
lahf
jbe
push
cmp
pop
mov
and
ljmpw
cmpsl
mov
mov
xchg
inc
or
lret
lahf
sub
and
dec
inc
fs
push
xchg
in
iret
imul
popf
ficomps
cs
ljmp
push
stc
popf
xor
ljmp
adc
xchg
test
xchg
shl
enter
dec
inc
jge
dec
xor
mov
and
fiaddl
add
imul
pop
jecxz
pusha
xchg
add
push
xchg
xor
mov
push
popf
mov
ret
roll
std
cltd
add
xor
inc
inc
pop
js
add
lods
sub
stos
jmp
icebp
xchg
push
iret
add
lods
cli
daa
and
cmpsb
cmp
pop
adc
std
lods
jge
fisubrl
lcall
cltd
mov
inc
insl
shrl
stos
jnp
stos
lock
scas
mov
lahf
pop
mov
out
jo
setns
arpl
dec
bound
subw
sbb
sti
inc
ja
jge
jge
inc
sbb
mov
cwtl
pop
cmp
sub
aas
push
pop
mov
push
adc
cmp
lea
add
je
sar
roll
sub
fwait
enter
adc
jae
or
lret
fbstp
int
dec
mov
or
scas
sahf
imul
test
std
or
or
sahf
jno
adc
xchg
cltd
popa
clc
push
dec
dec
dec
push
lock
adc
adc
push
shll
xchg
dec
daa
out
sbbl
ss
movsl
cmp
or
jns
out
xchg
mov
cmp
shrb
subb
jnp
setae
dec
jnp
push
iret
pop
inc
jle
mov
bound
pop
mov
push
push
sbb
mov
cmp
in
pop
dec
cli
es
divb
in
mov
adc
popa
xchg
mov
dec
sti
imul
sbb
outsl
lcall
mov
dec
shrb
push
addr16
xor
xchg
push
cltd
cmc
sbb
scas
adc
inc
fsubrs
outsl
add
dec
sbb
and
sub
xlat
mov
xor
xchg
mov
push
sti
ljmp
fistpl
xchg
leave
pusha
xchg
adc
popa
pop
leave
es
mov
adc
xchg
sbb
ret
lods
mov
pushf
xor
repz
adc
cld
pop
pushf
test
mov
cld
mov
rcl
or
out
mov
lea
lock
sbb
cmp
sbb
ljmp
xor
jge
inc
and
out
enter
dec
into
mov
les
cmp
xchg
mov
inc
push
push
movsl
test
addr16
mov
adc
and
inc
jmp
imul
lahf
cmp
in
loop
imul
cli
ds
out
sti
xchg
push
rorb
mov
fldcw
out
cmp
sub
mov
das
imull
les
lahf
mov
sbb
gs
or
inc
jmp
pop
inc
sub
les
ret
cmp
push
adc
cmp
mul
cmpsl
test
imul
pop
les
and
xor
test
jb
outsl
js
jnp
mov
pop
mov
pop
loope
xchg
cmp
icebp
insb
testl
dec
pop
push
icebp
pusha
rolb
sbb
xor
and
push
cmp
and
inc
or
inc
in
lahf
test
imul
cmp
popf
arpl
ret
push
push
test
shll
pop
test
or
pop
mov
scas
jns
addr16
into
pop
jbe
sbb
into
push
mov
sar
andl
and
int3
cmp
xchg
mov
inc
js
mov
jle
add
mov
xor
fnsave
pop
lods
ljmp
and
test
rcll
pop
pop
repnz
jns
testb
inc
cs
test
or
pop
pop
lret
into
inc
repnz
fcmovu
push
jns
js
xchg
mov
sbb
xchg
loop
mov
aad
dec
test
lea
push
adcl
mov
call
xor
iret
cmc
sbb
mov
mov
ret
lea
movsb
xchg
ficomps
repnz
and
sub
pop
pop
dec
mov
push
cmp
jmp
aaa
sbb
in
test
into
push
jp
sub
iret
sbb
xor
scas
and
aad
test
and
push
xor
dec
fsubrs
rorb
adc
cmp
xchg
cmp
popa
cld
loop
clc
stos
inc
mov
jge
inc
push
or
push
clc
push
and
in
repz
das
adc
or
ss
adc
jae
lret
push
jle
orb
test
or
add
mov
std
jl
fnstenv
sahf
add
and
inc
jge
cld
clc
aas
outsb
xor
ret
jmp
outsb
ret
add
fsubrl
inc
stos
add
icebp
stos
mov
mov
push
pop
scas
add
inc
adc
dec
leave
out
push
inc
adc
fidivrs
pop
or
cmp
scas
repz
adc
push
push
les
sub
fsubl
add
ficompl
stos
jbe
pusha
inc
dec
push
aaa
decl
out
lea
in
lea
jmp
xor
mov
addr16
sbb
xor
push
mov
ljmp
adc
ja
add
and
xor
fsubs
sbbb
and
inc
aas
faddl
push
mov
mov
dec
mov
sbb
adc
pop
push
rcrb
test
pop
iret
sbb
cmp
xchg
inc
inc
iret
add
in
sub
leave
fldl
out
inc
push
jmp
dec
in
sahf
mov
inc
inc
ljmp
mov
xchg
dec
leave
xchg
fsubrs
sbb
arpl
xchg
into
inc
sub
sbbl
loopne
pop
push
or
ss
xor
cmp
push
or
cwtl
das
repnz
adc
mov
mov
dec
scas
inc
rcrb
rcll
push
sub
adc
dec
jae
pop
repnz
xchg
lods
adc
ss
je
sbb
aaa
call
or
aaa
adc
int
jmp
mov
rorb
and
pop
cmp
push
pop
mov
loop
out
mov
sahf
data16
push
dec
push
xlat
cmpsb
out
stos
pop
cltd
es
sbb
and
imul
push
dec
dec
push
or
fcompl
mov
movsb
andb
cld
mov
aad
xchg
dec
pop
scas
mov
dec
jecxz
sub
or
add
or
les
or
cmp
pusha
shrl
add
je
loope
mov
mov
xchg
push
ficomps
jl
inc
inc
cmp
enter
stc
nop
dec
stc
repz
stos
lcall
pop
out
outsl
pop
jp
popl
xlat
shll
add
insb
in
dec
call
faddl
sahf
jno
hlt
fbstp
pmaxub
jns
insl
repz
stc
subb
xorl
je
lods
mov
adcl
inc
loopne
loop
roll
xchg
and
xchg
std
xchg
pop
sub
push
in
and
fs
cwtl
and
cli
cmp
and
xchg
sub
fwait
shr
ds
push
pusha
lahf
push
add
movsl
sub
mov
cmp
jne
fcmove
push
sub
pop
hlt
pop
je
ljmp
mov
pop
sbb
loope
push
xor
jo
in
inc
adc
inc
mov
dec
dec
mov
or
dec
push
pop
inc
adc
jae
push
sbb
je
xor
addr16
push
xchg
mov
push
mov
fstl
in
sbbb
test
adc
sub
lods
pusha
lret
fstl
adcl
scas
or
fadds
and
les
inc
imul
addb
hlt
cld
jecxz
insl
and
dec
ret
mov
sbb
in
test
subl
add
xchg
sbb
jno
jg
adc
insb
xchg
negl
in
dec
mov
enter
push
xor
jns
pop
inc
mov
or
inc
adc
sbb
addb
fs
push
int
fcmovb
mov
mov
add
outsb
nop
fidivl
nop
or
push
ficompl
cwtl
stos
rcr
push
sbb
push
movsb
push
mov
xorl
aad
push
mov
sub
insl
jl
pop
test
cld
mov
fidivl
or
lret
cld
xor
lret
je
data16
push
pusha
lods
fcmovb
add
bound
mov
imulb
lret
mov
in
into
mov
das
mov
sbb
pop
cmpsl
mov
pop
fisubs
or
dec
mov
push
jl
sbb
push
call
inc
push
inc
add
jo
fldt
mov
js
cwtl
in
fidivs
adc
xchg
aad
jge
push
ljmp
sbb
into
out
ret
dec
testl
dec
jp
rclb
mov
push
or
cmp
adc
scas
rorl
add
xor
cmpsb
or
in
jp
cmp
fiaddl
mov
fs
aaa
sub
dec
mov
das
daa
sahf
fldl2t
xchg
jae
imul
sub
ret
mov
pushf
out
mov
inc
pop
and
call
xlat
push
pop
enter
add
cld
test
clc
inc
cmp
aad
fdivrl
sbb
in
js
sub
test
xor
ja
mov
inc
push
push
dec
ljmp
pop
xchg
rclb
ret
cmc
inc
popa
aam
icebp
or
lea
orb
pop
in
sbbb
mov
mov
mov
inc
dec
ss
mov
and
cltd
bndstx
mov
jno
test
mov
int
mov
mov
xchg
xchg
push
notl
sub
push
hlt
fsts
je
gs
psadbw
sub
fxch
sub
pusha
and
push
div
mov
sub
sbb
out
stos
mov
xor
inc
rclb
mov
jl
push
out
cmp
mov
inc
pop
fsubr
and
das
sub
mov
xchg
inc
outsb
dec
cmc
pop
in
sbb
fwait
push
test
rcr
aas
and
in
sbb
push
or
scas
cmp
pop
xor
mov
cmp
addr16
out
xor
adc
aaa
xchg
sbb
cli
push
cmpsl
data16
mov
and
xchg
and
dec
push
xchg
sbb
add
dec
shrl
jge
or
jmp
xchg
add
add
push
dec
lods
insl
test
mov
dec
aaa
mov
cmpsl
out
pop
mov
xchg
push
push
mov
xor
cmp
xor
inc
orb
push
cmp
test
test
inc
pop
bnd
push
cmc
pop
push
incl
mov
or
or
push
out
pop
movsb
movb
jne
in
dec
adc
xchg
cmpsl
ret
inc
out
cmp
mov
push
lret
cmp
bnd
lea
inc
push
push
mov
ss
fidivl
test
xchg
pusha
pop
mov
jae
cmc
adc
pop
xor
jno
xor
ret
mov
mov
mov
clc
push
in
sub
scas
inc
lea
clc
ja
lods
mov
dec
and
add
fcomps
add
or
add
cs
mov
out
jo
test
mov
movsb
in
icebp
adc
imul
and
aaa
push
out
push
in
fldcw
push
cmp
cltd
lods
jne
mov
jle
nop
call
in
inc
mov
js
leave
int
sub
pop
fistl
into
pop
sbb
mov
fdivrl
in
dec
leave
dec
mov
loop
inc
push
xchg
mov
cmp
nop
shlb
adc
lret
int
jle
ret
mov
out
stos
jnp
and
daa
incb
lret
imull
into
or
cmp
pusha
sti
fstp
push
jne
mov
mov
pusha
rcrb
jae
mov
dec
dec
pop
out
jns
add
fadds
mov
shrb
mov
mov
push
aas
jge
mov
cli
psadbw
xchg
cmpsl
icebp
jo
movsl
mov
sbb
dec
lret
jmp
or
push
subb
testb
in
pop
push
and
cmpsb
negb
in
jno
mov
dec
into
or
and
jp
test
addr16
sbb
orl
pushf
xor
or
sub
or
adcb
or
loop
mov
in
pusha
repz
stos
pusha
lods
fwait
xchg
jne
iret
adc
cli
aaa
sub
or
shll
jno
push
mov
inc
mov
fs
mov
fisubs
sub
cwtl
xchg
add
in
xor
test
xorl
jns
bound
jno
pop
dec
lods
mov
imulb
xor
sub
in
push
shl
mov
cmp
pop
inc
mov
fisubl
mov
int
test
jnp
xchg
js
movsb
pop
fists
movnti
xchg
mov
lahf
ss
mov
and
mov
fdivl
fcmovu
enter
fcoms
jae
sub
gs
xchg
mov
pop
xor
hlt
pushf
sahf
sub
push
jo
in
popa
lret
ss
jmp
pop
jmp
mov
adc
js
lea
rcrl
sub
loopne
cmp
xadd
stc
dec
xor
fcompl
enter
shl
mov
inc
mov
xchg
pop
sub
fwait
xor
loopne
cmpsl
adc
loop
or
add
fstpt
rorb
fs
pop
mov
sub
xor
insb
out
jl
cwtl
popa
jbe
xchg
mov
sbb
dec
xchg
and
xlat
ljmp
pop
imul
test
fimull
addr16
jge
popa
sbb
lcall
insl
mov
sar
xor
push
inc
mov
loopne
push
push
xorl
mov
imul
pop
mov
mov
repnz
sbbb
cs
stos
aam
repz
out
push
xchg
aaa
inc
cmc
sbb
popa
jl
sbb
outsl
cmpsl
pop
jnp
xor
and
leave
loop
stc
cmpsb
mov
push
cmc
call
ret
push
les
jb
loopne
nop
inc
dec
sbb
shlb
jecxz
pusha
rol
mov
jg
and
jnp
mov
add
mov
test
cmp
lods
fsubrs
into
xor
xchg
mov
dec
cld
popa
mov
and
rclb
sub
add
xchg
mov
lret
imul
jecxz
es
lret
cmp
and
mov
stc
cld
fistl
stos
fistps
sub
dec
fistps
mov
in
and
leave
repnz
mov
jns
sarb
loopne
ja
leave
movsb
in
or
test
or
sbb
popf
pop
xlat
cmp
addr16
mov
mov
repz
andb
fwait
lcall
and
push
fs
rcrb
inc
push
pop
and
orb
notl
push
cmpsb
sbb
mov
rolb
leave
movsl
pop
outsb
loope
repz
stos
adc
inc
leave
mov
es
push
adc
dec
jle
and
jmp
xchg
test
mov
mov
jp
mov
shr
sbb
push
cvtdq2ps
xlat
ret
xor
lret
jg
cli
and
pop
out
jge
or
movntq
mov
jp
insb
and
sub
mov
or
xchg
sub
aad
inc
push
sbb
and
fsubp
mov
js
in
cmpsb
sahf
sub
lcall
cli
inc
push
inc
mov
inc
popa
pushf
arpl
mov
sub
sbb
orl
pop
and
push
add
inc
stc
adc
jb
test
ret
sbb
adc
mov
or
adc
push
ret
cmpsb
xchg
stos
pop
mov
mov
imul
add
insl
sub
lock
shl
ret
xchg
ret
mov
fcoml
lods
xor
imul
in
lahf
and
xor
mov
lret
sbb
xor
mov
icebp
jp
fisttps
mov
mov
mov
out
scas
inc
xchg
sbb
in
test
lea
inc
xlat
cmc
out
adc
lea
ja
out
mov
fwait
lcall
and
mov
in
shll
jno
cmc
jecxz
lahf
int3
adc
sbb
pusha
xlat
leave
outsb
push
jb
ljmp
lds
push
push
in
xor
jge
pop
pop
insl
sahf
dec
out
mov
xor
push
cltd
push
cld
inc
jns
popf
jmp
jmp
mov
and
das
pop
stos
pusha
jl
je
sarb
pop
outsb
fdivrs
imulb
push
in
xchg
add
mov
jae
pop
push
add
or
sub
out
rorl
scas
xor
xor
cmp
mov
fwait
jno
insl
mov
popf
stc
xchg
in
mov
add
test
lahf
and
jecxz
enter
daa
inc
fsubl
cli
fisttpl
in
mov
shll
imul
js
bound
cmp
xchg
mov
bound
inc
xchg
cmp
jmp
push
int3
ljmp
add
out
fdivs
sbb
mov
jmp
inc
inc
popa
into
bound
rorb
popa
xchg
cld
adc
sub
mov
adc
loop
jmp
pop
add
xchg
jmp
cmp
aas
cltd
adcb
push
cmp
xor
fdivrl
out
jne
mov
lret
xor
inc
shrl
pop
push
outsl
cmp
pop
leave
push
mov
lea
xchg
dec
in
movsb
in
cs
cwtl
fadds
or
jns
push
jno
pop
cmc
mov
and
imul
les
cld
je
cs
xchg
mov
push
cli
xchg
inc
mov
dec
orl
mov
cld
sahf
lahf
cmp
mov
add
outsb
data16
xchg
sub
mov
mov
push
mov
mov
mov
insb
inc
push
aad
in
jne
xor
pushf
scas
lods
mov
xchg
into
jbe
arpl
jns
xor
fcmovne
mov
xchg
fildl
mov
out
rcrb
fmuls
in
call
stos
rorb
bound
mov
test
push
arpl
xor
mov
lods
xchg
jnp
popa
pop
lds
add
mov
jne
and
mov
push
shrb
add
std
ret
and
jbe
push
gs
adc
lcall
jbe
dec
ljmp
lds
outsl
mov
xchg
out
gs
lret
mov
fsubrp
xchg
clc
das
shrl
fnstcw
ret
lock
jmp
fsubr
jmp
scas
xor
lcall
fbld
iret
mov
jne
test
xchg
js
dec
dec
push
fsubrl
sbb
pop
sbb
loopne
rorl
fidivs
add
pop
lock
out
subl
mov
je
fsubp
icebp
cmp
push
add
mov
pop
movsl
jl
dec
cmp
test
jae
pop
mov
dec
addb
jp
lahf
push
inc
xor
jecxz
sbb
lock
xor
pop
add
inc
xchg
jp
mov
add
nop
sbb
adc
int3
dec
imul
imul
jne
inc
push
data16
xchg
mov
fstpl
xor
cmp
icebp
insl
test
das
mov
adc
int3
loop
dec
adc
ss
jno
loopne
lahf
popf
xor
dec
addr16
icebp
mov
cmove
xchg
pop
dec
leave
adc
sarb
xchg
mov
adc
leave
push
cmp
std
stos
push
mov
push
mov
jle
xchg
sub
or
pop
scas
ret
cs
push
pop
mov
ja
push
mov
cmpsb
inc
iret
xorb
sub
dec
andl
cwtl
popa
int3
int3
arpl
cmp
pusha
sbb
ljmp
int3
leave
cmp
imul
cli
push
xchg
mov
sbb
ds
int
add
mov
xchg
cmp
adc
popl
sahf
inc
push
push
mov
aaa
vprotb
cmpb
fs
dec
in
jno
pop
xchg
cwtl
jb
and
loopne
ret
xchg
adc
out
dec
pop
mov
adc
ja
sbb
inc
test
or
clc
push
movsl
inc
ja
mov
sub
sbb
pop
popf
stos
pop
pop
ljmp
pop
xorl
or
inc
outsl
lret
jae
leave
pop
and
push
push
xor
arpl
mov
pop
data16
dec
push
cmpsb
sub
outsl
mov
and
int
dec
out
mov
insb
xor
stos
popf
inc
add
iret
xlat
scas
sub
leave
jle
lret
push
dec
bound
mov
adc
pusha
cltd
inc
jbe
inc
out
lock
push
jmp
xor
add
lahf
lock
and
shlb
insb
sbb
ja
shr
fs
stos
xor
mov
lahf
es
push
cltd
test
adc
pop
popa
inc
lret
sbb
aas
ret
mov
pop
inc
and
adc
cwtl
push
idivb
and
ljmp
stc
ret
outsb
in
pop
cmp
mov
push
jmp
mov
jo
sbb
xor
in
lcall
scas
fucomp
fidivrs
leave
jb
xchg
test
xor
test
cli
xchg
sahf
sarl
loope
out
pop
setp
cmp
push
int3
in
ret
out
cltd
aaa
sbb
pop
inc
loopne
fsubrs
scas
sub
pop
dec
mov
mov
jmp
jle
cmp
fdiv
mov
mov
xor
pop
test
leave
xchg
negl
mov
cmp
cmp
and
clc
push
ds
adc
mov
clc
daa
icebp
inc
fildll
jg
mov
out
inc
mov
xchg
sti
aaa
or
jnp
subb
popf
mov
sahf
xor
addr16
pop
aad
mov
ret
ss
jne
jmp
and
loope
add
insl
ds
inc
push
lcall
pop
cmp
and
pop
push
je
hlt
in
mov
cmp
mov
inc
sub
insl
lcall
sub
or
ret
xor
mov
shrb
jg
xchg
cmpsb
jl
je
push
jns
dec
out
sbbl
adc
mov
xchg
push
popa
mov
sbb
xor
pop
sbb
dec
jb
xor
xor
rolb
inc
dec
add
imul
and
addr16
push
xchg
push
add
movsl
sti
jns
das
rorb
adc
and
loope
mov
mov
out
jnp
icebp
orb
pop
pop
stos
nop
call
mov
and
jno
loop
mov
inc
ret
and
scas
adc
push
sbb
xchg
addr16
mov
mov
in
std
rclb
imul
push
jne
xchg
add
sub
jmp
pop
in
mov
mov
adc
repnz
or
add
push
in
and
ret
xchg
je
mov
add
or
icebp
sbb
xor
enter
mov
adc
mov
sbb
cmp
push
shl
shl
adc
lcall
shl
and
lret
aaa
dec
insl
rcll
mov
lds
dec
je
fs
aam
add
adc
and
and
mov
xchg
cld
lcall
cwtl
jnp
pop
sub
lock
lahf
stos
inc
cs
es
sub
arpl
cmp
test
or
inc
mov
shrl
jae
pop
dec
lret
out
pop
int
pop
dec
movsl
addr16
xor
enter
int
mov
lret
mov
mov
loop
stc
pushf
jo
xchg
daa
mov
fs
outsb
cmpsb
add
jg
jp
enter
mov
ljmp
rcrl
fiadds
mov
sahf
imul
xor
insl
or
adc
scas
or
cmp
es
rcrb
lds
mov
frstor
mov
rcrl
push
xchg
xchg
in
sahf
outsl
inc
mov
mov
jle
out
in
bound
dec
pop
pop
icebp
add
pushf
scas
xor
xor
push
andb
add
aad
mov
mov
outsl
and
mov
scas
fstl
scas
push
pushl
sbb
aad
mov
jb
in
enter
push
jmp
fsubr
or
sbbb
adc
outsb
xchg
cmp
or
leave
int
sub
rol
aas
push
jno
outsl
ficoms
test
sub
pop
jnp
in
add
imul
aad
mov
imul
cmp
sahf
mov
pusha
subl
cld
scas
lret
or
cwtl
shrl
iret
push
jnp
imul
pop
in
pushl
xlat
jbe
cmpsl
pop
dec
mov
adc
pop
es
add
mov
pop
mov
xor
sub
push
dec
adc
stos
add
xor
jg
dec
mov
imul
imul
out
outsl
mov
mov
jl
lahf
pusha
push
in
mov
je
std
stc
int
adc
sub
mov
mov
popa
ficoml
xor
xor
out
sahf
inc
ficomps
push
cmp
inc
jp
inc
push
sahf
jno
push
cmpsl
adc
mov
mov
negb
popa
test
and
xchg
pop
mov
jne
cli
mov
lret
aam
insl
and
xchg
sbb
pop
sbb
cmp
mov
lcall
mov
jnp
and
push
sahf
lea
cli
dec
cmp
rclb
mov
pop
dec
sbb
call
and
andb
push
call
pop
cmp
xor
out
iret
and
rorb
arpl
ljmp
mull
dec
mov
sub
pop
add
cmp
mov
test
iret
ss
imul
push
es
fcoml
cli
fsubrp
sbb
shrb
ss
popa
sti
cmc
push
hlt
in
and
out
add
push
mov
cmp
and
loope,pn
add
xor
call
outsl
lcall
sti
sbb
imul
sarb
les
add
mov
mov
xchg
mov
adc
push
add
int3
cmp
into
lcall
pop
cmpsl
sub
mov
push
stc
adc
mov
inc
and
mov
es
rcrl
inc
xchg
imul
xor
fsts
fidivs
or
mov
xchg
mov
xor
cmp
sbb
sub
loopne
sub
lahf
ss
push
push
push
push
addr16
out
sbb
enter
es
nop
push
xor
arpl
in
je
or
mov
inc
pop
adc
cltd
add
dec
dec
and
xor
push
stos
inc
fcomp
mov
mov
and
out
psubd
les
ret
sbb
ljmp
hlt
jae
movsb
mov
lahf
mov
outsb
scas
mov
in
jg,pt
addr16
push
mov
shll
scas
inc
adc
orb
sub
dec
push
inc
jno
dec
pop
pop
sbb
enter
out
mov
push
ljmp
jno
call
fcomps
push
pop
mov
sub
std
in
inc
in
scas
push
mov
fdivr
stos
add
scas
sub
xor
mov
std
jge
mov
in
sahf
aas
add
rclb
nop
aam
ret
idivb
dec
stc
call
sbb
int
jo
adc
sahf
cmpsb
xor
in
jp
xchg
mov
cmp
int3
lds
xor
mov
out
mov
mov
add
mov
jae
insl
daa
sbbb
mov
into
inc
out
dec
mov
jle
xchg
rcll
testb
test
push
or
dec
and
sub
sbb
inc
inc
and
vpaddusb
stos
mov
mov
adc
sti
mov
aaa
push
cmp
leave
jbe
mov
mov
dec
xchg
sub
aas
add
enter
ret
xchg
push
jno
mov
adc
cmpsb
add
movsl
test
mov
pop
push
icebp
dec
mov
pop
cmpb
nop
sub
lds
adc
lods
mov
scas
ret
cmp
and
sub
lea
or
pop
mov
push
mov
fidivl
sti
xchg
pop
daa
mov
imul
sti
xchg
mov
mov
mov
jmp
smsw
shrl
ja
out
xor
adc
ljmp
lret
xlat
sub
out
adc
jae
inc
xchg
les
sbb
movsl
push
pushf
lea
call
jo
lahf
pusha
rcrb
inc
mov
lret
inc
xchg
sbb
xchg
or
rcll
cmp
pusha
cmc
or
jb
sub
into
jno
xchg
inc
mov
pop
jae
xorb
ja
lcall
mov
mov
or
andb
scas
fsubl
pop
adc
test
push
sbb
loopne
xor
xchg
jbe
in
stos
inc
xchg
mov
cmpsb
mov
arpl
ret
mov
push
movsb
push
mov
and
push
test
scas
stos
in
addl
out
lds
push
mov
loope
mov
cmpsb
push
movsl
lds
pop
jg
dec
dec
pop
mov
sbb
adc
or
cwtl
mov
movsb
mov
mov
xchg
stos
inc
xchg
jl
shrl
mov
inc
adc
mov
push
lahf
addl
xor
aaa
into
outsb
pop
mov
sti
in
sbb
push
fnsave
ja
movsb
xchg
xchg
cmp
ficomps
or
loope
imul
pushf
xor
aaa
into
out
or
loop
push
inc
roll
shrl
push
popf
or
mov
shll
jne
dec
pop
mov
and
lods
xchg
pop
cmc
sbbl
fs
popa
sbb
insb
dec
xor
sub
gs
mov
js
mull
mov
dec
mov
andb
adc
fisubrs
lea
mov
loop
pusha
add
lret
xchg
xor
mov
ss
xor
aad
or
loope
mov
je
sub
rorl
icebp
jns
add
fnstenv
mov
jmp
fcomps
push
sub
sbb
sub
lods
int
mov
inc
fs
fsubrp
mov
fs
data16
push
mov
lods
push
and
bound
ljmp
test
pop
xlat
shll
mov
outsl
push
mov
add
push
dec
dec
inc
pop
and
shrb
pop
or
or
in
xchg
sti
pop
mov
xchg
xor
cmpsb
jecxz
sub
mov
xor
jb
ds
pop
dec
sbb
sub
jge
jle
inc
pop
scas
call
jecxz
mov
mov
xchg
add
dec
inc
mov
and
pop
adc
shrl
loopne
dec
adc
dec
mov
aad
mov
js
into
lcall
stc
lea
movsl
fwait
daa
pop
aad
pop
lock
pop
or
xorb
icebp
inc
pop
fsubrs
pop
pop
testb
mov
jns
and
push
js
add
mov
push
and
in
nop
mov
call
mov
outsl
push
sub
xor
pop
ret
sbb
fldcw
mov
int
iret
pop
inc
fucomp
outsl
push
sub
pop
pop
jmp
imul
test
imul
ss
cmp
fbld
pushf
int3
fidivs
sbb
push
into
jno
ficomps
lret
sbb
into
aaa
stos
data16
in
decl
leave
loopne
pop
mov
cld
pop
or
mov
dec
pop
repnz
ret
sbb
insl
icebp
pop
fcoml
jbe
jb
jecxz
sahf
cltd
aad
adc
and
rolb
mov
or
call
jmp
hlt
fwait
push
repz
das
sahf
or
push
cltd
clc
pop
insb
mov
or
and
fistl
and
or
sarl
lods
lcall
and
fs
sbb
or
iret
loop
mov
mov
pop
jnp
ret
adc
mov
ficoml
xchg
clc
ja
movsbl
dec
test
adc
jae
icebp
xor
mov
decb
daa
mov
popf
and
in
movsl
shrb
pop
loope
dec
adc
aas
shrl
nop
std
mov
dec
loopne
fisttps
sbb
mov
aad
jae
fisubs
mov
jl
add
jbe
enter
in
inc
into
dec
cld
xor
and
in
inc
sahf
mov
push
ss
pop
fsts
mov
dec
mov
xchg
mov
out
ret
loope
cs
push
dec
and
mov
lcall
in
arpl
jnp
fs
out
scas
xor
adc
add
call
or
scas
movsl
mov
cmp
out
jbe
out
xchg
loope
push
mov
arpl
loope
les
arpl
cmpltps
mov
sti
add
or
sub
mov
push
cmp
mov
fsubl
mov
jb
pause
mov
lcall
subb
mov
pusha
dec
mov
cmpsl
cmp
xchg
mov
dec
loope
jb
sub
mov
stos
pop
cmpsl
divb
sub
mov
fmuls
fwait
mov
inc
and
and
lea
repz
adc
jbe
jns
and
or
mov
cmpl
jl
nop
or
pop
cmc
in
cmp
dec
nop
cmp
adc
fadd
sub
mov
push
add
notb
mov
dec
pop
out
sbbl
mov
icebp
loope
xor
dec
inc
clc
sahf
cmp
xchg
push
dec
mov
lds
sbb
jb
andl
test
inc
pop
dec
hlt
pop
jno
mov
loop
cmpsb
aam
lret
loop
adc
fsubl
sub
movsb
hlt
xchg
push
jae
sub
sub
or
pusha
mov
xchg
push
into
std
xor
inc
les
cmpsl
dec
dec
mov
inc
arpl
lahf
pop
sbb
cltd
insl
sub
adc
les
mov
or
cmpsl
mov
repz
dec
or
jnp
dec
mov
mov
enter
or
cwtl
cmc
call
cmc
jns
cmpsl
mov
lods
shl
shrl
sbb
lds
pop
aam
das
cmp
push
mov
xlat
je
jns
dec
rol
ja
xchg
imul
sub
repz
push
lods
loopne
imul
sti
inc
cmp
not
mov
mov
sahf
lods
in
xlat
xchg
xor
jne
jns
push
sbb
jle
out
mov
rorb
jle
pop
add
mov
loop
movsb
mov
adc
and
fcomps
outsl
push
insl
add
mov
mov
jmp
xor
pop
pusha
out
imul
sub
insb
or
sbb
inc
mov
test
jle
mov
ficomps
cwtl
cmpsl
incb
test
cs
rol
push
jg
or
lock
in
nop
push
sub
jb
outsb
xchg
insb
jg
insl
bnd
pop
subl
inc
js
dec
mov
ja
sbb
cmp
bnd
pop
repnz
das
int3
mov
lods
mov
sbb
test
mov
jp
leave
fiadds
adc
ljmp
adc
xchg
pusha
inc
divl
test
fisubl
fimull
sbb
nop
das
mov
lods
push
aas
rcll
pusha
popf
rcll
and
jb
aas
nop
outsl
and
mov
sti
sub
add
jl
add
and
stos
sub
stos
int3
xchg
and
adc
sbb
stc
inc
push
les
fistpl
cs
cwtl
out
push
ret
sbb
mov
adcl
into
gs
xchg
mov
outsb
arpl
jns
mov
test
lret
hlt
int3
stos
insl
cmp
fdivl
mov
cli
or
push
aad
lds
ljmp
lret
popa
jl
add
inc
fisubl
outsl
cmp
pop
mov
mov
ja
lock
in
pop
popf
inc
inc
cmp
stc
or
xchg
cmp
sbb
outsl
push
sub
xor
or
out
sti
jmp
mov
cmpsb
pop
pop
push
insl
add
mov
mov
icebp
filds
in
shl
mov
dec
inc
pop
into
ret
dec
mov
aaa
movsl
lds
pop
scas
jno
sbb
adc
xor
mov
inc
push
mov
loop
mov
xor
out
add
lcall
mov
lods
mov
out
jg
mov
or
dec
mov
out
dec
push
stc
xchg
jmp
push
xor
das
cmp
iret
add
push
adc
lret
into
jp
dec
xchg
sub
lods
aaa
or
pop
loopne
mov
imul
jne
dec
arpl
jp
pop
in
addr16
clc
loop
mov
addr16
aas
pushf
cmp
sbb
in
push
add
in
mov
dec
mov
sahf
call
or
mov
shlb
inc
pushf
test
add
mov
aad
xor
sub
sbb
movsb
mov
jne
iret
or
jge
es
stos
les
mov
push
cmp
ret
dec
outsl
mov
pop
xor
cmp
xor
mov
mov
sbb
sti
gs
xchg
pop
cmovbe
xchg
repz
idivl
pop
ds
mov
es
xor
jbe
arpl
dec
leave
js
lods
jne
test
scas
xchg
out
in
or
inc
movsl
in
loope
lock
xor
mov
lods
xor
and
ja
movsb
cs
xor
or
cmp
loope
cwtl
cmp
sbb
mov
movsl
adc
dec
cmc
mov
aad
cltd
push
das
cmp
pslld
pushf
dec
stos
in
in
mov
xchg
hlt
cmp
and
jecxz
sub
lds
movsl
nop
dec
lar
pusha
add
push
fildl
cmpsl
push
sub
lea
in
test
stc
shr
xor
or
pop
mov
mov
stos
in
cmpsl
inc
pop
dec
fsubs
jnp
pop
jp
adc
scas
inc
insb
push
xorl
sbb
push
or
nop
push
push
out
jp
fwait
mov
out
enter
mov
pop
and
jbe
test
inc
ss
sub
adc
dec
xor
clc
push
out
xor
mov
push
sub
call
cmp
in
push
and
inc
orl
scas
in
das
iret
mov
xchg
pop
andl
subl
cli
jns
or
push
fsubp
leave
cmpsb
fwait
inc
xor
push
xor
lret
mov
sbb
fstpl
mov
ficoms
fstpl
push
jge
dec
fs
inc
pop
fbld
cmp
imul
int3
add
lret
outsl
loopne
shll
mov
dec
xor
hlt
cmp
and
fidivl
scas
fwait
call
aas
pushf
push
jp
xor
lds
js
sbb
mov
add
xchg
gs
push
push
dec
fxch
push
shl
fidivl
repnz
or
mov
fisubrs
jo
fisubl
sbb
stc
pushf
inc
fcomps
sbb
mov
add
and
lds
or
pop
adc
aas
xchg
jl
clc
sbb
push
int
cld
cwtl
xchg
lcall
pop
mov
lods
in
inc
fsubl
xchg
adc
mov
pop
xor
sub
xchg
notl
xor
xor
daa
mov
xchg
inc
aas
inc
int3
icebp
leave
mov
lds
bound
mov
leave
rol
mov
mov
fildll
je
cmp
sub
cmpsb
pop
sbb
jnp
mov
cmp
in
mov
xor
lret
test
iret
mov
es
jnp
ljmp
insl
sbb
inc
imul
les
mov
jmp
jle
pop
xor
mov
inc
xor
mov
xchg
push
arpl
lods
jo
push
xchg
cli
pop
or
cmpsl
stos
test
ljmp
mov
mov
mov
adc
mov
mov
add
xor
sti
jno
dec
std
sbb
jno
idivl
inc
jp
xor
loopne
add
sbb
dec
inc
mov
aas
popa
cltd
adc
in
jns
lock
movsl
sbb
pop
mov
jg
fld
popf
mov
dec
pop
cmovo
mov
loop
ljmp
inc
rcrb
push
cli
jecxz
insl
rclb
mov
push
sbb
in
add
stos
xchg
les
mov
mov
hlt
sub
pop
push
icebp
gs
cld
and
fdivrp
cli
sub
xchg
dec
xor
cmp
adc
inc
lret
xor
or
add
int3
lea
cmpsb
scas
pushf
dec
adc
mov
int
dec
es
jns
sub
mov
test
mov
ret
pop
sarl
add
cmp
jne
inc
xor
jmp
imul
push
mov
mov
mov
sarb
adc
or
loopne
jns
addr16
jne
or
sub
in
rol
cwtl
icebp
add
fs
daa
or
lret
stc
or
push
and
push
jmp
mov
sbb
ja
lea
push
in
daa
mov
jae
push
cmp
pusha
addb
test
inc
xchg
sarb
jl
xchg
mov
jno
adc
outsl
mov
mov
imull
pop
stos
ret
xchg
xchg
add
xor
nop
jecxz
cwtl
int3
dec
add
out
or
cmpl
xchg
leave
ss
pop
shll
cmp
addr16
fwait
mov
inc
xchg
add
imul
push
outsl
daa
xchg
lea
test
ret
push
jmp
mov
ss
ljmp
fidivrl
push
ljmp
insl
inc
mov
filds
mov
mov
lea
mov
fwait
test
loop
jmp
sub
mov
and
jne
aam
adc
ret
mov
popa
xchg
add
gs
and
mov
int
pusha
lock
sbb
mov
push
mov
xchg
xor
pusha
cmp
vpunpcklqdq
or
add
lahf
xor
into
addl
and
das
add
mov
shrl
inc
test
and
shll
fs
gs
mov
es
inc
push
inc
push
sahf
fwait
dec
xor
imul
xor
cmp
pushf
imul
mov
add
xchg
loop
scas
cmp
addr16
in
xchg
xor
fdivrs
jno
xchg
mov
cli
fcmovnbe
pop
cmpsb
or
mov
bound
movsb
movsb
add
insl
adc
sbb
test
pextrw
and
lods
jne
jge
mov
mov
dec
push
lods
inc
xor
cltd
add
jp
mov
or
repz
ljmp
dec
cmpsl
out
mov
xchg
clc
or
or
jl
popf
js
xchg
addl
sub
adc
sbb
jo
and
inc
cmp
scas
fisttps
xor
mov
incl
push
decl
loopne
xchg
aam
push
mov
cmp
add
dec
lods
icebp
add
xchg
push
cmp
test
mov
das
dec
mov
aaa
jns
push
xor
mov
dec
imul
inc
sbb
inc
sbb
sub
lret
dec
int
hlt
lret
clc
sarb
fsubs
into
loop,pt
pop
xor
jle
orl
push
mov
mov
adc
cmp
mov
or
push
ds
mov
cs
dec
mov
pop
mov
shrb
in
enter
ja
push
mov
shr
es
jmp
pop
aaa
pop
and
cmp
les
cmc
and
int
ret
insb
scas
insl
xor
xchg
dec
adc
or
xchg
and
shl
nop
mov
xlat
mov
gs
push
xchg
push
push
inc
inc
in
dec
rclb
test
push
and
scas
stos
mov
dec
mov
fsubs
movsb
cmp
sbbl
inc
fldl
jnp
push
and
jmp
add
and
test
inc
data16
repz
cmp
jae
out
imul
fnstsw
sub
stos
xchg
or
lcall
sbb
cmpsl
mov
call
bound
leave
rorb
into
inc
mov
cmp
jns
fs
xchg
xor
xor
dec
and
and
fcoms
mov
psubw
xor
movsb
pop
xchg
fidivs
mov
out
jno
mov
xchg
enter
mov
fdivl
xlat
jge
jmp
out
subb
or
pop
fisubrs
inc
push
icebp
cmp
adc
loope
mov
xchg
hlt
icebp
pop
dec
cmp
push
outsb
jo
sti
mov
push
popf
js
gs
or
idivl
sbb
mov
loope
add
lahf
push
mov
out
popa
mov
dec
add
inc
jecxz
cs
push
rcr
jno
or
test
addl
in
les
sahf
sbb
push
jne
movsb
icebp
imul
adc
clc
cmp
push
lahf
fisubrs
ret
xor
ljmp
jns
mov
call
and
in
test
daa
mov
imul
add
arpl
pop
cltd
xchg
dec
pop
sbb
or
pop
push
sub
addr16
cltd
cmp
jns
repnz
jmp
pushf
mov
push
xor
inc
add
adc
dec
add
sub
inc
inc
je
sahf
xor
stos
push
test
imul
jp
and
xchg
setne
or
loop
mov
sub
or
lods
lcall
movsl
ljmp
rolb
add
out
add
mov
sbb
in
pop
xchg
mov
fcomi
mov
xor
push
leave
nop
lock
xchg
adc
or
and
xchg
jns
mov
bound
mov
gs
lret
in
inc
out
pop
sahf
cmp
xchg
inc
aam
pop
adc
fwait
xchg
fmuls
inc
jae
and
pop
das
xchg
xchg
sbb
outsb
add
push
mov
push
out
in
and
xchg
sub
test
pop
and
imul
dec
adc
lds
jns
mov
cmp
clc
popf
mov
loopne
mov
pop
mov
add
dec
dec
dec
dec
mov
pminub
jae
jns
sub
fsubrs
test
loop
mov
loope
icebp
cmp
add
pusha
rorl
test
push
sbb
xchg
aam
roll
and
mov
data16
lret
bound
jmp
out
push
mov
rcll
mull
mov
cmp
mov
cwtl
mov
enter
sub
dec
push
add
push
js
rclb
aaa
cmp
inc
inc
fldl
inc
fnstsw
in
test
insl
fildl
out
mov
sbb
add
jl
ret
or
or
mov
in
inc
mov
mov
out
xchg
xchg
add
leave
sbb
mov
cmp
push
inc
out
sti
stos
pop
sub
mov
cmp
push
jmp
sbb
and
out
decb
aas
xchg
mov
popf
push
and
mov
mov
iret
or
push
push
lods
pushf
lods
mov
mov
shlb
fcmovnu
jbe
mov
stos
in
lret
push
pop
lods
lret
cmp
lea
lret
ret
push
test
xor
int3
xchg
inc
sbb
mov
add
ja
xor
inc
add
push
loopne
or
cmpsb
imul
mov
sbb
in
add
xor
leave
out
inc
sbb
scas
push
inc
or
lcall
stc
xchg
dec
lcall
dec
push
cmp
fdivrl
push
mov
mov
inc
pop
popf
adc
mov
or
sarl
push
fdivrl
add
or
jp
nop
mov
je
xor
pop
mov
or
pop
cli
loopne
cs
cld
fs
pop
inc
aaa
das
pop
cmp
clc
leave
xor
ds
in
shr
lds
cs
stos
jne
xorb
lods
jmp
nop
jg
in
call
hlt
stos
int
lcall
rorb
dec
sti
and
cmpsl
roll
mov
xchg
popa
nop
pusha
and
mov
cmpb
test
std
jno
mov
test
movsb
mov
bound
sbb
std
mov
mov
xchg
mov
cmp
insb
sub
out
data16
popa
daa
and
cwtl
in
cmc
push
loopne
out
dec
or
xor
sub
sbb
jl
mov
cmp
call
jecxz,pn
fcmovbe
insb
sub
push
shll
les
mov
into
cmp
repz
xchg
sub
push
mov
push
out
popf
std
sbb
repnz
mov
jne
int3
mov
and
jecxz
or
inc
or
popa
hlt
cmp
imul
sub
leave
fsubrs
inc
fdivl
pushf
lock
andb
cmp
fmull
cs
add
ret
ret
fdivrl
mov
jno
jns
xchg
jno
andl
jge
xorl
mov
or
jns
dec
sti
xchg
dec
data16
mov
shll
sbb
jp
and
incb
dec
add
aas
je
and
rcll
lock
es
fcompl
dec
mov
xchg
cmpsl
xchg
xor
out
add
dec
mov
or
adc
mov
jnp
cmp
or
jb
cmc
insl
jae
ss
cmp
testl
and
fisubrl
push
mov
scas
fs
test
xor
out
adc
inc
sahf
xor
mov
push
push
fs
int3
xchg
jae
decl
ljmp
dec
out
aaa
dec
mov
shrb
add
mov
mov
fnsave
aad
add
mov
xchg
and
xor
mov
or
clc
xor
outsl
pop
sub
hlt
fucomi
or
and
or
fisubl
movsl
insb
inc
add
cli
adc
pop
mov
data16
add
mov
cmp
pop
sbb
out
xor
movsl
cld
in
mov
cmpsb
fisubl
cs
mov
sbb
mov
out
cmp
lahf
insl
mov
lods
xchg
cmp
and
and
in
hlt
pop
lock
pop
xor
ds
dec
aam
or
jnp
mov
ljmp
test
adc
movsb
inc
push
inc
pop
insl
fwait
add
sbb
outsb
test
sbb
push
pop
imul
lds
xchg
in
mov
pop
pop
int
ret
out
out
fwait
mov
or
cmpsl
hlt
mov
xchg
in
mov
les
loope
mov
icebp
mov
dec
push
lahf
cmp
inc
jne
ljmp
cltd
lds
fsubl
decl
subb
out
movsl
inc
xchg
adc
dec
lret
loope
or
mov
out
rcll
xchg
hlt
mov
xlat
jnp
mov
inc
inc
out
test
cmp
sub
repz
jb
cmpsb
scas
sbbl
mov
cmp
mov
cld
mov
cltd
ljmp
sub
fdiv
xor
adc
mov
lock
cwtl
ja
pop
fisubrs
add
out
adc
popf
cmp
jno
xchg
sub
add
test
adc
mov
push
jbe
adc
rolb
lods
ds
out
in
push
in
dec
icebp
and
sbb
sub
repnz
fwait
sub
and
jo
jno
and
int3
fists
in
dec
mov
aad
sbb
in
lds
daa
pop
ljmp
dec
into
iret
cmpb
aas
cmp
pop
xchg
imul
xchg
pop
sbb
jne
movsl
xchg
pop
add
ja
adc
xchg
leave
jg
xchg
jno
mov
call
cs
mov
andl
call
cmp
push
inc
xor
dec
push
sbb
lea
mov
adc
mov
out
jbe
jmp
xor
lahf
cmp
fists
push
xor
mov
fidivrl
pop
es
pushf
gs
lods
pop
repz
ficomps
pop
pushl
std
pop
mov
ret
sub
lods
pop
sub
inc
aas
rorb
loopne
loop
dec
sub
xor
fdivrp
cs
pusha
ficoml
cli
xor
inc
cmp
inc
lcall
movsl
ss
jecxz
mov
daa
jl
and
int3
pop
imul
push
inc
daa
adc
inc
adcl
lods
mov
pushf
push
push
pop
icebp
repnz
jmp
mov
rol
adc
cmpsl
cmp
sbb
faddl
xchg
fdivrp
call
je
dec
jae
and
es
inc
xchg
sub
jmp
inc
push
in
add
xchg
into
lds
in
aam
sbbl
ljmp
pushf
inc
inc
mov
lock
dec
rcl
imul
jp
mov
cmp
inc
xlat
push
pop
repnz
xchg
pusha
sub
cmp
data16
mov
jecxz
aam
xor
sbbb
mov
xchg
sbb
or
gs
pop
sub
fldt
dec
ret
push
out
pop
sahf
cwtl
jbe
jmp
and
dec
pop
cmpsb
sbb
or
add
mov
mov
mov
sbb
cli
call
popa
ret
cmp
nop
pop
mov
xchg
cmp
lods
arpl
mov
mov
mov
popa
xor
leave
out
sti
out
mov
ss
rcr
mov
push
repnz
sub
inc
pop
cmc
xchg
test
jl
fdivl
call
dec
mov
pop
sti
fwait
lret
xor
clc
sahf
ljmp
adc
jb
cmpsl
sbb
sbb
or
push
gs
in
xchg
test
scas
add
pushf
mov
adc
sbb
gs
mov
jmp
loope
repz
shr
jl
test
lahf
cwtl
cwtl
test
std
or
aas
pop
xchg
jbe
popa
jb
push
jns
popa
imul
lret
imul
or
int3
scas
dec
nop
push
insb
jp
pop
or
push
jl
push
cwtl
fstpt
aaa
mov
and
ja
mov
adc
and
add
xorl
in
jnp
fcomi
mov
dec
scas
xor
ja
in
cmp
rcrb
es
xchg
insb
lods
int
jp
xchg
jg
adc
jb
insl
sub
test
cmp
push
xor
ja
movsl
iret
js
cld
repnz
pop
pop
xchg
add
and
jae
popf
or
mov
xchg
jecxz
daa
mov
mov
or
nop
xchg
popf
stc
nop
xor
leave
jno
add
iret
shlb
adc
repz
xor
loop
ret
out
mov
bnd
lods
jmp
mov
pop
sbb
mov
add
incl
sbb
mov
xor
push
jmp
cmp
jo
mov
mov
pushf
and
mov
xlat
lcall
aam
loopne
sub
adc
sub
int3
pop
cmp
insb
sub
jp
pop
notb
fsubrl
les
xorb
xor
adcl
popa
sbb
int
push
fcomps
cmp
cmp
push
sub
or
xchg
fldl
push
and
adc
scas
call
test
scas
sbb
call
inc
pop
sbb
dec
in
xor
pop
call
cmp
bound
mov
jno
ja
and
push
inc
pop
int
or
inc
push
outsb
leave
push
cld
cmp
xor
pop
ret
xchg
shl
sbb
dec
popf
pop
dec
cmp
sbb
inc
mov
pop
lret
mov
push
sbb
fiaddl
outsl
dec
ret
loopne
xor
adc
mov
jmp
xor
pop
push
orb
add
dec
or
mov
testl
cltd
jo
out
pop
add
imull
psubq
rcpps
dec
sub
sbb
imul
jl
add
scas
mov
fdivrs
ret
xlat
leave
das
push
adc
ja
add
aad
cmp
or
and
mov
jecxz
cmp
imulb
iret
mov
flds
cs
pushf
repz
add
iret
popa
dec
mov
lods
mov
ret
xor
or
std
aaa
cmpsb
adc
xor
mov
cmp
push
inc
cmpsb
lea
xchg
iret
mov
sbb
xchg
and
cltd
js
pop
test
push
adcb
cmp
stos
mov
xchg
out
je
inc
or
fwait
mov
imul
cld
cmpl
add
out
insb
add
cli
mov
pop
sub
and
add
stc
out
jns
aam
mov
jg
into
sub
loop
decl
jmp
sbbl
sub
jb
mov
scas
push
jge
mov
mov
in
fcmovnbe
popl
test
adc
lock
push
popf
cmp
add
rolb
pushw
adc
aaa
adc
push
ss
gs
mov
leave
das
jecxz
fucom
add
data16
sarl
fldenv
xlat
push
inc
push
fnstsw
cli
pop
inc
xor
mov
cmp
dec
insb
scas
and
enter
test
imul
ljmp
int3
push
xor
and
lahf
add
xchg
lock
iret
sub
cld
or
push
rorl
sbb
xor
push
ljmp
nop
iret
ds
cmp
cmp
negb
adc
cmpsl
and
xchg
pop
adc
nop
lods
outsl
andb
pop
out
dec
mov
pop
clc
sub
push
aad
repz
cld
xor
xchg
xchg
dec
pushf
xchg
push
cli
adcb
mov
imul
test
dec
mov
stos
or
cmp
cmp
mov
or
cmpsb
inc
push
adc
pushf
jbe
notl
test
lret
fisttpll
pop
cmpb
push
push
sbb
or
sti
orl
adc
jl
sub
js
arpl
mov
and
cmp
mov
cmp
int
stc
push
out
mov
jge
pop
out
xor
lea
scas
sahf
pop
xchg
inc
lcall
sbb
into
dec
stc
jnp
mov
xchg
popf
mov
sbb
mov
inc
adc
das
sbbl
inc
dec
sbb
jmp
or
jecxz
fstpl
mov
xor
jmp
mov
xor
cmp
inc
cltd
mov
sbb
push
jp
cmp
rol
push
jg
scas
pop
and
xor
test
cmc
mov
sbb
notb
adc
pusha
ds
inc
add
arpl
in
push
xchg
pop
iret
fildll
lock
dec
rcll
xchg
or
pop
enter
lds
paddd
iret
cmp
in
or
mov
sub
cwtl
inc
outsl
push
sub
jnp
or
call
dec
cmp
sar
and
or
fisttps
sbb
xor
fldcw
fildl
cltd
sub
mov
mov
jge
loope
stos
outsb
sub
mov
pop
pushf
sub
fldl
pop
outsl
lret
jmp
push
clc
jne
sub
sub
dec
cld
outsl
insb
stos
frstor
adc
outsb
inc
mov
cmc
int3
jp
je
popf
cs
fs
repz
lods
push
iret
test
sub
xor
inc
xchg
das
mov
fs
adc
inc
lods
xlat
push
push
jmp
and
mov
sbb
gs
jmp
jns
pop
jne
adc
fmull
js
pop
insl
cli
pop
fisubrs
mov
leave
lods
and
movsl
loop
sub
ds
out
aam
popa
inc
mov
scas
loope
jnp
pop
pop
arpl
out
mov
pop
mov
push
inc
lods
sub
sub
sbb
inc
and
mov
xchg
push
insl
cld
sub
int3
out
dec
test
sbb
xlat
mov
dec
xchg
bound
out
mov
movsl
jbe
pop
rcl
test
popa
jecxz
in
dec
mov
test
jmp
sub
jle
xchg
push
inc
mov
shrb
rorb
xor
clc
or
dec
andb
xor
sbb
sbb
and
cli
mov
outsb
inc
scas
cwtl
mov
std
mov
adc
inc
mov
icebp
shlb
clc
inc
leave
and
sbb
les
pop
fistps
ret
jnp
jmp
stos
insb
scas
sub
xor
xor
mov
mov
popl
xor
jns
mov
mov
push
in
inc
movb
int3
int
or
je
movsb
scas
andl
ss
add
lret
iret
stc
sbb
add
lret
push
enter
fwait
fs
push
push
sbb
scas
aam
fmuls
xchg
out
ds
push
je
into
in
lods
pop
sub
mov
aad
xchg
pop
pop
lods
movb
repnz
xchg
mov
add
cmp
ljmp
movsl
mov
icebp
into
mov
and
mov
jg
movsl
push
test
pop
gs
pop
cld
xchg
push
out
mov
mov
adcb
mov
pop
mov
out
jmp
push
mov
pop
out
lods
sahf
div
mov
add
cs
mov
dec
push
in
lds
imul
lcall
push
aam
stos
xchg
outsb
cmc
fwait
cmpsl
fildl
in
and
aas
cli
xchg
scas
cs
add
fs
cmp
inc
push
movsl
loope
sahf
mov
lahf
cmc
mov
call
xchg
mov
push
xchg
cmp
dec
fwait
cmp
push
xor
inc
pusha
mov
mov
xchg
incl
jmp
leave
shr
mov
sbb
and
jmp
shll
sbb
lret
sbb
iret
push
mov
sub
icebp
adc
or
pusha
adc
push
lock
in
and
cmp
int
aas
mov
insb
cmp
popf
ficoms
push
mov
mov
aaa
jns
enter
in
shlb
fs
or
mov
aas
out
in
out
sbb
fs
xor
push
pop
jge
shrb
push
out
icebp
popf
push
inc
cmc
inc
imul
mov
xor
loopne
and
cs
cmp
ret
mov
xor
mov
jg
push
cs
dec
fldpi
cli
pop
divl
or
or
dec
adc
sbb
cli
or
repnz
movsl
jl
in
sub
jbe
insb
pushl
pop
sbb
repnz
fisttpll
ret
lods
and
cld
fiaddl
cmpsb
jp
and
mov
or
mov
fildll
and
mov
xorb
adc
pop
jno
mov
and
loopne
orl
cmp
loopne
dec
mov
insl
es
xlat
or
mov
clc
jecxz
repnz
into
cmc
pslld
sarl
int
in
add
out
rcl
push
sub
loopne
fnstcw
cmp
push
cmc
push
ret
jae
xchg
mov
sbb
jg
jnp
clc
xchg
bound
andb
std
sub
mov
push
in
inc
fs
inc
and
cmp
xor
xor
pop
mov
cmc
fs
mov
movsl
testl
jnp
cmc
mov
fldenv
jp
shll
loop
xchg
mov
adc
or
cmp
clc
ret
sti
cmp
jle
and
mov
sbb
fistpll
sbb
insb
cmp
out
xchg
popf
sub
sti
inc
sub
mov
mov
push
or
lcall
sbb
out
dec
sahf
repnz
hlt
pop
fwait
dec
fisttpl
mov
push
mov
fdivl
add
std
xor
pop
cmpsb
je
outsl
cmp
aam
idivb
insb
lods
lahf
mov
or
dec
push
mov
dec
mov
sarl
inc
insl
fiadds
bound
inc
pop
pop
in
adcl
xchg
dec
jl
mov
add
mov
pop
dec
sub
jb
sub
mov
das
clc
pop
mov
aam
hlt
jp
xor
in
scas
jmp
adc
insb
pushf
jnp
and
push
adc
cmp
ljmp
jae
cli
adc
daa
add
addr16
gs
in
xchg
jae
jbe
cmp
sub
pop
push
mov
loopne
mov
in
das
or
adc
inc
inc
dec
or
in
sub
sub
mov
in
shll
mov
scas
mov
sub
andb
push
lock
jnp
xchg
sbb
mov
icebp
mov
stos
dec
loopne
sbb
ja
xchg
test
xchg
mov
fdiv
pop
xchg
cli
or
dec
mov
dec
nop
int3
and
testb
or
cltd
bound
fsubr
mov
loope
out
xchg
xor
dec
sti
dec
or
push
mov
dec
adc
sbb
repnz
stos
orb
jl
and
test
adc
cmp
shr
xor
mov
or
in
pop
mov
or
nop
sahf
arpl
mov
mov
sbb
xor
jl
or
add
iret
je
lret
mov
or
shrb
lea
xor
fucomp
lcall
xor
cltd
mov
psrlq
fimull
subl
popa
cmpsb
cmp
and
les
test
ror
jns
jae
data16
les
adc
pop
jmp
dec
in
cmp
addr16
and
dec
movsl
aaa
jp
fs
inc
pop
je
xchg
push
pop
sahf
test
out
cmpsb
and
sar
inc
pandn
data16
subl
inc
enter
fnstsw
retw
flds
mov
xor
or
and
sub
dec
add
adc
mov
rcr
in
jo
int
lea
push
test
ret
hlt
call
jne
xchg
adc
sub
jp
lcall
jle
pushf
pusha
mov
dec
popa
mov
add
sub
lods
fisubs
lock
xor
in
and
fildl
adc
fsubrs
push
adc
and
xchg
loope
inc
mov
call
adc
out
lea
sbb
std
sbb
lock
in
dec
mov
mov
and
rcrb
loopne
aam
shrb
js
jne
xor
mov
daa
jge
pop
aad
in
fimuls
inc
and
cs
std
test
cmp
push
xchg
out
fbstp
int
fmull
pushf
jl
dec
mov
cli
mov
push
rcr
adc
push
dec
inc
fcomps
imull
sub
sub
push
in
fwait
leave
inc
inc
push
out
push
mov
scas
cli
scas
cltd
aaa
andb
hlt
pop
lahf
stc
popf
xchg
lds
dec
in
lock
scas
xchg
incl
xchg
mov
sbb
into
stos
in
fmuls
dec
pop
fwait
mov
scas
call
fildl
mov
push
loope
popf
fwait
into
movsb
lgs
add
xchg
pop
out
dec
lcall
fsubrp
xchg
add
ds
adc
test
pmaxub
sub
icebp
je
mov
push
xlat
rorl
pop
scas
and
in
sahf
cli
mov
inc
mov
nop
jl
jecxz
xor
dec
dec
push
cs
enter
imul
lock
stc
dec
jmp
ret
jbe
aas
stos
inc
lea
das
mov
pop
gs
jbe
mov
lock
mov
ret
shrb
rcl
inc
jb
push
bound
sarl
xchg
sub
xchg
add
iret
int
cmp
mov
xor
inc
and
pusha
shll
into
xor
sbb
mov
test
push
scas
sub
mov
out
xchg
out
mov
dec
mov
xor
mov
or
jge
jmp
mov
xor
cmp
jmp
dec
scas
pusha
ss
pop
or
push
lahf
popf
and
cmpsl
andl
sub
iret
xorb
rolb
cmpsb
in
mov
mov
xchg
lods
xchg
inc
mov
adc
mov
dec
pop
into
rcl
call
sbbb
test
repz
mov
insl
cmp
mov
fucom
and
push
mov
jns
int3
aas
ds
rcl
std
pop
mulb
push
xor
shrb
pop
cld
mov
hlt
mov
mov
sbb
xchg
scas
loopne
cmp
or
std
bound
iret
fsincos
dec
xchg
mov
je
xor
and
shlb
sub
repz
add
fwait
sti
pop
sti
adc
mov
xchg
and
mov
subb
dec
enter
sub
dec
out
cld
xor
and
dec
pop
jo
popa
sbb
or
fsts
adc
mov
jae
ret
jae
mov
sbb
or
sbb
and
or
repnz
push
sub
lret
mov
or
rcr
or
add
lret
mov
inc
imul
jp
dec
and
cmpsl
lods
push
out
cltd
or
xlat
adc
in
push
mov
fisttpll
nop
ficoml
mov
and
or
std
and
insl
inc
dec
inc
shlb
lahf
in
or
addr16
or
mov
lret
bound
mov
punpckhdq
sbbl
shll
push
push
xchg
pop
gs
push
cmp
mov
push
mov
repz
es
cltd
int3
xor
push
dec
push
roll
pop
mov
lret
fists
out
icebp
decb
pushf
mull
stc
nop
jmp
sbbb
imul
shrl
shr
mov
int3
jo
sub
outsb
push
into
data16
jg
call
in
test
loopne
add
xchg
push
lock
mov
pop
adc
fs
stc
je
add
cmp
mov
or
aas
xchg
xor
callw
insb
mov
adc
xlat
cli
pop
imul
sbb
dec
std
lods
out
icebp
loopne
lea
mov
inc
sbbl
nop
add
lds
dec
lahf
or
cmc
xor
sbb
cmc
or
jmp
push
mov
sti
jno
ss
mov
jae
insl
js
sbb
ds
mov
aad
xchg
push
test
jl
div
xchg
mov
mov
mov
into
loop
fld
fisttps
test
push
add
cld
inc
int
inc
scas
pop
push
fiaddl
fidivrl
lods
in
sub
insb
or
jbe
and
jmp
cmp
inc
in
xchg
and
xchg
jo
leave
fsts
data16
mov
jg
ret
jl
and
inc
icebp
sbb
sub
inc
dec
push
dec
dec
out
in
pushf
push
loop
icebp
dec
enter
stos
stc
or
stos
int3
mov
mov
or
movsl
negb
lock
je
add
sti
cs
pop
push
fimuls
cli
adc
sub
les
add
jbe
movsl
bound
and
mov
xor
fcoms
push
test
movsl
loopne
fldl
add
dec
shl
fbld
mov
lds
xchg
mov
sbb
lock
lcall
dec
pop
cmp
xlat
lds
push
sub
jnp
nop
xor
and
push
lock
fidivrl
push
cmpl
pop
adc
lods
jecxz
xor
out
mov
out
cmp
xchg
jmp
or
lret
pop
movsb
mov
stc
outsb
sbb
or
pop
sub
or
scas
pop
push
fwait
std
pushf
test
mov
fs
pop
jecxz
xchg
aas
or
cmp
int
in
mov
mov
xchg
fldt
jg
andb
hlt
jg
js
insb
outsl
icebp
mov
out
add
repnz
cmc
sub
pop
jb
dec
fidivrl
mov
sbbb
xchg
hlt
cmp
add
dec
cmp
mov
fwait
repnz
fisubs
pop
stos
movsl
fcoml
pop
test
sub
or
cmpsl
lods
jb
cwtl
fistpl
inc
cld
pop
mov
loop
and
divb
daa
pop
scas
xor
in
push
orb
mov
cmp
ja
and
pop
ss
icebp
setno
or
iret
adc
es
call
jmp
std
mov
jno
push
push
decb
dec
inc
add
dec
repz
and
mov
pop
mov
orb
jae
leave
mov
sbb
xor
cmpsl
mov
add
cmp
pop
mov
ljmp
subb
push
xor
sbb
test
std
mov
aam
adc
das
jb
bnd
and
jb
mov
js
fistpll
cmpsl
inc
add
cltd
test
stos
inc
sbb
leave
pusha
outsb
dec
ret
pop
out
fadds
sti
pop
add
mov
movsb
es
fisttpll
mov
movsb
adc
pop
test
jbe
inc
xlat
and
push
push
push
mov
fisubrl
pop
test
data16
lret
bound
in
cmp
pop
into
adc
lret
scas
inc
or
sarl
test
xor
shlb
xchg
pop
movlps
xor
aas
lods
mov
outsb
mov
fsubs
pop
or
adc
xor
push
mov
mov
fiaddl
push
add
andl
ret
dec
ds
hlt
test
mov
sbb
fistpll
mov
pop
daa
jg
orb
pusha
enter
pop
mov
jg
mov
stos
sti
adc
dec
dec
mov
dec
roll
fiadds
add
ja
ret
and
lock
fistps
xchg
jno
mov
mov
and
dec
add
sbb
and
dec
inc
in
insl
sub
mov
add
jp
cmp
xchg
cmc
mov
lods
xor
xchg
pop
shlb
inc
inc
sub
pop
mov
mov
insb
mov
loopne
mov
adc
jmp
sbb
push
lods
sub
out
out
jge
imul
jl
out
mov
fnstsw
xchg
nop
dec
sarl
shlb
jg
gs
and
popa
xor
lods
pop
pop
dec
inc
pop
in
bound
jl
push
pop
in
mov
andl
add
xlat
sub
mov
sub
cmp
fs
popa
cli
adc
jo
jge
js,pt
mov
fcomps
fdivrp
daa
idiv
sahf
cmp
call
scas
add
pop
js
call
rcrl
lret
mov
mov
aas
jle
sub
fs
sbb
cmc
outsl
xchg
mov
adc
jl
sub
aaa
pop
lret
and
ret
adc
mov
mov
pop
mov
nop
sbb
jmp
ss
and
pop
push
ss
je
or
test
dec
fldt
mov
and
cmc
pusha
out
repz
int
ficoml
sub
lret
out
jle
mov
and
xchg
jmp
mov
xor
cmp
push
in
jg
out
pop
pusha
or
jmp
aaa
jae
pushf
mov
lret
test
xor
mov
or
fcoml
mov
repnz
jo
ret
mov
xchg
sub
cwtl
cmp
dec
jg
xor
pop
cmpsl
bound
mov
lcall
scas
mov
je
or
jae
adc
jg
sahf
aaa
sbb
loop
inc
shlb
ret
repz
sub
push
cli
roll
sub
push
cltd
dec
fists
dec
arpl
add
out
add
jbe
out
lods
imul
cmc
xchg
add
adc
mov
popa
or
jg
add
mov
pushf
and
scas
mov
jge
inc
xchg
std
orb
mov
pushf
in
shll
shr
xchg
adc
push
mov
push
in
mov
test
sub
pop
push
dec
adc
adc
or
std
dec
in
mov
bound
movsl
std
xchg
xlat
mov
sbb
cs
cmp
jp
in
stos
std
es
aam
das
cmp
jmp
mov
add
scas
sti
mov
fcmove
std
inc
je
sbb
mov
dec
into
adc
dec
and
cli
cld
lcall
in
pop
movsl
ffree
or
lock
in
inc
rcr
mov
fnstcw
scas
push
fldt
daa
outsb
pop
js
xchg
cmp
outsb
add
mov
mov
adc
mov
jnp
sbb
fcoms
xchg
aam
arpl
pusha
addb
jmp
sbb
mov
es
lahf
int
movsb
ds
aas
or
mov
jns
jnp
and
aas
rcrl
nop
enter
pop
mov
in
mov
xchg
mov
jno
in
pop
mov
cmp
cs
pop
lods
push
push
imul
dec
fdivrs
call
mov
in
sbb
or
lcall
adcb
jle
out
out
pop
mov
sub
cmp
jns
jp
adc
fs
popf
pop
cs
adc
clc
dec
fidivs
mov
addl
in
xor
mov
jge
lock
jmp
inc
or
dec
movsl
clc
shrl
mov
iret
cmpsl
shlb
ret
and
cmc
and
lahf
out
lahf
pop
xchg
mov
push
fdiv
std
jns
jmp
daa
cmp
push
sbb
int3
arpl
in
cltd
in
aam
es
mov
pop
mov
shl
mov
inc
mov
xchg
sbbl
cmpsl
lahf
stos
leave
enter
mov
mov
push
popf
std
enter
lahf
xchg
and
pop
lods
cli
inc
sub
inc
loopne
call
xor
addr16
push
out
je
lds
loopne
ror
mov
add
in
rcrb
xorb
or
xchg
cmpsl
cmpsl
push
popf
stc
loopne
or
jns
xor
adc
sub
sahf
lods
in
sbb
xor
sub
pop
sub
nop
fidivrs
mov
into
rorl
ss
aad
mov
cli
mov
shl
aad
dec
std
xor
stos
jbe
ficoml
into
enter
pop
popa
enter
or
mov
mov
cltd
cwtl
ljmp
pushf
test
mov
insl
sbb
inc
push
cli
jg
imul
int3
jo
sub
sub
into
movsb
iret
and
jl
fidivs
mov
shlb
lret
xchg
jb
adc
in
mov
mov
pop
mul
adc
movsb
pop
jb
pop
addr16
sub
frstor
bound
xor
sub
stos
add
std
mov
push
ja
fistpl
mov
pushf
push
mov
ja
aam
cmpsl
and
andl
cmp
insl
sbb
ds
repz
in
mulps
enter
scas
fdivs
push
out
stos
jmp
std
mov
scas
pop
fsts
mov
shrb
scas
fidivrl
pop
rorb
out
cmpsl
xor
int
xlat
arpl
adc
inc
je
cmc
sbb
push
movsb
mov
repz
mov
push
jle
xorb
add
xor
in
imul
mov
cwtl
jmp
lret
mov
mov
jmp
into
enter
jnp
adc
mov
inc
xchg
hlt
outsb
stos
in
ret
rcrb
aas
xor
inc
lods
cmp
inc
push
dec
int
out
shll
pusha
pop
pop
faddl
into
jb
clc
jecxz
cltd
xlat
xchg
gs
inc
cmc
jae
xchg
jmp
cwtl
lods
push
cmp
arpl
lret
lods
dec
inc
sbb
iret
insb
scas
inc
cmpsb
xchg
add
cmp
hlt
out
and
xlat
popl
pop
dec
cmp
mov
sub
inc
lea
das
movsb
lods
enter
xor
sub
adc
movsb
repnz
fcomip
faddl
jns
mov
jl
inc
out
jmp
test
in
addl
test
in
movsl
dec
sbb
outsl
daa
popa
stos
jmp
shrl
out
xor
mov
int3
rclb
jmp
in
repz
jmp
add
cmpsl
xor
cmp
inc
xchg
xlat
popf
fsubp
mov
cwtl
xchg
stos
int
mov
in
repnz
cmpl
push
and
cmp
sub
insb
dec
sub
jge
gs
jle
add
adc
dec
lds
xchg
insb
xlat
lea
inc
lahf
clc
out
test
dec
cmp
xlat
adcl
insl
sub
xor
mov
fsubrl
dec
adc
push
aas
in
or
mov
jg
popa
mov
push
nop
arpl
testl
aaa
pop
pop
ja
jmp
andl
mov
arpl
into
cs
push
inc
inc
cmp
dec
xchg
sbb
jmp
jge
loopne
push
inc
enter
popa
outsb
push
xor
shrb
ss
rcrb
sti
loop
insb
xor
sub
into
enter
outsb
int3
pop
mov
cmpsl
repnz
pop
outsl
out
fistps
mov
test
push
int
xchg
adc
push
mov
lret
sbb
push
push
in
xchg
jno
xchg
cmpsl
push
mov
and
push
or
jb
or
xor
jge
fisttps
and
jmp
sbb
movsb
dec
cwtl
and
jnp
pop
mov
stos
aaa
push
xchg
xchg
ds
pop
jb
push
push
xor
inc
and
jmp
cld
push
push
cmp
into
cmp
ds
push
xor
scas
addl
or
das
mov
jb
frstor
out
push
xor
sahf
pusha
decl
daa
xchg
out
movsb
repnz
cmc
mov
pop
sub
sub
fildll
inc
pop
cmp
sbb
jg
add
lock
and
cltd
push
dec
cmp
insl
jae
jno
cmpsl
or
pop
icebp
adc
movsb
adc
mov
dec
or
jmp
cwtl
das
pop
and
xor
aaa
adc
sub
inc
and
push
lods
negl
xor
or
sub
ljmp
mov
stos
cmpsl
inc
adc
add
movsl
inc
push
imul
sbb
out
dec
add
add
xor
jns
xchg
dec
stos
dec
or
push
aam
lcall
data16
push
and
xchg
and
sti
pusha
push
adcb
sbb
jo
mov
pop
mov
std
inc
cmp
mov
push
sub
inc
mov
mov
fists
or
rcrl
repz
lods
scas
jl
sub
movsb
les
add
jae
dec
pop
jb
add
shlb
lods
inc
imul
push
stos
popa
adc
jp
bound
fwait
arpl
pop
dec
repz
bound
inc
fildll
hlt
fucomp
sub
ret
sti
sti
sub
sar
out
sub
push
pop
hlt
mov
jnp
xor
loopne
lds
pushl
and
fcomps
xchg
xor
mov
adc
inc
fidivl
loope
jb
fwait
clc
int
insl
jnp
xlat
lea
sub
les
push
cmp
sbb
iret
jne
int
gs
xchg
std
xchg
mov
fstps
sub
mov
sub
popf
pushf
out
adcl
addr16
andb
mov
jne
fld
fisttpll
xchg
xchg
jo
xor
dec
aas
or
add
inc
mov
jbe
sbb
loopne
add
test
jae
popf
shlb
pop
bound
sub
movsb
push
sub
hlt
fdivrs
aaa
cmp
aad
inc
insb
and
cs
inc
cld
js
sbbb
ret
sub
pop
outsb
es
test
test
adc
dec
movb
mov
fisubrs
sbb
jo
gs
add
sub
adc
lret
xchg
fmulp
rcl
cltd
xor
adc
pop
adc
popf
shlb
jp
cmp
imul
ljmp
push
int
cli
jns
adc
xchg
cld
mov
xor
inc
cmp
fcomps
ret
jmp
imul
push
rclb
sub
sub
enter
push
pop
add
out
dec
and
push
outsb
add
outsb
fdivr
and
dec
jne
jnp
add
jae
lock
mov
adc
hlt
daa
into
and
repz
push
adc
xor
jbe
jb
pop
cwtl
mov
xchg
rclb
scas
push
add
add
cmp
fdivrl
add
int
dec
mov
mov
add
mov
xchg
pop
cwtl
loope
mov
push
push
push
ret
icebp
aad
stos
push
scas
ss
xchg
mov
in
enter
clc
stc
cmp
dec
xor
testl
inc
movsl
loopne
jge
jnp
xchg
sub
pop
call
test
imul
test
cltd
addr16
test
incl
mov
inc
push
mov
in
inc
in
clc
lret
add
push
pop
dec
lock
insl
cmpsb
sbb
pushf
ret
pusha
cmp
xchg
mov
push
or
icebp
or
sbb
and
mov
test
pop
jno
rolb
nop
repnz
les
sarl
inc
or
adc
in
pop
out
cwtl
jmp
mov
lea
cmp
mov
mov
dec
jl
xchg
lock
shrl
sbb
sti
jg
cmp
add
jno
mov
and
sub
push
jne
cltd
sub
dec
pop
nop
enter
out
aas
mov
lods
push
mov
andb
dec
pop
cmp
xchg
inc
pusha
add
orb
xchg
cmp
notl
fnstcw
lahf
mov
outsb
and
je
cmc
xchg
fnstcw
dec
mov
mov
push
aad
mov
jo
fistps
sbb
mov
into
cltd
pop
mov
xchg
je
fsubl
addr16
jns
je
xor
mov
mov
je
sub
adcl
jb
mov
sbb
adc
pop
cmpsb
mov
push
mov
sub
lods
jo
add
push
es
xor
cs
testl
adc
repz
lods
cmp
sub
jecxz
pusha
sub
int3
mov
out
xchg
popa
add
jae
stc
sub
cmpsb
pop
mov
pop
shll
shlb
out
pop
scas
or
jne
inc
and
dec
gs
cmp
mov
adc
sti
fs
imul
jp
pop
clc
stc
jo
push
jmp
and
mov
jp
mov
xchg
push
pop
divb
leave
out
ljmp
jmp
xor
clc
jl
mov
adc
mov
popa
call
fs
xor
jbe
mov
icebp
and
shlb
call
add
xchg
scas
arpl
mov
jno
adc
push
push
loop
fs
daa
add
lods
cmp
dec
jno
inc
rcl
imul
pop
and
outsb
cmp
std
rol
pop
scas
ja
mov
push
cmpsb
cmp
mov
jl
mov
cmpsl
lds
inc
mov
pop
dec
jno
inc
jge
jne
movsb
jl
aad
ds
mov
imul
insb
jns,pn
and
cmp
jae
sahf
cwtl
mov
popf
xor
add
jecxz
fs
lds
inc
add
mov
and
insl
iret
push
and
xchg
pop
ret
fisttps
mov
inc
fadds
jl
sub
fidivl
xchg
and
addr16
cmp
dec
and
stc
sbb
cmp
movsb
mov
fisubrl
dec
out
into
ficomps
cmp
sub
pop
jge
push
jecxz
sub
inc
mov
push
in
adc
sti
shl
sub
xchg
in
push
inc
mov
cmc
repz
outsl
lret
ret
inc
popf
stc
icebp
incl
sbb
sub
lcall
test
ss
test
sbb
push
test
sub
mov
pop
and
out
mov
pop
pop
xor
adc
mov
dec
and
sti
lahf
pusha
mov
dec
add
dec
inc
mov
pushf
xor
in
or
call
mov
jp
pop
push
sbb
sbb
fbstp
inc
loope
mov
xchg
add
lods
testl
out
cmp
aad
aam
xchg
pop
mov
cwtl
push
idivb
loope
sub
mov
xchg
dec
or
shrl
addr16
int
inc
lds
mov
icebp
cmp
fbstp
push
mov
sub
jb
dec
mov
sbb
push
cwtl
repnz
fs
out
pop
sarb
es
stos
inc
aaa
mov
aad
push
push
pop
cmp
rol
sbb
xor
cmp
lea
aaa
outsb
stc
pop
loopne
xor
cwtl
std
enter
je
lods
subl
and
mov
insb
in
in
add
mov
cwtl
stos
pushf
inc
in
inc
nop
pop
xor
mov
out
lea
ljmp
or
mov
popa
imul
ljmp
xor
mov
mov
lods
movsb
les
ljmp
cli
cmp
and
inc
fdiv
sub
lret
fidivrs
in
mov
mov
dec
adc
notb
int
fs
movsl
adc
push
xchg
jg
jmp
jb
fisttpl
xchg
dec
mov
mov
ds
adc
repnz
addr16
dec
pop
jle
mov
mov
cwtl
push
movsb
cmp
jo
je
dec
mov
sbb
arpl
jns
scas
push
pop
jbe
nop
pop
sub
iret
gs
cltd
inc
jecxz
push
hlt
and
ja
shll
xchg
push
leave
js
insl
mov
pop
push
fistpl
in
or
pop
sub
shl
mov
dec
into
sbb
lret
add
sbb
mov
mov
lret
push
in
inc
cli
add
or
push
fldl
pop
leave
flds
stc
sbb
data16
xorl
add
push
push
outsl
aaa
shrl
xor
or
sub
cli
or
dec
aad
mulb
hlt
xlat
outsl
ret
shl
nop
dec
fbstp
pop
data16
leave
mov
in
jae
push
cmp
jmp
push
jno
int
push
repnz
mov
push
and
mov
dec
in
pushf
dec
mov
test
aam
lret
gs
push
popf
and
shlb
mov
jle
jmp
mov
mov
mov
int
jg
leave
mov
push
or
xchg
jns
inc
dec
test
jl
fcmovnb
mov
fwait
add
add
xchg
xorl
mov
dec
inc
xlat
nop
testl
call
mov
inc
pop
dec
adc
jae
stos
iret
mov
call
stos
shlb
popa
add
nop
adc
pop
hlt
pusha
fstpl
mov
mov
mov
mov
jno
add
aad
andb
idivl
subl
mov
inc
std
lods
xlat
adc
incb
jne
dec
cmpsl
sub
mov
in
mov
or
xlat
pop
mov
mul
dec
scas
sbb
jno
inc
lods
inc
lcall
dec
imul
inc
push
mov
dec
in
adc
jnp
out
lcall
mov
sub
ljmp
out
sub
inc
jmp
add
ret
cmpsl
fisubrs
subl
enter
adc
int3
mov
xchg
sub
stos
jg
lea
dec
bound
out
mov
pop
arpl
pop
xor
cmp
sub
lahf
insl
pop
popf
fsubr
into
jge
sub
les
push
push
push
aaa
jne
jl
lods
mov
pop
sub
xchg
mov
mov
insl
ret
cmp
clc
divb
xlat
push
mov
imul
and
mov
shl
daa
jp
jg
movsl
testl
test
mov
mov
iret
mov
test
lret
enter
mov
mov
movb
sbb
pop
pop
test
add
and
cmp
shll
daa
jecxz
or
jbe
push
test
sti
xchg
insb
add
pushf
repnz
mov
lahf
xor
cmp
xchg
sub
push
js
xor
insl
incl
mov
mov
xchg
push
stos
dec
mov
iret
ds
cs
repnz
mov
cmp
popf
add
cli
cs
dec
cld
cltd
clc
xor
and
sub
mov
cmp
pop
outsl
out
sub
push
das
cmpsl
ds
cmp
pop
arpl
inc
shll
loopne
pop
xchg
cmp
jle
cmpsb
popa
insl
xor
push
imul
jecxz
cmp
sbb
jecxz
arpl
add
ret
les
scas
inc
call
ja
out
mov
test
icebp
repz
jnp
loop
pop
adc
mov
add
xchg
push
outsb
or
cld
mov
das
imul
inc
jo
and
lret
bound
inc
adc
dec
mov
in
sub
cmp
inc
imul
mov
jmp
dec
push
mov
test
mov
push
pop
add
clc
dec
mov
dec
add
cmpsl
mov
ja
popa
or
ror
cli
push
push
mov
repnz
fs
push
lea
mov
cld
mov
icebp
ret
fidivs
iret
mov
movsl
sbb
jl
sub
test
inc
mov
enter
sub
inc
sub
dec
pop
lahf
repz
add
lods
inc
lds
lcall
mov
mov
insb
iret
or
mov
int
sbb
pop
push
cmpb
cmp
dec
jb
sbb
or
aaa
cmc
jp
iret
pop
insb
jbe
add
lds
mov
mov
test
mov
inc
push
outsb
adc
xchg
int
es
mov
nop
fwait
pop
pusha
clc
fdivs
imul
aad
addr16
subl
dec
loopne
ss
sbbb
cmp
dec
stos
je
sub
push
dec
push
inc
xchg
repnz
sti
pushf
push
inc
xchg
adc
inc
out
jge
mov
push
stc
roll
loope
dec
mull
mov
lcall
cld
rolb
sub
int
jb
lcall
xchg
sbb
mov
mov
add
les
cmp
js
sbb
add
imul
inc
repz
push
jno
into
or
lds
cmp
pushf
insb
scas
int
shlb
addr16
mov
sarl
je
cmpsb
and
inc
enter
insl
add
lods
fs
sub
mov
test
inc
jge
call
test
mov
mov
into
testb
mov
mull
mov
ret
cmpsb
repnz
cmp
sbb
popf
testb
loope
sub
sarl
add
pop
outsb
stc
xchg
cltd
idiv
xor
lock
movswl
mov
or
mov
inc
inc
sti
mov
xor
or
lcall
push
xchg
jne
xchg
fadd
mov
xor
outsb
mov
cmpsl
test
aas
jle
push
push
sbbb
add
cmp
and
inc
call
aad
push
cmp
mov
lock
lds
and
loope
push
add
ficoml
or
js
push
and
imul
mov
scas
fnsave
push
fucomp
inc
icebp
movsb
dec
xor
xchg
mov
fsts
fsubs
jno
sbb
jb
inc
pusha
shrl
jno
outsl
sub
xchg
xor
add
xor
cmp
mov
xchg
sub
push
and
out
das
jbe
popa
xlat
and
xchg
jle
pop
imul
test
fsubrs
or
jne
out
cmpsb
dec
mov
pop
mov
rorl
mov
cmp
push
bound
mov
cmp
fimuls
xor
not
lahf
aad
shl
jp
mov
ret
pushf
xor
or
jb
jge
add
push
call
or
mov
out
gs
std
mov
das
add
adc
fisubl
les
mov
mov
ret
mov
adc
hlt
mov
add
sbb
in
or
mov
push
jo
add
dec
sbb
movsb
pop
xor
shrb
cmp
fsubrl
in
dec
mov
dec
xchg
outsb
sbb
push
test
addr16
lahf
jo
dec
les
xor
mov
sub
sbb
dec
sbb
pop
xchg
es
xchg
stos
mov
popf
icebp
sahf
test
pop
es
punpckhwd
adc
movsb
lds
arpl
pop
xchg
das
fmull
arpl
pop
dec
popa
cmpl
push
jbe
sbb
shll
sub
push
mov
fs
push
sbb
and
ds
dec
inc
push
shr
inc
bound
es
repz
stos
stos
lcall
cmpsl
jbe
mov
test
inc
sub
or
adc
icebp
pop
rcrb
scas
or
xchg
popf
lret
lods
mov
pop
popa
int
mov
adcb
inc
fwait
shl
movsb
cmp
test
outsl
jnp
movsl
loopne
push
inc
mov
imul
xor
std
lock
lahf
mov
cmp
or
mov
dec
sub
mov
ret
and
jns
aad
inc
dec
dec
cld
push
push
xlat
jmp
cmp
icebp
das
xchg
xchg
add
inc
sbbl
adcb
cmp
jmp
or
movsl
dec
xchg
ret
lahf
sub
pop
ret
add
scas
push
jbe
lcall
inc
sti
pushl
insl
push
es
ret
lret
inc
jecxz
addr16
lret
mov
xchg
sbb
les
dec
sbb
in
test
dec
pop
cmc
leave
adc
mov
and
out
call
pop
sub
jb
rcrb
xlat
subb
mov
mov
rolb
sbb
jbe
nop
fs
xlat
mov
lcall
cmpsl
push
push
adcl
push
in
out
fsubrs
push
data16
xor
and
test
adc
and
repz
daa
shr
jno
jmp
mov
adc
jae
pusha
insl
inc
and
xor
push
mov
push
lea
data16
sbb
stos
inc
fnstsw
push
out
lcall
push
cmp
loop
push
out
test
mov
jbe
fs
sub
mov
rcl
test
cmc
loope
daa
test
cmp
hlt
sti
pop
test
push
lret
push
xchg
ret
jo
dec
sub
dec
sti
or
jg
test
loop
leave
dec
test
adc
and
insb
mov
pop
bound
xchg
aas
mov
inc
inc
int
ret
jmp
cmpsl
rclb
cld
aaa
inc
xchg
push
sub
xchg
lock
push
mov
push
in
or
jecxz
sbb
adc
mov
shrl
lret
adc
rorb
jmp
aaa
cmpsb
cmp
pop
inc
test
push
jo
movsl
xor
int3
and
cli
int
scas
sbb
out
sahf
xor
mov
pop
sarl
add
loop
sar
idivl
ret
and
inc
ftst
pop
sub
rclb
xchg
mov
add
push
pshufw
cmp
cld
xchg
pop
les
jb
sbb
iret
mov
mov
push
mov
lods
data16
or
push
scas
lahf
adc
ss
and
push
jmp
in
mov
lds
cmp
add
jno
rcll
orl
or
adc
insl
mov
cmp
outsb
mov
push
notb
cmpb
lock
and
pop
ss
data16
xchg
pop
popa
add
cmp
sahf
cmp
roll
jbe
fsubrp
pop
stos
stos
cli
pusha
and
push
fisttpl
vpunpckhdq
cltd
xor
cmp
cmpsl
push
cmp
mull
aaa
sti
lret
or
and
mov
mov
loopne
adcl
lods
xchg
bnd
dec
test
jge
add
inc
sahf
mov
add
lods
loopne
leave
mov
mov
xchg
lea
jne
xchg
pop
shr
pop
fdivl
xchg
fcmovne
push
cmpsl
xor
push
sbb
dec
pop
sbb
xor
and
stc
nop
aad
dec
push
add
pop
sub
outsb
or
fwait
addr16
sub
pop
lret
lods
lahf
les
jno
add
sub
out
test
or
jns
lret
xlat
sbb
pusha
sahf
outsl
jl,pn
add
mov
jno
into
dec
mov
push
lods
inc
lods
dec
mov
fstps
mov
mov
mov
daa
add
inc
ja
adc
sahf
inc
icebp
call
repnz
cld
xchg
orl
iret
cmp
or
pop
and
adc
mov
fwait
and
and
stos
inc
cmp
lock
leave
push
inc
ljmp
adc
stos
fwait
mov
xchg
repz
sub
and
jecxz
cwtl
les
inc
mov
mov
arpl
clc
iret
mov
push
adc
adc
bound
jne
mov
jge
in
sahf
dec
je
aaa
cmp
inc
inc
jmp
movsl
cld
jmp
ds
outsl
adc
inc
nop
sub
aaa
lds
out
sub
repz
pop
into
xchg
xchg
lret
data16
jg
in
popa
mov
pop
iret
mulb
fs
out
popf
bound
sub
add
jne
div
enter
rcll
dec
stos
cs
lea
pop
or
cltd
imul
in
fwait
dec
push
sbb
sbbb
inc
push
popa
and
xor
incb
sub
adc
push
adc
aad
rcll
into
xchg
jge
jle
inc
and
xlat
jl
out
loope
imul
mov
stos
add
out
inc
in
aas
adc
jp
lea
lock
sbb
cmp
and
dec
popf
jo
outsl
cmp
jmp
and
or
in
lods
push
sti
xchg
sub
mov
sub
fdiv
sbb
cmp
cmpsl
arpl
rep
or
cmp
push
insb
push
push
pop
xchg
jbe
mov
mov
sar
mov
jo
cmp
rclb
je
mov
pusha
addb
push
ds
out
pop
mov
sub
jmp
fsubrp
lahf
mov
push
es
cmp
shrb
mov
mov
imul
fimull
iret
into
push
lret
cwtd
mov
cmpsl
cmc
js
xchg
add
data16
pop
add
ds
pop
mov
xorb
sub
roll
fdivrl
sbb
enter
xchg
jbe
in
sub
stc
idivb
pop
es
call
adc
repz
push
sbb
stos
dec
icebp
jecxz
loope
xor
enter
enter
popa
xchg
test
les
xor
icebp
int
and
inc
sbb
nop
pop
cmp
sbb
cmp
mov
repnz
mov
test
js
jb
and
pop
idivb
es
pop
push
cmpsl
sbb
ljmp
or
push
dec
dec
out
sbb
aad
lret
xchg
fcom
inc
and
and
pop
sbb
push
sub
push
fimuls
jp
repz
stos
decl
andl
fidivl
aaa
jp
xchg
fisubl
sti
rorb
jl
sub
sti
add
test
mov
dec
subl
and
pop
fisttps
outsb
mov
out
pop
andb
sub
movsl
ret
cmp
lcall
mov
cmc
mov
aas
std
pop
outsl
adc
jbe
push
cmpsb
std
outsb
cmp
lods
mov
subb
adc
leave
pop
out
jl
setle
mov
stos
fcomps
xor
push
sahf
push
cmc
stc
std
mov
push
pop
add
pop
xchg
jo
movsl
xchg
repz
adc
inc
gs
xor
ja
pusha
push
xchg
and
dec
mov
and
mov
scas
push
xchg
pop
scas
les
fdivs
in
popf
mov
in
insb
scas
into
gs
add
push
mov
and
addr16
or
rcrb
lcall
lods
cmp
int3
xchg
ss
push
out
out
loop
add
jmp
shlb
sti
enter
cmpsl
or
mov
xchg
cltd
mov
fnstenv
sub
mov
shrl
add
data16
popf
or
in
mov
inc
jp
pop
lods
dec
clc
pop
xchg
gs
push
mov
xchg
out
pop
shl
lea
aas
jne
inc
lods
pusha
inc
fistl
inc
pop
imul
dec
cld
pop
nop
fnstsw
imul
lahf
mov
stos
stos
fcompl
push
mov
cli
inc
xor
jle
adc
das
mov
jle
push
adc
ljmp
sbb
ja
sbb
call
xor
cs
cmpsl
push
cmpb
mov
ret
push
pop
mov
cli
mov
add
dec
jbe
icebp
xor
test
or
or
mov
sbb
cmp
sarb
or
or
testl
jmp
push
test
aam
in
dec
into
mov
inc
lahf
insl
stos
dec
bound
int3
push
mov
into
pop
imul
negb
or
mov
fst
notl
mov
adc
mov
push
iret
mov
lret
jecxz
pop
push
jl
std
cwtl
test
mov
jbe
repnz
frstor
das
es
xchg
fsubrs
in
popf
ret
lods
mov
jecxz
jl
xchg
mov
lret
daa
loopne
into
adc
xchg
xor
adc
and
sub
pop
lds
or
psubusb
mov
xchg
adc
sahf
xor
in
sahf
inc
popa
mov
pop
cmp
cmp
cltd
frstpm(287
fisttpll
mov
mov
push
clc
adc
push
mov
insb
and
add
pop
jp
jecxz
mov
add
mov
lock
cmp
jo
xchg
cmp
mov
cltd
repnz
xchg
push
fbstp
roll
adc
dec
das
jo
fdivrl
movsb
push
fwait
push
dec
push
cmpsb
les
pusha
insl
imul
insl
cmp
push
movsb
aad
loopne
add
fsubrl
mov
arpl
jecxz
mov
mov
push
xchg
xor
sbb
jnp
fdivl
jl
out
jge
sbb
jg
and
loope
ficompl
pop
test
xchg
out
sbb
xchg
jmp
inc
roll
jg
push
inc
mov
dec
inc
adc
dec
xchg
aaa
imul
out
repnz
lods
aad
jbe
loopne
fwait
es
add
lret
xlat
xchg
jo
push
clc
sub
out
lcall
in
add
ss
dec
or
mov
pop
stc
sbb
cmp
or
xchg
cmpl
add
cs
into
cmpb
pop
out
scas
sahf
ds
ret
sub
fcmovu
icebp
dec
ret
popf
mov
jno
jecxz
dec
cli
repnz
xchg
int
xchg
pop
mov
inc
push
pop
repnz
sbb
fnsave
mov
lods
jmp
mov
push
adc
sbb
arpl
repnz
popf
adc
jecxz
cmpsl
xchg
add
jecxz
xchg
into
rol
data16
add
out
xorl
or
push
or
adc
rcrl
or
icebp
jo
dec
pop
lods
sbb
rorb
sub
lret
or
enter
and
xor
push
out
sbb
and
shl
xchg
xor
sub
or
dec
inc
mov
ljmp
jne
push
ljmp
in
mov
inc
xlat
bound
pop
je
jp
cli
stos
pop
sti
iret
xchg
enter
mov
mov
jle
shrl
sub
or
add
ret
leave
or
out
inc
test
lret
sbb
cmp
lcall
jge
hlt
cmp
ja
rcl
pop
jmp
xor
enter
add
leave
out
pusha
int
xchg
int
mov
ss
leave
sub
and
sub
out
lds
xor
cld
mov
pop
mov
xor
in
ja
es
push
push
xor
xor
cmp
mov
add
xor
shrl
loopne
sub
push
ffreep
cmp
loopne
outsl
push
ljmp
cmp
pop
cs
daa
je
mov
adc
jge
sarl
push
sub
nop
insl
lret
sbb
add
js
dec
mov
push
or
xor
daa
sub
pavgb
lea
movsl
hlt
xchg
jnp
roll
mov
aas
out
daa
lahf
push
push
repz
xor
add
add
in
int3
dec
jo
arpl
add
add
jbe
push
mov
xlat
mov
mov
les
in
add
jno
push
scas
addr16
or
xchg
es
dec
fistps
jmp
sbb
ja
mov
movb
mov
xor
scas
orb
popf
inc
in
jne
stc
add
mov
test
mov
mov
fimuls
cmpxchg
adcl
or
aaa
test
fistps
mov
sub
test
or
movsb
add
push
jae,pt
push
push
jno
mov
xchg
loop
sub
ss
lcall
jo
inc
test
mov
pop
pop
jbe
arpl
and
or
into
test
mov
xor
xlat
pop
popf
add
out
mull
sub
xchg
ja
sbbl
sub
mov
dec
cwtl
cli
cld
ret
cmp
stos
jns
push
or
inc
ficompl
xchg
push
popa
sub
pop
call
xchg
xor
shll
lock
into
push
or
sarl
jne
mov
cld
mov
iret
inc
xor
mov
mov
push
iret
mov
xchg
jae
lock
push
add
sub
and
inc
fisubl
add
and
mov
jne
dec
stc
pop
enterw
jne
mov
mov
stos
test
inc
dec
mov
sub
inc
hlt
fcmovnb
pop
je
mov
cmp
adc
jnp
cltd
in
test
jo
sbb
dec
mov
lret
sbb
andb
adc
icebp
cmp
cs
ja
idivb
enter
and
fxch
pop
fnstcw
cmpsb
imul
movsl
scas
adc
outsl
dec
xchg
mov
or
nop
lods
jne
ds
test
adc
xchg
or
inc
in
stc
cmp
xchg
cs
shr
popf
jno
fisttpll
aad
lock
dec
pop
es
aad
mov
xchg
and
mov
mov
cmpsl
push
fstps
movsl
xlat
cmp
adc
xor
xor
inc
bound
fcompl
pop
les
ret
std
or
enter
orb
xchg
test
mov
sarl
push
or
inc
sub
mov
mov
pop
push
cmpsb
insl
leave
pop
sub
cmpsl
cmp
adc
leave
jb
loopne
fwait
sbb
rorl
cs
outsl
sbb
xor
xor
fdivrp
and
mov
push
ret
lods
testl
sub
idiv
xor
cld
xchg
add
jbe
fdivrl
adc
int3
leave
mov
mov
push
or
in
lahf
push
movsl
lds
mov
lods
push
xor
scas
xor
addb
scas
jbe
mov
enter
mov
fdiv
push
orl
mov
push
lods
jnp
pop
push
dec
adc
adc
mov
push
push
and
negb
pop
lret
addb
in
aam
stos
mov
pop
jle
adc
pop
inc
loopne
ja
stos
jmp
test
cmp
add
stc
lock
shl
xor
lret
shrl
pop
aad
jne
icebp
jl
pop
rcrl
mov
cmc
sbb
sub
sti
cmp
sub
stos
or
mov
mov
jnp
outsb
sbb
jle
and
mov
inc
in
cmpl
xchg
mov
jmp
xlat
cltd
std
pop
mov
std
push
pop
lcall
aas
ja
mov
insb
add
pop
lock
outsl
mov
and
push
push
xchg
xor
int
mov
push
lods
inc
dec
adc
push
sub
fidivs
pop
icebp
dec
lret
push
and
inc
push
loopw
fcoml
pop
mov
daa
addr16
ror
pop
lret
out
mov
leave
pusha
cmp
cmp
sub
jbe
mov
aam
push
inc
dec
mov
push
insl
inc
rcrb
lods
xor
aad
mov
cmc
mov
sahf
mov
insb
jl
adc
mov
dec
sbb
jb
rcll
inc
popl
sbb
call
cmpsl
xor
mov
push
push
cmp
xor
mov
push
je
sbb
gs
mov
push
out
cld
lds
pop
int
movsl
in
out
stos
xchg
push
out
fists
mov
add
jno
shrl
mov
lahf
adc
stos
xchg
push
cmc
cmp
push
cmc
push
dec
add
or
repz
and
inc
xchg
enter
scas
in
sbb
xchg
mov
dec
mov
or
dec
and
rcll
repz
stos
movsb
fisubrs
push
add
push
pop
sbb
into
ja
mov
out
mov
stos
aad
repz
flds
mov
lock
outsb
adc
popf
pop
and
repz
mov
mov
xchg
out
jle
aam
sbb
in
cmp
sbb
mov
cmp
dec
mov
or
sub
mov
inc
or
in
cmp
mov
add
jecxz
sbb
dec
add
xor
movsl
add
out
repnz
dec
pop
movsb
repnz
push
insl
push
adc
rcll
imull
stc
hlt
dec
jp
pop
jecxz
stos
mov
inc
leave
push
out
mov
mov
push
push
jb
out
xchg
nop
loop
pusha
fadds
loop
sti
test
xor
jg
and
out
jmp
sbb
shll
into
fcomp
push
lock
cmp
sbb
jl
fcomip
or
cmp
addr16
ds
gs
push
icebp
adc
lds
add
std
ficompl
fwait
push
cmp
ret
filds
and
mov
jb
cmc
push
and
add
pop
mov
enter
pop
add
mov
push
adc
cli
movsb
fisubl
pop
hlt
hlt
jp
push
movsl
pusha
push
sbb
sarb
mov
fwait
jbe
sub
xor
or
xchg
mov
jb
mov
jns
add
xor
xchg
add
cwtl
xor
xor
in
add
mov
sbb
call
aaa
in
lcall
sub
scas
mov
lahf
push
mov
xchg
xor
xor
dec
dec
shrl
jp
iret
mov
jp
and
dec
lcall
pop
rcl
scas
mov
mov
inc
imul
ret
insb
mov
iret
jo
push
and
or
testl
mov
insb
add
or
jae
adc
push
xchg
inc
mov
sub
in
loop
xchg
add
inc
cmc
lea
or
mov
popf
loopne
repnz
les
jnp
or
add
ds
sub
dec
in
cltd
inc
cmpsw
sbb
cmp
imul
cmpsb
dec
push
stos
mov
fidivs
ror
ret
xor
arpl
xchg
sub
mov
daa
xchg
adc
call
add
push
xor
cwtl
sbb
mov
cmp
out
cmp
jmp
loope
add
sub
popf
push
test
mov
cmc
jno
mov
push
xchg
xor
inc
xlat
lret
iret
popa
jmp
inc
call
and
js
fisttps
fs
js
jle
mov
mov
jl
mov
jo
mov
and
ja
mov
jmp
test
fbld
imul
mov
mov
sti
outsl
fsubrp
cwtl
pop
and
ret
dec
pop
imul
lods
dec
add
out
jb
lcall
std
pop
jae
shlb
aad
insb
scas
or
fsubs
std
shr
stc
adc
in
out
push
inc
pushf
or
iret
cmp
adc
push
inc
xor
jb
testl
mov
cmc
inc
pop
jo
jnp
test
dec
jbe
add
and
mov
lods
outsl
sbb
xchg
sbb
cmc
sbb
repz
es
push
fucomp
mov
call
pop
xchg
mov
jne
lds
jmp
and
fimull
adc
scas
push
pop
pushf
loopne
das
mov
sub
jo
or
and
push
xorb
xchg
sub
push
adc
xor
pushl
fildl
jne
insl
es
in
inc
fcompl
ds
repnz
xchg
xchg
and
jp
mov
fdivl
sub
mov
std
ja
pshufw
daa
or
nop
fistpl
jae
jne
xor
cmpb
in
dec
xchg
sub
mov
pop
std
and
inc
dec
je
scas
je
push
incb
clc
data16
push
adc
jns
push
xchg
add
or
cmpsb
aam
inc
cmp
push
ret
std
sbb
inc
and
pop
subl
movsb
in
xlat
sub
add
xchg
push
insl
lret
lahf
sbb
shr
insb
add
mov
and
fsubrs
sub
shlb
stos
cmpsb
push
insb
jl
test
ja
mov
or
jo
mov
sbb
xchg
dec
pop
cmp
cmp
imul
jmp
adc
mov
xor
and
inc
sub
repnz
jmp
adc
dec
sub
mov
and
mov
std
pop
aaa
rcrb
jnp
mov
push
stos
sbbl
js
test
adc
inc
pavgw
loop
dec
mov
add
pop
in
sub
mov
cmp
inc
cmp
sbb
add
cwtl
sbb
mov
test
ret
jmp
pextrw
sbb
push
shlb
pop
outsl
stc
sub
int
cmp
in
cmp
pop
je
sbb
lahf
mov
es
loopne
movsl
sub
imul
popf
xchg
cs
xorl
adc
and
add
cmpsl
xor
push
xor
push
in
push
aaa
mov
ja
cltd
icebp
dec
fstl
cs
mov
data16
sbb
aaa
test
xchg
sti
xor
jae
out
test
repz
xlat
ljmp
xor
sbb
mov
lahf
ss
push
jecxz
lock
ss
add
jo
fs
out
dec
sbbb
out
add
and
adc
in
movsb
adc
cmp
popa
pop
sub
cltd
add
dec
push
dec
loopne
in
int3
aam
in
mov
pop
cli
dec
fdiv
jp
fisttpl
dec
mov
es
inc
arpl
es
mov
loop
mov
daa
mov
sub
fnstenv
or
xor
cli
stos
adc
xchg
add
outsb
jne
sti
test
lret
addr16
std
roll
cmpsb
lock
shlb
xchg
sbb
xor
xor
mov
loope
mov
adc
cmp
lahf
ss
jns
pop
leave
stc
mov
lret
scas
iret
or
xchg
ljmp
je
popf
jle
mov
xchg
adc
add
scas
adc
jne
inc
mov
sarb
mov
mov
pop
and
pop
fcmovb
xor
pop
psllw
loope
daa
imul
in
insb
pusha
cmp
jno
mov
sbb
dec
dec
imul
lret
and
out
movsb
ljmp
cmpb
testl
jnp
sbb
mov
cmc
cmp
mov
or
in
or
push
repnz
pop
and
lret
and
imul
mov
movsl
out
inc
inc
outsb
mov
push
aaa
push
cld
xor
sbb
push
cmp
cwtl
xchg
je
mov
testl
adc
addr16
test
mov
addb
xchg
xor
lcall
cmpsb
add
xor
mov
andb
bnd
enter
lods
test
and
mov
lret
test
or
inc
icebp
push
sbb
rorb
xor
lret
push
outsl
or
push
mov
test
pop
sbb
add
xchg
lds
cwtl
notb
xor
adc
push
daa
es
repnz
shlb
mov
in
push
or
xor
aad
out
dec
adc
fldl
dec
pop
dec
incb
jno
cwtl
xor
adc
push
xorl
scas
fmull
or
fisubs
cs
es
cmp
mov
sub
lahf
jne
xchg
fs
push
leave
sub
aam
xchg
xchg
std
or
imul
gs
or
push
in
sbb
aaa
mov
jp
mov
jae
adc
mov
push
lods
or
outsb
sbb
xchg
cmpsb
adc
push
mov
dec
in
cli
xor
and
dec
in
pop
mov
lea
bound
add
call
hlt
adc
lret
cli
mov
or
push
incl
push
test
scas
js
aam
popf
mov
mov
push
lods
sbb
fnsave
cld
das
pop
out
cmp
aaa
push
cmp
addb
mov
popa
push
push
call
add
daa
stc
test
shl
out
mov
daa
mov
xchg
out
push
insb
fsubrp
pop
loope
inc
mov
cmp
and
push
mov
outsb
adc
and
repnz
mov
pop
cmp
xor
sub
cmp
pop
jno
cmpsb
scas
jl
fwait
bound
aam
xchg
insb
imul
dec
stos
or
push
mov
loop
sbb
negl
pusha
cwtl
lahf
ss
cmp
sahf
rcr
sahf
fnsave
mov
dec
xchg
dec
or
jmp
movl
mov
dec
fdivs
lret
push
jmp
repz
xchg
cs
sbb
sarl
mov
scas
test
imul
clc
jge
mov
dec
or
lods
jge
fdivr
adc
mov
pop
iret
push
fisubrs
sti
sub
xor
pop
dec
andb
shr
nop
pop
pop
jne
lahf
jne
into
lret
lret
stc
mov
pop
js
or
cmp
pop
mov
push
pop
jmp
into
enter
sti
and
mov
sub
lods
mov
mov
jns
ljmp
jbe
fstpt
rclb
data16
or
mov
add
add
and
inc
imul
inc
push
int
or
in
lds
and
stc
pop
lock
sti
add
sbb
sbb
inc
add
adc
fwait
cmp
push
aad
sub
mov
mov
es
shrl
enter
mov
add
jb
push
xor
fdivrl
push
adc
int3
jns,pt
sbb
fsubl
jl
adc
xchg
out
cmpsl
jg
cmp
sub
inc
mov
dec
out
mov
addb
sbb
xchg
jno
sbb
xor
cmp
aas
daa
xor
loop
push
imul
repz
int
je
push
push
sbb
mov
rorb
lock
fidivrs
mov
dec
and
xchg
dec
test
push
nop
inc
stos
out
xor
push
in
nop
in
stos
rclb
xchg
push
and
mov
int
inc
push
jecxz
bound
inc
cmp
inc
xchg
gs
lret
xchg
xor
cmp
out
jle
mov
mov
sub
dec
push
cmp
in
test
dec
sbb
push
inc
ds
testb
je
push
lods
imull
in
jae
rcl
inc
sub
dec
mov
or
pusha
roll
sub
cmpl
mov
inc
cmp
pop
mov
sbb
jbe
jecxz
jge
and
push
jno
arpl
xchg
fisubrl
ds
mov
add
fucomip
insl
jo
xchg
shrb
xchg
add
push
addl
push
scas
inc
jb
andl
test
inc
ljmp
fcoml
imul
aam
xor
mov
insl
outsl
add
or
repnz
pop
sub
jmp
in
mov
repz
fisubl
popa
jns
fstl
sbb
out
sub
mov
adc
dec
jae
xor
and
hlt
fstps
lahf
jo
inc
in
aas
mov
adc
mov
das
xchg
ljmp
mov
lds
push
iret
mov
mov
mov
fidivrs
ss
pushf
adc
ja
cs
add
inc
sub
cmpsb
aam
aad
ljmp
adc
lods
cmp
outsb
in
adc
orl
xchg
pusha
out
push
or
arpl
or
adc
cmpsb
add
xor
lods
inc
cmpsb
ffree
or
ja
es
gs
data16
push
mov
mov
das
test
cltd
pushf
and
or
test
cmp
out
decb
clc
test
mov
push
pop
out
sub
sarb
mov
test
xchg
mov
push
xor
fcomp
test
es
jecxz
pop
xor
cltd
push
cltd
jb
sti
pop
cmc
and
js
push
mov
lahf
mov
pop
in
adc
pop
lea
xchg
out
dec
xchg
or
xchg
das
in
fcompl
pop
mov
mov
mov
aam
cmc
outsb
les
in
lods
xor
xchg
daa
and
mov
sbb
and
cmp
sub
ror
std
dec
loopne
fwait
xchg
mov
mov
inc
outsl
cmc
jge
je
push
cmp
dec
aas
sbb
test
imul
std
or
jns
aad
xor
stos
and
xchg
cmp
jmp
jb
adc
mov
mov
mov
sti
iret
mov
mov
stc
mov
push
jno
cli
push
fistl
add
sub
shrl
or
sbbb
mov
mov
push
pop
push
mulb
mov
stos
cmp
sub
lcall
pop
imul
xchg
arpl
and
mov
cli
stos
lcall
push
fstps
xchg
mov
push
mov
and
test
ror
nop
xchg
jge
xchg
xor
lahf
sbb
xchg
dec
or
hlt
jmp
addl
loop
sub
mov
fsts
and
pop
out
cmp
rcll
repz
fs
jne
dec
addr16
ss
cld
push
ss
mov
test
mov
imul
mov
out
jae
loopne
bswap
fs
cmp
jae
in
jmp
int3
mov
pop
xor
xlat
xchg
xchg
push
stos
sbb
mull
cmpsl
cmp
xor
mov
push
fcomps
js
mov
adc
pusha
cmpsb
jl
mov
lea
pop
jnp
xorb
ja
pop
nop
mov
or
popa
jg
cli
dec
loope
shll
das
push
in
xchg
flds
les
std
in
aaa
cmpsb
notl
xchg
xor
add
sbb
cmp
adc
out
pop
lods
addl
add
pop
rorb
insb
inc
stos
inc
jb
mov
mov
pop
cmpsb
lds
gs
xchg
sub
fwait
xlat
mov
bound
mov
dec
in
shll
add
mov
pop
sub
pop
adc
mov
in
jns
mov
adc
lea
jb
mov
stos
loope
mov
sub
dec
shr
jge
mov
daa
js
mov
mov
push
scas
push
push
and
sbb
fwait
or
test
sbb
cld
xchg
push
mov
sbb
loope
int
dec
pop
xor
cmpsb
dec
push
add
cmc
adc
cmpl
test
insl
rcrb
inc
arpl
sub
repz
push
pop
push
dec
pop
xchg
dec
popf
je
mov
hlt
pop
jge
add
outsl
or
mov
inc
sub
repnz
and
adc
arpl
out
push
jecxz
in
testl
mov
jae
stc
aad
push
or
fldcw
pop
mov
pop
xchg
scas
push
sbb
mov
mov
stos
imul
sbb
loope
jb
xchg
cmpsl
je
test
fs
int
movsl
xchg
les
jnp
cmp
andl
xchg
sbb
add
loope
pop
sbb
cltd
push
insb
jmp
xor
cmpsb
aaa
push
sub
cmp
dec
xchg
fcmovnu
mov
mov
insl
jmp
or
lahf
add
pop
push
sbb
mov
lea
imul
jo
and
mov
aas
jo
test
sbb
push
ret
jne
pop
in
stos
loop
pop
icebp
jno
mov
shl
adc
jle
cli
inc
pop
aaa
repnz
gs
xchg
daa
stc
fsubrs
jae
enter
adc
ds
fildll
adc
cmpsb
dec
cld
push
iret
into
sub
jmp
pop
leave
arpl
dec
jae
shl
pop
sub
adc
pop
jmp
addr16
lret
mov
mov
pop
sub
rcl
push
push
add
lcall
add
loopne
inc
out
push
and
popf
xor
pop
mulb
inc
jge
ja
jle
in
dec
xor
dec
lods
ds
cmp
lds
or
dec
pop
mov
and
subl
push
mov
mov
xor
je
lds
xor
js
test
mov
cmp
pop
lock
pusha
arpl
roll
and
mov
pop
xor
push
out
imul
fisubl
push
pop
popa
add
fdiv
xor
in
test
pop
lcall
aad
xor
sub
pop
sahf
pop
roll
shl
add
adcb
pusha
jbe
daa
jcxz
not
out
mov
pop
xchg
sbb
mov
ljmp
xor
outsl
push
sahf
and
pop
xchg
pop
test
inc
dec
icebp
test
in
adc
adc
nop
call
out
dec
ret
popf
scas
daa
fmuls
pop
jne
mov
sub
dec
aad
jg
jnp
lret
lock
adc
fwait
insb
add
idivl
ljmp
xor
loop
insb
sub
add
sub
ret
pop
push
das
mov
adc
cli
popa
orl
dec
out
inc
push
popa
xorl
dec
scas
or
xlat
repz
psllw
addl
jne
aas
test
test
aaa
inc
pushf
out
stos
andb
xchg
je
cmpb
push
mov
or
dec
push
ficompl
jne
sub
inc
sbb
ret
mov
jb
sbb
shl
xchg
sbb
stc
dec
sbb
insb
jle
call
mov
adc
cwtl
decb
sub
loopne
std
arpl
stc
mov
rclb
xor
lret
dec
rolb
xchg
jecxz
enter
dec
dec
adc
and
jo
cmp
xorl
test
sub
xstore-rng
cmpsl
add
inc
imul
pop
push
xor
xchg
jns
cwtl
fs
xor
jl,pt
lret
push
xor
dec
hlt
cli
push
pop
jl
dec
dec
in
and
rcrb
stos
and
pop
lods
fldcw
push
insb
pop
pusha
push
scas
mov
repz
or
mov
xor
mov
je
and
push
xchg
sub
leave
ret
mov
scas
stos
sti
outsl
fisttpl
or
mov
ljmp
mov
xor
sub
push
icebp
pop
xchg
jbe
and
sbb
sbb
lahf
idiv
and
icebp
mov
sub
or
iret
cwtd
adc
cmp
mov
mov
pushf
pop
mov
movsb
aaa
and
sub
repz
adc
nop
dec
test
jbe
mov
scas
mov
or
out
or
or
jg
lcall
and
adc
gs
mov
popa
scas
ret
adc
inc
mov
sbb
sbb
dec
cs
pusha
cmp
cmp
pop
xor
pop
in
xchg
shrl
mov
sbb
mov
xchg
sbb
cmp
ljmp
jno
push
test
mov
movsb
push
and
jle
jae
imul
pop
pop
lods
mov
pop
cvtps2pi
add
and
cwtl
decb
push
fucomp
xchg
test
mov
push
pop
sub
sahf
pop
sbb
dec
and
dec
jnp
mov
jb
xor
adc
filds
mov
push
das
adc
cwtl
loope
mov
push
div
insb
cmp
les
incb
icebp
data16
sti
mov
xor
inc
test
lret
add
and
lret
call
cmpl
jle
fidivl
gs
add
xchg
mov
cmp
sbbl
addb
mov
shrl
rcrb
xor
pop
scas
xchg
add
mov
rorl
sub
mov
xor
adc
sub
mov
testl
mov
shlb
sub
insb
repz
loopne
fnsave
je
xor
push
or
fdivl
cmpsl
sti
push
mov
mov
data16
sbbb
mov
fdiv
add
and
xchg
mov
stos
iret
jp
or
fwait
dec
loope
movsb
mov
sti
and
cli
adc
adc
xchg
in
iret
popf
push
bound
imul
testl
and
ret
sub
push
out
in
dec
pandn
inc
mov
movb
push
push
bnd
cmp
pop
adc
push
popf
std
lret
sub
and
mov
ss
push
xchg
mov
mov
mov
pushf
xchg
inc
insl
insb
out
fidivl
or
clc
mov
faddl
sbb
daa
and
xlat
jg
xchg
mov
pop
and
cwtl
jmp
mov
scas
cli
repz
int
pusha
mov
mov
xor
popa
andb
repnz
mov
cmpsl
repnz
pop
or
xchg
out
test
mov
and
cld
mov
push
jnp
jnp
xchg
cltd
stos
sti
and
add
insb
mov
lret
repz
movsl
leave
data16
adc
or
add
pop
push
mov
adc
cmp
xorl
hlt
jle
xchg
js
mov
les
and
sbb
jmp
add
sahf
cmp
and
sub
daa
cmp
lods
in
jge
xchg
inc
inc
fidivl
mov
cmc
test
sarb
push
adc
in
js
in
add
mov
push
dec
sbb
das
fildll
sar
in
mov
add
jne
mov
hlt
test
pop
inc
gs
rcll
roll
push
fisubs
and
adc
dec
mov
jno
mov
jg
mov
inc
nop
outsl
sti
fucomp
fucomi
xchg
incb
shll
xlat
pop
out
or
in
cld
pop
cmp
push
xor
pop
add
icebp
mov
shll
mov
cmc
xlat
inc
pop
pusha
stc
std
cltd
and
xchg
stc
cmpsb
pop
push
and
jle
sub
fnsave
sub
inc
lods
sar
lods
add
xlat
ffreep
les
mov
cld
cmpsb
inc
inc
and
mov
scas
neg
daa
jae
out
call
xor
sbb
mov
adc
inc
adc
mov
int3
inc
inc
xchg
dec
push
push
jmp
mov
loop
adc
add
xchg
clc
jb
pusha
nopl
loop
call
mov
icebp
addr16
sub
jp
or
and
dec
sti
xor
lods
fsin
mov
and
inc
addl
insl
pusha
push
jno
mov
inc
stc
pop
xchg
stc
dec
loop
sbb
sbb
inc
std
xor
xchg
sub
push
test
xor
adc
mov
push
lods
lods
lea
fldcw
cmp
jmp
xor
daa
cmp
or
sbb
sbb
outsl
jmp
inc
and
jmp
fnstsw
and
add
lods
add
mov
bound
sbb
cmp
xor
xchg
push
cmp
or
mulb
aad
pop
cmp
sub
and
ds
add
mov
xor
int
push
or
in
pop
movsb
loope
add
out
add
push
es
jae
and
jecxz
jp
stos
std
mov
add
arpl
arpl
fistl
xor
mov
jae
loopne
call
loop
out
jg
xchg
push
xor
xchg
jns
into
sarl
add
xchg
and
enter
icebp
bound
xchg
lods
inc
pushf
adc
dec
es
pusha
push
int
adc
pop
and
mov
js
and
sahf
or
fs
sub
xchg
ss
inc
add
mov
adc
sbb
mov
cmp
pop
mov
mov
dec
inc
mov
cmp
pop
and
testl
fwait
in
cltd
xor
mov
xor
xor
lret
pop
add
hlt
cmp
aam
inc
adc
push
test
pop
xor
push
int
jecxz
shrb
pop
fidivrl
das
sahf
push
pop
mov
xchg
add
mov
xchg
mov
mov
sub
data16
dec
aam
jns
sub
xchg
and
sbb
mov
cwtl
insl
jle
xorb
int
nop
sub
dec
pop
dec
ss
stc
adc
mov
mov
icebp
and
popf
mov
stc
rcrb
fimuls
js
dec
pop
hlt
jnp
push
mov
dec
push
in
adcb
das
je
popa
inc
in
clc
mov
sub
adc
xor
sarb
xlat
dec
orb
adc
out
out
cmp
pop
cli
mov
cli
xchg
test
mov
scas
stc
mov
dec
lret
addr16
imul
leave
adc
jb
loop
xor
addr16
inc
imul
movd
and
push
cs
cmc
sbbl
push
and
rorl
cmp
dec
fcmovnu
cmpsb
out
push
jne
test
push
mov
out
pop
jecxz
mov
test
and
mov
push
in
jne
fwait
jno
inc
in
inc
pushf
subb
repz
cmc
fildl
stos
lret
mov
inc
cmpsb
xchg
aaa
sbb
jne
adc
aam
pop
outsb
jle
icebp
gs
leave
mov
out
fcomps
xchg
dec
jne
repz
jbe
lcall
inc
inc
insb
fsubs
xchg
rcll
mov
addl
mov
das
jmp
fsubs
leave
sbb
stos
xchg
das
xor
push
or
adc
xor
pushl
addb
js
das
ds
rorb
icebp
imul
add
es
loope
xor
add
divl
jb
xlat
outsb
and
pop
push
mov
lods
inc
js
aam
out
fdivr
fidivrl
int3
fsubrl
push
cmpb
lods
push
mov
loopne
clc
xchg
dec
fucomp
jl
jne
push
outsl
adc
lea
inc
dec
jecxz
push
adc
and
out
cvttps2pi
mov
mov
or
jnp
add
adc
fsubr
sub
call
loope
sbb
xor
xor
cmc
jp
and
sub
jge
xorl
pop
test
hlt
adc
pusha
adc
pop
enter
inc
mov
int
aas
push
lret
out
xchg
rcrb
pop
scas
jl
xor
mov
es
movsl
lahf
aas
popa
lods
mov
in
ljmp
int
xor
clc
or
mov
push
cmp
xchg
mov
jne
incl
xchg
mov
enter
mov
cmp
sub
pop
lock
xor
js
mov
cmpsb
push
sub
lcall
mov
repnz
sbbb
or
cmc
cmc
mulb
mov
cltd
mov
cmp
outsb
push
mov
fwait
scas
outsb
loope
adc
and
call
rorb
clc
and
jns
mov
add
sub
xor
dec
dec
jmp
popf
shll
sbb
pop
add
dec
jecxz
xor
add
mov
mov
outsb
bound
rorl
jmp
cmp
es
sbb
arpl
push
cmp
fdivr
push
add
fistl
aam
in
fldenv
xchg
mov
push
adc
dec
jecxz
clc
mov
mov
adc
out
xchg
xchg
mov
lahf
xor
push
loope
inc
xchg
dec
jmp
and
pop
mov
jecxz
jne
mov
cld
mov
jg
lods
adc
inc
push
subl
ret
cmp
dec
pop
pushf
cmp
out
rcll
inc
test
xchg
fidivl
and
enter
cli
test
sub
cmpsb
cmc
or
push
lods
mov
lcall
push
fcmovne
xor
xor
pushf
xor
push
das
repz
sbb
pop
movsl
testl
sbb
int3
lods
test
fisubrl
rclb
add
add
es
imul
xchg
imul
inc
outsb
sub
mov
lods
in
aam
into
arpl
cltd
jnp
lret
sahf
cmp
xchg
popa
cmp
sub
mov
xchg
mov
rcll
or
add
xor
mov
dec
jecxz
sub
xor
mov
xor
cmc
in
cli
pusha
outsl
lods
xchg
mov
leave
cli
test
xchg
mov
sub
jecxz,pn
cwtl
cwtl
mov
enter
in
xchg
out
sbb
daa
fcomp
or
vandnps
xor
shlb
out
repz
xor
mov
dec
adc
jg
mov
cmpsl
lods
add
jb
sub
pop
dec
fidivs
scas
cld
and
mov
xchg
push
push
mulb
mov
pop
pop
fnstenv
pop
jae
inc
sti
imul
mov
test
inc
or
xor
scas
xor
andl
adc
inc
loope
cmpsb
cmp
sub
out
popf
loope
jg
mov
sub
push
lods
dec
add
xchg
xor
and
mov
mov
jmp
lcall
mov
push
cwtl
daa
movb
rcr
arpl
fstps
pop
push
jmp
push
imulb
insl
mov
cli
frstor
cmp
adcl
leave
incl
sahf
test
adc
sbb
arpl
adc
adc
sbb
insb
repnz
lock
mov
jmp
adc
pop
je
fstl
xor
mov
inc
in
std
shl
mov
mov
mov
mov
test
movsb
lods
pop
cmpb
inc
sbb
xor
shlb
jne
push
icebp
mov
push
inc
pushf
enter
mov
test
push
xchg
xor
aas
mov
sub
adc
xor
cmpsb
cmp
sbb
push
negb
cltd
mov
xchg
jns
xor
xchg
and
mov
outsl
out
and
mov
xchg
xor
or
outsb
jmp
or
jae
cmp
sbb
add
rolb
jge
xor
out
je
mov
push
mov
xchg
mov
shlb
mov
outsb
out
repz
int3
push
jle
add
push
data16
sbb
xchg
xor
or
mov
call
add
pop
lret
xor
push
loope
dec
jmp
push
dec
xchg
dec
push
mov
cmp
xchg
sbb
or
sbb
imull
xchg
sahf
int
test
push
cmpsl
push
mov
test
les
add
sub
jae
sub
out
aaa
pushf
xor
and
sbb
fsubl
scas
pop
xor
call
push
sub
gs
stos
jge
cwtl
and
in
xchg
pop
imul
outsb
ret
push
insl
add
icebp
divl
or
fldt
aaa
pop
jmp
rclb
add
mov
bound
mov
push
loope
mov
mov
es
faddp
adc
fcmovnbe
push
stos
fwait
notb
shlb
repnz
rcll
lret
bound
inc
hlt
mov
cmpsb
adc
or
int3
scas
fistps
cmp
adc
stc
mov
in
pop
xchg
shl
shl
adc
lret
fidivrl
lret
push
push
cmp
push
jo
and
fsub
mov
sti
sti
fcoml
push
sbb
and
inc
and
cs
mov
aas
jb
jmp
les
rcrb
out
dec
stos
push
es
dec
dec
inc
fisubl
jecxz
xchg
cltd
dec
ljmp
sbb
sbb
test
mov
outsl
push
imul
data16
or
icebp
sarb
notl
jle
sbb
nop
outsl
scas
sbb
inc
ljmp
push
int3
adc
aas
mov
jmp
aaa
xlat
add
push
add
xor
and
inc
popf
adc
lds
xchg
dec
add
fiadds
loope
pushl
mov
sub
inc
inc
xorb
mov
push
pop
inc
mov
fisubl
push
es
nop
movsl
jmp
mov
xor
dec
sbb
int3
and
and
dec
js
mov
seto
fisttpl
pop
fstps
adc
mov
sbb
xlat
aad
arpl
cmp
jnp
lods
lret
mov
inc
push
pop
mov
test
dec
mov
adc
sub
jg
mov
xchg
enter
xchg
or
shl
cmc
jno
cmc
lea
push
dec
fbstp
jnp
cmp
jge
dec
stos
andl
and
dec
enter
xor
push
int3
dec
lret
cmpsb
sti
int
ret
inc
in
je
test
stc
in
cmpl
aam
jp
aad
out
xchg
pop
enter
inc
mov
add
sbb
pop
cmp
push
inc
gs
xor
or
bound
add
inc
inc
sbb
icebp
scas
mov
dec
jecxz
fs
mov
sub
inc
hlt
sub
adc
lcall
cli
mov
jae
test
testl
cli
orl
or
shlb
and
bound
push
fs
fsubrp
ja
loope
dec
mov
scas
lods
pop
out
rclb
mov
jmp
add
xchg
fdiv
xchg
mov
ret
mov
and
shlb
fmuls
xchg
inc
fxch
ja
in
mov
and
in
and
mov
rolb
fdivl
fldl
cli
xchg
sahf
and
decl
sbb
push
lods
ret
adc
stos
push
and
inc
dec
pop
std
sub
mov
insb
add
mov
arpl
mov
enter
push
xorb
jo
or
lcall
xchg
xor
add
inc
iret
jo
mov
xchg
lret
fistps
cmp
loope
mov
push
in
mov
subb
mov
aad
and
sub
stc
in
cmc
testb
mov
mov
pushf
leave
cmpsl
cmp
test
lcall
cltd
in
cld
push
pop
daa
lret
push
cmpsl
add
sub
sbb
aas
dec
inc
dec
pop
cmc
jnp
dec
in
pop
jge
inc
dec
lcall
xchg
shll
arpl
out
ss
negl
xlat
jp
cmp
mov
cli
loope
xlat
outsb
inc
dec
lret
xorb
mov
inc
adc
jb
hlt
mov
movl
mov
loopne
cwtl
pop
adc
out
icebp
fidivl
mov
jecxz
mov
sbb
dec
xchg
xlat
lock
push
xor
mov
inc
sbb
jp
jmp
push
ljmp
pop
mov
dec
pop
pop
iret
push
jo
sbb
ljmp
js
daa
push
into
cltd
xchg
xor
test
inc
and
inc
xchg
xchg
or
out
stos
cltd
aad
movsb
fidivl
mov
push
and
mov
pop
push
fwait
jb
sub
fidivrl
lods
scas
sti
mov
mov
mov
nop
push
imul
aas
loopne
popf
xor
xorl
lds
sbb
rcl
push
jbe
mov
dec
jno
cmc
out
lahf
enter
aam
shl
cmp
fwait
jecxz
fsub
xor
pop
inc
fdivrl
lock
xchg
jo
ficoml
sbb
xor
and
mov
xchg
test
insb
sub
imul
sbb
popa
cmp
pusha
dec
lds
mov
push
push
int3
popa
orl
in
rol
sub
adc
mov
or
cmp
jecxz
adc
and
xor
jmp
pop
jp
int3
sarb
cmp
or
ret
cwtl
test
call
lahf
cmpsb
cs
imul
jne
lcall
mov
sbbl
fwait
leave
adcb
mov
and
dec
xchg
test
push
xchg
hlt
cwtl
xchg
shlb
add
sub
inc
rclb
push
movsb
pop
sahf
std
ljmp
inc
test
stc
dec
notl
stc
dec
sbb
pop
sbb
sub
fmul
sub
loop
rolb
dec
sbb
jb
iret
jae
divl
xor
adcl
jno
pop
dec
ret
mov
lds
dec
sbb
fcoms
xchg
add
and
fidivs
shl
fimuls
jp
sti
lret
jnp
aas
dec
lods
mov
xchg
mulb
jns
test
leave
pushf
push
add
stos
rol
test
mov
mov
scas
xchg
mov
out
jno
and
cmpsb
dec
hlt
or
cmp
lea
cmp
imul
rol
mov
sbbl
outsl
lahf
lods
mov
push
mov
adc
lea
int3
pop
dec
ss
adc
imul
or
adc
out
xor
shl
scas
inc
addr16
lcall
mov
jb
xchg
and
adc
dec
ret
lcall
push
call
mov
mov
fstl
sub
pushl
xor
jl
inc
fisubl
sti
xchg
pop
ret
stos
mov
xlat
sbb
dec
in
aas
pop
sbbl
push
cmp
into
insl
xor
or
mov
ret
and
imul
mov
mov
xchg
cs
jg
sahf
pusha
fwait
sub
inc
andl
mov
aad
mov
xor
dec
fistps
dec
mov
pop
cmp
push
daa
dec
in
mov
jge
test
ret
jl
mov
dec
sub
cld
pop
sbbl
jg
lahf
ss
xchg
popf
mov
lods
xlat
fucomip
rcrl
pop
enter
outsl
int
imul
cmpsl
cmp
adc
pop
add
cmc
xor
arpl
insb
mov
add
cwtl
pop
ss
nop
sub
clc
lods
xor
cli
lods
ljmp
and
fstpt
fucomp
push
stos
inc
mov
adc
popf
and
daa
movsl
mov
enter
cmpsl
repnz
jnp
popa
jns
push
dec
enter
xchg
pop
cmp
out
cmp
les
cmc
xchg
xchg
lahf
pop
lods
cmc
clc
push
insb
in
sahf
je
pop
int3
push
sub
fwait
and
mov
xor
jle
sub
dec
add
push
push
xor
cmp
dec
divl
push
fidivrs
fisubl
in
mov
push
dec
lret
ret
inc
ret
or
mov
dec
dec
mov
inc
fimull
loopne
cmpsl
push
dec
ficompl
sbb
jno
adc
add
cmpsb
insl
lcall
mov
cmc
jp
ret
sti
iret
into
in
add
shll
sbb
push
movsl
and
mov
or
in
xchg
mov
push
fdivrp
pop
sbb
pop
data16
adc
push
in
push
and
add
push
int3
out
cmp
incl
pusha
jg
sbb
repnz
inc
mov
sub
sarl
or
xor
and
dec
fmuls
aas
ret
insb
mov
fpatan
jle
pop
loopne
push
mov
xorl
add
test
add
xor
sbb
jle
sub
enter
test
frstpm(287
enter
or
lods
or
arpl
lods
push
inc
jno
shrl
fs
sahf
outsb
dec
loope
test
icebp
mov
adc
push
or
and
mov
enter
es
xchg
hlt
leave
or
sbb
and
inc
fisubs
test
test
xor
fcomip
jp
and
inc
dec
xchg
js
jns
lret
add
mov
push
cmp
je
mov
dec
subl
pop
nop
fs
data16
loope
pusha
pushf
mov
cwtl
loope
arpl
lock
or
jmp
and
lret
push
es
xchg
mov
jle
sbb
faddl
test
sub
cmp
aas
aaa
jl
das
mov
dec
call
or
jae
pop
inc
ljmp
jno
scas
push
pop
inc
or
pop
loop
int
xchg
test
adc
ror
ljmp
sti
dec
lret
pop
aas
jge
shl
cs
xor
in
sub
adc
aam
std
pop
popa
mov
fidivs
pushf
out
sahf
xchg
repnz
aad
leave
mov
out
inc
or
mov
or
sub
inc
inc
pop
mov
push
or
push
mov
pushf
sbb
iret
xchg
fcoms
mov
cmp
int3
or
cmp
dec
add
and
sbb
ret
push
mov
mov
in
pop
push
add
icebp
fildll
push
andb
fcomps
cs
jne
dec
pop
push
inc
cmp
dec
movsl
sahf
jle
icebp
mov
mov
inc
rcr
testb
test
sub
inc
pop
pop
add
jp
jnp
add
fdivrl
mov
mov
jg
invd
pop
cmpsl
sub
pop
pop
loope
out
scas
push
stc
sbb
outsb
aas
bound
xor
push
cmc
mov
mov
mov
imul
cmc
loopne
inc
mov
jns
jge
xor
mov
push
mov
fsubr
add
jae
add
sti
mov
mov
pop
leave
test
cmp
rcrb
aad
scas
xchg
loop
dec
and
icebp
mov
stc
movd
dec
push
and
mov
testl
lds
stc
pop
cli
test
fwait
in
int
repz
add
cltd
xorb
scas
jmp
pop
ljmp
or
push
adc
rol
cmp
mov
idivl
push
sbb
int3
cmp
cwtl
das
insl
cmpsb
fldenv
mov
xor
ja
inc
push
call
insl
push
sahf
into
push
jecxz
movzwl
cmp
mov
fisttpl
or
shrl
push
push
sbb
icebp
dec
lock
jne
pushf
iret
xchg
and
push
pop
jno
enter
test
fwait
add
lret
add
aaa
nop
cld
mov
mov
jg
sub
or
arpl
mov
jmp
addl
mov
push
arpl
pushf
daa
mov
je
inc
cmpsl
gs
dec
fs
in
or
mov
sbbb
push
mov
sub
mov
fnsave
adc
or
pop
imul
loopne
pop
les
and
sub
mov
push
xchg
stos
and
loope
into
neg
repnz
call
mov
push
nop
sub
call
andb
gs
inc
pop
idivb
cmpxchg
cmp
out
cld
dec
mov
mov
push
dec
fcmovb
or
popa
jo
test
dec
cwtl
hlt
aaa
lret
adc
xor
mov
stc
cmp
cmpl
cmc
mov
fcmovnu
lods
jge
dec
negb
mov
jo
adc
aad
cli
pop
roll
dec
mov
aam
mov
sbb
aas
adc
mov
ficompl
popf
jno
mov
cmp
clc
xchg
pusha
pop
jge
sbb
aas
push
xchg
mov
fisubl
or
jnp
mov
add
add
sbb
call
and
sbb
js
movsl
mov
lock
js
insl
faddl
inc
fsubrl
inc
hlt
cmp
lods
jmp
xchg
es
xor
xor
mov
inc
cmp
dec
loopne
sbb
hlt
mov
loopne
pop
dec
mov
sbb
int
push
xchg
add
add
iret
in
int
addr16
iret
dec
mov
cltd
aaa
mov
into
push
es
adc
aaa
xchg
fs
out
into
shl
dec
cltd
loop
aas
dec
mov
jl
int3
pop
daa
sbb
aas
mov
mov
fincstp
cmp
ret
mov
xchg
lds
xlat
movsb
jecxz
addr16
enter
lock
movsl
into
insb
xor
and
jnp,pn
mov
js
push
pop
or
jmp
into
in
mov
cltd
sub
adc
into
sbb
push
rcrl
mov
dec
inc
imul
jbe
dec
insb
aaa
mov
out
push
cld
pop
jmp
sub
jl
roll
push
jbe
sbb
test
inc
xorb
iret
sub
lret
pusha
mov
js
cmp
sbbb
or
xchg
pop
lock
jns
mov
cmpsb
fs
xor
gs
aad
loop
adc
leave
out
mov
arpl
dec
add
mov
fmuls
out
insb
mov
in
mov
test
enter
pop
inc
fmul
fimull
dec
sub
fsub
call
sbbb
fnstenv
or
out
mov
push
ret
fcomps
addb
aad
pop
js
sub
pusha
fwait
mov
jb
sub
in
add
pop
dec
push
mov
and
cmp
mov
sbb
pop
scas
sub
dec
or
dec
lahf
adcl
call
push
adc
lret
lret
push
push
lahf
push
inc
mov
rcr
repnz
pop
lcall
insb
jp
inc
jo
adc
mov
shlb
adcl
mov
dec
shrl
cmp
sbb
adc
xchg
adc
stc
add
insb
jle
lcall
and
xchg
inc
push
mov
ret
mov
push
cmp
add
mov
test
rorl
das
pop
call
pop
and
xchg
loope
outsl
jae
sub
mov
ret
stc
and
movsb
mov
mov
push
je
popf
call
out
loopne
pop
jg
out
in
std
xchg
sub
jne
hlt
ret
mov
push
cmp
test
mov
pop
movsl
pop
out
jns
imul
dec
mov
ficoml
iret
iretw
jb
inc
movsb
out
and
cli
dec
iret
data16
lods
inc
dec
xchg
mov
cwtl
inc
fxch
jmp
lods
inc
mov
inc
fld
jmp
lods
inc
jae
and
add
scas
inc
adc
and
and
into
pop
xchg
cld
test
test
jmp
fldl
fidivrs
rolb
into
pop
gs
inc
inc
mov
cmp
jmp
ds
dec
ds
movsb
call
out
add
in
cmp
jp
dec
mov
jne
insb
cmpsl
stc
xchg
mov
mov
pushf
jb
cltd
sub
mov
in
lea
xchg
xchg
mov
pop
sub
lock
cmp
inc
hlt
cli
mov
or
cmp
push
or
pop
mov
mov
hlt
test
pop
push
in
loopne
in
jmp
or
bound
daa
rolb
pop
aam
pop
std
cmp
stc
iret
aam
outsb
pop
dec
out
scas
cmp
mov
cmp
shlb
pop
inc
sbb
enter
mov
in
daa
test
stc
pop
loope
mov
and
mov
je
jmp
cmpsb
cmp
lods
movsb
cmp
inc
sub
fcoms
imulb
sbb
mov
stc
xor
add
cltd
xor
sbb
xor
pushf
mov
nop
lods
outsl
push
movsb
hlt
inc
out
and
inc
mov
adc
and
mov
jmp
and
ret
and
jbe
imulb
lds
fwait
xor
das
jp
bound
xlat
fsubrl
sub
mov
inc
cmpsl
mov
or
lds
mov
imul
data16
movsb
call
add
lock
addr16
fwait
cmpsb
ret
fidivs
or
pop
lcall
out
ret
mov
sub
sbb
jg
ljmp
mov
inc
and
in
fisttpll
rcrb
jp
in
add
jb
sbb
fbld
jmp
lock
lods
jae
stc
add
cmp
stos
sarb
cmp
mov
push
or
lcall
xchg
cltd
inc
fldl
mov
jmp
pushf
inc
imul
pushf
fwait
sbb
push
jl
sbb
outsl
scas
sub
js
cld
call
mov
add
xchg
stos
mov
sub
fwait
push
aas
icebp
les
js
add
jo
mov
cli
or
jg
xor
repz
mov
mov
xor
xchg
vxorpd
sbb
mov
cmp
jne
sbb
cmp
insb
jo
cmp
mov
ret
cmpsb
sti
or
mov
inc
test
ja
mov
div
dec
xor
cltd
les
cmpl
pop
repnz
fcmovnb
scas
pop
sbbl
jbe
dec
in
xchg
movsl
jo
int
scas
cltd
fldt
notb
int
and
out
cli
pop
inc
insl
pusha
push
mov
addb
adc
fcmovnb
pop
ljmp
outsb
cld
xchg
dec
mov
fiaddl
cmp
sub
mov
cmp
cmp
int
adc
andl
jmp
cwtl
dec
sub
aas
mov
pop
pop
cmp
cs
mov
pop
lods
add
iret
sarl
mov
sub
jnp
mov
add
aaa
dec
inc
repnz
mov
cmp
adc
mov
xchg
das
pop
fsubrl
add
sub
cmp
jecxz
stc
sbb
xor
rclb
out
sub
push
insb
imul
or
mov
cmpsl
dec
push
jg
add
ret
stos
std
mov
xchg
adc
or
icebp
mov
out
and
mov
call
pop
aad
ss
lds
mov
or
add
test
aas
and
out
mov
popa
scas
call
pop
or
lahf
xor
and
insb
jg
push
ret
pop
xchg
pop
lds
pusha
cmp
add
out
pusha
bound
sbb
in
inc
push
mov
shl
pop
lock
fwait
cmpsl
dec
xlat
ja
push
out
mov
xchg
lods
mov
and
jmp
imul
fwait
xchg
ljmp
add
xchg
pop
mov
mov
or
pop
mov
mov
or
stc
jl
mov
sbb
pop
cld
push
subb
sbb
mov
insb
orb
in
aad
push
ret
fpatan
push
mov
add
jne
imul
mov
inc
inc
xlat
ja
movsb
inc
lret
cmp
sub
xor
jmp
sbb
mov
pop
stos
sub
arpl
and
addr16
push
cmp
dec
loopne
test
mov
sub
add
aad
popa
push
outsl
jmp
loopne
leave
fisttpl
loope
dec
lahf
or
push
popf
push
inc
adc
pop
sbb
cmc
gs
inc
add
clc
pop
push
movsb
imull
jb
or
or
insb
push
mov
mov
mov
jl
lahf
add
sbb
outsl
sahf
subb
getsec
lret
pop
xor
fdivrl
stos
push
das
or
mov
cmp
or
jge
sub
ds
lock
fsubrs
push
xchg
lret
sti
repz
call
movl
mov
test
sub
jbe
cmp
push
insl
dec
mov
ljmp
test
jno
call
mov
insl
and
ffree
scas
mov
jecxz
or
lcall
stos
aam
cmpl
push
cmp
lock
into
bswap
jle
inc
fisubrs
stc
arpl
dec
clc
push
push
mov
arpl
mov
xchg
jbe
dec
pusha
adcl
cmpb
pop
lcall
cwtl
sub
pop
xor
rolb
push
xchg
adc
xor
daa
popa
and
stc
clc
inc
sbb
push
loop
ret
std
popf
call
sub
sub
insb
and
cmpsb
adc
adc
lds
push
adc
cmpsl
push
gs
or
mov
cmp
xlat
loop
aad
fcmovnbe
in
hlt
jmp
es
pop
scas
xor
push
mov
lret
jo
dec
push
xor
mov
fdivs
xlat
add
pop
mov
sahf
lods
adcb
cmc
push
adc
or
xchg
jmp
mov
xor
mov
aas
mov
push
dec
in
xchg
mov
insb
jle
cwtl
push
popf
mov
and
sahf
pusha
inc
rcll
pop
or
fs
xchg
out
cmp
sahf
pop
lret
pop
and
dec
stos
inc
fdivrs
sub
sub
jbe
scas
stos
jp
fiaddl
enter
out
stc
mov
sbbb
jb
and
cmpsb
enter
adc
add
es
fwait
inc
cmp
sti
into
hlt
xchg
outsl
scas
leave
orb
dec
icebp
adc
das
cwtl
out
dec
call
icebp
dec
outsl
lahf
daa
cmpl
sub
subl
inc
sbb
nop
stos
xchg
jg
bound
add
lret
mov
mov
jg
lds
bound
scas
in
adc
mov
xlat
xchg
mov
adcb
aam
cmp
lods
and
aas
int3
cmp
pop
pop
int3
sbb
js
cmp
clc
daa
dec
inc
data16
jg
hlt
mov
pop
cmp
je
xchg
mov
cmp
sub
xor
jno
inc
push
rcrb
popa
ret
mov
in
sub
in
push
jp
fbstp
adc
xchg
xor
xor
cmp
xor
mov
ret
cmp
pusha
les
sub
inc
push
cwtl
pop
outsb
inc
jae
or
fdivl
es
fcoms
mov
jmp
arpl
jbe
sbb
mov
ret
test
or
into
shrb
hlt
aad
mov
out
ds
fcmovnbe
add
imul
sbb
xor
out
sahf
test
ljmp
xchg
in
aas
sbb
jl
hlt
jecxz
pop
jge
mov
mov
jle
lret
adc
sti
inc
push
or
or
mov
jl
cltd
pusha
rclb
daa
jbe
sbb
and
xchg
and
xor
cmpsb
gs
push
int3
aas
lods
inc
mov
fildl
testl
jo
clc
cmpb
lahf
jno
xchg
inc
inc
mov
repnz
outsb
pop
paddq
or
dec
add
jmp
out
push
int
inc
int3
add
addr16
stos
dec
push
nop
xor
or
and
iret
lcall
loope
mov
lods
jae
loopne
cmp
ljmp
and
dec
clc
jb
pop
mov
sbb
ret
cwtl
stos
dec
in
shrb
data16
cwtl
cmpsb
out
std
mov
xchg
pop
popf
mov
leave
outsl
push
sti
fdivl
gs
adc
dec
add
clc
or
and
push
fisubrs
fists
mov
mov
fstps
sbb
sbb
arpl
cmpsb
js
jo
in
not
push
push
cmpsb
push
xor
popa
clc
sub
cmp
adcb
jp
push
popf
mov
mov
inc
and
rcl
jl
sub
out
shll
or
testl
push
xor
lcall
cwtl
das
arpl
stc
push
cmovns
cmc
add
sbb
cltd
sbb
popl
push
add
lret
or
mov
sub
jge
cmp
cmc
dec
dec
cmp
insb
cmp
shll
inc
sub
push
push
cmp
gs
sub
mov
push
scas
pop
andb
rep
sub
clc
or
cs
cs
jno
push
andl
add
or
vpextrw
sub
pop
mov
lea
adcl
cmp
mov
fwait
std
xchg
or
loop
stos
pop
mov
or
mov
xchg
and
mov
push
jne
push
mov
sahf
inc
fs
loopne
dec
push
loop
add
out
lods
ss
pop
xor
lods
js
lea
inc
and
imul
jmp
jns
sarl
sbb
xor
sbb
dec
add
add
and
hlt
mov
jg
iret
addr16
mov
testb
xchg
into
js
test
movsb
lahf
popa
in
test
pop
das
clc
xchg
cmpl
mov
push
adc
mov
dec
data16
add
dec
and
jno
cmp
test
add
addr16
test
je
pop
jle
mov
cmpsb
lret
je,pn
test
movsl
fldcw
inc
mov
xchg
sub
push
in
cld
xchg
sub
rol
out
add
into
and
sbb
dec
movsl
leave
adc
dec
fildll
icebp
mov
pop
pushf
cmp
inc
adc
push
popf
inc
insl
sub
mov
cli
push
mov
fdiv
and
es
push
lret
xlat
jp
pop
lods
clc
push
inc
cmp
mov
in
sub
and
mov
and
add
xor
add
adc
int
jl
pop
fwait
out
mov
xchg
arpl
fwait
test
cmp
cld
jg
in
test
push
lods
dec
mov
or
add
ja
xor
js
add
push
adc
inc
loopne
rorb
pop
sbb
cmp
push
and
push
cltd
xorl
mov
inc
push
mov
pop
loope
fwait
rclw
mov
and
xchg
jle
push
adc
aaa
hlt
pop
mov
aaa
dec
ja
jae
inc
adc
das
shrb
jns
shll
mov
jp
lret
sarb
lret
test
lahf
or
clc
xchg
sub
mov
mov
adc
pop
filds
gs
mov
ljmp
sarl
int
xor
negb
lret
xchg
push
loope
dec
ficomps
push
sub
test
dec
jge
in
jae
mov
xchg
adcl
ljmp
movsb
cmp
mov
xchg
mov
mov
pop
adc
jle
or
or
mov
mov
test
inc
js
xchg
popf
xor
jb
inc
xor
dec
pop
xor
mov
das
xor
xchg
lds
xchg
inc
xchg
out
push
cmpsl
cmpsl
lds
enter
js
inc
testb
lods
stos
jmp
or
mull
jo
xchg
xchg
mov
xor
lahf
xor
inc
jmp
es
dec
fldl2t
out
sbb
jno
aam
jp
enter
cmp
js
mov
ja
sub
hlt
sub
lcall
icebp
mov
out
dec
dec
ficompl
aad
sub
cmp
inc
pusha
clc
pop
ret
cmp
add
lahf
ss
push
xchg
pusha
imul
inc
in
mov
in
inc
mov
not
ret
cmp
adc
cmp
push
imul
repz
sahf
push
xchg
js
pusha
and
lods
sub
leave
and
out
psubw
cmp
les
mov
push
inc
movsl
insl
cmpsl
ds
lret
xchg
xchg
xchg
mov
push
imul
test
ret
sbb
aaa
or
sbb
pushf
daa
in
push
dec
movsb
mov
repz
push
mov
cmc
adc
sbb
and
data16
mov
in
adc
adc
jne
fdivrl
imulb
add
movsl
dec
dec
mov
dec
push
imul
scas
js
hlt
push
shrb
orl
xchg
xor
decb
mov
jecxz
push
std
mov
or
insb
enter
lahf
rcrl
ljmp
mov
mov
in
pop
pop
add
jecxz
jg
jo
or
adc
in
les
jecxz
or
rcrl
fisubs
pop
int3
fildll
hlt
mov
cmp
imul
and
cltd
cmp
movsb
cmp
cmp
pop
test
pop
xlat
cmp
cmp
aam
sbb
xchg
bound
xor
push
jns
test
fdivs
scas
repz
xchg
mov
nop
das
sub
fwait
sti
fs
leave
movsl
xlat
dec
jecxz
test
mov
xchg
popa
gs
push
aaa
test
xchg
mov
lods
mov
loope
xor
mov
les
mov
and
lahf
add
push
loop
aaa
and
inc
inc
cltd
lcall
ret
cmp
fldl2t
out
xchg
addl
in
inc
dec
hlt
aad
mov
in
or
cs
dec
stos
push
out
and
and
insb
lock
adcb
scas
xchg
scas
push
push
fwait
xor
dec
lahf
bnd
out
mov
mov
cli
int
sarl
inc
mov
jno
mov
or
cmp
sub
outsl
dec
inc
jno
lods
pop
sbb
lahf
test
dec
clc
es
insb
js
xor
push
push
dec
stos
ds
mov
sub
fmull
fsubrp
cmp
gs
ss
call
fstp
insb
jnp
sahf
cld
call
pop
sub
sahf
hlt
test
push
pop
cwtl
xor
pop
mov
pusha
fidivs
sbb
ss
or
fsts
jg
ljmp
sub
jns
dec
pop
sbb
xchg
ret
cmp
xor
or
pop
adcb
aas
scas
inc
jno
ss
mov
test
sbb
adc
insb
adc
jnp
dec
pop
push
push
cltd
je
shll
dec
push
and
imul
aas
dec
dec
mov
fsubs
imul
inc
arpl
jb
or
stc
or
mov
ret
adc
insb
add
xor
or
add
fistpl
jo
mov
sbb
jle
xor
cmpsl
xchg
sbb
lods
inc
fcomps
pop
fbld
and
lds
in
incb
es
popa
pusha
into
call
add
xor
ret
pop
add
loopne
sar
nop
mov
enter
dec
adcl
adc
pop
lret
push
out
mov
or
faddl
aam
addr16
lods
arpl
mov
stos
dec
daa
hlt
mov
dec
orl
fnstcw
dec
andl
lcall
sub
cmp
xchg
lret
dec
es
mov
fisttps
fistpll
push
mov
fmull
std
sti
mov
neg
inc
adc
scas
fstpl
mov
xchg
jbe
repz
out
xlat
and
add
lea
adc
adc
insl
stos
sub
cmp
rolb
xor
and
inc
fucom
xchg
sbbl
stos
bound
ror
xor
sub
in
incb
mov
dec
jle
lcall
fsubl
sahf
in
cmp
xor
cmpsl
push
inc
les
lock
imul
add
sbbl
jbe
inc
jle
stc
push
xchg
xchg
lcall
cld
sub
xor
in
pop
jmp
imul
xchg
pop
insl
mov
sbb
outsb
sub
or
pop
cmc
movsl
push
pop
cltd
mov
xchg
hlt
sahf
shll
mov
sub
lret
idivb
add
loopne
or
push
add
jle
xor
cmp
xchg
jmp
add
imul
cmc
adc
mov
lahf
push
test
or
xor
and
sub
sarl
sub
icebp
iret
sarl
or
lahf
in
nop
test
jnp
xchg
xor
jno
jne
loope
test
rcl
cmc
lea
movsb
jl
jecxz
push
jns
jecxz
dec
stos
jae
lods
cs
shl
stc
and
cmp
inc
leave
mov
add
mov
lcall
pop
out
dec
mov
push
in
pop
xchg
scas
push
mov
ret
mov
scas
inc
adc
jno
cltd
insl
xchg
push
xchg
push
sbb
mov
push
jne
subl
mov
dec
mov
fisubl
out
nop
and
add
negb
dec
push
pushf
jno
mov
push
push
sub
or
push
scas
mov
loope
cmp
stos
popa
shlb
int3
push
pusha
shr
inc
negl
in
test
lret
dec
stos
lret
popa
stc
out
pop
call
gs
jge
pop
cmp
aas
insl
cmp
not
inc
push
add
push
stos
fnsave
and
xor
add
leave
mov
adcb
jb
das
xorl
xchg
cmc
nop
and
mov
mov
fdivrs
scas
pop
addr16
scas
stos
mov
or
jmp
sbb
or
loope
xchg
dec
fldl2t
jbe
fsubl
call
jbe
push
sbb
dec
out
jge
or
xor
or
xchg
jae
mov
or
scas
aad
mov
pushf
pop
movsb
xchg
fbld
cmpl
xchg
inc
xor
jo
dec
aad
out
sti
push
push
les
sub
movsb
mov
lret
bound
pop
jno
dec
clc
sub
push
scas
mov
dec
loopne
fcomps
shlb
push
mov
lea
inc
or
xor
pop
push
jno
sub
dec
loop
push
dec
add
xchg
jns
mov
add
fstl
in
ja
inc
stos
push
and
inc
or
jmp
cmp
sbb
jle
adc
outsl
jns
out
cs
cld
push
push
inc
cmp
inc
data16
mov
out
lods
xchg
aas
pop
mov
adc
pop
ss
leave
push
leave
cs
fildll
and
shlb
iret
int
jae
call
sbb
mov
stc
and
lea
insb
loopne
xchg
sbb
out
imul
and
mov
pop
lods
push
cmp
lahf
xor
or
cli
pushf
dec
adc
add
mov
or
jnp
loop
scas
xchg
ljmp
insb
mov
inc
add
xor
xor
adc
inc
xchg
shrl
gs
sar
jge
sbb
call
sub
jns
pop
sub
add
jns
aas
sub
pop
mov
inc
or
cltd
enter
mov
jno
mov
cmpsb
or
inc
mov
xchg
cs
out
pop
ds
jge
push
fucomi
std
das
add
or
push
add
test
cmp
out
test
pop
dec
fsubrp
loop
add
dec
xor
int
push
enter
sub
and
mov
popa
pushf
in
rep
xchg
pop
mov
pop
loope
mov
dec
loopne
add
lahf
and
into
or
ret
stos
mov
dec
push
mov
jle
jae
push
movsl
scas
add
sub
outsl
pushf
jbe
sbb
arpl
stc
std
inc
sub
jmp
addr16
push
fucom
sub
dec
cmp
jmp
sbb
jle
sbb
es
cs
cld
and
xchg
aad
andl
jb
add
dec
adc
mov
shrl
out
jle
push
stos
sub
push
push
icebp
push
testb
pop
and
repz
pop
in
stc
fmul
mov
sub
hlt
test
jo
pop
sbb
xlat
pop
dec
sub
lea
jne
test
or
into
sahf
or
pop
mov
adc
test
inc
or
pop
fwait
data16
mov
xchg
mov
mov
and
xchg
sbb
or
xchg
add
add
xchg
sbb
inc
das
xchg
cmp
ljmp
sbb
testb
sarl
std
enter
push
repnz
mov
lock
adc
repz
xor
sub
stos
pop
lds
jae
pop
mov
dec
or
ret
aad
shl
pop
les
movl
sbb
push
mov
push
inc
adc
mov
popf
stc
lret
fdivrp
xchg
shrl
inc
pop
jno
imul
push
pop
inc
push
scas
inc
inc
push
inc
fcom
jo
stos
bound
mov
xorl
scas
jns
addr16
mov
add
pop
rcl
loope
sbb
bound
in
jbe
jecxz
mov
adc
test
sti
imul
pop
call
iret
mov
pop
idivb
fbstp
pop
fnsave
std
cltd
shl
adc
pusha
imul
popf
addl
repz
popf
xor
fwait
xor
bound
jmp
je
lods
data16
and
xor
test
push
int
inc
xchg
jmp
lds
stos
leave
pop
add
dec
jbe
popa
imul
call
mov
mov
std
dec
pop
scas
sbbb
adc
mov
in
in
sbbl
shrb
add
js
hlt
mov
mov
out
pusha
or
addr16
hlt
mov
es
lock
push
jns
push
inc
adc
sti
adc
mov
imul
push
mov
pop
push
repz
fcompl
or
jnp,pn
pop
stos
gs
fdivl
xor
mov
clc
stos
mov
adc
xchg
sub
aam
in
cmp
imul
mov
data16
shrl
xor
pop
bound
jecxz
mov
arpl
retw
repnz
popf
xor
adc
mov
add
xchg
shrb
lods
xlat
outsb
lock
add
and
pop
pop
add
xor
ja
push
xchg
sub
into
dec
jecxz
mov
dec
in
adc
xchg
inc
mov
popa
cmpsb
cmp
add
js
shll
xchg
sub
test
arpl
insl
xchg
cmpsl
adc
in
mov
fimuls
adc
sahf
cmp
lds
es
push
push
and
mov
add
or
cmp
dec
out
dec
insl
add
add
iret
mov
popa
clc
sbb
jg,pt
jo
dec
jecxz
xchg
popf
xor
mov
mov
jmp
push
outsb
add
repnz
push
movsl
and
insb
add
xchg
ljmp
mov
lds
mov
loop
and
mov
das
sub
lock
cmp
sub
aam
and
and
sub
in
andl
test
cs
sti
loop
add
push
stc
cs
sbb
sub
sahf
xor
and
pop
repz
cmp
fs
jp
addb
xchg
xlat
jb
add
sub
idivl
cmp
lods
mov
push
in
cli
repz
imull
sbb
orb
test
mov
ret
clc
in
dec
in
sbb
gs
cmp
imul
and
mov
mov
push
stos
lcall
leave
mov
push
lcall
mov
sarl
push
jno
mov
cltd
in
pop
repz
imul
mov
nop
inc
xlat
les
into
outsb
push
pop
icebp
cmpl
icebp
int3
aas
sub
insl
pop
cmp
mov
inc
xlat
aam
dec
jecxz
inc
lret
mov
pop
out
roll
mov
jge
fdivl
test
add
jb
fidivs
test
fsubrl
and
jp
les
mov
in
in
push
out
xor
imul
xor
in
aam
ret
push
fs
in
orl
inc
xlat
int
data16
addr16
push
lods
nop
mov
mov
xchg
mov
mov
sbbl
into
lds
cmp
es
mov
add
jns
push
jmp
fiadds
mov
jnp
scas
inc
xlat
lods
sub
filds
or
jnp
push
jmp
loopne
mov
jg
sahf
mov
arpl
pop
push
popf
mov
cwtl
das
push
cmpsb
cmp
in
pop
add
aas
cmp
insl
sahf
push
lods
into
mov
insl
xchg
and
lahf
push
test
mov
mov
stc
addr16
insl
xchg
sub
pop
mov
mov
insl
fidivl
sub
pop
jb
push
mov
jae
xchg
mov
je
mov
mov
fwait
out
in
subl
pop
mov
push
jmp
xchg
repnz
sbb
in
imul
outsl
lea
cmc
push
in
test
push
mov
mov
shlb
addl
mov
insl
mov
fs
cmpsb
jns
xor
lcall
add
xchg
dec
jecxz
dec
mov
jl
sbbb
mov
ja
mov
cmp
sub
mov
sub
pop
rcll
movl
pop
sbbl
pop
and
out
das
in
cmp
xor
push
mov
test
and
test
mov
sub
inc
pop
sub
dec
fnstenv
lahf
les
lahf
xor
int
and
adcl
movsb
inc
pushf
aas
rolb
inc
ja
pop
jo
cwtl
insl
int
out
aad
aam
mov
sarb
mov
ret
stc
mov
je
xchg
in
mov
aam
mov
xchg
test
lods
inc
int3
pusha
hlt
mov
mov
mov
popa
push
xchg
dec
icebp
mov
insl
mov
addr16
sub
jg
enter
inc
lock
lea
test
shl
xor
adc
ret
pop
jnp
inc
fidivrs
mov
or
jle
push
adc
lret
lock
and
aam
das
xchg
pop
scas
shl
xchg
es
jecxz
mov
movsb
cmp
xchg
addr16
negl
mov
push
leave
pusha
cmp
jg
popf
inc
fmul
push
push
popf
test
adc
fadds
mov
stc
pop
icebp
cs
stos
inc
lds
stos
jnp
scas
inc
adc
aaa
mov
gs
mov
pop
mov
or
sub
in
push
popf
sbb
aam
cmp
insb
rorl
add
pop
jbe
fucom
stc
push
js
adc
lret
lea
sbb
and
add
and
enter
pop
cmc
mov
ret
mull
mov
sub
jecxz
xchg
cmpsb
add
cmp
addr16
hlt
pop
movsb
cmp
mov
loop
adc
xor
push
lds
fcomi
cmp
js
mull
sub
std
adc
add
out
xor
jne
sub
and
test
cwtl
fldl
mov
xor
xor
lcall
test
xchg
fidivrs
enter
loope
xor
and
push
movsl
inc
fcom
add
sahf
xor
decb
mov
sbb
out
notb
push
mov
xchg
xchg
sbb
aad
cmp
in
mov
insl
sets
inc
mov
add
lods
pop
dec
mov
mov
jbe
sub
inc
adc
scas
inc
jbe
mov
out
xchg
mov
and
mov
fs
fsubrs
lea
xchg
arpl
ss
xor
mov
and
sbb
pop
les
add
mov
rol
popa
xchg
faddp
xchg
mov
fadds
aad
mov
or
lcall
addb
jns
cwtl
ds
pop
dec
jno
cmpsl
outsb
movsl
jge
and
xchg
pop
push
or
out
lods
push
rclb
pop
stc
shrl
sbb
lock
or
lock
dec
icebp
sbb
imul
pop
dec
add
push
dec
int3
inc
dec
pop
and
addr16
stos
inc
adc
cwtl
bound
mov
xchg
sub
sub
push
sti
lret
xor
arpl
scas
pop
icebp
xchg
shrb
dec
daa
dec
xchg
mov
mov
xor
push
in
pop
test
dec
imul
push
xchg
inc
les
inc
xchg
jl
arpl
mov
sbb
addb
stos
xor
fnstsw
fs
xchg
fwait
cmp
or
inc
mov
lock
je
pusha
stos
pusha
cmp
mov
sbb
push
sahf
push
jecxz
pop
mov
adc
sbbb
xchg
repz
cmp
loopne
cmp
out
sbb
in
movsl
xor
add
push
sti
xor
in
or
push
jge
sub
mov
cmpsl
js
std
sbb
leave
sub
lods
add
inc
lds
fdivl
xor
movsb
mov
xor
addb
adc
xchg
push
shrl
rcr
jno
mov
iret
inc
sbbb
pop
movsb
bound
mov
jecxz
imul
sub
jle
pusha
mull
pop
push
aam
inc
rcrl
dec
ds
pop
repz
jl
jge
insb
clc
xor
inc
xchg
mov
push
into
dec
push
jbe
add
aad
xor
push
fadds
cmp
je
pusha
enter
mov
sub
xor
sbb
jnp
mov
cmpsb
aad
and
or
js
pop
pop
arpl
adc
cs
je
lret
pushw
xchg
lds
pop
test
popa
cmpsb
jb
pop
addr16
inc
mov
pop
test
gs
mov
jmp
clc
jns
mov
pop
dec
push
jmp
xchg
mov
add
ja
pop
inc
mov
push
sub
mov
xchg
dec
fadds
add
dec
nop
rcrb
or
add
lea
pop
cwtl
addb
push
cmp
fbstp
add
mov
popa
cmp
jns
xor
ja
cmp
pop
inc
sub
jge,pt
mov
inc
lret
outsl
push
fs
aaa
ficompl
std
fisttpll
pushf
and
adc
lds
test
stc
adc
test
ljmp
shr
adc
ds
test
sti
sbb
iret
cltd
lock
clc
lcall
stos
mov
clc
jae
enter
jmp
movlps
adc
jo
in
jne
sbb
shlb
xchg
sub
xchg
mov
xchg
bound
pop
lcall
adc
lcall
push
cmp
negl
loop
pop
mov
hlt
jae
rorb
loop
das
jo
cmpsl
xor
push
mov
pusha
jg
jmp
mov
out
mov
popa
stc
adc
inc
mov
imul
inc
fs
test
gs
loop
sub
outsl
popf
into
adc
shl
mov
mov
fists
inc
jne
test
ss
xchg
and
movsl
bound
out
adc
flds
movsb
jnp
add
insb
mov
pop
js
ret
pop
xor
je
dec
sub
lea
add
or
in
jae
std
mov
cmp
sbbb
call
stc
xsha1
cmpsb
int
cmp
sub
fimull
push
call
or
dec
sahf
push
push
roll
ret
cmp
adc
push
stos
arpl
add
out
js
ljmp
mov
std
das
jmp
enter
xlat
ja
rcrl
dec
cmpsl
mov
ret
test
filds
jmp
xor
adc
ljmp
fs
inc
int3
mov
adc
xor
sbb
test
fimull
stc
lods
jne
jge
or
jmp
mov
mov
fwait
sub
cmp
jae
lods
les
ret
mov
mov
stos
aas
adc
xchg
rorb
insb
push
shll
mov
sub
jbe
addr16
dec
aas
aad
gs
xor
mov
jecxz
mov
jmp
cwtl
jo
mov
test
sbb
pop
lock
and
mov
push
pop
shlb
cmp
out
xor
aas
lds
adc
jnp
jmp
cmp
jg
test
repnz
aam
xchg
mov
lret
idivl
sub
lea
test
and
inc
mov
dec
addr16
cmp
mov
addr16
mov
mov
fstpt
push
in
insb
push
cli
std
xlat
aaa
into
or
out
mov
xchg
pop
dec
imulb
pop
push
gs
popa
push
in
inc
pop
xor
jmp
or
es
fisubrl
cmp
shrl
sub
push
mov
stos
fisttps
popf
xor
enter
mov
add
test
call
xchg
es
pop
imul
aaa
cmp
pop
and
jae
fiadds
subl
jnp
ja
fnsave
jno
movsl
std
dec
into
add
pushf
mov
leavew
rorb
fxch
inc
fisttpl
lret
aas
cld
jno
pusha
push
pop
fwait
xchg
inc
xlat
js
jne
dec
fwait
or
and
pop
mov
xchg
and
xor
popf
jnp
inc
mov
xor
lea
repnz
sti
push
fnstcw
cmp
out
push
mov
mov
loopne
je
loope
adc
sub
jmp
pop
aad
movsl
adc
lahf
std
mov
xor
sbb
add
mov
repnz
or
stos
and
decb
mov
mov
clc
push
push
fwait
push
mov
and
inc
iret
maskmovq
dec
xor
les
inc
adc
push
outsb
push
add
pop
adc
pop
addl
push
inc
add
mov
xchg
pop
and
repz
sbb
xlat
cmp
lahf
rcll
or
mov
push
aam
adc
push
sbb
lods
inc
pop
cmp
mov
lods
imul
push
aaa
pop
xor
test
adc
sbb
pushf
ja
pop
dec
mov
cli
xchg
xchg
jg
fisubrs
pop
int
sub
pop
or
sub
out
popf
repnz
or
out
in
sbb
pusha
mov
xor
aaa
lods
arpl
and
fbstp
dec
int
cmp
push
pop
lahf
rorb
aas
shll
insl
mov
pop
add
mov
insb
push
dec
je
push
inc
nop
mov
dec
mov
inc
jge
enter
cmp
je
cli
inc
and
push
jns
sbb
xor
mov
popa
pop
hlt
xchg
popa
divl
ss
inc
mov
xchg
adc
mov
add
imul
xor
and
popf
repnz
pushf
xchg
sub
popa
cmpsb
popa
jnp
xor
push
jmp
push
loop,pn
inc
inc
enter
hlt
cwtl
pop
and
or
cltd
xor
adc
mov
incl
xchg
aad
sub
dec
inc
mov
movsb
outsl
mov
cmp
aas
mov
jno
ficoml
xchg
cmp
adc
mov
gs
int
hlt
fnstenv
sbb
lret
andl
jmp
fists
jecxz
or
pushf
stos
inc
fisttpl
andb
and
pop
mov
cs
xor
ljmp
or
push
sbb
call
cmp
xchg
mov
cmp
mov
pop
scas
outsb
mov
pusha
out
sbb
mov
imul
in
imul
loopne
je
aad
call
orl
cli
fwait
pop
movsl
push
xchg
or
mov
inc
push
adc
add
sbb
xor
inc
pop
fcoml
inc
loopne
out
xlat
sub
movsb
scas
pusha
sbb
xchg
lods
aas
shll
leave
es
repz
cmp
cmp
in
inc
cmp
sbb
mov
push
aaa
stc
nop
test
xchg
dec
cmpsl
dec
mov
jne
fs
and
aas
in
push
imul
sub
imull
mov
iret
cmp
add
les
jle
clc
xor
leave
xchg
jno
jnp
sbb
frstor
xchg
inc
push
icebp
sub
loopne
mov
std
in
lds
cli
push
out
popa
mov
idivb
inc
shll
pop
sti
mov
sarb
faddl
rorb
add
sti
mov
push
sbb
xchg
shlb
and
adc
stos
jne
pop
lret
jmp
mov
cmp
addb
repnz
icebp
and
push
inc
data16
bound
cmc
xchg
ds
popf
push
movsl
into
testl
ja
rcll
out
decl
mov
in
mov
lcall
jne
lock
lret
movsb
imul
mov
push
into
addl
sbb
inc
lods
add
ss
push
mov
push
fs
rclb
adc
pop
add
call
mov
shrl
outsb
rorb
movsb
cmp
outsb
lret
inc
jo
fsts
cmp
push
pop
test
push
stc
mov
xor
rorb
dec
cmpb
gs
mov
sub
mov
dec
fs
push
or
mov
rcrb
mov
mov
das
fdivl
mov
pop
out
push
popf
xchg
xchg
sub
mov
es
pop
arpl
adc
ss
xchg
sbb
fldenv
pusha
dec
cmp
das
movsl
adc
cmp
fimull
inc
int
aad
loope
in
ret
imul
shr
in
loope
jmp
movsb
dec
mov
aam
adc
call
push
in
xchg
fcmovnu
push
mov
sbb
and
stc
jae
mov
in
das
leave
add
out
loop
lea
popf
add
xchg
sbb
sbb
adc
test
frstor
lahf
out
pop
mov
shrb
ret
insl
stos
in
pop
cmc
or
test
nop
cs
and
mov
cmp
cmp
ret
jno
mov
and
jbe
imul
xchg
dec
filds
icebp
xchg
push
mov
outsl
fwait
bound
outsb
cmpsl
xor
xor
sahf
xchg
or
cmp
jnp
pop
xchg
lea
push
mov
xor
push
pop
stos
js
adc
popa
popa
arpl
sub
mov
movsl
iret
movsb
insb
lods
repnz
pop
out
xchg
adc
fwait
add
cwtl
add
in
or
leave
mov
les
repz
xchg
mov
and
pop
adc
dec
xchg
dec
jp
xor
filds
mov
jnp
cs
or
pop
je
addb
int
jnp
lahf
xor
or
lcall
loopne
cmpl
or
mov
push
sarb
jmp
hlt
fstl
and
stos
stos
pop
add
fwait
in
sbb
sub
pop
add
lahf
pusha
iret
inc
sbb
xor
shlb
aaa
int3
dec
fldl
out
dec
es
fimull
in
cmp
adc
add
lods
lret
jl
and
shll
mov
fbld
pop
mulb
aas
jecxz
shr
xor
sub
ljmp
or
ret
cmp
add
xlat
insl
and
rcrb
jns
mov
dec
cmp
fnstenv
mov
ret
xchg
mov
roll
mov
adc
jbe
adc
pop
xchg
xorb
daa
add
sub
xchg
or
push
jnp
lods
inc
nop
stos
jne
pop
xchg
das
jo
cmpsb
bound
mov
hlt
loop
int
test
loopne
add
fmuls
xor
mov
dec
jae
mov
loop
ret
dec
xchg
add
stos
add
pop
mov
sti
mov
cltd
and
xchg
xchg
add
scas
pop
cltd
imul
inc
inc
adc
inc
dec
rcrl
cmp
sub
outsl
dec
iret
data16
inc
mov
out
das
pop
fwait
jo
das
push
int
push
cs
mov
cmc
mov
rclb
jge
xchg
mov
gs
mov
push
inc
push
addr16
push
dec
and
fsubrl
dec
dec
fdivp
xor
dec
cmpsb
jne
mov
mov
pop
pop
repz
sub
mov
lea
dec
icebp
sub
push
into
sbb
adcl
fistpll
pop
lahf
xor
sbb
rorb
jle
gs
subl
fidivrl
and
cmp
out
pop
outsb
inc
mov
jb
lods
aaa
sarb
ja
movsb
cmp
popa
clc
or
icebp
sub
out
int3
inc
int3
mov
mov
adc
push
push
shll
pushl
movsb
xor
pop
ficoms
mov
lods
arpl
jns
lcall
movsb
cmpsb
cmp
mov
pop
cmc
sbb
pop
ret
mov
jmp
jmp
jnp
inc
int
cs
mov
ret
inc
shll
out
ljmp
lds
ficoml
mov
or
cmp
jns
mov
add
xor
and
ss
outsl
mov
xchg
and
rclb
outsl
lds
test
into
dec
dec
cmpsb
insb
mov
popf
jmp
call
out
pop
cs
adc
sub
sbb
sbb
and
mov
mov
dec
loop
movsl
push
in
sbb
es
add
dec
lahf
mov
fldt
mov
fcomi
dec
icebp
push
jp
data16
mov
negb
sbb
add
jmp
push
jmp
in
inc
out
negb
cld
mov
addb
cld
xor
xchg
mov
fld
dec
fbld
xchg
cs
mov
xchg
int3
mov
lahf
adc
cs
cltd
jb
or
mov
out
ret
cmp
adc
movsl
loopne
lcall
pop
into
out
mov
sub
or
mov
movl
incl
ret
xchg
sub
jne
addps
icebp
sbb
mov
ljmp
insl
and
movsb
cmp
jo
mov
scas
bound
add
ljmp
ss
adc
xchg
int
aad
add
jle
scas
cmp
movsb
pop
jmp
into
mov
cmpsl
imul
cmpl
lahf
xchg
xor
add
lods
xor
xchg
cmp
and
push
push
xchg
pop
ret
cbtw
sti
mov
gs
sahf
xor
cli
test
pop
adc
pop
loopne
cmpsb
lds
cmpsb
jmp
cmpsl
insb
scas
dec
xchg
xchg
fnstcw
jne
iret
adc
test
jmp
pop
into
fidivrl
inc
lds
notl
adc
jmp
repnz
ss
and
call
sub
fsts
arpl
addr16
arpl
jns
pop
cmc
fs
xchg
mov
mov
lret
sbb
pop
sbb
mov
inc
smsw
inc
sti
and
leave
inc
hlt
dec
lret
mov
pop
add
es
jne
mov
pushf
xor
pop
orb
popf
xor
lcall
rolb
daa
pop
mov
test
js
inc
mov
jne
mov
cld
adc
xor
push
push
mov
push
and
addl
mov
jle
mov
shll
jmp
mov
jno
outsb
movsb
jl
cli
and
add
push
add
in
xorl
stc
xor
iret
inc
stos
and
icebp
push
jecxz
push
mov
mov
cltd
sub
jmp
outsb
adc
sar
xchg
js
fsubs
or
fwait
pop
in
sub
lock
cmp
mov
repnz
xchg
or
pop
push
adc
xchg
xor
cld
add
mov
cmpsl
pop
mov
inc
mov
and
rorb
sub
movsl
movsb
movsb
jl
sbb
adc
ljmp
adc
pop
iret
jnp
mov
xor
xor
mov
mov
xchg
das
sbb
ret
add
data16
int
fiaddl
movsb
adc
or
outsb
insl
lahf
fidivs
aas
mov
and
cld
dec
rol
into
flds
push
add
mov
sub
sbb
lret
cmp
fisubrs
loop
out
mov
fldenv
stos
sbb
or
out
push
imul
into
xchg
sub
icebp
outsl
mov
xchg
mov
push
push
add
bound
sub
push
int3
shlb
jo
push
mov
test
js
sbb
dec
mov
cs
fsubrs
cmp
mov
lock
icebp
xor
jecxz
push
testl
nop
or
sub
imulb
push
addl
add
jge
popa
movsb
xchg
sub
mov
outsb
call
es
call
or
mov
repnz
dec
xor
out
sub
dec
xchg
dec
in
push
add
xor
popf
mov
ficoml
mov
mov
fucom
sbb
and
out
xor
cmp
mov
fnsave
pop
int
hlt
ds
cmp
or
into
adc
cmc
stos
or
and
jbe
cmp
scas
daa
and
cmpsb
in
and
mov
and
xchg
fstpl
dec
fadds
fs
xor
cmc
xor
push
clc
push
dec
ficoms
sbb
pusha
cmpsl
scas
stos
pop
pmulhuw
daa
sub
push
dec
popa
out
roll
les
test
out
loopne
and
mov
fldenv
push
shll
inc
into
jb
stos
addb
or
test
stc
and
xchg
repz
repnz
sbb
xchg
pop
mov
sub
jns
fdivrs
loop
and
loop
sub
popf
sbb
sarl
es
scas
ficoml
outsb
lahf
jne
xchg
mov
pusha
jo
xor
das
mov
dec
sub
push
ficoml
adc
lock
cmp
jnp
fs
jg
or
test
xchg
xchg
arpl
jecxz
mov
push
xor
push
stos
dec
aad
pop
and
cmp
testb
in
jle
xchg
mov
cmp
scas
xchg
dec
mov
imul
or
inc
add
imul
xor
je
mov
aam
sub
xchg
cmc
loopne
xlat
add
ds
mov
stc
xor
push
adc
sbb
cmpsl
pop
dec
jmp
jle
jo
jne
imul
pop
jg
jae
mov
pop
popa
stos
xchg
into
int3
cmp
sbb
scas
fdivp
sub
call
add
fucomip
loop
into
in
cmp
stos
mov
adc
dec
mov
fcmovbe
inc
jmp
mov
cwtl
subl
lea
cmpsb
dec
or
pop
in
imul
out
ss
xor
lret
paddw
scas
test
and
out
fnstenv
cmp
pop
addl
dec
cmpsb
xor
call
cmpsl
in
test
loop
push
inc
popa
clc
jno
leave
inc
xor
mov
xchg
mov
adc
push
stos
inc
arpl
push
xor
fildl
test
xorb
clc
xor
inc
fildll
xlat
loope
scas
je
mov
fcmovnbe
mov
sbb
loope
daa
mov
sbb
inc
jp
mov
cmp
pop
in
jle
xor
or
addr16
mov
add
mov
cmp
pop
mov
scas
sbb
incb
notb
adc
iret
sar
jecxz
dec
mov
or
dec
in
sub
cmp
pop
out
stos
clc
fs
mov
fnsave
cmovae
mov
xor
rol
xorl
sbb
iret
or
jne
insb
sub
test
sub
loopne
dec
adc
sub
add
data16
push
xchg
test
fimull
mov
stc
sub
rcrb
cmp
fisubrs
shlb
add
fidivs
and
mov
daa
in
rclb
push
in
cmpsl
pop
sbb
aaa
jno
shlb
ret
data16
hlt
stos
lahf
ss
aas
mov
xchg
fidivl
jle
movsb
scas
in
jecxz
push
int3
push
icebp
fnstenv
sub
in
inc
xlat
outsb
jns
imul
int3
pusha
xchg
xchg
jmp
cmpsb
cmp
lcall
mov
cmp
leave
imul
iret
ljmpw
or
lea
pop
jns
nop
out
sbb
test
add
lea
sub
jp
pop
adc
cwtl
lods
jno
or
int3
xchg
sub
lret
clc
sub
mov
pushf
xor
or
sbb
std
or
and
lods
inc
std
inc
data16
push
int3
and
or
or
pop
stos
and
push
and
test
inc
cltd
cli
sub
rcrb
push
lods
subb
imul
xor
sbb
dec
xor
mov
sar
fsub
pop
data16
adc
rolb
lcall
fdivrs
sahf
daa
inc
mov
scas
jg
push
xor
sub
dec
mov
lret
jns
push
repz
cwtl
frstor
aam
sbb
mov
sub
in
push
pop
push
aas
inc
pop
mov
sbb
test
insl
loopne
mov
dec
ret
add
mov
ds
pop
xor
jg
push
mov
mov
push
lea
sub
rcl
xchg
pusha
arpl
in
xchg
xor
insb
cwtl
scas
data16
loope
mov
test
sar
mov
lret
push
psubb
lahf
cmp
iret
js
leave
mov
jle
scas
push
xor
xchg
sahf
enter
test
leave
pushf
cmp
jne
loop
out
in
xchg
inc
xchg
mov
mov
push
icebp
gs
loopne
movsb
hlt
cli
cmp
out
adc
das
push
xchg
or
ret
adcb
jno
mov
adc
jp
xchg
mov
pop
jp
jmp
fs
leave
jp
test
jo
inc
push
lds
cmp
mov
ljmp
pop
sti
sarb
out
adc
in
pusha
jne
gs
or
insb
xchg
cltd
cmp
popf
cmc
jno
cltd
inc
lret
andl
cmp
loop
data16
in
jmp
insl
leave
inc
loopne
dec
xor
popf
mov
push
ret
xchg
add
and
push
pop
fistpll
sti
int3
popf
loopne
dec
imul
jo
paddusw
jne
popf
cmc
in
leave
mov
mov
leave
mov
dec
pop
pop
sub
movsl
mov
sar
lahf
and
je
or
jge
or
stc
jge
sub
add
pop
mov
outsb
pop
clc
jg
shrb
and
scas
ficompl
popf
sub
es
sbbl
jmp
mov
adc
movsb
mov
push
and
rcll
scas
fs
push
mov
test
dec
lret
sbb
xor
push
inc
fadds
sub
lret
xchg
sub
aad
lods
push
sub
xchg
push
aas
sub
jge
loopne
rcl
cmp
lods
jb
xchg
dec
aas
add
and
rcrl
cmp
jno
sub
lods
jbe
mov
fisttpl
sub
fwait
out
je
push
pop
hlt
ja
inc
fidivrl
out
sub
add
mov
mov
in
or
add
sahf
je
imul
sub
nop
popf
jecxz
adc
ss
cs
mov
add
pop
mov
cmpsl
movsl
xor
pop
sbbl
nop
lods
roll
call
negb
jns
scas
cmp
in
jns
mov
fnstcw
fildl
push
add
mov
lret
mov
popa
outsb
js
mov
sti
pop
dec
add
subb
ss
mov
mov
add
test
cwtl
adcl
mov
xchg
cmpsl
orb
mov
lods
out
les
push
lds
cmp
int3
and
out
and
popa
add
mov
push
sbb
aas
faddl
xchg
lods
jmp
push
clc
stos
sti
jo
fdivrs
inc
or
pop
je
pop
mov
iret
xchg
sub
cmp
sub
adc
fldl
xorl
enter
jle
call
sti
cs
mov
icebp
or
add
pop
or
push
mov
int3
pop
push
enter
out
je
cmp
cmp
or
add
sub
cmpb
push
ror
xchg
xor
sub
cltd
add
icebp
fcomp
orb
or
cld
int3
mov
loopne
into
xchg
lods
xor
repz
push
arpl
lea
pushf
out
jno
mov
fdivrl
adc
mov
sbb
mov
push
faddl
push
shrl
ror
sahf
sub
lea
sbb
loopne
hlt
out
lea
es
push
lcall
xchg
mov
mov
iret
mov
sahf
aam
sahf
inc
scas
add
incl
adc
mov
add
push
fbstp
fwait
xorb
mov
movsl
sub
cmpsl
lret
cld
xchg
cmp
lods
cs
adc
add
dec
push
xor
xchg
cmpsb
movsl
sub
inc
mov
scas
jle
xchg
out
add
cmp
mov
sarl
movsl
pop
cmpsb
sub
sub
out
mov
cmp
incl
insb
jmp
call
lcall
mov
add
or
push
int
push
mov
sub
outsl
in
inc
insb
stos
sub
js
lds
push
sbb
xchg
gs
movsl
inc
inc
rclb
in
mov
popa
fs
rcrl
gs
or
rcrb
out
es
dec
ret
nop
jle
popa
repnz
mov
and
jp
adcl
cmp
add
mov
xchg
sub
mov
push
ret
nop
hlt
inc
add
shr
roll
cmp
and
les
dec
push
cmpsb
ret
fdivrs
lds
scas
stos
mov
stc
xor
mov
aam
shlb
fnstcw
jnp
nop
mov
or
cs
and
cmp
push
add
out
jge
cwtl
sub
xchg
aas
mov
shrb
movsl
sbb
mov
mov
mov
ds
sbb
sub
adc
adcl
add
inc
jl
movsl
das
shll
pop
push
or
or
mov
test
jns
stc
daa
mov
aad
leave
repnz
inc
in
pop
stc
or
dec
or
fstpt
fdivrl
jns
inc
das
rorl
enter
nop/reserved
movsl
or
push
lock
fdivrl
std
adc
sub
or
divl
push
add
push
popf
mov
or
or
push
icebp
arpl
fnstsw
jge
inc
sub
mov
xor
pop
stc
add
xor
mov
movsb
fnstsw
std
adc
adc
mov
mov
adc
andb
icebp
mov
mov
jbe
or
pop
fidivrs
test
or
roll
loop
jmp
test
in
adc
icebp
into
bound
dec
adc
aam
or
mull
inc
and
je
and
jp
mov
push
fsubl
mov
mov
sbb
and
std
push
and
jns
mov
mov
xchg
aad
and
and
mulb
inc
and
andl
cmc
pop
fiaddl
ja
sbb
push
mov
xchg
clc
mov
push
ljmp
pop
test
jl
inc
mov
push
xchg
into
xchg
pop
xchg
imul
or
movsb
xchg
xchg
int3
or
push
push
inc
or
imul
sarl
in
mov
mov
das
mov
jno
add
pushf
cwtl
inc
push
pop
cmp
rorl
fidivrl
arpl
pop
add
push
ret
mov
int
adc
xor
push
jnp
push
or
cmp
mov
arpl
loopne
sbb
push
les
movsb
cs
push
sti
mov
push
cld
push
add
lcall
jne
xchg
movsl
sub
or
adc
mov
adc
inc
je
jl
movsl
sub
imul
fs
pop
jmp
int3
call
das
mov
inc
mov
test
in
sub
cli
aas
loopne
and
xor
adc
dec
jnp
xor
insl
jne
cmp
pop
mov
push
mov
mov
notb
fwait
inc
jp
mov
ret
in
sbb
cmc
stc
mov
inc
loope
aaa
adc
and
sbb
insb
enter
jge
ljmp
pop
add
jg
aam
cmp
inc
fistpll
push
daa
mov
in
imul
mov
inc
jl
in
xor
hlt
xlat
mov
xlat
push
aam
insb
push
outsl
in
arpl
adc
addr16
push
jg
in
pop
mov
push
or
cmp
sub
imul
push
in
pop
std
cmc
jl
pusha
lock
inc
int
dec
or
sbb
dec
fnstsw
imul
cltd
data16
pop
movsb
ret
cmc
gs
cmp
jns
in
insl
lods
arpl
inc
mov
sub
add
jge
dec
or
addr16
lock
data16
pop
in
mov
dec
xchg
inc
out
sub
ds
daa
pop
fdivrs
cmp
scas
pop
pop
add
int3
mov
mov
push
xor
jmp
stc
in
jl
out
adc
dec
stc
pop
push
fimull
dec
jns
cmpsb
les
mov
scas
fnstsw
cmp
mov
lods
sub
iret
int
jmp
idivl
movsl
lahf
aaa
dec
mov
popa
mov
mov
dec
loop
adc
mov
lret
cwtl
jecxz
dec
punpcklwd
das
mov
jb
and
xlat
jns
pop
pop
or
test
orb
out
sub
fdivrl
sarb
out
fiadds
loopne
inc
xlat
mov
sbb
mov
inc
or
mov
or
mov
mov
scas
lcall
adc
mov
cmpsl
fdivrl
aaa
adc
loope
add
fiaddl
xchg
inc
mov
or
imul
jns
mov
mov
shrl
mov
or
arpl
xor
cmp
xor
jbe
dec
adc
popa
test
repnz
adcb
adc
aam
xchg
lea
sub
cmp
push
inc
mov
fnsave
js
jo
or
pop
bound
ret
inc
ficoms
insl
idivb
stos
fiadds
cs
imul
xor
mov
enter
orl
mov
xchg
lcall
sub
and
ret
jnp
jp
outsl
mov
hlt
push
add
jmp
inc
mov
dec
push
mov
and
dec
adc
test
test
aad
popa
loopne
gs
adc
cmp
xor
and
popa
idivb
pop
test
stc
inc
jle
mov
cltd
cmpsl
xor
test
mov
jecxz
sub
test
mov
or
jno
push
add
mov
adc
mov
test
sbb
int3
mov
inc
sbb
aas
dec
lcall
pop
cli
in
sbb
mov
mov
fstpt
ss
rclb
sbb
add
sub
ds
inc
xor
out
fisubs
les
pop
lret
insl
hlt
pop
in
fucom
mov
pop
imull
outsl
mov
mov
xchg
jbe
hlt
pop
fisubl
clc
adc
orb
mov
stc
fisttpll
test
data16
sti
jb
shl
notl
repnz
inc
xor
fstpt
out
adc
int3
jg
push
adc
dec
rclb
fistpll
xchg
mov
pop
cli
inc
fadd
xchg
gs
sahf
or
sti
pop
sub
lcall
push
add
sarb
sahf
inc
pop
inc
adc
rorl
std
xchg
push
fidivl
and
cmp
icebp
or
cld
xchg
popa
and
cmpsb
xchg
inc
mov
mov
xchg
inc
push
push
aaa
movsl
in
mov
mov
fnstcw
scas
lcall
or
xchg
jmp
aas
out
fcmovb
fnstcw
sbb
jo
jmp
ret
movsl
das
fnstenv
mov
xor
dec
je
insl
cld
rcll
jne
cmpsl
inc
out
jns
js
mov
mov
and
push
jae
and
mov
xor
pop
xacquire
fs
dec
adc
addr16
fwait
int3
xor
test
mov
movsb
sub
lds
fstps
inc
sub
clc
gs
sub
imul
add
adc
daa
mov
mov
mov
push
cwtl
cmp
mov
cmp
pop
cli
ljmp
in
dec
movsl
cmp
cltd
ret
loop
sbb
xor
aas
loopne
pushf
adc
nop
inc
xor
and
insb
xor
jp
mov
popa
sbb
mov
dec
lahf
push
stos
sub
leave
inc
adc
out
insl
mov
xor
lret
setae
scas
scas
lahf
sub
xorb
mov
jbe
stos
mov
int
shlb
outsb
hlt
sbb
faddl
push
pop
fstpt
mov
pop
ljmp
lret
push
push
inc
je
mov
lahf
ds
sbb
hlt
jp
mov
mov
movsb
test
imul
pand
fstpt
repz
jmp
out
hlt
or
dec
leave
lret
lea
push
add
aam
dec
xchg
divb
lahf
imul
popl
fldl
repnz
outsl
js
ret
pop
stos
push
loope
push
mov
push
cmpsb
fdivs
pop
ret
inc
xor
sub
pop
push
out
je
nop
jo
push
fistps
or
stos
add
cld
pop
push
sbb
call
std
ret
mov
outsb
adc
sub
mov
xor
sbb
xlat
sbb
cltd
nop
leave
mov
scas
sbb
sarb
inc
js
jo
sub
cld
stc
mov
add
sub
pop
mov
jo
test
add
mov
cmpsl
sti
push
mov
mov
sub
xchg
inc
lcall
add
xor
mov
shlb
xor
add
loop
sub
and
outsl
adcb
stc
loopne
in
ja
addr16
fs
es
or
cwtl
cmp
int
xor
push
mov
add
dec
adc
mov
xchg
cmp
lret
stos
mov
hlt
stos
mov
pushf
inc
andb
adc
jge
mov
pop
push
aam
lods
push
adcl
rdtsc
mov
mov
mov
in
addl
shlb
sub
pop
repnz
test
mov
sar
data16
cltd
inc
icebp
inc
mov
pop
jecxz
xor
mov
jbe
int3
inc
or
popf
push
cli
test
inc
or
stos
ss
and
xor
sub
xchg
sub
xlat
ret
dec
add
mov
fstl
xor
or
xchg
in
imul
nop
inc
adcb
fiaddl
into
aad
adc
adc
xchg
inc
push
pushf
xor
push
cld
xlat
lcall
add
xchg
cmp
pop
mov
in
jne
inc
test
jb
iret
inc
imul
add
stos
daa
loopne
mov
nop
nop
addl
int3
enter
outsb
ljmp
pop
cld
dec
divb
cmc
xchg
sbb
sbb
inc
fsubrl
ds
or
pusha
out
xchg
add
faddl
pop
add
push
es
fcmovnu
icebp
push
arpl
mov
jns
test
nop
arpl
jmp
xchg
ja
jae
mov
push
bound
daa
test
mov
inc
or
mov
call
fsubr
adc
or
cli
mov
daa
dec
mov
mov
push
mov
mov
shl
aam
adc
mov
loopne
enter
or
ljmp
push
dec
mov
leave
xchg
mov
rclb
add
jg
clc
roll
test
lea
mov
repnz
pop
test
lret
xor
or
xchg
cmp
call
in
sbb
jno
mov
jno
loopne
add
sti
negb
xchg
pop
test
outsb
pop
dec
adc
int3
push
sarl
sbb
sbb
rorb
lock
fdivp
jmp
call
mov
push
lods
rclb
js
xchg
jg
jmp
cmc
xchg
inc
jle
cmp
adc
dec
mov
mov
xchg
out
stos
rcr
outsl
add
daa
xchg
cmp
jmp
cld
mov
cli
jmp
mov
mov
or
add
mov
add
pop
cmp
inc
dec
insl
out
cmp
sbb
es
inc
popf
xor
fcmove
sahf
cmp
jns
loop
fbld
lds
pop
mov
sub
sti
pop
shlb
insl
add
adc
pop
inc
push
mov
cmp
xlat
sub
pop
xor
faddl
pop
adc
jbe
mov
or
mov
pusha
flds
mov
mov
lahf
in
mov
adc
push
add
stos
mov
mov
jae
sub
lds
rcrb
fldcw
in
insb
push
js
loope
mov
jns
test
and
xor
cmp
mov
pop
jmp
roll
pop
loopne
sbb
arpl
mov
ret
push
pop
cli
mov
ja
mov
xchg
sub
add
insl
and
sub
daa
or
fwait
mov
cmp
mov
test
xor
dec
dec
xchg
inc
push
xchg
and
and
cmp
pop
lret
pop
pop
jbe
dec
test
lods
sbb
mov
lret
insb
in
sub
sbb
aas
inc
or
dec
dec
adc
xchg
cmp
pop
icebp
mov
mov
ret
dec
sti
arpl
mov
rolb
pop
pop
sbb
jge
mov
inc
jae
int3
cmpsl
fwait
movsb
xor
mov
std
pop
add
pop
pop
aas
pushf
gs
add
lock
ljmp
cmp
pop
cli
pop
fs
dec
or
ja
push
or
ss
out
push
xchg
leave
nop
sbb
mov
or
lock
fwait
pop
or
adc
dec
mov
cwtl
arpl
dec
fwait
aas
cmpsl
mov
or
xchg
in
rol
and
xchg
rcrb
adc
cmpsb
pop
rcrb
xchg
cmp
mov
rolb
xor
setle
jecxz
fld
sbb
jo
mov
std
mov
ret
add
pop
out
add
mov
test
xchg
cmp
add
in
add
mov
xchg
cmpsb
daa
fcom
lcall
je
mov
aaa
jp
sarl
stos
xor
push
xlat
xchg
sbb
add
and
test
aad
loopne
jne
insb
jp
mov
enter
sbb
sar
pop
cld
dec
or
inc
xchg
xchg
test
lret
mov
adcb
inc
cmp
jae
sarb
gs
adc
fisttpll
sarb
scas
fiaddl
push
mov
fdivs
xor
ret
ds
ret
xchg
cmpsb
jg
cmp
shrb
inc
push
ljmp
aaa
cmp
hlt
hlt
xchg
inc
imul
jge
sbb
outsb
add
push
cmp
sti
pop
pop
imul
jae
fdivrl
push
stc
arpl
inc
pop
sahf
cltd
insb
icebp
mov
inc
or
test
out
insl
add
pop
pushf
cmp
data16
push
sti
loop
mov
in
divb
cld
pop
leave
imul
jl
ljmp
sub
xor
scas
out
push
add
mov
scas
popa
sub
outsb
mov
mov
into
gs
repz
insl
test
icebp
adc
mov
imul
inc
pop
jns
cmpsb
cs
imul
notl
xchg
cmp
and
ds
sub
sub
aam
in
std
icebp
pop
pusha
add
sbb
xchg
dec
mov
cltd
inc
sub
add
ret
leave
popf
adc
iret
mov
mov
mov
jmp
in
jne
cli
aas
mov
repz
fiadds
and
sbb
and
sub
mov
ficompl
add
mov
rorb
ret
repz
inc
inc
cmp
clc
add
xor
loopne
out
repnz
sub
jmp
lds
insl
out
sbb
loope
push
push
arpl
mov
mov
mov
push
lahf
inc
add
push
push
cld
jp
jns
call
jmp
int3
mov
cmpb
xchg
ds
rorl
adc
sub
pop
push
sub
mov
cmp
jae
xlat
in
inc
xchg
mov
cmpb
add
add
fdivrs
or
pop
negb
cmp
pop
popf
fstpt
mov
movsl
xor
sub
push
loopne
outsb
call
and
nop
es
sub
pop
scas
js
out
jne
push
ret
add
jns
outsl
push
mov
and
data16
shrl
mov
stos
pop
les
cmp
jg
mov
pop
rolb
in
add
aas
popf
jle
pop
imull
ret
xor
test
lods
loopne
fiadds
xchg
inc
shrl
fdivl
xor
mov
inc
or
cld
mov
mov
es
aaa
push
out
push
jns
xor
fxch
xchg
jmp
cld
filds
es
repz
orb
adc
fisttps
pop
cltd
inc
mov
lcall
inc
sub
xchg
leave
icebp
into
nop
and
notl
ss
pop
mov
insl
leave
nop
pop
add
pop
clc
pushw
xor
adc
jmp
mov
std
enter
popf
inc
test
in
fwait
inc
out
cmp
mov
dec
paddsw
stc
movsb
popf
inc
push
mov
out
pop
mov
pop
mov
gs
lea
jnp
push
in
jl
movsl
out
sbb
outsl
pop
mov
cwtl
sbb
sub
push
cmovns
test
lods
sub
mov
pop
push
xor
sbb
xchg
inc
mov
pop
aad
jmp
dec
push
add
iret
in
inc
cmp
adc
lcall
lret
mov
mov
arpl
push
add
insb
sbb
push
and
inc
adc
cmp
jae
push
lea
mov
mov
test
adc
mov
jg
enter
stos
sbb
fsubrl
aas
sarb
sbb
jbe
cmp
xchg
cmp
sub
ret
fiadds
jmp
mov
imul
pop
mov
mov
push
mov
xchg
push
jne
sub
push
push
add
inc
aaa
pop
xchg
inc
insl
sub
fs
lahf
pop
mov
jp
push
add
out
lds
stos
arpl
add
lahf
scas
mov
in
out
push
stc
testl
xor
inc
mov
int3
arpl
pop
add
adc
sub
lahf
inc
sbb
aaa
lret
push
and
mov
mov
add
push
movsl
xor
mov
jo
call
dec
in
push
push
outsb
sub
test
outsl
hlt
not
xchg
cmp
dec
sub
pop
sahf
movsl
sub
aam
push
les
sbbb
pop
movsb
aam
and
sarb
mov
jno
out
jae
arpl
jo
mov
jmp
repz
add
inc
xlat
jp
icebp
int
int3
xchg
lods
xor
imul
push
negb
jg
cmp
cwtl
pop
ret
outsl
repnz
arpl
dec
mov
stos
loopne
push
jle
jmp
add
lods
cmp
inc
pop
xor
movsl
and
xor
popa
mov
mov
push
lds
scas
movsl
xor
test
test
popf
jae
addr16
icebp
imul
jne
jne
jle
xor
fsubr
mov
jl
sbbb
fistpll
push
ds
out
pusha
repz
cmc
pusha
xchg
out
inc
adc
push
pushf
adc
rcr
lds
loop
push
xor
stc
mull
push
call
stos
xor
sbb
mov
adc
iret
pusha
loope
jg
je
aam
clc
mov
inc
lret
fnsave
cld
sbb
bound
int3
orl
xchg
addb
jnp
pop
mov
outsb
pop
add
jl
outsl
jge
gs
out
outsl
sti
dec
push
cli
mov
scas
mov
mul
ret
out
dec
or
aaa
xor
mov
int
xchg
fistpll
mov
pop
mov
add
jno
call
lret
cmp
adc
dec
mov
add
imul
in
dec
adc
pop
loope
pop
hlt
pop
stc
incb
mov
out
pop
out
imul
dec
sbb
mov
sarl
cmpsl
and
cmp
jmp
std
add
push
xchg
pushf
inc
in
jo
sub
mov
gs
popf
aaa
pop
cld
movsl
das
outsb
test
orl
lds
mov
mov
sbb
jne
nop
daa
imul
jg
inc
mov
filds
pop
lods
fs
lea
push
leave
inc
or
xor
addb
add
inc
or
flds
push
inc
jns
orl
jge
sbb
inc
imul
pushw
push
aad
negb
add
imul
mov
je
mov
push
mov
xchg
sub
fnstcw
enter
xchg
mov
ret
mov
xchg
out
mov
sahf
aaa
add
push
jb
cmpsb
das
adc
ds
rclb
xchg
ljmp
jno
sbb
mov
sbb
mov
inc
mov
and
xchg
mov
mov
mov
mov
jmp
inc
or
pop
add
test
mov
mov
aam
arpl
dec
cmc
icebp
outsb
jmp
push
push
es
mov
pop
mov
popf
jecxz
dec
mov
mov
loope
les
std
and
push
aam
add
test
jge
movsl
nop
xchg
cmp
mov
fcmovnbe
and
dec
bound
clc
arpl
scas
xor
jg
push
cwtl
out
mov
add
push
fldl
popa
jnp
jnp
mov
lret
sbb
mov
je
jecxz
lock
dec
lcall
xlat
sbb
adc
dec
clc
popa
pop
in
dec
adc
dec
cs
mov
loop
mov
scas
das
sbb
mov
or
into
or
mov
mov
inc
xchg
pop
hlt
pop
mov
inc
adc
mov
fwait
cmp
mov
adc
ret
push
or
imul
sbb
fbstp
xchg
pop
out
jae
movsb
xor
lahf
cmp
xchg
cmp
sub
xor
pop
and
cmp
mov
xor
mov
mov
mov
orb
lods
xor
nop
jle
xchg
mov
repnz
test
sub
cmp
push
into
sbb
xor
and
lret
push
in
insb
jns
xchg
mov
mov
out
insl
inc
ljmp
sarl
jle
pop
pop
stc
fnstcw
pop
in
mov
or
ficomps
incb
loope
ja
jge
and
dec
dec
cmp
ja
mov
sub
xor
inc
push
pop
xor
popf
and
aas
fstpt
mov
mov
movsb
insl
in
cltd
in
jbe
push
les
enter
cltd
adc
imul
xor
imul
test
fs
mov
mov
inc
adc
pop
test
idiv
out
imul
sti
rclb
push
jnp
fwait
sbb
lahf
enter
les
or
push
sub
scas
push
or
xchg
mov
leave
mov
fistl
or
aaa
sahf
and
dec
dec
xor
test
xchg
or
lahf
clc
add
mov
andb
push
pop
or
cmpsl
test
sbb
pop
decb
in
inc
jmp
xor
xchg
rcr
ret
adc
jle
inc
gs
inc
inc
cltd
inc
adc
or
shrl
sbb
sub
push
popa
hlt
push
js
xchg
ficoml
sbb
pop
cli
pop
pop
add
cmp
mov
xchg
xchg
sbb
scas
es
mov
ret
sbb
rclb
xchg
or
cmpl
ficoms
in
lods
lret
add
sbb
mov
sbb
ficompl
sbb
xor
es
and
mov
cli
call
rorb
dec
cmp
add
pop
out
int
jg
and
aad
jne
mov
mov
mov
or
xchg
loope
lds
inc
not
jnp
xchg
jg
mov
test
xchg
aaa
and
sarb
xor
cmp
or
sarl
pop
out
outsb
pushf
xor
shrb
mov
mov
sbb
rol
pusha
pop
sub
enter
in
mov
mov
dec
pop
scas
outsb
insb
in
xchg
inc
adc
leave
adcl
adc
fnstcw
dec
pop
inc
data16
xchg
cld
pop
inc
into
or
adc
or
sbb
ja
xchg
insb
in
and
cmp
out
mov
add
sub
aas
fsub
adc
cmp
and
out
imull
mov
ret
orl
in
test
sbb
stc
clc
popa
sbb
dec
adc
xor
iret
sbb
xchg
sbb
push
lret
rcrl
mov
addr16
leave
xchg
jne
pop
add
bound
int
std
mov
mov
rcr
sbb
xchg
orl
push
mov
in
imul
xlat
outsb
xchg
pop
stc
nop
mov
cmc
mov
mov
loop
cmp
shll
movsl
test
pop
mov
iret
sbb
dec
test
popf
mov
adc
add
ret
adc
pop
or
xchg
loope
or
jg
push
mov
aas
bnd
xchg
and
rol
add
cli
sbb
insb
call
or
push
xchg
sub
stos
xor
movsl
pushf
sarb
mov
jge
fcmovb
mov
mov
xchg
mov
andb
jmp
jbe
and
xchg
cmp
cmp
jns
test
inc
xor
inc
sub
cmp
outsl
lock
scas
test
pop
and
mov
inc
adc
fisttpl
enter
shl
and
incl
add
push
lds
lods
ljmp
lret
in
jnp
and
push
and
xchg
adc
out
and
xor
fstpl
dec
mov
arpl
xchg
sbb
aaa
cwtl
leave
dec
add
out
negb
icebp
push
jmp
sarl
jge
and
sbb
mov
ficomps
hlt
jb
xor
out
pop
fmull
lock
add
cmp
mov
mov
clc
aam
lahf
into
ljmp
push
sbb
lcall
iret
lret
mov
rcrb
add
js
cli
cmpsb
xor
inc
jb
popa
dec
cltd
loopne
sbb
mov
dec
rclb
ljmp
lcall
xor
mov
adcb
nop
inc
xchg
imul
loope
loopne
sbb
outsl
ljmp
fstpt
push
mov
jp
pop
test
fdivrs
in
addr16
enter
rep
out
inc
adc
fsub
jo
add
inc
jbe
pop
mov
out
addr16
fdivrl
jne
lcall
sub
into
mov
mov
flds
movsl
lcall
dec
sub
dec
adc
cmpsb
xchg
outsb
lods
das
stos
shrl
add
lea
pop
inc
adc
jb
cmp
rcrl
jmp
stc
xor
push
call
stc
arpl
inc
cmp
stos
pmaxub
sub
ss
ljmp
dec
sub
xchg
cs
shrl
and
lods
xor
daa
sbb
cmpb
out
aam
or
std
negb
ficomps
lds
mov
jle
fwait
mov
ret
imul
arpl
mov
jp
and
ja
push
jnp
test
mov
pop
mov
in
cmpsb
cld
pusha
jne
mov
mov
mov
mov
in
inc
cmp
outsl
lock
cmp
adc
in
and
cmpsl
sub
xor
gs
or
shll
sub
js
dec
push
outsl
outsl
pusha
out
mov
mov
adc
mov
sti
bound
ds
gs
fldl
xlat
aas
push
hlt
scas
aam
aad
mov
fadds
pop
insb
popf
inc
decb
fistl
out
push
fs
int
aaa
and
add
fadds
enter
push
sbb
call
cld
repz
mov
ret
mov
loopne
cs
sbb
test
aad
xchg
pop
nop
mov
mov
jecxz
pop
adc
fbstp
int
in
decb
je
push
fcompl
mov
jae
sub
mov
clc
adcb
sbb
dec
shlb
add
in
test
rorb
icebp
js
dec
stos
adc
roll
data16
fs
fists
mov
std
out
or
mov
ret
sub
hlt
pop
mov
loopne
scas
rcrl
addr16
cwtl
add
ja
mov
xchg
xchg
cmp
cmpsl
sbb
fcomps
pop
xchg
stc
cmp
sub
pop
out
jl
call
iret
pop
sbb
sub
lods
cmp
fldl
dec
jne
pop
lock
xchg
shlb
push
ja
sub
test
xchg
sub
cmp
mov
sub
shrl
loop
fists
sahf
out
xchg
xor
std
gs
or
sbb
fisubl
loopne
sub
addr16
sbb
test
aam
xchg
push
mov
mov
loope
pop
adc
iret
stos
xor
jbe
int3
push
in
std
xchg
xchg
mov
ficompl
mov
jb
sub
mov
idivl
out
scas
sbb
addr16
shlb
add
sahf
and
mov
test
sub
inc
leave
iret
data16
arpl
xchg
sbb
test
addr16
out
or
mov
shrl
repnz
movsb
cmp
ret
gs
xchg
add
js
mov
sbb
push
call
cmp
sbb
pop
clc
cmp
sub
pop
lock
call
into
push
sbb
sub
stos
cmp
fildl
dec
je
pop
lock
dec
ja
sub
xchg
mov
or
dec
daa
sub
rorb
jp
dec
loopne
pushf
out
xchg
xor
fs
or
sbb
inc
sub
jb
mov
loopne
sub
pop
pop
out
pop
sbb
mov
test
sar
xchg
add
sbb
adc
shrb
lret
push
out
cld
test
xchg
mov
jbe
dec
fcomps
mov
jno
sub
les
out
lods
pop
shrl
into
jne
add
xchg
mov
mov
cmpsb
adc
inc
iret
data16
bound
xchg
sbb
test
jmp
insl
or
sahf
push
xchg
cmp
movsl
cmp
adc
inc
lods
ret
pop
fisubs
xchg
jmp
js
mov
sbb
push
call
cmp
ret
idivl
shrb
mov
ja
dec
pop
lock
call
int
sbb
sub
test
mov
jae
pop
lock
shrl
dec
ja
jg
out
xchg
mov
or
dec
mov
ret
shrl
loopne
loopne
fwait
out
xchg
xor
arpl
or
sbb
inc
sub
jno
mov
loopne
sub
pop
pop
in
push
jg
jbe
aaa
test
sar
xchg
add
mov
mov
faddp
pop
adc
shrb
lret
sti
test
xchg
mov
jbe
dec
xlat
sbb
mov
ret
mov
cmc
jnp
out
lods
push
shrl
int
or
imul
sub
or
dec
movsl
push
sub
aas
shlb
pusha
dec
loope
sbb
xchg
push
movsb
popf
add
push
ss
movsl
cmp
adc
inc
stos
ret
pop
fsubl
call
mov
sbb
orb
cmp
mov
ret
pop
cmc
cmp
es
loope
loope
pop
lock
add
lret
push
push
mov
in
xchg
sub
cmpsl
cmp
fdivrs
mov
jno
pop
icebp
sub
js
jge
out
xchg
lahf
xchg
sub
push
mov
and
sub
mov
fimuls
setns
xchg
xor
popa
in
push
movsl
sbb
ds
outsl
mov
loope
sub
pop
pop
jecxz
call
xchg
add
sbb
push
jbe
shlb
enter
cmp
mov
jbe
dec
aad
mov
outsb
xchg
sub
shll
stos
adc
push
std
addr16
xchg
mov
mov
mov
shrl
pop
dec
loope
pop
lock
push
movsl
fwait
add
ret
in
push
movsl
cmp
push
dec
loop
test
pop
fisubl
add
mov
push
out
call
cmp
les
repz
and
loop
loopne
pop
lock
add
leave
push
pop
mov
ljmp
xlat
cmp
pop
repnz
jns
jl
out
xchg
sahf
xchg
shlb
or
dec
and
shrl
fmull
or
cs
pop
jmp
cmpsb
sbb
test
cmp
mov
loop
daa
rcrl
imul
lods
xor
std
xchg
add
sbb
push
je
shlb
push
out
testl
sbb
sub
mov
pop
lock
adc
push
std
gs
xchg
mov
mov
mov
shrb
pop
dec
loope
pop
icebp
mov
push
cmpsb
fwait
add
in
push
movsl
cmp
push
dec
jecxz
cmpsb
ret
pop
fsubs
add
mov
pop
out
call
cmp
lds
cmp
and
pop
lock
add
push
and
sbb
mov
insl
clc
pop
repz
jp
jl
out
xchg
cwtl
das
shlb
mov
and
aam
jbe
dec
loopne
cwtl
repnz
sub
pop
jmp
cmpsl
sbb
test
cmp
mov
jecxz
and
push
adc
fbstp
xor
std
xchg
decb
sbb
push
fcmovnb
pop
or
loop,pn
pusha
les
cmc
addl
push
dec
rcrl
mov
push
sub
and
mov
out
ja
icebp
test
shrb
leave
js
sti
arpl
xchg
mov
movsl
out
mov
mov
ret
hlt
pop
dec
loop
adc
imul
cltd
incl
vrsqrtps
in
movsl
ret
pop
xlat
pop
imul
clc
loope
sub
call
cmp
pop
mov
cmp
and
pop
lock
add
push
and
sbb
mov
insb
negl
sub
jnp
jnp
out
xchg
popf
cltd
xor
xor
movsb
gs
and
aad
jne
dec
loopne
xchg
repz
sub
pop
ljmp
mov
das
insl
shll
in
and
pop
push
loope
add
js
jbe
xor
and
std
xchg
std
xchg
mov
fcmovb
pop
or
cmp
mov
ret
pop
out
hlt
addb
mov
ja
inc
rcrb
mov
imul
dec
out
jbe
repnz
psrld
enter
lock
push
movsl
out
mov
mov
rcl
repz
dec
loop
adc
mov
imul
cwtl
incb
jmp
movsl
cmp
or
in
movsb
ret
pop
pop
insb
add
mov
and
dec
call
aaa
popf
sbb
pop
mov
cmp
and
lock
add
push
and
sbb
dec
insb
negb
daa
mov
push
jp
out
xchg
pushf
cltd
xor
xor
movsb
gs
mov
and
aad
je
dec
loopne
xchg
repz
sub
pop
jmp
test
cmp
insb
shll
in
and
pop
push
loopne
add
js
jbe
xor
xchg
std
xchg
mov
fld
pop
or
shll
ret
pop
out
hlt
jg
cwtl
mov
ja
inc
rcrl
mov
imul
dec
out
jne
repnz
psrld
jns
stc
lock
push
movsl
out
mov
lahf
pop
sub
imul
dec
loop
adc
mov
imul
xchg
incb
ljmp
in
movsb
ret
pop
pop
insb
add
mov
and
dec
call
ss
sbb
pop
mov
cmp
and
pop
lock
add
push
and
sbb
mov
insb
cmc
pop
hlt
es
push
jns
out
xchg
fwait
cltd
xor
xor
movsb
gs
mov
and
aad
jae
dec
loopne
xchg
repz
sub
pop
call
test
cmp
imul
cmp
lea
mov
fildll
adc
jbe
xor
xchg
std
test
mov
fadd
pop
or
shll
ret
pop
out
hlt
jle
cwtl
scas
adc
pop
mov
imul
dec
out
je
repnz
psrld
jns
clc
lock
push
movsl
out
mov
sahf
pop
sub
imul
dec
loop
adc
mov
add
adc
xor
movsl
cmp
or
cmp
add
mov
and
dec
call
xor
push
pop
mov
cmp
and
pop
lock
add
dec
and
sbb
mov
insb
hlt
pop
hlt
and
inc
jnp
js
out
xchg
lcall
gs
mov
pop
xchg
ret
aad
jb
dec
loopne
xchg
repz
sub
pop
out
test
jle
sbb
cmp
push
mov
in
and
pop
push
fisubrs
adc
jbe
xor
xchg
std
test
mov
xlat
lds
cmp
mov
ret
pop
out
hlt
jge
cwtl
scas
adc
pop
mov
imul
dec
out
jae
repnz
psrld
lds
mull
xchg
push
movsl
out
mov
popf
pop
sub
imul
dec
loop
adc
mov
imul
xchg
incb
call
or
cmp
add
scas
mov
loope
call
xor
sbb
pop
xchg
cmp
and
pop
lock
add
dec
and
sbb
mov
insb
repz
hlt
and
shrl
inc
jnp
ja
out
xchg
cltd
cltd
xor
xor
movsb
gs
mov
push
xchg
ret
aad
jno
dec
loopne
xchg
repz
sub
pop
out
test
jle
sbb
cmp
imul
dec
in
and
pop
push
vmread
jbe
xor
xchg
std
andl
dec
lds
cmp
mov
ret
pop
out
hlt
jl
cwtl
lods
adc
pop
mov
push
ds
mov
pop
repz
les
mulb
xchg
mov
movsl
in
mov
pushf
push
sub
insb
out
pop
dec
loop
adc
mov
imul
xchg
std
xchg
das
mov
out
movsl
cmp
or
cmp
insl
add
mul
js
scas
mov
loopne
call
xor
pop
xchg
cmp
pop
test
jge
inc
pop
lock
add
sub
ja
lds
mov
sbb
mov
imul
cmc
and
jl
jbe
out
xchg
cwtl
lcall
jmp
dec
sbb
ds
insl
jo
dec
loopne
xchg
hlt
mov
sub
pop
in
test
scas
aaa
xor
push
mov
mov
fsubrl
ja
jbe
das
mov
popa
lret
cld
subb
dec
aad
pop
pop
jo
shll
ret
repz
cltd
lods
adc
push
inc
int
mov
addr16
sub
pop
aas
push
mov
pop
hlt
mov
ret
jnp
cmc
pusha
lock
mov
movsl
in
mov
les
mov
dec
loop
pmaddwd
bound
stos
xchg
cld
xchg
cs
enter
cmp
pop
push
out
mov
outsb
add
daa
lods
mov
fisttps
xchg
jp
stos
inc
xor
leave
pusha
test
cmp
push
cmpsl
out
fnstcw
pop
lock
add
push
les
jge
xchg
sub
lahf
inc
fcom
cmp
mulb
mov
push
jne
out
xchg
xchg
fwait
xor
xor
push
sbb
sub
mov
xlat
outsb
outsl
xlat
dec
loopne
xchg
cmc
mov
sub
pop
in
stos
adc
ss
addr16
mov
out
and
pop
push
fldt
or
mov
pusha
leave
std
xchg
sti
subl
pop
push
outsl
cmp
mov
rcrl
jp
lcall
and
cwtl
push
inc
xlat
dec
mov
pop
cmc
mov
ret
hlt
pop
lock
mov
movsl
jecxz
mov
les
push
dec
loop
push
testb
popa
adc
xchg
sti
xchg
sub
dec
movsl
cmp
push
push
call
rcrl
push
mov
loope
lods
lea
inc
call
xor
leave
pusha
test
cmp
push
cmpsb
out
fdivrs
pop
lock
add
push
les
mov
pop
sahf
inc
fmul
cmp
mulb
mov
push
je
out
xchg
xchg
fwait
xor
xor
push
sbb
xlat
outsb
outsb
xlat
dec
loopne
nop
cmc
mov
sub
pop
jecxz
stos
adc
test
xor
mov
out
and
pop
push
fisubrl
or
fbstp
sub
std
xchg
sti
subb
dec
rol
pop
add
es
pop
rcrl
jns
lcall
and
cwtl
sbb
mov
jmp
pop
cmc
mov
sarl
lock
mov
movsl
jecxz
mov
les
push
dec
loop
or
imul
xchg
sti
xchg
sub
dec
movsl
cmp
add
ret
pop
rcll
push
mov
loope
es
lea
stos
inc
xor
leave
pusha
sub
rcrb
movsl
out
xlat
aas
pop
lock
add
push
les
mov
pop
popf
inc
fmul
cmp
mulb
mov
push
jae
out
xchg
xchg
fwait
xor
xor
push
sbb
xlat
outsb
insl
xlat
dec
loopne
cmc
mov
sub
pop
loop
stos
adc
scas
xor
enter
cmp
xchg
mov
fldcw
or
jbe
sub
and
std
xchg
sti
jg
inc
mov
sbb
dec
rol
pop
add
cmp
mov
rcrl
js
lcall
and
cwtl
sbb
xlat
dec
mov
pop
cmc
lahf
or
imul
pop
lock
mov
movsl
jecxz
mov
les
push
dec
loop
or
lea
test
add
pop
adc
nop
sti
xchg
sub
dec
movsl
cmp
add
call
rcll
push
mov
loope
es
lea
inc
call
das
fwait
sbb
pusha
sub
rcrb
movsb
out
aas
pop
lock
add
push
les
mov
pop
pushf
inc
fmul
cmp
negb
mov
push
jb
out
xchg
xchg
fwait
xor
xor
push
sbb
xlat
outsb
insb
xlat
dec
loopne
mov
mov
sub
pop
loope
stos
adc
scas
xor
enter
cmp
xchg
mov
rcrl
insl
add
jbe
jbe
sub
xchg
sti
jle
inc
mov
sbb
dec
rol
pop
add
shll
rcrl
ja
lcall
and
cwtl
sbb
dec
mov
pop
cmc
sahf
or
imul
pop
lock
mov
movsl
jecxz
mov
les
push
dec
loop
or
lea
pop
adc
sti
xchg
sub
dec
movsl
cmp
add
xor
ret
pop
rcll
push
xchg
loope
es
call
cs
sbb
pusha
sub
out
aad
pop
lock
add
push
les
mov
pop
fwait
inc
fmul
cmp
negb
mov
push
jno
out
xchg
xchg
fwait
xor
xor
push
sbb
xlat
outsb
imul
loopne
cmc
mov
loopne
stos
adc
scas
xor
enter
cmp
test
mov
rcrl
insl
add
jbe
jbe
sub
xchg
sti
jge
inc
scas
sbb
mov
rol
pop
add
shll
rcrl
jbe
lcall
and
cwtl
sbb
dec
mov
pop
cmc
popf
or
imul
pop
lock
mov
movsl
jecxz
mov
les
push
dec
loop
or
lea
imul
mov
xchg
sub
dec
movsl
cmp
add
xor
outsl
push
xchg
loope
es
and
inc
call
sub
dec
leave
pusha
sub
rcrb
mov
pop
lock
add
push
les
mov
and
shrb
cmpsb
or
mov
dec
xchg
jo
add
fcomi
pop
xchg
sarb
inc
test
test
sbb
in
push
lds
roll
cmp
cmc
inc
and
xor
inc
shrl
shrb
push
daa
dec
push
stos
mov
insb
mov
lret
or
in
mov
pop
push
jns
fsubrs
fbld
sub
cmp
sub
lods
xlat
jle
pusha
mov
jno
push
jnp
push
pop
mov
xchg
test
rcll
sbb
andnps
jecxz
daa
xchg
pop
pop
mov
lock
xlat
loopne
mov
jecxz
fisttpll
xchg
add
adc
mov
into
clc
mov
shr
pop
inc
fadd
iret
dec
pop
push
cmp
and
jle
adc
das
insl
stos
scas
fdivp
pop
es
xor
jns
inc
mov
cmp
mov
push
lea
ds
imul
push
scas
in
lock
pusha
push
inc
jle
loop
cli
mov
and
and
cs
inc
ljmp
cltd
pop
pushf
imul
mov
addl
fwait
scas
faddl
hlt
les
mov
enter
xorl
nop
or
jecxz
sbb
xchg
dec
daa
dec
sub
jle
lcall
lods
insl
jg
and
mov
test
inc
pop
pop
cmp
shrb
popf
in
add
je
mov
lods
jae
out
lret
and
push
jns
dec
les
leave
ds
jg
mov
inc
dec
sbb
imul
aad
adc
js
repnz
cs
nop
inc
push
jmp
or
xchg
ljmp
and
outsl
les
push
aad
jecxz
sti
jnp
mov
stos
cmp
mov
push
mulb
or
int3
cld
fiadds
clc
mov
inc
hlt
adc
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
ror
popf
cmp
xchg
aas
adcl
cmp
jmp
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
fstpl
es
scas
inc
jnp
inc
js
sbb
ljmp
bound
xchg
out
lds
add
