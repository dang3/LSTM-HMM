push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
incl
adc
add
call
and
add
and
add
and
add
and
add
add
and
add
repnz
add
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
add
test
add
and
add
add
call
and
add
and
add
and
add
add
inc
and
add
add
mov
add
lcall
add
add
sub
add
add
dec
and
add
add
add
add
add
and
add
and
add
and
add
add
sbb
add
pop
and
add
add
add
add
add
add
nop
and
add
add
add
add
lcall
add
add
call
and
add
and
add
and
add
and
add
add
and
add
repnz
add
add
and
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
add
add
test
add
and
add
add
call
and
add
and
add
and
add
add
inc
and
add
add
mov
add
lcall
add
add
sub
add
add
dec
and
add
add
add
add
add
popa
je
inc
jbe
outsb
je
add
repnz
imul
jb
je
arpl
add
push
push
je
imul
inc
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
enter
jae
gs
popa
insb
jne
add
add
popa
jo
jb
add
aad
inc
gs
gs
inc
imul
outsl
popa
fs
imul
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
imul
bound
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
push
gs
insl
gs
push
add
rolb
dec
gs
jo
gs
jb
jns
dec
add
insb
outsb
inc
add
add
je
jb
jbe
je
push
jb
imul
push
add
push
imul
je
add
dec
jo
outsb
dec
jne
gs
add
inc
add
outsb
arpl
dec
outsl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
outsl
insb
add
mov
push
gs
imul
gs
add
xchg
dec
jo
outsb
push
push
popa
je
add
add
ja
push
fs
inc
gs
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
push
gs
inc
js
outsb
je
add
gs
push
gs
dec
gs
imul
jae
push
arpl
add
jae
push
push
popa
je
add
jns
inc
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
push
pop
push
dec
inc
dec
inc
cs
insb
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jnp
jl
stos
lods
lods
add
cmpsb
cmpsl
push
mov
mov
mov
ret
ret
lret
int
into
rcl
in
rcl
shl
rcl
iret
hlt
int3
int3
int
leave
leave
leave
repz
enter
mov
mov
lods
lods
stos
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
lret
lret
rcl
cld
fcomp
std
xlat
fcom
aad
rcl
sar
int
int3
aad
rcl
sar
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
dec
lret
lret
dec
iret
iret
xlat
fcom
fcomp
call
dec
int3
int
into
int
call
aam
dec
int3
int
sarb
mov
scas
lods
std
cmpsb
cmpsb
cmpsl
ljmp
push
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
int3
call
rcl
fcomp
fdivr
xlat
xlat
fdivr
aam
dec
into
int
leave
lret
lret
dec
int3
int
mov
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
ds
inc
push
sbb
push
sub
push
push
xor
ss
cmp
cmp
and
and
push
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
enter
iret
iret
call
aam
call
call
iret
sar
enter
vshufpd
ret
mov
mov
ljmp
movsl
mov
xchg
cwtl
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jle
jge
jle
jb
jno
popa
popa
popa
mov
cmp
inc
inc
mov
jo
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
dec
lret
enter
ret
ret
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
fwait
lcall
aas
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
nop
fcoms
cmp
jl
idivb
jmp
outsb
outsl
out
push
push
ret
jle
jp
jp
gs
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
test
pushf
popf
pushf
call
xchg
decl
xchg
xchg
mov
mov
xchg
mov
js
jns
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
mov
mov
jge
jo
jo
jne
jae
jg
jg
test
jl
push
cmp
ss
jle
jg
fwait
fwait
cltd
lea
test
lods
sti
stos
lods
stos
lods
stos
lods
test
movsl
mov
xchg
xchg
xchg
decl
jge
jp
jns
jp
jp
mov
xchg
movsb
movsl
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
test
lea
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
cltd
fistps
lcall
mov
mov
mov
mov
nop
xchg
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jnp
scas
test
add
pop
adc
scas
call
cltd
xchg
xchg
incl
test
decb
xchg
sahf
sahf
pushf
std
movsb
mov
mov
in
nop
xchg
in
xchg
push
jne
prefetchw
add
or
or
daa
sub
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
mov
call
lahf
sahf
jmp
cmpsl
lods
pushl
cmpsl
scas
mov
xchg
stos
std
rolb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
xchg
fwait
incl
mov
decl
xchg
xchg
xchg
xchg
xchg
popf
popf
pushf
movsb
movsl
mov
mov
cwtl
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pop
pusha
arpl
je
mov
lahf
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
ja
mov
movsb
mov
mov
mov
stos
lods
lods
mov
mov
add
shlb
adc
mov
jmp
mov
call
xchg
xchg
call
cwtl
fwait
cltd
cltd
lcall
mov
movsb
movsl
stc
cltd
lcall
mov
xchg
aad
xchg
cltd
in
xchg
cwtl
out
lea
nop
stc
xchg
test
std
xchg
je
fwait
addr16
mov
push
cmp
inc
jl
mov
jnp
mov
jae
mov
insl
ljmp
adc
lods
or
lods
or
mov
jle
mov
mov
stos
pushf
mov
mov
add
mov
pop
pusha
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
pushf
jmp
popf
pushf
call
xchg
cwtl
decl
xchg
xchg
call
xchg
fwait
cld
cltd
xchg
popf
stc
mov
xchg
pushf
cld
popf
xchg
xchg
imul
xchg
dec
jp
lcall
sahf
and
mov
adc
ljmp
adc
stos
adc
stos
adc
scas
adc
mov
imul
adc
mov
insb
mov
cltd
scas
mov
scas
lods
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
popf
call
sahf
pushf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
mov
xchg
xchg
js
cltd
jno
fwait
fs
xchg
push
jp
xchg
cmp
call
pop
popa
decl
or
pop
call
add
mov
adc
stos
sbb
pushl
pop
outsl
pushl
sbb
je
mov
pop
jbe
sarl
inc
xchg
scas
mov
lods
scas
mov
lahf
lahf
mov
add
pop
pop
adc
lods
mov
mov
lcall
movsl
movsl
mov
jmp
test
cmpsb
lcall
mov
mov
decl
imul
mov
incl
or
incl
add
mov
push
decl
push
call
add
mov
or
mov
outsl
pushl
sub
mov
sub
les
dec
das
cmp
movl
mov
mov
lret
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
mov
lahf
fwait
sahf
jmp
test
stos
ljmp
mov
scas
lods
scas
jmp
jb
decl
or
incl
or
addl
addl
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
imul
sarb
inc
cmp
lret
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
fwait
sahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
stos
add
pushl
cmp
dec
inc
mov
roll
call
dec
mov
fmuls
call
dec
xchg
fisttpl
ficoml
call
xchg
mov
mov
movsb
mov
mov
add
dec
inc
adc
jl
movsb
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
movsl
mov
decl
pusha
decl
push
pop
decl
or
add
xchg
add
xchg
add
pushf
add
add
add
stos
add
mov
fs
mov
dec
call
push
cltd
fcoms
ficoml
fcoml
jmp
pop
pushf
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsl
test
lahf
mov
mov
add
add
add
inc
inc
adc
ja
lahf
lcall
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
pushl
mov
call
and
xchg
and
xchg
and
xchg
sbb
or
xchg
add
add
cltd
add
mov
add
stos
add
mov
fs
mov
xor
fldenv
fbld
fbld
jmp
gs
in
test
call
push
jmp
test
xchg
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
aas
adc
jb
cltd
xchg
cwtl
call
mov
scas
scas
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
lods
add
mov
pushw
adc
rolb
fsubrl
jmp
outsb
stos
jmp
jno
call
je
jmp
scas
in
jae
in
jne
in
je
out
je
jmp
mov
mov
cmpsb
test
lahf
sahf
lahf
pop
lahf
sahf
mov
add
add
add
jge
cmp
aas
adc
insl
js
mov
popf
fwait
fwait
pushl
mov
mov
mov
mov
mov
cmpsb
lods
lcall
xor
mov
cmp
xor
lcall
call
add
movsb
add
test
add
mov
gs
mov
sbb
fsts
jmp
ja
call
jge
in
cmpb
repnz
push
test
call
mov
shl
test
cmpsl
popf
sahf
sahf
daa
sahf
lahf
sahf
add
add
add
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
sar
mov
jmp
cmp
inc
jle
mov
ss
lcall
lcall
pop
ljmp
add
add
mov
add
iret
and
movsb
ljmp
out
sar
lea
push
xchg
sar
nop
xchg
xchg
stc
pop
out
pop
fidivl
clc
stos
lods
stos
mov
sahf
pushf
xor
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
nop
pushl
mov
inc
rol
ret
inc
ret
ret
inc
mov
ljmp
inc
jl
test
jg
lods
dec
test
movsl
xor
popa
lcall
add
cmpsl
add
lods
add
mov
mov
add
enter
xlat
xor
jmp
js
in
xchg
push
cltd
enter
push
cltd
push
pushf
lret
fwait
enter
int3
sti
popf
into
sti
popf
into
cld
cltd
lret
push
xchg
ret
fbstp
cli
mov
mov
mov
popl
lcall
add
cmp
add
sub
outsb
dec
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
inc
leave
inc
mov
lahf
lcall
dec
xchg
scas
dec
mov
movsl
sub
lcall
jmp
add
mov
arpl
mov
add
movl
jbe
loopne
xchg
out
mov
push
movsb
into
push
movsl
into
clc
cmpsl
into
cld
test
iret
cli
cmpsl
sar
cld
stos
sar
std
test
sar
negb
int3
dec
leave
lret
std
mov
mov
mov
xchg
xchg
add
lcall
xor
add
sub
or
inc
bound
push
xlat
jne
jo
mov
sarl
mov
ret
inc
vpaddd
enter
pushl
push
xchg
scas
push
mov
scas
dec
test
lahf
sbb
lcall
add
add
mov
arpl
mov
add
int
insl
call
add
fists
jl
in
pop
test
cmc
sahf
lret
lods
sar
cld
scas
aad
sti
mov
sti
mov
cld
mov
mov
mov
std
mov
mov
mov
push
movsb
jmp
mov
call
leave
lret
mov
mov
sahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
sbb
outsl
outsb
outsb
mov
mov
aad
fsubr
xlat
fdiv
rcl
sar
int3
int
dec
lret
lret
lret
lret
dec
lret
mov
scas
ljmp
push
mov
lods
cmp
arpl
mov
add
mov
arpl
mov
add
roll
outsb
call
add
loopne
jne
jmp
jb
cld
lods
aam
std
mov
mov
fcos
mov
std
mov
fdivr
inc
fcos
mov
int
call
leave
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
movb
loop
call
out
test
in
leave
fucom
fcmovnu
xlat
cli
fcom
std
int
sar
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
call
add
fldl
jne
jecxz
js
out
xor
sti
mov
loopne
std
ret
inc
loop
inc
fdivrp
std
dec
fdivrp
dec
std
leave
inc
fdivrp
std
lret
sti
mov
leave
call
leave
sar
mov
mov
xchg
adc
add
add
std
add
incb
incl
repnz
or
in
in
pop
in
in
in
sub
out
in
dec
call
jmp
out
in
in
fucomp
ret
stc
lods
outsl
xchg
cmpsl
cmp
movsb
push
jmpw
add
mov
arpl
mov
add
int3
add
add
filds
jbe
jmp
inc
popf
cli
mov
in
std
int3
loop
dec
in
std
int
dec
jecxz
std
into
loope
dec
loop
dec
loop
shl
shl
std
shl
cli
in
mov
fdivr
ret
ret
cmpsl
cmpsl
test
xchg
xchg
xchg
sbb
fwait
fwait
add
incl
std
std
incb
idiv
testb
repz
repz
push
out
lock
out
icebp
lock
in
in
pop
fsubp
loope
les
sti
lahf
and
pop
jmp
add
mov
inc
add
movl
jb
fiaddl
jbe
in
jp
in
push
jl
cmc
pop
test
sti
mov
shl
dec
jecxz
std
shr
call
out
std
shl
call
out
call
out
call
jmp
std
fucomi
std
fucompp
shl
push
ret
jmp
aad
dec
lret
lret
test
xchg
and
xchg
cwtl
add
std
sti
add
std
testl
repnz
or
shlb
sarl
fwait
sbb
add
add
scas
add
mov
add
leave
add
add
faddl
jbe
call
sbb
push
jbe
sti
ret
loopne
std
fsubr
fldl2e
std
fucompp
fucompp
fucomi
std
fsubr
fsubr
std
fsubrp
fucomip
fucomip
cld
shl
push
ret
jmp
aam
call
ror
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loope
add
mov
xchg
lods
jl
repnz
jmp
add
mov
add
int3
add
add
filds
jae
call
sub
std
shl
std
fsubrp
std
fucomi
std
fucomi
std
fsubr
std
aam
std
aam
cld
shl
sti
shl
stc
into
fdivrp
test
aad
out
mov
xlat
sti
mov
mov
fwait
fwait
cltd
cmp
fwait
cltd
add
add
mov
subb
insb
jmp
add
mov
mov
add
iret
add
fadds
jb
loopne
jns
ljmp
sti
xchg
enter
loope
cld
lret
cli
stc
mov
sar
repz
sar
repnz
int3
call
mov
iret
std
call
shl
call
fsubp
in
mov
mov
xchg
add
add
add
into
int
mov
rol
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
into
or
rorl
jns
loope
cmp
dec
xchg
call
mov
jmp
scas
std
loopne
cld
fbstp
neg
mov
enter
into
in
lret
aad
loop
fcmovb
call
in
test
in
out
popf
jmp
leave
lret
stos
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
ret
mov
stos
aam
dec
cmp
sbb
test
imul
and
mov
js
mov
inc
xchg
ret
push
mov
leave
fs
mov
out
mov
mov
enter
lret
rcl
int3
mov
int
mov
aam
jg
fcmovnu
jb
loopne
gs
in
out
jmp
xor
div
cmc
and
lock
sbb
or
mov
int3
add
add
add
rol
mov
mov
les
insb
mov
test
xchg
ljmp
mov
sarb
test
mov
pushf
leave
rol
into
enter
int
addr16
ror
push
rcl
rorl
fcom
inc
rcl
aad
fcmovnu
daa
xlat
fcmovnu
sbb
loopne
adc
in
push
fucomip
in
call
repnz
add
sti
cmc
add
std
add
std
add
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
ror
xor
into
leave
daa
int
iret
and
rcrl
rcl
rcll
iret
aad
or
push
rcr
xlat
add
fcmovnu
add
add
in
add
jmp
add
fcom
add
std
add
mov
add
rol
ret
mov
rol
sub
mov
mov
push
ret
or
mov
add
int
add
aam
add
aad
aam
add
aam
aad
add
fabs
add
aam
add
loop
add
fstp
add
out
add
repnz
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
scas
mov
adc
sarb
rcl
shr
aam
shl
rcl
sar
iret
ror
cli
int
int
lret
lret
int3
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
ror
iret
aad
xlat
call
xlat
xlat
dec
ror
dec
into
into
dec
lret
int3
mov
mov
cld
stos
lods
lods
icebp
cltd
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
jae
jae
fs
dec
inc
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
aam
sar
int3
lret
int3
inc
sarl
ljmp
popf
sahf
xchg
cwtl
xchg
jmp
jo
xchg
pop
pop
pop
dec
add
add
add
add
add
add
jg
addb
jp
addl
aam
imul
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
fstpt
mov
sar
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
xchg
cwtl
fcoml
addb
jge
jl
jp
jns
jns
jns
jnp
jnp
je
jae
push
push
push
cmp
je
pushf
sahf
popf
mov
scas
scas
repz
scas
scas
sti
scas
scas
scas
std
cmpsl
cmpsl
test
call
xchg
call
mov
scas
jmp
lods
lods
leave
movsb
movsl
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
outsb
outsl
pop
xchg
mov
mov
test
std
mov
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
outsl
orl
lcall
mov
call
lahf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsb
mov
addb
add
add
add
add
pop
or
lods
mov
cmpsb
sahf
mov
decl
nop
call
popf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
outsl
outsb
xchg
subl
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
jnp
mov
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
fwait
fwait
pushf
lcall
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
jle
pushf
dec
jl
movsb
inc
jp
lods
aaa
ja
mov
je
scas
pop
insl
pushl
sbb
pop
mov
mov
jle
movsl
movsb
push
pusha
pusha
pop
or
mov
in
movsb
cmpsl
call
sahf
popf
jmp
mov
cwtl
decl
orl
xchg
jb
cld
xchg
pop
test
xchg
dec
js
cmp
nop
sub
xchg
sbb
cwtl
punpcklbw
mov
pop
imul
mov
outsb
pushl
push
jb
mov
pop
nop
mov
scas
lods
xchg
sahf
sahf
sahf
adc
add
add
pop
pop
pop
or
stos
mov
stos
mov
mov
ljmp
test
cwtl
decl
push
mov
decl
adc
test
push
decl
add
xchg
add
fwait
add
cmpsl
or
jb
mov
das
jle
ret
das
jle
xor
lret
xor
dec
pop
cwtl
inc
stos
mov
mov
scas
movsb
test
test
pusha
pusha
pop
or
movsl
test
test
cmpsb
jmp
mov
pushl
mov
jmp
jo
mov
pop
decl
or
xchg
push
decl
add
lahf
add
movsl
add
mov
outsb
inc
cmp
dec
inc
mov
rolb
call
inc
nop
flds
call
arpl
stc
mov
mov
movsb
movsb
movsb
daa
incb
add
add
pop
pusha
popa
or
sahf
mov
ljmp
mov
mov
mov
ljmp
push
jl
sbb
popa
decl
or
decl
add
lahf
add
add
lods
add
jbe
iret
dec
xchg
call
push
lcall
pop
lahf
jmp
pop
mov
jmp
insb
test
int3
cmpsl
mov
ret
movsl
xor
add
add
dec
pop
jle
jl
popf
xchg
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
pop
imul
jmp
outsb
test
jmp
jb
in
jno
call
test
std
mov
test
inc
cmpb
add
add
dec
dec
dec
pop
outsb
outsl
imul
xchg
lcall
mov
mov
sar
mov
jmp
cmp
cmp
pushf
sub
xchg
or
pop
jmp
add
mov
gs
or
xlat
dec
xchg
jmp
jns
ljmp
push
xchg
xrelease
fisubl
mov
push
lcall
add
sub
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
sub
fwait
push
pop
jmp
add
mov
fs
mov
push
jne
loope
mov
push
xchg
cltd
push
cwtl
enter
leave
sti
fwait
lret
clc
cwtl
jmp
lods
inc
mov
lods
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
mov
test
ljmp
pop
push
mov
add
mov
arpl
mov
add
fldenv
cmp
jl
push
mov
sar
stc
test
sti
test
iret
stos
sar
cli
test
jmp
mov
inc
rol
test
popf
sahf
or
add
add
dec
push
dec
aaa
je
jb
stos
stos
stos
ror
int
out
iret
int
lret
lret
leave
lret
mov
mov
popa
mov
stos
inc
cmp
adc
add
mov
arpl
ret
dec
add
flds
jbe
ljmp
cld
mov
mov
mov
fdivr
cld
mov
fdivr
sti
mov
jmp
rol
mov
lods
mov
add
add
add
add
or
aam
dec
loopne
loope
loopne
fistps
fcmovnu
fsubr
shlb
cmpsl
sub
jmp
add
mov
add
add
jecxz
jnp
icebp
dec
mov
sti
inc
loope
std
enter
leave
fdivrp
std
leave
fdivrp
dec
cld
out
mov
lret
mov
xchg
popf
pushf
pushf
sbb
add
add
incl
std
std
add
ljmp
in
in
in
xor
loopne
in
les
mov
mov
add
mov
inc
add
into
add
fldl
jne
jmp
insb
mov
cld
ret
sti
shl
shl
shl
std
aam
aad
out
std
shl
push
fdivr
fcmove
sar
mov
mov
add
std
incl
std
std
std
add
cld
incb
aad
aad
mov
pop
mov
popf
or
pusha
pushl
add
rolb
jno
fiadds
jne
out
pop
mov
cli
mov
cld
shl
fldl2e
fld1
std
fsubr
std
fsub
std
fsub
sti
aad
push
xlat
jmp
iret
sti
mov
lahf
popf
das
add
add
int3
int
or
arpl
ljmp
add
enter
aam
jb
loopne
jns
out
xor
stc
int
clc
leave
fdivrp
test
xlat
bnd
aad
out
ret
sar
in
vpsubw
aam
jmp
aam
in
fsubrp
enter
test
incb
aam
push
mov
je
or
imul
pop
jno
int
jge
aad
xchg
ficoms
clc
jecxz
mov
out
in
lret
mov
leave
fadd
lret
sarb
in
ficompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
into
mov
ret
mov
int3
insl
ror
iret
pop
rcl
rorl
xlat
xlat
cmp
das
in
fsubl
loop
icebp
adc
jmp
or
incl
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
shrb
enter
rcl
pop
rol
adc
rcl
or
loopne
or
int
add
std
std
incl
std
incb
cltd
lcall
les
into
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
enter
mov
mov
mov
mov
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
std
rcl
sar
int
iret
std
mov
stc
mov
test
andb
pop
add
add
add
add
add
add
add
add
jno
jb
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
aad
dec
int
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
outsb
jo
arpl
mov
data16
insl
outsb
outsb
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jno
daa
daa
daa
das
add
add
add
add
jb
jb
popf
xchg
pushf
mov
test
mov
xchg
test
addl
dec
dec
dec
inc
mov
popf
into
mov
mov
xchg
decb
lcall
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcl
stos
mov
mov
mov
xchg
cld
pushf
pushf
sahf
cmc
cwtl
cwtl
lcall
push
push
imul
jg
mov
notl
mov
mov
fwait
mov
jo
mov
lods
scas
push
lods
lods
lods
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
cltd
fwait
lcall
lcall
xchg
mov
loope
je
out
nop
bound
std
lcall
ljmp
pop
outsl
pushl
aaa
jnp
mov
mov
imul
into
add
test
pop
lods
movsb
lods
test
sahf
pushf
sahf
jmp
cmpsb
call
jl
mov
xchg
inc
jae
lea
imul
sbb
pop
lcall
or
ljmp
and
mov
sub
lds
mov
mov
subl
jne
push
mov
movsl
cmpsl
cld
test
cmpsb
ljmp
mov
lcall
sub
decl
or
xchg
decl
add
mov
adc
shlb
call
inc
mov
aad
mov
aad
xchg
dec
lcall
movsl
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
mov
call
pop
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pop
movsl
jmp
cmpsw
call
fwait
mov
test
test
pop
add
add
bound
adc
sahf
lcall
mov
mov
mov
popf
dec
jge
fwait
xor
cwtl
and
call
add
add
mov
xor
jmp
jl
out
jge
out
jg
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
pop
pushl
pop
insb
fisttpl
out
mov
push
xchg
xchg
enter
enter
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
sarl
ljmp
sbb
movsl
add
mov
fs
add
adc
ljmp
stc
lods
iret
cld
lods
sar
sti
scas
sar
std
lods
sar
in
mov
inc
mov
cmpsb
ds
std
incb
xor
xor
outsl
outsl
jo
mov
mov
aad
mov
aam
rcl
shr
lret
cli
mov
mov
jmp
add
ret
add
aam
jno
out
test
testl
cld
ret
inc
inc
out
mov
shl
test
dec
addb
add
in
in
or
out
out
loopne
in
fisubl
mov
add
mov
add
fiadds
jbe
lock
cld
int
dec
in
call
in
shl
call
in
hlt
leave
ror
int3
in
scas
scas
scas
popa
addb
add
std
incb
std
incl
int
shrb
lahf
sbb
stos
add
mov
add
loop
jp
hlt
push
movsl
std
enter
call
cld
aad
std
aad
cli
shl
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
ret
les
mov
push
gs
mov
or
cmp
lock
aam
ljmp
jmp
in
rcl
jmp
scas
lds
fwait
fwait
add
rol
or
pushf
lods
xchg
and
ret
int3
lret
mov
xlat
mov
lret
int3
outsl
fmul
into
pop
dec
jecxz
loope
call
out
out
sbb
rol
add
mov
cmp
movsb
lods
arpl
stos
mov
ret
mov
lds
int3
sbb
bswap
int3
into
or
aad
std
incb
addl
add
stos
std
std
add
mov
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
loop
js
xor
mov
ljmp
loop
add
in
push
andnps
out
xchg
adc
test
mov
scas
pop
nop
mov
int3
icebp
sub
cli
popf
leave
mov
call
inc
cmp
gs
pop
sub
es
mov
cmpsb
stos
pop
xor
add
push
sbb
mov
ss
mov
xchg
ds
jge
jae
cmc
scas
mov
pop
inc
add
inc
mov
enter
and
jmp
adc
pop
movsl
cmpb
xchg
movsb
sub
bound
insl
sarl
mov
dec
outsb
lock
push
sbb
rolb
int
fisubrl
push
add
mov
add
jle
dec
out
xor
mov
movsl
mov
addr16
out
data16
add
jmp
notb
imul
jge
ret
loope
in
cmp
or
jae
repnz
push
stos
int3
test
add
mov
test
inc
sbb
nop
hlt
push
or
lods
stos
xorb
push
popf
jge
lahf
mov
xchg
aaa
cmpsl
add
inc
insb
sbb
cmp
adc
dec
lahf
cmp
fmul
mov
cmp
mov
aaa
and
mov
jmp
scas
clc
or
andb
loopew
shlb
lret
cmpsb
adc
cmpsb
daa
adc
and
mov
mov
dec
cmp
pop
and
aam
ljmp
pop
dec
mov
and
xor
push
and
aad
dec
push
subl
jno
rcrl
sbb
or
add
pop
cmc
xor
xchg
in
mov
fisubrl
xchg
call
and
inc
pop
cmpsl
pop
jmp
loope
or
call
pop
or
fistpll
pusha
lcall
nop
lret
cltd
clc
sbb
pop
aas
cltd
pop
and
push
sbb
pop
mov
xchg
imul
int
das
and
mov
lock
call
std
push
movsl
dec
cltd
dec
sahf
add
pop
js
fisubrs
lods
dec
mov
aam
in
imul
outsb
out
inc
insl
dec
or
sahf
leave
xchg
shlb
int3
cltd
es
dec
jo
test
jns
push
mov
cmpsb
jnp
ljmp
call
mov
cmp
stos
aam
rol
push
add
lods
sbb
jae
adc
lcall
mov
clc
add
or
push
test
ds
sbb
and
incl
aad
xchg
das
mov
fstl
jmp
roll
fistl
iret
es
data16
adc
dec
enter
icebp
cmp
cmp
or
lahf
mov
or
rep
outsb
lret
mov
jp
xchg
lcall
sub
sub
in
cmp
stc
je
mov
test
in
mov
out
mov
push
add
stos
pop
outsb
outsb
dec
iret
add
pusha
jnp
orb
pusha
dec
cmp
faddp
jp
cs
dec
pop
add
pop
push
push
lock
jp
in
out
jno
sbb
test
mov
push
roll
dec
dec
push
mov
sbb
mov
in
loope
xchg
xchg
in
and
mov
mov
loop
ljmp
inc
inc
mov
in
mov
adc
movsb
push
and
push
adc
stos
sub
push
jb
call
inc
gs
stc
cmp
movsb
int3
pushl
fcomi
pop
sub
pop
in
stc
mov
mov
ret
cltd
in
lret
les
jb
stc
loopne
aas
xchg
push
push
in
test
adc
cltd
mov
cwtl
cmp
cwtl
cmp
cmpsb
repnz
test
ja
jb
shll
sti
fidivs
mov
leave
sarl
or
stc
pop
aas
pop
pop
std
lods
and
mov
pop
sub
cmp
sarl
mov
cli
pop
mov
mov
pop
cmpsl
cltd
cmp
lsl
sti
xchg
dec
xchg
xchg
sub
cwtl
pop
mov
cmp
das
ret
mov
orl
mov
mov
in
sbb
lret
dec
jg
adc
mov
add
addr16
pop
adc
subl
xchg
cmp
iret
ret
mov
push
xor
lcall
add
stos
adc
outsl
lcall
fiaddl
rolb
rol
iret
xchg
clc
daa
test
stos
inc
ljmp
aam
push
mov
neg
insl
in
les
xchg
xor
or
mov
inc
imul
lcall
mov
into
cmp
mov
ret
sub
xlat
lahf
mov
jne
dec
jle
xor
lods
mov
mov
add
ficompl
scas
push
stos
arpl
icebp
xchg
test
scas
mov
rorb
sbb
roll
dec
mov
cltd
int
jnp
rol
insl
ret
and
dec
push
aam
test
and
outsl
xchg
sbb
sub
mov
sub
ja
sbb
mov
lret
outsb
xchg
push
and
or
test
ficomps
stos
jae
cmp
add
or
hlt
leave
pusha
out
xor
pushf
xchg
push
out
add
jne
popf
jp
les
imul
aas
sbb
loop
jmp
xor
out
pop
aad
icebp
mov
push
call
call
push
mov
mov
inc
pop
fadd
jle
loop
cmp
icebp
push
xchg
gs
test
ds
jecxz
xor
nop
xchg
adc
adc
xor
push
mov
sar
xchg
ret
mov
pop
jle
push
cwtl
sub
pop
cmp
xor
out
pop
hlt
jmp
dec
out
or
adc
pop
insl
add
pusha
cltd
xor
lods
inc
clc
mov
bound
outsl
test
sbbb
pop
sahf
icebp
clc
adc
sub
es
inc
sub
lods
inc
cmpb
fldenv
lret
xor
push
push
cld
xchg
and
ret
sbb
xchg
repnz
add
hlt
cli
and
mov
jecxz
loop
cmp
movsl
movsb
mov
or
repnz
ss
lcall
mov
cmp
inc
mov
pop
insb
xchg
mov
jbe
ljmp
adc
sti
xchg
jo
sbb
ret
shlb
fsts
or
push
in
sub
pop
mov
mov
fistl
dec
add
scas
inc
popa
and
int
mov
in
test
int3
or
pop
push
sub
dec
jp
mov
mov
ret
repz
fs
dec
adc
adc
add
cs
outsl
repnz
mov
sub
mov
inc
push
popa
dec
dec
mov
jle
pop
mov
es
pop
cli
aas
push
aaa
das
sti
fwait
add
das
mov
push
cmp
fstpt
add
sbb
ja
scas
mov
mov
lods
stos
jmp
pop
inc
push
aam
fwait
sti
in
xor
or
cmp
sbb
sub
cmp
xor
scas
jp
push
lods
iret
push
call
add
outsl
push
push
and
xchg
push
jne
and
je
mov
enter
cmp
negl
lret
sbb
dec
outsb
call
or
roll
repnz
and
dec
inc
gs
ficoml
mov
clc
call
or
movsb
cmp
mov
ret
mov
loopne
add
jb
jmp
xor
nop
mov
xchg
loopne
in
test
icebp
mov
je
adc
xchg
or
sbb
sub
ja
push
dec
add
call
lea
jnp
push
std
xchg
xchg
push
push
mov
mov
or
sbb
push
scas
arpl
pushf
iret
sbb
gs
dec
roll
and
out
call
pop
jp
es
or
cs
mov
ror
mov
and
loop
in
pop
mov
out
call
out
stc
mov
jmp
jae
mov
pusha
aad
mov
dec
cmpsl
ja,pt
inc
fisubs
ret
pop
mov
xchg
sub
shll
adc
sub
push
jmp
mov
pop
xor
mov
mov
movsl
add
cmp
stc
mov
arpl
sbb
adc
fucomp
mov
mov
lock
leave
pusha
adcl
out
xchg
adc
push
aaa
add
test
sbb
mov
fdivl
lret
fbstp
out
lds
test
icebp
jb
mov
pushw
ret
in
add
movsb
xchg
sub
mov
xor
mov
sbbb
push
daa
imul
bound
sub
cmc
jmp
jbe
mov
nop
daa
sbb
dec
loope
cmp
les
sarb
ret
leave
outsb
jecxz
adc
or
cmpsb
out
fbstp
or
mov
pushf
cli
xchg
push
jae
mov
mov
ret
mov
outsl
push
sbb
mov
outsl
push
flds
stos
inc
in
pop
jns
jnp
push
jmp
ds
inc
fcoml
aaa
mov
les
adc
test
push
add
mov
in
xchg
sub
adc
xor
mov
add
mov
leave
inc
fdivrl
fildl
pop
nop
daa
inc
in
dec
loope
out
inc
fldcw
add
jno
hlt
mov
xchg
mov
push
mov
and
cwtl
or
lret
stos
sub
mov
dec
lock
inc
ss
outsl
mov
popa
sbb
mov
subb
push
sbbl
mov
push
in
sbb
cli
cmp
lods
daa
shrl
int
inc
mov
loope
sbb
ret
clc
hlt
sub
mov
push
stc
nop
sbbl
sbbb
setge
add
add
or
sbb
sub
fisubs
sbbb
or
inc
mov
in
adc
xor
push
in
vpshaw
mov
mov
xor
push
repnz
inc
xlat
test
pop
xor
lds
or
inc
mov
jp
and
sbb
mov
movaps
sub
cmp
sub
cmp
mov
lea
sub
repnz
outsl
push
adc
repz
mov
stos
aam
repnz
int3
xchg
sub
fists
mov
jecxz
push
jmp
add
repnz
cwtl
and
leave
sub
aad
mov
shlb
push
out
xchg
dec
out
arpl
push
or
mov
push
mov
jne
stos
sub
ficomps
push
out
mov
andb
jle
jg
xchg
sub
dec
push
mov
sub
imul
cmp
pusha
aaa
into
jp
mov
add
out
inc
and
xchg
jmp
mov
daa
test
mov
out
pop
outsb
add
cmpsl
outsb
adc
jns
and
adcl
or
aas
push
repz
sub
jae
stos
lds
pop
mov
jns
jno
rolb
sub
mov
nop
daa
ja
testb
fsubr
jg
sub
je
mov
xchg
sub
mov
call
popf
mov
push
and
push
mov
or
mov
cli
in
fnstenv
sbb
and
scas
pop
sahf
and
fs
inc
popa
clc
xor
ss
stos
inc
inc
sbb
shll
aad
pop
or
js
jns
scas
push
inc
fisubrs
mov
fs
xchg
sub
pop
and
mov
sbbl
pop
test
adc
sbb
jae
push
mov
pop
push
fistps
rcrl
xchg
sub
mov
cld
nop
xchg
sub
xchg
lds
sahf
xor
cmpsb
mov
sub
call
cmp
cld
xchg
dec
pop
call
pop
sub
repnz
push
adc
movsl
mov
pop
adc
xchg
test
xchg
scas
in
mov
adc
fs
shll
shll
xchg
mov
push
push
in
addl
and
addr16
dec
sub
lods
popf
jmp
cmc
xor
add
js
mov
aam
gs
pusha
push
xchg
sti
xchg
ret
sub
jae
pop
cmpsl
mov
cmp
push
inc
fisttpl
mov
ret
cwtl
das
adc
sbb
push
lods
inc
dec
dec
push
in
push
pop
cmc
jp
pop
icebp
insb
or
les
mov
push
das
out
and
rcll
aad
and
fwait
xor
inc
pop
bnd
hlt
cmpsb
push
inc
addr16
ja
cwtl
das
pop
push
push
inc
jl
fsubrl
mov
inc
add
gs
xchg
fwait
aam
in
mov
push
clc
inc
test
cmp
cli
xchg
dec
dec
pop
cmc
js
in
pop
or
hlt
data16
repnz
pusha
testl
es
sbb
push
jmp
cmp
mov
into
adc
leave
loopne
out
jnp
fldenv
push
add
nop
add
mov
pop
cwtl
call
cmpsl
das
sub
test
add
add
rcll
js
popa
ljmp
sub
addr16
and
cmp
dec
mov
pop
cld
sti
jno
sbb
std
xchg
nop
scas
shrl
mov
repnz
push
lods
inc
addr16
xor
mov
ss
cmp
int
pop
adc
jecxz
jnp
mov
and
les
and
push
mov
or
mov
andb
inc
fndisi(8087
inc
stos
inc
cmp
insl
add
lcall
lahf
in
outsb
add
push
lcall
dec
sub
jmp
push
pop
push
stos
imul
in
pop
pop
mov
imul
and
stos
push
mov
cs
sbb
sub
xor
push
inc
mov
pop
std
gs
pop
push
mov
scas
jnp
lcall
jo
inc
adc
jns
cwtl
jecxz
sub
cmp
xchg
sub
jg
cmp
push
popf
push
jbe
cwtl
xor
push
test
xor
xchg
push
push
add
add
jp
push
jae
jl
das
ljmp
cltd
je
and
xchg
pop
inc
call
scas
mov
inc
fcmovu
push
hlt
mov
jne
add
fistl
mov
test
sbb
xor
dec
mov
mov
sahf
pop
mov
jae
mull
sub
call
int
pop
icebp
mov
mov
mov
pop
add
xor
movsb
cmp
les
lahf
mov
ret
pop
mov
push
pop
cmc
inc
out
mulb
adc
push
jmp
popa
ret
stc
nop
mov
add
mov
popa
xor
pop
ja
xchg
sbb
jae
add
sbb
sbb
adc
dec
jmp
fdivl
loopne
ss
fmull
testl
mov
scas
pop
les
rcrb
push
sub
lret
out
dec
test
pop
adc
jbe
enter
iret
fbstp
add
xchg
das
push
call
andl
js
jle
cltd
les
xchg
jo
or
pop
imul
add
fmull
jbe
or
sti
lahf
pop
je
jecxz
inc
rcll
jle
ret
scas
mov
jg
cltd
adc
xchg
adc
add
cmpsb
repnz
jb
or
es
je
mov
mov
test
xchg
daa
ds
pop
xor
popa
sbb
mov
incb
xchg
inc
push
dec
icebp
imul
cli
in
leave
xchg
lods
add
xor
add
jmp
shl
lret
das
cmpsl
push
jne
inc
dec
outsb
sarb
adc
popf
xchg
push
repnz
lods
roll
cmpb
inc
pop
cltd
dec
mov
xchg
pop
cmp
mov
int
or
fcoms
cmp
addl
add
xchg
cmp
pop
xor
daa
pop
pushf
in
add
js
xchg
popa
in
sub
repz
and
cmc
jg
rorb
and
jbe
rcll
and
xchg
daa
and
imul
sub
jg
push
jmp
mov
pop
testb
and
loopne
xchg
sub
jo
repz
pop
sbb
xor
push
jg
aam
pop
into
adc
xchg
add
mov
adc
inc
lret
bound
lds
int
push
sbb
js
ds
jns
sbb
and
adc
xchg
je
and
rolb
jae
mov
call
cmp
pop
xchg
sub
dec
in
mov
lcall
and
imul
adc
ss
mov
fs
xor
pushf
xor
stos
in
cld
je
jmp
movsl
outsl
or
dec
mov
mov
sahf
jno
mov
adc
mov
ret
and
inc
inc
testl
push
lret
leave
pusha
std
aas
xor
sbbl
insb
push
movsb
push
out
jno
pop
xor
dec
loope
push
out
imul
sahf
mov
das
xchg
aaa
into
pop
push
stos
inc
jns
fdivl
shll
ret
ss
test
in
mov
jb
inc
fldl
lcall
xchg
mov
out
testl
jmp
pushl
inc
test
enter
sub
push
jmp
cmpsl
fistl
sbb
scas
dec
sahf
xor
xor
xor
push
jl
inc
fucomp
popf
ret
or
jmp
xor
mov
sub
cmpsb
pushf
push
ret
pop
inc
popf
movsl
cmp
add
mov
mov
in
roll
and
gs
push
cli
mov
in
or
ja
jno
sub
fidivl
xchg
or
pop
hlt
inc
fistps
mov
scas
icebp
mov
es
cltd
or
lock
sbb
mov
fnstsw
bsf
addb
stc
nop
jae
js
jnp
sbbl
popf
std
xchg
and
add
mov
ficoml
or
cld
xchg
or
pop
lock
pop
testb
lahf
xchg
adc
pop
push
xchg
sub
js
xor
adc
fcomps
repnz
inc
nop
daa
inc
jno
ret
mov
jns
mov
adc
jnp
cmp
or
popl
dec
loop
add
add
add
mov
in
pop
mov
lahf
stos
adc
inc
int3
es
mov
and
mov
call
int3
fbstp
scas
and
aad
jp
out
imul
sbb
aas
dec
dec
loope
add
les
popa
fwait
xor
adc
test
jle
jb
daa
mov
dec
das
mov
mov
or
cmp
jmp
inc
rcl
push
out
les
push
in
add
das
fbld
out
xchg
inc
sub
pop
hlt
repz
bound
sbbl
and
inc
mov
pop
dec
jo
pusha
jns
ds
xor
outsb
xchg
aaa
adc
add
dec
loope
shrl
sub
pop
mov
xchg
cs
add
push
lods
dec
xchg
testb
out
or
insb
jle
mov
and
es
sub
push
mov
sub
es
dec
imul
sub
xor
test
daa
mov
jb
inc
fdivl
ret
pop
sub
xor
and
inc
pop
inc
xor
jae
mov
mov
inc
xor
pop
xchg
lods
or
mov
push
or
cs
mov
clc
cmp
mov
lods
inc
scas
test
ret
pop
add
insl
add
and
pop
jae
std
xchg
out
xchg
mov
fcoms
das
cmpsb
stc
out
into
movl
int3
sbb
lret
jns
mov
fucomi
xchg
jge,pn
je
aad
fistl
mov
aad
jmp
insl
sbb
movsl
cmp
gs
sub
pop
out
inc
dec
mov
or
or
pushf
test
lret
cld
movsl
jecxz
ret
sbb
leave
pusha
or
aaa
into
cs
jae
dec
inc
fildl
mov
sbbl
adc
xchg
jl
popf
dec
mov
pop
or
sahf
sub
cmp
fnsave
outsl
push
push
inc
sahf
xor
ret
xor
jecxz
aam
jmp
inc
sbb
ds
mov
cmpsb
cmp
pop
sub
jo
jge
fiaddl
push
jno
cmp
aaa
xchg
les
pop
cmp
dec
dec
add
dec
xorb
imul
cmp
xchg
sbbb
mov
and
pusha
dec
push
ljmp
pop
mov
hlt
add
rclb
and
iret
or
jp
or
out
jb
arpl
mov
mov
pop
pop
icebp
dec
sub
sbb
es
xchg
fwait
xchg
or
ja
mov
pop
shrb
fisttps
into
notb
scas
adc
jg
sub
cmp
insb
dec
mov
or
and
andb
cmpsl
jne,pt
jge
inc
cmp
add
mov
jp
dec
movsl
int
xlat
sahf
add
xor
addb
mov
mov
sbb
and
push
pop
mov
xor
in
adc
fs
mov
test
out
push
movsl
mov
fisubrl
or
push
mov
loope
dec
iret
inc
pop
sub
xchg
jl
xchg
cs
repz
inc
cmp
int3
xchg
push
pusha
testl
lock
and
js
mov
mov
clc
aaa
daa
mov
cwtl
sbb
ret
pop
cmp
cmp
cld
xchg
and
sbbl
mov
stc
mov
fstpl
pop
pushl
repnz
add
cmp
ret
and
jmp
push
inc
clc
push
ljmp
in
sub
cmp
jns
and
dec
shlb
add
mov
inc
orb
insb
xchg
mov
mov
xor
test
xchg
sub
and
inc
push
je
dec
cmpsb
jb
imul
call
mov
jne
mov
cli
xor
lret
bound
jne
xchg
xchg
movsl
test
cmp
pop
sub
push
mov
lret
or
dec
pop
cmp
dec
notl
out
mov
mov
cmpb
sub
jno
lods
addr16
mov
cmp
jle
lods
lcall
lret
insl
cmpsl
xor
and
scas
jge
xchg
or
imulb
pop
lds
testl
and
xchg
fs
pop
and
mov
je
lahf
sti
xchg
shll
inc
pop
movsb
dec
movsb
sbb
mov
imul
push
cmp
mov
push
lds
mov
fdivp
jge
sarl
clc
sbb
dec
xchg
ret
lret
dec
mov
mov
arpl
push
push
test
popf
mov
adc
sbb
xchg
adc
ss
jecxz
push
stos
scas
rolb
add
jbe
mov
pmuludq
adcb
cmp
into
gs
mov
mov
lods
sbbl
call
xor
pop
xor
nop
mov
add
mov
mov
dec
jl
icebp
lods
inc
rclb
add
gs
ret
inc
lods
ss
sub
stos
outsl
fdivrl
in
mov
xchg
xchg
fiadds
mov
xchg
adc
and
stos
xor
fsubr
flds
shll
leave
add
stos
jb
xchg
cmp
imul
addl
and
repnz
popa
and
addr16
test
xor
sti
js
lea
xor
add
sbb
aaa
mov
faddl
or
cmp
frndint
cld
xchg
fidivrs
pop
ret
mov
call
into
and
mov
lret
int3
sbb
cmp
mov
mov
cs
jns
cmpsl
adc
sub
jns
and
push
fisubrs
add
cmp
sub
loope
pop
fbstp
mov
scas
or
mov
jnp
and
sub
adc
jnp
pop
mov
cmpsl
and
add
ljmp
test
jbe
scas
mov
sbb
cmp
cmp
sbb
inc
popa
push
iret
inc
scas
das
mov
popa
std
mov
mov
sub
test
jg
orl
pop
adc
outsb
mov
push
mull
es
or
test
das
push
jl
movsb
arpl
push
inc
pop
gs
cmp
pusha
push
aas
adc
es
addb
jne
sbbl
popa
add
lcall
mov
lahf
loope
test
icebp
fisttps
mov
out
mov
sub
dec
rcll
test
test
popa
fdivrs
cld
dec
mov
test
lret
sti
icebp
push
rol
mov
inc
clc
inc
sub
adc
jg
arpl
test
sbb
xor
in
std
push
adc
jo
scas
xor
inc
rolb
mov
ret
sub
lea
mov
ret
scas
imul
sahf
shrl
dec
mov
les
pop
rcrb
sbb
aas
adc
dec
adc
or
pop
and
pop
shr
mov
adc
daa
sub
and
nop
mov
xor
xlat
dec
loop
mov
add
es
test
movsb
pop
adc
push
or
repz
aas
mov
mov
ss
out
mov
or
mov
push
in
outsb
pop
ds
les
jmp
sti
mov
out
test
cld
adc
mov
in
xor
sbb
mov
dec
loopne
dec
cli
xchg
inc
cmp
test
test
xchg
div
cmp
in
xchg
sub
mov
lret
add
mov
inc
add
inc
fiaddl
jnp
jmp
push
and
push
jmp
test
arpl
arpl
mov
add
scas
inc
pop
xchg
sub
fstpt
repnz
or
aam
cli
hlt
mov
pop
mov
popf
xor
xchg
xchg
dec
flds
divl
push
hlt
sub
lods
das
mov
sbb
or
sahf
dec
sbb
fs
pop
and
addr16
jle
loop
mov
ja
outsb
loop
mov
jae
push
lds
mov
aas
mov
cmpsb
sub
xchg
inc
leave
pop
fs
xchg
mov
ficoml
push
adc
adc
ss
roll
cmp
lds
es
push
icebp
dec
jg
push
call
daa
mov
adc
or
addr16
insl
adc
mov
push
out
loopne
adc
mov
mov
test
leave
scas
mov
cmp
mov
ss
dec
lock
mov
adc
stc
lcall
cwtl
test
or
mov
xchg
mov
pop
scas
data16
imul
dec
lret
xchg
push
in
adc
repnz
out
pop
lret
jecxz
fstpt
stos
inc
jmp
aaa
push
xor
imul
ret
aaa
into
cmp
lahf
scas
xchg
jo
mov
cmpsl
rcrb
fisttpl
je
test
leave
pop
hlt
movsb
cwtl
das
xor
lcall
adc
xchg
pop
sti
cmp
push
xlat
inc
fisttpl
xchg
mov
shrb
or
cmp
dec
lea
cmp
mov
js
mov
mov
or
sbbl
mov
xchg
xor
lods
cmpsl
inc
dec
and
lgs
cmpsb
std
add
mov
cmp
in
adc
daa
push
movsl
pop
cmc
popf
test
sub
les
mov
pop
or
testb
icebp
cld
sahf
stc
sub
outsb
test
lret
adc
fs
fnstenv
sub
les
lret
xchg
and
xchg
push
mov
mov
pop
or
cs
loop
lret
jge
decb
ljmp
sbb
test
test
inc
xlat
pop
cs
test
std
cmc
mov
push
xchg
les
test
clc
insb
aad
dec
mov
icebp
mov
inc
outsb
cmp
iret
mov
enter
scas
in
xchg
sti
fiaddl
notb
enter
test
bound
mov
pop
ret
pop
mov
adc
cmc
fnstsw
sub
ja
adc
mov
inc
addr16
sbb
addr16
adc
iret
cltd
mov
outsl
pop
inc
lret
lock
leave
mov
xchg
cld
jmp
inc
cmpsl
mov
stc
in
cmpsb
and
adc
push
xchg
test
ljmp
pop
jns
mov
popf
ja
cwtl
cmp
fwait
pop
cmpsl
or
nop
inc
and
movsl
xor
xor
lods
adc
inc
mov
and
cmp
cs
in
xchg
dec
sub
cmc
int3
cmc
popf
push
cmp
sbb
mov
insl
loopne
ja
aam
jnp
in
arpl
add
stc
repz
sti
hlt
cli
pop
mov
ljmp
sub
das
sbb
pop
xchg
adc
pop
or
lds
in
scas
sbb
cld
jne
or
mov
cmp
test
xchg
scas
pop
clc
mov
stos
je
mov
fsts
mov
sub
add
aaa
push
test
pushf
jl
scas
xlat
pop
mov
mov
aas
mov
data16
mov
inc
push
sarl
xchg
mov
fnstsw
lea
or
addr16
xlat
jle
add
out
enter
inc
pushf
in
dec
scas
orb
je
pop
dec
loope
shrl
bnd
jmp
lcall
and
fmuls
jns
xor
xchg
mov
in
xchg
jae
pop
movsl
mov
scas
test
test
jnp
icebp
sarb
mov
add
rorb
inc
gs
orl
mov
sub
mov
aas
out
mov
xor
or
inc
rorl
mov
popf
sub
les
mov
add
js
fisubrl
lret
aas
adc
outsb
int3
fldenv
xchg
dec
or
test
mov
into
loop
std
xchg
inc
or
dec
test
int
pop
call
fistpll
cltd
cmpsb
mov
or
fucomp
hlt
sti
data16
gs
push
jmp
and
icebp
add
mov
ljmp
int
xchg
add
ss
out
daa
sbb
sub
ret
fs
decl
cmpb
and
loop
add
ljmp
jl
loope
inc
rcrl
inc
xor
mov
imul
and
aas
cltd
xor
pop
sub
int3
sbbl
xor
addr16
int3
pop
cmpsl
jmp
popf
push
dec
insb
mov
and
jle
xchg
fcmovnu
jae
cwtl
shrl
mov
add
std
pop
push
mov
mov
add
bound
and
dec
int3
fbld
dec
xchg
sub
lds
jg
popa
out
popa
aam
cs
test
push
popf
pop
mov
mov
int3
pop
test
cmp
scas
dec
out
jmp
iret
pop
aam
pop
sbb
lret
add
push
std
fsub
fwait
test
jmp
fsubp
test
inc
test
or
aam
lods
inc
jmp
cmp
push
push
montmul
cmpsb
xchg
das
aad
loop
sbb
push
in
add
test
adc
xchg
or
nop
push
outsl
dec
ret
jno
ja
xor
mov
sub
nop
aaa
mov
pop
stos
cli
mov
ret
jae
ret
xchg
psubb
popa
sub
push
sbb
imul
jns
lock
cli
in
aad
sub
shrl
adcl
mov
xlat
xchg
stc
sbb
out
sub
mov
mov
inc
scas
fbld
inc
aam
mov
sub
dec
imul
add
xchg
xchg
mov
dec
mov
xchg
sub
arpl
fcomps
cmc
jmp
jp
imul
xchg
jecxz
adc
and
pop
xchg
cmp
sahf
push
mov
jno
arpl
call
pop
repnz
addr16
pop
int3
pop
stos
sahf
adc
les
fs
pop
insb
cmpl
aaa
jo
pushf
cmp
jae
cmp
xchg
nop
xchg
sub
mov
ds
lods
jge
mov
mov
mov
ja
xor
jecxz
inc
adc
add
push
test
jo
out
sbb
jl
add
notb
pusha
mov
adcb
stc
nop
stc
ss
lock
imul
dec
ja
inc
in
aam
add
or
push
push
pop
testb
push
popa
adcb
mov
pop
sti
decl
jnp
scas
mov
lret
ljmpw
inc
mov
and
or
sub
or
test
push
fmul
and
push
cmpsl
mov
lcall
push
lds
js
mov
cmpsl
jo
lret
insb
outsb
enter
dec
fdivl
fmull
jle
mov
add
in
fldenv
sti
inc
scas
xor
repnz
sbb
int3
imulb
mov
clc
push
jns
xor
inc
mov
imul
mov
jmp
mov
push
adc
pusha
inc
jg
mov
insb
pop
inc
push
mov
push
imul
js
insb
or
je
push
sub
push
push
cmpsb
ret
inc
fmulp
jnp
imul
cmc
outsl
sub
mov
gs
or
jge
leave
sub
push
inc
sbb
mov
cmp
sub
inc
lret
jl
inc
sbb
mov
push
push
call
fisttpll
xor
pop
sub
cwtl
push
add
in
inc
push
cld
pop
cltd
jbe
pop
mov
clc
test
fiadds
rorb
jo
and
xchg
scas
inc
xchg
test
aam
xor
jecxz
and
mov
fnstcw
xchg
mov
aas
mov
sub
fnsave
mov
imul
test
arpl
hlt
mov
sarl
aad
mov
in
sahf
and
cmpsb
inc
cmp
push
les
jno
outsl
cltd
pop
mov
sahf
lea
leave
sub
icebp
xor
mov
dec
insl
cs
push
mov
es
popf
sub
add
notb
inc
sahf
or
in
scas
dec
mov
push
lock
stos
mov
out
insl
call
add
mov
xchg
ja
and
into
adc
lret
push
lock
xchg
pop
xchg
ficoml
sbb
shrl
cmp
js
sub
xor
and
aam
pop
repnz
movl
lahf
mov
mov
ds
pusha
sub
loop
ja
scas
inc
pop
sbb
test
stos
mov
lahf
jg
in
ss
ficoml
popa
cwtl
daa
out
sbb
xchg
mov
repz
cli
pop
les
and
fdivp
out
mov
cmp
enter
stos
mov
fwait
xor
inc
pop
pop
cli
shrb
cmp
movsb
mov
pushf
xor
xor
imul
fwait
push
sub
sbb
xor
cmp
in
mov
dec
push
xchg
sub
ljmp
cltd
bnd
leave
mov
adc
dec
push
push
mov
xor
fnstenv
and
cmp
cs
in
sub
cmp
sbb
aaa
dec
inc
out
cmp
imul
mov
loopne
lea
xchg
insb
jge
mov
adc
mov
adc
mov
int
fildll
mov
sub
loop
fdivl
add
loop
jmp
push
aad
cmp
jne
hlt
dec
push
icebp
jne
ret
lea
lds
movsb
test
xacquire
aad
mov
fisttps
adc
inc
loopne
push
rcll
inc
jno
mov
add
mov
dec
das
xchg
sbb
loop
cwtl
sub
sar
lods
push
in
fcomps
pop
repz
imul
or
pusha
fs
mov
mov
dec
out
mov
push
sar
pop
cs
and
pop
in
imul
insl
dec
cmp
icebp
xor
and
dec
scas
inc
movsb
je
shlb
nop
sbb
sti
pop
xchg
sub
pop
jns
cmp
mov
xchg
sub
sbb
push
les
bound
xchg
insb
jb
jp
push
stos
dec
jnp
andb
add
lcall
cld
mov
iret
jno
add
jle
je
jno
cli
aam
inc
outsl
adc
sti
in
cltd
rolb
add
push
movsl
mov
fldcw
rorl
sub
mov
xor
mov
inc
movsl
fsts
jle
sub
jecxz
cmp
inc
fstpl
cltd
inc
ljmp
test
popf
add
dec
push
loop
rcr
and
aaa
mov
or
and
repz
inc
popf
cmp
imulb
fs
jb
xchg
and
jnp
repz
mov
daa
std
lcall
insb
mov
sub
push
shr
std
movsb
jp
cmp
cmp
adc
hlt
sbb
xchg
push
xchg
not
add
stos
mov
mov
mov
pop
pop
mov
loopne
jg
adc
out
ret
movsb
sbb
enter
popa
or
xor
pop
xor
inc
inc
push
idivl
push
addr16
popf
pop
outsl
jg
imul
or
inc
jno
jne
fbstp
cmp
mov
inc
inc
adc
sub
xor
and
or
push
pop
push
call
push
jae
adc
pop
cwtl
dec
pop
pop
push
insb
pop
stc
mov
jl
push
sub
xchg
sub
movsb
cmc
mov
clc
mov
mov
mov
add
loop
fcomps
test
fisubrl
sahf
push
imul
in
std
jmp
jle
pop
je
in
mov
jns
push
push
xchg
out
pusha
not
jnp
mov
ljmp
pop
or
or
cmp
mov
mov
out
adc
loope
mov
cs
sbb
int
popf
xchg
sbb
inc
fisttpll
outsb
dec
sbb
sar
aas
insb
sbb
rcl
sbb
push
pop
les
aas
add
xchg
jmp
mov
jne
lret
add
inc
dec
jge
mov
sbb
push
or
pop
mov
stos
rol
add
cmp
dec
cmp
lea
xchg
or
cmp
imul
sbb
add
out
push
sub
dec
inc
mov
mov
lret
xor
loope
out
roll
fldl
repz
mov
sub
aaa
and
xchg
cli
mov
lea
jmp
testb
outsb
fidivrs
jg
cwtl
adc
aam
adc
push
shrl
xchg
cld
adc
fisubl
fwait
cmp
xor
in
jbe
imul
or
xor
sub
rolb
dec
fcomip
sub
pusha
or
in
adc
mov
push
lods
dec
or
paddusw
inc
push
xchg
lods
cld
fidivl
cmp
stos
mov
ds
add
push
ss
sbb
sub
ss
jnp
push
jecxz
pop
jbe
sub
fdivp
addr16
mov
mov
cli
sbb
or
add
xor
add
dec
outsb
and
clc
pop
outsb
mov
dec
push
jl
test
inc
cmp
sub
ss
xchg
jmp
nop
sbb
lret
lods
mov
lcall
and
adc
cli
in
cmpl
rol
ret
rcrl
mov
mov
mov
out
iret
adc
lock
lock
jl
in
lods
nop
daa
fimuls
int
sub
out
push
jb
in
inc
and
cmp
mov
mov
nop
push
jo
push
mov
jp
push
cmp
jl
into
imul
shll
pop
ss
cmp
out
add
xor
faddl
push
xchg
or
hlt
mov
shrb
sub
stos
js
xor
ja
popf
mov
sahf
stos
pop
push
std
sbb
das
xchg
mov
push
repnz
jp
mov
packsswb
mov
adc
sub
jae
into
pushf
jecxz
push
push
test
negb
into
add
xorb
in
rcrl
sar
mov
test
adc
pop
sbb
pop
aaa
mov
xchg
cmp
arpl
mov
nop
pop
hlt
rcl
add
adc
mov
adc
std
adc
jb
pop
mov
xchg
mov
sub
pop
repnz
mov
xchg
out
or
inc
call
int3
mov
std
add
fbstp
lock
into
jo
and
lret
pop
loopne
adc
pop
repnz
in
cmp
aas
icebp
and
mov
mov
or
jnp
mov
push
into
addr16
popf
cwtl
out
movsl
cmp
mov
ret
pop
je
inc
fidivrl
pop
popa
clc
vpmacswd
jg
jecxz
sbb
xor
mov
fistps
adc
cmp
push
inc
clc
je
pop
call
or
ffreep
mov
pop
popf
out
iret
sbb
mov
loopne
filds
sbbl
not
lock
sbb
gs
push
ljmp
mov
in
add
dec
loopne
test
jmp
xchg
jae
pop
push
jae
mov
inc
xor
stc
cmpsb
rcrb
dec
xlat
mov
jge
dec
mov
mov
in
mov
pushf
mov
jae
dec
pop
scas
loop
push
jnp
mov
jno
mov
dec
dec
cmp
or
jb
jg
lahf
imul
aaa
out
push
mov
int3
mov
nop
arpl
cltd
mov
adc
call
inc
adcl
pushf
sbbb
adc
test
mov
inc
and
adc
xchg
daa
xor
and
fs
mov
subl
int3
dec
ret
mov
movsb
popw
aaa
aaa
jne
push
pushf
xor
mov
aas
clc
inc
out
aas
sbb
into
data16
cmp
cmp
sub
fldenv
mov
sbb
xor
fwait
jae
addr16
and
jle
inc
push
mov
xchg
push
add
mov
xchg
push
in
mov
pop
int
movsb
les
or
mov
daa
ret
insl
shrl
imul
mov
xchg
lods
ljmp
sbb
das
xlat
aas
lret
fbstp
fucomi
daa
xchg
inc
mov
push
adc
dec
insl
std
sbb
xor
test
hlt
push
inc
arpl
mov
cmp
pusha
iret
jecxz
aaa
subl
mov
sub
and
and
add
mov
pop
and
in
jae
or
jne
sbb
movsb
in
adcb
xlat
jns
xchg
xor
lcall
push
stos
inc
data16
mov
lcall
mov
int3
ficoms
subb
or
mov
insl
cld
nop
shll
jecxz
cwtl
stc
cmp
sub
clc
or
cmp
filds
cs
sti
fwait
push
aas
gs
xchg
jmp
mov
scas
mov
push
sti
jp
mov
push
dec
ja
mov
call
enter
mov
push
adc
jp
cmp
pop
popa
xor
scas
nop
push
lahf
xorb
mov
inc
into
xor
scas
ds
inc
pop
or
xchg
mov
fidivl
mov
sub
cmp
call
inc
and
fsubl
or
jno
arpl
xchg
push
call
push
ret
hlt
je
cmpsb
and
cmp
and
insb
xor
mov
sub
mov
mov
je
sbb
cli
dec
add
push
cmp
push
insb
xchg
mov
sub
mov
cmp
adc
mov
dec
fsubs
in
adc
push
dec
pusha
subb
dec
pop
shll
mov
mov
js
mov
cwtl
pop
jmp
pushf
dec
lods
xchg
xor
sub
dec
dec
fistpll
clc
cld
sub
jge
rcrw
mov
lahf
push
cmp
outsl
jmp
aaa
out
add
push
adc
dec
dec
mov
mov
out
inc
gs
mov
cmc
sahf
in
subb
or
pop
mov
inc
ljmp
xor
int
pop
dec
mov
add
mov
daa
push
repnz
test
xchg
push
jmp
test
adc
push
jne
rclb
push
sbb
popf
push
sub
lret
inc
mov
adc
imul
mov
dec
sbb
adc
daa
out
jp
xor
insl
sarb
les
std
inc
imul
mov
pop
ret
jnp
iret
leave
fmull
repz
je
xchg
add
lock
ds
push
mov
or
into
ficoml
aaa
inc
cwtl
dec
xchg
pushf
sub
xlat
imul
mov
sbb
mov
push
loop
inc
sub
enter
into
aas
inc
daa
iret
outsb
xchg
pop
sub
mov
mov
out
inc
xor
push
movsl
or
adc
les
dec
in
xchg
mov
adc
inc
data16
jo
jb
imul
ret
jno
dec
aaa
and
mov
shl
stos
inc
mov
jno
clc
cmc
fdivl
pushf
xor
push
mov
scas
dec
jns
repz
iret
inc
aad
std
adc
test
notb
int3
addr16
xor
jnp
xor
mov
jg
arpl
insl
stos
test
insb
mov
or
adc
cmp
mov
scas
xchg
mov
sbbl
pop
stos
stc
push
test
rorb
and
sbb
mov
fnstenv
in
int3
pop
dec
pop
cmc
inc
add
mov
mov
sub
jle
movsl
push
push
ljmp
test
scas
fcom
ja
mov
pop
dec
sbb
dec
inc
jp
xchg
js
xchg
outsb
and
popa
dec
js
rclb
mov
mov
jecxz
jo
xchg
mov
cmp
xor
adc
sub
push
or
into
or
mov
pop
bound
fstps
mov
cli
fs
xor
in
test
clc
or
sbbl
sahf
negl
imul
popf
jmp
xor
push
adcb
lock
in
cmpsl
sbbl
sahf
jge
pop
cwtl
xchg
pop
es
dec
mov
mov
dec
jmp
in
push
cmpl
add
out
sbb
cwtl
sub
push
fidivs
lahf
ss
nop
push
push
sub
xor
push
inc
inc
push
mov
loope
jnp
lds
mov
fidivrl
sbb
clc
adc
sub
and
sbb
rcrb
mov
dec
repz
xor
adc
xchg
sub
rclb
das
stc
test
or
sbb
dec
inc
fdivrs
and
aad
insl
push
popf
ficomps
sbb
and
cmpsb
aas
mov
jns
hlt
inc
bound
mov
insb
fistpll
push
test
or
cmp
xlat
inc
out
xacquire
in
outsb
pop
test
mov
pop
cmpsb
xchg
mov
sarl
push
or
gs
enter
ret
jp
inc
pop
jbe
xor
in
cwtl
cmp
push
mov
jbe
and
out
lea
sbb
mov
in
push
es
outsb
pop
sti
push
out
sub
aas
jg
repz
mov
or
rorb
out
jbe
es
xchg
xor
pop
xchg
jno
jmp
push
xchg
xor
clc
test
xor
sar
dec
pop
sub
mov
lods
inc
dec
fnstenv
push
ljmp
jno
in
lcall
aad
dec
or
lret
sub
imul
rolb
out
xlat
iret
in
mov
jecxz
fcomps
pop
cmp
mov
sbb
xor
xchg
dec
xor
out
popa
nop
add
mull
xchg
int3
lea
call
inc
loopne
mov
lea
push
aam
sti
add
xor
inc
out
inc
adc
add
push
pop
sub
or
std
or
test
cmc
jb
dec
pop
scas
xchg
mov
add
adc
mov
push
pop
sub
dec
dec
sub
jl
lret
mov
pop
daa
sahf
movsl
and
iret
mov
inc
iret
rorb
cmpsl
insb
sub
js
setae
jge
push
mov
mov
sub
stos
jle
lcall
rol
jl
cmp
sbb
add
push
mov
mov
cwtl
sbb
jbe
addr16
movsb
sbb
inc
in
mov
inc
and
lret
popa
stos
fldl
add
call
ret
bound
pop
cmc
imul
lods
jb
or
push
push
stos
insl
out
add
cld
dec
out
loop
daa
mov
jae
sbb
mov
dec
into
mov
lret
loopne
dec
mul
push
mov
loop
arpl
jmp
jle
jl
inc
xchg
mov
leave
cmp
ret
into
fsubrl
ss
jb
push
movsl
mov
idivl
mov
or
xor
xchg
mov
sub
mov
xchg
mov
mov
sub
push
insb
hlt
lods
cli
mov
lods
inc
mov
or
test
out
adc
sti
and
push
jle
je
mov
daa
nop
fimull
fistps
xchg
mov
ja
mov
sub
outsl
inc
sbb
inc
dec
xor
call
test
repz
sbb
inc
pop
jecxz
imulb
int
fnstenv
jno
cli
adc
or
pop
xor
je
cmc
inc
nop
mov
add
sbb
mov
mov
add
enter
mov
loop
mov
unpcklps
pop
inc
das
dec
shll
and
arpl
or
leave
xor
into
fs
mov
xor
fcoms
or
push
pop
inc
popa
enter
mov
mov
push
and
sbb
mov
mov
std
stos
inc
fcomp
nop
mov
xor
test
jne
adc
adc
jno
xchg
xor
inc
das
cs
outsb
pop
and
enter
shr
daa
call
or
cmp
faddp
pop
adc
pop
jbe
mov
xchg
ficoml
sbb
cmpsb
popa
pop
repnz
dec
cmp
cmp
insb
daa
pop
pop
sbb
mov
fsts
dec
leave
out
cmpl
add
es
scas
test
enter
pop
inc
test
pop
xor
jge
loop
adc
or
aaa
mov
out
test
and
out
mov
mov
in
xchg
mov
imul
pop
dec
pop
nop
sub
fisttpl
lods
sar
loope
xor
pop
neg
mov
push
cld
jge
xor
sti
adc
push
int
test
mov
fs
fdecstp
incl
test
pop
xor
pushf
pop
mov
xor
or
decl
xor
inc
push
mov
mov
pop
pop
or
cmp
xchg
xor
int3
pop
cwtl
std
xchg
rcrl
repz
dec
fisttpll
lods
mov
sub
lock
and
lcall
pusha
outsl
inc
and
lea
cmp
adcb
daa
pop
dec
test
pop
pop
hlt
pop
dec
cmpsb
mov
out
stc
inc
fdiv
xchg
mov
sti
xor
fistpl
inc
mov
repz
cmpsb
cmp
inc
stos
dec
push
push
xor
cli
dec
jge
mov
push
jno
xchg
outsb
popa
jbe
rclb
lods
je
fdivl
shlb
dec
je
xchg
pop
xor
cmp
iret
ret
stc
testl
sub
sub
stc
sbb
out
pop
mov
je
dec
lock
orb
data16
ljmp
sbbb
int
ret
sbb
sbb
loop
pop
mov
jmp
out
push
adc
repnz
mov
mov
in
adc
fsubp
jl
jg
pop
mov
testb
sub
fidivl
sbb
movsb
mov
jle
and
mov
inc
loope
lods
jne
mov
inc
fimuls
inc
inc
xlat
mov
out
filds
js
sbb
mov
mov
push
xchg
sub
movsb
or
mov
or
inc
fisubrl
and
js
std
push
inc
xor
add
inc
test
push
and
aaa
add
inc
into
in
pop
dec
mov
jns
outsl
ret
or
jecxz
xchg
mov
push
testl
leave
aad
adc
out
mov
or
imul
sub
jge
icebp
aaa
dec
and
out
jo
dec
push
jbe
push
sti
pop
jae
inc
cmp
adcb
xchg
add
out
mov
and
test
xorb
cmp
sbb
push
sub
stos
cli
push
xchg
ja
aas
or
incl
fbld
adc
orl
cmpb
lret
pop
push
and
or
mov
das
push
fcompl
xor
inc
adc
leave
fnstcw
dec
loope
addr16
xchg
addb
inc
test
push
inc
fcoms
dec
fildl
jb
pusha
mov
jb
push
cmp
sbb
stc
aas
cli
mov
sub
into
pop
les
xchg
notl
in
aas
rol
out
test
mov
add
enter
add
cmp
int
and
adc
push
mov
gs
inc
mov
lea
adc
pop
mov
jb
call
mov
stos
adc
jecxz
mov
pop
pop
scas
ja
push
jp
ret
and
mov
xchg
inc
ljmp
push
jmp
push
xchg
jp
pop
adc
xchg
ret
popa
cmpsb
push
jecxz
sub
pop
leave
arpl
mov
pushf
cltd
push
pop
in
test
cli
or
sub
push
sub
popf
adc
sbb
inc
ss
imul
jns
into
arpl
push
arpl
movsb
push
sbb
dec
dec
push
xchg
negl
push
clc
inc
sbb
aaa
hlt
shr
shr
xchg
xor
adc
inc
xchg
add
sub
push
fcmovne
lret
cs
fcomps
rcrl
mov
jmp
jge
jne
add
push
push
stos
es
test
push
cwtl
mov
mov
jne
xor
push
cmp
jb
dec
imul
repz
mov
nop
cmpsb
aaa
mov
idivl
and
mov
fisubs
push
mov
in
and
add
icebp
mov
fldl
lods
sub
test
iret
cmp
fsubrs
pop
cmc
mov
lds
lds
test
sarb
push
ja
sub
icebp
xlat
sarb
adc
stos
in
outsl
ds
leave
mov
imul
push
std
or
xchg
subl
mov
in
fwait
test
mov
and
iret
mov
adc
cmp
xchg
sub
jecxz
jae
cltd
fcmovu
rcl
mov
push
add
popl
imul
xchg
sbb
int3
rcll
mov
loopne
xor
fstpt
rolb
xor
and
lret
add
daa
push
lcall
push
gs
sub
or
dec
cmp
scas
push
pop
dec
ds
stos
hlt
dec
fists
sbb
jbe
daa
popf
jnp
inc
dec
test
cli
jp
adc
leave
dec
inc
rcrb
mov
sbb
mov
xor
aaa
add
sub
mov
jae
hlt
loopne
pushf
pop
mov
mov
bound
mov
into
fcompl
pop
aam
mov
fs
fwait
test
shll
cmpsb
pop
cwtl
mov
stos
mov
outsb
mov
xor
stos
mov
sbb
cmp
movsl
mov
imul
ud2
repnz
mov
xchg
sub
outsb
aas
test
int3
jle
fsubrs
mov
add
jg
mov
ror
pop
cmc
cli
icebp
out
xchg
aaa
adc
sbb
stc
cmpl
ljmp
data16
xor
cmc
xor
push
ret
bound
mov
outsl
std
fcomps
sub
loop
push
pushf
fsub
inc
outsl
mov
push
addl
sbb
or
pop
repnz
cmp
out
push
sbb
xlat
outsb
push
inc
push
ja
cmc
mov
push
adc
loopne
cmp
movl
int
dec
outsb
les
xchg
rol
mov
dec
fbld
sbb
pop
movsl
inc
data16
xchg
sub
add
mov
add
nop
xchg
and
in
fwait
sti
mov
lods
mov
fisubs
xchg
dec
sbb
popf
mov
sub
xchg
or
adc
rorl
mov
int3
out
rcrl
push
insb
shl
push
adc
jb
cli
and
cltd
incb
cltd
inc
ss
xchg
dec
out
sbb
sbb
aas
cltd
pusha
jno
rcrl
pop
adc
add
xor
negb
adc
pop
outsl
loop
pop
popf
sub
jne
push
add
data16
call
cld
stc
push
push
nop
fldt
pop
dec
movsl
hlt
sbbl
lret
or
dec
xchg
cmp
mov
pushf
in
or
stos
or
daa
mov
xor
sbb
lret
fmuls
js
mov
mov
xor
aas
sahf
test
fsubl
pop
es
js
sub
mov
loop
arpl
or
push
addl
sub
inc
sbbl
cmpsl
inc
outsb
pop
jbe
xchg
test
mov
lods
in
add
adcl
scas
push
jno
and
sti
push
into
mov
push
mov
outsb
sar
xchg
inc
sbb
idivb
rcrl
pop
sahf
int
cmpsl
imul
ljmp
pushf
cmp
and
and
rcll
cmp
js
pop
inc
in
jne
pop
adc
sbb
xor
fucomp
xor
xor
sbb
lahf
dec
push
lock
pop
bound
xchg
js
cmp
aaa
cltd
sbb
mov
arpl
js
jp
xlat
cltd
mov
inc
jge
xchg
scas
fs
push
adc
jne
andl
loope
mov
dec
pushf
add
call
ja
repz
dec
inc
dec
jo
dec
aaa
xlat
dec
sbb
aad
fiadds
inc
mov
jnp
sbb
pop
dec
mov
loopne
loopne
push
call
lret
push
jp
jo
push
sbb
sbb
and
push
cmp
fcomi
xor
push
pop
inc
fcoms
ds
imulb
xchg
sub
movsl
mov
add
lahf
testb
in
movsb
enter
test
arpl
leave
pop
add
fstp
xlat
xchg
pop
adc
call
xchg
ret
or
out
jmp
in
jne
jge
mov
add
adc
and
repz
add
or
loope
or
pop
addr16
sbb
loope
adc
arpl
rcrl
xor
xor
jns
stos
test
and
sahf
clc
movsb
sub
jmp
push
sbb
pop
lcall
cli
mov
fwait
pop
adc
xor
aas
mov
cmc
nop
fidivrs
push
or
fs
fisubrl
rolb
adc
inc
xlat
push
sbb
pusha
lret
cmc
xor
ja
insl
lock
int
jle
in
jg,pt
lret
or
and
jns
adc
xchg
mov
in
pop
pop
pop
lret
in
and
js
cmp
sbb
pop
lret
sbb
mov
loope
mov
mov
dec
out
sub
push
ret
iret
daa
outsb
and
mov
sahf
adc
popa
push
lcall
fwait
es
dec
sub
mov
push
je
pop
dec
sbb
or
mov
jo
sub
scas
xlat
lock
scas
repnz
out
insb
lahf
dec
add
pop
push
and
outsl
dec
dec
rolb
mov
mov
mov
loopne
iret
vpaddb
pop
pop
mov
and
inc
pop
and
mov
std
mov
rcl
icebp
fxch
sub
mov
lret
add
xchg
push
push
add
dec
negb
cmp
sub
cmp
xor
xchg
sarl
cmc
sar
cmp
lret
loope
rcll
mov
shlb
fs
outsb
or
popf
jle
int3
jg
pop
and
pop
push
fs
lods
xchg
jno
xchg
and
lods
pop
test
sbb
cmp
leave
cli
and
add
xor
sub
test
and
fisubl
inc
jne
add
cmp
push
jae
xor
mov
lock
mov
ja
sbb
daa
push
mov
pop
mov
out
push
inc
fmull
xlat
loop
or
jecxz
scas
pop
jne
pandn
push
mov
ret
fstl
fucomi
mov
jg
test
inc
lds
testb
hlt
pop
inc
xor
out
cld
push
sbb
inc
mov
jae
gs
xor
cmp
mov
inc
cmpsl
jp
xchg
aaa
mov
inc
call
nop
sub
sbb
out
cmc
mov
jmp
xchg
pop
add
fucomip
push
push
and
repz
jno
inc
aaa
xchg
test
sbb
xchg
inc
int3
mov
insl
adc
mov
xor
jb
or
lahf
out
idivl
cld
jb
jmp
fidivl
arpl
dec
lea
adc
cmp
in
xor
stos
jle
and
mov
dec
push
jle
les
xchg
scas
sbb
or
iret
sbb
mov
pushl
pop
lea
push
sbb
sbb
dec
cmpsb
fists
lea
repz
loopne
push
rcll
rcrw
insb
testl
xor
jb
sub
add
call
outsb
or
xor
decl
dec
std
xchg
stos
cs
pop
js
icebp
mov
mov
fisubs
ljmp
cmp
jge
push
scas
cmp
cmp
sti
sbb
sub
push
jo
jl
adc
and
add
adc
or
mov
fimuls
out
sbb
add
push
sti
lea
divb
mov
pop
cmp
loopne
pop
ret
xchg
lea
loop
dec
pushf
sbbb
nop
jnp
xlat
shl
adc
sub
add
mov
mov
je
js
mov
xor
cmp
inc
rcr
dec
rcr
dec
call
movsl
stc
nopl
out
and
ret
mov
lahf
xor
add
xchg
stos
les
jp
and
lret
sub
mov
mov
fcoml
enter
dec
push
lds
mov
xor
xor
cmp
in
adcb
add
and
into
orl
dec
sbb
orl
cld
push
add
inc
and
and
sub
je
add
sbb
loop
stos
xchg
add
add
push
scas
sub
mov
mov
xlat
ret
jg
dec
bswap
sub
dec
sub
cmp
repnz
pop
mov
inc
gs
or
adc
test
push
fimuls
add
sbb
sub
bsr
mov
mov
mov
orl
mov
adc
push
jae
sub
loop
cwtl
out
push
and
loope
in
sub
iret
pusha
fcomip
dec
test
hlt
mov
cmp
ljmp
pop
les
fisttpll
pop
sbb
hlt
and
inc
inc
mov
mov
fnstcw
scas
fs
pop
cltd
in
and
lahf
fcmovnbe
dec
push
mov
dec
mov
pop
inc
stos
fisubs
int
test
push
jb
mov
mov
pushf
cmpsb
xchg
mov
cli
cmpsl
jns
int3
jp
jbe
or
xchg
xchg
in
sbb
mov
enter
cli
sbb
dec
sub
cld
push
cmc
inc
nopl
andl
out
push
in
fidivrs
test
aad
sbb
pop
and
pop
adc
inc
hlt
roll
mov
xor
out
stc
or
xor
in
aas
int
jo
int3
xor
cmpsl
mov
aad
inc
imul
sbb
and
jns
stc
inc
test
pop
pop
pushf
sahf
xor
cmpb
jne
mov
fstpl
repz
and
jg
dec
loop
in
mov
pop
mov
mov
stos
mov
or
jmp
cmpsb
lock
add
leave
aam
lahf
cmpsl
mov
xlat
pop
repz
push
jb
sub
lahf
lods
dec
mov
add
rolb
popf
mov
push
ds
dec
ss
push
push
dec
xchg
jmp
jle
xor
mov
mov
jmp
testl
jb
xchg
mov
mov
loope
jmp
pop
mov
fiaddl
push
ret
lret
fs
cmc
dec
xor
push
adc
jbe
icebp
mov
rol
daa
leave
or
test
iret
cltd
test
jge
pop
push
mov
adc
aas
dec
roll
pop
sub
arpl
mov
rorl
and
xor
movsl
int3
bound
ljmp
gs
cmpsl
mov
pop
enter
mov
pop
sub
jle
lret
scas
cmp
jb
push
inc
push
pop
sahf
enter
hlt
mov
test
push
sub
fwait
rolb
add
in
mov
push
lods
repz
mov
pop
sub
das
iret
repnz
and
mov
cmc
stos
pusha
mov
inc
jns
push
xor
lcall
dec
inc
pop
cmpsb
mov
xor
or
pop
inc
sahf
and
push
sahf
mov
mov
fbld
ret
shrl
inc
jns
jle
push
mov
mov
push
inc
push
and
cmc
sub
rolb
test
sti
push
mov
sarl
dec
pop
fwait
xor
repnz
adc
test
es
pop
push
ljmp
xchg
mov
imul
add
xor
xor
lea
in
ret
inc
jecxz
test
loope
ss
mov
mov
sbb
and
scas
inc
push
lahf
es
mov
outsb
mov
push
xorb
sub
in
add
in
adc
xor
jecxz
pushf
cli
ljmp
mov
cmp
inc
jecxz
mov
out
or
or
cpuid
adc
lock
sbb
mov
stos
insb
jge
sahf
fs
adc
xor
fstps
insb
dec
cli
dec
dec
cmp
jo
out
mov
out
pushf
or
test
fcomps
orl
sub
cmp
imul
sub
push
xor
add
rcrl
fldcw
mov
ljmp
cmp
jl
gs
xor
dec
jle
cmp
stc
lcall
cmc
push
sti
es
sbbb
jg
mov
daa
outsl
fsubp
pop
aad
aam
stos
movl
and
jns
popa
and
pop
mov
and
inc
cwtl
cmc
es
inc
xlat
aam
xchg
pushf
daa
bound
xor
inc
inc
inc
fdivrl
js
out
dec
mov
or
sub
lret
jae
fistps
push
xchg
xchg
mov
dec
push
jmp
mov
fistps
push
xor
mov
loop
jnp
sub
outsb
jns
pop
nop
clc
pop
andb
and
cli
sti
push
sbb
mov
mov
cltd
and
int3
jl
cwtl
jecxz
push
int3
xor
std
adc
iret
mov
lods
sub
push
pop
mov
outsb
aam
movsb
dec
or
mov
add
add
loop
into
xor
leave
push
xor
push
cs
xlat
repnz
leave
lahf
inc
xchg
pop
jae
es
inc
rolb
lods
shrb
xor
bound
push
fld
nop
inc
dec
dec
in
jmp
aam
test
cmp
shl
sti
fldt
xchg
jno
and
mov
xor
or
pusha
mov
sub
aam
sti
or
cmp
scas
push
pop
cltd
push
inc
pusha
cmp
push
imulb
sub
sbb
mov
js
out
add
aam
xor
lods
push
das
cmpsb
das
data16
repnz
push
add
mov
sub
mov
fldenv
inc
sbb
add
pusha
jmp
es
push
jo
rorb
and
and
push
sbb
mov
lret
mov
xchg
outsb
adc
jne
int
cli
xchg
lods
cmp
mov
ja
sbb
mov
mov
sbb
cmc
jl
jle
loopne
push
addr16
mov
xchg
cld
setl
outsl
jno
mov
push
mov
inc
lds
xor
adc
sub
push
out
cmpsl
dec
shrb
fildl
mov
mov
jns
inc
or
lret
xchg
stos
xchg
fs
popa
mov
loope
test
lret
jmp
xor
mov
xchg
sub
js
jp
sbb
add
cltd
xor
sahf
test
aas
dec
repnz
pusha
dec
inc
into
pop
mov
sub
adc
push
xchg
pop
add
xchg
movd
mov
xor
sub
cmp
scas
mov
inc
inc
iret
push
sbb
and
mov
or
rcrl
cmpsl
and
leave
mov
mov
sahf
dec
xchg
int3
gs
stos
xchg
arpl
nop
ficomps
cmpsl
into
mov
lret
dec
lods
add
fwait
gs
sub
fsubl
decl
sbb
mov
push
je
fiadds
lret
dec
insl
add
in
mov
or
decl
loopne
sarb
mov
mov
inc
inc
ret
cmp
cli
add
fstpl
xchg
jne
bsf
jmp
hlt
lahf
in
clc
mov
xor
or
xchg
xor
or
je
cmpsl
fisubl
shl
dec
nop
scas
aad
xor
icebp
fildll
ss
mov
iret
imul
repz
out
aad
insb
mov
push
or
out
inc
add
in
pop
jle
xchg
imul
fsubrl
iret
enter
jmp
fcmovu
jnp
sub
insb
add
jns
and
out
imul
in
jbe
fiaddl
or
ljmp
mov
addr16
adc
mov
fists
lret
jecxz
sbb
push
jge
add
and
jg
insl
jl
test
sbb
dec
jp
subl
scas
aad
cmpsl
jbe,pn
ret
adc
cli
mov
pop
daa
leave
cmp
mov
cmpsl
dec
pop
dec
lock
sub
ljmp
mov
jo
insb
pop
mov
loope
out
cmpsb
out
pop
mov
ret
jp
shrl
loop
orl
insl
add
pop
xor
pop
pop
push
sbb
cmp
jne
out
cmpsb
adc
mov
jns
inc
gs
add
mov
or
and
sti
inc
pop
sub
jnp
outsl
sub
sbb
repnz
loope
mov
addr16
pusha
jae
xchg
jl
ja
inc
xchg
pop
icebp
cmc
adc
cmp
push
cmpb
js
ljmp
mov
cltd
push
jmp
into
bound
sahf
aad
pusha
pop
xor
jae
shll
jl
lea
shl
pop
inc
pop
lods
adcl
cltd
lock
les
mov
jno
dec
push
ljmp
inc
xlat
daa
xor
lock
pop
jl
das
mov
pop
aaa
test
add
and
into
pop
sbb
jae
jb
mov
addr16
mov
stos
push
lea
pop
stos
in
add
sbb
rep
sahf
dec
cmpsl
sbb
xchg
mov
adc
xor
cltd
inc
insl
loopne
jg
xor
decb
lods
mov
lods
push
fxch
sbb
clc
std
insb
jb
ret
out
pushf
dec
or
jbe
push
jnp
mov
add
rclb
repz
bound
and
ret
xchg
sti
xchg
sbb
ss
add
mov
adc
cwtl
arpl
scas
shl
ret
xor
cmp
xchg
or
cmc
adc
ja
ljmp
cli
shrb
mov
sar
adc
in
mov
lret
xchg
lcall
or
bound
ds
inc
fldt
icebp
dec
test
and
out
pop
fldt
or
je
mov
out
xchg
sub
outsb
out
subl
rcrl
or
insb
arpl
dec
mov
jge
rorl
movsb
lahf
and
addr16
fldenv
jbe
xor
hlt
arpl
push
call
adc
call
pushf
xor
outsl
int3
pop
pusha
stos
push
in
cmc
cmp
test
jbe
cmc
hlt
cmp
and
xor
lods
xchg
mov
sbb
xor
and
in
das
or
add
call
test
adc
lds
cmp
icebp
dec
sbb
jp
xlat
aaa
sbb
xchg
mov
cmp
xchg
iret
mov
arpl
or
fnstenv
dec
sbb
push
pop
sub
push
outsl
fwait
jp
mov
in
test
xchg
xor
ja
inc
addr16
out
inc
or
sbbl
test
and
and
xchg
adcb
mov
jae
add
adc
mov
xor
subb
xchg
mov
and
std
ret
outsb
mov
cltd
lods
jo
test
mov
adc
push
shlb
add
and
push
fwait
or
adc
dec
mov
cmp
das
idivb
push
lods
aaa
imulb
shrb
rol
aad
repnz
out
jecxz
notb
outsl
dec
adc
jbe
adcl
jbe
jae
into
cmp
lock
popf
int3
xor
ja
mov
xchg
add
ret
sub
stos
jmp
cmp
mov
push
fdivrp
xchg
mov
and
mov
xchg
add
test
pop
mov
xor
pusha
push
inc
xchg
cmp
pop
jnp
std
in
lds
loopne
fsts
cmp
push
fwait
jecxz
mov
in
add
fdivrl
test
loope
pop
dec
insl
inc
rorb
cmp
movsb
push
mov
repnz
in
xlat
add
pop
fstpl
lret
cs
popf
orb
xchg
push
jbe
ja
pusha
jg
fnsave
out
rcl
mov
test
jle
inc
lret
aas
fidivl
push
cmp
lock
jns
inc
pop
icebp
ljmp
call
aas
shrb
sbb
mov
data16
mov
dec
xchg
sub
xor
pop
insb
sub
sub
rcrb
mov
push
add
adcl
into
cmpb
xor
lret
aaa
inc
push
jp
xchg
aas
xchg
xor
pop
cmp
addr16
cltd
flds
sti
rep
loop
push
or
mov
xchg
enter
in
dec
cmp
sub
ret
xchg
push
insl
int
into
gs
lock
cltd
in
fstpl
mov
gs
ds
and
inc
cmpsl
xchg
sub
movsb
push
rcll
mov
and
and
outsl
iret
adc
add
jb
mov
fiadds
cmp
int3
shrl
jae
rcrl
rcr
aam
adc
jle
cmpsb
loope
jg
call
mov
mov
push
in
test
mov
imul
lret
std
jge
das
in
data16
jp
call
int
mov
sti
in
fiaddl
pop
pop
repnz
lods
pop
addr16
mov
sbb
push
into
pop
adc
out
xchg
push
std
stc
outsb
inc
cld
sbb
jnp
std
std
fadds
inc
jne
mov
sbb
jecxz
pop
sbb
lods
fstp
pop
outsb
mov
mov
int
mov
add
xor
pop
out
xchg
sti
inc
adcl
ret
scas
inc
adc
push
push
inc
jge
pop
mov
scas
cmp
shrb
loope
test
scas
jecxz
add
inc
pop
mov
leave
jecxz
add
add
push
pop
dec
add
nop
js
dec
xchg
in
jns
jmp
test
mov
rcll
cmpsb
jmp
jne
ret
out
test
push
and
dec
jmp
in
mov
sarb
sub
or
adc
sbb
popf
jg
sbb
in
fwait
push
cli
mov
test
and
xchg
rcrl
push
pop
mov
push
mov
call
mov
xchg
xchg
adc
cmp
divb
jnp
subl
adc
fdivrs
pop
adc
test
dec
out
nop
stos
jae
popa
shlb
repnz
fnstenv
dec
in
out
jbe
xchg
cwtl
pop
hlt
leave
mov
pop
inc
jnp
stc
jl
sahf
in
in
shr
popa
leave
iret
lds
jle
or
lock
mov
insl
sbb
mov
lret
mov
dec
or
xor
mov
pusha
jecxz
pushl
mov
mov
pop
mov
adc
dec
imul
je
and
mov
jb
push
xchg
push
ja
movsb
mov
int3
push
cmp
xchg
inc
mov
sbb
and
movb
pop
cmp
inc
xor
pop
fsubl
ljmp
test
ficoms
pop
lahf
xchg
fstps
sbb
jb
push
sub
xchg
pop
mov
hlt
cwtl
dec
push
sub
out
cmpl
dec
mov
out
jo
fnsave
shrl
cli
mov
fs
pop
pusha
inc
mov
push
add
cmp
xor
gs
sub
and
clc
adc
sbb
inc
push
jns
mul
mov
mov
jnp
ss
scas
xchg
or
push
cmp
js
push
jo
ret
or
xlat
or
adc
sub
orb
push
repz
cmp
js
jmp
aaa
xlat
outsb
test
orb
mov
xor
mov
adc
jge
and
adc
fistl
mov
scas
inc
fwait
mov
sbb
mulb
test
lock
orl
jecxz
sub
rcll
enter
cmp
add
sbb
xor
popf
mov
sbb
push
in
mov
xor
in
xchg
pop
fnsave
adc
out
push
push
repz
xchg
stc
mov
in
test
dec
sbb
imul
adc
mov
mov
mov
das
ja
aad
or
sarl
and
push
and
cmp
test
aaa
jmp
mov
push
lahf
das
mov
add
pop
add
add
jae
sub
pusha
xchg
push
outsb
int
inc
fdivp
in
int3
mov
dec
je
pushf
jecxz
mov
out
add
sbb
mov
push
loop
les
adc
leave
xor
repz
mov
adc
sahf
cwtl
xchg
dec
mov
mov
ror
add
push
or
leave
mov
subl
pusha
jecxz
addl
xchg
addb
xor
mov
cmp
jmp
pushf
jecxz
fucom
pop
ret
push
inc
inc
xor
into
fcom
lret
mov
rep
call
cmp
adc
mov
imul
addb
adc
subl
popf
jbe
out
rcrb
stc
xor
ljmp
cmpl
bound
mov
pop
stos
cmp
mov
enter
nop
push
imul
cmp
pop
lock
out
jle
add
fbld
int
cmp
sbbl
or
lods
aaa
mov
fwait
adc
sbb
push
movsb
movsb
xor
mov
stos
in
push
call
aad
ja
leave
sub
std
shrl
push
gs
add
sub
ja
pop
lahf
data16
lahf
pop
mov
cwtl
and
pusha
mov
and
or
xchg
mov
xlat
insb
mov
dec
repz
std
cmpsl
mov
mov
mov
mov
sbb
loopne
inc
sub
je
addr16
lods
insl
sub
push
and
ljmp
dec
jns
mov
iret
lock
pop
xchg
xchg
push
sbb
in
sub
jl
shl
mov
sub
mov
out
test
ja
inc
loopne
lock
lods
call
lret
mov
push
inc
dec
arpl
and
mov
dec
ds
roll
inc
clc
shll
xchg
push
ljmp
inc
mov
fsubrs
lret
adcl
icebp
rcll
add
loop
mov
les
movsb
mov
xchg
ret
cwtl
cmp
mov
adc
dec
pop
mov
aad
and
add
lret
scas
je
popf
movsl
shl
stc
sub
mov
js
fisubrs
jge
jae
hlt
movsb
push
pusha
aas
xchg
lods
mov
mov
add
lds
lcall
popa
xchg
in
xchg
es
jg
loop
fcmovbe
aas
out
pop
dec
rcr
std
stos
popa
cmp
int
std
arpl
xlat
in
jnp
jecxz
or
jbe
lea
mov
outsl
das
lds
or
adc
dec
arpl
dec
orb
jo
in
pop
stos
sbb
rol
decb
push
iret
sub
out
rorl
cmp
adc
fmull
add
sbb
add
or
test
movsl
xchg
test
or
popa
clc
stos
mov
sbb
xchg
and
jg
mov
ret
stos
outsl
outsb
add
into
xor
repnz
push
inc
inc
pop
outsl
push
aas
ret
cmpsb
repz
adc
pop
mov
movb
or
and
loopne
mov
mov
mov
out
mov
fs
pop
push
in
add
and
adc
test
ljmp
ljmp
out
jns
inc
sti
mov
cmpsl
adc
or
stos
mov
and
xchg
gs
movsb
dec
mov
fisttpl
int
and
orl
mov
mov
mov
xor
mov
jecxz
mov
rcl
push
jge
xchg
pop
imul
and
cli
mov
int3
push
stos
mov
out
push
out
pop
or
aaa
mov
push
adc
xor
aad
mov
fcomi
cmp
fcompp
mov
ja
push
or
push
mov
inc
mov
insl
inc
repz
cld
mov
adc
jns
jg
sbbl
xor
xor
stc
or
dec
pop
das
mov
mov
mov
sub
inc
jb
sub
mov
mov
ret
or
shll
pop
icebp
sub
pop
adc
test
ss
pusha
push
cltd
inc
mov
sarl
clc
test
dec
mov
cmp
sbbl
pop
jp
test
js
push
pop
xchg
repz
or
mov
inc
lret
and
add
ret
pop
adc
cmpsl
js
jno
adc
xchg
push
icebp
nop
inc
mov
arpl
call
pop
jg
lret
mov
add
inc
inc
lods
fstpt
mov
push
fs
inc
jecxz
mov
sub
ret
arpl
inc
pop
sub
and
mov
jae
mov
ret
repnz
push
faddl
cmp
and
add
es
xor
loop
ss
xchg
in
push
cmc
jge
das
sub
popa
xor
jl
push
call
pushf
clc
and
loope
lods
subl
out
mov
clc
aad
push
pop
xchg
sub
ljmp
sbb
es
jb
jns
mov
scas
mov
inc
nop
daa
mov
rorl
insb
jl
xor
arpl
xchg
push
fisubrs
push
and
outsb
in
push
jo
into
or
and
cltd
xor
add
aam
pusha
dec
bound
add
arpl
push
shll
cmpsb
hlt
lret
in
cmc
fucomi
pop
xchg
mov
out
pop
mov
push
popf
cmp
outsb
stc
jnp
mov
inc
mov
das
mov
lahf
sub
les
js
and
mov
mov
dec
adc
daa
sbb
jle
pop
push
sbb
add
cmp
xchg
xor
or
hlt
jbe
and
push
jo
jb
in
orl
dec
sbb
das
or
sbb
or
cmpsb
mov
int
cli
pushf
xchg
fsts
loopne
mov
notl
out
mov
xchg
mov
repnz
icebp
fsubl
pop
jmp
or
xchg
cmp
push
add
jnp
rcrl
push
jae
dec
gs
xor
les
mov
or
repnz
sbb
cmp
cs
loopne
mov
sbb
insb
lret
pop
jecxz
mov
jb
cmp
shlb
sbb
imul
mov
lods
dec
sbb
int
xchg
repz
imull
in
loope
pop
fistpll
data16
movsb
mov
mov
ret
mov
loopne
leave
fnstenv
pushf
jmp
or
ret
or
mov
mov
popa
jmp
jg
insl
icebp
out
cmp
inc
dec
mov
jmp
fld
jb
cmp
in
sbb
mov
lock
jmp
dec
ss
add
add
mov
xor
imul
push
mov
rcr
mov
add
out
and
cwtl
lret
dec
cmpsb
jno
scas
inc
xor
sti
int3
pop
call
adc
imul
mov
rcrb
push
dec
and
add
iret
cmp
dec
push
imul
sahf
inc
dec
nop
lcall
ret
out
jns
cmp
jb
int3
mov
xlat
mov
dec
dec
cs
add
xchg
dec
pop
cld
jle
and
rsm
inc
sub
leave
push
mov
bound
inc
mov
mov
jbe
aam
adc
ljmp
xchg
mov
lahf
jo
mov
fldenv
mov
pop
adc
inc
test
jbe
sub
repnz
repnz
call
shld
xchg
add
cs
pop
testl
xor
leave
inc
stos
push
pop
sbbl
pop
add
dec
loope
mov
adc
adc
and
shll
lcall
pushl
mov
call
push
lds
push
in
shll
insb
ffreep
lea
std
jo
mov
lea
sub
dec
rorl
bound
sbb
sub
outsl
pop
and
xchg
sub
xor
dec
sbb
rol
push
xchg
mov
mov
ja
cmp
xchg
adc
icebp
shlb
mov
mov
mov
insl
loope
les
mov
add
push
lods
clc
ret
dec
cltd
test
arpl
xchg
mov
or
mov
fstl
push
jp
sti
in
adc
cmp
outsb
xchg
shlb
ja
loopne
push
dec
cmpsb
sbb
movsl
cltd
cmp
je
out
in
cld
xchg
pop
mov
dec
mov
sbb
out
mov
sub
or
sub
in
ficoml
scas
ret
jb
mov
ja
dec
and
pop
lret
xlat
cmp
lea
aas
adc
bound
mov
repnz
jns
pop
sub
imul
jl
fstps
push
lcall
xor
sub
jl
divl
fstp
leave
pop
and
and
aaa
int
add
es
fnsave
sbb
lds
push
jno
adc
add
ret
xor
adc
das
mov
insb
sti
add
inc
sbb
scas
stos
insb
aam
inc
je
pop
inc
or
add
pushf
cmp
stos
jnp
lods
inc
je
into
lods
lods
mov
sbb
push
popf
incb
in
lahf
sti
std
cmp
dec
pop
cmp
dec
sbb
fidivl
fdivrs
dec
inc
clc
sahf
in
adc
shrb
xchg
icebp
int3
outsl
pop
adc
addr16
mov
jnp
into
in
pop
ret
lcall
cmpsl
les
sub
sbb
fwait
xor
addb
cmp
ss
xor
cli
ret
pop
mov
mov
jp
mov
out
and
push
pop
dec
add
out
clc
pop
fcomip
push
or
push
mov
mov
pop
adc
pusha
xorl
iret
inc
int3
mov
xor
pop
scas
cmp
cs
fsubrl
lds
loop
mov
xchg
jecxz
pop
xchg
mov
cs
cmp
inc
int3
mov
inc
popa
add
scas
fs
addr16
mov
pop
push
push
jb
aad
ret
fnstsw
and
push
dec
mov
cmp
cmp
lds
pop
fdiv
scas
pop
inc
loopne
mov
into
das
pop
mov
mov
fidivs
mov
rorb
mov
jl
mov
or
sbb
xchg
push
push
adc
or
adc
xchg
xchg
sub
hlt
fwait
xor
in
imul
mov
and
call
jns
outsl
daa
les
pop
inc
and
sub
inc
loope
dec
fisubs
enter
mov
adc
stos
aad
xor
push
icebp
jbe
push
repnz
xor
cmpsb
jecxz
sub
xlat
outsb
test
push
mov
js
cmp
inc
xlat
xchg
fdiv
outsl
ret
adc
xor
dec
mov
test
fcompl
sub
dec
test
sbb
test
push
test
dec
lods
sub
mov
addr16
mov
test
add
stos
xchg
mov
xor
jno
daa
mov
scas
push
jmp
mov
rorb
mov
and
pop
int3
and
dec
gs
cmc
pshufw
adcl
outsl
test
sbb
loope
lds
test
mov
inc
stos
or
fistpll
fs
decl
xor
lods
pop
jns
pop
arpl
cmp
lods
mov
fdiv
lods
mov
imul
xorl
xchg
mov
movsb
sbbl
stos
push
repz
jns
rorl
pop
mov
lcall
idivb
mov
cli
out
cmp
es
out
dec
cmp
aad
repz
cmpsb
not
push
sub
pop
shr
ficoms
and
and
mov
xor
out
fidivs
adcb
add
shrd
jl
cli
lret
stos
popf
in
andl
stos
in
add
js
outsl
out
cld
mov
imul
jmp
xchg
cmp
dec
inc
mov
rorl
xchg
mov
dec
mov
push
in
jecxz
push
leave
sbb
xor
push
push
adc
fiaddl
and
xlat
inc
fucom
adc
shll
mov
mov
fidivrs
rcr
js
push
mov
shrl
repnz
in
jmp
pop
sub
cltd
cmp
mov
mov
jno
mov
into
or
clc
sahf
mov
push
xor
mov
insl
xchg
and
lcall
cmpsb
rcrl
repnz
roll
xchg
add
push
adc
mov
mov
pop
dec
leave
xor
jbe
sbb
insl
dec
mov
and
sbbl
mov
pop
jecxz
rol
pop
in
xor
loope
int3
pop
dec
dec
dec
jne
xorb
ret
push
test
fisttpll
in
xlat
cs
testb
inc
jo
cmp
jmp
stos
inc
lret
fwait
xchg
leave
pop
xlat
leave
push
mov
sbbl
mov
rorb
push
dec
mov
jnp
push
and
pop
scas
shrl
inc
leave
pop
jns
add
xchg
jae
add
test
in
push
or
mov
dec
out
int
rcrl
lds
adc
mov
ja
ret
jle
loop
in
insb
push
out
rolb
mov
call
push
addb
pop
mov
mov
sbb
out
out
sub
int3
sbb
sti
mov
jb
jecxz
test
loopne
les
xor
cmp
push
rcl
mov
mov
das
nop
jne
sub
xchg
into
xchg
and
lea
mov
add
mov
inc
cmpsl
lods
das
cmp
enter
mov
push
loop
jmp
or
cs
pop
push
call
or
imul
sub
out
mov
stc
repz
mov
lahf
xchg
and
int
cwtl
mov
hlt
and
push
nop
and
sub
in
push
addr16
int
fstl
in
aaa
push
imul
inc
cli
push
pusha
lock
insl
lea
adc
inc
or
int
jns
xchg
xchg
jp
xchg
mov
cmp
dec
sbb
dec
mov
call
or
jp
adc
in
clc
add
inc
inc
push
pop
add
mov
pop
mov
out
test
and
leave
mov
jo
jle
push
out
push
sbb
jge
lret
cld
and
sbb
fwait
cmp
add
mov
cmpsb
mov
shll
mov
das
dec
pop
aaa
dec
dec
adcb
out
js
and
dec
cwtl
push
and
jp
mov
add
dec
cmpsb
dec
je
popa
mov
push
pop
mov
jle
test
hlt
add
xchg
sub
imul
jne
mov
ret
sub
int3
call
mov
out
sbb
addl
mov
addr16
fbstp
fs
push
inc
orl
dec
cmp
sbb
js
cmp
sarb
insb
add
push
cmp
adc
nop
andb
cmp
xchg
ret
fidivl
shrb
popf
push
push
outsb
enter
pop
ljmp
mov
sbb
rolb
pop
mov
mov
inc
sub
push
repz
xchg
sub
and
xchg
shll
push
gs
out
adc
stos
mov
adc
mov
mov
dec
sbb
mov
test
and
adc
js
inc
fwait
test
shlb
mov
stc
cs
scas
sarb
cltd
xchg
cmp
outsl
add
test
dec
outsl
and
mov
sbb
mov
jmp
into
rclb
mov
xor
adc
ja
fdivrs
mov
or
sar
test
jp
sub
or
xlat
mov
movsl
push
lahf
pop
xchg
sub
cmp
scas
mov
loop
dec
pop
test
or
je
pop
or
xor
mov
xor
ret
ret
add
and
adc
and
inc
shr
iret
push
add
nop
mov
mov
mov
fiadds
adc
xchg
mov
sbb
ret
jl
in
and
gs
movsb
fwait
lods
mov
mov
inc
mov
test
jmp
inc
inc
nop
mov
ljmp
ljmp
cmc
or
in
lea
jne
sub
mov
cmp
xor
fdivrl
loop
repz
dec
dec
fisubl
jg
mov
sub
sbb
stos
orl
sbb
mov
xchg
jle
pcmpeqw
mov
cmc
sbb
dec
xchg
pop
xchg
xor
lods
dec
std
xchg
loope
fnstsw
add
jle
scas
arpl
cmp
or
cmp
xor
popa
cmpl
in
ljmp
sar
pusha
mull
pop
or
call
xor
cltd
dec
cmpsl
xchg
je
pop
xor
pop
out
in
push
sbb
ja
mov
loopne
imul
dec
mov
divl
mov
mov
loopne
jb
mov
jp
ret
subb
cli
das
sub
or
add
repz
loope
adc
add
mov
pop
and
loopne
lock
mov
xchg
in
mov
sbb
mov
leave
pusha
or
cmp
out
lea
pop
mov
inc
lret
stos
and
outsb
lahf
sbb
pop
lods
jle
mov
fstpt
ret
jle
ja
adc
mov
pusha
mov
xchg
decb
xchg
in
and
aaa
push
xor
aaa
xchg
cli
inc
mov
and
sub
dec
and
imull
push
push
in
data16
sbb
imul
jecxz
xor
push
insl
aas
cli
mov
lcall
add
xchg
push
clc
mov
mov
pop
inc
adc
mov
pop
ffreep
and
pop
pop
cmc
jl
sbb
xchg
movsl
mov
pop
xchg
lea
push
inc
lods
ret
jns
leave
je
sbb
aam
xchg
jo
push
dec
xor
fstpt
mov
lret
cmp
sti
xchg
sarl
sub
cmpsl
xorl
bnd
das
sub
add
and
cli
inc
sub
enter
or
ret
push
mov
cmpsb
rclb
jmp
sarl
fnstsw
cmp
rorb
xchg
ja
push
addb
xor
outsl
adc
mov
cwtl
mov
jge
cld
mov
daa
insb
call
cmp
insb
stc
loopne
adcb
sti
roll
mov
cmc
add
mov
cmp
sarl
cwtl
imul
xchg
mov
adc
sub
int
scas
xor
push
jnp
jg
push
inc
outsl
pushf
xor
out
and
jmp
mov
or
int
les
negb
xchg
cld
loop
cmp
loope
mov
pop
repz
loope
call
jmp
ss
sahf
jns
jl
test
cmpsl
add
sub
stos
add
pop
stc
mov
mov
mov
sbb
mov
nop
mov
mov
mov
mov
sub
adc
std
mov
into
or
int3
pxor
inc
mov
icebp
mov
push
jl
jle
mov
ljmp
lret
sti
aad
xor
push
shrl
cmp
xlat
adc
jnp
js
jb
cmp
mov
xchg
scas
add
pop
mov
cs
push
lods
sti
cmp
adcb
rcl
out
scas
daa
shrb
and
fldl
lahf
push
cmpsl
shl
adc
push
cli
mov
sbb
repnz
movsw
inc
adc
pop
lret
or
in
add
inc
push
cmp
jp
mov
or
cs
repnz
mov
cmc
ret
enter
daa
loop
xor
mov
repnz
mov
cli
fdivs
popf
fistl
mov
or
xchg
mov
xchg
decl
mov
push
out
lods
or
out
pop
pop
mov
xor
xor
cmpsb
pop
adc
ret
call
or
ja
sahf
dec
cmpsb
mov
pop
sub
sub
insb
andl
add
lcall
jecxz
dec
das
add
lcall
sbb
jo
je
pop
mov
sbb
and
fwait
dec
pop
in
xor
inc
mov
movsl
lds
out
test
cmc
sub
out
push
pop
and
mov
xor
fsubl
dec
aad
mov
adc
pop
pop
mov
test
fwait
daa
sbb
sbb
js
je
and
popfw
sbb
push
fistps
mov
out
or
mov
insl
sub
cltd
sub
dec
fistpll
sbb
add
iretw
sbb
mov
out
bound
mov
frstor
std
jle
dec
in
push
xor
cmp
addl
lahf
stos
xchg
sbb
or
ss
jne
mov
xchg
xlat
inc
pop
aas
pusha
and
sbb
subl
mov
add
jno
sbb
jmp
outsl
call
xchg
lods
mov
shll
add
jo
arpl
jg
aas
add
gs
pop
call
int
jae
push
test
sbb
pop
pop
push
adc
jne,pn
scas
jne
in
iret
pop
cmp
pop
je
mov
mov
scas
fists
sti
jno
cltd
mov
inc
call
jnp
mov
lcall
pop
mov
adc
adc
test
xor
std
push
out
xchg
sbbb
cmp
push
xorl
jo
cmp
mov
lahf
push
cld
shlb
mov
daa
sbb
xchg
sub
mov
cltd
pop
xchg
scas
dec
arpl
add
mov
aaa
test
cmp
jecxz
push
cltd
stc
add
mov
fbstp
fcomp
insl
loopne
aam
into
add
sub
pop
cltd
mov
push
popf
cmpsl
push
cmp
and
mov
iret
clc
mov
clc
mov
push
aaa
mov
inc
je
mov
xor
repnz
lcall
adc
test
sub
xor
push
push
sbb
dec
dec
in
insb
jne
xchg
mov
inc
or
pushf
mov
daa
repnz
jbe
mov
ficomps
int3
push
and
scas
mov
cs
inc
outsb
leave
push
mov
dec
cmpsb
inc
insb
jbe
add
shll
dec
cmp
imul
aam
ljmp
fisubs
inc
fcoml
cmp
sub
mov
out
out
pop
dec
push
xchg
repz
call
jge
pop
sbbb
inc
repnz
dec
or
push
or
fbld
lcall
je
enter
clc
xchg
pop
adc
movsb
cs
inc
fsub
xchg
mov
push
cmp
imul
push
test
xchg
pop
or
cmpl
ret
jp
adc
imul
add
push
test
out
call
dec
stos
sahf
movsb
xlat
icebp
sub
das
pop
dec
sub
cmpsl
js
mov
jp
out
in
mov
push
aad
les
aas
fs
xchg
iret
rol
jnp
dec
int
je
push
cmpsb
outsl
jo
mov
cmpsb
in
out
arpl
xchg
sbb
push
movl
pop
or
sub
xlat
cmp
imul
add
das
hlt
and
dec
inc
jp
in
mov
adc
mov
enter
mov
in
xor
mov
stos
mov
test
inc
in
jp
in
out
je
inc
test
movsb
sub
aad
out
inc
push
mov
enter
scas
xchg
xchg
gs
movsb
rclb
jecxz
mov
mov
mov
inc
sahf
sahf
cmp
dec
loop
ret
add
scas
dec
loope
add
push
ds
daa
add
sarl
test
mov
mov
repz
xor
pop
pop
addr16
stos
test
xchg
mov
xchg
jg
cmpxchg
push
jmp
outsb
add
lahf
dec
orl
sub
and
and
xor
popl
push
hlt
outsl
out
pop
ret
push
nop
outsl
mov
into
sbbl
dec
xchg
fsubr
add
imul
dec
pop
mov
test
jge
addr16
add
mov
fdivl
or
xor
add
pop
mov
sarb
das
icebp
xor
es
sub
cld
mov
fsincos
jle
ret
scas
mov
fldpi
push
insl
inc
and
lahf
test
insb
add
fldcw
lds
pop
daa
mov
je
jmp
lock
je
pushf
in
fwait
cmp
pop
inc
arpl
scas
mov
loopne
jl
xchg
inc
push
in
lds
or
insl
dec
in
stc
cmpsb
pop
pop
pop
sbb
xorb
repnz
inc
icebp
mov
lock
and
xchg
mov
popa
mov
dec
push
sub
imul
jno
mov
repz
mov
cmp
dec
inc
inc
fsubl
cmp
jle
loopne
mov
jae
pop
mov
dec
sahf
in
stos
cli
out
jmp
xchg
scas
lock
mov
or
dec
into
inc
test
out
sbbl
dec
lahf
push
fstl
loope
mov
xor
mov
sbb
jg
cmp
ret
xor
sbb
fsub
ret
inc
push
out
cmp
in
outsl
rcrb
in
out
shr
ss
addb
jmp
sti
and
shrl
pop
js
stos
lds
adcl
jae
shrl
xchg
test
mov
push
sub
rcrb
push
pusha
mov
rcll
mov
mov
movsl
pop
jne
mov
sbb
xchg
jbe
enter
or
mov
lcall
add
cltd
push
in
out
rol
les
xor
dec
xchg
sub
xchg
bound
push
xor
stos
add
add
int3
and
lods
outsb
push
jae
pop
xor
test
and
shlb
push
adc
mov
gs
dec
cmpsb
dec
push
sub
xor
inc
dec
scas
inc
xchg
call
scas
sub
push
mov
sarb
jle
mov
inc
dec
sub
lods
int3
xchg
loop
cltd
push
add
pushf
jp
sub
and
lock
popf
hlt
scas
sbb
aaa
ljmp
xor
sub
mov
cmpsl
mov
mov
bound
mov
cmp
imull
inc
mov
outsb
xlat
or
hlt
mov
add
aad
adc
add
movsl
shlb
jbe
outsb
lods
mov
mov
out
test
and
inc
push
or
jg
jle
fildll
lods
fwait
int
pop
push
sbb
stos
inc
adc
dec
in
or
jecxz
into
imul
push
dec
mov
xor
xchg
dec
filds
mov
outsl
xchg
push
push
leave
mov
pop
mov
loopne
xor
sub
cltd
imul
jbe
int
adc
push
test
dec
outsl
add
mov
in
push
xor
push
dec
mov
filds
test
addr16
fidivs
adc
mov
and
cmp
or
repz
cmp
xchg
insb
out
push
pusha
push
fsubr
aaa
adcl
add
sub
int
jmp
push
mov
xchg
dec
in
dec
pop
xchg
sub
daa
inc
aaa
jle
adc
sahf
outsb
movsb
jecxz
mov
mov
fdivl
push
jmp
mov
inc
fisttpl
incb
das
popf
ljmp
mov
inc
in
xchg
fmuls
dec
inc
stc
pop
jne
insb
psllw
and
dec
cs
mov
fucomip
pop
sbb
mov
inc
je
mov
into
idivb
bound
pop
mov
clc
arpl
or
or
mov
cltd
mov
cmp
xor
jns
popa
xchg
sub
adc
movsb
rcrl
jl
mov
lock
push
xchg
rorl
pop
cmp
dec
mov
shlb
shlb
test
loopne
push
fisttpl
add
lds
negb
scas
or
addr16
cld
push
ljmp
jno
pop
push
inc
dec
add
mov
lods
fdivrl
sbb
push
imul
adc
xchg
or
pop
mov
jmp
loop
push
jno
mov
das
xor
nop
gs
push
push
bound
popa
sti
xor
addr16
sarb
mov
push
fldenv
pop
rol
pop
hlt
sub
out
push
push
or
mov
jg
arpl
or
inc
adc
xchg
sbb
jnp
sub
shrl
dec
dec
scas
clc
outsl
mov
or
notl
jl
mov
and
add
cmc
fs
aad
cli
mov
outsb
scas
xlat
fisubl
dec
pop
xchg
mov
xchg
xor
mov
or
sub
addl
inc
and
lock
xchg
ljmp
add
xchg
pop
lea
clc
adc
in
inc
clc
int
mov
and
mov
pop
sub
mov
in
inc
jg
xlat
mov
rolb
movsb
xor
xor
cs
pushf
sub
pop
vpmovsxbd
call
pop
sbb
rdrand
add
cltd
andb
scas
xchg
cmpsb
pop
or
and
pop
std
or
ret
pop
test
out
sbb
aam
add
push
lret
lea
ss
mov
mov
mov
lret
mov
enter
and
gs
xor
pop
xor
ret
mov
or
push
in
jae
ss
inc
je
xor
jecxz
clc
cmp
sbb
or
mov
and
mov
out
mov
out
sub
dec
lods
xchg
mov
leave
xor
rcrb
adc
sub
or
aaa
fsubl
gs
pop
andl
jbe
mov
and
mov
adc
mov
sub
inc
or
adc
add
pusha
pop
add
mov
jb
outsb
mov
or
lods
mov
lods
xchg
stc
push
fisubl
or
stos
sub
adc
je
xchg
pop
sbbl
mov
mov
xor
cmp
out
sbb
pusha
stc
xor
roll
jns
mov
pusha
loopnew
lock
mov
dec
inc
push
je
imul
sbb
clc
xor
mov
lahf
lret
ret
cmp
mov
lret
daa
sub
and
sbb
push
lcall
push
ljmp
jno
cmpsb
or
lock
inc
dec
or
sti
xor
fwait
cmp
mov
sbb
adcb
pop
jmp
xchg
cmp
loope
xchg
and
mov
xor
xor
jl
xor
jecxz
add
xchg
push
inc
mov
adc
hlt
lock
sub
jmp
jl
cli
lahf
sti
mov
push
pop
xchg
mov
add
push
mov
jge
cltd
push
es
dec
test
out
inc
xor
out
and
int3
lret
into
leave
lahf
stc
xchg
pushf
int
inc
mov
mov
dec
add
add
cmp
icebp
lock
cmp
loope
pop
fisttps
push
sub
sub
cmp
fwait
xor
js
inc
sub
dec
xor
in
jb
jl
xchg
add
adc
jb
inc
dec
in
pop
loope
adc
mulb
outsb
rcl
pop
or
lods
mov
pop
dec
jp
out
stc
push
std
aas
ss
push
xor
sbb
mov
sub
ret
xchg
icebp
xchg
xchg
xchg
cli
mov
mov
popf
lret
shl
add
mov
sbb
iret
orb
push
push
sbb
jge
mov
or
mov
or
pop
cmp
sbb
or
stos
jo
pusha
mov
fdivrl
or
adc
adc
pop
in
push
fdivrl
ret
gs
xchg
dec
pop
vunpckhps
jmp
xchg
xor
fwait
cmpb
lahf
inc
stos
lods
fstpt
fisubs
cmpsl
lret
and
pop
or
adc
xchg
sbb
mov
aam
or
repz
cmp
adc
imul
insl
sahf
sbb
sub
inc
xchg
es
dec
jecxz
cmc
aam
sbb
aas
xor
mov
js
notb
rclb
add
mov
adc
cmp
outsb
je
mov
adcl
std
xor
inc
mov
popf
jl
mull
pop
das
fists
lods
xchg
decb
xlat
out
jns
xor
popa
subl
xchg
pop
das
hlt
sub
shr
mov
loop
jp
sbb
jno
add
rcll
in
xor
cmp
cltd
aas
or
cli
inc
clc
inc
mov
cwtl
popf
push
lcall
push
clc
icebp
fnstenv
mov
and
push
notl
mov
add
pop
sub
aas
lcall
push
sarl
sbb
dec
pop
sarb
pop
loopne
mov
inc
xchg
lret
pop
int
int3
and
xchg
and
outsb
mov
cs
xor
mov
or
out
mov
cmp
inc
sub
push
icebp
push
pop
adc
or
mov
push
cmp
rclw
or
and
pop
test
stos
lock
int3
outsl
push
add
or
push
adc
sbb
andb
fprem
js
xor
xor
adcb
jb
jne
adc
xchg
inc
out
mov
lret
mov
push
rol
ds
sbb
cli
xchg
lods
jl
orl
shlb
sub
out
mov
andb
fcomps
mov
dec
stc
adc
mov
mov
jns
xchg
mov
dec
fwait
xor
inc
mov
leave
insl
fidivs
cmp
mov
mov
cmpsl
sub
push
jp
fdivl
inc
pop
int3
inc
fstl
xchg
sub
mov
xchg
jnp
xchg
movsl
jne
test
mov
sub
add
mov
push
mov
add
fisubrl
or
fidivrl
xchg
lret
data16
add
push
test
or
mov
loop
pushf
xlat
push
test
mov
fs
les
lods
xlat
add
mov
pop
pushf
repnz
in
pop
cmp
loopne
sub
ds
cmp
pop
xchg
add
out
lcall
iret
lea
sbb
movsl
cld
dec
xchg
push
fwait
insb
addl
popf
mov
mov
mov
inc
ret
sub
fcompl
xchg
or
dec
mov
divl
mov
inc
inc
xor
gs
xchg
mov
test
xchg
jb
std
mov
sub
mov
out
inc
frstor
loope
pop
out
xlat
pusha
mov
outsb
rolb
jle
addb
pop
pop
jecxz
movsb
pop
mov
or
jb,pt
fsubrs
push
pop
adc
testb
cmp
cmp
fistpll
hlt
adc
xchg
incl
in
cmp
notb
movsb
adc
test
cli
xor
inc
iret
aaa
test
mov
mov
lods
cmp
sub
cmpl
gs
stos
and
pushf
xor
push
push
adc
push
ljmp
cmc
cmp
cmpsb
mov
add
xor
cwtl
cmpsl
icebp
dec
push
mov
mov
adc
push
mov
mov
pop
out
inc
addl
sti
push
aas
or
test
xchg
pop
lret
push
cmp
mov
fisttpll
mov
mov
mov
mov
jno
ja
and
xchg
xor
mov
or
cmc
repnz
mov
xlat
insl
leave
ret
outsb
mov
jns
jns
jecxz
cmp
ret
sub
dec
add
ret
xchg
adc
iret
sbb
aaa
fisubrl
dec
push
lods
pop
xor
pop
xchg
pop
jo
addl
cld
or
gs
push
mov
aam
aaa
add
loope
ja
in
aas
bound
mov
adc
cmc
dec
adc
mov
faddp
enter
mov
jmp
or
aad
add
icebp
pop
popf
dec
and
mov
aas
fwait
xor
jp
xchg
pushf
andb
mov
pop
and
pop
adc
cmp
pop
xor
mov
cs
xchg
push
push
sub
icebp
mov
adc
xlat
or
cs
test
outsl
es
cmp
pop
popl
jmp
out
cli
push
das
inc
hlt
sbb
adc
push
cmc
cmp
clc
mov
mov
cltd
js
sbb
je
xchg
cmpsb
and
mov
mov
data16
repnz
push
and
icebp
pop
xchg
xchg
push
jb
push
jb
in
shrb
pushf
test
clc
pop
in
mov
scas
dec
pusha
fildll
popf
adc
xchg
sbb
shlb
das
in
cmpsb
push
cmp
in
ja
daa
dec
and
mov
jle
push
jne
dec
andb
mov
inc
cld
enter
fldl2t
test
cmp
shlb
pop
std
inc
testl
sbb
sub
outsl
jecxz
jne
cmp
test
dec
lret
xchg
xchg
and
push
cmp
std
clc
addr16
xchg
mov
lcall
call
test
push
rcrb
sbb
orb
rorl
outsl
cs
sub
dec
pop
imul
mov
sbb
dec
fmull
xchg
fisubs
dec
pop
push
ja
jb
movsb
cmp
cmp
adc
inc
or
mov
dec
mov
in
adcb
fcomi
mov
enter
xor
mov
test
fmulp
push
scas
mov
sahf
enter
mov
hlt
out
les
cmp
subl
adc
cli
insl
loope
cmp
int
sbb
popf
cld
cmp
pop
pop
sahf
dec
outsb
in
xchg
dec
mov
mov
lea
mov
push
lods
and
repz
inc
test
xchg
mov
pop
mov
mov
and
inc
lods
mov
mov
dec
fwait
mov
fmul
fs
lds
into
scas
rclb
rcl
add
dec
mov
movsl
in
pop
pop
cmpsb
jg
jp
fs
cmp
mov
ret
xor
rolb
orb
mov
ror
andps
test
js
call
jl
ds
lods
mov
popa
push
cli
insl
mov
bnd
xchg
jl
pop
movsl
jne
push
inc
xchg
inc
bound
add
push
rorb
dec
fbld
inc
cs
imul
push
xchg
or
out
and
dec
adc
lahf
mov
xchg
test
inc
pop
lods
xchg
adc
mov
fisttps
dec
jnp
mov
adcb
movsl
mov
or
mov
xchg
sub
sbb
inc
mov
jb
mov
bound
scas
adc
pushf
sub
add
mov
cltd
sti
outsb
pop
out
out
mov
jecxz
push
in
andb
imul
mov
mov
inc
inc
jb
pop
arpl
icebp
jecxz
repnz
out
cmpsb
ret
push
pop
inc
push
xor
outsb
loopne
xor
sbb
sbb
mov
jecxz
ficoml
popf
outsl
cmp
fidivs
xchg
sub
sbb
pop
xor
jg
jns
sbb
aam
pop
rcrb
ret
fbld
add
fstpl
and
xchg
sub
or
hlt
cld
jle
mov
adc
mov
jmp
dec
sbb
push
outsb
jl
enter
adc
divb
adc
lret
mov
icebp
pop
movsl
push
cmc
pusha
test
inc
mov
lret
cld
ret
xchg
push
pop
sbb
mov
jl
push
push
inc
sbb
movsl
out
lds
dec
jns
jp
out
cmpl
dec
in
inc
std
cltd
jle
mov
mov
mov
cmp
xor
hlt
std
loope
mov
mov
jo
repz
cmpsl
push
sub
aad
rorb
mov
leave
mov
jp
xor
cld
mov
or
popa
rcr
jno
fsubl
fiaddl
push
mov
ljmp
into
add
das
sarb
pop
push
or
jmp
and
jl
add
pop
adc
push
pop
mov
jle
out
sbb
hlt
mov
mov
incb
mov
jg
mov
mov
ficompl
movsl
inc
pop
xor
mov
out
testl
or
adc
dec
adc
inc
fldl2t
sub
pusha
xorb
pop
ja
xchg
push
adc
mov
mulb
adc
adc
addl
js
lret
inc
imul
inc
jae
lea
lods
dec
mov
in
bound
cmpsl
sub
loop
jns
inc
pop
cmp
jecxz
mov
and
cmc
dec
fldcw
adc
jp
mov
push
inc
adc
popf
sub
cld
push
jae
and
mov
lcall
lcall
or
mov
outsl
fisttps
aas
lea
daa
aad
pop
mov
iret
or
pop
mov
jnp
dec
sub
insb
add
dec
pusha
cli
fnstenv
push
into
fdivl
subb
aas
movsl
loope
rcl
leave
pop
xchg
dec
mov
ss
pop
cmp
test
into
pop
aam
mov
inc
cmpsl
pushf
rcrl
daa
dec
fbld
jl
push
sub
sbb
cmp
pop
hlt
pop
and
adc
mov
mov
pusha
mov
push
fwait
ds
xor
or
test
loop
mov
jl
and
fdivs
fists
insl
lods
mov
shll
and
inc
dec
loope
mov
jbe
inc
push
add
jp,pn
pop
cwtl
dec
pushf
inc
mov
xor
aas
push
push
fwait
sahf
xor
xchg
push
stc
mov
insl
imul
int3
outsl
loop
adc
jge
daa
in
scas
pop
ss
fwait
lods
jns
call
pop
mov
loopne
aam
xchg
ja
add
adc
mov
add
sub
mov
lahf
repz
cmc
test
test
dec
call
push
jecxz
dec
pop
mov
cmc
in
xor
add
sti
xor
popf
es
push
fwait
rolb
daa
cld
iret
insl
sbb
cwtl
mov
int3
xor
xor
cs
inc
mov
ret
int3
lahf
jae
xlat
outsb
cmp
xor
jno
fldenv
mov
daa
clc
jnp
mov
mov
jecxz
rclb
xor
sub
xchg
xchg
icebp
xchg
ss
xchg
and
xor
mov
push
repnz
ljmp
sub
clc
adcl
dec
daa
jle
dec
adc
es
push
or
loopne
pop
scas
enter
mov
push
popf
arpl
push
fnstsw
mov
outsl
add
pushf
lock
xlat
push
shlb
lds
xchg
mov
jecxz
xor
lods
pop
xlat
push
add
aad
sbbl
in
sub
pop
inc
mov
in
push
push
outsl
sbb
add
adc
inc
xchg
xor
movsb
ljmp
mov
mov
adc
push
iret
mov
cltd
ret
ret
jae
inc
in
push
dec
loop
mov
repnz
dec
jbe
jne
mov
mov
aam
gs
data16
xor
aaa
mov
push
or
hlt
mov
sahf
push
in
mov
in
push
inc
push
cmpsb
pop
inc
xchg
jp
int
cld
dec
push
lea
mov
daa
aaa
mov
es
daa
insl
jecxz
andb
sbb
sbb
sbb
popf
xchg
notb
mov
xor
sti
jae
movsl
jne
adc
sbb
mov
sub
out
ljmp
mov
jb
aas
dec
push
mov
xchg
lods
xor
aas
test
movsl
push
repnz
inc
adc
pop
test
shlb
icebp
cmp
loop
outsl
ret
adc
jne
insl
adc
mov
sahf
fs
fmul
fcomps
push
fsubs
loopne
mov
mov
dec
int3
dec
jne
and
or
pop
push
or
adc
add
pop
xchg
fisttpll
imul
imul
or
in
lock
pop
lcall
fucom
scas
mov
xlat
sub
repz
push
aad
xchg
xor
dec
loop
mov
push
mov
add
jle
gs
pop
int3
and
and
lods
xchg
inc
xor
push
add
mov
add
xchg
xor
sti
stos
imul
popa
rcll
sub
sbb
mov
mov
js
mov
cmpsb
insl
mov
inc
pushf
fdiv
inc
fcomi
test
bound
outsb
pop
pop
rcll
ds
std
xlat
sbb
sbb
les
pop
movsb
addr16
fs
and
inc
scas
shll
mov
xchg
jnp
leave
pop
loop
adc
rolb
sub
push
add
stc
push
scas
and
cli
mov
add
dec
inc
mov
pop
divb
aas
mov
sbb
mov
cmc
or
adc
sub
shl
cmp
mov
daa
aas
cmp
sub
inc
pop
imul
addr16
cmp
mov
loopne
sub
mov
xchg
add
mov
ret
mov
and
es
xchg
stos
jbe
pop
cmp
mov
scas
dec
shll
xor
and
cmp
inc
fcompl
push
lret
jbe
popa
jmp
mov
test
fstl
xlat
pop
or
dec
arpl
lahf
ss
aaa
mov
test
push
sub
inc
jb
mov
into
xchg
test
rcll
mov
inc
dec
adcl
add
lcall
jbe
xor
rorb
dec
sub
insb
clc
mov
insb
mov
xlat
sub
add
mov
sbb
aam
xchg
add
push
mov
mov
cltd
rolb
push
pop
or
cmpsb
subl
icebp
subb
sub
lock
jbe
xchg
mov
xchg
adc
inc
imul
mov
push
nop
daa
adc
imul
scas
mov
or
push
push
lahf
aad
dec
mov
adc
jae
cwtl
jae
pop
sbb
dec
jge
jp
call
push
adc
insl
loopne
mov
sbb
inc
and
test
xor
lret
add
cmpsb
add
test
cwtl
and
inc
cld
js
jo
pop
jecxz
insb
scas
xchg
push
jns
push
mov
out
push
movsb
xor
push
jge
shrb
ret
xor
pop
imul
lock
xor
arpl
jno
repz
push
cmp
cmp
nop
mov
push
cmc
cmp
sub
lret
cmp
pop
push
call
xchg
mov
xor
je
icebp
sub
sbb
inc
pop
outsb
jns
mov
cmp
popf
lods
popf
dec
ret
xor
fs
cmp
mov
jnp
rclb
orl
mov
xlat
inc
lods
adc
mov
push
push
les
jb
xchg
pop
decb
lret
sbb
jg
arpl
in
orl
pop
ret
insl
dec
or
insl
dec
cld
icebp
inc
call
sbb
enter
jge
loopne
add
shlb
xchg
cmp
iret
mov
aaa
push
mov
bound
fnstcw
adc
sub
js
jne
les
shrb
nop
aas
dec
ret
aas
aas
insb
cmp
ds
out
pop
cmp
loop
pop
loope
adc
imul
lock
std
jo
add
scas
inc
fdivl
mov
and
iret
faddl
jp
pslld
fildl
insl
push
mov
or
or
addr16
orl
push
pop
daa
cmpsb
cmp
call
shlb
jge
addl
dec
out
insl
sbb
lret
fnstsw
shl
ret
ss
scas
inc
or
pop
lea
out
add
xchg
sub
jae
int
rol
movsb
cwtl
int3
xchg
jno
mov
xlat
ret
adc
jne
pop
cmc
adc
lds
xor
push
jle
jl
imul
mov
mov
sub
jl
stos
fs
fidivrs
cld
mov
xchg
ljmp
jnp
xlat
sub
pushf
sbb
sti
xchg
scas
adc
nop
pop
push
push
push
fistl
loope,pt
sbbl
insl
jno
pop
mov
je
stos
popa
sahf
push
xchg
push
inc
movsb
adc
xlat
not
push
cmp
out
add
jp
jle
cmp
rcrl
sub
aaa
add
inc
jecxz
inc
ja
cmc
xchg
pop
repnz
adc
jbe,pn
sub
testw
adc
sub
mov
or
rolb
add
test
and
leave
pushf
repnz
popa
lods
pop
mov
xchg
arpl
or
call
scas
inc
mov
jbe
and
data16
mov
jl
xchg
movsb
rcll
jnp
jl
xor
cmp
mov
mov
dec
hlt
push
xchg
jbe
stc
cmpsl
mov
and
loope
fldl
and
pop
movsb
mov
inc
stos
mov
dec
lods
xlat
mov
ret
add
cmpsl
or
dec
test
jb
out
dec
xchg
shll
sbb
mov
imul
adc
sub
lods
pop
xchg
add
adc
xchg
xorb
xchg
xchg
pop
jb
mov
std
pop
add
sbb
stc
ficomps
pop
sbb
loop
jl
jb
ja
dec
mov
imul
add
cmpsb
mov
fnstcw
lods
mov
jne
in
push
or
xchg
in
fucom
in
out
xlat
lea
mov
shrl
cmp
enter
sub
pop
shrb
pop
xchg
sbb
in
push
cltd
mov
pmuludq
jbe
adc
cmp
lahf
push
mov
mov
cmp
dec
or
push
into
gs
mov
xchg
outsl
adc
lods
sbb
aam
or
lods
inc
js
inc
lods
push
fmulp
addl
aas
test
or
cwtl
jae
sub
sub
ret
fisubrs
add
in
sti
nop
push
add
sbb
push
lret
jae
std
inc
sub
jmp
pushf
lret
shr
mov
int
jns
push
out
ficomps
push
iret
jl
xchg
scas
ficomps
aam
sbb
je
fsubrs
xchg
repnz
in
imul
rcrb
mov
and
or
push
add
or
imul
mov
sarb
aad
or
icebp
mov
cs
and
xor
or
cmp
and
xlat
jmp
nop
inc
jno
cwtl
add
add
mov
jnp
mov
pop
popf
adc
loop
test
and
or
mov
outsl
jp
popf
ret
mov
repnz
sub
insb
dec
das
fdivl
dec
add
stos
or
test
push
inc
cmp
movsl
mov
cmp
out
mov
cmp
aaa
pop
repnz
insl
pop
add
ljmp
jmp
mov
test
subb
popa
inc
sahf
sbb
mov
mov
inc
xlat
mov
add
addr16
mov
aam
into
and
ret
mov
test
fisttps
mov
pop
and
add
js
inc
cmp
call
cmp
cltd
dec
dec
cwtl
inc
lcall
push
push
lods
sub
aad
icebp
movsl
mov
push
mov
push
out
mov
cld
xor
and
xorb
xchg
pop
adc
jg
jo
aaa
stos
mov
cli
or
adc
cmp
mov
jg
andb
jbe
or
jo
in
addl
mov
mov
fs
cmpsl
sti
cmp
sbb
vmwrite
stos
xor
push
push
inc
pop
icebp
je
jns
std
out
js
in
push
into
outsl
pop
jne
dec
iret
jns
aam
lock
cmp
inc
andl
imul
and
fldcw
dec
sbb
out
popf
test
fcoms
ljmp
rep
fsubs
sbb
push
sbb
ja
pop
jbe
fcomp
je
je
cmpsb
cmp
jecxz
lahf
adc
ss
pop
dec
mov
fcmovne
xor
ret
jbe
shlb
pop
push
gs
pop
or
adc
daa
outsb
test
insb
sub
sbb
ss
int3
loop
or
mov
xchg
pop
rcrl
sbb
adc
pop
call
cmp
xchg
out
lods
int
test
icebp
mov
xchg
test
fstpl
dec
add
test
jge
insb
fdivs
rcrl
shl
mov
call
or
or
std
jge
neg
popa
rorb
lds
mov
mov
dec
cwtl
pop
cmp
sti
notb
push
dec
mov
pop
mov
sbbl
mov
outsl
and
js
push
push
mov
add
add
lahf
or
jge
adc
sbb
cmp
mov
mov
int3
xor
js
mov
cmp
and
dec
mov
shrb
movsb
mov
push
or
xchg
xchg
sarl
jl
sub
push
dec
jmp
shlb
cmp
leave
loopne
sub
mov
stos
xlat
and
enter
add
mov
sbb
jb
sub
or
setno
mov
in
mov
and
mov
je
fucomip
std
addr16
punpckhdq
mov
adc
add
xor
sbb
aam
test
cs
and
dec
nop
mov
aam
cmovne
pop
adc
int3
jp
push
cmpsl
and
gs
sahf
js
je
mov
sub
mov
jmp
sbb
xchg
inc
sub
or
xor
in
or
push
call
ljmp
cmp
cmp
sbb
testl
sub
sbb
jmp
in
ret
sbb
dec
mov
daa
nop
sub
or
les
shll
adc
cmp
add
test
mov
pop
enter
and
loop
lods
push
add
les
out
movsb
mov
cmp
nop
xor
cmc
sbb
or
mov
mov
mov
rcpps
and
fistpll
add
push
fsubr
out
cmpsl
xchg
sub
psubd
movsb
add
jae
xchg
dec
jmp
loope
add
and
fwait
fwait
test
fs
push
fidivs
mov
in
outsb
xor
mov
scas
out
daa
add
scas
lods
inc
sbb
sbb
dec
add
outsb
cmc
pusha
inc
fstl
mov
sti
jecxz
out
les
fildll
adc
call
dec
pop
sub
mov
pop
test
lret
jns
sti
jnp
in
add
inc
pushf
repnz
shrl
pop
jmp
out
insl
in
fs
lcall
mov
imul
dec
loopne
inc
mov
mov
push
add
shl
xchg
jo
adc
insl
add
pushf
movsl
in
ret
ror
mov
lods
pop
xor
mov
sbb
xchg
mov
mov
es
xchg
push
jb,pt
and
inc
xchg
ret
in
inc
pop
stos
je
sbb
lds
pop
inc
mov
out
cs
jno
dec
mov
scas
and
popa
pop
mov
mov
mov
pop
rorl
or
xor
call
jne
clc
into
popa
lock
lcall
ljmp
gs
out
test
or
test
pop
cmp
add
xlat
sub
add
add
into
mov
out
lea
push
fldt
fnsetpm(287
stc
rorl
rcr
rcrl
loop
loope
push
std
and
add
add
test
out
jle
mov
sub
mov
and
inc
mov
mov
mov
daa
js
adc
cmp
testl
fs
jle
jb
jmp
ret
cld
cmpxchg
mov
pop
decl
xor
sub
sbb
inc
mov
mov
shlb
sbb
add
pop
sahf
cmc
nop
frstor
test
mov
sub
push
out
lret
pop
fimull
mov
lea
xchg
pop
cmp
lods
xor
pop
ds
mov
cli
dec
mov
xchg
xchg
push
jno
imulb
jae
adc
xchg
sbb
push
mov
ret
xchg
inc
jb
jge
xchg
mov
push
cmpb
andb
inc
fldcw
faddp
popa
adc
inc
pop
jae
mov
fwait
loope,pt
mov
jb
pusha
cmp
sbb
popf
mov
fs
in
inc
das
adc
sub
mov
dec
shll
add
or
and
xchg
fbld
mov
inc
in
nop
cwtl
js
in
dec
es
xor
push
scas
mov
lret
adc
les
das
cmp
fs
subl
push
dec
mov
imul
add
mov
out
mov
testl
xor
mov
popa
xor
aam
enter
dec
lahf
adc
mov
in
sbb
outsl
aas
xor
nop
inc
insb
mov
cmpsb
je
leave
sub
add
mov
out
ret
lcall
clc
push
clc
sub
pop
sahf
xchg
fldt
cmp
es
or
jmp
mov
subl
in
xchg
mov
insb
hlt
mov
cmpsl
xchg
pushf
test
fbld
mov
test
mov
mov
push
js
jns
ss
add
in
inc
fwait
xchg
sub
roll
sar
mov
add
add
dec
ss
loope
cmc
fisubrs
or
lods
stc
test
fisubrl
jecxz
clc
out
jge
sarb
aad
or
lock
xchg
xor
inc
ret
cmp
mov
imul
lods
mov
iret
jo
jge
icebp
mov
dec
jle
sbbl
ds
insb
cs
in
xchg
or
push
test
inc
xor
test
fld
xor
inc
cwtl
inc
fldl2t
dec
icebp
into
push
jmp
sbb
popa
scas
les
mulb
and
addl
adc
imul
adc
xchg
or
rcrl
mov
mov
adc
ds
xor
aas
loop
xlat
inc
stos
mov
mov
cmp
mov
sub
sbb
jge
mov
outsl
pop
movsb
lock
xchg
and
mov
cmpsb
inc
les
adc
inc
push
jl
inc
clc
jno
xor
and
sub
inc
fstps
incl
add
cltd
adc
fldcw
xor
push
cmc
push
repnz
push
mov
mov
leave
sub
add
xor
std
or
xchg
push
mov
movsl
icebp
hlt
inc
in
sbbl
aaa
mov
out
sti
mov
into
xor
lret
daa
inc
ds
mov
sub
loopne
cmpsb
sbb
or
and
pop
mov
add
cmp
or
pop
orb
outsl
jg
jmp
jno
dec
icebp
and
test
adc
mov
mov
out
mov
xorb
add
shrl
jp
das
repnz
subb
lahf
stos
inc
std
sbb
leave
out
jge
or
loope
push
mov
mov
inc
pop
inc
jle
shll
aaa
pop
imul
jae
mov
sbb
mov
adc
imul
xor
inc
cs
cli
arpl
loop
movsb
and
mov
divb
sar
ss
and
mov
stos
dec
cwtl
lods
pop
es
push
rorb
jp
inc
ss
fimull
rcrl
shlb
je
insl
mov
aaa
sub
cli
lea
pop
or
addl
xchg
call
popf
mov
sub
push
and
mov
jbe
mov
and
inc
inc
sbb
adc
hlt
fidivrs
pop
jnp
and
cmpsb
xlat
push
lods
xor
les
xor
nop
es
jle
stos
jbe
sbb
sbb
dec
loopew
pop
pusha
dec
pop
repz
aaa
lret
repz
and
es
jg
push
jbe
push
popf
cwtl
xor
outsb
cmc
aad
mov
out
out
sbb
ficomps
mov
mov
mov
fisubrl
outsb
out
loopne
testb
mov
imulb
jns
and
lret
hlt
mov
push
int3
aas
mov
rcr
shll
sbbb
or
movsb
mov
mov
dec
icebp
and
and
int
mov
fbld
testl
in
cmc
adc
or
mov
add
and
cmpsb
in
mov
mov
jmp
mov
mov
xchg
rcll
cwtl
js
aam
mov
aaa
sbb
jge
pop
repnz
inc
rclb
shrl
test
shlb
push
cs
cmp
xor
mov
inc
scas
add
dec
mov
mov
pusha
mov
pop
inc
pop
aas
mov
fldt
xchg
repz
mov
rorb
sarb
ret
push
or
movsb
inc
jo
mov
xchg
test
sbb
icebp
inc
jg
insb
int3
imul
std
lcall
stc
adc
xchg
push
sbb
inc
sub
cwtl
in
test
lahf
xor
inc
in
lret
xchg
ss
fsubl
sti
jecxz
jmp
loope
mov
pop
add
mov
lret
je
mov
dec
dec
add
or
jns
jb
repnz
rclb
jns
notl
pop
mov
xor
rclb
lret
bound
mov
mov
mov
or
out
rcrb
mov
outsl
in
sub
xor
loopne
jne
jle
sub
sub
mov
inc
int
push
or
repz
pop
out
cmp
aaa
testl
bound
jne
sbb
test
cltd
add
adc
addr16
into
inc
pusha
lret
mov
inc
xlat
xchg
sahf
scas
movb
mov
sbb
mov
aam
sub
std
nop
call
xor
call
sub
mov
and
decl
sar
fsubr
or
xlat
sub
sub
pop
push
in
inc
xchg
add
adc
ljmp
pop
push
test
mov
push
add
xchg
sub
xchg
cwtl
test
call
lods
mov
cmc
xor
divb
pop
incl
jbe
dec
and
dec
shr
call
dec
mov
fsubl
sbb
js
add
in
xor
lock
ss
xchg
jl
jle
sbb
mov
loope
mov
pop
cmpsb
mov
pop
shll
stos
test
cmp
sbb
sbb
fwait
lret
xlat
mov
nop
add
and
into
ja
loop
mov
mov
sub
push
fsubl
add
orb
into
in
aad
mov
and
or
out
sti
stos
cmc
dec
pop
push
pop
dec
inc
mov
aam
push
add
and
or
sub
dec
in
std
xor
xor
lock
jmp
and
arpl
mov
mov
xor
ret
dec
jge
nop
call
rorl
pusha
xchg
add
jae
pop
push
pop
call
ret
jbe
stos
call
cli
insl
insl
scas
popf
push
hlt
testb
jecxz
cld
repz
sbb
stos
jno
push
jl
mov
dec
add
jg
sbb
push
and
dec
mov
dec
adc
sub
cli
adc
repz
fld
or
sub
push
dec
daa
ja
cmp
or
push
icebp
mov
jne
jnp
xchg
pushf
dec
test
rcrb
dec
scas
outsl
ret
jae
pop
jnp
rcrb
lret
jbe
dec
loopne
sub
hlt
jl
and
mov
jns
rclb
cmp
pop
decl
ret
movsl
lds
daa
les
fsubr
call
xchg
and
adcb
pop
push
out
push
push
mov
fnstenv
mov
stos
xlat
call
or
xchg
test
popf
mov
fdivl
rol
imulb
cld
xchg
popf
and
mov
cli
movsl
in
lock
sub
mov
lods
xchg
cmp
jge
xor
das
in
push
xchg
test
lods
iret
jl
test
add
sub
inc
sbb
xchg
lods
sbb
cmp
repz
push
call
add
and
jge
cmp
shll
push
outsb
sbb
push
std
or
gs
lcall
inc
xchg
mov
mov
cmp
cmp
jecxz
daa
pop
lds
into
jb
pop
es
fistl
mov
or
addr16
movsb
shrb
sub
cmc
or
loop
push
adc
mov
cmc
add
xor
int
sub
pop
sbb
xchg
pop
repz
sub
push
test
mov
push
fnstcw
mov
xor
aam
dec
stc
pop
out
push
ror
aad
jl
pusha
into
cmp
jle
clc
nop
loopne
pop
imul
sbb
dec
popa
in
cmpsb
sarl
add
sub
dec
pop
fists
movsl
pop
sub
push
sub
int
ret
xchg
lahf
stos
bound
or
mov
add
mov
insl
data16
popf
jmp
lahf
add
lds
mov
jbe
lock
cmpsl
jo
dec
mov
and
je
adc
lds
cld
or
sbb
xchg
sub
and
mov
fucomi
sbbb
jns
jb
jo
lea
pop
clc
cwtl
scas
adc
push
ret
push
inc
jnp
aas
ret
cmp
mov
imul
xchg
int
push
cmp
inc
jns
stos
push
jne
pushf
int
test
rolb
inc
cmpb
idivl
sbb
stos
push
cmp
pop
shrl
out
in
shrl
push
add
push
lods
add
andl
sbb
and
push
test
cs
jg
push
sub
daa
js
div
dec
adc
jp
jle
fbld
cmp
stos
loopne
fisttpll
int3
sbb
mov
and
pop
lock
pop
in
jg
mov
push
jecxz
rcrb
cmp
xchg
mov
dec
xchg
insb
mov
push
nop
test
out
call
int3
pop
fs
leave
mov
das
in
icebp
mov
mov
testl
pop
cwtl
mov
sbb
pop
push
fwait
sbb
dec
inc
loopne
icebp
rcll
mov
cmp
fwait
sbb
dec
mov
or
js
or
mov
inc
mov
jl
fisttps
js
cmpl
js
pop
or
push
mov
mov
lret
adc
test
and
dec
or
xchg
cmp
fisubrs
cmp
adc
jae
dec
cmp
xor
xchg
fists
fwait
add
lcall
outsb
lods
and
fsubrs
aad
ds
clc
push
imul
dec
xlat
pushf
inc
ss
cli
jmp
test
cmp
adc
inc
cld
sub
xchg
rcl
jns
mov
fisttps
sbb
aaa
sbb
ret
pop
mov
dec
repnz
xor
dec
inc
inc
or
call
adc
adc
push
xchg
aaa
adc
jno
add
mov
pavgb
or
in
and
jle
pop
and
sbb
and
cltd
jo
push
cmp
flds
out
test
mov
sbb
push
jns
scas
mov
sbb
xor
push
test
out
sbb
push
inc
cmp
fwait
rol
lods
pop
fdivrs
push
cmp
pop
xchg
test
sbb
into
mov
movsl
ret
cltd
pop
pushf
cmp
or
loopne
lret
mov
bswap
arpl
pop
inc
push
in
ljmp
cmp
mov
into
add
ffree
scas
dec
cmp
jge
xlat
push
cmp
int
insl
push
mov
jae
adc
dec
fs
cmp
loop
adc
out
jmp
cwtl
jo
cmp
mov
dec
cmp
mov
jp
das
lods
mov
jmp
hlt
lahf
fbld
pop
mov
lret
mov
loopne
inc
pop
lahf
adc
and
sbb
sub
jo
pop
aad
add
popa
xor
test
jge
lock
test
int
repz
cmp
scas
pop
stos
mov
mov
js
inc
fcmovnu
cmp
orl
mov
add
push
mov
push
mov
test
mov
scas
cmp
cmp
stos
ds
je
loope
cmp
mov
js
or
or
icebp
add
mov
loop
int3
and
sbb
test
mov
jnp
add
jno
adc
jl
mov
jecxz
lahf
insl
sub
shlb
mov
add
arpl
ret
pop
sub
pusha
fcmovnb
mov
sbb
fistl
xchg
xor
les
pop
loop
and
out
mov
loope
mov
xor
les
sar
or
inc
pop
push
cltd
jecxz
das
inc
pop
mov
ds
jp,pt
jnp
fmuls
mov
xchg
fs
cmp
roll
repz
pop
ljmp
dec
add
xchg
cmp
mov
stos
loope
adc
in
gs
cltd
test
sarb
fmull
adc
fmulp
or
mov
mov
mov
arpl
fisubs
imul
mov
sbb
ss
jae
cld
iret
sbb
or
dec
mov
or
cli
xor
mov
sub
jnp
mov
pop
int3
pop
shl
dec
cmpsb
jns
lods
xchg
sbb
stc
adc
xchg
sub
aad
adc
mov
push
out
jb,pn
add
outsb
shrb
sub
pop
push
sbb
shlb
dec
bound
outsl
sub
xor
ljmp
insl
lcall
scas
cmpsb
push
push
pop
iret
push
orb
loop
inc
jl
jb
test
lea
leave
mov
lock
xchg
adc
or
dec
icebp
sub
mov
loopne
inc
xchg
adc
mov
loopne
shll
enter
mov
cmp
int
nopl
and
aaa
xchg
mov
out
cmp
aaa
and
sti
fcmovne
fs
jge
aam
adc
out
insl
ja
scas
jbe
loope
xchg
les
xchg
jmp
in
and
or
test
mov
out
xchg
aam
pop
cmp
sbb
lret
sub
push
mov
push
in
mov
pop
jb
add
pop
inc
sub
cli
jb
clc
shll
xlat
imul
out
xor
xor
outsb
xor
movsb
test
in
test
xor
mov
mov
add
or
push
jmp
pop
cli
sub
ss
push
mov
push
xor
and
xchg
cmp
xchg
cmp
lock
lods
dec
sti
xchg
inc
ret
xor
sbb
mov
jae
hlt
xor
add
mov
aas
rolb
jl
pusha
ja
jle
and
popa
outsb
mov
jbe
cmp
dec
dec
aas
xchg
add
and
adcb
inc
push
jmp
lret
cmp
adc
mov
imul
or
mov
push
movsl
sar
pop
icebp
in
mov
js
xchg
dec
out
in
mov
roll
cmp
mov
adc
in
xchg
mov
jge
inc
xchg
xor
inc
inc
std
xchg
xor
mov
fcomps
xchg
xchg
and
cmpsl
sbb
jecxz
add
cmpl
scas
call
jecxz
sub
mov
mov
popf
dec
gs
and
pop
and
mov
shll
and
mov
dec
jb
mov
pop
mov
inc
and
cltd
sbb
mov
or
cmpsl
testb
sub
movsl
mov
jp
jb
mov
mov
cltd
push
outsl
inc
fdivl
out
shrb
cmp
icebp
xchg
mov
jecxz
pop
fildll
shrb
repnz
jp
incb
dec
in
stc
shll
mov
int
dec
sbb
mov
ret
aas
jg
jmp
push
dec
cmp
pop
jg
lea
xor
mov
or
mov
stc
aas
in
push
inc
add
lret
int3
js
mov
nop
xchg
call
push
outsl
add
cwtl
aad
cli
dec
mov
xor
inc
xor
lea
adc
mov
ret
sbb
mov
test
ret
xor
stos
and
jne
push
out
stc
addl
imulb
cmp
ss
cli
jne
push
lods
pop
movl
fucomp
inc
add
and
int
lret
aas
cli
jnp
add
das
cmpsb
add
cmc
jb
xor
int3
cmp
cmp
inc
inc
xchg
jo
pop
movsb
mov
lcall
sahf
or
hlt
sbb
test
int3
jecxz
mov
fcoml
mov
jbe
bound
aam
icebp
out
ret
xchg
push
sub
clc
mov
fnstcw
lcall
xor
fs
xchg
sub
or
jo
xchg
ret
jmp
pop
add
inc
rorl
cmp
ret
mov
aas
adc
fidivrl
nop
aad
cmp
daa
mov
jg
cwtl
or
inc
jne
cmp
sbb
movb
addr16
push
enter
rcrl
stos
xchg
sbb
mov
sbb
mov
xchg
aas
jg
xor
or
lea
lret
mov
mov
fldcw
xor
sbb
adc
fstpl
ss
add
push
jbe
aam
add
pop
cmp
cmp
sub
xchg
cmp
mov
gs
push
jno
sub
cmp
mov
mov
jge
std
lret
dec
jbe
add
ss
cmp
mov
rcr
cmp
cmp
popa
imul
sbb
rcll
aad
cltd
xor
add
xor
xchg
subb
xchg
mov
les
adc
out
orl
insb
adc
sub
sub
popl
xchg
dec
into
mov
adc
mov
mov
or
pop
inc
rcl
les
mov
and
mov
xor
cmp
in
cltd
ss
arpl
xor
std
fdivrs
sahf
xchg
pop
mov
adc
adc
xor
pushf
dec
movsb
fcoml
pushf
sbb
test
lahf
cmp
imul
dec
in
lahf
leave
movsl
inc
or
sbb
xchg
cmp
xchg
in
lock
adc
jns
pop
mov
mov
jge
lods
sti
nop
stc
push
cwtl
adc
mov
scas
pusha
mull
popf
fildll
add
sbbb
mov
dec
or
or
pop
mov
insb
mov
cmc
or
xchg
stos
imulb
in
xor
xor
rcll
fstps
xchg
fistpll
sub
icebp
nop
shrl
sahf
and
sbb
out
and
xor
xor
mov
enter
sub
setp
rdpmc
shll
push
inc
xchg
into
gs
idiv
push
lods
mov
clc
adc
push
inc
mov
lods
cwtl
repz
jge
loope
sti
pop
dec
insl
std
insl
add
push
xlat
fdivl
xchg
inc
pop
jbe
adc
fcomps
inc
xlat
sahf
dec
push
jnp
or
mov
daa
in
in
sbb
and
mov
fsubrl
or
jg
xchg
testl
mov
dec
add
mov
cmp
pop
movsl
addr16
mov
div
imul
add
jns
cmp
xchg
dec
jle
mov
inc
dec
push
fists
std
pushf
pop
shlb
mov
loope
inc
cmp
adc
leave
push
imul
repnz
test
aaa
into
xor
push
push
stc
addr16
in
cwtl
sbb
jae
mov
pop
in
mov
ja
pop
sbb
call
push
or
and
jmp
or
cmp
leave
cmp
lret
cs
jae
pop
mov
or
inc
adc
mov
in
imul
cltd
sub
out
sbb
popw
cmp
cmp
jecxz
cld
and
in
and
push
jmp
into
mov
cld
mov
sahf
fs
dec
out
jp
push
mov
jbe
xchg
inc
inc
fwait
xchg
repz
xor
cmc
bound
fadds
pop
ss
mov
cmc
dec
aad
popa
jmp
lea
orl
das
xchg
xlat
adc
lcall
xor
lcall
dec
outsb
or
pop
mov
mov
or
jp
push
adc
hlt
push
cmc
push
pop
jmp
cwtl
cmpsb
repz
int3
sbbl
dec
imul
adc
mov
cmpsb
xchg
hlt
lods
ror
popf
sub
push
push
rclb
push
sbb
xchg
fs
push
insb
mov
lock
stos
fs
xchg
add
insl
sbb
pop
jp
xchg
insl
jae
aaa
in
hlt
call
repz
and
bound
scas
fimull
and
xchg
movsb
incl
mov
sbb
sahf
jmp
and
push
mov
ljmp
fs
push
scas
inc
mov
call
jbe
call
push
cmp
sub
add
sbb
dec
dec
popf
ret
jo
inc
iret
cmp
cld
out
outsl
rcrl
and
sub
jle
lods
leave
imul
es
pusha
fsubr
xchg
out
pop
cmp
cltd
dec
push
aam
hlt
inc
stos
pop
cmpsl
inc
int
movsb
dec
es
shrl
movsl
push
call
and
cmpsb
cmp
jge
mov
sbb
cwtl
pop
test
into
and
fimull
imul
pop
loopne
cmc
mov
mov
shrb
leave
int3
xchg
dec
jp
lahf
fucomp
call
in
ss
mov
mov
pop
shrl
fnstcw
out
mov
push
mov
sahf
int
sbb
inc
pop
ljmp
mov
popf
mov
frstpm(287
decb
adc
es
adc
push
push
lods
shl
pop
xlat
inc
sub
je
push
sbb
add
hlt
mov
ja
inc
pusha
clc
je
pcmpgtw
xchg
jg
adc
push
lock
adc
pop
mov
or
or
cli
sub
add
mov
out
xor
icebp
cld
xor
popf
mov
arpl
lahf
dec
mov
movl
out
jo
sub
sbbl
les
push
cld
jb
lcall
cmp
test
ret
cmpsb
inc
xlat
mov
test
cmpsl
dec
hlt
mov
push
cwtl
out
jecxz
aam
mov
test
stc
inc
loop
dec
es
shll
out
in
jbe
aam
pop
stos
xchg
pusha
and
out
mov
push
add
xchg
nop
mov
in
fistps
les
loope
cmp
pop
aas
add
repz
dec
jo
test
fdivs
sahf
push
out
lods
lock
xchg
dec
jns
roll
gs
dec
test
xor
stos
loop
aam
rol
jmp
in
in
loopne
adc
cmp
and
push
mov
push
jl
fdivs
xor
clc
xchg
mov
mov
dec
gs
mov
or
xor
or
mov
adcl
aad
pushf
arpl
pop
cmp
out
mov
sub
jecxz
mov
out
xor
aam
mov
dec
shll
lds
rorl
jl
push
cmp
add
mulb
pop
imul
imul
xor
cmovne
ret
jl
lods
mov
sbb
subl
leave
xchg
sbb
leave
sarb
mov
ss
pop
dec
sbb
je
in
mov
cmp
add
jp
and
mov
shl
push
in
ja
fistl
sarl
inc
or
loope
ss
lods
pop
insb
ret
sub
out
lds
sbb
sbb
jecxz
and
add
pop
ret
jo
add
call
inc
bound
mov
cmp
loope
aad
push
pop
sti
inc
sti
shr
jo
dec
in
rol
loope
out
mov
adc
iret
lahf
lods
mov
test
int
xor
push
enter
sbb
arpl
call
sub
ja
inc
test
sub
sbb
mov
fisttpll
mulps
xor
sbbb
lock
adc
mov
popf
sub
fcompl
fnstenv
cs
add
test
fnstsw
ja
jne
jecxz
fiadds
xchg
idivl
clc
movsl
pop
out
sub
ds
ret
push
jo
cmc
sub
loope
out
mov
add
pop
push
test
pop
pop
inc
mov
cmc
lret
xlat
es
cli
xchg
in
into
pusha
jg
xchg
test
fisubl
fmull
push
into
pop
pop
movsb
adc
test
iret
es
mov
lods
dec
xorb
jo
int3
ret
xor
pop
movsb
imul
lret
js
mov
test
fisubrl
test
in
push
or
xor
lret
and
lret
cwtl
cld
dec
ja
push
adc
xchg
mov
mov
jl
clc
stos
and
push
sub
les
daa
xchg
mov
cltd
pop
incl
mov
sarl
pop
mov
clc
cli
jle
cmp
xchg
or
or
insl
mov
dec
rorb
testl
aad
cmp
dec
jb
pushl
and
adc
outsb
mov
fiaddl
xor
lock
repnz
dec
lock
add
and
mov
loopne
ret
bound
pop
jmp
js
les
inc
fcomip
subb
or
push
in
push
daa
pop
cmc
aaa
mov
jl
rcrb
xsha1
cmpsb
int
fucom
and
sub
imul
test
out
jnp
xchg
dec
sbb
jle
popf
cmp
lods
mov
mov
fdivrl
adc
rol
mov
ds
aas
xchg
xchg
add
mov
sbb
inc
std
js
push
push
dec
push
jb
sbbl
or
dec
in
sub
or
add
lock
and
imul
les
imull
mov
jnp
push
push
ficoml
mov
inc
or
add
sbb
cmc
and
call
cltd
lret
xchg
cmc
cmc
jb
rcrl
in
pushf
dec
enter
jmp
sub
pop
adc
add
mov
pop
lock
add
cmpsl
sbb
sbb
xchg
mov
lahf
ds
leave
imul
push
xchg
sub
cld
lcall
jne
test
pop
mov
add
in
frstor
xchg
dec
fwait
ja
insl
rcrb
imul
mov
jle
mov
push
pushf
movsl
pop
cmp
sub
sub
xchg
mov
inc
pusha
repz
and
adc
cltd
pop
jbe
popa
or
or
pop
call
and
std
mov
jmp
int
mov
xor
lahf
out
lret
movsl
jg
in
stc
out
sarb
jne
stos
imul
sbb
dec
ret
jg
push
ficompl
jo
insl
sarb
dec
pop
dec
sbb
scas
outsl
xlat
or
mov
loop
push
mov
aam
negl
sbb
xlat
push
jno
push
pop
dec
sahf
test
stos
in
popf
cmc
and
int
inc
xchg
inc
inc
add
enter
cmp
sub
cltd
mov
inc
push
inc
dec
mov
mov
push
sub
inc
xor
fwait
xchg
push
loopne
cmpb
mov
outsl
test
push
fcomi
pop
mov
push
jmp
lcall
mov
fmuls
out
ret
shll
mov
icebp
inc
test
jecxz
pop
lock
pop
add
in
push
aas
gs
mov
xchg
sub
fwait
test
rcrl
test
or
or
push
jecxz
cmp
pop
incl
pusha
sbb
push
dec
movsw
cmp
jno
in
xor
sub
ds
push
sbb
pop
adc
ss
xchg
std
sbb
mov
dec
shrl
add
js
popa
stos
addr16
xor
jno
clc
dec
out
pop
sub
dec
sahf
lock
xchg
int
int3
ljmp
fcoml
xchg
lods
mov
mov
sbb
mov
sub
add
aas
mov
lds
or
roll
sbb
xor
fwait
xchg
js
mov
cmp
or
push
add
xor
popf
scas
pop
cmp
out
xor
adc
xor
faddl
lret
cmpl
mov
jne
cwtl
mov
shlb
mov
pop
and
inc
into
in
jae
ficoml
add
adc
test
jno
xchg
sub
jg
out
andb
fwait
mov
cmp
adc
movsl
jae
add
and
imul
ja
lret
in
pop
pusha
push
fcoml
out
pushf
hlt
es
add
push
mov
ret
in
out
data16
inc
xchg
out
pusha
insb
hlt
aaa
mov
push
dec
test
or
cmp
lods
mov
out
jge
mov
xchg
sub
bnd
and
es
stos
push
push
push
lods
push
scas
dec
rcll
jno
out
nop
and
jns
icebp
mov
iret
insb
or
inc
jmp
movsl
add
clc
xor
sub
sub
rcl
ret
xchg
lock
mov
push
outsb
push
xor
push
mov
sti
aaa
pop
or
mov
loopne
gs
sub
daa
sbb
scas
xchg
jnp
dec
mov
out
outsb
inc
fs
ficompl
sbb
sbb
add
xchg
sub
xchg
xor
add
jo
add
addr16
jg
xchg
pop
mov
mov
xor
inc
mov
daa
add
inc
hlt
int
in
mov
xchg
mov
bound
sbb
push
addl
push
popf
and
stos
and
std
push
push
mov
add
adc
repnz
ss
jae
repz
rorl
adc
jle
dec
jle
mov
jp
cli
ss
imul
inc
add
int3
mov
pop
and
in
adc
popf
xchg
sub
xchg
popa
mov
cmpl
sahf
mov
ds
sarb
aam
sbb
cmc
outsl
add
mov
test
adc
dec
repnz
xor
mov
hlt
pop
decb
das
in
inc
pop
push
insl
les
leave
fnstcw
push
pop
mov
cmp
sub
cmp
xor
cmp
push
pop
xacquire
incl
push
jp
mov
push
loopne
test
xchg
lods
test
adc
repz
pop
cmc
pop
mov
es
scas
and
ror
sbb
adc
lret
push
ss
hlt
sbb
mov
mov
scas
divb
jmp
into
push
or
enter
int
aaa
or
dec
xor
scas
and
adc
push
mov
arpl
push
jb
xor
je
movsl
push
dec
sahf
mov
rcll
xor
xchg
sub
sbb
mov
inc
adc
aaa
pop
loope
ja
push
test
xchg
pop
je
shrb
sub
enter
mov
or
test
or
jle
test
mov
xchg
in
jae
divb
je
fwait
stc
aas
xchg
scas
mov
imul
stos
jl
jl
inc
inc
leave
mov
add
push
stc
dec
mov
lcall
into
ja
ss
mov
push
gs
jp
cmp
xchg
jecxz
movsb
or
stos
fwait
xor
push
lods
jne
orb
inc
shlb
xchg
lret
fwait
or
xor
jbe
mov
mov
dec
cmp
imull
sbb
sbb
js
outsl
sub
insl
inc
dec
xchg
mov
lods
call
scas
fwait
int3
mov
jp
push
in
subl
sbb
cltd
data16
addl
std
sbb
mov
out
xchg
push
das
arpl
lcall
gs
test
push
cmp
mov
lret
test
and
scas
gs
pushf
mov
hlt
sub
outsb
pop
adc
dec
mov
sub
adc
cwtl
push
mov
out
lcall
icebp
mov
into
xor
mov
ja
jp
mov
xchg
mov
lcall
pusha
into
xchg
add
inc
push
lods
mov
fwait
xchg
xor
rclb
lods
add
mov
cmp
xor
loopne
loope
jle
iret
sub
test
cmp
fs
xchg
ds
fs
enter
xchg
into
adc
lahf
call
xchg
jmp
ret
call
int3
hlt
adc
je
les
dec
mov
mov
mov
test
mov
mov
add
or
push
call
or
dec
insl
xchg
pop
xchg
sbb
or
aas
call
push
lods
fwait
test
ret
sub
orb
pusha
cmp
cwtl
and
mov
divb
dec
cmp
push
out
jo
lods
int3
mov
mov
pusha
jbe
in
jle
xor
and
daa
clc
and
mov
fs
mov
add
fsubr
pop
stos
cmp
dec
scas
inc
jno
ds
mov
jmp
or
add
out
sub
lds
mov
call
sbbb
or
cltd
xor
icebp
mov
xor
jge
xchg
cmp
push
cs
adc
xor
mov
cmp
pushf
xchg
mov
cmpsl
das
out
dec
enter
frstor
aas
push
push
dec
popa
cmp
and
jmp
mov
lahf
cmpsl
lea
lahf
test
fs
and
andb
cmp
xchg
insl
lds
hlt
add
push
out
sub
push
stos
mov
add
or
jno
dec
outsb
add
jns
imul
add
in
mov
pop
fcmove
in
sbb
dec
mov
in
mov
ret
lahf
scas
jg
push
test
xorl
cmp
andb
inc
fdivrl
ss
testb
insb
movsb
xchg
dec
push
aas
jmp
aad
ret
xchg
xchg
jb
icebp
mov
push
mov
push
jl
pop
add
mov
fisubs
dec
add
ja
int
pushf
fwait
push
or
int
mov
das
xchg
inc
jp
or
xor
xchg
push
cltd
mov
popf
jne
cmpsl
and
in
insl
mov
pusha
mov
in
shlb
xor
pop
and
push
fs
loop
sti
rcr
mov
mov
push
js
loope
mov
mov
pop
into
orb
es
cmc
xchg
test
sbb
leave
lahf
leave
rorl
insl
pop
lret
mov
dec
and
pop
and
dec
lock
test
xor
and
inc
mov
adc
adc
jns
add
inc
daa
loopne
sbbb
das
repnz
mov
pop
dec
movsl
ret
jge
cmc
shll
push
sbb
mov
arpl
iret
xchg
ret
mov
and
fildl
adc
in
mov
jmp
cld
pop
push
mov
cmp
inc
aam
loop
in
sbb
pop
mov
push
mov
lods
or
movsl
scas
sbb
movsl
push
lahf
pop
mov
jno
and
xchg
jle
jb
ljmp
aad
int
dec
pushf
adc
lret
xchg
cmc
rcrl
inc
mov
xor
scas
mov
movsl
paddsb
lret
mov
jp
hlt
fwait
mov
movsl
and
in
and
sti
xchg
dec
xchg
aad
pop
add
lds
subl
fdivrp
leave
pusha
sub
pop
fs
lcall
jmp
movsb
imul
std
les
cs
inc
fcompl
fs
adc
pop
call
push
push
fwait
dec
test
add
adc
cmpsb
or
loop
add
jl
cmp
lret
dec
sub
ret
sub
fcompl
out
jecxz
fstps
mov
ds
arpl
mov
fmuls
dec
bound
jno
pop
xchg
sub
lcall
sub
movsl
add
nop
sbb
push
mul
sbb
out
mov
inc
cmp
xchg
fwait
add
sbb
adc
bound
pop
in
jb
cmp
aam
cmp
mov
pop
hlt
push
dec
adc
add
loop
adc
xchg
push
sub
icebp
pop
mov
inc
xor
jae
clc
cmp
hlt
sbb
and
lahf
ss
push
test
nop
inc
xchg
std
rorl
sahf
push
or
lret
movl
mov
inc
xor
outsb
int
sbb
push
mov
mov
pop
in
and
xchg
into
pop
sbb
push
push
shlb
xlat
jbe
lds
out
mov
jo
mov
and
dec
out
jl
stos
jge
dec
sub
dec
xor
push
outsb
mov
test
aas
or
mov
jbe
mov
ljmp
xor
jbe
vcomiss
rcll
push
jnp
xchg
dec
nop
sbb
adc
fcompl
xor
pop
inc
jl
cld
jp
jns
push
cmpsl
jle
aas
decb
adc
call
inc
xchg
test
dec
cmp
test
inc
pushf
dec
aaa
or
mov
test
dec
in
ds
aaa
dec
push
mov
add
addr16
movsb
cmp
cmp
add
inc
stos
mov
test
cltd
shl
pop
fistpll
idivb
sahf
add
insb
push
add
lret
outsb
sub
test
dec
pop
scas
lcall
arpl
addr16
or
ret
mov
mov
mov
fnstcw
mov
gs
aaa
and
pop
imul
jg
sub
pop
push
sti
xchg
inc
mov
cwtl
mov
add
in
and
add
daa
outsl
mov
dec
mov
mov
adc
mov
addr16
push
or
or
mov
sub
lds
pop
inc
clc
dec
xchg
add
or
dec
add
in
mov
sub
cmp
dec
adc
addl
xor
test
sub
or
mov
jg
xchg
insb
fs
jne
add
out
xchg
adc
cltd
xor
mov
cltd
pushf
in
test
adc
fisubrs
xchg
movsl
test
mov
icebp
xchg
jnp
imul
faddl
hlt
or
or
ljmp
cld
cmp
pop
and
rep
mov
stos
add
scas
out
xchg
xchg
in
imul
adc
xor
mov
xchg
sub
xor
repz
ss
insl
sbb
mov
or
pop
dec
insb
mov
popf
xor
push
mov
dec
daa
and
arpl
sahf
scas
or
sbb
pop
dec
and
aaa
sub
neg
pop
in
mov
xchg
lahf
sahf
pop
mov
pop
lret
fcmovbe
mov
mov
inc
jecxz
add
leave
xchg
sbb
xchg
sub
js
or
out
pop
mov
mov
dec
loop
sahf
pop
scas
std
aaa
and
push
push
add
xor
test
lcall
pusha
stos
in
or
fbld
xrelease
leave
repz
xor
stos
push
cwtl
adc
jno
divl
fstp
data16
cltd
pop
les
jl
sub
pop
ret
add
push
daa
insl
jge
xchg
ljmp
adc
and
xor
lahf
andl
add
outsl
gs
sub
cwtl
lods
std
or
stos
out
and
xchg
adc
xchg
push
and
call
dec
jl
cmpsb
sub
cltd
mov
mov
sarb
and
mov
insl
push
enter
mov
xchg
fildll
dec
or
sbb
gs
repz
add
pop
adc
das
jo
repnz
push
xor
aad
aaa
aam
push
or
sbb
lea
xor
xchg
inc
add
sti
jbe
jbe
subb
in
and
je
mov
mov
and
jb
mov
adc
dec
shlb
jnp
xor
pop
add
sub
xor
call
fdivrl
sub
xor
add
adc
cmp
lahf
xor
xchg
mov
adcl
xor
jg
movsl
cs
pop
shrl
and
add
jmp
pop
xor
jns
xchg
adc
adc
xchg
jmp
jbe
dec
bound
pop
sbb
rcrb
push
movsl
dec
repz
mov
sub
cmc
mov
push
and
mov
dec
jle
mov
push
mov
imul
jbe
mov
pop
insb
adc
insl
mov
adc
sbb
dec
xchg
idivl
push
aam
and
push
pop
inc
lods
call
or
lods
sub
mov
pop
xchg
dec
or
inc
xlat
mov
roll
fsub
mov
bnd
cmp
negl
inc
sbb
adc
aad
lret
jmp
les
lds
mov
shr
add
aas
ret
push
icebp
arpl
cmp
or
push
cli
daa
outsl
aaa
int3
sub
movsl
in
mov
adc
cwtl
bound
ds
jb
and
stc
rcll
xchg
mov
pop
push
mov
and
movsl
push
incl
test
ljmp
mov
ret
lret
sub
enter
pop
repnz
and
pusha
inc
ret
add
jne
test
sbb
mov
xchg
push
les
or
idivb
or
dec
cmp
cli
add
out
stos
add
dec
hlt
mov
mov
sub
inc
pusha
test
xchg
jb
jge
rcrb
mov
mov
inc
repz
repz
hlt
sub
adcb
aad
hlt
push
adc
mov
fstpl
pop
mov
jb
mov
adc
or
rcrl
cwtl
xchg
loope
in
fwait
mov
out
xchg
popa
clc
ret
fiadds
int
mov
or
inc
mov
adc
aam
sub
or
cltd
ja
pop
xor
push
data16
xchg
cwtl
pop
out
jae
xor
and
pushf
adc
xchg
mov
fildll
push
shlb
add
pop
cmp
inc
test
mov
frstor
vhaddpd
mov
sbb
dec
leave
or
pop
mov
sbb
adc
and
mov
mov
jno
xchg
mov
clc
inc
data16
push
in
mov
mov
pop
inc
mov
ds
dec
mov
fwait
mov
xor
out
add
xor
xor
test
cmp
cmc
mov
push
jb
push
and
cli
sti
inc
jbe
dec
and
fldcw
sti
outsb
jp
xchg
ret
sbb
sub
mov
lods
popf
pop
icebp
mov
imul
mov
mov
aam
hlt
mov
stos
ja
in
xchg
xchg
mov
ret
add
add
add
and
scas
mov
sti
flds
aam
xor
push
push
test
outsb
nop
inc
xlat
add
out
add
mov
je
insb
xor
lahf
and
or
and
rcrb
mov
leave
pop
mov
mov
jae
jl
insb
insl
inc
addr16
lcall
pop
dec
cmc
and
sbb
out
sbb
es
out
xor
iret
sbb
jp
sbb
push
fcoms
insb
into
push
mov
jmp
in
adc
and
lcall
push
cltd
jbe
pop
loopne
test
mov
sub
int
nop
adc
jo
mov
fwait
adc
stos
xchg
sahf
push
mov
mov
sub
push
pop
dec
ss
jle
sbb
cld
dec
lock
les
inc
jb
pop
mov
ja
and
shrl
pop
rorb
cmp
or
js
dec
push
out
pop
adcl
cwtl
fwait
mov
adc
cmpsl
inc
fstps
loope
ljmp
or
cs
in
cltd
int3
rorb
jae
pop
notb
cmp
cmp
nop
mov
lods
inc
push
sarl
mov
dec
test
mov
push
jle
addr16
mov
lods
aas
std
or
lock
mov
ds
dec
hlt
lret
push
jmp
push
pop
jmp
jecxz
fisubs
repnz
jae
aad
xor
imul
loop
icebp
repnz
nop
jl
push
das
ret
idivl
les
or
and
iret
scas
nop
imul
int3
iret
pop
dec
dec
rcll
cmp
cmpsb
mov
jae
stc
cmp
push
mov
jb
iret
test
fldl
add
aas
loop
sbb
jmp
cmpsb
xchg
add
xchg
or
loope
cmp
xchg
cmp
test
add
pop
mov
pop
hlt
cmp
inc
and
push
fs
xchg
gs
cwtl
imul
mov
or
jle
std
push
cmpsb
xchg
adc
pop
jle
rcll
pop
lret
pop
sub
and
insl
mov
popa
xor
and
sub
int3
cmp
rclb
testl
sub
shlb
mov
or
scas
out
repnz
call
fimull
dec
pop
ljmp
fidivl
xor
dec
xchg
bound
lcall
pop
push
fildl
test
pop
mov
lret
pop
sub
sub
dec
mov
fidivs
call
xor
fxch
pusha
fs
popf
outsl
dec
adcl
lea
add
mov
out
add
repz
jecxz
cld
outsl
add
mov
pop
fs
nop
imul
or
and
jge
data16
push
or
test
and
dec
lock
mull
mov
stc
loopne
mov
aad
mov
jns
mov
inc
add
inc
mov
and
jb
mov
jae
mov
pop
sbb
loopne
out
mov
or
and
inc
ss
jnp
orl
mov
outsb
or
mov
imull
xor
push
inc
mov
test
xor
dec
lahf
pop
dec
andb
add
xor
push
mov
test
pop
in
insl
test
pusha
mov
pusha
lcall
and
push
or
add
add
movsl
cmp
clc
rclb
mov
gs
mov
jge
jns
jnp
mov
lea
add
shrl
mov
add
out
mov
rcll
mov
hlt
js
and
push
movsl
aaa
sbb
fstps
mov
daa
mov
ja
jno
adc
pushf
les
jo
dec
hlt
lret
imul
inc
xor
aaa
idivb
lcall
pop
inc
mov
nop
add
leave
imul
fdivrs
pushf
adc
jns
incl
aam
add
add
scas
mov
mov
popa
push
inc
fildl
cli
or
fucomip
test
out
add
int3
addr16
out
add
sbb
dec
ds
inc
icebp
sarl
jne
lea
out
mov
and
xchg
xor
and
stos
in
push
out
mov
insl
sub
sti
aas
sub
pop
add
dec
dec
fisttpl
outsb
aad
loopne
nop
daa
dec
aam
loopne
push
sub
cmpsl
fmuls
mov
jae
sub
aaa
lret
es
lock
xchg
push
scas
cli
movsl
sbb
cmp
and
cmp
adc
pop
push
and
xor
dec
stos
in
push
jecxz
sbb
cmp
movsb
in
aam
jle
cmpsb
in
adc
mov
xlat
xchg
mov
inc
or
sbb
adc
cli
aam
mov
popa
js
push
lea
pop
movsb
add
xor
and
push
or
stc
pop
popf
or
into
jbe
insb
movups
lea
fcoml
sbb
sub
jnp
mov
imul
mov
jp
js
push
and
xchg
mov
jg
in
leave
out
ret
fwait
ljmp
mov
fldl2t
ret
dec
cwtl
out
cs
lock
add
std
mov
in
aam
test
cs
in
push
adc
inc
mov
ja
popf
xor
xor
sub
icebp
adc
mov
movsb
add
in
mov
in
je
sub
test
lahf
xlat
shll
pop
aad
iret
in
jo
in
and
sbb
lds
and
add
arpl
cmc
fnstsw
dec
decl
jl
mov
xchg
fdivl
mov
mulb
gs
sbb
pop
cmp
mov
inc
hlt
lcall
movsl
xorl
and
sub
in
scas
cli
shll
pop
imul
jl
pop
rolb
inc
out
js
mov
out
inc
dec
es
inc
xchg
test
pop
je
push
xchg
adcl
hlt
movsl
sbb
ja
add
adcl
push
mov
mov
ja
aam
rep
push
jle
sbb
clc
jmp
bnd
mov
sub
mov
ss
mov
push
je
sbbl
shrl
aaa
pop
iret
je
jne
insl
pop
lret
bound
imul
mov
cmove
inc
sti
mov
dec
jle
xor
lahf
hlt
lret
dec
in
mov
ja
loop
rorl
fistl
std
pop
mov
or
push
push
adc
adc
sbb
notl
xor
nop
jmp
aad
mov
into
pop
cmp
jge
push
push
or
push
sbb
xor
inc
sbb
call
dec
jbe
or
loop
pop
cmp
and
jb
mov
sub
cmc
and
add
adc
mov
mov
mov
sbb
stos
fdivr
mov
in
test
xor
inc
add
es
icebp
out
xchg
in
lret
or
mov
sarb
lret
into
pop
adc
insb
mov
cli
mov
xchg
sub
test
fnstenv
or
push
fprem1
sahf
or
rclb
cld
pop
sbb
loopne
add
ja
sarl
mov
in
xor
addr16
lret
push
outsl
sbb
push
dec
icebp
repnz
xor
jns
imul
mov
movb
popf
push
out
nop
daa
and
sub
imul
js
xchg
xchg
pop
mov
nopl
xchg
and
dec
and
mov
pop
sbb
cmp
mulb
dec
add
das
xchg
push
nop
popf
xlat
outsb
into
scas
mov
push
and
outsl
mov
mov
mov
fldt
mov
popa
sti
aam
or
push
adc
enter
mov
xlat
mov
push
aad
xchg
adc
sbb
jle
adc
in
sub
pop
sbb
sbb
pop
or
loope
mov
jne
inc
pop
cmp
push
cs
movsb
mov
adc
addl
je
jb
ljmp
jg
or
lods
fldl
fldl
inc
fidivs
jp
inc
lods
push
mov
insl
movsl
adc
push
shlb
xor
jne
mov
iret
cmp
jle
dec
fdivrl
cmpsb
lcall
icebp
add
aas
mull
sub
ja
nop
daa
pop
cwtl
pop
pusha
inc
dec
aam
mov
repz
lcall
test
mov
mov
sbb
and
cmp
in
jns
int
xchg
xchg
mov
enter
fcomp
lcall
cs
and
push
xor
push
arpl
lea
xor
out
or
inc
jle
or
in
dec
ficompl
icebp
movsl
daa
lods
inc
sti
mov
fstps
xor
pop
xor
dec
jp
cmpsl
cmc
inc
jne
enter
outsl
imul
mov
dec
adc
nop
outsl
sbb
ret
stos
icebp
jo
int
adc
icebp
inc
rcll
dec
or
orl
add
sub
fbld
mov
out
jno
in
les
aaa
push
andl
out
pop
ret
sbb
xor
repz
das
mov
cmpsl
aaa
std
sar
add
mov
dec
sahf
cmp
fsubp
sub
iret
dec
cmc
dec
cmc
adc
sti
or
lret
push
push
cmp
push
lahf
sbb
sbb
ljmp
fidivrs
add
mov
orb
push
ss
cmc
mov
cmp
lea
mov
push
sub
ss
dec
cmp
or
das
xchg
fnstsw
xchg
mov
push
adcb
cmpsl
push
push
inc
xor
std
inc
aas
jmp
xor
movsl
clc
push
push
push
push
jno
andl
rclb
mov
pop
imul
int
aam
cmpsl
xlat
mov
sub
mov
and
clc
lcall
insb
mov
push
inc
faddp
adc
inc
mov
adc
xor
xchg
adc
mov
sub
mov
out
xchg
add
and
iret
pop
out
xchg
and
inc
sbb
mov
pop
pop
js
push
jle
xchg
sbb
cmc
sahf
imul
int
cwtl
test
ds
pop
sub
enter
or
lret
sbb
push
inc
add
sbb
pop
dec
aas
insl
roll
and
in
movsb
dec
adc
std
sub
shrl
sbb
aad
xor
pop
std
neg
sahf
scas
and
shlb
decb
cltd
inc
sbb
nop
and
cmc
and
fcmovb
in
dec
fldcw
fnstcw
aam
lahf
xchg
mov
pop
adc
das
shlb
xor
dec
xor
mov
lahf
shll
xchg
cwtl
add
push
mov
mov
or
inc
enter
test
inc
popa
sub
and
inc
pusha
out
loop
sbb
cmp
sub
fbstp
xor
in
out
fidivs
inc
xchg
xchg
mov
lcall
test
ficoms
test
lods
xchg
adc
loop
mov
inc
frstor
clc
mov
insl
inc
xor
mov
jns
int
fwait
adc
test
ficoml
iret
jg
push
jmp
pop
push
insl
push
mov
xor
mov
cmp
pop
jno
xchg
inc
sbb
into
data16
hlt
test
mov
aad
nop
pusha
ret
loope
xor
int
aaa
mov
dec
mov
mov
out
pop
jbe
rolb
repnz
lahf
xor
in
xorb
aaa
movsb
mov
imul
xchg
add
cmc
jo
leave
xchg
sub
pop
mull
divb
mov
mov
lds
xchg
xor
cmp
sub
and
out
stos
in
adcb
inc
pop
pop
adc
inc
cmp
sbb
jle
shrl
pop
mov
sub
test
mov
add
lds
mov
dec
mov
pop
mov
or
sub
jne
popf
std
inc
iret
adc
mov
popa
int
and
xchg
outsl
enter
test
push
and
das
jns
push
outsb
fs
and
mov
notl
sbbl
inc
repz
lcall
ds
pusha
inc
lods
testb
stc
xchg
test
mov
fwait
inc
dec
ficomps
and
jbe
int3
sub
scas
inc
push
push
or
mov
fs
dec
addr16
subb
leave
mov
inc
pop
repz
lock
mov
xor
stos
jge
cmp
std
inc
inc
div
jle
jb
dec
sub
push
out
sbb
outsb
movsb
fwait
cmp
jp
mov
adc
inc
fidivs
mov
leave
add
scas
pusha
cmp
sub
repnz
and
inc
inc
int3
test
arpl
cmpsl
inc
and
pop
xchg
andl
push
sub
jne
and
and
rclb
iret
cmp
sbb
rcrl
inc
jbe
dec
repz
cmpsb
aad
std
inc
mov
mov
aas
add
xor
dec
lods
xor
mov
mov
aad
insb
sub
and
lea
fsts
sub
jno
mov
jbe
mov
lea
xchg
bound
push
mov
repz
sbb
shlb
jle
pushf
or
sarl
xchg
inc
xor
test
std
adc
push
lea
mov
aad
sti
inc
ror
in
gs
xor
xchg
pop
push
xor
hlt
cmp
cs
inc
cmc
inc
int
push
jo
fwait
aad
cs
mov
push
mov
loop
out
pusha
xchg
ja
cmc
sbb
jns
test
inc
adc
mov
clc
call
xorl
mov
add
icebp
cmpsl
fwait
push
mov
jno
nop
inc
push
ja
filds
mov
xor
push
inc
fs
scas
inc
gs
jmp
inc
mov
sub
and
outsl
loope
jbe
loop
xchg
inc
xchg
add
das
ljmpw
mov
inc
jge
insl
sub
test
cmp
mov
cmp
mov
add
mov
adc
int3
arpl
negb
sub
pop
shrl
pop
ljmp
icebp
leave
push
stc
mov
cmpsb
mov
test
mov
xchg
daa
gs
out
cmpsb
sbb
xor
inc
and
lcall
pop
cmp
sub
pop
stos
cmp
mov
imul
imul
clc
pop
jb
xchg
fildll
xchg
sbb
stc
out
daa
sbb
pushf
ret
adc
lahf
sti
fwait
mov
fwait
popa
roll
mov
or
bound
test
and
loope
inc
mov
mov
mov
xchg
das
sub
pop
pop
push
fwait
inc
mov
test
imul
ss
xchg
xchg
stc
dec
lock
jne
sbb
rcll
stc
adc
movsb
xchg
xor
jle
aad
rolb
gs
lds
stos
mov
pushf
sbb
push
cmp
test
out
sarb
mov
mov
xchg
dec
xchg
jmp
push
jb
aam
mov
imul
sbb
out
pop
inc
and
enter
xor
dec
jle
mov
push
nop
mov
pop
test
mov
fisubl
rorb
pop
xor
push
jmp
adc
xor
test
and
push
jnp
mov
jne
aaa
pop
add
test
dec
outsl
adc
xchg
inc
fisubrs
int3
gs
lret
mov
icebp
stc
push
adc
test
inc
loopne
xchg
inc
mov
imul
jo
mov
push
mov
and
mov
enter
lea
xchg
outsb
imul
add
int3
and
mov
jmp
call
popf
shlb
sub
out
mov
insb
ret
fdivr
test
cmp
icebp
movsl
push
lock
inc
mov
lahf
sbbl
pop
xor
shll
scas
and
repz
nop
ds
idivb
xchg
mov
or
pop
popa
clc
nop
xor
sub
xor
inc
mov
iret
xchg
sub
movsb
jno
in
ss
xchg
fdivl
push
cmp
cmp
sub
inc
rclb
imul
and
lea
imul
mov
push
sbb
jle
adc
lock
xor
pusha
repnz
dec
or
rcrl
jno
mov
xor
icebp
loope
in
sarb
jo
addb
push
pop
fsub
std
add
mov
jae
fistps
mov
outsl
and
popa
adc
imul
cmc
pop
stc
std
or
addl
jge
lock
mov
mov
mov
push
mov
fisttpl
and
push
ja
ror
cmpsb
xchg
loop
cmp
jl
lret
idivb
adc
int3
mov
loope
pop
and
repnz
lret
jnp
call
or
xor
mov
cmpsb
outsb
dec
ret
mov
push
cwtl
out
pusha
xor
pushf
xor
fsub
xchg
fstpl
fucomp
mov
mov
shl
dec
jno
aaa
add
andl
popa
mov
outsl
jns
leave
sbb
out
icebp
mov
mov
out
shrl
and
popa
shll
insb
lret
ja
adc
stos
in
insb
and
out
inc
mov
daa
jno
jmp
dec
xchg
or
pop
frstor
pop
xchg
mov
gs
inc
pop
cmp
and
xchg
fldl2e
orl
mov
pusha
aas
flds
lahf
push
jmp
sbb
jo
mov
mov
fidivrl
stc
shrl
xchg
pop
push
pop
mov
dec
and
and
push
movsb
fsubl
sub
lods
pusha
mov
cmp
push
push
fnstsw
sbb
push
sbb
jge
int3
outsl
test
insl
mov
inc
jl
lock
clc
sbb
or
push
xor
jbe
ja
mov
adc
xchg
xlat
mov
ret
xor
sahf
aaa
mov
movsb
jne
leave
out
aas
dec
and
test
push
clc
inc
ret
xlat
jno
sub
ja
cmpsb
js
fcoms
mov
bound
icebp
mov
add
cli
cmp
pop
push
cmp
addr16
push
ja
adc
lds
stos
sbbb
jbe
mov
ja
fwait
lea
xchg
sbb
je
cwtl
xlat
das
adc
push
jle
addr16
inc
cld
rolb
add
shll
outsl
cs
mov
and
pop
sub
dec
sbb
outsb
dec
mov
xor
out
jae
cmp
in
inc
push
sub
jp
data16
mov
mov
andb
cmp
pushf
and
sti
sbb
out
test
cmpsb
les
lret
xor
xorb
or
loopne
adc
je
mov
cmp
movsl
subb
lock
push
sbb
lds
fldcw
ja
or
mov
sub
inc
nop
jne
daa
out
loope
xchg
cmpsl
imul
lods
dec
pop
test
test
outsb
and
mov
dec
adc
jne
or
loop
jmp
cld
jbe
in
inc
ss
xchg
pop
cmpsb
cmp
sti
push
enter
xchg
or
or
sbb
xor
push
jge
inc
pop
fsubrs
pop
jb
into
sub
stc
inc
es
xor
xchg
pop
jb
cmp
jnp
arpl
cmc
inc
or
mov
push
shll
xchg
sbb
and
imul
addr16
adc
xor
and
inc
fdivp
cmpsb
sti
xchg
dec
cmp
outsb
lds
cmp
aaa
int
add
adc
push
out
aaa
les
in
repnz
scas
and
jo
xor
outsb
fstp
push
test
sahf
xchg
sbb
jge
adc
outsl
inc
pop
add
int
lcall
or
jl
sbb
sbb
inc
pop
pop
inc
enter
lcall
mov
adc
or
cmp
push
rcrb
sarb
sbb
jbe
rcrl
test
and
cmc
adc
fistpl
push
jb
les
js
sahf
cs
outsb
lock
lods
fdivrs
or
pop
out
out
and
inc
push
mov
ds
insl
add
cmpsb
cli
jb
sbb
lea
in
mov
or
pop
int3
in
mov
cmp
pop
cmp
mov
mov
and
add
adc
roll
popl
inc
nop
push
xor
mov
jge
stos
pop
inc
fimuls
inc
negl
out
adcl
lahf
out
fs
ja
movsl
test
mov
mov
mov
mov
mov
fbld
inc
jle
rcrl
rcrb
popf
aad
adc
int
sub
push
jo
cmp
ljmp
push
inc
hlt
inc
test
jg
sbb
push
jbe
popa
adc
mov
mov
jb
imul
xchg
jae
add
lock
in
roll
aam
inc
ljmp
outsb
mov
enter
repz
xlat
rcrl
xlat
mov
jmp
cltd
std
sarb
mov
mov
adc
mov
mov
cmp
sbb
add
jle
xlat
pop
lods
fiadds
daa
ja
jo
jl
int3
mov
push
addr16
cmp
js
call
cmp
insl
lods
mov
ficoms
push
jno
cli
mov
lods
mov
fwait
stos
outsl
adc
dec
and
aad
lret
scas
imul
xchg
in
xchg
movsb
ss
sbbb
je
sbb
xorb
js
pop
addl
daa
jne
jns
xorb
cmp
or
mov
push
fdivl
scas
mov
loope
inc
pop
adc
and
insl
jge
jl
rorl
rcll
aaa
or
mov
inc
xchg
adc
dec
jge
fstpt
in
jmp
fsub
stos
cld
in
mov
scas
push
xor
lods
idivl
fisubrl
in
mov
cmpsb
or
mov
and
or
ret
cmp
dec
mov
mov
dec
sbb
imul
pop
xchg
and
cli
xchg
cmp
inc
lret
jno
cmc
ja
jg
or
bound
mov
cli
repnz
lret
mov
sbb
dec
adc
push
mov
dec
repz
jbe
pop
int
lea
rcrl
add
jae
fbld
sbb
mov
jmp
movsb
push
sti
int
inc
push
das
mov
add
or
mov
fildl
sbb
push
or
jne
xchg
sub
pop
push
jge
negl
and
pusha
mov
rcrl
scas
or
cmp
scas
xlat
mov
arpl
inc
data16
jb
lret
mov
imul
adc
mov
push
fisttpll
das
loope
imul
movsb
pop
es
jb
adc
mov
cmpsl
call
adc
fisubrl
mov
leave
subl
pushf
hlt
ror
cltd
sub
jmp
or
jnp
adcl
lcall
sub
push
stc
sbb
push
mov
fcomps
iret
add
cmp
or
sbb
inc
push
jne
popa
in
push
hlt
ss
push
mov
xchg
inc
jg
out
push
sub
lods
pop
mov
lods
in
dec
dec
shl
push
pop
imulb
std
pop
xor
pushf
dec
mov
in
xchg
and
push
push
test
in
ret
imul
jne
movsl
cmp
sti
jbe
and
jp
jne
stos
mov
lret
inc
push
into
mov
loopne
arpl
cmp
push
out
xchg
dec
mov
mov
push
cmpl
dec
popa
clc
es
add
jbe
sub
dec
sti
fbstp
adc
sub
pop
mov
pop
loope
lock
out
xchg
test
int
or
dec
call
into
push
cwtl
sub
lret
push
call
mov
imul
pop
jae
pop
push
push
daa
inc
mov
add
sbb
das
jne
mov
sahf
rcrb
adc
pop
sbb
lds
mulb
in
jecxz
pop
jns
sti
pop
and
je
sahf
inc
rclb
pop
cltd
iret
fidivs
out
inc
stos
fldt
test
mov
fstl
sub
shrl
cmp
es
cmp
jnp
push
adc
push
lret
push
fldcw
outsb
data16
addl
pop
xchg
arpl
adc
fsubl
jbe
push
push
adc
push
xchg
xchg
and
lret
mov
ret
clc
push
inc
stos
and
and
inc
push
arpl
mov
push
cmp
fbstp
dec
adc
push
or
scas
cwtl
dec
aam
cmpsl
cmpsl
or
test
popa
loope
movsl
ljmp
aaa
imull
insb
sarb
inc
add
mov
aam
stos
mov
call
jb
jae
xor
fildl
inc
push
loope
stc
add
mov
and
mov
negl
cmp
or
adc
sub
int3
xor
sbb
mov
div
test
sub
pusha
adcb
push
ljmp
jno
or
test
adc
aad
xor
adc
jg
mov
pop
mov
in
add
gs
cmp
mov
mov
loopne
xor
xchg
lret
enter
and
and
ja
push
jbe
call
movsl
cmp
sbb
ss
in
push
push
add
sub
lea
sub
ss
scas
inc
jne
jbe
aam
xchg
imul
pop
mov
mov
lods
xor
into
lahf
ljmp
mov
scas
cmpsl
sub
call
rorb
mov
clc
dec
jecxz
loop
fcom
rolb
pop
mov
enter
scas
mov
lods
cmp
cwtl
das
ja
in
shlb
scas
sbb
pop
repz
ficompl
cmc
add
scas
adc
sbb
mov
pop
jmp
or
cmp
pop
xor
rorb
shll
aad
pop
pop
lods
clc
push
in
loope
pop
mov
jno
imul
cmp
jo
es
add
int3
add
xchg
pop
adc
lahf
sub
push
lock
push
pop
cltd
jo
mov
test
lods
or
ja
xor
push
aas
fidivrs
or
sub
dec
hlt
cmpsl
push
inc
mov
mov
repz
adc
xchg
sbb
add
sub
fbld
testl
shll
sti
jge
sti
cmpsl
ds
cltd
or
repz
xchg
fucomi
xchg
mov
les
popa
mov
sub
mov
test
jo
and
fsubrl
xchg
dec
je
push
mov
jle
test
mov
mov
aaa
dec
es
inc
stos
enter
iret
mov
adc
pop
out
jb
rolb
push
mov
xor
fists
jbe
mov
inc
out
jae
pop
xor
xchg
jmp
cmp
sub
movsl
jo
adc
mov
mov
movsl
sbb
shl
leave
lods
fmul
adc
inc
push
repz
pop
cmpsb
push
fprem
jecxz
inc
jge
aam
in
cmp
push
push
push
insb
mov
or
add
dec
mov
hlt
stos
lret
lret
sub
xor
fiaddl
movsb
stc
adc
testb
aaa
or
cmp
xchg
add
ljmp
push
lret
xor
inc
cltd
fists
mov
push
mov
call
mov
shrb
movsl
icebp
push
mov
mov
sbb
aaa
lret
add
or
xchg
jge
adc
mov
sbb
adc
cmp
test
clc
addr16
clc
sub
leave
jle
push
lcall
int
cmc
push
sti
push
jmp
test
inc
dec
fisttpll
ljmp
mov
dec
movsb
sub
inc
aaa
shlb
add
in
mov
int
or
inc
dec
or
mov
push
xchg
adc
inc
mov
adc
lods
pusha
in
xchg
jmp
pop
push
sti
rcrl
addr16
mov
imul
jb
mov
or
mov
imul
lret
mov
je
or
mov
sub
or
sti
rorb
clc
push
icebp
mov
mov
push
ficomps
mov
mov
cmp
cmp
or
xchg
jle
push
add
test
mov
das
icebp
inc
jns
cmp
dec
xchg
in
cmp
jbe
repz
add
jp
jg
pop
cmpsl
dec
sti
mov
and
in
jge
push
adc
and
mov
popw
in
inc
dec
xchg
lds
mov
rcrl
mov
adc
sbbb
push
andb
daa
je
jnp
add
add
aas
orl
jl
mov
gs
sub
inc
xor
sub
setg
inc
xchg
pop
dec
mov
in
mov
xchg
dec
rcrl
lds
pop
jmp
js
addr16
popa
scas
repz
jecxz
bound
xchg
adc
push
sbb
pop
push
repz
aas
rcll
dec
sub
cltd
fucomip
mov
or
xchg
ja
xor
cmc
call
ja
jb
mov
addr16
jne
lds
and
out
add
dec
push
cmp
xchg
notb
pop
sbbb
mov
push
cmc
popf
shll
mov
ret
lret
insb
inc
jp
xor
dec
ljmp
and
pop
sbb
inc
cltd
push
pusha
and
adc
mov
out
ret
pop
mov
adc
dec
xlat
pop
lahf
cmpsl
and
sub
push
sbb
push
push
cs
mov
js
mov
sahf
loop
adc
out
lahf
mov
dec
repz
aaa
imulb
loopne
notb
dec
rcr
sbb
or
data16
addr16
mov
cmpsl
icebp
push
movsl
loop
jg
roll
dec
adc
ss
push
inc
add
scas
cs
push
jg
dec
jb
idivb
add
lret
inc
push
addb
ljmp
loope
ljmp
fcoms
test
lret
push
mov
adc
jno
stc
je
sbb
mov
std
lea
clc
push
lret
in
push
jmp
sbb
sbb
and
or
xchg
xchg
dec
out
outsl
in
test
out
cltd
loop
aas
mov
mov
xchg
or
and
das
add
dec
inc
sbb
or
test
stos
fldcw
jo
add
sub
add
hlt
into
dec
cmp
xchg
push
xchg
icebp
rorb
mov
sti
out
es
sbb
jg
push
dec
add
in
clc
and
mov
sbb
cmp
andl
into
mov
push
xchg
cmp
push
or
push
cmc
xlat
rcrl
inc
lock
es
in
out
js
or
pop
cmpsb
repz
mov
inc
fwait
inc
movl
pop
in
add
jo
add
mov
test
loop
sbbl
iret
xchg
mov
test
aas
push
inc
xor
test
inc
xor
fldenv
repnz
dec
pop
mov
stos
cwtl
sbb
adc
nop
push
cmp
sub
xor
arpl
sub
in
dec
scas
movb
cwtl
rcl
outsb
out
cltd
push
cmc
aas
add
cmpsl
jmp
fld
and
inc
int3
inc
xlat
push
xchg
filds
jae
mov
loopne
mov
movsb
add
inc
dec
jge
sbb
rorb
ret
rcll
lds
shrl
mov
jne
nop
inc
mull
jno
or
je
push
std
jnp
jmp
sti
pandn
or
cld
push
sarb
xchg
std
sbb
sbb
pop
cmp
sub
inc
lods
or
adc
mov
hlt
push
inc
cltd
mov
mov
cmp
jb
lods
pop
jge
into
lods
jo
fisubrs
mov
xor
gs
sbb
lds
cmp
dec
movsb
les
fisubrl
loopne
pop
fisubl
es
popf
cmpsl
mov
outsl
mov
push
movsl
in
push
roll
xchg
add
mov
gs
pop
jge
sub
add
adc
in
into
mov
lret
jecxz
sub
jns
imul
fsubr
arpl
outsl
hlt
mov
mov
cld
push
scas
cmp
orl
xchg
mov
push
pop
inc
daa
or
push
ljmp
jno
push
insb
aad
and
in
int3
int3
and
hlt
into
or
pop
insl
and
xor
xchg
lds
sahf
cmp
or
jo
push
repnz
sub
lcall
arpl
mov
inc
in
push
dec
les
cld
test
and
outsl
daa
je
jl
orb
out
repnz
test
cmc
jle
add
mov
or
ftst
outsl
loopne
and
mov
cs
jmp
and
stc
icebp
scas
fnstsw
daa
xchg
add
mov
jmp
sahf
in
mov
mov
aam
mov
out
dec
popf
dec
hlt
or
leave
fistl
orb
aas
sbb
mov
sbb
pop
fcompl
pusha
dec
out
mov
cmp
dec
pop
data16
pop
imul
outsb
and
aas
sub
inc
pushf
dec
scas
bound
lods
in
ljmp
out
cmpsl
out
cmpsl
ds
loope
cli
inc
andl
iret
push
add
sti
push
jle
cli
rorl
xchg
int
add
in
mov
scas
xor
or
dec
out
adc
jnp
in
push
xor
fisubs
in
xchg
adc
mov
test
dec
mov
out
add
rcl
loop
pop
dec
mov
jl
xchg
cmpsl
xchg
mov
sbb
mov
movsb
roll
jne
loope
test
jg
repz
out
int3
mov
jmp
xor
adc
jb
popa
fs
add
in
cmc
xchg
out
mov
inc
push
insb
fwait
cmp
cmpsl
lods
or
movsl
xor
mov
lret
sbb
mov
adc
lret
ret
rol
aas
imul
pop
leave
jp
pop
lods
jmp
mov
lahf
dec
dec
scas
inc
cmp
push
inc
xor
inc
aam
std
mov
leave
xor
inc
inc
sub
addl
popa
xor
pop
add
scas
sub
jno
dec
cltd
jno
add
in
inc
fnstenv
push
add
cli
repz
fists
xor
inc
xor
or
ret
mov
movsl
stos
outsb
cwtl
outsl
add
rep
fstl
mov
cltd
nop
and
and
jne
gs
std
decl
or
and
cs
addb
cmp
mov
xchg
or
out
es
cmp
jns
push
icebp
aad
mov
pop
jo
pop
push
sub
jbe
jo
adc
inc
lret
mov
loope
xchg
lods
dec
imul
aas
push
sarb
inc
rcl
movsb
out
movsl
iret
pop
adc
clc
dec
push
out
shl
cli
test
and
loop
nop
negl
adc
push
in
jge
mov
aaa
fdivp
cmpsb
adc
xor
gs
sub
fisubrl
ret
mov
mov
adc
or
cs
cltd
mov
pop
les
jbe
jbe
pushf
mov
push
xchg
mov
xchg
mov
enter
nop
loopne
sarl
mov
add
pop
dec
jns
lahf
xor
mov
dec
jge
fwait
data16
lret
mov
loopne
cld
pop
cmpsb
or
mov
idivb
jbe
lcall
aam
std
mov
popf
out
sub
lods
pop
sarl
mov
mov
push
pop
hlt
imul
lods
fsubr
sbb
jae
sbb
sbb
cwtl
add
les
out
mov
loope
dec
sbb
adc
int3
es
mov
jge
push
fsubl
pop
add
orl
mov
mov
mov
jl
cltd
insb
add
inc
cmc
js
fisttps
xchg
jp
jno
pop
in
sbb
rclb
xor
rorl
cmp
hlt
mov
fwait
bound
or
pusha
stos
xchg
clc
xchg
mov
cmp
insb
insb
add
push
add
sbb
cwtl
bound
pop
aad
push
jo
int3
lret
movsb
jo
mov
xchg
jne
test
imull
push
stos
mov
pushf
push
in
mov
fsub
cmpsl
xchg
mov
rclb
mov
sbb
jns
xor
xchg
jle
nop
fldcw
dec
pop
loope
out
mov
hlt
cmp
and
lea
lea
orb
xchg
test
insl
nop
mov
inc
out
stc
jbe
add
cmc
jnp
mov
call
sbb
adc
scas
mov
repz
aad
int
popl
sbb
mov
das
jmp
push
dec
push
xchg
mov
adc
mov
pop
jbe
mov
arpl
mov
inc
mov
add
shrb
imul
push
mov
inc
loopne
fwait
popa
or
imul
mov
subb
ror
sub
mov
and
pushf
out
and
pop
pop
in
cmp
aad
dec
jb
dec
jmp
cwtl
loopne
out
xor
dec
cwtl
sbb
mov
pop
rcrl
faddl
in
inc
popf
sar
aam
push
call
pop
push
mov
push
mov
dec
mov
and
popf
fstl
push
mov
lret
sbb
xchg
pop
gs
mov
mov
cltd
lret
icebp
call
lods
das
sub
rcr
lods
clc
lahf
push
cld
push
cmp
ja
xchg
xor
inc
stos
and
sub
inc
push
icebp
and
pop
mov
dec
nop
daa
jp
mov
push
nop
fwait
add
xlat
js
popf
pop
add
jne
jnp
lds
cld
imul
push
icebp
frstor
movlps
ret
in
jne
push
dec
pop
sub
cli
in
and
push
into
jo
leave
clc
and
xchg
xchg
mov
shr
xchg
add
orl
pop
fsubrs
outsl
pop
bound
and
or
popf
movsl
lods
cltd
push
xchg
mov
popf
cmp
in
xor
push
lock
hlt
push
cmpsl
jb
sub
jp
or
jmp
sbb
cli
xchg
xor
pop
add
inc
sti
dec
adc
sar
test
out
or
pop
mov
mov
in
je
ret
add
cmc
movsl
mov
div
inc
out
out
sbb
mov
bound
sub
inc
xor
arpl
movsb
addr16
fldlg2
mov
mov
addb
pop
cmp
inc
into
jo
das
loope
add
push
out
mov
cmp
cmp
xchg
pop
imul
stc
push
cmp
sbb
pop
push
sub
jnp
cmp
cwtl
pop
push
aas
daa
cli
push
shll
pop
pop
orl
pop
sahf
lods
push
iret
shll
cli
jecxz
mov
popa
push
fsubr
jg
pop
leave
inc
fsubrp
out
push
insb
incl
jb
jnp
push
sti
cwtl
pop
push
outsl
nop
mov
test
shlb
xchg
fwait
icebp
subl
mov
pop
ret
mov
lock
dec
push
pop
jbe
xor
and
notb
cmp
mov
lret
sti
pop
aaa
ss
mov
push
xchg
add
cltd
pop
cmp
fnstsw
scas
lret
data16
mov
mov
daa
scas
lock
adc
push
movsl
addb
inc
mov
cli
fwait
sbb
inc
pop
aam
and
push
dec
fwait
in
repnz
mov
cli
out
push
jo
nop
test
mov
push
adcl
lahf
cltd
cmp
in
push
mov
mov
push
pop
enter
in
pop
sarl
or
push
dec
test
fcmovne
jnp
es
cltd
jbe
xchg
sub
cmp
andb
lock
add
repz
sysenter
fmull
and
loopne
das
xchg
pop
orb
mov
repz
inc
push
bextr
mov
gs
mov
xchg
push
cmp
notb
movsl
outsb
lcall
mov
fstpt
out
or
gs
in
jl
loop
js
pop
sahf
out
in
dec
mov
into
sbb
dec
nop
sub
repz
adc
dec
test
pop
lret
xlat
lret
xor
add
push
dec
fsubl
xor
xor
cmp
xchg
xor
xchg
scas
imul
xlat
stos
dec
cmp
sub
cli
repz
mov
add
cs
mov
push
imull
call
adc
sahf
clc
push
mov
lret
xchg
je
aad
and
fdivp
lcall
adc
adc
ljmp
jge
or
cwtl
mov
scas
fstpl
push
jo
push
insb
mov
leave
test
push
mov
push
dec
movsb
xlat
outsb
fcomp
mov
shl
pop
loope
lds
sti
or
or
sti
sub
stos
insb
scas
mov
cmp
or
dec
pop
addl
mov
lahf
pop
scas
andb
mov
idivb
pushf
cmp
adc
ret
xchg
daa
mov
ret
sbb
pop
sbb
mov
fcmovbe
call
mov
pop
popa
dec
cmp
push
mov
sbb
mov
pop
xor
xor
pushf
push
sbb
dec
push
arpl
scas
pop
mov
enter
xor
faddl
ret
std
add
push
sbb
popa
adc
fidivs
ficompl
dec
in
dec
aas
into
sahf
aas
add
mov
data16
mov
push
cmp
pop
mov
je
ljmp
pop
cmp
adc
xor
add
testl
gs
movsl
pop
es
pop
push
rcrb
mov
movsl
sbb
cli
std
xchg
sub
sbbl
mov
sub
ss
dec
adc
out
xor
sbb
push
pop
push
cwtl
das
inc
insb
out
xchg
and
shll
lds
rcrl
repnz
in
adc
ja
call
xor
mov
pop
popf
cmpsl
sbb
rep
jbe
mov
lock
sub
subb
cmpl
cmp
jnp
cmp
fisubrl
test
nop
mov
js
jg
stc
in
cli
stos
ljmp
mov
iret
fs
aas
lock
xchg
push
fst
push
movaps
out
adc
mov
fisubrs
pop
push
pushf
je
push
into
in
flds
pusha
dec
iret
jecxz
gs
dec
sbb
bound
mov
jmp
ret
clc
ljmp
cld
pop
dec
cmp
cld
dec
fistpll
adc
cwtl
sbb
dec
adc
sbb
xor
xchg
ljmp
es
shrb
and
outsl
or
pusha
hlt
push
scas
test
das
in
outsl
stos
in
ljmp
ja
int
call
je
subl
jl
inc
adc
add
and
jb
sbb
adc
sti
nop
in
mov
pop
jno
pop
mov
mov
jmp
cmp
popf
fstps
and
mov
lahf
pop
rclb
aaa
xchg
clc
add
into
in
loop
xchg
fcmovnb
inc
push
les
push
and
and
aaa
mov
push
icebp
pusha
inc
lret
rcll
jbe
mov
mov
dec
add
hlt
jmp
xchg
lcall
adc
mov
mov
fmul
fistps
bound
jae
enter
pop
inc
daa
sbb
pop
arpl
cmp
sbbl
mov
jl
mov
add
xor
cmp
ss
ss
lcall
jmp
shlb
adc
push
pop
mov
pop
mov
mov
fmuls
fmul
shrl
mov
out
xchg
rclb
test
scas
gs
in
cmp
or
jns
pop
stos
pop
and
inc
xor
mov
scas
add
shll
mov
fbstp
add
adc
fdivl
test
outsl
xchg
mov
ret
pop
pop
andb
shlb
popa
fs
pushf
ret
repz
mov
ficompl
dec
fsubl
adc
enter
push
bound
repnz
pop
fcoms
sub
das
push
cmp
pop
lret
xor
push
cvtps2pi
mov
mov
push
out
jo
movsb
dec
pop
outsb
stc
or
addr16
movsb
inc
fcom
sbb
fsubs
sub
jno
es
push
cmpsl
enter
ret
mov
xchg
roll
dec
imul
jecxz
inc
xchg
mov
mov
inc
ds
pop
mov
lea
pop
sahf
and
pop
mov
fsubrp
outsl
cmpsb
lds
ljmp
nop
or
mov
jb
mov
fsts
lret
fistps
out
jg
fcmovu
int3
arpl
std
sub
sarb
cmp
cmpsb
inc
mov
inc
lods
ljmp
push
add
cmp
jne
cmp
add
mov
xchg
push
push
rcrb
dec
scas
std
pop
iret
xor
hlt
xchg
in
mov
pusha
push
dec
ss
ja
fwait
xchg
sub
hlt
sahf
lds
mov
iret
call
dec
xchg
mov
sarb
pop
filds
repz
push
roll
sarl
inc
dec
pop
imul
xlat
inc
xor
cli
mov
jae
outsl
jb
mov
pop
lds
in
jns
inc
jbe
outsb
push
iret
lahf
in
scas
inc
pop
rclb
mov
sub
aaa
lock
xor
xchg
pushf
xor
mov
aas
lds
xor
mov
mov
adc
negb
mov
stos
push
ffree
mov
outsl
fisubl
pop
push
dec
ja
outsb
add
pop
jbe
xchg
je
sub
imul
idivb
xor
lret
inc
pop
xchg
or
mov
push
mov
insb
xchg
inc
les
jns
ljmp
jne
ds
sarl
add
out
popf
xchg
sub
sub
push
daa
add
ret
ja
mov
dec
jbe
dec
jge
pop
scas
jl
xchg
mov
dec
mov
or
jae
mov
pop
aad
ss
aam
mov
dec
imul
sti
dec
aad
stc
imul
mov
jle
movsb
test
lret
data16
mov
push
push
outsl
and
jmp
insb
stos
into
movsl
pusha
scas
ljmp
mov
adc
sub
fidivl
dec
fwait
cmp
lret
cmp
imul
clc
popl
push
dec
pop
jb
negl
mov
jae
imul
dec
in
into
jmp
cmpsl
in
mov
push
jae
mov
mov
cmp
insb
iret
push
pop
repz
lock
xlat
mov
pop
imul
mov
cmp
mov
or
dec
dec
loope
add
icebp
jle
sbb
aad
jnp
aas
popf
push
in
fnstsw
lret
add
xlat
lock
xchg
add
and
inc
xchg
pusha
scas
inc
lcall
repz
pop
dec
mov
and
lret
fcoml
mov
fcompl
test
sub
insb
lock
or
pop
inc
dec
inc
cli
and
stc
pop
pop
movsb
pop
pop
ss
push
outsb
lahf
pusha
mov
pop
lds
sub
jge
push
aas
iret
movsb
xchg
popa
and
push
mov
js
push
ja
push
sahf
xchg
xchg
and
xchg
sti
dec
mov
in
sub
cmp
push
fistpl
xchg
ret
jns
jmp
movzbl
adc
movsl
mov
lahf
negl
mov
outsb
call
cmp
les
pushf
cli
and
mov
fs
push
and
test
inc
js
mov
push
js
sub
xchg
out
dec
push
in
subl
dec
popf
vpaddw
pop
dec
mov
xlat
mov
sbb
test
pop
inc
xchg
add
xchg
push
int3
xchg
add
jbe
lea
aad
dec
push
push
sahf
sub
lock
xorl
inc
iret
lcall
and
clc
mov
ret
fisubs
jne
out
movsb
xor
fimuls
ds
pop
sbb
xchg
andb
pop
fistl
outsb
das
xchg
mov
je
cwtl
xchg
mov
jns
xlat
bnd
dec
imul
in
jecxz
mov
divl
add
xor
mov
adc
lds
pop
lahf
jp
sti
dec
xor
in
mov
rcrb
xchg
sub
add
inc
inc
adc
mov
insl
or
or
mov
push
cmc
nop
mov
mov
add
pop
mov
pushf
imul
imul
cltd
arpl
fimull
lret
arpl
ja
or
repnz
mov
inc
mov
pop
push
in
nop
push
leave
nop
cmp
inc
outsb
cmc
jo
daa
or
add
adc
mov
sbb
jmp
push
or
int3
or
scas
push
cmpsb
cmc
in
sbb
dec
push
xchg
inc
lods
aad
lds
sarb
ret
sub
hlt
push
test
jnp
aaa
pop
inc
pop
and
pop
sbb
imul
ds
cmpb
pop
and
mov
fbstp
dec
out
nop
mov
dec
pop
xchg
sub
lods
test
add
fidivrs
mov
dec
movsb
outsb
and
mov
enter
out
notl
adc
lea
cmpsl
cmp
push
mov
movsl
insl
jmp
dec
enter
das
jmp
mov
add
mov
dec
jmp
adc
mov
xchg
int
lret
sub
dec
arpl
xor
mov
inc
adc
or
es
adc
movsl
test
in
movsb
mov
repz
iret
fadd
daa
pushw
dec
and
addr16
rclb
xchg
mov
xlat
xor
out
dec
gs
jnp
or
add
xor
js
jne
inc
mov
iret
js
icebp
push
inc
push
nop
mov
lret
push
ja
mov
add
leave
xchg
in
ret
int
push
fsubrs
cli
push
add
out
xchg
imul
mov
dec
aaa
dec
test
lods
mov
icebp
sti
test
sti
mov
lods
sub
jge
pusha
fnstenv
sbb
ret
adcl
inc
mov
dec
fistpll
lds
fisubs
or
js
sbb
and
cmp
xchg
enter
cmp
cmpsb
push
fsubrs
imul
xor
or
out
cmp
shrl
std
lea
psubusw
in
idivb
add
aaa
mov
out
cmp
mov
pop
fucomip
jns
aas
outsb
mov
sub
pushf
sbb
add
sub
mov
push
shl
push
std
jne
test
popf
aaa
je
jae
lret
xorb
jp
sbb
mov
sub
fadd
sti
jp
lret
add
or
add
jnp
dec
push
or
push
and
jmp
inc
jecxz
sub
andb
testl
jl
sbb
xchg
mov
cmp
adc
lret
out
test
add
xchg
or
xor
mov
jae
dec
sbb
popa
mov
sub
addl
jg
push
and
inc
add
ja
shlb
and
push
xchg
jne
mov
jnp
mov
jge
in
push
stos
inc
xlat
push
mov
je
pop
cmp
mov
cmpsl
es
xlat
pop
hlt
pop
enter
inc
xchg
andb
mov
cmp
incl
mov
xchg
xor
sub
sub
repnz
test
mov
cmpsb
and
test
cs
frstor
add
imul
xchg
movsb
cs
mov
add
mov
push
repz
shl
lds
mov
add
outsb
sbb
sub
out
add
pop
mov
xlat
sub
or
shrl
dec
push
or
xchg
sub
sbb
mov
inc
ds
jmp
mov
pop
cmc
cmp
js
adc
mov
arpl
mov
dec
and
jp
cmpsb
cmc
dec
dec
push
cmc
imul
enter
mov
shl
popf
pop
sarl
fcmovb
shlb
cmpsl
mov
push
jnp
xor
sbb
pop
lods
mov
adc
push
fcompl
into
mov
js
mov
adc
js
aam
test
call
sbb
add
lods
fcomi
xchg
mov
enter
int3
es
cmp
out
fs
sahf
decl
cmp
push
jno
es
pop
pop
xor
in
cmp
adcl
push
addb
pop
addb
repz
adc
pop
pusha
aad
push
xchg
mov
leave
pop
repnz
dec
sbb
cmp
cmp
lahf
dec
call
lea
mov
push
push
adc
push
fisubs
out
or
or
mov
push
rol
out
xor
out
pusha
sub
jno
pop
das
dec
mov
jp
test
hlt
stc
mov
call
loop
xor
mull
and
cmpsb
add
jmp
lods
inc
popf
sar
enter
imul
out
lret
icebp
mov
js
inc
or
pop
xchg
into
aam
pop
lret
and
insl
sub
iret
sbb
push
or
xor
push
add
pusha
fistpl
mov
insl
out
fisttps
sarb
cmpb
mov
scas
gs
fstl
xorl
cmp
fs
popf
insb
add
xor
jno
movsb
pop
mov
pop
jns
dec
pop
mov
mov
lea
xor
push
outsl
jg
xchg
mov
push
out
rcll
or
or
or
pop
mov
xchg
sub
inc
mov
mov
stos
cwtl
pusha
inc
adc
js
dec
mov
jge
jl
mov
jnp
cltd
fs
aad
cwtl
das
jo
enter
mov
or
sub
jnp
jns
arpl
es
xor
cli
enter
jnp
in
jnp
fldenv
insb
mov
jle
xchg
push
add
pop
or
mov
sbb
xor
aas
push
xchg
jne
lea
dec
xchg
mov
pop
movsl
add
jge
loope
cmc
mov
xor
adc
sub
or
jmp
or
popf
es
ds
cwtl
out
sbb
add
inc
pop
add
add
int
mov
push
inc
inc
repz
pushf
scas
xchg
mov
dec
or
jns
jns
push
cwtl
push
lcall
adc
in
stos
sub
fcoml
mov
mov
lock
xchg
data16
add
cwtl
or
and
or
jo
push
jnp
mov
fldl
loope
pop
sbb
rolb
dec
adc
dec
add
add
dec
loop
outsl
out
xchg
inc
jmp
xchg
add
push
dec
xor
mov
or
fistpll
in
data16
leave
jmp
push
xor
push
push
in
enter
loopne
je
in
mov
push
jmp
outsb
cmc
icebp
jnp
test
testb
jg
lock
test
xor
dec
fcomp
insb
fisubs
fidivs
push
mov
inc
add
in
add
cmp
mov
xchg
je
fsubs
cmc
int3
cmp
lods
or
cmp
shrl
popa
faddl
outsl
rolb
jg
divb
xlat
sub
shll
pusha
cmp
leave
jecxz
push
loop
inc
adc
dec
dec
and
dec
repnz
xor
add
and
mov
jecxz
ja
pop
mov
dec
hlt
mov
stos
xchg
mov
mov
and
outsb
inc
xchg
mov
in
lds
fnstenv
adc
xchg
stos
ja
mov
mov
sbb
jmp
sbb
xchg
js
shlb
in
pop
cmp
insb
mov
sub
or
aas
xchg
cmpb
mov
adc
jmp
xchg
lds
jp
xchg
pop
lcall
lods
hlt
aam
enter
or
shll
inc
pop
dec
call
cmp
push
aam
sti
inc
xlat
orb
cmp
pop
jb
movsl
or
shll
cwtl
pop
push
or
cld
sub
mov
outsb
shl
clc
and
mov
push
cltd
test
fidivrl
icebp
push
ret
mov
fsubrl
into
rep
in
lods
xchg
stos
mov
pop
inc
pop
add
mov
testb
mov
jmp
psllq
insl
cmp
int
sub
dec
sbb
pop
adc
mov
mov
jge
sub
xor
bound
cltd
imul
jno
hlt
mov
outsb
clc
orb
fs
sub
push
lods
leave
inc
fsubr
mov
cmpsb
sti
test
out
dec
popf
cmpsb
jbe
gs
mov
insl
mov
ret
popa
mov
xchg
fisttpll
fsubl
icebp
push
cmpsl
pop
push
adc
testl
sbb
or
lcall
fsubl
hlt
xchg
std
mov
jbe
cmp
xchg
inc
adc
push
leave
fs
in
push
sub
rcr
jbe
or
adc
dec
inc
pop
imul
push
push
sub
xchg
cwtl
test
inc
fnstcw
aaa
fwait
jno
xchg
sub
cmp
push
xor
xchg
xchg
adc
dec
imul
imul
es
ret
push
adc
imulb
inc
mov
pop
mov
push
fdivrl
push
xchg
xchg
jae
stos
shlb
test
sbb
test
test
test
jo
cmpsl
popf
scas
pop
jo
icebp
hlt
negb
mov
push
mov
into
arpl
dec
in
push
es
in
aad
lahf
xor
insb
subb
mov
mov
mov
loopne
sub
and
stos
adc
jecxz
fwait
mov
sub
xchg
rorl
ret
aaa
ja
pop
jmp
out
jge
pop
mov
mov
mov
mov
cmpl
or
es
loopne
repz
fldl
mov
jmp
sahf
fsubr
ret
push
movsb
out
jo
cwtl
int
loop
hlt
shrb
jb
xor
pop
test
dec
addr16
data16
andl
jl
sub
mov
xlat
inc
dec
mov
mov
sarb
or
jmp
pop
daa
cmpsb
and
cltd
adc
jae
gs
popf
jo
dec
jbe
loop
pop
aad
inc
lret
sahf
pop
sbb
test
lds
sub
rcrl
add
xchg
not
arpl
cmp
sub
cmp
adc
sub
les
inc
inc
jo
xchg
mov
ldmxcsr
dec
pop
ljmp
cmp
aas
mov
leave
cmpsb
ljmp
cli
push
aaa
mov
mov
addb
aad
or
out
push
lock
aad
push
nop
mov
mov
pop
jmp
mov
pop
les
in
mov
rolb
mov
xchg
inc
pop
cwtl
stos
push
push
loope
mov
hlt
popa
add
rcll
pushf
mov
cmpsl
fnstenv
mov
jle
aaa
test
dec
dec
dec
lret
data16
ret
cmp
pop
mov
cmp
sub
fistpl
adc
xlat
xlat
pop
lahf
mov
insl
inc
mov
mov
push
insl
adc
aaa
jae
loop
jmp
sub
test
add
adcb
xchg
scas
add
cli
jo
fxam
mov
loope
std
inc
vpunpckhwd
add
inc
jmp
dec
mov
lods
jp
inc
pusha
mov
ja
rcrl
jae
es
jecxz
lods
push
test
pop
aaa
inc
mov
icebp
adc
adc
xchg
repnz
push
xor
fsubrs
xchg
jp
or
div
or
xchg
mov
nop
adcb
in
test
push
or
or
cltd
mov
dec
pusha
sub
sub
cmp
sbb
xchg
cli
stos
or
or
or
mov
push
hlt
outsb
sub
inc
cld
push
cltd
icebp
jecxz
mov
pop
lahf
pop
or
fcoms
out
fwait
cmpsl
inc
shrd
out
xchg
inc
hlt
insb
cmp
jns
and
dec
rcll
mov
cltd
stc
adc
push
xor
mov
shlb
pop
adc
push
testb
dec
scas
cmp
cmp
push
lods
fistps
xor
sub
dec
addl
mov
pop
in
mov
sub
test
mov
mov
sbb
inc
loopne
push
xor
call
je
rorl
leave
xchg
xchg
fisttpl
pushf
and
fnsave
jne
or
addl
lcall
jg
pop
es
call
inc
in
jg
popa
xor
sahf
test
pop
xor
loopne
mov
in
jbe
les
push
inc
sbb
loope
lods
gs
inc
cmp
leave
pop
xchg
out
in
and
xor
in
push
es
sahf
and
mov
popf
pop
ljmp
push
inc
dec
mov
fcmove
xchg
test
dec
mov
push
pop
mov
mov
mov
bound
jge
cmp
dec
jne
lea
insl
lea
mov
mov
pop
push
insl
mov
cmpsb
jp
es
sbb
push
out
cmp
mov
xor
shrb
mov
add
xchg
imul
fs
fisubrs
decb
out
push
sbb
scas
mov
sbb
or
aam
pop
daa
adc
add
adc
or
stos
loopne
push
into
inc
rclb
pop
call
jae
cltd
daa
pushf
or
addl
clc
push
xchg
inc
ss
adc
mov
mov
xor
add
and
loopne
insb
hlt
pop
jp
lock
int
loopne
add
sub
push
mov
andb
add
out
lock
lret
xor
dec
in
in
repz
icebp
sbb
faddl
pushf
cmp
call
sub
sub
popf
pop
repnz
cs
out
test
test
jle
movsl
cmp
or
jae
push
push
cmpsb
js
arpl
or
pop
push
lcall
loopne
jnp
js
dec
add
adc
por
sbb
lcall
cmp
and
inc
lahf
sbb
lcall
mov
adc
add
pusha
repz
ja
mov
jb
fnstcw
lds
sahf
and
inc
mov
push
arpl
pop
insl
mov
in
test
jle
or
hlt
push
jns
inc
push
aas
fld
loopne
les
movsb
cmp
xchg
sub
or
mov
pop
ds
push
rcl
pop
cmc
mov
pop
dec
cmp
mov
and
loopne,pt
dec
push
ficomps
scas
and
mov
cmpl
and
jl
out
add
out
aam
test
pop
in
jg
mull
push
mov
js
mov
push
ljmp
dec
mov
scas
xchg
and
xchg
dec
jecxz
jno
jmp
dec
aaa
xor
jo
ja
adc
adc
arpl
push
hlt
fsubrs
or
lods
mov
into
cld
mov
add
add
and
xor
mov
sub
or
mov
inc
add
mov
rolb
mov
dec
loop
aad
dec
inc
dec
je
jp
adc
adc
jae
mov
xchg
fimull
sub
movsb
jb
cltd
fwait
cmc
mov
mov
or
jno
popa
mov
movsb
call
sbb
mov
movl
repz
pusha
and
xchg
mov
ljmp
xor
jo
daa
outsl
subb
inc
leave
arpl
xor
enter
addb
jns
ss
pushf
fwait
cli
mov
aaa
pop
movsb
shlb
dec
pusha
jnp
shrb
and
pop
decl
sbb
mov
repz
mov
inc
jle
stos
mov
add
inc
cmc
fsubr
sbb
repnz
sub
shrl
fstl
testl
adc
add
and
inc
push
push
sahf
cmp
inc
mov
pop
dec
fldt
int3
and
sub
rol
push
push
xor
in
push
and
jmp
test
or
aaa
pop
arpl
hlt
mov
cmpsl
sub
fidivrs
outsl
add
xor
jge
inc
stc
cmp
pop
ljmp
rep
or
mov
cmc
dec
int
sbb
lods
out
lock
jle
dec
add
jns
adc
icebp
cmp
xor
lahf
lods
mov
cmpsl
jo
adc
std
aam
cmp
out
jp
xchg
jp
in
xchg
xor
loope
inc
mov
mov
into
inc
daa
pop
gs
sbb
cs
push
dec
call
jne
lcall
fdiv
testl
mov
mov
movsl
and
mov
mov
mov
and
fldcw
cmp
sbb
std
mov
shrl
mov
test
ss
dec
or
mov
cmp
fdivrp
pop
push
test
inc
sbb
xor
fwait
sti
push
mov
xor
sbbb
rorb
out
loope
lahf
fwait
iret
mov
shrb
jae
sbb
fdivrs
test
loop
lea
inc
sbb
test
arpl
or
sub
mov
notb
inc
in
dec
pop
in
inc
into
push
and
adc
and
mov
lea
push
adc
leave
js
jns
notb
inc
xchg
pushf
repnz
inc
jg
xor
clc
jle
lret
pop
shrl
mov
or
or
arpl
push
sub
jge
int3
mov
jno
repnz
pop
pop
jp
push
in
pop
sbb
mov
xlat
cmp
outsl
minps
lea
mov
mov
jmp
aas
or
test
mov
and
pop
pop
inc
or
inc
out
cmpsl
push
xor
lahf
outsb
je
bound
dec
jmp
adc
jo
fbld
cs
dec
pop
add
movsb
test
cmp
xchg
dec
mov
insb
or
and
jnp
mov
sub
add
jb
les
xchg
mov
clc
xor
iret
inc
inc
push
inc
push
loope
jno
rcrl
dec
iret
or
adc
fisubs
leave
iret
pusha
jns
xchg
lock
mov
jg
and
or
sub
sub
arpl
test
shll
add
fildll
lea
push
pop
les
clc
or
mov
pushl
ret
mov
shl
aas
jno
push
pusha
cmp
inc
lock
cmpsl
imul
add
out
inc
sbb
or
movsb
add
cmp
mov
inc
sub
stc
xchg
mov
shrb
push
pop
aad
xlat
and
sahf
orl
addb
push
repnz
push
mov
nop
or
sub
cmp
push
pop
mov
push
xorb
hlt
jae
add
aam
push
stc
stos
sub
pushf
sbb
lahf
imull
cld
or
cmp
je
ljmp
pop
fldpi
test
cmp
cmp
jecxz
lret
xchg
sub
jle
sbb
js
imul
jge
and
sahf
mov
lcall
jmp
int
movl
xor
fidivl
cmp
loope
cmp
push
add
movb
addb
test
cmpsl
lock
bound
mov
inc
in
cmp
fwait
arpl
orl
out
popf
ds
in
dec
repz
je
test
xchg
in
sub
out
and
outsb
or
ret
fwait
aaa
cmp
push
pushf
scas
je
pop
adc
leave
cltd
push
shll
leave
xchg
hlt
xchg
out
mov
leave
int
pop
mov
test
lds
xchg
fsubr
aas
pop
repz
rcr
lcall
or
pop
js
sbbl
or
pop
xor
inc
jae
pop
jno
cmpsl
dec
in
dec
cmp
cmp
in
lea
push
mov
int3
add
jg
xchg
es
lahf
aam
mov
es
pop
cmp
or
adc
fistps
pop
lcall
cmp
in
popf
pop
sahf
cmp
jmp
mov
mov
cli
mov
sub
loopne
push
sahf
cmp
mul
inc
dec
xlat
sub
pop
bound
push
int
sub
inc
data16
frstor
jae
sub
lds
cmp
bound
pushf
popf
ret
pop
mov
pop
out
rorl
mov
dec
pusha
jb
mov
into
movsb
inc
sti
bound
pop
fstpt
jp
add
dec
mov
mov
into
ficompl
fnsave
dec
mov
ficoms
adc
push
fs
push
insb
test
mov
jp,pt
mov
pusha
adc
es
ret
or
in
jbe
cmp
in
daa
jbe
shrb
dec
xor
push
dec
sbb
fldt
ja
cltd
push
lea
aas
cmp
jb
out
sub
mov
ljmp
cmp
and
iret
jg
jo
out
dec
mov
pop
adc
jb
mov
addr16
call
xor
mov
push
cmp
and
out
pop
outsb
pminub
scas
or
ret
and
push
push
sbb
push
and
xor
adc
mov
rcrl
adc
mov
xchg
push
into
test
cmp
jecxz
mov
mov
stos
push
ret
jnp
gs
adc
cmpsb
inc
xor
push
es
inc
mov
adc
repnz
or
dec
adc
stc
and
mov
push
inc
lods
outsl
dec
lea
xlat
repz
or
scas
add
popa
mov
cwtl
pop
sub
pop
sbb
inc
fidivrl
push
add
push
sub
imulb
mov
in
mov
idivl
bound
daa
mov
shl
inc
pop
enter
mov
push
fs
mov
add
stos
lcall
std
dec
inc
mov
cli
divl
mov
sti
cltd
repnz
mov
iret
jle
xchg
sub
mov
fldcw
pop
gs
xlat
stc
pop
outsb
pop
fucomip
push
shr
in
in
mov
popa
xlat
dec
adcb
cli
daa
ret
xchg
jg
imul
pushf
aaa
ficoml
mov
sahf
jmp
mov
and
imul
xlat
or
push
test
ja
mov
ds
loope
adc
lods
lea
icebp
aam
insb
into
dec
test
push
add
scas
sub
fxch
repnz
and
rcll
jmp
cmp
sbb
bound
pop
push
pop
sarb
sub
mov
mov
popa
xchg
dec
push
sbb
enter
pop
add
pusha
shl
and
cmp
cmp
jp
popa
popf
mov
cmp
and
mov
lods
lret
decl
lods
pop
and
dec
cmp
xchg
arpl
dec
inc
pushf
xchg
shll
jb
jle
shrb
in
popf
or
ret
dec
addl
sub
cmp
aad
mov
xor
pop
cmp
int
and
xchg
or
int
fdivr
cmp
inc
xchg
and
jnp
add
xor
cmpsl
ds
call
sub
add
ja
lea
mov
sbb
jbe
or
repz
mov
lcall
inc
movsb
jo
push
xchg
mov
cld
add
outsb
add
cli
test
add
sbb
mov
mov
xchg
inc
popf
cmp
subl
pop
lea
sub
lods
push
out
bound
inc
lahf
ss
rcll
fcomps
ficomps
inc
xchg
cltd
or
popa
cs
nop
push
adc
lret
ss
inc
sahf
jae
out
sbb
mov
adc
dec
and
insl
test
jbe
sub
int3
subl
pop
jno
or
mov
push
dec
into
ficoms
mov
mov
icebp
mov
sub
daa
dec
push
lods
xchg
xor
xchg
xlat
mov
lds
cmp
daa
mov
shll
or
faddp
add
jle
in
jae
inc
clc
jne
and
test
mov
dec
cmpsb
cltd
push
insl
imul
push
or
jne
xor
out
mov
rcl
insl
les
into
pop
mov
popa
jge
xchg
pop
movsl
push
sahf
mov
mov
mov
repnz
pop
cs
xchg
mov
pop
push
loope
mov
dec
pop
add
sbb
ss
xchg
adc
jb
cmp
lods
popf
in
jp
lock
iret
gs
pusha
push
sbb
aaa
inc
sti
movsb
test
je
adc
cmp
test
insb
lods
negl
jmp
repz
adc
xor
adc
xor
dec
gs
sbb
iret
lahf
test
addl
dec
aam
xor
es
mov
push
and
imul
sub
pushf
into
iret
dec
aaa
addr16
xchg
outsb
inc
cltd
scas
sbb
dec
adc
mov
pop
lret
pushf
cmp
adc
aaa
fidivl
test
sahf
dec
add
cmp
jno
andb
icebp
insb
or
scas
fiadds
test
xor
pop
sbb
mov
out
pop
stos
mov
pop
aad
in
jl
and
jle
ljmp
das
mov
clc
pop
pop
xor
sub
sbb
jno
sti
lods
mov
je
lods
rcrb
shrl
cwtl
imul
xor
lods
jbe
leave
cs
cld
cmpsl
jge
lret
xor
outsl
jge
les
ret
adc
mov
cmc
out
outsb
lea
adc
pop
push
movsb
std
insb
imulb
pop
xor
xchg
mov
cmpl
mov
sarb
je
mov
pop
insl
inc
idivl
dec
test
insl
and
fxch
into
in
sub
push
mov
lea
cmp
mov
in
pop
xor
dec
pop
inc
insb
data16
popf
test
out
mov
clc
mov
xor
mov
loopne
aas
gs
mov
xor
sub
jae
xchg
mov
lods
inc
push
mov
mov
leave
cltd
js
xchg
lahf
xchg
cmp
test
loop
scas
mov
or
stc
or
ret
sahf
imul
sbb
xchg
cmpsl
pushf
cli
mov
mov
inc
jne
cmp
daa
outsb
push
repnz
js
mov
es
dec
xchg
lahf
dec
push
fsubr
movsl
int
pop
fbld
out
xor
outsb
mov
inc
push
movsb
insb
mov
push
sbb
pop
or
mov
sub
mov
jo
adc
add
and
sub
push
push
pushf
nop
push
lds
jp
mov
mov
xchg
aaa
shrl
loopne
stc
test
lods
mov
mov
add
jno
xchg
mov
insl
sbb
mov
icebp
xchg
pop
sub
push
cmp
int
mov
push
or
xchg
lret
xor
mov
aad
in
in
fnstsw
das
fs
xchg
jnp
in
xchg
lcall
xorl
jp
into
dec
fs
inc
int
sub
add
cwtl
ret
movb
iret
leave
int3
cmp
andl
push
in
fucomi
sub
adc
inc
xlat
mov
cmpl
shrl
ret
push
movsb
loop
dec
mov
mov
push
sub
or
sub
incl
cmpsb
out
xchg
hlt
sbb
enter
and
cltd
jno
repnz
mov
lods
loopne
fstpt
xchg
popa
mov
push
fwait
daa
cmp
xchg
ror
fdivs
inc
movsl
cld
icebp
pop
cld
leave
pop
sbb
cmpsl
leave
cltd
test
fwait
arpl
mov
mov
or
lahf
and
mov
aaa
jae
repnz
and
mov
jmp
xlat
sbb
pop
xlat
xor
dec
outsb
pop
ret
imul
pushf
cmpb
movl
daa
shrl
and
pusha
fs
cmp
popa
fwait
cmpsl
jle
hlt
mov
jl
and
adc
xor
add
mov
iret
and
ret
or
out
shrb
xor
xlat
pop
orl
push
lret
jecxz
sbb
icebp
movsl
in
add
and
mov
fcoml
and
xor
mov
fisttpl
mov
mov
cld
xchg
jg
or
int3
mov
pop
ds
or
push
inc
loop
cmp
stc
pop
insb
sti
sbb
pop
add
mulb
std
jo
in
inc
sub
push
xchg
loope
adc
pop
addr16
inc
lret
adc
cltd
out
sub
imul
inc
push
imul
push
xchg
and
fldl
adc
mov
inc
fdivrp
dec
cmpps
pop
fmuls
pop
pop
scas
and
jae
ljmp
push
insl
lret
je
lods
xchg
das
lods
mov
sbb
jno
lock
cmpsb
leave
xor
inc
cmpsb
mov
push
mov
dec
sub
mov
stos
lcall
dec
sti
pop
insb
jnp
push
outsl
mov
cmpsb
lcall
adc
pop
add
mov
dec
cmp
jecxz
adc
movsl
lds
jns
push
and
sub
cs
cmp
mov
leave
repnz
jb
out
je
call
add
dec
add
sub
mov
int
arpl
push
xchg
paddsw
lea
testl
stc
xchg
mov
fldcw
aas
pop
mov
subl
mov
inc
in
je
mov
xor
fnstsw
cmp
loop
mov
xor
out
popf
rolb
sub
sbb
fwait
inc
pushf
mov
pop
and
adc
mov
lahf
lock
pop
movsb
test
mov
out
std
invd
shl
push
dec
adc
test
call
ljmp
pusha
dec
sti
cwtl
sub
jnp
int
inc
pushf
dec
pop
mov
fsubrp
sub
aaa
mov
lahf
lret
lds
ret
jno
sbb
sub
xlat
pop
xor
and
ja
push
sbb
addl
sub
test
rcl
mov
sahf
jb
jmp
pop
je
inc
lock
jbe
jl
je
fistpl
xor
ja
stc
insb
rcrl
xor
cli
shl
adc
or
xchg
mov
ljmp
mov
lret
cmpb
mov
jp
inc
shlb
in
fdivrs
pop
sub
pop
xlat
mov
inc
adc
add
call
cmpsl
lock
mov
pop
js
jp
pop
inc
mov
or
inc
popf
or
xchg
sub
mull
lds
dec
add
dec
add
lea
fwait
out
pop
loop
in
test
adc
movsl
pop
addl
adcb
mov
mov
jne
loop
or
and
lcall
lcall
push
push
mov
cmpsl
ret
dec
insb
xor
sahf
mov
or
cld
or
data16
pop
sub
pusha
in
lock
dec
dec
lcall
rol
mov
in
std
dec
fldcw
jae
xor
jecxz
add
cltd
sbb
lret
sub
inc
outsb
inc
add
mov
sub
fisubl
fistpll
xor
jle
loope
cld
jecxz,pt
negl
mov
inc
sub
mov
fisubrs
jnp
xor
insb
in
sbb
ret
movsb
mov
or
fsubl
daa
mov
fst
stc
xlat
pop
test
aad
mov
push
vpcmpeqd
daa
addr16
and
and
sbb
sti
call
add
xchg
les
mov
sub
lea
das
inc
out
pop
and
pushf
and
aaa
into
daa
jle
sub
int
fs
cmp
insl
int
or
cwtl
adc
imul
or
mov
xor
leave
inc
je
adc
fwait
insl
aad
jne
cwtl
repnz
push
cs
dec
rorl
dec
jecxz
stc
out
scas
sbb
les
xlat
mov
movsb
loopne
jne
addr16
mov
das
mov
adc
pop
mov
ja
mov
dec
mov
pop
aas
loop
pop
push
es
push
jbe
add
addr16
in
adcb
imul
insb
pushf
adc
subb
add
jp
xchg
stc
fwait
lcall
fs
scas
dec
adc
stos
mov
sbb
mov
mov
ja
jecxz
nop
bswap
add
xchg
sub
jmp
dec
in
or
jae
fwait
xorb
scas
mov
sub
pop
cmc
sarl
int3
and
jns
and
movsb
jecxz
adc
mov
cmpsl
push
mov
mov
gs
inc
or
outsb
and
aas
imul
mov
add
xorl
loop
xchg
pop
pop
and
in
dec
scas
xlat
cmp
addb
ss
adc
pop
mov
adc
mov
jne
xchg
inc
sbb
int3
fdivp
cli
aad
lahf
cwtl
das
rorb
call
dec
xor
push
sbb
sub
lock
movsb
fisubs
insb
push
xchg
xchg
mov
or
pop
ret
xchg
cs
jg
and
xlat
cmc
pop
xchg
out
fidivs
mov
shlb
jbe
cmc
mov
aam
or
out
loop
sub
mov
cmp
sub
fiadds
adc
lret
xor
test
sub
cmpsl
lret
xor
push
ds
std
ljmp
jmp
xlat
xor
sub
xor
popl
les
mov
scas
out
into
outsl
fcoml
jbe
cmp
xlat
inc
adc
cld
mov
jg,pt
add
fildl
or
jle
fldt
fisubrs
push
stos
out
mov
or
stos
add
xor
imul
leave
les
pop
rolb
jge
fistps
imul
adc
je
mov
push
mov
pop
js
xchg
or
outsl
xor
je
dec
scas
xchg
jge
sbb
sti
adc
scas
xchg
arpl
leave
data16
test
sbb
ss
add
out
ficomps
out
fidivrl
in
ret
push
clc
dec
loope
dec
das
adc
cs
aad
loop
repnz
mov
xchg
rolb
inc
mov
data16
push
adc
lret
stc
push
mov
sub
sbb
or
cs
fadds
mov
arpl
or
xchg
inc
inc
inc
dec
cli
shrl
add
pop
sbb
jnp
data16
int3
mov
pop
push
push
test
lret
arpl
dec
xchg
pushf
scas
rcrl
push
out
sbb
adc
push
popa
hlt
mov
in
fucomi
adc
scas
mov
cmpsb
loope
and
es
adc
lcall
mov
jmp
je
mov
mov
sbb
cmp
xchg
inc
xchg
and
push
mov
add
sub
andb
adc
sub
cmp
negb
sti
xor
bswap
and
inc
cltd
aas
mov
and
out
push
lcall
fidivs
pushf
xor
repz
jp
jb
xor
int
mov
add
js
cmp
bound
ror
ficomps
inc
pop
add
and
or
jp
add
pop
mov
or
xchg
jp
cmp
leave
dec
fsts
cmpsb
popf
mov
xor
scas
mov
mov
movsb
cmp
mov
jge
and
pop
or
cmpsb
jb
push
and
inc
aam
jbe
jg
push
cmp
or
data16
xchg
mov
mov
ja
cmpb
mov
inc
cld
stos
and
push
lret
jmp
and
shl
jo
clc
outsb
imul
pop
imul
in
mov
mov
mov
inc
clc
hlt
jl
jns
sub
pop
pop
cld
repz
addr16
sbb
sarb
fs
sarl
movsb
sub
adcb
ret
sbb
and
jmp
out
xor
pop
cwtl
cmpxchg
dec
lock
out
mov
cmp
roll
lods
cmpsl
scas
xchg
test
cmp
mov
jno
jne
jo
call
jmp
or
mov
add
daa
outsl
pop
add
mov
sbb
jo
subb
jp
popf
cmp
js
test
sub
lods
mov
jo
scas
jae
adc
mov
or
das
stc
loope
call
insl
xor
jb
or
lahf
mov
fsubrs
inc
mulb
jp
leave
inc
cmp
adc
fyl2x
movsb
inc
mov
nop
mov
lds
xchg
cwtl
inc
cmp
ds
fwait
gs
pop
pop
icebp
data16
pop
lret
adc
adc
lret
and
leave
and
icebp
push
repz
xorl
lret
push
sub
mov
cmpb
in
xor
push
xchg
scas
inc
les
pop
or
jno
dec
mov
jmp
dec
in
fwait
rcrl
add
mov
arpl
push
data16
xchg
push
std
jo
cmp
mov
jp
lds
dec
shl
jge
xor
jp
loopne
bound
sbb
mov
arpl
and
sbb
out
mov
and
cmpsl
push
sub
xchg
fdivl
adc
sbb
mov
icebp
ficoml
push
push
or
lret
clc
push
mov
jmp
push
xorb
jae
addr16
iret
out
inc
in
stos
dec
inc
or
pusha
cld
shll
cmp
push
lea
repnz
cmp
jmp
jbe
stc
lods
pop
jb
sbb
enter
dec
and
dec
push
shll
xchg
sub
sbb
je
nop
loop
int
add
mov
xchg
lds
aam
dec
pop
clc
cmp
jns
nop
push
mov
jbe
inc
jle
aaa
ds
xchg
xchg
rep
sub
out
std
imul
bound
adc
or
lods
inc
outsl
mov
mov
mov
stc
mov
test
or
pushf
int
dec
sti
cli
xchg
ret
mov
jb
pop
dec
fs
mov
dec
mov
ja
xchg
lret
shrl
inc
into
lcall
jp
pop
mov
dec
loopne
lret
cmpsb
js
xlat
mov
popa
and
scas
cmp
cmp
xchg
cmp
xchg
scas
sub
cmp
jo
addl
cmp
sbb
and
sbb
mov
mov
aad
inc
pop
mov
jg
mov
and
and
dec
or
inc
imul
xor
adc
cmp
icebp
in
jae,pt
jo
jns
push
es
roll
scas
out
andb
mov
jge
in
lds
lea
add
xchg
hlt
mov
movsl
mov
push
push
addr16
js
add
sbb
xchg
mov
pop
add
sbb
sub
mov
xor
in
push
push
sti
lret
je
in
test
mov
and
repz
sbb
push
adc
mov
mov
stos
mov
imul
int
add
inc
outsl
mov
orl
mov
xchg
xor
push
je
sbb
dec
pop
lock
jmp
mov
fcomip
cmp
push
outsl
pusha
xlat
mov
out
fs
pusha
inc
pop
jmp
and
pop
pop
or
scas
imul
xor
jle
out
mov
jecxz,pn
outsl
dec
icebp
and
push
xor
out
inc
imul
fisttps
ljmp
imul
mov
mov
cld
clc
pop
jnp
mov
push
hlt
push
loopne
dec
les
repz
repnz
js
mov
inc
mov
push
sub
out
fbstp
inc
xorb
push
mov
mov
call
adc
mov
push
mov
and
cmpsl
cmpsl
jp
inc
jb
in
or
cltd
jnp
xchg
xchg
sti
int3
clc
js
sub
mov
mov
mov
sbb
jl
xor
xchg
jg
dec
jb
dec
inc
pop
xor
pop
dec
iret
repnz
mulb
push
pop
ss
pop
movaps
out
test
cmp
push
pop
dec
mov
jecxz
or
cwtl
pop
xor
mov
pusha
mov
orb
add
jb
cltd
mov
cmp
clc
cli
cmpl
cmp
roll
add
aad
imul
orl
pop
push
jne
pop
shlb
std
bound
lock
sub
dec
shlb
imul
or
cs
or
and
jmp
jae
dec
pop
pop
jbe
leave
cltd
sub
aam
mov
popa
jns
cmp
stc
adcb
ret
in
das
jae
sbb
xchg
arpl
scas
stc
push
int3
sub
xor
cs
fstpt
gs
xchg
sub
adc
insl
or
out
pop
xchg
mov
subl
xchg
sub
pop
mov
jae
mov
jle
lods
jg
fsubs
ret
mov
cmp
lock
and
sub
xlat
lahf
aam
push
lds
cmp
movsb
outsl
mov
add
inc
pop
mov
and
jne
xchg
mov
incb
cltd
pop
push
jp
sub
xor
je
shlb
fs
jno
xor
xchg
cli
or
fimull
sbb
adc
repz
lods
cmp
xorb
test
mov
or
jmp
outsl
or
addr16
mov
out
or
sub
lea
lods
fdivs
pop
out
inc
leave
notl
cmp
xor
cmc
std
mov
push
mov
dec
mov
cltd
cmc
and
lcall
clc
cmp
lods
popa
fnstenv
sarl
jp
push
mov
repnz
mov
fidivrs
cmp
stc
stos
popf
and
inc
jle
hlt
cmp
sahf
clc
add
xchg
out
xor
jne
or
xlat
rorl
mov
fs
out
decl
inc
xchg
call
dec
fisttpl
push
repnz
std
dec
or
dec
mov
sbb
repz
push
cmc
cmp
cmpsl
jns
mov
in
dec
out
arpl
xchg
add
stos
inc
cli
and
push
test
and
adc
adc
cmpsl
cli
lcall
enter
hlt
push
subl
push
or
cmpsl
arpl
cmp
sbb
imul
sbb
int3
push
out
push
inc
inc
push
int
mov
lods
shll
push
or
adc
cltd
mov
xor
sti
or
push
and
movsb
jne
mov
adc
xchg
and
movb
xchg
stos
adc
int3
cltd
das
mov
push
xchg
cmp
sbb
mov
imul
sub
jno
push
cmp
pop
jecxz
insl
decl
xchg
mov
or
mov
xor
xlat
push
xor
mov
call
fs
adc
insl
jle
inc
inc
mov
ss
int
xor
loope
pop
ljmp
mov
mov
mov
popf
les
iret
and
test
sub
adc
mov
add
sub
call
int
lea
dec
push
fldcw
push
xchg
fsubrl
enter
fisubs
mov
pop
jae
push
jp
sbbl
jge
cwtl
pop
or
push
movsl
sbb
or
rorl
movsb
iret
int3
jns
cmp
mov
sbb
push
and
adc
mov
lds
adc
loop
push
jg
and
xchg
push
lahf
xor
lds
and
dec
dec
iret
xchg
push
dec
cld
cmpsl
xor
shl
cltd
mov
aas
push
push
jb
aad
mov
dec
jb
shrb
mov
mov
adc
jnp
daa
roll
add
xor
ljmp
xchg
jbe
test
cmp
sbb
push
subl
pop
mov
cmpsb
sbb
mov
mov
cwtl
xor
into
lods
pop
mov
daa
cmc
push
jnp
pusha
int3
push
rorl
lods
imul
jg
dec
popa
dec
imul
nop
xor
inc
add
out
cmp
xchg
sub
xchg
mov
jmp
mov
insl
aas
outsb
aam
pop
repnz
enter
frstor
sub
jns
push
add
icebp
movsl
jae
scas
aaa
and
loop
dec
sub
mov
out
and
xor
nop
jecxz
scas
sub
dec
rcrl
test
cmc
mov
jo
add
cmpsb
cmp
es
lcall
mov
jp
lret
add
popf
sub
push
xor
xor
or
les
int3
cmpps
loop
lds
hlt
mov
jbe
ljmp
addr16
stc
xchg
xchg
fs
int3
in
jne
cli
push
cmpsl
daa
xor
mov
lods
mov
add
xchg
mov
pushf
or
xor
dec
std
jo
jmp
pop
push
call
imul
iret
mov
dec
vmovlps
loope
mov
test
xchg
sarb
shlb
ds
das
les
call
in
repnz
sahf
mov
push
cwtl
and
testl
and
imul
shl
xchg
pop
mov
into
call
jg
stos
cwtl
das
or
xchg
insl
mov
pusha
cmp
adc
cmp
in
shrl
pop
popf
test
add
push
leave
ja
xchg
sub
cmpsb
scas
and
mov
mov
xchg
sbb
mov
mov
jge
add
popa
lods
enter
icebp
jge
imul
mulb
xlat
pop
mov
sub
jb
xchg
aaa
adc
in
pminub
mov
mov
mov
inc
clc
add
arpl
adc
jmp
test
fdivl
mov
fdiv
jae
and
scas
and
ds
stc
or
clc
repnz
inc
pop
jle
jl
dec
cmp
jns
dec
mov
cltd
push
addr16
mov
cmpsb
mov
mov
addl
xchg
sub
pop
mov
sahf
jle
xchg
aas
into
pop
call
dec
movsl
rorb
and
push
jo
sub
cmp
sbb
insb
out
scas
jnp
ljmp
outsb
sub
push
ret
ret
rol
outsl
mov
pop
ret
and
scas
movsb
repnz
sbb
fmuls
cwtl
lea
jg
jns
adc
ss
jge
or
push
rorb
inc
xchg
sub
xor
nop
dec
aas
sbbl
cmp
addb
mov
or
fwait
cwtl
mov
mov
gs
sub
xor
cmp
int
push
push
or
cmp
dec
out
adc
mov
insl
lcall
and
inc
sbb
mov
aas
fwait
mov
dec
bndstx
int
mov
jle
sub
hlt
pop
lahf
sbb
mov
sbb
pop
scas
sub
orb
int
jb
xlat
sub
mov
das
icebp
jge
aam
pop
cmp
popa
and
call
pop
cmpsl
popf
out
inc
sbb
pop
mov
push
lret
pop
cmpsl
add
loopne
stos
pop
jb
inc
jg
cmc
lock
cli
adc
jb
out
shrl
jno
xchg
jle
sbb
or
sbb
mov
push
inc
xor
data16
fxtract
mov
sarb
icebp
dec
inc
and
mov
pusha
mov
dec
pop
pop
pushf
imul
sbb
add
mov
jb
popf
jb
outsb
sub
cld
adc
out
pop
insb
out
insl
adcl
mov
out
lahf
aas
jmp
fst
outsl
add
jg
out
loope
mov
xchg
leave
or
push
jl
pop
jae
popf
fdivrl
ret
xor
ljmp
xor
add
test
fwait
xchg
scas
cmp
jo
addr16
inc
push
or
sahf
mov
pushf
call
or
enter
int3
inc
cltd
hlt
xor
mov
movsl
in
fcompl
lahf
ss
std
stos
movsl
fmull
and
sti
fnstsw
rolb
bound
and
adc
sub
lret
shrl
loope
dec
fcmovbe
scas
sbb
jne
insb
add
testb
sarl
loope
mov
enter
dec
call
push
ss
cmpsl
in
or
jnp
xor
or
and
je
xchg
in
sbb
mov
out
cltd
ret
repz
jbe
push
je
and
mov
imul
loop
inc
push
xchg
lds
jecxz
xor
sub
inc
das
test
inc
push
icebp
inc
fwait
test
mov
or
jo
ret
adc
xor
lahf
daa
jnp
xchg
add
xorb
cld
test
das
addr16
ja
in
out
sbb
mov
mov
movsb
addr16
mov
scas
sbb
mov
xchg
in
push
in
xchg
sbb
xor
jne
popf
popf
or
and
xor
aad
popf
fmuls
insb
pushf
scas
popf
hlt
rol
adc
in
ret
inc
or
pop
cwtl
jo
lea
inc
in
pop
test
pushf
scas
das
and
jle
ret
sbb
mov
fxch
inc
in
std
in
sub
xchg
push
xor
loopne
addb
add
shrb
cmp
imul
xlat
lods
addl
mov
jle
es
std
imul
inc
int3
mov
push
iret
insb
ret
or
jae
scas
movl
push
ss
mull
test
outsl
mov
out
and
ds
jns
test
rcr
movsl
mov
stos
jns
fdivrl
fsubl
imul
add
mov
or
mov
inc
push
ret
dec
sbb
inc
fldenv
test
scas
pop
dec
dec
cmp
out
and
mov
aaa
mov
lret
stos
decb
push
push
aad
pop
dec
stos
cmp
xchg
out
sarl
or
insl
aam
enter
or
fdivrp
mov
and
sub
repz
and
dec
pop
imul
aas
jge
lods
push
das
mov
inc
push
lcall
femms
fbstp
push
bound
lahf
sub
aaa
pop
push
fwait
xor
mov
xorb
fnstenv
xor
dec
dec
shl
push
shl
les
sti
out
in
jle
dec
cmp
adcb
dec
jecxz
add
jno
cmp
mov
sbbb
inc
ds
icebp
mov
and
mov
xchg
popf
popa
into
into
mov
sti
gs
int3
cmp
inc
ret
test
and
cld
sbb
or
lods
jmp
adc
lods
andl
jae
push
mov
mov
cmpsb
mov
push
push
inc
je
incb
cld
clc
dec
in
push
push
ljmp
jmp
push
and
mov
int
pushf
jns
jmp
jg
jmp
mov
add
out
cmpsl
sub
pop
cmp
clc
jmp
cmp
dec
inc
inc
int
pop
push
fdivrl
push
push
js
xor
fwait
sbb
fwait
insl
ss
cmp
mov
shrl
leave
sbb
adc
adc
or
imull
xchg
dec
jecxz
add
cmp
mov
int
decb
sub
fs
jns
loope
xlat
pop
xchg
insl
add
bswap
int3
mov
mov
sarl
int
jb
and
jp
or
pop
lret
add
movsl
pop
pushf
fidivrs
les
lret
add
stc
pop
mov
sbb
aam
jns
add
push
mov
or
add
push
lock
mov
in
inc
push
xchg
lods
dec
imul
sbb
xchg
push
test
xor
leave
add
stc
cmp
je
lds
es
ret
jmp
pop
mov
int3
mov
test
in
dec
out
es
stos
jmp
mov
xorl
jnp
aas
mov
rcll
pop
clc
mov
add
addr16
sub
in
imul
and
fdivrl
jb
push
sub
push
push
mov
xlat
roll
lods
sub
fwait
xchg
out
xchg
mov
dec
sub
pushf
paddsb
sub
mov
dec
push
mov
mov
lea
bound
xchg
dec
cmpsl
subb
or
sbb
cmp
xor
mov
filds
jmp
ret
out
mov
iret
and
je
inc
cmpsb
add
mov
adc
loop
xor
xor
or
mov
mov
xor
jge
adc
mov
test
push
fwait
mov
pop
rcr
dec
jne
jle
inc
in
sbb
xor
ficoms
jne
jbe
mov
aad
jle
and
sub
mov
in
das
push
test
lcall
dec
inc
jle
xchg
cmp
push
call
mov
jmp
in
xor
bound
nop
and
dec
test
mov
dec
test
iret
decl
fwait
pop
adc
jno
dec
gs
dec
pop
movsb
push
orb
mov
jo
push
mov
andb
push
and
sub
test
mov
pop
xchg
les
scas
adc
pop
rcl
test
shl
push
movsb
dec
outsl
aas
push
mov
push
stos
fs
ds
je
and
mov
arpl
enter
test
cmp
mov
addb
or
gs
mov
data16
movsl
pop
jle
mov
out
movsl
mov
xor
test
ss
cmp
cld
mov
push
in
xchg
imul
mov
xchg
insb
xchg
sbb
adcl
loopne
out
imul
add
mov
xor
stos
cmp
loop
out
lcall
test
rcll
jbe
add
loope
fwait
repnz
add
cmpsb
jne
fisubrl
sbb
dec
dec
add
xor
jmp
jbe
sbb
pop
jle
cmp
adc
imul
call
in
or
mov
mov
pop
lods
inc
mov
jl
cmp
out
ds
jo
insl
loopne
mov
lcall
mov
ret
xchg
jb
cmp
sub
fimuls
adc
dec
fs
xchg
adc
xchg
mov
nopl
lods
jl
pop
sub
mov
mov
pushl
or
shlb
and
pop
cwtl
out
mov
and
mov
push
in
ljmp
mov
inc
mov
mov
dec
iret
cli
inc
add
jno
fstpl
icebp
test
mov
rorb
aas
inc
inc
mov
pop
mov
xchg
or
and
bound
sbb
mov
test
add
dec
pusha
xchg
xchg
bound
call
es
ficoms
stc
dec
push
jno
push
lret
aaa
mov
int
insl
lea
loopne
cmp
mov
mov
pop
neg
xchg
in
idivb
xchg
add
sub
dec
and
inc
or
daa
jns
ds
xchg
push
rcr
pop
idiv
pop
pop
jmp
dec
pusha
fcmovnb
sbb
pushf
test
adcl
xor
ja
sub
mov
adc
pop
aam
nop
jmp
repnz
jmp
inc
cmpsb
push
mov
xor
inc
pushf
scas
ljmp
lret
ljmp
fcompl
mov
mov
dec
outsb
and
cmp
dec
push
xor
xor
aam
stos
daa
lret
adc
cmp
dec
adc
mov
pop
inc
fstpt
in
pop
xor
pop
mov
sub
sub
mov
and
jmp
xchg
stos
pop
inc
lret
or
mov
shrl
mov
movl
jp
orl
and
bnd
sbbb
jmp
xor
in
mov
fcompl
mov
xchg
enter
in
js
mov
aam
cmc
daa
pop
cmp
lock
imul
pop
out
mov
push
xlat
push
movsl
and
loope
ja
mov
mov
aam
pop
push
xor
pop
bound
jmp
pop
xchg
into
mov
rcll
cld
ljmp
movsb
ficompl
xchg
inc
inc
test
pop
test
test
icebp
pushf
cmp
rcrl
push
leave
fld
or
mov
es
push
pop
xchg
pushf
mov
leave
pop
mov
fidivl
clc
stos
mov
daa
jecxz
xor
in
fadd
pusha
int3
enter
push
shlb
fldt
pushf
lea
lret
std
call
pop
lcall
ljmp
cmp
inc
sti
pop
lock
dec
ret
ja
retw
into
push
pusha
add
outsl
jb
frstor
xchg
cli
jge
sub
inc
fnstsw
sbbb
fsts
mov
sub
pop
sub
mov
add
incl
mov
fidivrs
adc
mov
rcll
push
out
add
sbb
adc
sub
and
pop
add
out
or
scas
sar
lahf
nop
es
xor
cmpsl
jmp
and
shll
adc
jno
inc
mov
loope
inc
pop
out
adc
jne
mov
mov
sbb
xor
subb
shll
mov
sbb
popa
ret
scas
inc
hlt
ficompl
fcompl
mov
sbb
sbb
xchg
mov
push
repnz
in
iret
fistpl
scas
xor
test
mov
push
inc
push
or
xchg
fs
in
shlb
xor
lret
ret
dec
cmp
fprem1
sbb
or
popa
mov
shlb
cmp
je
xchg
negb
mov
or
xchg
outsb
repnz
or
int3
mov
lds
iret
pop
subl
fs
xchg
scas
test
dec
pop
repz
adc
sub
adc
insb
add
mov
push
jl
mov
aad
cld
stos
cmpl
rcl
daa
sub
in
daa
or
int
jp
jl
sbb
mov
scas
and
ss
sbb
cmpsl
mov
jbe
jge
lds
push
dec
test
sbb
xchg
xor
subb
and
rcrb
and
xchg
decl
mov
sbb
out
inc
shll
mov
push
jmp
push
sbb
js
lods
inc
mov
fwait
pop
and
test
std
jbe
cmc
out
lea
sti
mov
lds
xlat
test
out
xchg
or
outsb
pop
mov
insb
cmp
adc
outsl
jge
pop
xor
inc
idivb
cli
or
ret
inc
xor
mov
xor
xchg
mov
test
loop
push
mov
cmp
cmp
aam
aad
ss
and
aas
in
outsb
add
cld
push
adc
add
add
mov
or
into
and
in
sub
or
xchg
pop
xchg
pop
inc
cmc
movsb
xchg
pop
es
mov
add
fdivrs
cmpsb
out
push
popf
and
jl
outsb
push
jmp
and
repz
imul
ror
add
lods
push
mov
movl
mov
cwtl
push
jmp
lret
mov
dec
push
cmpps
mov
repnz
loopne
jl
repnz
jg
hlt
jae
xchg
movsl
aad
dec
pop
mov
sbb
cltd
mov
add
adc
hlt
push
adc
cmpsb
pop
adc
fcomps
sub
push
push
adc
pusha
inc
jae
jno
sub
push
popa
jnp
xchg
ja
mov
mov
jle
xchg
add
mov
lods
cmp
fcmovnb
mov
inc
dec
mov
icebp
repnz
in
fmul
jecxz
inc
jns
mov
add
rcrl
mov
dec
ss
sbbl
lret
ret
jle
std
push
push
fs
fnsave
lret
pop
xchg
cld
pusha
push
pop
sbb
jl
in
or
shl
add
sbb
jp
xor
addr16
dec
aas
inc
jo
nop
dec
mov
sbb
mov
lods
xlat
cs
jnp
aas
ret
jb
outsb
ja
jnp
xchg
rcll
mov
out
jae
or
add
and
push
inc
gs
jmp
inc
sbb
in
push
mov
pop
push
adc
cmp
and
out
pushf
sub
xchg
and
das
sahf
xor
sbbb
pop
lods
sub
jnp
insl
push
stos
mov
cmc
push
cmp
outsb
testl
pop
pop
cltd
and
xor
outsb
mov
jg
and
add
ss
rolb
call
jg
cmp
scas
pop
add
inc
stos
cwtl
les
pop
push
pop
adc
mov
push
xor
mov
shr
leave
cmp
stos
lea
xchg
lret
pop
imul
sahf
jecxz
lcall
pushf
adc
arpl
jbe
in
jle
das
lret
pop
pop
incb
pop
mov
sbb
mov
das
cmp
dec
and
jb
mov
iret
jle
xor
sbb
repnz
mov
aad
imul
mov
mov
add
jo
or
test
mov
test
stc
mov
popa
xlat
decb
or
and
cmpl
les
and
sub
das
xor
je
add
test
cld
jecxz
fsubp
icebp
adc
imul
sub
into
mov
cltd
and
sbb
push
imul
jg
pop
ds
das
test
lret
shrb
xchg
add
sub
mov
rolb
xchg
pop
push
jmp
js
hlt
push
stos
push
or
jb
jnp
add
fmulp
into
sti
mov
inc
loop
test
push
popf
movsb
cmp
mov
popa
and
call
mov
shlb
aas
cmc
test
inc
fimull
es
jnp
xor
je
dec
cmp
insb
xchg
lahf
mov
pop
das
andl
inc
push
and
pop
xchg
es
adc
fs
movsl
push
adcb
lock
call
mov
aad
incl
cmpsl
inc
int
int3
shlb
cmpsb
jo
fdivrs
test
into
rol
rep
arpl
into
cltd
or
dec
fwait
xor
cmpsl
ja
daa
sbb
rcll
push
jno
imul
lret
std
subb
push
addr16
mov
or
es
nop
jge
mov
in
mov
push
mov
and
push
mov
cmp
pop
pop
cltd
lcall
dec
inc
testb
test
cmp
imul
sbb
rclb
in
incl
add
inc
and
popa
and
ret
pop
mov
cmpsl
rclb
cmp
push
pop
test
add
pushl
xor
lcall
jne
fcmovb
fmul
repz
fidivl
out
test
call
aas
add
ficoml
and
lds
cmpsb
adc
mov
jno
fcmovnu
mov
cmp
add
pop
jbe
cmp
rcl
push
xor
aam
sub
pop
nop
pop
fsubrs
nop
xchg
sub
movsb
out
jp
in
or
adc
incb
mov
jae
in
icebp
cmp
lods
mov
pop
push
fs
xchg
jae
add
mov
push
ljmp
call
imul
stc
aam
movsb
mov
addr16
lcall
dec
jg
inc
inc
xchg
jge
jecxz
fs
add
mov
fs
mov
jle
fildll
dec
scas
addl
test
inc
sbb
add
xor
in
pop
lret
xor
mov
std
faddl
les
out
popa
addr16
push
cmp
enter
cmpsb
sub
rorb
mov
aas
mov
or
pushf
pusha
adcl
popa
mov
mov
add
jg
xchg
arpl
cmp
mov
das
jnp
out
cmpsl
jg
xchg
add
jl
jno
jae
outsb
xchg
jnp
dec
xchg
imull
push
repz
fidivrl
imul
mov
fimull
clc
js
push
dec
addb
inc
repnz
sub
push
xchg
jge
loope
sarb
and
mov
lds
je
inc
pop
outsl
add
insb
and
or
test
stc
mov
icebp
dec
mov
mov
cmc
pop
cmpsb
mov
inc
dec
pop
mov
pop
das
push
in
cli
xor
loope
ja
les
insb
es
sbb
lods
add
jle
push
aad
cmp
js
pop
outsl
push
inc
mov
mov
pop
out
adc
cmp
mov
xchg
jge
sbb
mov
push
jo
cmc
and
jge
popf
pop
loope
xchg
sahf
jo
sbb
out
mov
std
and
sub
mov
mov
jo
aad
repnz
mov
int
mov
mov
insl
enter
pop
mov
push
lret
sbb
test
pop
and
in
fs
cmp
popf
push
cmpb
es
fs
je
fs
xor
mov
dec
jl
jp
sbb
cmp
jbe
mov
dec
and
imul
xchg
and
mov
or
push
movsb
push
out
rol
popf
xchg
cmpsl
jb
lds
jg
fnstsw
rcll
mov
cmpsl
imul
into
sbb
aas
xor
jge
fs
mov
jge
jo
test
pop
ljmp
dec
popf
mov
fcomps
xchg
stos
mov
loopne
aas
push
pop
stc
enter
sbb
xchg
mov
movsb
ljmp
sub
int3
mov
ret
call
mov
fisttpl
adc
roll
lahf
ss
popf
xor
out
dec
int3
sbbl
cmp
scas
and
leave
sarl
ret
out
dec
mov
xchg
fstpl
add
daa
fisttpll
pop
xor
cmp
rorl
fisttps
jno
in
and
cmpsl
call
mov
call
loope
or
push
mov
sub
push
sbb
lods
push
stos
cmc
sarb
std
es
test
push
aad
mov
mov
sbb
sar
xchg
or
sub
roll
sbb
hlt
sahf
xor
movl
fbstp
pop
mov
lahf
dec
push
inc
stc
push
aad
inc
push
sti
jl
sub
adc
ljmp
add
fisubs
mov
mov
mov
outsb
xchg
fiadds
subl
mov
cld
leave
fs
add
mov
test
aam
and
icebp
out
stos
sahf
push
movsl
iret
lret
dec
ljmp
popf
push
mov
pop
sarb
icebp
adc
int
das
cmp
xchg
sbb
mov
xor
jmp
add
je
mov
adc
mov
and
mov
and
mov
cli
dec
and
out
out
cwtl
setle
stos
cmp
movsb
popf
push
shl
ficoml
loopne
lahf
or
shrl
and
mov
ret
gs
andl
add
or
hlt
push
inc
aad
in
in
mov
orl
inc
or
in
repnz
add
mov
sbb
mov
cmpsl
outsb
fstpl
dec
sbb
pop
movsb
pop
rcl
mov
test
push
movsb
mov
shr
js
sarl
dec
ret
pop
aad
push
cwtl
fsubr
enter
fucomp
lock
dec
cmpsl
jbe
cwtl
in
loopne
push
cmp
pop
fwait
dec
in
cltd
cmp
add
jmp
rcl
cli
adcl
pushf
jo
mov
out
lret
notb
or
rcl
jnp
mov
cwtl
xor
out
add
movsb
cmp
and
cmp
inc
pop
pop
mov
dec
mov
push
gs
or
icebp
imul
shr
out
pop
lds
or
xor
mov
aas
cmp
repz
mov
push
sbb
ss
js
sub
lods
pop
fildl
aas
mov
pop
sti
ljmp
fsubrp
sti
xchg
xchg
and
fadds
andl
lds
mov
sar
dec
add
outsl
xor
aaa
push
sbb
lret
dec
push
push
mov
and
push
lret
and
push
shll
fs
push
jb
pop
push
jnp
shlb
movsl
sub
push
loop
and
ret
pop
cli
jns
pop
in
xchg
gs
xchg
jb
stos
cli
mov
cwtl
cmpsb
push
xor
andb
jmp
into
mov
xor
out
incl
das
mov
lahf
or
in
int
es
inc
pop
mov
adc
push
mov
xchg
or
out
ret
outsb
xor
xchg
jge
std
vpmaxub
or
std
jecxz
ficomps
addr16
mov
jb
out
sbb
and
push
jbe
enter
mov
mov
aad
scas
push
adc
imulb
dec
xchg
xor
aas
clc
ja
std
mov
mov
add
mov
aam
xlat
sbb
lret
fnstsw
repz
mov
mov
xchg
add
movsb
cltd
sbb
add
cmp
out
loopne
sub
stos
adc
pop
mov
sub
int3
aad
add
pop
lea
div
out
test
mov
sbb
xchg
xchg
icebp
push
pop
xchg
mov
xchg
sahf
xor
inc
in
fs
rcrb
loop
fdivl
pop
insl
loopne
mov
jnp
sbb
xlat
scas
insb
in
jp
nop
fisubl
sub
lods
mov
push
gs
bound
jne
pusha
test
int
shl
xchg
out
ljmp
adc
xor
inc
mov
incl
and
dec
pop
dec
xchg
dec
loopne
mov
jnp
fistl
ljmp
enter
pop
xchg
mov
pop
and
cmp
decb
jg
push
adc
fisttpl
mov
pop
cmpsl
pop
out
jge
shrl
shll
inc
mov
and
stc
xlat
push
imul
pop
add
pusha
push
rcrb
xchg
xor
lods
in
cld
outsl
aam
and
pop
scas
adc
in
aaa
lods
push
adc
xor
mov
int3
push
cmp
sbbl
test
sbb
cmpb
dec
popa
lds
fisttpll
mov
jg
cmp
frstor
ss
fisttpl
and
js
sbb
nop
cwtl
mov
fnsave
imul
movsl
mov
mov
push
call
push
arpl
sub
jbe
push
montmul
cmpsb
adcb
orb
dec
repnz
dec
in
shlb
mov
jae
daa
lret
in
push
sub
xlat
xor
mov
jle
or
mov
lahf
syscall
adc
jp
es
mov
xor
por
push
xor
mov
pop
fwait
pushf
dec
or
inc
std
frstor
jne
ss
add
movsb
ljmp
popf
cmp
dec
cli
or
fidivs
shrb
dec
movsb
fwait
ret
mov
leave
fstpl
cs
mov
aas
shll
sub
stos
inc
pusha
test
jae
xor
xchg
scas
icebp
mov
or
cmp
push
xchg
mov
rcrl
xor
mov
lcall
and
xchg
fadds
jno
mov
xor
cmpb
add
add
sbb
sarl
xor
test
add
push
xchg
lods
fsub
pop
mulb
dec
aaa
mov
out
xor
inc
lahf
test
cmp
imul
dec
int3
fidivrs
jae
ja
das
cli
shll
adc
fisubrs
push
imul
fcmovnb
jnp
lret
xchg
pop
inc
sub
sbbl
xchg
dec
add
inc
mov
sub
mov
pop
lahf
mov
push
faddp
jmp
jae
loope
int
jnp
addr16
dec
mov
cmp
sub
mov
fsubl
mov
stos
popf
xor
bound
pushf
inc
clc
mov
push
mov
addl
lea
sbb
adc
fcmove
mov
pusha
div
jmp
push
rclb
pop
cmp
pop
faddl
sub
clc
iret
push
dec
enter
lods
and
sub
add
insb
mov
mov
xor
rcrl
jbe
jmp
push
scas
mov
call
mov
stos
das
jge
jmp
add
scas
add
adc
xor
stos
lds
mov
je
mov
mov
jmp
roll
repnz
jno
mov
inc
sbb
pop
mov
mov
mov
mov
xchg
sarb
inc
mov
inc
mov
stos
push
jne
shlb
dec
mov
push
out
inc
xchg
xchg
mov
ljmp
pusha
shl
enter
movsb
or
insb
sub
mov
test
pop
jo
lods
mov
pop
or
insl
jg
cmp
cwtl
jmp
or
add
or
inc
mov
cmc
int3
and
shrl
loope
inc
push
inc
repz
cmpsb
lret
fstps
mov
mov
mov
test
add
arpl
mov
cmpsb
popf
scas
or
dec
or
jns
xchg
mov
sub
out
mov
sahf
sbb
mov
xchg
adc
pushf
dec
aaa
sbb
xchg
mov
inc
fucom
xlat
mov
clc
xchg
dec
inc
popa
jg
cld
outsl
xor
sub
arpl
ret
js
jne
mov
push
ret
inc
shlb
daa
test
ds
bswap
scas
hlt
adc
mov
push
in
test
loop
xchg
leave
insl
xchg
adc
lret
pushf
stos
dec
hlt
inc
outsl
mov
xor
push
cmp
inc
and
or
mov
inc
xor
std
pop
add
cmp
xchg
mov
push
inc
fildl
movsl
cmp
mov
sub
cld
or
rcl
mov
pop
aaa
test
aaa
iret
scas
pop
xchg
sub
fadds
daa
cmp
pop
sub
lods
in
xor
scas
insb
hlt
jae
push
dec
test
fsubs
daa
mov
dec
fsubs
sar
outsl
test
aaa
int
out
add
mov
and
mov
rcll
dec
jns
in
inc
cmp
xor
paddw
and
insb
jne
fdivl
pusha
stos
and
inc
es
xor
movsl
sbb
cltd
xchg
hlt
adc
push
daa
inc
xor
fidivl
dec
leave
push
stos
sti
clc
sub
int3
ficoml
sub
outsl
mov
loopne
fsts
and
aaa
pop
jns
fisubrl
inc
adc
adc
xor
rolb
sbb
mov
test
sub
call
and
cltd
das
testl
jl
mov
pusha
jp
sbb
cwtl
sbb
lcall
inc
sbb
lods
adc
inc
jl
cmpsl
dec
mov
lret
negl
cld
rorl
rorl
idiv
dec
adc
stc
pop
outsb
cmp
test
imul
sbb
popf
sub
dec
and
clc
lahf
into
cmpsb
aad
pop
mov
push
shlb
mov
shlb
xchg
sbb
js
jae
mov
popf
test
push
adc
inc
add
lods
jae
adc
cwtl
imulb
sbb
cmp
repnz
daa
and
movsb
jecxz
mov
xlat
pop
mov
orb
mov
loope
fcoml
orl
out
test
test
or
inc
out
jns
and
pop
cmc
add
dec
repnz
jnp
jge
mov
jae
stos
cld
sbb
lods
adc
insl
addl
call
in
lcall
popa
ror
sub
jmp
jnp
lods
push
xor
push
mov
inc
cs
sti
mov
mov
loop
sub
mov
mov
nop
imul
repnz
jl
pop
mov
psllw
loope
pushf
mov
inc
jns
add
andl
aas
pop
add
in
add
stos
movsb
dec
jecxz
mov
leave
insl
sbb
int
xchg
into
gs
fistpl
or
cmpsl
mov
fstpl
push
mov
dec
pop
fcoms
lods
fwait
jl
cmpsw
adc
gs
xchg
cs
push
mov
or
mov
out
fsts
sbb
adc
fwait
in
aas
mov
sub
test
pop
or
mov
in
or
add
jo
scas
int3
and
mov
mov
cmp
sbb
fdivl
cmp
dec
xlat
add
mov
sub
and
adc
mov
call
test
int
insb
jmp
sti
repz
push
xchg
sub
fdiv
mov
sub
insl
inc
imul
pushf
pop
test
andnps
push
out
imul
fdiv
mov
imul
mov
jae
pop
mov
dec
xchg
loop
mov
mov
or
lods
fcoml
std
xor
dec
push
or
decb
push
cmc
or
cmp
shll
adc
out
cmpsl
out
jecxz
jbe
sbb
lds
ds
js
inc
jle
mov
or
xchg
push
icebp
adc
mov
pop
es
shl
adc
out
rol
cmp
cmpsl
imul
cmp
sbb
dec
sub
scas
xchg
dec
in
pushf
jae
testb
sbb
stos
aas
stos
scas
notl
lds
daa
cmpsb
out
loop
loop
lahf
ds
outsb
pop
mov
cmc
jo
mov
cmp
test
shll
mov
test
lods
lahf
filds
xchg
hlt
scas
inc
daa
cmp
pop
jnp
dec
pop
ss
pop
movsl
fcomps
mov
dec
jne
xor
std
xchg
loopne
fldcw
inc
sbb
hlt
cmp
add
mov
and
and
arpl
jle
xchg
xor
fisttps
js
mov
fnstenv
lods
sub
push
sbb
and
fidivs
ret
int
pop
and
rcll
icebp
iret
in
das
push
icebp
inc
rol
cmp
mov
and
xor
dec
adcl
sbb
dec
out
and
mov
mov
add
mov
sahf
lods
and
cmp
sbb
outsb
test
loopne
insl
ret
cmp
aad
sbb
shlb
pop
in
lea
sub
lahf
cli
ljmp
sbb
hlt
push
lret
push
insb
mov
cltd
mov
push
imul
push
stc
mov
mov
aaa
xchg
dec
jnp
mov
dec
aam
jle
ret
pop
jmp
fisubrl
movsb
sbb
test
xchg
cmpl
jg
aam
jns
gs
mov
mov
shll
subl
cmp
scas
popl
repz
adc
pop
jns
and
or
stc
mov
out
inc
xor
les
push
lret
pop
fcoml
and
das
popf
pop
inc
push
test
stos
lret
push
enter
enter
xchg
and
lods
dec
and
mov
jmp
repnz
cmp
push
in
popa
fdivs
mov
push
mov
adc
sbb
mov
mov
pop
repz
sbb
adc
sbb
sub
mov
mov
in
jo
cltd
loop
mov
xchg
outsl
inc
jae
mov
test
cmp
adc
sbb
push
push
mov
dec
and
jle
out
std
mov
mov
mov
jno
or
add
pop
or
lea
and
cmp
fwait
arpl
outsl
xor
lods
sti
push
pusha
jo
add
pop
push
rorl
imul
loope
outsl
jp
jg
mov
cmc
imul
add
adc
adc
cmp
push
mov
push
xchg
mov
popf
push
mov
in
sub
lcall
cmpsl
add
repz
psadbw
and
lea
bound
notl
xchg
xchg
sub
inc
push
in
mov
cmp
addr16
lcall
lcall
pop
sub
leave
jecxz
push
pop
mov
mov
in
jbe
ja
lahf
dec
xchg
sub
lods
outsl
sub
xchg
pop
repz
sub
popa
cld
xor
jge
mov
hlt
xchg
popl
fwait
sub
aad
lret
int
pop
mov
divb
scas
lret
cmp
gs
mov
lret
fsubs
test
mov
and
jg
and
nop
inc
gs
jno
pop
cltd
xor
sbb
xchg
mov
mov
inc
inc
cld
aaa
pop
push
cmp
rolb
and
push
cwtl
xchg
data16
sti
inc
test
dec
add
push
or
mov
mov
lock
in
test
add
sbb
jg
and
out
nop
clc
fidivs
push
testb
xchg
aad
scas
add
out
inc
xchg
or
in
push
fistps
xor
cmp
inc
stc
mov
jae
add
popa
or
int3
lahf
in
rorb
dec
shrb
push
jae
testl
mov
mov
mov
inc
fimull
icebp
ljmp
fucomip
xchg
rcrl
xor
mov
cmp
dec
addr16
sbb
and
adc
out
cmpsb
sbb
pop
lock
push
lock
cmp
ret
pop
adc
dec
fmull
xor
arpl
fldt
das
cmp
in
stos
clc
fstpl
fcoml
and
arpl
in
push
leave
add
or
int
jno
pop
jecxz
mov
int
outsl
aas
into
push
in
std
jae
in
jo
jae
push
mov
mov
or
sarb
adc
sub
fwait
pop
in
jno
ror
xchg
sub
jae
sbb
mov
mov
mov
mov
adc
in
stos
cmc
push
cmpsl
test
mov
mov
fcmovnb
push
lods
icebp
repz
mov
clc
pushf
inc
and
mov
lds
inc
and
xchg
cltd
push
adc
cld
cmp
popf
rorl
sub
shlb
sahf
cmp
pop
lahf
jmp
push
in
repz
mov
sti
jge
mov
mov
sub
inc
mov
cmp
xchg
pop
scas
push
pop
pop
std
add
adc
lock
in
inc
add
inc
lea
shll
xchg
adc
mov
lret
bound
add
rcrb
dec
loopne
cli
mulb
insl
addr16
fmull
ret
or
gs
inc
cld
mov
mov
xchg
gs
cmpsb
mov
push
sarl
xor
sti
xchg
leave
loopne
jmp
xchg
fdivrs
cmc
rcll
jns
rorl
repnz
xchg
pushf
scas
or
mov
cld
sub
pop
push
cltd
insb
aam
lods
cmp
bound
jmp
jb
jmp
aas
pop
ret
repz
insb
mov
hlt
jb
mov
add
cwtl
push
pop
cmpb
pop
mov
dec
lock
ret
sub
rcl
mov
shl
add
gs
mov
rcrl
sbb
xor
mov
add
test
mov
imul
cmp
push
jo
push
mov
push
sbb
jecxz
push
jb
sti
movsb
jbe
test
jbe
cwtl
and
daa
mov
pop
xor
test
dec
push
loopne
mov
lock
dec
fdivrp
xchg
out
sub
out
dec
iret
test
and
das
pop
addr16
out
pusha
lds
pop
add
fucomi
xchg
mov
cmp
popf
in
scas
and
jmp
insl
push
popa
out
bound
pop
add
jbe
mov
push
popf
fucomi
xchg
push
xor
jns
inc
shlb
mov
arpl
outsl
insl
pop
icebp
lret
mov
jmp
push
in
rclb
adc
insb
xchg
pop
addr16
pop
push
jge
inc
test
cmp
xchg
or
jl
xchg
mov
adc
and
sub
xchg
dec
mov
mov
dec
dec
push
add
or
cld
popf
xchg
out
jns
sbb
fwait
insl
add
mov
mov
iret
enter
shlb
or
push
jmp
xlat
mov
adc
clc
mov
xchg
mov
pop
outsb
je
pop
dec
adc
in
mov
sbb
jp
aaa
in
andl
sar
or
repnz
stos
and
xchg
mov
call
mov
fucomi
pop
xor
pop
mov
sbb
std
xor
mov
push
xlat
jns
icebp
dec
pop
movsb
push
fsubrs
roll
fcompl
loope
lds
hlt
jg
push
in
mov
fidivs
loopne
xchg
sbb
cwtl
lods
xchg
push
mov
les
cld
in
mov
pop
and
daa
jle
sub
and
mov
mov
insl
sub
ficoms
jo
mov
in
sahf
in
shrl
js
test
incb
push
call
lods
add
mov
leavew
std
int3
mov
inc
outsb
sbb
xchg
cmpsb
mov
fdivs
dec
add
addr16
mov
mov
cmc
dec
jnp
sbb
adc
repz
mov
push
sbb
mov
push
daa
lcall
mov
dec
lods
out
mov
mov
sub
xchg
popa
xor
mov
imul
bound
cli
aad
cmpl
sbb
pop
xor
lds
testb
test
popf
scas
jno
xchg
sub
xchg
pop
aad
pop
mov
idivl
mov
mov
jecxz
xchg
sbb
xchg
stos
adcb
mov
sahf
xor
mov
cmp
imul
or
loopne
sub
call
test
icebp
sbb
adc
in
clc
adc
mov
sub
adc
push
push
mov
push
sbb
ja
cmp
or
and
les
out
adc
push
inc
sarb
addb
dec
sbb
mull
or
fbld
repnz
sahf
jg
movsb
fwait
andb
loopne
pushf
adc
dec
push
mov
dec
pop
xchg
imul
sti
loop
add
xchg
xchg
dec
inc
jnp
jno
push
test
movsb
ja
dec
pop
dec
out
cli
hlt
outsl
lahf
ss
popf
pop
jo
out
mov
jne
mov
lods
and
xchg
repz
sub
push
pop
rol
pop
cmp
xchg
hlt
push
pop
mov
or
mov
mov
aas
data16
repz
cmp
cmp
into
in
je
pop
lods
fsubs
mull
sarb
repnz
jle
cmp
or
in
push
dec
addr16
inc
sbb
repnz
scas
pop
in
push
lods
fprem
sub
repz
cmp
cmp
rorl
sti
sbb
ja
push
repnz
push
popa
mov
mov
bound
adc
xchg
adc
dec
xchg
and
and
mov
daa
pop
mov
push
ds
repnz
pop
jne
lcall
sahf
xor
add
mov
outsb
cpuid
lahf
xchg
push
movsb
dec
cwtl
mov
jmp
pop
lahf
sub
mov
xchg
inc
mov
xor
in
mov
cmp
lea
mov
add
jg
cmp
cwtl
xor
fsubr
inc
cmp
ss
inc
fstpt
cmc
jne
in
pop
into
cs
outsb
outsl
in
fwait
sti
iret
mov
and
shr
xchg
inc
or
push
movsw
jns
and
push
inc
outsl
push
jns
push
aad
cmpsl
fstl
clc
inc
lret
pusha
fldt
lret
fdivp
addb
dec
loope
cli
jne
mov
dec
jge
hlt
inc
or
lods
clc
ja
scas
test
xor
xor
js
add
xor
lcall
pop
sarl
mov
jns
push
and
mov
insb
bound
rclb
daa
or
push
xor
mov
xor
mov
hlt
push
fildll
int3
fidivrs
out
pop
rol
shrb
movsl
mov
sub
fnstenv
dec
push
loop
daa
pop
icebp
iret
fstpt
push
xchg
rolb
cmp
pop
cmp
xchg
insl
push
inc
shlb
hlt
hlt
mov
pop
jg
xchg
and
xlat
xor
ljmp
mov
stos
adc
test
push
movsl
push
add
ljmp
dec
jae
test
aad
push
gs
xchg
pop
out
pushf
imull
dec
push
dec
inc
ficompl
mov
les
shr
ds
push
cwtl
fwait
mov
cmp
scas
out
lds
add
mov
push
mov
adc
pop
daa
xchg
lods
rcrl
inc
fdiv
mov
scas
or
jne
jbe
loopne
pop
rclb
jnp
xchg
lods
xchg
mov
loope
sbb
loop
jns
idiv
push
lds
iret
sbb
lods
add
mov
adc
outsb
or
shl
jae
sub
mov
mov
hlt
int
jbe
sub
pop
dec
dec
cli
jne
jecxz
setb
hlt
scas
inc
mov
adc
push
nop
push
push
or
pop
cmc
inc
mov
dec
sub
jl
and
call
mov
adc
ljmp
in
fisubrl
movsl
add
in
jno
stos
mov
frstor
jne
jmp
push
mov
out
call
mov
add
add
xor
shrb
call
cs
cwtl
icebp
ljmp
aaa
fistl
stos
jae
lock
movsl
adcl
popf
xlat
jno
or
js
cmc
sar
jp
pop
xor
xlat
repnz
in
mov
adc
push
xlat
or
movsb
cltd
mov
and
xor
jns
mov
gs
orb
mov
aam
lret
lock
adc
xor
or
out
mov
inc
dec
clc
xor
sbbb
mov
mov
aam
cmc
cmp
fdivrs
pop
cmpsb
sbb
and
ja
jmp
outsb
hlt
test
or
fisubs
mov
arpl
xchg
stos
int
and
in
xchg
fnstenv
outsl
mov
sub
mov
sbb
sub
jg
cmp
test
mov
or
adc
shlb
sti
mov
inc
jmp
loopne
or
popf
add
and
xchg
pop
mov
jnp
popf
dec
pop
jecxz
mov
sti
dec
mov
push
test
xchg
dec
insb
mov
loopne
fcmovnbe
shl
mov
cmp
mov
outsl
jle
mov
ret
mov
dec
es
or
mov
fadds
and
mov
mov
in
fdivl
push
mov
xchg
and
sbb
jbe
xor
add
cld
inc
mov
mov
jmp
and
aaa
hlt
out
repz
jnp
outsl
dec
mov
mov
add
loope
push
addr16
imul
inc
das
scas
lds
mov
frstors
adc
out
jbe
out
pop
cltd
je
and
cmp
lcall
movsb
test
pop
and
in
mov
insl
xor
xchg
imul
hlt
push
in
stos
iret
jno
push
mov
adc
mov
mov
hlt
daa
scas
cmp
and
or
mov
ss
mov
and
out
mov
pop
sti
cld
and
or
push
pop
nop
stos
test
mov
cmp
repz
jns
jbe
stos
mov
gs
pushf
fcoms
xchg
dec
aaa
sbb
aam
xchg
and
jp
mov
add
dec
sbb
outsl
adc
xor
std
pop
xor
push
hlt
jl
mov
adc
daa
cmp
imul
lea
pop
push
push
push
pop
jg
int3
mov
leave
fisubrl
mov
scas
jne
add
mov
jno
and
repnz
cltd
jp
inc
add
shlb
mov
jmpw
lock
or
fld
rclb
lock
cmp
inc
add
call
in
pop
push
ja
popa
insl
movsb
sti
jbe
push
fstps
sbb
rol
pop
insl
stc
xlat
pusha
fnstcw
pop
jl
pusha
scas
mov
aas
jecxz
add
sub
sbb
pop
lds
add
mov
flds
or
mov
push
jecxz
cmpsb
ret
repnz
push
dec
rcrb
in
fimuls
mov
inc
sub
loopne
aam
push
orb
push
pop
mov
int3
in
aaa
xchg
or
lds
mov
mov
xchg
cmpl
es
clc
dec
pop
adc
jl
arpl
sbb
popfw
inc
movsb
push
sub
andl
jge
dec
orl
fwait
mov
out
in
pop
mov
sbb
stc
data16
mov
iret
or
push
or
push
xchg
dec
lods
mov
xchg
jmp
mov
xchg
jne
icebp
js
jecxz
mov
push
sub
popf
jnp
xor
out
aas
roll
test
jbe
cltd
stos
testb
ror
pop
jmp
add
cwtl
dec
gs
pop
push
ss
stc
fwait
outsl
cmpsb
ja
cmp
shl
scas
popf
out
xchg
xchg
sbb
mov
in
mov
pop
dec
loope
or
call
or
outsb
jmp
sub
mov
lcall
adc
ficompl
cli
pushf
and
xchg
push
jo
xchg
fcmove
stos
fildl
fidivrs
jno
insl
iret
fbld
adc
repz
into
pop
call
fstpl
popf
je
sub
mov
cld
xchg
jnp
test
sbb
sbb
cmp
nop
dec
jno
stc
or
test
cmp
inc
xchg
int3
aam
lds
sub
jae
xchg
pushf
mov
xchg
cmp
jbe
ss
sub
mov
mov
outsl
out
adc
sub
mov
aaa
cmp
test
mov
xor
scas
push
mov
inc
cmpsl
scas
jb
out
enter
stos
pop
out
and
int3
call
iret
mov
cmp
lret
pop
aam
aad
jno
jns
out
ret
and
cmp
add
mov
and
sbb
and
lcall
std
mov
idivb
adc
arpl
div
leave
or
in
mov
sbb
or
mov
lahf
xchg
mov
or
add
rorl
pop
and
jne
dec
xchg
jg
data16
sbb
inc
adc
mov
cmp
mov
add
nop
outsb
dec
cmpsb
push
sbb
jo
xor
or
mov
cwtl
in
or
sbb
cmpsl
out
xchg
xor
movsb
sbb
xchg
dec
ljmp
jae
push
sbb
jb
test
inc
xchg
pop
inc
int3
mov
or
cmp
rorb
mov
outsl
dec
push
xlat
aas
rcll
sti
shlb
xchg
pop
inc
mov
lahf
imul
dec
mov
xchg
in
inc
in
aam
cmpsl
add
insl
lret
loope
int
imul
sbb
cmp
adc
in
daa
xor
je
leave
xchg
sub
mov
pop
aaa
cmp
ja
pop
mulb
das
decb
rclb
je
push
push
out
and
xchg
test
jnp
cmp
cmp
pop
jge
or
pop
call
xor
pop
mov
pusha
xchg
jecxz
popf
cltd
sub
sub
ret
hlt
xlat
push
mov
cmp
cmp
mov
mov
push
out
add
and
push
push
mov
xchg
jo
sub
or
loope
pop
aad
dec
cmc
inc
es
push
fsubrs
xchg
pushf
sub
outsb
inc
xchg
int3
pop
pushf
xor
std
xor
sub
in
push
sub
test
and
sarb
jmp
add
mov
shrb
pop
idivb
or
xlat
stc
pop
outsl
jl
mov
negl
pop
mov
pop
imul
mov
pop
xchg
xchg
mov
subl
push
test
repz
nop
das
ret
mov
or
pop
pop
push
push
ja
push
mov
xchg
push
jne
xor
in
inc
decb
mov
pop
clc
sub
stc
mov
add
and
lea
cmp
leave
scas
mov
jp
ja
add
ds
pop
push
push
mov
jl
add
push
xor
out
sbb
lods
js
adc
aam
andb
ret
ret
sbbb
jnp
roll
dec
rclb
subb
pop
fadds
test
or
lea
dec
outsl
ret
clc
mov
mov
jg
mov
jns
mov
call
cmp
or
adc
xchg
sbb
push
sbb
iret
dec
jo
mov
jg
xchg
mov
and
data16
idivb
xchg
test
mov
ss
pusha
pop
pop
mov
mov
xlat
lcall
test
sbb
xlat
repz
push
jbe
rcl
sarl
pop
fldenv
fnsave
pop
sti
jecxz
inc
mov
repz
insl
mov
mov
lahf
mov
push
movsb
push
inc
mov
ficoms
stc
or
inc
jb
stos
pop
aam
lahf
add
pop
xor
xchg
pop
mov
jno
sub
inc
rol
jmp
pop
ret
xor
aam
sbb
and
cmp
xchg
push
push
mov
pop
adc
stos
and
stos
push
inc
jno
cli
and
in
ret
pop
lock
fsubl
and
push
inc
jnp
push
xor
inc
pop
inc
fsubl
nop
inc
fildl
add
sbb
sbb
dec
adc
xor
mov
sub
pop
cmp
mov
mov
push
mov
cmp
ljmp
and
jmp
sbb
jle
sbb
clc
sub
daa
pop
sbbb
cli
adc
cmp
xor
inc
sub
jecxz
emms
inc
sbb
or
xchg
cmc
roll
adc
sub
mov
push
rcrb
inc
mov
std
add
xchg
sub
push
das
mov
divb
pop
imul
sbb
icebp
push
pop
mov
xchg
fs
xchg
or
jo
out
cli
testb
adc
xchg
lods
mov
mov
out
out
ljmp
cmp
insb
lret
push
sbb
cld
loop
and
cmp
test
call
mov
add
nop
mov
aam
nop
dec
xchg
push
jno
ljmp
pop
jnp
dec
mov
insb
add
mov
loopnew
pop
call
popa
mov
scas
mov
jmp
cmp
dec
inc
inc
mov
cwtl
xchg
scas
cmp
insb
maskmovq
imull
xorb
aas
loop
pop
outsl
loop
testb
add
dec
je
hlt
orl
jno
loope
cltd
mov
ret
mov
cli
ss
bound
push
scas
outsb
xchg
int
xor
jmp
dec
movl
push
rorb
bound
fwait
out
inc
mov
es
sti
jo
pop
cmp
mov
movsl
int3
mov
ljmp
les
jecxz
or
jne
xor
xchg
xchg
add
cmp
insb
mov
jnp
dec
xor
xchg
xchg
lahf
inc
dec
cltd
xor
nop
outsl
adc
mov
jp
cmp
push
adc
movsb
ds
push
les
or
fs
imul
xor
addr16
insl
jge
aaa
pop
cld
insb
and
dec
push
imul
test
sub
repz
and
inc
test
pop
popf
fs
cmp
push
movsb
xchg
mov
push
cwtl
popa
sti
sbb
sub
dec
in
movsl
add
jne
mov
pop
cmp
push
mov
enter
xchg
test
mov
mov
insb
lods
inc
mov
pushf
push
ljmp
jno
sub
jecxz
insb
dec
push
lds
icebp
insb
jnp
rorl
inc
test
out
pop
inc
out
in
cmpsb
pop
mov
ds
jns
mov
lahf
pop
add
pavgw
adc
pushf
push
ljmp
fidivs
mov
add
inc
int
nop
cmpsl
movsl
sub
cltd
pop
sub
xlat
dec
in
sbb
jno
iret
cmc
sbb
mov
inc
stc
cmp
mov
cmp
adc
inc
sbb
sbb
or
mov
add
cmp
adc
mov
fnstsw
jg
rorl
pop
mov
ret
mov
in
stos
notb
call
ja
subl
and
mov
lcall
mov
loopne
push
xchg
loope
loop
jns
sbb
mov
aad
cld
jnp
fcmovnbe
pop
push
mov
ja
jge,pn
xchg
movsb
stc
xchg
sub
fidivrs
adc
sti
das
call
cmp
addr16
leave
cmp
sbb
lods
pop
cli
iret
data16
fwait
das
dec
popf
jmp
daa
jno
fsubs
or
pop
fdivr
pusha
add
inc
sbb
pop
mulb
mov
out
cld
lods
mov
shlb
rclb
dec
pop
je
xchg
adcl
inc
das
dec
dec
mov
mov
xchg
jo
xchg
addl
jae
jo
mov
test
jge
insb
popf
clc
push
test
mov
mov
in
mov
mul
or
repz
std
sti
nop
dec
pop
dec
stos
aaa
test
jns
ljmp
dec
and
jecxz
pop
dec
inc
pop
hlt
jb
sti
popf
push
sbb
out
iret
jmp
mov
repnz
andb
jmp
lea
mov
ljmp
fwait
cmc
pop
mov
xchg
nop
scas
rorl
movsb
or
call
int3
sub
ljmp
imul
outsl
xchg
sub
add
mov
xor
mov
xor
ret
cld
cltd
lock
cmp
mov
inc
in
pushf
adc
fs
fisubrl
xor
or
lret
arpl
push
inc
hlt
test
stc
shl
inc
addb
jne
ja
jbe
bound
sahf
cmp
sbb
clc
sahf
jge
sbb
xchg
pop
pop
sub
push
aaa
or
xor
jno
test
pop
scas
cs
cs
pop
xor
fchs
fwait
int
push
in
test
lret
out
push
shlb
std
ljmp
punpcklbw
dec
mov
je
sbbl
mov
out
loop
sbb
jp
or
fwait
clc
inc
adc
xor
add
pop
inc
mov
cmp
out
mov
popa
test
push
bound
call
es
cmpsl
cmp
push
nop
jns
jge
sbbl
into
mov
popa
arpl
and
aaa
or
mov
push
sub
sub
jl
movsl
xorl
sub
sbb
ja
mov
call
jb
scas
mov
data16
push
mov
xchg
leave
mov
stc
lret
ret
cmp
leave
js
jmp
inc
into
push
scas
adc
scas
xor
xor
rclb
cmp
icebp
or
jns
lods
and
and
cmpsb
mov
mov
and
sub
gs
sub
jmp
stc
xor
std
dec
cli
lea
popf
int3
lahf
jge
adc
inc
out
ja
xor
jmp
repz
test
cli
addb
mov
pop
mov
pop
jo
jne
sbb
iret
mov
jmp
sub
outsb
sbbb
neg
jae
test
movsl
cli
cmp
inc
fs
aam
imulb
cmp
std
test
mov
cmc
xor
jg
xor
xchg
dec
xor
xchg
scas
jno
sbb
jg
out
popa
fwait
adc
jo
aad
inc
pop
ljmp
inc
mov
lea
xor
loope
les
xchg
iret
or
in
push
push
lret
mov
pushf
test
test
push
xor
test
mov
inc
mov
mov
pop
lcall
ret
jmp
cmp
sub
aaa
incl
popa
movsb
mov
lcall
pop
xchg
mov
dec
lahf
cmpsb
shrb
push
mov
out
pop
insb
das
mov
scas
inc
cmp
aad
arpl
movsb
in
insb
mov
outsl
adc
enter
sub
ss
popf
aaa
mov
sub
jp
test
clc
dec
cld
outsl
jno
inc
sub
dec
loop
cmp
out
pusha
xchg
xor
add
repz
mov
pop
jnp
push
cmp
addl
rcrl
pop
or
clc
inc
mov
xor
push
sbb
aad
cli
xchg
fnstsw
int
mov
sub
mov
cld
jle
sbb
push
mov
cmpsl
icebp
outsb
loop
adc
rcr
loop
push
inc
mov
xor
fnsave
and
push
inc
call
cmc
ljmp
jne
mov
xor
push
and
ret
idivl
or
aas
sub
fxtract
or
leave
inc
stos
xchg
in
movsl
mov
or
cmp
pop
movsb
jp
mov
lds
adc
dec
mov
push
in
jnp
arpl
lds
inc
inc
push
out
cmp
fs
mov
sub
adc
push
pop
xor
jmp
jecxz
movsb
aam
cs
mulb
add
mov
mov
xchg
sub
xchg
decb
lea
and
lret
subb
cmpsl
sbb
int
test
out
pop
sbb
lret
lret
pop
pop
fidivl
xorb
cmpsl
and
mov
roll
divl
fstl
and
sbb
push
aam
xchg
in
or
or
jge
lods
into
loopne
add
sub
nop
inc
xlat
outsb
ja
sbb
out
cmp
or
or
mov
xchg
sub
aad
pop
mov
lods
lret
pop
mov
mov
or
repz
into
and
mov
stos
gs
or
or
add
push
dec
cmpps
and
aas
pop
pop
testb
insl
and
pop
ret
push
or
or
push
sub
fcomip
inc
dec
add
gs
push
ja
fmuls
outsb
repz
mov
leave
and
or
mov
test
jbe
jge
jne
dec
sahf
out
test
xchg
jae
mov
inc
jno
push
into
ret
and
into
ficompl
fucom
mov
push
sbb
adc
movsl
icebp
push
xor
xchg
jno
iret
push
iret
adc
out
bnd
push
mov
leave
lds
xchg
mov
mov
cld
or
xlat
cmp
xchg
push
and
xchg
add
lahf
stos
mov
nop
int3
dec
mov
aad
andb
loope
push
sahf
ja
sub
inc
sub
aaa
addr16
sbb
jbe
adc
lahf
xor
aaa
pop
outsb
enter
inc
arpl
loope
mov
ret
adc
notl
mov
rcrl
or
in
or
sub
out
ja
xor
mov
and
sub
pop
pop
ror
shl
pop
push
fwait
lods
cli
or
jp
push
ror
imul
pop
adc
cmp
and
inc
cmp
jb
in
es
sub
notl
cmpsb
es
or
adc
mov
ds
add
scas
test
call
pop
inc
enter
cmpl
push
fimull
mov
xchg
xor
rcll
testb
cmp
push
call
push
out
push
jg
xor
js
or
aam
pushf
add
and
aam
pusha
testl
jb
fidivs
push
insl
jmp
dec
add
lret
and
stc
fdivrs
adc
fdivrl
stc
int3
rcl
cmc
mov
roll
adc
dec
mov
ror
adc
add
sahf
orb
inc
arpl
scas
scas
push
add
push
int
xchg
sarb
lcall
push
add
stos
cmp
scas
jns
xor
fcomps
mov
cmp
and
xor
mov
lret
mov
lret
push
orb
leave
sub
adc
pop
sub
mov
in
out
clc
sbb
dec
lret
aas
jle
sub
sub
mov
dec
push
sbb
enter
adc
andb
add
xor
cs
inc
mov
arpl
push
test
adc
insb
data16
adc
cs
addr16
fs
arpl
out
pusha
cmc
add
or
arpl
loop
sbb
leave
ds
sub
insb
pop
jbe
lock
inc
inc
mov
jmp
pop
push
call
pop
cld
outsl
xchg
sbb
sub
dec
rcl
pusha
lock
jl
push
xorb
mov
add
sub
adc
clc
ja
and
push
vpcmpeqd
popl
out
xor
movsl
in
pop
adc
adc
js
push
mov
loopne
and
in
or
mov
mov
fmuls
rolb
call
lahf
outsl
sbb
mov
ss
lock
lcall
inc
sbb
mov
in
lret
jne
out
in
jae
mov
aaa
fdivrl
fdivl
ret
sti
push
fwait
cld
cld
push
cmp
sub
or
lahf
jmp
sbbb
sbb
imull
in
stos
add
or
popf
sub
cmp
xor
aas
add
jns
adc
jb
in
push
pop
pushf
stc
jge
out
fldenv
push
das
cmpl
pop
call
js
in
pusha
mov
push
xorl
mov
imul
push
sub
outsb
mov
stc
cmc
mov
test
push
es
and
jno
fcoms
pop
push
jle
fbld
and
subb
mov
or
cwtl
das
jno
mov
lret
xor
mov
in
stos
test
xchg
xor
sub
loope
clc
std
outsb
mov
in
lret
add
cmpsl
ret
mov
or
decl
sbb
mov
cmp
data16
mov
scas
xor
add
push
aaa
pop
xchg
scas
xor
jb
inc
adc
xchg
and
out
lret
fdiv
push
sub
push
pushf
xchg
data16
loope
jo
aaa
lods
pop
aad
push
lods
data16
mov
mov
in
inc
ljmp
cmp
es
inc
out
mov
loope
sbb
add
and
dec
and
out
out
xchg
xchg
sub
add
xor
jp
call
pop
push
outsl
push
cmp
testb
xor
popa
scas
mov
mov
sbb
jo
xchg
inc
out
push
or
mov
or
xchg
ret
cmp
pop
les
loope
push
sbb
mov
movsl
movl
cld
cmp
aaa
jb
cltd
cmp
scas
mov
push
push
jnp
inc
lods
mov
or
leave
pusha
jae
pop
adc
sbb
pop
cmp
xchg
mov
pushf
mov
out
cmp
pushf
mov
mov
inc
lods
cmp
jnp
xor
sbb
jmp
adc
jo
push
xchg
and
push
pop
mov
push
sub
in
lahf
fimull
xchg
stc
lods
jp
idivl
mov
push
cmp
push
xor
push
jno
scas
outsb
std
push
vcvtdq2ps
stc
xor
inc
and
pop
loop
cld
cwtl
dec
mov
pop
mov
pop
movsb
cwtl
ja
xor
js
jns
mov
inc
clc
push
pop
xor
cmc
addr16
sbb
clc
aas
aam
mov
push
loop
lcall
inc
in
int3
mov
mov
in
adc
mov
movsb
mov
icebp
mov
movsb
push
int3
jg
dec
jbe
call
or
dec
test
jl
inc
lods
xchg
jecxz
popf
stos
mov
mov
mull
push
sbb
cmpsb
xchg
jae
loope
out
jae
std
subps
idivb
push
fstps
sub
fstpl
imul
int
lcall
fsubrl
popf
call
lds
add
stos
fistl
fisttpl
cs
sub
sahf
shlb
gs
icebp
or
mov
add
or
pop
or
addr16
fsubr
push
or
icebp
push
stos
cltd
rolb
in
sbb
add
xchg
shlb
lret
xchg
orb
pop
subb
push
xor
or
bound
in
dec
pop
inc
les
andl
scas
jne
or
mov
testb
sub
sbb
xchg
mov
sbbb
or
in
sahf
inc
push
jmp
mov
sbbl
jecxz
push
mov
add
push
daa
mov
bound
mov
mov
and
enter
mov
subl
jmp
fwait
mov
loopne
jb
push
lds
movsl
adc
daa
inc
test
mov
pop
mov
sub
stos
fildll
push
int3
adc
leave
test
fnsave
xorb
test
shl
mov
aaa
rcrb
push
pop
jle
mov
mov
fldl
dec
cmp
xor
cwtl
sub
lret
dec
and
xor
or
sahf
test
iret
je
mov
and
fucomi
arpl
mov
fcoms
addr16
in
pop
loope
aam
in
inc
in
push
mov
inc
stos
scas
fdivl
mov
mov
pop
push
fisubs
stos
push
push
shll
js
jo
and
iret
adc
fistl
movl
aad
jo
adc
xchg
cmc
jnp
push
stos
fwait
imul
mov
or
xor
pop
jb
into
enter
xor
lret
cli
les
mov
pop
sbb
mov
add
pop
repz
pop
aaa
pop
mov
addr16
mov
in
test
dec
fistps
mov
data16
sbb
enter
or
add
test
dec
cs
mov
jp
sbbl
sbb
sbb
jmp
pop
shlb
testl
add
mov
outsl
dec
int3
sbb
jnp
jo
add
dec
mov
jp
pop
sahf
jp
ss
je
xchg
fisttpl
sbb
xor
rcrl
add
jnp
xchg
jmp
pop
loope
jo
pop
add
jl
mov
mov
xor
mov
dec
push
insb
insl
test
popf
movsl
cmp
sub
jecxz
push
xchg
inc
adc
es
es
ret
lock
mov
dec
jle
icebp
cmpb
in
icebp
mov
rcll
in
loop
lea
mov
xchg
inc
or
fdivp
push
outsl
push
idivl
gs
out
mov
xlat
and
mov
add
xor
and
jle
lods
sbbl
add
xchg
imul
or
mov
mov
sbb
mov
sar
cmp
pop
in
rclb
sbb
xorl
pop
jns
jnp
ss
out
cld
ds
xchg
xor
loop
push
pop
dec
xchg
repz
test
in
push
cmpsb
xor
and
sub
popa
clc
sbb
and
ficompl
sub
insb
mulb
adc
sahf
out
fadds
cld
adc
push
stos
mov
mov
cli
stos
dec
out
pop
ds
fsub
mov
mov
push
je
push
femms
dec
and
inc
hlt
mov
insl
fucomi
adc
scas
jge
daa
inc
mov
loopne
adc
cmp
imull
cmp
dec
mov
jg
push
dec
cmp
setno
fisubl
mov
inc
jecxz
mov
mov
cmp
hlt
sbb
je
sub
pop
aad
inc
mov
jb
test
sub
in
pop
mov
and
push
jl
inc
scas
xor
cwtl
stc
mov
loopne
out
test
add
loope
nop
inc
mov
int3
push
shr
shrb
mov
pop
cltd
add
loope
jno
int
outsb
scas
xor
dec
push
mov
sti
stos
subl
fxch
push
mov
movsb
out
lods
push
outsb
lahf
std
sub
adc
arpl
cmpsl
push
notl
aad
and
jb
and
pop
or
insb
and
cmp
and
mov
push
and
jmp
and
sub
dec
mov
mov
jno
and
push
adc
orl
mov
movsl
mov
andb
or
dec
mov
in
iret
inc
bound
mov
fisttpl
sbb
xlat
lods
cmp
mov
push
repz
leave
cmp
push
fsubs
je
lea
sub
mov
in
pop
xchg
pop
xor
xor
hlt
lds
popa
push
jge
xchg
pop
ss
test
addr16
out
mov
jnp
aas
and
loope
rcrb
movsl
push
mov
jmp
sbb
jnp
dec
faddl
popa
clc
in
ljmp
jmp
lret
pop
repz
insl
pushl
movsl
or
mov
mov
ret
jnp
sub
lock
jle,pn
cmp
roll
jae
push
lds
out
push
push
iret
pop
ret
loop
and
scas
pop
xor
in
xlat
outsb
push
cmpsb
std
mov
aas
cmc
cltd
jo
aas
pop
xchg
mov
push
xor
xchg
lods
neg
jbe
hlt
pushf
xor
loop
aas
xor
mov
xchg
sbb
daa
fwait
jbe
jmp
jl
daa
mov
fwait
sti
shl
lea
push
pop
scas
xor
push
xor
lcall
leave
mov
push
mov
cmpsl
cmpb
pop
sarl
lds
icebp
dec
and
ret
fucom
cmp
mov
cld
insb
or
sarl
movsb
xchg
push
dec
in
enter
movsl
jmp
ss
es
test
dec
and
movsl
mov
push
addr16
andl
jbe
cmpsb
je
sbb
and
pop
nop
pop
jmp
push
mov
stos
jecxz
and
int
lret
stos
jns
jmp
sti
int3
testl
xor
daa
mov
outsl
hlt
push
cs
sub
mov
lcall
pop
out
mov
dec
bound
jbe
insl
sub
mov
orb
test
cli
mov
addb
xor
push
or
xchg
adc
jle
nop
mov
ror
xor
fcoml
fisttpll
mov
fs
sarb
cmc
mov
pop
lods
inc
notl
clc
mov
aad
imul
dec
xchg
mov
movb
lahf
sbb
mov
mov
mov
push
fsts
ret
jae
insl
lcall
and
push
or
fcomp
call
sbb
mov
push
sti
xchg
iret
in
pop
cli
mov
ljmp
enter
clc
repz
lahf
ss
adc
cmp
mov
pop
mov
sti
xor
in
sub
mov
pop
or
cmp
test
pop
faddl
mov
or
mov
lahf
and
pop
pop
icebp
lods
inc
mov
clc
pop
xchg
ror
lret
inc
scas
sbb
test
xchg
adc
out
test
repz
popf
frstor
mov
rcl
mov
inc
xchg
scas
scas
jb
loop
stos
insb
std
add
push
adc
sbb
mov
push
ret
pop
into
cld
push
arpl
jo
fisttpl
xchg
xchg
mov
loopne
jge
int3
and
dec
inc
and
cs
outsb
adc
xlat
cwtl
xor
cmp
in
lret
popa
pusha
out
dec
lods
pop
or
push
jg,pt
adc
push
xor
test
xchg
lahf
test
inc
jmp
or
addr16
push
loop
orb
arpl
inc
stos
popa
pop
lret
mov
sub
stos
and
shrl
insb
cmp
imul
and
mov
cmp
inc
or
test
pop
movsb
in
sbb
xchg
cmp
dec
arpl
test
mov
mov
leave
test
test
push
nop
pop
cmp
or
dec
stos
cmp
roll
inc
push
jo
jl
loope
mov
push
dec
fadds
mov
data16
xchg
mov
sbb
push
jl
jo
xchg
imul
movsl
cli
sbb
faddp
gs
add
mov
push
clc
es
xchg
lods
add
mov
mov
andl
insb
cmpsb
inc
push
mov
dec
insl
cmpb
out
test
mov
mov
sbb
cmp
jl
mov
jns
roll
jg
int3
push
scas
or
icebp
sbb
mov
lret
xor
push
sti
ret
sub
cltd
xor
in
lock
sbb
xchg
xor
test
dec
push
icebp
movsl
xor
sti
pushf
cmp
pop
lds
dec
clc
ficoml
loopne
and
xchg
adc
insb
dec
pop
sahf
adc
popa
mov
or
jno
xchg
dec
scas
lret
popf
flds
fadd
mov
cmpsl
hlt
xchg
xchg
and
or
xchg
pop
lods
add
sbb
addr16
fisubl
xchg
mov
push
inc
sub
mov
insb
dec
jbe
imul
xor
pop
push
pop
and
xor
dec
xchg
outsb
fcomi
xchg
rol
fsub
or
out
mov
out
push
subb
pop
daa
inc
add
andl
dec
sbb
push
mov
and
jg
mov
sbb
push
or
mov
rcrl
scas
gs
rol
xchg
stos
pop
fwait
outsl
js
mov
push
fimuls
idivb
xchg
in
std
arpl
inc
push
jnp
fldl
movsl
xor
int
mov
loope
xchg
add
lock
aad
insl
sbbl
or
xchg
jl
repz
sub
cmpsb
lret
sub
dec
and
mov
in
enter
mov
mov
or
xchg
add
mov
and
ret
adc
add
cs
stos
add
and
push
fnstsw
enter
mov
sub
mov
es
jge
push
sub
push
bnd
or
jecxz
punpcklwd
rcll
or
loop
in
insl
ss
lods
je
mov
imul
in
fadds
js
into
push
cs
mov
xchg
or
xchg
mov
add
and
cmp
lcall
vpxor
adc
or
mov
or
dec
pop
imul
and
and
sub
lret
ljmp
or
in
fiaddl
mov
xchg
test
or
movsb
pushf
add
push
aad
xchg
inc
pop
mov
inc
in
rcrl
mov
mov
loope
fcomi
mov
divb
xchg
add
ret
in
sbb
in
addr16
std
arpl
xchg
cwtl
testb
mov
icebp
mov
mov
cmpsb
aam
lret
cmc
clc
out
inc
sbb
gs
ror
out
in
ds
push
add
gs
in
int3
lret
xor
xchg
lcall
notl
icebp
lods
mov
xchg
sbb
pop
loopne
adc
aad
dec
push
jg
sarl
sbb
cmpsl
aas
and
ds
scas
shrl
pop
mov
ss
sub
mov
jo
gs
dec
ds
inc
xor
jbe
gs
lret
rcll
cmc
shl
jl
sarl
mov
nop
daa
inc
mov
clc
out
or
inc
inc
cmc
addr16
jmp
mov
jae
mov
loope
repnz
mov
sub
mov
jnp
dec
xchg
ss
dec
dec
aam
cmp
mov
jbe
out
lods
or
int3
cmp
xor
pop
xor
mov
sbb
leave
stc
loopne
out
mov
cmp
pop
icebp
outsb
loopne
inc
push
xchg
daa
inc
sti
push
dec
jbe
shll
xor
and
fldl
icebp
cmpsl
push
fisubrl
and
out
xchg
rclb
push
loop
popf
out
daa
icebp
adc
out
inc
sahf
fsubr
cli
fadds
push
dec
mov
nop
idivl
lahf
ficompl
jecxz
fsubrl
sub
jo
into
add
add
ljmp
lcall
scas
dec
push
xchg
jge
scas
push
mov
sub
aad
stos
call
xchg
xlat
out
push
push
sbb
mov
mov
sub
sbb
xor
cmpsb
in
xor
jns
mov
lcall
pop
jmp
movsl
and
jns
mov
add
sbb
push
outsb
xchg
fimuls
xchg
movsb
aaa
lods
cltd
push
lods
mov
std
mov
or
xor
loopne
lcall
leave
in
cld
push
arpl
ror
into
or
aaa
imul
mov
jmp
rcrl
push
stos
cmpsb
std
fisubrs
or
test
jl
in
inc
push
pop
inc
inc
push
sbb
xchg
jnp
maxss
sub
test
loope
or
test
ror
scas
loopne
or
pop
leave
test
cld
xchg
loopne
in
pop
mov
mov
inc
ljmp
lahf
enter
out
pop
das
and
cmp
inc
add
popa
cmp
cmp
adc
pop
pop
mov
testb
mov
mov
xor
pop
in
sub
iret
adc
addr16
cltd
cmpsb
jb
mov
jge
xor
inc
push
outsb
and
push
xor
adc
cld
push
icebp
xor
and
jno
daa
adc
bound
dec
jecxz
adc
pop
loopne
shlb
rorb
pop
pop
pop
testb
sbb
fwait
jbe
cld
jo
mov
xor
pusha
mov
push
aas
mov
jg
cmpsl
mov
mov
test
mov
in
imul
push
adc
mov
cs
out
movsb
cmp
pop
ret
fwait
fs
push
push
or
test
and
lods
fmull
mov
decb
lret
test
divb
cmp
hlt
lret
pushf
dec
jmp
in
jo
xchg
gs
or
and
inc
pusha
mov
test
mov
jmp
mov
stc
clc
pop
cli
imul
cltd
cmp
cmpsb
mov
les
sbb
mov
pop
jo
aad
outsl
jge
aaa
and
test
cwtl
dec
mov
rcrl
and
lods
xor
mov
into
jmp
leave
add
inc
mov
mov
xchg
sub
mov
adc
sub
push
add
or
inc
cmp
cltd
mov
repnz
xor
ds
movsl
jmp
push
ja
movsl
dec
js
clc
stos
inc
jge
jbe
jg
and
sbb
dec
dec
imul
shrb
push
adc
iret
inc
aas
aaa
into
pusha
data16
test
inc
push
xchg
or
adc
dec
aas
or
push
inc
imul
adc
push
subl
imul
adc
pusha
xchg
sbb
mov
dec
push
sub
cmp
adc
lcall
addr16
arpl
loope
mov
mov
sbbl
xchg
out
int
add
jne
and
addb
scas
stc
leave
dec
or
fnsave
mov
dec
notl
mov
fwait
mov
leave
push
dec
pop
dec
add
rcl
bound
dec
fidivrl
xor
lods
lret
bound
add
sub
stc
shrl
pop
sahf
adc
daa
xchg
mov
loopne
xlat
leave
push
mov
nop
sub
xchg
jne
push
xlat
jb
ds
ss
adc
sub
test
jns
sub
iret
push
lcall
lcall
fmul
inc
xlat
mov
lahf
fldenv
add
popa
mov
test
insl
rolb
or
xchg
push
cld
sbb
and
jge
or
fidivs
mov
sbb
and
adc
pushl
mov
addr16
fcmovbe
and
mov
mov
mov
jo
into
je
mov
mov
push
sub
scas
outsl
mov
decb
es
cli
inc
xlat
sub
jp
xor
mov
push
in
fwait
out
dec
inc
mov
xchg
lods
sub
ror
pop
pushf
stos
in
cmp
clc
clc
jecxz
push
xor
sub
bound
mov
mov
xor
cs
or
and
xchg
cmp
jmp
out
xchg
dec
std
popf
adc
push
loop
loop
out
sbb
repz
mov
adc
push
xor
shll
jge
xchg
loop
mov
cmp
inc
push
jbe
jmp
sub
push
push
mov
push
orb
dec
cmp
xchg
sbb
cmp
nop
sbb
mov
mov
daa
data16
dec
jnp
push
mov
mov
xchg
in
mov
int3
inc
or
hlt
jo
sbb
adc
mov
rorl
out
adc
lcall
sbb
negl
jnp
ljmp
add
push
lret
in
lds
inc
movsl
pop
testb
enter
lret
jle
outsb
fidivrs
or
outsb
daa
mov
movb
decb
aas
push
and
inc
push
shll
test
es
sbb
cltd
mov
pop
sbb
mov
insl
adc
pop
out
mov
mov
fst
pop
xchg
mov
pop
push
hlt
push
xchg
push
repnz
scas
sub
hlt
dec
cmp
mov
jo
sub
inc
push
dec
dec
shrb
in
xchg
jl
push
xchg
xor
cmp
ret
mov
movsb
push
sbb
or
aad
inc
inc
iret
lret
cmc
push
jmp
sub
mov
add
sub
jmp
push
mov
jecxz
cmpsl
inc
fldenv
cltd
popa
sub
xchg
out
insl
or
adc
or
inc
jns
std
clc
scas
aaa
fcoml
xchg
inc
and
xor
mov
pop
add
movsb
ljmp
mov
push
inc
fistpl
lea
mul
pop
add
mov
add
ret
sti
push
mov
xchg
dec
add
out
xchg
loopne
inc
mov
pop
mov
push
pop
insl
mov
scas
and
jno
dec
aaa
mov
icebp
insb
out
push
pop
push
test
lcallw
mov
fpatan
icebp
arpl
fs
call
xrelease
jmp
mov
pop
inc
stc
inc
xchg
rclb
outsb
pop
xchg
mov
loopne
lret
inc
pop
push
insl
mov
insl
rclb
insb
mov
mov
and
xchg
push
jl
adc
push
xor
stc
pop
cmpb
fcomp
stc
andl
sbb
stos
popa
mov
mov
fmuls
into
push
xchg
mov
arpl
xchg
hlt
stc
and
insb
rcll
lea
fisubs
inc
fsubr
cld
shr
repz
push
popa
dec
cltd
or
lret
insl
call
call
out
into
push
ljmp
jno
adc
out
test
lret
je
or
adc
hlt
das
push
xor
out
outsb
xchg
das
or
pop
jmp
inc
imul
out
ljmp
jno
and
negl
xor
add
jg
xchg
push
movsb
std
icebp
scas
das
mov
mov
push
fwait
xor
clc
stc
popf
ffreep
add
leave
icebp
push
shll
int
mov
and
data16
movsb
test
mov
out
mov
pop
addr16
dec
out
pop
sub
jne
add
ljmp
dec
xchg
lock
add
or
pop
mov
rorl
fimull
dec
mov
cmc
stos
xor
popa
cltd
push
adc
dec
dec
xor
pop
sub
mov
leave
enter
fadd
sbb
int3
les
push
xor
loope
cmp
jns
aam
or
inc
out
sub
push
pop
test
pushf
dec
fidivs
mov
insl
outsb
push
mov
fsubs
les
xor
cmpsb
push
andb
jne
mov
cmpl
shll
pop
out
or
imul
and
dec
mov
ja
xchg
dec
fldt
adcb
mov
leave
lock
and
push
sbb
aam
movsl
mov
push
sbb
push
jmp
add
push
jg
mov
into
cs
jl
ss
mov
fisttpll
loope
jae
fisttpl
bnd
stos
mov
outsb
clc
iret
jecxz
out
adc
mov
mov
es
inc
ss
aam
arpl
pop
xor
popf
cmp
xchg
sub
mov
push
jno
icebp
aaa
scas
out
fdivl
sub
xor
inc
sarl
scas
lret
jmp
mov
fimuls
mov
stc
pop
cmp
cli
clc
in
dec
hlt
lods
rolb
in
sub
repnz
or
inc
mov
jae
xchg
sub
or
outsl
mov
dec
cmp
pop
iret
int
sbb
xor
jmp
into
sbb
mov
lahf
mov
pop
sahf
cmpl
adc
repnz
sahf
cs
pop
push
lods
stos
ds
push
in
sarl
push
jl
inc
insl
xor
add
pop
and
enter
xchg
jne
add
mov
and
xor
xor
xor
loop
mov
test
and
fs
jns
cmp
in
lret
in
sahf
sub
ljmp
add
mov
push
fisubl
enter
inc
cmc
cmp
mov
movsb
loope
sub
or
add
cmp
ja
adc
insb
push
scas
mov
test
jno
pop
lret
xlat
pop
sbb
cmp
enter
imull
jo
lea
scas
mov
add
les
sahf
xchg
push
sbb
jp
or
cmp
mov
jnp,pt
arpl
test
jnp
add
cmp
fidivrs
fdivs
sahf
cmp
lds
or
cmp
insl
lea
add
xchg
xor
push
mov
aad
add
movsb
mov
jnp
xor
scas
stos
pop
add
dec
inc
jne
js
shlb
xchg
push
dec
dec
jae
dec
loop
xor
jmp
aas
mov
insl
jnp
enter
xchg
mov
mov
pop
inc
out
js
adcb
lcall
mov
pop
xlat
int3
push
negb
lahf
in
pop
inc
lcall
cli
arpl
or
lds
mov
dec
and
shll
repz
int
cmp
dec
jecxz
or
mov
sarl
add
xor
xchg
movb
leave
ficoms
hlt
out
inc
mov
inc
or
pop
adc
icebp
jl
jno
cmp
scas
mov
and
inc
sar
ljmp
fsts
or
scas
mov
nop
test
subl
outsl
repz
ds
in
mov
std
pop
adc
into
inc
cmp
dec
shll
imul
iret
pop
inc
push
sub
xchg
fs
jecxz
mov
loop
and
bndstx
pop
in
push
hlt
push
cld
sub
add
mov
popf
xor
mov
mov
ret
repz
cmpsl
sub
shll
cwtl
inc
add
add
lret
imul
adc
push
cmc
dec
ja
dec
test
lret
pop
inc
and
jb
dec
lock
push
add
mov
out
inc
mov
rcrb
mov
popf
xor
dec
jl
sub
out
mov
add
movsb
mov
fwait
cmp
mov
inc
fwait
push
lods
mov
imul
jg
cmp
jmp
dec
push
sbb
cwtl
sbb
xor
mov
push
add
xchg
sub
jecxz
js
sahf
call
mov
fnstcw
fcmovnb
pop
rclb
and
in
jmp
rorb
mov
pop
and
xchg
dec
adc
push
fldl
inc
or
fdivl
arpl
into
rcll
mov
xlat
adc
cmp
jge
inc
arpl
das
or
faddp
push
repz
pop
adc
fwait
movsl
inc
lea
mov
pop
push
dec
mov
loop
outsb
out
mov
dec
cmp
imul
ja
add
dec
ja
mov
sub
andb
pop
cmp
rcrl
and
jl
add
enter
clc
pop
mov
push
repz
sub
cmp
mov
and
add
xorb
mov
adc
dec
push
addr16
pop
lea
jbe
in
es
mov
and
inc
mov
js
leave
or
adc
xchg
sub
pop
jb
mov
nop
sub
push
xlat
rolb
sahf
sub
pop
dec
xchg
dec
and
mov
xchg
xchg
pop
sti
rcll
add
pop
bound
inc
mov
insb
mov
jns
rcll
mov
pop
js
lock
pop
inc
mov
jbe
push
test
sbb
fcoms
xchg
mov
clc
not
push
inc
popa
or
mov
fucomip
ja
scas
fldcw
scas
not
aas
test
push
push
insb
jmp
cmpsb
in
pusha
hlt
sbb
add
mov
sbb
insb
cld
push
lods
sub
mov
stos
sbb
seta
fs
icebp
xchg
mov
imul
rclb
addl
js
das
shlb
pop
out
fdiv
dec
add
iret
enter
clc
scas
cld
mov
xor
andb
jne,pn
mov
jg
pop
jns
mov
adcl
rorb
daa
mov
lret
inc
std
lret
loop
push
cltd
bound
daa
aad
or
js
int3
pop
hlt
rcl
jle
loop
adc
fs
xor
mov
add
push
mov
sub
jge
test
rorl
xchg
jl
insb
or
jmp
xchg
mov
cld
insl
xchg
sbb
sub
add
sahf
sub
adc
scas
leave
pushf
jo
shlb
mov
mov
aam
stc
std
push
fsubrs
sbb
call
jmp
xor
adc
mov
mov
ret
imul
imul
inc
dec
je
insb
rcrl
aam
lods
and
inc
out
stc
ret
arpl
mov
pop
sub
scas
mov
lock
sub
dec
add
sub
sub
rcl
mov
mov
hlt
aas
in
clc
sahf
sbb
pop
mov
in
jecxz
and
les
fstpt
dec
dec
test
arpl
jp
paddusw
cmp
popa
shlb
addr16
push
cwtl
ret
icebp
push
stos
popa
adc
push
stos
bound
xchg
cs
xchg
jmp
idivl
and
cmp
mov
pop
fidivrl
or
mov
adc
mov
repnz
into
sub
fadds
idivb
mov
js
xor
cmpb
and
sbbb
adc
movsb
aaa
insb
xchg
clc
mov
stc
lcall
jle
jno
loopne
dec
int3
and
sbb
mov
add
mov
mov
push
scas
aam
adc
jo
sub
sbb
and
pushf
loopne
mov
cmp
scas
or
add
pop
lods
scas
mov
mov
mov
mov
std
test
ficomps
mov
fnsave
sub
or
cmpsl
out
cli
dec
lahf
and
sarl
mov
in
pop
add
dec
add
inc
sarl
or
adc
imul
shlb
test
push
xchg
push
mov
ret
inc
sub
push
test
lods
rol
inc
jecxz
das
inc
mov
into
fs
sub
jg,pt
jne
adc
xchg
sbb
sbb
gs
mov
xchg
xchg
in
dec
push
sbb
insb
scas
cmp
mov
cltd
adc
pop
fisubrs
adc
test
div
popa
neg
hlt
sub
dec
std
jle
xor
rcrb
fldl2t
lea
add
addb
daa
jmp
jle
out
mov
nop
mov
add
lret
cwtl
push
outsl
ret
push
call
adc
jno
lret
popf
pop
cwtl
xlat
mov
mov
sub
and
fmull
rorl
xchg
pop
fbstp
int
pop
je
push
sti
rolb
cmp
inc
and
cmpsl
in
in
lds
js
inc
xor
je
out
sti
addl
pop
outsb
ffreep
mov
dec
jbe
fisubrl
sti
xchg
jg
jo
into
pop
sbb
fisubrs
adc
leave
in
das
sub
mov
ja
clc
sub
sbb
ljmp
dec
loope
pop
out
iret
dec
pop
and
xchg
mov
lahf
mov
inc
jle
fsubrp
addb
inc
aaa
pop
lock
data16
loopne
pop
cltd
sbb
dec
mov
out
mov
lret
stc
shrb
cmc
rsm
jecxz
pop
jmp
mov
and
sti
push
inc
rol
stos
das
popa
inc
out
adc
ss
je
das
stos
pop
push
test
add
or
ret
sub
xchg
adc
popa
or
mov
xchg
hlt
push
xchg
dec
jle
nop
mov
stos
or
fst
icebp
push
test
inc
add
mov
mov
xchg
lcall
bound
mov
inc
nop
incb
int
fsubs
adcl
cmp
mov
sarb
jo
inc
sbb
push
xchg
int
push
cld
pusha
jnp
add
xor
mov
rcr
test
cmp
xchg
pop
daa
pop
push
out
mov
je
ds
adc
mull
popa
add
mov
js
inc
fistpl
jnp
sbb
negb
stos
and
mov
cmp
xor
jge
aaa
movsb
mov
testl
aam
mov
push
xchg
pop
cmp
xchg
sbb
cmpsb
sub
mov
ret
inc
gs
aaa
lods
jge
add
jne
or
push
fbstp
jp
cmp
dec
pop
adc
popa
stos
cmp
jne
cmp
sub
lret
pop
ljmp
cli
std
in
pop
mov
ss
repnz
lods
int3
movsl
aaa
and
stos
add
dec
leave
hlt
jae
rorl
sub
cmpsl
fiaddl
das
mov
test
les
stc
scas
xchg
mov
clc
shrb
cld
push
push
mov
adc
adc
xbegin
mov
sbb
dec
sub
insb
js
adcl
shlb
fisubrs
daa
mov
andb
repz
fldl
adc
pop
sub
jl
insb
push
popf
popf
xchg
mov
mov
sbb
xchg
pop
cmc
mov
mov
push
js
pushf
rcrb
adcb
cmpsl
ret
xor
jle
xorb
push
nop
add
std
out
cmp
cmp
bound
les
mov
and
in
sti
popf
pop
mov
mov
shll
mov
std
mov
dec
sbb
add
mov
jmpw
ljmp
jge
sub
or
mov
roll
sbb
push
cmp
test
xchg
rcrl
loopne
loopne
outsl
sbb
dec
scas
push
add
aad
or
out
mov
adc
and
sub
stos
pop
mov
addr16
dec
pop
aaa
in
add
imul
jecxz
out
push
fwait
pop
or
pop
daa
ret
jmp
mov
jo
jl
mov
push
mov
mov
dec
decl
dec
cltd
pop
mov
push
shrl
ret
sbb
out
pop
pop
or
push
jae
rcrl
mov
xchg
test
cmc
push
pop
out
mov
outsl
daa
inc
push
repz
sub
or
push
insl
inc
test
imul
subb
inc
push
ja
sub
inc
mov
adc
xlat
push
es
out
inc
sbb
ds
insl
jne
push
mov
sbbl
cld
mov
and
data16
dec
in
xchg
out
cmp
pop
push
mov
or
jge
and
pop
int3
iret
mov
mov
and
data16
push
sbbl
pusha
idivl
movsb
push
arpl
sbbl
pop
add
pop
loop
ljmp
cmc
mov
outsb
out
xchg
and
adc
inc
push
fiadds
mov
xor
add
fsts
xchg
pop
jg
popf
jnp
out
pushf
leave
xlat
dec
add
dec
or
call
arpl
mov
fidivrl
xor
aas
rcll
ss
sbbl
add
sahf
or
iret
push
icebp
mov
and
rclb
xchg
lods
jno
das
mov
mov
aad
pop
in
gs
push
or
aas
mov
jae
fnstsw
add
adc
sbb
sbbb
rclb
add
xchg
adc
pop
in
int3
mov
rcl
clc
pmaxsw
fwait
mov
je
lock
inc
mov
push
xor
dec
rcrl
mov
jb
sahf
and
jp
mov
addl
dec
aas
cltd
out
xor
pushf
into
and
divb
push
sub
cltd
sub
mull
add
js
xchg
xor
cltd
test
test
rolb
jp
mov
pop
or
mov
xlat
mov
sbb
and
push
add
clc
in
loop
ficompl
out
ror
mov
setle
jp
stos
xor
out
imul
arpl
fnsave
pop
fdivr
xchg
sti
jo
add
fsubrl
sub
in
xchg
pop
inc
daa
mov
or
jbe
mov
mov
mov
repz
sbb
pop
inc
test
ja
cmc
and
jo
rolb
jge
adc
rcrb
xchg
push
test
pop
icebp
pop
aad
push
pop
stos
stc
xchg
aaa
xchg
adc
loope
jno
ja
inc
fbld
adc
ficompl
inc
mov
cld
cmp
imul
dec
cmp
cmp
sub
dec
inc
mov
or
mov
sub
sahf
xchg
sbb
lock
mov
mov
iret
filds
adc
stc
out
nop
outsl
inc
aad
cmp
jmp
dec
fnstcw
add
jae
sbb
mov
inc
cli
cmp
daa
stos
cwtl
inc
jmp
in
dec
out
aad
add
or
jecxz
mov
cmp
dec
int
mov
xor
mov
jge
stc
pop
dec
jg
out
mov
fdivr
pop
ds
jae
push
add
or
cli
dec
pushf
bound
pop
stc
and
bound
inc
dec
lods
adc
nop
movsl
movsl
mov
pop
mov
inc
scas
or
and
ljmp
pop
cmp
jmp
sub
pop
ror
mov
adc
and
or
lods
shlb
add
outsb
rcrb
lahf
fwait
icebp
aad
sbb
aas
push
jne
dec
les
or
pop
inc
mov
pop
jno
frstor
scas
aad
loopne
or
shll
stos
fadds
outsl
inc
insb
mov
shll
push
add
mov
pop
pop
aas
stos
iret
fildl
or
mov
call
sti
mov
mov
in
insl
loope
and
and
push
push
mov
out
les
stos
in
dec
xchg
test
repnz
imul
gs
je
xor
cs
jbe
or
movsl
cmpb
scas
out
loope
leave
call
imul
es
lock
sar
cli
pushf
or
xor
or
testb
fidivrl
mov
push
mov
mov
push
je
iret
testb
andl
push
ljmp
testl
or
dec
inc
data16
loope
popf
jp
xchg
fidivrl
dec
sub
or
out
lahf
inc
ljmp
fstl
fstl
fldcw
lods
or
mov
movsl
sub
pop
aad
mov
dec
inc
arpl
jno
ljmp
xchg
ret
arpl
pop
sbb
inc
push
cmp
dec
push
mov
int3
rorl
dec
jg
xor
inc
mov
jge
push
add
jp
cwtl
sub
add
pop
xor
out
jge
inc
fs
in
stc
out
push
mov
les
sub
mov
and
push
mov
fstl
adc
enter
repz
dec
mov
stos
outsl
repnz
shlb
sub
lea
add
fs
test
lret
sbbl
jp
leave
and
mov
push
ds
ss
ja
dec
xchg
mov
push
fistl
xor
rcrb
add
mov
fbld
jnp
push
outsl
in
xorl
scas
and
adc
adc
fistl
mov
or
add
hlt
aad
imul
or
insb
xchg
loopne
sub
outsl
jbe
or
sub
add
imul
aaa
fnstcw
cs
xchg
sbb
pop
jo
notl
cmp
pop
mov
push
inc
inc
popa
je
pop
adc
mov
mov
cmp
data16
lcall
aam
loop
xor
sbb
xchg
repnz
mulb
mov
add
fst
movsl
lods
xchg
dec
or
cltd
int3
cs
push
push
jae
outsb
mov
mov
mov
xchg
outsl
pusha
xlat
cli
rcr
movsl
cmp
scas
gs
scas
add
xchg
jno
js
or
cmc
dec
mov
out
pop
call
mov
push
push
jmp
sbb
bound
sbbb
xchg
imul
or
imul
ds
jp
dec
mov
dec
lods
daa
outsl
test
test
in
sti
fstpt
das
push
lret
pop
dec
push
jne
imul
pop
push
pop
insb
repz
lods
adcl
adc
jne
lds
jae
jmp
cmpsl
xchg
and
cwtl
dec
add
xor
jo
push
sti
fwait
jmp
and
hlt
pop
lret
idivb
popa
lock
icebp
mov
xchg
je
lret
xchg
jmp
or
mov
ss
mov
pop
dec
cmp
push
jnp
pop
pushf
sub
add
ret
and
imul
pushw
sar
dec
mov
jle
insb
xor
sbb
std
pushf
jecxz
daa
cltd
jb
movsl
fs
xorb
cld
sti
or
es
aaa
mov
ja
lret
cwtl
pop
xchg
loop
into
inc
out
inc
and
je
inc
mov
pusha
mov
dec
test
popa
mov
data16
cmp
push
mov
loopne
push
jno
add
lods
ss
xor
aaa
gs
nop
cmp
test
les
push
mov
daa
mov
jae
nop
sub
scas
ret
mov
ja
add
js
mov
push
loopne
and
js
int3
xor
push
outsl
push
mov
adc
mov
add
dec
jb
jge
bound
xchg
inc
add
add
mov
out
mull
daa
les
ret
mov
sbbl
jno
push
das
clc
sti
xchg
sub
and
sti
sub
scas
repz
xor
jno
insl
and
inc
add
mov
and
mov
in
enter
aam
jle
jno
rorl
pushf
xor
scas
and
mov
test
lea
test
push
xor
mov
xchg
mov
sub
in
lcall
push
xor
int
movsb
mov
fildll
inc
fistl
dec
cmp
push
aaa
xor
mov
xlat
xor
test
inc
xor
cltd
xchg
xchg
push
lds
add
pop
decb
data16
lods
mov
lret
and
jns
sbb
fidivl
scas
dec
cwtl
cmp
adc
fsubrl
fidivl
insl
daa
mov
adc
inc
in
adc
pop
insl
stos
lcall
xor
dec
fst
nop
push
in
shll
out
je
cld
ror
and
sbb
cwtd
das
mov
xchg
push
insl
pop
lock
in
mov
pusha
push
in
xchg
add
cmpsb
in
inc
fwait
rol
adc
adc
je
movb
popa
mov
mov
stc
fcoml
jg
inc
xor
adc
ficompl
dec
xchg
das
pop
addr16
mov
fs
jb
sbb
dec
jo
mov
insl
mov
fcomi
jb
jecxz
and
or
pop
mov
addr16
mov
push
test
js
or
dec
lea
clc
mov
pushf
jl
mov
clc
cmpb
and
push
and
xchg
xchg
mov
pop
test
push
sub
loop
int3
pushf
sbb
dec
add
inc
insl
cmc
xchg
adc
inc
hlt
cmp
add
pop
push
in
scas
shl
inc
push
dec
mov
jl
push
xor
les
lock
arpl
movsb
jecxz
andl
das
push
push
mov
movb
ss
shl
rorl
sti
cld
xor
outsb
inc
inc
mov
idiv
jg
out
pop
xor
add
push
stc
push
cmp
testb
pop
outsb
push
call
jne
mov
mov
sub
out
jne
iret
sub
jp
inc
pop
sbb
adc
add
sub
insl
les
sub
ret
jl
repz
push
pop
in
xorl
test
in
xchg
or
fwait
mov
out
jae
xor
scas
and
pop
dec
adc
jl
addb
jns
mov
stos
dec
rcl
adc
repnz
adc
ret
sbb
jge
movsl
sub
mov
test
pop
stos
dec
ret
and
gs
sbb
jecxz
arpl
xor
ljmp
mov
inc
lcall
subl
xor
popa
mov
cmp
mov
sbb
jns
jne
lret
lahf
daa
and
popf
cltd
std
xor
cmp
ljmp
pushf
lock
push
lea
fcompl
inc
jge
out
test
sar
mul
mov
pop
cmc
fs
xchg
xchg
cmp
insl
lds
pop
xor
and
lea
ret
pop
in
mov
add
cmpsl
push
cld
loope
dec
fistpll
push
push
aas
push
dec
jno
cmp
mov
cmp
icebp
sbb
jne
adc
loopne
mov
rcrb
inc
call
mov
sbb
inc
dec
jno
mov
cmp
or
xor
mov
pop
out
mov
xchg
loop
mov
pop
jns
push
mov
sahf
insl
jno
xchg
bound
pop
dec
call
or
or
jnp
jge
cmp
imul
ja
xor
or
hlt
pop
sbb
pop
jmp
cli
js
jg
sbb
popf
mov
push
and
or
cmp
add
jbe
pop
and
loop
cmp
or
lock
jecxz
mov
mov
lea
add
ss
pop
push
dec
loope
outsb
push
notl
sbbl
or
push
jle
add
popa
cmp
call
mov
mov
movsl
sbb
insb
outsb
push
inc
xchg
lea
popf
sti
cmp
imul
aam
mov
sbb
jecxz
movsl
fidivs
cltd
sarl
sub
popf
push
aas
jnp
xor
and
inc
shl
jmp
ja
aas
jmp
push
add
jg
inc
fcmovnbe
popl
and
daa
out
and
fnsave
and
and
cmp
jno
cld
pop
cs
pop
iret
sbbb
iret
mov
cmpsl
dec
and
add
push
call
sbb
leave
mov
addr16
xor
lds
mov
inc
in
pushl
push
mov
test
ret
mov
lret
in
push
add
nop
dec
jo
andb
into
shlb
cli
rorl
call
add
scas
push
add
xor
xor
pop
cmc
xchg
mov
mov
pop
xlat
adc
sahf
mov
cmp
outsb
scas
add
addl
and
out
add
test
shll
xchg
int3
fldl
ljmp
test
lret
mov
shlb
add
dec
in
mov
dec
jmp
ljmp
mov
fnstcw
sbb
adc
iret
in
jnp
pop
icebp
test
and
icebp
xchg
lods
jp
push
aaa
popf
sbb
push
icebp
adc
lds
fmuls
dec
in
aas
push
inc
mov
sbb
and
push
mov
push
inc
mov
xchg
scas
call
cmpsb
js
push
dec
mov
sub
fisubl
inc
lds
sbbb
add
mov
mov
sub
xlat
pop
pop
xchg
xchg
lea
cwtl
test
inc
stc
inc
movsl
mov
popf
xor
pusha
cmp
cltd
inc
scas
xchg
cmpb
call
arpl
rol
daa
mov
cmpb
stos
clc
mov
sbb
push
leave
push
mov
jns
cmc
and
bound
cmp
xchg
mov
pop
sbbl
mov
std
scas
movsl
stos
push
jnp
into
mov
pusha
xlat
and
int
test
mov
cs
lcall
mov
gs
cmc
fisttpl
and
pusha
movsb
add
cmpsb
js
pushf
mov
adcb
push
or
xor
in
push
icebp
mov
add
imul
jp
ret
int
in
mov
mov
mov
mov
and
jno
loop
mov
ror
dec
popa
fcmovnb
and
fnsave
add
ljmp
lock
movsl
clc
daa
mov
out
inc
push
xchg
mov
hlt
inc
add
adc
sub
xor
inc
ret
or
and
push
lret
ds
loopne
inc
adc
shlb
sub
sbb
test
pusha
rclb
mov
in
fwait
sbbb
pop
jae
mov
stos
and
mov
sub
ja
and
in
addr16
stos
data16
fstpt
jns
repz
pop
jge
inc
jo
out
or
js
pusha
repnz
bound
mov
push
xorl
mov
shr
outsb
or
dec
out
sub
jo
addr16
inc
cld
xlat
jns
pop
pop
xor
jns
imul
inc
pop
add
lock
fisubl
adc
adc
pop
mov
push
jo
pop
adc
mov
cmpsb
and
sub
ja
sub
lret
xlat
xor
xchg
sub
pop
sub
in
ret
sub
das
xchg
xor
xor
inc
movb
jge
add
sub
mov
pop
in
stos
jg
ret
pop
lret
ljmp
sahf
mov
dec
ja
in
shl
push
je
sub
mov
pop
fs
xchg
cmp
mov
jecxz
pusha
es
fwait
les
rorl
add
fucomi
repz
mov
hlt
mov
cmp
pop
mov
mov
repz
pop
cs
rol
cwtl
hlt
idivb
add
pop
jnp
inc
movsb
repnz
xchg
dec
inc
sbb
rclb
out
icebp
pop
in
aas
xor
jne
xchg
loope
dec
dec
in
pop
fiaddl
xor
sub
mov
das
ret
sbb
mov
test
jp
inc
fdiv
clc
xor
sti
bound
js
jae
and
xchg
xchg
xchg
loope
in
loop
sbb
stos
xchg
xor
jae
xorl
arpl
sbb
push
sbb
sbb
lea
iret
hlt
fisubs
cmp
push
leave
pusha
mov
mov
cmp
pop
test
arpl
xchg
sub
outsl
sbb
insl
ss
mov
jge
int
mov
adc
pop
in
iret
push
fistps
int3
pop
in
sbb
test
sbb
or
dec
cmp
dec
outsw
and
loopne
nop
mov
or
call
je
jae
daa
popf
in
into
dec
xchg
cmp
xchg
inc
push
adc
arpl
and
dec
ljmp
mov
xor
xchg
jb
out
inc
push
mov
dec
aam
mov
xor
pop
lea
push
das
int
call
ds
mov
mov
in
outsb
sub
cmp
ds
and
pop
pop
pushf
lods
sbb
and
ret
es
jecxz
pop
dec
mov
jb
fs
pushf
mov
cmp
adc
mov
xor
fwait
cli
xchg
or
pop
pushf
sbb
or
push
lret
out
fisttps
dec
xchg
lods
out
js
repnz
adcb
sbb
fs
inc
push
inc
push
adc
mov
sbb
ss
inc
dec
pop
and
int
int
sbb
mov
sub
lret
inc
repz
mov
sbb
inc
fcmovnb
pusha
sbb
call
push
xor
pop
xorb
push
inc
divb
xchg
pop
repz
dec
jge
mov
les
stc
and
outsl
fnstcw
movsl
lds
mov
cmp
and
out
pop
dec
mov
jg
loope
mov
push
dec
stos
enter
pop
setge
jge
mov
jnp
push
je
or
cmp
jp
scas
subl
or
icebp
jge
xor
movsl
sti
jecxz
push
inc
fstps
fstpt
scas
popl
das
lea
mov
fsubs
inc
int3
or
push
jnp
fbld
mov
mov
loopne
jne
mov
cld
push
shlb
test
fucomip
xor
inc
insl
loop
sbb
idivb
repz
sub
mov
outsl
out
daa
cmp
cmp
adc
int3
int
ret
int3
int
ljmp
dec
mov
cs
cld
xchg
lea
cwtl
push
cmpsb
in
pop
adc
lds
movsb
dec
jecxz
daa
inc
das
ljmp
xchg
adc
repz
ss
jg
insb
push
mov
lcall
or
adc
cmp
outsl
jnp
push
sub
pop
add
cmp
jl
xor
scas
jns
fbstp
jnp
push
push
inc
ficoml
mov
pop
xor
fdivrp
mov
jbe
add
and
jle
ret
repz
xchg
mov
hlt
adc
rcrl
mov
cmp
cmp
loop
ds
adc
add
and
jns
dec
cmp
inc
cmc
imul
outsb
xchg
mov
inc
mov
call
lods
jg
repnz
repz
mov
mov
dec
frstor
cmp
cld
cli
pop
sarl
sbb
jecxz
push
andb
mov
dec
jg
ret
lds
pop
jnp
iret
jbe
pusha
lods
cmp
push
add
sahf
pop
les
mov
outsb
sub
push
loope
jns
dec
ret
sbb
inc
cwtl
push
adc
cmp
inc
rcrl
arpl
cli
pop
cs
leave
aas
arpl
ljmp
cmpsb
and
adc
adc
mov
or
sub
cmp
mov
aam
or
mov
aam
stc
sbb
les
push
shll
rorb
outsl
sub
loope
dec
in
cmpl
pop
sub
xchg
je
xor
fstl
fs
xlat
addr16
hlt
add
sbb
pop
aam
pop
loope
jbe
mov
mov
jno
scas
push
in
sahf
mov
enter
mov
shrb
xlat
insb
ffreep
inc
mov
inc
mov
or
test
mov
dec
lods
jecxz
out
lds
push
or
jbe
fcomps
js
push
xchg
adc
out
mov
lahf
mov
sbb
push
jle
and
jns
nop
dec
loop
dec
sbbl
sub
sbb
dec
shll
xlat
out
jne
outsb
cmpsl
adc
das
pop
insl
mov
cmpsl
mov
clc
aad
mov
or
pop
adc
add
push
int
fwait
into
popa
pop
push
out
xor
outsl
jnp
push
xchg
sub
adc
mov
jns
fildl
stc
je
iret
scas
and
pusha
push
iret
sahf
push
lods
into
mov
pop
sbb
xor
ds
xchg
dec
pop
cmp
mov
push
jl
jne
cvtpi2ps
pop
adc
inc
cwtl
aad
add
inc
or
dec
gs
pop
test
icebp
mov
rcr
imul
push
jb
ficompl
shll
push
sarb
sarb
loope
scas
sub
in
popf
test
rorb
cmp
cmp
loope
sarb
cmp
mov
add
test
ss
cmpxchg
inc
adcb
sarb
xlat
and
lea
stos
xchg
inc
repz
fyl2xp1
jne
dec
lods
add
add
mov
iret
sahf
je
addr16
xor
repnz
cs
fidivs
inc
cmp
dec
jmp
push
push
mov
decl
and
add
testl
mov
xor
adc
test
test
fsts
inc
std
sbb
jb
jecxz
je
add
jge
aas
and
lea
sub
sarb
sub
or
push
imul
cmp
lods
aad
dec
xchg
je
mov
jge
mov
sarb
das
mov
pusha
mov
fildl
lret
push
leave
pusha
cmpl
mov
mov
push
shrb
sbb
test
mov
sbb
jle
cmp
mov
xchg
xor
lods
addr16
pusha
or
xor
loop
push
jmp
dec
imul
mov
or
jp
push
cwtl
push
xchg
mov
andb
lcall
jns
loope
js
add
sub
and
stos
sub
addr16
or
daa
inc
cmp
dec
mov
adc
das
lahf
xor
jb
fdiv
leave
nop
jno
dec
and
mov
lret
sbb
xor
xor
mov
push
bnd
cwtl
clc
cmp
jl
mov
rcrb
bound
cmpsl
ds
mov
jp
cld
pop
jecxz
or
pusha
negl
cmpb
jg
add
push
xchg
mov
js
sub
xchg
or
push
mov
fsubr
and
sbb
inc
in
rcrb
jae
sbb
pushf
mov
cmp
mov
imul
dec
mov
loope
cmp
insl
leave
sahf
or
hlt
push
fisubs
sub
int3
pop
push
mov
sbbl
sbb
mov
push
xor
in
cld
daa
in
and
push
ja
mov
adc
jle
scas
ja
shlb
push
popf
pop
idivl
incb
popf
jbe
xchg
add
inc
sub
cmp
adc
pop
stc
inc
stos
fmull
or
popf
xchg
outsl
push
adc
push
imul
add
ja
xchg
sahf
dec
adc
and
cmp
outsl
pop
mov
jns
pop
divl
aad
pop
testl
rolb
push
adc
push
lods
insl
push
clc
xchg
lods
scas
cmp
jg
iret
xor
sbb
sbbl
sub
and
and
sahf
push
scas
xchg
shrl
xchg
dec
adc
jl
stos
inc
sbb
mov
nop
mov
cmpsl
sbb
int3
cmp
pop
xchg
or
lahf
mov
loop
into
sub
cmpsb
pop
out
fstpt
pop
mov
in
jbe
adc
mov
add
xchg
mov
and
xchg
callw
shll
insl
fnstenv
add
sub
out
mov
sti
addr16
ss
or
jge
xchg
or
dec
pop
shll
dec
xchg
push
and
xchg
cld
push
adc
fstpt
imul
mov
xor
shll
mov
push
pusha
ss
cli
call
out
rol
sbb
cmp
lahf
jno
andb
mov
adc
xlat
fsts
lods
lret
subl
dec
pop
dec
out
sub
fcomp
cmc
cmp
dec
lods
sbbl
xor
movsb
shr
fdivl
sub
dec
repz
cwtl
sub
mov
jg
and
cmp
cmp
stos
andl
movsl
adc
xlat
mov
mov
adc
xchg
cltd
xor
je
xor
cmp
xor
cmp
outsb
iret
push
dec
dec
sub
or
dec
adc
or
lods
clc
sahf
sub
sbb
push
daa
adc
mov
jns
cmpsl
out
add
nop
adcl
out
aam
std
push
and
xchg
in
ds
inc
test
push
adc
mov
ret
addl
dec
lods
mov
insl
stc
sbb
xor
jle
outsb
push
push
pop
jg
jne
dec
inc
lret
scas
push
sarb
mov
mov
adc
or
mov
push
js
push
aam
jge
push
cmp
jecxz
rcrb
out
push
test
sbb
push
xor
adcb
test
out
out
or
or
rcrb
andl
inc
adc
sbb
mov
bound
inc
pop
push
mov
pop
push
push
lods
jmp
mov
jge
or
lods
adc
cmp
out
div
inc
add
lahf
daa
jb
leave
int
pop
sbb
into
push
aaa
push
gs
push
or
mov
fstpt
inc
sbb
and
test
loope
mov
mov
mov
fnstsw
xchg
xchg
jns
push
lods
inc
inc
push
pop
fwait
movsl
adc
and
das
cmc
fildl
cmp
and
xchg
icebp
movsl
test
cmp
mov
cwtl
stos
rcl
push
ja
call
xor
cmpsb
aaa
jmp
push
inc
fdivr
push
push
dec
dec
inc
popa
jp
xlat
insl
addr16
jno
mov
cmp
les
add
mov
jmp
movsl
es
pop
lds
xchg
les
test
mov
jbe
fldenv
mov
arpl
dec
sbb
lods
sbb
inc
fwait
mov
jo
push
sub
hlt
int3
arpl
sub
dec
mov
ret
aad
sbb
push
test
cmp
cmp
jo
out
mov
ret
sbb
jae
cmp
xchg
ret
sahf
sub
lock
imulb
movsl
inc
test
lock
data16
int3
stc
loopne
mov
or
shll
je
loop
test
cmp
add
ret
jne
mov
dec
xchg
movsl
push
fdivr
faddp
push
out
clc
mov
jbe
mov
sub
mov
pop
repnz
dec
aas
push
into
xor
imul
xchg
fldl
xchg
xor
rcrl
rcrl
mov
in
mov
push
sub
push
pop
adc
adcl
push
into
cmp
and
push
xor
mov
dec
add
cmp
push
testl
in
dec
mov
fdecstp
push
and
sarb
dec
add
add
lret
addr16
out
lods
test
idivl
shrl
fldcw
mov
xchg
add
or
cltd
sub
aaa
in
add
addb
stos
daa
xchg
add
jnp
dec
xchg
outsl
push
fstpl
or
mov
push
push
stos
ds
ret
aas
inc
jl
enter
xchg
or
pop
jl
mov
jl
and
mov
xchg
push
mov
fwait
dec
adc
inc
push
mov
mov
pop
mov
iret
out
jmp
aad
jmp
sbb
pop
cwtl
pop
into
shl
andb
and
dec
jl
ss
adc
test
test
lret
push
mov
adc
out
pop
cmp
adc
jbe
pop
test
rcrl
push
or
leave
sub
jnp
xchg
mov
rcrb
cmc
xchg
pop
xchg
out
ja
cmpsb
dec
mov
jne
xor
xor
popa
mov
xchg
divb
insl
or
pusha
inc
mov
xchg
adc
push
push
enter
shlb
push
cmp
out
das
add
imull
fisttpl
stos
fnstsw
inc
cmp
repz
sub
imul
les
inc
cmp
cmp
sub
pop
pop
or
lea
pop
imull
adcb
jg
sbb
into
mov
and
leave
ljmp
cmpsl
xlat
mov
es
and
sub
test
adc
xchg
or
lea
jecxz
pop
sub
outsb
sbb
dec
mov
cmp
sub
gs
test
out
int3
popa
mov
popa
ja
lcall
and
das
mov
push
dec
pushf
or
mov
push
cmp
pushf
inc
fwait
mov
push
jmp
push
and
jg
jb
fucomp
jle
and
sbb
xor
jmp
sub
push
icebp
push
inc
test
aam
and
cmp
lock
repnz
jl
and
add
cmp
push
test
dec
fs
inc
aam
popf
and
xor
inc
mov
ret
sbb
sbb
sbb
cmp
jge
mov
aam
add
xchg
mov
lcall
and
lods
mov
sbbl
push
loope
xchg
popl
cltd
or
jo,pt
mov
push
mov
fisubl
das
xchg
leave
add
dec
in
and
jo
insl
push
notb
insl
adc
ret
or
aaa
test
xor
fcoms
adc
mov
insb
mov
sbb
sbb
push
scas
or
test
cld
gs
in
add
or
fldl
cwtl
cmp
outsb
mov
fildll
sbb
mov
sbb
stc
cmp
es
push
sub
fisubrl
and
mov
mov
ds
push
test
outsb
ret
jb
sbb
xchg
push
dec
mov
push
lock
cld
add
pop
scas
insb
inc
sbbl
or
fbstp
mov
addr16
jge
nop
mov
out
inc
push
in
in
repz
lret
and
cmpsl
jl
or
test
test
xor
bnd
mov
je
imul
in
xchg
insb
hlt
shrb
shlb
repz
dec
pop
mov
test
iret
and
jns
jmp
stos
xorl
aam
fcoml
mov
xor
push
aas
adc
cmp
jo
add
inc
pusha
inc
mull
add
fidivl
add
xorl
lahf
cs
imul
sbb
out
shll
and
pusha
cmpb
mov
push
add
shlb
mov
sbb
sarl
movsb
mov
scas
pop
pop
mov
mov
and
stos
inc
lods
inc
jle
push
repz
jno
in
jmp
xchg
fldenv
lods
fs
loop
pop
stos
push
push
imul
mov
sub
or
dec
push
loope
sti
mov
and
pop
bound
inc
jne
mov
fmuls
insb
shrb
xlat
cli
inc
insb
mov
mov
push
or
pop
adc
in
jg
enter
testb
xor
push
idivb
jp
jno
addr16
scas
sbb
je
push
xchg
mov
jno
push
loope
push
xor
cwtl
addr16
shrl
hlt
js
popa
add
lock
inc
call
push
sbb
pop
jmp
mov
pushf
sub
in
cmp
or
xor
push
sbb
adc
js
outsb
les
ljmp
dec
mov
lcall
and
pop
bound
pop
lcall
sarl
ret
stos
test
jae
inc
dec
adc
cmp
test
mov
jnp
push
sbbl
mov
sbb
xor
xorl
into
lret
xchg
cs
jnp
leave
outsl
xchg
mov
shrb
or
or
ljmp
jle
ret
hlt
outsb
std
lahf
inc
stc
dec
xchg
xor
insl
clc
cmpsl
frstor
xor
aad
andps
inc
or
push
out
fnsave
dec
cmc
mov
push
shrb
xor
fisubrs
add
and
cmp
pop
jp
push
nop
adc
dec
xchg
enter
mov
les
lea
sub
cmp
aas
sub
ficoms
mov
and
lods
sbb
and
mov
fwait
lods
rol
add
rorl
rcl
cld
xchg
repz
pop
sub
sbb
mov
cmc
mov
int
mov
add
xor
bound
in
sahf
lcall
or
aaa
into
sbb
mov
jne
insl
jg
xchg
test
arpl
stos
cmpsb
push
mov
ret
repz
ljmp
mov
jmp
push
push
rclb
jno
add
es
adc
lock
cltd
push
nop
mov
arpl
and
push
sub
arpl
popf
sbb
mov
add
or
mov
insl
adc
adc
lret
cmpsl
ds
movsb
imull
xchg
vmovdqa
cmpsb
ffree
mov
lcall
icebp
sub
cmp
cli
imul
fcmovb
mov
jmp
addl
push
imul
mov
cmpsb
xchg
stos
mov
adc
mov
cmc
mov
sub
inc
cmp
out
js
dec
aas
mov
stos
mov
stc
push
imul
xor
rorb
xchg
or
andl
dec
cmovno
fsubr
lea
incb
mov
test
je
sahf
inc
notl
push
rep
inc
mov
mov
cmp
mov
mov
aad
cltd
mov
xor
jne
lahf
pop
cli
mov
pop
push
aas
mov
mov
mov
jnp
xchg
cmpsl
icebp
mov
shlb
decl
inc
adc
fisubl
das
ss
inc
mov
jns
das
pop
inc
cmp
mov
popa
adc
scas
push
push
cmp
push
data16
test
or
notb
mov
lahf
mov
dec
in
ljmp
sub
es
adc
fldl
decb
popa
xchg
mull
pusha
mov
shr
das
add
outsl
mov
ret
idiv
push
jp
loopne
push
fsubrs
inc
dec
fisttps
or
cmpsl
fldt
int3
adc
mov
icebp
dec
pop
ret
repnz
adc
inc
int
adc
daa
or
ret
cmp
jecxz
adc
lods
lahf
sbb
mov
addr16
jle
xor
sub
fwait
mov
sbb
loope
pop
fs
push
mov
lcall
xor
rcrl
shlw
loopne
or
cmp
notl
lods
cmp
in
cmpsl
xor
jo
fidivl
pop
mull
inc
pop
pusha
cld
aas
or
outsl
ror
inc
or
ret
gs
fmuls
inc
jbe
push
push
pushf
adc
loopne
rol
repz
fcom
outsl
pushf
jnp
mov
sti
push
adc
ss
stos
repnz
push
gs
pusha
fistpll
cs
imul
sbb
loop
inc
cmp
loopne
in
xchg
add
xor
mov
loopne
jbe
or
pop
out
test
outsb
jle
idivb
daa
push
add
bound
rcrl
fadds
in
xchg
int
dec
sbb
call
cmp
xchg
bound
add
xor
enter
sub
sub
roll
inc
jbe
outsl
or
cmpsl
add
and
loope
fnsave
pop
dec
iret
mov
aaa
and
aam
xchg
sbb
add
inc
sub
pop
leave
and
sub
mov
pop
shrl
cld
xchg
pop
lret
and
addr16
cmpsl
js
cmpsb
subl
xchg
or
rep
call
ja
push
mov
and
and
fildl
imul
andl
enter
sahf
jg
dec
dec
add
mov
mov
xchg
sub
js
pop
daa
std
mov
dec
call
pop
test
sub
insb
fidivs
scas
scas
cltd
jb
jp
xor
mov
sbb
add
aas
call
cmpsl
xor
imul
jnp
lds
mov
ljmp
jne
cwtl
jns
jb
dec
xchg
popa
xchg
xchg
lds
mov
je
pusha
das
in
jg
mov
je
cmp
lods
sub
mov
into
jo
add
pop
cmp
into
aaa
pusha
jl
dec
fs
popf
out
xchg
dec
and
xchg
pop
fdivrs
pop
repz
dec
mov
sub
xor
cltd
xor
lds
jl
cmpsb
mov
sub
gs
loopne
mov
aaa
mov
cli
ja
sub
and
xchg
sub
shll
bound
stc
mov
mov
mov
ret
mov
fmull
ret
pop
or
ss
and
dec
enter
out
out
test
mov
mov
pop
sbb
repnz
xor
or
inc
pop
in
mov
je
lret
leave
or
and
sti
lahf
xchg
les
inc
fmuls
sbb
inc
ss
fiadds
pop
mov
fldenv
and
fistl
adc
test
sbb
pop
ss
push
js
xlat
test
dec
repnz
fstl
daa
sbb
xchg
fnstenv
mov
clc
adc
jo
pop
inc
subb
addr16
adc
imul
add
rol
movsl
jecxz
xchg
sub
push
repnz
int3
sbb
rcrb
cmp
push
es
shll
sbb
fldcw
pop
adc
inc
inc
pop
fisttps
jl
jge
and
je
inc
popa
cmpsl
rcrb
and
jecxz
daa
sub
leave
push
movsb
ret
xchg
mov
pop
push
mov
cmpb
pop
sub
fldz
lret
cld
adc
movsl
mov
sbb
pop
inc
cmp
dec
stc
jg
repnz
mov
sbb
imul
test
mov
movsb
lock
out
popa
adc
pusha
addr16
arpl
das
xchg
push
xchg
inc
fisttps
fildl
scas
cwtl
xchg
outsl
inc
iret
in
push
dec
repnz
enter
js
movsl
cmp
lcall
movb
fisubrs
and
lea
outsl
cmp
adc
sbb
out
lods
xorl
or
ljmp
xor
sbb
nop
mov
outsb
jns
enter
test
ja
pop
or
push
adc
mov
jo
cmp
cmp
or
mov
adc
mov
jmp
ret
adc
lret
cmp
data16
iret
lret
pusha
xlat
dec
push
insl
jmp
fisubl
add
je
lods
mov
xor
ja
iret
cmp
push
arpl
aas
sbb
enter
mov
roll
and
ss
mov
push
jo
fnsetpm(287
aaa
pop
or
lcall
cmp
pushf
test
mov
jp
or
xchg
ja
or
outsl
rcrb
ja
mov
insb
jnp
mulb
cmpb
mov
movsl
mov
pusha
sub
scas
mov
jo
adcb
psadbw
sbb
loopne
or
pop
dec
xor
mov
mov
in
or
cmpsl
outsl
sbb
lods
xchg
sbb
mov
push
sub
fbstp
jl
rcrl
jp
push
jo
mov
xchg
lret
outsl
pushl
arpl
call
push
mov
lcall
icebp
jl
les
mov
push
add
in
xchg
or
subb
lahf
mov
cmp
xchg
and
out
sub
addb
pop
icebp
ja
fadd
lds
pop
int3
in
fstpt
jecxz
or
xor
add
movsb
into
push
ss
mov
into
lods
fcoms
cmp
xor
out
fadds
and
pop
in
adc
pop
out
js
cmp
xor
pop
jg
and
aaa
int3
out
pop
xchg
inc
mov
imul
popf
call
mov
push
jb
lods
pop
pop
and
movsb
cmc
adc
test
add
xchg
jl
ljmp
aam
dec
adcl
or
pop
shrb
pushf
inc
xor
cli
sbb
mov
xor
push
push
iret
fistl
sarl
dec
push
xchg
lock
mov
adcb
or
sub
xchg
mov
dec
out
add
pushl
xor
push
mov
loope
stc
sar
sbb
and
add
adc
imul
xor
stc
push
xor
and
testb
add
orl
mov
sub
insb
add
dec
subl
std
imul
ja
push
test
or
stos
sarl
cs
jle
jnp
dec
lods
lock
outsl
stos
in
shrb
lret
inc
add
inc
test
inc
or
iret
fs
ja
dec
rcrl
aaa
dec
jmp
loope
subl
adc
push
sbb
mov
adc
jl
mov
dec
jecxz
scas
xchg
xor
adc
pop
lcall
and
cmpsb
inc
xchg
stos
in
outsb
xchg
xor
or
sub
push
or
lods
jge
push
ja
xchg
repz
repnz
shll
fwait
mov
jns
shlb
pop
cmp
ja
arpl
jle
test
xchg
lahf
loop
cmpb
xchg
repnz
lods
sub
test
lods
scas
decb
sahf
ds
test
pop
xlat
adc
rcrb
xor
or
add
hlt
shll
mov
xor
and
leave
into
insl
cmp
adc
shrb
pusha
negl
aaa
jle
jg
cld
jecxz
inc
pushf
adc
adc
inc
pop
aam
mov
adc
jo
imul
jmp
or
push
into
mov
jge
adc
lahf
popf
inc
popf
pop
mov
lds
cmpsl
cmp
fldt
int3
cmpsb
jb
sbbb
lahf
add
gs
jmp
hlt
cwtl
das
dec
adc
enter
push
pushf
or
mov
mov
test
popa
fsubrl
inc
mov
mov
vcomisd
iret
jbe
xchg
push
mov
jecxz
fdivrl
out
adc
repnz
sbb
in
ja
push
inc
popf
push
mov
cmp
imul
pusha
divl
imul
and
xchg
stos
pop
inc
cli
mov
out
scas
out
dec
faddl
xor
cli
test
ficomps
in
mov
outsl
sub
aaa
mov
dec
insb
aaa
cmp
and
cmc
mov
sub
xchg
mov
roll
movsb
repz
jge
jne
mov
out
inc
sub
ljmp
sub
js
ret
push
push
sbb
dec
jecxz
cmp
test
imul
nop
sarl
xchg
lea
nop
jp
repnz
or
imul
imul
mov
inc
fwait
nop
mov
jae
lcall
push
iret
mov
inc
jno
adc
std
cmpsl
ljmp
xor
xchg
mov
iret
nop
daa
stc
test
add
fcomi
dec
aas
mov
xchg
outsl
popf
popf
add
sbb
mov
cld
and
adc
cmpsl
cmp
outsb
push
mov
fsubrl
add
jns
vmread
movsb
cwtl
in
push
test
je
push
adc
mov
jmp
jg
xor
xchg
jl
aam
testb
icebp
xor
es
dec
in
cmp
cmp
ret
push
mov
mov
cmc
mov
push
testl
pop
loop
xor
fnstenv
popf
sub
mov
mov
loop
js
aaa
mov
outsb
mov
fwait
insb
pop
dec
xchg
push
pushf
clc
cmp
sub
popa
fdivrl
shlb
pop
cmpsl
aad
mov
shl
push
push
sbb
int
mov
in
mov
stos
in
dec
jmp
or
insb
cmpb
ret
rolb
js,pn
in
pop
mov
add
insb
popa
cmc
dec
xor
add
and
or
stos
xchg
in
scas
jl
movsl
mov
xchg
dec
stc
and
popf
push
mov
test
ret
sub
call
mov
pop
repz
das
ret
ja
shll
loope
loop
cmp
pusha
pop
mov
add
cmp
mov
aad
sub
sub
clc
repnz
sti
sbb
xchg
dec
mov
test
sbb
pop
idivb
mov
ss
pop
and
nop
fcmovbe
mov
lods
ja
int
nop
dec
jp
shll
xchg
push
ret
mov
adc
sbb
jb
pop
and
in
mov
loopne
int3
ds
lock
cmc
sti
jae
and
cmp
lcall
popf
or
or
mov
mov
adc
stc
xor
lock
inc
mov
mov
arpl
sbb
mov
test
sub
add
test
cld
mov
fisubl
mov
inc
ret
lds
lret
sbb
in
mov
xchg
js
push
mov
lar
mov
push
fwait
loopne
xchg
push
jge
fs
cmp
push
pop
and
jl
cmp
add
movsb
push
xor
scas
test
or
push
not
lcall
sub
sbb
sub
aam
into
pusha
in
cld
dec
fnstsw
push
adc
int3
pop
cmc
pop
mov
addr16
mov
int
and
fbstp
mov
std
mov
out
jl
mov
mov
movsb
push
shlb
lock
in
and
out
inc
xlat
mov
cmpsb
daa
arpl
inc
das
rep
vaddps
ror
int3
cmpl
scas
shll
sub
bound
mov
cmp
into
and
jno
ljmp
sub
inc
lahf
mov
mov
inc
cmp
jae
xchg
adc
ss
out
cmpsl
lds
jecxz
pop
sub
fldenv
lods
xchg
push
mov
mov
mov
mov
push
into
ds
iret
scas
aaa
push
out
fs
int
xchg
sub
add
cltd
hlt
int
push
rorl
mov
mov
add
out
testl
push
mov
ja
imul
xor
fstpl
xor
push
ss
pop
sub
mov
call
outsb
iret
push
test
and
cmc
enter
in
or
dec
fldt
test
in
mov
lahf
aam
mov
pop
scas
inc
mov
xor
es
repz
iret
cmpsb
gs
inc
stc
inc
or
mov
xchg
icebp
in
pusha
cmpsl
cmp
cmp
outsb
aad
mov
adc
mov
dec
ljmp
cwtl
jg
std
movsl
mov
jns
push
push
mov
loopne
mov
popa
jb
fldt
cld
nop
daa
ljmp
out
sbb
jb
and
fwait
inc
cmp
test
popf
push
xchg
pop
lret
lret
bound
add
xchg
test
dec
testb
addr16
cmpsb
push
sub
dec
cmp
lret
push
stos
cld
adc
and
push
jno
xor
mov
movsl
cmp
outsl
mov
mov
inc
ja
jbe
jge
or
daa
or
lods
jle
div
dec
dec
daa
sbb
sub
fadds
sarb
scas
inc
sbb
aas
push
rcl
into
leave
inc
call
movsl
pop
jo
jle
dec
in
mov
push
mov
ja
fadd
sbb
adc
movsb
lahf
test
xchg
out
incb
dec
pop
mov
lods
or
cmc
and
out
mov
mov
cmp
test
bndstx
int3
xchg
pop
jg
dec
out
js
xchg
xchg
sub
cmp
mov
sub
stos
jmp
mov
inc
pop
insb
fwait
xor
xchg
mov
or
mov
jge
mov
mov
inc
push
ljmp
popf
push
adcb
in
out
aad
adc
out
pop
mov
mov
insl
pop
iret
xchg
adc
outsl
fstpt
and
mov
decb
and
pop
ja
sub
aad
inc
sbb
pop
lds
or
jae
mov
test
loop
mov
ret
in
mov
lods
test
xor
and
rcrb
mov
xchg
dec
mov
mov
lods
push
into
mov
inc
data16
inc
inc
sub
sbb
ret
loopne
cwtl
cmp
mov
fistpll
imul
pop
movsl
aaa
xor
jmp
cwtl
dec
std
push
jbe
pusha
pop
inc
xchg
enter
add
push
pusha
les
rcll
inc
data16
ficoms
sti
popa
dec
add
xchg
xor
dec
cli
jne
push
in
pop
xchg
aam
mov
lret
adc
dec
cmp
pop
xchg
inc
push
sti
loope
lret
loope
dec
jbe
test
inc
or
mov
fidivs
jle
dec
xchg
sbb
sbb
xor
mov
sbb
mov
gs
adc
and
js
outsb
and
lea
jg
outsb
std
and
add
and
cmp
inc
popa
shrl
cmp
xchg
jg
jne
xchg
mov
xchg
in
mov
bound
loopne
mov
pop
push
add
cld
aad
lea
lods
pop
into
addr16
gs
adc
push
sub
aas
push
or
mov
stos
mov
into
data16
scas
or
sbb
lret
push
popa
in
or
insl
cmp
lods
nop
scas
pop
mov
cmc
mov
cmp
push
cmc
push
or
fwait
xor
inc
gs
adc
dec
push
hlt
sahf
cmpsl
loope
push
mov
cmpsb
les
test
jge
push
movsl
inc
jecxz
mov
push
mov
cmp
fadd
pop
int
or
loopne
pop
mov
stc
dec
fadds
push
icebp
test
fdivs
jmp
mov
cmp
in
cmp
mov
mov
push
lcall
stos
movsl
pop
ret
dec
or
sbb
push
test
pop
xchg
out
imul
orl
pop
clc
xchg
adc
in
dec
add
jle
and
sahf
popa
ficompl
mov
or
mov
in
cmpsl
lds
push
ljmp
mov
xchg
mov
aam
inc
sub
inc
mov
loop
push
in
dec
push
negb
inc
movsl
addr16
rol
test
fs
orl
ret
push
or
fisttpl
xchg
fwait
jmp
outsl
popf
shrb
icebp
inc
aas
pop
adc
lret
jnp
push
mov
pop
xor
jle
add
mov
test
in
fcmovnb
repnz
sub
sbbl
pop
jmp
jg
push
leave
jecxz
data16
aas
mov
push
sbb
and
jg
push
jne
cwtl
mov
mov
mov
pop
fcomp
and
insw
sarb
xor
fsts
pop
xchg
push
subl
push
add
cld
scas
sub
push
movb
hlt
pop
data16
repz
mov
mov
insb
push
repz
ja
ja
sbb
aam
jne
cmp
into
fdivrl
mov
and
ds
test
je
sub
xchg
add
notl
mov
mov
or
mov
mov
xor
popa
stos
jmp
iret
jmp
and
nop
fiadds
xor
std
jg
jno
inc
pushf
daa
mov
pusha
push
aam
add
add
cmpl
pop
scas
mov
cli
dec
out
xor
pop
lcall
dec
aam
jbe
mov
stos
and
add
push
mov
cmc
mov
adcl
mov
in
xor
aad
scas
das
fwait
es
ret
push
icebp
xor
sahf
xor
pop
mov
xchg
nop
lock
nop
inc
rclb
pop
repz
and
xchg
arpl
cmpl
loop
sub
push
mov
and
iret
out
scas
mov
dec
push
adcl
sub
shrb
push
add
mov
mov
pop
out
popf
xor
mov
jle
dec
aam
nop
mov
dec
mov
mov
std
sahf
lods
and
inc
jb
cmp
frstor
sbb
mov
xchg
les
cmp
lea
xchg
rcrb
push
sub
cmp
pop
jne
ret
sbb
int
jle
jne
repz
cltd
xlat
pusha
clc
daa
bound
xchg
add
in
mov
dec
arpl
call
mov
sbb
fadds
popf
or
sbb
xor
jge
arpl
outsb
mov
xor
jbe
inc
add
addr16
scas
xlat
gs
xchg
fldl
out
add
aas
jp
mov
int3
bound
daa
jnp
xor
xlat
dec
cld
dec
mov
mov
fsubr
fwait
xchg
jge
mov
push
jl
clc
xchg
pop
popf
cwtl
jne
ret
cltd
and
jns
andb
xchg
sub
cs
and
dec
lret
stos
mov
cltd
adcb
xchg
call
lods
hlt
int3
jl
push
repnz
aaa
fwait
arpl
test
sub
jmp
rol
icebp
cltd
das
lsl
jl
xor
adc
pop
outsl
sbb
mov
mov
js
add
std
mov
sbb
cwtl
dec
push
add
mov
pop
mov
push
out
int
shll
pop
aad
add
xchg
lods
rclb
pop
add
jge
hlt
jg
bound
pop
leave
and
jne
and
aaa
xor
test
xor
pop
or
pusha
mov
pop
out
push
add
push
mov
lret
dec
pusha
mov
jp
mov
sbb
dec
in
mov
push
ret
call
roll
aad
insl
and
addr16
mov
add
fiadds
cmp
aaa
mov
es
pop
or
testl
dec
or
cmpl
pusha
or
jo
roll
and
aad
lahf
fwait
pop
mov
sub
xor
shr
aad
mov
inc
fdivr
inc
adc
jmp
sbb
push
in
fnstcw
jae
ss
mov
inc
inc
test
lods
dec
pop
filds
int
inc
sbb
shlb
sbb
cmp
or
in
pop
or
ds
nop
mov
leave
xlat
je
pop
imul
push
mov
or
jns
cmp
ficompl
shll
push
outsb
mov
mov
add
data16
test
int
movsl
fdivr
aas
sub
inc
fisubrs
loop
in
xor
roll
sbb
cld
data16
inc
jecxz
in
out
loop
cs
in
sbb
dec
add
hlt
pop
ja
int
fs
push
xor
jl
mov
or
xchg
aam
dec
cli
xlat
imul
imul
jge
add
mov
xchg
popf
xor
jnp
mov
iret
fisttpl
les
push
jg
sub
xchg
mov
jg
sti
lcall
xchg
dec
imull
xchg
push
pusha
mov
insl
cli
mov
sbbb
mov
test
insl
sbb
mov
rcrb
mov
jge
loop
iret
pop
push
or
cld
pop
mov
mov
push
push
add
nop
das
xchg
sbb
and
cmp
out
shl
fidivl
xchg
push
mov
push
clc
mov
mov
xchg
stos
mov
cmp
cmp
ja
outsb
mov
mov
and
adc
add
fimull
and
cli
jne
call
in
push
cmp
insl
mov
xchg
pop
jnp
fcompl
mov
push
pop
xchg
lret
push
popf
std
cmp
ss
icebp
dec
xchg
test
cmp
mov
addr16
in
jns
adcb
or
repnz
sub
sub
adc
jmp
into
scas
sub
cmp
aas
out
movb
in
cli
push
rolb
mov
int
lahf
or
adc
add
cmpsb
clc
mov
sub
ret
sub
cld
push
pusha
xchg
mov
jo
cmp
dec
rcll
popf
mov
mov
or
mov
add
add
xlat
outsb
mov
testb
in
lods
inc
pop
andl
mov
mov
cmpsb
cmp
int3
inc
cmp
cmp
mov
insb
jecxz
cmpl
and
popf
ja
into
movsl
xchg
ja
hlt
jnp
pop
lcall
mov
add
mov
add
je
sbbl
out
das
ret
js
jne
das
push
xchg
push
xor
push
lea
cli
add
cltd
push
inc
inc
test
fwait
and
adc
dec
mov
mov
xor
aam
jbe
xor
jg
jnp
or
aad
push
cmc
xchg
jge
mov
jl
neg
add
prefetcht2
and
xor
mov
mov
stos
jbe
adc
pop
xchg
call
pop
enter
aam
leave
int
dec
cmc
mov
js
pop
xchg
cwtl
xor
pop
movsl
adcb
cmp
sbbl
sbb
push
jge
ret
mov
ljmp
add
cmpsl
lods
pop
fstps
ljmp
mov
cmc
mov
mov
incl
ret
cmp
hlt
jns
aaa
fwait
mov
mov
cmp
or
shlb
cmpsl
jp
cltd
aas
dec
sti
inc
in
popa
xor
xlat
ljmp
fwait
pop
rcll
xor
push
ja
xchg
inc
sub
dec
jmp
xor
push
mov
lcall
jp
jne
inc
cmpsb
pop
xor
lahf
or
pop
call
test
repz
or
adc
mov
aaa
scas
cltd
xor
pop
mov
imul
call
jp
movsb
pop
jecxz
mov
cmp
jg
sbb
mov
cli
stos
ljmp
lcall
arpl
pop
sbbb
mov
nop
cmp
dec
lahf
inc
pop
pop
xor
jne
fldcw
cmp
pusha
fstpt
xor
out
and
cmpsb
push
mov
sahf
sub
dec
and
sbb
popa
and
cld
fwait
pop
inc
fstpt
pusha
mov
fisubl
xor
loope
or
sub
sub
or
pop
enter
fsubrs
int3
fbld
into
add
mov
dec
adc
in
in
stc
xlat
hlt
cmc
sbb
ds
xchg
movsl
lods
jecxz
cmp
jmp
push
popf
adc
inc
fsubrs
sub
cld
sbb
dec
cltd
adc
cwtl
imulb
int3
adc
push
ficoms
mov
mov
fiadds
xchg
sbb
lods
jg
movsl
sub
and
pop
push
test
mov
cld
lds
ljmp
sahf
js
movsb
cmpsl
lcall
and
cmpsb
cmpsl
or
mov
outsb
jl
scas
push
jb
ret
cmp
test
lret
imul
insl
fs
insl
in
dec
xor
xchg
inc
test
push
jb
jecxz
jge
push
jle
mov
jns
mov
jns
jbe
push
cmpsl
add
inc
stos
xor
push
dec
cmp
insl
fnstenv
and
jle
cmpb
iret
inc
movsb
or
or
lea
mov
in
xor
leave
jne
in
jmp
xor
push
add
sub
fnstcw
xchg
in
xor
push
out
push
mov
flds
and
repnz
cmp
loope
int3
arpl
das
ljmp
in
int3
fs
call
jmp
jb
jb
inc
adc
incl
hlt
mov
add
inc
fs
mov
inc
mov
test
jno
insl
jnp
pop
jg
dec
pushf
int
idiv
in
test
iret
dec
out
shlb
cwtl
xor
cwtl
out
dec
sbb
and
test
and
cmp
or
sub
ljmp
call
lahf
push
jmp
clc
scas
les
dec
inc
pop
jb
sbb
daa
sbb
jg
insl
or
mov
movsb
sti
inc
add
push
mov
mov
cmpl
or
add
xchg
mov
push
jne
div
jl
mov
mov
rep
pushf
dec
jmp
cmpsl
outsw
push
xchg
aaa
int
imul
jbe
mov
dec
test
icebp
or
test
pop
ss
pop
cwtl
jo
or
mov
inc
fisttpll
dec
fldcw
xor
stos
or
movsb
nop
mov
sbb
push
add
xchg
sub
rol
mov
jae
jb
xor
pop
mov
dec
clc
das
mov
mov
dec
push
gs
fsubrl
sbb
cmp
ja
aaa
stc
xchg
test
js
mov
ficoms
and
iret
xor
fstl
and
repz
push
inc
lcall
inc
xor
dec
mov
mov
mov
int
adc
pop
inc
adcb
pop
arpl
or
addr16
popf
push
pusha
xchg
outsl
or
add
jg
sti
jl
rclb
jne
call
add
and
dec
jecxz
dec
add
out
scas
jecxz
add
dec
mov
jle
jg
add
jbe
inc
xor
in
sbbl
or
gs
mov
jns
roll
cli
adc
sbb
cmpsl
dec
mov
scas
mov
mov
lods
xor
ljmp
jnp
pop
enter
jbe
and
adc
or
push
adcl
or
mov
insb
sbb
push
ret
popf
insb
jl
imul
xlat
rorb
jne
cmp
jmp
or
movhps
adc
push
pop
push
jbe
mov
outsl
xor
cs
pusha
stos
mov
arpl
int
repz
rorb
mov
movsb
lret
stos
pop
xor
lods
cmc
xor
rcll
jmp
add
xchg
sbb
mov
movsl
es
pop
addl
adc
mov
icebp
jg,pt
mov
addl
jge
jmp
outsl
repz
lcall
sbb
test
pop
loopne
mov
stos
insl
icebp
mov
shrl
fsubp
jle
add
mov
add
jae
into
jl
arpl
dec
sub
sbb
out
shll
mov
mul
mov
lea
xchg
push
cli
mov
add
mov
push
das
bnd
jne
jo
divl
jno
mov
dec
iret
call
cld
dec
adc
push
dec
daa
lods
movsl
pop
and
out
cmpl
jle
stc
push
stos
movsl
pop
xchg
cmp
sbb
pop
out
mov
cmc
jl
stos
mov
repnz
cs
xchg
sbb
cmp
loopne
jmp
fisubl
cmp
ss
repnz
pop
aam
orl
lcall
push
dec
adc
mov
ret
sub
bound
mov
inc
lods
fidivrs
mov
push
and
adc
xchg
adc
sub
leave
loop
jae
or
rcll
mov
add
mov
decb
iret
data16
fldl
xchg
incb
rolb
pop
andb
mov
push
add
jmp
repnz
cmpsl
jp
andb
pushf
mov
rol
inc
int
leave
cli
pop
shrl
sbb
inc
stc
dec
cmp
hlt
btc
repnz
repz
push
fnstenv
xlat
adc
xchg
inc
clc
mov
insb
add
cmp
and
in
mov
flds
push
mov
add
push
push
xor
xorb
fdivrs
rcrl
leave
dec
testl
addr16
iret
fisttpll
sub
rolb
daa
pop
repnz
jle
lcall
jle
dec
mov
lret
push
shll
shr
sbbb
in
in
sti
jge
xor
out
imulb
stos
mov
fwait
lcall
andl
xor
hlt
loopne
enter
out
xchg
adc
ljmp
scas
stos
das
adc
aad
xor
or
sbb
jle
arpl
imul
lret
out
in
inc
push
mov
sarl
les
decl
loope
add
repz
nop
jge
jno
sbb
or
std
movsb
icebp
ja
xchg
dec
xor
xchg
sub
pop
in
xchg
imul
outsb
sub
mov
aaa
lahf
push
inc
sbb
clc
enter
ljmpw
or
inc
mov
push
mov
adc
rol
dec
out
mov
sbb
mov
data16
shlb
scas
adc
mov
push
push
popf
inc
loope
or
insl
out
fwait
lcall
adc
dec
gs
je
pop
xlat
mov
ret
ret
push
adc
ljmp
ljmp
push
fucomp
cmp
pop
shll
stos
psubw
leave
cli
xor
xlat
aaa
addl
and
mov
jno
movsl
mov
lahf
test
or
and
cwtl
lods
arpl
ljmp
ds
call
jp
test
mov
ret
call
mov
mov
pop
xchg
ds
popf
sbb
shr
mov
fisubl
adc
push
pop
lret
pop
push
insb
add
adc
sbb
pushf
sub
shrb
nop
ja
out
pop
xor
andb
inc
cmpsl
adcl
sbb
adc
ja,pn
cmp
dec
js
rclb
or
cmp
in
xchg
aaa
flds
or
push
mov
mov
fwait
adc
inc
fsubrs
xor
lret
cmp
icebp
inc
out
pop
add
cld
out
xor
mov
cmc
repnz
dec
mov
inc
dec
repnz
lods
push
cmp
adc
mov
pop
sbbb
mov
adc
add
dec
fimull
popa
inc
aaa
ret
jnp
xor
xor
lock
mov
sbb
sub
bound
push
fs
mov
push
pop
cmp
dec
push
xchg
hlt
push
lods
fsubr
sub
cmpsl
dec
pop
lahf
cmpsb
cmp
outsb
psllq
insb
add
push
mov
js
cmc
sahf
mov
imul
cmpsb
pop
pushf
ja
mov
push
cltd
arpl
mov
rcrl
mov
aam
aas
sbb
mov
imul
dec
xor
scas
lds
sahf
mov
sbb
and
ja
add
pop
and
sub
jp
leave
stos
sbb
mov
jo
fbld
ljmp
imul
dec
dec
sub
in
call
enter
add
adc
dec
jne
insl
rol
dec
pop
mov
test
shr
repnz
fs
in
xchg
popf
shll
jo
and
mov
sbbb
jbe
xchg
pushf
xchg
test
in
test
xor
cmp
ficompl
cmp
push
fwait
add
pusha
or
xchg
pop
insb
jbe
lds
call
or
inc
mov
je
push
iret
scas
push
loope
jnp
mov
pushf
mov
xchg
dec
ffreep
pusha
adcb
ds
sbb
fidivrs
jb
cmc
mov
lcall
sub
adc
inc
cmp
mov
mov
imul
xor
and
pop
out
xor
cmp
pop
cmp
ljmp
or
lcall
or
in
stc
push
pop
mov
dec
lcall
or
xor
sbb
mov
ret
cmp
inc
outsb
movsb
adc
in
cli
push
sub
pop
int3
jbe
loope
jge
push
fstpt
push
outsl
enter
ret
sub
pop
in
stc
lret
push
ja
adcb
push
nop
ss
cs
ficomps
cmp
mov
out
test
push
cmpsb
jmp
xchg
ljmp
adc
push
imul
mov
mov
out
dec
mov
fsts
in
ja
jne
aad
sub
push
jmp
xchg
xor
push
pop
repz
xchg
xor
mov
leave
jo
movsl
cwtl
lret
dec
mov
fistps
and
ret
sahf
and
lahf
bound
imul
xchg
mov
push
lods
aas
jle
jnp
loope
arpl
pop
repz
test
mov
call
xchg
fnsave
push
sahf
push
lea
push
out
rorb
enter
mov
in
pop
add
cld
leave
jo
aad
or
mov
sub
lea
pop
dec
pop
xchg
cltd
cmp
xchg
adc
clc
pushl
cmpsb
imul
xor
cmp
mov
inc
insl
xchg
icebp
mov
fisttps
lds
in
push
cmp
jns
ss
and
and
loopne
out
ret
daa
xor
cmp
xchg
aas
mov
repz
cltd
scas
cmp
and
icebp
rclb
into
rolb
or
mov
pop
in
stc
inc
sub
jns
bound
xchg
jmp
jmp
aad
or
lds
mov
pop
rcl
cmp
mov
fistpll
setb
test
pop
lock
rcrb
inc
sahf
xor
iret
data16
push
mov
loop
xlat
pop
jne
add
incb
ja
cmp
cmp
or
pushf
xor
sub
jp
es
and
mov
inc
fnstcw
cs
leave
int
repnz
lods
and
dec
shlw
xor
jge
mov
push
fwait
mov
scas
mov
pop
das
jns
jne
cmp
cmp
ret
cmp
ret
roll
mov
jmp
adc
lahf
negl
fsubl
or
sub
dec
sahf
mov
pop
or
mov
das
dec
lock
ja
dec
out
stc
jae
jnp
std
aas
test
adc
insb
inc
or
lcall
loop
jno
inc
xchg
sub
mov
and
idivb
aaa
dec
hlt
sub
jmp
mov
daa
inc
arpl
push
daa
iret
pushf
xchg
sbb
js
jecxz
psubsb
addr16
arpl
in
xchg
and
xchg
icebp
lahf
div
adc
ret
inc
fwait
pop
fwait
int3
jb
or
aam
test
inc
and
mov
cmc
pop
xor
loope
ret
arpl
aam
cmc
sbb
dec
out
mov
inc
mov
sub
mov
outsb
xchg
imul
xchg
pop
imul
mov
push
js
mov
dec
in
push
in
mov
sbb
adc
mov
rorb
jns
xchg
sahf
loope
xor
loopne
and
in
hlt
pop
cmp
je
aaa
shrb
pop
pop
push
sub
xorl
push
je
mov
popf
stos
repz
add
push
je
aas
pop
dec
fs
mov
stos
xorl
mov
pushl
movsl
repz
in
mov
xchg
test
sbb
jmp
scas
and
fs
lock
push
xchg
sub
push
stos
scas
xor
add
mov
insb
int3
arpl
mov
call
mov
sbbl
out
xchg
jp
dec
vpsraw
jne
or
stos
insb
push
dec
dec
jbe
mov
retw
add
lret
xchg
data16
dec
sbb
into
dec
push
add
pop
push
mov
dec
sbb
sbb
dec
loop
sub
iret
mov
sub
rorb
mov
or
jecxz
popf
mov
cmp
add
jp
jmp
xor
orl
sub
insb
test
not
pop
add
cwtl
add
inc
pop
pop
fiaddl
je
inc
push
aaa
test
inc
fists
cmpl
pop
xchg
arpl
push
xchg
mov
jmp
sahf
es
sti
orb
inc
imulb
push
dec
sbb
hlt
pusha
in
out
out
or
leave
fnstenv
fidivs
in
pop
lret
insb
cli
lock
jns
aas
add
addr16
pop
ret
mov
ss
ja
xchg
sub
jne
popa
mov
dec
call
ret
in
movsb
xor
push
or
inc
fistps
adc
pop
shll
mov
xchg
sbb
push
mov
je
or
addb
mov
push
dec
repz
mov
mov
and
jecxz
ret
xchg
ret
lds
jle
push
mov
mov
jl
out
shll
add
cwtl
and
stos
pop
scas
popf
jmp
jnp
and
pop
fisubl
or
sub
pop
les
out
call
push
les
sub
iret
xchg
dec
in
dec
xor
and
xchg
push
jmp
aaa
xor
jns
push
subb
cmp
cwtl
xor
pop
leave
push
shl
and
and
mov
jle
insl
xor
loopne
push
xor
and
shl
push
in
or
lret
xchg
cs
fwait
jb
hlt
sbb
sub
cmc
xchg
cmpsb
or
push
ljmp
add
and
pop
leave
push
mov
jmp
movsb
mov
and
push
xchg
std
ja
aas
adc
inc
mov
loope
jecxz
in
sub
dec
add
divb
push
mov
jle
add
cld
add
es
out
sahf
push
cmp
ret
repnz
pop
dec
mov
outsb
dec
xchg
call
or
ss
call
mov
in
mov
aad
xchg
mov
xchg
add
ja
arpl
sbb
adc
in
inc
push
xchg
ret
push
cs
cwtl
jne
cmp
xor
out
gs
fs
ret
hlt
mov
cli
pushf
shr
outsb
aas
cwtl
dec
ljmp
pop
pop
testb
cltd
sub
xchg
jle
hlt
leave
mov
push
xor
addr16
in
shrl
les
and
pop
aam
jb
js
pop
inc
sbb
stos
xchg
out
test
jbe
call
cmp
punpckhdq
push
sahf
xchg
pusha
push
cmp
mov
movhlps
add
jg
or
xor
pop
orl
xchg
ret
pop
outsb
add
push
sahf
xor
pop
mov
test
push
add
cmpsb
xor
jecxz
notl
xchg
hlt
lods
inc
cmpsb
mov
cmp
outsb
lret
bound
jg
cld
lock
mov
test
push
sub
adc
fcomps
adc
fcmovnb
pusha
ljmp
pop
fdivp
push
dec
in
adc
arpl
xchg
add
sahf
clc
cltd
outsl
cld
pop
lods
xchg
mov
or
or
incb
add
dec
xor
push
mov
sti
push
fadd
dec
ss
inc
pop
jmp
in
lcall
fwait
enter
adc
and
aas
loop
push
xor
orb
lcall
push
je
scas
xchg
cmp
mov
out
or
in
and
aaa
jbe
outsw
out
ret
xlat
pop
mov
flds
mov
mov
jo
ja
rcrb
mov
jmp
jae
mov
adc
sub
fcmovnb
mov
hlt
mov
pushw
add
pop
xchg
or
scas
iret
sub
bound
push
pop
pop
andb
lret
imul
cmp
mov
pop
pop
cmp
je
xchg
cmp
add
cmp
xor
mov
push
adc
xchg
pop
mov
and
into
mov
pop
out
pop
mov
mov
adc
xor
rcrl
sbb
inc
and
loopne
test
push
inc
daa
inc
in
sub
or
cmp
pusha
adc
push
dec
loop
mov
pop
out
cmp
out
imul
ds
adc
jbe,pt
mov
lods
ficompl
sbb
push
fnstenv
push
test
cmp
ds
cmpsb
test
cmp
mov
and
xchg
call
jle
sub
add
pop
inc
push
jb
inc
bound
outsl
into
sbb
or
mov
mov
xlat
dec
jns
out
stos
inc
adc
testb
out
sti
mov
sbb
test
pushf
inc
adc
pop
push
cltd
dec
dec
stos
inc
mov
out
sbb
loopne
ja
mov
lcall
xor
adc
test
cmp
inc
jp
cmpsb
dec
cmp
cltd
repz
and
jge
movsl
xor
jae
and
cmp
mov
js
fbstp
lods
pop
xchg
leave
push
int3
sub
sti
pop
xor
lret
inc
dec
cmp
or
cmc
mov
leave
std
cltd
jg
jmp
sbb
lahf
cs
inc
aas
pop
jae
icebp
nop
lods
push
xchg
das
pop
mov
pop
mov
movsl
jns
push
jnp,pt
addl
add
dec
arpl
push
movsl
pop
dec
repnz
arpl
outsl
sbb
insl
add
es
clc
rcr
jae
fisttps
xchg
jecxz
notl
lock
or
push
push
and
push
jl
loopne
sbb
xor
faddl
fisttps
mov
shll
push
adc
and
jge
inc
xchg
les
into
and
xlat
push
addr16
lret
shrl
push
outsl
mov
dec
lock
inc
icebp
lahf
ss
loope
insb
test
test
in
enter
jle
lock
pop
pop
addr16
sahf
jb
inc
adc
inc
mov
push
sub
dec
mov
mov
das
cmp
lret
push
rcll
mov
icebp
sarl
xchg
pop
fdivl
arpl
sbb
jecxz
insl
jge
inc
aas
xchg
mov
jb
popf
cmp
mov
mov
push
aam
pop
leave
lods
mov
or
pop
scas
nop
adc
imul
fsubl
and
push
lea
push
daa
jle
mov
sbb
fcompl
jl
push
aad
cmpxchg
lcall
ja
cmp
jecxz
pusha
xchg
lds
mov
repz
lret
cmpb
mov
fiaddl
jg
call
cmp
movsl
push
inc
into
inc
outsl
push
or
ret
jp
mov
jl
sbb
jo
in
test
sti
dec
test
inc
xchg
cmpsb
outsb
lcall
insb
dec
out
aaa
into
xchg
push
shr
pop
ljmp
fst
ret
test
lret
cmpb
loope
test
sbb
pop
add
int
fbld
mov
gs
mov
push
jp
and
enter
mov
popa
repnz
and
pop
cmp
jecxz
test
inc
fcoml
sbb
jle
daa
cwtl
or
je
aas
xchg
outsl
sbb
adc
cmp
daa
or
iret
sbb
jnp
mov
cltd
jp
stos
mov
inc
loopne
dec
pop
mov
mov
jns
and
lahf
lock
mov
mov
add
add
clc
imul
les
mov
xor
fdivrs
or
les
and
xchg
sbb
xchg
cmp
jecxz
push
xchg
aad
add
adc
mov
cs
mov
mov
mov
insl
fisubl
or
jle
lcall
adc
and
pop
sbb
cmc
cmp
adc
addr16
cmc
and
fwait
jbe
je
xor
sub
push
lret
or
xchg
xchg
adc
dec
mov
lea
aas
push
dec
mov
das
mov
dec
or
jmp
pop
shl
cmpl
ret
mov
xor
mov
sbb
pushf
in
sahf
in
sbb
aas
or
scas
mov
test
mov
xchg
and
inc
and
mov
addr16
dec
jno
cmp
jnp
sbb
scas
xchg
mov
int3
cmp
jg
adc
bound
add
outsb
adc
xor
pushf
mov
add
shrb
xchg
and
mov
push
je
dec
xor
loope
push
cmp
mov
shrl
mov
xor
jl
push
sub
mov
mov
xor
pop
xchg
call
fstl
and
push
xor
push
xchg
into
xchg
dec
jbe
outsl
push
into
push
mov
test
xor
sbb
subl
loopne
ret
xor
add
ds
sub
cmp
aas
andl
and
mov
and
mov
xor
ret
insl
rcl
jae
mov
xlat
mov
dec
pop
stc
cmpsb
lret
push
sbbb
das
aas
stos
cmp
cmp
in
outsb
lcall
xchg
jo
sub
iret
icebp
xor
push
outsb
add
std
pop
andl
mov
shrb
test
inc
dec
loope
jo
mov
mov
or
mov
lahf
jge
aam
add
stos
pop
pop
xor
in
ret
sarb
adcb
insl
inc
dec
iret
fwait
jb
pop
pop
orb
test
ret
pop
out
insl
iret
pop
dec
xchg
test
cmpsl
es
or
dec
in
cmp
clc
imul
or
dec
jb
mov
aam
dec
repz
cld
aam
adcb
divb
dec
ficompl
xchg
scas
or
popa
adcl
negl
add
mov
scas
mov
arpl
aad
mov
in
fsubs
pop
pop
dec
iret
fdivr
sti
jbe
jge
fidivrs
shl
push
int3
shlb
stos
dec
push
adc
mov
mov
sbb
popa
mov
fwait
add
jno
mov
leave
xor
ficoml
mov
loopne
mov
cli
mov
cltd
jno
stc
xchg
sbb
stc
sbb
jns
aad
cmp
mov
lret
push
loope
mov
jmp
lods
and
dec
iret
repz
and
sub
fistps
or
inc
push
jb
int
mov
inc
nop
and
mov
fistps
outsl
xchg
das
test
jbe
scas
daa
lahf
popa
pop
loopne
mov
mov
and
frstor
mov
adc
xor
test
call
cmpsl
mov
lcall
sbb
popf
stc
jnp
jge
push
movsb
stc
popf
and
jo
pop
dec
push
shrl
mov
ficomps
aam
clc
or
bndstx
test
mov
cli
xlat
inc
add
xchg
les
sub
lcall
mov
push
or
pop
fnstenv
scas
xchg
pop
js
insl
and
pop
rolb
or
sbb
cmc
sub
mov
xor
scas
pushf
xor
adc
imul
sub
in
push
mov
data16
cld
stos
shll
mov
std
inc
arpl
adc
pop
cmp
pop
inc
mov
inc
or
mov
xchg
pop
dec
cmp
dec
in
mov
add
out
jb
adc
cmp
fnsave
aam
push
inc
push
mov
arpl
fsubrp
inc
add
data16
lcall
imul
dec
pop
xor
adc
into
adc
jecxz
and
insb
add
or
sbb
xchg
call
pop
sbb
rclb
loopne
sbb
insl
mov
ja
stos
aad
pop
lahf
dec
idivb
pop
mov
push
sub
int3
cwtl
add
stc
push
pop
push
pop
cltd
or
mov
mov
sahf
scas
mov
ss
pop
sbb
rclb
cmp
test
icebp
add
insb
test
xorb
arpl
out
int
mov
or
out
ljmp
mov
mov
andl
pop
push
xchg
jle
das
and
ds
mov
jbe
shrb
add
sub
xchg
cmc
sub
lock
dec
movsb
inc
mov
mov
mov
es
subl
xchg
insb
in
dec
movsl
mov
cmp
push
and
sub
bound
clc
or
mov
inc
jg
mov
out
loop
adc
mov
addb
lods
cmp
mov
or
inc
sub
xor
cmp
call
test
pop
jnp
cld
dec
loop
add
test
or
loopne
dec
mov
loope
add
pop
dec
jp
inc
push
inc
xchg
mov
testb
lods
and
iret
out
aaa
jbe
test
arpl
mov
fnsave
test
sbb
sti
or
lds
mov
mov
leave
mov
mov
mov
lea
pop
fstpt
lret
ljmp
adc
addl
xchg
addr16
aam
popf
decb
pusha
test
jno
popf
lea
cld
shl
or
popa
sub
lahf
xor
aam
and
or
out
xchg
push
xchg
push
lock
and
lock
add
jno
mov
sahf
popa
pop
sahf
xor
cmpsl
dec
mov
push
enter
dec
out
popf
test
fidivs
or
fwait
sbb
and
lock
lret
movsb
mov
cs
into
push
xor
pop
cmp
pop
add
dec
iret
lods
out
pop
popf
das
jmp
cld
adc
dec
sub
jl
leave
add
iret
iret
cltd
xor
xor
movb
shlb
gs
pop
cs
int3
fsubl
rcr
jnp
pop
hlt
mov
fwait
out
sub
xor
cmp
dec
cmp
pop
push
popf
nop
mov
rorl
call
or
fwait
out
sbb
clc
jecxz
and
rcrl
iret
mov
fmuls
add
inc
mov
jmp
das
insl
insb
mov
mov
dec
push
pop
test
pop
sbb
adc
push
jmp
loopne
sbb
mov
jno
pop
sub
cs
add
fdivrl
insl
mov
popf
sub
mov
and
lods
out
adc
sti
sbbb
push
out
das
or
or
testb
hlt
dec
aas
pop
sub
aam
sub
dec
lods
sub
scas
fcoml
aad
insl
ret
outsl
or
mov
aaa
iret
and
pop
sbb
push
dec
jns
cmpsb
jnp
mov
xchg
inc
mov
jns
mov
add
adc
mov
push
notb
pushf
mov
es
push
movsl
mov
icebp
mov
icebp
mov
pop
xchg
aad
and
inc
clc
cmp
cmp
sbbb
aad
mov
jle
sbb
mov
push
movsl
jne
jnp
adc
add
jge
ja,pt
push
les
adcl
into
xchg
lods
mov
ret
popa
addr16
pushf
pop
dec
push
inc
inc
jp
xor
adc
mov
and
in
xor
repnz
or
sub
lahf
es
and
mov
jbe
adc
pop
mov
mov
outsl
cmp
inc
add
testb
cmp
hlt
or
adcb
mov
nop
lods
dec
fstps
in
cmpsb
insl
inc
fisttpll
imul
mov
fildl
mov
add
pusha
cmpsl
mov
test
mov
push
jge
sub
sub
dec
mov
jecxz
xchg
sbb
js
imul
dec
mov
lahf
ret
mov
stos
popa
mov
pop
push
sub
arpl
jne
add
bound
push
test
push
push
gs
ficompl
add
jbe
call
mov
xor
push
jge
pop
jo
sbb
xchg
in
ret
imul
andl
mov
pop
iret
mov
jo
adc
insl
shll
xchg
sti
xchg
in
out
movsl
mov
or
mov
icebp
in
pop
ffreep
loop
sub
daa
xchg
jno
cmp
inc
fs
pop
pop
cmpsl
mov
das
lea
mov
push
cmp
add
push
xorl
mov
push
jae
push
cmp
daa
mov
and
scas
sbb
push
orl
jae
das
jmp
adc
pop
push
mov
adc
std
call
push
popa
jnp
adc
inc
mov
push
dec
shrb
sti
insb
or
mov
mov
adc
push
mov
jb
das
rcll
xor
je
loop
jmp
decl
lods
jmp
rcrb
jnp
dec
lods
cmp
jge
mov
notl
test
dec
xchg
fcompl
fdivl
xchg
fnsave
mov
xchg
adc
pop
mov
mov
jnp
jnp
pop
pop
cmc
dec
cmpb
jge
shr
pop
pop
out
lods
xchg
cli
push
insl
dec
mov
pop
mov
or
test
push
mov
iret
mov
fs
fsts
cmpsl
cs
fistl
data16
sbb
mov
imul
fsubl
cmpsb
ficompl
mov
les
xchg
mov
gs
outsl
xchg
ljmp
icebp
aas
push
shlb
add
out
out
xchg
mov
pop
jbe
pushf
pop
add
or
stos
dec
jmp
inc
dec
loopne
stos
mov
or
dec
or
jns
bound
call
data16
lods
xchg
lock
sub
lahf
adc
test
add
mov
fcmovbe
push
xor
divl
ss
cwtl
jle
push
push
popf
xor
mov
mov
int
cmc
cmp
pop
repnz
dec
addb
insl
mov
add
adc
cs
xchg
jg
scas
mov
fnsave
mov
inc
outsl
add
sahf
test
xchg
not
pushf
jb
xchg
pop
jl
push
enter
adc
pop
scas
mov
fnstenv
push
xchg
inc
outsb
or
movsl
ret
imul
rcrl
daa
lock
cmpl
xor
pop
or
mov
cld
stos
movsb
rorl
popa
push
xchg
jmp
adcb
ss
mov
mov
mov
mov
stos
inc
and
dec
pop
movsb
inc
or
xchg
mov
insb
loopne
shrl
mov
loopne
mov
xchg
lds
in
mov
sub
cmc
mov
sbb
add
xor
push
lods
in
cmp
xchg
sub
testb
cmpsb
out
mov
mov
sub
mov
into
scas
push
imul
sub
jle
outsl
cltd
jno
ljmp
stos
stc
outsb
jb
lcall
xor
aas
stc
mov
mov
adc
ret
mov
cmp
stos
frstor
push
xchg
inc
ja
lcall
aaa
sarl
jns
repnz
push
notb
sbb
dec
scas
repz
cmp
movsl
or
in
push
cmp
cmp
sbb
sub
pop
mov
jnp
cs
xchg
gs
fsubrl
adc
cmp
jp
xchg
fsubrs
or
or
add
xor
cmc
and
bound
outsl
xchg
les
nop
lods
in
lods
imul
outsl
mov
push
mov
and
cld
inc
mov
aad
movsl
int
cli
push
into
inc
pop
add
xchg
aas
xchg
and
gs
dec
fcoml
arpl
js
repnz
shrb
add
or
dec
icebp
out
jp
aam
dec
mov
lret
push
jmp
xsha1
cmpsb
dec
sbb
xchg
imul
repz
test
int3
cmp
xor
jo
mov
mov
adc
push
setb
and
mov
ret
add
enter
mov
mov
cmpsl
mov
cmpsl
dec
and
jns
call
add
pop
lret
in
and
mov
out
or
mov
sub
test
shrb
and
mov
push
add
adc
seta
lcall
pop
shlb
neg
insb
jecxz
mov
jns
ret
jle
adc
mov
cmp
pop
test
bound
mov
fldt
rorb
jecxz
xor
and
loop
pop
shlb
mov
xchg
js
sti
inc
fcomps
shll
lds
js
rcrb
jmp
jbe
sbb
pop
lds
lret
or
cld
je
push
cmpsl
adc
push
jbe
mov
les
rcrl
hlt
push
sbb
popa
test
ja
jle
jo
sub
js
jle
mov
in
orl
lahf
mov
mov
push
sbb
pusha
jp
mov
dec
xchg
pop
mov
gs
xchg
sub
mov
cmpl
pop
mov
or
mov
cmpsl
cmp
jmp
or
jl
sbb
mov
add
test
lret
bndstx
scas
pop
adc
xlat
mov
push
pop
imul
es
jecxz
loope
ret
sub
cwtl
inc
xor
lret
ja
pop
sub
mov
insl
mov
pop
nop
and
dec
data16
add
xor
lret
call
add
mov
loope
enter
outsl
cld
lcall
int3
adc
ret
loope
pop
sbb
outsl
andl
jae
mov
pop
mov
lds
int
dec
cmp
fstpt
in
mov
lock
mov
sbbl
movsl
xor
cmp
lds
mov
pop
sub
or
jns
inc
pop
cmp
jns
or
adc
cmpsb
out
mov
push
lods
imul
fst
cmpsb
sub
pop
shll
out
faddl
mov
and
add
jmp
mov
push
outsl
test
aam
push
mov
in
insl
fnstenv
andb
or
sub
bound
push
loopne
cmpsb
gs
xor
push
sbb
les
xor
bound
loop
pop
mov
mov
imul
or
pop
scas
jne
push
mul
jnp
inc
lret
pop
mov
lods
jl
fmull
fcomps
mov
mov
cmpl
push
mov
sub
fs
add
push
movsl
and
or
lret
or
dec
fists
out
add
sub
stc
pop
mov
test
shlb
jns
jnp
clc
mov
fidivl
stos
pushw
jo
sub
jecxz
mov
or
jbe
pop
mov
push
outsl
jno
jecxz
enter
cltd
insb
ret
ja
mov
insl
and
cmpsb
sub
cmp
cld
adc
in
mov
cmp
push
jnp
or
pusha
mov
pop
sbb
xor
out
pop
jmp
cmp
sub
adc
cmp
push
jmp
out
pop
xor
jns
mov
adc
jg
jae
fsubl
fcomi
xor
and
in
popl
inc
cmp
loope
inc
movsl
cmp
int3
xchg
sub
cs
cmpsl
stos
imul
or
jns
ret
xchg
adc
sti
in
adcl
push
push
jbe
inc
mov
pop
cmp
nop
in
and
sarb
cmp
mov
mov
mov
in
mov
xor
enter
outsl
daa
in
pop
nop
mov
popa
jg
dec
lods
hlt
ss
arpl
inc
lret
push
mov
ljmp
sbb
inc
jnp
adc
imul
push
mov
add
insl
adc
adcb
mov
cs
push
into
mov
mov
jns
mov
or
fsubrl
inc
and
push
mov
sub
enter
nop
push
sti
stos
popa
push
lret
arpl
insl
add
push
cmp
xchg
ret
pop
js
mov
stos
and
sbb
and
or
pop
fbld
je
mulb
lret
mov
rol
rep
dec
dec
pop
mov
leave
popf
xor
mov
mov
jl
push
add
insb
and
inc
pop
lea
fcomps
add
sub
jl
adc
inc
cli
daa
jae
jg
mov
lods
scas
fmulp
jne
bound
jno
arpl
int
or
mov
mov
inc
mov
push
xchg
or
sbb
cmp
notl
cwtl
sti
inc
icebp
adc
fidivrs
outsb
xor
ficoml
xlat
sbb
jmp
aaa
jnp
add
sbb
sbb
gs
je
jbe
jo
xor
subb
imul
push
std
iret
xor
icebp
idivb
add
shr
icebp
std
cmp
mov
dec
push
cmpsb
jg
test
jge
lock
jmp
inc
ja
cld
lods
xor
aad
push
jns
mov
popa
xor
in
out
cmp
pand
in
fsubr
xchg
je
dec
sti
xchg
sbb
mov
lahf
stos
insl
insb
test
call
add
jb
pop
movsb
sqrtps
push
sbb
cmpsl
and
ret
fdivrl
mov
subb
pop
mov
pop
aas
add
sbb
push
or
movsl
je
cli
sub
dec
xchg
int
adc
mov
or
stos
pop
insb
sbb
je
clc
movsb
repnz
movsb
and
xchg
test
sarb
gs
sub
and
xchg
inc
adc
scas
push
lock
fdivrs
cld
xor
push
sbb
in
jmp
insl
adc
sarl
imul
add
pop
fcomps
inc
push
jo
inc
pusha
insb
dec
pusha
pop
test
mov
out
test
or
pop
scas
mov
cmpsb
jbe
js
inc
arpl
xor
dec
push
mov
cli
es
into
jae
cmp
roll
lcall
loop
jns
push
das
push
movsl
mov
cmp
push
jo
test
push
in
out
push
cmp
lret
pop
popf
cld
sub
mov
popa
imul
ret
mov
mov
xchg
mov
inc
sub
or
inc
push
icebp
cli
add
repz
imul
and
out
insl
sbb
hlt
mov
cmpsb
pop
fiadds
inc
icebp
or
fildll
dec
lret
out
add
lea
xchg
mov
sub
cmpsl
js
fsubrl
std
jmp
or
adc
dec
jo
sub
sub
jmp
rorl
adc
jge
shrl
sbb
pop
ljmp
mov
sub
vmovapd
aaa
pop
push
aad
mov
mov
xor
pop
dec
add
mov
and
ljmp
xchg
sub
mov
sub
mov
cwtl
inc
push
jbe
bound
xchg
mov
daa
mov
fldt
pop
repnz
sub
pop
fcoms
int
jnp
sbb
mov
jns
ljmp
pop
add
mov
mov
in
popl
xchg
cmp
mov
push
lcall
cmpsb
in
and
push
js
out
and
sub
xchg
cmp
pop
int3
arpl
or
test
pop
dec
ror
xor
or
mov
scas
push
clc
je
mulb
aad
xor
cld
push
mov
mov
leave
and
mov
mov
mov
sub
test
xor
pusha
movsl
push
and
mov
fsubr
rcr
adc
add
cld
sbb
aas
or
movsl
test
scas
push
aas
sbb
shll
sbb
sbb
adc
pop
pusha
cld
inc
xchg
sub
push
fistpl
mov
movsb
cld
mov
jns
mov
inc
stos
mov
das
movsl
arpl
fcoml
mov
imul
mov
sub
leave
rcrl
lahf
scas
rol
push
add
inc
mov
outsl
inc
mov
pop
pop
adc
sub
lahf
push
or
dec
cmp
std
xchg
push
xor
fsubs
sbb
lret
or
cld
add
movsl
or
xlat
inc
daa
lcall
inc
int3
stos
cs
cmpsl
outsl
loop
mov
cmpsb
mov
lock
scas
mov
out
or
jbe
aam
jne
js
cwtl
and
jmp
cmp
and
push
mov
lock
cmp
xchg
in
dec
push
xor
shl
xor
xor
mov
in
dec
shrl
ljmp
sahf
lock
sub
shll
setnp
cmc
movsb
mov
jnp
aas
pop
dec
fstl
inc
stc
jnp
sub
fs
and
mov
repnz
fists
insl
push
scas
xchg
dec
aad
sbbb
cmp
movsb
scas
or
push
xor
fucom
pop
shll
repnz
jp
cmp
cmp
inc
mov
jae
stos
inc
or
pop
movsb
scas
push
lcall
sahf
xor
pusha
mov
iret
insl
andl
fcoms
shrb
leave
ja
or
outsb
mov
inc
out
ret
lods
mov
test
cmpl
xor
ret
notl
jno
cld
or
adc
inc
stc
das
push
xlat
mov
neg
je
fbld
push
ja
sbb
sahf
xor
sub
mov
xchg
sub
cmp
dec
mov
mov
mov
fdivrl
rorl
mov
mov
mov
pop
dec
mov
enter
out
inc
fsubl
inc
arpl
xor
cmpl
and
fidivrs
push
movsb
iret
imul
jl
or
jns
scas
pop
out
imull
idivb
in
jb
or
push
push
out
call
imul
stos
rcrb
mov
inc
ljmp
sbb
mov
push
ss
ja
jp
bound
std
fiaddl
xor
xchg
scas
jns
jp
ret
mov
fldt
jb
xchg
xchg
clc
adcb
cli
jno
por
add
xchg
xchg
loop
testl
dec
inc
push
loop
jmp
leave
mov
sbb
popa
sarb
add
adc
mov
daa
dec
and
fnstcw
incb
sbb
es
xor
cwtl
xchg
andb
adc
mov
ret
mov
add
pop
fcmovbe
mov
sub
xlat
jle
fnsave
cwtl
xchg
cmp
xchg
out
mov
sbb
mov
addb
ret
sbb
mov
test
pop
cmp
stos
nop
in
mov
fisubrs
movsl
fneni(8087
outsb
adc
or
pop
xchg
add
inc
hlt
xchg
lods
and
fmull
mov
adc
cltd
push
dec
out
or
call
xor
sbb
xchg
movsl
stc
test
sub
int
mov
std
add
xor
test
aaa
mov
adc
test
sub
cmpsl
sub
mov
mov
inc
shll
stos
enter
jo
and
add
or
and
pop
scas
ss
jp
jg
js
dec
lods
mov
daa
popa
cmpl
dec
add
push
movsl
cmp
subl
cmp
jno
mov
jg
ss
xchg
repnz
add
cmpsl
rolb
cltd
test
out
je
push
cmp
loop
push
stc
sti
shrl
rcrl
cmpb
fs
leave
push
arpl
sub
hlt
stc
outsl
sbb
push
mov
repnz
lcall
andb
push
data16
stos
mov
fs
add
aaa
xor
pop
sti
inc
pushf
orl
fistps
iret
jecxz
mov
push
xor
cmpsl
sahf
jmp
data16
jbe
xchg
xor
leave
fldcw
pop
lahf
mov
in
loop
aaa
cmp
inc
cld
lock
or
aam
xor
ficompl
or
inc
ficoml
sub
jb
sahf
rcrb
pusha
xchg
int3
and
jbe
adc
rorl
xlat
pop
testb
fmull
adc
jae
jle
inc
stos
push
jno
movsb
aas
fmull
pushf
pop
js
test
pop
call
fsubrl
or
lahf
lret
mov
mov
add
mov
adc
sbb
loope
cmp
pop
aaa
and
enter
dec
leave
enter
jmp
lahf
cmp
mov
dec
or
aaa
cmp
popa
outsl
mov
stc
pop
fisttpll
int3
fmull
push
mov
pop
sarb
or
int
rorl
fadd
lods
mov
stos
daa
std
push
loopne
push
pop
cmp
xchg
pop
and
sbb
ficoml
fldt
lcall
int3
loope
inc
neg
ret
lds
pop
push
mov
cli
mov
movsb
sbb
mov
sbb
jnp
subb
pop
mov
ret
mov
jg
cmp
ss
pop
test
pop
pop
scas
mov
sbb
mov
xchg
fstps
call
loopne
aas
push
jmp
aad
push
mov
inc
and
sub
jg
adc
mov
mov
adc
jge
icebp
pushf
shl
repz
into
loope
test
test
std
dec
inc
inc
fidivs
jp
add
dec
fdivl
or
mov
psubusb
rorl
daa
dec
pop
push
popa
in
xlat
outsb
das
jp
repnz
mov
movsb
stos
mov
decl
std
jo
stos
jmp
inc
mov
jg
ds
jno
andb
adc
fadds
test
rorl
adc
sub
mov
mov
ret
ljmp
in
hlt
push
movsl
sbb
fmull
adc
call
jo
xor
pop
ds
and
adc
or
ljmp
imul
in
and
loope
xor
adc
cmp
xor
mov
into
insl
xor
call
cmpsl
jp
out
add
lds
hlt
xchg
mov
sahf
outsl
cld
xchg
push
sbb
aaa
push
bound
dec
or
out
bound
dec
fnsave
clc
pop
rcrb
stc
fwait
push
mov
push
sahf
stc
or
ret
push
mov
sbb
pop
popa
clc
mov
sbb
loope
xchg
dec
cmpsb
xor
in
add
push
mov
cwtl
jns
ficompl
das
pushf
outsl
fcoms
rcrl
add
insb
add
lea
mov
jo
icebp
pop
jge
mov
loopne
mov
mov
jge
jmp
or
js
pushf
jg
push
test
jnp
ret
popf
rol
movsl
aad
outsw
dec
push
imul
dec
clc
das
jne
add
sti
mov
les
cmc
fidivs
mov
iret
push
push
mov
test
je
in
in
push
out
sbb
and
cwtl
mov
scas
and
out
bound
out
aad
fdivrl
xchg
movsl
jbe
push
arpl
xchg
fs
iret
xor
loope
dec
out
pop
mov
into
sbb
mov
test
jbe
pusha
std
dec
sbb
push
loop
iret
mov
ljmp
aas
cmpsb
jg
inc
fsubr
loope
fisubs
add
push
pusha
sahf
out
inc
adc
pop
pop
jb
mov
pop
sbb
test
cmpsb
outsl
bswap
jns
arpl
lcall
push
pop
adc
xlat
inc
jecxz
movsl
jecxz
add
pop
ss
sbb
sti
and
mov
inc
xchg
pop
cld
loopne
cmp
fsubs
popf
incl
cmpsb
mov
mov
pop
add
inc
test
add
cmpsl
add
sti
push
add
out
push
sub
nop
out
mov
mov
in
sbb
nop
mov
xchg
inc
ljmp
fists
add
mov
mov
lret
sub
cmp
and
adcb
aam
clc
push
xor
lods
pop
mov
and
js
xchg
xor
rclb
xor
shll
sbb
ljmp
add
mov
test
xchg
repz
out
mov
pop
in
dec
and
xor
rcrl
push
dec
stos
xchg
add
xchg
mov
pop
pop
ficoml
stos
test
pop
lods
and
aam
xor
in
sub
push
push
in
arpl
mov
mov
call
int3
arpl
lds
jecxz
nop
mov
loope
mov
push
jae
pushf
dec
je
subl
repz
pop
or
push
sti
sub
cmpsl
and
or
hlt
pusha
jl
and
inc
ficompl
mov
xor
popa
test
jmp
inc
xchg
fisubs
adc
sbb
into
xchg
shl
movsb
pop
xchg
stos
lret
mov
clc
push
add
cmp
adc
int
pop
aas
jg,pt
jno
or
adc
pushf
push
jg,pt
jo
and
cmp
push
sub
add
inc
dec
xchg
js
je
cmc
and
cld
xchg
cmovae
jne
push
test
pushf
jmp
jmp
or
sbb
jb
mov
insb
insl
inc
inc
sbb
dec
loopne
rorl
adc
dec
sub
sbb
dec
cwtl
fmull
pop
imul
xchg
leave
popa
fmull
scas
repnz
add
aad
sahf
push
mov
pushf
cmp
enter
sti
jnp
dec
pop
cmp
jae
cmpl
jno
enter
or
paddsb
shll
and
add
inc
sbb
xlat
testb
mov
and
lods
push
fistps
ja
jl
cmp
repnz
repnz
add
pop
imul
mov
inc
les
ljmp
ss
in
sub
insb
add
jb
ret
mov
pop
push
jmp
fwait
dec
pop
icebp
ss
dec
push
dec
dec
add
cs
cld
shrl
iret
sub
scas
xorb
push
rcll
push
inc
out
outsb
xchg
jnp
adc
mov
das
push
jle
mov
mov
scas
add
mov
lock
fcmovu
or
add
stos
out
adc
outsb
aam
push
jge
xor
xchg
leave
popf
mov
inc
loope
dec
addr16
jmp
sub
insl
cmp
dec
scas
xchg
mov
outsb
adc
repnz
cmc
insl
add
or
int
cmp
gs
jae
aas
push
mov
pop
das
out
xchg
mov
in
cld
leave
pop
cmp
cs
outsb
or
test
dec
pop
out
jns
or
fcoms
ja
cli
jle
mov
insl
push
inc
ljmp
call
mov
imul
ret
test
xorl
and
or
jae
xchg
inc
shrl
lea
mov
push
fdivrs
sub
mov
fcompl
arpl
push
dec
in
jp
pop
sub
jbe
xor
adcb
mov
and
or
aaa
mov
mov
push
adc
mov
lret
xchg
fidivl
lcall
adc
out
daa
xchg
xchg
fwait
loopne
push
incb
ja
pop
fidivl
xor
shlb
scas
dec
adc
cld
inc
and
or
pop
jl
or
jb
imul
dec
dec
push
leave
in
shrb
imul
inc
xchg
fsubr
mov
stos
mov
jecxz
fs
popa
orl
xchg
dec
dec
fs
rclb
cmpsl
imul
or
mov
xlat
cmp
mov
mov
fcmovnb
pop
or
sbb
cmp
lahf
mov
inc
scas
stc
or
sub
dec
rorb
call
mov
int3
add
insl
int
inc
adc
cmp
jg
in
mov
inc
mov
jbe
inc
mov
xchg
decb
in
xchg
xor
pop
inc
in
repnz
dec
into
sbb
aad
rol
push
mov
push
mov
cmp
dec
mov
sbbb
shl
dec
add
mov
pop
inc
ljmp
sti
in
cmp
sbb
test
int
or
in
jne
jecxz
pop
out
xchg
dec
decb
mov
and
cmp
jbe
add
sbb
and
fidivl
les
inc
lret
push
jo
push
test
ret
pmulhw
test
mov
add
enter
es
push
push
inc
out
jb
popf
fnstenv
test
ret
dec
push
fstpt
fisttpl
and
insb
mov
lahf
pop
in
sub
insl
jne
mov
and
mov
cmp
cs
mov
mov
pop
cmpsl
dec
adc
push
lahf
pop
repnz
dec
dec
lds
sarb
sbb
pop
lahf
or
mov
je
insl
mov
push
stos
inc
adcb
pop
sbb
push
xor
fbld
jno
push
jns
cmp
dec
jecxz
subl
data16
or
mov
jp
clc
mov
in
int3
sti
cmpb
jle
out
lret
sbb
ja
push
out
jb
xchg
mov
dec
jno
repnz
and
clc
mov
montmul
cmpsb
orl
sub
fldl
fs
mov
push
subl
daa
lea
push
mov
mov
imul
sub
scas
jns
jnp
inc
jecxz
sub
sbb
cmp
shr
add
cmp
dec
cmp
pop
test
int
dec
icebp
pop
hlt
xchg
insl
dec
cmpsb
adc
jnp
fwait
bound
adc
in
mov
push
mov
lods
push
ffree
mov
cmc
cmp
aas
into
pushf
in
hlt
mov
paddb
xor
loopne
subl
or
sbb
inc
mov
jmp
sub
ret
adc
fildll
push
jns
cmpsb
les
sarb
dec
stc
fcoms
sub
mov
pushf
xor
jle
mov
xchg
scas
push
jne
push
test
bound
xchg
sbb
xor
lock
pop
arpl
xor
cld
lds
scas
call
cmp
push
mov
popf
or
int
pushf
imul
leave
fsubrs
sbb
rolb
push
fistpl
push
jns
cld
and
cld
shrl
iret
pop
lock
push
add
mov
xchg
sub
shlb
je
xchg
xor
out
sbb
jp
stc
das
call
adc
and
ja
or
stc
adc
sbb
ljmp
pop
xor
ds
sti
out
mov
inc
mov
adc
popf
sub
outsb
push
dec
jle
jnp
shrl
ja
fst
push
dec
ja
in
call
pushf
lods
shl
and
je
lods
mov
xor
sub
stos
add
adc
cmp
cmp
mov
fldt
dec
mov
in
adc
jmp
or
ss
jb
xorb
mov
pop
push
shrl
imul
mov
out
and
test
cmp
addr16
or
mov
cmpl
jp
repnz
call
add
fs
dec
pusha
ret
push
xchg
out
es
lods
aas
mov
mov
mov
out
imul
movsb
push
jo
mov
cmc
sub
loopne
add
bound
test
cld
lds
pop
cwtl
fidivs
inc
mov
rcr
je
aam
and
pop
sahf
fimull
or
repnz
push
add
fs
movsl
iret
popf
mov
pop
subl
fldcw
or
rol
mov
mov
dec
pop
cltd
roll
pop
sub
outsl
push
lret
dec
aam
stc
js
loopne
aaa
push
inc
add
daa
pop
xor
dec
push
test
nop
scas
iret
push
push
mov
cmpsb
cmp
add
inc
pop
rcrb
mov
pop
xor
sbb
lods
insl
sahf
sub
fs
mov
dec
xor
ret
adc
jecxz
mov
jle
cmc
mov
fsub
add
lea
pop
clc
lea
arpl
fistpll
insb
dec
clc
ror
mov
es
xchg
rorl
add
xchg
daa
movsl
stos
aad
mov
stc
lods
mov
and
jp
jno
jbe
lods
jbe
cmpsl
push
inc
sbb
int3
in
jnp
pop
into
pop
jg
dec
and
inc
jbe
or
cmp
cltd
in
dec
push
imul
pop
sub
pop
and
jne
jb
clc
sub
sub
dec
mov
push
in
sbb
adc
lahf
dec
and
data16
cmpsb
cmp
push
xor
je
adc
aaa
arpl
mov
and
xor
arpl
test
xchg
fstpt
fucom
jno
push
jp
mov
push
test
mov
leave
fs
push
xor
sub
xor
mov
mov
mov
cmp
mov
loop
lock
push
inc
push
fwait
jecxz
mov
sub
ret
or
fnstsw
adc
mov
push
leave
cmp
mov
cmpsl
mov
add
and
je
aam
xor
cmpsl
pop
pop
adc
mov
fs
fucomp
cmp
mov
lret
je
pop
mov
mov
xlat
cmp
or
insb
rorb
add
nop
out
adc
inc
inc
jb
fdivrl
or
orb
ds
in
in
push
cmp
xor
and
sti
ficompl
sub
mov
xor
inc
int
cli
andb
scas
call
cmp
pop
cmpsl
cmp
sbb
add
ljmp
fcmovne
add
in
inc
repnz
sbb
pop
cld
mov
lcall
dec
dec
or
mov
sub
rolb
jbe
fsubs
mov
mov
test
add
cmp
loope
in
jl
xchg
daa
xchg
xchg
mov
ljmp
add
jne
repnz
push
mov
fidivrl
push
cmp
movsl
loope
fwait
sub
test
mov
xor
jmp
outsb
std
out
or
add
fs
xor
arpl
jmp
pop
insl
fdivl
jp
cli
lods
incb
scas
mov
stos
int
sbb
lahf
daa
add
sub
mul
cmp
cmc
cmc
mov
inc
jne
je
xchg
daa
movl
lahf
test
sbb
in
mov
dec
je
pop
jg
add
popa
mov
jo
pop
rcr
sbb
mov
jne
icebp
cmpsb
lods
push
das
leave
xchg
sbb
repz
roll
outsb
mov
fbstp
pusha
add
mov
mov
jg
xor
pushf
push
ss
mov
sbb
movsl
out
mov
ret
mull
mov
sahf
or
add
sub
gs
aaa
lret
mov
push
dec
repnz
dec
xor
cld
push
sub
pusha
push
arpl
js
cmp
popf
cs
aam
and
pop
mov
gs
cmp
dec
xor
mulb
and
data16
xchg
shrl
cmp
popl
cmpsl
rcl
roll
testb
repnz
movb
insb
dec
inc
add
and
ja
gs
lds
lahf
inc
js
jb
arpl
mov
mov
hlt
data16
cltd
adc
mov
mov
pop
out
jmp
int
inc
gs
pop
aas
rcrl
iret
add
pop
int
jb
cmpsb
out
loopne
sub
sti
mov
cmp
mov
and
nop
mov
jo
sub
xor
call
ret
pop
out
pushf
in
jns
mov
jle
repz
dec
push
stos
inc
test
stc
ds
imul
addr16
test
dec
cmpl
jmp
clc
int
leave
jg
pop
mov
mov
aas
leave
insb
mov
leave
fxch
xor
sub
pop
inc
sbb
pop
pop
leave
test
mov
movsb
cmp
stos
pusha
neg
and
cmpsl
mov
pop
adc
int
idivl
cmp
mov
pop
xchg
sub
push
leave
loop
push
hlt
add
aad
push
fsubrl
add
cmp
cmpsb
pop
int3
jns
ret
dec
push
ljmp
icebp
movsl
adc
xlat
pop
shll
loope
add
pop
out
sbb
mov
xor
push
in
xor
je
sub
add
mov
lods
pusha
bound
in
xor
nop
movsb
aad
rolb
jmp
sub
or
push
jb
cmp
and
add
or
sbb
xor
arpl
add
jb
adc
call
jae
inc
outsb
fwait
sbb
pop
push
xchg
xor
mov
in
mov
or
or
sub
sbb
andl
decb
movsb
xsha256
cmpsb
adc
xchg
lods
mov
test
fstps
roll
aam
outsl
push
dec
fmull
rol
jne
push
mov
add
xlat
outsb
cwtl
mov
dec
jge
mov
in
mov
mov
std
or
aam
inc
lret
sbb
dec
inc
mov
ret
fiaddl
sbb
or
enter
loope
push
and
daa
insb
ss
popa
rolb
test
and
sti
das
int3
xchg
mov
in
test
pcmpgtd
into
and
fwait
xor
jno
xchg
mov
push
movl
scas
sub
or
iret
inc
dec
or
dec
cmp
in
sahf
sbb
lds
cmp
lock
scas
and
pop
cmp
shlb
push
leave
cltd
xor
ljmp
pop
and
pop
lock
stc
loope
cmp
push
push
dec
mov
adcl
add
xor
and
sub
ja
push
sub
or
rcrl
mov
inc
sbb
loope
into
movsb
xchg
jb
mov
mov
push
ret
rorl
cld
clc
scas
lods
sub
push
je
pop
dec
pushf
mov
sbb
pop
negb
jl
mov
mov
xor
leave
jns
add
stc
inc
fcomps
or
stc
mov
in
jle
xor
mov
popf
and
sti
push
inc
xor
aad
ficomps
pop
sub
xor
or
jge
or
sub
rclb
xor
mov
fsubs
adc
xor
fs
lods
mov
js
xchg
pop
jne
aas
cmpsl
jge
mov
ret
push
leave
lds
stc
cwtl
mov
add
sub
fwait
daa
cmp
add
sub
and
mov
mov
es
xor
mov
iret
fildl
inc
dec
and
popa
dec
aad
mov
adc
push
pop
je
mov
aam
pop
cmp
cmpsb
das
pop
loopne
aam
push
xchg
jge
mov
pop
cmpsl
mov
test
hlt
scas
call
mov
fistpll
call
shrl
dec
jl
lahf
and
mov
cmp
push
add
mov
sub
add
leave
dec
movsl
lds
or
repz
pop
push
mov
mov
jl
xchg
js
pusha
add
std
lock
xchg
and
lods
or
out
scas
cmp
out
lock
insl
mov
sub
mov
ljmp
test
shll
daa
test
std
outsb
mov
push
in
lods
repz
mov
iret
jb
rol
jne
mov
clc
sahf
cmpsb
sub
pop
lods
orl
stc
rol
ss
imul
repz
push
cmc
push
in
push
xchg
xchg
adc
mov
mov
divl
int
pop
sti
stos
frstor
mov
cmp
mov
iret
jae
fcomi
xor
jl
xor
scas
mov
pusha
jno
sbb
dec
inc
push
mov
lret
mov
add
jno
test
cmpsl
into
outsl
mov
lods
or
pop
rcrb
imul
add
add
add
push
mov
mov
mov
cwtl
mov
mov
xor
push
shr
daa
outsb
xchg
dec
xor
mov
jl
xchg
mov
pop
adc
push
lret
add
add
xchg
pop
or
or
enter
mov
sbb
ljmp
shrl
insl
insb
mov
adc
cmp
stos
dec
or
jg
pop
jno
inc
cmp
je
cmp
pop
xlat
pop
mov
aam
jp
dec
loop
movsl
and
int
jecxz
repz
out
lcall
sbb
out
sti
arpl
mov
mov
clc
loope
loopne
leave
and
daa
adc
mov
test
in
daa
adc
jno
add
mov
push
lods
jmp
idivl
mov
mov
adc
arpl
js
sub
jno
mov
leave
int
and
in
push
pop
loope
push
je
dec
jmp
mov
or
mov
scas
orb
int3
push
mov
fmuls
mov
pop
addr16
popa
add
sbb
or
cmp
fistps
fistl
call
inc
jno
movl
xor
xchg
inc
dec
xchg
or
test
pop
out
push
jns
shll
push
insb
pop
pusha
fmul
sbb
cmp
fldcw
leave
lretw
insb
push
mov
cmp
add
mov
push
dec
mov
into
nop
movsl
clc
inc
mov
insl
fsubs
sbb
fildll
xchg
cmpsl
ds
cmp
mov
adc
aam
pop
in
sbb
mov
in
or
xchg
mov
insb
sub
add
inc
cmp
in
in
cli
xchg
mov
in
cmc
nop
sti
dec
icebp
movsl
jle
testb
aaa
into
loopne
aam
stos
sub
shr
jnp
lcall
sar
xchg
ss
out
and
xchg
dec
dec
xchg
pop
shrl
jb
insb
xchg
jmp
sub
roll
or
rcrl
xchg
sub
mov
cli
mov
shll
add
nop
cmpsb
lock
adc
dec
arpl
push
loopne
pop
push
mov
leave
test
jp
and
push
and
jne
or
loopne
daa
leave
test
scas
inc
mov
sti
fwait
enter
mov
in
mov
sti
fwait
push
mov
adc
mov
mov
pop
sub
pop
dec
int3
push
stos
or
dec
mov
adc
aam
call
mov
and
sub
fimull
lahf
jl
lret
lea
sub
and
testl
orl
mov
sub
das
jge
dec
test
jle
inc
ljmp
mov
std
stos
jg
add
sbb
inc
dec
adcb
push
cld
lahf
or
testb
xchg
mov
imul
out
jo
or
aas
ret
mov
push
pop
je
jns
shll
jp
push
frstor
mov
xlat
pop
loop
lods
inc
rcll
inc
dec
movb
sti
in
xchg
mov
push
mov
sbb
subb
add
lods
or
cmpsb
and
inc
pop
dec
jbe
arpl
ds
int
lahf
pop
stc
nop
mov
jge
cmp
xor
xchg
xchg
jle
and
aam
aam
fdivl
and
pop
das
lcall
or
test
dec
jbe
insl
popa
lds
test
inc
lods
fiaddl
es
dec
movsl
imul
mov
adc
ss
ss
shlb
and
sub
stos
add
rorl
xor
pop
clc
les
push
mov
es
dec
dec
dec
push
jmp
pusha
shrl
fildll
cmpl
lret
neg
and
or
pop
ja
clc
test
std
mov
mov
cs
lret
xchg
sub
idiv
das
pop
push
popf
into
enter
faddp
lahf
addb
outsb
arpl
ret
lahf
jg
mov
sbb
xchg
dec
cmp
int3
in
mov
adc
cmp
jae
jae
mov
lods
fistpl
int3
mov
outsb
xor
sbb
mov
ljmp
repz
pop
xchg
cmp
jp
jbe
aaa
mov
loopne
mov
movsb
push
sub
mov
push
int
loope
loopne
rcrb
xchg
cmp
mov
add
das
xchg
sub
cwtl
mov
outsb
adc
fnstcw
pushf
push
movsl
inc
stos
xchg
arpl
and
addl
mov
in
adc
rcll
xchg
mov
jae
stc
lahf
push
jo
mov
xlat
aad
or
pop
jno
dec
adc
xor
pop
xor
sub
mov
mov
clc
pop
sbbl
outsl
lret
push
dec
pop
inc
in
sahf
push
push
xor
xchg
pop
fnstcw
fmul
jb
std
mov
fidivs
xor
pusha
data16
mov
outsl
cld
or
push
mov
push
and
push
repnz
sbb
sub
cmovns
inc
jg
add
sbb
adc
mov
movsb
jl
fstpl
cmp
lret
sbb
cmp
jb
je
jle
sub
pop
jecxz
aam
hlt
mov
loop
popf
pop
inc
jae
in
jge
pop
mov
test
jnp
in
negl
jnp
out
test
adc
iret
pop
sbb
rolb
mov
pop
mov
decl
pop
fdivl
es
mov
jae
lods
cld
push
push
fdivrp
adcl
jl
and
jae
push
data16
in
jns
inc
push
jbe
ljmp
adc
xchg
xorb
mov
inc
inc
out
add
scas
inc
cmp
jb
or
imul
push
popa
mov
ss
testb
popf
lock
push
jmp
movsl
out
ret
ss
das
js
enter
jnp
mov
or
idivb
mov
mov
and
clc
lret
js
push
xchg
adc
add
mov
lods
daa
ljmp
inc
pushf
mov
pop
inc
mov
mov
and
inc
mov
test
repnz
loopne
pusha
es
mov
jo
add
inc
push
imul
lods
aas
cwtl
xor
pusha
xor
mov
cmpsl
loope,pt
dec
test
add
fidivrl
xchg
adc
cmp
test
adc
addr16
movsb
pop
in
xor
jb
xchg
dec
adc
fnsave
xchg
lods
ret
data16
sbb
xchg
pop
lods
and
xchg
lods
push
sarl
jbe
xor
mov
std
mov
mov
pop
jmp
and
jne
sub
jp
loop
pop
pop
lret
mov
mov
addr16
lcall
adc
ds
out
daa
lahf
data16
rep
mov
pop
std
sbb
xor
rcll
xchg
inc
xorl
loop
addb
enter
clc
mov
jae
xchg
stos
pop
imul
inc
adc
and
sub
mov
pop
xor
pop
hlt
inc
inc
int3
jg
in
adc
mov
jle
loopne
jge
leave
push
and
sbb
popa
sahf
lds
xorb
or
pop
lret
enter
xabort
imul
push
pop
jno
pop
test
imul
mov
push
mov
ja
mov
je
popa
inc
dec
loope
sbbl
jge
adc
xchg
sbb
xchg
push
fdivl
ret
imul
or
pusha
mulb
inc
movsl
dec
movsb
xor
xchg
inc
popf
dec
add
sbb
bound
rcrb
pop
outsb
xor
addr16
dec
adc
test
test
shll
mov
iret
jecxz
das
inc
dec
mov
sbb
fchs
mov
inc
les
cs
cmp
mov
or
daa
js
aaa
mov
jb
lea
pusha
or
movsl
jg
and
jecxz
xlat
mov
bound
sti
scas
mov
lock
inc
lret
mov
jno
inc
xor
jno
jg
sub
out
pop
push
imulb
jg,pn
or
filds
daa
outsb
movsl
mov
jno
or
popa
sbb
add
into
arpl
fdiv
cmp
sub
imul
std
cltd
pushf
sbb
fiadds
ss
xchg
pop
fsts
or
fs
mov
adc
enter
aad
inc
negl
mov
dec
and
push
jns
orl
shl
push
xchg
outsl
data16
mov
addl
push
popa
dec
mov
ss
lds
in
lahf
aas
adc
bound
push
repz
nop
xchg
stc
ja
dec
xor
jo
push
sub
addl
cmp
mov
xor
add
push
push
rcll
addr16
xor
adc
fcmovb
mov
fldenv
testb
loopne
pop
out
shll
shl
jecxz
pop
dec
subb
cs
and
enter
lds
insl
shrl
push
stos
or
pop
jle
lea
dec
into
or
push
pop
mov
dec
shrl
add
cmpsb
sub
repnz
pop
in
pop
hlt
xchg
fiadds
cli
adcl
pop
fcmovnb
lcall
out
xchg
cltd
in
out
pop
push
dec
movsb
mov
pop
mov
inc
cld
and
jmp
cmp
jmp
popa
clc
out
int
sbb
les
lds
push
ret
cmc
mov
cmp
lock
dec
pop
and
pop
sub
test
movsb
cld
frstor
cli
jno
xor
cmp
aas
push
out
ret
push
in
jge
jnp
mov
jmp
sarl
test
fistl
sti
push
xchg
or
push
int
and
xchg
cs
clc
rcrl
out
push
sub
cmp
adc
arpl
test
mov
mov
loope
cmp
mov
sbb
and
add
leave
pop
xorb
sub
xchg
cmp
sub
stc
lea
dec
rcrl
popl
push
loopne
dec
test
push
push
mov
xor
addr16
ljmp
mov
xor
mov
clc
sahf
decl
jno
cmpsl
rep
push
test
ret
lods
add
loope
push
jmp
and
or
lods
mov
lahf
pop
mov
pusha
push
sub
sti
lcall
divb
rcl
xchg
lea
xor
sti
jp
loope
push
xor
push
leave
inc
mov
push
out
sbb
sbbb
insb
add
nop
out
or
sub
aad
jnp
aas
test
fdivl
inc
aam
mov
dec
add
fs
mov
cmc
xor
cltd
xchg
ds
mov
inc
arpl
inc
int
fdivrp
push
data16
lcall
push
cmp
and
mov
xchg
lea
enter
out
call
pop
or
enter
push
orl
pushf
xor
mov
sbb
jo
and
enter
jg
pusha
push
or
sub
inc
cmp
and
jmp
xor
das
ret
add
stos
xchg
mov
pop
inc
jge
imul
das
mov
sub
and
push
mov
insb
jl
or
pop
fldcw
ds
push
sti
loop
out
push
nop
adcb
test
jbe
hlt
xor
gs
lods
adc
jo
aaa
into
daa
xchg
dec
fsubp
je
ficoms
fcmove
notl
inc
sbb
jae
fidivl
sub
fs
idivl
pop
jl
lret
cmpsb
xchg
sub
mov
pop
out
push
dec
arpl
xchg
insl
xlat
lods
fs
jmp
ret
jb
jecxz
rclb
jne
int3
in
mov
jae
and
inc
rcrl
cmp
pop
mov
out
sbb
or
aas
movsb
out
fs
ret
lret
rcrb
fisubrs
pop
and
rcr
insl
cmp
pop
fbld
lods
inc
pop
push
fldcw
jnp
xlat
mov
ficompl
cmp
or
add
test
inc
inc
int
adcl
jmp
xchg
jb
xchg
in
or
clc
pop
fildll
mov
or
pop
fstl
inc
xchg
fnstsw
sub
cs
pop
pop
pop
je
cmp
test
lods
xchg
pandn
ss
add
dec
jbe
cmc
cmpl
cmp
repnz
lods
mov
inc
adc
pop
es
dec
notl
stos
sub
xchg
mov
sub
push
push
int
pop
jnp
pop
insb
lods
pushf
loopne
push
push
mov
mov
and
enter
inc
fwait
ss
mov
push
and
movsb
mov
adc
sarb
pop
jns
movsl
lds
xchg
cmc
lret
xchg
pop
scas
call
aas
int
xor
repz
mov
inc
lods
jle
daa
push
faddp
in
xchg
dec
gs
push
pop
jg
shrl
mov
push
out
xchg
jnp
add
hlt
pop
mov
icebp
dec
and
xchg
pop
hlt
ret
mov
sbb
cmp
or
es
cmp
mov
andb
cmp
jge
push
aaa
jmp
xor
mov
fucomi
adc
adc
outsb
popa
sbb
aaa
xchg
cmpsl
ds
inc
scas
mov
into
xchg
mov
add
jmp
mov
mov
sbb
daa
adcb
pop
mov
xlat
pop
add
and
pop
and
push
fisubl
xor
xchg
je
cmpsl
xchg
in
leave
cs
mov
mov
ja
into
fisubs
cmpsb
das
xlat
ss
pop
gs
int3
push
inc
or
sub
loope
iret
xchg
add
push
testb
mov
in
js
repz
in
lods
rcrl
pop
and
inc
mov
mov
add
dec
mov
push
mov
out
jp
cmc
mov
mulb
jbe
out
testl
pop
andl
and
repz
test
fisubrl
push
pusha
fstps
cmp
push
sbb
iret
push
pop
rcrl
xchg
in
xor
jmp
psrlw
ds
or
xorl
lea
fiadds
mov
and
jno
pop
push
mov
push
xchg
sbbl
popf
stc
aad
mov
repnz
pop
mov
test
arpl
cmpsb
mov
fldl
add
es
scas
test
adc
cs
xor
movsl
push
into
push
push
push
sub
or
je
daa
mov
mov
or
pop
xchg
push
cmc
sbb
clc
jo
test
add
xchg
mov
sbb
cmp
sahf
out
inc
shll
xchg
adc
int
cwtl
mov
dec
cli
cmp
jp,pn
fistps
daa
xor
nop
and
mov
and
ret
in
pusha
mov
stos
sti
jg
ret
aaa
sub
ds
add
stc
and
enter
into
or
icebp
sbb
fldl2e
in
push
jae
xchg
movsl
sub
arpl
in
rclb
add
cs
cmp
jnp
push
inc
clc
jns
insb
xorl
jmp
pop
cmp
sub
adc
mov
xchg
push
push
js
mov
shll
pop
idivb
and
stc
addr16
test
jl
fstpl
mov
stc
mov
insl
mov
cli
mov
or
pop
in
ret
lods
add
and
mov
mov
xlat
cmpsl
push
mov
fiaddl
push
jg
jmp
dec
std
cltd
out
mov
inc
scas
outsl
pop
mov
pop
jecxz
lock
lods
add
inc
roll
stos
aad
and
jno
outsb
pop
add
sub
pushf
mov
jge
scas
stos
call
add
rolb
in
movsl
add
pop
scas
mov
pop
xor
lret
jle
das
ja
test
sbb
mov
adc
pop
jmp
sub
mov
push
and
sub
rcl
clc
sub
movsl
sbb
sbb
stc
push
int3
add
xchg
pop
sbb
push
gs
fsubs
pop
shll
cmpsl
out
loope
lret
das
and
popf
jmp
iret
pop
cltd
push
add
mov
out
xor
in
inc
loope
dec
rcrl
or
mov
aad
sbb
mov
test
int
sbb
push
push
sub
fimull
adc
add
popa
jmp
and
mov
xchg
push
inc
dec
dec
sahf
xor
jmp
dec
pop
pop
out
arpl
int3
aaa
xchg
mov
push
inc
jmp
xor
cmc
nop
movsb
nop
add
in
cmp
pop
mov
pop
xchg
je
pop
dec
dec
in
mul
cmp
popa
in
daa
inc
pusha
dec
imul
jp
pusha
stos
nop
bound
aam
pop
pop
jmp
fsubl
sbb
push
sbb
or
popf
mov
sbb
aam
sub
cmc
adc
jg
bound
mov
pop
call
sbb
xor
vpbroadcastw
fisubrs
mov
ftst
xor
and
xor
pop
ljmp
bound
outsb
fildl
add
and
adc
pop
fucom
push
cmp
pop
lahf
fcmove
es
jbe
push
cs
ja
inc
cs
xor
dec
in
or
mov
insb
fistpl
sbb
addl
stos
cmp
inc
inc
test
icebp
js
or
push
adc
dec
pop
fcmovne
shl
adc
adc
sbb
add
mov
adc
pop
sub
lea
fidivrs
add
mov
cmp
test
xchg
sbb
and
xchg
into
ss
mov
rorl
xor
lods
sub
sub
add
pop
std
pop
push
test
xor
mov
mov
xchg
sbb
sbb
cmpsl
dec
xor
push
mov
pop
test
adc
xchg
movsb
stos
hlt
ljmp
cmc
test
jmp
rcr
wbinvd
test
sti
fcoms
jg
dec
stc
cli
pushf
jno
mov
push
gs
pop
adc
or
mov
loop
das
repnz
push
scas
jae
in
xlat
mov
mov
gs
cld
jnp
ja
mov
inc
mov
sbb
pop
lods
in
mov
cmp
push
arpl
cmp
ljmp
jmp
cmp
stc
inc
popf
xor
or
out
cmc
std
dec
mov
mov
dec
fpatan
or
lds
push
sbb
int3
dec
cmp
ror
mov
and
iret
ljmp
sub
stos
mov
in
xchg
roll
xor
ss
sub
mov
xorl
pusha
lret
ljmp
xchg
push
mov
mov
popf
pushf
out
mov
jae
sbb
inc
xchg
call
push
fwait
sbb
push
pop
inc
test
and
enter
push
cmp
xor
xor
add
jp
xor
jb
or
add
sbbl
fisttps
loope
mov
ljmp
pcmpgtb
pop
pop
and
push
jns
sub
popa
mov
pop
gs
jmp
fildll
notb
mov
jns
fcompl
dec
adc
mov
std
es
js
mov
fmull
lock
sub
push
sub
idivb
je
loope
xor
mov
sub
pop
or
divl
fdivrs
xchg
incl
push
push
jl
sub
je
push
imul
stos
nop
filds
sub
xchg
push
jbe
into
mov
test
cwtl
mov
dec
int
pop
fsts
cmp
jecxz
push
jmp
mov
dec
int
out
cld
loop
scas
out
lcall
inc
mov
pushf
jnp
shlb
xor
mov
ss
aam
inc
mov
cmp
sbb
in
orl
loopne
lods
sahf
sub
mov
loopne
stc
adc
int
pop
mov
jno
fisttpl
add
and
xor
and
jne
inc
push
xchg
je
fs
fwait
dec
jmp
ss
mov
sti
test
push
jns
jl
mov
mov
stos
loopne
jns
fucomip
jecxz
pop
mov
xchg
js
out
mov
inc
rol
inc
add
pop
ret
and
xor
lret
ds
addr16
pop
add
aaa
insb
and
or
jnp
and
and
push
jnp
push
movsl
or
daa
jae
or
stc
mov
cli
sbb
shll
adc
add
cli
inc
orb
ret
stos
adc
fsub
jbe
mov
dec
and
sti
rcrl
movsl
jecxz
and
paddb
cli
jecxz
xchg
subl
mov
jb
test
mov
clc
add
imul
jae
mov
push
xchg
mov
and
js
jl
scas
pop
jg
sbb
ret
mov
jmp
push
dec
clc
jmp
or
aaa
loopne
xlat
outsb
inc
sub
cmc
pop
rcrb
sbb
pushf
mov
push
shlb
cmp
rcl
mov
mov
in
pop
adc
mov
and
sub
mov
repz
jnp
cmp
cmp
lahf
adc
push
xchg
aaa
pusha
cli
fnstsw
inc
xchg
es
add
orl
lock
test
lock
out
test
das
jbe
loop
movsl
stos
icebp
or
jnp
stos
adc
jne
ret
shlb
xchg
pusha
and
out
popf
sub
scas
in
aad
mov
dec
mov
push
std
ret
daa
and
in
or
loopne
mov
cmpsb
aas
push
dec
mov
dec
push
leave
cli
xchg
sti
js
mov
fldl
or
clc
pop
sub
test
and
fsubrp
sub
imul
mov
orl
cmpsl
enter
fwait
mov
pushf
shl
ret
jno
xor
clc
mov
push
adc
xchg
mov
rcr
shlb
xchg
scas
xor
repz
dec
and
mov
add
lods
outsl
dec
cmpsl
adc
push
stos
add
cli
jnp
sub
mov
int
out
xchg
adc
leave
test
shll
test
pop
xchg
or
mov
out
int
xchg
lods
outsl
sbb
iret
xor
cmp
out
popa
and
add
aas
xchg
sbb
cmp
pop
dec
mov
jge
sub
cmp
dec
jg
mov
inc
icebp
mov
jp
fdiv
out
or
cli
pop
jle
flds
sbb
jle
pushf
test
stc
inc
pushf
lods
push
daa
jno
inc
xchg
outsl
mov
and
lods
xchg
insl
or
lds
inc
fsub
cmp
mov
call
mov
inc
mull
fwait
shl
lock
ljmp
push
lcall
mov
pop
test
rcr
loopne
iret
adc
xor
push
inc
outsb
sbb
sahf
and
sar
jb
sub
sub
ret
pop
inc
jp
cmp
scas
inc
dec
orl
sub
dec
mov
jo
mov
mov
rcl
mov
xcrypt-ecb
cmpsl
or
or
jne
xchg
ficoms
int3
mov
sbb
pop
mov
or
push
or
call
sbb
dec
cmpb
out
cmpsl
dec
jp
dec
in
aam
out
test
sub
fmulp
flds
in
sub
nop
pop
aaa
nop
out
pop
push
push
ds
sub
dec
aas
push
test
pop
repz
cli
stc
inc
sub
lahf
cltd
xor
popf
push
in
and
jp
pop
or
fwait
sbbb
loop
test
in
pop
insb
add
cmc
jecxz
imul
fs
cmp
bound
push
sbb
fmul
mov
add
insl
push
xchg
stos
lea
ja
add
and
loope
test
push
mov
or
jge
and
push
sbb
or
std
nop
mov
data16
mov
xchg
inc
mov
out
dec
and
or
jne
test
inc
pop
xor
or
mov
iret
mov
or
or
stos
adc
cmpsl
mov
mov
fcmovb
pop
int3
std
shrl
xor
mov
test
mov
insl
ret
mov
ss
xchg
negl
mov
lds
sub
sub
adcl
jb
sub
fdivrl
jno
jbe
xor
jp
aas
jl
repz
mov
sti
testl
iret
rorl
add
add
push
sbb
lahf
int3
push
decb
shll
rcrl
or
scas
cmp
cld
xchg
out
sahf
fdivrl
ss
in
fisttpl
mov
xor
popf
or
shrb
insb
pop
mov
enter
pop
icebp
or
frstor
stos
mov
test
cmpsb
ret
jp
imull
mov
test
or
popa
cmp
cmpsb
call
ficoml
test
inc
lods
inc
nop
add
adc
cmpsb
inc
cmpsb
pop
arpl
and
xchg
fdivs
xor
arpl
sbb
jae
lods
inc
or
cmp
jno
adc
jb
push
push
pop
mov
popa
sahf
cwtl
out
cld
xchg
int
sub
ret
xchg
mov
loopne
dec
pop
in
xor
lret
fwait
scas
insl
in
addr16
xlat
lods
popa
movsl
insl
mov
cld
bound
ret
shr
js
dec
pop
leave
fstps
push
cmp
popa
lods
iret
icebp
sbb
les
lret
mov
push
mov
popa
xchg
adc
push
push
icebp
push
mov
pop
cmp
and
fnsave
test
insl
cwtl
jle
mov
xchg
pop
adc
and
cmova
std
in
imul
and
int
and
jae
iret
lds
shrb
adc
mov
je
aam
stos
xchg
jbe
xchg
pop
sub
int3
mov
adc
int
ds
sub
addr16
sbb
pusha
out
cmp
mov
pop
xor
inc
sub
cs
mov
dec
xchg
cli
or
and
xchg
cltd
fstpl
dec
jno
jb
pop
out
cmp
fiaddl
lea
movq
cmp
and
nop
dec
dec
ret
sti
push
mov
addb
xchg
mov
pusha
push
and
test
xorl
data16
mov
icebp
sub
cltd
sub
rorb
pop
repnz
shll
xchg
ljmp
and
pop
js
inc
sbb
mov
ja
and
or
fs
addl
js
testb
movsl
jae
mov
and
mov
or
out
mov
std
jno
aas
pop
in
loopne
ficoml
test
ja
jp
mov
cmp
or
in
fsubs
lods
or
push
mov
add
mov
sbb
cli
ret
lret
lods
leave
mov
sbb
mov
cs
iret
rorl
xor
mov
sbb
aad
jns
sbb
stos
mov
test
scas
mov
push
testl
pop
inc
xor
xor
cmp
inc
out
adc
mov
ja
shrl
and
negb
push
ret
dec
pop
mov
jecxz
lods
inc
popa
fisubrs
out
cld
lods
andl
cmp
mov
xchg
out
push
adc
out
push
in
imul
les
pop
test
xchg
cld
notb
add
insb
cmp
pop
les
mov
push
mov
fisubrl
or
arpl
test
add
loope,pt
lcall
pop
ljmpw
xchg
dec
cmp
lea
dec
pusha
dec
insl
cmpsl
rcrl
sub
or
or
ja
int
mov
data16
sub
push
sarl
call
xchg
jae
fstl
loope
xchg
inc
aad
push
add
ret
adc
inc
daa
push
nop
popa
mov
test
fcoml
mov
aam
sbb
arpl
add
cmc
fldl
cmpb
lock
sub
xchg
je
int
mov
xchg
or
inc
loop
js
fisttpl
sahf
and
sbb
add
add
outsb
cmc
mov
sahf
adc
add
testl
mov
add
sarl
shrb
jmp
inc
insl
stc
cld
jg
lret
sbbb
inc
out
and
jecxz
loope
bound
addl
or
xor
push
lret
pop
adc
push
mov
lret
pop
jbe
hlt
cmp
iret
in
xor
in
sbb
adc
sub
push
jae
decl
pop
dec
jnp
mov
and
rcrl
xchg
sahf
lods
push
insb
inc
cmp
push
leave
pusha
or
dec
adc
or
insb
pop
js
aad
shl
jl
inc
mov
lahf
movsl
ret
enter
jae
inc
aas
push
pushf
outsb
push
std
ret
sbb
addr16
mov
jmp
adc
mov
data16
sbb
ja
inc
cli
aam
mov
lea
and
mov
push
lret
scas
ds
sub
and
shll
cmpsl
sub
scas
and
ret
pop
xor
sahf
fwait
push
push
dec
mov
sbb
jge
cmp
push
mov
ret
jl
xchg
jg
loop
jbe
jo
loope
jns
dec
adcb
xchg
int
lret
xchg
cmp
xor
fdivs
adc
sub
xor
dec
pop
fidivrs
clc
and
cmp
mov
daa
bound
inc
dec
cmp
lret
or
fs
fiaddl
sub
push
pop
dec
into
pop
cmc
sub
out
sahf
outsl
adcl
cmp
sub
mov
aad
mov
adc
stc
xchg
jp
mov
mov
dec
dec
pop
fstl
mov
scas
movsl
jp
shll
push
mov
pop
xchg
inc
fsubrs
insb
mov
push
mov
or
ds
sub
adc
addl
mov
xor
icebp
jns
inc
stos
aam
mov
mov
sbb
dec
pop
shlb
cmp
divb
fiadds
fldt
popa
push
stos
xor
mov
ja
sbb
mov
icebp
pcmpgtw
stos
cli
pushf
int
mov
xor
mov
clc
mov
xchg
mov
and
cmp
xchg
push
out
rcl
insl
out
sbb
cmp
xchg
gs
decb
mov
mov
jo
lods
ss
popa
and
sbb
or
test
mov
imul
mov
shrl
and
xchg
add
xchg
stos
and
jne
add
mov
adc
cmp
fwait
rolb
inc
pop
dec
pop
mov
dec
in
mov
pop
mov
and
pushl
scas
aaa
fs
push
mov
jg
sbb
scas
and
mov
pop
jnp
xchg
js
mov
and
sbb
ret
pop
cwtl
call
sbbb
ds
repnz
jo
mov
mov
adc
cs
data16
cwtl
addr16
daa
cltd
mov
enter
mov
mov
inc
xchg
sbb
lea
inc
cld
andb
sti
mov
or
rorl
loop
push
mov
into
lock
jl
dec
in
sbb
ret
mov
stos
ret
sbb
in
pop
adc
cmpsb
push
roll
daa
lret
stos
sbb
lods
lahf
cmp
inc
mov
out
test
jne
cmc
dec
stos
test
xchg
xchg
push
xor
dec
add
dec
ss
cmp
dec
loope
fcoms
mov
es
lods
inc
pop
out
test
push
cwtl
bound
xchg
test
ja
pusha
test
sub
mov
add
mov
rol
loopne
icebp
mov
adc
mov
stos
mov
add
pushf
out
lods
jmp
push
mov
cmp
cmp
and
popf
mov
push
test
in
sahf
cmp
ss
xchg
mov
rcl
ljmp
cltd
test
outsl
movsb
jecxz
mov
scas
out
ds
pushl
pop
repnz
lret
icebp
inc
sahf
adc
pusha
aad
mov
xsaveopt
subb
xor
adc
fstl
enter
fsub
subl
mov
sti
xlat
cmp
jmp
ja
adc
rcrl
add
or
loop
sub
int
xchg
pop
and
iretw
inc
fidivs
adc
jmp
adc
xchg
sub
pop
outsb
je
or
movb
jl
fwait
jl
sbb
xchg
bound
rorl
out
aaa
pop
testl
and
insl
incl
inc
push
lea
sub
sub
push
mov
xlat
cmp
push
xor
repnz
fs
xlat
mov
int
fbstp
pusha
pusha
inc
lcall
add
adc
lahf
test
cmpsl
dec
xor
es
xchg
dec
add
loopne
sbb
xor
jae
or
aad
rcrb
aas
add
fwait
jbe
cmp
call
xchg
mov
mov
insl
das
pushf
sub
xchg
js
aaa
mov
and
cmp
dec
bnd
mov
adc
iret
rol
inc
adc
adcl
ss
inc
lea
sbb
add
data16
fld
jle
jp
mov
int
test
fcmove
adc
aaa
into
out
dec
push
add
dec
pop
adc
test
sub
mov
mov
flds
lcall
cltd
xor
ds
cmp
add
hlt
fdivrp
cmovp
jbe
add
daa
repz
sub
imul
lock
notb
and
rorl
popf
lret
jbe
dec
movsl
push
cli
loope
fcompl
dec
pop
enter
mov
loop
fstpl
xor
or
add
push
push
neg
in
xchg
add
inc
sub
push
mov
pop
sbb
cmpb
je
jmp
mov
stos
mov
iret
cmp
shl
cmp
xchg
das
lret
xchg
cmp
pop
fdivl
andl
sbb
stc
jae
inc
gs
divl
rorl
push
rcll
ja
mov
je
lcall
mov
pop
hlt
xchg
sub
lea
mov
je
sbb
sub
shrb
jne
and
arpl
mov
cmc
push
idivl
mov
push
adc
lea
ljmp
leave
sbb
pop
dec
jmp
insl
adc
jmp
jbe
shll
jb
fdivl
test
ja
push
call
mov
mov
pop
push
push
xchg
hlt
inc
mov
fstpl
mov
lcall
push
mov
lcall
pushf
out
icebp
rcll
call
arpl
sub
mov
mov
jp
adc
pop
cltd
sub
aad
mov
adc
das
pop
rcrl
mov
pop
sub
lcall
mov
and
inc
cmpsl
mov
mov
test
shll
jo
or
test
jbe
dec
jp
cmp
sub
mov
xlat
sbb
out
addb
test
inc
lcall
pop
mov
sub
fwait
sbb
pushf
out
push
loope
cmp
insb
sarl
pop
cli
mov
dec
dec
mov
xchg
sub
insb
push
aad
inc
sub
shlb
daa
daa
dec
cld
xor
in
subb
add
jp
lahf
lods
fwait
das
mov
push
gs
xor
hlt
setbe
mov
xchg
nop
fiaddl
mov
mulb
jge
stos
ret
pop
adc
fs
jg
xchg
bound
adc
fwait
lret
sbb
push
xor
xor
mov
lea
rcr
adc
or
and
push
push
xor
clc
hlt
dec
xchg
sbb
into
adc
inc
out
divl
jne
cmp
pop
mov
push
mov
sbb
add
pop
jmp
push
cltd
inc
cmp
in
shrb
push
insb
sbbl
mov
push
mov
nop
sub
or
xor
into
lahf
stc
ficoml
add
push
testl
pop
sbb
outsb
sub
outsb
cmc
aad
cmp
cmp
mov
filds
sbb
xor
and
adcb
cs
or
push
imul
jae
jmp
test
xchg
divl
fisttpl
lcall
mov
inc
je
add
push
sbb
sbb
loopne
adc
push
add
mov
cmp
cmc
pop
pop
fidivl
iret
mulb
inc
pop
dec
fldenvs
jbe
mov
xchg
stc
push
int3
pop
in
cltd
stos
das
push
mov
mov
aam
or
xchg
pop
in
je
clc
pop
and
cmp
ja
call
cltd
add
dec
push
insb
fbstp
stos
cmp
cmpsb
jle
or
mov
push
and
imul
in
andl
dec
sarl
jae
pop
mov
adc
stos
scas
gs
int3
pop
lret
sbb
inc
sbb
inc
xchg
in
jbe
popf
sub
push
inc
hlt
xor
add
mov
test
aaa
fbstp
dec
scas
sbb
lea
dec
bound
orb
adc
out
in
xlat
cli
cmpss
es
addr16
imul
push
in
movsl
sbb
mov
push
mov
and
mov
and
fstps
xchg
arpl
ja
mov
inc
loop
sti
or
or
hlt
inc
or
data16
jle
loop
aad
inc
jp
cmp
xlat
jle
out
cmpsb
push
jg
fwait
inc
cld
pop
gs
and
and
aad
das
or
fisubs
sarb
stos
in
adc
or
and
cltd
test
push
orb
mov
int
xchg
fsts
push
or
cltd
shll
out
loope
jno
lea
inc
push
movsb
cmc
adc
insl
jge
sub
or
insl
ss
ss
push
pop
xor
fs
call
sbb
ljmp
lods
pop
divb
jmp
or
sbb
les
std
je
adc
sti
divps
clc
lock
jg
stc
push
fstps
mov
xchg
pop
movsb
jnp
xor
mov
sub
cwtl
mov
sbbl
push
sbb
mov
and
pop
jp
jg
adc
pusha
imul
mov
call
test
adc
call
mov
mov
pop
jecxz
test
xor
sub
or
sub
in
js
dec
es
mov
fidivs
lea
ss
subl
push
inc
push
cwtl
dec
dec
dec
loop
xor
add
sar
frstor
jne
roll
add
pop
cli
stc
cmp
inc
or
fidivrs
xchg
pop
pop
inc
pop
stos
js
push
mov
push
int
push
imulb
ja
popf
loop
pop
icebp
shrl
xchg
and
imul
jo
cltd
pop
inc
inc
mov
popf
pop
inc
loop
sub
or
push
mov
mov
mov
mov
clc
push
or
push
popf
sub
jecxz
leave
fs
enter
insl
and
ficomps
decb
xchg
xor
rcl
enter
inc
fisubs
sbb
enter
xor
orl
mov
repz
sub
loop
xor
xor
popf
xor
repz
xchg
outsl
sbb
call
or
in
cmp
lods
push
movsb
or
hlt
mov
test
stos
daa
gs
or
dec
inc
repz
sub
imulb
cmp
jmp
sub
insl
sub
aam
jb
hlt
mov
jge
dec
pop
pop
cltd
dec
imul
xor
out
jbe
fnstsw
add
test
push
popf
gs
imul
xchg
mov
popf
and
lods
sbb
pop
pop
xor
cmp
scas
stos
pop
and
cmpsb
iret
notb
js
xor
adc
xlat
mov
sbb
xchg
sub
pop
pop
pop
mov
ficoms
stos
push
sub
inc
inc
pop
je
mulb
dec
mov
or
lods
push
popf
sub
repz
negl
cmc
push
and
fwait
xor
and
push
pop
jo
leave
fs
imull
inc
jle
jae
pop
xchg
push
sub
push
mov
mov
mull
jo
sarl
push
jecxz
ja
cmpsb
cltd
das
inc
clc
xorl
xchg
test
jne
lds
ds
mov
mov
jp
cmp
xchg
adc
push
pop
mov
cmp
push
mov
jbe
aaa
xor
lods
neg
sti
or
es
jmp
jl
jo
jnp
aad
shlb
or
sub
rorl
insl
out
xchg
dec
mov
leave
push
fnstenv
jmp
stos
inc
sub
cwtl
mov
jbe
xchg
xchg
test
dec
out
adc
sbbb
inc
mov
inc
mov
xor
pop
cmp
fstpl
shl
push
add
jns
scas
pop
jmp
lret
pop
inc
push
fdiv
int3
in
stc
ss
int
lcall
jmp
subb
xchg
and
test
jae
ficoms
xchg
int3
sub
mov
and
adc
inc
xor
or
add
mov
cmpsb
or
and
jp
stos
stos
roll
iret
adc
or
push
imul
cmp
push
divl
ljmp
inc
sti
cwtl
ds
imul
icebp
movsl
push
in
sub
mov
mov
aas
push
cwtl
lcall
xchg
and
mov
pop
pop
rol
mov
lods
jmp
movsb
aaa
push
mov
xchg
and
popa
notl
jle
shl
mov
mov
nop
pushf
mov
dec
shld
out
stc
rorb
push
aad
inc
jno
xlat
push
popa
sub
lret
and
adc
xchg
inc
lret
push
int
jb
add
test
xchg
sbb
push
pop
rcr
rcrl
aas
sbb
adc
dec
insl
inc
add
ficompl
pop
and
add
add
inc
das
cmp
push
jmp
or
dec
xchg
mov
cs
outsl
cmp
sbb
or
aaa
int3
insl
sub
or
mov
std
aaa
ret
insl
cmc
push
mov
movsl
fisubrl
stos
cmp
sub
pop
cmpsb
mov
idivl
fwait
or
dec
addr16
fdiv
xor
cmpl
push
add
push
out
test
cmpsb
adc
sub
cmpsb
repnz
mov
cmc
dec
mov
adc
shrl
aas
or
add
dec
adc
int
test
pop
xor
nop
jmp
ret
sahf
jmp
out
cmp
pop
fdivrs
test
ror
std
or
sar
call
dec
loopne
repz
mov
mov
fldt
out
enter
mov
or
xor
in
push
sahf
xchg
pop
push
jo
cmovno
int
jg
push
sub
jne
iret
enter
and
mov
or
jp
mov
push
shlb
out
insb
mov
dec
dec
mov
or
outsb
stos
movsl
mov
adc
mov
ja
or
adcl
or
jge
add
add
or
sbb
sahf
jae
nop
imull
loope
nop
push
mov
inc
jno
cltd
test
and
xorl
and
inc
loopne
jns
int
test
inc
mov
cmp
pop
outsb
dec
scas
bound
lret
jl
jns
push
jecxz
dec
std
xchg
inc
shr
jge
jmp
aam
jae
inc
test
or
pushf
inc
fsubs
pop
mov
aas
inc
cmp
aad
mov
test
xchg
add
adc
idivl
mov
xor
xchg
andl
icebp
pop
and
mov
ss
bound
fcmovne
jno
pushl
jmp
push
sbb
out
or
bound
xor
push
mov
push
in
mov
hlt
and
xlat
mov
xor
in
lock
inc
subl
lret
sti
addb
cld
jmp
call
sbb
and
pop
leave
int
lock
pop
shl
xchg
andb
sbb
mov
shll
test
out
mov
push
inc
dec
mov
and
mov
and
and
xchg
adc
cwtl
test
jae
mov
in
ljmp
popa
in
test
rcrl
lods
cli
push
js
fcompl
jno
mov
imul
lahf
pop
in
inc
in
fsubr
fimull
push
ljmp
stos
shll
ret
idiv
mov
push
push
iret
add
popa
jns
nop
stos
mov
dec
insl
pusha
pop
dec
push
int3
sub
push
pop
push
es
pusha
int
rorb
cmpsl
and
adc
andl
or
inc
jno
jns
fcmove
cmp
nop
add
inc
icebp
sub
emms
subl
loope
lock
dec
add
stos
mov
push
scas
inc
xchg
mov
int
out
popf
sahf
mov
sbb
xchg
sub
cmp
push
xor
push
vmovhps
fwait
lock
mov
adc
lods
mov
sbb
movsl
testl
arpl
cmpsb
movsl
sub
xchg
andb
rep
pop
psubsb
sub
add
sbb
bound
mull
popa
jmp
sti
xchg
es
mulps
mov
std
jae
dec
in
jge
imul
daa
jmp
lret
inc
fdivrp
loopne
push
iret
fsubrp
inc
xchg
cmp
cmp
xor
cwtl
pop
test
pop
mov
sub
int3
pop
shrb
arpl
test
int3
jge
cmp
pushf
movsb
sar
add
imul
clc
pop
xchg
adc
enter
xlat
push
dec
and
test
mov
out
test
test
je
inc
push
or
xlat
adc
or
fdivrs
pop
pop
mov
fcomp
call
rorb
repz
xor
es
pop
rorl
push
fbstp
mov
mov
ret
fucomi
ret
or
xorb
rolb
out
imul
and
mov
or
stc
push
add
push
ds
push
insb
sub
mov
into
pop
hlt
lret
dec
jg
out
cs
daa
fcoms
jnp
inc
shrb
lock
rcll
into
faddl
inc
lss
inc
xchg
cltd
sub
enter
test
add
fadd
lret
pop
cli
mov
jno
sbbl
cmp
cmp
sub
out
or
shr
mov
insb
or
sarb
lods
pop
cmpsl
or
sbb
mov
fisttpll
lcall
sub
dec
push
cmpsb
pop
loop
pop
clc
cmp
scas
xchg
dec
shr
or
mov
fstpl
add
rcrb
sub
outsl
sbbb
push
pop
sub
in
aas
and
aaa
dec
dec
mov
jp
inc
mov
sbb
add
inc
mulb
xchg
out
xchg
cltd
cli
rcr
mov
sbb
add
repz
mov
dec
add
fwait
mov
lods
inc
hlt
aad
les
pop
mov
fisubrl
mov
cmp
xchg
sbb
mov
aam
xor
test
xchg
sub
or
icebp
mov
mov
sbb
lods
jmp
pop
fdivp
mov
jge
lahf
mov
sbb
mov
pop
push
jns
js
sbb
mov
repz
push
jl
scas
mov
cld
mov
lods
jo
mov
sbb
cmp
jge
adc
pushf
jne
xchg
std
or
loopne
mov
xor
jp
inc
fxch
orb
dec
adc
mov
and
xor
into
lea
and
push
push
jbe
lahf
out
insb
sbb
sbb
les
sbb
cmc
xchg
dec
loope
lret
adc
jl
loop
cwtl
jo
and
loopne
sub
mov
mov
xchg
ret
ret
mov
movsl
ret
dec
and
es
aas
inc
fldt
fcomip
or
mov
pop
outsl
mov
ret
and
ljmp
cli
lods
sub
sar
push
cmp
sbb
dec
cmc
nop
in
in
rcrl
cs
jmp
push
out
popf
xchg
fdivrl
loopne
dec
stos
jno
pop
insb
lcall
movsl
pop
mov
mov
int3
pop
mov
mov
sub
push
cld
fmuls
mov
call
add
roll
or
stos
cmpsb
lea
fmuls
andb
sbb
or
or
sbb
mov
push
test
insb
inc
push
xchg
add
in
xor
pop
cmpb
ja
xor
int
insb
cmp
xchg
lret
ret
lods
sub
add
decl
xor
jo
push
pop
hlt
and
icebp
inc
out
cmp
push
in
repz
test
in
lea
rcr
repz
inc
in
movsl
mov
xor
movsb
loope
xchg
lock
mov
sbbl
or
sub
setbe
aad
mov
mov
mov
sti
mov
out
jp
push
push
sbb
pop
hlt
cli
mov
jnp
lock
fidivl
fld
loopne
shlb
js
push
test
or
jbe
in
dec
inc
mov
cld
adc
call
arpl
or
test
push
loope
ss
popf
ret
mov
jne
inc
adc
push
or
jb
or
fs
sti
and
mov
and
dec
call
or
rcrl
loopne
jno
daa
lret
in
hlt
inc
inc
jge
jns
addr16
jne
imul
test
popl
movsl
pop
push
xchg
stos
in
xchg
and
call
adc
xor
push
popf
inc
loope
xchg
testl
mov
sub
pusha
flds
dec
cmp
lret
pop
and
pop
movsl
jmp
sub
mov
je
imul
pop
hlt
into
cwtl
scas
out
mov
xchg
pop
pop
mov
and
jae
xchg
adc
fldl
pusha
cmp
cltd
lods
enter
dec
cmp
lods
bound
mov
adc
test
push
sub
xor
inc
push
es
dec
ss
loop
jb
cmc
imul
data16
xchg
jae
push
xor
push
mov
int
dec
push
add
fisubrs
loopne
pop
xchg
add
testb
sti
or
pop
out
inc
roll
int3
cltd
add
mov
cmp
push
mov
or
not
not
xchg
mov
sbb
leave
sub
dec
int
int
lods
repz
dec
adc
push
jl
fs
test
inc
pop
sbb
jo
push
push
xchg
call
mov
push
imul
aaa
mov
xchg
outsb
insl
pop
outsb
cmpsl
imul
dec
loope
jne
pop
sahf
es
addr16
jnp
xor
repz
adc
mov
adc
cmpsb
push
pop
imul
sub
lds
add
rcll
pop
movsb
xor
in
inc
loop
jmp
sub
adc
scas
push
sub
cltd
and
mov
popl
adc
cmp
movl
sub
arpl
ret
out
and
dec
std
hlt
push
clc
push
add
or
push
xor
roll
xchg
xchg
and
xchg
in
jecxz
outsb
add
mov
push
fistpll
or
mov
addb
or
xor
push
sub
hlt
out
fildll
movsb
mov
mov
cli
insl
stos
imul
daa
das
or
shrl
sub
inc
scas
lret
popf
or
jge
insb
jl
pop
outsb
dec
pop
int
cmp
jnp
lcall
xlat
xchg
inc
pop
mov
mov
lret
push
and
or
adc
inc
jl
push
cmp
pop
in
bound
stos
dec
out
in
addr16
mov
xlat
jmp
negb
mov
mov
and
cmp
mov
lret
cmp
adc
push
cmpl
inc
sbbb
lahf
iret
stos
lret
cmp
test
outsl
cmpsb
adc
xchg
sbb
xchg
cmpsl
jno
push
je
xchg
mov
fwait
dec
push
mov
jb
add
xchg
xchg
sbb
mov
shl
mov
aam
add
xor
sub
jle
sub
pushf
adc
adc
into
popf
inc
arpl
andl
pop
or
mov
popf
and
je
shr
pop
je
js
popf
mov
fwait
arpl
shl
push
xchg
loope
pusha
ss
xchg
adc
dec
or
imul
fmull
sbb
shl
fincstp
fistpl
xlat
scas
cwtl
incb
jns
dec
mov
arpl
xlat
and
movsl
or
rolb
ss
mov
sbb
jmp
call
or
sbb
imul
cmc
adc
mov
ret
xor
cmp
sar
add
jnp
shll
mov
xor
bound
aas
sbb
adc
bound
in
add
lea
daa
outsl
stc
scas
pop
cmp
xchg
inc
fcmovb
out
mov
mov
je
insb
xor
lea
shll
fnstenv
sbb
fstps
jg
xor
xor
sti
mov
push
int
inc
clc
jle
inc
xlat
or
mov
push
sub
xor
add
ljmp
push
rcr
dec
in
adc
xchg
test
cmp
jle
fsubrp
jns
push
cld
lahf
jle
push
lods
xchg
mov
scas
aad
mov
sub
pop
pop
xchg
pop
inc
jo
and
xchg
repnz
mov
push
jge
enter
or
mov
jno
or
rclb
and
push
mov
pushf
stos
sbb
loopne
lea
loopne
sti
mov
jmp
std
dec
jo
popf
stos
jle
mov
gs
test
dec
push
mov
pop
fldl
and
negl
scas
and
test
lcall
out
push
jnp
mov
mov
fcmovb
inc
test
xor
mov
insb
stc
repz
es
add
and
jmp
pop
jno
nop
repz
xchg
push
stos
mov
cmpsl
mov
cmp
or
cmp
and
sbbl
mov
rcl
enter
sub
inc
xchg
dec
aam
in
mov
add
jl,pn
cld
push
test
lock
out
push
jge
ret
sti
unpcklps
mov
xor
fs
inc
data16
pushl
jbe
jbe
jb
and
jle
add
lds
jl
sbb
cmp
cmpsb
mov
fmuls
jge
shll
movsb
mov
and
adc
add
mov
and
dec
pop
lds
or
repz
push
push
inc
xor
arpl
fs
jle
xchg
mov
push
int3
popa
xchg
sbb
sti
xor
mov
pop
jge
into
adc
xchg
pop
pop
clc
or
cmpl
rorb
xchg
push
fidivrl
es
push
popf
flds
push
repnz
mov
dec
add
mov
add
inc
and
fdivl
sbb
xor
mov
push
shlb
jl
dec
xor
pop
jp
inc
xlat
test
xor
adc
js
std
and
bound
add
out
sub
in
pop
pop
movsl
mov
xor
cwtl
dec
pop
pop
and
add
add
cs
aad
adc
lahf
pop
cmc
adc
xchg
mov
jge
jle
xor
es
xchg
cmp
add
xchg
sbb
gs
xor
or
jae
lahf
sub
loop
push
dec
inc
bound
leave
mov
fwait
mov
lock
fildl
cmc
ss
lcall
mov
push
mov
add
leave
xchg
mov
and
test
btr
pop
mov
inc
icebp
mov
lahf
sbb
arpl
cmp
int3
popf
pushl
or
fwait
adc
in
mov
push
jmp
push
jmp
test
rcrl
scas
cmp
cltd
scas
jae
push
mov
lods
and
icebp
mov
inc
lods
cmp
jmp
inc
xor
sbb
popf
and
inc
dec
mov
shl
and
test
inc
lcall
xlat
sub
or
xor
push
xchg
push
add
lods
pop
aaa
xchg
int
arpl
into
mov
xchg
movsb
das
sahf
outsl
xchg
ss
inc
cmp
icebp
loop
cltd
xchg
rorb
mov
mov
ret
mov
xchg
push
mov
test
mov
shlb
xor
inc
aaa
daa
pop
rolb
fsts
fwait
shrb
call
mov
or
cmpsb
movsb
movsl
cmc
push
leave
in
add
inc
xor
push
add
add
pop
inc
pushf
scas
jno
mov
or
lcall
cmpsb
vxorpd
inc
push
add
jl
xor
xchg
popf
movsl
icebp
xchg
cmc
stos
ficompl
sbb
leave
or
xchg
sub
mov
lods
mov
inc
loop
inc
sahf
cmp
mov
aam
cs
outsl
dec
adc
int3
cmp
and
pop
test
push
push
out
mov
leave
adc
dec
fists
adc
xor
push
xchg
mov
sbb
fs
inc
or
stos
cmpsb
sti
xchg
sahf
inc
out
jp
mov
dec
out
push
mov
mov
aad
outsl
movsb
mulb
xor
out
adc
mov
mov
jmp
lret
aam
into
scas
scas
inc
push
dec
sbb
mov
inc
fucomp
mov
xchg
sub
cwtl
cltd
cmp
imul
hlt
mov
fdivp
pop
aad
or
cld
push
daa
into
dec
pusha
cmp
int
jns
or
adc
mov
adc
fprem1
popf
xor
push
add
push
inc
bound
int3
in
xchg
xchg
dec
adc
faddl
les
jge
fidivl
dec
add
out
pop
in
dec
sbb
mov
sbb
les
icebp
cs
jmp
mov
iret
mov
push
stc
outsb
adc
jl
mov
pop
in
xor
icebp
fs
sub
mov
jmp
mov
add
pop
push
mov
push
adc
out
dec
jl
and
jbe
lea
and
adc
cmp
add
pop
out
push
dec
jbe
fwait
inc
xor
cmpl
subl
inc
cmpsl
insb
add
sahf
push
inc
pop
cmp
insl
cmpb
popf
outsb
mov
and
test
jns
dec
popa
xchg
rcll
fcoms
pop
adc
dec
into
and
inc
inc
shr
jp
mov
sbb
pop
sub
ss
mov
shll
mov
popf
and
push
push
mov
filds
clc
fisubrs
jo
dec
arpl
push
jo
jno
mov
push
ja
add
popf
fs
idivl
rorb
popf
mov
je
ja
pop
ss
cmp
push
mov
pusha
loopne
cmpsb
push
lods
movsl
push
fdivrl
lahf
cmp
mov
push
jbe
cmpsl
rolb
inc
enter
and
mov
leave
inc
fdivrp
add
fsubrl
adc
mov
jbe
pop
xchg
lock
adc
imul
negb
or
jl
and
cwtl
or
inc
and
sbb
or
out
jb
in
clc
movntps
or
jmp
mov
gs
lds
xor
sbb
dec
and
sti
lret
mov
fs
mov
aam
push
fcomp
sbb
jmp
mov
inc
add
ds
and
paddsb
fidivrs
popf
repz
lds
jle
addr16
iret
mov
add
insb
js
test
cwtl
fucomp
cwtl
jb
xchg
sub
imul
int
cmp
fninit
mov
xor
cmp
mov
push
shll
cmp
sub
xchg
cmp
jbe
mov
std
cmp
repnz
jae
sub
jno
dec
mov
repz
mov
jmp
cld
push
dec
addr16
fsubr
xchg
add
or
out
lea
fs
jbe
mov
in
nop
push
ds
ljmp
dec
push
xchg
xor
sub
lods
lock
aam
scas
pop
pushf
push
lods
daa
ljmp
push
xchg
int
lcall
add
pusha
dec
out
jo
imul
and
iret
pop
fistps
adc
cmpb
mov
cmp
movsl
mov
sahf
lods
add
arpl
and
dec
sub
cld
add
cmp
inc
mov
mov
lods
xor
pop
jmp
lea
or
test
daa
jmp
rep
push
test
je
mov
call
inc
hlt
dec
jbe
addr16
clc
xorl
nop
mov
fcomp
in
dec
xchg
cld
leave
dec
cmp
lcall
jbe
mov
or
pop
pop
popf
jns
inc
lret
pop
dec
sbb
push
les
gs
nop
daa
mov
ja
pop
popa
scas
xchg
add
add
test
mov
test
aam
cmpsb
fnsave
xlat
dec
or
inc
fmull
stos
mov
pop
lcall
lock
mov
xchg
push
mov
shll
mov
dec
movsb
cltd
push
ret
mov
sub
les
inc
lret
cwtl
repz
jl
jecxz
aas
jae
mov
dec
push
dec
cwtl
loop
push
movsl
adc
dec
xchg
lret
and
inc
xchg
imul
dec
cmpsl
cs
dec
fiadds
xchg
jne
fnstenv
push
sbb
xchg
sub
fildl
ret
neg
pop
lds
dec
add
adc
inc
pop
in
insl
loop
shrl
push
lea
inc
inc
arpl
pop
sbb
jge
cmp
scas
mov
mov
push
mov
movsb
lret
fcompl
js
ja
pop
sar
dec
es
mov
enter
outsb
test
imul
es
adc
xor
jno
in
js
data16
adc
insl
cli
jno
loop
scas
jmp
sub
jae
push
mov
mov
dec
pop
jns
fs
fwait
pushf
sub
mov
mov
xchg
sub
inc
fisubrs
leave
dec
and
sti
cmp
sbb
mov
or
mov
bnd
inc
adcl
fcomi
xlat
jne
lock
gs
mov
dec
outsl
mov
ret
and
lret
cld
xchg
rcrl
xor
dec
call
xchg
and
xchg
cli
dec
loopne
jecxz
repz
je
push
sub
xchg
sbb
and
stos
push
lds
mov
sbb
push
cmc
adc
sti
shrl
mov
dec
mov
es
adc
insb
add
jge
inc
outsl
pminsw
insl
cld
sbb
sub
shrb
fmull
adc
rorb
scas
gs
or
sub
lods
aad
hlt
cmpsb
and
dec
push
jge
dec
mov
xchg
adc
pop
mov
xchg
scas
cli
lahf
shll
dec
sbb
cmc
lret
aad
push
xorb
data16
sbb
sub
or
cmpsb
ret
lcall
or
scas
jmp
mov
popf
aad
ja
pop
and
cltd
incl
inc
mov
lahf
sti
in
clc
push
mov
xor
pop
push
inc
rcll
ret
arpl
dec
jecxz
and
int3
pop
cmp
insl
cmp
lret
divl
int
test
je
je
or
and
inc
push
call
lods
add
mov
test
scas
call
lret
adc
stos
cs
and
leave
dec
daa
aas
jb
push
jmp
lcall
push
mov
pop
bound
out
lds
lcall
cld
push
leave
cmc
xchg
cmpb
stos
mov
or
ret
setbe
lods
popa
and
cmc
jne
sbb
sub
mov
fcmovnu
xor
jecxz
stos
add
mov
or
lahf
leave
int
cmp
pop
xchg
ret
cmpb
pop
loopne
data16
sbb
mov
test
pusha
mov
out
cmp
in
loope
das
cmp
xchg
dec
mov
fdivrs
push
mov
push
ss
and
jg
imul
sbbb
sbb
mov
and
inc
aad
fimull
mov
sbb
in
mov
scas
pop
xchg
add
sti
xor
adc
mov
hlt
mov
dec
mov
mov
orb
ret
cmp
jg
data16
pop
aam
roll
jno
sub
sbb
inc
in
mov
sbb
fistpll
rol
std
mov
mov
pop
test
mov
stc
jl
inc
dec
inc
xchg
mov
mov
out
jl
mov
int3
sbb
outsb
or
ffree
xchg
jno
add
test
ss
sbb
aad
xor
jle
popa
xor
inc
enter
fldenv
roll
pusha
lods
ficoml
popa
lock
or
xor
mov
rcll
fdivrs
iret
rcrb
sub
add
roll
imul
and
pusha
addl
cmp
jnp
je
mov
mov
pop
xchg
aas
add
or
jecxz
jb
cmp
cmp
test
sahf
ret
icebp
cmp
jo
dec
fsts
pop
mov
xlat
mov
adc
scas
adc
and
adc
std
loope
lea
jle
mov
adc
aad
mov
mov
mov
push
addr16
test
sub
leave
add
fiadds
xor
mov
lret
bound
lods
and
fwait
aaa
sahf
dec
adc
sar
outsl
add
dec
jbe
pop
lcall
stc
or
mov
mov
pop
xor
inc
push
mov
f2xm1
xlat
push
outsb
orb
adc
out
sub
jg
xchg
xchg
add
xchg
test
push
mov
push
pop
fisubrl
xor
fs
or
mov
pop
xor
stos
xchg
faddl
jnp
inc
pushf
dec
jmp
std
push
add
loop
aas
xchg
mov
inc
fistpl
push
arpl
xor
les
push
cmp
jbe
cli
push
pop
test
mov
fisubrs
mov
aad
test
xor
cmp
gs
cmp
jle
popa
fwait
ret
iret
dec
pusha
imul
scas
xchg
xor
ss
iret
and
imul
rol
mov
cmp
xor
pop
in
imul
insb
andl
jns
mov
lahf
shlb
dec
cmp
mov
imul
aaa
inc
push
imul
and
push
fimull
add
mov
push
xlat
andl
mov
push
pushf
and
ljmp
sbb
jge
sbb
adc
jl
fsubrp
cmpsb
lock
push
xor
stos
sbb
jle
iret
pop
cmp
xlat
outsb
ret
pop
mov
jge
add
jae
lods
adc
call
jmp
sub
cltd
sbb
ljmp
testl
push
fsub
push
jl
das
xor
mov
pause
rcrl
inc
pop
dec
pusha
fistpl
jp
mov
add
mov
pop
out
xchg
out
mov
push
xchg
jnp
aam
mov
aad
daa
pop
in
and
xchg
xchg
daa
cmp
aaa
pushl
mov
add
bound
xchg
call
call
lods
mov
repnz
xchg
xor
xchg
pushf
push
dec
cmp
addb
fistps
loop
aas
add
fimull
fimull
pop
or
aad
int
mov
loop
bound
add
in
jno
push
cmp
lcall
loopne
les
in
decl
inc
call
and
and
ss
ret
loope
add
loopne
jnp
xchg
mov
and
mov
jmp
xchg
xor
xchg
movsb
jae
movsb
out
outsb
cmp
mov
mov
ret
jge
push
cwtl
cli
adc
or
sti
mov
xchg
fcoms
inc
subb
bound
sub
out
add
out
xor
mov
arpl
pop
adc
addr16
or
inc
jecxz
pop
mov
stos
pop
cmp
insl
repnz
and
push
mov
insb
and
test
fdivrs
ror
das
repnz
jmp
jb
adc
xchg
ja
loope
notl
out
adc
jbe
fidivrs
fs
cwtl
int3
sbb
mulb
in
dec
mov
repz
aaa
jle
mov
jo
add
dec
add
jnp
sub
mov
mov
xchg
dec
loopne
stos
jecxz
in
sub
mov
js
xlat
in
lahf
adc
push
shlb
leave
hlt
jle
pop
outsl
jnp
push
xchg
inc
mov
arpl
cmpsb
ja
ds
cltd
lods
sti
mov
test
xchg
movsl
pop
xchg
call
mov
jae
out
lds
xor
pop
lret
mov
outsl
mov
mov
jns
pop
outsl
rcrb
or
pop
sbb
push
jp
xor
adc
movsb
pop
in
dec
inc
loop
adc
cli
dec
xchg
or
mov
daa
pop
das
or
dec
push
push
out
xchg
sub
fucomp
or
aas
fcmovu
jo
pop
roll
stos
and
xchg
dec
ss
push
xor
in
int
imul
stc
movsl
adc
je
pop
and
test
push
lods
out
adc
jge
dec
insl
pusha
mov
mov
add
mov
movsl
loope
int
dec
test
mov
push
xchg
push
aas
inc
pop
out
sbb
push
addr16
xor
fisubs
mov
loopne
add
das
jmp
sbb
mov
sarl
mov
rorb
subl
cmp
dec
push
xchg
xchg
in
add
sub
jecxz
adc
fstpt
sbb
mov
dec
add
lds
dec
cmp
add
sbb
pop
out
xchg
dec
and
adc
mov
out
pop
sub
test
mov
push
pop
or
daa
xchg
add
out
jmp
dec
or
jp
mov
xor
cmpsl
les
and
out
test
popf
sti
ja
xchg
cmp
xacquire
add
inc
std
xor
insb
and
xchg
sub
or
sarb
jno
xchg
mov
adc
lahf
mov
enter
lock
or
mov
lahf
or
sbb
mov
mov
sbb
data16
fwait
push
adc
in
xchg
ficompl
flds
add
pop
les
mov
xchg
ljmp
cli
stos
movsb
ss
jne
and
ja
scas
add
push
xchg
rolb
jp
lods
mov
fbstp
int
jne
xchg
sub
icebp
arpl
filds
push
xchg
pop
xor
out
cltd
std
inc
pop
add
xchg
rcll
inc
pop
sti
mov
xchg
ret
repz
xor
sub
sub
mov
dec
in
mov
push
nop
fcoml
fcomps
das
mov
push
or
jne
push
call
sub
pop
push
dec
push
arpl
xor
lods
stc
and
add
sub
cwtl
and
push
incl
xchg
cmp
sub
fcomi
xor
lds
into
add
mov
jno
jns
pop
mov
mov
sbb
or
mov
cli
scas
rcl
xor
mov
out
cmp
cmpsl
mov
or
cmpsb
mov
test
mov
stos
cld
push
cmpsl
mov
push
lods
sbb
sahf
or
pushf
mov
stc
inc
js
sbb
jp
rol
adc
in
divl
jge
daa
mov
shr
movsb
fdivrl
into
ljmp
fwait
dec
push
or
add
add
shr
cld
pop
and
mov
testb
jp
adc
hlt
faddl
mov
scas
loopne
xchg
sbb
jo
daa
xor
aas
xchg
xchg
enter
xchg
shrb
push
push
repz
sub
mov
mov
jne
cmp
aaa
dec
dec
in
push
lret
out
xchg
sbb
pop
inc
dec
sbb
adc
pop
stos
add
add
jp
daa
push
out
xchg
daa
push
outsl
pop
sbb
int
sbb
push
cmp
sbb
imul
inc
sub
data16
add
jp
fidivrl
scas
lret
pushf
popa
mov
pop
call
scas
mov
mov
sbb
popa
lahf
cs
out
cmp
jno
clc
sbb
jo
or
xchg
sbbb
mov
push
outsl
push
sub
stos
mov
mov
mov
cltd
jge
mov
popa
scas
into
ret
iret
add
and
mov
mov
rcrl
mov
and
dec
test
iret
cmp
inc
call
daa
mov
xchg
out
shll
xchg
add
add
adc
repnz
pop
or
push
int3
rcll
mov
pop
cmp
aam
pop
push
mov
loop
lret
pop
dec
stc
mov
jns
xchg
mov
lret
rorl
fucom
mov
fs
mov
fmull
fcomps
testb
jecxz
fs
jp
inc
cs
mul
nop
out
test
call
inc
clc
adc
push
mov
mov
mov
push
cmp
stc
or
out
imul
adc
fcomp
imul
iret
out
jne
ja
mov
add
scas
inc
pop
test
rclb
mov
cmp
mov
add
or
mov
jg
pushf
mov
sbb
in
sbbl
sbb
mov
loopne
movsl
popf
cmp
adc
call
jne
insb
add
js
push
add
pusha
jne
adc
pop
test
dec
sbb
push
movsl
jne
popa
clc
andl
mov
push
arpl
jne
cmpsb
cmp
pop
xchg
das
movb
or
xchg
enter
and
in
mov
mov
mov
mov
js
lahf
imul
or
test
add
pop
cmc
scas
mov
mov
insb
incl
mov
in
cmp
lods
std
lret
push
les
adc
mov
add
repnz
mov
cmp
arpl
aas
lock
arpl
push
jecxz
and
push
call
ss
das
push
loope
push
aad
inc
fdivl
sub
nop
cmpsb
cld
xchg
pop
andb
xchg
and
adc
test
test
shl
fs
adc
in
pop
mov
lcall
push
pop
loopne
imul
sub
sub
xchg
sub
mov
iret
cmpsb
xor
fsubl
adc
cs
fildl
push
lods
add
cmp
testb
test
notb
pushf
enter
push
mov
jg
repnz
sbb
adc
fcompl
mov
push
arpl
mov
sbb
repnz
sub
shlb
jmp
xor
repz
movsb
jo
sbb
test
outsb
push
inc
insl
scas
sbb
loop
sbb
push
add
mov
jle
dec
mov
xor
mov
ffree
fwait
jmp
and
scas
jb
cld
xchg
inc
cmp
repnz
rorb
aad
leave
sarb
aaa
xchg
addr16
cmp
pop
xor
dec
cli
sti
ret
pop
rcrl
pop
push
sti
insb
insb
js
push
lcall
das
or
push
negb
testb
jge
pop
sub
inc
mov
dec
pop
push
inc
or
shr
adc
lcall
cmp
test
sbb
pop
push
rcrb
xor
mov
ljmp
and
das
adc
xor
mov
push
cmpsb
mov
inc
into
movsb
rcrb
jg
pop
pop
stos
inc
pop
jbe
pop
jne
pop
sarb
mov
cmpsb
cmp
out
pusha
divl
insb
scas
inc
pusha
outsb
js
pop
mov
mov
popf
les
push
mov
push
lcall
test
js
std
sbb
test
ret
in
shll
mov
sbb
ret
pop
decb
dec
int3
xchg
scas
outsb
loope
push
pushf
popl
pop
testb
js
sub
dec
cltd
mov
fwait
pop
mov
loopne
xchg
mov
push
outsl
and
push
mov
pop
arpl
sub
xchg
pop
lods
mov
aam
cmc
mov
js
push
sub
jp
push
out
mov
cmp
push
dec
sar
ljmp
dec
sub
dec
sbb
push
pop
imul
push
xchg
fdivp
into
push
aad
loopne
bswap
cmp
xor
cbtw
and
inc
into
mov
daa
lds
dec
pop
xor
mov
pop
mov
fwait
hlt
ds
add
faddp
lret
repnz
std
orl
mov
es
mov
leave
aad
pop
xchg
aad
dec
adc
fwait
xor
add
mov
test
cltd
pop
test
ret
int3
fisttps
push
sbbl
push
shlb
aas
nop
jp
ret
das
add
les
pop
xor
adc
cmp
jne
jmp
lods
das
mov
mov
into
mov
mov
dec
rclb
add
push
call
cmp
arpl
out
mov
push
in
dec
push
dec
and
mov
or
adc
jae
xor
xchg
mov
lret
xor
cli
vhaddpd
es
test
xor
push
aaa
pushf
inc
loopne
pop
mov
ret
xchg
push
add
dec
lahf
sub
ja
in
and
dec
fisubrl
add
xor
cwtl
xchg
pop
lret
inc
mov
sub
and
dec
cld
pop
mov
push
addr16
xchg
mov
lret
fdiv
sbb
cwtl
pop
xchg
decl
sarl
pop
ja
pop
push
js
pusha
dec
cmp
mov
scas
mov
fdivs
int3
ja
rcl
jge
into
enter
pop
call
sub
adc
mov
das
imul
dec
mov
lret
adc
call
pop
lret
repz
push
stos
and
cld
push
inc
lea
adc
pop
add
popa
or
cltd
lret
mov
or
cltd
jne
gs
popa
xchg
out
clc
adc
mull
adc
mov
inc
jo
add
push
vpcmpgtw
push
divl
cmp
adc
cmp
push
nop
jnp
xor
inc
lds
mov
add
inc
arpl
mov
nop
pop
icebp
movsl
cmp
jae
jb
and
cmp
xor
inc
rclb
dec
loop
mov
push
repz
jbe
xorl
out
test
dec
out
inc
repz
add
xor
adcb
inc
jp
bound
enter
and
mov
jle
or
xchg
mov
lds
ret
adc
xor
les
insl
loop
mov
addr16
inc
into
aas
cmp
aam
push
push
movsb
insb
ffreep
pop
mov
andl
imul
sbbb
aaa
jmp
cltd
aaa
cmpsb
outsb
outsb
call
or
push
push
mov
incb
outsl
lcall
mov
in
adcb
add
sbb
sahf
mov
add
lahf
pop
pop
bound
call
and
notb
and
pushf
aam
inc
pop
stos
jmp
test
xchg
add
and
sub
arpl
mov
mov
fisubl
pusha
cld
mov
int
sbb
jl
mov
cmpb
pop
loop
add
lods
out
mov
cli
jge
xchg
sub
jb
dec
dec
xlat
repz
dec
push
rclb
into
in
sub
push
clc
lahf
mov
mov
xchg
inc
push
and
test
repnz
mov
hlt
cmc
mov
dec
inc
stos
jge
aad
popf
inc
cmpsl
sbb
nop
in
pop
popf
or
inc
hlt
loope
mov
fsts
adc
sbb
xlat
add
imul
inc
clc
pop
jge
imul
iret
or
in
mov
jbe
gs
dec
and
cmpsl
cmp
jg
mov
cld
into
gs
sub
in
sahf
cmp
mov
ret
fcomps
ljmp
jbe
pop
add
xor
pop
ret
movlps
repz
xor
dec
pushw
cwtl
addr16
inc
jns
push
mov
sbb
sub
cltd
in
cwtl
inc
sbb
mov
shlb
int
sti
in
mov
cmpsb
lock
xor
pop
pop
pop
and
ss
pop
and
testl
push
xchg
mov
mov
jl
gs
into
cmp
sub
pushf
test
pop
pop
mov
xchg
push
xchg
mov
fmull
dec
out
das
inc
jne
stc
cmpsb
popa
mov
cmpsb
mov
stos
lea
lock
push
xor
in
dec
mov
fadds
loope
mov
or
lahf
aas
lahf
lahf
rclb
unpckhps
stc
lods
jmp
add
in
jns
push
pop
mov
xlat
dec
cmp
cmp
and
in
dec
movl
adcb
mov
mov
push
xor
imul
mov
inc
out
jne
inc
aaa
sbb
push
cmp
aad
mov
fidivrl
xor
or
pop
inc
ja
mov
jbe
inc
scas
xchg
mov
fs
scas
int3
xchg
insb
mov
pmuludq
and
mov
aas
addr16
xchg
shlb
in
xchg
cmp
daa
sbb
data16
cmp
add
jbe
ret
jb,pt
outsl
push
xchg
cmpsb
dec
sbb
dec
arpl
outsb
add
loopne
push
outsb
daa
push
push
insl
orl
mov
cwtl
das
mov
shll
in
movsl
push
loope
push
imul
xor
lcall
push
loop
fimuls
inc
pop
adc
push
fwait
push
je
mov
stc
lahf
cmp
iret
test
in
mov
mov
fldt
add
gs
mov
adc
and
testl
addr16
mov
mov
fidivs
pop
dec
cwtl
add
movsb
mov
dec
inc
ret
sti
rcrb
les
cmp
jg
sti
movsl
pop
xchg
sub
xchg
setb
iret
out
data16
mov
or
mov
sbb
je
pop
sbb
and
adc
push
repz
mov
jp
pop
outsl
pop
jp
aad
imul
shl
mov
notw
je
popa
out
xor
dec
pop
jne
and
test
pop
lret
insl
add
scas
fistps
mov
xor
es
lods
fnstsw
nop
test
push
insb
stc
inc
pop
pop
stos
in
and
out
paddusb
rep
subb
out
test
push
cltd
cmp
xchg
das
dec
fmul
push
or
in
xchg
jmp
je
mov
xchg
or
lret
jmp
call
int3
stos
outsb
in
push
out
push
add
lea
jecxz
pop
in
push
or
fisttpll
cltd
cs
aad
mov
shll
lds
jmp
or
add
cli
lods
fisubrl
shrl
pop
or
add
out
mov
sti
dec
in
dec
jecxz
dec
leave
imul
aaa
xchg
sub
sbb
les
mov
jecxz
bound
mov
mov
pop
adc
xchg
jle
lahf
jae
and
arpl
inc
push
ja
xchg
push
add
inc
leave
adc
dec
bound
cmpsl
cwtl
inc
xlat
leave
jns
jg
fstpl
jmp
mov
push
inc
orl
outsb
push
and
pop
add
pop
sub
lret
sub
mov
fcomps
or
fsts
mov
faddp
mov
push
roll
jl
push
jmp
aam
jno
lahf
in
sub
outsl
and
rorl
push
mov
lods
push
ljmp
lock
xlat
jo
cmpsb
pop
icebp
fcomps
js
cmp
mov
in
shlb
cli
pop
cld
add
mov
sbb
or
pop
xor
ljmp
or
mov
jmp
lahf
sub
rcrb
or
xchg
sub
and
cs
jmp
test
sbb
int3
jns
cmpb
mov
loop
or
out
lea
iret
jmp
out
cmp
mov
mov
pop
loopne
lret
pop
sbb
cmp
jo
xchg
cs
pop
test
mov
int
call
mov
mov
mov
movsb
inc
push
popa
sbb
sbb
push
dec
sub
mov
mov
pop
sub
test
jg
xchg
xchg
std
inc
mov
ret
pusha
jo
std
xchg
fsts
add
movl
ljmp
repz
mov
faddp
jnp
andl
cmp
xchg
mov
div
movsl
jmp
mov
mov
push
mov
ret
dec
and
pop
lods
fadd
stos
in
test
loope
movsl
loope
jecxz
sub
ds
ljmp
jns
daa
pop
cmp
cltd
hlt
add
and
cmc
out
dec
and
xchg
mov
jp
and
scas
inc
daa
sarl
mov
push
jp
sub
mov
fists
mov
gs
push
ret
sub
aad
loop
xor
jne
mov
popf
cmp
imul
sti
cmc
adc
cltd
orb
cmpl
sub
cmp
dec
sub
ljmp
out
cmpsl
movsb
inc
clc
and
push
leave
into
aad
mov
push
mov
out
cmp
movaps
arpl
push
ja
fs
or
repz
jp
sbb
es
or
add
idivb
mov
and
out
pop
in
rorl
je
mov
cmpsb
lret
mov
das
xchg
jge
ffreep
lods
xchg
push
mov
rolb
nop
popa
adcl
dec
lods
adc
mov
or
or
cmp
sbb
push
lds
data16
push
cld
test
sti
test
data16
jge
mov
lock
test
mov
xchg
sbb
push
test
pushf
ficompl
and
mov
mov
pop
hlt
fisttpl
loope
cld
jnp
std
leave
xor
push
rcl
in
xor
push
in
pop
mov
mov
imul
les
xchg
imul
sbb
sbb
push
stc
addr16
adc
and
leave
push
inc
fadds
lods
dec
adc
fcoms
or
cmpsb
dec
dec
jns
jae
jg
aad
int3
jge
sbb
inc
pop
cmp
and
stos
adc
xorl
xchg
pop
lret
in
ds
pop
mov
je
mov
mov
mov
pop
movsb
lea
mov
in
cmp
je
inc
stos
mov
mov
sbb
imul
xchg
add
enter
aaa
cli
push
repz
test
gs
lret
push
insb
add
lret
and
mov
add
leave
xor
outsb
aad
les
push
sbb
movsl
jp
mov
or
es
into
subl
sub
test
jo
pop
out
test
lret
jns
mov
xor
insl
push
lods
xchg
mov
in
pushf
push
pop
adc
cli
pop
lock
stc
adc
xor
lea
aam
adcb
adc
int3
clc
mov
aas
mov
add
push
repnz
sbb
lea
sbb
inc
inc
inc
cmp
pop
xor
cli
clc
and
push
daa
test
ja
ficomps
xlat
lods
mov
test
fdiv
and
add
divl
rorb
in
sbb
xor
jge
or
in
test
mov
xor
inc
sar
jl
jno
adc
xchg
insl
pop
cmc
sbb
aad
in
inc
jg
popa
mov
dec
call
sar
mov
mov
adcl
fdivl
sub
push
inc
movsb
pop
lock
push
sub
outsl
sarl
lret
mov
jmp
or
popf
repnz
sub
xor
loope
mov
cmp
jae
scas
in
pop
or
jae
xor
add
iret
ljmp
jmp
mov
popf
pop
sub
popa
pop
mov
popa
ret
pop
ret
fs
sbb
lcall
sar
xchg
add
pop
dec
mov
and
daa
or
xchg
daa
push
mov
or
mov
ret
outsb
out
sub
fistps
push
and
cltd
pop
cmp
cwtl
mov
lea
push
fcomi
arpl
dec
jno
cs
pop
scas
pop
lahf
pop
sbb
or
cs
in
aas
sub
or
pop
mov
aam
into
loop
mov
or
call
mov
loope
hlt
nop
jnp
fisubs
mov
mov
punpckhbw
loopne
push
pop
test
dec
aas
aas
pushf
jl
and
sbbl
mov
imul
jns
and
ljmp
mov
adc
iret
in
push
push
lods
xchg
lods
xor
pop
outsl
pop
negb
out
xor
pop
jnp
mov
rcrb
push
sub
outsb
or
mull
mov
inc
sarb
and
fnstenv
sub
cmc
pop
test
cmp
mov
imull
js
sub
cmp
mov
shr
jl
xchg
icebp
inc
lcall
inc
lods
mov
push
orl
mov
cmpsb
es
push
mov
mov
daa
or
mov
loopne
push
sbb
xchg
pop
cmc
cmp
sbb
push
in
ja
les
sbb
xchg
out
ds
lea
jne
cld
mov
sbb
clc
adc
mov
inc
insb
ret
xchg
mov
adc
test
js
imul
fcomp
scas
mov
sub
into
add
pop
dec
dec
xchg
add
fsubs
jno
xchg
lods
xor
add
dec
pop
out
cmp
push
fbstp
int3
dec
and
imul
pop
mov
jbe
jmp
fsubrl
sbb
cltd
hlt
cmc
mov
imul
ja
pop
mov
shrb
mov
or
jne
cmpsl
das
pop
outsl
popa
int3
sbb
rcrb
loope
outsb
adc
mov
ret
imul
and
jo
inc
adc
insl
or
pop
jl
jl
clc
movsb
xchg
xchg
loop
dec
out
sbb
scas
cmpsl
and
pop
push
inc
inc
fnstenv
and
popa
adc
inc
in
jp
ljmp
fsubr
dec
add
ret
repnz
mov
sub
add
xchg
loop
sbb
std
dec
push
movsb
mov
xlat
pop
add
ds
aam
cmp
mov
out
into
cmp
dec
das
push
out
pusha
jo
adc
aas
mov
jno
adc
inc
mov
test
dec
fwait
bound
clc
mov
adc
xchg
mov
jns
out
loop
dec
or
mov
push
pop
leave
dec
pop
movsl
mov
insl
das
mov
movsl
cmp
icebp
rolb
in
nop
sub
pop
cmpsb
jne
adc
aad
jl
jg
orb
jbe
jno
dec
cmp
mov
mov
adc
addr16
jecxz
jecxz
or
xchg
jno,pt
hlt
lahf
ss
xor
les
lds
and
addr16
fdiv
lods
mov
cli
dec
sbb
dec
call
les
add
js
jne
or
out
sub
mov
fisttpll
int3
mov
jg
pop
xor
mov
pop
into
ficoml
inc
out
inc
iret
add
jns
push
sahf
mov
jecxz
sbb
mov
adc
dec
xchg
add
or
fsubr
push
xor
adc
mov
fsubl
jae
fidivrl
cmp
out
js
jns
xor
decl
imul
lods
add
int3
xchg
or
xchg
ss
and
ret
pop
sbb
pop
int
mov
mov
mov
ret
shrb
add
stos
imul
fdivrl
es
or
aaa
popl
cli
hlt
aad
jmp
or
rol
addr16
inc
in
mov
iret
iret
mov
shlb
sahf
inc
xchg
nopl
mov
fbstp
push
in
clc
dec
andb
sub
push
inc
cmp
ds
aad
mov
int3
fdivrs
scas
mov
fdivl
jp
scas
jns
negl
cs
and
push
push
pop
or
or
shrl
push
scas
ret
stos
fisttpl
mov
cmp
or
fnstenv
xor
sub
pusha
fistpl
cltd
dec
sbb
mov
outsb
lcall
add
dec
mov
loop
test
and
mov
fwait
les
push
loope
add
sbb
and
adc
adc
lods
push
inc
fisubs
push
frstor
frstor
lret
cmpsl
jecxz
xor
aam
filds
ljmp
test
fs
dec
and
xchg
shl
dec
xlat
stos
std
in
subl
or
dec
bound
icebp
les
adc
xchg
dec
sahf
outsb
je
ret
es
mov
inc
jae
dec
lahf
sub
mov
mulb
cmp
imul
mov
imul
data16
addb
xor
push
xchg
fs
aad
rclb
jle
repz
cmp
enter
mov
addl
sub
or
popa
ja
adc
cwtl
cltd
mov
call
pop
dec
popf
test
hlt
cmp
sarb
mov
cmp
repz
js
js
xlat
jp
or
icebp
adc
and
fcoms
loope
imul
loope
movsl
push
cmp
adc
push
adc
popf
je
sub
sti
cmp
mov
cltd
adc
pop
aam
lahf
xor
mov
es
jae
jnp
rcrb
pop
add
sbb
outsb
fsubrp
mov
push
mov
dec
shlb
cmc
mov
mov
cmpsl
out
xor
shr
push
inc
out
push
xor
loopne
subb
pushf
xchg
std
sahf
push
in
xor
or
pushf
das
loop
dec
sti
add
xchg
mov
mov
sbb
inc
or
mov
pop
mov
pushf
dec
pop
dec
pop
xchg
jecxz
lret
jmp
outsb
sbb
inc
repnz
ljmp
xor
adc
adc
sub
sbb
xchg
int
loope
mov
cld
mov
sub
xchg
pop
cmp
mov
andl
lods
xchg
inc
adc
pop
arpl
outsl
push
fcoml
fcomip
jle
dec
fistl
push
fistl
movsb
ret
rorb
sbb
int
push
arpl
mov
xchg
cmp
notb
mov
addr16
mov
out
lret
adc
scas
xor
sub
rcll
dec
jmp
sbb
pop
mov
pop
out
ds
sbb
ds
jecxz
add
das
jecxz
popa
shlb
scas
dec
mov
sbb
imul
sub
icebp
outsl
xchg
mov
nop
xchg
mov
out
gs
mov
fadds
ljmp
pop
test
insl
xor
and
push
ror
fimull
pop
sub
aaa
cmp
test
dec
fisubl
add
test
fisubrl
test
pop
pusha
outsb
dec
leave
jns
sarl
mov
rcrl
jle
pop
decb
xorl
inc
push
popf
push
jae
fsubrl
movb
push
mov
pushf
cli
xor
jecxz
add
mov
cmpsb
into
out
rcl
add
and
shll
pop
hlt
adc
ljmp
int
fcomp
loop
lcall
cmpsb
push
sub
or
inc
std
sbb
imul
xor
pop
xor
cmc
mov
cmc
pop
pop
sarb
push
dec
dec
in
cmpsb
sbb
in
cmp
push
mov
lock
xchg
gs
scas
mov
aam
test
xor
ja
movsb
jecxz
pop
sub
xor
js
lods
sbb
sbb
shlb
mul
scas
ljmp
pushf
jo
mov
call
cmp
addr16
jmp
jbe
ljmp
add
or
fisttpll
cmp
pop
enter
add
dec
pop
pop
mov
dec
rcrl
loopne
adcl
mov
stc
movsb
ret
dec
loop
sti
add
fisubrl
sbb
rcr
fstl
and
addr16
and
and
test
js
pop
lock
add
mov
jne
andb
inc
dec
jg
pusha
ss
ret
bound
fcmovne
jae
bound
cltd
mov
mov
sub
cmp
les
jb
outsb
repz
insb
cmpsb
cmp
faddp
clc
mov
lods
pop
test
jg
movsl
mov
xlat
clc
decl
loopne
test
ret
out
pop
sub
sub
mov
imul
pop
jne
mov
insl
sahf
and
test
scas
mov
jmp
mov
xor
lock
clc
clc
sbb
dec
insl
rorl
vphaddubq
mov
cmp
xor
shrl
cmp
xor
push
xchg
pop
lock
inc
pop
arpl
push
inc
push
xchg
xchg
sub
call
stos
push
test
xchg
lods
stos
js
mov
dec
pop
or
or
mov
xchg
and
test
pop
mov
shlb
shll
iret
inc
sti
mov
or
outsb
xchg
sbb
mov
cmp
lods
cs
mov
cmp
movsl
jbe
add
xlat
inc
aaa
mov
mov
daa
outsb
icebp
xor
int
cmp
repnz
out
sbb
divb
push
jns
sub
shl
rcrl
into
scas
mov
test
push
in
inc
faddl
push
pop
notb
mov
ljmp
lret
mov
sub
pop
outsb
xlat
adc
sbb
enter
mov
push
pop
jbe
pusha
aam
cmp
inc
cmp
inc
mov
push
shlb
fs
loopne
push
jno
push
out
fld
add
jp
and
sar
js
ds
push
repnz
or
xor
push
nop
mov
push
loop
out
xchg
inc
hlt
fidivs
test
pop
ljmp
cmpsl
xchg
jbe
dec
jns
and
addr16
dec
je
mov
lods
les
jo
push
lods
subb
or
sub
dec
sbb
inc
popa
jge
loopne
dec
mov
fmulp
out
negl
scas
jns
sbb
shll
jnp
push
dec
sahf
inc
arpl
fmuls
shll
out
sub
pop
cmp
sbb
shl
bound
dec
arpl
sub
xlat
pop
scas
dec
xor
and
cmp
or
dec
in
repz
push
dec
mov
push
mov
or
inc
fldenv
cmp
mov
jge
push
add
cmpsl
movsb
jnp
xlat
pop
out
daa
add
xchg
jns
es
push
or
sbb
mov
sub
pop
movsl
mov
shlb
aam
sbb
out
cmp
lret
out
in
hlt
test
imul
push
lock
adc
out
xchg
sub
int3
roll
shrl
outsl
sbb
cld
jge
scas
cmp
shrb
xchg
les
stc
dec
push
fabs
lret
call
sub
notb
iret
lret
sbb
into
mov
add
cmc
and
dec
dec
or
jnp
mov
add
into
mov
loopne
arpl
mov
mov
rcrl
sbb
or
mov
jb
mov
xor
insl
testb
mov
jle
into
sahf
stos
inc
shr
mov
out
jg
xchg
sub
pushf
jmp
cmp
sub
lods
xchg
sbb
sub
loop
cmc
rcl
add
jge
add
sbb
cmp
jnp
arpl
pop
ficoml
fisttpll
mov
cmc
cwtl
inc
std
std
popf
inc
popf
cmp
jno
push
inc
inc
repz
aaa
testl
jle
fadd
xor
inc
cmp
test
ljmp
jae
lea
pusha
mov
sbb
gs
fnstenv
push
ljmp
outsl
push
stos
rcll
push
sub
bound
ja
sbb
cltd
iret
cmpsb
mov
sbb
in
sbb
lret
adc
int3
sbb
add
icebp
lods
fnstenv
xchg
sbb
jl
inc
ret
mov
sbb
dec
jl
pop
fildll
dec
xchg
lods
fists
lds
daa
in
inc
sarb
sub
scas
add
lods
xchg
inc
fs
cmpsb
hlt
jnp
aas
setne
dec
scas
fsubrp
int3
lahf
mull
sbb
xchg
in
pop
fwait
jmp
sbb
jo
add
lret
out
jp
clc
nop
pop
scas
test
sbb
adc
stos
sub
in
repnz
push
inc
pop
sbb
je
mov
rcll
jae
jmp
xor
mov
mov
mov
jb
inc
pop
imul
cmpsl
aas
and
cmc
dec
add
push
jne
stos
xchg
dec
fsubl
xor
push
lock
aad
cmp
in
mov
jnp
mov
inc
enter
das
insl
sub
dec
pop
pop
cmp
jo
fidivs
test
fdivl
gs
push
push
loop
add
or
dec
lea
mov
push
test
or
sub
loop
es
ret
jbe
fwait
ja
push
push
jecxz
jg
pop
mov
cmpsl
shrb
loope
push
shrb
pop
add
push
dec
ret
hlt
sub
sub
outsb
mov
inc
mov
outsb
push
in
pop
sbb
mov
lds
or
xchg
mov
push
dec
icebp
jno
test
mov
mov
push
jne
inc
ret
jecxz
add
lods
mov
lcall
in
aam
push
fldt
out
enter
faddl
mov
push
pop
mov
imul
pop
adc
xor
mov
fdivl
or
mov
fidivs
ds
icebp
cld
call
cmp
popf
lods
xchg
lret
test
pushf
hlt
call
cmp
test
mov
pop
sub
out
test
dec
cmp
aaa
cs
xor
in
xlat
push
stos
mov
hlt
mov
or
notl
aas
outsb
sbb
push
cmp
and
jge
je
fs
lods
leave
xor
dec
aas
sub
dec
inc
data16
test
cmp
pop
aad
sub
mov
xchg
call
adc
je
bound
iret
subb
shr
mov
in
sub
cmpsb
inc
lea
das
outsb
loop
fs
mov
mov
stc
ljmp
decl
daa
cs
std
and
into
pop
jecxz
lcall
mov
jle
push
add
jg
or
inc
cmp
add
pop
pop
inc
lea
mov
xchg
xchg
inc
cli
sbb
das
addb
gs
ds
out
and
ficomps
xor
test
fisttps
data16
enter
adc
mov
imul
out
mov
push
push
pusha
cmpb
ficomps
enter
pop
insb
cmpsb
push
adc
dec
repz
clc
jo
shlb
xor
adc
loopne
inc
pushf
test
mov
inc
jecxz
cltd
jmp
into
sbb
mov
jae
add
inc
pop
mov
push
icebp
xor
xchg
stc
and
jb
clc
sbb
sub
in
rcrb
lock
mov
xor
xorb
cmp
jae
cltd
imul
loopne
mov
mov
shr
add
mov
pop
add
mov
sbb
enter
pop
cli
cwtl
xor
pop
cltd
fidivrl
dec
lret
mov
sub
sbb
push
add
mov
loopne
jge
jge
xor
mov
add
aad
jns
pushf
and
inc
test
fidivrs
das
loop
sbbb
cmp
iret
pop
fldl
jge
mov
fisttpll
mov
push
rolb
imul
xor
xor
aad
out
push
push
call
mov
inc
adc
js
or
inc
aam
mov
push
mov
mov
cmp
or
mov
jp
push
inc
loopne
imul
mov
out
inc
js
jae
mov
jg
cmp
jb
arpl
inc
mov
sub
stos
loope
inc
mov
into
arpl
adc
mov
sub
shll
les
imul
pmaddwd
mov
mov
adcb
addr16
ljmp
dec
shl
inc
fnsave
adc
pop
and
dec
sahf
inc
xor
jmp
xor
mov
xchg
add
sbb
mov
jmp
outsb
je
int3
mov
insl
into
pop
int
aad
xchg
lock
in
add
sbb
xor
xlat
mov
cmp
mov
shlb
push
iretw
xor
clc
pop
jns
xor
and
or
out
test
ds
sub
aam
sbb
stos
jo
sbb
mov
pop
push
sbb
cmc
cwtl
jo
pusha
sbb
cmp
push
dec
lea
cmp
es
fwait
adc
call
xchg
out
lahf
xor
mov
xchg
adc
cmc
or
mov
adc
daa
and
or
push
push
movsb
and
lahf
jb
arpl
call
add
push
or
xchg
cmpb
sbb
arpl
aad
jb
fs
sbb
pop
clc
sahf
jmp
loop
or
fcompl
pop
insl
inc
clc
fnstenv
addr16
aas
mov
inc
pushf
aaa
xlat
xchg
mov
push
or
sub
jp
insb
aas
and
decb
decb
or
inc
xchg
daa
or
out
pop
mov
xchg
pop
adc
mov
es
and
add
stc
sbb
inc
adc
repnz
add
test
sbb
cmp
icebp
aaa
repz
inc
pop
push
loopne
pop
jmp
les
xor
mov
pop
cmp
dec
pusha
or
test
dec
add
adc
mov
cltd
pop
testb
sti
ja
sub
aaa
insl
sbb
cli
sub
cmp
hlt
dec
pop
adc
push
lds
dec
mov
repnz
xchg
push
mov
cld
dec
push
push
sub
mov
repnz
int3
pusha
cmp
jns
inc
iret
push
outsl
fdivp
sbb
or
adc
mov
rclb
imul
imul
test
in
xlat
or
test
jo
or
aad
bound
mov
stc
push
lret
pop
mov
bound
lock
lods
mov
fsubrs
mov
outsl
mov
mov
jp
xor
jp
adc
mov
mov
and
js
lods
inc
xchg
adc
lret
mov
jb
jb
jae
cli
and
mov
scas
in
mov
push
enter
mov
xlat
sub
stos
call
xchg
sub
daa
cmpsl
jg
repz
mov
test
jbe
sub
cmp
lock
inc
lcall
icebp
jbe
clc
mov
testb
jmp
cmp
mov
push
sub
pusha
lahf
not
push
sub
pop
xor
in
testb
lods
adc
lcall
mov
out
push
mov
test
cltd
xor
or
adc
popl
andb
push
cmpb
jbe
inc
add
aaa
cld
cmp
mov
cltd
arpl
out
scas
loope
jmp
pop
lods
aam
dec
andb
push
mov
loope
mov
mov
jl
and
jge
ss
in
xor
add
push
mov
fisttpll
mov
aas
divl
push
sbb
leave
les
outsl
cwtl
jo
les
mov
ljmp
std
lock
xor
stos
fldcw
inc
rclb
fisubs
data16
xorl
cwtl
xor
push
xchg
jge
icebp
andl
or
mov
in
pushf
in
cmp
lret
xchg
pop
add
mov
adc
push
cmp
cs
es
jge
xor
and
fcompl
les
sbb
leave
dec
and
mov
mov
daa
cmp
jle
out
imul
xlat
mov
call
jno
push
dec
add
std
loope
mov
mov
xchg
nop
mov
or
dec
xor
popf
jp
loopne
cmpsb
mov
pop
sahf
mov
xchg
ret
jl
flds
xchg
sub
ja
int
out
push
cli
rcrb
xchg
dec
cmp
pop
sub
clc
inc
imul
sub
mov
push
fs
or
movsl
leave
pusha
xlat
jnp
insl
and
out
fldenv
xchg
scas
cmp
gs
cmp
mov
not
sbbl
xchg
sub
cltd
fildl
jns
shll
lods
pop
cmc
fsubp
loope
dec
xor
icebp
fwait
in
mov
push
mov
jne
jbe
mov
dec
movhlps
sbb
mov
out
push
xchg
mov
sub
ds
aas
pop
sahf
fdivl
and
and
repnz
enter
xor
out
nop
pop
dec
pop
fists
stc
jnp
dec
lods
fidivrl
aaa
push
cmp
dec
add
mov
gs
pop
loopne
adc
add
jl
jne
xchg
nop
sub
dec
xchg
in
scas
inc
mov
test
mov
inc
out
jp
stos
rclb
lds
jle
pop
mov
lahf
sahf
xor
mov
jae
lds
cli
rorl
ds
filds
cli
mov
data16
aas
dec
fbld
rclb
pop
icebp
jno
jmp
sbb
movsl
mov
fldt
je
xor
mov
dec
xchg
lret
adc
pop
inc
je
sub
add
jb
int3
mov
nop
es
dec
shlb
add
shrb
and
mov
arpl
lds
andb
pop
ja
cmp
insl
ja
ljmp
and
jnp
data16
rorb
add
scas
in
mov
and
or
aad
scas
cld
push
orb
imull
dec
jo
xchg
popf
stc
ljmp
repnz
test
push
das
mov
add
jp
sbb
out
xchg
jne
push
sahf
mov
push
loope
sarl
repnz
mov
ficomps
jg
mov
in
pop
pop
and
inc
fcoml
mov
loope
mov
int
mov
dec
xor
rcll
in
mov
test
iret
dec
aaa
jae
popa
call
cmp
adc
and
sub
sbb
daa
push
rolb
dec
pop
out
jns
sbb
js
xor
and
cmp
mov
lcall
addr16
pop
jne
xchg
xchg
movsl
pop
lret
mov
push
sub
adc
pop
ret
add
dec
loopne
push
push
xchg
iret
adc
push
stos
rorl
out
mov
divb
mov
pushf
sbbb
xor
lcall
jmp
xchg
mov
mov
aaa
push
xchg
xchg
lods
sbb
rcrb
andb
push
fucomip
fiaddl
inc
jne
shrl
mov
daa
mov
mov
rolb
aas
and
xlat
lods
lret
dec
test
das
adc
das
inc
pop
gs
clc
dec
xchg
xchg
les
jl
adc
loopne
icebp
movsl
xchg
sub
inc
mov
mov
xor
icebp
movsl
xchg
sbb
jmp
int
jo
mov
lahf
ret
inc
cmp
xor
adcb
pusha
lods
jo
das
les
inc
cld
int3
movsb
mov
dec
in
enter
daa
data16
call
mov
push
push
push
add
fstp
mov
or
js
sbb
jmp
stos
or
pushf
fsubl
cmc
lcall
inc
sbbb
mov
repz
mov
xor
push
mov
stos
xchg
jecxz
in
repnz
test
adc
jbe
dec
jecxz
mov
push
test
arpl
add
xor
mov
or
and
adcl
dec
sti
and
sbb
xchg
or
subb
sbb
mov
orb
or
pop
mov
mov
lret
jno
in
dec
pop
ret
fdivs
xchg
jbe
out
mov
gs
adcl
jb
dec
movsb
sti
pop
jb
imul
mov
ret
add
cmp
fwait
stos
hlt
mov
stos
mov
or
out
sub
sbb
or
fsubrl
or
pop
std
cmpsb
mov
lret
mov
sbb
cmp
ret
dec
adc
xor
xor
push
inc
fiadds
bound
jmp
sbb
cli
jge
inc
fs
jp
mov
pop
fbld
gs
mov
add
sub
lds
jbe
rcl
pop
or
mov
sub
gs
addr16
idivb
mov
imul
sbb
pop
rcrl
test
outsb
inc
arpl
std
mov
pop
aad
cmp
rep
mov
dec
aad
add
jle
xor
cmp
push
mov
into
cli
lds
mov
add
jp
movl
fiaddl
test
les
sub
xor
adc
mov
push
je
jnp
clc
jo
sbb
ja
cmp
pop
test
lret
into
mov
mov
shrb
mov
push
in
xchg
scas
mov
decb
xchg
xor
adc
add
xor
cmp
and
nop
data16
mov
test
fildll
pop
lahf
and
cld
pop
cmp
jb
mov
dec
jge
cmpsb
ljmp
adc
pop
mov
stos
mov
xchg
mov
pushl
xlat
mov
in
es
push
mov
les
enter
outsl
shl
fs
add
iret
xor
xor
adc
fcoms
cmp
sbb
pop
cmpsl
xchg
cmp
std
inc
sub
scas
sbb
mov
inc
cld
fsubl
mov
jp
mov
arpl
ret
adc
xlat
xor
aad
js
je
fnstenv
mov
push
cmp
push
call
cmp
in
xor
push
pusha
dec
ffree
inc
and
cld
sub
mov
xor
mov
sbb
mov
and
jge
xorl
fyl2x
pop
ljmp
jno
adc
dec
mov
cwtl
add
shlb
add
add
push
sahf
sbb
fidivs
dec
mov
cmp
push
fwait
ror
sar
sarl
jmp
cmp
sahf
push
lret
dec
or
pop
fbstp
cltd
cmpsl
pop
xchg
imul
lock
int
cld
fsts
repnz
pop
leave
mov
data16
jne
adc
xor
push
xor
fstl
pop
mov
arpl
loopne
hlt
lods
jae
jmp
ret
cmp
push
hlt
lea
icebp
lret
inc
ljmp
out
pop
and
cli
adc
or
in
jns
sbb
jae
push
adc
pop
cmp
or
into
fmulp
testl
pop
lods
leave
or
cli
xchg
sub
cwtl
data16
lret
xchg
mull
cmpsl
cmp
or
mov
or
popa
push
nop
shrb
stos
cmp
mov
mov
dec
mov
jae
sti
xchg
cmp
mov
int3
lea
andl
xchg
out
adc
xor
in
jns
pop
ret
ret
jns
xor
daa
ja
xor
je
push
cmp
addr16
push
out
mov
imul
jp
pushf
in
addb
je
sbb
sahf
inc
in
push
sahf
sbb
dec
popf
sbb
lock
sbb
inc
mov
pushf
hlt
xchg
mov
fs
sub
mov
cs
test
sbb
lods
fdivl
jg
cmp
lahf
sbb
sti
pop
or
jns
and
vpsubw
andb
outsl
jbe
ret
aad
call
test
ret
dec
add
cmp
aad
scas
xchg
gs
sub
push
lds
testb
addb
jg
mov
outsl
fs
pusha
lds
ss
xor
inc
inc
loop
nop
ret
test
fildll
push
mov
ss
mov
stos
or
xor
inc
mov
outsl
outsl
mov
mov
xor
aam
test
popa
inc
mov
or
ljmp
push
leave
pusha
xchg
push
and
adc
inc
xchg
adc
adc
lods
push
cmc
jno
mov
cwtl
icebp
mov
pop
stos
mov
popf
dec
and
dec
in
imul
repnz
or
xchg
fldenv
mov
push
popa
cmp
arpl
lea
cld
pop
pop
mov
aas
jle
inc
enter
sbb
mov
dec
pop
inc
ficomps
adcb
push
fnstenv
shlb
popf
loopne
cmp
clc
mov
jle
bound
and
mov
out
out
insb
add
jne
out
fsub
aaa
or
and
jno
mov
call
sar
xor
das
mov
aas
mov
dec
movsl
xchg
lods
call
aas
out
jle
xlat
push
shrb
fbld
or
mov
mov
push
mov
in
xchg
pushf
mov
mov
cmp
pop
daa
aas
xor
fcomp
test
sti
int
outsb
js
jmp
bound
or
mov
insl
filds
pop
dec
mov
data16
ljmp
fnstsw
lret
ljmp
mov
and
push
cli
pushf
xchg
clc
imul
jo
test
imull
or
xor
add
addr16
cs
mov
mov
outsl
fdivl
add
lods
nop
scas
push
push
dec
iret
mov
add
mov
xchg
cs
inc
cmp
sbb
cs
sub
mov
bound
cwtl
push
je
scas
stc
cmp
inc
ss
imul
jne
test
in
lret
mov
popf
imul
jo
sub
insb
sub
adc
dec
in
push
push
out
sbb
inc
out
ret
fwait
xor
fistps
add
repz
outsl
xchg
fidivrs
pop
jg
fbld
into
adc
out
mov
dec
rep
enter
rol
out
or
popf
xor
sub
push
stc
imul
sahf
xor
cmp
sahf
mov
and
jp
mov
sti
mov
pop
ljmp
shr
andl
call
ret
lcall
outsb
loope
cmpsl
mov
lcall
jne
icebp
push
out
mov
ljmp
imul
lods
jmp
and
pusha
sub
mov
xchg
mulb
loopne
mov
pushl
jb
jge
xchg
rclb
in
sbb
lret
mov
pop
out
mov
lahf
jo
int
in
jns
push
in
in
inc
xchg
push
pop
jecxz
repz
jp
pop
loopne
icebp
mov
push
push
cwtl
xchg
imul
jne
insl
push
lock
push
adc
cmpsl
dec
inc
loop
jbe
fildll
sub
xchg
cmpsl
jnp
movsb
arpl
xor
jbe
adc
cmp
popf
push
cmp
stos
inc
and
std
xor
jmp
pop
xchg
fmuls
out
mov
jmp
js
ja
jmp
pmaddwd
adc
cmpsb
push
add
pop
adcl
aam
aad
inc
and
dec
les
sarl
push
mov
test
adc
mov
inc
fsts
loope
jae
fcompp
sahf
dec
mov
sub
das
lds
xor
push
pop
lret
std
bound
pop
pop
push
or
jl
xchg
fcoms
inc
ja
jae
xor
jecxz
or
inc
add
arpl
xor
push
testb
jo
loop
and
add
push
dec
test
movsb
pop
pusha
into
lods
mov
mov
sub
mov
lea
xchg
scas
ljmp
fsubrp
in
fdivp
fstp
lock
push
arpl
leave
inc
xchg
adc
loop
jl
fisubrl
je
jnp
mov
sbbb
nop
push
mov
push
addb
incl
adc
sti
pop
out
jns
cltd
aad
add
rcrl
insb
cmpsl
ds
and
addr16
ljmp
ss
jecxz
fidivrs
adc
jno
cwtl
insl
and
jae
add
sti
pop
es
leave
das
inc
cmc
xchg
xchg
in
sub
jmp
sbb
or
dec
arpl
fcoms
xchg
ljmp
and
adc
adc
into
loopne
notl
insl
add
gs
push
loop
add
xor
cs
lcall
and
shlb
mov
push
inc
stos
test
inc
mov
lds
cmp
cmc
cld
mov
jb
mov
stc
sahf
sbb
pop
mov
in
bound
lds
mov
aas
rorb
mov
pusha
lahf
mov
out
inc
cmp
pop
xchg
int
lret
imulb
sub
call
push
mov
add
dec
push
inc
repnz
cs
aas
add
fwait
cmpsl
mov
jnp
sub
js
or
cmp
adcb
lds
nop
sub
stos
mov
ret
pop
fucomp
andl
mov
enter
mov
orb
fwait
es
test
out
repnz
pop
mov
dec
cmp
sub
addr16
add
bound
scas
repz
or
fbld
xlat
and
xor
popa
ss
jle
mov
adc
mov
jp
push
mov
cmp
in
push
jmp
mov
fs
test
adc
jbe
dec
sbb
sahf
scas
adc
add
mov
notb
mov
sub
lock
adc
outsb
mov
stc
ret
sub
stc
popf
out
pushf
xchg
xor
jmp
mov
mov
cmpsb
loop
cwtl
cmpsb
lret
jae
in
xchg
rcrb
cmp
add
pop
fsts
sbb
fldenv
lcall
rcrl
sarb
imul
inc
es
ret
push
inc
lods
loope
sbb
xchg
push
sub
mov
aam
pop
dec
inc
sbb
aas
dec
fistpl
stos
in
subb
push
arpl
lods
icebp
mov
mov
mov
leave
mov
xor
lods
xor
inc
sbb
mov
stos
loope
xlat
cmpsl
or
lret
ret
scas
sbbl
insl
or
repnz
dec
and
mov
fdivl
out
jl
pop
sbb
sahf
lea
mov
repnz
sbb
incb
jmp
adc
dec
inc
dec
notl
lods
mov
mov
icebp
mov
inc
fimuls
repz
mov
lea
push
in
rol
pop
add
shlb
dec
insl
mov
add
xchg
xor
and
jne
notrack
dec
outsl
shl
cld
xchg
add
aas
mov
inc
jmp
jp
xor
int3
fwait
in
and
leave
mov
xor
lret
jg
in
adc
jle
arpl
lret
push
pop
adc
int
addl
sub
xor
mov
adc
sahf
addr16
pushf
mov
stos
jbe
lds
xor
loopne
test
ljmp
lds
nop
xor
jp
lret
mov
in
paddsw
jne
lods
mov
xchg
jmp
pop
cli
stc
mov
mov
rclb
leave
mov
mov
cmp
popa
xor
icebp
repnz
pop
xor
push
add
fbld
js
add
sbb
push
push
fsubr
adc
mov
popa
xor
repz
iret
xchg
cmpsl
add
mov
out
cmp
adc
repnz
cmp
sub
cli
lcall
pop
es
lcall
inc
repz
pop
inc
or
push
jl
cmp
mov
les
ja
mov
lahf
cmp
leave
dec
add
mov
and
je
sti
pop
arpl
push
sbb
inc
mov
push
mov
rol
bnd
mov
inc
jmp
out
inc
arpl
ds
xchg
xor
subl
pop
lret
std
loope
test
push
mov
icebp
aaa
mov
dec
pop
adc
out
push
sbb
les
jae
adc
sub
add
jne
jno
jl
sub
loop
or
lods
pop
daa
mov
repz
lock
sti
aad
add
negl
push
dec
jge
fnstenv
mov
mov
pop
xor
adc
sub
mov
inc
outsb
stc
je
jmp
dec
xor
in
inc
pop
cli
inc
aam
mov
mov
fildl
mov
mov
fcomps
mov
and
mov
repnz
cld
fists
xor
outsl
in
ret
es
pop
mov
enter
add
adc
jp
dec
pop
movsb
call
dec
outsl
add
cmp
clc
mov
push
lret
jne
aad
int
cld
imul
sub
jmp
sub
out
loop
dec
add
sub
add
mov
add
dec
dec
cmp
popf
jo
jno
adc
adc
leave
popa
sub
idivl
mov
mov
imul
mov
push
negl
flds
mull
lock
mov
jns
or
or
inc
jne
jle
cmp
adc
cmp
inc
shll
add
sarb
cmp
add
hlt
add
xchg
xchg
push
push
into
xor
cmp
shl
mov
pop
pop
sahf
cmp
push
flds
mov
test
push
das
arpl
jl
or
stos
test
shl
or
dec
or
insl
in
lahf
leave
popa
lock
add
dec
mov
into
push
sti
sbb
xor
jmp
fnstsw
movsb
xor
xchg
outsb
lahf
pop
push
or
jle
in
pusha
pop
test
in
mov
mov
shrb
in
mov
add
es
and
bound
sbb
jnp
mov
xchg
repnz
rcrl
icebp
out
aam
adc
inc
inc
sahf
in
sub
sbb
mulb
sbb
out
icebp
stos
jns
in
xor
jmp
push
lods
mov
lods
adc
sub
fisttpl
xchg
test
mov
sub
xchg
daa
or
pop
popf
jg
ror
jno
outsb
mov
test
mov
xlat
clc
sysret
ret
in
sub
xchg
cmc
call
dec
sbb
sbb
cmp
xchg
fnclex
orl
mov
push
and
mov
enter
movsl
push
cwtl
cwtl
pop
ljmp
jns
lret
xor
inc
scas
sbb
inc
imul
mov
sub
jl
sbbb
xchg
add
in
mov
and
push
xor
data16
icebp
sbb
push
jbe
leave
sahf
lods
insb
movups
add
movsb
hlt
pop
sahf
xor
js
inc
ret
inc
sub
dec
dec
inc
push
fnstenv
insl
adc
jge
dec
and
fidivl
pusha
inc
call
dec
and
repnz
sub
rorl
loope
jle
into
enter
push
mov
fwait
ss
cmp
cli
test
out
xor
push
inc
and
shlb
push
pop
cwtl
dec
mov
and
loop
fldcw
sbb
imul
adcb
push
sbb
test
daa
push
nop
jp
sti
insb
mov
rorb
mov
pop
fcmovb
filds
sub
push
dec
pop
and
cmpsb
push
mov
mov
pop
jno
xor
js
pushf
or
pop
xchg
scas
roll
loopne
sub
inc
enter
popa
fimuls
addr16
es
insl
add
mov
das
cmp
adc
mov
xchg
pop
clc
cltd
ja
dec
xchg
inc
imul
cmp
jp
pop
jle
sarb
shlb
push
movsb
dec
fcmovbe
test
lret
flds
adc
xlat
jno
and
test
scas
inc
jle
into
enter
dec
iretw
mov
aad
xor
sub
or
cmp
and
aam
sbb
pop
inc
insb
aam
outsl
xchg
mov
jl
int3
test
call
sub
es
popf
lret
inc
clc
and
sbbb
sar
push
push
lahf
mov
mov
sub
adc
mov
pusha
outsb
std
cmp
xor
pop
xor
xchg
jnp
imul
sti
inc
cwtl
cmc
jno
outsb
jo
xchg
jge
ret
adc
cmp
cmc
or
sub
dec
scas
push
dec
jbe
inc
jp,pn
mov
out
jae
rcrl
inc
iret
mov
sbb
es
push
push
jo
es
icebp
pusha
clc
loop
pushf
add
scas
jae
and
dec
xchg
xchg
push
dec
aam
ljmp
or
mov
test
enter
lahf
sub
jp
daa
arpl
leave
xlat
in
loope
push
repz
shr
in
cld
enter
xchg
fldcw
imul
je
or
mov
cwtl
test
and
jns
cmp
mov
and
fnsave
clc
or
lret
and
shl
pop
lret
xchg
mov
pop
cmp
inc
dec
into
mov
pop
cmp
insl
nop
sub
or
xor
in
pushf
dec
pop
hlt
ds
pusha
jecxz
out
cmc
sbb
mov
cli
pop
pop
jmp
fimull
adc
dec
iret
adc
pop
add
adc
leave
and
test
lods
out
push
movsl
push
into
in
daa
stos
cld
pop
xchg
push
mov
add
inc
mov
push
mov
leave
lock
test
cmp
xchg
sbb
jp
es
movb
movsb
xchg
sahf
insl
loopne
sbb
mov
in
hlt
cmp
cmp
xlat
test
sbb
adc
enter
adc
mov
dec
adc
outsb
xchg
divl
int
inc
sbb
jecxz
les
mov
data16
inc
std
or
jns
outsl
popf
and
hlt
imul
mov
fadd
mov
sbb
sbbb
lret
shll
cmp
dec
sbb
sub
hlt
cmp
hlt
sarb
pop
repz
jp
jecxz
jp
xchg
jns
jg
sub
les
clc
mov
aaa
in
das
pop
pop
lea
mov
decl
mov
sbb
inc
adc
jbe
je
xchg
fwait
stos
push
adc
push
jbe
jecxz
daa
adc
xor
lds
sbb
rol
mov
scas
ss
push
mov
dec
bound
pop
movsl
les
and
push
pop
lods
jo
lea
mov
popa
cld
rcl
fldl
cmp
xchg
inc
pop
add
in
dec
lcall
lods
sahf
mov
sub
cmp
lods
sub
push
push
dec
mov
je
mulb
outsl
jge
mov
add
dec
mov
or
je
mov
mov
es
outsb
mov
or
jp
cmp
adc
xor
fildll
pop
lahf
pop
sbb
and
lock
cmpsl
add
cwtl
push
loope
xor
movsb
add
inc
lock
fisubs
sbb
movsb
inc
add
xor
pushf
mov
sub
sbb
pop
hlt
stos
leave
cmpsb
mov
test
xchg
gs
jbe
or
mov
xchg
push
lahf
xor
mov
jl
and
aam
adc
mov
std
cmp
dec
stos
repz
test
mov
dec
xchg
fsubr
notl
cld
xor
and
pop
testl
mov
pop
dec
or
fsubl
fldt
jge
popa
sbb
fwait
adc
adc
cmp
xlat
cmp
adc
mov
jmp
cmp
pusha
pop
inc
loope
add
out
push
stc
aas
mov
pop
or
add
inc
pop
cs
pop
fidivrs
push
call
fldcw
stc
movsl
inc
loopne
push
mov
add
jno
sbb
xorl
dec
and
punpckhdq
mov
out
sbb
popf
cmp
imul
mov
pop
mov
push
xchg
mov
scas
cltd
xor
push
jg
or
mov
jo
xlat
xchg
mov
scas
jge
aam
flds
nop
or
movsl
lds
mull
cmp
test
jp
shll
lock
imul
rolb
mov
test
js
out
jno
ret
sbb
js
ficoml
or
fs
in
mov
int3
outsl
mov
jmp
stc
inc
mov
js
push
fisubrl
dec
sub
roll
rorb
lret
psrad
rorw
jp
aaa
mov
stc
pop
imul
loop
int3
cmp
dec
lahf
rolb
loopne
in
add
and
cmp
in
adc
xchg
and
fwait
push
in
inc
aaa
test
mov
xor
sbbb
lods
in
loopne
cwtl
int
test
push
lret
outsl
cmpsl
fildl
cltd
mov
jp
int3
xor
sbb
mov
leave
test
xlat
out
xchg
vsubpd
add
mov
mov
dec
sarl
push
gs
pop
shrb
aam
imul
je
push
in
xchg
scas
aaa
enter
fcoms
or
xor
int
not
popf
std
and
cld
pushf
jbe
into
sbb
pop
cmp
mov
or
jp
push
out
add
adcl
pop
sbb
mov
sbb
sub
jle
lret
sti
adc
mov
jmp
mov
mov
xchg
and
xchg
and
sbb
or
mov
jno
stos
stos
je
sub
add
shl
sub
adc
sub
es
xrelease
outsl
mov
jl
inc
cmp
lea
out
cmp
mov
jg
and
pop
nop
aad
aas
push
idivb
pop
dec
jecxz
cmp
adc
push
cmp
dec
sub
leave
push
mov
bound
shll
sahf
fcmovu
test
mov
jp
nop
pop
jno
xchg
loope
mov
push
mov
mov
aad
popf
ss
xchg
xchg
jg
bnd
mov
mov
jbe
movsb
std
mov
loop
mov
stc
push
or
mov
xchg
xchg
inc
std
jo
les
sbb
mov
jbe
daa
gs
or
std
xchg
cmc
stos
aas
add
insl
mov
clc
popl
sub
inc
es
jp
adc
push
mov
mul
cmp
lcall
fisttpll
adcb
fstpt
pop
test
call
push
xchg
enter
lea
sbb
shl
call
lds
adc
hlt
xchg
or
pop
mov
rolb
out
mov
xchg
orb
and
in
and
mov
push
idivl
into
jb
add
mov
cmp
or
dec
and
aad
push
inc
test
sub
int3
and
cmp
dec
aad
mov
adc
hlt
pop
fbld
push
jl
pop
movsl
js
mov
pusha
push
or
add
fwait
in
test
in
mov
je
imul
loopne
lods
addr16
xor
or
adc
mov
or
fisubs
push
push
xor
mov
pusha
and
jnp
imul
lahf
sub
sub
hlt
lcall
rorl
stc
adc
stos
jmp
lret
cmp
fwait
sti
sbb
cmc
fwait
data16
xlat
lret
jae
es
push
xchg
pop
cmpsl
movsb
aaa
incl
out
push
fdivrs
stc
ffreep
xor
push
addl
xchg
ret
lret
call
in
sub
xchg
fmuls
jmp
pop
sbb
jp
cmp
mov
mov
test
sar
enter
fsubrl
push
and
mov
pop
or
leave
pop
ret
cwtl
stos
daa
subl
lods
xchg
out
nop
pop
ret
imulb
aam
add
mov
mov
mov
push
lds
ret
shll
daa
imul
mov
arpl
dec
xlat
push
pop
pop
cld
test
inc
push
add
jg
cmp
out
xor
cwtl
and
or
stc
popf
and
notb
xchg
outsl
leave
jae
outsb
test
xchg
mov
sub
aad
and
or
mov
pop
inc
pop
mov
mov
and
push
pop
add
inc
push
mov
rol
jmp
sub
inc
or
mov
cmp
inc
lods
dec
pop
push
jg
aas
orb
xlat
xor
dec
scas
inc
int
ljmp
pop
enter
shll
repz
lret
xchg
push
fsubp
inc
int3
pop
inc
loop
fmulp
pop
push
andl
daa
mov
int
lock
les
insb
xor
xchg
dec
pop
scas
jle
cmp
mov
xchg
sbb
aam
cld
adc
pop
stos
xor
addl
or
jae
scas
idivb
mov
jmp
test
sbb
inc
repnz
and
mov
js
cmc
out
imul
cmp
cmovns
or
movsl
pop
push
rorb
xchg
xor
or
int
ret
adc
mov
or
icebp
je
push
fidivrs
push
add
ljmp
ss
clc
jae
stos
js
fmul
decb
stos
ja
in
pop
add
pop
adc
push
cmp
xchg
and
and
test
mov
jle
sbb
xor
out
jmp
pop
mov
lahf
ss
adc
xchg
xchg
stos
popf
scas
and
inc
cmp
ficomps
lret
mov
sub
cmp
test
lods
jg
adc
call
mov
adc
test
xchg
idivb
les
push
fwait
mov
rorb
stos
ja
mov
mov
sub
addr16
dec
mov
add
mov
icebp
mov
ret
pxor
shl
imul
stos
lods
ljmp
pushf
das
push
push
lea
lods
adc
cs
in
or
test
pop
in
mov
mul
inc
mov
js
pop
sahf
inc
dec
add
cmpsl
sahf
jno
mov
jnp
jmp
jno
cmpsb
lret
repz
pop
ret
mov
ror
pop
mov
fwait
arpl
and
les
sub
xor
xor
dec
aam
push
outsl
faddp
sub
pop
jl
xchg
cmp
jle
in
sub
inc
sub
repz
dec
mov
addr16
and
sarb
push
hlt
dec
pop
xlat
and
jle
mov
jge
repz
ds
xor
loope
je
sbb
mov
sub
sbb
in
loope
and
iret
ds
shlb
sbb
fsubl
enter
nop
mov
dec
jge
fstpl
sub
add
xorl
mov
movsl
sarb
pop
sub
rorb
les
cmpsl
and
jge
dec
pop
or
cmp
push
cmc
aaa
adc
stc
push
enter
addr16
pusha
inc
out
cltd
xor
gs
sub
icebp
mov
sub
scas
aam
cwtl
pop
and
arpl
leave
cmc
mov
lea
push
out
int
sbb
nop
cmc
jne
es
popf
enter
xchg
cld
adc
hlt
jbe
sub
xchg
add
sub
lret
fildll
loopne
cmp
int
pop
adc
adc
mov
outsb
adc
rcrb
add
dec
lds
add
dec
stc
pop
int
notl
adc
out
in
fwait
je
adc
push
lea
add
pop
lods
in
adcl
call
shlb
icebp
mov
out
sti
fwait
cmp
jne
imul
and
cwtl
frstor
lret
jae
out
sbb
sub
out
pop
iret
int3
popa
pop
and
scas
je
inc
xlat
xchg
xchg
call
mov
sub
inc
pop
out
call
xchg
ss
inc
xchg
popa
fcomps
mov
popa
iret
cmpsb
adc
pop
pop
lcall
cli
lods
jge
xor
dec
test
movsb
icebp
aad
push
xchg
adc
testb
icebp
movsl
mov
fs
ljmp
pop
sub
inc
outsl
jns
mov
lcall
in
das
pop
jp
add
mov
shrl
in
mov
pop
mov
pop
fdivs
sar
pop
push
inc
push
out
push
push
xchg
mov
cmpsb
in
mov
mov
ljmp
rcr
aam
mov
mov
test
nop
push
sub
pushf
cli
jle
jnp
jno
pop
int3
out
mov
out
mov
fwait
xor
ljmp
outsb
mov
in
sbb
mov
pop
jge
push
sub
push
inc
test
ja
mov
xor
test
push
pusha
sbbl
stos
mov
mov
loop
mov
or
cld
mov
xor
fucomip
dec
adc
jb
xor
ret
xor
hlt
mov
and
out
lods
ljmp
out
daa
in
pop
xor
es
rcrl
cli
cs
dec
sub
jge
pop
insl
sbb
or
ds
loope
cli
jg
scas
test
in
push
es
jge
and
in
loope
jns
sub
cmpsl
in
testb
push
add
sbb
insb
rol
adc
and
and
cmp
int3
mov
les
adc
mov
lret
dec
mov
mov
push
pusha
addb
cmc
mov
lock
imul
or
std
into
or
lret
add
fadd
mov
xchg
cmp
fwait
mov
xor
stos
jne
sbb
add
push
nop
adc
push
mov
imul
push
push
rol
and
loope
xor
cmpsb
sahf
lods
sub
push
inc
xchg
loope
rclb
push
and
add
adc
das
cmp
call
inc
or
dec
xchg
push
dec
or
int
and
in
subb
sahf
fcmovnb
fstl
and
lods
push
adc
xor
rcll
insb
cmp
push
cmc
mov
sub
dec
mov
pop
lods
xor
jbe
cmp
mov
aas
xor
pop
sub
cmpb
xchg
insl
jg
mov
inc
pop
fdivrs
push
sub
aaa
or
lea
out
xchg
test
xor
push
fcoml
mov
xor
cmp
testb
inc
fwait
dec
mov
pusha
push
jno
mov
cmp
fistl
out
jmp
xchg
test
cmp
lock
and
push
mov
mov
pushf
inc
pop
out
incb
or
or
xchg
cmpsb
leave
scas
add
out
das
jb
pusha
cwtl
jnp
xchg
sub
push
insb
sarl
push
pusha
xchg
in
cmc
xor
jnp
jg
stos
jne
sbb
lea
lods
test
push
sti
lea
into
mov
daa
sahf
adc
into
call
push
ror
mov
or
and
dec
test
popa
dec
shr
cmp
inc
cld
cmpsb
mov
push
cs
pop
xor
sbb
in
xor
push
dec
hlt
sub
jnp
stc
shll
adc
lcall
jmp
cwtl
sbb
push
fsubrl
lcall
mov
xor
nop
test
add
mov
xor
mov
js
xor
push
adc
fldt
outsb
mov
dec
bound
cli
xchg
inc
or
das
inc
repz
mov
ljmp
jno
adc
fwait
and
in
push
xchg
addl
fbstp
dec
sbb
cli
xchg
adc
pop
mov
xor
push
mov
popl
mov
sbb
sbb
push
jo
sbb
mov
sub
repz
gs
sbb
pop
scas
ss
dec
adcb
lcall
adc
aam
sbb
cmpsb
mov
jb
xchg
sub
mov
clc
lret
mov
int3
adc
sbb
or
jb
pop
pop
ret
inc
fistpll
aam
pop
cmp
add
shrl
lds
filds
int3
insl
mov
stos
mov
std
sbb
iret
mov
stos
jne
add
add
std
mov
in
push
lods
sarb
push
lcall
xchg
jp
into
stos
std
cmpsb
icebp
adc
stos
movsb
dec
jae
out
jmp
dec
pop
push
imul
scas
mov
sbb
inc
or
pop
push
or
push
or
adc
push
out
or
aam
fcom
xchg
jge
out
push
stos
mov
gs
add
push
sarl
and
pushf
sub
cmpsb
adc
daa
sbb
pop
ljmp
stos
cmp
shll
or
jno
test
sbb
dec
cmpsl
sbb
dec
dec
add
ds
cmp
push
fs
pop
push
jmp
mov
in
mov
cmp
dec
add
pop
rcrl
adc
add
ficompl
mov
pop
and
loope
jp
xchg
jns
pop
aaa
jnp
push
test
push
das
xor
pop
jo
xchg
out
stos
aaa
arpl
and
fsub
mov
cmp
xchg
je
out
popf
les
ja
and
insb
out
popa
jno
aam
popf
lods
mov
popa
cmp
incl
loopne
cld
fst
sahf
xor
push
inc
inc
icebp
xchg
and
xchg
pop
ja
xchg
test
lret
push
jnp
xchg
lods
jbe
shll
int3
mov
shl
and
fcoml
jle
jno
jbe
xor
push
mov
cs
stc
call
dec
in
aaa
test
jne
shrl
xchg
into
cmp
icebp
xor
mov
pusha
add
out
leave
pop
shrl
fs
fs
xor
int3
and
ret
fisttpll
mov
into
jno
adc
rcrb
mov
push
stc
jo
mov
rcll
jg
xchg
leave
xor
cmc
std
push
fyl2x
subl
add
das
mov
nop
xchg
jnp
jge
imul
sbb
inc
cld
fmul
sub
addr16
fdivrp
pop
pushf
jmp
cld
adcl
add
shll
movsl
push
dec
cltd
out
lret
sub
cmp
mov
imul
xor
enter
push
inc
sub
adc
adc
jl
aad
cmpsb
xchg
repnz
repz
mov
mov
sub
inc
dec
push
and
loope
push
mov
dec
dec
mov
lea
xlat
pusha
xor
repnz
dec
xor
leave
dec
push
dec
incl
dec
rcrl
jle
sbb
pop
je
cmp
sub
inc
inc
xlat
popf
insl
xor
sahf
mov
in
fcompl
int3
sbb
bound
stc
out
dec
loopne
push
sbb
and
adc
daa
add
cmpsb
int
xchg
repnz
inc
add
test
push
sahf
fwait
data16
xor
comiss
push
add
lods
and
jbe
int
clc
ja
and
adc
les
mulb
scas
imul
push
pop
add
lret
mov
imul
xchg
mov
add
shll
jb
mov
cs
enter
push
out
subb
cld
xor
or
in
inc
mov
adc
push
push
in
dec
cmp
mov
data16
xchg
mov
test
xchg
add
jnp
and
popf
or
mov
popf
lock
repnz
mov
pop
inc
pusha
jnp
repz
lahf
imull
and
mov
pop
fwait
mov
cmp
xchg
adc
xor
add
sarb
push
mov
les
in
cmp
stos
sarb
cld
pop
je
aaa
adc
xchg
pop
push
pop
fmulp
mov
jne
outsb
adc
xlat
jecxz
test
push
sbb
pop
sbb
mov
pop
adc
orl
fistps
jmp
xor
stc
and
mov
imul
mov
adc
cmp
lods
aam
pushf
neg
dec
fldenv
into
nop
xor
jb
add
push
popf
mov
mov
or
jnp
shll
or
jne
cs
cmp
and
or
loopne
push
nop
push
fisttpl
jecxz
iret
das
movb
cld
xchg
loop
lret
dec
mov
mov
aad
pop
xchg
std
gs
push
popf
mov
das
sub
sbb
popf
jle
jno
lahf
and
es
scas
push
cmpsl
jae
ja
out
xchg
adc
jnp
repnz
sub
jbe
sbb
xchg
dec
std
icebp
test
adc
inc
shl
xchg
aad
adc
jle
insb
js
arpl
mov
mov
sbb
ljmp
xchg
out
adc
sub
loope
outsb
shrl
or
roll
mov
dec
jl
push
iret
data16
xchg
je
in
test
cwtl
inc
sbb
xchg
sub
loope
daa
stc
nop
dec
leave
sbbl
jnp
fadds
xchg
xorb
fwait
imul
lret
mov
sarl
mov
loopne
mov
negl
and
shrl
jg
mov
ret
lret
hlt
mov
sarl
add
inc
cmc
movsl
inc
inc
pop
cmp
loop
push
in
lods
aad
mov
fmulp
jecxz
push
notl
xor
int3
sbb
lock
inc
inc
mov
hlt
ljmp
pusha
imul
sub
lods
jmp
ret
negl
sub
adc
adc
jg
daa
mov
jnp
xchg
mov
adc
xor
fcomip
dec
fdivs
mov
adc
push
add
pop
mov
sti
sbb
jg
pop
popf
leave
inc
xchg
scas
inc
sub
push
in
xor
sbb
js
sub
scas
mov
xor
push
in
xor
adc
jns
imul
inc
sub
mov
jno
push
push
clc
insl
pop
clc
inc
mov
lret
cld
jp
popf
and
inc
out
ret
sbb
xchg
push
pop
gs
sbb
icebp
mov
sub
sbb
inc
xchg
mov
js
lcall
jmp
xchg
std
mov
idivl
cmpsl
sahf
cld
inc
lcall
mov
mov
iret
mov
xor
add
ss
xor
repnz
insb
ljmp
in
ss
mov
cmp
dec
push
repz
sbb
std
rclb
mov
inc
mov
daa
jne
lods
push
mov
pop
jmp
fistpl
jno
insb
stos
push
or
jle
inc
sub
sbb
je
jle
mov
add
dec
movsb
mov
stos
inc
test
mov
repnz
add
lcall
pop
ljmp
jnp
jne
fwait
mov
pop
call
fsubr
test
xor
jle
xchg
inc
movsl
inc
inc
cmp
add
xchg
jae
inc
jl
pop
jecxz
shrl
adc
lds
das
sbb
cmp
aaa
data16
in
cmpsb
scas
mov
stc
repz
xlat
pop
pop
mov
mov
inc
xchg
cmpsl
xlat
xchg
sub
enter
sbb
dec
outsl
push
negl
xchg
mov
lock
push
lahf
inc
jb
lahf
mov
insb
iret
cmpsb
sbb
pop
cmp
mov
mov
sbb
mov
mov
xor
aam
rol
inc
jno
sub
add
aam
jb
adc
jp
cmpsl
js
pushf
or
lea
outsl
insl
jge
inc
adc
cli
lret
cld
sbb
pop
idivb
jge
jbe
nop
mov
xchg
inc
lods
ret
mov
xor
mov
in
cwtl
das
and
add
jbe
fldenv
stos
xchg
in
dec
fnstenv
mov
xchg
mov
das
subl
outsb
ja
pop
mov
cmp
inc
inc
mov
ja
cltd
lock
and
call
cmc
shll
add
lock
rclb
or
stos
mov
les
lds
montmul
cmpsb
inc
sub
ud2
out
ja
xlat
xor
pop
ja
and
cli
push
push
repnz
sbb
xor
mov
icebp
mov
xor
mov
mov
xchg
and
hlt
addr16
cmp
jl
je
filds
test
fistl
in
stos
xor
sbb
push
cmp
imul
cli
jne
aaa
ljmp
dec
mov
ja
cli
rcrl
pop
cmp
dec
sub
pop
fdivrp
sahf
push
push
ret
push
inc
pushf
xchg
test
sarl
pushf
xor
jbe
pushf
sbb
mov
mov
jmp
daa
jbe
jo
xchg
cmp
dec
sub
pusha
sub
cmp
and
push
and
enter
shrl
lahf
cmpsb
mov
outsb
icebp
dec
sub
hlt
iret
mov
sbb
mov
ret
stos
xchg
jnp
jno
out
loop
je
rolb
pop
or
aad
xlat
repz
aam
int3
imul
push
jne
ds
fnsetpm(287
orb
mov
stos
in
sub
jmp
or
cmpsl
mov
nop
push
daa
mov
dec
addb
or
adc
scas
call
cmc
dec
sti
lret
xor
adc
inc
test
cmp
or
loopne
outsb
aas
dec
pop
sbb
out
and
ljmp
jmp
and
fcomps
in
dec
rcll
hlt
xlat
mov
push
pop
iret
pop
out
or
movsb
js
sub
lfs
lret
push
cmpsb
fldt
fdivl
adc
sti
xchg
cmp
lods
das
mov
lock
out
das
inc
inc
push
pop
ss
mov
inc
cmp
cmp
sbb
sbb
sub
scas
fldcw
mov
pop
inc
pushf
or
jae
inc
mov
sbb
mov
das
cmp
mov
sub
insl
xchg
jle
push
mov
lahf
ss
ret
jp
lock
adc
bound
dec
arpl
or
push
adc
xor
xor
inc
mov
repz
dec
out
pushf
xor
cmp
cmc
nop
jge
pushf
xchg
mov
xor
push
jmp
mov
arpl
and
stc
in
fs
adc
test
orl
dec
and
scas
fildll
das
rcll
cmp
lods
inc
xor
outsb
inc
dec
and
pop
and
mov
jmp
add
out
mov
pop
mov
add
fsubr
loopne
aaa
pop
sub
mov
add
adc
adc
adc
inc
mov
jae
push
and
cmp
pop
mov
arpl
sbb
jae
cmp
ja
inc
add
inc
xlat
ret
inc
push
push
sub
mov
insb
aaa
sub
subl
push
incl
jp
and
ret
mov
loopne
enter
mov
call
adc
xchg
or
dec
xchg
pop
clc
xchg
ss
jbe
ss
imul
rcll
inc
sbb
loope
cli
aam
fisubrl
add
push
mov
ljmp
pop
or
push
adcl
xchg
mov
xor
into
mov
pop
or
push
das
call
mov
xchg
xor
jp
insl
int3
gs
lods
inc
and
in
dec
dec
int3
lahf
ljmp
scas
xchg
and
cmpsl
ret
dec
xchg
dec
inc
or
ret
sbb
ss
mov
les
lret
cmpsb
ret
pop
fs
imul
outsb
jmp
std
cltd
stos
xor
lcall
subb
fisubl
add
or
sub
loope
cmc
mov
movsb
cmp
push
icebp
jl
jle
xchg
fidivrs
rcr
push
testl
jmp
xchg
jno
testb
std
leave
insl
sti
push
shll
sub
add
and
cmc
movntq
clc
cmp
les
lret
dec
dec
addr16
mov
push
popa
push
gs
sbb
dec
push
xchg
xchg
pop
addl
cmpsb
loop
sub
test
pop
repz
aas
inc
sbb
mov
cli
mov
dec
jnp
imul
scas
sti
xchg
xor
xchg
ja
aam
add
inc
cmp
movsl
in
loope
or
aaa
push
fdivs
and
dec
lcall
int3
mov
mov
sbb
call
je
and
rcll
test
ficompl
call
int
sub
ljmp
push
lret
orl
jp
mov
push
dec
dec
cmp
out
cmp
insl
sub
fldt
xchg
sbb
mov
jae
jno
pop
xchg
mov
inc
es
cmp
xchg
ficompl
in
cmpsl
dec
adc
ljmp
inc
mov
in
xlat
jbe
push
clc
or
push
lods
pop
mov
xor
and
imul
mov
dec
push
lret
cmp
bound
xor
leave
je
jns
out
mov
adc
orl
jle
pop
scas
push
push
add
ja
mov
out
and
add
jmp
cmpsb
outsb
pop
cmpsb
outsb
xchg
pop
sti
xchg
aad
popf
xchg
in
dec
mov
rcrb
pushf
xor
pop
adc
push
push
fisubrl
aas
shl
cld
sbb
ret
stos
push
out
sbb
loope
or
movsb
popf
push
xchg
and
jg
jg
repz
mov
mov
xchg
fisubs
dec
mov
push
dec
mov
sub
test
add
xor
loopne
cmp
xchg
mov
jne
ret
dec
sbb
sarl
mov
ffreep
dec
mov
outsl
ss
mov
out
loopne
movsb
dec
std
inc
icebp
lahf
icebp
push
ret
pop
dec
push
and
mov
stos
je
push
subb
aas
add
xor
inc
pop
mov
in
and
xchg
mov
mov
push
inc
adc
xor
arpl
mov
icebp
shlb
cmp
sub
pop
push
sbbb
mov
out
mov
fnstenv
fcompl
cld
lea
nop
popf
scas
jnp
mov
insb
int
mov
lahf
sub
sarb
push
cmp
mov
fcmovne
lahf
mov
sub
js
bound
ja
out
mov
fisttpll
mov
push
mov
or
and
lock
mov
aaa
and
or
cmp
mov
fcomps
nop
jg
cmp
dec
out
pop
sarb
mov
arpl
lds
add
into
cmp
pop
mov
repnz
leave
cmp
cmpsl
into
test
cmp
jns
std
add
out
xchg
adc
inc
push
and
sti
xor
movsb
mov
orb
jle
pop
push
xchg
xchg
push
jp
cli
stos
pop
sbb
lods
hlt
jbe
bound
nop
fimuls
ret
sub
mov
testb
ss
pop
subl
xor
or
dec
dec
cmpsb
enter
ljmp
cmpsl
sub
repnz
enter
sti
jns
mov
loopne
fcompl
xor
jns
jecxz
and
sbb
cltd
mov
repnz
aam
cmp
rcll
loop
push
xchg
sti
xor
sub
dec
inc
inc
jle
stc
or
fst
sbb
cmpsb
in
adc
mov
cmp
outsl
jnp
and
fildl
sbbl
out
pop
and
inc
adc
test
inc
das
jle
cs
cmp
sub
das
shll
fsubr
and
sbb
sti
out
add
sbb
jge
or
xchg
movsb
incl
int3
mov
pop
cs
mov
fidivrl
vpavgb
hlt
xor
cltd
mov
pop
inc
pop
xchg
arpl
sub
mov
sub
fdivl
pop
fdivrs
frstor
pop
ret
sti
jb
fsubs
push
adc
fwait
movsb
stos
jbe
mov
jmp
iret
test
jb
arpl
int3
cmpl
push
xor
sbbl
lock
pop
cmpsb
mov
inc
clc
lret
out
add
and
shrl
jnp
pop
and
sub
pop
cmp
rol
sbb
add
fdivrs
push
fnstsw
cmp
imul
jecxz
gs
in
or
pop
xchg
decl
xchg
or
pop
jg
sub
xchg
mov
andb
or
insl
push
lds
xor
sar
std
in
scas
and
push
push
dec
inc
push
jecxz
pop
cmp
push
lock
adc
cmpsb
movups
incl
std
mov
arpl
scas
mov
mov
jnp
inc
push
pop
dec
mov
mov
stc
adc
dec
ds
mov
mov
jp
push
pushf
or
cmp
addr16
adc
cmp
pop
mov
push
and
imul
mov
add
rorl
bound
and
fidivs
ss
mov
sub
inc
fs
nop
cmc
rorb
bound
orl
mov
sub
jns
sub
adc
fstpl
mov
cmpsl
xorb
aam
loope
cwtl
loop
or
out
sub
fimull
pop
ret
ret
sarl
dec
mov
xor
outsl
push
or
inc
mov
xchg
push
outsl
clc
out
aaa
rcrl
cmc
mov
or
adc
xchg
push
fs
fcompl
loope
inc
repnz
aas
fstpl
mov
inc
shl
clc
mov
in
fwait
push
pop
xor
int3
ret
aaa
insl
test
movsl
ja
mov
push
sbb
mov
xor
add
adc
addr16
sbb
mov
sbb
push
or
xchg
or
cmc
push
lods
scas
pop
jb
ds
and
pop
cmp
popa
jnp
rolb
or
mov
sbb
lods
pop
mov
scas
add
sub
movlps
push
int3
add
inc
inc
fwait
add
jbe
dec
shrb
pop
adc
xchg
mov
push
mov
adc
cmp
mov
ljmp
sti
aas
mov
cwtl
xchg
or
xor
out
add
inc
xor
push
sbb
enter
push
fiadds
xor
in
and
lock
out
out
or
xor
out
sahf
lret
pop
je
sbbb
xor
dec
loopne
pop
fsub
mov
cmp
pop
jb
out
lods
xchg
pop
ds
mov
cli
inc
aad
icebp
pop
popf
cmp
push
subl
adc
xchg
ret
pop
mov
aaa
sarl
xor
add
inc
push
repnz
pop
lret
pop
sbb
jmp
pop
pop
ja
xor
jp
dec
and
lahf
mov
dec
and
mov
out
xchg
inc
add
and
push
dec
pop
mov
les
not
hlt
out
lret
adc
hlt
int
inc
push
fsubs
into
sbb
mov
dec
dec
mov
add
stos
sbb
cmp
ljmp
aam
pop
and
sub
mov
clc
fwait
je
fwait
test
adc
push
bound
inc
pop
fdivrs
fdivr
jo
sub
or
sbbb
pop
mov
cmp
or
xchg
mov
test
imul
xor
xchg
in
cwtl
mov
mov
pop
aam
fisttps
and
daa
int
jne
mov
xor
imul
or
xchg
pop
jae
cmpsb
sub
adc
xor
mov
out
cld
dec
imul
in
lds
or
mov
add
lock
and
mov
push
lds
or
add
das
test
sbb
fidivrs
jg
fs
cmp
pop
jmp
clc
dec
movsl
fidivrs
lea
scas
in
jg
mov
int
jge
pop
sub
int3
dec
cmc
mov
jecxz
jno
in
fstps
lods
jns
loopne
mov
jnp
js
pop
aas
mov
or
pop
jne
xor
lock
push
mov
xor
inc
pop
nop
jno
je
mov
insb
adc
rorb
inc
adc
pop
inc
jne
adc
lret
stos
inc
int
outsl
ljmp
daa
sahf
xor
loopne
mov
jno
outsl
daa
clc
test
jbe
pop
sub
xchg
lret
cmp
shll
lds
aaa
jl
cli
insl
mov
pop
and
xor
xor
imul
jp
popa
les
and
mov
dec
imul
lcall
sbb
jno
cmp
orb
jp
fwait
sub
mov
dec
inc
pusha
sub
rolb
lods
sub
fnstenv
aaa
pop
xorl
pop
or
enter
loop
push
daa
inc
sbbb
cmp
mov
leave
cmp
stos
inc
dec
or
mov
mov
sarl
mov
fwait
cmpsl
lcall
mov
jmp
push
jmp
dec
es
pop
push
or
push
jns
rolb
iret
push
or
mov
test
adc
xor
sbb
loopne
negb
mov
sti
lods
fcomi
aas
mov
cmp
xchg
cmp
movsl
insb
leave
pushf
rorl
push
mov
aad
iret
mov
sbb
inc
push
push
fnstenv
in
and
adc
sbb
leave
or
outsb
add
hlt
inc
xlat
jmp
fldt
and
xchg
ret
jnp
mov
xor
push
fs
and
adc
test
add
sbbb
fnstcw
sub
ljmp
cmp
notb
jne
dec
imul
jmp
xor
push
jae
scas
jecxz
test
in
inc
jns
rolb
mov
push
add
rcrl
jae
jbe
aas
dec
sahf
xchg
mov
pop
xchg
les
ret
fcmovu
jb
cs
test
inc
push
js
push
notl
add
rorl
lds
pop
and
pop
mov
test
mov
push
pusha
mov
rcrl
shll
inc
cwtl
das
jb
mov
aam
cmp
les
leave
cmp
push
shll
mov
loope
addr16
fwait
pusha
inc
sbbb
cmpl
daa
stos
or
sub
aas
jp
adc
js
pop
cmp
mov
shlb
dec
add
pop
lcall
aaa
in
push
lock
in
xor
xchg
repnz
adcl
mov
daa
mov
inc
arpl
sbb
jb
test
ret
ja
jno,pt
dec
outsl
cltd
or
lret
std
lret
bound
adc
xor
stos
lret
cmpsb
pop
std
xchg
jle
std
cmp
or
mov
mov
imul
aaa
cltd
lock
int3
lcall
in
ds
loopne
iret
es
rorb
js
dec
outsl
test
sbb
push
movsl
fwait
pop
adc
xor
add
enter
dec
neg
inc
or
popf
cmp
push
jl
mov
movsb
jae
push
aam
cmp
and
adc
nop
call
cmp
shr
sahf
call
popa
push
lahf
stos
inc
xor
mov
faddl
xor
pop
out
test
repz
dec
mov
loop
rcll
sbb
mov
ficoml
mov
popf
push
rcll
inc
mov
repz
pop
notl
movsb
jge
sbb
ret
or
push
sbb
mov
cmp
nop
ljmp
imul
mov
pop
inc
out
adc
das
cmp
sub
ljmp
cmp
rol
sbb
cli
cmp
xchg
lcall
pop
enter
jnp
cwtl
movsb
dec
dec
dec
or
ds
mov
popl
or
or
sbb
add
xor
inc
std
jge
adc
lret
mov
jmp
inc
add
fildll
les
and
xchg
mov
pusha
dec
cld
mov
xchg
test
lcall
mov
or
movsb
nop
push
outsl
xchg
mov
movsb
fidivl
sbb
inc
push
mov
negb
inc
shrl
icebp
adc
jno
jae
fldt
popa
xor
xchg
js
jp
push
push
fwait
ret
jmp
push
and
inc
lahf
cs
xor
bound
aad
shrl
iret
gs
push
mov
shll
xor
ljmp
shlb
in
xchg
aas
testl
repz
push
jl
add
push
jns
cwtl
mov
leave
mov
push
jmp
jl
imul
lods
inc
xchg
push
lahf
sahf
pushf
fcomi
cmp
adc
negl
test
lret
xchg
sub
ret
cld
scas
scas
inc
loopne
mov
pop
daa
mov
jmp
or
jnp
inc
outsl
push
stos
inc
push
mov
test
mov
repnz
dec
lahf
adc
lcall
in
out
sbb
and
jne
cmp
adc
mov
js
push
js
push
sub
into
gs
divl
jne
adcb
jmp
aaa
sbb
jmp
or
mov
jecxz
or
push
pop
test
out
cmpsb
sub
sub
adc
js
lret
cltd
mov
or
stos
fdiv
aad
adc
scas
dec
mov
jg
adc
jle
lds
lods
xchg
jne
dec
pop
push
xor
xchg
sub
insl
pop
mov
pop
lea
mov
aam
sub
jp
mov
in
mov
pusha
mov
dec
imul
pop
hlt
mov
xchg
rcll
inc
loop
bound
adc
or
mov
xchg
push
shlb
jp
sbb
jmp
mov
mov
fcomps
call
enter
out
lds
xor
dec
movsl
cmp
sub
and
loop
addr16
inc
xlat
pushf
mov
daa
adc
pop
fidivrs
xor
mov
xlat
push
mov
add
xchg
outsb
sbb
aas
sbb
stos
mov
stc
mov
sbb
mov
mov
repz
popa
gs
shll
xor
push
push
mov
movsl
push
jo
add
mov
xorl
aam
clc
push
and
popf
mov
out
dec
cli
pop
repnz
push
mov
dec
rolb
mov
shrb
nop
mov
xchg
jecxz
scas
sub
cld
cltd
mov
daa
stc
mov
in
add
jo
insb
and
fildll
push
cs
arpl
insb
xchg
cmp
addr16
mov
xor
or
push
loop
cmpsl
xor
cmp
adc
fdivr
and
mov
and
jnp
cs
out
icebp
ja
sub
outsl
push
xor
movsb
movsl
inc
cli
xchg
jae
repz
jg
imul
sub
movsb
dec
jp
pop
idiv
jnp
iret
movsb
pop
cld
rorb
test
push
push
outsb
divl
xor
incl
cs
or
sbb
ds
cmp
pop
xor
insl
pop
mov
pop
inc
sub
data16
xchg
sub
and
fsubl
ja
ljmp
fsubrp
or
mov
mov
dec
mov
sub
pop
inc
push
xlat
aaa
es
inc
push
sub
jl
dec
and
ret
gs
jo
add
and
nop
adc
popa
int
outsb
jnp
int
rcrb
test
out
xchg
sub
xor
fidivs
outsb
jnp
mov
mov
sahf
mov
leave
cmpsb
mov
subb
icebp
dec
das
or
lods
pop
daa
jno
aam
lock
ret
jle
loopne
rclb
or
ret
pop
fdivrp
iret
mov
cli
and
sbb
lods
xchg
pop
jge
inc
mov
cmpsb
ret
inc
push
pushf
jle
fld
fs
fcom
popa
lods
inc
inc
xor
push
ljmp
or
and
pop
popf
dec
jns
jle
addr16
mov
in
iret
cld
mov
fnstsw
mov
adc
jecxz
xor
mov
inc
arpl
jbe
cli
or
pop
xor
lea
or
jecxz
outsl
or
bound
mov
ljmp
lock
das
pop
outsl
adc
rclb
in
inc
push
rorb
ss
loope
shrl
mov
arpl
push
pop
adc
mov
jge
mov
pop
ja
movsb
loop
loopne
pop
sub
xchg
jns
ja
ja
add
xor
rcl
xchg
mov
mov
vmovd
dec
sub
rcl
and
dec
shl
xchg
dec
push
dec
mov
addr16
push
fcomps
or
mov
sub
pop
push
imul
fwait
mov
mov
xor
ret
jb
or
roll
xchg
fildll
cs
pushf
push
push
leave
test
mov
outsl
out
leave
dec
fcom
pop
ret
push
jno
mov
aam
mov
pop
cmp
mov
cmp
pop
out
popa
ds
out
xorl
mov
pusha
mov
fmuls
inc
inc
and
out
xchg
stos
sbb
icebp
or
mov
dec
xor
jmp
inc
push
stos
xor
pop
or
add
inc
cld
daa
sahf
in
aad
mov
scas
mov
push
jne
outsb
push
ret
sub
dec
pop
xor
or
inc
gs
fsubr
in
pushf
cmpsl
out
xchg
ljmp
testb
js,pn
fcmove
out
test
mov
inc
pop
lahf
inc
testl
out
cmp
inc
jbe
nop
xchg
push
sub
fcmovb
movsb
xor
rcrb
sub
cmp
int
xchg
lcall
lahf
sti
mov
or
xchg
cmpsl
dec
adc
or
insb
ljmp
int3
into
xor
sbb
inc
bound
push
jns
fists
inc
mov
or
loope
mov
movsl
cmp
sahf
int
push
js
push
aas
scas
test
pushf
int
cmp
push
ljmp
jb
mov
out
movsl
out
pusha
sbb
sbb
xor
hlt
pusha
inc
sbb
add
and
jp
jge
mov
jae
test
xchg
rolb
sbbl
pop
jge
rclb
mov
outsl
addr16
insl
sbb
test
in
insb
cmpsl
out
scas
push
pop
or
fisttpl
popa
pop
int3
iret
xchg
mov
fiaddl
push
fcmovne
pushl
push
xor
jmp
pop
shrl
fwait
test
outsb
mov
shlb
adc
fwait
mov
js
popa
hlt
iret
gs
add
pop
imul
push
das
jp
pop
jns,pn
and
push
clc
lret
fs
cmc
inc
sbb
in
out
shrl
inc
push
cltd
inc
aam
je
fadds
fadds
les
pop
sbb
push
jnp
dec
aaa
ud1
jmp
cwtl
daa
repnz
iret
leave
lcall
shr
int3
lret
in
addb
js
in
gs
pop
pop
inc
and
hlt
adc
sub
testl
loop
jle
push
inc
fidivrl
xchg
pop
scas
xchg
cltd
push
fisttps
cmp
or
ffreep
jecxz
jno
insl
jbe
js
xchg
shll
shr
cld
push
loope
mov
shlb
mov
data16
pop
lods
cmp
cmpsb
push
and
xor
jg
push
es
int3
es
xchg
xor
jmp
xchg
xor
in
inc
cli
pushf
or
mov
pop
es
leave
pop
sbb
aad
call
mov
in
jno
adcl
jge
lret
mov
les
cli
in
sti
dec
test
and
adc
arpl
das
out
add
push
lock
jmp
gs
jno
lahf
xchg
xchg
shlb
call
jb
push
adc
xchg
js
jae
and
int
daa
jbe
xchg
jecxz
push
test
mov
inc
jp
or
imul
adc
mov
mov
mov
loope
jg
outsl
call
mov
dec
push
pusha
movsb
adc
add
es
loopne
inc
aaa
xor
mov
sbb
mov
cmc
pusha
push
insl
adc
mov
jmp
or
loopne
push
lods
adc
pop
jbe
xchg
test
inc
fs
mov
imul
push
mov
test
gs
cmp
imul
jno
xor
scas
pop
mov
shrl
mov
sti
imul
in
inc
mov
ja
repz
lds
push
cmp
pop
iret
xchg
jle
sahf
pop
cmp
cmp
push
ret
mulb
ret
fnsave
push
and
enter
mov
mov
test
or
push
mov
cmc
jg
cltd
in
cmpb
mov
or
xlat
or
cmp
sub
ret
mov
leave
push
mov
push
dec
mov
mov
add
push
jbe
popa
mov
push
sahf
sbb
add
loope
ret
leave
jbe
adcb
jns
push
je
and
pushf
stos
jns
and
push
xor
sahf
and
sub
sti
les
lret
sbb
xor
loope
into
adc
dec
mov
xchg
or
leave
xchg
mov
and
jge
inc
roll
xor
push
sub
insl
into
lods
divl
ret
pusha
fldcw
mov
cmp
pop
adcb
leave
cmp
mov
das
test
repz
mov
cli
lods
xchg
sub
sbb
inc
xlat
ret
ss
fs
push
sbbl
ret
sbb
std
xchg
push
cmp
imul
sbb
mov
aam
ja
rcll
sbb
adc
sti
dec
sbb
pop
sub
pop
cmp
divb
in
cmp
or
sbb
xchg
push
xor
inc
and
jle
aaa
testl
push
cmp
addps
add
shll
push
add
rolb
mov
sti
or
xchg
iret
and
cwtl
jp
pop
mov
sbb
fldl
and
es
xor
into
jnp
jmp
cmp
mov
icebp
push
js
xor
sbb
aad
cmpsb
push
mov
pop
sub
mov
push
jmp
pop
jg
and
inc
loopne
rcrb
testb
xchg
stos
jo
jle
shlb
pusha
and
inc
lods
pop
sbb
movb
mov
add
stos
cmpl
inc
int3
sbb
sub
std
pusha
inc
arpl
sahf
sub
nop
mov
jbe
xor
push
push
enter
data16
addr16
scas
xchg
aaa
cwtl
xor
mov
and
insb
bound
add
outsl
dec
pop
popf
ljmp
jae
movsl
add
push
ss
lods
push
addr16
ljmp
adc
push
ret
mov
cli
lods
sbb
adc
push
pop
cmp
scas
test
mov
clc
cmc
or
cmp
out
dec
fdivs
mov
stos
add
dec
xchg
iret
bound
jle
or
sti
push
arpl
jne
call
shll
sahf
cmpsb
add
push
cltd
mov
lret
pop
in
std
pop
arpl
jge
int3
decl
cmpb
sbb
inc
test
aad
and
pop
jnp
in
repz
jb
pop
jae
call
or
adc
mov
das
icebp
ja
cli
icebp
push
test
push
out
insb
inc
aam
dec
cmpsl
mov
xchg
jmp
lods
ret
lock
mov
jne
loopne
scas
adc
pop
and
jge
xchg
sbb
jne
push
cmpsl
mov
popa
cmp
push
repz
les
stc
movsb
mov
pop
xlat
and
imul
sbb
jae
int
insl
dec
stc
jmp
xor
xchg
int3
call
cmpsl
mov
fisubrl
loopne
jo
aam
inc
fnstsw
dec
jne
sahf
mov
xchg
inc
fwait
jo
push
out
das
xchg
push
mov
xchg
outsb
sub
jle
xchg
cmp
mov
dec
rcrl
fmul
arpl
popf
gs
inc
or
mov
cwtl
pop
jmp
xchg
rolb
cmp
stos
inc
xchg
inc
jp
jg
push
scas
stos
nop
push
fdivrp
inc
cmp
roll
pusha
push
mov
shrb
lea
and
cmp
push
cmpsl
das
mov
clc
ret
inc
pop
cmc
sbb
insl
inc
leave
dec
sti
popa
stos
mov
or
lret
dec
inc
mov
aas
mov
add
xlat
andl
icebp
sbb
mov
pop
enter
cmp
sbb
mov
and
adc
cli
test
xlat
dec
xchg
movsl
movsb
cmc
mov
jecxz
iret
pop
push
cli
push
leave
jnp
jle
mov
ja
jb
sub
aad
pop
stos
inc
lea
lret
push
dec
je
cmp
adc
cwtl
leave
xchg
mov
in
fcompl
in
outsl
cmp
dec
fs
mov
push
icebp
or
mov
xor
popl
test
fs
ljmp
cltd
xchg
xchg
xchg
outsb
jmp
mov
pop
popl
popf
notl
iret
jl
clc
sub
fisubrl
xchg
dec
adc
hlt
in
fimuls
dec
push
pushl
mov
sahf
and
notb
push
cwtl
int
shrb
or
xor
test
popf
fs
add
bound
out
push
sbb
inc
outsb
pop
iret
cmp
cmp
ficompl
push
popa
add
adcb
and
shll
ljmp
inc
and
test
add
xchg
das
xchg
mov
icebp
lock
sbb
xchg
or
cmpsl
xchg
mov
add
fwait
or
cld
sbb
cmpsb
push
sti
inc
xchg
stos
xlat
negb
pop
movsb
pop
insl
clc
leave
dec
leave
push
jnp
add
xor
xchg
das
mov
scas
add
cmc
pop
or
je
aad
ret
mov
les
mov
push
in
dec
int
and
pop
sub
sbb
sub
xchg
jecxz
dec
pslld
shrl
mov
push
mov
pop
sbb
push
add
lods
mov
outsl
push
add
insl
and
add
int3
push
lock
and
leave
lock
sbbl
xor
sbb
push
sub
pop
sub
mov
pop
dec
jecxz
addr16
xor
jp
or
or
lret
jne
sarl
push
pop
loop
movsl
cmp
pop
cld
imul
popa
stos
aad
faddl
insb
xlat
pop
dec
dec
dec
inc
repnz
int
lea
xchg
insl
ja
jmp
push
test
push
mov
cmpb
mov
or
cmp
test
add
xchg
cltd
xchg
cmp
sbb
in
sub
mov
or
inc
sub
outsb
andb
add
mov
sub
call
lret
mov
jmp
imul
cmp
das
outsb
mov
lret
sbb
mov
pushf
fs
push
insl
shlb
icebp
dec
jg
push
ret
jecxz
jecxz
cmpsl
xchg
popa
jle
inc
add
or
dec
cmpsb
xchg
add
pop
mov
lea
insb
test
mov
inc
mov
xchg
push
push
push
stos
adc
ficompl
aaa
inc
pusha
add
mov
insl
xor
clc
ljmp
call
subl
bound
mov
loopne
xor
inc
mov
push
sbb
addr16
mov
fiaddl
add
fs
adc
ss
aam
in
lods
jb
jp
fnstcw
mov
push
ret
lock
xor
push
out
pop
inc
mov
jbe
fdivrl
push
sbb
popa
imul
and
je
pop
lods
rolb
adc
or
xchg
test
inc
jl
repnz
cwtl
pop
sbb
jae
lods
inc
mov
sub
enter
movsb
fs
arpl
subb
scas
fwait
dec
dec
fcom
repz
add
cmp
fwait
scas
or
pop
jecxz
sub
repz
out
sti
out
sub
inc
fildl
inc
cmp
cmp
cmp
test
aad
xchg
test
mov
popa
jg
or
shrb
das
pushf
lea
cs
mov
add
fs
fcmovnb
dec
pop
or
pop
lods
mov
pop
inc
popa
inc
es
filds
xor
jne
mov
mov
pop
pop
push
addr16
lds
cmp
aaa
imul
add
pop
out
push
ja
mov
pop
jge
sbb
or
mov
sbb
jne
add
mov
xchg
cmp
in
shll
inc
fs
sub
inc
mov
jo
jo
lea
pop
pop
bound
sahf
jns
push
inc
jmp
fldenv
xchg
pop
fldl2t
mov
aaa
push
inc
ret
pop
cmp
out
out
mov
dec
dec
mov
icebp
imul
xor
adc
clc
pop
rcrl
les
adc
inc
outsl
sbb
mov
adc
sub
stos
push
shll
push
jnp
stc
mov
sbbb
andb
push
and
popf
inc
or
xchg
popf
call
rcrb
lods
testl
js
stos
stos
shll
mov
xor
sbb
sub
push
into
or
xor
cwtl
jne
lret
push
idivb
xchg
stc
lea
out
nop
sub
jp
cmp
xlat
and
lea
nop
cli
lds
lcall
scas
sub
bound
subb
enter
mov
inc
mov
jbe
mov
sbb
test
sub
or
popa
das
aas
rorb
mov
jmp
cli
adc
jg
or
pop
popf
or
cwtl
sbb
push
cs
lret
mov
ret
stos
jne
push
mov
mov
dec
dec
mov
and
stc
pop
pop
cmp
jecxz
xchg
sub
out
rcrb
lods
fs
data16
in
adc
push
movsl
pop
xchg
pop
aam
loop
insl
cmc
out
lahf
sbb
iret
rolb
icebp
push
and
adcl
inc
mov
js
add
pop
leave
pusha
dec
push
adc
daa
sub
pop
mov
cmp
imul
lods
xchg
or
sub
push
sbb
dec
jbe
loope
testl
jge
pop
cld
int3
data16
cld
jge
out
fwait
pop
mov
push
mov
dec
popf
lret
and
ss
mov
mov
out
ret
jecxz
mov
lods
mov
aaa
inc
test
xchg
xchg
sbb
or
add
sub
bound
jg
xor
lods
sbb
es
pop
int3
sub
shr
cli
inc
sbb
aas
je
mov
add
jg
xchg
cmp
jbe
call
inc
dec
arpl
push
stos
idivl
mov
push
out
out
xchg
jecxz
mov
mov
push
xlat
lock
js
mov
out
test
movsl
out
sbb
sub
mov
lahf
ret
add
add
xor
xchg
jae
das
clc
jno
push
jmp
sbb
rclb
pop
lret
icebp
das
push
cs
iret
lret
xor
mov
mov
rolb
and
jno
jbe
popa
ds
shr
adc
clc
mov
mov
dec
cmp
jnp
jno
mov
sarl
or
mov
inc
lock
cmp
lret
inc
pop
sbb
jb
movsb
stos
inc
in
test
push
nop
push
push
mov
jo
or
xlat
sbb
xor
jl
mov
rcr
lds
mov
and
jge
cmp
sbb
aam
cwtl
movsl
ljmp
ret
xor
xor
jl
fldl
adc
cmp
mov
xchg
testb
test
das
or
loope
sbbl
sub
lahf
add
dec
pop
jp
out
or
hlt
mov
sbb
xchg
pop
sub
outsl
add
cs
push
mov
ret
loop
inc
fs
mov
dec
push
shll
push
mov
cmp
and
pop
in
popa
add
mov
fidivrl
xchg
and
fnstenv
jp
ficomps
mov
sbb
test
nop
cmpsb
cmp
xchg
bound
jge
scas
daa
pop
leave
sbb
sub
mov
ljmp
xor
aam
mov
call
mov
xor
into
sub
cmp
insl
in
in
outsl
and
add
aas
or
mov
sub
lods
cmc
leave
mov
dec
mov
out
lods
pop
test
mov
adcb
notb
call
mov
jmp
or
push
jg
and
cs
lret
inc
push
add
hlt
aam
ret
mov
daa
clc
mov
sbb
and
add
aas
mov
stos
cmp
mov
xlat
pop
sub
idivl
cltd
scas
sbb
test
cmp
repnz
arpl
push
out
inc
xchg
push
push
cmp
imul
sub
mov
nop
dec
inc
fidivrl
imul
sahf
jmp
aad
sti
push
push
push
movsb
cmp
cmpsb
push
out
push
jp
in
outsl
mov
sub
fisttps
shll
add
je
lcall
out
outsb
mov
lahf
pop
int3
je
jbe
pusha
div
sbb
andb
pop
mov
aaa
mov
out
push
jg
mov
ss
das
mov
sub
orl
lea
mov
pop
andl
xor
stos
sbbb
in
push
shlb
ds
mov
cltd
mov
lret
cmp
cs
shrb
dec
cmp
adc
and
lret
sbb
mull
pop
mov
push
in
mov
pop
and
test
hlt
adc
mov
sbb
xchg
jae
and
lahf
leave
les
jne
pop
mov
arpl
ret
xchg
sub
jae
add
aam
add
mov
fidivs
nop
xchg
sub
inc
add
outsb
xor
testl
add
adc
mov
movsl
movsb
lret
insb
xchg
mov
push
jmp
insl
xchg
jmp
lds
clc
pop
jmp
push
in
inc
insb
test
jae
add
stos
icebp
and
sbb
push
dec
ja
push
mov
aas
or
icebp
dec
shll
subb
adc
imul
push
push
inc
pushf
mov
xchg
pop
adc
sub
sahf
loopne
adc
sub
jbe
mov
fdivrl
stc
xchg
mov
cmp
sub
mov
mov
clc
in
fsubrp
clc
push
popf
add
inc
mov
xor
cwtl
sbb
mov
pop
mov
lock
sub
mov
pop
and
pop
ja
addr16
fcomps
push
jecxz
in
lea
add
push
outsl
sub
sbb
xor
mov
rolb
mov
pop
rcr
lods
mov
add
jl
imul
add
dec
mov
jnp
mov
repz
mov
mov
cmpsb
sub
movsl
mov
jbe
in
adc
stos
inc
mov
sarl
pop
mov
lcall
shl
cmp
adc
push
mov
daa
push
idivl
stc
push
repnz
mov
insl
outsb
xchg
dec
sbb
and
push
sti
int3
out
cmpsl
jbe
mov
testl
hlt
call
ja
and
ret
popa
xor
sbb
ficompl
add
jecxz
lret
add
mov
scas
fadds
jecxz
push
cmpsb
sub
data16
xlat
outsl
dec
sti
in
xor
jmp
push
and
jno
mulb
cmc
fisubrs
mov
movsl
sti
lahf
xor
sbb
cmpsl
rorb
push
or
fiaddl
xchg
movsb
or
adc
orl
xor
icebp
dec
cmpsl
js
not
mov
aad
lods
stos
icebp
xchg
in
inc
pop
mov
push
dec
into
jmp
sahf
pop
cs
mov
xchg
dec
inc
arpl
in
and
movsb
cmp
push
lret
ret
cli
lret
mov
push
xlat
test
test
loope
push
jne
rcr
jo
push
sbbb
xchg
sahf
sub
das
sar
push
xor
push
xor
mov
dec
gs
cmp
sbbb
cmpb
int
cmc
adc
sub
and
stos
ret
pop
and
cmpsb
ja
jbe
and
pop
sahf
repz
enter
frstor
mov
xor
sub
popf
xor
mov
sub
fisubrs
sar
rcr
sbb
ds
gs
fidivl
mov
lret
mov
inc
popa
imul
int
shr
add
and
shr
fcomp
inc
enter
test
mov
jo
pop
mov
cwtl
leave
mov
xor
inc
fabs
jns
out
push
jns
and
cmp
lods
and
inc
inc
into
push
or
je
movsl
repnz
adc
jle
xchg
out
cmp
popa
hlt
jns
sub
stos
pop
sub
mov
dec
pop
loope
push
sbb
pop
jae
sahf
mov
pop
popf
fs
pop
cli
jle
mov
cltd
rclb
sbbb
in
inc
pop
mov
add
sbb
stos
aad
imul
sbb
lds
arpl
mov
les
mov
int3
pop
int3
in
sub
pop
out
ljmp
je
pop
into
or
hlt
and
movl
jmp
lcall
hlt
insb
hlt
cmp
out
inc
push
xchg
cmp
pop
cltd
mov
dec
js
pop
stos
outsl
dec
fwait
adc
mov
adc
in
and
fiadds
je
xor
mov
lahf
sub
lock
adc
cmp
lods
sti
xchg
fisttps
aaa
sbb
mov
cmp
push
lds
and
fdivrl
in
aad
cltd
cmpl
neg
push
mov
xorb
xchg
outsb
mov
or
add
sar
fisttps
shlb
decb
in
push
lret
dec
pavgb
stos
stos
fstpt
inc
in
cmpsb
stos
inc
call
aam
in
neg
in
sarw
xchg
lods
inc
lds
lret
push
adc
sbb
pop
shl
ljmp
push
add
ret
pusha
stos
sbb
mov
xor
add
push
ss
or
bound
scas
fisttpll
sbb
outsb
movsb
ret
sbb
ret
jl
sub
leave
push
push
dec
mov
cli
testb
adc
iret
mov
push
pop
hlt
xlat
sub
mov
xchg
sub
scas
xchg
cwtl
and
and
leave
push
cmp
in
or
xchg
es
repz
mov
inc
int
adc
in
loop
pop
dec
es
pop
and
stos
mov
movsl
xchg
neg
shrb
push
push
xor
call
test
pop
mov
adc
jo
andl
push
xchg
sub
cs
sbb
or
sbbb
xchg
ljmp
fimull
pop
imul
xorl
jecxz
cltd
lea
adc
add
movsb
mov
pop
repz
gs
jnp
shr
mov
lret
pusha
xor
jnp
sub
sub
sub
xchg
daa
mov
add
pop
movsb
dec
ja
jl
adcb
lahf
cmp
push
mov
mov
fsubrs
inc
or
push
or
pop
xor
jb
aas
nop
imul
add
mov
pop
lret
bound
adc
dec
fcoml
je
ja
add
test
dec
cltd
and
ljmp
enter
call
test
vmaskmovdqu
stc
notl
pop
mov
fsubrl
ret
int
repnz
mov
sub
mov
mov
push
and
inc
pushf
xor
sub
loope
and
inc
sti
das
mov
leave
pop
xor
push
push
mov
and
xor
sub
repz
xor
ljmp
and
das
xor
dec
mov
jmp
mov
xchg
or
lret
lea
lea
jle
test
dec
inc
addr16
test
mov
bound
je
aam
das
repnz
add
jecxz
mov
js
loope
loopne
adc
pop
into
adc
sub
sti
mov
mov
or
cmp
clc
push
outsl
add
adc
mov
pop
subb
xchg
je
leave
add
loop
daa
mov
cli
dec
inc
je
iret
push
in
inc
out
je
test
stos
jmp
fisttpl
mov
jl
fs
lcall
shl
imul
loope
cwtl
les
jg
gs
adc
adc
adc
outsl
mov
cli
sub
in
inc
mov
push
fidivs
lret
ret
and
mov
loop
loopne
add
push
cmp
cmp
inc
dec
out
add
imul
fld
std
cmp
cmc
shll
scas
enter
test
xor
dec
pop
inc
mov
cmp
imul
pop
scas
ret
jno
outsb
mov
dec
jg
lahf
mov
mov
mov
lock
add
shrb
or
popl
dec
jecxz
jo
cmp
inc
xchg
xchg
pop
cmpsb
add
fnstenv
cmp
fwait
add
or
les
xor
dec
loop
push
dec
sbb
push
xor
xchg
mov
imul
sbb
push
call
mov
dec
lahf
add
add
push
cld
bound
sub
lea
xor
push
fstps
out
out
jae
ss
xor
pop
xor
movsb
cmpb
cltd
divl
ss
xor
cs
stos
inc
mov
push
or
out
int
jp
adc
fisubrl
icebp
out
idivl
mov
add
shll
sbb
dec
icebp
divb
adc
shll
sbb
cmp
jns
and
ds
jno
cmp
jb
sbb
shl
int
mov
scas
out
add
add
push
add
xor
push
mov
ss
das
jne
xchg
sub
push
outsl
aas
xchg
aas
movsb
add
mov
roll
xorb
data16
imul
push
add
stos
fildl
pushf
inc
lahf
xor
ljmp
xor
push
cmpsb
aaa
lea
mov
fldl
cmp
in
mov
push
out
lock
push
loopne
subl
je
mov
adc
add
sbb
andb
decb
and
mov
jp
sti
jmp
inc
jg
dec
fists
adc
jmp
mov
movsb
vunpckhpd
stos
pushf
ja
xchg
or
jo
sbb
add
ds
ljmp
jmp
test
xor
pop
lds
xor
jae
push
imul
ret
loope
cld
movsb
dec
inc
xchg
sub
xchg
subl
fnstcw
xchg
test
mov
aam
xor
hlt
xor
mov
jg
in
mov
es
clc
fidivrs
shlb
imul
inc
sbb
mov
icebp
cmp
or
inc
pop
ret
ret
dec
loopne
jg
mov
ja
add
dec
ret
push
fsubp
dec
xchg
cmpsl
test
fdivrl
hlt
leave
or
cltd
adc
inc
aam
jne
lock
mov
loope
dec
movsl
lds
ret
adc
pop
call
sbb
mov
add
lcall
xor
pop
mov
lret
xchg
xor
adc
xchg
rcrl
jo
push
in
push
xor
sub
ja
stc
addl
jno
roll
lods
jg
xchg
adc
sub
aaa
jno
insl
call
rorl
jns
lods
aas
hlt
int3
rol
mov
insl
jnp
icebp
mov
rorl
push
test
push
nop
dec
xor
insb
ljmp
lret
lea
cli
xchg
or
lret
add
movsl
in
subb
addl
hlt
outsl
insl
dec
pop
gs
andl
inc
pusha
lods
je
in
push
adc
inc
sbb
call
adc
adc
push
dec
mov
repnz
jmp
outsb
lcall
xchg
sbb
ljmp
xor
xchg
cli
push
lret
push
dec
sar
xor
loop
xor
lods
sarl
leave
mov
mov
out
inc
fmull
sub
js
fs
rcrb
adcl
leave
push
je
cmp
mov
or
cmp
push
cld
xchg
add
orb
cmp
mov
cmc
cld
inc
mov
fstl
movsb
mov
and
hlt
dec
outsl
dec
mov
roll
inc
mov
mov
test
hlt
test
push
cmp
inc
scas
int
jp
shlb
mov
pop
push
sbb
cmp
pop
out
gs
fs
jnp
jne
lods
pushf
sbbb
pop
jle
jne
jle
jnp
fstps
cmpsb
inc
stos
dec
fs
sbb
inc
sbb
add
push
leave
and
add
pop
hlt
icebp
dec
mov
or
test
cmpsl
test
mov
lea
xchg
cmp
jo
cmc
or
pusha
clc
enter
mov
xlat
and
xor
sar
and
sarl
shl
jl
dec
loopne
jb
test
loopne
mov
scas
mov
out
lock
js
je
cs
pop
or
or
push
rcl
mov
mov
fcmovne
mov
jg
add
push
mov
pop
push
movsb
inc
lcall
or
push
mov
sti
mov
imul
jmp
cmp
in
inc
xchg
int3
loop
fs
inc
jge
shlb
scas
ja
or
out
xchg
popa
icebp
cmp
sbbb
pmaddwd
out
add
mov
and
or
jle
and
mov
mov
lods
xor
mov
or
jecxz
mov
pop
sarl
push
jbe
push
or
scas
fwait
dec
and
shr
les
cwtl
icebp
daa
add
jle
and
fninit
jp
jp
out
scas
add
in
shl
mov
aam
adc
insb
or
adc
in
xor
lcall
fstl
nop
jae
fs
mov
movsl
cmp
call
pop
out
sub
dec
pop
sbb
and
push
cmp
sbb
push
mov
pop
jne
ret
ja
or
sub
fcoml
jmp
cltd
or
gs
push
sub
mov
dec
jne
mov
dec
movsl
push
in
stc
mov
lea
jne
xor
lea
push
shll
dec
add
mov
jg
inc
test
ret
jp
cmpsb
xchg
cmpsb
movsl
ret
xlat
mov
and
dec
pop
hlt
mov
sub
andl
nop
pop
mov
push
cmc
inc
add
es
sub
gs
pop
and
cmp
sub
and
inc
ja
xor
test
push
rcrl
in
add
jbe
pop
sbb
and
aas
push
aas
xchg
scas
mov
test
aad
sarb
hlt
sub
mov
rorl
jl
cmp
aad
jb
dec
movsb
aad
or
push
imul
mov
lret
mov
cmpsb
push
lock
leave
xor
inc
fbld
scas
lds
xlat
fstpl
mov
push
push
sti
mov
sub
les
push
jg
cmp
cmp
pushf
cli
xchg
imul
hlt
imul
and
xchg
push
push
jle
ds
test
shll
cmp
mov
daa
sbb
stos
lods
shlb
dec
dec
adc
mov
or
rcrb
jbe
mov
xchg
and
stos
pop
faddl
aas
sub
sbbb
inc
pusha
xchg
les
add
in
outsb
inc
jae
aaa
cmpsl
push
aas
add
jb
mov
and
xchg
xlat
inc
mov
sti
imul
jbe
xor
ret
loope
push
adc
or
xor
repnz
sub
xchg
xchg
pop
bnd
mov
jns
push
int3
sub
or
test
in
mull
xchg
sub
hlt
fldcw
out
pop
sbb
mov
jne
xor
adc
or
xchg
out
mov
dec
out
cmp
mov
sbb
mov
das
jp
aam
les
mov
xchg
adcb
sub
mov
mov
hlt
push
sbb
outsl
pop
mov
fmull
test
insb
cmpsb
int
or
or
test
dec
mov
fs
xorl
cmc
dec
scas
add
sahf
xor
pushf
cmpsl
ss
jae
mov
rcr
scas
add
fmuls
jbe
mov
pushf
enter
popa
add
pop
adc
imul
inc
outsb
sub
adcl
jb
dec
inc
fistpll
inc
stos
mov
out
mov
jge
popa
clc
daa
and
adc
inc
jg
outsl
or
cmp
divl
push
sub
jmp
jg
stc
fstl
dec
rep
sub
aam
mov
cld
in
inc
out
push
mov
dec
adc
shld
jbe
xchg
xor
mov
movsb
dec
js
xchg
xchg
hlt
sub
imul
lcall
jge
add
popa
xorb
adc
fsubrl
pop
cmp
int3
sub
xlat
jno
pop
rclb
inc
sub
cmp
stos
jbe
inc
mov
dec
lahf
or
lret
adc
test
test
jge
sbb
icebp
daa
xor
lds
das
push
mov
mov
push
out
inc
xlat
ret
pop
mov
xor
icebp
add
xor
jmp
sahf
adcb
rcll
adc
lcall
dec
lret
mov
jmp
mov
das
in
xlat
stc
mov
inc
shl
or
cmp
xchg
lea
push
leave
jl
sti
addb
ficomps
lock
pop
lock
arpl
sub
sbb
and
jns
cli
cs
popf
bound
orl
frstor
sbb
push
stc
dec
iret
mov
push
cmpsb
insl
ds
addb
sub
subl
inc
jns
lcall
and
sbb
push
fs
out
push
fdivl
in
inc
test
std
clc
das
push
lret
adc
cld
mov
outsb
jle
rolb
in
mov
fwait
cmp
lods
cmpsl
loop
ret
js
pop
loope
push
push
cmp
clc
fs
test
add
imul
popf
sbb
ret
mov
les
clc
adc
mov
mov
dec
shll
int
fs
int3
scas
mov
pop
pusha
int
add
into
xor
mov
push
call
mov
leave
outsb
add
add
andb
pop
outsb
add
xor
xchg
sub
std
ljmp
cmp
imul
cmp
inc
sti
in
movsb
push
inc
in
aaa
sub
inc
fimuls
std
popf
jle
xor
ret
mov
mov
push
jmp
dec
movsb
jo
pop
imul
adc
mov
je
mov
adc
jnp
enter
xchg
scas
pop
enter
jmp
mov
int3
dec
pop
push
mov
fbstp
cli
std
dec
dec
xor
leave
pop
xchg
jecxz
aas
cltd
mov
mov
mov
shrl
lcall
jle
test
pop
lods
dec
nop
add
ret
test
pop
sub
popf
mov
aad
dec
out
sub
adc
adc
mov
pop
call
add
add
and
pop
jno
sbb
jp
mov
lret
jo
cmpsl
mulb
insl
mov
and
aad
jmp
fs
into
push
sub
jg
sub
lret
inc
sbb
gs
push
push
out
mov
mov
das
cmpb
xor
addr16
cltd
xorb
shrl
adc
push
jbe
jle
lret
inc
pusha
cmp
rcrb
and
mov
in
push
push
call
dec
cmpsb
outsl
mov
insl
lds
inc
xchg
xchg
cmp
or
popf
dec
popa
out
push
sbb
mov
pop
outsb
enter
add
test
scas
ja
ja
dec
mov
xchg
add
rcr
sbb
dec
movsl
xchg
inc
mov
xchg
add
xorb
enter
or
cmpsl
add
scas
inc
mov
push
hlt
adc
jmp
sbb
or
ss
outsl
sub
loope
out
mov
xor
cmp
sbb
adc
pop
sub
and
imul
and
xchg
adc
js
adcb
pop
movsb
inc
or
jg
jecxz
or
pop
lock
js
cmp
xchg
decl
movsl
xchg
xlat
stos
add
test
sbb
cld
fisttpll
mov
jnp
sub
xchg
ljmp
and
and
testl
inc
dec
clc
mov
add
iret
push
mov
xchg
xchg
imulb
fildll
icebp
mov
subl
psrlq
jno
inc
mov
fmulp
jo
mov
mull
and
sti
cmp
addr16
dec
pop
addr16
pop
xor
cmp
mov
shlb
out
pop
lcall
out
add
mov
inc
push
movsb
rolb
cmpsl
xchg
lea
adc
jne
dec
jl
jle
call
call
xor
cld
adc
addr16
mov
jno
xchg
add
sarl
std
xchg
sbb
fisttpll
cmpsb
jp
aad
clc
inc
xor
inc
pop
stos
stc
aam
out
dec
popf
adc
imul
ret
xchg
mov
add
jg
lret
push
adc
sub
rcl
enter
outsb
pop
in
mov
je
popf
xor
jmp
add
xacquire
pusha
adc
push
sbb
dec
and
dec
movsb
cmp
daa
jbe
mov
loopne
fildl
pushf
rorb
psllq
jle
inc
adc
inc
push
in
xchg
and
jge
mov
add
js
scas
test
dec
ss
stc
cmp
pop
insb
sbb
mov
add
leave
aas
push
inc
inc
dec
xlat
adc
sub
push
sub
out
add
xchg
call
xchg
inc
aam
xor
mov
sbb
push
sbb
mov
imull
add
jl
fldpi
xor
into
jne
rcll
repnz
dec
mov
popa
xor
jecxz
outsb
cmp
pop
add
or
dec
loope
popa
mov
xlat
mov
ja
adcb
out
mov
ljmp
add
loop
xor
mov
adc
aaa
push
cmc
fs
repnz
push
cwtl
mov
mov
adc
pop
ret
mov
scas
push
mov
imul
push
fisubl
xchg
xlat
ja
ror
mov
and
mov
mov
loopne
call
mov
jne
pop
or
inc
mov
sti
cmp
ret
pushf
aad
imul
inc
mov
xor
cmp
fiaddl
int3
add
lods
push
cmc
flds
jl
or
bound
sub
fwait
push
out
cmc
mov
inc
sbb
mov
pop
mov
or
cmp
clc
sub
push
cmpsl
fisubrl
mov
hlt
lahf
mov
ret
sub
sub
xor
or
mov
ss
push
insb
jo
and
pop
cmpsl
out
cltd
std
arpl
in
fsubrl
push
mov
mov
jnp
test
out
inc
rcrb
dec
icebp
test
dec
cwtl
stos
movsl
js
and
xor
jb
sti
xchg
sete
ror
and
mov
and
insb
jbe
les
fwait
mov
lods
sahf
push
sbb
inc
lahf
push
ljmp
cltd
fimuls
std
aad
movsb
fdiv
in
fwait
xor
push
popf
lods
decl
cmc
addr16
cmp
stos
sub
jb
mov
test
inc
dec
loop
movsl
inc
aam
pushf
imul
lret
push
fdivrs
leave
sub
lds
outsl
call
mov
mov
inc
aad
je
inc
in
cltd
pop
scas
ret
cmp
xorl
push
cmpsl
and
movsb
repz
and
cmp
xchg
push
enter
jbe
ss
xchg
push
cmp
dec
imul
fistl
or
or
mov
mov
mov
testl
push
fs
sbb
lds
testb
add
ds
movsl
test
mov
inc
movb
fwait
push
cmpsb
inc
adc
int3
hlt
sti
xor
mov
mov
ret
ret
pop
dec
and
ss
data16
divl
out
mov
shll
outsl
or
push
roll
mov
cltd
call
pop
es
and
mov
sub
cmp
mov
jecxz
sub
xchg
loop
std
push
mov
xor
xor
les
es
inc
mov
les
call
inc
aas
push
xchg
sbb
mov
das
test
pcmpgtd
popa
xchg
inc
les
aad
push
lods
cld
mov
aaa
stc
nop
outsl
mov
xor
loope
xchg
lcall
jle
ja
add
lcall
cwtl
ljmp
pop
icebp
xchg
iret
dec
movsl
ja
add
dec
mov
adc
incl
fisttpll
add
or
add
scas
push
aam
push
jg
mov
ds
std
jb
or
pop
mov
jecxz
xor
cltd
imul
dec
mov
inc
cwtl
movsl
mov
sbb
loope
lret
dec
sbb
aas
xchg
loop
and
or
popf
cmp
sahf
xor
mov
inc
in
mov
divb
xor
dec
sbb
xor
add
sub
out
ds
xor
fildl
xlat
dec
hlt
es
cltd
add
xor
jle
icebp
pop
loop
stos
fdiv
jns
and
push
or
xchg
mov
fldt
nop
inc
xor
loop
mull
inc
popf
sub
jne
dec
xchg
mov
add
cltd
cwtl
jg
rcrb
shl
push
fcoml
pop
add
add
inc
xlat
adc
gs
pop
js
pushl
pop
mov
dec
and
lea
sbb
fwait
xchg
rorl
ret
loop
outsb
testl
repz
test
inc
dec
pop
pop
lods
ja
hlt
loop
ss
andl
mov
fisttpll
push
loope
mov
add
pop
lahf
mov
inc
gs
jae
fwait
repz
xchg
xchg
jl
jb
sbb
mov
test
imul
mov
or
pop
imul
pop
jmp
divl
dec
imul
mov
xchg
ret
cmc
popf
xchg
and
cmp
fdivl
jae
inc
xlat
rclb
or
cli
adc
imul
call
and
aas
ficoml
pop
ret
push
sub
stos
mov
add
cmp
adc
out
iret
fstps
dec
jno
out
addr16
ljmp
popf
or
movsl
xor
xchg
mov
adc
inc
ficompl
pop
subl
or
jae
xchg
sub
xlat
mov
xchg
inc
js
jns
adc
mov
pushl
aas
xor
inc
fsubs
aaa
pop
je
lcall
fisubrs
rol
xchg
stc
popa
mov
andb
and
xor
jg
cmp
mov
insb
rcll
lods
mov
adc
fnsave
out
mov
test
lahf
lea
xlat
ret
jge
ja
dec
xchg
add
jo
out
int
mov
xor
sbb
mov
fstl
call
jg
push
insl
sbb
movsb
repz
or
push
gs
and
fldl
aam
daa
stc
cltd
add
sbb
xchg
add
mov
push
out
mov
ret
repz
mov
loope
inc
and
roll
shlb
lods
les
inc
mulb
cmpsb
shlb
or
inc
mov
fdivrl
iret
jmp
stos
pop
pop
ficomps
icebp
stc
jo
lods
mov
inc
push
jmp
xchg
adc
into
mov
xchg
in
aaa
push
mov
xchg
je
pop
dec
andb
dec
jl
dec
adc
fnstenv
mov
das
into
sub
push
and
into
or
xchg
xchg
test
xchg
sub
pop
push
imul
cmp
and
and
pop
repnz
mov
inc
testl
aad
push
push
dec
insl
jge
bound
inc
stos
inc
mov
loopne
popa
adc
fwait
and
jo
mov
repnz
pop
int3
sarl
inc
cmp
xchg
loope
dec
test
cltd
jns
xchg
pop
fisttpl
sub
and
mov
imul
addr16
xchg
jecxz
mov
jle,pt
or
and
filds
retw
push
rclb
dec
fistpll
dec
and
sub
jl
rol
movsb
sbb
aad
in
aad
mov
xchg
arpl
or
pop
cltd
fsubrs
subb
jne
scas
jp
pop
js
leave
movsl
js
jle
leave
xlat
adc
fadds
pop
sbb
xor
sbb
dec
xchg
xchg
js
hlt
lea
nop
leave
push
fcmovne
add
pop
mov
std
or
pushl
mov
sti
out
cmp
push
not
sbb
jecxz
out
popf
inc
sbb
movb
pop
jl
nop
cmp
movl
outsl
aad
sbb
jbe
mov
push
jb
sbb
mov
mov
iret
imul
jg
cs
notl
js
popf
mov
dec
mov
push
sbbl
popf
or
inc
scas
mov
bound
mov
imul
add
sbb
icebp
inc
decl
cmp
sub
imull
js
sub
xchg
aas
jbe
cmpsl
dec
pusha
jne
test
sahf
sub
aaa
add
fnsave
in
mov
cmp
aaa
mov
xchg
jp
ljmp
les
xchg
jge
fwait
cmpsl
das
lahf
push
mov
maskmovq
testl
call
orl
repnz
mov
push
mov
popf
dec
mov
mov
inc
std
dec
and
pop
push
dec
adc
jl
cmpsb
cmp
add
pop
xor
dec
stc
mov
jbe
xor
cli
adc
incl
movsb
xchg
cmpsl
ja
test
negb
ret
cmp
pushf
mov
mov
jne
addr16
xchg
stos
in
or
in
mov
push
shrl
pop
and
xchg
cmp
cmpsb
adc
cmpsl
iret
pop
adc
ja
popa
fstps
or
push
movsb
mov
lea
mov
fstl
sbb
scas
add
push
sbbb
push
xor
lods
mov
mov
cmp
test
nop
inc
fdivs
lcall
pop
dec
aas
mov
adc
sbb
notb
or
popf
pop
imul
fdivs
jmp
les
stos
scas
mov
or
mov
push
shll
pop
sub
adc
mov
sub
dec
inc
lods
ret
xor
imul
add
inc
fiaddl
sub
hlt
insl
fld
pop
sahf
mov
enter
add
addr16
std
dec
adc
addr16
data16
into
sub
mov
movsl
mov
push
out
lret
mov
jb
aas
push
pusha
pusha
subl
je
inc
lods
push
sub
mov
push
xchg
cmp
mov
xor
jg
jmp
push
mov
lock
dec
and
lods
mov
mov
loop
pop
sub
out
test
decb
and
mov
fcompl
loop
push
jno
add
pop
xlat
xor
es
inc
mov
or
aas
mov
pop
or
and
adc
das
jns
mov
inc
dec
cmp
mov
cmp
in
aam
les
xor
dec
and
std
mov
adc
mov
addr16
mov
inc
je
gs
aad
loop
dec
fwait
sub
daa
mov
dec
out
inc
gs
and
mov
dec
cmp
sub
xchg
push
mov
addl
lods
pusha
push
xchg
das
push
ret
jp
mov
sub
cmp
insb
sahf
in
js
fwait
pop
pop
jne
add
gs
test
mov
mov
cs
cmc
ss
dec
pop
ficoms
lcall
push
push
xor
pop
or
lea
mov
das
out
jge
ret
sub
jle
push
xchg
lea
push
sub
sahf
push
lods
inc
dec
scas
test
fmull
test
and
xor
les
inc
test
stc
adc
mov
lahf
fs
incl
and
cwtl
repz
dec
les
cmc
imul
fwait
push
fisubrl
cmp
and
notl
test
xchg
clc
jnp
push
adc
and
dec
nop
cld
push
cmp
and
nop
sub
not
lret
pop
icebp
mov
mov
mov
push
cmp
jmp
push
push
dec
lea
xchg
push
nop
outsb
push
je
data16
shrl
popa
ret
inc
stos
loopne
jae
cld
xchg
jne
sbb
sbb
test
jge
cmc
jl
pop
cmp
and
pop
psubq
xchg
push
push
inc
clc
or
xchg
dec
dec
adc
add
aad
pop
and
std
mov
call
pop
pop
stos
inc
popf
add
into
xchg
pushf
or
insl
add
mov
sub
mov
iret
pop
add
test
mov
arpl
jae
icebp
movsb
fs
cwtl
xor
hlt
clc
sub
sar
testl
pop
sbb
xlat
jbe
mov
outsb
fstpl
xchg
mov
sbb
loop
mov
inc
adc
js
in
test
fsubrl
mov
sbbb
iret
lret
out
movsb
int
pop
adc
xchg
sub
xor
jg
pop
push
and
mov
jmp
sti
and
cltd
out
push
out
andb
mov
sbb
out
jbe
shrl
sub
imul
fdivrs
mov
addr16
mov
inc
outsl
aaa
aam
mov
sub
das
cmpsb
mov
in
clc
int
xor
cltd
push
push
pop
shl
in
aaa
popa
add
push
aaa
dec
sub
ja
adcb
mov
push
inc
adc
addr16
jno
imul
mov
inc
flds
fnstenv
sub
subb
dec
in
iret
adc
out
rol
repnz
adc
xlat
repz
andl
test
pop
or
push
pushf
push
rclb
dec
decl
pop
adc
mov
mov
das
add
pop
inc
and
add
pop
mov
jmp
inc
fstpt
int
imul
and
cmc
divl
out
sbb
or
push
dec
push
jecxz
cmp
adc
mov
mov
das
cmp
out
scas
xchg
and
or
xchg
jae
mov
mov
clc
ret
jnp
stos
inc
repnz
fwait
push
sub
jmp
push
ss
fwait
rcrl
sbb
fidivs
clc
fbstp
jecxz
cwtl
int3
arpl
mov
push
es
in
orl
and
mov
pop
imul
mov
cld
xchg
fidivs
lret
bound
adc
mov
sub
jge
gs
cmp
xchg
sub
mov
xor
pop
stos
lods
inc
sbb
jb
fldl
sub
or
sub
fidivs
add
inc
flds
ja
cli
stos
xlat
inc
and
push
out
or
dec
xchg
mov
jbe
frstor
ja
xorl
jnp
xchg
sarl
js
pop
jo
fcomip
lea
mov
aaa
pop
test
inc
aaa
mov
lahf
loope
in
lret
mov
pop
clc
mov
jp
out
imull
insl
dec
mov
mov
jle
inc
lahf
pop
imul
mov
in
jno
pop
xchg
fidivrl
mov
lahf
repnz
cld
push
push
repnz
push
repz
push
mov
enter
mov
decl
and
int3
into
out
xor
subb
in
mov
and
adc
mulb
pop
sub
shr
pmaddwd
mov
cmp
push
pop
mov
push
fiadds
leave
cwtl
data16
push
adc
cld
inc
sub
xchg
lods
jge
push
pop
ret
ret
and
loopne
dec
rorl
pop
mov
fdivrs
push
adc
push
cwtl
notb
daa
lcall
sbb
ret
xchg
xor
cmc
or
ss
push
repnz
fistpll
add
push
imul
adc
cli
mov
mov
mov
fdivl
jl
aas
into
ret
out
xchg
insl
leave
adc
mov
xor
jno
jo
cwtl
mov
cltd
lds
mov
mov
imul
and
dec
loop
loope
je
test
mov
adc
ret
adc
lret
mov
xorb
mov
orb
adc
dec
pusha
in
xchg
xor
lock
lcall
popa
ja
inc
mov
sbb
pop
js
inc
jmp
fs
xlat
stc
in
jmp
mov
pop
dec
cmp
sub
jnp
mov
mov
cltd
out
inc
es
fldcw
and
arpl
aad
pop
jle
scas
fcmovb
icebp
mov
fmul
push
add
jp
lock
jno
pop
jo
arpl
rclb
push
es
add
mov
in
xchg
divl
and
push
mov
movsl
pop
out
xchg
loopne
jp
notb
das
jns
loopne
out
les
push
mov
loope
jle
test
push
and
in
loopne
je
vcvtsd2ss
add
ds
mov
mov
or
xchg
les
fbstp
sub
stos
sbb
sbb
adc
jno
sub
ss
repnz
movsb
shll
in
orl
or
out
xor
into
out
push
imul
test
add
mulb
fstps
mov
add
mov
fwait
movsb
aas
push
mov
popa
xor
test
mov
xchg
jecxz
repz
dec
sub
xchg
mov
fstpl
movaps
mov
mov
bound
jns
jecxz
mov
stc
jae
push
sub
mov
dec
aaa
imul
fisttps
addr16
pushf
lcall
push
or
jg
jae
sub
adc
or
and
bnd
fwait
cwtl
js
mov
mov
aaa
addr16
icebp
mov
movsl
mov
adc
pop
clc
adc
cmp
std
or
nop
imul
mov
in
xchg
sub
cmp
jge
mov
sti
or
adc
rcr
sahf
pop
imul
dec
pop
cmp
sbb
popf
dec
inc
pop
jmp
push
jns
push
mov
mov
cltd
pop
imul
lods
add
lea
add
pop
sbb
sub
xor
jbe
pushf
roll
mov
mov
cmp
iret
lods
pop
imul
mov
fidivs
xor
mov
in
dec
shrb
add
scas
hlt
rcrl
mov
push
inc
fsubl
ret
mov
or
std
pop
das
popf
add
push
mov
mov
xchg
push
les
lds
sub
testl
or
adc
imul
sub
pop
icebp
rcrl
and
sub
mov
and
inc
push
shl
xor
flds
adc
xor
mov
sbb
mov
cmp
sbb
adc
stos
mov
add
sub
daa
pusha
dec
aas
rclb
jl
inc
scas
and
mov
cli
in
rcrb
or
pop
mov
and
decb
jp
jo
sub
testl
shll
lahf
mov
mov
jnp
out
mov
push
lea
xor
adc
dec
add
xchg
ss
in
js
xchg
inc
imul
xchg
das
cmp
push
xor
mov
cwtl
in
test
mov
pop
xor
in
push
cmpsl
push
or
or
adc
or
outsl
pop
sbb
lds
jno
lods
jg
add
dec
pop
sub
pop
out
or
jne
pop
out
decb
std
adc
ret
stos
mov
push
xchg
jo
hlt
mov
lcall
icebp
inc
insb
lods
sub
push
adc
sbbl
jmp
dec
or
xchg
mov
xchg
cwtl
clc
inc
xchg
dec
in
addr16
in
push
jl
nop
imul
data16
gs
cltd
jns
mov
shll
sub
and
sti
enter
jno
out
inc
sbb
and
fsts
fnstsw
in
repnz
and
rcl
popf
lods
into
icebp
pop
mov
push
aaa
outsb
mov
push
test
mov
cmpsb
add
push
mov
ja
loop
pop
ljmp
add
fnstenv
xchg
add
jae
adc
push
out
push
sarb
mov
xor
xchg
cwtl
pushf
rorb
xchg
fcoml
or
mov
loopne
dec
subb
jg
fidivs
stos
mov
sar
ret
repnz
out
and
ja
xchg
inc
adc
pavgb
iret
add
push
push
dec
inc
inc
lea
sub
sbb
add
sti
hlt
adc
icebp
dec
cli
cmp
sub
ret
enter
rcll
push
ret
cmp
jno
mov
loope
jecxz
sub
ljmp
or
cs
ret
shll
gs
mov
fisubs
fs
out
mov
das
sbb
aas
jns
add
inc
mov
cwtl
mov
xchg
push
fcoms
push
scas
imul
jge
mov
lcall
in
cmp
hlt
mov
repnz
jmp
push
sbb
mov
in
aaa
aas
fistl
ret
rclb
shrl
push
fidivrs
mov
jnp
cltd
adc
mov
idivb
movl
testl
lret
test
sub
add
inc
pop
out
addl
mov
dec
dec
inc
pop
adcb
sub
mov
pop
mov
pop
sub
push
clc
inc
pop
pop
pop
ljmp
add
lods
mov
and
fiadds
ret
dec
in
sub
stos
mov
mov
testb
or
jecxz
out
in
xor
clc
shrb
cli
mov
mov
jno
push
sub
pop
out
movsb
enter
add
leave
shlb
cltd
loope
pusha
dec
std
jns
das
insl
out
pop
inc
repz
je
repz
jmp
xchg
adc
ja
call
iret
jmp
inc
rcrl
inc
push
xchg
repnz
cmp
testb
push
xchg
mov
lods
inc
das
xor
cmc
lods
xor
mov
aas
mov
pop
fdivrs
gs
mov
cwtl
cmp
mov
inc
ja
cmp
aad
lods
xchg
sub
hlt
adc
mov
add
jle
cwtl
das
loope
mov
into
jae
jbe
test
lret
std
adc
adc
lea
xor
dec
push
mov
cmp
or
lods
fnstenv
shrb
pushf
iret
data16
jb
xor
and
out
and
js
xor
std
push
xchg
dec
rorl
sbb
lret
sti
xchg
inc
imul
push
mov
data16
and
xorb
inc
pop
cs
shl
jge
and
mov
add
outsb
imul
xor
clc
push
and
or
sbb
clc
sbb
sbb
scas
jb
dec
loope
test
adc
cwtl
lock
and
jle
insb
push
push
stos
testl
pop
pop
mov
jbe
xchg
ret
hlt
mov
push
add
xchg
sub
fstpt
dec
mov
repz
xor
and
mov
enter
and
imul
out
cwtl
das
pop
sbb
adc
xchg
mov
dec
or
jl
xor
xor
iret
or
xchg
loope
je
push
mov
into
mov
loope
test
mov
repz
incl
mov
nop
xchg
insl
loopne
add
popf
mov
ret
daa
adc
push
or
sbb
cmp
pop
dec
and
sub
enter
test
jecxz
les
int3
pop
mov
fnsetpm(287
repz
mov
push
sub
adc
push
pop
mov
leave
hlt
xor
inc
mov
insl
pushf
sub
jg
mov
push
inc
cmpsl
or
pop
jl
movsb
cmp
mov
dec
insb
call
ss
int3
mov
dec
ja
mov
pop
ss
ficomps
pop
push
cs
cmpsb
arpl
nop
pushf
arpl
int
js
pop
stc
xor
adcb
arpl
ficomps
and
js
aam
stos
aaa
nop
jge
push
mov
pusha
mull
call
jle
mov
aad
inc
imul
xchg
and
xor
jl
stos
shr
pusha
idivl
filds
cmc
paddb
xchg
mov
push
cmp
xchg
insb
lcall
jle
push
mov
je
lahf
in
push
inc
and
out
aad
js
out
loop
inc
jae
add
push
sbb
es
mov
fmul
ds
stc
outsl
jle
cmp
pop
imul
mov
mov
mov
add
cmp
enter
pop
mov
fwait
xchg
pop
ss
mov
cwtl
sub
inc
aas
ret
mov
bound
ss
or
insl
int
testl
cmpsl
dec
add
jo,pn
sahf
and
adc
xchg
cld
pop
mov
cld
or
pop
lds
cmp
and
pop
pop
jl
lods
inc
into
mov
mov
fcoml
or
cmpsl
je
sbb
jp
mov
das
ja
rorl
daa
cmc
in
lret
mov
mov
pop
mov
fidivrl
add
xor
loop
pop
adcb
or
xchg
inc
in
sahf
cmp
mov
xchg
cmp
stos
std
lret
je
xor
shlb
fistl
mov
adc
sub
lea
fucomi
mov
lea
sti
fcoml
jge
push
ljmp
add
xlat
xor
pop
cmp
inc
mov
out
jbe
stos
mov
jl
mov
cmpsl
dec
lret
adc
jp
in
cld
mov
adc
jne
xor
arpl
inc
mov
and
aaa
incb
sub
push
stos
iret
outsl
sbb
sub
mov
push
mov
jl
call
lock
adc
sub
jecxz
mov
stc
mov
lcall
les
cld
xchg
or
push
sub
orl
pop
pop
arpl
add
aaa
sbb
xchg
test
push
xchg
fildll
mov
and
pop
aaa
mov
in
mov
push
test
addb
mov
or
dec
aas
sub
pop
pop
cmpsb
dec
dec
mov
or
ja
popf
call
mov
push
cmp
cmp
push
inc
mov
mov
lret
xlat
push
imul
jns
imul
mov
testl
fucomip
ja
xor
addr16
fsubrp
xchg
mov
lea
lds
jae
out
dec
fldt
jae
scas
jo
loope
push
jle
loopne
sbbb
outsb
aad
sti
je
ret
cmp
xchg
je
pop
fnstsw
addr16
jge
aad
enter
shrl
dec
mov
mov
stos
inc
inc
imul
in
mov
mov
mov
repz
cwtd
add
ja
inc
lock
in
loope
mov
idivb
or
ds
fsubs
in
jnp
cmc
lods
sbb
incb
jl
or
in
jmp
subb
mov
mov
jne
scas
dec
notb
ret
xlat
add
bound
xchg
in
fwait
lods
cwtl
movsl
mov
stos
test
cmp
test
ljmp
jns
movsl
and
cmp
aad
dec
pop
or
dec
jbe
jnp
jne
pop
push
jae
hlt
test
pop
les
pop
xor
cmp
pop
mov
dec
xchg
pusha
mov
jmp
inc
sbb
dec
jae
mov
subb
inc
fdivl
into
ret
shll
imull
popa
leave
in
mov
sti
mov
cmp
les
pop
jns
ret
arpl
sub
xor
int
cld
lea
jge
popf
dec
inc
adc
leave
dec
aam
xchg
test
xor
or
mov
lods
test
mov
out
adcb
xorb
mov
cmp
ret
cmp
hlt
pop
and
pop
cltd
or
test
mov
xchg
jp
fxch
fwait
fwait
pop
pop
pop
mov
or
aas
mov
push
fs
inc
dec
jb
es
insl
mov
dec
cmc
lea
dec
repnz
addr16
cltd
ss
pusha
jmp
shr
repz
xchg
mov
popf
mov
add
scas
lret
mov
orl
cmp
xchg
ret
sbb
cld
push
scas
das
cmp
inc
xchg
cmc
movsb
dec
in
cld
mov
aad
jp
loop
ljmp
out
cld
movsl
jl
xor
mov
dec
lahf
push
sub
cltd
int3
test
adc
mov
sarl
in
adcl
mov
adc
inc
sub
loope
data16
dec
adc
pop
pop
jp
cli
repz
je
cmp
push
in
add
inc
leave
sbb
sti
popa
xchg
and
adc
test
into
push
sub
fistl
ds
jecxz
imul
mov
lret
iret
fsts
mov
lea
data16
jge
inc
xchg
xor
lock
fs
adc
jecxz
xchg
xchg
shll
jl
sbb
push
lret
lret
mov
int
push
call
pop
push
jnp
lods
jne
sbb
mov
into
out
sbb
in
cmp
int3
inc
pop
fsts
icebp
adcl
and
sbbl
and
shlb
test
mov
jmp
mov
mov
jp
jmp
dec
lock
ja,pn
outsl
inc
jp
ret
int3
inc
scas
sub
adc
jnp
push
int3
and
les
repnz
pusha
cs
dec
fcomps
stos
mul
fstpt
addr16
jnp
cmpsb
mov
jb
dec
les
cld
rolb
lcall
andl
fchs
fsts
les
pop
push
jo
mov
cmpsl
dec
xor
int3
fcompp
ja
adc
out
sbb
dec
cmpsb
aad
mov
nop
add
lret
push
pusha
mov
int
lea
add
dec
jmp
or
sbb
adc
lea
jbe
imul
mov
outsb
dec
fistpll
xchg
ret
and
add
mov
sti
leave
pop
gs
jmp
inc
sbb
dec
inc
push
cmc
outsl
pop
addr16
shll
jnp
sbb
insb
dec
sbb
inc
push
outsb
int
pusha
hlt
pop
out
and
mov
mov
negb
mov
ret
movsl
xor
xchg
jp
pop
fsts
aas
fwait
repnz
mov
lahf
data16
or
mov
rolb
cmp
pop
inc
fnsave
bound
aam
gs
filds
mov
push
push
push
push
mov
aas
and
mov
pop
mov
xor
xor
jae
stos
shll
adc
test
xchg
pop
xor
adc
enter
mov
clc
cmp
pop
jg
je
vpsubb
into
mov
push
outsl
sub
add
xchg
mov
jmp
pop
inc
scas
pop
cmp
adc
sbb
dec
push
xor
sbb
iret
jo
jmp
popa
fincstp
sub
pop
mov
mov
test
xchg
jnp
or
adc
mov
mov
ret
out
add
fdivl
insb
test
ds
rcrl
sbb
xchg
cmp
mov
stos
arpl
xchg
outsl
decb
rcrl
cmpsl
pop
mov
mov
pushf
pop
inc
pop
jne
repnz
push
push
jg
and
test
es
jmp
imul
mov
idivb
cwtl
push
das
in
push
int
pop
rcrb
aam
mov
push
icebp
pushf
xchg
mov
lret
rcrw
std
cld
jns
js
sbb
xor
lods
ss
loopne
rclb
mov
inc
mov
stos
sbb
sub
lds
cld
add
iret
stc
push
jo
ret
cmpsl
cld
or
cs
cmpsb
and
xor
push
gs
xchg
mov
mov
xor
ljmp
jb
out
add
add
insl
addl
shlb
jae
outsb
jl
mov
inc
insb
xchg
sbb
pop
push
into
dec
test
out
xlat
sub
shl
dec
push
push
pop
xchg
mov
mov
dec
xchg
into
mov
into
loop
jecxz
into
inc
int
adc
lods
clc
sub
mov
push
stos
rcrl
aaa
jnp
and
pushf
test
dec
test
mov
inc
loopne
insb
popf
mov
imul
sbb
xlat
fs
jge
adcb
pop
cs
les
and
into
aaa
out
add
in
mov
into
fldt
lret
lret
je
xchg
jbe
ss
dec
mov
adc
pop
push
lods
sub
and
cmp
pop
mov
sbb
xchg
mov
pop
insl
mov
inc
lods
cmp
and
fstps
xchg
cmpsb
cmp
sub
cmpsb
push
popf
pop
stos
jp
mov
adcb
stc
xchg
lods
or
loop
movsl
or
aas
mov
or
pusha
jns
fisubrs
pop
bound
add
int3
dec
mov
rcrb
lds
enter
lcall
sbb
shrb
mov
sub
insb
aas
in
stos
pop
cmpl
pushf
pop
fsubl
jne
je
jp
or
mov
mov
xlat
fcomps
fcmovb
jne
idiv
out
and
push
push
fisttpll
pop
repnz
sbb
pop
mov
xor
jmp
xor
ljmp
inc
fstl
cmp
in
out
adc
xchg
push
jl
pop
cmp
xchg
ss
add
dec
push
mov
pop
push
mov
addr16
es
out
out
add
mov
dec
mov
fucomp
jae
jmp
sub
les
jbe
fcom
mov
push
xor
loope
fisttpll
mov
std
xchg
xchg
rcll
ficompl
daa
out
pushf
lret
inc
scas
cld
fidivl
or
push
add
mov
mov
ss
mov
loopne
cmp
dec
inc
data16
cmp
push
cmp
xchg
not
sub
push
mov
cld
mov
incl
data16
mov
mov
stc
xor
and
pop
pop
dec
shlb
jp
adc
push
fstp
mov
fs
or
dec
int
mov
push
inc
push
imul
jbe
pop
adc
shlb
xchg
and
dec
ret
js
mov
jbe
lods
popa
aad
sbbl
sbb
idiv
repz
adc
inc
jae
stc
xchg
ss
inc
inc
test
pop
cmp
cmc
and
call
or
xchg
xchg
push
insb
mov
jmp
adc
inc
or
jno
or
add
jae
xchg
stos
cmp
lea
push
sahf
hlt
pop
into
jb
loop
push
lock
jmp
in
inc
push
repnz
jno
inc
jmp
es
fstl
imul
cmp
ret
jle
xchg
or
les
test
arpl
mov
cmp
and
pushf
push
dec
mov
xor
outsb
lret
cmp
imul
je
mov
push
daa
or
mov
popf
adc
mov
push
or
aaa
cmp
inc
cltd
popl
cmp
push
rcr
or
xchg
and
mov
das
in
iret
lahf
push
xor
jne
push
jmp
pop
push
jle
lods
pop
out
fistps
adc
and
jne
js
add
cltd
jg
inc
and
fs
fcoml
sbb
jb
inc
mov
add
or
sarl
pop
pop
cmc
mov
add
cmpsb
or
xchg
mov
out
icebp
push
jbe
lds
ror
into
imul
leave
xor
fldenv
jb
pop
int3
inc
pusha
out
push
sub
test
jnp
push
xor
fsubrs
jge
and
push
cmp
sbb
sbb
jmp
mov
in
addr16
imul
lahf
rorb
mov
and
add
sub
inc
insb
push
jns
mov
js
movsl
dec
iret
out
int3
inc
and
dec
loopne
xchg
adc
cmpsl
sbb
push
xor
scas
xchg
jp
int
aaa
cmpsb
mov
das
xor
pusha
stc
ljmp
lret
test
cmc
cmp
lods
test
clc
fidivs
jmp
mov
inc
cld
push
jae
xchg
mov
add
mov
lds
mov
inc
jbe
push
out
cwtl
fdivs
into
stos
push
rorb
sub
outsl
xlat
stos
cli
mov
sub
mov
push
cmp
jecxz
test
xlat
lcall
mov
mov
mov
cltd
fsts
icebp
scas
inc
cmp
loope
ds
iret
add
inc
cwtl
dec
repz
out
add
pop
add
adc
mov
cwtl
cmp
dec
or
repz
in
cli
lcall
inc
add
stc
clc
dec
xor
clc
mov
sub
xchg
lret
aam
popa
push
mov
cld
add
in
pusha
popf
in
mov
mov
fwait
cmp
sbb
mov
xchg
sub
adc
imul
in
mov
xchg
cli
int
add
dec
pop
and
lea
jb
inc
lock
push
jne
pushf
popf
lods
dec
add
xchg
cs
jl
mov
mov
js
out
pop
xor
rcrb
lds
test
jge
les
mov
sbb
bound
movsb
in
cmp
lds
lret
imul
stc
jmp
sub
rcrl
add
push
mov
enter
pop
mov
dec
pop
or
push
adcl
ret
lock
xor
and
into
inc
sub
mov
flds
ss
inc
out
fisubrs
mov
gs
pop
push
jecxz
dec
clc
pop
cmc
sbb
mov
push
lods
push
lods
add
cmp
arpl
paddw
das
xor
stc
cmp
push
jno
add
inc
cmc
push
sbb
mov
lret
jo
xor
inc
inc
mov
dec
fidivrs
sub
into
cltd
mov
cwtl
fsubl
icebp
das
jns
movsb
fwait
add
pop
ret
stos
xchg
cmc
sub
xchg
push
rcr
cmp
sbb
dec
mov
xor
test
les
push
fadd
jno
jl
subb
out
bound
icebp
aaa
pop
xchg
cmpsb
lods
xchg
add
loopne
fldenv
xor
addb
pusha
pop
pop
xchg
ljmp
test
dec
xchg
test
inc
fildl
sbb
pop
sub
jo
stos
xorb
jp
out
cmpsl
insb
inc
bound
fbld
into
mov
xchg
test
xchg
push
add
es
sbb
out
adcb
pop
adc
inc
push
out
das
leave
flds
pop
decl
push
repz
mov
lods
andl
xchg
popf
dec
mov
jge
scas
mov
add
scas
jne
loope
aad
fwait
push
out
shll
inc
shrb
mov
adc
hlt
mov
into
aas
adc
je
xor
stos
aas
inc
fcoms
setns
jp
mov
jnp
sbb
iret
jns
mov
push
test
out
stc
fnstenv
loopne
outsb
dec
push
pop
push
push
mov
pop
out
out
aas
sbb
jbe
shlb
adc
jp
adc
icebp
stos
vphaddwd
cmp
push
icebp
jo
flds
push
dec
sbb
popa
clc
adc
pop
jecxz
sarb
push
lock
mov
sbb
pop
popf
aad
mov
fdivr
andb
inc
cwtl
mov
lret
push
adc
std
mov
fcoms
xchg
lret
jo
jecxz
push
xchg
push
test
inc
shrb
sbb
mov
pop
movsl
xchg
xchg
add
orb
cwtl
jns
std
sub
dec
adc
jg
add
mov
sbb
inc
dec
sbb
mov
or
inc
dec
dec
divb
scas
jne
sar
fcompl
jbe
xor
xchg
sub
push
jns
fsubrp
mov
inc
push
testl
mov
jl
shll
jg
pop
out
mov
jae
mov
add
fwait
stc
nop
leave
std
jecxz
pop
push
lcall
insl
push
mov
jb
test
add
jmp
sub
scas
and
int
mov
mov
push
push
das
std
nop
add
sbb
xor
pop
cmp
adcb
pop
sahf
jmp
lods
add
fidivs
addr16
ljmp
in
cmp
stc
pushl
jno
xbegin
sbb
scas
fistl
popf
xor
jge
xchg
lahf
subl
jp
ds
aaa
lds
pop
ret
sub
xor
mov
stc
mov
adcl
add
inc
push
fnsave
popa
insb
rorl
testb
sub
mov
mov
aad
sbb
mov
shll
pop
cmc
mov
aad
pop
pop
cmp
in
jb
mov
fnstenv
mov
les
push
outsl
jle
imul
jae
arpl
sub
es
iret
push
push
dec
xchg
jne
into
mov
shlb
test
pop
aaa
in
js
aas
push
das
dec
mov
push
pushf
cmp
jb
outsl
and
testb
fimull
sub
sbb
mov
shll
pop
push
add
js
push
mov
popf
outsl
rcrb
popf
incl
fbstp
xchg
adc
add
xchg
sub
test
push
gs
jecxz
jo
push
call
push
adc
inc
pop
jns
sub
xor
test
adc
jg
out
hlt
xorl
subb
movsb
and
push
add
pminub
jecxz
sti
jp
and
and
sub
test
imul
loop
rolb
aaa
es
imul
cld
orb
and
and
icebp
sub
jecxz
ja
push
mov
add
cmp
hlt
mov
repz
jl
jnp
cmpsb
sbb
and
push
jo
mov
inc
inc
popa
mov
push
clc
cmpsb
push
inc
push
imul
pop
dec
mov
xchg
popa
xor
xchg
mov
js
pop
leave
pushf
cld
aam
and
cmp
notl
dec
negb
sub
mov
fsub
inc
out
or
shll
fistl
or
jno
dec
loop
cld
mov
lret
inc
call
jbe
mov
add
sbb
mov
pop
push
fimuls
fidivs
or
fxch
xor
push
ljmp
leave
sbb
mov
cwtl
xchg
pop
mov
daa
data16
aad
movsl
pop
dec
mov
dec
pushf
insl
or
dec
ss
repnz
push
fdivl
add
test
pop
adc
xchg
xchg
sub
xchg
mov
or
sbb
jo
adc
inc
pop
lods
rcll
notb
mov
scas
jno
mov
mov
fiadds
sub
les
jns
xor
jecxz
cwtl
lods
fistpll
cwtl
ret
mov
pop
scas
mov
push
xor
fcomps
into
arpl
decb
xchg
leave
out
cwtl
incb
sbb
xchg
or
into
fldenv
push
sub
mov
cwtl
stos
stc
iret
mov
adc
mov
outsb
sbb
fbld
ss
test
ja
sbb
sete
dec
mov
aas
add
or
and
fs
or
xchg
and
xchg
cmp
mov
outsb
lret
sub
mov
push
out
frstor
pop
mov
mov
lcall
pop
and
enter
xor
push
mov
inc
jnp
xlat
outsb
sub
dec
cmc
mov
mov
call
and
adc
ja
pop
cmc
xchg
cwtl
imul
out
xchg
xor
add
nop
daa
jg
xchg
push
je
add
jns
sbb
pop
jo
add
addb
aas
out
imul
push
filds
ljmp
pushf
cmp
jg
jae
dec
dec
subb
jnp
lret
lock
fsubr
leave
mov
rcll
mov
loopne
mov
xchg
loopne
dec
loope
mov
out
cwtl
inc
cmp
pusha
in
lret
sti
or
inc
les
lods
out
cmp
addr16
push
andb
mov
dec
lds
imulb
stc
push
sahf
dec
pop
or
mov
sahf
dec
out
jg
into
lds
xor
adc
sbb
loopne
mov
scas
cmpsb
mov
lcall
aaa
cmp
icebp
sub
popf
jb
les
rorb
and
mov
mov
cmp
data16
lds
mov
inc
jns
pop
scas
adc
xchg
dec
adc
aam
pop
mov
sub
stos
fadds
pop
mov
cmp
scas
and
clc
ljmp
mov
daa
and
dec
outsb
xchg
pop
fiadds
sbb
dec
imul
test
fisubrs
adc
mov
mov
popa
mov
cltd
add
jno
aad
rcll
lea
push
js
hlt
mov
pushf
pop
cwtl
test
sbb
inc
bound
push
push
adc
sub
inc
ljmp
mov
out
popa
ret
add
add
pop
xchg
fsubl
mov
mov
pop
fidivs
mov
jecxz
test
data16
repnz
xchg
jl
xor
push
pop
in
push
mov
ret
dec
jp
mov
pop
sub
mov
sti
sti
mov
hlt
test
mov
or
sub
ss
stc
insb
jge
std
add
and
cmp
imull
in
mov
insl
cmp
mov
cltd
and
push
mov
or
push
push
adcb
das
or
cmp
cmp
push
call
or
sbb
xchg
ljmp
rorb
mov
in
loope
jne
lret
notl
insb
mov
jnp
insl
in
xor
mov
cmp
lcall
lret
loop
jmp
scas
sub
test
add
incl
out
mov
leave
sbb
stc
xor
mov
pop
jp
mov
and
shl
mov
movsb
js
loope
add
jbe
push
insb
mov
jle
pop
scas
fwait
dec
in
fwait
cli
shrb
push
leave
pusha
cmpl
lods
mov
lret
mov
daa
mov
stos
jmp
iret
jb
jne
out
jecxz
jo
ja
in
call
or
imul
mov
pusha
aaa
stos
push
mov
jmp
cmp
stos
adc
mov
push
lods
xchg
je
push
pusha
and
ret
or
mov
movsb
jl
add
mov
sbbb
dec
mull
ja
int
int3
sbb
sub
jge
and
sbb
jg
inc
pop
or
inc
repnz
xor
cld
cmpsb
sbb
or
outsb
mov
aam
movsb
dec
cmp
mov
fs
xchg
sub
xchg
pushf
arpl
xchg
mov
jno
je
cmpsb
sbb
gs
mov
mov
xlat
outsl
adc
data16
cmp
or
cmpsl
push
adc
gs
or
dec
outsl
icebp
ficoms
mov
pop
dec
ljmp
lahf
adc
adc
push
add
enter
adc
scas
ret
cmpsb
cmp
stos
aad
sbb
aas
ja
or
mov
xchg
jmp
or
icebp
fwait
inc
and
popf
dec
dec
sbb
jo
pop
out
or
add
inc
int3
dec
sbb
adc
sub
stos
leave
cmp
bound
je
dec
inc
faddl
and
stos
ss
cmp
sbb
jl
push
or
stos
mov
mov
and
pop
xchg
cli
push
jne
and
leave
mov
mov
dec
movsl
mov
xchg
jp
scas
bound
sub
jo
cmc
push
pop
mov
movsl
add
outsl
push
mov
jae
xor
je
sub
popa
inc
jle
push
or
jle
fiaddl
and
in
fcoml
inc
andl
lahf
mov
sti
je
dec
xor
add
stc
dec
dec
movsb
dec
sbbb
xchg
mov
iret
clc
push
pop
sub
and
cltd
ret
and
sbb
testb
jno
push
sub
xor
mov
mov
sub
jno
jl
and
gs
mov
sbb
data16
out
subb
lret
sub
dec
xchg
inc
sub
f2xm1
iret
mov
mov
orb
jp
cwtl
mov
mov
jb
cmp
cmp
fdivrp
testb
sbb
cmp
mov
sub
fcmovb
mov
add
scas
push
or
cmpsl
scas
out
mov
lahf
mov
pop
mov
xor
test
mov
mov
or
pop
lahf
lcall
fnsave
testl
xchg
cmc
push
dec
jle
cld
outsl
in
push
mov
jo
into
xor
and
inc
jno
lahf
sbb
outsl
clc
mov
xchg
push
std
out
dec
mov
loopne
ja
mov
mov
jno
mov
add
loopne
mov
lock
pop
sbb
js
cmp
enter
adc
shll
jo
jp
fmuls
mov
lds
mov
fcomp
mov
ja
xchg
cmp
inc
in
xor
pop
xor
push
icebp
mov
mov
push
add
imul
movsb
push
jo
aas
xchg
in
out
imul
sarb
lcall
push
lcall
adc
sti
mov
sbb
insb
pusha
pop
pop
and
scas
out
iret
push
xchg
push
gs
push
cltd
in
stos
mov
iret
push
cmp
imul
addr16
push
scas
and
xchg
jle
sub
dec
pop
shr
jns
lds
fdiv
xchg
pop
out
adc
add
bound
jae
clc
jp
and
and
fidivl
push
addl
aaa
fwait
repz
add
inc
cwtl
pop
add
sbb
push
cmp
cmp
sbb
xor
sbb
mov
and
fiadds
ja
pop
jle
into
pushf
ljmp
ja
dec
add
vcvttsd2si
shrl
jge
jbe
jecxz
stos
sbb
push
dec
xor
mov
aad
frstor
sub
xchg
xchg
mov
jge
fiadds
xchg
lret
lds
shl
xor
jbe
mov
or
or
pop
loop
sti
test
stos
stos
outsb
jl
stc
xchg
jmp
xchg
dec
test
call
jbe
aaa
fs
dec
lds
andl
sub
dec
mov
add
sub
aad
mov
adc
sarb
jae
pop
cmp
out
mov
imul
dec
stc
mov
cmp
ds
push
jo
jne
outsb
xchg
xchg
ret
or
cmp
popa
adc
pop
cmp
loope
pop
xor
into
test
pop
sub
ja
fcoml
inc
ljmp
sbb
mov
mov
jle
xor
push
in
adc
mov
es
ret
mov
pop
adc
add
pop
mov
pop
stos
xlat
fstpl
pop
inc
jno
push
pusha
pop
stos
sbb
mov
ret
ret
mov
movsl
push
sbbb
mov
pusha
or
jbe
push
cmp
and
pop
aaa
shr
sub
push
rcrb
pop
xlat
mov
les
arpl
adc
and
cld
int3
dec
test
xor
insb
sbb
pop
loopne
outsb
sbb
jbe
sbb
cmp
sahf
pushf
or
push
mov
and
mov
js
add
frstor
fbld
movsl
sarl
fsts
jle
scas
xor
out
sahf
cmc
push
ds
in
or
out
mov
dec
loopne
iret
xor
fisubl
push
and
mov
push
dec
push
shrl
in
push
mov
lock
ja
mov
orl
jb
inc
in
std
dec
pushf
dec
pop
std
pop
add
pop
bound
jle
andl
ret
cld
xchg
mov
adc
in
lret
and
xor
fmulp
and
mov
fldenv
jb
mov
divps
lea
std
sbbl
xor
movb
arpl
aam
rcrb
loope
adc
jns
push
mov
mov
sbb
fidivrl
add
fidivl
jne
adc
clc
subl
fldenv
shrb
or
std
adc
std
xchg
stos
push
push
int
pop
cmpsl
cmp
adc
pop
cmp
xchg
inc
or
jg
cmpsl
adc
push
mov
popa
fld
in
push
std
xchg
xchg
jo
mov
sbb
rcl
pop
xchg
mov
int3
movsl
pop
mov
shrl
dec
mov
xorb
inc
inc
sub
xchg
sub
dec
sbb
mov
jbe
sbbb
mov
out
jecxz
mov
inc
rorl
pop
mov
sub
bound
and
push
inc
cs
adc
imul
stc
gs
out
adc
xchg
and
mov
int3
inc
mov
mulb
int
jbe
aad
repz
jle
mov
or
pop
mov
dec
in
in
pushf
fistpl
int
imul
out
mov
nop
xlat
xor
sbb
mov
fsubrs
ret
cmp
mov
mov
pop
clc
add
sub
rcrb
xchg
imul
cs
adc
shrl
mov
sbbl
lods
shll
scas
jno
ds
test
jae
stos
mov
sti
das
or
in
xchg
and
test
jg
mul
bnd
outsl
dec
shl
mov
subb
call
xor
or
mov
insl
hlt
xchg
fsubr
mov
mov
push
mov
imul
add
pop
out
mull
push
mov
pop
shlb
scas
mov
movsb
movsb
aam
in
icebp
cli
or
test
cmpsb
pop
dec
cmc
add
int3
fs
jnp
out
mov
jecxz
fsubrp
iretw
fidivrl
sbb
or
andb
sar
and
ds
shll
adc
es
dec
popl
mov
out
mov
dec
lods
int
jmp
add
pop
aam
loope
loopne
jbe
xor
pop
sbb
rcl
add
mov
adc
adc
rcr
test
mov
sub
ja
or
pushf
pop
dec
mov
pop
cmpb
aas
shlb
inc
dec
fildl
addb
xor
mov
xor
cmp
dec
sub
dec
push
aaa
int
jmp
mov
dec
pop
mov
jb,pn
add
dec
lret
mov
fldenv
xchg
cmp
stos
ret
outsl
jne
push
into
mov
mov
outsl
jmp
sbbb
movb
ss
sbb
es
cmp
pop
stos
mov
cwtl
in
cltd
dec
xchg
arpl
mov
decb
popf
jns
clc
jmp
and
negl
subl
cld
push
mov
push
or
in
and
stos
gs
jmp
pushf
scas
sbb
subb
lea
sub
push
notl
or
imul
cltd
xchg
and
jle
sbb
jecxz
add
data16
rolb
add
xchg
leave
lcall
or
loope
mov
fcmovu
push
je
ss
push
test
adc
shlb
mov
dec
std
movsb
dec
imul
add
pop
add
adc
jp
pusha
inc
cltd
or
aas
xchg
inc
popa
repz
std
sbb
inc
test
and
ret
jg
mov
jmp
lret
add
out
leave
push
jb
mov
data16
mov
hlt
xchg
pop
aad
sbb
shlb
jge
movsl
sarl
mov
mov
jg
pop
push
adc
cmp
jne
mov
js
test
popa
push
sarb
notl
push
lods
mov
push
sbb
js
movsl
lods
movsl
sti
push
mov
add
aam
mov
dec
shl
sahf
xlat
mov
cs
sbb
cmpsl
jno
jl
lahf
jae
adc
jge
out
sbb
je
dec
adc
ds
rcrl
test
cmp
dec
fwait
leave
int
out
push
fwait
xchg
push
mov
lods
in
fidivrl
adc
inc
or
add
lret
out
jmp
js
adc
inc
sar
iret
fwait
sahf
mov
std
cmpsb
jmp
test
dec
jns
ror
dec
pop
cli
hlt
sbb
or
idivb
pop
call
push
mov
inc
bound
adc
mov
pop
cltd
xor
sbb
or
inc
dec
sbb
out
ret
xchg
shlb
insl
inc
adc
cltd
jae
add
push
inc
insl
push
sbbl
aas
lret
push
loop
push
dec
lods
clc
jne
data16
mov
repnz
pop
imul
cld
adcb
pop
jecxz
mov
mov
push
cmp
add
dec
inc
lret
lret
cmp
ja
andl
sbbl
and
xchg
sub
cmp
and
xchg
adc
and
cmc
push
imul
or
test
mov
dec
imulb
andl
or
add
test
std
popa
jns
lahf
stos
sbb
test
add
mov
ja
sub
test
mov
ffree
popa
lret
test
mov
cli
mov
add
mov
jb
lea
jbe
push
jecxz
and
pop
imul
je
notb
xchg
sub
mov
push
ds
jnp
xchg
aas
push
sub
push
out
clc
xchg
sbb
xchg
xor
and
call
cmpsb
icebp
push
ret
addb
in
jnp
jnp
jne
pop
or
cmp
sub
cld
or
push
movsl
push
fisttpll
jp
insb
testb
popf
cmc
inc
mov
scas
push
push
cs
add
adc
in
pop
insl
out
cld
sahf
outsb
mov
push
in
mov
ret
bnd
loop
enter
aam
stc
mov
std
xlat
pop
xor
mov
sbb
fadds
lds
das
add
ret
sub
dec
and
fsubrl
push
rorl
add
out
inc
push
jecxz
hlt
xchg
jne
lret
icebp
int3
arpl
adc
dec
add
sub
jecxz
push
jg
adc
push
pop
sbb
and
mov
and
shlb
and
mov
cld
int3
fs
pop
shl
mov
in
fldl
cmp
xlat
popa
pusha
notl
repz
push
mov
out
subb
test
insb
adc
testl
mov
loopne
xor
out
lock
xchg
mov
push
mov
into
enter
xor
and
mov
mov
cmpb
lds
icebp
jg
jle
push
xchg
pop
repz
push
lods
and
pop
stos
mov
outsb
setle
mov
call
add
and
hlt
inc
xor
adc
cltd
push
dec
mov
in
xor
fdivrl
inc
push
add
shll
dec
and
pop
sub
imul
push
pop
mov
imul
mov
stos
cmc
inc
fnstsw
cmpsb
sbb
mov
cwtl
pop
add
int3
lret
cmp
dec
xor
mov
popa
mov
dec
xor
push
cwtl
shlb
jo
subl
pop
imul
fdiv
dec
fistpll
cltd
lahf
test
push
sti
pop
imul
inc
scas
call
inc
fldl
out
out
jns
xchg
addr16
adc
aam
fcoms
mov
push
sbb
test
cmp
icebp
ljmp
inc
xor
movzwl
cmp
add
xor
xor
xor
loop
xchg
fwait
int3
pushf
mov
jmp
insl
adc
lock
bound
inc
pusha
mov
pop
aas
pop
femms
lods
in
fisubrs
or
push
lret
cltd
in
stc
jno
mov
push
mov
push
repnz
xchg
and
lcall
inc
in
mov
fidivl
ljmp
je
xchg
lahf
cmp
mov
and
cmpsb
cmp
sub
out
mov
hlt
xchg
out
xchg
icebp
xor
or
daa
test
fdivp
adc
testl
loop
sbb
jp
sbb
mov
jbe
sbb
int
and
inc
mov
aad
cmc
adc
jbe
iret
fistpl
fsubrl
jge
and
push
xchg
pop
in
or
xchg
jne
in
out
xor
xchg
das
adc
arpl
rcrl
xor
or
je
lock
xchg
dec
nop
shrl
jo
idivb
pop
sbb
sub
inc
push
pop
leave
dec
into
jg
inc
es
out
lea
leave
or
movsl
push
or
or
dec
cli
dec
lcall
mov
mov
sarb
xchg
aam
jge
outsb
jl
jp
popa
mov
movsl
lods
adc
xchg
or
das
jg
gs
lret
pop
sbb
adc
inc
loop
js
jmp
testb
add
jo
jns
mov
fisubrl
mov
inc
pop
mov
lods
cmp
fisttpll
int
decb
movsl
jmp
mov
inc
fisttpl
push
ds
xor
mov
inc
jecxz
pop
sub
dec
ret
rcrb
aad
adc
jb
mov
mov
nop
and
jae
lahf
leave
jge
cli
cld
lds
clc
jae
mov
xor
sub
test
outsl
ret
out
mov
into
lods
jecxz
jge
xorl
cmpsb
ss
stos
cmp
pop
jbe
nop
sub
push
outsl
mov
imul
xchg
sub
cld
inc
xchg
push
call
fisubrs
sub
je
scas
call
cld
sbbb
aaa
int3
cld
andb
jnp
xchg
pop
scas
les
mov
add
push
cmp
call
stc
fs
aad
cmpb
cmp
mov
shl
xorl
or
push
test
test
adc
dec
push
inc
push
insl
jge
orl
inc
xchg
jge
sbb
mov
dec
sar
fists
aaa
in
insl
dec
fwait
aaa
jns
test
jp
cli
push
xchg
out
jg
clc
mov
fstps
sbb
aad
add
jae
pop
shrb
pop
scas
jmp
inc
xor
and
jae
or
mov
cmpsb
cmp
dec
pop
xor
push
mov
into
and
sbb
jmp
push
sub
fisubrs
dec
cmpsb
mov
dec
sub
inc
mov
dec
mov
loopne
sbb
mov
test
sarl
pop
mov
cld
daa
inc
mov
cltd
push
xor
push
lds
jle
imul
mov
in
and
inc
or
mov
sub
hlt
in
test
mov
inc
fnsave
pop
cld
mov
mov
sbb
jle
repnz
push
movsl
mov
shrb
xchg
sbb
dec
repnz
xor
ret
adc
jecxz
xor
jecxz
pop
dec
jecxz
push
leave
scas
arpl
fsubrs
mov
loope
add
push
mov
popf
mov
dec
hlt
lahf
mov
jo
mov
inc
sbb
push
jbe
mov
test
and
xor
bound
push
imul
lds
push
adc
xor
inc
mov
dec
xor
cld
in
movsl
ret
add
push
addr16
xlat
xchg
or
jle
pop
stos
or
ja
cmp
add
xorb
cmp
jb
popa
mov
pop
fs
xlat
xchg
inc
cmp
or
mov
outsl
or
mov
xchg
inc
hlt
mov
jg
pop
cmp
fstps
pop
push
ja,pt
mov
cmpsb
cmp
adc
test
mov
jp
push
mov
push
inc
int3
ficoms
sub
inc
pop
aaa
addb
pop
test
mov
xchg
dec
std
adc
rep
inc
leave
iret
mov
push
mov
in
fidivs
sbbl
imul
fisubs
mov
repnz
and
and
jge
pop
lahf
fdivrs
std
shl
mov
sbb
shrl
xchg
sub
shll
pop
adc
rolb
mov
out
xabort
cmp
and
sbb
into
in
int
cmpsl
sbb
ret
test
stc
inc
xor
inc
daa
mov
push
push
xlat
imul
movsl
pusha
jecxz
jbe
insl
dec
add
adc
xchg
test
pop
cmpsb
rclb
push
or
mov
cld
cmp
lea
jno
fwait
dec
cmp
mov
dec
jno
xor
dec
cmpsl
pop
fistl
out
push
insb
aaa
rolb
in
call
inc
aam
mov
jb
cmp
pushf
inc
adc
xor
enter
pushf
mov
or
mov
sub
mov
iret
lea
lods
or
movsb
cmp
sub
push
jb
ljmp
or
gs
imul
pushf
in
stos
xchg
rolb
mov
jmp
cmp
popf
xor
jp
subl
in
jmp
aam
mov
and
cmp
stos
fsubrs
lret
inc
jle
xchg
inc
mov
and
imul
cmp
lds
adc
lahf
je
adc
test
loopne
call
cmp
ja
fdivl
leave
nop
lock
inc
nop
mov
bnd
aam
out
xchg
jns
lahf
xor
mov
and
xchg
pusha
out
test
mov
cwtl
add
fnstenv
ret
xchg
pusha
ss
push
fwait
and
add
pop
icebp
mov
inc
add
xchg
test
xchg
sub
pop
lahf
cmpsl
gs
fadd
in
jo
mov
cmp
push
mov
nop
daa
stc
mov
pop
notb
sub
cmp
push
aas
jae
dec
in
fdivl
sbb
icebp
rol
aas
push
imul
add
fbstp
es
data16
pushf
and
pshufw
movsl
add
mov
push
adc
add
imul
mov
mov
cmp
sbb
sbb
js
adc
call
popf
dec
lods
inc
jp
pop
scas
fnsave
xor
add
es
mov
jl
sub
pop
sahf
stos
inc
rolb
fidivs
sbb
mov
ret
jb
movlps
inc
cmp
inc
xlat
cli
xchg
out
ret
sbb
dec
pop
scas
inc
jnp
pop
stos
xorl
mov
fbstp
aad
in
pop
call
mov
or
fdivl
loopne
adcl
and
or
jb
ret
inc
fadds
fmuls
iret
sbbl
sub
pop
and
xchg
lods
imul
js
mov
call
inc
pop
pop
cmc
inc
int3
loopne
data16
cwtl
pop
call
in
jg
shrb
inc
fdivrp
jp
dec
mov
mov
dec
testb
sbb
bound
cmp
mov
mov
rorl
xor
sbb
xor
testb
push
adc
xchg
inc
ftst
hlt
into
gs
popa
clc
aaa
inc
in
cmpl
push
mov
popa
clc
lds
xor
fwait
cmp
leave
cwtl
jns
int
sbb
xchg
je
fwait
and
aam
int3
arpl
lcall
into
push
cli
xchg
test
and
popf
cltd
xor
push
je
test
andl
pop
repz
xor
fidivl
mov
jp
mov
aam
xchg
cld
xchg
ret
sahf
rcrl
out
mov
lret
js
ret
mov
jle
mov
push
jp
stc
enter
aad
adcb
testb
insl
inc
sbbl
nop
cmp
lds
data16
sbb
ds
jo
push
ljmp
in
test
out
lahf
adc
jnp
sbb
xchg
imul
js
aam
jns
faddl
cwtl
or
and
pop
push
lret
mov
cli
enter
sub
scas
pop
xor
int
leave
inc
fsincos
mov
push
insl
outsb
leave
sbb
sti
mov
test
pop
cmp
or
add
xchg
sub
sbb
lcall
icebp
mov
add
mov
pop
out
lods
adc
add
xor
imul
mov
or
lret
popa
lock
movsl
and
cmpsb
cmp
and
les
repnz
idivl
shll
icebp
adc
repz
sub
pop
pop
icebp
in
and
push
in
add
inc
frstor
sbb
inc
sub
in
adc
in
test
in
in
sbb
les
adc
inc
push
mov
aaa
shrl
adc
jns
inc
or
adc
in
cmp
pop
push
mov
adc
rcll
and
mov
sub
cld
mov
mov
out
loopne
shll
ja
push
sbbl
out
sub
sbb
pop
push
ljmp
push
out
push
lret
mov
cli
or
sub
pop
lret
xchg
aas
sub
fcompl
or
out
pusha
shlb
add
mov
mov
or
dec
fucomip
push
pushf
xor
and
or
inc
fmull
inc
fldcw
mov
adc
push
movsl
xor
sbb
insl
jecxz
pop
adc
and
push
outsb
loop
clc
adc
mov
cmc
add
xor
lcall
leave
pop
cld
sbb
cmp
push
test
dec
in
push
sbb
mov
add
mov
jae
dec
mov
outsb
cmpsb
cmp
mov
aam
mov
ja
lea
imul
jp
pop
icebp
shll
lahf
test
mov
icebp
pop
xlat
outsb
nop
hlt
push
push
inc
xchg
inc
pushf
sbbb
fs
xor
sbb
mov
push
outsl
or
cmp
loope
ret
xchg
nop
pop
sub
xlat
outsb
mov
fcomip
mov
pop
daa
mov
dec
cwtl
inc
pop
lret
mov
mov
xor
push
pop
fwait
pop
inc
fimull
xchg
aad
imul
das
mov
add
or
mov
stos
cwtl
inc
fmulp
ja
frstor
jp
dec
stos
mov
mov
cmpsb
dec
jns
jnp
xchg
sub
insl
mov
xchg
sub
repz
and
lods
sahf
pushl
xor
xor
hlt
jmp
cmp
pop
add
xor
adc
sbb
adc
xor
test
cmp
gs
add
cmp
mov
fwait
out
push
jmp
jne
sti
xchg
cmp
mov
adc
mov
sbb
lret
pop
push
lods
and
inc
xor
jae
shlb
xchg
ds
dec
xchg
sub
or
xor
mulb
xchg
int
inc
aam
js
lcall
sub
lahf
pusha
in
loop
push
andb
mov
repnz
mov
add
loopne
push
out
out
pop
ja
xchg
test
lret
cld
mov
ss
loopne
sti
adc
xor
pop
hlt
incl
add
mov
or
and
pop
rol
pop
push
adcb
push
xlat
pusha
testl
fistl
mov
test
lret
add
jbe
and
adc
jae
and
stos
shl
pop
jo
sbb
rorl
testl
aaa
sarb
and
adcl
lods
inc
aam
xchg
sub
icebp
jle
daa
rcrl
testb
adc
mov
lcall
in
dec
sbb
scas
movsb
pop
call
mov
jo
inc
mov
jle
imull
jb
fwait
mov
jle
sbb
jno
adc
jns
shrl
push
in
int3
sbb
fbld
ljmp
push
mov
out
sbb
je
or
inc
dec
push
in
dec
fisttps
pop
or
pop
fwait
jbe
adc
dec
push
xchg
aas
in
adc
ss
or
sub
dec
jmp
sub
inc
jbe
inc
push
push
mov
pop
pop
mov
bound
jae
and
jge,pt
xchg
mov
divl
mov
sbb
inc
negb
mov
or
in
xchg
imul
adc
push
push
sbb
cmpsb
cwtl
call
fsubr
mov
push
pop
mov
ret
xchg
cmp
jo
push
in
jo
nop
jns
and
dec
jl
xchg
mov
xor
or
lods
movsl
push
daa
mov
mov
cmp
xor
lcall
cmp
insb
pop
sub
cmp
out
sub
inc
imul
fidivrs
ds
dec
xor
dec
mov
xor
pop
adc
cmp
sub
sbb
in
cli
aas
add
loop
mov
cmpsb
scas
pop
enter
push
pushf
mov
xlat
or
ror
cmpsl
insb
pop
lock
mov
pop
je
xor
mov
xor
push
mov
int
push
test
fnstcw
mov
mov
loopne
add
jge
icebp
mov
cmp
scas
sub
mov
dec
lcall
sbbl
call
cmp
dec
mov
pop
mov
fisttpl
int
push
int
mov
aas
or
mov
lock
lds
inc
mov
push
inc
cmp
push
mov
dec
add
sub
jle
jmp
mov
ret
fsub
pop
out
mov
pop
adc
sti
push
stos
adc
call
xchg
jae
adc
orb
fsubl
fsubrl
sbbb
inc
fnstsw
mov
jnp
scas
xchg
sub
mov
mov
pushf
push
push
jmp
mov
xor
negl
pop
fwait
aas
sbb
mov
push
mov
icebp
pop
hlt
dec
jmp
mov
psubd
xchg
adc
sub
je
and
fsubrl
fcoml
dec
das
jge
lds
inc
mov
lret
test
daa
cmp
loop
in
sbb
in
cltd
iret
push
sub
cmp
jle
pop
rorl
jno
outsb
xor
ret
pop
imul
ja
push
stc
pop
test
or
cmp
daa
loopne
arpl
incl
movsl
das
loope
jno
ja
mov
popf
xchg
xchg
xchg
adc
scas
and
xor
xchg
gs
add
add
jno
add
out
sbb
out
lret
cmp
cmp
std
inc
faddl
iret
adc
xchg
xlat
jecxz
in
mov
push
or
fidivl
xorb
xchg
jl
mov
ret
out
ljmp
xchg
mov
pop
je
sahf
test
lret
popa
aam
push
jno
data16
cmp
mov
andb
nop
call
fnstsw
cmp
scas
or
movsb
push
dec
mov
loop
jecxz
ljmp
in
out
cli
pop
into
popa
fwait
mov
adc
xlat
dec
xchg
dec
into
lock
aas
add
cmp
arpl
xor
mov
hlt
inc
rcl
lahf
xchg
mov
push
add
or
push
pop
mov
push
sub
gs
in
xor
mov
icebp
pusha
pushf
out
movsb
pop
sbb
outsl
popf
lret
pop
lret
test
int3
mov
inc
mov
stc
fistps
out
dec
in
shll
jmp
add
dec
movsb
mov
sarb
stc
xchg
or
add
clc
cs
ljmp
into
mov
rorb
popa
fnsave
or
sub
in
movl
fsubrs
push
cmp
xchg
stos
inc
sub
adc
mov
sbb
shll
jno
in
mov
sbb
push
xchg
mov
bound
hlt
xchg
daa
nop
mov
repz
mov
sbb
dec
mov
add
xor
pop
stos
inc
jp
add
dec
inc
icebp
sub
inc
lds
in
sbb
iret
xchg
cmp
xor
push
int3
es
mov
sub
push
add
fadds
jno
repz
ja
gs
bound
pop
xor
jae
imul
sub
jmp
xchg
jle
scas
mov
aam
insb
cltd
sbb
scas
pop
mov
add
int
loop
pusha
mov
sidtl
mov
xorb
aaa
pmaxsw
lahf
cmpl
xchg
xchg
xchg
daa
and
lcall
push
test
jne
dec
loopne
xchg
pop
rclb
cmp
adc
xchg
pop
mov
push
add
inc
int
arpl
xor
aaa
inc
mov
arpl
stc
or
mov
stos
jo
arpl
xchg
lcall
or
scas
push
int
leave
cwtl
mov
inc
xlat
pop
orl
call
jb
xor
addr16
pushf
xor
out
ret
jbe
pop
test
out
sbb
in
out
imulb
into
lret
or
shlb
lret
in
gs
fiaddl
in
dec
movsb
loopne
popf
shr
xchg
ror
ret
fmul
jle
pop
std
dec
mov
testb
shlb
push
ror
add
sbb
loope
les
lds
fldenv
out
or
movsb
cmp
adc
dec
mov
mov
xchg
std
test
outsl
xchg
es
jecxz
gs
or
push
js
mov
pop
ds
pop
jo
mov
and
xlat
xchg
fdivl
mov
lods
pop
sarl
dec
mov
pop
std
lea
sbb
xchg
ret
inc
test
and
cmp
add
cmp
in
rcrb
das
jbe
adc
mov
inc
or
mov
in
mov
pop
fldcw
js
flds
push
movsb
outsb
movsb
mov
mov
out
sahf
inc
iret
nop
ret
stos
std
xchg
cmpl
outsl
in
inc
test
out
xor
data16
sbb
sti
pusha
fsubrl
cmp
jg
mov
int
paddsw
cmpsl
and
stc
jecxz
dec
xchg
sbb
lcall
lret
cwtl
xchg
mov
incb
fistl
sbb
mov
sub
test
jmp
ffree
mov
xor
lds
in
mov
add
ds
xor
pop
hlt
insb
and
cmp
jp
jp
mov
or
mov
dec
shrl
add
xor
and
mov
adc
movsl
fucomp
xor
repnz
mov
inc
mov
xchg
dec
dec
rclb
lods
fs
push
push
jp
xchg
sub
call
addr16
xlat
dec
pop
mov
bound
jno
jl
mov
dec
xorl
addr16
dec
mov
js
jne
cmp
push
jl
inc
test
mov
scas
in
cld
mov
in
sub
and
movsl
or
and
push
int3
jle
cmp
pop
cmp
ljmp
push
adc
push
push
add
xchg
clc
add
mov
not
push
negb
adc
repnz
push
and
push
mov
adc
fcmovne
int
fcom
in
push
out
out
rol
ds
add
mov
dec
rclb
mov
filds
aad
int3
mov
sbb
nop
mov
shll
add
hlt
xchg
inc
push
push
mov
out
push
aas
ljmp
push
push
outsb
xchg
pop
adc
add
imul
cwtl
fsubs
jb
sarb
dec
loope
mov
repz
bound
test
xchg
cs
fsts
dec
mov
cmc
in
push
iret
jmp
lods
inc
mov
jecxz
inc
mov
test
inc
fdivl
sub
test
out
shr
mov
add
testl
repnz
jbe
mov
leave
push
xlat
js
push
xlat
mov
pop
pop
push
mov
push
mov
push
das
cmp
les
add
fidivs
test
mov
test
in
mov
adc
xchg
imul
pop
hlt
mov
ret
sub
fucomi
add
mov
inc
mov
mov
jecxz
dec
roll
dec
leave
insb
push
or
mov
aam
out
and
jno
insb
dec
or
push
scas
inc
lods
pushaw
in
xchg
repnz
int
insl
add
in
int3
inc
mov
sub
lock
fwait
xchg
aad
fldln2
cmpsb
push
icebp
push
inc
int
mov
xor
daa
jae
adc
sub
adc
xor
jmp
in
mov
notl
pop
mov
xchg
push
xchg
subl
ja
rep
aas
int
jle
enter
out
xor
mov
out
test
aad
hlt
lret
pusha
and
or
push
imul
xchg
mov
cli
loop
add
shlb
jecxz
jmp
or
pusha
stos
jnp
add
adc
mov
mov
dec
mov
mov
int3
inc
repz
inc
insl
cmpsb
xor
outsl
jb
enter
stos
inc
pop
dec
mov
imul
mov
push
xor
mov
repnz
aas
loop
push
aaa
into
mov
sbb
cmp
jmp
loop
add
push
stos
enter
adc
jbe
stos
data16
xchg
dec
les
mov
mov
mov
lock
inc
lcall
sti
je
add
sbb
clc
dec
aad
insb
lods
cli
sub
xchg
in
sub
xchg
xor
xor
push
addr16
push
test
sub
mov
mov
dec
call
jmp
push
push
or
jbe
das
adc
jae
lahf
adc
stc
cs
add
mov
nop
cmp
jnp
mov
subl
cli
mov
mov
out
sahf
mov
add
adc
dec
scas
push
shlb
push
jmp
push
loop
jecxz
pusha
add
inc
lahf
xor
sub
test
mov
lret
sbb
jb
dec
jle
dec
xchg
scas
jl
jle
addr16
out
mov
and
imul
cmp
fs
pop
jp
jmp
insb
js
pop
xor
adc
ja
mov
xor
mov
mov
loope
sarl
shlb
nop
jno
repz
jne
fstl
jmp
mov
add
xor
daa
dec
fwait
sbb
cmp
jb
jge
lret
inc
sbb
ds
daa
mov
cmp
shlb
lret
and
ss
sub
lods
js
jl
ljmp
icebp
int3
imull
xlat
movsb
repnz
movsl
fadds
leave
pusha
leave
xchg
adc
cmpsl
cmpsb
pop
push
and
outsl
stos
inc
mov
ret
call
mov
stos
inc
xor
lods
je
mov
xchg
push
repnz
loop
dec
lahf
ss
ret
clc
xorw
lret
mov
mov
jno
jbe
mov
repnz
xchg
add
js
or
xchg
inc
fmulp
aaa
jp
movsl
out
mov
imulb
mov
push
fsubr
push
loopne
dec
inc
mov
cmpsl
cmp
test
adc
out
test
in
xchg
mov
add
pop
data16
sub
push
das
rclb
xchg
sub
lcall
data16
pusha
insb
hlt
xor
xor
inc
push
jl
mov
mov
push
aad
lea
roll
mov
call
into
movsb
cmp
verw
lods
sbb
jmp
shrl
push
xor
cwtl
mov
sub
lods
jb
fisttps
fcoms
add
pop
popf
out
or
scas
scas
and
or
push
mov
sbb
pop
aam
push
fwait
mov
cld
dec
aam
fsubr
inc
xlat
out
inc
int
lds
rcl
inc
je
cmp
mov
stc
adc
mov
mull
in
xor
cmpsb
lret
sbb
fistps
in
out
ja
addb
jmp
icebp
inc
mov
pop
add
js
aas
and
mov
arpl
push
pop
push
leave
push
push
adc
and
jnp
add
xor
mov
adc
mov
jg
movd
dec
in
and
or
imull
stos
lods
add
psubd
inc
mov
or
negb
add
dec
xlat
jae
dec
daa
out
mov
dec
flds
lcallw
subl
add
adc
nop
push
addb
push
inc
or
gs
adc
das
and
cwtl
imul
aaa
push
daa
pop
mov
ret
mov
sub
pushl
test
mov
mov
into
and
or
stc
repz
push
neg
adc
in
iret
inc
xlat
mov
jne
clc
fwait
outsl
mov
in
mov
lahf
xor
lock
and
sbb
jno
inc
push
repz
popa
aaa
out
pop
nop
xor
clc
jmp
mov
pop
shl
cmpsl
repz
scas
daa
fnsave
inc
xchg
jns
in
inc
dec
fwait
xchg
xor
adc
repnz
or
pop
or
shl
loope
jae
aas
mov
jp
jnp
lret
fdivrs
pop
cmp
insb
sub
and
add
jo
loopne
cmpsl
in
flds
enter
push
nop
jnp
sbb
mov
ret
push
cmpsl
loop
add
es
out
inc
popa
mov
mov
fidivrs
cmc
cmp
in
je
iret
push
fisttps
enter
sbb
in
mov
sbb
idivb
movsl
aas
in
push
out
dec
in
or
dec
scas
dec
cmp
cmp
mov
cmp
sbbl
pop
xchg
xchg
pusha
pushf
shrl
sub
pop
lret
je
fimull
ds
xchg
arpl
loope
dec
lods
pusha
insl
sbb
adc
repnz
xor
rorl
ffree
sub
inc
mov
lods
loop
dec
mov
mov
ret
xor
mov
jns
aaa
jmp
pop
and
inc
cmpb
dec
ja
aas
mov
aam
jl
movsl
inc
test
gs
push
jno
mov
cltd
loope
xchg
cwtl
push
out
mov
mov
jae
jnp
cwtl
retw
stc
jcxz
pop
shrb
movsb
jle
std
inc
fdivl
push
lret
mov
lock
inc
ret
pop
fldcw
jmp
mov
inc
jae
and
imul
pop
dec
ss
pop
fistps
in
cmpl
lcall
jne
addr16
jge
dec
int
sub
rcll
inc
leave
add
call
adc
stos
je
adc
add
aas
out
cwtl
cld
es
sbb
sbb
push
push
cmp
insl
push
jbe
nop
lods
js
pop
pop
add
movsb
cmp
push
mov
mov
out
adc
scas
mov
fs
xor
jnp
icebp
inc
js
push
cmp
je
push
cmp
lods
pop
jne
orb
mov
xorb
mov
cld
jmp
scas
popa
pop
cmc
pop
lret
mov
loop
rcl
negb
jmp
test
icebp
mov
inc
lods
pop
inc
adcb
aaa
mov
cmpsl
jns
in
inc
ljmp
xor
clc
and
js
cmc
dec
aam
ss
inc
inc
mov
ret
in
jns
lcall
jo
push
xchg
dec
sbb
adc
pop
xor
and
lret
push
mov
ljmp
arpl
movsl
cmp
test
dec
adc
ret
lods
hlt
sub
push
inc
pushf
shl
sub
or
nop
cmp
rcl
loope
rol
ret
xchg
xchg
lds
mov
les
push
or
not
inc
loop
lahf
xorb
jo
mov
js
mov
mov
sub
insb
scas
pop
push
cmpsl
stc
jns
scas
jl
jne
mov
fisubl
fucomi
push
pop
lret
cwtl
mov
xor
dec
cmpsl
repnz
into
out
ret
pop
sbb
add
mov
movsb
test
inc
stos
int
jno
in
xor
lret
and
icebp
popf
faddl
mov
xor
jne
ja
or
push
sahf
sub
push
xor
mov
je
arpl
lea
lret
iret
adc
mov
push
cltd
push
stc
ret
ds
xor
movsl
js
shrl
lcall
cmp
rclb
fwait
lds
dec
ret
daa
dec
sub
movsb
jle
dec
shlb
les
mov
mov
mov
lcallw
inc
fiadds
xchg
inc
pop
mov
lods
xor
jne
and
loope
jb
jne
stos
inc
lret
jmp
pop
ret
mov
into
lods
push
lods
jl
pop
and
pushf
adc
mov
cs
lret
xor
push
pusha
push
inc
or
pop
lods
inc
and
js
xchg
dec
aas
lahf
xchg
jge
outsb
cmpsb
cmp
jge
shrl
mov
in
das
lahf
orb
jae
mov
lock
mov
add
mov
xlat
packssdw
add
andl
xor
pushf
jae
in
adc
loopne
aas
or
mov
in
and
sbb
inc
scas
xchg
cmp
or
cmpsl
insb
ret
mov
nop
jnp
hlt
sbb
mov
dec
icebp
div
push
jno
int
sub
cmpsl
cltd
test
movsl
out
xchg
movsl
push
out
test
and
adc
xchg
aaa
or
int
jo
sti
push
pop
je
cmp
add
jnp
jae
in
and
scas
cmpsl
sub
and
aaa
fstl
add
mov
add
mov
inc
adcl
push
cld
notb
movsb
enter
dec
fsts
mov
ljmp
jge
pushf
add
repz
jmp
inc
lds
icebp
cmp
jecxz
pop
sarb
pop
sahf
fistps
inc
add
hlt
cmp
jp
lret
jl
mov
enter
std
sub
stc
pop
adc
jl
push
insb
mov
roll
jecxz
xchg
adc
push
test
mov
call
out
and
cltd
test
out
xor
pop
int
xchg
fidivs
test
mulb
mov
inc
push
je
int3
ss
lcall
cmp
and
adc
pop
xchg
imul
add
pop
jle
cmp
xor
push
pusha
cmp
inc
lea
aad
xchg
lods
inc
iret
test
outsb
push
ret
xchg
jl
andl
subb
pop
scas
sbb
pop
movsl
je
jb
andl
cwtl
adc
mov
loope,pt
fdivrl
int3
or
movups
std
xor
jmp
inc
dec
jmp
adc
xchg
push
ljmp
mov
xchg
sub
fldenv
push
adc
mov
xor
inc
lods
int
pop
push
add
addl
lock
jmp
shr
xor
xchg
sbb
xchg
mov
decb
mov
std
and
mov
mov
mov
cmc
inc
mov
jl
jae
leave
popf
test
mov
mov
dec
sub
jle
sbb
sbb
add
cmpl
orb
mov
cmp
stos
xchg
in
xor
lret
loope
enter
cwtl
orl
sarl
mov
js
jne
roll
aam
mov
mov
dec
je
push
adc
clc
add
add
in
cwtl
cld
xor
push
nop
jge
imul
jb
lahf
subb
xchg
sub
je
ds
inc
cmp
cli
pushf
ja
pop
push
mov
mov
jb
xchg
mov
insl
xchg
sub
add
aam
in
cmp
jge
mov
xchg
sub
cwtl
xchg
arpl
aaa
push
das
insl
aam
inc
fisttpll
xor
ret
inc
dec
test
push
sbb
mov
pop
lcall
gs
dec
inc
sub
mov
aaa
jnp
and
mov
dec
inc
sahf
mov
pop
jo
jnp
pop
imul
popa
jne
rdpmc
xor
lea
je
or
cmp
xchg
add
scas
mov
loopne
aaa
into
sub
test
xor
push
in
jl
pop
xchg
in
xchg
sub
cld
add
jbe
and
leave
mov
jmp
sbb
pop
repz
or
ja
daa
mov
lret
fcoml
in
mov
push
xor
aam
mov
xchg
sub
adc
inc
push
mov
mov
xchg
stos
iret
data16
jmp
insb
mov
or
add
pop
scas
mov
xchg
sub
mov
pop
outsb
or
cmp
jb
dec
dec
mov
out
stos
dec
push
cmpsb
or
push
in
add
or
dec
loop
jb
add
je
add
enter
xor
testb
bound
int
cwtl
sub
pop
pop
inc
xlat
push
jp
loop
jno
cmc
mov
and
and
push
jbe
jno
mov
clc
clc
or
pop
and
lods
push
push
jecxz
mov
or
int3
xchg
sub
mov
ss
fnstcw
cmc
aam
clc
push
cmc
jl
daa
je
in
xchg
loopne
and
mov
jmp
xor
jne
jge
pop
hlt
sar
push
push
pushf
lret
aaa
ficompl
and
int
sbb
cs
mov
cmp
in
cmp
inc
jb
shrl
call
leave
fcomi
mov
jns
push
icebp
push
xor
mov
das
lahf
addl
nop
fdivl
in
jno
jnp
mov
scas
outsb
xchg
jecxz
sbb
gs
jo
or
push
xor
xchg
add
cltd
loop
dec
lahf
test
je
mov
aaa
mov
es
clc
sbb
addr16
adc
std
lock
nop
mov
imul
enter
movsl
jg
sub
movsl
stc
push
scas
xor
dec
adc
fnstsw
gs
fldcw
mov
xchg
xorl
mov
push
in
mov
dec
aaa
xchg
sbb
ja
mov
xchg
subl
add
pop
enter
mov
push
lods
sbb
mov
in
mov
inc
pop
fcompl
push
cmp
cli
cli
cmpsb
sarl
dec
shrb
test
jnp
lock
inc
jo
push
add
jge
jns
mov
pushf
pop
pop
sbb
lcall
call
lea
add
lahf
mov
or
cltd
and
ja
data16
and
mov
mov
popa
mov
push
into
mov
cmp
jle
mov
ja
xchg
or
sbb
mov
jg
cmp
popa
xchg
vmread
xlat
jg
icebp
imull
repnz
sahf
aaa
test
mov
std
xor
inc
js
xchg
popl
je
jno
stos
shll
mov
xchg
iret
andb
cmp
xchg
lret
ret
add
mov
fiadds
and
aas
loope
lds
jo
out
push
outsb
out
jge
ss
in
sbb
jmp
adc
pop
setge
inc
mov
or
push
ja
aaa
test
jbe
add
mov
iret
outsb
insl
je
mov
inc
cmpsl
lahf
stc
loop
jne
mov
push
sbbb
lods
fcmovnb
lock
cld
xor
sub
mov
fidivl
lods
pop
push
sub
in
idivl
jmp
pop
push
pushf
xor
jge
mov
insl
push
pop
scas
inc
ja
ljmp
rcrl
jmp
jnp
sbbl
sbb
dec
mov
sub
jl
adc
popl
xchg
xor
ja
mov
inc
sbbl
pop
aad
cs
cli
and
pop
mov
mov
jmp
add
sub
and
xor
adc
sbbl
push
jg
call
mov
mov
add
or
leave
xchg
sub
gs
pop
xchg
sbb
sbb
shlb
sbb
lret
lret
add
xchg
adc
mov
pop
std
cmp
adc
fld1
mov
mov
rolb
jp
mov
sub
pop
or
push
rclb
xchg
xchg
jnp
and
fildl
test
aam
push
pop
inc
sub
jbe
popf
xor
xchg
xchg
cmp
mov
sbb
adc
scas
ss
push
sti
add
inc
push
lods
pop
xchg
mov
nop
mov
orb
das
cmp
out
adc
add
inc
in
pop
mov
lret
xchg
inc
pop
mov
scas
stos
xor
jp
scas
addr16
addl
popf
mov
cli
ss
cmp
imul
sahf
inc
loopne
aaa
popf
cmc
repnz
dec
lahf
shlb
cltd
push
clc
mov
jmp
movsw
arpl
lret
nop
imul
popf
jbe
dec
adc
orb
jmp
dec
lcall
popa
es
int3
je
nop
ljmp
nop
inc
out
lret
jmp
int3
mov
add
cmp
das
jp
xchg
call
cmp
mov
scas
push
std
fs
nop
dec
js
push
sahf
stos
das
test
xor
dec
data16
lret
inc
push
lods
mov
mov
out
or
xor
and
mov
in
jo
lea
lds
pop
push
add
clc
arpl
dec
adc
arpl
mov
adcl
repnz
in
dec
push
icebp
icebp
pop
out
in
flds
leave
clc
outsb
repnz
jp
mov
jbe
in
jnp
dec
stc
cli
cmc
push
push
jle
ret
js
push
pop
stos
xor
cmc
pop
out
pushf
scas
das
loop
add
sub
loop
mov
ret
cli
gs
cmc
pop
jo
mov
dec
or
pop
adc
inc
sahf
test
push
leave
cmp
add
cmp
dec
pop
and
and
jp
lea
sub
jae
ljmp
rorl
push
sub
test
add
xchg
mov
std
add
in
sbb
cld
pop
test
inc
out
jo
cltd
sti
pop
pop
scas
mov
sub
xchg
pop
aaa
movsl
sbb
mov
js
sbb
in
scas
sbb
xchg
cmp
push
fisubs
cltd
add
pusha
pop
std
xor
xor
mov
adc
mov
aam
fdivrs
cltd
dec
sub
insb
xor
aaa
movsb
or
fistpll
add
pushf
push
push
insb
nop
aaa
mov
lret
in
adc
xchg
cmpsl
bswap
push
int
les
rcr
jnp
jle
xor
les
inc
clc
xchg
push
add
mov
push
mov
sub
lahf
jp
push
pusha
les
test
xadd
mov
int
js
sbb
push
in
sti
pop
dec
or
add
sahf
aaa
and
loope
sub
mov
jnp
push
mov
outsb
push
jge
fs
xchg
xor
push
xor
outsl
jmp
mov
cmpsl
cmpsb
xor
leave
test
add
stos
mov
cmpsl
cmpsl
mov
lret
mov
adc
and
mov
mov
pop
sti
xorl
push
jbe
cmp
jmp
clc
lods
sub
daa
mov
cmpb
jecxz
cmpb
shl
add
push
loope
stos
sub
cmpsb
xor
cmp
es
jb
cmp
push
in
add
xchg
in
adcl
mov
popa
jle
mov
jg
xlat
mov
movsb
mov
dec
add
sub
and
test
jb
inc
mov
je
cmpb
dec
push
loopne
cltd
sbb
inc
adc
lahf
mov
adc
mov
cmpsb
sbb
xlat
call
data16
ror
mov
sbb
fdivrl
inc
or
pop
rcr
cli
sbb
inc
dec
or
pushf
cmp
xchg
fdivrl
add
js
dec
lea
test
pop
cli
sub
pop
sbb
sbb
jmp
fbstp
cmc
or
xchg
cltd
inc
negl
lret
pop
insl
sarl
pop
and
pop
jae
lret
mov
or
clc
les
mov
jmp
lcall
leave
or
inc
push
into
xchg
adc
mov
jo
enter
insb
jmp
jb
fwait
inc
xchg
fs
xchg
pop
enter
mov
adc
mov
enter
mov
jmp
pushf
inc
xchg
addr16
fadd
pop
int
push
rorb
inc
add
jnp
mov
call
xchg
imul
movl
or
and
icebp
loopne
sub
mov
arpl
and
leave
cs
les
hlt
dec
add
je
mov
in
jbe
xchg
cmp
pop
xor
lret
inc
or
fldl
lret
mov
insl
js
adc
ljmp
mov
lock
ds
bound
mov
pusha
jl
push
je
fildl
outsl
test
sbb
xor
pop
cmc
sub
movsb
in
push
clc
jg
xchg
insb
sarl
aad
mov
sbb
jecxz
decb
pop
ja
icebp
pop
and
jp
push
lret
sub
insl
and
cmc
inc
mov
or
dec
call
mov
bound
ja
mov
sub
insl
dec
sarb
sahf
and
mov
inc
or
lret
push
jg
mov
xor
lret
into
xchg
sub
add
roll
je
pop
mov
jo
js
test
or
daa
mov
xchg
adc
dec
rol
xchg
xor
sub
inc
subps
jl
je
add
popf
insl
pop
cmp
xor
or
fisubrl
adcl
repz
insb
pop
and
and
cmpsb
jmp
push
inc
arpl
scas
xchg
adc
xchg
dec
lret
notl
cmp
shlb
add
cmp
xchg
nop
shr
addr16
int3
xchg
sahf
cmp
cli
pop
imull
pop
shll
mov
xor
or
inc
outsl
jmp
dec
imul
and
movsb
das
cmp
cltd
cmp
mov
cmpb
lock
nop
mov
mov
cli
pop
popa
jp
push
push
dec
jnp
adc
loop
jo
negl
jo
test
cmpsb
xor
xor
outsl
test
xchg
inc
fimuls
xor
mov
andb
mov
inc
test
data16
fs
pop
test
mov
stos
cmp
inc
test
xor
xchg
in
xor
movsl
sub
and
movsl
cmp
ljmp
or
push
rorb
push
adc
stos
fcoms
cmpl
sbb
mov
mov
cli
sbb
adcl
sbb
lds
push
pop
aaa
movsl
xor
test
ja
std
adcl
sub
jae
outsl
ljmp
insb
mov
scas
mov
xchg
fidivrs
sti
insb
out
and
xor
imul
jne
es
arpl
mov
out
mov
imul
push
movl
lods
inc
shlb
cli
cmpsb
hlt
sti
popa
divb
loope
dec
sub
out
je
sub
jae
movsb
sub
je
test
mov
mov
xchg
dec
xor
inc
and
cmp
call
cmpsb
sub
xchg
cmp
mov
int
ljmp
adc
inc
pop
add
ret
jecxz
adc
jg
or
pop
xor
cltd
xor
mov
fucompp
and
repnz
adc
shrb
gs
ljmp
pop
pop
cmpsb
xor
imul
and
je
jbe
push
adcl
add
addr16
and
mov
loop
jbe
inc
adc
mov
gs
dec
pop
clc
xchg
int3
repnz
lret
push
add
out
or
push
jle
testb
jns
dec
jnp
call
divl
mov
pop
cli
subl
and
fsubl
cmp
pop
xchg
sbb
sbb
and
scas
xor
add
shl
mov
scas
xchg
cmp
mov
fdivrp
ljmp
dec
mov
cmp
pop
fadds
into
adcl
pop
test
mov
cld
pop
xor
mov
inc
sbb
and
movsb
hlt
push
rorb
fucomip
jo
mov
loop
jp
int
clc
jnp
mov
mov
jg
dec
push
cmp
mov
lock
mulb
mov
fwait
xchg
cmp
int3
outsl
shl
data16
jae
or
aam
imul
gs
jg
jns
daa
jmp
dec
or
clc
push
test
sbb
sbb
sahf
inc
or
cmp
mov
arpl
fsqrt
pusha
lcall
mov
pushf
lret
jbe
xchg
int3
lods
sub
ret
nop
aas
pusha
pusha
xor
push
jnp
cwtl
movsb
pusha
fidivl
mov
jecxz
pusha
sbb
sbb
mov
nop
push
rcll
imull
js
mov
popf
aaa
inc
mov
and
sarb
adc
cld
in
fs
fwait
xor
imul
subb
sub
inc
stc
add
insl
xchg
jmp
jne
call
sti
icebp
pop
cmpsl
lds
mov
mov
push
xor
mov
and
xchg
aaa
insl
and
pop
bound
pop
push
gs
fldl
cmp
pop
cld
outsb
or
hlt
inc
dec
or
and
lods
aam
fs
xchg
inc
shll
dec
sbb
add
insb
mov
lcall
ja
dec
test
mov
adc
lods
pop
add
push
gs
call
add
std
pop
sarl
jmp
mulb
mov
cmpsl
xor
lret
mov
popa
pop
ds
xchg
inc
aaa
mov
pop
mov
aam
sahf
fdivrl
out
cld
mov
pop
lcall
loop
jns
push
mov
mulb
test
mov
push
sbb
loope
adc
lcall
xor
and
sbb
jge
xchg
jbe
mov
inc
insb
pop
cli
cmp
add
adc
adc
out
push
fstpt
hlt
cli
pop
push
inc
cmp
jecxz
inc
adc
cmpsl
mov
dec
fistpll
sbb
pop
ja
mov
jbe
rcll
cwtl
cwtl
cmp
mov
sbb
test
call
jno
pop
in
dec
inc
aad
inc
cwtl
lds
lret
pop
sbb
jle
cmp
mov
fwait
push
aas
movsl
std
lret
jno
adc
das
mov
inc
adc
dec
aas
flds
pop
shrb
jns
pusha
cwtl
inc
and
in
cmp
or
sbb
pop
nop
cmp
or
ds
mov
and
xchg
jne
scas
and
cmp
arpl
dec
push
aas
jp
xor
aad
xor
lret
mov
pusha
icebp
mov
cmp
xlat
iret
mov
out
sub
aad
xor
pop
mov
xor
stc
push
push
add
and
add
rclb
hlt
sbb
pop
std
inc
out
in
fistps
mov
filds
mov
push
or
sbbl
xchg
mov
je
jg
insl
insb
dec
loopne
outsb
pop
cmc
lahf
mov
imul
xor
inc
or
icebp
sub
inc
mov
shll
mov
mov
int3
fildl
arpl
push
adc
push
out
dec
in
insl
sub
jle
in
addr16
cli
in
imul
out
pop
sbb
mov
gs
mov
mov
stos
xor
mov
insl
clc
cmp
inc
in
add
in
sub
lods
cmp
xchg
cmp
mov
negb
icebp
dec
push
mov
pushf
inc
test
shl
rorl
xchg
mov
xchg
cmp
mov
lds
leave
sbb
sub
cmp
mov
mov
mov
lret
stc
int
loope
int3
arpl
adc
loope
nop
cmp
icebp
loope
push
cmc
and
popa
xor
push
cld
pop
lock
cmp
mov
mov
push
add
add
jmp
dec
in
js
rolb
sti
mov
test
sbb
insl
ja
gs
pusha
push
dec
loopne
shlb
rcl
insl
add
cs
push
out
jbe
inc
dec
push
mov
int3
xchg
cmp
addl
out
imul
adc
xchg
cmp
mov
mov
pop
aad
pushf
pop
sub
pop
leave
aad
fmull
cltd
inc
sti
xor
sbb
adc
xor
aaa
arpl
loopne
jmp
mov
movsb
fidivrs
ljmp
pop
sub
fwait
cmpl
pusha
out
jne
jnp
push
outsb
cmpsb
ss
arpl
or
lcall
push
test
hlt
sti
pop
daa
sbb
jne
cmp
shlb
cltd
cmp
and
push
in
gs
add
jb
jbe
dec
popa
xchg
cmp
mov
inc
rcl
push
ljmp
das
push
aaa
cltd
jecxz
mov
and
pop
add
imul
out
or
lds
popf
inc
jb
inc
or
addr16
cmp
push
dec
lods
mov
jnp
mov
xchg
inc
pmulhuw
jle
push
rorb
push
int3
mov
jmp
mov
loope
xor
or
mulb
push
pop
ljmp
sbb
mov
mov
aaa
sub
dec
adc
orl
lcall
cmp
mov
mov
push
cli
cmpsl
fisubl
leave
lcall
adc
out
xor
lret
pop
fidivl
adc
adc
push
mov
fsubl
into
gs
in
orl
jge
sbbb
mov
mov
pop
out
mov
push
lret
dec
adc
idiv
arpl
pop
insl
out
shll
and
aaa
test
scas
les
dec
adc
cmp
es
pop
outsb
js
inc
pushf
inc
pop
int3
fiaddl
std
xchg
xchg
lock
out
insl
cmp
fs
mov
mov
std
adc
sti
bound
xlat
dec
jl
jmp
xchg
in
pop
or
or
test
mov
mov
mov
scas
je
mov
mov
inc
scas
mov
imul
cmp
inc
aaa
loopne
es
repz
add
jl
mov
icebp
pop
shll
pop
inc
push
test
mov
test
mov
jb
pop
clc
inc
outsl
lcall
fwait
jmp
in
in
shll
movsb
out
ds
idiv
hlt
rcll
mov
pop
out
xor
mov
adc
mov
xchg
cmp
xor
xchg
mov
idiv
sbb
adc
ret
xchg
repz
inc
adc
mov
aam
push
add
push
mov
daa
add
outsl
jecxz
adc
in
adc
movl
fdivrl
or
xchg
mov
push
push
rcll
enter
adc
xchg
push
adc
clc
jmp
ss
iret
mov
test
mov
xchg
fidivrl
inc
movsb
sub
push
addl
test
cwtl
mov
cmp
sub
mov
ret
and
leave
xchg
fidivl
add
push
dec
sbb
jns
jl
sub
scas
and
add
jb
xor
and
cltd
push
sti
pop
mov
push
jns
das
push
int
into
flds
or
std
push
push
pop
add
jo
pusha
push
dec
jmp
push
mov
pop
test
lods
xchg
dec
inc
or
rcl
jnp
fldl
xlat
iret
mov
sub
ss
mov
vaddps
stos
sbb
fdivr
and
popa
jl
jnp
shll
xchg
mov
ljmp
lds
repz
xor
add
xor
pop
mov
scas
sub
and
cmp
icebp
mov
das
lahf
jecxz
mov
int3
ret
mov
mov
push
shrb
lret
dec
adc
dec
pop
jo
ret
imul
je
jne
cld
xor
rclb
mov
cmp
arpl
jae
mov
ljmp
adc
lock
sub
mov
in
test
cmpsl
ja
mov
sub
sub
mov
lods
push
lds
mov
jnp
mov
push
add
and
outsl
xchg
cld
test
int3
ret
xchg
dec
or
sbb
insb
push
pusha
and
mov
movsb
or
popl
dec
dec
pop
sbb
fisubs
je
cld
movsl
lcall
jp
mov
insb
and
mov
es
mov
adc
pop
test
ss
or
sarl
arpl
insb
out
negl
fadds
push
mov
mov
mov
sarb
cmpsb
push
cmpb
push
stc
jbe
push
clc
jle
sub
add
mov
mov
scas
dec
adc
sub
icebp
xchg
fidivrs
mov
push
out
or
push
inc
dec
adc
pop
jbe
inc
and
insl
stos
xchg
adc
out
pop
add
hlt
int3
lods
notl
mov
cwtl
xchg
jno
int
mov
enter
mov
xchg
test
mov
adc
push
cs
dec
lods
xor
mov
cmpsb
push
ret
mov
mov
aad
test
ret
mov
adc
or
push
iret
out
pop
outsl
lock
popf
pop
add
daa
int
stos
sub
lds
or
pop
cli
and
jmp
cmp
mov
stc
pop
mov
xchg
inc
mov
mov
inc
adc
enter
xor
rorl
es
xchg
xchg
pop
jo
jnp
and
adc
pop
clc
or
fs
adcl
dec
sbb
and
into
gs
test
pop
pop
imul
mov
sub
fs
add
jl
bound
jno,pt
ljmp
in
stos
adc
idivb
leave
xchg
pop
push
pop
add
mov
nop
dec
pop
testl
icebp
out
inc
fwait
loop
sti
jge
pop
std
data16
pop
in
adc
mov
mov
loop
call
stc
push
lcall
sbb
out
jnp
shrl
fwait
dec
push
dec
pop
sub
lea
adc
test
xchg
out
fnstsw
dec
adc
mov
mov
loopne
adc
cmpsb
jae
mov
mov
inc
mov
mov
rorb
mov
push
push
arpl
addl
test
loope
sti
icebp
repnz
or
xchg
pop
arpl
push
ret
mov
lods
test
pop
push
sti
outsl
xor
test
aam
arpl
filds
jb
or
pop
lret
dec
bound
push
stc
lock
add
jmp
ss
das
fbld
dec
cmp
jge
xchg
insb
push
stc
mov
stos
mov
hlt
ret
jne
sbb
enter
aas
int
aad
mov
cmp
inc
sbb
pop
sti
insl
in
jae
xchg
inc
js
fdivs
popa
or
adc
cli
mov
add
xchg
push
add
ret
jl
repz
lahf
cmp
sub
mov
clc
xor
jecxz
push
adc
jbe
je
mov
mov
pop
test
lea
mov
adc
int3
jp
inc
inc
mov
aaa
stc
out
jno
jmp
insl
enter
cmp
jl
sub
cmp
lahf
push
fwait
xchg
inc
testb
cmp
call
xor
std
cmp
sahf
sub
mov
dec
or
stos
jp
sub
xor
test
inc
out
push
pop
inc
fimuls
stos
adc
and
cmp
movl
repz
shlb
test
mov
sub
mov
int
inc
fiaddl
sub
or
sbb
or
mov
mov
mov
mov
test
out
arpl
or
fbld
hlt
pop
xor
mov
and
xchg
inc
out
add
subl
out
push
jnp
jecxz
push
add
lds
outsb
mov
mov
lcall
sbb
push
fisubrs
rcrb
loopne
add
inc
push
pop
decl
fucomip
jbe
push
xchg
ds
ret
mov
cmp
sbb
sbb
adc
adc
divb
movsb
les
outsl
or
jp
push
xchg
jmp
stos
xor
outsl
out
in
stc
pop
imul
or
and
cmp
or
mov
movsb
pop
cli
ss
lahf
cmp
sub
or
xchg
mov
and
inc
out
insb
and
aas
and
and
adc
lds
lret
sti
xor
pop
lods
pop
hlt
fldl
orb
inc
or
or
add
push
sahf
data16
mov
adc
aad
add
adc
imul
sahf
dec
stc
std
pusha
mov
scas
test
aad
dec
cmp
aad
dec
clc
pop
add
lahf
ret
clc
sti
arpl
mov
jo
dec
mov
mov
or
nop
inc
orl
out
mov
movsb
push
adc
dec
xchg
inc
outsb
out
lea
mov
popa
mov
orl
dec
push
loope
dec
inc
imul
imul
jne
clc
pop
inc
cmovo
adc
cmp
loop
xchg
adc
jge
in
push
cs
cli
imul
push
add
les
mov
leave
xchg
sti
sti
mov
pop
fs
fmull
inc
fistpll
push
sub
cmp
icebp
mov
xchg
sti
out
in
imul
addr16
add
stc
loopne
sub
dec
push
std
mov
mov
mov
insl
repz
inc
push
mov
pop
xor
pop
xchg
cmp
cs
or
bound
jl
mov
test
mov
mov
aaa
mov
gs
test
pop
mov
fcompl
mov
pop
lret
in
test
jmp
loopne
and
in
cmp
lahf
shll
jp
or
sub
mov
dec
or
xchg
inc
mov
adc
daa
movsl
jno
push
cmp
int
mov
and
cs
fnstsw
fsubs
mov
or
pop
fildl
test
mov
call
call
mov
scas
aam
xchg
jp
sub
lahf
cmp
shl
pusha
loopne
loop
jnp
push
add
out
in
jo
add
stc
xor
test
lret
adc
addb
push
add
int3
leave
mov
inc
adc
and
daa
out
pop
add
cmp
jge
insb
and
jae
enter
jg
and
and
das
push
psrld
test
xlat
xchg
in
movsb
daa
rol
cmp
sysret
scas
xor
iret
add
lret
push
enter
xor
or
outsl
lods
call
push
lock
mov
nop
add
shlb
and
mov
mov
inc
pop
dec
push
shrl
loope
out
cld
popa
sub
enter
jl
ret
mov
and
add
js
cmp
adc
mov
ds
cmp
fistpll
push
add
sub
sti
hlt
xchg
stos
sub
add
xchg
push
pop
adcb
repz
les
lds
xchg
aas
clc
sbb
sbb
inc
lea
mov
fninit
daa
scas
xor
ss
pop
hlt
pop
sub
arpl
push
cmp
inc
mov
and
loope
inc
enter
cld
sbb
dec
adc
pop
fiadds
insl
inc
hlt
arpl
or
cmp
sub
inc
pmulhw
lcall
adc
stos
ljmp
leave
sub
cmp
rcrl
repz
inc
hlt
xor
fisttpl
sbb
cmpsb
into
dec
or
mov
adc
mov
test
jge
dec
outsl
jmp
jg
testb
mov
popa
int
sysenter
mov
and
xchg
cmp
pop
sbb
jl
inc
mov
scas
xor
jnp
cs
je
aaa
mov
gs
sti
pop
mov
and
mov
daa
mov
sbb
pop
out
int3
or
movb
insb
in
lcall
enter
mov
pop
xchg
scas
adc
add
test
sti
pop
push
add
mov
sub
scas
movsb
cmp
mov
or
and
cmpsl
sub
sub
es
inc
push
push
pop
add
sarb
pushf
scas
xor
mov
test
mov
push
cld
xlat
sbb
in
loope
in
divl
aad
fstps
mov
xchg
mov
enter
xchg
enter
xlat
adc
cmp
push
rcll
adc
stc
ret
out
out
sahf
mov
lcall
mov
faddl
inc
adc
push
xchg
inc
push
sbb
or
test
push
pushf
cmp
dec
inc
jae
lahf
iret
pushf
xor
ja
ds
imul
cmp
mov
xor
stos
mov
stos
xor
fldcw
xchg
xor
inc
int
inc
xchg
xchg
jno
push
jne
cmp
xchg
cmp
fbstp
ss
cs
and
rorb
mov
addl
loop
xchg
and
mov
stos
cmp
xchg
mov
repnz
pop
mov
jae
push
mov
test
movsb
mov
lods
cmp
dec
mov
loopne
popf
jo
sbb
mov
push
lcall
sub
popf
mov
lds
mov
lret
xchg
inc
sbb
sti
mov
mov
jp
mov
arpl
in
jae
into
std
jmp
inc
popa
sub
xchg
jp
inc
cmp
jno
xchg
inc
or
pop
stc
into
push
xchg
push
or
mov
pop
sti
shrb
adc
mov
adcb
call
cltd
sbb
je
lcall
iret
push
or
ljmp
pop
rcll
dec
or
pop
cld
mov
clc
pop
fiaddl
mov
inc
dec
ss
cld
xchg
push
cmpsb
out
mov
mov
test
lea
jae
xchg
pushf
inc
jg
jmp
adc
and
and
pop
out
sbb
cltd
in
sti
dec
adc
stc
mov
sahf
add
push
mov
test
push
imull
xchg
lods
jbe
dec
adc
cli
xchg
jg
cmp
pop
popa
sbb
mov
mov
fbstp
xchg
cmp
mov
stos
jp
adc
sub
jecxz
cmc
xor
sub
push
inc
pop
clc
mov
mov
sub
repz
pop
jecxz
mov
add
and
enter
sub
ja
mov
imul
mov
adc
jge
pop
lea
xchg
popf
inc
icebp
push
in
loope
push
jecxz
mov
in
call
std
sub
adc
rorl
shll
mov
and
jge
iret
xchg
add
mov
or
jae
out
pop
xchg
ds
out
jo
push
pop
enter
mov
das
lret
movsl
sub
cmp
rclb
xor
ret
xchg
push
sub
sbb
mov
inc
fistl
lock
mov
lods
mov
faddl
stos
insb
mov
jl
jnp
pop
add
push
movsb
leave
xchg
aaa
mov
outsb
movsl
and
sub
loopne
jbe
xor
lcall
cltd
aaa
pop
adc
sti
mov
sbb
cmp
out
test
rclb
and
pop
mov
cs
out
mov
mov
loop
inc
adc
sbb
int3
xchg
pop
dec
cmc
arpl
fs
push
adc
sub
movsb
and
jnp
sub
dec
pop
testb
movsb
inc
push
stc
pop
stc
pushf
scas
sub
in
push
jbe
aaa
movsb
mov
sub
dec
push
movsl
ss
xchg
ja
mov
jp
call
scas
sub
out
inc
cmp
lods
loop
lock
sbb
mov
dec
or
lods
insl
out
mov
idiv
inc
mov
pop
sbbb
ret
fisubs
insb
pop
add
fmull
aad
out
in
mov
add
jp
push
out
gs
cwtl
xchg
outsb
add
mov
rclb
test
push
clc
jmp
xchg
sub
cmp
mov
pop
popf
mov
movsl
xor
test
test
cmpsl
or
es
nop
sbb
test
orb
xchg
mov
mov
adc
clc
hlt
pop
jae
in
xchg
push
loopne
cmp
mov
adc
or
mov
inc
stc
inc
cltd
aas
imul
lret
lret
cmpl
push
ret
dec
xchg
adc
icebp
add
jl
dec
push
ret
mov
popf
rorb
iret
cld
gs
cmp
sarl
cwtl
mov
lea
lret
mov
jne
les
popf
add
fiaddl
js
push
mov
outsl
lock
xchg
shll
stos
ret
jne
adc
mov
lahf
mov
lods
lret
mov
sub
fdivl
popf
push
or
ret
int3
jmp
sub
fwait
aas
dec
push
jno
jmp
sub
jle
mov
mov
scas
sarb
sbb
faddl
aas
sbb
lcall
iret
jnp
and
sub
lods
xor
lret
lcall
mov
xlat
add
and
mov
in
jne
test
mov
add
loop
into
pop
std
xchg
mov
and
dec
stos
sbb
mov
ret
pusha
div
dec
push
out
adcb
or
push
xchg
sub
mov
mov
jns
fidivl
lcall
xchg
in
in
test
mov
lods
out
or
cmp
push
ljmp
jno
fbstp
gs
add
mov
inc
test
mov
arpl
cs
subl
or
pop
mov
sbb
and
into
lods
inc
stc
jne
push
in
xchg
adcb
pop
je
push
jmp
xchg
sub
mov
clc
fidivl
sbb
dec
loop
adc
in
test
rorb
icebp
xchg
mov
fsts
or
fists
mov
std
call
or
inc
add
cmp
mov
pop
loop
call
ja
lret
sti
push
xchg
mov
mov
outsb
inc
ficompl
shll
dec
pop
out
jle
adcb
lahf
jbe
shll
xor
and
mov
dec
ja
cwtl
shlb
pusha
stc
nop
xchg
jmp
test
ds
outsl
push
ss
nop
sub
rcrl
mov
dec
fists
stos
jb
fnsave
std
gs
nop
daa
xor
scas
inc
sbb
cmp
rclb
ljmp
dec
or
push
sahf
es
pop
lock
jp
iret
stos
inc
stc
jae
push
in
std
xchg
adcb
push
jne
push
out
xor
movsb
cmp
testl
clc
adc
sahf
xor
lods
fs
xor
mov
sub
inc
xlat
push
jmp
xchg
sub
pop
mov
out
mov
cmp
lods
inc
add
mov
lret
scas
ret
jne
jg
add
js
enter
push
call
dec
test
mov
insb
inc
ficompl
mov
pop
lock
adcb
sahf
ja
shlb
xchg
icebp
xchg
sub
mov
mov
jbe
xchg
shrl
pop
stc
nop
nop
ljmp
jecxz
or
int
sub
rclb
xchg
dec
loopne
test
addr16
fs
nop
daa
xchg
inc
sbb
int3
arpl
sub
pop
pop
imul
subl
dec
or
add
sbb
pop
jns
shrb
lret
push
out
cld
xchg
adcb
sbb
sahf
xor
mov
les
jno
pop
shrl
fdivrp
adc
xchg
mov
xor
mov
sub
inc
aad
jmp
xchg
daa
jo
pop
mov
jmp
jp
and
cmp
lods
inc
lcall
cmp
and
bound
ret
pop
fbstp
andb
pop
sahf
notl
xchg
test
es
push
fistpl
mov
pop
icebp
jp
sbbl
int
lahf
ss
out
xchg
sub
call
or
jae
xchg
shrb
pop
cli
xchg
mov
lock
mov
scas
loope
push
movsl
imul
into
xor
in
test
dec
loope
cmpsl
jae
fnstenv
push
sub
xchg
jg
movsb
cmp
mov
ret
hlt
jmp
es
ja
inc
or
add
sbb
push
in
inc
fcompl
ds
outsl
enter
nop
sbbl
dec
jecxz
ss
ss
dec
repz
jb
adc
imul
lock
mov
xor
les
rcll
add
dec
loop
and
imul
stos
add
lods
inc
std
pop
cmpsb
cmp
push
stos
les
jno
andl
push
add
dec
mov
inc
fcompl
mov
pop
icebp
js
sbbb
cltd
js
lret
popa
mov
sub
out
mov
jno
fnsave
shrb
pop
sti
xchg
in
xchg
scas
sbb
imul
sub
mov
fmull
or
cs
sub
addl
cmp
mov
ret
repz
andl
or
add
sbb
push
jmp
fstpl
cmp
movsl
cmp
pop
out
testl
mov
sub
xor
mov
icebp
mov
jae
adc
imul
xchg
mov
ss
or
jmp
pop
dec
loop
and
or
imul
test
lret
cld
push
cmpsb
cmp
dec
test
jmp
mov
les
mov
adcb
mov
shrb
fstpl
mov
pop
icebp
jbe
sbbl
xchg
js
leave
pusha
mov
sub
out
mov
outsl
pop
fidivs
nop
shrb
pop
cld
xchg
mov
lock
ss
movsl
add
shlb
mov
mov
fimull
or
push
sub
jg
sbb
jge
movsb
cmp
iret
shlw
in
test
loopne
stos
inc
or
xchg
sub
enter
push
jmp
cmp
mov
les
cmc
lea
cmovs
mov
sub
gs
fnsave
shrl
fsincos
xchg
or
xchg
sub
mov
mov
cmpsb
call
or
lds
rclb
add
lea
jae
push
scas
push
loopne
xchg
sub
enter
push
cmpsl
xchg
into
gs
cmpsl
lds
in
andl
or
jle
sub
inc
lahf
pop
mov
inc
ficoms
mov
pop
bnd
test
cmp
pop
mov
sbb
mov
insl
add
shrl
pop
std
xchg
mov
icebp
mov
lods
sbb
gs
cmp
das
xchg
out
sbb
jne
aad
imul
sub
push
mov
mov
jnp
movsl
cmp
popf
iret
iretw
and
in
test
jns
js
inc
or
xchg
sub
pop
push
mov
out
ficomps
jb
shll
les
cmc
mov
adc
mov
cs
xor
dec
out
test
je
adc
imul
xchg
or
xchg
sub
mov
mov
cmpsl
call
or
cmp
push
in
lcall
in
and
lods
imul
jae
sub
mov
clc
push
test
test
iret
dec
cmpsb
pop
fsubrs
sahf
stc
in
sub
or
jge
sub
inc
sahf
and
xchg
lock
mov
std
call
or
adc
pop
mov
das
sbb
mov
insb
add
ja
aam
mov
loopne
mov
stos
sbb
adc
sub
dec
pop
out
jg
dec
jecxz
mov
push
pop
hlt
xchg
sub
jle
pop
mov
mov
jns
cmpsb
cmp
int
les
out
out
test
js
jns
inc
or
jb
add
les
dec
fists
jo
aam
aaa
data16
push
mov
inc
fsubl
das
lcall
dec
in
sbb
mov
aad
inc
aad
xchg
pop
mov
adc
stos
pop
xor
cmp
push
in
std
pop
dec
in
push
jne
push
stos
insb
add
jno
sub
lds
aas
sbbl
addr16
movsb
pop
imul
popf
mul
jnp
mov
add
inc
pushf
and
xchg
out
ds
mov
out
pop
repz
xchg
les
cmp
scas
ret
cmp
js
mov
imul
repnz
test
adc
sub
lds
dec
jecxz
mov
push
pop
repz
sub
jl
pop
scas
inc
mov
js
cmpsb
cmp
int3
and
pop
push
in
out
xchg
jbe
jns
inc
or
xchg
cli
xchg
sub
ret
sbb
mov
in
loopne
outsb
cmp
rcrb
mov
adc
cmp
rcrl
mov
jmp
fbstp
or
insb
ds
xchg
push
pusha
repz
mov
test
jns
shrb
lret
push
out
cld
push
dec
in
sbb
insb
add
jo
sub
les
aas
adcl
pop
aam
out
xchg
or
cltd
jns
sub
inc
lcall
xchg
in
ds
mov
jmp
ds
rep
pop
xchg
cmp
movsl
cmp
jecxz
das
adc
ss
push
mov
imul
repnz
cmpsl
push
mov
das
adc
sub
pop
icebp
jl
dec
jecxz
sahf
js
shlb
push
pop
icebp
xchg
sub
lods
inc
mov
jbe
cmpsb
cmp
leave
and
pop
push
ljmp
cmpsb
cmp
add
rcrb
mov
loope
loope
insb
ds
xor
fs
xchg
inc
fsubs
xchg
sub
pop
pop
mov
dec
jmp
or
insl
cmp
xchg
add
mov
mov
test
cmpsl
add
enter
out
stc
push
dec
out
sbb
dec
cmpsl
insl
add
insl
xchg
sub
cli
mov
sub
mov
repz
test
imul
lock
mov
add
ds
and
nop
ljmp
in
pop
hlt
insl
add
jnp
rcrb
mov
cltd
xor
lods
les
xor
dec
jmpw
jns
mov
insb
mov
fcomi
mov
adc
sub
pop
icebp
jp
dec
in
pushf
js
into
and
xchg
sub
stos
inc
mov
je
cmpsl
ds
xchg
shrb
pop
pop
push
call
in
movsl
cmp
movsl
insb
movb
testl
dec
loope
imul
pushf
xor
bound
xchg
inc
movsb
cmp
arpl
pop
pop
mov
dec
call
or
outsb
cmp
xchg
add
mov
mov
stos
loope
cmp
movsl
add
leave
xor
pop
out
notl
test
ja
dec
cmpsb
outsb
add
popf
stc
mov
sub
stos
inc
jle
shrb
lahf
enter
lock
mov
add
jbe
sub
mov
mov
inc
xlat
sbb
pop
cmc
insb
add
adc
loopne
xor
stos
les
xor
jns
xchg
insl
mov
mov
push
mov
sub
cmp
xorb
mov
pop
icebp
js
dec
in
lcall
push
in
xchg
sub
stos
inc
mov
jb
test
std
xchg
shrb
push
pop
push
out
xchg
jb
jl
cmp
movsl
push
add
mov
fisttpll
push
push
xlat
fwait
das
push
cmc
in
addl
cmp
bound
pop
pop
mov
push
out
loopne
lods
or
outsl
cmp
xchg
lcall
lea
scas
adc
fbstp
shlb
les
cmc
push
push
call
dec
movsb
outsl
push
imul
dec
out
dec
stos
inc
jl
shrl
popf
leave
pusha
iret
arpl
mov
mov
cmpsb
call
or
lds
xchg
and
mov
inc
fcomps
scas
push
loopne
pop
imulb
mov
xor
cmpsl
ds
fwait
xor
test
pop
fidivl
mov
jp
test
outsb
mov
add
or
adc
and
xor
scas
inc
pop
bnd
dec
out
cwtl
jns
lret
add
jmp
cs
ds
jo
test
push
sbb
pop
dec
in
mov
jo
jge
aaa
push
mov
mov
or
inc
fcomps
mov
xchg
mov
jle
shll
xor
mov
push
in
loope
stos
push
fnstenv
int3
call
mov
push
mov
lods
adc
shll
les
cmc
push
push
call
dec
mov
xchg
cs
cmc
lea
mov
stos
inc
jp
aam
inc
fwait
leave
pusha
int
repnz
mov
cmpsl
call
or
cmp
dec
in
in
fcoms
scas
imul
aaa
pop
imulb
mov
xor
test
xchg
fwait
xor
test
pop
fisubrl
mov
jnp
adc
mov
add
or
adc
and
xor
lods
inc
pop
repz
dec
out
xchg
jp
leave
and
push
ljmp
cmpsb
cmp
stos
inc
stc
nop
aam
ret
pusha
dec
jecxz
mov
adc
repnz
lds
fimull
inc
fsts
mov
mov
mov
jg
cmp
cmpsb
cmp
nop
and
mov
jns
add
jno
lret
add
mov
push
lods
fldt
aam
cld
xor
sub
dec
push
jmp
inc
mov
cwtl
das
cltd
repz
in
inc
lods
inc
js
aad
inc
cltd
lret
popa
repz
mov
test
aas
push
popf
jo
xor
cmp
dec
in
jecxz
fsts
insb
add
xor
mov
xor
test
test
pushf
xor
cs
jnp
sbb
mov
add
pop
lahf
and
pop
icebp
ds
jnp
leave
lods
inc
pop
repz
push
out
xchg
jp
pop
outsl
push
push
call
lea
stos
inc
clc
mov
imul
lret
loope
mov
insl
call
cmpsl
rolb
icebp
xchg
lds
fmuls
gs
ficoml
mov
clc
call
or
cmp
and
pop
push
mov
push
loop
loop
test
leave
add
mov
pop
mov
test
cmp
int3
sub
pop
repnz
dec
push
ljmp
jno
shll
das
xchg
repnz
es
mov
jmp
lods
inc
ja
aad
ds
lret
lret
mov
mov
test
ds
sahf
outsl
add
and
in
loop
ficoml
stos
insb
add
xor
clc
gs
mov
das
xchg
mov
ficompl
pop
sub
in
sub
add
push
popf
and
pop
out
ds
jp
lret
pop
repz
push
call
lds
jo
push
out
das
sbb
and
imul
inc
testl
mov
insb
jmp
cmpsl
arpl
lds
dec
jecxz
fs
fistl
mov
stc
out
mov
lods
or
cmp
mov
les
scas
mov
jns
add
jae
movl
xchg
xchg
pop
mov
test
scas
fldcw
aam
cli
ss
mov
push
jmp
adc
inc
sahf
jb
shlb
das
xchg
icebp
nop
daa
and
scas
inc
jbe
aad
cmp
int3
arpl
pop
repz
mov
test
cmp
xor
xor
es
xchg
inc
fistl
test
add
xor
fs
mov
sub
dec
test
sbb
xor
aam
mov
jnp
sbb
mov
add
add
es
lods
push
in
ds
jns
lret
stos
aas
pop
repz
push
jmp
ret
sbb
cwtl
das
push
jno
mov
les
imul
mov
imul
popf
xor
cmpsl
popa
mov
lds
aam
jecxz
arpl
xchg
es
pop
mov
cli
out
mov
stos
pop
sbbb
int3
cmpsb
cmp
mov
lds
mov
jp
add
je
lds
cwtl
notb
xchg
test
and
xlat
imul
into
sub
in
jnp
jnp
inc
pushf
jae
into
popa
cltd
xor
mov
dec
out
scas
inc
je
insl
cmp
hlt
mov
scas
adc
insb
add
enter
mov
test
inc
fcoml
cmpsb
insl
add
xor
stc
mov
sub
inc
jle
lahf
or
mov
jl
jle
jb
inc
add
add
pop
scas
push
jmp
sbb
xor
hlt
outsb
leave
push
ljmp
jb
dec
loop
xor
nop
daa
mov
ret
hlt
mov
insb
mov
fcomi
mov
adc
in
subb
mov
sub
add
fstl
mov
sti
in
mov
test
lret
cld
pop
mov
pop
dec
stos
mov
jnp
fnsave
add
adcl
mov
aad
aas
test
test
fwait
or
adc
or
clc
rol
mov
push
mov
mulb
incb
and
sub
xchg
in
jle
cmp
mov
fmull
add
pop
and
sbbl
fdivr
adc
cmp
mov
pop
ds
aad
xchg
aam
mov
bound
xor
sub
out
lea
dec
cmc
push
inc
push
adc
push
data16
dec
cmpsb
inc
dec
arpl
fwait
lods
pop
repz
das
jg
add
sbb
in
roll
xchg
pop
das
addb
xor
aas
xchg
dec
inc
aaa
je
lock
outsb
jp
call
mov
push
pusha
mov
iret
and
insl
xor
stos
push
dec
stos
inc
dec
dec
je
ret
pop
xchg
push
outsb
sti
push
data16
jo
nop
or
and
xor
mov
jo
add
add
cmp
jecxz
jle
cli
pop
fwait
push
shrb
das
loope
sub
insl
leave
or
roll
rcrb
sbb
lea
pusha
aas
lea
fnstsw
dec
cmp
push
in
stos
dec
rcll
mov
add
in
cmp
pop
add
cmp
cmp
stc
jnp
push
cmp
stos
popf
mov
lods
aad
enter
mov
push
dec
iret
dec
jb
bound
or
push
xchg
shlb
rolb
repnz
mov
fldcw
aam
in
jae,pt
fdivl
cwtl
test
rcrl
hlt
mov
cmp
push
in
cwtl
xchg
cwtl
aam
cmp
dec
mov
sub
sbb
ljmp
and
xor
es
mov
in
or
or
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmpsl
js
ret
push
es
and
sbb
inc
jl
add
xchg
adc
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
sahf
fisubrs
and
fisttpll
xchg
pop
sub
xchg
mulb
xchg
inc
movb
nop
enter
arpl
push
mov
rcl
stc
out
sbb
xor
scas
jno
mov
aam
cmp
stos
stc
ja
pop
ja
cld
pop
sub
add
xchg
mov
sahf
orl
pop
sub
imul
sub
mov
jmp
data16
cmpl
orl
jle
jge
jl
sub
push
call
lock
inc
lahf
stos
stc
pop
jo
sbb
sbb
jg
xor
fucom
jno
mov
leave
daa
cmp
pop
pop
add
add
sbb
xchg
shr
or
dec
test
xchg
jbe
sub
lcall
outsl
push
cmp
aam
sub
sub
ds
adc
es
fidivrl
push
stc
pushf
cli
or
adc
hlt
test
insl
inc
int
mov
fcomp
mov
aam
ja
lea
repnz
push
push
popa
out
jecxz
aad
popf
lret
fidivs
xor
mov
or
mov
test
mov
lret
scas
or
cmp
mov
in
test
insl
lods
popa
in
push
sahf
mov
adc
pusha
xor
dec
sub
sub
popa
cmp
lods
or
cmp
cmp
add
jg,pn
jnp
ds
fldenv
jmp
xor
or
adc
out
sbb
xchg
add
xlat
cli
dec
or
fstpt
and
xlat
or
push
jns
push
ficoml
arpl
data16
stos
pop
jns
xor
jnp
and
xchg
xchg
add
stos
mov
inc
sub
and
pusha
cwtl
push
and
adc
insb
addl
xor
stc
pushf
add
lahf
dec
aas
loop
mov
lcall
lret
