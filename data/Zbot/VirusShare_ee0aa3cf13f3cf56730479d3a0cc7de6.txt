push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzwl
pop
ret
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
cmpl
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
movl
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
movl
jmp
mov
add
mov
mov
cmp
jge
mov
add
movzbl
mov
movl
mov
add
mov
mov
movl
jmp
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
cmpl
ja
cmpl
je
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
cmpl
je
jmp
mov
jmp
movl
push
push
mov
push
call
xor
jmp
mov
and
je
cmpl
jge
mov
and
movzwl
mov
mov
mov
shr
and
movzwl
mov
mov
mov
add
mov
mov
push
call
mov
push
mov
shr
and
movzwl
push
mov
and
movzwl
push
mov
push
call
mov
push
mov
push
call
xor
jmp
push
push
mov
push
call
xor
jmp
lea
push
mov
push
call
mov
push
push
call
push
call
push
call
movl
jmp
mov
add
mov
mov
sub
cmp
jge
mov
add
mov
jmp
mov
add
mov
mov
cmp
jge
mov
mov
push
mov
mov
push
mov
push
call
jmp
jmp
push
call
push
push
call
push
call
lea
push
mov
push
call
xor
jmp
push
call
xor
jmp
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
pusha
movl
movl
movl
movl
movl
movl
push
push
call
mov
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
lea
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
call
movl
movl
mov
mov
lea
push
push
push
call
test
je
xor
jmp
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
popa
mov
mov
xor
je
ret
mov
add
jmp
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
pop
add
jns
jae
je
add
xor
xor
pop
add
popa
add
imul
je
add
add
add
add
xor
xor
xor
add
inc
dec
push
dec
inc
pop
jnp
xor
inc
inc
xor
xor
sub
sub
sub
xor
xor
xor
dec
outsb
push
jb
arpl
jb
gs
xor
fdivs
add
xor
add
add
lock
add
xor
add
add
sub
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
add
add
add
push
xor
add
xor
add
xor
add
add
dec
xor
add
add
push
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
add
add
add
push
xor
add
xor
add
xor
add
add
dec
xor
add
add
push
xor
add
xor
add
add
add
add
xor
add
xor
add
xor
add
add
add
xor
add
add
add
push
imul
insb
insb
outsl
arpl
add
addl
imul
imul
jns
add
cmpsl
add
jae
jb
popa
je
add
jg
inc
jb
popa
je
inc
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
push
dec
inc
dec
xor
cs
insb
add
stos
add
jbe
insb
imul
je
add
add
je
inc
add
gs
gs
jae
inc
inc
add
add
imul
add
rolb
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
mov
push
push
jb
outsl
jb
add
add
fs
popa
imul
push
outsl
jae
push
jne
je
gs
popa
add
gs
imul
outsl
arpl
add
add
fs
arpl
inc
add
push
imul
popa
jae
inc
js
add
add
gs
je
push
imul
inc
add
inc
push
xor
cs
insb
add
addb
gs
imul
add
gs
outsl
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
push
gs
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
add
add
mov
inc
add
ljmp
cltd
jmp
cmpsb
cld
add
jno
popa
fs
jns
into
add
jno
popa
fs
jns
insl
fadds
add
je
dec
jmp
insb
pop
popa
outsb
push
jecxz
inc
mov
add
jbe
gs
sub
inc
imul
jecxz
jb
icebp
je
mov
add
repnz
je
or
outsl
add
inc
imul
loope
inc
mov
add
repnz
je
loop
jne
rcl
popa
outsb
fsincos
gs
mov
add
mov
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
je
addr16
arpl
repz
data16
add
clc
bound
loope
inc
cmp
cmc
jb
adc
xor
shl
insb
insb
mov
add
and
jbe
pop
in
fs
add
or
insl
jae
jecxz
add
loop
arpl
jecxz
fs
sti
add
loopne
insl
arpl
call
jb
shl
inc
mov
popl
add
lock
inc
mov
popl
add
insl
popa
test
imul
add
add
inc
pop
sti
add
lock
push
inc
je
push
jecxz
add
popa
jo
sti
insb
outsl
push
nop
add
push
repz
sbb
xor
lret
rep
insb
mov
add
repnz
pop
std
arpl
loope
gs
add
mov
in
mov
pop
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
add
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
xchg
add
pop
popl
jmp
mov
add
or
add
testb
jmp
mov
nop
add
mov
add
mov
add
mov
add
xchg
add
mov
popl
jmp
popl
add
adc
pop
jle
add
add
add
add
add
add
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
xchg
mov
add
add
fmull
add
int3
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
adc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
outsl
gs
add
mov
lods
add
add
add
jbe
add
ja
add
jbe
add
andb
xlat
add
mov
and
mov
ret
add
jbe
add
jbe
add
mov
add
push
jno
and
add
add
add
int
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
int3
xchg
add
int3
xchg
add
pushf
xchg
add
pushf
xchg
add
mov
add
pushf
xchg
add
pushf
xchg
add
mov
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcoml
add
int3
xchg
add
int3
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
movsb
add
bound
mov
movsb
add
out
add
cli
mov
add
sbb
add
aad
mov
fbstp
mov
add
push
mov
popl
mov
sub
mov
add
add
jmp
mov
fbstp
divl
cltd
mov
jno
mov
push
mov
mov
sub
mov
mov
jg
mov
inc
mov
mov
or
mov
jmp
mov
and
add
or
add
or
popl
out
popl
aad
popl
loope
popl
outsl
push
add
popl
xchg
dec
popl
outsl
inc
popl
mov
add
mov
add
mov
add
sbb
add
sbb
add
adc
add
popl
push
pop
popl
push
popl
xchg
pop
popl
mov
pop
popl
add
sub
add
sub
add
sub
add
aaa
add
mov
add
dec
aaa
add
inc
aaa
add
adc
add
in
aaa
add
cmp
add
repnz
add
add
add
loop
add
bound
add
scas
sub
add
sub
add
add
cmp
add
xor
add
mov
add
jl
add
stos
sub
add
sub
add
cmp
add
cmp
add
xor
add
mov
stos
add
mov
test
add
cmp
add
adc
add
cmp
add
jl
add
cmp
add
in
add
add
add
test
add
sub
add
inc
lods
add
jbe
add
mov
mov
mov
mov
mov
jne
mov
inc
mov
mov
cpuid
mov
xor
mov
mov
mov
repz
mov
lea
mov
sub
mov
jne
mov
popa
movsl
mov
mov
movsb
mov
popf
movsb
mov
mov
movsb
mov
add
mov
adc
adc
mov
aas
push
mov
jge
mov
imul
add
push
mov
sub
mov
adc
mov
in
add
add
mov
lods
sub
mov
xor
push
inc
xchg
add
xchg
add
xchg
add
sub
add
xor
add
inc
xchg
add
cmp
add
xchg
add
inc
xchg
add
cmp
add
jl
add
orb
pusha
or
add
mov
add
add
or
add
dec
aaa
add
fcoml
add
or
add
clc
sub
add
xchg
add
les
add
sahf
xchg
add
and
add
pop
add
pushf
xchg
add
push
pop
add
mov
and
add
and
add
add
add
and
add
test
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
jo
add
adc
add
sub
add
aam
add
je
add
add
add
and
add
mov
add
jmp
mov
pop
cltd
mov
setns
push
cwtl
mov
cmp
cwtl
mov
pop
cwtl
mov
lret
lahf
mov
fstps
mov
fstl
mov
stc
xchg
mov
sub
mov
inc
cwtl
mov
sets
add
add
jnp
mov
dec
cwtl
mov
xor
cwtl
mov
xchg
cwtl
mov
push
cwtl
mov
pop
cwtl
mov
out
mov
out
cwtl
mov
lcall
mov
add
nop
add
nop
add
sbb
add
dec
nop
add
inc
nop
add
cmp
add
sub
add
sub
nop
add
push
nop
add
dec
nop
add
dec
nop
add
inc
nop
add
cmp
add
sub
add
nop
add
popl
lahf
dec
popl
mov
popl
xor
popl
inc
xor
add
popl
rcrl
popl
rcll
add
add
sbb
add
pop
std
add
mov
std
add
dec
std
add
stos
sti
add
in
add
out
add
loopne
add
je
add
cmp
add
add
sti
add
push
add
add
add
outsb
add
add
add
add
add
xchg
add
lods
add
add
add
add
add
mov
add
jo
add
cmc
add
mov
add
jo
add
jb
add
mov
lcall
add
add
push
lods
add
lret
mov
lods
add
adc
add
inc
stos
add
insb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
add
xor
icebp
scas
add
pmulhw
mov
jge
mov
out
mov
xchg
scas
mov
in
mov
jmp
mov
cmp
mov
pop
scas
mov
clc
add
popl
mov
out
mov
faddl
mov
xlat
add
psubw
mov
jmp
mov
testb
mov
cmp
add
add
pminub
mov
hlt
add
paddw
mov
jmp
lods
mov
ljmp
mov
pop
pop
mov
test
add
and
sub
mov
sub
and
sbb
or
jmp
push
mov
cltd
dec
mov
mov
add
add
add
inc
mov
jmp
mov
fldenv
mov
lods
daa
mov
mov
mov
jmp
xor
popa
dec
dec
mov
inc
clc
cmp
pop
mov
imul
push
scas
push
xchg
popf
rcrl
xchg
pop
dec
and
cwtl
mov
addr16
pop
mov
inc
decl
cld
and
pop
mov
insl
ljmp
sub
rclb
ficomps
dec
or
pusha
jno
xor
inc
ljmp
lret
add
pusha
into
faddl
cmc
lods
push
rcll
sub
add
mov
and
dec
loopne
xchg
pushf
dec
jb
ja
cld
and
mov
lret
mov
adc
xchg
aas
movsl
mov
add
add
sub
std
jge
sub
dec
movsl
jg
fdiv
mov
mov
imul
dec
cli
fimuls
mov
fwait
sbb
call
arpl
mov
mov
movsl
cld
sbb
ds
shrl
rol
sti
xchg
add
movsb
int3
std
shl
popf
adc
movsb
jno
movsb
jno
mov
jmp
daa
loopne
add
jg
popf
mov
cs
cmp
xor
jo
jg
ss
jmp
movl
jg
gs
jmp
popf
cmpsl
xor
ss
jmp
imul
push
ss
jmp
cmp
xchg
mov
cmp
add
add
int3
int
add
dec
cs
inc
lods
sarl
adc
pop
cs
pop
and
pop
sbb
popf
aas
adc
shrb
push
in
xor
pop
dec
adcl
push
xchg
push
or
sbb
inc
adc
sub
and
mov
inc
adc
adc
mov
add
divl
dec
jae
sbb
outsl
shlb
aad
dec
or
adc
dec
pop
and
mov
jg
inc
adc
pop
enter
nop
xorl
lcall
jecxz
xchg
lods
aaa
nop
inc
xchg
add
in
dec
fisubs
adc
mov
std
pushl
add
scas
pop
rclb
inc
mov
shlb
std
fidivrl
lcall
add
addr16
scas
insl
or
add
arpl
xchg
shrl
aas
jge
adc
inc
add
mov
and
sahf
stc
in
mov
add
push
push
cli
inc
cmp
movsb
mov
mov
sbb
clc
xchg
out
shll
push
mov
cmp
add
dec
add
jg
mov
les
std
inc
add
sub
rcrb
shlb
cltd
mov
push
add
mov
add
insb
add
push
in
add
in
mov
or
add
add
in
add
fldenv
testb
add
fldenv
testb
add
loope
aad
imul
testb
add
mov
add
aad
xchg
add
scas
filds
jmp
mov
test
jmp
mov
das
add
scas
popl
jmp
mov
outsl
add
mov
mov
jmp
mov
xchg
add
scas
xlat
add
mov
aas
add
mov
out
jmp
mov
add
add
pop
add
mov
pop
add
mov
mov
adc
loope
jecxz
fisttps
je
faddl
enter
or
add
andl
subb
int3
addl
pushf
call
add
sbb
pushf
pushf
cwtl
add
push
add
cmp
pop
pushf
fadds
pop
xchg
pop
add
add
add
add
add
add
dec
add
clc
add
cmp
push
mov
or
mov
or
mov
or
cmp
xor
inc
add
mov
or
cmp
and
cmp
add
add
add
cmp
in
dec
add
mov
or
cmp
sbb
insb
add
mov
or
cmp
cmp
dec
add
mov
or
cmp
sub
cmp
or
stc
add
fiaddl
add
add
mov
add
vprotq
jmp
or
nop
jmp
or
nop
fldl
nop
jmp
or
nop
sti
add
vphsubdq
jmp
jmp
mov
fldl
jmp
scas
dec
add
mov
sahf
add
scas
adc
mov
add
mov
add
mov
add
mov
outsb
add
mov
call
mov
into
add
mov
add
mov
add
mov
cmpsb
add
mov
add
mov
add
mov
xchg
jmp
mov
add
mov
cwtl
sub
dec
fwait
mov
dec
cwtl
or
sbb
mov
sbb
dec
add
repnz
add
sbb
push
add
adc
add
nop
sub
fcoml
xor
add
nop
or
add
xchg
and
add
xchg
add
add
ljmp
add
add
sbb
add
push
add
add
add
add
cmp
insl
mov
or
mov
or
mov
or
cmp
mov
add
mov
or
cmp
adc
add
mov
or
cmp
xor
inc
add
mov
or
add
add
cmp
cmpsb
mov
or
mov
or
mov
or
mov
add
mov
or
cmp
sbb
insb
add
cmp
jnp
vfrczsd
jmp
or
stc
add
add
add
fiaddl
cmpsb
mov
add
vpshad
jmp
or
nop
jmp
or
nop
add
mov
add
mov
mov
jmp
mov
add
mov
js
jmp
scas
or
jmp
mov
fadds
jmp
mov
add
mov
lahf
add
scas
mov
add
mov
jg
jmp
rcll
add
scas
outsl
add
test
popl
jmp
scas
iret
add
test
xchg
add
mov
xchg
sbb
mov
add
pop
xchg
js
dec
xchg
cmp
dec
fwait
roll
dec
dec
adc
pop
xchg
push
add
add
or
sbb
mov
or
dec
add
icebp
add
add
sbb
push
add
adc
loope
jecxz
cmovns
add
xchg
je
int3
xchg
xor
int3
lcall
fcoml
and
int3
lcall
pushf
fwait
test
mov
jmp
pop
mov
or
or
fs
push
mov
or
or
dec
push
mov
or
or
cmp
or
cmp
mov
cmp
mov
incb
mov
or
cmp
adc
imul
jb
add
add
cmp
lds
cmp
bound
cmp
movsl
mov
or
mov
or
testl
jmp
or
testl
jmp
cld
cmpsl
add
add
jmp
cld
mov
jmp
or
cmpsl
clc
cld
mov
vprotq
add
mov
or
add
mov
cwtl
add
scas
in
jmp
mov
mov
jmp
scas
test
jmp
mov
stos
add
scas
mov
jmp
mov
xchg
add
scas
adc
add
mov
inc
jmp
scas
sahf
add
mov
movsl
add
scas
mov
add
rcll
stc
mov
scas
add
int3
dec
and
pushf
inc
mov
add
inc
add
add
mov
pop
add
xchg
add
dec
js
dec
dec
cmp
pop
inc
rolb
dec
cltd
adc
dec
dec
push
add
mov
sbb
or
or
mov
or
dec
add
repnz
add
or
push
add
adc
or
add
setns
add
inc
je
int3
inc
xor
faddl
add
add
add
ss
and
cmp
stos
mov
sti
add
cmp
test
cmp
ljmp
sti
pop
mov
sti
sbb
cmp
lcall
sti
jl
cmp
cmp
cmp
fidivl
cmp
insb
mov
sti
sub
cmp
mov
mov
sti
mov
cmp
cli
mov
or
mov
sti
push
mov
sti
adc
or
mov
sti
jb
clc
or
vphadduwq
jmp
sti
aaa
vprotq
jmp
sti
iret
fisttpll
testb
sti
sti
or
add
add
stc
or
vphadddq
add
lods
jle
jmp
into
js
jmp
lods
xchg
add
mov
push
jmp
sahf
mov
jmp
mov
add
xor
stc
lods
xchg
add
jle
add
outsb
mov
add
outsl
and
ret
dec
addb
dec
bound
sti
lods
movsb
add
ds
jmp
das
add
jmp
push
adc
jmp
cmovb
stc
mov
mov
add
mov
add
mov
adc
mov
add
xchg
inc
add
xchg
add
xchg
add
les
and
mov
add
jle
or
xchg
addl
jl
add
adcl
add
add
jge
pop
add
xchg
popa
add
add
xchg
add
inc
xchg
add
adc
add
xchg
or
or
xchg
roll
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xor
add
popa
add
mov
add
mov
adc
sub
xor
sub
enter
xlat
push
pop
test
mov
js
push
sti
jp
mov
data16
push
mov
shrb
mov
dec
mov
sub
lock
enter
lock
mov
cmp
adc
loopne
mov
mov
adc
fwait
dec
mov
int3
push
cmp
mov
mov
shlb
dec
rsm
cmp
mov
jnp
hlt
or
cmp
repnz
mov
es
test
add
and
mov
adc
dec
pusha
insl
adc
jmp
mov
add
xchg
adc
jne
add
loopne
imul
pop
mov
lret
push
jo
stc
into
ficomps
cld
mov
cmp
pop
cmp
mov
mov
jp
das
clc
andb
or
mov
pop
negl
out
pop
add
popa
cwtl
add
pushl
sub
push
dec
xchg
std
sahf
fisubrl
clc
out
das
xchg
js
outsl
nop
packuswb
xchg
mov
mov
or
mov
call
call
mov
sbb
mov
mov
testb
int
or
lcall
adc
mov
fsubl
xchg
ficoml
ffreep
rorl
mov
dec
push
xorb
jle
mov
dec
dec
mov
shll
pop
imul
mov
pusha
fisubrl
add
stc
add
mov
aaa
or
dec
or
test
inc
add
push
repz
and
cld
dec
nop
push
aad
scas
data16
add
sub
loopne
sti
inc
int3
fiadds
dec
imul
sbbb
cmpsl
clc
mov
mov
push
mov
nop
ret
xchg
mov
mov
mov
add
inc
aad
lret
sbb
fstpt
push
bound
push
fs
add
rcl
push
repnz
lods
push
push
lcall
add
mov
lods
jbe
aas
sbb
mov
das
lds
inc
xor
sets
popa
cwtl
push
add
jg
push
cmp
push
push
or
cmp
cld
cmp
fsincos
or
mov
mov
gs
shll
test
lods
insl
ja
push
cwtl
popa
ds
push
xor
icebp
mov
sub
adc
mov
add
ljmp
sti
xchg
inc
sub
mov
mov
inc
scas
test
inc
jne
mov
jecxz
mov
mov
and
jl
mov
ljmp
and
mov
rcr
cli
mov
mov
pop
mov
popa
ret
pop
mov
sbb
sub
dec
pop
pop
jns
mov
pop
subl
jecxz
stos
add
xchg
aad
jb
movsl
popl
xchg
or
loop
fwait
mov
add
mov
aaa
mov
xchg
dec
pop
aad
push
pop
fdivrl
fimull
rolb
xchg
aam
les
adc
pop
leave
ds
idivb
shlb
mov
incl
add
add
cmp
adc
mov
and
outsl
push
imul
insb
push
hlt
sub
or
mov
add
pop
sbb
cmp
sub
mov
aas
imul
jl
rorl
sbb
insb
mov
fdivp
mov
fmuls
jae
mov
jb
mov
xor
mov
pushl
add
data16
sarb
mov
add
fiadds
pusha
dec
data16
cmp
and
addr16
cltd
xchg
add
jne
jbe
cmpsb
add
shrb
add
mov
adc
ss
jmp
in
rorb
and
ljmp
insl
hlt
icebp
jns
dec
xor
pop
cmp
add
cmc
ss
stos
inc
arpl
data16
push
push
out
sets
hlt
leave
fldenv
in
loop
push
add
mov
jg
nop
dec
xchg
ja
lea
pushf
mov
adc
cwtl
call
mov
inc
daa
inc
sub
mov
hlt
pop
outsl
idiv
inc
mov
xor
out
xor
add
lret
add
dec
xchg
daa
icebp
xchg
inc
call
add
dec
ficoml
aam
xchg
fmul
inc
roll
outsl
add
jbe
faddl
and
scas
xchg
adc
stos
int
jnp
rol
mov
arpl
mov
pushf
addr16
mov
push
mov
inc
dec
or
jo
call
cmp
outsl
inc
jae
out
daa
push
pushf
dec
inc
or
mov
fmul
jmp
pop
sub
adc
fistps
cmpsb
push
ljmp
mov
adc
adc
int3
pop
mov
cli
outsb
jg
ja
outsb
mov
mov
imul
xchg
cmp
xlat
fsubrp
sbb
movl
add
add
idiv
cmc
adc
popa
jb
push
jns
mov
mov
pop
je
push
push
mov
adc
mov
xor
fld
inc
and
add
pop
out
test
iret
jmp
jb
mov
mov
cmpsl
cmpsb
xchg
mov
and
aas
add
adc
xor
xor
call
push
add
add
add
dec
cmp
je
aas
loop
dec
and
repnz
adc
fsts
gs
push
mov
push
mov
std
lret
mov
lret
jmp
cpuid
or
pop
popa
add
sub
xor
outsb
mov
into
dec
mov
out
das
popa
lret
jl
pop
adc
add
add
sub
out
ds
cmc
and
imul
out
fadds
sub
mov
xchg
shlb
mov
adc
mov
pop
push
mov
xorl
push
pop
mov
fildl
sub
lock
loope
sbb
xchg
jnp
fnsave
insl
and
jge
dec
out
mov
pop
not
xor
xchg
mov
xchg
sbbb
cmpsb
lret
mov
clc
mov
dec
push
dec
mov
daa
push
lret
xchg
ds
dec
push
out
into
inc
or
pop
xchg
adc
addl
cmp
iret
mov
std
cwtl
xlat
scas
adc
add
add
int
pop
xor
aas
ja
pop
push
out
outsl
dec
sbbl
jp
mov
cli
lret
fwait
out
rcrb
int3
stc
xlat
loopne
cltd
xchg
scas
addr16
mov
jge
popf
aad
mov
add
cmp
adc
push
sub
dec
addr16
cmpsb
push
jle
bnd
lea
dec
sbb
subl
add
add
push
mov
push
adc
in
cmp
and
jns
push
push
loope
sbb
gs
ds
fdivs
jmp
neg
mov
jmp
ret
enter
xor
call
filds
or
dec
sub
movsb
add
mov
adc
mov
or
pop
xchg
rorb
inc
cmc
test
mov
mov
orb
pusha
call
out
movsl
rolb
int3
xchg
ss
cmp
push
push
cmc
pop
inc
dec
mov
sti
cli
es
insl
mov
lock
ficompl
pop
rcr
jmp
sub
inc
fdivs
xchg
adc
add
add
xchg
lds
xchg
xchg
shrl
aas
sub
push
cmpsb
popf
outsb
cli
gs
lahf
mov
popf
mov
iret
cwtl
mov
lock
mov
int3
sbb
push
add
sbb
sti
cli
pop
adc
mov
adc
pop
daa
adc
fists
pop
add
add
or
adc
push
sub
adc
leave
repz
xchg
test
cmp
lcall
cmp
cmp
xchg
cmp
push
orb
mov
lahf
xchg
or
inc
int3
inc
xor
xorb
insb
imulb
cmp
and
xchg
enter
frstor
pop
xor
and
fisubs
and
movsl
js
jecxz
mov
sub
lea
dec
arpl
adc
lcall
lret
add
xor
ja
fcoml
mov
push
aad
mov
mov
movsl
dec
jg
cltd
or
jl
cmpb
inc
js
add
add
fcmovne
mov
inc
jle
test
cli
pop
add
ja
cmp
pop
inc
sti
repnz
push
cmp
push
in
adc
sub
ret
jmp
cmpsb
sbb
adc
pop
and
int3
sub
xlat
in
inc
fs
pop
xor
repnz
sbb
test
pop
add
fstps
sti
fnsave
js
filds
icebp
int
pop
stos
iret
add
rcrb
add
push
lds
fnstsw
or
push
mov
adc
aam
push
push
xchg
enter
leave
cmp
mov
ljmp
lret
pop
lret
imul
xorb
lret
nop
pusha
out
inc
ja
xor
fstpl
or
xor
dec
fwait
cmp
jecxz
cmp
pop
dec
out
jmp
gs
dec
pop
jnp
cmp
cmp
ljmp
jle
es
cld
push
lcall
aad
test
add
or
xchg
pop
lret
clc
mov
add
add
nop
repz
dec
repnz
lods
push
lock
shl
jge
cwtl
hlt
mov
sbb
pushf
dec
dec
ljmp
out
sub
lock
adc
fidivrs
clc
faddl
adc
imul
insl
test
aam
mov
sarb
pop
out
pop
mov
fsub
pop
lds
add
add
cmp
adc
mov
xchg
ret
jle
rol
inc
sti
adc
fs
mov
loop
leave
enter
leave
add
xchg
xchg
mov
scas
xchg
ret
out
nop
mov
xor
movsl
xchg
pop
fldenv
add
and
hlt
and
xadd
add
add
adc
dec
fdivrs
cli
inc
fwait
sub
sub
jnp
cs
shl
pop
daa
out
mov
xor
inc
add
iret
xor
mov
ds
add
in
sub
push
pop
aaa
cwtl
jae
xor
push
xchg
xor
pop
push
cmp
xor
aad
push
aam
dec
sarl
lock
add
add
fbld
cmp
stc
xor
pushf
clc
cli
addr16
ret
mov
inc
lock
out
push
mov
repnz
and
pop
inc
iret
out
cmpb
in
sbb
icebp
loope
sbb
jne
pop
leave
aaa
loopne
fsub
je
fmull
and
fists
dec
enter
push
call
add
inc
jmp
imul
sub
call
pop
xor
jmp
cltd
stos
mov
sub
aaa
mov
mov
popf
xchg
dec
jecxz
jae
xchg
jge
push
in
call
mov
mov
loopne
cmpsb
mov
imul
fldl
cli
mov
imulb
stos
mov
push
int
xor
aam
subb
xchg
sbb
cmp
mov
shrb
mov
jmp
mov
das
pusha
mov
pop
test
adc
cmp
call
int3
iret
push
cmp
ja
jnp
ljmp
add
jg
pop
push
adc
inc
hlt
lcall
cwtl
cld
xchg
dec
mov
and
rcrl
jg
xchg
cmc
and
inc
aad
push
cld
insl
add
xor
flds
sub
mov
std
mov
mov
test
movsl
cmp
pop
adc
outsl
cmc
cmpsl
xchg
movsb
xchg
sbb
sub
lds
xor
add
sbb
cld
jle
stos
and
mov
xor
adc
rcll
in
cmpl
in
jle
dec
ja
sbb
data16
mov
mov
jns
mov
leave
cld
push
shlw
in
fldenv
fstpt
arpl
pop
je
push
pop
fistl
addr16
addr16
adc
add
mov
dec
adc
xchg
mov
and
fcmovnbe
or
mov
lock
inc
in
xchg
roll
jo
fcmovne
push
sbb
mov
mov
jecxz
push
sbb
mov
fs
inc
lret
ss
ficomps
stos
dec
mov
sti
jno
dec
push
aam
test
mov
add
add
sbb
jnp
repnz
mov
testb
or
fnstcw
mov
out
enter
sub
inc
xchg
test
data16
lock
or
mov
pop
enter
jo
inc
xor
nop
push
jg
xorb
adc
loope
or
lea
add
add
sarb
push
add
pop
mov
mov
ja
add
in
jmp
jecxz
js
mov
ror
std
shl
js
push
mov
sub
push
lahf
pop
pop
fisubs
in
xchg
imul
xlat
cmc
fidivrl
out
movsl
ficomps
or
mov
add
cs
mov
add
add
not
and
add
pop
mov
pop
je
add
aas
and
jb
stos
inc
int
std
pop
jnp
and
jns
popf
lods
sub
push
cmp
lea
jp
sbb
daa
mov
mov
loop
lcall
add
clc
xor
icebp
jae
jmp
clc
fldenv
das
dec
cmp
xchg
hlt
fdivl
out
fstps
data16
inc
scas
xchg
add
mov
jmp
stc
cmp
mov
call
sub
sbb
mov
push
cmp
jg
test
ss
xchg
xchg
sub
mov
mov
push
icebp
jmp
mov
and
cs
sahf
pop
stos
mov
sbb
ja
jp
jecxz
xchg
sahf
jg
push
test
repz
lea
mov
aam
sbb
stos
hlt
adc
mul
scas
lds
add
imul
sbb
push
rcll
mov
push
or
xor
jmp
sub
popa
cmp
sbb
mov
je
out
xchg
jns
mov
mov
inc
inc
int3
icebp
lods
sti
sub
jmp
push
call
mov
fsubs
mov
popl
ss
mov
push
push
sarb
lahf
and
outsl
fiaddl
idiv
pop
xor
add
sub
push
in
mov
or
fisttps
insb
pop
jns
jl
add
movsl
adc
and
lahf
stos
jno
pop
lods
inc
fidivs
inc
in
cwtl
inc
mov
pop
inc
test
jle
push
cmp
shlb
leave
in
mov
insb
fldenv
cmp
adc
cmc
mov
and
nop
jp
pop
cmp
in
je
jb
in
xchg
test
jns
mov
imul
leave
rcrb
insb
jecxz
dec
pop
jne
fs
or
mov
int3
add
lods
aam
mov
out
les
mov
add
lods
insb
add
inc
pop
stc
call
cmp
sbb
movsb
out
sbb
test
rolb
sub
jno
mov
aad
lahf
ja
test
insb
in
packssdw
out
add
stc
loope
cli
cmpsl
inc
or
xchg
lods
out
mov
lock
mov
add
and
and
pop
push
mov
test
cmp
mov
xchg
add
adc
add
cmpsb
dec
adc
jbe
mov
push
bound
sub
imul
xlat
icebp
and
sar
mov
jbe
mov
jno
dec
mov
mov
xor
sbb
fmul
and
stc
test
sub
cld
sbb
inc
pop
inc
xchg
rcl
iret
lods
add
sbb
pop
sub
add
add
xchg
leave
cltd
mov
cmp
mov
stos
ja
mov
and
jnp
mov
lahf
adc
pop
shlb
lahf
cmpsl
insb
sbb
shrb
cwtl
cmp
and
callw
or
syscall
lea
test
into
push
and
fidivs
xor
sarl
jl
mov
adc
add
jb
adc
js
ds
jge
test
sbb
or
popf
mov
mov
adc
mov
push
mov
outsl
addr16
movsl
xorb
sub
out
dec
sbb
inc
sub
insb
dec
jp
xor
int3
xchg
cmpsb
fildll
cmpsb
out
stc
jae
mov
aad
cmp
add
sub
inc
ret
dec
repnz
std
stos
addr16
repnz
push
addr16
outsb
push
or
outsb
lock
dec
sbb
add
shll
idiv
and
mov
mov
icebp
sbb
sub
rclb
fs
jbe
lods
std
inc
mov
add
and
pop
push
or
add
add
dec
outsl
pop
daa
or
in
call
ror
movsb
xchg
lret
sahf
ds
lret
lods
pop
ret
and
fwait
pop
push
mov
scas
popl
stc
call
adc
add
or
bnd
jmp
jnp
sub
inc
into
xor
loope
add
aam
inc
cmp
xlat
int
movb
add
push
sbb
int
stos
push
push
mov
jae
das
icebp
jo
mov
negl
popl
into
inc
fadds
scas
mov
loope
and
notl
jb
mov
push
xchg
xchg
stc
sub
daa
mov
push
lock
rorl
popa
mov
enter
enter
add
fsubrl
repnz
add
add
push
lock
jmp
les
fs
test
xor
mov
inc
in
movsl
arpl
pusha
add
mov
jno
mov
and
scas
jp
ret
stos
push
popf
jg
ss
push
mov
cld
mov
lea
dec
xchg
add
push
mov
inc
dec
and
push
ret
test
lds
data16
inc
ljmp
fs
mov
sub
std
out
das
out
lret
and
jle
bound
sub
iret
es
adc
inc
and
add
outsl
shr
std
inc
xchg
loop
xlat
push
mov
mov
cltd
adc
pop
xchg
test
fcomi
and
lcall
add
xchg
ja
sbb
aam
aas
xor
push
cmp
test
xchg
cmpsb
pop
ja
negl
rclb
jmp
mov
scas
pop
insb
ds
push
lea
int3
int
xor
mov
push
mov
pop
fidivl
cld
or
insl
ds
insl
inc
pop
pop
lret
xor
inc
pop
sbb
mov
repnz
leave
repz
add
arpl
std
lahf
loope
test
inc
pop
fdivrp
loop
out
mov
adc
pushf
std
aad
mov
push
mov
and
lret
stos
xor
or
dec
cltd
dec
jge
aas
insb
cmc
outsl
rorb
sbb
dec
jmp
push
shll
enter
jecxz
pop
add
lds
movsb
mov
add
mov
jo
mov
jp
jbe
cmp
inc
int3
dec
mov
add
test
push
xchg
sub
fcmovu
nop
rorl
inc
sbbl
andl
cmp
jb
and
call
cmp
loope
popl
ret
jp
pusha
push
sbb
inc
out
push
or
sub
xor
jp
push
xchg
int
dec
mov
not
lret
mov
mov
je
shlb
jmp
icebp
mov
int
jo
aam
xor
ret
in
decb
fistl
cmp
ss
pop
mov
xor
cmp
add
add
xchg
test
leave
pop
mov
pop
dec
shl
imul
aam
int
dec
push
mov
int3
and
dec
arpl
and
inc
xorb
inc
pop
pop
in
xor
addl
mov
cwtl
es
fnstenv
cmp
mov
sub
inc
add
iret
jnp
cmpsl
enter
lods
jno
and
dec
cwtl
mov
or
cmpsl
inc
cmp
mov
or
stos
out
out
sub
sbb
adc
add
sbb
add
adc
movb
je
push
xchg
jae
gs
es
repz
xchg
push
popl
scas
or
add
add
lods
std
cs
imul
adc
lods
push
inc
mov
nop
aad
fbstp
in
lock
out
jmp
xor
fdivl
sub
ss
dec
aas
pop
cltd
mov
fwait
mov
add
cmp
push
jns
lds
test
inc
gs
je
ljmp
mov
add
or
push
dec
into
fbstp
or
mov
and
icebp
jo
in
mov
jp
call
fisttpl
sbb
shrb
fdivs
and
xchg
mov
add
push
idiv
daa
xchg
out
shlb
stos
sbb
mov
inc
jmp
add
add
out
jecxz,pn
pop
call
loope
mov
sub
xchg
in
xchg
movsl
dec
xorb
gs
pop
rcr
push
sub
mov
xor
and
add
scas
loope
shrl
cmpl
test
mov
dec
xor
ja
sarb
pop
hlt
mov
or
imul
adc
scas
mov
add
xor
idiv
jb
xchg
add
dec
shrl
dec
pop
aam
push
push
mov
fcompl
fcmovb
jmp
and
pop
push
test
add
adc
adc
out
loope
or
fs
xchg
push
mov
jl
mov
hlt
in
inc
jmp
leave
jb
pusha
ja
fisubs
sbb
push
xchg
mov
add
ja
sub
insl
jmp
push
es
adc
fistps
add
xor
add
dec
inc
push
lea
add
xchg
inc
add
clc
insb
cmc
inc
out
loope
test
fildl
push
nop
dec
cmp
jge
dec
mov
test
sbb
add
mov
stc
sbb
mov
or
fcomps
add
sub
push
lods
in
pop
out
pmovmskb
and
pop
lret
arpl
mov
movsl
sub
enter
rcrl
dec
mov
rcrb
jle
adc
add
xchg
jge
aam
cmp
jp
shlb
cmp
add
cmp
out
push
jno
stos
pop
xor
sbb
add
push
pop
mov
xchg
dec
inc
pop
add
ret
xchg
push
in
stc
jno
loopne
test
mov
frndint
aad
mov
xchg
mov
fidivrs
or
insb
xchg
sar
andl
xor
mov
mov
mov
into
push
dec
xlat
in
inc
xchg
dec
jecxz
pop
xchg
mov
add
jbe
xor
fcomps
xor
and
lods
dec
and
jo
das
sbb
inc
xchg
sbb
ljmp
rcll
dec
notb
xlat
xor
pop
jae
pop
out
pop
sbb
push
addr16
mov
or
rorb
adc
dec
imul
push
xor
push
filds
in
xchg
mov
cmp
add
js
insl
insl
loopne
subb
arpl
out
jmp
mov
xor
fldcw
sbb
adc
or
mov
adc
sahf
orl
loope
pop
test
out
outsb
ss
dec
sub
add
sarb
jb
dec
mov
std
bswap
lods
mov
mull
add
in
push
les
xchg
pop
inc
push
in
or
jecxz
sub
jmp
dec
pushl
sbb
aad
pop
aaa
mov
cwtl
mov
pop
adc
dec
mov
aam
lods
shrl
popf
sub
pop
cli
pushf
test
and
cmp
adc
cmp
pushf
insb
sub
mov
mov
mov
loop
sub
add
sub
add
mov
cs
lcall
mov
and
out
rcrl
or
mov
lods
and
cmpsb
lahf
add
and
xor
add
sbb
pop
dec
mov
pushf
jbe
arpl
jne
adc
data16
shl
pop
int3
cmp
push
push
sahf
xchg
dec
inc
xchg
andb
dec
jae
fistpll
ret
xor
imul
pop
insl
adc
jae
sub
jb
add
pusha
mov
popa
je
mov
clc
jae
imul
out
sub
shrb
fistl
mov
arpl
mov
or
mov
ss
outsb
stc
xorb
cmp
dec
jno
lods
adc
jbe
and
jp
jmp
jbe
pop
aas
inc
sub
sub
cmp
cmpsl
std
stos
cs
xchg
popf
cmp
jb
sub
sbb
sub
sub
int
fcomp
or
mov
fcompl
gs
divl
and
add
movsb
ret
movsl
jl
xor
cmp
fiadds
pop
pop
jnp
dec
stc
add
mov
push
addr16
adc
cs
scas
or
xchg
push
mov
shrl
pop
loope
scas
cmp
dec
sub
add
dec
aas
mov
pop
sbb
lods
mov
or
pop
mov
xchg
adc
cld
push
push
pusha
pusha
xor
cmp
and
sbb
jge
mov
or
mov
push
pop
sarb
iret
cmp
mov
cmp
mov
repnz
test
imul
jge
xor
js
test
add
add
insb
cmp
push
or
cmp
fimull
cmp
rclb
or
test
fstl
cmp
stos
das
mov
dec
int3
xchg
loope
mov
cmpsb
dec
and
and
inc
pop
cmpl
mov
loope
mov
xchg
jmp
scas
jl
xor
mulb
pop
cmp
clc
sub
sar
rcl
dec
cld
aaa
xorps
outsl
test
pop
jg
xchg
popf
mov
dec
inc
pop
sbb
hlt
in
test
mov
mov
sub
xchg
mov
enter
adc
das
dec
lods
fldenv
cmc
sbb
mov
add
add
sbb
push
daa
dec
mov
pusha
out
push
xor
sbb
cmp
pop
hlt
mov
cmc
add
lock
in
jo
pusha
push
sbb
pop
xor
dec
test
jb
iret
mov
xchg
icebp
mov
shlb
clc
outsb
add
pop
dec
mov
xchg
xorb
push
out
xchg
sahf
pushf
iret
or
stc
int
popw
test
jb
shlb
dec
sub
scas
mov
aaa
push
lcall
out
fldz
lret
hlt
test
mov
xor
cmp
insl
mov
mov
fldt
mov
fwait
test
jle
xor
and
xor
call
aaa
loope
sahf
add
stc
and
cmpsl
push
jp
sub
adc
insl
fucomi
mov
lods
sbb
movsl
and
loope
jmp
xchg
sub
sbbl
jno
sbb
cmp
adcl
mov
addb
jp
mov
xor
and
in
std
xor
mov
adc
mov
imulb
push
or
add
call
jno
movsb
cmc
mov
mov
xor
sahf
add
out
pop
dec
mov
in
sti
and
add
or
fidivrs
jae
sub
test
mov
and
jg
jne
mov
adc
add
add
and
and
dec
sbb
fcmovnb
test
aas
ljmp
xchg
jb
lea
dec
call
sub
inc
fiaddl
aas
lret
jnp
mov
inc
xchg
bound
jbe
and
int
fstpt
es
add
and
jno
mov
sub
jge
dec
stos
inc
pop
or
and
mov
adc
mov
push
and
rcrl
or
iret
dec
nop
inc
cmp
and
mov
inc
out
jne
aam
sub
pop
sbb
orl
cwtl
push
mov
int
pop
fstl
add
xor
cmpb
fs
outsl
es
pop
ljmp
fsubp
fs
cld
incl
addl
add
sub
pop
mov
es
adc
test
mov
das
or
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
in
add
in
add
in
add
in
add
stc
repnz
add
movsb
loope
mov
xchg
cmc
add
jmp
mov
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
int3
nop
add
int3
nop
add
fcoml
add
int3
nop
add
int3
nop
add
pushf
nop
add
pushf
nop
add
mov
add
mov
nop
add
mov
or
sbb
or
mov
or
cmp
or
mov
xchg
or
call
xchg
or
mov
xchg
or
enter
pop
xchg
or
push
nop
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
out
add
das
add
cmpsl
add
popl
mov
popl
add
mov
add
ja
mov
aaa
add
outsl
add
pop
add
dec
add
add
add
incl
lods
popl
add
jg
mov
scas
add
popl
add
jg
mov
xchg
scas
mov
xchg
push
mov
add
mov
add
xchg
or
xchg
clc
mov
add
xchg
mov
mov
xchg
js
xchg
mov
mov
add
mov
xchg
jo
xchg
mov
mov
xchg
push
mov
xchg
add
xchg
xorb
add
mov
or
xor
xchg
or
inc
lea
add
lea
add
or
cltd
xchg
or
sbb
or
jns
or
mov
add
add
lea
add
lea
add
or
jmp
mov
add
lea
add
or
leave
mov
add
mov
add
mov
add
mov
add
lea
add
mov
add
or
mov
or
mov
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
or
adc
add
or
sbb
mov
add
or
mov
add
or
jno
or
inc
add
mov
add
mov
add
mov
add
add
add
add
addb
popl
add
push
add
lods
pop
add
popl
add
popl
add
lods
jb
lods
and
and
lods
xchg
add
and
and
lods
xchg
add
pop
add
xor
lods
xor
out
add
add
mov
data16
scas
add
add
mov
add
mov
add
mov
mov
mov
mov
dec
mov
mov
into
mov
mov
mov
add
mov
add
mov
jbe
mov
push
mov
mov
sahf
mov
mov
push
mov
xchg
sahf
mov
xchg
mov
mov
add
mov
xchg
divb
xchg
mov
pop
mov
add
or
or
fwait
mov
add
mov
add
xchg
or
fwait
xchg
or
imul
add
nop
or
cmp
or
jmp
or
imul
add
or
fwait
mov
add
xchg
or
sub
or
lret
nop
or
dec
nop
or
sub
or
dec
xchg
or
lret
nop
or
lret
xchg
or
pop
nop
pop
add
pop
add
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
icebp
add
add
add
in
mov
int
mov
sti
add
repz
xlat
add
iret
add
clc
add
lock
aam
mov
int3
add
cli
add
repnz
add
add
add
lea
in
mov
out
mov
loope
xchg
loope
xchg
lock
mov
jecxz
test
jecxz
test
repz
test
loop
xchg
loop
xchg
repnz
xchg
in
orl
orl
orl
orl
add
add
orb
mov
or
fadd
orb
xchg
orb
xchg
lahf
push
push
bound
push
push
push
lahf
push
push
jb
push
push
inc
lahf
push
push
push
lahf
push
push
push
lahf
push
push
adc
push
push
adc
push
push
repnz
push
push
add
push
push
adc
add
adc
psrlq
psllq
psrlq
setae
setae
cmpps
btc
loope
rsm
out
adc
aam
adc
repnz
adc
sti
adc
push
stos
clc
sbb
mov
fsts
pop
mov
ficomps
sbb
add
add
mov
mov
lcall
sbb
sbb
pushf
out
sbb
pushf
fcompl
sbb
fcompl
sbb
mov
sbb
cld
sbb
scas
cld
sbb
scas
in
sbb
lahf
in
sbb
lahf
fstpl
sbb
rcrl
into
popl
sbb
mov
sbb
mov
sbb
mov
pop
rorl
add
add
mov
pop
mov
mov
pop
test
mov
pop
cltd
mov
pop
rorl
add
pop
mov
mov
pop
test
mov
pop
cltd
mov
and
mov
and
mov
rorb
mov
in
and
mov
and
mov
add
mov
add
mov
in
aad
sbb
mov
in
xchg
pop
icebp
scas
cwtl
or
lods
lcall
movsl
pushf
or
out
stos
sahf
psubusw
jg
fld
jg
clc
movl
adc
movsb
adcl
fisubl
adcl
adcl
add
add
test
adc
xchg
adcl
addb
push
mov
test
pop
addl
arpl
sbb
sbb
mov
sbb
inc
mov
sbb
sbb
sbb
sbb
mov
sbb
mov
sbb
add
add
mov
sbb
xchg
sbb
xchg
sbb
mov
sbb
loopne
sbb
lock
iret
rcll
into
rcll
mov
xchg
sbb
scas
loope
sbb
icebp
pop
sbb
testb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
flds
mov
loope
mov
sub
stc
add
add
add
jmp
mov
ljmp
out
mov
loope
mov
fldl
mov
flds
mov
loope
mov
leave
add
popl
jmp
mov
ljmp
mov
popl
jmp
into
popl
jmp
out
add
jbe
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
fidivl
add
mov
add
mov
ljmp
add
mov
add
mov
add
fmull
adc
or
lea
add
lea
add
lea
add
lea
add
lea
mov
adc
add
add
popf
lea
add
lea
add
or
add
lea
fstl
addl
dec
jmp
add
add
add
int
pop
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
loopne
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
das
jmp
arpl
es
aam
fnsave
and
jo
and
add
rcl
out
outsb
xchg
xor
out
push
rolb
jae
sbb
sub
mov
inc
inc
mov
or
jmp
xorl
jmp
jle
paddusw
mov
adc
fnstenv
xor
xchg
jmp
iret
xor
mov
add
add
add
vphsubwd
jmp
xchg
out
sti
loop
mov
ficoml
jmp
add
pop
add
popf
add
ret
fwait
add
add
mov
add
mov
add
mov
out
push
or
out
dec
mov
js
pop
mov
add
add
jae
std
mov
add
jbe
inc
sti
xchg
outsl
je
mov
push
inc
int
dec
imul
ja
inc
mov
pop
jo
iret
push
bound
scas
ja
inc
les
jb
push
out
nop
imul
cli
and
add
aas
add
inc
add
cli
aas
add
add
das
or
mov
add
add
add
lods
mov
add
xchg
add
mov
mov
add
add
mov
mov
add
add
jl
add
lahf
xchg
push
add
xor
scas
mov
add
insb
add
xchg
add
dec
flds
and
insb
outsl
and
inc
outsl
sbb
arpl
bnd
pop
xchg
add
mov
mov
add
repz
inc
mov
mov
inc
mov
rolb
lods
inc
mov
loope
xchg
dec
in
imul
bnd
movsb
in
ja
push
fildll
cmp
lret
jae
shlb
inc
jge
sub
fistpl
add
mov
lock
mov
das
add
jecxz
or
and
loop
and
mov
les
mov
les
mov
add
fwait
add
popl
xchg
xchg
add
scas
fisubs
pop
dec
clc
jge
inc
jecxz
in
add
mov
jmp
mov
jmp
mov
call
add
out
mov
call
add
nop
call
add
ljmp
nop
call
add
mov
jmp
mov
mov
add
mov
add
mov
lea
jmp
lea
mov
nop
add
lods
mov
jmp
mov
mov
ljmp
add
mov
nop
add
mov
nop
add
mov
popl
or
dec
add
mov
add
aaa
dec
add
mov
add
aaa
dec
add
mov
add
adc
in
popl
adc
dec
add
mov
add
jae
add
adc
inc
add
mov
add
adc
fisttpll
inc
add
mov
add
mov
add
add
add
popa
inc
add
cmovb
mov
inc
add
add
inc
cmovb
push
mov
add
push
inc
add
add
jmp
inc
add
add
aam
inc
add
mov
add
pusha
inc
add
mov
add
add
mov
add
inc
add
sbb
inc
mov
add
mov
add
mov
addb
add
mov
add
mov
addb
add
mov
add
mov
jg
mov
add
mov
add
mov
addb
add
mov
add
mov
jle
mov
add
mov
add
mov
clc
inc
mov
add
mov
add
mov
add
inc
mov
add
mov
or
iret
or
movl
inc
mov
and
jp
adc
gs
std
add
sbb
mov
mov
mov
test
fadds
leave
popf
jp
popl
jp
in
add
pop
add
sbb
cmp
std
jl
mov
loope
jne
popf
add
fnstsw
and
add
roll
mov
stc
add
add
add
mov
dec
add
mov
add
mov
add
or
dec
add
mov
lahf
add
dec
add
mov
add
mov
dec
add
jns
add
mov
add
mov
add
pop
dec
add
dec
add
mov
push
add
mov
add
mov
and
lock
or
loopne
inc
add
xchg
sbb
xchg
adc
je
inc
add
xchg
or
cmp
add
add
xchg
add
cld
adc
add
adc
adc
lock
add
xchg
adc
in
adc
add
pop
add
inc
add
xchg
push
add
or
add
inc
add
add
cld
adc
add
xchg
pop
add
adc
add
xchg
in
or
or
mov
xchg
popl
mov
test
incl
adc
mov
xchg
pop
add
mov
xchg
pop
add
mov
test
add
mov
test
ret
add
mov
test
cmp
adc
mov
or
sub
lgs
inc
mov
add
mov
xchg
mov
mov
test
rolb
or
dec
add
ss
cltd
xchg
add
add
adc
mov
cmc
cmp
loopne
sbb
int3
popl
add
pop
add
xor
mov
or
add
rolb
popa
add
popl
xorb
add
popl
add
adc
scas
or
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
cmp
aas
mov
add
cmp
mov
push
add
mov
add
mov
add
push
add
mov
add
mov
add
cmp
lcall
add
mov
inc
cmp
imul
add
mov
inc
add
sbb
or
add
mov
add
adc
mov
inc
add
add
adc
add
adc
add
add
add
adc
cmp
add
adc
or
inc
add
adc
jp
push
add
adc
loope
or
clc
adc
popf
mov
add
adc
jns
push
add
inc
add
or
inc
mov
add
mov
test
xchg
add
mov
test
jo
or
push
test
fwait
add
mov
test
add
mov
addb
add
mov
test
pop
add
mov
addb
add
ds
mov
addb
add
mov
addl
add
xlat
add
mov
addb
add
mov
addb
add
mov
addb
push
mov
xor
pop
call
rorb
add
popf
call
jp
scas
add
pop
call
lret
popl
fimull
insl
call
test
adc
pop
call
mov
mov
lcall
call
mov
icebp
call
lds
test
stc
call
ret
popl
cld
mov
add
or
add
add
xchg
add
mov
xchg
add
mov
xchg
add
addb
rcll
add
xchg
add
mov
xchg
add
mov
xchg
add
ja
lods
nop
xchg
add
js
or
add
mov
dec
dec
xchg
add
pop
xchg
add
mov
add
xchg
add
sbb
add
or
add
ret
add
add
sbb
nop
call
pop
add
xchg
or
jl
ds
xchg
dec
add
and
add
add
add
add
add
dec
out
add
xchg
adc
clc
out
add
adc
loopne
ds
xchg
push
add
add
add
mov
add
and
dec
out
add
cmp
add
xchg
add
add
push
add
mov
ljmp
and
aas
mov
add
mov
out
mov
add
mov
out
mov
add
mov
ljmp
int3
jmp
or
imul
mov
jmp
or
popl
mov
ljmp
ljmpw
or
mov
mov
call
or
jo
mov
popl
mov
test
add
int
ret
add
in
mov
gs
aad
mov
lods
ljmp
add
xchg
popl
ljmp
jno
repnz
dec
add
popf
add
fildl
mov
popl
mov
in
ljmp
jmp
add
aam
add
popl
out
mov
add
and
in
mov
add
adc
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
and
mov
sub
test
xor
int
aaa
loope
popl
jmp
xchg
jno
add
cwtl
imul
popa
popa
jae
lea
loope
pop
add
mov
pop
leave
push
jno
lds
add
push
add
insb
outsl
cld
mov
je
push
mov
add
jle
or
add
sbb
add
sbb
add
or
add
or
add
fmull
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
pushf
mov
add
add
mov
add
pop
mov
add
add
call
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
call
andl
add
pusha
cli
fsubs
repnz
ljmp
fidivrl
pusha
dec
enter
adc
mov
add
add
fimuls
jmp
cli
or
jp
push
popa
jp
popa
pushl
popa
ljmp
popaw
rcll
mov
rolb
inc
sarl
popa
xor
sub
popa
and
sbb
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
call
mov
add
mov
nop
add
mov
nop
add
mov
nop
add
lea
add
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
sbb
xchg
add
or
xchg
add
sbb
add
sbb
add
or
add
or
add
fcoml
add
int3
xchg
add
int3
xchg
add
fcoml
add
int3
xchg
add
int3
xchg
add
pushf
xchg
add
pushf
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
pop
push
mov
mov
icebp
adc
add
add
mov
sbb
xchg
and
xchg
daa
fimull
int
jecxz
fsts
movl
mov
jecxz
xor
ljmp
les
enter
mov
insb
leave
loop
xor
out
xor
ljmp
cltd
rolb
add
mov
jl
jge
jo
imul
das
sbb
inc
sbb
jne
sub
pop
jle
sub
mov
mov
push
dec
stc
stos
dec
arpl
scas
pop
daa
add
inc
pop
or
test
sti
aad
xor
fxch
sub
xchg
shlb
jg
ficompl
xchg
mov
inc
fwait
mov
adc
mov
repnz
pop
leave
cli
std
nop
int
jmp
mov
cltd
or
mov
popf
adc
lds
sbb
nop
enter
je
and
jl
sub
movsb
xor
push
lods
cmp
xor
pusha
arpl
mov
insb
outsl
insb
in
jae
loopne
ja
in
js
push
or
cld
roll
pop
rolb
fmull
pusha
fmuls
add
push
dec
add
push
or
jnp
out
jg
adc
sbbl
xchg
mov
mov
es
jo
and
jl
dec
insb
js
dec
sbb
push
pusha
lods
stos
pop
pop
test
pop
push
nop
mov
push
pushf
mov
sub
inc
ret
aas
jb
dec
lret
dec
into
jp
xor
data16
bound
fimull
lods
cmp
or
loop
push
pusha
out
mov
push
repnz
movsb
push
testb
pop
cli
out
lret
push
ljmp
add
vpshad
pop
add
jmp
add
add
add
xchg
jmp
add
popl
jmp
mov
add
mov
add
insl
enter
popl
jmp
mov
add
mov
add
mov
add
mov
add
in
enter
popl
jmp
mov
add
mov
add
mov
add
enter
add
add
enter
enter
popl
jmp
mov
add
mov
add
mov
add
jge
es
enter
enter
popl
jmp
fmull
add
int3
mov
add
pop
add
fisttpll
add
mov
add
mov
add
add
imul
mov
add
pushf
xchg
add
mov
add
pop
xchg
add
int3
mov
add
add
add
add
dec
xchg
add
dec
xchg
add
sbb
add
sbb
add
or
mov
add
addb
mov
negb
shrl
add
loop
sbb
lret
cmpsl
lret
cmpsl
lret
ljmp
lds
clc
sbb
lret
cmpsl
lret
cmpsl
lret
ljmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
lret
push
aam
lds
aam
fbld
mov
aad
fisubrs
inc
inc
mov
add
das
or
inc
xchg
mov
add
xor
fistpll
ja
dec
das
pop
or
jae
int
xchg
ret
lock
push
pop
fsubr
lods
pop
enter
movsl
xchg
add
call
push
mov
fstpl
mov
push
mov
mov
pop
adc
incb
add
add
icebp
das
cmp
or
inc
fnsave
jge
jecxz
jo
jmp
push
adc
or
loope
rcr
push
out
orl
inc
inc
out
popa
mov
cmp
ret
xchg
inc
cmp
and
in
sti
inc
and
adc
adc
or
push
stos
sub
aad
mov
mov
jne
lods
outsb
decl
sub
js
lods
in
outsl
dec
in
scas
fs
test
mov
sub
lahf
stc
and
jecxz
call
popa
mov
add
mov
push
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
push
add
sbb
add
xchg
add
mov
add
mov
add
add
fadds
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
xchg
add
nop
xchg
add
nop
test
nop
jg
test
xchg
add
nop
js
mov
jnp
out
mov
ja
pop
add
nop
push
add
nop
pop
add
mov
push
nop
inc
add
nop
inc
add
nop
xor
add
mov
add
nop
test
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
aas
add
mov
add
pop
add
mov
dec
mov
add
mov
inc
mov
add
cmpsb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jg
cmpb
add
add
add
push
push
mov
mov
xor
add
mov
add
mov
add
mov
jns
insb
add
mov
mov
add
or
loope
and
les
insl
add
mov
outsb
mov
add
push
add
sub
jb
cmp
xchg
and
mov
push
add
add
add
mov
add
cmp
inc
xchg
adc
aaa
xchg
and
sbb
dec
add
xchg
dec
add
add
add
sbb
add
sbb
dec
mov
add
mov
add
push
add
jle
push
dec
add
mov
add
mov
add
mov
add
mov
add
jp
dec
mov
add
mov
add
add
add
add
push
pop
ds
inc
or
test
or
dec
or
test
pop
sti
in
pop
repnz
pop
mov
in
pop
movsl
lds
pop
cmpsl
lds
pop
test
xchg
jg
pop
pop
jg
pop
push
jg
pop
jbe
cmp
pop
jg
pop
pop
jg
pop
adc
pop
sbb
pop
or
jg
pop
pop
jg
pop
push
jg
pop
dec
jg
pop
inc
jg
pop
inc
jg
pop
dec
jg
pop
inc
jg
pop
sub
push
pop
jg,pn
pop
and
pop
sbb
pop
hlt
jle
pop
icebp
jle
pop
sti
jle
or
jle
or
scas
or
cmpsb
or
mov
push
addb
mov
loope
mov
loop
lods
mov
fsubrs
sahf
lods
cltd
lods
fsubrl
cwtl
mov
scas
das
lcall
das
xor
mov
aas
mov
cmpsb
das
and
test
adc
stos
das
inc
lods
lods
das
cmp
shrb
mov
sbb
push
mov
push
inc
mov
pushf
push
sub
jno
stos
mov
jae
movsb
mov
add
add
es
pop
xchg
daa
push
push
xchg
sub
push
xchg
sub
inc
xchg
sub
daa
xchg
sub
adc
sub
push
and
xor
sbb
xchg
xor
out
xchg
xor
call
xchg
xor
push
stos
xchg
aaa
push
movsb
xchg
cmp
movsl
xchg
cmp
jbe
cmp
mov
xchg
inc
push
scas
xchg
inc
push
scas
xchg
inc
push
mov
xchg
inc
push
mov
lea
test
add
into
add
fldl
dec
mov
roll
dec
mov
and
dec
mov
pop
add
push
add
inc
add
inc
add
inc
add
push
add
add
adc
push
mov
add
adc
pop
mov
add
push
add
add
add
cmp
pop
mov
add
mov
add
pop
add
xchg
ja
add
jne
add
pushf
add
xchg
sahf
add
xchg
addb
xchg
addl
xchg
jb
scas
xchg
insl
add
xchg
pop
add
xchg
test
add
xchg
stos
add
add
add
xchg
movsl
add
xchg
daa
add
cs
xchg
and
jo
xor
int
xor
int3
xchg
and
mov
xchg
xor
mov
das
add
xchg
cmp
lcall
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
int
das
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
jne
sub
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
mov
inc
mov
xor
popl
sub
adc
add
lods
add
add
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
nop
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
call
mov
cltd
mov
lcall
pushf
mov
popf
mov
lcall
mov
jmp
mov
jmp
mov
jmp
xchg
jmp
mov
inc
lcall
xchg
or
and
or
pop
xchg
or
decl
xchg
ud0
xchg
push
ljmp
sar
bound
ret
pop
xchg
ret
xchg
aad
dec
xchg
int3
incb
cmp
cltd
sub
fwait
incb
add
add
lcall
xchg
je
jns
jg
jo
jbe
sti
xchg
popa
repnz
pusha
in
xchg
mov
arpl
sti
mov
imul
outsb
and
out
out
and
lock
icebp
and
jmp
push
into
sbb
dec
mov
adc
aas
scas
adc
and
cltd
xor
mov
add
add
sub
jle
push
test
jno
and
popa
mov
mov
push
push
and
fbld
cmpsb
cmp
and
sub
and
adc
xor
adc
add
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
add
add
mov
nop
and
jg
or
mov
or
mov
or
mov
push
and
inc
mov
cmp
sub
mov
and
mov
mov
and
mov
cli
sub
pop
cli
add
pop
stc
add
add
add
or
add
or
add
inc
stc
push
xchg
dec
stc
pop
xchg
inc
stc
or
pop
stc
adc
dec
stc
and
jb
and
aad
push
push
aam
push
push
aam
push
push
aam
push
push
aam
push
push
aam
push
pop
xchg
cmp
pop
xchg
push
push
pop
xchg
xor
add
xchg
inc
push
sub
jb
sub
add
add
in
or
push
xorb
jnp
and
xlat
jo
push
cmpsb
imul
push
insb
push
push
sbb
push
mov
outsl
cmp
mov
cmp
test
sbb
push
xchg
push
out
adc
enter
push
insb
mov
or
jp
cmpsb
or
xchg
insb
enter
add
push
insb
lret
or
es
test
mov
outsl
mov
pop
insb
add
mov
xchg
es
test
es
shrb
aas
mov
outsl
daa
cmp
jo
cmp
lcall
shlb
mov
dec
add
lcall
mov
ja
fsubrl
xchg
and
mov
add
shrb
mov
ljmp
rolb
add
sbbl
or
movsb
and
lret
and
loop
sub
les
andb
andb
lret
lahf
pop
and
add
lods
lahf
roll
mov
lahf
aam
mov
aad
mov
add
mov
fadds
xchg
fildl
imul
filds
cmp
and
mov
pavgw
xor
in
cmp
out
xor
out
psubsb
add
add
pop
push
add
add
push
add
add
add
mov
push
pop
stos
pop
push
or
dec
push
or
pop
push
or
push
push
or
mov
adc
stos
or
adc
pop
adc
mov
sub
adc
sub
adc
mov
pop
adc
popf
popa
adc
add
add
popf
push
adc
popf
cmp
adc
popf
das
adc
popf
cmpsb
adc
popf
sub
aam
sub
xlat
popf
sub
popf
and
adc
popf
adc
popf
and
pushf
popf
and
popf
xor
mov
and
fcomps
mov
lret
adc
popf
mov
add
popf
mov
adc
popf
xchg
adc
fs
xchg
lds
mov
movsl
addr16
mov
push
push
cmpsl
movsl
insl
push
sahf
lds
mov
dec
push
mov
push
push
dec
lds
dec
movsl
push
push
dec
movsl
push
push
inc
movsl
push
push
dec
movsl
push
push
inc
lds
inc
lds
inc
lds
adc
pop
push
adc
pop
push
cld
mov
push
stc
stos
aas
push
clc
ret
sti
mov
inc
push
inc
push
fistpll
inc
push
add
push
jne
pop
push
cmp
sahf
xor
out
popf
xor
clc
popf
xor
stc
popf
xor
xor
popf
aaa
xor
cmp
jbe
cmp
inc
sahf
cmp
inc
sahf
cmp
xor
xor
add
add
sahf
aas
xor
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
popf
dec
xor
popf
dec
xor
popf
dec
xor
dec
xor
lcall
les
dec
movsb
testb
testl
movsb
stc
or
test
or
test
or
test
or
test
or
in
or
in
or
in
or
in
or
pop
les
pop
les
pop
movsb
xchg
popa
movsb
mov
arpl
or
stos
movsb
lea
lods
les
lods
les
scas
les
mov
or
or
cmpsb
or
or
add
or
or
orl
or
addb
outsb
adcl
or
push
or
dec
or
addb
aas
or
adcb
pusha
cmp
fs
cmp
pop
pusha
cmp
pop
pusha
sbb
xor
adc
or
popa
pop
or
popa
decb
inc
pusha
add
sahf
addb
lods
lahf
adc
lods
test
out
clc
pop
test
cmp
add
push
or
mov
pop
mov
pop
dec
push
in
pop
inc
push
out
pop
dec
push
repz
inc
push
hlt
pop
dec
push
icebp
pop
push
push
repnz
inc
push
negl
inc
push
clc
pop
xchg
push
cmc
pop
lea
negb
loope
popl
loope
popl
lock
popl
lock
add
lahf
popl
fldl
add
add
popl
in
mov
add
jg
add
mov
add
xchg
data16
xchg
lea
add
xchg
add
int3
data16
mov
add
mov
mov
add
data16
mov
add
mov
mov
add
mov
add
mov
add
data16
decb
add
out
lea
add
add
movsl
xchg
add
in
add
clc
mov
add
add
xchg
add
out
add
add
sti
mov
add
mov
add
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmp
mov
add
mov
cmpb
lret
add
fldl
mov
cmp
add
mov
aaa
mov
push
add
add
add
popl
mov
xchg
aaa
mov
dec
add
popl
mov
push
aaa
mov
mov
inc
aaa
mov
incb
cmp
mov
or
lret
add
jge
mov
lds
mov
add
add
mov
add
popl
xchg
add
add
popl
inc
loop
add
loop
add
ret
popl
pop
mov
popl
pop
mov
popl
cmp
popl
cmp
popl
adc
orl
lods
jecxz
add
mov
add
popl
das
ret
popl
loope
popl
cs
popl
rolb
add
add
pop
add
notb
add
pop
xchg
add
xchg
add
xchg
add
xchg
pop
add
inc
xchg
add
loopne
add
and
add
and
add
or
add
push
pop
add
fisttpll
add
into
mov
add
mov
add
pop
add
fmuls
add
cltd
mov
add
add
lcall
add
pop
add
sub
add
mov
xor
add
sbb
mov
xor
add
dec
add
mov
xor
add
icebp
add
mov
xor
add
arpl
mov
push
call
in
dec
ret
add
into
cmp
xlat
cwtl
push
mov
dec
push
shll
ret
mov
inc
mov
push
cmc
pusha
loop
cmc
ficoml
repz
fists
push
mov
and
cmp
dec
sub
push
add
sti
sub
sub
out
jne
scas
dec
or
add
cmp
mov
icebp
xchg
outsb
int3
pusha
sub
sub
addr16
mov
aaa
cmp
imul
int
push
shlb
imul
pop
hlt
aad
dec
or
outsl
popa
xchg
cmc
mov
pop
in
pop
int
out
add
movsl
sbb
pop
mov
mov
fs
adc
fdiv
je
jecxz
xor
add
add
into
xor
lret
scas
xor
in
stc
jne
xchg
push
push
fdivrp
add
mov
push
mov
xor
push
xor
push
xor
xor
out
xor
pop
jo
js
bound
push
cmp
mov
jno
sub
xchg
fcmovnb
icebp
jge
add
lcall
dec
lcall
test
push
xor
pop
inc
enter
jp
adc
push
insb
inc
and
mov
in
adcb
shlb
lcall
enter
mov
in
xchg
fadd
mov
mov
in
push
ds
sub
xorb
cwtl
mov
xor
xchg
dec
inc
pop
and
scas
mov
pusha
push
jecxz
lods
jns
sbb
xor
inc
ret
cmp
lret
lret
ret
sar
jae
add
adc
call
loope
mov
add
gs
pop
lods
jecxz
xchg
cli
repz
cli
add
ret
ljmp
push
pop
pushf
jecxz
push
daa
aam
or
xchg
xlat
mov
idivw
stos
sub
mov
mov
clc
ret
addb
rorl
jmp
ljmp
add
inc
jmp
test
pop
sub
cltd
jmp
addr16
addr16
xchg
data16
mov
and
in
je
mov
fisubrs
rcr
ljmp
cmc
in
rcrb
in
loop
mov
and
lahf
inc
pop
jmp
scas
in
add
lods
mov
jne
jno
mov
adc
mov
inc
lahf
cmp
inc
xchg
cmp
std
out
std
xor
jp
ljmp
imul
in
cmpl
in
cmp
in
cmp
in
cmp
les
das
lret
cmc
lock
loopne
fwait
pop
fisttpl
imulb
aas
in
mov
xchg
int
jle
or
enter
ss
cmp
sub
test
cmp
cmp
mov
ss
mov
add
mov
push
mull
sub
xchg
out
cmp
jle
lret
in
cli
and
pop
ss
mov
iret
ss
movsb
jecxz
jbe
hlt
fsts
mov
jl
clc
fnstcw
xorb
lea
jno
mov
push
test
pop
cmp
lods
sbb
jae
and
mov
jmp
jnp
and
add
mov
jmp
pop
movsl
mov
xchg
mov
inc
out
jno
ficoms
jmp
imul
out
xchg
adc
jecxz
pop
or
jns
push
rorb
add
imul
xchg
mov
jmp
addb
jp
in
jmp
dec
loop
cmpb
mov
add
orl
hlt
loop
mov
pusha
repz
pusha
sub
add
mov
lahf
push
jecxz
mov
insb
clc
xor
jnp
in
mov
cmp
sbb
mov
cwtl
mov
dec
int
nop
mov
rep
dec
push
pop
stos
sarl
add
or
sbb
clc
cmp
jno
push
fldl
rcr
call
test
mov
add
jmp
inc
xchg
mov
jnp
push
aam
xor
jno
cli
ljmp
jecxz
pop
movsb
aaa
xor
pop
ljmp
bound
mov
loop
lock
movsb
cmp
add
outsb
enter
push
ljmp
and
inc
push
es
jb
and
push
nop
fstp
adc
int
jno
scas
cmpl
popf
mov
stc
inc
xchg
mov
mov
xchg
test
cmp
sti
cmp
cmpsl
sbb
sbb
jbe
mov
cmp
push
divb
sahf
lods
inc
inc
lods
push
and
sahf
gs
cmc
out
jae
aas
enter
mov
outsl
sti
popf
repz
jl
int3
mov
ds
mov
cwtl
loop
movsl
loopne
shlb
adc
cmpsb
sti
cs
mov
dec
sbb
sub
in
sub
mov
xor
xor
adc
mov
add
shll
pop
mov
add
mov
add
add
mov
add
mov
lahf
jae
dec
cwtl
fs
mov
jae
xchg
lcall
sbbb
mov
lahf
jae
cwtl
fs
mov
jae
rcrl
insl
pop
ret
lret
jae
aam
bound
jno
nop
lcall
add
add
xor
lcall
jmp
scas
negl
xchg
fwait
in
dec
mov
negl
xor
fstps
inc
mov
daa
mov
and
inc
pop
mov
cmpsb
es
lcall
cli
add
inc
cli
sahf
test
mov
cs
data16
loop
movsb
lahf
fs
mov
xchg
lret
lahf
inc
push
add
or
outsb
xor
inc
sub
iret
mov
add
mov
add
mov
add
mov
add
inc
add
xor
pop
mov
add
add
sbb
sbb
mov
add
add
mov
add
mov
add
mov
add
mov
and
add
and
add
and
fidivl
and
add
mov
add
cli
xchg
imul
adc
je
jo
and
add
add
xchg
data16
xchg
dec
add
xchg
popa
add
xchg
add
push
add
sbb
xor
pop
push
sarb
push
sarb
mov
mov
mov
jae
mov
xchg
add
mov
add
cwtl
or
fcoml
or
mov
lods
call
mov
dec
xchg
in
ret
dec
mov
add
repnz
iret
add
mov
adc
fdivrs
fcmovnbe
repnz
clc
mov
add
dec
add
mov
add
mov
iret
push
repnz
mov
ret
push
imulb
add
push
ret
pop
iret
inc
imul
arpl
mov
mov
insb
fs
push
jae
push
jo
test
ja
jmp
mov
mov
stos
mov
jns
mov
popa
cmp
add
push
mov
lret
mov
iret
mov
mov
cmc
inc
stos
mov
repz
cmp
push
push
and
aas
das
mov
mov
and
mov
add
inc
sub
mov
dec
jmp
mov
ss
add
dec
inc
and
popl
mov
inc
dec
scas
and
stos
or
movsb
cmc
aas
add
add
jmp
imul
mov
add
push
inc
inc
mov
xchg
decb
push
pop
imul
fs
dec
daa
sub
pop
and
outsb
jmp
push
and
sub
add
xor
dec
xor
dec
sub
les
arpl
push
sub
mov
add
add
gs
out
add
call
arpl
in
push
loop
out
loop
jae
mov
add
or
fisttps
inc
add
or
and
inc
add
inc
add
inc
add
or
add
inc
add
add
add
add
add
inc
add
sbb
mov
inc
add
sbb
add
mov
icebp
sub
rcl
movsb
test
add
mov
mov
dec
test
add
lret
movsl
jae
lret
aad
scas
outsb
es
or
or
incl
add
inc
rorb
mov
push
xor
add
mov
inc
mov
add
mov
add
mov
add
mov
add
mov
pop
add
or
add
xlat
add
jns
je
mov
je
in
jo
in
jne
in
jo
xchg
hlt
in
jo
and
popf
pop
hlt
cmp
test
adc
add
fcompl
inc
or
push
add
inc
add
data16
pop
xchg
pop
packsswb
mov
test
insl
lret
call
sub
dec
inc
inc
or
inc
xor
cs
add
push
and
cmc
xor
and
inc
mov
popl
fsubrs
sbb
or
inc
lods
in
dec
shl
pop
sahf
outsb
jmp
add
scas
pushf
push
icebp
cmpsb
fadds
xchg
add
jae
inc
je
ljmp
jne
outsb
dec
push
loopne
das
adc
pop
dec
and
pop
pop
adc
imul
and
jmp
in
hlt
scas
in
stc
inc
iret
clc
repz
add
inc
xlat
mov
add
mov
ljmp
mov
mov
cli
pop
inc
dec
push
inc
jne
push
dec
pop
popa
dec
gs
pushf
xchg
add
ds
pop
cs
add
add
add
lahf
sub
sub
sub
jle
or
stos
jb
sbb
lcall
mov
push
or
js
add
jp
or
js
add
mov
mov
out
cvtpi2ps
mov
sub
loope
jmp
mov
add
mov
enter
mov
les
xor
push
add
push
std
jbe
add
scas
xor
mov
mov
inc
push
sbb
push
cld
sub
cs
not
xor
mov
cltd
add
movsl
test
aas
enter
add
sbb
int
insl
add
out
mov
or
add
lods
ret
xor
std
cld
fwait
repnz
mov
fidivrl
and
movsb
stc
mov
push
jge
pop
cmp
and
mov
icebp
mull
popl
sub
sub
popa
fstl
mov
jmp
fldenv
push
sarl
push
xchg
test
add
add
cmp
mov
test
addr16
mov
push
pusha
dec
mov
xchg
dec
mov
lahf
push
xor
cmpsl
jo
mov
mov
xor
sub
sub
fwait
orb
aaa
adc
sbb
insb
jecxz
scas
test
mov
add
jge
and
push
xchg
inc
inc
sbb
add
add
test
pop
fcompl
jae
in
sub
xor
and
adcb
add
js
das
sbb
inc
sub
sbb
or
outsl
add
int3
mov
add
cmp
pop
into
pop
pusha
jle
jge
pop
add
pop
dec
pop
push
jp
pop
dec
push
inc
mov
add
ret
movsl
lods
in
xlat
lds
xchg
sbb
outsb
cltd
and
jae
adc
push
subb
mov
mov
pop
and
andb
js
add
sbb
sbb
adc
dec
call
mov
jns
dec
js
add
or
cld
iret
add
out
adc
out
lret
cmc
rcl
icebp
mov
xor
jbe
sub
mov
and
pop
adc
movsb
lahf
push
add
loope
mov
shlb
lods
xchg
xchg
mov
mov
testb
mov
lock
loope
mov
add
lea
lods
pop
out
fiadds
loopne
add
lock
cmc
xor
fcomp
lret
aam
ror
mov
rclb
mov
jmp
scas
imul
shrl
iret
ret
les
adc
popl
adcl
cmp
in
test
add
aad
mov
jbe
adc
push
fdivl
dec
cwtl
dec
icebp
jnp
inc
jmp
cmp
add
or
incl
in
out
jmp
add
or
or
mov
jmp
fcmovbe
stos
push
sbb
push
iret
sub
shll
cs
shll
insl
aam
fadd
or
into
add
sar
repnz
mul
xchg
add
fidivl
add
lods
mov
repz
mov
icebp
lcall
mov
ljmp
incb
mov
xchg
popf
movsl
fstl
imul
xchg
pop
mov
add
push
and
xor
imul
insb
and
sbb
insb
fcoml
and
and
add
add
mov
test
mov
je
xor
mov
and
push
xor
mov
daa
aam
sub
or
inc
repz
push
ljmp
pop
cli
js
add
dec
sub
add
sub
lock
ret
cmc
and
shlb
in
int
fldt
lret
push
repnz
dec
add
mov
loopne
xchg
and
xor
out
mov
dec
es
jle
or
mov
addr16
or
jb
adc
push
adc
jo
adc
add
adc
jp
sbb
or
iret
idivb
cmc
push
mov
sbb
or
ja
aaa
sbb
addl
add
add
adc
das
and
inc
es
dec
push
cmp
aas
cs
pop
das
cmp
add
lods
jmp
cwtl
mov
add
jp
mov
arpl
mov
pop
xor
outsl
cli
dec
scas
jbe
jno
pop
rolb
inc
les
adc
outsb
fdivrs
shlb
xor
popa
jmp
sub
popl
cmp
add
add
aaa
cmpb
xor
cltd
loopne
mov
shll
xchg
insb
int3
jo
mov
fimuls
shll
add
lcall
xor
add
dec
jno
nop
inc
pushl
repnz
jmp
jecxz
mov
add
pop
xor
add
add
mov
add
popf
fdivp
stos
lahf
out
loopne
cltd
in
push
add
pop
xchg
xor
jle
add
jns
cmp
cmp
fisubrs
popa
repnz
xor
pusha
inc
les
imul
xor
fdivl
and
or
and
call
and
jns
popl
add
mov
lds
js
add
add
add
lcall
mov
sub
add
js
add
loope
popf
push
cmc
dec
cmpsl
das
hlt
jg
aaa
out
jp
inc
js
add
inc
in
mov
ds
xchg
inc
int
dec
inc
xor
add
mov
mov
scas
mov
enter
add
mov
shlb
mov
add
sub
xchg
lods
xchg
out
push
cli
or
pop
mov
shl
jne
out
pushf
dec
pop
fisttpl
fdivl
lods
cld
rcr
add
ja
arpl
adc
adcl
cmp
and
or
xor
sbb
pop
adc
enter
add
popa
push
rcrl
jne
and
push
das
test
sbb
pop
sub
add
jnp
xlat
stos
insl
dec
loope
jne
fldcw
jle
cmpsl
push
cmpb
fs
inc
scas
test
xor
or
cmpsb
paddb
fwait
psubsw
stc
and
mov
add
cmp
mov
push
sub
push
sub
lahf
arpl
and
pop
enter
xor
and
cmp
jne
sbb
cmpsl
add
add
outsl
out
movsb
mov
call
mov
mov
adc
cli
xchg
jno
mov
test
push
pop
cwtl
cmp
adc
xor
pop
inc
dec
push
pushf
xchg
add
pop
and
insl
xor
pop
or
jae
daa
ja
add
sbbb
or
or
sti
test
outsb
pop
sub
add
bound
and
movsb
call
pop
mov
pop
loope
arpl
adc
pop
sti
lcall
and
in
das
or
add
add
add
sub
xor
stc
aas
adc
int3
fidivs
xor
mov
stos
inc
mov
cwtl
pusha
adc
shlb
sarl
cmp
fnstenv
xor
je
add
mov
push
mov
jmp
in
mov
push
fimuls
mov
clc
adc
add
xchg
sub
and
and
aam
out
sub
xchg
test
pop
pushf
mov
test
les
test
icebp
out
mov
outsl
addb
mov
mov
push
dec
sub
dec
dec
and
xchg
push
lret
je
push
roll
or
jae
cmpsb
nop
fst
jecxz
sbb
adc
lret
faddp
add
jle
pop
pop
cmp
push
push
insl
inc
inc
dec
test
add
shrl
jecxz
jae
mov
mov
mov
jbe
popl
add
xchg
psubsw
scas
es
mov
fwait
or
mov
sub
movsb
cltd
pxor
xchg
adc
gs
sub
add
pop
push
test
sub
xchg
stc
pop
loope
test
push
fisubrs
xor
push
and
pop
pop
nop
add
cmpsl
movsb
std
cli
ds
out
lock
mov
loopne
nop
add
jbe
pop
dec
sub
pop
imul
pop
fstpt
ja
iret
sub
stos
push
push
add
jl
lea
ja
and
fmull
add
xchg
popf
sahf
arpl
fwait
scas
jmp
add
dec
add
cltd
add
mov
in
movsb
out
rol
out
cli
clc
sahf
in
repnz
fcomip
mov
cld
test
push
lods
inc
aad
lahf
and
imul
or
mov
out
rclb
into
lcall
dec
sub
clc
daa
xor
in
adc
fbstp
add
xor
cld
fldl
roll
cmp
sub
xor
hlt
or
leave
add
add
cli
inc
rorl
xor
insb
test
mov
mov
xorl
adc
mov
adc
jbe
push
sbb
pop
and
decb
push
ja
xorl
imul
add
add
or
jl
or
cmp
gs
add
xchg
stc
out
xchg
mov
ret
testb
sti
test
mov
repnz
mov
sti
mov
lret
adc
call
mov
mov
shlb
lock
cmp
dec
cltd
es
inc
mov
add
add
push
mov
jae
push
hlt
or
pop
subl
jnp
and
jb
pop
lock
ja
aas
add
out
in
jno
inc
shll
sbbb
push
aas
andb
xchg
gs
sahf
mov
jge
insl
xor
addl
mov
xor
in
cmp
inc
test
xchg
repnz
cltd
jmp
into
fdiv
into
ror
lret
psubb
ret
in
adc
int3
mov
mov
lds
mov
mov
sahf
repnz
popf
in
lds
mov
fcomip
sub
mov
add
push
psubusb
pusha
fadds
adc
or
add
in
or
add
sub
pop
cmp
hlt
push
cs
jp
xor
xor
mov
int
adc
iret
xor
jp
leave
sub
fwait
das
hlt
ja
inc
outsl
ret
cmp
mov
push
jae
add
mov
mov
je
mov
test
aas
jnp
add
mov
imul
xor
pop
mov
sbb
pop
mov
mov
aas
ljmp
add
mov
inc
shl
dec
in
rcrb
mov
mov
jnp
mov
ficoml
hlt
scas
add
mov
aad
cmpsl
adc
lret
mov
enter
push
sbb
popa
insb
sub
pop
xor
insb
das
sub
add
add
adc
inc
popl
sbb
je
cmp
push
les
sub
push
bound
add
jmp
fs
sbb
call
stos
jge
lret
lret
out
mov
add
data16
sbb
pop
adc
das
mov
cmp
push
add
add
add
adc
test
or
outsl
jmp
mov
add
test
popl
cmp
jmp
add
sbb
cmpl
mov
les
mov
add
add
push
mov
add
lds
fsubl
mov
cmp
xor
mov
int3
nop
add
outsl
outsl
pushl
orb
clc
fwait
repnz
add
add
pop
popa
xor
jno
xor
bound
add
mov
fwait
jmp
mov
in
movsl
lock
scas
out
ret
cmpsb
mov
pop
jns
pop
sub
adc
add
insl
or
push
bound
or
fbstp
dec
xchg
jns
push
leave
jb
add
jne
mov
ret
out
iret
shlb
lret
das
fnsave
sub
lds
sub
jle
xor
jp
push
filds
aas
les
in
pusha
ret
add
arpl
dec
mov
fidivrs
mov
les
xor
sub
dec
xchg
xor
out
int
fmuls
das
fistps
add
mov
jmp
xor
add
inc
ljmp
xor
dec
in
arpl
in
ljmp
add
adc
dec
push
aaa
lahf
inc
or
lret
push
hlt
xchg
jb
xchg
nop
push
push
mov
inc
pushf
repnz
dec
or
add
add
add
leave
movsb
dec
mov
pop
in
pop
push
sbb
push
jno
inc
outsb
dec
decl
dec
adc
add
and
lock
pop
mov
in
and
es
add
mov
add
jne
cmp
shlb
loopne
jmp
mov
cmp
aam
rolb
add
add
popl
sub
push
ret
jp
dec
xchg
jmp
pop
xor
add
scas
push
aam
aam
shll
call
add
hlt
mov
add
mov
idivl
sub
int3
add
ret
jns
jae
popa
lea
jge
add
int
add
scas
adc
fimull
add
add
aad
add
add
dec
inc
les
movsb
call
das
outsb
arpl
dec
push
mov
push
jno
mov
add
inc
pop
roll
pusha
xchg
add
add
dec
jle
decb
popa
jle
mov
add
fisttpll
add
push
push
dec
in
push
push
xchg
adc
mov
dec
dec
fcompl
add
mov
or
xor
outsl
int3
jae
pop
mov
jl
mov
push
insb
jg
add
mov
push
cmp
js
cltd
jns
pop
push
pusha
sbb
sub
push
dec
jle
pop
imul
push
push
repz
pop
pushf
cmp
or
pop
push
xor
or
xor
repnz
add
mov
mov
inc
mov
pop
inc
mov
xchg
aas
mov
enter
add
in
add
push
add
push
add
sub
and
ficoml
jp
lcall
add
popl
cmc
in
cmc
sbb
cmc
scas
add
nop
into
add
nop
enter
stos
add
add
add
pop
add
nop
out
mov
aam
mov
ret
pop
in
cmpsb
pop
fmul
mov
push
xchg
xlat
scas
push
or
add
lea
add
aam
add
rcl
add
xchg
roll
insl
ret
popa
sub
roll
xchg
roll
sub
inc
and
dec
xor
add
add
fmuls
fcoml
pop
rcll
pop
shr
lret
data16
push
imull
or
outsb
out
jb
loop
jbe
fsubp
jp
mov
movsl
xor
jmp
mov
add
cmp
jno
mov
out
and
mov
and
mov
aas
int3
rolb
rcl
inc
inc
movsb
fmuls
cwtl
fmull
mov
les
add
pop
pop
xchg
pop
pop
mov
pusha
popa
mov
repnz
insl
lcall
add
nop
add
push
aad
and
add
push
lods
xchg
add
jae
addr16
in
cs
insb
add
ljmp
mov
add
add
ljmp
xchg
fnsave
mov
push
gs
stos
gs
pop
mov
jb
dec
scas
inc
dec
imul
imul
andl
jns
add
mov
je
inc
arpl
xor
arpl
pop
addr16
imul
add
mov
imul
je
add
add
sub
fmuls
andl
out
mov
cmpsb
addr16
fistps
outsb
xchg
repnz
mov
push
add
xchg
loopne
mov
dec
aam
fsts
jbe
add
cmp
popl
inc
sbb
adc
push
add
flds
mov
xor
icebp
xor
popl
add
nop
add
and
stos
add
lret
nop
flds
loop
pushf
add
xchg
add
popl
int
roll
mov
mov
add
mov
add
mov
add
mov
add
mov
add
into
add
lock
fiadds
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
lock
mov
add
lock
dec
sub
popl
dec
mov
add
mov
add
mov
add
jne
dec
add
imul
lea
add
lret
inc
add
inc
add
lret
adc
inc
add
leave
inc
add
inc
add
jp
add
inc
add
les
outsl
add
add
addl
add
inc
add
inc
add
sti
inc
add
sti
inc
add
hlt
add
mov
add
mov
add
fs
add
mov
xor
mov
xor
mov
imul
pop
add
dec
je
mov
je
mov
add
mov
add
mov
add
mov
or
aad
or
scas
insb
or
mov
jo
mov
data16
jge
add
aad
add
cli
outsb
inc
mov
insl
inc
mov
jp
mov
outsl
inc
mov
outsb
inc
mov
test
inc
mov
jb
mov
outsb
inc
mov
test
outsb
testl
add
fmuls
mov
add
mov
add
nop
add
nop
add
mov
lcall
ljmp
mov
mov
insb
sbb
jnp
fs
addb
add
gs
subl
insb
sbb
subl
ja
subb
dec
pop
faddl
add
add
popf
cmp
fs
addb
out
rcrb
enter
lcall
inc
mov
mov
in
out
inc
adc
mov
mov
add
dec
cmpsb
add
rolb
cmp
add
xchg
cmc
push
stos
retw
mov
je
mov
add
xchg
inc
cmp
mov
add
xchg
push
inc
pop
repz
addr16
push
or
jmp
cmp
push
sbb
fsubl
mov
add
inc
add
jno
adcl
and
pop
xchg
add
rorl
add
add
and
pop
push
inc
add
movsl
inc
add
cs
cs
cs
add
add
inc
add
inc
add
and
hlt
and
inc
add
inc
add
dec
inc
add
mov
push
mov
popa
gs
fiadds
add
nop
and
lahf
mov
add
pop
add
mov
add
mov
jno
pop
push
fs
dec
data16
mov
jo
aam
pop
inc
shll
jb
push
add
add
jecxz
inc
insb
ficompl
add
or
js
insb
imul
adc
pop
or
aad
sbb
imul
jo
xchg
xchg
outsl
and
xchg
pusha
add
sbb
clc
push
and
ljmp
scas
jmp
push
xlat
lods
cli
and
push
add
popl
add
popl
out
or
pop
add
mov
fmuls
mov
test
rcr
je
pop
out
popl
icebp
je
out
mov
out
mov
out
mov
cmp
fimuls
mov
pop
fidivrl
jne
add
ja
repz
std
hlt
scas
xchg
inc
jmp
or
call
add
jnp
fdecstp
popl
movsb
push
mov
sar
mov
inc
jnp
fdecstp
popl
pushf
inc
popa
je
es
mov
jbe
subl
xchg
std
je
popa
adc
mov
arpl
and
add
add
fimuls
mov
sbb
popa
les
add
cld
jmp
cwtl
rcrb
push
mov
mov
push
inc
pushf
mov
mov
push
xor
or
sub
mov
adc
add
out
cld
test
add
out
test
or
std
jne
lds
xchg
out
incl
add
add
pop
mov
jmp
call
xor
mov
add
int3
dec
push
add
pop
ret
std
je
xchg
or
xchg
stos
add
testb
mov
jbe
push
and
jo
push
push
or
pop
xor
and
push
cmp
inc
adc
add
jbe
add
add
add
rolb
mov
fisttpl
jp
out
decl
inc
jmp
test
add
mov
add
mov
pushl
loopne
je
repz
xor
add
mov
pop
xor
fimull
pop
mov
ret
in
mov
repnz
out
and
add
sub
fcmovne
imul
out
push
ljmp
repz
add
aad
xchg
in
jp
push
pop
mov
cmpsb
inc
mov
fs
xchg
push
inc
imul
jne
mov
cmc
push
pusha
or
in
jl
jg
ret
xchg
add
push
xorl
jmp
pop
loope
pop
adc
add
add
xchg
mov
test
pop
adc
iret
add
or
insb
xchg
loop
bound
and
mov
push
xchg
mov
adc
mov
xorl
sub
jmp
ss
mov
mov
fisubl
mov
add
mov
test
popf
mov
add
cmp
cmp
add
mov
adc
push
xchg
jmp
push
and
enter
add
fsubr
xor
icebp
je
adc
inc
aad
pop
test
aas
cmp
xchg
push
lahf
shr
xchg
xchg
add
push
rcll
pop
pushl
sti
ja
adc
add
add
add
mov
jge
in
mov
cmp
inc
mov
adc
mov
add
movsb
loope
ljmp
jne
repnz
add
pushf
inc
pop
imull
push
sbb
imul
test
mov
jns
ss
add
or
subl
mov
xlat
push
out
inc
jmp
sbb
dec
ds
cwtl
out
ja
loopne
add
mov
fsubrl
jne
pop
mov
into
xlat
sbb
movsl
js
cmp
adc
out
mov
xacquire
jecxz
les
adc
in
push
adc
ja
adc
in
data16
jns
adc
ja
or
add
xchg
adc
add
add
add
push
sbb
jb
ss
dec
xor
sti
mov
out
cs
jle
pop
insl
in
jae
jb
mov
mov
sbb
repz
leave
xorl
aas
in
inc
in
in
cmp
and
sub
fiadds
cs
add
mov
leave
push
dec
dec
mov
xorl
add
sbb
gs
sarl
outsl
dec
mov
inc
mov
jb
mov
mov
mov
shll
cmpsb
decb
and
and
pop
incb
aad
mov
in
or
fnsave
push
out
dec
push
bound
in
add
add
fnstcw
adc
std
jecxz
dec
mov
add
add
out
or
push
jb
jno
idiv
mov
dec
call
mov
add
dec
leave
ret
pop
push
dec
movswl
add
lea
stos
mov
pop
push
mov
sbb
pushf
out
xchg
cmovg
dec
mov
fiaddl
rclb
xor
jbe
loopne
mov
add
pop
lea
cld
addr16
pushl
data16
sub
dec
xor
pop
add
push
dec
ds
inc
mov
shll
sub
sub
adc
jne
jg
xor
icebp
cld
cli
popa
jp
lds
gs
cld
xor
test
mov
mov
mov
sub
push
bound
ljmp
aaa
push
push
stos
pop
jle
cmc
sub
add
add
dec
sub
or
dec
dec
decl
jno
xbegin
fs
movsb
sti
cmpsl
add
out
call
mov
daa
test
cmpsl
fdivl
and
out
test
out
sub
imul
sarl
xorl
outsb
lods
addr16
hlt
aaa
push
cld
jle
loop
test
push
pop
pop
ds
pop
ss
mov
fists
sub
mov
mov
stc
push
cmp
aaa
sbb
test
or
test
movb
dec
fmull
dec
jl
cli
testb
fnstsw
aaa
es
mov
nop
jae
test
mov
lcall
mov
data16
or
sahf
insb
dec
ret
push
std
out
nop
add
xchg
inc
jmp
or
sbb
cmp
test
mov
push
jmp
push
cmpsb
and
std
hlt
addb
sub
int3
mov
and
mov
or
dec
adc
cli
mov
inc
add
insl
adc
test
add
add
add
lahf
push
add
xlat
mov
fldcw
and
out
call
sbb
add
es
xchg
push
jmp
out
loope
add
sbb
pop
leave
push
push
push
mov
pop
test
sub
inc
add
add
int3
mov
push
xor
add
mov
dec
or
add
add
adc
mulb
adc
pop
inc
add
push
push
ds
adc
pop
enter
jmp
into
mov
pop
aam
add
adc
loop
jne
jge
lods
push
sub
or
xor
or
jl
lods
cld
mov
inc
lods
lods
sub
lcall
or
jle
jae
loopne
xor
pusha
ds
stos
push
lea
mov
push
cld
jae
jbe
mov
daa
add
jne
call
ds
out
add
cvtps2pi
mov
in
adc
sbb
addb
xor
jmp
repnz
insl
les
add
add
arpl
lods
pop
out
fcmovnbe
jo
mov
xor
or
cld
pop
lahf
add
mov
mov
cltd
or
enter
testb
cmpsb
ss
push
jmp
mov
inc
icebp
dec
out
sahf
mov
mov
mov
sub
bound
add
add
xchg
loopne
add
mov
jmp
movsb
iret
add
xchg
mov
dec
test
mov
push
out
mov
sub
add
sbb
jecxz
xchg
fmull
add
xlat
cmp
inc
pushf
out
xchg
fmull
add
fidivrl
inc
pop
out
xchg
mov
add
pusha
out
xchg
sbb
dec
decl
mov
add
mov
xchg
cmp
or
add
add
mov
mov
or
add
std
xor
popf
adc
int3
xchg
rcll
sub
cwtl
push
pushl
inc
hlt
aas
mov
fnstenv
mov
dec
cmp
fmuls
mov
add
cmp
add
mov
dec
or
pushf
or
mov
add
ss
out
add
cmp
pop
jl
ljmp
pop
lods
mov
mov
shll
pusha
cld
mov
add
test
sbb
push
or
fstp
mov
mov
lea
mov
jl
test
adc
sbb
inc
or
call
add
add
add
jl
mov
pop
ja
sbb
sbb
push
clc
loopne
xchg
mov
dec
jecxz
sbb
lret
add
je
add
push
cmc
xlat
push
andb
mov
daa
inc
out
inc
sub
lret
push
xchg
add
mov
insl
fcoml
push
pop
xor
push
add
cmpsb
out
cmp
lret
adcl
sub
push
push
je
pop
cld
mov
das
sub
or
jbe
stos
scas
xor
lret
sbb
push
adcl
push
aam
sbb
in
aam
mov
movsl
inc
jmp
jecxz
mov
add
add
test
lds
movsb
jmp
scas
aaa
fs
dec
test
movsl
adc
mov
push
inc
add
sahf
dec
inc
fcompl
inc
lock
hlt
incl
outsl
adc
sbb
xchg
push
je
jb
jp
ljmp
clc
imul
sarl
mov
adc
xchg
add
leave
addr16
pop
push
pop
cmp
adcl
les
xchg
add
xchg
mov
pop
jne
xchg
fsubr
cld
push
add
and
fcom
dec
pusha
xchg
dec
jne
insl
jne
movsb
cmp
add
and
adc
imul
mov
push
rcr
push
loope
lret
aam
in
add
xor
je
pop
mov
add
mov
jmp
daa
fists
dec
inc
add
idivb
pop
insb
stc
add
test
or
fs
gs
mov
in
clc
mov
xchg
ss
lds
add
popf
ficoms
mov
neg
mov
adc
cmp
movsb
jecxz
lret
cmp
in
nop
jno
mov
sbb
add
add
arpl
icebp
mov
insl
les
sbb
int
call
xor
sbb
adc
popl
xchg
gs
les
xor
sbb
dec
aad
mov
out
sarl
mov
addr16
push
rolb
or
aaa
ret
idivb
dec
pusha
add
out
add
iret
add
xlat
popl
jmp
push
daa
push
jmp
sarl
jp
mov
aad
incb
add
xchg
test
mov
mov
add
push
add
neg
jae
jno
sarl
mov
mov
inc
dec
sahf
mov
inc
fidivs
push
je
add
ja
jno
push
push
popl
push
loopne
std
hlt
andb
or
frndint
pushl
xor
pop
push
mov
push
inc
adc
mov
aaa
pop
cmp
mov
fcmove
mov
or
orl
push
push
sub
dec
fsts
data16
mov
mov
add
add
add
dec
push
int3
xchg
add
pop
sbb
xor
hlt
pop
push
mov
data16
mov
push
in
fadds
mov
pop
fstpt
loope
jo
xor
enter
mov
fistl
sti
mov
idivb
jle
mov
add
nop
test
ds
mov
test
push
insb
add
dec
inc
mov
fsts
add
add
inc
inc
add
clc
push
push
inc
addl
xchg
mov
mov
mov
push
cmpl
mov
lea
push
fsubrl
and
cmc
xchg
or
nop
in
inc
cltd
arpl
cltd
out
xorl
sbb
lret
jo
or
xor
add
add
ret
shrl
mov
movsl
mov
push
jl
ss
add
fldcw
or
or
pushf
fisubrl
pop
insl
jg
dec
mov
lcall
fadds
iret
stos
fnstenv
imul
jae
jge
cmc
mov
mov
add
mov
rolb
mov
bextr
push
test
sub
add
jb
jne
or
pop
adc
mov
pusha
add
clc
mov
sbb
dec
mov
sbb
fisubrl
sub
add
mov
cmp
repz
xor
dec
int
repz
add
loopne
inc
add
aaa
adc
inc
push
or
test
mov
add
xchg
idiv
mov
iret
xchg
cmp
pop
fs
in
and
lods
popf
imul
jp
ret
minps
xchg
adc
cli
enter
xor
mov
jmp
or
les
rorb
ss
adc
add
add
pop
inc
enter
fisttps
mov
mov
stos
cmp
adc
jns
out
mov
adc
jns
sahf
stc
scas
inc
pop
mov
cmp
jbe
adc
push
out
push
repnz
cwtl
pop
in
in
mov
stc
loope
js
es
lcall
xchg
add
add
add
aaa
into
mov
push
mov
and
or
inc
outsl
lcall
sub
pop
pop
push
mov
sahf
push
jp
cltd
rorb
mov
add
test
out
xor
add
mov
shrb
shl
adc
push
call
mov
inc
aad
stos
iret
out
notb
jmp
mov
insb
inc
or
lret
mov
out
rcll
mov
lock
mov
inc
test
xor
in
mov
mov
ljmp
dec
mov
pop
add
gs
mov
test
pop
mov
xchg
aam
jmp
push
cld
sub
icebp
push
push
sarl
test
in
push
loope
push
mov
out
jmp
xchg
add
sub
loope
adc
add
lds
mov
adc
adc
cmc
or
rorl
lcall
mov
out
je
popa
int3
nop
add
mov
add
rclb
fmull
add
leave
mov
sti
push
pop
mov
xor
pop
jne
loope
hlt
push
and
sti
inc
ret
pop
pop
jne
shll
mov
clc
adc
mov
pop
jne
cmpsl
xchg
rclb
std
ret
shr
ljmp
sub
or
mov
push
sub
pop
push
out
push
xchg
add
or
incl
add
add
jb,pt
daa
inc
cmp
xchg
push
or
pop
pop
add
cmp
or
mov
cmp
cmc
call
mov
pop
add
inc
rcll
cmp
out
sahf
push
add
rolb
test
push
inc
dec
jne
enter
fidivl
cmc
sti
sbb
mov
add
lock
testl
nop
mov
and
fadd
push
add
lea
inc
sar
mov
inc
xor
out
cmp
rcrb
out
popf
stc
sti
add
loope
mov
ds
fbld
out
add
call
cmp
mov
add
add
add
inc
mov
clc
push
cmpsl
add
push
scas
push
stos
ljmp
lret
pop
lcall
fcmovu
incl
mov
scas
sbb
add
iret
mov
in
dec
sub
addl
jmp
popl
add
mov
adc
add
mov
mov
add
add
inc
jmp
jge
push
fs
pop
add
mov
mov
inc
jmp
in
xchg
mov
push
mov
mov
popl
jmp
fdivrl
fs
nop
cmpl
adc
movsb
inc
mov
push
mov
xchg
add
in
add
add
push
xchg
add
out
jmp
mov
mov
add
adc
pushl
sbb
dec
push
mov
add
test
call
xchg
add
out
jmp
xchg
aad
mov
fisttpll
lea
dec
lea
cmp
sub
add
or
mov
xchg
rcll
inc
dec
dec
aas
jp
lods
fildl
push
cmp
clc
add
lea
les
xor
incb
sub
mov
xchg
cld
ljmp
add
lock
pop
ret
cmp
lar
cmp
pusha
push
xchg
cmp
bound
add
fildll
mov
xor
dec
xor
cli
mov
inc
insl
pop
in
add
fmuls
ss
push
mov
inc
and
stos
or
outsb
sbb
jecxz
and
fcomps
jge
ljmp
push
inc
cld
cmp
out
iret
out
test
mov
adcb
add
add
notb
sti
mov
clc
push
mov
pop
mov
les
xor
popl
cli
mul
data16
inc
inc
jmp
jbe
out
mov
add
mov
adc
les
and
cmp
sub
not
out
vpmadcsswd
out
add
add
mov
mov
int3
push
sub
jge
inc
jmp
xchg
call
ljmp
add
add
les
cld
add
into
add
std
mov
das
add
adc
hlt
cmpsb
into
add
imul
clc
daa
lea
add
add
add
sub
lret
push
decl
push
add
lcall
ljmp
cmovo
pop
inc
mov
mov
and
xor
dec
mov
or
jb
and
or
stos
sub
push
push
jns
inc
mov
imulb
divl
push
movsl
and
cmpsl
fnsave
sub
push
imul
jl
stos
int3
push
cmp
add
mov
mov
mov
mov
jg
mov
add
mov
sti
test
add
or
add
mov
ss
leave
imulb
add
xor
leave
mov
pusha
add
mov
and
subb
out
mov
add
or
cmp
data16
or
sub
daa
icebp
icebp
mov
insb
push
xchg
lahf
dec
insl
sarb
call
add
xor
adc
push
mov
clc
lret
cli
inc
mov
ficoms
push
push
sub
aam
inc
jecxz
cmp
out
je,pt
add
mov
jle
jae
xchg
add
add
add
mov
dec
cmp
jmp
sbb
das
mov
leave
sub
jns
push
cmpl
ret
xor
mov
in
adc
mov
rcrl
or
fmulp
mov
adc
jmp
ja
and
mov
add
xchg
sbb
push
stos
or
call
adcl
pop
imul
bswap
les
int3
and
pop
jl
imul
stos
adc
xchg
pop
pop
idivl
add
push
push
mov
xor
jnp
mov
clc
push
rorb
call
push
push
jne
addr16
jmp
test
add
add
mov
cmpl
or
pop
add
push
push
jnp
mov
fmull
jno
pop
push
inc
je
or
push
mov
sub
sbb
xchg
or
mov
and
push
iret
sub
out
ds
test
cmp
inc
add
call
inc
add
sbb
enter
xchg
adc
or
call
lret
test
repz
mov
jl
mov
sub
mov
call
ss
push
and
je
inc
ss
aam
jne
ret
push
add
pop
adc
xchg
add
movsl
jp
dec
adcb
cmpsb
pushf
mov
add
es
mov
movsl
lret
sub
lahf
cmpsl
into
or
or
jb
mov
rcr
mov
mov
or
mov
aad
mov
loopne
and
or
lock
popf
daa
add
dec
ds
popf
lret
mov
or
add
dec
cmp
inc
ret
fnsave
fmull
shl
mov
std
mov
cmpsl
ljmp
xor
inc
dec
xor
hlt
aaa
mov
jmp
xchg
inc
ret
fnsave
cmpsb
add
subb
jp
adc
jb
adc
lds
inc
int
add
add
mov
imulb
lea
xchg
cmpsb
cmp
and
testb
ljmp
push
aas
add
sub
sbbl
push
mov
fmull
add
mov
cs
fmull
ret
pop
iret
fs
dec
adcl
jecxz
xor
inc
or
ljmp
cmp
add
and
adc
sub
or
pop
addb
push
mov
aaa
jmp
pop
jb
andl
ljmp
add
enter
leave
push
call
stc
dec
sbb
push
add
fwait
call
dec
xor
adc
push
inc
add
insb
enter
or
test
add
add
jno
decb
scas
rorl
sbbl
gs
add
xchg
popa
cs
les
pop
sub
mov
sub
adc
sub
ja
add
scas
leave
push
bound
call
sbb
bound
jle
sub
jb
adc
and
scas
fbstp
pop
dec
pushf
sbb
fs
add
ror
mov
rol
roll
mov
jb
or
ret
fldl
push
cs
mov
cs
neg
pop
xor
mov
add
bound
in
cmpsl
add
mov
add
ja
ja
sub
jo
cmp
fiadds
add
add
cmp
cmc
push
dec
push
and
push
pop
inc
lods
stc
cmpsb
ja
push
sahf
lods
xchg
push
sub
cmp
add
cmp
sar
lret
sbb
jl
jae
test
bound
cmp
mov
fsts
sub
fimull
push
data16
fs
xor
add
add
inc
or
add
dec
pop
pop
cmovns
dec
xchg
push
out
sub
lea
add
add
mov
or
inc
lahf
je
shlb
add
sbb
repnz
andl
mov
add
lock
add
add
call
add
stos
dec
out
mov
ja
mov
dec
jne
mov
test
mov
xor
ljmp
xor
dec
popf
inc
ret
imul
test
rolb
enter
mov
shll
daa
mov
rcll
inc
add
loope
pop
fsubrp
ret
or
add
add
in
mov
lods
mov
sti
adc
dec
addl
xor
push
mov
es
ds
je
sub
imul
cs
test
cs
pop
sub
fistl
nop
xchg
enter
add
test
add
sub
jmp
adc
rcrl
mov
out
mov
inc
adc
mov
sbb
out
dec
push
sub
out
cwtl
xlat
push
adc
mov
mov
sub
scas
dec
sbb
pop
aas
mov
int
sub
stos
and
mov
mov
mov
adc
jecxz
mov
mov
push
jb
movsl
jmp
fstl
add
jno
xchg
dec
xchg
popl
jmp
mov
clc
repz
lods
jmp
mov
sub
xor
es
mov
jle
xor
sub
mov
jge
repz
jmp
pop
in
aaa
movsl
sbb
jmp
add
insb
and
into
popf
mov
or
push
xor
lds
popf
nop
add
int3
cmp
gs
or
sbb
stc
stos
xor
incl
cmp
jmp
nop
add
ja
xor
push
aam
or
add
movl
inc
mov
rolb
inc
call
add
add
push
hlt
testb
mov
inc
mov
and
push
fimull
decb
push
cmp
or
mov
arpl
add
enter
mov
adc
mov
sbb
mov
aaa
push
dec
lods
cmovo
cmc
xor
sub
and
add
add
sub
cmp
add
mov
mov
and
push
jge
lret
js
push
or
inc
add
ljmp
ficoms
out
mov
xchg
clc
mull
add
test
jne
rol
mov
cli
iret
out
mov
into
out
ja
testb
add
add
mov
into
out
mov
mov
hlt
mov
cwtl
sbb
testl
xor
inc
ds
fisttps
mov
out
pop
dec
add
mov
je
cmp
cld
mov
or
out
test
mov
pop
add
mov
push
mov
push
inc
jmp
mov
lret
ret
ret
call
mov
pushw
lds
cmp
adc
add
mov
rolb
mov
mov
mov
call
xor
add
or
mov
hlt
repnz
jg
adc
jne
add
add
movsbl
push
add
mov
or
orl
and
push
inc
pushf
adc
or
in
mov
lret
fistpl
jb
ja
dec
mov
xchg
mov
outsb
cmpl
or
cvtdq2ps
mov
ret
push
dec
jae
push
rorl
je
xor
sub
adc
mov
or
add
inc
or
repz
pop
loop
data16
lea
cmp
add
sub
dec
stos
testb
icebp
cmp
enter
mov
ret
jmp
lret
cmp
cltd
or
adc
out
mov
pop
popl
mov
shll
add
jle
je
mov
add
xor
mov
mov
lods
pop
out
jecxz
mov
daa
add
dec
push
pop
jo
in
arpl
js
mov
sbb
jle
fwait
loope
bnd
add
sbb
mov
xor
sbb
sub
mov
sahf
or
mov
jbe
mov
adc
add
add
pop
fs
ret
cld
sub
push
insb
jmp
in
xchg
pop
daa
cmp
cmpsb
pop
les
es
add
xchg
mov
mov
or
add
shl
dec
mov
push
add
in
xlat
sbb
sar
lods
insl
icebp
xchg
xchg
sub
std
sub
sbb
inc
cmpl
add
adc
mulb
add
nop
push
push
add
xor
adc
je
add
xchg
sbb
shr
push
mov
and
cmp
adc
or
jle
pushf
mov
rorl
jg
out
xor
stos
cmp
adc
lret
and
scas
fmull
add
inc
aam
inc
or
inc
inc
out
stos
cmp
jbe
roll
sbb
nop
scas
or
mov
xor
je
xchg
mov
fnsave
les
mov
mov
mov
xor
pushl
lret
inc
pushf
lret
mov
push
pop
jl
repnz
dec
sub
fsubrs
mov
mov
roll
add
add
ss
sbb
lret
jbe
push
ret
push
sbb
inc
mov
xor
mov
add
add
out
roll
mov
jp
lret
mov
lret
icebp
add
xchg
movl
mov
lret
mov
in
jg
mov
mov
out
xchg
testb
sub
xchg
jle
add
mov
mov
add
push
add
xchg
jl
outsl
iret
out
mov
sub
xchg
dec
sti
add
sub
mov
in
jbe
dec
sub
call
mov
cli
aaa
push
in
orb
fwait
mov
lock
leave
ja
sbb
xchg
dec
sbb
das
pop
cmp
mov
cwtl
shlb
lock
rorl
add
add
push
in
ret
add
out
jecxz
testl
mov
pop
repz
and
dec
loope
arpl
test
push
fmulp
es
loope
dec
dec
mov
jns
push
bound
ds
jmp
jbe
mov
sar
fdivrl
addb
loop
loope
jnp
jmp
push
mov
push
imul
adc
mov
arpl
mov
testb
sti
testb
ficomps
push
jmp
enter
xchg
call
test
push
cltd
fildl
js
inc
pop
push
add
add
cmp
loop
call
jmp
mov
pop
stos
rol
cmp
aaa
add
inc
inc
and
movb
addr16
mov
psubsb
dec
cmp
testb
inc
mov
pop
ret
push
xor
xor
cwtl
data16
sub
rcrl
pop
mov
popf
popa
mov
subb
push
sti
insl
cmp
cmc
add
add
pop
inc
inc
lcall
scas
xor
sub
ss
push
lahf
xorb
jo
js
jne
popf
or
xor
jo
fs
jne
push
xor
scas
dec
cld
cmp
adc
xor
mov
test
lds
push
lds
push
mov
add
add
jae
jp
add
out
stc
pop
pushf
inc
cmc
rolb
jp
ret
ja
iret
out
stc
pop
mov
nop
xor
aas
push
roll
adc
pop
sbb
jl
xlat
call
mov
cs
sbb
mov
jo
loope
je
mov
push
inc
mov
add
add
cmp
loope
mov
es
out
es
andb
adc
dec
or
cld
fisubs
jbe
data16
mov
adc
adc
cld
mov
push
mov
xchg
test
push
mov
xchg
dec
sbb
data16
add
add
rorl
jmp
mov
movsb
loop
adc
shll
inc
add
sbb
fs
incl
test
add
out
inc
adc
jb
and
inc
or
sbb
in
adc
nop
arpl
iretw
sub
jne
adc
add
lcall
aas
fdiv
inc
adc
mov
popa
je
adc
jb
lahf
jmp
ja
adc
loopne
lcall
adc
ljmp
jb
add
imul
mov
jmp
je
mov
add
ficompl
add
cmp
pop
pop
xchg
pushf
mov
jle
incl
dec
add
push
lea
cmc
cs
iret
dec
loopne
lret
mov
jg
mov
aaa
punpckhdq
jmp
and
sbb
div
daa
ss
mov
outsl
ja
hlt
or
xchg
dec
ss
cmc
lods
iret
lret
test
in
adc
ret
daa
add
add
rcrl
leave
es
imul
add
out
fsts
adc
iret
out
mov
and
cltd
ret
inc
mov
xchg
out
je
mov
add
cli
ret
insl
dec
push
scas
dec
mov
mov
xchg
enter
int
daa
add
fisubs
add
fisubs
add
fisubs
add
fisubs
add
fiadds
sub
sahf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsl
xor
fildll
mov
inc
jmp
iret
add
mov
adc
in
ds
jmp
mov
pop
in
cmp
mov
add
add
mov
mov
fldpi
test
push
mov
imul
push
pop
pop
orl
push
push
jne
jp
std
cmp
pushl
clc
pushl
les
add
ret
clc
sub
ret
and
add
cmpsl
std
fimuls
mov
add
pop
and
add
dec
add
jmp
clc
aam
xchg
in
dec
int3
xchg
xchg
mov
add
jmp
add
imul
lods
cmpsl
data16
lds
mov
cmpb
mov
sarl
bound
shr
subb
xchg
dec
popf
or
jae
aad
inc
popf
stos
je
scas
xor
sbb
xchg
xor
jp
ret
es
mov
or
clc
xor
mov
mov
data16
jno
popf
add
ja
sbb
in
mov
out
das
dec
inc
mov
sub
roll
lret
out
cli
xchg
ja
lret
add
jge
add
dec
out
mov
add
add
mov
inc
mov
insb
cmpsl
stos
pop
call
add
inc
faddl
or
dec
clc
popa
shl
test
adcb
dec
in
mov
out
dec
xchg
push
mov
jmp
jne
pop
jl
pushf
inc
mov
push
test
mov
cmp
lock
mov
in
cmp
jmp
dec
nop
jae
testl
mov
fmul
out
or
jns
adcl
xchg
stos
mov
sub
mov
aad
mov
jmp
pushf
lods
lock
cmp
fisttpl
inc
jmp
push
jae
je
add
popl
jmp
mov
enter
rolb
scas
shll
add
add
sbb
aad
mov
or
adc
jle
iret
mov
insb
xchg
inc
fsubrl
jmp
aad
xchg
mov
mov
inc
add
cwtl
inc
fsubr
mov
aad
xchg
mov
mull
xor
lahf
push
data16
xchg
add
xchg
roll
mov
add
jg
aad
xchg
mov
pop
inc
inc
add
mov
aad
mov
adc
mov
mov
leave
jbe
call
add
add
adc
test
mov
xor
or
stos
shll
loopne
add
add
and
push
lret
adc
inc
mov
jbe
call
add
sbb
mov
jmp
adc
jbe
inc
mov
xor
pop
xlat
mov
jae
test
sub
shl
add
adc
push
movsb
iret
out
push
mov
push
mov
add
lock
out
mov
out
cli
jns
adc
mov
add
jge
pushf
fsts
adcb
in
jp
sbb
inc
mov
in
fmul
out
or
aad
iret
out
or
or
cmpsl
xchg
jge
adc
rol
push
pop
jg
in
out
jb
repz
popl
mov
lahf
daa
pop
mov
sbbl
cmc
dec
out
sbbl
dec
and
xor
repz
scas
push
or
sbb
add
add
cld
xor
dec
push
bound
rclb
pushf
or
loop
popa
jae
cld
dec
addb
sbb
push
xchg
scas
push
mov
mov
add
sub
sub
fidivrl
inc
jmp
pop
cs
jmp
push
jnp
add
push
cmp
loopne
push
push
pop
sbb
adc
add
add
adc
ds
add
loope
add
sbb
orb
push
ret
out
adc
push
into
add
sbb
mov
out
pop
pop
and
add
cmpl
pop
mov
add
call
jo
mov
push
push
out
adc
jle
add
test
idiv
fwait
or
add
add
add
mov
jb
mov
scas
pusha
sbb
ljmp
aas
mov
mov
inc
mov
xchg
add
fisubrs
fnstenvs
adc
out
jl
jo
mov
fmull
aaa
sbb
inc
sahf
arpl
cltd
add
mov
outsb
incl
add
add
lret
mov
add
mov
add
pop
fiadds
adc
nop
icebp
sub
add
arpl
dec
pop
push
in
inc
arpl
out
fsts
pop
mov
mov
in
fildl
int3
out
mov
xor
inc
mov
call
add
dec
sbb
popl
add
add
insb
pop
jmp
pcmpgtb
inc
fs
int
gs
rorl
lea
dec
pop
popf
shrd
mov
add
add
cs
testl
popf
xchg
lods
push
nop
push
add
stos
add
orl
shlb
cld
out
adc
push
adc
dec
iret
add
adc
push
inc
ret
std
lcall
ljmp
pop
cmp
jmp
jne
pop
mov
xor
hlt
scas
push
je
adc
std
fadd
fs
pop
stos
fwait
push
adc
jle
add
jge
xchg
jle
cmpsl
push
adc
mov
or
int
or
lds
push
dec
adc
incl
add
add
fwait
std
jne
das
adc
mov
jmp
test
mov
lcall
jl,pn
lret
and
aas
cltd
shll
and
sbb
or
out
test
cmpsl
adc
test
mov
jne,pn
inc
test
jmp
jmp
loopne
pop
repnz
xchg
push
mov
inc
lahf
je
sbbl
add
cmp
add
sub
sahf
xor
add
mov
test
mov
add
xor
add
adc
sub
out
nop
add
cmp
push
sub
insb
adc
cmp
sbb
dec
stc
mov
mov
test
mov
fcmovnb
xorb
clc
cs
ror
pop
outsl
or
add
aas
lahf
pop
jnp
lret
roll
add
mov
scas
sbb
mov
sbb
jae
jmp
add
sbb
add
adc
pop
rorl
out
or
out
fs
aad
mov
insb
ret
lret
dec
dec
enter
sbb
lds
adc
or
gs
pop
stc
jmp
dec
loope
or
add
add
mulb
aaa
cmc
out
cmp
add
les
es
filds
rolb
jecxz
xor
fbld
out
xchg
dec
or
jg
in
movsb
cld
fcomi
popl
sub
or
scas
popa
call
fidivrl
xchg
xchg
add
xor
or
mov
lret
add
and
icebp
xor
repz
in
pop
in
mov
jge
lods
jae
in
ljmp
or
mov
adc
in
add
cmp
add
mov
into
jno
add
and
mov
add
xchg
add
inc
pop
out
jne
fistpll
jmp
lcall
jo
std
adc
xlat
push
lea
adc
sbb
rol
push
jmp
out
or
adc
add
ret
rcll
mov
jb
xchg
or
adc
xchg
cmp
mov
inc
mov
ljmp
or
adc
sbb
or
add
mov
fstl
cmp
cmp
sti
lcall
add
pop
jmp
les
mov
sbb
divb
push
or
mov
mov
jne
dec
out
lcall
iret
lcall
mov
add
jnp
jae
jge
push
adc
loopne
mov
xor
push
nop
incl
mov
jmp
cmp
add
add
bound
add
shl
cmp
adc
sbb
or
push
stos
jno
lcall
pop
pop
popf
mov
mov
adc
sbb
cwtl
pop
xlat
cld
or
jecxz
xchg
push
arpl
lcall
add
jle
pop
or
iret
pop
or
xchg
pop
mov
jo
or
add
mov
mov
xor
pop
cmp
or
ljmp
sbb
adc
add
jmp
cmp
jle
in
pop
push
add
and
je
scas
nop
aas
sti
push
cli
add
call
mov
mov
loope
jmp
jmp
add
pop
mov
mov
sbb
fwait
push
jmp
orl
loope
cmp
and
add
mov
or
add
adc
push
fiaddl
decb
or
add
push
call
shrb
daa
sub
pop
sbb
testl
add
in
add
mov
push
mov
or
add
mov
adc
dec
xchg
lcall
je
mov
cld
call
push
cld
cmpsl
int
or
cmp
test
clc
add
or
mov
mov
mov
lock
aam
loop
or
mov
xchg
mov
cmpb
sub
sub
sub
aas
inc
fimuls
ljmp
xor
cmp
xlat
jg
xlat
or
sbbb
in
inc
sbb
or
mov
or
sbb
incb
mov
jecxz
sub
sub
fdivl
testb
dec
mov
arpl
shrl
sahf
stos
negb
mov
aaa
hlt
jmp
push
pop
call
adcb
jo
test
rcr
xorb
add
xchg
addr16
stos
jnp
cmpl
or
dec
jo
imul
sub
ss
call
mov
mov
imul
add
add
or
pop
and
jl
pop
rorb
mov
clc
lock
mov
faddl
sub
sbb
cmp
mov
dec
std
xorb
je
cmp
cld
ret
dec
cmp
jmp
arpl
mov
lods
inc
push
fiadds
ljmp
je
popl
jmp
mov
shll
add
add
inc
jmp
stos
add
cld
dec
sbb
push
xlat
mov
mov
test
nop
icebp
incb
sbb
rcll
jge
xchg
inc
jmp
mov
and
or
or
lret
mov
pop
adc
pminsw
mov
mov
dec
in
mov
push
push
mov
mov
call
decl
push
je
psubw
mov
sbbl
jb
xchg
fadd
stos
jne
call
add
mov
fnstenv
jne
and
arpl
push
ss
jae
jne
or
ret
repnz
into
cli
adc
sahf
rcrb
add
cli
je
in
mov
sahf
add
add
int3
pop
inc
jp
shlb
cli
daa
mov
xchg
jle
fisubs
mov
sub
add
mov
cmp
mov
sub
cltd
or
sbb
push
cmpsl
add
hlt
in
xchg
roll
sbb
out
jle
pop
popa
pop
inc
or
mov
arpl
adc
adc
pushf
xchg
add
sahf
mov
sub
push
cmpsb
out
repnz
xor
stos
cmp
hlt
push
pop
mov
xchg
sub
pop
adc
rcll
jle
pop
add
xchg
mov
out
adc
add
xrelease
cmp
add
mov
stc
lock
pushw
xchg
jbe
cmp
add
lea
loope
lods
leave
inc
into
mov
std
fdivrl
sahf
inc
jmp
jne
or
xchg
call
test
inc
add
adc
push
pushaw
lods
test
ret
or
cmp
pop
and
stc
ret
and
jge
adc
pop
cmpsl
push
push
stos
mov
inc
xor
inc
clc
push
clc
cmp
decl
orb
jmp
cmp
or
jne
hlt
rcll
add
mov
in
lcall
mov
jne
adc
pushl
adc
add
shl
mov
lcall
add
pop
jnp
je
cli
inc
add
dec
nop
je
imul
mov
outsb
mov
sbb
sub
shll
jl
ret
cmp
test
sarb
sbb
mov
arpl
push
sbb
jp
mov
fwait
add
pop
ret
jecxz
add
xor
push
jge
in
dec
xor
mov
leave
roll
add
test
sahf
je
jb
stos
fadds
decl
movsb
cld
xchg
mov
das
jmp
sub
andb
bound
pop
adc
sbb
adc
pop
sbb
pop
sbb
and
add
add
add
nop
out
xchg
std
pop
dec
out
adc
push
fbstp
jnp
mov
mov
lahf
pushl
sahf
int3
or
xor
out
mov
test
pop
shr
and
mov
xchg
mov
pop
or
adc
int
cmp
popf
mov
aaa
mov
lcall
cmp
inc
xor
add
subl
idivb
add
inc
rol
inc
lea
rorl
fs
std
or
pop
pop
and
xchg
add
call
xchg
adc
sahf
push
rcll
in
cwtl
push
sub
mov
mov
push
incl
add
add
decb
idiv
popa
notb
popa
or
inc
mov
ret
xor
ss
push
out
and
rorl
add
lahf
les
lahf
std
std
dec
inc
and
dec
rclb
add
inc
mov
or
ret
je
dec
add
aad
xor
cmpsl
rcll
push
xorl
add
dec
push
adc
and
or
sub
shll
cmc
mov
jp
or
testl
inc
xchg
insl
or
js
jecxz
rclb
push
ds
inc
or
mov
or
movsl
js
pop
ds
decb
inc
cld
ss
mov
test
shrb
mov
testl
dec
scas
out
andl
and
mov
xchg
test
das
lea
divl
fiaddl
jg
sar
jg
adc
scas
cli
hlt
xchg
in
jle
sti
jb
lods
push
jmp
mov
aas
add
test
out
add
pushf
negl
ret
sti
push
mov
add
mov
test
int3
xchg
mov
sti
out
or
push
out
push
test
xor
jecxz
test
push
es
and
rorb
mov
xchg
add
mov
xor
es
xchg
addl
xor
je
enter
and
mov
aam
add
mov
add
adc
mov
mov
shll
add
pop
push
add
push
jl
aad
jl
test
lret
mov
mov
daa
mov
mov
pop
sbb
nop
adcb
addl
inc
dec
xchg
add
add
leave
jp
xor
push
push
push
sbb
inc
mov
push
je
cltd
and
mov
adc
int3
adc
inc
fstp
xor
lret
pop
adc
mov
mov
mov
aam
lea
inc
mov
adc
sub
inc
cmp
add
in
adc
adc
ljmp
jp
adc
push
sbb
decb
cld
leave
inc
or
ja
add
cmpsl
jns
add
add
cmpsl
add
push
std
jle
mov
add
bound
daa
add
insb
popf
ljmp
cld
cltd
mov
cld
jnp
ret
sbb
xor
inc
andl
mov
mov
les
sub
jg
syscall
xor
jo
decl
clc
mov
gs
add
mov
out
adc
inc
add
and
lret
sbb
ucomiss
mov
popa
stos
addr16
jl
jp
not
xor
mov
test
sbbb
outsb
xchg
hlt
lods
mov
test
cmc
dec
test
testb
inc
cmp
lock
xor
xchg
inc
jecxz
out
call
xchg
push
push
inc
sub
inc
sub
sti
xchg
or
fidivs
divb
test
jns
sbb
jecxz
rol
cmc
std
scas
pop
push
or
mov
stos
cmpsl
mov
fnsave
or
lahf
out
cmp
std
add
add
add
pop
call
call
dec
pop
jg
dec
cmpsl
mov
cmc
rorl
je
filds
pop
cmp
mov
mov
test
or
inc
mov
jb
sbb
jmp
shll
or
push
push
sbb
pop
mov
push
ret
xor
add
add
or
test
and
pushf
jae
and
add
fdivs
mov
cmp
addl
shrl
in
fists
sub
add
clc
call
filds
sbb
mov
mov
cmp
jbe
xor
sbb
shlb
push
cli
out
pop
sub
test
stc
jge
mov
add
imul
js
dec
cwtl
out
aas
mov
mov
mov
xor
sub
add
sub
adcl
add
or
add
dec
mov
add
ss
add
mov
hlt
jg
dec
or
je
mov
add
mov
testb
out
add
and
pop
mov
mov
add
testl
js
movsl
lods
imull
jno
sbbb
jo
rcr
xchg
jns
aaa
addl
rorb
loop
mov
add
clc
test
sub
insb
mov
leave
and
popf
pop
sub
fldcw
mov
je
pushaw
mov
mov
add
add
jl
mov
mull
sub
add
xchg
pop
push
ss
pusha
sti
jbe
mov
push
bound
stc
add
scas
jnp
xchg
inc
mov
mov
inc
push
fs
hlt
push
inc
mov
fildl
sub
or
xor
ret
push
movsl
popl
bound
or
adc
rolb
inc
icebp
xchg
jae
jg
add
mov
xchg
cmp
call
xor
add
add
pop
fsts
sub
mov
mov
or
jb
cmp
ret
or
jno
dec
aad
adc
cltd
dec
je
adc
call
mov
mov
dec
pop
ret
std
je
xchg
adc
mov
jmp
push
add
popf
std
je
xchg
std
adc
sbb
pop
push
cmp
mov
adc
sub
leave
xor
mov
je
add
pop
bound
icebp
mov
sar
stc
adc
popa
dec
dec
inc
in
adc
clc
mov
inc
je
or
push
cs
inc
rclb
mov
cmp
test
add
cli
jmp
adc
clc
xorb
repz
jg
fidivrl
cmp
mov
movb
mov
cmp
mov
clc
and
inc
mov
clc
add
lea
rcll
fmull
addb
scas
loop
pop
push
inc
lcall
add
add
mov
jae
loop
cmp
mov
cmc
mov
leave
push
hlt
ret
sub
in
jg
iret
jl
imul
mov
popa
out
fs
xchg
xor
ret
loop
sbb
popa
pushf
lock
fistpll
jecxz
jne
in
sahf
jg
out
sbb
andb
aas
push
xchg
add
inc
mov
add
add
add
stc
dec
pop
ds
mov
aam
push
mov
adc
jbe
subl
rclb
shll
cltd
inc
jb
jb
out
mov
push
mov
xchg
addl
adc
pusha
mov
adc
jmp
fsubl
mov
add
add
rcll
or
mov
add
jmp
xor
into
mov
mov
test
add
sbb
insb
test
add
mov
xor
push
sub
std
jmp
sar
mov
inc
pushl
test
inc
and
xchg
out
sbb
pushl
in
mov
xchg
call
push
add
add
mov
mov
pushf
xchg
push
lea
out
and
inc
test
fistl
fildl
fmull
cmp
mov
or
add
sub
sub
fidivs
add
pop
cmc
rorb
xor
clc
and
loop
cltd
mov
add
sub
pushl
mov
mov
fdivr
out
add
add
jnp
ds
pop
inc
mov
enter
jge
add
mov
mov
out
fildl
add
and
call
stos
popa
lds
popf
mov
mov
xchg
cs
mov
pop
xchg
mov
imul
aaa
ss
add
aas
add
out
sbb
daa
movsl
nop
out
lea
jae
sub
xor
int
bound
sbb
sarb
notl
cmpsl
add
lea
adc
jb
in
inc
jbe
fiadds
out
push
not
xchg
fidivrl
arpl
pop
add
rclb
vmaskmovdqu
fincstp
inc
jb
aaa
repz
jmp
push
pop
xor
ds
sahf
movsb
xchg
push
xchg
les
adc
mov
adc
out
adc
inc
fnstenv
adc
pop
mov
popl
cmp
lea
faddp
testl
cli
mov
test
mov
mov
movsl
pop
adc
inc
lods
jmp
xchg
sti
add
fsubs
push
xchg
mov
in
add
pop
andb
add
hlt
std
cld
call
xchg
mov
js
push
ud2
sub
fcoml
mov
mov
mov
std
lcall
ds
pop
jp
and
aas
div
gs
movsbl
sbb
xchg
pushf
std
jo
sbb
push
pcmpgtw
push
je
gs
test
cwtl
lret
mov
test
cmp
mov
mov
dec
jmp
imul
pop
dec
xchg
in
aas
mov
rolb
insb
jae
testb
in
dec
mov
test
jae
nop
add
adc
mull
repz
fld
xchg
mov
jae
rcl
psubq
fprem
add
push
ja
cs
fisttpll
pop
add
or
mov
or
mov
or
ret
mov
adcb
sub
or
aas
orl
shl
pop
repz
ljmp
js
xchg
push
test
mov
mov
cmpsl
insb
xchg
fisubrs
mov
add
xchg
sbb
push
ret
or
out
mov
xchg
pop
aam
jns
imul
mov
sub
mov
bound
inc
je
dec
aas
jb
mov
idivl
mov
ret
cmp
sub
mov
daa
insb
mov
lea
push
sbb
inc
mov
add
adc
xor
popa
cmp
push
sbb
pop
hlt
mov
add
add
dec
add
add
idiv
or
loope
out
dec
clc
jo
xchg
mov
arpl
ret
in
lds
mov
pop
gs
push
test
dec
add
icebp
mov
ss
sbb
ret
mov
inc
stc
push
out
stc
aas
dec
or
and
std
fldenv
sar
test
fiadds
aam
ljmp
add
add
lea
push
iret
dec
xor
add
cmp
adc
std
aaa
jmp
fistps
mov
adc
mov
mov
std
add
sar
pop
cmp
test
icebp
dec
sbb
std
adc
inc
push
jno
je
jae
sbb
adc
mov
jne
jbe
cmp
mov
das
rcrb
mov
out
out
cli
pop
sbb
incl
les
in
add
xor
decl
lret
mov
or
push
movsb
mov
push
inc
mov
sbb
mov
adc
mov
mov
mov
mov
add
or
or
pop
adc
dec
inc
mov
aas
je
shrb
cmc
clc
je
push
nop
stc
ret
sub
mov
fimull
fld
or
les
mov
orl
push
sub
pop
or
loop
jne
fistpl
fdiv
xchg
out
das
hlt
push
fidivrs
mov
xorb
add
add
loop
fists
mov
and
cmp
xor
jne
loop
loope
out
mov
js
aam
xchg
xchg
xchg
mov
or
orb
jmp
pop
push
push
and
or
pop
pop
or
add
xchg
push
insb
in
cmc
push
fcoml
andl
push
std
cmp
loop
loope
fwait
std
cld
jge
jmp
sub
je
cmp
mov
push
jl
fbstp
andb
fadd
in
mov
mov
ds
aam
loop
add
je
or
jecxz
ficoms
push
inc
mov
xor
add
pushf
pop
je
adc
decl
lea
shl
or
testl
incl
or
cld
in
cli
incl
sbb
inc
cld
inc
sbb
incl
rcrb
add
cmpl
sub
or
mov
jno
xor
in
shll
inc
and
out
rcll
add
add
dec
jb
jae
jne
pop
mov
cmp
add
stc
test
addb
sar
jmp
inc
or
or
incl
std
mov
or
pop
test
mov
in
lgs
imul
and
icebp
jmp
sbb
mov
jae
and
adc
incb
add
add
gs
or
stc
cmpsb
popw
cmc
andl
jl
cmp
addr16
ss
xchg
pop
sbb
fs
pop
sbb
push
dec
scas
iret
decb
xchg
out
das
in
push
adc
fsubl
out
dec
xchg
inc
add
xor
push
mov
add
fidivl
in
push
mov
pop
aad
xchg
jo
iret
adc
mov
xor
loopne
sti
jae
jmp
xchg
cwtl
pop
push
pop
xchg
cmp
push
push
inc
push
xchg
add
mov
mov
fs
dec
xchg
push
fnsave
movsl
xorl
fldl
push
cltd
jl
or
pop
jp
mov
mov
jmp
addl
aaa
inc
ret
or
jo
xchg
mov
fidivs
cmpsb
fldenv
push
pop
jbe
xor
fiadds
add
pop
mov
push
and
pop
xchg
std
cmp
cmpb
xor
sub
add
add
or
ret
push
mov
or
add
xlat
aas
mov
jbe
adc
out
jl
aas
push
pop
ret
xor
test
push
push
mov
les
addr16
or
inc
push
inc
and
inc
stc
xor
enter
loopne
sar
jae
insl
mov
in
and
test
test
call
cld
pop
inc
in
add
and
jmp
sbb
add
add
enter
adc
jne
xorl
sti
and
dec
cmpsb
mov
mov
imul
mov
mov
imul
rcl
jecxz
std
hlt
mov
fiadds
sub
xorl
sarb
jle
mov
out
mov
jg
or
add
inc
pop
insl
jmp
test
add
mov
push
xor
pop
jecxz
shll
std
add
lds
js
xor
add
dec
sbb
add
sarl
inc
mov
scas
adc
divl
add
add
rol
leave
out
out
das
loopne
dec
xchg
jne
mov
jg
sbb
xchg
push
xchg
mov
push
jge
jp
jno
mov
add
std
fstl
andl
jbe
test
dec
xchg
pop
out
test
jmp
xchg
je
add
lcall
mov
subl
scas
push
jnp
cld
cwtl
jae
clc
cwtl
or
push
out
enter
mov
rcll
jl
mov
add
add
jmp
and
xchg
ret
xchg
mov
pop
dec
mov
xor
pushl
test
shr
mov
in
dec
lea
mov
push
hlt
jne
mov
inc
push
repz
lret
cmp
mov
orl
movsb
orl
loope
push
mov
push
push
mov
add
or
push
jmp
pop
fistpl
lea
add
stos
inc
add
sbb
call
ss
add
out
incl
jne
adc
lods
or
sub
add
add
add
enter
mov
sti
dec
iret
out
push
lea
or
mov
jbe
ljmp
shr
add
test
add
rolb
jmp
insl
decb
pop
cli
dec
repnz
jbe
push
push
mov
dec
mov
rcrl
das
popf
shrl
ret
adc
sub
add
test
add
imul
lds
dec
out
aaa
push
ret
ljmp
jmp
jne
fldcw
stos
jmp
push
adc
arpl
push
cmp
jmp
ss
add
mov
fldcw
stos
jecxz
sbb
fcompl
jmp
out
mov
shl
add
clc
jle
pop
jle
add
add
pop
add
sbb
xor
jns
std
out
or
push
inc
cmp
std
das
jo
push
sbb
arpl
and
shll
xor
jg
or
or
je
or
jle
add
xor
addb
pop
cmc
psllq
and
out
outsb
std
push
int
icebp
les
inc
and
or
lea
xlat
not
subb
mov
std
cmp
add
call
jno
push
mov
jno
enter
cwtl
test
dec
dec
or
lret
pop
ret
jmp
mov
add
mov
or
xchg
pop
lock
or
push
jl
lret
inc
inc
ja
and
ds
lret
int
add
add
add
rorb
shrl
cmp
jmp
or
outsb
jno
sub
push
add
std
adc
mov
cmp
je
jb
jae
and
ljmp
imul
int
jne
add
imul
mov
jne
jns
pop
pop
sub
aas
and
imul
stos
and
ret
and
add
fisubs
rclb
jp
or
shll
ret
rcll
sarl
into
mov
scas
in
add
dec
cmp
fsubrp
and
ljmp
ds
and
push
adc
btr
push
addb
ret
out
icebp
push
mov
jecxz
cs
lret
jp
jae
ljmp
sahf
add
mov
add
out
iret
aas
in
push
mov
bound
jno
daa
add
gs
jns
add
adc
jae
xlat
fldcw
xchg
jg
pop
roll
adcl
mov
lods
adc
ds
out
mov
dec
out
jb
jmp
mov
xlat
fnstenv
cmp
mov
shlb
xchg
mov
add
clc
xor
mov
xchg
mov
xlat
fs
lahf
add
mov
push
in
inc
adc
stos
mov
mov
add
pop
popf
rolb
scas
mov
lret
es
adc
push
je
mov
fwait
mov
aas
hlt
cmp
sbbl
or
cld
pop
mov
add
fmuls
call
movsb
dec
add
sbb
shlb
mov
sub
mov
cmc
call
xchg
test
push
push
les
jmp
pop
or
stos
iret
std
dec
in
and
int3
or
jmp
lret
in
xor
decl
mov
int3
insb
shlb
and
dec
iret
mov
movl
add
add
lea
add
call
fs
je
dec
outsb
xor
mov
vxorps
cmp
dec
cmp
sbb
lcall
aam
aad
out
push
jecxz
add
jmp
dec
je
out
xor
cwtl
das
cmp
shll
addr16
sar
sbb
aad
out
pop
jmp
add
jecxz
jo
cmc
out
xor
add
add
lock
call
cmp
sbb
mov
int
mov
mul
fadds
mov
out
pop
lods
lret
mov
setl
loop
mul
aad
mov
jmp
rcll
lcall
jg
call
dec
pop
out
xchg
mov
ljmp
add
movlps
shl
rcll
push
lret
inc
dec
mov
inc
pop
int3
insb
cmp
mov
imul
call
popa
xchg
mov
aad
mov
dec
movsb
pop
push
out
xor
imul
xchg
xchg
cli
push
or
inc
jmp
mov
nop
pop
sub
stos
mov
std
push
jle
call
push
adc
mov
shll
mov
dec
dec
shl
inc
jmp
mov
xor
xchg
in
jmp
inc
call
mov
mov
add
cld
push
or
xorl
int3
push
add
mov
mov
arpl
push
add
xchg
call
test
add
add
jmp
add
adc
dec
push
das
adc
sub
push
fildl
out
jge
incb
dec
xchg
or
add
add
in
pop
ds
add
xchg
testb
push
push
xor
add
int3
xchg
or
add
mov
push
sbb
mov
mov
add
pop
cmp
loopne
xchg
mov
mov
adc
add
xchg
ljmp
test
sub
cmp
push
push
pop
pop
pop
test
or
loopne
ss
mov
xchg
or
dec
add
mov
jne
mov
mov
dec
jnp
xchg
and
or
cmp
pop
jne
or
test
dec
leave
push
add
or
pushl
xor
push
add
mov
out
das
mov
out
push
mov
xor
dec
testl
mov
add
dec
out
push
lret
xor
sbb
mov
dec
out
test
int
mov
add
add
lcall
push
imul
add
dec
jae
mov
stos
add
mov
cmpsb
mov
dec
and
lods
sbb
insb
stc
psubsw
mov
pop
mov
or
fists
bound
sbb
fldcw
mov
leave
std
sbb
jle
data16
shr
add
add
cwtl
xor
sbb
test
jp
std
andb
pusha
leave
mov
icebp
push
jae
loope
jae
mov
test
or
cltd
jns
adc
test
movsb
outsb
leave
push
lcall
add
mov
mov
std
into
rolw
jo
add
pushf
imul
into
std
mov
cld
lcall
das
dec
incl
add
add
das
mov
mov
sarb
xlat
sar
mov
push
ljmp
dec
cmovo
inc
clc
data16
je
testb
push
lahf
rcl
lahf
xchg
sbb
shrl
lea
cld
inc
mov
test
push
add
mov
fisttps
mov
add
jne
incl
add
add
mov
mov
mov
mov
pop
out
add
pop
mov
rcrb
mov
call
loop
xchg
add
jg
push
ds
test
sub
mov
push
subl
jl
lds
adcb
mov
fwait
mov
sub
call
xor
push
xchg
cmp
dec
mov
or
ret
test
testl
daa
add
ja
movb
out
mov
dec
out
iret
fwait
dec
mov
cmp
cld
pop
das
xorb
jp
iret
add
dec
out
add
cmpsl
cmp
dec
xor
push
or
xorb
add
push
stos
add
mov
jb
mov
or
arpl
or
pop
dec
insb
lcall
loope
jmp
jbe
sub
in
jmp
jo
cmp
in
ffree
std
gs
xchg
test
or
std
sahf
jp
call
gs
xchg
test
in
vmovd
add
add
movaps
cmp
pusha
mov
push
inc
jmp
mov
shl
mov
add
test
lret
xor
and
add
sti
mov
add
xor
push
sub
inc
pushf
mov
mov
call
dec
aad
call
fldenv
call
push
push
test
push
push
add
nop
call
jmp
and
cmp
xchg
xchg
shrb
mov
in
lahf
data16
cmpl
push
lea
cmpsb
pusha
add
call
lea
jb
imul
add
in
mov
add
arpl
add
pop
xor
sbb
add
cmp
ficomps
and
add
cmc
jg
clc
cmp
or
push
add
sbb
jns
cmc
mov
out
cmp
icebp
adc
mov
mov
mov
jne
movsb
push
adc
jmp
mov
repz
in
js
add
dec
sub
stos
add
push
fsubs
lods
dec
add
mov
out
popa
lahf
jb
scas
adc
mov
add
mov
mov
jg
fcoml
imul
add
sbb
mov
das
mov
sbb
sarb
les
repz
push
jae
sub
jmp
add
lcall
xor
sbb
ret
xor
sub
roll
add
movsb
dec
out
cmc
xor
popl
bound
mov
inc
aaa
test
sbb
mov
fnstenv
mov
xor
dec
lret
add
mov
add
fs
icebp
pop
std
pop
test
ret
lret
jmp
mov
jae
sub
add
add
jl
sti
jbe
push
inc
mov
mov
ret
addr16
dec
clc
je
xchg
dec
mov
jno
add
ret
xor
roll
js
inc
lcall
clc
popa
lret
sbb
and
jne
pop
inc
pushl
mov
sub
call
sbb
add
add
add
mov
push
mov
jne
repz
sub
test
add
cltd
pop
xor
push
scas
pop
je
stos
pop
adc
pop
into
std
call
cmpsl
add
pop
in
add
dec
in
inc
mov
out
iret
cmpsl
clc
add
fstp
inc
testb
test
mov
xchg
add
pop
or
inc
pop
loopne
add
testb
jne
decl
mov
call
les
push
fildl
mov
adc
std
bound
mov
ret
shll
dec
or
sub
aam
cmp
push
adc
in
pushl
nop
daa
fldcw
rcll
xchg
mov
add
ds
sti
pop
xchg
push
or
jae
and
lea
add
adc
add
shlb
adc
add
cli
mov
mov
cmp
mov
out
fstl
aam
xor
insb
enter
jge
xor
ficoml
std
fildl
add
add
sbb
jp
add
adc
push
mov
xor
xlat
call
addr16
cmp
or
push
cs
ss
jle
enter
jae
outsb
pusha
hlt
push
addr16
pusha
lea
xor
sbb
test
mov
mov
call
add
popl
inc
jno
inc
or
jb
pop
xchg
sti
aad
call
jb
std
add
dec
mov
cmp
cmp
popa
in
insl
pusha
incb
popa
mov
andl
xor
decl
adc
fcoml
enter
push
mov
adc
popf
outsl
sbb
push
jmp
adc
cmp
leave
aam
add
adc
or
dec
sub
push
movl
jne
add
push
pop
pop
sub
xchg
add
iret
dec
xchg
push
mov
or
add
mov
test
add
xor
and
push
std
or
push
gs
outsb
repz
jl
out
test
add
push
jl
test
pop
add
stos
add
mov
add
and
add
push
inc
dec
addr16
cmp
std
adc
lock
sub
aam
pop
outsl
data16
dec
xor
fiaddl
dec
in
mov
mov
jmp
mov
cmpsl
out
sar
out
daa
addl
add
add
mov
sbbb
dec
dec
add
inc
adc
dec
repz
fdivs
es
pop
mov
jo
lret
into
xchg
xchg
push
out
cmp
pushl
mov
xchg
add
inc
jmp
push
pop
xchg
push
adc
pop
push
mov
je
incl
add
stc
mov
cltd
add
test
mov
std
aam
mov
or
sahf
rcrb
fxch
add
dec
or
push
mov
push
sahf
fsubrl
mov
lahf
jns
mov
or
adc
sar
call
pop
push
shl
mov
xor
ja
test
mov
lods
add
mov
add
mov
je
popa
out
decl
cmp
fcoms
ljmp
faddl
cmp
call
xlat
arpl
add
mov
out
adc
xor
iret
xchg
and
mov
call
imul
add
mov
mov
jg
roll
in
lcall
inc
int3
into
jno
inc
mov
mov
xlat
push
jno
add
lods
jp
lods
sub
push
mov
push
loopne
add
pop
dec
decb
loopne
aas
mov
cmp
push
mov
sbb
mov
push
xor
in
addb
add
mov
rcl
ds
sbb
idiv
cmpsb
add
aas
cwtl
or
inc
lods
pop
jge
cmpsb
add
icebp
push
mov
lods
pop
jl
add
orb
insb
shll
and
jp
fcoml
lds
subb
inc
mov
mov
call
rorl
mov
add
push
scas
movsl
dec
xor
subl
daa
add
shll
adcl
cmp
rorb
dec
data16
jb
jp
dec
out
fildl
jle
pop
push
icebp
negb
mov
inc
mov
outsl
shrl
adc
mov
push
inc
fmulp
into
or
inc
add
push
push
in
mov
imul
std
cmpsb
out
lahf
mov
mov
incl
aad
rcll
clc
je
add
inc
jmp
mov
aaa
loope
fwait
mov
es
add
add
add
outsl
scas
xor
jnp
mov
sub
add
ficoml
outsb
pushw
mov
aam
mov
dec
lea
mov
ss
idiv
imul
cwtl
int3
push
jnp
pop
xchg
test
mov
notb
and
dec
decb
mov
add
mov
dec
jge
adc
mov
mov
push
cmc
push
xchg
in
adc
and
xchg
add
add
xor
pop
fbld
sbb
iret
and
fcompl
into
fstl
sbb
sub
jmp
mov
in
out
movsb
dec
ds
jnp
mov
and
jbe
cltd
mov
push
jp
add
mov
daa
lds
movsl
push
add
mov
jle
mov
add
dec
xor
push
xor
add
mov
add
jno
fisttpll
cwtl
icebp
int
xor
pop
jbe
ror
mov
mov
jbe
dec
adc
xlat
sar
js
cmc
ret
jecxz
out
test
or
inc
les
push
bound
popf
dec
xchg
imul
out
add
push
pushl
xor
testl
pop
pop
sub
rclb
xor
lret
add
mov
cmp
int
out
mov
add
nop
out
xor
or
add
fisubs
dec
add
outsl
nop
push
cmpsl
iret
push
pop
clc
add
mov
mov
in
fldl
cmpsb
inc
or
insb
mov
inc
jmp
xchg
sub
mov
inc
adc
add
mov
add
pop
inc
push
insb
mov
hlt
dec
lahf
inc
jmp
add
adc
mov
mov
in
mov
mov
mov
outsl
adc
add
jp
cld
mov
add
testb
call
insl
inc
call
and
sbb
test
add
xor
add
in
sub
test
std
dec
out
xor
lahf
mov
jae
std
adc
iret
inc
add
push
stc
lret
pop
mov
add
xor
inc
add
sub
add
je
mov
jo
icebp
test
add
cmp
add
mov
inc
fidivs
inc
xor
jle
mov
add
ljmp
ljmp
rcr
fs
call
cmp
call
cmp
cmpsl
hlt
test
add
sub
in
sub
cmp
inc
mov
jne
xchg
mov
add
cmpsl
add
shrl
int
lahf
imul
xchg
jb
rcrb
mov
dec
nop
mov
inc
mov
add
pop
xchg
or
leave
and
lock
fwait
fwait
pop
icebp
rorb
sub
mov
fwait
notl
add
add
daa
add
push
add
mov
pop
dec
cmp
jmp
fnstenv
call
mov
shrl
ret
mov
pop
outsl
dec
add
test
call
jbe
mov
add
in
jo
add
jge
mov
xorb
cs
add
dec
mov
cmc
cmpsb
dec
add
push
sbb
mov
leave
mov
fwait
pop
cli
jbe
mov
arpl
cld
aaa
addr16
je
prefetch
int3
std
je
pop
decb
sub
je
or
pop
adc
add
add
out
cmp
notl
push
jnp
pop
push
or
push
mov
add
inc
add
or
xchg
mov
push
adc
scas
sar
pop
mov
jnp
pop
popf
xchg
call
notb
xchg
mov
adc
fiadds
jnp
pop
dec
xchg
jmp
call
dec
xorb
mov
and
mov
cmpsb
cmp
addl
add
out
lods
push
divb
mov
aas
adc
cmpsl
sar
loope
ret
mov
stos
inc
inc
dec
ror
cmp
jne
dec
push
test
add
out
test
push
push
sbb
idivb
sbb
cmp
btc
push
pop
add
bound
jbe
pop
in
inc
out
add
mov
add
mov
adc
in
out
test
mov
push
and
insb
mov
out
add
mov
mov
mov
clc
ds
inc
cmp
notb
mov
xchg
ret
xor
rclb
stos
dec
and
mov
loopne
dec
ja
out
xchg
loopne
lcall
add
adc
add
and
jge
into
sub
lods
add
sarb
jmp
jbe
std
adc
mov
xchg
ljmp
int3
ror
inc
jmp
imul
call
dec
add
inc
int3
inc
jmp
mov
inc
mov
sbb
insb
andl
ret
addl
data16
jmp
mov
add
mov
sbb
jbe
xor
imul
jne
sbb
lods
push
add
lock
add
dec
mov
fistpll
inc
jo
inc
dec
nop
push
push
cltd
mov
std
push
inc
xchg
sub
inc
add
push
call
cwtl
push
jno
mov
fiadds
add
add
nop
add
fldcw
inc
int3
xchg
push
stc
cmp
inc
fdiv
call
out
call
inc
xlat
add
add
decl
mov
lea
push
mov
jbe
mov
nop
sbb
call
mov
sbb
loopne
cmp
push
ljmp
jns
mov
dec
cli
addb
imul
add
mov
push
cs
add
xor
mov
xchg
cmpb
add
pop
cmp
xchg
call
inc
dec
lret
mov
or
cs
add
mov
jl
addr16
mov
push
insb
cmpsb
clc
add
pop
mov
mov
mov
call
add
push
push
cmp
out
mov
test
stos
mov
xor
cmp
fwait
cmp
mov
cmc
mov
bound
cmp
jnp
or
push
add
roll
mov
push
pop
stos
add
test
pop
popl
inc
fcmovb
and
cltd
pop
jnp
and
mov
sbb
add
test
add
xchg
xchg
movsl
std
out
push
xor
insb
cmpsl
and
nop
popl
jmp
mov
inc
xor
mov
cmpsb
out
test
pop
loope
and
pop
hlt
int3
push
push
jmp
test
arpl
add
gs
and
std
push
pusha
mov
test
mov
inc
mov
fimuls
xor
nop
add
paddsw
das
mov
pop
add
add
mov
add
add
decb
out
xor
lahf
sub
add
sbb
sar
dec
movsl
call
and
sub
adc
xchg
add
add
add
mov
shrb
and
pop
jp
call
mov
add
decb
test
test
add
xchg
dec
push
test
xchg
add
mov
mov
mov
lea
and
mov
loopne
mov
add
mov
add
repz
add
loopne
ds
add
dec
fidivs
mov
mov
xor
sbb
and
sub
and
fsubs
jno
hlt
xor
mov
cld
repnz
mov
cmp
fstl
add
jns
add
jp
mov
add
mov
out
ret
scas
pushf
sbb
mov
or
mov
mov
bound
push
add
filds
add
mov
cmp
cmp
sub
cmp
iret
xor
ss
jmp
mov
and
cmpsb
bound
xchg
pop
sub
scas
jle
iret
adc
daa
test
mov
mov
outsl
cmp
movsl
bound
cmp
cmp
sbb
shrl
push
or
pusha
jl
adc
push
add
scas
std
push
push
nop
jmp
push
mov
inc
sub
push
jb
adc
loope
mov
push
into
add
call
gs
sbb
fs
jo
sar
std
cmpsb
ds
or
xor
dec
jl
mov
push
fs
jo
add
add
add
jnp
jmp
das
lods
pop
sub
ja
push
sub
or
stc
cwtl
call
lea
dec
push
js
std
ret
pop
mov
sbb
add
push
ljmp
mov
mov
stos
pop
je
cmpl
mov
in
jp
mov
mov
push
mov
push
push
jmp
inc
cld
fdiv
lds
or
call
mov
inc
cld
mov
push
push
dec
in
jecxz
add
mov
lret
out
dec
ss
jne,pt
pop
in
js
mov
cmp
nopl
add
jne
clc
sti
xchg
xchg
sub
cmp
or
mov
or
xor
pushl
stc
lods
add
add
add
or
jge
add
pop
ret
xor
pop
das
add
mov
dec
aad
mov
push
add
andb
pushl
cmc
or
push
dec
adc
lret
scas
mov
daa
sub
test
scas
mov
or
add
cs
mov
cld
enter
jbe
mov
add
nop
movsl
dec
je
out
das
mov
sub
sbb
xchg
mov
mov
push
jl
push
cmc
adc
pop
ljmp
std
pushf
adc
pop
mov
out
adc
ljmp
cmp
add
cmp
mov
ret
in
pop
fnstenv
stc
push
pop
inc
mov
mov
cld
cltd
fisubrs
es
testl
loope
in
push
leave
adc
push
xchg
mov
icebp
ss
call
gs
sbb
pop
mov
pop
idiv
out
shlb
xchg
inc
hlt
ror
sbb
shll
add
int3
mov
add
mov
outsl
mov
jg
pop
je
imul
add
pusha
dec
jno
jnp
in
mov
cmp
cli
jmp
xchg
or
in
mov
out
call
push
dec
ljmp
xchg
sbb
add
mov
test
ret
icebp
jne
mov
out
call
leave
out
call
cs
pop
pop
ja
mov
in
mov
rcll
pop
jg
std
test
sbb
xor
ds
inc
loop
mov
popa
cmpb
lret
or
out
inc
pop
lret
roll
jg
in
das
cmp
jne
pop
sub
add
adc
mov
inc
jae
sub
scas
mov
inc
inc
bound
das
aas
insb
das
pop
jmp
cmp
mov
sub
jae
sub
loope
and
jg
push
lahf
mov
adc
cmpsl
sbb
andl
add
dec
daa
fstpl
aas
pop
rcrl
cmc
popf
mov
cli
inc
xchg
lret
mov
xchg
aas
stos
mov
das
repnz
pusha
add
nopl
jl
adc
mov
int3
xchg
push
lock
fldl
leave
fwait
cmp
das
inc
out
jp
or
test
xchg
dec
shll
pop
mov
xchg
add
xor
and
mov
push
push
cmp
pusha
imul
movsb
and
mov
or
insb
mov
add
jns
and
jmp
imul
adc
mov
push
adc
jmp
jo
popl
mov
movsl
popf
pop
xchg
jns
ret
inc
mov
addb
jl
push
inc
aas
popf
std
jmp
jae
mov
cltd
gs
xchg
stc
mov
ds
sub
shrb
loop
mov
fwait
mov
addr16
ljmp
insb
xor
repz
fcoms
add
je
push
mov
fistpl
je
mov
pop
mov
push
hlt
jne
sahf
mov
lcall
test
mov
loop
add
add
xchg
mov
sti
imul
cmp
sub
add
push
fs
or
xchg
mov
add
inc
comiss
fimuls
inc
loope
in
xor
aam
cmc
cmp
or
lods
xor
pop
sub
jp
sahf
mov
cs
out
lret
enter
push
ds
aam
jecxz
enter
cmpsb
out
nop
cs
ds
mov
loope
jp
popa
psubsb
xchg
mov
xor
mov
mov
ljmp
arpl
sub
in
int
add
mov
addl
repz
mov
ljmp
and
lcall
xchg
inc
jecxz
and
sbb
mov
jno
lahf
xchg
inc
lcall
enter
inc
mov
add
and
leave
enter
idivl
xchg
xchg
mov
rcll
cwtl
ds
cltd
in
aaa
nop
add
fs
lret
or
xor
add
add
xchg
xor
repz
jnp
into
jge
hlt
ret
push
push
icebp
mov
or
lods
mov
dec
cld
inc
int
inc
push
std
pop
shrb
dec
cld
es
call
sub
cmp
and
loopne
xor
and
jae
xchg
ret
add
cmp
je
mov
xor
add
add
inc
pop
xchg
mov
push
add
xchg
fisttpl
test
add
dec
sbb
mov
push
mov
cwtl
add
daa
push
pop
jae
sbb
inc
inc
fisttpl
test
fisttps
inc
push
fisttpl
xor
push
andb
mov
push
jge
mov
push
xor
jp
add
fldl
jp
lods
adc
cmpsb
jle
xor
add
cmp
pop
ss
jne
sub
add
into
pusha
fistpll
leave
jl
cmp
lods
and
jbe
adc
rol
aaa
ljmp
imul
call
xor
mov
cmpsl
out
xor
mov
mov
and
mov
cmc
add
lods
jle
mov
mov
cli
jmp
repz
js
filds
jp
jecxz
mov
mov
jle
adc
inc
pop
xor
cmp
aad
cmp
fdivrs
xchg
mov
inc
cmovs
rcrb
jge
push
jne
jb
mov
inc
add
mov
fdiv
add
cld
mov
sbb
jmp
out
sub
inc
ffree
fisubl
add
inc
jmp
testb
clc
mov
xchg
inc
test
ds
mov
out
jae
add
add
xor
js
xor
ljmp
pop
jo
cmp
lock
add
mov
mov
into
jns
or
jl
add
repnz
push
mov
or
adc
insb
push
add
adc
jmp
mov
sti
mov
std
jno
popl
ljmp
and
add
call
test
in
mov
fildl
push
std
mov
stc
decb
and
and
jns
loopne
add
add
mov
xor
stc
std
mov
int3
add
sbb
mov
dec
mov
sbb
pop
mov
pop
ret
mov
ret
xor
sbb
fistps
jne
rolb
jb
cmp
or
addr16
add
sub
xlat
out
enter
or
and
add
add
jle
movsl
test
jl
lds
cld
mov
scas
jl
mov
in
pop
jbe
jns
movsl
jns
push
cmp
mov
rcr
pusha
add
fdivr
add
mov
lds
fs
push
aad
ror
ja
or
cmpsl
lods
push
ds
lods
sti
cmp
shl
push
std
jno
xchg
inc
fisubrl
jg
out
or
es
pop
xchg
push
es
xchg
push
es
xchg
negb
imul
shl
cmp
jns
sub
jl
xchg
out
loopne
popf
rcrl
les
adc
and
adc
and
repz
push
test
xchg
out
mov
mov
mov
xorl
sbb
xchg
stos
outsb
pop
nop
xchg
inc
push
bound
scas
sbb
call
mov
fwait
subl
aas
mov
bound
and
xchg
std
jmp
xchg
xchg
std
push
xchg
je
aaa
cmpsl
mov
mov
dec
push
xchg
pop
ud2
push
and
xchg
std
or
data16
mov
daa
jno
popl
pop
loop
inc
jmp
xchg
pop
cmp
sbb
inc
add
rorl
int3
lea
xchg
sbb
hlt
or
add
push
jbe
call
test
fwait
adcl
mov
incl
add
add
incb
pop
lea
push
je
hlt
arpl
sbb
mov
in
incb
mov
pop
stc
dec
insl
dec
call
xchg
dec
push
test
mov
add
add
dec
loop
fsts
jne
xchg
shrb
add
sbb
shll
push
push
lea
add
lcall
out
fs
out
mov
adc
lock
mov
scas
in
nop
jl
jle
leave
push
cltd
mov
rdtsc
lock
mov
mov
mov
nop
inc
gs
movb
add
or
imul
out
cmp
nop
and
incl
mov
out
xor
jl
sarl
mov
adc
add
jecxz
iret
out
push
enter
inc
and
lea
and
movsb
lds
paddsb
test
mov
rcl
jmp
add
nop
cmp
hlt
and
pop
mov
mov
and
sbb
mov
adc
lcall
sbb
mov
fcoms
cmpsb
sub
or
xor
fcoml
cli
out
cmp
pop
movd
jmp
in
add
mov
push
ret
sbbb
dec
pop
pop
push
xor
testl
cld
push
xchg
fsubrp
jecxz
mov
fs
popf
test
lods
in
imul
add
add
mov
jmp
lret
cmp
mov
std
mov
scas
cmp
lahf
test
cmpsb
jo
mov
movsb
gs
pop
sar
mov
push
std
mov
xchg
add
sti
sbb
pushf
adc
stc
ljmp
clc
dec
addb
shll
add
jns
cmovo
mov
sbb
jne
lods
je
push
enter
cltd
aaa
jge
and
mov
mov
je
mov
imull
mov
jmp
push
mov
xchg
stc
xor
ss
ljmp
push
and
lahf
out
mov
mov
lds
add
mov
add
insb
sar
cmpl
jbe
mov
mov
cmc
or
xchg
ja
scas
idiv
add
mov
mov
push
mov
jle,pt
dec
adc
sub
pop
ficomps
sbbl
adc
push
into
sub
push
push
imul
sub
mov
ss
je
dec
out
lea
add
add
out
imul
and
mov
scas
adc
mov
pop
xchg
mov
sub
mov
insb
mov
sub
mov
push
adc
ret
in
das
aaa
jl
mov
jecxz
cmp
lahf
sbb
stc
lods
sub
ja
mov
insl
inc
jmp
testb
cmpsl
hlt
mov
xchg
hlt
mov
hlt
mov
mov
mov
dec
xchg
imul
or
adc
les
hlt
mov
pop
adc
push
bound
mov
shll
clc
sbb
mov
fisttpl
std
aam
imul
aad
fiadds
pop
mov
mov
xchg
inc
xor
or
addr16
or
jl
aam
mov
pushf
lods
xor
sub
xor
xor
lahf
xchg
aaa
sbb
rorb
add
jle
sbb
rclb
add
adc
std
pop
pop
dec
enter
push
mov
psubsw
addr16
das
mov
fcmove
stos
addr16
mov
sahf
mov
mov
mov
cmp
push
dec
ds
cmp
xchg
hlt
or
mov
mov
mov
add
cmp
or
outsb
mov
jo
xchg
xchg
ljmp
add
cmpsb
scas
add
sub
dec
ja
mov
jg
ret
add
jbe
test
add
inc
cmp
dec
pop
ja
push
lea
lret
cmp
jmp
sub
arpl
icebp
jg
mov
dec
xchg
mov
ja
mov
jo
add
cmpsl
or
imul
add
cltd
imul
add
add
pop
scas
mov
push
sub
add
add
scas
andb
imul
out
pop
and
pushf
sbb
outsl
push
repnz
mov
loopne
inc
cli
fstpl
scas
ja
mov
fs
push
shrl
adcb
jmp
rclb
mov
inc
xor
push
sub
rclb
jmp
mov
add
xor
sbb
dec
hlt
out
insb
call
fcomps
push
insb
popl
jmp
mov
add
mov
inc
std
or
add
mov
subl
jle
sub
or
aad
clc
ss
cs
inc
xlat
dec
add
pushf
adc
cltd
mov
hlt
in
incl
add
add
xor
sbb
pop
mov
mov
mov
dec
rorb
test
in
imul
sarb
inc
call
xchg
mov
xchg
call
push
inc
in
mov
ret
add
popf
sbb
xor
pushl
xchg
inc
or
dec
roll
nop
adc
add
outsl
cltd
movb
incb
push
inc
mov
jp
dec
lods
daa
sub
mulb
inc
mov
push
aas
add
aas
sub
add
jb
sbb
mov
sbb
jmp
jae
icebp
idivl
pop
nop
or
cmp
mov
mov
add
add
push
add
sub
pop
mov
out
cmp
orb
adc
wrmsr
lods
push
mov
pop
ljmp
addb
cs
cli
xlat
push
loope
paddw
mov
sbbb
cld
mov
xchg
xchg
xchg
mov
xchg
pop
cmp
jecxz
lret
jp
push
add
test
add
adc
rsm
enter
mov
pop
ljmp
ds
sbb
sar
fldt
incb
jmp
or
dec
jnp
notl
inc
or
aas
dec
call
insl
idiv
or
jne
push
inc
les
cs
xor
add
into
inc
bound
add
add
xchg
stos
addl
xchg
aas
ja
aad
fimuls
ljmp
test
lock
sti
add
jmp
iret
adc
sbb
push
mov
rorb
inc
xchg
call
mov
mov
or
inc
jmp
incl
add
add
xadd
inc
jmp
adc
mov
js
or
fwait
je
adc
dec
lea
stos
push
lea
push
call
mov
mov
cmpsl
sub
mov
dec
lea
pop
dec
call
mov
push
jbe
add
ret
xor
fstpt
adc
push
mov
pop
aam
adc
mov
into
outsb
adc
movsl
add
aam
repnz
rorl
mov
icebp
pop
jmp
dec
shll
and
cmp
inc
pop
xor
aas
mov
aas
jl
test
inc
inc
enter
push
sub
fldl
and
imull
jae
test
out
mov
add
cmp
xor
in
push
and
xor
ret
lret
mov
addb
repnz
adc
mov
adc
pop
stc
xchg
bound
mov
add
mov
cld
cld
sbb
pusha
adc
dec
xchg
out
inc
divl
testl
or
xor
in
aaa
jns
adc
iret
out
push
xlat
jb
xchg
repnz
xor
lods
or
push
clc
push
cmp
fs
cmpsl
js
xor
js
outsb
add
pop
jl
inc
mov
roll
push
lea
adc
cs
add
into
adc
clc
es
cwtl
call
add
jo
cmpsl
call
xchg
es
mov
es
inc
jmp
idivb
bound
loope
or
decl
cld
push
and
cld
adc
dec
lea
leave
adc
or
ret
inc
test
es
enter
inc
adc
clc
sbb
add
add
add
push
adc
xchg
dec
xchg
xchg
mov
cli
inc
and
cld
inc
and
pop
mov
mov
push
call
roll
dec
sti
lea
dec
lcall
ret
adc
pop
mov
mov
call
add
aam
daa
mov
lds
xchg
icebp
movb
mov
mov
add
add
jp
cltd
pop
jp
xchg
pop
add
lods
call
adc
test
mov
fwait
daa
inc
pop
in
in
into
fwait
mov
data16
in
aam
stos
fimuls
mov
adc
dec
popa
adc
push
and
mov
dec
movsl
dec
inc
and
xor
pop
mov
ret
mov
push
int
or
add
add
jge
enter
jnp
sar
arpl
repnz
mov
mov
jb
mov
jg
in
mov
mov
out
divb
pop
movntq
call
cmp
jl
sbb
jmp
xchg
stos
pop
push
jbe
mov
stos
out
fildll
add
add
filds
call
sbb
jge
and
inc
or
or
into
or
fsubrp
sbb
jbe
imul
or
jb
mov
insb
or
add
xchg
pop
std
mov
cmp
ss
out
mov
shlb
add
add
dec
jp
add
movsb
jns
call
mov
sub
popa
std
es
xchg
std
xchg
push
mov
scas
pop
push
add
cmpsl
call
incl
push
call
fcoml
pop
pop
ja
in
dec
mov
push
xchg
scas
sub
inc
push
mov
mov
push
mov
jae
pop
xor
add
stc
push
mov
push
call
daa
lods
mov
adc
jne
pusha
mov
add
mov
sub
call
cli
jl
adc
fdivl
rolb
cwtl
inc
in
cmp
mov
out
fldt
push
jp
and
cmpl
sbb
dec
push
imul
add
add
push
adc
int
push
call
cld
inc
dec
cmp
sub
inc
lods
mov
repz
jns
xchg
ds
mov
or
jle
jge
call
mov
jecxz
add
sbb
add
push
nop
xchg
add
js
xchg
inc
add
outsl
out
lds
scas
xchg
sub
testl
clc
mov
lahf
add
bound
jmp
dec
cld
mov
out
pop
scas
or
pop
insb
das
mov
js
mov
lds
pop
or
mov
pop
mov
call
or
add
popf
mov
add
add
push
std
pusha
je
call
jb
nop
std
test
inc
test
test
mov
xlat
push
push
jns
gs
std
push
push
add
in
test
out
mov
cmp
or
or
or
add
mov
mov
xchg
sbb
mov
mov
in
mov
inc
icebp
or
or
push
incl
pusha
dec
out
mov
sbb
std
fmull
mov
add
mov
inc
clc
jne
iret
rclb
call
sub
pop
ret
push
mov
or
mov
xchg
mov
push
mov
test
pop
or
dec
or
faddl
jl
je
or
int3
xchg
or
por
push
daa
rorl
test
mov
xchg
sbb
adc
mov
int
sarb
pop
sbb
jne
in
jge
sbb
fildll
aaa
fdivl
cmpsl
jne
int
sbb
mov
sbb
mov
or
ret
fisttpl
pop
jo
aas
shll
inc
jmp
xor
mov
jb
stos
enter
push
push
icebp
mov
mov
shll
jae
push
inc
jg
addr16
nop
ffree
adcb
out
xchg
xchg
aaa
or
fs
loope
push
arpl
jl
mov
scas
or
inc
pop
jle
or
or
sbb
daa
test
and
test
aaa
clc
jmp
mov
jb
xchg
jns
stos
cmp
sti
je
cmpsl
jg
cmpsl
xchg
mov
lahf
pop
fists
out
or
repz
xchg
cmp
add
mov
push
push
add
in
jne
mov
stc
les
inc
mov
xor
pushf
fildll
dec
gs
cmp
roll
jmp
ret
jmp
mov
adc
mov
cmpl
add
aaa
repz
or
ljmp
call
insl
jbe
test
mov
add
das
adc
mov
adc
divl
sahf
mov
mov
or
subl
pop
idiv
lcall
std
adcb
jge
add
jne
xchg
mov
mov
add
stc
lcall
push
lahf
xor
xor
inc
hlt
mov
mov
mov
popa
repz
sbb
or
je
lods
mov
add
add
test
sti
bsr
push
aad
fdiv
inc
in
neg
mov
stc
xchg
test
mov
cmp
mov
hlt
push
lcall
je
adc
inc
mov
add
cmp
add
clc
test
dec
push
add
xor
ja
jg
add
add
jecxz
pop
sbb
psubq
mov
sbb
js
inc
mov
add
jbe
jmp
mov
pusha
fs
mov
movsb
add
fisttpll
ret
loopne
add
sti
out
sbb
jle
aas
js
xchg
or
mov
push
bound
stos
add
xchg
jb
int
outsl
add
sub
adc
push
out
jg
out
ds
addb
out
mov
jo
push
mov
fildl
push
out
fs
pusha
sbb
stc
dec
jle
add
xor
cmp
lods
cmc
add
mov
cmp
cmp
add
mov
leave
je
verw
mov
push
movsl
mov
test
mov
mov
popl
fs
adc
xor
add
mov
adc
loopne
rolb
inc
std
es
in
jb
adcl
sar
cmp
lret
mov
inc
add
mov
xor
sub
and
mov
pop
xchg
mov
dec
xchg
jb
add
push
js
pop
dec
sub
nop
pop
sti
lcall
or
fdiv
mov
imul
mov
sbb
xchg
pop
addb
xchg
mov
mov
hlt
jne
ret
call
mov
arpl
in
aad
jo
sbb
inc
pusha
push
dec
in
movsl
shll
jg
jo
push
inc
in
lret
add
adcl
xchg
sarl
leave
arpl
hlt
mov
les
std
mov
mov
mov
and
int
mov
mov
call
cs
push
stc
les
in
flds
cli
aas
add
jne
scas
shll
mov
arpl
inc
xchg
call
mov
inc
add
dec
test
xor
inc
aaa
movsl
sub
cmp
cmp
xchg
inc
add
or
xchg
lea
jo
insl
sbb
sti
into
dec
add
sarl
popf
push
ret
cmp
pop
pusha
jae
sbb
popf
sahf
mov
stos
ja
jmp
js
out
nop
insl
unpcklps
out
test
sbb
in
lods
div
loope
push
push
adc
iret
xchg
pop
insl
add
nop
test
adc
test
iret
out
test
insb
jl
adc
add
fwait
pop
pop
push
shll
push
xor
push
jo
mov
js
hlt
jg
sub
fs
fcoml
addb
lds
sahf
int3
imul
mov
fwait
addl
testb
push
push
cli
fcoml
std
loop
push
cmc
jo
add
jbe
add
mov
add
adc
add
or
adc
cltd
jle
add
adc
pop
decl
jns
add
dec
jo
xlat
inc
mov
iret
add
out
xchg
xchg
push
add
lahf
lds
add
dec
je
daa
aad
cmp
sub
inc
push
pop
cmc
push
inc
mov
lods
outsb
iret
add
xchg
mov
push
jmp
lods
adc
xchg
cmpsb
fimuls
push
pop
push
incl
mov
mov
sbb
xchg
fnsave
add
add
cmc
lds
mov
je
add
adc
inc
add
cmc
cld
std
pusha
or
in
std
fisubrl
std
test
fildl
scas
pop
jmp
mov
add
mov
aas
pop
push
mov
mov
push
cs
in
div
test
int
push
popf
arpl
lret
or
pop
js
add
aad
inc
cld
les
mov
loopne
mov
out
jle
fimuls
cmp
out
push
or
adc
or
mov
neg
je
ds
xor
inc
mov
cwtl
ljmp
or
imul
add
mov
sub
jbe
add
add
imul
fucom
stc
mov
jg
jbe
adc
cld
out
aas
les
inc
call
cs
add
xor
or
daa
jnp
push
das
aam
cmc
xor
push
inc
int
ja
adc
imul
mov
std
cld
adc
jmp
fs
std
push
shrl
in
into
add
add
add
fwait
pop
pop
pop
push
jecxz
jp
inc
icebp
jecxz
aaa
cmp
repz
jmp
loope
jmp
sub
loop
mov
lods
push
lods
sti
testb
incl
rolb
pop
inc
adc
inc
push
test
test
test
repz
add
xchg
movsb
and
incl
add
add
sbb
test
xchg
test
mov
pop
add
add
sbb
dec
jmp
add
xchg
mov
mov
call
dec
xchg
inc
push
sbb
add
or
xchg
cmpb
add
in
push
decl
imul
sbb
rcll
jne
cli
je
inc
jmp
std
mov
mov
jne
shr
cli
or
mov
cmp
or
inc
and
cs
or
fistpll
sti
jns
add
out
inc
push
popf
fdivr
std
mov
orl
and
idiv
cmp
and
cmp
insl
sbb
and
xor
out
dec
lcall
mov
ljmp
lret
or
jge
sub
stos
or
ret
xorl
bound
mov
leave
mov
js
cmpsl
jmp
xor
add
insb
ja
mov
in
sbb
out
cmp
pop
xchg
call
fcmovnbe
clc
sub
add
add
add
stos
jb
cs
sbb
ja
cmpsl
mov
jb
in
jle
shrl
call
cmp
and
stc
ja
test
mov
call
pusha
repnz
adc
ljmp
popf
mov
xchg
mov
mov
lods
rolb
je
mulb
add
gs
std
into
inc
stos
insb
jo
stos
sbb
js
std
mov
jecxz
aad
loopne
loop
xchg
je
sub
and
inc
ret
and
lahf
xchg
cmp
mov
jae
jmp
xchg
cmp
mov
call
mov
test
jb
add
sarb
cmp
inc
adc
movsl
insb
add
add
add
in
mov
test
sbb
and
push
adc
or
mov
stc
sti
mov
dec
mov
push
pop
enter
fildll
pop
cmpsb
jns
mov
pop
call
cmp
insl
pop
or
fsts
movsb
mov
jae
arpl
xor
cmpl
insl
sub
add
ror
inc
add
xor
mov
js
js
ss
repz
add
mov
jo
jp
jne
pop
add
mov
std
mov
dec
insl
adc
inc
std
js
les
les
add
jl
adc
add
add
mov
inc
insb
mov
pop
imul
jno
xor
xor
dec
addr16
sahf
fsub
imul
rcrb
subl
cmpsb
adc
fs
aas
test
xor
js
lret
imul
lds
cwtl
popl
insl
dec
xor
rorl
add
fs
add
or
cld
loop
inc
jmp
jne
test
mov
add
xor
inc
jmp
iret
add
mov
xchg
vmovlps
mov
popl
lcall
fcomps
mov
xor
mov
jbe
std
fdivrl
addb
add
add
cmpsb
stc
fisubs
call
fidivrl
jmp
cli
xchg
test
jmp
add
add
addb
mov
add
mov
mov
adc
pushf
jecxz
hlt
addr16
je
add
mov
int3
pop
adc
add
or
push
decl
adc
pop
shlb
pop
hlt
cmpsb
mov
pop
mov
dec
pop
push
lds
push
mov
lock
push
decl
insb
adc
jecxz
in
testl
adc
push
jns
sti
inc
xlat
fdivrl
mov
jne
dec
xchg
add
jne
push
push
mov
call
push
mov
sbb
inc
mov
shll
hlt
or
dec
imul
std
loopne
add
add
add
dec
mov
in
js
dec
pop
adc
jae
jecxz
aam
and
call
cs
xchg
bnd
jge
clc
or
sbb
nop
repnz
insl
adc
add
mov
ja
jne
into
ja
pop
fdiv
iret
out
je
in
lock
add
xchg
cli
inc
mov
sub
loopne
xor
mov
out
mov
std
inc
mov
aam
ret
iret
out
sti
xchg
jb
je
add
nop
mov
andl
and
lret
jmp
imul
jge
xchg
or
in
add
dec
jnp
xor
call
fcoml
test
xor
add
fs
mov
mov
adc
call
mov
jge
mov
shrb
pop
in
cmp
icebp
cld
jmp
test
or
mov
add
adc
adc
iret
add
add
sub
xchg
xor
call
jmp
pop
pop
jno
ss
mov
icebp
ss
mov
and
add
arpl
cmp
movsb
jecxz
mov
pusha
je
aam
call
ret
push
mov
ret
and
or
int
push
fwait
and
lds
jmp
or
adc
sti
psrad
sti
imul
or
and
add
nop
lret
pusha
or
pop
and
add
lcall
btr
inc
or
pop
adc
out
add
dec
jg
or
jbe
xchg
or
mov
stc
add
adc
out
std
ljmp
or
stos
add
movsl
mov
ja
hlt
gs
clc
jmp
lods
adc
jbe
add
imulb
jb
push
sbb
add
cmp
rcrl
adc
add
pop
pop
sub
inc
movsl
gs
out
adc
or
mov
inc
clc
into
xor
out
add
out
cmp
push
movsl
mov
mov
jl
addr16
lds
xor
cmp
lret
sub
fidivrs
add
add
out
cmp
out
jp
cmp
aas
mov
sbb
cmp
lahf
sub
insl
push
out
imul
add
jle
out
ja
xchg
mov
call
hlt
jl
rep
popl
fbstp
fdivl
jns
arpl
bound
fiadds
clc
xchg
pop
stc
xchg
mov
shrb
inc
ret
add
pop
jg
sti
mov
adc
dec
lock
jnp
aas
lock
outsl
add
cwtl
jnp
sbb
arpl
mov
jnp
mov
hlt
das
adc
and
jnp
std
call
cltd
test
push
jns
mov
sub
sub
stos
mov
pop
cmp
mov
jno
dec
insb
aaa
push
mov
test
or
sbb
fimull
sub
push
adc
cld
push
adc
push
or
jecxz
fadds
imul
mov
popf
inc
mov
imul
cwtl
pop
lds
insb
gs
pop
movl
lea
ret
add
out
mov
test
jge
add
add
xchg
clc
add
mov
loope
iret
in
aaa
clc
push
cmp
adc
sti
loopne
mov
pop
lods
gs
mov
lcall
jo
add
aad
aaa
hlt
sahf
xor
jl
push
adc
jo
cli
mov
inc
ljmp
push
aas
adc
in
incb
add
add
loop
fsubrs
sahf
dec
ja
add
jne
lock
cs
cmp
ds
push
loop
jo
inc
or
lds
cmp
shll
jl
pop
pusha
push
mov
xchg
out
pushf
inc
mov
push
sub
xlat
jle
dec
pusha
push
loope
pop
cli
aas
add
add
aas
ret
int3
mov
lds
sub
fcoml
add
testb
xchg
jo
pop
or
rcrb
fdivrl
aam
push
pop
faddl
jge
loop
orl
and
mov
pop
add
push
mov
sbb
out
mov
jae
mov
add
ret
movsb
or
pop
movsb
cli
push
ret
lods
ficoml
and
xorl
mov
or
and
jae
popf
shl
ret
jnp
mov
add
popa
sarl
and
loopne
cmpsb
ret
outsl
mov
push
dec
mov
push
jnp
mov
inc
add
jmp
dec
inc
aam
aam
in
xchg
loopne
inc
roll
mov
jmp
roll
xchg
stc
insl
add
push
xchg
les
or
test
push
outsb
std
xchg
adc
add
push
push
add
int3
adc
or
add
je
dec
out
add
adc
push
sti
add
test
adc
popf
fcoms
sarb
or
adc
mov
add
mov
rorb
jns
outsl
fcompl
in
push
push
push
icebp
call
mov
jg
sarb
insl
scas
dec
sbb
aad
in
sbb
icebp
mov
icebp
or
and
mov
fcompl
xor
push
jle
mov
ss
adc
mov
adc
clc
sub
mov
add
add
inc
out
movsb
fcoml
lods
faddl
lock
mov
movsl
out
mov
jnp
mov
rol
xor
push
setae
add
push
xor
jbe
test
push
push
or
scas
adc
sbbb
push
out
outsb
xchg
adc
vhaddps
loop
test
popf
add
bound
jmp
add
add
idivl
arpl
push
out
loop
cmp
ds
call
hlt
fmul
shll
push
add
or
cld
fdivs
pop
data16
test
in
cld
bound
cwtl
dec
test
aad
fiadds
es
adc
inc
les
pop
mov
or
int3
hlt
les
add
add
in
nop
xchg
lods
ljmp
test
vphaddwd
inc
ret
jl
dec
call
pushf
fisubl
push
shrl
push
mov
cmpsl
lock
loop
rdpmc
pop
aaa
push
mov
dec
in
push
mov
push
in
jmp
add
add
add
dec
add
rcll
add
add
lret
dec
add
sbb
inc
fmull
or
and
dec
aam
pop
xor
inc
movsb
std
or
mov
dec
fldl
adc
or
xlat
dec
in
adc
dec
call
push
call
push
cwtl
xor
dec
inc
add
mov
mov
jge
jnp
fnsave
in
mov
add
fs
aaa
fsubrs
jnp
xchg
add
sbb
mov
pop
clc
bound
mov
add
enter
mov
sbb
aas
jle
mov
adc
and
pushl
lea
lea
xchg
mov
dec
adc
loop
repnz
jns
add
inc
sahf
and
or
add
std
lret
or
add
add
repz
lret
inc
int
test
push
jne
aam
sub
push
in
sub
cmp
sarl
call
mov
xor
mov
ljmp
nop
lods
dec
push
nop
jo
add
aad
push
cli
sahf
je
xor
cs
loop
push
in
cmp
mov
sbb
dec
xchg
out
int3
push
jo
add
ljmp
sbb
adc
ljmp
push
cmp
push
nop
xchg
sbb
les
push
fldcw
lret
xchg
ret
loop
call
fiadds
clc
jb
pushf
mov
adc
mov
arpl
mov
cmp
in
push
add
jo
add
add
arpl
cmp
adc
rclb
jnp
mov
push
out
lahf
xchg
mov
adcb
push
xor
add
xchg
xchg
adc
push
xchg
popw
aad
jne
xor
daa
flds
jg
mov
aam
sbb
lret
out
out
push
rolb
pop
call
or
add
add
inc
fcompl
push
loopne
cltd
or
mov
nop
test
in
data16
aam
je
adc
add
mov
push
sbb
sbb
push
add
push
lret
mov
orl
test
or
and
data16
mov
xorl
inc
fdivrl
mov
ret
inc
jp
mov
mov
or
add
ret
or
dec
inc
sar
push
fnsave
cmpsb
fnsave
fisubs
sub
add
cmp
cmp
arpl
std
or
mov
xchg
jae
mov
mov
mov
add
lret
jbe
pop
dec
fdivs
jne
rorb
dec
mov
sar
repz
adc
add
sub
xor
fwait
repz
orl
fidivrl
lock
push
and
xor
scas
rep
aam
push
xor
ficomps
mov
mov
movsl
adc
push
jae
adc
jg
inc
in
jo
and
in
mov
add
add
lcall
das
xlat
or
xor
stc
xor
cld
shr
pushf
mov
popl
jb
dec
mov
xlat
fsubs
cwtl
cmp
fwait
test
mov
add
inc
mov
jo
inc
shll
aas
cmp
push
cmp
or
mov
mov
add
cmp
or
icebp
mov
xchg
cmp
push
jo
aas
xchg
add
xchg
icebp
popa
jg
fs
jle
pop
jmp
out
pop
mov
add
adc
stos
lea
mov
clc
xchg
sbb
neg
cld
sub
int3
inc
mov
aas
xchg
js
cld
pop
mov
sub
adc
fadds
add
add
jmp
mov
aas
test
cmp
mov
or
dec
add
mov
sbb
push
cld
push
adc
das
add
out
mov
or
add
mov
mov
mov
cld
fmuls
out
scas
insl
xor
mov
dec
stc
sub
jb
mov
rcr
cmp
mov
add
add
cmp
rclb
add
dec
xor
cmp
call
pop
popa
cmp
das
call
test
loopne
call
sbb
test
push
clc
cmp
mov
jb
lods
mov
loope
test
jle
lret
loope
fcmovbe
fidivl
call
fildl
add
add
lods
xlat
sub
negl
dec
out
aaa
dec
push
fildl
or
mov
int3
rorl
cmp
in
mov
aad
mov
ljmp
mov
mov
mov
mov
xchg
mov
lahf
fnstsw
adcl
seto
and
add
add
nop
xchg
shr
adc
xchg
mov
popl
adc
push
dec
xor
xchg
mov
jecxz
loop
xchg
mov
popl
ret
inc
sbb
cli
mov
hlt
pusha
std
inc
cmp
or
sbb
mov
sar
into
cli
inc
or
xor
xchg
mov
pop
inc
jae
cmp
or
push
cmp
sahf
sub
clc
out
shl
push
add
iret
out
add
out
add
jbe
fmuls
adc
inc
mov
xchg
push
add
lds
incb
xor
jne
adc
mov
or
jne
inc
loopne
cmpb
jno
loop
lldt
pop
jno
jnp
in
fcos
jle
nop
or
aam
call
inc
rcrb
in
xchg
jbe
adc
fsub
int
jmp
xor
inc
imul
sbb
stc
inc
sub
ret
shll
mov
mov
hlt
shl
xchg
ret
mov
cmp
mov
mov
incl
add
add
mov
add
mov
shlb
mov
std
mov
cmp
ljmp
cmp
imul
or
test
mov
stc
popl
add
xchg
add
lods
xchg
xlat
mov
mov
mov
cmpsb
dec
push
sbb
inc
sbb
nop
aaa
xor
inc
out
jle
cs
jmp
inc
xchg
sarl
dec
mov
lods
pop
lods
aad
lret
inc
aas
not
cmp
xor
xchg
mov
xlat
es
insb
pop
mov
mov
add
push
and
xor
add
mov
inc
andl
adc
inc
mov
mov
and
inc
pop
bound
stos
mov
sbb
scas
into
adc
mov
add
mov
push
jb
fwait
add
fwait
jbe
fisttps
je
jg
jb
cmp
sbb
inc
or
stos
scas
xchg
mov
nop
fdivs
das
int3
sbb
fwait
mov
notb
mov
mov
lahf
mov
aam
cmp
testb
sti
pop
rcll
cmp
loopne
mov
sbb
test
jb
cmp
andb
outsl
or
int
lret
xchg
mov
test
or
sub
pushl
xchg
pop
sahf
cmp
push
push
aaa
xchg
mov
inc
dec
jae
fisttpl
clc
data16
test
adc
pop
mov
pop
icebp
mov
cli
add
aaa
add
mov
out
pop
mov
pop
add
mov
cmp
rolb
shlb
ds
mov
dec
mov
pusha
jnp
loopne,pn
insl
aam
mov
dec
lock
sub
pop
lea
add
ss
sbbl
pushl
popa
mov
cmp
idiv
xchg
fwait
mov
jb
jns
push
call
jne
inc
adc
adc
pop
mov
lcall
sbb
rorb
mov
or
add
mov
cmp
nop
ds
lods
nop
ss
fninit
jecxz,pt
sarb
dec
pusha
pop
std
jge
movsl
mov
adc
inc
add
shr
addl
movsb
add
jno
in
add
mov
jns
idivb
cli
call
add
call
jo
dec
cmp
pop
push
add
je
adc
rcrb
jmp
loopne
add
xor
mull
sub
popl
jb
jns
out
aas
call
jnp
call
add
rcrb
jg
sub
mov
xchg
or
dec
js
xchg
mov
rolb
ret
xchg
dec
or
std
jne
mov
std
incl
add
add
add
or
out
sbb
dec
add
ret
mov
fwait
lock
out
mov
aaa
xor
inc
add
mov
jb
xchg
dec
or
cld
jne
gs
add
or
mov
dec
fld
add
xchg
add
nop
inc
cld
das
lahf
fiadds
pop
or
sbb
inc
mov
adc
mov
jmp
or
mov
iret
std
cmp
incl
cs
loopne
lock
ja
addr16
int3
jnp
push
aad
ret
jns
mov
jnp
inc
rol
xchg
jns
mov
xchg
rol
mov
mov
cmp
idiv
orb
add
insl
xor
cli
arpl
push
repnz
mov
aad
std
loop
xor
dec
fistpll
inc
outsl
scas
cmp
push
mov
ret
push
fs
push
popf
or
sub
out
pushf
ficomps
or
js
iret
jnp
pop
sbb
pop
lds
into
out
bound
imul
xor
cmp
dec
xor
cmpsl
pop
mov
shlb
jl
sub
add
jecxz
pop
dec
inc
lahf
out
cmp
xchg
ljmp
cmp
fs
rolb
mov
jmp
pusha
insb
mov
xor
mov
or
sbb
divb
in
fstpl
push
jno
dec
insl
jnp
test
lock
cli
push
in
mov
jae
movb
fadd
stos
cmp
mov
xchg
iret
sub
aaa
mov
mov
inc
or
out
cmp
pop
jg
sarb
push
mulb
or
popl
adc
pop
pop
xor
mov
mov
xchg
mov
add
aam
leave
dec
add
rorl
psubusb
std
decl
dec
push
jle
push
and
adc
dec
push
inc
loop
fidivl
dec
fnstcw
dec
push
xor
push
add
add
fdivl
or
lods
dec
or
inc
push
mov
or
faddl
cmp
push
inc
or
and
rolb
mov
inc
push
sub
and
cmp
test
ss
pop
ret
mov
test
jmp
xor
lock
les
pop
add
mov
inc
hlt
lret
add
sub
add
aad
test
add
or
out
mov
cs
jmp
or
daa
test
sti
fisubl
int3
enter
or
lret
popf
push
or
pop
add
add
in
lret
mov
sbb
add
sub
sub
icebp
cli
or
jecxz
sti
sub
jne
in
fisttpl
popf
lret
xor
out
xor
cmc
lret
xchg
and
add
xchg
subl
aaa
push
push
clc
call
std
jmp
out
adc
ja
lahf
out
inc
mov
jge
jb
fstps
stc
dec
add
jg
add
xor
and
add
std
fdivrl
mov
add
jg
sbb
cmp
mov
std
into
jg
inc
shrl
daa
mov
jg
rcll
dec
aas
outsb
ret
or
inc
ret
adc
mov
std
add
into
roll
rcll
add
xchg
mov
shll
aam
mov
add
iret
cld
push
mov
or
fimuls
incl
add
add
je
push
pusha
je
jb
jno
mov
or
call
push
je
int3
mov
add
pop
leave
dec
xor
push
pop
pop
jge
or
pop
or
addb
pop
filds
mov
dec
test
dec
mov
pop
mov
add
popf
jmp
mov
inc
in
xchg
fsubr
xor
push
jge
mov
add
add
jo
mov
pop
inc
add
out
std
fisubrl
pushl
jecxz
mov
xchg
jne
orl
cmp
pushl
push
dec
add
loopne
int3
sti
mov
push
daa
add
mov
or
mov
jl
ss
or
mov
sahf
jbe
add
add
cs
fstpt
sahf
and
fdivrs
bound
loop
out
mov
xor
out
mov
or
ljmp
fidivrl
xor
sti
lods
dec
jo
xchg
daa
sbb
ret
mov
mov
mov
or
add
jno
add
add
add
ss
xchg
sti
shlb
mov
dec
or
jmp
scas
xchg
loope
dec
or
jmp
adc
mov
inc
andl
pminub
mov
std
mov
icebp
mov
fsubs
test
xor
push
add
std
cld
cli
popf
inc
jmp
stos
std
dec
lock
cmp
testb
loop
stos
xchg
test
leave
pop
lods
or
or
mov
and
xlat
stc
mov
mov
fstl
xchg
loope
pop
stc
mov
or
dec
test
fcoms
iret
imul
out
dec
call
cli
dec
inc
movsb
aam
mov
add
aaa
arpl
sbb
or
mov
pushf
sbb
jno
movsb
inc
jnp
shll
push
add
sti
jne
dec
jno
mov
jnp
xchg
mov
invd
cmp
add
push
mov
inc
add
or
add
ret
pop
sarl
cmp
ret
js
inc
or
inc
aad
cmc
lret
add
add
rol
or
rcrb
push
leave
xchg
jg
in
daa
hlt
test
daa
add
dec
sub
mov
add
cmc
iret
xchg
jg
push
jle
mov
add
enter
mov
xor
cmpb
add
movsb
in
incl
nop
repnz
jo
push
lock
out
in
jb
dec
or
scas
dec
lret
fdivl
lret
cmpl
pop
bndldx
cmc
cmp
mov
out
js
daa
jle
call
andb
out
cmc
andb
out
mov
lret
testl
xor
push
push
dec
les
add
add
mov
mov
int3
adc
lahf
subl
mov
add
xor
mov
xor
ja
sub
jbe
out
divl
std
bound
sub
xchg
add
mov
daa
out
divl
test
mov
or
inc
mov
popl
mov
addb
or
jmp
add
add
pop
call
sbb
addl
xchg
add
and
jae
mov
mov
push
call
rclb
test
add
hlt
shll
pop
jge
lea
iret
sti
call
push
or
mov
std
ljmp
xchg
xchg
pop
std
ud2
pop
push
int
cmpl
push
add
out
mov
or
push
test
rorb
test
fsubrs
addb
push
mov
cmp
add
test
mov
cmp
les
and
add
adc
std
dec
add
push
mov
aaa
sbb
call
mov
add
clc
push
test
cmp
add
sahf
roll
sub
xor
sub
inc
mov
les
sti
mov
mov
mov
pop
cli
inc
jecxz
mov
mov
movsb
fldt
fistl
mov
xor
std
jl
lds
jae
pushf
adc
add
test
add
add
xchg
ret
push
cmovg
enter
jmp
dec
sbb
aas
inc
addr16
mov
fistps
ljmp
mov
ret
mov
shlb
jg
out
xchg
and
push
loope
sub
mov
cmovs
out
mov
testb
push
das
subl
notb
or
mov
or
mov
mulb
pop
jg
mov
mov
push
je
inc
push
sarl
mov
loop
mov
jl
push
jb
fwait
mov
das
inc
std
cmp
sub
lahf
rclb
and
shl
in
jmp
mov
jnp
push
pushf
mov
sbb
inc
xchg
pop
inc
xchg
jno
mov
fstl
jns
sti
add
mov
or
xchg
cmpl
call
iret
or
bound
add
pushf
mov
mov
cli
test
pop
push
popl
dec
fmul
or
add
add
ror
or
imul
inc
mov
cld
dec
int
pop
mov
add
push
cld
inc
mov
xor
pop
fimuls
mov
clc
or
mov
clc
push
pusha
or
add
mov
mov
add
das
add
into
or
dec
bound
cmp
sti
xor
sub
lea
mov
xor
std
adc
add
js
sbb
dec
push
int
loope
fcoms
daa
or
mov
jle
sub
mov
out
push
out
ret
bnd
stos
dec
sbb
daa
or
mov
ss
cmp
jmp
int
fwait
nop
mov
xor
daa
xor
mov
or
pop
xor
xor
add
mov
cmpsl
jns
sub
add
mov
jmp
leave
call
call
jno
jmp
and
and
inc
scas
call
add
mov
pop
xchg
sub
aaa
push
out
pusha
or
ret
mov
fnop
push
dec
fstps
loop
in
loopne
std
jmp
inc
push
mov
or
xchg
into
jb
call
or
mov
cmovns
cmp
add
vmwrite
sbb
pushl
add
fdivrl
inc
cmp
inc
int3
in
insb
into
lret
add
lret
push
jmp
jnp
in
pushf
xchg
add
outsl
jg
out
add
cli
subl
add
vpsubd
xor
jae
mov
incb
fwait
call
test
add
xrelease
push
sbb
pushf
repz
jmp
cmpb
jno
mov
adc
xchg
cmpb
or
mov
push
data16
imul
aas
mov
and
cmpl
mov
xchg
or
inc
push
test
mov
mov
mov
adc
movsb
adc
add
inc
add
sub
dec
pop
insb
std
pop
mov
mov
dec
mov
mov
dec
cmp
icebp
sbb
push
or
test
mov
or
xchg
pop
imul
movsl
sbb
xor
lcall
mov
jmp
in
inc
nop
movsl
lea
pop
mov
sti
sub
jmp
lea
add
add
movups
mov
jp
ljmp
push
sub
loope
add
nop
out
sub
push
inc
or
dec
out
jecxz
sbb
dec
bswap
add
mov
lock
inc
or
xchg
dec
pop
fldenv
xchg
cmp
mov
mov
and
sub
mov
inc
das
cmp
cld
push
mov
add
mov
or
inc
dec
subl
into
popl
jmp
out
inc
adc
cmp
cmc
call
pop
sbb
cmovl
out
rorb
add
mov
pop
aad
mov
icebp
lcall
jb
iret
rorb
out
pop
insb
fdivr
test
ljmp
add
add
addl
popa
into
cld
call
movsl
in
cld
dec
push
addl
iret
inc
jne
clc
insl
mov
fdivr
jne
cmovns
jecxz
call
cmp
pusha
sbb
add
sahf
pushl
call
addl
in
cmp
popa
or
mov
mov
std
cld
cmp
mov
addb
fidivl
jae
leave
add
scas
mov
cld
sbb
shlb
mov
mov
cmp
sahf
out
mov
imull
push
ds
in
leave
aaa
add
and
in
add
or
sbb
std
popf
popf
in
mov
pop
fimull
sub
pop
arpl
add
adc
push
push
add
out
insl
call
fs
and
mov
xchg
dec
cmpsb
and
mov
add
jo
shll
sbbl
xchg
popa
cwtl
pop
lods
jnp
call
push
insb
pop
sub
mov
in
cmpb
mov
out
add
add
iret
out
jnp
das
xchg
cwtl
and
mov
dec
sub
xor
sbb
rorl
jmp
lret
out
adc
sub
mov
mov
mov
push
xchg
andl
enter
data16
mov
push
cmpl
dec
or
cld
jecxz
rolb
mov
mov
add
sti
push
or
jmp
or
lds
pop
push
in
aaa
xor
jmp
pop
mov
mov
mov
or
mov
call
dec
or
addr16
adc
and
dec
add
sub
add
nop
or
test
loopne
xchg
je
add
call
test
dec
mov
daa
or
lock
adc
fsts
jno
push
in
or
xor
cli
push
hlt
fsubs
and
xchg
out
pop
leave
or
cs
mov
inc
jl
ds
cs
add
imulb
add
call
and
mov
call
insb
dec
add
mov
inc
and
testb
jne
aaa
idivl
jne
or
jge
pop
ljmp
rcll
xchg
mov
mov
cwtl
aad
daa
add
xor
sub
and
shrb
sbb
imul
add
add
je
fwait
or
jo
leave
add
push
pop
add
adc
add
das
out
mov
cmpsb
push
dec
dec
icebp
add
aas
out
mov
xor
daa
jbe
sbb
inc
cmp
ret
in
out
cmc
lea
mov
out
jno
xlat
push
int
movb
or
lret
mov
negl
add
add
mov
add
or
mov
jae
jmp
mov
sbbb
and
push
sub
out
es
and
test
enter
mov
cltd
sbb
imul
lret
mov
sbb
std
adc
lahf
push
addl
add
add
push
je
imul
flds
es
add
and
pop
test
lds
call
or
and
pushf
fs
or
pop
clc
addr16
dec
call
das
push
pop
pop
pop
fwait
loope
mov
in
adc
and
nop
add
cmp
dec
push
lret
sbb
arpl
push
ljmp
xchg
fucomip
fists
adc
add
adcl
daa
adc
lcall
or
and
mov
cwtl
add
xlat
pop
cmp
rorb
mov
push
mov
push
adc
xchg
lods
std
xor
add
add
sub
mov
dec
or
icebp
dec
add
fbld
jp
in
pop
push
dec
jge
pushl
mov
or
mov
or
pop
inc
add
jmp
std
xor
add
pop
xor
inc
mov
add
lds
pop
add
ja
adc
es
ss
push
lds
add
add
adc
mov
lock
mov
jb
arpl
loope
shlb
mov
sbbl
dec
sbb
leave
test
xor
mov
fwait
sbbb
lods
nop
jb
or
adc
call
or
push
or
cmpsb
or
call
test
add
dec
shll
dec
sub
call
mov
and
and
ss
sbb
inc
inc
stc
cld
es
jmp
lods
pop
mov
ficomps
pop
call
lcall
rorb
dec
adc
jecxz
in
bound
ret
mov
pop
fnstenv
pop
subl
push
add
xchg
jno
fbstp
xchg
xchg
jmp
jnp
jmp
mov
je
xchg
push
lea
in
jmp
in
push
or
or
jmp
push
push
hlt
sbb
fucomi
mov
inc
hlt
imul
mov
mov
paddsb
jno
add
cltd
inc
sbb
add
add
jo
leave
into
clc
push
leave
into
cld
push
hlt
aad
add
shlb
jmp
cwtl
inc
clc
mov
cld
xorl
xorb
sti
jne
add
fsts
gs
add
pusha
lcall
lret
je
mov
hlt
mov
sbb
or
mov
pushf
hlt
push
test
add
add
mov
andl
clc
mov
adc
fmuls
test
push
movsl
les
xor
jl
clc
cld
sarb
mov
imul
test
push
call
adc
in
push
je
add
inc
mov
cmp
push
add
subl
out
test
pop
adc
push
push
add
or
test
push
xchg
push
sbb
add
xchg
jl
push
push
jo
out
push
cmc
fs
jmp
adc
test
dec
push
arpl
leave
pusha
je
inc
adc
test
sub
arpl
test
or
add
add
std
scas
imul
mov
push
hlt
xchg
sbb
push
sbb
or
and
push
add
jnp
in
push
mov
push
push
leave
xchg
std
push
lret
mov
cmp
sbb
push
nop
je
rcrb
push
jmp
jne
clc
in
popl
add
add
mov
shrb
mov
ret
xchg
std
out
gs
inc
scas
shl
add
add
stos
xor
into
dec
rorb
sbb
add
xchg
push
in
xchg
or
inc
or
push
inc
or
add
xchg
clc
test
data16
or
sub
xor
lcall
jb
lea
imul
stos
rolb
or
cld
jne
popf
inc
lock
xchg
clc
push
sub
dec
add
sub
add
push
mov
or
push
mov
mov
daa
rcll
dec
out
mov
inc
and
daa
push
je
mov
inc
xor
xlat
hlt
mov
xor
or
andb
mov
push
and
cltd
xor
gs
pop
jae
sti
cmp
ja
jb
ds
xor
xorb
jmp
xor
adc
xchg
sub
ds
push
cs
jns
mov
aas
and
loop
or
cmp
inc
and
in
je
lods
aas
sbb
nop
sub
ds
jl
inc
pusha
inc
roll
adcb
pusha
inc
add
scas
sub
repnz
insl
inc
hlt
pop
inc
mov
ret
nop
popa
scas
sub
add
add
fldenv
add
xor
cli
sti
add
movsb
or
add
sub
add
out
dec
lret
jmp
jo
push
push
movsl
divl
int3
inc
jp
cmpsl
ret
les
incb
add
lods
jmp
mulb
xchg
push
sbb
or
add
add
dec
or
leave
stc
xchg
and
cli
sub
or
jo
xlat
mov
popl
jmp
repnz
call
sbb
adc
cmp
add
lea
std
out
sbb
jmp
jmp
add
fadds
testl
mov
or
add
add
arpl
cmc
gs
stc
je
adc
inc
push
std
push
xchg
pop
add
cld
adc
rorl
in
or
das
cmp
add
sbb
in
jmp
or
popa
or
pop
ljmp
and
shlb
cld
jmp
or
lahf
imul
pop
mov
push
add
mov
add
sahf
jmp
jnp
popf
dec
or
sarb
mov
test
mov
andb
xchg
nop
and
mov
test
es
ss
in
sub
shlb
and
mov
or
aad
push
ret
xchg
je
and
clc
mov
mov
faddl
xor
inc
shll
add
addb
ss
lock
ss
clc
pop
xchg
mov
idiv
imul
fisubl
fs
mov
xor
add
notl
dec
adc
repz
adc
adc
xchg
jmp
cwtl
mov
xor
add
jb
rorl
sub
xor
mov
ret
mov
jbe
imul
cmp
push
push
repz
dec
movsl
adc
add
nop
movsb
iret
stc
lret
cmp
iret
mov
movl
daa
push
xchg
or
mov
cmp
fwait
cmpl
cmp
jmp
jp
cmp
adc
push
insb
pop
add
mov
subl
imul
ljmp
push
fnsave
int
add
jecxz
aam
arpl
fsubl
fwait
std
add
call
jmp
xlat
mov
push
adc
add
ret
or
add
mov
jmp
xchg
add
cwtl
pop
decl
ds
adc
jg
dec
xchg
jg
cmp
or
push
push
sub
ret
mov
data16
mov
std
shrb
clc
je
xchg
inc
and
push
adc
push
add
inc
mov
fmull
add
add
fidivrl
inc
aad
lea
jp
mov
inc
gs
inc
sub
xor
inc
and
xor
mov
lcall
popf
in
add
mov
cmc
push
cmpps
cmc
xlat
or
testl
xchg
fmul
ss
xchg
pop
jl
mov
je
jno
in
lret
xchg
mov
inc
inc
and
imul
stos
nop
mov
sti
imul
cmp
push
add
mov
dec
test
daa
add
or
stos
pop
cmp
shr
mov
or
lahf
cmp
pop
lsl
push
or
sub
mov
sub
sub
add
jne
sub
xchg
sub
mov
stc
ss
lock
add
jns
sahf
rcrb
cmp
or
mov
adc
and
mov
cmp
mov
add
or
jmp
adc
xchg
fimull
std
inc
mov
mov
dec
pop
push
add
lahf
add
jge
movsb
es
lea
popl
push
mov
call
jge
add
in
cmp
mov
aaa
lods
pushf
cmpl
adc
add
adc
sub
push
pushl
sub
mov
add
adc
push
call
inc
xchg
ss
add
mov
add
in
idiv
stos
push
inc
and
mov
sti
jne
sbb
push
sub
adc
sub
or
stc
jmp
clc
add
cmp
clc
sub
je
adc
je
jmp
or
lret
bound
mov
push
dec
mov
mov
clc
xor
or
add
repz
mov
jbe
push
stos
jb
sbb
notb
addl
add
stos
addb
dec
add
or
sbbb
addl
mov
inc
adc
std
xor
and
es
add
jnp
add
push
adc
sub
push
or
je
mov
add
add
or
clc
lret
idivl
lret
mov
sti
out
test
or
jne
repnz
or
filds
nop
out
push
add
sub
pop
adc
das
loope
adc
sarl
add
cli
xchg
incl
and
add
or
testl
add
add
pop
push
mov
aad
or
ficoms
nop
notb
xchg
test
mov
fidivrs
setno
loop
xchg
cmp
addb
mov
mov
or
mov
push
or
add
hlt
xchg
xchg
std
inc
sub
adc
add
in
xchg
sub
sub
je
das
add
mov
fsubrs
xor
out
pop
pusha
jge
or
test
cmp
nop
out
dec
add
pop
xchg
or
dec
sbb
addr16
adc
push
movb
sbb
push
adc
lea
push
decl
adc
stc
dec
add
fcoml
add
add
and
pop
or
push
cmc
stc
cmc
call
mov
cmp
ss
sti
jne
push
push
add
sar
or
jno
adc
sti
lcall
xchg
jge
mov
aad
stc
int
or
ljmp
dec
mov
mov
clc
xor
add
add
adc
mov
mov
addb
or
or
out
add
sub
add
mov
cmpl
xor
int3
or
clc
push
or
xor
std
xor
add
or
cld
sarl
or
and
sub
les
mov
pop
out
rcrl
mov
adc
leave
jns
sub
inc
xchg
xchg
mov
add
or
loope
add
test
add
dec
clc
nop
fimuls
lea
movsb
mov
adc
das
jmp
add
mov
stos
cmpsb
inc
in
out
mov
fisttps
cld
pop
adc
add
jl
add
loope
hlt
out
xadd
xor
xchg
mov
mov
mov
mov
loopne
mov
lds
jmp
movsb
sub
mov
mov
inc
fcomip
mov
push
std
pop
sbb
icebp
push
push
sub
insb
nop
std
fdivrl
leave
mov
jle
inc
lds
add
mov
add
sub
out
cmp
call
push
lret
fisttps
daa
lret
testl
or
rorl
enter
mov
inc
add
mov
push
add
dec
enter
mov
add
fwait
or
add
test
adc
pop
std
decl
pop
add
pop
pop
andl
xchg
lods
or
mov
dec
dec
mov
dec
inc
mov
mov
adc
outsl
inc
hlt
cmp
jge
mov
xlat
push
test
sahf
add
mov
cmpsl
cs
sub
mov
mov
ss
mov
ljmp
ss
and
add
cmp
or
jb
jge
mov
testb
repnz
loopne
mov
rclb
inc
mov
fwait
jb
mov
dec
jg
xchg
pusha
add
add
lods
imulb
or
jb
test
push
mov
xchg
mov
add
push
xchg
rorb
fbld
iret
imul
scas
testb
push
lret
inc
add
pushf
je
mov
mov
push
mov
fistl
data16
cmp
insb
ds
add
adcl
add
or
sbb
jle
mov
pop
ret
or
jmp
mov
mov
pop
cmp
mov
mov
rcll
sarb
pushf
sbb
mov
add
mov
push
cmc
cmp
out
sar
cld
insb
jbe
test
mov
cld
adcb
cmp
adc
testb
add
mov
mov
pop
mov
andb
pop
call
clc
dec
cmpsb
or
sbb
xchg
adc
mov
icebp
inc
int
push
movsb
xchg
add
cmovs
movsb
sbb
out
ljmp
dec
mov
aad
mov
inc
sbb
jae
jbe
push
lea
xlat
jmp
sbb
mov
add
add
sub
xchg
idiv
jmp
sti
ss
jo
cmpl
xchg
je
push
push
std
ljmp
fwait
xchg
ss
add
out
jle
out
pop
ds
sbb
mov
incb
mov
out
add
stos
pushf
aad
cmc
popl
mov
add
add
int3
mov
out
mov
jp
pushf
loopne
xor
mov
inc
bnd
mov
inc
sub
out
inc
or
inc
sbb
inc
nop
std
mov
imul
cmp
ror
mov
jl
xchg
fs
shll
add
or
sbb
add
add
or
cmp
sarb
mov
fwait
add
mov
ds
add
fisttpll
call
mov
push
or
jo
shrb
stos
sti
test
add
pop
in
incl
mov
adc
jnp
inc
push
out
dec
xor
add
add
orl
cltd
mov
inc
mov
xor
ja
push
lods
call
or
xchg
jmp
ret
or
shll
movsb
inc
imul
cmp
mov
mov
test
inc
cld
out
cmp
cld
add
push
sbb
lret
rclb
data16
push
sbb
into
out
orl
test
sti
jmp
jbe
sbb
cmp
flds
ljmp
inc
or
add
mov
enter
adc
decb
or
ret
pop
lds
or
fisttpl
xchg
adc
daa
sti
pop
or
adc
incb
add
add
or
leave
popf
jbe
pop
xlat
int3
or
mov
cwtl
pop
pushf
xor
insb
es
mov
insl
ds
orb
mov
pop
pop
loope
dec
or
test
repnz
subl
mov
pop
jb
std
inc
out
sub
sti
mov
insl
ds
mov
push
sbb
pop
mov
add
add
ja
leave
movsl
xchg
add
out
into
scas
shlb
ss
mov
loop
push
add
test
clc
paddusb
ret
sub
mov
xchg
cld
pusha
mov
jmp
lahf
xchg
insb
cmp
add
arpl
gs
inc
mov
xchg
cli
dec
mov
clc
imul
jg
out
mov
cmc
into
fldcw
in
and
ret
fidivrl
cmc
repz
mov
testb
fcmovbe
mov
mov
sti
xor
push
add
rcll
mov
and
sti
cmpsb
cs
or
ds
or
mov
popl
jns
sub
or
clc
lock
add
jg
scas
pop
ds
adcb
test
popl
jmp
ds
cmp
idiv
adc
idiv
push
cld
negb
mov
adcb
xchg
add
prefetch
aas
cmc
cmp
jp
sti
fidivrs
mov
or
add
cld
das
fcoml
sti
cmp
or
incl
add
add
ljmp
cmp
sti
addl
test
sti
decl
or
psubusb
clc
incl
enter
xchg
or
adc
add
std
xchg
or
add
setle
stc
inc
movl
xchg
add
call
sbb
sbb
sub
or
cmp
jecxz
fsincos
mov
xchg
mov
add
int3
aad
std
rclb
cltd
sti
ret
mov
test
cmpb
aam
test
xchg
shrb
add
xchg
rolb
push
push
lds
xchg
out
or
push
pusha
jp
dec
mov
andl
inc
subl
add
add
addl
cmp
mov
or
add
loop
lock
in
hlt
in
pop
repz
sahf
cmpsb
pop
add
test
leave
hlt
mov
jp
lods
mov
cmp
fdivrp
arpl
jo
test
bound
mov
jecxz
sub
insb
mov
mov
cmp
dec
mov
fsubl
popa
add
pop
xor
lock
mov
out
jge
stos
outsl
test
mov
out
dec
pop
jecxz
repz
movsb
std
cmp
std
pop
mov
xchg
mov
xchg
fisubrs
add
dec
dec
cld
pusha
je
jb
outsb
repnz
cmpsb
mov
pop
hlt
push
cmp
add
shll
dec
test
dec
add
clc
cmpps
popl
pushf
xrelease
cmp
xor
lods
cs
mov
rcl
test
je
push
les
sti
jne
jbe
mov
adc
or
add
fmull
inc
adc
dec
adc
mov
add
add
cld
mov
jb
out
pop
or
cmp
cld
call
push
cld
mov
incl
inc
jo
in
pusha
mov
call
or
xlat
xor
lret
hlt
loope
sti
xadd
shl
adc
dec
lea
cmc
pop
jmp
add
and
jb
int3
cmp
xor
jne
add
add
xor
dec
inc
mov
insb
mov
and
test
hlt
sti
or
outsb
xor
jae
outsb
cmp
lcall
sahf
xor
mov
fs
or
xchg
jb
mov
mov
inc
xorb
add
outsl
xor
xorl
mov
mov
add
dec
out
iret
je
jb
xor
jnp
neg
mov
push
mov
int
or
push
mov
xor
xorb
xor
in
add
popa
ss
mov
inc
xor
in
jg
cmc
mov
mov
repz
shll
div
sarl
nop
lock
test
out
imulb
mov
inc
fwait
out
sub
mov
inc
mov
in
ja
lcall
decb
cmc
stos
cmp
cmp
jne
xor
mov
cmc
scas
cmp
or
aaa
in
inc
sbb
cmp
xor
inc
imul
cs
xor
ljmp
add
sbb
and
out
cld
jmp
mov
adc
mov
shll
fwait
cmp
and
mov
clc
aad
dec
jmp
and
pop
xchg
add
lods
das
rorb
lock
fdivr
jmp
push
popa
cld
or
rolb
in
inc
mov
mov
push
fldl
test
call
pop
sbb
or
int3
flds
clc
pop
push
jno
xor
sti
incl
sub
inc
push
adc
and
ja
add
or
dec
inc
test
push
dec
cld
into
sbb
adc
pop
jl
pop
xchg
das
rorb
lods
pop
insb
mov
test
clc
add
test
mov
scas
cmp
sub
xchg
sub
cmp
in
dec
sbb
ds
jmp
in
cmpb
adc
cmp
cmpb
dec
inc
xchg
cmp
dec
push
or
test
mov
scas
repz
inc
leave
mov
mov
aaa
clc
adc
mov
jbe
sub
sub
loopne
je
out
nop
xorw
test
push
outsl
push
in
adc
dec
popf
imul
mov
not
sbb
out
and
xchg
pop
sub
adc
idivl
arpl
imul
cmc
cmpb
ss
cmp
fs
mov
mov
lods
cmpsb
mov
add
scas
repnz
popf
push
stos
in
popf
adc
sub
jecxz
xchg
add
add
out
addb
ljmp
test
sti
cld
pop
xor
jmp
xor
adc
mov
pop
cmp
icebp
dec
insb
mov
fistps
xchg
rorl
lods
stos
movsb
inc
cmc
or
call
fs
adc
mov
inc
cmp
push
ljmp
lret
idiv
mov
xor
hlt
scas
sub
inc
int
adc
sbb
ljmp
add
jno
mov
call
call
dec
rcll
test
add
jl
idivl
aaa
pop
clc
cltd
jg
in
sti
jb
xchg
jae
push
inc
xor
and
add
add
add
lea
or
cltd
orl
sti
dec
and
add
add
sbb
sar
push
inc
fsin
sarb
adc
in
mov
mov
fwait
addb
sbb
or
dec
subb
ja
fsubr
dec
dec
andb
inc
inc
inc
testl
push
xchg
add
js
mov
dec
outsl
sbbl
cmp
mov
stos
into
add
adc
hlt
xchg
or
jo
add
mov
pop
mov
jmp
mov
add
pop
jne
or
mov
mov
nop
jo
mov
daa
xchg
jge
imul
lock
sbb
sbb
mov
jb
mov
cmp
ds
jo
cmpsb
movsb
xor
fdivp
jmp
fisttpll
out
dec
jge
into
ficompl
ror
cltd
arpl
jmp
cmc
jl
andl
cmpsb
xor
pop
ret
rclb
imul
jo
cmpsb
cwtl
fs
popl
jmp
out
fs
loop
je
add
and
bound
or
xor
arpl
sub
dec
adc
jae
jl
int
mov
movsl
cmpsb
pop
loope
lcall
jge
or
ss
or
adc
lcall
sti
stos
inc
jo
stos
std
je
push
aad
mov
jb
sub
add
add
ljmp
xor
add
or
adc
pushf
aaa
pop
push
jmp
pop
fprem
fnstcw
decl
sbb
adcl
sti
incl
fdiv
psubusb
icebp
jmp
push
adc
fdivr
cmp
xchg
jle
mov
or
call
adc
cltd
pop
or
cld
out
jns
test
mov
and
int
inc
fsubs
out
mov
mov
adc
or
ret
jmp
fdivrs
je
mov
adc
add
add
sti
stos
jp
bnd
mov
mov
lock
movsl
jmp
push
mov
add
jle
lock
jmp
lock
add
jb
popf
jp
cmc
les
xabort
dec
into
and
loope
or
add
or
mov
lods
shr
out
mov
and
xor
jmp
add
sbb
fimuls
pop
sbb
in
flds
movsl
daa
mov
jecxz
popl
add
add
cmpsb
add
out
jmp
dec
ja
mov
out
jne
lods
ja
clc
mov
mov
jb
cli
inc
cmp
mov
lods
insb
loop
jne
sbb
pop
or
iret
sub
add
adc
imul
mov
jmp
loope
add
cs
cld
jo
faddl
mov
jecxz
pusha
jae
or
movsl
dec
xchg
push
jmp
cmp
or
xor
loop
push
stos
jno
jmp
repz
mov
imul
jb
ja
adc
popl
std
sbb
std
lahf
sahf
sbb
sub
out
inc
mov
or
push
and
push
sbb
pop
aaa
fldenv
mov
cmpsb
int
jne
push
cli
add
pop
mov
test
lret
repz
dec
and
sti
inc
andb
pop
popl
mov
mull
shlb
dec
or
pop
inc
in
dec
popl
adc
jg
sbb
popl
cmp
jmp
cmpl
lcall
xor
jp
or
jne
ss
jne
or
cmp
stc
add
mov
mov
add
std
stos
stos
adc
clc
repnz
mov
shrb
adc
inc
mov
ds
leave
testl
incl
add
add
clc
cmp
flds
or
aas
out
add
std
ss
and
sbb
mov
mov
loop
shlb
mov
out
jbe
call
jnp
nop
jae
mov
out
arpl
cmpb
fcmovb
xor
or
and
add
add
xchg
push
add
loope
mov
repz
out
idivb
add
xchg
jae
dec
loope
cmp
jae
cmp
dec
jne
sbb
shlb
add
mov
mov
cld
push
mov
test
loop
push
xor
lods
mov
loope
jmp
mov
add
loopne
insl
cmp
cld
jmp
xor
xchg
mov
jne
cli
jecxz
adc
or
andb
or
jmp
out
cld
xchg
jl
and
popa
iret
cmpb
jmp
jnp
cmp
mov
mov
push
add
mov
xchg
shlb
mov
jge
subb
sti
inc
and
cmp
nop
jle
lds
rolb
rcll
cmp
mov
iret
cwtl
rolb
shrl
jp
add
xor
cmp
gs
jmp
leave
adc
cltd
ja
flds
add
dec
cmpsb
rolb
mov
mov
pop
xchg
add
dec
cmpsb
rolb
adc
or
call
fidivl
das
cmc
adc
dec
add
add
adc
mov
shlb
xlat
adc
jmp
xor
imul
add
das
in
adc
movl
std
mov
sbb
add
add
xor
roll
aam
push
xor
mov
out
mov
bnd
mov
lds
adc
cmp
enter
pop
les
repz
pop
mov
cmp
lods
cmp
jmp
mov
cmp
jge
subb
loop
out
xchg
jno
add
add
addl
dec
mov
loop
add
add
add
rclb
outsb
mov
data16
popl
jmp
push
sahf
add
cmpl
scas
adc
jle
mov
sbb
mov
jne
xchg
mov
jge
std
push
xor
jb
jno
clc
add
add
add
sarl
and
orb
lret
psubd
lret
sub
mov
aaa
xor
pop
mov
mov
push
cmp
stc
push
jl
mulb
sarb
jbe
push
lds
into
pop
cmp
pop
sti
sbbl
psrlw
decl
adc
lock
add
jnp
xchg
roll
and
aaa
push
frstpm(287
sbb
xor
adc
fsub
push
mov
sti
dec
popa
push
or
xchg
mov
out
mov
fdivs
test
cmpsb
mov
insb
xchg
mov
jae
iret
cmpsb
fdivs
pop
test
mov
gs
loope
cmpl
pop
stc
jae
gs
shr
cli
cmp
add
mov
push
sar
les
dec
test
test
fmull
mov
mov
ss
or
push
outsb
std
fisubl
and
insb
ret
jmp
add
stos
je
std
mov
sarl
daa
in
iret
mov
std
lcall
add
gs
cld
mov
mov
arpl
subb
add
aad
add
fidivrl
hlt
dec
mov
leave
mov
insl
inc
fisubl
fldt
orb
outsb
mov
test
xchg
fnstcw
ss
sub
add
and
test
fldcw
mov
flds
add
add
add
fldln2
roll
xchg
outsb
mov
adc
push
mov
mov
jge
push
arpl
shlb
push
cli
cmc
orb
push
mov
xorl
cld
sub
mov
outsl
rcr
xchg
pop
push
cwtl
xchg
pop
mov
mov
or
mov
push
std
adcb
add
push
pop
daa
mov
inc
push
cli
jl
movsb
ret
add
push
pop
dec
adc
ja
mov
lock
fidivs
pushf
mul
xchg
or
call
sti
inc
push
dec
in
push
imul
cltd
ja
rcll
xor
pop
rcr
out
shrl
jp
bound
dec
fildl
inc
adc
cmp
jl
test
stc
call
push
inc
adc
dec
or
pop
lret
pop
sub
inc
test
std
push
pop
push
stc
inc
pop
cld
inc
call
inc
in
xchg
imul
mov
adc
je
ja
cwtl
into
push
cmpb
imul
jecxz
outsb
add
add
add
fdivr
addb
std
testb
jl
add
inc
test
repnz
xor
int3
cli
and
mov
popa
shlb
or
adc
mov
cmpsb
aam
dec
leave
hlt
inc
out
jnp
std
mov
roll
xchg
mov
or
imul
mov
stc
or
nop
cs
push
fdivrp
arpl
cmp
add
push
xchg
mov
jne
mov
xchg
mov
xchg
mov
ja
xchg
out
xor
pop
call
mov
out
dec
inc
push
rorb
or
jb
shll
test
out
push
jae
mov
dec
xchg
ret
add
mov
mov
mov
ds
add
add
dec
sti
aad
xor
repnz
test
mulb
in
fs
add
mov
or
je
or
leave
orl
jnp
mov
orl
add
and
or
sub
or
pop
std
fdivrl
aam
stc
lea
dec
or
cld
fs
xorl
aad
bound
jne
shlb
and
cli
cmpb
push
aam
in
pop
cld
add
push
incl
sti
jne
addr16
mov
loopne
fwait
push
rorb
xchg
or
mov
ret
add
mov
add
aaa
inc
nop
addr16
femms
push
loopne
dec
mov
jmp
xor
test
nop
add
mov
cmp
lea
pop
inc
or
in
mov
mov
or
pop
sarb
in
add
mov
call
addr16
sti
pushl
mulb
rorl
push
pop
arpl
scas
outsl
outsl
inc
mov
add
ss
xchg
mov
add
pop
mov
add
mov
mov
jns
mov
idiv
jb
mov
jae
jmp
or
cmc
call
dec
push
cmp
adc
sub
std
xor
add
dec
out
fs
add
jmp
cltd
cmpsl
shr
pop
imulb
mov
icebp
mov
aas
cmpsl
add
pop
filds
call
push
and
test
lock
mov
inc
test
mov
or
out
data16
add
sub
call
and
sbb
data16
fisubrs
dec
shl
or
ljmp
rcl
sti
sbb
data16
divb
adc
add
sar
imul
add
add
popl
jmp
mov
inc
int
inc
std
xchg
xchg
test
out
adc
aas
cltd
not
std
je
mov
aas
adc
jb
shlb
adc
rcr
cld
or
or
int3
mov
jmp
mov
shr
fadds
inc
int
sbb
jbe
std
cld
xchg
xorb
or
inc
sbb
add
add
sar
fdivrl
pop
adc
xchg
jb
cld
add
in
mov
fiaddl
sbbl
sbb
ret
push
in
mov
mov
jno
push
ret
loope
sar
jne
add
ret
mov
dec
xlat
sti
jne
xor
fiadds
add
pop
mov
jmp
xlat
adc
jp
push
and
add
sub
dec
inc
or
jno
mov
cmp
mov
out
or
popf
fs
dec
aam
repnz
aam
mov
test
fnstcw
out
jg
std
ds
mov
mov
mov
ds
jo
repz
xor
mov
aas
mov
mov
mov
xor
sti
mov
mov
loopne
dec
inc
xchg
mov
or
lock
xchg
popa
jae
negb
test
ja
orb
xchg
fisttps
ret
psubsb
fucomi
sbb
add
rcrb
arpl
sahf
insb
inc
mov
mov
xchg
cmp
ss
pop
mov
push
jg
rolb
sub
jmp
out
mov
jmp
cmp
mov
ret
pop
cmp
repz
mov
xlat
xchg
int3
cld
cmc
mov
adc
xor
mov
sbb
stc
pop
std
mov
pushf
mov
push
inc
sbb
dec
pop
inc
mov
fimuls
adc
int3
jb
push
inc
or
add
cld
idivb
rorb
arpl
ficoms
pop
loope
movsl
aaa
pop
dec
inc
scas
add
je
sub
mov
mov
add
pop
xchg
mov
mov
push
xchg
popl
bound
add
add
xchg
xchg
jecxz
inc
dec
sbb
mov
das
repz
cs
mov
cmp
adc
inc
jmp
inc
add
daa
push
add
pusha
shrl
inc
cld
stos
mov
aam
cmp
pslld
decl
loop
add
insl
cwtl
pop
enter
mov
inc
add
pushf
sbb
or
int3
mov
inc
add
pop
sbb
fists
mov
adc
push
mov
or
inc
aas
into
fisttpl
mov
hlt
push
add
ror
inc
mov
jbe
add
pusha
push
mov
add
mov
pusha
jbe
test
fucomi
loop
adc
lds
and
mov
mov
ss
cmp
add
add
sbbl
mov
and
dec
les
mov
pop
jae
cmp
mov
loopne
pop
jae
cmpsb
fnstenv
lret
pop
leave
cmpsb
push
popl
mov
mov
rdtsc
sbb
add
mov
pop
adc
fnclex
aas
push
aaa
lea
and
add
add
add
mov
mov
inc
or
fwait
es
outsb
mov
push
add
push
or
inc
ficoml
pop
leave
lret
cmpb
mov
nop
lret
jp
sbb
cmp
pop
add
leave
pushl
cmp
cmpsb
sti
int3
adc
sti
push
add
das
push
fdivl
std
jle
mov
std
mov
adc
in
popf
out
mov
pop
mov
add
std
mov
adc
jae
add
jbe
out
push
int3
cld
in
insl
mov
test
jb
adc
clc
push
inc
stc
aas
adc
and
adc
mov
pop
xchg
movsl
inc
adc
add
add
imul
mov
push
hlt
and
in
mov
pop
call
cltd
push
or
or
decl
sti
jne
mov
jmp
loopne
mov
add
jne
insb
jno
mov
test
decl
je
movsl
ss
fcoml
adc
test
dec
ljmp
lds
lock
push
xchg
test
shlb
pop
mov
lds
jnp,pn
cmp
into
pop
loope
dec
loope
dec
je
lods
mov
pop
mov
jbe
inc
fxch
dec
or
sub
mov
out
xor
inc
shll
and
and
mov
mov
pop
addl
std
pusha
mov
add
out
test
xor
test
mov
sub
adc
mov
das
out
xchg
pop
std
cs
fldl
mov
gs
or
scas
ret
pop
js
and
rorb
inc
cmc
sbb
pop
pop
popf
test
shlb
test
xchg
xor
xchg
lods
jne
mov
jmp
xchg
mov
add
sbb
mov
stos
jg
xchg
arpl
xor
rcll
mov
out
mov
pop
push
shrl
cmp
imul
shlb
into
ljmp
enter
pop
cmp
mov
adc
out
js
loope
insl
ret
mov
fbstp
jnp
inc
cmc
sub
ret
jnp
fwait
test
shl
xchg
in
xor
icebp
or
mov
push
or
inc
shrl
out
xor
inc
add
outsl
inc
and
xchg
add
in
mov
pop
inc
sbb
push
push
adc
cltd
call
test
dec
lahf
xchg
add
cld
clc
jae
add
add
jnp
xchg
inc
rorb
and
or
lret
in
addr16
xor
mov
inc
mov
pop
adc
xchg
push
std
aaa
ret
loope
imul
and
sbb
gs
push
xchg
inc
movsb
test
adc
or
aaa
pop
cmp
push
std
stos
pop
add
add
or
clc
ret
and
lock
add
clc
mov
int
add
jae
std
int
dec
inc
cmp
push
xor
pop
pop
lods
add
jbe
inc
fldenv
pop
aaa
js
pop
mov
or
into
int3
in
movsb
pop
std
add
mov
in
add
add
test
leave
jge
and
push
jae
jb
enter
in
pop
push
into
stos
les
imul
std
push
sarb
xchg
pop
jmp
and
sbb
in
add
rol
je
push
ret
mov
orb
push
sar
mov
jg
lea
mov
test
dec
rcll
add
add
cmp
cmp
lahf
push
shrl
enter
or
shlb
pushl
mov
add
outsb
inc
jo
outsb
push
adc
dec
adc
cmp
mov
mov
lds
mov
aaa
sub
xchg
test
cld
jne
std
push
xchg
xor
mov
out
pop
std
xor
ret
jb
jecxz
or
xor
in
call
pushf
ret
das
dec
cld
pusha
cmc
popf
mov
pop
out
mov
add
mov
or
push
int3
push
and
push
or
unpckhps
sbb
pop
inc
lea
dec
mov
inc
incl
add
add
pop
loop
arpl
and
movl
andl
inc
into
std
cmp
cs
call
mov
ss
jg
adc
mov
lea
mov
add
xor
test
jecxz
sbb
add
add
mov
mov
cltd
push
xor
mov
loop
shrl
mov
cmp
inc
add
push
mov
add
cmp
add
mov
sbbl
push
std
ss
and
inc
jecxz
add
push
or
pop
and
mov
or
or
add
xor
or
push
rorb
call
out
jb
das
or
or
imul
out
pushf
into
popa
ljmp
cmp
mov
dec
sbb
xchg
pop
inc
or
add
mov
loop
stos
stos
xchg
test
xchg
popf
push
cmp
push
cmpsb
jae
add
inc
jecxz
or
lcall
inc
adc
mov
fdivr
mov
aaa
mov
mov
jnp
xchg
sahf
and
sub
jle
in
stc
jge
repz
jge
jns
add
jnp
add
jge
pop
jb
add
jae
add
js
add
jae
add
insl
jge
jp
jge
std
jge
add
insb
jge
xchg
add
mov
sarb
add
leave
cmp
add
sti
cmp
add
cli
cmp
add
stc
cmp
add
stc
cmp
add
cmp
add
cli
cmp
add
cmp
add
cmp
add
cld
cmp
add
aam
add
cmp
aas
mov
mov
or
mov
or
mov
adc
mov
or
ds
mov
aas
mov
push
aas
mov
adc
mov
mov
mov
mov
mov
mov
ds
mov
mov
mov
mov
mov
mov
mov
mov
ret
imul
aas
mov
in
mov
add
mov
add
mov
clc
push
scas
sar
in
jg
or
cmpsl
fxtract
adc
cltd
add
int3
cltd
icebp
in
int
in
icebp
shrl
mov
jno
daa
jne
sbb
addr16
data16
pushf
imul
inc
mov
mov
mov
xor
xchg
loop
out
jbe
mov
fidivrs
ret
fisttpl
notl
enter
rol
clc
mov
sub
mov
pusha
mov
mov
roll
add
xchg
popl
or
push
add
mov
jp
mov
jp
or
add
jp
sub
jp
pop
dec
jp
push
inc
jp
jo
jp
mov
es
out
sub
cwtl
and
mov
add
jg
jp
xor
jp
xor
add
fs
dec
addr16
sbb
add
inc
jns
cmpsl
inc
jns
in
jns
hlt
xchg
jns
notl
add
push
jns
add
add
pop
scas
cmp
add
cmp
add
in
cmp
add
ljmp
dec
jmp
cmp
add
mov
dec
hlt
orl
int3
jae
xchg
add
shrb
xor
add
cmovns
enter
mov
test
cmp
daa
bound
cli
mov
lea
fisubl
sbb
mov
add
or
flds
add
mov
out
pop
stos
add
mov
xchg
inc
popf
movsl
inc
xchg
ja
std
sub
test
adc
dec
jb
xchg
jae
std
add
inc
stos
cmpsb
jns
mov
sub
std
loop
ja
xchg
aas
mov
cmp
dec
cmp
sti
add
js
hlt
pop
jne
cmpl
jno
dec
std
add
mov
mov
js
lea
jp
jb
rcll
mov
out
xchg
pop
cmpsl
into
mov
sbbb
movb
add
push
mov
int3
push
and
mov
sbb
xor
jo
sarl
sbb
cld
sub
jp
pop
ljmp
push
lods
jg
bound
outsb
and
mov
cmpsl
and
fs
test
xchg
pop
lods
jb
jp
stos
outsl
xchg
mov
cmc
out
or
mull
adcl
add
mov
bound
mov
jo
inc
std
mov
rclb
scas
out
mov
sub
sub
xchg
outsb
push
xchg
add
cld
jo
xor
jle
push
push
imul
push
push
popf
push
mov
cmpsl
fimuls
add
cmp
sub
and
cmp
adc
dec
or
mov
jo
js
pop
add
mov
add
add
insb
xchg
je
cltd
mov
xor
cmp
add
cmp
pop
add
jae
aad
jmp
les
inc
dec
dec
sti
cmp
stos
popf
xchg
pop
inc
or
mov
mov
sti
mov
sti
decl
jmp
add
divb
inc
decl
aaa
inc
decl
cmp
dec
mov
lcall
adcb
inc
std
outsb
insb
push
dec
dec
idivl
loopne
xorb
mov
aas
push
das
stos
hlt
ds
mov
lahf
in
add
and
fadds
add
add
adc
or
jge
mov
add
mov
mov
add
mov
inc
lds
jge
rorb
mov
and
cmp
ret
mov
test
push
dec
mov
xchg
mov
dec
cmp
ret
dec
mov
sarb
mov
call
or
pop
sub
adc
add
add
mov
sbb
add
jb
cmpsb
ljmp
mov
pop
mov
lahf
aam
or
mov
test
out
iret
mov
push
stc
and
jl
or
out
fldl
lods
dec
cmp
and
mov
lods
std
add
pop
dec
hlt
pop
je
add
aam
mov
test
enter
add
fiadds
add
cmp
mov
test
call
enter
je
mov
fnstenv
scas
dec
in
insb
sbb
test
mov
icebp
bswap
jle
mov
aam
add
xchg
ficompl
adc
jmp
or
dec
push
add
add
sar
call
ss
call
pop
add
test
loopne
jmp
xor
inc
incl
lods
xchg
xchg
adc
dec
jno
iret
pop
inc
incl
cmp
mov
push
incl
dec
je
fildl
test
popf
sarb
pop
jl
in
les
sbb
lret
lea
add
adc
or
jp
add
inc
or
mulb
add
cmp
jp
andl
add
aas
mov
fdivp
hlt
jno
nop
popf
add
mov
std
stos
and
mov
or
mov
add
xlat
and
inc
add
sahf
pop
push
and
ret
xor
int3
popl
add
add
xor
cld
and
inc
mov
sbb
sbb
lods
sti
cmp
int3
aaa
push
int3
ja
jns
inc
std
ds
lods
jae
enter
xchg
popa
ja
mov
inc
cmp
adc
xor
add
and
cli
hlt
push
mov
shll
jno
cmpb
testb
cli
xor
add
add
call
clc
lds
jmp
cmp
js
mov
cmp
xor
or
sbb
jmp
xchg
js
scas
sbb
jno
add
iret
mov
push
jbe
ret
shlb
inc
shlb
out
and
call
divb
cmp
insl
cmp
and
adc
add
add
pushf
mov
jbe
dec
stc
jae
cmp
mov
imul
mov
inc
mov
insb
sbb
test
mov
sbb
sbb
push
ds
xchg
pop
jnp
inc
adc
mov
out
adc
sti
aas
pop
xchg
and
stos
dec
call
sub
inc
call
pop
outsb
sbb
jnp
or
outsb
pop
cld
jmp
je
and
cld
fldt
mov
pushf
xchg
add
mov
addb
fldcw
xor
pop
aam
std
xchg
stos
cltd
inc
jnp
sti
je
lods
inc
xchg
jg
sti
jne
sbb
inc
lcall
mov
mov
insl
aas
or
mov
cmp
rclb
orl
mov
or
std
mov
cmp
jmp
or
std
ds
cmp
hlt
mov
bound
cmp
pop
scas
and
jne
aaa
ret
dec
out
cmp
scas
mov
xor
leave
or
add
add
jbe
std
xor
cld
and
push
jns
xchg
inc
mov
jecxz
cmp
and
shll
test
ret
loopne
inc
sub
rcll
inc
inc
push
inc
inc
aas
push
xchg
mov
inc
mov
aam
add
movsb
scas
xchg
cld
push
out
mov
add
add
add
iret
push
adc
mov
pop
popf
insl
fwait
mov
out
call
icebp
mov
cmpsl
adc
mov
mov
jmp
jne
jp
dec
xorb
shll
ds
xchg
jl
sub
cld
sbb
adc
jne
subb
aas
mov
stos
adc
jb
aaa
mov
add
add
sub
pusha
sub
std
cs
sbb
push
stos
jnp
stos
mov
mov
jmp
mov
add
sub
test
out
es
stc
mov
sub
sbb
pop
sbb
mov
out
es
mov
je
pop
pop
inc
dec
adc
leave
push
in
cmpl
jg
in
mov
sti
incl
add
add
adc
mov
push
out
mov
push
push
sar
adc
aas
add
push
js
pop
shlb
adc
loop
adcl
add
jg
je
scas
in
das
xchg
add
call
call
dec
sbb
jnp
je
sarl
mov
push
inc
mov
dec
in
mov
add
in
ret
mov
mov
mov
and
mov
cmp
jmp
mov
cmp
pop
bound
cmpps
std
inc
mov
ret
decb
incl
push
sub
pushl
sub
in
cld
call
mov
sbb
add
cmp
sbb
mov
test
xlat
pusha
dec
out
jbe
fs
mov
mov
mov
xchg
out
ss
jmp
out
xor
repz
adc
mov
insl
mov
cwtl
imul
out
test
out
cmc
cwtl
imul
out
xchg
xor
repz
iret
cmc
xchg
add
add
out
jecxz
stc
or
mov
nopl
cmp
xchg
adc
ljmp
sub
mov
ret
cmp
arpl
cmpl
int
cmpsl
lds
cld
mov
call
mulb
mov
cld
mov
mov
cmpsl
jae
mov
cmpsl
or
mov
mov
xchg
stos
cld
insb
xor
push
cmpl
jecxz
icebp
movsb
les
cld
ss
call
jbe
subl
subl
mov
jb
andb
movlps
fs
dec
jge
adc
sub
dec
sub
adcl
sti
call
push
pusha
inc
iret
cld
push
rclb
jno
ret
sar
cld
hlt
cld
mov
inc
aas
add
push
adc
sti
jne
imul
pop
xchg
xchg
push
push
push
push
inc
js
and
dec
pop
stos
cld
jae
or
cmp
add
adc
stos
fcomp
idivb
jne
cmc
mov
sar
clc
lods
push
ds
cmp
mov
jmp
mov
inc
test
arpl
cmpl
and
inc
mov
fimull
movsl
mov
cmp
ljmp
ds
cmp
dec
mov
in
xchg
test
push
lds
subb
add
mov
add
subl
cmp
outsl
sub
xor
cmpsl
mov
ss
call
loopne
mov
add
mov
inc
adc
xchg
fs
and
stos
test
dec
sbb
lahf
xchg
inc
das
iret
loop
mov
sub
sbb
pshufw
xchg
cmp
add
out
jle
out
dec
mov
jecxz
add
add
cs
mov
dec
xchg
andb
and
imul
adc
mov
mov
or
bound
jmp
or
pop
cmp
cmp
and
idiv
bound
adc
xchg
and
push
push
add
push
sbb
imul
add
add
jge
stos
ss
sub
push
mov
lea
negl
add
and
loopne
sub
add
cmpb
repnz
adc
jno
es
push
ret
xchg
and
inc
pop
je
inc
scas
push
ret
int3
gs
je
push
cmc
aas
jmp
xor
pop
inc
sbb
je
xchg
pop
je
add
add
out
add
pop
inc
or
jno
pop
fs
je
push
cmc
aas
call
dec
mov
push
insb
inc
fsubl
inc
int3
test
mov
call
push
mov
pop
imul
jp
hlt
mov
push
imul
push
imul
sub
mov
add
mov
clc
insl
hlt
mov
sbb
mov
test
mov
movsl
inc
xchg
sbb
jno
adc
jns
sbb
jnp
mov
andb
push
mov
je
in
out
movl
inc
aas
mov
cmp
shl
cmp
push
jmp
lods
data16
sbb
andl
iret
addb
add
jne
cmp
jne
and
mov
mov
fbstp
xchg
fisttps
cmc
mov
adc
gs
loopne
arpl
scas
mov
cmp
jae
test
imul
mov
jg
rclb
push
add
fistpl
arpl
lea
ret
call
mov
mov
push
fs
jmp
ss
add
xchg
or
jmp
loop
or
ljmp
or
sub
and
xchg
test
in
pop
push
scas
pusha
mov
stc
in
or
out
popl
scas
stc
lahf
cld
scas
xor
stc
add
mov
inc
xchg
or
dec
fsubs
adc
popa
inc
add
filds
shlb
push
mov
xchg
daa
lret
into
mov
or
sbbb
add
fcoml
mov
mov
in
and
pop
push
jg
pop
xchg
jg
mov
add
xchg
sti
incl
add
add
or
or
testl
sbb
movb
in
pop
arpl
adcb
test
xor
ror
pop
or
test
inc
mov
pop
adc
cmpb
mov
out
sbb
mov
shrl
leave
wrmsr
push
xor
addb
lock
push
mov
orb
in
in
mov
mov
inc
xchg
cwtl
fldl
iret
pop
or
mov
enter
mov
xchg
loop,pt
inc
loop
push
push
ret
jb
xor
neg
xchg
xchg
addr16
scas
xchg
arpl
xchg
ja
mov
mov
add
add
push
repz
xchg
jg
mov
outsl
jg
leave
mov
mov
mov
mov
add
call
or
popf
jno
mov
sbb
rcrb
cmp
dec
or
leave
daa
sarl
adc
xor
adc
or
outsb
push
adc
push
popa
push
and
mov
dec
jle
lcall
mov
cld
xor
or
mov
stc
jecxz
adc
hlt
mov
mov
mov
scas
mov
mov
cmp
add
loope
cld
push
xor
jae
rclb
int
mov
pusha
outsl
orl
cli
outsl
or
jmp
test
daa
inc
and
in
adc
jno
xchg
mov
aaa
fnstsw
mov
cmp
movb
movb
movb
in
mov
xchg
jg
xchg
pusha
jg
mov
jecxz
add
jo
or
dec
wbinvd
xchg
or
pop
dec
inc
add
jno
mov
cmp
nop
orl
add
add
mov
jmp
int3
push
setns
std
pushl
mov
jp
test
orb
std
sbbb
add
or
add
mov
sub
loop
inc
inc
mov
sbb
test
mov
out
push
dec
jbe
or
cmpsb
sbbb
inc
inc
mov
sbb
test
mov
or
add
add
sub
icebp
mov
call
data16
push
cmp
cmpsb
orb
xchg
imull
out
xchg
push
test
cmp
pop
flds
jmp
adc
sub
push
and
pop
inc
push
push
jg
pop
or
fcmovnb
icebp
add
mov
add
out
lods
pusha
rorl
xchg
imul
jb
movsb
xor
inc
mov
xor
inc
adc
movsl
adc
ret
loopne
xor
insl
je
push
test
add
jge
cmpsl
mov
out
sub
cld
imul
mov
jmp
xor
test
jmp
jmp
sldt
add
insb
push
adc
dec
pavgb
enter
gs
pop
mov
mov
add
ds
adc
int3
fnstenv
push
or
mov
stc
jecxz
data16
adc
outsl
jae
repz
jmp
lahf
imul
hlt
sub
out
pop
cwtl
cld
imul
inc
add
push
or
sti
es
mov
add
add
andb
xchg
hlt
pop
mov
xor
or
or
nop
ja
add
or
add
add
dec
fimull
call
or
clc
in
or
or
or
stos
and
add
push
nop
std
addb
call
inc
mov
call
push
mov
push
fisttps
dec
mov
test
scas
test
sti
mov
call
lods
xchg
lret
mov
rcll
xchg
add
jb
rcll
mov
sbb
sbbl
mov
insl
je
inc
stos
sub
or
movsl
sbb
add
lret
xchg
sbb
adc
add
add
test
push
push
jae
add
mov
dec
or
push
jo
enter
sub
fs
jns
out
dec
outsl
je
das
cmp
callw
pop
std
lock
call
add
ffree
in
scas
mov
jg
nop
out
xor
pop
add
test
insl
sbb
inc
jae
stc
sbb
add
add
cltd
call
add
or
std
stos
xchg
and
enter
mov
out
mov
out
xor
and
daa
je
or
add
fwait
push
adc
scas
movsb
jle
aas
mov
add
xchg
jae
ss
sub
inc
divl
popl
cmp
add
add
xchg
cld
imul
xchg
jmp
iret
call
or
xchg
mov
sbbl
xchg
cld
imul
dec
push
test
and
imul
xchg
push
add
movb
out
or
push
jne
dec
inc
push
pop
jae
adcb
cld
lcall
iret
jl
dec
in
addb
or
inc
push
mov
sub
pushf
arpl
mov
jb
addb
test
cwtl
cld
lcall
mulps
notl
adc
or
pop
inc
ljmp
call
sbb
and
sbb
mov
cmpl
jae
sbb
mov
add
sub
prefetch
jmp
mov
notb
jns
mov
add
cmp
mov
or
and
sub
mov
cmp
orb
mov
push
in
stc
scas
push
adc
out
mov
or
jmp
xchg
or
jnp
movsl
jle
push
xor
arpl
or
dec
call
lods
add
cmp
in
mov
out
cmp
jmp
sbbb
jnp
imul
je
bound
push
test
shrl
mov
movsl
push
aas
dec
roll
fildll
xchg
in
adcb
out
add
or
decb
xchg
data16
fs
mov
out
jnp
add
fisttps
xor
aaa
mov
es
and
xchg
test
inc
xchg
data16
add
cld
outsb
call
leave
add
mov
stc
mov
rcll
out
jnp
cld
imul
dec
call
mov
add
push
push
mov
sbb
mov
loopne
decl
mov
psubw
add
dec
ret
lds
mov
out
lock
cld
pop
hlt
sarb
jmp
xchg
gs
into
gs
pop
data16
push
xchg
mov
jmp
sbb
or
push
inc
add
mov
and
push
jmp
fsubl
jg
lcall
add
add
or
mov
or
pop
push
inc
add
jne
pop
dec
mov
mov
adc
cld
orl
adc
add
xchg
test
or
adc
call
sar
sub
mov
lods
sbb
movsl
pop
repz
add
incb
pushf
sub
mov
push
mov
ds
mov
pop
mov
repz
out
jg
add
jns
aas
mov
aas
or
mov
outsb
dec
mov
xor
mov
jmp
jle
js
inc
mov
scas
or
cmp
enter
pop
mov
add
jae
fsubrl
jmp
std
xchg
add
jo
out
mov
and
xchg
std
sbb
add
lea
add
mov
or
xchg
outsl
shlb
push
and
pop
push
addr16
iret
jmp
add
adc
or
cwtl
add
mov
xchg
outsl
shlb
push
push
add
repnz
ljmp
adc
adc
add
mov
rcll
pop
mov
daa
mov
cli
fistpll
add
pop
mov
into
add
push
cli
fsubl
pop
daa
mov
popl
outsl
insb
nop
xchg
das
fisttpl
lahf
ror
adc
int
mov
adc
cmpsl
mov
popl
pop
jl
xchg
pop
mov
aas
or
add
cli
out
adc
daa
mov
popl
imul
inc
add
mov
cmp
and
sub
test
sahf
test
nop
add
test
mov
sub
pop
sbb
dec
adc
je
sbb
mov
pop
adc
add
xchg
jg
push
and
adcl
fs
cld
call
int3
stos
pop
jne
inc
add
mov
daa
lcall
dec
push
sti
sub
lock
xchg
adc
push
pop
or
mov
inc
aaa
jns
clc
jb
add
and
cmp
xchg
out
leave
add
xchg
dec
inc
mov
add
stc
push
hlt
or
roll
mov
mov
sub
inc
in
cs
scas
mov
cmp
repz
add
mov
out
leave
adc
sbb
orl
std
ss
mov
xchg
push
push
repz
lock
lea
shrl
int
add
add
and
mov
ljmp
lcall
icebp
out
ljmp
jbe
nop
hlt
pop
es
mov
loop
je
inc
aam
sbb
cmpsl
xchg
jmp
or
shl
or
mov
xchg
es
or
xchg
lcall
mov
add
scas
adc
jo
add
ret
in
popl
rcr
cld
mov
dec
jmp
push
or
fisubrs
inc
add
mov
test
popl
push
or
nop
add
aaa
jno
out
xor
jmp
imul
jmp
xor
jmp
mov
popl
aam
add
add
xchg
jmpw
rolb
push
jmp
clc
xchg
call
add
fidivrl
lret
adcb
add
arpl
cli
fisttps
andl
test
popl
add
add
mov
add
loop
xchg
or
pop
fwait
adc
std
or
adcb
add
idiv
jmp
hlt
push
imul
add
inc
dec
jl
sub
xchg
cltd
je
fbld
mov
ret
sti
sub
sar
or
jo
add
mov
or
std
ret
cmp
ficomps
fdivrs
sbb
adc
add
sti
mov
adc
cmp
add
mov
sbbb
std
ret
cmp
inc
cwtl
aas
mov
addl
sbb
insb
orb
jnp
add
dec
add
imul
dec
xchg
or
into
out
sbb
shlb
sti
loop
test
js
push
mov
imul
lods
js
push
mov
imul
mov
stos
ret
shrb
ja
add
mov
repnz
jne
mov
pop
xor
fldcw
mov
sub
xor
call
sbb
outsb
dec
push
or
or
test
arpl
and
mov
test
imul
add
add
jnp
push
xor
add
int
imul
push
rcl
aaa
and
add
xor
sbb
xor
or
cmpsb
cwtl
shll
push
ret
xchg
rclb
jg
jo
fiadds
call
cmpl
test
jmp
mov
in
mov
test
inc
mov
add
mov
jmp
xlat
into
call
test
std
xor
dec
cmpl
jmp
cmpsl
cmpl
inc
and
sbb
add
inc
and
push
addl
jne
nop
add
pop
lret
fmull
add
cmpsl
or
add
out
cltd
adc
xchg
ret
add
add
nop
add
ficoml
xor
mov
or
or
add
xor
negb
add
arpl
push
mov
add
lods
add
push
mov
mov
mov
dec
cmc
leave
mov
ja
add
fstpl
jne
jne
add
add
aas
or
ja
add
or
add
fidivl
je
addl
stc
mov
jge
sbb
loope
fisttpl
mov
sub
call
add
add
repz
xchg
into
inc
mov
fnstcw
push
jnp
xchg
outsb
inc
sub
addr16
cmpsl
jmp
loopne
mov
mov
mov
cli
cld
push
cmpsl
or
sbb
shr
nop
push
dec
sub
out
jbe
test
jnp
xor
add
mov
je
das
add
mov
scas
sbb
scas
adc
neg
xchg
ret
sub
add
add
xor
or
sub
adc
dec
or
mov
test
movl
repnz
test
push
mov
scas
xor
adc
scas
adc
enter
xchg
test
test
jb
mov
aad
add
xor
jmp
movsb
adc
movups
push
and
push
into
sub
add
add
sbb
lret
std
shl
int3
je
inc
adc
mov
jb
inc
jae
or
add
shl
popf
cltd
std
mov
and
or
add
sbb
add
or
adc
jmp
adc
or
divl
inc
jecxz
jg
rcll
pop
and
sbb
pushl
cld
cli
and
push
cli
mov
jne
sub
cmpsb
mov
xchg
ja
jge
repz
std
push
in
inc
std
jmp
or
cmp
mov
add
mov
sub
and
push
call
add
sub
add
add
push
lock
fcompl
ss
loop
jbe
cmc
jle
cli
ret
mov
mov
sbb
inc
cwtl
pusha
gs
or
gs
mov
repnz
rcll
push
scas
jmp
pushl
push
mov
in
dec
iret
xchg
scas
mov
jle
add
add
add
mov
int
test
test
add
xchg
add
stos
pop
mov
or
call
cld
loopne
bound
shll
pop
jae
mov
mov
scas
test
inc
mov
jb
mov
pop
pop
out
sti
mov
jns
in
inc
jmp
add
inc
jmp
cmpsl
out
inc
jmp
pop
add
push
add
je
inc
jmp
addl
jmp
mov
inc
jmp
sub
inc
jmp
popl
inc
jmp
sahf
add
rolb
inc
add
insl
jbe
fsubrl
inc
fsubrl
inc
int3
insl
jbe
int3
insl
jbe
pushf
jo
inc
pushf
jo
inc
mov
inc
mov
inc
pushf
jo
inc
pushf
jo
inc
mov
inc
mov
inc
pop
jo
inc
pop
add
dec
lret
jb
dec
mov
jb
pop
mov
jne
dec
jae
inc
sbb
jne
sbb
jne
or
jne
or
insl
inc
sbb
jne
sbb
jae
or
insl
inc
or
insb
inc
fmull
loope
je
mov
je
jnp,pt
add
add
jnp
data16
je
cmpb
jnp
retw
jge
data16
hlt
data16
data16
data16
jnp
out
hlt
data16
data16
hlt
cmpsw
ja
data16
hlt
pop
js
data16
hlt
data16
hlt
data16
hlt
data16
hlt
data16
je
in
je
mov
ret
movsb
inc
add
bound
add
shld
loope
imul
out
dec
dec
stos
lea
out
cmp
stos
sbb
daa
jmp
cld
aad
in
popf
jnp
pop
in
sub
jne
pop
adc
paddsb
jp
cli
test
jecxz
pop
or
add
aam
fisubl
sbb
or
adc
add
add
adc
cli
iret
ret
inc
mov
pushf
jmp
scas
jg
mov
mov
iret
jmp
out
push
add
lods
adc
icebp
jp
pop
jne
cmp
pop
ret
shrb
add
lret
push
shll
imul
jns
in
add
orl
aaa
sti
and
mov
xchg
stos
stos
inc
orl
cld
cs
lret
lods
mov
hlt
xchg
add
lea
jmp
mov
add
arpl
test
cmp
mov
add
mov
loopne
std
or
add
jnp
pushf
adc
push
cmp
add
mov
add
dec
rclb
test
add
add
mov
sbb
test
sub
add
std
outsl
std
lcall
mov
cld
add
dec
lea
mov
jns
rolb
or
loope
addl
jno
sbb
test
inc
and
add
push
call
mov
add
ret
sahf
inc
jbe
data16
sbbl
push
std
data16
loop
sbb
arpl
test
mov
ret
sti
gs
add
adc
je
repz
pop
xchg
adc
data16
cmp
or
jp
pushf
enter
std
mov
data16
loope
jns
movsl
test
lcall
sbb
js,pn
test
or
mov
js
sbb
add
add
dec
stos
lods
insl
inc
sub
mov
outsb
adc
je
lock
jns
mov
insb
or
mov
aam
dec
cmp
cmpb
jno
in
add
nop
add
push
or
mov
ja
jns
cmpsl
pop
mov
jno
cmp
cmpsl
mov
fs
jge
xchg
in
es
cmp
stos
adc
sbb
pusha
mov
xchg
andl
xchg
xchg
add
mov
es
mov
sbb
lahf
lret
and
lahf
shll
scas
sub
jmp
push
test
xchg
insl
jl
leave
inc
jbe
jb
adc
out
or
jmp
int3
jne
push
mov
mov
push
inc
add
mov
test
popf
or
dec
psubsw
cs
jmp
scas
je
jns
jge
cmc
incb
jmp
jp
out
int
and
mov
arpl
xchg
sub
sbb
dec
and
xchg
push
inc
testb
les
sti
imul
xchg
xchg
dec
lea
push
sti
decl
add
add
mov
fildl
and
push
and
mov
lret
and
jmp
mov
sti
xchg
adc
inc
mov
inc
js
or
aad
inc
and
inc
sbbl
inc
jns
std
test
cwtl
cld
push
ljmp
xor
fmull
in
add
dec
xchg
lods
push
std
test
mov
rcl
jbe
lock
add
mov
add
cltd
pop
pop
adc
fneni(8087
or
push
mov
cmc
jno
lock
dec
imul
test
idiv
mov
add
inc
cwtl
fbstp
cmpsb
add
jge
ds
loopne
sbb
pop
sbb
imul
jmp
fbld
jmp
add
cmpsb
rcr
ret
xor
sahf
ffreep
mov
jmp
test
fcomps
outsb
push
cld
mov
sub
imull
sbb
ret
fimull
sub
xor
mov
jg
aad
or
xchg
cld
call
hlt
sub
cld
call
adc
jbe
call
mov
inc
lahf
push
cmpl
lods
in
scas
jmp
dec
mov
or
push
mov
shl
sti
add
or
adc
fucomp
xchg
pop
je
fidivrl
rol
imul
or
out
ret
sti
idiv
dec
jne
jne
jo
stc
jb
popa
mov
lcall
jns
mov
shr
ret
sti
mov
mov
add
add
sub
popl
loop
sti
or
out
sti
hlt
negb
rcrl
rcll
dec
push
xor
sti
decl
js
bswap
jne
enter
mov
rcrb
les
inc
add
jne
push
add
push
ljmp
xchg
inc
push
mov
sbb
push
and
xor
jmp
jo
sbb
add
fadd
jbe
rorl
cmp
arpl
add
jmp
cmc
sbb
pop
movsb
add
daa
into
pop
test
add
mov
xchg
or
xchg
loopne
cmp
add
cmpsl
pop
ja
add
out
pop
dec
or
fdivr
pop
addr16
fmuls
mov
add
lcall
xor
gs
pop
mov
nop
add
add
add
add
data16
jg
dec
scas
cld
orl
push
andb
lret
cmpsb
add
icebp
jbe
jp
popa
addb
mov
jae
std
adc
mov
enter
nop
je
and
adc
int3
push
adc
divl
inc
testb
mov
test
jp
pop
dec
pop
jo
test
add
add
add
rorl
adc
mov
xor
mov
sub
hlt
jle
mul
fdiv
add
les
sub
mov
add
mov
mov
fimull
dec
mov
dec
lods
sub
mov
nop
mov
fnstenv
and
in
icebp
les
out
adc
sbb
adcb
adc
js
push
outsl
xchg
adc
imul
gs
xor
das
cmp
sub
cld
mov
xchg
mov
sub
nop
jne
rcll
aaa
and
xchg
mov
jne
rol
mov
jl
movsl
inc
push
push
mov
jl
mov
add
add
xchg
push
push
lret
std
mov
shlb
repnz
and
enter
adc
addl
inc
lahf
ret
fsts
mov
pop
xchg
mov
jg
push
lock
ret
dec
mov
andl
gs
cltd
imul
imull
rolb
add
js
or
test
out
push
test
dec
imul
or
dec
push
dec
repnz
xorb
fisttpll
xorl
xchg
mov
pop
mov
jb
sarb
call
idiv
pop
cmp
inc
jbe
dec
cld
insb
mov
add
and
mov
mov
mov
out
adc
jae
ss
inc
mul
dec
cld
cld
mov
je
test
loop
adc
adc
mov
sub
dec
add
loop
imul
inc
iret
lret
mov
xor
ret
notl
jnp
pop
mov
pusha
lret
mov
outsb
lock
jo
dec
sbb
pop
xor
icebp
jmp
insl
cmp
ss
mov
fisubrl
insb
adc
dec
out
xchg
loop
cmp
jle
cmp
icebp
imul
push
jecxz
inc
adc
psubsb
mov
or
push
jb
imul
mov
cld
ret
cld
sbb
ds
pop
mov
loop
or
cli
mov
sbb
and
dec
arpl
data16
mov
lcall
jb
mov
push
xchg
imul
stc
mov
jg
mov
les
out
ss
bound
dec
add
es
jmp
aam
in
mov
inc
popl
gs
ret
xchg
push
orl
es
ljmp
cmp
call
fdivr
add
cwtl
sbb
jmp
std
call
push
jo
cmp
adc
roll
clc
xlat
push
in
fsubrs
mov
adc
jp
xchg
xorb
ja
sbb
mov
notl
std
mov
leave
pop
leave
fiadds
add
addb
jmp
dec
in
fimuls
cmc
mov
push
cs
push
dec
ss
inc
jno
push
mov
sub
in
push
adc
aas
cmp
stos
sub
add
xor
das
add
clc
add
push
xor
add
jb
mov
jmp
test
cli
jl
outsl
mov
push
bnd
lock
add
xor
mov
sti
cld
cmp
adc
mov
jb
in
dec
clc
ds
cs
fs
sub
loop
mov
call
loop
ljmp
inc
pop
repnz
cli
add
out
add
jne
xchg
outsl
dec
lods
push
jmp
divb
lds
and
adc
lds
pop
rolb
mov
mov
fstpt
add
mov
jmp
inc
mov
and
cmc
into
outsb
out
dec
add
rolb
add
iret
add
aas
fldt
mov
add
je
push
dec
xor
test
repz
add
inc
test
shrl
neg
adc
mov
xchg
mov
rolb
call
movsb
iret
add
das
shll
xor
int
jae
stos
or
lcall
cmp
popl
pop
repnz
or
stos
lea
test
inc
jmp
pop
pop
into
mov
push
xchg
jbe
in
push
xchg
add
fisttpl
cmp
lods
inc
inc
add
mov
fldl
mov
inc
add
fimuls
jp
incl
jl
add
fcoml
cmp
pop
nop
rcr
fisttps
lods
adc
mov
test
imul
and
jmp
mov
ljmp
mov
mov
int3
adc
add
add
std
mov
lahf
js
std
mov
stc
rorb
mov
pop
popa
dec
cmpl
insl
xchg
mov
cmp
cs
or
mul
pop
js
add
int
add
outsb
lea
loope
ja
add
or
add
incl
add
add
jb
jae
cmpsb
add
mov
xlat
aad
in
xor
cmp
out
mov
xor
pop
inc
ror
dec
or
push
jb
sbb
sarl
add
lods
pushl
out
add
mov
movsl
xchg
jge
cmc
fs
jmp
iret
jmp
les
mov
push
mov
add
add
xchg
fildl
or
adc
mov
punpckhwd
add
in
icebp
add
mov
push
arpl
fcoms
adc
sub
jg
and
cmpsl
scas
adc
mov
sbb
or
icebp
rolb
cmp
fstp
add
stos
jnp
test
mov
shll
push
cltd
sbb
addr16
lret
push
mov
xor
cmp
xor
notl
into
mov
lea
cmc
and
dec
loop
jne
popa
aas
mov
repz
cmp
mov
cmpl
icebp
mov
inc
or
rcrb
add
mov
int3
jmp
rorl
add
mov
test
ljmp
add
fmull
add
popa
xchg
lds
lcall
add
and
lcall
sbb
mov
ret
ret
add
scas
mov
shrb
mov
inc
in
inc
pop
orl
mov
negl
aas
test
and
xor
mov
sbb
mov
adc
add
mov
jne
shl
adc
or
xchg
fnstsw
cld
add
outsl
lea
dec
adc
mov
cmpl
repz
mov
add
iret
jmp
inc
jp
out
add
adc
adcb
bound
push
movsl
divl
jnp
or
scas
adc
or
mulb
pop
inc
sbb
iret
xor
mov
adc
mov
jae
pusha
jp
fnstcw
or
lods
dec
stos
shll
into
xor
add
add
cmp
push
ss
popf
add
cltd
cmp
scas
mov
sbb
xor
notb
xor
mov
pop
adc
inc
and
int
mov
push
cmp
icebp
ljmp
add
add
aas
int
repnz
fisttpl
adc
fs
push
call
add
add
aam
cmc
fsubrl
adc
pop
inc
sbb
xchg
lea
iret
xchg
xchg
add
mov
mov
add
cld
jae
outsl
in
mov
pushf
xchg
shlb
add
bound
rcr
pop
add
sub
xchg
imul
andl
or
call
test
out
inc
jnp
out
ljmp
mov
cmp
adc
push
push
shr
add
jmp
fnstsw
or
mov
out
jne
dec
sbb
ret
test
xorl
mov
push
pop
std
test
sbb
loope
out
sti
out
cld
add
sbb
test
xor
add
add
dec
shr
loopne
pop
mov
pop
jle
jmp
std
xor
sbb
lods
loop
or
mov
call
fwait
out
mov
mov
lds
add
nop
inc
and
xchg
andl
jge
int
jnp
mov
dec
jge
out
repnz
sti
push
repz
pop
rorb
nop
pop
mov
repnz
dec
aad
mov
sub
mov
adc
push
push
fidivrl
sti
or
adcl
mull
and
rclb
pop
mov
out
gs
dec
cli
or
pusha
or
fildl
and
lret
int
gs
loope
daa
push
fsub
icebp
repnz
add
mov
stc
push
pop
jne
adc
push
loope
iret
add
sti
sub
cli
pop
cld
fs
adc
add
jb
pop
cld
jb
addr16
jbe
inc
ficompl
xchg
fnstsw
lret
mov
test
pop
stos
data16
sub
adc
jbe
push
dec
ret
test
mov
add
add
jmp
adc
jbe
das
sub
pop
add
nop
std
je
pop
std
je
pop
std
jno
pusha
nopl
dec
mov
call
mov
mov
cmp
mov
pusha
dec
add
dec
jle
dec
inc
sub
aaa
stos
je
cmp
aaa
xor
add
add
add
popl
inc
adc
sbb
sbb
outsl
das
ret
and
xor
loope
mulb
inc
sti
jae
adc
mov
jae
xor
push
pop
outsb
lahf
lds
mov
jae
mov
icebp
adc
pop
inc
add
sub
jmp
movsb
dec
jp
sahf
inc
pop
mov
pop
in
cld
jp
dec
cld
ds
cld
hlt
lea
and
add
push
jns
inc
push
add
mov
lahf
mov
std
test
xchg
add
test
roll
imull
push
cs
jg
mov
push
and
add
hlt
stos
rclb
jmp
clc
mov
cwtl
pushl
push
fs
mov
paddsb
sbbl
rorb
cmp
push
cmp
cmc
pop
mov
xor
ret
out
xchg
dec
imul
jae
add
mov
shll
push
js
pop
cmc
pop
stos
iret
jmp
fisttpl
leave
sti
mov
xchg
fcmovnu
and
rcr
and
lret
jmp
adc
into
pop
or
testb
or
test
movsl
pop
dec
ds
or
xchg
sub
inc
cld
aas
lods
pop
aam
jns
or
pop
ljmp
xchg
insb
jl
add
test
jp
sti
fadd
add
push
jg
push
push
mov
mov
sbb
roll
cmp
je
stc
call
ds
test
lods
or
mov
outsl
or
xchg
add
mov
xchg
add
dec
aas
cld
mov
add
jae
adc
lret
jbe
fs
sbb
add
inc
xchg
je
inc
fdivrp
incl
add
add
adc
les
or
mov
or
fadd
push
lea
dec
push
mov
pop
or
sub
dec
popf
add
sbb
and
repnz
mov
lds
lock
mov
adc
mov
jno
aas
in
stos
add
or
fisttpl
gs
xor
pop
push
xchg
mov
add
lock
call
add
das
ret
add
sahf
inc
sbbb
dec
jae
into
add
imulb
std
mov
call
cmpsb
add
pop
push
jmp
dec
adc
mov
jle
popa
or
push
std
xchg
iret
jmp
fisttpl
pop
or
cmp
add
add
popl
sub
xchg
push
mov
adcb
cmp
push
mov
mov
mov
mov
out
pop
or
xor
ds
xorb
mov
cmp
pop
adc
in
sahf
push
jge
cltd
leave
cmc
popl
cld
in
add
lds
pop
mov
sbb
aam
bound
andps
add
xor
pushw
inc
jmp
jae
add
jbe
xchg
movsb
stc
negb
inc
jmp
mov
in
leave
dec
call
fdiv
push
sbb
or
push
mov
dec
cmp
add
sahf
mov
mov
arpl
jne
bswap
adc
add
add
shll
aas
jnp
addl
shll
lea
insb
dec
jmp
insb
std
jne
mov
clc
call
outsw
or
push
or
lahf
adc
aam
or
lds
pop
push
cld
push
pop
cmp
push
jle
in
and
std
addl
add
icebp
arpl
mov
hlt
dec
push
cld
pushl
add
xor
fwait
adc
cld
ds
call
mov
dec
push
mov
movsl
sub
mov
ljmp
push
mov
pop
xor
or
pop
cmp
imul
mov
dec
pop
jl
dec
mov
add
add
adc
mov
sub
dec
push
jecxz
push
ss
add
push
xchg
mull
fwait
adcb
clc
mov
mov
outsb
inc
mov
in
adc
jmp
xchg
iret
jmp
push
adc
in
ja
mov
xor
push
xor
jp
mov
loope
or
jne
les
sbbl
sarl
out
incl
gs
and
mov
or
loope
mov
mov
test
stos
jo
in
loope
jle
xlat
testb
jmp
dec
mov
jle
clc
int
jmp
scas
aad
pusha
jne
mov
int
jne,pn
call
mov
inc
dec
mov
add
fcmovnu
adc
pop
add
push
jbe
add
sti
jmp
testb
fisubs
mov
add
xchg
push
movsb
push
stc
add
mov
mov
aam
call
fs
call
and
lods
jl
jbe
xor
add
or
inc
sbb
mov
decl
aas
lods
sbb
mov
mov
jg
add
add
fmull
or
int3
push
lock
push
fcom
ds
pop
dec
je
push
cwtl
sbb
pop
dec
jg
sub
in
push
xchg
mov
push
dec
popl
mov
add
cmp
mov
push
jnp
jecxz
flds
xor
sub
loopne
in
movsl
mov
call
xor
pushl
inc
add
adc
sti
in
add
hlt
roll
cmc
dec
repz
shlb
cmp
and
lret
repz
pop
inc
pop
jns
stc
mov
jb
add
add
std
jb
sarl
pop
cmp
outsl
mov
dec
push
aas
jae
call
pop
mov
inc
fnsave
xor
out
fs
jge
jmp
jecxz
lahf
clc
inc
mov
out
mov
fimull
stc
shll
rorb
add
pop
cli
adc
mov
xor
lds
add
add
xchg
pusha
dec
jmp
dec
jmp
in
mov
xchg
inc
ljmp
ret
cmc
loop
jnp
fcomip
popl
std
mov
push
jb
adc
pop
mov
fcoms
lods
call
int3
adc
xor
sub
lret
push
sbb
fs
shll
rolb
jg
jge
sub
call
add
dec
cld
insl
test
pop
or
rclb
xor
cmpsb
rolb
scas
dec
jne
in
xor
in
dec
xchg
sub
jl
dec
leave
lret
icebp
jmp
sub
paddsw
xchg
adc
xorl
aas
in
and
addl
jmp
push
das
outsl
or
sbb
call
je
cmp
or
dec
jmp
das
std
test
pop
mov
daa
push
stos
in
jmp
cwtl
call
test
out
xor
shr
add
dec
mov
call
rcr
inc
lock
push
arpl
add
mov
iret
push
stos
nop
mov
pop
xor
xchg
add
add
inc
lea
mov
aam
xabort
subb
test
mov
add
jle
inc
clc
jp
aam
mov
add
sub
mov
adcb
inc
and
jg
adc
pop
adc
sub
cmc
bnd
inc
xor
mov
xor
and
or
add
add
nop
loope,pn
pop
notb
cmp
or
addb
test
aas
jge
test
jg
mov
xchg
dec
push
les
xlat
orl
int
pop
xor
pop
mov
imul
notl
xor
inc
adc
pop
mov
vpminsw
push
sub
or
shrb
add
add
add
jle
aas
call
xchg
and
mov
adc
pushf
mov
ret
add
mov
add
jbe
or
jbe
add
xchg
rcll
in
mov
xchg
aaa
xor
inc
shll
test
mov
add
int3
call
xchg
xchg
and
pop
sahf
sti
xchg
scas
clc
jmp
pop
mov
jmp
ret
mov
adc
lea
adc
outsl
incb
int3
mov
push
xlat
cld
xor
mov
icebp
push
xlat
call
call
mov
loopne
mov
cwtl
mov
fs
add
add
fmuls
dec
or
ja
test
xor
ret
mov
ret
mov
daa
popa
lods
add
lahf
add
loopne
or
out
or
jnp
roll
sub
or
cmpb
add
xor
xlat
imulb
mov
test
xchg
mov
clc
gs
inc
cltd
je
push
std
inc
xor
inc
mov
fnsave
mov
add
mov
mov
je,pt
adcl
sbb
pushl
cmp
mov
xor
dec
cmp
fsub
jbe
add
in
repz
lret
js
xor
lods
pushf
lcall
cmp
xchg
cmp
xchg
popa
mov
pop
push
fst
fidivl
faddl
add
add
sbb
pop
movsb
inc
aas
push
cmp
cmp
add
mov
mov
xchg
jg
test
pushf
xchg
cmc
fimull
sub
int
pop
nop
jmp
out
lcall
mov
mov
adcl
les
add
pop
or
pop
cmc
jmp
adcl
jbe
push
mov
inc
stos
mov
add
mov
rcr
and
addr16
mov
mov
mov
inc
jmp
gs
rcrb
add
jmp
je
inc
jmp
mov
jns
or
insb
stos
mov
xor
jmp
gs
sub
add
add
adc
frstor
sbb
hlt
xchg
add
mov
add
cltd
bound
pop
jg
adc
popl
sbbl
cmp
fcoml
call
orl
flds
int3
nop
data16
fcomip
lea
mov
dec
incl
or
add
and
xchg
fbstp
sti
je
outsl
cld
xlat
dec
in
mov
outsw
cld
test
outsl
lock
dec
lcall
adc
std
pushl
ret
mov
in
ret
imul
dec
add
jbe
imul
inc
xor
leave
sar
fidivrl
outsb
add
add
add
cmp
mov
into
jae
mov
or
xlat
xchg
xchg
or
test
verw
nop
aaa
or
xor
sbb
je
mov
jp
pushl
stc
dec
add
je
push
imul
incb
outsb
push
inc
inc
sub
in
push
jnp
fsubrs
mov
mov
loope
xor
sub
stc
xor
push
mov
ret
outsb
pop
andl
xor
jmp
ja
inc
push
dec
ficoml
sub
das
or
lods
xlat
lea
popf
xlat
cmp
inc
repz
into
rcl
aaa
dec
dec
mov
vcvttpd2dqy
add
aas
sbb
cmpsb
in
jmp
insl
icebp
mov
push
xchg
cld
imul
call
mov
dec
or
stc
rorl
ja
nop
push
bound
stc
into
xchg
push
call
call
push
bound
popl
lcall
call
jb
cmp
add
mov
test
dec
lea
je
push
shr
xchg
std
inc
iret
loopne
pop
loopne
push
xor
xor
mov
sarl
fsts
dec
call
mov
xchg
clc
jne
pop
add
cwtl
cmp
adc
pop
add
test
flds
pushf
mov
sti
dec
sub
add
jae
int3
pushf
mov
push
adc
pop
call
mov
lea
addl
add
jnp
xor
pop
dec
add
clc
dec
add
jb
cmp
add
mov
add
or
into
lock
mulb
xchg
scas
cmp
sbb
testb
mov
mov
addb
jb
dec
jnp
mov
lods
mov
xor
add
hlt
fbstp
test
sub
add
or
js
lock
sub
push
xor
pop
mov
movsb
add
dec
xorl
aaa
add
sbb
lcall
push
fidivrs
add
add
repz
push
lahf
add
ret
shrl
add
jp
push
lret
out
dec
pop
add
lar
xchg
aam
xchg
xlat
ret
ss
sahf
pop
mov
sub
shl
daa
add
jmp
jmp
rcrb
jmp
and
mov
add
add
pusha
jo
fists
lret
dec
add
mov
incb
push
inc
dec
mov
inc
rorl
icebp
pushf
mov
pop
mov
stos
outsl
jo
in
or
adc
xchg
add
mov
adc
mov
inc
repz
or
dec
loope
sbb
roll
je
stc
out
inc
add
cmp
pop
aaa
cmp
fwait
sbb
lods
cmovs
push
pop
mov
mov
mov
addl
add
or
mov
add
pop
sub
dec
bound
lret
std
jne
lods
movsb
stos
cmp
or
int3
call
pusha
push
jo
mov
adc
and
sub
dec
mov
decl
add
add
lret
jmp
fistl
je
pusha
outsl
adc
daa
aaa
mov
int3
cld
mov
iret
dec
mov
sub
hlt
mov
in
mov
add
pop
add
cld
dec
mov
or
in
add
mov
inc
lock
xor
mov
ja
sub
mov
sbb
pop
outsl
int3
cmp
jne
mov
imul
add
add
in
add
inc
xor
jne
test
test
in
jle
out
add
jle
shlb
rolb
icebp
subl
out
shrl
ljmp
push
movsl
rcrl
push
lsl
or
fdivrl
mov
les
push
ds
idivl
pop
fcoml
loopne
rolb
add
add
cmp
sub
pop
cmp
cmp
or
xchg
pop
outsb
cmp
cmp
lret
pop
leave
cmp
out
aad
xor
movsb
mov
mov
imul
cmp
mov
cmp
push
jle
enter
inc
adc
into
call
imul
add
mov
inc
stc
pop
push
pusha
movsb
mov
mov
cld
xchg
stos
fst
cmp
les
orl
and
push
xchg
sbb
adc
mov
cli
je
ja
ret
popl
mov
lahf
outsb
dec
push
popf
sbb
cmp
jmp
or
lahf
ret
ss
out
jp
incl
popf
std
jmp
xlat
or
adc
std
pushl
jno
inc
adc
add
ss
push
dec
lea
or
push
or
inc
xor
std
adc
fists
lea
jns
call
pop
sub
arpl
inc
push
xchg
call
mov
dec
std
decl
sub
std
mov
inc
pop
pop
cli
rorl
mov
pop
orb
mov
push
add
add
ficoms
out
mov
cmp
or
add
cld
int3
sub
data16
dec
inc
xchg
inc
mov
dec
adc
sub
mov
cwtl
int
or
add
jmp
push
call
xchg
push
or
pusha
int
icebp
cmp
cmp
or
idivb
testl
and
daa
add
es
add
pop
inc
mov
add
xchg
ret
mov
addr16
outsb
push
ss
xchg
add
fmuls
lods
sti
aaa
push
jbe
ljmp
adc
jmp
orb
add
add
add
xor
inc
xchg
adc
sti
jmp
pop
insb
nop
mov
push
mov
lahf
add
mov
hlt
push
cmp
jbe
call
shll
iret
add
mov
enter
sti
mov
mov
push
jns
jbe
pusha
lock
jmp
adc
or
sti
xchg
jmp
dec
mov
outsb
pop
lea
xchg
mov
mov
pop
hlt
push
mov
mov
add
mov
inc
icebp
out
xchg
not
or
mov
add
cmp
adc
mov
icebp
sarb
cmp
cmp
test
inc
jnp
xchg
sbb
pcmpeqb
cmp
inc
int3
adc
pmulhuw
stos
dec
fs
roll
push
mov
xchg
mov
push
rorb
jbe
dec
mov
std
decl
add
or
dec
lea
cmp
cmpl
xor
mov
ja
es
jne
mov
addb
add
in
daa
push
sbb
test
lods
aad
cmpsl
test
incl
das
fiaddl
int
leave
cld
mov
rcrb
sarl
xor
jmp
iret
push
xor
add
xor
incl
pop
es
stos
add
test
pop
cmp
add
rolb
pop
clc
inc
mov
out
mov
adc
cs
sub
icebp
xor
insl
leave
repz
inc
mov
sub
or
or
lret
aas
aaa
xor
mov
mov
mov
sub
sbb
insl
or
pop
in
add
mov
icebp
stos
pop
aas
popa
negl
in
inc
ffreep
mov
inc
xlat
xor
testl
mov
loop
cmpsb
in
add
leave
stos
push
xor
ljmp
mov
mov
data16
movsl
add
mov
add
xchg
xor
hlt
cmpsb
popf
inc
jmp
jge
test
add
mov
call
pusha
lret
cmp
sub
mov
pop
flds
orl
lahf
sti
aam
mov
add
mov
push
fs
aas
push
hlt
xchg
jae
hlt
in
xor
adc
cltd
dec
jo
cmpsl
shl
cmp
es
inc
jnp
and
add
popa
js
push
int3
dec
outsl
hlt
lret
dec
fmulp
add
pushf
fisttps
mov
pop
cmp
fbld
adc
fcmove
std
add
fdivp
call
dec
dec
xadd
push
outsl
or
in
jmp
pushl
retw
ret
dec
mov
jne
push
inc
fdivr
mov
pop
fsubr
sti
add
cld
add
pushf
add
and
add
or
jb
or
fnstsw
cld
ljmp
lock
fucomp
ret
cld
lret
jae
adc
cmpsl
cld
sub
xlat
ja
jns
cld
sub
outsl
lret
imul
pop
jl
repz
jmp
push
les
es
adc
jmp
xorb
add
aaa
sub
mov
push
lds
lcall
aaa
push
ds
lea
icebp
addr16
mov
std
push
cmpsl
iret
jmp
push
pushf
fldcw
ficomps
xchg
jg
add
jo
shrl
aaa
jg
mov
movsbl
xchg
jmp
iret
iret
sub
cwtl
movsl
and
cmpsl
xchg
testb
sub
sub
cltd
adc
ljmp
outsl
add
out
or
or
adc
rcll
lds
addb
daa
ja
test
mov
sti
xchg
jge
xchg
std
ficoms
xchg
sub
loope
inc
xorb
adc
fwait
test
jp
xchg
aaa
or
mov
rclb
ret
adc
mov
xchg
addl
mov
fmull
loope
std
rcll
aas
xchg
fdivr
je
push
movups
rolb
andl
cmpsl
fdivr
sbbl
hlt
xchg
daa
decl
hlt
test
sbb
rorl
push
sub
jmp
jmp
je
add
add
sbb
jmp
enter
push
std
xor
add
fisttps
dec
js
add
push
jmp
std
adc
lret
data16
jno
cmovo
mov
mov
add
cmp
bound
mov
add
das
jae,pt
mov
cld
jle
push
inc
divb
inc
sbb
add
add
mov
clc
xor
xor
jbe
mov
adc
sbbl
js
push
std
pusha
push
push
std
push
lahf
add
movsb
mov
xor
cs
mov
clc
sahf
and
sub
gs
ja
stc
add
sbb
xchg
bound
cmc
lcall
mov
add
popa
mov
icebp
mov
sub
fisubrl
mov
xchg
or
outsl
and
cmpsb
mov
cmp
aaa
lods
push
and
aas
in
mov
fildl
xchg
jmp
push
rcl
add
pusha
sub
stos
mov
add
testb
add
clc
mov
jne
or
ret
aaa
cmp
jne
jne
adc
testb
cli
daa
inc
pop
inc
xor
mov
dec
jne
jecxz
lea
fisttpl
jmp
sti
cmp
sub
push
sub
cmp
adc
add
loope
push
call
shl
sub
test
ret
jb
add
add
stos
in
leave
mov
or
jne
add
adc
mov
testb
sub
dec
add
test
ljmp
addr16
pushf
xchg
addl
hlt
fsts
xor
mov
ljmp
pop
lcall
adc
idiv
inc
mov
jg
call
cli
mov
fmull
std
mov
cmp
add
xchg
xchg
cmpb
cld
add
aaa
test
cmp
cld
pop
out
dec
mov
and
mov
cmp
cld
dec
addr16
mov
adc
add
lods
out
pop
mov
push
mov
clc
adc
dec
mov
sbb
add
xchg
xor
xor
sbb
add
xchg
sub
cld
lret
push
sarb
jae
mov
mov
mov
inc
xor
sub
mov
jmp
add
or
imul
mov
sub
mov
inc
xorb
cmc
insb
mov
in
addr16
aas
cmpsb
call
inc
mov
lcall
jl
add
and
jno
add
mov
jge
jmp
pop
push
mov
dec
scas
stos
and
jmp
sub
scas
stos
js
mov
xlat
je
out
mov
jb
cmp
or
insl
jge
fwait
sti
aam
jg
jmp
icebp
push
call
pusha
out
xchg
out
xchg
xchg
insb
mulb
call
loop
mov
add
notl
add
fimull
test
xchg
orl
xor
fidivrs
push
mov
cmp
pop
xchg
jge
mov
adc
repnz
or
btc
aad
or
pushf
dec
andl
dec
push
push
xlat
jmp
add
test
jmp
repz
sti
call
xchg
add
shrb
or
rclb
std
incl
popl
push
mov
test
xchg
std
push
sbb
mov
pushf
xor
sbb
std
dec
sbb
jb
jmp
add
ds
sti
lock
aaa
cli
xchg
xor
pop
inc
mov
or
test
adc
mov
pop
data16
cmp
cs
add
add
je
or
mov
je
inc
cltd
lahf
inc
dec
fwait
jg
xor
jns
sbb
jne
push
test
adc
jbe
xor
or
jns
or
add
fldenv
cmp
sbb
popa
mov
pop
adc
jle
add
fimuls
lds
add
add
add
sbb
push
repnz
pop
add
inc
addr16
jmp
popa
push
popa
cmp
xchg
je
cmp
cwtl
mov
movsl
rcr
shll
cmpsl
daa
rolb
mov
jmp
jmp
dec
cwtl
add
mov
mov
repnz
aas
test
movsl
movsl
data16
push
sub
or
icebp
mov
mov
das
sub
movsl
jo
mov
jns
mov
mov
add
sti
insb
dec
lahf
push
imul
mov
jmp
push
and
bound
push
repz
aaa
inc
in
mov
das
sub
pop
stc
bound
xlat
out
sub
repz
les
hlt
add
push
add
mov
jo
mov
add
or
mov
push
adc
fcompl
mov
ret
mov
cmpsb
lret
add
mov
enter
lret
mov
xchg
sbbl
data16
jo
pop
push
jmp
cmp
xor
dec
push
mov
add
mov
inc
and
popa
and
pop
push
aas
and
xchg
mov
test
add
jp
mov
inc
leave
inc
imul
loope
inc
movsl
mov
jae
mov
or
js
je
mov
jno
mov
ss
or
mov
sbb
inc
sbb
inc
or
mov
ss
std
sub
mov
leave
xor
loope
mov
shrl
test
test
add
mov
shr
inc
outsb
inc
mov
sub
test
inc
sub
nop
sub
test
or
mov
fldenv
mov
or
gs
fwait
push
and
mov
mov
cwtl
das
mov
or
mov
nop
jmp
mov
add
add
imul
shll
xor
out
ds
in
insb
mov
insl
fisubl
mov
add
shll
jb
and
bound
or
call
rcrb
pop
inc
loope
lea
xchg
mov
cld
fs
pushf
and
inc
dec
popl
cmp
mov
xchg
sub
fldenv
add
cld
pushf
mov
icebp
dec
and
das
addl
mov
sahf
in
loope
popl
pop
sbb
incb
iret
push
ret
mov
jbe
int3
xchg
call
fs
jae
and
add
push
dec
insl
roll
test
sbb
xchg
xchg
pushl
decl
dec
jns
add
add
xchg
push
push
jmp
inc
or
or
add
testb
clc
jecxz
or
jo
mov
inc
fdivr
dec
pop
hlt
test
outsl
inc
incl
mov
dec
xchg
jg
push
xor
incl
mov
adc
lea
ret
outsl
jecxz
xorl
paddw
and
incl
pop
call
xchg
pop
pushf
dec
sarb
scas
adc
sbb
jb
ret
cmpl
push
and
arpl
add
jb
jmp
mov
dec
fisubl
add
jne
jge
leave
mov
or
add
mov
imull
es
xchg
xor
add
test
in
cmp
cmpb
sub
lret
mov
nop
jmp
std
bound
xchg
scas
push
inc
jno
inc
or
or
jmp
std
xor
push
mov
inc
pop
mov
xchg
xor
add
add
scas
add
mov
cmc
push
mov
jmp
stos
shll
jp
lods
mov
add
xlat
sbb
popa
push
rclb
jg
gs
push
pop
test
mov
add
pop
or
add
std
fistpl
or
je
int3
push
add
sbb
out
js
ret
cmc
sbb
jbe
fs
lret
fdivl
mov
mov
sbb
xlat
fiaddl
fstpl
shll
rolb
dec
mov
leave
mov
xor
sbb
iret
cmp
mov
sub
cmp
jnp
cmp
dec
push
or
jnp
mov
fs
in
enter
cmp
js
adc
fstl
jp
or
add
test
aaa
jnp
mov
add
push
fcmovnbe
mov
mov
jb
adc
push
adc
inc
icebp
xor
das
jae
mov
aaa
mov
test
mul
out
adc
mov
dec
cli
push
outsb
lea
dec
pop
mov
jmp
pop
mov
adc
or
xchg
sub
paddq
mov
in
mov
mov
cmpsb
in
inc
xchg
mov
or
jbe
adc
gs
jbe
jle
loop
int3
adc
pop
adc
sub
int
in
jne
add
or
ss
mov
xor
fcoms
shll
nop
cmpsb
cwtl
outsb
sbb
lret
mov
xchg
mull
sub
cmpsb
std
adc
cmpsb
es
cmp
imul
pop
sbb
push
push
mov
cmpsl
add
lods
adc
mov
sbb
fwait
psubsb
add
sbb
scas
inc
call
cmp
stc
sbb
data16
lock
mov
add
test
sbb
cmp
or
mov
pop
sbb
daa
push
test
aas
testl
pushf
inc
dec
sbb
gs
or
jbe
mov
cld
push
and
aaa
testl
push
popf
iret
add
xchg
push
sbb
push
push
push
add
jbe
jne
sub
ret
jmp
dec
call
mov
xchg
ss
out
dec
aas
les
push
pop
orb
jns
add
inc
enter
mov
add
dec
dec
jmp
lcall
mov
add
lods
mov
hlt
dec
push
add
push
fwait
pop
hlt
jmp
adc
sub
je
xchg
inc
clc
sbb
in
push
jecxz
clc
add
xchg
add
pop
adc
add
out
dec
jns
imul
jle
adc
xchg
pushf
in
cld
mov
inc
add
inc
clc
xor
mov
enter
js
adc
inc
add
push
cmpsl
mov
jmp
clc
or
addl
add
add
jp
dec
popa
lods
cld
pop
aam
std
bound
std
mov
xor
push
adc
cmc
sub
pop
inc
xchg
add
jne
xor
xor
js
sub
sub
call
gs
lock
jo
push
push
jns
xchg
testb
and
decl
xchg
adc
add
jecxz
js
jmp
dec
movsl
test
xchg
adc
mov
adc
jns
jo
std
push
cmc
les
outsb
inc
dec
pop
es
ss
add
adc
fstps
ss
pop
sbb
or
jns
lock
stos
add
sbb
push
add
xchg
xchg
cmp
add
mov
rcrl
adc
sbb
mov
cld
outsb
push
mov
cld
fs
sub
dec
adc
push
scas
sbb
mov
sarl
adc
mov
xchg
lods
pop
adc
cld
push
test
cld
aam
jg
jmp
sbb
inc
out
adc
push
popa
adc
sbb
and
add
add
pop
repnz
jmp
pushf
jle
daa
out
push
nop
jmpw
std
adc
dec
dec
outsl
xor
xchg
mov
and
dec
push
pop
lcall
dec
div
inc
lea
push
fsincos
bnd
addb
enter
lcall
pop
adc
ret
ret
sbb
add
push
push
andl
add
adc
andb
test
cld
pop
sub
push
fldcw
or
jb
mov
pop
sbb
jmp
add
xor
movsb
cld
mov
pushf
mov
jne
mov
push
movsb
cld
subb
mov
sub
iret
cmp
andb
test
in
decl
dec
ret
cmp
rorl
movl
loop
andb
scas
or
insl
les
pushf
lock
mov
das
or
lods
fsts
cmp
out
int
subb
adcb
jle
add
adcb
mov
clc
inc
mov
arpl
mov
pop
jns
adc
jmp
lods
imul
pushf
rorl
insb
andl
js
pop
outsl
ret
sbb
cmpsb
sub
add
fldt
je
fdivs
les
add
add
push
bound
rorl
xchg
fdivrs
std
shrb
or
imulb
cld
mov
adc
mov
add
jge
popl
jmp
pop
adc
xor
sar
in
or
push
pop
xor
sar
int
adc
sbb
mov
add
into
add
sbb
jle
sub
cld
push
jns
in
clc
sbb
dec
lea
mov
cld
dec
xchg
les
pop
add
int3
cwtl
scas
sbbb
call
pop
dec
adc
adc
add
mov
or
xor
clc
mov
mov
sbb
movb
add
add
jne
push
pop
mov
pop
ret
ret
mov
pop
mov
xchg
or
add
cwtl
xchg
movsl
mov
cs
sub
ss
lods
jle
inc
idiv
or
dec
push
xor
pushl
cmp
loopne
int
add
mov
sub
ds
cld
cld
inc
cld
js
dec
jecxz
mov
adc
mov
jl
and
lock
in
adc
inc
roll
ja
clc
fs
call
leave
cwtl
sub
imul
mov
das
adc
sbb
add
sub
aaa
and
add
nop
jmp
sbb
call
gs
call
icebp
or
outsl
dec
cltd
jle
and
in
incb
in
inc
pop
outsb
pop
dec
loope
mov
pop
call
cli
sbb
xchg
aaa
push
icebp
pop
xchg
mov
sbb
push
sbb
je
xchg
scas
cltd
mov
lahf
add
push
sbb
inc
xor
dec
or
mov
cld
push
or
jmp
jp
insb
roll
add
add
or
add
or
out
andl
inc
sbbl
mov
orb
addr16
negb
cld
adc
sbb
mov
popl
adc
addb
mov
jmp
pop
or
test
push
add
pop
nop
mov
fldenv
jo
cmp
add
icebp
adc
loopne
nop
add
clc
mov
arpl
xor
lea
nop
push
lcall
pop
std
jne
ret
std
jo
cmp
jecxz
mov
sbb
and
xchg
add
hlt
fdivrl
dec
rcrl
sbb
pop
push
lahf
add
inc
jnp
fcoms
push
idiv
and
mov
pushf
xor
adc
push
mov
cmp
cmp
lods
xchg
int
pop
pop
cmpb
dec
push
frndint
push
rcl
pop
add
push
xor
imul
sbb
mov
stc
cld
sub
inc
add
loope
pop
jmp
mov
mov
xor
mov
test
jle
clc
incl
cmc
movsb
add
inc
and
jb
adc
mov
mov
in
lea
cld
xchg
outsl
cmp
cmp
les
pop
add
xchg
or
mov
clc
lcall
push
pop
mov
push
xor
mov
xor
inc
mov
push
lods
stos
gs
add
sti
or
xor
ficompl
add
cmpsb
lret
adc
sahf
cmpsb
mov
xchg
leave
loopne
sbb
inc
xchg
add
das
sbb
mov
jmp
cld
cltd
add
int
cltd
add
jns
add
jmp
rol
push
jmp
mov
or
pop
adc
sbb
pop
adc
jmp
lock
out
jecxz
add
add
mov
inc
shll
cwtl
jbe
das
and
fisubs
jle
outsl
adc
bound
icebp
ret
inc
movl
mov
mov
inc
pop
aas
wrmsr
lds
ficomps
sbb
push
fiadds
leave
lcall
mov
mov
push
adc
cwtl
addl
inc
push
iret
fimull
adc
lds
cwtl
sbb
sbbb
adc
pop
dec
push
or
add
jb
jmp
das
mov
add
push
and
or
push
lcall
push
pop
dec
xchg
add
or
add
outsl
pop
mov
dec
add
xchg
add
xor
sub
rcl
lea
into
cmpb
pushl
xchg
add
mov
ljmp
test
or
cmpb
cmp
or
cmp
subb
add
inc
clc
xorb
mov
ss
in
loop
pushf
xor
cmp
jmp
clc
cmpsl
loopne
pop
popf
xchg
mov
sub
add
cmp
or
mov
cld
rcrb
mov
inc
lock
add
dec
fsubl
dec
cmp
add
jns
mov
cmp
mov
shrl
mov
and
cmpsl
xchg
push
dec
add
adc
cmpsl
pop
repnz
add
jns
sub
popf
test
inc
and
pop
or
outsb
popf
test
mov
add
add
add
arpl
cmpsb
xor
fisubrl
cmp
ljmp
add
stos
cmp
mulb
xchg
dec
pop
inc
int
push
ds
notl
mov
mov
inc
in
iret
jg
pop
mov
jo
cwtl
fwait
sti
aad
popf
push
inc
es
in
and
add
das
add
ret
push
in
add
push
push
pushf
push
push
data16
fstp
gs
clc
pop
mov
inc
lds
test
scas
lods
roll
xor
add
popl
mov
mov
pushf
sub
dec
scas
or
daa
xlat
loop
call
sub
or
mov
add
andb
add
add
push
push
test
int
repz
cmp
mov
dec
nop
mov
jle
dec
ljmp
daa
adc
push
push
adc
sbb
fcoml
mov
daa
mov
lods
es
or
lds
jo
ss
sti
xchg
lods
cwtl
xchg
enter
add
pusha
subl
mov
test
les
jne
cld
mov
cmp
insb
mov
push
fisttpll
aas
mov
dec
push
pop
dec
out
cmp
adc
mov
inc
cmpsb
cmp
mov
insl
push
mov
or
ret
and
insl
decb
icebp
das
cmp
nop
test
add
add
push
in
xor
pop
sbb
jge
mov
pop
sub
jl
mov
mov
sub
sar
cmpsl
pop
mov
outsb
cmpsl
sti
push
sub
cmp
arpl
push
int
bound
cltd
cwtl
fwait
ljmp
pop
add
jp
test
add
add
push
movsl
xchg
sub
test
or
push
push
bound
pop
add
dec
push
or
icebp
or
out
inc
call
movsb
lahf
sti
xor
mull
mov
add
in
test
fnstcw
dec
or
push
repnz
mov
icebp
insb
inc
jle
mov
sbbl
scas
xchg
mov
mov
add
add
pop
sti
cltd
mov
popa
leave
sub
push
bound
mov
dec
bound
pop
leave
sub
test
std
call
mov
add
dec
or
popa
sti
fcoml
push
lock
hlt
jmp
fstp
push
pop
aas
clc
in
mov
mov
sbb
cmp
test
mov
bound
push
clc
xor
add
cld
iret
adc
mov
and
jne
push
roll
sub
decb
das
cmp
inc
ljmp
repnz
mov
xorl
adc
ss
loopne
cwtl
imul
add
shlb
mov
mov
xor
popf
incl
lds
out
aas
mov
les
mov
rcrb
ret
sub
pop
arpl
cld
bound
mov
imul
ss
out
pushl
nop
mov
sub
mov
sub
add
mov
sbb
lahf
pop
xchg
xor
loop
sub
rclb
pop
and
mov
adc
into
adc
sti
gs
rcrl
mov
test
stos
scas
mov
icebp
fdivs
gs
cmp
sub
out
add
mov
pusha
add
out
loopne
cmp
add
add
addl
sub
xchg
jmp
fsts
lea
push
hlt
cltd
and
sti
pop
jae
jne
xor
in
dec
fs
sti
push
into
lods
xchg
cmp
cld
xor
iret
push
inc
loope
push
cld
sbb
adc
cli
xor
out
sti
es
adc
jle
mov
filds
add
add
sti
cmp
sub
outsb
cld
jne
cmp
or
add
testb
xchg
std
jne
sbb
adc
and
shl
ret
ret
dec
mov
jle
adc
jle
adc
inc
clc
push
dec
sbb
or
fsts
xor
jp
cld
into
dec
sbb
cld
xchg
testb
add
add
pop
adc
and
cld
testb
add
shrl
cmpsb
xchg
push
push
pop
jecxz
xchg
and
test
mov
pushf
rcrl
jge
lock
dec
or
xor
movsl
jg
adc
out
in
jno
or
inc
cld
mov
imul
and
lods
xchg
cmp
in
xchg
addl
add
cmc
pop
xor
lods
imul
xlat
cmp
sbb
cmp
or
mov
aas
add
inc
xchg
call
popf
sar
cld
mov
leave
jb
sahf
cld
add
out
jnp
mov
add
or
xchg
test
push
dec
out
xor
not
nop
cmp
daa
cld
sub
sub
mov
mov
push
add
mov
lcall
cli
loop
and
sbb
pop
inc
mov
insb
lds
aas
add
test
xchg
xchg
or
nop
xchg
adc
jle
negl
cmp
sti
jg
mov
inc
jb
imull
dec
or
dec
cld
bound
int3
ljmp
sub
push
mov
mov
push
sbb
xchg
frstor
adc
out
dec
or
mov
xchg
pop
cmp
sbb
or
sub
call
popf
jmp
inc
fnsave
test
pusha
loop
mov
test
pop
xchg
push
push
or
mov
subl
cmp
pop
les
xchg
sbb
or
or
add
and
cmp
dec
in
dec
shl
hlt
cmpsb
inc
mov
out
inc
clc
push
or
or
mov
add
or
fistl
mov
lea
add
add
hlt
pushf
or
jmp
enter
pop
mov
cld
xchg
xchg
or
sub
cmpsb
add
mov
mov
push
adc
insl
gs
arpl
jle
cld
imul
jg
mov
inc
xor
cmp
in
out
out
decl
daa
call
arpl
dec
and
mov
out
cld
mov
mov
jne
push
call
in
cld
jb
jnp
cltd
mov
dec
and
cwtl
ja
rcll
aad
lods
fstps
rcrb
xchg
xacquire
jmp
jg
stos
int
inc
icebp
bound
push
jl
clc
cmp
pop
in
cmp
sub
test
cmpsb
out
imul
xchg
int
pushf
inc
xor
mov
je
idivl
out
fs
insl
ret
mov
inc
cltd
lahf
les
jnp
clc
sarb
lcall
jbe
je
xchg
sti
adc
xchg
sti
insb
cli
stos
sbb
xor
sti
outsb
pop
lea
out
jne
xchg
ljmp
or
out
mov
pop
hlt
jo
lret
mov
into
je
add
jmp
mov
adc
or
sti
jmp
je
call
ret
dec
add
je
add
jae
add
add
add
pop
and
mov
fsts
leave
sbb
mov
jb
mov
jecxz
inc
lea
adc
sbb
mov
dec
call
lea
adc
or
add
adc
sbb
add
jns
fs
nop
add
sarl
adc
or
add
mov
jp
mov
out
cmc
fdivrl
pushf
stos
movsl
adc
cwtl
mov
lea
jb
shl
call
mov
mov
lock
inc
cmp
or
sub
sub
mov
mov
in
ds
decl
mov
jnp
ss
xchg
testb
sub
cmp
mov
fidivrl
xchg
jmp
add
popf
or
adc
push
adc
inc
lods
pop
cmp
mov
cmpsb
clc
aaa
sar
stc
popa
dec
jno
div
retw
add
cmpsb
mov
xchg
rcll
xchg
sub
div
jle
nop
jmp
add
repz
psubsw
int
add
les
dec
icebp
xor
push
out
lret
inc
adc
mov
dec
in
push
sahf
mov
push
pop
icebp
jmp
push
test
out
add
sbb
or
lods
repnz
jmp
shl
dec
mov
test
mov
xchg
sti
gs
test
or
push
jmp
int
repz
mov
call
pusha
jecxz
test
sbb
popl
in
andl
sti
add
ds
pop
mov
push
cmp
cmovl
dec
add
data16
add
add
call
push
xchg
sbb
shll
push
xchg
add
jbe
call
pop
and
fistpl
lea
jbe
add
and
addl
hlt
add
mov
in
out
dec
jbe
clc
imull
adc
add
add
sub
mov
inc
mov
cmp
add
add
icebp
xchg
addb
aam
sub
mov
xchg
js
mov
cmp
popf
pushl
arpl
les
gs
jb
jge
movsb
cs
pushl
jne
iret
cmc
repz
jnp
insl
inc
or
scas
add
mov
sub
mov
jbe
cmc
jl
cmp
notb
sub
lcall
icebp
js
out
adc
push
jnp
jp
subl
call
xor
or
out
insb
les
insb
aaa
aad
arpl
out
popw
rorl
lods
in
mov
lea
and
int3
int
xchg
cmc
fistl
pop
repz
add
add
adc
jns
shll
or
push
and
mov
aaa
and
gs
das
fisubl
add
xor
jmp
mov
inc
std
push
cmp
jne
dec
lret
or
pop
loop
sti
out
ret
fucomip
mov
jmp
fidivs
jmp
adc
ret
or
dec
pop
and
add
add
or
lret
sbb
push
out
xchg
sahf
aas
push
aaa
rcrb
cli
xchg
mov
movaps
pop
inc
in
add
jmp
cmp
call
bound
lahf
in
adc
push
add
xor
test
mov
rorb
adc
test
popf
adc
mov
and
int3
mov
cmp
pop
push
outsl
adc
mov
call
mov
je
lods
out
nop/reserved
sti
lcall
cld
call
fcomps
and
pop
aas
and
xchg
subl
ret
jne
std
cmp
call
pop
jmp
adc
and
lcall
mov
xchg
add
outsb
mov
idiv
xchg
cli
addr16
lahf
idiv
xor
sbbl
stc
lods
dec
ret
pop
gs
cmpl
in
jnp
int3
pushl
popa
movb
jbe
xchg
mul
xchg
jecxz
adc
testb
mov
xchg
idiv
mov
ficompl
push
mov
add
add
iret
loopne
dec
cmpb
xor
sub
int3
in
lods
daa
lret
movsbl
ret
xchg
mov
sbb
xchg
and
test
subl
or
outsb
dec
sub
jnp
sbb
mov
xchg
xchg
in
jns
adc
aas
ret
pop
sbb
jle
call
pop
jnp
lds
jp
scas
cmp
mov
divl
pop
ljmp
jecxz
in
mov
stc
add
sti
hlt
add
and
jmp
enter
sub
sahf
jb
cs
rcrl
push
adc
test
loop
dec
sahf
rclb
sti
divb
ljmp
dec
rolb
xor
in
sti
jb
mov
sbb
xchg
lods
sbb
add
pop
jmp
cmp
inc
add
dec
or
shrb
pushl
lcall
fildl
pop
pop
pop
lret
mov
pop
push
dec
mov
call
push
cmovnp
stc
xorl
add
add
xchg
push
jmp
call
mov
movsl
icebp
je
sbb
or
add
call
notb
jecxz
pop
imul
pop
imul
cmpb
cld
xor
jae
imul
push
dec
out
std
test
sbb
jne
test
add
add
les
call
cmpl
or
mov
dec
shll
jo
jmp
or
xchg
je
add
sbb
shll
ret
lock
pop
cmp
mov
ss
popa
sarl
stos
inc
adc
add
out
xlat
mov
insl
aaa
mov
jmp
jmp
add
bound
add
add
je
mov
jp
xchg
idivl
inc
insb
data16
mov
add
call
sub
jb
jmp
pop
or
imul
jecxz
call
mov
iret
adc
inc
fwait
pop
inc
shll
mov
inc
pop
dec
xchg
adc
add
or
add
nop
add
push
jecxz
inc
rolb
sbbl
push
orb
outsl
add
jbe
arpl
mov
dec
sti
data16
das
push
in
lds
nop
push
mov
mov
xchg
call
out
jmp
in
nop
add
cmp
add
mov
add
add
add
push
andl
popa
cmp
ret
mov
pop
add
in
addb
call
mov
mov
pop
add
push
adc
lahf
push
mov
xchg
add
xlat
int
mov
push
inc
ret
pop
mov
mov
and
push
push
cmp
sbb
dec
incl
add
add
arpl
popa
or
cmp
sbb
data16
outsb
or
sbb
call
sbb
addl
mov
loope
dec
xorl
icebp
out
adc
push
pop
es
out
idiv
xorb
data16
jl
call
clc
mov
cmpsl
ja
cmc
leave
mov
inc
out
mov
out
aam
xchg
pop
ds
call
mov
leave
sti
fs
jbe
popf
jae
jae
jns
sti
mov
push
repnz
mov
jle
ljmp
out
add
mov
jp
fs
adc
xchg
pop
dec
lcall
rcrb
or
add
add
add
adc
lret
push
in
mov
repz
aas
jp
jno
sub
pop
jne
cli
mov
add
adc
sbb
outsb
inc
adcb
pmulhuw
roll
jp
push
jne
insb
inc
orw
loope
mov
adc
insb
adc
add
cmp
call
out
add
add
cmp
mov
jecxz
gs
pop
sbb
push
xchg
jne
ss
adc
mov
sti
cld
jb
inc
jmp
fsub
sti
pop
mov
mov
repz
add
testl
pop
ficoml
shrl
mov
loop
mov
shr
cld
add
mov
jle
mov
inc
es
add
add
xchg
xchg
pop
lock
aas
lcall
in
call
xchg
mov
mov
xor
imul
or
in
call
adc
push
hlt
jecxz
lcall
outsl
pushf
mov
pushl
dec
add
iret
push
jecxz
popa
mov
test
and
mov
add
adc
out
add
call
test
repnz
inc
jle
mov
push
call
fs
push
mov
fiaddl
nop
lea
sub
pop
cld
mov
add
loop
sbb
div
shlb
icebp
adc
in
idivb
or
mov
mov
jp
rclb
jnp
or
pop
je
jle
xchg
sahf
or
ds
xchg
imulb
shl
inc
jne
pop
adc
daa
adcb
scas
ss
fisttpll
pop
mov
movsb
xchg
push
shll
int
jecxz
rorl
sub
mov
jbe
add
mov
fucomi
mov
shll
and
add
in
jo
cmp
xchg
fadd
jp
sbb
jo
sub
xor
mov
andb
push
sub
cmp
mov
stos
outsb
loopne,pt
adc
je
jmp
insl
rorb
into
sbb
sbb
inc
adc
jl
add
pop
add
mov
imul
stc
aas
dec
adc
clc
push
add
arpl
add
mov
push
aas
pop
and
push
pop
add
sub
pushf
je
xchg
and
jne
sub
cwtl
scas
je
xchg
insl
mov
push
jne
xor
loop
mov
dec
lea
xchg
xchg
sti
xchg
out
int3
addr16
cltd
inc
hlt
fsubp
mov
fdivr
pusha
loop
fisubrl
mov
sbb
in
inc
add
imul
mov
pop
mov
faddl
aas
adc
xor
hlt
inc
sub
adcl
cmp
sti
cmp
add
leave
push
dec
ljmp
xchg
add
push
outsb
push
lcall
dec
scas
int3
mov
push
ret
lea
xchg
arpl
xor
hlt
pushl
pusha
push
inc
mov
aas
daa
mov
hlt
je
mov
fnstcw
cld
rclb
sub
std
addb
jae
in
pop
mov
or
and
outsb
jb
movsb
outsl
push
popf
movsl
cmp
push
loopne
dec
xor
fdivrs
out
add
add
out
fstl
inc
mov
sbb
sar
decl
out
sbb
jnp
xor
cld
rorb
clc
clc
push
jmp
aas
or
jmp
cli
mov
aad
push
inc
loop
std
test
bound
or
mov
add
popf
mov
jb
adc
add
outsb
add
mov
inc
push
cmc
adc
xchg
push
push
test
sbb
jae
arpl
jle
cwtl
jl
fildll
loop
data16
icebp
and
add
fldt
sahf
add
cld
nop
push
add
add
stc
fcmovnb
cmpsl
fmul
call
fs
or
cli
scas
psubsb
ret
mov
add
inc
jmpw
je
jo
cli
mov
ret
sub
push
fisubrl
mov
mov
lods
sti
jbe
mov
jle
push
add
outsl
sub
les
jno
cmovo
imul
add
add
dec
lea
dec
push
les
test
xlat
or
and
jecxz
lcall
lea
imul
addr16
push
ret
cmpb
aad
or
sbb
jae
pop
push
clc
xchg
xor
ja
mov
fstpt
xchg
jp
mov
add
iret
mov
xor
mov
add
add
insl
inc
xchg
pop
sub
mov
push
aam
inc
mov
jno
fidivrl
push
add
cmp
pushl
call
cmp
in
pushl
push
mov
enter
jo
dec
daa
jnp
call
popf
ljmp
cmc
out
inc
mov
iret
push
pop
call
ja
in
mov
inc
cmp
pop
pop
enter
int3
push
lcall
lahf
and
jb
aas
push
adc
inc
xor
addb
jmp
shrb
push
and
add
repz
adc
pop
xchg
pop
leave
push
aas
popl
or
gs
fsubs
mov
xor
daa
lds
aas
bound
outsb
andl
pop
test
add
mov
aas
lea
pop
sti
hlt
jb
inc
jmp
scas
rclb
sub
fdivr
push
mov
shlb
pcmpgtb
inc
push
pop
in
mov
add
jae
imul
in
dec
jo
cld
mov
lods
bound
lods
out
iret
or
data16
bound
adc
je
lahf
pop
rcrl
dec
lea
call
jmp
into
xor
aad
inc
mov
xlat
les
mov
add
je
into
lahf
push
cmpsb
adc
lea
add
add
xchg
jmp
fs
pop
mov
cmp
pop
lds
add
fs
push
xor
add
pop
xor
in
xchg
jg
cmp
data16
into
addr16
ss
push
lea
std
pushl
mov
sbb
dec
jne
arpl
je
adc
int
fisubrs
ja
sub
mov
pop
pop
mov
es
cmpsb
sarl
pop
pop
lret
inc
pop
incl
aas
or
cmpsl
pushl
mov
arpl
sbb
insb
mov
mov
pushl
xchg
insb
or
mov
flds
cmpsb
lcall
out
cmp
call
ljmp
dec
xor
lea
push
push
xor
loope
test
jmp
shll
jnp
pop
mov
lods
push
aad
orl
jmp
add
push
mov
and
jmp
jg
nop
jmp
cld
aaa
mov
jmp
cli
ss
add
add
add
outsb
aas
fisubl
sub
xchg
add
sub
das
add
paddq
push
call
sti
inc
orb
ficomps
or
faddp
jecxz
fists
shll
pop
loopne
xchg
inc
shll
icebp
mov
lea
sti
mov
sub
xchg
fdivr
std
ret
push
lret
sbb
add
inc
jmp
pop
mov
loopne
push
or
xchg
inc
inc
out
or
out
dec
popa
cld
adc
sar
push
xor
jmp
int
call
decl
ds
dec
ret
nop
dec
mov
ds
cmp
add
push
pushl
imul
mov
inc
std
jmp
dec
outsl
add
add
and
incl
mov
imul
int3
xor
stos
push
mov
push
fwait
xorb
mov
push
rorl
test
je
push
inc
or
nop
push
pushl
fisttpl
rcrl
inc
mov
test
test
push
repz
shrl
add
jno
mov
jmp
inc
arpl
mov
add
insl
mov
leave
ja
call
les
mov
call
cltd
jae
xchg
mov
out
add
cld
sub
fldenv
divl
cmc
ja
imul
mov
jne
jbe
ja
cltd
subb
mov
cmp
jb
cltd
rorb
push
push
lods
or
pop
std
push
cmpsb
pop
roll
pop
mov
cmpsb
pop
flds
cs
aas
insb
mov
stos
in
mov
stos
rclb
stos
rclb
xchg
mov
lcall
inc
cmp
sbb
sub
stos
lock
and
pop
mov
scas
push
out
in
push
outsb
cmc
aad
cmp
or
jl
add
xchg
in
pop
sub
rclb
paddsw
je
push
insb
je
push
xorl
sbb
cltd
pop
fstpl
sub
fmull
mov
sub
cwtl
lret
xchg
mov
lock
add
add
add
sarl
stos
ds
lock
sub
push
in
push
cwtl
dec
mov
push
add
dec
lods
add
xchg
lahf
sub
jl
inc
add
pop
sbbb
fdivs
add
add
fisttpl
inc
mov
and
inc
ds
notb
cli
incb
add
add
dec
outsb
int3
fisttps
mov
xor
andb
ds
jne
xor
or
xchg
jmp
lea
imul
mov
jmp
adc
jp
pusha
loopne
adc
fwait
add
mov
pop
mov
iret
out
cmp
sahf
mov
cltd
xor
mov
repz
adc
ljmp
arpl
sub
gs
xor
mov
inc
movsl
std
das
call
das
jae
pop
fildl
lret
cmp
ss
subl
add
rolw
ljmp
outsb
loope
imul
insl
add
add
add
daa
inc
rol
sub
cs
jp
fwait
adc
in
mov
push
fldcw
std
xchg
pop
push
sub
add
add
mov
push
repnz
stos
mov
ss
or
push
in
sti
xor
enter
stc
dec
mov
add
and
add
add
inc
and
and
and
push
sub
push
lret
sti
lahf
cs
and
push
filds
cs
pop
icebp
push
lret
or
into
sti
jmp
mov
test
popl
xchg
cld
je
mov
and
rolb
mov
xor
into
inc
pop
and
sub
add
mov
lret
sti
jo
add
add
sub
pushf
mov
sub
aam
cmp
or
and
adc
add
xchg
push
call
pusha
push
or
popa
nop
add
push
jae
aaa
test
hlt
cmp
nop
je
fwait
in
xor
loop
xor
aaa
cmc
fimull
std
decl
rcrl
sub
add
add
addb
ret
add
mov
jl
add
pop
imul
xlat
imul
mov
lret
dec
push
mov
fldenv
aad
or
mov
repnz
mov
inc
jae
sub
fcoms
xchg
outsl
cld
jae
popa
fsubs
mov
sub
mov
pop
std
lret
and
test
add
jcxz
lcall
jle
pop
cld
ds
and
cmp
testl
shll
sub
jae
xor
repnz
std
mov
and
leave
xchg
mov
rcr
scas
lcall
mov
mov
out
mov
xchg
push
inc
in
enter
add
add
pop
mov
sub
mov
add
jae
add
jmp
dec
cmc
repnz
pop
mov
or
orl
add
movsl
ljmp
lret
jo
pop
adc
lods
ret
bound
mov
pop
mov
add
mov
add
fistpl
out
insb
sbb
push
add
add
bound
ja
pop
inc
loope
xchg
add
mov
mov
mov
jg
lods
inc
pop
push
mov
prefetcht0
add
inc
push
add
or
lea
ret
or
lret
out
and
mov
lods
adc
mov
mov
jge
add
pop
inc
adc
push
std
psubusw
sti
decl
add
std
jne
xor
into
xor
mov
ret
xchg
cld
xchg
cld
imul
fmull
cmp
dec
fs
je
stos
aas
cld
or
outsb
jnp
scas
testl
and
insb
mov
std
jne
cmp
add
add
sbb
adc
adcl
imul
insb
pop
add
popf
bound
std
shlb
mov
cmp
mov
imul
arpl
adc
jae
xchg
xorl
pop
pushf
xchg
popa
push
std
pusha
mov
sbb
push
pop
xchg
inc
inc
lods
mov
add
xor
sub
std
mov
mov
pop
cld
jnp
idiv
lea
cld
xchg
sub
mov
push
std
jp
shl
mov
dec
cltd
add
fsubs
outsl
xor
inc
pop
cmpsb
bound
mov
jg
mov
mov
enter
push
jo
outsl
sub
add
push
cmp
jmp
loope
lds
jbe
repnz
pop
push
lret
jmp
stos
mov
jne
add
out
fwait
jmp
add
add
cmp
add
mov
gs
ja
inc
or
xchg
inc
jne
inc
pop
and
xor
add
jb
lea
xchg
dec
lea
into
popl
insl
jns
xor
xor
mov
ret
into
mov
jo
ret
sti
fst
jg
hlt
jbe
inc
jmp
sub
fnstenv
inc
and
push
xor
pushf
mov
inc
lds
lea
movsb
dec
decl
sar
mov
scas
adc
push
mov
add
and
and
ljmp
dec
adc
or
add
bound
sub
push
xlat
cmp
imul
add
cld
mov
and
movsb
fmulp
sti
jg
mov
jp
fmull
adc
mov
ret
push
xchg
push
call
sbbl
push
cs
sahf
sub
mov
lock
or
out
insb
add
adc
aaa
inc
mov
rolb
push
lret
imul
fnstenv
ss
mov
loopne
aad
sahf
xchg
add
xchg
repz
sub
jne
js
insl
decb
push
popa
ss
mov
enter
enter
add
leave
pop
jge
jbe
mov
call
insl
pop
ret
js
sub
jmp
add
xchg
or
ss
sbbl
add
orl
icebp
jmp
pop
pop
mov
mov
imul
fwait
adc
les
mov
add
add
ret
hlt
cmp
mov
sub
add
jp
dec
loope
add
pop
mov
imul
dec
pop
cmp
xchg
popa
cmp
add
xchg
or
or
rorl
popl
bound
adc
dec
push
adc
dec
sbb
add
sar
xor
xor
test
add
mov
or
dec
sub
jmp
inc
les
mov
adc
stc
sub
or
hlt
cwtl
push
je
pushf
push
pop
push
or
mov
pop
push
ret
jne
sbb
addb
je
add
sub
call
decl
outsl
inc
dec
popf
repnz
outsl
pop
xchg
filds
je
mov
lcall
add
insb
pop
outsb
or
filds
lcall
push
inc
pop
adc
in
pop
lea
mov
add
add
pop
pop
addl
pop
rcrl
sub
sti
pop
dec
mov
push
xchg
sub
sub
xor
add
fidivs
divb
xchg
xor
fimuls
push
mov
push
adc
mov
lds
add
add
or
mov
call
add
sahf
sbb
sarl
adc
mov
incl
int
cld
jmp
rclb
mov
adc
and
in
shlb
cwtl
stos
cld
test
adc
sbb
sub
les
add
insb
or
mov
add
mov
sub
cld
jae
dec
jmp
inc
cmpsb
mov
ficoms
dec
pop
xor
sub
push
mov
sub
daa
sbbl
fimull
pop
test
movsl
mov
mov
inc
scas
lods
pop
mov
stos
push
push
out
cmp
rcll
add
rclb
add
add
xor
and
movsb
inc
out
rorb
jo
mov
add
cmp
leave
es
fsubrl
mov
push
xor
or
mov
pushl
mov
mov
add
mov
mov
push
test
inc
iret
adc
inc
arpl
mulb
push
test
mov
cli
mov
je
push
cld
subb
icebp
push
sub
mov
add
sahf
pop
mov
add
inc
or
add
push
jmp
pusha
std
call
outsl
sub
in
cmp
shll
pcmpeqb
add
lds
adc
pop
call
gs
cld
decl
dec
cld
jne
cld
and
pop
push
or
and
cld
pop
cmp
outsl
sub
push
outsl
and
push
in
lea
jnp
adc
sbb
movl
pushl
mov
jb
adc
fadds
repnz
pop
divl
add
cs
push
std
shll
xor
in
cld
dec
fiaddl
std
sub
push
enter
sbbb
sub
ja
call
lea
jae
push
xorl
push
or
test
imulb
repz
mov
roll
dec
pusha
cld
cmp
dec
cld
test
movsl
add
xor
cmc
add
add
add
push
adc
mov
jmp
mov
bound
push
sahf
sub
pop
les
iret
hlt
ret
shlb
gs
inc
mov
xchg
xchg
mov
aaa
aam
mov
mov
pop
rcl
add
mov
aad
jb
pop
pusha
xor
mov
push
repz
jl
push
dec
adc
hlt
push
inc
lret
push
xor
roll
push
sub
dec
or
jb
add
mov
mov
push
scas
jg
add
mov
lret
jp
mov
outsl
add
adc
mov
sti
ds
or
mov
shll
add
sti
adc
jns
jmp
cmp
jne
pop
roll
mov
jo
sub
pop
jae
pop
rcrl
add
iret
dec
or
jbe
jne
xor
add
dec
lea
sbb
adc
stos
xchg
mov
std
addb
int3
or
pop
pop
repz
add
mov
rcl
ret
mov
xor
call
push
sbb
testb
mov
cmp
add
mov
sub
ljmp
xchg
jecxz
mov
xchg
clc
push
lahf
dec
dec
call
and
cli
lcall
or
data16
xchg
in
push
cwtl
rclb
mov
test
mov
jle
test
addl
push
decb
and
dec
cld
sbb
pop
incl
mov
addb
add
add
aaa
or
mov
add
sub
pop
mov
jbe
xor
jmp
mov
scas
push
xor
incl
mov
shrl
and
dec
mov
rcrb
adc
aas
cmpsl
jl
jge
es
add
jle
pop
mov
cld
mov
mov
arpl
and
inc
sarl
test
dec
cmp
push
add
dec
sub
cmpsl
xchg
pusha
xor
lods
xchg
dec
add
and
cli
nop
jmp
dec
jmp
dec
scas
out
xchg
cmc
push
mov
js
stos
push
mov
movsb
pushaw
mov
or
pop
add
movsl
sti
fnstsw
mov
insl
or
add
sub
test
icebp
inc
or
orl
jmp
movsb
into
mov
jge
cmc
or
xchg
or
es
adcb
sti
mov
sbb
int
mov
inc
fldt
push
jbe
mov
jne
andl
shlb
sub
mov
xchg
push
into
mov
add
or
pop
mov
sub
xor
psubsw
push
icebp
push
cld
ss
ljmp
fsubp
pop
mov
push
rorl
push
movsl
call
les
roll
fmull
pop
sbb
call
sbbl
movb
cld
adc
jns
daa
mov
and
add
outsl
sar
imul
and
xor
sub
rclb
add
rcrb
cmp
rclb
jecxz
pushf
nop
add
mov
sbb
mov
add
insb
push
std
push
aas
pop
ja
call
mov
dec
ss
dec
pushl
push
clc
call
data16
xchg
mov
mov
mov
add
cmp
dec
mov
add
or
jnp
imul
test
addr16
xor
lret
les
dec
test
mov
mov
jns,pn
cld
mov
or
xchg
lcall
in
jns
xchg
sti
jns
in
repz
push
jmp
dec
jno
mov
cmp
outsb
pop
repz
lret
dec
aaa
sarb
add
loope
lock
sbb
mov
xchg
mov
test
jmp
sarl
jmp
mov
sbb
sub
mov
in
mov
movsl
inc
add
stos
idivl
mov
mov
jb
bound
divl
into
or
jge
inc
pusha
je
test
test
xchg
ds
fs
jmp
fmulp
jmp
in
pop
call
sti
jbe
leave
stos
push
pop
in
push
xchg
mov
xchg
jnp
or
mov
jmp
out
test
out
or
jmp
mov
shrb
sbb
cmpsl
pop
jae
data16
add
jecxz
mov
ljmp
mov
lahf
aad
inc
or
and
je
and
push
leave
dec
or
and
repz
loopne
mov
pop
mov
outsb
xor
std
adc
xchg
mov
mov
outsb
rcll
add
decl
mov
add
add
push
adc
sub
push
stc
int3
sti
ljmp
push
inc
int3
or
pushl
cltd
inc
jb
dec
or
enter
mov
inc
or
rorw
mov
push
jmp
nop
inc
adc
jle
mov
sar
or
mov
cld
pop
mov
rorl
cmpsb
ljmp
test
mov
in
mov
push
test
jle
add
cmp
push
xor
push
mov
and
jbe
sub
inc
cld
cmp
adc
into
fldl
dec
mov
pop
int3
sbb
mov
inc
inc
or
mov
iret
int3
xchg
scas
pusha
mov
mov
loop
jo
adc
notl
stos
sti
sub
push
loope
dec
ja
xchg
cmp
roll
rclb
lahf
das
je
dec
inc
outsb
mov
mov
sbb
pop
sti
ret
add
and
sub
adc
cld
xchg
add
mov
push
pop
or
jmp
sbb
pop
mov
rorb
jmp
jo
add
sbb
add
xor
xor
jmp
inc
into
aaa
mov
mov
add
xchg
in
adc
mov
or
xchg
mov
adc
out
add
jne
sub
sub
in
mov
ret
scas
jnp
pop
xchg
outsl
xor
jecxz
xchg
mov
jle
push
das
mov
xchg
cmpsl
jecxz
push
cld
test
sub
out
adc
pusha
adc
popa
mov
jl
ficoml
shlb
mov
jle
dec
mov
cld
jne
sub
or
int3
in
decb
mov
out
xor
jae
je
xchg
out
inc
xchg
out
mov
inc
loop
pop
push
cld
mov
dec
xor
out
addl
add
leave
dec
cld
mov
jle
pushl
sbb
shrb
sub
andb
xor
push
das
mov
mov
ss
rolb
or
aas
jb
cmp
sti
in
xchg
or
mov
mov
jp
nop
inc
jno
daa
cmp
mov
xorb
aam
mov
xchg
mov
inc
or
data16
movsl
mov
xor
mov
jo
mov
aaa
inc
call
in
and
mov
cli
stos
jmp
add
or
mov
push
and
inc
cmp
repnz
das
mov
fst
cmp
call
cmp
pop
xor
mov
sbb
aas
ljmp
add
jb
mov
mov
adc
mov
ja
cmc
add
pop
cmp
rclb
shlb
and
sar
push
stos
add
shll
jmp
mov
adc
push
sbbl
or
stos
sti
jbe
es
jmp
jp
call
arpl
add
add
out
cmp
lea
popl
sti
testb
out
rorb
jmp
movsl
xchg
dec
mov
pop
sti
sahf
jge
call
mov
sub
xchg
xchg
das
and
sti
cld
addb
dec
hlt
add
mov
jecxz
jmp
loope
dec
addr16
adc
add
dec
outsb
cld
push
sbb
jge
loop
fldenv
adc
je
adc
hlt
repz
decl
cld
adc
jle
pop
pop
ja
rorl
sbb
and
mov
addl
jbe
enter
inc
imul
push
out
std
jne
imul
ljmp
add
add
push
cld
xchg
daa
sub
cli
cmp
xor
xlat
repnz
xor
movsb
mov
jae
adc
jp
stos
push
addl
mov
rcrb
cmp
adc
mov
xor
jbe
rclb
sbb
mov
shll
lea
pop
lret
lahf
push
cmc
mov
divl
mov
sbb
loope
cmpsb
xchg
and
mov
jg
int
xadd
xchg
int3
testl
adc
call
cmp
nop
js
xor
mov
jmp
mov
jle
cmp
mov
push
push
in
aad
adc
imul
cld
or
out
cltd
sbb
add
mov
data16
push
decb
mov
jmp
sysenter
es
mov
mov
cmp
and
mov
jmp
popa
sbb
in
adc
sbb
sbb
into
aas
call
fs
inc
jb
scas
jb
mov
add
mov
dec
or
push
je
xor
sbb
sarl
mov
cmc
mov
inc
add
pop
xchg
xchg
cltd
cmpsl
std
push
mov
inc
lea
and
loop
dec
arpl
xchg
pop
mov
sbb
inc
and
mov
jne
xchg
or
add
add
xchg
dec
call
aaa
nop
rclb
roll
mov
shl
xor
dec
jmp
int
add
rolb
jae
mov
fildl
sub
imul
jecxz
lret
ret
pop
mov
jmp
mov
daa
std
pop
cmp
pop
mov
inc
mov
rolb
push
into
mov
add
mov
inc
mov
inc
add
hlt
xchg
push
jno
xor
pop
addr16
scas
jmp
cmpsl
testb
lods
xor
push
fstl
std
lret
sarl
cli
ds
sahf
stos
mov
and
daa
sbbb
call
dec
sub
inc
shr
nop
and
stc
subl
add
mov
aam
dec
icebp
sarl
sbb
cmp
aaa
clc
ret
sub
and
lods
sbb
push
test
pop
ljmp
cmp
jmp
add
xchg
data16
mov
xchg
insb
mov
inc
addl
sub
fdivl
and
shlb
sahf
sub
lret
jb
inc
loope
mov
aaa
cmc
movsb
sti
shl
sbb
ljmp
mull
xchg
stos
je
jne
xor
cmp
sbb
adc
mov
push
sbb
add
js
leave
pop
jge
sub
data16
outsb
rorb
jmp
inc
push
add
mov
jb
in
jge
sti
jbe
xchg
mov
add
pop
fcomps
or
mov
dec
js
sbbl
int
data16
or
pop
mov
jbe
addr16
sub
sti
push
and
jg
mov
arpl
push
mov
push
mov
pop
and
xchg
std
adc
testl
pop
ret
dec
mov
call
mov
hlt
cld
mov
data16
adc
daa
iret
or
xchg
mov
mov
pushl
in
xor
popf
cmpsl
mov
dec
pop
add
cld
test
adc
mov
aas
or
jno
pushl
mov
sbb
inc
adc
arpl
xchg
add
add
out
mov
xor
add
inc
in
xor
stos
adc
mov
jge
mov
ss
cli
jae
pop
mov
insl
mov
mov
sbbl
sti
lret
push
xchg
mov
das
cmp
cmp
movsl
push
xchg
das
cmp
inc
sub
mov
dec
push
mov
aas
dec
add
dec
jp
adc
fs
push
jg
xor
in
ss
mov
jmp
sbb
lea
aas
ret
lahf
aam
movsl
dec
jmp
adc
jp
add
dec
xchg
ljmp
jmp
ljmp
add
inc
mov
jbe
mov
jmp
lds
pop
mov
rclb
rorb
lods
mov
dec
sahf
and
ljmp
rcll
je
pop
fidivs
fimuls
fs
sahf
sti
jmp
mov
add
jl
sub
jmp
out
enter
mov
add
iret
roll
pop
sahf
sti
jmp
popf
hlt
add
mov
add
mov
scas
add
arpl
mov
sar
mov
aas
or
add
dec
daa
push
add
ss
test
lea
add
pop
jmp
test
out
push
push
ret
cld
adc
hlt
mov
push
addb
sbb
add
sbb
addl
jmp
pop
aas
or
ljmp
fstl
cli
dec
push
aas
or
mov
call
sbb
push
imul
mov
test
add
scas
add
mov
pop
jg
stos
add
mov
lret
imul
cmpsb
mov
scas
dec
scas
incb
add
add
stos
cmp
inc
ret
in
xor
adc
mov
test
test
std
enter
mov
inc
jae
sub
push
mov
incl
cmp
mov
in
adc
in
jg
inc
hlt
ret
ret
adc
rcrb
xor
mov
scas
sub
xor
mov
adc
fstl
xchg
and
sahf
mov
jg
cmpsl
ja
jp
cmp
cli
pushf
mov
pusha
and
sbb
popf
sbb
add
or
push
inc
sti
xor
push
lods
or
loope
xor
add
pushf
jmp
xchg
add
out
imul
push
pop
and
inc
faddl
add
add
sti
jmp
mov
add
mov
je
movsl
sti
add
mov
sub
fwait
sti
jmp
mov
add
xchg
callw
imul
int
add
cmpsl
pop
inc
add
xor
dec
add
fwait
sti
push
inc
cli
add
mov
or
pop
xchg
out
or
add
mov
pop
inc
mov
cli
ret
lahf
add
add
daa
pop
lock
mov
pushf
sti
adc
fmull
aam
xchg
int3
ret
mov
movsl
pushf
mov
nop/reserved
decl
jmp
lcall
add
adcl
add
mov
ret
or
std
jne
cld
sti
push
mov
add
add
push
call
and
mov
cltd
mov
ds
int
add
sub
add
and
add
ss
push
jle
and
test
test
xorb
cmpsl
mov
sub
movsb
cmpsl
jmp
out
xor
enter
mov
sub
add
add
xor
mov
xor
sub
xor
bound
es
sti
mov
lret
inc
test
or
fidivl
cld
xor
pushl
data16
mov
jmp
add
mov
imul
test
cmpsb
aaa
rcr
xchg
push
test
aaa
test
adc
mov
add
add
cwtl
sbb
mov
rolb
push
stc
lds
adc
jmp
leave
mov
mov
jp
mov
pop
dec
push
das
dec
or
sti
inc
mov
rcrb
or
fwait
sti
add
pop
xor
std
fwait
aaa
scas
cmp
cmpsl
adc
out
xchg
into
and
jmp
pop
dec
in
clc
xchg
loope
adc
call
leave
or
sub
add
mov
vphaddwd
pop
mov
add
mov
add
notl
add
scas
and
mov
or
add
mov
push
je
es
jecxz
cmp
add
in
outsl
add
xchg
jmp
je
mov
jecxz
fwait
mov
mov
xchg
add
dec
mov
sti
dec
clc
pop
pop
xor
ret
add
add
sbb
pcmpgtb
mov
jmp
jmp
aam
dec
xchg
mov
je
sub
lcall
cmp
and
add
jne
mov
adc
sub
pop
ret
sti
ds
cmp
lret
aam
call
push
cmp
push
add
cli
lcall
pop
test
mov
rorb
inc
int
pushl
hlt
sbb
ret
sar
enter
mov
aas
jae
and
scas
loope
jae
add
add
mov
inc
inc
jge
pushl
daa
stos
pop
mov
jmp
mov
fmull
ds
xchg
adc
xchg
fiaddl
ds
push
rorl
jnp
pcmpeqw
sbb
jb
jg
jb
subl
pop
xchg
call
jecxz
add
add
jmp
jle
test
jle
jg
shrb
sub
dec
in
not
test
ret
inc
mov
adc
xchg
lahf
jmp
fwait
dec
mov
jmp
out
test
in
sbb
mov
out
add
mov
ljmp
inc
push
or
call
push
test
push
ds
inc
xchg
xchg
sti
jmp
mov
push
mov
mov
lods
ds
inc
jno
sti
jmp
mov
jne
cmp
sbb
out
or
jg
mov
cmp
lea
xchg
add
fwait
xor
outsb
xorl
push
push
je
lcall
clc
ror
push
mov
add
add
gs
inc
and
je
aas
mov
add
lea
add
jecxz
fnstenv
dec
lcall
mov
hlt
push
cli
push
pusha
ds
xchg
sti
lcall
dec
mov
and
inc
add
xchg
mov
mov
dec
ficoml
cmpsl
push
dec
push
and
idiv
imul
pop
pop
lds
add
add
add
test
dec
push
sub
shl
inc
mov
jo
mov
xor
mov
mov
notb
push
mov
movsb
stos
aaa
or
and
jae
sub
aas
jae
sbb
add
cmp
pushl
jo
inc
mov
jbe
mov
incl
std
mov
sti
jmp
out
notb
pop
xor
jp
fstp
pop
xchg
inc
sub
sub
cmc
pop
mov
mov
dec
nop
jmp
sti
sub
pusha
xorb
test
fldl
jl
add
mov
dec
jne
in
pusha
cmp
fcmovbe
shlb
or
add
pop
mov
int
cmp
dec
add
mov
cs
sub
or
jp
adc
popl
pop
popw
stc
outsb
movsb
adc
aam
cmp
iret
mov
pop
cmpsl
outsl
xchg
and
aas
mov
shrb
sahf
cs
popf
push
xchg
adc
jb
sbb
stos
mov
and
mov
inc
push
cmp
mov
inc
jp
add
mov
pop
sub
into
data16
fwait
jge
fcomi
cs
stos
dec
add
mov
push
add
mov
test
jmp
adc
or
js
push
sti
cmp
xchg
lcall
mov
mov
decl
je
add
add
inc
add
shrb
jmp
push
pminub
out
mov
mov
pop
fists
dec
mov
pop
add
xor
mov
gs
add
sarb
push
call
push
shrl
mov
lods
fdiv
js
jg
ja
ljmp
adc
aas
clc
add
cmpb
popf
mov
mov
mov
jo
jae
jo
jae
pusha
int
mov
add
cld
xor
cmp
add
and
and
shll
jae
nop
lret
pop
adc
icebp
daa
push
fucom
and
pop
jnp
verw
adc
ret
cld
push
ret
or
add
and
mov
mov
andl
and
push
or
fists
add
sbb
cmp
add
and
mov
mov
call
iret
jmp
add
lea
js
in
mov
hlt
mov
xor
mov
js
xchg
mov
lret
inc
jne
push
aad
nop
mov
ljmp
add
stos
addl
je
in
popl
adc
jmp
jp
add
mov
mov
je
or
fdivr
fdivrl
lcall
sahf
mov
mov
xor
cld
push
or
and
add
xchg
add
repz
jne
sti
push
mov
jb
xchg
sti
sbb
jbe
add
iret
cmp
inc
aaa
jecxz
xchg
scas
cld
mov
mov
jge
mov
push
inc
outsb
jbe
pushf
adc
pushf
sbb
or
pop
jecxz
jle
add
iret
sarl
ret
xlat
aaa
jecxz
or
orb
mov
mov
jge
mov
push
mov
ja
or
pop
cld
sbb
or
pop
jecxz
ficoms
call
ret
mov
mov
xchg
ficoml
addb
sub
inc
ja
shll
cltd
inc
mov
dec
jnp
add
add
and
loop
mov
dec
cmp
std
movsl
loopne
push
mov
xchg
cmc
lret
sti
pop
xor
inc
mov
shrb
jecxz
inc
sbb
out
lea
pop
dec
or
add
or
cli
add
mov
xlat
push
imul
mov
push
in
test
cmp
add
ja
dec
mov
inc
lea
dec
mov
inc
lea
or
dec
pop
sub
rorl
lock
outsb
push
pop
and
cmp
cmpsl
pop
dec
pop
stos
fcoms
push
rclb
stos
jecxz
adc
push
rclb
stos
in
adc
pop
rclb
stos
out
adc
pop
rclb
stos
jmp
nop
push
stos
jmp
shll
movb
add
sub
and
out
push
sub
cwtl
push
out
pushf
movaps
add
jmp
movsl
testl
push
mov
push
test
adc
mov
sti
pusha
insb
insb
out
addr16
inc
stos
ds
call
outsb
lcall
movsb
xchg
jo
sarb
cmc
or
outsb
add
sahf
es
mov
gs
sarl
sti
pusha
in
imul
pop
dec
inc
add
adc
call
or
cld
mov
xchg
add
rorb
je
fdivl
andl
test
or
pop
add
mov
jg
les
cli
xorb
add
pop
adc
in
xchg
xor
sbb
mov
into
ds
movsl
cld
dec
pop
idiv
push
fucomip
and
cli
decl
cmp
ja
xchg
call
xor
repnz
mov
nop
dec
mov
or
cmc
in
imul
mov
repnz
sub
inc
mov
cld
test
out
aas
mov
inc
jae
imul
lds
cmp
sti
orb
test
out
addr16
adc
lret
mov
icebp
scas
cmp
hlt
push
movsb
mov
jmp
jle
xchg
mov
cltd
dec
add
jo
mov
adc
add
add
add
std
add
data16
inc
xchg
push
pop
mov
mov
jo
scas
sbb
mov
pusha
mov
and
outsb
mov
adc
cltd
mov
mov
mov
pop
mov
leave
xchg
nop
cmpsb
xchg
lcall
cld
or
push
test
add
leave
xchg
or
popf
add
add
jb
add
add
sub
sub
movl
mov
jmp
sti
cmp
les
and
subl
mov
push
or
adc
add
ljmp
ret
cld
bound
xchg
testb
mov
sti
hlt
mov
les
jo
add
add
sub
push
mov
repnz
repnz
enter
cmp
mov
mov
inc
test
sarb
push
push
ret
push
xlat
decl
test
sti
test
mov
out
pop
xlat
call
movsb
inc
in
jmp
push
jns
cld
jne
cmpsb
push
test
stos
orb
add
inc
cmpsb
mov
mov
xor
mov
cmpsb
xor
xor
jb
pop
int
incl
popf
decb
sbb
fadd
decl
sarl
in
adc
cmc
xchg
add
and
xlat
ss
pushl
std
rorl
mov
cld
mov
inc
aad
inc
jae
std
testb
in
mov
add
pushl
mov
fdivs
sbb
stos
sbb
inc
add
mov
in
lock
aaa
xor
add
test
addb
jne
aam
iret
es
xlat
ja
ds
sbb
add
cmpsl
xchg
sub
pop
jmp
add
data16
sbb
pushf
pop
sub
xchg
imul
or
add
mov
outsb
add
fidivrs
lahf
out
cmp
mov
clc
push
test
scas
mov
xor
add
mov
bound
push
pushf
out
imul
das
add
jae
sti
arpl
call
sub
mov
inc
push
lods
or
faddp
roll
popf
dec
sti
jne
mov
lahf
movsl
cmp
jne
sbb
testb
in
lret
jmp
cmpw
test
sub
rolb
icebp
cld
push
push
test
cmpsb
jno
testl
int3
outsl
or
popf
mov
mov
mov
add
adc
dec
jno
push
call
out
dec
call
jmp
jecxz
ret
xor
andl
mov
in
call
or
push
mov
mov
fistpl
outsl
dec
xchg
sbb
sti
imul
mov
test
sub
loope
addl
push
pop
mov
or
or
icebp
cli
imul
push
hlt
out
cmp
add
inc
jmp
stos
add
call
arpl
adc
mov
loope
cld
xor
xchg
mov
dec
shll
test
decl
and
inc
adc
xchg
insb
mov
mov
dec
xor
push
testl
stos
mov
jns
push
inc
stos
sbb
push
roll
push
push
nop
ss
xchg
out
add
dec
cld
mov
or
js
imulb
pop
dec
cwtl
push
dec
or
adc
or
pminsw
iret
add
sub
sub
jg
add
adc
adcl
xor
mov
mov
pop
add
sub
jl
sbb
cmp
repz
loope
data16
loopne
adc
xor
push
cli
testb
dec
ret
jnp
cmp
data16
mov
movaps
or
pop
jecxz
std
data16
add
ror
aaa
cmp
jge
push
cmp
movsb
inc
mov
inc
pop
mov
test
shll
sub
mov
sti
push
inc
jl
xchg
push
or
or
cmp
arpl
push
cmp
jne
jo
mov
dec
decl
pop
mov
add
sbb
ljmp
mov
rcrb
outsl
leave
push
xchg
push
out
jp
push
xchg
add
push
push
mov
xchg
inc
jecxz
leave
mov
xor
mov
inc
stos
fs
xor
fs
xor
clc
inc
pop
mov
push
sbb
cmp
xchg
push
or
add
mov
movsl
fisttpl
xchg
adc
stos
push
cmp
mov
popf
ud0
cltd
out
inc
hlt
pop
std
mov
pop
pop
xlat
push
clc
sub
jecxz
loope
mov
ret
shlb
pop
jb
addr16
sub
imul
push
adc
cmp
imul
cmp
adc
inc
stos
movb
add
idivl
push
movsl
and
adc
add
mov
ficoml
int
insb
das
sarb
sbb
insl
pop
add
add
adc
dec
xor
negl
mov
cld
jnp
iret
jmp
ret
xorb
adc
jns
push
mov
jmp
and
jns
mov
in
cmc
add
add
mov
mov
sbb
les
mov
sahf
mov
orl
in
mov
mov
test
mov
jnp
popa
jecxz
add
out
push
out
mov
sti
pusha
repz
stos
dec
xchg
das
test
mov
push
sbb
into
test
xor
mov
push
xor
sti
xchg
add
add
xor
mov
mov
data16
loopne
fdivrl
enter
mov
movsl
or
ret
or
stos
mov
test
mov
or
sub
xchg
das
sub
add
mov
pushl
cli
dec
stc
jle
out
cld
mov
jle
jmp
jbe
adc
xchg
xchg
call
mov
cld
jle
sti
mov
and
mov
dec
pop
pop
push
fsts
jecxz
add
push
mov
jmp
sarb
sti
mov
jns
sti
incb
shrb
cmpsl
inc
imul
sbb
jne
movd
cld
push
mov
add
jo
mov
js
mov
jp
add
xchg
cld
jmp
inc
jae
mov
adc
data16
mov
and
add
lcall
imulb
fsub
mov
add
notb
popa
adc
push
push
xchg
nop
hlt
push
pop
push
adc
aaa
loopne
cwtl
pop
jg
cwtl
add
test
add
test
pop
andl
rolb
add
xor
jle
nop
cmp
mov
mov
imul
or
icebp
fists
sbb
repz
sbb
xchg
or
mov
or
or
jbe
jg
pop
sbb
rorb
adc
xorl
cmpsl
mov
ret
jb
sub
cli
jmp
sub
ljmp
add
cld
scas
mov
cld
clc
jle
mov
je
cs
and
inc
mov
shlb
or
je
mul
and
sub
push
and
adc
jae
rcll
cli
out
in
lahf
and
push
aas
jmp
mov
paddsb
pop
lea
cmc
bswap
call
and
bswap
call
lock
lret
inc
jno
fcmovb
outsl
rorl
mov
xchg
imul
inc
mov
add
mov
lret
decl
sbb
pop
jne
gs
jg
sub
dec
adc
outsb
clc
pop
inc
sub
push
dec
ds
pop
xchg
mov
stc
dec
hlt
pop
test
sldt
add
dec
jbe
dec
cmc
add
subb
add
cwtl
sti
lcall
pop
nop/reserved
mov
psubusb
sti
decl
decl
negl
jns
mov
nop
add
mov
jg
imul
or
mov
mov
inc
adcl
addb
add
or
mov
or
loop
add
lretw
sti
lea
jp
jp
mov
jo
dec
lods
pop
aam
testb
negb
dec
mov
nop
cmpb
js
jmp
jl
jmp
dec
dec
cmp
outsb
mov
cmp
fucom
xor
push
daa
por
fsts
js
cltd
or
pop
add
mov
jp
ljmp
rcr
pop
add
push
adc
jb
test
jae
mov
jg
add
lock
cmpsl
clc
mov
test
sbb
arpl
pushl
ss
add
add
pop
add
sub
cld
add
push
jb
shll
adcb
fisttps
aas
mov
or
jge
or
inc
adc
cmovno
mov
out
jno
call
icebp
fisttpll
xor
mov
aaa
movsb
stos
addl
jbe
push
jb
pminsw
push
xchg
jmpw
xchg
pop
loopne
pop
insl
call
testb
sahf
sub
mov
into
cmp
cmp
mov
pop
std
jne
hlt
aad
dec
adc
out
mov
jmp
mov
add
fisttps
sbb
fildl
pusha
add
inc
or
out
test
add
add
bound
sbb
mov
push
mov
lret
push
pop
jecxz
orb
gs
cmp
add
xchg
std
call
int3
or
mov
add
mov
xchg
mov
pop
std
xchg
fistpll
fwait
and
lock
add
clc
aad
xchg
fidivrl
shrl
mov
decl
stos
in
add
add
add
push
jp
mov
decl
mov
lcall
mov
gs
test
push
hlt
repnz
ljmp
test
cld
hlt
je
out
jmp
jge
mov
push
je
adcb
add
adc
add
sbb
push
dec
outsl
jb
pop
jmp
cmp
outsb
pop
mov
out
mov
pop
jge
xchg
jmp
cltd
adc
fwait
or
cmp
adc
outsb
sbb
ljmp
lods
das
and
xor
outsb
jmp
add
mov
cmp
mov
cmp
add
movsb
iret
add
inc
clc
or
cld
pop
call
gs
loope
sub
call
jb
adc
hlt
sahf
jne
ja
imul
mov
jmp
push
jne
stos
and
mov
pop
sti
mov
push
jb
ja
fs
sti
push
mov
sbb
cltd
scas
data16
out
mov
add
add
test
dec
push
test
imul
xor
out
scas
inc
xchg
cld
mov
lds
xchg
mov
fisttps
pop
push
loope
mov
sbb
push
mov
arpl
jg
dec
xchg
xor
mov
xchg
xor
xchg
sub
nop
test
shrl
add
adc
adc
xorl
sub
cli
mov
add
add
mov
push
cmp
pushl
add
sbb
addl
call
mov
test
dec
lock
clc
push
push
push
loop
mov
cmpl
sti
enter
mov
jns
cmp
cmove
call
ss
jne
pop
jp
stos
cli
add
or
add
add
outsb
outsb
add
xchg
int3
or
faddl
mov
orl
jo
add
hlt
mov
cmpl
push
jg
xchg
sti
ds
or
or
jbe
aas
gs
loop
cmc
sbb
fcomps
push
mov
int3
mov
pop
pusha
imul
data16
mov
repz
add
jb
out
stc
hlt
xchg
call
push
jae
outsb
or
jno
or
shr
mov
insb
inc
and
not
pop
adc
fwait
pop
les
xor
pushw
out
aad
jmp
pop
sbb
cmp
pop
pop
push
add
jo
sbb
add
xchg
cmp
add
jo
push
sub
call
add
popl
ror
test
mov
flds
mov
pop
icebp
lahf
mov
rcrb
push
addr16
ds
cmp
mov
mov
sti
push
mov
jge
xor
call
push
mov
call
out
xchg
cld
cs
dec
es
cmpsl
xchg
mov
data16
sub
mov
add
int3
dec
adc
cmp
push
je
fdivrs
mov
incb
add
call
inc
stos
addl
xchg
subps
push
cmp
loop
call
cmovge
inc
or
pop
adc
sbb
cmpl
push
arpl
test
jg
inc
push
lea
orl
seto
add
jl
hlt
mov
incl
jecxz
add
in
out
xchg
dec
xchg
fisttps
sub
aam
xor
sti
cmp
or
ss
add
cmp
mov
out
push
add
mov
jge
std
cmc
int3
cli
cmc
jno
iret
mov
inc
js
add
in
dec
enter
cli
sbb
dec
in
mov
test
incl
sub
xchg
and
inc
mov
and
mov
sub
into
insl
les
insb
dec
in
jbe
in
mov
dec
pop
ret
call
push
adc
hlt
in
cmp
xor
adc
popa
and
add
xacquire
xchg
jmp
add
int
push
dec
fisttpll
out
sub
std
sbb
mov
bound
xor
stos
sub
dec
push
ret
mov
jmp
pop
add
sti
sbb
cmpsl
dec
mov
fisubrs
jmp
mov
mov
adc
jmp
lret
stc
xor
mov
mov
popl
gs
test
subl
es
xchg
cmp
movsb
jne
movsb
dec
mov
xchg
adc
push
jp
add
je
cmp
lock
and
icebp
lret
test
fistps
inc
add
fs
lea
mov
sbb
gs
sbb
dec
xchg
call
mov
jp
rorb
inc
mov
cmpsb
inc
in
xor
addl
add
mov
fs
inc
jle
adc
mov
xor
sbb
dec
pop
push
call
pop
dec
mov
sbb
ret
int
mov
xchg
jp
xchg
arpl
cmp
add
add
jne
mov
jb
sbb
ret
ficomps
or
andb
and
filds
push
daa
ret
incb
fnstsw
leave
mov
icebp
jp
popf
ror
mov
lret
xchg
lock
negl
ds
jecxz
sbb
pop
leave
ja
call
test
xchg
outsb
pushl
mov
add
test
xchg
add
out
sti
xor
fwait
push
jne
jmp
add
lcall
add
lcall
mov
mov
inc
mov
ret
bound
jbe
xchg
fs
jmp
xor
cli
cmp
xor
flds
or
ret
icebp
imul
es
jge
adc
cmc
or
or
dec
call
add
lds
jmp
xor
enter
sarb
nop
mov
data16
scas
or
data16
add
aam
sti
push
fimuls
jmp
mov
lock
cmp
incb
bound
xor
add
mov
adc
or
sti
into
xor
rcrl
xor
mov
cmp
xor
adc
jge
data16
popa
and
add
pop
cmpsb
lods
mov
add
addr16
pushf
adc
push
aaa
mov
lcall
icebp
adc
jnp
mov
push
mov
lea
add
add
mov
lea
sbb
jne
dec
loop
cli
stos
push
idiv
push
dec
pop
xchg
mov
shlb
shlb
fdivr
fwait
push
add
jnp
add
int3
aam
stc
pop
mov
jmp
push
pushf
or
jg
call
pushl
aaa
imul
faddl
cmp
xor
aas
mov
cwtl
sbb
xor
xchg
xor
xchg
out
out
test
out
mov
lock
cmp
stc
sti
fisubl
addb
mov
cmpsb
mov
out
shlb
dec
pop
repz
aas
imul
sub
or
pop
add
xlat
mov
add
pop
scas
incb
add
add
scas
lcall
scas
add
outsb
jno
pusha
adc
dec
fabs
dec
dec
jp
adc
sbb
jne
stos
in
mov
divl
dec
cmc
sub
and
orl
insl
add
je
mov
mov
repnz
mov
add
xor
adc
mov
fldenv
sub
sti
xchg
pop
ljmp
xchg
ljmp
jecxz
mov
xchg
lods
adc
jl
mov
push
sub
mov
fs
aas
push
add
pop
xchg
fbld
mov
dec
xchg
mov
enter
add
cmp
and
pop
sti
testb
insb
gs
call
inc
sbb
pop
mov
adc
jmpw
adc
push
mov
out
cs
out
pop
lea
sti
loope
add
adc
pushl
outsb
or
fidivs
adc
dec
xchg
notl
fistps
psubusw
mov
add
fsubl
xchg
lea
fcomps
decl
xchg
bound
jae
test
out
idiv
dec
arpl
dec
arpl
push
out
push
or
mov
pushl
adc
aam
cs
mov
out
fldl2t
fsubl
jmp
out
aam
mov
loopne
sub
clc
mov
js
xchg
cwtl
and
mov
dec
fisubrl
add
jo
filds
ret
cs
out
jae
hlt
test
arpl
jae
xor
test
push
dec
or
jns
mov
pop
pop
cmp
push
cmp
imul
stos
in
test
pop
int
test
xor
mov
outsl
fdecstp
addl
jecxz
adc
es
push
push
push
xor
ljmp
pop
mov
inc
adc
loop
outsb
lret
sub
in
mov
pop
enterw
jb
nop
test
sbbl
pop
dec
sbb
jmp
arpl
fbstp
push
leave
cmpsb
jno
cmpsb
add
add
add
subl
nop
je
sub
add
mov
or
in
push
and
jb
imul
popa
inc
shrl
lcall
ret
pop
test
xor
or
sbb
aad
fldcw
addr16
add
xchg
mov
lock
call
add
add
cwtl
aas
adc
xchg
psubw
pop
ret
xchg
out
ss
daa
pushf
mov
iret
aaa
add
push
mov
jnp
mov
test
xchg
add
out
lea
lret
call
mov
bound
xchg
cmp
inc
sbb
jge
dec
popl
mov
add
andb
push
into
add
pop
ret
call
orl
push
je
sbb
rclb
mov
je
nop
scas
adc
fists
inc
movsb
adc
je
in
cmp
xor
outsl
mov
pop
push
sbb
sbb
mov
incl
lods
jb
jmp
adc
outsl
jl
test
push
sti
ds
cmp
ljmp
repz
jnp
push
stc
out
sti
iret
dec
sti
mov
in
or
hlt
and
dec
data16
je
cmp
fdivrp
or
adc
es
jle
addr16
pop
inc
jp
jno
lock
jge
jnp
rorb
push
movsbl
dec
int
inc
lock
or
fbstp
add
add
fldcw
cmp
dec
add
scas
sarl
lods
in
add
roll
pop
stos
out
dec
loop
push
sti
mov
and
xor
or
pop
jp
fwait
loop
cmc
mov
push
popf
aam
pop
cmp
popa
dec
mov
inc
add
pusha
addr16
in
and
add
add
lret
inc
enter
xor
pop
jmp
into
pop
sti
xchg
xchg
push
repnz
mov
movsb
sti
mov
mov
xchg
push
cmc
sub
xorb
cmp
in
mov
in
mov
or
jno
repz
pop
or
adc
mov
jne
scas
callw
pop
sti
jb
push
pop
pop
outsb
dec
mov
add
int3
sbb
jnp
mov
ret
add
jl
mov
xchg
cmpb
push
test
mov
adc
mov
add
pop
rcrb
mov
fs
or
and
cmp
pop
test
add
int3
imul
jmp
add
add
inc
cld
jl
jne
aam
cld
fldenv
call
arpl
seto
add
inc
adc
ud1
or
orl
jp
hlt
lock
xchg
sbb
mov
adc
shlb
shll
je
jmp
or
ret
add
mov
js
popf
scas
dec
add
cmp
ds
xchg
add
add
addr16
sahf
hlt
jns
les
sub
clc
mov
push
js
lods
mov
add
mov
je
icebp
lds
adc
outsl
aad
hlt
sub
xor
nop
das
ret
dec
adc
add
xor
inc
sub
faddp
xor
mov
test
in
inc
push
add
push
or
jae
sub
lret
mov
jge
mov
insl
sub
adc
add
sub
xor
loopne
shll
push
stos
fistps
outsb
fadd
arpl
add
mov
repz
and
xor
add
xchg
ret
dec
mov
inc
pop
mov
push
sub
add
add
push
xchg
xor
or
popl
jmp
pop
pop
add
aaa
pop
adc
sub
push
sub
call
pop
mov
jne
xchg
es
xor
fsubrl
repz
pop
mov
stc
dec
or
mov
jg
movsl
rorb
loope
mov
add
add
iret
add
adc
mov
test
scas
adc
into
add
mov
jecxz
loop
push
mov
arpl
call
jno
push
idivb
adc
call
pop
inc
test
mov
pop
mov
enter
dec
or
and
in
subl
push
ret
aam
push
rcl
pop
aad
hlt
mov
add
add
shll
cmp
fstps
cmp
aam
adc
jae
sub
jae
outsl
adc
mov
pushl
daa
incb
jo
add
cmpb
push
ss
dec
int
mov
clc
fisubrs
gs
sbb
imul
sub
push
xor
push
lret
xchg
out
arpl
xor
xor
in
in
add
data16
mov
fdivrl
clc
add
xchg
clc
push
dec
pushf
hlt
call
ds
clc
ss
add
lea
lods
jmp
loop
push
nop
jmp
inc
mov
aam
fnsave
call
push
push
ljmp
add
add
vfrczss
inc
outsl
jmp
cmovo
out
mov
inc
jmp
fcmovnbe
adc
out
lret
jne
gs
mov
jmp
adc
push
fdivl
iret
jmp
sub
rol
fstpl
hlt
cmpsb
les
sahf
mov
inc
in
enter
rol
in
imul
add
mov
xchg
jg
adc
cmp
push
mov
inc
jmp
data16
inc
sbb
pusha
inc
jg
mov
dec
inc
es
pop
push
dec
add
xchg
xchg
mov
push
add
or
out
add
clc
insb
jbe
cmp
out
addr16
pusha
cmc
inc
xchg
je
pop
sbb
xchg
xorl
dec
cmp
add
add
out
adc
test
enter
pop
xchg
dec
dec
cmp
stc
xchg
inc
sbb
xor
pop
dec
decb
dec
int3
xor
or
call
mov
ss
pop
pop
or
adc
filds
push
sub
or
mov
aas
sbb
int3
lret
add
outsl
sbb
xor
add
pop
fimuls
fs
mov
push
in
cmp
hlt
cmpl
call
cld
xchg
xor
adc
push
lahf
in
cmp
jg
ret
add
push
inc
lock
lock
jbe
or
int
mov
js
aaa
mov
or
enter
mov
jge
mov
hlt
mov
cmp
shrl
hlt
mov
add
add
pop
jl
fucomip
ss
or
ja
xchg
mov
add
add
add
insb
inc
mov
pop
adc
lret
rcll
aad
in
adc
add
jg
dec
lods
sbb
in
xor
test
xor
in
inc
pop
sbb
xor
push
dec
gs
adcl
imul
out
dec
pop
lods
sbb
sbb
out
push
lret
mov
dec
data16
cmp
mov
out
popl
jmp
dec
add
adc
outsl
lods
dec
add
jne
fisttpll
add
pop
ds
push
fsubr
sub
sti
in
aas
call
mov
rorb
sub
add
add
mov
xorl
or
ja
mov
mov
ljmp
inc
push
jle
xchg
mov
and
pop
mov
sub
mov
stos
mov
ret
push
shll
mov
test
add
pop
mov
sti
or
dec
cmp
scas
test
adc
xlat
xchg
jnp
dec
xchg
add
mov
fdivr
add
adc
sbb
cwtl
push
sub
adc
xchg
testl
xlat
in
sbb
sbb
pop
sahf
idiv
mov
push
sbb
mov
lock
or
sub
fucomi
adc
inc
sub
pushl
push
fwait
cli
xchg
xchg
pop
sub
out
lcall
es
cli
jb
push
xor
jle
cli
bound
pop
or
or
loope
dec
dec
fwait
cli
cmp
out
imul
out
pop
sbb
sti
mov
sbb
lret
push
faddl
ds
push
and
mov
sbb
test
push
cmc
imul
clc
incb
test
lods
nop
outsb
inc
mov
loope
loopne
xchg
pop
pop
flds
jmp
xorb
inc
xchg
mov
or
loopne
adc
add
or
loope
notb
sub
push
sub
pushf
cmovns
aas
shll
add
mov
fdivr
add
fsubl
xchg
jecxz
push
cltd
fistl
xchg
orl
mov
add
out
mov
inc
icebp
cmp
mov
xchg
mov
das
xor
lret
and
mov
or
or
cmp
faddp
adc
jb
or
movl
addl
inc
adc
jb
sub
xor
call
xchg
jae
and
dec
fwait
jbe
mov
jmp
ds
push
mov
mov
repz
add
call
mov
xchg
addl
mov
jbe
data16
adc
and
pop
and
sub
in
testl
pop
xchg
mov
and
jge
adc
sbb
sbb
lock
add
jl
divl
orb
dec
mov
clc
or
into
and
lods
and
subb
xchg
and
iret
and
fcoms
and
mov
clc
mov
int
pop
push
xor
and
in
cmp
ljmp
out
xor
rcr
aas
mov
push
and
popf
clc
lahf
test
cli
add
cli
test
clc
aas
mov
inc
and
mov
or
ss
pop
in
xor
jp
cli
dec
dec
pop
and
pusha
pop
mov
std
cmp
out
cmp
mov
pop
and
adc
mov
adc
out
aas
frstor
scas
push
or
and
lea
add
aas
inc
pop
mov
cmc
call
lret
daa
xchg
fildll
xchg
outsl
lcall
pop
lods
daa
int
setnp
imul
mov
es
int3
sbb
fwait
lods
cmpsl
pop
negl
out
sub
inc
std
fwait
dec
cli
imul
fxch
out
fistpl
cmpsl
xchg
movb
add
pop
inc
xchg
mov
in
xor
int3
int
jb
and
pop
loope
mov
or
adcl
sti
push
mov
mov
mov
xchg
sti
mov
sahf
mov
mov
jae
out
add
mov
push
test
xor
cld
cltd
shlb
icebp
mov
out
sar
jno
cmp
ljmp
add
dec
sbb
and
testb
xor
mov
xor
stos
dec
pop
xor
add
xchg
push
push
mov
cld
push
pop
orb
cmpl
addr16
or
int
test
icebp
inc
sub
jge
mov
dec
out
xor
sub
testl
mov
aad
or
inc
adc
xorl
dec
mov
lea
mov
mov
adc
and
xor
adc
test
loopne
divl
adc
sti
cltd
call
test
mov
gs
mov
mov
and
cmp
sub
jns
call
xor
pop
or
dec
xchg
lock
xor
call
ds
call
cli
add
pop
ja
decl
dec
idiv
dec
lea
cli
jb
inc
and
scas
add
stc
xchg
or
mov
adc
mov
or
je,pn
add
jl
sti
xor
mov
cwtl
shll
jecxz
or
add
add
adc
jmp
test
mov
pop
insl
mov
xchg
lock
std
popf
daa
mov
dec
xchg
mov
xor
jmp
aas
ljmp
fsubs
fldenv
iret
insl
iret
in
inc
xchg
filds
mov
stos
aas
xchg
cmpsl
sbb
mov
sar
fisttpll
jns
add
xchg
sub
jmp
aad
xchg
xchg
sub
jmp
dec
pusha
xchg
mov
jg
xchg
imul
mov
mov
jmp
xchg
sub
push
push
push
paddw
ss
and
mov
push
popa
push
jp
jmp
mov
jp
mov
test
add
inc
das
stos
imul
dec
lods
adc
subb
out
inc
test
mov
xorl
mov
and
mov
and
or
xchg
shlb
rclb
adc
xor
inc
call
pop
out
adc
fdivrp
mov
mov
dec
add
inc
or
hlt
xchg
incl
add
add
xor
rolb
lea
jo
add
lea
push
call
lahf
xor
add
add
int
jmp
xchg
mov
jmp
stc
xchg
adc
mov
pop
sar
push
mov
aas
add
xchg
in
mov
ljmp
xor
mov
decb
mov
jne
sub
add
add
sbb
jne
and
mov
cmp
inc
lret
mov
sub
sbb
incl
stc
push
sbb
jg
push
out
aas
mov
push
add
sub
ud1
movsb
mov
add
mov
push
fimuls
cmp
xor
roll
add
addr16
rcll
daa
jae
cmp
call
inc
mov
jecxz
int
fwait
into
outsl
push
in
add
cmp
fstpt
or
add
or
mov
jmp
mov
pop
inc
lods
push
add
lock
out
ret
sti
arpl
add
mov
add
sbb
cs
add
nop
or
xchg
or
cmp
or
cmp
add
mov
mov
sarl
loope
push
pop
and
lret
sti
jno
nop
add
mov
dec
outsl
or
call
hlt
xchg
add
cmp
je
in
xchg
fnstsw
xchg
mov
push
add
pop
adc
bnd
pushf
mov
leave
test
sbb
ret
push
mov
xor
sbb
add
shl
decl
push
fs
lret
stc
push
inc
inc
decl
dec
clc
stos
adc
or
or
dec
sbb
call
add
fimuls
mov
push
loop
inc
lods
rorb
dec
jnp
iret
mov
shr
cmp
mov
push
addb
mov
add
cmc
jbe
cmp
mov
sahf
sbb
loopw
jne
push
pop
outsl
scas
jne
das
jmp
adc
mov
cltd
dec
aas
cmpsb
in
aas
sarb
gs
jg
lds
push
and
fcmovbe
bound
mov
sbb
mov
pop
cltd
leave
pop
mov
das
add
scas
aaa
add
jmp
out
push
mov
xor
add
sub
jge
sub
sbb
into
sti
cli
or
daa
clc
icebp
mov
cmp
data16
nop
outsb
dec
mov
inc
scas
ret
cmp
mov
cmp
pop
mov
mov
add
push
cmpsb
push
adc
in
xchg
popa
scas
xor
jmp
mov
ret
fdivl
inc
sbb
pop
mov
cmp
or
and
inc
inc
sub
in
dec
adc
aas
std
rolb
and
jecxz
sub
xchg
shll
mov
add
add
push
movsb
imul
bnd
dec
ffreep
sbb
pop
inc
int3
cmp
fsubrl
mov
mov
inc
mov
cmp
jmp
loopne
xor
sti
mov
jno
icebp
movsl
loopne
stos
fidivrs
push
out
add
mov
lea
lock
add
mov
inc
push
loope
pop
filds
pop
push
mov
pop
adc
sbbl
shlb
xor
or
test
out
ret
push
mov
dec
xor
dec
mov
dec
mov
mov
mov
add
xchg
arpl
mov
sarl
out
imul
jecxz
dec
jmp
or
fdivp
decl
mov
bound
dec
sti
cmp
cmp
inc
or
and
inc
dec
add
pop
fidivrs
or
sub
je
inc
jle
mov
push
aas
add
insl
add
mov
jle
and
add
sarb
test
incl
addl
add
jns
mov
andl
sti
loop
mov
add
cmp
cmpsb
data16
ret
cmc
push
pop
mov
scas
ss
fidivrl
dec
xor
or
jp
daa
or
cli
sti
dec
in
xor
imul
fs
xchg
mov
adc
loope
pop
pop
adc
add
add
mov
and
enter
pop
outsb
mov
pop
ss
lds
call
fsubr
xor
cld
xor
push
mov
add
cmp
or
shr
push
shlb
es
push
cmpb
daa
je
dec
or
ffreep
push
bound
push
mov
movsl
inc
lea
mov
repz
incb
push
mov
popl
sub
dec
add
stc
out
aaa
test
loop
xchg
clc
cmp
insb
idivb
adc
pop
mov
ret
xchg
loope
push
daa
cmp
fcomps
out
xor
add
orl
pop
add
je
pop
pop
sti
jae
sahf
rcrb
dec
mov
add
add
pop
pop
sti
inc
push
jmp
inc
jo
daa
div
jo
mov
mov
inc
jecxz
sqrtps
xlat
repnz
movl
push
inc
mov
and
mov
test
add
or
dec
mov
add
jb
adc
filds
dec
loope
dec
call
negl
bound
ret
mov
add
add
add
out
or
jo
mov
call
into
cmp
sarl
imul
scas
ret
jp
sub
ds
sbb
std
lock
mov
xchg
cli
jb
int3
test
out
jmp
dec
xrelease
and
sti
cmp
dec
push
xor
cmp
xor
call
bound
and
xchg
cwtl
xor
fimuls
ljmp
fsub
jl
xchg
add
movsl
adc
cmp
hlt
mov
bound
xor
testl
aas
pop
bound
filds
inc
xor
jl
xor
movb
mov
pop
loopne
push
lds
xchg
div
cmpsl
adc
mov
cli
mov
dec
jge
dec
mov
loop
mov
repnz
aad
jo
popa
call
push
or
cmp
loop
push
iret
fcmove
stos
std
xor
push
stc
mov
mov
cld
mov
and
sti
data16
lock
jmp
lea
loopne
faddl
add
xor
dec
test
rorb
mov
or
jl
clc
mov
xchg
pusha
xchg
aaa
je
mov
xchg
out
scas
mov
xchg
aad
and
cmp
or
mov
inc
aam
add
mov
or
and
cmp
daa
popl
add
inc
pop
push
push
iret
sar
pop
dec
xor
mov
push
mov
jne
daa
jb
jmp
mov
clc
lahf
hlt
loop
jp
adc
aas
jp
pop
or
add
sar
or
ret
into
out
sub
xor
jno
jmp
mov
clc
pop
hlt
loop
mov
hlt
mov
movsl
mov
ss
jae
incl
add
add
cmp
and
jecxz
incl
lds
mov
sub
cmp
xchg
or
repnz
mov
dec
add
fsubl
cmp
jle,pn
push
mov
cmpl
inc
hlt
mov
sar
mov
cmp
lods
lahf
inc
hlt
inc
mov
sti
dec
es
sti
enter
dec
nop
jo
and
int
mov
push
insb
jmp
add
movsb
loop
cmc
cmp
adc
test
add
sbb
pop
fisubrs
xorb
aad
xor
inc
insb
ret
scas
add
jnp
sub
mov
jae
ss
insb
pop
sahf
cs
or
sbb
shll
sahf
pop
sbbb
sub
ret
add
sbb
lock
aaa
inc
aam
add
xchg
mov
adc
fdivp
sub
loop
push
into
dec
adc
mulb
sahf
je
jl
add
jp
sti
cmpsb
clc
rcrl
shll
xchg
pop
adc
xchg
sub
test
xchg
daa
test
aam
xorb
aam
add
add
adc
dec
jo
dec
inc
mov
adc
repnz
cltd
test
jno
sti
mov
testb
hlt
push
popf
inc
add
outsl
idiv
dec
test
or
sbb
sbb
xlat
adc
xchg
mov
cwtl
mov
adc
in
idiv
dec
jmp
sti
or
and
fstl
add
xchg
daa
mov
cmpsl
inc
fsub
insl
aam
rorl
jl
inc
loopne
insl
fadd
popa
sbb
add
inc
pushf
pop
push
xor
mov
or
mov
add
mov
mov
dec
jge
repz
push
dec
inc
fisttps
cmc
ss
rclb
sti
enter
mov
dec
hlt
fsubl
jne
add
add
and
sti
and
jne
mov
add
jnp
dec
cmp
call
xchg
dec
and
mov
mov
jne
ds
add
and
pmaddwd
mov
ds
lock
jecxz
jp
sti
call
test
adc
nop
fimull
es
jmp
cmp
int3
add
pop
mov
ficompl
icebp
jg
add
aad
sti
jno
cmp
test
movsb
rcrl
test
dec
mov
cmp
fisubrs
ss
pop
addl
dec
and
mov
aam
ret
stc
inc
mov
mov
and
inc
cmp
add
add
jg
test
es
ds
pushf
push
jg
pop
jne
andb
mov
ljmp
adc
bound
callw
aam
mov
sti
andb
cmp
mov
xor
jb
add
nop
push
cmp
mov
lock
dec
adc
mov
adc
cmpl
sub
jmp
stos
aaa
ltr
add
fld
mov
sti
fdivrp
mov
vunpckhps
push
adc
mov
in
push
pop
pop
push
mov
hlt
adc
xlat
cmp
je
aad
lock
divl
dec
jne
stos
dec
adc
push
xchg
fld
mov
cmc
lcall
bound
f2xm1
or
adc
jne
adc
sti
daa
mov
add
cwtl
ret
sbbl
push
daa
imul
mov
sar
jbe
inc
cmp
inc
jp
sub
divb
rclb
xchg
pop
mov
or
xchg
xchg
lock
xor
push
ss
or
fsubs
or
add
lods
mov
enter
mov
pop
push
negl
aad
mov
push
xchg
pop
je
decb
shrb
mov
inc
mov
hlt
mov
iret
jmp
cli
sbb
stos
mov
mov
sbb
add
add
push
icebp
add
sbb
inc
mov
fwait
push
cmp
movsl
js
daa
les
inc
es
jge
adc
pop
mov
push
cmp
cmp
fwait
loopne
pusha
xchg
mov
add
into
loope
mov
jle
into
pushf
fnstcw
mov
pop
unpcklps
or
push
popl
aas
fwait
and
ret
cmp
jbe
sbb
stos
mov
adc
fs
or
loope
popl
jb
xchg
out
loopne
adc
hlt
mov
fistpll
mov
int
or
cs
inc
sub
mov
jl
clc
jbe
test
popf
xchg
aaa
sbb
nop
xchg
mov
adc
nop
roll
pop
pop
cwtl
add
xchg
and
inc
mov
pop
je
rep
mov
loop
rolb
xor
fwait
jl
adc
test
inc
xchg
xor
pop
add
or
in
and
in
fmuls
roll
pop
ficoms
in
add
and
sbbl
je
in
scas
cmp
xor
cmp
add
loope
adc
pop
lock
je
jne
mov
or
lds
inc
or
mov
cmpb
xor
addb
cmc
sub
jb
push
xchg
adc
and
fsubrs
add
add
cs
mov
sub
xchg
jmp
test
and
adc
mov
or
je
pop
negl
call
scas
add
mov
mov
cmp
gs
dec
ja
and
inc
lods
mov
dec
inc
es
jns
adc
xor
cmc
push
ljmp
sbb
orb
add
add
jge
adc
cmp
mov
pop
and
adc
jg
dec
lcall
jge,pt
pcmpeqw
xchg
mov
ja
ficoml
in
sub
mov
shll
xor
out
pushf
add
andl
int
iret
add
les
test
jo
xchg
push
mov
jmp
fidivrl
jmp
ror
sbb
nop
add
mov
lea
nop
add
inc
xor
mov
in
mull
pop
aaa
mov
mov
add
xorl
subb
call
mulb
jns
popa
add
std
into
cmp
call
incl
add
add
pop
xchg
sbb
shlb
mov
std
xor
mov
lea
repnz
dec
add
jne
int
test
adc
notb
or
movsl
repz
push
mov
add
nop
push
push
sbb
jnp
sub
or
mov
mov
adc
mov
nop
pop
adc
lea
add
add
add
addl
test
icebp
out
push
mov
cmp
mov
jp
xorb
mov
cmp
xchg
mov
mov
cli
inc
sub
add
imull
nopl
mov
adc
ss
lea
int3
mov
fcomps
jbe
mov
shlb
push
fbstp
mov
add
inc
aas
add
idiv
cli
addb
aas
mov
repnz
cmpsl
idiv
cli
or
out
stos
mov
inc
fnstcw
add
pop
data16
jnp
xor
aas
add
mov
call
xlat
mov
mov
mov
push
mov
mov
add
mov
cmp
mov
jmp
fildll
pop
inc
xor
xor
jne
pop
mov
popa
adc
dec
out
xchg
or
sbb
iret
lds
add
and
call
dec
sar
mov
adc
insb
mulb
inc
sbb
sarl
rorl
cwtl
sti
xchg
or
nop
mov
out
sbb
jle
sub
shlb
add
cmc
sbb
imul
adc
cmc
and
mov
sbb
sub
jbe
mov
pop
incl
shl
xchg
push
fmulp
pop
add
ud2
ffree
divl
in
or
mov
xchg
test
pusha
andb
imul
inc
or
pushf
rorb
mov
xchg
or
add
jge
inc
int3
adc
lea
add
shr
add
idiv
mov
insl
or
jecxz
or
stos
mov
pushf
xchg
notl
adc
test
cli
lcall
or
mov
adc
test
xor
mov
add
add
xchg
test
mov
daa
lcall
in
adc
sbb
mov
or
loopnew
repnz
jne
jns
sarb
mov
inc
sbb
add
addb
mov
popa
daa
pushl
sub
rdtsc
addb
mov
jmp
and
adc
outsl
add
add
add
in
lds
pop
test
adc
mov
xchg
std
dec
jbe
fldl
mov
adc
ret
push
mov
test
jg
aad
jle
jae
lds
xchg
pop
xor
adc
add
jp
sbb
xor
jno
in
push
scas
aas
insb
les
movsl
les
andl
mov
test
push
xor
cmc
pop
repnz
in
push
cmp
add
sbb
or
fidivl
rclb
sti
xchg
sbb
std
adc
mul
jae
pusha
jge
adc
jl
mov
lcall
repnz
add
xchg
add
pop
popl
push
filds
inc
dec
xor
stos
pop
adc
push
orb
imul
pop
jge
ljmp
jmp
in
call
pusha
in
and
es
mov
pop
mov
mov
ljmp
pop
mov
push
and
pop
stos
jecxz
xlat
push
pop
xchg
add
dec
push
fnsave
add
add
ljmp
mov
sti
push
shl
mov
sub
addps
add
cwtl
inc
clc
mov
call
mov
testl
pushf
adc
clc
insb
nop
jp
lea
dec
call
sbb
mov
add
mov
sub
mov
repnz
pop
leave
push
add
add
add
adc
pushf
lock
jno
push
dec
jge
cli
cmp
ljmp
pushf
mov
js
xchg
sub
and
call
je,pn
addr16
xor
lea
push
mov
js
add
sub
lea
push
sti
test
adc
call
imul
cltd
scas
dec
sub
add
add
jae
mov
sbb
cmp
movsb
stos
cli
push
ret
jecxz
roll
push
and
add
mov
mov
inc
mov
stos
out
jmp
je
xchg
fwait
prefetcht1
scas
fwait
sbb
jle
pop
lock
sbbl
ljmp
sbb
add
into
cmpl
inc
jl
xor
fwait
out
scas
rclb
aam
stos
iret
add
adc
mov
insb
xchg
mov
pop
ds
mov
lds
pushf
mov
cs
das
sbb
sti
mov
sub
or
iret
out
dec
popf
hlt
add
cmc
stc
out
arpl
lret
mov
add
add
jg
dec
mov
add
lea
in
sbb
xchg
test
sti
aam
test
cmp
je
clc
arpl
stos
loop
mov
insl
ss
xor
loop
sub
add
mov
mov
cmp
pop
sub
sbbl
mov
popa
adc
adc
addb
add
cwtl
sub
dec
fdiv
jne
stc
and
add
lds
mov
shl
sub
push
jmp
notb
pop
inc
or
mov
addl
mov
roll
xor
push
leave
mov
pop
add
mov
jg
aaa
push
push
jae
lods
add
es
xor
testb
scas
sti
enter
mov
leave
mov
iret
out
mov
sub
mov
inc
hlt
sub
testl
test
push
adc
add
mov
inc
xor
and
je
jns
mov
pop
cld
out
mov
add
mov
pop
iret
in
sbb
add
add
in
xor
in
cwtl
mov
or
orb
mov
movsb
stos
cmp
push
xor
fldl
mov
xor
sbb
and
daa
sti
xor
adc
xor
pop
add
imul
ret
jge
imul
call
cmp
mov
and
add
mov
fsts
mov
jmp
mov
test
popl
push
imul
stos
rorl
cli
xchg
movsb
jmp
sub
push
je
repnz
sub
mov
pop
xchg
push
and
cmc
imul
popf
or
push
jmp
or
aas
icebp
xchg
adc
insb
pop
pushf
mov
mov
rclb
add
dec
sti
call
cwtl
sbb
je
pop
dec
push
je
push
in
call
mov
sub
and
or
push
xor
lahf
adc
cmp
andb
add
repnz
stc
mov
or
add
add
sbb
incl
adc
push
cli
nop
lock
mov
jg
adc
jle
in
call
add
call
data16
fisttpl
cmpsl
jg
xchg
cli
sarb
incl
pop
cmpsl
dec
mov
es
pop
push
out
xchg
decl
jns
jge
add
add
mov
pushl
scas
mov
clc
push
xchg
in
cld
push
push
add
mov
jge
push
jg
pop
xor
lock
jne
or
out
movsl
cmpsb
adc
lea
das
cmc
divb
push
nop
dec
add
adc
push
iret
jmp
jnp
jmp
cmp
cwtd
mov
add
add
add
add
iret
jmp
add
lret
clc
out
jge
sbb
test
jne
je
subl
dec
cs
add
mov
and
xor
call
test
fwait
loopne
or
js
push
sub
add
push
mov
add
dec
lret
pushf
adc
in
xor
sti
sbb
jae,pn
leave
stos
rorl
dec
insb
je
push
bound
daa
or
adc
lds
lea
in
sti
sbb
sbb
push
xchg
fsubs
fwait
test
add
stc
xchg
jmp
in
mov
mov
stc
jle
adc
mov
adc
sti
ret
mov
cli
test
popl
add
push
ret
jo
js
push
pop
sbb
cmp
push
testl
mov
jne
iret
rcrl
xchg
mov
ljmp
pop
pop
or
test
sbbb
in
mov
fmull
notl
push
cmp
pushf
xchg
push
or
clc
lea
inc
push
add
sub
mov
or
xchg
add
test
push
cld
pushl
mov
int3
pop
adc
add
jb
jmp
mov
sti
jmp
enter
and
inc
mov
xor
cmp
cwtl
xchg
clc
decb
idiv
add
add
mov
sbb
cld
sub
mov
ja
jp
testl
bound
dec
push
add
into
sub
cs
call
out
jnp,pt
neg
shrb
pop
addr16
movsl
sbb
sbb
jo
loop
test
and
lcall
add
call
test
mov
cmp
jp
in
mov
pop
lcall
xchg
cmpsb
add
adc
add
push
scas
sub
imul
add
fwait
jle
cmp
mov
daa
dec
or
es
pop
push
divb
pop
pop
or
popl
jmp
test
sti
es
add
mov
sti
push
adc
xlat
push
pusha
call
lods
jmp
add
sti
bound
pop
or
adc
jmp
mov
das
test
cmpsl
and
push
ret
in
mov
adc
pusha
mov
jmp
cmpsb
push
adc
push
pushf
test
pushf
cmpsl
pushl
mov
add
mov
or
cmovo
pop
fdivs
xchg
pop
and
xchg
pushf
pop
cmp
test
push
aaa
and
xor
sub
std
js
push
push
add
addr16
adc
sbb
test
jae
int3
and
sbb
cs
orl
shrb
xor
addb
fimull
aas
cs
inc
pop
cmp
xor
out
sub
xor
add
mov
dec
data16
lret
mov
adc
and
sub
jg
hlt
cli
je
jge
test
xor
cmc
out
sub
test
sbb
mov
add
idiv
fldt
inc
and
call
andb
ss
push
xor
out
fwait
and
daa
lea
jmp
mov
and
cmp
fcomi
adc
in
mov
popf
test
add
mov
in
add
out
sbb
pop
setno
movsl
add
mov
lret
lret
imul
gs
and
xor
loopne
mov
inc
push
dec
cmovl
loopne
mov
out
xor
sbb
cmc
jbe
or
call
pop
mov
aad
add
add
icebp
mov
sti
in
in
jmp
icebp
je
xor
in
das
mov
in
add
add
push
jb
adc
popf
ja
adc
jb
jne
icebp
scas
popl
fs
sahf
clc
testb
and
or
xchg
or
mov
jne
out
pushl
das
aam
mov
xchg
add
call
or
jo
jae
sub
push
in
add
mov
xchg
outsl
or
adc
fistl
add
shl
decl
adc
ret
sbb
add
popa
fwait
call
test
test
pushl
fwait
call
test
xchg
test
and
call
lahf
push
lea
mov
aam
add
aad
js
dec
bound
int3
xchg
jnp
mov
inc
or
pushf
mov
mov
hlt
outsb
mov
push
push
movsl
std
push
add
mov
aad
jmp
out
rcrl
xor
jae
xor
jno
sti
stos
jge
dec
xor
push
daa
cmpsl
lods
aas
scas
lcall
iret
add
inc
out
sti
daa
xor
and
sti
ret
data16
cmpsl
pop
dec
clc
incb
add
add
in
movsl
pop
js
jno
inc
add
rep
mov
pop
or
add
mov
dec
jmp
add
adc
or
mov
add
mov
add
sub
clc
mov
push
aaa
mov
add
into
add
gs
mov
sbb
push
mov
add
mov
fistpl
add
pushf
xor
je
xchg
fldcw
outsl
pop
shl
push
mov
in
add
mov
add
add
mov
sti
hlt
sbb
and
dec
jl
xchg
or
fs
jnp
sbbl
jno
addr16
push
and
add
add
or
ds
les
mov
or
mov
repz
push
mov
or
sbb
call
or
fs
mov
shl
and
fidivs
mov
movsb
xchg
sti
add
call
mov
pop
ret
push
mov
xorl
divl
adc
xor
add
jns
push
ljmp
dec
ljmp
notl
in
sbb
pushf
mov
cmp
fs
dec
lret
jae
cmpsl
fisttpll
adc
je
loop
adc
jecxz
add
adc
and
shrb
xchg
mov
jne
repz
xlat
add
lahf
or
mov
bnd
imul
clc
pop
arpl
mov
or
adc
ret
hlt
cli
sub
xchg
jne
sub
sbb
jae
js
adc
sahf
jnp
jnp
jmp
out
xchg
jne
adc
pop
imul
jne
push
xor
cmp
ret
lds
mov
mov
xchg
mov
inc
xchg
jne
jge
or
and
cli
mov
xor
sub
sti
push
add
add
loop
add
repz
mov
stc
push
cmp
inc
xchg
addr16
sti
aam
or
hlt
adc
add
sub
lret
leave
push
add
mov
adc
jg
mov
stos
pop
add
cltd
mov
fmuls
roll
pop
imul
cld
test
jmp
add
add
addb
add
cmc
jnp
cwtl
mov
add
lea
mov
push
daa
clc
cli
pop
outsb
test
pop
xchg
xor
mov
add
sub
inc
xchg
mov
add
push
pop
add
or
cmp
xchg
adc
imul
mov
sbb
add
jge
sahf
add
mov
jne
das
dec
clc
data16
inc
popa
mov
sub
sub
jmp
xchg
inc
jmp
data16
sub
movsl
add
mov
rolb
fsubl
das
mov
inc
add
iret
xchg
pop
into
xor
adc
cmpsl
cmp
test
mov
decl
incl
add
add
inc
cld
mov
mov
not
rcl
push
test
add
xlat
push
hlt
cmp
xchg
add
popa
daa
pop
test
add
test
jmp
fdivrs
lret
fisttps
add
mov
notl
cwtl
add
icebp
jle
mov
xchg
xor
jnp
sti
shlb
mov
mov
add
mov
movsl
adc
push
xor
insl
cli
xchg
imul
dec
lea
cli
jp
paddb
imul
cwtl
iret
cli
repnz
sub
test
in
aas
mov
mov
clc
rcl
jne
adc
mov
in
inc
mov
inc
mov
daa
std
sbb
js
jle
cltd
movsb
add
or
pop
xchg
sbb
les
dec
in
scas
mov
aaa
sbb
sub
mov
lods
cld
adc
test
mov
push
adc
pop
mov
add
mov
add
xchg
xor
push
popa
test
fistps
ret
add
lods
mov
and
push
add
std
call
shll
cld
and
stc
dec
push
mov
sti
cld
mov
test
ret
mov
incb
pop
inc
jmp
jno
lea
cli
xchg
shll
sub
jae
xor
stc
inc
cmp
rolb
leave
stos
cmp
xchg
mov
xchg
add
add
pop
inc
jmp
sbb
in
lea
cli
pop
mov
dec
push
test
cli
push
and
mov
pop
cld
jns
jecxz
pushl
int3
sub
add
sub
dec
adc
adc
bound
testl
int3
or
or
cmp
xchg
lea
ret
push
call
and
push
lret
mov
stos
push
adc
mov
xor
cwtl
jo
add
dec
test
icebp
and
pop
adc
fadd
dec
push
sar
xchg
adc
mov
cld
leave
shrl
adcl
bound
push
sahf
popf
adc
pop
sub
add
in
xor
push
jne
jnp
lahf
mov
cmpl
sti
imul
data16
adc
jle
incb
cmp
hlt
add
out
incl
jo
sbb
mov
mov
add
or
xchg
add
scas
lds
jge
cltd
outsl
adc
dec
cmp
sub
add
fistpll
inc
sbb
or
add
movsb
dec
repz
mov
jecxz
or
xchg
test
xchg
xchg
fnsave
roll
out
sbb
jnp
cmp
int
into
mov
and
mov
jmp
jge
mov
lea
jae
mov
dec
aad
jp
jmp
push
cld
les
out
ja
stc
ljmp
add
add
xchg
cmpsl
repnz
idivb
fdivr
call
ds
cli
daa
jb
add
sbb
ds
mov
push
adc
sbb
push
jp
xchg
adc
cmc
out
fdivr
cli
jb
out
add
mov
aas
movsl
jg
add
mov
ret
popl
mov
popl
pop
xor
lea
loope
call
inc
mov
inc
insl
addr16
pop
push
cwtl
call
pop
repz
pop
pop
dec
push
lret
add
subl
xchg
movb
pop
push
idiv
arpl
adc
mov
lret
in
je
mov
adc
test
push
add
xor
push
fsubl
lea
add
inc
int3
je
pop
fisttpll
adc
add
add
pop
push
add
mov
adc
adc
xchg
xor
loopne
mov
push
pop
stc
rclb
int3
mov
leave
mov
or
push
jb
mov
jns,pn
inc
mov
mov
shr
sti
data16
xchg
les
jne
xchg
mov
addb
push
mov
mov
cs
repz
add
add
sbb
dec
repnz
inc
lds
je
sbb
add
out
rolb
sti
ljmp
jns
data16
add
cld
cs
arpl
popl
mov
fs
jmp
or
mov
jmp
xor
xchg
repz
jmp
add
add
add
psubsb
mov
sub
mov
pushf
sbb
lret
add
jmp
mov
pop
call
scas
stos
dec
jmp
add
popl
inc
stc
dec
xor
sarb
xor
pusha
add
add
mov
xchg
fildl
aad
add
add
gs
int
cmpl
mov
sub
jmp
sub
jmp
icebp
in
std
popa
testl
test
popl
jmp
xchg
popl
jmp
dec
testb
into
adc
je
adc
je
movsb
rcl
or
jno
lahf
das
test
mov
test
mov
cmp
subl
adc
cmp
lods
add
iret
cmp
ret
push
mov
in
fstl
add
cmp
or
shl
pop
std
cmp
cltd
shlb
mov
xchg
lea
jb
testb
inc
fmull
je
and
mov
inc
inc
nop
lea
dec
push
mov
xchg
rcll
lea
ljmp
aam
dec
push
sub
xchg
xor
adc
ss
shl
call
add
jbe
mov
push
jb
xchg
ret
mov
jbe
inc
and
test
incl
sarl
xchg
add
add
push
add
push
les
lea
hlt
push
cmp
arpl
imul
outsl
inc
call
scas
repnz
push
sti
repnz
das
mov
jmp
inc
mov
jmp
inc
mov
test
inc
pop
pop
xchg
addr16
jmp
jg
push
sub
dec
aas
in
mov
pop
jnp
nop
jmp
jle
mov
fildl
mov
sub
test
pop
outsb
ret
fs
push
mov
mov
and
cltd
subl
jp
neg
jp
imull
lods
pop
into
icebp
es
jb
icebp
cmp
dec
xchg
dec
aaa
in
clc
aam
or
or
nop
add
xor
cli
out
add
add
hlt
je
cmp
popl
gs
mov
jmp
cmp
fwait
inc
jmp
adc
cli
insb
stc
jne
mov
pop
sti
fwait
inc
jmp
les
cs
xchg
cld
jbe
inc
jmp
jns
pop
faddl
jge
xlat
inc
faddl
mov
int
add
jl
add
pushf
mov
adc
mov
decl
mov
mov
dec
add
test
push
je
pop
adc
push
scas
mov
adc
sbbl
clc
seto
add
or
inc
and
mov
test
mov
add
mov
adc
jg
push
and
adc
add
dec
add
mov
pop
add
out
cs
vcmpps
adc
ret
add
dec
cld
cli
and
loopne
mov
add
jmp
icebp
addr16
out
or
idiv
bound
stc
dec
ljmp
jg
data16
clc
icebp
mov
sub
adc
add
add
adcl
in
pushf
adc
lds
and
mov
sar
repz
ja
inc
mov
lods
fists
sbb
cmpsl
scas
out
int
scas
movsb
popa
cmpsl
loop
shl
mov
movsb
cmp
lock
subl
ret
or
mov
sub
add
cmp
gs
shl
jecxz
fs
jmp
negb
arpl
sbb
ja
cmp
mov
dec
xchg
out
mov
jmp
loope
ljmp
jecxz
je
cmp
lds
inc
jmp
xor
jne
cmc
les
lds
add
icebp
sub
push
push
jb
loop
stc
dec
lods
add
mov
scas
call
insl
jno
sbb
cmpl
mov
adc
jg
and
ljmp
xor
divps
aas
sti
aam
ljmp
and
sub
in
sub
pop
xchg
add
addr16
or
in
or
ret
rorb
xor
cmp
cmc
jne
addr16
adc
popf
or
repz
pushl
cmc
jne
adc
stos
adc
inc
std
push
adc
xchg
push
pop
push
loopne
push
out
out
add
dec
mov
and
push
shlb
pop
fists
adc
mov
xchg
sub
pop
test
movsl
push
or
and
push
cli
sub
cli
enter
mov
and
leave
mov
das
jmp
incl
arpl
or
xlat
xchg
lret
jle
jne
out
loopne
pop
aas
mov
adc
and
mov
fprem
pop
popf
jg
cmpb
jne
cmpb
xor
dec
leave
mov
adc
call
sub
mov
fadds
sbb
nop
insl
inc
test
lret
mov
stc
cmpsb
push
mov
fs
imul
xor
ret
pop
xchg
xchg
pmaxub
test
cmc
ret
lret
inc
test
loope
xor
pop
pop
adc
mov
inc
inc
jmp
icebp
rcrb
andb
add
or
inc
movsl
sbbb
and
xchg
clc
cmpsb
inc
mov
mov
test
sbb
popl
pop
adc
adc
or
lahf
shrb
or
fstl
mov
mov
add
pop
adc
fstl
cli
add
adc
lret
test
leave
push
jb
fiadds
out
test
in
adc
mov
cli
insl
stc
arpl
repnz
bound
sahf
bound
je
testb
pavgw
mov
jge
jmp
xchg
notl
pop
lret
sbb
sub
dec
lea
xchg
or
bound
lcall
xor
xor
jne
sbb
mov
imul
mov
divl
pcmpeqw
push
jne
jnp
add
xchg
pushf
adc
pushf
out
pop
ret
push
mov
add
add
sbb
shrb
mov
repz
mov
out
div
adc
mov
add
add
jno
nop
push
sti
mov
fdivr
or
jne
push
adc
mov
mov
add
div
add
mov
add
dec
clc
mov
jb
mov
cmc
clc
icebp
add
int3
cmp
stc
in
incl
or
pop
in
mov
jo
pop
xchg
jb
movsl
mov
add
xor
pop
or
or
clc
xchg
or
clc
aad
sub
sbb
or
adc
inc
push
xor
adc
lods
pop
sub
aam
nop
fwait
jle
mov
xor
mov
loope
add
push
orb
neg
mull
sub
outsb
lds
add
add
out
inc
or
sub
adc
pop
add
mov
insl
lret
stc
aas
out
push
dec
add
lock
in
push
lahf
repnz
out
ds
scas
pop
das
push
xchg
sti
stc
push
xor
jae
sub
jae
ss
inc
loope
in
arpl
popf
mov
push
sarb
pop
das
xchg
inc
sbb
and
push
test
adc
stos
lods
push
jb
gs
sbb
mov
mov
in
lcall
sahf
call
test
and
cmp
and
xlat
int
call
leave
dec
je
fwait
dec
sarl
push
call
movsl
int3
rorb
sbb
add
add
pop
mov
in
pop
pop
and
int3
nop
dec
lea
std
pushl
nop
lea
sbb
arpl
imul
pushf
nop
test
in
add
mov
mov
add
mov
xor
push
lahf
repz
pop
sub
add
xchg
add
in
loop
orb
stos
mov
add
add
add
xor
inc
push
pop
jl
ss
add
and
insb
outsb
push
idiv
xor
mov
mov
rorl
pushl
call
mov
and
pushl
cmp
test
add
mov
and
cmp
int3
mov
mov
out
call
subb
xor
aam
push
dec
jnp
sbb
jecxz,pt
jnp
jae
ret
xor
sbb
jecxz
out
int3
pop
rorl
clc
mov
mov
out
lcall
jmp
add
jg
in
xchg
jne
ror
jl
adc
inc
mov
enter
stos
add
dec
stc
roll
add
add
call
pop
outsb
xchg
outsb
mov
mov
xchg
outsb
mov
mov
inc
lds
out
mov
popl
negb
jb
out
scas
mov
pop
dec
loopne
das
mov
push
ljmp
or
out
not
dec
iret
xor
inc
xor
cli
inc
cmp
or
pop
or
mov
test
and
inc
insl
mov
cmp
mov
popa
pop
push
push
mov
xchg
decb
jl
jge
pushf
push
repnz
lea
test
int
pop
add
push
xchg
and
pop
lea
shll
std
ljmp
mov
or
fmull
inc
add
fisttps
lea
mov
or
data16
and
iret
push
mov
or
shrl
testb
ss
mov
fidivs
pop
dec
je
dec
jb
sarl
jmp
or
sub
incl
lret
jno
addl
xor
in
add
gs
pushl
ss
inc
jae
std
sub
xchg
xorb
xchg
jb
imul
xor
pop
data16
js
ss
lea
iret
mov
iret
mov
iret
mov
pop
rcll
sbb
or
iret
xchg
jmp
in
and
push
xor
add
imul
add
sub
dec
inc
jbe
aas
shrl
nop
jmp
insb
bound
lock
jo
inc
adc
xchg
insl
ss
jmp
push
fidivrs
sbb
aad
add
xor
ret
or
mov
ret
cli
or
jbe
and
ret
loop
add
xchg
mov
bound
xor
add
push
or
aas
push
hlt
cmp
xchg
push
call
fisubs
or
add
cmp
ret
cmp
inc
divl
rorl
sbb
fs
sbb
rorl
adc
or
mov
sbb
fidivrs
and
pop
in
sub
fs
outsb
cmp
fs
pop
sub
add
add
cli
dec
aas
push
or
gs
movl
cli
push
sub
rolb
imul
add
es
dec
xchg
cmp
or
sbb
je
imul
shrb
cmp
or
ljmp
lea
dec
dec
cmp
mov
add
mov
xchg
xchg
jne
dec
fs
add
inc
mov
jmp
stc
ljmp
hlt
sti
sub
sarl
lret
cli
test
push
inc
mov
sahf
add
sub
out
adc
cld
cli
test
cmovo
mov
push
jbe
mov
shlb
pop
cmp
add
mov
das
xlat
cmp
and
sub
add
out
addr16
out
decl
cld
mov
and
fdiv
out
dec
jmp
out
add
insl
pop
inc
inc
xchg
jmp
outsl
jmp
add
lds
mov
fs
and
jg
add
add
call
or
cmp
or
les
sub
sbb
sub
fs
add
fldt
ja
lds
mov
sub
sub
sub
pop
add
fnstsw
mov
jg
sub
leave
fildll
xor
xor
jmp
mov
push
and
mov
push
and
lea
pop
stc
insl
jg
jo
mov
sarb
das
jge
adc
pop
test
jbe
inc
xor
and
jmp
adc
test
add
mov
cmpsl
jmp
fisttpll
add
popl
test
out
add
add
add
xchg
add
mov
and
or
add
rorl
cmove
ret
cmc
adc
popa
dec
pop
test
add
fisttps
mov
cwtl
add
decl
inc
add
dec
lea
call
test
pop
push
or
and
dec
lea
push
sbb
test
add
cmp
loope
lea
cmpl
adc
pop
dec
inc
fpatan
add
mov
in
or
xor
or
ljmp
sub
shlb
cs
test
and
pop
xor
inc
add
not
mov
lret
mov
cmpsb
adc
add
add
out
rolb
jnp
cltd
jle
inc
mov
ret
and
mov
inc
cmp
cli
xchg
xchg
enter
repz
mov
std
jbe
in
jns
stc
jnp
mov
mov
rorl
leave
mov
and
scas
fsubrs
mov
xor
add
sti
cmp
sbb
mov
mov
add
add
arpl
scas
or
rorb
pop
data16
in
add
or
pop
leave
inc
xchg
fcomps
mov
dec
fisttps
mov
stc
stos
cmc
jl
lods
in
jl
lods
or
stos
add
add
cli
jmp
lret
rcrb
mov
ret
or
outsl
xchg
cmpsb
rclb
cli
jmp
cmpsl
iret
mov
xchg
jl
aas
cs
jnp
push
xchg
mov
mov
popl
jmp
or
or
add
mov
test
mov
add
push
add
cmp
out
add
idivl
loopne
negl
xchg
jecxz
iret
in
dec
fnstcw
aam
pop
test
add
bound
mov
ret
mov
jmp
es
jbe
xchg
shlb
adc
adc
jmp
cmp
adc
or
sub
pop
adc
cmp
xorl
cmp
or
testb
leave
mov
adc
jne
fmuls
add
jbe
iret
and
xchg
out
cmp
jnp
in
jno
sbb
mov
ss
lock
xchg
ja
sarl
repnz
popa
cmp
and
sahf
cmpsl
cmc
add
pop
enter
pop
lea
xor
ret
sub
sub
sub
arpl
test
and
add
add
sti
test
pop
and
lea
adc
or
aam
js
cwtl
mov
std
push
sbb
in
mov
or
mov
scas
outsb
add
iret
sbb
fwait
mov
mov
xor
cmpsl
insb
out
cmpsl
subl
jns
ljmp
stc
js
stos
stc
sbbb
incb
push
leave
cmc
dec
addr16
cmpb
test
scas
pop
sbb
lcall
sub
mov
mov
add
jmp
pop
pop
push
leave
push
shl
jae
roll
mov
test
xchg
jp
and
aad
jg
sub
xlat
aaa
jns
addl
cmc
scas
sbb
ljmp
or
pop
xchg
fiadds
call
pop
or
ss
xchg
cmp
pop
sub
push
in
cltd
mov
stc
js
push
add
mov
cwtl
push
inc
test
push
incl
and
mov
jmp
adc
xadd
inc
mov
pop
stos
sldt
add
cmp
shll
rcll
std
xor
dec
hlt
aaa
mov
add
jg
adc
mov
cmp
dec
lea
add
faddl
push
aas
add
int3
xor
lea
and
add
data16
cs
iret
mov
out
jg
and
incl
add
add
xor
enter
add
adc
dec
sub
cmp
dec
out
cmpsl
std
cmp
ss
stc
mov
out
loopne
jp
loopne
jp
enter
lret
xchg
pushaw
clc
xor
xor
mov
rcll
jne
das
outsl
enter
call
das
cmc
pop
enter
call
mov
add
add
nop
int
fcmovne
imul
imul
and
pushf
popf
adc
cmp
add
enter
mov
pop
pop
sub
and
out
fistpll
shlb
xchg
and
add
xchg
aas
cltd
rclb
mov
pop
or
add
iret
sti
or
mov
jmp
add
dec
add
test
or
es
jl
test
jno
inc
int
sbb
lds
inc
int
sbb
lds
sbb
inc
int
rolb
mov
rolb
mov
push
inc
add
int
and
mov
xor
scas
loopne
and
and
push
add
sbb
xchg
call
outsb
popl
jmp
jb
xchg
fnsave
adc
push
adc
loop
xor
ss
dec
loop
push
insb
xadd
pop
and
fdiv
adc
pop
rcrb
adc
push
pop
test
xchg
add
out
mov
dec
lea
add
add
xchg
push
push
add
or
loopne
insb
add
filds
or
loop
push
clc
mov
mov
loop
push
fmull
shlb
jns
mov
dec
inc
and
loopne
mov
lods
or
dec
cs
sbb
cs
dec
in
insb
stos
jbe
inc
fldenv
iret
cli
shl
inc
mov
mov
dec
subb
xchg
fiaddl
xchg
cmp
and
mov
cli
cli
add
sti
inc
cmp
and
add
mov
jno
rcl
push
pop
pop
sub
push
xchg
cmc
mov
inc
mov
out
fs
inc
add
or
xchg
adc
sbb
fs
fs
inc
cwtl
lret
addb
fs
and
pop
mov
sub
stc
jae
add
je
pop
mov
pop
pop
int
cmp
sarl
imul
sub
call
mov
jns
int
js
adc
and
sbb
mov
dec
jmp
cld
mov
and
incl
add
add
push
push
add
insb
push
and
imul
mov
dec
push
or
xchg
jmp
sar
out
xchg
jae
xchg
pop
sti
aas
test
xchg
mov
nop
jae
xchg
lret
sbb
xchg
rcrb
lds
mov
push
xlat
mov
arpl
pop
inc
leave
cli
pop
insl
outsl
pusha
rcrl
add
sub
pusha
xor
ret
push
mull
mov
or
jmp
test
cmp
cli
xor
mov
ret
or
xchg
notl
push
fdiv
andl
inc
fdiv
pop
sbb
pushf
adc
mov
out
lea
push
jmp
pop
inc
loopne
sub
cli
imul
add
add
fcomp
push
pop
test
mov
loop
add
and
pushf
xchg
mull
sti
loope
add
xchg
push
and
inc
or
shlb
cli
mov
mov
mov
aas
mov
fldcw
or
pop
fidivl
adc
xchg
add
fwait
mov
sub
add
lods
jl
sti
add
stos
mov
or
mov
fnstsw
ud2
scas
mov
leave
adc
push
gs
mov
test
es
mov
insl
push
dec
sub
in
adc
jbe
sti
enter
mov
cmp
cmc
fs
or
mov
inc
jne
jnp
xorl
fcoms
add
add
pop
icebp
adc
rclb
stos
iret
gs
or
push
add
in
pop
adc
lcall
mov
popa
mov
ret
jmp
shlb
dec
jmp
mov
sub
shll
mov
add
xchg
add
cltd
add
xchg
adc
inc
jae
add
insb
add
dec
mov
mov
loop
sti
cmc
lcall
bound
pop
sti
hlt
cs
inc
jmp
mov
lea
mov
cli
idivb
or
xchg
xchg
aas
movsb
adcl
adc
cli
dec
iret
pop
xchg
lock
xor
lahf
ret
pop
xchg
lods
imull
imul
push
popa
xchg
std
adc
and
adc
and
adc
and
adc
sbb
add
adc
and
mov
mov
cwtl
ja
sbb
lret
cli
mov
outsb
adc
cld
clc
incl
rclb
sbb
push
ljmp
gs
mov
mull
add
mov
incb
fsub
das
ljmp
outsb
sbb
dec
outsb
adc
sbb
call
add
add
pop
sub
mov
out
jle
sti
in
pop
or
jns
sti
add
cmp
push
cs
mov
mov
popl
adc
cli
mov
jb
in
add
cmp
call
jnp
mov
les
fisttpll
mov
clc
push
xchg
jp
push
hlt
xchg
stos
pop
xor
dec
fdivs
jbe
sbb
aad
popf
adc
in
mov
in
mov
ds
ds
mov
xchg
or
mov
sbb
dec
push
dec
pop
sbb
or
sbb
pop
jle
cmpsl
or
xchg
cmp
mov
fidivrs
sbb
ja
push
sbb
les
insb
pop
pusha
pop
dec
int
pop
pop
scas
gs
inc
mov
fwait
mov
sbb
xchg
call
addr16
lds
mov
daa
or
popl
cmpl
leave
adc
dec
test
push
xchg
push
shl
cli
jmp
cmp
jle
ficoms
nop
mov
jmp
jo
push
div
ret
jge
mov
inc
in
pop
cmp
cmp
inc
lea
popl
jmp
imul
lea
leave
cli
rcr
adc
adc
push
nop
jmp
xlat
int
push
sub
cli
jmp
icebp
mov
add
testl
mov
dec
shl
aaa
mov
pop
addr16
mov
xchg
mov
add
mov
mov
mov
mov
mov
fistl
and
push
sub
push
mov
adc
add
adc
push
ret
es
fmull
cmc
adc
dec
dec
or
lret
test
xor
add
add
sar
mov
xor
sub
addw
sub
decb
cmp
dec
add
cmp
mov
push
rcr
mov
add
mov
outsl
add
xor
arpl
adc
jmp
sbb
ds
cli
sub
add
mov
addl
cmp
push
inc
mov
out
mov
incl
jmp
mov
scas
xchg
jle
lcall
add
outsb
inc
aam
pop
jle
push
inc
je
fmuls
leave
add
push
shr
mov
push
or
or
int
inc
adcb
mov
mov
out
mov
adc
insb
shlb
xor
mov
pop
inc
mov
jmp
test
or
cltd
pop
xchg
out
mov
add
add
mov
lea
popl
jmp
cmc
cmpsl
push
je
adc
jmp
popf
mov
jmp
in
mov
cmp
or
add
aas
inc
in
ljmp
mov
pop
cmp
sti
mov
lret
or
mov
add
cmp
scas
call
dec
call
jle
out
or
cli
jb
aad
jmp
mov
add
xchg
add
cmp
jnp
lcall
les
add
add
xchg
lea
dec
push
stos
adc
xchg
add
adc
pushl
test
dec
xchg
add
or
sbb
xchg
add
nop
add
daa
sub
lahf
lock
push
add
jl
add
mov
addr16
sub
decl
push
add
ret
adcl
adc
arpl
add
add
mov
push
sti
jl
or
add
jg
push
test
xor
cwtl
and
cmpsl
decl
sub
and
pushl
mov
out
lods
push
xchg
rcrb
icebp
mov
aad
push
sti
mov
pop
divl
add
pop
mov
mov
add
mov
jno
scas
dec
pop
fsubrl
xchg
mov
aad
or
adc
push
iret
mov
push
out
sub
cld
sbb
fs
mov
jmp
mov
out
out
mov
sub
mov
jne
icebp
mov
jae
mov
or
imul
push
fcmovu
std
inc
mov
mov
add
out
ss
sub
rclb
push
inc
mov
sbb
aam
lea
add
fcoml
outsb
orl
movsl
mov
jo
jo
lret
mov
in
mov
hlt
mov
fcomi
mov
jb
jo
mov
mov
add
shll
sub
dec
lcall
and
add
sti
cld
mov
inc
jmp
cmp
jae
xor
pop
sbb
pop
push
stos
cli
mov
push
bound
das
add
xchg
mov
or
pusha
sub
pop
xchg
mov
jmp
decb
xchg
mov
push
push
sti
leave
add
cmpl
mov
adc
lea
xchg
pop
call
xor
loop
mov
pop
ret
push
mov
in
add
push
xor
jne
hlt
cmp
clc
test
fdivrp
xor
inc
mov
adc
pop
pop
xor
push
je
xchg
or
jns
jne
pop
scas
cli
loop
mul
popa
cmp
mov
xlat
add
ret
xor
ror
jns
leave
sub
das
in
xchg
lods
pop
clc
data16
jmp
in
mov
xchg
ret
add
test
gs
in
inc
inc
inc
cmpsl
pushl
stos
add
loopne
add
mov
cmp
call
jae
sti
js
sbb
shlb
js
pop
enter
shlb
xchg
outsb
ror
and
mov
push
ljmp
dec
jmp
inc
sub
sub
xchg
jmp
push
mov
sbb
pop
jmp
add
stc
add
stos
out
inc
ja
push
scas
or
ds
cmp
add
jmp
icebp
inc
push
add
inc
mov
in
popl
cmpsb
jo
out
mov
add
inc
add
stos
test
pop
stos
add
in
sbb
pop
push
je
mov
push
outsl
pop
cli
push
sub
jae
sbb
push
jl
push
mov
loop
add
add
inc
add
push
jo
jmp
xchg
mov
fists
adc
xor
sti
pop
fxch
outsb
filds
int
loope
mov
add
pop
divl
pop
lcall
push
push
addl
or
testb
enter
add
clc
push
mov
pop
xor
push
jne
decb
daa
cli
rcll
add
xchg
repz
test
add
imul
xchg
aad
addr16
inc
in
negl
in
push
xlat
push
push
push
cmp
cld
add
xor
add
scas
jns
mov
push
or
movsb
scas
cli
mov
fidivrs
test
jnp
cli
jo
mov
pop
mov
das
xchg
stos
push
in
ljmp
xchg
psubq
outsl
lret
test
mov
loop
sbb
loop
jle
mov
jmp
add
lock
mov
pop
mov
cs
mov
push
jl
or
jmp
jbe
sub
cmp
rorl
add
add
adc
dec
push
mov
dec
add
in
cmc
test
cmp
lods
or
or
dec
in
hlt
cmp
adc
ror
inc
cmp
jmp
add
js
shll
xchg
add
int3
faddl
dec
add
sti
add
xchg
daa
mov
mov
add
rclb
call
jmp
hlt
push
jb
xor
stc
pusha
push
lock
push
ljmp
add
jno
jo
rcr
sbb
jmp
and
movsb
mov
aas
mov
lods
std
mov
jmp
mov
add
pop
jnp
xchg
and
jl
push
je
add
add
push
andb
mov
fnsave
iret
jae
add
jb
mov
inc
sbb
ss
call
rorb
sbb
cmc
decb
pop
mov
int
dec
mov
mov
or
rcll
jge
aaa
inc
hlt
pop
int
cmp
lret
pop
aaa
inc
add
js
call
mov
mov
cld
and
stos
xchg
add
divl
jl
xchg
push
and
clc
mov
aaa
idiv
in
decb
mov
dec
test
add
jne
sbb
insb
add
lds
pop
xchg
jns
mov
or
mov
or
push
jge
mov
lock
stos
push
mov
xchg
dec
inc
add
jnp
in
ss
inc
call
ds
gs
ds
adc
lods
xchg
xor
cmp
cli
xchg
xchg
cld
cmpb
add
fyl2x
lods
out
shll
mov
pushf
movsl
icebp
lcall
stos
in
into
xchg
jle
pusha
pop
mov
mov
sub
dec
xchg
push
mov
jo
call
js
xchg
insb
sahf
pop
sbb
pop
rol
repnz
divl
iret
adc
xchg
sbb
shlb
dec
into
or
test
or
hlt
negb
mov
pop
insb
mov
cltd
test
inc
lock
cli
inc
dec
add
xchg
js
or
add
add
mov
in
or
leave
hlt
dec
sti
call
mov
pop
xchg
inc
add
int
jo
xchg
data16
cmp
jne
test
add
cli
push
mov
push
jno
shlb
data16
imul
jo
cmp
fcomip
mov
movsl
mov
test
stos
mov
test
fcompl
int
add
mov
leave
into
mov
push
orl
xor
lea
addl
mov
ror
mov
dec
je
loop
mov
lcall
rorb
cmp
inc
data16
repz
push
xchg
dec
adc
in
sub
decb
add
mov
fildl
lcall
push
lock
pop
push
loope
call
xchg
mov
pusha
scas
cli
test
lock
mov
cmp
jns
or
scas
push
sti
jnp
cmp
sti
add
xor
mov
outsb
push
push
pop
mov
xor
leavew
dec
mov
je
movsb
inc
adc
subl
cmc
ds
pop
mov
inc
pop
mov
ljmp
cli
push
repz
ljmp
mov
or
sub
rorl
inc
je
mov
test
adc
lcall
xlat
int
sbb
add
jg
lock
add
mov
lcall
sbb
pop
fstpl
sub
sbb
xor
push
scas
rcr
sbb
pop
gs
sub
scas
shrl
stc
lcall
loope
jge
mov
jmp
mov
jecxz
outsb
repz
test
loopne
add
or
add
add
test
inc
test
mov
das
repz
jb
mov
test
mov
mulb
cmp
inc
sbb
gs
cltd
scas
shl
aad
lods
cli
insl
jns
sub
mov
sub
mov
jmp
mov
lea
cli
cmpsb
mov
and
pop
mov
xor
add
sar
imul
adc
and
mov
dec
cltd
inc
mov
add
fwait
insl
add
or
jae
jle
push
pop
xchg
dec
cmpb
fnsave
push
jp
xlat
inc
sbb
cmc
adc
mov
add
dec
adc
sti
push
test
shlb
add
jno
add
imul
lods
fmulp
cli
pop
mov
dec
loopne
mov
test
sti
mov
cli
rolb
mov
jbe
jmp
sub
jne,pn
fisttpll
repz
std
dec
sub
imulb
pusha
jmp
sti
cli
cmp
mov
cmp
add
add
bnd
push
sbb
sub
inc
jnp
push
fstps
push
stos
js
bound
jb
jg
mov
mov
add
push
call
cmp
shll
push
int
mov
jbe
dec
mov
sbb
out
inc
pop
sbb
subl
mov
arpl
icebp
incb
je
mov
insb
lret
sub
mov
xor
cmp
jb
sub
in
scas
sbb
and
stos
mov
sbb
xor
rorb
add
shrb
stc
or
lea
mov
adc
cmp
or
test
add
inc
dec
pop
shll
aam
sbb
dec
bound
jb
sub
add
test
adc
mov
cltd
xchg
cmpb
pop
push
sub
sub
loope
jge
call
inc
xor
fsubrl
push
xchg
mov
popf
push
fldenv
outsb
sub
adc
lea
add
add
testb
iret
idivb
or
lcall
outsb
cli
decb
mov
iret
cmc
addl
idivb
or
fwait
shll
sbb
push
dec
mov
mov
mov
or
mov
add
ss
push
call
cmpsl
fs
push
dec
ds
cmp
mov
cs
or
ljmp
add
or
ret
cs
outsl
inc
add
jnp
in
add
clc
cmp
mov
out
sub
cmp
adc
mov
decl
es
mov
sub
or
mov
lcall
test
dec
xor
or
in
aas
cmpb
or
xor
lds
ret
mov
cmp
movsl
xlat
cwtl
aas
add
aaa
aas
lods
mov
dec
add
mov
cltd
subb
xor
outsb
push
push
nop
pop
dec
mov
rcrb
mov
cmpsb
call
add
cmp
cmp
or
add
xchg
iret
or
or
inc
call
js
call
mov
mov
pushf
out
mov
jecxz
cmpsb
mov
testb
sti
orl
jmp
movsb
cli
jmp
mov
mov
jmp
int
add
sbb
cli
bound
mov
add
popl
cmpsb
mov
lea
mov
test
aaa
loope
and
inc
repnz
adc
mov
jmp
cli
aaa
mull
and
cmp
rolb
mov
sub
call
ss
lock
aas
adc
add
sub
xchg
add
add
add
cwtl
add
bound
pop
icebp
jmp
lods
cmc
incl
test
stos
xchg
xchg
mov
add
call
push
rolb
mov
jmp
mov
add
mov
xor
out
adc
out
adc
sbb
lcall
in
divb
mov
je
add
add
fnstcw
sbb
insb
sub
dec
lods
cmp
jno
sbb
rorl
cmp
andb
call
jp
mov
pusha
and
push
fs
pop
mov
stos
xor
std
stos
mov
or
sub
or
xor
daa
pop
jnp
cmp
jne
add
bound
jge
add
add
sub
std
pop
mov
call
into
dec
sbb
cs
inc
out
mov
jmp
into
and
sub
jp
cmp
or
push
dec
cmp
mov
add
fbld
stos
mov
mov
in
sbb
cmp
and
outsb
jnp
jmp
add
sbb
mov
xchg
push
imul
clc
xchg
scas
lods
cmp
mov
mov
jmp
mov
xchg
cmp
mov
test
outsb
dec
movsb
cli
jmp
pop
sub
xchg
leave
icebp
cld
out
iret
or
pop
push
lock
aaa
fldcw
or
push
lea
nop
add
add
dec
lods
inc
dec
adc
xor
aaa
imul
mov
cmp
cltd
xchg
mov
aas
fbld
stc
fiadds
mov
mov
push
hlt
mov
pop
sti
add
xchg
call
pop
testl
in
and
xchg
dec
or
imul
xorl
jp
add
add
add
mov
push
mov
sub
pop
adc
inc
je
addw
pop
mov
fcmove
xor
icebp
out
xchg
inc
sbb
pop
push
test
mov
xor
or
cmp
add
dec
mov
dec
fidivs
mov
mov
loopne
push
mov
jns
enter
mov
lea
daa
repz
or
mov
push
mov
mov
mov
xor
stos
cmp
jae
dec
test
or
jbe
das
cmc
jne
les
imul
jo
addl
pushf
push
mov
cmc
aaa
adc
cmp
test
sub
jmp
add
cmpb
outsb
and
push
xor
popf
xor
push
repnz
lahf
push
cmp
pop
movsb
das
cmpsb
lods
insl
mov
inc
sbb
add
push
call
repnz
lret
aaa
cmp
in
cli
and
cli
sahf
int3
sahf
mov
les
xor
add
add
scas
sahf
adc
xor
mov
mov
add
jl
cli
cs
add
mov
xchg
aas
push
hlt
test
das
push
fmul
inc
push
or
je
jle
mov
or
mov
mov
adc
filds
xchg
out
mov
aad
stos
inc
sti
pop
rorl
out
cs
mov
sarb
dec
clc
adc
dec
mov
mov
je
jmp
test
jbe
xor
cmp
xchg
je
lods
adc
pushl
dec
sbb
lock
in
and
xchg
adc
das
ret
addl
shlb
jmp
test
add
arpl
mov
lret
xor
incl
add
add
arpl
call
arpl
mov
pop
pop
inc
push
add
mov
lock
ss
mov
loopne
or
bound
test
hlt
xorl
cmp
lcall
rcrb
sarb
sub
mov
xchg
ss
adc
insb
add
sub
inc
pop
ret
idivl
or
mov
daa
out
testl
hlt
je
lods
shl
mov
jmp
aas
lods
repnz
cmpsb
xchg
fdivrl
test
movsl
ljmp
sbb
xchg
movsb
push
mov
and
call
add
adc
add
push
jmp
sub
shl
jg
nop
jmp
add
add
mov
fs
sub
insb
inc
mov
xchg
add
js
call
add
fcoms
push
cmp
ret
lock
sub
add
add
cmpsl
in
xchg
cli
sub
mov
test
popa
xor
add
cmp
sbb
jne
pop
mov
xchg
je
dec
xchg
jo
add
push
or
out
sbb
in
cld
js
in
testb
aas
sti
fcompl
iret
je
mov
in
test
and
out
adc
cmc
mov
inc
add
sbb
fwait
sbb
lock
fiadds
cmovle
call
rolb
fstps
add
pop
dec
xor
cmp
cmpsl
or
sbb
add
mov
orl
stc
and
mov
xor
or
cmp
add
add
push
adc
imul
mov
ja
or
cmp
aaa
mov
insb
pop
xorb
sub
xor
add
xor
in
xor
mov
add
lret
add
sub
jp
std
aaa
out
out
add
cli
in
jnp
lcall
out
cmp
sti
push
loop
add
cmpsb
sarb
cltd
sahf
fwait
mov
mov
jno
lock
loop
and
jecxz
or
sbb
ds
imull
aad
loope
data16
mov
and
xor
and
ret
rolb
and
rclb
pop
mov
xor
add
insb
testl
add
add
jno
jl
aas
jo
mov
mov
inc
fs
mov
insl
sub
dec
push
iret
mov
cmpb
rorl
mov
mov
adcl
jp
fwait
adc
jge
adc
insb
inc
mov
add
jns
clc
and
cmp
mov
adc
xchg
push
dec
fstp
cmpsb
mov
lahf
mov
in
ret
push
out
loop
fsubl
push
stc
leave
bound
imul
popf
std
stc
mov
je
lods
push
inc
and
xchg
jo
ss
jmp
cmpsb
nop
je
aaa
adc
jmp
addl
scas
xor
in
popf
add
add
add
sbb
out
mov
mov
lea
push
pop
add
pop
sti
cmp
std
cmp
in
inc
out
addl
rorl
idiv
icebp
sbb
push
in
mov
notl
pop
fadds
mov
arpl
push
inc
pop
imul
mov
or
adc
sar
addb
add
mov
pop
shlb
jge
notl
pop
cld
pop
inc
jnp
mov
mov
addb
mov
call
mov
mov
imul
pusha
adc
sti
shlb
inc
mov
inc
jne
subl
dec
lret
data16
or
dec
or
addl
mov
mov
into
sbb
ret
or
test
mov
pop
sub
adc
aad
jne
xor
jae
out
cli
arpl
cvttps2pi
sub
arpl
mov
xor
dec
icebp
jle
xchg
sub
adc
popa
mov
jmp
aaa
or
add
jmp
add
adc
call
jnp
xor
add
add
fs
sub
out
jecxz
adc
cmp
add
mov
mov
mov
jle
jp
call
add
ret
aam
dec
sbb
push
out
aad
mov
rcrl
inc
mov
jb
fstps
daa
mov
jg
pop
mov
xor
incb
adc
bound
add
add
mov
stc
repnz
es
xchg
in
jo
xchg
fdivs
sahf
cmpsl
into
adc
mov
hlt
xchg
lock
jmp
mov
fmull
inc
jmp
fistpll
clc
jbe
or
out
pop
or
out
sub
pop
and
sti
cld
push
addl
sub
dec
mov
xchg
cmc
aad
testb
add
add
cld
test
fistpll
mov
clc
call
popf
dec
decl
ljmp
adc
js
int
decb
mov
shlb
inc
add
jno
je
ds
push
adc
or
dec
call
pop
rol
mov
xor
adc
add
add
add
mov
pop
mov
sub
mov
testb
and
pushl
out
xchg
dec
imul
shrb
idivl
stos
add
lods
es
jp
mov
jmp
jno
lods
pop
aam
and
jp
lret
leave
sub
ret
out
or
sti
ds
jp
and
add
push
repnz
data16
lea
sub
jmpw
es
sbb
stc
and
xchg
cmc
rolb
call
sbb
dec
dec
sub
inc
fnstcw
leave
mov
das
mov
ror
es
sbb
out
movsl
adc
mov
sarl
sahf
and
inc
add
sbb
leave
cmp
add
add
push
sub
or
cmpsb
shll
sahf
gs
push
cli
in
pop
in
and
shl
sub
xchg
jg
lea
dec
dec
add
clc
cmc
lcall
lahf
shrl
ja
in
mov
jb
push
inc
cltd
loope
push
jno
jae
dec
lea
xchg
testb
add
ja
fmull
sub
cli
jmp
cmc
mov
push
mov
dec
stc
push
shll
call
ret
mov
mov
pop
push
loop
sbb
mov
dec
mov
mov
dec
repnz
ret
dec
mov
or
push
xchg
dec
dec
jne
sub
mov
call
arpl
cmc
test
and
push
sti
decl
cmc
je
mov
je
or
insl
add
sub
sbb
or
mov
jns
ljmp
pop
inc
add
dec
mov
int3
cmp
add
arpl
xchg
cmp
add
or
lgs
icebp
stc
pop
testb
je
out
push
and
cs
mov
loope
sti
mov
mov
jl
dec
jne
aas
jg
jle
push
cs
mov
ds
push
test
and
xchg
ja
popa
sub
push
fstp
es
ljmp
sbb
orb
inc
popf
cmpsb
jno
popa
cmpsl
and
dec
leave
xor
nop
jmp
mov
cmpsb
repnz
in
cmpsb
iret
xor
jns
xchg
push
jns
in
mov
enter
xchg
pop
jno
out
fimull
xchg
add
add
shr
js
mov
sub
movsl
les
and
mov
scas
lods
adc
or
add
add
mov
insl
cmp
pop
mov
dec
xlat
das
cmc
xor
call
das
jns
test
popl
rolb
sahf
arpl
inc
jmp
mov
inc
aam
push
fwait
test
xchg
adc
out
rcrb
add
mov
lcall
fildll
ret
iret
add
popa
add
add
mov
fs
ja
gs
test
lea
roll
jge
ljmp
cmp
test
sbb
dec
jne
fisubrs
push
out
fwait
call
test
push
pop
inc
adc
pop
pushl
sbb
wbinvd
jbe
push
sbb
push
fildll
add
push
adc
add
dec
jae
mov
cmpsl
push
push
sbb
leave
ret
sub
ja
push
mov
inc
dec
push
out
int
dec
cld
aam
mov
push
cli
out
mov
ljmp
into
mov
or
idiv
shrl
divb
mov
mov
lea
mov
pop
lods
ret
mov
cltd
pop
inc
mov
dec
cmp
and
ss
je
mov
std
jmp
ja
push
std
inc
push
in
inc
inc
or
inc
mov
dec
data16
pushl
ja
add
mov
ret
jb
add
arpl
push
lea
es
xchg
mov
lea
out
pushl
loop
inc
scas
iret
inc
enter
mov
pop
les
jnp
mov
mov
loope
push
scas
mov
adc
add
xor
lock
xchg
loope
fs
rol
outsb
adc
dec
adc
cwtl
orb
xchg
mov
iret
out
pop
popa
out
push
mov
fldl
add
add
push
out
jmp
sahf
ljmp
out
mov
jge
ret
mov
adc
push
jns
mov
icebp
xchg
cld
adc
adc
cli
mov
jg
cld
pusha
insl
mov
xchg
test
clc
xchg
add
je
sbb
loop
int
popl
add
movb
nop
sbb
pushf
insb
sti
jbe
xchg
jbe
insl
jnp
add
cmp
mov
testb
mov
mov
mov
bound
fcoml
add
mov
sbb
sub
incl
sbb
push
add
int3
movsl
jae
jnp
mov
fmull
cmp
adcb
stc
cmc
xlat
cmc
sbb
pavgw
testl
add
add
mov
push
or
iret
mov
jne
cmp
jmp
adc
lcallw
pusha
mov
xchg
add
scas
push
mov
loop
xchg
mov
inc
sbb
aas
lea
out
mov
std
cmp
jge
adc
cli
in
dec
imul
lret
adc
lea
mov
add
mov
pushf
sub
cmp
cmp
push
xchg
or
loop
aas
mov
enter
mov
ja
push
adc
pushl
je
sti
ret
add
js
inc
cmp
test
lds
xorb
and
add
pushf
repz
or
nop
out
out
lcall
push
adc
add
dec
or
or
clc
outsl
sbb
xchg
call
sbb
jmp
mov
sub
ja
mov
aam
inc
mov
jmp
or
sbb
lock
mov
sub
jmp
je
addl
test
add
xchg
adc
ljmp
mov
lret
inc
xchg
ret
mov
lods
mov
insb
push
scas
repz
jmp
mov
xchg
or
mov
ffreep
and
mov
sub
mov
bound
jle
mov
hlt
scas
ja
ret
add
mov
push
or
shlb
lahf
add
mov
add
push
mov
dec
push
je
or
jecxz
leave
cmp
xchg
xchg
rcr
dec
push
adc
sbb
mov
scas
call
test
add
jno
add
add
loopne
sti
out
cmp
mov
cmpsb
test
jae
push
add
loope
aam
xchg
add
push
pushf
sub
fcmovnb
adc
jns
shl
add
dec
mov
mov
dec
sarb
data16
mov
mov
mov
jp
mov
popa
mov
call
cmp
call
cmc
and
add
cmp
add
add
push
pop
lret
sub
ljmp
jns
pop
test
decl
xchg
inc
cmp
xor
mov
pop
jns
inc
sbb
xor
mov
mov
fsubrs
into
popf
cmpsl
add
das
or
sahf
call
insb
xlat
loop
jb
out
xor
lock
add
add
adcb
test
in
in
subb
mov
mov
jge
pop
xchg
ljmp
pop
jno
loop
cmpsb
or
sub
mov
fidivrl
stos
adc
popl
nop
push
mov
out
clc
xchg
ss
mov
and
in
pop
andb
add
mov
add
popf
popl
jmp
lods
cmp
mov
cli
inc
imul
sub
or
jle
jge
fwait
cmc
push
int3
adc
rorl
bound
xchg
mov
pop
cmpsl
sti
jl
shrb
add
orb
icebp
mov
mov
outsl
xlat
add
mov
inc
std
pop
je,pt
int3
cmp
flds
adc
out
add
or
adc
lods
pop
lcall
jo
stos
out
push
mov
mov
testl
or
test
ljmp
decb
imul
push
shlb
outsl
fs
dec
and
xchg
cmc
inc
push
sarb
pop
and
movb
add
rorl
cld
pop
repnz
push
pop
dec
mov
aam
push
mov
cmpsb
cmpl
fstpt
and
add
push
adc
adc
push
inc
cmc
into
mov
imull
shll
cmp
jbe
lcall
inc
bound
add
inc
xor
ret
add
cmp
add
sub
add
test
add
push
shrb
in
loope
lcall
adc
add
insb
cmp
sub
mov
movsb
mov
pop
loopne
pop
shlb
push
adc
push
xor
in
mov
pop
mov
cmc
pusha
sbb
dec
push
test
jo
jno
cmp
cmp
clc
push
push
jge
push
sarl
or
push
lods
sub
or
cmp
in
add
jge
into
ret
orb
add
ja
sbb
xchg
movsb
mov
out
or
bound
xchg
dec
scas
xor
xor
out
lods
add
mov
inc
xchg
xor
in
jle
add
add
and
js
pusha
or
addb
inc
lock
call
sbb
ds
lfs
mov
cli
push
cltd
pop
and
enter
fmulp
push
sahf
mov
xchg
adc
mov
shr
dec
call
cmp
cmc
fldenv
add
pushf
mov
test
cltd
mov
idiv
xor
dec
push
stos
movsb
jae
shrl
adc
movsl
or
cmp
popl
xorl
orb
cli
pop
test
mov
adc
shll
add
cmp
stc
add
addl
rcrl
stc
pop
or
adc
dec
push
lea
je
sti
xchg
pusha
andnps
repz
jp
jle
mov
incl
pop
out
or
pop
add
mov
mov
shlb
jne
fildl
push
inc
repz
sub
mov
loop
adc
xchg
in
xchg
adc
jge
push
stos
or
add
insl
std
repnz
jns
in
jecxz
call
mov
js
dec
gs
or
push
in
mov
mov
pop
mov
cmp
jmp
stc
scas
or
sti
or
jo
cltd
js
adc
lahf
pop
lret
je
mov
adc
push
sub
add
mov
add
out
sbb
nop
out
cmp
jecxz
cmc
mov
mov
out
inc
push
gs
das
repz
ret
orb
adc
and
movsb
je
pop
push
xchg
sub
cmp
xchg
je
sbb
test
mov
cs
cmc
rol
push
lret
mov
rolb
jno
je
cmpsl
cmp
push
les
adc
sub
cli
ss
jo
xchg
movsb
je
push
stos
stc
push
les
push
les
xchg
arpl
dec
sahf
jae
lret
andb
or
loope
pop
mov
add
mov
subl
cmc
push
idivb
xor
cmc
push
and
adc
call
mov
push
data16
mov
jge
mov
idiv
fwait
sbb
add
cltd
or
bound
sub
adc
push
cli
gs
or
pop
mov
std
dec
lods
shlb
add
sub
icebp
cld
rorb
lock
ret
jge
inc
leave
jmp
scas
add
adc
dec
add
cmpb
jg
sar
xchg
stc
mov
pop
or
push
leave
fucomi
jge
jne
roll
push
ds
cmp
push
aas
push
sub
xor
sti
shrb
aas
mov
jmp
push
cmpb
add
add
les
test
repnz
mov
pop
cltd
ljmp
loopne
jne
mov
pop
xchg
dec
mov
dec
cmp
sub
lcall
add
jne
int3
jmp
inc
or
pop
sub
xlat
adc
pop
jne
idivb
add
add
add
dec
addr16
pop
popf
pop
mov
mov
jne
sbb
cld
test
mov
insl
sar
je
ss
add
in
insl
cmpsb
mov
xor
js
pop
adc
cli
cwtl
scas
pop
dec
pushl
add
cmp
call
sub
or
int
add
add
mov
mov
cmpsl
mov
push
mov
test
cli
bound
mov
jle
ret
mov
les
stos
or
mov
divb
add
jb
or
xor
cmp
jmp
push
stc
decl
mov
add
push
movsb
movsb
dec
inc
divb
mov
add
pushf
int
negl
adc
pop
cli
idivb
add
jb
adc
dec
add
and
add
inc
clc
lock
je
test
cmp
lock
cmp
mov
jnp
mov
sbb
cld
fdivs
js
cmp
xor
lret
sti
ss
or
inc
xor
or
jo
or
sbb
out
jp
sti
jo,pt
sti
mov
stc
cli
and
mov
jne
pusha
sbb
jnp
cmp
push
jp
push
push
jg
mov
mov
jns
pop
cmp
stc
inc
std
adc
cmp
popl
sti
stos
or
add
sbb
push
jb
and
addr16
jno
or
cld
fidivrs
xchg
or
andb
sti
jmp
push
lret
push
int
lds
mov
pop
cwtl
or
mov
sbbb
xor
or
nop
pop
jno
adc
jo
nop
mov
repnz
add
add
gs
scas
sbb
or
add
xchg
data16
jg
aad
add
add
inc
data16
in
lret
mov
add
add
sti
or
je
out
lcall
push
lret
cmc
js
jb
outsb
out
xor
clc
jmp
jne
xchg
or
add
add
mov
push
mov
mov
scas
je
mov
testb
mov
lahf
add
arpl
jmp
inc
ds
push
and
or
stos
pop
leave
cmp
ja
sarl
inc
in
repz
mov
cwtl
call
test
add
xor
cmpb
je
orb
add
add
clc
inc
sti
or
stos
and
xchg
loope
pop
daa
fisttps
fwait
xchg
adc
pop
in
iret
cmpl
fists
xchg
fimull
push
aad
xchg
adcb
xchg
add
mov
addl
adc
pop
sub
jns
test
loope
xor
xor
pop
sti
mov
jns
rorb
inc
in
aad
andb
sti
gs
sub
dec
sub
sub
inc
mov
lret
adc
lods
stc
addb
int3
sti
xchg
jge
repnz
push
push
cs
gs
int3
mov
popf
out
insl
fwait
pop
enter
xchg
test
add
add
add
in
jb
hlt
shrl
mov
int
sub
aaa
lcall
cmpsl
add
vhaddpd
jecxz
jo
mov
add
rcrl
stos
add
adc
add
and
push
sahf
in
push
and
in
mov
jp
adc
add
insb
sarb
push
rorl
lock
push
jl
scas
ret
sbb
xchg
dec
inc
jle
js
jmp
call
shr
bound
jge
mov
mov
mov
in
stc
call
xchg
ja
enter
pushf
xchg
ja
lret
jle
mov
test
mov
mov
shl
jmp
pop
mov
bound
jae
add
mov
aam
mov
adc
lock
add
decl
xchg
cmc
jne
or
mov
xchg
xchg
jns
or
popa
and
arpl
jae
lret
pop
xchg
add
cmpsl
xchg
call
adcb
pushl
jl
push
sbb
ljmp
test
jne
add
std
jmp
aam
test
call
jns
mov
scas
push
ljmp
mov
xchg
in
or
into
std
pushl
test
popa
xlat
or
pop
mov
jne,pn
jne
fsts
shll
mov
incb
mov
mov
bound
sti
leave
imull
ds
repnz
fildl
mov
jle
sarl
arpl
pushf
stc
mov
js
inc
mov
jns
inc
rorl
repz
cmp
or
adc
add
mov
add
xchg
scas
popl
imul
push
xor
dec
fldenv
mov
sahf
mov
in
push
dec
jmp
mov
movsb
daa
stos
popl
xchg
daa
mov
sbb
iret
imul
addr16
outsb
mov
push
pop
imul
xorb
adc
pop
aad
jne
mov
ja
cmp
ljmp
sub
mov
inc
int
fs
cmpsb
sbb
mov
add
pop
je
ss
out
jecxz
outsb
mov
mov
pop
xorb
dec
and
or
mov
jne
mov
fs
popf
lcall
add
cli
bound
and
sub
and
subb
stos
mov
hlt
cld
cmc
mov
jnp
loopne
sbb
jae
idiv
outsb
dec
push
pop
xchg
sbb
pop
push
addl
xlat
pop
jnp
adc
out
pop
mov
push
add
fstpt
cmc
mov
mov
stos
mov
mov
and
dec
je
imul
or
xlat
and
dec
je
stos
mov
xor
and
fisttpl
popa
add
push
or
push
pushl
cs
pushl
add
pushl
xchg
in
and
inc
cmp
mov
mov
xchg
push
mov
mov
xchg
jg
cli
xor
testl
add
add
js
je
inc
mov
cmp
rorl
js
xchg
xchg
sbb
repz
or
xchg
pushl
scas
mov
out
dec
dec
in
mov
movsb
daa
popf
sbb
ss
insl
add
fcmovnu
imul
psubsb
mov
pop
mov
adc
add
add
add
lea
mulb
add
stos
dec
xchg
cmpsl
fisubrl
sub
lret
aas
jl,pt
adc
jo
shll
pop
lea
and
test
adc
daa
leave
sbb
test
jl
fbld
insl
icebp
loope
repnz
stos
sbb
mov
ret
leave
stos
dec
lss
int
add
add
mov
in
imul
stos
sbb
mov
inc
add
int
test
popf
jg
sbb
jnp
mov
lret
and
ret
in
cmpsb
dec
push
sbb
movsb
push
push
sub
mov
sbb
and
push
adc
jne
lds
mov
imul
add
idiv
mov
out
mov
js
dec
mov
push
push
mov
movl
mov
fiadds
push
js
arpl
add
push
dec
push
out
js
jnp
push
mov
add
cld
xor
in
pop
xchg
add
sub
add
add
add
cld
jmp
out
add
testb
mov
out
icebp
aam
mov
shl
lock
cmpl
mov
hlt
add
adc
sbb
js
push
xchg
cmp
push
cmc
js
divl
cli
ljmp
cli
dec
aaa
ss
pop
cmc
mov
add
xor
pushl
add
dec
dec
outsl
sub
mov
mov
in
sub
cli
sbb
in
ss
pop
dec
push
cmp
pop
push
gs
and
bound
data16
xchg
cld
imul
pop
lds
idivl
xchg
cld
ss
pushf
sbb
je
jle
sti
sti
ljmp
sbb
add
add
adc
hlt
xchg
cmpsl
cli
cli
outsl
mov
ret
mov
imul
popf
popa
mov
xchg
mul
add
je
pop
fs
sti
ljmp
adc
and
add
insl
data16
xor
or
pop
loope
jmp
xchg
out
sarl
mov
call
leave
cwtl
in
mov
pop
pop
add
add
rcrb
mov
cli
push
add
dec
push
les
clc
leave
mov
ret
cmpsl
rorb
out
test
pop
fistpll
out
inc
int3
stc
pop
popa
sbb
xchg
push
mov
lea
xorl
mov
push
lcall
aam
testl
or
les
fdivrl
inc
add
lea
fisttpl
lea
xor
adc
push
ss
adc
adc
test
lock
dec
fwait
nop
mov
push
pop
push
xor
pop
jne
lods
mov
cwtl
adc
mov
jmp
mov
mov
push
imulb
adc
add
test
lahf
jbe
cmp
mov
imul
pop
mov
ret
test
xchg
mov
stc
lods
mov
gs
sti
aad
jge
in
aas
adc
insl
sub
mov
jns
cli
sbbb
test
mov
xor
imul
sub
xor
repnz
push
loopne
add
nop
sahf
clc
aas
push
call
sti
xchg
pop
adc
rcrl
pop
jnp
push
test
adc
data16
nop
fstps
xor
jecxz
jb
out
ret
push
loope
cmpsl
add
push
cwtl
clc
inc
xchg
fs
pop
sub
jb
in
and
adc
imulb
add
add
mov
pushf
mov
shlb
sub
add
or
divl
dec
xor
pop
push
add
mov
lods
call
dec
lcall
mov
in
notl
call
jmp
mov
push
mov
mov
hlt
xchg
add
icebp
popf
loopne
sbb
add
js
pop
jmp
mov
cmp
aaa
fisttpl
call
push
lock
mov
fdivrl
mov
and
mov
rcll
stc
shr
stc
into
dec
pop
das
add
inc
add
push
outsb
xlat
loop
call
enter
pcmpgtd
cmp
mov
xor
loop
stos
testl
and
pop
repnz
ljmp
or
andl
roll
pop
push
pop
test
add
inc
rorb
bswap
prefetcht0
cli
decl
stc
dec
test
mov
test
in
outsb
push
imul
xchg
bound
xchg
jb
jmp
inc
add
or
ss
adc
jp
or
sub
decl
push
push
jo
inc
repz
cld
or
push
mov
sbb
hlt
cmpb
mov
mov
int
cli
sar
sbbb
out
fildll
push
mov
mov
add
push
xor
jmp
mov
mov
divl
xlat
push
loope
adc
outsb
out
insb
nop
add
pusha
pop
ds
push
stos
jmp
pop
xchg
hlt
xor
mov
mov
int
out
cltd
pop
call
xchg
shrl
mov
nop
out
mov
ds
movsb
idivl
and
lds
movsl
jmp
setne
mov
out
stc
outsl
inc
addl
lret
add
sti
out
sbb
outsl
stc
nop
add
jecxz
mov
movsl
cli
mov
inc
test
add
add
daa
test
lods
popa
lret
xor
push
jmp
jb
add
add
adc
mov
sahf
jp
jmp
std
pop
cli
jmp
lahf
jmp
cli
jmp
or
xchg
rorb
cmc
mov
or
pop
imul
adc
or
mov
icebp
sub
idivl
psraw
lea
pop
xorl
or
dec
cld
mov
add
add
pop
lea
nop
add
or
jne
test
clc
call
nop
dec
outsb
push
xchg
pop
outsb
pop
pop
xlat
in
mov
pop
orl
push
cld
inc
nop
popl
adc
dec
orb
sbbb
add
sub
mov
sbb
lcall
or
out
cli
and
cld
jp
mov
jae
lock
data16
incl
add
add
add
sar
out
mov
cli
dec
dec
add
jno
inc
add
es
cs
dec
cs
iret
cmp
jb
ds
xchg
leave
inc
std
mov
add
mov
inc
lock
stc
ret
cwtl
dec
gs
cs
xchg
int
inc
mov
and
stc
pop
pop
inc
movsl
enter
xchg
push
sti
fdivl
nop
out
cmp
jecxz
jmp
push
shrl
int
fdivrl
sbb
dec
cmpsb
sti
cmp
push
xchg
daa
add
dec
mov
outsb
loopne
dec
pushf
pop
out
ds
movsl
push
cmc
sti
sbb
xor
sbbl
add
loope
dec
xor
add
add
cmp
in
inc
int3
mov
es
add
jmp
mov
mov
pop
cli
gs
push
add
or
mov
and
arpl
mov
addr16
push
push
pop
test
sub
sbb
fidivrs
add
mov
add
test
popa
pop
shrl
mov
shrl
pusha
jl
mov
popl
inc
ret
dec
dec
data16
or
test
rorl
sbbl
fdivrs
rclb
xchg
stc
fldl
add
ud2
cli
lcall
sbb
xbegin
je
mov
dec
lea
add
add
push
inc
dec
adc
or
dec
inc
or
stos
inc
mov
sarb
test
xor
es
push
and
mov
repnz
pop
cmpsb
add
push
mov
data16
mov
sub
es
out
clc
jle
inc
lea
ret
out
cs
pop
mov
inc
lock
mov
jmp
call
dec
jecxz
je
adc
inc
cli
xor
stc
sub
ljmp
stos
clc
mov
push
call
cs
xor
jmp
in
cmp
dec
jns
pop
mov
add
cmp
int3
rcrb
in
scas
add
mov
ja
add
fistps
sbb
mov
push
cli
sub
add
in
mov
inc
dec
or
pop
mov
pop
fbstp
sbb
mov
add
arpl
push
mov
in
fwait
in
fwait
add
add
clc
jb
setae
push
add
ficoms
outsb
arpl
das
rcr
hlt
shll
popl
inc
lods
cmc
cli
inc
rcr
hlt
push
dec
sar
ss
push
pop
xor
test
jb
add
mov
push
sahf
add
and
lds
pusha
ljmp
out
adc
sub
jmp
pop
or
jo
stos
sbb
stos
adc
push
lret
cmpsb
push
shrb
js
cli
push
stos
sbb
push
and
xor
pop
mov
xor
cs
pop
fdivs
lods
xor
dec
push
jnp
fnsave
xor
fs
std
divl
ret
nop
loope
call
pop
imul
inc
add
mov
imul
jbe
add
out
jnp
mov
sarb
xor
je
leave
nop
and
pushf
mov
imul
sub
loop
testl
or
jns
pop
and
pushl
sahf
aad
add
adc
ficompl
dec
push
pop
mov
dec
sti
test
adc
fucomp
ss
adc
push
or
incb
add
add
cmc
push
jecxz
adc
movsb
es
push
jp
mov
pop
jbe
jp
cmp
je
sahf
fcompl
inc
call
add
push
cli
xor
mov
add
xchg
adc
push
les
fs
cmc
inc
cmpsb
add
imul
mov
mov
add
fildl
sbb
loopew
mov
loop
inc
rcrl
mov
jmp
in
pop
jmp
push
mov
cltd
fwait
out
divb
jp
jae
jbe
jae
jp
jae
jl
loopne
aas
cltd
lahf
stos
aas
xchg
cmpsl
in
mov
add
mov
add
mov
add
insb
push
in
lock
lea
cmp
jmp
mov
cli
data16
xor
fisttpll
sub
mov
cli
inc
fiadds
jmp
sub
jle
mov
cwtl
test
in
dec
sbb
ret
or
push
mov
sahf
out
jmp
out
pop
loopne
test
mov
test
int
clc
cmp
add
add
mov
or
ss
sub
xchg
add
xchg
clc
mov
push
call
adc
cmc
xchg
and
jne
in
into
cld
cmp
push
bound
lret
rorb
divl
inc
push
repz
js
pop
xchg
add
jle
push
adc
jmp
icebp
test
popf
dec
addl
add
movsb
xor
xchg
jns
testl
mov
ds
loop
test
inc
sub
cmp
lahf
ds
xchg
ja
xor
sub
je
xchg
mov
dec
sti
gs
jecxz
mov
fnsave
arpl
dec
push
cmp
addl
add
flds
testb
shrl
cmp
data16
jecxz
test
push
cmp
jmp
ja
xor
notb
nop
loop
mov
adc
jbe
lahf
sbb
dec
xor
jp
sbb
dec
xor
js
inc
xor
sbbl
and
rcl
js
fbstp
lods
sbb
dec
faddp
out
push
into
fisubs
in
xchg
pop
add
cwtl
cmp
ljmp
cmp
fmuls
xchg
out
add
mov
sbb
call
shrl
dec
outsl
hlt
fwait
add
mov
add
in
pop
nop
push
out
subl
sbb
adc
test
adc
adc
mov
mov
inc
xchg
arpl
cld
sbb
cltd
outsl
roll
je
call
pop
inc
xchg
cmp
iret
add
mov
test
inc
cli
shll
dec
cli
es
xchg
test
fisttps
add
dec
push
decl
xchg
mov
mov
xor
add
add
add
push
push
mov
loop
negl
mov
ret
rcrl
cmp
orl
sbb
mov
mov
arpl
adc
push
outsb
push
dec
mov
lea
cld
mov
loop
mov
cltd
addl
lret
push
sbb
add
add
mov
lea
icebp
mov
mov
cli
bound
aaa
jg
cmp
bound
mov
out
nop
cmpl
fists
mov
push
sub
repnz
mov
cli
adc
out
aam
filds
adcb
sti
pusha
data16
test
mov
shll
mov
cmp
aad
ret
push
mov
or
jg
iret
std
lfs
std
into
mov
xchg
and
sbb
and
dec
pop
cmp
pop
aam
cmc
fs
aas
jecxz
data16
adc
pop
addr16
dec
outsb
int3
mov
or
adc
fwait
outsb
push
aad
sbb
mov
xchg
je
xor
lcall
add
add
push
nop
jg
dec
jnp
imulb
pop
iret
inc
arpl
aaa
out
pop
mov
mov
sahf
lret
out
cmp
push
mov
push
mov
mov
or
dec
cli
jb
jbe
jo
cmp
cli
lds
cli
call
fcoms
clc
xchg
subl
add
add
or
call
xor
in
sbb
fwait
subl
out
mov
add
inc
xchg
cmp
hlt
sbb
pop
or
add
scas
in
out
cmp
call
inc
mov
add
xchg
and
notl
sti
xor
xor
mov
pop
lock
lea
fdivl
idiv
cmp
jns
arpl
jecxz
bound
inc
insb
sbb
xchg
dec
lea
subl
arpl
dec
out
xor
or
cltd
or
jmp
jnp
adcl
jecxz
testl
sbb
jg
inc
fcompl
lret
out
mov
mov
clc
out
orl
add
int
scas
push
sbb
ja
idiv
dec
in
xchg
inc
xor
xor
enter
mov
mov
push
mov
jle
ret
outsb
jno
cli
loop
leave
xor
sub
icebp
jo
add
dec
lea
inc
sub
pop
sbb
xchg
sahf
aam
cmp
add
add
cmp
add
sbb
fisubrs
mov
mov
decb
fisttps
imul
repnz
out
mov
adc
insb
mov
xlat
mov
inc
inc
aaa
in
fidivrs
inc
fiaddl
xchg
push
adc
out
cmp
add
add
sbb
int
lcall
add
jb
imul
iret
divl
dec
add
cmp
cld
addl
call
push
cmp
push
dec
out
test
inc
dec
cltd
jno
adc
jno
test
repnz
loope
xchg
push
push
test
lods
pop
xchg
pop
cwtl
clc
out
imul
push
jb
adc
gs
add
jecxz
mov
inc
cli
cmp
or
sbb
mov
push
xor
add
in
pop
inc
or
mov
addb
inc
mov
add
jne
pop
fimull
xchg
sub
cmp
push
pop
xor
add
mov
add
jl
mov
dec
mov
jl
imul
lcall
dec
push
ss
inc
dec
test
sbbb
push
xorb
call
ret
jge
insb
movsl
shr
pop
hlt
lods
cmc
lcall
dec
push
adc
fdivl
pushl
pop
cmp
sub
fmull
inc
imul
jo
add
ljmp
fimuls
pop
int3
sbb
arpl
xchg
iret
xchg
jg
mov
lea
cmp
add
scas
push
lea
cli
jb
dec
lock
adc
cmp
xchg
xor
mov
adc
xor
faddl
mov
scas
cmp
dec
jae
incl
xchg
call
add
add
add
fnstenv
or
dec
cltd
fldt
jl
out
mov
or
inc
jno
loope
es
notb
mov
inc
inc
inc
aad
inc
jg
mov
cwtl
ss
fsubrl
push
mov
lods
mov
fistps
lock
lahf
cmpsl
add
inc
jmp
xor
das
jmp
mov
sbb
pushf
daa
add
mov
add
jbe
leave
fstps
inc
mov
sbb
inc
cli
inc
push
aaa
inc
cld
or
or
push
mov
out
xchg
pop
mov
mov
jne
sub
aam
int
mov
and
inc
jl
je
insb
les
cltd
insl
cmp
das
mov
cmc
hlt
add
add
add
cli
push
jl
in
jb
rorl
out
repz
cli
mov
cmp
popa
cli
push
add
roll
cmpsb
jge
pop
mov
mov
inc
adc
mov
cltd
xchg
sbb
push
dec
mov
ljmp
or
push
mov
add
pushf
adc
notl
pop
sub
add
or
mov
test
xchg
mov
addl
sub
mov
xchg
add
dec
xchg
add
shrl
push
sbb
push
sbb
push
pop
test
jns
data16
jge
cmp
dec
mov
xchg
data16
and
sbb
je
mov
inc
push
mov
out
mov
jp
mov
jle
inc
sbb
sbb
into
test
or
call
sbb
sti
and
add
mov
les
dec
fcomps
daa
sti
bound
jg
push
daa
push
push
dec
cmp
cli
cmp
lock
loop
xlat
inc
and
add
add
add
jmp
sub
pusha
in
std
insb
xor
cmp
fistpll
in
pop
cltd
jp
xor
outsl
mov
pop
inc
rcll
pushf
fmulp
cmpsl
add
mov
mov
pop
outsl
add
dec
mov
add
xchg
pusha
pop
aas
iret
out
sti
fisubs
cmp
ljmp
pop
dec
cmp
push
add
add
mov
icebp
out
cmp
popa
test
mov
or
cmp
jmp
adc
aad
cmpsb
or
or
xor
or
sub
push
jb
mov
dec
in
cmp
insl
stc
mov
outsl
je
xor
push
aad
stc
push
cmp
or
cmp
aaa
cli
ss
add
add
cwtd
cmp
in
pop
cmp
push
mov
loope
fiadds
inc
pop
daa
popa
cld
dec
fs
rclb
push
or
or
jmp
jae
cli
arpl
jne
daa
mov
dec
xorl
push
mov
fs
or
push
lcall
mov
in
dec
xor
rolb
add
aam
or
test
mov
jmp
test
pop
mov
sub
xchg
lret
arpl
leave
rcrb
mov
mov
add
xchg
aam
push
daa
pushl
sub
xchg
pop
adcl
sub
sti
fsubrp
std
xor
pushl
push
into
or
adc
lea
and
inc
iret
sbb
mov
xor
test
into
cli
gs
jnp
mov
bound
adc
mov
test
testl
sti
mov
add
mov
lock
pop
shl
lahf
sti
xor
pop
cmp
iret
out
jbe
lea
xor
pop
sub
sub
shrb
add
insl
dec
or
adc
jno
loope
and
xorb
lods
shr
fbstp
push
and
add
rolb
lret
out
mov
jg
lods
cmp
adc
add
addr16
push
sub
xor
inc
es
mov
add
paddsw
popl
mov
xor
add
add
pop
push
addr16
insb
and
add
call
das
cmp
push
xor
insl
mov
cli
jmp
mov
dec
push
mov
cmp
sub
clc
or
popl
jmp
std
fucomip
ljmp
stc
cld
push
xor
add
jo
test
mov
add
movb
cld
xor
sbb
clc
xchg
add
xlat
into
loopne
fs
fcomps
mov
int3
push
addl
test
xchg
add
xlat
into
loopne
adc
push
aam
mov
rcr
adc
ljmp
dec
ljmp
push
dec
add
jns
sbb
add
add
aam
aam
push
call
cld
xchg
push
lcall
or
addl
cli
dec
push
mov
rclb
stos
mov
pushl
xor
xchg
sbb
sti
add
cmpb
sub
imul
cmp
loop
js
xorb
jge
and
imul
sub
adc
dec
or
mov
sub
imul
or
xor
mov
stos
les
mov
leave
mov
pop
fdivl
pop
iret
xor
pop
cmp
fistps
filds
or
mov
xorb
add
repz
or
mov
fnstenv
lret
xor
add
add
mov
xor
notl
cmc
cmpsl
dec
jle
daa
cmpl
mov
dec
jmp
js
or
xor
stos
cmp
mov
inc
xchg
jb
sbb
mov
int3
fsubl
aas
jle
lcall
push
cmpl
pushf
jp
adc
dec
call
add
stc
cwtl
outsb
or
push
push
mov
cmp
mov
mov
or
jge
xchg
out
push
icebp
popf
sar
inc
int
call
push
cli
aam
test
mov
fiaddl
call
mov
push
add
data16
sub
add
cltd
das
test
stos
or
mov
rcrb
aas
ud0
aad
lea
push
call
xlat
mov
rorb
rorb
or
add
mov
push
push
sbb
test
or
mov
jo
inc
negl
out
cmp
dec
dec
out
int3
mov
lea
sbb
adc
jmp
ljmp
insb
loopne
mov
xchg
test
cmc
sub
sti
les
pushl
cmp
in
int3
cli
add
stos
cmc
cli
pop
xchg
aad
mov
int3
pop
in
stos
mov
lock
or
lea
fstpt
data16
add
mov
lods
dec
cmp
faddl
mov
les
inc
lea
push
lds
testb
test
mov
xor
jns
cmp
subb
push
jne
fistpll
cmpsl
js
cmp
les
or
dec
add
jecxz
icebp
xor
sub
imul
add
add
aas
pop
cld
cli
xor
jg
and
xorb
sti
xor
out
jle
xor
or
sti
mov
xor
lret
xchg
xchg
add
jmp
fcompl
shlb
cli
sahf
lahf
aad
mov
leave
ss
lds
daa
divl
xor
cli
push
cwtl
sub
loop
add
add
cli
inc
and
inc
fmuls
cli
nop
jae
test
xor
std
incb
xor
xor
mov
addl
xor
out
lock
ss
jmp
rorl
xor
or
lcall
je
lcall
mov
pop
jmp
add
add
or
sub
adc
cmp
sub
rcrb
push
cld
push
sub
jnp
pushf
jmp
add
jmp
test
divb
jnp
aaa
adc
adc
push
push
iret
pop
add
test
xor
cmpsb
inc
pushl
and
add
loope
adc
clc
add
jnp
stc
mov
mov
enter
jp
stos
mov
or
cli
add
jl
cli
inc
or
rorl
xchg
movsl
push
jne
in
sub
jp
lcall
daa
aaa
je
add
shll
dec
push
xchg
and
loopne
adc
or
mov
add
jl
jns
push
or
add
add
dec
push
add
and
aam
jl
addr16
outsl
movsb
xor
inc
push
pop
mov
pop
bsf
cs
pop
ja
mov
and
fisubl
mov
subl
mov
pop
in
lock
int3
movsb
in
ret
aam
push
inc
sti
daa
in
push
mov
and
jbe
out
jne
mov
add
adc
pop
fs
xor
pop
inc
lods
les
cmp
daa
outsl
mov
sti
sub
sti
sti
sar
das
ss
adc
jge
cs
stos
out
sub
mov
popa
mov
cli
jmp
fs
xchg
lods
arpl
mov
xor
sti
mov
inc
jne
add
add
stos
cld
jmp
mov
mov
jae
test
add
adc
cld
mov
mov
sub
pushf
outsb
adc
fldl
adc
push
stos
inc
cld
cltd
mov
or
sbb
mov
xchg
jmp
cli
fldt
rcll
setno
push
in
dec
push
mov
push
testl
cmp
cld
call
pop
imul
sub
ret
clc
jmp
lahf
out
or
dec
push
test
fildl
roll
and
mov
cmpsb
std
mov
add
aaa
jmp
mov
add
cmp
add
add
mov
add
mov
ret
adc
sub
add
stc
dec
add
imulb
cld
inc
insl
fs
jle
cmp
inc
ss
jg
shlb
xor
idivb
sub
aas
mov
add
or
jne
fld
xorl
jle
sbb
ds
mov
add
add
mov
lret
sti
rcrb
shr
cmp
fdivrl
xchg
insb
ret
cmpsb
xchg
xchg
les
push
adc
mov
lret
jg
add
dec
adc
pop
xor
pop
dec
mov
int3
dec
mov
mov
add
fisttpll
fucomip
push
movsb
repz
add
add
adcl
subl
push
repnz
mov
lods
mov
rcll
stc
xchg
ret
icebp
negl
aam
jg
jmp
imulb
pop
cmp
cmp
xchg
or
jle
cltd
cmp
jmp
mov
cs
subb
out
nop
pop
daa
or
icebp
mov
test
and
mov
outsb
in
mov
adc
jmp
push
inc
cld
jl
add
xlat
int3
add
sub
test
sub
add
mov
cli
dec
mov
inc
adc
clc
or
call
jecxz
sahf
push
jecxz
xchg
xchg
in
rolb
add
add
mov
xchg
push
mov
in
rol
dec
lea
dec
idiv
test
pusha
or
cmp
lcall
dec
outsb
pop
loop
and
test
mov
hlt
sti
xor
push
inc
hlt
mov
sahf
stc
jb
pop
xchg
mov
test
dec
add
out
add
neg
pop
xchg
add
add
sahf
push
xchg
shll
ss
cmpsl
js
inc
mov
or
notb
or
cmp
jne
popa
pop
testb
inc
mov
test
sub
adc
sub
add
icebp
negb
sbb
out
negl
or
pop
xchg
jmp
adcl
sub
outsl
jl
adc
cmc
fs
xor
jmp
ret
es
jnp
jl
adc
mov
int3
jnp
cmp
mov
shlb
cmp
pop
int3
cmc
das
out
hlt
mov
xchg
and
add
jnp
adc
sbb
push
sbb
push
cmp
repz
sbb
adc
out
push
cmp
call
add
cwtl
test
add
adc
and
popl
pusha
lods
and
add
jno
imul
sub
pushf
or
jbe
test
cs
and
adc
sbb
cltd
sub
fsubrl
push
push
inc
sub
negb
or
mov
mov
xchg
inc
jmp
cmc
dec
loopne
pop
inc
sub
daa
mov
mov
testl
jle
add
or
push
mov
nop
dec
push
xlat
outsl
movsb
adc
push
push
leave
bound
fwait
inc
testl
jle
add
mov
cmp
pop
xor
adc
lds
lretw
pop
mov
nop
mov
orb
fmull
jne
push
lds
xor
mov
add
adc
cli
repz
rcl
inc
mov
dec
and
xchg
pop
push
fdivl
xchg
cmp
dec
add
mov
outsb
cli
push
pop
xor
hlt
xchg
enter
xchg
push
sti
cmp
mov
test
cli
out
test
shll
xor
pop
mov
test
mov
cmp
shlb
ret
dec
dec
jg
jnp
insb
xchg
xchg
mov
lahf
and
scas
cld
cmpsl
stc
push
pushf
loopne
dec
test
arpl
add
add
or
mov
rorl
mov
ljmp
xchg
xor
and
add
xor
add
and
mov
iret
mov
or
stos
jmp
movsb
fistl
fisttpl
rol
cmp
call
sarb
test
popl
jb
rorl
add
cli
xchg
add
test
es
sbb
add
or
out
mov
aad
into
jmp
add
mov
cli
ds
iret
add
mov
stc
hlt
nop
inc
jmp
xchg
add
mov
sub
bound
push
ss
clc
aas
jl,pn
sti
jbe
addl
jno
cltd
nop
cmp
movl
adc
mov
test
and
or
jecxz
ljmp
divb
cmc
test
adc
mov
fldcw
lcall
jae
iret
add
rol
inc
mov
rorb
rclb
add
add
add
mov
movsb
bound
pop
pop
pop
test
out
push
xchg
test
loop
xchg
or
dec
jp
push
inc
shll
xlat
jbe
addl
inc
sti
test
jp
mov
les
jne
test
mov
idivb
push
sti
enter
mov
jno
into
mov
lods
mov
adc
xchg
mov
out
sbb
cli
jl
test
sbb
jp
mov
incb
xor
mov
jle
sbb
mov
loope
gs
scas
adc
add
es
jb
gs
push
mov
adc
pushw
test
adc
add
inc
jge
pop
jle
arpl
arpl
push
push
xor
mov
xor
jecxz
add
call
sub
mov
pop
jle
sbb
mov
adc
test
lods
adc
and
into
mov
aad
pop
jns
xor
add
add
mov
inc
roll
jae
out
jg
mov
rorb
cmc
hlt
daa
in
dec
sbb
push
xor
js
pushf
sar
orb
push
mov
pop
push
inc
std
jns
cs
je
add
fs
sbb
push
push
hlt
test
add
sub
or
jmp
push
or
fcoml
dec
clc
or
test
mov
jge
int3
pop
and
mov
sub
cmc
jne
in
dec
insl
rolb
test
std
or
imul
pop
int
pop
in
jmp
pop
inc
clc
hlt
or
jmp
je
sti
jg
adc
mov
dec
nop
add
rorl
lcall
stc
mov
inc
hlt
push
and
mov
decb
insb
std
pushl
xor
cmpsb
out
pop
mov
mov
jmp
ficoml
js
incb
jge
js
scas
cmp
sub
jae
scas
sub
stos
ret
ds
inc
mov
cmpsb
int
mov
xor
add
add
mov
fucomip
daa
sbb
dec
mov
rorb
mov
les
ds
jle
pop
dec
sti
rcrb
xor
cmpsl
add
push
pushf
push
aam
add
call
movsl
ljmp
lahf
sarl
test
ss
push
add
aam
add
clc
mov
and
mov
mov
mov
icebp
inc
daa
add
ret
jmp
pop
cmp
into
out
mov
xor
into
out
jne
mov
dec
push
decl
mov
mov
cmp
clc
push
mov
or
test
rcrl
jo
sbb
stc
or
push
sub
xor
mov
dec
push
es
add
lret
iret
add
popa
cmc
push
jbe
pop
vmovaps
inc
mov
test
popa
mov
push
repz
push
sahf
fistps
jmp
fs
adc
sbb
jle
sbb
insl
cmp
and
mov
loop
or
in
sbb
in
inc
and
or
mov
mov
ret
lahf
push
fcmovbe
add
sbb
mov
inc
or
push
mov
sbb
inc
push
xchg
cltd
pop
pop
rolb
mov
das
jne
inc
int3
mov
adc
pop
roll
mov
out
xchg
mov
adc
dec
roll
mov
pushl
adc
mov
inc
add
sbb
add
andl
inc
add
inc
mov
xchg
mov
test
std
sahf
or
push
sbb
jbe
gs
data16
mov
cli
adc
add
pop
das
stos
data16
jge
inc
add
inc
mov
cmp
imulb
pop
out
shrb
in
in
inc
add
inc
mov
sbb
imulb
pop
jmp
push
sub
lock
pop
cmc
popl
cli
jnp
add
clc
and
lock
adc
not
out
mov
add
fsubrs
inc
mov
mov
mov
jb
cmpsl
add
and
mov
adc
jne
xchg
sahf
jl
add
sbb
mov
adc
jne
xchg
jns
out
idivb
add
ja
inc
mov
xlat
pop
cmc
popl
jno
out
lret
add
push
add
iret
add
xlat
outsb
adc
mov
pop
and
lahf
add
sahf
dec
ds
mov
js
jns
lahf
in
ret
dec
mov
jmp
mov
cwtl
and
add
add
lahf
mov
mov
jmp
mov
mov
icebp
mov
dec
ds
mov
lahf
icebp
lret
dec
cmp
sbb
sub
roll
mov
call
rolb
pop
adc
xchg
rolb
mov
aas
xor
inc
dec
lods
icebp
adc
cltd
cmp
add
add
rolb
mov
outsl
push
mov
adc
xchg
cltd
pop
rcl
add
outsl
jae
inc
fsubrl
cltd
js
rolb
mov
aas
cltd
mov
adc
mov
mov
aas
mov
popf
adc
mov
add
inc
mov
in
addr16
add
out
ret
add
add
mov
add
bound
clc
repz
out
cmp
ljmp
add
es
rorl
fstpl
sti
call
jb
jne
push
lahf
std
imul
bnd
mov
push
push
lds
mov
shll
into
int3
shll
pop
cli
push
stos
cli
aas
add
xor
add
add
push
mov
inc
mov
aad
jbe
out
rcrl
inc
mov
mov
fwait
sbb
popa
lods
cld
add
lods
out
nop
mov
inc
dec
ljmp
mov
sub
mov
or
mov
cmpsl
add
sbb
addl
pop
mov
jg
gs
xchg
mov
aaa
mov
cmp
mov
mov
sub
or
shl
imul
test
test
xchg
aam
in
or
std
ret
lds
sahf
and
out
adc
cmpsl
iret
add
into
jb
imul
aam
adc
push
push
sub
add
add
lea
mov
add
adc
jmp
mov
add
mov
stc
pop
fsts
sbb
xchg
cli
into
test
add
adc
mov
mov
je
lret
cmp
int
test
mov
mov
inc
add
loopne
je
out
or
sbb
ret
pop
enter
rolb
repz
bound
hlt
mov
add
xor
pop
lea
js
mov
mov
or
int3
btrl
cld
imul
mov
out
mov
incl
pop
add
jmp
add
dec
lea
add
add
cs
sti
add
dec
sti
jmp
cmpsl
adc
xor
add
out
or
jecxz
ss
sub
add
daa
fwait
sbb
es
cmp
cmpsb
xor
cmp
adc
cmpsl
jno
popa
adc
out
sub
mov
push
xchg
xchg
mull
cmpsb
std
lcall
dec
sti
enter
mov
outsb
xor
mov
daa
add
add
add
sbb
adc
out
pop
addr16
jg
or
add
xchg
mov
jl
mov
repnz
lcall
lods
pop
sbb
pop
cmpsl
add
mov
in
mov
je
sub
in
pop
adc
lcall
push
cmp
mov
add
add
add
or
jle
test
leave
rorb
push
mov
add
ja
jmp
mov
dec
add
or
adc
mov
daa
mov
stos
jle
dec
mov
aas
add
aaa
cli
adc
mov
dec
mov
sbb
cli
mov
mov
adc
enter
adc
add
mov
push
cli
divb
pop
or
jbe
inc
jmp
mov
add
lea
sub
or
enter
pusha
ljmp
out
notl
mov
std
call
aam
psadbw
adc
test
inc
pop
jb
add
ret
add
push
xchg
mov
aaa
aas
test
jo
pop
adcl
add
leave
je
adc
cs
or
fs
mov
ret
dec
pusha
subl
lock
bnd
pcmpeqw
jbe
cmp
repz
jns
pop
inc
add
xchg
push
popa
xor
xor
into
out
mov
mov
add
add
idivb
xchg
stos
mull
ret
mov
add
ss
std
sbb
sub
shll
jae
pushf
jnp
ss
out
sub
mov
loope
xchg
jle
dec
test
repnz
decl
incb
jbe
notl
sbb
das
imul
fistpll
sbb
jne
daa
add
jmp
mov
mov
add
or
jbe
mov
add
push
ret
adc
negl
out
jns
xchg
lahf
in
mov
sti
clc
sub
pop
sbb
dec
imul
jbe
mov
push
dec
xchg
in
movsl
das
sbb
out
test
ss
push
pop
mov
rcrl
add
imul
jmp
mov
stc
fmull
inc
jmp
dec
add
or
test
jnp
push
bound
pusha
dec
aaa
sub
iret
nop
jmpw
or
or
ret
imul
mov
rcll
or
mov
push
pop
mov
push
xchg
repnz
mov
test
adc
add
xchg
jg
sub
xchg
ljmp
jnp
and
jae
mov
je
bswap
pop
mov
daa
dec
shll
inc
fdivrl
inc
cmp
pop
icebp
sub
cmp
jnp
into
cmpsl
sub
popa
fwait
cli
je
call
mov
je
mov
add
mov
rolb
add
cltd
nop
jns
inc
call
mov
cmp
adcb
add
sbb
push
std
adc
mov
nop
dec
sub
negb
clc
test
negl
incb
repnz
inc
stc
inc
xchg
inc
mov
adcl
int
std
pushl
scas
popf
jle
cli
sbb
mov
sub
mov
dec
cld
jl
push
add
jle
push
sub
hlt
jle
xor
sti
add
sahf
xor
ss
negb
inc
fsubr
sahf
adc
out
add
int
add
adc
xor
mov
inc
xor
jne
ss
xor
mov
mov
sbb
ret
add
iret
xchg
call
out
sbb
pop
lds
rorl
lahf
iret
mov
les
xchg
add
ret
xlat
inc
mov
cmpsl
cmp
call
xchg
dec
jge
aaa
cmp
mov
pop
inc
imul
cvttps2pi
jne
or
ret
cmp
mov
dec
cld
adc
jnp
pusha
ljmp
add
inc
add
inc
sti
popf
cli
cs
hlt
loop
subb
add
adc
jl
push
cld
or
fs
jnp
bound
test
add
lret
sti
call
jge
adc
cmpsb
movb
sti
pop
pop
adc
or
cmp
pop
push
xchg
lret
mov
cmp
fucomi
sbb
inc
adc
fcmove
notb
lret
push
ret
dec
mov
push
add
xchg
cmc
call
dec
and
sbb
mov
fwait
adc
pop
sahf
mov
push
push
ss
aas
enter
adc
sub
or
cmp
add
fwait
push
mov
pushf
xchg
sbbl
xchg
lods
add
add
add
and
jae
adc
pop
mov
into
test
mov
lcall
push
sbb
cs
xchg
inc
je
stc
dec
jbe
insb
int3
insl
cltd
jg
notb
push
ret
cmp
mov
in
dec
dec
push
sbb
jb
test
and
out
negb
add
fs
add
inc
dec
into
clc
into
icebp
cmp
add
cmc
sbb
jg
adc
scas
cmc
stc
mov
inc
adc
sbb
cs
daa
add
xor
shufps
pop
out
das
rolb
outsb
loopne
popf
daa
add
call
call
dec
rorl
flds
sbb
stos
pop
loopne
sahf
addb
notb
jmp
je
xchg
sahf
out
and
cmp
push
push
imul
cmp
adc
subb
mov
push
mov
clc
push
push
and
xor
add
iret
aas
test
dec
rorl
repz
dec
sbb
fsubrl
jo
push
jae
xor
fsubl
mov
stc
faddl
iret
and
js
push
sub
or
int3
nop
stc
mov
cmp
call
insl
icebp
jle
xchg
mov
stc
aas
cmp
orl
in
pop
cmpsl
hlt
mov
xchg
cmp
sub
test
out
xchg
test
push
jnp
pusha
ret
pusha
repnz
sbb
jae
insl
adc
mov
test
popl
add
add
add
dec
and
lods
and
and
xchg
lods
inc
pusha
mov
add
lods
mov
push
jmp
adc
test
cltd
add
out
push
mov
adc
xchg
fxch
adc
mov
aas
adc
rorb
int3
nop
add
int3
xchg
push
push
mov
xlat
ret
fwait
or
sub
sbb
pop
xchg
orl
add
mov
xchg
cli
movntq
xlat
xchg
sbb
cli
mov
mov
inc
xchg
jae
mov
icebp
loope
mov
add
lahf
pop
ja
std
push
or
ljmp
call
ds
xchg
inc
cmpsb
arpl
dec
xchg
test
cmp
mov
mov
sub
sub
push
fnsave
inc
or
add
add
stos
xor
jbe
xchg
cli
cmp
xchg
inc
lea
das
cmc
popl
jo
out
xor
cmp
fwait
rcrl
mov
adc
sub
in
xor
insb
add
loop
insb
mov
mov
loope
out
stc
xchg
pop
lods
loop
jno
cmp
repz
pminub
imul
out
std
mov
mov
pop
or
mov
jp
fcoms
adc
nop
movups
pusha
xchg
outsb
leave
ficompl
lock
or
bound
sbb
mov
pop
shrb
xchg
test
adc
cmp
mov
jae
popa
aas
out
cmpsb
out
sahf
dec
cli
bound
mov
stos
test
add
add
jmp
in
mov
dec
bound
inc
dec
lods
in
lret
stc
stc
jmp
repnz
lock
mov
or
or
fimuls
test
sbb
pop
sarl
and
mov
dec
sar
inc
mov
jbe
mov
testl
push
xchg
je
into
sbb
sti
mov
dec
call
lds
push
test
add
pushf
sub
lcall
out
loope
testl
adc
cld
xor
adc
cmc
je
cli
test
call
fidivl
or
mov
add
or
inc
sub
sub
je
fstl
and
jno
and
into
inc
out
stos
les
hlt
gs
add
ds
xchg
xorl
jg
lret
sar
call
dec
fdivrl
flds
cmpsb
aad
gs
out
push
xchg
cli
ss
fimull
or
add
add
add
jecxz
adc
out
out
mov
jge
sub
outsl
sar
out
pop
or
idivl
call
push
mov
mov
mov
out
mov
pop
fistpll
out
lea
test
xor
cld
ffreep
dec
out
adc
mov
scas
adc
mov
int
cmp
mov
pop
out
mov
int
sbb
sub
test
lds
cli
stc
jmp
sbb
jg
xchg
sbbb
jp
dec
lcall
add
xchg
jmp
rorl
xchg
inc
push
sbb
add
out
cld
stc
jmp
mov
popl
jno
sti
stc
jbe
mov
outsb
and
push
test
sbb
mov
je
mov
dec
and
or
adc
fsubl
adc
addb
add
cmc
mov
mov
dec
adc
rorb
cld
pushf
mov
mov
add
add
out
sub
orl
cmp
dec
cmp
dec
mov
cmp
sbb
cmp
or
cmp
sbb
cmp
or
cmp
fstpt
cmp
mov
lret
adc
add
insb
fsincos
mov
std
out
xchg
cli
or
xchg
in
out
sahf
xchg
cli
cs
adc
cmc
cmpsl
cld
lret
pop
test
lea
xor
xor
xchg
push
std
dec
jmp
pop
mov
cmpb
adc
dec
mov
dec
sti
mov
orb
jl
pop
ret
pop
mov
out
push
std
loop
cmpb
in
test
nop
bound
flds
out
scas
adc
add
add
add
out
leave
mov
mov
fdivl
call
dec
call
addl
push
push
xchg
mov
clc
repnz
test
adc
and
mov
popf
push
clc
outsl
dec
jg
test
roll
xchg
jmp
mov
add
iret
xchg
stos
ret
iret
fs
add
add
aas
jmp
xchg
sub
cli
subl
or
mov
inc
mov
idivb
lods
and
test
mov
add
mov
add
push
out
and
and
test
jb
imull
int
add
jmp
cli
test
mov
add
add
bound
xchg
inc
cli
test
fidivl
rcrl
dec
dec
add
inc
dec
inc
mov
loope
mov
jge
adc
loope
je
imull
xchg
or
add
iret
inc
or
adc
mov
inc
in
inc
xchg
dec
mov
jae
adc
add
add
int3
jne
mov
add
idiv
adc
je
loop
ret
pop
divl
sbb
jge
xchg
add
call
popf
clc
call
int3
test
add
out
test
arpl
mov
sub
push
or
cmp
xchg
dec
insb
loop
dec
das
das
cmc
xor
add
push
cmp
arpl
int3
insl
nop
jge
lret
test
imul
add
jmp
out
mov
loop
lea
shll
popf
out
cli
mov
ljmp
push
or
sub
jmp
and
in
adc
mov
shl
dec
add
cld
xchg
cmp
sbb
pop
dec
mov
negb
insb
push
cli
hlt
out
negl
add
adc
hlt
cld
imul
out
jns
insb
les
popl
stc
stos
mov
call
mov
mov
clc
pop
mov
filds
or
add
jns
sub
mov
sub
add
add
add
or
adc
inc
mov
add
inc
in
xchg
inc
in
clc
int
mov
ss
mov
push
adc
xabort
bound
jge
push
outsb
jge
mov
jnp
imul
je
mov
sub
jmp
xor
jne
push
nop
in
jmp
dec
sti
sub
stc
push
xchg
jmp
jl
imulb
test
inc
into
std
dec
js
cmpl
in
mov
lea
dec
ret
insl
call
aad
and
leave
lret
je
fcoml
add
xchg
cli
jne
dec
push
decl
ja
inc
sbb
je
jb
jle
add
inc
add
mov
daa
fisttpll
or
sbb
std
call
and
dec
add
cmovs
lcall
bound
dec
and
push
mov
into
push
stc
pushl
rorl
dec
call
sti
mov
test
jg
enter
fnstcw
xchg
iret
das
ljmp
stos
in
ja
push
sarb
bound
add
in
leave
push
jp
sub
add
stc
add
mov
dec
add
aad
jne
es
out
imul
cltd
test
std
pushl
jb
cli
sub
jp
rorl
fimull
repnz
mov
outsb
inc
cltd
or
icebp
mov
imulb
nop
mov
test
xor
xchg
mov
add
add
add
mov
icebp
jp
add
adc
in
ffreep
or
int3
add
xchg
pop
pop
inc
shll
gs
ljmp
js
stos
fbstp
gs
aaa
cmpsl
dec
out
testb
fwait
adc
cli
mov
lret
fistpll
lcall
xor
stc
sbb
sarl
add
fwait
rcr
testb
out
jns
scas
das
cmc
je
pop
call
sub
bound
pop
test
out
stc
hlt
and
pop
movsl
aas
jnp
jb
call
jge
lock
idiv
bound
pop
pop
loope
fnstenv
dec
dec
mov
add
movsl
cli
push
cmp
mov
xor
loop
jno
negl
insl
mov
add
lahf
cld
xor
stc
test
das
out
mov
movsb
mov
or
out
sub
test
mov
mov
inc
cs
add
push
cli
gs
hlt
je
sbb
lahf
shlb
cmp
out
shlb
push
dec
push
mov
inc
or
scas
add
call
mov
idiv
push
shrl
push
scas
cld
xor
jmp
mov
roll
cli
sub
xchg
fstpt
notb
dec
popf
es
stc
mov
mov
jecxz
mov
clc
std
test
jl
jae
test
enter
cmc
test
jge
mov
mov
add
add
add
dec
sub
xor
clc
mov
xchg
stc
mov
out
jnp
mov
mov
mov
out
push
adc
rcl
test
adc
std
daa
test
mov
adc
shrl
mov
and
subb
cmpb
jge
sbb
mov
rclb
inc
ret
xor
adc
cmp
ret
mov
aam
mov
in
sbb
call
fwait
cmpsl
punpcklwd
jg
mov
inc
std
jne
xchg
push
adc
scas
and
aas
ja
pop
imul
je
aaa
aad
in
test
ret
xor
jmp
or
mov
out
fisubrs
sub
in
cmp
jmp
fwait
call
js
xor
fnstsw
popa
add
sbb
sti
sahf
fwait
adc
sbb
mov
shrb
iret
adc
data16
mov
xlat
testl
lcall
nop
je
cmp
outsb
push
mov
add
add
int
decl
imul
in
nop
out
decl
sub
dec
dec
mov
sbb
push
mov
cld
adc
fsubr
jns
pop
popl
decl
and
xchg
add
sbb
push
mov
add
add
mov
lahf
and
mov
popf
mov
incb
add
add
jge
mov
jns
mov
std
mov
call
add
sub
and
std
leave
dec
pop
inc
and
pop
inc
and
insl
cld
xchg
cld
jbe
mov
andb
lretw
cmp
je
stc
jns
mov
std
jg
clc
jb
xchg
pushf
dec
mov
mov
pushf
cwtl
inc
cmp
incl
inc
movsb
mov
std
out
push
test
cmp
out
inc
test
adc
add
jmp
lock
sub
inc
push
add
jp
lods
fistps
jmp
fs
mov
out
xor
sub
mov
mov
sti
ss
xlat
js
mov
fdiv
mov
orb
outsb
fcom
mov
pop
push
popf
subb
clc
mov
push
or
dec
arpl
mov
mov
mov
dec
cmp
imul
enter
andb
add
out
lds
out
fst
xchg
add
cmp
mov
mov
lea
add
mov
je
xor
add
cmpsl
adc
mov
repnz
add
fldl
add
mov
je
xor
jmp
mov
mov
ret
je
rcrl
or
xchg
inc
or
popf
pop
call
loop
lods
adc
cmp
adc
lock
sbb
pop
or
sbb
adc
add
jns
rolb
incl
add
add
sbb
push
dec
sbb
sbb
mov
push
push
notb
sbb
and
push
mov
int3
mov
mov
roll
pushf
xchg
cmc
jne
add
xor
add
mov
mov
out
adc
addl
imul
add
mov
mov
mov
mov
inc
add
add
mov
nop
and
stc
std
cmp
sub
sub
into
xchg
push
popf
xor
lahf
clc
imul
loope
sbb
lea
popa
std
push
mov
push
sti
jecxz
enter
pop
push
fwait
in
out
icebp
jg
xor
inc
in
jge
mov
lods
sub
cltd
mov
or
add
add
jp
dec
shrl
data16
je
xchg
dec
push
xchg
jmp
push
out
mov
into
dec
mov
mov
jmp
pop
fcomp
or
iret
pop
mov
jnp
xor
imul
sbbb
inc
arpl
add
jns
stos
jecxz
pop
sbb
inc
mov
add
popa
jmp
add
sbb
aam
pop
or
ljmp
sub
int
or
testl
gs
pusha
pop
popf
inc
in
iret
icebp
mov
and
jmp
movsl
xchg
push
push
mov
jmp
clc
data16
or
call
mov
data16
mov
push
jmp
pop
mov
inc
leave
xchg
xorl
mov
adc
jge
je
sub
cmp
mov
mov
das
hlt
in
das
push
add
mov
insl
out
cmp
pusha
jge
inc
add
push
add
test
out
addl
addr16
aaa
mov
dec
or
jl
inc
and
or
or
inc
sldt
add
repz
in
xchg
or
cmpsb
fmuls
mov
ficoms
add
xchg
push
lea
test
out
movsl
testb
xor
jae
cmp
or
addl
add
mov
add
repz
mov
mov
in
cs
stos
or
jae
or
jae
add
out
je
lahf
mov
call
sub
mov
mov
test
mov
and
push
out
leave
aas
add
cmpb
inc
stc
ja
shlb
sahf
sar
enter
mov
mov
aas
xor
or
jp
stos
cltd
inc
mov
add
add
pop
aad
jbe
pop
sarl
notl
test
rol
cmp
mov
cmp
pop
xchg
jbe
xchg
push
inc
mov
xchg
out
sti
into
push
push
pusha
xchg
insb
leave
mov
loope
push
adc
jl
xchg
pop
cld
mov
negl
or
mov
mov
add
add
stos
jecxz
hlt
xchg
jbe
cmp
out
call
data16
in
rorb
out
inc
mov
bound
shl
stc
xchg
popl
mov
pandn
mov
nop
add
test
mov
jge
or
jb
test
sub
mov
rclb
add
add
test
scas
imul
add
repnz
mov
add
sbb
stc
xor
testl
scas
scas
xchg
mov
mov
rolb
fnsave
sarl
add
pushf
nop
iret
in
add
mov
cmp
loope
xchg
iret
lds
or
cmp
loope
xchg
iret
xchg
mov
or
add
cmp
loope
xchg
iret
xchg
mov
jnp
scas
cmp
loope
nop
iret
inc
mov
adc
scas
cmp
loope
mov
and
lgs
inc
in
leave
dec
rclb
adc
ds
or
xchg
sbb
loopne
icebp
dec
popa
cmp
sbb
outsb
movsl
daa
xchg
mov
jae
pop
bound
call
jl,pn
mov
sti
jbe
or
add
mov
call
cmp
xchg
fadds
idivl
push
cmp
push
dec
lock
lods
fldcw
enter
cmc
fs
es
adc
mov
mov
je
in
and
add
add
pop
jecxz
add
dec
add
jmp
scas
ficomps
test
cmc
insb
inc
roll
js
in
out
mov
dec
out
hlt
cmp
inc
mov
xor
push
adc
addr16
ret
repnz
repnz
je
movsb
fs
jns
jecxz
mov
cmp
int
add
mov
adc
jae
xor
movsl
cmp
test
adc
movsb
dec
add
call
xchg
lea
stos
mov
push
jb
pop
in
icebp
xchg
shrl
aad
pop
jge
aam
addb
ficoml
cmp
jno
adc
push
add
jne
mov
shl
stos
rolb
add
add
fidivl
stos
push
call
mov
mov
add
jae
js
or
add
mov
push
dec
pop
inc
call
aam
adc
pushf
sar
test
filds
inc
mov
mov
jmp
jle
add
push
push
leave
push
fdivr
push
xlat
je
push
scas
push
inc
clc
pushf
jmp
sar
or
add
mov
decl
inc
add
shlb
fcomip
decl
mov
adc
iret
stc
xorb
sar
test
mov
out
out
xchg
jmp
dec
mov
loopne
je
mov
jne
aaa
sti
lret
jo
sub
ss
and
jmp
jae
push
in
pmaddwd
cmp
jns
sbb
scas
mov
push
cmp
mov
mov
je
add
jne
mov
mov
inc
mov
dec
rcrl
push
add
jecxz
ret
lret
xchg
mov
out
cli
arpl
in
fimull
test
add
dec
out
pop
arpl
xchg
fdivrl
jg
fs
jne
es
iret
mov
or
int3
orb
xor
fnstsw
fs
testb
test
jmp
jno
sub
mov
pop
mov
mov
add
and
or
jge
dec
stc
fdivrl
popl
add
mov
adc
neg
test
lret
mov
or
jae
push
sub
adc
fwait
jmp
inc
jmp
fcmovbe
shlb
fucom
jmp
iret
pop
mov
test
cmp
in
sbb
or
bound
mov
mov
call
push
test
std
xchg
mov
add
add
push
add
jp
or
mov
sbb
or
jne
xor
jnp
divb
pop
jmp
call
inc
push
pop
into
ja
push
daa
jo
in
xor
sub
xor
xchg
pop
jl
jnp
cmp
sbb
xchg
test
stc
decl
mov
mov
popl
add
add
jno
fcoml
sar
bound
in
pop
cmp
std
pushl
pop
std
pushl
jae
testl
in
jl
lret
rcrl
xlat
popa
sub
push
jo
dec
mov
int
cmc
call
inc
or
test
add
orb
fildl
add
add
arpl
xchg
add
stc
jbe
mov
call
std
add
popf
xlat
push
in
outsl
je
adc
add
cmc
pushf
push
sti
test
xchg
iret
cmc
ret
adc
mov
pop
cmp
jnp
ffreep
out
ljmp
xlat
into
fdivl
jl
adc
mov
xor
shr
shr
add
dec
jecxz
cmp
inc
es
mov
xchg
loop
push
pop
out
mov
push
or
lcall
jg
frstor
pop
adc
pop
jmp
leave
xchg
adc
movb
fcomi
aad
and
out
fnstenv
mov
test
ljmp
jp
std
jg
fsts
jecxz
stc
aam
jp
jmp
inc
fsts
out
add
insl
jmp
mov
stc
ss
adc
sub
push
cmc
test
subl
orl
jmp
push
mov
or
das
sub
push
in
push
mov
push
pop
sub
cld
add
dec
push
hlt
pusha
push
or
lcall
test
popa
push
scas
std
xor
decl
aad
inc
fmull
test
push
add
push
lret
stc
dec
je
lock
jae
mov
stc
stc
decl
test
call
je
push
inc
loope
pop
testb
add
leave
sbb
pushl
popa
fdivl
mov
add
adc
jno
jl
jge
sbb
cmp
cld
add
mov
adc
mov
mov
std
jmp
fadds
xor
into
cli
test
adc
mov
inc
or
test
mov
dec
rorb
fs
cmc
xchg
jb
mov
xor
inc
inc
cmp
enter
std
decl
jo
pop
nop
fimull
rorb
xchg
aad
insl
ljmp
inc
mov
jns
adc
addr16
add
pop
insb
jl
push
jne
dec
mov
pop
mov
pop
and
xchg
or
clc
stos
rcr
cmp
aas
mov
stc
shll
jle
insb
sub
jns
or
mov
jp
out
and
out
mov
imul
movsb
pop
inc
push
rorb
inc
in
push
jmp
mov
or
cmp
add
dec
mull
or
push
add
dec
mov
stc
xchg
push
add
sbb
mov
stc
pop
out
inc
in
dec
cld
bound
sbb
mov
push
cld
insb
adc
imul
shrb
adc
stc
add
push
add
jp
push
lea
loope
hlt
ljmp
stc
dec
imul
mov
mov
add
pop
mov
testb
dec
add
cmp
add
pushl
fs
ror
stc
adcb
sbb
lea
dec
mov
dec
call
inc
xor
add
fs
dec
dec
std
pushl
pop
jnp
data16
mov
rclb
push
cmc
mov
ficoms
ret
xorl
sti
enter
cmp
insb
cli
test
push
leave
mov
std
cli
test
jnp
or
pop
incl
xor
push
bound
mov
xor
xor
lcall
std
push
cmp
xlat
mov
inc
inc
arpl
jnp
sub
mov
mov
push
stc
shl
aad
mov
and
mov
decl
xchg
into
or
sbb
mov
out
icebp
fistps
out
mov
iret
outsb
insb
cmp
pop
pminsw
shrl
iret
ret
sbb
fnsave
sbb
jl
psubsw
mov
and
cld
test
cld
sti
jp
cmpsl
pop
add
push
into
inc
repz
into
aam
jae
out
add
adc
stc
dec
rorb
lahf
int3
add
clc
push
das
sub
xor
xchg
add
dec
in
in
mov
push
pop
lcall
mov
pop
lds
leave
xchg
dec
xchg
jge
popf
mov
jmp
sarl
cltd
push
aad
mov
or
xchg
dec
sbb
cmp
sbb
xchg
ds
cltd
test
aaa
jmp
mov
stc
insl
jbe
push
adc
dec
cmp
or
addb
or
cmc
je
vpminsw
sub
jmp
jmp
call
add
testb
idiv
mulb
push
push
repz
dec
push
int3
xchg
sub
dec
add
lods
push
sar
imul
jp
clc
pushf
add
dec
mov
add
cwtl
cmc
je
mov
call
jmp
scas
js
fnstcw
popa
xchg
xchg
clc
cli
jecxz
outsl
stc
nop
jge
out
add
add
and
adc
xor
pop
or
jbe
add
incl
ja,pn
inc
inc
cmc
out
mov
cli
xor
call
inc
jne
push
sub
popf
or
mov
bound
movsl
popa
adc
mov
or
mov
or
orb
cmp
add
mov
add
pop
lods
push
cli
mulb
out
addr16
call
xchg
je
push
out
mov
mov
pop
fcmovbe
fidivs
jae
mov
out
fstpt
aam
les
xorb
add
jb
mov
imul
lods
jge
pop
lcall
std
loopne
rcrb
cmpsl
mov
sub
js
push
add
jns
and
add
pop
stc
aam
popf
inc
jmp
jno
push
push
mov
enter
push
clc
jb
xchg
xchg
pushf
inc
jmp
std
pop
or
mov
aaa
xor
in
jle
aad
rol
cs
dec
lret
jle
roll
jae
sub
adc
pop
or
repz
arpl
sahf
test
pop
data16
aad
push
in
leave
mov
pop
mov
cld
incl
push
pop
push
mov
push
daa
loope
sbb
cmp
mov
sbb
adc
inc
pusha
js
or
add
add
mov
mov
enter
inc
insl
and
dec
mov
dec
pop
leave
adc
xchg
cmp
sbb
mov
adc
icebp
clc
or
sbb
pop
jne
or
mov
ljmp
clc
enter
push
imul
cmpsl
jbe
cs
pop
ds
subl
idiv
jle
mov
mov
mov
std
out
mov
xchg
sbb
enter
scas
pop
jae
mov
xchg
and
mov
jns
xor
aas
fbstp
pop
adc
sarb
ss
test
mov
add
scas
out
push
lods
out
jmp
rclb
cmp
add
push
and
cltd
adc
imul
push
jb
mov
jg
inc
mov
cmp
jmp
nop
out
sbb
rol
adcb
setb
fists
stc
pop
bound
pushf
daa
test
or
imul
add
ret
pop
iret
sbb
add
add
lds
mov
cmpsb
add
imul
lock
call
push
and
mov
add
dec
stos
cld
jl
or
add
mov
out
mov
inc
jmp
cmp
jge
scas
stc
mov
lret
addl
push
jb
pop
push
fimull
push
mov
lds
sbb
stc
xchg
aad
pushf
filds
add
add
ss
pop
lea
add
jne
ret
push
add
cli
aaa
inc
das
cmp
xor
push
loop
scas
xor
mov
sbb
leave
xchg
dec
ljmp
push
leave
mov
push
push
push
push
push
push
dec
cmp
xchg
adc
push
ret
add
push
sarl
aaa
jne
fmulp
cmp
insl
into
sub
add
dec
push
es
cmc
jne
gs
push
stc
test
inc
cld
mov
pop
push
lods
shll
inc
mov
movsb
test
add
jg
ljmp
cmp
or
out
repnz
mov
gs
dec
mov
das
xlat
repz
add
int
xor
mov
inc
out
push
pop
cli
sbb
pop
pop
daa
jmp
inc
je
xchg
sti
mov
sti
and
repnz
cli
enter
mov
rorl
jmp
xchg
mov
shrl
loop
pop
mov
jmp
adcb
cmp
loop
into
divl
mov
andb
mov
add
add
mov
add
and
push
ljmp
inc
sub
adc
pop
add
mov
outsb
push
cmp
sarl
pop
cmp
mov
inc
imul
adc
dec
or
push
nop
jae
xor
in
adcl
jg
rorb
mov
add
sub
pop
jge
inc
loope
ret
cli
jns
nop
add
sahf
cwtl
mov
push
cmp
stos
rorl
sbb
or
push
cmp
call
sysenter
mov
add
mov
pop
in
mov
stc
dec
pop
dec
das
cmp
idivl
call
ret
stc
bound
sub
mov
rol
add
add
bound
add
jne
lods
xor
pop
or
mov
fidivrl
fs
insl
je
stc
add
dec
std
mov
popf
adc
dec
push
insl
push
push
stc
cmc
cmp
fisttpl
mov
mov
outsb
mov
mov
pop
fcomps
aad
mov
add
xchg
nop
mulb
push
pop
dec
std
dec
scas
push
arpl
fwait
pop
rolb
mov
add
adc
in
or
int
pop
cli
das
in
or
mov
inc
pop
mov
mov
or
push
dec
movsb
or
arpl
cmp
push
repnz
aas
mov
insb
ljmp
add
add
mov
int3
jae
outsb
int3
jae
outsb
int3
jae
xor
adc
mov
add
mov
scas
cmp
movsl
insb
push
je
push
call
mov
xchg
or
int3
call
orl
dec
pop
shl
mov
mov
jg
shrb
dec
notl
jmp
push
pop
lret
mov
add
push
out
inc
or
or
push
inc
out
xor
inc
mov
dec
push
mov
in
orb
adc
or
xchg
lcall
imul
call
shlb
xchg
add
push
movsb
push
outsb
stc
xchg
lock
jmp
mov
lock
ret
stc
aam
add
add
mov
jge
mov
push
add
pop
or
cmp
icebp
inc
or
push
in
xchg
scas
xor
mov
jmp
or
sbb
jle
movb
and
data16
leave
fs
inc
adc
fiadds
add
pop
sbbb
jge
ret
in
sbb
dec
rclb
adc
jne
ret
mov
notb
jp
std
inc
cmp
inc
lock
std
cmc
lea
or
xchg
in
mov
xchg
jmp
sbb
mov
int3
add
stos
std
push
xor
leave
std
xor
add
mov
mov
add
add
gs
sbb
int3
xchg
sub
sub
in
push
mov
mov
mov
in
dec
xchg
mov
xlat
mov
sub
gs
insb
mov
inc
int3
mov
and
push
cli
xor
test
jmp
push
xchg
aad
out
or
iret
sub
repnz
test
add
mov
pop
or
xlat
fstp
xor
lret
out
int
dec
cld
mov
cltd
push
je
dec
xor
pop
and
mov
sahf
push
push
cmp
out
in
pop
fnstcw
mov
out
add
jge
in
or
insb
mov
iret
ljmp
lcall
xor
jmp
or
add
mov
insb
inc
xchg
mov
add
mov
fs
scas
adc
mov
pop
addb
mov
insl
testb
iret
aaa
cld
xor
add
mov
mov
sub
stc
cs
inc
adc
fldl
add
add
mov
mov
mov
int
addb
sub
cli
or
popl
jmp
inc
nop
add
xor
cli
mov
icebp
mov
jnp
pusha
cli
cmpsb
xorl
stc
pop
dec
popl
jmp
popf
add
xor
popa
imul
xchg
lea
add
mov
add
or
mov
add
sti
or
xchg
stos
sti
movups
pop
test
lea
dec
dec
lea
push
dec
jmp
cmovo
xor
idiv
mov
movsbl
adc
call
xchg
fstps
lea
in
cmp
mov
fmull
cli
push
push
out
pushl
add
add
rorb
mov
mov
jp
stos
sub
jmp
push
cli
ret
mov
movsl
mov
sub
jle,pt
lret
leave
push
sahf
fs
dec
mov
mov
ss
mov
scas
int
jae
fnstsw
je
cmp
stos
cli
gs
pushl
ficompl
xor
jb
inc
lods
cmp
mov
mov
push
loopne
jmp
outsb
leave
mov
inc
mov
xlat
xchg
push
mov
xor
cld
fcmovnb
cld
cli
xor
pop
mov
inc
push
mov
je
aas
sti
xchg
xor
pushf
jle
or
dec
xor
mov
push
es
divb
pop
dec
push
add
add
add
inc
out
jle
add
pop
cmp
ret
cmp
xchg
fidivrl
idivl
mov
mov
mov
add
arpl
jo
imul
xchg
cmp
bound
mov
in
xor
add
call
je
jae
push
sbb
iret
pop
bound
pop
test
add
add
inc
push
sahf
jmp
test
pop
mov
arpl
or
add
or
jge
push
jae
cmp
pop
mov
inc
fnstsw
roll
loop
dec
into
or
push
add
mov
xor
add
fadds
mov
mov
leave
mov
mov
hlt
std
xor
test
test
bound
lret
loopne
mov
mov
push
out
jae
decl
dec
je
dec
pop
icebp
repz
mov
arpl
mov
push
pop
pop
jns
add
std
sub
das
add
push
xchg
bound
je
cmp
add
add
dec
lods
cmp
repz
add
cltd
mov
js
mov
xchg
test
rcll
int
aas
cld
mov
jmp
jmp
mov
lret
pop
mov
inc
andl
jl
in
cmp
ficompl
inc
adc
int3
jl
movsl
loope
jae
push
movsl
sub
xor
add
in
sbb
add
and
adc
fmull
or
pop
gs
dec
cmp
scas
mov
inc
mov
adc
jbe
sti
adc
pusha
add
imul
mov
mov
out
adc
and
mov
jo
lahf
pusha
mov
fwait
and
test
jp
xchg
pop
push
xlat
add
psubsb
mov
call
daa
lea
leave
scas
sub
fnstenv
es
pop
movb
jae
icebp
orl
push
mov
call
jb
xor
call
bound
es
and
scas
outsb
sbb
xchg
jae
jge
mov
jle
mov
add
push
jbe
movaps
mov
sub
add
add
aaa
and
jbe
clc
dec
pop
mov
cmpb
and
cs
mov
mov
sub
in
out
jmp
add
lock
push
shrb
std
out
arpl
pushl
loop
sbb
mov
sbb
or
cs
je
jb
jl
mov
add
add
cli
ret
add
pushf
fistl
adc
sbb
xor
bnd
mov
mov
mov
push
add
mov
and
subb
push
add
add
pop
ret
stc
sub
js
lds
std
xchg
js
sarl
pop
pop
sub
std
out
loopne
cli
loop
sub
int
dec
cld
rcl
cmp
jmp
jne
xlat
imul
push
push
xchg
dec
xchg
cmp
rcrb
std
decl
sub
jae
fdivr
cli
loopne
push
cmpl
dec
ljmp
push
nop
insb
dec
rorl
add
adc
mov
cltd
mov
dec
sti
ja
xorl
mov
ror
push
mov
addb
dec
lret
add
cld
pop
mov
mov
iret
cltd
xor
mov
popa
mov
mov
pop
or
pop
xchg
loope
dec
rclb
cmp
jp
ror
jle
xor
or
mov
pop
in
call
mov
notl
mov
xchg
fnsave
mov
add
stc
insl
icebp
cmp
push
mov
popf
lahf
push
jl
mov
outsb
stc
je
test
stc
insl
mov
stc
xor
dec
cld
jb
mov
les
test
xor
pop
seto
add
dec
dec
cld
jo
mov
jg
scas
cli
cmp
nop
add
sbb
jg
jmp
out
add
add
inc
or
ljmp
mov
xchg
add
xlat
test
addl
iret
jno
xor
stc
pop
mov
xchg
push
ret
push
mov
adc
clc
sbb
add
loopne
inc
xor
mov
cmp
pop
testb
add
add
pop
stc
mov
push
inc
int3
int3
sub
add
into
incb
pop
or
adc
xchg
es
popf
xchg
add
pop
inc
stc
pop
pop
and
clc
std
mov
je
inc
pop
and
inc
popa
xor
incb
add
dec
add
mov
pushf
mov
js
mov
mov
lods
dec
lcall
movsl
iret
add
add
add
repnz
add
aam
aas
mov
cmp
movl
mov
pop
add
lcall
sti
mov
into
aas
stos
xchg
sub
in
ss
std
or
nop
and
inc
adc
jmp
stc
test
pop
es
out
fildl
xor
and
jl
add
add
mov
push
mov
and
outsb
push
sbb
loop
cmp
mov
cmp
jp
sbb
mov
adc
leave
out
lods
fisubrl
adc
shll
inc
xchg
mov
movsb
scas
ljmp
outsb
rorl
adc
mov
bound
sarl
dec
mov
nop
gs
mov
jp
xor
stc
repnz
cltd
out
sub
cmc
aaa
rorb
lock
cli
push
adc
mov
cmc
jnp
stc
xchg
test
stc
out
into
call
insl
jbe
dec
aaa
mov
cmpsl
jnp
shll
add
adc
scas
mov
jmp
ret
xchg
data16
sub
sub
test
jmp
add
xchg
mov
idiv
jb
mov
mov
aas
pop
mov
sti
pop
es
call
pop
es
lock
es
gs
xchg
cmp
sub
cltd
out
push
and
sub
adc
or
jae
lods
arpl
ret
push
dec
sub
ljmp
lret
push
cmpsb
mov
out
ljmp
movsb
cmp
xchg
mov
pushl
adc
iret
xorl
inc
test
cmp
int3
test
loopne
pop
mov
in
cmp
jns
jecxz
sti
dec
or
mov
jb
stc
out
inc
or
test
leave
pop
ds
ljmp
lods
xor
imul
js
addb
inc
aad
addb
jl
mov
inc
cli
cs
sub
xor
adc
cmp
data16
out
cmp
enter
pop
inc
je
and
mov
call
add
rcl
jmp
scas
loope
or
call
andb
loopne
mov
pop
mov
xor
insb
inc
cmpsb
sub
arpl
add
adc
in
out
jae
call
or
movsb
test
call
in
push
test
and
mov
jbe
dec
divl
jle
lds
inc
push
mov
arpl
lds
jnp
movsl
stc
fs
aam
sbb
cmpsb
stc
xchg
inc
sub
mov
pop
call
outsl
cmp
or
jbe
mov
popl
jmp
and
in
cmpsb
pop
cmpsl
jae
test
cmp
test
mov
jmp
cmp
and
sbb
mov
add
stos
mov
rol
cltd
jae
add
mov
movsb
scas
sar
mov
arpl
mov
mov
add
xchg
addl
enter
add
dec
add
inc
inc
sbb
dec
xchg
xchg
adc
add
add
mov
inc
mov
add
loopne
add
add
push
inc
add
mov
test
mov
add
jo
or
pop
lea
cmpsb
jle
lds
xor
popa
ss
jne
pop
shl
mov
fs
mov
std
mov
jle
xchg
aas
push
lds
jae
cmp
stc
mov
mov
mov
add
add
mov
mov
jo,pt
call
mov
mov
mov
or
mov
cs
sub
mov
aas
mov
aam
sub
jbe
mov
out
test
mov
out
sub
out
lods
bound
jmp
enter
mov
movsl
addl
add
stc
movsl
out
mov
push
lods
xor
dec
pop
cmpsb
lods
inc
shlb
cmp
aas
movsl
addr16
cmp
xchg
aam
je
lret
movsl
push
out
xchg
and
add
xor
je
mov
mov
test
add
das
push
clc
push
or
shrb
in
in
push
lock
jmp
push
cmpsb
int3
rorl
sub
dec
clc
shlb
cmp
call
lret
test
dec
call
sahf
test
add
jl
in
push
jl
xchg
aas
pushf
test
xor
add
popl
arpl
xchg
inc
push
inc
lcall
nop
push
mov
add
add
jle
add
push
add
popl
punpckldq
stc
fcompl
jg
int
add
and
jne
adc
dec
pop
int
test
push
mov
inc
add
dec
je
pop
int
mov
pop
test
xorb
hlt
iret
dec
maskmovq
negl
clc
or
lea
mov
xor
mov
add
cs
jae
mov
xor
add
sbb
xchg
int
dec
cli
rcrb
mov
add
adc
js
xchg
std
sub
insl
stc
cmp
mov
leave
divl
int3
test
das
jae
xor
add
mov
sub
shlb
mov
add
insl
xor
adc
lock
mov
out
pop
mov
cmp
jb
cmp
lahf
loop
ss
push
or
push
cmpsl
sub
mov
add
mov
fdiv
push
jge
adc
mov
xor
add
pop
xlat
mov
out
cmp
adc
cmp
ret
lsl
cmp
mov
out
insl
sbb
jl
mov
xchg
mov
mov
mov
mov
jmp
mulb
popa
call
pop
nop
add
mov
nop
mov
dec
cmp
mov
mov
dec
sbb
add
add
sub
pop
pop
call
out
movsl
push
insb
ja
call
bound
cmpl
mov
add
xchg
fwait
mov
popl
pusha
aas
cmp
call
adc
addb
xchg
mov
or
push
mov
adc
incl
add
add
dec
std
decl
stc
call
or
sbb
push
hlt
dec
loope
repz
push
lcall
inc
pushf
or
pop
pop
mov
add
push
std
dec
jns
cmp
mov
xchg
xchg
add
mov
stc
xchg
addl
xor
cli
mulb
std
insl
pop
and
lahf
call
add
mov
rorl
pop
leave
add
movsb
aaa
xchg
or
inc
jae
pop
aaa
adc
lcall
mov
int
jmp
jg
mov
std
dec
mov
cmp
ret
lcall
out
jmp
int
xor
incl
add
add
out
stc
xchg
pop
movups
scas
add
sahf
mov
xor
aas
sub
test
add
inc
pop
jno
nop
out
or
adc
mov
or
jp
cld
inc
lds
mov
aaa
call
mov
nop
out
mov
add
add
daa
add
push
lcall
cmpl
cmc
insl
mov
xor
and
inc
push
jb
lea
les
clc
pop
xor
call
jge
jle
xor
inc
xor
negb
rorb
and
cmp
call
inc
xchg
andl
dec
aaa
xor
add
add
mov
ret
mov
mov
in
inc
stc
faddl
rorb
stc
and
jb
inc
call
fstps
add
orb
jnp
pop
nop
add
adc
mov
fisttpll
pop
pop
nop
add
adc
dec
in
decb
shlb
add
add
sar
mov
push
pop
aad
std
jmp
or
subl
mov
gs
test
fdivrp
xor
addb
jns
fmull
inc
lcall
loope
push
aaa
mov
cwtl
xchg
mov
cs
addl
xchg
and
test
jle
xor
mov
inc
xchg
mov
xor
sbb
adc
je
popa
mov
sbb
push
sub
xchg
call
cmp
cli
mov
fwait
ret
ljmp
negl
add
frstor
cld
ret
cmp
test
loope
pop
push
lock
mov
cmp
mov
mov
adc
add
cli
inc
pop
mov
push
mov
add
dec
fisttps
pop
lcall
rorl
add
insb
mov
cs
mov
andb
cmpsl
mov
and
mov
xchg
add
xchg
test
loopne
out
pusha
xchg
data16
into
cltd
mov
stc
cmc
and
mov
push
mov
mov
ror
stc
scas
sub
enter
inc
test
jae
icebp
jb
mov
mov
mov
fstps
mov
mov
fisttpll
rolb
add
xor
jb
mov
mov
xchg
bound
mov
add
mov
or
call
jnp
add
add
aaa
lods
xchg
sbb
hlt
jmp
in
pushf
outsb
movsb
pop
pop
dec
fisttpll
test
addb
xchg
add
int3
inc
inc
sti
pushf
inc
inc
stc
lea
lock
int3
stc
test
inc
es
jno
pop
sbb
dec
push
test
xchg
add
rol
rcll
loope
jns
testb
clc
out
cmp
jns
notb
add
adc
adc
mov
pop
mov
je
jno
pop
addl
shl
outsl
pop
testb
js
xorb
jae
mov
sbb
addb
out
pop
sub
or
loop
repz
jne
ret
add
jecxz
push
shl
inc
add
sub
out
addb
cmp
std
jg
push
std
jae
sbb
cmp
std
pushl
and
stc
adc
sbbb
enter
popa
or
std
sub
dec
cs
sbb
sbb
xor
rorb
cmp
negb
push
lgs
add
add
cmpsl
aad
mov
cmpsl
sbb
and
add
cmpsl
jge
cmpsl
push
mov
xchg
pop
arpl
sub
mov
out
mov
out
lods
bound
jge
cmpsb
out
das
xchg
xor
test
out
jns
mov
or
mov
nop
add
rolb
mov
inc
flds
xchg
cs
xor
call
mov
add
mov
add
mov
lea
int3
inc
lcall
mov
add
mov
repz
push
ret
push
xchg
cs
lret
xlat
add
mov
inc
fnsave
add
orl
dec
clc
push
add
add
mov
nop
add
sahf
and
lds
dec
clc
pop
cmc
in
cmp
jp
adc
orl
and
sub
hlt
mov
mov
shll
or
jo,pn
pop
pop
mov
decl
jbe
adc
add
pop
testb
add
mov
dec
or
pop
mulb
loope
outsb
testb
add
adc
decb
jo
add
push
cmpsl
std
dec
jl
cli
fisubl
aaa
lret
xchg
jle
sarl
sbb
cli
mov
loop
lods
cmpsl
push
std
jae
add
add
xchg
lods
cli
jb
enter
cmp
pop
pop
lea
mov
sub
popa
push
rolb
mov
test
popf
idiv
jbe
ss
and
call
nop
mov
addr16
jg
add
jecxz
jne
je
xchg
aaa
bswap
and
bnd
ret
rolb
insb
call
gs
mov
add
insb
xchg
add
out
stos
sub
lock
call
cmp
lret
imul
xchg
sub
mov
mov
xchg
xchg
pop
enter
mov
or
sarb
jo
jecxz
add
jbe
pop
mov
push
xchg
addr16
orl
sbb
dec
push
test
cmc
dec
orb
push
xchg
int
jbe
cmc
dec
dec
and
ds
and
loope
inc
add
fcoms
add
mov
jge
lcall
gs
or
push
add
mov
mov
rolb
scas
xchg
stc
jmp
mov
add
mov
stc
cmp
add
add
or
or
mov
mov
xchg
enter
dec
add
add
adc
pop
lea
add
push
jle
fisttpll
jmp
loope
in
data16
nop
addl
jno
pop
pop
loop
pop
mov
loope
test
fiadds
mov
jae
xor
imul
xor
mov
add
cld
xchg
scas
xchg
es
mov
pushl
dec
and
add
xor
mov
std
ss
repz
xor
ljmp
mov
cwtl
sbb
mov
std
xor
add
mov
jns
mov
std
xchg
mov
add
add
add
icebp
ds
sub
cli
mov
jbe
rorl
or
add
jnp
inc
mov
or
add
sbb
out
mov
sbb
mov
out
lret
jg
out
xor
ret
cmpsl
push
cltd
sti
out
add
fld
loop
daa
cli
xor
add
add
add
xchg
pop
cmc
jge
add
mov
clc
dec
dec
arpl
fs
into
clc
ljmp
sbb
mov
xor
out
cmp
arpl
sub
add
xor
mov
cmc
mov
push
mov
mov
jmp
icebp
adc
fcoml
add
inc
xchg
add
stos
sbb
mov
and
mov
add
inc
mov
lds
xchg
add
pop
sbb
out
insb
and
sarl
cmp
scas
into
dec
hlt
into
fnsave
int
repnz
adc
mov
jmp
repnz
or
xchg
add
mov
xlat
call
mov
add
add
mov
outsl
fidivl
push
call
cmpsl
jge
adc
test
inc
add
sbb
not
sbb
pusha
insb
test
fcoml
call
mov
rorl
inc
fdivrl
and
aas
pusha
outsl
dec
pushl
push
and
aas
loopne
dec
incl
ds
test
ds
mov
inc
jo
dec
incl
add
add
jle
mov
add
mov
mov
inc
xchg
scas
sbb
push
add
jne
loopne
iret
xchg
sbb
mov
std
jle
fisubs
dec
mov
jg
adc
and
inc
cmc
gs
stos
and
inc
and
scas
pop
int
jo
shl
xor
ret
add
jae
insl
mov
mov
or
rcr
inc
mov
cmp
adc
sub
mov
add
mov
out
jne
adc
pop
push
mov
mov
mov
adc
loopne
decb
add
and
mov
aad
sbb
inc
xor
lret
fildl
pusha
push
cmp
gs
out
jg
lock
pop
push
sub
add
add
dec
incl
mov
outsb
push
out
jo
lret
jp
sbb
mov
xchg
pushf
mov
out
add
iret
add
mov
or
jo
mov
stos
in
into
and
pop
into
and
adc
and
pop
into
and
sbb
sbb
dec
adc
add
in
push
mov
add
icebp
sbb
add
inc
inc
jmp
adc
mov
fcoml
add
dec
or
mov
jmp
test
dec
test
pop
mov
add
mov
aaa
and
cli
push
pop
stos
enter
lcall
push
cmp
adc
dec
call
daa
int3
push
test
mov
add
lret
xor
add
add
loope
push
cmp
cmp
imul
cmp
add
mov
in
into
dec
push
je
idiv
jae
sti
xor
or
mov
jne
loopne
xchg
insl
add
out
mov
loopne
mov
mov
call
lods
loop
push
int
rorb
movl
adc
jnp
je
in
cli
and
add
xchg
ret
cmp
je
mov
mov
je
mov
ds
add
inc
mov
inc
mov
xchg
repz
or
cli
xor
lahf
lgs
lods
in
inc
dec
sbb
cli
test
idivl
mov
dec
or
sbb
dec
test
cmp
cmpl
xchg
divb
pop
mov
std
dec
imul
je
je
sahf
test
and
outsl
xchg
and
xchg
arpl
xchg
test
xor
add
ret
xchg
mov
clc
nop
xor
dec
loopne
clc
mov
repz
out
xor
int
xchg
mov
nop
xor
pavgb
ja
aaa
add
jne
out
and
adc
test
and
xchg
inc
out
add
cmp
lret
add
and
insb
adc
imul
test
popf
push
sbb
jecxz
xchg
cmp
sti
sahf
cmp
sti
or
bound
sub
loopne
jbe
push
or
add
icebp
jge
mov
xorl
call
jns
outsb
push
fs
cltd
call
pop
ret
or
sub
fcoml
lods
inc
fcoms
mov
daa
push
add
pop
pop
adc
roll
xchg
add
sbb
idiv
dec
xchg
add
adc
stc
cmp
call
pop
adc
adc
xorl
orl
add
dec
insl
xchg
xorl
push
mov
addl
sbb
and
xor
lds
mov
xchg
jmp
jae
insl
xchg
or
add
add
cmp
jns
dec
mov
pop
mov
mov
xchg
outsb
mov
jp
or
mov
std
mov
imul
std
bound
pop
js
mov
push
xchg
lgs
jmp
rclb
dec
and
mov
int
gs
mov
out
sbb
xor
pushf
pop
shlb
and
add
add
sbb
mov
into
stc
add
inc
jnp
cwtl
scas
test
int
push
scas
push
mov
cwtl
mov
call
xchg
xlat
push
cmpsl
rcll
adc
add
mov
mov
fwait
inc
mov
popf
xchg
mov
pop
xchg
mov
loop
add
jbe
mov
cld
ljmp
add
add
and
int
or
adcl
cs
xchg
add
xchg
dec
mov
inc
je
aaa
inc
cwtl
mov
clc
pusha
push
xchg
daa
lods
nop
mov
mov
mov
out
cmp
mov
test
bound
stc
sbb
ja
lahf
rolb
fldl
add
add
mov
jp
call
push
cmp
call
push
jae
int
test
add
or
dec
mov
divb
pushf
inc
push
leave
sahf
xchg
add
or
cld
inc
sbb
inc
dec
cmc
fcoms
mov
jmp
cmp
or
xor
movsb
insl
and
add
add
sbb
inc
movsb
xor
fwait
insl
sbb
sbb
incl
icebp
test
or
lcall
pop
push
xchg
add
mov
in
and
add
push
ds
add
pushl
into
arpl
repnz
out
xor
std
jmp
inc
adc
inc
mov
std
incl
add
add
jns
out
mov
ret
add
xor
ds
in
or
ret
fucomi
xchg
jb
mov
inc
les
mov
pop
add
xchg
out
sbb
fcomps
andb
std
int3
add
add
mov
popl
add
xchg
push
sbb
or
outsb
dec
adc
aaa
and
cmc
out
sbb
xor
mov
adc
loop
les
cld
inc
mov
out
mov
loop
std
xchg
pusha
lret
mov
fwait
jo
sahf
ret
jg
inc
xchg
xlat
out
mov
pop
nop
mov
pop
xchg
sbb
or
adc
add
add
dec
add
mov
or
test
mov
lret
out
xchg
test
inc
lret
decb
xchg
loopne
mov
into
stc
fdivr
mov
or
jne
jmp
cmp
or
jbe
fdivrl
jae
cmp
mov
test
or
rclb
je,pt
sbb
add
loope
jg
testb
outsb
insl
inc
sar
in
jnp
std
lcall
cmp
xchg
test
cltd
idiv
je
and
fwait
cwtl
je
dec
fsubrp
mov
lahf
idiv
mov
cwtl
test
inc
xchg
test
add
add
inc
adc
jns
ja
dec
call
jg
push
pop
enter
aas
arpl
push
into
std
cmp
mov
pop
mov
or
test
iret
gs
dec
das
ds
ljmp
jmp
jae
icebp
shll
lods
mov
ds
xchg
icebp
aas
out
ss
add
pushf
sbb
or
cld
lret
pop
imull
push
mov
int
std
incl
repnz
push
outsb
jg
stos
repnz
call
mov
and
xorl
ds
or
mov
sbb
pop
out
outsl
addr16
mov
xchg
pop
cmp
out
mov
cld
or
xchg
sbb
pop
sbb
fs
add
add
push
sub
mov
pop
cmp
xor
inc
adc
push
out
jnp
cltd
jl
aas
xor
pop
iret
xchg
out
mov
or
in
or
jnp
sub
mov
push
cmp
sti
fidivl
and
hlt
mov
testb
lea
outsl
adc
test
sub
dec
push
sahf
inc
fists
sub
add
add
cmp
or
call
insb
jbe
add
jnp
jmp
cmp
sbb
mov
mov
jae
pop
int
sub
sub
inc
int3
sub
aas
addr16
clc
xchg
test
jne
push
sahf
popa
jne
push
mov
mov
or
add
stc
bound
xchg
cmp
mov
ja
inc
test
dec
cmp
mov
rol
pop
ret
mov
in
jg
dec
mov
inc
cld
cmpsl
sahf
dec
fsts
call
mov
jp
sbb
mov
cld
sbb
movsb
jp
fdivr
mov
cld
addr16
add
lods
add
popl
adc
pop
in
push
inc
mov
add
in
dec
rol
int3
pusha
rol
int3
mov
xchg
in
stos
push
cs
addb
dec
jb
sbb
bound
out
xor
lods
sbb
imul
sub
sbb
aaa
adc
sub
ret
xor
xchg
pop
pop
mov
jno
inc
add
and
xchg
add
add
cmpsl
push
stmxcsr
orb
stc
lret
mov
jp
inc
pop
mov
ret
test
pop
mov
mov
les
cmpsb
jg
xchg
mov
out
mov
push
jg
fisubl
jg
or
add
loope
jg
or
xor
dec
stc
jnp
add
js
jg
add
add
add
cmp
push
jo
or
xor
outsl
adc
ja
dec
mov
das
jg
jnp
add
dec
xorl
mov
add
subb
sbb
adc
dec
jecxz
jb
add
xchg
cmp
dec
loopne
mov
mov
movsl
call
push
xchg
test
jecxz
cld
push
mov
mov
test
sahf
add
fbstp
movsb
cli
jle
cmc
in
mov
pop
pop
lods
mov
add
push
dec
outsl
pop
dec
cmpsl
jns
sub
std
jp
sub
or
pushf
mov
inc
sbb
cmpsl
jns
and
daa
dec
cmc
cltd
fnsave
test
and
dec
cwtl
inc
loope
imul
je
out
cmc
cltd
out
addb
out
or
rcr
sbb
icebp
pop
lds
mov
roll
inc
or
inc
mov
add
std
lcall
add
dec
lret
iret
iret
iret
kandw
in
cwtl
addr16
mov
add
add
jne
push
inc
push
add
mov
lcall
and
cli
stos
addr16
mov
jg
je
lock
out
adc
decl
daa
xchg
push
fisubl
xchg
inc
dec
or
cmp
and
xchg
stos
fldt
and
cmp
or
sub
outsb
lods
out
stos
repz
add
add
add
add
data16
mov
cmpb
imul
mov
fiadds
or
add
add
int3
addb
mov
pop
scas
jle
je
cmp
sarl
jg
xchg
bound
sub
xor
xor
test
lret
fistpll
jo
pop
push
add
jmp
or
cmp
scas
jmp
jg
cmp
mov
jbe
pop
mov
flds
inc
mov
add
or
cmp
push
xchg
push
fucomip
cmp
insl
mov
test
lds
insb
mov
in
jbe
push
xorb
movsb
or
dec
lea
dec
lds
repz
es
adc
mov
and
andb
loope
lea
xor
iret
test
pusha
in
outsb
add
fcompl
inc
popa
icebp
lret
lock
lods
stc
dec
ret
std
or
addr16
in
cmp
xchg
push
addb
idiv
push
aaa
cmc
push
es
cmc
adc
push
inc
fisttpll
imul
pop
ret
cmp
in
nop
imul
pop
add
push
stos
cmp
cltd
xchg
idiv
dec
mov
in
sbb
call
iret
or
pop
loop
mov
in
rorb
xor
cmp
sbb
mov
pop
shl
loopne
jecxz
jb
push
cmc
addb
add
out
enter
xor
mov
jne
int
push
addr16
std
decl
xchg
mov
data16
inc
sti
cmp
inc
add
jp
clc
mov
std
xchg
push
sbb
addr16
decl
jp
mov
stos
fstpt
mov
js
inc
inc
repz
std
add
dec
cmp
add
add
jno
mov
jbe
add
fisttpl
imul
and
jge
xchg
into
add
call
stos
dec
fs
pop
sahf
lcall
cltd
add
mov
add
add
pushl
ret
xchg
fsts
enter
inc
cmpsb
or
or
lret
lock
mov
pop
call
dec
pop
inc
mov
cmpsb
xchg
loope
or
dec
or
xor
cmpl
add
mov
and
and
jno
aam
loope
mov
xor
ret
ljmp
add
pushf
rorb
inc
and
lret
cmp
or
pop
arpl
lods
ret
aad
add
add
fwait
test
sbbl
outsl
xchg
pop
jge
pop
xchg
iret
out
sbb
scas
mov
outsl
push
cmp
shr
add
push
addb
lcall
mov
call
scas
std
test
testb
in
call
pop
scas
std
test
idivb
popa
xchg
push
test
and
push
daa
rolb
lcall
aam
test
cs
push
xlat
rolb
lcall
adc
add
roll
test
idiv
iret
push
cmc
add
add
mov
pop
xchg
mov
stc
iret
js
jle
inc
jp
mov
push
cld
cli
int3
jno
icebp
sub
mov
pop
jle
jae
mov
lret
jl
daa
mov
shlb
cmpsl
pop
mov
lret
orl
dec
jmp
mov
loop
aas
xchg
ret
sub
dec
inc
jbe
lods
stc
and
cmp
clc
xchg
push
fidivrl
add
add
sbb
mov
je
xor
loop
mov
jg
cmp
sbb
dec
push
pusha
lds
pusha
in
inc
iret
cwtl
lcall
adc
inc
outsb
add
mov
pop
xor
outsb
pop
sub
jle
pushf
jl
adc
mov
lds
jnp
mov
add
mov
and
int
jnp
lret
hlt
movl
pop
or
mov
dec
aas
leave
xchg
ss
xor
push
stc
sub
inc
jne
adc
call
push
nop
subl
xchg
jge
mov
or
pusha
push
mov
outsl
pop
stc
es
inc
fldcw
add
add
pop
call
push
mov
and
ret
nop
cmp
pop
call
push
mov
add
xchg
mov
push
addb
call
iret
stos
std
test
adcb
inc
cld
out
cwtl
mov
xchg
idiv
lahf
stos
std
test
add
addb
push
pushf
cs
call
inc
xchg
idiv
dec
stos
std
test
addb
dec
stc
mov
testb
and
call
iret
insl
add
cmpsb
testb
sbb
xchg
bound
ret
mov
inc
jae
cmc
aaa
cli
ds
jne
adc
mov
mov
sbb
jle
add
add
jnp
mov
or
test
dec
cs
xchg
fildll
out
rolb
ss
add
mov
mov
fnsave
out
addb
ss
add
xchg
ja
mov
dec
bound
ss
stos
cmp
add
push
shlb
dec
aaa
jns
lahf
outsb
xor
pop
pushl
cmp
add
lahf
insb
mov
mov
xchg
add
or
repz
lahf
pop
scas
repnz
push
add
or
cmp
add
inc
jbe
imul
fidivl
xor
or
cmp
add
push
adc
imul
adc
dec
cmp
add
add
insb
add
subl
add
jg
test
mov
pop
sbb
inc
in
shlb
data16
sub
je
inc
mov
dec
bound
push
bound
dec
sbb
mov
jle
mov
jnp
inc
in
fs
jae
xor
add
adc
inc
in
add
stc
popa
shr
sub
cld
arpl
outsl
or
dec
mov
push
xor
pushf
xchg
jnp
pusha
sbb
jne
adc
cld
mov
jnp
pop
push
jne
pop
jmp
add
push
dec
sbb
fdivs
mov
enter
xchg
leave
andl
leave
pop
pop
insl
push
call
enter
lret
cmp
cmp
iret
or
add
add
dec
mov
sahf
pop
rorl
push
push
stc
dec
pop
rorb
mov
fdivl
hlt
je
push
cmp
push
insb
adc
push
call
ss
jge
gs
jns
push
test
inc
cmpl
adc
ds
mov
sub
jae
or
cmp
add
mov
loope
test
mov
stos
mov
sbb
stc
enter
js
das
adc
jb
lods
inc
test
mov
cmp
mov
push
test
mov
int
idiv
mov
nop
daa
js
sbb
cmp
sub
push
sbb
aas
add
jge
dec
lds
lods
cmpsl
repnz
in
and
add
dec
jmp
jne
in
jl
push
call
pop
nop
cmp
xor
testl
sub
data16
mov
cmpsl
ja
sbb
xor
lret
xchg
push
xor
mov
out
ja
idiv
fs
mov
outsb
pop
movsl
stc
call
pop
fucomp
stc
add
push
add
sti
pop
test
add
add
sarb
push
mov
aad
cmp
add
mov
jnp
mov
outsl
jb
and
pop
lds
push
or
adc
cmp
hlt
shlb
call
test
mov
push
cmpl
imul
mov
jb
cs
add
test
inc
add
mov
dec
push
cmpl
les
jnp
ret
roll
fistps
shll
push
jne
mov
add
push
pop
popl
lea
add
movsl
out
or
or
add
fs
mov
push
mov
out
mov
int3
push
push
int3
int3
fsts
in
mov
add
add
mov
dec
cld
adc
cmp
adc
push
dec
adc
cmp
add
shlb
cmc
lret
les
add
or
cmpb
sub
add
sub
sti
or
add
jns
add
jns
add
push
data16
xchg
fdivs
repnz
mov
dec
test
add
add
dec
pop
jp
push
add
jl
add
add
test
inc
mov
mov
stos
xchg
xchg
mov
xor
icebp
push
sub
jmp
mov
cmp
adc
cltd
pop
les
arpl
daa
jnp
pushf
popa
mov
push
mov
mov
cmpsl
lcall
add
add
mov
out
out
fs
loope
outsb
inc
add
dec
call
ret
dec
xchg
sbb
ret
mov
jno
mov
out
das
xor
add
out
mov
out
jno
add
mov
pop
add
ret
add
mov
add
mov
add
mov
mov
popl
jmp
lds
push
sub
dec
and
xchg
sub
clc
xchg
cmp
mov
mov
push
int3
lods
insl
push
int3
cmp
jae
and
or
cmp
push
andb
inc
int3
or
jmp
cwtl
test
imul
bound
or
add
inc
xor
add
add
mov
out
xor
mov
loopne
shlb
lcall
adc
pop
adc
xor
cld
push
pop
dec
call
adc
jge
inc
nop
jnp
stos
outsb
push
cmpl
pop
insl
add
imul
cld
dec
push
ds
dec
call
andl
jle
loopne
jnp
jnp
ds
xbegin
mov
add
add
testl
mov
mov
mov
call
ss
add
cmc
ljmp
out
addl
rcrl
xor
push
jge
je
push
mov
pushf
stc
lcall
inc
call
ss
xorb
jge
insl
mov
add
add
cwtl
mov
pop
repnz
dec
repnz
clc
ss
xorl
jl
and
imul
loopne
jae
mov
sbb
pop
push
fildll
push
pusha
stc
cld
pop
insb
aas
icebp
mov
cltd
in
ja
stc
pop
push
jecxz
cmc
loop
test
pop
ds
int3
inc
test
pop
mov
ss
mov
mov
add
add
mov
xorl
mov
lds
pop
cli
clc
cmp
mov
pop
cwtl
mov
jmp
pop
pop
mov
cmpsl
outsl
mov
lcall
adc
clc
test
loope
cli
mulb
add
mov
add
mov
stc
bound
adc
int
aaa
into
mov
add
int
pop
push
xor
mul
add
push
in
xor
in
stc
cmpsl
jmp
pop
add
push
lea
inc
loope
ja
movsb
jle
test
popf
insb
stc
divb
push
add
jbe
std
imul
push
stc
xchg
popa
popl
add
fcompl
add
or
sbb
push
or
xchg
xchg
stc
add
or
ret
and
int3
leave
or
andl
inc
in
lret
fs
jmp
or
pop
mov
loopne
pushf
xor
imul
push
ret
xor
sub
negl
jo
ret
dec
mov
jg
test
sbb
and
mov
add
mov
inc
or
stos
adc
xchg
inc
ss
xor
jmp
adc
mov
imul
fcmovb
add
jecxz
add
jns
jp
adc
inc
js
xor
in
or
jge
jb
push
dec
js
orl
mov
std
jl
jno
or
add
add
in
std
pushl
xor
jne
add
jg
out
or
daa
add
adc
insl
stos
fucomp
cmp
fucomp
mov
adc
mov
outsb
jle
mov
add
aam
mov
push
out
mov
xor
add
add
std
add
adc
add
out
stc
andb
movsb
add
add
add
add
mov
pop
jle
nop
out
in
outsb
xchg
nop
out
repz
xlat
cmp
cmp
pop
add
sub
aad
jo
xchg
xchg
mov
mov
js
js
test
nop
add
stos
dec
or
nop
add
xor
popl
adc
in
adc
jmp
rcll
dec
flds
add
add
pop
mov
xchg
mov
inc
loope
dec
js
xor
pop
movsb
mov
adc
in
test
fst
hlt
jb
cmpb
push
adc
insb
jle
insb
out
adc
mov
add
sbb
add
pop
aad
jo
ret
add
push
hlt
cmpsl
or
leave
pop
jnp
or
jb
cmpsl
fdivrs
or
int
or
fstl
fs
mov
test
push
jmp
push
inc
add
add
sarb
mov
adc
pop
cmpsb
mov
adc
shlb
outsl
inc
stc
jge
ret
dec
adc
cmp
lcall
jl
in
popl
add
add
pusha
sbb
mov
mov
add
xor
outsl
adc
xchg
push
out
test
dec
push
jae
call
pop
pop
cmp
mov
ss
pop
cs
mov
add
mov
in
sbb
mov
sbb
pop
xor
mov
stos
add
jmp
outsb
mov
ss
pushf
std
das
int
push
or
movsb
lds
out
mov
arpl
mov
pop
adc
mov
pop
std
xor
push
sub
ds
jge
sarl
rorb
sbb
out
mov
addr16
and
dec
and
add
add
jnp
rolb
mov
mov
out
cld
or
sub
mov
int3
xor
jne
int3
mov
jb
stc
jmp
imul
sub
pop
stc
out
xor
cmp
push
dec
cli
stc
or
or
stc
shrl
jmp
or
add
add
add
xchg
push
hlt
jg
push
push
orl
dec
or
hlt
or
dec
mov
xchg
call
or
dec
push
ds
hlt
loop
notl
int
add
add
fisttps
pushf
fdivr
andb
idiv
icebp
xchg
cld
push
rorl
arpl
jno
testl
arpl
jge
arpl
test
push
idiv
and
out
and
fadds
shlb
call
lock
push
push
and
arpl
push
inc
in
pushl
jmp
je
in
stc
cs
sub
lcall
mov
test
enter
add
cmp
jmp
stc
pop
in
push
lock
jg
dec
push
call
ss
std
jl
dec
addb
jne
rcrl
ljmp
sub
ficoms
bnd
shrb
mov
shr
mov
dec
ljmp
popa
out
mov
push
data16
mov
add
add
or
out
pushf
push
fs
lea
and
lea
sub
ss
xchg
add
inc
add
push
mov
in
jl
inc
dec
xchg
je
cmp
fidivl
cwtl
push
clc
cmpsb
mov
outsl
and
push
mov
in
or
pop
xchg
xchg
push
mov
clc
call
bound
xchg
add
add
xor
add
stc
outsb
fdivrs
stc
pop
cmp
hlt
push
mov
push
stc
push
mov
and
push
stc
adc
stc
jmp
pusha
push
dec
pop
inc
pop
cli
push
push
ret
jp
stc
bound
enter
add
push
mov
cld
and
sbb
pop
mov
mov
add
and
mov
or
out
std
sub
mov
cmc
xor
ljmp
stc
add
test
mov
idiv
xor
jecxz
pop
pinsrw
je
pop
sbb
mov
test
dec
lock
call
cmovns
xchg
arpl
test
idiv
leave
shl
incb
add
add
call
adcl
jge
loopne
jnp
or
jge
sti
arpl
jmp
pop
idiv
dec
xor
jmp
fs
adc
shlb
pushl
stos
call
stc
fcmovbe
ja
leave
xlat
in
cmp
sbb
ret
mov
popf
test
stc
stos
mov
jo
aaa
and
clc
test
movl
add
add
mov
stc
xorb
mov
cmpsb
outsl
push
lods
sbb
jae
dec
push
xchg
push
inc
out
xor
stc
inc
les
cld
in
js
xor
call
ss
clc
xor
add
add
inc
cld
gs
outsb
adc
lcall
dec
pusha
nop
pop
dec
sub
or
jg
rorl
xchg
add
add
xchg
insb
ret
inc
xchg
mov
movsb
out
adc
jmp
dec
je
loope
cmp
cmp
ljmp
and
jl
pop
jae
dec
adc
mov
push
jmp
jne
out
js
pop
nop
jmp
cmp
outsb
jg
dec
shr
xor
mov
sbb
repz
xor
rorl
outsb
out
rcll
outsl
test
stc
mov
adc
fsubl
or
inc
jge
shl
sbb
jecxz
inc
cli
or
aaa
mov
jo
mov
push
shlb
ss
inc
push
xchg
mov
xchg
stc
push
out
and
dec
inc
xchg
stc
dec
add
pop
inc
xchg
mov
add
jns
test
icebp
ret
adc
xor
lods
hlt
inc
cmp
mov
jmp
and
in
call
push
mov
faddl
int3
and
int3
int3
test
movsb
dec
mov
inc
sub
xlat
inc
je
imul
add
popf
mov
addl
clc
clc
decl
jbe
ret
aaa
jnp
pop
xlat
push
mov
lret
inc
or
nop
sub
fs
call
adc
add
test
cmp
out
add
int3
stc
stos
jne
imul
or
xchg
clc
pushl
fsub
add
movsb
fmull
jnp
jbe
cltd
rorl
or
into
add
clc
enter
mov
rclb
js
pop
ja
std
lret
jno
mov
int3
cmpl
in
ss
icebp
push
cmpsb
xchg
sub
testl
mov
cmp
xchg
push
out
mov
xchg
and
pushf
and
push
int3
dec
inc
movsb
out
aas
xor
add
lods
out
sbb
or
add
add
sbb
sbbl
gs
and
mov
adc
outsl
mov
dec
push
inc
cmp
rol
xchg
pop
gs
out
adc
or
push
aas
cmpb
loope
jg
cmc
out
pop
loope
adc
faddl
std
mov
filds
xor
cmc
lcall
pushf
scas
xchg
adc
repnz
adc
icebp
mov
push
xchg
push
das
or
stc
xchg
out
test
adc
cmp
xlat
xor
outsl
sub
cwtl
test
dec
jmp
mov
add
sbb
jmp
xor
lret
rclb
add
add
add
push
xchg
mov
decl
push
arpl
addl
mov
mov
cmpl
ret
or
orl
dec
clc
dec
mov
add
cmc
add
int3
mov
movsl
push
test
daa
dec
add
pushf
dec
dec
mov
mov
add
roll
mov
icebp
or
loop
xlat
push
out
andl
pushl
ss
xchg
push
js
and
std
ljmp
add
mov
mov
inc
adc
mov
dec
cld
cmp
mov
mov
adc
mov
mov
pushl
idiv
or
scas
pop
or
mov
pop
scas
pushf
in
cmp
pop
out
cmp
adc
mov
sbb
add
mov
popf
popf
inc
add
inc
mov
shl
imul
mov
aam
sbb
cmp
push
xor
shl
ds
adc
int
lret
filds
mov
sarb
or
mov
fst
out
stc
xchg
ds
mul
cmp
ficompl
iret
add
stc
push
stos
iret
icebp
push
sbb
leave
sbb
cmp
out
xor
nop
int
sbb
dec
loop
push
out
add
sub
jno
add
lret
mov
add
mov
cs
popl
jmp
notl
jmp
pop
inc
ret
popl
jmp
jmp
popl
jmp
mov
add
mov
mov
inc
stc
jmp
mov
add
stos
sarl
jmp
mov
add
push
int3
xor
test
jno
stc
aad
ret
repz
push
sub
stc
push
mov
xchg
xor
add
add
push
or
mov
cmp
adc
add
test
ds
test
int3
push
push
int3
int3
fsts
in
mov
cmp
xchg
fldenv
lea
push
inc
cld
wrmsr
call
mov
or
cmp
sbb
clc
push
into
adc
outsb
adc
imul
mov
repnz
cmpsl
idiv
test
test
sarl
mov
jns
leave
int3
jno
leave
int3
imul
mov
or
repnz
or
outsl
push
and
xor
push
jae,pn
dec
gs
adc
push
push
adc
in
or
ss
xchg
mov
inc
add
jae
pop
or
mov
icebp
icebp
iret
int3
jmp
fwait
test
push
les
int
mov
or
pop
rclb
pushf
div
adc
push
lods
repz
cwtl
faddp
xor
mov
daa
pop
lds
repz
orb
add
push
lods
fisttps
push
mov
icebp
push
stos
iret
jmp
btc
addr16
cmp
fs
sub
leavew
in
xchg
sbb
mov
sub
fidivrl
lea
jo
roll
stos
iret
add
inc
into
clc
push
dec
jae
xchg
cli
testb
clc
imul
mov
ss
jecxz
ja
inc
and
fdivrp
mov
ja
int3
sbb
jb
int3
sub
aas
xor
lea
stc
add
dec
icebp
xor
enter
mov
add
fisttpll
add
pop
mov
adc
dec
lret
popf
jge
adc
pop
divl
fs
mov
jnp
sti
adcl
iret
pop
int3
int3
push
sbb
push
inc
sbb
iret
push
testl
push
jge
adc
lcall
push
fs
adcl
mov
push
ret
rcll
in
mov
or
je
sbb
add
dec
int3
int3
dec
push
int3
int3
sub
int3
or
int3
mov
xchg
ds
or
mov
idivb
add
add
jbe
push
mov
xor
inc
movsl
inc
clc
cmp
jno
adc
cs
add
hlt
lahf
into
cmc
cld
shl
add
mov
cmp
jns
leave
int3
jno
leave
int3
imul
pop
leave
sbb
call
cs
test
add
popf
aam
mov
aam
add
test
mov
add
add
mov
push
rorl
sub
lahf
data16
pop
aaa
mov
fisubl
enter
enter
mov
adc
or
push
out
mov
test
jg
nop
out
add
lahf
call
ds
inc
leave
jbe
fcomi
ret
lds
test
add
add
mov
out
orl
movsl
push
or
sub
adc
int
adc
roll
mov
sub
inc
leave
and
cmp
sub
jle
jge
scas
adc
std
inc
jge
insb
jbe
or
jae
jb
addr16
sub
clc
ja
sub
add
add
mov
scas
sahf
cmp
push
or
fwait
test
loopne
stc
sbb
push
or
icebp
mov
shlb
rcrb
mov
add
ror
jnp
xor
idiv
adc
pop
push
popl
int3
and
int3
push
roll
push
pop
xor
mov
push
insl
add
push
push
ret
ja
addl
add
add
lods
pop
xchg
add
xchg
adc
or
pop
stc
je
or
xor
dec
call
pop
xchg
stc
jge
or
xor
dec
push
ret
iret
pop
cli
je
or
xor
push
call
movsl
into
xor
mov
jbe
mov
rcrb
ror
add
int3
add
ror
fwait
mov
test
test
and
test
add
add
mov
cld
cmpsb
sbb
and
dec
sub
fimull
mov
jno
outsb
lock
mov
sbb
mul
and
es
test
jmp
inc
icebp
aaa
jo
or
es
icebp
stos
add
xor
out
jg
push
add
imul
bound
dec
out
xor
insb
or
loop
ret
in
sti
js
push
mov
andb
rorb
pop
add
out
pop
ret
out
and
test
aam
sub
pushf
xchg
stos
dec
cmp
rorl
mov
repz
stc
xor
xchg
addr16
out
mov
xlat
lods
lods
add
repnz
scas
mov
mov
mov
les
add
add
fs
mov
movl
stc
mov
pop
sub
test
jne
ret
jecxz
lds
inc
and
sub
shrb
inc
sub
loop
mov
mov
test
popf
add
das
enter
jns
pusha
mov
add
jbe
mov
jmp
add
mov
insl
cmc
aas
mov
or
stc
cs
adc
pushl
test
xchg
mov
insb
add
sti
push
pop
push
sbb
push
cli
add
outsb
add
sbb
aas
cmp
cld
dec
push
hlt
cmp
add
push
les
filds
push
mov
jbe
in
push
test
out
imul
mov
add
popl
add
imul
or
and
pop
adcl
cmpb
inc
or
jns
sbbl
stc
cmp
std
cmp
xchg
add
cmpsb
and
cmp
jo
mov
aam
imul
mov
std
jo
xchg
add
add
mov
add
mov
addb
add
test
push
test
dec
sahf
and
into
pop
daa
sub
cmp
add
add
stos
movsl
mov
call
ds
stc
add
out
clc
add
aaa
xor
jnp
ja
into
mov
xchg
call
add
add
add
adc
or
dec
mov
add
fistps
fcompl
out
cmp
inc
jg
or
hlt
cmp
inc
fdivr
xor
dec
movsl
fimull
or
cmpsl
xor
sub
fisttpl
aaa
cld
lock
adc
out
outsb
inc
or
add
mov
mov
dec
mov
mov
test
in
lahf
xchg
out
test
mov
fmuls
jl
fnstcw
mov
or
dec
mov
add
ja
mov
xor
and
xchg
arpl
jmp
les
push
mov
xchg
jge
xchg
or
cmp
add
cmpl
ret
mov
lret
int3
xor
int3
nop
test
stc
mov
push
push
insl
or
stc
decl
cmp
enter
mov
add
cmp
paddb
jecxz
je,pt
mov
add
dec
jae
fmull
addps
cli
incl
add
add
or
add
mov
pop
daa
jp
mov
sarb
bswap
iret
or
scas
push
sbb
mov
inc
mov
lret
out
inc
std
inc
jl
hlt
dec
jbe
fbstp
adc
mov
mov
inc
fwait
mov
insb
xchg
mov
pop
sbb
in
pop
test
sbb
xor
pop
incl
daa
or
subb
push
fisttpll
or
mov
rorl
insl
fs
movb
aaa
mov
pushl
mov
dec
inc
mov
mov
xrelease
pop
pop
std
ljmp
push
cmp
xorb
push
popf
out
mov
mov
out
daa
dec
loop
and
lods
call
add
add
add
out
stos
dec
add
mov
aas
add
xor
imul
cld
scas
incl
cmp
mov
repnz
arpl
xor
call
add
out
repnz
or
mov
sub
test
idivl
dec
cmc
mov
jno
aaa
cmp
fisubl
add
xor
insb
jb
movl
jmp
inc
fnsave
lret
sub
fstpt
scas
fimuls
lret
iret
bound
sahf
js
test
mov
or
cli
lds
mov
add
push
popl
call
mov
push
or
clc
scas
add
mov
or
loop
addl
js
xor
ds
add
mov
insb
xlat
int3
cmp
sub
stc
jmp
mov
sub
jb
cmp
mov
orl
mov
add
xor
xchg
add
xchg
test
sahf
lret
xchg
add
mov
pshufw
cmpb
dec
or
std
mov
lret
test
bound
inc
frstor
mov
add
ja
push
jecxz
or
mov
js
fldcw
jbe
stc
fisubrs
push
jp
or
add
pushl
xchg
sub
data16
pop
imulb
jg
mov
add
mov
std
pushl
movsb
stc
add
xchg
adc
jno
addl
add
into
and
lea
loop
out
xor
or
or
repz
sub
divl
or
mov
sub
sbb
add
dec
lea
mov
insb
mov
mov
lea
add
and
fs
insb
out
out
xchg
xlat
jp
rorl
int3
add
bnd
or
repz
fisubrl
popl
das
mov
icebp
inc
mov
jmp
inc
add
and
inc
mov
stc
jmp
out
mov
stc
jmp
jno
divl
adc
add
cmp
add
mov
insl
repz
sub
mov
xorl
adc
jmp
sub
mov
mov
mov
loopne
fbld
aas
fstpl
inc
popf
mov
inc
lret
push
sub
dec
inc
jb
aas
dec
push
mov
adcl
mov
xchg
scas
inc
dec
push
pusha
inc
data16
add
inc
fsubrs
xchg
inc
mov
mov
push
mov
xchg
orl
fldenv
dec
fiadds
add
add
pop
lds
mov
movb
add
popf
leave
ja
bound
and
add
iret
out
pop
mov
jnp
sbb
push
cmp
fimuls
xorl
sub
ret
or
stc
incl
add
add
fdivrs
pop
mov
push
call
aaa
push
inc
push
xor
std
popa
outsb
pop
fisubs
repz
jnp
sub
mov
jl
mov
nop
lods
movsb
adc
jmp
std
ljmp
int
adc
cmp
or
ja
cmp
std
push
xlat
out
incl
add
add
ss
nop
and
aaa
popa
xchg
sub
mov
std
jle
loop
mov
lahf
add
sub
popa
test
push
clc
lods
in
clc
add
mov
jne
mov
ret
repnz
xor
xor
call
add
out
dec
pusha
mov
add
add
jl
js
add
add
add
movsb
retw
pop
push
test
jbe
sbb
or
aad
jl
pop
sub
inc
pop
jl
addr16
cmpl
scas
rclb
dec
movsl
jg
dec
testb
or
adc
adcl
loop
inc
push
dec
fwait
shll
mov
mov
mov
add
mov
insb
push
xchg
add
add
add
mov
add
mov
inc
or
pavgw
test
arpl
adc
push
jmpw
dec
cwtl
nop
aaa
daa
cli
mov
test
cmc
jg
cmpsl
fidivl
xchg
sub
adc
jle
or
pop
sub
pop
jns
jnp
test
add
push
insb
insb
mov
add
add
push
adcl
movsb
movsb
push
pushf
mov
pushl
mov
orl
sub
add
out
or
rolb
mov
add
stos
mov
mov
add
cmp
out
or
mov
jge
push
sub
push
ss
sarb
push
data16
add
mov
mov
gs
xchg
cmp
test
ja
ss
xrelease
fsub
loope
ret
test
aaa
and
push
jge
dec
std
out
stc
ret
rcrb
sti
xorb
adc
cld
lcall
inc
sbbl
mov
ja
adc
mov
adc
shrl
movsb
adc
add
add
xor
push
nop
inc
out
sub
ljmp
add
add
nop
out
cmp
pop
mov
mov
in
mov
inc
test
and
inc
push
sub
mov
sbb
push
mov
fcoms
sbb
cmp
lea
add
imul
lea
les
adc
movsl
repz
cwtl
jl
inc
retw
push
lret
orb
rolb
mov
add
mov
js
lods
aad
ljmp
add
hlt
mov
das
jmp
jge
jge
out
inc
inc
sbb
in
fdivp
adc
push
jg
fidivrs
mov
test
jb
rcrl
pop
int3
popf
test
test
test
sub
jg
pop
je
xor
mov
pushf
push
pusha
test
push
outsl
icebp
xor
xor
add
mov
xor
add
movsl
pop
or
cmp
xorb
jo
fcmovne
adc
pushf
mov
mov
dec
sbb
dec
dec
fwait
or
sbb
add
add
xchg
stc
dec
xchg
mov
add
push
idiv
iret
push
push
pop
push
popl
mov
ret
add
push
int3
int3
push
push
int3
int3
fsts
in
mov
push
je
pop
int3
sbb
dec
pop
or
ret
sub
adcb
push
pushl
sub
mov
int
stc
loopne
add
imul
add
je
add
add
out
sbb
imul
add
jno
fimull
cs
hlt
and
cmp
mov
cmpsb
or
inc
cmp
ss
or
mov
mov
push
std
fnstsw
mov
jmp
aas
cmp
push
dec
test
mov
xchg
jge
das
enter
out
mov
mov
add
xchg
pusha
cmp
and
and
shrl
iret
icebp
push
sub
jmp
sbb
inc
xchg
arpl
lret
test
pop
aaa
pop
mov
aaa
mov
add
or
lods
and
pop
arpl
mov
ja
sub
add
add
sbb
sbb
jno
add
xlat
out
data16
push
mov
jmp
dec
pusha
hlt
adcl
pop
call
bound
adc
mov
or
xor
and
xchg
iret
push
xchg
shll
pop
jb
mov
mov
inc
push
in
jmp
jns
add
jbe
shrl
mov
jmp
mov
rcrb
mov
add
ds
aaa
ds
add
bound
mov
push
inc
and
mov
add
lahf
jmp
dec
mov
stc
dec
or
jg
inc
inc
sbb
jne
ret
sbb
add
clc
push
ret
decl
inc
hlt
or
mov
or
add
scas
adc
xor
sub
inc
aaa
and
fcoml
imul
andb
sub
dec
call
pop
int
adcl
inc
mov
mov
add
lods
test
jbe
inc
xor
shlb
mov
shrl
or
test
in
in
movsb
and
add
add
fs
rorl
or
push
into
imul
or
or
mov
mov
inc
sub
xor
repnz
test
test
cmp
lock
out
cmpsl
pop
xor
cmp
adcl
add
push
ss
ljmp
add
add
jge
add
test
xchg
jno
out
int
out
xor
cmc
add
xchg
data16
loop
inc
jge
add
dec
loop
mov
out
jge
pop
adc
rorl
mov
outsb
inc
mov
push
movsb
mov
mov
outsb
xor
push
and
xor
stos
inc
fisttpll
add
enter
popl
cmpsb
xchg
or
test
mov
dec
add
mov
add
xor
mov
test
movsb
popl
out
and
pushf
add
lret
popa
jge
mov
inc
jge
mov
pop
jno
xchg
adc
add
test
add
aas
into
sbb
mov
dec
aad
or
inc
mov
xchg
mov
test
cltd
jecxz
push
incl
mov
add
pop
shll
fildl
jge
js
mov
jmp
loope
or
test
sub
loopne
push
ret
shl
sti
sarb
mov
sbb
add
in
adc
jne
push
lret
addb
add
scas
mov
mov
adcl
inc
sbb
inc
add
loope
add
or
add
pop
call
add
cmc
ret
cli
xchg
jp
mov
std
gs
mov
xchg
sbb
std
test
xor
or
test
sbb
hlt
fmuls
icebp
pop
or
jb
mov
clc
dec
mov
add
jmp
cld
test
sub
jl
sbb
push
or
adc
and
shl
ja
retw
xor
enter
movsl
mov
addr16
lds
movl
add
add
es
outsb
inc
xchg
adc
ret
pop
mov
pop
or
mov
jg
add
sub
mov
add
mov
pop
inc
mov
test
add
ret
pop
mov
and
out
fcoms
add
cmp
push
stc
mov
or
xor
leave
jo
ret
sar
mov
test
xchg
adc
sbb
inc
into
adc
mov
adc
xchg
inc
push
test
adc
cmpb
mov
mov
push
cwtl
pop
fstl
jmp
das
into
sbb
stc
imul
jmp
cmp
insl
lret
xor
test
fisttpl
testl
sarb
les
dec
clc
iret
aaa
jnp
mov
xor
loopne
or
cmc
testb
popl
and
dec
mov
or
pop
adc
pop
popl
je
pop
push
in
or
or
les
dec
push
hlt
or
clc
movsl
pop
sbb
xlat
push
out
adc
stc
decl
adc
stc
jmp
je
mov
cs
ss
add
lods
push
or
and
jnp,pn
loopne
movsl
mov
std
ljmp
inc
aad
push
inc
xor
sub
sub
cmp
std
xchg
sub
sbb
xor
sub
mov
add
push
int
dec
call
cmpl
ret
cs
cli
shlb
pushl
sub
jmp
icebp
or
mov
adc
mov
pop
jne,pt
pushf
mov
aam
stc
sub
movsb
scas
ss
fidivrl
out
xor
pop
jg
mov
pusha
inc
mov
mov
loope
adc
cmp
fucomi
in
iret
pop
push
lods
push
xor
mov
leave
pop
xchg
mov
mov
sbb
mov
inc
out
pop
mov
out
cmp
pop
mov
pop
data16
out
test
add
add
test
add
cmp
ja
lods
dec
jno
or
jbe
push
add
inc
jmp
mov
push
fbstp
popl
jmp
mov
add
icebp
jg
icebp
mov
or
nop
add
xor
adc
divl
rolb
out
mov
sub
int3
hlt
jb
outsl
xchg
adc
aas
aam
jg
adc
iret
xor
bound
clc
xchg
jecxz
inc
xchg
leave
clc
addl
add
popa
clc
pushl
pop
cmp
jb
jmp
adc
lea
add
orl
dec
clc
push
pop
sbb
mov
add
les
cld
add
in
xchg
dec
clc
xchg
or
push
pop
lret
and
int3
jg
add
inc
pushf
mov
add
push
dec
xchg
add
fwait
jnp
adc
add
add
test
mov
add
xor
std
sub
mov
ja
movsl
call
inc
and
mov
test
jl
add
inc
sahf
lock
ret
aam
fs
mov
mov
clc
ss
test
and
jp
test
sahf
mov
movsl
sub
add
add
add
cld
jns
jge
inc
sbb
push
call
jnp,pn
xchg
inc
jp
dec
dec
dec
cld
mov
aaa
xchg
pop
loop
mov
out
adc
daa
aaa
mov
cmpsl
out
push
out
hlt
out
add
in
mov
int3
xchg
jle
fldt
cli
out
mov
data16
mov
xchg
and
lods
fucom
mov
add
add
pop
ret
and
push
popf
xchg
lahf
test
fcompl
or
xacquire
cmp
mov
jne
fnstcw
test
mov
add
leave
mov
call
rorb
push
jmp
cltd
sar
jl
xchg
mov
add
mov
add
cmp
and
mov
adc
out
adc
lret
push
jge
mov
aaa
jge
xchg
mov
mov
enter
jmp
ja
or
and
or
fs
jecxz
dec
dec
addl
inc
sub
xchg
xchg
add
jg
nop
pop
test
add
add
adc
incl
nop
bound
push
nop
call
mov
sbb
xor
adc
fmull
jne
rorl
add
push
cmp
add
adc
int3
pop
adc
pop
psubusw
outsl
mull
icebp
push
mov
add
add
daa
mov
add
xor
add
daa
stos
dec
push
scas
mov
ret
push
clc
mov
jge
mov
lret
test
push
xchg
test
movsl
mov
xchg
fsts
fldenv
in
popa
add
mov
std
jl
and
std
test
nop
jne
lret
jnp
and
add
ret
in
movsl
fwait
std
lea
add
lcall
add
nop
shll
xchg
inc
mov
ljmp
lea
dec
daa
xor
inc
adc
mov
ds
loope
xchg
inc
add
loop
or
pushf
scas
cmp
mov
cmp
jecxz
xor
xor
roll
add
add
push
add
mov
xchg
xor
mov
xchg
fildl
mov
out
mov
add
mov
jmp
mov
test
stc
or
xor
gs
add
ffree
cld
ret
add
or
mov
sahf
add
or
xor
gs
mov
jmp
push
test
add
add
rorl
and
adc
jae
daa
movsb
adc
mov
daa
scas
jbe
repnz
jge
mov
imul
fistl
add
cmp
add
inc
cld
pop
ror
loopne
push
mov
add
push
into
inc
or
in
push
roll
rcrl
add
dec
orl
add
add
jp
xor
pop
ud1
adc
cld
cmp
fs
push
pop
jnp
psubb
rorl
sub
mov
mov
add
dec
call
fmull
xor
pop
dec
jmp
mov
mov
cmpsb
std
daa
fwait
cmpl
add
mov
cmp
lret
add
sbb
jnp
jl
insl
cli
les
cli
xor
cs
aas
adcb
mov
inc
movsl
insl
cmp
mov
mov
xor
or
jp
xor
cltd
clc
cld
pushl
gs
push
xor
stos
push
xchg
sub
inc
dec
push
mov
ds
pop
add
sbb
jl
pop
je
test
sub
pusha
mov
add
mov
std
add
aad
mov
sbb
rcl
fidivrs
imul
adc
sti
cmp
jo
popf
loope
mov
out
je
out
xchg
enter
adc
mov
pop
cmp
call
mov
enter
arpl
sub
int
bnd
pop
lods
scas
adc
jle
mov
mov
test
and
cli
and
adc
mov
sti
mov
icebp
mov
mov
mov
add
out
pusha
clc
xor
test
aaa
adc
aas
jns
dec
jne
iret
jo
rorb
adc
cmp
loope
mov
add
cwtl
mov
add
and
nop
push
push
mov
mov
jbe
sub
testl
sub
add
add
cld
add
mov
pushf
nop
pop
mov
aaa
inc
cld
pop
inc
lret
loopne
hlt
inc
pop
iret
pop
add
lds
sar
mov
loope
inc
les
scas
int
sub
icebp
rcl
push
test
jg
inc
mov
xchg
jnp
pop
shl
add
cmp
out
push
sub
orl
jb
mov
xor
dec
jmp
and
mov
js
mov
clc
cmpsl
dec
shll
aad
xor
divl
or
outsl
dec
clc
fsubrp
sub
add
je
ss
jl
idivb
cmpl
mov
mov
stc
in
out
jge
push
stc
icebp
subl
cld
pushl
jl
lret
jne
or
jle
lods
cmc
les
or
movsl
xchg
test
jne
jns
mov
sbb
rclb
adc
sbb
sub
add
add
out
mov
mov
aas
sbb
jmp
add
roll
or
js
pop
ss
sbb
aaa
in
and
mov
maskmovq
lods
jno
cmp
stos
or
roll
fidivrl
xchg
out
ds
add
jnp
call
cmp
std
call
xchg
push
inc
mov
pop
shr
or
jmp
data16
add
aam
jo
out
test
pop
pop
test
lods
adc
dec
pop
push
sub
call
stc
pop
dec
jb
outsl
shr
or
jmp
ret
stc
in
incb
cld
mov
jmp
ljmp
pop
push
pop
jge
or
mov
add
mov
fmull
add
cld
push
mov
stc
fdivrl
test
xchg
adc
cmp
mov
mov
adcl
test
je
sub
pop
xchg
mov
outsl
cmp
pop
call
add
dec
or
lods
test
movsl
leave
cld
setns
pushl
cld
cld
decl
push
movsb
stc
or
cli
cli
insb
xor
sub
lds
add
loopne,pn
ds
stc
xchg
scas
mov
movl
add
add
cwtl
xor
lcall
mov
dec
sti
popf
dec
jns
into
int
jb
push
idivl
or
stc
cld
int3
push
jb
dec
cmp
pushf
dec
xchg
cmp
mov
cld
jo
sub
sub
pop
or
adc
shl
add
dec
out
mov
pop
pusha
push
add
add
cmp
adc
fsub
push
fstps
movsb
mov
mov
push
outsb
jmp
out
loop
mov
sti
cmpsl
lods
lds
sub
mov
inc
push
fwait
mov
sti
cmpsl
stos
lods
xchg
jns
jo
in
leave
out
mov
cs
add
fiaddl
lods
cmp
decl
test
ds
add
sub
out
into
cld
and
stc
jmp
gs
das
mov
movsb
mov
lods
hlt
add
bound
test
xor
inc
std
div
pop
out
pop
iret
cld
stos
pop
mov
mov
bound
inc
aad
jmp
fdivrs
pop
repnz
test
fmul
gs
add
and
and
cs
in
imul
add
push
inc
gs
add
add
cmp
xchg
add
xchg
xlat
adc
or
idiv
imul
or
add
lods
xchg
add
and
je
push
dec
or
sbb
adc
xchg
loope
rclb
jp
jmp
inc
dec
xchg
xchg
or
inc
push
or
call
and
nop
add
pop
cmpsb
cld
add
cmp
nop
pop
mov
das
inc
cld
xlat
fmulp
loopne
or
add
dec
mov
mov
incl
cld
int3
push
loope
dec
cmp
inc
jne
lods
pushl
mov
lcall
adcl
mov
movl
cs
cld
incl
push
inc
sbb
jb
mov
in
lss
add
add
jle
hlt
jle
pop
inc
inc
jbe
cld
mov
or
clc
cld
or
cltd
dec
xchg
outsb
lret
outsb
dec
pop
divl
or
stc
cld
int3
push
outsb
dec
push
sub
cmp
in
scas
cmpsb
mov
stc
fimuls
pop
fldcw
inc
test
inc
out
mov
das
lds
cwtl
jo
jmp
push
inc
cmova
in
adc
movsb
mov
mov
inc
mov
scas
loop
fisttps
mov
daa
lods
movsl
mov
mov
push
stos
xor
mov
addr16
sbb
lods
xchg
cltd
ret
cwtl
iret
sbb
and
mov
add
dec
aas
push
fsubrl
push
cwtl
mov
inc
dec
in
loopne
cld
mov
mov
fbstp
add
add
or
outsb
movsb
mov
lods
push
add
bound
test
cmp
inc
cmp
mov
cld
stos
adc
mov
or
pop
in
and
mov
repnz
test
icebp
jmp
gs
add
addr16
fsubrs
push
in
stc
jnp
sbbl
add
adc
scas
rorb
orl
mov
add
inc
test
shlb
jae
pcmpeqw
or
test
sub
shrl
movb
clc
filds
adc
mov
mov
sarl
clc
inc
sbb
add
adc
pushf
lret
pop
pushf
mov
addl
add
adc
cli
lcall
dec
lock
inc
and
scas
mov
jno
jne
sarb
pop
decl
xchg
fnstsw
test
outsl
inc
hlt
into
cs
cs
and
hlt
dec
xor
xor
dec
jne
dec
fsubrl
mov
or
and
add
jl
inc
cmp
mov
jo
xchg
insb
dec
lock
adc
ds
inc
mov
clc
orb
push
int3
cmp
cld
dec
pop
dec
imul
in
repnz
pop
dec
mov
fildl
push
mov
or
jmp
sbb
repnz
out
hlt
xchg
fildl
mov
adc
jmp
xchg
add
add
or
add
dec
cmpsl
mov
or
mov
adc
sar
out
dec
xchg
or
inc
out
mov
add
and
add
sti
fstpl
dec
call
das
dec
cld
bound
sub
roll
jo
idiv
mov
pop
adc
leave
dec
push
lock
xchg
daa
inc
std
inc
cmc
xor
fs
daa
jb
out
push
sub
mov
loope
je
pop
int
jmp
arpl
or
testl
jmp
jne
test
movsl
pushf
and
pop
popl
jmp
filds
mov
loopne
or
xchg
mov
mov
loopne
shlb
inc
test
mov
inc
dec
sub
xor
out
arpl
clc
lcall
or
mov
cmpl
add
or
mulb
pop
repz
cwtl
xchg
pop
test
pop
cli
sbb
cmp
movsb
xchg
fadds
xlat
mov
je
or
or
add
add
in
icebp
ljmp
testb
cmpsb
stc
xchg
cs
stc
mov
ss
loop
lcall
decb
or
mov
xchg
jno
cld
cmp
hlt
xchg
repnz
les
xor
cld
pop
adc
mov
out
rolb
out
push
xor
in
mov
fadds
add
add
push
cwtl
stc
xor
dec
test
testl
jl
add
pop
mov
std
cmp
fdiv
lahf
jae
cmp
or
stc
jl
jmp
scas
outsb
inc
push
pop
sbb
dec
ret
xchg
pop
adc
jmp
xor
cmp
sub
mov
hlt
or
push
xchg
jmp
xchg
pop
cmp
push
out
add
mov
lret
or
imul
mov
into
lret
dec
mov
mov
or
mov
cwtl
in
push
int3
mov
xchg
mov
inc
sbb
nop
jge
xchg
cmpsb
cmc
xchg
jmp
mov
xchg
call
mov
xlat
add
into
push
dec
jge
mov
inc
or
cmp
jg
mov
std
xchg
mov
cmp
lods
outsl
shrb
jae
aaa
jbe
add
sahf
adc
rorl
lahf
mov
adc
and
rolb
add
push
fcomps
ret
inc
iret
pop
add
and
jmp
int
add
out
add
cmp
adc
cmp
pop
repz
test
repnz
cmp
cmp
jecxz
add
in
add
fdivrl
add
cmp
sbb
cmp
adc
fidivrs
add
cmp
xlat
fidivrs
add
cmc
enter
sarb
cmp
cmp
jo
cmp
add
add
sub
cmp
jne
cmp
aas
sarl
rcl
cmp
lods
sarl
sub
cmp
jae
cmp
push
iret
cmp
or
cmp
inc
ror
sub
int3
imul
or
cs
xorb
test
loope
inc
jmp
xchg
xchg
xchg
xchg
iret
ss
sub
cmp
mov
pop
cmp
add
push
fildl
mov
out
adc
shll
sbb
add
xor
jno
sub
imul
movsb
or
mov
mov
daa
lock
xor
sti
pop
ret
lret
ljmp
pop
dec
add
cmp
xor
loop
enter
sar
mov
icebp
ret
stos
shr
lcall
xchg
jecxz
sbb
or
stc
sub
bound
bound
fwait
dec
jb
lahf
dec
jb
orl
loopne
and
insb
lahf
sub
in
andl
mov
xor
xchg
mov
mov
inc
test
popa
inc
stc
mov
xor
sysenter
jp
lret
popf
sub
lret
mov
ret
lret
lods
sbb
lret
sbb
jecxz
and
jae
stc
mov
dec
in
mov
jnp
bound
stc
add
addb
rolb
fwait
xchg
decl
int3
or
sub
sbb
lret
int3
test
int3
int3
mov
int3
int3
xor
imull
movsb
and
xchg
add
ror
cli
jae
xchg
scas
adc
jns
fwait
xchg
add
fstpl
or
nop
js
and
mov
dec
loope
dec
push
fbld
and
fdivp
cli
decl
shrl
decl
adc
push
adc
int
testl
pop
push
add
mov
clc
xchg
dec
int
add
shrb
fbld
fwait
sbb
cli
imul
ljmp
test
es
sub
loop
mov
ret
ljmp
jmp
test
es
test
mov
add
dec
fidivrl
mov
stos
mov
sbb
jecxz
mov
mov
sub
push
push
sub
out
ds
jnp
je
mov
mov
out
cmp
out
cmpsb
adc
pop
stos
inc
call
in
or
mov
out
or
xor
or
xchg
mov
out
mov
dec
jmp
push
fiadds
mov
jecxz
pop
cmpsb
cmpsl
add
daa
pushf
popf
mov
daa
add
in
roll
sub
inc
mov
sub
cmp
jmp
js
pop
push
mov
adc
mov
clc
jmp
test
sub
cwtl
sub
test
mov
sub
test
dec
xor
jmp
sub
or
sub
jg
xor
fwait
push
outsl
mov
bound
in
mov
mov
push
mov
add
movsl
inc
add
and
clc
xorl
rcl
es
or
mov
inc
or
sbb
add
call
mov
xor
jle
and
sbb
xor
push
test
sbb
sub
add
add
sbb
mov
lea
subl
cmp
pop
daa
mov
pushf
inc
out
cmp
mov
sahf
stc
mov
cld
sub
push
pop
sub
out
or
cmp
add
mov
shl
sbb
test
std
jl
ljmp
sbb
add
add
add
cmp
cs
mov
stc
mov
cld
sub
arpl
out
fdiv
pop
in
sub
pop
pop
push
jne
loope
mov
cld
sub
imul
jg
mov
mov
push
cmp
adc
and
xchg
jge
jp
out
mov
into
sti
cltd
mov
dec
out
out
jp
xchg
gs
cmpsb
mov
push
add
add
sbb
loopne
cmp
mov
add
cld
adc
movsl
decl
les
sub
call
daa
xchg
push
xchg
push
push
pop
xor
add
mov
out
lahf
out
mov
mov
adc
pop
repnz
and
mov
add
popl
mov
xor
add
add
loop
call
loopne
xchg
in
sub
xlat
mov
xchg
addl
pushl
addl
popf
pop
fmul
mov
fmul
lods
dec
fmul
sbb
sti
dec
bound
pop
push
jb
xchg
test
dec
add
call
cld
add
cltd
mov
in
mov
fsts
add
or
mov
out
clc
fiadds
test
lahf
xor
lret
jb
jg
mov
xchg
pop
adc
xchg
xorl
mov
movsb
call
push
or
push
or
scas
adc
jmp
xor
mov
lahf
cld
mov
xchg
xor
andb
xor
xorl
add
add
insb
nop
push
loopne
add
add
xor
or
dec
mov
mov
out
clc
ljmp
and
and
test
fwait
jp
mov
or
incl
mov
sti
ljmp
sub
imul
mov
int3
jno
jnp
ss
test
xor
test
add
add
outsl
sub
mov
push
cmp
movsb
test
test
cmp
cltd
or
test
hlt
pop
hlt
add
outsl
jl
mov
aaa
cld
inc
outsl
jl
scas
idiv
xchg
in
outsl
jl
cwtl
out
xor
mov
xchg
in
outsl
jl
cwtl
out
cmp
cld
jp
pop
jl
test
add
add
mov
jne
aaa
inc
xchg
outsb
jnp
and
nop
in
jnp
pop
push
xor
sbb
stos
out
add
orl
daa
mov
out
data16
xabort
out
add
outsl
ss
pop
ss
clc
clc
add
and
jl
dec
add
std
push
xchg
ljmp
mov
add
add
pop
cmp
mov
sub
jecxz
stc
and
out
data16
test
or
dec
cmp
call
mov
dec
xchg
xor
jae
sub
push
js
in
shr
mov
js
jge
jmp
movsb
out
and
xchg
stc
and
pop
mov
test
insl
addr16
mov
test
push
dec
cmp
add
add
mov
add
dec
cmp
mov
jne
movsb
and
mov
add
push
cli
dec
cmp
pop
sbbl
or
add
cli
xchg
xchg
dec
shl
call
sub
jae
out
fstps
mov
lahf
cld
test
lcall
adc
hlt
cltd
adc
cmpsl
lock
pop
or
test
xchg
movsb
cld
call
add
fsubrs
loopne
test
jg
xchg
icebp
mov
insl
decl
mov
mov
fdivrs
pop
mov
bound
call
and
test
jecxz
jae
jl
jae
outsb
or
ss
sub
cwtl
jae
mov
and
jno
mov
in
ss
dec
subl
mov
hlt
iret
int
mov
stc
or
addl
jae
add
aaa
or
sub
insl
add
insb
adc
and
mov
sarl
jmp
je
out
je
cmpsb
jp
in
insl
pop
lods
push
mov
jns
adc
xchg
jnp
ror
sbb
aam
jnp
loope
out
push
mov
push
aas
dec
arpl
sbb
mov
out
sub
imul
call
in
add
jno
jl
xchg
out
adc
in
add
dec
clc
fs
popl
jmp
loopne
mov
jmp
xor
pop
jo
out
jmp
jecxz
add
jecxz
jb
bound
dec
mov
sub
in
repz
push
push
push
jb
cwtl
mov
mov
into
ds
ffreep
and
call
pop
mov
dec
add
mov
add
fwait
mov
mov
add
mov
addl
orl
and
cmpl
add
add
xchg
cmp
nop
lock
xorl
lret
mov
outsl
cmpl
cmp
xchg
imul
add
lock
add
mov
mov
add
mov
add
sbb
pop
xchg
add
add
scas
mov
out
add
adc
fimull
pushf
sub
add
inc
pop
add
les
stc
jne
or
add
sub
nop
or
cld
incl
mov
decb
ret
sub
adc
insb
bound
mov
mov
mov
xchg
adc
inc
lods
jl
idiv
popa
xchg
pop
add
ret
adc
cld
incl
add
add
into
fs
cld
subb
add
idiv
xor
xchg
adc
cmp
add
data16
mov
xlat
add
push
outsl
lea
test
add
xchg
cwtl
add
push
mov
push
rolb
jo
xchg
insl
loopne
insl
jge
add
aas
sti
lea
pop
jmp
xor
add
add
add
jnp
cld
cmpsb
sbb
sbb
sbb
out
into
repz
cmpsb
push
imull
xor
mov
mov
cmp
jno
popa
dec
addl
bound
jl
mov
bound
int3
popl
pop
scas
daa
mov
stos
dec
or
xchg
lods
popl
add
push
inc
movsl
push
mov
popl
jbe
popl
jmp
push
or
add
in
popa
fidivrs
popl
or
pop
or
out
popa
lock
sub
jmp
cmp
mov
add
addl
pop
adc
jecxz
mov
xchg
adcb
xchg
mov
jne
or
add
add
ret
jae
dec
add
adc
mov
or
mov
push
add
jne
data16
and
or
add
lahf
mov
or
mov
sahf
adc
push
in
mov
pop
shrl
dec
or
xlat
fsubl
out
mov
in
xchg
cmp
int3
add
pop
cmc
adc
push
test
jo
or
dec
mov
jnp
not
adc
es
push
movsl
push
testl
lcall
mov
mov
cmc
cld
call
xchg
lods
inc
mov
mov
jge
mov
xor
adc
fisttpll
mov
idiv
mov
add
add
nop
jo
dec
adc
out
insb
bound
add
cmpsl
or
push
bound
pop
fisttps
and
adc
sbb
adc
mov
outsl
or
adc
push
pop
jnp
int3
mov
ja
cmpsl
out
mov
jp
add
arpl
or
aad
push
mov
jnp
add
add
cmp
jae
lcall
mov
pop
xlat
jle
pusha
mov
pop
scas
orl
rorb
mov
mov
std
sbb
popl
jb
and
jmp
xor
or
adc
frstor
xchg
pop
jge,pn
jmp
ss
adc
mov
add
cmp
jnp
shrl
popl
jb
xchg
mov
mov
popl
bound
cs
cld
jno
push
xor
sbb
add
mov
sbb
add
add
sarl
add
iret
push
sti
call
sub
mov
es
add
gs
mov
iret
stos
repnz
mov
dec
add
or
dec
in
ret
mov
add
inc
ret
or
pop
sbb
add
or
push
rcr
add
js
or
mov
mov
nop
mov
mov
popa
jmp
in
adc
popa
divl
cld
or
sub
mov
push
dec
push
mov
std
decl
fiadds
push
push
loope
jo
adc
jo
add
jo
adc
mov
jo
fsubr
notb
subl
dec
mov
pop
shl
out
mov
add
sub
push
add
test
or
cmpsl
out
in
xchg
mov
out
fsubrp
out
push
xlat
sub
enter
and
jne
mov
adc
loopne
pop
xchg
add
sbb
add
rcrl
adc
add
nop
out
mov
add
mov
out
hlt
push
dec
add
mov
out
mov
popl
cs
in
jmp
push
xchg
daa
mov
sti
clc
scas
mov
or
sbb
sub
sub
dec
bound
xchg
test
addl
xlat
mov
popl
jmp
pop
outsb
test
cld
jg
sub
jno
ja
addl
arpl
adc
mov
add
mov
adc
inc
and
jmp
cmp
jb
fadds
les
or
jl
ret
data16
leave
add
add
adc
adc
inc
loopne
adc
rorl
mov
cltd
xchg
add
pop
mov
loop
add
add
push
pop
or
push
add
dec
or
xchg
push
adc
or
jle
add
hlt
mov
xchg
adcl
out
adc
adc
jge
mov
cld
lcall
jo
mov
cmpsb
adc
adc
jp
lret
call
mov
sub
add
out
add
dec
test
fwait
adc
mov
push
or
orb
jo
add
mov
or
mov
repz
stos
or
jo
test
insl
mov
cmp
mov
movsl
sbb
inc
mov
out
xor
outsl
or
mov
adc
mov
pop
or
mov
out
pop
xchg
jl
lods
or
mov
pop
test
and
rcl
cmc
aam
cltd
rorl
mov
test
add
out
pop
cmpsb
jno
lea
and
out
xchg
and
lods
and
push
push
jle
jmp
cmp
nop
mov
cmpsl
adc
cwtl
shll
call
push
outsb
xchg
jge
jmp
mov
in
mov
and
sub
popl
xchg
mov
adc
mov
mov
divl
push
adc
xor
stc
mov
adc
incl
jge
add
add
out
xchg
imul
mov
addb
int3
push
mov
mov
dec
int3
int3
mov
int3
jno
in
sub
dec
mov
sub
inc
les
mov
mov
mov
sbb
xlat
int
mov
testb
or
jb
shr
mov
add
add
pop
push
add
dec
cld
xchg
cmp
add
or
jl
push
and
and
pop
xchg
jbe
or
xor
mov
jns
push
sbb
insl
loopne
push
inc
push
push
add
mov
adc
leave
in
mov
insb
fdivrp
ljmp
and
test
jno
mov
cmc
aam
pop
lods
aaa
adc
jg
push
ljmp
mov
ret
call
jp
push
push
push
fisttps
add
mov
jo
sub
ret
clc
or
in
mov
outsb
jnp
jge
add
jg
add
test
rcl
out
add
out
mov
leave
jle
insb
ss
jmp
mov
mov
mov
repnz
mov
xchg
pop
cmp
jnp
mov
mov
lahf
pop
xor
jnp
jle
xchg
sbb
add
mov
test
jae
sbb
jnp
adc
add
jle
add
outsb
outsb
sar
in
sbb
and
aam
pop
sbb
mov
mov
add
jo
push
sbbl
pop
out
cld
mov
mov
in
cmp
or
pushf
lea
negb
xlat
mov
test
add
divl
mov
fidivs
jb
adc
jmp
lds
cmp
ljmp
cmpsb
or
lea
add
push
cwtl
mov
out
adcl
lret
loop
fmuls
add
arpl
add
mov
sahf
lret
clc
mov
or
xor
or
cmp
pop
push
mov
adc
jle
jmp
fisttps
add
push
add
cwtl
hlt
js
add
out
mov
testl
jp
add
inc
sbb
pop
mov
call
test
xor
dec
add
mov
sub
mov
int3
roll
cld
pushl
mov
xlat
sti
xor
add
stos
call
lods
lock
sub
in
pop
ss
pushf
loope
mov
cwtl
mov
or
cmp
scas
mov
jl
lret
call
cld
lcall
sbb
xlat
or
imul
insl
xchg
sub
flds
mov
jno
dec
jns
add
aas
sarl
andb
mov
out
test
push
scas
cmpsl
out
jne
cmp
xchg
vrsqrtps
fnsave
add
fmuls
jp
add
imul
xlat
xchg
out
insb
pop
outsl
scas
cmpsl
out
mov
add
mov
fcompl
push
mov
mov
fidivs
clc
push
push
movsb
pusha
popa
jb
insl
int
pop
inc
or
fisubs
mov
aaa
cmp
adc
mov
jo
jae,pt
data16
or
mov
jo
sbb
test
jmp
mov
ljmp
mov
push
shl
or
inc
push
nop
mov
pop
popa
idiv
xor
add
mov
outsw
outsb
pop
or
pop
ficoml
loop
add
imul
sub
int3
int3
xchg
mov
lea
fcoml
add
stc
jae
jmp
ds
pop
push
add
testb
pop
push
pop
cmpl
lcall
mov
mov
pop
addl
add
or
cld
jb
pusha
sbb
mov
pop
xorb
inc
sti
aas
ss
cmp
aad
shl
add
mov
inc
int3
stc
cld
aaa
int3
icebp
leave
cmp
or
inc
add
add
cmp
in
add
mov
stc
cld
aaa
int3
icebp
xor
mov
adc
loop
scas
cwtl
pop
into
cld
ljmp
or
test
shlb
les
mov
mov
std
sti
jle
cwtl
outsl
or
fadds
add
out
stc
adc
sti
scas
jbe
shll
daa
adc
sahf
jns
inc
movsl
out
cld
dec
fildl
mov
or
pop
icebp
add
add
add
ficompl
aaa
stc
fisubrl
jnp
movsb
out
add
pusha
sti
sub
ljmp
sbb
jnp
sahf
cmp
cmpsb
sbb
mov
outsl
call
adc
adc
xchg
rclb
loope
pop
adc
or
jmp
iret
dec
adc
icebp
xor
jmp
mov
push
stos
int
lret
mov
fcmovne
lods
mov
mov
test
dec
dec
jnp
mov
bound
mov
sbb
dec
dec
adc
loope
push
bound
mov
jno
lahf
stc
test
adc
add
mov
roll
ud0
js
dec
push
or
mov
rorl
lahf
testl
add
add
jo
fwait
dec
nop
add
xlat
or
mov
sbbb
xchg
or
or
jge
leave
xor
mov
dec
in
xorl
dec
leave
xor
add
int3
stos
into
call
jl
iretw
inc
pop
add
scas
into
mov
into
jnp
xchg
mov
jp
or
dec
add
addr16
leave
fistpll
jno
popa
cmp
leave
fisttps
data16
pop
sbb
or
sub
lret
je
test
inc
int3
imul
test
int
jno,pn
inc
lods
sub
jge
or
cmp
push
stc
jns
leave
mov
cld
sarb
adc
mov
pushl
lcall
mov
mov
sti
add
xchg
out
cmp
xor
lgs
jmp
shlb
lcall
in
sti
push
add
mov
mov
xor
leave
pusha
aam
out
inc
pop
repz
xchg
out
inc
nop
out
mov
jo
xor
push
mov
jo
out
add
testb
push
or
mov
je
sub
jb
xchg
xchg
ret
jo
or
inc
mov
setp
int
xchg
or
aam
push
enter
dec
clc
pusha
jne
in
mov
popl
bound
add
add
xchg
add
popf
and
dec
pusha
mov
jmp
mov
enter
mov
cmpsb
pop
or
jge
pop
enter
popl
add
push
adc
mov
add
add
pushf
inc
test
jb
adc
jb
adc
xlat
add
data16
xchg
loopne
pop
adc
mov
add
add
pop
pop
mov
mov
orl
mov
adc
mov
mov
ljmp
mov
lods
add
fmul
bound
push
mov
in
cmp
jnp
mov
jg
gs
mov
jno
mov
movsl
adc
mov
jnp
leave
mov
add
inc
fincstp
call
cmp
cld
test
and
jb
js
imul
and
fs
repnz
call
jge
int3
imul
lock
add
inc
mov
or
or
mov
sub
mov
mov
mov
in
push
pop
stc
xor
out
fcmovbe
xchg
arpl
adc
add
loop
cmp
sub
mov
mov
fsubr
mov
dec
out
stc
add
mov
xchg
cltd
sub
sub
mov
mov
xchg
push
lods
std
push
std
jns
out
mov
pop
loop
out
cmpsb
jg
imul
arpl
lret
xchg
dec
popf
out
pop
shrb
xchg
orl
xlat
mov
pop
stos
xor
psubsb
adc
mov
mov
sub
pop
mov
int3
xor
add
lret
mov
scas
or
push
cltd
jp
and
mov
das
test
dec
aam
jb
lea
movb
jmp
mov
mov
push
mov
adc
sub
adc
mov
aas
cmc
inc
pop
adc
inc
lea
add
lret
xor
or
or
ret
inc
orl
mov
push
fcoml
xorl
xor
repz
or
add
dec
pop
mov
pop
sar
or
push
mov
add
xlat
cld
add
dec
cmp
les
mov
int3
sbbb
loopne
int3
int3
dec
adc
mov
push
jmp
pusha
push
int3
int3
mov
mov
mov
jae
cmp
decl
mov
call
mov
ss
xor
dec
scas
fs
add
add
aam
or
cld
incl
sub
jmp
push
sub
adcb
lods
cmp
pusha
stc
arpl
mov
ret
cld
pushl
ja
jge
scas
cmp
std
sub
cmp
in
sub
add
test
cmp
test
cmpsl
fsubs
pop
pop
mov
add
add
push
stos
hlt
fistl
add
out
mov
into
dec
lods
or
outsb
mov
out
cmp
add
pop
mov
int
xor
cltd
imul
ret
mov
add
pop
and
inc
ret
cmpsb
push
mov
cmp
add
filds
add
add
icebp
movlps
iret
in
pusha
cmp
adc
mov
xchg
popf
add
pop
xchg
bound
ds
add
aaa
add
outsl
cmp
adc
mov
inc
lea
adc
test
mov
jmp
ja
call
insb
xor
pop
jmp
add
ret
mov
adc
add
add
add
aas
push
mov
xchg
dec
push
inc
jmp
mov
pop
mov
stos
lret
loop
rorb
adc
lea
mov
and
add
dec
or
pop
mov
and
add
pop
inc
adc
stc
add
push
lret
mov
xor
das
adc
add
or
add
loopne
xchg
or
rcrl
mov
and
cmp
je
cmp
pop
mov
pushl
js
inc
sbb
cmp
sbb
bound
icebp
dec
int3
icebp
addb
ds
ds
cmp
stc
fidivl
shrl
add
add
imul
or
inc
xor
dec
stc
mov
into
add
dec
stc
mov
push
xor
dec
stc
mov
into
add
dec
stc
mov
xchg
je
in
pop
mov
lods
cld
push
cs
or
sti
pop
mov
pop
movsl
inc
cmpsb
xchg
inc
aad
push
je
add
xchg
pop
lds
mov
loopne
cld
out
mov
rclb
out
pop
psrad
lods
or
inc
enter
aad
xor
cli
pop
sub
rorl
add
das
stos
pop
sub
dec
jecxz
nop
push
add
insb
loopne
popl
out
mov
push
call
scas
add
mov
cld
and
cld
xor
cld
and
cld
mov
add
mov
cld
mov
mov
cld
mov
add
mov
cld
mov
mov
cld
mov
add
mov
cld
mov
mov
cld
mov
add
mov
cld
mov
mov
cld
xor
cld
and
add
add
xchg
icebp
add
rolb
loope
call
adc
loope
sub
imul
xchg
ret
adc
jg
das
mov
nopl
add
push
inc
or
ds
add
fninit
cmp
add
nop
jnp
cld
xchg
fcoml
call
add
push
push
add
scas
push
popf
xchg
icebp
add
scas
push
mov
scas
push
lahf
xchg
icebp
add
xchg
divl
lods
add
mov
pop
mov
lods
add
mov
pop
mov
lods
add
mov
pop
mov
scas
add
mov
pop
mov
mov
pop
mov
mov
divl
roll
mov
or
mov
pop
mov
ret
add
mov
or
mov
pop
mov
lds
divl
test
les
xor
cmp
scas
mov
add
nop
scas
into
xchg
xlat
xorl
ljmp
sub
addl
mov
mov
sub
mov
popf
mov
mov
inc
jmp
bound
mov
push
sub
xor
sub
add
daa
addr16
sbb
sbb
ss
sbb
cmp
mov
test
shll
lret
stos
dec
imul
dec
push
je
mov
lcall
pop
mov
add
notb
cmc
das
popa
jl
mov
in
jg
fdivr
scas
xlat
xchg
lcall
bound
xor
and
pop
and
aas
sub
pusha
in
add
or
mov
popl
cmpsb
jnp
jl
mov
inc
add
pushf
call
mov
jmp
hlt
inc
xchg
cmp
movsb
xchg
scas
pop
and
or
add
add
or
and
push
jb
pop
test
inc
add
shlb
int
cmp
add
ljmp
aam
dec
lea
mov
movsb
idivl
aad
push
cltd
add
jecxz
stc
cmp
adc
or
xchg
sbb
xchg
sbb
fistps
inc
mov
mov
cli
testl
int3
test
incl
add
add
pop
add
fistpll
xchg
cmove
stos
leave
add
in
jae
or
movsl
stc
andb
jne
hlt
sub
push
test
xchg
and
jp
decb
rorl
cli
sbb
cs
sbb
rorl
and
or
or
test
add
or
cld
xchg
add
add
clc
xchg
pop
mov
cltd
stos
out
sub
and
ret
aaa
lret
aas
sub
inc
and
jno
push
lods
or
and
into
sub
mov
or
sbb
push
or
xor
sbb
adc
pop
or
mov
shrl
inc
add
out
cli
out
repnz
out
jp
out
mov
call
add
loop
mov
lret
and
rolb
pop
pop
mov
mov
mov
popl
scas
mov
cmpsb
cmpsb
popl
sahf
xchg
add
push
mov
jle
nop
add
mov
outsb
out
add
js
pop
push
cmp
push
push
mov
incb
mov
add
out
or
out
sbb
out
cmp
xchg
clc
mov
popa
dec
xor
and
mov
sbb
aas
xchg
test
mov
jl
repz
or
fisttpll
insb
add
xor
or
push
out
push
jns
int
add
lahf
jbe
pop
js
subl
add
js
orl
inc
push
adc
cmc
sbb
push
mov
add
push
scas
xor
pop
insl
mov
mov
jmp
inc
and
ss
sub
shrl
mov
addl
adcl
push
cmp
fcompl
xchg
hlt
sbb
xlat
push
outsl
and
add
mov
mov
add
add
cmp
and
mov
fsubs
cltd
aas
fsubs
leave
and
lock
cld
pushl
inc
push
inc
add
add
stc
adcb
mov
cmp
mov
incl
loop
lods
dec
in
imul
mov
jo
out
fadds
lcallw
mov
shlb
xor
fidivs
or
das
xor
aad
nop
xor
lcall
movsl
and
dec
mov
rcrl
out
mov
in
test
dec
out
mov
out
mov
dec
out
mov
out
jecxz
minps
addr16
lods
cmp
adc
sub
jno
fstpl
pushf
or
insb
out
and
add
add
jmp
cmp
cld
das
push
cwtl
sub
in
iret
lahf
fimull
lret
testl
fistpll
xchg
loope
test
mov
mov
fisubrl
stos
sub
frstpm(287
test
sbb
call
pop
insb
xlat
lret
ljmp
add
add
test
xor
hlt
mov
bound
outsb
or
mov
pop
mov
or
shl
ljmp
loope
call
or
pop
cmp
fimuls
mov
xor
lret
loopne
push
or
mov
add
jl
dec
cmpsb
fs
das
das
sti
iret
testl
add
mov
add
leave
sbb
xchg
dec
pop
andb
add
pop
icebp
sbb
pop
pop
and
pop
push
sti
mov
mov
add
leave
stc
xchg
jnp
dec
pop
movsb
mov
imul
iret
inc
stc
je
cmpl
scas
dec
cmpsl
lock
mov
add
cmpsb
je
mov
ret
ljmp
or
dec
stc
repnz
les
xor
std
pushl
test
hlt
cmp
or
cmp
stc
mov
les
xor
pushl
cmpsb
das
loopne
lds
je
mov
jle
fisttps
jb
cmp
icebp
mov
icebp
jl
fsubs
popf
popf
or
push
ss
adcb
mov
mov
jno
decl
bound
xchg
pop
mov
cmc
pop
addr16
jo
sub
add
sbb
mov
pop
or
cmp
add
adc
lds
sbb
add
sub
fs
pop
sbb
sub
sbb
sub
push
aad
jp
push
pop
sbb
fwait
mov
js
icebp
jae
or
es
sbb
mov
add
fs
js
mov
adc
lods
cmp
jmp
popa
cwtl
push
lods
mov
xchg
shlb
sahf
xchg
cwtl
push
rclb
jmp
icebp
pop
scas
mov
in
xchg
and
testb
dec
scas
sub
in
fistpll
or
jbe
aad
mov
lret
cmp
rolb
adc
sbb
add
add
data16
xchg
add
inc
mov
jmp
popl
andl
add
fbstp
pop
je
test
rorb
push
and
jmp
clc
add
stos
lret
rcrl
data16
adc
ss
pop
repz
mov
mov
dec
pop
jle
add
add
test
aad
scas
jnp
dec
sbb
dec
adc
jne
leavew
add
pop
test
nop
add
rdtsc
pop
je
test
roll
and
outsl
movsl
jge
mov
sub
sub
sub
jns
jge
mov
ljmp
popa
jp
mov
out
xor
xchg
in
jge
mov
scas
std
aaa
jle
in
pop
and
and
xor
stc
ljmp
jmp
add
cltd
mov
lods
jp
cmp
xor
xchg
mov
aas
add
inc
jnp
shrl
inc
test
or
add
or
and
cltd
out
cmp
inc
dec
cmp
add
fs
inc
lods
sub
out
rorl
out
cmp
icebp
dec
cmp
adc
lds
xchg
addr16
inc
mov
out
inc
sub
adc
and
sbb
jp
aas
sbb
movsb
ja
pop
jmp
shl
jbe
push
pop
pop
jb
mov
and
mov
and
mov
xor
fs
sbb
repz
rcrb
sbb
test
mov
lahf
and
mov
inc
jns
and
outsb
shr
inc
imul
and
jns
cli
jp
imull
imulb
add
popf
negl
cmp
lods
loope
call
mov
add
jbe
mov
mov
add
daa
mov
mov
lret
into
clc
mov
pop
xchg
addl
leave
jo
orl
mov
inc
rcrb
je
and
pop
mov
es
sbb
dec
sti
sub
jp
js
sub
push
test
add
lock
pop
mov
insl
adc
sbbl
repnz
fistpll
pop
rorb
or
icebp
sbb
adc
lea
shrl
out
cmp
mov
iret
pop
mov
cld
icebp
jo
std
jnp
lods
sub
and
jge
jge
sahf
jnp
mov
inc
and
sahf
jnp
mov
mov
jb
lea
jg
add
add
mov
add
mov
cmc
add
shll
jl
mulb
mov
mov
int3
jmp
insb
ja
ss
test
xadd
negl
imull
jnp
imull
pop
push
sub
xor
jnp
out
mov
mov
fwait
fs
test
das
add
add
push
roll
ja
pop
add
int
push
xor
iret
js
push
mov
pop
cwtl
out
mov
mov
xchg
jbe
cmp
or
and
jp
stos
insl
cmp
iret
push
sbb
push
sti
js
shlb
hlt
orb
jp
adc
jmp
pushf
and
in
push
rolb
call
mov
add
testb
pop
in
inc
mov
add
mov
and
or
nop
jae
jne
fcomp
in
push
pop
dec
sub
clc
jmp
adc
out
sbb
test
cmpb
jg
jb
lea
or
or
push
cmpsb
insb
jecxz
dec
jge
jns
test
aam
sub
pop
push
inc
outsl
dec
movsl
clc
jmp
inc
aaa
and
pushf
xchg
add
sbb
sti
dec
mov
jnp
sahf
clc
orl
loope
cltd
jnp
rcr
je
mov
ficomps
jg
movntps
adc
aad
inc
btc
data16
inc
test
mov
push
xchg
call
mov
je
inc
fimuls
sbb
dec
sbb
mov
inc
int3
adc
out
mov
mov
call
pop
enter
iret
aas
mov
add
mov
mov
add
lcall
cmpsb
mov
cmp
and
add
mov
cmpsb
testb
cmp
dec
test
cmp
inc
mov
int3
push
and
out
dec
nop
dec
sub
rcl
in
push
xchg
cmp
sti
add
decl
mov
cli
mov
or
test
sub
loop
mov
jo
loop
loopne
jb
pop
mov
xor
lea
lods
insb
inc
rcl
pop
mov
jb
xor
fstl
lcall
testb
movl
add
add
xor
push
xchg
sub
ret
rorb
ds
mov
sub
ret
mov
pop
dec
fcomp
pop
dec
xor
pop
jle
movsb
out
clc
mov
iret
push
sar
outsb
mov
cli
adc
jmp
fs
popl
add
mov
je
test
call
mov
add
xor
jae
inc
in
and
mov
add
mov
push
push
jle
sar
cwtl
das
aas
clc
subb
add
xor
jmp
test
jmp
adc
jb
sub
out
int
call
movsl
loopne
jb
xchg
or
aas
xor
add
push
idiv
addr16
and
add
add
xorl
or
jmp
adcl
lret
adc
in
mov
cmp
lea
pop
addl
mov
sarb
imul
dec
ficoms
nop
pop
sbb
sub
sbb
jle
sarb
adcl
in
notl
insl
les
xchg
mov
or
add
jae
iret
mov
adcl
add
pushl
mov
pop
xor
int3
std
fidivl
test
sbb
xchg
das
imul
inc
add
mov
shl
into
out
inc
divl
and
mov
sahf
stc
cmp
inc
jge
cmp
repz
add
xchg
lds
sldt
add
cmc
push
loopne
ds
or
mov
xchg
cs
inc
fwait
xchg
mov
cld
test
add
cs
adc
jb
jo
fmul
mov
ficompl
out
mov
mov
mov
cmp
pop
mov
add
dec
out
notl
sub
xor
aas
lods
mov
mov
aas
pushf
mov
mov
add
fidivl
jg
mov
pop
cmp
mov
cmpl
mov
arpl
jns
push
cmp
mov
jp
sbb
call
lock
cmpsb
test
cmpsb
clc
fs
fs
call
cltd
cmpsb
test
icebp
lahf
xchg
add
lcall
sti
jbe
test
popl
jmp
imul
fimuls
sahf
ror
shrb
and
stos
mov
out
mov
inc
test
fidivs
xor
stc
arpl
dec
mov
or
in
pop
inc
push
int3
int3
mov
int3
int3
rorb
rorb
int3
xchg
pop
dec
mov
rolb
negl
outsb
push
int
fmuls
dec
jmp
pop
inc
add
hlt
mov
out
ja
or
pop
leave
or
stos
notl
adc
jbe
pop
cmp
je
popf
out
jbe
push
inc
or
rolb
fisttpll
mov
test
scas
nop
mov
sbb
leave
cmpsl
test
out
adc
jae,pn
xor
or
add
jno
fcompp
pop
cs
mov
stc
arpl
icebp
imul
xor
in
mov
cld
jmp
fadds
bound
mov
daa
xor
test
mov
cmpsb
stos
lcall
stos
lcall
stos
jnp
push
add
push
ss
add
add
aad
cs
mov
cmp
in
mov
add
cmpsb
inc
stc
ret
xor
out
sub
out
and
out
mov
out
mov
insl
cmp
mov
inc
jo
in
out
repnz
nop
incb
mov
pusha
fmul
push
fs
stc
out
mov
pop
inc
fcom
adc
test
add
add
push
iret
mov
adcl
in
outsb
inc
into
cwtl
cmp
adc
std
out
mov
sbb
jb
jmp
stos
inc
lahf
push
sbb
push
std
cmp
or
or
add
int
xchg
clc
jb
test
out
push
aad
rorl
insb
jns
or
ljmp
mov
cli
adcl
add
add
xchg
push
fnstsw
rorl
fs
or
repz
add
loopne
adc
lahf
popa
jg
sbb
cmp
adc
ret
test
and
fs
add
or
push
lods
pop
dec
adc
pop
or
mov
loopne
dec
adc
mov
or
jp
or
cmp
add
add
xlat
loope
jnp
xor
push
mov
lret
testl
mov
mov
adc
push
and
add
fcoml
lret
xchg
out
movups
idiv
pop
push
jmp
int3
idiv
lahf
xlat
or
and
sbb
add
or
push
add
push
test
add
add
call
scas
sbb
xchg
lea
xor
push
popa
iret
adc
je
xor
sbb
in
sub
test
int3
inc
and
mov
cmp
sub
xchg
mov
xchg
sub
clc
mov
ret
xchg
ret
es
test
push
mov
cmp
cmp
sbb
xor
mov
add
xor
cld
arpl
dec
or
ss
cltd
daa
mov
pop
fdivrs
add
pop
sub
cltd
push
xor
testl
mov
cltd
pop
sbb
ss
add
xorb
or
cwtl
clts
iret
cwtl
icebp
inc
stc
lret
xchg
int
add
loopne
add
add
add
loopne
inc
xor
pusha
or
out
lea
jmp
jne
cmp
test
xchg
mov
inc
int
adc
cmp
addl
mov
pop
jge
jecxz
add
out
sub
mov
aas
inc
or
cmp
add
add
add
cmpsl
movsl
in
mov
mov
add
popl
add
mov
mov
add
xor
cmp
bound
add
pop
sar
add
popf
xchg
add
enter
push
mov
idiv
test
jecxz
decl
jo
imul
rcrl
les
addl
push
mov
nop
add
or
dec
mov
add
shl
adc
sbb
pop
testl
cmp
sub
push
sub
cmovno
idiv
pop
not
ja
push
pop
pop
push
loop
mov
js
push
adc
mov
cld
sub
cltd
dec
sub
and
push
cs
rclb
addl
nop
mov
add
test
out
mov
leave
pop
jbe
jns
cltd
mov
dec
cmp
stc
sub
dec
or
push
out
pop
inc
int3
add
stc
xor
in
popf
and
pop
xchg
iret
adc
mov
xbegin
mov
cld
pushl
and
mov
or
or
xchg
xor
xor
jle
xchg
inc
fadds
pop
enter
or
test
xchg
out
out
cmpsl
pop
mov
cmp
jle
ja
enter
xor
das
dec
or
stc
out
mov
fs
mov
fwait
cltd
roll
cltd
movsl
push
movsb
xor
nop
pusha
enter
mov
or
sbb
dec
adc
rorb
enter
add
or
xchg
xchg
jnp
out
mov
and
adc
fildll
test
lods
xchg
leave
sbb
or
or
ljmp
or
jp
pop
aas
js
jecxz
clc
into
inc
xchg
mov
add
mov
test
adc
or
sub
hlt
pop
adc
add
bound
fistl
inc
dec
xchg
clc
jmp
jno
or
test
out
adc
fwait
push
add
xchg
shld
pop
fcomp
or
push
cmp
decl
shl
mov
popl
je
adc
add
push
sub
pusha
dec
or
rolb
mov
xchg
xor
mov
adc
aaa
call
add
pop
idivl
aad
add
nop
mov
decl
mov
idiv
lret
jne
dec
pop
mull
fwait
test
int3
int3
mov
dec
cmpsb
cmpl
mov
or
fstpl
jnp
rcrl
inc
shll
test
mov
pop
roll
pop
test
inc
cltd
mov
xchg
nop
cmc
mov
xchg
mov
in
int
pop
jne
cs
int
out
fdivrs
in
pop
cs
adc
in
loopne
in
push
xlat
in
push
fsubrs
push
jne
ljmp
jnp
imul
xlat
lea
mov
push
fwait
out
sbb
mov
push
stos
out
sbb
mov
loope
insl
inc
cld
sbb
mov
cs
in
int
add
xchg
adc
fstpt
out
test
and
cmp
enter
jae
cmp
enter
push
sub
lock
arpl
stc
movsl
add
dec
out
mov
jge
push
add
jb
mov
notl
stos
mov
mov
xchg
cmp
dec
dec
add
cmp
aas
dec
add
inc
cmp
sub
mov
cmp
sbb
xchg
shr
enter
call
mov
nop
shl
iret
cmp
pop
mov
test
je
call
icebp
push
add
mov
data16
inc
sub
add
add
popl
dec
das
nop
stc
add
push
or
hlt
or
dec
mov
adc
inc
xchg
cld
decl
clc
dec
ret
js
adc
rol
dec
int3
int3
sbb
inc
and
mov
and
or
imull
cmp
les
or
mov
les
nop
jmp
add
add
ja
mov
ja
shll
loop
or
inc
hlt
idivl
icebp
divl
mov
inc
shrl
loop
cmpsl
mov
mov
jo
or
jg
and
pop
adc
imul
lods
jno
and
stc
dec
add
inc
js
cs
js
cs
mov
movsl
js
int3
jns
int
in
sar
jno
dec
cs
cmp
mov
mov
sub
add
in
lds
mov
add
add
cmp
stc
mov
cmp
pop
arpl
data16
jg
xchg
cmpl
mov
rcr
push
and
loop
ja
jmp
insl
mov
jmp
or
sub
jns
scas
aaa
jno
cmpsb
aaa
imul
notb
mov
inc
iret
aad
add
outsb
mov
sarb
xchg
pmulhrsw
jle
fwait
ret
xchg
jb
mov
add
lock
adc
pop
jae
and
mov
ljmp
sti
mov
push
mov
add
mov
outsl
mov
inc
jmp
popl
ss
cmc
xchg
sub
out
call
nop
adcl
inc
or
add
loope
cmc
shl
iret
faddl
ds
mov
imul
divb
dec
mov
hlt
shl
pushf
xchg
add
iret
call
add
ret
xchg
dec
and
xchg
inc
and
daa
enter
xchg
xchg
dec
and
arpl
icebp
loope
fstpt
rorb
xlat
addr16
and
ret
mov
rolb
rclb
add
stc
xor
pop
push
and
adc
and
mov
push
shr
cmp
fists
ret
push
add
add
add
rolb
sbb
lock
jns
add
xchg
jnp
mov
add
mov
push
pop
test
psubw
shll
addr16
dec
mov
cmp
fisubrl
cmp
inc
mov
cmp
jno
js
sahf
mov
add
add
lcall
and
test
mov
sti
jb
sub
bound
mov
arpl
push
sub
add
jmp
pop
loope
mov
mov
or
add
xor
cmp
rclb
add
xor
enter
rclb
fwait
sbb
jb
repz
test
xor
adc
cmpsl
bound
cmp
add
push
jecxz
add
jp
adc
popa
sti
jmp
sbb
xor
negl
clc
jmp
roll
add
add
add
xchg
adc
pop
inc
int3
add
mov
add
xchg
dec
popf
enter
enter
popl
es
xchg
test
enter
popl
push
xchg
xchg
loope
enter
enter
popl
out
xchg
and
enter
enter
popl
add
stc
decl
aaa
add
aaa
add
add
mov
incl
add
add
mov
add
mov
add
add
mov
jmp
mov
add
mov
add
add
xchg
mov
jmp
mov
add
mov
add
add
jae
stc
call
mov
add
add
xchg
mov
mov
mov
add
mov
stc
incl
aaa
add
mov
add
stc
incl
add
add
js
add
scas
adc
mov
adc
mov
add
mov
sbb
aas
mov
and
mov
add
mov
sbb
aas
mov
and
mov
add
mov
sbb
adc
inc
mov
add
mov
sbb
repnz
mov
mov
js
add
js
add
add
add
es
lds
pusha
les
pop
les
pop
les
jmp
add
mov
jmp
add
mov
jmp
add
mov
jmp
add
test
jmp
add
mov
jmp
add
add
add
jmp
add
sahf
jmp
add
sahf
jmp
add
mov
jmp
jmp
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
pushf
nop
pushf
adc
add
mov
cld
adc
hlt
adc
in
adc
add
add
adc
adc
adc
adc
adc
adc
adc
test
sbb
xor
or
and
or
sub
sbb
sbb
sbb
and
or
adc
or
sbb
fmull
adc
int3
popl
int3
cld
paddusb
add
stos
jbe
clc
ret
hlt
mov
add
add
js
or
add
movsl
js
cmpsb
movsl
js
mov
ret
inc
js
movsb
les
int3
ret
sub
js
mov
ret
mov
js
mov
js
mov
js
lods
ret
test
js
movsb
mov
add
stos
js
pushf
ret
cwtl
mov
js
nop
stos
js
mov
xchg
jmp
add
xchg
jmp
add
mov
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
add
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
add
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
adc
mov
adc
mov
adc
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
mov
pop
jmp
fmull
push
int3
mov
push
fmull
push
int3
mov
push
int3
mov
push
pushf
mov
push
pushf
mov
mov
setl
add
jbe
pop
mov
cmovl
push
pop
mov
push
dec
mov
dec
mov
sbb
push
push
or
and
or
adc
sbb
sbb
sbb
or
or
sbb
and
jbe
sbb
jbe
xchg
jbe
mov
lods
jbe
test
pushf
jbe
js
push
add
mov
push
add
mov
push
add
shrb
mov
push
add
ret
push
add
mov
add
test
add
shrb
mov
push
add
shrb
mov
movsl
jmp
add
add
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
mov
add
jmp
add
jmp
add
jmp
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
jmp
mov
add
jmp
mov
add
jmp
mov
or
jmp
mov
add
jmp
mov
add
jmp
mov
push
jmp
mov
push
jmp
mov
pop
jmp
mov
pop
jmp
mov
add
jmp
mov
add
jmp
or
pushf
or
xchg
mov
sbb
movsb
or
xchg
test
or
pushf
or
xchg
mov
or
nop
repnz
int3
nop
out
int3
nop
mov
fcoml
int
int3
nop
push
int3
nop
fimull
pushf
nop
into
push
pushf
nop
rorb
mov
add
mov
push
or
nop
pop
or
nop
dec
or
nop
push
or
nop
inc
or
nop
dec
or
nop
cmp
dec
nop
inc
or
nop
xor
pop
nop
cmp
nop
sub
dec
nop
xor
data16
mov
add
test
data16
mov
data16
test
data16
mov
data16
test
add
add
data16
mov
data16
scas
data16
mov
push
add
scas
push
add
mov
push
add
mov
push
add
scas
push
add
mov
xchg
add
xchg
add
xchg
add
jmp
add
jmp
add
mov
jmp
add
jmp
add
xchg
add
xchg
add
mov
add
mov
add
xchg
add
xchg
add
jmp
add
mov
add
mov
add
mov
add
mov
add
xchg
add
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
add
or
pop
les
dec
enter
lods
or
movsb
or
pushf
or
xchg
or
mov
fmull
or
mov
or
mov
or
mov
push
int3
mov
add
add
or
pop
or
push
or
dec
or
or
data16
scas
data16
ret
data16
mov
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
add
add
data16
scas
data16
mov
data16
lods
data16
lods
data16
mov
push
add
lods
push
add
mov
push
jmp
add
mov
add
mov
add
jmp
add
mov
add
mov
add
jmp
add
add
add
jmp
add
jmp
add
mov
add
mov
add
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
rorl
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
pushf
xchg
inc
or
repz
jmp
pop
xchg
fisttps
dec
xchg
jecxz
dec
xchg
xor
pop
xchg
or
or
or
or
lret
or
sbb
or
push
or
adc
sbb
push
or
scas
or
mov
or
cmpsl
or
nop
stos
or
nop
lahf
or
nop
mov
or
nop
fwait
or
add
add
nop
xchg
or
nop
xchg
pushf
nop
mov
pushf
nop
jg
mov
add
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
data16
scas
data16
scas
data16
mov
xchg
add
test
add
xchg
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
test
add
test
add
test
add
test
add
test
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
fmull
push
int3
lea
pushf
lea
pushf
lea
mov
dec
or
inc
or
or
or
or
or
or
or
or
or
or
push
or
push
or
push
or
decb
fmull
or
add
add
mov
or
data16
mov
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
data16
lods
data16
lods
data16
mov
xchg
add
jmp
add
jmp
add
jmp
add
cwtl
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
add
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
add
mov
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
std
call
mov
std
call
mov
std
call
mov
std
decl
sbb
or
mov
fcoml
addb
xchg
jbe
int3
xchg
sub
add
int3
xchg
sub
pushf
xchg
pop
pop
pushf
xchg
bound
mov
pop
pop
pushf
xchg
dec
pop
pushf
xchg
push
pop
mov
std
add
xchg
add
dec
xchg
ss
dec
xchg
cmp
pop
xchg
cs
pop
xchg
xor
dec
xchg
es
dec
xchg
sub
sbb
push
pop
sbb
and
or
push
pop
or
sbb
mov
add
mov
add
mov
add
add
jbe
push
mov
add
mov
jbe
cli
mov
jbe
repnz
jbe
ljmp
add
mov
jbe
fidivrl
jbe
sarb
jbe
test
jbe
jge
jbe
mov
mov
jbe
mov
jbe
scas
mov
add
mov
jbe
mov
cmp
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
jmp
add
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
add
add
jmp
add
xchg
jmp
add
xchg
add
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
call
mov
decl
add
sbb
sahf
add
or
xchg
add
sbb
mov
or
xchg
fmull
addb
add
add
lea
fmull
outsb
add
int3
lea
pushf
lea
pushf
lea
mov
push
add
pushf
lea
mov
inc
add
pop
lea
add
dec
lea
add
mov
add
mov
jbe
cs
jbe
es
jbe
push
mov
jbe
push
mov
jbe
push
mov
jbe
push
mov
jbe
mov
jbe
idivb
jbe
out
mov
jbe
out
jbe
loop
jbe
fidivrs
jbe
mov
jbe
into
mov
jbe
mov
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
jmp
add
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
xchg
jmp
add
jmp
add
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
jmp
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
cld
call
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
xchg
movb
xchg
pop
add
add
add
add
add
add
add
add
sbb
testl
or
out
add
repz
out
or
jmp
or
filds
fcoml
xlat
add
xchg
fildl
int3
xchg
iret
add
xchg
roll
fcoml
lret
add
xchg
mov
add
mov
add
cmpsl
add
jbe
cmpsl
mov
add
mov
add
in
mov
pop
lret
jbe
inc
mov
cld
pushl
jbe
add
int3
das
inc
mov
mov
pushl
les
mov
aaa
add
in
sti
clc
imul
addl
mov
scas
jbe
add
cld
inc
fnstenv
inc
add
cmpsl
test
fcmovnu
xchg
mov
xchg
lret
xor
add
orb
add
fs
fs
adc
call
in
and
and
jg
scas
sbb
add
lret
inc
iret
jmp
adc
adc
pop
cltd
jmp
sbb
mov
int
cmp
repz
jo
mov
test
test
jmp
add
add
arpl
mov
mov
into
and
jno
ds
cmp
jl
jg
out
dec
inc
clc
out
mov
jmp
stos
cmp
add
ret
mov
mov
jae
ret
shl
popa
clc
jmp
jbe
nop
shll
jmp
icebp
jecxz
jmp
jecxz
imul
and
icebp
jecxz
jmp
add
add
std
imul
add
inc
mov
add
lret
iret
jbe
jmp
stc
inc
mov
into
jae
fcmovne
idivb
mov
jge
jg
mov
rorl
mov
inc
pop
scas
add
dec
dec
stc
inc
scas
dec
jne
iret
lret
jae
repz
adc
jge
xchg
jae
hlt
sub
incl
add
add
mov
xchg
xchg
mov
fmull
add
cmp
ret
adc
jge
xchg
jae
fs
pushl
xchg
pop
mov
fisttpl
mov
cltd
int3
mov
or
repz
mov
push
dec
sbb
cmpsb
ss
pop
das
std
pushl
add
add
xchg
or
div
subb
ja
add
dec
mov
or
ret
out
add
clc
ss
std
imul
mov
mov
addl
ret
jl
out
inc
mov
cwtl
xchg
sub
sub
out
mov
mov
mov
jns
or
and
add
add
ja
std
pop
pusha
sub
insb
pcmpgtw
dec
jmp
popa
xlat
std
stc
push
dec
add
fcmovnu
jmp
popa
mov
add
jmp
popa
cmpsl
std
dec
ja
add
pushf
sub
ja
add
leave
jbe
or
sub
mov
push
cmp
hlt
loop
jmp
fistl
inc
sub
rcrb
call
aad
ret
inc
sbb
rcrb
call
aad
ret
push
lods
inc
xchg
mov
dec
jmp
ficompl
jl
fdivrl
sub
xchg
ret
shll
pop
clc
xor
xchg
call
stos
push
test
test
iret
insl
in
xor
xchg
loop
imul
add
add
std
decl
adc
iret
dec
js
fcoml
cli
lcall
loopne
int3
xchg
add
inc
pop
stc
sti
dec
jne
lahf
shlb
add
stc
dec
dec
loopne
fstps
adcl
ret
negb
dec
mov
imul
cld
ret
sti
decl
inc
and
loopne
pop
pop
stc
call
lahf
fcoms
add
add
add
xchg
inc
and
push
jnp
sbb
pop
stc
decl
inc
sbb
mov
imul
jns
mov
in
clc
fnsave
stc
clc
ret
adc
pusha
std
inc
jmp
jg
ret
addr16
popf
push
sti
clc
mov
inc
sbb
ja
push
cld
push
in
popa
xchg
sti
jl
add
add
inc
add
mov
xor
jge
mov
mov
test
dec
sti
mov
jno
jg
push
sti
clc
or
pop
imul
lar
jbe
cli
fstl
inc
ret
mov
push
ror
add
mov
xchg
xlat
add
push
inc
repz
jns
inc
mov
movsl
mov
jecxz
pop
pop
jmp
pop
pop
cli
icebp
add
xchg
add
pop
pop
inc
xor
jecxz
divb
sub
std
push
push
nop
aad
sub
loop
test
sub
add
xchg
pop
pop
pop
pop
clc
jmp
in
sbb
cmp
or
lods
adc
hlt
mov
pop
clc
jmp
lods
sbb
aam
pop
insl
stc
cmp
or
lods
push
gs
mov
sub
push
ljmp
insl
mov
pop
sbb
test
xchg
insl
in
cmp
or
fcmovnb
call
stos
xor
push
in
call
stos
cmp
push
add
ljmp
mov
push
incb
add
add
mov
sarl
jne
adc
fucomip
sbb
loopne
jnp
fsubr
add
rcrb
decl
addr16
push
push
mov
pop
jl
inc
mov
push
loopne
notb
call
pop
loop
add
nop
call
ret
out
push
add
mov
inc
outsl
xchg
mov
mov
jge
incl
jnp
dec
jmp
add
or
lcall
jnp
mov
jno
or
and
jno
sbb
and
jno
ffree
stc
clc
ljmp
add
mov
test
imul
mov
addr16
sbb
ja
mov
lcall
add
cmpsb
cmpl
jno
pop
pop
stc
clc
push
cmpl
jno
dec
and
clc
push
out
push
mov
push
call
jbe
push
mov
fwait
int3
negb
xchg
xor
sbb
or
imul
aam
lahf
divb
or
out
enter
sbb
fsubr
mov
outsl
testb
add
push
add
add
add
dec
arpl
mov
dec
addr16
jge
imul
xchg
std
pop
outsb
push
imulb
imul
mov
push
inc
cmc
dec
dec
imul
add
ret
lock
push
test
je
sbb
cmc
sub
test
insl
out
push
sub
mov
mov
insl
fmuls
idiv
cmpsb
call
jecxz
addl
add
add
clc
mov
fidivl
rcr
nop
xor
hlt
fidivl
mov
pop
clc
pop
xor
or
adc
sub
adc
lods
pushf
push
cmp
ljmp
test
shl
mov
test
je
imul
dec
pop
mov
cltd
test
je
imul
or
push
nop
or
stos
hlt
decl
jne
loop
jae
pop
xadd
stc
subl
push
cld
dec
pop
mov
fcomps
decl
adc
mov
pop
stc
dec
push
xchg
in
call
fisttps
jnp
xchg
in
call
incb
inc
test
in
clc
jbe
outsb
adc
add
add
push
jae
nop
mov
cmp
jp
imul
and
aad
push
inc
hlt
mov
jno
jg
imul
add
fcoml
pop
jb
or
enter
add
cmp
std
jb
mov
jg
scas
imul
add
add
add
push
in
clc
jb
push
mov
out
fmuls
adc
dec
push
imul
insb
adc
into
icebp
repnz
fdivrl
fsubr
pop
xlat
repnz
adc
mov
les
repnz
adc
fistpl
shl
push
data16
xchg
adc
push
pop
pop
shr
or
xchg
inc
push
ja
aas
mov
js
loopw
lods
push
sub
mov
push
cli
popf
push
inc
or
push
jae
stos
mov
lods
rcl
cmp
iret
pop
push
clc
push
addl
push
inc
push
test
inc
sti
testb
int3
push
insl
clc
push
sbb
fisubs
jne
mov
cmp
dec
pop
clc
lock
mov
add
add
clc
scas
cmp
or
arpl
dec
rcll
stos
xor
push
ljmp
clc
push
lea
cld
mov
pop
les
pop
clc
pop
js
ds
and
je
add
pusha
inc
and
lret
mov
cmpb
jae
shr
ret
dec
jge
jg
mov
roll
add
aas
roll
add
push
scas
add
sbb
stc
inc
scas
pop
inc
and
call
ret
xchg
pop
push
push
leave
adc
add
mov
orl
rclb
add
cmp
pusha
inc
and
push
andb
idiv
add
mov
push
sub
add
test
loope
aad
jnp
add
das
and
add
gs
jne
icebp
iret
jae
add
mulb
sbb
mov
push
lods
notb
inc
les
push
xchg
jae
pop
mov
jae
insb
sahf
jae
xor
jae
cmp
jae
inc
fwait
jae
dec
cwtl
jae
adc
jae
sbb
jae
and
pusha
sub
popa
and
add
incb
mov
ja
call
jmp
insb
or
jmp
aam
lret
call
and
lret
lret
cmpl
mov
jp
lods
out
mov
data16
jmp
ret
mov
lcall
lods
imul
scas
mov
add
dec
arpl
orb
or
add
or
test
fwait
int
addr16
jno
xchg
outsb
pop
stc
dec
fwait
adc
xor
push
clc
ljmp
les
in
jns
jmp
xchg
xchg
jmp
push
test
out
sbb
jne
mov
pop
clc
hlt
addr16
sbb
sub
push
cmp
jmp
dec
shll
int
out
and
clc
jmp
and
decl
adc
mov
jne
adcb
sti
push
cmp
pushf
xchg
add
mov
out
jg
rdpmc
or
fistpll
clc
jae
imul
cmp
andl
add
fistpll
divb
inc
clc
cmp
push
mov
clc
lcall
push
jne
adc
add
test
stc
lcall
out
pop
rcll
ret
pop
cmp
jne
push
clc
sbb
pushl
jae
jge
pop
add
mov
add
lock
cmc
mov
aaa
daa
mov
movsb
shlb
repz
cmpb
add
stos
cmp
in
clc
jb
shlb
sarl
xchg
hlt
jl
outsb
outsl
add
movsb
mov
mov
add
stc
aam
or
test
std
inc
mov
ret
inc
iret
cmp
mov
inc
sbb
fimull
push
or
imul
add
cmpsb
out
mov
int3
jmp
push
lea
sub
jmp
cmp
fidivrs
dec
sti
jmp
adc
cld
fildll
in
push
shl
inc
xchg
lea
dec
jecxz
ljmp
loop
and
ljmp
iret
jle
test
and
inc
lret
popl
jmp
lcall
jmp
out
call
jne
mov
and
jae
shr
je
sbb
ret
adc
adcl
push
cmpl
jnp,pt
fistpll
pop
inc
mov
shll
jmp
dec
ds
add
ret
shll
testb
mov
lahf
movsb
call
push
mov
jne
mov
add
lret
aaa
scas
add
ss
ret
icebp
dec
clc
fdivl
fiadds
adc
or
dec
jne
aam
pop
call
pop
adc
call
ret
add
in
repz
inc
sbb
je
ret
push
add
mov
je
mov
add
add
cmp
dec
addr16
repz
nop
jp
movsb
in
pushl
push
cmp
sbb
add
mov
push
dec
jg
lahf
sub
out
jb
mov
push
cmpl
jmp
clc
loop
ss
mov
sbb
mov
mov
add
jo
stc
mov
aaa
pop
mov
les
cmp
lcall
dec
popf
in
clc
xorb
mov
add
clc
mov
jnp
xlat
clc
jl
inc
add
out
dec
jne
cmc
mov
add
pusha
dec
loopne
divb
divb
icebp
push
or
lcall
mov
jp
in
dec
stos
faddl
cmpsl
out
aam
add
jbe
push
test
stos
mov
mov
jge
mov
mov
add
fwait
xchg
jns
and
mov
pop
add
dec
ljmp
dec
ljmp
xchg
mov
dec
add
das
dec
clc
jmp
mov
add
cmpsb
popl
sbb
mov
add
mov
add
cmpsl
popl
in
xor
mov
add
mov
add
mov
dec
clc
jmp
mov
add
inc
dec
clc
test
dec
clc
jmp
mov
add
adc
sbb
ds
clc
jmp
mov
add
or
add
cmc
decl
add
or
add
out
cli
hlt
ljmp
add
decl
add
fmull
hlt
call
adc
add
fmull
hlt
clc
sahf
add
lods
sbb
lcall
add
mov
hlt
call
push
cmc
decl
add
mov
hlt
jmp
add
dec
xchg
add
pop
xchg
add
pop
xchg
add
mov
add
mov
mov
xor
mov
and
cld
sbb
mov
or
mov
add
cld
cli
adc
cld
repnz
loop
cld
fisubrl
mov
rcrb
cld
lret
cld
ret
cld
mov
add
add
inc
mov
mov
shlb
cld
mov
sbb
cld
jp
mov
jb
mov
push
mov
bound
cld
push
pop
mov
inc
lcall
inc
dec
xchg
xor
add
inc
dec
lods
sbb
lods
adc
lcall
es
sahf
lcall
add
jmp
adc
roll
cltd
leave
inc
mov
roll
mov
inc
into
cwtl
test
inc
cwtl
cltd
inc
loop
xchg
inc
pusha
cwtl
mov
cwtl
addl
cwtl
jno
mov
mov
add
mov
add
adc
sbb
adc
pop
inc
clc
fwait
push
inc
clc
mov
pop
inc
clc
jns
inc
clc
imul
clc
xchg
clc
popf
push
inc
clc
mov
adc
sbb
adc
sbb
inc
clc
daa
or
inc
clc
lcall
clc
imul
clc
push
push
inc
clc
cmp
clc
cmp
clc
aas
pop
inc
clc
inc
push
inc
clc
dec
sbb
add
hlt
ljmp
add
add
hlt
ljmp
div
cmp
hlt
ljmp
div
inc
div
call
div
mov
in
hlt
lcall
div
decl
div
jmp
stc
hlt
lcall
stc
hlt
pushl
hlt
decl
pushl
hlt
js
hlt
decl
hlt
cli
clc
hlt
pushl
div
pushl
div
call
hlt
incl
add
add
clc
hlt
pushl
hlt
jp
hlt
pushl
lods
test
cld
test
cld
push
cmpsl
test
cld
inc
push
xchg
cld
cmp
xchg
cld
xor
cld
sub
cld
and
cld
sbb
cld
adc
popf
cld
or
cld
add
sahf
cld
cli
push
sahf
cld
repnz
cld
loop
popf
cld
fiaddl
sahf
cld
lret
cld
ret
cld
mov
add
cld
mov
mov
mov
mov
jns
lcall
inc
jb
popa
inc
mov
pop
inc
les
dec
inc
mov
inc
inc
mov
xor
mov
and
cmpsb
sbb
mov
or
movsb
add
movsb
stc
inc
push
icebp
inc
inc
movsb
jmp
inc
sub
inc
mov
roll
mov
inc
mov
jg
inc
push
jg
inc
add
inc
clc
or
fldl
inc
clc
lret
sti
inc
clc
mov
jmp
clc
std
jecxz
clc
inc
clc
fcmovnbe
inc
clc
xor
inc
clc
movnti
aaa
mov
inc
clc
push
stos
inc
clc
push
mov
inc
clc
pop
xchg
inc
clc
mov
inc
clc
addl
jnp
clc
cmp
clc
and
or
popl
sti
xor
sub
and
mov
add
mov
and
popl
orb
add
out
sbb
cmc
jmp
incl
add
add
add
cmc
pushl
sbb
cmc
ljmp
push
cmc
jmp
push
cmc
dec
push
cmc
dec
push
cmc
ficomps
cmc
incl
push
cmc
decl
cmc
jmp
cmc
jmp
sbb
cmc
fimull
cmc
inc
sbb
cmc
pushl
add
add
jmp
cld
lcall
add
sub
mov
test
cld
push
test
bound
test
cld
push
xchg
test
cld
inc
cmp
cld
xor
stos
cld
and
test
cld
adc
test
cld
cli
dec
test
cld
ljmp
add
inc
test
ficompl
cld
sarb
test
lret
cld
ret
test
ds
add
mov
ds
scas
xchg
ds
mov
mov
scas
jns
inc
scas
jno
push
scas
imul
loopne
pop
ds
push
mov
inc
ds
lods
cmp
lcall
mov
lods
sbb
pushf
scas
adc
push
test
ds
ds
test
icebp
cmp
aam
loope
call
stos
sarl
clc
sub
cmp
cmp
cmp
pop
popa
cmp
imul
ja
cmp
dec
dec
cmp
xchg
arpl
mov
push
cmp
dec
cmp
andl
cmp
rcll
cmp
rorl
cmp
fwait
and
scas
sbb
cmc
adc
int
cmp
sti
pusha
cmp
jmp
cmp
pop
push
cmp
and
clc
xor
clc
xor
push
cmp
test
clc
mov
push
cmp
lahf
or
call
hlt
ds
hlt
call
out
jmp
out
call
out
pushl
call
hlt
incl
add
add
hlt
call
hlt
incl
hlt
pushl
jmp
pushl
hlt
pushl
hlt
jmp
jmp
dec
call
add
mov
cmc
decl
sbb
call
sbb
ljmp
sbb
lcall
cmc
push
pop
cmc
ficoms
cmc
call
push
cmc
cli
sbb
xchg
cld
loop
xchg
cld
ficompl
xchg
cld
lret
cld
ret
cld
mov
xor
cld
mov
dec
xchg
cld
xchg
sub
mov
cld
pushl
stos
xchg
jb
add
xor
lds
add
xor
xchg
cld
cmp
add
xor
cmp
xor
jge
cld
or
add
xor
add
add
cmovle
paddsb
mov
xlat
add
cmp
add
por
mov
sti
add
psubsw
mov
out
add
in
lcall
bound
jno
jbe
imul
js
pop
cmp
lcall
adc
xor
push
lcall
jl
sbb
ljmp
cmp
cltd
xor
clc
scas
sub
clc
adc
inc
cmp
jmp
cmp
flds
clc
movsl
es
lods
es
jmp
mov
pop
sbb
hlt
test
add
mov
or
lods
ds
adc
int
std
adc
jecxz
movsl
shrl
dec
ror
add
into
pop
mov
lods
gs
lock
jecxz
add
loop
insb
test
mov
add
imul
test
add
fs
fstl
mov
add
xchg
mov
fstl
jne
aaa
add
inc
jb
scas
inc
imul
cmp
fdivs
add
fsubrs
outsl
push
pushf
mov
mov
scas
push
mov
push
jno
jo
insl
enter
mov
and
push
inc
jo
data16
faddl
add
xchg
inc
imul
adc
mov
pop
pop
xchg
and
addr16
adc
addr16
or
mov
push
je
lds
es
mov
add
add
push
outsb
pop
les
pop
jne
add
xchg
push
pop
and
movsl
add
popf
inc
imul
imul
cld
push
mov
arpl
pusha
push
jno
dec
roll
shlb
clc
and
sti
dec
pusha
arpl
popl
mov
jmp
add
mov
fs
loop
gs
mov
inc
popa
popa
popl
jo
push
aas
lods
aaa
push
mov
insl
add
lods
daa
imul
arpl
fucomip
add
movsb
add
mov
std
addr16
nop
sbb
mov
enter
mov
pop
enter
jmp
add
add
stos
jmp
scas
shrb
mov
jp
rcrb
lret
xorb
xchg
jp
add
mov
data16
jge
mov
insb
push
pop
cmp
inc
push
test
pop
dec
pop
mov
cmp
imul
mov
add
aad
sbb
movsb
or
add
add
popl
xchg
movsl
inc
fisttpl
mov
push
int3
sarl
add
lods
mov
pand
cmc
lods
push
insb
outsl
test
je
mov
add
inc
gs
imul
pop
insb
sub
add
inc
jne
jns
bound
scas
push
outsb
jg
xor
gs
and
mov
pop
jbe
jl
jae
cmpsb
imul
imul
mov
jb
shrl
leave
ret
push
add
nop
xor
gs
cmpsl
imul
imul
add
mov
push
arpl
push
dec
imul
sbb
xchg
or
cwtl
or
mov
decb
add
push
add
add
jnp
dec
insl
popa
jne
xchg
mov
dec
imul
inc
arpl
cmp
mov
cld
cmp
ret
arpl
popa
imul
push
push
dec
or
push
add
cmp
inc
add
int
fcmove
loopne
fstpt
inc
fnsave
mov
fidivrl
lret
add
add
mov
bound
mov
sub
gs
jp
push
movsb
dec
push
push
flds
xchg
xor
addr16
mov
ret
pop
pop
test
or
divb
cs
adc
or
fisubl
add
add
add
aad
loopne
and
rcrb
stc
mov
insb
popf
mov
pop
jmp
xchg
mov
pop
jl
stos
mov
mov
pop
cmpsl
mov
cld
cmp
inc
push
scas
push
ds
into
js
mov
cld
sbb
ds
adc
lods
add
lods
fidivs
in
lods
add
mov
or
insb
ror
je
aam
jne
test
push
dec
rolb
test
fs
fs
lea
popa
jo
inc
imul
inc
insb
inc
fisubrs
xor
stos
bound
fldl
add
mov
jo
pop
insb
xor
jp
js
jg
inc
add
add
jo
push
jae
data16
fldl
add
mov
lock
pop
insb
icebp
ja
insl
mov
rolb
shlb
imul
sbb
inc
adc
loopew,pt
xor
imul
push
imul
dec
pusha
insb
shlb
add
mov
push
aas
mov
xchg
add
pop
push
inc
cmpsl
or
mov
add
add
add
add
push
lret
mov
push
arpl
add
iret
pop
push
inc
fldenv
inc
jne
push
mov
push
imul
mov
add
es
negb
movsl
cmc
or
or
jmp
pusha
mov
add
xchg
sahf
leavew
fdivrl
inc
fidivrl
mov
add
mov
movsb
push
xchg
mov
push
or
push
ja
jnp
xchg
test
mov
jmp
push
dec
mov
jmp
push
push
mov
add
mov
pop
sbb
sbb
arpl
mov
add
mov
add
fisubl
popa
cmc
fstpt
les
mov
jmp
shll
popa
mov
cwtl
mov
mov
mov
add
xchg
mov
inc
jl
mov
jmp
push
mov
popa
dec
jb
push
push
cmpsl
insb
jmp
push
mov
arpl
add
add
aam
outsb
call
xchg
inc
add
scas
insb
push
scas
enter
les
mov
insb
dec
mov
push
data16
imul
imul
lret
and
push
jb
ret
outsl
inc
sbb
das
add
push
pop
int3
data16
iret
pop
insb
cmp
add
xchg
inc
imul
xchg
inc
imul
add
add
int
gs
subb
jb
fistpl
pop
jb
outsb
push
fsts
daa
shlb
add
mov
and
je
test
sbb
das
arpl
sub
jecxz
pusha
add
and
inc
int3
inc
popa
inc
int
add
mov
pusha
insl
fadds
jb
inc
dec
add
call
add
xchg
ljmp
mov
add
mov
pusha
je
or
nop
or
pop
add
pusha
je
lods
bound
mov
jmp
dec
dec
mov
inc
pop
add
or
add
les
push
push
negb
fcompl
pop
mov
ljmp
add
add
mov
aaa
fsubrl
mov
push
repnz
stos
bound
mov
addb
mov
xor
mov
shll
addr16
movsb
pop
mov
cmpsb
mov
add
jo
jb
bound
pop
dec
adc
fistpl
in
jb
push
mov
sbb
add
add
mov
add
jb
push
movsb
pop
sbb
aad
add
arpl
push
lods
sti
mov
insb
les
mov
popa
lds
add
sbb
insb
mov
mov
std
mov
mov
push
je
pop
outsw
das
leave
gs
loopne
mov
add
add
inc
jnp
arpl
arpl
xchg
lcall
scas
dec
jne
scas
js
pushf
ret
add
gs
mov
ret
gs
outsb
mov
add
pop
outsl
jae
mov
inc
jno
push
jne
fsts
sbb
gs
inc
add
insb
push
pop
ret
das
mov
add
add
add
add
pusha
cmpsb
add
adc
dec
or
les
inc
xlat
push
jae
jnp
add
imul
adc
arpl
fcoms
and
jae
xchg
popa
add
addl
jge
outsb
rclb
popa
inc
fldl
pusha
je
pop
push
jae
pop
xor
add
jmp
push
imul
or
cwtl
mov
add
cmpsl
cltd
fs
mov
push
addr16
push
pop
mov
jne
push
mov
test
popa
mov
push
pop
mov
inc
push
push
mov
add
xchg
xor
lods
cmp
mov
pop
sbb
punpcklwd
lods
add
setl
add
add
add
lods
sti
push
fdivl
add
lret
lods
hlt
pop
fistps
lds
mov
test
and
bound
mov
inc
mov
imul
xchg
popl
ljmp
pop
movsl
jg
pop
mov
jb
mov
rcrb
cmpb
cmp
mov
add
push
mov
dec
pop
mov
push
mov
cld
adc
mov
or
mov
sbb
adc
xor
add
std
adc
sahf
cmp
stos
in
insb
rcl
fs
add
gs
dec
dec
pop
and
insb
sbb
in
dec
mov
imul
insb
inc
xor
jo
xor
insb
popa
fcoml
insb
dec
imul
call
xchg
hlt
add
pop
push
je
mov
popa
mov
push
jb
pusha
jno
pop
int3
add
jno
dec
jo
popa
push
imul
push
je
dec
xor
ss
mov
sub
sub
add
add
arpl
std
sub
imul
sub
arpl
xor
ss
mov
xor
lret
dec
arpl
cmp
aaa
add
mov
sub
adc
insl
push
arpl
jo
ss
mov
sub
xor
mov
push
fsubl
imul
jg
push
es
mov
sub
stos
cmp
fwait
enter
mov
mov
scas
add
mov
ss
mov
scas
push
subl
cmpsb
sub
xorl
dec
lahf
jmp
sub
pop
xor
pop
xor
sbb
cmp
or
add
popf
inc
and
lods
sbb
add
mov
xor
sahf
adc
pop
mov
scas
add
mov
pop
cli
add
add
mov
popa
fs
lcall
into
stos
insb
xchg
fbstp
cmp
scas
fwait
fwait
inc
xchg
mov
mov
add
test
add
mov
jb
in
lret
out
add
rcrb
add
inc
inc
int
imul
mov
push
push
xchg
mov
add
add
pop
jo
dec
movl
jae
push
jo
add
imul
mov
pop
push
push
pop
push
add
add
pop
pop
aas
fmull
insb
dec
xor
popa
xor
outsl
dec
mov
add
insl
jo
gs
outsl
arpl
gs
lea
or
fistps
add
inc
gs
push
jae
int3
push
jo
cmpb
shlb
add
mov
xor
nop
sub
ss
mov
sub
fldt
insl
push
pop
arpl
add
add
cmp
push
mov
add
fimull
mov
loope
add
or
dec
pop
add
cmp
push
push
or
dec
pop
movsl
xor
or
mov
std
inc
push
mov
xor
cld
xchg
mov
sub
es
imul
jae
call
popf
sbb
fstpt
icebp
add
stos
in
inc
repnz
cmc
cmp
stos
jmp
sub
int3
lds
pushf
popf
cs
test
add
cmpsb
sub
mov
dec
lahf
test
cmpsb
sub
mov
add
int3
mov
popa
lcall
je
insl
push
push
pushf
pop
and
add
xchg
es
and
inc
add
add
sbb
sub
shlb
popa
push
rcrb
jge
rcrl
add
push
sti
mov
sbb
mov
int
mov
jno
xlat
stos
push
aad
add
mov
addr16
sarl
jae
shll
add
movsl
mov
stos
mov
add
jae
add
pop
xchg
lods
jae
aam
push
dec
aam
add
mov
pop
add
xor
gs
in
push
arpl
jo
add
ss
push
je
xchg
mov
cwtl
popa
push
ja
addr16
gs
xchg
repnz
imul
xchg
xchg
pop
jne
push
add
add
add
xor
gs
lds
sub
insb
add
mov
ret
inc
data16
xor
mov
push
imul
cmp
popa
or
xor
push
pop
push
pop
cmp
inc
sbb
inc
outsb
adc
and
lea
push
mov
add
aam
and
test
imul
add
add
jge
aam
jae
fs
sbb
mov
pop
imul
clc
and
fldenv
arpl
stc
push
add
lcall
dec
fbld
arpl
add
mov
and
and
sub
rcrb
iret
jmp
and
aam
and
mov
add
ret
add
lods
or
loope
cld
inc
int3
mov
xchg
add
call
test
sub
popl
dec
jno
stos
sub
lods
lret
bound
jno
push
lcall
sub
mov
sub
jne
dec
mov
add
mov
add
xchg
stos
jae
cmpsb
pop
ss
add
fisubrs
cmp
cmpsb
pop
xor
iret
lods
addr16
mov
add
add
pop
decl
mov
inc
or
sahf
dec
cmc
fwait
cmpsb
push
int3
fldenv
pop
into
iret
lods
insb
loopne
fs
shll
mov
jae
pushfw
mov
add
scas
cmpsl
mov
push
push
add
pop
arpl
imul
pop
pusha
imul
jp
inc
into
outsb
imul
imul
jp
inc
enter
mov
mov
rol
bound
mov
dec
mov
push
outsl
std
arpl
insl
insb
gs
inc
add
insb
dec
add
dec
inc
jns
dec
push
mov
push
jns
imul
push
mov
xor
cmc
sub
pop
or
mov
std
dec
pop
or
insl
inc
adc
cmp
lock
cmp
inc
adc
dec
pop
push
pop
inc
push
xor
leave
pop
add
jne
pop
loope
and
fdivs
pop
rclb
add
xchg
inc
pop
int3
sbb
imul
aas
xor
nop
jmp
sub
mov
inc
addr16
push
pop
jno
push
dec
nop
loop
arpl
fs
xchg
mov
ja,pn
xchg
gs
and
add
dec
pop
push
shr
mov
and
les
in
inc
and
jmp
push
mov
stos
jmp
and
ret
imulb
test
sti
sub
mov
out
add
test
lds
mov
and
fldt
xchg
movsl
and
mov
add
lret
xchg
nop
lcall
add
cmp
xchg
stos
add
pop
addr16
mov
pop
add
jb
jb
lds
jb
leave
fwait
addr16
test
inc
xchg
mov
cmp
movsb
mov
add
nop
add
rcrb
in
arpl
test
jae
in
jo
fldenv
add
dec
shlb
popa
pop
je
push
arpl
pusha
pop
jo
insb
push
sub
xchg
inc
gs
arpl
addr16
add
arpl
popa
pop
adc
addr16
jne
jbe
add
xor
inc
jmp
mov
add
es
xor
dec
push
bound
dec
arpl
add
add
add
push
arpl
pusha
imul
testb
xchg
xor
jno
xor
cmp
fldcw
add
aad
insb
push
loope
imul
add
mov
sbb
dec
or
je
prefetcht1
daa
outsb
sbb
sub
lret
pop
add
mov
sub
mov
decb
add
add
aas
outsb
fadd
cmp
andl
mov
sub
adc
insl
shlb
ja
adc
inc
lret
cmp
sbb
dec
lods
fidivl
xchg
mov
lds
test
and
xor
scas
mov
and
pop
add
mov
mov
cmpsb
jnp
andb
mov
and
mov
cmp
push
scas
pop
sub
movsb
aaa
cmp
cwtl
xor
add
dec
cmp
or
int
mov
cwtl
mov
or
or
loop
pop
push
jmp
add
mov
popa
aad
mov
loope
popl
enter
ja
pop
xlat
ret
mov
movsb
into
mov
pop
movb
add
xorl
test
dec
jmp
xchg
arpl
scas
jmpw
add
ficompl
insl
dec
negb
imul
xchg
mov
pop
cmp
mov
add
lcall
add
jo
imul
jno
add
xor
gs
pop
imul
mov
add
xchg
mov
je
jo
pop
pop
jbe
jae
addr16
mov
push
add
mov
fs
gs
outsl
pop
sub
fs
add
push
inc
int3
push
and
insb
mov
insb
push
xchg
jbe
add
add
mov
gs
cld
test
jbe
imul
pop
inc
pushf
mov
dec
movsl
mov
dec
mov
ljmp
mov
cmp
test
pop
add
fcompl
dec
pop
sti
and
out
pop
pop
cmc
pop
pop
inc
adc
mov
add
add
je
cli
add
mov
push
mov
add
add
and
cld
dec
adc
adc
adc
and
push
sub
daa
add
mov
cmp
lret
int3
add
inc
ss
cmp
iret
stos
sbb
test
mov
sbb
stos
lds
lods
ret
scas
mov
add
lcall
js
lcall
add
add
lea
je
jne
dec
cmpsb
outsl
sub
lcall
sbb
inc
sub
lods
dec
xor
iret
jmp
cmp
int
xor
movb
mov
add
cwtl
fwait
push
sub
mov
insb
sbb
push
push
loopne
ret
ja
jo
mov
insb
jb
mov
add
lret
rol
push
add
mov
imul
shll
mov
popa
popf
scas
mov
insb
mov
popa
mov
jl
jmp
ficoms
push
rolb
insl
dec
loopne
add
enter
test
cmp
add
xchg
push
popa
mov
stos
gs
jb
add
xchg
push
popa
sub
js
mov
lods
push
add
inc
push
pop
arpl
cs
scas
add
xchg
xor
outsb
clc
into
pop
outsb
stc
imul
push
fcoml
inc
sub
insb
sub
push
add
stos
arpl
js
inc
insb
gs
cld
dec
in
mov
dec
or
arpl
add
add
pop
cld
sbb
lret
jmp
pop
arpl
mov
add
stos
icebp
sub
mov
cld
cmp
lods
and
stos
pop
imul
arpl
cmp
arpl
xor
fstps
add
and
addr16
pop
xor
sbb
jbe
clc
add
cmp
addr16
sbb
add
add
sub
pop
sub
jmp
sbb
jge
xor
outsl
xor
sub
icebp
add
push
cmp
into
pusha
adc
add
mov
xor
jbe
and
orl
inc
fisttpl
cld
and
jb
das
mov
jge
inc
xchg
jl
and
jl
and
mov
add
stos
pop
jp
xchg
and
xchg
push
rcr
push
jnp
add
insl
and
jl
test
insb
insb
adc
pop
sub
popl
sbb
sbbl
js
dec
movsl
je
inc
xchg
push
inc
jmp
xchg
jnp
or
push
jmp
aam
pop
cmc
aad
bound
aam
insb
jmp
mov
add
aad
inc
mov
aad
cmp
movsb
je
les
jo
mov
add
xchg
push
inc
jmp
mov
popl
add
inc
gs
mov
xor
popa
repnz
cmp
pushf
mov
push
icebp
mov
push
add
inc
fs
dec
fs
stos
add
in
inc
mov
ret
imul
mov
inc
gs
aas
inc
mov
add
lods
insb
gs
ss
icebp
mov
imul
lret
aas
xor
call
mov
inc
lds
cmp
bndldx
clc
add
adc
sbb
adc
imul
add
add
addr16
insl
push
int
dec
add
push
mov
pop
mov
dec
aas
test
pop
loope
aaa
jb
mov
add
mov
jb
or
dec
cwtl
movsb
pop
pop
mov
test
daa
imul
adc
mov
sbb
add
mov
dec
aas
jl
sbb
push
clc
add
jbe
lea
pop
je
xor
add
add
xchg
add
scas
push
repnz
test
adc
test
push
insl
outsl
add
pop
sbb
mov
jmp
and
andl
mov
jno
and
addl
js
push
leave
js
and
jb
das
jl
cld
adc
xchg
jp
xor
sti
add
jb
das
mov
pop
mov
pop
jb
add
mov
cltd
cwtl
addr16
mov
ja
jb
andl
popl
mov
fimull
mov
jo
adc
insb
dec
push
data16
jbe
dec
mov
add
xchg
jns
sub
xchg
push
jb
mov
imul
stos
jne
or
addl
mov
xchg
out
inc
or
adcl
jns
lods
fimuls
jb
movb
add
scas
push
je
mov
popa
int3
mov
xor
loope
insb
xor
gs
popf
arpl
push
fs
movsb
fs
insb
jo
mov
jb
lret
push
repz
add
or
add
add
mov
arpl
push
add
xor
outsb
test
shrl
mov
outsl
mov
add
jo
aas
outsb
or
inc
gs
iret
or
je
add
inc
sub
xor
dec
sub
outsl
dec
lret
xor
add
inc
sub
sbb
xor
mov
dec
sbb
sbb
mov
mov
add
add
dec
sbb
dec
adc
arpl
pop
inc
add
mov
xor
dec
push
aas
mov
cld
inc
rcrl
cmp
jge
push
fs
mov
lcall
push
arpl
and
adc
push
jmp
adc
push
jnp
push
dec
push
mov
push
js
inc
mov
mov
insl
jnp
xor
imul
push
cs
subl
out
mov
sub
insb
cmp
or
pop
jmp
jp
cli
jne
sub
jne
sbb
imul
rclb
xor
jno
daa
cwtl
dec
jmp
xor
jnp
sbb
add
add
insb
enter
ror
fs
lds
dec
mov
data16
enter
mov
mov
add
fnstsw
mov
lret
jnp
jmp
fnstsw
jnp
ret
shll
dec
popf
jne
and
cmp
xor
jo
sbb
add
nop
jnp
sbb
fs
out
popl
cmp
mov
arpl
mov
je
mov
fs
cltd
gs
or
add
mov
push
arpl
data16
sbb
push
dec
inc
add
arpl
dec
dec
popa
dec
push
push
fs
mov
add
enter
push
arpl
add
lds
arpl
lcall
jne
mov
jb
cltd
arpl
sti
add
stos
inc
stos
lcall
je
dec
sub
mov
add
mov
pop
je
mov
jo
rorl
outsb
pop
in
arpl
add
inc
dec
push
je
dec
sub
dec
add
es
push
add
add
add
mov
sub
add
adc
arpl
stc
add
mov
push
imul
or
mov
or
xor
jb
pop
call
clc
add
shll
mov
lea
into
insb
add
pushf
jns
add
mov
sbb
jne
insb
jg
adc
xchg
das
add
jns
xor
add
add
sub
mov
sbb
mov
sub
insb
mov
mov
adc
insl
jnp
iret
imul
clc
push
dec
sbb
or
inc
sbb
jge
add
lea
sbb
jg
sbb
push
sbb
pop
add
clc
popl
add
jne
add
imul
mov
jl
sti
fnsave
sbb
jb
cmp
jne
lds
insb
jo
mov
cmpsl
mov
popl
test
jne
mov
imul
js
int
insb
nop
lret
jne
nop
loop
pop
jnp
add
arpl
push
push
cwtl
jne
inc
pushf
jno
jmp
mov
add
dec
mov
add
add
add
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fmull
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
mov
add
pushf
xchg
add
mov
add
pop
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
adc
popl
cmc
xlat
add
popl
jno
dec
add
cli
dec
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
push
mov
cmp
leave
mov
sbb
mov
add
mov
add
mov
add
loop
imul
inc
clc
idiv
mov
add
mov
add
mov
add
popl
push
mov
add
mov
add
jl
add
or
add
mov
cmc
aas
pop
nop
add
dec
nop
add
dec
enter
nop
add
pop
nop
add
dec
sbb
inc
dec
nop
add
sbb
add
fdivl
inc
or
add
or
add
lods
aam
inc
sbb
add
or
add
lock
inc
fmull
add
int3
popl
add
popl
and
push
inc
int3
popl
add
sti
mov
add
popl
mov
mov
enter
jns
cmpsl
push
lods
js
cmc
cwtl
cmp
cwtl
lret
testb
push
jb
inc
cmpsb
or
inc
mov
pop
lahf
stc
roll
mov
jno
rclb
lcall
stc
rcr
and
jb
insl
cmpsl
je
ja
pusha
rcr
mov
fsubs
add
mov
add
hlt
into
lret
jbe
mov
es
insb
andl
nop
in
adc
and
out
sbb
test
add
decb
lods
jae
subl
jl
jne
loopne
dec
das
shll
mov
test
repnz
xor
xor
add
sbb
push
pop
in
mov
jns
push
xchg
add
add
push
decl
pop
arpl
lds
xchg
xor
mov
loope
inc
outsb
ljmp
mov
imul
mov
mov
add
les
jb
cmp
mov
sbb
cmp
cmp
aaa
sub
movsl
pop
add
popa
setbe
ljmp
mov
jl
dec
push
movsb
lods
ljmp
inc
rorb
aaa
fimull
fimuls
sub
or
in
aaa
jb
loope
cmc
lea
aaa
jnp
dec
cmp
lcall
add
dec
stos
push
cmp
in
shl
push
sub
sub
mov
add
inc
arpl
push
pop
aas
stos
xor
lea
adc
mov
ljmp
xchg
in
cwtl
je
sbb
push
ds
xchg
add
mov
xorl
push
cs
lods
and
lret
stos
cmp
or
cmp
pop
sarl
inc
add
or
pop
hlt
cmp
icebp
inc
xchg
inc
stc
mov
sbb
test
push
in
inc
jbe
jne
mov
mov
mov
scas
movsb
inc
xor
leave
ret
inc
in
ds
mov
add
sub
shrl
jae
cli
cwtl
sbbl
push
out
addr16
add
fnstenv
pop
mov
mov
push
xlat
scas
call
add
mov
dec
pop
dec
nop
jmp
add
std
daa
jp
jmp
add
clc
mov
xchg
mov
xchg
mov
cmp
add
jmp
add
lock
mov
jmp
add
popl
jmp
mov
add
mov
add
mov
jmp
mov
add
mov
add
push
mov
jmp
mov
add
mov
add
push
mov
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
mov
add
mov
add
mov
jmp
mov
add
mov
add
mov
jmp
mov
add
or
add
js
xor
add
nop
add
int3
nop
add
ret
add
nop
add
fcoml
add
and
xor
add
add
mov
nop
add
pushf
nop
add
mov
add
add
add
add
add
add
add
add
nop
add
sbb
add
or
add
mov
out
add
out
add
out
add
add
add
push
dec
ds
add
mov
add
mov
add
mov
cmp
mov
add
mov
add
mov
add
mov
cmp
mov
add
mov
add
mov
add
mov
cmp
mov
add
mov
add
mov
add
mov
cmp
mov
add
mov
add
mov
add
mov
cmp
mov
add
mov
add
mov
jmp
add
pop
cmp
mov
jmp
add
xor
repz
popl
cmp
mov
jmp
add
pop
fiadds
add
add
aaa
fdivp
popl
jmp
mov
add
mov
add
lock
jmp
mov
add
mov
add
adc
jmp
mov
add
mov
add
mov
add
mov
add
mov
jmp
mov
add
mov
add
jb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
mov
add
dec
lea
add
aaa
add
add
or
add
or
aaa
add
add
or
add
in
sbb
add
mov
add
mov
add
mov
add
add
int3
mov
add
mov
add
aaa
add
add
mov
add
add
mov
add
add
add
add
aaa
add
out
add
cmp
mov
add
mov
add
mov
add
mov
imul
mov
add
mov
add
mov
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
cmc
ds
add
mov
add
mov
add
mov
ds
add
mov
add
mov
jmp
stc
mov
jmp
pop
repz
rcrb
movsl
adc
jne
test
jne
mov
jne
cltd
adc
jne
test
adc
jne
test
jne
pop
adc
cmc
lods
adc
xchg
adc
mov
cmc
xchg
adc
lods
adc
add
add
popl
add
rorl
mov
popl
push
ret
push
mov
scas
add
scas
add
scas
add
scas
add
xchg
scas
add
subb
sbb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
xchg
imul
mov
add
in
xchg
cmp
fldcw
cmp
repz
add
clc
fincstp
ds
ds
pop
aas
add
pushf
fadds
aas
jl
xchg
aas
test
fwait
aas
dec
aas
fsubl
add
mov
ret
xor
ret
jecxz
js
repz
add
test
adc
mov
and
mov
ret
inc
xor
push
xor
arpl
mov
int
les
mov
int
movsb
mov
movsb
mov
roll
int3
repz
int3
add
repnz
out
into
xor
loop
inc
out
into
push
push
into
arpl
lcall
dec
int
cmpsl
jb
mov
cmpsl
mov
into
roll
pop
int
xchg
add
hlt
into
and
pushf
iret
xor
in
inc
out
iret
push
mov
push
lahf
ss
push
inc
lahf
pop
push
lahf
inc
es
sub
data16
mov
add
lahf
int
mov
aad
mov
add
iret
jbe
adc
rclb
mov
push
rolb
pop
rclb
movsb
inc
shlb
movsb
sub
shl
mov
inc
rol
mov
aad
movsb
movsb
add
cmc
imul
cmpl
lds
sub
add
sub
pop
cmp
gs
cs
jb
cs
cmpb
int
fisubrs
fldl
cs
scas
cs
add
cs
out
cs
out
das
pop
add
cs
das
dec
add
das
xor
in
cs
in
cs
in
cs
in
das
fldl
shlb
mov
xor
mov
rclb
shlb
shlb
rolb
sarb
mov
mov
mov
add
mov
cmp
cmp
ja
cwtl
fstpt
nop
fildl
cmp
cmp
and
test
dec
cmp
ficompl
mov
addr16
fldt
fmull
cmp
in
repnz
pop
out
loop
daa
fistps
leave
aas
iret
xor
inc
iret
and
dec
mov
push
lret
dec
lret
cmpsb
lret
dec
lret
ljmp
mov
enter
enter
enter
enter
add
call
lcall
sar
enter
leave
inc
rolb
mov
ss
ret
test
leave
lret
mov
dec
fistl
lds
test
push
lds
cmpsb
in
mov
cmpsb
aad
stos
cmpsb
cmpsb
out
jae
out
add
lahf
in
roll
add
add
lahf
pushf
roll
mov
jns
or
dec
rorb
ret
shrb
mov
fmul
jecxz
pop
iret
insl
pushf
jne
icebp
pushf
mov
int
popf
daa
into
mov
inc
into
repz
mov
xlat
popf
add
stc
subb
icebp
js
popa
call
jl
add
cmp
outsb
popf
cmp
outsb
mov
cmp
jno
cmp
outsl
mov
ret
cmp
jl
cmp
insb
or
jg,pt
cmp
jg
cmp
insl
xchg
cmp
insb
push
cmp
cld
mov
xor
in
jns
cmp
add
out
jp
cmp
jae
jae
xor
inc
lock
add
lret
mov
int3
test
aas
int3
jno
ljmp
loope
enter
iret
mov
xlat
xor
mov
add
mov
add
data16
rolb
shrb
lea
jmp
mov
xor
popf
enter
ljmp
cmpsl
inc
xor
cmpsl
xchg
xor
cmpsl
xor
test
xor
add
add
cmpsl
sub
jp
shll
mov
dec
cmp
mov
cmp
mov
cmp
in
cmp
js
mov
fcompl
push
iret
xchg
ss
mov
xor
jle
outsb
aaa
nop
scas
pop
aaa
pushf
sahf
push
aaa
mov
mov
jecxz
loop
repnz
add
jle
add
aaa
psllw
aaa
and
lahf
inc
dec
inc
sti
fldln2
inc
dec
shlb
cmpsb
ret
pop
inc
cmp
mov
or
jg
scas
movsb
fiaddl
movsb
rolb
or
push
movsb
hlt
inc
dec
movsb
imul
mov
mov
xor
mov
jmp
add
jmp
lods
lahf
loopne
mov
mov
lcall
mov
inc
xor
xor
mull
xor
inc
mov
xorl
ss
outsl
xor
shlb
cmpsl
enter
rcl
mov
mov
xor
mov
mov
cmpb
mov
sub
in
cmpsb
sub
loop
sub
mov
sub
jnp
sbb
sub
hlt
ret
lods
sub
mov
insb
sub
jb
sub
xor
int3
sub
xlat
sbb
in
xchg
cs
mov
adc
mov
dec
ss
movsl
pusha
ss
jnp
xchg
test
ss
xchg
xchg
add
xchg
iret
ss
test
ss
test
ss
aaa
aad
aaa
aaa
push
test
aaa
push
test
aaa
subl
lea
das
test
aaa
fsubl
sti
aaa
pop
movsl
push
cmp
xor
jb
pop
cmp
cwtl
cmp
cmpsb
adc
cmp
shlb
add
mov
cmp
push
cmp
in
mov
xorl
mov
inc
jmp
inc
cld
pushl
add
fwait
xchg
xor
jmp
jge
mov
push
xor
int
xor
int3
loop
dec
mov
push
xor
cld
lods
cmc
cmp
lahf
leave
cmp
lahf
adc
mov
mov
cmp
int
sub
mov
inc
inc
push
mov
cmp
cmp
inc
mov
mov
cld
mov
jg
leave
mov
call
mov
scas
or
sarl
lahf
into
ds
add
add
dec
ds
jmp
add
loopne
cld
lahf
xchg
xor
mov
out
imul
mov
add
xchg
xor
loop
sub
mov
mov
sub
test
sub
and
jnp
add
mov
mov
sub
test
xchg
cli
out
cltd
cmp
fidivrs
cmp
fidivs
into
popa
cmp
or
push
mov
xor
dec
test
push
cmp
cltd
into
cmp
mov
cmc
cmp
cmp
cmp
sbb
lcall
cltd
cltd
mov
push
cltd
aad
push
cltd
cltd
inc
cmp
add
add
cltd
fs
cltd
xchg
jae
cltd
cmp
into
cmp
cwtl
in
xor
cwtl
jp
push
xchg
test
cmp
popf
push
cmp
dec
aas
cmp
popf
insl
cmp
popf
mov
cmp
popf
mov
cmp
pushf
loopne
mov
aaa
clc
cltd
xlat
adc
sub
dec
addb
jo
add
add
ss
lock
call
jg
inc
fistpl
cmp
ret
lret
cmp
mov
test
cmp
xchg
cmp
xchg
inc
cmp
mov
cmp
and
mov
fdivs
daa
in
xor
in
sub
xchg
les
cs
stos
cs
cmc
cs
xor
add
cmpsb
popl
ss
push
aaa
imul
das
andl
mov
ret
mov
mov
xor
movsl
dec
xor
movsl
push
xor
movsl
mov
xor
movsb
xor
movsb
cwtl
xor
mov
cmp
pop
cmp
xchg
dec
cmp
xchg
jne
mov
add
cwtl
lods
cmp
cwtl
fdivrs
cltd
jns
sub
adc
rclb
cmp
test
cmp
cwtl
sub
push
nop
sbb
xor
repnz
jnp
cmp
add
xor
xor
fcomip
ss
bound
int3
popl
jmp
mov
add
fidivl
push
mov
add
add
dec
sub
push
lcall
jbe
xchg
ret
das
in
and
das
mov
shll
cmp
xchg
out
cmp
pushf
pop
cmp
jp
addr16
add
cmp
sub
imul
cmp
fwait
pop
cmp
fwait
cmpb
pushf
xchg
cmp
scas
cmp
cmp
add
add
cmp
lcall
inc
xchg
add
or
idiv
xor
add
mov
and
aam
cmp
nop
mov
xorb
sahf
fwait
xor
sahf
xor
pushf
or
xor
mov
inc
xor
int3
daa
xchg
jae
rol
push
xor
ret
inc
xor
mov
stos
cmp
pushf
mov
add
mov
cmp
mov
xor
cmp
ss
out
pop
cmp
fistps
cmp
ffreep
cmp
into
mov
cmp
movsb
cmp
cmp
popf
mov
mov
pop
test
repnz
xchg
add
sbb
sbb
inc
jp
das
mov
das
xor
ljmp
add
lahf
in
into
lahf
scas
xor
lahf
shll
ss
pop
xor
lahf
dec
xor
sahf
out
xor
sahf
leave
xor
sahf
shlb
sahf
lods
xor
sahf
pop
xor
mov
jmp
add
popf
jmp
xor
mov
dec
xor
into
cmp
inc
cmp
lods
lcall
mov
jmp
add
xlat
lds
mov
add
mov
sub
sahf
enter
loopne
das
addr16
out
fidivrl
xor
lods
popl
jmp
mov
add
cmpsb
cmp
mov
aaa
das
scas
fwait
add
cmp
in
ret
push
negl
out
sub
loop
sub
outsl
rcl
cs
leave
inc
das
push
mov
loopne
mov
pushf
pop
cmp
mov
aaa
add
repnz
movsb
xchg
add
mov
js
cwtl
mov
mov
or
xor
pushf
mov
xor
fwait
mov
lock
mov
xor
fwait
shlb
nop
fdivs
cwtl
fwait
loopne
mov
call
xor
add
add
mov
add
adc
adc
adc
and
mov
sub
test
xor
lock
inc
xor
mov
xor
movsb
xor
test
push
in
xor
loop
and
xor
les
cwtl
fidivl
sbb
ljmp
cmpsl
mov
xor
add
add
ljmp
xchg
xor
sbb
pop
xchg
xor
or
push
out
xor
push
and
cs
push
nop
pop
cs
push
mov
cmpsl
or
mov
pop
cs
cmc
mov
popf
ss
or
sbbb
sub
pop
cltd
cmp
insb
cltd
push
cs
cwtl
enter
xchg
inc
cwtl
push
das
insb
cwtl
ss
scas
xchg
iret
das
mov
xchg
mov
fcoml
jp
and
sbb
mov
enter
mov
mov
jl
lcall
xor
xchg
pop
xor
xchg
insb
xor
xchg
inc
xor
aam
add
mov
cmpb
cltd
clc
cmp
jmp
cmc
mov
cmp
mov
mov
ss
add
ss
outsb
xor
data16
cmpsb
push
xor
push
xor
push
xor
xor
xchg
xor
xor
xchg
xor
push
xor
out
xor
out
xor
leave
mov
enter
ror
xor
cmp
fwait
sti
xor
popf
add
aad
or
fstpl
sbb
std
popf
and
cmc
popf
sub
std
popf
xor
jne
cmp
fstpl
dec
xor
push
xor
pop
xor
arpl
jne
imul
popf
jae
jne
jnp
pop
pushf
divl
adc
pushf
lock
add
dec
cltd
cs
ficomps
push
mov
stc
aaa
scas
cmpsb
push
cmp
js
mov
and
xchg
mov
pop
and
scas
sbb
adc
mov
sub
mov
daa
addl
es
mov
std
es
mov
cmpsb
lret
sti
xor
ret
xor
xor
xor
bound
add
mov
xor
test
xor
test
xor
add
push
push
xor
out
sub
xor
sahf
fbstp
xlat
pushf
inc
xor
pushf
fbstp
rcrb
sbb
xchg
cmp
bound
movsl
cmp
fwait
mov
aad
cwtl
cmp
add
add
fwait
cmpb
fwait
int3
cmp
lcall
mov
add
fstps
stos
xor
out
shll
cltd
loop
out
cwtl
cmp
xchg
loop
cmp
sub
outsl
xchg
add
xchg
sub
test
xchg
lock
xchg
add
rorb
testl
leave
xchg
xor
das
xor
movsb
xorl
cmpsb
xchg
xor
add
cmpsl
xor
xchg
sub
mov
incb
and
xchg
ljmp
jns
mov
hlt
sarb
enter
rclb
adc
inc
das
pop
mov
test
cltd
sahf
inc
cmp
or
in
outsl
cmp
dec
jl
cmp
add
add
jp
cmp
jp
cmp
jg
cmp
sbb
outsb
jle
cmp
xor
aas
and
add
add
decl
add
addb
andl
mov
stos
xor
cmp
mov
andl
xor
stos
xor
adc
pop
xchg
xor
xchg
pop
test
xor
ret
imul
int
outsl
cs
loop
sub
pop
ffree
sub
inc
sub
iret
out
and
scas
sub
scas
mov
inc
mov
sbb
push
nop
cwtl
daa
jb
clc
es
sbbb
add
xchg
cld
pushl
or
add
out
xor
ror
pop
lret
rol
ret
lods
adc
lods
imul
ficompl
mov
in
js
and
xlat
das
je
pop
das
decl
mov
jg
xor
cmpsb
lea
sub
inc
sub
pop
sub
mov
sbb
pushf
sub
into
sub
mov
sub
add
inc
mov
sub
mov
push
mov
jg
xor
jg
xor
jg
xor
cmpb
jg
xor
jg
xor
jg
xor
jg
xor
jle
xor
jle
cld
mov
pop
xor
adc
das
mov
xor
xorb
mov
in
sub
rol
js
cmp
add
add
xor
pop
loope
mov
mov
cmp
pop
cmp
mov
xor
popf
push
xor
out
lea
xor
adc
int
ss
fnsave
and
das
ss
add
dec
pushf
movsb
aaa
add
jne
aas
dec
das
idiv
lock
add
adc
add
inc
xor
jle
xor
test
xor
xorl
test
lahf
cmpl
orl
popf
jg
xor
jg
xor
jg
xor
jp
xor
faddl
dec
mov
adcb
pusha
jbe
cmp
jl
cmp
jb
cmp
jb
cmp
mov
and
test
sub
fwait
dec
sub
xchg
in
sub
mov
jae
cmp
pushl
enter
sub
enter
push
rclb
enter
rclb
mov
mov
out
sbb
mov
xor
xor
add
add
hlt
xor
jecxz
xor
jmp
xor
loop
xor
lret
je
jge
ja
pop
xor
xchg
sub
xchg
sub
xchg
cs
test
sub
in
mov
daa
cld
mov
mov
sub
mov
es
pop
es
mov
add
add
popf
mov
testl
jmp
add
int3
xor
jg
xor
jg
xor
jle
xor
jle
xor
enter
les
mov
movl
xor
cmpsl
sbb
cmpsb
and
mov
je
pop
xchg
mov
mov
inc
cmp
rcrb
fisubrl
xor
int
xor
fdivr
ss
mov
pop
fimull
mull
popl
inc
mov
dec
xor
xor
mov
xor
test
sub
fisubrl
pop
ss
jne
ss
jne
cmp
jae
cmp
jnp
cmp
jnp
cmp
jae
cmp
add
add
pop
cmp
cmp
scas
cmp
jp
cmp
outsb
sbb
mov
insb
movsl
ds
insb
call
aas
cli
imul
insb
add
fdivl
lcall
mov
add
jnp
xor
subl
mov
ljmp
loope
add
add
dec
and
sbb
in
lcall
and
pushf
xchg
sub
pushf
add
bound
sub
jl
sub
jl
sub
clc
sub
repz
cmp
xchg
fistps
mov
insl
sub
iret
lret
mov
cmpsl
sub
scas
insl
sub
push
sub
iret
sub
mov
into
daa
ja
and
sub
test
imul
es
sbbl
mov
fbld
cltd
test
and
cmpsl
test
and
push
and
test
mov
jmp
add
jg
xor
subb
flds
xor
es
xchg
xor
movsb
sbbb
push
xorb
addb
lods
push
sub
popf
lds
popf
sub
pop
int3
xchg
cs
iret
imul
sar
jecxz
dec
cmp
adc
pop
test
cmp
cwtl
mov
cmp
lret
dec
cmp
mov
dec
cmp
mov
add
add
std
xor
aad
xor
addr16
xor
sbb
adc
mov
cmp
shlb
lret
add
test
add
mov
add
lahf
xor
lret
lahf
dec
xor
lea
push
mov
sbb
int3
pushf
les
pop
pushf
loope
sbb
xor
cltd
pop
xor
jge
push
popf
shlb
or
pushl
movsl
cltd
loopne
add
cmpsl
pop
xor
fwait
test
xor
lds
mov
out
cmpsl
icebp
xor
test
lahf
test
ss
test
ret
fsubs
and
mov
sbb
push
sbb
cmp
stos
mov
addb
mov
sbb
jge
adc
in
xor
add
in
push
adc
adc
fucom
sbb
int3
cli
sbb
xchg
sbb
sbb
lods
pop
sbb
lods
mov
push
lahf
adc
es
mov
push
sarb
push
jle
adc
out
insl
adc
inc
loope
sbb
sub
jnp
sub
mov
ret
adc
gs
xor
lds
add
xchg
sbbb
mov
adcb
xorb
and
mov
mov
jmp
add
vphaddbq
adc
jg
adc
jle
adc
jge
pop
dec
jl
pop
jp
push
dec
jnp
sbb
jp
sbb
js
sbb
xchg
sbb
inc
sbb
sbb
add
xchg
sbb
add
push
cmp
iret
iret
cmp
mov
inc
xor
xchg
shlb
shrb
cmp
ret
mov
add
in
pop
cmpsb
divl
iret
mov
loope
rcrl
cmpsb
cs
ret
test
das
mov
or
je
add
add
repz
jp
cli
das
sub
insl
cmp
sarl
add
mov
cmp
outsb
jae
pop
outsl
stos
cmp
cmc
mov
stc
aas
cmc
decl
sbb
xor
mov
sbb
andb
xor
add
add
cmpsl
cmp
xlat
xchg
pop
xor
mov
hlt
movsl
jne
popa
pushf
adc
cmp
cltd
and
cmp
cwtl
add
mov
pop
adc
inc
and
rcr
adc
adc
loop
xchg
mov
test
std
ljmp
and
test
xchg
add
xchg
sbb
subl
sbb
cmp
add
je
xchg
and
out
leave
cmp
push
es
js
loop
xchg
adc
add
add
add
inc
adc
jmp
andl
mov
fcoml
rolb
jg
mov
loope
jne
jae
insb
js
sbb
pop
sbb
jnp
pop
ret
jl
pop
aas
jl
push
jecxz
rcrb
mov
xor
ss
or
adc
orb
subb
std
orb
test
adc
test
adc
test
adc
ja
sbb
ja
sbb
js
jecxz
sub
push
iret
call
cmp
mov
cmp
icebp
cmp
add
push
pushf
fnstsw
sti
popf
xchg
cmp
fidivrl
pop
mov
add
xor
dec
lahf
and
scas
lahf
mov
inc
into
inc
aaa
jge
add
aaa
jmp
mov
jle
cmpsb
adc
mov
sbb
mov
add
add
out
mov
in
xor
test
mov
into
xor
mov
clc
xor
mov
add
or
mov
push
xor
mov
cmp
lahf
mov
inc
xor
mov
jo
mov
jl
adc
movsb
cwtl
xor
add
add
movsb
xchg
xor
mov
mov
mull
mov
xor
fidivl
jmp
out
mov
or
test
or
push
xchg
or
sub
aad
cmp
fisttpl
dec
testl
data16
adc
je
aas
or
mov
add
add
pop
cpuid
xchg
push
mov
inc
push
out
push
shl
rorb
fucom
sbb
psubd
mov
add
mov
and
stc
or
cmpsb
jae
inc
cmpsb
mov
adc
mov
push
adc
cmpl
insb
cmpl
or
lret
test
push
dec
test
sldt
add
sbb
test
adc
cmpl
adc
cmpb
xorb
orb
divb
sbb
jbe
sbb
mov
sbb
jbe
sbb
ljmp
sbb
jne
pop
push
jl
pop
push
jp
cmc
int3
clc
ss
pop
aaa
leave
mov
add
xchg
lods
shll
sbb
lods
jecxz
and
idivb
add
sub
nop
xor
jno
lcall
xor
add
sub
push
xor
shll
vcvttss2si
stos
xchg
das
ljmp
cmp
lahf
bound
gs
ljmp
int3
lret
mov
fs
ss
add
add
mov
or
jno
push
aas
outsl
mov
outsl
aas
xor
cmc
call
xchg
add
inc
pushf
xor
xor
mov
sub
out
push
xor
pushf
xor
shll
scas
mov
pop
xor
shll
sahf
fdivl
movsb
pushf
push
xor
lahf
mov
mov
xor
and
add
add
mov
icebp
xchg
aaa
jp
daa
cmp
xchg
pop
cmp
xchg
lea
mov
sbb
int3
jg
jo
cmp
adc
lods
ss
scas
sub
xchg
lahf
mov
or
xor
test
std
cmp
add
mov
or
in
or
pop
loopne
adc
int
sbb
mov
rcrb
pop
scas
pop
sbb
scas
mov
sbb
sahf
aad
inc
xchg
adc
testb
seta
pinsrw
comiss
orl
push
cwtl
mov
add
adc
loopne
push
andl
testl
adc
adc
aam
out
push
jl
or
jb
lds
pushl
sbb
add
add
fwait
sbb
sub
push
mov
jmp
add
subb
jnp
repz
xor
xorb
jge
or
dec
ja
sbb
js
js
inc
cmp
aad
into
mov
xor
movsb
lods
fidivrl
cmp
cmp
int
cmp
mov
popl
jmp
mov
add
xchg
xor
cmpsl
xor
or
cmp
pop
xor
jmp
mov
add
stos
push
sub
int
outsl
aaa
or
cmpsb
jg
sbb
cmpsb
dec
aaa
add
mov
pop
aas
mov
pusha
aas
test
push
aas
test
js
mov
cmpb
mov
nop
aas
or
mov
add
incl
add
dec
fwait
cmp
xor
fwait
jp
mov
mov
xor
push
xor
cltd
aaa
xor
dec
xor
lcall
jns
ret
xor
lcall
out
cli
xor
cmovge
jae
lahf
out
adc
lcall
leave
les
or
adc
push
dec
lods
mov
lods
das
or
mov
jecxz
push
jno
pushl
imul
sub
sbb
jmp
sbb
xor
lods
int
push
xchg
mov
pop
pop
fnstenv
test
cld
loop
add
mov
sub
adc
lret
orb
jge
cmpsl
push
cmpl
push
movsl
jge
push
jge
adc
jle
adc
jle
adc
jle
adc
jle
adc
fidivrl
adc
jle
adc
jle
sbb
add
add
pop
pop
sbb
sub
mov
jns
sbb
jns
sbb
jns
sbb
jp
sbb
jp
sbb
jp
cltd
mov
and
pop
lods
xor
imul
jecxz
jns
repz
test
mov
mov
add
divb
add
cmpsb
mov
ffree
xchg
xor
and
cmc
leave
add
test
mov
sub
mov
inc
sub
ret
mov
add
gs
ret
sub
mov
subl
clc
cltd
inc
xor
push
cltd
movsb
xor
or
add
enter
mov
cltd
fs
cltd
movsb
sbb
in
sub
sub
mov
cmp
sub
dec
aaa
or
pop
aaa
or
push
aaa
pusha
cltd
js
push
cwtl
mov
mov
cwtl
aaa
mov
shld
shrd
add
mov
pinsrw
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcoml
add
int3
nop
add
int3
nop
add
fcoml
add
fcoml
add
int3
nop
add
pushf
nop
add
pushf
nop
add
mov
add
pushf
nop
add
pushf
nop
add
mov
add
pop
nop
add
pop
nop
add
dec
nop
add
dec
nop
add
pop
nop
add
pop
nop
add
dec
nop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
lea
add
add
add
add
add
add
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fmull
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pushf
xchg
add
mov
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fcoml
add
int3
nop
add
int3
nop
add
fcoml
add
int3
nop
add
int3
nop
add
pushf
nop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
fmull
add
int3
lea
add
lea
add
add
mov
add
pushf
lea
add
add
mov
add
pop
lea
add
add
add
add
add
add
add
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fmull
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
add
or
add
or
add
fcoml
add
int3
xchg
add
int3
xchg
add
fcoml
add
int3
xchg
add
int3
xchg
add
pushf
xchg
add
pushf
xchg
add
mov
add
pushf
xchg
add
pushf
xchg
add
mov
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
dec
xchg
add
sbb
add
sbb
add
or
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jmp
add
add
add
popl
jmp
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
dec
mov
add
add
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
fmull
add
int3
lea
add
lea
add
lea
add
lea
add
lea
add
lea
add
add
mov
add
pushf
lea
add
add
mov
add
pop
lea
add
add
add
cmpsb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jge
dec
add
mov
aam
and
ret
jbe
jle
mov
cs
iret
or
icebp
mov
out
lods
dec
xchg
testb
rorb
and
mov
shlb
and
sarb
adc
sub
sbb
mov
popa
mov
mov
sbb
pushf
dec
inc
pop
push
mov
jge
pop
inc
and
movsb
les
mov
and
pop
mov
inc
jae
add
add
xor
div
push
jmp
into
inc
out
mov
pop
incb
fwait
pop
mov
and
div
fisubl
pop
sub
ja
outsl
inc
pop
mov
loopne
sti
mov
andb
lret
inc
and
mov
stc
mov
out
or
lret
and
cli
cmp
or
add
jl
cmc
xchg
mov
loope
sub
xchg
or
dec
notb
lahf
mov
cmp
fsts
jecxz
or
inc
je
mov
loopne
jl
xchg
dec
add
in
add
das
ss
sbb
gs
inc
or
dec
cmp
mov
cmpsb
push
xchg
cmpsb
fwait
daa
push
lret
mov
test
add
cld
je
sub
xor
add
fldcw
or
ror
add
icebp
inc
push
sub
bound
shr
enter
push
mov
add
lcall
jmpw
lahf
icebp
push
inc
sbb
pop
xor
sbb
jp
outsb
or
sbb
in
pop
sahf
rcl
xor
sub
push
cmpsl
inc
adc
pop
pop
out
subl
adc
add
pop
scas
sub
and
jne
sub
in
cs
push
xor
mov
mov
dec
pop
ret
int3
icebp
ret
int3
jmp
ret
int3
add
in
cs
or
ds
push
ret
loopne
in
jmp
xor
adc
jb
ds
mov
push
ds
cs
cmp
mov
jmp
xor
mov
xor
int3
orb
adcl
mov
push
loopne,pt
inc
loopne
pusha
scas
add
push
dec
in
dec
fmull
mov
cmp
mov
add
push
ds
ds
clc
mov
push
lods
push
dec
lock
clc
mov
jae
dec
lods
or
jb
in
add
push
dec
hlt
ss
add
insl
pop
inc
hlt
scas
inc
sbb
push
dec
lock
inc
mov
subl
call
nop
add
ss
add
cmc
sbb
mov
subl
cs
mov
test
add
inc
lock
pop
rorb
ret
int3
jmp
ret
int3
add
in
xchg
ja
add
clc
cmpsl
mov
aas
call
xorl
push
jno
add
mov
cs
call
cld
testb
push
and
add
imul
mov
lret
mov
add
push
mov
add
hlt
cmpl
jae
push
ds
cmpl
dec
add
cmp
push
sarb
cld
jbe
mov
pop
std
mov
inc
add
int
int3
jno
int3
imul
int3
loopne
in
inc
xchg
inc
add
add
add
inc
or
cmp
or
int3
imul
int3
loopne
in
clc
adcl
xchg
enter
mov
ret
int3
icebp
ret
int3
jmp
int3
pusha
add
adcl
push
vpmadcswd
shlb
inc
mov
ds
dec
cmpsl
add
add
clc
cmpsl
mov
les
inc
adc
add
add
cmp
cs
or
cmp
mov
add
push
jp
hlt
add
add
cld
ss
add
pop
push
inc
adc
jo
push
mov
flds
mov
addl
xor
insb
pop
pop
mov
add
pop
rorb
ret
jmp
ret
int3
addb
mov
add
mov
fcomip
inc
mov
ret
int3
icebp
ret
jmp
pop
int3
add
in
xchg
mov
js
mov
jl
mov
add
mov
ljmp
sbb
mov
jg
inc
push
nop
add
mov
or
mov
inc
cld
ds
cmp
aad
mov
add
add
pop
mov
rol
cli
mov
rorl
ret
inc
xor
testl
fstpl
cmp
add
xchg
adc
jo
mov
sbb
mov
mov
sbb
or
sbb
mov
xchg
jmp
mov
ret
int3
add
in
push
mov
inc
lods
sbb
add
mov
jae
push
sbbl
call
add
or
add
mov
xchg
dec
lock
loopne
jo
cmpl
pop
test
mov
add
push
cs
mov
add
loope
adc
sub
hlt
mov
outsl
cmpl
add
mov
outsl
mov
nop
adc
xchg
sbb
mov
adc
jecxz,pt
mov
xchg
add
push
cmp
mov
xchg
add
cmp
in
clc
xchg
add
adc
mov
or
mov
add
js
add
mov
mov
adc
add
sbb
adc
add
mov
mov
decl
mov
add
add
fsubrp
mov
mov
cmpl
inc
mov
mov
test
jmp
shl
push
lea
or
aam
clc
jnp
push
adcl
add
push
cmp
xorl
dec
js
mov
push
dec
loopne
popf
idiv
sbb
fstpl
pop
int3
pusha
sbb
adcl
push
add
out
hlt
inc
mov
cmp
inc
mov
cmp
std
lret
les
ficoml
push
ds
push
ds
push
mov
in
ret
int3
sbbl
inc
mov
jae
push
inc
mov
push
add
dec
mov
in
ret
int3
sbbl
push
pushf
mov
mov
add
add
mov
xor
fadds
out
inc
hlt
ds
mov
mov
push
dec
clc
cmp
hlt
mov
cmp
inc
ss
xor
fmulp
mov
push
push
sbb
or
push
cmp
mov
stos
mov
push
cmp
mov
mov
adc
insl
cmp
rorb
mov
dec
mov
call
pop
int3
imul
int3
adcb
adcl
mov
add
mov
push
or
or
in
push
push
inc
clc
test
or
mov
push
push
mov
push
add
inc
mov
xor
add
xchg
mov
jmp
adc
add
jg
add
mov
mov
add
out
xchg
decb
add
inc
add
cmc
and
mov
mov
mov
adc
movsb
or
add
add
inc
mov
mov
fsubrp
popf
jmp
fwait
mov
popa
mov
mov
or
int
loop
shr
ret
int3
sbbl
mov
xchg
cmp
cld
decl
sahf
mov
int3
imul
int3
add
mov
add
adc
or
fmuls
lods
mov
cmp
loopne
jo
pop
mov
mov
cmp
lods
push
cmp
aas
mov
add
push
fst
sti
ljmp
push
testl
add
mov
sub
fmull
add
mov
loopne
push
xchg
loop
rcll
mov
add
jnp
shlb
mov
cmp
jnp
pop
ds
cmpl
inc
call
mov
sbb
cs
mov
inc
movsl
xchg
testl
mov
sbb
mov
or
ds
mov
add
fucomip
push
mov
xchg
mov
adc
sub
call
in
ja
cld
mov
add
mov
mov
push
pop
sbb
jmp
mov
adcl
insl
or
xchg
nop
cld
testb
cmp
mov
adc
jne
add
mov
mov
loope
inc
adc
xchg
push
sti
hlt
inc
mov
or
xor
loopne
add
fcomi
mov
les
popl
jne
stc
inc
push
cs
hlt
push
pop
nop
notl
xor
mov
pop
inc
fdivrs
fcmovnu
mov
add
push
cmp
mov
fists
lock
sti
hlt
inc
mov
call
xor
mov
adc
add
sbb
mov
mov
dec
loope
dec
loopne
cld
hlt
inc
mov
inc
xor
sub
inc
mov
add
push
cs
insb
cld
jbe
push
mov
jae
call
ss
add
call
test
mov
sub
mov
xor
add
mov
je
rolb
push
cs
lods
cld
testb
inc
mov
call
cmp
mov
add
rolb
push
or
adc
mov
add
mov
call
xor
mov
sbb
push
ds
mov
nop
dec
sub
nop
mov
add
mov
jmp
and
inc
mov
lock
mov
mov
call
cmc
decb
mov
notl
js
sti
push
cmpl
pop
in
add
push
int3
add
adcb
mov
mov
in
int3
add
pusha
push
in
imul
cmp
movsl
test
jbe
mov
jp
pop
pop
notb
int3
pusha
push
in
dec
lret
cld
aas
mov
xchg
cld
testb
pushl
dec
or
lock
ds
mov
jmp
orl
add
in
push
stos
mov
add
popl
add
in
add
addl
mov
mov
add
xchg
nop
cld
jbe
call
mov
cwtl
xor
mov
add
mov
popl
add
daa
hlt
inc
mov
add
mov
xor
add
xchg
mov
add
ret
cwtl
cld
testb
jmp
sub
cld
testb
add
call
inc
mov
cmp
mov
ja
dec
sbb
int
push
sbb
mov
add
int
mov
cli
cld
aas
mov
pusha
add
mov
xchg
not
addb
jbe
notl
push
inc
hlt
inc
mov
movsb
cld
testb
pushl
dec
cld
mov
jg
dec
test
call
cmpl
xchg
imul
push
push
cs
testb
incl
add
add
dec
add
call
adc
cld
out
jae
adc
loopne
adc
fsubl
sti
or
mov
adc
xchg
movsb
cld
jbe
add
fimuls
add
push
stc
mov
in
add
pop
add
or
cs
add
pop
mov
or
into
mov
add
imul
mov
jmp
cs
xorl
push
dec
or
jae
or
add
mov
mov
clc
mov
mov
clc
mov
push
jmp
adc
mov
clc
xor
popl
inc
int
or
add
and
mov
hlt
inc
mov
leave
mov
div
inc
mov
leave
mov
addr16
testl
int3
clc
mov
xor
add
mov
mov
stos
rorl
mov
mov
testb
pushl
push
cld
mov
loopne
aad
jle
test
add
xor
imul
inc
mov
mov
cld
jbe
add
insb
cld
jbe
mov
call
mov
loope
xor
fstpl
dec
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
popl
add
mov
cwtl
xor
mov
xor
popl
add
mov
cli
xor
mov
xor
stos
mov
lea
push
mov
cmp
xor
push
mov
push
ss
movsl
cmp
in
movsl
dec
ss
movsl
insb
ss
cmpsb
xchg
and
cltd
add
add
and
and
lcall
aaa
mov
cmpsl
inc
cmp
cmpsl
bound
xor
mov
cmp
test
cmp
test
cmp
and
cmp
pop
cmp
test
lds
ljmp
sub
mov
test
imul
cmp
lcall
test
ret
test
out
cmp
es
stos
xor
mov
cmp
stos
cwtl
cmp
stos
mov
jbe
leave
cmp
cmp
in
cmp
add
stos
and
cmp
stos
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
mov
mov
push
add
pop
mov
mov
sub
cmp
aam
les
dec
pushf
xor
add
dec
push
xchg
fdivr
dec
adc
xor
movsl
fs
idivl
mov
mov
test
sub
movsb
push
mov
imul
aaa
daa
lahf
adcb
xor
mov
pop
cmpsl
dec
push
cmpsb
or
mov
jbe
fsubs
pop
imull
cmpsl
loop
push
stos
shlb
dec
jnp
sahf
call
shrd
divl
mov
daa
int
outsl
mov
mov
and
inc
decb
stos
lret
daa
jno
leave
hlt
in
xor
popf
push
cld
cmpsb
pop
insb
gs
hlt
dec
pop
sub
dec
dec
push
push
bound
adc
fiaddl
pop
les
sub
mov
imul
enter
ficoms
inc
pop
cmp
xchg
cmp
loopne
js
pop
data16
push
inc
dec
cli
xor
mov
sub
xor
sub
int
mov
dec
mov
mov
mov
lcall
add
jle
mov
hlt
les
lahf
mov
nop
ret
xchg
sub
sbb
mov
imul
sbb
mov
mov
sbb
adc
dec
rcrl
cmpsl
imul
pusha
adc
andb
adc
push
or
mov
mov
arpl
sbbb
sub
push
adcl
xor
xor
int
mov
out
ja
push
nop
adc
and
push
aaa
xchg
cmpsl
fwait
repz
lret
push
stc
cmp
pop
jmp
.byte
add
add
jbe
mov
add
add
add
add
add
add
mov
add
add
add
addb
add
enter
or
add
sub
add
push
add
add
add
add
mov
add
add
add
add
add
add
nop
add
addb
add
jbe
mov
add
add
add
add
add
and
add
add
add
mov
add
add
add
add
add
es
add
mov
add
add
add
add
add
add
addb
add
jbe
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
andb
add
add
js
add
mov
add
add
mov
add
add
add
add
add
add
push
sub
add
mov
add
add
add
add
add
add
cmp
add
add
mov
add
add
add
add
add
sub
add
add
add
mov
add
add
add
add
add
cs
add
mov
add
add
add
add
add
add
orb
add
pusha
add
cmpb
add
mov
add
mov
add
fadds
add
add
add
jbe
mov
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
add
add
add
add
and
add
add
mov
add
add
add
add
add
ss
add
mov
add
add
add
add
add
add
add
add
add
jbe
mov
add
add
add
add
add
add
add
aaa
add
add
mov
add
add
add
add
add
add
add
cmp
add
mov
add
add
add
add
addb
addb
add
jbe
mov
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
addb
add
jbe
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
dec
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
ja
ja
ja
add
add
add
add
add
add
add
pop
clc
add
add
add
add
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
inc
inc
inc
pop
clc
addb
add
add
pop
add
inc
add
inc
pop
clc
addb
add
add
pop
add
pop
jo
add
clc
add
add
add
add
ja
ja
pop
ja
lock
jg
add
add
xchg
add
add
add
pop
push
incl
mov
add
add
add
icebp
adc
call
pop
or
add
add
add
add
adc
call
pop
or
add
add
add
lcall
push
decl
jo
add
add
add
decl
jo
add
add
add
add
ja
ja
ja
jo
add
add
add
add
mov
add
add
add
incl
add
add
add
cld
add
cld
add
jg
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
cld
add
aas
clc
add
aas
lock
aas
clc
add
pop
cld
add
paddd
add
incb
add
incb
add
incb
add
incb
add
incl
add
inc
add
incl
add
rolb
ljmp
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
ja
ja
add
add
je
inc
js
add
or
js
add
or
js
add
or
js
add
or
js
add
or
js
add
mov
js
add
mov
ja
addb
or
push
lock
or
push
lock
add
push
add
add
mov
add
xchg
ja
add
add
mov
sldt
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
add
pop
add
loopne
add
lock
add
lock
add
clc
sldt
add
add
adc
add
popa
add
add
add
add
add
add
add
insb
add
add
add
xor
add
jmp
add
add
add
add
ljmp
add
imul
add
add
add
add
add
add
add
jo
je
imul
jae
add
add
add
add
add
imul
nop
add
add
add
add
add
add
jmp
add
outsl
add
je
add
je
jae
or
and
inc
add
add
add
add
jmp
add
add
jb
arpl
push
add
jb
and
dec
add
insb
add
and
outsl
add
add
add
add
add
add
jmp
add
outsl
add
and
je
outsl
add
add
jae
add
add
add
add
add
bound
outsl
add
je
and
push
add
insb
add
je
popa
add
jb
add
add
add
and
addb
add
push
add
add
mov
jo
add
add
push
add
insb
add
arpl
je
and
inc
add
jb
add
add
popa
add
imul
add
add
push
add
add
push
add
add
add
add
or
add
add
add
add
sbb
sub
ss
incl
add
add
add
push
add
add
and
add
sbb
sub
aaa
add
incl
add
add
add
push
add
add
inc
add
sbb
sub
cmp
incl
add
add
add
push
add
add
pop
add
sbb
sub
cmp
add
add
add
add
add
push
add
add
js
add
sbb
sub
cmp
incl
add
add
add
push
add
add
xchg
add
sbb
sub
cmp
incl
add
add
add
push
add
add
or
xor
sbb
sub
cmp
incl
add
add
add
push
add
add
and
xor
sbb
sub
cmp
incl
add
add
add
push
add
add
inc
add
add
add
add
add
incl
add
add
add
push
add
add
pop
add
add
add
add
add
incl
add
add
add
push
add
add
js
xor
sbb
sub
inc
add
incl
add
add
add
push
add
add
xchg
add
add
add
add
incl
add
add
add
push
add
add
sub
pop
add
add
add
add
incl
add
push
add
add
pop
add
sub
push
add
add
incl
add
arpl
add
add
add
add
add
addb
add
add
add
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
or
fs
incl
add
add
add
je
and
inc
add
insl
add
and
dec
add
insl
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
enter
addl
add
add
add
add
add
add
add
add
incl
add
insb
add
push
add
add
cmp
das
add
add
add
add
incl
add
arpl
add
add
add
add
and
addb
add
push
add
add
add
add
add
jo
je
imul
jae
add
or
dec
add
and
push
add
add
add
add
add
add
add
pop
add
push
add
add
add
add
cmp
and
incl
add
popa
add
add
add
add
add
add
add
add
add
incl
add
ja
and
add
outsb
add
add
add
add
add
add
add
add
add
or
sub
add
add
ja
and
add
add
add
add
add
pop
add
push
add
add
inc
add
cmp
xor
add
incl
add
outsl
add
imul
add
add
add
add
add
add
add
push
add
add
cs
incl
add
add
outsb
add
add
add
add
add
add
add
add
sbb
and
or
das
add
incl
add
add
jae
add
add
add
add
add
add
add
add
add
xor
incl
add
outsb
add
add
add
add
add
add
add
add
xor
or
xor
incl
add
insl
add
add
add
popa
add
add
add
add
add
push
add
add
or
cmp
xor
or
xor
incl
add
je
jne
jae
and
add
popa
add
add
add
add
add
add
add
add
add
xor
incl
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
cmp
add
xor
incl
add
insl
add
insb
add
je
imul
add
add
add
add
add
add
add
or
ss
incl
add
jb
add
add
add
add
push
add
add
and
push
add
push
add
add
incl
add
push
add
add
dec
add
add
add
add
incl
add
arpl
add
add
add
add
enter
add
or
or
sldt
add
add
add
inc
add
jae
add
je
imul
and
inc
add
imul
jb
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
sub
mov
add
incl
add
popa
add
add
add
add
add
add
jne
add
add
add
outsl
add
je
and
je
outsl
add
add
imul
jne
add
add
add
outsb
add
insb
add
add
and
data16
insb
add
sub
and
insb
add
outsb
add
and
outsb
add
insl
add
add
sub
and
add
insl
add
and
outsb
add
insl
add
add
sub
and
jbe
add
jae
imul
and
outsb
add
insl
add
add
and
popa
add
add
add
je
add
jae
and
je
outsl
add
add
add
jb
outsl
add
add
add
add
add
add
add
push
add
add
or
add
sbb
or
gs
incl
add
add
push
add
add
add
inc
add
incl
add
imul
and
outsb
add
insl
add
add
add
outsl
add
add
add
and
ja
imul
and
bound
add
add
jb
add
je
add
add
outsb
add
add
add
and
arpl
jne
jb
jb
add
je
and
add
jb
add
je
outsl
add
jns
add
add
add
insb
add
popa
add
add
add
je
je
popa
add
push
add
imul
data16
insb
add
and
je
outsl
add
add
add
and
bound
jne
add
add
add
outsl
add
je
and
sub
add
add
outsb
add
jae
add
add
add
add
add
add
pusha
add
push
add
add
incl
add
je
imul
add
add
add
add
add
push
add
add
add
cmp
push
add
add
incl
add
je
and
push
add
outsb
add
add
jae
add
add
add
add
add
add
add
or
sbb
or
imul
dec
add
outsb
add
cmp
add
add
add
add
add
add
sbb
lods
add
add
add
incl
add
jae
imul
and
xor
add
push
add
add
sub
or
add
add
add
incl
add
add
add
push
add
add
sub
add
bound
or
enter
addb
add
add
add
add
push
add
add
add
adc
and
or
insl
add
incl
add
add
add
add
push
add
add
sub
adc
inc
add
add
add
incl
add
add
add
outsl
add
add
add
jb
add
add
arpl
outsl
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
ja
or
inc
add
popa
add
add
add
imul
aas
add
add
outsl
add
add
push
add
jb
add
jae
and
inc
add
arpl
and
outsl
add
and
popa
add
add
outsl
add
jae
add
add
jne
je
je
outsl
add
and
je
outsl
add
add
je
outsl
add
add
add
add
add
outsl
add
jne
jae
cmp
and
and
add
add
add
add
add
outsl
add
and
dec
add
arpl
jb
outsl
add
outsl
add
je
and
bound
jns
and
push
add
jae
and
inc
add
add
jb
jns
add
inc
add
arpl
imul
add
jo
je
imul
jae
push
add
imul
popa
add
or
imul
jb
jb
add
arpl
jns
or
jae
inc
add
jb
jb
add
arpl
jns
add
imul
insb
add
add
add
add
data16
add
add
outsl
add
jns
and
push
add
popa
add
insb
add
and
insb
add
popa
add
add
imul
outsl
add
jae
and
dec
add
insb
add
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
add
add
add
imul
popa
add
cmp
and
add
and
jns
outsl
add
and
ja
popa
add
je
and
je
outsl
add
add
jae
add
add
and
add
add
outsb
add
add
popa
add
imul
add
outsl
add
outsb
add
add
add
dec
add
jae
jne
data16
imul
add
je
and
insl
add
insl
add
jb
jns
and
je
outsl
add
add
add
jo
insb
add
jns
and
arpl
popa
add
add
add
popa
add
add
and
ja
push
add
add
popa
add
add
and
insl
add
jbe
add
add
add
add
add
add
je
and
je
push
add
jne
je
insb
add
outsb
add
and
add
popa
add
add
outsb
add
and
bound
outsl
add
and
data16
outsl
add
and
je
push
add
jo
je
imul
jae
and
insl
add
outsb
add
add
add
add
add
insb
add
add
and
outsb
add
ja
and
add
insl
add
adc
push
add
add
and
insb
add
jae
je
and
popa
add
je
imul
adc
inc
add
outsl
add
jae
add
add
add
and
add
arpl
imul
add
popa
add
imul
add
push
add
add
add
outsl
add
add
add
jb
add
add
jo
je
imul
jae
push
add
js
imul
push
add
insb
add
je
popa
add
jb
add
add
add
add
popa
add
add
add
jne
insl
add
add
sbb
push
add
imul
and
and
and
outsl
add
and
arpl
popa
add
add
and
imul
add
arpl
push
add
insb
add
add
jae
jae
add
je
imul
and
data16
imul
jb
add
add
add
add
imul
add
add
and
add
outsb
add
add
add
outsb
add
ja
and
inc
add
outsb
add
imul
jb
add
add
outsl
add
add
add
jb
add
add
outsl
add
and
jae
arpl
jb
add
outsb
add
add
push
add
or
inc
add
jb
arpl
add
add
and
ja
imul
sldt
bound
outsl
add
je
and
push
add
insb
add
je
popa
add
jb
add
add
add
add
outsb
add
add
and
outsl
add
and
push
add
insb
add
je
popa
add
jb
add
add
add
add
add
add
imul
sub
push
add
popa
add
arpl
push
add
add
add
add
add
add
outsb
add
imul
and
data16
jb
and
popa
add
add
jo
add
imul
arpl
and
je
outsl
add
imul
dec
add
insb
add
and
jne
jae
imul
and
push
add
add
adc
add
add
add
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
add
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
lods
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insb
add
je
popa
add
jb
add
add
popa
add
add
add
jo
jo
insb
add
je
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
js
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jae
outsl
add
add
js
add
add
das
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
and
sub
push
add
add
add
add
add
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
add
add
mov
add
insl
xor
xor
xor
xor
insb
xor
xchg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
outsb
xor
xor
in
push
ss
and
xor
aas
ss
ss
ja
jg
mov
movsl
ss
gs
loopne
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
.byte
