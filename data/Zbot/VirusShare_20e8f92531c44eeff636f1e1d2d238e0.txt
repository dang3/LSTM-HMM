push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jne
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
push
pop
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
incb
sbb
add
andb
add
and
add
and
add
and
add
add
mov
and
add
add
sub
add
lods
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
jle
add
mov
and
add
and
add
add
fsubs
add
enter
nop
and
add
add
pop
and
add
and
add
add
and
add
add
add
add
dec
and
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
and
add
and
add
add
mov
and
add
add
sub
add
lods
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
jle
add
mov
and
add
and
add
add
fsubs
add
enter
nop
and
add
add
pop
and
add
and
add
add
and
add
add
add
add
dec
and
add
and
add
and
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
test
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
push
push
je
imul
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
gs
insl
gs
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
jb
add
enter
jae
gs
popa
insb
jne
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
inc
imul
jo
outsb
dec
jne
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
outsb
je
outsl
insb
add
fs
imul
add
out
inc
gs
imul
bound
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
imul
jb
je
arpl
add
rolb
dec
gs
jo
gs
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jle
inc
gs
imul
gs
add
add
ja
push
popa
arpl
jb
jne
add
jae
push
push
popa
je
add
add
je
push
outsl
outsl
insb
add
mov
push
gs
imul
gs
add
add
je
push
outsl
insb
outsl
jb
jns
inc
gs
push
jns
push
imul
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
aaa
add
ja
push
fs
jae
push
arpl
add
gs
push
gs
dec
gs
imul
jo
outsb
push
push
popa
je
add
push
dec
inc
dec
inc
cs
insb
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jp
jnp
lods
lods
stos
add
cmpsb
cmpsb
push
mov
mov
mov
ret
lret
lret
int3
rcl
in
rcl
shl
iret
ror
hlt
int3
int3
int
leave
leave
enter
out
mov
in
mov
mov
lods
lods
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
rcl
sar
xlat
std
fcomp
fdivr
xlat
xlat
aad
aad
iret
rcl
dec
int
aam
rcl
iret
inc
mov
mov
iret
movsb
movsl
movsl
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
lods
sbb
mov
jnp
mov
sar
dec
leave
leave
call
rcl
aam
fcom
call
call
aam
int
into
dec
int
call
aad
dec
into
int3
mov
mov
mov
std
test
test
xchg
xchg
xchg
mov
pop
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
push
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
dec
int
call
rcl
fcomp
xlat
fcom
call
aad
dec
int
dec
leave
lret
int3
into
inc
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
sbb
or
xor
cmp
aaa
cmp
and
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
ret
ret
inc
enter
sar
aam
aad
aam
aad
ror
sar
leave
enter
mov
mov
scas
lods
scas
jmp
popf
sahf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jle
jl
jge
jle
jo
jb
popa
popa
arpl
cmp
inc
inc
mov
outsb
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
leave
leave
inc
mov
mov
scas
lods
scas
jmp
fwait
fwait
call
xchg
xchg
xchg
cwtl
cltd
cltd
lcall
ds
push
femms
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsl
add
pop
or
jp
nop
nop
fcoms
test
jnp
jl
jl
jnp
jo
outsl
out
addr16
fdivs
jae
jle
jge
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
movups
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
test
lcall
xchg
nop
incl
addl
xchg
xchg
xchg
lahf
sahf
sahf
sti
mov
cwtl
xchg
mov
jns
jp
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addb
decb
xchg
jg
jle
jo
jo
jae
je
jge
jle
addl
xchg
addr16
ss
and
cmp
movsb
movsl
mov
icebp
stos
lods
lods
sti
stos
stos
lods
lods
lods
stos
test
movsb
movsb
std
cltd
lcall
mov
jg
jns
js
jnp
jp
mov
xchg
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
pop
pop
pop
push
prefetch
inc
inc
inc
dec
imul
xchg
leave
cltd
cltd
fistps
lcall
mov
incl
mov
lcall
cmpsb
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jl
scas
cmpsl
lods
add
pop
adc
test
call
cltd
xchg
cltd
incl
xchg
decb
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
nop
in
xchg
push
jne
push
or
inc
or
inc
sub
push
dec
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
lea
xchg
call
sahf
lahf
jmp
cmpsl
stos
pushl
cmpsl
lods
mov
xchg
stos
std
roll
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
lcall
xchg
mov
mov
xchg
xchg
nop
decl
xchg
xchg
sahf
pushf
pushf
movsb
movsl
movsl
test
mov
cwtl
fstpt
jl
push
push
push
outsl
dec
dec
dec
pop
popa
bound
jb
mov
jge
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
ss
mov
ja
mov
movsl
mov
mov
mov
lods
lods
stos
mov
movsl
add
mov
add
pusha
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
cwtl
cltd
lcall
sahf
lahf
lahf
mov
movsb
mov
out
xchg
xchg
nop
xchg
xchg
les
fwait
in
xchg
cwtl
out
lea
nop
stc
xchg
xchg
std
xchg
je
fwait
addr16
lahf
pop
test
movsb
dec
cmp
inc
jl
mov
jp
mov
jae
mov
outsb
ljmp
adc
lods
or
stos
or
pushl
lahf
mov
mov
test
movsl
and
add
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
jmp
pushf
popf
call
xchg
xchg
decl
xchg
nop
call
xchg
lcall
cltd
sahf
stc
sahf
xchg
popf
cld
pushf
xchg
xchg
push
xchg
pop
jle
cwtl
dec
jns
cltd
cmp
cltd
sub
popf
and
lahf
sbb
mov
adc
adc
lods
adc
lods
pcmpgtd
scas
adc
mov
push
mov
imul
mov
lcall
lods
scas
lods
scas
movsb
movsl
mov
add
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
pushf
sahf
lcall
mov
mov
call
decl
addb
xchg
ja
cltd
jno
lcall
call
sub
decl
adc
nop
or
call
add
lcall
jmp
sbb
pushl
pop
jo
mov
outsb
mov
and
mov
and
inc
test
ret
mov
scas
scas
mov
lahf
lahf
mov
add
pop
pop
adc
lods
mov
shlb
lcall
mov
jmp
test
ljmp
fwait
pushf
call
pop
js
mov
decl
sub
mov
incl
or
push
incl
add
mov
pop
call
add
lcall
ljmp
and
mov
jbe
mov
sub
mov
sub
sub
enter
enter
movl
inc
mov
scas
lret
movsb
dec
mov
mov
add
add
add
stos
movsb
test
push
push
push
adc
test
mov
mov
mov
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
incl
add
test
push
decl
add
add
xchg
add
lcall
jmp
imul
shll
inc
cmp
dec
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
lahf
fwait
lahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
call
add
pushf
add
mov
add
lods
add
pushl
cmp
into
inc
mov
rolb
call
inc
nop
call
dec
xchg
call
dec
xchg
fisttpl
fistl
call
test
std
mov
mov
movsb
mov
mov
add
inc
dec
adc
jnp
movsl
popf
mov
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
aaa
insl
decl
sbb
nop
sbb
lea
pop
decl
push
call
add
pushf
add
mov
add
test
pop
gs
and
nop
call
push
cltd
fcoms
ficoml
fcompl
jmp
pop
popf
jmp
pop
popf
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
jne
sahf
sahf
or
cwtl
xchg
xchg
add
inc
adc
js
sahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
call
callw
sbb
or
call
add
lcall
ljmp
add
mov
fs
mov
xor
fcomps
fldenv
fisubs
fisubs
in
test
in
cmpsb
jmp
addr16
jmp
push
mov
into
mov
mov
mov
sahf
lahf
add
inc
aas
adc
jp
xchg
cltd
call
sahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
das
jo
cltd
das
outsb
call
sbb
pop
call
add
mov
add
stos
add
mov
pushw
adc
roll
frstor
jmp
outsb
stos
jmp
outsl
lods
jmp
jo
jmp
jae
in
jne
out
jne
out
jbe
out
jb
jmp
mov
mov
test
lcall
lahf
add
jg
cmp
adc
outsl
js
lea
lcall
mov
pushl
mov
mov
inc
rol
mov
movsl
scas
lcall
xor
sahf
cmp
sahf
cmp
xor
fwait
sbb
pop
lcall
add
movsb
add
test
pop
pushl
add
mov
sbb
fsts
jmp
ja
ljmp
jmp
mov
out
cmpl
push
xchg
push
cmpl
mov
inc
mov
test
daa
mov
lahf
lahf
add
add
add
pusha
add
aaa
cmp
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
ret
ret
pushl
insl
mov
fwait
cmp
mov
inc
jg
movsl
cmp
cltd
sbb
xchg
add
popf
add
movsl
add
test
add
mov
data16
mov
add
shll
cmp
movsb
jmp
mov
push
sar
xchg
sar
nop
ret
push
nop
push
xchg
ret
push
xchg
pop
in
pop
fnstenv
ret
clc
stos
stos
stos
mov
pushf
popf
xor
pushf
popf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
mov
jle
lcall
dec
cmp
dec
cmp
xor
pusha
lcall
add
cmpsl
add
lods
add
mov
mov
add
leave
add
mov
out
mov
out
xchg
push
lcall
repnz
push
lcall
clc
sahf
lret
lahf
into
sti
lahf
int3
cld
cltd
lret
push
xchg
ret
mov
inc
mov
shlb
nop
add
add
add
ss
or
cmp
dec
jecxz
pop
pusha
decl
mov
mov
mov
mov
inc
mov
inc
mov
mov
ljmp
dec
xchg
mov
or
pushf
add
movsb
add
lods
add
mov
popa
mov
add
leave
add
or
fiadds
in
lea
push
movsl
int3
push
movsb
into
stc
cmpsl
iret
cld
test
sar
cld
test
std
stos
iret
test
iret
push
sahf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
or
inc
bound
pop
xlat
jne
jo
mov
rol
rol
mov
inc
ret
inc
inc
enter
ret
pushl
push
test
scas
push
mov
scas
dec
test
sahf
sbb
pop
jmp
add
mov
fs
mov
add
into
add
fadds
jae
fists
push
lahf
lret
scas
sar
cld
mov
cli
mov
sti
mov
std
mov
cld
mov
mov
mov
mov
mov
push
movsb
jmp
mov
call
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
add
push
add
dec
dec
outsl
jo
mov
vpsubusb
xlat
fsubr
aam
fdiv
rcl
sar
lret
into
int
lret
lret
lret
dec
lret
mov
scas
jmp
push
mov
lods
cmp
lcall
add
stos
add
mov
mov
add
roll
outsb
call
add
loopne
je
jmp
jb
cld
scas
aad
cld
mov
fcos
std
mov
fcos
std
mov
fdivr
mov
fdivr
mov
fdivr
divl
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
call
call
jecxz
fucom
fcomi
fcomp
fsqrt
fcom
std
int3
rcl
mov
imul
jmp
add
mov
popa
mov
add
leave
add
aam
jb
faddl
jbe
jecxz
js
in
das
xchg
clc
mov
sti
mov
loope
inc
loopne
inc
loop
std
fdivrp
inc
fdivrp
std
enter
leave
fdivrp
dec
dec
dec
loopne
sti
mov
lret
lret
iret
mov
mov
xchg
adc
add
add
std
add
incb
std
std
add
div
or
out
jmp
in
out
in
sub
out
in
dec
ljmp
xchg
call
call
fucomi
les
xchg
test
jns
mov
add
test
add
mov
add
int
outsl
call
add
filds
ja
call
inc
pushf
cli
mov
loop
cld
lret
std
into
out
std
int3
in
dec
loop
dec
loope
dec
loopne
std
shl
std
shl
std
shl
call
in
cli
in
mov
inc
ret
ret
test
mov
cwtl
xchg
add
add
add
incl
std
incl
cmc
clc
clc
add
repz
repnz
push
in
repnz
pop
out
icebp
lock
in
in
pop
loopne
loopne
mov
xchg
sti
sahf
and
lcall
add
add
mov
inc
add
movl
jno
fiaddl
jbe
jecxz
jnp
in
movd
negl
cld
mov
shl
cld
shl
shl
std
shr
call
in
std
call
call
jmp
fucompp
std
fucomi
dec
loop
repz
jecxz
lret
repz
xchg
xchg
and
xchg
xchg
add
cli
add
testl
hlt
div
or
aad
xor
mov
xchg
negb
add
test
pop
ljmp
add
les
push
call
add
fildl
ja
out
ja
out
sbb
sti
fdivrp
fsubr
fucomi
std
fucomi
fldpi
std
fucomi
std
fsubr
fucomi
std
fucomi
fsubrp
fucomip
jmp
in
cld
shl
push
ret
call
rcl
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loopne
add
leave
sbb
lods
jnp
repnz
pop
lcallw
add
mov
mov
add
into
add
add
filds
je
ljmp
cli
pop
cld
shl
std
loopne
fucomi
std
fldl2t
std
fucomi
std
fsubr
cld
aam
cld
shl
cli
shl
sti
shl
clc
int
clc
lret
test
lret
rcr
call
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
mov
subb
insb
jmp
add
mov
mov
add
iret
add
fadds
jb
loopne
jp
ljmp
sti
xchg
cli
leave
loopne
cli
int3
jecxz
sti
idivl
sar
repnz
iret
push
mov
into
jmp
mov
sar
ljmp
imul
fsub
cmc
fnstsw
loopne
mov
mov
xchg
add
add
add
int
mov
rol
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
dec
pop
jno
rorl
je
fimull
ja
loope
cmp
inc
xchg
jmp
mov
call
scas
std
loopne
mov
cli
fnsave
lock
int
fcmovne
iret
fsubp
iret
shl
fcmovb
out
loope
jmp
out
icebp
out
out
popf
call
leave
lret
lods
lods
adc
test
cmpsl
add
ret
rolb
ret
ret
pop
mov
stos
aam
dec
cmp
sbb
cmpsl
sbb
lods
and
ja
mov
inc
xchg
les
stc
lret
gs
test
mov
shll
rcl
mov
lret
rcl
int3
mov
iret
shlb
rcl
jg
jb
gs
in
out
out
call
cmc
hlt
sub
div
and
repnz
fcmovnu
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
insb
mov
test
sbbl
mov
test
mov
pushf
lret
ret
mov
enter
into
iret
addr16
ror
push
rcl
rorl
xlat
inc
aam
aad
aad
xlat
daa
fcomp
ficompl
ficoms
fucom
loope
loope
in
out
ljmp
cli
testb
cld
add
std
add
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
lds
mov
daa
int3
ror
and
aam
sbb
rcll
iret
aad
or
xlat
aad
rcr
xlat
add
fcmovnu
add
loopne
add
in
add
in
ljmp
incb
mov
mov
add
ret
les
rol
sub
mov
mov
push
rol
or
mov
add
int3
lret
aam
add
fcom
add
fcom
add
fcom
add
fadds
loope
xlat
aam
add
loop
add
fstp
add
out
add
lock
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
ret
ret
ret
mov
mov
mov
ja
stos
stos
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
aam
cmc
rcl
sar
rcl
into
cli
int3
int
stc
lret
lret
int3
hlt
mov
mov
iret
stos
stos
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
into
aad
xlat
call
aad
call
rcl
dec
iret
into
dec
lret
mov
mov
cld
lods
stos
lods
icebp
cwtl
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
je
jne
fs
inc
inc
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
sar
lret
int3
lret
mov
pushl
stos
stos
popf
popf
popf
xchg
xchg
xchg
jmp
outsl
jno
push
adc
add
add
add
add
add
jg
jg
jp
jl
test
jnp
push
imul
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
jo
jno
scas
mov
pop
mov
mov
mov
mov
ret
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
cwtl
lcall
addl
jmp
jp
sarb
jnp
jp
jnp
je
je
push
push
push
cmp
je
popf
pushf
sahf
mov
lods
scas
repz
scas
scas
sti
lods
lods
lods
std
test
test
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsb
cmpsb
movsl
cltd
je
jae
adc
adc
add
add
add
add
outsl
insl
insl
pop
stos
movsb
test
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
outsl
orl
lcall
lea
call
sahf
lahf
ljmp
stos
mov
mov
mov
stc
mov
mov
movsl
mov
addl
add
add
pusha
pop
popa
or
lods
mov
cmpsl
sahf
movsl
decl
mov
lcall
lahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jge
subl
mov
lcall
mov
pushl
pop
mov
jl
mov
lods
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
lcall
cwtl
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jle
pushf
dec
jnp
movsb
inc
js
lods
ss
mov
je
scas
sbb
imul
sbb
mov
mov
mov
scas
scas
jle
movsb
movsb
push
popa
popa
popa
or
mov
lcall
sahf
sahf
jmp
mov
xchg
decl
addl
cld
cwtl
pusha
cmp
dec
jp
xchg
cmp
xchg
sub
xchg
sbb
cltd
maxps
sahf
punpcklwd
test
sbb
sbb
mov
outsl
mov
and
rcrb
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
popa
pusha
popa
or
stos
mov
stos
mov
lahf
jmp
stos
test
lcall
pop
jp
mov
imul
mov
pop
incl
or
mov
push
decl
add
popf
add
cmpsl
or
pushl
jl
shrb
inc
jge,pn
leave
xor
dec
pop
xchg
inc
test
mov
cmpsl
cmpsl
test
pop
popa
pusha
or
movsb
stos
in
mov
cmpsb
pushl
mov
pushl
mov
decl
adc
xchg
push
incl
add
nop
add
xchg
add
mov
add
mov
insb
inc
ss
inc
mov
iret
inc
call
inc
call
inc
xchg
fiaddl
call
bound
stc
mov
mov
mov
incl
add
add
popa
pusha
pop
or
sahf
mov
ljmp
mov
mov
mov
mov
mov
lods
mov
jge
nop
pop
arpl
nop
sbb
push
pop
decl
add
add
sahf
add
cmpsb
add
scas
add
mov
dec
xchg
fcomps
fcompl
fistps
jmp
pop
mov
jmp
outsb
cmpsl
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jl
jp
fwait
cwtl
cwtl
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
insb
call
subps
xchg
add
popf
add
add
scas
add
mov
imul
fisubl
jmp
outsb
test
ljmp
out
jno
call
test
mov
test
test
add
add
add
dec
pop
outsb
insl
imul
xchg
cltd
cltd
xchg
pushl
mov
mov
mov
je
lcall
ja
popf
sub
cwtl
or
pushf
add
movsl
add
lods
add
mov
gs
or
call
dec
xchg
jmp
js
jmp
mov
push
xchg
hlt
xchg
fisubrl
mov
push
fwait
fwait
cltd
add
sub
push
push
push
dec
pop
imul
mov
mov
mov
rol
mov
xchg
ljmp
sub
fwait
pop
pop
jmp
add
mov
gs
mov
adc
mov
push
xchg
push
cltd
push
xchg
clc
fwait
lret
fwait
leave
clc
xchg
jmp
lods
inc
mov
lods
popa
mov
add
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
ret
ret
pushl
push
mov
lods
dec
cmp
and
lahf
add
test
add
add
lret
fsubs
cmp
jp
push
mov
sar
clc
test
cld
stos
sar
std
stos
iret
cld
lods
sar
sti
cmpsl
lret
jmp
mov
inc
rol
test
pushf
popf
or
add
add
dec
push
dec
aaa
jae
jae
test
int3
into
out
iret
lret
cmc
lret
sti
leave
lret
enter
leave
mov
mov
stos
pusha
ljmp
adc
test
pop
pushl
push
int
outsb
fildl
call
xchg
mov
mov
xlat
mov
fdivr
mov
sar
ljmp
repz
lods
mov
add
add
add
add
pop
or
aad
dec
jecxz
fsubp
fistps
fcmovu
fsubr
mov
addr16
test
jae
movsl
pop
pusha
ljmp
add
lret
call
add
in
jl
repnz
mov
std
ret
loop
inc
loop
dec
loopne
dec
std
lret
std
lret
sti
lock
leave
divb
sahf
sbb
add
add
incb
std
std
add
jmp
or
out
in
sbb
jmp
xor
loopne
loop
les
mov
mov
add
mov
arpl
rolb
dec
add
fildl
jbe
ljmp
std
ret
sti
shl
std
shl
shl
std
shl
out
xlat
out
cld
aam
push
fdivr
fcmove
sar
mov
mov
add
std
std
incl
std
add
cld
pop
aam
push
mov
pop
xchg
lahf
or
ljmp
add
add
rolb
jo
fiadds
ja
out
and
std
shl
std
fldl2e
xlat
call
cld
fsub
fld1
cld
shl
push
jmp
rcl
sti
mov
popf
lahf
das
add
add
int3
into
int3
or
arpl
ljmp
add
movb
call
add
loopne
jns
out
xor
cli
int3
loop
cli
leave
cmc
hlt
ret
bnd
out
sar
out
aam
out
aad
ljmp
ljmp
test
incl
aad
push
mov
jae
or
insb
inc
sbb
int
jnp
sub
pushf
clc
jecxz
mov
out
loop
lret
jmp
fnstsw
leave
loopne
sarl
in
fistpl
in
call
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
jle
rol
stos
mov
mov
ret
mov
int3
insl
aam
int
aam
rorb
cmp
loopne
das
in
fisubs
jecxz
lock
jmp
or
incb
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
rcl
aam
sarb
or
or
int
add
incl
incl
fwait
lcall
mov
rol
or
into
into
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
enter
mov
mov
scas
scas
insb
lods
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
iret
into
std
mov
stc
mov
mov
sarl
gs
push
sbb
add
add
add
add
add
add
add
add
jno
jae
pushw
dec
dec
inc
das
das
das
sub
and
add
add
mov
mov
cmpl
ret
int
call
aad
dec
into
iret
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
je
jne
xchg
adc
outsb
outsl
ret
popa
mov
data16
outsl
insl
insl
jb
pusha
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cltd
lds
jno
daa
and
add
add
add
je
je
fwait
xchg
pushf
mov
xchg
mov
xchg
or
addb
dec
push
inc
mov
fwait
into
movsb
mov
mov
decb
lcall
cmpsl
stos
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsl
cmpsl
cmpsl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
pushf
cmc
cwtl
lcall
push
push
push
imul
jle
mov
xchg
notl
mov
pushl
push
lcall
lods
lods
push
stos
lods
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
lcall
cltd
lcall
xchg
mov
loope
jbe
out
nop
arpl
std
fwait
inc
jne
cmpsl
ss
scas
sub
jo
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
lods
cmpsb
lods
test
lahf
sahf
popf
jmp
cmpsb
call
push
ja
xchg
inc
jae
mov
imul
sbb
pop
call
or
mov
outsl
pushl
es
shll
inc
aas
xchg
rcrl
subl
je
push
mov
mov
test
scas
mov
pushl
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsl
movsb
movsb
push
add
add
push
push
test
mov
lods
pushl
mov
ljmp
cmp
nop
sbb
pusha
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pop
movsb
jmp
cmpsl
call
lcall
cmpsb
test
pop
add
add
arpl
adc
pushf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
pop
pop
lcall
add
mov
addr16
xor
jmp
outsl
lods
jmp
ja
in
jp
out
jle
push
jle
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
arpl
lcall
add
pop
pushl
or
dec
xchg
in
mov
push
xchg
xchg
leave
push
xchg
jmp
cmpsb
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
mov
inc
mov
cwtl
ljmp
pop
push
pushl
add
aam
js
in
outsb
scas
clc
cmpsb
int
cli
lods
iret
cld
lods
sar
std
lods
sar
cld
lods
sar
jmp
lret
mov
cmpsb
ds
std
add
xor
add
scas
mov
mov
aam
mov
aad
rcl
out
leave
lret
mov
mov
jmp
add
add
aad
jae
call
mov
std
mov
fdivr
cld
ret
cld
ret
inc
out
mov
ret
cmpsl
cmpsl
dec
jg
jg
add
add
stos
stos
stos
add
in
in
or
jmp
out
outsb
fcmovu
mov
add
mov
add
fldl
ja
out
cmp
dec
in
std
shl
call
in
call
out
call
out
test
call
into
in
scas
scas
scas
popa
addl
add
incb
std
std
incb
int
shrl
mov
add
mov
add
loope
js
repz
cmpsl
cld
loopne
cld
xlat
call
std
aam
cld
aad
stc
aam
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
cmp
out
mov
shl
ljmp
jmp
in
aam
jmp
fcmovu
scas
push
fwait
fwait
cltd
add
rol
or
popf
lods
xchg
dec
and
push
mov
ret
int3
lret
jbe
mov
mov
int3
adc
int3
outsl
fmul
rcrb
rcl
dec
in
loope
out
out
out
in
out
sbb
sarl
cmp
mov
scas
push
mov
mov
lds
sbb
bswap
int3
int
push
incl
jg
addl
lods
std
incb
mov
incb
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
in
cwtl
pop
mov
lock
cmp
sbb
xor
frstor
outsl
xchg
mov
push
ljmp
mov
outsl
sub
add
stos
push
adc
mov
push
inc
lods
dec
push
jo
mov
and
adc
shll
sbb
aaa
fisubrl
lahf
lret
add
loop
ja
push
xor
jg
fwait
and
mov
jmp
leave
xchg
lds
out
les
gs
iret
mov
xchg
add
pushf
arpl
out
cmp
lahf
loop
jmp
scas
pushf
xchg
inc
or
xlat
rcll
sub
mov
stos
jo
mov
pop
loop
jbe
jge
sti
jmp
mov
je
inc
fbstp
xor
in
mov
or
loope
cmp
daa
pop
adc
xchg
scas
mov
dec
sbb
sub
add
leave
cmp
in
lock
pop
xchg
rolb
sub
movsb
add
fisttpll
xchg
mov
pop
loop
xlat
insb
add
cmpsl
aad
in
mov
dec
and
dec
repz
gs
bound
xchg
inc
inc
xor
dec
dec
xor
inc
sbbl
daa
mulb
pop
in
ds
daa
or
pushf
push
fsubs
popa
and
xchg
out
imul
mov
add
loop
insl
popa
lods
ret
test
cmc
push
stc
jp
orb
mov
ja
ror
hlt
subb
mov
jg
jmp
cmpsb
mov
mov
enter
cld
pop
in
insl
mov
lods
mov
xchg
dec
xchg
sbb
mov
dec
js
xor
mov
push
inc
ret
scas
dec
fldt
or
mov
call
popa
cmpsl
and
and
test
sahf
fldl
or
xor
shlb
loope
jbe
push
sti
sti
pop
xor
xor
popa
jbe
fnstsw
les
xchg
leave
xor
js,pn
xor
test
inc
inc
fnstsw
lcall
mov
data16
jo
or
cs
jmp
jno
add
and
ja
rclb
or
faddl
xlat
adcl
adc
jo
jae
cmp
sbb
sbb
add
mov
aaa
mov
imul
rol
nop
sub
inc
adc
sbb
push
clc
lcall
push
leave
lock
lds
xor
scas
push
add
pop
cli
test
mov
dec
mov
sbb
xor
lret
mov
pop
scas
push
add
xor
jo
fwait
data16
push
gs
inc
and
popa
pop
lods
and
aas
fistpll
sbb
mov
ljmp
ss
nop
inc
mov
mov
stos
scas
cmp
aad
or
popf
dec
adc
sbb
and
aas
cltd
sbb
fdivrl
fstpt
ja
jge
test
test
lea
push
mov
add
jne
or
push
push
incl
loope
mov
jle
nop
in
adc
sub
xchg
mov
mov
push
mov
or
sti
xor
adc
and
inc
mov
adc
sub
mov
divb
cmpsl
cmp
arpl
xchg
bound
mov
fsubp
jne
cmc
mov
mov
cmpsb
mov
cs
loope
loop
dec
sub
and
and
mov
insb
sbb
sbb
bound
fidivrl
imul
dec
lds
cmpsb
sbb
sbb
jo,pn
jl
rcrb
cs
push
pop
sub
push
sub
stos
sub
inc
adc
pop
clc
mov
cmpsb
xor
dec
sbb
mov
push
jge
cmp
jle
jae
rcl
lods
sub
negl
imul
xchg
sub
insb
jge
jecxz
mov
fcompl
lods
sub
gs
lea
mov
mov
lock
fsub
mov
xor
in
jae
imul
mov
dec
shll
aam
mov
jne
mov
cmp
int3
sub
negl
xchg
inc
mov
mov
push
adc
jecxz
mov
push
decb
les
out
jg
xchg
dec
stos
xor
xbegin
ret
adc
inc
mov
scas
cwtl
sbb
push
popa
arpl
or
pop
mov
mov
orl
dec
adcb
push
sbb
call
rol
pop
pop
ret
fiaddl
xor
out
mov
int
movsb
les
mov
add
out
xor
hlt
out
cltd
xor
das
mov
outsl
xchg
xor
inc
insb
jle
sub
inc
mov
repnz
shrb
jl
cmp
out
xlat
xchg
out
cmpsb
push
andl
insl
cld
push
push
cmpsb
sub
rcrl
xchg
sbb
inc
repz
dec
push
add
aaa
fnstenv
push
xorl
rcll
call
mov
jle
in
mov
xchg
inc
js
push
decb
idivb
inc
push
mov
xchg
inc
fmull
sbb
repz
cmp
push
mov
pop
push
adc
sub
push
pop
dec
adc
shll
fs
xchg
mov
hlt
mov
cmpsb
jecxz
orb
aas
add
mov
cmp
in
ret
aas
lds
jle
stos
aas
lods
sbb
add
popf
inc
jmp
xor
js
hlt
dec
mov
inc
dec
out
sti
insl
in
sbbl
add
sahf
lcall
sbb
dec
mov
pop
cmc
fwait
or
cmp
jl
out
pop
xchg
inc
mov
test
xchg
rep
inc
and
inc
lret
bound
in
cmp
add
sbb
pop
movsb
mov
lods
sub
aam
and
aas
pop
inc
mov
dec
das
cmpsb
jbe
adc
pop
cmp
mov
push
push
jmp
xor
and
lret
inc
stos
mov
mov
mov
out
mov
aaa
aam
or
pop
gs
mov
nop
daa
das
stos
sbbl
push
scas
inc
cmp
cmp
movsb
int3
arpl
push
mov
subl
dec
or
sub
sbb
and
stc
jb
push
in
and
or
xor
enter
insb
jmp
fidivl
cmp
outsb
loope
adc
push
lods
gs
mov
mov
fsts
or
sahf
clc
sbb
popa
mov
push
jg
cmp
adc
daa
dec
inc
add
aaa
pop
xor
dec
inc
outsl
and
into
pusha
mov
shr
cmpsl
pop
insb
lock
cltd
js
mov
mov
iret
mov
push
add
out
test
nop
shl
imull
repz
fists
push
loop
pop
dec
into
add
arpl
outsl
daa
pusha
mov
scas
inc
mov
adc
push
arpl
enter
sbbl
or
cmp
es
mov
inc
fmull
stos
inc
fbstp
cli
mov
ret
hlt
push
out
test
add
push
lcall
jae
dec
inc
fdivrs
sti
xchg
inc
pushf
pop
test
sbb
and
fwait
xor
push
in
cmp
or
lods
xchg
test
add
notb
cmpsl
daa
mov
xor
dec
lds
mov
jecxz
pop
lds
sub
test
out
xchg
adc
jns
sbb
dec
adc
gs
or
sbb
lahf
lods
mov
lahf
mov
fisttps
shlb
data16
pop
icebp
sti
xchg
jecxz
les
add
push
mov
cwtl
std
xchg
or
adc
popf
mov
add
inc
cli
push
mov
bound
mov
movsb
and
cli
jb
lahf
mov
inc
data16
jb
stc
nop
and
inc
fdivrs
inc
mov
xor
sbb
inc
movsl
pop
lock
sub
pop
sahf
test
dec
movsl
cmp
mov
shlb
lds
push
popf
xor
push
shrl
cmp
lret
bound
lock
fidivs
subb
icebp
adc
enter
js
shll
xor
out
cmp
test
int3
lods
inc
mov
fbld
mov
adc
cmp
sbb
mov
mov
or
dec
in
pop
sub
cs
pop
lock
add
test
popa
push
movsl
push
fnsave
mov
fldl
out
cmpsb
sbb
mov
cld
test
xlat
outsb
pusha
jb,pt
mov
xor
cmp
fsubl
sbb
cmpsl
jb
loopne
jnp
ljmp
adc
jb
sbbl
and
jl
mov
ret
add
fnsave
daa
mov
fstpt
enter
mov
push
jp
subb
xchg
mov
addr16
pop
xor
mull
daa
mov
daa
flds
cltd
lret
cmp
mov
xchg
sub
xchg
addl
mov
std
test
lret
mov
fmull
xor
out
sbb
in
add
jb
insl
add
xchg
jno
add
es
fsts
mov
jae
insl
dec
cld
xchg
cmp
jb
inc
pop
sub
dec
jmp
wrmsr
jo
aad
fisubl
shl
pushf
xor
adc
testb
pop
jo
xchg
out
xchg
fidivl
out
pop
adc
leave
pusha
sarl
inc
fucom
xor
mov
jmp
popa
mov
xor
insb
sub
loope
push
cmpsl
ds
test
xor
push
call
inc
mov
in
adcl
push
sarl
lcall
insl
add
dec
stc
nop
jle
or
inc
scas
lret
bound
ljmp
xor
push
lds
ss
imul
mov
jnp
ljmp
cmc
pop
lds
or
daa
and
xchg
into
stc
std
mov
push
cltd
add
cmp
xor
dec
inc
xchg
pop
and
sahf
insl
jle
xchg
outsl
or
test
in
and
sbb
into
xchg
mov
test
mov
mov
fwait
dec
call
dec
pop
xor
dec
in
movlps
bound
testb
fwait
insb
add
adc
testb
ss
aas
cwtl
das
imul
jno
add
ret
data16
mov
ficomps
push
out
daa
mov
loope
push
jmp
mov
test
push
pop
add
cltd
and
mov
mov
inc
fsubl
dec
arpl
rclb
add
stos
jge
aam
adc
fs
dec
pop
test
iret
div
add
outsl
mov
fwait
xor
lods
add
out
add
call
test
jo
jecxz
es
adc
out
xor
inc
jp
arpl
sbb
mov
fsubs
xor
mov
ret
testb
ds
jb
sbb
dec
cmp
jg
aas
jmp
in
andl
int
or
pop
cmp
inc
fcoms
xor
push
mov
adc
mov
sub
out
imul
rcr
shrl
cli
mov
push
or
xlat
outsb
push
mov
mov
cmp
sti
xchg
movsl
fdivs
mov
fstps
pop
mov
push
data16
mov
movsb
cmp
pop
cld
xchg
jp
dec
in
adc
xchg
sub
icebp
and
test
lret
ds
cmpsl
adc
pop
iret
xchg
aam
fidivs
jl
add
dec
jecxz
jle
add
xor
inc
fcomps
mov
scas
inc
xlat
dec
lds
push
jmp
pusha
scas
inc
push
dec
xchg
jbe
out
gs
pop
cmp
imul
sbb
lock
push
mov
push
rcrl
shrb
and
xchg
push
adc
inc
test
rcrl
scas
adc
pusha
negl
sub
lods
pusha
ret
mov
mov
dec
aad
jg
cli
dec
loop
jmp
stc
nop
adc
pop
repnz
mov
and
jg
insl
add
mov
cmp
jno
mov
movsl
add
mov
push
mov
xchg
cmpsl
adc
fiadds
lret
xchg
fdivl
and
insb
adc
test
fnstenv
movsl
sbb
jle
xchg
sub
fs
mov
fdivr
xchg
into
sbb
std
loopne
fbstp
add
mov
xchg
dec
jecxz
mov
sahf
xor
mov
xor
sub
repnz
dec
add
cmp
pop
xchg
sub
cmpxchg
jno
bound
out
or
xor
jnp
sbb
mov
fidivs
stos
clc
sbb
ds
imul
inc
xlat
aam
adc
out
mov
jo
gs
fwait
fwait
sub
or
inc
xlat
push
sub
sahf
xor
mov
insb
add
aam
dec
mov
xor
fcomps
push
out
ljmp
jg
sub
push
push
sahf
jmp
lea
xor
int
fstl
add
adc
mov
inc
fst
xlat
inc
xlat
enter
sahf
jmp
ss
cld
pop
out
loope
pop
sbb
sub
subl
enter
hlt
mov
or
mov
xor
in
push
movsl
fstl
sub
das
jmp
movsl
cmp
sahf
cmpsl
out
test
xor
nop
arpl
or
mov
icebp
pop
stc
mov
pop
lock
adc
sub
sbb
inc
frstor
inc
or
jns
mov
pop
pop
mov
cmp
pop
cmpsb
cmp
adc
jg
xor
movsl
pop
xchg
sub
pop
hlt
cmc
adc
push
pop
xor
stos
daa
mov
jp
sub
jmp
or
mov
test
or
mov
lods
xor
gs
xchg
aad
das
clc
xchg
sub
push
mov
jno
loope
les
fwait
xor
dec
xchg
sub
enter
sti
xchg
ret
sbb
mov
stos
inc
or
adc
jge
push
call
xor
aas
out
mov
fisubrs
ficompl
cmp
mov
mov
sub
insb
fnsave
shlb
jbe
loope
js
test
xorl
mov
cmpsb
mov
fisubl
mov
fistpll
xlat
outsb
imul
jns
out
ds
scas
add
sti
xor
into
gs
pop
jmp
mov
pop
repnz
push
in
cli
dec
xchg
sub
push
ljmp
scas
popa
clc
std
push
pop
scas
lcall
ret
inc
xlat
popa
testl
aam
out
icebp
shlb
loopne
pop
jae
xlat
adc
push
sub
lcall
outsl
push
fisttpll
add
icebp
mov
sub
mov
mov
frstor
push
or
cmp
pop
hlt
pusha
pop
push
lea
arpl
xor
and
xchg
cmp
pop
add
das
jbe
std
xchg
mov
cmp
or
mov
ret
push
scas
jmp
ljmp
js
xor
mov
insb
imul
push
lds
out
enter
loop
jne
inc
fwait
lods
cmp
dec
and
pop
cmpsl
stos
aaa
jp
repnz
mov
dec
or
aas
arpl
test
test
jg
aas
loope
mov
scas
aam
xchg
cwtl
ss
loope
shl
cmp
scas
movsl
inc
rolb
cli
sbb
mov
xor
mov
sbb
decb
in
or
loopne
imul
dec
sub
mov
icebp
aas
lcall
and
mov
int
ret
xchg
iret
cmp
arpl
jne
or
cld
dec
daa
lahf
movsl
test
adcl
pop
aad
sub
clts
sti
lahf
adc
loope
out
mov
cli
lret
in
jle
loopne
add
fistl
and
xchg
xchg
add
xlat
outsb
out
movsb
cmp
xchg
sub
sub
shrl
cmp
pop
mov
imul
xlat
jg
pop
jo
cli
xchg
ljmp
adc
fsubrs
es
mov
adc
leave
push
stos
mov
test
mov
shrl
lock
push
scas
inc
jns
test
jp
sub
fdivl
mov
xchg
pop
pop
mov
sbb
xchg
fidivl
lahf
fbstp
sbb
jns
hlt
jmp
out
icebp
mov
pop
cmc
lock
stc
pop
aam
js
cmp
daa
lret
fstps
or
pushf
xor
sub
jno
stos
adc
push
and
andb
jnp
mov
nop
daa
out
pushf
xor
into
fnsave
sbb
pop
sahf
cmpsb
add
mov
sar
add
cwtl
out
jnp
in
in
test
fdivl
into
sbb
sbbl
outsl
repnz
dec
in
push
adc
add
outsb
add
push
mov
data16
lahf
inc
xor
andl
cmpsb
cmp
push
sub
sbb
out
test
pop
icebp
dec
arpl
push
inc
mov
jbe
popa
data16
push
push
and
jnp
aas
icebp
xor
fsubrs
inc
push
roll
jns
sub
outsl
fnstenv
leave
fbstp
jbe
hlt
ss
jno
pop
pop
out
push
shlb
jb
fbld
les
xor
jns
mov
sub
mov
repnz
inc
mov
xor
dec
int3
lcall
cs
xchg
mov
cmp
stos
adc
enter
daa
stos
pop
adc
stos
adc
jno
push
stos
xchg
sbb
testl
dec
or
out
hlt
xlat
stos
or
sbb
icebp
mov
pushf
arpl
push
pop
jle
xor
inc
fisubs
pushf
xor
inc
fsubs
xchg
pop
and
cmp
inc
pusha
pop
cmp
lea
cltd
xor
cwtl
sbbb
or
pop
cmp
pop
dec
out
fsubs
lret
fwait
pop
pop
out
test
add
int3
push
dec
pop
sub
mov
fs
out
adc
xor
neg
xchg
sub
sub
lea
pop
mov
cwtl
fs
leave
lahf
clc
std
lods
inc
stos
sub
dec
push
pop
cmp
popf
mov
or
out
or
xchg
sub
lret
push
mov
insl
orb
inc
pop
add
inc
cwtl
fs
push
cmpb
xor
add
jg
repnz
lock
jae
add
xchg
sub
ss
sbb
xor
mov
jge
jnp
adc
rorb
dec
loopne
sub
daa
mov
js
adc
push
inc
stos
lds
mov
sub
dec
in
dec
mov
insb
fldt
mov
xchg
xchg
or
outsl
push
fmull
lock
mov
ja
imul
and
cmpsb
inc
pop
repnz
movsb
cmp
test
mov
xor
mov
arpl
out
inc
test
pop
adc
sahf
xchg
xor
jl
mov
lahf
or
add
pop
lcall
aas
inc
pop
repz
pusha
fbstp
jl
mov
cmp
data16
pop
sbbl
sub
pop
imulb
sbbl
roll
test
out
imul
lods
adc
dec
in
jg,pt
mov
cli
xchg
add
sbb
sbb
and
inc
stos
dec
loope
addr16
lock
sub
or
ret
pop
push
in
outsl
in
mov
sub
dec
fucomip
dec
dec
in
push
inc
ficompl
cmp
mov
pop
mov
rorb
xor
rclb
mov
add
pop
pop
scas
jo
add
push
jp
decb
sub
subl
cmp
or
imulb
sbbl
cmp
mov
outsb
add
loope
lea
into
iret
data16
movl
sub
mov
cmovl
subb
push
push
mov
sub
push
movsb
dec
icebp
mov
shlb
into
adc
clc
divl
sbb
sbb
outsb
imul
loope
sub
dec
movsb
cmp
scas
inc
sbb
popa
mov
int
rorb
xor
sub
push
in
pop
push
jbe
scas
mov
pushf
xor
mov
cmpb
adc
sbb
in
test
lret
fildl
cltd
push
cld
testb
adc
lds
mov
ds
sub
fiaddl
daa
das
jg
mov
push
mov
rclb
cmp
xchg
int3
xor
repnz
enter
jmp
ljmp
sub
push
pushf
adc
test
and
js
int3
sbb
lahf
inc
testb
ret
mov
mov
mov
pop
aaa
into
andb
popf
mov
sub
das
mov
or
in
in
pop
hlt
lret
movsl
push
out
sbb
dec
add
pop
icebp
shll
dec
in
add
adc
and
pusha
imull
jns
cmp
mov
pop
cmpl
mov
in
mov
ja
aaa
cli
fnsave
push
xchg
sub
test
cmp
sub
daa
add
fidivrs
scas
inc
xchg
int
sbb
xor
std
loopne
inc
aam
pusha
imull
adc
fcmovnb
mov
mov
xchg
sub
cwtl
int3
arpl
xchg
aad
aaa
into
movsb
mov
aam
pop
sub
dec
cmp
fimuls
pop
dec
in
inc
in
test
xor
cmc
dec
js
add
inc
xlat
push
xchg
rclb
or
push
xchg
inc
mov
inc
add
je
xchg
mov
lods
inc
ficomps
imul
pop
ret
mov
test
xor
xchg
sub
aaa
into
fmull
adc
inc
fld
nop
xchg
xor
xor
jecxz
jmp
adc
or
jmp
sub
ret
push
lods
adc
jbe
sarl
pop
xor
ret
pop
repnz
pushf
xor
incb
inc
mov
outsl
push
pop
fcomp
jo
loop
push
aam
mov
out
pusha
fcmovnbe
imul
push
add
adc
in
xorl
mov
jno
movsb
cmp
pop
data16
sub
mov
cmp
sbb
shll
cmpsb
cmp
and
cli
dec
mov
adc
gs
jne
std
test
xchg
sub
insl
push
dec
sbb
inc
push
aas
pushf
popa
jne
push
clc
stc
nop
sub
clc
push
xchg
jne
imul
push
jp
pop
sahf
je
xchg
pop
push
dec
push
lods
dec
push
insb
aad
add
cwtl
xor
jmp
rcrl
inc
xlat
out
into
and
int
dec
push
testl
ljmp
out
mov
mov
dec
stos
xor
sub
shrl
push
in
jl
lods
inc
xlat
inc
mov
mov
mov
jg
pop
lea
adc
pop
and
sbb
jecxz
sub
popa
add
negb
addl
adc
lods
mov
arpl
sbb
and
subl
add
xchg
mov
sub
in
in
mov
jecxz
cli
repz
nop
and
jbe
add
mov
jle
aad
xchg
loop
pushf
mov
inc
xlat
aad
orl
sub
jp
adc
mov
fisubl
jo
pop
shl
movsb
cmp
and
or
jbe
scas
sahf
out
xor
mov
add
and
loop
mov
pop
dec
shlb
push
mov
jl
pop
shll
aas
or
push
xor
or
into
mov
inc
leave
jle
xor
movsl
cmp
mov
loopne
xchg
cmpsb
bound
lahf
mov
jg
dec
and
idivb
fcoms
sub
mov
movsb
mov
push
push
int
sbbl
out
xor
and
push
ja
pop
sbb
sub
lock
dec
fidivs
pop
dec
loope
pop
lods
inc
dec
pop
xor
lea
insl
pop
or
pop
jl
nop
push
push
or
cwtl
cmpsb
or
jmp
sub
pusha
inc
push
ljmp
and
or
add
lds
sub
fisttps
xor
fidivl
and
out
push
in
xchg
scas
or
or
or
pop
cwtl
xchg
in
or
stc
nop
xchg
mov
mov
aaa
jb
ss
mov
push
ret
pop
jbe
mov
mov
sub
stos
pop
fnstenv
mov
push
fstps
fists
mov
out
in
sub
movsb
xchg
hlt
sub
cmpsb
mov
fiadds
xor
popa
push
push
mov
pop
inc
scas
cmp
jns
popf
ret
icebp
fnsave
add
pop
jae
rorl
mov
pop
outsb
inc
fdivrl
inc
xchg
pop
jmp
xchg
push
test
in
push
lahf
stos
jns
negb
push
mov
or
clc
xchg
xor
rcrb
out
in
adc
add
and
mov
icebp
xadd
mov
scas
aad
shrb
mov
mov
icebp
mov
xchg
stos
mov
popf
test
cmpsb
inc
mov
cld
clc
pop
or
mov
sbb
call
testb
mov
int
in
sub
mov
in
and
pop
dec
cmp
aam
aam
cmp
dec
xchg
mov
test
push
mov
stos
inc
sub
fnsave
popa
clc
jae
jno
cmp
in
test
inc
out
test
icebp
mov
in
test
jg
pop
in
pop
xchg
dec
cld
xchg
jge
in
daa
inc
push
dec
cwtl
popf
outsb
hlt
cmp
mov
adc
mov
add
std
fsubrs
subb
out
xchg
push
testl
mov
xor
imul
and
pop
ja
iret
xchg
jo
push
test
xchg
mov
or
push
and
loope
in
insb
sahf
sbb
push
in
orl
call
cmp
fsubrs
pop
bound
in
mov
or
jae
int3
movsb
divl
mov
sbb
enter
int3
fisubl
mov
out
addl
or
push
lret
sub
sti
mov
out
sub
int3
add
iret
xor
jne
ja
into
fcoml
push
mov
inc
cmpsl
add
pop
call
sub
fs
xchg
fldl2e
cmp
sti
xchg
fnstenv
mov
loop
inc
add
add
cmp
dec
sbb
int
adc
or
cmpsb
insl
xchg
arpl
push
cltd
fstpl
pop
mov
push
sbb
xchg
jbe
cmpsl
mov
mov
cmp
imul
aas
xor
sub
push
leave
push
sahf
xchg
or
lret
les
in
sub
lods
je
pop
in
mov
cmp
add
imul
repnz
popf
lods
ljmp
mov
cltd
push
loope
leave
jae
lods
call
in
inc
outsl
add
adcl
in
fsubrs
ljmp
add
loope
rorl
popf
daa
cmp
test
jbe
rcrl
pop
repnz
sub
mov
mov
fistps
lcall
xorl
or
aas
loopne
xchg
fisubrl
mov
ljmp
cli
or
mov
push
dec
movsb
cmp
or
aad
cmp
pop
icebp
and
pop
leave
sti
nop
add
dec
sbb
scas
in
popa
clc
sbb
pop
data16
lods
xchg
std
or
icebp
iret
gs
das
clc
iret
loope
jecxz
negl
cli
push
push
push
xchg
fimull
leave
fcmovnu
popa
mov
hlt
sub
fsubr
sbb
call
roll
jecxz
imul
pop
dec
subl
or
jns
loopne
jmp
stc
nop
cmpsl
sti
push
jo
cmp
adc
fucomip
xchg
out
inc
xchg
popf
cmp
neg
aas
lds
add
push
ret
inc
pop
repz
xor
jbe
sbb
fidivrs
pop
lock
inc
xorb
jg
xchg
or
jl
fadd
fcmovnb
test
push
stos
mov
mov
lock
in
push
rcrb
scas
jne
adc
push
jmp
mov
popf
pop
xor
test
push
dec
push
xorb
pop
int3
fs
test
xchg
call
cmp
sti
inc
cmpsb
xor
xchg
push
pop
lods
nop
pop
ljmp
lahf
mov
cmp
xchg
xchg
sti
stos
sub
aaa
lods
pop
test
push
cmpb
push
mov
loope
sbb
call
bound
cvtdq2ps
xchg
lea
adc
mov
sub
movsl
int3
jecxz
cs
mov
std
enter
or
sahf
mov
adc
push
imul
mov
sbb
cltd
mov
or
insb
pop
sub
sbb
scas
push
out
loopne
ror
xchg
scas
hlt
add
mov
repz
mov
jns
scas
sub
loopne
mov
push
and
imul
pop
xor
pop
mov
test
es
test
and
fsubs
outsb
les
dec
daa
stc
dec
insb
sub
pop
aas
mov
out
push
mov
inc
loope
jmp
push
sbb
mov
aaa
xor
xor
ljmp
jecxz
xchg
adc
inc
lods
sbb
repz
pusha
pmaddwd
mov
icebp
mov
and
pop
jo
arpl
or
int3
inc
bound
test
ret
mov
enter
push
mov
sub
pop
mov
mov
int3
dec
icebp
mov
mov
pop
jne
xchg
sub
inc
loope
adc
sbbl
lds
mov
sbb
les
add
push
js
pop
or
and
out
mov
flds
pop
ret
insb
jnp
call
outsb
bound
int3
push
rol
sbb
imul
test
rcrb
pop
mov
stos
cwtl
lock
push
ret
insb
scas
ljmp
xchg
enter
xchg
xor
add
mov
loop
je
aaa
cmpsb
dec
lods
nop
inc
sbb
mov
dec
push
hlt
ret
pop
and
add
xlat
outsb
add
add
cld
lods
fnstenv
sbb
emms
sub
and
dec
cmpsl
mov
sub
mov
and
mov
fidivs
lods
jle
iret
and
addb
je
in
scas
xchg
push
mov
test
mov
in
or
dec
sbb
roll
push
mulb
mov
push
push
lods
xchg
xchg
xchg
sbb
dec
pop
fiaddl
sti
mov
sub
mov
pop
scas
mov
push
fstl
pop
hlt
popf
pop
inc
popf
inc
repz
es
repnz
adc
fs
in
and
xchg
sarl
add
sbb
xor
pushf
xor
lcall
dec
ljmp
jl
dec
jo
cmp
test
jne
fs
lds
push
lcall
inc
fisttpl
push
mov
cmp
adc
hlt
xchg
mov
or
ss
inc
test
add
sbb
test
add
cld
push
pusha
aam
adcl
jecxz
jg
or
pop
mul
jle
jno
bound
mov
into
pop
or
sbb
inc
xor
ja
in
out
add
xorl
cltd
pop
loope
fisubl
enter
loopne
cli
ja
and
jo
shrb
sahf
testb
int3
aaa
pop
test
bound
int3
arpl
movsl
add
adc
lcall
popa
lds
mov
stos
and
jl
ss
js
and
push
test
or
add
xlat
xor
push
xchg
sub
fidivl
insl
mov
ss
pop
fwait
cmp
mov
cs
push
movsb
cmp
mov
addr16
mov
gs
pop
aam
test
add
dec
cmp
or
das
jp
scas
jge
jp
dec
jno
jmp
sub
xor
push
popa
sbb
lea
loop
loopne
clc
outsb
dec
loope
push
xor
sahf
sbb
mov
lock
call
mov
ret
les
pushf
mov
ficoms
nop
xchg
pop
pop
dec
in
jge
mov
nop
adc
orb
lods
popf
rol
xor
mov
jbe
push
nop
xorb
cmp
pop
push
and
xorb
jle
out
cltd
fadds
dec
mov
aas
stc
adc
repnz
dec
jmp
test
test
mov
sub
imul
dec
xlat
cmp
xor
movb
push
aad
pop
ficompl
dec
push
int
jbe
aaa
cwtl
pop
xchg
shll
gs
and
rorl
jl
inc
test
clc
and
xchg
xor
out
jb
jl
jg
scas
adc
jb
mov
mov
jmp
mov
mov
fidivl
xchg
jg
xor
jno
fadds
or
rorl
sti
and
push
mov
jns
cmp
loope
fisttpl
jns
fldt
addb
stc
mov
dec
sub
test
xchg
sti
jp
aad
ds
notl
repz
pop
add
sbb
xchg
jno
dec
xchg
lret
fmull
sbb
push
fwait
nop
cmp
mov
fcoms
pushf
pop
inc
inc
or
xor
lds
nop
cmp
jg
xlat
scas
mov
xorb
or
fcomp
jae
test
inc
shrb
call
or
lcall
inc
fisubrs
adc
jge
and
push
sar
add
in
sub
inc
pop
rcrb
mov
pusha
xchg
adc
arpl
and
mov
imul
andb
mov
or
push
dec
out
aas
mov
sbbb
mov
mov
rorb
adc
lods
jo
adc
push
push
adc
cwtl
jbe
ljmp
push
mov
outsl
mov
imul
cmc
push
jne
lea
insl
add
pushf
adc
mov
jae
rcr
push
sbb
or
push
add
mov
sbb
or
mov
insb
jns
imul
and
test
lret
out
mov
xchg
out
rcrl
add
mov
out
ret
popa
addb
xorb
jmp
xchg
rolb
out
dec
out
mov
mov
mov
sahf
adc
mov
lcall
shl
movsb
dec
sti
xchg
or
maskmovq
divl
adc
cmp
and
inc
lods
aam
adc
inc
scas
fsub
push
jmp
cld
adc
xor
dec
add
pop
imul
jo
xchg
sahf
xor
gs
mov
push
xor
cltd
leave
sub
xor
xchg
fsubp
repnz
inc
enter
faddl
add
dec
in
loope
repz
jecxz
clc
hlt
inc
in
mov
rclb
aad
cmp
inc
sahf
stos
or
mov
js
mov
incl
aam
sbb
pop
enter
cli
ja
pop
push
repz
pop
xchg
sub
cmp
into
imul
push
pop
rcll
sub
cli
pop
cli
adc
jno
push
nop
sarb
pop
fldl
dec
cli
xchg
jg
pop
xor
push
cmp
fildl
push
xor
pop
mull
sub
or
sbb
pushf
ss
and
pop
push
sbb
and
aas
sub
pop
test
outsl
pop
les
push
stc
jo
inc
ret
arpl
enter
pushf
dec
sbb
jle
cmp
aas
shlb
inc
and
test
mov
stos
gs
rolb
out
sbb
mov
add
leave
lret
jb
sub
dec
filds
sahf
out
add
repz
dec
xchg
addr16
xor
cmpsb
lahf
inc
xor
shlw
cli
aas
xor
andl
iret
stos
pop
pop
mov
sub
and
sbb
inc
lods
cltd
add
and
mov
adc
xchg
cmp
sbb
imul
mov
das
fstpl
jo
shlb
xchg
mov
bound
loop
jno
cmp
lods
cltd
push
in
mov
rcrb
icebp
adc
adc
sti
sub
mov
icebp
push
cs
iret
sub
mov
xchg
fiadds
sub
push
lahf
sub
cmp
popf
push
test
in
sub
pop
int3
and
lret
pop
cmp
clc
stos
gs
and
test
mov
pop
adc
jl
sti
cwtl
mov
cmp
mov
xchg
mov
inc
popf
cld
xchg
iret
bound
repnz
mov
std
sbb
dec
imul
push
pop
sbb
js
sub
push
in
jecxz
out
lock
jl
fists
test
mov
xlat
hlt
or
fwait
mov
notl
xorb
test
or
mov
mov
jo
xchg
or
mov
push
add
prefetch
pop
pusha
push
sbb
iret
lock
je
dec
lret
movsl
mov
sub
jmp
adc
add
adc
inc
aad
sub
dec
cmp
or
jae
jmp
push
popa
sbb
int
pop
cmp
push
mov
mov
add
popa
repnz
mov
jne
mov
scas
inc
or
or
and
mov
gs
enter
adc
jmp
mov
sub
and
bndstx
iret
sbb
xchg
aad
xor
dec
daa
sub
mov
cmp
in
dec
sub
pop
lahf
rcll
clc
popf
xchg
lods
test
jg
int3
outsb
int3
arpl
jae
sub
pop
or
or
or
mov
fwait
daa
icebp
ret
sbb
ds
loope
mov
stos
loop
xor
frndint
stos
popf
out
xchg
push
iret
sub
mov
mov
jo
mov
mov
lea
icebp
sbb
cmpsl
add
dec
sub
ret
lahf
inc
or
outsb
add
pop
arpl
leave
jmp
xchg
fistpl
pop
pusha
xlat
cld
icebp
push
dec
inc
daa
sub
orl
insl
mov
mov
sti
in
ja
testl
xor
pop
cwtl
inc
xlat
leave
sbb
frstor
hlt
cmp
int3
dec
inc
push
xchg
jmp
mull
mov
loope
xorl
lods
xchg
in
or
aaa
xor
sub
or
repz
sub
fiadds
mov
xchg
jb
std
inc
mov
sarb
enter
inc
mov
leave
jge
cmpsl
mov
push
cmp
orl
in
test
shrl
add
xor
sarb
imul
aaa
and
icebp
les
and
js
mov
data16
mov
jecxz
sbb
sti
arpl
das
mov
sub
mov
imul
pusha
inc
shll
mov
lods
mov
lahf
lcall
lods
mov
mov
out
ja
test
inc
or
xchg
icebp
dec
add
sbbl
aam
cld
push
or
pushf
sub
mov
cmp
outsb
mov
cmp
in
cwtl
jp
daa
dec
or
inc
lea
cmp
or
push
fildl
lret
ds
mov
cmp
adc
je
sub
dec
daa
or
mov
sbb
loope
nop
adc
repz
test
imulb
mov
sbb
mov
cmp
rorl
mov
dec
push
jmp
inc
inc
movsl
dec
pop
xor
jo
pop
repnz
xor
mov
mov
dec
mov
sti
mov
ljmp
mov
fdivrl
xchg
in
or
mov
gs
shrl
call
aaa
mov
mov
lahf
mov
pop
mov
xchg
xor
push
mov
pop
fwait
in
inc
ds
jp
fs
insb
sub
dec
xor
pop
data16
int
inc
inc
mov
jo
gs
mov
addb
out
loopne
cmp
pop
fwait
xor
fsubrs
mov
jp
mov
cmp
clc
movsl
cmp
sub
ss
mov
or
adc
arpl
lock
test
out
mov
and
mov
xchg
sub
cmpl
jmp
xor
mov
popf
xor
adc
aad
cmp
adc
mov
xor
push
scas
jne
loope
or
xor
sub
xchg
fimuls
shlb
outsb
gs
lahf
sti
out
test
dec
or
jg
mov
rcl
rclb
dec
fbld
mov
and
test
jl
sbb
negl
lods
sbb
lret
fs
mov
mov
pop
int
or
push
sub
mov
fnsave
push
sub
mov
in
inc
mov
ror
mov
xor
add
mov
mov
jne
cmpsl
jb
xchg
push
jmp
jg
push
cmc
aas
xlat
jb
adc
and
cmp
pop
sbb
stc
in
icebp
lahf
sbb
shrl
test
jmp
cld
adc
xorl
push
sub
mov
mov
push
fsubrs
scas
aas
aam
das
push
adc
movsl
pop
loop
add
shr
or
sbb
sub
and
add
int3
out
mov
mov
sahf
movsl
sub
lret
ss
sti
adcl
sar
ds
dec
iret
mov
pop
sub
pop
pop
adc
sbb
cmp
popa
clc
xchg
pop
mov
stos
stc
cli
cmp
orb
loopne
cmp
or
mov
xor
or
cmp
cltd
add
clc
and
mov
iret
mov
mov
scas
loope
adc
cwtl
mov
scas
test
fldl
fidivl
bound
mov
inc
in
rcr
mov
push
fwait
jbe,pn
add
adc
pop
add
xchg
idivl
fstpl
fisttpll
mov
outsl
das
cmpsl
movsl
jne
call
jmp
sahf
push
jns
xor
pop
daa
sub
dec
jecxz
jns
sub
sub
adc
add
push
cltd
fldenv
popf
cmpsb
jno
inc
pusha
iret
pop
mov
add
mov
inc
xor
insl
mov
movsb
sub
lret
pop
mov
mov
daa
push
mov
aad
decl
stos
dec
pop
outsb
jae
decb
int
test
fs
andb
mov
inc
sbb
addr16
cmp
mov
stos
xchg
outsb
jge
mov
rcrl
adc
nop
mov
rorb
sub
adc
sti
jbe
adc
cli
xchg
cmpb
mov
xor
dec
rol
jne
std
sub
sbbb
shll
xchg
xchg
adc
shlb
hlt
jecxz
xchg
cmp
pusha
jae
xchg
mov
or
sbb
mov
mov
fnstenv
cltd
or
aad
sbb
pop
adc
popf
lods
imul
cmp
imull
pop
cld
adc
shr
mov
bnd
add
mov
stos
rcrl
mov
or
inc
mov
mov
pop
pop
or
push
mov
das
cli
test
gs
pop
mov
mov
inc
enter
lods
leave
out
addr16
and
or
fisttpl
fisttpll
rorb
sbb
add
or
gs
jae
add
test
lret
pop
std
add
ret
sub
lds
or
mov
addr16
sub
push
js
inc
cli
or
aam
insb
sub
out
divl
mov
inc
push
scas
cld
test
and
add
bound
xor
das
cmp
and
push
fnstsw
pop
cmp
pusha
mov
cmp
mov
popf
in
mov
orb
std
aas
ljmp
ret
aad
push
cmpsl
js
mov
loop
cltd
ret
mov
popf
jg
jl
lods
imul
fwait
mov
stos
inc
inc
push
sbb
fs
fs
jne
dec
pop
repz
shl
mov
cmpsl
cld
and
shlb
adc
in
cmpsb
les
xlat
push
insb
xchg
icebp
mov
inc
pop
mov
sbb
and
mov
push
sbb
xor
sub
pop
xor
ljmp
pop
jne
jge
scas
mov
ret
sub
dec
push
dec
cs
or
pushf
and
fldt
sub
jge
xchg
sbb
les
fisttps
cmpsl
out
jne
adc
and
xchg
enter
jg
jmp
loop
mov
out
cmp
cwtl
inc
jle
jle
xchg
push
or
mov
sub
ret
mov
push
icebp
push
test
xor
pop
add
rorb
and
add
push
lret
addr16
and
pusha
adc
pop
lret
push
mov
lods
jbe
or
out
and
rcrl
orl
xchg
push
dec
stos
xor
sub
mov
rorl
sub
jnp
inc
bound
xor
pusha
xor
cmpl
xchg
inc
xor
testb
aaa
add
xor
xor
scas
popa
outsb
lret
outsb
pop
imull
add
scas
pop
xchg
stos
ss
in
jmp
xchg
dec
and
cwtl
pop
jae
dec
andl
ret
aam
and
adc
scas
inc
addl
fcomps
aad
int
sub
cmpsb
pop
fimuls
and
cmpsl
mov
arpl
cmp
dec
es
cmp
das
outsl
mov
packssdw
mov
daa
cmp
push
out
pusha
xor
adc
fpatan
sub
jp
icebp
pusha
push
cmp
std
cmp
xchg
jns
pop
and
push
out
vmulps
out
or
push
aam
add
xchg
in
and
fistpl
mov
xchg
push
xor
cmp
cmpsl
mov
lds
xlat
icebp
sbb
mov
fbld
fsubrl
cmp
mov
add
cmp
pop
and
dec
add
push
push
and
insb
repnz
cmp
add
lahf
jo
mov
fmull
jbe
cs
sbb
mov
pop
idivb
fisubl
jmp
pop
pop
das
mov
jae
adc
add
dec
sahf
cmpb
rcr
and
dec
pop
xor
and
out
lds
loopne
lods
imul
jge
xchg
das
mov
push
lcall
push
in
lcall
or
mov
pop
add
add
ficoms
enter
orl
cmpb
in
sbb
xchg
xor
pop
icebp
mov
cli
in
xchg
sbb
femms
movsl
mov
es
insl
in
push
mov
aas
movswl
sbb
sarb
pop
sub
mov
daa
sahf
loope
inc
pop
push
cmp
mov
data16
insl
jp
shll
lods
push
imul
lds
int3
lret
nop
push
hlt
popf
inc
pop
dec
add
lds
ljmp
push
mov
xor
das
add
int
test
adc
inc
fucom
movsb
leave
fistps
mov
sbbb
push
clc
popl
mov
int3
subb
xchg
xor
in
hlt
mov
mov
fidivs
mov
adc
aaa
stos
stos
mov
inc
pop
mov
push
add
mov
das
arpl
mov
stc
adc
jp
mov
xchg
xor
xchg
pushf
xchg
xchg
sbb
mov
jns
push
sahf
cmp
loopne
xchg
adc
add
fwait
jno
test
je
and
jecxz
xor
inc
popa
pushf
dec
scas
mov
cld
lret
adc
push
or
mov
cmpsb
mov
push
jge,pt
outsb
dec
pop
lods
dec
or
lcall
mov
mov
mov
mov
lds
out
lods
pushf
stos
xor
fstpt
pop
xlat
jbe
daa
cmp
dec
adc
mov
or
mov
in
dec
push
add
sbb
dec
cmpsb
test
xorb
mov
es
std
mov
sbb
fbld
ret
jo
push
xchg
in
xorl
fsts
ss
mull
adcl
mov
pusha
scas
fstp
outsb
dec
out
xor
mov
sub
and
fdivs
cmp
xchg
mov
xor
sti
fnstenv
sbb
subl
movsl
sbb
sbb
inc
mov
shrb
inc
fnstsw
cmc
movsl
cmp
mov
popa
jne
jle
mov
cmc
mov
lds
mov
ret
mov
imul
sbb
test
or
cld
fcmovb
dec
cmp
sub
sub
mov
iret
les
cmc
out
dec
sbb
std
ja
xor
dec
in
inc
test
cmc
mov
aaa
fsubrl
notl
cwtl
aas
push
out
xor
outsl
pop
cld
insb
or
sbb
in
and
dec
hlt
fsubrp
rorb
cmp
pop
mov
pop
fwait
or
mov
dec
jge
jl
js
out
sub
jecxz
add
out
xor
and
rcll
lds
adc
pop
push
mov
xchg
rcrb
es
mov
cltd
jbe
and
jecxz
push
or
into
lods
mov
imul
sub
xor
mov
dec
xor
sbb
cwtl
xchg
aam
roll
inc
loop
cmpb
xchg
pop
aas
out
loopne
or
lds
dec
or
pop
sbb
sub
std
add
fldenv
aas
fcoml
add
inc
pop
lock
aas
cli
pop
scas
pop
adc
jecxz
cwtl
jbe
icebp
xor
xor
aas
xchg
movsl
or
or
shlb
ds
lahf
xorb
rcr
repz
xchg
mov
fwait
stc
pop
int
cmp
push
bound
es
std
pop
addr16
push
scas
inc
sbb
jle
sub
lret
push
lock
ds
xor
pop
test
cmp
sbb
inc
sbb
clc
ja
sub
rclb
push
mov
push
sbb
out
ja
mov
pop
inc
xorl
int3
mov
or
out
jbe
xor
dec
mov
leave
and
ja
mov
sbbl
jmp
lahf
lret
adc
pushf
mov
jle
jno
call
test
mov
insb
xlat
sbb
add
jg
pop
jle
mov
repz
fsubrl
cmpsl
imul
jbe
mov
in
jle
push
mov
imul
loop
adc
jno
push
mov
adcl
loopne
testb
movsb
inc
mov
mov
sub
mov
stc
cmpsl
dec
decl
jle
insl
in
fdivs
jae
movsb
sahf
fnsave
xchg
adc
repnz
cmp
adcl
push
and
es
inc
fidivs
lds
gs
testl
cwtl
das
xchg
roll
add
push
xor
jb
bound
pop
and
sti
jno
in
sbb
lcallw
push
jb
adc
ss
cltd
push
inc
enter
in
stos
insl
insb
imull
or
cmp
xlat
mov
xchg
fistl
mov
adc
cmp
fcmovnu
jno
ds
pop
xchg
lock
xchg
mov
pop
cltd
dec
imul
lds
push
outsl
xorb
int3
lret
mov
out
fadd
enter
ljmp
mov
lret
inc
push
pop
mov
js
mov
push
cwtl
adc
pop
lea
and
mov
jne
dec
lock
in
sbb
dec
jecxz
sbb
cmp
scas
jl
cltd
mov
cmc
loopne
es
xchg
jmp
sbbl
mov
or
pop
enter
shlb
mov
sahf
bound
pushf
jmp
lods
pop
mov
inc
popa
enter
pop
pop
cmpb
icebp
cmpsb
mov
xlat
push
fsubs
sbb
jns
jo
sub
mov
loopne
aas
insl
test
add
int
adc
jmp
push
inc
aam
lds
iret
push
mov
mov
fisttpl
mov
sti
adc
ficompl
hlt
adc
js
enter
into
enter
inc
cmp
inc
stos
lret
cmp
lret
aad
aaa
inc
mov
cwtl
sub
outsb
jbe
ret
call
pusha
inc
icebp
inc
mov
mov
mov
sahf
imul
aam
mov
dec
fidivl
adcb
mov
and
lcall
sbb
loop
add
out
jae
xchg
hlt
mov
inc
adc
icebp
scas
sbb
sub
lcall
push
stc
and
clflush
lods
addr16
inc
rorl
cmp
cmp
cwtl
outsl
add
xlat
sub
push
pop
popf
jg
inc
jmp
add
bound
sbb
lret
and
xor
adc
repnz
das
addr16
les
or
pop
jle
lods
mov
cmp
stos
mov
ljmp
inc
ss
aam
mov
cmp
xchg
push
adc
push
inc
xor
push
sbb
fwait
lods
mov
push
mov
fidivl
push
clc
jg
dec
jmp
jbe
sub
sbb
xchg
in
mov
cltd
and
fwait
mov
inc
shrl
fisttpll
rolb
dec
test
popa
fisttpl
jno
add
outsl
add
adc
aaa
jns
movsb
test
daa
outsb
pop
inc
idivl
imul
ds
mov
inc
fsubrs
pusha
pop
enter
dec
pop
push
iret
orb
pop
pop
and
outsl
ret
fildll
into
data16
ja
mov
adc
outsb
mov
fisubrl
cltd
mov
inc
dec
cmp
jmp
dec
sbb
inc
scas
push
mov
aad
xor
out
jp
bound
mov
cmc
fcoml
movsl
mov
fs
and
pusha
ss
jnp
jle
push
out
mov
ds
loope
popf
cmpsl
sbb
xchg
sub
fwait
mov
dec
pop
inc
jb
mov
rcll
pop
push
stc
adc
and
xor
fs
and
sbb
jnp
pop
fisttpl
cmpb
lods
in
mov
inc
add
aaa
test
cwtl
fists
das
xor
fsubs
add
dec
or
test
sbb
mov
dec
shl
stc
arpl
jmp
decb
ljmp
fs
scas
sbb
lret
bound
cmp
mov
js
lahf
dec
ret
incl
je
loop
test
add
lret
or
and
adc
clc
repz
xchg
cs
scas
push
cmpsb
jle
fdivs
inc
mov
int3
out
loop
arpl
xchg
and
call
lea
cmp
cmp
inc
cmpsl
test
adc
mov
ret
pop
into
cmpsl
and
stos
push
enter
popa
fcompl
push
and
dec
fdivl
mov
pusha
shrb
rorl
jecxz
int3
arpl
hlt
mov
and
insb
inc
das
shll
lret
sbb
ss
push
add
jnp
jns
adc
lock
lods
inc
repnz
mov
das
push
jmp
cmp
sti
pop
dec
scas
jge
mov
or
mov
fcmovnbe
sub
pushf
pop
ret
and
cmp
ret
add
pop
icebp
insb
inc
lahf
stc
inc
rorl
leave
lea
hlt
imul
shrb
and
fdiv
out
pusha
mov
daa
cmp
loopne
jns
nop
jnp
test
pop
mov
out
mov
and
ficomps
mov
adc
push
sbb
add
inc
fs
jmp
jae
fabs
push
popa
adc
mov
mov
je
std
gs
out
add
add
repz
cltd
pop
sub
pop
cmc
lret
dec
jge
jl
mov
fcom
fisubl
pop
dec
push
sti
pop
hlt
sub
or
jmp
ja
shll
xchg
sub
out
cmp
inc
mov
js
clc
add
adc
testb
jp
stc
aad
pushf
cmpsb
cmp
cmp
mov
scas
ret
or
push
mov
clc
inc
push
xchg
sub
jg
jecxz
add
pushf
sbbl
xor
jb
push
insl
cltd
std
outsb
push
rcrl
or
scas
fcmovne
fst
lods
and
push
adc
js
dec
add
mov
cli
xchg
fucom
xor
push
sbb
or
shr
xchg
mov
add
popf
adc
cwtl
lds
shrb
in
pop
xor
ret
sbb
lcall
ds
lret
dec
xchg
or
pop
in
jge
push
imul
aam
sbb
push
movsb
divl
xlat
mov
sbb
add
add
cmpl
pop
stc
sub
sahf
clc
pushf
or
mov
or
dec
mov
xchg
orb
inc
push
jne
test
ret
push
and
or
cs
add
pop
mov
pop
mov
cltd
mov
lret
push
xor
shll
sub
cmp
in
dec
cmp
out
sub
sub
dec
xor
je
cmp
add
sub
decb
test
pop
out
xchg
out
adc
mov
jmp
mov
adc
add
sub
call
jns
jge
repnz
inc
jnp
int
add
dec
xchg
sbb
pop
sbb
xlat
imul
mov
sub
popa
inc
cmp
pop
out
and
pop
xor
dec
jbe
add
fwait
cmp
loope
push
adc
sarb
fidivs
enter
fwait
stos
add
and
xor
or
fwait
jecxz
lods
clc
dec
clc
jp
xor
mov
and
adc
sahf
std
in
das
shrb
cmc
xchg
data16
cltd
lock
pop
and
or
cmp
sub
mov
ret
xor
adc
lret
les
push
insl
cmp
mov
adc
pushf
fnsave
mov
mov
mov
add
xchg
xchg
dec
test
mov
stos
cmpsb
sbb
js
cmp
pop
xlat
fdivrl
dec
cli
jp
test
inc
sub
dec
sbb
jge
test
add
push
pop
movsl
cld
lret
out
stc
xadd
sahf
int3
xchg
in
cmp
cltd
js
subl
or
mov
js
push
add
fsubrs
insb
mov
sub
fcmovnbe
insl
or
and
or
sub
iret
jge
mov
mov
lcall
dec
movsb
iret
jp
loope
scas
adc
push
bound
push
aam
push
mov
cltd
dec
ror
cmp
ljmp
rcl
and
enter
ficoms
add
push
popa
sbb
int3
fiadds
pushf
push
or
pop
ret
adc
sub
pushf
insb
xor
pop
xchg
push
leave
inc
mov
jmp
arpl
cli
in
inc
flds
test
jns
inc
mov
ret
loop
push
les
pop
test
jns
in
cmp
fisubrs
sarl
mov
jns
repnz
jns
pop
leave
and
jae
mov
cmpsl
nop
mov
xor
push
fwait
mov
dec
scas
dec
mov
lods
push
inc
ret
cmp
xlat
cmp
movsb
inc
sbb
lds
xor
pop
sbb
and
mov
mov
mov
pop
ret
pushf
fnstcw
in
cmc
mov
inc
dec
sarl
js
pop
and
pop
fstpl
push
out
rolb
test
cmc
cmp
adc
ficomps
jne
mov
cwtl
fdivl
inc
pop
popf
pop
push
mov
cmpsl
xchg
sbb
stos
outsb
inc
pop
adc
mov
add
mov
jns
mov
xchg
inc
mov
into
call
fcoms
inc
dec
jbe
aas
insb
in
adc
in
push
gs
popf
xchg
stos
bound
xchg
inc
jns
stc
pusha
int
xor
jmp
push
loop
fdivs
test
sub
shrl
xchg
xor
lcall
lret
fcoms
add
bound
sub
push
aas
push
cltd
xor
cwtl
ds
stos
inc
lods
push
stc
mov
jg
xor
int
cmp
xlat
daa
mov
inc
insl
mov
ficoml
and
jle
inc
push
mov
sub
aas
aam
je
sbb
cmpsb
hlt
addr16
inc
out
pop
xchg
add
dec
jle
popf
ss
mov
xlat
xor
add
adc
test
shr
jbe
filds
lock
mov
ret
divl
xchg
daa
int3
cmc
cmpsb
push
push
and
in
push
js
add
lret
sub
adc
insb
sbb
pop
jle
jmp
push
iret
loope
xor
out
popf
arpl
mov
jne
repz
push
scas
add
das
cltd
pop
xchg
adc
leave
add
fcmovu
jne
lcall
push
mov
mov
es
decl
in
dec
jae
aad
iret
loop
negb
sbb
mov
pop
cmc
push
hlt
inc
icebp
int
sub
adc
imul
mov
iret
mov
mov
mov
ljmp
push
mov
pop
pop
pop
xor
je
fcmovnu
test
mov
push
and
and
xlat
insl
xchg
filds
jnp
mov
out
ficoml
in
call
iret
jnp
adc
push
fldl
or
add
cmp
out
and
std
fildll
or
sahf
mov
mov
adc
jecxz
add
mov
inc
adc
cmp
xchg
mov
je
and
lcall
mov
js
and
jge
push
clc
xchg
pop
mov
fsub
sub
sbbl
adc
mov
mov
push
cmc
and
addb
in
pushf
xor
cmp
sub
lea
jne
xor
xchg
ds
xchg
ja
mov
ljmp
ja
cmpsb
push
xchg
out
into
push
hlt
push
jno
or
adcl
addb
xlat
pop
add
cmp
fwait
test
jmp
out
xor
add
mov
lcall
mov
ss
push
lea
lods
mov
xor
aam
and
cli
cmp
pop
pushf
and
lcall
test
inc
lret
outsb
subl
xchg
xchg
sbb
setb
leave
leave
mov
xchg
ds
mov
add
int
gs
std
xor
out
push
subl
ret
xchg
imul
dec
sbb
jp
or
out
sbb
jmp
jb
push
xchg
cmp
push
jo
cmp
mov
jnp
mov
sub
jl
push
lods
mov
mov
xchg
js
shrl
pop
add
jns
mov
xchg
out
fs
mov
fdivrl
sub
sub
sbb
sub
xchg
mov
sarl
cmpsl
xor
inc
pop
lea
lea
aam
xchg
lcall
arpl
aas
mov
mov
and
mov
lea
push
sub
sbb
and
pop
mov
std
pop
hlt
sub
push
pop
sahf
lret
ficoms
in
and
push
jnp
inc
arpl
pop
popa
lret
push
dec
test
xor
add
insb
push
mov
mov
push
push
or
dec
pop
scas
dec
xchg
mov
xchg
mulb
cmp
das
mov
hlt
sarb
rolb
ffreep
xor
fstpl
pop
xor
and
xor
pop
and
pop
add
cmpsb
clc
sbb
cmp
cmp
out
stos
repnz
test
cli
into
sbb
subb
cmp
mov
push
jle
in
jg
fcomp
lret
push
and
mulb
mov
adc
xor
arpl
jo
inc
repnz
sub
or
adc
jl
scas
pop
loope
mov
pop
dec
dec
inc
loop
xchg
loope
mov
and
inc
or
nop
cmp
dec
sbbl
lods
testb
adc
push
or
fs
stc
xchg
xchg
icebp
mov
stc
stc
nop
sub
add
push
mov
repnz
pop
jae
inc
arpl
xchg
loopne
lods
sti
mov
sub
imul
pop
or
pop
cmp
mov
lret
inc
call
dec
sbb
mov
dec
adc
mov
repz
or
aam
xchg
lcall
bound
into
aam
ss
std
mov
sub
xchg
mov
push
sub
imul
mov
loop
push
cmp
xchg
xchg
sub
mov
and
dec
adc
jle
jp
daa
ss
push
movsb
lret
jbe,pn
adc
cmpsl
fs
sub
pop
stos
and
fdivrl
stos
push
inc
leave
test
cmp
leave
add
sbb
cmp
mov
cld
pop
addb
aam
mov
in
icebp
mov
daa
xor
push
out
ret
cmp
push
popf
aas
pop
push
fiadds
jge
jg
sub
push
push
jl
arpl
lods
mov
insb
out
cmp
icebp
mov
jns
sub
xor
ljmp
call
test
push
and
inc
leave
mov
pop
push
jmp
rolb
out
or
xchg
mov
loopne
mov
dec
lds
or
lahf
jb
xchg
or
pop
jne
xchg
into
jl
inc
scas
out
push
push
cmp
pop
xor
orl
push
and
sahf
rcrl
scas
xchg
jno
cmpsb
fwait
add
divb
cli
cmp
rcl
mov
insl
fldcw
rcr
int3
iret
divl
jo
and
inc
jne
mov
push
add
add
mov
fnsave
loope
jmp
cs
mov
scas
sti
ret
pop
cmp
pusha
inc
movsb
dec
gs
addr16
cmp
cmp
int3
and
xchg
aam
adc
jb
shll
repz
sub
add
add
cmp
mov
xchg
pop
push
andb
insl
ja
pushf
into
enter
mov
sahf
mov
pop
or
addl
inc
inc
sbb
test
jle
push
out
lahf
cli
pushf
fnstcw
mov
leave
xor
jo
xchg
lret
pop
nop
jmp
es
inc
jno
xor
icebp
andb
push
fnsave
pop
jbe
cltd
and
dec
dec
mov
jecxz
loopne
lea
and
cmp
sub
mov
cmc
pusha
sar
shrb
sbb
bound
inc
fstpt
xchg
or
inc
inc
lods
inc
jne
loop
in
sbb
jnp
bound
scas
out
loopne
ret
xchg
dec
jl
xorb
loopne
out
cmp
icebp
fdivs
mov
lahf
pop
xchg
mov
scas
cmp
xchg
jg
stc
les
mov
shrb
in
mov
icebp
scas
jl
adc
xchg
sbb
mov
inc
das
pop
xor
andl
and
jno
jmp
xlat
add
mov
lock
rcpps
pop
into
xor
mov
add
repz
into
or
sub
in
in
pop
jno
aaa
adc
sbb
or
mov
mov
mov
idivl
sub
push
clc
out
add
or
cmc
jp
dec
hlt
ljmp
jg
out
rcll
je
jne
mov
sub
and
jb
push
sti
inc
fstpl
lahf
push
mov
xor
test
jae
add
lds
pushf
mov
insb
push
cli
and
sbb
lea
jmp
mov
ret
dec
enter
sbb
popf
add
aam
mov
insl
in
pop
mov
stos
pop
out
lret
push
and
mov
push
int
imul
xchg
aas
mov
lock
pop
vandps
sbb
pop
and
in
push
negb
inc
test
lahf
popa
clc
iret
jae
outsb
scas
xor
lcall
sahf
xor
aas
rcrl
push
sub
xchg
pop
test
pop
xchg
gs
ja
xor
aaa
ds
ffreep
arpl
mov
cli
push
je
mov
sub
xor
ja
or
push
adc
and
mov
aad
sbb
mov
loopne
add
rorl
mov
aad
aas
icebp
repnz
adc
cwtl
jp
fdivrl
mov
arpl
out
xchg
pushf
xor
pushf
cmc
and
jl
lahf
push
push
sarl
mov
adc
jl
xchg
sbb
dec
out
orb
in
mov
aas
xor
gs
dec
loopne
jle
out
test
movsb
xchg
enter
lahf
insl
and
movsl
adc
test
dec
cmpl
cmp
dec
add
push
adc
add
push
and
bound
out
sub
sti
mov
sub
pop
dec
pop
in
cmpl
jl
orb
pop
inc
fidivrl
xor
and
mov
arpl
jg
pushf
xor
fmull
es
pop
cmpsl
xchg
mov
xchg
jg
in
mov
test
cwtl
xor
inc
cli
ficompl
scas
subl
inc
xchg
les
rolb
ret
leave
int3
pop
je
loopne
sbb
xorb
adc
xchg
in
gs
mov
mov
gs
fsts
rcll
enter
xor
cmpsl
mov
and
add
cld
shl
sub
sub
mov
jb
jmp
or
mov
push
lahf
jge
rcrb
daa
sahf
insl
add
test
cmp
arpl
xor
aaa
bound
stos
mov
fidivl
xor
push
out
in
adc
scas
fldln2
pop
lret
xor
fwait
aas
add
stc
mov
and
fbstp
js
cmp
sti
xchg
js
sub
pop
pop
mov
incb
inc
jae
adcl
push
fwait
jg
jae
mov
xchg
sub
lahf
mov
sbb
xchg
pop
jnp
jge
cmc
mov
pop
mov
nop
out
shrl
mov
out
stc
add
icebp
enter
jb
imul
call
mov
sbb
ljmp
out
jne
mov
shl
fdivrl
mov
int3
fisubrs
scas
lods
dec
cmp
xchg
xor
sbb
push
dec
and
popf
repz
sub
sahf
scas
and
lcall
imul
rolb
cmc
mov
cs
ret
dec
add
lret
xchg
scas
nop
stc
and
mov
mov
scas
or
dec
outsb
push
lahf
cwtl
xchg
jecxz
mov
loopne
arpl
mov
dec
adc
icebp
xchg
sbb
push
add
pop
leave
dec
sub
xchg
in
xchg
mov
sbb
mov
stos
jns
cld
testl
loope
lods
xchg
orb
cmc
pop
inc
dec
dec
inc
pop
subl
xlat
or
sub
repnz
adc
add
mov
lcall
lret
jne
and
ret
push
inc
outsl
mov
clc
dec
add
dec
das
pushf
imulb
leave
jle
sub
leave
pusha
test
enter
jo
mov
cmc
mov
pop
jl
xor
std
shrb
lret
addl
pop
dec
mov
jp
ljmp
cmp
stc
iret
insb
add
jne
push
cmpsb
lock
dec
movsb
cs
imul
jge
add
sbbb
in
dec
xlat
and
add
inc
pop
cmc
je
mov
aad
lods
inc
in
cmc
shrb
es
pop
jae
divl
pop
push
xor
mov
inc
mov
lods
mov
cmpsb
inc
mov
sub
and
cmp
incb
sti
inc
dec
je
lods
xchg
push
imul
repz
push
push
mov
fcoms
push
popf
push
popf
or
pop
push
ret
push
mov
push
imull
jg
leave
sti
bound
xchg
rcll
adcb
nop
out
push
insb
jg
add
pushf
xor
cwtl
mov
dec
or
rcl
aam
inc
pop
int
pop
mov
inc
rcl
mov
es
arpl
pop
push
or
sbb
lcall
add
push
mov
mov
add
inc
out
out
movsl
add
jg
in
jae
jecxz
sub
mov
jl
les
pop
mov
and
vmovntps
cwtl
mov
xor
js
mov
popa
ret
inc
mov
fisubrs
loopne
loope
mov
add
and
enter
in
push
out
mov
mov
in
loopne
test
lods
je
mov
dec
imul
pop
pop
or
sbb
sub
add
repz
inc
mov
stos
in
pop
popf
xchg
add
or
divl
mov
call
mov
xchg
sub
add
js
xor
mov
cltd
dec
dec
push
arpl
outsl
sbb
cmp
testb
sub
push
in
notl
and
mov
cmc
sahf
jne
inc
cmpsl
mov
mov
xchg
in
orl
shll
pop
or
das
leave
pop
popf
iret
mov
lret
mov
mov
ljmp
scas
mov
rcr
ficomps
jge,pt
repnz
dec
lcall
push
les
cltd
stos
push
scas
dec
and
insl
and
push
sti
call
xchg
imul
movsl
in
jg
mov
jp
pop
jne
pushf
sub
sbb
lret
inc
mov
roll
and
pop
push
jmp
ret
sub
mov
dec
loop
pop
shlb
mov
xchg
shlb
fldenv
jmp
in
inc
idiv
pop
call
scas
and
lea
cmp
pop
adc
push
sahf
inc
fcmovne
lea
xchg
arpl
mov
fisttpll
push
jno
repz
gs
inc
sarb
pop
pop
jb
push
xor
sbbl
dec
jns
jne
xor
pop
ret
xchg
test
mov
adc
xchg
jno
loop
out
xchg
xchg
leave
orb
xchg
fstpl
scas
test
xchg
iret
sub
add
or
sbb
mov
add
lds
sbb
xlat
lods
or
push
sbb
or
mov
int
cmp
push
xor
fnstsw
xor
std
mov
xor
movsb
cmp
and
mov
loop
imul
and
jb
dec
inc
mov
and
dec
mov
sub
aas
lcall
and
add
xor
movsb
inc
rcl
imul
out
dec
out
frstor
in
sbb
shlb
sbb
movsl
bound
shll
xor
iret
cmp
idivl
pop
jecxz
dec
and
js
adcb
xchg
push
fisubl
mov
xor
mov
jo
shrb
pop
pop
mov
sbb
inc
push
cmp
adc
push
mov
ds
jb
jne
nop
xor
leave
pop
pop
xlat
pop
icebp
pop
andb
stos
js
fstl
push
and
outsl
cmp
fsubs
or
shrl
mov
arpl
mov
sbb
lds
fimull
arpl
jae
enter
dec
ljmp
sti
dec
mov
mov
negb
dec
pop
dec
ret
mov
mov
xor
incb
jle
dec
rcl
scas
sbb
inc
mov
mov
cs
into
jo
inc
pusha
scas
in
stos
mov
rol
es
push
pop
loop
ds
popf
cmp
enter
aam
push
andl
push
movsb
fldenv
ljmp
xor
andb
pushw
fdiv
das
cmpsl
fistpl
bound
xchg
dec
dec
mov
add
push
push
dec
ret
leave
aad
sti
or
jns
repnz
clc
mov
out
je
addr16
clc
pop
jmp
into
shrl
push
mov
pop
sub
mov
adc
mov
mov
cwtl
and
pop
adc
mov
xor
mov
sbb
loope
mov
cmp
arpl
shl
aas
js
push
jecxz
cmpsb
enter
dec
pop
inc
jns
les
mov
pusha
subl
cmp
adc
daa
test
bound
xor
nop
jmp
jne
enter
inc
int
hlt
in
mov
pop
test
dec
xchg
dec
movsl
mov
mov
adc
inc
loopne
xchg
mov
push
sbbb
lcall
and
stc
lret
comiss
sbbl
xchg
fstps
jb
into
divb
xchg
ds
or
mov
push
xor
mov
in
push
sahf
addl
call
loop
sbbb
cmp
mov
in
sub
adc
scas
push
jp
js
cmpsl
adc
fwait
pop
loopne
sub
xchg
fwait
test
sub
sti
fnstsw
sbb
add
cs
jo
movsb
xlat
inc
into
pop
cs
popa
cmp
lcall
out
ret
mov
mov
repz
xchg
dec
inc
call
adc
ss
imulb
cli
sbb
hlt
xchg
xchg
mov
ret
dec
lahf
getsec
mov
jbe
out
xor
ss
loopne
push
xorb
dec
dec
pop
gs
push
mov
scas
flds
int
lods
sbb
pop
jmp
insl
rcrl
adc
hlt
sarb
pop
icebp
fwait
sub
mov
fstps
add
es
nopl
loope
mov
cmp
mov
add
pusha
sbb
xchg
inc
xor
dec
loope
in
in
push
aas
sbbw
leave
jmp
sub
and
mov
add
mov
shlb
push
sbb
in
sub
cli
rolb
xchg
fs
out
gs
sub
sti
fwait
cmp
adc
rol
push
insb
mov
ret
xchg
sbb
insb
aam
dec
cmp
cmc
jmp
sub
cmp
daa
dec
sub
dec
fsubrs
scas
xchg
in
sbb
loopne
loop
decl
icebp
or
push
add
sub
jl
push
shll
packuswb
je
icebp
fwait
or
add
into
mov
bound
pop
imulb
outsl
inc
inc
mov
pop
enter
jecxz
scas
xchg
sub
sbb
or
cmpl
push
pop
out
push
shlb
mov
clc
sub
icebp
fsubs
cmc
pop
sub
js
push
inc
jmp
add
leave
xlat
xlat
loop
test
push
xor
inc
enter
jae
mov
popa
adc
mov
jge
sub
inc
test
fs
push
inc
mov
shlb
leave
xchg
outsl
shrl
call
push
and
mov
subl
ds
cmp
pop
cmpsb
out
pop
cmp
test
inc
and
fidivs
mov
ja
xchg
jns
dec
cld
sar
xchg
stc
jo
loop
add
xor
notb
sarb
inc
mov
cmp
call
shll
sub
in
cmp
scas
fcmovb
push
sbb
pop
hlt
mov
aad
pop
inc
in
push
fldl
insb
or
fstcw
push
dec
popa
sti
mov
stc
scas
sub
jo
inc
cmc
xor
jge
pop
bound
push
xchg
push
push
aaa
int3
inc
or
xchg
es
outsl
in
push
ret
inc
sti
xchg
sbb
repz
and
fnsave
in
cmpsl
pop
sti
and
mov
scas
inc
dec
cwtl
fcmove
inc
cmp
and
decb
xor
mov
inc
pop
shrl
rcr
fdivrs
das
stos
shll
idivb
loope
dec
sub
js
repz
pop
cwtl
jno
mov
inc
dec
cmpsb
iret
loope
mov
enter
shlb
pop
push
inc
es
ljmp
xlat
xor
lods
and
dec
pop
lahf
insb
loope
xor
iret
cmp
inc
into
data16
mov
adc
or
popa
push
pop
xchg
cmp
sbb
in
daa
xlat
add
mov
shlb
adc
imul
cmc
repz
ret
rclb
into
ja
inc
jmp
xor
cmpsb
sbb
sub
lds
dec
insb
stos
incb
sub
fistpl
push
into
gs
xor
jp
cmp
loope
mov
inc
mov
iret
mov
rcrb
fcoms
or
pop
test
cld
outsl
ret
pop
test
add
and
dec
mov
ret
out
fnstsw
pop
xcrypt-ecb
cmpsl
dec
dec
in
dec
mov
sub
mov
jl
jb
out
scas
loop
jb
shr
xchg
mov
ret
pop
mov
sub
dec
dec
jb
test
fldenv
mov
pushf
and
push
xorb
jnp
sbb
add
mov
psllw
nopl
or
mov
mov
mov
mov
add
lahf
cs
lods
arpl
mov
dec
jl
add
cmp
push
mov
push
fstps
shll
jl
and
call
mov
fwait
inc
outsl
and
sarl
in
repz
sub
sbb
jg
popl
fisubs
cltd
std
xor
adc
jb
jno
and
rep
shrb
jno
and
enter
cli
jmp
int3
cmp
mov
loopne
stos
js
sub
fsubp
dec
ss
in
stos
mov
enter
popa
inc
int
inc
mov
arpl
insb
mov
mov
or
xor
insl
push
sbb
mov
inc
fs
dec
cs
jo
repnz
lods
fsubrs
mov
cmp
inc
aad
push
xlat
mov
push
loope
fwait
ret
xor
push
jb
jl
or
lea
push
std
lods
call
fld1
insl
scas
dec
cli
aaa
rol
fsubrs
push
andl
testb
jne
pop
xor
and
les
pop
repnz
dec
es
jne
push
dec
decb
leave
outsl
imul
dec
mov
cmp
lahf
lock
and
pop
imul
dec
cmpsb
pop
shl
sub
cs
loopne,pn
std
xchg
dec
sbb
out
cwtl
pop
inc
or
cmp
adc
xor
add
mov
js
cmpsl
outsl
testl
bound
xchg
adc
lods
shrb
xchg
jne
mov
sti
xchg
jp
mov
adcl
enter
pop
adc
mov
cmovge
push
or
cmpsl
mov
test
push
cmp
fbstp
adc
mov
popf
xchg
lret
or
cmp
ret
ret
cld
xchg
test
cmp
mov
pop
lahf
ss
cmp
mov
rolb
sarb
or
movsb
sti
push
notb
mov
pop
sub
push
xor
adc
push
or
ret
and
bound
mov
pusha
pushf
inc
sbb
pop
xlat
nop
sbb
sbb
lahf
and
mov
lahf
pop
mov
lret
dec
mov
dec
cmpb
xlat
pop
pop
je
les
imul
add
daa
mov
xchg
rolb
nop
data16
lret
leave
mov
lds
int3
sti
push
popf
sub
mov
or
pusha
sub
sar
push
cmp
add
pop
dec
scas
fisubs
cmpl
pushf
popf
scas
sbb
std
int3
push
in
adc
lods
rcrl
sub
ds
lods
pop
in
lcall
and
sub
push
mov
decb
sub
sub
mov
cmc
mov
sbbb
push
jbe
test
cmp
xchg
data16
cs
sub
cld
stc
push
mov
out
shl
mov
adc
xor
or
mov
xor
lods
test
fisubrl
sti
outsb
in
in
es
in
lret
and
cld
or
pusha
xor
out
movsb
cmp
pushf
xor
jl
shrl
and
nopl
int3
fcomip
push
loope
imul
arpl
jne
add
fcmove
jmp
jo
xchg
incl
inc
mov
push
icebp
and
aam
jmp
bound
or
imul
xchg
mov
sarb
imul
adc
jecxz
adc
adc
mov
push
dec
shl
pop
push
out
aam
push
inc
inc
movsb
and
fs
out
test
mov
mov
or
or
sub
pop
mov
pushf
addl
in
test
xchg
inc
fcmovnb
testl
sbb
mov
cmp
cmpsb
xor
clc
cltd
push
sub
mov
dec
lcall
cltd
and
sub
js
or
mov
inc
int
sti
and
lock
int3
fidivl
sbb
xchg
push
test
cmp
cmp
pop
mov
inc
stos
mov
fdivrl
rcll
mov
das
mov
into
pop
xchg
xorl
xor
daa
mov
lea
cmpsl
out
rorb
orl
cltd
test
jmp
insl
jge
ljmp
jb
repz
mov
xchg
push
jno
mov
add
sub
ficompl
popa
mov
or
sub
cmpsb
dec
out
shrb
dec
mov
ret
or
mov
mov
jb
push
test
outsl
jge
pop
mov
gs
cmp
imul
add
and
jp
xchg
push
imul
mov
or
int
pushf
inc
insl
stc
fisttps
pop
xchg
lods
shl
scas
subb
sub
dec
dec
popa
cmp
jo
dec
scas
fistpl
stos
inc
jge
js
gs
or
cmpsb
xchg
mov
push
xorb
xor
nop
inc
and
cmpsl
lods
jmp
mov
xor
fsubrl
sub
push
lahf
je
lds
addps
dec
scas
inc
xor
das
adc
fmuls
adc
ret
dec
jecxz
fwait
dec
jmp
shrl
int
ret
push
inc
mov
lods
mov
cltd
cmp
dec
mov
sub
mov
adc
rorl
mov
mov
outsl
repz
mov
daa
xchg
dec
jge
pushf
or
and
push
popa
les
call
call
movsl
dec
das
add
cld
dec
lcall
in
add
fcmovb
pop
dec
ds
cli
jge
in
ret
insb
xchg
cwtl
das
les
add
pop
in
bound
mov
mov
pop
insb
or
imul
jnp
mov
mov
enter
inc
mov
je
jp
mov
shl
dec
in
xor
dec
and
std
jecxz
test
lods
cmp
mov
adc
dec
rclb
mov
dec
es
lahf
negl
xor
icebp
mov
add
gs
xchg
ret
ficoml
nop
lods
lretw
adc
xor
mov
mov
jnp
call
cli
inc
mulb
jbe
in
and
sbb
xchg
ja
mov
testl
leave
jbe
push
xor
sub
and
xchg
imul
or
ret
add
adc
xchg
cltd
xor
xchg
adc
sub
xchg
lahf
jle
imul
loopne
cmc
xchg
mov
adc
data16
inc
nop
lods
outsl
cli
fcmovu
lret
in
test
push
scas
push
or
testb
adc
mov
out
fwait
ret
ss
cmp
shl
pop
and
iret
leave
mov
adc
or
and
dec
sbb
daa
mov
loope
enter
rclb
out
jp
sbb
dec
adc
add
cmp
add
jbe
push
xchg
and
sub
jae
enter
jno
hlt
jo
loop
or
mov
pop
add
mov
les
mov
stos
push
addl
cmp
mov
dec
outsb
scas
xlat
into
fdiv
bound
out
mov
mov
add
insl
sbb
pop
or
fidivrs
call
aad
or
adc
jmp
sbb
std
into
push
adc
push
fwait
mov
adc
push
mov
xor
mov
mov
rcll
ja
sar
xor
call
cmp
xchg
lds
xchg
add
jbe
insb
adc
inc
cwtl
das
xor
xchg
push
cli
adc
imul
xor
stc
dec
pop
jg
xchg
jo
pop
xchg
sahf
mov
dec
jecxz
ds
pop
inc
dec
or
clc
push
rol
push
ret
xlat
fstpt
ret
adc
icebp
shl
add
xor
aam
and
test
jle
repnz
push
mov
jne
shlb
lcall
dec
call
adcl
dec
mov
ja
je
popa
popf
cmpl
sbb
add
push
out
orb
movsl
mov
and
mov
nop
jp
ret
adc
lds
mov
and
ljmp
fwait
xor
imul
push
dec
aaa
sarl
adcb
sub
xchg
and
cltd
or
das
mov
push
sub
in
cmpsl
imul
push
fisubl
xor
scas
pushf
push
sarl
repz
cmpb
jecxz
and
push
cli
fucomp
shlb
cmpsb
mov
dec
jb
or
mov
icebp
mov
dec
lcall
imul
xorl
and
scas
and
mov
and
adc
scas
fstps
hlt
mov
xor
fildll
and
xor
fldt
mov
fcoml
scas
mov
ret
subb
cmp
push
inc
lods
sub
daa
pushf
xor
pop
mov
stos
xchg
jno
enter
push
scas
or
pop
jb
dec
xchg
lds
icebp
mov
jno
psrad
add
xchg
dec
stc
imul
pop
dec
jo
inc
pushl
cli
inc
data16
fwait
xchg
push
fisubl
and
jp
push
xor
xchg
dec
in
xor
adc
adc
je
mov
push
jbe
sub
dec
xchg
mov
jle
addr16
mov
jns
stos
ret
idivb
or
sahf
xchg
cmp
or
fbstp
stos
lahf
push
rclb
in
cmp
imul
or
int
push
outsb
sub
inc
cmp
je
cld
inc
jecxz
je
dec
rclb
call
test
je
push
or
xchg
push
jb
pop
leave
popf
add
fnsave
cld
pop
rcll
test
sarl
xor
repz
aad
ss
scas
ficoms
dec
in
test
inc
cmc
std
ljmp
xchg
int
loopne
xlat
cmp
add
push
and
sub
sub
cmp
push
add
bound
bnd
push
fists
xchg
xchg
push
lahf
fsubs
mov
es
push
mov
sub
js
les
mov
jae
inc
sub
mov
ja
in
and
mov
in
leave
or
mov
out
and
jne
mov
into
lods
movsb
jnp
into
pop
pop
pop
cmpsl
push
jb
jp
stos
add
cmpsb
mov
frndint
inc
or
jne
sbb
push
push
rorb
inc
repnz
into
add
jno
lods
cltd
pop
mov
jge
mov
shll
mulb
ja
jp
xchg
add
scas
outsl
js
mov
fiaddl
arpl
cltd
fsubrp
add
xor
or
enter
outsl
pop
xchg
and
shrb
push
xchg
sub
cmp
shrl
outsb
add
rcll
es
add
stc
adc
jo
shll
xchg
in
sub
or
ja
jno
shr
xchg
sbb
sarl
stc
push
adc
in
notb
jne
pop
jne
xor
lods
mov
andb
pop
jle
ss
xlat
push
loopne
jp
cmp
add
scas
or
push
and
jo
cmpsl
fucomp
mov
or
loope
loopne
xchg
pop
jo
xlat
out
nop
and
cmpsl
ss
out
popa
lahf
clc
dec
or
popa
pop
xor
pop
movsl
mov
xchg
imul
fstpt
in
mov
hlt
mov
jo
xchg
mov
mov
mov
ss
aad
std
pushf
movsb
ja
add
cmpsb
in
sub
je
xchg
mov
sub
in
cmp
pop
push
or
in
push
push
adc
xor
int
fimull
outsl
jle
inc
mov
mov
in
in
inc
push
push
popa
clc
inc
pop
xor
xchg
mov
or
pop
mov
out
pop
ljmp
imulb
aaa
ret
mov
sub
out
insb
add
add
pop
or
fidivs
arpl
arpl
je
push
loop
xchg
scas
mov
add
and
stc
jne
jmp
mov
imul
lea
push
cmpsb
andl
mov
lds
add
inc
fsubs
les
dec
add
mov
adc
stos
lods
aam
fmulp
dec
pop
imulb
fwait
mov
call
out
iret
movl
rcrl
daa
inc
adc
cmpsl
out
push
pushf
xor
imul
pop
stos
pop
repnz
sti
aam
cmp
jns
mov
movsl
mov
mov
mov
repz
or
xlat
push
inc
ljmp
cmpsl
and
push
lret
push
sbb
mov
or
or
dec
call
push
int
xor
sub
lahf
outsb
jmp
fs
repz
mov
cli
pop
mov
jecxz
popf
dec
loope
cltd
mov
mov
push
popw
daa
cli
sub
xchg
lcall
int
jbe
add
push
or
popa
mov
mov
adc
inc
pushl
pop
decl
movsl
jo
mov
mov
lds
pop
lret
mov
mov
adc
outsb
rcr
add
movsb
sbb
jge
dec
cmp
cmp
test
cmp
imull
cwtl
adc
and
mov
push
rcrl
enter
out
xor
jae
mov
fiaddl
das
push
les
imul
jbe
add
jge
sbb
popa
clc
sub
cli
xchg
sub
sub
mov
xor
mov
xchg
out
cmpsl
nop
xor
stc
testb
pop
jmp
inc
inc
or
ret
sub
push
cld
adc
cld
xchg
add
out
add
sbb
pop
xchg
mov
mov
pop
push
js
mov
lret
inc
xchg
jno
aad
sub
cmp
fcoml
rcrb
les
std
mov
repz
jb
adc
leave
push
dec
add
xor
mov
movhps
xor
xor
xor
aaa
movsl
fcoml
jmp
or
xchg
push
cmpsl
sbb
adc
pop
push
xor
fcoms
shr
das
mov
xchg
int3
sub
leave
pop
push
push
pusha
icebp
push
cs
push
xchg
push
repnz
jl
in
pop
movsb
loopne
inc
pop
outsb
cmpsb
adc
xor
lcall
jno
xor
jle
ret
ljmp
imul
loopne
jg
das
jp
cmpsl
ret
mov
mov
mov
sti
mov
push
sub
in
stos
shlb
out
mov
xor
out
lahf
jno
in
int3
mov
sahf
gs
fwait
loopne
cld
aas
xor
mov
out
adc
stc
pop
pop
in
dec
or
repnz
nop
inc
cmp
test
add
bound
pop
xor
addl
imul
sbb
nop
pop
ret
dec
ret
ss
jne
push
sub
cmp
out
subb
stc
loopne
sub
xchg
stos
jnp
dec
dec
adc
sbb
mov
sub
jae
cmc
dec
inc
adc
adc
jne
mov
sub
mov
xchg
in
cmp
imul
aas
sbb
cmpsb
lods
mov
in
dec
dec
popa
mov
push
inc
pusha
cmp
fcoml
sub
lret
push
aaa
cld
cmp
sbb
scas
mov
adc
xchg
jp
mov
fildll
adc
loopne
dec
and
paddsw
ret
stos
sub
cmp
inc
fldl
jo
jbe
push
push
or
or
pop
sbb
arpl
jmp
or
cltd
mov
push
xor
inc
inc
mov
lahf
pusha
sub
je
rcrl
out
dec
fsubr
xor
and
test
rcr
or
inc
push
loop
adc
movsb
fbld
cwtl
lods
push
adc
mov
push
adc
in
cmp
in
dec
mov
inc
jecxz
outsl
mov
mov
test
push
jns
inc
data16
stos
int3
lret
sbbl
data16
outsl
loope
lcall
dec
and
adc
sarb
jle
cmp
cmpb
rep
jl
pop
popl
cmpsb
and
fimull
lods
inc
adc
in
icebp
xor
in
adc
cmpsb
out
and
aaa
mov
cli
ret
movsl
lock
jmp
adc
inc
or
mov
fidivl
and
fsubrs
nop
pop
or
xchg
mov
add
jl
shr
cs
pop
ja
add
rorb
mov
mov
xchg
notb
ja
lahf
inc
push
xor
xchg
push
icebp
xor
lcall
imul
sub
subb
cmp
xlat
xchg
fstps
dec
cmp
aas
ret
and
xor
scas
stc
inc
fldcw
mov
clc
repnz
fcoms
jg
inc
sbb
mov
mov
push
add
mov
pusha
xor
cmpsb
das
xchg
jmp
cmc
ror
xor
add
fildll
jne
jno
cld
xchg
sbb
dec
or
insl
cmc
inc
mov
mov
xor
jnp
inc
push
jb
dec
out
jnp
pop
stos
xchg
xor
mov
mov
into
pop
test
fists
push
cli
xor
pop
shlb
pop
lods
orl
inc
pop
add
loop
pop
add
xor
mov
ficompl
mov
idivb
adc
jmp
push
out
test
in
jae
pop
testb
gs
sub
mov
adc
or
lds
cli
pushf
inc
into
push
cmp
ljmp
imul
push
inc
sbb
xor
insb
leave
out
and
xor
mov
sbb
in
xor
mov
or
iret
imul
xor
cltd
sub
jp
or
movsb
lea
push
push
je
pop
imul
sub
dec
lods
inc
mov
jmp
sbb
push
adc
mov
out
loope
xchg
setnp
shrl
jnp
pop
add
sub
cmpsl
push
outsl
xchg
bound
push
dec
inc
data16
push
loop
movsl
es
push
pcmpeqd
jg
dec
insl
mov
sub
insb
or
pop
pop
shll
out
mulb
sbb
rolb
lds
adc
inc
outsb
add
and
mov
shll
mov
and
sbb
ljmp
std
sbb
cmp
mov
adc
cmp
mov
das
mov
add
sbb
jge
les
push
test
lret
cld
mov
xchg
cwtl
rcr
xlat
push
rolb
sarb
mov
adc
inc
stos
cmp
xchg
sub
loop
imul
sbb
add
mov
sub
add
out
stc
shlb
add
jns
pop
lcall
mov
fists
add
or
fdivs
adc
roll
pusha
testl
xor
out
and
or
leave
inc
aaa
mov
mov
dec
and
dec
ja
out
test
test
rolb
js
rep
sbb
sbb
arpl
mov
shrl
lret
mov
shlb
mov
pop
push
or
mov
or
in
xchg
xchg
aas
test
and
es
mov
shrb
shll
or
fidivrl
decl
dec
outsb
sub
jo
into
xchg
lods
les
xor
arpl
int3
shrb
xor
pop
adc
sub
jnp
inc
push
sbb
dec
jmp
cmc
adc
cwtl
jb
dec
sub
jle
push
mov
add
mov
jb
arpl
les
push
out
dec
sub
mov
cmp
cmp
mov
fisubs
repz
mov
inc
mov
sub
sub
pop
push
daa
test
aad
loopne
xor
or
arpl
stc
incb
rep
xchg
js
push
push
xor
mov
cmp
inc
mov
stc
inc
icebp
xchg
lahf
inc
pushf
mov
adc
dec
push
jbe
sahf
cmp
lcall
mov
and
jne
pop
push
jo
dec
test
pop
pop
ficoml
adcl
jle
sub
loop
add
inc
dec
lds
mov
adc
pop
sub
mov
jge
dec
sub
shll
push
cs
ror
pop
icebp
cli
or
push
mov
pop
xor
imul
mov
xor
gs
adc
add
inc
fsubrl
shll
cmp
in
pop
out
cmp
cs
mov
enter
jmp
jecxz
sahf
lods
push
mov
xchg
mov
loopne
jae
call
mov
mov
add
cmpsl
inc
mov
push
inc
dec
push
jb
gs
aas
cli
mov
mov
das
out
mov
ja
cmp
sbb
pop
lock
adc
outsb
adc
jmp
adc
leave
fwait
jbe
cmp
stc
fwait
mov
stos
xchg
test
call
or
sbb
arpl
dec
fdivr
mov
inc
mov
fsubrp
xchg
in
add
aam
outsb
push
mov
lea
inc
and
adc
fldl
inc
fnclex
enter
call
sarb
mov
pop
push
or
mov
and
arpl
adc
pop
mov
push
in
push
mov
cmp
repz
inc
js
out
pop
icebp
insb
repz
inc
std
cmpsb
cmp
out
andl
int
push
bound
fidivs
insb
pop
popa
mov
fisttpl
stos
inc
and
stos
bnd
andb
sti
cwtl
cmp
movsl
out
test
add
jns
or
sub
repz
and
xor
iret
and
imul
and
xor
mov
lret
mov
or
or
das
push
cmpsl
shl
icebp
or
xchg
pop
cmp
or
jb
cltd
xchg
fstpt
add
nop
xlat
insb
sub
sbb
inc
lock
mov
cmp
push
xor
xchg
leave
mov
mov
mov
pop
arpl
int
loop
jecxz
imul
add
dec
mov
jge
sbb
dec
pop
sub
cmp
pop
pop
loop
xchg
xchg
addr16
out
addr16
es
inc
les
call
out
xchg
arpl
sub
int
mov
push
mov
cmpsb
movsl
mov
test
loopne
mov
into
adc
xchg
fldenv
or
out
cli
movsb
adc
scas
fiadds
mov
mov
mov
clc
jae
popa
stos
nop
fimull
call
adc
sub
mov
or
pop
push
dec
dec
pop
inc
mov
push
jb
xlat
sbbb
push
push
push
shll
xchg
sbb
mov
ja
je
mov
test
pushl
jo
fidivs
sub
push
mov
cmpsl
push
cmp
sbb
imul
out
test
or
push
out
pop
mov
ja
mov
mov
push
imul
adc
push
cmp
sub
fwait
in
and
repz
in
sbb
cwtl
into
pop
insb
rcl
push
in
xchg
sbb
mov
xchg
cmp
hlt
sub
pop
and
scas
aas
or
sbb
push
rcrl
mov
out
test
cmpsb
cmc
mov
sbb
shlb
fildll
push
sahf
jb,pt
add
mov
in
hlt
orl
icebp
ljmp
daa
cmp
pop
fwait
add
mov
jb
sbb
mov
gs
pop
fucomp
lea
or
icebp
sbb
shlb
andl
aas
push
addr16
test
lret
data16
add
sti
push
ss
pushf
push
xor
add
cmp
dec
rcrl
cmp
call
inc
cmpsl
cmpsl
cmpl
orb
push
les
jne
jmp
or
pop
fwait
or
in
mov
sbb
stos
xor
ja
repz
xchg
imul
push
nop
ret
movsl
push
add
cmp
and
xchg
les
loope
jne
mov
aad
shrb
mov
mov
dec
mov
cli
or
call
cld
adc
mov
in
movsb
mov
jbe
jmp
mov
adc
addr16
push
shlb
xor
outsl
in
push
out
sbbl
or
xor
nop
pop
cmp
xchg
and
inc
les
test
jns
dec
je
mov
ret
arpl
mov
and
push
call
jg
pop
addr16
adc
shl
pop
xor
cs
xor
mov
push
dec
pop
test
pop
mov
dec
ss
xor
jb
mov
sbb
mov
loope
sub
rcrb
sbb
mov
out
pop
mov
in
cmpsb
sbb
jnp
pop
pop
stos
in
or
adc
mov
idivl
lahf
in
xchg
xchg
rclb
in
mov
popa
sub
shlb
mov
divb
or
mov
inc
cmp
adc
jae
andb
mov
fdivrs
sti
call
rcrl
andb
lds
sub
mov
lods
test
ja
mov
stc
test
mov
jno
cmp
aad
mov
lods
je
test
bound
sarb
fists
test
shll
mov
inc
test
adc
pop
mov
xor
dec
fwait
test
inc
mov
imul
pop
pusha
xchg
sbbl
push
arpl
jb,pt
cmp
mov
add
call
arpl
xchg
sbb
mov
test
jmp
inc
sbb
jno
mov
out
call
jae
loopne
daa
repz
mov
xchg
pop
xchg
lds
add
or
aad
ja
lret
xchg
pop
movsb
sub
push
repz
mov
js
imul
sub
cmpsl
dec
jbe
push
call
dec
xchg
mov
negb
mov
fstpl
arpl
jae
or
jne
sbb
fnstenv
in
jp
add
outsb
out
inc
out
nop
mov
push
xor
je
pop
ret
mov
aam
push
sub
test
xchg
fdiv
push
and
jmp
sbb
les
pushl
dec
dec
rcrl
jle
pop
aam
pop
sbb
imull
arpl
lcall
cltd
pusha
xchg
pop
andb
pop
xor
cmpb
xchg
insl
dec
jo
pop
mov
add
pop
inc
subb
jns
dec
mov
fwait
jbe
int3
add
xchg
xchg
cmpsb
dec
fadds
ss
stc
xchg
adc
jp
or
dec
or
mov
push
jmp
jecxz
cmp
and
push
shlb
fnsave
imul
ficompl
mov
out
mov
sbb
lret
cmp
pop
xchg
sbb
add
mov
inc
movsb
sub
cs
popa
movsb
adc
jge
and
inc
int3
lret
les
add
mov
xchg
loop
inc
cltd
aas
push
sahf
shll
or
mov
jp
test
leave
push
push
jae
sbb
push
mov
add
and
loope
pop
aas
and
loopne
pop
and
daa
enter
dec
dec
push
pusha
mov
shlb
mov
dec
dec
inc
adc
fs
xchg
and
outsb
js
insb
add
pusha
loop
add
mov
call
xchg
je
jns
mov
mov
adc
lret
xor
call
fwait
mov
movsl
cld
mov
sub
lds
jb
or
movsl
push
enter
iret
lret
test
ja
fisubl
jno
xor
adc
and
adc
add
mov
in
xor
cmp
insl
aaa
lcall
arpl
cltd
or
xor
dec
daa
leave
test
adc
fidivs
fs
inc
icebp
cmp
test
lea
cwtl
mov
push
mov
enter
and
jns
fs
stc
xlat
mov
arpl
inc
jmp
xchg
fisttps
mov
rcrl
pop
hlt
mov
fidivrl
inc
int3
pop
lock
stos
push
mov
ja
adc
mov
outsb
jl
jno
inc
aaa
mov
mov
xor
cmp
cmpsb
lret
notl
jns
cmp
movsl
or
jle
inc
imul
mov
inc
pop
pusha
jo
sbb
pop
mov
mov
or
stos
lret
ss
imul
mov
cmc
mov
inc
mov
test
mov
pop
neg
out
sub
add
dec
mov
mov
pushf
xchg
scas
cltd
adc
push
mov
lret
test
pop
sbb
pop
jmp
xor
adc
daa
out
mov
add
xor
mov
pusha
pop
pop
push
rcl
sahf
call
loopne
icebp
pushf
xor
lret
xor
mov
ret
les
dec
pop
adc
arpl
mov
push
push
inc
mov
loop
insb
sub
push
mov
mov
lods
jp
es
push
test
int3
xor
ljmp
out
lcall
push
in
sub
mov
in
cmp
sub
pop
ret
ljmp
imul
pusha
inc
pop
push
pop
scas
in
mov
pusha
outsw
cmc
dec
shr
iret
xchg
sbb
sub
add
subb
pop
add
xor
mov
outsb
leave
mov
lock
add
loopne
sti
mov
dec
jg
mov
and
outsl
daa
test
aaa
mov
lret
jecxz
push
movsl
mov
stos
imul
inc
pop
jnp
lea
insl
jp
stos
xor
mov
push
idiv
mov
mov
push
lcall
dec
mov
xchg
sub
jge
fsubr
mov
or
xchg
mov
cs
dec
mov
ss
adc
push
adc
push
xlat
cwtl
xor
ljmp
jl
mov
adc
or
cmp
push
mov
jge
out
lds
jns
ds
push
xchg
fisubl
lds
not
or
fistl
jne
ja
dec
pop
cmp
push
pushf
add
lock
and
xchg
mov
sti
jmp
adc
push
mov
dec
sti
popf
cmpsl
cs
cmp
ljmp
mov
lock
add
ja
cmp
scas
inc
sub
ret
dec
ds
cs
pop
jmp
mov
scas
and
cmpsb
aaa
dec
sahf
lea
ss
popf
adc
ljmp
cmp
xchg
adc
mov
arpl
les
jg
mov
fistl
cmp
inc
sti
popa
out
xchg
test
hlt
jno
xchg
mov
repnz
sub
xlat
push
leave
aad
dec
and
loope
inc
lds
mov
fld
adc
push
inc
call
adc
adc
lds
jecxz
adc
lahf
addl
add
test
cmp
xor
pop
cmp
xchg
mov
sub
fsts
mov
mov
andb
stos
sub
sbb
into
pop
nop
pop
push
mov
jbe
jg
popf
pop
fdivr
jo
icebp
push
call
add
ljmp
int
dec
incl
iret
popf
je
lock
push
movsl
imul
mov
popf
mov
mov
movsl
mov
lret
dec
dec
jp
xlat
push
jecxz
movsb
sbb
mov
pop
adc
in
xor
and
xchg
push
add
loop
test
test
sub
pop
fistpll
pop
push
test
outsb
jb
dec
std
daa
mov
xor
popf
xor
bound
pop
ss
in
ja
mov
adc
iret
das
popf
in
clc
sbb
pushf
jb
inc
data16
sahf
xor
mov
filds
pushf
out
out
cli
cmp
cmp
sub
xchg
jb
push
insl
pop
stos
dec
lods
dec
mov
pop
jle
leave
es
loopne
into
and
or
cmp
notb
ret
and
push
mov
daa
lock
cmpsb
mov
subl
bound
mov
pop
jge
push
imul
jo
addr16
mov
inc
push
das
leave
ja
icebp
in
lret
dec
xchg
xchg
cld
dec
lock
aaa
aad
loopne
xchg
ljmp
jle
and
pusha
xchg
sub
int
push
and
inc
add
iret
movsb
adc
daa
jle
cmc
out
push
setae
mov
ja
out
push
pop
xorl
sbb
xchg
imull
and
adc
stos
cmp
sub
pusha
aad
sub
push
push
jecxz
jne
popf
xor
es
sbb
jecxz
add
mov
fwait
mov
inc
and
aas
push
orl
mov
push
and
out
dec
or
outsl
adc
roll
lea
lcall
rclb
jbe
mov
test
xor
push
adc
enter
in
pop
dec
jnp
cld
xchg
adc
mov
jae
js
inc
inc
in
lock
jecxz
roll
mov
or
xchg
or
and
sti
pop
shll
mov
xchg
sbb
add
mov
sbb
mov
cwtl
in
fidivs
push
xchg
push
out
sub
xchg
and
cmp
xor
je
xchg
and
jp
mov
mov
mov
pop
inc
in
leave
adc
mov
mov
mov
outsl
inc
popa
imul
dec
sbb
pop
cli
jnp
jle
cmp
lcall
push
in
push
pop
dec
mov
add
mov
mov
stc
pop
pop
pop
cli
push
pop
mov
xlat
and
jo
dec
gs
dec
push
pop
cmp
ss
or
mov
arpl
mov
clc
test
or
sbb
mov
icebp
mov
pusha
or
in
test
sbb
jge
insb
out
aad
sub
lea
xor
jbe
lods
pop
jbe
ret
jns
cmc
idivb
push
lret
jno
inc
mov
xchg
sbb
or
or
and
cmpsl
imul
pop
mov
lods
inc
adc
mov
add
cli
outsl
clc
adc
jle
mov
jno
xor
xchg
insl
xor
adc
int3
xchg
mov
enter
cmp
gs
pop
mov
pop
dec
jnp
fs
xchg
adc
call
jns
test
mov
pop
mov
or
cli
shrl
nop
daa
mov
cmpsb
cs
fdiv
out
shrb
sbb
jl
push
inc
xor
iret
nop
or
repz
mov
mov
aam
shrb
adc
cmc
push
sahf
adc
lret
xor
jb
cwtl
ret
sahf
push
mov
mov
outsl
push
jb
sbb
jae
repz
dec
out
inc
sbb
lock
in
mov
fdivrl
add
movsl
shll
add
cmp
divl
or
ret
lcall
dec
inc
mov
inc
inc
pop
jae
rolb
jmp
or
mov
add
jns
cmp
mov
and
add
mov
out
mov
lahf
lods
push
sbb
push
sbb
out
push
xorl
cwtl
adc
in
sbb
decl
and
in
push
lock
cwtl
test
nop
push
outsl
add
pop
outsb
mov
jne
lods
inc
sti
inc
pop
das
dec
aas
dec
gs
das
adc
mov
mov
or
push
inc
nop
add
lods
hlt
arpl
and
xchg
adc
sbb
fadds
lds
popa
xorb
test
jae
mov
fcmovbe
lock
xchg
negb
dec
sub
push
adcb
inc
sub
ret
lahf
shlb
push
mov
cmp
cmc
dec
aam
sbb
pop
shll
and
out
push
lods
mov
xor
inc
push
sub
mov
jbe
xchg
mov
leave
jge
sbb
or
jns
bound
inc
movsb
adcl
imul
mov
xchg
testb
pop
cmp
scas
idivb
stos
mov
lods
xchg
fnstenv
sbb
je
and
fidivs
or
cmp
leave
inc
clc
dec
stos
inc
push
xlat
sub
outsb
xor
jg
cmp
jo
mov
lret
fldl
lds
mov
mov
mov
loopne
out
jbe
sarb
pop
xor
repz
or
jmp
negb
jg
sbb
bnd
jmp
scas
aas
in
sub
jae
xchg
daa
leave
pop
xchg
leave
sbbb
adc
push
bound
add
push
mov
lods
lea
cmp
xlat
mov
sbb
ja
cmp
xor
ret
mov
shl
add
fwait
test
xchg
jno
loopne
repz
das
aaa
lret
aad
scas
and
or
pop
mov
mov
push
es
lret
mov
jp
fimuls
adc
cltd
int3
pop
mov
xchg
mov
sub
pop
mov
mov
lahf
xchg
lods
int3
pop
mov
lea
gs
divl
ss
or
and
iret
xor
mov
xor
idivb
call
jne
dec
lods
int
push
pop
xlat
jl
leave
rclb
addr16
js
xchg
add
inc
test
mov
or
in
xchg
push
jbe
and
sti
arpl
sub
icebp
adcb
sbbb
pop
lods
and
pop
push
sub
cmp
sbb
rcl
stc
in
int3
aas
jl
out
push
pop
mov
loop
out
push
pop
je
lea
mov
dec
xchg
pop
sti
pushw
rcrl
xchg
sub
cmp
mov
ficompl
and
arpl
or
cmp
push
lods
aaa
fidivl
into
add
pop
ror
bnd
mov
out
inc
mov
jns
loope
call
into
fs
lods
xchg
stc
fwait
cli
add
push
icebp
test
imul
lock
adc
pop
insl
push
movsl
sahf
in
or
mov
int3
jbe
add
imulb
inc
test
or
jmp
pusha
and
add
sub
pop
lahf
std
xchg
mov
and
xchg
out
bound
idivb
pop
stc
lea
gs
lcall
inc
fnstsw
loopne
mov
std
test
outsb
loope
jg
ss
out
jl
jns
mov
scas
int3
loope,pt
push
or
jle
jl
repz
adc
jecxz
sahf
pop
lods
mov
test
inc
push
xor
out
jo
mov
lcall
or
sbb
pusha
push
or
sbb
sub
fstl
repnz
cmpsb
cmp
inc
and
iret
ljmp
push
xchg
mov
xor
xchg
sahf
nop
add
push
jl
int
xchg
jno
ret
xchg
sub
out
mov
lods
jge
xchg
int
fsin
xlat
test
lahf
in
sub
pop
ja
mov
xchg
sbb
xchg
out
das
adc
add
cmp
bound
shl
xchg
je
add
mov
test
enter
add
stos
xchg
leave
les
xchg
cmp
pushl
icebp
dec
fisubl
jb
pop
scas
out
adcl
jbe
jecxz
je
das
push
je
dec
and
int
xor
cmp
jnp
and
and
inc
sub
cmp
fmulp
or
outsb
outsb
in
mov
out
mov
pop
clc
push
inc
out
in
cmp
stc
cmpsl
inc
xlat
push
mov
and
mov
lods
or
xor
push
icebp
cwtl
dec
in
rcrl
sub
insl
jge
jmp
sub
mov
daa
divl
data16
aam
cmp
cwtl
mov
mov
or
cmpsl
negb
inc
stos
push
addb
lret
xchg
and
mov
imul
addr16
popf
push
inc
test
lods
and
xor
enter
je
loop
push
inc
fmulp
inc
pop
mov
fimuls
and
jg
mov
call
ljmp
insb
pop
mov
lods
mov
in
lock
dec
push
jnp
enter
jo
popf
std
call
or
xor
xchg
pop
dec
jecxz
aad
or
sub
sbb
or
xlat
data16
push
dec
cmp
and
pop
mov
sbb
ds
adc
mov
outsl
adc
xlat
stc
ljmp
inc
jo
xchg
sbb
mov
popf
mov
sarb
hlt
mov
into
mov
stos
xchg
adc
mov
mov
rcrl
add
dec
dec
adc
adc
test
cli
aaa
xchg
xchg
xor
jmp
push
je
addb
inc
mov
stc
xorb
in
sbbb
xor
mov
cmpl
aaa
or
pop
in
cmp
jae
sub
dec
addb
and
clc
cmp
cmp
cmp
inc
scas
inc
pop
push
push
bswap
lods
inc
cld
xor
int3
pushf
push
xchg
adc
out
ret
or
movsb
sbb
jp
pop
cwtl
das
clc
and
jo
xor
das
andb
pop
iret
push
add
idivl
shrb
or
lret
sbb
push
fwait
aam
or
sti
data16
cltd
call
mov
or
out
cmp
xlat
add
pop
fisubs
jg
loop
push
sbb
mov
push
hlt
mov
out
mov
jnp
fs
and
adc
mov
push
adc
mov
pop
mov
ret
andl
fdivrl
sub
inc
out
jl
sub
push
and
adc
push
imul
rol
dec
outsl
incb
mov
stos
pop
push
fbld
mov
call
out
sub
sub
imul
cmpsb
lea
or
xchg
push
in
xchg
lds
sub
enter
pop
adc
jl
das
mov
sahf
push
fwait
pop
repz
jae
jno
push
testl
sbb
xchg
outsl
sarb
jne
out
pushf
push
pop
ret
std
and
inc
xchg
mov
adc
mov
fstpl
test
lcall
push
jmp
dec
sub
sahf
push
out
xchg
sbb
fidivs
sub
jnp
cmp
mov
dec
outsl
mov
loopne
inc
hlt
divl
xchg
jbe
jo
call
fsubr
jnp
mov
fstpt
and
mov
das
scas
mov
aam
mov
pop
sahf
fnstsw
mov
popf
fs
cwtl
loope
icebp
jbe
add
push
inc
mov
sti
rcl
repz
inc
and
sbb
cld
outsl
xlat
aaa
loopne
jne
mov
push
xchg
popa
adc
test
xchg
push
jg
xor
testb
add
pop
sub
lcall
add
xchg
repz
adc
cld
inc
xor
jp
int3
or
mov
jns
mov
jb
es
mov
dec
push
jmp
jb
jno
inc
xchg
outsb
add
ret
loop
inc
adc
dec
pop
test
inc
scas
sub
fwait
ret
stos
fyl2xp1
cmp
imul
lret
in
cmp
outsb
loope
xchg
pop
repz
sub
mov
xor
mov
mov
or
add
dec
xchg
shrb
pop
adc
mov
jl
sbb
mov
imul
stc
nop
cmp
rorl
cmpsb
dec
notb
aam
push
xchg
xor
mov
in
inc
stos
add
mov
and
pop
std
test
mov
cmp
add
fstpl
test
insb
in
pop
stos
sbb
fdivrl
jg
sbb
mull
mov
adcl
cmp
loopne
jle
sbb
lahf
decb
nop
mov
mov
push
mov
push
jne
mov
testb
mov
cmp
push
mov
test
or
cmp
xchg
pop
mov
mov
mov
fs
xchg
mov
jl
test
scas
sbb
dec
push
jg
adc
mov
mov
jne
out
xchg
cltd
outsl
dec
push
dec
aam
adc
sbb
out
inc
xchg
xor
lea
push
fmul
jo
or
popa
push
dec
cmpsb
mov
lock
enter
cmp
mov
inc
adc
in
pop
push
fst
push
incb
lcall
in
sub
and
ljmp
sbb
add
inc
sbb
pop
push
mov
lret
shl
dec
or
imul
push
mov
dec
mov
xchg
mov
adc
sti
pusha
pop
iret
and
jae
jmp
imul
or
jo
popf
cmpsl
xor
xor
gs
and
and
xor
push
push
dec
cmpl
scas
aad
mov
popa
push
cmp
push
lods
ljmp
out
test
push
fdivl
pop
xchg
jne,pn
mov
push
lahf
daa
adcl
xor
leave
xor
mov
pop
aad
inc
or
sub
in
into
mov
jae
ss
inc
adc
pop
inc
gs
mov
movsl
insb
sbb
sbb
sub
mov
and
popa
addb
mov
dec
and
lcall
adc
jle
add
lcall
xchg
mov
xchg
dec
in
test
lods
push
icebp
jmp
and
data16
icebp
xchg
and
mov
lods
xchg
add
mov
aad
rclb
mov
sbb
add
cmp
popf
fnstcw
mov
and
mov
adc
out
xor
mov
rclb
or
pop
addr16
ret
or
popa
inc
incb
es
adc
dec
out
jp
fwait
loope
in
test
xor
sub
push
inc
out
iret
lea
daa
and
push
inc
leave
shlb
jg
out
dec
loope
ret
pop
inc
cmc
push
imul
add
mov
mov
imul
movb
sub
out
push
loop
add
call
dec
loop
lahf
push
or
xchg
and
dec
int
dec
mull
outsb
mov
xor
mov
inc
adc
cs
mov
jle
cmp
lcall
insl
in
mov
pop
pushf
neg
jo
scas
mov
pop
and
jb
jae
pop
xor
add
cltd
push
test
push
mov
dec
add
xor
cmc
cltd
cmp
mov
gs
cmp
add
mov
sbb
test
scas
jecxz
push
add
cmpsb
test
push
jne
clc
insl
sub
sbb
xchg
push
jbe
popa
das
je
fildll
sub
cmpb
adc
jo
ror
xchg
mov
jmp
ja
hlt
cmpsl
adc
stos
inc
imulb
jl,pn
push
fsubrl
dec
sub
dec
inc
fidivs
push
out
insb
lea
call
or
sub
pop
adc
and
pop
test
scas
fnstcw
xor
cli
inc
cmpsl
fxam
sbb
repnz
fildll
shrl
push
sub
ss
jae
das
mov
int
dec
imulb
mov
jns
es
cmpsl
mov
into
inc
cltd
je
cs
call
sub
xchg
in
lds
pop
mov
mov
lods
push
test
pop
aam
mov
mov
push
adc
pop
dec
add
shrb
jno
or
xor
and
lods
fs
repz
js
jo
jecxz
rclb
cmp
pop
mov
or
mov
out
rorl
sbb
es
test
cmp
daa
mov
test
inc
pop
mov
call
push
jno
out
inc
xchg
jb
dec
ja
add
jmp
inc
ja
sti
mov
jbe
shll
jbe
ret
and
adc
test
cwtl
sbb
push
sbb
cwtl
stc
dec
pop
adc
xlat
push
xor
mov
pop
sbb
dec
je
cltd
xor
movsb
jp
in
test
jns
gs
and
int
int3
pop
loope
xor
imul
test
cmpsb
shlb
push
cld
ja
fld
xor
lods
test
in
dec
xchg
push
mov
lcall
hlt
sub
es
fsubl
mov
test
ds
pop
pushf
scas
nop
jae
cmp
imul
add
ss
sbb
push
movsb
mov
ds
mov
insb
push
sahf
sub
pop
cwtl
xor
je
ss
jo
mov
adc
lahf
inc
xlat
fcomip
pop
lock
add
sub
repz
cs
adc
int3
movb
clc
in
pop
scas
and
test
xchg
stos
push
mov
ja
lock
cmpsl
mov
in
stc
mov
rclb
xchg
cwtl
pop
testb
test
daa
jnp
stos
ret
mov
and
ja
mov
mov
call
sahf
xchg
xchg
sub
mov
and
mov
or
aaa
hlt
jmp
cmp
mov
inc
or
mov
lahf
mov
and
sub
sbb
inc
pop
cmp
mov
dec
push
push
ds
cli
xchg
jbe
mov
aas
lahf
mov
stc
call
xchg
stos
cwtl
cmpsb
dec
inc
loopne
mov
arpl
dec
iret
adc
adc
mov
fwait
xor
xchg
or
adc
mov
lock
cld
test
mov
and
fsts
dec
dec
push
aam
xchg
push
aaa
dec
mov
jnp
in
outsl
xchg
inc
push
int
inc
cwtl
mov
adc
add
out
imul
pop
inc
arpl
xorl
dec
movsl
dec
stc
mov
add
push
jmp
add
or
fwait
or
xor
add
mov
divb
dec
cmp
lret
dec
adc
mov
sbb
fcomps
and
fs
adc
push
mov
push
jmp
pop
lcall
or
xor
jp
ss
into
out
add
sbb
push
insb
inc
cmp
mov
cmc
popa
insb
ret
dec
xlat
add
mov
jl
jns
add
jle
mov
sbb
mov
jns
push
scas
xlat
loopne
mov
shrl
xor
sbb
lea
les
stos
sti
aam
iret
xor
lret
mov
out
mov
fnstsw
dec
das
test
aas
xchg
ds
out
test
and
cmp
and
xchg
xor
mov
push
movsb
lock
cmp
pushf
fwait
loope
dec
sbb
call
and
lret
xchg
jp
adc
sbb
jnp
stos
push
inc
clc
xchg
repz
aas
jmp
movsl
xor
or
xchg
popl
subl
hlt
push
push
or
shlb
scas
push
xchg
push
or
fs
and
mov
mov
fidivs
lret
cmpb
test
ljmp
mov
lea
shl
pop
and
lahf
jge
sbbb
add
adc
shrb
lret
loopne
xor
orb
outsb
stos
sbb
add
and
or
mov
push
insl
mov
cmpsb
sti
pop
scas
and
aas
ja
mov
vpsubsw
inc
sub
adc
fs
popa
cmp
repnz
mov
out
mov
xor
clc
cmp
or
out
mov
sub
jne
adc
insl
inc
fs
inc
xchg
push
sbb
cmp
repnz
movsl
mov
nop
lods
aas
int
sbb
insb
fidivrl
and
call
scas
pushf
pop
adc
cmp
call
sti
pop
mov
push
sbb
pop
mov
pop
mov
cs
jo
ja
jg
out
js
jne
inc
js
int
sub
push
push
out
enter
dec
jae
cmp
movsl
das
rcrb
mov
dec
mov
inc
pop
into
in
xchg
imul
pop
xchg
pop
inc
stc
pop
test
xor
xor
je
jp
bound
pop
xchg
add
push
xor
pop
jmp
pop
pushf
call
mov
mov
in
test
xlat
stos
fisttpll
xchg
popf
add
imul
addb
pop
fstpl
into
out
xchg
mov
sti
ret
sub
int
popa
and
jno
mov
add
xor
dec
aam
and
mov
sbb
pop
fsubs
or
mov
xor
mov
cltd
fs
adc
jp
pop
insb
jns
or
subl
imul
inc
or
in
xchg
les
sub
repnz
sbb
push
fadd
cld
ret
pop
cmp
pop
adc
test
lea
cltd
fbld
inc
pop
xor
js
and
sub
dec
fsubrs
mov
aad
out
mov
inc
cltd
add
arpl
xchg
xchg
dec
sub
aam
adc
lret
sti
inc
jne
and
jmp
jns
es
cltd
dec
jp
int
fldt
adc
lret
pop
pop
push
aaa
hlt
sbb
fnstsw
nop
pusha
pop
sahf
cltd
jae
jp
mov
js
mov
or
dec
repz
cmpsl
sub
mov
pop
adc
test
lock
pushf
fs
pop
fsts
movsl
mov
mov
cld
pushf
jg
iret
sarl
push
std
arpl
or
dec
mov
insl
push
mov
push
sub
lcall
and
xchg
push
xor
in
ja
mov
pop
cs
out
enter
fsts
push
lret
xchg
ljmp
jne
xchg
lock
jp
jg
cld
mov
cmpb
dec
popa
dec
scas
inc
xor
xchg
or
repnz
push
jbe
pop
push
or
ss
sub
xor
lea
push
or
jno
xor
cmpsl
mov
sti
mov
pop
fisttpll
test
insl
clc
aas
lret
mov
loope
daa
mov
push
jecxz
xor
pop
mov
inc
insb
sbbb
jmp
subb
repz
pop
lock
or
bound
lahf
frstor
dec
pop
fidivs
jecxz
jle
daa
push
or
dec
lcall
sbb
rclb
fwait
scas
mov
fmull
cmpsl
imul
into
in
stos
jp
jl
enter
pop
jmp
das
outsb
jmp
fisubs
sub
gs
sahf
daa
push
add
stos
jbe
pop
stc
test
out
jae
dec
push
inc
dec
xchg
cmp
dec
fs
stc
push
sub
adc
fs
adc
and
aad
sub
pop
cmc
mov
mov
div
dec
and
loopne
stos
xchg
adc
push
jno
pushf
pop
mov
mov
lret
shrb
icebp
movsl
add
loope
out
call
mov
add
dec
pop
js
pop
mov
adc
push
sbb
and
lret
andl
cld
stc
push
cmpsl
movsl
fsubr
push
lret
icebp
sub
fwait
shrl
call
cmp
test
popa
or
push
pop
mov
insl
shl
cli
cmc
adc
int
gs
push
movsl
jg
jo
push
jmp
notb
adc
test
pop
out
rorl
repz
pop
dec
rorl
orl
lahf
add
lahf
xor
negl
push
inc
jne
gs
and
pop
add
stc
jbe
clc
aas
xor
or
mov
insl
xor
leave
imul
and
sbb
ret
jno
fbstp
push
add
jne
xchg
pop
stc
popf
hlt
and
sub
into
enter
xchg
outsl
stos
inc
aaa
sbb
push
inc
arpl
je
int
adc
mov
mov
aam
mov
and
fcomps
out
test
shlb
mov
pop
add
and
pop
jno
push
scas
cmpl
jbe
lods
or
in
fnstsw
shl
mov
decl
or
arpl
jo
clc
out
andl
pop
xlat
lods
or
sbb
dec
and
leave
push
lock
xchg
pop
repz
cld
cmpsl
cs
in
pop
jmp
int
andb
sub
mov
or
pop
ljmp
aad
push
pop
adc
mov
lret
xor
sbb
sbb
sbb
sub
xor
fidivrl
dec
cmp
test
dec
mov
cltd
inc
lock
or
and
adc
outsl
mov
ss
iret
rcrb
cmp
call
ds
shr
adc
cwtl
std
jnp
xor
hlt
mov
scas
dec
scas
add
push
out
inc
adc
inc
cmc
xchg
loope
into
bndstx
mov
jmp
test
fcoml
xor
add
and
cmc
xor
iret
dec
adcl
cmpb
xor
mov
cmpsb
mov
cmp
mov
insl
js
jmp
mov
add
xchg
sub
stos
xor
jl
and
lahf
jmp
jp
sbb
shr
dec
mov
add
mov
add
xor
addl
cmc
xor
ret
push
jmp
fwait
shll
loope
test
mov
movsb
subb
push
fldlg2
loope
data16
pop
loope
es
add
mov
sub
sub
and
sbb
jbe
cmp
cltd
dec
in
mov
cmc
insb
adcl
cmp
icebp
inc
pop
in
mov
mov
rorb
adc
sub
fadd
xor
ljmp
jo
sub
xchg
mov
mov
sub
ret
inc
pop
xor
adc
dec
and
ja
add
subl
mov
lcall
enter
sub
and
rcrl
cmp
pop
testl
pop
scas
xor
adc
mov
nop
jne
in
roll
xchg
ret
xchg
cmc
daa
fwait
mov
fsubrs
dec
pop
mov
cmp
push
mov
test
mov
popf
dec
jg
jae
jae
and
pop
adc
cmp
jmp
es
push
jbe
inc
das
addb
or
jb
fcoml
jbe
inc
das
ffreep
mov
pop
stos
pop
xor
jnp
push
inc
mov
stos
xor
test
xchg
std
inc
cwtl
js
mov
movsl
jp
mov
mov
ret
pop
cmc
pop
adc
lcall
push
cld
addr16
cmpb
xchg
scas
hlt
sahf
xchg
push
push
imul
cmc
bound
lods
shl
xchg
stc
cmp
mov
dec
shr
es
add
sti
cmc
mov
leave
lods
cmp
adc
divl
adc
cmp
jp
mov
sub
sbb
mov
cmp
mov
popa
push
in
pusha
aaa
or
add
lock
and
inc
jecxz
jle
pop
call
dec
push
cli
iret
in
insb
xor
scas
mov
aad
stos
insb
mov
jo
popf
enter
xor
je
in
xchg
jg
in
daa
cli
adc
adc
rcl
test
push
mov
imul
repnz
mov
fstl
fmull
ss
cmpps
bound
cmp
sub
in
push
test
dec
int
sbb
mov
nop
idivl
fcmovbe
sub
fcmovnb
fwait
mov
xchg
ss
add
sbb
and
sub
inc
data16
mov
rolb
mov
sbb
xorl
sub
dec
loope
outsl
sbbl
add
jg
jnp
out
pop
mov
test
dec
jmp
fs
cmp
jge
rol
xchg
mov
cwtl
insb
mov
push
mov
and
xchg
bound
mov
in
adc
inc
fldenv
stc
and
push
adc
sti
push
dec
pop
xchg
add
ja
xor
cmp
out
mov
jp
fnsave
std
fiadds
push
lock
xlat
hlt
sbb
jmp
push
cmp
mov
cmp
mov
mov
mov
cmp
xor
mov
pop
fnstenv
das
cli
jmp
pop
insl
test
scas
mov
addl
pop
push
push
push
mov
cmp
pop
xchg
mov
roll
test
inc
gs
loop
shlb
loope
adc
push
das
inc
es
jne
inc
xor
xchg
lds
jns
lcall
shrb
test
lret
mov
jb
sub
fdiv
hlt
jmp
xorl
cmp
or
cmp
fs
cli
hlt
mov
cmp
jne
and
inc
loopne
cmp
rcrl
nop
jecxz
push
lock
shll
or
cmpsl
mov
es
fs
add
fildl
bound
xchg
mov
push
mov
xchg
decb
movsb
mov
cmp
xor
mov
fnsave
shll
lods
cs
roll
jne
out
daa
sbb
imul
loopne
jl
fs
clc
mov
sub
fldt
sbb
insl
mov
mov
cmp
arpl
stos
sbb
nop
dec
add
shll
jge
jne
in
std
rcrb
mov
loop
xor
aam
je
bnd
sub
adc
push
cwtl
je
inc
push
mov
push
or
bound
mov
push
ds
ret
sar
mov
or
push
mov
pusha
insb
out
pop
in
aas
cld
dec
aam
and
pop
ret
cwtl
test
es
ja
mov
subl
lds
pop
xchg
gs
push
cmp
push
sahf
dec
cmp
test
or
popa
fnsave
repnz
cmp
fnsave
lret
jecxz
push
and
mov
repz
add
jmp
stos
jo
or
out
push
das
push
sbb
lods
ljmp
xchg
adc
fidivrs
lock
fisttps
loop
fsts
sbbl
pop
fld
sbb
cmp
loop
mov
sbb
daa
cmpsb
pop
push
call
or
xacquire
mov
lret
bound
fmul
popa
movsl
or
stos
mov
ljmp
lret
in
jo
sbb
adc
in
addr16
mov
pop
out
mov
ds
in
test
xchg
cmc
mov
xchg
in
insl
sub
jns
or
rorl
mov
shrl
ljmp
js
mov
dec
push
or
mov
gs
or
loope
lret
ds
mov
inc
push
insl
cwtl
dec
ds
outsl
mov
sti
mov
aam
or
lahf
jmp
ret
loopne
sub
fisubs
repz
jne
sbb
jge
inc
dec
and
dec
popa
push
mov
and
mov
lea
jbe
push
pop
adc
mov
xchg
call
add
xor
push
dec
sbbb
jae
inc
imul
enter
jmp
lcall
or
pop
add
shll
repnz
and
mov
push
mov
loope
pop
adc
ret
insl
pusha
outsl
pop
mulb
aam
int3
cmp
cmp
outsl
int3
stc
repz
lahf
mov
insb
mov
or
or
or
pop
cs
aaa
xlat
imul
pop
test
test
lods
aaa
inc
push
lods
inc
out
in
or
cld
lea
xchg
clc
jo
lcall
jmp
xchg
sub
mov
shrb
inc
xchg
cmp
inc
inc
jae
fistpll
iret
mov
inc
leave
sbb
pop
hlt
push
mov
jnp
jg
arpl
popf
inc
notl
ficoms
inc
fcomps
int
and
test
xchg
dec
sbb
sub
xor
iret
pop
pop
pop
test
jnp
dec
mov
stos
add
lcall
test
xor
cli
mov
adc
pop
jb
jp
rolb
fiadds
bound
sbb
fwait
xchg
mov
lods
rolb
inc
inc
cmc
cmpsl
push
fwait
jne
leave
jle
orb
mov
in
out
insb
int3
push
aam
pop
add
pop
lods
mov
or
sti
dec
shrb
jmp
daa
lcall
int
jbe
sbb
fnstsw
adc
xor
or
or
and
dec
xor
mov
inc
shrl
cltd
roll
add
clc
pop
nop
adc
clc
or
inc
sbb
pop
fwait
dec
bound
dec
loope
pusha
bound
push
pop
imul
jno
stos
cmp
adc
aas
dec
xor
mov
mov
jl
dec
insb
cmp
sub
push
inc
fs
mov
iret
pusha
jmp
xchg
out
mulb
xchg
in
mov
js
fcomps
mov
inc
punpckldq
in
arpl
js
and
pop
push
out
push
loope
add
adc
cmpsl
sbb
dec
sub
addl
dec
cmpsl
arpl
mov
test
add
mov
fnstenv
sahf
scas
inc
lods
fcompl
fmuls
int3
mov
fildl
out
dec
shrb
mov
shl
test
std
xchg
jle
test
mov
xchg
pop
bound
mov
movsl
mov
push
sahf
sbb
inc
daa
inc
data16
xchg
stos
loop
inc
enter
popf
sbb
jg
pop
add
sub
sbb
fwait
pushf
push
inc
mov
mov
push
add
xor
inc
inc
adc
xor
add
aaa
mov
xchg
pop
dec
cltd
je
sub
subb
jnp
mov
imul
or
cmp
inc
jo
add
xchg
mov
lods
aaa
mov
icebp
push
test
lea
cwtl
fcomi
sbb
pop
lods
adc
daa
and
std
cli
arpl
pand
lock
push
enter
xchg
lods
and
adc
xchg
add
cmp
cmpsl
imul
insb
inc
jl
into
lds
ret
pop
mov
dec
scas
movsb
ja
scas
cmpsb
loopne
xchg
repnz
sub
sbb
fldcw
rclb
loop
mov
call
fisttps
push
mov
imul
mov
jg
fistl
mov
bsf
mov
sub
sahf
rorl
pop
xchg
pop
dec
and
mov
aam
rclb
cli
sbb
dec
or
push
add
sub
mov
cmpsb
and
out
mov
cli
mov
xchg
xchg
mov
sub
and
aas
in
mov
push
je
test
inc
xchg
add
lods
std
xchg
sbb
repnz
test
fsubp
call
adc
mov
dec
addl
andl
mulb
fucomi
cld
or
and
add
xorb
add
bound
in
jnp
xor
jo
mov
ljmp
xchg
push
mov
andl
adc
subl
xor
cs
push
clc
adc
push
iret
outsb
popf
pop
mov
or
sub
sub
das
mov
outsb
xor
adc
jle
jl
stos
push
out
test
mov
sbb
ret
mov
lea
pushf
insb
or
fidivrs
jge
insb
aad
cmp
push
xchg
sbb
adc
fwait
sub
cmp
push
cmpsl
bnd
ljmp
je
inc
mov
mov
push
sub
popa
stos
stc
inc
sub
lods
fstps
and
xor
out
cmpsl
sub
test
jns
xor
xor
call
sbb
jg
mov
add
push
or
xor
dec
iret
jecxz
or
cmpsl
mov
dec
pop
xor
cmpsb
sbb
mov
cld
cmp
fistl
incl
jbe
and
rcll
sbb
or
cmp
rclb
pop
gs
imul
aad
adc
and
jge
dec
cwtl
das
cmp
in
fisubs
aas
push
sub
mov
fisubs
sbb
notb
mov
mov
in
xchg
mov
or
push
push
push
enter
mov
enter
mov
cmc
mov
inc
sbb
cmpsl
mov
push
pop
pop
ret
adc
mov
adc
stc
ret
aad
cwtl
inc
andb
out
sub
das
scas
mov
dec
fcom
dec
dec
rcr
mov
cmpsb
cmp
dec
adc
sbb
pop
fwait
xor
adc
push
xchg
rcll
cmp
push
lds
cmpsb
pop
outsl
fdivrs
push
ret
cld
test
mov
lret
sti
inc
js
sarb
push
es
outsb
push
inc
flds
daa
pusha
notl
inc
cli
jecxz
jle
loopne
pop
sub
rorl
int
sub
shl
add
fimuls
and
insb
js
leave
test
push
hlt
aaa
int
xor
lcall
or
sbb
add
and
mov
push
out
mov
hlt
mov
loope
fstpl
out
pop
pop
cmp
out
and
fwait
adc
lret
daa
icebp
mov
aam
sbb
cmc
filds
sub
shrl
sahf
dec
mov
jno
ds
mov
lods
stc
jp
pop
cmp
fucom
bound
fidivs
addr16
add
mov
mov
int
and
mov
cmpsb
adc
fs
dec
jae
jecxz
mov
aaa
xchg
push
push
sbb
sbb
and
sbb
shl
ret
push
mov
sbb
inc
add
push
in
adc
fwait
push
sarb
dec
add
mov
cli
je
lock
sti
scas
stos
push
jb
push
jne
daa
and
cmp
test
adc
mov
aas
mov
inc
xlat
xchg
or
orl
fcomps
fidivl
jle
imul
xchg
xor
outsl
adc
sub
adc
cmp
lods
add
out
xlat
ljmp
inc
push
adc
or
xchg
sbb
add
xchg
sub
lock
xlat
mov
push
jo
pop
cmpsb
mov
add
mov
mov
mov
in
xor
into
inc
clc
push
add
mov
scas
inc
mov
leave
pop
mov
xlat
arpl
jp
or
cs
jae
jg
jb
pop
loope
stc
or
ja
popa
out
mov
fisubl
enter
jns
les
imulb
pextrw
dec
and
mov
inc
inc
xchg
xlat
mov
es
bound
mov
pusha
ret
rcl
mov
outsl
adc
inc
nop
pushf
cli
lds
xchg
test
aaa
xor
scas
add
jae
cld
pop
sbb
dec
or
mov
pop
dec
into
mov
inc
xchg
jp
pop
scas
cmp
loop
lret
mov
xchg
negl
add
mov
or
xchg
pop
push
fstpl
mov
and
adc
stos
pusha
imul
dec
pop
cmpsl
pop
cmp
jl
fidivs
loop
adc
jl
mov
pop
movsb
cs
inc
xor
je
in
and
mov
icebp
imul
pushf
adc
roll
mov
inc
sub
xchg
xchg
pop
sysret
cmp
inc
pushf
js
lea
inc
adc
cmp
fstps
dec
push
fwait
stc
out
aam
jg
adc
mov
push
fbstp
stos
xchg
outsb
sarl
in
stos
mov
subb
lods
and
jbe
sub
adc
shlb
push
push
and
fsubl
adc
jge
sub
aad
lret
daa
fsubrl
inc
jmp
xor
shll
loopne
cs
insl
cmp
cmc
cmp
pop
hlt
lea
les
mov
movsb
cmp
inc
in
jae
int3
cmp
in
jmp
ret
nop
mov
bound
stos
rcrl
xor
push
sub
into
popf
push
bound
cmp
cmp
insb
cmpsl
jo
shll
cmp
xor
jge
test
xchg
pop
push
or
aas
cmpsb
and
out
push
repnz
arpl
inc
int3
int
push
call
fsubr
mov
add
inc
mov
jecxz
iret
inc
pop
jle
push
adc
cmp
jae
cmc
jl
xor
lea
mov
adc
and
in
inc
mov
scas
sub
stc
icebp
push
dec
mov
and
jbe
addr16
mov
dec
in
or
cmp
mov
dec
cmp
sbb
pop
xor
addl
nop
das
mov
pop
dec
mov
fcmovbe
stos
cmpsb
jbe
pop
mov
je
xchg
imul
mov
xchg
scas
and
loope
jmp
cmp
lods
insl
fstpl
loopne
push
dec
fmul
or
dec
test
sbb
arpl
xchg
add
push
lds
mov
mov
inc
mov
add
sahf
inc
pop
mov
rorb
or
out
inc
scas
xor
negb
leave
jae
xor
mov
adc
cld
jb
add
sbb
rcl
lods
lock
push
push
sub
dec
aad
cmc
divps
daa
xchg
mov
enter
ret
bound
pop
xchg
test
push
iret
inc
xchg
lods
jno
add
loopne
pop
ret
and
mov
mov
iretw
icebp
fwait
ss
mov
shlb
add
xor
ret
add
test
incl
push
out
mov
not
sub
daa
aad
xor
mov
stos
cltd
rolb
lock
clc
push
into
push
jge
data16
pop
lcall
punpckhbw
sbbl
cmp
pop
sbb
ret
jb
xor
xchg
or
pop
sub
or
sarb
bound
dec
movsl
lock
lret
dec
xchg
sub
push
in
inc
add
movsb
imul
xchg
xadd
aam
fcmovnbe
dec
xchg
mov
push
pop
sbb
insl
ret
sub
cmp
int3
xchg
sbbb
es
inc
cwtl
into
dec
aad
mov
sub
repz
shl
enter
in
lret
cld
add
xor
sbb
in
dec
popl
repz
scas
adc
imul
fisubl
sbb
mov
cltd
adc
fldl
pusha
or
int
in
push
or
lcall
xchg
test
cs
aam
lea
mov
jno
push
jo
sbb
push
jg
mov
mov
push
xor
mov
out
lcall
dec
jae
repnz
lds
dec
pop
nop
xor
setle
mov
imul
addr16
sbb
xor
cmpsb
out
mov
add
mov
rolb
loopne
sbb
xchg
mov
and
lret
jle
mov
xchg
sub
adc
icebp
sti
decl
cld
xchg
loopne
in
daa
cmpsb
scas
or
xchg
cmp
fnstsw
mov
testb
cmp
orb
pop
and
xchg
pushf
mov
cmp
scas
incl
inc
sbb
jae
arpl
add
mov
lea
sub
leave
fldenv
jecxz
xchg
stc
and
loope
popf
xor
js
mov
jne
lds
out
js
ljmp
repnz
lret
imul
cmp
sub
rorb
repnz
cmc
pop
test
and
push
arpl
mov
or
movsl
orl
rol
loop
arpl
pop
mov
sub
xchg
jne
scas
ss
dec
jl
mov
pop
repnz
cmp
leave
cs
xchg
in
bnd
ret
jmp
or
and
lods
rol
and
cmp
shll
add
xchg
or
iret
xorb
xor
sub
fwait
cmp
lret
xlat
fldl2t
icebp
inc
sub
sbb
pop
test
sbb
lret
cs
mov
jmp
inc
pop
push
inc
test
jne
lcall
pop
and
sahf
push
push
mov
js
inc
fsubr
adc
popa
mov
int3
sub
iret
les
stc
push
sbb
sti
xchg
gs
ljmp
and
imul
xchg
or
lret
shr
push
or
sub
stc
test
sub
dec
incl
sub
mov
mov
jmp
mov
lret
mov
outsb
adc
ret
or
jnp
nop
push
mov
adc
out
ficoml
lret
into
addr16
pop
loope
xchg
mov
sbbl
cmpsl
insb
cmp
in
aas
mov
ss
iretw
jp
adc
mov
test
push
leave
jge
dec
inc
dec
mov
xlat
iret
nop
or
mov
dec
bound
out
aas
push
adc
and
pusha
adc
ds
lcall
aaa
mov
rcl
jp
in
and
lret
push
cmp
mov
stos
xor
call
adc
icebp
es
outsb
icebp
fadds
jne
dec
shl
jns
out
popa
pushf
sahf
cmp
cmpsb
mov
lret
data16
or
mov
or
or
jp
sbb
flds
ret
movsb
loopne
and
out
inc
sub
mov
jnp
clc
negl
mov
stos
stc
or
add
pop
xor
fcomip
test
mov
mov
shr
push
popf
pop
fwait
and
or
out
mov
jg,pn
fdivl
push
loope
fisubl
nop
push
es
pushf
shll
and
xchg
ja
add
js
and
loopne
or
mov
xor
loop
mov
sbb
inc
adc
cmpsl
movsb
es
dec
sahf
cmp
clc
mov
jbe
adc
mov
data16
sub
stc
mov
add
and
and
arpl
cmp
jns
andb
mov
mov
jb
sbbb
xchg
fidivrs
inc
jno
loope
sbb
adc
adc
jne
push
dec
pop
mov
dec
shrb
pop
push
mov
add
loop
or
sbb
pop
dec
cld
popa
and
loope
int
dec
movsl
sub
dec
or
jecxz
jl
ds
pop
cmp
push
aam
sub
jbe
sbb
and
hlt
add
xchg
sub
orb
sub
adc
push
pop
repz
sub
popf
jp
iret
cmp
out
adc
inc
sbb
sbb
sub
sti
je
sub
adc
mov
dec
sub
jb
push
cltd
cmc
fsubrp
xor
or
sub
push
add
pop
das
mov
xchg
mov
push
adc
sub
dec
push
aas
data16
lea
mov
dec
cmp
mov
jge
pop
xor
dec
int
popf
cmp
push
jp
in
mov
and
inc
lea
add
stos
cmp
lcall
repz
data16
dec
fbld
loop
int
data16
fimull
mov
pop
pop
jle
bound
mov
iret
add
inc
test
movsl
mov
lods
incl
pop
xchg
mov
repnz
imul
ret
xor
icebp
mov
pop
mov
cmp
xchg
das
dec
sbb
jbe
movsl
icebp
lods
test
cld
push
cwtl
out
in
and
sbb
outsb
dec
mov
pop
addl
pop
ficomps
and
sub
push
andl
loopne
inc
and
loopne
mov
stc
pop
jle
gs
jl
popa
scas
and
cltd
aad
jno
push
in
mov
in
jbe
push
pop
pop
mov
jno
adc
fimull
sbbl
jmp
cmpsb
xchg
xchg
mov
jo
xchg
sub
cmp
jg
cmp
repz
repnz
mov
cmp
shrb
xchg
jb
pop
xor
push
lock
jne
add
and
frstor
rcrb
bound
sbb
outsl
push
dec
jle
scas
inc
xor
push
mov
or
daa
ds
cmp
pusha
negl
movsl
cmpl
pop
out
test
in
sbb
test
sub
push
xchg
add
out
stc
fcomps
test
xor
add
lret
out
xlat
jmp
jg
adc
or
dec
pop
js
add
inc
call
sub
adc
xor
cmpsl
stos
cmp
add
mov
jne
mov
repz
sbb
jbe
and
or
cmpsl
jmp
or
sub
outsl
daa
sub
pop
inc
mov
mov
sti
shll
leave
or
cmpsl
lea
lret
bound
gs
xchg
mov
in
and
pop
icebp
inc
inc
mov
cltd
pop
arpl
adc
bound
test
mov
cmp
leave
rorl
and
jg
callw
and
cmp
mov
ret
push
pop
inc
fs
mov
in
adc
test
jle
insb
add
repz
sub
aad
add
xchg
mov
dec
mov
mov
mov
pop
bound
xlat
cmpsl
cmp
rorl
jno
call
lock
pop
insl
sbb
rorl
sahf
shl
sub
ds
inc
cmp
leave
push
scas
out
in
adc
or
sbb
bound
mov
hlt
mov
adc
mov
xor
push
xchg
cmp
mov
or
call
mov
clc
adc
or
movsl
adc
loope
clc
or
pop
jbe
dec
rorl
stc
and
inc
fistps
nop
das
ret
lock
xchg
dec
popa
add
push
aam
xchg
mov
adc
push
inc
adc
pop
push
out
fcomps
and
push
sub
arpl
in
outsl
test
test
sbb
or
mov
push
xchg
cld
mov
sub
addr16
popf
jnp
lds
push
xor
bound
das
cmp
mov
out
stos
dec
pop
scas
xchg
iret
mov
mov
popf
and
xchg
push
fucomp
lods
xchg
mov
sarb
ja
pop
add
in
enter
aam
ljmp
orl
int3
xchg
cmp
xchg
mov
jae
inc
out
cltd
call
out
adc
xchg
xor
pop
imul
and
inc
mov
outsb
mov
mov
mov
fisubl
stos
jle
push
push
and
sbb
test
xor
addr16
and
cltd
xchg
push
push
enter
inc
ret
fsubrp
int
jle
lock
dec
mov
leave
loop
in
mov
ficoml
add
orl
notl
xchg
xor
xor
fadds
or
or
and
jne
in
cmp
or
add
dec
or
xchg
dec
dec
inc
push
and
loopne
cmp
mov
inc
jecxz
dec
xor
cmp
cs
push
stc
sar
lods
cmp
test
xor
mov
pop
jno
clc
aas
cmpb
cmp
pop
mov
iret
push
out
pop
inc
iret
int
jae
adc
xchg
mov
repnz
pop
mov
xrelease
xor
push
in
jge
and
sti
mov
jne
scas
xchg
stos
popf
out
xchg
sub
or
or
cmp
xchg
stos
das
mov
mov
jns
in
fdivrs
popf
sbb
ja
sbb
lret
icebp
push
jmp
push
andl
inc
adc
fidivrs
cmpb
inc
sub
repz
arpl
dec
jbe
repnz
jmp
or
clc
out
fisubl
pop
cmp
int
and
addl
mov
test
xor
shl
js
mov
insl
add
jp
push
out
xchg
mov
and
xchg
push
sti
test
sub
sbbl
nop
outsl
popa
ja
scas
sub
xlat
rclb
cmp
push
leave
and
mov
add
add
out
bound
cmp
xor
fsubrs
mov
mulb
cmp
fnstcw
pop
and
je
xchg
stos
add
sbbb
pop
lods
jo
and
sbb
lods
fisubrs
sbb
icebp
jbe
adc
repz
scas
or
mov
mov
je
adc
test
mov
adc
pop
repz
mov
fcom
inc
test
add
mov
mov
cwtl
inc
clc
cmc
mov
jg
mov
push
popf
cs
sub
push
lahf
and
test
pop
jb
lret
fdivrl
mov
les
cmpl
test
mov
in
inc
lcall
and
ljmp
push
push
mov
lahf
cld
sub
push
pop
push
shlb
add
push
push
jae
xor
daa
mov
dec
movsb
cmp
neg
jmp
adcb
rorl
jl
cmp
add
loopne
xor
scas
inc
fidivs
pop
and
fsubr
aaa
mov
out
cwtl
mov
fists
mov
loope
mov
mov
mov
sbb
pop
shl
inc
push
bound
movsl
sbb
mov
sbb
movsb
sbb
loop
daa
inc
shl
jno
add
daa
fwait
addr16
inc
call
xor
fdiv
sub
mov
cmp
mov
cld
sub
arpl
cmp
mul
sbb
xchg
daa
and
or
repz
mov
cli
cmp
lcall
popa
aas
movsl
mov
mul
ret
add
or
subl
shrl
ja
imulb
loop
lcall
ja
adc
and
or
adc
stc
outsb
sub
mov
les
xchg
ret
jg
aad
jno
push
pop
push
mov
mov
loop
mov
divl
insl
mov
xor
adc
je
mov
jp
fdivrs
sbb
pop
inc
testb
addr16
scas
xor
sub
fdivrl
sbb
in
repnz
jle
fistpll
inc
inc
in
test
push
ds
push
push
and
inc
cmc
sbb
mov
push
mov
inc
ret
and
lods
adc
pop
inc
repnz
push
add
lds
inc
dec
rcll
add
cld
and
or
arpl
jns
imul
inc
mov
es
pushf
xor
fidivrl
adc
pop
inc
or
inc
mov
mov
jnp
mov
addr16
fdivrs
repnz
mov
fstl
dec
inc
cld
xchg
imul
mov
pusha
cmp
inc
bound
outsl
pop
jne
jno
cmp
into
test
in
pop
mov
adc
cwtl
test
sub
xlat
popa
and
mov
sbb
xchg
push
out
in
mov
testl
loopne
rorl
int3
jnp
shr
xchg
push
out
or
repz
jp
rcll
jnp
mov
mov
and
jecxz
adc
xchg
jg
sub
into
push
push
add
movsb
mov
imul
aam
pop
jns
and
rep
inc
and
mov
cld
cwtl
push
inc
inc
pop
aas
jb
das
mov
stos
daa
or
add
mov
xchg
clc
push
inc
scas
js
int
or
mov
sbb
lods
jo
inc
rcl
test
and
dec
push
push
mov
fwait
xor
sti
stos
or
and
pop
pusha
ret
iret
sbb
shll
imul
sbb
sub
push
and
rcrl
fwait
icebp
and
jp
lret
dec
loop
aaa
int
pop
cmp
jb
repz
pop
mov
mov
xor
sbb
enter
jns
sbb
push
rol
std
outsl
push
das
push
dec
loope
lds
or
mov
std
push
mov
aam
nopl
imul
sub
push
jb
xor
push
lea
add
mov
cmp
fwait
cli
int
and
stos
ds
test
mov
push
dec
or
and
arpl
mov
cmpsl
xlat
test
std
inc
cltd
fimuls
es
xlat
push
movsl
sbb
sti
jbe
cld
xchg
ljmp
dec
and
lret
leave
jge
lret
das
mov
arpl
aaa
es
fsubrp
pop
sbb
test
adc
in
mov
push
pop
repnz
mov
lods
fistpl
xadd
inc
inc
mov
mov
pop
loop
hlt
cmp
mov
cld
icebp
adc
out
push
jecxz
test
call
mov
pop
xor
orb
push
shll
addr16
pop
dec
das
hlt
inc
push
inc
es
out
cli
inc
loope
pxor
fdiv
adc
cmp
cmp
cmpl
test
stos
mul
and
leave
jl
rcr
test
push
mov
dec
mov
adcb
jp
xchg
xchg
and
jo
mov
stos
repz
jl
xlat
dec
pop
cmp
scas
repnz
filds
mov
dec
sarl
cmpsb
dec
add
es
inc
pop
mov
stos
mov
adc
movsb
cmp
adc
cmp
popa
lods
out
loop
std
cwtl
fld
dec
dec
les
aas
lock
or
sub
incl
popf
lods
mov
add
pop
fcom
xchg
jge
dec
inc
fidivrl
ja
cltd
neg
inc
nop
inc
pop
incb
or
jg
dec
icebp
mov
lods
pop
test
ds
test
jmp
mov
xchg
jb
shll
mov
pop
int3
xor
in
inc
xlat
in
ljmp
push
loop
adc
aam
aam
cmpsl
add
cmpsb
xchg
add
das
test
cmpsb
xor
pop
nop
leave
cmpsl
cmp
sbb
cltd
dec
sub
pop
pop
fsubrs
ja
mov
out
shrl
in
jbe
inc
stos
mov
int3
fsubl
mov
iret
in
ret
mov
jne
aam
lret
pop
bound
lds
jbe
mov
xchg
jl
lret
dec
es
lds
cli
xchg
sub
out
mov
or
test
xchg
xchg
sub
loop
arpl
mov
xor
xchg
loop
shrb
test
mov
ret
addr16
out
add
pop
je
cmp
insb
mov
lret
nop
sub
subl
mov
lods
int3
and
cmc
lea
out
mov
jp
inc
cli
adc
mov
mov
mov
pushf
adc
and
sub
cmp
pop
pop
push
repz
mov
fcompl
gs
xlat
lret
in
cmp
xchg
scas
xchg
out
xchg
dec
sub
mov
or
xchg
fs
push
cmp
cmpsl
cld
ret
leave
mov
jle
enter
insl
lods
sub
cmpsb
nop
sub
call
xchg
outsb
sbb
xchg
movsb
cwtl
fs
or
xor
mov
jle
fisttps
mov
out
mov
imul
jp
add
push
push
out
pushf
dec
in
xlat
jge
mov
int3
cltd
pop
push
add
fdivs
and
dec
cmpsl
cmp
mov
dec
or
mov
fwait
xor
cmp
ljmp
inc
bound
aad
jmp
sarb
cmpl
jp
fdivrs
out
sbb
push
in
push
call
inc
sub
scas
in
pop
sbb
mov
inc
popf
in
lret
mov
cli
jg
adc
les
mov
mov
fwait
clc
pop
and
cmp
lahf
inc
stos
cltd
fiadds
into
aaa
lock
in
push
jle
adc
mov
mov
insb
xchg
dec
pop
int
enter
scas
into
xlat
enter
dec
push
sarb
and
cmp
in
mov
addr16
or
rorb
insb
sbb
bound
sti
fwait
in
adc
xchg
mov
dec
shll
jg
aam
or
std
xchg
push
add
popf
push
lds
add
test
int3
paddusw
jae
cmpsl
push
je
sbb
outsl
imul
rep
roll
mov
dec
jle
test
ret
jbe
pushf
sbb
into
jb
shrl
jl
out
cmp
imul
jo
sti
lock
or
jp
pop
aam
js
enter
aam
mov
dec
or
cmp
sbb
dec
imul
mov
sub
daa
fmuls
imul
mov
iret
mov
hlt
inc
rcrl
lahf
mov
sbb
iret
cmpsb
ss
or
adc
insb
popf
decl
adc
popf
shrb
ret
dec
xlat
daa
or
sar
cs
cmpsl
mov
aaa
enter
sbb
xchg
pop
sub
inc
mov
cmpsb
or
into
repz
ds
mov
push
add
cvtps2pd
xchg
mov
mov
roll
lods
fdivs
jmp
fs
mov
jle
and
in
ss
aad
and
inc
faddl
jmp
daa
inc
out
cmp
movsl
and
push
mov
add
push
mov
lock
loopne
xor
sbb
jae
dec
jns
insb
lahf
mov
roll
ss
outsl
loope
dec
pop
gs
cmpsl
fcomi
in
out
and
fdivl
dec
pop
push
and
cmp
fwait
sub
xchg
js
xor
sbb
mov
sub
mov
pop
mov
mov
inc
ret
push
mov
sbb
dec
adc
mov
or
mov
mov
bndstx
xchg
push
mov
mul
mov
leave
pop
hlt
test
cmp
dec
mov
push
es
push
sub
ret
xor
hlt
push
in
and
out
push
arpl
sub
and
xchg
fs
fisttpll
loopne
lret
jmp
mov
push
xor
mov
sub
repnz
lods
aam
inc
mov
cmc
or
mov
test
inc
mov
or
add
adc
fs
iret
xlat
mov
sahf
jnp
shlb
jmp
cmp
pop
mov
mov
jg
iret
mov
ret
xchg
es
fucom
push
mov
jg
lcall
sbb
out
add
xchg
les
mov
add
sbb
icebp
lcall
lock
cmpsb
addr16
fadds
movsl
xchg
mov
jl
mov
push
pop
push
imul
inc
push
mov
dec
shrl
orl
fucom
add
mov
or
xor
inc
jnp
jb
sub
inc
sub
and
push
fcomps
pop
shrb
ret
mov
push
push
or
push
cwtl
in
aad
loop
repnz
and
mov
aas
dec
jo
jp
and
fcoml
fildll
mov
les
lods
jg
sbb
cmp
imul
dec
push
mov
pusha
fstpt
aaa
xor
orl
sub
es
das
lret
mov
faddp
add
cld
inc
lret
stos
rclb
pushf
enter
mov
adc
clc
mov
loopne
mov
pusha
fimuls
in
jb
inc
adc
mov
in
andb
imul
pop
mov
lods
or
dec
out
add
mov
pop
push
mov
cld
outsl
push
mov
dec
mov
aad
das
mov
jns
or
insb
inc
pop
xchg
sub
add
or
mov
push
sub
mov
jl
xchg
mov
lcall
test
aas
stc
and
pop
sub
data16
enter
pop
stos
dec
js
mov
mov
add
into
and
inc
cmp
jg
subb
pop
adc
out
push
sbb
inc
pop
mov
pop
out
in
fstpl
call
out
vmovss
dec
clc
xchg
dec
adc
sbb
mov
jmp
mov
xor
lret
sbb
aaa
data16
push
fstpt
mov
mov
and
mov
xor
sub
in
xor
cltd
loopne
hlt
and
ret
cmp
std
incb
pop
jno
out
in
les
lret
leave
pop
rcrb
mov
push
cmpsl
fbstp
iret
sbb
pop
std
sbbb
xor
mov
fistpll
imul
fldl
push
dec
aad
pop
xchg
insl
or
jnp
cwtl
pushf
popa
fsubs
push
mov
and
push
arpl
cwtl
add
xchg
test
sbb
xchg
or
jns
mov
shll
enter
call
sbbl
jle
sub
daa
arpl
insb
movsb
jmp
mov
and
jo
push
sub
inc
rclb
add
jmp
dec
push
and
inc
mov
je
iret
push
int3
int
shrb
mov
mov
cltd
pop
pusha
jl
js
in
enter
loope
in
mov
mov
cld
push
mov
les
out
ret
xchg
cmc
stos
fcmovbe
push
cs
xchg
adc
push
jl
xchg
out
jmp
fistpll
pop
add
loopne
mov
cmc
xor
std
pop
movsl
cmp
xor
lock
push
dec
insl
xor
mov
data16
cmpl
add
sub
sarb
adc
jbe
dec
jae
dec
mov
iret
xchg
sub
out
lcall
sbb
cmc
mov
mov
sbb
popf
jo
repz
pop
inc
cmp
sti
xchg
mov
imul
test
cld
pop
jecxz
test
ficomps
mov
sbb
push
or
fisubrl
cmpsl
das
jne
add
cli
sahf
in
inc
adc
shl
pop
scas
push
loopne
stos
xchg
push
mov
enter
push
and
adc
out
ret
aam
lahf
mov
in
fdivrl
mov
and
into
push
in
and
or
imul
sarl
push
movsl
popf
mov
repnz
pop
inc
push
mov
loop
sbb
jle
sub
adcb
imul
int
sarb
and
loope
mov
push
pop
add
bound
out
mov
icebp
outsb
and
or
add
inc
ljmp
xor
shlb
sbb
shrb
push
icebp
pop
fwait
es
push
push
out
cmpsb
xor
mov
lods
cmp
or
jl
shll
test
int
jno
fists
mov
inc
sbb
jp
sti
and
movsl
stc
or
dec
in
sbb
sub
mov
dec
repnz
jae
or
pop
xchg
insb
out
xchg
pop
je
cmpsb
jl
and
aam
cmp
fdivl
xor
mov
add
mull
push
dec
and
inc
ds
mov
or
dec
or
mov
test
adcl
and
jmp
mov
sbb
sar
sub
and
insb
mov
pop
mov
push
mov
insl
xchg
ljmp
xchg
dec
rcl
mov
shrl
push
fisubl
push
sub
lock
add
sub
cmc
mov
std
or
jecxz
add
cmp
clc
inc
clc
scas
inc
leave
pop
adc
int
sahf
insb
add
jp
insb
adc
xchg
sti
negl
jbe
or
stos
jne
stos
data16
lods
movsb
pop
sub
mov
jb
mov
cmp
and
mov
mov
into
ljmp
add
in
adc
pop
negb
cli
js
mov
adc
dec
inc
cmp
or
mov
push
dec
shl
pop
inc
lods
mov
dec
mov
popa
or
pop
dec
fimuls
stos
xor
sti
and
and
and
mov
pop
dec
cmp
ror
in
mov
sub
inc
in
in
popa
xchg
scas
xchg
test
or
mov
and
mov
mov
sbb
fs
stc
xchg
mov
in
mov
jb
aad
pop
dec
data16
gs
mov
ja
xchg
cmp
mov
and
sub
inc
sbb
imull
jmp
push
adc
jnp
cmp
iret
inc
add
leave
xchg
dec
push
mov
dec
movsl
icebp
jecxz
adc
and
test
imul
mov
pop
iret
pop
cmp
mov
mov
adc
pushl
dec
jle
insl
aad
add
xorb
pop
or
and
lahf
lds
jns
cmp
iret
enter
test
add
adc
out
inc
dec
dec
pushf
not
jmp
nop
pop
inc
repz
sbb
pop
mov
outsl
push
mov
gs
push
push
scas
inc
xchg
xor
movsb
insl
lret
out
jns
push
fnstsw
rorl
je
enter
xor
mov
xor
sbb
cmpsb
cltd
mov
lret
ret
push
push
je
js
jp
fisttpl
dec
jecxz
out
mov
cwtl
xchg
dec
out
cmp
mov
and
cmp
inc
pop
ds
das
dec
jb
daa
dec
movsb
frstor
cli
popf
fwait
jg
mov
rorl
into
out
cmpsb
sbb
push
loop
ret
cmp
mov
mov
popa
aam
sbb
loopne
and
dec
pop
mov
test
push
pop
jns
aam
mov
aam
fiadds
cwtl
and
lods
mov
mov
jl
xor
jp
repz
std
and
cmp
mov
or
in
mov
mov
dec
loope
sub
mov
mov
inc
jp
and
or
mov
not
inc
cltd
add
stos
mov
cltd
pop
cwtl
clc
outsb
sti
xchg
pushf
pop
fmul
mov
mov
das
cmp
jmp
outsl
pop
mov
adc
shl
xor
cmc
push
loop
adc
loope
and
sbb
cmp
ds
or
inc
mov
xchg
scas
xor
das
in
jecxz
xor
xchg
xchg
mov
pushf
daa
js
test
xlat
outsb
in
leave
mov
imull
popa
nop
gs
fs
cld
mov
int3
and
pop
jno
stos
jmp
or
pop
dec
mov
in
xchg
mov
imul
mov
into
sbb
adc
cmpsl
mov
xchg
mov
enter
xchg
sub
popf
repnz
cmp
jmp
jecxz
repnz
cmp
sbb
add
out
xchg
in
out
lock
and
push
cmp
xchg
cmpsb
jae
mov
inc
sbb
cmp
push
cmpsl
dec
mov
cmp
jmp
mov
ss
int
nop
aas
je
sub
and
mov
dec
pushf
mov
mov
jmp
enter
test
test
jp
cmpsb
xchg
inc
dec
scas
dec
push
sahf
jns
aad
or
scas
inc
sbb
fiadds
aas
cmpsl
fs
ret
mov
scas
std
or
sub
pop
adc
into
fmulp
repz
lds
enter
test
pop
jmp
popf
mov
jmp
mov
mov
dec
std
icebp
xor
push
js
add
sub
jo
test
cmpsb
jnp
testl
call
add
jl
pop
repnz
addl
cmp
aas
dec
cli
fwait
pushf
xor
pop
jle
movsb
mov
push
scas
push
push
adc
dec
cwtl
das
jge
push
inc
and
aas
ret
xchg
pop
push
push
pushf
jnp
lret
gs
scas
lret
mov
mov
fdivr
out
cmpsl
push
add
negl
xchg
cs
pop
jae
and
shll
xor
xchg
leave
mov
data16
jae
in
xor
sub
mov
scas
and
sahf
out
sub
mov
fiadds
push
and
mov
cmp
cmpsb
int3
pop
jmp
lret
les
cmp
in
sbb
mov
sub
sub
inc
pop
add
lea
push
lret
fmuls
es
jnp,pt
mov
xacquire
test
pop
dec
in
lret
inc
pusha
imul
call
push
mov
movsb
xor
pop
fcomps
mov
sub
std
inc
push
and
sbb
jae
push
inc
iret
sbb
mov
int3
imull
mov
add
lds
jge
dec
sub
les
inc
pusha
dec
sbb
iret
adc
pop
rcl
or
shl
jl
cmp
mov
mov
cli
inc
mov
ret
popf
or
aam
mov
dec
fnstcw
fstl
mov
ret
sub
cmpsl
jmp
jmp
mov
or
movsl
nop
push
jnp
popf
and
dec
lcall
ficoml
cmp
arpl
cltd
insb
mov
insb
scas
rcr
iret
mov
xor
jne
nop
push
push
test
dec
loope
jmp
fs
pop
inc
out
sbb
fnstcw
push
lcall
or
cmp
xor
dec
cmp
cmpb
data16
or
lret
loop
add
into
lods
sar
test
adc
mov
push
add
xor
popa
in
fisubrl
testl
mov
das
cmp
xor
mov
icebp
jl
sub
out
roll
add
adc
insb
lcall
mov
sarb
fstl
mov
ljmp
mov
fdivl
jns
inc
aad
lcall
shll
jns
add
inc
out
sahf
rcrb
ljmp
out
sub
cwtl
pop
outsb
fisubs
adc
and
inc
popf
ss
loopne
and
adc
mov
lea
or
mov
ltr
inc
pop
sub
push
sbb
dec
jne
loopne
les
addl
lds
push
popf
inc
mov
iret
mov
lods
lahf
mov
or
faddl
or
aad
xlat
jmp
jg
mov
into
xchg
mov
aam
push
callw
push
add
mov
pop
loopne
nop
mov
push
jne
and
pop
adc
enter
sub
mov
aaa
aaa
pop
add
xchg
jmp
cs
add
addl
cmp
sbbl
out
ja
xchg
jl
pop
lock
add
sbb
and
and
adc
aas
jp
jecxz
into
mov
sub
adc
pusha
adc
add
inc
mov
mov
mov
xchg
sub
mov
push
push
insb
sub
scas
and
nop
daa
cmp
ret
insb
cltd
add
aaa
daa
push
sbb
xor
jo
or
mov
pop
fsubrs
xor
sbb
xchg
jne
xchg
ret
ret
sub
and
push
push
loope
pop
mov
fs
ret
int3
stc
cmp
data16
icebp
xor
xor
pusha
or
and
mov
jae
inc
pop
xchg
dec
insl
jge
mov
and
and
xor
negl
data16
cltd
cwtl
je
std
lods
adcb
inc
fistl
sub
sub
arpl
ja
into
test
pushf
cli
dec
jns
pop
mov
lret
lock
sub
xchg
lret
push
in
sbb
sbb
shrl
stc
push
or
sbb
push
add
cltd
aam
xchg
pop
xchg
sub
or
jl
neg
pop
pop
and
cmpsb
jle
mov
outsb
pop
mov
mov
add
xor
pushf
aaa
lret
mov
fisttpl
push
inc
cli
pop
fnsave
jl
sbb
out
inc
lea
push
xchg
mov
imul
jns
or
dec
mov
popa
and
inc
aad
mulb
cmp
ret
cmp
repnz
adc
aaa
inc
pop
nop
sbb
cmp
dec
jo
das
xchg
rorb
add
shl
sub
pop
pusha
or
bound
adc
out
jp
les
fcomip
cmp
aam
out
sti
pop
adc
sub
mov
int3
in
inc
mov
mov
cmp
out
mov
les
inc
xchg
repnz
fcoml
add
ficomps
xor
fsubl
decb
cltd
test
rorb
mov
xchg
out
lahf
rcr
je
add
shll
adc
sbb
inc
xchg
lds
mov
sub
pop
jns
ret
xchg
imul
push
add
dec
pop
add
pop
movsb
and
subb
mov
lods
ret
jge
mov
loop
es
inc
add
sbb
arpl
inc
test
lods
or
cmpsl
mov
in
xor
mov
sub
pop
mov
je
rcrb
jae
sbbb
outsl
ret
mov
xchg
lret
jp
addb
rcll
je
inc
lds
pop
adc
in
mov
pop
insb
jnp
dec
testl
data16
lret
xor
jmp
out
test
pop
addr16
lea
adc
adc
rcrl
push
leave
xor
cltd
mov
fisubl
subb
es
pop
jg
jno,pn
clc
xchg
xor
insl
js
aam
inc
fcomi
cmp
orl
ds
pusha
es
mov
cltd
aam
adc
iretw
and
push
out
pop
mov
cmp
inc
out
jns
push
sbbl
mov
rcll
push
sbb
lret
mov
xlat
or
stc
inc
rorb
data16
or
lds
mov
xchg
fbstp
negb
mov
shll
outsl
pop
push
jae
test
xor
lods
mov
xor
cmp
aam
jb
or
cmp
std
aas
mov
mov
push
jnp
inc
push
xlat
popa
mov
and
adc
and
test
adc
xorl
push
addr16
fstps
orb
mov
mov
popa
dec
enter
sbb
inc
pop
mov
pop
insb
mov
pop
call
mov
out
cltd
stos
xchg
call
ss
jg
add
inc
pushf
roll
ficoml
push
sbb
cmp
xchg
jno
jle
xchg
mov
subb
bound
stc
xchg
jmp
add
push
popf
pop
xorb
push
bound
xchg
in
lret
hlt
adc
jnp
cmp
fdivs
dec
cmp
out
push
fmuls
mov
adcb
jns
adc
push
cmpsb
cmpsb
inc
or
cmpl
imul
mov
cld
mov
scas
rorl
adc
roll
ja
mov
pop
pop
out
testb
jle
or
push
lods
mov
xorb
test
push
fmull
sbb
mov
dec
xchg
push
dec
in
fldl
sti
imul
push
gs
pop
add
pop
cmpsb
adc
fs
out
pop
jp
pop
repnz
loope
inc
jns
and
inc
push
or
fstpl
sbb
test
sbb
in
jge
pop
jp
mov
add
ja
adc
lret
mov
repz
and
iret
rcl
pop
xchg
and
shlb
sti
jno
daa
xchg
mov
mov
pop
dec
sbb
jg
mov
call
pop
add
ds
jnp
push
inc
lea
shrl
sub
or
fisubrl
sbb
xchg
pop
sbb
xchg
dec
outsb
xchg
iret
push
pop
fsubr
test
arpl
sub
ja
xchg
xchg
cli
ds
mov
es
fidivrs
fs
daa
xor
pop
and
xor
jl
dec
fildl
iret
mov
sub
mov
adc
orb
jle
out
jg
add
outsb
clc
xor
sbb
outsb
mov
mov
movsb
push
mov
shlb
ljmp
test
jmp
movsl
push
dec
test
aas
fisubl
cmp
test
and
mov
mov
repz
daa
aad
sbb
stc
loopne
lock
mov
jecxz
data16
pop
dec
mov
sarb
pop
adc
das
xchg
sub
pop
lahf
out
or
mov
rorl
cltd
sub
js
pop
sub
aad
mov
push
push
cwtl
fdivrl
mov
mov
popf
mov
aaa
jle
sbb
push
and
aad
mov
test
outsb
pop
cmp
xchg
push
popl
in
lahf
mov
mov
test
lods
push
mov
dec
mov
mov
std
bound
pop
xchg
pop
gs
mov
sarl
cmp
inc
dec
or
icebp
mov
iret
loop
movsl
nop
xor
in
imul
cmc
jmp
sbb
lods
dec
fnstenv
int
insb
sbb
hlt
movsb
out
push
pop
aam
outsb
inc
sti
lea
push
dec
or
jl
push
pop
sbb
rclb
ja
mov
mov
cli
push
or
xchg
data16
repnz
icebp
pop
push
inc
fisttps
clc
add
cld
int
jne
pop
les
je
mov
adc
push
iret
or
adc
mov
adc
roll
cld
jne
add
fsubrl
imul
nop
mov
leave
pusha
andb
mov
outsb
pop
cmpsl
imul
and
push
les
push
int
mov
cmc
jge
les
jle
and
popf
sub
and
sub
mov
pop
outsb
mov
shll
std
cld
leave
pusha
cs
pop
pop
icebp
jb
push
fcompl
loopne
pop
iret
jl
sbb
flds
out
sub
mov
mov
xchg
dec
pusha
mov
dec
negl
testb
mov
add
xchg
dec
stos
jp
out
adc
jbe
call
test
out
fisubl
push
cld
loopne
test
jmp
das
or
mov
jne
mov
add
loopne
mov
xchg
mov
into
jno
das
aaa
mov
jg
outsb
add
sbb
mov
jne
dec
nop
push
adc
fs
cld
and
jmp
or
mov
leave
fisttpl
addr16
insl
sub
lds
jnp
outsl
sbb
inc
out
repnz
icebp
push
and
mov
in
lcall
cmp
xor
lret
rorl
mov
test
outsb
fs
inc
and
in
lcall
rcll
sub
fsubrl
bound
mov
nop
cmp
cltd
xchg
jmp
outsl
cmp
mov
sub
push
fistpl
in
neg
inc
push
movsb
and
fwait
std
iret
and
lods
mov
inc
dec
out
stc
dec
cmp
jns
xor
pop
adc
rcr
rep
and
clc
sub
mov
add
mov
enter
stos
bound
addr16
fs
sti
push
dec
aad
xchg
and
mov
ret
adc
add
mov
ljmp
stc
sti
int3
inc
cmc
sbb
stc
cmp
xchg
cmp
mov
ds
cmp
ja
roll
push
movsl
cs
xchg
adc
js
ret
jae
ss
sub
out
push
or
pop
adc
idivl
jns
xchg
in
pushf
clc
into
gs
add
xchg
out
stos
inc
and
sub
mov
lock
dec
xchg
xlat
inc
lret
rcll
add
orb
jl
fwait
sub
xor
sbb
xchg
or
cmp
icebp
ds
repz
stos
lods
inc
ss
fistps
jo
fwait
push
sub
ror
repz
mov
sub
mov
test
cmp
and
dec
push
pop
sub
sbb
xchg
xor
scas
nop
ja
push
fimull
test
xchg
mov
cld
pop
call
sub
mov
xchg
dec
nop
and
testl
scas
jns
sub
loopne
insb
xor
lret
sbb
or
dec
andl
add
ror
pop
movb
jge
imul
fcoml
sub
add
outsb
xchg
cmp
fsub
loope
pop
push
rorl
xor
cmpsl
inc
sbb
cmpsl
out
mov
mov
ja
sub
lret
cs
enter
ret
andl
pop
aad
cmp
lret
movsl
lds
push
push
bound
addr16
adc
int3
push
ja
roll
cmp
mov
push
test
cmpsl
stc
ret
insl
jecxz,pt
mov
mov
pushl
pusha
test
xchg
lahf
daa
scas
add
sbb
les
fxch
shll
mov
jge
pop
mov
ret
dec
xchg
cmp
insl
enter
push
mov
mov
jle
aaa
or
hlt
loopne
mov
cltd
test
push
rorb
xchg
and
mov
pop
or
movsl
les
cmpsl
insb
pop
cmp
movsb
arpl
sbb
mov
pop
mov
dec
jno
jb
xchg
sbb
push
jns
fidivs
dec
add
outsb
cmp
into
gs
sbb
dec
pop
jge
in
scas
cmp
mov
ret
scas
arpl
insb
sub
mov
pop
out
adc
lret
mov
movsl
cmp
fbld
lds
mov
inc
lret
daa
jge
inc
es
popa
push
mov
and
retw
jl
loope
cmpsl
push
pop
stos
push
sub
cltd
aam
mov
sarb
je
xor
xor
xchg
sub
mov
mov
mov
push
sub
mov
sub
nop
cmp
pop
scas
cmp
test
push
fidivrs
sub
test
xchg
in
push
rcll
add
outsb
jle
xor
push
out
cmpsl
in
adc
dec
dec
insl
loop
inc
jecxz
orl
adc
and
xor
fwait
test
sbb
insb
testl
cmp
std
pop
mov
xlat
xor
xchg
or
arpl
pop
add
rcr
in
insb
sbb
rcl
sbb
dec
sbb
in
loop
fisubrl
stc
rclb
xorb
out
xchg
stos
mov
repnz
mov
xlat
mov
and
nop
lds
inc
jne
clc
fstps
and
std
adcl
sub
test
mov
jb
aam
out
pop
or
adc
pop
enter
outsl
pop
sub
mov
mov
pop
inc
rol
xor
data16
xchg
rcrl
sbb
jae
mov
loop
daa
dec
push
cwtl
xor
arpl
popf
jp
jmp
clc
mov
icebp
inc
fsts
mov
adc
repnz
mov
pop
clc
xor
icebp
nop
ret
pop
jg
mov
ret
pusha
int3
and
adc
mov
and
aas
mov
add
fsubr
push
and
sub
cwtl
das
jg
inc
icebp
sbbb
nop
push
xor
xchg
xchg
flds
call
and
sti
fs
mov
wrmsr
push
mov
or
cmp
xor
imul
mov
fwait
aad
pop
sbb
jbe
mov
rorb
pop
fisubl
push
push
fldpi
andb
inc
fs
lds
push
aam
rcrb
mov
rcrl
data16
xchg
pop
mov
sahf
push
iret
fwait
test
cmp
movsl
mov
les
insb
divb
mov
pop
add
in
stos
std
imul
imul
faddl
loope
bound
push
std
ret
xlat
cs
push
lcall
push
fcomps
jg
pop
or
pop
sbb
lods
jecxz
jmp
out
test
rorl
or
dec
out
adc
xchg
pop
mov
repz
xor
push
push
stc
or
xor
push
int3
sub
lods
mov
fdivrp
or
mov
push
dec
push
xorl
xor
popa
and
xor
add
push
lret
xchg
mov
lret
test
int3
fldlg2
pop
cld
mov
out
test
cltd
shrb
adc
lock
lock
daa
or
aam
xchg
sub
enter
scas
aaa
loopne
and
iret
cmp
push
push
dec
and
test
call
and
jmp
cmc
filds
push
jno
ljmp
cmpsl
les
fidivrs
jnp
call
or
pusha
clc
shrb
bnd
dec
or
jg
shrb
std
cmp
cli
addl
inc
push
cmp
cmp
push
mov
inc
and
or
fdivp
pop
sbb
and
push
push
adc
jo
mov
leave
outsl
daa
rorb
lahf
std
mov
adc
stos
lods
push
and
push
adc
add
scas
pusha
js
push
sub
fidivs
sbb
and
push
stc
lods
mov
fildl
pop
xor
sub
dec
cmpl
sbb
jo
push
out
pushf
cmpl
inc
jae
jae
cmp
xchg
fnstsw
ljmp
sar
xchg
jge
lcall
dec
ljmp
aad
cmp
pop
cmc
sahf
jecxz
outsb
fistps
aad
ret
rcl
mov
outsl
adcb
lahf
mov
jbe
fisubrl
imul
sbb
aas
pop
sub
jp
xchg
ljmp
insl
aam
push
xlat
outsb
jbe
or
push
push
push
dec
cmpsb
imul
push
ja
mov
mov
push
mov
inc
fnstcw
lods
mov
outsb
mov
push
fmul
dec
push
outsl
subb
pop
rcr
adc
test
cs
mov
xor
lret
rclb
in
push
pop
push
xor
fs
in
push
push
das
test
pop
adc
jbe
sahf
lahf
mov
push
ljmp
cmp
xchg
cmc
mov
sbb
cmp
dec
loope
pop
or
test
mov
adc
lahf
scas
sub
adc
mov
sbbb
rcrl
repz
iret
ds
mov
lds
fcmovnbe
insl
int
incb
lods
lahf
cmc
ja
mov
subl
loop
out
cwtl
mov
fnsave
jnp
roll
pop
movsl
js
dec
and
push
cmp
int3
aam
std
imul
aad
leave
sbb
sbb
jo
cmpsl
imul
andb
mov
pop
jb
jecxz
and
xor
jg
cmp
outsb
aam
cmp
xchg
faddp
pop
lahf
lock
sub
test
xchg
pop
lock
add
out
repnz
repz
jl
dec
jns
jle
jl
push
push
pop
adc
push
das
ja
pop
add
push
movsb
push
bound
fs
shlb
faddl
fs
jne
pushf
fs
arpl
mov
in
test
ror
loop
xor
stc
lahf
mov
add
mov
pop
fcom
cmp
and
pop
insb
sub
sbb
dec
mov
sbb
sbb
inc
cmp
into
imul
test
jb
push
int3
in
test
xchg
in
loope
fldt
jns
mov
xor
or
sahf
jno
cmp
jae
adc
stc
push
sub
xlat
jnp
mov
insb
pop
cs
icebp
insb
add
xchg
xor
mov
sbb
cs
mov
inc
or
ja
pop
cli
test
xchg
dec
mov
dec
mov
mov
sub
cmpsb
mov
jl
sub
lret
xlat
ja
fldenv
xchg
mov
push
mov
mov
ret
out
rol
adc
inc
mov
test
mov
push
bound
pop
fwait
lods
fdivrs
and
and
mov
xchg
push
popa
mov
out
sbbb
aas
int
out
xor
adc
test
or
imul
mov
fs
fidivs
and
cmp
in
cld
aam
xchg
xchg
ss
shrl
xchg
data16
dec
movsl
dec
imul
aas
inc
dec
mov
lahf
idivl
icebp
add
iret
ds
lahf
out
inc
popa
add
xchg
fs
pop
fsubr
test
les
inc
mov
or
das
popf
mov
mov
out
stos
pop
dec
insl
sbb
jge
enter
in
xchg
shlb
dec
pop
sub
mov
ret
xor
fwait
sbb
cmpsb
cmp
dec
inc
cmp
or
mov
lcall
and
pop
xor
je
pop
inc
cmp
mov
push
lods
es
jp
fldenv
jo
add
jg
mov
and
jb
xchg
sub
fistpll
xchg
and
sub
push
cltd
add
lret
mov
pop
jmp
lods
xor
subl
push
inc
and
mov
out
cmpsl
fdivl
cmp
pop
in
cli
repnz
xor
call
mov
addr16
xchg
ljmp
jbe
scas
xor
out
xchg
clc
cwtl
test
fidivl
adc
mov
fldenv
lds
out
gs
push
cmc
mov
jle
stos
scas
shl
out
dec
gs
lret
hlt
fwait
xor
sub
imul
xor
add
fs
in
jbe
xchg
pop
pop
sahf
dec
test
std
lods
xchg
das
jns
pusha
repz
cmc
lock
and
ds
sbb
stos
ss
jp
inc
and
pop
xor
subb
movsb
jecxz
add
mov
mov
jl
int3
jns
jbe
fbstp
pushf
mov
insb
add
lret
movsb
inc
scas
jae
or
mov
pop
push
in
mov
in
ret
sub
imul
xchg
mov
iret
xchg
mov
lahf
or
jecxz
inc
sbb
sbb
adc
xor
push
in
cmpsb
jb
shrl
fmul
push
insb
jl
push
stos
daa
mov
imulb
sbb
dec
cmp
dec
jecxz
mov
addr16
loopne
xor
rcrl
cmpsl
test
cs
cmpsl
cmp
add
inc
mov
sub
aas
scas
xchg
call
sbb
jp
loopne
les
addr16
fistps
inc
pop
shr
out
and
out
and
in
xor
inc
mull
push
or
push
insl
mov
mov
and
jns
push
addr16
aad
mov
inc
xor
cli
cmpsb
out
scas
push
out
test
dec
xchg
inc
je
gs
jne
inc
mov
mov
stos
lods
sar
mov
popa
sbb
jno
es
fwait
push
mov
test
orl
cmp
fildl
hlt
inc
adc
int3
pop
out
daa
ljmp
jecxz
imul
lods
pop
dec
xlat
mov
imul
dec
add
imul
movups
sub
mov
add
les
add
pop
or
ret
jmp
mov
jae
rcrb
fisubs
sub
inc
shrb
inc
subl
pop
push
jns
arpl
jp
ret
jecxz
enter
sub
jne
sbbb
and
fcomps
in
adc
inc
aaa
push
in
test
adc
inc
lret
jl
imul
imul
pusha
test
test
sbb
add
adc
scas
inc
push
cs
test
aas
mov
sbb
push
jmp
and
mov
xor
outsl
fs
into
adc
fwait
out
sbbb
or
sub
sbb
dec
fistl
inc
addr16
jge
sbb
std
and
out
movsb
ficoms
test
scas
pop
sbb
push
in
in
push
mov
xchg
outsl
orl
shlb
adc
adc
aam
les
js
mov
mov
das
pop
pop
es
ret
cmpsb
cmp
addr16
cmc
cmp
aas
jno
jo
dec
mov
push
jg
shrb
loope
add
mov
add
sub
lods
mov
or
push
mov
shlb
mov
lcall
lahf
arpl
jo
push
sub
mov
nop
sbb
flds
push
scas
dec
xor
xor
fisttpll
adc
sbb
arpl
mov
adc
mov
push
pusha
cmp
jl
sub
sbb
sub
arpl
movsl
outsl
jnp
dec
dec
loopne
nop
jns
push
mov
enter
aad
iret
mov
ja
jno
sbb
lret
add
loope
imul
pushf
cmc
xchg
mov
lock
ret
pop
out
jbe
cmp
mov
bound
jbe
dec
sti
xchg
xor
mov
sbb
mov
xchg
insl
out
enter
jmp
shlb
scas
mov
push
sbb
pop
sub
push
sar
or
mov
or
iret
xbegin
push
shrl
jle
push
fiadds
dec
sti
call
pop
cmc
sbb
adc
add
xor
sbbl
lods
loope
sbb
andb
xchg
jecxz
adcb
sti
xchg
lds
pushf
or
stc
out
repz
jmp
out
adc
xorl
fildl
mov
out
jg
loopne
xor
jle
cmp
jbe
and
pop
mov
xchg
insl
data16
inc
test
pusha
xlat
mov
lcall
pop
sti
jo
insb
leave
aaa
cmpsb
push
jbe
sub
dec
outsl
add
stos
or
stc
xor
sub
xchg
fldenv
or
xor
xchg
sub
sbb
mov
daa
nop
stc
jb
icebp
ds
sbb
ret
mov
ret
in
cwtl
movsl
dec
and
sub
lret
adc
xchg
inc
and
cmc
or
je
inc
cmpsl
in
leave
push
sbb
out
pop
lret
fbstp
or
sub
jge
jae
jl
pop
or
inc
sbb
xchg
mulb
cmp
push
out
in
xchg
jbe
movsl
ret
idivb
dec
hlt
sbb
cmc
popf
push
adc
loope
adc
jg
hlt
in
sub
rcll
mov
dec
rol
fldt
mov
mov
stos
jl
rcll
push
insl
insl
mov
outsl
ja,pn
gs
push
and
sar
mov
and
adc
pop
adc
mov
clc
mov
sbb
popa
fisubrl
or
into
iret
cmc
sbb
inc
pop
mov
pop
mov
sbb
cmp
shrl
pop
add
lea
dec
in
dec
inc
ret
jne
fwait
xor
pop
in
xchg
ja
jecxz
cmc
arpl
sbb
mov
sub
mov
sbb
and
jmp
sbb
icebp
cwtl
popa
and
add
mov
mov
mov
mov
pop
xchg
jecxz
scas
sub
dec
pop
jae
lods
test
pushf
mov
inc
jg
ja
loopne
lds
sti
cli
mov
mov
push
clc
push
popf
mov
fwait
mov
pushf
mov
in
addl
fmul
bound
stc
lods
fsubrs
fldl
stc
add
fisubrl
xchg
pop
cmpsb
ds
shrb
push
inc
shr
push
fmulp
xchg
or
bnd
mov
push
call
or
jno
push
dec
lahf
or
jge
movsb
in
lods
inc
nop
int
jge
jno
fisubs
enter
mov
xor
cmp
rol
shr
mov
pop
jae
mov
rcrb
inc
ret
stos
loopne
dec
mov
fcompl
sbb
xchg
push
sahf
enter
jge
loope
outsb
cmp
cmc
or
stos
mov
repnz
adc
test
mov
in
mov
mov
out
loope
stos
enter
movsl
ds
mov
mov
jmp
fwait
jb
push
int3
cmp
pop
sbb
ret
mov
and
cmp
xchg
inc
push
dec
cmc
nop
cmp
hlt
dec
push
jno
out
add
imul
xor
and
adc
pop
rcrb
cmp
mov
push
cltd
or
out
and
jbe
fstl
push
cmp
dec
sub
scas
ds
imul
push
movsl
cmp
push
and
mov
ss
push
inc
aam
jmp
sbbl
mov
das
stos
cltd
xchg
mov
popa
cmovs
shlb
cs
cld
pushf
adc
cmp
mov
loopne
dec
xlat
jnp
pop
and
dec
iret
imul
inc
popa
jmp
and
testb
scas
popa
jns
mov
mov
stos
jl
pop
pop
int3
shlb
lock
insl
int3
pop
xchg
sbb
mov
jnp
pop
movl
xorb
adcb
adc
or
je
cmp
leave
pushf
mov
movsb
mov
ret
xlat
or
mov
xor
pop
or
mov
insb
pop
jo
incl
cltd
or
pop
ror
xor
fadds
cmp
stc
xor
mov
aam
scas
nop
push
fsubrs
xor
dec
movsb
jp
outsb
rorl
outsl
push
and
nop
ffree
arpl
mov
out
mov
mov
or
es
pop
loope
sub
std
xor
xor
or
push
sti
mov
fsubrs
cltd
cmpsb
inc
lret
scas
mov
rolb
icebp
push
mov
mul
ret
stos
cmpw
push
sub
lret
aas
add
inc
dec
cwtl
bound
mov
xor
int3
aaa
fimull
mov
mov
mov
std
jl
addr16
stos
sbb
or
push
xor
mov
dec
jmp
jl
add
xchg
ja
jnp
sub
sub
sbb
xchg
scas
mov
add
cmpsb
add
add
in
in
sbb
scas
push
or
adc
jbe
iret
mov
pop
test
icebp
ljmp
imul
adc
loop
lock
cmp
inc
jne
fcmove
ds
cld
cld
hlt
inc
aam
adc
test
fistl
mov
inc
test
adc
ret
lods
ljmp
xchg
popa
popf
or
fisttpl
jo
es
outsl
push
lds
pop
je
in
pop
outsb
sub
lock
lret
cmp
xchg
mov
dec
ds
push
mov
ret
lret
lods
or
xchg
jnp
jmp
cltd
out
dec
push
icebp
push
xor
mov
sub
fildl
roll
insb
rorl
rcl
mov
or
or
stos
xor
pop
test
push
or
add
pop
push
sti
jbe
repnz
sbb
xchg
fs
cmpsb
shl
pop
pop
cmc
sub
movsl
ss
dec
loope
test
nop
jnp
out
stos
in
pop
popa
icebp
adc
gs
daa
and
push
out
addr16
xor
pop
enter
cmp
xchg
xlat
or
add
sbb
adc
ljmp
or
inc
xlat
in
cmp
scas
ficomps
mov
sarl
sbb
lret
sub
pushf
sub
mov
std
or
jno
adc
cmp
push
xor
sub
cmp
mov
mov
mov
sbb
inc
pushf
mov
cmpsb
inc
add
addr16
lods
lcall
aaa
xor
push
mov
and
clc
gs
or
in
jl
sub
push
out
mov
sub
add
pop
gs
jo
push
std
stc
xchg
ljmp
iret
cmpsl
scas
popa
loope
xor
cmpb
or
bound
test
not
mov
inc
clc
sbb
xor
pop
mov
sarb
xchg
test
pop
out
sub
mov
cmpsb
stos
cli
pop
mulb
in
jnp
dec
jge
jp
and
cs
aad
into
cmp
ret
push
pop
pop
stc
aam
mov
pop
dec
js
jge
sub
inc
pop
fidivrs
adc
cmc
mov
inc
cmc
mov
pop
add
insl
aam
bound
jge
std
mov
adc
iret
movl
movsb
cwtl
daa
push
sahf
mov
sbb
fwait
sub
ss
sub
movsl
pop
adc
and
movsb
aaa
mov
add
add
fimull
std
loop
fs
test
enter
frstor
push
mov
addl
mov
lcall
mov
adc
xchg
sub
inc
lcall
pusha
div
mov
jle
jo
repnz
dec
dec
ja
pop
out
loop
lret
shrl
sub
orl
pop
lahf
inc
ss
int
push
out
jne
pop
ljmp
lock
out
and
push
pop
insb
sub
mov
ret
push
mov
push
out
dec
mov
add
lds
repnz
stos
and
cmpsb
mov
daa
pop
outsb
pop
lahf
adc
mov
outsl
stos
int
pop
nop
jno
mov
dec
and
pop
xchg
fwait
movsl
and
je
movsb
movsl
inc
lods
inc
aaa
fs
fcoms
mov
mov
in
add
cmp
sbb
jl
dec
fsts
pop
and
mov
cs
lods
ret
lea
insb
cli
push
sahf
jg
fs
or
mov
inc
jnp
pop
xor
sbb
sub
fcmovnb
xchg
pop
mov
dec
aas
dec
jp
aad
repnz
ds
ja
pop
pop
scas
cmp
jp
ret
push
mov
push
andl
push
or
fs
mov
push
inc
push
xor
dec
lods
push
push
test
mov
push
xchg
or
pop
movsb
xor
pop
jge
in
sti
bound
adc
jb
xlat
add
xlat
lret
ss
mov
or
adc
push
xchg
inc
push
lahf
je
jl
mov
mov
or
xchg
mov
mov
out
out
inc
es
jp
push
ror
sub
nop
mov
subb
or
test
or
cli
mov
sahf
jp
sbb
jecxz
sub
sbb
adc
xchg
movsl
pop
ja
add
cltd
ljmp
mov
jge
add
call
add
scas
insb
iret
mov
fiaddl
call
subb
data16
mov
sahf
pop
lret
fadds
cmp
push
gs
not
outsl
es
js
mov
stc
mov
into
addl
cmp
mov
in
mov
mov
push
push
sbb
fcomi
add
cwtl
lods
loop
cli
sbbl
jle
test
sub
add
dec
pop
out
xchg
pop
and
inc
mov
push
inc
mov
lods
adc
mov
push
aas
xor
pop
loope
or
mov
pop
mov
pop
jecxz
or
push
fnstcw
jne
adc
das
dec
xor
dec
pop
popa
das
pop
mov
mov
repnz
xor
mov
mov
push
add
mov
shll
jbe
cmc
mov
mov
insl
cwtl
enter
pop
cmp
mov
subb
sbb
repnz
and
mov
mov
xor
iret
bound
push
ljmp
nop
inc
fadds
es
sahf
fisubs
sahf
and
cs
rorl
shrb
imul
ret
in
adc
imul
ss
push
add
xor
scas
xchg
pop
cwtl
sub
push
jae
mov
mov
stos
or
or
scas
rorb
ret
xlat
loope
xor
mov
arpl
ljmp
mov
out
adc
pop
fcompl
stos
xchg
xor
and
insl
xchg
mov
pushf
xchg
out
sbb
mov
pop
jo
mov
bound
cmp
inc
jo
andb
out
xchg
push
and
cmp
push
cltd
add
jbe
out
scas
pop
xor
sub
lcall
push
mov
scas
es
ret
call
xchg
cmp
movsl
push
pop
or
imul
call
scas
pop
jb
cmp
sub
pop
xor
icebp
or
cli
jl
xchg
sub
cli
xor
and
inc
adc
mov
divl
push
int3
xchg
lods
hlt
mov
xchg
in
lods
inc
inc
in
xor
gs
movsb
test
or
mov
fstpl
mov
mov
cmp
inc
and
mov
stc
fiaddl
out
jb
jo
push
cmp
aaa
and
loop
xchg
mov
insl
adc
clc
std
test
push
push
inc
xor
inc
xor
inc
xor
and
jg
fcmovne
mov
aam
lods
or
xor
into
subb
xchg
sub
jnp
or
popa
xlat
outsb
pusha
test
lcall
lret
das
inc
cmpsl
mov
dec
fadd
rcr
stc
shlb
sbb
jp
cmp
cmp
add
stos
push
adc
mov
push
add
xor
ljmpw
or
dec
fisubl
inc
or
test
je
or
stos
jge
test
pop
lods
fmull
insl
add
xchg
sub
mov
mov
sahf
outsl
push
call
test
outsl
push
jo
jmp
and
mov
mov
mov
mov
pause
mov
lods
fidivs
sub
cld
xchg
jecxz
inc
pop
sbb
shrl
test
repz
daa
push
pop
stos
or
push
shlb
push
xor
rclb
add
notb
xor
inc
adc
inc
gs
ficoml
mov
mov
jbe
mov
xor
mov
ljmp
lds
add
lds
jbe
push
adc
fdivl
div
pop
iret
iret
cli
lea
sbb
jg
push
in
inc
lahf
mov
jp
ljmp
xchg
and
xchg
jb
in
xor
push
mov
xchg
lret
xchg
ret
leave
lock
ljmp
add
into
pop
pop
scas
xchg
mov
pop
cwtl
cmp
dec
rcrl
dec
jmp
inc
or
dec
int
add
stos
xchg
jbe
xor
cld
sub
lcall
dec
int
jle
jo
add
sub
add
movsl
orl
ja
sbb
outsl
jmp
pop
xchg
jbe
adc
inc
lods
pop
or
ret
stc
outsl
and
adc
add
jns
push
lahf
ficompl
push
mov
bnd
jecxz
jo
ja
stos
jbe
dec
rol
shll
repz
icebp
fdivr
or
sbb
and
add
mov
jge
mov
inc
fsubrl
test
in
mov
mov
xchg
or
jmp
lods
mov
jb
and
faddl
leave
sbb
stos
shl
push
sarb
xchg
xor
push
fnstcw
lret
mov
vmovd
xlat
mov
iret
jne
idivl
in
lods
xorl
loope
fistps
add
jnp
lcall
pop
cmpsb
outsb
add
jecxz
mov
fwait
mov
mov
repz
orl
mov
sahf
jbe
sahf
mov
iret
xchg
pop
je
or
in
mov
fidivl
cmp
push
mov
cmp
in
jle
push
push
xsha1
cmpsb
iret
pop
movsl
cli
adc
sub
sbb
rcl
or
out
sbb
cld
aaa
mov
mov
jl
es
add
push
sti
dec
mov
dec
add
xchg
xor
xchg
pop
cwtl
icebp
mov
fbstp
jle
subb
xchg
mov
call
fxtract
pusha
sub
sub
or
mov
sub
rorb
cmp
mov
mov
inc
inc
fistpll
mov
pop
inc
fcoms
pop
ss
inc
xor
xchg
mov
cmp
fldenv
imul
dec
cli
or
pusha
pop
mov
and
insl
add
jge
bound
fnsave
dec
lcall
imul
mov
jle
sub
adc
test
sbb
adc
mov
ret
rclb
movl
mov
inc
clc
inc
fsubrs
gs
jb
fadd
call
add
adc
adcl
add
mov
push
fwait
xchg
dec
dec
sbb
lret
cli
or
insl
xor
xchg
in
std
lret
push
mov
add
fidivs
insb
movsl
sub
imul
sbb
int
adcl
popf
lea
test
clc
in
es
pusha
fstpt
push
pop
je
cmp
imul
dec
pushf
dec
rorl
fistps
idivb
jl
dec
dec
sbb
je
shlb
hlt
pop
mov
cmp
rol
jge
xchg
push
aas
repnz
add
out
mov
cmpsl
cs
gs
jns
lock
dec
std
mov
pop
dec
imul
out
movsb
dec
arpl
mov
nop
es
arpl
lahf
xchg
and
ret
fsubl
lahf
mov
sarb
pop
mov
adcl
pop
sahf
cmp
fcmovnbe
fnsave
in
fistpll
orb
cwtl
in
mov
jns
je
nop
cltd
call
pop
into
mov
lock
adc
sub
sub
inc
es
fbstp
pushf
xor
mov
sbb
or
arpl
adc
jnp
jg
lock
dec
mov
dec
jge
lcall
out
arpl
mov
pop
in
loop
dec
pop
mov
rorl
in
sbb
movsl
daa
lcall
xchg
sub
punpckldq
data16
jge
notb
cld
lock
pop
sbb
popa
jmp
adc
in
and
mov
xor
or
sub
mov
dec
fisubrl
adcb
jnp
lock
sub
xchg
lret
sbb
inc
sbb
or
sub
lahf
leave
and
movsb
pusha
jle
jnp
or
in
mov
sbb
lods
push
pop
in
dec
mov
dec
call
mov
mov
sahf
pop
movsb
repnz
or
push
xchg
cmp
adc
lret
sbb
cld
mov
ds
lret
repz
insl
or
mov
mov
mov
ffree
outsl
push
mov
inc
dec
cmp
xor
gs
xor
mov
in
aam
test
lret
cmp
xchg
outsb
fldl
and
push
cmc
les
inc
stos
push
data16
aaa
out
inc
out
adc
in
push
push
test
je
das
sbb
inc
mov
push
jmp
mov
lcall
and
dec
lahf
mov
fsts
std
adc
imul
cwtl
mov
mov
pop
dec
pushf
outsl
pop
cltd
xor
push
mov
dec
in
repnz
popf
xor
or
jg
clc
mov
stos
jns
pop
imul
and
cld
test
mov
inc
push
sahf
sarw
xor
aas
push
cmp
pop
movsb
inc
pop
popl
push
fwait
adc
sbb
inc
mov
sbb
push
lea
fsubr
cmp
es
push
xor
jmp
sahf
sub
rorb
shl
adc
cmp
shrl
rcrb
or
or
dec
pop
das
icebp
iret
out
pop
xor
aam
cmc
movsb
daa
loop
inc
adc
push
scas
icebp
or
movsb
fsubs
push
mov
ss
out
aas
dec
cld
lods
sub
ja
mov
outsb
cwtl
or
dec
std
mov
pop
scas
add
movsl
or
adc
bnd
and
in
push
lret
loopne
pop
xor
stc
outsb
ss
sahf
xor
jb
mov
jns
jge
add
push
ja
add
pop
adc
push
push
mov
mov
adc
loope
and
jo
mov
int
pop
fldenv
pop
mov
xor
in
lret
push
push
inc
dec
addr16
out
mov
push
jne
xor
repnz
pusha
jge
in
jmp
testb
or
imul
sub
cmpl
cmp
ljmp
adcl
and
in
adc
push
je
loope
stc
cmp
inc
in
out
jecxz
and
mov
mov
add
es
es
add
cmp
sub
pop
pop
lcall
test
add
test
mov
pop
rcrb
repz
mov
subb
mov
sub
cmp
xor
pop
scas
test
mov
jno
loope
push
daa
add
lods
icebp
cmp
int
ss
cmp
cmp
inc
cmc
into
xlat
outsb
rolb
int
mov
dec
in
sti
pop
sbb
dec
mov
ret
in
push
lea
sub
xlat
jno
or
jl
and
adc
add
and
loop
mov
dec
lods
pop
neg
jo
bound
cmpsl
out
dec
fistps
mov
adc
push
xor
mov
xor
xchg
jb
fbstp
enter
inc
movsl
popf
mov
cmp
fwait
les
cmp
cli
cltd
aaa
lcall
mov
mov
iret
cmp
sbb
loop
outsb
add
sar
xchg
mov
ljmp
sub
mov
xchg
mov
iret
data16
adc
test
xchg
xchg
add
les
pop
push
les
sahf
scas
xor
lds
lret
loop
bound
aas
movsb
pop
lods
mov
test
pop
xchg
push
cmp
pop
jbe
popf
into
lahf
imul
les
shll
repz
inc
fdivl
adc
imul
adc
iret
inc
mul
call
lret
fsub
jb
mov
outsl
ret
pop
testb
lods
jle
in
dec
rcrb
dec
imul
sbb
sbb
or
mov
leave
push
aam
mov
sub
jle
inc
ret
jmp
pop
testb
pop
loopne
inc
ljmp
adc
mov
xor
inc
andb
mov
loop
mov
dec
popa
jb
push
jl
xchg
xor
adc
sbb
jns
push
mov
and
or
jecxz
fisubs
pop
lods
shll
nop
inc
loop
je
sbb
lods
cli
jecxz
xchg
cltd
pop
mov
out
xor
mov
and
jb
bnd
addb
cld
mov
lcall
dec
adcl
jo
sahf
pop
popa
subb
xor
rcrl
xchg
jg
xchg
fiaddl
js
cmc
jp
xchg
mov
add
push
push
and
and
imul
jbe
dec
aas
or
sub
jg
pop
sub
dec
es
cli
scas
mov
pop
cmp
out
sti
jo
aad
xchg
sbb
mov
mov
xor
test
sbb
dec
in
mov
fcompl
lret
and
xchg
jb
lods
rcrb
cmp
movsl
pop
leave
xlat
mov
push
insb
lahf
mov
js
xor
sbb
or
vmovhps
leave
adc
imul
bound
incl
cli
xchg
xchg
xor
adc
nop
lods
push
cmp
stc
dec
jnp
sahf
adc
inc
aaa
das
sbb
imul
mov
scas
jo
mov
dec
icebp
nop
fsubrl
push
pop
push
jmp
add
inc
mov
add
or
xor
xchg
andl
xchg
les
or
mov
fmull
push
mov
and
lds
ret
and
testb
push
add
add
ds
ficomps
adc
aaa
ja
enter
or
inc
sbb
push
mov
gs
jg
mov
push
sbb
push
mov
pop
loopne
mov
mov
rorb
add
lcall
dec
leave
push
loop
pop
test
lret
sbb
inc
fistpl
into
daa
lcall
cltd
push
and
aad
push
cmpsl
xchg
jne
adc
inc
mov
je
inc
sub
ret
fsubs
les
push
push
stos
mov
movsb
in
cmpsb
mov
insl
call
aas
hlt
mov
aad
xor
mov
jl
test
call
sets
mov
rcl
push
subb
mov
sub
icebp
data16
xor
jne
inc
inc
inc
pop
dec
lret
ret
in
aad
sub
xlat
enter
inc
ljmp
xor
jne
fnstsw
add
jg
add
les
xor
jp
or
sub
mov
push
dec
add
or
or
addl
ror
out
test
add
repz
push
jae
je
call
in
pop
rcr
sbb
mov
jnp
into
negb
push
cmp
lret
js
mov
cmp
push
pusha
inc
inc
add
dec
push
in
dec
inc
cmovge
lods
fists
adc
stos
mov
divl
outsb
movsl
popa
mov
outsb
dec
lea
jl
pop
shll
dec
dec
fdivrs
cmp
out
xchg
adc
hlt
mov
adc
or
pop
inc
mov
imul
inc
mov
xchg
push
pop
mov
into
mov
lcall
testb
and
nop
pop
pop
popf
push
popf
sbb
mov
xor
xorb
clc
jbe
and
es
or
dec
jb
jae
orb
clc
xchg
rcll
out
jns
xlat
in
mov
pop
jle
dec
and
jl
mov
cmp
inc
daa
sbb
push
jns
inc
cs
push
adc
insl
or
xchg
orl
ret
sbb
cmpsl
pop
imul
pusha
pop
ss
sub
adcb
jmp
xor
inc
lea
test
sub
jge
loop
mov
inc
sbb
js
jl
adc
pop
fwait
dec
xor
jns
movsl
dec
loopne
dec
fnstsw
lahf
fildll
sti
fldt
xchg
jno
out
mov
and
sbb
sbb
mov
ret
jmp
pop
xchg
add
xor
andb
mul
subl
xor
ss
roll
xor
adc
sub
adc
dec
arpl
nop
repnz
add
jp
jne
pop
das
or
popf
mov
ljmp
dec
cmp
fcomps
adc
dec
leave
dec
xor
stos
sarb
incl
sarb
inc
inc
bound
ljmp
mov
gs
sub
lds
iret
add
xor
das
ret
or
jecxz
add
mov
add
and
imul
jne
mov
test
cs
lds
iret
lods
inc
hlt
subb
popf
stc
nop
outsl
ret
fildll
mov
jl
cmp
cmp
sbb
sbb
lods
sarl
xor
imul
mov
bound
out
or
js
add
pusha
jb
fs
out
sahf
adc
fs
orl
lea
negl
int
outsl
cmp
or
inc
cwtl
lods
cmp
ret
iret
cmp
bound
push
ret
addr16
mov
xchg
cwtl
scas
inc
xchg
mov
test
scas
pop
pop
ljmp
jno
addl
or
inc
push
mov
or
dec
icebp
adc
cltd
lock
xchg
popf
xor
or
pop
cmp
push
loop
xor
rcr
push
or
and
inc
jle
in
lock
xchg
mov
out
shrl
adc
or
lret
adc
daa
pop
gs
and
aaa
xor
movsb
pop
pop
stos
fimuls
rclb
lret
and
repz
ljmp
testb
es
inc
xchg
sti
and
fwait
add
lods
and
mov
sub
adc
insl
test
ret
and
cltd
out
test
sbb
and
gs
ret
sub
popf
jle
shr
add
popf
inc
loop
lods
mov
dec
lahf
test
xchg
shll
vpsubq
stos
pop
adc
int
push
sub
out
push
mov
insb
add
add
lods
push
or
push
dec
xchg
add
mov
push
aas
sbbl
jbe
repz
jecxz
das
adc
xor
andb
jg
or
pop
pop
jg
pusha
xor
sub
push
cwtl
outsl
nop
cld
lcall
in
jbe
out
bound
cltd
push
sub
ja
fsubl
sbb
xor
fidivs
xor
jecxz
sbb
inc
sbb
insl
or
xchg
pushf
adc
mov
push
sbb
aad
xorl
dec
and
fsubrl
xorb
or
in
fwait
popa
xor
mov
push
frstor
push
or
nop
pop
lds
jnp
mov
jg
and
jbe
clc
cmpsl
jg
and
jmp
pop
fistps
xchg
sub
jl
pop
fidivl
mov
mov
pop
out
dec
aas
sti
aam
movsb
and
aad
mov
sub
jmp
pop
lret
out
fstpt
out
cmp
notb
jge
int3
stc
cld
push
sub
loope
sub
fnstcw
mov
nop
pop
testl
outsb
aam
mull
jbe
jmp
add
out
rclb
andb
mov
adcl
dec
jecxz
enter
clc
push
xlat
aas
mov
das
std
lret
pop
inc
int
fbstp
xchg
test
scas
fcmovne
pop
pop
sub
sub
popf
xor
dec
xorl
mov
in
mov
insl
aaa
movl
push
int3
jge
pop
psrad
cmpsb
idivl
icebp
shrb
popa
jle
push
divb
cmp
adc
int3
inc
xchg
dec
cmp
rcrl
mov
jmp
pop
imul
mov
or
pop
sub
jl
shll
lds
jmp
clc
cmp
push
fcoml
dec
in
in
mov
xor
rorb
call
inc
in
jbe
lret
dec
dec
fdivrl
aam
lds
dec
adc
mov
int3
jae
and
or
cwtl
pop
mov
les
das
pop
sbb
repz
iret
aad
cmpsb
mov
sub
cltd
movsb
insl
dec
stos
hlt
jle
sbb
nop
and
dec
out
stos
cmp
mov
loopne
pop
or
pushf
scas
mov
xchg
rcll
std
ror
mov
sti
mov
sahf
ficomps
inc
punpckhwd
pop
js
mov
dec
fldl
cmpsl
inc
shrl
cld
enter
or
pushl
shl
adc
push
sahf
push
xor
push
mov
and
fidivs
mov
jbe
imul
mov
sub
out
and
cmp
pusha
rcr
xchg
cmp
mov
xchg
dec
les
jle
in
add
data16
out
lds
xchg
js
sbb
int
or
cmp
mov
xor
mov
cmp
mov
repnz
jmp
in
test
fcmovu
fstl
or
sbb
aas
cli
repnz
jg
std
push
lret
daa
repnz
sti
stos
int3
div
mov
pop
mov
movsl
or
stos
ja
sahf
pop
adc
outsl
inc
and
add
addr16
mov
jle
sbb
loopne
dec
in
cltd
adc
jnp
push
xchg
imul
pop
pslld
and
iret
rep
mov
scas
add
andb
add
inc
in
test
lock
inc
aad
mov
iret
sub
xor
adc
pop
or
dec
mov
icebp
fs
jo
js
scas
out
loope
subl
add
mov
mov
cwtl
mov
test
into
loop
jae
call
jno
pop
lock
push
aam
jnp
push
lods
push
pop
in
pop
out
xchg
jmp
cwtl
xchg
mov
cmpsl
aaa
jecxz
push
mov
mov
xor
cltd
hlt
pop
push
add
repz
and
or
mov
push
dec
or
shlb
xor
cmpsb
gs
enter
mov
scas
or
adc
sbb
cltd
adc
enter
pop
add
mov
dec
popf
js
sbb
xchg
insb
sarb
sbb
push
into
cmp
sub
gs
fsubs
rcl
scas
add
and
push
jb
push
mov
mov
in
ds
mov
and
lret
dec
pusha
mov
fcmovbe
fcmovnb
leave
nop
stc
mov
out
int3
cmp
adc
mov
out
mov
insl
ljmp
pushw
sti
xor
and
idivb
aas
aas
iret
jecxz
adc
shlb
pop
jg
cmpsl
pop
repnz
inc
xchg
xor
cmpsb
push
sbb
or
inc
cmc
mov
setp
adc
out
xor
insl
xchg
movsl
cmp
int
or
mov
push
push
mov
call
jge
dec
mov
xchg
insb
in
inc
jns
into
mov
dec
dec
loop
cmp
pop
in
rcll
mov
adc
bound
xchg
leave
inc
ljmp
sbbb
jb
pop
test
lea
in
stc
or
and
rcr
mov
fbstp
arpl
pop
add
or
rolb
inc
jo,pt
mov
cmp
and
push
dec
mov
ss
cwtl
cmpsl
mov
adcl
fiadds
sub
push
into
gs
stc
adc
jbe
out
cld
inc
je
push
je
and
imul
xor
imul
sbbl
std
mov
loope
cld
pop
push
lret
pushf
push
lock
mov
std
jo
popf
fnstenv
add
xchg
mov
in
jne
pop
cmc
test
fnsave
adc
call
lock
fldl2t
testl
cmp
into
adc
xor
and
and
iret
out
adc
jge
xchg
xchg
jmp
dec
test
hlt
hlt
dec
cmp
repnz
outsl
faddp
fmul
shrb
sbb
and
pop
lods
sbb
jmp
or
push
mov
leave
jnp
mov
or
jno
push
add
popf
inc
add
test
or
mov
mov
or
or
sbb
sub
insb
xchg
jle
aad
jno
add
lods
sbb
xorl
sbb
push
test
loopne
movsb
mov
sarl
add
lods
popa
inc
dec
cmp
cmpsb
fs
push
push
into
or
add
sbb
ja
push
out
bound
or
mov
pusha
repz
cmp
dec
push
mov
mov
xchg
fbstp
xorl
lcall
mov
ret
push
cld
pop
loop
out
adc
or
mov
scas
outsb
adc
xchg
mov
pop
rcl
in
aas
xchg
repz
mov
pop
pusha
dec
adc
dec
pop
mov
lret
imul
jg
inc
addr16
pop
sub
pusha
outsl
nop
sub
lock
push
or
hlt
mov
jl
dec
aad
roll
fnstenv
adc
iret
test
inc
std
dec
inc
dec
adc
notl
pop
xchg
or
mov
cli
push
cltd
fsub
cmp
insl
js
add
pop
mov
push
int3
pushf
add
jo
pop
lea
cli
hlt
mov
xchg
ja
xor
cld
das
leave
pop
sbb
jg
mov
mov
jmp
test
push
loop
mov
xor
xor
jmp
jno
jp
adc
mov
lret
negl
jmp
rol
lds
cltd
fcoms
cmp
rcr
fildl
xor
std
mov
mov
adc
inc
in
push
jecxz
inc
jno
mov
lods
pop
mov
lea
mov
in
inc
lds
push
sub
dec
pop
sbb
jno
dec
xchg
push
in
push
sahf
pop
inc
lods
and
cmp
dec
stos
aas
jmp
lods
mov
adc
add
pusha
inc
cmp
cmp
in
pop
pop
jno
add
cltd
mov
fdivl
insl
test
aam
fbstp
sbb
leave
mov
insl
nop
test
movsb
sbb
ja
ss
es
enter
xor
push
pushf
pop
jb
ret
and
call
lret
shrl
and
aam
push
pop
xchg
sbb
fwait
or
sbb
pop
out
sbb
xchg
add
mov
or
cltd
inc
jp
and
xchg
sbb
int3
fdivrs
dec
pop
stc
mov
bound
pop
jecxz
stos
aam
mov
jmp
xor
push
loopne
mov
adc
sub
lock
add
push
insl
adc
sbbl
test
push
push
push
je
das
push
dec
stos
xor
xchg
jmp
xchg
cmpsl
sbb
ror
fsubr
lock
inc
lret
xchg
and
mov
mov
leave
test
xor
cs
sbb
shrb
sub
mov
mov
add
cmc
leave
sbb
inc
cld
insb
repz
lea
loop
mov
lock
mov
fists
out
sbb
push
adc
in
inc
push
adc
es
hlt
adc
mov
mov
das
and
sub
mov
mov
out
xor
sub
jg
dec
mov
inc
movsl
xchg
dec
fstl
push
into
loope
push
loopne
cmp
jge
mov
idivl
xchg
lea
sahf
push
xchg
cmp
js
je
add
cs
popa
cmp
mov
dec
dec
jecxz
sbb
nop
cmp
pushf
sbb
lcall
adc
push
xchg
mov
mov
jge
fistpl
cmp
lock
mov
sti
sti
cli
test
push
insl
clc
mov
imul
cmp
rorl
shll
and
ljmp
movsl
fistl
imul
aad
inc
jle
movsl
mov
iret
imul
xor
mov
ror
mov
iret
push
js
out
stos
fistpll
stos
inc
fmull
imul
dec
arpl
or
ret
dec
shl
divl
and
xchg
cmp
push
in
xchg
cmpsl
es
iret
loope
inc
insl
jg
add
inc
testl
test
out
mov
mov
inc
dec
sti
test
inc
sbb
mov
inc
subl
xor
add
popa
test
lret
pushf
jg
mov
insb
adc
call
jbe
sbb
mov
ret
std
pop
fs
stos
shl
xchg
mov
int3
jge
roll
xchg
push
testb
mov
sub
mov
addr16
lret
daa
mov
fsts
adc
rorl
leave
fsubrs
aaa
add
push
mov
fmulp
mov
sub
ja
sbb
pushf
in
test
sbbl
xor
loope
ficomps
pop
sbb
mov
dec
mov
clc
cmpsb
dec
xchg
and
stos
xchg
shl
jne
adc
roll
ficompl
jle
or
dec
inc
lcall
xor
mov
into
push
xchg
adc
cltd
adc
andb
lock
mov
shrb
js
stos
xor
pop
xchg
lds
aaa
mov
cmpsb
arpl
mov
cwtl
add
es
or
scas
lods
mov
ljmp
pop
ror
inc
lcall
and
loope,pt
imul
pop
aaa
getsec
or
mov
sub
in
push
imul
fnstsw
push
dec
int
mov
and
mov
mov
out
in
mov
lret
jp
push
sbb
test
cltd
icebp
or
cwtl
and
aas
dec
inc
inc
ret
mov
cmp
mov
mov
das
push
adc
push
daa
loope
cmp
faddp
fstps
mov
cmp
sbb
fstps
and
pop
pop
je
and
inc
test
ror
nop
push
hlt
ljmp
xchg
add
cwtl
xor
fwait
jb
push
jb
orl
sbbl
sahf
jp
dec
lds
test
movsb
ror
fs
mov
xchg
inc
push
setns
inc
jae
das
xchg
or
cli
xor
mov
adc
into
push
ret
jecxz
fidivrl
xor
xor
sbb
ret
adc
aaa
or
rclb
mov
dec
pop
cmp
nop
std
push
stos
cld
dec
mov
fcmovbe
rclb
xorl
outsb
pushf
inc
inc
lods
mov
fbld
xor
mov
mov
push
nop
je
xor
push
ljmp
jb
cmp
add
sub
xor
pop
testb
pop
sbb
in
or
adc
rcrl
dec
fidivl
sbb
jbe
aam
testl
jp
mov
jb
shlb
fistpll
inc
jge
cmp
pushf
add
pop
das
pop
cli
xchg
xchg
jo
add
sbb
dec
js
subl
sbb
lods
cmp
shrb
pop
cmp
outsb
lock
call
xlat
push
push
xorb
in
dec
gs
cmp
inc
addb
loope
pop
mov
in
iret
sub
add
adc
jae
sbb
xchg
je
push
push
inc
pusha
jae
mov
xor
stc
cmp
jnp
lock
push
cmp
int
sub
cmpsb
xchg
add
push
inc
adc
mov
jno
jmp
or
cmp
lcall
imul
cltd
mov
add
mov
cmp
mov
sbbb
mov
jg
fwait
jecxz
inc
dec
xor
popa
js
jns
fisubrs
mov
inc
subb
jmp
adc
inc
mov
ja
inc
fiaddl
popa
orl
add
mov
rcll
push
mov
mov
jne
sti
js
adc
inc
sbb
imul
in
inc
jmp
cmp
or
in
jne
outsl
add
or
jle
mov
cmpl
jmp
and
js
or
xchg
cli
dec
mov
into
insb
or
mov
adc
jo
sub
xlat
pop
insl
or
or
ret
sbb
xchg
dec
loopne
xchg
insb
insl
shl
adc
mov
xor
movsl
cmp
mov
sahf
jne
xchg
mov
outsl
jnp
lahf
xor
add
sbb
lock
pop
hlt
xor
in
xchg
push
out
cmpsl
add
jge
lock
mov
into
gs
sub
aas
pop
jne
stos
add
hlt
mov
rcll
add
inc
loop
jl
dec
add
mov
mov
jne
mov
adc
shrb
sbb
and
lock
xlat
test
nop
mov
test
test
sahf
inc
scas
repnz
xchg
bound
popa
sub
lahf
mov
ja
jnp
pusha
in
es
mov
push
xchg
add
push
xchg
cmpsb
in
jl
jne
sbb
fdivrs
or
and
xchg
movb
dec
popf
mov
mov
test
lahf
dec
aad
out
sub
test
mov
add
les
js
inc
pop
pusha
int
lret
popa
add
dec
aad
clc
mov
sarl
loope
mov
dec
aaa
mov
das
mov
add
insl
jnp
push
push
cmp
aas
dec
mov
push
inc
dec
aad
stos
pop
sbb
fucomi
pop
pop
or
xchg
sub
sub
jno
mov
cltd
mov
add
test
outsb
jbe
test
cli
xchg
cmc
insb
mov
shr
push
adc
mov
popa
dec
and
pop
push
mov
xchg
and
nop
adc
mov
data16
push
push
inc
and
iret
inc
popa
add
lods
insl
dec
lods
add
lock
add
ds
sub
mov
dec
push
into
adc
imul
int
hlt
ja
es
mov
movntq
out
xor
in
test
rcr
inc
sbb
sahf
mov
or
or
pop
pop
ds
bound
mov
ficomps
inc
push
or
push
cmc
push
sub
inc
or
mov
test
insl
sahf
ljmp
mov
jge
shlb
jo
push
addb
ja
lahf
imul
leave
sbb
stc
inc
not
dec
pop
rol
inc
popf
popa
dec
jae
loope
mov
push
cmp
push
pop
popf
xchg
fwait
sti
lahf
nop
cld
adc
or
inc
test
shlb
movsb
jmp
lea
clc
cltd
mov
xchg
lods
lea
jg
mov
xor
mov
fpatan
call
mov
icebp
jnp
push
dec
in
jne
stos
mov
xor
sbb
or
sbb
fdivl
scas
pusha
mov
or
cmpsl
in
sbb
ss
mov
out
xor
flds
call
ljmp
loopne
cltd
addr16
mov
push
imul
popf
adc
xchg
stc
adc
push
into
movsl
js
shrl
xchg
ljmp
mov
sub
mov
loope
jle
push
sub
mov
pop
enter
repz
jo
lods
xor
fisttpll
push
pop
repz
pop
idivl
push
push
xor
pop
mov
adc
loopne
aam
or
mov
mov
or
fadd
fsubrs
jle
mov
mov
test
jmp
lock
icebp
repnz
push
int
mov
jns
xchg
es
shlb
cmp
lds
movsb
repnz
and
lret
shl
mov
shlb
jge
aaa
push
andl
xor
sub
gs
shl
jno
cwtl
stc
mov
lea
movsl
cmp
pop
mov
int
push
test
mov
loope
inc
es
push
aas
push
pop
rclb
mov
fwait
test
mov
mov
jg
movsb
ficoml
mov
daa
mov
lods
pusha
insl
dec
cmpsl
jae
lret
loop
push
mov
dec
ja
addr16
hlt
cwtl
xor
and
ds
dec
test
cmc
mov
enter
lock
dec
es
pop
fwait
lods
cmp
cmp
imul
mov
sbb
xchg
sub
jecxz
mov
lock
pop
jl
jle
jbe
sub
jp
inc
push
aad
pop
push
imul
mov
cwtl
fists
sub
adc
hlt
std
cmp
roll
lods
test
sub
hlt
jg
push
inc
xlat
jmp
fistpll
xor
mov
imul
jns
cmpsl
mov
adc
inc
mov
pop
cli
iret
subb
outsl
dec
inc
jg
and
mov
stos
imul
loopne
add
or
scas
sub
mov
pop
push
adc
mov
cld
sets
push
push
push
mov
adc
and
stc
push
xchg
jno
sbb
bound
fsubr
xor
insb
enter
cmp
sbb
stos
xchg
subl
popf
les
inc
icebp
ret
inc
stos
jg
xor
jne
cwtl
mov
stos
cwtl
pusha
popa
cmc
cli
daa
daa
sub
stc
lret
mov
xor
notb
arpl
mov
aas
jo
mov
xchg
movsb
stos
stos
add
xchg
add
or
testl
cmp
imul
nop
sti
cmp
into
in
sub
adc
fsubrp
xor
xor
sbb
inc
stmxcsr
cmp
rcrl
ds
aaa
std
adc
lds
mov
mov
pop
outsl
loop
jns
in
push
push
or
mov
cmpsb
in
je
das
cmp
fsts
sub
mov
lretw
cltd
dec
arpl
sbbl
mov
js
popa
das
clc
das
ljmp
push
jne
pop
mov
jl
mov
sbb
test
fistpll
dec
fiadds
push
rcll
lahf
xchg
jb
sbb
jecxz
mov
mov
mov
dec
and
xor
add
inc
jae
xrelease
and
pop
mov
outsb
jl
mov
pushf
cmp
lcall
cwtl
stos
pop
aam
adc
mov
test
and
flds
jl
cwtl
fildl
fs
aad
push
out
test
mov
pop
cli
xchg
data16
cld
adc
pop
out
inc
adc
enter
fistl
je
xor
sub
std
inc
int3
mov
push
cmpl
sbbl
adc
mov
mov
rcl
ss
mov
mov
jns
cltd
and
mov
cmp
cmc
jns
xchg
inc
sbb
nop
inc
mov
xor
jne
pop
mov
clc
cmpl
xchg
push
pop
push
mov
pop
adc
sbb
and
adc
xchg
and
scas
out
movsb
pop
out
inc
mov
std
std
pusha
ror
sub
xor
cli
pop
cmp
adc
dec
inc
lods
ljmp
pushf
scas
les
scas
dec
mov
xchg
add
insb
mov
pop
in
rcrl
popa
shlb
arpl
xor
pop
xchg
or
sbb
enter
cmp
sub
ret
lods
mov
jns
mov
push
xchg
and
sub
cmpsl
je
fsubs
sbbl
or
icebp
mov
xchg
ja
dec
pop
mov
mulb
xchg
add
mov
vpsrlq
test
dec
mov
push
ss
aaa
int
mov
cmp
push
hlt
int3
inc
enter
push
fimuls
push
push
stc
jbe
jge
cmpsl
cmpsb
les
adc
cltd
add
mov
cmpsb
repnz
mov
fnstcw
hlt
lods
cmp
jns
jae
addr16
add
bound
ja
es
pop
add
daa
testb
xchg
addl
mov
cmp
movsl
mov
addr16
cmp
stos
cmp
mov
test
adc
ss
arpl
stos
cmp
sar
adc
inc
in
mov
and
ja
std
xor
sahf
push
and
inc
mov
lcall
mov
mov
mov
into
xor
leave
popf
int3
pop
sbb
in
sahf
mov
mov
xchg
mov
or
js
or
ja
sub
jg
sbb
inc
push
js
dec
je
mov
aam
and
cmc
jmp
mov
jl
test
inc
xchg
sub
in
fwait
pop
cmp
ss
cmpl
sub
lahf
hlt
adc
in
jp
mov
dec
movsb
test
out
mov
inc
pop
xor
or
rcrl
mov
inc
mov
sbbb
cmpsb
fcomip
xchg
fadd
lds
inc
xor
stos
jp
movsl
ret
out
inc
or
jp
push
outsb
cmp
cltd
outsl
out
push
adc
test
add
pop
lahf
les
inc
cmp
sub
pop
dec
adc
xchg
mov
jno
lret
in
jl
gs
push
icebp
push
pop
add
ret
fldl
mov
sbb
out
imul
inc
stos
pop
mov
sub
inc
rorb
enter
nop
dec
jae
mov
stos
and
dec
cmp
pop
xor
sbb
cmp
dec
add
in
sub
mov
cmp
in
in
loop
jno
int3
lods
inc
call
lret
push
mov
pop
leave
add
cmp
xchg
lock
mov
movsl
sub
pop
pop
jne
push
test
lock
test
jns
int3
daa
cmp
mov
xchg
test
adc
das
inc
mov
jp
loop
sbb
enter
je
out
pop
xor
jmp
jle
xor
and
faddp
shrl
sbbl
add
mov
and
stos
enter
int3
shrb
jae
lret
movsb
repnz
dec
test
jae
or
mov
nop
jns
movsb
pop
sti
xchg
sub
mov
jns
push
mov
repnz
aaa
pop
aam
ds
push
mov
insb
out
dec
pop
sbb
cmp
test
push
fidivl
mov
stc
test
fwait
pop
ss
add
sti
xor
sub
push
insl
mov
and
pop
ficoml
dec
xor
or
sbb
pop
sub
inc
mov
popf
loope
pshufw
adc
in
gs
fcmovbe
sbb
arpl
xchg
or
jne
mov
popl
jno
jnp
xor
addr16
aam
jb
out
cli
les
inc
push
push
adc
mov
test
push
out
ds
adc
lock
repz
adc
inc
dec
push
or
and
pop
daa
mov
sbbl
in
std
add
fcompl
and
fdivl
pop
js
and
inc
lcall
and
mov
mov
push
or
mov
ret
bound
xor
fabs
insl
pop
adc
mov
fisubs
aas
xchg
pop
pop
or
scas
mov
push
pop
in
pop
mov
mov
mov
push
xchg
or
and
mov
cmp
sub
push
rorl
je
lea
test
mov
es
inc
mov
lret
cs
icebp
jne
es
sub
lds
lods
dec
add
jbe
sub
shll
lea
lea
jno
pop
xchg
mov
mov
ja
fwait
xor
adc
subb
adc
das
cmpsb
adc
lcall
and
mov
pop
rcrb
sbb
mov
jmp
dec
popf
cmp
bound
daa
push
xchg
sub
aas
in
cmc
hlt
adc
jle
pop
dec
in
lods
ljmp
pusha
or
loope
push
mov
cmc
adc
shll
xchg
call
lea
push
add
ljmp
lret
pop
sti
sbb
pop
xchg
and
les
testb
push
inc
and
lods
mov
ret
dec
lcall
xlat
sub
add
adc
dec
inc
mov
sub
fs
push
xor
mov
mov
jae
mov
sbb
pop
fidivs
in
and
ds
cs
inc
or
mov
das
pop
push
lock
or
sub
pop
insb
mov
dec
and
sahf
call
mov
fstpl
outsb
push
mov
ret
adc
lcall
sbb
xor
sbb
sbb
dec
fsubrl
dec
pop
lds
push
imul
cwtl
or
cmp
imul
and
pop
imul
push
or
pop
or
mov
push
es
sub
int
sbb
mov
mov
or
sbb
sub
push
adc
mov
mov
mov
test
outsl
daa
in
fsubs
sarb
jl
or
loop
scas
sub
int
jg
fsubr
stos
mov
adc
jnp
cmp
sub
sub
lcall
inc
aad
ljmp
or
push
mov
das
mov
sub
out
das
sub
jge
sub
movsl
scas
shlb
sbb
jo
cmpsb
mov
mov
icebp
test
lret
js
mulw
fcmovbe
pop
cmp
lcall
jg
movsb
pop
ja
xchg
push
neg
sbb
prefetcht1
xor
push
addr16
jo
movsl
es
pop
mov
and
cmpsb
pop
cmc
fdivs
mov
loop
push
mov
mov
and
adc
mov
imul
testb
imul
outsl
fs
cmp
or
test
cmpsl
cmc
mov
push
and
or
ret
jle
mov
lock
out
fcmovne
adc
imul
cli
push
fstl
xchg
sbb
cmpsl
dec
pop
pop
lea
bound
aad
mov
notb
ds
sub
sbb
out
daa
ja
nop
test
add
sbb
xchg
test
pop
mov
push
adc
nop
and
pop
aaa
dec
mov
dec
in
mov
imul
adc
loop
rorl
push
movsb
clc
aam
pusha
das
mov
jg
sub
xor
mov
cmc
mov
shrb
mov
jno
cmp
jb
rorl
fcomip
inc
fsubl
inc
mov
popa
xchg
arpl
mov
xor
sarl
outsl
movsl
inc
cld
sbb
jo
cwtl
push
insb
popf
aaa
mov
es
or
mov
mov
mov
test
xor
jbe
rorb
lock
sub
lret
daa
adc
cli
xchg
inc
test
cmp
pop
rclb
rol
mov
ret
int
inc
out
add
push
jne
dec
mov
std
imulb
ss
jo
mulb
fidivrs
in
into
ljmp
push
test
push
mov
pop
inc
enter
fdivr
jo
shll
orb
add
xchg
mov
lret
add
pop
push
inc
fldl2e
jb
jmp
testl
and
mov
out
dec
inc
fidivrl
mov
adc
iret
fidivs
mov
subb
xor
mov
sub
cmp
inc
xchg
mov
idivb
stc
jo
cwtl
sub
lret
test
jne
mov
pop
dec
inc
dec
clc
jge
test
scas
dec
mov
lcall
jl
sahf
mov
adc
add
sbb
aas
or
lahf
adc
inc
xor
mov
fildl
sarb
ljmp
push
xchg
ljmp
lahf
inc
and
mov
cmp
jecxz
adc
out
jp
xor
js
or
icebp
adc
jp
xchg
adc
mov
call
jnp
arpl
xor
sub
jmp
xchg
sub
jle
ret
lret
cwtl
sub
pop
sub
js
leave
sbb
cmp
call
xor
sub
ret
pop
inc
sub
mov
dec
inc
call
or
jmp
mov
popf
cmc
sbb
cltd
add
aad
jecxz
xchg
jl
mov
rcrl
add
jb
addb
ja
in
mov
int
rclb
leave
push
lods
jno
push
inc
mov
shrl
lock
xor
cwtl
mov
loopne
xchg
jno
aas
jecxz,pn
sub
inc
fimull
and
adc
dec
and
and
call
sbb
call
xor
xchg
sub
pop
jb
push
lods
mov
ror
sbb
aam
pop
loope
loop
daa
xchg
pop
sub
into
push
mov
ror
push
sbb
outsb
pop
add
jae
lret
sbb
cs
lock
inc
mov
int
adc
hlt
pop
sub
add
xchg
mov
adc
lock
repz
sarb
pop
cltd
jg
fwait
dec
loopne
in
mov
mov
xor
pop
loope
js
lahf
pop
lcall
iret
lret
sub
push
out
fisubrl
shl
outsb
lea
xor
aaa
repnz
rclb
xchg
aaa
or
andb
out
call
mov
cmpsl
fbld
pop
int3
dec
and
data16
adc
stc
andb
mov
leave
pusha
out
fsubrs
popa
add
arpl
add
scas
js
test
dec
xchg
mov
inc
add
mov
sub
fnstenv
lret
inc
int
sbb
mulb
into
push
jbe
add
and
out
addr16
roll
and
mov
mov
negb
js
dec
mov
iret
mov
jge
scas
nop
dec
dec
push
sbb
call
je
arpl
mov
jge
decl
xchg
dec
imul
mov
push
push
out
sahf
movsl
xchg
rcrl
ret
lods
pop
scas
push
out
scas
xorl
pop
xor
sub
lods
cmpl
je
insl
adc
insl
mov
xchg
fldl
jmp
out
aad
mov
mov
loopne
aas
clc
adc
jmp
jbe
cmp
inc
pop
push
aaa
loopne
cmp
les
push
mov
fisttps
addr16
popf
outsb
roll
mov
jbe
shll
or
imul
xor
leave
xor
addl
xor
or
push
mov
lret
dec
daa
cmp
mov
jb
or
mov
notb
push
xor
imul
js
insl
jp
cmp
push
pop
add
mov
add
adc
sub
lea
dec
outsl
daa
add
adc
add
outsl
arpl
mov
pop
popf
gs
in
int3
loop
fnstsw
test
xor
jno
mov
addr16
and
sbb
fldt
xchg
pop
cmp
iret
clc
fcoml
mov
sarb
xchg
and
cmp
jns
mov
inc
movsl
mov
lcall
ljmp
mov
push
imul
push
add
push
sub
xor
xor
stc
xorb
lahf
jo
mov
arpl
add
rol
iret
sbb
inc
jo
cs
pop
push
iret
stos
mov
push
push
arpl
push
sbb
std
lods
mov
repz
or
push
dec
pop
cmp
sahf
clc
repz
pop
xchg
test
mov
leave
nop
pop
sahf
dec
push
fcomps
outsb
and
mov
mov
sbb
inc
movsb
nop
popa
and
movsl
ljmp
clc
sbb
mov
fdivrs
or
ljmp
xor
xlat
out
popf
push
inc
push
ret
jp
add
leave
sub
ljmp
in
push
icebp
clc
aad
jl
movsl
pop
mov
shl
xchg
inc
cmpl
fcoms
clc
add
dec
cltd
and
lcall
insl
adc
xchg
int
mov
or
mov
pusha
push
xchg
fisttps
out
push
lods
cmp
xchg
enter
cmp
dec
movsl
pop
cmc
fcoms
jl
mov
inc
insb
add
rorl
adc
sbb
fs
insb
scas
in
add
lahf
xchg
popf
or
jne
mov
or
xchg
shl
mov
sub
nop
outsb
subb
int3
lcall
lcall
aam
stos
inc
fiaddl
leave
pop
scas
int
daa
incb
and
mov
leave
push
push
mov
in
and
or
outsl
test
pop
mov
nop
push
mov
lcall
adc
jnp
repnz
mov
jmp
out
daa
outsl
inc
popf
mov
or
jecxz
stos
cmp
or
xchg
sbb
dec
mov
and
es
shrl
dec
negl
cmpsb
ljmp
loope
push
out
xor
outsl
mov
jmp
hlt
or
aaa
push
testl
dec
lea
mov
lods
in
mov
cld
xor
sub
or
mov
popa
lods
pop
pop
arpl
scas
cmpsl
fadds
dec
std
repnz
or
push
sub
and
daa
mov
shll
add
jge
int
jo
mov
ljmp
inc
mov
pop
adc
scas
out
mov
jns
imul
lea
mov
movsl
sbb
pop
faddl
xchg
out
xor
sub
insl
xor
xor
mov
cmp
add
mov
adcl
ret
repnz
jecxz
dec
scas
cmp
dec
mov
mov
mov
xchg
mov
into
inc
ljmp
mov
daa
push
ret
je
into
mov
addr16
jae
js
cs
xor
ss
repnz
push
insb
push
mov
adc
cld
shr
fisttpll
int
lea
and
outsl
lret
and
add
int
repz
cmpsl
or
cmp
dec
sbb
mov
adc
mov
outsl
jo
mov
or
hlt
ss
es
xchg
mov
sbb
test
icebp
bound
dec
mov
push
testb
push
icebp
in
cmp
mov
pop
repz
adc
adc
out
xor
mov
sahf
jno
pop
sub
jae
fidivrl
push
add
ja
push
inc
mov
pushf
hlt
mov
cmpsl
jns
mov
sahf
lods
sub
sub
out
mov
call
call
xchg
xchg
scas
pop
jne
pop
rcrl
mov
cmp
fwait
cmp
notb
imul
in
sti
lcall
mov
inc
push
dec
mov
cli
mov
ret
clc
mov
pop
leave
inc
fidivrl
pushf
outsl
shll
int
mov
mov
fdivr
jbe
test
sub
mov
or
sub
outsb
cmp
sbb
jne
faddl
popf
arpl
iret
sti
jge
sbb
jo
rcrb
inc
cmc
dec
fld
push
push
hlt
mov
in
or
cltd
aas
jns
push
rclb
jmp
fdiv
std
pusha
fninit
push
adc
int
aaa
push
dec
andb
mov
sub
iret
out
inc
gs
dec
jecxz
pusha
enter
push
sbb
outsl
addl
dec
mov
pusha
mov
lds
add
xor
jne
jg
lcall
fnstenv
push
test
shll
dec
das
addr16
jmp
jae
cmpsl
push
add
jo
fldcw
add
lret
pop
push
ljmp
cmp
outsb
dec
sbbb
rclb
cmc
dec
movsl
pop
jmp
cmp
shl
lds
jnp
daa
jno
mov
pop
xchg
mov
sub
popa
jbe
lahf
lret
pop
int
inc
sbb
scas
inc
jb
push
mov
pusha
stos
es
pop
enter
shlb
dec
cltd
fsubl
lods
xor
mov
enter
sahf
out
lods
and
gs
dec
iret
mov
lahf
mov
arpl
notl
es
cli
cltd
mov
push
lods
clc
ja
cmc
jne
loope
adc
scas
mov
cmp
rclb
cmp
mov
jbe
cmp
movsl
dec
mov
add
pop
pop
jb
mov
or
pop
cmp
ror
jl
movsl
outsb
cwtl
popa
cwtl
out
sbb
out
xchg
jle
inc
cmp
xlat
repz
clc
fcmovnb
sbb
pop
into
sbb
push
mov
repz
gs
in
test
inc
fs
rorl
int
arpl
lea
lret
pop
fidivl
cmp
repnz
xchg
sub
ja
sub
xchg
out
sub
xor
adc
mov
sbb
pusha
pop
divb
in
jbe
and
push
rcrl
xchg
addr16
jmp
arpl
lret
sub
pop
ret
mov
xchg
ja
pop
insl
dec
popa
lds
cmp
push
jns
mov
fsubrs
fldcw
outsb
jle
lret
add
roll
mov
and
shrb
lret
in
cld
inc
pop
movsb
mov
add
jne
outsb
mov
pop
adc
xor
cmp
push
push
add
ret
fcomip
cli
xor
sub
adc
cmp
sub
aad
stos
in
dec
xor
push
outsl
xorb
or
or
jo
lahf
mov
lret
mov
adc
jbe
repnz
out
test
or
pop
lahf
inc
les
xor
mov
push
push
adc
call
cmp
or
shlb
int
pushf
data16
or
inc
icebp
insb
sub
xor
stos
push
adc
dec
add
xor
and
push
mov
add
lea
je
push
idiv
mov
dec
in
lea
add
xchg
cmp
movsl
call
push
js
and
lret
sti
add
jnp
loope
xchg
loop
mov
int
mov
pop
pop
std
push
or
les
test
pop
mov
adc
push
and
or
lea
or
pop
popl
mov
xor
or
add
inc
int3
mov
jmp
push
loop
or
mov
or
push
ret
movsb
int3
pop
in
nop
lods
cmp
stc
and
test
hlt
stc
sub
into
scas
xor
push
fdivr
xchg
push
mov
cltd
ds
mov
popa
aam
aam
movsl
loopne
pop
sbb
ret
sub
adc
nop
int3
cli
andl
in
out
xchg
add
js
pop
mov
in
mov
pop
scas
xor
fwait
cli
push
cmc
push
or
jno
cmc
std
shlb
inc
dec
cltd
lcall
jge
iret
xchg
sbb
popf
push
push
into
repnz
pop
jo
adc
fisubl
aaa
into
popa
divl
push
jmp
xchg
and
out
cltd
les
stos
cli
repnz
lods
mov
clc
fidivl
out
fadd
cmp
push
daa
jne
push
in
jnp
sub
jecxz
std
mov
xor
int
lods
in
cs
cli
insl
repnz
xor
xor
push
mov
xor
push
add
xchg
int3
shl
bnd
mov
shlb
mov
xchg
outsb
rol
xor
int3
mov
jnp
lods
push
inc
ds
sbb
push
mov
je
xor
mov
and
pop
push
xchg
les
loope
repz
ss
jbe
inc
sub
dec
cmp
sub
sarb
pop
loopne
stc
mov
cli
into
or
mov
in
js
mov
jmp
jge
lea
jle
add
lea
aad
mov
or
lahf
mov
je
pop
sarb
clc
jecxz
out
cltd
hlt
cmpsl
pop
aad
or
iret
push
push
repz
jp
ds
add
ret
dec
arpl
cmc
scas
andb
fdivs
mull
aas
mov
sbb
jmp
push
fnsave
shll
mov
imul
fwait
jecxz
add
pop
hlt
adc
pop
lods
loopne
sbb
ds
lock
dec
mov
stc
out
rorb
adc
fsubr
movsb
cmp
add
xor
pop
pop
xlat
outsl
inc
mov
aam
mov
cmp
mov
in
shrb
jecxz
fisubl
lock
test
mov
push
repz
and
cmpsb
dec
mov
int3
movsl
stos
ljmp
subb
mov
mov
rcrb
mov
or
addr16
mov
sbb
sub
cmpsb
les
push
mov
and
and
int3
outsl
test
addr16
fbstp
jo
jne
addl
cmp
xchg
and
push
jae
movsl
cmp
ret
push
inc
xchg
cmp
ljmp
xor
leave
insb
sbb
outsb
sub
xchg
mov
sbb
push
and
or
enter
mov
add
repnz
shll
loope
lahf
mulb
cli
adc
imul
imul
das
scas
push
cmp
inc
inc
scas
xchg
mov
pushf
jmp
add
movsl
negl
imul
and
ffreep
adc
shll
enter
sbb
hlt
fcoml
sub
sub
rorb
call
aam
into
and
incl
sahf
lds
jge
cmpsl
dec
out
out
cmp
movsl
and
arpl
out
ds
in
add
xchg
rcrl
mov
mov
popa
fwait
mov
jecxz
daa
adc
loope,pt
jge
insb
add
cmp
xorl
mov
in
sbb
dec
and
pop
jo
ja
in
mov
jo
xor
inc
or
cmp
mull
shll
sarb
mov
loopne
outsl
idiv
aas
mov
pushf
divb
ds
sub
mov
in
xor
in
xor
jge
xchg
mov
adcl
and
fcomp
adc
push
adc
or
cwtl
jne
sub
cmp
clc
movsl
mov
enter
sub
jo
pushf
data16
mov
sub
xchg
out
pop
mov
xchg
and
push
movsl
xor
mov
sub
daa
cld
daa
sub
pop
sbb
loop
cmpb
lea
sbb
pop
lahf
mov
mov
cltd
and
shlb
int3
jp
addl
xchg
xchg
test
in
xor
mov
stos
adc
daa
cmpsb
cs
cwtl
push
mov
inc
mov
bound
cmpsb
stos
inc
mov
dec
rcl
enter
jns
xorb
jl
pop
movsb
sti
mov
pushf
imul
add
mov
and
jns
aas
rcrl
hlt
cmp
jp
icebp
test
and
adcl
cmpl
fisubrs
daa
xor
mov
xor
fisubl
xor
pushf
xor
stc
xor
dec
out
ds
jne
push
mov
mov
lods
or
in
sahf
add
or
movl
mov
fsubrl
mov
enter
rclb
and
out
nop
in
dec
and
pop
xchg
cli
fwait
xor
shr
ljmp
repz
mov
stc
push
cmp
adc
fidivrl
rdtsc
faddl
sbb
xchg
mov
cltd
pop
jg
jo
pushf
sub
xchg
add
repz
and
xchg
pop
out
mov
cmc
xchg
fisubrl
xchg
out
rolb
pusha
mov
test
add
rolb
jg
fidivrs
test
xchg
into
xchg
dec
xchg
cmp
dec
push
xchg
cmp
sub
in
hlt
dec
icebp
lds
addr16
push
fimuls
popf
mov
popf
xor
repnz
dec
ss
fs
xorl
jbe
pop
lods
repnz
test
xchg
mov
fisubrl
jmp
jmp
jb
inc
adc
xchg
mov
cmp
mov
jnp
adc
cmp
into
aas
sarb
adc
mov
popa
push
ret
imul
inc
and
cld
push
es
inc
pop
cmp
test
mov
push
jo
push
mov
mov
add
ret
mov
jecxz
and
mov
xor
aam
adc
push
rcll
push
mov
and
inc
out
mov
or
subb
mov
adc
mov
jl
ljmp
push
jge
aaa
dec
xchg
push
cmp
mov
pop
popf
fists
roll
mov
rolb
or
xchg
mov
push
adc
imul
sbb
inc
repnz
and
mov
jns
ficoml
fdivr
arpl
mov
stos
test
js
jne
mov
cld
push
and
hlt
ds
bnd
out
xchg
push
rorb
and
ljmp
pop
out
add
xor
push
xchg
nop
jmp
mov
cltd
or
xchg
arpl
jmp
push
enter
testb
and
cli
cmp
push
push
clc
data16
pop
arpl
loop
and
dec
clc
mov
je
xor
fadds
in
mov
cld
sub
insl
mov
xlat
jl
push
mov
sbbb
call
in
mov
sbb
mov
jno
mov
std
lret
mov
sbb
dec
jecxz
in
stos
mov
rclb
or
mov
fisubs
jnp
mov
in
aaa
push
xchg
mov
dec
sub
nop
out
iret
pop
in
cmp
inc
pop
cmc
icebp
push
mov
out
in
mov
xor
popa
mov
iret
outsb
aad
push
cmp
mov
and
cmpsl
je
iret
fadd
dec
xorl
sbb
subl
loop
or
out
insb
mov
test
ret
jge
cmp
sti
jne
jb
sbb
nop
dec
repnz
mov
fadd
pop
das
into
sbbb
xchg
loope
mov
sub
cmp
popa
xchg
test
addr16
xchg
mov
fsubs
dec
push
test
mov
neg
aad
icebp
adc
sbb
fcomip
xchg
xchg
sub
es
popa
stos
mov
jmp
loope
in
notl
lds
cwtl
xor
adc
jge
test
je
add
jp
les
pand
or
push
xor
jmp
fstl
mov
lea
test
gs
xchg
loop
popf
test
and
js
fsubs
mov
pusha
ss
pop
mov
jne
fsubs
out
dec
inc
out
and
shll
pop
in
es
scas
xchg
fisttpl
pop
insb
inc
lahf
mov
lcall
pminub
dec
add
fists
dec
mov
hlt
push
add
push
test
popf
movsb
out
mov
jp
movsl
shlb
sbb
ds
ljmp
testb
mov
mov
and
xor
pop
jae
or
dec
dec
xor
cmpsl
addr16
cs
xor
pushf
jg
mov
mov
pop
pop
sbb
fadds
xchg
push
ljmp
or
nop
mov
mov
pop
insl
add
push
sbb
jae
mov
sbb
test
mov
cmc
aad
mov
adc
dec
lcall
push
fnstsw
jnp
xor
xchg
dec
sub
sbb
add
jle
sub
dec
sbbl
js
mov
fnstenv
out
test
aam
pop
repnz
mov
mov
ljmp
std
lods
into
and
xchg
jo
adc
mov
cwtl
push
shll
ss
dec
sbb
mov
cmpsl
scas
and
cmpsl
mov
sub
movsl
rcrw
dec
into
mov
jl
jno
jno
push
mov
dec
sub
in
inc
mov
pop
lret
pop
outsl
loop
jg
inc
mov
test
shrl
movsb
pop
mov
mov
mov
mov
adc
shlb
fsubl
pop
lds
push
sbb
mov
sub
rclb
cmp
faddl
popf
lret
xlat
into
and
xor
imul
add
and
push
pop
dec
or
push
cs
call
dec
xchg
adc
outsb
ficompl
pop
rolb
xchg
push
push
or
out
pop
inc
add
mov
stos
inc
fcomp
adc
fsubrs
hlt
xchg
fisttpl
mov
pop
and
out
ficomps
push
xchg
sub
mov
out
push
pop
mov
ret
mov
sbb
shr
pusha
aam
pop
jno
add
pop
int3
dec
dec
ja
jp
sbb
sahf
and
aas
fisttpl
cmp
mov
pop
sub
push
in
mov
sbb
inc
aaa
out
cmp
enter
mov
dec
pop
insl
sahf
or
sub
push
mov
fists
cmpsb
sbb
jg
lcall
add
mov
pop
mov
repnz
inc
sbb
sub
pop
mov
xchg
popf
in
xchg
mov
test
push
pop
inc
in
pushf
mov
pusha
xlat
repnz
xor
push
push
fstpl
add
ljmp
pushf
cmpb
adc
dec
imul
mov
jae
add
out
es
ljmp
pop
mov
mov
and
in
fcomps
shld
call
jle
sub
pop
pop
mov
mov
xor
test
jno
mov
adc
bound
insl
jle
jmp
pop
aas
xchg
jmp
cmp
adcb
cmp
push
scas
incb
sub
mov
je
mov
hlt
rol
sub
pushf
or
fs
sahf
xchg
adc
dec
adc
mov
push
mov
pop
fxch
xchg
js
iret
stos
mov
lret
cltd
jle
outsb
ret
je
sub
lahf
mov
xchg
aas
mov
jo
sahf
adc
sbb
stos
sub
mov
loopne
sub
xchg
push
test
das
mov
sub
inc
pop
mov
ljmp
and
pushf
xor
pushf
out
or
les
sbb
xor
ret
pop
mov
add
pop
ss
inc
dec
out
pop
lods
stos
inc
inc
pop
sbb
fmul
leave
mov
push
cwtl
pop
loop
inc
adc
inc
lock
ljmp
je
adc
scas
dec
inc
ss
cwtl
and
clc
ror
das
add
pop
mov
sbb
into
mov
adc
inc
lcall
adc
or
add
insb
test
adc
movd
mov
adc
cltd
into
gs
jno
rorl
das
mov
in
addr16
cmp
leave
add
mov
mov
or
xchg
mov
bound
in
xorl
cmp
mov
pop
lods
push
test
rcll
cmpsb
scas
in
push
dec
stc
adc
jae
dec
pop
test
sub
adc
fmul
test
subl
sub
jecxz
popf
adc
fmuls
aas
sbb
push
popa
mov
cmc
pop
pop
fiaddl
out
fsub
dec
test
fisttpl
jge
mov
or
xchg
sub
test
lock
mov
xchg
pop
addr16
inc
or
pop
pop
mov
enter
dec
sbb
lcall
lahf
add
jb
pop
mov
xchg
pminub
sbbb
aam
lods
nop
inc
dec
pop
dec
fsts
fisubrs
mov
xchg
mov
jp
test
xchg
sub
mov
sbb
cmp
ror
sbb
orb
sahf
lods
mov
pop
sub
pop
pop
push
orl
scas
push
add
rol
stos
inc
fildl
mov
shll
lods
loopne
mov
fisubrs
pop
adc
or
xchg
or
call
xor
jl
mov
mov
mov
fisubrs
aas
loope
add
or
mov
pop
inc
ja
mov
mov
mov
mov
mov
and
loopne
add
fisubrl
mov
xchg
mov
mov
adc
cltd
adc
adc
lock
and
jb
ficoms
push
mov
adc
movsl
mull
fldenv
or
push
bound
inc
into
pop
adc
fsts
std
push
fadd
dec
push
pushf
pusha
pop
cld
lcall
mov
xchg
stc
mov
or
popa
scas
and
dec
test
xchg
ja
cmpsb
cmc
mov
cli
fwait
mov
lea
loope
mov
popa
push
test
mov
mov
push
mov
fwait
dec
jecxz
out
jmp
mov
aaa
rdpkru
dec
xor
xchg
data16
add
push
nop
cmp
rcll
divb
mov
push
mov
xchg
je
jne
mov
iret
imul
jb
imul
add
jo
cmp
int3
push
mov
andl
ret
mov
arpl
inc
clc
rcll
frstor
lret
iret
adc
pop
shlb
add
dec
out
idivl
push
out
mov
push
or
jbe
insb
imul
dec
sub
dec
movsl
insb
jns
bound
sub
add
lds
out
std
pop
or
cmp
push
outsb
call
enter
adc
aam
ds
lods
mov
dec
add
rcrl
inc
fcmovbe
frstor
or
xchg
repnz
rol
adc
mov
jnp
dec
rcl
push
pop
sub
sti
mov
jmp
gs
jo
pop
pop
ja
repz
jns
jle
rcrb
jecxz
aas
fnsave
pop
pop
hlt
nop
dec
into
pop
xlat
js
xchg
ds
mov
fsts
cmp
filds
push
std
or
mov
fiaddl
jmp
sarl
mov
enter
cwtl
call
sbb
jns
pop
xchg
add
mov
add
adc
xor
repz
mov
insb
or
sarb
repz
movl
fmuls
lahf
push
and
dec
incb
les
aam
dec
js
pusha
and
and
call
es
lock
xchg
sub
adc
xchg
cmc
dec
jbe
xlat
push
pop
das
dec
test
test
push
enter
jmp
cmp
xor
fcompl
mov
addr16
imul
gs
jp
ss
in
movsb
cmp
dec
out
cmpsl
loop
shrb
aam
xchg
mov
les
xor
push
pop
xchg
out
insb
add
mov
mov
and
xor
dec
add
js
and
les
hlt
add
call
mov
and
cmp
repz
cld
in
jg
and
rcl
cwtl
xchg
mov
shrb
in
rorl
add
push
adc
xor
out
xchg
mov
or
loope
inc
fucomp
jmp
mov
je
movsb
and
or
jecxz
xchg
out
shl
pop
mov
or
scas
lock
call
xor
popf
xor
push
and
or
sarb
xchg
pop
sbb
in
push
jnp
cmp
ficomps
pop
lock
add
outsl
push
cmp
lds
std
xchg
movhps
fdivrl
cmp
jg
stos
mov
jo
dec
xchg
jmp
mov
adc
rcl
loope
inc
or
mov
loope
mov
repz
in
pushf
daa
bound
mov
push
mov
lret
test
jp
mov
mov
or
push
pop
inc
dec
push
inc
aad
jnp
xchg
pop
lds
add
mov
std
cltd
cwtl
mov
in
test
fsts
testb
pop
pop
mov
fimuls
lcall
cmpsb
aas
das
lcall
iret
inc
inc
sbb
jl
mov
mov
and
mov
ret
sbb
call
and
scas
pop
scas
out
ret
pop
enter
inc
outsl
push
ja
fldcw
fists
push
cld
and
push
cs
es
dec
dec
ret
shl
inc
add
sub
and
push
sbb
mov
push
jle
mov
mov
ret
jo
hlt
iret
fs
shrl
stos
xchg
xor
push
inc
fwait
scas
mov
mov
subb
ds
mov
add
dec
push
lea
cmp
jnp
ret
movsl
push
loop
dec
fistpl
mov
out
loopne
out
mov
daa
mov
outsl
pop
orb
pushf
mov
loope
loope
sbb
out
js
ja
inc
mov
out
mov
adc
jno
pushf
jae
mov
adcb
dec
add
xchg
push
dec
sbb
bound
or
xor
mov
cmp
fwait
or
callw
sbb
popa
and
hlt
mov
sbbb
mov
call
nop
push
test
or
xor
pop
adc
aad
inc
push
cmp
dec
fs
jb
add
nop
nop
xlat
cwtl
test
lret
sub
mov
inc
add
jb
cmp
je
push
out
push
inc
jmp
inc
int
cmpsl
xchg
iret
or
jne
cs
out
push
out
mov
jne
mov
fistpll
xchg
push
push
pop
decb
lret
inc
in
sub
fldenv
inc
setnp
sub
dec
mov
cmp
fwait
sbb
cltd
and
aad
mov
daa
lds
loopne
test
sub
sbbb
out
jge
data16
ljmp
test
jae
mov
sub
sahf
mov
pop
ret
lcall
sbb
adc
cmpsl
cmp
push
das
iret
adc
xor
dec
pop
inc
cmp
lock
out
fisubs
scas
pop
sbb
sub
fdivr
insb
push
adc
cmp
mov
and
cli
lea
sbb
in
cmp
mov
jb
push
in
loopne
sub
sbb
jle
push
add
fnstcw
jl
into
jl
js
ret
mov
fists
pushf
je
fdiv
jb
adc
mov
lcall
ret
je
sbb
loop
rorb
push
cltd
sbb
mov
cltd
xchg
xchg
sub
ja
popf
addr16
and
sahf
lods
arpl
mov
jmp
lret
fisttpl
inc
lahf
and
orl
pop
jmp
or
jns
jns
jmp
jecxz
push
shrl
mov
add
sahf
in
pusha
add
mov
jbe
cli
test
mov
data16
fwait
xchg
shlb
mov
jae
push
pop
xor
or
mov
mov
xchg
icebp
fwait
imul
repnz
ljmp
lock
mov
or
mov
outsb
jmp
hlt
pushf
push
in
das
xchg
cwtl
xor
js
sbb
push
ret
pop
test
xchg
sti
sub
adc
fndisi(8087
das
mov
lret
fs
mov
jmp
lret
sub
shrl
jnp
inc
push
loopne
jg
pop
pop
sarb
addr16
jmp
or
pop
pop
stc
mov
mov
push
popa
shrb
mov
xchg
pop
fimuls
out
int3
loopne
cmp
outsl
repnz
ret
out
push
adc
mov
xchg
pop
sbb
mov
xchg
xor
fnstenv
aad
mov
push
shlb
ds
mov
in
test
jbe
add
pop
fwait
sub
sbb
cmp
pop
mov
cmp
scas
mov
ljmp
mov
mov
fst
dec
adc
loope
mov
jae
decb
lds
push
push
adc
ss
jle
dec
sub
inc
inc
fdivl
push
cmpsb
xchg
fnsave
loopne
inc
or
out
sbb
add
jne
xchg
mov
xor
cld
push
dec
fcmovnb
cmpl
and
cmp
mov
jo
pop
adc
mov
add
pop
out
icebp
aaa
mov
cmp
xchg
mov
lds
mov
sub
shl
sbb
or
cmp
sbb
ds
bnd
sbb
or
adc
sbb
and
out
xchg
daa
shrl
fisttps
movsl
mov
push
inc
mov
out
jbe
pushf
sbb
ror
inc
push
popa
or
mov
add
xor
push
lods
sub
cltd
test
test
rol
imul
push
nop
mov
out
pop
jne
sub
adc
xchg
cld
leave
jecxz
xlat
in
test
xchg
mov
movsl
pop
call
pop
xchg
jo
dec
arpl
xchg
jmp
or
add
lods
mov
ret
mov
sbb
test
mov
ret
and
push
mov
xlat
shrb
sbb
je
call
sub
xor
sub
xchg
xlat
cmc
push
data16
or
inc
js
push
stos
stos
and
popf
or
scas
popl
xorb
dec
cmpsl
adc
jo
les
mov
dec
arpl
mov
lcall
inc
das
mov
push
cmp
shlb
xchg
fldln2
je
repnz
xor
mov
testb
cltd
sub
sub
sub
aad
imul
retw
push
push
iret
xorb
cmp
cli
jge
inc
dec
insl
repnz
flds
hlt
xchg
insb
push
mov
daa
inc
inc
or
sahf
sub
in
cmp
insl
call
cmp
jmp
jns
and
mov
cmpl
push
mov
loop
movsb
push
fwait
dec
dec
xor
imul
fcompl
aad
sbb
popa
inc
je
lods
pusha
dec
in
mov
sbb
mov
sahf
daa
or
dec
cs
std
hlt
xor
jle
lods
popa
pop
arpl
sarb
outsl
adc
mov
mov
fdiv
ljmp
push
or
sub
fmull
clc
clc
mov
aas
push
cmpsb
lock
pop
mov
dec
stos
dec
add
aad
sbb
cltd
nop
jg
sub
pop
pop
nopl
out
inc
cmp
jp
push
insl
sbb
sahf
inc
mov
inc
dec
ss
cli
daa
mov
mov
or
dec
sarl
fbstp
popa
sbb
and
xlat
or
dec
dec
adc
int3
leave
in
insl
push
in
lahf
test
push
pop
sarb
jb
mov
pusha
or
addb
stc
mov
push
push
fsubr
dec
in
stos
mov
cld
call
lcall
scas
out
push
mov
push
imul
stos
sbb
add
pop
fwait
xchg
sub
jmp
fcmovnu
jbe
inc
sbbl
dec
push
xor
jge
push
mov
stos
mov
sub
hlt
out
push
jo
in
into
adc
ss
test
pop
jns
push
or
ret
dec
loopne
notl
repnz
nop
fldcw
xor
fiaddl
adc
mov
ljmp
push
inc
in
mov
lock
sar
adc
testl
lods
dec
mov
mov
fs
xchg
cmpsb
loop
fadds
sti
ljmp
lea
push
adc
scas
mov
push
sahf
sbbb
mov
pop
jo
ss
sub
dec
add
sub
sbb
lea
inc
sbb
mov
mov
sub
jo
pop
loope
xchg
xchg
push
data16
call
push
cmp
and
in
lcall
shl
leave
sub
xor
or
and
push
gs
scas
ss
xchg
or
mov
sbb
in
cmpsl
fimuls
dec
mov
mov
jnp
or
or
xchg
sub
mov
sub
call
ljmp
jg
pusha
ljmp
xchg
faddl
das
aam
ljmp
call
inc
pushfw
pop
push
push
sub
push
cltd
out
adc
jle
js
jnp
jp
mov
loopne
xlat
sbb
sub
cs
nop
pop
stc
popa
fisubrl
dec
rcrl
push
mov
stos
rcrb
and
rclb
add
fcomp
imul
or
pushf
sahf
lock
dec
jg
cmpl
popa
xor
lods
sbb
in
addb
es
addl
sub
and
aaa
into
adc
push
or
mov
and
mov
pop
divb
add
jle
inc
aam
repz
inc
pop
dec
cmp
inc
sbb
jle
sbb
cmpsb
adcb
adc
fisubs
cli
add
movsl
jns
inc
push
fisttpll
mull
mov
adc
ss
orl
push
fwait
xlat
pop
lds
icebp
jl
movsl
cmp
mov
out
sbb
mov
add
mov
cmp
test
leave
mov
repnz
inc
test
loope
adc
mov
aad
mov
addr16
jno
cwtl
jbe
ret
push
cmp
adc
lret
adc
push
mov
mov
mov
xchg
mov
iret
add
inc
movsl
mov
inc
ds
add
adc
mov
mov
mov
loop
addr16
xchg
jl
xchg
daa
test
lret
mov
or
adc
pop
adc
push
xor
mov
xchg
push
xchg
pop
push
lret
xor
aad
sbb
pop
sub
aaa
jno
int3
push
popa
sbb
cli
jge
in
push
aas
fiadds
int
sub
or
fildll
push
mov
or
insl
inc
adc
mov
xor
lds
xchg
jp
std
mov
push
dec
adc
adc
outsl
ljmp
sub
bndstx
fwait
outsl
inc
movsl
cmp
and
jl
ret
test
lret
cld
movsl
or
addr16
or
pop
push
loope
push
mov
test
movsl
icebp
xor
dec
pop
sub
push
mov
jnp
sub
pop
pushf
inc
fmuls
out
je
cmp
pushf
out
xor
arpl
push
mov
adc
add
aas
adc
sbb
and
cmpsl
mov
sbb
adc
xchg
out
cmpl
ljmp
cmp
es
inc
outsb
or
xor
push
and
xchg
aam
int3
js
stos
push
mov
mov
lods
adc
jns
clc
push
cmp
pop
aaa
shrb
inc
lahf
pop
push
sti
jl
push
cmp
andb
andb
rcrb
sbb
pusha
mov
add
fcomps
notl
loope
mov
jg
add
int3
aaa
dec
mov
xchg
test
mov
cmc
fadds
inc
leave
ret
sbb
push
stos
rcrb
mov
jb
nop
mov
shll
sbb
jge
clc
out
lea
mov
cwtl
stos
mov
aaa
decl
out
sbb
clc
xchg
xor
jg
sbb
push
in
inc
fwait
push
inc
mov
xor
popa
push
dec
push
xchg
into
xchg
xorb
arpl
clc
adc
outsl
mov
test
cmp
aad
sti
push
mov
dec
push
pop
mov
jns
dec
and
shl
xor
pop
dec
xchg
mov
lcall
adc
loopne
inc
bound
and
shrl
add
lods
ret
hlt
sub
ja
daa
lods
test
push
adc
icebp
xchg
addr16
adc
pop
mov
mov
clc
cmp
mov
das
loopne
lea
mov
ljmp
dec
cmp
pop
lahf
sub
shrl
jbe
cmp
fwait
mov
sti
xor
pushf
in
in
push
cmpsb
and
sub
jle
testb
mov
sub
out
sub
jne
shl
cmp
inc
test
out
xchg
mov
pushf
daa
outsl
dec
js
add
int
and
and
lods
cmp
and
rcr
sbb
es
mov
rcll
xchg
adc
call
cmp
push
ss
shlb
xchg
in
jno
dec
mov
pusha
stc
lock
add
cmp
sarb
mov
mov
xor
add
sbb
inc
mov
inc
in
shl
repz
arpl
push
mov
loop
cmp
cmp
fidivl
xchg
mov
lcall
add
test
mov
mov
add
imul
adcl
and
mov
sub
xchg
out
jecxz
sub
ljmp
in
ss
adc
sbb
jmp
mov
xchg
movsl
sbb
jp
and
dec
mov
js
push
loope
dec
data16
mov
xchg
dec
and
rcll
les
sbb
cli
cltd
and
insb
aas
out
sub
mov
test
and
aaa
cmp
lret
insl
pop
test
andl
inc
jmp
out
dec
movsl
xchg
fnstsw
shr
mov
in
mov
or
pop
cmp
jge
push
inc
mov
dec
pop
add
jp
cld
enter
mov
xchg
jo
pcmpgtw
dec
mov
aaa
jnp
xchg
mov
ret
movl
dec
ss
xchg
jge
add
adc
es
js
mov
cltd
mov
push
stc
lea
lea
dec
adc
fnsave
out
popa
iret
cmp
data16
lcall
bound
fucomip
jg
ficoml
cmp
jecxz
test
inc
cli
scas
mov
xchg
cmp
xor
push
sbb
roll
ja
rclb
push
ljmp
mov
cmp
outsb
arpl
andb
mov
lods
cmp
mov
sub
and
mov
inc
bound
popa
xchg
adc
dec
mov
rolb
inc
outsb
cmpl
in
leave
inc
jge
mov
fsubs
pop
out
sbb
jmp
or
arpl
fstpl
loopne
push
pop
push
rcll
fs
or
jp
ret
xchg
out
push
sbbb
sbb
pop
pop
repz
fildl
roll
sbb
in
aad
push
aaa
js
stc
pop
push
cmp
shll
pop
jne
cmpsb
lea
xorb
iret
cld
js
lock
pop
mov
add
xchg
test
out
pop
xchg
repz
mov
sub
in
push
pop
xchg
jg
mulb
cmpsw
stos
inc
dec
jo
cld
loope
fisubrl
orb
mov
aam
inc
pop
sub
imul
and
jbe
repz
push
stc
or
repz
lahf
jmp
xor
movsl
dec
mov
sbb
shrb
pcmpgtd
dec
outsl
insb
cltd
xor
iret
mov
mov
jae
xchg
push
jmp
xlat
imul
stos
dec
jne
xor
mov
mov
enter
ret
adc
shl
dec
push
mov
pop
dec
ja
aad
fwait
pop
fbld
xor
pop
xchg
je
les
js
loope
pop
mov
testl
push
jae
aam
inc
daa
add
sbb
insl
adc
mov
jmp
mov
xor
insb
addr16
jo
mov
sub
fisubrl
scas
or
enter
adc
adc
cmp
loope
shrb
push
push
jmp
push
push
dec
cmp
mulb
loop
iret
scas
shll
sbb
popa
mov
ljmp
notb
addr16
seta
pop
sahf
xor
inc
inc
pop
xlat
clc
xchg
pop
pop
ret
inc
fsubr
sti
fldt
pcmpgtb
cmp
adc
lds
sbb
pushf
adc
mov
cltd
push
add
sbbl
call
mov
pop
fsubrs
dec
lahf
push
cmp
testb
mov
push
mov
cli
xchg
mov
cltd
fwait
xor
lods
mov
fisttpl
popf
push
sbb
repnz
clc
or
adcb
iret
pop
jg
xlat
leave
cmc
fs
mov
sarl
push
aas
jae
lret
rolb
or
mov
das
jmp
out
cli
xchg
and
cmc
pusha
sbb
pop
xor
jb
rcll
negl
jge
movsb
cmp
into
dec
push
mov
ret
insb
mov
lahf
stos
dec
loope
adc
xlat
dec
jle
dec
daa
insl
pop
outsb
outsb
push
repnz
test
das
sub
add
xchg
lcall
mov
pop
sahf
dec
gs
mov
dec
inc
ljmp
xor
and
inc
push
mov
lret
mov
mov
mov
fcomps
add
adc
sub
and
frstor
mov
stos
and
pop
sahf
cld
inc
and
and
out
in
pinsrw
mov
data16
jne
adc
push
pop
int3
mov
mov
subl
dec
and
rcrl
mov
enter
push
jmp
test
sub
pop
dec
sub
mov
jmp
add
mov
daa
aaa
sahf
fists
test
or
pop
testb
loop
sbb
inc
dec
dec
jle
add
mov
and
sarb
push
stos
hlt
sahf
les
nop
push
pop
call
push
popa
jno
dec
addr16
cmpsl
ds
js
push
std
lds
mov
std
cltd
cs
xor
xchg
sahf
mov
les
ret
pop
out
addr16
test
pop
repz
test
stos
mov
rcll
xchg
mov
sbb
jmp
mov
repnz
inc
int3
inc
cli
mov
push
pop
inc
call
push
add
out
mov
enter
mov
mov
clc
jmp
cld
mov
push
jecxz
mov
inc
out
xorl
lea
sub
leave
mov
decb
and
mov
frstor
das
fcmovnb
movsl
sbb
scas
mov
cmp
sbb
repnz
pop
jns
arpl
cmp
dec
negl
jle
jo
ficoms
lods
in
icebp
cmp
ret
lods
cmp
jne
and
dec
stos
icebp
imul
xchg
mov
and
inc
insb
test
fisubrs
mov
jae
cs
les
lods
mov
fcomi
std
aam
inc
pop
repnz
lds
or
mov
push
mov
data16
adc
sbb
or
lods
les
inc
pushf
lods
fidivrs
sahf
cmp
dec
mov
clc
icebp
xchg
push
test
mov
insl
adc
adc
xchg
fbld
cltd
xor
repz
pop
cs
out
test
mov
cltd
lds
clc
jg
gs
push
push
sub
inc
int
dec
sbb
dec
out
sub
movsb
mov
adc
add
xchg
clc
mov
and
frstor
outsb
loope
into
xlat
jmp
adc
aam
jb
addr16
pusha
mov
arpl
dec
push
mov
int
jnp
mov
int3
and
mov
push
int
lret
jmp
pop
and
je
and
cwtl
xchg
adc
into
adc
rorl
or
xor
mov
aaa
in
out
cmp
lock
jle
push
lea
cmpsl
ds
cmpl
mov
cmp
pushf
data16
repz
sahf
push
stc
adc
jge
push
inc
data16
inc
xlat
push
outsb
leave
test
aam
aad
decb
popa
xor
mov
mov
icebp
jle
pop
add
push
shl
xchg
or
ret
cmp
mov
aam
add
test
push
enter
lahf
inc
mov
out
andb
mov
mov
in
add
dec
nop
inc
pop
testb
jge
sbb
sub
dec
notb
push
lods
xchg
add
jbe
xor
aaa
mov
cmp
push
xchg
inc
je
repnz
jp
daa
movsl
sbbl
xchg
push
sub
mov
xchg
movsb
imulb
inc
faddl
or
aam
pop
mov
adc
mov
sub
mov
test
mov
daa
stos
lods
fcoms
test
int3
push
repnz
jecxz
and
cltd
xchg
pop
lret
sbb
movsb
mov
dec
jl
jnp
push
mov
cmp
push
dec
nop
cmc
pop
cmpsl
scas
vunpcklps
or
sar
push
lock
xorl
mov
fidivs
outsb
add
jle
clc
nop
aas
mov
pop
scas
xchg
or
mov
ret
xor
xor
std
pop
mov
icebp
aaa
sbb
sbb
and
out
jp
jecxz
incl
ja
sub
outsb
imul
mov
imul
dec
sbb
shl
jecxz
inc
es
paddsw
sbb
das
mov
aam
out
mov
aad
pop
mov
mov
pushf
pop
out
testl
or
push
add
pop
xor
adc
or
dec
test
out
aam
cmp
jne
and
mov
and
pop
je
pop
mov
or
xchg
mov
mov
mov
mov
cmp
inc
dec
out
xchg
push
in
mov
xchg
sub
cmp
daa
mov
stos
xchg
inc
je
fs
lods
cmp
or
or
test
loope
jge
lret
lock
jecxz
xchg
pop
call
sahf
push
cmc
rol
xchg
mov
movsl
sarb
shll
icebp
xor
sbb
or
daa
std
movsb
pop
aaa
mov
imul
cmp
in
sbb
cmc
dec
inc
inc
repnz
inc
inc
push
cmc
and
mov
push
in
fimull
fildll
mov
fcoms
aam
jns
outsb
test
jmp
sbb
jp
push
mov
mov
sub
sub
dec
xlat
mov
sbb
jge
lahf
inc
rcrl
push
lods
and
in
inc
fbstp
sbb
xchg
inc
jl
outsl
adc
je
adc
pop
push
sti
aas
dec
jge
dec
pop
aas
icebp
mov
cltd
mov
mov
popf
mov
push
and
adc
or
hlt
enter
lock
mov
fistl
lock
stos
mov
pop
sub
stos
dec
aaa
out
add
fimull
push
cs
add
sbb
mov
mov
sahf
stos
mov
xchg
push
cltd
pop
xor
mov
push
mov
inc
cmp
cwtl
pushf
sub
cmpsl
lock
in
jns
or
loop
movsl
inc
cs
xchg
xorb
pop
sbb
loop
cmp
out
lahf
and
ss
mov
bound
adc
das
jge
xchg
int
in
ja
add
pop
mov
xchg
test
cmp
pop
jnp
idiv
jno
les
in
fstpl
sbb
mov
jp
pop
sarb
leave
popa
fnsave
imul
insb
clc
mov
shlb
ret
pop
push
mov
in
test
in
daa
pause
inc
push
pop
lret
mov
mov
push
stos
lods
popa
add
popa
mov
popf
inc
adc
add
cmp
jb
jne
cmp
imul
les
bnd
jo
out
loope
pop
and
ljmp
or
adcl
xchg
sbb
sub
jae
rol
js
outsb
jae
test
mov
mov
and
popf
stos
std
ds
cmp
out
in
cmp
cwtl
lods
aas
adc
cmpsb
push
into
dec
ja
xchg
sbb
mov
sbb
jne
jge
xlat
mov
or
orb
adc
jo
adc
push
jae
nop
shrl
add
dec
scas
decl
xor
mov
fsubrs
add
bound
add
das
scas
call
cmp
popa
sahf
xor
xchg
pushf
dec
or
add
sbb
push
in
push
sbb
pop
ret
sub
pop
popa
xor
addb
adc
lea
and
xchg
repz
dec
dec
cwtl
repnz
push
test
xor
sub
jp
xchg
cmp
mov
fldt
adc
cmc
inc
pop
xor
lret
imull
js
cmp
pop
js
sbb
movd
ss
jg
int
inc
sbb
jmp
jb
outsl
daa
sub
cld
pop
out
mov
cwtl
jmp
leave
pop
stc
xchg
int3
mov
sbb
push
aas
jge
sub
mov
mov
sbb
jne
jl
sbb
cld
shlb
sub
inc
xor
test
sbb
xchg
imul
mov
sub
sarb
xor
add
cltd
push
data16
imul
aam
dec
xchg
insb
cmpsb
cmp
aas
mov
sbb
adc
repz
pop
add
fists
jo
lods
cmp
sub
sbb
test
jp
dec
sub
and
lcall
mov
xchg
mov
lods
inc
mov
pop
cli
xchg
inc
pop
je
sbb
dec
pop
and
cmp
jmp
dec
fistpll
cli
scas
xor
xor
clc
and
adc
mov
jle
fwait
and
sub
scas
push
mov
stc
jl
push
fldenv
test
add
inc
ds
push
cltd
push
mov
fnstenv
outsb
mov
testb
xlat
adc
adc
mov
js
or
test
hlt
mov
mov
jne
and
lret
orl
jmp
xor
jle
xchg
sbb
ss
pop
test
sbb
push
mov
push
outsb
je
out
lods
mov
adc
pop
adc
and
add
lret
addr16
fldcw
cs
jmp
outsb
sub
xchg
xor
xor
sbb
mov
sbb
or
xchg
ds
hlt
inc
fidivs
icebp
pop
data16
std
pop
mov
pop
sub
sub
ds
test
je
fildll
icebp
dec
push
cld
dec
fsubrl
mov
outsb
adc
dec
sub
loopne
stc
push
inc
or
ljmp
push
sub
fcompl
adc
cld
enter
sahf
ror
daa
cmp
adc
push
mov
bound
pop
mov
fstl
movsl
cmp
and
movsl
cmp
push
andb
mov
jne
in
inc
jp
shrb
mov
mov
mov
mov
aad
add
mov
outsb
aaa
repnz
sbbb
aad
outsb
outsl
mov
ret
push
das
dec
or
nop
scas
xor
insl
lcall
imul
aaa
sahf
and
clc
jg
loope
dec
loop
orb
ljmp
pushf
popa
loope
mov
adc
jecxz
mov
cs
popa
and
lods
rcrb
pop
and
jae
push
aad
and
rcll
xor
je
mov
sbb
inc
mov
mov
out
inc
xchg
push
dec
rcll
in
fwait
cmp
jge
xchg
addr16
sub
push
and
xchg
adc
xchg
mov
push
call
lcall
lds
inc
inc
daa
fiadds
sbb
inc
das
fsubl
sbb
fisttps
adc
inc
in
loop
jecxz
and
sub
in
andl
cmp
test
aaa
aas
setae
clc
fcmovnb
daa
bound
sub
pop
xor
mov
daa
mov
ss
inc
cmpsl
int3
ljmp
icebp
adcl
ror
inc
sahf
sbb
fsubrp
test
repz
stos
aaa
push
add
xchg
adc
ds
pop
jno
and
pop
pop
fsubl
xchg
xchg
mov
das
push
in
push
push
mov
push
insl
jae
or
nop
cmp
fists
xor
or
orb
push
cli
and
xor
shr
cld
inc
xor
jle
sbb
arpl
stos
inc
or
mov
jge
leave
pop
push
and
loopne
cltd
loop
inc
mov
icebp
xchg
imul
popf
mov
cmc
push
mov
dec
sahf
sbb
sti
push
in
fldenv
xor
cli
dec
scas
xorb
sub
repz
data16
xchg
in
sub
cmp
test
pop
dec
jae
pop
outsl
das
rcll
dec
cltd
add
lds
call
push
xor
push
jne
mov
loope
and
inc
adc
out
xchg
jbe
out
adc
adc
mov
jo
lods
jmp
ret
xchg
imul
cmp
jecxz
subb
call
test
mov
js
test
mov
cmpsb
les
xchg
jbe
scas
nop
scas
cwtl
and
inc
dec
test
pushf
inc
pop
into
sbb
dec
out
inc
sbb
movsl
xchg
push
xchg
int3
fs
add
outsb
jae
mull
lret
mov
push
iret
jg
fxch
and
shl
sbb
shll
nop
aas
into
push
jge
cmpsl
jnp
push
in
pushf
insl
ja
iret
divb
enter
inc
sbb
mov
shll
lret
xor
mov
cmpsb
in
add
mov
gs
stos
pop
fidivl
push
push
and
sub
push
jno
pushf
and
addr16
cmp
jb
mov
pop
sahf
mov
bound
mov
push
lcall
imul
subb
pop
mov
dec
mov
into
and
pop
test
pushf
fnstsw
frstor
aad
push
push
mov
shl
pop
outsb
loop
jp
lock
mov
fimuls
es
jne
jp
jmp
cmp
push
int
mov
xor
pop
in
dec
jg
and
jg
and
cwtl
adc
cmp
and
jno
outsl
sub
loopne
lea
mov
aas
aam
push
lods
mov
add
shrb
test
dec
sub
dec
frstor
cli
cmp
or
pop
lea
jmp
into
cmp
sub
icebp
cmp
and
push
mov
outsb
mov
lcall
push
or
mov
mov
sti
shlb
xor
jo
fidivl
xchg
adc
xchg
js
cmp
jge
inc
cld
inc
jge
insb
aad
pop
mov
testl
xor
sahf
and
pop
dec
loopne
clc
mov
push
xchg
ljmp
lahf
mov
movsl
sub
aam
cmpsl
sbb
xor
push
add
xchg
pop
insl
add
test
fcompl
push
aas
pop
cli
cli
lods
and
fs
push
scas
loopne
fdiv
stos
push
xchg
fs
inc
scas
sti
fildl
push
into
cltd
in
jecxz
outsl
mov
lahf
shlb
sbb
or
aaa
fists
mov
je
pop
ds
or
jns
pop
in
dec
pusha
pusha
shrl
add
and
mov
xchg
in
xor
clc
inc
bound
mov
sbb
sub
fdivrl
repnz
enter
lret
addr16
aam
add
and
arpl
imul
xchg
cmp
pop
movsl
data16
in
mov
sbb
outsl
add
jae
test
xchg
adc
insb
int3
cs
filds
xor
sbb
and
cmp
xchg
mov
mov
mov
adc
daa
hlt
cmp
scas
xchg
lods
mov
addr16
sub
iret
aas
loopne
in
aad
es
cmpsb
dec
stos
jg
jg
mov
pop
xchg
dec
fcmovu
jmp
push
xor
enter
sahf
mov
inc
std
iret
leave
inc
hlt
push
fisttpll
pop
cmpsb
imul
std
inc
cltd
les
lret
fs
pop
inc
add
mov
pop
iret
push
xchg
ljmp
pop
out
lret
pusha
jmp
jbe
add
dec
mov
shr
sub
jbe
aaa
dec
jge
shr
cmp
and
cmp
rcll
cmp
outsb
in
xor
stos
inc
movsl
mov
add
iret
jle
inc
xchg
jecxz
and
sbb
call
lret
movsb
sbb
int
das
maskmovq
testl
sub
es
adc
std
pop
jp
aam
fstpl
push
xor
mov
out
loopne
push
mov
xchg
mov
ja
es
mov
push
jle
pushf
cli
in
test
mov
add
loopne
or
rorl
pop
in
adc
jle
mov
test
out
jp
sbb
xchg
imull
adc
iret
in
loop
mov
adc
out
xchg
add
jne
sbb
orl
cmp
push
lods
fldl
and
and
mov
sbb
aad
jmp
sbb
sub
jg
jg
jp
jnp,pt
jo
dec
loope
inc
xchg
cs
adcl
cmc
jl
loope
cmp
in
cmpsb
sub
fsubl
lea
stos
jmp
insl
add
pop
aam
aas
mov
imul
insb
stc
adc
pusha
stos
mov
pop
mov
dec
add
jne
or
jne
nopl
cmp
das
add
andl
inc
and
lahf
push
faddl
dec
dec
das
lret
xor
or
loopne
in
test
shrl
add
mov
shl
adc
clc
inc
add
or
xchg
daa
sbb
adc
in
pushf
and
inc
inc
testl
pop
pushf
mov
mov
pushl
fistpll
adc
into
inc
movsl
aas
mov
js
xor
xor
push
js
out
jb
sarb
push
push
pop
push
cmp
pusha
cmp
dec
fwait
jecxz
out
in
jne
cmc
cmp
adc
sub
xchg
adc
push
es
adc
jg
dec
sbb
jg
outsl
aam
in
add
roll
cmc
inc
push
mov
aaa
icebp
cmp
int
std
jge
aaa
into
sbb
movsb
hlt
inc
insb
pop
movsb
and
stc
sub
shr
nop
sti
mov
mov
jbe
insl
xchg
cmpl
ja
aas
outsl
mov
push
inc
int3
shlb
stos
orb
mov
inc
sub
daa
scas
call
or
sahf
clc
sub
mov
dec
fstl
es
xor
cs
xchg
subl
aad
or
lods
out
pop
insb
and
scas
aad
jnp
addb
jb
adc
dec
push
pusha
imull
xchg
xchg
jb
jle
mov
jg
pop
aad
bound
popf
push
stos
mov
repnz
addb
jecxz
fidivl
leave
repnz
pop
jbe
inc
add
pop
sub
sbb
cmc
adc
jbe
xlat
sub
add
pop
fidivl
pop
dec
mov
shlb
mov
mov
js
add
or
lret
outsb
mov
bound
xchg
xchg
inc
adc
sti
ret
xor
pop
rcr
sub
jno
dec
ja
shll
mov
test
fwait
dec
inc
jns
jmp
divb
or
sub
xor
inc
push
cmc
ljmp
test
sarl
popa
jnp
mov
pop
dec
fistpll
sub
adc
ss
inc
sub
movsb
sub
mov
ja
iret
mov
cwtl
add
or
xor
mov
xchg
and
push
and
dec
inc
sub
cli
push
xchg
test
add
js
sub
test
test
daa
subb
scas
sti
xchg
and
xor
and
add
and
loope
fistps
adc
popa
jae
cmp
lcall
in
xchg
pop
xchg
loope
or
notl
daa
mov
mov
ljmp
cmpl
and
cmp
popf
mov
mov
cmpsb
and
mov
dec
out
stos
push
out
enter
lods
and
sbb
or
cld
inc
mov
xorb
loop
dec
add
xor
push
dec
adc
adc
fs
and
add
imul
push
out
mov
in
pop
dec
mov
push
inc
push
fisubrl
mov
fwait
mov
test
mov
dec
dec
push
shlb
nop
sbb
push
or
stc
mov
stc
or
sti
test
lret
jne
cmp
popl
dec
xchg
xchg
push
mov
fsubp
add
xchg
out
enter
or
fsubrl
add
pop
adc
cs
xor
dec
or
sub
cmp
xchg
outsb
sbb
mov
or
mov
mov
push
into
inc
fstpl
lock
les
inc
decb
xor
lods
fistpl
sbb
leave
js
push
push
movsb
sub
lods
nop
adc
int3
xor
pop
mov
pusha
add
sbb
ja
lcall
mov
push
mov
cmp
cmp
mov
shrl
mov
xchg
test
mov
iret
je
leave
mov
iret
mov
inc
cld
push
insl
push
stos
push
sub
jno
pop
pop
or
jnp
jg
or
push
fwait
sbb
cld
into
sbb
in
imul
inc
scas
insl
sbb
out
sbb
popf
add
shlb
xchg
addr16
dec
jmp
mov
out
popa
jmp
push
adc
sub
and
out
lds
enter
mov
lahf
jg
and
fisttpll
push
outsb
ds
dec
or
out
sbb
sub
lcall
and
lods
inc
fcmovu
daa
inc
dec
aam
fsubrs
movsb
dec
lods
xchg
jge
ja
fimuls
scas
jle
adc
xor
ljmp
dec
subl
insl
or
add
mov
repz
cmp
aam
dec
jne
mov
mov
mov
aad
aas
fwait
bound
fisttps
lahf
test
test
lret
stos
dec
arpl
mov
and
nop
cli
or
int
sbb
les
aad
pop
xchg
stos
les
mov
cmp
add
push
or
add
cmp
outsl
adc
sub
dec
gs
inc
es
imul
sbb
mov
fcomps
loopne
push
or
xchg
cmp
fcoml
daa
mov
loope
fldl
hlt
inc
int
negb
mov
pop
xchg
sub
cmp
sub
and
add
stc
jp
adc
xchg
sub
xchg
adc
sbb
xchg
in
inc
pop
mov
mov
dec
dec
ss
call
mov
daa
movsb
stos
in
push
rorb
fs
inc
leave
dec
loopne
cmp
outsl
and
dec
or
inc
stos
inc
addr16
ret
icebp
mov
lret
test
mov
push
test
pop
or
add
inc
sbb
xor
hlt
adc
lret
sbb
fsubl
push
sub
xchg
loopne
popf
out
sub
jbe
movb
not
cmp
subl
sub
and
xchg
sub
je
ss
adc
mov
and
or
add
adc
add
xchg
clc
test
push
in
mov
sahf
nop
inc
cmpsl
add
stos
xchg
repnz
std
cmpsb
cmp
fdivl
loope
ss
pop
addr16
sub
imul
pop
and
dec
lock
jmp
mov
xchg
push
test
fildl
int
xlat
mov
fistl
or
pop
pop
xor
ficoms
leave
sbb
insl
jo
enter
jbe
push
dec
enter
xchg
push
pop
sete
sbbl
pop
sbb
addr16
aam
sub
sub
pop
mov
inc
jp
ja
adc
sub
ds
cmpsl
les
ds
mov
mov
pop
clc
jb
jl
sahf
mov
dec
into
popa
pop
shlb
cmpsl
in
xchg
stc
hlt
sub
sbb
mov
rcll
and
jae
pop
sbb
pop
xor
push
dec
dec
inc
lret
pop
adc
and
xchg
sbb
in
movsl
mov
or
ret
xchg
in
cmpsl
orb
cs
push
repnz
push
gs
mov
inc
scas
xor
mov
arpl
divl
repz
inc
sub
scas
push
inc
jno
fistps
orb
imul
ja
sub
dec
inc
das
mov
mov
mov
sarl
add
or
ret
in
lret
sbb
imul
add
rcrb
inc
mov
cmp
fcmovnb
xchg
testb
fsubp
dec
shll
cld
imul
in
cmpsl
xor
das
stos
stos
pop
mov
pop
cmpsb
daa
cli
mov
sub
int
push
js
es
pop
cmp
pop
push
icebp
lods
mov
bswap
aad
push
movsl
sbb
leave
dec
and
stc
out
fstl
mov
lahf
es
test
stc
xchg
sub
loope
negl
into
lds
cmp
pop
and
imul
add
shll
mov
cmp
iret
popa
stos
xor
adc
mov
aas
aad
lock
sets
scas
fsubl
leave
fldcw
xlat
push
cltd
negb
pop
popf
pop
xor
mov
fidivrl
adc
idivl
imul
add
sarb
xchg
pushf
inc
mov
fstps
or
ljmp
scas
enter
add
sahf
loope
mov
adcb
pslld
mov
sub
into
data16
mov
xchg
data16
fucomp
push
xor
repz
nop
icebp
add
jge
stos
push
ja
insl
mov
xchg
pop
pop
dec
pop
xor
lcall
je
push
fisubs
fs
xorl
subl
repnz
hlt
mov
dec
je
or
ljmp
jle
mov
dec
pop
sbb
pop
lret
dec
scas
mov
lods
mov
xchg
mov
aam
push
shlb
out
mov
fisubs
shlb
push
mov
cmp
inc
pop
stos
std
in
dec
dec
push
shlb
sbb
push
mov
enter
sbb
loop
ljmp
das
xor
push
cmpsb
mov
in
pop
lret
arpl
sbb
imul
cmp
iret
xchg
xchg
rcl
int
pushl
xor
adc
or
and
mov
ficoml
adc
inc
jbe
jl
mov
add
sbb
popa
fcompl
cmpsl
in
push
rolb
xchg
lret
in
push
fbstp
mov
cld
jecxz
push
es
mov
push
lock
arpl
jge
sbb
pop
notb
mov
dec
jecxz
cmp
mull
out
test
mov
ffree
xchg
cmp
mov
cmp
xorl
lock
outsb
or
xor
popa
sbb
andl
cmp
fstps
mov
bnd
daa
stc
push
mov
popf
cmp
xchg
xlat
repz
aad
push
push
mov
push
xchg
push
or
repz
mov
cltd
in
cwtl
ret
mov
push
pop
mov
cmp
jp
sub
sbb
inc
call
jp
jl
jbe
shlb
imul
sbb
mov
mov
in
add
and
cmpsl
and
cs
mov
ja
repz
push
lock
sbb
fwait
jg
sub
in
dec
push
inc
mov
daa
sbb
fmuls
mov
jb
inc
fistps
sub
adc
push
lret
sar
lret
bound
mov
arpl
incl
lcall
popa
orl
adc
js
pop
jne
xorb
cmp
movsb
mov
mov
ficoms
add
iret
mov
data16
mov
into
mov
out
imul
das
cmp
xor
cmc
sub
pop
jo
and
mov
int
mov
and
subb
or
jecxz
push
jns
mov
ljmp
sbb
repz
sub
aam
rcrl
fidivs
fsubl
rcpps
inc
rcrb
fstpt
adc
rcrb
push
add
in
sti
pop
cli
xlat
cmpxchg
icebp
pop
stos
stos
and
xchg
inc
ss
xor
ds
shrl
adc
mov
dec
pop
aaa
mov
sbb
popa
lods
test
ds
lock
pop
out
pop
aad
sbb
dec
cwtl
cs
std
sbb
and
rcrb
rcrl
cld
popf
inc
or
mov
lock
jne
sbb
fsubrl
dec
pop
jl
mov
cmc
jns
cld
and
jge
lahf
sub
cld
out
clc
sbb
add
xor
scas
mov
jecxz
sub
dec
out
cmp
push
call
adc
gs
in
in
push
sbb
add
mov
mov
enter
add
lcall
out
jo
pop
mov
adc
jp
out
les
pop
add
cmp
mov
insl
js
pop
stos
dec
imul
adc
push
vmread
test
lret
adc
jo
cs
xchg
insb
add
sahf
in
rclb
mov
out
lret
repz
stos
sbb
mov
jo
dec
adc
mov
mov
pop
jbe
test
jnp
rcr
in
pop
add
fnstcw
addr16
decl
repz
and
jecxz
out
push
pop
sub
sub
dec
out
inc
out
mov
push
jl
sbb
ret
pop
call
addr16
mov
ffree
hlt
fnsave
insb
inc
and
incl
mov
adc
inc
mov
es
stos
lret
stos
fldt
lret
push
cmp
clc
xor
imul
cltd
mov
cwtl
scas
and
addl
movsb
mov
and
repz
inc
fstps
adc
fnstenv
ljmp
jno
nop
cmpsb
and
lds
sti
and
mov
imul
xor
mov
fisubl
xchg
pop
test
cs
fistpl
inc
fldt
pop
out
inc
and
js
ljmp
mov
sbb
rcll
scas
test
ss
loopne
pop
add
jo
and
pop
push
jp
inc
scas
inc
stc
pushf
jg
rcll
loopne
daa
pop
out
xchg
or
pop
in
sbb
mov
sub
lcall
xchg
inc
fldl2t
jno
aad
sub
cmpsl
mulb
inc
dec
mov
xchg
popf
movsl
lcall
popa
pusha
jl
sbb
dec
pop
repnz
cmp
lcall
xor
into
es
fcmovnbe
outsb
dec
cmp
cmc
mov
das
add
lock
mov
adc
jo
es
ffree
mov
fs
jae
inc
or
lock
aad
adc
adcb
shrl
insl
fcompl
push
hlt
mov
aaa
and
into
mov
pop
mov
aas
loopne
push
lahf
and
sbb
cltd
fwait
jae
lahf
jg
inc
nop
arpl
test
scas
aas
leave
pusha
mov
lds
popf
aaa
test
xchg
mov
nop
sbb
ds
jecxz
jmp
adc
out
ret
or
push
lea
pop
add
cmpsb
shlb
pop
cmc
xor
sbb
imul
mov
mov
and
into
arpl
push
cmp
push
mov
add
aas
inc
and
nop
cmp
cmc
mov
arpl
dec
adc
mov
push
mov
dec
faddp
jp
adc
mov
pop
lods
and
sbb
incl
stos
mov
inc
jb
pushf
mov
add
pushf
xor
cmp
push
add
cmpsl
rclb
mov
shlb
add
incb
or
cmp
mov
sub
cmpsb
lods
pusha
movsb
fimuls
jae
cmp
xlat
out
cltd
rcrl
loop
add
add
stos
movsl
xchg
insb
rorb
adc
imull
mov
mov
xchg
push
mov
lcall
jge
and
fists
dec
fld
ja
fists
sbb
add
mov
fs
aad
outsb
mov
lret
jne
aad
movlps
adc
imul
mov
int
bound
iret
pusha
mov
enter
ret
daa
sub
stc
ret
out
daa
fidivs
hlt
cs
jl
repnz
mov
pop
call
lret
dec
mov
mov
mov
add
frstor
lock
fwait
push
call
sub
repz
fwait
inc
insb
adc
jecxz
inc
jne
cwtl
bound
sbb
dec
ds
push
sahf
push
cmp
push
adc
and
scas
je
pop
cmpsb
seto
subl
sbb
and
dec
mov
or
data16
mov
out
or
jge
push
outsl
pop
icebp
inc
xor
pop
loope
xchg
mov
sub
mov
arpl
leave
lock
push
dec
sub
sub
iret
shrl
jb
lods
into
shrl
fdivr
sub
out
sahf
adc
sbbl
cmp
jge
shrb
mov
filds
push
mov
or
cmp
mov
fildl
dec
xchg
adc
push
cmp
xchg
push
movsl
paddd
cmp
inc
mov
shrb
fstl
test
sub
and
push
addb
jge
jmp
jae
pusha
xchg
fcoms
push
outsb
push
aaa
jb
pop
cli
inc
stos
pop
jns
mov
dec
in
aas
fcoms
xchg
or
and
jbe
jmp
nop
mov
lds
adc
imul
add
pop
adc
cmpsl
std
jnp
pop
lods
push
das
jmp
das
inc
mov
fldenv
mov
mov
mov
out
xor
jno
pop
sub
lea
xor
in
sarb
push
cmc
or
mov
add
sub
adc
pop
pushf
cli
jbe
shr
dec
jae
clc
mov
arpl
hlt
pop
andb
inc
or
adc
push
jbe
mov
mov
les
mov
loope
mov
sbb
ja
add
jns
jo
leave
loope
jae
cmp
mov
push
sub
mov
mov
repnz
add
push
jmp
pop
aaa
subb
ret
outsl
cmpsb
sub
inc
mov
mov
mov
mov
mov
andb
mov
jg
inc
scas
clc
clc
xchg
std
sbb
fadds
mov
out
aas
int3
pusha
das
das
icebp
add
push
bound
and
insb
lock
test
cmc
outsb
orb
lea
ja
pop
clc
mov
popf
lods
or
shl
dec
jo
outsb
or
inc
testb
js
repz
mov
mov
enter
mov
add
mov
pop
pop
dec
out
data16
repz
inc
and
rcr
jb
cmp
and
pop
xlat
push
movsl
sarl
lods
push
xchg
aaa
pop
xor
fidivl
scas
daa
mov
mov
sahf
mov
dec
in
mov
cmpsb
in
jmp
incb
test
xchg
sahf
enter
test
int
cmp
int3
adc
into
je
xor
andl
adcb
inc
xor
sarl
inc
adc
mov
cs
mov
lods
repnz
test
or
mov
subl
frstor
xor
js
pop
in
pop
push
jp
and
fnsave
inc
je
mov
cli
inc
fcom
mov
mov
out
mov
push
or
push
or
xchg
into
pop
xor
aad
or
testb
cmp
push
sub
es
jne
bound
aad
and
lahf
clc
mov
sub
lret
add
xor
or
xchg
sub
nop
dec
dec
mov
xor
adc
stos
mov
lahf
and
and
rcll
aam
push
push
mov
movsl
popa
enter
push
js
pop
stos
sbbl
sarl
test
sbb
aaa
dec
mov
dec
outsl
rcr
cmc
inc
popa
sub
mov
push
in
xor
mov
mov
and
inc
sbb
test
incb
shrb
sbb
fbstp
xlat
lods
xchg
inc
test
sub
dec
add
filds
cltd
test
pushf
sub
out
xor
addr16
mov
ficompl
pop
lahf
cs
dec
gs
xor
sub
mov
gs
dec
negl
mov
mov
cmpsb
sub
mov
shrl
out
popf
and
orb
and
inc
push
mov
imul
add
xchg
or
test
push
icebp
xchg
pop
rcl
hlt
add
cmpsl
lea
aas
add
int3
pushf
xor
mov
roll
mov
fisubl
xchg
ja
shlb
xchg
fsubs
and
ret
shrb
negb
int3
add
mov
pop
sahf
int3
and
js
cli
mov
test
jmp
mov
adc
pop
sub
cltd
pop
jbe
out
out
mov
fisttpll
or
fcoml
stc
and
jo
push
rorb
fsubl
jnp
dec
enter
ret
jge
cmp
je
push
imul
test
fsincos
xchg
fistps
sub
test
or
aaa
inc
in
xor
test
idivb
push
ja
out
movsb
mov
std
adc
inc
xchg
cmp
inc
push
stos
cmc
push
add
ret
call
aas
dec
dec
fmull
dec
les
sarl
addr16
push
das
fidivrl
sahf
inc
mov
mov
dec
xchg
pushf
stc
aaa
ret
sbb
inc
jle
xchg
outsb
xor
sahf
mov
callw
mov
or
es
pop
xchg
cli
cs
sub
movsb
adc
mov
faddp
xlat
or
pop
test
xor
push
cwtl
stos
xor
es
and
adc
lock
mov
or
or
push
cmpsl
jge
add
adc
pop
sub
fs
lret
cmp
dec
adc
or
xchg
mov
dec
push
lds
sub
hlt
aas
add
push
or
and
cmpsb
mov
or
and
mov
jl
mov
and
ret
inc
aaa
movsl
add
and
lret
cmp
in
cmp
ret
in
enter
negl
jge
sub
outsl
out
shr
and
add
iret
cld
sub
icebp
and
jno
js
mov
pop
stos
jne
ss
popa
dec
cli
loope
stos
lahf
hlt
and
inc
adcl
jns
or
mov
xchg
insl
pop
sub
fwait
mov
adc
or
aaa
dec
mov
xchg
mov
inc
and
ja
fs
stos
mov
pop
mov
adc
inc
pop
shlb
pop
lcall
xchg
out
shrb
mov
fwait
cmpsl
icebp
fsubl
int3
pop
cmp
mov
jle
scas
sub
ja
imul
std
fldcw
scas
push
jo
shrb
jb
cwtl
dec
adc
sub
imul
xchg
shrb
xchg
scas
mov
or
xchg
adc
jns
leave
out
popf
sub
push
out
scas
inc
sti
les
fmull
mov
dec
inc
lahf
jne
out
popf
jp
lods
inc
mov
mov
mov
mov
xchg
int
mov
int
mov
mov
jmp
adc
mov
push
repnz
lret
sti
adc
push
dec
mov
pop
scas
add
cmpsb
xor
shrl
lds
add
fdiv
and
inc
sbb
cmpl
pop
jb
xchg
inc
loope
lock
sbb
mov
outsl
add
push
pop
cltd
out
lahf
aam
sti
dec
dec
add
mov
adc
inc
in
fdivrp
jg
sbb
lret
add
xor
mov
jecxz
and
aas
ss
daa
faddl
inc
lock
gs
inc
into
cmpsb
imul
aam
out
inc
arpl
stos
mov
mov
addr16
mov
sbbb
jo
cmp
adc
dec
mov
or
insl
push
lcall
ja
jno
pop
mov
xchg
cmp
jle
and
jmp
xor
jb
out
adc
std
lods
jl
sahf
cmp
dec
aas
cmp
test
add
lcall
xchg
inc
stos
cmc
cmp
in
test
adc
dec
out
sbb
xchg
ret
add
lcall
mov
pusha
inc
push
in
and
and
enter
gs
xor
ja,pn
or
add
add
inc
sub
inc
test
push
push
je
mov
add
fsubrs
jo
sti
mov
sbb
xlat
shll
adc
loope
addr16
fisubs
stos
lods
xchg
mov
xchg
lcall
nop
mov
mov
ja
loopne
into
lahf
sub
jecxz
cmpsb
adc
cli
aas
mov
and
mov
mulb
jp
in
in
jg
cmp
cmp
stc
pop
cwtl
mov
andb
pushl
enter
dec
jmp
pop
cmp
adc
shrb
sub
jno
cmp
ret
rol
sub
mov
cmp
cmpsl
fnstenv
pusha
jnp
push
jo
pop
push
jnp
aad
xor
fs
fcoml
lret
outsb
movsb
cmp
add
mov
pop
mov
shll
sub
inc
dec
sbb
rolb
pop
cmpsb
push
xor
ja
xor
pop
jmp
sub
xor
cmp
popf
xchg
jae
xchg
jae
push
movsl
sub
mov
hlt
push
icebp
adc
enter
ds
mov
fsubs
xor
and
dec
jo
sahf
leave
sub
xchg
popa
out
xor
xor
insb
fcmovnb
jge
mov
test
popa
out
xchg
or
sbb
lret
and
push
lock
xchg
xchg
inc
clc
sbb
test
lea
je
add
insb
mov
and
test
in
jo
inc
add
jbe
out
shrl
shrl
xor
enter
scas
and
cltd
out
mov
js
and
sbb
jae
pusha
out
add
inc
lods
faddl
sbb
test
lret
stos
sbb
fsubr
dec
mov
push
outsl
aaa
into
mov
int3
loopne
das
xor
pop
jmp
dec
jecxz
loopne
xchg
mov
in
xor
idivl
fst
loope
add
ret
scas
dec
jge
jge
mov
repz
inc
pusha
cmp
gs
inc
ja
fdivl
inc
lcall
pop
add
mov
xchg
std
xchg
sbb
shl
jno
inc
inc
push
fs
xchg
jno
mov
mov
sub
fwait
ds
inc
out
cmp
ficomps
std
pop
icebp
xor
xchg
rol
faddp
jle
insl
mov
cmpsb
mov
out
mov
mov
sub
fmul
fs
cli
jmp
subb
jb
xchg
imul
adc
mov
mov
pop
xor
pop
mov
clc
dec
and
xor
mov
mov
adc
and
xor
dec
stos
mov
bnd
add
mov
mov
ficomps
mov
add
movsl
je
pop
mov
iret
sub
or
pop
push
inc
sbb
xor
data16
shlb
ss
cwtl
adc
aas
sahf
mov
int3
xchg
and
sbb
mov
shlb
mov
shrb
mov
and
add
mov
icebp
mov
fnstenv
dec
or
notl
pop
mov
pop
out
xchg
sub
pop
addr16
loop
jnp
push
test
pop
inc
mov
fisttpl
push
and
call
stos
test
ja
das
lahf
scas
cmp
push
movsl
jecxz
inc
dec
mov
inc
out
js
cmp
cmc
inc
fdivrs
rolb
scas
push
out
sub
ss
das
loop
ret
inc
lds
out
sub
rorb
dec
mov
cmp
cltd
fsubl
sti
imul
add
sbb
xor
push
loope
into
loop
add
in
inc
pop
test
clc
loope
pop
lock
or
loopne
aad
mov
imul
mov
or
js
out
jg
jae
pop
loop
lahf
dec
hlt
arpl
mov
ror
push
scas
int3
cmpl
ds
outsl
mov
mov
loopne
cmp
stc
push
add
icebp
test
stos
mov
lods
out
mov
js
push
sbb
xchg
mov
les
popf
xor
or
in
rorb
lea
jo
aad
cmc
stc
or
jae
jne
pop
int3
fimuls
iret
and
mov
cmpsb
stos
shr
xchg
xchg
lret
xchg
in
mov
daa
adc
and
add
mov
fidivl
adc
fisubrl
cmpsl
dec
or
jmp
movsb
mov
aaa
mov
call
adc
es
js
les
loope
mov
icebp
sbb
sub
push
popf
mov
inc
decl
mov
or
fwait
dec
ror
aaa
loopw
push
jmp
insl
fimull
mov
pop
jp
adc
sbb
cmp
pop
sti
sub
scas
adc
push
xchg
iret
pop
aaa
sub
imul
xchg
enter
cmp
xlat
xchg
daa
pop
lahf
adc
imul
lcall
push
gs
stc
stos
add
outsb
mov
fwait
sbb
loopne
pop
mov
movsl
stos
sub
cmp
ret
xchg
loop
mov
mov
jp
sbb
xchg
imul
fadd
cs
aad
push
incl
aad
lahf
xchg
pop
sar
pop
fsubrl
push
sbb
ret
aaa
lods
push
lock
andb
inc
fcomps
fbstp
xor
jl
dec
scas
call
mov
sahf
ss
mov
push
mov
fidivl
sbb
rcrb
stc
nop
push
repnz
sub
mov
jecxz
pop
or
hlt
daa
es
lods
sahf
loopne
add
dec
push
scas
mov
loopne
xor
lea
push
mov
loopne
push
push
repnz
pop
jo
mov
fmuls
lods
rcl
adc
xor
push
sbb
sbb
pop
pop
pop
stos
aas
dec
or
addr16
ss
inc
in
inc
pop
bound
aas
cmp
addr16
push
test
push
inc
cld
dec
sti
jg
lods
mov
jo
jle
lock
mov
jb
xor
mov
pop
call
in
push
ret
xchg
dec
pop
shlb
fsubr
mov
dec
fstp
mov
test
mov
in
jnp
js
test
scas
or
and
pop
out
push
xor
sub
sub
and
cmp
ss
mov
pop
hlt
add
daa
test
mov
out
sahf
nop
jae
pop
les
push
fidivl
test
mov
dec
mov
adc
adc
mov
mov
push
dec
mov
pop
sarb
jae
xlat
sbb
xor
mov
cli
fiaddl
ds
scas
mov
xlat
xor
call
add
mov
mov
sbb
movsl
cmpsb
std
shl
mov
mov
xchg
jo
arpl
mov
cmp
loope
or
sub
loop
dec
je
inc
lods
frstor
push
pop
jne
test
add
sbb
jno
ds
repz
adc
sbb
pop
adc
les
lahf
call
jecxz
lods
cmp
pop
lret
ret
lods
or
push
xchg
stos
rcl
jo
inc
andb
nop
add
dec
or
cmp
imul
jmp
jne
pop
ficompl
jecxz
xchg
jmp
fdivs
ljmp
into
sbb
xor
js
inc
loopne
inc
mov
push
loopne
push
jg
das
insl
add
push
sub
lahf
ss
jecxz
adc
lods
inc
pusha
and
scas
pushf
jb
inc
pop
ss
movsl
div
jp
adc
fnsave
out
dec
xchg
adc
lds
out
mov
jmp
scas
sbb
cmp
mov
or
xchg
push
es
jge
inc
stos
scas
fcmovnu
loopne
xor
push
or
push
mov
pop
neg
sub
inc
rorb
xor
sub
lds
push
lea
sub
mov
repnz
jbe,pt
repnz
mov
andb
lahf
cmp
ss
pop
es
cs
pusha
push
xor
mov
mov
sub
xchg
push
lds
or
into
jecxz
add
fsubrs
shrl
lret
int3
in
imul
subl
push
leave
mov
push
mov
idivb
dec
clc
xchg
push
inc
inc
ficoms
mov
xor
push
icebp
jne
fucomi
mov
mov
dec
sti
push
push
push
and
mov
arpl
xchg
pop
sti
repz
sub
cmpsb
inc
scas
cmp
fists
push
test
mov
out
inc
ds
test
cmpsl
rcrb
pop
xor
loopne
inc
adc
fmuls
push
js
enter
or
outsb
loope
mov
push
fsubrs
jnp
xchg
and
in
shrl
fists
ss
inc
cmp
adc
inc
push
dec
push
dec
xor
adc
pop
sbb
ds
aaa
lock
pop
jns
icebp
adc
movsl
jl
je
jg
in
jl
out
pusha
ficoms
nop
leave
xchg
mov
cmovl
cmpsb
shlb
xor
das
sahf
addr16
repnz
fidivrl
add
scas
or
dec
xchg
mov
imul
adc
push
or
andb
mov
sub
jb
imul
scas
xor
adc
add
add
push
fidivs
leave
movd
push
mov
inc
cwtl
inc
ficoms
jnp
inc
pop
xor
push
sub
xchg
jo
into
inc
push
in
hlt
jp
fsubrs
push
je
add
fdivl
fbld
mov
mov
das
out
out
fmuls
lea
popa
jge
xchg
mov
out
mov
add
daa
inc
dec
pop
mov
lea
xchg
daa
jp
adc
fwait
scas
inc
int
jb
inc
mov
out
addr16
and
inc
shll
inc
lret
in
mov
inc
push
jne
out
dec
mov
rcrl
mov
dec
adc
pop
ret
xchg
xchg
push
je
out
std
popf
jb
xor
ss
push
dec
pop
sub
push
jns
dec
ret
add
shl
adc
cmp
xchg
rcrb
mov
lahf
lea
xchg
pop
jb
stos
aaa
or
push
dec
lock
dec
xchg
sub
arpl
test
jle
imul
pushf
fwait
xor
sub
clc
xchg
inc
jmp
clc
pop
mov
jle
mov
xchg
dec
pop
call
ret
dec
fsubr
jae
mov
aad
dec
imul
aad
pop
imul
mov
popa
pop
andl
inc
jle
mov
dec
push
pop
aam
nop
adc
fisubs
jbe
outsl
xchg
lret
call
cmpl
prefetch
cwtl
out
jbe
pop
cmpsl
mov
adc
and
mov
pop
push
dec
adc
inc
sbb
orb
out
jb
nop
push
scas
inc
inc
fisttpl
cmp
push
imul
and
rorb
cld
popa
pop
dec
fcompl
lahf
cmp
imul
and
push
lea
aaa
lock
aam
adc
movhlps
inc
dec
dec
mov
mov
xchg
ds
pushf
movsl
mov
or
test
fwait
out
ds
bound
inc
mov
stc
scas
jbe
push
in
sahf
lds
mov
repz
dec
xor
pop
push
sar
cli
and
dec
sbbb
mov
fsubl
cmp
push
sub
inc
mov
xor
dec
xchg
fucomip
movsb
test
repz
jae
xor
cmpsl
data16
mov
inc
pop
push
mov
lods
xlat
mov
xchg
inc
jbe
js
ja
fbstp
ljmp
loopne
stos
inc
push
aaa
sbb
enter
stc
nop
jo
dec
flds
sbb
push
xlat
repz
xor
xlat
mov
jge
ljmp
xchg
and
out
adc
sub
sbb
lret
pop
cmpsb
lods
mov
mov
hlt
jo
jl
xor
push
mov
pop
lcall
pop
test
loopne
cmp
cwtl
sub
mov
mov
cmp
dec
cmp
or
in
inc
jae
sub
ss
inc
push
mov
stos
inc
push
fcompl
xchg
enter
jecxz
jg
scas
mov
das
mov
int
push
out
jbe
sub
push
insl
add
ret
sub
push
and
aaa
and
lret
inc
icebp
mov
xchg
outsb
ror
sbb
flds
jbe
and
imul
sbb
dec
jno
xor
icebp
xchg
add
lock
popf
test
subl
inc
mov
bound
jge
cli
and
pop
inc
popf
fs
and
fs
inc
ja
jnp
xor
leave
or
not
xchg
or
mov
adc
inc
adcl
push
jb
or
jp
push
sub
push
xsha256
cmpsb
xchg
data16
pop
cltd
adc
jne
adcb
mov
sub
in
push
shll
sbb
out
jno
fdiv
cmpsb
xchg
jne
test
mov
hlt
add
rorl
dec
cmp
data16
fmulp
stos
es
inc
test
je
add
push
and
mov
mov
imul
movsb
cmp
scas
xchg
push
sbb
or
je
mov
fxch
insl
add
mov
in
cmp
mov
pop
scas
adc
push
ljmp
popa
xchg
mov
or
jmp
sbb
aam
pop
push
xor
xor
pushf
imul
jnp
mov
xchg
dec
push
dec
jae
xor
xchg
xchg
sub
inc
inc
notl
xchg
dec
jns
daa
mov
inc
jns
call
pop
lds
fnsave
xor
jno
inc
arpl
mov
das
out
shl
movsl
add
leave
inc
dec
cwtl
ljmp
inc
fistpl
ficomps
cmp
lods
ljmp
in
add
rcl
push
mov
adc
inc
sti
mov
jg
cmc
inc
or
in
int3
mov
mov
jne
mov
test
xorb
mov
in
jne
or
and
mov
jno
add
mov
jae
push
frstor
movsl
lea
mov
push
or
dec
lods
shlb
ret
mov
xchg
mov
push
and
loopne
jbe
outsb
test
jbe
cli
cmpsb
cmc
xchg
lahf
push
cmpsb
aam
push
stos
dec
jno
push
jg
xor
sbbb
jo
adcb
cmp
loop
dec
push
lods
cs
jb
or
js
mov
xor
dec
cmp
insl
adc
loope
dec
pop
icebp
es
divb
enter
mov
outsl
bound
sahf
leave
xchg
dec
lods
mov
lcall
sbb
js
lods
xchg
nop
push
cs
cmp
and
rcrl
sbb
les
out
cmp
xchg
pushf
stos
mov
mov
mov
pop
mov
jp
hlt
pop
in
xchg
inc
fcmovnb
lds
fnsave
pop
movsb
pop
adc
dec
fists
xor
enter
xor
test
xchg
mov
mov
mov
pusha
in
in
adc
mov
or
add
mov
mov
or
out
out
xchg
lcall
lahf
push
adc
mov
cmpsl
jecxz
mov
js
jmp
js
inc
pop
jb
fwait
push
sbb
xchg
fs
jbe
jbe
jb
test
dec
fidivl
or
popa
loopne
jle
xorl
comiss
fs
mov
cltd
outsl
arpl
mov
lret
test
aad
jl
sub
fdivl
dec
sub
fwait
arpl
rcrl
inc
xor
sbb
cli
mov
dec
jl
push
adc
insl
jbe
push
clc
mov
insl
jg
imul
inc
mov
or
jg
stos
ljmp
push
xor
mov
jbe
xchg
insl
or
aam
inc
xor
fcoml
mov
push
out
shll
pushf
xor
pushf
cli
aad
aaa
test
clc
mov
or
and
jns
pop
inc
pop
stc
pop
inc
lcall
jb
andl
test
sarl
rcrl
fidivrs
jecxz
jecxz
icebp
cmp
out
popf
jle
into
enter
and
aad
mov
loop
and
dec
mov
in
insb
pop
xlat
pop
cmc
push
fdivl
jp
stos
je
sbb
jno
mov
fsubs
mov
or
dec
popa
pushl
imul
dec
insl
mov
int3
fmuls
mov
add
es
xor
dec
bound
mov
sbb
mov
cmp
fdivrs
divl
cltd
aaa
test
mov
cltd
pop
sbb
jg
cmpsb
test
jmp
jle
mov
inc
pushf
mov
pushl
xor
jne
inc
dec
mov
test
fdivp
out
xchg
inc
cltd
mov
imul
enter
ds
sub
inc
pop
push
or
xor
scas
shl
rcrb
rcll
mov
fs
gs
xor
inc
dec
loop
nop
cmp
add
cld
jecxz
mov
xlat
sar
add
ja
inc
les
and
push
movsl
lea
sub
or
dec
sbb
jnp
jmp
push
or
adc
sub
pop
lods
jnp
mov
idivb
fstpt
out
cli
loopne
mov
std
add
sub
inc
daa
inc
jmp
shrl
xchg
or
fsubr
movsl
dec
cmpsb
pusha
inc
xchg
stos
add
test
push
pop
inc
inc
or
ss
sub
push
ficoms
fsub
sbb
dec
inc
sub
jne
idivb
and
add
and
fs
cmp
popa
test
arpl
test
es
cmp
pop
and
into
inc
aam
pop
stos
dec
dec
mov
loopne
sub
jb
mov
sbb
mov
lods
mov
cld
push
addl
sub
pop
jnp
orb
pop
cmp
in
cmpsb
scas
sub
push
pop
andl
adcb
or
sahf
xor
aam
mov
mov
icebp
mov
pop
out
imul
lret
stc
xchg
sbb
int
movsl
ret
popa
stos
pusha
xchg
jb
or
fs
xor
mov
in
rorb
lret
sbb
or
mov
fmuls
xor
cmp
test
cld
push
push
push
xchg
sarl
and
jns
dec
push
les
or
shll
add
cmp
sub
and
fnstsw
sub
test
fidivl
push
gs
sbb
jbe
movsl
xchg
add
mov
mov
call
fbld
xchg
sub
xchg
push
lea
daa
lods
mov
push
mov
mov
and
dec
pop
jnp
xchg
xor
jnp
xchg
jp
add
add
push
stos
popa
pop
and
test
cmc
or
or
test
out
ja
sbb
adc
jle
mov
add
jmp
dec
jns
jae
cmp
scas
add
xchg
jb
call
mov
mov
jns
xchg
xlat
fldt
sub
imul
mov
xlat
mov
ret
ret
xchg
arpl
pushf
shrl
and
dec
xchg
mov
or
out
xchg
mov
lea
lock
lods
add
mov
and
lods
inc
jne
xlat
outsb
mov
cmc
or
daa
gs
lods
jecxz
imul
int
cmp
mov
dec
dec
mov
jl
inc
mov
movsl
inc
pop
fcoml
jbe
nop
cmp
push
lcall
cli
cli
xchg
sub
stc
cld
jae
dec
mov
jae
cli
pushf
ljmp
cmp
dec
loope
popf
mov
adc
or
cmp
in
lock
jo
nop
clc
or
and
pop
cmp
xchg
add
sub
fistps
loope
xor
dec
in
data16
jo
mov
mov
cmpsb
sbb
shr
fcoms
sub
mov
pop
xchg
add
add
adc
fsubs
mov
or
ja
pop
notl
cmp
jns
dec
pop
mov
push
rorl
xchg
sbb
insb
jb
push
pop
and
inc
leave
add
xor
push
push
mov
inc
cmp
push
shl
cmp
cmp
jae
repz
sbb
cld
dec
jle
imul
movsb
sahf
test
rorl
mov
mov
xchg
insb
popa
mov
insb
jnp
mov
pop
mov
mov
or
inc
daa
dec
cmp
test
scas
xor
dec
mov
xchg
sbb
adc
sbb
std
add
cmc
pop
mov
popf
mov
sbb
shll
es
sub
add
test
add
cmp
xchg
scas
decb
loopne
and
mov
leave
cmp
pop
add
fiaddl
push
pop
call
fcomp
xor
lret
xchg
in
clc
daa
aas
push
or
mov
std
lods
fs
mov
push
fxch
inc
push
sahf
inc
repz
dec
mov
outsb
xchg
mov
or
mov
mov
push
icebp
sbb
pop
pop
scas
push
sub
xchg
push
ret
lock
ja
insl
add
adc
and
jmp
aaa
xor
push
xchg
pop
dec
aad
and
and
lods
pusha
std
es
push
mov
dec
lret
ds
je
sbb
rorb
loop
and
lea
mov
fidivl
sub
xchg
adc
test
cmpl
nop
gs
inc
mov
roll
pushf
mov
pop
add
xor
sub
ljmp
imul
lock
mov
addb
mov
add
xchg
in
fsubl
ljmp
popf
or
hlt
jp
inc
nop
rorl
jnp
xchg
and
cmp
push
sti
pushf
subb
sbb
les
cli
add
adc
movsl
jnp
jmp
ret
or
imull
mov
shrb
in
adc
mov
fwait
dec
xor
stc
test
loopne
sub
fbstp
aam
and
in
or
arpl
xor
loope
int3
push
pop
repz
adc
addl
call
fidivrl
icebp
jo
scas
dec
inc
in
iret
xchg
sahf
fisubrl
pop
lcall
daa
or
push
fistl
nop
push
aaa
std
testb
mov
lcall
rcll
sub
negb
fidivrl
int
jmp
add
ss
loope
xchg
push
or
mov
ja
pop
mov
mov
jbe
je
and
es
pop
int3
push
and
sbb
fsub
pop
inc
mov
sarb
outsb
sbb
test
xor
jge
lret
addr16
jae
mov
int3
js
mov
mov
sbb
inc
fs
cmp
adcl
ss
add
lea
inc
sti
inc
aaa
mov
mov
in
pusha
sbb
sub
dec
mov
leave
xor
push
inc
xchg
sarl
push
ret
pop
inc
shlb
cmp
cmpsb
adc
lahf
in
push
and
pop
push
mov
jg
outsb
adc
testb
xchg
repz
scas
mov
jge
adc
ret
out
mov
shrl
sbb
sbb
push
ljmp
push
or
dec
ljmp
adc
lods
push
adcb
mov
and
sahf
fmul
xchg
cs
cli
in
cltd
dec
jecxz
mov
mov
add
adcl
and
lcall
add
adc
push
cltd
mov
fsubrs
inc
xor
or
lahf
aam
shl
aam
mov
push
stos
xchg
test
orb
mov
push
dec
dec
fbstp
sub
pop
insb
insb
sub
push
scas
test
pop
pop
or
xchg
dec
or
mov
xchg
stos
sub
into
lds
aad
sbb
pop
iret
fidivrs
icebp
mov
push
push
adc
insb
jae
inc
xchg
xchg
xorb
pop
cltd
jnp
scas
add
loopne
icebp
insb
fisttpl
add
xor
clc
sub
sub
mov
scas
std
inc
sti
ljmp
mov
in
fmull
add
ja
jge
in
mov
mov
mov
sahf
in
std
xchg
push
mov
loope
pop
cmpl
xor
aad
cmc
jmp
jl
mov
test
add
shrl
mov
imul
hlt
mov
mov
mov
adc
cmpsb
repnz
sti
xlat
stos
rorb
push
jp
inc
fiadds
cmpb
sub
nop
and
inc
xchg
jno
sub
out
xchg
lcall
push
fcoml
pop
cmp
mov
and
or
das
jmp
std
push
mov
push
fs
imul
jbe
push
clc
or
sub
sbb
xchg
std
test
push
push
and
je
jo
and
inc
jo
jmp
add
scas
loope
xor
lods
inc
jecxz
sub
lcall
in
icebp
bound
sbb
test
pusha
ja
xchg
mov
rorb
test
pop
ret
ljmp
xchg
test
lds
ss
and
mov
out
add
insb
mov
aad
mov
movsl
pop
fwait
loop
mov
out
and
ret
pop
das
add
in
inc
in
cmp
dec
push
jecxz
jp
mov
sbb
js
mov
dec
std
mov
sub
jns
add
fmulp
and
loopne
cmp
out
ret
jg
or
inc
loopne
cld
pop
mov
add
divl
roll
jle
popf
xor
mov
inc
loopne
or
or
ljmp
loop
ss
ret
lret
and
jo
fs
xchg
or
mov
and
cmp
add
push
pop
mov
test
iret
jp
test
sahf
sbb
inc
cmp
mov
sub
mov
stos
ss
and
sahf
xor
pop
repnz
sbb
adc
cmp
int
jle
adc
xchg
add
push
mov
outsb
cmp
and
gs
nop
xchg
dec
dec
into
lock
jno
sbb
gs
push
jae
daa
out
popf
fnstcw
push
mov
push
mov
stos
inc
lods
in
inc
arpl
into
enter
scas
and
hlt
add
xor
movsb
cmp
repz
sbb
cmp
jmp
subl
rorl
ljmp
sub
and
gs
das
lahf
mov
mov
sub
dec
mov
subb
cmp
dec
or
lock
or
rcrb
cmp
orb
shlb
inc
pop
dec
cmp
nop
xlat
cmc
add
popa
icebp
push
inc
cmp
jne
dec
in
lcall
pop
mov
sbb
mov
and
stos
scas
clc
cld
pop
mov
cmp
jo
fstps
mov
and
jbe
ret
pop
outsb
xchg
jbe
sub
int
mov
stos
push
mov
jnp
push
dec
int
arpl
xchg
dec
inc
pop
mov
lcall
lret
and
dec
popf
roll
mov
add
stc
shl
cmp
out
xchg
and
push
sbb
adc
sti
mov
andl
cld
aaa
mov
insl
shll
fdivrs
cld
push
rcr
ja
ret
fildll
mov
or
xor
cltd
cmp
sbbl
sbb
aam
rclb
cmpsb
shrb
pop
inc
rcll
negl
inc
jecxz
add
mov
adc
inc
mov
mov
sbb
xchg
inc
mov
cmp
outsl
adcl
and
je
pop
cmpsb
push
stos
add
ja
mov
mov
mov
xlat
std
in
sbb
scas
int3
shl
ficoms
inc
push
lds
adc
jg
mov
movb
fnstcw
hlt
stos
sub
ja
out
les
push
movsb
add
ja
mov
dec
sbb
call
les
daa
dec
mov
addr16
cli
add
mov
js
xchg
adc
call
fnstsw
or
into
and
xor
jp
mov
data16
insl
pop
das
cli
subl
into
mov
or
lods
daa
mov
lds
aad
or
sbb
sub
and
push
out
jecxz
loop
or
lcall
fadds
repz
sbb
add
pushf
mov
lea
cmc
adcl
cmp
mov
mov
in
xlat
imul
inc
jg
jb
inc
xchg
rclb
pusha
xor
add
aaa
mov
lods
inc
int3
dec
mov
je
mov
xchg
loope
xchg
in
stos
xor
xchg
out
shrl
mov
rcr
stos
inc
imulb
in
mov
inc
xchg
mov
mov
jmp
icebp
xchg
mov
into
jno
sbb
xchg
add
stos
je
and
pushf
scas
dec
repz
sbb
daa
xor
inc
dec
in
fstps
mov
insb
out
adc
subl
add
out
test
xlat
or
movsb
push
mov
lea
xor
push
arpl
xbegin
rolb
or
jae
daa
inc
xchg
xor
pop
pop
gs
icebp
xchg
sub
aaa
scas
push
inc
cltd
ljmp
out
add
or
mov
into
sub
imulb
daa
lcall
cmp
mov
lods
push
push
or
dec
cmc
mov
bound
test
imull
cli
aam
dec
or
and
aaa
push
out
aas
ficoml
iret
cmp
push
pop
dec
data16
adc
inc
in
test
loopne
aad
or
and
dec
js
xchg
shll
stgi
mov
ds
les
arpl
in
mov
jecxz
cmpsl
adc
xor
addr16
out
sub
xchg
imul
inc
scas
ret
mov
xchg
sti
xchg
hlt
xor
call
and
adc
in
sub
insl
add
push
jecxz
out
lock
add
mov
sbbb
and
pusha
xor
pop
fs
movsb
inc
call
orb
cmp
es
push
and
mov
icebp
jne
xlat
jbe
pop
xchg
dec
sbb
push
jmp
pop
cmp
subl
sub
and
pushf
aad
cmpsl
adc
fistpl
rep
mov
cmpsb
add
xchg
add
movsl
icebp
dec
push
int3
pop
adc
mov
jne
sub
movsb
cmp
rcrb
fiaddl
hlt
add
out
test
jecxz
fwait
addr16
push
mov
mov
loope
fimull
dec
movsb
adc
and
and
cwtl
fsubs
push
rorl
aas
cmc
sti
push
push
inc
hlt
shrl
js
jle
subl
sub
push
sbb
js
mov
pop
stos
adc
dec
test
loopne
dec
flds
sarl
sbb
cmp
push
stc
je
add
add
lret
push
aas
dec
push
mov
mov
mov
cmp
iret
and
test
pop
shl
dec
ficoml
xor
lcall
in
mov
cmp
int3
fdivrl
adc
mov
adc
testl
lret
lret
std
pop
jecxz
mov
iret
cmp
in
adc
jnp
or
aam
push
out
or
bound
sub
mov
ficoms
cmp
and
cmp
add
jmp
mov
sbb
add
in
xor
mov
and
xor
sbb
loopne
and
inc
leave
and
ret
adc
data16
hlt
push
push
xor
arpl
ljmp
and
dec
push
lds
test
aam
repnz
cmp
inc
cmpsl
jbe
mov
add
cmp
in
test
mov
outsb
adc
inc
nop
sarb
lea
mov
in
je
arpl
xchg
in
inc
icebp
pop
xchg
lret
and
out
inc
ss
hlt
mov
or
inc
push
insl
bound
into
inc
ret
in
sub
adc
cmp
lods
hlt
xor
or
fldcw
int3
push
out
pop
insb
sbb
xchg
mov
or
add
rolb
push
sub
icebp
push
push
mov
loopne
sub
xor
jmp
cmp
pop
fldenv
jo
cmc
xchg
add
es
nop
daa
xor
inc
jae
scas
test
lods
aas
sbb
clc
push
jl
adcl
mov
push
mov
out
add
adcb
stos
lea
fcomi
punpcklwd
cmpsl
pop
scas
xor
addb
push
into
movsb
adc
insl
xchg
insl
add
movsb
jecxz
pop
cli
sub
dec
loope
add
xor
add
rcrl
cmp
std
jo
shrl
jmp
insl
stc
popf
ret
push
lahf
mov
xchg
sbb
scas
rol
adcb
fwait
into
enter
add
mov
add
mov
xchg
inc
popf
aad
xchg
pop
mov
and
pop
add
scas
out
dec
dec
or
mov
std
mov
dec
dec
jg
and
push
orl
pop
popa
xor
les
jno
and
outsl
pop
mov
sub
xor
dec
fildl
push
xor
scas
jmp
sti
inc
popf
push
xchg
rcrb
imul
mov
dec
in
lret
xor
mov
jle
jl
pop
ds
aam
add
mov
ljmp
pushf
stc
mov
clc
in
imul
or
sub
pusha
sbb
and
mov
push
inc
push
roll
out
mov
aam
dec
sar
xchg
pop
xlat
pop
loop
ds
sbb
dec
aad
jns
test
dec
sub
jne
sub
addr16
mov
sbb
add
ja
roll
loope
cmpsl
xchg
inc
mov
cmpsl
ret
cmp
sub
es
cld
add
xor
cltd
pop
push
pop
and
enter
aad
stos
mov
outsb
mov
dec
in
mov
nop
shrb
nop
stc
xor
out
movsb
ret
subb
dec
fdivs
in
imul
pop
stos
addb
xchg
sbb
lock
into
adc
jnp
add
inc
pushf
cltd
mov
fs
data16
movsl
sbb
xor
dec
mov
cmp
insl
lea
jge
dec
scas
pushf
lock
lods
test
push
sub
push
add
out
mov
push
or
inc
dec
fwait
inc
push
and
ss
lods
xchg
ss
fs
sub
out
dec
mov
daa
dec
pop
aam
aam
jb
jmp
cltd
in
jno
adc
aaa
lcall
inc
mov
lock
dec
jecxz
or
jb
or
cmp
pop
pop
adc
nop
jg
das
scas
sbb
std
add
mov
stos
mov
dec
iret
shl
cmpl
mov
pop
and
xchg
aad
cmc
pushf
stc
repnz
loope
adc
out
mov
jle
or
aad
loopne
xchg
cmpsl
arpl
fbstp
xor
mov
push
daa
cmp
sub
lret
adcb
mov
ljmp
scas
cmp
lahf
sbb
dec
jb
sbb
sarb
in
push
mov
cmpsl
loop
push
sahf
hlt
out
mov
pop
test
outsb
xor
mov
test
sub
adc
fwait
push
mov
sub
sbbl
or
cld
adc
add
jmp
lret
push
jbe
mov
cmp
shrl
movsl
mov
leave
pop
lock
cwtl
ljmp
pushf
cli
sbb
aad
jmp
cmp
adc
mov
cld
mov
flds
data16
out
add
cmp
and
or
fucomip
mull
icebp
insb
dec
jp
inc
lods
jo
inc
push
dec
push
jmp
aas
int
cmpb
lods
push
pop
xchg
mov
into
fidivl
cmp
loop
bound
fidivrl
mov
in
push
jmp
adc
xor
pop
push
sbb
or
shlb
pop
jle
sbb
or
pop
test
cmpsb
jge
jg
leave
mov
add
pop
out
test
rdpmc
push
mov
das
add
mov
inc
jecxz
test
inc
pusha
stos
xor
shrl
dec
pop
pusha
popl
rorb
xchg
sub
in
jbe
shl
cmp
in
mov
sub
neg
mov
sub
or
test
mov
sbb
mov
push
ja
xlat
dec
in
and
insl
inc
xor
mov
mov
stos
daa
cmp
push
push
mov
into
add
sbb
jle
sbbl
and
dec
movsl
dec
sub
or
cs
aam
jmp
xlat
loop
jge
rcrl
movsb
sti
fucomip
mov
fidivl
in
mov
repnz
xchg
shll
ljmp
push
xor
sub
jo
sbb
mov
mov
xchg
push
in
rorl
mov
push
mov
or
stc
andb
xlat
aas
lcall
and
popl
push
xor
push
jp
mov
jg
ret
xor
sar
pop
dec
or
push
fbstp
insb
or
jns
aam
push
fwait
addr16
xchg
pop
stos
inc
popf
or
pop
cmp
roll
inc
pop
or
hlt
mov
push
sbb
inc
push
jae
imul
clc
pushw
lods
adc
pop
jecxz
bound
fcomps
scas
add
insl
add
shll
and
idivl
cltd
arpl
add
pop
jg
push
jb
mov
adc
sahf
xlat
fadds
pop
ljmp
into
add
out
add
es
or
add
imul
jmp
repz
fstl
dec
pop
or
inc
pop
lods
sbb
loope
jl
subl
xchg
mov
jg
ljmp
xor
pop
or
push
mov
xchg
sub
adc
pop
mov
dec
jns
mov
lock
dec
or
xlat
fdivl
jp
sbb
mov
jp
mov
adc
aad
cwtl
push
adc
mov
sub
div
lret
push
inc
roll
mov
fucomi
dec
xor
dec
cmp
fstl
and
push
ds
sbb
sbb
int3
jg
inc
adc
cs
mov
dec
mov
imul
mov
push
add
adc
shll
add
mov
fld
in
repnz
loop
repnz
nop
push
neg
imul
dec
loop
mov
push
ret
mov
aas
lock
pop
add
push
pop
fs
ficoms
jle
cmp
mov
popa
sub
push
js
mov
and
sub
cmp
enter
pop
hlt
mov
pop
sti
fwait
lea
mov
push
insl
sub
int
jmp
pusha
xchg
je
in
mov
add
adc
dec
enter
jg
out
mov
lcall
fdivs
int3
lahf
push
dec
add
push
jl
push
ret
fwait
xchg
add
rcrb
pop
divb
sbb
test
scas
jecxz
dec
loope
call
push
je
xor
inc
sub
test
aaa
int
lcall
movsb
jge
out
repnz
addr16
or
jae
or
push
test
lahf
pop
sub
aad
scas
sub
mov
mov
jp
cmp
pop
xchg
aas
jp
outsl
lods
test
ds
orb
sub
dec
loopne
jecxz
xchg
sub
push
cwtl
pop
mov
or
out
cmpsl
cmp
lcall
int
push
clc
cmp
sbb
repnz
into
data16
sbb
pusha
mov
mov
push
mov
orb
jno
loopne
dec
push
and
iret
imul
outsl
stc
and
jmp
daa
lcall
dec
nop
int3
sarl
add
cmp
stos
mov
pop
movb
jb
out
in
ja
xor
pop
popf
loop
leave
and
jle
movsb
pushf
out
xchg
xchg
sub
in
scas
aam
in
add
out
push
xchg
popa
lock
test
pop
int3
lret
jbe
out
stos
xor
ja
popa
test
sbb
or
iret
fninit
xchg
fdivrl
gs
fdivp
pop
pop
repnz
ja
leave
test
mov
iret
adc
dec
add
stos
adc
fadd
add
jb
lret
fsubs
inc
and
adc
int
sub
fstl
xchg
push
rcrb
and
push
jp
fdivrl
jg
leave
mov
pop
rep
jno
inc
jp
testb
xor
and
mov
push
jg
repnz
xor
and
ds
lock
and
por
jle
lods
add
cwtl
xchg
iret
pop
outsl
jge
aas
push
out
sahf
repnz
jo
inc
cmp
push
inc
enter
outsl
dec
inc
inc
jp
lds
sbb
lret
adc
push
out
mov
pop
adc
xchg
jo,pn
pop
ret
xchg
stos
xor
test
iret
xchg
adc
xchg
inc
cmp
stos
clc
pop
ja
dec
xchg
insb
mov
sbb
and
dec
cmpsb
rolb
mov
int
fwait
xor
gs
out
les
jbe
cmp
sbb
pop
shlb
mov
stos
push
mov
or
xor
movsb
mov
orb
add
pop
jle
imul
ljmp
push
fiadds
sbb
icebp
fbstp
pop
or
orl
call
jnp
test
xor
pop
inc
bound
mov
and
jbe
ss
outsb
aas
mov
out
leave
pop
sbb
aas
out
dec
xchg
lds
int3
cmp
loop
popa
les
jge
ja
addr16
in
fs
add
cmp
je
out
pop
xor
aaa
outsb
jp
int
ja
xor
pop
popf
stc
add
or
aam
hlt
jp
fs
popa
ror
xchg
mov
stos
jg
jge
adc
test
cmpl
das
aas
movsb
xchg
jl
kandnb
mov
xor
add
outsl
adc
add
jo
in
jp
cmp
adc
mov
sbbl
repz
lcall
cltd
sub
add
push
ror
mov
stos
mov
push
sub
faddl
aam
xor
arpl
and
test
outsb
push
ljmp
call
fwait
leave
xchg
neg
lahf
mov
test
jae
sbb
push
call
imul
sbb
dec
add
mov
cmc
pop
cltd
xlat
adc
inc
push
xchg
js
data16
lret
pop
pop
lods
mov
inc
test
mov
fildl
in
sub
ja
xchg
jo
mov
mov
jnp
adc
jge
ret
sbb
inc
test
sub
cmp
pushf
cli
xor
jp
arpl
scas
in
mov
icebp
dec
movsb
adc
insl
sub
xchg
push
mov
sahf
sub
dec
dec
sub
and
in
ficomps
xor
imul
mov
xchg
fsubrl
push
lea
lods
add
xor
xor
sbb
add
adc
ret
decl
sub
xor
add
shll
cltd
jmp
aaa
sbb
call
jp
push
jb
xchg
sub
mov
jle
xor
or
cld
sub
or
test
ja
fsubrs
lahf
cli
hlt
inc
ja
ljmp
mov
mov
mov
mov
mov
jb
mov
mov
jo
rorb
aaa
fistps
inc
fsubs
hlt
cwtl
jo
adc
or
lcall
or
nop
cmp
and
mov
fisttpl
cltd
cmp
out
fists
adc
xor
std
cltd
mov
imull
stos
mov
negl
ljmp
sub
fildll
xchg
mov
aad
push
pop
repz
xchg
aas
test
cmp
lods
scas
push
pop
stos
inc
mov
mov
sub
test
dec
in
mov
jmp
paddq
push
ljmp
and
ret
jo
push
nop
push
mov
js
lods
push
out
jmp
ja
sti
push
std
mov
das
imul
popf
mov
or
jno
push
sub
sbbb
sbb
xor
sarb
or
xchg
loopne
lods
adc
jno
repz
adc
pop
sbb
xchg
clc
jl
cmp
push
aas
jae
jle
lods
inc
arpl
outsb
aad
dec
xor
sub
or
inc
push
dec
testb
jo
pusha
inc
xor
sbb
jle
aad
iret
mov
add
aam
add
cmc
and
std
xchg
inc
push
ja
shll
xor
xor
cmp
mov
mov
nop
mov
pop
inc
sbb
inc
fnstenv
pop
pusha
ss
cmp
push
addr16
xchg
jnp
lcall
mov
aas
test
lds
mov
mov
push
lfs
fsubrp
mull
scas
add
xchg
xchg
xchg
insb
test
iret
and
cmp
xor
rcr
jo
cwtl
mov
movsb
ret
jl
loop
data16
add
xchg
shl
push
cmp
lcall
out
and
aad
nop
daa
sbb
das
cmp
and
les
cmc
insb
nopl
cmpsb
loopne
popa
sti
cmp
push
cmpsb
ret
int
push
mov
bound
jo
cltd
int3
lcall
xchg
out
mov
mov
sub
mov
outsb
mov
into
mov
jbe
aaa
into
push
inc
jbe
pusha
cld
push
or
or
enter
push
mov
incl
and
mov
hlt
xor
es
negb
adcl
pop
test
in
imull
add
lret
pop
and
je
push
outsl
adc
pop
movb
inc
inc
jb
xsha1
cmpsb
mov
sub
xchg
push
testb
jp
testb
mov
inc
bound
lret
mov
pop
ljmp
push
in
stos
xor
dec
inc
pxor
adc
adc
xor
test
dec
dec
in
or
jne
outsb
fs
mov
outsb
cs
punpcklwd
jns
rcl
mov
jge
lock
pop
xor
aas
add
jo
mov
add
mov
bound
insl
loopne
jmp
mov
and
aam
rclb
jnp
xchg
sub
inc
pop
ljmp
fcmovnb
fs
test
movsl
mov
push
xchg
insl
pop
ficoml
mov
adc
js
cltd
and
xchg
jmp
js
or
incl
sbb
dec
and
rorb
sub
pop
ret
and
mov
addr16
dec
lahf
mov
adc
sbb
leave
and
push
test
mov
xor
jle
mov
imul
insb
lock
mov
jb
popa
pop
shrl
xor
mov
jmp
adc
in
xchg
jno
subl
rcrb
outsb
xor
test
out
xchg
push
or
fiaddl
icebp
dec
and
bound
repnz
adc
xor
jo
adc
out
dec
clc
lret
outsb
ret
or
sub
dec
lahf
jo
scas
test
jb
sti
mov
push
sbbl
insb
lds
xor
lcall
loop
mov
gs
add
cmc
call
pusha
mov
loopne
inc
cltd
icebp
and
and
scas
pop
or
xchg
insb
lds
inc
loope
je
dec
movsl
cs
sbb
dec
sub
scas
stc
mov
gs
daa
add
inc
ds
inc
aas
add
push
and
adc
lods
test
aaa
lcall
sub
dec
dec
loope
add
pushf
aaa
lea
jno
out
jns
fwait
cwtl
cs
leave
mov
push
cmp
cwtl
push
sub
imul
stos
lock
lods
sub
adc
pop
xor
out
sahf
je
xlat
fmuls
and
retw
popa
sub
dec
adc
stc
sahf
push
rcr
out
inc
or
or
in
push
xchg
mov
or
movsl
addr16
push
ds
or
pop
pusha
inc
cltd
jae
into
and
mov
stos
jg
ret
adc
loope
sbb
cltd
rcrl
cwtl
inc
popf
out
mov
std
loope
add
add
bound
jmp
adc
les
sbb
testb
add
sbb
shlb
cmc
cmpsb
fs
stc
mov
or
sarb
std
mov
test
cmp
dec
lret
in
pop
cmp
repz
jmp
sbb
push
movsb
jge
add
pop
fldl
js
fs
jecxz
inc
popf
nop
xchg
jmp
in
sub
popa
data16
pop
test
cmp
dec
mov
out
insl
push
in
pop
out
adc
jg
or
push
xchg
je
aaa
mov
stc
pop
xlat
mov
ficoml
je
jns
test
xchg
scas
dec
push
mov
jge
insl
es
xor
cltd
insb
call
std
iret
movsb
cmp
in
inc
adcb
push
rcrb
bound
push
or
call
or
loope
ljmp
inc
lret
roll
jno
mov
mov
sub
xchg
loope
imul
add
aas
lds
jge
in
bnd
addr16
icebp
xchg
mov
and
mov
les
fwait
jbe
jo
cmovbe
xchg
insb
lds
hlt
lahf
push
loop
jmp
sbb
sub
and
or
lods
pop
jge
fsubrs
sahf
push
test
imul
and
jne
jns
cwtl
jne
lret
inc
and
lret
fcmovnu
dec
pop
xor
in
jmp
enter
movsl
mov
cmc
mov
lahf
jno
add
test
mov
mov
push
sbb
xorb
imul
mov
dec
xchg
mov
sub
push
jl
mov
mov
mov
push
dec
pop
test
and
shll
in
test
add
mov
in
xchg
stos
cmp
sub
repz
pop
or
loop
sbb
xor
popa
xor
inc
pushf
xor
je
scas
xor
mov
inc
int3
adc
jnp
ljmp
pop
int
xlat
jle
mov
pop
jecxz
int3
hlt
cmp
mov
ret
cld
jge
mov
enter
mov
mov
addl
mov
or
test
xor
movsl
arpl
lods
fcoml
aad
cwtl
pop
icebp
leave
xor
xor
shl
jg
add
js
into
mov
inc
or
aaa
test
scas
adc
jp
sub
mov
js
inc
aad
inc
dec
fildll
into
data16
mov
scas
sbb
dec
iret
xchg
adc
jae
sub
outsb
leave
or
mov
sub
mov
ss
dec
pop
or
dec
pusha
add
mov
mov
sub
aad
jmp
or
es
ss
data16
fbstp
fldenv
test
and
ret
inc
adc
popf
and
cmpsl
xchg
mov
pop
lock
fsts
test
mov
shl
mov
push
mov
fmul
flds
xchg
in
arpl
pop
mov
xor
xchg
lahf
pop
int
mov
cmp
pop
fbstp
add
pop
insb
add
dec
nop
mov
sub
pop
adc
shrb
imul
adc
xchg
daa
gs
pop
mov
and
std
cs
sbb
sub
xchg
dec
out
outsb
add
xchg
das
mov
inc
pop
xchg
nop
repnz
jne
sahf
ss
popa
in
mov
inc
jmp
je
xor
xchg
cmp
jle
stc
add
mov
fcoms
popa
outsb
sbb
call
jae
jbe
jne
pushf
subl
mov
insl
add
scas
push
mov
shlb
outsl
imul
aaa
add
jb
fists
out
cltd
xchg
mov
lds
or
repz
aaa
ss
cltd
into
adc
xchg
inc
inc
inc
push
jae
arpl
in
pop
pop
cli
push
imulb
cmp
les
jl
stos
push
add
mov
loope
popf
xchg
arpl
clc
lods
cwtl
pop
mov
call
flds
dec
mov
mov
ds
adc
and
push
out
push
leave
pop
pop
lret
mov
in
mov
repz
push
inc
icebp
insb
or
adc
fwait
cmpsl
adc
aas
jno
data16
jbe
movsb
jcxz
call
ss
jne
mov
ret
jp
shrl
out
inc
sti
les
bound
outsb
mov
in
stc
je
pusha
or
push
mov
lock
xchg
in
or
push
fldcw
or
mov
hlt
ljmp
cmp
sub
rclb
aaa
loop
icebp
je
mov
mov
adc
daa
imul
lea
jne
daa
pushf
lods
push
inc
mov
mov
mov
outsl
pop
sbb
jne
loop
ret
outsl
imul
aaa
inc
pop
push
shl
pop
mov
repz
scas
cmp
aad
inc
push
sarb
out
lea
stos
ret
jp
add
jmp
xchg
xor
dec
loop
stos
fucomip
adcl
mov
ljmp
mov
or
data16
pop
fidivrs
add
mov
push
sbb
lcall
sarl
clc
out
adc
cmp
leave
jg
push
mov
in
jecxz
lock
call
push
movsl
and
jno
push
shrb
add
push
test
push
clc
push
sub
mov
cmpsb
xor
pop
xlat
outsb
push
iret
pop
loopne
aas
cmc
push
int
insb
push
mov
mov
ja
cmp
fwait
out
stc
fmull
dec
popf
shl
addr16
test
in
cmp
out
push
sub
dec
cmp
bound
pop
imul
jno
xor
mov
sbb
dec
push
mull
adc
mov
das
call
mov
jnp
imul
movsl
xor
pop
shlb
mov
xchg
pop
xor
xchg
inc
in
xor
aam
mov
rcll
aas
cmp
or
insl
ret
sub
inc
sub
orps
mov
jae
jp
ret
adc
xchg
in
jp
jg
fidivs
in
fdivl
push
jb
fwait
std
xchg
and
xchg
mov
lret
xchg
mov
lahf
mov
in
andl
fstp
mov
call
arpl
arpl
std
test
or
fnstcw
cs
inc
pusha
gs
fisttpll
xor
sbb
push
pop
inc
push
rcrl
xlat
test
mov
ficoms
addr16
std
and
cwtl
push
adc
shr
mov
pop
outsl
pop
sbb
push
imul
insl
inc
pop
out
xchg
pop
ds
mov
test
ret
iret
mov
pop
pusha
or
shlb
fdiv
push
cld
jo
sub
jns
data16
imul
sbb
lcall
insl
mov
negl
push
mov
rorb
sub
cmp
dec
or
rcrb
add
add
xchg
mov
push
mov
mov
adc
ljmp
xor
ljmp
jno
cwtl
ljmp
ljmp
xchg
mov
les
mov
out
f2xm1
pop
or
pop
sub
popa
adcl
push
dec
shrb
dec
dec
inc
add
add
sub
sub
xor
sub
dec
xor
aaa
lock
or
in
adc
sti
pushf
aad
insb
sub
outsl
daa
xor
mov
jo
mov
testl
sbb
add
xchg
sbb
xchg
pop
bswap
fimull
lods
push
imul
iret
pushf
clc
xor
pop
cmpsb
pop
in
xchg
mov
out
outsb
push
lds
int3
adc
bound
pop
inc
jecxz
ja
jmp
aaa
in
mov
repz
lcall
or
adc
dec
mov
xchg
aam
lcall
inc
cwtl
add
fildl
sti
loop
xor
loopne
sub
mov
xchg
dec
push
push
ljmp
jb
xchg
es
sub
loopne
push
scas
jecxz
inc
adc
and
scas
sbbl
lods
jno
add
or
lcall
lods
inc
or
mov
push
ljmp
jb
push
cmpsb
and
mov
subl
cld
orb
mov
mov
fcoml
or
add
std
inc
inc
mov
jmp
fnstsw
dec
xchg
mov
lret
add
inc
mov
jecxz
xlat
push
add
add
arpl
aaa
xor
repnz
dec
popa
inc
inc
pop
mov
push
sub
js
adc
pop
xor
pop
clc
xchg
inc
fwait
mov
iret
imul
and
lds
add
xchg
ja
mov
cmp
fistpl
adc
sar
movsb
repnz
pusha
stc
lods
inc
sub
pop
sbb
or
inc
push
movsl
jle
xlat
stos
or
mov
inc
inc
ret
inc
test
aad
stos
mov
gs
jle
xor
pushf
sbb
dec
lds
shll
xchg
jmp
mov
and
pop
pop
jnp
pop
and
popf
sbb
outsl
out
scas
faddl
sub
rorb
repz
sahf
clc
push
call
mov
pop
frstor
jmp
out
xchg
push
lods
push
or
outsb
test
cld
add
inc
or
imul
test
enter
add
stos
add
cltd
mov
cld
fadd
mov
fsubl
xor
push
pop
out
or
outsl
push
adcb
sub
cltd
push
add
pushf
js
xor
fisubrl
mov
sbb
sub
sub
into
lods
jge
cmpsl
mov
lret
jbe
out
cmp
cmp
bswap
push
pop
jecxz
xchg
ja
pop
jbe
sbb
mov
jns
mov
jbe
and
mov
lods
mov
jno
and
inc
cs
mov
dec
xchg
loop
sub
pop
out
mov
jge
shl
pop
jecxz
iret
nop
pop
outsl
ret
mov
in
or
ljmp
aas
mov
inc
inc
dec
mov
lret
rcr
dec
fisttps
and
xlat
or
pop
lock
cmp
stc
add
ja
jle
jb
or
push
inc
into
and
loop
loop
mov
cli
imul
cmp
jmp
sahf
push
scas
push
adc
or
push
or
mov
imull
popf
sbb
es
xchg
fwait
test
mov
push
test
shl
hlt
out
stos
dec
xchg
sub
jbe
cmp
dec
pop
xchg
jl
dec
jp
aaa
in
in
dec
mov
ja
inc
pusha
jns
dec
pop
mov
cmp
dec
out
and
rcl
lods
inc
leave
out
push
sbb
pop
and
andl
pushf
mov
sbb
adc
push
pop
xchg
ds
js
or
push
call
pusha
fnsave
pop
jmp
sbb
adc
inc
bound
fsubr
xor
mov
dec
push
out
popf
push
cwtl
push
div
adcb
sbb
xor
in
bound
mov
loopne
into
jo
pop
mov
push
mov
add
push
or
cli
mov
rclb
insl
shlb
mov
sub
decb
dec
add
in
fmull
je
and
and
dec
ret
mov
push
enter
cmp
mov
add
xor
div
pop
fwait
and
cmp
enter
mov
fwait
popf
in
inc
in
fistpll
xchg
push
mov
stos
push
jecxz
cmpl
iret
hlt
adc
sbb
xchg
push
icebp
or
hlt
mov
icebp
div
adc
pop
jnp
into
je
jo
xlat
push
popf
dec
cmp
popl
sahf
cld
and
testl
xor
add
lahf
in
mov
push
test
add
ds
repnz
scas
mov
ret
xor
daa
pop
xor
mov
in
js
aas
loope
mov
xlat
xor
gs
mov
xor
ret
xchg
mov
adcl
or
sub
out
repnz
cmp
imul
or
adc
cli
mov
push
out
and
jle
loope
or
jp
out
test
out
popa
mov
dec
cld
sub
rorl
dec
jb
mov
imul
cmpsb
pop
data16
lret
mov
rorl
add
add
adc
lea
in
lea
stos
inc
mov
inc
ret
fisttpl
nop
in
lret
mov
and
cmp
mov
imul
sti
ja
and
pushf
cwtl
pop
lret
and
jne
push
and
sti
sub
cmpsl
sbb
data16
add
push
cmp
ficoml
scas
cli
or
pop
in
xchg
xchg
stos
cmp
lods
mov
push
sti
sbb
or
sub
and
xor
inc
imul
or
dec
and
lock
add
sbb
icebp
insb
data16
pop
adc
pop
fiadds
adc
pop
mov
imul
xor
and
mov
in
insb
shrl
adc
and
idivl
lcall
mov
push
fildll
ja
add
xor
pop
pop
hlt
dec
jle
icebp
mov
add
inc
lock
jp
and
test
mov
push
es
inc
stos
add
and
fucompp
clc
push
roll
hlt
xchg
inc
inc
shl
mov
loop
inc
cltd
pop
inc
arpl
shl
jge
jno
js
sbb
inc
jae
jnp
or
cs
incb
jo
ficomps
adc
jp
and
cmp
shr
jnp
mov
add
dec
loopne
sub
cmpsl
sbb
imulb
pop
cmpsl
dec
std
inc
dec
adc
pushf
icebp
out
and
lods
cmp
inc
mov
fldl
cld
and
push
cmp
pop
andl
pop
mov
cmpsl
cli
push
out
nop
dec
cld
mov
xchg
add
out
pop
mov
std
fs
mov
sub
push
mov
mov
in
jge
daa
cmp
lods
lock
lahf
and
ljmp
push
outsb
push
mov
xchg
js
cltd
mov
jle
mov
sub
jl
cmp
rcll
test
adc
dec
adc
add
cmp
shl
or
push
add
jle
mov
aad
iret
lret
ja
cmpsb
dec
or
mov
xor
int3
xor
js
scas
inc
aam
pop
repnz
je
shrl
jns
push
dec
fists
in
fldenv
inc
inc
mov
inc
in
incb
cld
mov
and
shl
test
jbe
test
mov
in
imul
pop
lcall
jae
stos
sbb
idivb
or
xchg
or
ljmp
inc
pop
xlat
sbb
sub
and
adc
fwait
jl
dec
and
mov
sarl
or
sub
sbb
rclb
add
sti
aas
scas
nop
jmp
movsb
cmp
mov
sbbl
or
lods
inc
sbb
mov
adc
outsb
inc
mov
ret
jnp
dec
xor
pop
scas
inc
inc
addr16
fmull
fnstsw
lahf
cli
flds
push
lods
and
in
testl
lods
dec
adc
loopne
sub
cwtl
xor
out
xlat
adc
stos
mov
rorb
cli
adc
jg
loop
pop
into
test
mov
ret
push
xlat
jo
gs
das
adc
lods
cmp
or
inc
xor
mov
pop
sbb
add
ss
jo
aas
add
int
xchg
frstor
pop
out
pop
add
lock
push
mov
pop
mov
xchg
sbb
and
pop
cwtl
cmp
rorl
mov
ljmp
loop
cmc
mov
int
add
sub
sbb
mov
fcoms
xor
je
call
leave
mov
sti
sbb
shll
or
and
xor
nop
add
adcb
xor
cwtl
js
mov
dec
inc
dec
jecxz
sbb
or
cmp
gs
mov
push
pop
fiaddl
dec
and
dec
push
repnz
adcl
scas
xchg
ljmp
xchg
sub
sbb
dec
leave
in
add
mov
into
jae
cltd
gs
add
adc
icebp
push
xor
mov
push
jp
lea
sarl
xchg
loope
lahf
js
sbb
or
jle
sbb
in
vpshlw
sbb
jl
and
or
shll
mov
xchg
mov
mov
and
and
cmp
mov
cmp
daa
dec
addr16
mov
sahf
icebp
enter
xchg
xor
cwtl
xchg
push
pop
mov
ds
mov
imul
out
lret
sbb
sbb
adc
jmp
mov
adcb
or
jmp
and
and
fldt
std
add
loopne
and
xchg
and
sbb
es
adc
inc
jle
int3
arpl
mov
imul
addr16
fsubrs
lods
fisttpl
and
jle
sub
pop
push
and
shlb
jns
leave
loopne
sti
les
divb
in
push
fldt
pop
mov
mov
int
mov
div
inc
pushf
sbb
and
ss
ja
push
aam
inc
mov
je
data16
pushf
mov
inc
mov
mov
fcomp
in
mov
js
cmpsb
jmp
fidivrl
or
push
add
aad
dec
mov
sahf
movsl
lcall
dec
xchg
scas
mov
sti
and
lcall
xchg
rorb
clc
jb
movsb
idivl
cmp
outsl
sbb
or
push
inc
and
in
xor
pop
mov
pop
push
jbe
mov
daa
in
push
xchg
pusha
out
inc
sti
add
xor
sub
ret
mov
ret
je
pop
shl
mov
testl
xlat
xor
data16
jle
pop
cmp
push
mov
mov
sahf
mov
mov
inc
lods
mov
lods
xor
or
leave
out
mov
dec
dec
stos
scas
sub
mov
fbstp
mov
push
inc
rcrl
lds
and
cmp
data16
lret
push
and
sub
js
adc
test
mov
mov
pop
pushl
lock
and
lock
or
or
cmpsb
xor
pop
ret
dec
cmp
outsl
lock
and
push
in
pop
enter
cmp
jo
mov
out
stc
test
in
movsb
mov
jnp
xor
loopne
add
jl
and
inc
gs
aas
popf
or
fs
dec
jo
xor
cli
or
xor
or
inc
mov
xor
mov
setle
xchg
mov
xchg
and
call
aas
add
pop
js
jne
inc
cmpsl
stc
jmp
scas
leave
inc
pusha
sti
iret
imul
pop
mov
pop
aam
sub
arpl
mov
pop
dec
rcrl
fnstenv
fcomip
lds
xchg
out
push
hlt
rep
cmpl
xchg
jle
lea
nop
inc
in
lcall
out
jnp
xor
adc
mov
ret
hlt
popf
mov
out
icebp
mov
push
arpl
daa
mov
arpl
inc
cwtl
lahf
ja
jno
lods
inc
sbb
sbb
mov
pop
outsl
cli
dec
xchg
mov
cmpsl
cmp
fildl
sbb
cmc
dec
pop
daa
push
movsb
repnz
and
cmp
call
cmp
xchg
adc
btc
push
xchg
in
push
movsb
inc
leave
cmp
jnp
pop
pop
sub
push
lret
mov
mov
iret
sbb
and
lock
and
lea
nop
inc
movsl
jecxz
mov
mov
sub
aas
sub
add
pop
pop
cmp
and
xchg
lock
subb
sub
shll
pop
inc
lods
or
dec
xchg
mov
ret
adc
js
movsb
push
sub
or
mov
push
mov
xchg
out
sbb
ja
mov
mov
push
ja
pop
mov
stc
lcall
subl
jp
rolb
jns
cli
or
mov
jo
rclb
jns
dec
mov
shll
mov
sbb
xlat
dec
jle
jecxz
lods
dec
ret
dec
adc
fwait
cmp
sub
inc
push
push
mov
mov
lods
pop
shrl
adc
cmpsl
fldt
mov
add
jl
sub
or
fsubp
lcall
xor
mov
pusha
sbb
int
mov
sbb
pop
or
mov
clc
mov
rcll
inc
fucomi
scas
adc
test
scas
pop
js
xchg
test
and
dec
bt
movsb
push
sahf
shl
dec
mov
negb
sub
scas
out
popf
in
fstpt
cmpsb
xchg
out
cmp
sbb
jle
dec
stos
insb
push
nop
jnp
pop
mov
int3
repnz
aad
lock
lock
sub
pop
xchg
into
mov
cmc
dec
sub
pop
dec
cld
and
aad
dec
and
sbb
cltd
jbe
inc
int3
cmp
cld
stos
dec
ficoml
and
fxch
cmp
jnp
into
std
push
mov
mov
imul
add
mov
std
std
pop
sahf
jne
push
jo
hlt
push
std
or
gs
xor
lret
stos
inc
sahf
iret
test
and
push
arpl
fnsave
aaa
icebp
dec
in
inc
mov
push
or
lock
or
test
push
negl
jo
cwtl
or
aaa
mov
stos
mov
pop
hlt
dec
fs
data16
or
stc
dec
cmpsl
in
pop
cmp
in
or
mov
sub
shl
inc
popf
dec
movsl
jmp
mov
cmp
push
das
mov
and
in
push
ja
cli
subl
mov
gs
xchg
sub
and
inc
rolb
aaa
xchg
push
es
jnp
popf
mul
mov
xlat
popa
cmp
jmp
adc
arpl
xchg
sub
stos
insl
aam
orb
adc
mov
cmp
pop
outsb
daa
ret
cwtl
pop
or
lcall
test
cwtl
and
xchg
add
enter
adc
cwtl
mov
leave
jb
aas
mov
and
mov
repnz
fdivr
sahf
cmp
push
cmp
or
cmp
adc
pop
in
scas
inc
fiadds
jmp
xor
adc
inc
gs
xchg
lods
jle
mov
jno
lret
jb
mov
mov
dec
add
dec
aad
sbb
ds
xchg
xor
pop
inc
mov
mov
adc
mov
test
adc
sarl
mov
dec
bound
ret
or
jg
lahf
jb
jl
sbb
movsl
shlb
mov
mull
fisttpll
add
pop
mov
adc
into
rorl
xchg
imul
push
xor
jle
pushf
insl
jbe
mov
mov
data16
fsubr
lock
in
push
add
jne
pusha
fcmovbe
out
andl
gs
mov
or
shll
mov
cmpsb
xchg
mov
pop
dec
adc
dec
lock
ds
pushf
mov
dec
movsb
xchg
pop
imul
push
mov
lret
xchg
lret
popf
dec
in
shrb
xchg
cld
or
mov
or
fdivrp
or
mov
adc
scas
dec
lods
sbb
shlb
mov
clc
pop
and
add
pop
sub
or
push
cmp
fstpt
out
fsts
ret
jnp
pop
xor
xchg
imul
adc
sbb
lcall
xchg
aad
cmp
push
movsl
shrb
pushf
sbb
mov
mov
enter
mov
sub
jae
xchg
cs
push
adc
pop
insl
mov
dec
popf
bound
mov
push
popf
adc
mov
cmpsl
push
mov
imul
mov
cwtl
imul
jno
vpsubd
sub
or
in
mov
and
pop
mov
lds
mov
mov
inc
mov
xchg
stos
loop
fnsave
int3
fdivl
pop
pop
mov
inc
es
or
lret
cmpsl
lock
test
mov
imul
xchg
loopne
cli
sbb
pushf
fadd
sbb
cmp
jb
and
lods
lods
cmp
jl
loopne
adc
js
cmpsl
dec
movsb
popa
icebp
mov
inc
adc
xorb
pop
ud2
mov
dec
popa
scas
and
rcrl
test
cmp
push
add
pop
ja
sub
jg
jecxz
sub
loopne
popf
xor
fmuls
rorl
iret
sub
adc
or
pop
stos
xor
fcmovb
sbb
push
mov
mov
out
sbb
in
stos
loop
es
push
and
xchg
pop
stc
inc
sbb
inc
int
js
fdiv
jp
inc
add
push
xor
sbb
xor
fistps
and
add
das
add
sbbl
mov
add
adc
stos
pop
or
jp
flds
lahf
lods
and
gs
nop
lret
sti
cmp
aad
xchg
hlt
sub
cld
lahf
mov
jnp
jns
jnp
into
mov
in
sub
pop
test
jo
mov
inc
pop
test
xor
xor
ret
sbb
arpl
and
mov
fstpt
mov
cmpsb
jge
in
in
insb
xor
add
and
adc
lods
scas
or
pusha
hlt
scas
push
add
add
imul
adc
add
dec
sti
sub
dec
popa
pop
push
fwait
into
and
enter
test
xor
sub
mov
push
aam
or
lods
ds
xor
push
nop
cmp
mov
jnp
push
call
loope
cmp
xor
roll
cmpsl
sbb
pop
add
xchg
xchg
mov
dec
pop
repnz
mov
notl
paddsb
rcrl
pop
addr16
lods
dec
pop
rclb
lock
and
sbb
stos
out
rclb
dec
decb
orb
notb
lods
and
out
dec
or
stos
mov
sbb
int3
hlt
cmp
mul
lea
cmp
lock
fyl2x
clc
das
push
and
xchg
sub
mov
push
stos
add
mov
dec
fdivr
test
jo
dec
jbe
aad
mov
loop
pop
fadd
dec
fsubp
and
or
xchg
popl
hlt
addr16
stos
movsl
adc
xchg
cld
shlb
or
aam
mov
inc
insl
xchg
ds
jmp
or
pusha
lock
int3
push
mov
in
xlat
dec
dec
sahf
add
adc
push
jae
mov
jge
das
int
call
pop
pushf
sahf
ljmp
incl
popa
xor
pop
inc
inc
push
out
push
rcr
xor
push
push
push
mov
jno
adc
andl
loopne
mov
fldcw
dec
loopne
popf
mov
inc
ljmp
mov
adc
into
mov
call
sbb
stos
pop
out
movsb
rcrl
fs
fwait
jbe
test
xor
test
mov
lds
lret
ss
jns
cltd
aad
push
insl
pushf
cmpsl
push
adc
xor
out
push
jnp
and
xlat
icebp
arpl
int
push
hlt
push
adc
jmp
inc
fcoml
test
jge
xorl
inc
inc
ds
inc
cwtl
push
xchg
push
rorl
fmull
mov
xchg
mov
loope
aaa
adc
mov
mov
or
inc
pop
divl
sub
push
mov
outsl
idivl
cli
xchg
popa
addr16
fdivrs
sbbb
pop
xchg
adc
dec
stos
nop
daa
and
ljmp
lods
inc
pop
pushf
jmp
or
lret
xchg
ret
aad
sbb
push
add
jne
xor
aas
shll
cmp
xchg
jno
sub
pop
imul
sub
imul
sbb
das
xchg
pop
pop
test
cmp
mov
clc
mov
inc
mov
fsubrs
stos
dec
test
jp
fwait
jbe
dec
fwait
lods
dec
sbb
jno
mov
or
mov
and
psllw
cmpsl
ds
js
inc
loope
out
es
xchg
ret
sbb
dec
test
and
mov
jle
mov
pop
mov
sub
push
sub
mov
or
adc
sub
add
or
jmp
and
push
lea
sbb
inc
scas
mov
call
or
mov
xchg
fmull
cltd
cmpsl
fldenv
ret
sbb
cmc
mov
mov
xchg
rorb
test
stos
push
insb
push
inc
cmp
jne
mov
xchg
fs
mov
jb
jge
add
xchg
adc
and
or
pusha
mov
push
ret
es
hlt
pop
push
pop
aam
xchg
mov
pop
cmp
xlat
cs
push
pushl
sbb
test
xor
or
xor
imul
dec
jno
call
adc
lds
and
push
jns
jo
popa
mov
xor
arpl
sti
inc
pop
mov
lods
fstl
dec
fistl
gs
or
adc
pop
mov
jl
outsl
dec
shl
out
jg
mov
adc
push
popf
push
adc
cwtl
in
shrl
add
fdivs
pop
add
and
enter
push
cmp
pop
jns
nop
jge
mov
jae
mov
push
insl
jnp
pop
icebp
mov
xor
mov
sbb
jbe
dec
adc
cld
jne
nop
jns
cmpsl
ds
fadds
in
lds
ret
and
xchg
fcmovnb
sbb
xor
es
cmpsb
adcb
mov
and
xor
dec
sarl
loopne
mov
inc
add
xor
ljmp
push
inc
idivb
loope
movsb
sub
push
push
cmp
mov
sub
out
mov
mov
sub
push
pop
rcrl
add
cmp
lods
aam
fcomip
sub
lock
test
pop
fsubr
dec
lret
cmp
cmp
jo
popa
loopne
mov
xchg
in
stos
repz
inc
loop
fsubrl
int
out
jge
jnp
pop
cmp
pop
add
js
sbb
dec
jecxz
outsb
sbb
add
cmp
inc
adcb
sub
iret
popf
sahf
and
cmpsl
or
dec
cmc
dec
clc
push
mov
out
xlat
push
pop
lret
xor
xor
ljmp
mov
add
das
in
dec
ret
icebp
movsl
repnz
rol
out
das
lds
push
sub
dec
cmc
push
add
jl
movb
inc
jmp
in
xor
or
in
std
sbb
sub
shl
scas
test
fcomp
sbb
aaa
jbe
lea
mov
lahf
cmp
pop
out
out
mov
icebp
stos
sub
popf
mov
dec
shrb
sbb
lea
jge
push
leave
xchg
sub
xchg
jle
and
movsb
lock
outsl
push
out
cmp
fsubrl
pop
outsb
and
xchg
or
notb
mov
mov
movsl
icebp
fwait
shlb
lods
filds
add
inc
scas
push
imul
pusha
insl
sti
orb
add
cmpsb
nop
add
insb
jbe
arpl
sahf
shr
mov
ds
sub
repz
int
in
add
sbb
dec
bound
cmp
add
dec
lods
aaa
xchg
rol
add
loopne
mov
pop
cltd
pop
inc
sarl
in
mov
push
mov
sbb
lods
jp
pusha
mov
js
or
outsb
cmp
insb
adc
sub
cmp
dec
es
xchg
adc
pop
mov
int
in
incl
out
xchg
scas
sub
push
sbb
pop
repz
pop
pop
repz
ret
and
sbb
mov
cmp
pop
js
aad
fs
fisubs
sbb
ficomps
rcll
jnp
add
decb
push
jmp
imul
add
cmpsb
movsl
inc
xchg
xor
mov
in
fdivp
xchg
and
sub
dec
add
lahf
sbbb
stos
xchg
and
xchg
dec
cld
add
fimull
sarl
inc
andb
pop
jbe
dec
jae
dec
je
frstor
jbe
ret
mov
movsl
cmpl
sbb
decb
or
loopne
add
xchg
or
pop
shlb
idivl
sub
and
jle
lods
cmp
pop
loope
call
aas
out
mov
or
inc
cmp
insl
in
test
or
es
pop
mov
dec
popl
out
outsb
jl
or
add
inc
lret
insb
dec
and
jb
addr16
aam
jo
push
and
fdivr
cvtdq2ps
cmp
das
adcl
cmp
pop
insb
das
jb
fsubr
stos
mov
xlat
outsb
stos
mov
jbe
add
pop
js
or
stos
nop
adcb
or
inc
sbb
mov
jo
pushf
xor
aad
stos
jbe
leave
mov
mov
pop
sbb
mov
push
orb
inc
call
mov
or
xchg
mov
and
pop
add
or
repnz
cwtl
pusha
sub
in
orl
or
fcomps
pop
mov
dec
pop
mull
pushf
jo
ljmp
mov
inc
cmp
jb
cmp
int
idivl
insl
sti
jmp
mov
dec
or
sbb
push
aam
jl
lds
sbb
xor
mov
jmp
shrl
mov
out
and
addb
je
pop
in
lea
pop
sub
iret
bound
jecxz
add
pop
rcrl
mov
mov
push
fisubrl
jmp
mov
add
in
push
xor
or
xchg
mov
add
mov
addr16
pop
fs
mov
add
or
lret
dec
sbbb
int
and
sbb
pushf
xor
cmp
in
addl
in
fsubrl
sbb
push
mov
js
mov
pop
lret
jl
sbb
jb
rolb
imul
mov
mov
adc
push
xlat
repz
negl
clc
out
ljmp
into
daa
test
out
xlat
incl
cwtl
xor
xor
sub
add
jg
sub
sbb
inc
into
add
pop
cmp
adc
sahf
out
mov
popf
mov
push
popf
fbld
and
cmp
dec
stos
inc
xor
leave
pusha
or
out
fcmove
xchg
ficoms
fwait
rcrl
adc
xchg
jne
push
test
adc
mov
cli
adc
sub
fisubrs
mov
call
scas
mov
xor
cld
push
lods
sub
ljmp
mov
lret
and
lahf
or
leave
mov
or
andb
sbb
push
insb
js
out
pop
cmp
jl
scas
lret
dec
pop
jno,pt
xchg
loope
aad
loop
sahf
push
fsubr
mov
push
inc
jg
mov
cmp
leave
sbb
sbb
in
add
dec
iret
sbb
movsb
xchg
in
jae
xor
loopne
pop
out
mov
jle
popf
add
sahf
lds
neg
sbb
in
in
ja
stos
addl
jge
icebp
stc
xchg
mov
jg
cwtl
test
cmp
gs
mov
loopne
and
insl
jmp
scas
sarl
xlat
outsb
sbb
mov
test
dec
mov
adcb
in
mov
mov
std
lret
push
iret
iret
ja
cs
fbstp
repnz
aas
pop
std
cltd
mov
jge
fwait
adc
popf
cmp
pusha
aam
fmulp
push
mov
das
aam
out
xlat
sub
xchg
insb
fistps
jge
jp
into
imul
inc
rorl
cwtl
and
jno
fsubs
push
das
out
in
insl
dec
cmc
ret
mov
adc
adc
lret
je
out
dec
lahf
outsl
push
shll
cmp
clc
scas
xchg
and
idivl
lock
dec
rclb
adc
cmp
cwtl
and
adc
insb
jmp
add
popa
mov
lret
push
or
or
out
leave
clc
mov
push
pop
out
push
push
daa
inc
insb
sub
xchg
sbb
cmp
add
mov
sub
pop
lahf
dec
out
add
xor
add
lret
mov
iret
dec
scas
fwait
jne
and
out
popa
add
test
xchg
icebp
sub
mov
in
cmp
pusha
push
mov
test
fwait
adc
incl
mov
imul
nop
aad
inc
pop
cmpsb
lahf
pop
jl
and
aaa
aaa
mov
xchg
loop
jl
pop
clc
movsb
mov
jnp
leave
lods
mov
sbbl
test
and
jmp
pop
mov
ficomps
dec
out
and
mov
cmp
sbb
mov
outsb
jbe
mov
jmp
cmp
dec
loope
jb
mov
arpl
jnp
iret
ret
mov
push
jns
cmpsl
lret
cmp
pop
add
xlat
fsubrp
rclb
fs
mov
jae
dec
adc
addr16
mov
and
or
jns
roll
cmp
pop
cmc
rcll
xchg
sub
loop
push
inc
scas
out
sbb
pop
jae
in
in
cmp
jmp
and
jo
mov
sub
stos
inc
pop
xlat
pop
lock
cmpsb
jbe
les
mov
mov
call
xor
push
clc
popl
mov
in
adc
outsl
ret
cwtl
lods
mov
dec
sub
popf
pushf
push
xchg
sbb
jmp
push
and
fidivl
out
shlb
cmp
imul
add
push
fidivl
jmp
lret
push
pop
push
sbb
adc
clc
or
mov
shlb
icebp
dec
addb
cmpsl
mov
xchg
jge
jne
pop
out
add
adc
bound
shr
test
lahf
test
xchg
loope
es
add
adc
lahf
test
jbe
mov
sbbb
mov
pop
call
and
fcoms
jp
push
rcrl
popa
punpckhwd
adc
pop
shll
int3
filds
or
mov
sbb
push
subb
mov
int
sbb
cmp
fstps
or
jle
inc
mov
jmp
arpl
pop
xchg
inc
inc
int
xor
lret
and
push
cmpsb
fnstenv
jg
and
add
and
fs
lret
and
mov
or
loop
pushf
inc
mull
jnp
pop
inc
arpl
mov
jg
call
lods
jb
int
inc
or
fnstsw
imul
out
scas
aas
sti
lahf
std
lret
mov
in
xchg
lock
ret
cmp
in
push
daa
lea
inc
fstpl
push
out
lds
adc
adc
mov
dec
add
cmpsb
mov
xchg
aad
lea
in
rclb
sub
imul
mov
cmp
xchg
adc
enter
jne
gs
xchg
xchg
push
inc
jmp
lcall
add
bound
fcmovnbe
mov
pop
inc
movsl
or
mov
jo
push
xchg
add
aad
sbbb
mov
and
xor
mov
jne
mov
out
inc
loop
sbb
out
cmp
sbb
insl
fldpi
xchg
mov
xchg
mov
fstl
adc
int
push
adc
xchg
inc
imul
jmp
or
mov
mov
mov
in
stc
xor
or
insb
pop
fnsave
addr16
sbb
pop
loopne
imul
rolb
gs
fsubrl
gs
mov
push
jmp
sbb
testl
insb
push
xor
lret
int3
sub
mov
adc
in
and
in
out
cli
lret
push
les
push
lods
jo
icebp
clc
ret
int3
fwait
sub
je
in
es
lds
add
ds
mov
lods
push
fwait
lcall
inc
out
sbb
inc
xlat
mov
pop
pop
cmc
mov
mov
pusha
sub
sub
rolb
or
inc
lea
out
bound
shrb
sbb
adc
cmp
dec
sbb
push
iret
mov
adc
jecxz
adc
fs
dec
add
stos
dec
mov
jne
stos
push
xor
scas
xchg
xor
imul
pop
sbb
aad
shrb
or
sub
pop
testl
dec
pop
and
inc
pop
push
and
inc
xchg
clc
stc
mov
dec
cmp
andb
jg
sti
jge
in
mov
mov
test
hlt
and
fdivl
push
ja
add
pop
mov
and
inc
jne
cmp
jns
mov
mov
jge
pop
outsl
jecxz
aam
and
add
mov
ss
aaa
or
out
xor
and
das
dec
imul
movsb
inc
cmp
dec
dec
cmp
sahf
mov
push
mov
icebp
stc
dec
stos
mov
xchg
fwait
mov
jne
mov
dec
xorb
jecxz
out
adc
add
in
inc
enter
mov
push
cmp
add
pop
jb
and
push
lea
subb
cmpsl
in
fcompl
pop
mov
outsl
mov
pushf
add
cmpsb
mov
sbb
and
shrb
xchg
sub
leave
pusha
mov
dec
out
cltd
sti
leave
jno
scas
cmp
lret
lods
out
mov
lahf
cli
adc
fld
push
push
fidivl
fistpll
icebp
push
into
or
call
push
or
pushf
enter
push
ljmp
rorb
insb
push
mov
xchg
sub
call
mov
fnstsw
mov
ja
and
outsl
out
pop
loopne
pushf
xor
jecxz
sub
xor
pushf
leave
push
inc
sbb
dec
int
cmp
out
mov
pushf
dec
cmp
xor
xchg
push
and
or
push
cmp
test
dec
repz
mov
ja
mov
aad
pop
sarl
cmp
xchg
sbb
sub
pushf
dec
es
and
fnstenv
daa
mov
mov
sti
cmp
dec
je
loope
pop
cmpsl
sub
cwtl
movsb
shl
movsb
xchg
ja
stos
jl
mov
call
jmp
and
idivb
lret
outsl
add
es
xchg
adc
stos
pusha
inc
pop
mov
mov
sbb
dec
into
lret
es
cld
andb
or
inc
das
mov
and
xchg
daa
aas
fdivrp
in
sub
adc
and
ror
repz
dec
add
sbb
ficoms
xchg
inc
pop
int
ficompl
in
andl
mov
xchg
pop
jecxz
xchg
out
sbbb
pop
or
inc
loopne
jne
xchg
mov
rclb
outsl
mov
pop
repz
pop
dec
pusha
push
and
xchg
push
jle
sbb
clc
pop
ja
stos
push
push
sub
movsb
jecxz
bnd
and
jle
jmp
mov
int3
mov
or
xchg
ficoml
ret
pop
lret
movsl
mov
jnp
dec
fnstsw
arpl
sbb
shll
pop
in
xor
fwait
mov
andb
and
icebp
cmp
shll
adc
jae
xor
in
pushf
add
mov
lods
cmp
pop
arpl
adc
xchg
aam
jle
cmp
clc
lahf
fs
xor
imul
sbbb
inc
add
jmp
push
and
adc
jbe
movsl
pop
lcall
pusha
stos
orb
push
sub
add
in
jae
aas
sbbl
push
int3
pop
in
push
or
mov
mov
into
fsubrs
sub
sbb
cmpsb
xor
pop
or
cmpsb
call
dec
subb
mov
mov
clc
mov
mov
in
add
cwtl
shlb
dec
ret
movsl
dec
cmp
lret
or
shlb
lret
cld
xchg
cmp
and
xchg
pop
sub
mov
das
subb
adc
jne
movsl
in
dec
xor
jle
jmp
pop
inc
in
dec
inc
dec
neg
jmp
xchg
in
lods
sub
pop
cmp
and
inc
cltd
push
inc
push
sbb
lock
adc
popf
add
dec
lret
jae
lret
mov
inc
jae
jae
in
xchg
mov
cmp
xchg
repz
push
and
and
icebp
sub
push
cmp
negl
pusha
jmp
das
xor
mov
inc
inc
std
nop
dec
mov
or
xchg
sub
pop
into
sub
push
test
in
mov
xlat
pop
mov
and
mov
cmp
aam
jae
inc
stos
push
xchg
sub
mov
pop
xor
int
push
jbe
inc
bound
nop
mov
mov
inc
test
mov
jge
popf
add
add
adc
je
test
imul
jmp
mov
cmp
or
in
dec
sbb
mov
jns
mov
cmpl
push
mov
pop
mov
sbb
dec
mov
clc
pop
cmp
and
loop
insb
imull
stc
rcr
hlt
out
pushl
data16
xchg
mov
and
and
mov
nop
scas
out
mov
pushf
sbb
mov
movb
in
das
inc
and
push
or
xchg
jbe
add
subb
pop
cmp
jge
mov
push
rcl
xorb
cmpsl
push
lods
pop
xor
jae
lahf
popw
addr16
mov
into
imul
subb
mov
pusha
inc
push
insl
inc
test
xchg
push
cld
xchg
stos
jle
repnz
mov
xor
cmp
xchg
mov
inc
clc
stos
mov
xor
add
lods
inc
and
insb
sub
imul
pop
push
cs
xor
test
pop
xchg
mov
or
lods
mov
xor
pop
xchg
xchg
mov
and
sbbb
pushf
call
and
jecxz
pop
lcall
xlat
jne
lds
push
mov
call
and
cmp
scas
jle
mov
out
fdiv
push
mov
push
fidivrl
int3
shlb
ds
xor
pushf
jle
mov
mov
jle
push
mov
or
add
jno
jns
adc
icebp
push
inc
mov
addr16
test
mov
das
cmp
push
ret
shlb
mov
and
pop
xor
mov
daa
or
loop
push
call
ds
stos
mov
add
jne
dec
cmpsl
bound
loopne
lcall
push
jmp
push
lcall
fs
jo
test
rcl
stc
fs
sub
push
test
push
jo
cmp
insl
inc
add
aad
repnz
mov
jno
addr16
jmp
loopne
jmp
and
or
jne
sbb
mov
out
xchg
dec
int3
mov
mov
push
push
sarb
xchg
dec
stos
sub
fcmove
xchg
cs
push
push
stc
adc
mov
xchg
es
jge
test
mov
mov
dec
xchg
mov
push
or
fisttps
aam
push
or
jecxz
adc
push
sub
lea
jo
pop
ss
scas
stc
loopne
out
mov
push
test
rcll
dec
jnp
sub
cmp
daa
lcall
adc
fadd
pop
xchg
inc
fiaddl
and
arpl
jp
xchg
jg
pop
test
ja
mov
and
lods
jae
mov
mov
mov
movsb
cmpsb
jg
jo
pop
cmp
push
pop
or
popf
sbb
mov
out
out
push
insb
xorb
or
pmaxsw
mov
cltd
ja
imul
jno
inc
xor
es
inc
push
pop
scas
addb
sub
jne
rorl
imul
mov
or
push
pop
push
cmc
mov
inc
das
or
cmpsl
pop
test
cmp
in
add
mov
add
lret
cmc
mov
cli
insl
inc
arpl
dec
jecxz
adc
sub
repz
mov
xchg
out
and
pop
test
nop
lods
mov
mov
cmp
jno
cmp
cmp
dec
adcb
stos
inc
in
movsb
cmp
jns
aad
sbbl
das
pop
shlb
divb
divb
mov
add
aas
enter
mov
xchg
push
imul
sub
dec
cmp
dec
mov
xchg
inc
dec
cmp
push
gs
jge
not
mov
out
mov
jle
loop
mov
xchg
xchg
jae
adc
mov
jl
or
mov
data16
iret
dec
sbb
add
jmp
mov
out
mov
stos
dec
xchg
pop
in
pop
insl
repz
add
add
lods
lock
dec
xor
xor
pop
inc
push
cs
ret
mov
jecxz
jp
fs
je
test
popf
test
sub
pop
scas
lods
aas
sub
mov
xor
mov
push
lret
push
mov
sub
shrl
xlat
xchg
sbb
push
aas
sub
cli
cmp
push
or
or
cs
outsl
jnp
shlb
mov
dec
aad
jo
inc
push
sub
jmp
and
cmpsl
ds
insl
lods
fstps
fidivs
pop
or
mov
add
mov
xor
lret
mov
sahf
jl
or
pop
sbb
icebp
mov
movsl
push
jl
xchg
ret
lock
sahf
icebp
imul
add
loop
mov
repnz
fcmovnu
sbb
mov
fwait
and
es
push
xchg
testb
mov
subl
jnp
cmp
mov
pop
rcrb
fiadds
mov
cmc
jl
xlat
mov
lea
mov
push
lea
loopne
push
push
rcrl
es
popf
fsubs
and
loopne
call
test
stos
sub
pushf
fsts
test
cltd
add
cmp
mov
in
nop
jnp
dec
std
sbb
inc
nop
daa
mov
ljmp
sarb
shl
push
push
mov
jmp
lea
mov
fistps
mov
lcall
and
jne
idivb
pop
or
cmp
mov
push
xchg
cmpl
dec
add
stc
mov
inc
faddl
cmp
arpl
test
dec
int3
sub
out
andb
stos
and
repnz
ds
or
xchg
adc
movq
nop
fisubrs
movsb
dec
out
pop
cmp
xchg
insb
dec
xchg
mov
push
xor
push
gs
mov
pop
push
xor
xlat
sub
or
iret
push
cmc
test
rolb
sbb
mov
nop
mov
jae
pop
or
xchg
lahf
leave
call
mov
xchg
sahf
mov
pushf
sbb
lds
cli
and
mov
sbb
push
mov
mov
fldt
pop
cmp
lds
mov
out
sub
cmp
adc
pop
jae
mov
xchg
js
repnz
icebp
mov
xchg
int3
adc
scas
adc
or
adc
faddp
xchg
add
pusha
pop
stc
nop
cmp
pop
adc
out
lods
mov
jb
fisubl
mov
inc
mov
xchg
lea
imulb
insb
ficoms
xlat
inc
not
cli
ficoml
dec
pusha
inc
mov
aaa
js
push
pusha
push
xor
mov
add
dec
cmc
stos
movsb
pop
repnz
push
xorl
xlat
outsb
push
mov
fidivs
jno
xchg
push
inc
cld
jae
inc
repnz
dec
incb
enter
sub
push
outsb
test
inc
out
fnstenv
xlat
movsl
push
insb
push
in
das
aaa
push
repnz
push
aas
shll
jbe
inc
fwait
int
out
test
or
dec
fs
aad
and
repz
xor
dec
dec
jp
jno
dec
pop
jnp
mov
bound
setne
adc
sub
outsl
daa
js
adc
mov
dec
mov
jnp
hlt
jg
sub
push
push
lods
push
test
sbb
jo
subb
repz
lret
dec
pop
cmp
je
jns
shll
ljmp
ljmp
mov
inc
gs
ror
ret
jmp
sbb
cmp
cltd
imul
pop
hlt
add
es
and
lock
sbb
lcall
jge
movsb
sub
dec
pop
aas
push
mov
outsl
icebp
fcmovbe
icebp
mov
pop
xchg
inc
mov
rcr
add
pop
add
std
pop
mov
mov
movsb
loop
fdivrl
popf
or
ret
and
jne
out
cwtl
pop
mov
mov
imul
mov
sub
std
sahf
push
mov
or
lods
cmp
inc
inc
test
adc
out
sti
or
adc
cmp
adc
push
aam
aaa
out
push
dec
addr16
mov
inc
fsub
enter
inc
loop
jg
mov
dec
in
pop
in
cmp
dec
outsb
push
inc
enter
shll
push
mov
pop
adc
pop
outsl
push
mov
xchg
adc
and
lahf
mov
jg
add
and
mov
pushf
dec
jecxz
ret
setns
rolb
sub
jecxz,pn
popa
lds
and
add
sbb
stc
aas
enter
adc
subl
mov
int3
push
cmp
mov
push
xor
loopne
sahf
test
cmc
cmp
push
mov
leave
xlat
bound
fistps
mov
outsb
jle
je
cmp
add
mov
xchg
mov
push
mov
cmp
lods
mov
leave
xor
push
adc
sub
push
add
test
pop
icebp
mov
and
prefetch
or
xchg
arpl
mov
and
xor
cmp
sub
pop
or
jnp
out
mov
and
cmc
aam
ret
push
sub
orl
push
push
out
icebp
inc
pop
xor
xor
mov
push
es
aad
jle
divl
popa
add
sbb
daa
fsubl
inc
int
jp
out
ds
mov
add
ja
inc
stos
jge
push
outsl
sub
dec
idivl
pop
rcll
lahf
xchg
xchg
add
daa
and
scas
mov
in
mov
mov
jmp
and
mov
jl
sub
add
orl
sub
sbb
mov
add
cli
aad
and
sbb
xchg
mov
pop
add
fadds
xor
cmc
xchg
mull
pop
or
mov
pop
lds
xchg
xor
stos
dec
cmp
scas
mov
pop
jae
aaa
mov
imul
test
mov
pop
cmp
xchg
mov
nop
add
idivl
add
call
xchg
pop
jno
jge
stc
sbb
lahf
shlb
lds
mov
iret
lock
inc
pop
add
int
seta
jl
lcall
fmuls
dec
inc
mov
mov
stc
cmp
mov
fwait
xchg
pop
stos
fyl2xp1
xchg
ja
sahf
jne
arpl
sbb
jle
arpl
mov
mov
sahf
and
iret
and
sti
ret
enter
pop
negl
inc
jl
icebp
sub
xchg
sub
mov
xchg
jbe
outsb
test
icebp
sbb
rcl
sbb
mov
outsb
and
sbb
repz
xor
mov
clc
inc
incb
and
adc
lret
jbe
imul
adc
push
lcall
test
lea
insl
mov
adc
or
mov
jg
pop
out
push
lahf
cmp
int3
mov
daa
push
cltd
mov
mov
loop
and
mov
pop
sbb
dec
push
test
rcrb
jl
stos
sub
out
pop
fcmovne
dec
dec
add
in
inc
dec
mov
or
ljmp
in
sub
in
xor
cli
nop
fldenv
mov
testb
aad
mov
xchg
cs
cmp
dec
dec
xchg
cmp
inc
push
add
mov
stc
leave
pusha
sub
leave
adc
in
jmp
cld
xchg
cs
je
out
iret
das
test
mov
push
mov
mov
ret
push
pop
push
into
push
fimuls
and
pop
movsl
jle
lods
scas
clc
fwait
push
push
dec
test
jle
fiaddl
pop
ss
cmp
pop
adc
or
fidivrl
pop
cmp
jl
aaa
dec
cmp
jge
pop
adc
mov
add
imul
shl
lods
push
ss
push
jge
dec
test
ret
add
pusha
push
sbb
outsl
scas
idivl
jg
dec
xchg
stos
xchg
outsb
sbb
hlt
xchg
jo
cmp
xchg
lods
push
test
repz
cli
stos
inc
jl
jb
fidivrs
sub
cmp
enter
or
addr16
aad
cli
jns
mov
leave
loopne
pushf
dec
mov
or
dec
push
imul
ret
lea
sarl
mov
add
sub
xor
mov
nop
rolb
push
sbb
pop
js
cmp
lahf
rclb
jns
icebp
pop
push
fldt
vmwrite
scas
out
dec
in
arpl
dec
bound
jecxz
push
cmpsb
les
aad
mov
mov
adc
movsb
fidivl
cmpb
mov
les
dec
std
clc
adc
dec
fdivrs
mov
mov
add
divl
xchg
std
pusha
mov
inc
jmp
imul
push
xor
mov
lods
ljmp
pushf
ss
and
scas
or
shll
stos
aas
in
xchg
or
jecxz
arpl
or
mov
mov
jae
in
sub
fwait
dec
pop
jnp
shr
in
fbstp
jno
sahf
pushf
repz
sbb
mov
push
and
mov
mov
fsubr
aaa
xchg
cli
daa
add
push
or
stos
test
je
out
mov
push
jl
mov
jne
xchg
in
xor
jle
div
popa
clc
nop
clc
fstl
jo
xlat
sbb
test
xchg
jae
xchg
cltd
icebp
ficompl
mov
dec
and
add
sub
pop
aas
xchg
out
add
mov
pop
loopne
push
lods
push
add
mov
jo
xor
xchg
sub
popf
inc
dec
es
cmpsl
or
xor
push
or
insl
mov
or
xor
dec
pop
lods
mov
aad
stos
mov
repz
xchg
xchg
or
mov
add
daa
outsl
mov
mov
pop
cmp
or
loop
xor
ja
daa
jle
int
lcall
bound
lock
cmpsl
xor
add
lds
rclb
clc
cmp
push
repz
inc
adc
cltd
cmp
adc
xchg
adc
mov
xchg
das
mov
popa
xor
icebp
mov
loopne
adcl
mov
sub
fiadds
adc
cld
stos
push
sahf
cmc
mov
call
dec
ret
and
cmc
dec
mov
adc
daa
aaa
or
scas
subl
into
or
ffree
sbb
fcompl
jns
fucomi
cmp
push
mov
mov
or
pop
sub
aas
push
sub
dec
pusha
dec
mov
cs
fldl
sti
xor
loopne
stos
cmp
jge
xor
stos
bound
push
mov
sub
dec
ja
and
shrb
sbb
enter
cmp
xor
push
mov
sarb
pushf
mov
jle
cltd
add
enter
hlt
jmp
test
ror
mov
dec
gs
ss
mov
cwtl
mov
push
sbb
cmp
or
add
dec
loop
outsl
loopne
xchg
jle
test
and
movsl
mov
gs
fcomps
jne
jno
sti
sbb
mov
jecxz
int
addr16
addr16
inc
fwait
jo
jmp
out
sbbl
hlt
jb
push
rcrb
scas
add
dec
pop
cli
insb
sbb
test
xchg
insb
test
xchg
adc
popa
stc
pop
imul
pop
pop
loope
pop
pop
ja
int
call
jns
stos
xchg
sbb
movsb
cwtl
xchg
push
addr16
xor
mov
mov
shr
xchg
dec
pop
sahf
jl
mov
or
push
mov
cmp
loopne
push
xor
jns
shrl
or
les
addr16
sub
fidivl
ljmp
movsb
test
xchg
lcall
or
dec
push
cmpsl
in
pop
mov
inc
fscale
mov
stos
cli
into
lds
pushf
xor
in
push
call
test
cwtl
sbb
push
icebp
lods
or
cltd
call
pusha
aaa
dec
jae
fnstsw
mov
xor
adc
jo
test
setno
shrl
dec
pop
rcrb
push
movsl
cmpb
mov
pop
add
in
push
inc
arpl
je
lock
pop
fldl
push
pop
loopne,pt
push
mov
sti
in
pop
push
sbb
pop
xlat
js
shl
insl
pop
out
enter
jle
and
mov
xchg
subl
mov
into
fistpl
clc
js
clc
lods
mov
icebp
sub
lret
add
clc
xor
push
arpl
mov
adc
mov
out
repz
push
test
mov
pop
outsb
mov
aam
mov
add
call
sbb
dec
add
mov
out
insl
mov
divb
pop
push
or
shl
lret
ret
pop
adc
inc
cmpsl
or
mov
out
push
pop
dec
lcall
inc
cwtl
push
pop
repnz
push
inc
inc
sub
sub
loopne
in
or
push
push
adc
sahf
pop
or
fdivrp
mov
je
call
or
mov
lock
popf
sub
pop
test
in
xor
repz
aaa
and
imul
es
les
bound
sti
push
mov
rolb
add
sub
js
into
push
jge
pop
ja
sub
jle
fwait
inc
sahf
push
dec
in
pop
pushf
jae
cld
push
mov
xor
cmp
inc
lods
mov
mov
xlat
and
push
pop
adc
xor
test
sbb
aas
add
mov
cmc
mov
imul
fildl
lret
fiaddl
adc
test
out
mov
mov
jns
rclb
xor
pop
insb
push
push
sbb
jbe
dec
test
pop
jge
xchg
jno
fidivl
lds
rol
bound
push
inc
xor
mov
flds
imul
lock
dec
and
popf
xorb
or
pop
xor
or
jecxz
inc
jno
cld
xchg
int3
pop
idiv
add
ja
jp
dec
cltd
popa
jnp
insb
sbb
out
sbb
cmp
mov
xchg
xchg
imul
jp
int3
jge
cltd
daa
fsubr
in
and
cwtl
testl
inc
mov
adc
mov
mov
std
out
jmp
sbb
and
pop
inc
aam
adcl
push
and
lea
rcrb
mov
mov
mov
jp
inc
xchg
jne,pn
ret
fldcw
mov
fs
ficoml
jnp
inc
clc
out
pop
popf
sub
xorb
sbbl
add
imul
rorb
lods
push
mov
inc
cmpsl
mov
sub
insb
mov
mov
ret
sub
scas
pop
pop
pushf
cmp
test
cmp
mov
sub
mov
test
fisttps
aad
and
jne
push
mov
jbe
push
test
jo
rorb
mov
adc
or
xchg
das
out
sti
xchg
and
sbb
mov
xchg
cmp
inc
xor
je
jmp
push
cmp
loope
dec
push
jp
jb
sbbb
aaa
dec
fcoml
inc
lcall
lahf
mov
push
adc
push
jbe
jl
cli
enter
inc
sub
sbb
fdivl
mov
adcb
xchg
mov
je
outsl
out
cmp
or
and
mov
push
mov
adc
mov
roll
loopne
adc
nop
and
loopne
mov
mov
jne
sbb
popf
lods
ja
fildl
lock
clc
xchg
inc
iret
sub
movsb
sub
xchg
mov
cmpsl
imul
dec
mov
xchg
sbb
mov
mov
incl
sub
rcrl
jno
mov
mov
push
cwtl
jp
cwtl
stos
mov
ffreep
testb
mov
mov
shlb
jecxz
inc
xlat
xlat
dec
icebp
and
dec
inc
test
sub
test
ret
test
pop
dec
xchg
mov
call
dec
shr
xor
push
or
push
in
in
je
cmp
testb
push
push
xor
out
adcl
push
jp
shrl
sub
sub
push
addb
xchg
add
adc
test
test
and
loop
pop
lcall
cwtl
xor
push
ljmp
pop
leave
mov
sbb
dec
inc
adc
test
cmp
mov
jecxz
or
pop
ret
arpl
add
gs
xchg
push
jnp
pushf
scas
xor
das
mov
adc
cmp
pushf
fldcw
adcl
and
pop
and
leave
fs
ds
lock
jmp
and
mov
xchg
sbb
xor
fs
or
mov
mov
mov
add
mov
pusha
adc
jp
mov
push
test
lea
mov
loope
sti
cmpsl
mov
dec
jp
cmpsl
cmpb
dec
lahf
ret
jbe
call
frstor
mov
dec
mov
outsb
and
insb
xchg
fucomi
jge
pop
mov
ret
lcall
rclb
adc
es
out
sub
ja
xor
mov
es
xchg
addr16
dec
pop
jl
sbb
std
and
movsb
push
addr16
push
and
sti
add
jae
push
nop
sbbb
mov
sub
outsb
arpl
jl
mov
add
decl
xor
xor
fsubrs
stos
adc
into
jbe
add
es
adc
pop
jb
insb
or
cmp
mov
test
inc
fwait
push
sub
mov
xor
pop
cmp
xor
imul
adc
push
pop
inc
fiaddl
mov
out
sub
pop
into
subb
xor
push
addr16
and
clc
mov
test
xchg
adc
enter
iret
or
repz
sbb
dec
mov
in
ja
and
leave
pusha
fwait
js
ret
jne
repz
mov
psraw
xchg
stos
notb
xchg
dec
es
out
xchg
xchg
dec
leave
sbb
jns
fbstp
test
test
mov
jno
loope
mov
mov
fistpl
sub
push
jb
push
popa
das
es
pop
sbb
and
cli
inc
or
dec
pusha
daa
mov
sbb
mov
mov
inc
fwait
jno
or
inc
mov
inc
fwait
inc
ret
fistpll
leave
mov
dec
jo
scas
xchg
std
lods
bound
adc
dec
inc
cmp
loop
dec
divb
arpl
or
dec
aaa
sub
sub
push
push
testl
cmpsl
out
add
jb
cmp
mov
scas
les
int3
leave
les
pusha
mov
mov
jne
scas
leave
pusha
and
ja
loopne
outsl
es
nop
mov
jmp
mulb
sbb
xchg
sbb
mov
dec
jl
enter
mov
outsl
lret
popa
lods
add
inc
test
mov
cmp
in
cmp
add
cld
inc
iret
fucomp
and
lahf
insl
jmp
mov
cmp
inc
in
mov
inc
mov
jbe
xchg
pop
mov
xor
mov
scas
jnp
lock
sbb
cmp
fdivrl
bound
sbb
mov
lds
testb
mov
in
movsb
pop
add
jmp
pop
daa
sbb
addr16
add
or
adc
stc
aaa
push
jnp
cmp
std
cmpl
adc
nop
ja
cmc
push
sahf
icebp
push
mov
lods
add
xorb
xchg
dec
mov
lds
pop
jmp
dec
sub
int
hlt
and
mov
btrl
pop
movsl
or
out
sahf
addr16
dec
add
xor
pop
fildl
sarb
jae
push
mov
mov
out
push
xor
int
lods
xor
mov
mov
ss
fmuls
pop
sbb
and
and
popa
outsl
or
cmp
les
divb
dec
jae
and
pop
jg
outsb
std
stos
nopl
cmc
and
jae
movsb
das
jns
popa
imul
inc
repnz
or
movsl
cmp
in
call
jl
ret
sarl
popf
scas
icebp
rcl
dec
inc
pusha
divl
call
into
push
bound
push
xor
ja
out
imul
repnz
test
jns
adc
mov
dec
mov
addr16
es
cmc
xor
add
push
mov
incb
or
xor
cli
fisttps
adc
mov
mov
aad
jecxz
das
cld
mov
fnstsw
cs
cmc
jl
mov
aaa
loop
adc
mov
pop
int3
xchg
pop
pop
inc
stc
pop
repnz
sbb
dec
mov
jl
je
scas
mov
or
loopne
or
jbe
stc
repnz
add
and
iret
std
mov
aas
mov
adc
inc
and
stos
xchg
lock
jne
ret
push
leave
call
test
cli
mov
jp
incl
pop
outsl
orb
push
xchg
popa
add
mov
mov
or
lea
shrl
push
xchg
xchg
push
jb
push
mov
int
push
outsb
add
xor
ret
sub
outsl
dec
ret
mov
dec
je
mov
lods
inc
xchg
cmpsb
aam
lods
ljmp
pushf
dec
adc
inc
dec
mov
pushf
lods
cmp
cmp
stc
cmp
pop
and
les
mov
stos
in
sbbl
pop
test
or
inc
mov
mov
aad
hlt
push
pop
hlt
adcb
sub
arpl
test
sbb
cmp
pop
cmp
test
ja
cmpsl
mov
in
xchg
fisubrs
xor
add
lds
mov
push
aas
jnp
aam
mov
adc
push
fsubrs
xor
lret
popa
xor
jg
clc
mov
sub
fisttps
lods
pop
aam
pop
dec
pop
jmp
sbb
int
cs
gs
call
and
cmp
xchg
jecxz
call
int
mov
and
into
sub
lcall
dec
xchg
xchg
sub
push
pop
mov
mov
and
inc
adcl
test
insb
pop
sbb
repz
loope
addr16
adc
nop
mov
xor
mov
push
pop
adc
push
xchg
sub
loopne
dec
aam
cld
cmpl
adcl
cmp
cmp
ja,pt
dec
lods
cmp
mov
ret
jnp
scas
fldcw
sub
sbb
mov
ja
cmpsb
mov
jge
add
imul
mov
add
add
mov
push
jno
sub
inc
mov
bound
jo
xchg
mov
cmpsl
pop
mov
ja
insb
xor
outsb
mov
lds
or
xor
ret
nop
cltd
xor
xchg
mov
out
sub
rcrb
outsb
mov
and
cmpsb
inc
popf
mov
push
fstps
xlat
jle
mov
test
cmpsl
jb
add
cmc
lahf
jb
xor
lea
int
ljmp
stos
mov
clc
pop
xlat
imul
out
pop
dec
mov
mov
add
in
mov
sbb
mov
lea
push
fldl
jb
jae
jle
fisubrl
push
lds
dec
fisubl
add
pop
push
pop
jb
lods
aas
sbb
lods
pop
cmp
out
outsb
cwtl
pop
lahf
je
cltd
xor
adc
mov
lret
cmp
nop
sbb
hlt
cmp
clc
dec
jge
jbe
inc
mov
shlb
push
cwtl
push
xchg
or
push
mov
pop
in
adcl
lret
sub
data16
pop
sub
dec
add
enter
jae
adc
dec
mull
push
sbb
inc
jmp
jns
mov
shll
push
dec
ss
jle
daa
mov
or
das
int
sbb
out
insl
pusha
es
push
pop
imul
mov
js
dec
xchg
repnz
mov
mov
xor
xor
in
stos
push
xchg
aas
push
in
inc
gs
adc
and
pop
std
lret
nop
or
into
sbbl
mov
es
in
or
dec
cmp
cmp
cmp
pop
rorb
pop
mov
inc
popf
dec
jl
inc
aaa
into
lea
xlat
xor
outsb
mov
mov
in
enter
sbb
mov
push
xor
cmp
loop
mov
orl
jnp
sbb
sub
adc
mov
lods
pop
out
jmp
out
dec
jo
std
movsb
jo
in
mov
adc
jmp
cltd
push
and
call
loopne
ljmp
and
mov
sbb
mov
dec
or
in
in
into
cmp
mov
xchg
add
jp
ret
lds
incb
shl
and
imul
push
adc
andb
xor
mov
addb
sub
je
xchg
mov
sub
add
pushf
xor
bound
xorb
or
mov
add
in
insl
sbb
out
ja
add
xor
jns
psubusw
mov
in
enter
push
xacquire
sub
pop
test
jmp
les
xchg
lret
into
cld
lock
push
hlt
or
mov
sbb
dec
pop
and
addr16
lahf
jne
push
lret
cmp
jae
jmp
fbld
adc
stc
or
test
dec
and
push
outsb
adc
test
sub
mov
inc
mov
pop
lods
add
mov
xor
fdivr
xchg
push
cmpsl
aaa
mov
mov
icebp
mov
mov
mov
sub
and
sub
js
je
daa
and
xor
hlt
xchg
xor
or
dec
decl
test
bound
sub
jo
in
dec
push
mov
jne
test
notl
xor
push
cld
pop
icebp
loopne
ss
xchg
ret
arpl
jbe
mov
cmp
testl
iret
out
add
add
jl
and
jno
push
lcall
aam
subb
arpl
pop
shrb
push
movsl
cmp
inc
pop
js
sbb
sbb
jecxz
gs
das
insl
pop
ror
into
mov
scas
add
shll
jne
xchg
nop
mov
dec
mov
fwait
in
or
jle
and
cmp
pop
rcl
cmpsl
int
pop
repnz
jne
xlat
mov
adc
xchg
ds
sti
adc
mov
mov
sub
mov
push
or
test
pusha
ss
adc
add
xor
xchg
mov
dec
or
lcall
mov
xchg
push
inc
push
out
jb
aaa
cli
lods
inc
jne
add
xor
xchg
push
out
iret
test
ss
lock
and
cltd
cmpsl
sbb
fs
pusha
pop
movsl
push
lods
fisubs
mov
or
xchg
fisubl
sahf
pop
sub
cmp
es
push
jmp
pop
cmp
push
cmc
adcl
jae
ficoml
or
jle
lret
scas
push
out
xor
shll
fidivs
dec
mov
punpckhdq
dec
inc
ficoml
dec
clc
push
sub
sub
mov
arpl
loop
pop
test
inc
jb
movl
int3
or
mov
inc
xchg
xlat
insb
or
loop
adc
push
push
cs
pusha
js
xchg
mov
and
lods
and
or
xchg
push
add
mov
subb
xchg
sahf
ss
mov
cs
pop
es
xchg
jmp
cwtl
or
mov
out
mov
outsb
loope
jns
cs
or
das
je
stos
mov
jmp
push
jbe
rclb
dec
imul
sbb
adc
ss
in
xchg
mov
xchg
adc
jecxz
add
inc
cmc
mov
xor
cltd
push
mov
mov
enter
push
lahf
jp
push
das
mov
pop
in
xchg
add
ds
imul
pmullw
mov
xchg
sub
lods
out
clc
aas
dec
push
dec
popf
aaa
ror
ficoms
mov
cmp
cs
xchg
sub
scas
xor
loopne
mov
movsl
add
inc
imul
insb
js
mov
sti
mov
cmpb
mov
add
push
int
jnp
outsl
cmpsl
cmp
inc
xchg
roll
sahf
xor
and
mov
or
xchg
scas
sbb
sbb
xor
mov
lds
mov
pop
andps
xchg
add
test
adc
test
repnz
enter
insl
loopne
jns
adcb
mov
pop
sbb
xor
fs
icebp
fnstsw
sbb
lods
adc
iret
fld
push
mov
jns
push
outsl
xchg
mov
jle
sbb
inc
fldt
sub
xchg
adcb
or
aam
adc
flds
cltd
lods
mov
cmp
test
pop
popf
rorl
or
fstpt
fidivs
push
pop
ret
dec
scas
lds
xlat
xchg
leave
popa
mov
mov
montmul
cmpsb
add
test
lock
xor
pop
mov
add
push
stc
aam
aam
inc
sbb
cmp
fdivl
aam
aad
jge
xchg
scas
dec
in
xlat
andl
push
xchg
cltd
mov
lods
aad
lea
lds
cmpsb
xchg
pop
in
jge
push
or
rolb
inc
lahf
adcb
fcomip
sahf
adc
mov
mov
iret
sub
cmpsl
scas
jno
xor
inc
imul
jge
push
lock
mov
jg,pt
fcomps
push
in
jge
push
pop
xor
rcr
jno
or
clc
mov
xchg
dec
cli
sub
push
jge
in
daa
addr16
repnz
pop
jp
into
jle
popf
scas
mov
lahf
push
push
xchg
out
cmpsl
movsl
cmp
inc
inc
ljmp
and
mov
dec
cs
stos
ss
in
xchg
sub
cmp
dec
sti
dec
shrl
dec
js
adc
add
dec
icebp
cmpsl
jp
shll
mov
in
shll
xor
scas
jnp
push
inc
lret
add
and
movsb
or
mov
imul
lods
mov
jmp
or
roll
gs
hlt
pop
fnstenv
dec
out
mov
xor
stos
icebp
cld
outsb
inc
icebp
dec
add
out
push
gs
aaa
sub
xor
dec
rol
sub
ljmp
sub
aad
cmpsb
inc
lret
sub
sbb
xchg
add
adcl
dec
addr16
dec
fs
lahf
imulb
daa
repnz
or
js
pop
adc
adc
cmp
mov
push
shrb
fwait
xor
mov
push
lahf
sbb
or
in
aas
jp
dec
mov
imul
data16
jo
out
out
cmpsl
push
aaa
jns
rorb
fidivrl
mov
jl
movsb
rorb
dec
popa
jnp
xor
xchg
dec
push
sbb
dec
fs
or
push
je
imul
sti
bound
xor
xchg
icebp
pop
addr16
cmp
dec
mov
lds
jns
pop
mov
sahf
repz
xor
pusha
pop
xor
mov
push
lock
pop
add
aam
rol
andl
lret
mov
add
pop
or
in
jae
inc
jb
xchg
movb
daa
adc
cli
pop
cmc
adc
mov
push
jle
lds
push
pop
cmp
cwtl
incb
push
mov
cmp
imul
dec
pop
xchg
push
jns
hlt
stos
xor
imul
pusha
sbb
xchg
mov
pushf
aas
sahf
adc
mov
ljmp
pop
mov
fucomip
sub
out
ljmp
xchg
push
sub
inc
and
push
sahf
shlb
iret
shll
vhsubps
mov
arpl
xchg
dec
rorb
push
cmpsb
ret
and
adc
adc
sbb
mov
ret
add
xor
or
imul
pusha
sti
jnp
sbb
int3
dec
sbbb
sti
adc
mov
add
xor
out
add
loop
in
pop
mov
in
pop
mov
fstpt
xchg
push
clc
popa
jg
adc
insb
sbb
test
out
and
sbb
mov
jp
jmp
fisubrl
lea
jle
inc
and
leave
shrl
adc
stc
rorl
lret
mov
imul
sub
fiaddl
mov
cli
xchg
lods
icebp
inc
pop
das
addr16
bound
sbb
lea
aam
and
sbb
jae
test
sahf
xchg
or
dec
mov
pop
add
aas
add
push
push
xor
insl
fidivs
and
push
xchg
cld
ds
sub
push
pusha
jle
and
mov
ljmp
sub
cmpsl
cmp
cli
xlat
sub
sub
jp
and
daa
cmp
out
mov
mov
adc
mov
mov
gs
xchg
stc
ffreep
jl
loopne
lods
cli
das
sub
mov
inc
jl
fld
push
jp
bound
pop
les
jno
xchg
stos
push
sahf
test
jns
push
jl
pop
ret
movsb
mov
mov
sbb
leave
dec
divl
jnp
xor
dec
ret
inc
mov
lods
lods
lret
cli
popf
stc
mov
sub
fcmovnbe
inc
inc
shll
lret
push
jno
fwait
pop
cld
push
mov
mov
or
sbb
into
pop
mov
popf
add
bound
xchg
bound
ret
repz
jp
adc
les
shrb
es
sbb
sub
decl
icebp
mov
and
add
ret
sbb
xchg
jne
xchg
mov
movsl
clc
fcompl
or
nop
lret
loopne
cli
pushf
mov
in
push
jno
loope
imul
call
jp
outsb
or
cld
mov
mov
dec
cli
jbe
inc
test
xlat
push
and
ja
mov
decb
inc
test
stos
add
les
inc
pop
mov
jae
psubusw
ret
fmul
int
lock
mov
push
repz
cmp
mov
add
js
mov
xchg
cmp
ljmp
cmp
mov
loope
scas
push
jmp
aaa
repnz
das
xchg
es
daa
inc
push
lcall
std
es
sti
insb
add
ret
jnp
stc
xchg
jne
mov
hlt
mov
xor
push
mov
push
sub
xchg
ss
addr16
aad
ja
adc
and
mov
arpl
add
out
jb
jno
push
sub
push
dec
mov
idivl
dec
rclb
movsb
andl
in
xor
xchg
push
ljmp
and
fidivrs
pop
adc
out
dec
dec
mov
aas
jp
mov
rcll
imul
data16
stos
cmp
cmp
xor
adc
xchg
xor
push
add
rcrb
jbe
mov
sbb
or
sbb
repnz
and
les
lods
mov
pop
mov
sub
pop
jnp
and
test
dec
ret
add
xor
test
cltd
test
lods
hlt
xor
add
adc
cltd
xor
xor
fsubs
out
xor
push
ret
jne
xlat
xlat
sub
push
mov
inc
dec
daa
outsl
push
lock
mov
push
movsb
fbstp
mov
adc
idivb
sahf
imul
sub
cmp
cmpsb
adc
dec
mov
stc
mov
and
push
pop
mov
pop
lcall
lcall
call
xor
ret
mov
clc
and
imul
aam
aam
lcall
cli
adc
stc
adc
jnp
push
push
mov
dec
aaa
pop
imul
pop
fmull
into
out
in
daa
or
loop
lds
jecxz
rcrb
mov
and
outsl
fidivs
scas
push
lahf
fdivs
cmp
inc
stos
xchg
and
cmpsl
cmp
cld
or
addl
lods
inc
lret
sbb
loop
push
mov
mov
jmp
out
pop
add
sub
fildll
inc
les
xor
pop
icebp
sbb
mov
jnp
cwtl
stos
ss
outsl
dec
add
sub
or
mov
fsubrs
xchg
push
mov
xor
jl
repnz
mov
push
movsl
mov
clc
sub
cmp
imul
adc
or
pop
sahf
cmpsl
sub
es
mov
dec
jne
adc
out
lds
test
adcl
xor
cmp
push
and
pop
pusha
cwtl
outsb
iret
mov
test
dec
inc
fdivl
xchg
push
sub
and
dec
lods
dec
jecxz
in
jecxz
mov
xchg
inc
test
faddl
loopne
inc
leave
adc
push
add
mov
mov
dec
enter
pop
nop
cmp
repz
mov
fwait
and
jmp
cltd
mov
lahf
inc
cld
cmpsb
shl
xor
sub
je
sbb
lret
cmp
ss
loopne
dec
pushf
dec
pop
into
outsb
sub
cmp
sub
into
jl
fisubrs
inc
gs
je
hlt
addl
push
xchg
mov
inc
gs
lret
in
jecxz
out
sbb
js
fists
testl
mov
pop
sti
xchg
nop
stos
inc
data16
ret
sbb
loop
xchg
jp
cmp
xrelease
loopne
add
es
ud2
push
push
or
cmp
inc
out
mov
fcos
inc
sbb
add
pop
mov
dec
and
sti
dec
cwtl
jnp,pn
cmp
ljmp
push
frstor
and
call
adc
repnz
sbb
sub
sbb
xchg
inc
pop
pop
mov
jp
iret
scas
jge
and
add
inc
scas
inc
fistps
inc
into
addl
sbb
sti
xchg
add
movsl
cld
mov
in
sub
inc
sub
rcr
cmpsb
dec
xor
mov
ret
lock
mov
cmp
or
cs
mov
fadd
loopne
pop
jle
mov
add
xchg
das
das
mov
pop
andb
int
push
push
lods
sub
adc
sub
inc
pushl
and
sbbb
movsb
es
jle
nop
je
push
sbb
sub
push
jp
pop
daa
xor
test
pop
call
in
mov
push
or
add
mov
sbb
lods
loop
mov
fcompl
cli
add
cwtl
or
cmp
insb
fists
test
cld
push
xor
push
out
dec
test
inc
cli
stos
adc
adc
aam
in
jge
ljmp
pop
lret
adc
jecxz
xlat
ja
xchg
lods
mov
add
es
mov
sti
cmpsb
adc
sti
dec
ret
inc
push
iret
xor
pushf
mulb
es
out
and
lods
cmpb
repz
xchg
sub
inc
push
jle
or
out
push
mov
imul
repz
jo
xchg
out
jae
dec
mov
test
orb
jge
sbbb
fscale
or
and
je
mov
jns
lds
lret
xlat
mov
int
push
notl
sbbl
inc
fucomp
inc
mov
dec
sbb
ja
repz
fcompl
mov
cli
rcrl
hlt
push
inc
cmp
xchg
clc
les
shl
icebp
cmpsb
sub
lret
hlt
loopne
cmp
and
icebp
daa
inc
and
push
out
mov
fidivl
test
sub
inc
xchg
fcoms
sahf
jns
sub
add
mov
cmc
dec
jae
pop
call
inc
pop
bnd
stos
aam
sbb
sub
mov
and
scas
dec
mov
cli
mov
and
lret
lret
jp
cmp
mov
jb
shll
mov
or
jmp
cmpsb
pop
xor
nop
rcll
es
pushf
popa
and
jno
mov
fcomi
and
les
mulb
cmp
adc
mov
in
xchg
sub
mov
jg
jle
inc
mov
ficompl
adc
nop
adc
sbb
fidivs
jae
mov
outsl
xchg
ret
sarl
shlb
bound
sbb
icebp
push
adc
xchg
cmp
xchg
scas
mov
in
adc
push
jb
xor
iret
idivb
jp
in
stc
sub
inc
push
sub
cmp
xor
dec
mov
clc
cmp
xchg
cmp
push
notl
cld
cmp
js
push
out
repz
xchg
arpl
testb
cltd
pop
test
xor
gs
adc
mov
xchg
pusha
xorb
sub
jbe
shrb
inc
mov
iret
andl
lret
int3
fwait
push
push
xor
fstpt
lahf
ret
stc
or
stc
jo
inc
mov
cmp
xor
negl
arpl
push
faddl
cltd
lock
shlb
cmc
mov
inc
xchg
dec
orl
roll
pop
mov
sub
hlt
push
xchg
fwait
das
pop
mov
pusha
insl
mov
in
movsb
push
idivl
cmp
mov
dec
outsb
lret
imul
xchg
loope
sbb
aaa
adc
cmc
inc
test
adc
push
pop
cltd
inc
pop
cmpsb
jb
and
shlb
lret
push
push
es
add
xchg
adc
dec
outsl
shr
out
mov
jecxz
daa
push
xor
cmp
dec
inc
les
pop
mov
lret
in
fmuls
icebp
in
mov
jno
stos
loop
icebp
or
insb
lods
pop
xchg
cmp
sahf
xlat
push
sub
pop
xchg
hlt
enter
sub
mov
incb
dec
icebp
inc
call
push
hlt
mov
shrb
or
fwait
adc
pop
ud0
fdivrs
addps
mov
mov
imul
pushf
pop
test
add
pushf
loop
inc
cmp
xor
xchg
jge
lock
jo
pop
cmp
cwtl
jge
mov
mov
test
xlat
push
fldz
enter
inc
flds
sbbb
xor
lcall
sbb
add
fisttpl
fistps
jno
fwait
push
and
dec
push
loope
mov
xor
enter
pop
loopne
rcl
loopne
xchg
add
xchg
cltd
rcll
rorb
rol
push
dec
mov
in
mov
fistpll
sub
repz
movsb
push
sbb
movsl
sbb
std
nop
ds
jg
dec
test
int3
pop
scas
pop
inc
in
adc
cmp
leave
and
fbstp
cmc
jnp
insw
add
mov
pop
or
xchg
push
shrb
push
cld
jo
das
nop
addr16
adcb
test
xor
xor
andb
movq
mov
outsl
daa
mov
dec
mov
ret
push
cltd
enter
fidivrl
xor
movsb
fldcw
clc
cmpsl
mov
ja
sub
cld
push
cmp
daa
sbb
sbbl
pop
mov
or
lds
mov
adc
jno
jecxz
pop
pushf
push
in
aaa
stos
add
jnp
jle
mov
jg
lds
cwtl
adc
pop
cmpsb
jo
movsb
inc
mov
mov
into
addr16
xor
push
int
pop
add
inc
pop
mov
inc
fidivrl
cltd
popa
cmpsb
sbb
adcb
jp
lahf
lcall
jb
xchg
shl
in
pop
les
adc
inc
sub
sub
mov
rcll
jge
jle
rorl
adc
popf
mov
lret
push
and
movzwl
mov
push
pop
push
xlat
push
addr16
jg
mov
call
aaa
add
dec
and
jno
dec
push
cmp
punpckhdq
adc
xor
mov
rep
xadd
sub
add
inc
mov
lock
cmpsb
das
sbb
mov
nop
sbb
add
pop
xor
lahf
scas
xchg
adc
cwtl
xchg
dec
leave
dec
lock
mov
cmpsb
lods
xchg
mov
dec
scas
aaa
in
cmc
cli
inc
xlat
dec
idivl
cmp
mov
lret
cmp
pop
icebp
cmpsl
in
mov
cmp
clc
fldl
arpl
clc
das
test
xchg
xchg
xorl
dec
push
inc
enter
pop
frstor
adc
insb
in
icebp
inc
xchg
push
ret
je
cmp
inc
pop
mov
sub
or
xchg
dec
adc
pop
icebp
sbb
lahf
xor
add
test
fldl
sub
lods
jmp
add
mov
push
repnz
xchg
add
stos
jne
cmp
and
push
cmc
into
leave
std
jae
leave
ljmp
sub
stos
in
fidivrl
fwait
inc
adcb
jp
movsl
xchg
ja
xlat
dec
test
lcall
dec
lock
add
fbstp
pop
sub
pop
xor
lahf
lahf
and
test
inc
rcll
icebp
test
lret
rorl
push
fisttpll
jp
sbb
mov
hlt
or
pop
mov
push
clc
es
repz
notb
and
pushf
sbb
mov
cmp
add
cs
mov
call
or
adc
jb
add
sbb
sbb
xchg
jecxz
int
addr16
pop
xor
mov
or
cmp
pop
iret
das
xchg
push
push
je
adc
mov
lock
stos
ret
outsl
test
inc
ja
popf
loopne
mov
imul
or
lea
sarb
nop
scas
lods
adc
xor
and
push
fisttpl
shrb
out
ret
cld
aas
mov
sti
inc
sbb
lcall
loope
mov
ret
jge
jne
mov
and
scas
shrb
loop
xor
push
test
icebp
scas
sub
mov
mov
gs
sub
adc
jne
call
mov
jecxz
add
mov
shrl
ljmp
cwtl
in
icebp
mov
add
cmc
adc
pop
xor
aas
or
out
or
jns
fildll
mov
shlb
mov
inc
outsl
stos
in
imul
frstor
jp
push
pop
or
inc
daa
out
std
in
shl
inc
lods
ffree
aam
imul
add
mov
movsb
sbb
adc
aam
push
notb
pop
add
add
shr
lds
dec
pop
hlt
push
out
cmp
jge
pop
movsl
ja
jae
push
xchg
push
ficompl
stos
cmc
int3
loope
pushf
sub
adc
enter
add
cmc
int3
das
sub
xchg
sbb
push
popa
les
sub
pop
pop
add
js
stos
imul
pop
loope
add
bound
cwtl
addb
mov
arpl
iret
cmpsl
sbb
xor
ljmp
negb
dec
pop
cmpl
xchg
enter
cmp
pop
inc
test
popf
inc
inc
pusha
std
pushf
adc
inc
push
sub
dec
int3
addb
or
rcrb
insb
ds
fisubl
sbb
pop
mov
and
lods
orl
imul
jne
xchg
test
shr
cmpb
push
dec
stos
xchg
sarb
add
mov
cmp
js
xchg
mov
gs
push
sbb
nop
mov
insl
inc
sub
sub
and
fcom
in
stc
lcall
in
cmc
xor
es
cmp
add
push
cli
fwait
aaa
inc
in
in
fcomp
and
mov
lahf
push
xor
lock
out
cmpsl
adc
adc
mov
div
daa
jnp
iret
inc
fidivl
iret
lahf
jne
fidivl
sahf
fs
inc
cwtl
adc
push
shr
xchg
fstpt
add
fs
lret
xor
je
ljmp
fwait
mov
iret
jne
add
lods
inc
ja
cmp
cwtl
lret
lret
jmp
dec
gs
movsb
or
adc
cli
push
push
sahf
cmpsb
and
and
dec
and
or
fldenv
andl
and
stos
xchg
fsubr
add
imul
lret
imul
nop
std
xorl
test
push
adc
fmulp
fs
insb
mov
sub
int
decl
jbe
jae
cltd
and
pop
js
mov
mov
xchg
mov
mov
repz
pop
fistpl
test
cmp
movsl
pop
fwait
push
loop
mov
xchg
sub
inc
jns
inc
call
cwtl
mov
sarl
aas
mov
loopne
into
cmc
pop
ret
jmp
loope
inc
pop
into
jle
mov
or
popa
mul
push
bound
mov
mov
mov
movsb
sti
call
or
cwtl
mov
mov
cs
cmpsl
push
jnp
jns
sub
shll
in
add
mov
sbb
pushf
js
cmpsl
test
pminub
dec
out
cld
xchg
sub
cwtl
jo
dec
in
mov
lahf
jnp
and
mov
js
push
test
movl
ss
insl
inc
mov
adc
in
jno
out
and
pop
addr16
jo
mov
int3
adc
iret
loope
andl
mov
outsl
push
rol
sub
in
daa
lcall
or
pop
mov
cmpsl
push
jne
mov
data16
and
xchg
or
in
addb
jge
inc
bound
dec
test
jge
or
cmp
fisubl
adc
mov
sbb
push
or
test
scas
mov
cltd
mov
lret
jecxz
cld
mov
fidivrs
push
repnz
jns
cld
push
mov
orb
dec
dec
mov
loop
popa
push
das
into
add
dec
rolb
aas
cld
outsl
xchg
pop
ja
addr16
xchg
dec
outsb
fwait
pushf
pop
cpuid
pop
test
int3
sub
sbb
lods
mov
pusha
xor
inc
mov
lds
shl
push
cmp
jmp
aaa
push
aam
mov
xor
aaa
repnz
cli
sub
pop
xor
xor
add
push
push
sbb
aam
xchg
push
ljmp
jno
out
or
aaa
lea
sub
adc
scas
inc
add
cmp
pop
adcb
mov
loopne
jno
adcb
sbb
push
popf
mov
fadd
jmp
jle
and
test
pop
cmpsb
repnz
inc
rol
ja
pop
jecxz
stc
dec
shll
scas
xchg
cs
shrb
aam
fildll
ds
jo
repnz
pop
out
in
cmpsb
mov
in
xchg
cwtl
int3
ljmp
je
jno
sbbb
scas
xchg
jecxz
or
add
jns
or
icebp
pop
jl
mov
shrl
xchg
mov
pop
out
sbb
cmp
out
mov
lret
sub
xchg
sub
mov
decb
movsl
pop
sbb
inc
jle,pt
outsl
sub
int
pusha
dec
testb
dec
adc
cmp
out
cmpsl
mov
mov
addr16
push
fcoml
pop
cmp
subb
mov
cmpl
loope
mov
in
fldl
ss
jmp
push
push
pop
xchg
sti
mov
push
sahf
or
das
adc
xchg
test
sbb
adc
cmp
daa
daa
cmpps
push
in
sub
pop
loopne
mov
imul
cmc
sar
cmp
sbb
adc
aaa
push
addr16
inc
fstl
call
in
sbb
pop
stos
sbb
xor
shll
push
sub
adc
or
sub
lret
addl
xchg
in
ss
cmc
sbb
fnsave
les
bound
inc
jmp
inc
cmp
stos
repnz
dec
adc
xchg
cmp
fdiv
xchg
or
fucomp
test
lods
fistl
xor
rorb
sub
mov
divb
int
xchg
into
enter
cmpsl
sub
or
xor
or
xchg
inc
or
sbb
push
mov
push
ret
clc
pop
shrl
in
pusha
sub
pop
inc
mov
mov
shll
sub
es
xor
ss
push
rclb
clc
js
mov
dec
pop
outsl
sahf
jnp
xchg
sub
sbb
jmp
adcb
ret
sbb
and
dec
mov
pop
add
cmp
popa
fcompl
in
lock
cltd
and
add
and
xchg
cmp
popa
rcll
xchg
stc
fsubrl
cmp
mov
fstpt
lret
add
aas
inc
lret
cmpsb
stos
fidivrl
gs
inc
jecxz
push
leave
push
jg
fldcw
call
fs
mov
jns
cwtl
roll
fldt
xchg
sub
xor
clts
ret
xor
jmp
cltd
lods
mov
xor
js
inc
arpl
loopne
sbb
mov
daa
mov
push
sarl
dec
sub
xlat
mov
movsl
cmp
xchg
sub
imul
mov
fildll
dec
es
insl
or
out
mov
pushf
push
push
pop
mov
push
or
add
dec
pop
add
xor
push
mov
pop
call
or
xor
xor
mov
filds
test
mov
stc
xchg
ss
shl
xor
test
cmp
cwtl
dec
sti
inc
out
dec
in
pop
dec
lahf
dec
mov
ret
and
rcrb
sti
lds
pop
adc
aad
stc
sahf
mov
cltd
jmp
aad
in
mov
iret
jmp
adc
leave
test
into
lcall
xor
sub
in
and
lods
mov
pop
das
stos
inc
pop
mov
or
jo
clc
push
repnz
mov
fs
mov
mov
push
out
das
push
out
aam
icebp
add
and
sbb
rol
inc
pusha
xorb
shrl
dec
jmp
test
or
pop
push
xor
popf
push
sub
xchg
orl
cmp
inc
add
adc
rolb
ja
mov
jp
and
cmpsb
in
fwait
add
push
xorb
jb
mulb
fstl
fwait
sub
popf
xor
scas
dec
lock
sbb
stos
icebp
jp
cmp
jo
add
scas
es
sbb
clc
xchg
shrb
push
jp
add
imul
test
enter
mov
in
or
fstl
push
mov
jo
stos
in
aad
mov
adc
adc
inc
mov
pop
test
sarl
fadds
jecxz
inc
jno
jb
insl
inc
cmp
or
mov
leave
pusha
cmpb
mov
shlb
dec
jp
dec
lods
dec
pushf
cmc
inc
mov
pcmpgtb
pop
movsl
sbb
jg,pn
sbb
dec
inc
sbb
xchg
mov
dec
jne
lea
add
push
pop
push
and
iret
xchg
test
ljmp
pushf
ds
add
or
mov
dec
fwait
test
mov
sbb
test
in
loop
mov
push
xchg
add
fidivrl
test
in
or
repz
mov
xor
movsb
and
sub
xchg
iret
inc
stos
clc
clc
and
rolb
add
fcompl
xor
cmpsb
push
push
andl
xchg
lock
lods
sbb
insl
sbb
ret
pusha
inc
push
test
xor
push
out
jns
jg
xchg
in
in
dec
push
movsb
jb
xor
jp
adc
sbb
ds
mov
clc
xchg
push
xchg
push
fs
leave
loop
cmc
cmp
cli
arpl
jp
adc
insb
mov
push
shll
insl
mov
cli
in
insb
popa
mov
jl
sbb
pop
mov
mov
and
inc
shrb
sub
subl
call
int3
adc
adc
bound
enter
and
adc
in
aas
cmp
and
mov
movsl
mov
cmp
pop
inc
imul
pop
cwtl
push
inc
sub
and
out
dec
pop
jmp
push
ljmp
jp
sbb
lahf
scas
inc
sarl
push
mov
mov
jns
aaa
into
xor
loop
push
add
mov
jnp
add
cmpsb
jne
mov
lcall
push
inc
mov
lods
jae
popf
outsl
insb
lods
fidivl
pop
mov
xchg
cli
repnz
lahf
pop
subl
enter
sbb
movsl
mov
pop
push
dec
stos
jns
hlt
stos
mov
and
sarl
pop
in
imul
icebp
mov
mov
adc
jge
cli
shrl
mov
and
inc
cmp
mov
mov
syscall
pop
xor
and
dec
pusha
mov
movsl
jbe
call
fwait
sbb
mov
sti
cmp
out
outsl
pop
pushf
pop
push
pop
fnstenv
and
push
fcmove
mov
cmpsl
out
pop
insl
jne
jnp
jmp
adc
shr
dec
jns
or
xchg
mov
movsb
mov
push
clc
push
pushf
cmc
mov
pop
lret
pusha
or
negl
sbb
fwait
add
sbb
or
dec
pop
es
test
aas
lods
inc
sub
pop
addb
jno
mov
sbb
fadds
mov
xor
dec
sbb
jg
xchg
imul
jo
jg
stos
xchg
testl
ja
adc
ret
dec
lahf
jecxz
adc
jno
and
cmpsb
pop
sub
stc
cmp
movsl
xchg
mov
lods
mov
mov
mov
fcom
mov
dec
rclb
push
int
xor
mov
push
and
jbe
sub
ja
sbbl
adc
jns
out
je
shr
push
fidivrl
aad
or
leave
adc
leave
repnz
out
inc
clc
lea
mov
jae
push
lods
and
and
les
cmp
push
add
inc
leave
jg
add
loope
or
bound
or
out
jb
sbb
sti
roll
inc
mov
sbb
cltd
mov
dec
fsubr
jle
stos
mov
in
cmc
push
fdiv
mov
rol
sbb
ret
shll
aam
xchg
and
or
xchg
fnstsw
sti
fwait
and
xor
das
mov
psubsw
aam
pop
idivb
add
aam
divl
mov
das
jo
gs
icebp
pop
push
mov
dec
mov
xor
iret
push
pop
lcall
push
jns
push
mov
int
mov
daa
insb
arpl
leave
into
std
push
mov
adc
pusha
pop
in
imul
xchg
aas
inc
push
jno
hlt
dec
mov
cwtl
mov
jp
xor
mov
mov
fnstenv
jge
dec
stos
into
cmp
out
repnz
shlb
ret
lcall
sbb
ds
add
lret
mov
lods
jg
call
rcrl
std
or
cmp
in
shrb
adc
push
sahf
push
xor
cmp
inc
cmc
cli
and
sub
fucomip
fwait
test
les
fisubs
mov
adc
test
pop
out
les
pusha
mov
push
mov
jecxz
pop
imul
iret
mov
dec
xor
xchg
xor
in
lds
ljmp
orl
sbb
in
jge
mov
repnz
or
aaa
mov
push
inc
jo
popa
mov
rol
ds
xor
pop
push
cli
cmp
sub
xlat
bsr
cmp
sbb
mov
xchg
lret
or
in
sub
lret
lods
pop
and
xchg
mov
loopne
inc
or
mov
fsubrs
call
push
fstpl
out
xor
cmp
aaa
push
cmp
stos
xchg
lret
push
mov
jmp
adc
popa
sub
mov
pop
das
push
aad
cmp
push
loop
push
fdivl
or
jne
stc
or
and
sub
dec
xchg
das
mov
push
insb
pop
hlt
pop
data16
bound
cmp
into
jp
add
in
xor
out
mov
xchg
lret
bound
xor
sub
rcr
or
repnz
stos
popf
in
push
sahf
adc
add
cs
jmp
add
ret
mov
fs
pop
xor
jbe
int
add
insb
sub
ss
push
mov
sub
jae
shrl
or
pop
out
sahf
cmp
mov
imul
repnz
jo
ret
roll
loope
loopne
lret
cmp
adc
sbb
das
stos
movsl
add
daa
loopne
dec
lret
mov
hlt
jl
xchg
xor
sti
test
jb
push
fistpll
hlt
ja
pop
jne
lret
fisubl
test
rcrb
inc
dec
in
int3
ds
std
sub
lock
andb
mov
cmpsb
mov
mov
push
or
mov
in
sub
out
mov
push
xchg
popa
mov
daa
cs
jo
dec
fcmovu
mov
nop
push
dec
pop
xor
push
dec
pop
mov
jbe
sbb
aad
or
mov
cmpsl
in
dec
xor
aad
cmp
xor
cmp
fidivrl
dec
xchg
push
mov
jge
icebp
movsb
jns
outsb
jnp
sub
mov
mov
js
repnz
daa
add
shrl
jb
ficoms
iret
pop
aas
adc
lods
mulb
inc
and
xacquire
cmp
push
fdivp
mov
jge
xchg
pop
loopne
jbe
out
mov
xchg
xchg
sbb
sub
pop
mov
inc
addr16
push
dec
adc
adc
pop
addr16
dec
int3
mov
or
sub
or
mov
in
xchg
outsb
jg
lods
das
stos
aad
cwtl
push
int3
call
adc
xlat
add
ja
icebp
and
jno
or
out
push
cmp
jns
cmp
mov
add
je
fidivl
movsl
sti
clc
inc
xchg
mov
add
out
xor
divb
callw
addr16
fs
mov
nop
push
stos
mov
jnp
cli
fisttps
add
ds
sbb
xchg
addr16
dec
push
int3
push
sar
pop
jne
into
popa
fcompl
cmp
pop
cmc
adc
imul
out
mov
sbb
ds
and
or
mov
mov
mov
cmp
inc
jg
shl
push
ss
lahf
xorb
inc
loopne
movsl
xchg
fs
jbe
pusha
jmp
out
stos
or
xchg
xchg
out
movb
or
dec
lahf
idiv
pop
dec
add
or
xchg
outsb
daa
inc
cltd
sahf
ficomps
cmpsb
xchg
adc
rol
cmpsb
cmp
scas
mov
fcmovb
fucomi
decl
inc
lods
mov
and
mov
insb
and
or
xchg
inc
xchg
scas
pushf
mov
pop
in
clc
call
xchg
dec
iret
fisttpll
mov
int
mov
fucomp
jnp
mov
js
frstor
imul
push
jnp
daa
sub
mov
lock
loopne
cwtl
data16
aam
rorb
mov
push
mov
out
out
mov
xor
or
xor
ljmp
sub
push
push
adcb
add
jno
xor
jno
ret
jmp
or
pop
xchg
add
ficoml
sbb
cmc
xlat
or
aad
jno
ss
mov
mov
cmpsb
push
mov
ret
lock
into
test
or
inc
das
cmp
pop
adc
push
cmpsl
xchg
rcrl
jns
lock
pop
ja
jne
push
mov
pop
test
imul
shl
jg
mov
xlat
cmp
adc
das
push
out
adc
and
mov
push
ss
fmulp
mov
or
loope
fsts
add
xor
push
popf
out
mov
stc
or
sub
add
xlat
pop
cs
push
lahf
cli
dec
std
inc
add
inc
jb
in
and
sbb
lea
or
sub
push
popf
out
test
sub
test
sahf
sub
cld
cmpsl
adc
scas
popl
sub
cmpsl
int3
mov
sub
mov
mov
in
xor
ljmp
push
add
mov
jmp
pop
mov
adc
sbb
mov
ja
pop
xchg
add
iret
mov
or
or
cltd
xchg
sub
mov
ss
lea
push
jae
repz
stc
jl
cmp
jne
outsb
sbb
dec
cli
stos
mov
fisttps
pop
in
test
mov
orl
jns
ja
pusha
xor
inc
rolb
insb
pop
fbstp
mov
stos
push
cmp
mov
pop
or
popa
and
sub
shrl
mov
icebp
enter
xor
and
fnsave
jne
push
add
adc
mov
xchg
xchg
pop
push
hlt
sahf
jb
mov
sbbb
cmp
ds
js
xorl
dec
pushf
int
out
cltd
into
loop
scas
ret
mov
data16
sub
loope
dec
pop
adc
or
add
and
dec
cmp
jo
jns
pop
in
aaa
dec
std
push
push
and
rclb
inc
cmp
sti
and
sub
stos
out
mov
movsb
xchg
jno
std
adc
insb
push
lods
into
or
loope
addb
or
mov
cmp
pop
stos
insl
ficoml
mov
pop
ss
mov
sbb
adc
aam
test
pop
or
sbb
imul
push
lods
inc
repz
cmp
or
pop
out
insb
insb
divb
sub
push
sbb
gs
stos
mov
stos
push
pop
enter
push
push
sub
fdivl
jmp
dec
adc
aaa
sub
fwait
cli
xchg
int
sbb
sbb
push
push
dec
dec
sbb
dec
insl
cmpb
rcrl
jmp
mov
inc
and
fs
aam
pop
mov
adc
stos
mov
popa
dec
mov
mov
jno
jae
jbe
inc
ss
adc
jmp
popf
and
xchg
mov
dec
pop
fldl2e
lods
push
lds
xchg
jae
jg
xor
dec
jbe
push
jg
jnp
hlt
in
push
or
and
sub
inc
mov
arpl
xchg
shlb
inc
pop
nop
clc
cmpsl
mov
xchg
add
mov
jmp
mov
sbb
mov
int
mov
sti
cmpsb
sahf
lods
fcmovne
repz
aas
xsha256
cmpsb
push
pop
pushf
sbb
pop
xor
repnz
and
loop
mov
xchg
shrb
addr16
pop
fisttpl
push
sub
jbe
add
add
loope
add
jo
adc
cmpsb
cmpsb
mov
cmpl
pop
aaa
or
pop
inc
pop
adc
pop
out
dec
ds
shl
outsl
xchg
rorl
sti
xchg
sub
enter
mov
ljmp
divb
jecxz
cmp
xor
insb
out
or
mov
mov
xchg
xchg
mov
mov
mov
xchg
adc
loope
das
xor
xor
dec
aam
xlat
sahf
test
dec
xor
adc
test
das
testb
dec
pop
jl
and
insl
aam
push
mov
adc
test
and
cli
sbb
fdivrs
ret
adc
cmc
xorb
jbe
xchg
jmp
or
add
jecxz
outsb
adc
mov
cmpsl
repz
sub
popf
rolw
xor
mov
lods
daa
cmp
dec
fwait
dec
movsb
dec
gs
mov
outsb
sub
push
cmp
mov
pop
js
in
push
outsb
dec
push
fwait
jo
jl
in
stos
inc
hlt
cs
mov
movsb
out
push
pop
cmp
shll
loop
jmp
inc
dec
movsb
ljmp
cmc
adc
or
sarb
addr16
shll
xchg
mov
cmp
sbb
jle
aaa
subb
mov
xchg
xchg
repz
xchg
dec
shlb
or
out
outsb
push
in
inc
popa
ljmp
fsubr
xchg
decb
pop
mov
lock
or
xor
adcb
and
xchg
push
xor
bound
mov
push
adc
das
fmull
in
inc
inc
rorl
inc
or
mov
shlb
in
addl
jecxz
mov
ret
cs
mov
xor
jae
sub
push
jns
or
mov
divl
outsl
mull
out
cwtl
inc
cmp
push
dec
lret
cmp
jecxz
fadds
pop
rorl
jne
cli
stos
adc
mov
sbb
xor
mov
mov
or
push
fisubl
xchg
leave
iret
mov
fcoml
cmp
mov
mov
mov
insl
mov
sub
mov
ret
add
jo
fmuls
iret
addr16
movsb
push
icebp
or
mov
aas
pop
push
pop
ds
ret
dec
fisttps
sub
xor
or
add
ret
xor
xchg
popf
hlt
push
or
add
jle
int3
testl
mov
jns
pop
sti
dec
shr
pop
and
mov
xchg
pop
inc
mov
dec
out
jns
push
cltd
cmp
mov
push
add
xor
sarl
ds
das
pop
imul
aas
push
push
imul
daa
repnz
xchg
add
insb
mov
sbb
cmp
mov
cmc
mov
stos
pop
out
fdivrl
lret
xchg
out
sbb
jbe
xor
mov
cmp
xchg
pop
xchg
xlat
sub
and
loope
xchg
sub
adcl
and
push
inc
jecxz
aaa
imul
push
pop
dec
leave
fimuls
lcall
stc
xchg
shrd
sbb
add
dec
loop
dec
lcall
in
test
push
lods
out
jb
and
sub
sti
or
adc
push
cmpsl
pop
push
dec
or
fwait
mov
jmp
xchg
std
ror
cmp
push
pop
enter
push
in
dec
push
jecxz
jmp
clc
js
dec
data16
and
out
cmpsl
mov
call
into
andl
and
pop
adc
outsb
loope
push
dec
lcall
push
push
fs
and
insl
loopne
jnp
xor
jge
cltd
scas
in
mov
cltd
lret
gs
sbb
cmp
mov
into
fsubl
in
sti
and
pop
inc
scas
xlat
cmpsb
sahf
pop
fdiv
hlt
aam
dec
pop
cmp
mov
sub
fstp
test
push
mov
outsb
ret
sbbb
jge
xor
mov
ljmp
popa
or
aas
lret
call
je
out
aaa
adc
cmpl
or
push
dec
int3
push
push
mov
gs
lret
cmp
xchg
and
mov
mov
bswap
pop
xabort
mov
jp
pop
pop
mov
nop
clc
adc
addr16
roll
daa
mov
mov
push
aaa
pop
aaa
aas
or
std
outsb
test
pusha
adc
int
shll
sbb
aas
loopne
fwait
insb
dec
test
dec
jecxz
div
adc
in
add
jg
mov
jge
bound
popa
sub
orl
or
daa
pop
xor
add
xor
mov
aaa
aam
call
xor
push
data16
aam
test
fsubr
push
insb
repz
sbb
int3
push
add
jmp
sub
ss
jmp
push
dec
mov
jae
xor
and
push
call
add
mov
xchg
add
or
and
and
jo
out
jno
jno
daa
pop
mov
lds
fnstcw
das
fs
jmp
inc
add
dec
bound
shl
rcrl
jne
cmp
aaa
sahf
push
movsl
push
lcall
cmpsl
jno
in
sub
adc
xchg
cwtl
dec
push
testb
lods
ret
jle
inc
inc
inc
xor
fxch
and
sahf
push
inc
mov
cs
insb
jle
lahf
les
ret
sbb
sbb
cmc
cld
mov
push
pop
bound
icebp
dec
js
push
push
fldcw
add
pop
inc
xlat
push
test
adc
cmpsl
hlt
imul
out
sbb
repnz
in
mov
sub
dec
cld
data16
mov
inc
sub
addr16
inc
fsubrp
mov
push
jmp
or
lea
pop
in
jae
push
xor
pop
in
daa
pop
xchg
cmpsb
sti
scas
jle
xlat
and
dec
test
loop
xchg
call
lcall
pop
stc
xor
mov
pop
push
rolb
and
adc
sbb
dec
lret
out
mov
rcll
in
mov
jecxz
mov
dec
lods
ljmp
pushf
das
pushl
popa
lods
lods
mov
and
jnp
cwtl
jmp
addr16
xchg
mov
rorl
out
scas
stos
pop
scas
out
sti
into
push
push
jb
outsl
idivb
fld
pop
out
cli
mov
popa
repz
int3
es
pop
fldt
inc
call
insb
push
movsb
dec
mov
pop
sbb
mov
jbe
dec
stos
and
lcall
popa
mov
mov
ds
roll
or
jge
push
fs
mov
daa
jbe
or
mov
cmpsl
jae
leave
fstps
sbb
pop
insl
jnp
cmpsb
and
stos
sbb
out
push
sbb
inc
mov
scas
inc
inc
ret
push
xor
outsb
ds
imul
fsubr
test
les
push
hlt
adc
scas
sbbl
shrb
and
mov
add
xor
adc
sub
ds
pop
lods
add
mov
push
jmp
inc
mov
xchg
sbb
iret
in
test
sub
or
adc
jno
mov
hlt
mov
xchg
sahf
jne
push
ds
push
out
inc
sarb
je
sub
xchg
sub
lret
push
sub
push
jecxz
cmpsb
loopne
push
or
xchg
cld
mov
insl
inc
jmp
mov
mov
mov
rcrb
in
or
fldenv
inc
out
mov
jo
adc
dec
jbe
cmp
xor
insl
push
jb
pop
push
das
dec
leave
mov
int
mov
pop
lahf
in
mov
ret
cmpl
imulb
cmpsb
sarl
test
jns
mov
adc
sbb
push
out
ss
pop
jns
jne
mov
popf
fldlg2
jg
leave
inc
push
jbe
arpl
aam
inc
inc
mov
nop
call
sti
xchg
movsb
cmp
pusha
adc
mov
mulb
out
jno
adc
or
xchg
out
jmp
pushf
loope
pop
sbb
das
test
cld
adc
adc
mov
sahf
sub
and
lcall
call
sub
dec
inc
inc
or
aaa
push
shl
sahf
xor
test
sub
and
mov
mov
adc
ljmp
push
push
clc
sub
and
imul
add
ja
dec
and
dec
fldl
rsm
pusha
and
xor
mov
ss
sub
mov
lock
add
add
mov
sbb
or
subb
xchg
mov
into
enter
std
or
shll
mov
loope
xor
in
dec
out
inc
in
adcb
jno
cmp
daa
stos
je
pushf
mov
or
cmpsl
jmp
stos
pop
movsb
lea
testl
es
or
pop
mov
pop
sub
push
sahf
jg
mov
jle
out
jbe
out
pop
popf
xor
ss
or
arpl
sbbl
movsl
jbe
xlat
cmp
mov
rcl
leave
iret
addr16
lret
shrb
lods
lea
add
mov
fisubrl
addr16
add
or
lret
sub
sub
add
cwtl
dec
aam
fldl
cmp
or
jmp
dec
fidivl
stos
out
insl
roll
inc
jge
dec
pushf
or
fsubs
mov
lahf
and
es
add
or
add
clc
pushf
iret
insb
push
ja
aad
imul
mov
aad
jne
cld
adc
stc
pop
jb
sbb
xor
mov
dec
or
cmpsl
push
xor
lret
cld
sub
fistpl
rolb
cmp
jno
adc
gs
cmp
sahf
sub
push
shrl
bnd
mov
adc
pop
adc
jecxz
xor
nop
daa
add
sarl
es
push
mov
inc
icebp
xchg
lret
sarb
xchg
push
in
inc
push
js
data16
mov
mov
or
cmp
xchg
insb
pop
xorb
cld
pop
sbb
fstpt
mov
movsb
imul
scas
xor
mov
aad
fwait
push
lods
loop
pop
dec
dec
repnz
and
pop
cmpl
mov
inc
inc
loope
or
cli
jmp
push
sahf
sub
and
add
mov
add
push
push
sub
popf
add
fnsave
in
lahf
pop
roll
negb
jge
and
push
dec
ficoms
mov
or
sahf
xor
pop
mov
out
and
daa
or
or
mov
cs
xor
sbb
jnp,pt
jno
fsubr
adc
cltd
test
jmp
xor
shrl
mov
loop
scas
nop
dec
inc
add
inc
jb
mov
and
rep
sub
push
rorb
fs
mov
call
pop
stos
nop
in
adc
imul
push
mov
add
rcrb
fcoms
mov
mov
sub
test
xor
pusha
push
shl
xchg
test
lea
call
test
cmp
out
adc
cmpsb
pushf
jne
dec
mov
cmp
jne
pop
movsl
mov
add
je
mov
fcomip
add
sahf
pushf
jp
mov
divl
xor
in
cmpsl
pop
pusha
push
imul
in
ds
or
lea
arpl
decl
scas
mov
push
cmp
push
pop
mov
push
dec
add
daa
out
mov
int
mov
xor
or
fsubrl
dec
notl
sarl
je
out
xchg
scas
inc
sub
out
or
sbb
mov
ds
mov
mov
test
lods
and
sti
push
scas
mov
dec
xor
cmc
xchg
rcrl
and
popf
std
or
inc
xchg
xor
in
mov
adc
dec
decb
in
loopne
shl
dec
add
fisubs
movsl
sub
adc
push
fsubrl
data16
fnstenv
mov
pop
and
mov
sbb
sub
and
in
mov
loop
out
xchg
psubusb
fsubs
fbstp
push
data16
cwtl
push
sub
mov
jl
ret
pop
jl
inc
loope
push
ljmp
fisttps
lahf
jg
and
adc
pop
insb
outsl
ja
mov
loope
inc
push
pushf
mov
add
stos
inc
add
rcll
enter
sarb
inc
dec
fcoms
lahf
pop
adc
mov
popa
outsb
mov
cmc
push
mov
les
mov
aam
sub
popa
aaa
push
inc
lea
cmp
jo
pop
outsl
imull
xchg
jge
fwait
mov
dec
loope
mov
movsb
mov
pop
cmpsl
in
aam
repz
sbb
movsb
sbb
pop
or
mov
ret
pop
mov
loope
call
mov
cmc
xor
lcall
fidivl
push
pop
mov
xlat
push
add
mov
dec
fdivrl
aam
out
arpl
adc
add
outsl
jno
sbb
mov
repnz
scas
and
pop
sbb
or
stc
out
sti
dec
add
aad
shl
inc
mulb
sbb
repnz
adc
sbb
mov
aad
daa
mov
xlat
or
cmpsb
les
lods
mov
jo
pop
xor
imul
mov
ret
out
outsb
hlt
or
xchg
scas
sub
movsl
jno
inc
ret
insb
fldl
sbb
jle
xchg
call
dec
icebp
dec
clc
xchg
andb
inc
insl
add
lret
ds
push
in
loop
pop
adc
ja
mov
dec
xor
mov
xchg
cmpsl
ret
data16
aam
push
lods
mov
mull
add
pop
call
mov
lahf
dec
sub
cmp
push
inc
lea
ljmp
scas
and
fwait
cmpsb
xchg
mov
cmc
dec
dec
cmp
sub
jl
cmp
arpl
imull
sbb
adc
dec
inc
xor
gs
pop
mov
popa
fcomps
sub
addr16
xchg
adc
test
mov
adc
xchg
shlb
movsl
push
jb
cmp
loop
lock
clc
jg
mov
notb
out
sahf
enter
sbb
sub
clc
cmc
or
jb
inc
jge
pusha
je
jb
sub
mov
sbb
mov
int
pop
cmc
mov
inc
sub
xchg
jbe
gs
sbb
jae
mov
lahf
insb
fucomi
sbb
fists
into
xor
pop
jl
or
xchg
int3
daa
sahf
orb
cmp
mov
addb
or
push
fdiv
dec
pushl
jns
popf
iret
dec
cmpsl
dec
jns
jnp
aam
cmp
insl
jbe
xchg
inc
hlt
mov
lods
mov
ficoms
sbb
xor
ss
xor
sbbl
push
cli
movsl
cmp
repz
in
ret
aam
or
js
xchg
out
stc
push
pop
jp
mov
cwtl
push
out
push
sub
adc
sbb
pop
cmp
ja
cmp
add
aam
inc
iret
in
fwait
mov
or
push
push
mulb
ret
pop
mov
ret
jmp
jns
hlt
mov
sbb
xor
cmp
mov
mov
sbb
push
mov
inc
lahf
cli
jg
test
adc
lock
sbb
out
or
push
pushl
iret
mov
test
add
and
scas
push
sub
stc
jl
mov
clc
add
fs
or
fwait
jo
jecxz
fadds
sbb
outsb
bound
xchg
daa
into
xchg
mov
outsl
jbe
mov
adc
dec
xchg
faddl
lcall
sahf
stos
sub
in
test
fnsave
mov
add
mov
xchg
or
pop
push
sbb
pop
pop
icebp
insb
lret
lea
mov
pop
or
cmp
daa
mov
mov
ss
mov
jae
das
aad
fcmove
xchg
or
pop
cmp
xlat
loop
adc
aad
mov
divl
popa
xor
flds
add
inc
cmpb
pop
pop
das
add
mov
out
outsl
xchg
popa
mov
xorl
scas
into
dec
push
ja
das
es
xor
int
nop
mov
jmp
lds
andb
loope
add
test
mov
push
mov
popf
cmpsl
fcoms
cmpsl
or
mov
pop
in
ljmp
clc
cwtl
das
push
pop
outsl
daa
jae,pt
inc
jmp
mov
aaa
lahf
cwtl
das
rcll
push
and
dec
and
sti
xchg
jnp
xor
ds
out
add
cwtl
into
and
dec
mov
or
andb
shlb
subb
cmp
lret
xlat
fistl
filds
das
mov
pop
rdpmc
cli
inc
cmp
mov
ljmp
mov
adc
repnz
cmc
cmpsl
ds
jp
push
adc
pop
mov
jecxz
pop
ficomps
fiaddl
mov
enter
mov
inc
xchg
jmp
dec
int3
fwait
or
add
pop
lret
jmp
push
pop
test
add
xchg
fnstenv
xor
testl
sub
add
mov
mov
inc
loope
filds
xchg
icebp
inc
xor
lahf
stos
fnsave
jb
lods
scas
inc
filds
popf
scas
or
notb
stos
adc
cmovg
or
mov
mov
xor
daa
jno
std
fsubr
fldenv
lock
fidivrs
push
jae
popf
das
je
jmp
dec
ss
adc
or
mov
add
rorb
outsl
aam
cld
int3
xor
pop
xchg
or
mov
dec
xchg
scas
ja
loopne
aam
jo
mov
inc
sub
inc
arpl
js
xchg
and
outsb
jp
inc
sbb
fnstcw
dec
loopne
mov
push
jg
hlt
jmp
ficompl
jae
adc
test
js
loopne
ja
call
std
mov
les
nop
mov
inc
inc
rorl
iret
loopne
dec
dec
rcr
jle
nop
sti
ret
loop
setno
xchg
sub
xor
add
in
rcr
inc
push
shl
lret
adc
lret
mov
sub
nop
sbb
add
jl
sub
xor
or
dec
mov
and
and
push
cmp
xor
mov
mov
xorb
pop
mov
cmpsl
cmp
or
pop
outsb
leave
xchg
decb
iret
lods
xchg
sub
push
enter
adc
repnz
fisubl
sub
in
push
decl
subb
bound
lods
ljmp
mov
push
inc
cmp
push
cmp
ss
das
sarb
in
test
and
rcrb
dec
gs
fisubrl
and
outsl
in
jge
cmpsb
mov
das
imul
sbb
mov
mov
jp
bound
jns
lea
sbb
cli
out
adc
and
popa
sti
pop
inc
lds
popa
mov
adc
jg
and
dec
jecxz
sub
outsb
mov
mov
or
loopne
cmp
pop
sahf
inc
sub
dec
mov
push
insb
roll
fmull
incb
out
push
pop
mov
sbb
into
aad
mov
jmp
imul
mov
add
push
mov
and
push
jno
push
lock
call
aad
and
iret
daa
in
sbb
gs
pop
mov
inc
xchg
mov
out
aam
int3
enter
je
lcall
pop
cmc
or
add
jmp
lahf
inc
popf
bound
add
push
push
and
or
xor
jbe
pop
inc
rorl
inc
pushf
inc
cmp
fucomp
cltd
pop
addr16
cwtl
cmp
aad
std
jae
mov
in
mov
dec
inc
jmp
push
pop
add
pushf
mov
mov
mov
add
nop
out
push
sbb
je
xchg
adc
and
popf
xchg
test
jle
ljmp
aad
lock
mov
nop
out
in
fwait
movsl
push
ljmp
pop
xchg
mov
jnp
lret
aad
sahf
mov
and
sti
cmp
sbb
jecxz
test
dec
add
iret
sbb
aad
mov
stos
test
mov
inc
repz
ja
jb
mov
push
xor
sub
test
lock
inc
inc
das
cmp
or
jp
stos
nop
push
jmp
iret
xchg
popf
stc
mov
cmc
mov
mov
dec
mov
jmp
addb
push
cmp
push
mov
cs
ret
sbb
mov
jmp
cwtl
fsubrs
ds
jno
adc
into
push
pop
xchg
imul
mov
xchg
or
mov
test
cld
stos
push
sub
jae
roll
addr16
mov
xor
cmp
div
or
pxor
mov
add
cmpsb
enter
loope
scas
pop
jge
nop
rcrb
mov
in
popa
mov
sbb
fisttps
mov
and
inc
mov
lds
aad
and
test
jns
cmp
lret
subl
fbld
test
or
lds
xor
sbb
xchg
bound
xor
lret
pop
scas
push
push
mov
xchg
mov
test
rol
inc
mov
hlt
es
shrl
mov
hlt
pop
je
add
xor
es
scas
fisubl
imul
nop
imul
or
sub
repnz
ja
sub
sbb
fidivl
xchg
icebp
adc
inc
sti
in
push
jle
inc
xor
or
mov
lock
lret
adc
out
les
std
push
push
jbe
test
fstp
negb
dec
in
jg
pop
into
subl
mov
fs
sbb
data16
pop
xchg
int
adc
lods
ficoms
cmp
cmp
hlt
pop
popf
and
sbb
inc
rcl
jae
lds
shr
stos
mov
movsl
xchg
mov
pop
scas
adcb
pop
inc
loopne
dec
inc
xlat
outsb
je
mov
movb
mov
pop
xchg
or
lods
lock
incb
fnstcw
fsubl
inc
sbb
fstpt
cmp
negb
mov
lds
lds
cltd
pop
sub
ret
hlt
mov
loopne
xchg
add
mov
adc
arpl
mov
jecxz
mov
sbb
jb
inc
scas
push
pop
testb
push
mov
push
xchg
lret
movsb
push
call
xchg
outsl
jmp
divl
out
push
cmpxchg
test
dec
add
imul
sub
fcoml
sbb
add
fwait
mov
xchg
daa
pop
adc
or
std
int3
jns
cli
pop
mov
call
loop
xchg
pop
shll
and
dec
pushf
roll
pop
cmp
mov
icebp
adc
mov
stc
jmp
bound
shr
jg
mov
mul
mov
pop
sub
call
decb
and
pop
dec
adc
xor
cmp
adc
mov
shr
vpunpcklqdq
inc
jle
test
mov
and
pop
push
add
mov
popa
mov
lds
jnp
rcll
mov
xchg
jmp
aaa
dec
pusha
imul
sub
les
sbb
dec
dec
imul
ds
jne
push
sbb
add
mov
das
les
mov
stos
pop
repnz
mov
stc
mov
test
lret
iret
seto
xor
sbb
jmp
imul
mov
cmc
add
popf
insl
xchg
aam
enter
add
mov
and
movsb
jg
inc
mov
dec
mov
aaa
cmp
dec
stc
jle
je
push
add
pusha
imul
std
xor
int
ficompl
aad
push
out
lcall
jmp
sub
sub
mull
lcall
cli
jge
mov
or
mov
addr16
hlt
dec
fbstp
adc
mov
push
add
xor
cmp
or
cmp
sbb
push
jecxz
dec
lret
and
xchg
stc
sbb
aas
push
shrl
mov
clc
outsb
jge
clc
insl
or
decb
or
loopne
sarl
enter
fdivrs
jbe
ret
xchg
fildl
dec
sbb
lods
pusha
mov
sbb
sub
jle
xchg
mov
sahf
add
jl
lahf
and
xor
push
dec
add
cli
and
shufps
jg
xor
enter
addl
pop
or
or
adc
lahf
ss
pop
sub
cmp
xor
dec
sahf
fisttpll
fnstcw
or
mulb
push
cmp
lds
sub
ja
push
sub
test
in
loop
ss
lret
das
jg
test
loope
cmpsb
jo
mov
pop
in
imul
scas
jno
jle
dec
sbb
inc
cld
xchg
js
sti
mov
stos
xchg
in
xor
xchg
sarl
aam
inc
adc
out
into
ret
xchg
inc
incb
adc
pop
cmc
xor
test
inc
pop
ret
out
mov
xor
roll
pop
loopne
mov
add
mov
adc
pop
inc
pop
sbbl
inc
pusha
idivl
and
fbstp
or
lock
sbb
andl
inc
sub
cmp
pusha
imul
adc
lock
jp
sahf
push
cmc
or
jnp
inc
push
dec
push
or
pop
lock
insl
int
ja
cs
and
jae
lock
mov
sub
sar
shlb
hlt
ret
mov
pusha
add
leave
inc
or
in
cmp
insb
out
gs
dec
mov
push
sbb
ffree
fsts
mov
adc
ret
cltd
push
mov
jp
xchg
insb
add
insb
jmp
loope
xlat
mov
lret
out
scas
lock
jle
outsb
and
iret
leave
pusha
add
in
jb
ret
insb
inc
xor
lea
mov
stos
call
pop
lcall
cld
movsb
inc
or
mov
xchg
dec
xor
sbb
dec
jmp
pop
mov
cltd
pop
shrl
sbb
popf
sub
jg
push
lea
and
daa
movsl
cmp
xor
icebp
jmp
sbb
dec
jmp
mov
enter
daa
iret
mov
push
cmovns
mov
add
xchg
ja
dec
and
sub
orl
adc
lock
gs
in
cwtl
int3
xchg
or
hlt
mov
sbb
pop
jle
mov
mov
cmp
jae
add
aas
mov
dec
mov
lea
mov
sbb
sbb
sub
push
pop
pusha
jp
jno
add
or
lcall
cmpsb
ret
aam
lds
mov
mov
vphaddwd
and
lret
in
clc
dec
lahf
sub
inc
mov
shlb
test
push
pop
lret
shrb
shll
mov
push
or
mov
pop
bound
mov
lods
imul
pushf
adc
ret
jbe
dec
ret
inc
test
inc
data16
mov
adc
jns
mov
adc
xchg
mov
mov
cmpsl
in
andl
mov
hlt
ss
push
inc
test
pusha
test
cmp
daa
jmp
aaa
arpl
test
or
xchg
mov
mov
gs
lcall
inc
fisubrs
xchg
lret
pop
mov
xchg
jae
push
stos
xchg
data16
mov
adc
mov
subl
dec
popf
fnsave
jno
jns
pop
mov
leave
rcll
jg
mov
jge
mov
pop
fmull
out
mov
or
push
cmp
or
push
cltd
fstpt
fs
xor
mov
xchg
cs
cmp
and
shlb
in
outsb
hlt
sub
and
les
add
movl
inc
jecxz
sub
jecxz
in
fwait
mov
ret
shll
cld
rorl
adc
mov
mov
push
ficomps
cld
jb
test
pop
jecxz
jbe
fildll
jne
cmp
adc
mov
shll
inc
bound
inc
imul
mov
or
mov
imull
es
add
into
mov
mov
jecxz
xor
mov
add
mov
jae
jb
rorl
push
testb
test
jmp
xchg
scas
aas
in
loopne
popa
ret
filds
repnz
nop
stos
xor
cmpsl
mov
adc
mov
cmp
sub
adc
xchg
test
icebp
xlat
icebp
cmp
daa
mov
mov
out
fcmovnb
jnp
jne
fistps
fucomp
add
sub
out
add
xor
mov
add
addr16
imul
adcb
push
push
pop
or
std
mov
cmpb
cmp
mov
xchg
shrb
bound
hlt
inc
loopne
rcll
xchg
std
jg
xchg
insb
xchg
pop
cmp
fxch
dec
cmp
jae
cmc
ror
lods
push
and
push
js
jno
jne
sub
into
fs
int
add
loope
gs
addr16
bound
sbb
es
cmp
add
or
inc
pop
sub
mov
int
fs
jb
cmpsl
jne
fnstsw
movsb
movb
adc
popf
inc
adc
stos
lcall
in
add
scas
xor
loopne
sub
or
out
test
gs
imul
lods
ljmp
testb
dec
lea
mov
das
sub
ret
pusha
xorb
clc
stc
sbb
mov
lret
sti
cmc
and
arpl
or
sbb
inc
push
mov
xor
or
lahf
arpl
push
dec
xchg
push
orl
adc
dec
mov
out
daa
adc
outsb
popa
lret
jb
sbb
stos
xor
dec
dec
inc
in
pop
test
jne
stos
in
iret
add
inc
imulb
cld
lds
inc
gs
hlt
roll
xchg
dec
in
out
aaa
icebp
or
repz
cwtl
rorl
push
in
incb
jne
inc
pop
out
sbb
rcl
in
mov
and
mov
jmp
adc
clc
inc
arpl
enter
push
dec
cli
setge
rcrb
pusha
push
push
xchg
fcmove
adc
add
imul
lea
orl
xchg
xor
inc
push
test
aad
dec
std
jo
pop
pop
sbb
sbb
sub
dec
fidivrl
ds
lret
jo
dec
or
inc
sahf
mov
out
cmp
sbb
daa
push
jno
enter
loopne,pt
pcmpgtd
inc
lods
jo
adc
loopne
jecxz
int3
and
xorl
add
daa
dec
pop
cmp
repnz
and
iret
pop
mov
mov
and
testl
test
mov
mov
cli
xchg
in
mov
in
sbb
lahf
cmp
mov
ds
sub
addb
sub
hlt
xchg
sub
inc
scas
fstl
bound
inc
mov
sahf
nop
sub
test
movsb
dec
imul
jo
pushw
pop
cmp
sub
sub
stc
test
ret
inc
push
outsl
jmp
pop
mov
xor
sub
fldl
nop
sbb
dec
cmp
xchg
dec
cmc
out
sbb
mov
mull
xor
push
int3
movsb
sub
lret
mov
cmpsl
es
fwait
mov
mov
inc
push
sub
push
pop
test
jp
mov
xchg
rcl
sbb
inc
jbe
jns
out
mov
mov
movsb
fisttpl
mov
push
add
outsb
inc
lret
jle
std
and
fneni(8087
adc
jo
mov
mov
adcb
xchg
dec
pop
cwtl
mov
fstpl
imulb
adc
loope
push
loop
or
repz
cmc
sub
in
dec
fnstsw
dec
sbb
shll
aaa
jge
fsubs
popf
lcall
xchg
out
sbbb
jl
sub
pushf
ficomps
fildll
mov
dec
loop
sahf
push
ljmp
jge
in
xchg
or
adcl
and
fdivrl
out
popa
aaa
pop
xchg
adc
nop
jmp
mov
ss
fwait
pop
std
push
mov
ds
test
fdivl
out
pushf
add
and
repnz
inc
enter
lds
pop
dec
loopne
push
cmp
gs
out
ds
pop
int
shll
and
lcall
xor
mov
mov
shll
aam
movsb
test
or
and
add
cmp
jae
mov
pop
fisubs
fcmovnbe
rcrl
add
insb
decl
xchg
add
ret
int3
aad
dec
roll
aad
push
dec
push
shl
pushf
cmpsb
lret
shl
adc
pop
xor
pusha
arpl
leave
leave
add
mov
inc
pop
inc
call
cs
aam
pop
adc
daa
pop
jmp
xor
lea
aaa
and
jp
mov
or
pop
daa
jl
or
inc
pop
mov
jl
jns
sbb
sbb
add
cs
jno
inc
jnp
sahf
cli
xchg
rol
and
lods
fsubl
adc
adc
adc
jecxz
pop
mov
inc
int
jne
cmp
mov
sub
add
aas
and
sub
rcr
mov
dec
push
push
gs
orb
imul
into
mov
fmull
test
jge
sub
jmp
xchg
push
lods
inc
mov
loope
or
loope
mov
iret
mov
or
mov
int
seta
push
jmp
or
fnstenv
in
xchg
call
lret
cmp
push
ds
or
pop
stc
sub
in
fnstcw
ror
sub
lock
dec
pop
hlt
aas
cltd
fidivs
cli
scas
inc
ljmp
pop
xchg
mov
xchg
les
jnp
mov
std
adc
add
lahf
out
ror
sbb
mov
jbe
push
cmpsb
xchg
rclb
repnz
inc
push
mov
and
push
insl
arpl
jnp
cmp
mov
inc
mov
and
sub
and
inc
ljmpw
cmp
inc
mov
sbb
dec
dec
mov
cmp
pop
shl
xor
xchg
movsl
sbb
adc
pushf
mov
subb
in
xchg
outsl
sbb
xchg
push
out
jg
jl
xor
in
es
or
pop
lcall
and
add
cmpsb
and
popf
enter
lds
mov
shl
jecxz
movsl
adc
dec
lahf
ss
mov
aam
inc
dec
loop
jge
cmp
or
mov
aad
sbb
sub
ds
mov
aaa
push
mov
pop
and
dec
jb
add
fld1
lods
inc
loopne
jo
adc
add
lods
mov
cmp
ret
xchg
dec
icebp
test
repz
jl
xor
push
add
popa
or
inc
data16
jo
int
jae
lock
mov
push
stos
jle
cmp
mov
jmp
and
addr16
call
and
cmpsl
cmp
cmp
in
cmp
sub
pop
or
mov
jecxz
pushf
les
pop
jae
into
pandn
sub
hlt
or
inc
push
mov
dec
adc
int
sbb
loopne
aaa
push
cmp
pop
add
push
les
push
in
hlt
push
xor
cmp
rcll
jp
ret
sub
xchg
ljmp
std
int
mov
lret
adc
push
jbe
and
xchg
push
insb
into
inc
mov
in
push
xor
cli
mov
push
sub
clc
push
jge
mov
rcll
push
sbb
or
mov
mov
pop
cmp
xchg
pop
jo
pop
mov
cmpsl
and
mov
dec
mov
jnp
cmp
js
bound
mov
icebp
xchg
iret
lret
jae
cmp
fdivl
je
ret
and
dec
test
mov
lret
sub
sbb
mov
xorb
push
xlat
inc
mov
nop
aas
test
hlt
fcomps
xor
xchg
repnz
lds
pop
outsb
push
mov
test
push
dec
pushf
mov
dec
imul
mov
outsb
sbb
lahf
mov
cmpsb
movsl
cmp
ret
insl
mov
xchg
jb
sbb
movsb
xchg
sti
dec
jb
stc
adc
dec
movsl
aas
test
shll
add
cs
sbb
das
push
aad
movsb
addr16
jb
adc
cmpsb
lret
xor
mov
sub
mov
adc
into
fdivp
repnz
sbb
and
imul
jmp
mov
in
jb
xchg
hlt
inc
inc
ret
lcall
jbe
int
add
mov
inc
sti
push
fildl
enter
mov
enter
imul
movsl
das
xchg
mov
mov
push
lods
cmpsl
inc
data16
rcrl
loop
mov
push
mov
xchg
gs
inc
out
pop
movsl
mov
or
push
pop
sub
bndstx
gs
mov
iret
pop
out
sub
pop
nop
in
mov
pop
les
or
mov
mov
dec
or
push
mov
jb
imulb
sub
jge
dec
bound
sahf
lods
sub
mov
or
mov
scas
call
int
or
mov
loopne
mov
fs
jmp
or
cmp
sti
nop
mov
icebp
or
xchg
mov
mov
lret
mov
cli
subb
cmp
or
lret
hlt
mov
lret
adc
out
mov
cld
xchg
pop
shll
rorl
push
mov
cltd
and
cli
inc
sbb
cli
adc
inc
xchg
subl
aaa
pop
and
pop
cli
mov
push
jl
insl
xchg
movsl
data16
mov
sbb
xchg
hlt
ret
dec
sub
iret
arpl
pop
ret
das
push
inc
pop
cmp
jne
hlt
inc
sahf
popf
bsf
shl
jecxz
cmp
loope
rcrl
cmp
enter
jne
and
fmuls
mov
nop
mov
arpl
push
sbb
test
cmp
cmp
shll
mov
push
jmp
ret
pop
cmp
lods
push
mov
add
add
stos
sbb
loop
add
lret
xor
xlat
xchg
add
adc
mov
inc
xchg
mov
mov
and
ret
ja
and
cld
xchg
jae
insl
sarb
insl
sub
and
popa
rcrl
insl
inc
sbb
popa
mov
or
xchg
cltd
stos
enter
xchg
imul
adc
imul
mov
movsb
jnp
inc
inc
shl
add
mov
rcrb
pop
inc
push
shll
pop
fs
dec
nop
jmp
mov
mov
ds
repz
push
cmpsl
cs
cs
xor
mov
cmp
call
dec
cmp
jne
add
jmp
fwait
sti
cwtl
imul
jno
shlb
mov
cmp
mov
movsl
in
or
mov
fcoml
or
sub
setl
lahf
imul
or
dec
dec
mov
xor
fadd
sbb
hlt
dec
adc
in
shl
push
sbb
or
adc
xchg
ljmp
inc
adc
icebp
cmp
shlb
adc
sbb
mov
arpl
and
aam
xchg
add
mov
sbb
fmuls
ja
fisubs
push
mov
mov
in
and
pop
imulb
fs
push
mov
shrl
mov
add
loope
lds
in
dec
cmp
mov
int
add
inc
cvttps2pi
cmp
aad
and
lahf
in
inc
dec
adc
mov
mov
xor
mov
popf
cltd
insb
sub
lret
js
sbbl
pushf
in
jg
cmp
and
mov
in
mov
pop
stos
leave
mov
je
xchg
inc
adc
mov
pusha
cmpl
inc
mov
sbb
cmp
jecxz
mov
out
mov
fisubs
fisubrs
loope
ret
pop
rorl
negb
mov
push
mov
rol
mov
stos
xor
xchg
lret
add
cld
into
adc
and
ja
lret
xchg
mov
push
stos
fs
ja
arpl
pop
xchg
adc
decl
leave
je
jge
push
scas
mov
pop
movsb
mov
sub
adc
ror
sbbb
push
lret
sub
js
gs
pop
pop
or
lcall
push
ret
int3
mov
bound
int
leave
cmp
jg
add
ret
mov
dec
ss
jne
shll
pop
loopne,pt
adc
js
inc
es
mov
inc
test
arpl
ret
inc
push
outsb
and
push
dec
pop
jg
push
cmpsb
inc
das
xchg
movsl
pushf
lret
shrl
mov
mov
sub
xchg
add
fstps
dec
int
and
in
jo
dec
bound
push
in
stc
sbb
jge
xor
insl
fnstsw
vpaddsb
ret
clc
add
jle
sub
and
incb
add
stos
popa
push
inc
mov
sub
cmc
es
dec
sahf
sbb
mov
mov
in
test
aaa
or
je
loopne
in
mov
mov
fdivl
aam
pop
mov
rcrl
add
mov
dec
and
sti
mov
or
sbb
mov
cwtl
and
arpl
dec
or
add
rcrl
mov
push
xor
add
xor
movsl
popf
aaa
mov
lret
or
imul
inc
ljmp
int3
arpl
dec
and
xchg
stos
mov
in
pushf
inc
aam
and
sahf
mov
test
fldcw
aas
imul
fisttpl
cmp
pushfw
push
pusha
or
call
imul
mov
movsl
idivb
pop
push
cmp
in
inc
test
xchg
fs
jns
stc
lea
icebp
mov
cmpsl
icebp
ljmp
xchg
cmp
pop
sub
mov
xchg
leave
pusha
dec
ficomps
pop
out
out
lahf
das
and
dec
or
enter
jecxz
or
daa
pop
fnsave
lds
pop
inc
hlt
ja
arpl
in
xchg
cld
adc
and
sub
push
outsb
mov
sbb
dec
inc
mov
sub
aaa
push
popf
daa
mov
xchg
pop
lds
cmp
insl
jae
mov
clc
hlt
scas
dec
jns
jle
jge
xrelease
mov
lods
fcomip
mov
or
xor
add
addr16
shl
xchg
add
lcall
mov
cmp
lock
sbb
mov
inc
cmp
inc
push
cwtl
or
sti
mov
sbb
xlat
pop
fiaddl
ljmp
mov
mov
inc
push
and
in
orl
leave
pop
repnz
pop
sub
cmp
push
inc
test
sbb
xchg
enter
lea
mov
adc
sbb
mov
xlat
out
adc
and
pop
rcll
adc
in
repnz
ret
aas
mov
repz
fisubrl
jne
add
adc
jns
jle
loopne
sub
sub
push
push
inc
outsl
sbb
test
test
jecxz
ja
dec
jbe
pop
add
inc
insl
push
jbe
gs
mov
lret
jno
sub
adc
mov
mov
mov
pusha
jl
pop
sbbl
mov
xchg
fs
xor
rolb
push
idivb
add
cmp
mov
sub
das
mov
inc
push
adc
js
js
lds
lahf
xor
outsl
nop
jle
jno
ja
cwtl
pop
movsb
xlat
ret
push
shr
jne
push
outsl
lods
xchg
test
out
mov
arpl
lret
pop
xchg
mov
data16
jge
or
addr16
std
mov
faddl
push
je
std
in
aaa
pusha
mov
xor
lods
inc
push
cld
lret
je
dec
in
aam
sub
jmp
pop
cmc
int
jmp
jnp
xchg
adc
jb
push
aam
xchg
cld
out
vrcpss
mov
dec
or
shld
sbb
or
or
inc
fmuls
and
aaa
int3
cmc
dec
fdivl
pop
ds
aam
loopne
or
insb
adc
aad
ret
aas
in
icebp
pop
scas
shrl
loope
add
inc
xor
icebp
cmp
loop
push
sub
dec
fnsave
aaa
int3
jp
add
adc
ss
and
cld
jo
ja
sbb
add
rcl
and
jno
cld
or
je
shrb
stos
xor
idivb
outsl
mov
xchg
pop
cmp
into
ja
add
pop
lcall
cli
nop
or
jl
mov
jne
insl
out
lock
dec
xchg
jmp
shl
ja
inc
sub
mov
outsl
es
mov
sti
pop
jns
cli
cmp
ss
or
sub
xor
jp
popf
mov
adc
push
dec
mov
leave
jno
in
sub
inc
pop
add
fsubrs
es
das
aad
push
mov
push
lcall
or
push
mov
popf
lods
addr16
call
push
ret
add
sbb
mov
push
inc
sbb
pop
je
icebp
fsubl
popf
adc
shl
jb
and
outsl
add
pop
arpl
cmp
mov
bound
fwait
jae
mov
sbb
loope
fbstp
mov
insl
stc
dec
xchg
fucomi
fidivs
sbb
cmp
add
xchg
mov
lahf
push
add
sub
mov
xor
imul
out
or
sub
adc
add
mov
cwtl
sti
aam
ljmp
addr16
fdivrl
cs
addr16
stc
fs
push
cmp
popa
inc
int
sbb
cmp
inc
popf
out
mov
pop
in
popf
shll
sahf
imul
aam
inc
xor
jbe
lret
mov
jae
adc
stos
cmpsl
push
rcl
lret
movsl
cmc
cli
jns
adc
rcr
imul
pop
sti
jmp
mov
movsb
mov
pop
and
ja
movsb
add
icebp
or
dec
sti
mov
mov
stos
pop
sarl
ljmp
int
jne
xchg
pop
cmp
xor
fldenv
add
into
cli
sti
adcb
sbb
jl
movsb
and
pop
xchg
xor
shrb
lds
inc
mov
or
push
add
sub
cmp
shlb
stos
xchg
insb
push
xor
mov
add
and
mov
mov
adc
out
test
lret
data16
fwait
xor
mov
movsw
mov
xor
cmpsl
mov
cltd
xor
sub
test
jg
cmp
movb
mov
fwait
test
shll
adc
and
xor
inc
pcmpgtb
pop
xor
mov
lahf
shll
mov
xchg
mov
adcb
lahf
cmpl
sbb
inc
push
mov
or
movsl
mov
mov
and
inc
sbb
pop
jmp
add
xor
cmc
dec
hlt
pop
insl
add
jbe
lock
ljmp
mov
incb
scas
push
ret
fidivrs
repz
loopne
js
jne
push
in
jg
push
cld
orb
sbb
push
movsl
cld
jne
or
int
fwait
in
inc
sti
cmp
sbb
mov
push
loope
rcr
fcom
mov
or
leave
pop
cmp
cmpsb
mov
dec
xchg
int3
mov
sub
orl
jl
mov
sub
insl
push
lcall
rcll
scas
scas
mov
stc
out
pop
inc
inc
mov
lea
movsl
push
or
ds
gs
test
fcmovne
lods
mov
movl
mov
clc
aam
pop
inc
addr16
and
mov
ret
sub
sbb
dec
lods
mov
mov
in
inc
xchg
sbb
push
sbb
push
push
int
jmp
dec
add
imulb
and
call
pop
lcall
sbb
das
sub
mov
aas
faddl
add
and
ja
imul
jmp
xchg
add
cmp
out
in
adc
sbb
fdivp
xchg
mov
adc
push
imul
dec
fldenv
es
cmp
bound
xor
jne
sbb
mov
popf
adc
outsb
rorb
sbb
gs
jg
mov
scas
in
push
sbb
in
xchg
pop
add
lods
push
mov
cmp
lcall
add
test
popf
pusha
or
lret
repz
iret
cwtl
xchg
add
scas
cmp
sti
test
xchg
mov
mov
mov
add
and
cs
xor
xchg
push
ds
out
aad
dec
cmp
bound
shrb
push
jne
test
call
je
jns
fisubs
lcall
and
cli
pushf
leave
add
jge
fs
dec
and
adcb
je
jle
xchg
xchg
cmp
add
jb
sub
lcall
mov
fisttpl
mov
lcall
ljmp
aaa
cmp
icebp
inc
ret
fcomps
mov
cmpsb
js
adc
test
sbb
rcrl
aaa
mov
adc
aaa
wbinvd
push
cmp
jle
mov
int3
and
shr
xchg
adc
rol
push
or
cmpsl
es
call
sub
rorb
mov
rolb
popa
imul
inc
scas
xchg
ret
jo
out
push
out
jae
dec
ds
ja
shlb
negb
adc
pop
out
addr16
adc
scas
push
ret
mov
loope
test
shrl
pop
sti
mov
mov
cmpsb
push
popa
clc
lea
rcrb
mov
hlt
mov
push
mov
cld
lret
mov
imul
aas
dec
push
fstps
in
dec
xchg
sub
insl
inc
frstor
and
sub
jp
icebp
clc
aam
in
rclb
fsubrs
andl
push
shlb
mov
dec
loope
sti
les
mov
sahf
and
xchg
mov
cli
test
pop
test
testb
jb
lods
popa
mov
mov
sub
add
aad
dec
jecxz
dec
jno
inc
js
in
fdivr
xchg
shlb
add
xchg
in
adc
stc
ss
cmpsb
sub
and
addr16
mov
and
push
shr
push
movsl
push
ds
xlat
lods
les
sbb
data16
sub
push
iret
sbb
or
cwtl
xor
stos
lock
inc
mov
push
inc
arpl
idivl
movsb
sbb
add
push
cmp
loopne
mov
orl
lahf
data16
rep
sbb
xchg
loope
push
add
or
push
dec
fsubrl
dec
mov
mov
filds
inc
push
sahf
jbe
adc
in
pushf
cmp
pop
sbb
ds
repnz
push
lret
xchg
ret
icebp
stos
ljmp
jp
ret
sbb
ret
stc
imul
fiadds
scas
push
cmp
in
mov
jmp
jb
pushf
std
arpl
lret
popa
out
mov
and
std
sahf
jae
popf
mov
sub
mov
cmp
inc
cmpsl
hlt
repz
cmovl
jle
push
push
movsl
inc
xorb
sub
out
cmp
stos
add
pop
mov
mov
add
repz
mov
negl
sbb
or
and
jge
mov
xorl
lea
sub
xor
rolb
ja
into
or
push
cmc
enter
xor
sub
push
lea
aas
lods
lcall
adc
dec
popa
nop
mov
inc
hlt
mov
mov
xchg
cmc
shrb
nop
xchg
sub
jmp
cmpsb
sbb
rorb
std
xchg
or
lret
add
nop
jb
lock
ljmp
loop
int3
inc
stos
test
push
ret
iret
inc
pop
push
sub
cmp
inc
jl
mov
pop
jge
xor
adc
pop
divb
xchg
scas
sub
scas
stc
add
arpl
icebp
jnp
jne
mov
call
pop
lods
pop
out
mov
es
mov
jno
adcl
bound
subb
rclb
mov
es
pusha
push
mov
adc
push
cmp
push
cs
jl
mov
jl
mov
in
pop
mov
jmp
sbb
lcall
icebp
not
std
push
or
pop
cmp
adc
jl
inc
ljmp
lock
mov
leave
imul
repnz
lods
daa
sub
or
jmp
add
scas
stos
das
out
shlb
shrb
mov
mov
lahf
es
pop
xor
stc
cmpsb
adc
movsl
movl
or
jmp
jno
das
sbbl
cmp
in
in
add
lods
push
orb
fmull
testb
pop
daa
mov
and
mov
push
mov
or
js
sbb
addl
adcb
sbb
mov
movsl
js
testb
jecxz
daa
inc
and
andl
or
cmpsl
xchg
in
mov
push
scas
and
sbb
bndstx
cmp
inc
cmc
lret
out
push
dec
cmp
push
or
in
xor
mov
pop
js
inc
xlat
cld
fsub
cmp
and
and
fdivl
cmpsl
lods
xor
aas
pop
add
testb
dec
mov
mov
fsubrs
adc
pop
int
xchg
jbe
int
jae
inc
jl
test
js
enter
cli
xchg
mov
pusha
sbb
sub
push
mov
cmp
inc
fadds
gs
fidivs
pop
test
bound
add
dec
ljmp
add
cmp
outsb
into
jg
clc
mov
pushf
jb
add
test
addr16
xchg
cltd
mov
imul
in
xor
push
mov
inc
aam
sub
addr16
popa
test
sub
mov
pop
inc
push
gs
negl
dec
mov
nop
sub
stc
adc
es
rcrb
popa
ret
dec
jno
repnz
rcrb
inc
lods
in
imul
imul
sub
mov
loop
sub
nop
pop
mov
fisttpll
scas
mov
movsb
mov
scas
call
ret
fiadds
lds
add
loopne
lcall
adc
rcrl
dec
in
inc
pushf
scas
inc
data16
push
lock
loopne
sbb
pop
dec
push
mov
push
push
and
jecxz
ljmp
push
mov
js
add
sarb
jnp
shl
dec
lahf
loop
or
pop
sbb
adc
push
mov
lea
mov
push
pop
out
lds
jg
push
inc
cmp
xor
inc
push
jbe
xchg
or
add
fwait
lods
loope
add
out
pop
sbb
add
mov
pusha
cmp
sahf
outsb
add
pop
mov
push
call
pop
push
pop
xchg
js
xlat
mov
int
cld
mov
pop
mov
outsb
mov
cli
sub
or
adc
inc
sub
and
sbb
xlat
cmp
sbb
sub
ds
jge
mov
fcompl
stc
jle
cmp
out
adc
sbb
ja
pop
xor
and
push
mov
cmpb
and
adc
pop
pop
loope
and
push
fs
js
or
in
dec
pop
pop
inc
push
jne
pop
xchg
mov
adc
push
lret
or
arpl
sbbb
leave
and
shr
test
dec
mov
pushf
xchg
add
aas
mov
cld
inc
xchg
add
push
pop
mov
inc
sub
adc
ret
hlt
push
lret
push
push
mov
mov
pushf
cli
cmp
adc
addb
ret
cmp
outsb
add
pop
and
cmp
xchg
repnz
jns
dec
and
enter
dec
mov
mov
in
push
mov
mov
mov
aas
fadd
rorl
mov
call
xor
add
jle
sarl
sbb
push
cld
push
mov
cmp
jl
sbb
stos
je
fmull
leave
test
inc
pushf
rcrb
push
add
pop
cmc
add
rorl
aam
addr16
loope
popf
adc
sub
jl
sahf
xor
in
das
mov
ret
dec
mov
adc
dec
add
or
push
lods
mov
test
and
lds
xor
cli
or
cmp
mov
mov
jl
and
outsl
sub
mov
jne
push
mov
xchg
pusha
xorb
cmp
push
fwait
pop
out
push
mov
jno
sub
xor
dec
inc
push
jecxz
xor
push
sbb
js
jae
pop
dec
mov
pop
aaa
clc
addl
jg
mov
pop
jb
push
jp
jae
inc
outsl
dec
cld
mov
or
out
inc
repnz
enter
mov
xlat
enter
les
addb
jp
jmp
mov
fwait
xlat
outsb
int
xor
loop
insb
jg
dec
lret
fisubs
pop
fbstp
stos
cmc
sbb
xchg
cld
push
xchg
cwtl
cs
arpl
xchg
mov
fdivrl
xchg
jg
mov
sub
fwait
mov
sbb
mov
mov
cld
mov
or
and
es
das
sbb
popf
xor
jl
sbb
xor
mov
sbbb
mov
cmp
pushl
mov
ds
pop
push
mov
cmp
pop
clc
pop
int
cmp
stos
pop
mov
fcomip
leave
sbb
lret
dec
bound
pop
adc
rcr
rorb
mov
adc
sahf
pop
scas
ret
inc
pop
adc
lds
fcoml
pop
or
scas
push
aam
or
daa
rclb
pushf
xor
testb
fisttps
in
sbb
dec
jecxz
inc
mov
mov
aam
dec
lret
adc
fnstsw
sbb
push
sbb
sbb
cltd
sub
add
mov
jns,pn
roll
mov
gs
jmp
lret
and
add
push
fsubr
jns
adc
sub
jmp
fnstcw
pop
pusha
int3
int
xlat
lret
into
jns
ret
hlt
add
lahf
mov
push
cmp
pusha
inc
arpl
scas
lds
pop
scas
push
test
cltd
fwait
out
adc
sub
mov
and
dec
jbe
adc
push
xor
cltd
pushf
ljmp
xchg
sarl
mov
movsl
mov
cmpsb
push
cld
leave
mov
cmp
cmpsb
lods
inc
mov
jp
xor
jne
or
mov
std
mov
xchg
das
shrd
ret
pop
xor
fcomp
jge
mov
adc
rcrl
andl
repz
jmp
sbb
xor
fcomps
ret
aam
test
inc
push
xchg
mov
adc
fcmovne
scas
jl
sti
lods
ret
dec
cmp
mov
in
ja
push
sbbl
mov
mov
lods
jno
and
jecxz
scas
inc
mov
mov
push
or
mov
outsl
or
add
xor
jmp
divb
in
mov
aas
jb
pop
mov
sbbl
jno
lods
fmuls
pop
scas
sub
jnp
inc
cmp
push
movsb
imul
pop
shr
imul
jne
or
out
sahf
jns
cld
mov
dec
or
ret
sub
rorl
pop
cmpsb
cmp
jmp
mov
pop
jmp
movsb
jnp
push
out
dec
mov
mov
mov
fildll
sbb
fimull
lods
inc
xor
adc
mov
lret
movsb
pop
repz
lods
sub
pop
mov
add
enter
push
mov
sub
push
mov
andb
pop
adc
cmp
test
icebp
aad
outsl
add
adc
gs
bound
testl
js
data16
das
xor
pusha
int
rclb
sub
imul
cld
lock
arpl
scas
xchg
push
and
mov
jg
dec
jb
pop
sbb
mov
mov
out
mov
insl
shrb
daa
jnp
or
rol
faddl
in
adc
dec
je
cmc
or
push
ja
inc
fstl
test
out
xor
sti
pop
push
sub
ficomps
add
hlt
loopne
pop
cmc
dec
shrb
xor
xor
and
cmp
cmpsl
sbb
in
mov
cmp
pop
push
xor
enter
aaa
sub
jp
test
ds
addr16
inc
ficoml
cmp
inc
daa
inc
xor
pop
sti
inc
cmp
sti
xor
dec
data16
push
dec
sub
inc
sub
out
fldenv
and
xor
sub
rcl
push
or
popf
xchg
fwait
add
test
ja
loopne
mov
add
scas
test
loopne
jno
ljmp
nop
out
mov
cmp
mov
les
push
aam
shrl
xchg
cmp
and
test
repnz
das
xchg
test
mov
pop
adc
xlat
enter
pushf
dec
ret
mov
dec
dec
ja
mov
mov
lahf
lds
and
into
xchg
lret
sub
cmc
xor
add
and
dec
shrl
pop
ja
not
fdivrs
xchg
mov
pop
repnz
imul
or
lea
addl
mov
adc
inc
insl
or
push
jne
test
lods
inc
add
xchg
push
and
aad
loop
mov
lcall
dec
dec
dec
test
sub
or
fwait
dec
or
dec
fldl
nop
push
lcall
lahf
cld
or
ds
xchg
outsb
outsl
mov
jecxz
cltd
mov
dec
mulb
cwtl
mov
les
cli
jle
xchg
and
gs
add
popa
lds
mov
or
rcrl
ret
pop
mov
pop
sahf
pusha
xchg
cwtl
cmp
and
mov
push
vandps
outsl
fdivrs
cmpsl
cmp
xchg
push
pop
sahf
into
mov
leave
and
xchg
push
out
jne
xor
inc
fs
mov
add
aaa
jo
jne
sbb
arpl
pop
jns
push
xor
pop
aad
mov
push
in
or
mov
ja
insb
dec
inc
push
rol
sub
push
mov
and
into
shl
mov
cwtl
push
lahf
jbe
push
jb
inc
mov
and
in
into
xor
scas
and
xor
gs
nop
pop
dec
dec
enter
sub
das
jl
fmull
in
mov
mov
addb
das
jle
sub
ds
jl
lock
dec
scas
cmc
adc
leave
push
jle
arpl
mov
xor
out
pop
inc
cltd
lahf
stos
xchg
loopne
mov
test
or
add
push
pushf
xor
cmpsb
aam
ljmp
test
sti
sbb
pop
addr16
gs
sbb
sub
movsb
mov
inc
mov
xchg
sti
loop
imull
es
pop
pop
mov
dec
es
push
out
movsb
mov
test
add
scas
scas
imul
adc
or
sbb
outsl
scas
cmp
xor
mov
dec
mov
lods
add
scas
mov
scas
daa
js
or
cmpsb
mov
add
push
or
inc
sub
bound
lahf
cmp
mov
cmp
push
mov
mov
jmp
xlat
clc
inc
inc
push
push
cwtl
lret
outsl
fmuls
pop
xor
aad
inc
out
clc
adc
mov
add
popa
mov
cmp
out
sbb
mov
fwait
scas
inc
and
lods
loopne
dec
adc
addr16
push
ja
daa
xchg
shlb
cmp
idivb
sub
int3
out
mov
inc
mov
sti
inc
roll
shll
ljmp
mov
aas
xchg
test
jecxz
mov
hlt
xor
adc
bound
xchg
mov
and
jecxz
inc
mov
in
shrl
sub
adc
mov
popa
xor
mov
bound
mov
mov
jg
jge
mov
inc
jge
jecxz
or
mov
fwait
and
imul
jge
sbb
adcl
cmp
cmpl
js
aam
jo
pop
cltd
inc
add
and
loope
mov
in
xor
mov
pop
shl
mov
bound
push
jg
sbb
shr
mov
add
cmp
movsb
xor
bound
cmc
jb
ret
ja
jg
and
daa
lret
add
dec
lods
popa
ja
pop
pop
imulb
jge
repnz
mov
fistl
cwtl
outsl
mov
stos
mov
sbb
xlat
dec
mov
sahf
push
lods
xchg
sub
out
sbb
into
enter
fdivrl
into
mov
lret
in
mov
lods
pop
jnp
add
pop
cmpsb
sub
jp
clc
mov
xchg
lahf
into
mov
xchg
adc
add
inc
adcl
push
xchg
sti
and
and
les
ss
shlb
call
sbb
jmp
cmc
cmpsb
mov
cmp
jl
leave
pushf
movsl
sbb
in
ret
ret
jle
int3
sbb
mov
or
mov
inc
nop
push
fwait
mov
push
addr16
ds
scas
fldpi
out
stos
outsb
aad
in
ss
movsl
mov
out
or
add
xchg
xor
push
xchg
inc
push
je
dec
dec
push
jb
es
movsb
lds
sub
out
ret
and
inc
push
cld
inc
loope
push
in
xchg
pop
lret
jno
ret
int
clc
mov
and
ja
mov
movsb
mov
in
xchg
loope
mov
loop
movups
push
js
mov
push
jge
bnd
mov
movsl
mov
sub
in
lret
aam
loopne
sbb
xor
mov
sarb
push
fildll
iret
cmpsl
scas
adc
ret
add
mov
leave
fldenv
xlat
adc
mov
loope
lret
pop
lea
mov
push
xchg
cmp
bound
mov
jne
sub
test
ret
sub
outsl
or
push
insb
mov
dec
std
or
push
je
rcrl
adc
test
stc
pop
lock
jnp,pn
pusha
out
pmaddwd
mov
das
pop
xchg
mov
cltd
mov
jg
adcb
xchg
add
test
popf
lock
loope
loopne
or
shll
cltd
stc
subb
dec
call
ljmp
sahf
sbb
in
flds
or
dec
lret
aaa
jl
lcall
andnps
mov
loopne
mov
clc
sahf
sbb
sub
pmulhw
std
push
stos
mov
daa
js
cltd
mov
inc
jnp
or
imul
gs
cwtl
inc
fxch
pop
pushf
stc
shrb
and
lea
sbbb
lahf
xlat
adc
add
xor
adcb
jnp
loope
jb
stos
add
not
or
fsubs
sbb
addr16
aaa
int
test
iret
call
dec
lea
repz
or
inc
mov
or
repz
mov
cs
stos
fcmovnu
std
pop
or
xor
rorl
jle
and
movsb
sbb
movsb
ret
sub
jno
loopne
inc
sbb
pop
insl
sub
lahf
cmp
cld
cmp
fcmovu
mov
and
jae
and
fistps
test
sbb
add
scas
cmp
lahf
or
lcall
fucomp
and
push
pop
xchg
pop
scas
pop
cli
mov
fwait
mov
movsb
mov
or
xchg
push
mov
cmp
cwtl
xor
lea
mov
mov
lock
push
lcall
aad
ja
push
enter
clc
lods
xor
inc
fidivrs
adc
mov
sub
out
dec
pushf
adc
mov
pop
mov
mov
jmp
ret
aam
jmp
aaa
mov
dec
in
xchg
dec
and
movb
out
daa
and
and
insl
jmp
addb
mov
clc
les
inc
push
and
adcb
test
push
xchg
pushf
xor
and
fnstenv
mov
mov
mov
mov
jno
mov
cmp
inc
add
cld
int3
pop
aad
push
xchg
ljmp
shlb
add
jmp
and
in
stos
out
inc
gs
or
jp
pop
lods
popa
cli
push
mov
sbb
je
loope
inc
push
cmp
pop
bnd
pop
jecxz
mov
in
jne
push
and
jae
out
test
lret
and
insb
sub
in
push
rcr
adc
push
fidivs
sub
mov
jns
jno
out
loope
xchg
lret
ret
push
imul
test
pop
fdivrs
jno
mov
push
rorb
xor
adc
inc
inc
jbe
lea
push
cli
jno
mov
xor
mov
xor
aas
push
aad
mov
cs
pushl
out
mov
aad
and
je
or
jg
add
dec
inc
addl
add
push
orl
mov
mov
gs
std
cltd
jno
or
mov
cld
imul
adc
push
fcomip
jge
jbe
sahf
bt
jae
into
sub
inc
or
loop
shl
lock
jo
call
push
imul
cli
in
dec
icebp
jl
and
adc
xor
addr16
js
ss
lahf
and
xchg
push
jmp
mov
cmc
jmp
out
je
and
pop
repnz
xor
dec
cmp
dec
icebp
jb
sbb
outsl
int3
loopne
dec
jge
imul
add
lods
mov
xchg
rcll
inc
mov
repz
hlt
push
cmp
dec
aas
mov
push
ret
jecxz
shl
fwait
jb
or
bound
rorl
cmp
hlt
mov
or
es
popf
pusha
or
dec
jns
lea
cmpsl
push
iret
inc
aad
and
sbb
jb
das
int3
sbbb
pop
movsl
loopne
or
jmp
mov
mov
mov
xchg
int3
mov
xorb
sbb
data16
lret
es
std
mov
pop
add
in
mov
rclb
in
xchg
ss
lret
mov
push
push
xor
and
pop
pop
mov
rcrb
jmp
in
fs
int
mov
lock
popf
dec
pop
lahf
out
dec
pusha
mov
adc
ljmp
or
sbb
push
daa
loope
jg
adc
lret
icebp
shll
mov
dec
fst
cltd
xchg
scas
xchg
mov
insb
add
pop
inc
in
mov
mov
push
stc
mov
aam
or
out
into
push
jg
mov
in
out
mov
push
stos
ds
cmpl
dec
dec
scas
mov
adc
mov
cmpb
jmp
dec
js
out
mov
cmp
inc
lret
cmp
popf
jl
jne
sarb
lret
lock
mov
fs
inc
fildl
pop
mov
mov
cmp
mov
add
dec
or
xchg
cmp
jmp
ret
sbb
pop
mov
push
rorb
and
outsl
fiadds
mov
outsb
lea
ss
nop
pop
xor
sbb
sbb
nop
mov
mov
roll
addr16
push
call
insb
sub
out
rolb
popa
shll
sub
lret
gs
cmp
testb
cmp
adc
or
pusha
mov
cwtl
das
sbb
scas
pop
mov
ss
insb
sahf
sahf
xor
xor
sub
imul
xchg
mov
add
jo
aam
testb
jle
push
sbb
nop
adc
int
and
sub
repz
inc
push
mov
adc
push
sbb
mov
popl
mov
and
or
push
xor
mov
mov
in
mov
cmp
push
scas
push
adc
lods
hlt
xor
jno
ja
push
leave
and
sbb
je
pop
movsl
mov
mov
jns
push
outsl
pop
push
mov
adc
dec
mov
cld
lcall
in
cmpsl
loopne
xchg
add
aam
shll
rol
xor
movsl
jo
addb
fwait
or
push
fisubrs
jle
dec
bound
icebp
lret
sbb
stos
xchg
jno
aas
push
rclb
pop
mov
fcomip
out
and
in
dec
insb
lahf
mov
mov
mov
inc
and
stos
hlt
ljmp
sbb
rorl
jns
sbb
sbb
adc
dec
fwait
lcall
mov
imul
sti
xor
jbe
push
jg
dec
and
cmc
cmp
xorb
scas
dec
cld
subl
stos
scas
inc
add
lock
or
mov
mov
mov
cltd
add
cltd
rcl
imul
sub
jae
cmc
jl
sbb
adc
clc
jg
cltd
clc
sahf
xchg
and
jmp
enter
xor
lahf
arpl
shlb
push
cmpsb
in
inc
dec
inc
out
inc
daa
jle
push
sti
push
or
sub
and
push
insl
test
and
add
add
rcl
mov
stc
and
mov
mov
insl
pusha
xor
xor
mov
cltd
cmp
repz
jle
ds
in
fisubs
pop
addr16
mov
push
inc
aas
bound
mov
inc
cmc
push
loope
inc
rorl
push
lret
mov
fsubrl
mov
pop
cmp
pop
das
sub
dec
push
les
arpl
mov
inc
scas
push
push
mov
jg
int3
sbb
pop
cwtl
sub
in
les
outsb
xchg
mov
pop
std
mov
cmp
lret
movb
pop
lret
xchg
pushf
push
adc
and
cmp
xchg
pop
and
andb
push
mov
sub
mov
hlt
push
mov
loope
mov
xor
xchg
aam
mov
jmp
std
pusha
jmp
dec
out
sub
fistl
xor
or
xlat
and
nop
daa
in
push
cmpsb
push
push
dec
sub
out
les
rolb
into
scas
and
movsl
push
mov
add
loope
push
dec
and
and
and
cmpsb
dec
loope
rcrl
aad
cmpsb
inc
sbb
iret
push
jns
call
lahf
bound
sbb
push
fcompl
ds
repnz
jmp
mov
jmp
jg
inc
xchg
pop
dec
ds
stos
repnz
dec
sbb
push
movsl
jo
out
pop
inc
sub
inc
sub
clc
scas
sub
or
mov
jae
or
lds
daa
jo
imul
inc
push
lods
ja
and
sbbl
add
inc
and
adc
adc
mov
jns
test
cmp
adcb
jle
hlt
cmp
mov
and
push
jmp
inc
aaa
ja
jb
inc
inc
xor
xor
shlb
shll
pushf
loopne
pop
push
xor
shlb
call
add
push
mov
lcall
imul
mov
adcb
xchg
aam
mov
ret
mov
das
into
sbb
jle
adcb
inc
add
mov
jne
inc
xlat
jne
pop
mov
pop
pop
repnz
shlb
lods
jns
test
testl
insb
sbb
rol
in
out
in
xor
shrb
inc
shr
lcall
mov
cmp
out
jae
lds
push
cmpsb
fsubs
fsubs
sub
fsubl
clc
or
pop
sub
jnp
push
mov
insb
js
in
push
xor
adc
es
sub
leave
test
xchg
mov
sti
stc
sub
lret
out
xorl
mov
pop
insb
sbb
pushf
add
jo
adc
dec
lret
addl
in
fmuls
mov
cli
add
negb
fwait
ljmp
xor
jg
push
jb
sub
imul
sub
adc
sub
xor
fistl
mov
aaa
jg
cli
xor
rolb
in
xchg
enter
aaa
mov
sbb
into
jge
fnsave
jle
add
sub
repz
add
fwait
ds
out
sub
xchg
rcll
or
sbb
jne
and
fdivrl
jb
int
js
aas
js
repnz
imul
fidivrl
and
xor
cmc
mov
pop
outsl
cltd
and
ret
sbb
xor
or
movsl
cmp
pop
mov
or
xchg
mov
lea
lock
imulb
stos
xchg
sbb
mov
jge
icebp
mov
sbb
and
test
jo
out
inc
inc
inc
fdivs
lock
and
dec
mov
pop
into
cmp
inc
push
adc
ret
mov
icebp
ds
mov
loopne
notb
int
insb
orl
sub
push
pop
xor
cmp
outsl
jle
ljmp
mov
lcall
jae
xchg
leave
push
cmp
ja
shll
push
in
mov
fistpl
jne
call
mov
mov
test
test
gs
fldcw
rclb
sbb
sub
into
add
jnp
scas
jb
mov
sbb
and
jl
xchg
jg
insb
aad
lods
idiv
or
stc
push
sbb
test
negl
mov
sub
popf
in
aas
aad
addr16
sub
hlt
adc
add
hlt
stos
cmc
lds
adc
out
sub
cs
dec
insb
test
repnz
adc
das
shrl
xlat
dec
dec
add
jle
or
jp
popf
xor
xchg
lods
inc
stos
jl
mov
test
sahf
jne
inc
inc
bound
mov
andl
sub
add
sub
mov
add
cli
sbb
xchg
aaa
push
pop
mov
call
dec
stc
adc
ljmp
inc
jmp
push
popf
arpl
lahf
lock
and
add
dec
xchg
mov
inc
in
jnp
xchg
jnp
lea
cmp
in
clc
addl
sub
xchg
sti
mov
subl
xchg
adc
and
aas
push
rcrb
mov
insb
loopne
filds
cmp
and
push
mov
int3
jecxz
and
mov
scas
push
xchg
jae
nop
lret
pop
pop
xchg
lcall
stc
je
and
xchg
adc
clc
mov
cwtl
xor
ss
or
inc
pop
rcll
pop
repnz
clc
jae
je
jo
std
add
into
fimull
lods
push
jge
addl
mov
pop
in
nop
or
sarb
sbb
incl
sub
push
addl
std
xor
daa
enter
xor
scas
popa
fdivl
out
mov
mov
scas
jbe
loope
jbe
fldcw
jne
movsl
shrb
adc
mov
push
cltd
mov
xor
xor
jns
mov
add
aam
jmp
in
pushf
jo
dec
mov
mov
out
nop
lret
xchg
leave
scas
mov
ret
sbb
xchg
stos
rcr
or
mov
adc
sub
ljmp
or
sarb
rclb
fsub
decl
addr16
cltd
dec
cmp
or
jbe
cltd
pop
xlat
sub
fs
pop
daa
dec
pusha
mov
add
xchg
scas
aad
add
mov
cltd
and
sar
pop
pusha
pop
gs
nop
and
mov
dec
decb
cmp
push
and
xor
sbb
dec
es
adc
jl
mov
push
and
test
inc
add
pop
add
mov
fstpl
out
in
jmp
push
addr16
iret
out
cmpsl
popa
push
stc
cmpsb
add
pop
lods
std
xchg
arpl
stos
test
or
xchg
les
mov
mov
jge
push
lock
into
lret
insl
mov
ret
mov
mov
pop
insb
mov
lds
cwtl
xchg
repz
daa
aaa
adc
jg
fstpl
push
cmc
jge
stc
int3
mov
add
push
les
and
xor
mov
fsubl
mov
mov
xchg
loop
aad
insb
sub
int
mov
pop
in
orl
or
cld
push
clc
je
adc
cld
test
push
mov
sub
and
xchg
int
inc
ja
out
pusha
cwtl
enter
ja
add
fwait
bnd
mov
jne
loope
cmp
adc
jmp
add
negb
popa
or
mov
adc
fnsave
pop
jo
in
add
cwtl
push
jmp
clc
ds
mov
pop
fldenv
test
or
adc
in
das
adc
mov
push
cltd
inc
ljmp
push
jg
pop
ror
aaa
decb
inc
and
hlt
push
outsb
pop
cmc
out
sbb
dec
cmp
imul
dec
repz
push
cld
and
es
test
icebp
stos
fcmovnb
inc
adcb
scas
mov
fnstenv
int
mov
pop
mov
inc
movsl
rcl
add
fldl
lret
rclb
or
dec
ds
xchg
push
add
mov
mov
js
das
xchg
add
sub
mov
clc
inc
sbb
ret
jp
rcl
hlt
jmp
insb
ret
inc
push
aaa
std
mov
divl
and
add
jle
jmp
aam
or
repnz
clc
daa
mov
or
xchg
xor
fwait
mov
repz
jne
hlt
popa
ljmp
pop
in
push
sub
push
ja
ss
clc
iret
data16
ret
in
std
mov
cwtl
data16
repz
dec
test
fdivl
leave
push
inc
push
push
ljmp
fldenv
imul
push
inc
jno
cli
dec
cmp
jl
nop
daa
dec
sti
iret
inc
out
scas
inc
pushf
or
mov
dec
in
arpl
not
inc
pushf
xor
mov
mov
fiaddl
aad
aas
std
pop
test
ror
push
pop
ficomps
add
and
test
push
add
jecxz
lcall
jnp
mov
jns
int3
and
mov
jae
xchg
mov
push
fsubl
mov
bound
and
push
pop
lahf
dec
mov
fwait
pop
jecxz
sub
xchg
push
jbe
adc
xlat
sub
ret
testl
stc
pushf
pusha
aas
lea
lea
and
jp
xor
mov
adc
adc
leave
mov
fcoml
mov
push
push
push
push
mov
mov
xchg
lock
ret
repz
push
mov
push
mov
mov
jmp
mov
lds
movsb
dec
push
popa
lret
add
mov
pop
movsl
cmp
sahf
outsl
in
inc
push
rorb
lds
lods
fstpl
xor
scas
fiadds
jp
jbe
mov
inc
imul
cmc
cwtl
ljmp
jle
jg
scas
pop
repz
movsb
ret
aas
ja
jns
jmp
xchg
dec
or
xchg
loope
push
es
push
test
mov
je
sbb
mov
push
add
xchg
mov
xchg
sbb
inc
sbb
push
das
fwait
and
push
stos
pop
addb
cltd
adc
imul
outsb
add
jbe
and
inc
inc
pop
sahf
das
add
xchg
in
daa
outsl
push
test
sbb
pop
dec
lahf
adc
add
jno
push
xor
test
aaa
jge
ss
popf
mov
adc
lods
andb
fisubrl
imul
into
mov
jmp
sub
inc
add
cmp
mov
push
mov
mov
cmpb
add
mov
mov
or
es
je
test
adc
push
add
dec
sub
mov
dec
adc
ds
lods
rorl
loopne
add
shl
xlat
mov
and
mov
leave
int3
arpl
mov
xor
and
cwtl
mov
data16
and
adc
add
push
in
aam
xor
xor
mov
rcrb
sub
pop
in
daa
ret
rcr
push
pop
mov
mov
arpl
jbe
scas
inc
arpl
jmp
scas
call
cltd
scas
enter
add
lret
mov
xchg
jne
test
scas
fsts
or
and
shl
xor
cmpsb
xorl
jge
movsl
or
insb
sub
cmp
jp
mov
and
xor
xchg
gs
inc
adc
pop
and
in
cwtl
mov
std
test
test
pop
or
loop
jno
mov
js
fstpl
cmc
or
js
pop
xchg
mov
mov
mov
jmp
push
mov
pop
mov
push
xchg
mov
mov
jl
jl
pop
aaa
nop
in
aaa
inc
cmp
popa
pop
or
xor
xchg
xor
addr16
stc
mov
outsb
sbb
xchg
inc
in
xor
sbb
xor
sarb
pop
adc
mov
je
inc
add
ljmp
js
adc
cmp
dec
imul
pop
std
cltd
sub
mov
add
sub
sbb
jle
data16
test
rcrb
lret
sbb
mov
aaa
pop
push
lods
dec
enter
in
xor
pop
xor
bound
push
popa
inc
xchg
out
les
lock
sub
mov
dec
mov
jecxz
mov
xchg
dec
push
pop
xor
add
mov
mov
rclb
push
sub
dec
push
jmp
in
sbb
mov
ret
or
inc
sbb
aam
xchg
push
fwait
subb
push
xor
sub
and
mov
mov
and
fisttps
cwtl
cmpsl
ror
xchg
mov
ficoml
xor
jmp
testl
cmp
mov
push
cli
cmp
mov
push
add
das
loop
leave
adc
ss
xor
out
mov
fbstp
orl
or
lcall
sub
sbb
dec
test
nop
inc
arpl
mov
in
xor
hlt
clc
cmc
imul
sarb
pop
popa
push
fwait
lock
pop
outsb
shrb
cmp
mov
sbb
icebp
inc
xchg
jmp
dec
lock
ret
repnz
lods
adc
dec
push
jmp
add
pop
popa
dec
and
mov
sub
xchg
call
outsb
mov
and
adc
lret
mov
cwtl
test
xchg
pop
sbb
mov
leave
xchg
jl
ljmp
pop
fyl2xp1
popf
push
fsub
mov
rcrb
mov
cmp
in
or
dec
cmp
loopne
mov
into
cmp
lahf
sbb
adc
jne
push
fdivl
xchg
stc
or
stos
jae
xchg
sbb
es
std
or
or
ret
jns
in
cmp
mov
adc
iret
jg
mov
xlat
xor
repnz
fisubrs
cld
loope
sub
lcall
fnstsw
dec
stos
fwait
ja
cmp
pop
pop
dec
ss
fistpl
dec
push
cmc
lcall
add
icebp
lahf
hlt
in
mov
mov
int3
xchg
jmp
push
lods
fsubl
loopne
in
stos
mov
out
add
mov
add
fwait
and
adc
pop
ret
test
add
adc
lea
sbb
mov
mov
xchg
addr16
sarb
mov
das
mov
les
push
adc
sti
call
sub
dec
and
shll
sub
fwait
xor
es
push
mov
pop
addr16
movsb
fwait
cmp
shlb
test
mov
movsl
testb
sbbb
test
leave
push
jnp
pop
test
jno
push
jmp
xlat
inc
jo
inc
mov
iret
mov
add
xor
sbb
push
jmp
xorl
fbld
push
add
es
pop
fs
movsl
inc
pop
push
xchg
sub
loop
xchg
movsb
xor
jae
mov
daa
lods
pop
arpl
addb
sbb
inc
pop
or
cmp
sti
test
je
push
daa
push
sub
loopne
daa
mov
out
test
jecxz
jg
inc
jg
jb
icebp
enter
jne
in
cld
inc
jge
inc
mov
jg
jp
dec
sbb
aam
mov
hlt
or
ret
pop
cmp
loope
mov
mov
lret
pop
pop
ret
shr
mov
scas
xor
ss
addb
cmc
mov
into
fcoml
push
pop
pop
or
jmp
sub
cmp
jle
leave
andl
loopne
nop
loop
out
test
mov
or
imul
in
lret
pushl
mov
cmpsb
cmc
jmp
ret
popa
jo
sbb
pop
vpmullw
and
add
mov
inc
adc
cmpsb
js
xor
out
xor
dec
repnz
mov
push
fwait
aaa
addb
pop
sbb
dec
xchg
pop
stos
mov
in
adc
js
and
cld
xchg
and
lods
or
daa
je
add
fwait
scas
out
or
mov
push
nop
adc
aad
xchg
or
out
dec
cltd
mov
mov
jl
ficomps
sbb
movsl
mov
aaa
sbb
daa
jp
pop
andb
push
into
rorb
mov
pop
inc
mov
incb
pop
cmp
mov
cmc
insb
jl
hlt
jg
cmp
mov
mov
pop
inc
scas
jmp
lret
pop
std
cmp
adc
cmpl
mov
lods
cwtl
add
jbe
fwait
loopne
loope
daa
es
shrl
out
out
sub
jb
fwait
pop
add
rcl
jmp
pusha
jnp
jne
jb
cmp
jl
and
les
cmp
loopne
pop
leave
sub
sbb
movsl
xchg
push
or
and
fisubs
add
jecxz
pop
int3
arpl
iret
mov
mov
jne
insb
aam
incb
cmc
mov
decl
and
mov
iret
cmp
mov
inc
repz
pop
xlat
gs
fldt
mov
dec
jl
lret
lret
push
cmc
sub
out
mov
fs
decb
jbe
gs
fdivrs
ret
out
pop
sub
pushf
hlt
daa
into
ljmp
movsb
mov
fmul
jae
and
repz
add
ret
addr16
movsl
mov
sbb
push
ljmp
mov
or
adc
hlt
xchg
push
lretw
cmp
pop
dec
mov
sbb
mov
test
mov
das
ret
ret
mov
lret
daa
mov
xchg
and
imul
addr16
ss
mov
dec
hlt
pop
outsl
repz
out
or
insb
ds
xchg
adc
and
jbe
out
imul
shl
mov
cmp
push
cli
push
adc
sub
push
push
adc
mov
rclb
inc
test
jp
in
fwait
mov
mov
jecxz
mov
lock
jns
xor
repz
adc
ss
aam
sbb
adc
mov
gs
xlat
mov
sar
sub
fbstp
mov
xchg
std
xor
mov
xor
cmp
rolb
xchg
out
pop
sahf
testl
std
pop
inc
add
dec
sbb
lods
xor
jmp
pop
test
lret
and
dec
in
and
pop
into
enter
loope
cmp
pop
je
xor
out
jno
cli
dec
cmovg
nop
mov
scas
out
mov
loope
dec
repz
sbb
or
mov
aad
sub
jg
enter
das
xchg
fwait
lret
mov
xchg
pop
shrl
les
dec
inc
adc
incb
jecxz
inc
push
sarb
push
pop
mov
icebp
add
loopne
fwait
cmpsl
mov
stc
add
dec
je
hlt
mov
fmuls
jns
lods
mov
add
stos
jae
cltd
int3
xchg
jno
repz
iret
popa
lock
in
pusha
sahf
jns
jb
mov
add
xchg
rcrl
pop
call
xor
fildl
push
cmpl
outsl
cmpsl
mov
inc
push
repz
or
xlat
sbb
shlb
pop
cmp
xchg
std
int
mov
and
call
or
js
rcrb
mov
shrl
jecxz
push
jne
mov
dec
sub
ja
mov
rcll
cmp
cmc
mov
mov
addr16
add
push
mov
ljmp
mov
lret
sarb
sub
sub
or
mov
xor
enter
inc
loope
rclb
xor
sbb
sbb
orl
enter
cmp
negb
sub
mov
xchg
jmp
iret
movsl
nop
jns
sti
push
testl
dec
fcmovnb
push
and
mov
dec
xchg
in
cli
movsb
cmp
mov
gs
in
movsb
adc
repnz
fs
aam
jle
push
mov
or
sbb
fmull
xchg
leave
call
outsb
mov
ljmp
sub
iret
addl
and
test
mov
jnp
lret
shrb
daa
mov
jae
je
jno
mov
icebp
movsl
mov
aam
cwtl
mov
and
ja
out
int3
and
xlat
pop
pop
rcrl
jl
sub
lods
dec
xchg
sbb
and
fnstcw
mov
aas
loope
mov
jle
push
ret
lahf
imull
lds
mov
jp
mov
inc
es
int3
inc
push
push
stos
es
or
sbb
add
push
add
scas
pop
testl
sbb
mov
into
push
cmp
rcl
stc
gs
popa
lret
js
cld
push
std
push
pop
dec
pop
add
iret
rcrl
pop
cld
sbbl
xchg
rcrl
add
cmp
add
scas
adc
ljmp
nop
inc
ds
inc
lods
xchg
test
ret
mov
sub
mov
mov
inc
lcall
lods
aas
sahf
mov
test
pop
movsl
cmpb
sub
sbb
rorb
test
in
sbb
cmp
clc
cmpsl
jns
sub
cs
outsl
xlat
jmp
sub
pop
sahf
mov
shl
dec
mov
jb
dec
push
mov
shlb
push
insl
jl
mov
jbe
push
jnp
sub
scas
mov
ret
mov
fstpt
test
aaa
cmp
pop
jl
lret
mov
test
inc
pop
clc
push
scas
out
lret
sbb
mov
in
jbe
sub
or
pop
jg
mov
xchg
mov
nop
jg
test
enter
das
mov
lcall
popa
js
push
stc
or
fcmovnbe
idivb
and
aad
ret
fnsave
in
xor
ret
sti
fmull
out
fsts
push
inc
nop
push
inc
cld
sub
xchg
mov
test
jl
lods
cld
push
xchg
fnsave
mov
aad
cmp
int
xchg
xor
pop
loopne
das
xor
lret
into
and
and
add
imul
cld
xchg
scas
jns
inc
pop
dec
lahf
mov
lock
rcll
adc
or
cli
xchg
lret
pop
or
jns
sbb
test
arpl
sbb
push
arpl
sahf
adc
pop
pop
jb
adc
andl
inc
pop
cmp
and
sub
inc
dec
loope
dec
hlt
shl
popf
sbb
scas
out
shlb
cmpb
test
mov
dec
shlb
lret
pop
jmp
ljmp
jge
push
popa
xorl
jmp
add
movsb
or
cmp
repz
cmp
add
vpsraw
outsb
mov
xchg
call
xor
or
jecxz
movsl
dec
push
xor
jg
iret
and
xchg
leave
insb
repz
je
fildll
push
pushf
sub
sarl
rcr
jo
mov
mov
xchg
lods
mov
jl
adc
sub
or
adc
gs
xor
in
ficompl
dec
push
or
popa
rorl
adc
decl
cmp
inc
dec
mov
lods
and
pop
sbb
aad
cmp
sbb
xchg
cs
in
outsb
clc
out
or
vcmplepd
mov
daa
ficomps
push
or
cltd
mov
xchg
pusha
lcall
out
ja
jnp
sub
sbb
lahf
mov
adc
push
cltd
sub
dec
cmpsl
scas
push
nop
cmpb
jmp
fbstp
fs
jb
pop
mov
popf
mov
mov
inc
fidivs
movsl
lds
inc
or
adc
and
sbb
xor
push
js
lret
js
sarl
rcrl
repnz
ja
jo
aad
push
cmpb
imul
js
xor
icebp
movsl
imul
or
jmp
outsb
sub
xchg
mov
pushf
jp
insb
xchg
or
xchg
rclb
test
dec
push
in
jnp
push
cltd
jecxz
mov
push
jl
jnp
cli
loop,pt
adc
fsubr
sbbb
pop
xchg
xchg
pop
fimuls
xchg
inc
insl
pmaxsw
dec
in
push
xchg
push
lretw
push
cltd
in
icebp
lods
stc
cmp
push
dec
jmp
sti
js
adc
or
cmp
xor
mov
shlb
jecxz
insl
sub
pop
jne
or
dec
ds
pop
xchg
negb
push
pop
xchg
into
loop
icebp
cmpsb
arpl
push
popf
lods
inc
mov
add
loope
mulb
mov
mov
jb
dec
sub
andb
inc
adc
test
add
ljmp
dec
repnz
mov
cmp
add
fadd
daa
std
aaa
push
das
mov
mov
jae
dec
sub
call
push
out
jg
mov
xchg
mov
pop
jnp
enter
fbstp
xor
sub
iret
outsb
jmp
out
xor
lret
cmpl
ret
lds
ljmp
or
and
cmp
es
addl
lods
movsl
aad
fcompl
mov
sbb
xor
aad
or
jl
sti
xchg
scas
fsub
shl
inc
jno
inc
xor
cmp
fwait
jnp
mov
add
ret
sub
cmc
add
dec
sub
pop
pop
outsl
insb
sub
xlat
out
clc
fwait
sarb
xchg
adc
mov
push
cmpsl
mov
or
jge
clc
xchg
cmp
negb
into
sub
jns
shrb
mov
inc
inc
mov
jne
imul
push
sub
rcrl
push
les
addr16
push
test
push
outsl
loop
inc
rcr
pop
gs
mov
data16
into
stc
inc
inc
cmpb
cld
xor
and
sbb
test
fwait
cmp
popa
push
push
jns
and
mov
mov
push
or
xor
sub
cmpsl
test
iret
sub
push
or
dec
mov
repnz
nop
daa
pop
adc
inc
bound
xor
cmc
push
ljmp
jno
sbb
sub
je
pop
mov
sbb
sub
jae
pop
mov
mov
scas
xchg
lds
adc
shl
fs
mov
inc
push
or
mov
sub
movsb
imul
pop
sub
aam
xor
push
decl
out
add
ljmp
or
jecxz
adc
jb
jecxz
sbb
dec
push
in
push
mul
jle
inc
mov
jne
mov
call
add
shrb
ja
push
scas
jo
dec
and
into
int3
aam
sbb
aaa
add
lock
and
and
jp
add
mov
out
lods
cmp
movsl
imul
pop
mov
push
sbb
inc
push
js
movsb
or
or
xor
pop
aaa
lods
fdiv
cmpsb
insl
dec
ds
mov
imul
push
push
adc
je
mov
ss
pop
jne
gs
and
fwait
outsl
mov
or
inc
sbb
push
xor
fstpt
stos
shlb
inc
fsubs
test
mov
sbb
xor
jno
and
mov
arpl
sub
xlat
sub
sarl
mov
test
mov
outsl
aad
and
add
inc
subl
pop
add
xor
adc
loope
cmp
sub
rcrl
stc
sbbl
lock
pop
outsb
and
and
sti
dec
mov
jle
call
aam
xchg
ljmp
jl
lods
inc
sahf
sti
aam
inc
fmul
notb
pop
jb
xor
je
into
pop
clc
or
mov
dec
test
in
mov
out
dec
inc
stos
jmp
addl
sub
cmp
mov
pop
xchg
movsb
jg
jl
and
test
insl
inc
popa
jnp
push
fwait
mov
jp
dec
mov
mov
imul
shll
es
addr16
out
std
mov
aam
leave
cmp
jbe
pop
int
jnp
xchg
pop
loop
mov
xchg
out
jle
cmp
sbb
xchg
jl
xchg
lret
pop
lahf
int
aaa
arpl
fwait
cmpsl
push
popa
decb
xchg
bound
and
cmp
ret
jg
cmpsl
repz
mov
pop
xchg
popf
add
rolb
mov
xchg
mov
dec
orb
mov
add
ds
movsb
movb
mov
stos
dec
or
mov
mov
repnz
test
popa
stc
insb
and
les
test
sbb
cmp
test
ret
xchg
test
orb
pop
and
pop
jp
pop
dec
push
imul
in
push
ja
or
xor
lea
adc
gs
jae
add
inc
push
pusha
and
les
jbe
popa
xchg
popa
clc
movb
scas
dec
dec
shlb
sbb
dec
jle
xor
sbb
jae
repz
or
jp
call
xchg
sti
lret
cld
sbb
ret
push
push
in
imul
cmp
sub
xlat
repz
sub
ret
out
dec
cmp
fs
rcll
test
bound
cld
in
inc
cmpsl
scas
in
or
jmp
xchg
stc
popf
jne
incb
shll
cmp
stos
roll
push
jl
push
idivb
lds
sahf
stos
sbb
stos
pop
jne
lods
bndldx
inc
out
push
mov
push
clc
adc
cmp
ss
pop
hlt
popa
inc
inc
ret
jnp
clc
mov
and
adc
cltd
cmp
and
adc
std
cld
loop
nop
insb
xchg
imull
mov
push
movd
nop
and
das
inc
inc
push
aam
push
ljmp
insb
into
not
push
sub
les
not
or
mov
mov
cs
dec
sub
dec
pop
add
mov
inc
cmp
lods
lahf
addr16
fcoml
cmp
ffree
inc
cmp
xchg
push
pop
mov
scas
sub
push
fistps
mov
shrb
push
lock
lahf
mov
xor
adc
repz
pop
pop
push
push
and
pop
out
test
xchg
addr16
inc
sbb
pop
add
std
xchg
int
mov
and
dec
pop
xor
cs
outsb
push
pop
cli
inc
aas
jae
mov
pushf
push
sahf
sti
outsb
aam
inc
xor
xchg
lret
mov
shrl
sub
gs
xchg
mov
stc
sahf
pop
addb
testl
add
xchg
dec
stc
pop
aam
sbb
xchg
repz
push
and
inc
sub
ss
and
je
loope
pop
repz
fs
loope
jmp
adc
mov
gs
jae
sub
icebp
sbb
stos
lcall
and
inc
adc
insl
fsubrl
es
mov
xchg
ret
lret
pop
int3
jmp
lock
add
sub
xlat
push
fadd
out
cltd
sbb
xchg
es
push
sub
pop
dec
lds
cmp
js
xchg
mov
out
fucomp
insb
mov
pop
push
repz
push
shl
jp
add
sarb
loop
loope
mov
sub
outsb
icebp
adc
mov
cltd
int3
or
lret
ds
mov
test
in
push
sub
hlt
fwait
dec
push
xchg
sub
rcr
div
cli
gs
hlt
sub
aam
test
bound
mov
test
adc
addb
sub
shlb
stc
out
fs
jns
and
neg
xor
fnstsw
add
xor
pop
and
cltd
pop
jg
adc
mov
push
pushf
rorl
std
inc
cmp
cmpsb
ds
ret
sub
push
das
test
stos
xor
pop
adc
mov
test
push
push
sbb
das
cmp
jp
inc
lahf
into
test
add
push
out
stos
mov
add
adcb
js
in
clc
lret
aas
dec
cmove
mov
out
cmpsl
idivb
fistpll
xchg
lds
int
and
test
dec
mov
aas
xchg
in
mov
lea
lods
jae
and
mov
push
stc
mov
popa
js
gs
pop
lock
push
mov
inc
cmpsl
lds
sahf
or
ret
fcmovnu
sub
in
in
xchg
lcall
mov
aam
lock
nop
inc
lret
jno
pop
out
cmc
adc
push
push
and
lret
or
and
xchg
clc
sahf
pop
in
add
in
call
rcrl
call
sub
cmp
cmc
xor
sti
mov
je
into
and
jmp
inc
sub
jle
aad
push
inc
frstor
mov
xor
in
cwtl
mov
cld
cmp
or
and
inc
ds
jno
stos
mov
aaa
test
clc
and
aaa
lods
adc
mov
out
mov
dec
xor
push
outsl
lret
jb
push
mov
in
and
lret
addl
loope,pt
mov
dec
movsl
pusha
sbb
dec
lods
push
out
pop
xchg
pop
das
pop
outsl
loop
icebp
xchg
scas
push
mov
sub
popf
ja
test
jle
cwtl
and
testl
pop
and
in
adc
sub
sbb
idivb
adc
xchg
cs
mov
ljmp
xchg
mov
cmp
push
popf
and
xor
and
ret
inc
push
outsl
call
push
mov
ljmp
sub
insb
sti
cwtl
test
sub
sub
movsb
leave
push
nop
cmpsb
xchg
push
je
imul
loopne
push
ficoml
js
cmp
popa
aam
mov
js
gs
loope
stos
arpl
cmp
cmp
sbb
icebp
mov
lods
mov
and
ret
xchg
ret
mov
jb
and
sahf
sub
nop
xor
sub
pop
sahf
or
fbstp
imul
mov
adc
xlat
jb
daa
jno
mov
push
jg
or
std
addb
cmp
and
ljmp
es
sub
pop
sbb
mov
jne
push
mov
gs
inc
mov
jmp
and
scas
xor
mov
push
cld
in
aam
xor
cmc
xor
mov
inc
xchg
mov
xchg
xor
popa
repz
fistl
cli
filds
mov
pop
inc
push
es
or
sarb
push
sub
xor
into
test
jmp
rcl
pop
lock
fdivs
outsb
roll
xchg
mov
or
or
push
and
push
lock
or
add
in
bound
ss
or
pop
inc
inc
daa
std
jg
sub
cli
sub
push
inc
add
in
inc
push
mov
push
adc
shrl
inc
pusha
push
ss
scas
push
stos
ss
test
push
add
cwtl
into
cwtl
jmp
insb
inc
mov
cmpsb
jmp
ret
nop
das
sbbl
push
or
insb
ret
jle
hlt
cmpsb
mov
push
inc
lret
pop
jb
inc
fiaddl
mull
in
popa
js
mov
imull
xchg
popf
jge
push
cmp
inc
outsb
out
cmp
insb
mov
clc
out
fs
in
mov
mov
into
xchg
scas
mov
push
icebp
pop
hlt
xchg
ja
mov
or
or
bound
inc
aaa
scas
inc
xor
xchg
out
bound
lock
inc
sbb
cmpsb
push
pop
scas
mov
lcall
adc
cmc
dec
add
lcall
stc
ljmp
filds
es
dec
sbb
dec
fwait
aam
out
icebp
pop
mov
and
mov
cmc
les
xchg
aam
xor
add
xchg
mov
cmp
in
dec
mov
jg
add
dec
out
pop
fsubr
lret
push
pop
cvttps2pi
lahf
rep
sbb
mov
les
ljmp
jo
and
xchg
mov
cmpsl
cmp
filds
mov
dec
pop
lret
bound
ljmp
das
int
mov
jecxz
cmp
or
mov
mov
mov
addr16
cmpsl
jp
cld
mov
fadd
in
leave
sti
aaa
xor
xlat
adc
lea
rcrb
fiadds
fstpt
jb
in
and
sahf
inc
into
popl
lods
addr16
dec
fwait
dec
xchg
scas
jmp
aaa
and
xchg
or
ret
outsl
gs
faddl
testb
cmc
mov
pusha
and
mov
xor
xchg
shll
mov
sub
cld
push
pop
mov
out
cmpsl
daa
inc
jmp
out
nop
out
orl
or
insl
jg
jb
sbb
sub
jg
jmp
inc
pop
xchg
mov
outsb
inc
in
jl
in
cmp
imul
mov
out
inc
push
adc
dec
mov
push
test
pop
or
loopne
lods
daa
push
js
gs
fs
push
repz
xor
in
xchg
lods
ja
push
inc
cwtl
mov
jge
inc
test
mov
cmpb
mov
jmp
std
dec
loope
clc
or
dec
push
jb
mov
inc
in
daa
mov
mov
sub
and
fsubr
iret
pop
jns
lods
or
clc
xor
jge
lahf
cli
pushf
xchg
pop
sbb
inc
cmp
mov
jbe
int3
lret
aas
loope
mov
sub
push
push
mov
and
test
pop
pushf
push
push
lods
xor
rclb
or
cmp
loope
insl
and
add
int3
and
mov
push
xchg
mov
sbb
stos
in
push
aam
sbb
xchg
xorl
pop
sub
cmp
pusha
dec
in
and
cmp
cmc
dec
sbb
dec
jo
lahf
xchg
mov
jnp
decb
ret
lds
movb
cltd
xor
inc
in
adc
lret
lock
add
nop
mov
mov
adc
or
cmpsb
pusha
or
fs
out
and
ret
cmp
fsubrs
in
sbb
xor
enter
mov
mov
sti
and
adc
lock
sbb
lcall
std
mov
fcomip
cmc
mov
in
mull
ja
add
pop
mov
mov
push
jnp
test
cli
and
pop
mov
xchg
jnp
pop
vandps
loope
aam
jp
mov
dec
pop
cmpb
fwait
enter
mov
xlat
cmp
sub
dec
movsl
add
nop
sahf
lods
mov
inc
fucomi
or
jb
lret
out
nop
jmp
mov
inc
and
push
andl
xchg
mov
dec
aad
xorl
int
decb
sbb
cli
sub
dec
std
lods
mov
lcall
inc
call
mov
dec
rol
test
xchg
cli
incl
lret
and
adc
or
and
sbb
loopne
or
lea
inc
push
jne
mov
mov
pop
insb
popf
mov
jge
jae
es
dec
test
lods
rolb
out
add
movsb
popf
xchg
push
or
xor
mov
imul
push
jo
adc
jp
push
jb
xchg
sbb
sbb
or
inc
test
das
rorl
icebp
test
movsb
mov
dec
xor
lds
insl
add
sub
cmp
lcall
mov
inc
lret
adc
xchg
push
or
push
push
aam
inc
mov
fisubl
icebp
pop
shl
jge
sbb
iret
frstor
cmpsl
popa
adc
mov
ja
mov
mov
in
inc
shll
pop
xor
or
daa
rorb
jno
daa
sub
cwtl
sub
and
cmp
insl
inc
into
pop
xchg
rclb
aad
xor
fisubs
outsl
mov
push
hlt
mov
ds
ja
pop
pop
out
sub
add
mov
jbe
dec
stos
xchg
push
out
jle
mov
lret
pop
mov
pop
sbb
pop
fbld
std
aas
cmpsl
sbb
pop
push
lods
push
arpl
xchg
inc
mov
inc
push
into
out
test
ret
jbe
jge
pop
mov
dec
mov
xchg
sub
jecxz
fs
jne
pusha
mov
das
movb
mov
cmpsl
int3
sbb
or
and
mov
in
sti
pop
mov
inc
cltd
stc
push
loope
xor
mov
pop
inc
sbb
popa
scas
and
mov
std
jo
and
iret
andl
stc
or
push
inc
sub
dec
push
popf
hlt
inc
dec
jae
and
popa
xchg
pop
arpl
cs
loopne
push
negb
xor
sub
jbe
and
mov
lock
dec
or
push
insl
push
cmp
jns
dec
sbb
cmp
daa
std
cltd
shll
stos
pop
movsl
pop
shll
outsl
push
aad
push
into
adc
jmp
sub
ficomps
and
inc
leave
sbb
mov
shlb
ljmp
stos
in
sarl
inc
lret
stc
shrb
jbe
dec
test
cmp
jae
hlt
in
adc
inc
outsl
push
jne
inc
inc
push
out
mov
xor
xchg
push
movsl
das
add
orb
sbb
negl
sbb
dec
dec
xchg
jle
dec
insb
test
js
sub
cltd
std
push
gs
fisttpl
ss
dec
cmp
and
imul
movsl
or
xchg
dec
pushf
mov
in
dec
adc
scas
inc
pop
mov
fmuls
xlat
and
je
mul
push
add
pushf
add
inc
popf
out
xor
lds
push
data16
sub
mov
jge
pop
dec
outsb
dec
jl
cmpl
add
mov
xor
xchg
xor
fstps
jecxz
push
inc
or
jle
ss
inc
das
test
mov
inc
push
jb
mov
or
sbb
xor
mov
lea
and
cwtl
inc
mov
imul
xchg
movsb
mov
jne
cmp
mov
mov
in
and
mov
mov
push
jle
lea
stos
mov
jb
adc
jg
mov
adc
nop
mov
pushf
pusha
sbb
mov
xor
sbb
dec
or
or
pop
lods
cltd
push
pop
or
inc
push
hlt
mov
jl
jbe
stos
add
and
sqrtps
loop
add
arpl
mov
dec
or
mov
arpl
dec
mov
cmp
das
pop
lods
lcall
out
pop
popf
pop
add
jle
dec
mov
mov
loope
xchg
addr16
push
or
insl
add
scas
frstor
fs
cmpsb
mov
jge
in
js
sbb
push
inc
or
inc
mov
jns
jnp
adc
stos
mov
outsl
lret
sahf
mov
in
mov
sub
out
adc
sti
push
repz
lods
mov
sub
mov
add
lea
outsb
push
inc
inc
shl
ljmp
adc
nop
xchg
cmpb
mov
sub
mov
out
cmpsl
insl
mov
iret
lret
mov
test
push
out
add
jae
mov
stc
sahf
or
dec
mov
and
aaa
fistl
adc
sahf
or
fsubl
inc
lods
fs
sbb
add
xor
es
or
xchg
out
dec
cmpsb
cwtl
aam
add
ds
cmp
mov
dec
cmp
sbb
lcall
sahf
mov
out
dec
rcr
jne
cmp
jmp
ljmp
or
or
mov
es
push
mov
movsl
stos
push
add
pop
mov
loop
and
xor
lods
ljmp
call
fwait
sub
inc
sahf
add
mov
fisubrs
adc
lods
stos
cmp
gs
adc
sub
lret
mov
inc
pop
inc
mov
and
popf
ja
sbb
mov
add
mov
addb
jmp
fmul
dec
add
push
mov
pop
scas
xchg
cmpsl
dec
pusha
mov
insl
push
js
daa
cmp
cltd
xlat
xor
pop
mov
push
nop
sub
jge
add
repz
xor
in
popa
iret
insl
mov
repnz
sbb
xor
adc
mov
jg
sub
push
fildl
sbb
in
push
jb
or
xchg
ds
stc
dec
push
push
add
add
cli
pop
xor
cmc
xchg
test
arpl
pop
aam
and
or
pusha
lahf
out
xchg
mov
shll
and
mov
inc
xor
push
xchg
push
incb
rolb
sahf
mov
mov
out
inc
movsb
xchg
fadds
add
jbe
and
test
cltd
lret
sbb
mov
int3
out
es
test
xchg
fmuls
push
das
pop
mov
loopne
ss
mov
or
push
jecxz
out
cmp
jae
out
xor
test
add
jns
out
jno
lret
dec
and
mov
dec
rol
arpl
int3
into
testl
jno
dec
xchg
jge
add
lcall
adc
xor
sub
andl
push
xchg
fstl
jb
pop
sbb
jno
daa
sub
cmc
mov
adc
out
fsubrl
es
ss
and
movsb
cmp
fucomp
xchg
xor
pop
mov
loope
ljmp
shll
fistpl
add
or
mov
out
jle
mov
ret
jnp
outsb
dec
out
cmpsb
add
call
cmp
stc
cmp
add
jnp
int3
fwait
pop
xchg
gs
clc
mov
dec
sub
mov
bnd
or
das
cmp
jecxz
mov
fidivs
push
test
sar
dec
lods
pusha
fbstp
lret
lds
push
and
cli
es
stos
sbb
in
or
aad
cs
mov
in
jge
mov
xchg
dec
mov
inc
mov
adc
pop
jno
lods
mov
push
adc
jmp
mov
add
adc
aam
in
xor
push
cmpsl
sbb
ret
fidivs
cwtl
cmp
sub
add
mov
test
in
sbb
dec
shll
and
and
insl
adc
loop,pn
cmp
subb
fcomps
ljmp
sub
fwait
lret
ret
mov
and
scas
push
xchg
pop
xor
ljmp
or
stos
sbb
pop
and
xchg
xor
or
arpl
iret
push
jg
mov
int
mov
pop
push
or
add
out
je
jbe
mov
push
mov
jl
mov
pop
sub
mov
js
add
aas
imul
sbb
addb
movb
aam
fidivrl
outsl
icebp
or
sahf
or
cli
jp
or
pop
xchg
adc
jae
xor
push
fdivr
ja
cmp
sbbl
jp
sarl
sbb
insb
cwtl
pop
jno
jl
pushl
push
pop
sub
cmpsl
out
push
cmp
push
stc
xchg
negb
jle
ja
clc
mov
jle
iret
xchg
outsb
inc
cmp
loop
adc
add
and
jb
ret
shll
jbe
adc
adc
scas
or
das
xchg
je
push
fwait
dec
mov
rcll
popa
push
adcl
daa
rclb
ja
jne
cs
fldt
lret
bound
jne
sub
push
xchg
aad
dec
cmp
negb
daa
and
cmp
add
test
hlt
inc
pop
out
jne
xor
sbb
stc
adc
int
repz
adc
out
leave
sbb
xchg
pop
jns
mov
and
and
jp
fsubrs
mov
pop
into
popa
adc
or
xchg
popa
daa
sub
scas
add
mov
sub
push
jb
dec
sbb
pop
shll
xchg
repnz
rep
pop
cmp
add
cld
rcrl
ret
pop
pop
mov
mov
outsl
enter
xchg
out
push
push
scas
mov
sub
cltd
lahf
scas
inc
push
adc
adc
int
mov
sar
xor
mov
dec
sub
roll
and
dec
pop
push
inc
and
scas
in
sar
dec
and
pop
push
add
xor
push
push
inc
fists
dec
stos
xchg
push
mov
movsl
xor
orl
dec
dec
leave
js
push
aas
xor
dec
mov
iret
fisubrl
adc
or
adcb
mov
aas
jb
cmp
into
and
insl
inc
cld
pop
push
push
faddl
jl
xor
mov
push
dec
fadd
mov
test
pop
inc
jo
pop
jne
sbb
mov
into
or
jmp
aad
sbb
fnstenv
test
aas
mov
jno
xor
aaa
cmp
jae
rorb
adc
mul
jno
xlat
or
pop
scas
cmp
cmc
cld
jmp
es
inc
out
cmpsl
or
rcr
rcrl
jmp
xchg
inc
insb
shlb
dec
cmpsl
xchg
pop
sahf
sti
jns
mov
call
frstor
sub
lret
xor
orb
in
and
lret
xchg
mov
je
xor
xchg
cwtl
stos
add
mov
jecxz
out
sahf
push
rorb
mov
sbb
sbb
sbb
loopne
pop
insb
cs
out
mov
mov
sub
in
test
popf
mov
lahf
sub
test
int
push
sbb
es
sub
pop
inc
lods
ljmp
imulb
insl
addr16
call
push
add
mov
fcompl
and
xchg
cmp
mov
ficoms
xlat
cmp
mov
inc
push
sub
mov
xchg
jp
ret
xor
vmovaps
jne
imul
mov
movsl
xchg
sbb
bound
in
hlt
out
es
test
movb
pop
pushf
mov
xchg
jae
dec
sub
hlt
into
jmp
mov
xchg
pop
fnstcw
into
cs
sub
sti
outsl
lods
nop
push
pop
sbb
add
adc
daa
dec
dec
or
xlat
je
bound
mov
push
inc
in
jo
push
rolb
sbb
scas
sbb
pop
movsb
in
push
insb
sbb
mov
sahf
testl
movsb
cmp
idivl
stos
movsb
shr
cwtl
test
jg
test
push
in
leave
popa
mov
in
jae
enter
xchg
lret
imul
xchg
or
adc
and
lods
sub
cmp
and
xchg
and
pop
dec
cld
or
idivb
call
or
dec
dec
sarl
ljmp
imul
mov
inc
push
mov
jo
out
scas
push
and
xor
sbb
inc
into
arpl
imul
gs
pop
mov
push
or
add
push
bound
dec
mov
loop
jo
jno
push
pusha
testl
inc
ret
insl
nop
out
push
push
mov
mov
jecxz
xor
adc
dec
jnp
xacquire
rorb
xor
mov
hlt
mov
push
jo
aas
out
mov
mov
daa
mov
jnp
xor
loop
jecxz
cmpl
leave
lods
ret
or
xchg
cmpsl
push
fistl
scas
adc
lret
add
test
out
jecxz
loopne
lods
push
incl
mov
test
pop
lock
lea
jb
push
in
pop
xor
cmc
and
das
mov
mov
jae
inc
fcomps
dec
xchg
cmp
stc
stos
pop
jmp
lret
cwtl
jb
jmp
or
mov
mov
push
testl
adc
dec
cmp
lahf
hlt
cmp
in
pop
sub
inc
pop
xchg
loop
movsl
mov
ret
cmpsb
std
ja
std
push
mov
cmpxchg
imul
xor
and
xchg
push
stc
incb
idivl
sti
jne
test
test
or
scas
call
or
popa
and
sarl
std
and
gs
std
adc
sti
xor
mov
leave
pushl
ja
and
std
push
dec
popf
ds
sti
pop
xor
out
fwait
pop
xlat
sbb
adc
pop
imul
cmpsb
cmp
dec
lock
xor
clc
lahf
pop
push
cmpl
es
sbb
int3
das
mov
mov
xchg
in
in
xchg
mov
xchg
xor
movsl
jns
insb
pop
ret
clc
fs
lods
xor
sbb
outsb
sub
push
inc
in
and
in
adc
cmpsl
lea
lea
mov
enter
call
add
ss
pop
pusha
movb
push
hlt
arpl
push
repz
xorb
push
into
mov
add
out
pop
filds
lea
ds
dec
xchg
test
or
xchg
mov
jmp
imul
test
sub
sub
xchg
test
shl
clc
jge
xchg
xlat
or
and
ja
outsl
test
bound
xchg
sbb
imul
sbb
sbb
jb
mov
mov
sbb
inc
popf
ret
inc
rclb
sbb
add
cmp
cwtl
xlat
mov
jl
jo
loop
nop
aad
add
repz
ret
dec
aad
lret
popa
pop
not
icebp
daa
jp
pop
and
inc
inc
jle
in
out
push
cmpsl
int
add
shll
cwtl
loop
rcrl
mov
pusha
in
pop
out
adc
clc
lret
fdiv
shll
test
mov
adc
jno
out
sub
movntps
in
and
dec
movsb
ss
fsubrp
iret
fdivs
pop
adc
add
dec
mov
mov
cmpsl
cwtl
ja
inc
data16
outsb
popf
and
add
push
pop
in
xor
xchg
inc
sbb
jge
enter
mov
test
inc
sarb
mov
jg
and
cltd
xchg
pop
ja
cltd
sub
cwtl
mov
cltd
sbb
xor
mov
cmp
cmpsl
pop
mov
sar
jge
inc
jns
and
push
aaa
lods
ljmp
call
dec
mov
lea
sub
fcmovnbe
js
or
dec
pop
jecxz
fidivs
pop
add
sbb
jle
pop
outsb
and
xchg
sub
sbb
popf
in
and
sbb
iret
insl
mov
sarb
inc
stos
int
inc
sbb
es
sub
adc
popf
popa
mov
mov
or
repz
std
shrb
mov
push
out
test
outsl
mov
ljmp
mov
fdivrs
sbb
jg
sub
dec
repz
in
lret
data16
cmp
dec
or
sbbl
xor
aam
movsb
pop
and
out
xchg
stos
ja
dec
pop
cmpl
cmc
xor
jne
jo
adc
xchg
add
xor
scas
in
sbb
mov
test
fldl
and
rclb
ja
test
loop
inc
gs
gs
sbb
mov
add
xor
mov
inc
loopne
sub
out
cmpsl
lds
aam
aad
mov
imul
fsubrl
push
add
pop
outsb
add
xor
loopne
push
sti
fbld
cmpsb
ret
mov
xor
fdivs
xchg
stc
movsb
cld
mov
cmp
jecxz
mov
aaa
fcmove
push
dec
movl
push
or
enter
mulps
mov
nop
clc
sahf
sahf
das
add
or
cmpsl
cltd
jo
imul
clc
sahf
jns
sbb
fbld
stos
scas
outsl
mov
xor
imul
leave
int
inc
add
ret
dec
loopw
pop
loope
iret
in
cmp
mov
nop
sub
add
push
daa
xchg
andb
jae
add
out
sbb
into
inc
out
mov
add
add
inc
das
inc
subb
mov
adc
rcl
ljmp
push
pusha
lret
and
xor
pop
dec
xor
lods
mov
xlat
gs
clc
pop
fidivrs
in
iret
fstpl
xchg
sub
pop
cwtl
dec
int
jge
push
mov
sub
pop
lods
aaa
xchg
jmp
sbb
jnp
push
dec
popa
mov
aas
inc
xor
xchg
and
pop
pop
js
and
out
hlt
or
rorb
xor
pop
mulb
xchg
mov
cltd
jge
inc
jg
pusha
cmp
in
insb
sub
mov
pop
insl
out
and
jmp
mov
push
inc
inc
lods
cmp
or
dec
push
cmp
push
js
cmc
and
outsb
push
pop
pop
iret
mov
fnstenv
decl
jp
stos
xor
pop
daa
inc
pushf
out
or
repnz
mov
mov
popf
les
enter
pop
sahf
adc
popa
stos
mov
je
and
cmpsl
mov
inc
loopne
lods
out
sbb
jbe
jno
ret
arpl
sub
aad
popa
nop
out
add
pop
int3
mov
sub
scas
xchg
fcmove
sbb
dec
sbb
xor
dec
loop
mov
imul
push
stos
jne
lock
out
jo
mov
fmull
loope
pusha
xchg
into
sub
dec
fs
jo
clc
inc
ds
rcll
pop
lock
add
adc
push
es
out
mov
sbb
push
vpmaddwd
xchg
add
movsb
cli
cli
test
cmpsl
fldenv
inc
lcall
in
rcl
clc
adc
orb
xor
xchg
pop
xchg
call
mov
sbb
into
fs
clc
mov
arpl
or
push
out
cmp
pop
dec
fnstsw
fadds
mov
andl
mov
fnsave
or
cmp
mov
pop
cmc
inc
pusha
lret
inc
lods
xchg
mov
dec
push
jle
pusha
jmp
xchg
cs
or
dec
sbb
cld
das
stc
push
sub
lds
out
insb
inc
popa
insl
cmp
pop
stos
out
dec
add
and
mov
gs
addb
cmp
pop
in
insl
ja
mov
rcl
add
fnstsw
mov
test
movsb
fimull
add
outsl
loope
xchg
and
call
lcall
and
shr
inc
in
mov
and
cmp
jbe
xor
xchg
add
enter
repz
xchg
call
or
ss
nop
dec
mov
and
pop
cmp
rcrl
dec
pop
dec
icebp
pop
out
cltd
shll
incb
cld
jl
xor
pop
inc
sbb
or
and
push
xor
or
lret
jge
in
mov
xlat
cs
or
jmp
push
retw
and
in
xchg
sub
sub
jo
in
mov
mov
jl
insb
xchg
and
mov
loopne
mov
iret
sbb
adc
cmpsl
pop
out
xchg
inc
jl
jae
jbe
call
or
js
cwtl
loope
test
cmp
xlat
sbb
loopne
jle
xor
es
pop
mov
add
xor
xor
mov
push
mov
shll
aad
rcr
repz
mov
xchg
outsl
jns
outsb
and
push
popf
jo
leave
loope
sbb
xchg
leave
fldt
popa
stc
dec
xlat
mov
push
adc
jl
insb
xor
movsl
fnstenv
or
pop
cmp
mull
add
cmpsb
mov
and
jmp
sub
sub
inc
cmp
scas
insl
popa
stos
les
shlb
xor
pop
mov
dec
jb
jge
add
data16
lahf
xor
fwait
lock
cmp
imul
nop
imul
pop
sbb
sbb
ja
mov
cltd
pop
push
jbe
div
fwait
scas
loop
enter
pop
mov
mov
sahf
cld
test
jno
test
cmp
push
xor
cs
out
pushf
rorb
ret
or
add
cmc
xchg
adc
xchg
pop
repz
adc
lahf
int
pushl
lods
mov
jae
cli
xor
mov
jge
stos
daa
xor
jecxz
fisubs
aad
and
lea
mov
lock
fiadds
mov
mov
mov
scas
dec
scas
cmp
or
test
xor
ss
xor
lods
aaa
in
in
es
roll
enter
and
xor
shrb
out
popf
adc
dec
sub
jge
stos
loop
xchg
out
adc
mov
xchg
jb
frstor
rcrb
xor
add
xchg
in
enter
mov
fsubrp
mov
jbe
scas
inc
cld
pop
jne
jp
dec
stos
subl
xchg
and
jnp
mov
out
xchg
add
jbe
pop
xor
ret
cli
aad
les
and
push
add
jg
cmp
sbb
enter
popa
clc
lahf
mov
jg
imul
or
mov
je
pop
jbe
shll
mov
dec
rcrl
idivl
push
popfw
jle
fwait
inc
stc
jno
adc
xchg
jp
fdivs
xchg
push
int3
mov
dec
push
movsb
pusha
cmpsl
ret
mov
pusha
sub
testl
push
sbb
cmp
mov
jb
test
or
data16
das
in
gs
aad
xchg
push
add
adc
jecxz
cmpsl
ret
pop
pop
mov
popa
jns
fs
bound
fbstp
ss
lcall
mov
mov
cmp
ss
testl
push
push
stc
sbb
xor
gs
and
sbb
daa
mov
add
fstpt
and
imul
daa
outsl
cmp
inc
xchg
cwtl
imul
out
sub
fsubl
jecxz
dec
push
inc
hlt
dec
jae
hlt
sub
cmpsl
pop
mov
jle
pop
jno
ret
sbb
fwait
jbe
test
xchg
mov
addr16
shlb
fs
xchg
add
out
ds
imul
xor
lods
sub
lock
xor
cmc
mov
pop
jbe
adc
mov
sbbl
adc
sbb
or
imul
daa
ja
pop
xor
sub
iret
rcll
jne
jbe
loopne
mov
pop
cmp
cmp
test
enter
inc
inc
push
ljmp
push
subl
and
cmpsl
inc
filds
xchg
push
stos
test
mov
gs
push
or
jge
xor
inc
sarl
pop
insl
jge
rclb
xchg
loope
cmp
mov
lods
lret
outsb
sbbl
inc
jns
je
ljmp
and
roll
fidivl
shll
into
mov
addr16
pop
repz
test
nop
sub
fdivs
dec
pminsw
push
xor
out
test
inc
and
xor
mov
dec
mov
rcrb
jb
fs
dec
popa
dec
push
stos
mov
in
jecxz
mov
div
mov
rcl
aas
cmpsb
lret
jle
fcomps
js
ret
push
push
sub
xchg
adc
inc
xchg
movsl
pop
call
pop
jmp
or
bound
jo
cmpsb
push
inc
loop
jp
pop
shlb
lods
jg
mov
jne
fwait
imul
push
inc
cs
pop
outsl
sbb
dec
arpl
ss
xor
das
push
mov
pop
mov
aam
or
mov
mov
outsl
shrb
or
add
cs
inc
jne
ret
jge
ffreep
jns
aas
jne
loop
call
call
xchg
xor
dec
fildll
inc
loope
fimuls
push
or
int
inc
inc
mov
xor
and
adcl
loopne
mov
sbb
sbb
inc
and
adc
xor
cltd
mov
push
test
pop
repz
push
adc
mov
mov
xchg
popf
cli
xor
jmp
in
mov
cmc
adc
lahf
xchg
imul
push
xor
jmp
sbb
vsubpd
sbb
and
ss
stos
pop
cs
lret
mov
or
mov
pop
or
mov
jnp
imulb
fimuls
int
nop
aaa
mov
cld
add
pushf
inc
push
xchg
pop
jp
or
sbb
xor
incl
inc
pop
push
cmc
or
mov
push
xor
inc
push
popf
mov
xchg
popf
mov
sahf
inc
pop
dec
mov
ljmp
icebp
test
dec
fdivs
dec
pop
mov
pop
das
test
cmpsl
push
sub
pusha
mov
les
test
pop
mov
cmp
adc
outsb
xchg
sbb
dec
outsb
push
shlb
mov
push
mov
cmp
adc
repnz
sub
in
std
clc
fdivl
cmc
push
mov
mov
mov
rcll
push
sub
stos
cmc
sub
fiaddl
addr16
imull
or
xchg
in
inc
lods
in
out
bound
es
je
dec
arpl
or
xor
jns
adc
scas
outsl
fwait
sub
scas
xor
lock
adc
dec
inc
lods
jl
fdiv
pop
movsb
test
enter
push
xor
cmp
pop
mov
cltd
push
movsb
mov
ds
and
adc
pusha
and
insl
stc
cli
mov
rolb
nop
ja
jb
das
dec
mov
add
jno
pop
imul
xchg
icebp
jnp
out
xor
xor
push
popa
or
push
cli
fsubr
cmp
notl
xor
inc
xchg
inc
pushf
dec
sub
mov
pop
pop
jno
aad
or
cmp
push
add
scas
xchg
mov
adc
mov
dec
lahf
xor
inc
cwtl
test
inc
das
addr16
scas
fdiv
fisttpl
ja
shlb
jmp
ret
fdivl
movsl
or
es
pop
xor
cmp
sbb
adc
subl
cld
sbbb
cs
push
adc
jmp
into
xor
xchg
in
dec
hlt
xchg
imul
movd
push
inc
pop
adc
push
and
add
pop
xchg
push
cltd
lds
push
push
outsl
adc
lret
into
stos
mov
imul
out
ljmp
pushf
insl
dec
dec
les
dec
sahf
stos
cmpsl
insl
adc
repnz
stos
fsubl
push
add
xchg
cli
fisttpl
loop
sbb
cltd
and
jne
mov
jnp
mov
les
pop
xor
xlat
das
ret
sbbb
xchg
gs
ja
sub
push
lahf
data16
and
push
lahf
mov
dec
sub
shll
mov
jp
push
cmpsl
aam
or
hlt
mov
cli
adcl
xor
je
inc
mov
sbb
stos
jge
int
lds
adc
fidivrl
mov
and
push
mov
imul
xchg
ret
jbe
popf
jl
or
xor
and
cwtl
aam
fnstsw
mov
popf
dec
mov
push
mov
loop
push
stos
mov
sub
push
cwtl
shll
push
iret
cmp
les
pop
xchg
into
sbb
addr16
cmp
cltd
dec
push
xor
or
cli
push
dec
sub
mov
aam
fiadds
je
loope
std
or
or
and
cltd
sbb
pop
add
lret
sbb
xor
es
out
stc
fwait
mov
inc
fs
cmp
test
mov
xchg
mov
loopne
sub
js
pop
ds
aam
sbbb
neg
push
mov
es
adc
cld
xchg
sub
shll
lcall
data16
cmp
aad
in
jg
shll
sub
popf
lods
adc
faddp
aas
adc
ljmp
movl
dec
test
test
cld
es
out
inc
push
arpl
push
dec
inc
or
pop
push
pop
xchg
and
movsl
dec
testl
mov
enter
mov
scas
lahf
call
inc
data16
daa
imul
mov
decb
hlt
mov
sub
out
aaa
cmpsb
jp
fmuls
pusha
pop
inc
repnz
test
mov
aaa
cwtl
and
xor
mov
js
nop
test
jmp
ss
mov
xchg
mov
jb
sbb
cmp
stos
dec
adc
mov
lret
pop
xor
mov
dec
sbb
pop
mov
push
jle
test
adc
jno
xor
dec
paddq
xor
pop
mov
clc
adc
test
push
lahf
pop
sub
ss
mov
pop
insl
or
cmp
and
inc
cmp
jmp
mov
movsb
bnd
fstpt
mov
ds
int3
jns
arpl
ljmp
cmp
pop
cwtl
dec
mov
leave
loope
out
in
xchg
mov
cli
arpl
mov
mov
loopne
inc
dec
mov
rcrl
rcrb
stc
aam
aad
mov
jae
popf
and
in
insl
lds
jbe
rsm
jle
xor
or
cmp
aam
add
popf
xor
push
lds
mov
pop
jg
jp
cmp
roll
mov
push
dec
dec
fndisi(8087
sbbl
lcall
call
push
fs
adc
mov
push
mov
fstpt
pop
mov
loope
in
xchg
mov
je
xor
mov
or
scas
add
cltd
and
test
ljmp
rol
xchg
sahf
jb
pop
mov
jbe
add
push
scas
push
addr16
sub
mov
inc
fidivs
mov
ror
ret
adc
xchg
scas
mov
mov
jb
call
and
inc
sbb
inc
sbb
test
out
push
fmul
inc
mov
fisubs
call
outsl
dec
addr16
mov
enter
and
add
and
insl
add
movsl
das
je
jmp
test
std
mov
pushf
fidivs
std
adc
fstl
out
dec
pop
inc
adc
dec
sbb
jp
call
cmp
movsb
inc
cmp
mov
pop
and
rorb
out
sbb
xchg
dec
out
insl
in
sbb
stos
mov
xor
dec
xor
insb
pop
push
call
jne
outsl
decb
outsl
push
fimuls
pop
leavew
push
pop
mov
add
xchg
pop
mov
sub
mul
jnp
pop
lds
lcall
pop
call
jp
icebp
mov
sbb
shl
out
loop
add
subb
jae
push
sbb
xor
outsb
es
stos
add
rolb
je
lahf
mov
cmpl
push
mov
jle
jne
iret
or
mov
cmp
stos
inc
adc
les
aas
push
out
and
mov
ficoml
push
subl
and
mov
pop
inc
lcall
lcall
fs
push
mov
shlb
fnsave
ja
inc
sub
xchg
pop
data16
cmp
push
insb
adc
pushf
test
fucomi
mov
outsl
inc
add
mov
xchg
mov
and
rol
inc
mov
xor
dec
jg
xlat
xor
in
cmpsb
roll
cmp
mov
cmp
popa
scas
xor
jns
adcl
xchg
out
lock
pop
lods
pop
rolb
xchg
test
xchg
cltd
adc
mov
xor
js
jne
fcoms
cld
push
vpshufhw
decb
xchg
mov
aam
daa
hlt
adc
mov
incb
add
inc
push
fiadds
lahf
sbb
dec
gs
xchg
mov
cmc
adc
xchg
jae
sahf
xor
test
jp
sub
jmp
jo
repz
jp
inc
pushf
jmp
nopl
sahf
xor
sub
rcrl
clc
enter
outsl
inc
ja
sub
fcomi
mov
jmp
add
pop
pushf
daa
iret
fldt
dec
and
stc
sbb
mov
inc
jl
pop
ds
enter
mov
es
jne
xor
xor
jmp
add
xor
lods
sbbl
jo
xchg
jle
xor
je
cmp
mov
shll
in
into
pop
inc
scas
add
and
sub
ljmp
and
mov
movsl
adc
jb
les
insl
dec
and
clc
jmp
cmp
mov
mov
jo
arpl
out
add
outsb
jl
pop
test
aaa
or
clc
pop
mov
lds
push
lret
sub
and
loop
cmp
scas
mov
nop
lds
fs
lods
xchg
pop
push
pusha
jl
shl
mov
add
jecxz
push
add
or
scas
out
adc
fs
aas
imul
stc
pop
add
and
mov
aas
push
jmp
icebp
enter
push
jmp
xor
repz
addr16
lahf
sub
xchg
sub
es
pop
dec
sub
lods
mov
push
dec
push
sbb
adc
sub
ss
mov
sub
cmp
test
call
pushf
jle
sahf
sub
mov
cld
xlat
cmp
jl
inc
clc
lods
fstpt
fiaddl
xchg
call
xor
in
stos
in
stc
jae
bound
sub
jns
clc
fwait
outsb
out
or
dec
bound
lods
jmp
push
mov
icebp
mov
rolb
xor
sbb
push
push
insb
pop
sbb
sbb
sbb
aam
jecxz
jns
je
movsb
fwait
push
cmp
dec
xor
je
fstpt
jno
int3
lahf
lret
scas
fadds
outsl
and
iret
cwtl
je
mov
cmpsl
notb
xchg
out
or
gs
fwait
xchg
test
notb
lods
fldcw
jmp
add
cmpsl
lock
xchg
lods
fwait
lods
mov
pop
shr
je
xor
and
lret
loop
xchg
jecxz
push
push
stc
mov
cmp
jl
dec
outsb
dec
ror
push
mov
stc
xchg
pop
jne
daa
mov
mov
and
enter
xor
aas
mov
cld
inc
mov
adc
popa
jbe
rol
setb
and
repz
mov
cmpsl
mov
pushf
xor
lods
test
pop
mov
std
jo
pop
loop
rcrl
sbbb
dec
cmp
sub
mov
and
inc
cmp
aad
mov
inc
test
das
insl
xchg
or
jo
xor
shrl
fucomip
cmp
mov
inc
dec
cmp
cmp
pop
sbb
sub
faddl
int
mov
dec
mov
sub
sub
mov
out
dec
lahf
xchg
or
jle
in
movsb
dec
loopew
out
xor
shr
aam
bound
mov
mov
movsb
mov
xchg
jno
loope
decl
sbb
gs
jle
cmp
sub
jmp
mov
stc
xchg
mov
sti
out
sti
fsubr
jnp
inc
sbb
mov
in
imul
cwtl
mov
push
mov
enter
lock
out
test
into
add
mov
lock
stc
fdivrl
jl
push
repnz
cmp
lahf
mov
in
fimull
in
and
mov
sbb
lahf
and
shr
push
cld
shrl
imul
inc
mov
cmp
rcl
adc
sbb
xchg
lcall
in
xchg
cmp
mov
pop
jg
mov
popf
cmpsl
imul
cmp
adc
push
push
in
mov
xchg
bound
xor
and
sbb
enter
cmpb
dec
push
inc
out
mov
das
cmp
jp
mov
sbb
popa
lods
sbb
sub
inc
xor
push
lock
jmp
cmp
and
add
ret
orl
clc
jb
leave
push
xchg
loop
cmpsl
dec
lea
cmc
dec
jbe
cs
frstor
mov
movsb
movsl
jl
scas
mov
mov
inc
jge
sti
or
movsb
inc
mov
das
ret
add
cmc
mov
xchg
jp
subb
sbb
xor
or
mov
inc
sahf
xor
cmp
lret
cmp
mov
inc
and
jle
notl
sub
jns
in
push
fs
mov
aam
xchg
xorl
and
frstor
or
adcl
arpl
notl
iret
jnp
mov
cwtl
dec
xor
int3
cmp
fbld
dec
or
and
sub
dec
push
xor
clc
cmp
stos
push
data16
add
cmc
cmp
in
les
push
testb
or
int3
int
mov
mov
pop
dec
jg
xchg
sbb
sbb
in
sahf
out
je
dec
mov
inc
mov
fcmovu
mov
pushf
ja
popf
call
movb
mov
ret
pushf
cmc
mov
dec
xlat
pop
js
popa
ds
fcompl
rol
jno
aam
leave
scas
shrb
lcall
pop
cwtl
sbb
shlb
ja
cltd
adc
std
nop
test
pushf
push
sbb
sbb
sbb
mov
insb
add
mov
xlat
insl
add
push
ret
ficompl
loopne
mov
mov
in
out
subb
loop
push
sbb
or
cmpsl
mov
lods
push
adc
jbe
movsl
xchg
mov
pushf
lods
jno
movsl
int
ss
cmc
addr16
outsl
cmpsl
push
popf
adc
xor
stos
icebp
movsl
icebp
lcall
sbb
addr16
push
mov
xor
sbb
inc
gs
out
jmp
add
mov
ret
cs
lea
jle
sub
inc
sbbb
lahf
stc
nop
rcrb
and
and
push
and
int3
addb
sti
mov
js
sahf
lret
jne
jnp
test
mov
in
adcl
jno
sub
dec
scas
inc
jnp
adc
inc
shrl
cmp
pop
sub
or
mov
pop
mov
jmp
movsl
inc
mov
mov
push
sbb
mov
in
or
sub
and
xor
stos
mov
outsb
shlb
cmpb
stos
mov
in
ljmp
xor
dec
sub
mov
cld
mov
decl
cltd
sbb
lds
rorl
cld
addr16
mov
xor
mov
jmp
add
adc
mov
arpl
sub
jb
push
push
mov
jo
hlt
xor
mov
repnz
ret
inc
xlat
hlt
xchg
cmp
jae
mov
cmp
out
dec
mov
iret
movsb
sub
mov
fldcw
fsubp
ret
or
mov
mov
mov
ja
sti
pop
out
test
in
test
stos
pop
xor
push
test
mov
in
push
add
test
mov
fdivl
stos
cs
cmpsb
cmp
cld
push
les
les
cmc
jmp
shrb
cmp
sbbb
mov
push
movsl
pop
mov
jmp
sbb
mov
sahf
lock
or
ja
and
clc
jnp
shlb
fdivrl
push
xlat
in
mov
out
shlb
lahf
rolb
ja
fnstsw
je
int
fwait
aas
push
hlt
outsl
adc
lea
push
insb
jecxz
add
cltd
notb
out
das
test
mov
jge
push
mov
pop
pop
pop
adc
into
outsl
leave
fldt
es
sbb
mov
push
sbb
add
mov
pop
adc
dec
cmp
subl
adc
into
js
cmp
rorb
or
test
scas
sub
andb
mov
xchg
lods
pop
fadd
and
jg
fwait
popa
cmc
adc
mov
add
pop
mov
outsl
or
and
mov
mov
jbe
mov
stos
scas
rcr
out
cmpsl
lret
or
inc
incb
stos
out
leave
and
xor
mov
aas
arpl
testb
mov
aam
sub
cmp
adc
adc
out
jb
jne
adcl
mov
iret
mov
insb
addb
enter
cmpsl
mov
cmpsb
std
pop
lods
pop
imul
dec
mov
mov
xchg
popa
inc
xchg
divl
dec
cmp
je
mov
xor
mov
dec
jl
push
in
int
sbb
sbb
mov
ja
adc
push
mov
and
push
pop
pop
ja
xor
or
daa
inc
push
cld
mov
xlat
sub
imull
dec
push
jnp
xor
add
enter
test
out
fisubrs
mov
push
jecxz
xchg
and
sbb
or
or
mov
jl
pop
fwait
xchg
push
comiss
stos
pusha
je,pn
pop
lods
xor
fnstsw
mov
cmpsb
leave
shlb
cld
inc
mov
sbb
lcall
lods
cmp
jmp
sub
push
int3
test
pop
pop
decl
shlb
dec
or
push
fwait
cmpsl
or
test
jbe
inc
mov
jno
aam
push
repz
notl
mov
or
push
fsubrp
mov
and
int
sahf
shl
rorl
les
mov
lea
addr16
sarb
adc
xchg
sbb
xor
in
mov
push
cmpsb
mov
fidivl
jns
das
lahf
sarl
sub
sub
cmp
mov
xchg
pop
daa
lea
jb
loopne
outsl
shll
xchg
mov
out
mov
jp
mov
mov
fsubp
sbb
push
outsl
jge
movsb
pop
fistps
test
in
sub
dec
jb
or
outsb
sbb
jbe
into
sbb
js
or
adc
std
out
scas
push
xlat
xor
push
push
inc
iret
jle
ljmp
cmp
xor
push
es
decb
daa
call
pop
mov
pop
lcall
fbstp
and
lcall
push
fisubrs
iret
mov
call
jns
movsb
push
int3
cwtl
sub
sbb
jmp
sti
xchg
push
lds
iret
shl
repnz
mov
pop
jmp
rcll
inc
aad
shrl
jne
mov
sarb
ss
jb
pusha
movsl
xchg
imul
loope
mov
jae
jae
sbb
pop
jb
mulb
push
dec
cmc
scas
ret
or
adc
je
in
ret
call
lea
or
es
sub
pop
push
xchg
sarb
lods
cmpsb
lock
pushf
sub
dec
push
movsb
imul
lods
ds
les
outsb
call
jbe
xchg
xchg
or
xchg
sub
jmp
push
lcall
push
mov
dec
lock
adc
in
push
data16
sub
popa
mov
sub
test
fstl
jp
shlb
mov
adc
out
pop
push
xchg
cli
mov
jo
imul
mov
mov
roll
add
jns
gs
xchg
sub
xor
cli
xchg
dec
mov
mov
jp
into
stos
lahf
pushf
out
mov
mov
adc
or
je
push
cmpsb
adc
out
xchg
shrb
pop
in
stos
push
jnp
out
sub
negl
les
arpl
idivl
pop
mov
dec
xchg
in
inc
cwtl
xchg
jnp
pop
int
cld
stos
imul
sub
xor
ret
cmpsb
das
pop
jae
add
ljmp
mov
xchg
mov
lods
xchg
in
rcrb
adc
mov
sub
jmp
inc
push
testb
adc
add
jno
and
lahf
ret
sub
ficompl
fsubl
loop
and
mov
pop
sbb
xchg
xor
fstpl
test
and
cwtl
nop
mov
pop
jge
jg
cmpxchg
push
es
sub
pop
or
outsl
cmp
icebp
cmpsb
pop
or
mov
or
ret
fsubs
or
push
leave
mov
cli
popf
das
pusha
es
dec
std
or
jl
add
sbb
jg
mov
aad
pop
icebp
icebp
cmp
xlat
add
add
dec
cmp
aas
pushl
pop
cmp
loope
jl
cmp
outsl
xchg
jmp
rcl
jge
mov
ret
clc
jecxz
bound
xor
sub
lds
jge
lret
cmpsb
std
add
jmp
xchg
inc
xlat
push
push
adc
mov
push
loope
sub
mov
or
fcomi
mov
cmpsl
adc
sbb
sub
push
call
jecxz
and
add
ret
fsubr
push
in
dec
scas
cwtl
mov
xor
inc
insl
inc
pop
out
lahf
int
mov
cs
mov
ja
outsb
jo
lret
push
mov
lock
test
std
cmp
adc
iret
into
add
lods
out
sub
sti
xchg
std
jae
adc
mov
pop
stos
push
rolb
inc
mov
fbld
mov
dec
xchg
inc
pop
add
daa
cs
jnp
rcrb
aaa
fisttpl
pushf
mov
in
call
std
push
lret
test
lret
and
cwtl
xchg
gs
push
inc
out
jns
into
mov
dec
in
ret
lds
jne
add
dec
mov
aad
dec
cltd
pop
scas
mov
mov
cwtl
leave
ret
mov
fwait
shll
add
and
mov
repnz
fimuls
lahf
pop
cmp
lcall
pop
xor
adc
adc
jl
fwait
out
pop
inc
icebp
aaa
loopne
inc
loope
mov
add
push
dec
test
aam
sbb
add
icebp
mov
scas
push
sub
ss
push
imulb
xchg
inc
adc
je
mov
cli
and
sbb
loope
insl
pop
adc
mov
mov
mov
sbb
push
jo
outsl
lcall
cmp
inc
ret
adc
rclb
cmp
mov
cli
pop
stc
cmpsl
add
insl
call
cmp
mov
aad
je
xlat
jg
nop
test
dec
pop
pop
movsl
sbb
pop
ja
jb
enter
in
sbb
pop
popa
cmp
mov
jo
inc
jno
les
mov
adc
cld
jae
push
jge
popa
insl
mov
and
out
sbb
xchg
jl
mov
adc
rorl
xor
mov
jg
mov
loope
mov
xchg
test
nop
mov
scas
jle
adc
std
inc
xchg
bound
stos
mov
sti
std
pop
insl
cs
out
sahf
mov
mov
adc
sbb
jle
cmp
xlat
add
ret
adc
pop
daa
stos
sahf
xor
inc
sarb
push
cmpsl
out
adc
mov
lret
mov
lret
mov
sub
mov
push
lods
adc
and
mov
mov
jo
adc
push
or
mov
insl
pop
negb
fimuls
push
out
mov
fiaddl
std
xchg
xor
ljmp
inc
add
jne
mov
outsb
adc
mov
jecxz
inc
sahf
xchg
mov
adc
inc
pop
insl
pop
xchg
xchg
xchg
cmp
and
xor
js
shll
sub
inc
sahf
dec
fnstsw
repnz
repz
lods
inc
xlat
dec
test
pop
sbb
and
fisubrs
fdivl
fpatan
mov
jmp
daa
cmp
adc
pop
shrb
push
push
dec
lcall
pop
xor
sub
pop
sti
adc
movsl
mov
int3
push
mov
sub
scas
lds
pusha
push
pop
xor
repz
sub
ret
and
pop
icebp
or
sahf
lret
test
mov
cmp
push
sti
cli
aam
dec
pop
dec
cmc
test
lahf
add
mov
lahf
ss
dec
loop
adc
jne
sbb
je
ja
mov
pop
sar
or
inc
lret
in
mov
lahf
sahf
iret
inc
rolb
inc
bound
fptan
mov
and
pop
pop
push
adc
dec
and
jp
fsub
pop
cmp
or
ja
push
and
movsl
cmp
pusha
pop
adc
adc
cmpsb
mov
and
ret
and
dec
inc
outsl
jns
xor
push
xchg
xor
mov
sub
push
aaa
call
mov
push
xchg
pop
sarb
mov
cmpsb
pop
mov
loopne
sbb
stos
pop
sub
gs
int
loop
repz
mov
xchg
push
or
data16
fdivs
loope
sbb
cmc
test
sbb
das
cmp
aaa
sbb
sahf
sbb
xor
jmp
fs
cld
or
cltd
jmp
lret
std
sbb
sbb
mov
fwait
aaa
scas
rcr
icebp
mov
std
mov
out
stos
sbb
or
xchg
pop
in
enter
sub
xchg
add
out
mov
pusha
inc
lahf
sbb
inc
iret
mov
dec
in
adc
or
enter
bound
push
or
lods
or
sbb
push
inc
lock
lahf
imul
xchg
jg
je
in
pop
xor
ja
inc
fisubrs
pop
lods
fisttpll
push
sub
rcrl
data16
or
mov
arpl
jl
sbb
dec
jo
mov
push
stos
in
orl
sub
aam
or
lret
and
pushf
enter
push
sub
and
push
push
movsl
mov
push
in
cmpsl
cmp
push
mov
out
mov
inc
adc
scas
inc
xor
fnstcw
mov
nop
enter
and
mov
leave
dec
shl
mov
sbb
inc
test
xor
mov
xchg
les
pop
xor
pop
and
inc
loopne
fs
lcall
jmp
or
and
loopne
inc
in
test
arpl
sbb
call
jp
sub
add
inc
sahf
jecxz
or
insl
pop
xor
movsl
adc
lcall
add
sti
pop
jle
xlat
popa
hlt
divl
pop
ds
xchg
shll
idivb
imull
fptan
cmp
add
adc
xor
data16
cs
inc
popa
push
and
paddusb
dec
xchg
inc
and
cs
jmp
push
add
icebp
pop
adc
ja
daa
add
add
push
xchg
mov
les
js
sbb
rcl
test
sbb
cmp
inc
adc
adc
push
test
and
jbe
jecxz
or
icebp
xchg
insl
push
pushf
xor
fistpll
inc
mov
fimull
mov
test
mov
in
or
mov
push
jo
shll
lret
insl
clc
mov
xor
je
mov
adc
inc
mov
sub
jbe
mov
std
xchg
mov
int3
mov
pop
sbb
mov
loope
xchg
stos
mov
push
mov
int3
mov
hlt
push
mov
push
es
or
mov
jns
xchg
ljmp
adc
jo
popf
lods
lods
or
sub
or
mov
xor
sbb
and
push
adc
jecxz
mov
icebp
dec
push
inc
inc
mov
das
inc
scas
push
xor
cmp
inc
xor
fcoml
mull
inc
imul
div
push
scas
mov
sahf
jbe
mov
fsubrl
das
shrb
adc
inc
pop
xchg
pop
jle
ljmp
popf
mov
adc
jmp
clc
mov
sub
xor
push
dec
stos
inc
jge
lock
and
mov
fwait
int3
pusha
and
mov
cmpsl
mov
lods
push
movsl
jne
data16
xchg
insl
ljmp
lock
mov
pop
xor
add
push
mov
add
xchg
push
cmp
inc
pushf
jmp
aaa
sbb
dec
pop
rcl
outsl
mov
test
jl
icebp
out
loop
or
mov
pusha
inc
xor
xor
push
test
xchg
push
push
and
fnsave
push
push
popa
imul
and
in
addr16
hlt
dec
xorl
insl
add
sbb
dec
jnp
mov
jb
movsb
jns
xchg
adc
fistps
popf
jb
lock
fmull
push
clc
inc
push
cmp
out
fcoms
ds
jmp
cmp
movups
clc
cmp
xor
fisttpll
stos
push
jmp
sub
jno
jl
sbb
movsb
cmc
ss
daa
movb
push
fsubrs
adc
add
or
mov
xchg
sub
cwtl
jae
inc
add
inc
fwait
sarb
or
enter
out
pop
popa
arpl
clc
ja
mov
or
adc
push
arpl
lcall
mov
or
jno
clc
je
or
pop
in
fsub
jmp
flds
mov
sub
push
lock
pop
jmp
xor
push
dec
sbb
adc
mov
inc
inc
adc
sbb
shrb
push
call
loopne
ljmp
imul
cmpsl
mov
dec
xchg
fistps
mov
push
scas
push
popa
inc
roll
cvtps2pd
psllq
sub
and
dec
push
bswap
in
dec
inc
fidivrs
mov
daa
mov
push
shlb
hlt
shlb
movsb
loope
or
dec
add
loop
scas
adc
repz
outsb
idivb
daa
xor
in
pop
xchg
cld
or
lret
sahf
pop
jo
out
sub
and
loopnew
aam
inc
lods
mov
bound
inc
cmp
fs
lods
lds
add
lcall
inc
outsb
outsb
push
push
jne
sub
aas
xchg
cmc
xor
xor
shll
clc
lahf
jbe
cmp
pop
jg
aad
mov
fadds
mov
cltd
jge
shlb
dec
daa
cmpl
inc
xchg
das
jl
fdivl
aad
and
jle
pop
pushf
repnz
mov
rolb
popa
cmp
jle
cmp
pop
push
sti
hlt
mov
fucom
adc
das
rcrb
scas
inc
cmp
jne
jecxz
outsl
lcall
xlat
data16
xchg
dec
aam
xor
insl
or
testl
pop
into
stos
imul
and
inc
push
xchg
lret
testb
xchg
inc
add
fdivrl
push
mov
cli
lea
push
mov
push
add
xchg
sub
es
enter
shrl
int3
fistl
out
sti
mov
cmp
sti
fidivs
andb
test
mov
test
leave
and
pop
in
jmp
cmpsl
add
add
push
aas
or
divb
mov
or
pop
jbe
addr16
adc
inc
fs
movsb
mov
fbld
push
sub
cmp
xchg
mov
ds
data16
push
fsubrl
bound
or
outsb
mull
sti
pushf
sub
popf
inc
mov
ljmp
lret
out
test
cli
pop
in
or
cmpsl
lret
pop
insb
incb
jno
xor
pop
xor
data16
icebp
push
fsubs
mov
fdivrl
adc
sbb
fsubs
ss
or
lds
push
jmp
lods
adc
outsl
hlt
push
fisubs
aaa
mov
mov
mov
inc
mov
mov
inc
or
and
clc
mov
mov
shl
and
lcall
out
xor
out
inc
das
ds
mov
or
not
call
test
movsl
and
fidivs
aad
out
popa
ja
jp
nop
mov
roll
dec
sbb
xchg
gs
stos
lret
push
cltd
je
jmp
rcll
fdivrl
cld
pop
sbb
or
sub
sti
mov
dec
imul
mov
pop
movd
fsubr
pushf
jg
inc
adc
js
mov
push
cmpsb
popa
inc
cmpps
mov
push
dec
mov
shrl
sti
nop
cmc
cmp
adc
fs
push
clc
lret
and
js
fs
iret
and
mov
pop
popf
xor
movsb
jmp
daa
mov
sub
popl
add
mov
jo
jp
loop
xchg
rclb
add
mov
cmp
xchg
data16
out
mov
mov
jno
nop
std
xor
cs
arpl
mov
jo
ja
mov
pop
adcb
aam
cltd
sbb
and
sbb
test
subl
add
out
add
jg
xchg
pop
xor
sbbl
lret
jmp
lret
ret
movaps
dec
jg
jle
jp
in
pop
and
into
cmp
int
or
loopne
fcomi
lahf
push
dec
or
pop
inc
daa
or
repnz
sub
or
in
cmpsb
lahf
inc
or
into
cmp
inc
xor
xchg
xchg
adc
loope
mov
pop
aam
loopne
mov
pop
lea
pop
sub
popf
lret
cld
push
pop
lahf
ss
jg
push
jecxz
pop
push
ret
repz
cli
xchg
insl
lods
mov
mov
or
ljmp
sbb
orb
inc
sub
rcrl
fdiv
es
pop
je
inc
xchg
sub
or
push
les
jnp
hlt
sarb
sti
pop
sub
loope
fdiv
cmp
sti
xchg
mov
dec
xrelease
xor
sub
push
jle
cltd
adc
lret
ljmp
insb
add
cmp
lock
movsl
push
sbb
fistpll
push
aas
jbe
loop
aad
lahf
push
pop
lock
and
cld
xor
mov
jbe
ret
shl
mov
pop
scas
jae
add
aam
dec
push
popa
sbb
fwait
jno
scas
mov
dec
inc
push
jbe
cmp
mov
fcomps
cmpsl
mov
fucomp
cli
cli
adc
xor
adc
sub
js
pop
sub
into
xchg
mov
out
pop
outsl
fwait
outsb
sbb
movsl
jo
ljmp
and
fs
divl
xlat
scas
inc
push
adc
cwtl
cmp
in
lss
pop
pop
insb
inc
xchg
pop
jae
test
jne
mov
mov
gs
fcoms
insl
imul
aam
mov
sbb
xchg
mov
scas
fstps
mov
shlb
push
lods
mov
imul
sub
xchg
xor
push
mov
shlb
pop
pop
repz
daa
ret
mov
fldl
sbbb
push
adc
clc
sbb
push
aas
mov
test
inc
pusha
mov
iret
lods
cmp
cmp
fstpl
les
cld
loop
in
loop
jns
xchg
sub
loop
cmp
inc
rcl
insl
shrl
ja
aaa
jbe
popf
xor
scas
mov
pop
out
mov
jecxz
loop
xchg
into
aaa
adc
and
mov
mov
jbe
ja
xchg
das
rclb
in
push
cltd
push
sub
pusha
push
push
mov
addr16
mov
jae
out
in
nop
xchg
or
jo
jb
xlat
aaa
jecxz
adc
dec
add
mov
aas
inc
out
shrl
fs
sbb
mov
cmp
fldt
sbb
repnz
loope
rcll
dec
or
int3
and
mov
fisttpll
mov
es
dec
jae
jg
lcall
push
pushf
jns
xchg
or
adc
test
cmpsb
inc
and
xchg
push
aas
push
out
sbb
out
sub
and
nop
hlt
fisttps
mov
jae
dec
popf
dec
popf
add
cld
lret
push
dec
push
in
fimuls
lret
sub
cld
dec
rolb
in
mov
adc
orb
and
jns
pusha
test
mov
fnstcw
push
fidivl
popa
cmp
faddl
loope
add
mov
jl
shr
das
inc
stc
in
push
push
rcrl
pop
push
xor
pop
sub
mov
xchg
scas
fs
dec
mov
inc
call
add
dec
scas
or
mov
and
push
fucom
rclb
in
mov
fidivl
ss
fldt
fisttpl
mov
jle
adc
sub
inc
fs
cmp
outsb
xchg
mov
xchg
pop
add
lods
push
jecxz
add
xor
inc
scas
dec
and
xchg
sub
in
sub
pop
mov
push
fcomip
or
inc
dec
fdivs
clc
cmp
in
jge
push
std
pop
xchg
cmp
or
inc
ss
addr16
loopne
cmpl
lret
lods
out
cmc
lds
pop
lds
testl
in
cmp
pushf
jle
add
es
add
and
leave
je
icebp
nop
push
push
stos
cmp
mov
jo
cmp
sub
gs
jnp
push
enter
pushf
dec
mov
pop
ljmp
js
mov
scas
mov
sub
add
mov
add
es
enter
loope
jae
sub
mov
dec
mov
adcb
fwait
inc
cmp
xchg
push
mov
aas
pop
sub
push
mov
es
loopne
sbb
jmp
mov
cs
ss
adc
sbb
int
mov
push
xchg
mov
dec
push
sub
or
jnp
jmp
mov
testl
rcr
push
adc
int3
pop
cmp
std
loope
inc
test
jmp
ret
xor
loope
adc
fidivrl
push
sbb
and
mov
lods
push
leave
mov
add
cmp
notl
push
stc
mov
aaa
mov
leave
jno
and
jnp
in
bound
pop
out
jno
mov
subb
je
inc
cmpsb
adc
popf
nop
enter
clc
popf
xor
pop
rsm
push
out
mov
sub
icebp
sti
imul
aas
mov
jno
ja
sbb
aad
mov
mov
outsl
insb
push
inc
lds
inc
aaa
jge
mov
pushf
loopne
mov
add
test
aam
out
test
push
xchg
leave
sti
rcll
rol
insl
sti
jns
xchg
orl
xor
ja
sbb
lea
movsb
xchg
sbb
pop
mov
mov
mov
pop
xchg
cmp
lea
pop
xchg
adcb
fcomps
xor
stos
cmpsb
mov
pop
and
mov
add
lea
inc
or
imul
pop
pop
xor
mulb
les
sti
mov
out
stc
shrl
add
sub
push
sub
sub
or
movsb
sub
mov
dec
inc
pusha
hlt
pop
call
jle
mov
add
xchg
dec
je
aam
cltd
sbb
sub
shlb
sahf
xchg
rclb
pop
cmc
and
ret
stos
push
std
pop
mov
sahf
mov
cmpsl
and
shl
xchg
sar
sbbl
or
mov
out
push
out
or
pop
leave
sbb
loope
leave
je
pop
jae
push
out
xchg
sbb
shll
outsl
sarb
call
stc
shr
cs
xor
pushf
cmpsb
pop
jmp
mov
pop
cmp
nop
rorb
push
xor
popa
fmull
xchg
sti
pop
lret
cmpsb
inc
xlat
mov
add
int3
dec
inc
or
lret
lret
ljmp
aad
das
or
cmpsl
cld
and
or
rep
adc
fists
cmc
iret
in
in
jl
gs
in
icebp
jnp
xor
inc
sahf
mov
mov
cmpsl
pop
stos
dec
xchg
imul
push
mov
mov
push
mov
push
movsb
gs
pop
lock
sub
inc
xor
xor
stos
movsl
cmp
pushf
inc
mov
loop
inc
fwait
lock
lock
je
add
mov
pop
pop
lock
mov
jle
xor
inc
jo
cmp
fisubrl
add
jge
xor
rolb
jl
adc
into
mov
test
nop
jbe
jle
insl
sbbl
sbb
xchg
jns
cwtl
jle
lcall
lods
pop
aaa
or
adc
adc
push
cmpsl
nop
lds
inc
inc
inc
mov
sub
xor
dec
cmp
stos
mov
sub
xor
cltd
and
jno
fldl
sub
aaa
add
sub
adcb
popa
pop
cld
jbe
sbb
adc
jnp
je
cmp
popf
sbbl
loop
cwtl
sar
and
stos
sub
shlb
scas
mov
sub
cmp
enter
push
jmp
shlb
adc
push
hlt
sub
inc
adc
in
xor
ficoml
mov
pop
mov
js
das
mov
dec
ss
xchg
daa
cmp
aad
scas
cmp
sub
inc
shrb
addr16
xlat
lods
sub
mov
lds
cli
dec
push
pop
movsb
pop
and
cltd
out
and
jge
pop
in
incl
nop
mov
adc
xchg
iret
jp
cmpl
jecxz
or
inc
and
call
cmp
popf
mov
fadd
in
mov
jg
repnz
fdivrs
xchg
je
and
test
notrack
lret
mov
fisttpl
stc
pusha
out
lock
in
xlat
jmp
mov
stc
outsl
add
das
add
xchg
push
add
push
push
and
pop
fwait
dec
stos
rolb
icebp
ja
mov
cwtl
cwtl
js
into
adc
out
pusha
pop
mov
xchg
cmp
bound
fistpl
xchg
adc
push
outsl
leave
je
js
push
stos
xor
fiadds
adc
cmc
fwait
sbb
inc
jmp
mov
data16
push
cmc
sbb
cmp
mov
pusha
mov
push
out
imul
popf
iret
push
popf
jl
mov
into
pextrw
fs
test
adc
hlt
int
pop
out
inc
sar
je
cs
lret
and
lcall
xchg
icebp
inc
jb
leave
int
scas
cmp
ljmp
js
xchg
mov
test
iret
fwait
push
fdivrl
add
arpl
jp
xchg
call
test
add
jp
pushf
pusha
xorb
cmp
jge
popf
fldt
lods
je
lock
mov
add
stos
add
sub
mov
stc
cmova
dec
jns
sbbl
adc
add
adc
pop
xchg
jae
pop
movsl
mov
shll
imul
jbe
int3
test
and
sbb
daa
jp
or
pushf
pop
stos
jmp
movsl
sbb
and
add
jle
pop
mov
ret
push
add
orb
mov
jecxz
push
xchg
test
out
push
daa
fsubrp
pop
cltd
arpl
inc
dec
inc
push
inc
lret
enter
xchg
jmp
and
mov
pop
mov
inc
rolb
or
out
nop
add
mov
jno
cmp
aad
sbb
fadd
cmp
stos
dec
mov
adc
mov
push
incb
and
push
add
movsb
repnz
pop
add
xchg
call
dec
cltd
test
icebp
sbb
jmp
aaa
or
out
outsl
repnz
inc
jns
dec
sbb
or
sbb
mov
std
cmp
inc
es
push
push
jno
scas
jno
je
stos
das
adc
dec
jnp
adcl
out
dec
xlat
int
das
test
arpl
pop
lcall
push
or
dec
pop
and
xchg
bswap
cmp
cmp
adc
dec
sub
pop
je
jp
icebp
lods
xchg
xor
adcl
leave
mov
sbb
sub
addr16
mov
jne
stos
shl
movsl
pop
jne
mull
test
mov
or
dec
ljmp
xor
sbb
pop
xchg
sub
mov
xchg
ja
mov
lret
pop
jb
outsb
push
inc
push
inc
cmp
jae
fbstp
dec
pop
mov
std
push
loope
addr16
dec
inc
imul
cmp
insb
jae
jp
or
jne
insl
orb
cs
jnp
mov
pop
mov
cs
mov
roll
or
shld
mov
xchg
or
insb
rol
cmp
xor
jo
mov
ret
mov
xchg
scas
insl
adc
imul
push
add
lcall
cltd
dec
jb
dec
aaa
icebp
inc
or
add
je
xlat
sub
jae
jbe
cmp
pop
cs
pop
push
jb
fnstcw
mov
iret
mov
and
and
les
pop
add
adc
fildll
xor
daa
iret
stos
and
and
xor
xchg
or
xchg
cmp
fdiv
sbb
mov
sub
xor
rcrb
lea
dec
adc
jo
jno
ja
xor
loop
sbb
movsl
sub
or
out
bndstx
pop
in
or
pop
out
test
insl
stc
xor
dec
jecxz
test
push
outsb
cs
shlb
orb
and
and
inc
mov
jbe
mov
into
fwait
push
sbb
idivl
int3
jns
stc
adc
pop
shrl
or
lcall
cwtl
fs
shll
shr
and
call
pop
stc
nop
dec
into
inc
scas
jl
notb
pusha
mov
push
ljmp
outsl
cmp
ret
hlt
in
cmp
sbb
xchg
xorl
jbe
icebp
lods
cli
stos
xor
mov
pop
ret
dec
xor
lret
pop
and
mov
cmc
mov
cld
ret
pop
enter
jo
cmp
leave
xchg
pop
fwait
dec
sarb
mov
cmp
jae
cmp
out
jmp
inc
or
xlat
xchg
dec
cmp
sub
add
mov
popa
outsl
push
jp
ret
das
jp
and
sbb
test
cmpsb
and
push
push
insb
pushf
jno
rcl
and
sbb
pusha
sbbb
es
repz
in
xor
pop
xor
and
mov
rcrl
divl
adc
and
fnstenv
andl
or
mov
mov
sahf
xor
adc
dec
leave
orb
out
or
inc
push
out
aad
popa
jg
aas
hlt
dec
call
addb
cmpsb
mov
mov
sarl
fcmovne
hlt
cmpsl
or
mov
sbb
subl
lods
push
out
sbb
lock
fdiv
push
movsb
lock
lret
adc
into
and
push
or
and
shlb
andb
movzbl
in
hlt
stos
mov
and
inc
insl
insl
dec
fcomps
shrl
cmp
jae
pushf
pusha
jl
inc
jg
cmpb
in
sub
testb
into
leave
push
movsl
push
xor
popa
mov
add
inc
pusha
or
repnz
loope
xchg
cs
loope
pop
repz
in
inc
ret
hlt
test
pop
mov
jl
imul
mov
stos
mov
and
fmuls
cmc
jl
out
loopne
adc
lret
daa
into
bound
push
push
js
movsl
inc
imul
daa
scas
xchg
loope
mov
pop
mov
in
ret
aaa
add
inc
xor
xor
jns
cmp
lea
inc
pop
xchg
jnp
frstor
jbe
pop
loope
int3
std
mov
out
movb
lods
into
ljmp
sub
dec
pop
mov
movsl
add
xchg
push
popa
fsubrs
mov
fldt
inc
pop
mov
jmp
test
jl
pop
out
out
cltd
jmp
ss
dec
xlat
cwtl
pop
mov
lcall
inc
mov
xor
fiaddl
inc
jns
lahf
ss
sahf
int
dec
push
leave
loope
pop
popa
add
shr
mov
ds
aaa
push
cmp
xchg
leave
fpatan
mov
out
mov
fmuls
sbb
insb
into
ficompl
xchg
push
popf
hlt
adc
sub
push
outsl
cli
dec
rcrb
and
mov
out
popf
sbb
push
pop
cwtl
pop
popa
mov
repnz
das
rcrl
into
rorb
mov
push
mov
sbb
out
les
mov
call
lea
aaa
xor
cld
lret
in
insl
jg
cmpsl
cld
push
lds
cmp
cmp
mov
mov
jns
sarl
dec
addr16
ficomps
push
adc
mov
fiadds
mov
mov
or
inc
test
lret
movsl
leave
flds
fwait
and
std
les
add
push
xchg
in
xor
push
adc
jbe
daa
cmp
add
call
xchg
sub
sub
shlb
out
stos
pop
cmpsl
or
cwtl
arpl
rcll
sbb
and
push
dec
popa
iret
call
and
in
or
dec
sahf
and
cmpsb
xor
pusha
xor
inc
add
sbb
out
in
sbb
inc
nop
xor
adc
out
mov
scas
mov
xor
jge
in
fsubs
push
xlat
clc
fstps
adc
aam
xchg
lods
stos
test
sub
and
into
shr
lods
mov
and
mov
inc
into
mov
mov
add
sti
xchg
push
ds
inc
jo
sbb
mov
loopne
inc
dec
cmpsl
ret
gs
jmp
cmpsl
or
adcl
adc
pop
decl
inc
jne
xor
xor
inc
rolb
aam
xchg
pop
insl
stc
les
cmp
stos
ffreep
pop
xchg
mov
daa
outsb
mov
mov
lret
jle
std
mov
adc
add
mov
cmc
hlt
mov
jmp
in
mov
pop
inc
jecxz
enter
out
mov
shl
sbb
jle
adc
mov
out
cmp
adc
std
test
addr16
stos
inc
adc
imul
mov
cli
out
mov
ss
and
int3
mov
iret
jbe
adc
decl
mov
and
arpl
insb
and
sbb
add
or
adc
sahf
mov
dec
cmp
stos
push
and
test
push
sar
punpckhbw
jnp
pop
scas
out
pushf
cwtl
idiv
test
cltd
dec
and
cltd
push
imul
cwtl
jle
outsb
mov
aaa
loope
mov
mov
adc
and
push
mov
or
push
lretw
push
imul
push
je
arpl
adc
enter
jl
inc
mov
xchg
mov
scas
inc
movl
cmc
loop
mov
push
out
jbe
ss
arpl
push
and
add
jmp
dec
and
sbb
gs
inc
ja
xchg
popa
inc
pop
xchg
repnz
lods
mov
lcall
add
pop
sbb
xchg
test
and
das
push
adc
xor
or
jnp
sub
push
ljmp
rclb
push
repz
iret
fdivp
add
jg
mov
fisttpl
mov
popa
aaa
sbb
addl
mov
ficompl
and
add
out
out
mov
movsl
cs
mov
gs
jb
mov
lea
int3
test
pop
inc
in
cmpl
and
xchg
call
push
js
aas
jo
je
btr
pushf
addb
cmp
lret
jno
inc
shrl
aaa
aad
data16
leave
in
xor
out
fwait
stos
cmp
push
outsb
roll
aas
adc
fs
cmp
pop
dec
sub
add
sti
testl
cmpl
lds
jmp
cltd
cld
xchg
lret
xchg
test
cmp
enter
jae
xor
xchg
popa
push
adc
jmp
cmp
imul
cmp
push
ret
sbb
cmp
insl
and
test
fs
mov
mov
cmp
movsl
ja
cmpsb
outsb
clc
xchg
test
mov
das
jbe
les
sysexit
adc
mov
push
insl
or
adc
mov
xor
dec
mov
aaa
xchg
pop
add
adc
mov
ficoms
int
fs
test
sub
jb
pushf
scas
sub
xor
adc
inc
sbb
jp
insl
adc
sbb
stos
cmp
mov
ss
pop
or
push
ja
push
outsb
rcr
push
outsb
clc
push
je
add
and
mov
xchg
inc
fnop
hlt
jnp
fmulp
cwtl
push
jmp
lahf
subb
in
mov
add
popl
lahf
pop
adc
inc
jbe
or
adc
xchg
sahf
jo
das
push
push
cmp
js
mov
sub
cld
xlat
jg
dec
fstps
gs
in
lret
enter
lcall
sbb
out
xchg
xchg
dec
push
loop
cmp
fwait
inc
leave
or
imul
in
jne
push
lret
push
out
adc
sbb
dec
push
cmp
inc
push
pop
jle
fcomps
js
cmp
xor
and
scas
inc
pop
imul
out
sbb
in
bound
arpl
sarl
pop
and
sbb
xchg
and
mov
out
into
xchg
loope
add
or
cwtl
jo
xchg
sub
andl
cmc
jno
and
popa
jns
dec
out
test
and
xchg
push
xchg
sub
mov
mov
xchg
fadds
pop
clc
cmc
fisubrs
pop
pop
sub
push
pop
out
or
cmp
mov
push
jmp
fildl
or
insb
cmp
je
dec
sub
int
jge
push
lock
ds
sbb
pusha
pushf
hlt
sbb
icebp
xchg
ficoms
stos
je
pop
sti
roll
ret
jge
ror
cmp
and
add
sti
lret
hlt
in
bound
or
enter
loopne
jp
scas
stos
cmp
inc
pop
adc
mov
sbb
in
push
mov
adc
dec
add
es
pushf
daa
sub
je
sub
mov
xor
push
mov
mov
shll
mov
in
lods
inc
xchg
add
popa
jp
shl
mov
xchg
out
ret
and
je
repnz
xor
daa
pop
out
mov
sti
jns
mov
sub
test
mov
adc
mov
lods
inc
rol
mov
xchg
lret
and
outsb
add
fisubrl
ror
arpl
xor
rcrb
aad
clc
iret
hlt
repz
out
push
or
mulb
adc
cmp
dec
pusha
xor
cmpsb
rcrl
ds
cmpsl
repnz
jmp
or
nop
das
arpl
loop
cld
js
shrb
adc
mov
fwait
lret
nop
iret
pop
lods
sub
mov
jmp
cmpl
lahf
cmc
adc
ljmp
mov
scas
ret
jb
in
in
xchg
stos
fsubrs
inc
bound
push
cmp
mov
xchg
testl
pop
dec
out
std
xchg
out
roll
mov
xchg
adc
xchg
jge
out
ret
pop
cwtl
iret
mov
push
lock
mov
nop
loope
sub
movb
pop
mov
lret
and
push
lods
repnz
imul
sbbl
lret
sub
push
fxch
fisubs
mov
das
cmp
loopne
mov
add
loop
push
loopne
inc
loope
mov
mov
push
jmp
mov
jb
mov
iret
aad
popa
pop
push
jno
mov
cmpsl
jp
stos
inc
lret
aam
jo
push
inc
pop
bnd
push
xchg
daa
cs
sbb
push
add
adc
inc
sbb
dec
xchg
je
fisubrs
nop
mov
inc
rclb
mov
arpl
jmp
xorl
and
mov
xchg
xchg
pusha
dec
adcl
negl
rolb
dec
test
inc
inc
loop
add
add
arpl
rcll
popa
pop
sti
fdivrs
or
or
data16
xor
mov
sbb
clc
dec
push
pop
push
popl
xchg
mov
aaa
jns
jo
stos
scas
stc
popf
push
or
aaa
mov
fistpll
stc
cs
fnstenv
lods
cmp
mov
and
push
jbe
mov
xchg
inc
stos
ret
lret
mov
pushf
cmpsl
cmp
insb
adc
mov
test
sbb
mov
test
pop
xchg
adc
mov
cli
xchg
fisubrl
lods
lahf
sti
sbb
in
arpl
ror
push
pushf
push
pop
jbe
cmpsb
in
pop
lods
pop
scas
dec
jno
or
add
in
lcall
fdivl
into
or
xchg
aam
in
or
push
lock
add
insb
xchg
arpl
mov
sub
cmp
xor
pop
jo
cli
adc
movsb
or
xchg
pop
or
into
cmpsb
add
test
sbb
sub
insb
cmpsl
ds
into
test
jg
aas
es
adc
or
push
inc
outsb
sub
iret
adc
aad
adc
movl
pop
lods
subl
mov
jno
lods
fwait
sbb
inc
fld
xchg
mov
add
mov
and
lret
mov
pop
std
aad
into
ret
inc
and
adc
mov
jecxz
aaa
into
mov
ficoms
dec
pop
cmp
fcoml
jge
movsb
test
push
stos
cli
push
mov
dec
filds
jb
cmp
mov
scas
fstpl
dec
dec
leave
popa
out
jmp
jg
inc
cmpsb
cmpsl
ret
cmc
inc
jne
lds
out
fs
push
mov
mov
cmp
sarb
movsb
xchg
outsl
out
cmpsb
jp
cmp
rol
pop
lcall
mov
dec
and
mov
ror
cmpsl
js
adc
jmp
test
sub
dec
leave
int3
xor
jmp
and
outsl
mov
cltd
loopne
lds
inc
pop
mov
xor
scas
mov
nop
test
mov
jl
xchg
stos
cli
push
leave
sti
push
outsl
xor
jmp
icebp
dec
mov
ds
cmpl
pop
rclb
xchg
in
loopne
stos
pop
pop
and
mov
dec
ss
orl
stos
ret
pop
push
push
mov
inc
insl
mov
addr16
or
dec
pop
movsl
imul
jns
cmp
loop
int3
int3
mov
jno
push
outsb
ss
inc
xor
jge
mov
adc
mov
pushf
adc
push
ljmp
cltd
vcmppd
repnz
bndstx
sub
cmp
cli
fisubrl
inc
xchg
adcb
push
shrb
out
arpl
push
mulb
push
sahf
insb
fisubs
push
mov
push
mov
jle
xor
mov
or
xor
cmc
xor
loope
jg
stos
daa
push
mov
iret
jbe
or
out
sub
ja
mov
mov
lods
int3
test
mov
adc
jnp
lock
movsl
xor
jno
dec
leave
push
test
stc
or
sti
movsb
cmp
leave
int
cli
xchg
ret
and
jl
and
pop
xchg
ds
sbb
fisubrl
out
jp
in
std
jl
cmp
pop
movsb
std
insb
out
cmp
es
xor
sub
pop
outsb
dec
dec
loopne
repz
jmp
xchg
dec
pop
lods
idivl
or
and
ja
icebp
shlb
fucomp
test
scas
clc
xchg
das
push
setne
sarl
push
xor
sub
jl
sbb
inc
cltd
lahf
cmp
mov
int3
mov
push
sbb
dec
mov
mov
mov
dec
into
and
push
les
retw
jecxz
stc
loopne
xor
xchg
and
mov
lcall
cli
or
pop
inc
or
insl
loopne
dec
loope
xchg
test
push
scas
lds
add
addr16
adc
fldt
out
jl
mov
xchg
adc
arpl
jne
and
xchg
push
cmpsb
and
or
sbb
test
lret
jmp
es
jle
lds
sbb
rolb
cmpsb
fmull
inc
mov
fs
je
cmp
sbbb
push
pop
push
push
xchg
xchg
mov
test
mov
or
mov
loopne
mov
push
lahf
add
adc
in
call
gs
xor
in
incb
lahf
push
pop
push
les
enter
outsl
push
jae
pop
inc
out
inc
aas
push
je
out
movsl
sbb
xor
push
imul
push
sbb
notl
inc
lods
test
jbe
push
mov
mov
pop
lods
mov
inc
cs
out
jbe
test
dec
or
add
lcall
mov
sarl
and
push
jnp
movsb
and
xchg
flds
aam
sbb
pop
cmp
inc
aam
and
push
jp
push
rcrl
mov
xchg
in
cli
jp
push
pop
inc
popa
mov
push
inc
cld
cmp
mov
in
pop
dec
and
pop
scas
arpl
mov
cltd
mov
in
in
into
outsl
mov
push
out
mov
sub
loope
mov
mov
xor
imul
add
sub
insl
adc
jne
notb
fimull
sbb
les
fstpt
mov
cmp
push
lds
xchg
dec
in
cmpsb
cwtl
insb
mov
xor
xor
lods
xchg
jle
xor
cmc
mov
fdivrp
inc
cmp
cmp
mov
arpl
test
sub
mov
sahf
cmpsl
cs
scas
fldenv
jle
push
sahf
in
cld
iret
aas
jb
jl
inc
add
enter
cmp
sbb
lahf
mov
inc
jno
sbb
mov
mov
pop
shll
idivb
inc
sub
test
adc
xchg
xchg
lock
adc
in
leave
mov
arpl
dec
out
jae
cs
bound
cli
xchg
data16
and
jne
inc
xor
cs
ror
mov
mov
shll
stc
jle
mov
push
cli
ret
inc
test
mov
sbb
fbld
js
aam
bound
in
push
aas
mov
gs
dec
int3
or
mov
aaa
into
in
xchg
jmp
shlb
xor
and
pop
mov
adc
pop
mov
rcll
shrl
pop
jns
lret
imul
xchg
adc
sbbl
inc
fcmovnu
pop
ljmp
icebp
dec
loop
in
inc
fsub
sahf
sbbl
adc
ljmp
fistps
int
mov
fs
or
rol
enter
cmpsb
divl
aad
cmpsl
jb
xchg
arpl
jl
xchg
in
dec
fcomps
mov
fidivs
sbb
mov
es
dec
outsl
push
cmp
roll
pushf
adc
xor
jl
mov
dec
and
mov
cwtl
insl
cli
xlat
cmp
inc
pop
jnp
popf
lods
fmull
mov
enter
psrad
in
sub
mov
fucomi
inc
insl
lret
outsb
mov
mov
mov
loopw
stc
popf
bound
jmp
mov
adc
hlt
iret
cmp
lds
and
shrl
stos
dec
cmp
ficomps
ret
cltd
popa
and
jo
aad
mov
add
add
fwait
and
iret
sub
jbe
sarl
cs
adc
or
lahf
stos
sbb
aaa
insl
mov
mov
xor
or
add
shll
add
movsb
dec
sub
inc
sbb
fs
fmull
cltd
cld
cli
cli
or
in
std
rcll
loopne
lret
lret
jp
xchg
sbb
sbb
fwait
mov
nop
fisubrs
xchg
adcl
testl
mov
stos
test
fstps
dec
mov
imul
mov
stc
cld
lcall
dec
sbb
jbe
adc
sbb
or
sub
mov
cmpl
jg
dec
scas
mov
je
addr16
ds
mov
iret
test
imul
sub
xor
and
iret
dec
inc
jbe
push
sbb
cltd
sti
pop
mov
pushf
data16
xchg
lock
jl
mov
sbb
les
inc
adcl
inc
in
pop
jbe
pop
sbb
xchg
mov
faddl
jle
rorl
pop
or
idivl
add
pusha
shrl
in
in
ficoml
mov
push
insb
add
mov
in
jecxz
or
aam
pop
lret
enter
push
sub
xor
pop
scas
lods
outsl
push
repz
mov
call
cltd
pop
ljmp
das
out
add
fs
aam
add
aaa
xchg
sbb
mov
stc
xchg
mov
stc
sti
lods
rcr
mov
loop
loopne
stos
hlt
add
sub
outsb
ds
jo
jle
call
out
mov
sub
add
xor
scas
sbb
jbe
in
mov
cmpl
dec
icebp
stos
jno
xchg
mov
sub
or
dec
dec
lock
xlat
stos
shrl
push
xchg
sbb
test
dec
mov
pop
iret
xchg
xchg
xchg
mov
sub
jle
xchg
push
xor
cmp
pop
cmpsb
and
adc
sahf
pop
push
jmp
test
neg
in
daa
and
outsl
dec
jp
pop
sbb
in
xchg
jmp
push
leave
jmp
cmp
imul
lock
aad
in
data16
in
dec
out
hlt
add
sbb
cmpsb
cmp
add
les
or
sub
scas
mov
jae
lahf
ret
mov
sub
cli
jb
sbb
hlt
nop
popa
jecxz
xchg
mov
xorb
xchg
lea
push
sarb
push
pushf
fisttpll
popa
sbb
fwait
add
mov
ret
mov
pop
pop
mov
mov
dec
fbstp
mov
jmp
mov
sahf
subl
mov
cmp
cwtl
xchg
in
dec
mov
jo
fwait
mov
pop
xor
sbb
and
xor
scas
push
xchg
sub
jnp
dec
movsl
jl
push
insl
inc
mov
ret
das
push
adc
shrb
push
lea
xchg
lock
out
push
push
out
mov
push
jnp
xor
or
insb
xchg
mov
and
pop
fs
push
sti
xchg
outsl
cmpsl
pop
mov
lock
clc
sub
lret
adc
mov
push
gs
mov
mov
or
push
loop
or
mov
cmp
jbe
add
daa
xor
xor
pop
sub
and
fists
cmpsl
pop
frstor
mov
push
push
inc
pop
pop
mov
and
sub
dec
sbbl
and
jno
push
pop
sub
bound
movsb
mov
cmp
int
mov
ss
enter
test
mov
aam
jae
mov
stos
dec
loopne
and
addr16
push
cmc
gs
imul
fsts
lods
dec
dec
out
es
hlt
xchg
mov
and
jp
inc
pop
cmp
shl
lret
and
jmp
add
add
jnp
adc
rcl
cltd
add
neg
sub
sbb
ret
popf
call
bound
add
xor
sbb
mov
cmp
sbb
mov
dec
and
hlt
pop
in
nop
and
mov
movsl
pop
fldl
push
sbb
pop
fbld
push
push
sub
mov
cld
sbb
mov
popa
in
inc
pop
cmpl
inc
xchg
cmp
push
jecxz
bound
int3
lds
dec
fdivl
ret
call
aad
popf
stos
lea
mov
insb
das
stc
cmp
xchg
mov
jnp
push
mov
jne
or
arpl
cltd
inc
call
je
aam
xor
in
in
jo
les
mov
push
scas
or
xchg
xlat
fnstenv
fs
scas
pop
cs
sub
sbbb
xchg
imul
sbb
mov
push
shl
loope
inc
adc
aaa
shll
pop
icebp
testb
sub
sub
pop
pop
and
in
mov
jnp
jno
ja
cli
ja
sti
js
mov
mov
jp
xchg
lods
sbb
and
fwait
mov
ret
push
pop
insb
test
or
sub
shl
scas
arpl
jbe
and
rcrl
je
test
lahf
lods
add
mov
stc
push
mov
movsl
aam
pop
pop
iret
xchg
popl
push
leave
aad
pop
pop
arpl
jne
and
imulb
test
lahf
inc
mov
psrad
pop
push
movsl
add
cmp
scas
les
or
in
dec
shll
stos
mov
fbld
fadd
clc
push
leave
loope
loop
into
add
jl
jnp
lods
popf
lea
inc
cmp
jae
and
mov
lret
mov
call
loopne
sahf
insl
testl
fldcw
pop
fs
and
out
cmc
call
cmp
adc
dec
xchg
mov
repz
adc
std
pop
adc
lea
mov
adcl
sbb
xchg
je
push
dec
or
cmc
jb
clc
jp
or
lds
pop
adc
cmp
insl
aas
sub
jo
push
inc
mov
imul
sub
in
xchg
dec
jno
sti
and
addr16
mov
jns
cmp
sub
arpl
stos
inc
popa
test
xchg
shrd
mov
sbb
push
ds
mov
mov
xchg
mov
scas
scas
out
iret
out
cmp
fisubrs
dec
pop
idivb
push
scas
sub
jle
pop
jae
sti
adc
fmulp
xor
and
cli
mov
popa
notb
or
mov
xor
jbe
ss
daa
lahf
jne
mov
insb
pusha
aas
add
repnz
jmp
pop
scas
and
sbbb
mov
rorb
inc
or
lods
and
je
cmpsb
movsl
movsb
clc
xchg
adc
mov
cltd
xor
mov
or
rolb
add
sbb
lea
push
add
adc
push
bound
fistps
xchg
mov
pop
jb
cli
lock
inc
pop
mov
push
out
iret
cmp
repnz
jmp
ficoms
add
ja
mov
data16
nop
pop
jle
cmpl
or
cmp
fildl
dec
pop
sbb
out
fistl
jb
in
in
dec
lahf
outsb
add
add
imul
and
test
mov
inc
in
mov
mov
fisubs
push
push
dec
in
adc
mov
das
imul
or
cmp
notl
ljmp
push
lret
xor
inc
xchg
pop
es
test
inc
gs
ds
pop
sbb
xlat
fbstp
imul
inc
nop
lahf
cmp
push
lods
mov
lcall
repnz
shlb
sahf
push
mov
scas
sbb
enter
cmp
pop
andl
das
mov
mov
cld
inc
fldt
add
jae
stos
out
js
fucomip
stos
push
fildl
lea
push
mov
sub
mov
dec
mov
or
mov
test
inc
and
inc
in
jnp
add
pop
lea
xchg
fldcw
inc
ret
fcomip
jl
push
adcb
add
mov
lret
and
js
dec
pop
jne
cmp
sahf
cltd
xor
in
andb
lret
call
shlb
pop
sbb
or
add
addr16
xchg
mov
fcmove
mov
popa
mov
xchg
cmpsl
pop
leave
inc
inc
fs
dec
adc
out
push
in
fisttpl
add
mov
sub
add
js
loope
sbb
sbb
push
lea
fnstsw
aam
cmpsl
mov
test
mov
aas
sub
mov
and
sub
mov
fisttps
pop
std
jbe
adc
push
xlat
sub
ficoml
jbe
out
sbb
xchg
dec
lds
sub
repnz
xor
xor
cmc
sub
xlat
xor
push
push
cmp
pop
push
sbb
pop
pop
aaa
sbb
pop
in
pushf
or
mov
out
mov
adc
sbb
xsha256
cmpsb
xchg
rorl
insl
fwait
fs
mov
push
pop
push
shrl
or
dec
and
subb
ror
xor
and
adc
fs
jmp
inc
jge
mov
out
push
push
movsl
inc
dec
cli
add
ljmp
jno
mov
test
js
lcall
pop
ss
loopne
mov
push
in
int3
insl
dec
jo
or
xchg
add
aad
mov
nop
ss
lods
dec
ficomps
shll
outsl
mov
stos
clc
xchg
subl
insl
add
pop
xchg
mov
or
loope
xchg
pop
adc
mov
dec
fstpl
jns
dec
in
popa
subl
in
dec
test
push
jb
scas
add
jmp
andl
jo
std
pop
push
xchg
push
jae
fisttps
jnp
stos
daa
adc
or
clc
sub
xor
mov
mov
icebp
sbb
xor
lret
cld
jp
js
xchg
sub
cmc
inc
shr
test
jns
pop
imull
jg
add
mov
aad
adc
scas
or
std
xchg
xor
imul
mov
and
cmpsl
fstps
data16
pop
jb
push
lods
js
add
vpcmpgtb
push
aas
aad
stos
jbe
dec
push
adc
inc
xchg
dec
cmp
daa
and
je
dec
dec
in
in
push
jmp
adc
jno
push
xchg
xor
addr16
inc
xchg
daa
iret
pop
mov
icebp
jno
addb
ljmp
ret
test
pop
fld
lds
push
jns
test
cmpsb
jp
xchg
ds
shrl
mov
sub
mov
push
in
fdivl
data16
mov
sub
pop
loop
std
pop
js
sub
shl
repz
repz
iret
loope
lods
mov
outsb
xchg
jae
mov
rol
xlat
pop
xchg
rclb
sub
mov
pop
jl
cmc
add
bound
sbbb
mov
pusha
ljmp
adcb
mov
lret
sbb
mov
add
lds
sbb
cmpsb
sub
ss
addb
pop
push
imul
insb
adc
push
ds
xor
cmpxchg
repnz
test
fmulp
jmp
arpl
mov
lcall
shlb
test
lret
pop
arpl
pop
or
jecxz,pn
xlat
xor
sbb
addr16
std
mov
out
nop
test
scas
inc
cmp
lea
rclb
jo
or
xchg
add
movsb
mov
ret
sub
cmp
lea
mov
addr16
subl
scas
pop
sub
or
dec
mov
push
push
and
xchg
mov
gs
sub
and
loope
inc
bound
fadds
cmp
xchg
cmp
and
jl
loope
sbb
test
sarl
fcompl
test
imul
lock
adc
mov
lahf
into
rcrl
aad
mov
and
jne
and
and
push
enter
push
sub
dec
fimuls
sbbl
xor
dec
or
jnp
div
gs
roll
inc
fsubr
add
pop
jl
xor
cmp
sbb
pushf
xorl
pop
frstor
movsb
mull
popa
cmp
js
or
rorb
jns
mov
jl
pop
cmp
push
jg
and
test
mov
mov
imul
sahf
loopne
pop
mov
ror
jnp
mov
add
daa
or
leave
lea
adc
mov
xchg
jg
mov
push
push
lea
jb
in
adc
pop
xor
call
movsl
inc
mov
push
push
cmpsb
adc
cltd
cmc
push
cmp
mov
ljmp
add
sti
nop
daa
sub
pusha
push
insb
fwait
nop
testb
and
sub
subl
test
sbb
test
ror
leave
in
loope
dec
mov
leave
xchg
imul
sbb
cli
ret
pop
mov
dec
popf
ret
or
scas
in
jecxz
in
inc
sub
xchg
mov
xlat
sbb
fisubs
fmuls
or
mov
cli
add
cmc
mov
sbbb
mov
js
pop
cmp
push
xchg
lods
adc
pop
jl
fildll
lahf
inc
in
pop
je
ret
je
es
dec
loop
inc
rclb
lock
inc
mov
pop
aam
dec
and
addl
push
in
fdivrs
sub
jne
and
add
divb
fucomip
pop
sbb
jmp
sbb
xor
adc
cs
xor
cmp
es
push
pop
dec
push
out
popf
pushf
popa
sbbl
cmp
sub
fcmovnb
push
sbb
test
sub
mov
mov
fcoml
inc
cmp
and
ja
mov
call
sbb
sbb
cmp
jbe
mov
jl
add
rolb
jl
data16
mov
inc
nop
jne
jo
fsts
popa
pop
and
subl
adc
pop
cmpsl
mov
sub
test
or
jle
sti
pop
clc
cmp
mov
jg
xchg
int
mov
mov
subl
test
movsb
test
popa
test
xor
jnp
xchg
lods
pusha
scas
call
lock
call
xchg
sti
outsl
fldt
jb
mov
xchg
sub
sub
mov
mov
mov
pop
mov
pop
push
inc
insb
xchg
andb
mov
pop
jp
es
pop
xor
cmp
jecxz
lods
or
fstpt
into
scas
xchg
ja
sbb
int
mov
and
dec
sti
xor
fistpll
jo
mov
or
fwait
sbb
jbe
or
mov
mov
hlt
xchg
clc
popf
sbbl
mov
filds
xchg
out
test
mov
test
sub
adc
jnp
pop
jb
and
movsb
cld
cmp
push
mov
shr
xor
test
bound
aad
adc
test
test
loopne
stos
fprem1
adc
inc
mov
mov
lock
insl
nop
push
inc
fldl
and
ljmp
adc
adc
jno
fbld
into
add
push
mov
sub
add
outsl
jo
leave
pusha
cmp
push
scas
sbb
jb
lcall
xchg
cmpsb
jb
mov
aaa
sbb
lods
pusha
popf
xor
ss
in
mov
mov
jmp
movsb
pusha
mov
push
jle
adc
and
push
pop
mov
mov
and
repz
and
emms
push
je
inc
dec
sub
cmp
mov
hlt
cmp
test
xor
push
dec
xchg
add
push
xor
andl
pop
jecxz
pop
cmp
pop
movsl
jecxz
lcall
jnp
imul
push
repnz
mov
stos
push
fstp
test
xchg
mov
mov
push
or
mov
out
cltd
sub
mov
jno
jno
aam
push
dec
mov
sbb
pop
sub
jge
mov
into
lahf
mov
xor
ds
fistps
sub
cmpsb
inc
pop
fsubr
cld
push
mov
or
mov
or
fwait
add
lahf
loopne
lds
xor
fwait
xchg
lahf
push
cmp
addr16
into
gs
loopne
subl
out
adc
or
lods
or
int3
mov
addr16
dec
mov
jge
or
fwait
pop
cld
xchg
cmp
pushf
and
je
decl
rcll
push
inc
loop
add
mov
inc
andl
std
iret
aas
into
mov
vpcmpgtb
sbb
mov
add
pop
loopne
mov
jo,pn
sarl
pushf
mov
push
popa
pop
dec
subl
scas
xchg
sub
popl
xor
test
mov
ficoml
mov
xchg
insb
aaa
mov
adcb
xor
adc
outsl
push
xor
gs
adc
lea
mov
test
js
enter
inc
lea
mov
jae
xchg
stos
scas
pop
int
xor
jp
dec
dec
test
sub
jmp
jl
rcrb
adc
xor
jns
call
xchg
sub
mov
aas
push
mov
xchg
stos
mov
sub
mov
inc
xor
aam
push
das
xchg
mov
fsubs
fwait
out
jbe
sbb
jle
sub
dec
dec
inc
pop
subl
push
fnstsw
adc
sbb
sub
inc
sub
out
adc
ret
push
loop
ljmp
lcall
shll
add
or
push
inc
popf
fcmovu
or
adc
lods
loope
insl
inc
mov
cmp
stos
dec
fnstcw
inc
cmpsl
out
mov
inc
xor
cmp
scas
mov
popa
dec
stos
aas
push
push
jnp
inc
cltd
cld
lea
mov
iret
sub
add
imul
in
loopne
pop
loop
std
andb
fildl
mov
fcoml
in
pop
push
movsl
jns
outsb
imul
push
push
popa
into
test
xor
and
addr16
lret
popa
addl
push
jg
test
mov
popf
lods
in
xchg
and
sbbb
test
sub
pop
pop
nop
das
sub
jp
and
in
push
jecxz
cmp
nop
push
xor
inc
int
inc
or
pop
insl
jmp
pop
mov
sbb
sub
in
or
cmp
hlt
dec
xchg
fsubrp
adc
int3
and
cmp
pop
lret
and
jbe
fisubs
mov
xchg
pop
add
pop
mov
jbe
push
add
and
shlb
stc
jl
jmp
out
xchg
cwtl
mov
leave
pop
stos
push
cmp
push
pop
aaa
xor
jnp
xor
push
jl
stos
ja
xor
into
nopl
leave
cmpsl
in
dec
fldl2e
or
cmp
sub
pop
std
adc
ret
cs
inc
inc
fdivs
fucomip
xlat
jns
imul
cltd
xchg
and
test
push
ja
in
outsb
jno
or
cmp
pusha
lret
adc
adc
in
adcb
gs
mov
mov
mov
fisubrs
stos
pop
sbbl
mov
imul
movsb
lods
pop
addr16
ret
dec
inc
lods
mull
negb
ds
notl
xchg
insl
les
sub
push
out
js
cmpsl
lret
jecxz
imul
inc
or
fsubrs
jb
jge
icebp
pop
je
or
jnp
daa
fdivs
imul
lock
push
jmp
xchg
jae
xchg
movsl
inc
inc
xchg
cmp
leave
pusha
add
scas
out
loope
scas
cmp
cltd
or
pop
jne
js
jo
mov
jne
inc
fstpl
cmp
jp
mov
mov
dec
pop
rcrb
add
rol
movsl
stos
nop
mov
adc
call
and
inc
cmc
sub
and
inc
out
es
pop
adc
cmp
das
and
push
into
cwtl
jl
wbinvd
mov
mov
sub
lods
pop
push
lret
lods
mov
xchg
sbb
cmp
insb
fdivrs
adcb
xchg
sub
inc
dec
mov
dec
sbb
dec
rcrl
add
add
pop
sub
adc
jne
out
add
adc
adc
shr
and
verw
mov
fisubrs
adc
xchg
and
cs
inc
mov
pop
in
movsl
insl
jl
pop
aas
ret
outsl
outsl
jmp
mov
arpl
sub
push
out
pop
lret
popa
arpl
fsubrl
mov
jno
test
cmp
push
cltd
jne
mov
push
xchg
adc
pop
movsl
enter
add
fwait
lahf
xchg
out
mov
out
mov
push
cmp
mov
xchg
mov
bound
movsl
jmp
cwtl
sub
add
movb
stos
popa
in
xchg
mov
or
xor
shrl
dec
scas
dec
dec
lock
jne
cmp
std
xchg
shll
shrl
pop
adc
imulb
inc
cmp
orl
pop
stos
roll
and
cmp
fbstp
mov
ss
mov
shrl
repnz
nop
adc
lods
int3
inc
mov
mov
pop
jbe
xor
xor
adc
xchg
sbb
xchg
mov
and
daa
sbb
stos
xor
add
rclb
loopne
sbb
stos
push
push
lea
push
mov
pop
lods
adc
dec
dec
mov
shll
pop
add
sbb
ss
test
in
sub
fucomip
sub
insl
les
xchg
xorb
imul
cwtl
pop
mov
aad
add
ljmp
jecxz
xlat
lret
jb
mov
mov
cmpsb
add
dec
out
clc
inc
mov
imul
maxps
sub
cmp
mov
push
jl
out
sub
push
push
xor
int3
and
or
popa
mov
inc
or
pop
dec
cmp
cmpb
addl
orb
sti
sahf
adc
in
cmp
inc
and
adc
push
cmpsl
inc
aas
sub
pop
ds
repnz
out
jns
xor
or
mov
push
ljmp
xlat
int3
scas
mov
call
dec
pop
outsl
adc
std
pop
cmp
out
mov
pop
push
stos
enter
lcall
add
xchg
jns
call
dec
repnz
pop
add
fcompl
mov
pop
xor
pushf
push
sub
pop
dec
call
mov
arpl
pcmpeqb
fcoms
ret
cltd
lods
push
jecxz
add
lods
cmp
push
js
out
popf
push
call
ret
mov
popf
leave
je
test
dec
sarb
lea
inc
and
jae
fwait
dec
arpl
call
add
mov
add
test
scas
je
and
std
lret
sub
mov
into
lds
rolb
push
and
jae
xlat
outsb
or
mov
mov
push
pop
cs
mov
sub
rorl
pop
xchg
jbe
lds
inc
jae
push
mov
inc
xchg
cmp
push
fnstenv
sub
mov
les
dec
push
fcoms
xchg
add
test
fucom
call
dec
sbb
hlt
ret
jae
jl
in
aas
cltd
rolb
imul
stos
mov
adc
sbb
mov
push
testl
and
stc
push
int
push
ret
or
pop
and
xlat
or
jmp
dec
in
mov
shr
imul
push
cld
rdpmc
lahf
rclb
sub
sbb
pop
lock
xlat
sub
or
inc
mov
aad
dec
cmc
inc
shl
sub
addr16
pop
in
mov
jae
pop
stos
cmpsb
iret
dec
sub
pop
jl
or
out
lret
mov
push
imul
std
ljmp
aad
loopne
daa
cmpsb
cmp
mov
fs
adc
xchg
das
in
icebp
lahf
push
scas
sbb
xor
pushf
cmpsl
jge
dec
mov
jecxz
ret
jnp
cmc
psubusb
gs
mov
fs
jns
cmp
push
clc
rclb
and
cmp
repnz
inc
jns
sub
lds
stos
mov
out
insb
and
mov
js
repz
mov
and
lahf
or
sbb
cmpsb
sub
sbb
out
stos
lcall
ss
mov
and
rorl
xor
xor
fisubl
rorl
mov
in
jo
scas
pop
pop
xchg
sbbb
cmp
add
test
adc
push
dec
dec
mov
fcmovnb
or
call
mov
dec
in
jbe
jecxz
fidivl
push
pop
and
ficoms
xor
pop
notb
shl
ja
fs
int
jge
fs
test
lods
insl
and
fisubl
repz
clc
cmp
pop
jg
rcr
push
adc
popf
xor
add
dec
mov
mov
xor
test
add
leave
es
cld
ds
or
ljmp
jp
jne
adc
inc
xor
xchg
imul
in
pop
fnstenv
dec
mov
scas
std
adc
add
mov
mov
test
in
imul
icebp
int
adc
sbb
xlat
dec
mov
jae
or
mov
push
imul
aaa
into
or
inc
lds
and
dec
jg
pop
out
mov
and
cltd
xor
inc
sbb
mov
xlat
fwait
das
pusha
dec
xor
sub
dec
subb
push
out
dec
cmc
cmp
xchg
mov
popf
push
lds
pop
mov
lahf
jle
mov
mov
fdivl
xlat
clc
inc
xchg
mov
xlat
jnp
leave
cmp
lds
pop
mov
cmp
dec
out
fbld
or
jge
lea
xchg
adc
fwait
arpl
jg
outsb
iret
shrl
mov
test
inc
pop
xchg
mov
es
mov
inc
das
pop
push
mov
ror
aaa
adc
insb
imul
outsl
mov
out
je
push
mov
arpl
mov
cli
xchg
imul
lahf
dec
inc
dec
lcall
xchg
push
aad
jae
dec
mov
fbstp
popa
leave
or
fcmovu
sub
sub
add
mov
add
aad
jecxz
push
inc
scas
adc
mov
mov
roll
fwait
pop
fldl
sarb
sarl
pop
mov
cmp
inc
push
xlat
adc
sbb
leave
and
pop
repz
mov
adc
pop
sbb
xor
mov
dec
sub
sub
push
movsb
mov
fnstenv
cmp
inc
sbb
aas
push
inc
xor
faddl
mov
mov
in
sbb
sbb
sbb
std
movsb
or
jbe
push
imulb
pop
pop
lock
mov
mov
add
cmp
push
cltd
push
mov
jbe
and
aas
sbb
mov
jmp
js
orb
push
and
sub
cmp
fdivl
test
into
popa
shrl
inc
and
xchg
repnz
jbe
lds
in
sbb
adc
das
dec
push
push
xlat
outsb
xorb
cs
aaa
imul
pop
cmp
loopne
jge
pop
je
jp
cmp
cmp
dec
jns
out
sbb
fcmovnb
fucomip
mov
popf
out
sub
adc
push
pop
mov
jmp
fwait
pushl
cmc
mov
and
gs
insl
push
jb
sub
data16
xor
dec
mov
sahf
sub
mov
call
jl
add
call
push
adc
mov
cmpsb
xchg
lahf
ss
test
push
mov
mov
icebp
mov
movsl
cmp
aad
hlt
sbb
dec
pop
icebp
popf
fstl
movsb
push
jge
iret
andb
lahf
ret
sub
pop
push
jns
test
inc
leave
cld
mov
fs
push
dec
mov
sbb
dec
dec
cmpsb
cmovl
stos
shrl
fadds
leave
fstpt
sub
cmp
adc
roll
mov
cltd
adcl
fidivrs
pop
stc
sti
inc
mov
fisubrl
js
mov
cmp
outsb
push
loope
dec
cmpsb
xor
dec
enter
cmc
lret
mov
js
adc
pop
ja
inc
pusha
bound
adc
push
addr16
jns
xchg
ret
pusha
or
shl
iret
lods
mov
leave
xchg
jge
dec
adc
loope
js
repz
sbb
mov
mov
xchg
and
pop
sub
inc
ficoml
ret
loope
mov
xchg
movlps
mov
data16
cmp
mov
test
add
or
sbbl
pop
sub
lods
mov
sbbl
push
sub
inc
jmp
add
add
enter
sbb
add
rcr
push
fisttps
pop
jmp
aaa
sub
stc
xor
add
lds
and
sbb
push
shll
xlat
mov
xchg
aaa
stos
addl
insl
sub
pop
pop
xchg
fdivr
inc
subl
iret
sarb
jb
and
mov
sbb
adc
lods
jp
test
pop
pminub
xchg
push
fmuls
test
sbb
arpl
stos
inc
push
test
sub
cmpsb
enter
sbbb
pop
arpl
ficompl
sub
shl
fs
mov
lock
jbe
push
in
fcompl
into
jg
jbe
sbb
imul
inc
adc
sub
add
clc
sarb
jecxz
ret
cltd
add
add
push
adc
pop
lock
test
add
jns
into
pop
sbb
inc
call
stos
jns
stos
inc
xor
movl
loop
dec
fwait
pop
push
leave
pop
cmp
mov
push
cli
pop
repnz
inc
call
or
negl
or
push
scas
mov
mov
stc
into
or
push
and
push
mov
mov
imul
mov
or
fdivs
out
cmp
lods
push
hlt
lret
pop
mov
sahf
push
in
iret
lret
cmp
ret
mov
jnp
dec
daa
out
mov
jno
loopne
pop
push
ret
adc
pop
int3
dec
out
xor
and
xor
stos
jmp
push
or
ja
movsl
pusha
sti
clc
into
jmp
sub
sbb
pop
lea
ljmp
rcrl
fnstenv
in
sbb
sbb
icebp
inc
rorb
cmpsl
rcrl
add
xchg
inc
xchg
adc
filds
jno
popf
cmp
dec
loop
mov
pop
sbb
pop
inc
mov
push
inc
pop
cmpsb
mov
loop
sub
lcall
lcall
mov
clc
ret
lds
shll
mov
insl
ss
sbb
adc
lods
cmp
sub
lret
loop
lds
cld
aad
mov
repz
lret
sbb
test
in
lcall
mov
and
ja
cmp
push
jge
mov
sbb
xchg
in
std
jae
mov
call
adc
cmpsl
jmp
jmp
out
cmp
pop
inc
jmp
mov
sarb
ficoms
ficoms
call
int3
sub
sub
ret
push
jne
mov
mov
mov
mov
jge
xor
rcrb
daa
imul
pusha
xor
push
insl
dec
xchg
dec
out
outsb
push
lods
lahf
jecxz
inc
xor
adc
jp
adc
js
lods
pop
outsb
roll
pop
mov
negl
sub
xor
sti
sahf
je
iret
in
sbbb
add
outsl
mov
push
sbb
outsl
push
adc
ja
fwait
push
inc
push
add
aam
loopne
pop
jge
dec
std
das
lock
inc
cli
adc
push
jne
movsl
mov
out
xor
ja
les
cs
mov
sub
iretw
adc
popf
mov
in
xlat
dec
pop
xchg
js
add
xchg
ja
pusha
jb
shrl
lret
inc
jecxz
mov
sub
ret
jp
pop
int3
lea
andl
daa
nop
ss
clc
shlb
sub
ret
nop
dec
jmp
xchg
cltd
das
and
loopne
push
push
mov
rclb
mov
das
jmp
ljmp
pop
scas
mov
jb
inc
es
adc
scas
xchg
adc
sub
mov
in
inc
jmp
mov
inc
xchg
stos
fsubl
jno
das
mov
push
jmp
emms
icebp
aad
xor
sbb
dec
ds
xor
stos
inc
movsb
ja,pt
outsb
inc
or
dec
dec
stos
add
lret
sbb
mov
cld
ljmp
adc
stos
and
enter
in
aam
sbb
mov
cmp
dec
mov
xchg
jb
sahf
or
xorl
nop
sbb
mov
cwtl
ja
or
sbbl
push
jmp
fnstsw
ljmp
xor
shlb
rorb
adc
fmuls
push
mov
sbb
js
out
je
adc
movsb
and
push
call
jge
repnz
movsl
popf
outsl
add
aad
jl
pop
mov
dec
sub
pop
aam
mov
call
sub
add
cli
push
out
dec
fists
dec
cmp
xor
xor
mov
mov
outsb
ljmp
fidivs
adc
fwait
xor
mov
mov
inc
fnsetpm(287
lahf
mov
mov
adc
mov
mov
jne
shll
mov
mov
mov
in
xchg
shll
cmp
pop
ljmp
lret
roll
pop
ds
sbb
lret
pop
loop
outsb
loope
add
outsb
and
pop
scas
xor
movsb
dec
cli
mov
frndint
push
adc
daa
mov
pop
leave
jns
jns
stc
push
test
pop
lea
push
call
hlt
sub
mov
push
cmp
arpl
xchg
add
nop
inc
jns
xchg
lcall
mov
jno
gs
push
int
int
das
add
fcomps
inc
fucomi
out
push
mov
push
mov
aaa
or
xchg
out
sub
push
data16
mov
cltd
sbb
repz
mov
leave
cli
outsb
jl
arpl
cmp
or
ret
cmp
adcl
sbb
pop
in
xchg
icebp
outsl
fcoml
adc
movsb
xchg
sub
shll
js
pop
iret
or
mov
mov
stos
cmp
frstor
adc
mov
fsubrs
jl
or
repnz
dec
push
rcrl
popf
notl
incl
dec
cmp
pop
mov
ret
mov
sub
pop
sahf
ret
xchg
adc
call
xor
mov
xchg
mov
ficompl
je
scas
and
cmp
mov
add
add
adc
lock
bound
push
lods
or
dec
movsb
lods
jnp
rep
inc
xchg
test
jbe
mov
xchg
scas
fisubrl
outsl
adc
lods
imul
popf
int
in
repnz
out
cmp
adc
xchg
in
and
or
fiadds
pop
xchg
mov
pop
loope
push
call
or
jne
addr16
add
aaa
or
cltd
xchg
test
mov
popa
aas
pop
xor
pop
stos
mov
pop
adc
mov
and
xor
adc
xchg
push
jbe
and
mov
ss
daa
ljmp
xchg
pop
or
sahf
hlt
xchg
or
sbb
enter
sub
int3
sbb
out
lods
push
outsb
or
aaa
dec
shrb
cmpsb
inc
icebp
add
imul
jne
lods
mov
sbb
jns
mov
test
mov
mov
mov
cmp
xchg
movsl
aaa
arpl
imul
rcrb
jns
adc
cmp
adc
push
pop
lock
movsb
lret
cli
pushf
sub
stos
cmp
and
sahf
mov
or
or
loop
stc
or
lock
test
cmp
and
lret
cmpsb
xor
enter
jns
lea
loop
ret
sbb
popf
add
xchg
mov
pop
inc
fcoml
roll
xchg
fdivl
cli
mov
cwtl
mov
fcompl
icebp
mov
ss
and
cmp
imul
push
lods
push
out
outsl
add
jecxz
cmp
lds
loope
push
outsl
inc
aad
sbb
out
push
cs
rcrl
mov
repnz
stos
xchg
inc
jnp
add
addr16
lret
pop
movsb
loop
fists
in
stc
and
cmpsl
xchg
add
adc
and
adc
adc
or
mov
bound
jp
mov
xor
hlt
xchg
sub
mov
pop
icebp
push
nop
ss
pop
lods
testb
push
sbbl
push
les
push
icebp
add
sub
lock
adc
fs
xchg
gs
mov
xor
cmpsl
pop
mov
mov
aam
sub
jge
push
mov
xchg
into
rorb
dec
pop
cmpsb
and
cmp
fsts
addr16
das
cltd
rorb
fmull
sbb
inc
gs
ret
in
movsl
hlt
pop
mov
cmp
or
sarb
aam
fwait
jecxz
pop
ret
sub
and
cmp
lea
add
push
mov
add
outsl
adc
imul
pushf
clc
sahf
iret
mov
pop
cmp
adc
imul
xchg
push
inc
je
xor
enter
into
or
add
jb
outsl
jle
mov
dec
sbb
dec
das
out
pop
scas
adc
jae
test
lea
fwait
cmpsl
repnz
jecxz
js
push
dec
cltd
add
subb
sbb
jl
mov
nop
daa
sbb
push
imul
sbb
push
add
and
push
cmp
adc
int
mov
or
pop
in
clc
xor
and
inc
push
in
addr16
pushf
push
xchg
shll
mov
xchg
lock
adc
outsl
jnp
jno
pushf
sub
mov
mov
sbb
cmp
lock
popf
repnz
fucomip
outsb
lret
push
cmp
mov
push
add
fisubs
sub
cmp
pop
jecxz
mov
xor
adcl
ljmp
mov
or
add
ja
fistpll
mov
inc
jp
out
xlat
lods
mov
mov
rorl
loope
mov
dec
int3
lret
add
xor
shlb
add
or
jnp
inc
out
adcl
adc
or
xchg
pop
dec
pop
nop
testb
mov
jnp
adc
or
cmp
sbb
jno
lret
nop
push
inc
lock
in
or
mov
arpl
ror
pushf
dec
in
xchg
pop
movsb
xlat
pop
adc
leave
xor
sub
nop
sub
sbbb
loopne
push
aad
in
nop
in
sub
cmpsb
sbb
xlat
mov
fcompl
inc
filds
cmp
mov
push
cmp
xchg
xchg
sub
fldpi
adc
inc
jbe
dec
adc
int3
dec
sbb
popf
push
imul
mov
mov
in
xchg
xchg
xchg
jns
mov
test
jp
test
push
aas
add
and
pushf
into
jno
out
push
in
and
testl
repz
jo
leave
adcb
pop
lods
lahf
pop
cmpxchg
andl
mov
sub
dec
sbb
insb
jle
jmp
sbb
xchg
push
cmp
xchg
in
icebp
or
push
adc
mov
fimuls
mov
jmp
jb
add
stc
aad
jge
or
imul
ret
aas
push
mov
shr
mulb
das
icebp
push
add
mov
add
ds
mov
mov
pushf
inc
inc
into
mov
jo
jbe
push
xchg
adc
jne
repnz
mov
lods
xchg
test
testb
in
mov
outsb
mov
test
lret
outsb
cmp
int
push
xor
or
in
jb
fwait
pop
cmp
sbb
inc
imul
pop
bound
or
jnp
mov
fildll
push
pop
jmp
ss
pop
sub
cmpsb
and
loope
cmp
dec
mov
mov
insl
clc
fidivs
mov
es
dec
dec
cmp
or
es
inc
mov
xor
sub
dec
push
addr16
xor
jnp
std
lods
adc
jne
pop
pop
mov
hlt
aad
push
and
push
push
xchg
lea
stc
push
mov
cwtl
call
shl
sub
jnp
lods
pop
lods
push
ffree
test
add
fbstp
stos
rolb
les
pop
fldl
gs
add
and
xchg
xchg
mov
push
mov
add
or
std
aas
or
icebp
ljmp
imul
sub
jl
sub
stos
out
test
jo
sbb
outsb
adc
cmpsb
mov
xor
cmp
jp
out
in
mov
lods
faddp
push
sub
xchg
jb
sahf
sub
or
inc
je
push
ficoml
xor
mov
outsl
sbb
pushf
leave
arpl
mov
gs
lret
fmul
sbb
fnsave
rorb
call
push
xchg
cmp
cltd
into
xchg
mov
or
out
sbb
adc
mov
js
pop
vpaddq
jp
xchg
in
orb
pop
mov
adcb
xor
out
adc
or
insb
mov
mov
shll
xchg
xor
cmp
lods
cli
inc
xor
mov
das
lds
xchg
cwtl
int3
xchg
arpl
mov
negb
movsl
dec
add
and
cmp
xor
adc
and
sbb
lret
stc
sbbb
bound
jns
dec
jbe
out
push
ljmp
sahf
and
add
pop
stos
int3
dec
rol
cmp
enter
mov
inc
pop
das
add
ja
mov
push
fcoml
adc
inc
xchg
test
or
sub
and
fmuls
cmp
mov
fistl
imul
incb
lods
outsb
push
cmp
js
iret
scas
popl
xchg
pusha
mov
jo
shl
dec
pop
outsl
jnp
test
inc
faddl
pop
imul
push
adc
out
mov
int
mov
dec
fsts
pop
xlat
jae
mov
cmpsl
scas
loop
adc
or
cs
mov
mov
add
call
dec
cmp
xchg
cmpsb
lock
pop
lret
fisubl
inc
or
cltd
lock
pop
xchg
sub
xchg
sbb
mov
cmp
test
shrl
in
psrad
scas
push
in
dec
in
stc
or
loopne
es
mov
sub
shll
movsl
in
dec
dec
sbb
sti
in
lods
dec
cltd
into
cmpsb
dec
imul
jl
inc
popf
bound
mov
imull
stc
and
fmull
mov
scas
mov
insb
mov
ljmp
push
imul
and
dec
mov
and
mov
mov
inc
push
dec
inc
mov
pop
inc
test
mov
popa
cmc
adc
or
pop
addr16
aas
xor
cmp
cmpsb
jne
stos
jne
xchg
push
ficoms
hlt
mov
fwait
int3
pop
cwtl
test
pop
rorl
out
push
xchg
mov
int3
xor
add
jbe
or
pop
mov
loopne
sub
xor
xor
in
mov
xchg
adc
outsb
sarl
insb
fists
xchg
roll
sbb
decb
xchg
repz
out
mov
imul
shl
lret
sbb
adcb
sbb
jmp
pop
popa
rolb
add
adc
sbb
scas
mov
sbb
dec
jo
mov
outsb
add
mov
jg
mov
mov
aaa
xchg
jno
shrb
pusha
ss
subb
ljmp
or
xor
nop
and
and
dec
nop
or
stos
push
mov
mov
ja
outsb
jns
test
test
mov
repz
nop
outsb
pop
xor
dec
mov
xchg
inc
mov
pusha
sub
mov
movsl
rorl
and
jl
push
out
mov
fsubrs
imul
rol
adc
pop
mov
dec
adc
adc
cmp
mov
cmpsl
cltd
pop
fldenv
cmp
add
dec
dec
je
rcll
nop
out
dec
into
test
mov
out
pop
pop
fwait
add
sub
cmpsb
mov
adc
inc
fcmovb
mov
xlat
push
mov
pop
cmpsl
rcll
inc
andb
pushf
pop
inc
pop
inc
mov
mov
adc
cmp
out
pop
stos
mov
popw
js
sub
outsb
or
jb
sub
aas
adc
mov
mov
jo
mov
or
pop
mov
nop
xchg
mov
add
mov
sub
test
nop
shl
mov
aam
idivb
sub
les
movsb
std
outsb
jl
add
mov
xchg
push
pop
movsb
test
clc
pop
ret
adc
cli
dec
fnstcw
jmp
inc
jne
push
push
lock
add
mov
lds
or
testb
rclb
inc
fs
fidivrs
or
xor
loopne
mov
add
push
ret
mov
lock
push
push
cwtl
push
mov
lcall
call
into
clc
sbb
outsl
jnp
or
in
cmp
push
pushf
js
xchg
and
mov
test
insb
push
je
jmp
dec
inc
out
inc
fcmovbe
in
int3
push
adc
pusha
add
xorps
push
jmp
divb
cmp
test
js
sbb
push
test
xor
lods
jmp
stc
iret
popf
in
jne
jno
arpl
mov
inc
stos
popa
fildl
mov
cs
or
in
cmc
pop
icebp
rcrb
jmp
out
int
xchg
in
xchg
dec
test
ficompl
inc
and
int
mov
rcrl
pop
shlb
ficompl
cmp
sub
pop
adc
mov
cwtl
push
sub
jle
dec
inc
out
mov
fisubs
lahf
loop
jbe
outsl
orl
cmp
cld
andl
lock
cmp
jae
mov
sub
outsb
scas
sub
int3
stos
je
loope
aam
cld
and
out
insl
leave
scas
inc
inc
psubb
cmpl
ret
adc
out
popa
clc
nop
adc
jl
ds
xor
xchg
lss
mov
adc
xchg
xorl
lret
cld
sbb
inc
cmpsb
fs
outsl
mov
out
aam
cld
mov
jns
stos
stos
popf
shll
scas
mov
mov
inc
fildl
jbe
jl
call
ds
xor
repnz
imul
fwait
xchg
jmp
aaa
out
or
pop
inc
in
sbb
das
jg
adc
cwtl
and
movsb
xchg
push
loopne
cmp
aaa
sub
push
push
lock
mov
add
or
lea
imul
pop
mov
lock
push
ret
repnz
stc
mov
bound
cmp
mov
sahf
push
aam
or
dec
or
sbbl
lock
jb
int
cli
mov
gs
mov
jl
xchg
dec
dec
cli
test
push
push
aam
jbe
stos
adc
fmuls
inc
sub
subb
xlat
and
mov
js
jmp
jg
adc
sub
pushf
ss
pop
cld
and
mov
es
stos
pop
aas
loopne
mov
jo
ret
inc
xor
lds
jp
push
mov
xchg
xchg
dec
pop
and
popf
and
jp
pop
dec
and
xchg
int3
arpl
push
jge
lret
jne
lds
inc
add
push
insb
sti
xchg
lcall
iret
fmuls
mov
sub
xlat
repz
insb
in
insb
cmpsb
cmp
sub
les
negb
dec
or
pusha
testl
popf
inc
push
sub
push
in
pop
in
shrl
jbe
das
cli
int
testl
jnp
adc
in
push
pop
mov
add
js
push
push
stos
int3
jmp
sub
scas
cmpsl
dec
fisubs
inc
outsb
gs
insb
push
and
cld
and
cmc
mov
pop
xchg
out
pushf
pop
popa
cmp
fs
add
dec
xchg
sub
cmc
aas
xor
mov
dec
xchg
popa
call
dec
imul
adc
dec
je
cwtl
in
lods
arpl
pop
aad
add
stos
jb
fbld
popf
sbb
xor
pop
push
loop
sub
pop
addr16
aas
loopne
pop
pop
roll
loopne
jbe
push
das
push
test
inc
or
fistps
cmp
rcrl
mov
jp
inc
fisubrl
sahf
in
in
inc
push
mov
add
jg
rcl
movsb
add
sbbl
jne
add
inc
orl
mov
cli
or
pop
popa
fbstp
mov
das
pop
jecxz
popa
shrl
std
dec
imul
out
fmull
or
add
pop
cmpsl
out
in
psraw
and
movsb
repnz
jae
xor
outsb
std
xchg
mov
dec
fidivs
cwtl
or
leave
xchg
cld
ds
mov
add
idivb
adc
sub
xor
dec
aaa
xor
or
cli
pushf
jmp
mov
data16
xor
jae
aam
push
push
les
cmc
xlat
outsb
jle
outsl
push
pop
shrb
data16
cmc
mov
dec
mov
mov
shlb
lcall
adc
mov
add
outsb
sub
mov
mov
mov
stc
pop
std
xchg
nop
jnp
gs
inc
outsb
sub
movsl
cmp
icebp
aam
aad
aaa
dec
loope
jb
ds
movsw
pusha
lahf
adc
xchg
fcom
ja
sti
sub
mov
mov
dec
xchg
xlat
pop
loop
jle
dec
xlat
pop
jmp
cs
mov
cld
cmp
movl
jle
inc
cwtl
loope
mov
loope
mov
popa
std
shl
movsb
cmc
cmpsb
dec
adc
add
inc
and
mov
daa
mov
leave
imul
jecxz
lods
pop
fdivl
shr
mov
loop
clc
aaa
lea
pop
loopne
lea
push
mov
subl
ljmp
stos
leave
mov
xchg
push
mov
xchg
mov
push
sbbb
mov
jl
mov
shrl
push
lret
bound
aas
mov
mov
push
pop
lret
bound
test
mov
pop
add
mov
pusha
sti
xchg
xchg
xchg
cmp
mov
or
rcl
sub
dec
adc
jno
mov
adc
cmp
cmpsb
push
into
rol
leave
loopne
mov
pop
jnp
xchg
pusha
ss
xchg
je
add
jne
mov
ret
xchg
add
xchg
sub
push
mov
fimull
ss
sub
lret
ss
in
sbb
cwtl
mov
mov
and
scas
mov
push
inc
bound
testb
pop
mov
mov
arpl
push
add
sub
in
xchg
push
js
xor
pop
movsb
daa
jecxz
cwtl
pop
cld
xchg
mov
repz
push
add
test
cltd
and
xor
cltd
mov
mov
lahf
mov
gs
pop
cwtl
adc
fldcw
gs
or
jnp
rcrl
mov
jbe
or
jo
nop
xchg
cs
push
test
jle
fnsave
call
jae
add
jl
dec
and
dec
cmpsl
xchg
sub
jl
cltd
mov
sub
adc
mov
movsl
dec
loopne
pop
call
sbb
sbb
cs
pop
scas
sub
test
sub
cs
mov
mov
scas
xor
popa
fimuls
xor
stc
xor
mov
repnz
xchg
fidivl
nop
jns
call
testl
jp
jae
xchg
fwait
xchg
sub
cmpsb
cmp
inc
jae
pop
repnz
pop
jl
mov
cwtl
call
or
mov
mov
mov
jle
mov
imul
fnsave
push
jmp
lock
dec
and
jo
inc
shlb
fwait
dec
loopne
sbb
mov
xlat
outsb
jp
clc
popl
pushf
cmc
mov
add
sub
jl
adc
jge
lcall
lcall
jb
jbe
sbb
cmp
test
or
mov
xchg
sub
mov
out
rcll
arpl
ljmp
stc
or
int3
neg
jno
push
sbbl
sti
je
sub
add
test
data16
sub
jp
es
push
ljmp
sti
xchg
lret
aad
push
sbbl
cs
in
lret
mov
cmp
fldt
lcall
sub
jp
repz
lret
dec
xor
cwtl
sub
pop
and
nop
daa
xor
jbe
in
pushf
xor
lcall
xor
mov
adc
ret
cmp
push
or
push
dec
loopne
mov
fisubs
fs
sub
int
leave
jg
je
ljmp
std
inc
std
xchg
ja
into
gs
cwtl
dec
loop
insl
int3
arpl
mov
jnp
outsb
or
mov
out
rcrl
and
adc
inc
mov
movsb
cmp
pop
mov
dec
mov
iret
data16
out
outsl
sbb
popa
clc
out
les
xbegin
sub
cmp
fdivs
push
out
jg
adcb
lods
push
ljmp
xor
subl
call
cmp
inc
fistl
gs
xlat
ret
mov
inc
jns
pop
icebp
push
lods
int
loopne
xchg
and
mov
dec
loop
sahf
xor
insl
and
pop
pop
mov
adcb
cmp
xchg
pop
repnz
shl
cmc
aam
sub
and
xchg
sub
std
out
test
sub
mov
xor
mov
loop
mov
stos
call
aas
mov
jbe
mov
adc
jo
adc
inc
fnstsw
outsl
push
insb
dec
lcall
scas
loop
fbld
xchg
sub
dec
xchg
repnz
ds
es
push
cmp
enter
loope
sub
loopne
xor
bound
cs
adc
jno
ja
in
movsb
lods
inc
fnstcw
mov
outsb
dec
fidivs
sarb
hlt
xchg
push
mov
mov
push
push
nop
daa
add
scas
cmc
xchg
push
movsl
enter
pop
pop
stc
mov
shrl
pushf
and
pop
inc
test
jae
incb
movsb
pop
fsts
jb
inc
dec
in
jl
sbbb
scas
xor
ficomps
pop
repnz
dec
cli
xchg
jle
fnsave
mov
in
jle
dec
repnz
cli
xchg
push
mov
pop
testb
jmp
ficomps
push
mov
xchg
sub
pop
je
nop
std
push
out
mov
scas
inc
adc
shrb
sbb
clc
push
subl
jge
lea
andb
loopne
push
jge
icebp
scas
add
mov
popa
push
test
lahf
cwtl
das
into
loop
lcall
pop
push
mov
mov
or
sub
or
mov
dec
in
fidivl
or
mov
pop
pop
add
lods
mov
das
jecxz
fsubr
incb
xor
push
dec
in
shlb
add
test
sub
in
pop
and
dec
loopne
sub
cs
insb
adcl
ljmp
push
call
push
inc
cmp
or
loope
and
je
fidivl
lods
push
call
dec
ds
inc
outsl
xlat
add
jmp
xor
rclb
jmp
out
mov
ljmp
dec
in
sbb
xchg
dec
cmp
sbb
push
mov
mov
dec
jecxz
xor
mov
pop
jo
or
les
mov
fsubrs
xchg
add
mov
cmp
imul
xchg
testl
lea
mov
enter
mov
bound
xchg
pushf
xchg
sub
mov
mov
pop
mov
cmp
mov
test
out
xchg
cs
ds
insb
push
shrl
nop
mov
cmpsl
xchg
aad
lahf
ss
jecxz
cmp
cmpb
mov
fimull
mov
daa
das
cltd
xor
test
jle
into
scas
cltd
xchg
lods
lret
testb
insl
test
xor
jp
push
lods
xchg
in
ret
mov
jecxz
jmp
push
cmp
outsl
je
inc
mov
les
adcb
in
inc
xor
arpl
lcall
or
add
out
inc
and
lds
mov
jp
clc
adc
movsl
dec
arpl
jae
mov
jne
ret
repz
pop
cmp
sahf
inc
pop
call
lea
or
mov
leave
pusha
das
adc
or
gs
xchg
lahf
sbb
jb
jmp
push
jmp
cmp
lock
mov
fnstsw
leave
mov
lock
or
mov
shrl
repz
push
lods
sub
data16
mov
jg
mov
pop
jae
jne
jp
pop
stos
ja
jecxz
int3
mov
ljmp
mov
testb
les
sbb
lret
and
aaa
insl
sub
cmp
cmp
inc
cmc
mov
adc
mov
cmp
add
add
dec
rcrl
sti
es
jp
mov
mov
dec
mov
out
arpl
cmpsl
je
lcall
or
adc
in
xchg
mov
dec
mov
sub
data16
dec
xchg
test
inc
push
aad
out
aaa
jne
fdivs
ror
ss
je
ret
fidivl
xorb
add
sub
cld
icebp
xor
mov
or
int3
out
test
xchg
out
repz
jns
xlat
faddl
frstor
insl
mov
mov
daa
mov
clc
inc
xchg
loop
into
mov
mov
stos
sbb
lret
pushf
nop
in
mov
imul
test
in
popf
push
outsb
pop
mov
xchg
xchg
jo
xor
fisttps
cmpsb
push
sti
clc
cs
inc
push
shll
jecxz
in
sub
jl
lret
inc
aas
call
fadds
mov
or
or
push
adc
icebp
mov
adc
pop
cmp
fbstp
popa
fistpll
push
das
mov
inc
pop
repz
and
aas
dec
jmp
xorb
xor
push
sti
and
pusha
cmpsb
out
inc
insl
jae
dec
ret
sbb
jb
or
aaa
dec
repz
inc
lds
mov
ds
jns
adc
loop
xor
inc
insl
jg
cmp
jl
inc
loopne
mov
cltd
xchg
rclb
add
cmpsl
movsl
data16
mov
push
iret
ficomps
cmp
scas
leave
adc
mov
adc
hlt
divl
ret
jg
jecxz
xor
and
push
mov
inc
pop
int3
add
cmc
int
mov
mov
push
adc
stos
pusha
movl
nop
cmp
push
prefetch
or
sbb
xchg
jo
popf
sbbl
mov
repz
outsb
rol
and
faddp
mov
pushl
mov
ljmp
xchg
out
push
mov
cmp
cmc
mov
loop
sbb
or
xor
out
pop
sar
xor
mov
add
jg
loope
mov
ljmp
in
imulb
loope
loope
pop
fdivs
fisttpl
test
scas
jae
mov
cli
pop
ds
xlat
pop
aam
cli
xchg
aas
cmc
sahf
xchg
mov
pop
pop
hlt
jg
mov
cmp
outsb
sti
push
mov
push
push
in
test
inc
mov
iret
xchg
jnp
and
cmp
aad
int
push
icebp
xor
add
out
daa
movl
mov
inc
jecxz
mov
mov
sbb
xchg
and
jle
adc
fs
lock
movsb
inc
xchg
jge
divl
jns
dec
dec
mov
int3
push
push
cwtl
test
ljmp
adc
dec
and
ss
jle
xor
mov
movlps
sbbb
cmp
popf
add
push
adcl
and
jmp
lcall
outsl
dec
xchg
js
pop
mov
bound
lcall
push
jl
push
xchg
mov
out
push
jno
push
adc
subb
mov
jbe
adc
mov
and
jp
ja
popf
and
adc
call
sarb
sub
sbb
push
jmp
mov
push
and
divl
mov
in
divb
cli
stos
push
call
mov
or
cs
lock
mov
lret
cmp
out
mov
movsb
loop
adc
data16
sub
xchg
mov
loop
pop
test
cmp
std
lcall
out
xorl
adc
adcl
fwait
add
test
and
mov
inc
scas
pusha
cwtl
repz
inc
mov
sarl
push
jmp
fidivs
fxch
lods
les
or
inc
mov
mov
jb
fwait
sbb
mov
data16
orl
xchg
adc
or
loope
aas
icebp
aas
mov
add
js
ret
test
lret
xlat
mov
push
das
les
aas
mov
cwtl
xchg
sbb
sahf
mov
outsl
sarb
sbbl
ficoms
mov
out
outsb
mov
and
or
inc
lret
mov
ljmp
sbb
or
out
inc
pop
test
dec
int
test
ja
dec
lods
pusha
outsl
shlb
mov
add
popf
adc
xchg
lods
adc
xchg
pushl
out
icebp
xor
mov
loop
or
sub
fisttps
sub
fists
insb
mov
and
pushf
xchg
cs
xchg
jae
jo
je
pop
repz
xchg
push
mov
loopne
push
lret
out
adcl
pop
movsl
data16
lea
pop
cmc
pop
sbb
jmp
inc
out
and
mov
lcallw
in
sbbb
add
loope
xor
dec
shll
sub
test
cld
or
sub
pop
mov
and
inc
aaa
or
mov
mov
jmp
stos
cwtl
mov
and
cmpsl
fs
test
pop
shlb
sub
sti
out
xor
insl
sub
inc
fcmovu
jb
mov
push
mov
insl
pop
pop
jg
jo
xchg
daa
jecxz
inc
mov
hlt
xchg
sbbl
lods
cmc
daa
sbb
faddl
jnp
inc
inc
adc
subb
les
out
and
cmp
enter
jo
pop
in
mov
lods
bound
imul
cmp
mov
mov
cwtl
lods
push
mov
sbb
es
mov
cmpsl
insb
add
nop
imulb
or
mov
jle
sub
xchg
sub
daa
cmp
cmc
aam
into
out
mov
xor
mov
jne
std
lahf
test
jno
xor
mov
js
enter
adcb
or
pop
xor
nop
daa
mov
loop
jmp
jecxz
cmc
daa
mov
sti
xchg
cmp
and
popa
xchg
lahf
cmp
jo
cld
xor
jne
mov
divb
adc
test
jns
sbb
xor
mov
out
adc
in
out
imul
jmp
and
shl
dec
in
hlt
jae
mov
cmc
sub
test
jns
fsub
sbb
into
aam
adc
stos
sbb
xor
jmp
mov
fptan
sbb
push
cld
dec
outsb
fdiv
sbb
scas
sar
loopne
dec
enter
add
sbbl
mov
pusha
inc
sub
bound
xor
jbe
add
lods
and
mov
jmp
mov
aas
push
rorb
or
add
push
adc
mov
or
outsl
fwait
sub
adc
setbe
pop
xor
fs
scas
bound
push
mov
je
pop
iret
cmp
mov
mov
mov
xchg
push
push
enter
xlat
sahf
and
xlat
jge
sub
sahf
pop
fstps
or
jecxz
xchg
sub
sub
adc
mov
sub
fisubs
les
data16
negl
cmpsl
pusha
mov
cmp
dec
sbb
pusha
arpl
test
dec
loopne
pop
cmc
xor
or
and
stos
pop
add
adc
push
mov
inc
sbb
add
mov
mov
add
adcb
cwtl
cmp
push
cmpsl
adcb
pslld
xchg
mov
xor
xchg
sub
xor
pop
push
pop
pop
std
cmp
cmpb
adc
push
sub
das
mov
insl
cltd
cld
out
cmp
shlb
out
in
icebp
push
mov
hlt
mov
sub
mov
jnp
add
push
mov
out
scas
popa
fldcw
outsb
pop
cli
call
pop
cmp
mov
in
jbe
jae
mov
mov
cmp
jo
cmc
pop
out
insl
mov
movsb
sub
pop
int3
pop
inc
dec
rcll
mov
cmpb
dec
push
lret
lret
inc
mov
icebp
mov
out
pop
push
add
repnz
pop
cmpsl
adc
xchg
mov
fstps
add
fldl
or
mov
sti
mov
sub
mov
mov
fidivrl
or
pop
das
popa
popa
mov
push
inc
pop
shlb
push
ljmp
inc
test
imul
cmp
cmp
test
ja
inc
fdivp
cmp
daa
scas
adc
adc
pop
xchg
outsb
mov
popa
adc
pushf
xor
sbb
in
mov
jmp
mov
and
mov
jmp
out
mov
adc
fsubr
xor
mov
jmp
test
aad
ret
jmp
popa
mov
push
mov
adc
test
aas
adc
jecxz
and
loopne
fs
clc
mov
out
cmp
loop
lret
mov
lahf
adc
xchg
out
push
rorb
stos
push
fcmove
inc
jmp
cmpsl
pushf
jno
inc
push
push
mov
or
movsb
cmp
xchg
push
add
push
and
push
lret
inc
aas
and
fwait
mov
inc
subl
xorb
sbb
inc
je
xor
mov
movsl
inc
ds
cs
push
hlt
sub
inc
xlat
cmpsl
cmp
sbb
add
push
fwait
mov
add
adc
adc
xchg
ss
and
mov
cmpsl
add
cwtl
dec
mov
hlt
mov
cmp
push
xor
in
xor
xlat
inc
pop
insb
cltd
jo
or
mov
sub
jb
cltd
xorb
mov
out
sub
aad
in
in
test
scas
adc
and
js
sub
lods
push
iret
aas
gs
mov
sub
mov
cmp
mov
mov
cmpl
add
adc
jmp
pushf
mov
ljmp
mov
adc
adc
push
pop
iret
pusha
mov
inc
test
in
dec
mov
xchg
or
xchg
add
pushl
and
icebp
test
adc
movsb
ficompl
add
repnz
mov
lods
xchg
sub
repnz
jo
cmp
les
daa
fcmovbe
int3
movsl
cmp
incb
push
lret
add
in
mov
imul
pop
into
repnz
and
and
xchg
pop
stc
movsd
scas
shlb
and
mov
jl
or
inc
popf
pop
mov
popa
sbb
orb
or
cld
shl
in
and
or
mov
sbb
daa
lldt
pushf
lea
cmpsl
cs
jl
cmp
sbbl
lcall
sbb
popf
shll
fwait
sarl
jae
int3
jnp
mov
ja
xor
into
dec
push
fisttpll
sub
in
xchg
xor
pop
enter
push
iret
popl
daa
loopne
pop
adc
cmpsb
mov
adc
test
loope
ficoml
mov
rcrb
cmp
pushf
aam
and
jl
rcrl
std
mov
jecxz,pt
stc
or
int3
dec
decl
pop
in
cmpsl
jne
shr
orl
dec
shrl
fidivrs
dec
cmp
ret
jbe
cld
and
adc
xchg
aaa
add
xchg
cmp
push
lods
mov
pop
pushf
cli
xor
mov
dec
mov
sbbb
mov
inc
shll
dec
mov
push
jecxz
test
dec
or
int
jno
mov
dec
inc
addr16
scas
icebp
inc
cmp
push
cmpsb
push
in
incl
xor
and
ds
jb
test
leave
in
sbb
xchg
xlat
ljmp
xlat
sbb
imul
ss
mov
jg
mov
xchg
xchg
stos
in
rcl
hlt
insb
pushf
mov
daa
in
out
in
or
pcmpeqb
cmp
bound
ds
inc
lods
cmp
pop
popa
mov
fistl
mov
inc
ss
push
pop
movsl
push
push
inc
cwtl
jg
inc
adc
popa
push
xchg
mov
cmp
imul
mov
sbb
mov
js
inc
stos
in
xchg
movntps
jns
push
rcrl
sub
jnp
sub
mov
std
sbb
mov
lock
lds
add
icebp
or
add
jns
icebp
ds
sbb
and
jecxz
cmp
xchg
pop
into
cmp
fmull
lcall
xchg
cmpsl
dec
loopne
jp
in
aas
mov
or
cmp
adc
test
call
or
push
rorl
add
out
cs
xor
xchg
xor
and
repz
daa
fisttps
xor
jno
push
icebp
out
rol
sbb
sub
in
ljmp
push
sti
and
icebp
rorl
push
aad
test
out
lods
pop
loope
fiaddl
mov
jo
xor
movsl
push
aas
xor
lea
in
xchg
aaa
fs
mov
lret
vpmulhw
sarb
fldl
mov
push
sbb
mov
sti
cmp
dec
pop
xor
ret
mov
adc
mov
call
loopne
popa
loop
pop
adc
pushf
nop
addps
std
xchg
adc
xor
loope
pop
pop
in
inc
sub
stos
fldenv
rolb
filds
or
cwtl
das
fbld
sub
inc
mov
sub
pop
js
popa
fwait
test
cld
jl
cs
stos
bound
scas
popa
inc
pop
popf
xchg
insl
and
lcall
bndstx
jmp
adc
adc
or
or
and
sar
es
xchg
sbb
xor
add
aas
add
xor
add
into
gs
mov
push
sbb
int
outsl
mov
mov
pushf
sbb
cltd
or
dec
jns
xor
inc
lcall
dec
mov
push
or
pop
cmp
aas
arpl
fmull
mov
cmp
jne
or
ljmp
jl
add
inc
sub
sbb
add
sbb
rorb
push
sub
test
lret
lock
cmp
mov
roll
sub
push
dec
icebp
xor
ljmp
pop
adc
sbb
jge
clc
xor
cmpsb
push
and
mov
addr16
jp
xrelease
cmc
repz
popf
xchg
adc
add
in
clc
pop
ret
test
dec
mov
mov
stc
subl
ljmp
xchg
xchg
or
dec
mov
daa
sbbb
jne
jle
cmp
loop
jmp
pop
roll
notb
repz
sub
loopne
filds
pop
pop
mov
jle
xchg
insb
jg
jmp
int
jnp
inc
mov
dec
mov
insl
aaa
into
scas
movsl
aaa
jmp
icebp
shlb
movsl
out
pop
sbb
xchg
mov
stc
and
adc
sbb
sbb
decl
sbb
cmpl
and
jmp
add
and
inc
sbbl
divb
adc
inc
loopne
arpl
shrb
mov
pop
push
mov
push
mov
fs
ja
push
mov
lock
xchg
mov
clc
and
sbb
popa
cltd
in
and
ljmp
psubq
mov
sub
cld
ljmp
enter
xor
jno
mov
dec
daa
test
dec
push
imul
pop
jle
and
out
and
out
fisttpll
in
pop
cmp
mov
jnp
repnz
mov
sub
ret
fmuls
fcoms
fdivs
int
rol
ficoms
dec
out
movsb
icebp
xor
movzbl
outsl
out
fsubrs
and
aaa
cltd
out
aam
fiaddl
fsub
sbb
repz
gs
cld
and
scas
cwtl
das
rclb
repz
jecxz
pop
sar
xor
movsb
ficoml
push
test
cmp
dec
out
outsb
fists
jns
cmpsb
ds
les
bound
pop
scas
aaa
loop
cmpsb
sarb
pusha
icebp
mov
je
adc
cld
test
xchg
in
sbb
iret
nop
sarl
lock
mov
fidivs
pop
cmp
xchg
in
xor
in
rorl
mov
sahf
and
cmp
lret
xor
and
subl
cwtl
xor
jecxz
mov
mov
mov
aad
mov
inc
fstps
adc
xchg
jo
cli
jo
adc
pushf
and
fnstenv
jmp
mov
adc
in
imul
jg
movsb
mov
dec
stc
call
rorb
fistpl
or
and
cmp
lret
lock
jb
aad
mov
push
shll
hlt
jb
push
jmp
xchg
xchg
test
pop
or
in
mov
cmpb
cwtl
je
cld
cmpsb
imul
in
dec
jmp
and
repz
nop
and
inc
inc
into
pop
lods
jmp
fdivrs
lret
das
and
pusha
xchg
sbb
subl
fcoms
std
out
mov
or
mov
add
push
shll
pop
ret
int
into
repnz
adc
fidivl
into
xchg
decl
lcall
and
xor
out
mov
jp
fsubrl
int3
test
fdiv
fiaddl
pushf
jg
loopne
cs
lock
sbb
clc
xchg
shr
int
add
loope
dec
mov
repz
mov
jp
imull
flds
pop
fisttpll
jle
inc
mov
ret
cmp
sbb
dec
mov
into
aas
xlat
sbb
dec
stos
aad
dec
into
cli
mov
fs
sti
cs
cmpsl
push
jl
push
dec
lret
fiadds
bound
jl
mov
call
cmpsl
outsb
psrlw
jb
movl
sbb
call
lret
pop
or
test
cltd
add
sbb
mov
dec
fwait
mov
int
xlat
add
lea
pop
les
adc
clc
mov
lock
ljmp
stc
adc
sub
fildl
adc
mull
pop
iret
mov
out
repnz
call
adc
movsl
xchg
leave
faddl
add
xchg
mov
outsl
push
xor
test
sbb
push
es
xchg
dec
cmc
sub
dec
aas
loopne
test
iret
cmp
fadds
pusha
in
cmp
jb
inc
insl
out
addb
fsubrl
lret
ljmp
lret
sahf
adc
mov
orl
sbb
cs
mov
ss
js
repz
xor
dec
in
pop
faddl
ret
fmuls
jge
fisubrs
ss
mov
xor
aad
adc
stos
test
sub
mov
fldt
test
fucomip
es
addr16
push
mov
pusha
scas
jb
jg
dec
push
push
repnz
pop
icebp
xor
sahf
sub
and
fs
mov
in
das
pop
cmp
test
popa
fwait
jl
jb
lods
pop
jo
imul
bnd
cmp
int
gs
popa
lock
push
jne
push
ret
loope
dec
loop
mov
lahf
adc
cwtl
cmpsl
jl
roll
cmp
mov
mov
add
imul
icebp
cmp
dec
mov
mov
jp
pop
push
mov
jae
jge
mov
negb
push
mov
or
mov
inc
pop
divb
lock
xchg
js
sub
inc
dec
sahf
push
shlb
inc
mov
fimuls
ret
imul
push
pop
mov
rorl
adc
js
leave
inc
cmp
and
and
inc
jg
insl
mov
mov
rorb
adc
daa
or
pop
xchg
or
loope
push
sbbl
and
xchg
jp
call
mov
in
clc
mov
loopne
push
ret
hlt
pop
into
rcrl
jnp
pop
sbb
int3
push
outsl
push
mov
mov
idivb
aad
inc
xor
fnstcw
repnz
and
push
pop
or
testb
inc
out
sbb
xor
pop
rclb
pop
aam
mov
dec
movsb
cmp
aam
lcall
shll
push
adc
arpl
xor
xchg
outsb
dec
or
mov
mov
cmc
je
xlat
stos
inc
shl
arpl
sub
imul
mov
pop
pop
push
lret
mov
icebp
xor
lcall
mov
mov
sub
pop
shll
lods
and
pop
push
int
cld
ja
ja
pop
test
push
lret
cld
jb
cmp
rclb
cmp
mov
rcrl
imul
popf
adc
inc
mov
xchg
sub
inc
mov
pop
out
xchg
or
push
mov
or
xchg
pop
xchg
sub
hlt
call
mov
pop
mov
lods
cmp
fstpl
xlat
dec
mov
xchg
jle
mov
mov
pop
out
rcl
test
ret
mov
insl
in
pop
push
pop
push
popf
cmp
loope
imul
push
cld
lea
push
imul
test
dec
pop
test
add
mov
pop
jecxz
mov
out
or
mov
xor
inc
dec
or
jp
shrl
fwait
push
int
push
mov
out
or
inc
arpl
jns
mov
mov
mov
cmp
cmp
pop
out
ljmp
into
aas
jl
mov
xchg
into
inc
popf
testl
push
sub
out
xchg
mov
hlt
in
cwtl
call
push
pop
cmp
nop
jno
jno
mov
scas
fcomps
mov
xor
arpl
mov
cs
ljmp
sbb
pop
dec
adcl
mov
jmp
orb
insb
fmul
or
aam
xor
not
daa
cmpsb
ficomps
cmp
out
push
ljmp
addr16
inc
cmpsl
mov
dec
add
and
mov
xorl
xchg
popf
lret
and
and
imul
sbb
imul
ret
ja
icebp
push
ret
inc
cmp
sub
int
iret
or
xchg
mov
into
xlat
ljmp
lret
aas
sub
aaa
mov
jnp
push
sahf
dec
or
js
push
add
jmp
icebp
xor
dec
xchg
fcoml
ja
leave
push
cmp
sbb
rorl
jae
lea
mov
mov
ficoms
and
xor
aam
jb
xor
dec
sbb
mov
adc
fs
inc
adc
fmull
mov
imul
andb
in
push
add
xchg
testb
jecxz
out
fwait
into
fnstenv
sub
dec
lret
add
xchg
test
ljmp
sub
xchg
pop
int
push
push
movsl
jle
jb
and
iret
pop
jle
adc
pushf
jbe,pt
xor
cs
mov
stc
mov
scas
jecxz
fwait
push
jo
jl
jo
popa
cwtl
jnp
pop
xchg
inc
mov
icebp
adc
push
xor
popf
cmp
scas
fisubs
and
cmp
and
sbb
cld
or
test
jne
push
sub
inc
pop
stc
hlt
sub
inc
das
out
inc
cmp
daa
mov
push
cli
pop
add
lock
rcrb
mov
xchg
lret
sti
push
call
push
imul
mov
ljmp
inc
jae
dec
les
jecxz
xchg
das
mov
dec
je
push
fnsave
add
or
outsb
cli
scas
xchg
out
leave
addl
idivl
xchg
test
ret
mov
mulb
push
sub
cmpsl
popf
std
sub
adc
lret
call
out
pop
pusha
ss
sub
call
mov
je
sub
in
mov
mov
in
xchg
mov
xchg
push
cmpsb
rclb
mov
inc
sub
shrl
into
rclb
jne
xor
stc
push
rcrl
mov
hlt
in
and
cltd
xor
mov
stc
testb
out
adc
sti
lods
cli
xchg
push
popf
rolb
mov
or
mov
xor
mov
and
inc
js
mov
cmp
xchg
test
clc
loop
ljmp
lret
es
cmc
mov
in
mov
ss
out
cmpsl
leave
jmp
and
out
mov
push
test
lods
push
pop
mov
mov
lds
sbb
jae
mov
arpl
movsl
and
push
or
push
add
addr16
adc
std
jnp
cmp
ja
loopne
add
insb
add
ret
popf
je
cltd
cmp
ds
andb
xor
loopne
inc
jle
sbb
fcomp
loopne
shrb
xchg
inc
pop
je
sbb
or
sub
cs
mov
lea
xor
pop
push
insb
pop
push
bound
andl
jl
sub
gs
xchg
pop
adc
adc
pop
add
jo
test
icebp
jge
cs
xor
popf
repz
or
into
pop
pushl
mov
js
jge
jne
movd
jno
pusha
jle
ss
add
lock
imull
inc
or
ret
mov
fdivrs
dec
adc
arpl
cmpsl
test
clc
mov
stos
inc
or
cmpsl
sub
cmp
pop
jns
filds
xchg
cmp
xor
js
xlat
paddq
or
mov
fdivrs
aas
mov
cmpsb
idivl
movsb
or
dec
adc
scas
fstpt
nop
jbe
sub
aas
das
mov
xor
xchg
mov
lret
dec
movsl
imul
lcall
js
pop
add
insl
ret
mov
mov
sti
dec
mov
mov
jo
xor
jp
fidivrl
ja
jne
andl
dec
pop
xlat
jp
lcall
mov
xchg
ljmp
iret
pop
out
inc
or
mov
xchg
inc
out
mov
loopne
mov
jmp
add
push
pop
add
pop
jp
enter
sbb
mov
fsubr
xor
outsl
jmp
adc
cltd
inc
mov
adc
test
test
or
call
jne
repz
daa
gs
cli
xor
mov
stos
stos
xor
xchg
rcrl
into
scas
xor
orl
stos
xor
mov
xchg
inc
loop
mov
cmp
das
rcr
pop
mov
fstpt
rcrl
sbb
fidivs
fnstcw
sarl
push
pop
sub
mov
cmpsb
gs
jmp
mulb
add
inc
seto
mov
loope
ljmp
fisubrl
scas
push
mov
mov
sub
arpl
repnz
or
lcall
mov
xor
pop
aam
sub
int3
out
sarb
aaa
movsb
fwait
sarl
cmpsb
ret
test
add
stos
mov
mov
mov
inc
xchg
out
insb
imul
pop
ret
xchg
push
xor
das
mov
dec
or
fidivrs
and
int3
loopne
jbe
pop
cld
sub
pop
enter
insb
out
push
pusha
fnstsw
inc
mov
or
cmp
xchg
jg
push
add
inc
adc
lds
sbb
inc
mov
aad
in
lcall
mov
xchg
jge
pop
notl
arpl
jg
dec
mov
int
push
pop
cld
dec
fs
adc
inc
adc
nop
in
es
add
mov
sbb
mov
cs
inc
xchg
inc
adc
popf
in
stos
outsl
dec
or
mov
ret
in
jge
ss
push
call
sub
push
dec
pop
sti
cmp
mov
xchg
jno
int
push
jo
push
mov
dec
cmp
into
xchg
int
push
adc
mov
mov
nop
lock
or
add
sbb
jge
int3
inc
lock
adc
or
arpl
mov
movsl
inc
adc
push
int
push
in
add
lcall
jo
xchg
int
push
int3
arpl
cmp
nop
cmc
aad
or
add
rcrb
mov
outsb
dec
xor
xchg
jg
and
lds
movsb
dec
pushl
inc
xchg
xchg
mov
mov
mov
popa
mov
jle
ds
ficoms
icebp
fs
mov
sub
pop
ret
pop
cli
jne
out
cs
popf
cmp
lds
lock
mov
mov
and
jo
mov
popf
cmp
mov
mov
inc
cmp
adc
mov
mov
movsb
pop
cli
jno
lock
xor
and
and
repz
movsl
xor
aad
int3
mov
scas
loope
shlb
bnd
stos
xor
adc
sti
int3
xchg
test
mov
mov
out
xchg
push
inc
xlat
ret
xchg
pushf
inc
mov
mov
xchg
loopne
pop
add
incl
mov
ljmp
adc
cmp
stos
mov
aaa
popf
fdivrs
pop
testl
pop
add
dec
adc
jge
repz
insl
notb
jle
out
xchg
dec
adc
or
js
fiadds
cmp
outsb
repz
repz
jmp
out
je
add
adc
or
idiv
pop
add
cmp
push
repnz
mov
insl
cmc
aad
dec
adc
adc
fstpt
jo
xchg
dec
pop
mov
icebp
inc
mov
xchg
inc
xchg
in
jbe
xchg
mov
adc
imul
icebp
dec
push
dec
fcoms
hlt
ret
mov
pop
push
popf
imul
andb
jne
dec
pop
push
mov
pop
test
xchg
pusha
jmp
lahf
stos
xor
jae
js
mov
mov
mov
faddl
or
pop
add
jnp
std
xchg
fnstsw
ljmp
jmp
std
xor
fcmovnu
mov
inc
vmread
add
push
imull
rorb
std
out
into
nop
add
out
jo
pop
cmp
dec
es
pushf
pop
add
test
push
sti
arpl
mov
jmp
fdivrl
xchg
cmp
and
adc
je
dec
dec
or
cltd
ljmp
sub
cmp
mov
pop
cmpsl
stos
iret
mov
mov
jae
loope
push
add
jbe
cmp
xlat
add
jbe
pmulhuw
pop
sub
in
not
xchg
xor
rclb
negb
inc
adc
jecxz
aad
movsb
stc
cltd
cmp
shlb
roll
imul
xor
imul
pop
and
movsl
lret
cmp
fwait
sti
adc
sbbl
inc
add
jnp
in
mov
or
sub
cwtl
cmp
cmp
test
mov
dec
push
xlat
mov
orl
fdivrs
gs
push
mov
mov
fnstsw
outsl
dec
or
cmpsl
ja
jle
mov
cltd
cmp
cwtl
aaa
enter
pop
mov
mov
fsubrs
dec
adc
jnp
scas
xor
stos
inc
lods
xor
rorb
sahf
xchg
aas
xor
negb
scas
jecxz
and
xor
bound
fiadds
mov
sub
loop
cmp
iret
pop
push
js
mov
sarb
mov
xor
pop
sbb
shll
movsl
push
insl
xor
cmp
pop
sub
dec
sbb
ds
in
imul
icebp
mov
jne
jge
daa
and
out
mov
stos
cmp
jb
xor
xlat
orl
pop
xchg
aaa
mov
mov
lret
xchg
cmp
lahf
ds
mov
lret
mov
mov
mov
cwtl
mov
pop
repz
pop
mov
inc
dec
adc
mov
fiadds
and
dec
adc
mov
mov
dec
aad
push
mov
loope
dec
cmpsl
add
cmp
das
mov
addr16
cmp
addr16
negl
je
int
psrlw
sbb
arpl
push
ret
mov
test
out
jle
xchg
movb
jns
in
jb
jo
xchg
andb
pop
cwtl
aad
mov
iret
popf
inc
xchg
pop
ja
xor
orl
and
fildl
push
jnp
divl
repz
sbb
dec
adc
mov
orb
lret
lcall
sub
push
mov
mov
sbb
add
popa
data16
pop
mov
and
aas
in
out
pop
cli
cmc
ds
push
jmp
fmulp
pop
xor
dec
or
jne
cwtl
sbb
push
sub
inc
lcall
xlat
jecxz
movsl
fimull
adc
jmp
mov
mov
sbb
pop
dec
popf
cmp
stos
sub
jo
mov
mov
ret
sbb
pop
push
jo
dec
push
xor
xchg
insb
and
xchg
jle
jl
cmp
out
sub
lods
adc
xor
bound
enter
aad
xchg
cmpb
xchg
add
sbb
and
sub
lods
xor
mov
pop
mov
mov
xchg
std
dec
or
fmuls
sbb
xor
inc
icebp
popa
gs
jae
jg
out
mov
addr16
fidivrl
jl
sbb
adc
adcb
fnstcw
daa
fistpll
mov
insl
call
divl
cmc
and
roll
xchg
sahf
ja
inc
test
mov
xchg
cmp
lods
push
cld
pop
sub
test
sbbb
enter
testl
mov
lock
push
add
lret
sub
adc
pop
aaa
mov
xchg
lret
adc
mov
repz
sub
lret
int
inc
scas
or
es
and
hlt
mov
nop
pop
in
xor
test
pusha
mov
mov
loop
cmp
clc
rclb
aas
add
mov
mov
pop
outsb
pusha
adc
aad
repz
dec
pop
mov
or
jle
pusha
add
pop
into
mov
scas
xor
fnstsw
movsb
aas
sub
ret
es
scas
mov
push
add
aas
sahf
mov
test
pop
mov
mov
lea
fidivrl
adc
and
xor
iret
or
cs
sahf
mov
rcl
mov
pop
repnz
pop
add
push
out
mov
push
test
pop
push
cmp
pop
iret
test
sbb
xchg
or
pusha
xor
and
mov
and
out
cmp
sub
jp
mov
mov
enter
mov
or
xchg
cld
jns
add
jp
rcrb
les
pusha
inc
or
das
mull
or
inc
insl
jno
stos
lcall
leave
inc
adc
mov
mov
push
add
ret
test
mov
sbb
test
pop
mov
pop
push
insb
call
adc
arpl
int3
jns
mov
inc
test
js
cltd
mov
fdivp
xlat
sub
mov
dec
rcr
jl
adc
ret
mov
adcl
outsl
dec
or
pop
sti
popf
in
adc
test
hlt
daa
jmp
fcmovnbe
cmp
pushf
or
mov
neg
popf
xor
or
cltd
cmp
arpl
or
mov
xor
loop
and
outsb
cmp
xor
mov
lods
cmc
pop
sub
pop
push
ljmp
cld
fistpll
bndldx
xor
sub
in
jno
aas
dec
cmp
xchg
shrb
ret
sub
pop
cmpsl
stos
sub
fistps
sti
data16
jb
insl
out
imul
sub
pop
aam
mov
mov
dec
mov
mov
cli
cltd
cmp
lock
inc
add
jecxz
mov
dec
mov
push
rcr
fstpt
add
out
adc
int3
mov
or
sub
xor
aaa
cli
pop
inc
push
dec
or
aas
mov
adcb
sti
pop
fwait
cmp
iret
imul
ss
aad
cmc
pop
cmp
sub
sbb
jmp
jl
jne
int3
jo
in
xchg
dec
adc
mov
pop
rcll
fiadds
cli
push
adc
sbb
es
dec
inc
adc
mov
cmp
push
or
imul
fs
outsl
pop
clc
mov
jle
in
xor
add
pop
mulb
es
jge
cmp
xchg
adc
lods
int
inc
or
and
jae
test
ss
pusha
jl
fmulp
xchg
jg
js
mov
mov
xor
add
jns
sahf
inc
lods
insl
in
mov
or
mov
int
sbb
dec
adc
mov
inc
pop
pop
lods
xor
fs
cmpsl
dec
push
and
xor
push
je
jno
or
clc
addr16
cmc
pop
into
ja
xor
adc
add
daa
stos
loope
and
cs
insb
je
xchg
cmp
mov
jb
adcb
popl
and
push
stos
sub
popa
mov
mov
jle
mov
ja
mov
mov
ss
shl
mov
repnz
adc
mov
in
jae
dec
lret
adc
outsb
or
sti
les
jp
pop
das
out
and
fs
xor
into
cmp
int3
cmp
js
je
sub
and
add
ljmp
mov
lock
idivl
xor
int3
jecxz
cmpsl
pop
sbb
popa
sub
cmp
imulb
push
mov
mov
inc
fistpll
inc
dec
or
sbb
lds
jno
sbb
fistpll
pop
movsb
xor
loop
xorl
fidivrl
and
mov
mov
mov
ja
and
fdiv
adc
out
imul
mov
hlt
pop
or
inc
push
std
pop
pushf
inc
mov
stos
sub
xor
pop
add
bound
filds
shr
insb
out
or
divps
aaa
movsb
fmuls
push
add
cli
mov
lret
sbb
and
jne
lret
notl
sbb
iret
jecxz
adc
jns
popa
cmc
fwait
and
fidivrl
fidivs
dec
add
mov
and
mov
rorb
and
cmp
dec
fsubrl
lcall
test
lods
xchg
jl,pt
push
mov
cmp
stc
incl
fldl
mov
scas
push
negl
mov
pop
jecxz
ret
test
jl
sub
dec
pop
test
fiadds
dec
call
lock
lea
fcmovne
xchg
pop
call
repnz
mov
stos
fadds
cmp
cmpsl
adc
ret
inc
adc
add
add
insl
stos
gs
decb
mov
add
pop
lret
mov
adc
scas
stos
sub
in
mov
hlt
dec
call
subl
xchg
aam
imul
std
cld
or
cs
xor
jmp
test
and
inc
jle
jbe
cmpsl
ds
cld
arpl
mov
sub
mov
orl
pop
cmp
mov
mov
pop
cli
xchg
mov
movsb
orl
pop
xchg
inc
sub
push
push
out
ja
imul
or
ja
repnz
sbb
jae
mov
inc
hlt
push
ljmp
dec
adc
mov
lea
and
xchg
outsb
iretw
dec
jp
push
add
fs
int3
mov
lock
mov
outsl
and
popa
push
js
insl
jbe
into
mov
mov
lock
mov
movsb
and
mov
out
inc
insl
call
lret
cmp
sbb
shrb
xchg
popa
and
push
repnz
ss
dec
or
pusha
mov
lcall
je
les
jge
adc
cmc
cmp
mov
shrb
mov
push
cli
lret
pop
sbb
xchg
lods
xor
aam
addl
xchg
imul
outsl
jmp
adc
cld
pop
cmp
loop
std
xchg
jecxz
xor
cmp
inc
push
pop
add
inc
dec
adc
xor
jne
in
pop
xchg
std
push
jp
jle
add
int
push
mov
mov
stos
hlt
arpl
lods
inc
adc
or
lds
adc
test
inc
nop
inc
lea
out
imul
mov
dec
clc
sti
push
dec
xchg
push
mov
sahf
xor
cmp
bnd
test
rcrb
push
orb
jg
xchg
data16
aad
fldcw
mov
pop
add
dec
adc
fwait
cmp
add
push
test
adcb
pop
and
xor
int
jb
xor
sahf
cmp
push
pusha
mov
jne
filds
faddl
mov
xchg
imul
sub
xchg
cmp
cmc
test
adc
or
nop
idivl
les
mov
mov
test
cwtl
stc
ficomps
jno
das
xchg
movsl
or
jns
and
mov
mov
sbb
inc
loop
filds
push
add
test
mov
aas
dec
sub
jnp
std
fs
insb
push
inc
pushf
jb
cmp
sub
out
jne
sbb
sub
push
aam
insb
pop
adcb
iret
scas
mov
xchg
fs
push
mov
mov
fnstsw
lret
ret
orb
mov
orb
xchg
mov
std
fnstenv
fadds
jmp
sti
push
push
jne
loopne
sbbl
fcomps
xor
outsl
cli
mov
sahf
stc
hlt
push
aad
push
std
inc
add
les
jecxz
gs
aam
jl
inc
pop
fildll
sahf
mov
lods
cld
pop
mov
lock
mov
out
sbb
pop
inc
pop
jge
xchg
subl
sub
lea
cmp
gs
and
jne
lahf
mov
fstl
add
mov
xor
add
pop
lods
iret
jecxz
xchg
mov
orb
in
xor
inc
push
sti
add
mov
andb
hlt
xchg
cmp
dec
loopne
xchg
std
push
xchg
adc
add
bswap
pop
pop
mov
mov
mov
adc
lret
mov
sbb
adc
call
lock
lds
and
sbb
push
xchg
adc
mov
scas
jmp
push
int3
xchg
xchg
ret
adc
jae
pop
call
bound
daa
push
cmpb
add
lret
jae
and
leave
xchg
lods
roll
jmp
test
push
adc
push
das
xchg
pop
sti
outsb
cmp
ja
jg
jb
and
js
inc
lods
movsl
stos
inc
xlat
int
imul
or
dec
fldenv
mov
int3
pop
inc
fmuls
cwtl
inc
cs
adc
sbb
xlat
pop
add
and
mov
stos
and
cmp
push
sbb
inc
pop
push
sbb
mov
adc
jnp
call
mov
xor
sar
enter
les
mov
stos
pop
push
mov
lods
stos
xor
aas
pop
add
sbb
mov
mov
ljmp
mov
sahf
inc
and
mov
mov
int3
sub
xchg
fisubrl
cli
mov
mov
cli
fs
les
lret
aaa
into
nop
and
jmp
xor
aam
mov
sbb
in
shrl
testl
adc
inc
cmpsl
mov
xorl
adc
xor
pop
call
mov
inc
pop
clc
mov
mov
adc
xchg
stos
jmp
pop
insl
outsb
or
enter
test
mov
scas
aam
lcall
test
inc
ficoml
mov
mov
roll
xchg
inc
add
in
mov
aad
inc
cmpsb
jmp
xchg
and
pop
imul
sahf
jle,pt
dec
xor
and
xor
mov
xlat
cmp
es
jmp
out
or
jle
and
lock
shr
dec
sbb
mov
movsb
outsb
mov
add
mov
mov
xor
loope
xor
sbb
mov
orb
add
subb
mov
jns
xchg
repz
repnz
mulb
fildl
imul
mov
jecxz
jge
dec
push
enter
push
jg
jg
mov
mov
test
fimuls
in
jns
mov
adc
mov
push
lods
daa
lods
xor
fwait
inc
xor
daa
and
pushf
pop
push
test
mov
dec
add
mov
mov
push
sbb
fildll
scas
cmp
clc
arpl
orb
repnz
mov
negb
dec
les
mov
jge
inc
movsl
push
sti
inc
xchg
add
pop
xchg
sarb
mov
cltd
aas
fisubs
sub
pop
outsb
mov
fidivrl
adc
pop
add
dec
adc
push
push
sti
mov
jbe
outsb
fisubrs
dec
jns
rcll
shll
loop
mov
mov
mov
add
and
xor
arpl
and
adc
dec
xchg
inc
xchg
mull
xchg
scas
shll
mov
mov
roll
fsubl
rcr
sbb
jno
push
dec
jns
orl
das
inc
fwait
push
lds
test
jae
cmp
out
dec
sub
jae
pushf
in
aam
xor
cwtl
or
out
lcall
orl
pop
jb
sbb
repz
push
scas
addr16
pop
adc
pop
aas
push
rcr
mov
push
lock
std
jle
movsl
jmp
ret
ljmp
jecxz
js
cmp
sbb
repz
ficompl
inc
push
jns
push
cltd
push
sbb
jae
stos
inc
es
hlt
push
ficoml
in
movsl
add
and
into
mov
lret
lea
cli
pop
jg
shrl
adc
jnp
rorb
jecxz
xlat
jns
testl
sub
xor
mov
scas
aas
lahf
dec
jno
mov
mov
push
ret
into
mov
inc
adc
jmp
xor
imul
mov
into
mov
lods
dec
or
jg
je
in
loop
xor
cmp
fnstsw
inc
jecxz
dec
adc
lret
scas
int3
addr16
outsl
mov
popa
jmp
mov
mov
push
xor
dec
adc
inc
jns
xor
push
rcl
sub
popa
adc
xchg
cmp
inc
and
popf
negb
in
xor
rolb
sbb
or
xchg
aas
ret
push
push
sbb
data16
dec
or
mov
enter
inc
adc
xchg
adc
aas
lcall
mov
and
aas
cmp
es
or
aam
pop
inc
push
push
mov
adc
es
xchg
xchg
sarb
mov
dec
inc
or
xchg
mov
jnp
fs
in
push
or
ljmp
cmc
or
fldl
lea
add
movsb
fisubrl
cmp
jmp
mov
cmpsl
repnz
cmp
movsl
xor
xor
adc
test
push
mov
adcl
scas
inc
push
das
pop
mov
sub
mov
lods
imul
aas
sub
adc
cmp
jno
xor
lods
movsb
aad
lret
mov
out
repz
xlat
or
pop
mov
xchg
aam
insl
or
jmp
out
push
or
out
sbb
scas
cmp
cmp
pop
lds
das
and
outsl
sbb
push
xor
or
pop
ja
pop
push
out
outsl
cld
mov
jl
jmp
sti
mov
mov
mov
fs
or
aaa
ret
test
mov
push
in
jae
stos
mov
in
push
and
pop
pop
adc
repnz
lock
out
mov
push
add
scas
or
xor
loope
fsubrs
add
adc
xor
int3
jmp
push
add
add
adc
fidivrs
adc
add
pusha
or
inc
ja
icebp
pop
push
push
and
hlt
sti
test
loope
sbb
push
push
lcall
sub
xchg
inc
adc
repz
cmp
mov
mov
xlat
push
add
subb
test
je
mov
xchg
enter
lds
and
clc
aaa
cwtl
fstpl
xchg
push
add
test
ret
push
add
aaa
mov
in
or
cwtl
pushl
jno
enter
rcrb
scas
mov
movsb
mov
cmpl
and
mov
das
jne
sub
loope
int3
cmp
xchg
push
sbb
mov
aam
rolb
inc
jmp
scas
sub
cmpsl
mov
clc
sub
dec
or
and
test
mov
mov
mov
cwtl
cld
push
push
mov
sub
mov
mov
dec
sub
out
addr16
add
out
test
les
xchg
popf
movsb
scas
xor
ficomps
lds
pop
push
stc
sub
mov
lret
xchg
repnz
aam
divb
or
xchg
inc
gs
pop
stc
stos
sbbb
inc
sub
xchg
inc
into
ss
cwtl
push
stc
pop
jp
popa
icebp
loop
ret
sbb
cld
pop
push
xchg
inc
jb
cmp
jnp
out
imul
inc
js
dec
sti
pushf
in
push
inc
arpl
les
pop
cli
hlt
outsl
bswap
and
cmp
insl
sub
mov
icebp
popw
cmp
shll
outsl
aas
hlt
insb
jb
xor
imul
mov
mov
sbb
inc
fsts
sub
data16
and
pop
xchg
jnp
xchg
jge
int3
xchg
ja
outsl
cmc
adc
sub
inc
fildl
pop
xor
xchg
sbb
add
jbe
mov
push
data16
inc
fldl
push
push
mov
popf
jl
push
cld
xchg
jo
ljmp
jl
enter
cmp
mov
bound
jge
js
jo
pop
inc
or
fsubs
xchg
mov
mov
sub
jmp
add
cmpsl
xchg
adc
aam
test
or
movsl
xor
ficomps
jne
loopne
and
pop
cld
inc
addr16
sbb
icebp
in
imul
jge
mov
cmpsb
adc
pushf
test
fs
sub
mov
mov
data16
mov
cs
mov
cmc
pop
or
pop
sti
pusha
aas
lahf
aas
out
adc
dec
jp
imul
jbe
xchg
outsb
pusha
repnz
sbbb
cmp
cmpsb
add
mov
ljmp
in
sub
addb
and
mov
mov
loop
mov
repnz
lret
js
sarb
insb
psrlq
sbb
mov
cmp
mov
mov
ss
mov
out
out
test
popf
sbb
cmp
or
push
lahf
aaa
pop
call
inc
inc
or
clc
inc
filds
cmp
repnz
stc
sub
jns
add
cltd
cmp
pop
push
loop
fldenv
jl
pop
mov
int3
aad
imul
cld
push
sbbb
data16
push
add
push
add
pop
bswap
xor
mov
lahf
mov
in
push
scas
mov
mov
add
loop
push
mov
mov
fwait
adc
dec
cltd
inc
jmp
call
addr16
addr16
xchg
cmp
mov
nop
and
xor
jg
out
cwtl
inc
jge
outsb
out
cmp
loopne
fadds
popa
inc
fidivrs
js
adc
psrld
movsl
mov
cmp
test
mov
jnp
test
add
loope
call
aam
and
xor
shlb
fimuls
jbe
pop
mov
add
mov
pop
out
jno
arpl
rclb
enter
and
rclb
mov
faddl
cwtl
and
xor
xlat
ja
out
jecxz
pop
outsb
in
insb
roll
lret
mov
lods
inc
jnp
push
jmp
mov
mov
xchg
push
xchg
dec
or
inc
cmc
mov
adc
xor
adc
mov
lret
mov
fbld
or
push
add
mov
lds
xchg
out
outsb
jmp
int
mov
sbb
les
aaa
movsb
js
adc
data16
xchg
inc
daa
mov
inc
mov
inc
sub
and
in
aaa
xchg
inc
xor
adc
hlt
loopne
mov
inc
fwait
ret
lcall
mov
mov
cmpsb
xchg
sbb
sbb
or
leave
mov
mov
mov
sub
and
cld
pop
jge
push
mov
mov
xlat
stos
sub
out
jg
and
push
jmp
mov
xor
sbb
add
fnsave
pusha
mov
sahf
jmp
xor
ret
repz
mov
inc
gs
jge
jbe
popa
xchg
pop
lcall
enter
arpl
cmpl
push
out
stos
or
mov
icebp
sub
or
loope
dec
jo
push
stc
push
arpl
mov
mov
call
incl
out
idivl
push
scas
mov
sahf
xor
pop
add
test
fldenv
jle
mov
xor
mov
cmpsl
sub
out
fldenv
dec
ljmp
scas
pop
popf
call
pop
scas
mov
sub
cld
pop
and
les
xchg
and
into
xchg
cltd
std
pusha
xor
and
add
arpl
pop
push
ja
jae
addr16
mov
dec
adc
scas
xor
outsb
in
inc
sbb
pop
lcall
xor
fidivl
fwait
sub
xchg
sbb
lods
xor
in
fisttps
or
xor
cs
jno
andb
push
std
add
xor
fdivp
push
call
std
ret
pop
jno
jnp
pop
pop
in
decl
orl
insl
je
push
jle
mov
shl
mov
add
lods
add
push
add
call
cld
mov
jge,pt
stc
scas
jo,pn
pusha
iret
adcb
orb
push
aad
inc
pop
jbe
push
test
lret
leave
fidivl
jnp
jg
sbb
nop
dec
into
push
popf
ljmp
scas
mov
shll
mov
les
cmc
gs
xchg
push
adcb
mov
sahf
xor
cmp
pop
int
nop
pand
mov
and
stc
nop
xchg
add
mov
out
sub
cmp
push
jmp
cli
fs
sub
sbb
nop
daa
xor
scas
inc
test
mov
arpl
inc
fdivl
stc
ljmp
dec
or
push
lahf
es
jo
inc
xchg
push
jmp
inc
stc
je
jb
push
xchg
adcb
aaa
nop
daa
imul
scas
inc
mov
fmulp
arpl
nop
fidivl
xor
andl
or
xlat
es
mov
fistl
or
stc
lods
sub
adcb
orl
inc
push
jne
push
cmpsl
daa
lret
enter
jp
jg
sbb
nop
dec
int
popf
outsb
pop
scas
lahf
pop
and
int3
icebp
jno
fisubl
ret
popa
clc
hlt
fs
xchg
adc
nop
daa
jmp
or
push
in
pop
int
push
mov
and
stc
nop
xchg
add
mov
in
sub
aaa
cmpsl
inc
fstp
pop
push
jmp
stc
fs
sub
sbbb
nop
daa
xor
scas
inc
xor
push
and
int3
arpl
inc
fdivl
clc
ljmp
dec
or
sbb
ds
lock
xchg
push
jmp
inc
stc
jae
jb
adc
ss
daa
push
mov
push
insl
arpl
fidivl
xor
andl
or
data16
es
mov
ficoml
or
stc
lods
sub
pop
pop
int
pop
jg
and
push
shrb
cmpsb
and
js
jg
sbb
xchg
dec
lret
push
popf
cld
insl
sbb
dec
mov
inc
fisubl
shll
arpl
xchg
adc
sub
data16
xor
cmp
into
mov
jb
scas
in
and
stc
nop
xchg
add
mov
jecxz
sub
test
int
cmpsb
inc
push
push
jmp
clc
gs
sub
sbbl
cld
nop
daa
cs
mov
inc
xor
int3
arpl
inc
fnsave
ljmp
dec
or
sbb
es
outsb
out
inc
fistpl
nop
push
in
roll
jno
jae
adc
adcb
xor
sahf
xor
mov
fmul
fs
fidivl
das
jmp
popa
loopne
adc
push
lods
fs
mov
mov
inc
fcompl
push
jmp
stos
sub
pop
int3
sbbl
scas
pop
mov
inc
add
push
movsl
and
popa
push
fdivl
jbe
jg
sbb
xchg
dec
leave
push
popf
cli
insb
sbb
dec
mov
inc
ficompl
mov
je
xchg
adc
sub
fs
xor
cmp
iret
lea
scas
in
test
pop
stc
nop
popl
or
xor
sub
test
ss
movsl
dec
push
push
jmp
mull
sub
test
jnp
nop
daa
sub
mov
inc
jg
rclb
int3
arpl
inc
fidivs
hlt
ljmp
inc
or
sbb
cmp
insl
in
inc
fistpl
ds
stc
outsl
loope
or
xchg
adcb
xor
sub
sahf
xor
mov
fcmovne
gs
cs
andl
adc
push
lods
aam
mov
mov
inc
fstl
push
jmp
stos
sub
pop
lret
sbbb
jnp
and
push
into
lods
inc
add
push
movsb
and
popa
push
vpcmpeqb
je
jg
sbb
xchg
dec
movl
mov
sbb
iret
out
imul
xorps
inc
mov
jne
xchg
jo
sub
bound
dec
cmp
shlb
or
jb
lods
out
test
pop
stc
nop
lea
or
scas
fists
ret
ss
movsb
dec
loopne
push
push
jmp
mulb
daa
movsl
jb
xlat
dec
test
clc
nop
daa
sub
inc
jge
rcrl
int3
arpl
inc
fbstp
repnz
inc
or
sbb
cmp
insb
ljmp
mov
loopne
or
popl
sub
sahf
xor
mov
fcmove
data16
fidivl
sub
clc
push
orl
lods
pusha
shrl
rolb
lret
mov
inc
ficoms
push
jmp
test
lret
cld
jns
and
dec
int3
lods
inc
jo
push
mov
ret
fidivs
jb
andb
sahf
imulb
mov
pop
es
in
imul
mov
jbe
xchg
or
xchg
sub
pusha
lahf
ss
add
mov
push
cmp
cli
xchg
mov
or
scas
ficoms
ret
ss
mov
push
jmp
cmc
addr16
movsb
jb
inc
test
notl
cmp
dec
scas
inc
jl
rcrl
int3
arpl
inc
fbstp
icebp
ljmp
inc
or
sbb
cmp
imul
fistpl
lea
mov
fbstp
adc
xchg
sub
xor
mov
fxch
or
in
test
clc
or
cs
lods
pop
shrb
rolb
xor
mov
inc
ficoms
push
jmp
test
jo
push
leave
sbbl
js
and
dec
lret
lods
inc
std
outsl
rclb
lret
bound
fidivs
jno
andb
pop
sahf
cmc
push
es
jmp
inc
fistpl
mov
jbe
nop
or
sbb
mov
sub
pop
lahf
ss
add
dec
ss
push
in
shrl
add
out
xchg
pop
cli
xchg
mov
or
scas
fisttpll
ret
ss
mov
push
jmp
hlt
addr16
and
inc
test
notb
cmp
dec
scas
inc
jnp
rcrl
int3
arpl
inc
fbstp
lock
inc
or
sbb
cmp
push
inc
fistpl
mov
mov
fidivs
adc
xchg
sub
sahf
xor
mov
mov
data16
in
test
clc
or
or
pop
shrl
rolb
xor
mov
inc
ficoms
jmp
cmpsl
and
pop
push
enter
ja
and
dec
lret
cld
outsb
rclb
lret
bound
fidivs
jo
andb
pop
sahf
hlt
sbb
es
ljmp
out
cmp
stc
ljmp
sbb
pop
lahf
ss
add
push
jecxz
shrl
add
jae
test
cli
xchg
mov
or
scas
fmull
ret
ss
mov
push
jmp
repz
and
jb
aam
test
cmc
nop
daa
daa
cltd
mov
inc
jp
rcrl
int3
arpl
aas
fbstp
out
ljmp
inc
or
pop
xchg
es
imul
push
out
mov
fnsave
jl
xchg
sub
sahf
xor
mov
mov
or
in
test
or
mov
pop
shrb
rolb
xor
mov
inc
ficoms
push
jmp
cmpsb
and
push
movl
cmp
inc
sti
insl
rclb
lret
bound
fidivs
outsl
jmp
xchg
inc
ret
repz
inc
mov
inc
fistl
mov
jbe
mov
sbbl
loope
lahf
popl
mov
xor
mov
push
xor
push
cli
xchg
mov
or
scas
fisttpl
ret
ss
mov
push
jmp
repnz
and
test
hlt
nop
daa
es
mov
inc
jns
rcrl
int3
arpl
fbstp
out
ljmp
inc
or
push
xchg
es
push
mov
mov
fdivl
push
mov
sub
sahf
xor
mov
mov
data16
in
test
clc
mov
pop
iret
sub
add
lret
scas
and
push
rclb
add
movsl
and
push
movb
cmpsl
sbb
inc
cli
insb
rclb
lret
bound
fidivs
outsb
jmp
xchg
inc
roll
repnz
inc
mov
shr
gs
fistl
mov
stc
call
or
sub
pop
lahf
mov
mov
xor
shrl
add
jae
cmpsl
out
xchg
push
cli
xchg
xchg
or
scas
fimull
jge
ss
lahf
dec
loopne
dec
push
jmp
icebp
addr16
and
test
xchg
mov
inc
js
rcrl
int3
arpl
cmp
ljmp
inc
or
adc
ss
addr16
fistl
mov
mov
or
cs
sub
sahf
xor
mov
mov
popw
test
jno
sub
test
clc
mov
pop
into
sub
jl
lret
lods
and
push
into
push
jmp
mov
les
movsl
pop
mov
inc
clc
push
pop
pushf
sbb
arpl
fbstp
insb
ljmp
mov
sbb
xchg
adc
mov
out
inc
fcoml
arpl
out
ja
mov
sbbb
lods
xchg
sub
pop
mov
dec
xor
shrl
add
je
movsl
out
xchg
push
sti
xchg
xchg
or
mov
dec
sub
jnp
aaa
into
sub
push
in
jge
addr16
and
test
repnz
sub
scas
inc
ja
rcrl
int
lret
cmp
jbe
in
jmp
push
std
xchg
sarl
mov
adc
cmp
gs
fcoml
ss
fnstenv
or
xchg
sub
lahf
ss
xorb
popa
ror
add
jb
es
test
stc
nop
or
mov
pop
int3
sub
std
jnp
int3
lods
push
dec
fisttps
push
ljmp
jb
push
ret
hlt
jb
daa
movsb
adc
scas
inc
imull
pop
lcall
jbe
imul
popf
push
xchg
inc
mov
sbb
xchg
adc
mov
in
inc
fstl
mov
sti
in
ja
mov
sbbl
stos
xchg
sub
pop
mov
dec
das
lods
mov
push
xor
cld
xchg
test
or
mov
dec
sub
jns
cmp
sub
push
in
jl
addr16
push
sahf
je
sarb
test
icebp
xchg
sub
xchg
mov
inc
jbe
rcrl
into
gs
jbe
jmp
sbbl
or
adc
cmp
arpl
inc
fstl
fs
data16
jne
or
xchg
sub
aaa
or
cs
add
in
test
cli
xchg
pop
js
mov
pop
lret
sti
jp
int
sbb
fisttps
push
jmp
outsb
data16
lahf
push
jae
push
rolb
adc
inc
mulb
pop
cwtl
pop
into
gs
mov
in
sbbl
mov
nop
movaps
inc
mov
shl
popa
inc
ficoms
mov
cld
in
ja
xchg
xchg
sub
pop
mov
dec
sub
dec
shrl
fidivs
mov
cld
xchg
test
or
mov
inc
sub
js
cmp
sub
push
in
jnp
addr16
sbb
test
lock
sub
xchg
mov
inc
jne
rcrl
into
gs
cmp
jbe
ljmp
mov
fistps
mov
nop
sub
vpmovusdw
sti
gs
jne
or
xchg
sub
mov
dec
scas
sub
iret
data16
in
test
cli
xchg
push
ja
mov
pop
leave
sub
cli
jns
int
sbb
dec
lret
push
jmp
insl
data16
sahf
sbb
test
icebp
jo
sub
ret
scas
inc
cmc
rcrl
into
gs
mov
in
sbbl
or
push
sub
aas
mov
shl
pusha
inc
ficoms
mov
cld
jecxz
ja
xchg
sbb
cmpsl
xchg
sub
push
mov
dec
sub
rclb
shrl
fidivs
mov
cld
xchg
xor
movsb
and
inc
sub
ja
cmp
sub
push
in
jp
addr16
sbb
je
into
cmp
xchg
sub
xchg
mov
inc
je
rcrl
into
gs
imul
std
xchg
mov
ficomps
mov
vprotb
cmp
popa
loope
fstl
adcl
xor
aad
or
xchg
sub
mov
dec
scas
sub
push
pop
iret
iret
add
in
test
xchg
add
sbb
stc
js
int
sbb
dec
lret
sti
insb
data16
popf
sbb
or
test
lock
xchg
sub
ret
hlt
rcrl
into
gs
mov
jbe
push
xchg
cmp
or
mov
cmp
loopne
inc
ficoms
mov
cld
loop
ja
test
test
xor
push
mov
dec
sub
shrl
std
fidivs
mov
cld
xchg
xor
movsb
and
sbb
jbe
cmp
daa
cwtl
dec
loopne
dec
push
in
jns
addr16
sbb
test
out
xchg
sub
nop
mov
inc
jae
rcrl
into
gs
fbstp
call
std
xchg
mov
fstpl
mov
mov
mov
pusha
loopne
fstl
adcb
xor
aam
or
test
sub
mov
dec
lods
sub
data16
jae
and
test
cli
xchg
add
or
push
sub
clc
ja
int
sbb
dec
leave
push
jmp
imul
sbb
dec
mov
xchg
sub
shrl
xchg
adc
gs
mov
jbe
addr16
sbbl
or
lea
sarb
inc
fimuls
mov
cld
loope
ja
test
test
xor
xchg
sub
push
mov
dec
sub
shrl
cld
fidivs
lahf
out
xchg
dec
cld
xchg
xor
sbb
jne
cmp
es
dec
loopne
inc
push
in
js
addr16
sbb
test
mov
inc
jb
rcrl
into
gs
xor
in
sbbl
std
xchg
mov
fcompl
mov
lea
mov
pop
filds
adc
fs
test
sub
mov
dec
lods
sub
data16
jge
jae
and
test
cli
xchg
add
movsl
and
scas
push
sub
divl
int
sbb
dec
push
jmp
push
fwait
sbb
dec
mov
xchg
sub
mov
ret
adc
gs
mov
ja
gs
adcl
or
mov
sub
cmp
inc
fimuls
scas
gs
loopne
ja
addl
sbb
movsb
xchg
sub
push
mov
dec
sub
shrl
sti
fidivs
sahf
out
xchg
dec
cld
xchg
xor
movsb
and
sub
je
cmp
and
inc
push
in
ja
addr16
sbb
test
in
xchg
sub
mov
inc
jno
rcrl
into
lds
jbe
out
sbbl
std
xchg
mov
fistpl
mov
mov
mov
pop
fiadds
jo
fs
popa
shlb
add
sbbb
and
mov
dec
stos
sub
data16
jl
jae
pop
out
test
cli
xchg
add
mov
push
lds
shl
ss
pop
dec
loopne
push
jmp
imul
dec
mov
xchg
sub
mov
ret
adc
gs
mov
ja
fs
adcl
or
mov
sub
cmp
fimuls
gs
fists
push
addb
sbb
mov
mov
dec
sub
shrl
cli
fidivs
popf
out
xchg
dec
cld
xchg
jg
or
mov
inc
sub
jae
cmp
and
dec
loopne
inc
push
in
jbe
addr16
sbb
test
jmp
sub
ds
jo
rcrl
into
les
fbstp
in
adcl
std
xchg
mov
ficompl
mov
mov
mov
pop
fldl
push
jg
out
mov
fs
pusha
shll
add
pop
mov
xor
dec
sti
repnz
test
adc
cmp
sbb
mov
roll
jecxz
insl
mov
mov
es
and
ret
lcall
push
loope
popf
push
dec
and
cmpsb
daa
jge
imul
dec
xor
pminub
mov
nop
xchg
push
lret
mov
or
xchg
xchg
jmp
hlt
shll
cmpsl
mov
mov
adcb
sub
xchg
and
jl
mov
pop
push
bound
mov
jo
lret
mov
shrl
sub
mov
and
ret
xlat
xor
lcall
je
mov
mov
jne
or
stos
les
ret
lods
mov
gs
dec
sbb
iret
mov
sbb
stos
sub
ja
popa
mov
add
and
sahf
cmc
fistpll
dec
jo
mov
enter
cmpsl
jge
sub
int3
sub
pop
dec
add
cmpsb
cmp
ror
lcall
fcoms
hlt
mov
inc
mov
sub
inc
aam
xchg
gs
test
cmp
jns
addl
mov
lcall
fucom
jb
push
jns
adc
clc
iret
sbb
out
lret
shl
std
jb
cli
lods
jno
lods
sti
in
or
sub
fistpl
xlat
gs
shl
lret
into
xor
push
xchg
cmp
mov
mov
repnz
push
inc
mov
jo
sub
xor
ret
daa
and
negb
xchg
jnp
mov
es
cmp
pop
rclb
jl
sub
and
push
fildll
adc
lock
sub
push
or
jecxz
rcll
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
xchg
push
inc
ljmp
push
clc
or
sub
pop
jae
dec
add
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
out
pop
test
inc
lea
push
rcrb
xorl
test
mov
and
repz
jno
jno
shll
push
mov
pop
outsb
fucom
arpl
sbb
mov
xchg
adc
je
mov
imul
movsb
mov
xchg
push
xchg
xchg
addl
cltd
mov
mov
iret
shl
and
jp
cmp
and
cs
mov
mov
test
inc
jp
jge
repnz
icebp
std
mov
or
push
enter
fwait
xchg
aad
testb
mov
stos
scas
cwtl
push
mov
lcall
jno
aad
xchg
push
rol
ficoms
mov
sbb
lods
cltd
jmp
lret
cmp
ljmp
jo
jns
scas
cmpsb
pushf
test
outsb
imul
lret
xlat
ss
mov
cld
or
out
loope
adcb
push
pusha
cmc
cmp
xor
xchg
jo
push
push
negl
cmp
adc
push
popf
mov
std
fucomp
sti
xorb
nop
dec
inc
mov
xlat
out
jecxz
push
es
xchg
scas
mov
iret
jle
inc
add
rol
push
and
iret
out
dec
out
in
std
sub
lcall
mov
mov
stos
aad
dec
adc
imul
and
aas
out
jp
pop
pop
fs
daa
rolb
stos
filds
imulb
push
add
jnp
pop
mov
je
xor
sub
lret
push
xlat
pop
loopne
hlt
nop
inc
lods
mov
ja
mov
mov
or
dec
or
cmp
sbb
xchg
sbb
mov
jnp
scas
mov
test
cmp
lods
pushf
cmovl
jg
mov
cmp
pop
cmp
shl
ds
andl
xor
