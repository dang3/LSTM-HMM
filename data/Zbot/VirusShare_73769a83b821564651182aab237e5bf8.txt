push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
mov
lea
push
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
nop
nop
call
add
add
in
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
lea
push
subl
lea
push
subl
lea
push
jmp
jmp
call
movl
add
lea
popl
mov
mov
mov
mov
xor
push
pop
xor
mov
lea
dec
lea
mov
lea
popl
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
push
mov
lea
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
lea
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
lea
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
nop
nop
nop
push
mov
lea
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
nop
nop
push
mov
lea
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
jmp
ret
mov
push
call
push
pop
sub
cmp
jb
add
cmpb
je
add
cmpb
je
add
add
mov
cmp
ja
mov
sub
jne
push
pop
jae
mov
dec
loop
ret
fldl
pusha
and
add
and
add
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
mov
and
add
add
cwtl
and
add
and
add
add
add
add
sbb
add
dec
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
add
add
add
and
add
and
add
and
add
add
add
pop
and
add
add
ds
add
add
add
fsubs
add
dec
and
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
shlb
add
mov
and
add
add
cwtl
and
add
and
add
add
add
add
sbb
add
dec
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
or
add
add
add
add
insb
jae
jb
outsb
push
add
jecxz
inc
imul
arpl
insl
gs
imul
gs
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
popa
jo
gs
jb
jns
mov
popa
je
push
imul
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
dec
add
arpl
inc
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
je
dec
popa
outsb
fs
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
jo
outsb
fs
push
add
gs
jb
arpl
jae
gs
jo
add
outsl
jo
inc
imul
gs
jne
jb
outsb
je
imul
jns
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
gs
outsl
outsb
jae
insb
gs
add
inc
jbe
outsb
je
add
add
popa
jo
jb
popa
je
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
lldt
arpl
outsl
insl
bound
outsl
js
outsb
fs
jb
arpl
push
add
arpl
imul
outsb
fs
jb
arpl
add
add
je
jne
je
insl
push
gs
dec
jne
dec
popa
outsb
fs
gs
js
or
push
push
outsb
fs
jb
arpl
dec
push
inc
push
inc
inc
dec
push
cs
insb
add
adc
inc
insb
insb
push
outsb
jb
imul
jb
gs
push
add
addr16
arpl
jo
inc
imul
dec
inc
jb
add
sbb
insb
imul
outsl
outsb
add
add
addr16
jne
jb
inc
imul
push
je
inc
push
add
gs
insb
dec
gs
popa
addr16
outsl
js
add
mov
push
dec
inc
gs
gs
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
pop
add
addr16
imul
lods
add
gs
insb
inc
bound
je
add
push
dec
inc
gs
imul
push
jo
arpl
add
add
je
popa
arpl
outsl
outsb
inc
add
push
dec
inc
dec
dec
xor
cs
insb
insl
jae
je
imul
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
sbbb
add
js
add
add
add
add
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
lock
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
xor
add
add
add
add
add
add
add
data16
adc
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
lods
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
lcall
jge
add
jp
stos
lods
lods
add
test
push
mov
mov
mov
ret
les
into
int
rcl
in
rcl
shl
rcl
iret
hlt
into
int3
int
enter
mov
in
mov
mov
lods
stos
stos
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
lret
lret
not
rcl
cld
fcom
std
xlat
xlat
xlat
fcom
aam
dec
rcl
dec
int3
int3
aam
aam
ror
sar
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
sar
mov
lret
dec
iret
iret
aam
fcom
call
call
aam
dec
int
dec
int3
into
call
dec
int3
into
inc
mov
mov
ljmp
cmpsb
cmpsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int3
into
call
rcl
fcomp
fdivr
fcomp
call
aad
dec
into
int3
dec
lret
into
into
into
inc
mov
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
sbb
das
or
sbb
cmp
cmp
cmp
and
and
push
pop
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
rcl
call
aam
aad
call
iret
iret
inc
leave
enter
inc
mov
mov
lods
scas
lods
jmp
pushf
cwtl
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
bound
push
push
push
add
outsb
xor
jp
jge
jl
jb
jo
arpl
mov
cmp
cmp
pop
pop
pop
stos
outsb
jo
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
dec
lret
leave
inc
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
fwait
cltd
fwait
in
addl
push
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsl
jo
pop
pop
pop
or
pusha
nop
mov
xchg
xchg
xchg
incb
jl
jl
jp
outsl
outsl
outsb
out
addr16
jae
jne
jle
jle
jp
js
gs
inc
inc
cmp
pop
pop
sbb
adc
or
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addb
xchg
xchg
xchg
mov
mov
cwtl
mov
jp
jp
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
movsl
mov
incl
xchg
std
mov
jg
jno
jno
jne
je
jge
jge
test
jl
addr16
cmp
and
jg
cmp
movsb
movsl
movsb
shrb
lods
stos
sti
lods
lods
lods
lods
lods
lods
test
movsl
mov
xchg
xchg
xchg
decl
jle
js
jp
jp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsl
mov
call
addb
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
mov
pop
pop
push
or
inc
inc
dec
insl
insl
imul
test
lcall
out
fwait
fwait
lcall
mov
mov
mov
nop
mov
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
scas
stos
test
pop
pop
pop
adc
stos
test
mov
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
popf
pushf
std
mov
mov
xchg
in
nop
nop
in
addl
jne
cmovp
add
or
inc
sub
push
dec
dec
dec
outsw
jo
test
xchg
xchg
rclb
nop
xchg
std
mov
call
sahf
lahf
jmp
test
test
mov
cmpsl
mov
stos
xchg
std
mov
lods
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
mov
jmp
pushf
cltd
cwtl
decl
mov
xchg
call
xchg
xchg
popf
sahf
popf
mov
test
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
arpl
jo
mov
jg
addl
int
lea
notl
lea
lcall
xchg
mov
mov
mov
mov
jg
mov
mov
mov
je
mov
sub
mov
mov
mov
mov
mov
movsl
movsl
add
mov
pop
adc
mov
leave
mov
cltd
decl
nop
nop
call
xchg
xchg
call
xchg
xchg
lcall
lahf
lahf
sahf
mov
mov
cltd
out
xchg
xchg
xchg
les
xchg
lcall
lea
stc
xchg
xchg
xchg
jg
cltd
jge
lahf
jnp
jmp
jne
pushl
imul
mov
sbb
scas
pusha
adc
lods
pop
adc
stos
pop
or
stos
pop
or
mov
inc
mov
mov
stos
pushf
movsb
mov
movsl
add
mov
pop
adc
mov
mov
call
xchg
xchg
lcall
pushf
popf
lcall
pushf
sahf
lcall
xchg
xchg
call
xchg
xchg
call
fwait
cld
popf
cltd
fwait
stc
sahf
pushf
cltd
stc
sahf
xchg
xchg
cld
popf
vpshad
push
xchg
jae
xchg
insb
dec
lcall
sahf
push
and
sahf
pop
sbb
movsl
push
adc
cmpsb
pop
adc
test
pop
adc
lods
pop
adc
scas
pop
adc
mov
adc
mov
adc
mov
lods
cltd
mov
scas
scas
scas
mov
movsb
mov
add
pop
pop
adc
mov
ljmp
lcall
popf
popf
jmp
movsb
movsl
jmp
mov
decl
mov
decl
ja
fwait
xorl
xchg
insl
dec
call
push
decl
dec
adc
nop
inc
or
xchg
inc
add
xchg
inc
add
lcall
jmp
bound
pushl
addr16
pushl
push
and
mov
jno
inc
addl
mov
scas
lods
mov
mov
movsl
movsb
add
pop
pop
adc
mov
ljmp
lcall
mov
cmpsb
ljmp
stos
test
lcall
test
mov
decl
cmp
xchg
decl
inc
push
incl
cmp
incl
cmp
add
xchg
aas
add
xchg
inc
add
lcall
ljmp
gs
pushl
jo
mov
jbe
inc
jbe
inc
js
inc
jnp
dec
jp
inc
test
stos
inc
mov
mov
movsb
movsl
movsl
dec
mov
movsb
movsb
add
push
push
adc
lods
test
lcall
mov
test
ljmp
mov
ljmp
mov
jno
mov
incl
inc
or
test
or
cmpl
xorl
xorb
incl
ds
popl
call
inc
add
lahf
dec
add
mov
pop
adc
mov
js
inc
jg
inc
cmpb
lret
cmpl
into
xchg
call
mov
rorb
cmp
rorb
mov
ret
mov
mov
movsb
mov
mov
add
dec
dec
adc
movsl
mov
lcall
cmpsl
cmpsl
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
push
and
decl
inc
push
decl
cmp
add
mov
decl
inc
add
xchg
inc
add
sahf
inc
add
mov
dec
add
stos
push
add
mov
sbb
dec
mov
mov
rorl
dec
fcoms
dec
fsts
dec
fstps
xchg
enter
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
jp
mov
stos
test
ljmp
mov
pushl
mov
pushl
mov
mov
mov
pop
cmp
mov
call
dec
pop
decl
dec
adc
mov
lea
decl
inc
add
pushf
inc
add
mov
dec
add
test
add
mov
push
mov
mov
xchg
push
call
xchg
push
ficompl
pop
ficomps
pop
jmp
lahf
pop
jmp
mov
pop
call
mov
dec
les
cmpsl
cmpsl
test
sahf
lahf
mov
add
inc
inc
adc
je
lahf
fwait
fwait
jmp
lahf
fwait
fwait
ljmp
mov
mov
mov
mov
mov
mov
ljmp
addr16
decl
push
and
xchg
push
and
xchg
push
and
xchg
dec
sbb
nop
dec
or
xchg
inc
add
xchg
inc
add
fwait
inc
add
mov
dec
add
lods
push
add
mov
add
mov
jle
call
fwait
pop
fisubl
fs
fbld
jmp
cmpsb
gs
test
push
jmp
mov
dec
lds
in
cmpsb
cmpsb
cmpsl
mov
sahf
sahf
add
inc
inc
adc
jp
xchg
xchg
call
sahf
popf
pushf
ljmp
mov
pushl
mov
mov
mov
cmpsb
mov
call
xor
lcall
call
inc
or
xchg
inc
add
lcall
jmp
push
add
mov
add
mov
add
mov
mov
fsubl
jo
in
jno
out
jno
call
mov
in
mov
in
mov
in
mov
in
mov
jmp
mov
mov
repnz
cmpsb
cmpsl
lcall
lahf
add
jge
cmp
insb
insb
js
nop
mov
fwait
fwait
xchg
lcall
mov
pushl
mov
mov
mov
mov
movsl
lcall
pop
xor
mov
push
xor
cltd
push
push
call
add
lahf
dec
add
movsb
dec
add
test
push
add
mov
add
mov
jo
ficompl
js
call
mov
in
mov
cmp
mov
test
repnz
test
hlt
mov
mov
aad
mov
imulb
pushf
sahf
daa
sahf
mov
mov
add
arpl
cmp
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
rol
mov
mov
sahf
subl
cmp
movsb
insb
inc
jmp
cmp
lcall
lcall
add
stos
push
add
lods
push
add
mov
add
mov
fs
sarl
fbld
xchg
in
mov
mov
repnz
push
xchg
push
xchg
push
xchg
stc
enter
out
rcll
clc
stos
stos
stos
mov
pushf
sahf
xor
pushf
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
push
in
push
decl
mov
mov
mov
sar
ret
ret
ret
mov
jl
pushf
push
dec
ljmp
xor
lcall
jmp
dec
add
stos
push
add
mov
add
mov
pop
add
leave
gs
xlat
mov
out
ja
out
les
push
enter
leave
fwait
push
int
push
int3
lcall
rcrb
cli
int
push
lret
fmulp
mov
enter
mov
mov
mov
nop
nop
add
add
add
aaa
add
cmp
outsb
push
dec
dec
jecxz
bound
mov
mov
mov
mov
sar
ret
inc
inc
leave
inc
mov
mov
lahf
outsl
dec
ljmp
jnp
jmp
dec
or
sahf
dec
add
movsl
dec
add
stos
push
add
mov
add
mov
bound
dec
gs
shll
jmp
xchg
inc
out
rorb
not
cmpsb
push
shlb
cli
aad
sti
aam
cli
fsubrs
std
fldt
push
rcrb
dec
lret
lret
mov
into
mov
xchg
xchg
add
lcall
xor
xor
es
inc
inc
inc
bound
push
xlat
je
outsl
cld
mov
mov
ret
mov
ret
mov
ret
pushl
js
ljmp
js
lcall
dec
add
movsl
dec
add
lods
push
add
mov
add
mov
arpl
dec
addr16
xlat
insb
add
fidivrs
out
test
push
int3
popf
sti
fsubrs
sti
fnstenv
fidivs
fbstp
std
jecxz
std
loopne
push
xlat
movsl
jmp
aam
call
into
leave
mov
mov
lahf
lahf
sahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
sbb
dec
dec
dec
ss
outsb
mov
ret
aam
jmp
aam
test
lret
int
lret
dec
leave
leave
dec
lret
lret
inc
enter
mov
ljmp
outsb
cmp
jmp
push
add
mov
add
mov
arpl
dec
addr16
xlat
insl
add
fbstp
jmp
mov
scas
std
fistpll
cld
loopne
std
jecxz
std
jecxz
jecxz
in
jmp
mov
std
jmp
mov
call
iret
lret
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
enter
jecxz
pop
out
ljmp
jecxz
leave
fsubp
fsubp
fcmovu
aad
std
int3
int
mov
xchg
scas
jnp
ljmp
dec
add
cmpsl
dec
add
mov
add
mov
popa
add
lret
addr16
imul
jmp
ja
in
xchg
xor
clc
ret
mov
cld
fistpll
jecxz
call
std
call
leave
jmp
ljmp
std
in
lret
in
in
fidivl
mov
mov
xchg
adc
add
add
incl
std
add
std
add
hlt
testl
in
out
out
sub
out
in
dec
ljmp
xchg
out
jmp
aad
jmp
mov
jo
test
cmp
mov
dec
add
test
add
mov
add
mov
fs
int3
push
add
loopne
add
call
mov
mov
cld
call
into
std
jmp
in
into
std
in
into
std
in
int3
std
out
sar
out
sar
out
sar
icebp
sar
cld
out
in
fnstsw
inc
ret
out
cmpsb
cmpsb
cmpsl
mov
xchg
xchg
add
add
add
incb
std
std
incl
idiv
testl
repnz
hlt
push
out
lock
pop
in
lock
cmp
in
out
pop
loop
lods
lea
sahf
pop
lcall
dec
add
lods
push
add
mov
add
mov
gs
shrl
fisubrl
jmp
jae
jmp
ud0
lods
pop
cli
fidivl
std
ljmp
in
sar
push
sar
out
out
push
fdivr
repz
std
icebp
fcos
repz
std
out
sar
repz
jmp
fst
dec
lret
stos
stos
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
incl
stc
cld
add
stc
cli
add
cmc
testl
sarl
lcall
jmp
push
add
mov
popa
add
lret
data16
shrl
fsubrl
jmp
jns
in
mov
idivl
in
fdivr
std
repnz
out
repnz
std
repnz
std
hlt
push
fdivr
hlt
cmc
loopne
push
std
repz
out
aam
repnz
jmp
loope
dec
iret
iret
clc
lods
lods
stos
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
fnclex
add
mov
jge
cltd
push
and
mov
dec
add
mov
add
mov
arpl
dec
addr16
insb
add
fidivs
jmp
xchg
sub
sti
enter
ljmp
repnz
std
icebp
fcos
lock
std
lock
std
out
aad
out
sar
sti
ljmp
clc
ljmp
cmc
in
out
fdivrl
call
xlat
sti
mov
mov
lcall
add
add
add
into
fadds
mov
mov
mov
popf
pusha
sub
mov
push
add
mov
add
mov
bound
call
push
add
loopne
add
ljmp
cli
int
cli
out
cld
out
cld
in
stc
jecxz
push
loope
push
loopne
push
fdivrl
out
fnstsw
call
fadd
std
jmp
faddp
imul
in
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
leave
int3
add
mov
xchg
loopne
fs
ljmp
push
add
mov
arpl
int
pop
call
outsb
or
fnstenv
jmp
sbbl
call
iret
mov
jmp
iret
mov
loop
scas
cld
fmulp
scas
cli
mov
mov
ljmp
enter
into
shl
out
fdivl
lock
out
popf
ljmp
push
lods
lods
stos
adc
cmpsb
cmpsb
cmpsb
add
ret
add
rol
mov
sahf
aam
jae
pushf
push
sbb
test
sbb
scas
addr16
std
mov
addl
lret
test
scas
mov
sarl
mov
aam
mov
lret
rcl
enter
iret
mov
aam
jg
fcmovnu
jb
gs
jecxz
call
jmp
xor
div
mull
repnz
or
mov
int3
add
add
add
rolb
mov
stos
xchg
xchg
mov
mov
mov
and
mov
xchg
sarb
mov
mov
mov
mov
mov
leave
leave
jp
into
int
rcl
rclb
rcl
dec
inc
rcl
xlat
xor
fcomp
daa
xlat
fcmovu
sbb
adc
push
out
out
in
pop
jmp
lock
stc
cli
add
incl
incb
std
incb
mov
mov
shrb
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
ret
lds
enter
int3
daa
lret
into
shll
iret
rcl
sbb
rcl
adc
rcl
or
aad
push
rcl
fiaddl
add
fcmovnu
add
loopne
add
out
add
int
add
incb
mov
mov
add
ret
ret
sub
mov
mov
push
ret
or
leave
push
mov
add
lret
lret
add
aam
add
aad
add
xlat
fadds
aad
add
xlat
fiadds
fcmovnbe
fiaddl
loopne
loop
filds
in
out
repnz
add
std
incb
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
ucomiss
pusha
xor
popa
adcl
push
xchg
sub
sub
addr16
sub
test
into
or
dec
in
test
and
ret
or
movsb
jae
shlb
push
out
notb
xchg
dec
push
cmp
ret
mov
loope
inc
adc
push
xchg
arpl
xchg
mov
movsb
out
cmp
cmp
sub
cmp
icebp
mov
loope
lods
js
fisubrs
sub
xor
dec
test
cmp
ret
stc
lock
stc
loopne
sub
movsl
jle
xchg
jle
sub
rcrb
dec
loope
repnz
and
jne
pop
out
jne
xchg
enter
sbb
xchg
sub
mov
outsl
nop
loopne
ret
addr16
xchg
adc
aaa
sbb
push
mov
sarl
fistpl
or
dec
fisttps
sub
shrb
out
add
lock
cmp
popa
sub
mov
mov
sub
push
int3
inc
fdivr
aaa
rcrl
pusha
idivl
fbstp
nop
jle
ret
xchg
or
xchg
cs
cs
pusha
aaa
mov
imul
pop
out
add
out
add
addr16
and
cwtl
xchg
sub
lret
mov
std
push
leave
pusha
mov
fbstp
stos
out
fdivl
xchg
movsb
push
and
clc
cmpsb
aas
xlat
sbb
hlt
sub
push
lahf
dec
jnp
jl
fidivs
pop
cltd
xor
mov
dec
jecxz
mov
ss
lods
inc
into
push
hlt
mov
stos
adc
je
sbb
mov
in
sbb
push
in
dec
inc
jbe
jb
jae
mov
ret
xchg
sub
out
dec
sbb
mov
dec
cmp
aas
mov
xchg
cmpsb
cmp
sbb
cmp
movsl
insb
ss
push
mov
idivl
jmp
xor
pop
repz
xor
adc
ret
hlt
fdivrl
dec
dec
das
fdivl
xor
fs
sbb
test
movsl
cmp
mov
jmp
insb
ret
pop
sahf
pop
xchg
cmp
movsl
jle
adc
push
inc
lods
add
jne
jmp
mov
jmp
inc
fadds
mov
cmp
cmc
jge
daa
mov
out
loop
fwait
xor
jbe
xor
push
xchg
sub
stos
mov
faddl
mov
shlb
xchg
adc
and
enter
mov
push
sub
daa
mov
mov
fisttps
std
int3
xor
sbb
xchg
pop
mov
fxam
jl
xchg
rclb
add
sbb
mov
insb
sarl
add
pop
hlt
push
loopne
iret
adc
adc
leave
cltd
xor
test
sbb
dec
dec
xlat
xchg
sub
jo
insl
mov
ret
hlt
mov
jge
gs
push
adc
add
enter
mov
in
jne
mov
aas
movl
xchg
sbb
dec
mov
inc
in
sbbl
push
leave
pusha
cmp
out
mov
rclb
add
jne
and
ljmp
mov
mov
cmp
mov
jge
es
out
loope
fwait
xor
jbe
xor
mov
sub
test
cmc
mov
shlb
xchg
adc
and
or
aam
dec
out
cmc
sub
mov
mov
fimuls
std
iret
outsl
push
fs
inc
and
jo
jae
leave
pusha
or
adc
int
popf
xor
jmp
stc
nop
mov
push
jmp
shr
orb
les
sub
test
adc
in
andl
or
addr16
pop
fstpt
adc
push
in
add
pop
push
fsts
push
jbe
cli
mov
rcrl
idivb
pop
scas
push
jp
inc
int
inc
sti
push
xlat
outsb
dec
mov
cmp
push
aas
mov
pop
les
mov
mov
lea
cmpsb
cmp
aad
mov
into
xor
push
push
in
orl
dec
inc
stos
in
test
push
push
mov
lret
add
mov
mov
jnp
sbb
cltd
sub
stc
nop
or
xchg
sub
sbb
mov
or
in
xorl
shrl
out
or
adc
mov
sbb
push
or
clc
aaa
sbb
mov
in
mov
and
es
and
push
repnz
push
add
sbb
jp
shll
cmp
and
imul
jp
sti
cli
add
sub
ss
clc
shlb
ret
lcall
xor
arpl
inc
mov
je
and
call
arpl
mov
inc
call
cmp
pop
insl
imull
shll
testb
lock
and
cld
or
imul
js
in
cld
push
addr16
sahf
xor
xor
mov
out
dec
fistps
add
jg
push
scas
inc
mov
out
xchg
fcmove
pop
adc
pop
out
aaa
xor
push
addr16
sbb
lea
mov
fsubrs
js
sub
ds
dec
push
jnp
mov
stos
fwait
nop
daa
ror
fdivl
icebp
sahf
xor
push
std
loop
xor
test
aaa
and
mov
xor
mov
aaa
and
ret
fs
xor
lahf
ss
les
sbb
dec
in
xlat
mov
mov
dec
sti
sbbb
xlat
xchg
sub
imulb
and
das
xlat
stos
inc
push
clc
adc
push
imul
andl
add
iret
dec
in
iret
data16
lds
sti
mov
mov
sub
or
and
jno
sti
jecxz
sub
inc
fildl
hlt
push
call
dec
icebp
call
add
jne
das
sbb
jne
clc
xlat
outsb
sub
test
daa
and
jae
add
jg
iret
and
adc
popa
pop
mov
ss
dec
out
cmp
adc
rclb
push
lods
ss
cmp
loop
scas
pop
or
add
iret
data16
lahf
xchg
sub
leave
int
sti
out
mov
sbb
cmp
dec
xor
data16
mov
mov
daa
call
or
and
push
jmp
jns
sbb
leave
jle
sti
aam
sub
jg
dec
dec
and
lcall
dec
in
sti
jp
xor
mov
lea
ja
scas
xor
fidivl
add
fdivl
dec
push
out
pop
testl
fucomip
lret
sti
mov
xor
leave
pusha
mov
xchg
sub
flds
push
sti
add
pusha
pop
sbbl
mov
rolb
popf
pop
divl
mov
dec
xchg
sub
xchg
mov
jecxz
ds
std
mov
sub
and
pop
dec
in
test
mov
loopne
push
cli
jmp
cmp
mov
sti
xchg
loopne
dec
loope
add
pop
pop
push
mov
jns
lds
iret
dec
jecxz
adc
lret
incb
or
sahf
mov
dec
in
icebp
mov
or
jecxz
insl
cli
xchg
fwait
pusha
dec
jecxz
mov
cmpsb
cmp
xor
pop
das
mov
les
dec
cmpsb
sub
cli
adc
dec
aaa
dec
jg
lea
xchg
adc
leave
mov
loop
sbb
push
out
and
loopne
imul
mov
stos
mov
insl
lsl
pop
dec
in
lea
dec
scas
inc
or
push
popf
and
in
add
cmp
popf
mov
xchg
mov
int
pop
jmp
shrl
sbb
aas
dec
xor
push
imul
pushf
xchg
out
fnstcw
push
or
mov
cwtl
push
push
and
mov
ret
inc
fprem
push
pop
hlt
cmp
xor
test
outsl
lret
bound
mov
sbb
push
jp
cmp
xor
inc
push
xor
xchg
pop
pushf
stos
mov
or
addr16
cmp
fwait
xor
sahf
xor
jle
dec
in
mov
add
sub
movsb
cmp
fsubp
jge
pushf
mov
scas
push
in
je
jl
cmp
gs
into
jne
sbb
popa
and
icebp
fadd
jno
cmp
ja
je
pmulhw
adc
mov
rcl
cmpsb
sbb
int3
mov
dec
stos
test
and
lods
adc
add
xor
push
outsl
inc
cmpsb
arpl
scas
lea
movb
mov
cmpps
cmp
dec
popa
lahf
pop
test
lds
aaa
add
out
lds
pop
adc
jmp
mov
mov
fidivs
mov
sbb
popa
mov
inc
mov
cmp
lcall
lret
sub
hlt
adc
neg
cmp
ss
mov
dec
mov
pop
xor
dec
mov
xchg
cmp
jbe
push
lds
test
aam
ss
stc
jno
fisubs
push
fmull
scas
iret
mov
orl
push
mov
xor
add
mov
pop
loop
jo
fwait
pop
xor
mov
mov
pushf
mull
mov
mov
roll
push
int3
jg
loopne
in
and
xchg
pop
jno
inc
mov
or
jg
test
pop
fistps
cmpsl
or
mov
ret
imul
mov
lret
inc
cmp
fsubr
ret
lock
mov
adc
hlt
stos
outsb
lods
es
sub
aam
mov
test
dec
jl
adcb
out
pop
adc
hlt
ds
dec
int3
fisttpl
push
add
stos
push
jmp
inc
xchg
leave
cmp
lods
sbb
mov
sbb
fcmovnbe
aas
lds
das
or
inc
mov
inc
out
rcl
stos
add
insb
cwtl
test
lahf
ror
ss
std
cmp
sub
xor
in
pop
push
mov
mov
adc
icebp
js
testl
lods
mov
and
into
pushf
add
fpatan
jns
nop
mov
scas
push
lret
incl
js
push
ret
es
nop
lret
dec
leave
inc
lods
add
or
mov
ja
jb
sbb
and
xchg
les
jbe
bnd
loopne
jo
inc
adc
dec
out
jo
push
jmp
dec
sbb
push
shrb
repnz
cmp
pushf
int
inc
mov
daa
out
jo
dec
jl
mov
imul
inc
out
in
stos
insl
inc
fnsave
xchg
insl
mov
jne
outsl
cmpsl
inc
iret
xchg
xor
addr16
push
cs
push
pop
scas
mov
sbb
xchg
push
adc
push
fimuls
pop
push
in
and
fisttpl
ret
add
sub
dec
mov
repnz
xor
test
test
dec
jle
mov
inc
lahf
insl
shll
pop
jbe
sbb
lcall
fnstcw
push
cmpsl
cli
xchg
shll
lds
cmp
call
or
dec
ds
rol
push
and
push
aaa
lret
mov
or
sub
popf
mov
push
ljmp
inc
fdivrs
call
popa
clc
dec
mov
out
or
aam
fwait
xor
int3
test
mov
xor
in
fistpll
add
push
out
sub
adc
nop
test
xor
std
pop
sub
test
jl
xchg
pop
mov
out
in
inc
or
mov
mov
fstl
test
loope
cmc
sub
das
mov
pop
repz
adc
ds
and
iret
test
mov
fcmovnb
pop
test
test
nop
push
xor
cmpl
adc
arpl
inc
mov
mov
cmp
shrl
and
icebp
mov
fldcw
cmpsb
lahf
test
pop
jb
sub
insb
cld
sbb
adc
push
fldenv
mov
in
inc
fistpl
cmpsl
ds
adcb
lds
outsb
add
shr
mov
xchg
cli
add
push
and
push
push
ds
daa
testb
shlb
std
gs
inc
fisubrl
test
mov
shlb
pop
les
sub
and
sbb
xor
fidivl
mov
mov
sub
out
in
cmp
fisttps
and
repz
dec
sbb
cmp
call
stos
pop
outsl
push
sbb
mov
add
iret
xchg
sbb
in
dec
fidivl
push
or
inc
jns
stos
push
add
movsb
mov
les
cmpsb
cmp
stos
cmp
pop
dec
ret
outsb
add
xchg
lret
jle
add
cmpsb
dec
push
mov
ret
into
fwait
cmp
mov
testb
lret
and
adc
cmp
dec
jecxz
jno
dec
xchg
iret
push
movsl
mov
mov
jb
icebp
mov
cmpsb
cmp
leave
mov
sub
cltd
cli
dec
pop
out
test
adc
into
leave
xor
cmp
xchg
sub
mov
dec
xchg
push
push
fwait
xor
mov
test
pop
mov
mov
mov
out
hlt
dec
filds
xchg
mov
sub
inc
pop
adc
mov
inc
fisubl
clc
rorl
push
jbe
jg
cmpsl
lahf
fidivs
rcrl
xchg
pop
jae
inc
pop
jno
mov
jno
pop
movsl
mov
shrl
out
inc
fisttpll
add
mov
and
push
and
pop
ds
cmpsl
mov
repz
mov
adc
lret
leave
push
sti
xchg
jl
cmpsb
cmp
test
inc
in
cmp
push
push
iret
pushw
jl
in
pushf
and
xchg
xorl
xchg
sub
imul
pop
xor
push
in
jmp
into
gs
or
in
test
mov
sbb
icebp
fnstenv
int
sbb
addr16
push
jmp
sub
xchg
jl
jb
in
xchg
sbb
aaa
lea
sarb
pusha
scas
inc
push
pop
push
out
out
jge
lods
or
adcb
movsb
cmp
or
daa
les
mov
mov
filds
xchg
in
arpl
jmp
add
aad
push
mov
repz
jp
push
mov
push
push
fcmovu
jae
orb
pop
xchg
sub
jbe
jo
cld
mov
fs
testl
or
xchg
ret
and
lret
sbb
pushf
jg
call
mov
dec
fbld
lea
push
lods
inc
cmpsl
and
pop
ror
popa
and
call
push
aam
push
popf
mov
fdivl
add
cs
fsts
mov
push
in
jecxz
jg
dec
or
or
popa
mov
mov
movsl
cmp
fldenv
pop
fs
pop
imul
xlat
aas
out
xchg
incl
cwtl
xor
or
mov
les
ret
cmp
lock
mov
ja
pop
jns
divl
movsb
cmp
cwtl
das
dec
xchg
ret
fs
cmpsl
xchg
iret
sub
aam
sub
test
inc
repnz
or
adc
sub
adc
lds
pop
out
xchg
cltd
dec
jecxz
mov
jge
cs
movsl
cmp
dec
fwait
xor
leave
mov
imul
test
lea
fstl
lret
ret
shl
xor
sbb
ss
out
js
cltd
jae
add
cmc
jnp
and
rcrl
stos
inc
mov
ror
pop
das
iret
lock
rorl
jle
add
or
and
adc
js,pt
iret
mov
loopne
jmp
decb
out
pop
push
and
addr16
jne
cmp
mov
or
jbe
out
ret
xchg
inc
push
pop
lock
push
mov
imul
mov
rcrl
sbb
or
stc
jb
sub
movsb
mov
loopne
or
jne
es
lret
lret
mul
or
ljmp
adcb
mov
and
ret
dec
cmpsl
jbe,pt
stos
inc
mov
lds
leave
pusha
movsl
add
jnp
into
out
jp
add
scas
jg
mov
leave
adc
jmp
xor
lods
pop
pop
hlt
movsl
lret
arpl
out
jnp
and
sbbb
dec
cltd
xor
mov
mov
mov
aad
or
iret
xchg
repz
leave
adc
cli
adc
xor
mov
ret
lock
mov
push
fsubp
fsubrs
clc
xchg
sub
jbe
popf
dec
dec
mov
sahf
popa
and
repz
inc
fcmove
add
xchg
popa
clc
xor
push
outsl
push
cmp
sub
sub
and
inc
dec
loope
adc
ljmp
fnsave
xchg
or
or
adc
sub
movsl
mov
xchg
sti
lcall
xor
jb
pop
pop
sub
mov
lret
dec
loopne
push
push
roll
jnp
lret
jecxz
jmp
cmp
pop
sahf
dec
imul
mov
mov
lret
xchg
or
push
call
mov
int3
cmp
and
mov
out
mov
dec
andl
dec
rcll
and
mov
test
rcl
hlt
add
out
xchg
pop
out
movsb
imul
sbb
xchg
cmp
fadds
mov
in
sub
mov
mov
int3
into
gs
mov
in
andl
dec
mov
iret
data16
sarb
iret
mov
push
in
jb
or
pop
pop
sub
xchg
cmp
fiadds
dec
scas
inc
push
sub
cld
cmp
arpl
push
sbbl
adc
adc
mov
mov
jle
aaa
into
cmp
push
push
in
xchg
mov
sbb
xor
pop
testl
mov
xor
add
push
call
out
mov
push
out
or
roll
scas
pop
out
popa
lods
inc
cmp
lret
inc
mov
jg
ljmp
add
lret
sub
mov
push
addl
idivl
fbld
lcall
inc
out
dec
sbb
push
imul
imul
add
stc
pop
or
lea
pop
jmp
push
incb
sbb
xchg
sub
mov
jne
in
mov
test
int3
sbb
ljmp
cmpsl
cmp
mov
popf
pop
sub
inc
mov
popa
clc
xlat
adc
adc
xchg
xor
loop
mov
lcall
sbb
add
rorl
push
in
bound
mov
cmp
mov
jle
jo
xor
ret
addb
adc
iret
stos
loop
adc
push
repnz
aaa
sbb
scas
cmpsb
int
cmp
shlb
repz
mov
mov
fcompl
mov
cmp
movsl
aam
jle
mov
cmp
push
jae
jp
and
loop
adc
and
add
outsb
in
mov
cmp
pop
lds
negl
rorl
and
sbb
push
jbe
in
xchg
mov
out
jb
repz
push
cld
leave
rcrb
xchg
jle
mov
cmp
xchg
pop
popa
pop
lret
lcall
adc
jnp
dec
mov
loope
push
lea
loope
jge
les
push
lock
xor
dec
insl
ret
jo
fnsave
push
mov
add
dec
add
enter
out
xchg
mov
fs
adc
sub
sub
out
outsb
mov
and
cmpsb
int3
add
shlb
mov
pop
out
insl
xchg
sbb
sbb
add
cmp
scas
aad
js
insl
dec
add
cmp
xor
stos
rcll
js
cwtl
mov
lahf
mov
mov
imul
mov
cli
fstl
pop
pop
in
xchg
cmpsb
shll
std
mov
sub
pop
repz
ja
mov
dec
push
push
fldcw
mov
dec
test
rcrb
bound
les
bound
decb
push
jbe
adc
jl
add
sub
int3
dec
adc
jl
aas
sbb
lea
mov
or
dec
inc
xchg
pusha
iret
repnz
movsl
xchg
popa
lods
inc
fs
test
and
dec
cli
cmp
mov
mov
inc
cwtl
out
sub
faddl
int3
push
arpl
push
lcall
mov
ret
dec
iret
pop
mov
ret
xchg
int
aas
inc
inc
rcrl
xchg
mov
addr16
cltd
arpl
aaa
pop
daa
and
sbb
dec
mov
dec
in
jnp
call
fwait
mov
mov
dec
mov
sub
push
je
and
hlt
das
dec
mov
lds
lea
test
dec
or
lea
out
jo
gs
xchg
fnsave
add
out
adc
pslld
aad
inc
mov
lods
sbbb
mov
push
and
xchg
sti
popa
sub
mov
add
fcoms
hlt
cli
pop
in
push
push
inc
inc
xchg
jge
cmpsb
sbb
mov
mov
mov
les
rol
or
dec
push
ja
test
lea
cs
and
and
mov
mov
and
lods
or
mov
shrb
dec
inc
pop
sub
and
pop
shl
pop
push
lahf
mulb
jne
jb
cmp
xchg
or
popa
mov
xor
push
imul
mov
lods
jbe
push
repz
pop
idivl
stos
in
sbb
fsubs
insb
cs
xchg
js
mov
cmp
into
pop
cmp
xchg
decl
lods
cltd
or
cmp
add
add
inc
das
dec
jg
data16
or
add
xchg
testl
lret
test
mov
jo
mov
out
hlt
adc
cli
shll
sub
leave
and
aad
add
int3
sub
sub
ja
ds
mov
fwait
sbb
mov
inc
in
rcll
nop
daa
add
dec
call
xchg
push
icebp
jno
in
out
mov
jo
pop
aam
add
out
rcrb
hlt
pop
ds
push
shll
fs
pop
mov
inc
and
jno
js
fwait
rcrb
fcmovb
iret
inc
pop
mov
xchg
aaa
push
movb
push
sbb
in
jae
mov
std
stos
push
xchg
into
push
push
mov
inc
or
pop
push
push
and
cmp
mov
sbb
pop
cmp
pusha
sub
addr16
sub
push
enter
shlb
jae
gs
sarb
popa
inc
adc
stc
xchg
subb
sub
cmpsb
mov
enter
fst
mov
int3
xor
daa
inc
gs
out
xchg
dec
ret
jge
ja
mov
and
jb
jge
lret
js
and
hlt
sahf
outsb
out
push
aam
mov
lods
pop
inc
test
repz
dec
lea
out
mov
dec
inc
in
fs
out
jl
scas
jb
push
or
js
shl
cmp
dec
shl
sub
stos
cmpsl
mov
add
sub
cmp
xor
dec
dec
outsb
inc
pop
aam
out
sbb
push
fdiv
mov
popl
push
fcomps
dec
jmp
pop
popf
pop
imulb
push
or
mov
push
out
loop
fsubl
orl
arpl
loope
add
rcl
roll
lahf
dec
cmp
lahf
xor
mov
mov
lods
sub
shrl
cmpsb
mov
xor
mov
dec
push
aam
mov
test
call
inc
mov
adc
adc
mov
cmc
sub
adc
adc
and
lea
sbb
push
xor
inc
jp
testl
stc
andb
test
mov
in
das
mov
dec
push
adc
repz
pop
fldcw
into
inc
mov
movsb
cmp
dec
arpl
xchg
sbb
jp
movsb
fisubrs
mov
sbbb
xchg
or
dec
je
out
mov
fnstsw
fmuls
or
int3
sub
mov
inc
dec
jge
jp
loop
daa
xor
insl
inc
paddq
push
leave
into
fwait
rcll
notb
mov
pop
pop
pop
jp
mov
loopne
cmp
icebp
or
and
dec
adc
add
mov
xor
xchg
fstps
mov
hlt
mov
sub
add
loopne
cmpsl
inc
mov
fs
jmp
ljmp
push
xor
push
cmp
push
sub
jns
outsb
movsb
gs
and
fs
adc
xor
rclb
dec
sbb
insb
mov
mov
lret
mulb
pop
pop
mov
mov
mov
cmc
in
xorl
out
dec
inc
jg
ss
jp
mov
dec
jb
pop
lods
popf
pop
out
add
nop
add
cmp
jge
test
mov
add
pop
loopne
loopne
add
dec
repz
push
popf
jl
lds
add
mov
leave
mov
jmp
cld
out
and
dec
push
adc
test
pop
mov
jmp
jne
idivl
mov
lea
mov
stos
sub
sub
mov
dec
and
jo
imul
pop
cmp
daa
cmp
iret
fcoml
pushf
cmpsb
int
int3
incb
sbbb
xor
mov
enter
cwtl
xor
mov
push
mov
or
push
gs
pop
sbb
push
in
out
insl
in
xor
popa
insb
outsb
or
lahf
cmp
or
test
sub
add
jb
insb
jbe
mov
jns
into
jbe
addb
and
outsb
adc
mov
mov
cmpsb
mov
dec
jno
int
mov
and
xorl
clc
pop
dec
inc
xorl
cmc
mov
stos
repz
sub
pop
dec
xor
stos
addl
lret
dec
push
rolb
push
and
cmpsb
shll
lods
push
mov
push
push
add
push
mov
and
and
mov
push
ds
mov
into
sbb
test
inc
lret
int3
push
fst
les
cmpsb
orl
sub
std
negl
pop
test
cmp
lods
jle
shll
mov
rolb
mov
in
push
push
lock
lods
pop
push
imul
repnz
xchg
hlt
xor
cmpl
aaa
inc
imul
push
fsts
shlb
frstor
cmp
cmp
inc
mov
fsubl
add
xchg
xor
jle
push
mov
cltd
xchg
jbe
loopne
jp
dec
pop
mov
push
imul
popa
out
xchg
xchg
inc
cltd
fadd
pop
scas
cli
movsl
jno
sbb
mov
mov
int
dec
mov
xchg
dec
mov
out
add
shrb
sbb
cwtl
lret
push
lcall
stc
cmp
outsw
int
pop
inc
mov
xlat
add
insl
sahf
or
call
iret
cmp
push
movsb
test
push
pop
and
mov
add
loop
daa
ds
fs
pusha
push
push
mov
repnz
dec
mov
pop
test
dec
mov
push
and
jne
mov
cwtl
data16
nop
jl
cmp
aaa
lods
and
jp
stc
push
xchg
cltd
or
iret
xchg
xor
sub
mov
into
test
ja
lods
sbb
xor
dec
sub
ficompl
mov
jg
lahf
aas
mov
insb
rcrl
mov
call
ficomps
in
or
leave
dec
adc
in
in
sub
les
ljmp
cld
inc
sbb
cli
cmp
popa
push
sub
add
adc
add
xor
cltd
call
pop
in
mov
or
pop
fwait
in
dec
adc
inc
lock
xor
sub
fwait
lahf
jge
arpl
insl
scas
rolb
and
test
test
fldz
xor
out
cli
mov
push
lahf
imul
lahf
pushf
imul
pop
cmpl
call
scas
cmp
jb
outsb
push
sbb
mov
sub
ret
add
push
jge
sub
mov
shr
lock
das
movsb
push
js
pop
lea
jecxz
xchg
mov
lret
sti
repz
inc
jge
cmp
dec
mov
pop
lods
and
xchg
xlat
jecxz
cmovbe
jmp
rolb
xlat
cmp
frstor
add
shrb
push
loope
jo
hlt
sbb
jb
imul
dec
dec
mov
pushf
sbb
jnp
jnp
mov
mov
sbb
sbb
or
sbb
jne
pop
jnp
jmp
push
push
adc
popa
or
in
adc
add
in
cmp
mov
loopne
gs
push
mov
and
cwtl
push
rcrl
daa
push
xor
jnp
data16
mov
xchg
mov
leave
inc
out
repnz
xor
mov
bnd
roll
xor
iret
jns
fists
fwait
jg
sbb
jge
pop
pop
out
push
sarb
xor
pop
xlat
ret
xchg
clc
jmp
jge
imul
mov
push
lahf
sar
push
scas
push
sub
out
dec
rorb
pop
leave
mov
cltd
mov
mov
fs
out
test
leave
sbb
inc
lods
lea
addb
lcall
add
sub
cltd
call
out
mov
es
jle
fists
or
insb
sbb
xor
push
xchg
dec
das
daa
repz
insb
loopne
cmpsb
jb
adc
je
cmp
jle
scas
pextrw
or
lahf
add
roll
idivl
lds
jle
rolb
jb
stos
ss
mov
enter
sbb
sti
ficompl
dec
or
repz
andb
call
or
jecxz
popa
test
sbb
daa
std
push
into
lret
adc
or
or
pop
cmp
lods
xlat
out
or
repnz
ror
pop
addr16
leave
fcomi
or
xor
xor
fs
arpl
scas
jne
in
xor
pop
fwait
jmp
sbb
pusha
lcall
cmc
inc
mov
shlb
daa
pop
mov
repz
cmp
leave
and
jae
jecxz
call
test
jo
fistpll
mov
mov
jg
in
rolb
movsl
sub
or
pop
icebp
stc
or
fidivl
mov
mov
jl
into
push
xor
outsl
fisubrs
iret
or
shl
testb
cmpsl
mull
mov
or
xchg
jne
mov
mov
cld
cmpb
sbb
out
jb
mov
aas
jle
mov
sbb
mov
arpl
mov
inc
mov
fs
cmc
xorl
sbb
outsb
push
fsub
mov
adc
push
sub
dec
rcrb
mov
inc
outsl
in
jl
push
dec
jns
div
fs
push
mov
adc
arpl
in
mov
jecxz
xor
insl
and
and
fsubr
add
out
std
xor
cwtl
inc
lret
mov
xlat
pop
stc
xchg
prefetcht1
sub
jns
mov
adc
scas
out
and
adc
push
mov
lods
xchg
add
nop
lock
mov
and
inc
jge
outsb
mov
xor
outsl
nop
ror
xlat
nop
pop
dec
inc
clc
dec
iret
nop
movsl
pop
mov
sahf
sbb
mov
dec
push
idivl
daa
clc
dec
dec
mov
push
cmp
and
pop
daa
inc
mov
jae
sbb
ficomps
negl
dec
fwait
in
jl
iret
lock
add
ret
adc
lock
in
mov
cmp
aas
xchg
aaa
xor
test
testb
fstl
push
in
lret
and
sub
add
shlb
hlt
jns
jg
push
loop
in
sar
stos
adc
icebp
push
add
into
out
jbe
jle
or
sbb
pusha
aad
cmp
and
mov
xchg
out
pop
loope
adc
xor
or
imul
in
sub
push
cmpsl
fwait
lods
mov
sbb
push
fidivl
push
mov
ss
jnp
testl
pushf
mov
andb
call
test
inc
pop
dec
aad
dec
mov
and
fnstcw
and
pusha
mov
jns
iret
insb
mov
adc
pusha
lcall
sahf
in
xor
xorl
arpl
sub
nop
aaa
dec
xor
and
xchg
fld
ljmp
cmpsl
hlt
mov
pusha
frstor
popa
fildl
push
dec
push
cltd
xor
imul
xchg
hlt
sbb
addr16
out
or
aaa
dec
fs
fisttpl
xchg
xchg
lahf
adc
decb
sbb
rorb
jne
sub
daa
aas
or
push
addr16
aas
jl
push
sbb
loop
mov
in
jae
loopne
xchg
jecxz
roll
pop
shll
mov
adc
cmp
mov
lds
mov
sub
scas
rcr
popa
mov
clc
add
cli
sbb
mov
cld
push
iret
sub
or
mov
cmp
ffree
cmp
jmp
test
pop
jp
lcall
cmc
bound
jbe
push
test
addr16
xor
jecxz
push
frstor
xor
push
out
pop
aam
and
call
loopne
lcall
in
or
iret
jno
push
xor
push
mov
mov
add
jne
mov
xor
and
inc
ja
jmp
out
cmp
cmp
repz
push
xlat
test
adcb
sub
sbb
std
pop
dec
nop
out
shll
sbb
aad
xchg
and
je
dec
gs
leave
or
push
mov
mov
cmp
fst
fstps
insb
xchg
test
or
mov
adc
lds
jp
in
cmp
ficoml
out
mov
imulb
adc
fst
xor
add
iret
or
xor
negl
les
fisubrl
cmp
inc
shrl
push
out
push
jmp
stc
mov
and
rclb
mov
and
flds
outsl
cmpsb
mov
xor
pop
xchg
mov
jne
sub
mov
sbb
ret
mov
jne
nop
rorb
xchg
push
icebp
das
sbb
inc
insb
sbb
cwtl
sbb
sbb
push
add
dec
adc
insb
ret
jne
movsl
popf
les
sbb
ret
lock
es
fnstsw
out
cmc
add
mov
jbe
mov
xor
sub
ret
mov
xchg
cmp
fidivl
sbb
test
fs
ret
scas
push
imul
popf
outsl
xor
sbb
cmp
sub
movsb
mov
fiaddl
inc
cmp
fstl
call
pcmpgtb
xor
jno
inc
adc
inc
fwait
stos
test
lods
lods
fnstenv
aad
jae
push
adc
inc
push
and
int3
loop
aad
push
push
pushf
xchg
nop
lods
addr16
stc
xchg
push
bound
mov
faddl
pop
call
and
lahf
xor
outsb
orl
or
pop
aaa
not
add
shrd
ds
sub
fs
add
in
lock
das
pop
or
sub
jecxz
dec
mov
lcall
cmp
mov
dec
mov
jae
jnp
pop
push
mov
or
push
jb
lds
dec
loope
stos
fistps
mov
lock
xor
mov
out
aam
pop
aas
inc
dec
mov
bnd
dec
mov
adc
sbbl
cmp
data16
faddp
sbb
lret
lret
fmul
scas
or
mov
dec
test
test
ret
sahf
nop
inc
or
cmpb
fmull
and
fmull
jo
rcll
repnz
dec
ds
add
sub
mov
inc
xchg
ss
and
lock
xor
testl
sbb
push
inc
cld
pop
adc
jge
lods
iret
or
xchg
cli
sbb
and
neg
sti
lock
push
lcall
outsl
pop
clc
imul
pop
or
loope
adc
push
xor
push
xor
xor
sub
mov
fdivp
dec
pop
push
sub
inc
ret
orl
scas
mov
fwait
push
push
popf
cmp
add
lds
das
inc
ret
sbb
in
jne
dec
movsb
into
push
fsts
aas
popf
inc
cmc
lods
addr16
and
cmp
icebp
scas
pushl
neg
push
jmp
mov
popa
jle
cltd
xchg
cmpb
inc
ja
xchg
add
popf
imulb
or
dec
daa
popa
lret
sti
mov
outsb
pop
es
xchg
gs
psubd
mov
out
test
movsb
arpl
sar
sub
inc
insl
out
mov
adc
ss
pop
fldl
jle
ljmp
dec
fcomps
out
dec
shll
fs
hlt
out
stos
test
mov
int3
pop
pop
jmp
movsb
inc
or
jmp
or
cmp
test
sub
mov
sbb
imul
movsl
subb
lcall
jne
dec
fidivs
sub
es
adc
cltd
inc
pop
sbb
push
inc
out
mov
xchg
pop
stos
and
mov
je
xchg
sbb
dec
addr16
jecxz
sub
pop
xlat
jb
iret
bnd
mov
stc
mov
loopne
push
jo
xor
xor
add
gs
scas
mov
movsb
fsubrl
out
in
leave
sub
into
jl
mov
pop
xor
fistps
cmp
or
stos
lea
lds
mov
aad
loope
aas
fcmovne
sub
add
loop
or
and
mov
lds
jbe
xor
scas
mov
mov
sbb
sarb
xchg
gs
out
ja
lahf
inc
and
mov
das
arpl
lcall
mov
adc
and
push
movsl
fimuls
and
int
fadds
repz
int
jp
out
shll
hlt
push
xor
mov
fwait
loop
inc
mov
into
out
push
fidivrs
int
enter
fisttpll
hlt
aam
ds
andb
push
cmpsl
dec
sbb
cld
inc
in
push
mov
scas
fucompp
adc
and
jo
lods
sbb
inc
sbb
xor
xor
lret
ss
test
jecxz
cmp
int
mov
lret
or
js
or
adc
and
mov
pop
mov
loope
inc
mull
dec
dec
push
scas
xchg
orl
add
nop
out
sti
mov
mov
and
aad
movsl
dec
jle
push
fabs
imul
sbbl
les
jbe
adc
leave
xor
dec
cmp
sbb
incb
dec
loope
pusha
xchg
push
test
into
adc
mov
xorl
aad
push
frstor
cld
jne
jp
jg
sub
scas
fdivrl
and
data16
add
push
jmp
dec
in
insb
inc
imul
add
push
push
cld
mov
adc
xor
mov
shrb
push
sahf
dec
xchg
cmp
push
xor
lahf
xchg
jecxz
lock
js
cs
add
je
mov
adc
or
and
mov
push
loop
sbb
dec
and
lret
test
in
outsl
stos
cld
cmp
sahf
stc
fimuls
lods
clc
sub
ljmp
stc
pop
xor
stos
js
xchg
push
cmpsb
mov
jns
pop
inc
inc
dec
jns
cltd
mov
and
pop
mov
add
sbb
roll
mov
pushl
xchg
addr16
pop
or
xchg
dec
je
in
cmp
fst
int
sbbl
stc
jno
jne
loop
mov
and
push
mov
pop
push
push
sti
sahf
iret
leave
pop
loop
and
dec
je
cmpsb
out
loop
inc
popa
dec
inc
push
dec
xor
jl
lods
mov
mov
xchg
xor
push
mov
mov
sub
test
mov
les
js
and
loopne
pop
mov
outsl
lods
mov
fists
lea
push
adc
stos
sub
and
jnp
sub
add
mov
and
mov
loope
fcmovnbe
cli
stc
test
push
or
cmc
jp
dec
jne
cmpsb
and
push
mov
sbbb
mov
int
xchg
cmpsl
fdiv
in
ret
in
lcall
ja
lret
mov
mov
mov
jge
adc
xchg
xchg
lret
pop
in
sub
les
xor
or
or
pusha
bound
outsb
push
add
jo
pop
clc
arpl
mov
cmp
xor
inc
dec
mov
popa
mov
inc
xchg
addb
cmp
mov
into
icebp
dec
faddl
sub
push
jb
inc
test
xor
xor
sub
iret
lock
sub
ljmp
int3
mov
lods
dec
gs
ja
mov
mov
jno
hlt
xchg
or
stos
jecxz
sub
outsb
push
fisubl
sbb
je
sub
in
mov
sub
add
jns
call
insl
push
mov
jle
jg,pn
fcomp
cmp
push
mov
sub
dec
mov
xchg
jge
push
add
inc
sub
xor
fstp
and
mov
or
in
pop
pop
lods
mov
dec
addb
cmp
dec
add
pop
mov
xor
push
jno
popa
test
xchg
mov
push
sub
filds
jecxz,pt
popa
xor
test
mov
mov
jne
int
xor
push
nop
inc
dec
push
mov
movsl
stc
add
push
pop
ss
aad
dec
fwait
loop
sbb
loop
mov
pop
and
inc
int
add
ret
pop
inc
es
ljmp
repz
ret
mov
sarb
je
popf
ljmp
and
ljmp
adc
loop
loopne
xchg
sub
jae
jns
pop
cmp
rorb
imul
pop
repz
lret
inc
inc
in
lock
imul
int3
mov
push
sahf
cmp
inc
xor
dec
je
or
sbb
stc
popl
js
sub
push
arpl
xchg
cs
mov
adc
ja
addr16
repz
mov
ljmp
les
and
das
mov
call
mov
cmpsl
jmp
adc
or
or
shlb
mov
mov
cmp
sub
sub
sbb
mov
insb
xchg
das
inc
stos
cmp
cld
aaa
xchg
push
sti
fnstcw
lds
jmp
push
stos
jge
cld
sub
dec
call
mov
out
cmp
jge
insl
inc
mov
xor
cmpsb
ret
xor
adc
imul
popa
add
rcrb
cmp
addps
ret
jo
int3
cs
dec
popl
imul
add
pop
ficoml
push
mov
outsb
sbb
cltd
pushw
add
sti
mov
mov
movntps
data16
movsl
pop
xchg
movsl
out
push
push
hlt
or
enter
and
inc
mov
in
mov
popf
pop
movsb
xchg
and
out
push
mov
popf
mov
mov
in
loopne
dec
lcall
xchg
lcall
nop
sub
stos
arpl
push
jns
ds
push
or
shr
mov
sti
scas
adc
popa
jg
pop
outsl
lahf
jge
mov
xor
out
cli
cli
dec
cwtl
aas
sti
and
xchg
cmc
push
mov
xchg
pop
push
dec
repnz
mov
mov
adc
or
xchg
stc
pop
setae
sub
pop
cltd
test
pop
mov
fistl
xor
neg
stos
ja
push
ss
int
shl
inc
mov
sti
cs
jmp
es
add
mov
mov
gs
das
lods
mov
adc
push
dec
inc
mov
pop
popf
aam
mov
insl
xchg
nop
aad
andb
pop
test
add
push
push
out
adc
orl
lds
insl
fisubrl
mov
mov
sbb
pop
cmpl
push
jecxz
aam
stos
test
and
orl
adc
ret
adc
jae
sub
in
jmp
mov
repnz
mov
inc
jecxz
xchg
cmp
iret
mov
mov
cs
dec
xchg
test
and
popf
xor
movsl
sarb
adc
mov
in
jno
cli
sub
das
inc
testl
cmp
pop
cmpsl
inc
push
fisttpl
mov
mov
cmc
setg
ds
orb
movb
add
inc
sbb
lds
or
pop
adc
xor
mov
mov
inc
clc
mov
insl
push
mov
loope
push
es
mov
or
stos
mov
dec
shrb
je
insb
pop
sbbb
xor
loope
pop
xchg
leave
push
testl
mov
sbb
add
shrl
inc
pop
mov
jbe
dec
or
addr16
pop
insl
aaa
js
divb
cmp
fists
fdivs
sti
loopne
lcall
cmp
dec
pushw
lret
sbb
pop
xchg
mov
imul
ss
push
shll
and
loope
xor
das
enter
sub
negl
xor
not
jne
mov
mov
dec
js
subl
ss
mulb
pop
scas
sbb
jge
mov
fcompl
ljmp
jno
adc
fsubrs
xor
cmc
mov
mov
lods
pop
fmul
fs
jl
int3
lods
das
in
test
push
in
incl
jbe
push
aam
les
es
ficoms
stos
inc
stc
js
clc
test
lret
cld
insl
in
test
rorb
add
xor
pop
pop
add
inc
fisubs
ret
gs
hlt
jns
lea
int3
adc
std
push
xor
dec
mov
push
jmp
inc
ret
hlt
popa
add
sub
and
lcall
push
mov
testl
xchg
cld
cltd
xor
mov
lret
in
rcrl
dec
loopne
mov
jb
mov
add
lods
mov
fiadds
mov
pushl
ror
push
shrl
in
pop
lock
ja,pt
jo
sub
sub
dec
pop
sahf
dec
loop
cmp
push
and
push
jne
or
cmp
xor
pop
sbb
dec
loope
cmp
je
adc
into
gs
testl
fcoms
mov
and
jle
sub
dec
leave
cwtl
das
repz
hlt
in
outsl
testl
jecxz
fidivs
add
out
movsb
pop
cmc
fstpl
mov
sub
lds
and
sub
sahf
xor
jbe
push
movsl
sbb
fidivs
loop
pop
sbb
xchg
loopnew
cmc
sbb
out
fs
and
xchg
mov
das
rclb
mov
sbb
sub
cwtl
das
add
fdivl
loope
cmc
sbb
xchg
cmpsl
cmp
xchg
gs
xchg
jne
adc
dec
loope
icebp
sbb
mov
cmp
lock
sarl
sahf
xor
xchg
cmp
mov
out
test
jne
adc
sbb
insb
xlat
outsb
xchg
cmp
fs
pop
icebp
test
jns
adc
mov
outsb
fsubrs
cmp
dec
jecxz
push
mov
add
nop
fists
or
sub
push
mov
sti
xchg
scas
push
repnz
fidivl
popa
das
lcall
xchg
sub
add
inc
fucomi
pop
sub
mov
xchg
sub
test
pop
mov
hlt
add
mov
cli
jae
and
sbbl
jle
mov
data16
lods
inc
imul
in
mov
mov
inc
adc
add
and
inc
pop
cmc
jg
nop
daa
adc
jmp
imul
inc
push
ljmp
xchg
sub
pop
std
aas
es
fsubs
je
add
add
gs
jge
scas
cmpsb
dec
outsl
push
jb
imul
int
mov
pop
out
lret
bound
jle
inc
test
push
lods
leave
loopne
repz
dec
ficomps
mov
jo
xchg
stos
sub
or
stos
push
cmpsb
cmp
hlt
jb
int3
lods
push
pop
mov
int
mov
lods
push
testb
jb
fsubrl
testb
pop
xchg
jecxz
jne
stos
add
cmp
mov
test
loopne
or
or
mov
dec
in
add
lds
movsl
push
in
fstpl
xchg
into
gs
xchg
sub
repz
sub
dec
in
dec
sahf
xor
sub
push
movsl
jae
push
mov
xchg
test
cmp
mov
dec
in
mov
aad
aaa
gs
outsl
shl
mov
jle,pn
pop
jmp
cmp
jnp
or
ss
in
lds
add
pop
ss
in
push
movsl
adc
xor
testb
push
xor
cmp
dec
loopne
pop
cmc
mov
cmpsb
jb
loope
mov
mov
fimuls
or
cmp
test
push
movsl
lods
repnz
stc
dec
testb
xchg
inc
fmul
popa
pop
out
cltd
lock
dec
sbbl
ds
jbe
ret
pusha
pop
cmc
lcall
sbb
inc
ss
or
mov
fwait
or
in
lea
mov
imul
inc
sub
jp
popa
clc
ss
testb
in
add
movsb
mov
or
daa
mov
or
mov
sbb
and
testb
aad
rorb
testb
jnp
adc
jbe
mov
xchg
sub
clc
cmp
xor
popf
push
cmp
xchg
or
cmp
pop
push
lods
mov
fs
stos
or
fnsave
inc
fldcw
or
xchg
aas
dec
push
pop
cltd
sahf
sbbb
mov
les
adc
insl
imul
mov
roll
or
pop
out
push
add
push
ljmp
adc
dec
pop
das
movb
ficomps
rorb
mov
push
call
or
xor
mov
inc
call
or
jp
sti
out
test
pusha
repz
mov
das
aam
sub
cmp
push
in
and
stc
mov
push
jns
jae
loope
xchg
sub
add
dec
sub
inc
nop
dec
lret
mov
jbe
mov
jmp
movsl
sub
dec
sub
jl
sub
repnz
idivb
leave
xor
andb
pop
inc
in
cmp
push
aad
mov
inc
cmp
pop
aam
test
fsubrl
scas
add
aam
jmp
lods
xlat
notl
jno
and
leave
ret
je
imulb
movb
jp
mov
dec
cwtl
insb
clc
fildll
in
jl
adc
mov
arpl
sti
mov
mov
sahf
mov
mov
add
sub
adcl
and
dec
jae
je
inc
fcomip
fwait
mov
out
pop
ljmp
scas
cmp
push
ret
incl
pusha
push
cld
mov
xor
lcall
sbb
stos
pusha
push
lock
rolb
leave
dec
aas
mov
bound
fstps
mov
jmp
decb
jno
dec
or
je
fwait
orb
scas
jne
jmp
and
push
xchg
push
xor
les
inc
add
shll
cmp
pop
push
insb
jge
outsb
lret
push
neg
stc
jp
or
call
mov
imul
mov
fsts
repz
xor
dec
xchg
and
xchg
mov
movsl
push
fucomp
cmc
test
call
and
jnp
add
lds
test
sbb
pop
ficoml
sub
addr16
test
mov
ficomps
iret
imul
imul
test
lds
das
leave
cld
fdivr
jnp
add
or
mov
dec
call
pushf
fidivrl
mov
insl
pop
dec
push
aas
mov
sahf
jp
int
movsb
aad
jmp
push
loope
pop
lret
adc
mov
aas
xchg
mov
mov
cmpsl
sub
shlb
inc
xor
jge
add
iret
xchg
ljmp
clc
jge
sbb
lea
js
fwait
pop
outsb
mov
mov
lret
adc
mov
xor
es
stos
push
mov
int3
push
cmpl
loope
loopne
inc
jmp
sbb
int
flds
or
push
fstps
movsl
or
sub
pop
sahf
idivl
cmp
mov
cmp
mov
xlat
gs
mov
int3
loopne
add
xor
das
int
dec
dec
out
sbb
mov
fimull
xchg
mov
sub
pop
loope
je
imul
mov
ret
or
sub
test
arpl
test
rorl
stc
mov
jle
xor
push
fwait
xor
stos
mov
cmp
das
jmp
pop
sbb
fsubrs
movsb
push
movsl
aad
ljmp
in
scas
push
dec
fs
jp
ds
fwait
outsb
add
mov
xchg
je
mov
bound
push
popf
mov
ss
movsb
cmp
cmp
mov
sbb
repnz
loopne
cmpsl
adc
mov
les
jne
test
mov
clc
add
lret
sti
sub
dec
jge
push
scas
outsb
jnp
mov
ret
hlt
and
cmova
sbb
lret
sti
mov
inc
fmuls
shrl
insl
pop
negb
mov
adc
mov
pushf
xor
sub
push
mov
dec
loop
cmc
fsubrs
shrb
pop
inc
icebp
mov
jg
push
mov
movsb
cmp
mov
cmp
inc
cli
in
xor
addr16
popa
adc
fistps
mov
call
loopne
sbb
movsl
inc
sub
ret
cmp
movsl
mov
int3
dec
loopne
out
push
adc
je
mov
ss
jmp
push
xor
test
fs
fdivl
cltd
sti
xchg
lret
fidivrs
mov
xor
jne
cmp
shlb
add
ljmp
mov
mov
inc
fmull
sti
xchg
fbstp
jmp
aam
dec
pop
sub
fcomps
aam
lcall
cltd
fadd
insl
add
decb
cmpsb
sbb
ds
pop
mov
in
repnz
inc
pop
mov
in
push
clc
es
in
test
rcrl
or
jge,pn
mov
mov
js
addr16
movsb
cmp
push
and
lods
ret
shl
shll
out
ret
xchg
ja
lock
mov
paddw
call
mov
into
fwait
mov
xchg
pop
or
inc
ds
sbb
mov
mov
aad
mov
and
int3
inc
imul
out
sbb
dec
adc
dec
jmp
cmc
sbb
add
stos
div
sbb
jmp
cld
xor
mov
push
jnp
xchg
cltd
xor
mov
dec
sub
jne
cmp
aam
popf
lds
xchg
mov
mov
scas
in
ret
push
stc
nop
xchg
adc
sub
nop
daa
fwait
enter
fidivl
pop
mov
int
lock
xchg
sub
in
mov
mov
dec
lds
mov
scas
inc
es
jecxz
loopne
ja
ss
test
repnz
stos
mov
mov
pusha
mov
push
and
int
xchg
fdivl
in
pop
out
sbb
cmpsb
jp
fnstcw
icebp
mov
test
mov
lret
dec
sbb
push
cli
repz
xchg
and
imul
push
pop
mov
sbb
adc
loop
xchg
insb
pop
sahf
movsl
in
adcl
xchg
sub
daa
and
popf
adc
sub
sbb
push
in
loop
data16
push
fwait
ja
int3
xchg
fs
add
cltd
xor
push
mov
test
popa
clc
lods
fnsave
stc
and
lock
enter
jae
cld
test
mov
pop
push
jae
xorl
std
test
loopne
insl
stos
pop
repz
repz
popa
clc
push
icebp
sbb
lock
dec
stc
cmp
rep
lahf
imul
test
movsl
cmp
pop
pop
lock
cmpsl
ds
mov
cli
loop
inc
adc
push
jmp
lods
jecxz
fucomip
popa
clc
fldt
test
and
mov
lret
mov
mov
pop
repnz
data16
mov
rclb
ret
das
out
popa
repz
in
mov
dec
push
dec
jecxz
cmc
movsl
cmp
mov
testb
lods
gs
fnstsw
stc
insb
push
dec
jecxz
and
gs
mov
jbe
pop
ret
dec
loopne
cmpsb
in
fadd
data16
mov
mov
xchg
mov
fsubrs
and
dec
sbbl
sub
jp
shll
into
add
pop
jo
pop
lock
jae
aaa
gs
jae
push
popf
xor
cltd
dec
out
dec
scas
inc
jge
xor
jns
cmp
stos
ret
cmc
test
es
dec
dec
sub
add
ret
nop
daa
ss
gs
pushl
addr16
mov
inc
imul
inc
adc
idiv
scas
inc
das
idivl
jmp
in
jecxz
fbstp
dec
nop
mov
lahf
lds
int
or
jg
and
out
push
jns
inc
imul
adc
imul
or
mov
testl
xor
rep
add
jecxz
or
push
loop
pop
aam
inc
frstor
sbb
js
fisttpl
or
scas
inc
mov
mov
test
shll
inc
cmpsb
insb
mov
pop
sub
push
pop
push
stos
inc
dec
jecxz
imul
cld
xchg
fdivrp
lods
inc
out
addr16
lods
xchg
out
test
iret
sbb
dec
sbb
or
lret
mov
shlb
fbstp
shrl
and
xchg
push
xlat
mov
leave
in
sbb
cmpsb
inc
fcomp
jle
inc
jo
dec
loope
fs
sbb
xchg
sbb
fbld
stos
inc
jg
ret
pop
mov
pop
int
lea
aas
gs
pop
adc
test
or
cmp
cs
je
aad
sahf
push
loope
sub
mov
fsubrs
xchg
aas
in
xor
jge
mov
fsts
push
xchg
cwtl
das
fstpt
in
jno
fnstenv
or
xchg
and
xchg
sub
add
aam
mov
jno
xchg
movsl
aam
test
adcb
dec
cmpl
cmp
push
out
in
inc
es
jmp
jbe
mov
fsubrl
sbb
cmp
sub
fwait
pop
push
out
jnp
or
inc
push
mov
mov
xchg
sub
fisttps
rcr
mov
jo
test
addr16
outsb
xchg
mov
adc
push
dec
or
jnp
rcrl
inc
fidivs
into
dec
loopne
inc
add
ljmp
and
mov
mov
push
jge
xchg
cmp
or
in
ret
hlt
lock
cmp
mov
inc
pop
icebp
js
add
xor
lea
lret
xchg
cs
mov
xlat
and
shlb
inc
shrl
xlat
jg
leave
push
xchg
inc
or
aad
stc
adc
repz
add
mov
in
dec
jecxz
call
xchg
leave
or
into
jnp
mov
movsl
jp
mov
pop
nop
sahf
mov
adc
daa
pop
and
xchg
in
xchg
pop
fsubs
mov
loope
lahf
ss
aaa
into
lret
jge
mov
cmpsb
insl
cwtl
das
pop
pop
jae
nop
lea
mov
pop
std
xchg
sub
jecxz
dec
adc
or
fsubp
xchg
sub
addr16
xchg
cwtl
sbb
mov
push
int3
xchg
sub
mov
push
out
cs
sub
mov
mov
pop
push
xchg
sub
sbb
enter
xchg
sub
jo
popa
mov
pop
mov
sub
mov
fs
sbb
dec
cmp
sub
scas
sbb
pop
ror
popa
add
mov
sbb
mov
inc
inc
xlat
jne
je
stos
push
push
ljmp
jge
sub
or
rcll
hlt
mov
push
cwtl
aad
or
xchg
stos
pop
xor
dec
push
push
lods
xchg
cmp
jo
insb
add
or
cmp
push
call
cmc
call
xchg
rcrb
stos
mov
push
stos
leave
in
test
mov
std
xchg
jb
xor
mov
mov
inc
fincstp
and
adc
jns
shrb
push
push
in
test
mov
outsb
outsl
cld
xchg
popa
pop
lcall
icebp
mov
and
fidivs
inc
mov
jmp
test
scas
xchg
and
push
subb
pop
rcrl
data16
jnp
or
aaa
incb
out
shlb
fs
lods
inc
out
in
fcom
cwtl
fbstp
sbb
mov
pusha
sbb
sub
fistps
fcmovnb
pop
int
jns
jecxz
inc
fldl
les
push
stos
mov
into
es
iret
data16
add
sbb
dec
push
lods
inc
js
inc
frstor
jl
insl
fmull
push
jno
dec
arpl
sub
sbb
xchg
mov
add
mov
cmp
rclb
scas
inc
lods
loope
imul
stos
rcrl
lods
inc
andb
cltd
ret
cmp
pushf
push
mov
inc
sub
pop
sahf
and
or
shlb
ss
popf
dec
in
mov
push
test
push
xchg
sub
mov
mov
dec
push
int
inc
hlt
clc
daa
sbbl
hlt
loopne
mov
clc
shrb
stos
xor
fucomi
push
mov
fs
cmc
xchg
in
shrl
xor
xchg
orl
push
or
adc
movsb
sub
aad
xchg
sbb
dec
loopne
pusha
xchg
sub
jp
ret
pop
or
imul
inc
rcrl
push
movsl
cs
fbstp
sub
rcrl
xchg
sbb
cmp
ja
add
xchg
cs
loop
notb
mov
test
jle
imul
sahf
ss
fdivrl
cmpsl
mov
shrl
test
xchg
mov
inc
fisttpll
pop
stos
or
sub
adc
jl
out
test
into
jno
cld
outsb
mov
pushf
sbb
imul
mov
lcall
addr16
pop
adc
inc
mov
enter
movsb
xchg
add
xor
sub
in
outsb
add
ss
and
push
push
inc
sub
dec
enter
movsb
cmp
mov
ret
cmc
add
and
fimuls
movsl
adc
inc
xlat
fsubrl
sbb
jmp
lret
adc
pop
lock
xchg
cs
jo
adc
mov
xor
loopne
push
cmp
xchg
fsubrl
cwtl
pop
clc
dec
and
push
or
add
dec
loop
inc
das
xor
cmp
test
mov
mov
lea
sub
ret
pop
push
adc
jo
inc
pop
xor
jg
lret
std
cmp
mov
stos
pop
mov
inc
adc
dec
or
pop
repz
push
in
stc
and
cmpb
cmpsb
fwait
xor
dec
lcall
cmp
add
fbstp
inc
cld
xchg
xor
icebp
mov
xor
cmpsb
movsb
fistpl
mov
test
fcomps
mov
int3
out
dec
jecxz
mov
test
inc
push
adc
xchg
sub
mov
push
out
mov
pop
or
iret
or
pop
aas
mov
cwtl
call
xchg
or
and
inc
fsubrl
push
inc
fiadds
aas
pop
out
jo
sti
xchg
in
or
cmp
inc
fsub
ret
xchg
sub
jecxz
pmullw
lods
inc
mov
jo
leave
testb
mov
push
mov
aas
sbb
mov
inc
dec
out
ret
sbb
aas
mov
lahf
sub
mov
cli
sub
pop
mov
test
dec
enter
mov
xchg
lret
bound
lds
cwtl
mov
add
lret
adc
and
sbb
sbb
cmp
xor
dec
int3
push
in
decb
ja
mov
inc
cltd
xor
cmpsl
loopne,pt
mov
cmp
fidivs
add
xchg
dec
jl
cmpsl
ja,pt
inc
fnstenv
xchg
jecxz
or
jl
xchg
call
mov
mov
sbbl
jge
in
dec
push
iret
data16
pop
insb
roll
repnz
mov
mov
xchg
inc
inc
fdivl
pusha
notl
adc
inc
daa
inc
fistpl
stos
pop
scas
sbb
test
or
imul
jecxz
aam
ret
pushf
rclb
lods
inc
in
shrb
adc
cld
xchg
test
push
lods
outsl
pop
dec
out
sbb
rorb
cmp
insb
repnz
ljmp
jge
mov
jmp
ljmp
pop
daa
adc
mov
test
sbb
add
popa
mov
sarb
mov
jmp
sbb
nop
mov
push
ljmp
ds
dec
xchg
sub
adc
cmpb
iret
iret
add
cld
xchg
jns
add
sti
xchg
or
in
jg
fsubrl
pop
inc
fimuls
xor
bound
push
xchg
cmc
mov
js
imul
sbb
push
fimull
sti
cmp
xchg
cmp
scas
stos
add
sub
adc
dec
hlt
cmp
fildll
dec
out
mov
sbbl
xchg
xchg
mov
mov
push
in
ret
test
and
fisttps
push
in
cmc
and
push
mov
sbb
xchg
push
out
insl
in
scas
inc
sbb
jns
dec
in
add
mov
cld
sti
xchg
push
push
push
out
test
cmc
jmp
xchg
aaa
into
mov
dec
in
dec
adc
loopne
jae
push
jecxz
out
insl
xor
sub
mov
scas
inc
or
inc
fnstsw
mov
jmp
mov
pop
and
mov
decb
leave
lretw
add
dec
mov
aaa
and
jbe
sub
cmp
xchg
rcrl
jb
mov
jl
jp
aam
enter
push
xchg
mov
pop
adc
or
in
cmpl
in
aas
es
jg
sbb
xchg
sub
and
mov
or
pop
aad
or
jl
testl
inc
xor
mov
aam
push
fcomps
or
adcb
mov
pop
in
or
iret
mov
lods
inc
stos
inc
dec
loope
push
out
xchg
xchg
xor
inc
xchg
sub
or
cmpb
sarl
lds
imul
xor
adc
fcoms
stos
leave
push
xchg
sub
inc
mov
ljmp
cld
xchg
xor
add
cwtl
subl
rorb
jl
xor
xchg
out
xchg
iret
sbbl
imulb
and
sbb
mov
sub
das
adc
test
sti
xchg
jle
mov
push
or
lods
cmp
inc
ret
repz
enter
icebp
mov
inc
je
jns
mov
lods
add
add
int
dec
pushl
enter
jb
add
xchg
mov
mov
scas
aas
insb
insb
add
cmp
stc
popf
cmp
push
adcl
add
jg
mov
scas
or
pop
and
mov
mov
rcl
es
jp
push
lods
sbb
cltd
xor
inc
mov
jb
and
cmp
lock
pop
push
mov
andl
es
scas
pop
mov
push
addr16
aaa
dec
nop
daa
cmp
xor
mov
mov
loop
xchg
movsl
cmp
xor
mov
pop
test
jns
jecxz
imul
adc
xchg
es
xor
cwtl
cmp
sub
adc
lds
xchg
sub
insl
leave
insl
add
push
shrl
dec
out
icebp
sti
andb
mov
mov
and
movsl
mov
push
fsubp
enter
mov
fbstp
insb
sbbl
sub
lds
ficompl
push
pop
adc
xorb
out
mov
sti
xchg
int
rcrl
adc
lods
inc
push
xchg
mov
jno
enter
mov
cmp
mov
pushf
inc
add
gs
dec
leave
pusha
jl
inc
xlat
jmp
in
xchg
sub
into
push
movsl
add
jle
nop
mov
push
call
mov
nop
daa
jns
cmp
mov
insl
aaa
xchg
insl
pop
jo
and
loop
and
dec
in
ficoms
setae
adc
dec
sbbl
cmp
dec
mov
sbbb
dec
fnstenv
dec
js
cmp
repz
insl
add
loope
movsb
adc
jne
fildll
outsl
push
nop
xchg
sbb
adc
xor
mov
insb
add
stos
je
sbb
jno
cmp
imul
rcrl
les
push
es
xchg
sub
add
dec
ss
into
add
daa
dec
mov
pop
lock
adc
add
pop
mov
pop
icebp
xchg
dec
jge
jle
nop
daa
pop
or
cld
cwtl
ret
ret
stos
lea
int3
arpl
cs
lahf
jp
popf
stos
scas
mov
and
lahf
xchg
add
or
hlt
sbb
dec
adc
jge
and
inc
fwait
xor
test
sub
mov
pop
sub
loope
aam
sti
xchg
jb
add
movb
ja
aaa
int
cwtl
inc
fcmove
cmp
jmp
push
xchg
outsl
add
jno
mov
adc
xor
pop
adc
loopne
gs
orl
add
mov
fstps
mov
jg
ret
cmp
stc
pop
cmp
mov
decb
pop
repz
push
mov
lds
jg
pop
dec
popf
scas
inc
into
imul
xchg
mov
jl
andb
lods
push
adc
mov
cmp
mov
ret
mov
xor
dec
roll
in
mov
sub
and
out
test
mov
jb
lods
negl
pop
dec
inc
test
sub
jge
push
xchg
jo
das
push
jmp
cmp
rcl
xchg
dec
sbb
push
adc
dec
stc
leave
dec
inc
xor
mov
push
xchg
pop
les
pop
mov
pusha
mov
int
or
cmp
xchg
xchg
push
or
xchg
sub
add
mov
in
ds
pop
cmp
pop
mov
out
scas
addb
inc
dec
jecxz
lods
arpl
fimull
adc
icebp
jge
loopne
inc
lea
xchg
adc
cmp
pop
cmpsl
jle
inc
sahf
mov
call
push
int
data16
cs
aaa
into
cmp
decl
sbb
fldt
or
aas
out
inc
call
dec
sti
push
std
and
cmovns
sbb
scas
mov
pop
int
insl
mov
test
jb
jle
pop
inc
mov
mov
jp
dec
enter
movsl
fcmovnbe
iret
filds
xor
call
popl
fcomp
sar
out
or
push
das
pop
and
sub
fwait
lods
sub
cmp
aas
inc
ret
sbb
stos
sbb
inc
xlat
aaa
or
pusha
xor
jns
sbb
xchg
pop
out
cmp
outsl
test
cltd
xor
lds
lods
loope
out
fidivrl
jnp
push
hlt
mov
xor
jecxz
cli
dec
dec
push
inc
out
lea
inc
sub
ja
cmpb
lock
or
cmpsb
inc
sub
test
or
lcall
cmp
adc
mov
mov
add
lahf
and
sbb
rcll
xor
and
mov
out
gs
int
in
mov
shr
mov
adc
inc
jne
dec
mov
inc
xchg
orl
movsb
pop
push
xchg
movsl
lahf
stos
pusha
not
hlt
stos
push
scas
ror
pop
jmp
cld
jns
in
adc
adc
stos
imul
cmp
or
fistpll
jno
imul
xchg
jg
lds
mov
mov
insb
in
ret
aad
sub
cmc
sub
add
sbb
adc
repz
ss
inc
push
es
sub
dec
inc
fdivl
xor
xchg
cmpsl
cmp
xchg
cld
jae
push
mov
push
sub
out
stos
dec
loop
or
push
ds
imul
xchg
dec
xchg
xorl
lret
mov
popa
loop
cmpsb
cmp
xor
push
pop
sahf
xchg
loop
xor
add
fldenv
stc
sub
cmp
sub
pop
jg
pop
icebp
jp
sahf
xor
xchg
dec
push
jmp
jmp
or
and
inc
lods
inc
js
clc
jecxz
lret
cmp
jmp
jmp
push
lods
rorl
cmp
pop
sub
shll
insb
std
dec
ret
pop
loop
sbb
xor
push
add
clc
test
ja
sub
pop
cltd
sbb
and
popf
or
pop
lock
lret
lret
shlb
sub
push
mov
mov
add
jp
jno
iret
mov
ret
push
in
hlt
cmpsb
pop
jp
sub
stc
pop
stc
add
sub
push
mov
cwtl
das
jle
popf
xor
mov
mov
rolb
mov
adcb
hlt
cmc
mov
rcrb
stos
jns
mov
dec
int3
js
jno
out
iret
data16
testl
push
xchg
or
mov
shr
jne
enter
jo
mov
shll
hlt
adc
jbe
seta
jnp
js
jbe
push
xchg
stos
icebp
jp
movsl
xchg
sbb
sbb
pop
cmp
pop
push
stos
jne
mov
shll
filds
mov
pop
ds
jnp
or
into
nop
daa
add
scas
inc
push
negb
arpl
enter
pushf
aam
into
sbb
mov
and
mov
jae
inc
fdiv
xchg
cs
fs
inc
out
jecxz
sbbb
cmp
push
mov
pop
mov
fisubs
je
xor
pop
arpl
loop
mov
sbb
or
iret
mov
push
mov
stos
push
in
fstpt
shrl
pop
icebp
decl
sub
mov
xchg
movsl
cmc
into
test
cmpsb
mov
mov
daa
mov
das
cmp
mov
aas
pusha
cmp
or
push
jl
loope
push
std
xor
or
push
sub
sbb
inc
and
cld
xchg
pop
sbb
sbb
dec
xor
sti
daa
push
or
sarb
pop
add
shrl
std
mov
xor
mov
push
push
sub
je
das
fnstenv
jge
xchg
scas
xor
mov
sbb
pop
and
into
push
sub
lret
push
in
cmpsb
jp
call
stc
int3
outsl
push
sbb
and
lahf
jb
inc
movsb
ror
repnz
notl
in
test
jmp
mov
pushf
mov
and
fistpll
cmove
inc
pop
data16
lea
stc
xchg
scas
test
loopne
adcb
inc
imul
mov
pop
cmp
xchg
pusha
ss
push
dec
dec
adc
cmp
push
mov
popa
xor
jmp
jns
push
and
lahf
cmpsl
inc
push
mov
xor
mov
loope
xor
std
cltd
loopne
push
inc
popa
inc
in
test
jb
fnstsw
aad
int
push
cld
dec
dec
xor
jmp
pop
inc
mov
sub
stos
popf
stc
test
sbb
fcomps
cmp
dec
stc
sahf
xor
lahf
dec
mov
or
lahf
fidivl
adc
and
mov
cltd
inc
push
lods
jbe
iret
data16
xchg
xor
enter
aas
jmp
or
xchg
cmp
insl
mov
shl
mov
ss
inc
adc
decb
stos
test
xchg
jg
std
mov
popf
or
rcrl
and
pop
movsb
fbstp
jg
fnstenv
shlb
pop
imul
lods
cmp
rolb
out
jo
xchg
int
ret
cmp
mov
adcb
adc
mov
out
inc
xlat
adc
out
iret
sbb
jo
add
sahf
xor
movl
or
je
xchg
scas
inc
lds
jbe
fisttpll
lahf
add
xorl
popf
xor
mov
test
xchg
mov
and
cmc
dec
pop
hlt
cmp
add
jmp
sbb
pop
mov
stc
roll
cmp
notb
inc
flds
mov
sti
out
cmp
xchg
stos
mov
cltd
in
mov
mov
insb
shrb
hlt
mov
mov
lahf
ss
stc
in
pop
out
or
enter
clc
fwait
scas
push
mov
mov
in
addl
insb
add
xchg
int3
arpl
push
fcomps
or
xchg
inc
fld
mov
cli
ficoml
add
inc
mov
pusha
mull
int
push
or
shll
add
inc
shll
addr16
pop
xchg
xor
leave
jns
adc
xor
testb
ficompl
mov
xchg
ret
cli
mov
aas
and
jb
faddl
ss
pop
sub
dec
xchg
mov
aam
xlat
or
add
cmc
outsb
fwait
repnz
popf
xor
xlat
loopne
adc
adc
int
mov
mov
mov
cmovns
cmp
aaa
into
dec
aam
out
imull
push
pop
lods
sbbb
sbbb
cmc
adc
cltd
xlat
cmpsb
out
test
int
sti
cmc
cmp
stos
stos
ss
lret
xor
mov
gs
test
lds
icebp
loop
jecxz
inc
in
out
test
cwtl
xchg
or
sahf
xor
and
rclb
xchg
sub
pop
mov
orl
jns
gs
sbb
jp
inc
popf
and
xchg
add
dec
and
inc
push
popf
aaa
stc
addr16
sbb
pop
dec
xchg
cwtl
into
insb
mov
push
or
sti
xchg
repnz
xor
int
jne
test
xchg
sub
cmpsb
hlt
mov
lods
test
cmp
push
fmul
sub
mov
fbstp
rcrb
loope
jecxz
add
xchg
ja
pop
bnd
pop
repz
mov
pushf
dec
stos
inc
jns
out
das
sub
push
push
mov
inc
dec
arpl
in
ja
jo
adcb
sti
loope
clc
adc
and
push
mov
out
xor
inc
fs
xor
ret
pop
mov
std
std
xchg
sub
sbbb
je
mov
insl
hlt
or
add
pop
scas
xchg
shl
mov
pushf
jg
lret
dec
cmp
cmc
mov
rcrl
xchg
sub
outsl
cmp
pusha
aad
rorb
xlat
outsb
lret
rolb
test
ljmp
adc
or
cmp
mov
fistps
mov
fldt
add
mov
in
inc
faddp
add
mov
hlt
xchg
pop
cmc
or
push
fwait
jl
add
mov
xchg
cs
dec
xchg
sub
popa
and
aas
jae
mov
mov
pop
xchg
out
sbb
mov
fnstenv
push
ret
pop
mov
daa
mov
pop
shrl
cld
dec
loop
in
aaa
xlat
lret
mov
cli
clc
adc
mov
or
jnp
cmc
mov
cmp
jle
das
sub
mov
rol
mov
shlb
aad
inc
mov
sbbb
jle
sub
dec
push
popf
jge
dec
jecxz
sbb
mov
xchg
out
xor
pop
mov
les
mov
pop
idivb
sub
sbb
ds
inc
fistpl
cld
sbbl
fimull
and
cltd
mov
mov
insb
xor
push
mov
mov
ficoml
stos
lret
gs
cmc
in
lret
cwtl
pop
mov
mov
cld
int
dec
jecxz
jo
sbbb
push
xorl
and
mov
fcomi
mov
lock
popl
out
cltd
xor
cmpsb
and
je
or
lods
xchg
dec
loopne
push
jb
xchg
ljmp
mov
mov
sbb
mov
lods
inc
push
add
mov
addb
insb
pop
dec
loopne
adc
push
sbb
pop
scas
sub
js
scas
leave
xor
not
js
ret
not
jecxz
xor
jne
hlt
mov
dec
dec
loop
or
jp
popa
clc
pop
fwait
jbe
or
das
pop
mov
iret
and
movsb
mov
arpl
rcl
aam
lds
mov
out
or
jp
mov
jge
or
lahf
jge
jl
push
lahf
adc
fbstp
aad
mov
les
test
xor
aas
enter
or
aas
jmp
out
arpl
mov
push
xchg
sub
adc
call
sub
xchg
stos
inc
mov
lret
in
pop
in
mov
aaa
cmp
lock
adc
addl
stc
nop
push
dec
pop
xorl
fwait
test
pushf
xor
leave
ljmp
faddl
pop
mov
pop
xchg
je
movsb
cmp
sti
xchg
pop
icebp
mov
and
leave
movsb
cmp
mov
ljmp
jg
pop
test
std
xchg
push
push
lds
xor
xchg
mov
push
xor
repz
ret
pop
and
lds
in
scas
push
xor
inc
dec
sbb
pop
adc
gs
jns
loopne
stc
call
repnz
push
fs
popl
sbb
xchg
inc
inc
fnsave
aas
aam
push
push
jb
inc
sti
mov
add
adc
outsb
mov
cwtl
das
add
inc
ficoml
mov
adc
xor
lahf
insb
inc
jbe
cmp
dec
loop
xlat
cmp
push
insl
mov
pop
cmpsl
mov
lods
icebp
jae
rclb
dec
loop
movsb
mov
hlt
pop
cmp
ljmp
loopne
fimuls
aam
mov
jo
ja
rolb
fistps
push
ficomps
add
js
sub
frstpm(287
push
fcomps
push
xchg
push
mov
jecxz
mov
outsb
loop
sbb
fadds
xor
inc
mov
sub
inc
xor
adc
cltd
lahf
scas
xorl
cmp
mov
cmp
mov
leave
sbb
scas
mov
fldl
leave
movsl
repz
hlt
cmp
pop
sahf
mov
push
mov
js
jl
arpl
movsb
lcall
mov
testb
imul
mov
imul
cmp
pop
pop
cltd
cmc
int
lret
or
packsswb
stos
pushf
test
test
ljmp
mov
pop
sahf
arpl
les
test
fnstcw
mov
test
es
notl
sub
stos
inc
pop
jne
testl
dec
call
jbe
mov
les
mov
sbb
lds
sbb
cmp
call
add
push
push
mov
push
loopne
jb
inc
jmp
inc
add
insb
xor
xchg
stc
out
mov
xchg
scas
sbb
stc
imul
push
js
xor
mov
mov
data16
mov
lcall
movsb
pop
inc
inc
inc
cmpsl
xrelease
jno
pop
test
dec
xor
dec
sub
mov
mov
and
lret
jl
jnp
sar
and
inc
push
add
add
cmp
test
jns
arpl
inc
int
ret
jo
cmp
mov
daa
ja
js
ret
push
dec
xchg
ret
fldt
or
mov
inc
int
ds
xor
jecxz
and
cmp
mov
inc
xchg
sbb
mov
aaa
pop
xor
push
movsl
adc
shrl
int
add
shll
sbb
out
jbe
lret
int3
jmp
ljmp
push
out
dec
data16
test
fistpl
and
dec
lcall
int3
insl
or
push
xor
mov
add
or
push
fdivrs
lret
nop
sub
pop
mov
shrb
mov
pushf
push
mov
jo
jbe
mov
icebp
mov
addl
movsl
xor
insl
sbb
loop
sti
jl
pop
push
fstl
pushf
xchg
inc
inc
or
stc
inc
mov
add
mov
xchg
cmp
mov
xor
jo
push
fcomi
pusha
scas
negl
mov
sub
ficoml
xor
jb
push
outsb
ljmp
pop
and
sbb
aam
pop
mov
jno
into
xchg
sti
bound
iret
scas
in
or
icebp
shlb
jecxz
mov
fsubrl
pusha
sub
and
dec
pop
cmp
test
pop
in
jnp
neg
std
adc
es
shrl
ret
xchg
orl
imulb
xchg
xchg
xchg
lds
cmp
add
lods
xor
aad
stc
and
cmpsl
mov
mov
popa
fs
das
je
addr16
mov
dec
pusha
aad
jle
mov
insl
sarl
sbb
mov
xchg
movsl
pop
outsb
sbb
add
in
push
mov
mov
hlt
pop
inc
cli
pop
add
movsl
mov
test
aam
out
jl
xchg
div
inc
push
push
std
fcomps
insl
orb
popa
xchg
ja
jb
rclb
or
add
daa
stos
or
inc
xor
cltd
sub
or
jb
xchg
movsl
mov
mov
rorl
pusha
jmp
lds
test
sbb
movsb
sahf
movsb
scas
dec
dec
ret
mov
inc
jns
enter
jge
xor
mov
adc
or
pushf
pop
cli
sub
test
das
lock
int
pop
adc
mov
mov
addr16
outsl
in
imul
mov
lret
je
sbb
arpl
mov
mov
addl
loopne
jmp
mov
mov
push
clc
int
mov
push
aaa
xchg
adc
or
fdivr
inc
mov
dec
mov
cmpsl
adc
push
add
dec
inc
adc
test
divl
test
repz
loop
cmpsl
jo
dec
mov
lret
lcall
dec
push
push
xlat
xchg
mov
test
or
fwait
jns
sub
ret
cmc
add
pop
nop
jmp
pop
xchg
jp
sub
sub
sarl
mov
ret
sub
daa
out
pop
and
xor
test
jecxz
adc
cmp
jp
sub
sub
out
push
xor
mov
sbb
insb
sub
inc
push
and
xchg
or
jge
fcoml
push
aaa
rcll
rsqrtss
out
out
aam
cltd
cmp
pop
ret
xor
das
cmovl
jl
pop
shlb
add
lods
jg
xchg
mov
bswap
test
cli
fucomip
insb
dec
loop
mov
mov
cmp
test
mov
in
scas
add
lods
fnstcw
gs
push
arpl
out
pop
and
test
int
cmp
in
inc
call
mov
and
in
cmp
mov
inc
adc
pop
xchg
inc
lahf
mov
js
les
aad
pop
mov
ret
lcall
adc
rcll
lahf
cmpxchg8b
jle
cltd
sbb
and
into
xchg
cmp
fwait
xchg
cmp
les
imul
in
mov
rclb
and
cmp
and
adc
pop
dec
insb
mov
stc
fwait
insb
cwtl
ror
pop
mov
push
gs
dec
sub
js
push
mov
sbb
insl
enter
out
jge
fistpl
mov
fcmove
pop
jae
nop
shrl
sub
sub
fidivrl
sbb
test
sbb
add
inc
lret
or
fmull
loope
pop
sarb
and
sub
xor
imul
add
xchg
leave
jnp
xchg
xorl
jmp
mov
sub
dec
ss
dec
test
adc
leave
and
xchg
insb
ljmp
sbb
popa
dec
mov
nop
sbb
cmpsl
mov
xchg
inc
outsl
ja
mov
cmp
adc
push
loop
movsb
dec
clc
cltd
call
push
fs
rorl
cmp
lods
faddl
mov
xchg
inc
push
cmpb
xlat
pusha
mov
lret
push
lock
repnz
push
enter
add
dec
mov
insb
pop
fildll
pop
lret
dec
mov
insl
pop
add
adc
xlat
scas
mov
sub
pop
sbb
pop
adc
in
or
bound
xchg
stc
std
test
and
outsb
xchg
insb
addps
test
mov
into
mov
and
outsb
push
imul
test
jge
pushf
lahf
push
or
fsts
lods
sub
mov
into
cmp
jp
iret
stos
pop
pop
repnz
int3
push
ljmp
jo
push
push
mov
push
xchg
cmc
mov
pop
lret
bound
pop
adc
pop
hlt
mov
out
inc
bound
lahf
push
lahf
push
jmp
mov
sbbb
cmp
stos
xor
rclb
dec
test
mov
mov
xchg
xchg
push
cs
cmp
xchg
stc
dec
jecxz
mov
insb
subb
push
scas
xchg
shrb
loop
xchg
out
mov
adc
ret
fnstsw
add
fsubl
repnz
adc
insb
add
fcomi
mov
cs
hlt
sti
testb
jmp
pop
lock
fdiv
mov
lds
add
and
jbe
sbb
in
jae
and
xchg
sub
mov
notb
ret
cmp
ds
stos
inc
sti
hlt
loop
jns
jnp
dec
lcall
pop
sub
nop
lcall
sub
mov
cld
push
sbb
mov
add
sub
push
int3
arpl
aas
mov
faddp
pop
es
std
adc
test
cltd
sbb
cmp
fiaddl
mov
out
clc
sub
out
and
push
fmull
mov
xchg
push
xlat
outsb
cmp
adc
stos
dec
in
test
and
jle
xchg
shrl
rcll
cld
xor
pop
out
je
or
dec
lods
stc
nop
push
mov
loopne
cmc
call
sub
clc
lods
inc
in
cmp
int
mov
inc
and
inc
cwtl
pop
inc
fsts
mov
call
cmp
pop
push
lods
push
xchg
sub
test
dec
loopne
mov
gs
pop
fnstenv
jge
cmc
insl
aad
sub
jns
shrl
aas
fwait
add
mov
mov
adc
cmp
cmpsl
rorl
jmp
mov
xlat
xchg
bound
clc
sbb
test
cmp
insb
xlat
mov
in
xor
scas
inc
repnz
stos
inc
or
fidivl
inc
inc
fidivl
xor
andl
mov
pop
sbb
js
sti
xchg
shll
cmp
out
in
adc
iret
test
and
or
jbe
mov
inc
dec
sbbb
and
jmp
out
outsl
sbb
pop
push
jb
push
xchg
sub
dec
in
pop
cltd
xor
xchg
xchg
aas
cli
xchg
jno
in
cmp
xchg
inc
les
cmp
cmp
inc
test
mov
pop
into
xor
ja
cli
xchg
pop
cwtl
dec
mov
cs
mov
fwait
int3
jno
mov
sbb
mov
lock
or
lds
sbb
and
mov
aas
add
rorl
inc
out
jns
nop
xor
add
daa
cwtl
push
cltd
sbb
in
inc
in
pop
push
clc
xchg
jns
je
scas
mov
sbb
les
ss
aaa
mov
fnsave
aaa
push
out
xchg
pop
sti
sub
js
pushf
cmp
je
cltd
dec
dec
sahf
mov
addr16
sbb
insl
lcall
and
adc
cmc
outsl
jmp
adc
and
add
aas
mov
inc
push
jnp
ss
test
sbb
inc
loopne
ja
push
or
mov
jg
icebp
ss
cmp
popa
mov
sub
xchg
xchg
xchg
xor
mov
das
into
gs
leave
pop
icebp
cli
or
cmc
push
sub
nop
jb
and
jmp
inc
cmp
hlt
add
je
mov
cmp
xchg
jo
pop
adc
iret
sbb
cmp
in
cmp
js
xor
test
or
hlt
mov
xorb
movsb
loop
ret
pop
inc
add
out
pop
xlat
sub
or
mov
testb
daa
outsb
shlb
mov
mov
mov
adc
divps
fnstenv
js
repz
mov
mov
enter
arpl
gs
addr16
jne,pt
mov
sbb
iret
test
lcall
ror
lds
and
ss
xchg
push
pop
repnz
sbb
or
fs
xchg
movsl
sub
jmp
or
sbb
sbb
outsb
add
mov
lret
jp
sti
ljmp
movsb
scas
mov
and
mov
xchg
cmp
fisubrl
loope
jb
or
or
repz
das
inc
push
mov
ja
xor
or
or
repz
lock
pop
daa
mov
sahf
lds
idivl
iret
inc
push
vsubss
test
and
adc
sbb
hlt
popf
cmp
pop
lock
fbstp
xchg
lea
daa
and
push
push
dec
sub
fdivl
push
inc
data16
int
jle
lds
and
shlb
dec
lods
mov
lret
sbb
cwtl
xchg
aam
push
adcb
mov
shll
les
les
add
lock
andl
out
push
icebp
lods
inc
and
in
mov
xor
mov
in
mov
shrl
mov
mov
stc
xchg
shlb
rorl
int
fs
cmpsb
andb
mov
adc
add
outsb
lock
mov
mov
pop
lock
jb
mov
repnz
pop
hlt
js
leave
subb
inc
imul
xor
push
or
fwait
sbb
jae
sbb
jo
push
out
xchg
repnz
add
and
outsl
sbb
frstor
push
pop
adcl
cltd
xlat
pop
in
mov
xchg
adc
fs
mov
xchg
test
push
and
out
push
mov
hlt
lds
jl
inc
fdivs
adc
sub
sbb
jl
jg
sti
jb
cmpsb
pop
mov
jns
mov
inc
fisubrs
out
mov
iret
sub
addr16
dec
dec
add
mov
aam
mov
mov
pop
inc
cwtl
outsl
dec
gs
add
ss
sub
mul
jge
out
into
and
mov
inc
int3
fmull
dec
mov
add
pop
mov
push
cltd
push
mov
push
push
sub
pop
aaa
mov
in
outsb
int3
arpl
jo
fisubl
ret
lret
fcmovnu
popa
sti
adc
aam
iret
mov
lahf
pusha
out
jo
insl
dec
popf
push
fs
daa
pushf
jg
or
push
les
jecxz
push
mov
xlat
push
div
mov
and
shrb
fstl
aad
cmp
push
ljmp
je
xchg
push
xor
and
loopne
nop
mov
dec
add
mov
adc
push
jo
fwait
push
inc
fstpt
jge
mov
mov
mov
addl
sbb
add
jg
mov
inc
je
mov
dec
push
sbb
insl
cmp
cmc
xchg
dec
mov
inc
pop
dec
jmp
jl
test
push
push
fdivl
and
idivl
gs
cmp
push
jmp
ficomps
cmp
fs
cmc
jmp
mov
iret
in
pop
pushf
mov
mov
add
subl
pop
inc
scas
dec
scas
sar
and
push
movsl
into
xchg
insb
mov
mov
pop
mov
mov
gs
push
mov
int3
out
pusha
into
fistpll
and
adc
dec
mov
shr
xchg
std
mov
mov
fnstcw
or
xor
out
test
stos
inc
ror
jbe
inc
aaa
daa
xchg
xor
in
roll
cltd
or
xor
pop
sub
push
push
xor
add
out
js
mov
and
jmp
adc
dec
add
in
js
xor
mov
ret
and
mov
push
add
xchg
add
or
fdivrl
je
or
xchg
outsb
hlt
daa
icebp
and
test
xchg
or
call
jnp
jle
jmp
cs
shl
lret
fistpl
xor
mov
jnp
adc
sbb
rolb
aaa
stc
pushf
xor
clc
dec
pop
popf
aam
jecxz
ds
popf
xchg
xor
shrb
lret
and
ds
imulb
les
popa
sub
xchg
xor
inc
cmpsb
ljmp
lret
ror
aad
cmpsl
sbb
sub
push
int
orb
cmc
sub
incl
or
xchg
mov
inc
xchg
jp
mov
mov
mov
data16
push
out
cmpsb
xchg
bound
xor
or
or
pop
negb
push
bound
add
ret
hlt
xlat
push
sbb
push
xchg
mov
push
inc
and
not
out
dec
dec
push
lds
aas
xchg
inc
and
push
shll
sbb
mov
lds
lds
and
jmp
test
sub
std
inc
scas
test
dec
fbstp
lcall
add
jle
mov
cmp
adc
popf
mov
lcall
mov
add
roll
sub
jl
push
mov
popf
bound
mov
mov
or
fwait
ret
outsb
pop
sahf
out
mov
shl
cmp
clc
mov
sbb
stc
mov
in
adc
push
mov
in
adc
and
addr16
xchg
stc
sub
sbb
sbbb
cmp
jne
add
sbb
lods
daa
mov
pop
jle
adc
mov
sbb
and
cs
xor
rcrl
push
sub
dec
jecxz
outsb
mov
mov
insl
lea
jns
add
js
xor
mov
dec
in
push
jecxz
adc
inc
adc
dec
dec
popa
sbb
aad
inc
xchg
aas
jae
inc
mov
jno
pop
mov
subb
jl
mov
aaa
les
sub
push
in
lea
jae
cmp
inc
mulb
add
leave
lahf
inc
and
fmuls
and
mov
insb
popa
clc
popf
jge
dec
xor
adc
jg
dec
fbld
cwtl
xchg
cs
push
cs
cmc
lahf
pop
fcmovb
dec
out
mov
mov
call
xchg
out
adc
lret
mov
movsl
stos
cmp
mov
sub
out
or
mov
cmp
repz
push
movsl
mov
sbb
arpl
or
sub
test
scas
inc
outsb
fbld
xchg
movsl
repz
and
std
push
das
cmp
stc
lahf
sub
inc
cmp
and
and
mov
stc
out
xor
adc
fidivs
add
add
sahf
xor
xchg
jns
and
mov
loopne
inc
cltd
or
ret
inc
das
testl
fildl
int
rorl
js
pop
es
push
ficoml
test
stos
call
decb
stos
mov
and
or
imul
pushf
sbb
call
hlt
jnp
enter
aad
frstor
or
imul
inc
add
arpl
mov
add
jno
inc
pop
adc
cs
push
call
bts
jns
pop
ja
loopne
sbb
xor
and
add
jnp
push
dec
add
inc
and
push
lcall
jae
xor
dec
xchg
lock
addb
jle
jmp
shrl
sahf
add
fldcw
pop
out
mov
xchg
cmp
push
outsb
mov
fimull
cmp
mov
js
aad
sbb
cmp
ja
aaa
xchg
dec
inc
rcr
jge
lret
jnp
push
testb
mov
hlt
xlat
add
mov
sbb
jmp
sbb
mov
xor
lea
push
out
push
inc
shrl
jae
dec
mov
xorl
ret
adc
cmpsb
push
lds
mov
jns
adc
dec
inc
loope
cmpsl
sub
sub
movsl
ss
xchg
shr
stc
lea
fs
in
sbbl
popa
testb
mov
jmp
sub
sub
sbb
into
sbbb
jecxz
inc
stc
pop
mov
xor
mov
cmp
cmp
mov
add
mov
xor
out
test
mov
mov
outsl
cmp
out
or
imul
loope
clc
adc
add
lcall
jno
out
cmpsl
and
stc
jo
das
mov
dec
mov
popa
in
imulb
add
sub
hlt
fmull
nop
stos
inc
jb
dec
aaa
sub
pop
dec
loope
movsl
pop
cmp
pop
pop
in
sbb
lods
lods
cmc
lret
int3
cmp
push
xor
cltd
pop
push
adc
xchg
lahf
inc
fnop
fisubrs
jg
mov
popa
out
mov
xlat
pop
outsb
push
sub
jp
sub
jae
dec
dec
inc
inc
and
pop
dec
mov
cmp
dec
sub
xor
lods
arpl
jb
nop
shlb
out
pop
or
add
int3
addr16
push
fldcw
or
stos
movsb
pop
adc
mov
jno
xchg
mov
xlat
xchg
dec
aam
xchg
sub
add
movsl
cmp
mov
pushf
lock
mov
je
sub
inc
jle
xor
std
fnstsw
call
aam
sarb
repnz
loope
mov
fstpl
and
in
add
sub
imul
repz
daa
stos
repz
je
pop
js
enter
fbld
inc
fnstenv
lret
lea
dec
add
adc
test
pop
jge
cli
movb
sbb
rcll
movsb
mov
sub
aam
pushf
cld
inc
xorl
or
js
jecxz
mov
xchg
outsb
dec
inc
stc
sahf
mov
pushf
sub
cmp
adc
pop
xor
sahf
sbb
pop
cmc
adc
push
outsb
int3
dec
cmpsb
push
mov
cmp
and
dec
sbb
bswap
scas
mull
das
rclb
ficoml
sbbl
xor
sub
or
inc
lods
rcrl
ret
inc
push
rcrl
aam
subl
stos
mov
mov
xchg
cmp
aad
clc
pushf
cmpsl
sbb
mov
push
sbb
sub
nop
movsl
sub
stc
insb
xchg
sub
jno
fnstsw
imul
mov
adc
mov
fnsave
in
xchg
rorl
fldcw
lds
mov
add
cmc
fs
pop
push
mov
fsubl
repz
jp
std
loopne
pusha
movsl
aaa
mov
mov
cltd
jg
nop
out
out
pop
out
mov
dec
movb
data16
inc
xor
call
jmp
or
rcrb
push
push
in
cltd
add
test
and
aas
xchg
cmc
sbb
add
push
fs
or
pusha
sti
sub
popa
shll
repnz
outsb
push
enter
push
pop
add
sub
movsl
stos
dec
nop
jo
daa
dec
or
xchg
sub
dec
jp
add
cli
adc
cmp
lret
in
mov
in
dec
testb
insb
or
mov
js
cwtl
inc
aad
and
imul
push
jmp
inc
mov
ret
hlt
cmp
pop
inc
loope
push
sbb
mov
cmp
lea
shll
adc
dec
in
xchg
enter
jl
test
mov
dec
lret
jmp
mov
repz
or
mov
jns
add
fisttpl
mov
mov
loop
out
jo
sub
jbe
mov
jge
imul
lcall
adc
inc
jle
inc
ret
mov
adc
adc
gs
movsl
jae
ss
jle
inc
dec
aad
stos
repnz
jecxz
sub
mov
icebp
cmp
loopne
and
test
aas
sub
dec
cltd
sbb
push
mov
dec
jmp
dec
inc
push
rolb
push
int3
ja
jae
jnp
out
sub
and
inc
inc
dec
loop
arpl
jecxz
xor
mov
mov
int3
cltd
add
neg
aad
push
or
pop
dec
sti
cwtl
shlb
add
push
pusha
jp
pop
xchg
mov
call
push
iret
mov
mov
adc
add
incl
inc
xor
in
lock
jl
scas
pop
push
repnz
fwait
xor
cmpsl
test
fincstp
cmpsl
int
outsb
pop
pop
sbb
jb
mov
sbb
add
scas
inc
inc
mov
stos
xchg
mov
and
lock
loop
cmp
pop
adc
mov
mov
mov
lahf
ss
pop
cwtl
jg
incl
daa
jle
mov
push
mov
icebp
jle
out
outsl
adc
dec
xor
cmp
mov
pushf
inc
xor
cmp
ss
cwtl
adc
push
stos
hlt
sbb
int
xchg
jno
lods
cs
ds
jge
jmp
imul
je
mov
mov
inc
mov
out
push
stos
jecxz
sarl
nop
or
jnp
int3
pop
shlb
xor
inc
fisubs
cmp
adc
cwtl
sbb
ljmp
popf
bound
rcrb
cmp
test
addb
sbb
cmp
lahf
mov
in
mov
js
cli
adc
mov
dec
push
das
rcrb
xor
add
and
aaa
mov
fwait
movsb
sbb
xchg
enter
adc
sbb
call
cmc
orl
push
int
xor
insl
cmp
or
hlt
cmc
adc
cmova
lret
loop
cmpsb
bound
hlt
cmp
in
insl
pop
xchg
hlt
popf
lret
in
fs
mov
aas
scas
mov
repnz
ret
hlt
mov
adc
jmp
cli
mov
call
mov
add
mov
mov
pop
icebp
insl
adc
es
fcomip
pusha
mull
add
repz
cmp
adc
or
lods
dec
pusha
mov
sbb
lods
arpl
cltd
cmp
inc
lds
add
push
jg
inc
into
and
repnz
sub
testb
cltd
push
and
jne
pop
test
fxtract
mov
cmp
int
push
dec
in
inc
pushf
xor
fcoms
js
pop
sahf
scas
xlat
shrl
xorl
dec
push
jmp
loop
lahf
add
dec
dec
sti
dec
loopne
mov
lea
and
mov
xor
xor
mov
jl
fbstp
pushf
sti
xchg
rdpmc
sbb
into
in
test
mov
loopne
pop
push
ljmp
push
add
divl
sub
frstor
outsl
mov
dec
add
xchg
ret
ds
jecxz
mov
stc
dec
dec
loop
addr16
insl
mov
ret
enter
mov
fidivrs
rol
cld
xchg
into
in
mov
fsubrl
and
cld
jmp
or
stos
jne
pop
cmc
in
xchg
test
ss
mov
stos
jg
or
xor
mov
in
xorl
mov
data16
sub
cmp
mov
stos
jnp
adc
sub
pop
arpl
insl
xchg
inc
cmp
arpl
daa
mov
lahf
cmp
mov
les
lods
and
sub
pop
push
out
jecxz
inc
pop
inc
outsb
push
mov
andl
mov
inc
xlat
loope
movsb
cmp
cmp
xchg
xchg
push
popf
repnz
sahf
and
pop
lock
inc
dec
in
addr16
push
xchg
pop
hlt
enter
stos
jmp
mov
shrb
out
mov
clc
and
adc
mov
or
sti
and
push
fstpt
cwtl
jno
cmp
mov
cmpsl
jp
xchg
stc
dec
or
mov
fdiv
shrl
daa
or
cmc
sub
jmp
fidivrl
dec
out
dec
les
inc
dec
ffree
mov
pushf
notl
xor
testl
scas
test
sub
pushf
jecxz
sbb
sub
hlt
pop
icebp
sbb
call
ret
mov
or
aad
cltd
leave
insb
int3
ret
add
or
jecxz
fwait
nop
clc
sub
push
add
inc
in
repnz
data16
insl
push
dec
ja
inc
inc
pop
fidivl
hlt
int
es
call
test
or
mov
sub
ja
ret
in
push
aas
inc
push
imul
and
push
arpl
jnp
mov
insl
mov
subl
out
lahf
neg
xchg
mov
push
xor
ret
imul
jb
insb
cltd
push
popf
or
mov
sahf
leave
je
mov
adc
lcall
mov
dec
jo
xor
mov
rorb
nop
cltd
adc
cmpsb
outsl
inc
fsubs
data16
or
mov
movsl
arpl
cmovge
test
or
lahf
mov
sub
sub
in
mov
pop
fs
popf
pop
sahf
or
sub
pop
sahf
lods
mov
cmpsl
ds
fcmovu
jb
addr16
daa
fbstp
dec
gs
rclb
jl
pushf
mov
stos
and
daa
out
cmpsl
push
or
pop
aad
aam
dec
cmp
daa
mov
mov
ficoms
mov
cmp
dec
xchg
jg
es
pop
xchg
xchg
ja
flds
cmp
test
jo
call
les
scas
cmp
jbe
sahf
adc
sub
mov
jl
inc
add
arpl
and
push
jb
add
lea
stc
xor
jp
xchg
mov
and
insb
lods
pop
cmp
je
imul
pop
lock
bound
sahf
xchg
jnp
lret
inc
ja
enter
arpl
inc
fisttpl
xchg
pop
popa
lret
sbb
bound
xor
fidivs
sahf
jne
adc
dec
loopne
pop
push
mov
stc
jns
ljmp
enter
addr16
mov
vmwrite
pop
repz
xchg
cmpsl
add
jp
dec
loopne
sub
stos
inc
in
clc
lods
inc
jmp
lahf
cmpb
adc
ror
arpl
rcrl
scas
ds
push
out
mov
push
out
xor
sub
test
xchg
xchg
cli
fnstenv
mov
aam
xor
adc
xchg
push
and
inc
outsb
jo
jb
cmp
lea
in
xchg
mov
sahf
mov
push
popf
jge
inc
sahf
outsl
xor
mov
ja
mov
jl
jne
dec
out
aaa
dec
fsubrl
arpl
mov
mov
inc
rolb
pop
int3
rcll
jo
out
pop
hlt
popa
clc
mov
fidivrl
ljmp
add
jne
adc
aas
push
push
xchg
mov
rorb
and
les
aad
sub
ljmp
lods
fmuls
adc
adc
popa
cmpsb
and
gs
mov
cs
inc
loopne
mov
cld
xchg
stos
loopne,pt
jo
mov
xchg
repz
pop
cwtl
das
push
incb
decl
notl
les
jae
adc
mov
bound
push
filds
cmp
cmp
neg
jbe
push
test
test
decb
add
loopne
in
lods
jbe
adc
push
xchg
cmc
mov
cld
movsb
test
pop
scas
adc
xlat
sub
test
enter
xchg
ss
addr16
jge
cmp
dec
xchg
bound
orl
push
iret
data16
fcoml
pushf
xor
jae
xlat
jno
out
bound
mov
lea
movsl
or
pop
divl
sub
jb
dec
pop
hlt
outsb
shl
jp
and
mov
data16
mov
mov
loopne
dec
loop
lock
xchg
mov
adc
cld
mov
adc
cld
int3
or
in
inc
fdivl
shll
into
out
mov
push
ret
xchg
pop
adc
cmp
and
push
fwait
jl
and
lcall
dec
in
pop
adc
cmp
incb
call
mov
rcr
jae
jnp
mov
pop
dec
in
mov
movsl
cld
stos
cmp
sbb
outsb
add
xchg
jno
inc
ficomps
pushf
cwtl
das
adc
into
mov
shl
mov
sub
mov
popf
xor
leave
popf
xor
adc
sbb
xchg
int
stc
nop
mov
sub
xlat
movsb
arpl
or
sbb
cmp
dec
in
pop
jge
insb
icebp
adc
sbb
push
in
xlat
cmp
jae
es
and
pop
lock
inc
cmp
lahf
movsb
jg
inc
fstp
xorl
leave
leave
cmp
rorl
jle
pop
scas
pop
repz
nop
sbb
repz
stc
loope
test
add
xchg
xor
dec
in
sub
stos
test
clc
mov
std
sbbl
xlat
push
mov
mov
int3
pop
lods
testl
ret
dec
xchg
js
ret
fsubl
test
push
cmc
jmp
push
adc
jmp
xor
lea
shll
sbb
dec
loope
push
dec
out
loopne
jle
or
jl
test
gs
jg
pop
fsubrl
iret
jg
jo
js
arpl
and
jb
ss
xchg
lock
gs
clc
push
push
fs
movsb
js
stos
inc
lds
mov
push
in
cmp
dec
in
pop
pop
mov
int3
imul
scas
pop
repnz
hlt
mov
mov
inc
fcmovnbe
paddsw
mov
xor
and
mov
popa
int
fldl
xor
notl
lret
bound
and
mov
jns
pop
and
xor
aad
push
shrb
pop
inc
ficompl
xchg
cmpsl
jle
clc
push
enter
jno
mov
lret
cli
inc
jmp
xor
fidivl
push
mov
mov
add
add
mov
xor
movsl
cmp
push
jns
mov
in
dec
rolb
xor
aam
fs
in
xchg
sub
popf
xor
pop
mov
scas
inc
fsubrl
fsubrs
std
test
rcrb
fidivl
inc
es
adc
jle
ja
jl
leave
add
sub
adc
lock
mov
jg
scas
sbb
add
inc
xlat
lret
inc
sub
dec
mov
push
and
sbb
stc
into
cmp
adcb
nop
mov
sbb
jmp
add
les
and
push
xchg
lds
cli
xchg
inc
cmc
jmp
stc
arpl
mov
pop
movsl
push
ljmp
adc
push
call
pop
lock
in
pusha
idivl
fstpt
in
mov
out
test
insl
add
shlb
or
adc
loopne
mov
cmc
mov
pop
mov
test
sub
jge
push
jmp
daa
addr16
je
adc
sub
dec
sbb
pop
std
pop
test
data16
lods
jecxz
adc
iret
test
add
jecxz
imul
add
cmpsl
fcompl
mov
leave
fidivs
cs
xchg
dec
sbbb
outsl
sbb
add
cmp
repz
pop
out
inc
js
dec
outsb
jbe
leave
cmpsl
shrl
enter
imul
mov
ret
fbstp
ficompl
xor
lret
ffreep
and
inc
inc
xchg
and
or
inc
sbb
mov
data16
inc
fst
les
and
fstps
inc
inc
sub
jno
pop
cwtl
push
fsubr
jl
add
enter
mov
addr16
jnp
inc
es
add
iret
mov
sahf
lods
mov
push
cli
push
push
xor
xor
or
out
testb
rclb
and
scas
imul
hlt
lret
pop
mov
sarl
dec
xor
into
test
or
in
pop
ret
and
in
test
jp
in
mov
mov
loopne
cmpsb
or
ja
fmul
xor
xchg
out
adc
xor
in
cmp
xlat
addr16
gs
mov
adc
add
lock
xchg
sub
fists
fwait
in
inc
xor
insb
shl
lahf
imul
mov
xlat
xor
popf
gs
mov
push
inc
sahf
mov
jp
arpl
lods
ljmp
cld
sbbb
xor
push
or
cmpsb
fnstcw
cmpl
out
pop
cmp
lock
les
leave
jo
push
adc
jno
pop
aad
mov
cli
xchg
and
push
das
xor
xchg
xchg
das
repz
inc
int3
mov
cmp
add
insb
adc
scas
or
popf
inc
hlt
push
cmc
das
pusha
pop
jg
adc
cmp
sub
push
rclb
mov
jno
movsl
fdivl
setns
mov
movsb
mov
lock
sub
ja
rorb
fld
test
jmp
and
jl
inc
ss
adcl
in
pop
jecxz
in
push
inc
and
xor
inc
fcompp
insb
int3
outsl
jp
fidivs
pop
call
adc
inc
movsb
mov
xchg
xor
pop
fistl
pusha
inc
jb
pop
mov
ss
fstpl
icebp
sub
mov
adc
rol
pavgw
enter
out
imul
je
jbe
lret
test
mov
dec
jb
jg
sbb
std
std
mov
incl
fnstsw
in
jno
ror
daa
push
jbe
in
adcl
sbbb
dec
push
repz
sub
xchg
rolb
sti
add
and
stos
mov
loopne
mov
loope
pop
aas
xchg
and
xor
lret
and
push
test
inc
cwtl
sub
out
inc
sub
mov
jle
push
out
push
dec
push
int
jbe
sub
sbb
jmp
fucompp
and
adc
xor
adc
test
in
testl
push
imulb
addr16
negl
mov
pop
fs
stos
sub
loop
adc
cli
fstpt
repz
pop
add
lds
mov
mov
jge
cltd
pop
gs
jp
inc
in
cmp
mov
pop
cmpb
pop
dec
aam
cmc
adc
adc
and
fisubs
jmp
movl
cmpsl
adc
nop
inc
or
fdivl
inc
arpl
dec
stos
mov
mov
mov
and
xor
fbld
mov
or
cmpb
cld
mov
sahf
sbbl
jne
repz
and
movsb
out
inc
ret
fistpll
lods
cmp
popf
repz
cmpsl
jg
pop
jg
push
mov
dec
aas
push
xchg
lcall
adc
xor
push
scas
xor
mov
out
and
mov
sub
xchg
or
inc
sbb
mov
aad
cld
and
out
inc
pop
dec
aas
jge
data16
and
in
pushf
push
push
popf
push
pushf
or
mov
pushl
jo
mov
mov
adc
fildl
shrb
jns
xchg
jp
dec
into
pushf
idivb
sti
mov
add
pop
imul
loop
push
call
mov
add
addr16
push
out
jns
adc
stc
sbb
xorl
pop
mov
mov
push
es
fbld
sub
mov
clc
jae
inc
inc
push
cld
mov
loopne
fcoms
and
fbstp
adc
push
fs
mov
cmpb
fdivrs
test
xor
pop
cmc
pop
out
ret
push
loope
ficoml
or
aas
ret
add
adc
ss
push
nop
iret
and
mov
popf
js
mov
mov
les
fdiv
sub
adc
in
and
cmpsb
mov
push
js
pop
call
out
and
in
jl
cs
fmuls
inc
sub
jnp
das
in
and
jmp
jl
jmp
out
add
push
pop
aam
sbb
xor
pop
mov
mov
fidivl
push
xchg
xchg
add
popf
das
stos
adc
nop
jecxz
mov
in
and
push
aas
mov
andb
adc
xchg
dec
sahf
pop
jb
sub
pop
cli
xchg
pop
rcrb
and
mov
int3
out
fisubl
ud1
fdivrl
stos
repz
jecxz
and
insb
xchg
xlat
cli
repnz
aas
cli
pop
ret
inc
test
clc
or
ret
incl
push
loop
pop
xchg
cmc
mov
adc
lcall
cmp
sub
mov
ret
rorl
pop
ss
arpl
jb
push
aas
lods
lods
outsl
jnp
inc
icebp
mov
test
pop
mulb
cmc
or
ljmp
adc
shrb
mov
cmc
sub
cmp
jnp
pop
insl
cwtl
sbb
cltd
dec
pop
cmp
iret
sbb
push
dec
ds
imul
fisttps
lcall
adc
add
fistpl
xchg
stos
pop
xchg
and
repnz
adc
hlt
add
sub
adc
movsb
xor
faddl
xchg
fs
sti
jl
xchg
xor
sbb
outsb
xchg
inc
insl
or
shlb
daa
dec
repz
stc
push
mov
and
cmpsb
cmpsb
inc
push
jmp
inc
xchg
aas
push
hlt
jnp
pushf
arpl
lea
loope
stos
out
inc
inc
mov
cmp
jns
xor
push
daa
cmp
imul
mov
mov
in
sbbb
cmp
loop
jge
jnp
test
mov
jmp
notrack
aad
int
ret
xchg
jno
and
and
mov
in
add
mov
lods
sub
scas
loopne
test
add
fucomip
hlt
arpl
sbb
dec
inc
jne
cwtl
cmpsb
insl
mov
sahf
sbb
clc
xor
stc
mov
jmp
pop
sub
xor
dec
xor
decl
bound
lahf
jo
movsb
test
test
sbb
mov
add
or
loop
ficompl
mov
mov
push
mov
loop
and
nop
aad
xsavec
or
sbb
jge,pt
jo
xchg
sub
in
loop
mov
fsubl
rcll
out
lea
jge
sub
shrl
or
data16
out
inc
inc
jmp
xor
adc
inc
add
popf
stc
sti
sub
inc
movsl
lea
sub
cltd
out
fsts
std
outsb
jl
push
and
or
cmp
mov
popf
push
or
imul
iret
pop
xor
inc
clc
sub
out
cmp
xor
iret
jl
or
dec
dec
lahf
mov
push
mov
lods
push
xor
xchg
sub
jecxz
inc
xor
or
xchg
and
xor
mov
mov
xlat
es
out
clc
jecxz
sub
xchg
in
xchg
jp
fmuls
popf
fiadds
cmpb
mov
or
sahf
lcall
push
fs
and
add
lods
ljmp
pushf
scas
sbb
and
out
sub
mov
add
out
out
jmp
cmpl
jge
adc
jnp
aad
aam
push
mov
or
add
mov
leave
icebp
xchg
sub
pop
insb
repnz
cmc
mov
pop
mov
mov
dec
test
xor
and
rcrl
xchg
sbb
mov
inc
adc
or
cmp
stc
push
mov
mov
mov
fcmovnbe
imul
fnsave
mov
jge
stos
jno
sbb
fwait
hlt
clc
inc
mov
into
xchg
rclb
jge
adc
call
sbb
inc
or
jbe
repz
jae
inc
jne
in
int3
or
aam
sub
and
pop
imul
ja
call
lods
and
bound
push
aad
iret
xchg
mov
sbb
loopne
lds
or
call
lds
pop
jb
dec
pop
pushf
mov
into
call
ds
and
xor
movsl
clc
cmc
add
rolb
rorb
cli
andl
xor
pushfw
push
mov
icebp
push
outsb
or
imul
pop
movsl
addb
or
inc
loop
hlt
adc
mov
divb
sub
pop
cli
loope
outsb
add
pop
outsb
orl
stos
andl
mov
outsb
movsb
adc
in
mov
cmp
popa
or
sub
pop
cltd
and
add
bound
xchg
sub
dec
pop
hlt
cld
jmp
rcrb
jnp
fadds
pop
cltd
jns
out
mov
jl
xchg
xchg
pop
ds
jb
mov
cmp
fwait
mov
pop
lea
adc
adc
je
or
stos
push
pop
icebp
outsl
push
jl
movsb
sbb
mov
add
pop
nop
data16
and
mov
mov
sti
fdivrl
test
in
je
leave
movsb
in
jecxz
xor
mov
pop
xor
push
adc
add
pop
and
push
mov
add
sub
fists
inc
push
out
fsubrs
std
mov
movl
outsl
pushf
popf
xor
sub
popa
cmpsb
inc
inc
inc
out
mov
push
adc
lock
dec
enter
stos
sub
dec
jp
push
hlt
adc
lahf
jb
inc
nop
jl
adc
and
mov
jb
rcll
mov
pop
mov
dec
jnp
mov
jno
sbb
sbb
sub
jb
pop
mov
or
pop
je
out
les
push
mov
aaa
dec
testb
adc
mov
push
pop
adc
js
mov
mov
shlb
mov
inc
inc
jb
mov
cmp
ffreep
pushf
in
dec
lret
sahf
fidivrl
or
jbe
adc
lock
popa
push
sub
xor
lods
and
leave
fisubrl
test
lds
jb
repz
push
mov
ja
sti
fcompl
jg
push
jmp
xchg
aaa
push
sbb
ret
arpl
insl
in
push
pop
lahf
mov
aaa
cmp
int3
inc
mov
pop
lock
inc
xlat
sub
mov
and
jnp
and
jb
mov
daa
jg
push
mov
ljmp
daa
mov
push
test
cld
mov
fidivrs
push
dec
xorl
push
ret
inc
fstps
jmp
mov
int
movsb
push
ljmp
pop
xlat
or
fdivr
jg
mov
call
insl
cmc
sbb
pushf
and
inc
lahf
mov
xor
jp
pop
popf
stc
sbb
xor
mov
jb
rcll
loopne
stos
imul
mov
xor
or
sub
ja
loop
enter
xchg
dec
xor
jmp
test
pop
rolb
cltd
test
enter
lock
loopne
mov
js
or
inc
dec
cmpsb
mov
lahf
xchg
sub
fidivrs
sbb
fnstcw
jo
imul
inc
fisubl
mov
push
in
sbb
add
cmpsl
sbb
add
test
jo
andl
or
mov
sbb
popf
stos
dec
leave
pop
mov
in
addl
sbb
insl
mov
cmc
cmp
icebp
cmp
adc
dec
loop
pop
pop
out
sub
sub
lods
cmp
mov
mov
push
sub
pop
cli
pusha
lods
out
xor
movsl
decb
or
hlt
bound
sbb
adc
ss
xor
repz
inc
or
jbe
insl
sub
bound
popf
in
out
enter
dec
cld
clc
inc
push
adc
in
in
push
cld
xor
loopne
xchg
jnp
xor
jecxz
sbb
mov
sti
mov
add
es
push
jo
dec
es
xchg
stos
inc
iret
ss
mov
dec
mov
scas
test
push
repz
faddl
aam
push
dec
mov
and
ljmp
push
sbb
push
xchg
xchg
test
jp
sti
stos
fs
lods
mov
or
cmp
sub
and
mov
sbb
add
push
incb
imul
les
sub
mov
sbb
dec
scas
out
das
pop
cmpb
inc
mov
insl
lds
sub
mov
dec
stos
outsb
imul
je
jmp
mov
jmp
xchg
pop
sar
ja
sbb
mul
mov
jg
scas
adc
aad
push
mov
pop
dec
test
outsl
das
js
das
shrl
mov
out
cmpsl
xor
loop
jecxz
xor
fwait
and
lcall
out
rcr
mov
lock
jecxz
adc
xchg
sub
xor
mov
insl
mov
xchg
xchg
mov
push
sub
in
lods
fsubr
fisttpll
mov
cmc
movsl
lret
hlt
or
cwtl
xor
cwtl
das
std
js
cmp
loope
dec
dec
push
cmc
pop
xor
inc
fs
and
adc
outsb
sahf
sub
mov
or
push
pop
jne
xchg
mov
or
jl
in
push
scas
andl
iret
pop
pop
pop
sub
imul
jbe
jbe
hlt
sbb
cmp
dec
loop
or
mov
dec
push
mov
loope
cmp
sbb
sbb
leave
push
push
mov
sub
mov
sub
mov
dec
dec
push
jl
jnp
std
test
mov
dec
add
and
stos
jle
pop
pusha
fcoml
inc
pop
iret
mov
mov
aaa
icebp
shll
or
stc
add
pushf
inc
or
lds
jl
jb
pop
xor
inc
jbe
mov
vpsllw
popl
pusha
push
xorb
xchg
cmp
and
add
jecxz
mov
int
jbe
lods
or
push
mov
mov
mov
test
out
cmpl
es
inc
jmp
arpl
aad
inc
pusha
xor
push
sub
ja
mov
sahf
xchg
dec
das
test
mov
loopne
mov
mov
rcll
dec
and
clts
pop
dec
jmp
pop
outsb
pop
aas
xorb
popa
sub
jmp
push
int
push
data16
loopne
push
mov
aad
push
add
inc
cmpsl
in
sbb
sbb
xchg
repnz
adc
loop
mov
mov
clc
push
lret
push
pop
mov
sbb
shr
inc
cmp
insl
mov
iret
jb
xchg
rol
jbe
cli
push
mov
mov
sarl
mov
inc
fisubs
xchg
fmull
stos
or
rcrb
xor
arpl
pop
xor
push
daa
iret
nop
leave
mov
lods
cmp
clc
sahf
sub
lods
and
pop
mov
testb
imul
pushf
sbb
shll
push
lcall
cmc
in
mov
sbb
rolb
outsl
ret
cs
stc
stos
sbb
ds
jns
mov
jae
sub
mov
adc
nop
stos
sahf
sub
push
xor
imul
cmp
jg
ds
jle
push
mov
and
andl
push
es
int
lcall
sub
dec
jae
repz
cmp
filds
arpl
and
jns
iret
pushw
jnp
jl
sub
jg
cwtl
pushf
or
xor
pop
cmpsl
lds
mov
fbld
mov
mov
push
jnp
pop
ret
dec
pushf
popf
adcb
adc
rcrb
out
sub
imul
in
sbb
fnstenv
mov
inc
aad
test
mov
out
cs
hlt
aam
push
shll
pop
cmpsb
out
ds
mov
sbb
movsb
sbb
add
movsb
inc
pop
movsl
lcall
mov
adc
test
cwtl
push
jno
scas
data16
pop
xchg
aam
lds
cmovl
out
mov
xchg
hlt
data16
out
lods
insl
or
scas
xchg
mov
push
xchg
mov
mov
dec
and
ds
das
sbb
xchg
sarl
mov
enter
call
mov
mov
mov
inc
jle
pop
mov
rorb
jns
jle
jo
mov
cltd
inc
fcmovne
sbb
in
hlt
mov
ja
mov
popa
testl
addr16
jns
dec
nop
add
push
out
sbb
pop
jp
loope
mov
insb
mov
aas
dec
jnp
mov
sub
fnstcw
hlt
imul
scas
mov
xor
xchg
mov
jg
dec
leave
xchg
test
jmp
popa
add
mov
and
pcmpgtb
ss
xchg
mov
mov
into
sarl
mov
mov
pop
mov
data16
dec
mov
mov
adc
push
hlt
ret
jp
cs
popf
pop
push
test
pop
ja
dec
fmul
fisttps
imul
cmp
ljmp
mov
cmp
mov
arpl
iret
mov
jp
push
cmp
mov
lret
sbb
inc
pop
fs
jle
jge
pop
ljmp
call
test
clc
iret
stos
cld
push
or
inc
push
and
mov
dec
pop
fstps
pushf
aad
aad
pop
xor
mov
jg
xor
pop
mov
pusha
das
or
xlat
iret
fs
pop
lock
arpl
jp
inc
decb
hlt
fistps
add
in
xor
xchg
ret
ret
popf
xorb
inc
pop
mov
lods
inc
cmp
pop
out
and
push
push
sbb
cwtl
cs
mov
cmp
xor
in
mov
xchg
stos
cmpsl
pop
mov
lea
clc
scas
shrb
mov
lock
ja
or
mov
addl
mov
mov
rdpmc
cmpsb
xchg
mov
loopne
and
and
lods
pop
inc
iret
inc
enter
stos
mov
or
lds
fisubl
enter
les
divb
test
sahf
mov
jno
pop
sarl
popa
jns
mov
cmpsb
mov
or
int3
mov
cmp
repz
iret
loop
fmull
and
out
test
aad
pop
add
in
in
filds
push
andb
fisubrl
inc
mov
push
jl
aas
nop
clc
pop
shl
in
sbb
dec
add
imul
popa
or
dec
aad
popa
mov
lcall
fsubr
or
ljmp
mov
push
mov
cs
outsb
aaa
push
mov
movsl
lahf
mov
rclb
xor
in
sbb
adc
and
pop
out
rcrl
les
inc
je
pusha
mov
pushf
or
xchg
test
imul
lock
mov
add
push
dec
pop
inc
add
xor
and
test
sahf
gs
or
inc
aam
aam
xchg
cmc
push
cmc
inc
out
jo
leave
std
xchg
sti
pop
mov
les
ja
add
cmp
lock
jb
xchg
out
ret
hlt
cmp
jb
pop
dec
push
mov
and
cld
xchg
adc
push
in
imul
repnz
addl
mov
fdivrl
pop
xlat
pop
pusha
shrl
clc
xor
icebp
jb
test
inc
rcr
aam
les
sub
jmp
in
jbe
insb
fcomp
mov
shl
outsb
sbb
in
xchg
insl
or
mov
or
rorb
ss
jo
push
xchg
add
out
cmp
pop
test
fs
outsl
adcl
fsubrp
pushf
push
mov
icebp
sbb
xchg
clc
pop
or
lods
inc
out
pop
mov
aaa
mov
xchg
movsb
sarb
jle
xchg
fdivl
adc
clc
inc
aad
or
jns
push
jno
adc
xchg
mov
adc
jb
mov
pop
adc
inc
js
push
mov
loopne
js
sbb
or
jg
loopne
cmp
adc
mov
inc
sbb
mov
add
out
jno
scas
mov
mov
cmp
xor
loopne
jbe
push
bound
pushf
std
cs
sti
pop
loop
enter
dec
sub
mov
negb
mov
pusha
xchg
nop
jns
frstor
mov
or
push
xor
xchg
nop
movnti
mov
jecxz
dec
fs
aad
cmc
mov
andl
xor
arpl
hlt
lods
mov
je
xor
mov
aad
imul
inc
ret
lods
mov
outsl
push
lods
mov
adc
int
mov
sti
rolb
xor
xchg
lcall
jmp
mov
ss
fnstenv
jecxz
ss
mov
mov
xlat
lods
shrb
pusha
imull
push
test
jae
jle
dec
rcrl
outsb
jmp
jl
aam
inc
movsl
cmc
lcall
rorl
cmp
outsb
xchg
cmp
sahf
insb
mov
push
popf
cli
test
jle
push
ljmp
lock
into
jne
lret
lcall
pop
sbbl
inc
gs
inc
sub
lock
push
sbb
clc
outsl
mov
xor
push
jbe
mov
add
jae
pop
pop
daa
xor
jmp
es
mov
std
lods
sub
sahf
xor
add
inc
pop
std
movsl
sub
lds
pushf
inc
mov
cld
ja
cwtl
pop
stc
pop
clc
mov
xchg
mov
xchg
mov
push
sub
ja
or
movsl
jl
xor
dec
mov
ljmp
sub
xchg
fs
push
sbb
sbb
out
mov
cmp
add
repnz
add
in
push
adc
xchg
aad
mov
fwait
sbb
pop
loop
mov
mov
aam
sub
mov
movswl
add
mov
faddl
jns
mov
int
popa
cmp
jae,pn
mov
into
int
push
jb
and
imul
ljmp
jb
sbbb
jbe
je
pop
roll
add
push
adc
shrl
mov
insb
imul
push
lea
cmp
or
lock
push
sbb
mov
or
add
lret
cmp
sub
push
sahf
xor
jo
gs
fcoml
orl
and
int3
idivb
dec
mov
or
mov
imul
vmovaps
ret
fidivrl
jns
rclb
rclb
rorb
jmp
inc
or
ja
repnz
aaa
ret
popf
insb
jle
jns
rorl
jae
sti
fwait
inc
lods
jp
mov
xchg
add
mov
inc
dec
sub
pop
sbb
fwait
jg
jmp
xor
inc
aaa
testl
add
test
mov
mov
push
mov
jae
mov
subl
lahf
jnp
rcll
cltd
mov
xor
inc
add
andb
lret
fisttpll
cli
add
or
outsb
pop
sti
pop
cmp
xlat
test
xor
imul
les
out
sbb
imul
mov
fsubs
lahf
lods
or
pop
test
xor
mov
xchg
pop
pop
enter
sbb
in
xor
cmpsb
add
jns
push
pusha
insl
rclb
vphadddq
and
jb
pop
mov
in
aam
cmpsb
dec
push
iret
ret
pop
pop
and
scas
inc
lahf
fisubs
arpl
cmp
jge
xor
hlt
add
mov
jnp
movb
notl
and
cmp
jl
rcl
pop
dec
jecxz
cmpsl
test
mov
enter
jecxz
cmp
mov
lods
inc
xchg
mov
dec
bound
cmp
xchg
mov
dec
push
xor
arpl
and
mov
ficoms
xchg
inc
cmp
cmpsl
in
lods
sbb
ds
xlat
cmp
push
outsb
pop
mov
inc
pop
test
cld
xchg
lods
push
ja
lret
jb
out
jns
in
lods
sahf
cltd
add
popa
fs
addb
rol
movsb
mov
shl
fsubrs
jno
jno
or
fmull
es
inc
or
mov
fldl
test
shll
and
inc
insl
inc
xlat
sahf
cwtd
push
je
mov
frstor
addr16
push
and
mov
jae
inc
dec
aas
push
jp
add
lds
pop
cmp
andl
sbb
inc
out
or
and
rolb
sbb
pop
jno
pop
repz
jge
jg
jp
out
jne
out
cmpsb
pushf
xchg
inc
or
xchg
shrl
xchg
pop
fs
data16
sbb
push
xor
inc
add
arpl
das
jmp
xor
stc
std
cmp
xchg
rol
sahf
or
pop
jecxz
or
stos
xchg
fstl
mov
test
mov
lret
inc
shlb
and
pop
dec
cmpsl
cmp
push
out
dec
in
jnp
cwtl
lahf
mov
ret
cltd
xor
ret
cmp
fcmove
push
pop
rclb
mov
and
adc
movsl
mov
repnz
test
sub
rorb
cmp
xchg
mov
xor
in
adc
inc
xor
lock
and
push
lea
push
fninit
jmp
leave
fs
cli
pop
aad
repz
stc
push
dec
adc
mov
xor
sub
fnstenv
jecxz
ljmp
je
jmp
add
ret
dec
pop
and
loopne
fsub
pop
ret
lret
sti
adc
inc
in
or
push
data16
xor
inc
data16
xor
cmp
ret
aaa
jnp
in
fildll
mov
ficomps
xchg
cmp
push
js
sbb
imul
js
dec
cld
dec
aam
outsl
xchg
jns
lds
sub
xor
gs
repnz
arpl
xlat
push
lods
inc
pop
dec
mov
out
xlat
mov
ret
outsb
cmpl
or
repnz
mov
xchg
aad
out
adc
or
test
or
fistpll
xor
xor
popf
fs
and
jge
pop
hlt
push
inc
xchg
clc
mov
pop
sarb
push
out
mov
es
int
push
cmpsb
shrb
sbb
or
dec
push
out
in
fsubs
fdiv
inc
mov
psadbw
ja
jo
ljmp
ds
mov
pop
outsb
in
mov
push
cmpsb
ret
pop
aam
push
ljmp
jb
shll
aam
mov
pop
negl
dec
ds
mov
leave
push
loop
add
jne
jle
push
xchg
inc
mov
test
pop
push
enter
jecxz
movsl
pop
xor
insb
inc
xchg
jl
add
leave
mov
ss
pop
mov
xor
daa
mov
pop
sub
dec
dec
jns
mov
adc
push
pop
out
test
outsb
stos
mov
mov
les
jbe
stos
mov
aad
scas
outsl
add
pop
scas
jb
stos
mov
fdivl
xchg
movsl
mov
and
xor
inc
call
iret
mov
arpl
cmc
lods
int
movsb
push
stos
sub
aam
aam
xchg
jp
scas
pusha
call
fdivs
pop
in
fstl
inc
xlat
dec
and
scas
out
pop
xchg
pop
lret
cmp
cwtl
push
mov
shl
and
fisttps
add
test
fs
mov
test
das
push
js
push
mov
or
or
jno
mov
ficompl
inc
inc
xor
fsub
jle
mov
push
mov
js
xchg
dec
mov
sbb
imul
imul
outsb
imul
cmp
jecxz
mov
push
ret
cmp
ret
mov
cs
inc
sbb
dec
iret
mov
xor
fucomi
jmp
xchg
mov
jb
cmpsb
adc
jo
xchg
mov
repz
shl
sbb
xor
cwtl
mov
scas
push
pop
lret
mov
mov
rcll
cmc
sbb
in
add
orl
jecxz
hlt
jg
inc
push
xchg
pop
push
fisubrs
mov
or
divb
cmp
xchg
dec
rcl
sbb
add
push
or
inc
movsl
addr16
push
hlt
xchg
inc
pop
sbb
or
mov
adc
out
aam
cwtl
add
push
mov
lods
xlat
es
je
sub
sub
fmull
les
adc
sub
fistps
lret
lret
mov
mov
or
sub
js
push
push
mov
scas
lcall
or
rcrl
xchg
xor
cmp
inc
fcompl
push
into
push
into
mov
fdivp
cmpsl
xor
shrb
jnp
mov
aaa
sub
pop
push
stos
add
pusha
and
popa
mov
xchg
negl
shl
clc
iret
add
push
jne
add
cwtl
ja
push
mov
and
mov
pop
push
psadbw
push
pop
icebp
push
movsl
sbb
std
js
xchg
popf
iret
xlat
inc
mov
sbb
popa
push
out
lcall
enter
data16
jae
inc
push
lret
popl
mov
mov
into
xor
cmp
jbe
push
push
loopne
dec
adc
add
aaa
pop
add
jnp
inc
inc
out
fs
test
inc
ljmp
popf
or
and
inc
dec
lods
cli
clc
xchg
rcl
add
out
push
aad
push
add
lea
loopne
push
popf
push
outsb
sub
mov
les
shlb
cmp
into
jno
hlt
icebp
cwtl
mov
mov
xor
rorl
or
inc
or
add
jle
cmpsl
push
inc
mov
xchg
push
iret
call
pop
int
and
mov
rorb
add
inc
mov
dec
dec
mov
subl
or
or
daa
lcall
or
push
imul
daa
lods
inc
inc
dec
fs
ret
xchg
and
mov
in
mov
jecxz
pop
or
jo
mov
fcomi
sub
jns
sbb
cmp
lret
inc
xchg
xlat
scas
inc
mov
bound
sub
mov
jmp
mov
pop
shll
loopne
dec
fiadds
icebp
insl
inc
xchg
pop
adc
jecxz
sbbb
mov
pop
les
pop
mov
lock
scas
ret
mov
jle
mov
mov
fisubl
lock
divl
mov
jle
or
fisttps
stc
data16
xchg
ret
arpl
addb
lea
mov
in
imul
adc
ss
and
cli
or
mov
sub
repz
sbb
mov
dec
cmp
ja
sbb
test
and
xor
pop
loop
pop
push
add
inc
rorb
push
outsl
decl
or
into
data16
rorb
bound
addr16
push
clc
in
arpl
adc
jo
insl
sahf
and
lods
nop
xlat
popf
pop
cmp
mov
lret
loope
rclb
mov
push
mov
imul
je
push
icebp
ds
ds
and
xchg
adc
sbb
xor
shll
mov
or
mov
xchg
cmp
jle
nop
mov
cmp
and
pop
mov
mov
xor
push
test
sub
inc
sbb
aaa
pop
jb
fcomp
push
aas
mov
mov
das
outsl
inc
cltd
adc
popa
and
add
sbbb
and
jno
and
stos
inc
adc
hlt
enter
insl
sub
movlps
hlt
adc
int3
mov
ret
inc
aad
into
gs
push
inc
or
push
cmp
mov
pop
jns
cmp
add
repnz
pop
xor
dec
imul
mov
cmp
imul
orl
mov
push
add
in
std
inc
or
jmp
stc
cmp
jmp
pop
adc
or
call
je
cmp
dec
cmp
pop
jecxz
push
sub
shll
jmp
and
mulb
xchg
lahf
push
adc
subl
aad
mov
fisubs
xchg
icebp
inc
sbb
push
cmp
cmp
repnz
xor
lea
cmp
js
inc
ja
mov
lcall
shll
xchg
inc
dec
data16
loope
rclb
loop
cmp
sbb
aas
lcall
pop
xchg
mov
test
sub
pushf
adc
out
lcall
das
outsl
inc
fldl
rcrb
imul
lahf
push
insl
jnp
dec
mov
orl
shll
daa
outsl
es
scas
cmp
inc
idivb
jg
cmp
scas
dec
daa
push
mov
insl
ss
stos
sub
pushf
gs
ljmp
push
sahf
xchg
dec
rolb
shll
shlb
push
inc
dec
or
pop
sbb
popa
push
jnp
scas
sub
cmc
or
inc
es
xlat
int
or
add
pop
mov
mov
add
leave
pop
fcompl
ficoms
cmp
and
add
pop
out
lock
inc
shl
iret
pop
loope
sbb
add
aas
iret
xchg
sbb
push
popf
jg
inc
fwait
sbb
ljmp
scas
mull
dec
sub
dec
fldenv
test
cli
jae
sbb
pop
roll
or
sub
sbb
add
sub
mov
stos
sti
mov
scas
ljmp
inc
cmp
adc
ret
jnp
add
xchg
int3
jbe
cltd
push
xor
inc
jno
lcall
jbe
fbstp
into
psubq
lcall
stc
in
pop
cmc
outsb
add
jns
xchg
cmc
jle
sub
das
add
es
or
aam
mov
add
in
lea
xor
inc
icebp
push
push
aas
mov
movsb
adc
push
cmpsb
dec
les
sti
and
nop
adc
int
fbld
fcmovnb
push
jns
inc
lods
js,pn
repnz
mov
xor
adc
cmp
sub
aam
int
inc
push
xor
inc
pop
push
push
mov
fwait
dec
and
repnz
jbe
add
bound
add
nop
sbb
cmpsb
cmp
push
jo
pop
fidivrl
aaa
xor
and
sbb
sbb
fisubs
jno
dec
xchg
jb
arpl
cld
stc
or
sub
dec
hlt
or
push
and
lahf
call
sub
scas
inc
mov
stos
dec
inc
and
sub
loop
into
adc
es
lods
jno
fisubs
and
je
xchg
cmpsb
pop
lods
faddl
dec
sbb
andb
test
insl
sbb
mov
push
mov
adc
arpl
pop
xchg
inc
and
repz
repz
mov
jp
add
sti
insl
and
scas
add
lcall
test
mov
add
xor
les
xchg
sub
clc
inc
jmp
xchg
dec
pop
clc
js
sbb
xchg
out
adcb
and
outsb
dec
xchg
popa
add
leave
test
out
mov
stos
mov
sbb
push
add
pop
xchg
test
jbe
pop
js
loope
ss
movsb
gs
jg
rcrl
std
rorl
xchg
insl
mov
pop
imul
cmc
mov
fstpt
jne
adc
roll
push
inc
in
push
sti
or
xlat
xchg
adc
xchg
xchg
fisubl
test
add
nop
les
fisttps
mov
mov
adcl
push
mov
popa
lea
push
insb
inc
insb
jl
les
xor
fstpl
add
clc
and
pusha
lock
jnp
mov
cltd
scas
cmpl
jp
fisubrl
sbb
clc
jge
stos
inc
mov
ror
repz
nop
jge
jo
ss
pop
scas
iret
pop
cltd
das
bnd
xadd
mov
jle
or
pop
idivl
sub
imul
rorl
je
sbb
cmp
xlat
je
rcrb
inc
pop
scas
xor
or
inc
push
ss
push
insl
in
test
and
jne
jo
sbb
daa
mov
xlat
ljmp
sub
cmpsl
or
out
add
test
mov
add
dec
popf
lods
fstpt
ret
jmp
pop
fnstenv
ss
stc
xchg
sub
aas
data16
xchg
pusha
or
sbb
scas
xchg
stos
push
sub
ja
jae
pop
ret
scas
inc
hlt
xchg
pop
pop
lcall
psubw
dec
sub
mov
inc
lret
pusha
or
mov
movsb
cmp
aad
hlt
hlt
repnz
mov
roll
repz
iret
push
ljmp
insl
repz
mov
inc
lcall
sbb
or
inc
sahf
inc
je
push
jmp
mov
jb
adc
fidivl
test
lcall
js
aas
stos
not
shrb
icebp
movsl
out
mov
adc
dec
andb
jo
mov
aad
jae
jae
sti
lds
xchg
mov
jns
rol
out
loope
fstl
sahf
inc
arpl
js
add
fxam
jnp
dec
or
lds
xlat
pop
addr16
and
xor
lahf
call
aam
xor
les
icebp
inc
negl
sub
xor
incb
test
lods
push
fxch
pop
dec
testl
push
mov
test
lods
das
xor
pop
dec
inc
sti
aaa
dec
imul
fs
data16
bound
dec
idivl
in
xchg
adc
dec
popa
inc
mov
mov
insl
sub
sbb
hlt
mov
jecxz
jb
dec
sub
dec
mov
sbb
insb
dec
filds
pop
pop
add
aam
jp
ss
in
add
inc
imull
cld
in
lock
dec
movsl
inc
ss
enter
test
leave
mov
imul
test
sti
mov
sub
incb
push
pusha
testl
push
fcmovnb
push
pop
shrl
frstor
push
mov
push
insb
inc
bound
imul
cmp
stos
xchg
loope
inc
lret
add
jecxz
es
clc
fs
or
loope
lret
push
xchg
mov
jne
pop
dec
inc
adc
jle
lcall
push
mov
xchg
shrb
test
bound
mov
add
lds
iret
mov
aad
xlat
push
or
fisttpll
mov
sti
rol
fbstp
out
fistpl
fildll
sbb
add
je
adc
cld
and
test
xchg
stc
das
and
jl
or
mov
arpl
mov
test
fidivrl
repz
repnz
mov
cs
xchg
into
movsb
out
mov
push
inc
push
and
inc
and
int
addr16
cltd
push
lret
xor
sbb
mov
or
xchg
mov
jp
nop
or
mov
or
and
jne
cld
lds
sti
or
mov
push
mov
xchg
cli
test
sub
push
xchg
sub
push
dec
add
repnz
cmp
cli
fdivs
ja
push
add
ss
and
fucomip
fucom
mov
sti
call
jge
cmpsb
ss
es
xchg
sbb
cmp
push
loope
int3
out
fimull
pop
inc
in
mov
clc
test
cwtl
push
push
xor
aas
cmc
cmp
stc
std
rolb
ds
repnz
add
lds
pop
xor
in
xchg
xchg
sub
dec
rclb
repz
fisubrs
push
in
ljmp
adc
test
mov
mov
jne
sbb
mov
movsl
mov
fbstp
jmp
test
jmp
shrl
lock
test
mov
xchg
imul
leave
xor
adc
dec
mov
cwtl
pop
xchg
push
sbbb
inc
lds
push
push
or
xchg
mov
cmp
push
jne
mov
pop
push
pop
and
dec
jecxz
cltd
adc
add
push
je
cmp
xchg
cmp
xchg
arpl
sbb
cld
shlb
inc
sahf
out
idivb
xchg
popa
mov
sbb
push
je
call
xchg
aaa
lds
les
nop
movb
int
mov
jb
push
pusha
jae
xchg
jne
or
insb
cmpxchg
push
mov
dec
mul
jl
adc
add
bound
mov
inc
dec
mov
and
fwait
fsubs
hlt
enter
adc
hlt
dec
fdivs
negl
sbb
leave
rcrb
adc
add
xchg
fisubrl
stos
fwait
sti
sbb
lock
sbb
push
lods
add
out
jp
mov
jg
sbbl
mov
xor
pop
cld
xchg
mov
jne
popf
sbb
repnz
cmp
xchg
jno
jb
out
dec
add
mov
and
shlb
ror
lods
pop
bndldx
add
push
inc
std
inc
jge
js
jp
adc
std
xor
mov
mov
or
add
xor
adcb
mov
cmp
xchg
nop
mov
pop
add
inc
stc
adc
mov
orb
push
or
sarb
cmpsb
lret
movb
out
mov
jno
sub
jne
mov
xor
jp
sarb
cmp
addr16
loope
test
stc
jo
shl
fwait
adc
int
fwait
sahf
lock
pushf
cli
test
daa
xor
test
outsb
jne
or
insb
xor
fwait
cltd
sub
ja
aam
out
mov
push
loopne
daa
int3
inc
pop
decb
jge
ret
mov
mov
push
mov
xchg
push
lods
aad
pushf
xor
js
cmc
sarl
jo
pop
mulb
stos
jns
aas
ret
jge
cmc
pop
out
sub
dec
dec
add
push
xor
mov
ficoml
or
out
movsl
jge
or
outsl
fwait
ljmp
lds
and
inc
push
cmpsl
mov
adc
into
psubw
loopne
pop
lods
cltd
test
jmp
jb
data16
mov
fnsave
fcomp
pop
sub
addl
mov
push
movsl
pusha
xchg
xchg
push
xlat
fmulp
leave
jbe
sti
out
data16
add
xor
jl
xchg
mov
adc
mov
or
jp
and
addr16
je
and
xchg
xor
sbb
adc
loop
mov
add
mov
pop
nop
push
scas
mov
fsubs
mov
into
inc
loopne
divl
dec
mov
xchg
rcll
push
loope
add
mov
adc
xchg
sub
push
sbb
jge
mov
and
mov
icebp
jo,pn
fcoml
dec
sbb
clc
mov
movsb
xor
test
xchg
adc
test
sbb
aas
movl
lret
and
sub
js
push
fmuls
sub
xor
cmp
sbb
mov
jne
mov
mov
scas
stos
mov
mov
pop
sbb
mov
aad
stos
xor
int3
xor
sub
pop
inc
and
sbb
mov
xchg
push
cli
ss
mov
stos
and
pop
inc
and
jnp
pop
mov
subl
sub
mov
les
lods
fucomip
popf
das
aas
out
jmp
clc
nop
jb
das
rorb
jmp
or
inc
lcall
test
ret
int3
arpl
mov
adcl
adc
cltd
lock
inc
adc
loopne
pushf
xor
mov
sbb
jo
out
gs
hlt
fsub
sub
andb
imul
pop
mov
pop
jo
cmpsb
mov
in
pop
pop
xor
xchg
in
xor
push
jae
mov
dec
sub
and
jb
shrl
jecxz
ljmp
sub
fidivl
pusha
cli
sub
xor
fnstenv
push
fdivl
sub
ds
xchg
push
popl
in
fldcw
orb
or
dec
orl
int3
mov
jl
cmpsl
fdivl
mov
sub
inc
sbb
insb
rol
leave
popa
dec
cmp
arpl
pop
xchg
xchg
out
out
xor
dec
or
mov
mov
push
mov
pop
in
cld
push
sbb
xchg
out
bound
inc
or
mov
cltd
jl
xor
xlat
fcomps
in
out
fwait
push
jbe
inc
fstpt
mov
inc
lea
fsubrs
shlb
mov
or
dec
roll
xchg
dec
dec
imul
repz
lret
and
cltd
or
cmp
mov
cmpsb
addl
pushf
adcl
lock
fnstsw
out
jmp
push
rcll
push
xchg
push
mov
shll
jg
fidivs
push
mov
sub
jmp
mov
mov
cmp
fsubl
push
pop
sub
mov
pop
data16
mov
add
sbb
test
popa
clc
clc
popa
xor
push
das
jg
lea
xchg
ret
pop
xchg
jecxz
jmp
xchg
and
push
test
or
mov
mov
xor
cmp
cmp
add
js
mov
cmp
sub
and
sub
aaa
std
jg
xor
mov
xchg
add
mov
xchg
ds
pop
mov
imul
lds
xchg
mov
insl
adc
ret
test
orb
sub
int
ja
mov
dec
pop
rcrb
xchg
bound
or
pop
mov
push
popf
mov
ret
add
inc
test
lcall
movsb
xor
jmp
lea
popf
nop
and
add
in
adc
mov
sti
aam
push
lea
or
jp
pop
jmp
xor
loopne
paddusw
ljmp
jno
add
stos
and
xor
xor
fcom
dec
adc
push
mov
lods
inc
push
enter
mov
sub
int3
ret
mov
popa
les
sub
cld
ds
loop
call
or
dec
fistpll
push
push
inc
lcall
es
push
mov
int
lret
push
gs
add
icebp
mov
imul
je
pmaxsw
cld
mov
jb
and
enter
mov
xchg
xchg
sti
xchg
and
jge
push
adc
cmc
adc
pushl
data16
cwtl
inc
loope
xchg
in
dec
lret
mov
and
aaa
leave
stos
and
push
imul
fmull
pop
pushf
pop
in
sub
loopne
cmove
addb
push
pop
fisubs
iret
mov
test
cwtl
add
push
jbe
mov
data16
test
into
fwait
xor
cmp
xlat
lods
sub
pushf
xchg
mov
js
mov
push
insb
add
jae
mov
mov
inc
add
cmpsb
mov
cmp
sbb
sub
std
scas
mov
sti
jg
jg
dec
inc
mov
add
add
xor
xor
adc
in
clc
hlt
jae
es
jbe
loop
lret
add
pop
xor
pop
loopne
push
xchg
data16
jns
fldt
inc
adc
xchg
jno
mov
repnz
outsb
xchg
sub
dec
inc
pop
jge
mov
in
mov
out
add
lcall
bound
sub
sub
add
icebp
lcall
iret
loopne
in
and
rcrb
pop
xor
and
or
int
mov
rol
ja
inc
ljmp
shll
jge
fnstenv
fisubs
cmp
add
mov
flds
adc
or
pop
push
mov
cmp
mov
mov
icebp
xor
cmp
movsb
insl
leave
mov
push
sahf
outsb
cmpsl
dec
test
ret
or
pushf
ret
sbb
xchg
cld
inc
xchg
push
dec
cltd
or
rcrb
mov
fbld
mov
or
mov
sbb
sbb
and
cmpb
mov
or
aad
pop
mov
cmp
push
jbe
jb
xchg
aas
test
jnp
outsl
cmc
pop
push
cmpsb
call
mov
ret
stc
scas
fwait
outsb
push
lret
jne
shrl
stos
jb
push
lret
rorb
push
mov
fwait
das
jg
jg
xor
sbb
in
lea
xor
push
and
jmp
scas
adc
aad
sub
sub
inc
pop
nop
fs
sub
mov
cmp
xchg
pop
rcrb
ds
out
scas
mov
xchg
fsub
and
sub
and
loope
dec
cld
ss
rcl
insb
in
shrb
mov
cmp
test
out
fs
pop
lods
jmp
rorl
xorl
pushf
xor
adc
cmp
sbbl
out
mov
or
dec
mov
lahf
ss
jns
in
cmp
ret
mov
push
jl
pop
loop
dec
mov
aas
out
and
jmp
push
ljmp
mov
nop
into
movsb
dec
lods
push
or
lcall
mov
and
nop
inc
inc
addr16
dec
into
mov
imul
mov
mov
jmp
out
push
fwait
out
or
pop
xchg
cltd
or
subb
add
ds
add
fwait
and
pop
mov
mov
jl
jmp
in
mov
orl
fsubrs
or
mov
mulb
cmp
cmp
xor
push
je
jnp
shrl
xlat
push
mov
pop
jl
pop
scas
daa
stos
and
mov
fistpll
mov
sub
adc
cmp
jp
rolb
add
push
cmp
into
adc
dec
jnp
cmpsl
lret
push
add
cmp
jle
nop
lcall
ret
movsl
sbb
cwtl
xchg
stos
or
rolb
std
xchg
mov
sbbl
rcll
pop
sahf
and
movsb
dec
jo
lcall
rolb
jle
cmp
inc
jo
push
push
repz
gs
scas
jbe
push
mov
je
out
and
push
or
mov
scas
inc
add
sub
adc
add
sub
in
rorb
jmp
jp
mov
mov
or
fisubs
add
lods
inc
mov
and
nop
jmp
leave
add
or
addb
xbegin
lret
out
shll
test
aas
mov
jp
bound
fmull
cmpsb
in
xchg
cwtl
xchg
xor
xor
mov
pushl
sarb
fnsave
push
iret
add
cmp
mov
sti
sbb
bound
clc
int
out
imul
jl
adc
roll
or
js
mov
or
push
pusha
filds
aam
jp
cmpsl
aas
mov
nop
mov
push
mov
jne
hlt
inc
subl
mov
push
mov
inc
movsl
lods
ljmp
les
lds
pop
mov
outsl
daa
mov
sti
push
jmp
push
pop
and
shrb
in
outsl
mov
popa
test
repz
cmp
lea
sarl
dec
icebp
popa
std
lret
cmpb
push
pop
fbstp
pop
leave
dec
dec
negl
add
int
xor
test
push
pop
movsb
push
add
scas
push
sub
cmpsl
aaa
fwait
sub
cmp
lcall
jp
imul
adc
inc
jbe
cmp
xlat
adc
sbb
imul
pop
mov
fcomi
xlat
das
shlb
or
pop
inc
testb
wbinvd
inc
popa
or
outsb
or
push
cmp
inc
push
add
inc
inc
pop
fimuls
add
daa
and
sbb
icebp
sbb
jg
cmp
mov
add
inc
jl
lahf
cmp
pop
les
lds
and
cmp
int
in
and
dec
add
xchg
xor
mov
aas
mov
jg
mov
fs
lock
xchg
mov
ret
cwtl
sub
imul
fwait
sub
add
rcr
push
mov
dec
popl
mov
fnsave
sub
daa
lcall
cmp
add
add
sbb
jmp
mov
jo
fs
mull
bound
sbb
lret
add
jecxz
pop
xchg
mov
mov
cmc
xor
add
jno
outsl
ret
fistpll
jg
in
and
and
out
pop
and
jp
aad
pushf
pop
fucomp
in
in
and
pop
aam
sbb
adc
ret
shrb
dec
inc
loope
hlt
and
cwtl
inc
xchg
sub
mov
adc
mov
pushf
int
aad
adc
mov
out
push
outsb
fiadds
out
mov
mov
pop
cmpsb
sbb
push
in
adc
shrb
jbe
jns
mov
pop
shlb
sub
mov
or
daa
cmpsl
pop
xor
enter
sbb
mov
ret
mov
or
jb
dec
mov
dec
repnz
loop
ds
xchg
arpl
cmp
test
mov
pop
or
mov
mov
dec
movsl
sbb
xor
jo
inc
pop
jne
fucomp
insb
and
jbe
imul
out
dec
cmpsl
in
push
sbb
pusha
mov
imul
ljmp
cmp
fisubrs
pop
lds
or
pop
imul
mov
sbb
fwait
ss
lock
cltd
inc
sbb
xor
inc
insb
sub
rol
popa
dec
jo
rclb
mov
enter
pop
cmp
jge
cltd
mov
lcall
sbb
out
mov
mov
mov
mov
xchg
movl
ret
cltd
lcall
fwait
xchg
cmp
sbb
inc
stc
mov
je
ljmp
hlt
leave
inc
dec
loop
imul
rorl
outsl
jmp
and
leave
aas
lahf
stos
mov
jg
movsbl
dec
jne
testl
into
push
adc
daa
jecxz
loope
ljmpw
adc
push
pushf
test
sub
add
cmpsl
sbb
fcoms
fdivp
xor
aaa
movb
shr
or
sbb
idivl
into
push
out
mov
add
xchg
mov
jns
movsb
xchg
or
scas
push
int3
mov
jns
imul
cmp
shlb
push
add
pop
shl
sub
lods
repnz
stos
test
and
mov
ss
data16
in
inc
or
push
lret
pop
push
add
lods
xor
popa
clc
add
mov
fisubrs
call
or
lods
push
mov
mov
iret
cmpb
lret
fsubl
movsb
pop
idivl
mov
clc
or
xor
cmpsl
cmp
push
outsl
rcr
aas
les
out
mov
pushf
pusha
or
gs
xchg
add
pusha
aaa
pop
and
lret
sub
lcall
stos
sbb
int3
jbe
lcall
and
or
inc
and
jb
lret
bound
mov
insl
sbb
mov
mov
adc
fidivrl
add
inc
fdivrs
xchg
sbb
cmp
dec
and
in
lcall
push
xchg
cwtl
sbb
aam
scas
out
das
push
inc
sbb
xor
xchg
stos
sahf
sub
mov
pop
lods
ja
pop
rclb
pop
sar
arpl
sub
pop
divb
cmp
loope
mov
add
sti
aas
aad
js
js
icebp
pop
aam
cli
in
orb
mov
subl
fistpll
mov
cmpl
and
sub
popa
fidivl
cmp
out
sti
call
push
sbb
mov
mov
inc
and
xchg
stos
push
inc
pop
mov
mov
xchg
lock
dec
pusha
data16
xor
int3
pop
mov
lds
in
sub
jae
je
out
test
cmp
test
ficoms
push
pop
or
pop
in
les
les
push
addb
xchg
das
pop
jns
test
sbb
mov
xchg
sbb
mov
jno
jecxz
mov
mov
pop
push
mov
pop
sbb
dec
mov
cmp
mov
push
in
subl
xchg
cmp
insb
pop
fwait
mov
dec
inc
cld
dec
and
push
call
xor
ss
jecxz
outsb
and
cmc
cmp
or
and
cwtl
lcall
push
or
fmull
loopne
adc
pop
mov
jb
pop
imulb
lods
push
push
mov
adc
out
cwtl
call
add
or
fldenv
jp
add
xchg
scas
sbb
rcrl
sbbb
add
shlb
es
fisttps
popf
push
leave
dec
cmpsl
data16
fsubrs
scas
aad
xor
cmpsl
cld
outsb
mov
or
pusha
jae
mov
xlat
mov
aad
mov
mov
scas
daa
mov
add
push
ret
or
je
mov
xchg
cmp
sbb
push
mov
mov
enter
in
pop
push
adc
inc
iret
out
fs
jb
leave
jo
pop
sbbl
out
je
xor
lods
cmp
or
dec
ds
push
in
adc
pop
leave
xor
jmp
pop
pushl
or
or
in
andl
or
loopne
jb
faddl
sub
sbb
jae
outsl
mov
stos
jl
lahf
jno
popf
xor
cmp
mov
dec
pop
jo
mov
inc
pop
test
and
adc
mov
fidivrs
fucomip
inc
repnz
and
jo
nop
aam
mov
pop
shl
shl
rep
push
in
addr16
sbb
fimull
test
movsb
es
aam
pop
cmpsl
daa
ret
jp
sbb
out
or
insb
mov
loopne
lds
inc
data16
pusha
push
push
add
movsb
fcomip
loopne
sub
adc
scas
xor
jb
and
iret
leave
int
push
cmp
arpl
sub
jecxz
ss
cmp
push
cwtl
das
mov
add
fstpl
mov
in
into
cmp
aad
stos
sti
std
divb
out
mov
or
pop
cmpb
xchg
mov
fwait
aas
xchg
jno
and
add
dec
mov
adc
pop
mov
push
rorl
xchg
sub
dec
testb
les
jmp
cwtl
das
lock
and
jb
scas
bound
add
les
or
testl
mov
mov
adc
aad
jbe
out
les
repnz
push
lret
cwtl
dec
loop
pop
fdivs
iret
sub
mov
and
xchg
cwtl
xchg
jmp
imul
fimuls
sbb
addr16
mov
cmp
fsubrs
xor
cs
das
jmp
push
sbb
int
xor
lods
push
ds
adc
pop
adc
inc
xchg
out
andb
test
call
test
test
cmp
pop
aas
pop
mov
add
movsl
or
xor
pop
cld
pop
jmp
or
pop
xchg
lods
inc
ss
sar
faddp
pop
adc
aaa
jno
xor
ja
jnp
in
out
adcb
xchg
out
mov
repnz
arpl
pop
xchg
xchg
rol
icebp
call
push
cwtl
js
stos
mov
pop
dec
fs
mov
push
pop
mov
mov
cmp
imul
cmp
cmpsb
scas
xchg
ljmp
ds
pusha
mov
fldcw
out
stc
pop
stc
je
inc
fadds
ret
aam
in
or
int
ds
cwtl
shlb
dec
cltd
adc
movsb
out
xchg
int
repz
int3
vpmaxub
mov
imul
push
aam
clc
rcl
xor
mov
negl
xchg
adc
lcall
sub
leave
add
sti
sbb
adc
push
dec
jno
in
mov
lds
or
sub
les
pop
add
xor
inc
outsb
and
ficoms
fstl
pop
mov
ljmp
push
mov
or
adc
insl
lret
xor
insl
aas
push
sbb
mov
arpl
daa
negb
mov
mov
pop
pop
sbb
ss
jbe
mov
dec
js
sbbb
pushf
ret
pop
outsl
cmc
std
jb
insl
sbb
outsl
jae
mov
inc
jno
jle
sarb
mov
addb
out
or
mov
lods
dec
sub
lods
aaa
jb
loop
sub
out
pop
mov
ret
fsubrs
mov
sahf
xchg
cli
sbb
lods
adc
add
idivb
ja
cmpsl
dec
or
insl
pop
cmpsl
xor
fdivrl
pop
lods
push
jbe
faddl
ds
out
std
xchg
test
xor
lahf
xor
fmulp
jge
pop
cmp
and
clc
cltd
popl
cmpsl
vpunpckldq
aad
xor
mov
into
fsubl
push
aad
add
sbb
insb
xor
xchg
push
cmp
lock
test
sub
fdivl
cwtl
jmp
push
sub
cmp
in
lods
rcrl
mov
fdivp
iret
pop
sarb
aam
add
inc
or
xchg
cmp
sbb
leave
stc
mov
dec
mov
insb
scas
loop
mov
cmpsl
cmp
sbbb
loop
mov
adc
in
and
inc
mov
lods
adc
mov
lds
or
daa
inc
popf
je
xor
ds
cmp
fsubrs
stc
xchg
sti
sti
ss
imul
jns
mov
lahf
test
xor
das
addr16
jnp
data16
inc
in
add
hlt
jno
and
in
and
loop
jmp
sbb
dec
stc
jmp
ret
pusha
std
or
dec
xchg
xchg
push
insl
pusha
inc
inc
push
mov
jo
flds
sbb
loopne
mov
mov
sbb
add
les
jle
cmp
loope
xor
cmpsb
push
cmc
inc
sbb
cli
adc
jne
mov
mov
push
push
nop
xor
xchg
push
mov
aam
dec
push
out
lret
mov
cwtl
js
pushf
test
jbe
js
pop
lock
xchg
out
mov
add
jg
push
int
adc
cmp
lahf
adcl
test
sub
sets
sbb
xchg
cmp
inc
outsb
mov
std
jbe
clc
mov
xchg
or
inc
ret
fidivs
cmp
pop
jmp
cld
addr16
add
cld
push
lods
jge
or
pop
jg
mov
xchg
sub
movsl
je
stos
mov
sbb
cli
mov
cmp
add
mov
xchg
addl
cli
pusha
xchg
ret
clc
or
mov
enter
mov
jne
out
sub
popf
std
lds
mov
pop
mov
inc
ss
jbe
mov
cld
loopne
push
adc
clc
cmpsl
dec
sbb
aam
mov
imull
lds
dec
mov
es
inc
insb
jle
pop
cld
sub
mov
outsb
test
nop
into
test
xorl
cli
pop
test
out
rcll
test
jbe
inc
imul
mov
sub
add
and
mov
mov
cmp
ja
sub
xchg
sti
mov
cmp
rolb
xor
mov
push
xor
jbe
mov
das
imul
ja
movsl
add
lahf
gs
sbb
arpl
xchg
mov
outsl
adc
and
jmp
sbb
sbb
or
sahf
add
jbe
ds
add
aad
stos
out
mov
clc
lret
adc
or
cmpsb
cmp
fcompl
cli
push
sbb
movsb
orb
jns
in
fmulp
push
cltd
fbstp
aad
icebp
pop
cmp
or
cs
repz
test
push
xor
jns
sub
out
jae
lahf
push
stos
out
push
push
sbb
fidivl
stos
sub
lcall
pop
pop
inc
mov
mov
imul
repz
subb
notb
sbb
arpl
pop
test
dec
push
lods
jl
push
jno
cmp
negb
mov
ud1
add
xor
pusha
out
mov
and
ljmp
add
jmp
mov
mov
in
mov
push
adc
aad
andb
dec
adc
jne
and
jg
int3
cmp
sub
inc
jge
push
fists
mov
jb
shrl
lods
xchg
inc
dec
or
push
loope
leave
pop
mov
and
pushf
rcrl
cld
adc
xchg
lcall
mulb
cmp
sahf
xor
ret
lret
jnp
fldcw
movsl
add
cmpsb
nop
dec
dec
mov
inc
cmp
jbe
sub
pop
cmp
cmc
and
jmp
dec
xor
jae
aas
xor
mov
add
pop
jno
stos
sub
pop
push
push
nop
jl
repnz
mov
ljmp
call
push
adc
addr16
les
mov
insl
bound
cmpsl
rcrb
sbb
ret
add
leave
in
out
jmp
sub
sbb
inc
outsl
jp
mov
js
fldenv
loope
sub
sbb
cmp
daa
lret
sti
fcmovb
es
mov
ljmp
pop
push
or
or
sub
jb
jmp
mov
and
shlb
jb
scas
out
test
dec
out
andl
in
rcrb
cs
sub
push
pop
push
xor
adc
mov
sahf
mov
add
pop
arpl
mov
xchg
adc
inc
call
shrl
mov
xchg
mov
rcr
into
fldl
fistpl
shlb
hlt
mov
hlt
ror
gs
outsl
push
ret
outsl
dec
cmp
adc
in
cmp
pop
lret
or
and
and
xchg
mov
jecxz
or
mov
sarl
dec
or
pop
ss
addr16
mov
or
out
mov
pop
rcr
out
mov
pushf
or
shl
subl
dec
pop
mov
je
and
cmp
sub
fistpl
mov
mov
pop
jmp
out
mov
sub
push
cmc
xlat
jae
dec
pop
pop
xchg
shr
out
pushf
inc
ds
mov
fistl
aad
push
or
test
pop
cli
xchg
gs
sbb
popa
ss
in
out
push
sbb
jl
mov
fildll
daa
fmul
test
push
and
mov
aaa
cmp
mov
stos
jl
cmp
data16
push
cwtl
sbb
cmp
cmpsb
in
ds
jl
out
stc
mov
push
xlat
jbe
pop
sub
and
sub
mov
ds
sbbb
jl
inc
pop
mov
imull
pop
test
movsb
into
neg
outsl
call
enter
sahf
or
jmp
adc
pop
push
cs
lret
cmc
sbb
mov
mov
pop
cld
enter
cltd
in
xchg
jge
in
cmp
jo
or
sub
aas
nop
mov
jge
dec
adc
jns
std
jg
cmpsl
imul
mov
pop
push
enter
in
mov
es
sbb
mov
adcb
pop
movsb
sbb
clc
mov
xor
icebp
movsl
gs
mov
cli
push
mov
pop
mov
or
inc
repz
int3
jo
bound
lds
push
loop
sub
fwait
aam
cmp
out
cli
inc
ret
movsb
xor
pop
pushf
ds
xchg
dec
push
aam
sahf
rcl
lock
or
sub
push
mov
shll
sti
xchg
adcl
or
addr16
les
push
shl
fcom
icebp
sub
jno
inc
or
out
imul
jno
add
loopne
icebp
pushf
out
and
push
shrb
jle
pop
sub
xchg
ljmp
aaa
jb
jmp
cmp
ja
dec
arpl
push
xchg
sub
fistl
and
jle
push
das
gs
lahf
imul
test
mov
test
sub
push
xchg
mov
iret
or
into
cmp
sti
mov
add
stos
or
mov
popa
rcrl
cmp
jp
iret
shr
push
and
inc
sbb
xchg
insl
dec
rcl
cmp
testl
shrl
inc
jb
xor
out
es
je
scas
inc
push
outsb
jns
mov
jae
cmpsl
or
mov
lods
mov
adc
dec
jle
xor
push
xlat
jmp
shll
pushf
xor
push
out
gs
in
sbb
dec
iret
movsb
mov
and
add
pop
xor
cmp
mov
push
jno
xor
inc
push
in
ror
inc
in
add
sbb
inc
sbb
cli
jp
clc
lret
pop
jmp
data16
mov
fld
ljmp
int
aas
dec
test
mov
mov
lcall
fucomi
insb
test
enter
enter
das
sbb
or
mov
mov
imul
imul
movsl
mov
pop
out
test
or
int3
adc
lret
xor
out
lods
mov
cmp
sbb
imul
cld
jns
gs
mov
add
adcb
stos
mov
popa
sbb
out
dec
andl
cmp
mov
push
stos
ss
fxam
jo
negl
cmpsb
lock
dec
dec
repnz
lret
stos
mov
stos
jbe
leave
fnstsw
cmp
xchg
scas
cwtl
mov
xchg
call
or
xor
pop
inc
jmp
cmp
adc
ljmp
xor
inc
out
outsl
jns
cmc
inc
fs
sarl
cmp
clc
push
jecxz
or
and
and
mov
enter
xchg
mov
cmpsl
lret
push
mov
jae
sub
cmp
mov
sbb
jl
es
lcall
ja
insb
stc
or
aaa
push
js
inc
sub
sub
cmpsb
bswap
xchg
sbb
jecxz
in
mov
adc
jnp
mov
popf
or
mov
adc
sbb
sbb
xlat
pop
bound
fnsave
jecxz
mov
fucomp
stc
fcomps
rol
xchg
mov
hlt
hlt
std
sahf
fldl
pop
imul
lea
or
add
push
dec
push
sti
push
dec
divl
adc
int
xor
pop
mov
mov
fiaddl
xchg
ss
fs
adc
js
andb
icebp
insb
cmp
fucomi
cmp
notl
dec
test
sbb
stos
mov
push
push
loope
ds
push
test
push
rorl
ret
adc
call
sbb
cmpsb
mov
flds
cmc
push
aas
cli
add
sub
ja,pn
push
popf
jmp
and
xlat
sub
js
clc
bound
ror
fs
out
lret
popa
jo
xlat
into
movsb
and
pop
mov
mov
pop
jnp
shlb
inc
loop
inc
pop
jge
cwtl
test
and
pop
xchg
dec
inc
stos
es
out
jmp
cmp
sti
mov
push
das
mov
cmc
jge
ljmp
iret
clc
pop
lea
mov
scas
loop
push
sbb
lock
dec
sahf
divl
imul
les
mov
sbb
pop
fisubrl
repnz
pusha
test
push
fiadds
mov
push
fadds
mov
pop
push
loop
dec
call
xor
test
ret
mov
mov
jmp
mov
es
adc
jecxz
lret
and
xor
push
negb
incb
cmpsb
cmp
xchg
sbb
or
mov
inc
xchg
pop
test
pop
shll
mov
aad
sbb
mov
pop
popf
push
movsb
sarb
jle
jns
push
addl
cmp
es
sub
popf
jp
lds
call
dec
in
imul
lods
rolb
iret
aam
mov
dec
adc
test
or
push
adc
xchg
mov
cld
pop
xor
mov
dec
jge
out
sti
pop
sub
outsb
pop
push
in
sahf
leave
insb
add
xlat
pop
loop
jp
xchg
subb
jmp
sbb
ret
dec
push
dec
cltd
cmp
xchg
lods
dec
and
cmpsl
pop
pop
repz
jnp
int
add
loop
in
pop
and
je
add
test
or
test
iret
adc
push
popa
inc
lods
push
dec
cmpsl
sbb
fstpt
pusha
sub
sbb
or
lock
or
lds
sub
popf
push
or
fisubl
bound
cld
test
sub
dec
sahf
arpl
inc
js
mov
inc
scas
inc
jmp
inc
cltd
inc
int3
xchg
dec
ja
push
mov
ret
or
pop
xor
inc
cmp
pop
movsb
lret
fnsave
mov
rol
cld
sti
jbe
insl
or
ret
fndisi(8087
mov
divl
outsl
sbb
push
sbb
mov
cmp
add
mov
sub
repz
sbb
fwait
jae
pop
mov
iret
sub
mov
cld
xchg
fmul
negb
or
push
in
sub
pushf
jae
scas
pushf
lods
cmpsb
jb
andl
popf
popa
push
mov
mov
and
mov
fwait
inc
xor
test
dec
lea
xchg
rcl
push
fpatan
sbb
jno
imul
xchg
jg
xor
test
popf
adc
mov
push
daa
cs
push
sub
arpl
mov
pop
and
inc
inc
lods
inc
lret
xchg
push
inc
ds
es
or
jecxz
add
insb
and
lcall
cmpb
adc
jne
or
xor
mov
gs
xchg
inc
xchg
mov
mov
or
mov
repz
into
mov
mov
jb
inc
or
fstps
fsubr
data16
push
andl
jecxz
fbstp
xor
pop
mov
jl,pn
in
test
sahf
int
es
or
fs
sub
mov
add
push
mov
mov
pop
icebp
sub
jmp
pop
mov
repnz
push
lret
push
mov
fdiv
inc
xor
sbb
jbe
rorl
mov
inc
sub
shl
stos
not
popa
mov
inc
fsubrs
mov
mov
mov
out
scas
jg
mov
add
mov
lret
outsb
mov
loopne
dec
popf
jae
mov
mov
adc
pop
cmp
ret
xchg
shll
test
jmp
jecxz
mov
leave
int
mov
add
lahf
adc
je
out
sbb
rorl
adc
add
or
notb
cmp
push
out
jnp
test
fisubl
push
lods
ret
add
ret
xchg
insl
jge
popf
mov
stc
dec
lret
lods
les
cmpsl
sub
xchg
fst
mov
mov
jg
movsl
pop
push
in
jge
mov
pop
jne
dec
fcmove
loopne
mov
int3
lods
cmpsl
into
or
sbb
hlt
in
and
jno
xor
jmp
pop
ret
jne
stos
adc
outsl
movsl
xor
push
jnp
hlt
lods
cmp
test
into
jle
sbb
cmp
dec
sbb
xchg
jns
andb
or
cld
inc
fcomip
or
fidivl
push
mov
outsl
cmp
mov
call
ljmp
ja
jb
dec
inc
pushl
das
imull
inc
test
in
dec
sub
lahf
ja
push
sbb
dec
push
jne
cmp
or
mov
pop
mov
jno
mov
data16
xchg
mov
out
add
scas
lcall
mov
out
sub
pop
rcrb
inc
push
dec
out
fdivrs
cmp
pop
adc
push
out
bound
loope
aaa
push
lahf
mov
adc
jbe
mov
xor
imul
fstl
push
xor
add
aas
daa
mov
mov
inc
movsb
icebp
ret
or
sub
popa
imul
xorps
shl
xchg
shrb
mov
pop
scas
shl
mov
mov
sub
in
ss
or
xchg
das
nop
xor
inc
jo
pop
ret
inc
in
and
xor
aam
jmp
aaa
cmpsl
stc
adc
xchg
mov
push
xchg
outsb
popf
sub
mov
cmp
mov
ret
sbb
repnz
adc
and
xor
inc
adc
inc
aad
dec
xor
mov
xchg
lret
xchg
mov
out
push
adc
enter
inc
ljmp
xor
mov
sbb
jno
or
hlt
mov
push
jmp
imul
outsb
cmp
dec
mov
cmp
es
cmpsl
lods
jno
sbb
jge
ja
dec
imul
push
test
popa
subl
shl
lcall
movsl
dec
rcr
imul
mov
jg
sub
fisubrl
pop
sti
pop
scas
lock
mov
inc
fdivs
pop
xor
mov
fwait
stos
inc
cs
loopne
clc
sbb
fucomp
mov
mov
and
sbb
dec
jp
test
fimull
dec
jecxz
out
test
push
jmp
jle
leave
enter
sub
pop
jmp
in
push
and
mov
ret
jle
ds
lock
add
fidivrl
cmc
cmp
mov
adc
or
je
xchg
or
xlat
pop
js
nop
mov
push
ljmp
out
and
cmp
mov
jo
mov
sub
les
sub
insl
sbb
pop
in
lret
dec
dec
sbb
xchg
sub
filds
jl
dec
loop
sahf
pop
fsubr
xchg
call
stos
sub
dec
and
sub
pusha
aas
loop
gs
pushf
je
or
inc
shrl
test
pushf
in
adc
cmc
fisubrl
sbb
sub
pop
xchg
stos
iret
jo
negb
jo
dec
cld
mov
les
cmp
or
add
jge
test
nop
daa
xor
scas
jns
push
xor
push
stos
xchg
push
repz
push
dec
in
lods
jg
outsb
add
hlt
dec
or
cmp
mov
fstpt
jne
push
inc
cli
xchg
xchg
outsb
mov
ficoml
fwait
repnz
pop
stc
mov
xor
into
push
xor
shr
mov
dec
icebp
clc
add
adc
aad
lods
outsl
mov
dec
ljmp
lock
stc
mov
pop
aam
adc
push
push
call
frstor
shll
xchg
sub
ljmp
sub
pop
sbb
mov
cmp
mov
mov
std
fldt
xor
inc
int
dec
jecxz
mov
fldenv
dec
jne
test
insb
sub
aad
clc
pop
fiaddl
ret
xor
pop
sahf
es
dec
shl
in
popf
cld
or
pop
and
pop
enter
stos
enterw
push
cmp
ss
jbe
aam
mov
inc
inc
outsb
or
imul
cld
sub
fstps
ds
fnsave
aam
mov
xchg
mov
ret
dec
xchg
sbb
inc
fcomps
or
xor
adc
cmp
mov
pop
or
mov
fistpll
or
push
mov
jnp
sub
pop
lea
in
scas
ss
and
push
dec
jae
inc
nop
inc
fimull
stos
popa
jg
sub
sbb
ret
pop
sbb
sub
cmp
xchg
cmp
je
fdivl
dec
xor
loope
add
test
pop
lahf
jne
or
ds
clc
push
fistpl
inc
mov
inc
pop
repnz
jle
jo
pop
xor
imul
enter
arpl
add
data16
push
xchg
cmp
repz
and
addb
jp
sbb
xor
test
clc
mov
sub
adc
shrb
stos
xor
xchg
mov
mov
cwtl
ret
dec
aaa
stos
jo
dec
add
and
mov
ret
outsb
mov
shlb
stc
ret
sarl
cmpb
aam
sbb
enter
test
cmpsl
sbb
loop
hlt
pop
sbb
nop
sub
mov
push
jmp
ljmp
mov
or
fcoml
aam
dec
dec
dec
rorl
repz
push
jmp
pop
lock
mov
mov
mov
leave
scas
fcompl
and
xchg
cwtl
test
sbbb
jecxz
imul
pop
adc
cmpl
in
mov
adc
es
pop
cs
sbb
pop
sbb
and
mov
dec
loope
inc
xchg
scas
xchg
arpl
cld
inc
ja
sbb
inc
nop
ljmp
mov
adc
inc
adc
lea
sub
aam
add
add
fldenv
aas
pop
das
fdivl
push
cltd
xchg
sub
arpl
mov
and
sahf
es
push
sub
add
push
jns
shlb
pop
cmc
lret
in
add
add
sbb
mov
mov
push
push
add
fsubrl
fidivl
aad
idivb
cmpsb
jge
sbb
fxch
jle
test
call
aas
mov
jno
call
or
hlt
mov
cs
xlat
mov
inc
mov
clc
insl
cmp
pop
fwait
and
cld
jnp
pop
lods
sbb
pop
xchg
sbb
mov
inc
aas
xchg
mov
pop
fisubs
add
jo
daa
fucomip
or
sub
adc
inc
test
es
cmp
mov
stc
test
mov
popa
or
push
loopne
and
cwtl
mov
mov
mov
lea
sub
xchg
or
sahf
jne
mulb
sbb
ret
repz
je
kxnorw
shrl
pop
arpl
or
rep
mov
mov
xchg
scas
jge
outsl
push
inc
push
or
scas
and
in
or
clc
add
out
or
cmp
int3
push
sbb
rol
cmp
jl
test
mov
adc
pop
fmul
negl
jl
into
sub
add
and
jmp
mov
movsb
xor
stc
adc
aad
ja
mov
adc
orl
popl
mov
add
stc
je
scas
js
sbb
adc
add
mov
js
mov
mov
push
loop
fstl
ret
data16
sbb
enter
in
popf
pop
jo
cli
xchg
ja
out
xor
mov
inc
mov
push
mov
dec
cs
fstpl
push
lock
cmpsb
lock
imulb
ficompl
loop
stos
in
js
fisubrs
test
sub
out
lea
mov
test
fistpl
mov
lret
lock
jle
in
inc
out
in
inc
cli
jmp
cmp
sbb
jns
mov
and
add
loopne
nop
je
xchg
pop
fldenv
push
stos
pop
xor
push
jns
xchg
jge
sbb
fiaddl
shl
mov
pop
fwait
sbb
mov
cmp
mov
dec
call
into
dec
fwait
or
push
jo
insl
psadbw
mov
ljmp
pushf
das
aam
mulb
push
cmp
and
jb
nop
push
popf
arpl
cld
ja
mov
pop
jle
sbb
dec
in
sti
mov
adc
lock
jne
push
push
or
xchg
imul
xor
cmpsb
cmpsl
js
pop
dec
or
je
pop
adc
lods
sub
xchg
repnz
pop
out
lods
mov
dec
and
mov
jmp
fcoms
push
adc
ds
out
sub
leave
inc
mov
je
inc
bound
xchg
popa
std
and
xor
loope
add
or
push
xchg
dec
xchg
aad
jmp
movsb
and
add
add
and
mov
add
fdivs
mov
pushf
add
sbb
add
into
je
popf
jne
pushf
and
inc
icebp
cmp
clc
xor
decl
mov
roll
sub
xor
fadds
sub
lds
cmpl
hlt
mov
sub
and
dec
add
fwait
sbb
aas
ds
push
jno
insb
je
push
fwait
mov
ficompl
dec
xor
test
inc
xorb
cmp
and
cli
mov
into
aam
iret
or
stos
addb
adc
cmp
mov
jb
or
cmpl
pop
jo
sbb
clc
subb
xlat
ljmp
push
or
aam
cltd
jle
jl
adcl
movl
cli
testb
rcrl
out
scas
pop
hlt
clts
shlb
add
mov
ret
out
jecxz
inc
int
ljmp
shlb
push
ljmp
xlat
xchg
jb
mov
stc
dec
sub
lcall
lea
cld
dec
mov
insl
push
pop
int3
fs
or
aas
js
ret
xchg
out
inc
dec
ds
jmp
cmpsb
sbb
dec
shlb
mov
pop
loope
and
icebp
fidivs
pop
xor
lcall
movsl
je
pop
bound
sbb
xchg
insl
gs
mov
pusha
cmp
add
out
and
inc
fnstcw
aas
dec
sub
xchg
ja
mov
cld
push
jmp
or
jne
sub
lret
sti
and
mov
pushf
pop
mov
xchg
js
jl
pop
out
cmpsl
or
ja
mov
dec
add
or
out
xchg
cmp
or
or
fnstcw
aam
addr16
cmpsl
sbb
out
inc
jg
or
xchg
cltd
arpl
gs
pop
stos
mov
mov
or
subl
cmc
fbstp
pushf
mov
pop
neg
mov
add
cmp
sbbl
in
sbb
xchg
add
ljmp
mov
xor
cmc
add
dec
sahf
push
movsb
xchg
pop
pop
sbb
and
negl
xchg
std
aas
stc
sbb
loop
iret
lock
jno
add
push
mov
loopne
sahf
add
imul
jae
add
mov
push
or
subl
aam
adc
xchg
movsl
cs
sub
jecxz
repnz
add
andb
inc
jb
fdivrl
psrad
sub
ds
add
outsl
negl
rclb
inc
imul
xchg
and
arpl
rclb
push
test
bound
jb
test
pusha
mov
hlt
out
or
cmp
and
inc
push
pusha
ret
pop
movsl
insl
xchg
push
leave
out
scas
and
and
rorl
push
cmp
out
ja
out
pushf
sbb
and
xchg
sbb
ret
insb
out
jo
shll
push
es
imul
fistps
fwait
xor
jnp
stc
lods
push
pop
adc
in
cmp
cmp
pop
push
jb
in
push
aaa
mov
jge
decl
inc
sahf
stos
inc
int3
in
out
inc
enter
outsb
add
sub
into
dec
mov
sub
dec
loopne
pushf
lea
mov
int3
out
js
loopne
pop
sub
es
fldl
lret
js
mov
jecxz
cmpsl
fisubl
mov
stos
in
lds
xchg
dec
sbb
dec
pop
and
sbb
out
inc
outsb
loope
mov
mov
mov
cmp
stos
popl
sub
pop
sub
add
je
mov
mov
movsl
mov
xor
adc
call
imul
mov
sbbl
adcl
and
inc
lret
xchg
xchg
std
xchg
sbb
ss
test
mov
addr16
sub
xor
pop
xchg
adcb
shrl
pop
arpl
adc
sbb
aad
nop
daa
lret
data16
mov
mov
shll
sete
sti
push
or
mov
adc
orl
mov
fldl2t
push
orl
inc
inc
jno
add
int3
mov
jge
andb
rclb
sub
xchg
pop
cmc
xchg
sub
std
xchg
dec
js
inc
nop
por
icebp
sahf
shll
pusha
mov
pop
test
push
ja
pop
jp
dec
xchg
adc
push
fwait
sahf
fisubrs
loope
xor
add
jmp
jns
test
push
imul
addb
mov
pop
cmp
rcrl
pop
or
cld
movsb
mov
sbb
std
out
test
aas
shll
jno
out
cmp
and
lret
and
cmp
push
jo
in
mov
and
adc
mov
loope
into
test
sub
jge
inc
or
jbe
push
sub
jg
outsl
and
dec
nopl
push
lret
addl
cmp
mov
repnz
fwait
mov
adc
adc
sub
fiaddl
cmpb
mov
scas
sbb
bound
cmp
push
sbb
insl
xor
aam
pop
xchg
addr16
in
dec
imul
xchg
mov
subw
xor
in
and
xchg
push
mov
repnz
pop
sbb
pusha
mov
clc
adc
stos
cmp
pop
add
push
das
sub
das
repnz
shr
dec
cmpsb
pop
push
aaa
mov
adc
repz
mov
imul
add
nop
inc
outsb
jl
je
and
call
or
fwait
aam
mov
aaa
stos
cmp
aam
inc
dec
iret
mov
adc
cli
pop
push
stc
inc
scas
jmp
lahf
mov
mov
sbb
mov
mov
stos
push
pop
push
std
dec
lods
and
mov
das
lods
xchg
mov
test
test
daa
call
cmpsb
cmp
xchg
loop
xchg
ret
mov
cmc
out
dec
sub
rorb
adc
jae
aas
ja
cmp
inc
out
dec
test
icebp
mov
cmc
push
push
add
enter
frstor
add
mov
out
xchg
in
pop
mov
inc
in
fwait
inc
or
loopne
leave
push
push
mov
ja
push
and
rolb
lds
ja
out
sti
cli
xchg
pop
push
add
inc
test
bound
mov
out
ss
mov
or
jne
int
sti
jnp
in
inc
int3
mov
inc
lds
stc
pop
cmp
sti
fdivl
lds
test
popf
stc
dec
call
or
lcall
jle
ficoms
jp
pop
xor
mov
push
mov
sub
fsubl
ljmp
xchg
mov
add
mov
push
int3
cmp
stc
or
xchg
adc
adc
pop
and
push
cld
cld
orb
fadds
dec
pop
jmp
or
es
stos
jmp
add
mov
cmp
outsb
popa
xchg
add
hlt
ret
dec
xor
or
xchg
mov
lea
fmul
out
fimull
mov
enter
lret
pop
js
test
push
sub
addr16
inc
mov
inc
sbb
or
cli
cmpsb
adc
xchg
lahf
fists
outsb
mov
dec
xchg
repnz
aas
and
ljmp
call
cs
addb
mov
xchg
xchg
push
test
loop
cwtl
dec
sub
aad
lcall
call
kmovb
xlat
addr16
push
jge
add
fmulp
xchg
stos
push
pushf
lcall
fisubl
lcall
mov
jg
mov
mov
rcrb
cmp
jl
sbb
push
addl
lods
inc
inc
add
mov
aam
sub
xlat
sub
sub
add
test
int
jmp
mov
push
jb
xlat
aaa
cmp
mov
xchg
outsb
dec
loop
cmp
pushf
add
and
cld
push
outsb
ds
std
cltd
imul
add
test
nop
mov
and
stos
dec
xchg
mov
push
aam
and
test
jp
push
lcall
inc
sub
outsb
cmp
jmp
ret
ret
sub
ficompl
sbb
jae
in
jp
cmp
push
jp
std
jo
cmpsb
jecxz
mov
add
shrl
sbb
std
dec
outsb
dec
cmp
jecxz
or
xchg
sbb
xchg
seta
ret
cmc
call
std
pop
out
sub
sub
jo
stos
sub
les
test
dec
jle
xchg
cmpsl
je
cwtl
xlat
pop
pushf
out
sbb
jns
stos
ret
hlt
jmp
lea
es
or
dec
popa
pushw
adcl
dec
push
push
ljmp
jno
or
out
sub
pop
nop
fisubrs
cli
lcall
sarb
mov
pop
sbb
dec
pop
mov
outsb
test
lcall
inc
push
mov
mov
push
outsb
ffreep
enter
or
aas
pop
push
addr16
pusha
jp
mov
das
clc
mov
dec
lret
pop
jbe
enter
in
or
inc
loope
fistpl
cmp
sbb
sbb
jb
lret
xchg
jne
test
sub
xchg
sti
push
mov
nop
das
dec
rcr
in
add
add
pushf
jb
rolb
movsl
mov
xor
push
adc
scas
and
cli
scas
jle
push
sbb
dec
jge
jl
fcmovbe
add
pop
std
pushf
jge
sub
pop
int3
add
push
push
clc
insb
out
in
ret
adc
fadd
xor
xlat
in
filds
filds
push
push
push
imul
adcb
xchg
data16
push
ds
outsl
sbb
dec
fwait
lahf
decb
rolb
lcall
mov
std
loop
ret
xor
jl
mov
js
test
mov
adc
xor
jp
mov
lods
cld
inc
mov
push
push
test
sub
sti
xchg
lcall
push
pop
push
mov
xor
addl
sbb
sahf
push
icebp
fnstenv
mov
xor
testl
xlat
mov
xor
and
fsubrp
dec
and
xor
subb
xchg
jne
shll
int3
jno
or
mov
lods
mov
shrb
mov
scas
mov
lahf
jo
fists
lret
xchg
shl
dec
xchg
call
inc
inc
dec
push
pop
sti
enter
mov
inc
flds
fs
mov
clc
xchg
jmp
lock
out
or
or
stos
jle
call
xchg
lret
ja
adc
icebp
push
push
fcoml
mov
sub
das
sbb
adc
xor
dec
je
or
insb
inc
mov
push
into
jne
out
inc
xchg
outsb
cld
cwtl
outsb
roll
test
jl
pop
mov
mov
imul
cmp
pop
push
ljmp
aam
lds
mov
xchg
mov
xchg
sub
xchg
outsb
aam
mov
push
loopne
mov
aad
es
mov
movl
leave
inc
in
adc
push
jmp
sbb
xchg
shlb
dec
jg
popf
stos
jno
shl
movsl
push
mov
repz
in
loopne
test
mov
xor
and
jge
adc
and
push
add
sbb
cmpl
xchg
pop
aaa
into
inc
add
jno
jl
xchg
mov
arpl
bound
xchg
jo
push
repnz
jmp
adc
mov
or
je
xchg
xor
mov
jmp
cs
insb
mov
std
jnp
imul
mov
jmp
inc
inc
inc
mov
dec
pop
test
mov
ds
xor
xlat
xorb
mov
popa
xchg
daa
add
repz
xchg
add
lcall
popa
in
jns
lcall
das
cmpsb
and
adc
mov
jmp
xor
addr16
hlt
or
jb
andb
dec
push
or
add
push
push
xchg
imul
inc
fst
add
push
mov
lahf
xlat
rolb
mov
dec
dec
pop
int
lea
jl
cmp
xor
add
ficoms
inc
mov
adc
outsl
mov
or
or
movsb
or
cld
in
cltd
call
sbbl
xchg
add
adc
testl
bound
pop
xor
cs
xlat
repz
sti
mov
aam
std
ret
xchg
jno
push
xchg
es
dec
mov
mov
push
jb
into
sbb
hlt
dec
mov
mov
xor
and
xor
fstl
cmpl
out
sbb
adc
xchg
inc
lret
bound
jle
loope
bound
cmp
pop
lea
add
repnz
lods
out
fbld
push
or
add
fdivr
scas
je
mov
ficomps
lods
dec
or
les
or
ret
sbb
mov
or
fsubs
call
gs
and
into
sub
mov
push
adcb
repnz
out
lahf
xchg
mov
jecxz
das
pop
insl
add
pop
ss
sub
sbb
and
repnz
pop
mov
bnd
in
cmp
mov
aaa
mov
and
push
pop
cli
xchg
test
icebp
xchg
inc
sbb
das
lods
jo
ljmp
insl
add
fbstp
mov
mov
aam
pop
and
jg
cld
hlt
pop
inc
add
mov
in
shll
int3
out
sub
or
sbb
and
jbe
mov
aas
pushf
inc
inc
or
ds
lods
inc
sub
dec
jae
dec
in
ss
scas
out
jbe
pusha
push
or
pop
data16
or
dec
in
int
incb
inc
push
movsb
mov
xlat
rcll
mov
inc
xlat
call
adc
in
cmc
test
es
call
adc
sbb
sbb
repnz
cmp
adc
push
cltd
dec
or
sahf
sub
pop
dec
das
xchg
shr
mov
jle
push
lret
data16
or
pop
out
sbb
xchg
mov
xchg
and
jp
mov
icebp
leave
es
and
mov
xchg
aas
inc
iret
out
xor
sti
int3
sbb
jbe
push
out
fwait
js
inc
rclb
sahf
cmp
mov
inc
incl
push
push
adc
mov
mov
push
or
adc
or
outsl
pushf
icebp
sub
add
es
loope
push
ljmp
testb
popa
orl
aad
jle
popf
lods
jge
pusha
testl
sbb
fs
xor
mov
lds
jp
cmp
pop
inc
sbb
cmovs
xchg
mov
mull
sbb
and
mull
sarl
stos
js,pt
cld
or
fidivrl
icebp
es
dec
sub
inc
sub
fwait
add
adc
clc
ljmp
stos
mov
sbb
scas
insb
xchg
sbb
inc
sub
jbe
or
shrb
sbb
jbe
xor
lods
cmp
lea
out
mov
cmp
push
imul
inc
xchg
sub
add
add
shl
push
xor
lret
popf
xor
pop
popa
or
and
fwait
pop
inc
bound
xor
sbb
jno
jp
inc
lds
dec
mov
cmp
push
xchg
sbb
js
pop
xor
sub
push
jno
insb
loopne
out
les
dec
jecxz
add
movsb
pop
jne
pop
jbe
cli
cli
cmp
rcrb
lcall
xor
xor
push
out
call
inc
mov
sub
jbe
dec
jns
mov
jo
push
sub
popf
loopne
xchg
shl
call
sti
jno
lods
pop
inc
fisttps
jnp
jle
shlb
lahf
cs
push
jb
arpl
outsl
add
pop
arpl
enter
sub
add
stos
inc
jmp
test
bnd
fwait
mov
jae
pop
data16
or
fs
mov
bound
pop
fbld
cmp
mov
nop
mov
ficoms
mov
and
test
sub
ds
ja
loop
mov
cmpsb
jae
or
jae
mov
add
je
or
sub
cmp
js
xchg
mov
addr16
mov
shr
or
into
pusha
sub
cmpsb
mov
daa
mov
sub
ljmp
pop
ficomps
mov
xor
cmp
fldl
loop
mov
mov
xchg
lods
add
mov
scas
ret
insl
xor
call
mov
cmp
xorb
sbb
into
gs
cmp
mov
in
ret
cmp
adc
sahf
and
pop
sti
scas
sbb
and
jnp
loopne
rcl
adc
push
cmp
lods
push
call
jp
in
stos
mov
fdivrl
jno
push
insb
inc
push
lods
pop
cmpsb
inc
es
inc
xor
fldcw
push
insl
mov
fcomps
sub
lahf
mov
rorb
loope
ljmp
punpcklbw
or
dec
xchg
add
xor
cs
sbb
dec
in
shlb
int
rclb
mov
adc
add
lds
jecxz
idivl
rcrl
ja
sbb
xor
add
xchg
push
jbe
gs
popa
mov
bound
cwtl
stos
lods
push
push
or
int
xor
stc
or
lods
pop
lcall
dec
cmp
add
mov
out
jae
jae
pop
hlt
pop
xchg
subl
outsb
adc
jecxz
dec
mov
call
mov
imul
cmp
add
ss
popa
ficomps
outsl
daa
inc
pop
sub
lods
mov
xor
sbb
mov
push
sub
popa
in
sbb
sbb
test
push
mov
push
test
xchg
es
or
bound
mov
mov
clc
lds
dec
in
or
adc
aaa
dec
in
mov
imul
fs
sub
test
cmp
fiaddl
xor
data16
lret
and
loope
cmp
popf
sbb
aad
cmp
insb
mov
inc
pushf
or
mov
xlat
outsl
sub
pop
dec
mov
je
in
sub
iret
iretw
mov
mov
cltd
mov
dec
or
sub
mov
mov
imul
sbb
push
in
mov
jnp
mov
movsl
dec
dec
stos
inc
loop
aad
mov
leave
pusha
ret
and
rorl
loop
cmpsl
or
fldcw
incl
test
cmp
mov
mov
pop
outsl
push
sbb
bound
sbb
gs
outsb
add
pop
add
test
cmp
push
fcoml
xchg
fsubrp
negl
xchg
push
pop
mov
sub
out
cmc
inc
pop
aam
push
les
icebp
pop
jge
or
movntps
adc
dec
ds
xchg
test
imul
adc
js
jne
lret
push
sti
clc
imul
cmp
jp
pop
sub
sti
and
out
mov
jmp
jb
mov
pop
mov
push
lret
xor
gs
push
inc
faddl
loopnew
mov
sbb
into
rcl
cld
xor
stos
dec
dec
adc
aas
outsb
outsb
jge
loope
xor
fiaddl
add
jnp
or
push
xlat
leave
and
int
andl
shl
rorb
loopne
adc
dec
sbb
test
movsb
inc
popa
leave
test
mov
es
dec
imul
and
jbe
das
cmc
pop
ja
inc
cmc
adc
out
dec
dec
add
mov
jecxz
cmp
jne
or
lea
cmp
pop
data16
mov
rorl
adc
mov
test
push
sub
xor
push
dec
dec
pop
dec
and
fst
pushf
xor
sarl
pusha
cmp
roll
push
dec
dec
jo
add
mov
jae
or
imul
or
push
test
xor
call
in
into
dec
dec
jo
lock
test
test
dec
out
mov
dec
pusha
push
pop
jo
mov
fstpt
stc
mov
inc
or
cmpb
dec
test
and
pop
hlt
inc
xlat
mov
cmp
push
inc
lods
nop
nop
in
cltd
idivb
andl
popa
xor
xchg
sub
andb
test
or
loope
or
jge
aaa
scas
mov
mov
out
jnp
push
fildl
add
mov
mov
divl
out
std
lahf
aaa
push
cmp
push
add
jl
push
xchg
add
popf
je
imul
sub
push
out
lcall
pop
push
dec
fldt
or
inc
pop
mov
dec
je
push
sub
icebp
mov
aad
stc
push
pop
nop
in
push
sub
or
sbb
xchg
daa
push
ret
pop
jae
add
pop
sahf
sarb
inc
in
cli
int
insl
mov
test
cmp
push
adc
sub
inc
cmp
push
cltd
cli
jnp
xchg
out
xchg
push
faddl
clc
or
movsl
lea
fldcw
xor
and
sbb
push
fdivp
outsb
insb
out
adc
es
arpl
js
jp
push
jl
xchg
stos
and
cmc
pop
adc
ja
jl
into
sbb
fistl
loope
and
test
mov
push
orl
imul
adc
or
movsb
and
pop
push
in
fwait
cmp
cmpsb
cmp
imul
fsubrl
mov
mov
pop
scas
cmp
outsb
in
test
cwtl
rorl
sti
pop
cmpsb
xor
loopne
hlt
dec
out
clc
jae
test
jae
and
mov
lret
adc
insb
mov
push
xor
dec
mov
pop
sti
fcmovbe
xor
outsb
fiadds
dec
out
shlb
jmp
pop
add
mov
xchg
sub
decl
xchg
or
cltd
out
repz
pop
mov
lods
aad
and
cmpsb
or
dec
repz
mov
or
mov
xchg
sub
jg
dec
jmp
jecxz
mov
jb
cmp
dec
call
or
movsl
cwtl
and
loope
movsb
jb
xchg
push
ljmp
fnstcw
sbb
xchg
jbe
test
leave
cmp
mov
ret
inc
mov
jns
movsb
outsl
dec
arpl
ret
test
jno
jae
jmp
adcb
repnz
std
loope
sub
out
ret
decl
ds
js
fcomip
aad
rcrb
push
int3
mov
gs
addr16
xchg
popf
repnz
jb
lret
mov
sbbl
adc
dec
arpl
sub
cld
and
pop
jo
dec
or
or
cwtl
xchg
mov
mov
jp
inc
cmp
mov
out
add
cmc
popa
push
stc
push
inc
mov
stos
inc
out
adc
loope
jae
lcall
cmp
lea
inc
subb
scas
andb
or
call
test
and
out
enter
add
fwait
mov
pop
movb
daa
mov
call
loope
dec
xor
bound
ljmp
cmp
and
insl
or
movsl
xchg
sub
out
mov
ljmp
hlt
jg
enter
and
and
aam
ficoml
mov
rorl
and
mov
mov
mov
lds
sarl
cli
xchg
mov
pop
sbb
cmpsb
or
fadds
int
jp
push
add
mov
ret
sbbb
cmpsb
pushf
addl
jl
dec
mov
jmp
sarb
xchg
sub
mov
movb
sub
call
fisubs
ret
mov
xor
dec
push
jl
pop
scas
or
cmc
mov
adc
xor
mov
nop
mov
jge
repnz
mov
loopne
pop
lods
xor
sahf
add
xchg
mov
scas
xchg
push
jp
repz
imul
fmull
pop
mov
pop
pop
inc
fistl
mov
push
fcmovu
mov
ret
jb
iret
fsubrs
rol
aas
stos
dec
dec
int3
loop
and
push
fbstp
sub
lcall
jne
inc
shll
adc
mov
in
mov
popa
or
dec
sbb
es
arpl
xchg
mov
and
jae
test
pop
movsb
test
aam
movsl
and
dec
mov
sbb
lea
mov
lods
sub
lods
cmp
push
lods
ljmp
jno
sub
out
fsubrs
test
scas
testb
out
lahf
test
or
or
leave
add
xchg
insl
fidivs
or
pop
cmpsl
xor
mov
cmc
mulb
addl
inc
inc
popf
inc
push
jecxz
ss
xchg
add
subl
dec
or
lret
push
mov
stos
lea
mov
lods
jo
cmp
loope
lock
mov
fucomip
in
jge
dec
in
mov
xchg
cltd
push
in
mov
leave
lcall
daa
jmp
push
dec
lcall
int
jge
jl
subl
jge
sbb
repnz
pop
rcrb
push
inc
xor
out
loopne
push
sbb
inc
pusha
push
mov
cmp
mov
add
or
sub
fwait
dec
scas
cmpl
jo
cmp
int
pop
mov
xchg
add
dec
xor
subl
pop
or
adc
imul
sbb
movsb
push
add
sbb
in
rorl
mov
lahf
aam
arpl
push
int3
loopne
in
or
and
mov
jbe
cmc
cmp
push
xchg
jnp
inc
inc
cmpsb
stos
in
pop
lock
out
dec
sub
push
ljmp
and
movsb
sub
movl
pop
add
fstpt
into
frstor
jns
fbstp
push
scas
dec
xor
cmpl
je
arpl
in
xor
insl
jns
fldenvs
xchg
mov
repz
mov
jmp
outsl
add
mov
sahf
sub
lods
loopne
cld
pop
test
mov
jmp
out
ret
loope
into
xor
push
xchg
push
mov
inc
scas
or
outsl
daa
aaa
push
into
addl
lds
mov
fwait
test
ja
sbbb
movsb
jecxz
jp
cmp
push
pusha
ss
mov
jmp
inc
xchg
sbb
and
fstp
ss
in
adcb
orb
lds
in
out
inc
sbb
popa
dec
test
push
xchg
add
jno
mov
push
sub
push
sub
in
push
jbe
pop
call
and
inc
push
ljmp
loope
xor
in
shll
mov
jns
cltd
pop
xchg
btc
cmpb
jge
adc
lcall
inc
mov
loope
dec
pop
xlat
pop
adc
mov
xchg
jp
push
xor
dec
sbb
in
push
and
mov
dec
in
hlt
push
cs
cmp
iret
outsb
out
adc
aas
mov
pop
mov
push
out
pop
xchg
in
fbstp
xchg
idivl
push
fnstcw
fucomp
cltd
mov
push
je
fwait
mov
and
inc
pop
cmp
sbb
enter
ljmp
mov
add
incb
adc
je
pusha
lods
xor
scas
sbb
mov
jg
cmpsl
adc
pop
mov
ja
cmp
outsl
xchg
ficompl
mov
and
lret
jg
cmp
in
sbb
jbe
cmp
push
repz
pop
mov
mov
mov
inc
les
lods
add
aad
int
pusha
mov
or
inc
dec
in
and
sbb
pushf
out
lods
push
dec
xchg
pop
jb
fldenv
mov
les
jle
push
mov
jl
jno
inc
inc
stos
and
inc
or
jle
in
mov
add
jbe
cwtl
sub
push
push
loopne
fisubrs
mov
cmp
andb
fs
mov
add
imul
xchg
dec
arpl
fcomi
lods
mov
adc
jl
or
sub
push
xchg
jp
cmp
hlt
add
pop
mov
pop
repz
notb
shl
ja
daa
sbb
push
and
imul
jecxz
fistpll
repnz
fpatan
out
xchg
test
mov
scas
out
mov
sub
orb
andb
icebp
pop
stos
sub
scas
sub
push
or
pop
xchg
sub
or
cmp
mov
lea
aam
lock
mov
sbb
dec
lahf
jge
ljmp
mov
fistpll
inc
leave
sbb
data16
fnsave
cli
xchg
ljmp
add
pushf
dec
shrl
fisubl
pusha
repz
popf
add
sub
jno
dec
mov
inc
shlb
ret
pop
lds
push
imul
sub
mov
decb
dec
das
pop
jne
test
mov
sar
pop
clc
and
loop
test
mov
mov
cld
push
lods
stc
mov
jae
lods
mov
scas
popf
lock
leave
jns
testl
pop
dec
or
push
dec
aam
lcall
cmp
popa
cld
inc
xor
pop
psubsw
imul
out
leave
xor
mov
jle
pop
push
lret
lds
pushf
fdivrp
push
sbb
inc
jb
xchg
in
les
jmp
jecxz
push
or
cld
pop
pushf
cli
sbb
test
jecxz
lea
adc
adcl
clc
pop
repnz
dec
pop
ret
xor
push
sub
and
iret
data16
pushf
mov
pop
jl
roll
les
jb
hlt
aas
xchg
leave
xlat
jae
movsb
bnd
lds
sbb
adc
cmp
jne
movsl
cld
scas
in
pop
aam
rolb
mov
push
sub
or
jno
fwait
xchg
ja
lea
inc
popa
cmp
or
stos
cmp
ds
gs
outsb
xchg
test
lcall
je
inc
push
mulb
adc
fs
outsl
mov
sbb
lods
add
adc
sti
mov
mov
lods
fmul
into
mov
dec
pop
cmp
mov
jecxz
sbb
stc
and
push
add
jne
imul
push
add
push
pop
loopne
jl
cmp
and
imul
xchg
mov
jb
in
lock
sub
mov
rcrb
call
test
and
fnstcw
imul
dec
mov
fwait
inc
sbb
testl
out
shrb
dec
lcall
mov
mov
sbb
xor
pop
push
out
xor
shlb
cmp
jp
pop
push
jae
adc
in
mov
and
pop
shlb
inc
sub
sbb
scas
sbb
sub
xchg
mov
or
sbb
push
sub
movsl
dec
jnp
fldt
loope
fcomps
mov
sub
sbb
inc
ret
or
jae
vcvtps2pd
jle
cmp
cmpsl
dec
sbb
into
inc
mov
lods
add
or
es
pop
inc
and
arpl
sub
in
xchg
cmpsl
xchg
or
jle
fistpll
outsl
or
stos
dec
out
dec
sbb
seta
cmpsl
and
fucom
dec
cwtl
dec
decb
popa
in
bound
mov
mov
cmp
ja
hlt
mov
hlt
jg
mul
push
sub
inc
lods
pop
dec
jbe
ret
in
adc
or
pop
hlt
adc
and
add
fucomp
or
mov
insb
push
cmc
dec
test
jnp
sahf
xchg
push
stos
pusha
out
les
push
iret
nop
inc
or
in
push
sbb
jp
int3
idivb
aaa
insl
push
rcrb
adcb
mov
into
std
fistl
adcl
mov
cmp
es
mov
inc
int
mov
shr
in
call
das
lcall
lds
ds
push
movsl
cs
mov
cmp
inc
lret
adcb
xchg
cmp
sbbb
or
pop
leave
stos
push
push
call
mov
xchg
jcxz
or
mov
add
popf
hlt
ja
mov
popa
jge
sbb
xchg
sub
ds
xor
pop
mov
xchg
gs
push
or
pop
push
lret
pop
into
out
scas
dec
mov
stos
das
mov
jnp
add
push
xor
dec
or
sbb
popf
cmp
cmp
or
mov
xor
pop
cltd
jg
pop
xor
dec
push
inc
xchg
mov
stos
loop
or
sbb
pop
cmp
sub
nop
xchg
testl
std
push
cmp
inc
lods
add
rclb
insl
hlt
iret
and
dec
cmp
orl
lahf
notl
sahf
xchg
outsb
mov
push
cmc
pop
test
lret
nop
and
mov
int3
jnp
xlat
add
mov
mov
sbbl
jecxz
mov
cwtl
add
xchg
mov
in
movsb
sub
incl
mov
outsl
push
fstps
sub
enter
test
mov
pusha
adc
mov
inc
shrb
push
mov
push
loope
fidivl
inc
mov
mov
dec
test
mov
ds
jbe
xchg
call
dec
aam
add
mov
and
pop
sti
jae
jno
fistps
add
rcrl
jo
mov
nop
aam
cld
add
jno
dec
pop
xchg
es
xchg
movsb
inc
and
into
iret
daa
in
lea
mov
push
sub
cmp
mov
fadds
push
clc
push
pop
rcll
ficoms
and
insb
jle
inc
lcall
fmull
lahf
or
lcall
mov
add
insl
es
lcall
push
fmuls
sbb
jnp
pop
stos
shrl
lds
push
lods
xchg
repnz
xchg
mov
sbb
push
in
clc
mov
xlat
insl
aaa
push
pushf
mov
sub
outsl
jnp
sub
xchg
fs
in
sbb
xlat
mov
cmp
add
gs
inc
insb
add
adc
xor
adc
test
scas
icebp
mov
ficoml
mov
stos
fidivs
dec
mov
add
and
lds
loopne
out
dec
sbbl
pop
jl
enter
jo
mulb
cwtl
cmp
mov
repz
das
mov
ficoml
stos
or
pop
scas
insb
pushf
leave
jecxz
or
testl
push
sbb
sub
hlt
js
lea
xchg
mov
out
mov
std
insl
clc
sbb
lea
or
add
subl
cmp
pop
ds
sub
outsb
fwait
mov
lea
test
push
xor
xorl
mov
daa
scas
jo
inc
sub
fstl
mov
fwait
push
inc
stos
xchg
xor
icebp
repz
cli
jns
pop
inc
fisttpll
xchg
dec
inc
stos
mov
aas
aad
mov
pop
mov
out
cmp
aas
les
cmc
push
xchg
je
pop
and
mov
lods
ljmp
xchg
into
jl
gs
mov
cmp
clc
lds
sub
test
out
lret
outsl
in
mov
les
loop
cmpsl
mov
decl
jae
and
call
out
test
dec
sbb
push
xor
das
into
call
mov
jmp
xchg
sbb
lods
das
out
jmp
lret
icebp
push
pushf
mov
fnsave
lcall
add
aam
add
in
dec
and
dec
outsb
sarb
aas
sbb
mov
inc
dec
bound
xlat
xchg
aaa
or
adc
lods
push
cmp
jecxz
cmp
inc
lret
pop
xor
mov
xchg
sbb
loope
int
in
inc
fadds
dec
xchg
pop
pop
inc
insl
pop
stos
pop
ja
dec
shlb
sub
xchg
mov
rorb
add
lea
std
inc
mov
push
cwtl
and
mov
inc
into
daa
outsl
jge
lahf
adcb
jae
xchg
sub
dec
std
std
movsb
cmp
and
push
and
out
cmpsl
ja
icebp
xchg
mov
js
out
dec
data16
pop
ja
add
inc
bound
inc
sbb
and
test
dec
xchg
popf
xor
orl
enter
jecxz
and
add
sub
push
or
int
and
inc
fcomps
jp
scas
xor
in
lods
jmp
jnp
and
xchg
xchg
pop
dec
add
sarl
aad
pop
dec
push
xor
xor
enter
fwait
add
or
push
mov
adc
test
dec
repz
push
ret
and
pop
cwtl
cmp
xchg
jg
pushf
repz
cmp
sbb
das
ss
cmp
pop
lods
data16
push
stos
cli
orb
pusha
ja
push
xor
bnd
push
cmpsl
cli
or
pop
sbb
mov
out
pop
hlt
jb
pushl
jmp
pushf
dec
popf
rol
pop
and
aad
cs
push
test
rcl
repz
xchg
sbb
jnp
xchg
push
xlat
dec
loop
mov
in
and
jae
xchg
push
in
jecxz
les
or
push
test
sti
shlb
shrl
mov
and
mov
cli
out
rcrl
adc
in
sbb
adc
int3
mov
inc
test
mov
xchg
in
sbb
iret
cmp
test
mov
icebp
movsl
repnz
and
xlat
data16
push
out
imul
push
push
hlt
xor
xor
sub
testl
cltd
popa
pop
lret
push
rolb
fbstp
pop
cmpsl
cmp
imul
cwtl
repz
xchg
add
mov
mov
jb
das
mov
jbe
and
imul
jnp
fbld
addb
add
or
push
stos
pop
mov
das
xor
shlb
xchg
sub
cmpl
test
xor
pushf
cmp
shr
or
jno
sbb
ret
dec
sub
jae
inc
pop
add
mov
cmp
stos
dec
es
xchg
pushf
inc
xchg
mov
test
jbe
add
arpl
es
repnz
push
dec
icebp
xchg
cmpsl
xchg
pop
xchg
mov
pop
jno
popl
cltd
leave
pop
inc
sub
stc
int
push
xor
fildl
and
scas
clc
mov
js
dec
mov
jo
cmpsb
xchg
pop
cmp
movsb
cmp
popa
out
pop
pop
cwtl
jbe
cltd
ds
das
aas
data16
ds
gs
mov
mov
inc
cmpsb
idiv
shll
das
add
lret
lcall
jo
in
ljmp
xor
mov
sub
dec
pop
repnz
cmp
lahf
push
shlb
in
push
aam
jns
fidivs
sti
cld
lret
push
xor
inc
stc
push
mov
mov
sub
je
inc
xchg
loop
clc
mov
je
and
dec
push
rcrl
add
mov
ljmp
sbb
push
in
loopne
mov
loop
cmp
ja
lcall
lds
in
idivl
cmp
add
cmpsb
push
cmc
mov
data16
push
and
jb
dec
push
xchg
inc
aas
jne
imul
mov
std
inc
pop
mov
int3
das
xor
hlt
dec
xor
jmp
imul
mov
cmpl
sti
mov
adc
sbb
stos
dec
lods
inc
jl
ss
in
cmp
cmp
push
shll
push
outsb
pop
fstps
add
mov
adc
and
lret
jnp
add
in
insb
cmc
sbb
dec
mov
adc
jecxz
adc
fmul
cmp
sbb
mov
mov
and
pop
cli
inc
inc
scas
jb
pop
ficomps
pop
stos
xchg
out
fcmove
ror
mov
insb
das
pop
inc
pop
aad
outsb
jl
int3
rsqrtps
cmp
aad
jae
popf
out
iret
nop
lahf
ss
adc
out
and
adc
lock
inc
xchg
xor
cmp
pop
cld
xchg
dec
mov
cmp
stos
popf
ss
adc
nop
jnp
xchg
and
mov
jae
enter
sahf
and
adc
sahf
call
pop
test
andb
mov
cmpsl
push
xchg
cwtl
pop
div
mov
add
mov
movsl
and
mov
insl
cmp
je
pop
call
inc
clc
imul
por
inc
xor
sub
adc
jge
and
loopne
cmp
xchg
subl
mov
dec
lock
fstps
xchg
lea
aam
push
scas
cmp
popa
ds
lahf
fisttpl
push
enter
jns,pt
lret
sub
repnz
scas
dec
push
lods
icebp
stc
inc
and
adc
adc
mov
jl
mov
aaa
stc
mov
jge
jbe
out
shrl
jecxz
pop
cmp
pop
out
jg
push
ljmp
jno
dec
rorb
add
mov
xor
add
mov
imul
xor
incb
popa
and
insl
sub
into
adcb
in
das
mov
dec
pop
loope
mov
nop
data16
sbb
mov
lcall
std
or
imul
xchg
fisubs
inc
xchg
fidivrl
xor
and
mov
mov
aas
imul
lcall
push
or
jge
out
hlt
fs
xchg
sub
inc
xlat
mov
lods
ljmp
sbb
ja
dec
cmp
jno
shl
jnp
adc
rcrb
ffree
inc
loop
callw
dec
add
sarb
insb
dec
call
outsb
jl
out
movsl
in
mov
cmpsb
addr16
xchg
inc
sbb
arpl
sbb
mov
push
js
xor
icebp
xchg
add
mov
adc
fiadds
sbb
leave
je
mov
adc
xor
inc
clc
pop
js
int
adcl
out
add
sbb
scas
les
mov
insb
push
loop
int
jno
pop
jecxz
pusha
and
repz
adc
mov
cltd
loopne
rcrb
fcomip
lret
pushf
pop
addr16
mov
idiv
test
cli
adc
daa
or
lods
inc
xlat
mov
cmpsb
xchg
add
or
hlt
mov
cmc
mov
push
cmpsb
mov
lret
insb
add
add
mov
jae
gs
or
gs
jp
push
pop
ss
insb
movsl
cmp
lea
lock
je
ds
aam
xchg
sahf
sub
ret
xchg
mov
mov
fadd
xchg
mov
aas
add
pop
in
adc
clc
sahf
sti
popf
ljmp
mov
in
fcomps
dec
sahf
ret
outsb
lock
dec
dec
adc
enter
jo
xchg
scas
mov
stos
das
sub
inc
fdivr
sbbl
sti
cmpsl
insb
mov
xchg
and
rorl
stc
sbb
pop
rol
ret
sarb
pop
rol
adc
mov
sahf
xor
aam
aas
mov
lahf
out
xchg
lcall
push
jmp
jle
mov
lds
xchg
inc
push
fldz
xor
jge
jmp
mov
dec
repz
fsubrs
sbb
push
cli
inc
sub
xchg
in
pushf
mov
arpl
or
andl
inc
cmp
fistpll
xchg
mov
inc
pop
inc
xlat
es
lods
lahf
inc
pop
push
sbb
and
jl
dec
mov
imul
and
das
mov
sub
lods
mov
inc
push
mov
test
pop
cltd
xor
leave
adc
xchg
pop
inc
push
out
jge
mov
cmpsb
xchg
sbb
cmpsb
mov
adc
xchg
mov
hlt
xchg
mov
cmpsb
cmp
cmp
les
pop
push
leave
push
cwtl
loop
inc
and
pop
popa
jl
sub
pop
xchg
fbld
dec
cs
xor
aaa
loope
ljmp
pop
push
shrl
dec
aad
jo
jbe
mov
cmp
repnz
popl
jl
or
mov
adc
int3
test
rcrb
mov
sub
jns
xor
test
inc
xor
loop
adc
add
push
shlb
mov
pusha
sbb
ds
dec
or
je
pop
test
cmp
cwtl
push
iret
fwait
mov
sub
lods
pusha
rol
popa
into
dec
dec
sbb
aaa
push
test
inc
xchg
test
dec
lret
xchg
jmp
lds
faddl
adc
pop
add
xor
daa
mov
lock
sbb
xchg
dec
adc
jg
sub
pop
inc
jp
jae
out
inc
sbb
ret
fsubrl
xchg
ss
out
jne
out
jmp
add
xor
or
push
sub
sub
test
jns
mov
cmpsb
mov
scas
in
sub
jecxz
js
cltd
stos
lcall
lods
fsubl
jecxz
adc
es
add
push
xor
fdivs
jns
stos
push
push
sahf
jns
icebp
lock
cmpsl
push
push
ror
nop
mov
aam
out
and
jg
pop
add
adc
cmp
or
mov
sub
sub
out
jo
cwtl
xchg
xchg
stos
xchg
data16
rcr
daa
jmp
pop
push
fwait
lods
sbb
mov
repnz
xchg
add
outsb
inc
outsl
and
out
cli
rcrl
sub
pop
cmp
fnstenv
mov
stc
pop
out
clc
dec
jecxz
lods
aam
xchg
incl
cmpsl
fs
fiadds
sub
mov
pop
repz
mov
mov
ljmp
insb
je
jno
push
push
fdivrl
jmp
jge
mull
push
mov
iret
out
xor
das
mov
adc
jge
pop
pop
and
sub
push
rcrl
adc
dec
pushf
out
mov
loopne
mov
mov
sub
push
iret
pop
icebp
mov
movsb
jl
pop
out
xchg
insl
pop
aad
pushf
jbe
dec
xchg
pop
repnz
out
leave
pusha
mov
jns
xchg
xchg
sbb
lods
lods
mulb
cmp
mov
outsl
movsb
mov
cmpw
push
arpl
call
xchg
mov
jle
add
scas
nop
adc
es
and
in
das
mov
bound
push
ret
in
jnp
xchg
repz
test
xchg
leave
lock
cmp
or
lock
scas
lds
xor
pop
fsubrs
cld
lock
divb
sub
jae
pop
pop
pushf
xor
mov
bound
movsl
push
push
test
testb
fstpt
pushl
sbb
pop
mov
sbb
dec
cli
cmp
repnz
je
repnz
stos
xlat
fidivrl
in
mov
ret
xlat
cmp
and
outsb
dec
pop
ja
cmpsl
jecxz
push
cld
andl
sbb
inc
cltd
mov
hlt
addr16
sbb
xchg
mov
and
dec
lea
outsl
out
mov
or
push
test
inc
mov
push
fdivs
pop
addr16
adc
stos
and
jmp
and
jle
rcrb
jge
sub
jns
push
jb
dec
mov
rol
sub
aaa
stos
mov
sub
dec
ss
add
push
and
sbb
mov
mov
mov
daa
in
mov
jo
movsb
xchg
dec
and
cltd
jno
hlt
push
xchg
out
cltd
arpl
mov
dec
pop
sub
pop
and
xor
xchg
push
ret
pop
push
mov
dec
adc
and
cmp
inc
inc
iret
lods
and
ficoml
dec
lea
push
jnp
lock
pushf
xchg
add
lahf
test
lret
mov
mov
out
imul
sub
jns
mov
fcompl
push
push
mov
jbe
movsl
sbb
pop
fisubs
int3
mull
cmp
jp
adc
lock
adc
sti
inc
push
ss
bound
rcrl
fidivs
imul
popf
jne
fldcw
mov
ret
adc
test
add
mov
arpl
test
or
icebp
mov
inc
lds
inc
jae
jne
xor
dec
xchg
je
out
inc
and
push
popf
imulb
add
sti
pop
xor
es
sub
aam
stc
pop
mov
xor
or
pxor
mov
scas
iret
sub
push
cmpsl
in
negb
xor
inc
or
mov
or
cld
inc
sarb
sbb
adc
push
push
pop
imul
cmp
les
inc
xor
pushf
cmc
cmp
test
or
mov
mov
cltd
fucom
jp
lcall
mov
fwait
xor
jmp
sbb
sahf
pusha
test
add
popf
lods
ror
fists
fildl
cmpsb
imul
mov
mov
es
push
out
jle
loope
sbb
mov
and
imul
xchg
pushf
or
cmp
pop
mov
cs
push
jg
aas
sub
mov
pop
jg
cmp
inc
xchg
push
inc
mulb
mov
mov
jae
aas
fcomip
xchg
dec
mov
ret
cli
cmp
icebp
sbb
push
adc
mov
mov
lcall
mov
mov
int3
bound
inc
and
cmp
aad
mov
fcmovnb
cmp
lock
shrl
jp
cmpsl
imul
out
adc
jae
and
subb
jmp
push
movsb
dec
push
pop
scas
jb
bound
je
inc
sub
mov
fisttpll
push
sub
shl
aas
mov
jmp
pop
xchg
faddp
stos
fisubl
fucom
push
lea
call
jnp
in
push
jb
xchg
je
pop
mov
mov
jecxz
movb
call
or
xor
jns
cmp
shll
pop
adc
push
int3
and
jnp
sub
fdivs
out
inc
int
imul
std
xchg
sbb
or
outsb
mov
xorl
cmp
mov
pop
leave
xchg
scas
mov
ds
inc
mov
testb
push
pop
mov
lret
insl
mov
lahf
in
jns
pusha
xor
add
in
inc
xchg
jg
push
jmp
xor
loop
arpl
lea
cmp
scas
jns
mov
inc
xor
jbe
or
jne
and
fstps
outsl
dec
cli
pop
jmp
test
neg
fs
cs
bnd
cs
pushf
shll
insb
sub
ds
inc
push
push
out
inc
int3
popf
push
lods
loopne
aad
into
flds
sbb
cmp
pop
push
jmp
imul
and
test
sub
sbb
add
fisubl
mov
hlt
pop
lods
xchg
mov
lret
cmc
mov
stos
test
xor
xchg
pusha
test
outsl
jge
arpl
pop
dec
mov
add
sbb
sub
test
cs
jle
or
sbbb
lret
ds
test
shll
or
lds
lods
push
imul
in
gs
cmp
nop
stc
sti
xchg
jg
fcmovnb
roll
add
test
mov
pop
mov
and
rcll
jbe
jb
xor
int3
pushf
cwtl
xchg
adc
push
jno
ja
push
movsb
rorb
jecxz
jl
fdivrs
lods
loopne
mov
mov
pop
inc
mov
gs
ljmp
xchg
pop
push
and
xchg
add
xchg
repz
mov
test
hlt
out
outsb
add
aad
mov
add
out
daa
xor
xor
les
leave
stos
jmp
mov
test
or
and
or
cmpsl
mov
xchg
jnp
insl
stos
add
iret
inc
lahf
jae
push
jae
repnz
fsubrs
mov
adc
xor
shll
dec
cmp
xchg
test
xchg
mov
jmp
jno
dec
test
jno
andb
sub
loop
nop
es
lods
xchg
jl
push
push
adc
ljmp
iret
push
mov
push
cld
and
in
sbbl
xchg
out
aad
out
mov
imul
xor
pop
cmp
mov
adc
add
addl
hlt
or
cltd
xor
xchg
movsl
icebp
stos
ret
leave
adc
lods
mov
jl
add
mov
js
sub
cmpsb
push
jle
push
ror
push
lret
in
push
dec
rcrb
je
dec
loopne
push
adc
nop
and
enter
mov
mov
add
aad
mov
and
hlt
test
pop
fidivs
adc
mov
mov
pop
add
push
outsl
daa
jnp
mov
mov
dec
lods
clc
cmpsb
nop
sub
loope
inc
push
repnz
test
cmp
shrb
mov
or
and
pop
inc
pop
push
repz
add
jne
js
jmp
adc
jne
shr
stos
mov
mov
stos
fcoml
test
inc
stos
out
or
inc
int3
daa
outsl
gs
push
les
out
dec
inc
lcall
inc
insb
lcall
fwait
lret
pop
in
cmp
les
loop
sub
daa
xchg
xor
mulb
scas
fstpl
lahf
pop
cmp
bound
mov
gs
pop
jp
int3
insl
ret
mov
jecxz
inc
push
imul
xor
lods
enter
mov
or
sub
sub
hlt
pop
repz
push
adc
pop
cmp
test
and
xchg
rclb
jnp
lcall
dec
das
cmp
xlat
mov
sbb
rorl
pushf
xor
add
fwait
stc
ret
xchg
pop
loope
iret
mov
jmp
stos
loope
pusha
imul
dec
fwait
addr16
insb
cmp
popf
out
lret
rcr
fdivrs
ret
scas
jnp
in
and
inc
inc
aas
xor
add
fisubrs
sbb
jo
jo
sub
cltd
stc
nop
lret
push
repnz
or
jne
jnp
and
add
adcl
cli
mov
mov
fbstp
xchg
mov
and
mov
shlb
jge
pop
daa
pusha
sahf
jbe
xor
xchg
dec
jle
add
dec
dec
bound
push
iret
adc
sub
or
mov
push
ds
cmp
push
xchg
xlat
push
popf
xor
pop
cs
loop
std
dec
pop
sti
rorl
adc
outsl
shlb
push
push
cmpsb
cli
pushf
hlt
int3
fnstenv
fidivrl
push
add
xorl
andb
fdecstp
rolb
jbe
out
jmp
es
stos
cmp
int3
mov
fnstenv
or
jnp
jnp
dec
adc
xor
cmp
adcl
cpuid
add
xor
cmp
jmp
test
mov
andb
dec
adc
jge
push
scas
jl
mov
cld
push
sbb
pop
stos
jmp
insl
push
daa
push
mov
cwtl
push
rcr
je
jbe
stc
mov
push
push
lock
insl
cmc
pop
std
mov
insl
cmp
adc
mov
bnd
add
adc
mov
rcrl
pusha
jno
jg
sbb
jb
cmpsb
cmp
icebp
call
or
iret
ret
inc
dec
test
and
aad
sbb
jno
decl
mov
imul
mov
mov
and
inc
xor
push
sub
es
movsl
xor
out
xor
aaa
ret
in
jo
shrl
arpl
and
cmp
or
aam
and
shlb
xchg
loope
insl
negl
insb
insb
or
xor
dec
jno
inc
in
sbb
pusha
dec
jns
jno
imul
inc
clc
and
js
mov
enter
icebp
dec
sub
loope
or
sbbb
jb
push
in
bound
pop
les
hlt
daa
aaa
into
jle
or
daa
jg
jle
or
push
mov
fnsave
cmpsb
sbb
int3
out
sub
pop
ja
add
addr16
inc
and
insb
cwtl
sub
test
fisttps
add
in
xorb
popa
leave
or
cmp
fdivs
jecxz
je
imul
inc
lock
xor
or
call
mov
lea
ret
sub
dec
vzeroupper
loope
js
test
mov
push
sub
jge
int3
or
jle
add
subb
negb
loope
cltd
adc
lcall
fistpl
fcmovne
stc
and
in
xchg
sbb
imul
mov
mov
cmp
loop
lods
in
cmpsb
and
adc
out
lds
mov
lea
movsb
rol
mov
rorl
xchg
push
mov
cmp
enter
inc
mov
cmc
ds
jo
jno
mov
add
insb
sub
cs
dec
and
lea
inc
nop
sbb
js
fs
xor
pop
es
loope
pop
icebp
or
andb
test
rcr
scas
fldl
aad
jns
sbb
xor
jg
xor
sbb
and
xchg
or
fwait
repz
xchg
add
test
sub
es
xchg
cmp
dec
lahf
mov
jp
add
sub
rolb
call
lods
lds
into
aas
shll
or
xchg
mov
sub
jns
push
pusha
int3
mov
fs
push
adc
bound
test
dec
xor
pop
cld
pusha
push
enter
je
imul
pushf
cli
cmp
push
push
orb
sub
aad
dec
les
inc
les
add
scas
xor
mov
in
fdivrl
mov
imul
pop
inc
leave
inc
cmc
cmp
push
ljmp
and
cmpsb
shr
add
fidivrs
add
mov
iret
out
xor
push
pop
into
popa
lea
dec
push
add
pop
repz
jge
test
add
inc
frstor
add
ljmp
and
sahf
les
mov
push
cli
adc
add
inc
cmp
xchg
pusha
hlt
or
or
ja
adc
xor
mov
loop
in
ja
push
jae
pop
inc
arpl
mov
dec
mov
and
mov
rcrb
scas
xor
xchg
cmp
in
push
call
test
loop
aaa
test
jne
ror
sbb
cmp
sahf
xor
xchg
pushf
hlt
stos
or
daa
ja
xor
jae
mov
div
mov
add
xor
lds
movsb
stc
pop
dec
adc
sbb
push
mov
dec
xor
stc
popf
subb
cmp
dec
adc
add
aaa
xor
stos
and
inc
xchg
inc
lock
inc
test
mov
bound
and
sub
loopne
cmp
adc
testb
lods
lock
arpl
and
cs
hlt
cwtl
movsl
dec
sub
pop
popa
pop
sub
inc
xchg
aas
mov
cs
jl
inc
dec
push
lods
jnp
outsb
shrb
push
idivb
inc
insb
out
or
popa
xchg
iret
mov
pop
sub
mov
mov
mov
fidivl
das
adc
clc
cmpsl
add
pop
sub
xor
mov
lds
xor
pop
jmp
push
ror
je
jo
popa
jp
push
pop
test
fisubrs
mov
or
mov
pop
push
mov
movsb
sub
repz
pop
mov
test
xor
das
out
in
pop
xchg
mov
xchg
push
or
cmpsl
adcl
lds
out
jl
or
and
adcb
jo
sbb
mov
ret
call
jge
mov
mov
lret
inc
push
test
les
inc
popa
pop
jno
fstl
test
loopne
xor
jle
add
or
out
jp
cli
pop
lock
ja
addr16
sbb
and
enter
fcmove
aaa
jbe
jno
pop
fsubrs
idivl
cmp
cmp
or
fdivrs
pop
push
lock
mov
xchg
mov
int
pushf
in
pop
lds
cwtl
pop
idiv
or
cmp
push
push
pop
push
jl
cmp
ds
and
inc
mov
fcompl
or
push
in
clc
jb
js
hlt
ja
insb
lcall
pusha
jl
xchg
lret
jmp
out
stc
fwait
push
call
push
and
push
dec
scas
mov
insb
lds
push
xchg
mov
in
scas
test
bound
dec
ret
sub
xchg
mov
and
push
js
add
dec
push
gs
push
xor
outsl
jge
mov
scas
push
mov
jne
inc
mov
or
decl
loope
aam
mov
lcall
xor
and
fdivs
sbb
mov
stos
or
push
xor
scas
test
lahf
stc
push
mov
jp
push
mov
fsubr
sti
jo
or
xor
cmp
test
xchg
mov
lcall
in
cmp
mov
cmc
int3
dec
popf
js
mov
sbb
lahf
pop
mov
pop
divb
loope
out
jge
xchg
lret
sub
insl
pop
cmp
enter
cmpb
push
sub
push
shl
lea
iret
in
cmp
adc
mov
les
lret
push
cmp
jbe
sub
inc
repz
jecxz
leave
and
adc
or
test
ret
jbe
xchg
test
movsl
mov
out
subb
adc
mov
adc
lret
xor
cs
adc
mov
pop
push
popf
dec
mov
and
mov
xor
xchg
aad
pop
lret
dec
fldl
mov
jl
mov
movups
jl
pop
sbb
je
test
pop
out
movsb
lds
xor
or
mov
int3
add
adc
pminsw
xchg
pop
call
cmp
push
cmp
pop
pop
add
adc
mov
mov
ljmp
mov
dec
add
dec
xlat
mov
or
push
stos
outsb
insl
outsb
add
xor
push
aam
xchg
push
jbe
mov
iret
notl
mov
ret
mov
sbb
jno
dec
adc
or
dec
stos
aaa
inc
test
dec
mov
call
or
xor
addl
mov
inc
lods
cmp
decb
dec
rolb
add
stos
shlb
dec
ja
loop
sub
mov
xchg
xchg
sbb
xor
fildll
cmc
lcall
xchg
cmp
loopne
mov
les
sbb
mov
pop
jmp
dec
cmp
data16
loop
loopne
mov
adc
popa
dec
cli
mov
jbe
cmp
data16
and
jae
ret
loop
cs
dec
lock
std
pop
push
xchg
xor
xchg
lret
push
mov
jge
test
ja
fildl
mov
daa
rcr
fcomps
ds
cmp
lds
xchg
sub
ror
add
mov
add
imulb
iret
cmp
jecxz
push
arpl
push
cmp
cmpb
sbb
fldcw
mov
cs
jbe
lret
nop
xchg
test
call
ljmp
xchg
add
popf
jno
inc
xchg
sbbl
not
sub
xchg
pop
push
fdivs
lret
mov
pop
mov
sbb
or
les
imul
push
adc
inc
inc
fdivrs
scas
and
xchg
scas
pop
mov
mov
fiaddl
mov
xchg
lret
inc
mov
xor
adc
int3
and
mov
aad
loope
in
nop
pop
insb
ret
adc
xor
scas
sub
int
repz
dec
or
mov
andl
sbb
movsb
test
jne
and
int3
insl
inc
xor
jae
rclb
rcr
scas
xor
pop
leave
and
enter
or
into
mov
stc
inc
sbb
rorl
bnd
imul
mov
mov
ljmp
xchg
stos
out
mov
data16
lret
add
sub
jo
in
sahf
nop
jl
imul
push
insb
xor
jge
add
and
jecxz
inc
fdivs
dec
pop
jb
jge
cmc
mov
je
test
pop
jae
addl
or
mov
hlt
fwait
sti
and
pop
jne
iret
addb
movsb
mov
push
adc
fwait
xor
mov
cwtl
das
in
leave
jne
icebp
sub
dec
out
fnsave
sbbl
jo
fdivs
lea
out
add
mov
outsl
xchg
ss
inc
cmpl
cltd
pop
fstpl
xor
in
lock
add
jmp
cmp
cmp
fidivrs
mov
push
inc
in
sti
or
data16
push
dec
mov
mov
mov
jbe
pop
xor
sbb
mov
clc
or
movsl
pop
roll
sti
pop
ret
dec
dec
outsb
les
into
sub
dec
adc
loope
rcrl
andb
sbb
jns
loope
cmp
lahf
aam
fnstcw
movsl
cmp
xchg
cli
cmp
push
xchg
fucomp
pushf
adcb
packuswb
inc
xchg
inc
enter
pop
sub
loop
jl
mov
fstl
add
gs
loopne
mov
jns
shll
sahf
lret
in
jne
or
jno
mov
mov
and
rol
lods
fdivrp
xor
jb
rcll
insb
lret
push
pusha
cmp
mov
push
mov
das
test
xlat
outsb
add
dec
data16
mov
lods
mov
gs
andb
es
cld
clc
sub
dec
pop
sub
xchg
pop
jns
out
mov
imul
lock
cmp
sub
pop
aaa
cmp
or
lods
shl
pop
fbstp
mov
hlt
or
std
inc
jnp
pop
or
fnstenv
enter
icebp
arpl
sub
rcrb
mov
xchg
mov
fstps
inc
or
enter
mov
into
dec
fidivs
pop
fidivs
sbb
sub
pop
imul
aam
pop
cmpsb
inc
ficomps
mov
rol
mov
push
aas
mov
inc
ficoms
push
frstor
enter
out
movsl
dec
std
lret
movzbl
jmp
pop
movhps
dec
cltd
outsl
mov
push
dec
adc
pushf
daa
dec
fcmovne
insb
add
sti
pop
or
mov
outsb
sub
or
iret
mov
xchg
cltd
insb
xor
and
mov
sub
adc
ret
pop
popf
xchg
cmp
fstpt
lahf
idivl
fldt
push
sbb
ds
into
sbb
add
pop
repz
inc
mov
add
xchg
xchg
mov
xchg
xchg
and
cmp
mov
sub
jnp
sub
push
xchg
cs
cmp
push
movsl
dec
cld
push
bound
pop
dec
xchg
xchg
stc
nop
leave
mov
insb
aam
mov
mov
dec
adc
jg
cmp
pop
scas
sub
lds
dec
xchg
gs
push
faddl
bound
mov
faddp
xor
arpl
xor
pop
cld
lahf
aas
ljmp
push
jae
adc
int3
pop
mov
push
rclb
imul
mov
enter
test
sarb
pop
pop
pop
clc
cmp
test
cmpsb
inc
outsl
ja
mov
mov
xchg
mov
in
daa
jo
and
ret
xorb
mov
fcmove
es
jb
xor
pop
pushf
fadds
and
cwtl
jb
cmp
sbb
cwtl
hlt
inc
lods
rclb
nop
jbe
clc
shlb
jmp
cwtl
mov
inc
xor
mov
test
loope
fnstsw
jg
dec
add
push
mov
xchg
arpl
cmp
mov
mov
mov
popf
insl
mov
int3
andb
sub
out
jl
stos
test
dec
test
push
call
jge
dec
out
scas
cli
jmp
add
xor
mov
jge
insl
popf
lret
lcall
test
fsubl
pop
jg
push
inc
insb
sub
std
push
sahf
jns
aaa
fldt
mov
sub
stc
je
xor
mov
pop
sbb
loop
pop
shrl
jl
mov
movsl
imul
hlt
in
daa
jmp
pop
loop
xchg
adc
popa
jns
cmpsb
jle
bound
pop
addr16
in
mov
mov
cmp
aam
dec
push
sub
mov
jo
push
jns
insb
jle
or
aad
std
xchg
push
in
mov
adc
into
int
xor
int
jmp
or
jne
or
adc
test
pop
loope
inc
addr16
pop
sub
scas
stos
or
aad
adc
jne
push
rcrb
fisttpll
push
repz
cmp
mov
hlt
or
sub
xchg
rcll
push
mov
inc
insl
ss
test
enter
cld
cmp
bound
adc
andl
pop
cmp
inc
jecxz
push
repnz
mov
nop
mov
add
jg
xlat
sub
popf
out
lret
out
cmp
loopne
xchg
cmc
mov
out
xchg
stc
mov
jae
cwtl
popl
lods
pop
das
xchg
aad
fwait
idivl
mul
pop
push
shll
daa
outsl
cmp
cmp
ss
add
pusha
inc
cmp
sub
in
xchg
out
sti
jmp
inc
sbb
clc
add
xor
fisubs
xor
pop
jb
pushf
jecxz
pusha
cli
mov
filds
mov
jg
xor
push
jge
lcall
cmpsl
mov
jae
cltd
push
fists
mov
ljmp
hlt
mov
cmp
or
inc
xor
iret
loop
xchg
imul
notb
stos
negl
pop
add
sbb
add
jbe
push
push
or
inc
pop
loopne
daa
popf
add
xchg
stos
je
cli
dec
or
in
gs
cmpsb
sahf
daa
cmpb
cmp
sub
dec
adc
cltd
sti
mov
repnz
sbb
test
or
cmp
jl
lret
and
jb
fistpll
xchg
mov
inc
cmp
call
mov
test
test
fisubrs
add
mov
sbbb
jp
and
insl
xchg
lea
push
and
mov
lock
rorb
es
mov
mov
fildll
xor
dec
fcmovne
lret
mov
movsb
dec
and
test
pop
jle
aas
push
adc
xor
outsb
sbb
or
xchg
dec
fcmovnbe
xchg
fbstp
repz
in
and
icebp
adc
out
and
mov
iret
sbb
loop
push
xor
out
imul
mov
js
mov
pusha
mov
enter
fmuls
or
lret
xor
fisttpll
xchg
cwtl
out
xchg
loopne
scas
push
out
mov
stos
inc
or
fcoml
jne
sbb
pushf
xorps
pop
movsl
pop
mov
bound
gs
mov
mov
pushf
push
pop
pop
sahf
dec
jo
ss
mov
jg
mov
jle
aad
sub
ja
or
out
dec
push
shrl
aad
es
jmp
xchg
mov
lods
push
sbb
fists
aaa
gs
mov
mov
jne
jno
fldenv
xchg
mov
sbb
mov
fildl
int
popa
cmpsb
jns
mov
add
mov
sbb
mov
cmp
xor
fcoml
test
pushf
or
out
lea
lret
sbb
mov
add
fimuls
lock
push
add
adc
shl
fcoms
aam
stos
js
xchg
or
fisubrl
pop
xchg
xor
inc
and
out
mov
push
mov
xor
jae
cmp
enter
icebp
sti
shlb
loope
xor
lds
popf
push
jne
fmul
fmuls
add
push
and
sub
lret
out
cmp
add
push
push
xor
adc
sbb
dec
mov
xchg
jmp
outsb
mov
mov
and
mov
clc
add
mov
dec
pop
out
sub
adc
lods
add
jecxz
jns
imul
adc
pop
xchg
pop
out
jge
lret
fadd
pop
call
popf
loope
clc
add
jle
insl
mov
mov
repz
add
push
xchg
repz
pop
gs
lds
sti
aam
mov
call
loope
xchg
rolb
fwait
jno
test
jge
adc
lds
bound
repz
sbb
sub
push
sub
leave
sbb
inc
xchg
cmp
sbb
mov
adc
push
subl
mov
fists
pusha
jns
sarb
repz
insl
inc
dec
in
dec
mov
push
jb
lahf
aaa
xchg
or
shr
inc
movsb
add
in
ds
pop
outsl
cmp
je
fildl
hlt
cli
jl
jecxz
pop
pop
outsb
mov
sahf
mov
adc
ljmp
popa
cmpl
aas
mov
or
xchg
sahf
jno
cmp
adc
adc
xor
mov
push
adc
je
inc
fmull
jb
mov
push
push
inc
fmuls
and
pusha
orb
add
icebp
xor
push
test
and
mov
sub
push
xchg
enter
in
push
push
xor
adc
or
cmp
pop
cwtl
stos
aas
xorb
jmp
mov
inc
mov
test
xlat
cmpl
pop
xchg
sub
push
cs
xchg
dec
inc
movsl
divl
or
insb
push
xor
nop
push
lahf
call
ret
and
jecxz
mov
repnz
cmp
das
mov
gs
jno
ret
repnz
jo
xchg
push
out
xchg
insb
sub
cmp
shrb
pop
xorl
push
shrb
inc
sbb
sahf
scas
xor
outsb
mov
cmpsb
jge
or
cmp
rorl
add
or
dec
mov
mov
nop
xor
push
movsb
sbb
or
out
pop
mov
mov
pop
lock
popa
and
loop
mov
cmp
adc
mov
jecxz
push
xchg
or
int
jns
mov
int3
shrb
pop
push
aas
push
mov
or
cmp
xchg
inc
push
ret
stc
lahf
aas
pop
cmc
lods
test
divl
sub
mov
sub
call
mov
insb
lret
je
cmp
mov
ret
sbb
inc
inc
test
stos
and
data16
daa
cmp
cmpsb
repz
into
in
cmp
jge
mov
mov
pop
arpl
pop
and
adc
push
outsl
negl
and
outsb
or
jp
aas
mov
in
inc
mov
aad
xor
pop
mov
into
dec
lret
arpl
insl
fildll
pop
jmp
insb
sub
push
cli
xor
cmc
mov
mov
xchg
push
pop
aam
xchg
sbb
call
push
inc
push
jae
insl
add
test
or
clc
push
xchg
fwait
jno
stos
fs
push
adc
mov
push
mov
in
and
pusha
ss
cld
xor
mov
jl
and
mov
lds
arpl
fsts
xor
repz
ljmp
sbb
mov
xchg
pop
jmp
mov
or
in
push
testb
sbb
mov
out
imul
insl
add
cld
stos
cltd
orl
iret
pop
xor
xlat
push
mov
inc
mov
mov
xor
push
dec
mov
inc
cmp
scas
out
iret
push
jo
fisubrl
sbb
ficomps
jnp
cltd
test
dec
data16
xor
fsubrs
adc
xorb
xor
repnz
iret
jecxz
mov
test
xchg
cmpsl
icebp
loope
mov
sub
mov
mov
loope
mov
inc
cli
pop
fs
push
push
xor
xchg
dec
pop
test
fmul
cs
jg
jmp
dec
bound
pop
dec
mov
call
rol
orb
sti
mov
pop
mov
inc
mov
dec
test
loopne
dec
dec
xor
mov
jecxz
push
push
shlb
adc
mov
shrb
cmp
ret
aas
jns
nop
sub
aad
adc
push
test
data16
subl
sbb
testb
sub
out
inc
jge
ds
and
pop
jle
fildll
stc
cmpsl
out
aaa
gs
pop
adc
sbbl
mov
mov
xchg
clc
test
aas
aad
insl
pop
fisubrs
shlb
test
add
popl
ds
int
sbbl
rcl
or
xor
sahf
out
das
adcb
dec
add
mov
add
nop
mov
push
fisttpll
mov
movsl
sbb
jnp
leave
nop
scas
sbb
stc
outsl
cmpsl
outsb
mov
push
fucomip
test
lods
adc
jecxz
jp
push
push
xlat
mov
shl
pop
mov
mov
orb
test
lods
iret
pop
imul
repnz
sarb
cmovs
pop
outsb
stos
mov
add
mov
xchg
clc
aad
scas
lret
imul
data16
incb
mov
sbb
push
test
shrb
pushl
pop
inc
fnstenv
enter
lret
cmp
adcb
sub
push
push
in
fxch
sbb
push
hlt
pop
mov
jae
cmpl
pop
inc
jo
dec
sub
cmpsl
iret
rclb
into
enter
push
int
inc
stc
mov
push
adc
jb
roll
addb
cmp
mov
inc
int3
test
outsl
daa
cmpl
lahf
popa
out
scas
inc
lret
fwait
cmpsl
gs
cmp
fists
push
add
decb
mov
scas
enterw
push
cmpl
dec
sub
jns
movsl
adc
dec
dec
cmp
xor
xchg
fsubrl
outsb
fdivl
pop
fnstsw
jecxz
daa
mov
jle
mov
jmp
sbb
mov
stos
std
scas
jbe
int
stos
jmp
int3
jecxz
push
repz
cmpb
scas
jle
neg
dec
pop
sub
inc
and
xchg
sahf
inc
mov
push
cwtl
mov
pop
mov
lcall
test
ljmp
dec
in
enter
out
js
jo
mov
push
cmp
dec
insb
sub
pop
jne
mov
mov
jl
mov
call
ret
lcall
test
xchg
sbb
or
lret
push
enter
push
sbb
sub
aam
mov
pop
jno
pop
scas
push
movsb
inc
or
inc
gs
lcall
push
xchg
das
cmp
das
adcl
movsb
loop
add
in
stos
clc
cwtl
mov
xchg
test
jecxz
fnsave
dec
rorb
sti
ret
sub
imul
ret
push
cmc
in
xchg
pop
jmp
movsb
nop
arpl
sub
call
or
scas
fsubl
mov
mov
imul
and
clc
je
jge
call
in
push
push
and
push
ljmp
inc
inc
adc
out
addb
mov
nop
sbb
cltd
or
clc
ds
cmp
mov
repz
int3
std
mov
lret
adc
jae
and
mov
push
je
insb
cmpsb
imul
jo
pushf
je
rclb
sub
dec
and
jo
sti
xchg
stc
jl
xchg
fldt
xor
mov
push
pop
xchg
xor
sub
int3
movsb
dec
mov
out
dec
push
jmp
pusha
ds
xor
rcrb
push
mov
fs
jg
fisubrl
out
jmp
pop
dec
popa
sbb
xor
jo
mov
testl
sbb
mov
out
adc
sbb
vmovupd
push
into
inc
aad
push
jge
mov
or
daa
push
ljmp
in
inc
xlat
sbb
mov
fisubl
out
add
loop
and
mov
lea
addb
mov
out
mov
xchg
cmp
sub
std
push
rcrl
insl
push
mov
and
push
int
insb
or
out
add
in
dec
loope
out
scas
push
popf
sbb
ret
mov
lods
cwtl
push
inc
xchg
inc
sbb
jbe
lcall
and
push
xchg
sub
mov
xchg
int3
lret
movsb
lds
imulb
mov
add
dec
scas
cli
pushf
fildll
dec
lods
sbb
aas
popa
fists
mov
push
mov
cmpsl
pop
shrl
add
xchg
aas
mov
xchg
xor
jbe
call
sbb
pop
mov
inc
mov
dec
mov
arpl
sbb
ja
je
or
jns
inc
pushl
es
pop
push
in
add
mov
xchg
test
mov
mov
cmc
jmp
pop
xor
mov
sbb
dec
pop
sub
sub
mov
mov
ret
add
pop
cmp
movsb
add
push
fnstcw
dec
in
xchg
xor
bound
and
negb
leave
je
pop
push
aaa
xor
lods
mov
xchg
lods
push
push
ficompl
dec
repz
and
xchg
lahf
or
adc
das
and
lock
fbld
clc
je
mov
testb
test
adc
ds
repz
sub
cmp
or
rclb
cli
icebp
lahf
stos
mov
movsb
mov
xor
cmp
or
mov
sbb
test
ds
pmulhw
push
scas
mov
orb
mov
inc
mov
fadds
lea
sahf
and
ret
enter
jmp
mov
cs
stos
dec
mov
push
push
push
cmpsl
xor
fisubrs
idivb
or
rcrl
mov
out
cwtl
daa
das
ret
push
cmp
jbe
cmp
push
sbb
push
add
lret
popa
cltd
in
cmp
push
stc
outsl
push
das
imulb
aaa
cmp
xlat
repz
add
pop
cmp
mov
into
adc
faddl
std
data16
sub
enter
or
mov
cmp
xor
mov
and
adc
ss
xchg
fdivrs
lea
negb
jae
loopne
repz
cld
lcall
in
push
outsb
mov
mov
ret
aaa
adcb
test
sbb
fdivp
sub
mov
push
jb
mov
sbb
jl
in
dec
add
xor
sbb
jo
push
int
lcall
mov
out
pop
jbe
or
xchg
cmp
jecxz
jbe
push
insl
inc
lret
mov
lret
xchg
cmp
pop
outsl
pop
stc
ja
sbbw
aaa
call
movsl
mov
sbb
fs
movsb
xchg
out
mov
movsb
or
dec
pushf
aam
adc
ror
cmp
pusha
xchg
cmp
cwtl
or
push
adc
sbb
dec
out
rorb
popf
xor
call
or
sti
das
hlt
pop
push
fcoml
cmpsl
or
pop
scas
daa
push
jnp,pn
jne
fnstcw
sub
add
repnz
jmp
push
incb
sahf
xor
insl
cmp
pop
mov
push
sahf
push
pop
or
jb
push
out
add
movsb
cmp
and
sub
add
and
cltd
stc
lcall
fildll
out
mov
jg
popf
mov
scas
dec
mov
ret
insb
push
bswap
or
add
adc
jbe
adc
rorb
push
paddd
mov
stos
mov
and
sbb
out
insl
fsub
rol
sub
test
sub
sub
mov
xor
inc
xor
mov
icebp
lea
popf
lea
pop
shrb
into
xor
int
push
lahf
mov
mov
mov
aad
fucomi
xorb
mov
gs
lods
push
pushf
jg
push
xor
lldt
cs
popf
stc
mov
sti
insl
xchg
mov
cld
jnp
dec
out
ja
test
cmp
push
pop
push
pushf
mov
xor
iret
and
into
enter
lods
les
mov
push
call
ds
cld
xchg
add
loopne
insb
shl
mov
push
mov
or
leave
jle
dec
loopne
inc
in
xorl
aam
lea
testb
ja
push
out
sti
dec
pusha
in
sbb
xchg
test
mov
js
out
cmp
lods
cmpsb
cmp
dec
jmp
test
cli
gs
repz
pop
lods
add
adc
inc
cmpsb
xor
nop
jecxz
cmp
add
mov
fisubl
jmp
hlt
sarb
push
dec
xor
outsl
cmp
inc
popa
je
test
ds
sbb
fwait
test
inc
jle
pop
jne
mov
lods
add
xchg
xor
xchg
test
push
cmpsl
adc
sbb
mov
mov
loope
xorb
xor
jp
shlb
dec
sbb
inc
out
xor
aad
call
mov
mov
xchg
inc
pop
mov
movsb
sub
aad
test
faddl
into
loope
outsl
scas
inc
mov
jnp
jecxz
movsl
sbb
jne
mov
fs
jo
stc
and
inc
jg
mov
mov
repz
jbe
aas
push
dec
pushf
fs
int
cld
mov
dec
xchg
cmp
aaa
xor
movsb
mov
pop
push
ljmp
icebp
mov
lahf
clc
jae
fs
ss
je
imul
jg
add
in
lcall
add
or
dec
cmpsl
inc
inc
ret
xchg
stos
add
fwait
shr
lds
adc
repnz
jle
into
int3
js
add
mov
mov
daa
mov
pop
scas
adc
fdivrs
sbb
and
jecxz
ret
stc
gs
mov
xlat
nop
sub
in
imul
std
jb
jp
aaa
push
dec
sub
sub
add
rcrb
xchg
cmp
jle
push
sub
cmp
pop
mov
cmp
sbb
call
imul
flds
sarb
sub
jb
out
or
aaa
sbb
cmp
pusha
je
insb
cmp
fxch
jae
outsl
or
enter
push
movsb
mov
dec
clc
and
lcall
cmp
or
dec
out
pop
movsl
fiaddl
in
out
or
jmp
mov
repnz
orl
rcl
jns
mov
jmp
adc
adc
subb
ja
js
es
mov
cltd
dec
mov
mov
adc
xchg
pop
xor
pop
adc
hlt
inc
inc
ds
test
out
bound
cmpsl
add
fsubrl
iret
and
inc
ja
adc
in
push
mov
cli
clc
cmp
push
test
lcall
insb
les
push
test
dec
and
ds
or
jmp
mov
inc
xor
push
in
add
outsb
int
js
shl
out
test
add
xchg
mov
sub
adc
adc
push
mov
sarl
lea
cmp
xchg
test
xchg
scas
push
or
jo
and
out
hlt
scas
cmp
dec
push
lea
out
aam
cmpsb
or
cvtps2pi
sbb
push
cmp
aam
daa
aaa
outsl
sub
lahf
and
outsb
addr16
out
sub
lret
hlt
gs
and
mov
xor
in
jae
loopne
pusha
cmc
aam
in
inc
ljmp
ja
aaa
ret
lcall
jbe
mov
pop
popf
jns
fnstcw
mov
std
push
loopne
xchg
mov
stos
push
ret
pop
inc
mov
jnp
fnsave
inc
mov
scas
mov
pop
push
jmp
outsb
xor
push
rorl
adcl
xchg
lcall
pop
ss
mov
and
mov
mov
pop
inc
flds
mov
jnp
rolb
fwait
inc
sbb
mov
cs
popa
out
inc
and
inc
xchg
ret
sbb
push
push
adc
adc
aaa
dec
mov
les
jp
jl
ja
mov
stos
test
rol
data16
pop
rorl
xchg
mov
jp
xor
and
push
hlt
ficoms
lods
hlt
scas
popf
sub
sub
mov
cwtl
mov
jmp
fnsave
loopne
sub
push
movsb
scas
cld
sub
dec
repz
xor
adc
xor
dec
out
pop
mov
push
in
sub
jl
sarb
mov
testl
sub
popl
mov
mov
stos
in
push
cmp
nop
jmp
pushf
push
ret
aad
bound
adc
rol
cmp
or
jecxz
dec
pop
fnstsw
xchg
sub
jae
sti
mov
ret
cmp
inc
lret
mov
lcall
jbe
mov
and
push
sbb
inc
in
mov
and
add
int
xchg
popf
sub
testb
push
jg
outsl
pusha
or
fidivl
push
pop
jecxz
adc
jbe
and
aam
sahf
shlb
jns
jns
push
lods
or
add
imul
sub
out
aaa
xchg
and
lret
nop
or
cli
sbb
pop
sub
test
hlt
adc
pop
mov
jb
push
fidivs
adc
jne
cmp
push
hlt
lods
fidivrl
pop
xchg
divl
hlt
push
mov
cs
aam
jge
mov
jo
jnp
mov
mov
arpl
adc
gs
xor
adc
add
int3
lret
mov
xor
pusha
stos
inc
cwtl
sahf
mov
adc
in
fbstp
push
mov
push
and
mov
test
lods
jne
xor
out
imul
pop
loop
mov
dec
sub
stc
fstp
jnp
repz
and
inc
push
inc
in
xor
inc
fisubs
jne
ret
xor
push
rclb
push
sub
insl
mov
movsb
jp
in
jp
mov
xchg
ror
mov
faddl
cli
aaa
es
push
inc
mov
add
repnz
scas
lret
je
dec
loopne
sarl
add
jno
fstpl
inc
inc
leave
xchg
push
hlt
mov
lret
in
cltd
sbb
insl
leave
mov
shr
ljmp
and
iret
cmpsl
inc
cmp
cmp
ret
out
mov
mov
xchg
std
int
int
shll
jecxz
fstl
add
push
sbb
pop
push
add
xchg
mov
xchg
mov
xchg
or
test
xchg
xchg
add
and
fimull
fmul
add
and
sbb
cwtl
je
mov
fmulp
xor
jo
lods
inc
dec
fwait
mov
cmp
add
jecxz
out
xchg
pop
adc
xchg
jo
xchg
sbb
dec
mov
ja
mov
mov
jmp
fstpl
addr16
jns
out
xor
pop
cmp
dec
mov
addl
push
sahf
lock
ss
cmpsb
mov
out
xchg
pop
clc
push
lret
jg
and
push
insb
mov
adc
fidivrs
mov
mov
dec
xchg
xor
fidivrl
inc
lret
sahf
dec
test
test
shrb
jae
je
push
lcall
iret
mov
push
cmpsb
push
scas
xchg
jbe
jp
fidivl
rorb
stc
popf
neg
mov
cld
or
jg
adc
jecxz
cli
mov
xor
mov
lods
jle
push
inc
cwtl
sbb
addr16
inc
leave
cmp
jecxz
mov
add
xchg
rorl
test
push
cmp
cmp
pusha
cli
mov
push
mov
sub
mov
pop
stc
adc
movsb
sahf
test
mov
scas
ret
sub
sub
add
pusha
pop
sbbb
mov
shrb
lds
push
xor
push
xchg
jb
cmpsl
js
push
jns
lock
cmc
sbb
cmp
pop
jg
mov
sbb
insl
orl
ds
pop
pusha
aaa
jae
push
pop
pop
sub
rcl
shl
clc
push
scas
out
push
popa
mov
ljmp
mov
mov
mov
sbb
pusha
lds
insb
jecxz
pop
mov
outsl
insl
sub
subl
in
jge
popf
pop
dec
pop
dec
mov
mov
adc
aaa
pop
je
xchg
dec
fcoml
adc
push
adc
mov
andb
xor
pushf
and
shll
or
and
push
in
mov
xor
jae
sbb
in
lea
inc
inc
lea
jnp
movsb
notb
jl
xchg
cmpsl
test
push
rclb
add
xor
sbb
divb
mov
mov
adc
inc
pop
inc
xor
imul
rcr
cli
lar
dec
mov
test
pop
stc
rorb
ss
push
xadd
shlb
je
xchg
mov
pop
loopne
or
cltd
cmp
sbb
jl
sub
jns
jo
xor
stos
push
stos
cmp
into
pop
enter
sahf
icebp
nop
jl
test
mov
ja
dec
and
test
outsl
push
in
jns
adc
jmp
hlt
xchg
ss
pushf
xchg
std
xchg
nop
cmp
in
mov
jno
add
out
xchg
xchg
stc
pop
test
ds
or
cwtl
sbb
repz
inc
icebp
push
call
mov
call
enter
mov
sub
jnp
movsb
std
paddusw
aam
pushf
dec
xchg
mov
mov
mov
add
xor
outsl
sub
adc
dec
dec
je
lret
loop
and
or
int3
mov
sub
inc
in
subb
sbb
dec
sahf
mov
pop
xchg
jmp
pop
lods
mov
sti
add
pop
cli
add
enter
fcompl
pop
add
xchg
sbb
cld
and
mov
loopne
test
push
sti
xor
in
or
cmp
xchg
sub
imul
mul
js
xchg
sub
fidivrs
sbb
and
jmp
mov
or
push
jl
lcall
into
jb
roll
xchg
sbb
addr16
mov
adc
out
mov
sbb
mov
addr16
xor
jbe
sbb
ljmp
mov
pusha
movsl
cld
sub
enter
mov
je
mov
jns
push
outsl
out
pop
dec
mov
mov
sub
cmpsl
call
or
out
pop
sub
test
mov
jnp
mov
lock
cmp
cltd
stc
cltd
call
jl
pop
xor
std
iret
sbb
jecxz
loop
or
in
mov
lret
push
in
mov
fnstenv
test
dec
fs
es
popa
imul
jl
rol
outsl
sbb
pop
adc
push
incb
movsb
inc
scas
faddl
dec
stos
ja
shrb
int3
sbb
shr
adc
inc
mov
repnz
mov
adc
scas
pusha
neg
ss
fidivs
test
cmp
dec
pop
mov
int
and
loopne
dec
movsb
icebp
dec
inc
mov
adc
loope
insl
push
clc
mov
movsb
jmp
in
inc
mov
in
sub
repz
xor
xchg
jle
mov
cmp
mov
imul
fdiv
add
das
addr16
sbb
jno
je
sahf
lods
sbb
inc
mov
jg
cmp
pop
fstpl
scas
mov
addr16
rcrl
sbb
mov
push
jmp
mov
sahf
dec
scas
xlat
repz
movsl
inc
notl
das
addr16
orl
icebp
pop
subl
xchg
data16
adc
ljmp
jecxz
inc
xor
leave
out
inc
sahf
push
inc
push
or
enter
clc
aad
int
and
adc
jnp
das
notl
mov
sub
mov
cmc
inc
popa
add
clc
cmpsb
and
sti
loopne
lods
or
scas
mov
mov
cmpsl
inc
sbb
test
sub
and
mov
mov
test
xor
xlat
mov
mov
loopne
push
adcl
into
sub
subl
cmp
divl
or
jecxz
pop
or
xor
adc
dec
rcrl
jl
mov
cmp
cmp
cwtl
dec
dec
lods
mov
mov
incl
mov
cs
cmp
and
in
dec
and
pop
in
imul
cld
rcl
cs
pop
xchg
jae
jge
cmp
mov
popl
movsl
mov
jl
pop
sbb
fstpt
mov
pop
inc
pushf
add
aas
adc
std
popf
jne
lcall
sub
imul
aas
xor
jbe
inc
loopne
or
shlb
jl
in
dec
gs
cmp
inc
sahf
xchg
push
fisttps
rcrl
out
pop
lret
add
adc
ret
lahf
int3
mov
cmp
in
xor
cmp
mov
pop
popf
ret
xor
pop
scas
loop
addr16
adc
mov
xchg
inc
popf
adc
es
pop
xlat
cs
xchg
push
adcb
push
xlat
push
dec
or
into
cs
xchg
mov
cmpsl
sub
mov
fimull
pop
and
mov
ror
dec
cmp
test
aaa
mov
rorl
shll
dec
add
mov
push
outsl
sub
dec
cmp
mov
mov
jns
lods
mov
dec
jecxz
sbb
and
push
mov
andb
or
and
aaa
or
and
pop
or
and
aaa
or
pop
aas
inc
push
xchg
sub
out
loope
jne
and
jmp
and
rclb
mov
sbb
add
scas
cmp
lret
cmp
and
push
sbb
sub
and
cmp
xchg
xlat
fwait
mov
pop
mov
addr16
xchg
adc
push
stos
xchg
jp,pn
inc
and
loope
mov
pop
call
movsb
xor
stos
add
aad
scas
fisubs
addr16
mov
sbb
incl
faddp
lock
test
lret
addr16
std
adc
outsb
add
lret
push
push
fs
inc
fbstp
decb
mov
mov
ds
and
pop
loop
jp
cmp
ds
scas
in
adc
or
sbb
push
adc
test
repz
push
mov
lcall
push
push
mov
push
ss
into
xchg
jbe
xor
mov
lods
dec
dec
mov
xor
xor
pop
inc
outsl
push
jae
fldcw
sbb
cs
pop
add
xor
xor
rcll
add
mov
gs
mov
repz
jle
stos
shrb
push
insb
fdivl
rcrl
mov
mov
stos
adc
in
cld
repnz
push
or
pop
in
gs
jp
cli
jne
mov
mov
sub
shlb
dec
scas
jle
add
test
add
int3
and
or
fstpl
std
mov
pusha
push
mov
jnp
das
add
imul
insb
mov
jp
add
sub
push
jg
mov
call
idiv
testl
xchg
es
xchg
rol
xchg
icebp
movsl
mov
dec
loope
pop
ret
or
mov
into
pop
loop
lods
inc
or
and
mov
pop
inc
and
sbbl
mov
jl
inc
or
cmp
dec
sbb
mov
xorb
cmp
cmp
pop
add
pop
cmp
pop
inc
and
jg
add
pop
out
cld
pop
dec
dec
imul
push
ror
dec
push
pop
jecxz
loop
rcrl
sub
aam
rcrl
xchg
imul
cld
mov
je
es
inc
mov
mov
mov
pop
xchg
scas
call
adc
ljmp
jbe
lahf
xchg
fwait
pop
lds
out
ds
in
out
dec
leave
rcrl
cmpsl
sbb
jbe
fisubrs
fcoms
ficoms
push
int3
lock
sbbl
cmpl
jns
sbb
or
sahf
lret
out
test
adc
out
adc
mov
scas
push
movsl
and
jns
jnp
dec
in
cmp
ret
mov
out
loop
sahf
xor
adc
xchg
in
or
mov
xchg
sbb
mov
or
jl
sub
and
and
push
jmp
sub
rorb
clc
aas
aad
test
lods
inc
insl
les
addr16
icebp
mov
loop
shrl
cmpsb
xchg
sub
or
jbe
cmp
adc
jge
mov
cmpb
jo
fsubrs
cmp
fisubrl
jmp
cmp
sahf
enter
lahf
les
shlb
sti
lods
inc
in
or
repz
lds
insl
test
out
pop
sahf
fcomip
std
xchg
in
push
lods
lret
ret
and
dec
in
imul
push
lock
repnz
mov
filds
push
popf
push
dec
push
xchg
and
sub
jge
mov
mov
or
outsl
xchg
jns
xchg
push
in
sbb
leave
pushf
mov
fsubl
popf
fldcw
movsl
dec
adcb
test
outsb
clc
or
xchg
jbe
add
leave
pop
push
imul
mov
pushf
repz
mov
pop
sti
sbb
into
sub
jae
std
test
mov
ret
pop
jg
mov
pop
pop
adc
sbb
cmp
pop
cmp
scas
inc
loopne,pn
inc
push
dec
int
jno
push
lods
push
adc
xor
mov
pop
inc
push
mov
mov
in
xchg
lret
imul
ficompl
mov
lret
jle
lds
xlat
sbb
add
cwtl
out
xor
cmp
movsb
cmc
xor
arpl
dec
push
cmp
cmpsb
shl
jb
inc
dec
dec
stc
imul
andl
mov
inc
stos
xchg
mov
jp
mov
sbb
cltd
mov
ljmp
xor
stos
jnp
mov
mov
mov
pop
mov
loopne
jg
clc
xor
xor
insl
dec
inc
inc
rclb
loope
add
loopne
jno
cld
sub
sbb
lods
movsl
pop
mov
stos
sub
xchg
aam
insb
movsb
adc
and
pop
cmp
ljmp
xor
test
nop
and
xchg
sub
js
out
push
sti
fwait
in
mov
sti
and
int
push
insl
lods
inc
pop
xchg
pop
clc
dec
ja
inc
test
sub
std
push
out
test
sub
sub
lret
and
into
mov
cld
pop
push
int
lods
jg
pushf
scas
dec
mov
sbb
mov
dec
push
cmpsb
shll
fidivl
sub
or
clc
lret
bound
xchg
test
insl
xlat
lods
mov
inc
aam
ret
jg
rorl
sbb
gs
out
sti
fistps
mov
xor
and
ljmp
adc
imul
cmp
stos
gs
jnp
mulb
cltd
pop
adc
push
rorl
mov
test
add
mov
inc
mov
icebp
mov
jnp
inc
lahf
mov
daa
out
or
popa
jns
jb
or
jb
adc
out
mov
inc
mov
lods
imul
jnp
mov
adc
gs
xor
test
xor
jmp
call
and
cmp
jnp
mov
js
lods
sub
sbb
inc
inc
js
leave
int
mov
int
enter
adc
fwait
xor
sbb
mov
int
mov
repnz
push
inc
cs
dec
xchg
lcall
roll
add
je
pushf
xor
mov
pop
or
cmpsl
cmp
js
test
hlt
xchg
insb
mov
mov
mov
push
addr16
xor
or
outsb
jle
xor
repz
fstpt
and
sbb
mov
jmp
pop
jns
push
icebp
and
sbb
nop
lahf
mov
sub
mov
add
outsb
xchg
repnz
sub
xchg
push
add
mov
leave
int
movsl
popa
lods
and
cmc
inc
or
xlat
addl
jns
adc
jns
dec
adc
outsb
sub
test
pop
and
sub
adc
icebp
insb
push
inc
add
cmp
les
adc
out
popf
xor
mov
and
or
fs
test
fidivl
fsubr
rcr
mov
pop
imul
cmp
inc
mov
push
imul
pop
stos
jmp
rcr
pop
adc
mov
pop
pop
scas
movsb
cmp
jp
inc
ret
cmp
jb
mov
cmp
add
daa
xor
loope
pop
xchg
iret
push
shr
scas
and
les
fwait
push
in
sbb
mov
leave
and
mov
mov
sub
xor
loopne
jmp
mov
or
ds
movsl
ljmp
mov
popf
sbbl
repz
mov
mov
test
insb
aas
add
add
sbb
out
inc
and
out
ljmp
mov
cli
cmp
arpl
loope
pop
jae
mov
mov
or
inc
fmul
popa
gs
fldcw
or
out
add
inc
mov
lahf
sub
test
inc
mov
adc
mov
jne
xlat
ja
push
xor
dec
pxor
jns
test
jmp
push
cmpsl
jle
or
sbb
rcrl
pop
push
pop
sub
loopne
push
jge
inc
insb
jmp
jg
stos
ficoms
inc
inc
xlat
jae
cltd
xor
add
in
mov
ret
push
rcl
pushf
adc
xchg
bound
movsl
adc
xor
in
daa
shrb
dec
sti
nop
sub
add
pop
and
pop
fldcw
stos
arpl
mov
loope
movl
movsb
out
mov
inc
fistps
push
fcoml
outsl
data16
imul
ss
add
pop
rcr
adc
push
push
cltd
ret
xor
add
aaa
in
jecxz
dec
push
pop
add
mov
data16
xchg
or
pop
cltd
out
push
lret
jne
cmp
pusha
push
mov
xchg
ret
mov
push
and
pmuludq
add
movsb
loopne
lods
test
hlt
shll
push
dec
in
ret
pop
out
push
mulb
repz
lods
pop
xor
ds
push
cmc
lahf
decl
push
mov
cmpsb
lret
rol
lds
push
sub
test
lret
adc
insb
push
pop
adc
ret
lcall
mov
pop
fdivrs
loope
inc
mov
lret
rcrb
jecxz
add
mov
popa
fnstsw
cmp
stos
lds
dec
loop
dec
cmpsl
push
in
or
movsl
jae
pop
adc
jle
dec
sub
mov
pop
aad
jle
scas
jno
push
ljmp
pop
mov
fwait
and
mov
fcomip
lds
mov
or
mov
fwait
imul
sub
shll
testb
xchg
movsb
mov
push
das
pop
in
fwait
push
mov
sbb
cmp
jecxz
xchg
adc
cmp
sub
in
mov
push
push
add
adc
mov
cmp
mov
pusha
sti
mov
mov
push
push
fidivrl
pushf
or
mov
fwait
or
adc
ss
xchg
adc
sbb
jle
loopne
cmp
bound
fldcw
aas
mov
mov
inc
mov
and
adc
jmp
lret
and
fsubp
push
sbb
rcll
shlb
mov
dec
mov
mov
and
leave
add
sbb
sbb
das
push
decl
lock
cmp
push
stos
mov
xchg
add
mov
push
add
or
pushl
ljmp
mov
inc
or
dec
aam
cmp
scas
cmpsb
addl
and
mov
and
rorl
xor
test
fistpll
pop
add
jns
les
cmp
lcall
stos
or
fsubrs
adc
popa
mov
push
inc
lret
mov
pop
fisubrl
adc
mov
popf
push
xchg
dec
sahf
pop
cli
int3
add
loopne
pop
fs
lret
stc
js
sub
jnp
bound
mov
popl
lret
cld
dec
fidivs
adc
into
add
push
or
mov
mov
lods
inc
clc
mov
out
cmp
fadds
xchg
leave
cmp
sbb
mov
out
add
adc
sub
pushf
fisttpll
jo
ds
shl
loopne
imul
or
imul
cmc
aaa
mov
imul
sub
inc
xor
lods
and
sub
ja
add
mov
call
dec
cwtl
outsl
icebp
imul
inc
inc
ljmp
dec
bound
aas
add
lods
jno
addb
adc
stos
xlat
ljmp
pushf
dec
loopne
cmp
push
shlb
je
and
jle
push
jns
das
inc
cli
cs
and
mov
or
in
jne
repz
scas
scas
jns
js
push
and
outsl
ret
fmuls
fdivrl
adc
pop
pop
repnz
mov
das
cmp
cmp
insl
loope
jbe
mov
stos
mov
movsb
xchg
dec
push
or
mov
pop
pop
mov
sbb
cltd
jbe
pop
test
lret
mov
cs
test
or
mov
fbstp
jbe
mov
andl
cmp
fwait
in
lret
mov
imul
out
adc
push
stc
add
popf
dec
mov
iret
inc
ret
sbb
sub
sar
cmovp
out
add
in
andl
cld
cmpsl
xchg
push
pop
inc
xchg
inc
xchg
test
and
adc
pop
adc
pusha
fwait
xchg
scas
int3
inc
and
or
add
push
push
mov
xorl
iret
outsl
icebp
jge,pn
or
cs
sahf
test
mov
fldcw
xlat
aad
inc
sub
js
out
inc
test
push
lret
int
mov
pop
xchg
js
add
and
mov
mov
arpl
mov
push
icebp
push
add
inc
mov
xchg
icebp
pop
lds
xchg
shl
out
xor
mov
inc
aad
dec
mov
adc
addb
out
add
bound
outsb
or
mov
mov
jle
fisubl
mov
movzbl
jp
outsl
lods
mov
out
adc
dec
push
xor
orl
lret
push
and
xchg
sbb
vmaxps
push
popf
xor
int3
pop
push
stos
jne
xstore-rng
cmpsl
rcll
jb
xchg
int3
fdiv
in
stc
test
hlt
sbb
or
mov
insb
enter
out
shl
mov
out
loope
dec
out
rclb
test
popf
mov
test
scas
incb
loopne
dec
pop
aaa
repz
sub
sahf
xor
lret
icebp
pop
cmp
pop
in
lds
mov
sti
push
mov
repnz
fisubl
es
arpl
shll
mov
push
scas
in
dec
fmul
nop
pop
push
mov
fnstenv
pop
jnp
jae
mov
je
popf
sbb
sub
in
imul
mov
and
movsb
jmp
cmp
rcrl
xchg
aam
inc
mov
mov
jmp
cs
mov
pop
xchg
or
jmp
lcall
aam
xlat
test
mov
mov
and
push
pop
sbb
pop
lcall
loope
sbb
movsb
aas
cmp
outsb
or
fnstsw
dec
add
jae
mov
lds
jle
sub
js
mov
lret
outsl
sbb
idiv
lahf
mov
cmp
dec
clc
pop
pop
sahf
jp
out
jp
fimull
mov
sub
es
sbb
cli
out
xchg
mov
pop
icebp
and
call
cwtl
outsb
push
mov
loope
sub
mov
xor
sub
jle
mov
xorl
pop
mov
jb
aas
jecxz
sbb
pop
sub
mov
out
xlat
outsb
roll
es
out
mov
pop
ds
out
nop
mov
cmpsb
push
ljmp
sarb
pop
sbb
jle
jle
xchg
or
ljmp
push
mov
pop
dec
into
adc
scas
and
scas
pop
jecxz
pop
push
stos
loop
push
test
mov
into
pop
inc
icebp
pop
das
push
adc
jl
je
jbe
add
int3
into
lods
insb
lock
fdivrs
dec
jno
pop
push
mov
das
mov
int
insl
or
push
in
add
nop
mov
std
inc
xchg
mov
cmpsl
push
insl
xorl
aam
lods
inc
xrelease
mov
loop
in
iret
mov
sbb
jmp
mov
cmp
mov
sub
mov
sahf
ret
or
cmp
mov
inc
nop
mov
movb
movsb
mov
mov
add
outsb
lods
mov
ljmp
push
add
jle
xchg
sub
fwait
mov
dec
or
cmpsl
ds
push
out
fsubr
mov
mov
rcrl
popa
arpl
rorb
addr16
push
push
lea
mov
mov
pop
jge
addr16
arpl
xlat
int
pusha
orb
push
outsl
xor
aam
mov
cs
xchg
jbe
inc
movsl
add
pusha
xor
jmp
pop
push
jno
iretw
mov
mov
xchg
sbb
gs
outsl
push
je
mov
lcall
adc
js
loope
cmp
in
aam
adcl
jecxz
cmp
sub
nop
xor
sbb
and
rclb
add
lret
fwait
test
or
sahf
cmp
push
jb
add
daa
push
mov
inc
sbb
clc
cmpsl
jo,pt
push
mov
xchg
push
cmp
sub
enter
ljmp
jecxz
mov
out
outsb
dec
push
dec
pushf
jmp
popa
cmp
mov
push
cld
out
jbe
jnp
movups
pushf
ja
pop
pop
and
sar
xchg
adc
jl
sub
xchg
lahf
xor
stos
xchg
cmpsl
aad
bnd
out
sub
xchg
cmpsb
pop
inc
pop
xchg
repz
inc
add
push
xor
clc
push
pusha
lds
std
int3
pusha
sbb
imul
pop
mov
mov
pop
xor
lcall
scas
sub
mov
add
lock
aam
scas
outsb
jae
mov
int
and
mov
xlat
sub
cmp
pop
out
xor
hlt
cmp
cltd
aaa
dec
lret
push
xchg
cmp
out
rcll
inc
pop
mov
xlat
imul
lock
and
xchg
sbb
imul
les
sti
call
jb
dec
cli
xchg
cmp
mov
sbb
inc
adc
sub
dec
scas
sahf
sub
mov
and
dec
mov
rcrl
stos
inc
call
mov
jmp
iret
mov
pop
out
jno
imul
push
out
xchg
mov
sub
shlb
sahf
jmp
je
inc
pop
xor
add
fisubrs
cmc
xchg
push
mov
push
cli
fwait
jecxz
adc
leave
jae
or
push
and
popa
dec
fisubs
dec
adc
data16
in
das
cld
test
pushf
je
adc
hlt
mov
jmp
movsl
rorl
sub
mov
sub
addl
repz
push
push
stos
or
xlat
jb
mov
sbbb
add
movsl
out
push
mov
dec
rcr
jp
and
leave
and
mov
sbb
xchg
ret
test
lds
fstpt
pop
xchg
mov
jp
test
cmp
inc
or
fimuls
incl
jno
pop
repz
xchg
inc
adc
int3
cltd
jp
pushf
rcrl
jecxz
aaa
adc
test
lret
push
add
mov
jae
stos
and
jne
jg
jno
push
imul
xor
cmp
rep
adc
mov
sbb
sbb
clc
mov
outsb
add
pushf
cmp
add
es
push
mov
pop
popf
push
out
pop
jb
fisttpll
jg
inc
pop
sarb
pushf
add
lret
mov
pop
gs
in
fstpt
xchg
nop
xor
push
icebp
test
mov
cmp
jg
pop
sbb
xchg
inc
imul
cs
insl
mov
call
fxch
fs
mov
sub
out
outsl
inc
and
xlat
shl
pop
addr16
ret
std
xchg
jmp
movsl
ret
test
mov
aas
int
xchg
xlat
add
fcmovnb
cltd
fwait
into
mov
pop
out
outsl
sbb
lea
push
sbbb
cmc
mov
pop
bound
xchg
pop
jg
in
xor
loop
popf
in
mov
sbb
fadd
xchg
rcll
mov
rclb
popa
add
pop
mov
sub
testb
xchg
push
insl
dec
mov
and
insb
add
hlt
mov
push
add
hlt
adc
cmp
push
push
ds
xchg
jg
dec
dec
fildl
repnz
loope
fldl2t
popa
mov
mov
push
scas
jecxz
aas
movsl
cwtl
pop
pop
adc
repnz
js
jl
inc
pop
adc
cwtl
stos
mull
insb
sub
mov
pop
imul
ds
lret
es
pop
cmpsb
fbstp
repz
xchg
movsl
jl
pop
jmp
adc
cmp
or
test
nop
loop
repnz
inc
or
xor
cwtl
stos
cs
xchg
mov
fcmove
or
inc
fdivrp
sub
jg
loope
jnp
add
and
add
mov
dec
loopne
sbbb
xor
addr16
pop
inc
dec
dec
cmp
jnp
xchg
sub
sub
jbe
jl
dec
scas
sbb
movb
out
repnz
notb
sbb
jle
and
pop
mov
insl
sbb
adc
inc
clc
mov
iret
xor
icebp
and
in
div
and
fprem
inc
test
mov
dec
dec
ljmp
aas
call
cwtl
and
out
in
aam
jne
icebp
fistps
imul
aam
or
inc
mov
jge
daa
xor
stos
es
lahf
ss
je
stc
sub
lcall
xchg
xchg
dec
mov
cltd
or
in
nop
daa
pop
mov
and
icebp
pop
insb
mov
stc
imul
dec
mov
test
out
add
mov
jle
xchg
roll
add
popa
andl
dec
cmp
push
in
push
add
aas
mov
xchg
pusha
mov
and
cmp
ljmp
xchg
cli
sub
or
mov
add
mov
jecxz
ss
jne
inc
xor
sbb
fs
adc
xchg
sahf
push
adc
jb
and
sar
jmp
pop
adc
fstl
jmp
lods
push
faddl
push
faddp
out
mov
in
in
cmp
sub
cmp
mov
mov
and
repnz
movsb
inc
and
and
fs
call
mov
insl
rcrb
ss
iret
fsts
insl
fisubl
sbbl
jmp
sbb
test
xchg
iret
push
scas
cs
sbb
in
fmul
xchg
jns
std
xor
mov
sarl
push
in
and
fs
add
adc
in
push
sahf
mov
xor
sbb
push
cmc
loopne
xor
sar
xchg
add
fsubrl
in
cmp
add
inc
fstpl
lahf
scas
jge
sti
scas
inc
pop
xchg
or
bound
nop
xor
insl
gs
push
aam
xchg
es
pop
adc
mov
test
xor
imul
add
or
loope
int
mov
imul
aam
or
cmpsb
sub
xchg
pop
test
lods
sbb
or
stc
add
mov
mov
jge
fisttps
xchg
pop
std
fsts
das
jg
divl
xchg
ficompl
jg
dec
sti
subb
test
fcom
repnz
mov
sbb
mov
aad
pop
rcl
rcr
xor
mov
cmpsl
cmpsb
sub
in
movsb
out
mov
dec
dec
lods
cmp
in
lret
dec
cmpsb
ja
fbld
test
lret
lea
add
sub
xor
je
xor
cmp
push
movb
xchg
dec
adc
bound
dec
jbe
jnp
jae
adcl
out
movsb
jbe
xlat
mov
in
xor
cmp
mov
insb
mul
xchg
sub
push
and
lea
or
mov
xchg
pop
xchg
jns
add
jbe
push
push
dec
out
sbb
ljmp
mov
jmp
popa
sbb
repz
jge
pushf
mov
add
lock
daa
lods
test
repz
movsb
outsl
les
cmp
ret
or
sub
pop
pop
mov
mov
int
imul
cs
jae
bound
dec
lock
sub
dec
mov
ficompl
scas
jne
into
pop
outsl
pop
and
mov
mov
and
mov
aaa
bnd
pop
rcll
jmp
jno
out
inc
fldl
push
mov
imul
cmp
nop
out
cmp
data16
fldl
and
popa
pop
imul
dec
lods
jo
and
cmpsl
sarl
add
mov
mulb
jecxz
pop
insb
cmpsl
add
push
cld
dec
inc
fidivrl
mov
aas
jl
popa
add
aam
cli
adc
daa
sbb
sub
int3
pop
in
mov
jge
mov
add
sbb
push
cwtl
xchg
cmp
popf
test
sbb
add
notb
outsb
mov
sbb
push
dec
in
hlt
dec
movsb
mov
cwtl
xchg
fldenv
mov
clc
mov
movsl
dec
inc
rcl
adc
sub
lcall
mov
fdivl
mov
mov
cld
jg
xor
inc
add
out
es
testb
push
xchg
dec
fwait
lahf
mov
and
outsl
sub
cltd
sahf
lds
mov
inc
testl
fiaddl
and
idivl
jmp
pop
lods
mov
ret
pushf
mov
movsl
pop
repnz
clc
cmp
jns
dec
popf
mov
ret
push
sub
stos
rol
jmp
notb
cmp
push
addl
out
mov
in
jmp
xor
xchg
sub
pusha
movsl
cld
popf
cld
aad
out
inc
jns
push
mov
adc
and
js
ds
jb
sbb
into
hlt
test
push
in
sarl
lock
outsl
jb
pop
outsb
cmp
pop
and
daa
jle
inc
in
mov
clc
inc
roll
xchg
or
imul
pop
leave
jecxz
jbe
pop
push
andb
cmp
das
mov
fnstenv
or
mov
nop
fdiv
mov
int3
sti
pop
movsl
in
in
into
xor
aam
push
pop
push
je
mov
sub
mov
sbb
fldl
xchg
and
fwait
cmpsl
xor
mov
xchg
xchg
jp
add
fs
out
pop
and
push
sbb
adc
jmp
push
lds
subps
pop
sub
rcll
cmpsl
movsl
mov
or
outsl
jg
inc
cmp
stos
push
es
aad
lret
flds
ret
adc
pusha
pop
imul
addr16
mov
aam
test
mov
xchg
popl
sbb
mov
sbb
pushf
xchg
mov
pop
ficompl
fstpt
fistl
push
icebp
and
pop
pushl
pop
scas
jmp
out
push
xchg
fdivl
jl
mov
mov
outsb
mov
push
fs
dec
inc
mov
rcrb
jno
shrb
int
sahf
repz
sahf
rcrl
inc
pusha
adc
push
adc
mov
and
mov
cld
addr16
jne
add
pop
aas
mov
mov
or
jl
pop
add
fmuls
or
cmp
in
pop
das
outsl
inc
push
outsl
dec
push
inc
incb
aas
mov
push
aas
jbe
data16
xlat
xchg
sti
dec
mov
dec
loop
stos
mov
ficoms
mov
mov
adc
push
aam
or
outsb
popa
mov
cmpsb
imul
mov
and
mov
ret
cmpsl
fdivrl
or
and
in
mov
xor
xchg
add
sbb
in
inc
push
dec
nop
mov
cmp
data16
adc
les
cmp
mov
mov
inc
fdivrs
js
cmp
pusha
or
jae
jmp
pop
out
rcl
mov
lods
fistpl
ss
data16
clc
push
fistps
in
inc
pop
jg
cmp
shr
pop
dec
roll
jne
or
push
fwait
push
mov
stos
push
gs
push
sbb
movsl
decl
leave
dec
outsl
mov
add
push
pop
and
imul
jp
xchg
jns
lahf
adc
cld
mov
fldl
mov
gs
out
mov
arpl
outsl
cli
or
adc
adc
mov
cld
push
es
jae
ja
nop
mov
cmp
jb
pop
jae
adc
push
inc
icebp
pop
js
xchg
dec
int3
push
pop
call
fimull
inc
sti
push
fcomps
dec
sti
outsl
pop
lcall
and
adc
in
inc
lods
jecxz
fsubl
imul
out
xor
jnp
aam
xor
fcmove
loope
repz
jnp
daa
lret
add
push
std
mov
arpl
push
xor
xor
andl
pop
add
popf
das
test
in
push
and
setge
pusha
push
lcall
xor
sbb
jecxz
push
and
mov
les
lret
mov
pop
mov
icebp
mov
pop
mov
lods
fdivs
ret
cmp
addb
int
mov
lock
or
xor
push
cmpsl
icebp
add
jmp
cmpl
pop
stos
leave
loopne
jge
mov
cld
gs
sarb
fnstenv
mov
out
loope
push
aaa
in
test
sub
push
lcall
and
dec
xor
aam
pop
dec
xor
leave
mov
xchg
sub
sub
sub
jns
jmp
adc
loop
rolb
jle
xor
fists
je
mov
decl
xchg
mov
jmp
imul
divb
int
adc
fwait
jg
jp
jmp
popa
or
int
aam
movsb
jecxz
dec
lods
pop
int
notl
stos
push
insl
je
std
or
mov
lret
rolb
lcall
or
out
lds
fldcw
ljmp
pop
cmpsb
std
mov
sti
pop
xchg
xor
out
std
xchg
ror
mov
jb
sbb
and
and
adcb
lcall
stc
mov
jb
clc
sub
mov
dec
push
adc
xchg
and
add
stos
sub
add
dec
xor
jae
mov
xchg
popf
lcall
fistl
or
jp
xor
xor
xor
jnp
xchg
cmp
adc
insl
xor
cmp
or
mov
pusha
stc
cmpsb
adc
sbb
dec
bndstx
dec
jecxz
cmp
shl
sub
push
inc
mov
iret
mov
addr16
in
push
adc
pop
inc
inc
xlat
jb
fldenv
in
jne
in
test
ja
mov
ja
and
bound
and
or
jnp
sarl
xor
scas
ret
mov
popf
enter
es
or
sub
push
push
in
test
dec
inc
sti
cmp
xlat
outsb
mov
and
ljmp
pushf
cmpb
sub
pop
pop
repz
jne
dec
add
sbb
add
mov
call
pushf
scas
xchg
in
test
push
jnp
pusha
xchg
test
adc
out
xor
or
mov
data16
push
adc
xlat
xlat
shrl
nop
and
or
and
xchg
mov
cmc
nop
mov
stos
sub
mov
addr16
icebp
inc
jbe
ja
test
je
xor
and
adc
dec
pop
xlat
repnz
push
lret
aaa
psrlq
leave
xchg
push
push
out
push
xchg
dec
lcall
dec
jno
lock
jb
sub
fcomps
and
mov
rolb
nop
daa
sbb
push
roll
jns
inc
push
bound
lods
xchg
sahf
ljmp
std
adc
mov
pop
jno
dec
insb
lods
mov
repnz
dec
mov
hlt
jecxz
xor
movsl
js
mov
jno
outsb
xchg
jb
test
add
scas
cli
push
loope
scas
adc
push
push
xchg
dec
inc
loope
xor
cmp
push
ret
inc
std
call
test
sbb
pop
and
push
push
sbb
movsl
icebp
xchg
add
mov
push
xchg
xchg
test
pop
int
out
pop
sub
inc
dec
imul
push
call
lahf
pop
outsl
test
push
cli
xchg
pop
adc
shlb
cs
int3
mov
sbb
mov
cmp
call
test
jnp
cmpsl
push
iret
test
gs
push
jle
push
inc
or
jge
push
test
jge
lods
sub
mov
mov
push
xchg
sub
adc
pop
movsl
out
test
sbb
pop
dec
loope
lret
clc
lods
jmp
cs
pop
cmp
fsub
push
jae
iret
hlt
xchg
xor
adc
sub
and
fsubl
inc
sub
pop
cmp
xchg
stos
xor
mov
jnp
xchg
pop
flds
adc
adc
pop
xchg
xchg
mov
add
cmp
and
mov
push
and
inc
mov
cmc
movsb
lds
sub
push
insl
inc
sbb
inc
mov
cmp
bound
adc
cmpsb
sbb
add
mov
shrb
sub
mov
cmp
adc
pop
jle
mov
movsl
ja
sbb
repnz
addl
int
cld
inc
xchg
push
shrl
es
push
mov
loope
addr16
dec
add
pushf
dec
lea
xlat
mov
cmpsb
sbb
dec
xchg
dec
inc
arpl
pop
xchg
lahf
into
pop
jmp
shll
mov
outsl
lret
push
lret
xor
in
lock
sub
test
push
xlat
mov
or
out
adc
sbb
push
add
jle
push
add
mov
les
or
in
jmp
sbb
das
dec
dec
decb
pop
in
andl
or
sti
sub
or
pop
adc
jg
loopne
cmpsl
mov
mov
fdivr
ds
in
pop
push
test
or
or
jb
jbe
ret
or
movb
mov
push
movsl
in
push
jle
xchg
pusha
jae
and
out
cmp
mov
sbb
mov
imull
mov
mov
add
clc
dec
jae
push
mov
push
mov
mov
mov
dec
aaa
cltd
ja
js
mov
jge
and
add
fwait
mov
loop
sahf
adc
and
sbb
andb
in
lahf
mov
sbb
push
and
xor
add
test
push
push
ljmp
or
xchg
sbb
fwait
lods
test
cmp
cmp
push
sahf
xor
pop
es
lcall
jns
push
stos
ficoms
insl
loopne
ljmp
push
in
sbb
adc
xchg
les
sub
or
imulb
mov
mov
aam
push
std
rolb
sbb
dec
sbb
icebp
pop
cmp
push
dec
add
push
popa
cwtl
lods
pop
push
insb
jmp
jns
add
ret
call
lcall
gs
shrl
daa
pop
jnp
sarb
fiadds
rclb
mov
adc
mov
mov
outsl
insl
and
dec
mov
sub
ds
or
pop
ljmp
push
adc
lcall
shll
cltd
out
dec
ds
cli
pop
inc
or
movsl
repnz
and
sbb
xor
jle
mov
mov
faddl
scas
js
xchg
mov
push
mov
add
xchg
shrl
xor
mov
sbb
lcall
loopne
fisubrs
cli
or
cwtl
stos
testb
cmc
ficompl
jmp
testb
mov
sub
incb
xchg
cmp
fcompl
insl
cmp
cs
andl
push
mov
dec
mov
jle
dec
pop
gs
mov
rolb
mov
movsl
push
or
push
hlt
cmp
sub
xchg
xor
test
aad
pushf
enter
jmp
dec
arpl
or
out
repnz
shlb
mov
xor
adcb
test
jle
sbb
push
push
in
aaa
mov
je
fisttps
idivb
fucomip
push
jle
fsubl
mov
popf
or
insb
jl
sbb
sub
movl
popa
xorb
cmp
mov
xlat
cmp
divl
adc
mov
xchg
jnp
lods
popa
fcompl
in
mov
xchg
adc
fnstsw
push
rclb
stos
ret
iret
mov
ret
jb
jns
mov
out
push
mov
adc
aaa
xchg
and
or
pop
cld
addr16
adcb
inc
cli
mull
andl
sbb
cmpb
mov
out
sbbl
call
inc
cmc
push
std
aad
cmc
pop
and
or
sbb
jne
or
js
sbb
es
jp
cmp
das
cmpsb
inc
xor
inc
pushf
rorl
jns
mov
jge
scas
int
jnp
cwtd
add
sarl
fisubrl
xlat
cmp
sub
hlt
rorb
xorb
das
inc
pop
mov
iret
mov
jp
int3
popa
jl
push
fld
mov
test
mov
jecxz
xor
push
jb
cli
mov
mov
or
out
pop
movsl
lds
aas
in
jg
faddl
cld
popl
sub
clc
dec
lahf
cltd
icebp
dec
out
hlt
dec
dec
inc
sub
cmpsb
jne
cmp
xchg
pop
adc
jne
mov
xchg
mov
xchg
outsb
out
jmp
inc
cmp
xchg
int
mov
mov
and
xchg
aam
pop
adc
xchg
lods
cmp
sub
gs
push
lret
sub
cs
add
cmpsb
std
dec
inc
sub
insl
adcl
popa
fstpt
movsl
dec
mov
jg
xchg
pop
loop
lret
popa
daa
cmpl
dec
call
out
pop
xor
lds
mov
pushf
dec
jg
arpl
inc
adc
mov
imulb
js
out
nop
insl
jne
outsl
repnz
hlt
fisttpll
xchg
add
stc
inc
enter
aas
inc
inc
sbb
cwtl
sti
aam
lahf
pushf
cmp
lret
into
fcomip
push
push
outsl
cmpsl
inc
xor
push
push
pop
rolb
sbb
mov
lcall
test
sub
adc
pop
enter
jp
and
mov
xchg
pop
xor
rcrl
pop
adc
cmp
sub
sbb
lahf
push
sub
js
or
nop
adc
mov
adc
add
inc
adc
push
pop
lock
es
cwtl
stos
xor
push
xor
fnstcw
and
xchg
push
test
inc
loopne
je
sub
adc
cmpl
or
mov
ja
enter
ficoms
mov
push
mov
movsb
mov
scas
sub
mov
int
adc
push
and
loopne
out
sbb
and
popf
test
lret
jp
add
lcall
sbb
lods
sbb
aam
imul
testb
add
sub
rcrb
xor
enter
push
daa
cmp
or
adc
push
insl
sbb
mov
in
mov
add
mov
and
push
pop
iret
jge
or
dec
push
jmp
movsl
rorb
adc
mov
or
cltd
push
or
or
mov
sarl
jo
adc
pop
dec
mov
cmp
push
pop
or
cld
decb
push
hlt
bndstx
xchg
add
fsts
mov
mov
sub
cmc
in
inc
mov
mov
mov
fsubrs
inc
fsub
out
repz
fsubrl
jo
pop
mov
jns
pop
ljmp
ret
fdivl
mov
mov
dec
shl
xor
add
pop
jg
rol
in
popf
sbb
repnz
jle
fwait
jns
jno
int
int
push
xlat
aaa
int
insl
push
pop
pop
insb
mov
cmpsl
xor
mov
or
popl
shlb
pusha
xorb
fidivs
imul
cmovle
xor
clc
popa
imull
dec
sti
and
inc
or
xchg
add
lahf
push
mov
add
mov
pusha
sbb
call
outsb
leave
mov
je
push
test
mov
cmp
popf
pop
insb
std
ret
jnp
and
clc
mov
dec
jno
inc
bound
fildll
arpl
and
outsb
lods
pop
pop
mov
bound
add
mov
push
mov
movsb
inc
bound
or
and
ja
cmp
adc
adc
repnz
loop
cmp
pop
and
popa
sub
outsl
mov
lret
fildl
push
mov
imul
syscall
push
lods
insb
lahf
data16
imul
sti
aas
lahf
mov
icebp
mov
push
cltd
mov
pminub
movl
test
int
jb
cmp
clc
push
jmp
int
shl
jb
inc
repz
scas
mov
arpl
lods
ss
inc
adc
scas
cs
pop
xor
mov
rcrl
fmull
xchg
mov
pop
mov
inc
in
sub
push
stc
xchg
jae
sbb
lahf
fcompl
and
fistpll
lock
inc
in
jb
in
jmp
lea
push
pop
loopne
adc
dec
xor
jno
loope
add
mov
xchg
xchg
push
fcomps
test
mov
es
inc
cmp
jno
insb
inc
pop
movl
dec
mov
xchg
in
iret
cld
push
loope
lock
in
push
loop
inc
sarl
mov
enter
mov
aam
pop
scas
add
rcrl
imul
js
adc
xchg
dec
pop
es
mov
push
xor
and
lcall
or
adc
push
mov
fcom
pop
xchg
or
fsubrl
insb
sub
inc
rcrb
sbbb
pop
jl
sahf
stos
sub
insl
add
pop
dec
pusha
mov
or
mov
adc
push
cmp
cmpsl
sub
push
lods
daa
stos
test
inc
stc
dec
lahf
mov
sbb
int3
push
jle
out
and
dec
movsl
xor
cwtl
jne
or
repz
add
iret
inc
and
adc
andb
jnp
js
mov
cmp
jge
dec
pop
das
mov
adc
testb
jo
into
inc
xlat
pushl
fldl
fnsave
fsubs
mov
jp
push
mov
and
cmp
push
pop
push
addl
test
adc
scas
ljmp
ficomps
pop
aaa
lret
fstpl
gs
lahf
adc
jg,pt
jo
lret
bound
mov
pop
adc
jp
inc
and
pop
jmp
or
mov
nop
xchg
mov
push
sbb
enter
f2xm1
and
mov
adc
add
test
xchg
stos
pop
sub
sub
sbbl
adc
aaa
lea
ss
test
dec
push
adc
inc
cs
sbb
sub
fidivl
mov
pop
add
insb
in
jns
add
hlt
pop
nop
out
push
dec
dec
iret
cs
call
pusha
lret
scas
xchg
mov
fisubrs
and
dec
roll
test
xorl
out
ret
mov
pop
aaa
jmp
push
mov
lods
jmp
xor
dec
arpl
stc
or
push
cli
lock
push
mov
inc
bound
lahf
lret
xchg
mov
or
popa
mov
cmc
cld
xchg
jecxz
dec
cmp
cmp
scas
cmpb
or
mov
mov
pop
xchg
pop
aad
xorb
pop
adc
ds
test
jo
pop
and
push
push
lret
sbb
enter
push
outsb
adc
flds
aaa
adc
mov
mov
mov
cmp
les
sbb
push
movsb
jp
mov
xlat
xor
cld
test
push
pop
sahf
cmpsb
je
push
jmp
and
and
in
scas
sbbb
ljmp
fs
pop
repnz
pop
in
fwait
pop
mov
pop
repz
and
push
and
aad
in
mov
insb
imul
fildll
cmc
push
shl
jns
mov
sti
fwait
les
in
sub
movsl
cltd
sub
mov
loop
aaa
cltd
sbb
fimull
mov
sbb
cmpsb
stos
popf
sbb
outsl
test
push
mov
inc
push
sub
frstor
popf
imul
in
sub
hlt
xchg
mov
xchg
inc
mov
push
push
pop
add
xchg
insl
insb
xchg
dec
pop
das
add
lret
dec
loope
pushf
enter
aaa
mov
mov
leave
loopne
jmp
js
lods
test
iret
pusha
testl
pop
jg
int
ret
sbb
ret
add
xchg
sbb
push
std
mov
xchg
add
sti
int
mov
mov
aas
adc
cs
fwait
or
jne
xor
enter
inc
xor
sbb
jecxz
shrl
lahf
lock
out
xchg
sahf
dec
cmpsb
cltd
out
scas
out
mov
sbb
divb
push
je
jo
and
andb
pop
idivb
es
or
dec
and
sub
shl
dec
neg
jns
in
xor
add
mov
insb
lods
int
and
popf
pop
ss
test
xor
xchg
and
out
pushf
jg
insl
cmp
push
out
dec
mov
fidivrl
mov
inc
dec
or
popf
loope
fcmovne
shrb
mov
pusha
mov
iret
push
inc
xor
cmp
pop
outsl
add
xchg
stos
xchg
ss
shrl
pop
arpl
dec
incl
sub
xor
jecxz
gs
push
lods
jg
idivl
cmpsl
stos
xor
and
ret
and
fldt
jbe
into
jmp
push
inc
inc
xor
movsb
repnz
xor
in
mov
sahf
cmp
mov
jmp
mov
mov
inc
or
ds
dec
cmp
pop
adc
cmp
test
pop
xor
or
addb
addr16
stos
js
xchg
and
mov
mov
pop
repz
mov
pop
ret
sbb
stos
mov
push
int3
jbe
jae
inc
sub
shr
inc
dec
enter
sbb
lcall
out
sahf
adc
xchg
out
jle
popf
mov
das
push
test
jbe
stos
inc
aas
xor
stos
and
jno
push
pop
adc
lods
inc
push
orl
repz
jb
js
mov
cmp
repz
push
test
fidivrs
fsts
dec
loopne
mov
imul
lea
cmp
cld
push
ret
or
shl
mov
inc
test
xor
or
andl
or
pop
insb
sbbl
sbb
shlb
xchg
pop
repnz
sbb
movsl
imul
out
int3
fsubp
and
cmp
sub
das
push
cld
pop
pop
mov
mov
lock
fs
ja
in
jno
mov
xchg
sbb
xchg
fdivrs
in
jns
cmp
imul
loope
mov
mov
imul
mov
das
add
pop
mov
enter
pop
rcl
xchg
adc
pop
pop
lcall
adc
sti
pop
jae
jo
fisubl
pusha
divl
out
das
xor
stos
in
ja
dec
adc
sbbl
mov
xchg
jmp
mov
es
lahf
or
cmp
leave
xchg
pop
xor
mov
repz
ds
jno
divb
div
subl
imul
jo
jno
or
push
mov
xchg
sbb
fwait
test
jg
outsl
in
push
shlb
push
das
cmp
mov
adc
inc
mov
scas
inc
push
push
js
movsb
and
and
and
lret
xor
lock
sub
inc
ljmp
aaa
es
imul
mov
sbb
and
jo
das
retw
dec
fmul
mov
je
out
and
and
cmp
ret
dec
stc
and
in
ret
sbb
xchg
pushf
add
clc
push
sbb
mov
add
or
push
xchg
cmpsl
mov
int
addr16
inc
xchg
js
sbb
shl
cmpsb
test
cmc
dec
adc
xor
push
popa
cli
cmp
in
in
adc
sub
sbb
jge
in
lret
lahf
mov
dec
push
stos
repnz
bound
popf
sub
ret
gs
pop
push
push
jge
mov
test
cmpsl
test
repnz
dec
cld
cmpsl
dec
and
adc
mov
repz
mov
call
adc
inc
out
pop
das
xchg
inc
and
mov
rorb
push
jo
insl
shrb
in
xor
mov
sub
loopne
xchg
loopne
mov
jecxz
push
cmp
in
cmp
adc
das
cmpsl
jo
cwtl
inc
fcmovne
clc
sti
and
adc
mov
das
inc
pop
lock
mov
sahf
neg
out
rcrb
mov
pop
in
in
pop
jge
aas
stos
pop
fldcw
cmc
xor
add
outsl
cmpsl
dec
or
ffreep
mov
jnp
and
sub
jge
std
roll
fwait
mov
fidivl
dec
adc
outsb
and
or
gs
xchg
xchg
xor
out
ljmp
xchg
jecxz
lret
mov
lock
add
imul
gs
out
sbb
outsb
and
dec
and
popa
add
sbb
mov
jmp
enter
fdivs
push
fcomi
shrl
adc
mov
fidivl
movsl
add
lods
sub
mov
int
dec
inc
aam
add
mov
add
sub
inc
lret
xchg
cmp
pop
dec
shlb
pusha
push
out
push
lea
imul
outsb
popa
clc
pop
pop
stos
pop
add
jg
ljmp
popf
std
data16
lret
cltd
out
jle
addr16
cmp
xor
pop
mov
aam
or
sbb
jnp
push
pop
ret
es
out
push
jne
sub
cmp
sub
daa
mov
daa
icebp
inc
pop
inc
stc
xor
push
pop
mov
and
and
add
xor
outsb
jae
jno
mov
arpl
ret
repz
aaa
pushf
sbb
cmp
pop
jg
ds
mov
lret
vpinsrw
and
mov
jno
sub
jnp
push
or
ficoml
push
sbb
loop
cmp
sarl
or
jno
mov
in
inc
and
pushf
sub
add
pop
mov
clc
adc
cld
inc
pop
jb
into
push
hlt
popf
andb
jl
or
cmp
insb
lods
pop
stc
or
ljmp
cld
xchg
sub
cwtl
rcrl
int3
mov
addr16
divb
add
mov
xchg
aas
adc
push
hlt
push
idivb
fmul
ret
xchg
or
mov
sub
fdivrs
xchg
sub
sar
fdivs
pop
adc
test
aaa
mov
mov
cmp
ffreep
pop
or
es
scas
inc
xchg
loope
sbb
and
cwtl
xchg
add
sbb
mov
mov
or
jo
lds
mov
inc
cmpsb
jno
mulb
outsb
lds
mov
insl
push
cmpsl
xchg
les
xor
fstpl
cmp
push
cltd
mov
ja
add
test
mov
jne
or
stc
cmovns
add
pop
repnz
and
dec
pop
push
ret
stc
and
mov
push
pop
pop
cmc
loope
jl
movsl
add
xor
adc
pushf
xor
fbld
or
sbbl
dec
fisttpl
mov
xchg
fsts
mov
xchg
lahf
lret
cmpb
test
xchg
adc
pop
jo
xchg
push
test
out
cmp
mov
xchg
push
cmpsl
in
ds
das
out
mov
push
adc
mov
loop
outsl
pop
lahf
xor
lods
and
mov
int3
in
jl
jmp
pop
test
xchg
jbe
scas
and
idivb
adc
mov
sub
test
pop
rol
fisubrs
pop
and
xor
cld
and
push
inc
push
mov
iret
xor
insb
sub
adc
arpl
and
dec
sahf
out
jnp
mov
scas
fisubrs
iret
push
addr16
iret
data16
sbb
mov
cmp
mov
or
pop
inc
sbbb
repz
cmpsb
out
mov
jo
inc
in
test
jp
aas
fwait
or
fisttpl
or
jno
add
add
sbb
or
in
sti
iret
xchg
mov
cld
aad
add
or
mov
ret
xor
sub
push
push
pop
dec
divb
push
imul
mov
insl
in
push
mov
or
adc
mov
adcb
push
mov
into
push
inc
cs
jns
xchg
jmp
shrl
inc
jl
xchg
ljmp
dec
out
mov
adc
ss
pop
cmp
inc
imul
lahf
in
mov
les
jnp
pop
fwait
cmp
cmp
inc
mov
push
and
adc
leave
mov
mov
jmp
outsb
in
adc
mov
xor
mov
mov
je
dec
sbb
outsl
cwtl
mov
push
pop
imul
or
std
fistl
insb
mov
cli
jno
js
adc
xchg
and
sbb
inc
hlt
xchg
cmp
in
jle
sub
and
add
mov
into
mov
ficoml
dec
stos
mov
push
mov
xchg
icebp
outsb
jge
sbb
xchg
xor
cmp
and
or
ds
rcrl
add
cmp
imul
insb
dec
popa
inc
sti
dec
call
jbe
inc
jle
call
sarb
cmc
dec
lcall
out
pop
sub
mov
out
sub
icebp
ds
arpl
movl
je
sarl
lahf
stos
dec
push
pop
dec
mov
in
jne
cwtl
xor
dec
popa
sar
repnz
jmp
cwtl
in
cmp
clc
aad
add
push
sbb
addr16
lds
xchg
dec
push
lock
cmpsw
jl
aam
dec
inc
xor
jecxz
cltd
aam
repz
mov
int
push
pop
daa
out
cmp
xchg
mov
cmpsl
pop
fstpt
xchg
pop
lret
xlat
lret
hlt
push
sub
inc
cmp
push
dec
mov
test
cli
pop
jg
cmp
and
jns
divl
sub
nop
daa
std
xchg
sub
mov
push
push
mov
subb
add
or
mov
dec
mov
lahf
pop
sarl
int3
cs
sub
lock
xchg
shlb
mov
in
sbbb
push
stos
mov
fwait
das
mov
fcoms
push
cmpsl
mov
dec
out
cmp
pop
ret
xlat
mov
lret
xchg
pop
jb
sti
in
ja
add
iret
mov
add
enter
cmp
loopne,pt
cmpsb
inc
pop
arpl
icebp
shr
and
push
js
inc
or
xor
sub
xor
mov
cwtl
sub
adc
xchg
repnz
js
mov
pop
addr16
sti
dec
and
adcb
push
xor
xor
xchg
mov
push
cmp
je
jge
xlat
jo
in
mov
pop
mov
push
subl
icebp
les
jae
inc
cmpsl
or
loope
cmpsb
lock
sbbl
add
orl
lea
pushf
sub
jg
aad
lods
ret
jb
or
mov
lock
push
stos
pusha
sbb
mov
in
insl
ffree
sbb
push
sub
loopne
xchg
or
push
sub
sbb
pushf
xor
cmp
mov
add
jle
jecxz
aaa
cmp
into
push
out
push
out
jbe
lods
push
fs
jne
xchg
gs
lcall
push
loop
adc
fwait
int
mov
imul
dec
les
imul
pop
out
sbb
jge
sbb
adc
lret
sti
mov
movsb
pop
out
ds
jbe
dec
bound
jo
rorb
sub
sbb
pop
push
mov
mov
push
mov
mov
insb
sti
jle
fnstcw
or
pop
popf
mov
enter
in
cmp
clc
enter
icebp
aam
mov
das
insb
cli
pop
stos
cmpxchg
mov
jno
mov
test
jmp
nop
cmp
es
std
es
sub
push
subb
and
push
jb
push
jg
lock
clc
or
adc
xchg
add
cmp
sbb
das
mov
rcr
cmpsl
mov
nop
cltd
stos
iret
stos
cmp
adc
push
xlat
pop
mov
push
mov
sub
es
jae
sub
mov
lods
push
stc
ret
repnz
sub
sbb
dec
inc
and
add
adc
mov
inc
movd
inc
mov
and
test
pop
fimuls
popa
and
fdivrl
out
movsb
mov
in
insl
push
mov
test
and
sbb
outsl
mov
add
mov
cwtl
adc
gs
pop
jae
mov
pop
repz
adc
dec
divl
push
sbb
pusha
imull
sbb
addb
dec
stc
mov
in
sbb
addr16
lret
lods
pop
mov
jmp
aaa
enter
jmp
in
arpl
mov
fdivl
mov
adc
aam
fdivl
push
or
sti
pop
cmp
cmp
addr16
cmp
sbb
lods
cmc
cld
or
sbb
or
jg
mov
dec
mulb
cmp
rclb
sub
lock
xor
mov
push
dec
inc
add
lock
fstpl
icebp
pop
mul
jno
or
mov
adc
int
mov
jp
mov
jecxz
xor
imul
jge
ss
jp
add
jb,pt
stos
flds
into
inc
jl
nop
inc
outsl
jns
aad
mov
mov
sarl
fildll
loope
out
add
shl
xor
int3
sbb
outsb
pop
jnp
out
lock
es
in
pop
and
jg
mov
push
outsl
divl
cwtl
add
mov
inc
add
lcallw
mov
sahf
push
aaa
pop
lds
pop
movsb
imul
loop
dec
and
mov
shll
mov
lock
mov
or
sarb
dec
cmp
pop
ds
dec
cmp
imul
push
xchg
xlat
daa
push
bound
and
push
fisttpl
xchg
dec
filds
cmp
inc
push
xlat
mov
adc
jne
and
lcall
jnp
push
mov
test
mov
dec
jecxz
sahf
xchg
stc
or
pop
or
adc
push
sub
data16
jae
int
mov
pop
sub
shrb
ret
lods
out
andl
sub
add
rcll
and
add
cs
daa
and
pop
cld
pop
push
std
push
or
cli
xchg
das
mov
mov
mov
sbb
lret
mov
add
push
mov
in
fs
or
pop
mov
and
pop
cwtl
stos
lret
ds
cmp
push
jae
mov
ret
daa
into
jecxz
mov
jo
int
xor
jecxz
mov
jmp
dec
shrl
imul
lock
sbb
mov
push
aad
hlt
push
cmp
push
out
or
sahf
cmp
dec
fldcw
inc
adc
add
inc
adc
jecxz
xor
cld
mov
xor
push
inc
push
mov
mov
mov
mov
or
push
jg
out
mov
push
xchg
push
push
push
adc
in
call
stc
mov
xor
pop
mov
icebp
int
dec
mov
and
shrl
add
fcmovb
aaa
stos
sbb
fcompl
cli
push
rdtsc
fsubl
stos
rorl
mov
mov
clc
sahf
pusha
dec
cmp
mov
pop
jns
leave
mov
in
mov
mov
rcl
xchg
dec
jecxz
loope
cli
int
push
adc
addl
call
scas
dec
cmp
out
xlat
mov
cmpsb
bnd
mov
aad
or
repz
jl
out
xor
mov
cmp
fldl
movsb
out
cwtl
es
arpl
cmp
sahf
xor
add
mov
jnp
mov
ljmp
cmc
mov
aad
in
pop
testl
repz
insl
add
fwait
jbe
movsb
testb
lods
pop
add
aas
ret
mov
hlt
shlb
and
lcall
in
pusha
mov
xor
test
add
cli
sbb
incl
fwait
xor
repz
xor
mov
push
sbb
cs
push
insl
and
std
lods
or
push
and
out
jo
pushf
scas
loopne
push
sarb
bound
mov
jle
jb
jge
test
sub
andb
in
ret
nop
ja
jle
mov
js
popf
sbb
xor
adc
sbbl
aad
lahf
mov
testb
mov
jne
or
lcall
xchg
dec
fisubrl
mov
mov
push
jne
push
pop
lret
notb
imul
movsl
iret
outsb
mov
push
divl
stc
popa
adc
mov
lahf
dec
jae
dec
mov
cmp
add
loopne
pop
fucomp
and
fsubl
outsl
mov
stos
ss
pushf
testb
loope
sahf
sbb
push
mov
dec
push
lahf
and
loop
add
pop
xor
out
mov
clc
mov
cltd
in
xlat
notb
xor
pop
lahf
out
xchg
std
icebp
comiss
mov
mov
int
je
scas
dec
mov
movsb
cmp
pop
cmp
pop
dec
cmp
mov
sbb
rcrb
cmpsl
dec
cmp
aad
jo
cwtl
stos
mov
outsb
test
mov
mov
in
out
dec
push
mov
ss
xor
or
xchg
sbb
js
push
cld
cmp
loope
add
aam
ficompl
sbb
fwait
cmpsl
sub
mov
xchg
lock
inc
loopne
xchg
std
pushf
dec
shll
and
jb
ljmp
push
out
and
jnp
outsl
inc
je
rcrb
ds
push
in
sub
sbb
lahf
repz
mov
mov
dec
loop
rcl
pop
imul
stc
hlt
lods
or
cmpl
lds
js
mov
xor
mov
lcall
adc
pop
movsl
stc
js
gs
int
pusha
fstps
popf
cmpsl
jb
xchg
adc
js
or
int
mov
xchg
iret
das
fwait
dec
pusha
cmpb
icebp
jmp
shll
test
fbld
xor
push
push
pusha
jno
sub
cli
inc
jecxz
add
dec
and
and
iret
orb
cmp
call
jne
sub
push
and
push
jle
add
adc
mov
fcmovbe
dec
es
not
sarb
outsb
push
aad
xchg
jmp
dec
sub
loopne
mov
fsubrl
fs
mov
or
sbb
hlt
fwait
xor
lock
call
xchg
int
or
ja
mov
ret
jmp
fmul
cli
sbbl
pop
incb
and
adc
in
test
or
sarl
decl
jb
mov
add
adc
cltd
mov
push
and
xchg
je
loopne
jns
add
and
inc
push
xor
xchg
jle
sbb
pop
das
or
jns
jne
test
ds
push
pop
xor
and
imul
mov
repnz
dec
mov
pop
xchg
aad
movsb
out
mov
mov
mov
fbstp
movsl
leave
mov
mov
xchg
lods
outsl
push
push
fcmove
sar
out
xor
push
and
pusha
iret
and
mov
jbe
sub
sahf
cmp
push
cmp
push
rcll
movl
push
xchg
jnp
int3
clc
jne
and
int3
out
lret
cld
pop
and
lcall
inc
push
iret
cmpsb
aas
mov
jp
lcall
inc
fiaddl
mov
popa
dec
xchg
jne
hlt
cmpsb
mov
and
push
pop
jb
aaa
inc
jecxz
jne
dec
outsl
addr16
nop
nop
pop
sahf
sub
rolb
jo
in
mov
jp
inc
pusha
aas
dec
mov
das
xor
rclb
shl
into
xor
inc
fnsave
pop
lret
jbe
sti
mov
sarl
mov
daa
leave
stos
inc
sti
dec
out
cmp
testb
sarl
cmp
mov
pop
pop
inc
movsl
push
or
movzbl
pop
push
mov
or
mov
and
and
lahf
decl
pop
cmpsb
mov
lret
cld
pop
fistpll
mov
int3
push
lods
out
lcall
test
jmp
rol
push
inc
outsb
push
mov
xor
or
mov
movsl
and
adc
cmp
sbb
xor
arpl
es
shll
roll
mov
lea
xchg
cmp
lods
pop
xchg
sbb
jae
pusha
mov
fldl2t
pushf
adcl
or
cmp
mov
adc
xchg
xchg
inc
insl
mov
inc
sbb
lock
aad
sub
dec
dec
popa
iret
push
movsb
fisttpl
dec
jl
cmp
xchg
bswap
dec
mov
fisubrl
or
in
or
sbb
inc
movsl
into
inc
xor
outsb
add
pop
idivb
adc
jbe
mov
shll
cmp
insl
int
push
es
push
inc
cs
mov
xlat
add
push
lods
fidivl
ficomps
cmp
dec
in
jae
incl
aam
pop
adc
cltd
xchg
inc
ss
int
push
xor
dec
adc
jbe
cmp
dec
out
cmpb
mov
in
pop
stos
fidivrl
xchg
mov
rcr
xor
xor
xchg
ret
cwtl
scas
xchg
imul
cltd
lock
pop
dec
sub
out
dec
lock
int
ret
stc
pop
cmp
addr16
xchg
mov
dec
mov
dec
mov
idivb
je
pop
and
adc
pcmpgtd
aas
add
in
scas
jmp
and
test
fwait
jae
adc
push
xlat
scas
xchg
cltd
test
mov
dec
dec
cmp
or
push
jl
or
mov
mov
sub
jno
hlt
xor
arpl
gs
imul
aas
ss
cmp
jo
xchg
dec
add
xor
sbb
arpl
sti
adc
outsb
fstps
dec
cmc
hlt
clc
xchg
movsb
xchg
sbb
lods
and
adc
jae
xchg
dec
js
adc
jge
imul
call
mov
cmp
rclb
cmc
and
stos
ret
rcll
scas
fstps
lcall
popa
sbb
lret
inc
lock
adcl
lea
push
into
mov
shl
sub
mov
popa
adc
push
add
and
xchg
negl
add
mov
lea
pop
jnp
inc
ret
adc
add
into
xlat
mov
rclb
imul
or
sub
jl
jnp
inc
pushf
and
push
mov
in
lods
mov
pop
push
jb
mov
in
jb
dec
test
int3
jle
sarb
sbb
and
jno
pop
fdivl
jo
push
data16
push
pop
xchg
add
jecxz
icebp
adc
jnp
mov
stos
call
lahf
add
aaa
mov
sbb
inc
push
cmc
je
jmp
cmpsl
jno
mov
test
fsubrl
xchg
pop
push
or
movsb
repnz
and
sub
or
cmp
dec
xchg
pop
mov
shll
fdivs
xchg
or
cltd
push
pop
punpckldq
push
sbb
mov
adc
lods
push
fcmovbe
push
xor
cmpsl
out
cmc
je
mov
mov
jne
or
xchg
sub
mov
cmc
ss
pop
xor
pop
lahf
pop
jge
jl
iret
incb
nopl
lds
sbb
aaa
fwait
xchg
repnz
das
loop
sbb
orl
add
bound
fiadds
rcrb
scas
gs
xchg
xchg
iret
sbb
loop
sbb
cmp
sahf
jne
dec
loopne
int3
push
aad
add
xchg
aas
outsb
mov
xlat
mov
push
adc
jp
inc
icebp
ja
xchg
or
inc
cwtl
mov
jbe
push
jg
xchg
div
movsl
daa
cmc
scas
and
insl
mov
push
dec
adc
dec
das
xchg
in
ds
fwait
out
dec
inc
xor
fwait
lret
addl
inc
fxch
and
push
fstl
push
add
adc
mov
es
or
push
adc
fbstp
ss
icebp
inc
xchg
aad
dec
imul
and
dec
fwait
inc
lods
mov
into
negl
cld
mov
push
out
add
into
fwait
mov
and
jmp
insb
sbb
lock
sub
inc
nop
mov
push
dec
mov
inc
adc
xchg
arpl
pop
jmp
or
mov
icebp
int
addl
mov
pusha
pop
and
adc
dec
nop
rcl
hlt
data16
stc
insb
mov
xchg
ret
in
pop
lods
xchg
mov
jle
or
push
cmp
adc
fucomp
ret
fs
push
add
xor
ljmp
ret
js
aas
sbb
cltd
push
call
pop
sbb
inc
shll
scas
fwait
in
dec
les
cmp
aaa
mov
stc
test
mov
push
in
sbb
cmp
push
popa
icebp
inc
push
or
inc
sti
pop
in
inc
fisttpll
cmc
pop
mov
mov
pop
push
sub
test
out
jno
cmp
add
imul
and
mov
aam
mov
mov
adc
fwait
inc
clc
cmp
jmp
cmp
xchg
daa
mov
fldcw
mov
pop
mov
add
mov
inc
cmpsb
xchg
test
or
lods
div
pop
cmpsb
imul
ja
out
sbb
xchg
sub
loop
movsb
jg
dec
fstpt
dec
fidivl
inc
dec
mov
mov
ret
sub
mov
rcl
sahf
adc
mov
cmc
mov
jmp
cli
cmp
mov
mov
and
adc
aad
cwtl
xor
dec
repnz
dec
xor
pop
rcrl
xchg
popa
clc
push
test
idivl
fidivrs
cmp
jne
cmpsl
loope
pop
ss
sub
inc
push
fbstp
js
movsl
mov
aam
mov
mov
mov
lcall
stos
es
arpl
push
jnp
mov
lock
insb
inc
sub
mov
sub
scas
lea
xchg
scas
out
push
loope
or
shlb
outsl
pop
cmp
test
and
inc
fsubrs
loop
je
sahf
inc
dec
pushf
stos
arpl
push
mov
jbe
cmp
aad
push
lds
add
xor
mov
cld
or
push
pop
push
mov
rcrb
xor
test
xchg
push
jb
movsl
cmp
test
or
out
adc
cli
jne
pop
jecxz
lahf
pop
aaa
ret
hlt
pop
mov
ss
dec
push
cs
xlat
outsb
and
inc
adc
movsb
jnp
nop
mov
add
jle
test
push
dec
pop
cwtl
pop
dec
or
xor
test
aad
mov
push
pop
test
xchg
mov
clc
xchg
and
cmc
int3
js
int3
and
stos
inc
dec
mov
push
pop
aaa
push
sahf
mov
call
mov
das
sub
pop
jg
stos
fs
add
int3
dec
stos
sti
stos
lret
xchg
std
jbe
cltd
xchg
icebp
imul
jno
xor
sbb
pushw
imull
mov
push
xchg
sbb
xchg
xchg
adc
mov
popf
ja
sbb
leave
out
cmp
inc
push
aad
and
stos
adc
cs
insl
loope
into
adc
or
adc
nop
jmp
popf
sbb
stos
loop
mov
dec
loope
popf
or
mov
lcall
jae
out
jmp
aad
sub
push
adc
pop
vmread
or
pop
subl
ss
mov
test
movsl
jg
pop
pusha
das
mov
or
xchg
insl
loop
xchg
inc
scas
ret
cmp
sub
iret
pop
and
jo
push
sub
lret
fidivs
inc
push
in
xchg
mov
lock
pop
mov
aad
js
mov
roll
jns
push
ljmp
fucomip
jg
add
xchg
sbb
fsubs
daa
pop
test
insl
add
cmpsb
not
push
sub
dec
pop
test
lret
mov
data16
pop
out
lods
ret
in
test
into
fsqrt
cmp
pop
sbbl
addr16
aam
jae
fnsave
test
cld
xchg
enter
pushf
jmp
mov
rorl
hlt
xor
lret
push
sub
push
jb
sbb
lea
arpl
xchg
pop
mov
push
sarl
incb
push
cwtl
mov
mov
cltd
add
daa
xlat
mov
xor
jnp
call
push
out
and
leave
stos
popa
adc
shr
sbb
sub
xor
pop
push
pop
dec
pushf
jb
cmpsb
mov
pop
imul
int
dec
es
nop
test
xchg
int3
out
testb
jmp
stos
pushf
ficoml
mov
cmc
push
adc
mov
jne
lock
and
push
shrb
int
jl
jno
cmpsb
dec
pop
fdivr
ljmp
mov
push
xor
leavew
int
mov
mov
jno
mov
mov
jo
xchg
inc
mov
fs
iret
out
adc
pop
inc
ficoml
loope
jmp
jns
rcrl
sub
mov
xchg
pop
inc
pusha
cmp
lea
jns
lock
mov
pop
into
and
mov
sbb
xchg
cwtl
cmp
shl
jno
test
jne
int3
int
inc
cli
dec
imul
mov
das
sbb
push
inc
xor
jne
icebp
mov
or
sahf
jge
mov
mov
mov
pop
and
js
cmp
mov
pop
xchg
js
loop
daa
inc
lods
sti
inc
ljmp
repz
mov
ds
ror
fs
or
add
in
cmp
sub
dec
push
fidivrs
xchg
cmpsb
push
pop
lds
fmuls
notl
lock
xor
mov
mov
jno
cmp
clc
stos
cmpsl
es
and
int3
xor
add
repnz
add
lcall
shl
in
cmpb
xchg
ss
xchg
test
adc
cmp
fldt
xchg
imull
and
enter
pop
gs
shll
inc
out
in
std
pop
daa
aad
sbb
stc
data16
cmp
inc
mov
push
xchg
leave
int
mov
jp
mov
scas
dec
or
xchg
cmp
andb
add
imul
ljmp
into
test
loope
mov
or
div
clc
bound
lahf
add
out
and
inc
ja
mov
jmp
mov
outsb
movsl
out
rclb
sub
xchg
cmp
or
and
push
mov
dec
mov
cmpsl
movsl
pop
adc
jnp
popaw
addb
mov
ja
add
inc
mov
into
sbb
adc
repz
cmpl
out
enter
push
addr16
shr
push
mov
sub
and
adc
inc
push
hlt
mov
das
pop
jns
sub
mov
mov
push
scas
mov
mov
rcr
dec
mov
push
rolb
scas
jl
add
shll
mov
push
cmp
lcall
dec
mov
jb
jp
dec
xchg
rcl
jmp
lcall
push
cwtl
fcmovne
fs
out
out
lds
or
pop
fcoml
hlt
adc
out
imul
aaa
push
aas
mov
mov
cmp
mov
jmp
sbb
pop
mov
jl
sub
not
stos
jnp
inc
pop
sbb
hlt
jle
sahf
es
fsubr
int
xor
stc
in
cmp
xlat
cmp
or
nop
daa
imul
stc
popa
ljmp
mov
mov
xor
or
cmp
pop
or
dec
xchg
jb
mov
dec
push
fdecstp
rcll
movsl
lods
jmp
leave
dec
and
in
cmp
les
int
fsubr
es
xlat
pop
add
inc
lds
imull
jge
pop
mov
pop
aaa
shll
dec
mov
mov
or
sub
fnsave
push
call
cwtl
and
out
push
ljmp
call
arpl
xor
addr16
andb
cs
push
jmp
arpl
in
pop
ret
movsl
mov
jnp
xchg
push
or
arpl
test
sub
scas
mov
mov
add
dec
frstor
cmp
test
or
lock
aam
das
push
cmp
push
icebp
notb
scas
sbb
lret
push
clc
aas
push
mov
push
sahf
xor
fwait
imul
cmp
inc
ret
les
xor
mov
jne
xor
add
movsl
in
call
fs
xchg
mov
mov
pop
xor
aad
rcll
pop
aad
add
nop
jns
jecxz
xchg
cmpsl
hlt
push
pop
mov
jecxz
cmp
and
cli
loop
push
adc
mov
lret
mov
cmp
add
sub
das
testb
jbe
mov
mov
loopne
jp
cmp
gs
dec
mov
jno
out
or
into
dec
test
xchg
add
in
outsl
in
ret
mov
fbstp
enter
stos
pop
mov
sbb
push
lods
aas
adcl
mov
jecxz
mov
inc
cmp
and
push
dec
mov
pop
jno
xor
jnp
fsubrl
adc
mov
fsubs
or
or
mov
push
jp
bound
jle
xor
xchg
std
push
popf
stc
dec
ret
movsb
sub
rclb
add
shll
inc
cmc
dec
std
test
or
negb
jp
clc
call
pop
dec
orb
pop
call
lock
outsl
jnp
mov
rorb
pop
mov
cmp
adc
cmovbe
stos
jbe
fstp
fsubl
or
ss
pop
fldt
aaa
xor
ss
imul
xchg
jg
xchg
mov
scas
xorb
shld
cmp
mov
sub
sahf
fcmovne
pop
or
insb
pop
hlt
insl
lea
rolb
std
add
mov
sub
pop
mov
fnsave
adc
rcrl
push
lods
adc
xor
push
shll
ds
pop
inc
pushf
mov
jbe
pop
add
leave
aad
std
ss
fcoml
ret
jle
xor
dec
loopne
add
test
cmpsb
gs
adc
sub
repz
add
bound
xor
inc
subl
jne
xchg
sub
call
mov
sbb
and
or
xor
enter
cmp
sbb
mov
mov
mov
out
mov
dec
pop
in
mov
jae
push
mov
adc
mov
pop
sub
add
enter
add
out
push
sbb
aas
xor
fcmovu
rcll
xor
sub
pop
int3
xor
push
cli
mov
sub
shrb
mov
and
xchg
pop
dec
out
test
sbb
pop
xchg
sbb
movsl
jl
leave
pop
jg
cmp
xchg
xchg
test
shlb
sbb
jnp
xchg
jmp
cwtl
sbb
pop
les
mov
adc
dec
dec
mov
fcmovb
mov
mov
out
stos
sub
sbb
test
into
mov
aad
pop
lods
jo
jae
cmpsb
mov
repz
add
insb
andb
cmpsl
push
jns
es
cld
cwtl
ret
sbb
out
movb
push
fucomp
push
ret
mov
arpl
jecxz
fstpt
mov
test
sbb
mov
lcall
sub
jge
jne
pop
imul
mov
xchg
dec
add
mov
jb
shll
out
push
fwait
lock
pop
fcomp
popf
stc
push
inc
mov
mov
and
cmp
sahf
pop
in
cld
xchg
popf
outsl
dec
call
es
adc
adc
call
jb
sbb
mov
mov
arpl
in
push
rcl
xchg
dec
popf
sub
fdivrs
xor
ret
fistpl
repz
xchg
xchg
clc
loop
adc
leave
subb
mov
jno
add
and
and
dec
std
mov
ret
and
mov
lcall
adc
insl
inc
aam
aad
adc
popa
out
add
int3
add
mov
shll
arpl
scas
repnz
loope
push
xchg
lret
lcall
out
cli
mov
loope
repnz
mov
pop
loop
jl
inc
push
dec
cltd
inc
pop
and
push
sbb
fcmovb
dec
xchg
daa
inc
daa
pop
hlt
cwtl
jmp
cmpb
inc
push
sbb
gs
jne
jne
mov
and
popa
inc
sbb
ficomps
out
scas
fdivrp
aam
sbb
jb
xchg
mov
cmp
bound
sbb
dec
lods
lock
aas
xchg
lahf
cmc
sbb
lods
shl
hlt
addr16
fld1
orl
xchg
jmp
pop
outsb
ds
cmp
add
push
xor
movsl
lea
cmp
lahf
outsl
sub
mov
fwait
mov
jecxz
add
inc
pop
pop
cltd
fwait
int3
jb
and
data16
pop
dec
sarb
and
daa
cmp
lods
mov
lcall
adc
out
jecxz
lds
push
outsl
fstps
cmp
aaa
ficompl
shl
fsubrs
dec
mov
sbb
ret
inc
cld
xchg
jbe
movsl
cmp
xlat
sahf
xor
psubsb
iret
mov
cmp
mov
je
mov
rolb
jmp
mov
xor
roll
cli
jno
mov
push
fwait
jne
pop
mov
jb
adc
inc
sbbl
test
shll
scas
xor
pop
mov
pusha
xor
fwait
jb
pop
dec
out
sahf
jp
jne
mov
sbb
lods
dec
mov
inc
test
es
sbb
lahf
dec
mov
int3
nop
out
out
pmovmskb
mov
mov
push
pop
shrb
test
xor
sbb
add
into
pop
sub
cmpsl
int3
cmp
clc
pop
adc
xchg
lea
inc
mov
data16
cmpsl
xor
lds
cmpsb
sub
push
jno
subl
or
repz
shll
sub
sbb
jno
insl
cld
pop
call
and
je
js
test
pop
repz
in
adc
sub
lea
inc
jbe
ja
and
xor
pop
enter
sub
pushf
push
out
test
lret
shr
xchg
popa
jmp
daa
mov
mov
inc
xlat
xchg
fsts
aaa
cmp
push
xor
jecxz
popa
mov
xchg
sub
pop
xchg
push
adc
add
xchg
push
imul
dec
bound
mov
loope,pt
or
xor
inc
int3
mov
fimuls
inc
roll
mov
cmp
icebp
test
sub
hlt
mov
jne
es
test
test
mov
nop
pushl
into
mov
mov
adc
jo
add
negb
mov
nopl
jb
inc
lret
sbb
sbb
scas
dec
fimuls
xor
inc
adc
jg
xorb
xor
clc
mov
xadd
mov
pop
pop
xchg
add
mov
gs
cltd
cmpsl
mov
xchg
jmp
or
and
jb
sub
mov
jae
adc
and
stos
xor
xchg
mov
xchg
cs
aad
adc
pop
test
ret
mov
mov
mov
sub
pop
dec
fiaddl
movsb
dec
in
push
sbb
lcall
inc
lock
test
mov
icebp
leave
mov
inc
pop
pop
daa
and
test
lret
iret
jno
mov
sbb
cmp
test
inc
imul
notb
xor
push
mov
jb
inc
push
cmp
jae
jno
popf
mov
sub
dec
inc
dec
xchg
sub
xor
inc
arpl
pop
and
adc
inc
push
xor
outsl
cld
in
es
sahf
ss
push
xchg
clc
aaa
cli
jnp
xor
into
and
dec
sbb
stos
dec
imul
aas
arpl
int
xor
mov
push
jnp
adc
call
imul
aam
inc
aam
pop
out
sti
dec
into
enter
xchg
push
jnp
jno
lahf
inc
fxch
fdivrs
addr16
mov
in
push
cld
inc
xchg
lea
sbb
cmp
imul
roll
inc
data16
adc
xor
cmc
jmp
mov
add
inc
cmp
jb
fdivrs
jne
dec
sahf
sub
push
cmp
jne
insb
into
pop
dec
lret
jge
xchg
insb
in
dec
pop
iret
ret
in
sahf
out
daa
int3
xor
daa
push
xchg
sbb
pop
mov
ja
cmc
movsl
mov
jl
jl
arpl
sbb
and
add
pop
sbb
and
and
out
inc
icebp
std
lods
xor
sbb
insl
cmp
mov
dec
push
jbe
stc
or
dec
fnstsw
cmovne
xchg
ja
jge
mov
pop
ss
aam
xor
pop
out
sahf
fldcw
adc
out
pushf
cmp
sbb
push
sub
xor
cli
or
imul
cmp
loopne
adc
ss
sub
jp
ret
push
sbb
ret
loope
js
fisubrl
add
sub
ja
push
pop
push
xchg
into
push
dec
mov
std
push
imul
test
fwait
pop
ret
push
or
popa
clc
adc
ss
lock
test
mov
xor
decl
mov
faddl
push
movsl
pop
out
pushf
and
lds
arpl
dec
mov
adc
cld
mov
scas
ret
or
in
mov
xchg
fisubl
mov
gs
ja
or
push
sub
or
push
sub
lret
fdiv
dec
mov
stos
insl
pop
mov
push
dec
add
and
adc
clc
mov
sar
inc
mov
mov
aas
or
scas
push
inc
pop
mov
xchg
ret
jg
das
cmp
stos
and
pop
pop
and
cmp
and
push
xchg
lods
sbb
jecxz
jne
aaa
cmc
push
xor
mov
jle
xchg
mov
adc
pop
cli
mov
movsl
push
cmc
pop
cmc
shll
repz
in
adc
scas
dec
lret
sti
insl
mov
adc
into
push
ret
cwtl
sbb
fstp
sub
test
adc
outsb
cmp
mov
cmp
and
mov
lods
or
add
into
int3
push
xor
mov
dec
push
push
inc
pop
pop
adc
jo
push
xor
lcall
jo
jl
rcll
dec
aad
ja
pop
inc
lods
inc
lods
sbb
xor
cmpl
loope
mov
pop
ja
mov
mov
into
imul
testb
sub
loope
sahf
testl
pop
nop
sbb
gs
sub
daa
lock
cmp
cmp
cli
jno
outsl
add
mov
in
int
pop
jo
out
xchg
aad
pop
lahf
jae
shll
cwtl
outsb
jecxz
push
iret
lods
add
jns
inc
jb
cld
xlat
dec
inc
xchg
push
call
adc
fs
dec
addr16
push
mov
mov
fstl
ss
int3
js
lods
mov
mov
cmpsl
mov
mov
mov
pop
lods
das
call
inc
cmpsl
gs
outsb
cmc
jge
jle
in
pop
addr16
xor
sub
adc
mov
push
and
adcb
fisttpll
adc
addr16
cli
movsb
pushf
add
sbb
stc
lret
cwtl
mov
je
cs
loop
loope
ficomps
mov
xor
mov
adc
push
mov
or
mov
ja
fs
insl
ds
call
subb
stos
mov
xor
xchg
add
adc
cmp
fs
add
or
xor
sub
mov
insl
ret
hlt
dec
and
push
shl
pop
sub
imulb
inc
fiaddl
mulb
and
mov
mov
xchg
xor
push
sub
pop
jns
loopne
mov
mov
stc
pop
mov
pop
rolb
stos
pop
ret
xchg
pop
stc
test
cmpsl
shrb
ja
or
scas
shrb
nop
add
pop
test
push
js
lret
pop
mov
cmp
addr16
cmp
nop
mov
mov
mov
sbb
inc
std
or
out
enter
inc
fstps
jb
or
out
sahf
sub
pop
inc
std
cwtl
into
jo
or
lods
in
popf
add
cmp
or
sub
std
lock
andb
cmp
pop
ss
in
pop
outsb
inc
cmp
sub
rcrl
add
jbe
sahf
lds
ret
xor
mov
sbb
aas
mov
dec
pop
xor
xor
sbb
xchg
sbb
add
cs
inc
or
add
out
xor
out
in
daa
mov
rorb
or
cmpsl
insl
fstps
out
or
dec
or
pop
stc
loopne
aas
xchg
cltd
or
incl
scas
int
inc
inc
inc
nop
or
cmp
fsubs
test
inc
cmpsb
das
adc
out
out
fwait
xchg
fmull
in
inc
inc
fsubs
xchg
ss
or
in
fwait
ror
stos
inc
sti
enter
sub
inc
fildl
mov
xorl
out
aam
jnp
xor
sbb
adc
imul
pop
lret
lret
inc
cmpsb
pop
dec
lcall
aaa
icebp
mov
push
movd
cltd
xchg
call
add
mov
xor
ret
dec
test
push
cld
fnsave
lods
mov
xchg
lret
std
jle
cmp
xchg
dec
add
outsl
ljmp
sub
aaa
dec
out
jno
mov
cld
inc
add
mov
mov
and
nop
mov
xor
xor
jae
hlt
mov
fdivs
addr16
and
xchg
xlat
mov
int3
loop
sbb
and
xchg
jno
lcall
out
jns
cmp
in
mov
lods
fucom
jnp,pn
insb
sub
movsl
inc
inc
shll
push
aam
dec
daa
out
popf
xor
push
mov
dec
dec
bound
mov
in
out
dec
loope
mov
push
and
scas
fstpt
and
mov
negl
aad
push
mov
neg
add
xchg
sbb
pushf
ror
cmp
or
cmp
shll
xchg
stc
lea
fs
mov
or
mov
sbb
pop
or
mov
and
jae
sub
lods
subb
mov
pop
cmp
push
jo
push
sarb
imul
mov
add
pop
push
imul
sbb
xor
mov
sti
cmp
mov
add
scas
out
cmpsl
sub
jecxz
inc
or
dec
clc
call
repz
test
or
js
imul
mov
rcll
jb
sub
mov
in
insl
fisubrl
movsb
add
adcb
fwait
jo
mov
mov
push
and
aad
mov
or
das
or
pop
js
sub
mov
data16
rcrl
inc
fsubs
loope
sbb
jb
clc
xchg
mov
loopne
rolb
call
jmp
mov
pop
cmp
cld
sub
xor
add
bound
push
popf
out
scas
sub
arpl
xchg
js
pop
adc
jb
sbb
xchg
jge
push
sub
sti
xchg
dec
out
dec
das
sub
xchg
jno
aaa
pop
shrb
xchg
pop
push
inc
pop
cltd
fldcw
in
incb
push
or
jecxz
stos
adc
popl
xchg
pop
scas
nop
jae
jg
xor
les
addb
bound
sbb
fcmovbe
pop
loop
lahf
gs
rcrb
mov
mov
mov
or
iret
in
outsl
pushf
pop
leave
push
ljmp
sbb
aam
test
xchg
pop
jg
add
mov
pop
cmpsl
add
out
adc
iret
cltd
loopne
scas
std
fildl
mov
cmp
jmp
aas
cmp
outsl
icebp
shl
dec
pop
das
sbb
and
pop
js
xlat
fs
xorl
pop
cmpsl
push
insl
and
pop
fstpt
mov
sub
push
push
mov
or
into
inc
aam
push
mov
lahf
and
movsl
push
inc
inc
mov
xlat
arpl
stc
in
pop
outsb
addl
inc
cli
and
mov
loop
mov
push
test
mov
jb
sub
stc
pop
std
push
add
sbb
cli
pop
repz
imul
xor
pop
icebp
and
dec
jae
fildll
lods
cmp
sbb
pop
cmpsb
ret
push
mov
push
dec
adc
xchg
rep
jo
push
mov
lods
ds
bnd
inc
call
mov
sbb
mov
fiadds
popf
cmp
mov
cli
inc
push
aaa
scas
loopne
sahf
aad
xchg
add
cmp
add
lret
rcll
outsl
repz
pop
adc
push
cmc
rcll
rcrl
mov
inc
test
test
sub
dec
pop
cmp
inc
pop
rcll
jmp
test
ret
fstl
add
mov
fs
sbb
movsl
mulb
aad
and
inc
mov
adc
cmp
cmc
mov
int3
lcall
aam
push
ret
insl
loopne
pop
repnz
push
in
dec
sar
roll
ljmp
xchg
inc
push
lods
pop
mov
cmp
cmp
add
xchg
xor
adc
cmpsb
mov
sub
jmp
push
jp
inc
popa
cmp
xchg
insl
ljmp
or
cmpb
shl
pushf
adc
jl
and
mov
inc
ljmp
arpl
adcb
mov
shll
mov
loope
out
int
adcl
xor
rorl
jo
mov
ss
cli
test
pop
mov
pop
add
pop
sbb
daa
add
jle
push
insl
mov
sbb
imulb
add
sahf
mov
outsb
and
cmp
js
sub
hlt
daa
dec
pop
stc
sarb
out
ljmp
mov
add
or
sub
int
jge
dec
pop
cmp
jecxz
imul
dec
and
jno
ja
push
rolb
outsb
daa
inc
mov
insl
mov
sahf
mov
xchg
jbe
loope
cmpsb
cmp
adc
sub
adc
push
push
fildl
jmp
scas
sub
jmp
lods
xor
stc
pushl
into
cmp
sti
clc
push
enter
sub
mov
push
add
sbb
lcall
adc
stos
shr
xchg
negl
mov
popa
fisubrs
dec
test
ret
mov
push
add
mov
lods
xorl
in
adc
or
jae,pn
mov
xchg
in
jg
mov
lahf
pushf
sub
adc
push
loope
arpl
mov
push
sub
sbb
divb
or
jl
fldcw
dec
in
rcll
insl
inc
dec
test
mov
sub
dec
jge
popf
fisubrs
repnz
out
mov
icebp
scas
adcl
fstp
mov
inc
outsb
inc
je
in
xor
or
lahf
inc
dec
jl
add
popf
dec
pop
iret
rcr
push
or
xor
addl
or
push
lods
mov
xor
or
arpl
aaa
stos
push
inc
inc
dec
jecxz
push
cmpsl
xchg
lock
and
and
stc
test
mov
xor
aam
pop
mov
lcall
sbb
shlb
mov
bound
mov
lds
popa
hlt
repnz
stos
add
mov
nop
test
dec
int3
dec
loope
pop
loopne
fs
or
dec
pop
sub
inc
mov
dec
pop
xchg
sbb
and
aaa
out
rcr
pop
inc
sub
std
mov
mov
and
popa
mov
out
repz
cmp
xor
fidivrl
orb
jecxz
data16
or
mov
mov
inc
add
fwait
ds
outsl
mov
adc
dec
mov
sub
test
jns
xchg
xchg
mov
into
les
or
and
popf
push
inc
mov
jecxz
jae
mov
or
add
movsb
mov
mov
add
stc
lds
std
lahf
sub
mov
dec
jecxz
aad
mov
out
jp
shrl
jmp
cmp
push
mov
cmpsl
cld
push
xor
out
lds
mov
cld
pushf
aam
add
jecxz
fstpl
std
pop
out
in
jnp
lock
cmp
xor
gs
push
pop
out
inc
sub
cmpl
add
test
dec
xor
repz
pop
in
mov
lret
pop
repnz
sub
xlat
dec
xchg
stc
jl
pop
and
js
in
sti
jns
xlat
cmp
push
sbb
test
idivb
insw
popf
lahf
jmp
rclb
repnz
dec
outsb
sub
insl
dec
mov
xor
mov
adc
insb
pushl
ret
or
mov
mov
add
popf
xchg
adc
testb
cmpsl
adc
adc
pop
es
jge
jbe
push
loopne
push
call
push
xor
jecxz
pop
adc
aam
adc
out
push
das
fldl2t
pusha
jno
cmpl
ds
add
cmp
or
lcall
and
andl
outsl
push
dec
lahf
std
mov
cmp
pop
in
xchg
insl
adcb
mov
jne
ss
repnz
add
inc
lret
mov
shrl
and
dec
add
pushf
repnz
lcall
rclb
jp
cltd
pop
decb
cmp
ds
sub
rcr
add
mov
push
mov
add
jmp
push
lcall
ja
cmc
and
push
out
mov
data16
fsubrs
jge
dec
ja
testb
pop
testb
out
shr
enter
add
sbb
sub
sbb
aas
lret
insl
ret
adc
add
pop
jae
jnp
mov
mov
sbb
cmp
xor
scas
out
ret
dec
into
pop
out
loopne
jbe
mov
test
cmpsb
sti
fldenv
inc
arpl
mov
das
xchg
lods
jp
pop
js
sub
icebp
lcall
or
data16
adc
pop
jge
mov
jns
mov
or
xchg
incb
pop
mov
lea
sbb
cmp
mov
mov
scas
outsl
leave
dec
mov
test
int3
push
cwtl
test
mov
mov
jl
add
repz
loopne
xchg
clc
movlps
push
mov
or
xor
jg
ret
cmp
sbb
loop
push
push
mov
in
pop
aaa
fwait
nop
repnz
xchg
lret
cmp
pop
mov
or
dec
incl
xchg
les
xchg
sub
gs
xchg
stos
mov
pop
clc
and
lds
push
jns
dec
nop
dec
and
lods
cmp
xor
loopne
cmc
and
fistpll
jle
and
mov
repz
cmp
mov
in
jg
jmp
mov
xor
adc
cltd
mov
push
ret
fs
fincstp
mov
dec
shl
shl
and
sub
xor
jno
mov
xor
daa
aam
mov
xchg
xchg
fs
adc
mov
shl
or
gs
cmpsb
mov
jae
add
in
sub
scas
add
mov
cmp
mov
and
jns
and
js
fdivrp
test
pop
push
pop
stos
mov
ret
fdivl
leave
adc
scas
sarl
xchg
adc
lds
stc
movsb
mov
cs
movsb
decb
int
inc
pop
call
jp
mov
mov
xchg
jnp
sbb
cmc
mov
repnz
out
push
shl
sbb
imul
test
xor
xor
dec
lcall
cli
sub
sub
cmpsb
adc
add
ret
xor
das
mov
repnz
xchg
fcomip
sti
rclb
dec
repnz
inc
jo
mov
jp
mov
adc
push
inc
add
push
scas
lods
loope
loop
sbb
std
adc
arpl
jmp
rorb
inc
loope
push
sub
jnp
stos
push
mov
mov
std
and
js
inc
out
adc
hlt
inc
pop
sahf
sub
mov
sbb
adc
mov
lcall
nop
jp
xor
lods
pop
divl
mov
sbb
lods
mov
in
dec
adc
xor
hlt
sbb
jp
out
lods
jo
or
cmpl
xchg
add
das
adc
sbb
mov
das
sub
xchg
mov
mov
mov
add
in
sub
bound
jl
insl
inc
push
insl
lea
std
shll
scas
pusha
mov
cmp
stos
sub
daa
jg
inc
je
ljmp
mov
ss
and
or
cs
mov
jbe
loope
lods
shrb
ss
xlat
and
cltd
sbb
mov
fbstp
adc
sti
test
mov
sbb
jmp
add
outsl
movb
imul
mov
cld
int3
dec
or
aaa
adc
sub
shlb
and
mulb
mov
mov
add
jae
pop
cmp
bound
dec
pop
rorb
sahf
mov
push
add
arpl
or
pusha
sub
scas
jp
icebp
push
dec
aaa
mov
es
movsb
inc
inc
dec
add
fdivrp
lea
mov
ljmp
jp
adc
jge
test
shlb
or
icebp
pop
xchg
mov
dec
repnz
scas
sbb
loope
inc
enter
lret
sbb
mov
arpl
mov
ret
inc
sbb
push
inc
ror
jmp
cmp
jge
mov
add
mov
jmp
mov
rolb
call
addr16
jo
loope
fsubrp
mov
mov
dec
sbb
cmp
sub
inc
mov
mov
jns
xor
dec
ljmp
mov
je
sti
lret
in
in
cwtl
sub
scas
lods
mov
out
mov
mov
imul
lret
pusha
fbld
clc
arpl
sub
ja
xor
adc
int3
movsl
mov
scas
xchg
lock
into
in
test
mov
gs
lods
lock
repnz
adc
fistps
mov
mov
adc
cmovs
stos
pop
sbb
push
sub
push
dec
les
clc
pop
add
rcrb
inc
cmp
sbb
or
add
mov
outsl
aaa
jb
aas
out
pusha
jl
in
or
pop
cmp
aaa
push
ret
push
sbb
cs
nop
pushf
andnps
xchg
mov
or
and
loope
das
push
repz
in
pop
or
inc
test
pop
push
and
sbb
sub
push
mov
roll
mov
mov
rol
jae
mov
sahf
cmp
imul
push
jecxz
bound
mov
push
xlat
sub
cmc
and
aad
sarb
out
pop
xchg
push
mov
adc
aaa
mov
cli
add
lds
shl
push
mov
or
push
cmp
lock
cmc
popf
hlt
mov
movb
mov
mov
imul
mov
test
loope
pop
push
dec
ficoms
rolb
fldl
movsb
and
dec
fdivrs
test
es
es
xor
shrb
xor
jnp
xchg
mov
dec
cmc
popf
mov
cld
in
cmp
out
jbe
push
fs
cmp
mov
fistps
mov
rcll
das
lret
test
fnstsw
pop
pop
decl
gs
pop
push
and
push
pop
xchg
sub
and
push
mov
pop
jg
std
push
cmc
and
jl
arpl
insb
inc
pop
pop
push
icebp
aas
arpl
sub
mov
or
ds
in
push
or
ret
pop
daa
sbb
and
fnsave
ljmp
cmp
lret
popl
xchg
mov
xchg
add
and
int3
lret
pop
pop
cmp
cmp
insb
add
sbbl
cmpsl
xchg
pop
xor
fdivp
adc
dec
dec
push
inc
mov
int
leave
mov
jle
push
std
scas
mov
popf
fsubrs
pushf
xchg
std
pop
mov
fwait
jno
mov
cmp
xor
push
loope
rorl
ret
imul
test
or
sarl
jbe
inc
cltd
push
xchg
jo
cmp
fldt
or
mov
cmp
rcl
cs
stos
test
inc
lret
pop
iret
fisttpl
xchg
nop
inc
loop
std
movsl
jmp
mov
pop
xchg
xchg
cmp
inc
out
jp
mov
add
fwait
lods
jo
pop
jge
outsl
push
mov
loopne
sub
pop
in
shr
sub
fbstp
fs
out
imul
xlat
jmp
stos
ja
mov
mov
mov
gs
scas
push
jecxz
inc
fiaddl
mov
jbe
jo
mov
clc
aaa
dec
cmpsl
imul
test
sahf
mov
push
sub
jno
ret
mov
sbb
or
mov
add
out
adc
ret
lcall
sbb
or
int3
pusha
push
outsb
sarb
popf
dec
aaa
mov
divps
pop
inc
inc
fcomps
lea
pop
jle
clc
inc
mov
insl
push
in
dec
or
sarb
cmpsb
nop
sbb
ret
mov
sub
and
and
adc
adc
cld
dec
insl
add
rorl
stc
popf
push
mov
xlat
push
inc
fwait
xchg
pusha
ret
fists
lcall
shll
cmpsl
or
inc
outsl
jnp
adc
cmpsl
cmp
fsubrs
push
and
lea
push
mov
add
out
test
dec
dec
and
ds
ljmp
sub
adc
cmp
dec
insl
je
adc
loope
add
loopne
repz
pop
inc
xor
jecxz
sbb
dec
lock
xor
mov
mov
clc
ret
xor
xsha1
cmpsb
iret
jnp
test
jnp
rorb
outsb
movsl
add
xchg
add
cwtl
stos
add
dec
jne
and
loopne
jmp
or
xor
shrl
popf
int3
fldcw
jae
mov
into
mulb
jne
stos
push
addl
add
pop
leave
push
sarb
int
push
icebp
jno
out
xor
jnp
mov
mov
shrb
dec
fmuls
mov
andb
pop
popa
jnp
xchg
xlat
xor
mov
jg
lret
xor
xor
pop
push
dec
pop
out
lods
xor
mov
scas
jp
sbb
xor
clc
les
mov
push
out
rcl
cmp
pushf
scas
sbb
mov
adc
aaa
or
push
jne
mov
xchg
xchg
cmp
loop
jecxz
mov
test
mov
add
add
cwtl
or
xchg
insb
push
pop
pop
pop
das
mov
push
out
int
mov
daa
into
out
push
subb
int3
dec
mov
jno
inc
cltd
sbb
mov
push
inc
push
xchg
xchg
pop
jl
xchg
cmpsl
inc
movsb
xchg
call
push
out
subl
xchg
dec
inc
pop
mov
jecxz
out
jp
add
pop
jb
sbb
cli
orb
mov
mov
cmp
test
sub
mov
sbb
xor
push
fld
int3
lds
push
test
das
add
lret
mov
inc
aad
leave
mov
clc
data16
push
test
jno
xchg
lock
xor
loop
cld
adc
fcmovb
clc
in
mov
push
lods
dec
sbb
mov
aas
outsl
inc
mov
divb
dec
popa
adc
dec
mov
sbb
xchg
pop
aad
mov
jo
sbb
in
popa
fnsave
or
mov
leave
fscale
xchg
adc
lods
popf
mov
pop
gs
aam
xor
xlat
fistl
jmp
lret
push
xorl
mov
and
xor
inc
cmp
insb
push
movsl
push
in
enter
xor
mov
test
or
addr16
mov
mov
dec
test
dec
das
arpl
addr16
stos
in
push
lcall
stc
enter
loope
sti
inc
push
data16
dec
loope
jge
xor
ret
push
jns
loopne
pop
lods
jnp
das
ret
ds
idiv
sbb
orb
sub
testl
rcll
cld
pop
pushf
sub
push
jno
in
cmpsl
mov
mov
loop
lret
xchg
movsl
sti
xchg
xor
sbb
add
popf
das
fcomip
iret
fnstenv
sbb
add
fdivrp
mov
movsl
flds
mov
ficompl
sub
cmpsl
mov
jge
shl
fnsetpm(287
dec
sub
int
xchg
roll
or
mov
dec
sbb
adc
outsl
xlat
mov
addb
outsb
push
lods
fisttpl
xchg
sub
sub
jns
mov
jl
dec
imul
adc
aas
add
pop
fs
mov
jecxz
inc
outsb
inc
gs
movsb
xorb
popf
pop
into
mov
add
loope
adc
xor
jae
enter
mov
ds
fcoml
xchg
pop
adc
iret
jecxz
sti
fsubrl
or
gs
sub
dec
pop
sbb
dec
xor
shr
in
lcall
in
pop
cmp
mov
or
cmp
dec
push
cld
dec
sbb
jp
mov
sti
xor
loopne
dec
repz
test
cmpl
in
call
das
ljmp
in
jbe
addr16
pop
cwtl
xor
leave
inc
xchg
sbb
inc
pop
ret
sub
leave
lahf
lret
ret
outsl
push
pusha
testl
out
scas
xor
mov
push
stc
mov
pop
jl
popf
push
cwtl
stos
stos
lret
pop
mov
sbb
add
xchg
adc
cmpsb
xor
add
pop
cmc
xor
cwtl
add
xor
lea
pushl
mov
inc
and
sbb
cld
shrb
stos
adc
leave
jbe
add
nop
ja
push
ret
ret
dec
and
push
lds
lea
bound
xlat
xchg
nop
orb
out
mov
mov
pop
sub
cmp
fs
mov
lea
xlat
pop
xor
xchg
stos
lds
sti
fwait
mov
mov
addr16
adc
inc
sub
pop
dec
xor
inc
popa
pop
lcall
ljmp
mov
roll
mov
inc
sbb
outsb
ret
repz
outsb
cmpsb
pop
cltd
mov
dec
push
mov
dec
mov
movsl
lcall
ret
outsb
push
rcl
xchg
stos
out
adc
and
and
jmp
cli
nop
pop
dec
dec
rolb
sbb
push
mov
mov
enter
xor
or
mov
fsubs
sub
xor
add
sbb
int
pushf
add
push
cmc
cmp
faddl
push
push
or
arpl
fidivl
and
jbe
xor
push
popf
aad
ffreep
aaa
out
daa
jecxz
push
push
xor
dec
jb
push
enter
adcb
lods
rcrl
xlat
add
in
mov
fmull
movsl
lahf
sahf
adc
push
lock
lods
pop
add
sarb
jge
cmp
cli
add
insb
inc
jns
adcl
pop
pop
and
out
dec
add
in
sbb
int3
repnz
mov
cld
and
push
and
fnsave
or
aas
ss
gs
add
pop
es
or
sub
popa
push
push
inc
xchg
dec
in
pop
jo
inc
ss
rcll
or
dec
cld
and
fdivr
repz
jmp
xchg
xor
push
into
fsubl
mov
jp
scas
in
clc
sahf
inc
jbe
and
xor
test
push
mov
ja
int
test
pop
fcmovbe
push
xor
leave
xlat
out
pop
outsl
adc
push
out
xor
hlt
pop
cmp
xchg
mov
inc
xchg
push
popf
call
jmp
adc
call
fistl
push
stos
mulb
add
int
push
sbb
out
push
mov
xor
fbstp
and
mov
fs
les
aas
popf
gs
mov
out
xchg
cmp
mov
xlat
xlat
icebp
clc
lods
xchg
lcall
mov
pop
mov
cmp
movsb
xchg
sbb
jl
pop
mov
mov
stos
loope
push
jbe
fbld
pop
fimull
shrb
lret
int3
outsl
push
cmp
jl
rcrb
xchg
sub
int3
mov
std
sub
xor
inc
jmp
mov
js
into
pop
mov
or
dec
mov
aaa
pop
pop
adc
inc
cmp
icebp
cmp
je
adc
aad
push
pushf
cmp
out
sbb
sbb
push
inc
lods
movsl
into
push
jns
cmp
lret
dec
adc
mov
adc
cmp
mov
jnp
js
ljmp
jno
add
es
and
push
js
out
leave
and
movsb
sub
imulb
ret
xchg
ljmp
imul
adc
lods
std
mov
push
cs
cmp
inc
pop
mov
out
mov
in
mov
xor
insb
add
inc
insl
in
jae
mov
inc
in
inc
hlt
xor
push
ret
push
aaa
and
mov
les
adc
insl
ror
adc
dec
hlt
jno
pop
jbe
fdivs
data16
scas
mov
xor
xor
pop
jne
shl
push
mov
jne
in
sub
mov
ror
inc
cltd
ja
hlt
into
stc
xchg
popf
dec
mov
insl
jle
test
nop
and
stos
fnstcw
push
je
jg
sub
std
sti
push
cmpsl
push
inc
sbb
xlat
stc
or
mov
gs
dec
or
mov
in
mov
sub
lds
push
add
in
lret
outsb
cli
das
fwait
es
xchg
lea
out
test
bound
mov
push
mov
xor
aad
and
pop
je
inc
or
cwtl
fidivs
xchg
leave
cmp
cmp
insl
imull
bnd
sbb
int3
xchg
sub
adc
jns
mov
sub
push
fs
test
lret
sub
pushl
enter
out
cltd
popa
test
jmp
sti
mov
bound
adc
xor
xor
xor
sti
cmc
ja
inc
xchg
cmp
aad
call
dec
shlb
lods
sub
jb
fidivrs
pop
fcoml
js
aad
bound
push
stos
dec
mov
push
scas
push
insb
flds
inc
cs
sub
dec
into
add
mov
pop
push
enter
mov
adc
xor
data16
dec
inc
mov
dec
lret
sarl
flds
popa
jecxz
lea
sbb
ret
lods
lock
pop
pop
imul
xchg
fldl
jo
jp
cltd
out
sbbb
xchg
mov
cmpb
jae
push
push
cmp
out
js
loopne
jo
imul
pop
push
inc
shll
popa
and
lock
ret
lods
icebp
ja
add
test
hlt
push
xor
data16
or
mov
in
jl
in
int
mov
xor
shl
lea
jg
inc
xor
cmpsl
jb
daa
jnp
rcrl
xor
xchg
lea
sbb
push
dec
loop
sti
loop
inc
js
adc
jae
test
dec
lahf
push
mov
das
aam
or
and
scas
xchg
in
xor
ss
fldt
cmp
lods
push
pushf
sarb
xchg
lahf
mov
ljmp
inc
fadds
aam
cwtl
sbbb
leave
stos
je
push
jmp
xor
out
mov
fisttps
push
or
dec
mov
and
repnz
or
out
stc
ret
sub
pop
in
push
cmc
aas
sahf
adc
mov
jns
jl
mov
push
mov
xchg
shlb
pop
and
pop
adc
je
je
lds
sbb
jge
fbstp
sbb
add
and
pop
popa
clc
mov
fwait
xchg
xor
cld
ret
arpl
aas
sahf
outsb
test
pop
pop
cmp
xor
ds
mov
std
fmuls
xor
jmp
nop
addr16
cld
iret
push
outsb
xor
popa
cmpsl
add
xchg
pop
xor
pusha
insb
jo
jns
lret
jb
outsb
notl
iret
ljmp
and
ds
daa
xor
xchg
stos
inc
pop
adc
sahf
jg
or
xor
jbe
or
out
gs
mov
cs
jge
das
mov
add
arpl
mov
scas
add
stos
xor
sbb
jb
arpl
add
push
push
sbb
jns
movsl
sbb
test
xchg
fistpl
dec
sbb
pop
sbb
jnp
mov
scas
jno
loopne
mov
mov
imul
lds
mov
lods
jne
cld
loop
mov
add
leave
into
sbbl
sub
fs
leave
push
popl
mov
iret
repz
pop
outsb
test
pop
mov
daa
leave
push
into
add
jne
cltd
sahf
icebp
dec
dec
scas
inc
jp
cmp
adc
stos
cmp
mov
scas
or
mov
dec
in
xlat
mov
or
xchg
stos
lock
aam
js
add
adc
jae
out
xchg
jmp
repz
jbe
insl
lods
jns
cld
cmpsb
loope
push
sbb
inc
lods
pop
pop
loope
xchg
sub
mov
xchg
arpl
jno
rorb
shrb
pop
pop
jb
popf
outsl
mov
ret
cld
ds
xlat
sbb
pop
adc
jno
insl
repz
sub
loope
push
mov
dec
iret
add
cs
andl
push
adc
or
test
shrl
mov
sub
jne
add
jns
pop
ret
sub
mov
or
mov
pop
mov
or
cmp
icebp
rclb
dec
dec
fucomip
jo
xor
sub
push
pop
into
loopne
and
lock
and
bound
adc
scas
lock
xlat
lret
adc
outsl
ret
ret
jnp
mov
jns
pop
shl
stos
push
xchg
fcompl
cwtl
iret
nopl
sub
inc
std
and
cmpsb
xchg
inc
dec
dec
in
sti
ret
cmpsb
sub
les
mov
cwtl
jp
mov
xor
mov
push
push
mov
les
push
sub
adc
rclb
out
fisubrl
mov
jle
add
jp
and
push
mov
jnp
pop
and
div
cwtl
lods
fcoms
repnz
dec
leave
dec
test
mov
push
fdiv
sbb
inc
lret
pushf
and
lcall
stc
dec
addr16
pop
cltd
imul
inc
stos
sbb
loop
mov
fsub
scas
test
test
and
mov
adc
lret
aaa
dec
push
stos
lea
dec
in
insl
adc
inc
xchg
mov
js
fidivs
fwait
loop
icebp
outsl
jg
inc
insb
dec
add
fdiv
or
or
sub
and
push
pop
insb
iret
jecxz
inc
lods
subl
lret
pusha
sub
decb
and
fwait
ds
add
pop
mov
xchg
clc
mov
and
jo
adc
cld
inc
fstl
jl
and
lcall
cwtl
mov
inc
and
add
or
add
adc
jg
aam
cmp
gs
mov
xchg
cli
adc
mov
push
call
dec
lea
cli
js
and
jns
xchg
sub
xchg
loop
adc
mov
aas
outsb
pushf
inc
fsts
es
cmpsl
mov
jl
ss
mov
lret
mov
or
and
adc
mov
stos
call
lods
push
mov
arpl
push
or
mov
aad
cmp
imul
xor
inc
xor
push
pop
lock
arpl
rclb
js
iret
mov
dec
ds
fmuls
pop
mov
fstps
dec
insb
jp
sti
inc
mov
and
push
call
imull
mov
std
movsb
pusha
stc
sub
push
dec
mov
insl
sbb
pop
outsl
dec
push
or
shlb
rclb
or
iret
mov
push
lret
or
loopne
leave
or
mov
mov
xchg
dec
inc
sahf
adc
sbb
rep
cltd
movsl
aam
pop
xor
push
mov
out
xor
push
add
add
cwtl
inc
aaa
sbb
repz
push
push
push
xchg
sub
icebp
insb
fmull
xor
ds
rcrb
insb
aam
mov
adc
jle
jnp
orl
repnz
mov
fldcw
pop
lods
mov
push
mov
mov
add
sub
jbe
loop
push
jl
mov
insb
fs
xchg
push
mov
dec
xor
rcll
and
cmpsb
mov
xor
cmpl
repnz
stos
mov
or
pop
mov
adc
sub
rcll
mov
outsl
lcall
cmp
aas
sti
imul
test
dec
and
pop
push
divb
add
fs
popf
jno
xchg
add
cld
xchg
out
xchg
pop
out
jo
mov
dec
fsts
sub
jmp
dec
cmc
mov
ret
cmp
jp
jbe
push
gs
jmp
aaa
repnz
pop
and
int3
das
inc
dec
and
push
ja
push
mov
or
mov
xor
in
ss
cltd
push
cmpsb
mov
jecxz
mov
rcll
rcll
mov
sbb
or
or
sub
pop
mov
adc
push
iret
adc
loope
add
cmp
pop
test
aad
insb
pop
insl
lds
std
fldenv
mov
jae
adc
out
and
rolb
xchg
scas
jno
cmpsb
or
incl
dec
xor
and
inc
daa
mov
jg
lock
arpl
sub
hlt
pop
loope
clc
out
sbb
xchg
inc
scas
pusha
addb
push
inc
mov
push
inc
cmp
mov
jmp
jmp
aas
sarl
js
push
mov
daa
push
adc
xor
pop
push
loop
out
enter
in
sub
push
lret
sub
scas
or
dec
stos
jge
mov
nop
or
out
sbb
pop
fsubr
jnp
pop
or
sbb
xor
mov
mov
aad
mov
je
sub
sbb
pushf
mov
nop
daa
lahf
cs
and
mov
mov
lret
scas
add
mov
cmp
sbb
cmp
adc
pusha
jne
lock
pop
push
jne
cmpsb
out
jb
dec
sub
les
jnp
scas
or
ss
push
or
lods
es
xchg
and
mov
into
push
or
dec
mov
pushw
pop
int
push
cwtl
cmp
iret
add
into
ja
pop
and
les
and
fucomi
leave
data16
out
and
adc
fidivs
cld
and
mov
shrb
inc
cmpsb
mov
mov
clc
sahf
stos
xor
scas
jne
mov
cmp
xor
js
mov
sub
dec
push
add
jne
inc
inc
sub
orl
mov
dec
das
int
xchg
cmp
ds
jp
or
sbb
xor
dec
xor
icebp
inc
mov
mov
mov
lcall
arpl
sbb
fsubrl
jb
mov
fwait
in
int3
dec
cmp
or
pop
mov
gs
xchg
dec
pop
or
push
or
arpl
pusha
jmp
popa
loopne
div
mov
xchg
shlb
pop
and
shll
push
in
mov
sub
ret
mov
push
mov
cmp
out
out
in
or
jno
cmpsl
mov
xchg
subl
pop
insl
adc
jle
sbb
movl
fmull
sub
leave
xchg
dec
mov
scas
inc
rolb
enter
mov
repnz
ret
xor
imul
mov
xchg
mov
insl
mov
mov
scas
sbb
push
sbbl
or
xor
adc
inc
arpl
xor
inc
cmp
push
loop
fsts
pop
lea
hlt
or
popf
cld
out
pop
cwtl
ja
cltd
fisttpll
decb
add
cmp
and
xchg
fs
imul
mov
test
inc
mov
sahf
xor
xchg
negl
mov
sub
cs
lea
jo
inc
loop
mov
cmpsb
mov
cmc
and
cmc
push
addr16
test
jb
xchg
pop
andl
and
mov
push
shl
mov
and
mov
cmpsb
divl
jle
xchg
scas
arpl
std
xchg
adc
insb
movsl
sub
test
rcrl
jne
pop
outsl
int3
sub
push
pop
and
jbe
inc
loope
pushf
lds
mov
mov
shrb
mov
dec
xchg
cwtl
loop
xlat
repz
pop
sbb
popa
mov
jbe
aaa
xchg
out
fdivrp
subl
xchg
xchg
lret
xchg
jno
cltd
popa
adc
cmp
int
stos
in
cmp
addl
jns
adc
xchg
push
lods
dec
in
cmp
movsl
aaa
movb
test
sub
jge
mov
dec
pop
bnd
inc
mov
xor
insl
rclb
pusha
ret
iret
xchg
jnp
dec
hlt
outsb
cmpsl
dec
nop
inc
pop
mov
mulb
cmp
mov
dec
repnz
mov
pop
insb
pop
mov
inc
lret
jl
in
dec
adc
enter
aad
iret
fucomp
sbb
mov
ss
xchg
in
inc
mov
push
outsl
cmpsl
sar
push
loopne
ds
mov
xchg
popl
insb
popa
sub
and
iret
cli
pushf
popa
lock
scas
aad
cli
mov
pop
mov
xor
bnd
ja
test
jg
mov
mov
or
jno
xor
or
jmp
subl
xor
sub
lcall
jbe
subl
lcall
mul
shlb
sub
int3
in
xchg
repz
dec
sub
or
xchg
jle
xchg
out
mov
cmp
pop
sbb
popf
mov
add
or
inc
inc
sbb
push
cmp
push
and
mov
mov
test
lret
lods
js
xchg
lds
dec
loopne
stos
call
pushf
jne
fcoms
sbb
lea
xchg
inc
inc
les
jb
cmp
rcrb
xor
movsb
mov
rol
add
pop
mov
in
aas
jg
cmpl
insl
jge
call
add
sub
xchg
aad
movsb
or
push
repnz
data16
in
cmpsl
push
dec
mov
test
jg
std
xchg
popl
pop
adc
add
js
lock
sbb
idivl
sbb
sub
adc
inc
hlt
mov
cmp
aas
jle
adc
mov
cmp
xchg
sub
mov
js
out
bound
js
lret
loopne
mov
repnz
rclb
xor
or
jb
xchg
filds
mov
lcall
xor
in
and
pop
setp
and
out
mov
test
mov
lock
and
mov
sbb
or
pusha
popa
dec
sbb
test
mov
dec
cmp
adc
pop
orl
dec
iret
bndldx
daa
inc
mov
xchg
lret
mov
xlat
sbb
adc
rolb
int
lea
out
sbb
pop
push
insl
fsub
or
daa
lret
sar
fld
and
adc
jne
fisubrs
mov
xchg
aaa
add
add
int
dec
push
or
fs
adcb
test
adc
or
test
out
cmc
addr16
cmpsb
xchg
faddl
aaa
fidivrs
jmp
push
xor
aam
aam
mov
lret
pop
mov
mov
mov
or
sarb
xchg
sub
mov
cs
xor
insl
cli
test
push
mov
xchg
mov
push
rcll
mov
ret
inc
xor
pop
mov
leave
push
lock
push
imul
addl
mov
jle
dec
pop
sub
into
pop
lret
clc
dec
push
mov
push
pop
cmp
pop
ja
aam
rcrl
push
cltd
xor
mov
mov
jb
stos
xlat
adc
insl
mov
jns
mov
pop
jecxz,pt
stos
cltd
loop
ret
enter
mov
js
aam
dec
in
adc
mov
insl
sbb
test
cmp
cmpsb
rorb
enter
mov
jb
ss
loope
adc
fildll
mov
xchg
mov
shl
clc
jmp
xor
mov
cmp
in
std
push
or
lahf
cmp
mov
insl
aas
bound
mov
rcr
in
xor
pop
js
jns
jp
int
jge
push
in
dec
fs
cmp
add
add
mov
lret
lock
xchg
push
dec
adc
sub
arpl
dec
mov
pop
mov
lea
aam
xchg
pop
mov
add
outsl
jno
jge
or
jb
and
and
sti
outsb
lods
lea
dec
and
movsb
mov
fistpl
subl
jb
and
and
push
loope
mov
cmp
addb
movzbl
push
sub
shl
jp
sub
icebp
add
xchg
jge
lods
inc
test
jb
rcrb
xchg
gs
xchg
add
les
enter
cmp
stos
hlt
iret
insb
mov
xchg
loop
cmpl
pop
das
es
stos
stos
filds
mov
and
sub
hlt
data16
fidivrl
clc
popa
into
fsub
lea
sbb
mov
repz
mov
mov
dec
inc
jbe
mov
icebp
daa
cmp
iret
mov
jl
dec
test
aas
testb
cmpsb
pusha
cltd
lods
int
dec
testb
or
jae
shlb
inc
push
test
cmpsl
ds
jecxz
fwait
sahf
notb
xor
jg
sbb
repz
jecxz
cmp
push
out
mov
inc
push
adc
mov
rol
test
dec
push
rorb
popf
in
cmp
mov
push
mov
imul
sub
mov
and
cvtpi2ps
loope
and
or
mov
push
cmc
push
xchg
adcl
mov
aad
in
movsb
std
cs
mov
xchg
adc
cmp
imul
jo
dec
pushf
stos
dec
enter
xchg
lds
lahf
imul
adc
adc
sbb
pop
sub
call
lcall
dec
in
out
dec
jmp
dec
sahf
lods
jge
mov
stos
jb
or
cmp
xchg
scas
push
push
popf
ficomps
movl
outsb
rol
ret
or
test
inc
add
sub
cmp
mov
mov
mov
inc
in
sbb
add
gs
adc
add
xchg
push
sahf
lcall
push
in
push
pop
scas
or
call
sub
pop
jae
pop
sbb
into
and
mov
flds
mov
hlt
les
mov
loop
loop
jge
jae
cmpl
cld
movl
fwait
mov
cmp
stos
fcmove
inc
xor
xchg
xchg
mov
mov
jp
mov
push
add
adc
lods
or
aaa
cli
fcmove
shll
call
in
mov
nop
pushl
inc
cmpsb
jg
test
dec
push
notl
xchg
xchg
data16
lods
ja
lret
pop
push
test
adc
jne
gs
gs
push
mov
mov
fdivrl
pop
push
pop
adc
sbbl
jae
and
push
popa
inc
mov
cmpsb
cmpsl
out
mov
push
xacquire
xchg
std
jo
sub
ret
xor
xchg
and
pusha
mov
cmpsb
and
push
xchg
mov
or
repz
jne
xchg
pop
lret
push
loopne
cmc
jnp
fwait
test
sbb
xor
inc
push
or
mov
cmp
int3
pop
out
out
in
pop
lret
movsl
xchg
sbb
adc
xchg
add
mov
inc
and
cmp
iret
ss
mov
dec
fistps
sti
sar
hlt
outsb
gs
jmp
test
inc
xorb
fcomps
aaa
add
pop
jg
pop
and
cmp
mov
cmp
and
insb
mov
aad
pop
ljmp
fidivrl
pop
push
push
cmp
adc
add
inc
stos
pop
out
push
push
hlt
addr16
insl
imul
xor
fidivl
xchg
int3
cwtl
imul
push
addb
sahf
int
out
mov
inc
int
jnp
mov
imul
pushf
mov
adcl
cmpsb
xlat
or
xchg
daa
out
in
add
cmc
hlt
jecxz
repnz
movsb
jae
mov
out
inc
cmc
fcmovb
jecxz
imul
push
adc
cs
ret
cs
fbld
test
mov
cmpsb
mov
cwtl
adc
es
fldl
xor
sub
push
sub
inc
xlat
push
jne
or
jmp
add
cs
movsl
adc
push
stos
mov
lcall
sbb
pop
cmp
cltd
adc
in
jb
and
rorl
sbb
rcr
lods
sbb
cmc
sbb
inc
scas
mov
int
loope
dec
loope
out
xchg
in
xor
testb
mov
dec
add
les
cmpsb
lea
sub
mov
imul
dec
nop
pop
popf
stc
jne
cs
pop
pop
mov
dec
cmp
imul
dec
cmc
push
aad
lahf
movsl
cmp
icebp
sbb
mov
aas
sahf
inc
adc
push
loope
popa
jl
lock
xchg
push
jae
jne
ds
pop
fs
mov
push
or
cmp
xchg
mov
dec
cmpsb
fiaddl
and
sub
fsubrl
rcrl
rcr
fs
pushf
ja
out
sub
mov
outsl
out
push
mov
add
out
and
out
sahf
in
sarb
jle
das
fldpi
or
jl
xor
ljmp
movsl
movsl
rcrl
test
loopne
int3
lret
sub
add
mov
movsb
inc
je
xor
out
jp
aam
in
stos
or
fdivl
push
adc
and
es
inc
inc
push
sub
faddl
out
in
in
push
xorb
sub
jge
lods
xchg
jns
dec
fcmovu
dec
mov
push
cmp
jle
outsb
mov
arpl
and
xchg
test
lock
pop
mov
sbb
sub
pop
in
add
icebp
add
rolb
je
sbb
mov
cmp
fs
insb
bound
pop
inc
mov
xchg
jmp
xor
iret
cmpsb
ret
adc
adc
lods
jmp
or
xchg
sbb
loopne
out
jns
movsb
sahf
fildll
negb
sub
call
and
fstpt
cmp
fwait
shl
call
rcrb
adcl
xchg
xchg
mov
push
dec
dec
lcall
fwait
xor
repz
lods
out
jmp
push
xlat
icebp
es
sub
mov
sbb
inc
cwtl
pusha
ljmp
pushf
scas
mov
out
repz
adc
into
movsl
cld
jl
fldenv
pop
cmp
or
imul
in
cmp
es
adc
lcall
cwtl
inc
cmp
orl
mov
idivb
scas
sub
rcrl
pop
ds
push
add
scas
fnsave
mov
xor
cld
cmpsl
fstps
lcall
inc
jmp
lods
xchg
inc
pop
out
nop
lods
dec
shlb
sub
xchg
sub
movb
ss
dec
pop
lock
mov
or
mov
mov
mov
mov
imul
aaa
into
popf
pop
or
dec
xor
in
ds
fisttpl
push
lea
mov
dec
push
cmp
or
fcmove
bound
jge
pop
adc
dec
sarl
fwait
pushf
add
pop
pop
loope
icebp
scas
mov
pop
in
cmc
jns
mov
aas
stos
lret
cli
decb
mov
adc
xor
lea
adc
cmp
jg
scas
daa
sbb
sub
bound
fs
xchg
or
cmp
mov
dec
hlt
inc
pop
sub
mov
xor
push
xor
cmp
sub
or
cmc
and
push
xchg
push
shrl
cmp
in
ljmp
or
pop
mov
sub
add
aas
mov
loope
dec
imul
cmpsb
les
popa
fs
gs
jg
fcmovnu
stos
sbbl
and
xchg
out
cmp
add
mov
push
ljmp
out
cld
xchg
pop
fdivl
lcall
int
cmp
lods
sbb
gs
mov
outsl
lods
gs
dec
pushf
mov
ljmp
or
pop
and
loope
push
test
add
test
xchg
mov
andl
mov
inc
arpl
pop
sbb
mov
in
aaa
into
ds
sub
xorl
cmpsb
and
pop
fistl
je
dec
cld
sbb
popa
xlat
loop
or
jnp
adc
inc
cwtl
jmp
flds
enter
loope
aam
fstps
mov
push
scas
ljmp
rep
rcll
shll
ret
ret
xor
repz
lods
push
les
jae
fldenv
negb
or
dec
loop
imul
fcoms
and
lret
je
xlat
add
xchg
jno
pop
cmc
pop
mov
and
fwait
adcb
mov
cltd
clc
jmp
or
push
les
shl
aas
inc
fsubrl
in
ret
jae
arpl
inc
sbb
xchg
sbb
pusha
adc
xchg
sub
imul
push
push
cmp
jo
mov
lret
imul
jns
xlat
push
ret
lcall
cmpsb
adc
rorl
jge
cmpsb
cmp
cmpsl
out
les
rcr
push
or
in
mov
les
lds
fs
xor
mov
adc
and
push
sbb
cli
dec
jno
lea
push
pop
adc
lahf
pop
xor
sti
popf
pop
adcb
push
dec
mov
jb
push
mov
nop
xchg
dec
xor
bound
ja
adc
subb
pmaddwd
sbb
enter
adc
xchg
mov
mov
add
fs
adc
hlt
cmp
in
push
popf
sbb
push
and
mov
out
sbbl
mov
pop
sahf
xchg
push
xchg
bound
jnp
push
dec
leave
out
add
push
xor
pop
xor
repnz
icebp
jge
sub
popf
clc
cmpsl
into
sbb
fisubrs
repnz
mov
dec
lahf
dec
and
ss
and
aam
adc
je
pop
mov
mov
ret
sbb
sarl
in
test
mov
xor
lcall
push
stc
aam
out
sti
pop
push
scas
xchg
inc
mov
or
aad
ja
imul
and
push
and
repz
sbb
push
hlt
aad
sbb
enter
ret
ret
outsb
cmp
sti
imull
movsb
sbb
jmp
mov
dec
cmc
lret
je
adc
push
jmp
js
or
cmpl
sahf
push
js
test
mov
sbb
in
icebp
aad
inc
or
and
jg
xor
push
inc
xlat
js
push
mov
pop
mov
loop
ja
cli
sub
push
test
pop
add
daa
sbb
pop
cmp
jmp
jnp
outsl
inc
arpl
filds
push
call
pop
mov
sbb
inc
arpl
sti
and
mov
or
pop
rclb
fisubrl
or
mov
mov
xor
cmp
mov
jb
pop
dec
stos
jle
es
xor
push
mov
pop
sub
bound
jo
imul
inc
push
inc
je
mov
out
sub
lock
jb
cmpsb
pushf
cmp
add
in
inc
movsl
in
or
fsubl
dec
xchg
xchg
cmc
jge
mov
or
and
lods
add
shll
cld
movsb
mov
lret
or
ss
jle
sub
xchg
cmp
mov
jmp
sarl
push
sbb
push
adc
or
mov
jl
adc
adc
xchg
inc
mov
sbb
popa
shll
cmp
movsl
mov
cmp
inc
cmp
mov
jecxz
je
imul
jp
loope
shll
xor
add
lock
dec
sub
pop
imul
imul
or
sarl
push
adc
insb
fidivs
jg
add
sub
lds
xor
mov
mov
je
pop
jo
xchg
sub
pop
aaa
and
and
jmp
adc
cmp
inc
les
xchg
int3
jnp
out
in
inc
fcmovnu
xchg
jns
jmp
dec
es
xor
pop
in
inc
mov
out
lret
dec
fsubrp
jecxz
stos
incb
jge
sbb
add
fildl
jbe
cmp
xchg
push
jns
lods
and
pop
psubd
jp
xchg
inc
cmpsb
jbe
pop
movlps
scas
mov
adc
xchg
js
cmp
inc
std
sbbb
stos
adc
or
mov
cmp
add
inc
xchg
and
push
icebp
es
mov
icebp
adc
jle
or
es
add
pop
std
sar
adc
push
cmpsb
in
xchg
pop
repnz
lea
outsb
mov
jmp
in
dec
dec
and
ss
inc
dec
lods
dec
adc
insb
push
mov
shll
inc
cs
int3
cltd
cwtl
das
or
pop
pop
ret
xor
in
sub
stc
pop
in
jle
out
pop
in
std
fldl
cmp
test
call
ror
sahf
stos
dec
dec
cmp
ficompl
or
cmp
push
popf
pop
or
xor
outsl
dec
mov
jl
movsb
add
rcll
stc
mov
mov
sahf
jo
jg
test
xchg
mov
test
movsb
mov
sub
xchg
aad
jecxz
sub
mov
cmpsl
aas
idivb
in
inc
and
movsl
repnz
test
ds
mov
lds
mov
outsl
daa
cmc
movsl
cltd
and
pop
cwtl
adc
mov
mov
jle
push
xor
xchg
mov
sbb
cmp
push
mov
loopne
daa
add
cmpsl
mov
inc
jnp
repnz
mov
xchg
ficompl
stc
cld
iret
in
mov
ds
dec
jp
add
pusha
sbb
jle
or
xchg
jb
pop
cmp
push
js
push
scas
mov
xlat
pop
cmpsb
or
mov
aaa
ja
push
andb
inc
flds
and
bound
pop
imul
jp
xor
mov
pusha
int
xorl
aad
sub
xor
cltd
jmp
inc
mov
idiv
sub
sub
cmpsl
dec
or
sbb
mov
jns
aad
xchg
ret
mov
popf
mov
loope
std
cmp
test
sub
inc
ss
ds
pop
shrl
dec
aaa
test
hlt
mov
cmp
scas
or
in
hlt
push
xor
lea
xor
iret
lret
pop
in
nop
out
rclb
xor
lcall
mov
jecxz
or
repnz
imul
pop
jge
stos
cs
test
loop
fnsave
test
sbbb
loop
jb
loopne
mov
int
jp
out
lahf
ss
fs
add
mov
jl
lods
popa
cmp
jo
cmpsb
jecxz
daa
xchg
loope
scas
adc
negb
mov
add
cmp
aaa
cmp
xor
clc
or
dec
xchg
sub
mov
mov
jmp
or
add
adc
inc
out
push
sbb
incb
add
test
outsb
adc
lcall
repnz
fdivl
sub
orl
gs
or
sbb
lcall
inc
clc
sti
je
clc
aas
xor
inc
loop
lea
cwtl
ror
inc
sub
or
add
push
pushf
pop
out
std
nop
std
sbb
test
inc
pusha
adc
push
sbb
sbb
aam
push
xor
das
mov
fistpll
or
dec
loopne
out
jo
addl
jl
test
adc
lcall
jb
dec
jo
xor
stc
or
jnp
lock
dec
xchg
cltd
test
xor
mov
inc
push
jne
loopne
imul
or
clc
mov
imul
sahf
adc
lret
inc
xor
pushf
sbb
movsl
jp
mov
jnp
jmp
adc
enter
fldl2t
dec
fadd
jae
fwait
mov
scas
punpcklbw
lret
cmpsl
mov
movsl
pop
mov
ja
test
sub
lea
jecxz
lock
xor
shlb
cli
inc
loop
sub
mov
xchg
push
lahf
cs
not
inc
hlt
push
movsb
and
add
dec
cmp
xchg
dec
jg
aas
loope
mov
pusha
int
ss
jb
and
mov
dec
xchg
or
jo
mov
das
negl
aaa
xchg
or
ljmp
clc
xchg
imul
jno
in
fstps
mov
into
ret
adc
adc
stos
es
inc
shll
je
sub
lahf
lods
rcrl
mov
cmp
pop
stos
mov
nop
test
movsb
add
xlat
and
push
loope
and
mov
addr16
pushf
ds
in
stos
loopne
jmp
add
jmp
xor
xor
or
testb
xchg
jo
adc
hlt
mov
inc
jnp
jb
insl
cltd
pop
adc
ss
jns
mov
xor
sub
loopne
rcrl
jecxz
jecxz
rcr
cli
stos
in
mov
popa
cltd
cmc
adc
inc
sub
mov
xchg
xor
insl
shll
pop
or
mov
xchg
jge
mov
push
in
add
cltd
or
pop
dec
jp
mov
rorl
sub
je
jb
lock
lods
ljmp
or
std
xchg
mov
fists
cmpsl
js
fwait
mov
mov
jp
pop
and
repz
jl
sub
scas
ds
std
jbe
xchg
cmp
imul
ret
xor
dec
xchg
dec
in
icebp
adc
sub
sbb
push
popa
pop
xor
fdivr
imul
frstor
sbb
pushf
in
scas
int
sarl
iret
push
inc
mov
or
jns
inc
test
in
fldl
mov
subb
lods
inc
rsm
arpl
es
pop
out
xchg
sahf
cmp
xchg
push
mov
push
cmovge
jg
clc
pop
or
xor
jo
dec
mov
dec
gs
jmp
mov
xchg
daa
adc
test
mov
jge
jmp
or
fsubrs
dec
mov
orl
clc
mov
hlt
mov
mov
mov
rorl
fimuls
js
pop
dec
lcall
cs
sbb
gs
sbb
lock
push
data16
inc
orb
xchg
jle
lcall
loop
pop
mov
loopne
int
dec
adc
sbb
add
mov
adc
stos
push
lret
iret
xchg
into
fdivrl
add
mov
xchg
roll
mov
adc
xor
subb
jo
push
sub
and
scas
ret
out
cld
int3
std
shl
sbb
cmp
pop
sti
xor
or
dec
jl
xchg
mov
das
adc
pop
js
int
bound
fisttps
in
test
mov
into
repz
push
push
xor
cld
sets
mov
aas
cs
xchg
test
push
add
sbb
data16
ds
or
jp
and
dec
pop
shr
inc
and
mov
out
icebp
repnz
add
inc
ret
and
jbe
mov
mov
sbb
jo
push
inc
xchg
inc
in
bound
mov
out
pop
ds
int3
mov
mov
cmpsb
mov
fcoms
xor
jns
jb
lods
push
pop
add
loop
es
fld
pop
stc
pop
pop
mov
iret
cmp
outsl
jae
subb
test
and
bnd
adc
not
shlb
or
lahf
hlt
out
fisubs
jb
jae
daa
adc
xchg
adc
int
mov
nop
outsl
sbbb
cmp
in
mov
inc
lods
addr16
dec
mov
scas
mov
aaa
cmp
popa
leave
mov
pop
xchg
and
mov
add
out
sbb
pop
inc
out
xor
xchg
arpl
xchg
adc
scas
lods
pop
lahf
popf
mov
jle
and
adc
add
jne
cmpsb
lock
and
orb
shrb
push
xor
popf
xchg
adcl
sbb
aam
leave
lcall
cltd
enter
or
lcall
sahf
clc
insb
add
shlb
and
fadd
pop
xor
out
and
scas
jnp
adc
mov
mov
cmp
mov
nop
loopne
inc
lock
arpl
push
sahf
hlt
sbb
pop
xor
inc
clc
int
and
push
into
lods
inc
add
aam
bound
mov
gs
js
and
stos
rcrl
les
outsl
dec
cmpsb
pop
inc
xchg
in
cmpsl
sub
test
or
arpl
test
in
aas
jno
or
jp
xchg
cmp
sti
addr16
add
dec
adc
dec
cld
outsl
inc
mov
push
dec
and
ret
insb
mov
cmp
sbb
nop
imul
push
ret
aaa
mov
lret
mov
filds
mov
dec
inc
iret
sub
fmul
leave
jae
fisubrl
in
sub
sub
dec
and
adc
popf
mov
lcall
and
push
cmp
push
in
add
mov
lds
call
sbb
pop
jg
mov
pop
mov
cmpl
mov
dec
arpl
pop
pop
mov
cmp
imulb
add
sub
or
cmp
push
mov
div
cmp
loope
stos
sbb
fildll
subl
inc
popa
aaa
repnz
dec
mov
xor
jp
shr
iret
mov
mov
pop
rolb
je
mov
mov
push
sub
sbb
pop
pop
push
pop
mov
stc
adc
cmp
nop
pop
mov
pop
fdivrs
xchg
sbb
shll
sbb
adcl
pop
js
mov
and
sub
out
cld
xchg
hlt
jae
repnz
dec
cs
pop
dec
push
sub
or
bound
pop
xorb
pop
std
mov
push
mov
insb
shrl
or
add
mov
adc
iret
mov
and
shrb
or
mov
or
loop
sahf
scas
xchg
or
pop
lds
loop
jbe
pop
aam
adc
and
popa
and
sub
ss
pop
outsb
cmc
mov
dec
adc
lock
fisttpl
cmp
inc
outsl
mov
jecxz
sbb
inc
push
ret
lods
inc
cmc
das
int
rol
or
dec
pop
mov
rorl
and
jns
mov
jle
xor
fistps
push
out
repz
scas
sbb
sbbl
push
shrb
bound
jae
sbb
mov
iret
xchg
lock
sti
dec
add
iret
xor
icebp
inc
ljmp
add
sub
cltd
in
or
and
js
mov
repz
xor
jbe
push
pop
jg
out
ss
jge
add
sbb
push
aas
xchg
cwtl
sub
arpl
and
stos
and
push
in
fs
pandn
jl
mov
enter
test
cwtl
das
ds
mov
aam
add
hlt
cmp
enter
jl
xchg
jmp
pop
sub
in
jmp
push
dec
rcrb
inc
int3
imul
push
xchg
jge
lods
mov
arpl
jmp
jl
pop
adc
js
ds
lahf
jns,pn
and
xchg
dec
mov
popa
addr16
test
lds
imul
test
mov
test
or
js
sahf
pop
loop
and
or
shlb
mov
adc
aam
dec
cmovle
sub
lea
ret
outsl
rcl
jnp
icebp
movsl
mov
clc
loope
push
out
mov
lds
and
sbb
in
mov
xor
sub
mov
mov
xor
daa
shlb
pop
inc
cld
or
jl
leave
xchg
jno
fistpl
mov
add
stos
test
xchg
fwait
cmpsl
jl
cs
and
and
cmp
shrl
xor
push
add
fsin
pop
ss
lea
mov
mov
nop
lret
lea
cmp
and
adc
jbe
mov
inc
mov
xlat
lea
dec
xor
mov
leave
mov
push
pcmpgtd
mov
mov
pop
faddp
insl
sub
mov
adc
notl
sub
ficomps
aas
push
or
sbb
dec
dec
stos
fnstcw
fs
out
jno
sbb
jns
jbe
rcrl
shlb
out
push
sub
mov
std
in
sbb
aaa
das
lds
pop
and
cmp
mov
mov
in
nop
mov
push
orl
pop
rcl
jp
call
push
xchg
hlt
mov
cmp
xchg
clc
push
add
push
mov
aad
jmp
dec
aaa
add
dec
dec
xor
sbb
or
sbb
mov
push
inc
push
or
icebp
out
cltd
push
xchg
cmpsl
jp
addr16
popa
sub
lds
jae
movsb
gs
aad
das
data16
je
xor
out
xchg
es
lcall
and
pop
in
and
js
rcrb
add
mov
xchg
andl
dec
rcl
test
mov
cltd
add
adc
add
fnstcw
hlt
xor
xor
int3
xorb
xchg
jge
push
stos
mov
or
sbb
pop
sahf
lret
data16
lcall
dec
xchg
sub
xchg
ret
repz
sbb
inc
add
cmp
aas
lods
and
pop
lock
adc
pop
push
add
test
fdivs
dec
sub
test
popfw
imul
xchg
lock
cmpsl
and
mov
int
adc
mov
mov
xchg
inc
pop
int3
xor
pop
psubq
fmull
pop
jae
mov
xor
mov
push
fstl
sbb
xchg
pop
cmp
dec
scas
xor
sbb
test
xor
push
jl
inc
and
mov
bound
in
andl
decb
jmp
xchg
pop
mov
fdivrs
sahf
fs
cmp
cs
aad
mov
cwtl
in
aaa
aas
mov
jp
jbe
mov
popf
jae
cmp
mov
cmpsb
ds
fcmovb
cld
das
je
jmp
push
mov
fucom
aaa
push
das
sbb
shlb
scas
xchg
mov
ljmp
jno
mov
jp
outsb
jl
push
loope
jo
cmp
mov
and
scas
sti
inc
insb
mov
das
shr
pusha
enter
les
popa
add
andb
cmp
aam
addb
jnp
je
xchg
clc
negl
sub
jne
aas
jle
bnd
ret
sbb
call
add
mov
jl
imul
jp
stos
mov
mov
ficoms
mov
in
addr16
xor
testl
pusha
notb
sub
mov
jbe
fists
loopne
xlat
outsb
or
stc
popl
cld
out
popa
loop
in
clc
dec
rolb
jmp
adc
pusha
cmpb
out
and
aam
mov
add
cmp
sub
sahf
pop
js
mov
cld
popa
lods
sub
inc
ret
jne
adc
dec
repnz
and
dec
rclb
mov
aaa
or
jp
call
jo
cmp
iret
fs
dec
push
mov
popf
call
mov
mov
cmp
lods
adc
and
xchg
pop
and
inc
xor
pusha
mov
out
dec
jp
jmp
xlat
adc
ret
xor
loope
push
pop
dec
push
lret
not
mov
leave
shrl
sbbb
pop
inc
out
in
dec
xorl
push
mov
iret
loop
adc
clc
or
inc
sbb
sbb
loopne
push
xchg
add
int3
add
add
sbb
dec
xchg
push
fwait
jle
jmp
dec
lret
xchg
cmpsb
lahf
sbb
repnz
jbe
mov
jle
out
mov
into
fldt
mov
mov
mov
ficoml
addl
adc
lods
xlat
mov
adc
mov
dec
dec
cmpb
mov
dec
out
insl
call
xchg
cs
xchg
dec
outsl
addr16
mov
rolb
cld
loope
gs
and
test
icebp
stos
mov
jp
test
sub
lds
lcall
addr16
pop
movsb
repnz
sub
aam
into
dec
jecxz
cmp
out
scas
js
adc
inc
inc
int
inc
in
add
mov
ss
aaa
mov
test
mov
jg
dec
push
fstp
cwtl
pop
dec
mov
pop
lret
mov
hlt
repz
fyl2x
shrl
mov
flds
jb
lcall
call
in
jb
inc
mov
adc
in
add
imul
popa
cmp
aas
int3
jmp
enter
jo
test
rcrl
in
pusha
and
repz
jae
mov
test
shl
arpl
sub
and
xchg
cmp
push
in
mov
xor
mov
icebp
push
shrl
jle
lea
push
dec
sbb
roll
in
fsubrs
rolb
mov
push
ficomps
mov
cli
repz
ja
inc
in
aad
ds
gs
mov
jmp
pop
push
mov
jnp
sarl
jle
loopne
jne
dec
adc
dec
fdivr
jae
movsb
xor
cmpsl
sti
int3
push
sub
cmp
dec
jg
js
mov
mov
in
mov
cmp
es
stos
clc
dec
mov
pop
rolb
dec
js
testb
push
loopne
int3
shr
fistpll
int
pop
fildl
sti
xchg
sbb
scas
sub
daa
je
popa
shrl
addr16
stc
sub
xor
pop
sub
in
std
xlat
pop
das
int3
push
arpl
and
push
cmp
daa
dec
mov
stos
lds
int3
mov
movsl
mov
jbe
adc
adc
pop
mov
jno
shrb
sahf
add
das
ja
mov
ficompl
inc
sti
mov
pop
cmpsb
inc
jg
divb
fnstenv
cwtl
jnp
mov
add
push
lods
stos
and
adc
jl
daa
aam
or
rolb
in
add
rorb
cmpsl
mov
push
in
rclb
xchg
mov
fcoms
and
ret
or
aad
mov
and
imul
inc
add
enter
or
aam
sub
out
ljmp
pop
mov
ds
cld
xor
pop
loop
add
rol
push
and
sub
scas
sbb
shll
clc
jo
mov
iret
cmpl
dec
and
fiadds
or
fs
ljmp
repnz
in
pop
dec
adc
pop
cmp
or
cmp
repnz
test
jl
push
test
pop
sti
dec
add
scas
cmp
dec
lret
xor
mov
es
dec
add
shlb
mov
jg
sub
push
lock
push
leave
xor
rolb
mov
jmp
xchg
adc
pop
ja
scas
shrb
sbb
ds
mov
mov
xchg
xor
mov
dec
sbb
sbb
test
add
push
adc
int
sub
or
jnp
aas
push
arpl
fdivrl
mov
test
sub
sub
repz
scas
adc
or
int
add
xor
xchg
inc
scas
test
xchg
sub
js
insb
cmp
sbb
fcmove
jg
jg
rol
push
out
inc
push
or
aam
fisubrs
outsl
cwtl
jbe
in
fnsave
mov
mov
or
xchg
in
daa
shufps
subl
repz
cmp
xlat
ja
pop
popf
xor
lret
repz
cmp
xlat
sub
pop
xor
lahf
notb
or
dec
cmp
fstpl
sahf
fsubr
xor
je
jno
aaa
sbb
pop
mov
arpl
enter
add
jno
fadds
negb
xor
jge
aam
or
adc
les
pop
cmp
mov
mov
xchg
aas
shll
outsl
mov
test
xor
jnp
lods
mov
pop
inc
push
aad
ret
mov
and
xor
pop
pop
aam
orl
shl
sbb
outsl
inc
xchg
inc
pop
xchg
bound
xchg
popl
mov
adc
inc
insl
insb
pop
cmp
mov
lcall
fnstenv
jns
push
stos
jnp
mov
cmc
mov
icebp
sahf
and
mov
lahf
inc
xchg
sub
jae
mov
cmpb
xor
push
lea
inc
pop
sub
cmp
movsb
xchg
mov
jnp
iret
cmp
fnstenv
sub
adc
mov
and
lahf
fimuls
inc
fisubl
fdivrl
adc
inc
popa
push
lcall
jo
sbb
and
ja
push
movsl
mov
aam
jl
std
mov
pop
test
roll
add
dec
pop
test
movsb
jns
inc
lret
sti
sbb
adc
sub
push
push
jnp
lret
nop
daa
cmp
fimull
scas
and
test
add
add
mov
mov
movsb
out
xorl
daa
inc
xlat
xsha1
ljmp
add
lret
sbb
rcll
into
add
jmp
adc
and
data16
xchg
lahf
jnp
mov
mov
lock
inc
push
in
and
or
in
cld
data16
push
test
imul
mov
mov
sub
js
repnz
xchg
jg
lods
jb
xchg
pop
adc
iret
pop
mov
mov
ret
mov
gs
inc
int3
lock
pop
lods
cmp
inc
xchg
adc
sbb
push
jne
imul
call
fadds
inc
mov
xor
testl
aas
stos
std
dec
stos
mov
shl
sbb
jecxz
loopne
cli
scas
adc
lods
dec
lds
xor
cltd
stos
ret
ljmp
mov
pop
popa
in
out
xchg
lret
in
cmp
adc
cli
mov
jo
sub
sti
jbe
rclb
rolb
scas
aaa
mov
push
sti
movsl
push
enter
or
mov
sbb
sbb
mov
xchg
or
clc
dec
aam
imul
test
cmp
out
out
fnstsw
add
sub
xchg
cmp
or
mov
push
insl
rclb
fdivrs
push
xor
call
jmp
les
addr16
cwtl
xlat
mov
xor
cmp
sub
imul
notb
pop
sahf
push
dec
js
dec
popa
dec
fst
data16
sub
lahf
lcall
pop
mov
add
lods
xor
cmp
in
xor
sbb
dec
pop
xor
fwait
jb
mov
inc
push
push
mov
stos
lret
lods
add
sbb
jnp
dec
xchg
movsl
sti
pushf
popf
dec
int3
xchg
jle
out
loop
mov
fwait
data16
xchg
icebp
lahf
inc
and
test
iret
sub
sbb
xchg
push
pusha
xor
xor
mov
pop
push
xchg
mov
push
call
cmp
pop
shlb
sbb
test
enter
jmp
mov
cld
jne
lods
iret
pop
jmp
stos
lods
lods
mov
xor
andl
lods
xchg
xor
push
psadbw
pop
mov
sub
jb
jnp
jne
jge
popf
sahf
or
mov
push
jnp
mov
jle
mov
lock
fbld
data16
fsubrl
xchg
lea
jp
loopne
scas
push
aas
andb
cld
add
clc
nop
or
push
sub
jno
dec
cmp
mov
push
stos
and
adc
les
jae
ret
inc
aas
je
or
sub
mov
sub
cmp
outsb
pop
shlb
jo
or
cmc
sbb
jp
movsl
sarl
into
test
mov
into
cwtl
xchg
clc
xchg
or
mov
jecxz
aas
dec
outsb
adc
int3
pop
sub
inc
movsl
and
clc
adc
call
in
fbld
push
popa
test
clc
or
in
or
and
sbb
repnz
pushf
cli
jg
movhps
sar
bound
push
loopne
sub
pop
inc
sbb
fnsave
cmpsl
in
sbb
das
loopne
sub
inc
fdivs
pop
pop
leave
mov
mov
testl
mov
mov
mov
mov
notb
arpl
std
jge
push
sub
int
or
lcall
dec
jne
jl
pop
jne
pusha
sub
adc
loopne
cmp
pop
xchg
pop
xorb
cmpl
pop
adc
adc
decl
pop
data16
std
jl
icebp
mov
aaa
ss
push
popf
pushf
and
int
adc
js
addr16
mov
mov
das
cmp
fucomp
repnz
outsb
push
mov
scas
mov
hlt
rcl
mov
jg
pop
mov
or
mov
lahf
jle
aaa
enter
inc
pop
push
sub
lcall
inc
sbb
mov
jbe
xor
mov
fnsave
pop
jb
push
xchg
sbb
or
sti
stos
add
push
inc
sbbb
adc
dec
add
shll
fcmovbe
jecxz
push
push
hlt
pop
popf
enter
mov
pop
in
jo
cmp
xor
xor
push
and
add
shrl
and
lcall
and
aaa
jb
loop
ror
enter
xchg
lahf
gs
inc
push
jp
call
cs
rclb
or
ja
movsb
pop
sbb
jbe
jae
popa
xor
scas
xchg
into
xor
fsubrs
fs
fs
insl
adc
jno
popf
xlat
push
out
imul
data16
lods
hlt
mov
mov
in
scas
pop
arpl
cmp
push
sub
ss
ret
data16
fcomp
mov
out
test
jmp
stos
inc
cmp
add
jne
gs
xlat
ds
cltd
clc
in
push
mov
or
rcrb
cmp
mov
cmpsl
stc
cmp
lock
jmp
pusha
ss
and
jne
mov
push
popf
dec
cmpsb
pusha
mov
in
loopne
xor
insl
aam
and
inc
out
push
inc
outsb
fcomps
or
jae
mov
pop
and
inc
je
mov
mov
or
cmp
adc
mov
es
xchg
push
mov
sub
cmp
test
or
pop
stc
jns
scas
sub
pop
fldenv
add
xor
xor
aam
add
shrl
out
push
in
pop
pop
popf
lods
sub
fwait
xchg
int
mov
xchg
sbb
mov
adc
mov
dec
pusha
xchg
mov
loop
and
mov
stos
stos
adc
popf
inc
push
movsl
dec
loope
pusha
call
mov
push
pop
lret
sbbl
movl
out
lods
mov
stc
imul
xchg
or
inc
scas
int
or
cmpsl
out
das
das
les
insl
hlt
orl
das
mov
add
gs
into
aaa
push
hlt
push
push
xor
xor
inc
icebp
pushf
or
aaa
pop
mov
mov
scas
mov
pop
sbb
pop
lods
mov
pop
addr16
lods
xor
mov
imul
push
or
add
sbb
jp
loopne
xor
fdiv
int3
addr16
icebp
jg
rcl
test
and
push
test
lret
mov
nop
test
inc
popa
iret
movsl
adcl
mov
xlat
lock
repz
inc
push
test
adc
sub
pop
testl
add
mov
xchg
and
push
fildl
popa
xor
ds
int3
arpl
roll
mov
adc
lret
pop
jg
pop
mov
push
adc
or
cmp
pop
shll
jmp
cld
xchg
test
mov
mov
xchg
ja
jne
add
xchg
inc
lret
xchg
rcr
mov
cmp
popf
imul
pop
mov
jge
jae
dec
mov
orb
cli
ja
fidivrs
in
cmc
inc
fwait
sti
inc
aam
add
jbe
icebp
mov
adc
dec
xor
push
hlt
setnp
lds
cmp
testb
fsubrl
push
call
jne
jp
or
mov
outsb
mov
ret
je
ja
add
xor
nopl
push
lret
test
adc
mov
mov
jae
lods
xchg
stc
xchg
push
cmp
ss
dec
sbb
jmp
xlat
out
dec
push
in
push
and
lods
int
push
ror
frstor
out
pop
lahf
scas
cmpsl
push
andb
add
push
leave
rolb
and
call
jmp
xchg
inc
push
js
jge
and
lods
inc
popl
in
jae
or
fwait
testb
xor
mov
in
push
test
and
cmpsb
fsubrl
gs
es
xchg
adc
cmpsl
out
in
lods
mov
notb
dec
xor
bound
in
lods
xchg
mov
adc
movsl
xchg
icebp
cmp
mov
and
and
jb
push
shlb
jne
stos
and
pop
xor
testb
sbb
fimull
jp
xchg
pop
pushf
sbb
jecxz
into
in
dec
movsb
xchg
or
fdivr
ss
fs
adc
insl
imul
adc
xor
dec
lods
cmc
shr
cmp
mov
insl
mov
gs
jae
jne
cmpsb
jp
sub
nop
shlb
xor
lds
cmp
and
jmp
jmp
fwait
pop
and
lods
sbb
adc
fdivrs
shlb
loopne
xchg
cmp
xlat
dec
mov
adc
data16
dec
sarl
add
cwtl
mov
xor
pop
in
sbbl
xor
ljmp
or
lods
mov
arpl
mov
out
xchg
sub
fwait
push
sub
aas
jae
jge
lock
and
cmp
lahf
sbb
inc
and
mov
jbe
inc
scas
xor
xchg
popa
mov
sub
test
or
mov
jne
int3
and
cmp
incl
stmxcsr
negb
mov
sbb
lea
movsb
mov
cmp
subb
leave
daa
push
repz
cs
mov
jnp
ds
mov
negb
sub
adc
and
fs
in
adc
es
sbb
cmc
mov
jbe
adc
mov
push
test
lret
addr16
icebp
pop
inc
and
leave
cmp
or
out
jno
cltd
add
jb
push
clc
push
sbbb
popf
or
xchg
mov
adc
sarl
mov
mov
int3
xchg
scas
int
jp
add
es
in
push
int3
movl
jge
xchg
xchg
cmp
repnz
cld
cmp
mov
ja
out
fs
aas
into
sub
fadd
lret
movsl
fsubl
push
sub
cmpsl
fmulp
sbb
dec
sub
repz
sbb
mov
xchg
sbb
pop
jbe
xchg
add
mov
inc
dec
jge
push
arpl
in
sbb
stos
lds
and
arpl
iret
and
mov
mov
out
sub
mov
jg
mov
nop
out
into
inc
mov
in
jnp
mov
mov
add
mov
and
pushf
xor
fcmovnu
adc
push
je
es
jmp
and
or
cwtl
mov
inc
and
mov
ja
cmp
outsl
lret
aam
dec
loope
out
imul
mov
jns
jae
loop
or
negl
sub
sahf
pop
fsubl
leave
push
mov
sub
and
dec
mov
out
cmc
pushw
xor
rolb
sbb
dec
dec
aas
mov
xor
scas
jbe
mov
in
push
shlb
sbb
cwtl
pusha
pop
pop
test
dec
or
dec
lahf
fwait
jno
add
test
or
pop
int
xchg
jnp
fwait
and
inc
pop
or
test
je
push
sbb
jb
ret
fbld
mov
imul
pop
or
mov
daa
imul
xor
mov
subb
into
jne
sub
cld
inc
pop
cmpsl
ds
mov
xchg
and
push
mov
loop
clc
fdivr
adcb
sbb
jb
out
aaa
jmp
pop
cmp
adc
cmp
ja
pop
jae
std
movsb
in
leave
ret
and
mov
push
insl
pusha
out
xchg
pop
xor
cmc
mov
filds
sbb
jnp
nop
aam
dec
cwtl
or
fnstcw
mov
xchg
and
rclb
out
and
inc
cwtl
shlb
fimuls
inc
cmp
test
ja
ret
add
inc
inc
push
inc
pop
mov
in
pusha
std
lret
dec
loopne,pn
movsb
out
sbb
aad
aad
sahf
cld
rol
negl
cmpsl
add
inc
data16
test
mov
sarl
fsub
mov
les
ficomps
lahf
loope
lret
icebp
int
dec
sub
ljmp
push
cmp
pop
popf
loopne
sub
in
shrl
ficoms
test
xor
bound
fstps
and
popa
andb
push
or
mov
in
mov
and
xor
sub
shrl
push
in
dec
sbbb
rol
repz
icebp
pop
push
pop
repz
mov
test
inc
das
pop
fwait
xorb
sub
jp
roll
add
pop
jl
push
sbb
cmc
int3
addl
lahf
scas
aas
mov
xchg
aam
lcall
push
popa
scas
or
adc
pushf
ret
hlt
mov
lahf
push
sub
jno
aad
cltd
std
jle
and
int
negb
dec
loop
mov
cltd
test
add
daa
out
mov
sbb
inc
push
outsb
cmp
iret
push
bnd
cmp
stc
inc
add
jle
mov
ret
mov
add
mov
xchg
sbb
add
and
xlat
mov
movsb
inc
lods
sub
push
lods
in
sbbl
pushf
int
rorb
out
pop
outsl
push
xchg
not
mov
jp
stos
pop
inc
inc
xchg
cli
inc
xor
cld
cmp
movsl
in
dec
mov
pop
loopne
cmp
dec
int
dec
mov
into
push
sub
imul
push
fimull
jmp
cmpps
mov
add
pop
push
mov
mov
or
jp
mov
sub
dec
pop
add
jb
int3
sbb
lret
lea
adc
jg
fmuls
mov
sub
xchg
les
int
pop
test
push
mov
xor
mov
add
or
inc
mov
xchg
pop
fildl
loope
loope
push
ljmp
jno
push
xchg
dec
lea
incl
jbe
jcxz
xchg
jl
and
push
mov
push
adc
inc
xor
dec
pop
fiadds
mov
in
stos
and
push
rorl
pop
out
in
pop
rcrb
jbe
add
jns
mov
ret
aad
sub
repz
xchg
cmp
fmuls
pop
popf
out
jle
enter
in
or
lret
test
pop
int
mov
pop
fisubrl
jge
scas
fisubrl
mov
xchg
cs
add
xor
xchg
lcall
push
or
sbb
jnp
sub
call
lahf
or
mov
into
sub
xor
mov
les
sbb
sbb
movsb
stc
loop
cmp
mov
push
ss
ficomps
pushf
push
and
push
adc
cli
add
addl
sbb
inc
sbb
ficoml
xor
ljmp
call
lcall
loope
mov
dec
dec
nop
cltd
rcl
aad
xlat
sub
sub
cmp
jno
mov
push
and
fcompl
stc
les
repz
pusha
sbb
scas
sbb
test
leave
mov
inc
sub
sarl
data16
jl
fldcw
mov
test
add
negb
sbb
mov
rcll
lret
loopne
cwtl
mov
imul
pop
adc
out
popa
dec
pop
repnz
inc
add
jnp
add
aaa
inc
testl
leave
pop
inc
and
or
sahf
pop
jmp
xor
and
out
push
loopne
or
push
mov
sbbl
pop
mov
outsl
daa
xchg
jns
mov
cwtl
sbb
std
outsl
xchg
and
stos
jle
fnstsw
xor
hlt
insl
lods
adc
xchg
test
pushf
jno
js
push
push
xor
sub
pop
cmp
lds
std
mov
jae
out
dec
loopne
push
les
std
leave
mov
addr16
push
xor
popa
pop
add
push
in
pop
dec
sahf
pop
inc
insb
jle
ja
add
sahf
test
std
dec
out
jp
inc
pop
sub
xchg
sub
jb
dec
mov
in
sub
mov
or
into
xchg
push
push
add
adc
mov
adc
xorl
add
sub
repz
dec
ret
je
cmc
imul
ret
mov
inc
or
adc
push
shlb
fsubl
adc
mov
fpatan
add
sbb
pusha
imull
xchg
sub
stos
mov
and
lahf
fmuls
jecxz
in
in
push
cld
and
push
xor
mov
jmp
push
jae
out
lock
pushf
pop
mov
mov
mov
jmp
clc
sbbb
insl
add
mov
push
pop
jbe
xor
lods
dec
or
aam
cmp
pushf
shl
add
jno
test
add
cs
ljmp
imul
xor
lods
orl
mov
in
jb
mov
into
enter
ds
cmp
jns
aas
xchg
cmpsl
jo
push
adc
mov
out
jge
scas
iret
add
imul
push
sub
loope
lds
aaa
into
cmp
add
outsl
push
cmp
mov
cmp
xor
add
push
aas
or
cmpsb
pop
dec
pop
inc
repz
aam
mov
sbb
mov
fmull
mov
pushf
andl
push
out
jno
mov
mov
lea
and
clc
popl
out
jmp
mov
jg
mov
aaa
jae
pop
cli
lock
jmp
loope
out
cmpsb
mov
xchg
mov
xor
fisubrl
mov
insl
jl
test
or
aaa
push
inc
xchg
shl
mov
out
mulb
rcll
push
cmp
push
fldt
leave
mov
jno
into
add
cltd
aaa
inc
push
mov
loopne
inc
push
pop
es
and
repnz
adc
xchg
lods
test
and
les
add
repnz
cltd
xchg
scas
push
mov
cmp
sub
pop
hlt
add
dec
or
scas
xchg
in
xor
decl
jle
enter
fnstcw
cmp
inc
test
nop
pop
mov
adc
aam
movl
jmp
xor
inc
push
jne
pushf
push
stc
mov
pop
cmp
popf
push
jne
push
cmpsl
mov
xlat
scas
and
push
popa
mov
cmc
pop
shl
lds
lret
je
movsb
push
popa
call
pop
jg
dec
stos
dec
jl
mov
daa
outsb
add
adc
jno
push
out
into
dec
scas
and
mov
daa
insl
dec
aaa
pop
sbb
mov
pop
mov
mov
add
push
dec
xor
xor
inc
std
mov
or
fs
mov
push
arpl
push
out
add
cmp
or
mov
addr16
mov
sarl
sub
dec
dec
jo
cltd
fdivrl
ret
dec
inc
push
test
lock
and
fwait
xchg
xchg
outsb
dec
mov
rcl
cmp
add
pcmpgtw
mov
dec
or
daa
outsl
clc
or
stc
fadds
ror
data16
mov
push
sbb
test
inc
xchg
push
pop
mov
out
mov
mov
push
ret
sbb
jbe
sub
mov
test
mov
mov
adcb
jmp
push
aas
int3
mov
inc
jmp
cwtl
xor
loop
inc
fwait
inc
movsb
inc
imul
mov
pop
and
mov
inc
mov
shll
das
jecxz
cmp
lcall
sahf
mov
repnz
xlat
push
outsl
pusha
jge
orl
data16
jl
mov
xlat
pop
outsb
lds
stos
mov
outsl
test
stc
sti
cmp
outsb
xchg
xchg
stos
push
iret
mov
rclb
add
sbb
inc
dec
cmp
fisttpl
fucomip
jne
stos
jle
xchg
xor
dec
cmp
js
imul
sahf
in
pop
sbb
push
xor
add
test
inc
idivl
push
sarl
mov
inc
movsl
mov
and
and
push
jo
insb
xchg
fs
sbb
sbb
or
cltd
daa
mov
arpl
andb
push
jae
movsb
pop
sbb
mov
jo
jmp
sbbb
inc
cmp
dec
or
lods
cmp
imul
xor
mov
inc
shl
arpl
or
mov
mov
lcall
inc
sub
cs
testl
and
jecxz
popa
cmp
add
jb
aas
mov
insb
jmp
mov
or
mov
dec
sub
inc
movb
jns
xor
sti
mov
pop
out
icebp
stc
cmp
sbb
ror
pop
mov
ret
sbb
fmul
adc
es
inc
scas
addr16
push
ror
lret
into
lea
mov
lea
adcl
int3
jecxz
jae
pop
mov
adc
popa
add
movsl
mov
popa
add
sarl
into
shlb
shlb
hlt
repnz
add
fldcw
cmpsb
sbb
testb
orl
pop
mov
stos
add
lret
or
mov
call
sub
pop
ror
add
orb
fwait
pop
mov
cmp
mov
xchg
add
movsl
repnz
shll
repnz
dec
dec
sub
xor
call
psubusw
testb
les
pop
push
ss
xchg
dec
ds
sub
cmpsl
and
cwtl
cmp
orl
repz
out
les
mov
jno
popf
push
hlt
push
dec
pop
test
stc
add
push
sub
popf
out
dec
mov
add
enter
dec
mov
in
push
repz
jmp
mov
push
adc
xchg
mov
aaa
outsl
jne
jns
insb
lcall
add
mov
mov
jb
addl
cmp
xchg
flds
mov
shll
xor
ljmp
cmp
mov
mov
shlb
fdivs
outsl
pop
fsubrl
fsubs
test
or
xchg
shll
repz
add
stos
xchg
daa
pop
jne
add
jle
ret
hlt
xor
xchg
out
mov
les
insl
loopne
hlt
call
lds
xchg
sub
out
mov
lock
aas
and
les
jecxz
iret
mov
cmpsl
mov
add
mov
jmp
sbbl
stos
push
scas
sub
cwtl
loop
mov
cmp
dec
dec
and
daa
cmp
add
lea
pop
pop
sub
cs
inc
int3
ficomps
fcompl
jge
ret
pop
xor
inc
je
inc
andb
fildll
mov
stc
or
insl
mov
lock
cmp
addr16
aaa
pop
mov
cwtl
test
shlb
mov
pop
push
and
mov
out
sti
mov
pop
fldt
push
adc
cmc
jecxz
cmp
cmpsb
inc
cmp
fnstcw
pop
or
or
adc
dec
int
dec
js
shll
jno
lock
pusha
mov
shrb
jns
stos
jo
fdivr
les
sub
dec
aas
cmpsl
loope
leave
ds
dec
mov
mov
lret
movsb
mov
push
mov
xchg
push
out
enter
pop
gs
addr16
test
sbb
push
test
enter
iret
xchg
sub
xor
leave
int
mov
mov
ror
and
mov
imull
adc
pop
and
push
clc
and
and
inc
setg
sub
xor
push
cli
or
jno
xchg
xor
popa
out
mov
mov
xor
inc
xlat
mov
sub
daa
loope
andps
scas
add
jp
stc
and
dec
pop
jge
mov
les
xchg
xor
jle
adc
xor
mov
cmpsl
cmp
lret
in
fs
in
xor
mov
inc
in
repz
iret
sub
hlt
cltd
xchg
test
lret
sbb
push
cmp
mov
mov
mov
aam
cwtl
pop
push
fnstsw
xor
or
sbb
jae
ret
ret
xor
mov
pop
xchg
adc
and
and
sbb
pushl
je
imul
xchg
push
push
imul
call
mov
mov
data16
lods
mov
fstpt
lcall
and
sbb
adc
mov
hlt
scas
fwait
repz
iret
pop
imul
cltd
and
mov
fimull
jae
inc
xor
mov
int
popa
decb
xchg
addl
push
stos
or
push
pop
pop
cmp
insl
jle
xor
lahf
std
inc
fsubrl
out
dec
pop
mov
loop
arpl
sub
std
add
inc
out
fdiv
push
push
mov
mov
fmuls
pushl
jae
cld
in
call
outsb
mov
cmp
mov
add
outsl
and
jl
adcb
dec
insb
cmp
sbb
int
arpl
cmc
rolb
lahf
stos
push
and
jo
outsb
inc
stos
xchg
mov
push
mov
or
imul
mov
pop
jecxz
add
nop
ret
xor
mov
loop
push
rolb
mov
in
push
inc
cs
push
call
and
mov
dec
scas
mov
xchg
ja
enter
sub
aas
imul
daa
jmpw
movsl
cmpsb
xor
je
xchg
dec
mov
jle
hlt
cmpsb
push
sub
pop
xchg
insl
setge
outsb
add
lds
cli
mov
push
jne
jne
jnp
jg
push
sub
mov
add
ss
je
jg
in
addl
repnz
sarb
aad
clc
pop
xor
std
stc
xorl
sub
cmp
movsl
mov
insb
test
mov
test
mov
js
lret
xor
dec
cmp
jae
jge
jb
icebp
or
xchg
or
rcll
sbb
mov
or
mov
ljmp
sbbb
adc
imul
negb
mov
mov
xlat
call
adcb
ljmp
pop
adc
xchg
inc
aad
stc
and
lds
dec
enter
bnd
mov
lea
fildl
push
in
mov
loopne
xchg
sti
iret
fisttpl
dec
dec
mov
push
sub
add
sahf
push
dec
sbb
pop
bound
push
aaa
sub
pop
rcll
fucomi
xor
xlat
movsb
jno
daa
jle
mov
es
loopne
xchg
push
imulb
ljmp
fsubs
shlb
and
sub
and
cmpsl
mov
repz
bound
mov
leave
xchg
dec
sbb
lock
out
jb
pop
pop
xchg
aas
add
jl
outsl
dec
insb
imul
and
jmp
mov
iret
sub
mov
stos
stc
pusha
cmpsl
mov
ss
lahf
mov
or
add
lahf
sub
insl
sub
dec
aam
mov
mov
mov
dec
add
or
add
mov
mov
aas
xchg
and
dec
pop
bound
out
loopne
ja
shrl
mov
fs
out
add
jbe
insl
popa
jle
mov
rcl
sub
push
loop
mov
jp
dec
sbb
pop
pop
ret
push
sub
cmpsb
mov
push
dec
jnp
in
mov
mov
les
rcrl
ficoms
cmp
inc
push
pop
mov
lret
xchg
mov
xchg
push
inc
test
jecxz
gs
mov
out
pushf
adc
loope
cmpsb
mov
push
jo
iret
or
test
inc
insl
lds
iret
mov
pushf
lret
push
mov
pop
xlat
stos
fnstcw
xor
mov
gs
js
mov
dec
mov
popf
add
rcrb
push
in
add
inc
sbb
loop
cmp
test
sbb
or
jnp
movsb
daa
xor
lds
pop
ret
xor
mov
mov
and
dec
pop
in
mov
aaa
sbb
dec
dec
pop
sahf
mov
nop
xchg
test
ja
push
xchg
pop
xchg
mov
push
and
aas
leave
outsb
adc
pop
dec
test
cmp
out
and
stos
xor
mov
push
aam
pop
mov
or
idivl
jl
fisttpll
mov
sbb
jo
xlat
xchg
sub
pop
int
fwait
loope
int
fsubl
push
mov
test
cld
inc
inc
adc
adc
and
stos
xchg
xchg
adc
pop
insb
popa
ret
sbb
rol
xor
add
nop
sub
out
push
lcall
rcrl
shr
and
jb
inc
lret
scas
out
mov
xlat
xchg
add
dec
mov
jle
aad
shrb
lea
stc
lock
mov
cmp
push
ljmp
push
mov
push
sbb
xchg
jmp
dec
les
adc
or
test
lods
mov
cmpsl
push
sub
and
mov
adcb
test
xchg
dec
cmp
in
addr16
sub
cmpsl
lret
pop
dec
xchg
xorl
in
hlt
fnstsw
pushf
sbb
btc
mov
sbb
fists
test
iret
fcmovnb
lret
pop
or
gs
aam
dec
sbb
mov
ret
shl
dec
cs
sahf
dec
adc
cmp
push
in
jmp
addl
notl
nop
mov
pop
sub
shll
clc
xchg
sbb
dec
pop
add
dec
loop
inc
call
test
mov
popa
in
mov
add
inc
ds
stc
pop
aas
mov
sbb
jp
int3
js
sbb
mov
outsb
mov
testl
xchg
mov
outsb
subl
pop
gs
or
adc
inc
sbb
pop
xchg
adc
and
out
pop
jno
xor
jp
push
lods
fiadds
push
fstps
xchg
fs
mov
mov
push
mov
int
testl
push
outsb
add
mov
rorb
lock
or
inc
imulb
cmp
loopne
inc
sbb
push
aaa
pop
jp
push
or
mov
daa
ret
jne
sbb
jl
aas
idivb
sbb
inc
repnz
xchg
shlb
mov
push
das
sbb
push
mov
cmp
movsl
mov
movsb
push
push
dec
sub
nop
aad
pop
cmp
daa
jp
nop
addps
mov
rcrb
mov
fwait
insl
into
dec
add
mov
lcall
data16
ss
cmpsb
scas
rclb
mov
ret
xor
jp
scas
inc
push
mov
nop
aas
jb
xor
in
cwtl
pop
iret
or
jg
or
cmp
subb
scas
push
dec
insb
sub
sub
jg
fwait
and
mov
cltd
or
and
ja
aas
popa
mov
push
sub
pop
push
icebp
dec
leave
in
adc
add
pop
pusha
xchg
std
insl
mov
mov
xchg
movsl
push
cwtl
nop
pop
cltd
sbb
mov
jbe
add
fisttpl
cmpl
lods
xchg
inc
push
inc
push
ds
and
xlat
mov
cmpsl
push
cmpsl
dec
mov
sbb
push
inc
push
mov
mov
mov
add
and
mov
ret
pop
fwait
xchg
cmp
sub
outsl
lret
mov
and
fadds
jno
push
sbb
in
mov
nop
or
mov
xchg
daa
mov
adc
shrl
fstps
stos
packuswb
pop
into
stc
bound
into
daa
xchg
mov
dec
loope
add
cmovo
jmp
lahf
jo
in
jae
push
movsl
push
add
xor
arpl
loop
push
mov
adc
cmp
lock
sub
inc
fsincos
loope
adc
pusha
testl
sub
cmc
xchg
into
movsl
inc
dec
sbbl
mov
pop
adc
rorb
add
xor
or
filds
pop
insb
cmp
push
das
inc
adc
jae
xor
sbb
repz
lcall
and
xor
xchg
cmpsl
out
sahf
ss
inc
dec
jmp
jl
inc
ficoms
add
lret
loop
ds
dec
pusha
adc
push
mov
cmp
sbb
sbb
cmp
nop
hlt
mov
bound
push
icebp
or
pop
mov
jns
stos
into
popf
fistpl
rcll
mov
jmp
sbb
pop
lahf
mov
test
sahf
pop
movsl
cld
pop
ss
mov
jbe
mov
pop
leave
pop
and
mov
cmp
mov
ret
outsb
fdivr
jo
or
jnp
jns
outsb
lods
mov
cmp
stos
or
adc
adcb
in
and
sub
sbb
popa
enter
sub
jle
cli
lods
inc
ss
inc
fdivrl
rcrl
fucomp
inc
xor
fldenv
mov
mov
into
pop
fistps
xchg
xor
xor
cmpb
cs
dec
jecxz
inc
rclb
inc
push
xor
fs
push
cltd
jbe
inc
push
rorb
std
jge
push
loopne
mov
adc
adc
shlb
imul
xchg
dec
repnz
in
test
adc
loop
pop
cmp
and
fscale
lock
cmpsl
loope
fcmovnbe
mov
jae
fs
test
ds
orb
je
push
push
inc
or
pop
sub
inc
or
xchg
xchg
cmp
sbb
cld
and
and
sub
aas
push
faddl
pusha
pop
jecxz
cli
in
lods
cmp
outsl
push
jmp
rorb
xlat
cmp
enter
push
and
dec
xchg
adc
jbe
out
cli
mov
mov
fistl
je
mov
fs
push
pusha
sbb
xchg
xchg
cmp
scas
cmc
sbb
push
sbb
mov
xchg
lea
and
and
or
jns
and
mov
sahf
jle
inc
jg
jnp
cmpl
push
adc
cmc
scas
xor
inc
mov
movsl
sbb
inc
xchg
adc
std
lods
call
test
test
aas
xchg
mov
in
fwait
insl
sbb
sub
je
shlb
loop
lret
testl
add
sub
mov
pop
dec
mov
inc
pop
xchg
fcoms
pop
or
jp
imul
loopne
stos
stc
aam
push
and
lods
jmp
adc
popf
push
out
mov
jecxz
push
mov
cmpb
pusha
repz
mov
bound
lock
into
pop
lods
inc
addr16
inc
int3
pop
outsb
test
push
out
sahf
leave
cmc
daa
push
jno
dec
ror
insl
enter
out
aad
push
mov
mov
stos
test
push
outsl
cmp
test
xchg
aam
mov
xor
pop
shrb
sahf
fildll
xchg
ret
inc
call
pop
jge
sbb
mov
adc
popf
mov
or
push
lods
inc
les
push
sub
lret
inc
scas
cmp
cwtl
popf
movsl
jno
xor
xchg
lods
jns
adc
sbb
sub
pop
lret
pop
inc
jmp
mov
ret
out
mov
je
ljmp
and
push
adc
mov
test
mov
out
mov
arpl
aad
ficompl
dec
pop
mov
mov
cmp
out
jno
xchg
and
insl
xor
data16
sub
or
push
sub
xor
sub
adcb
mov
fldcw
cltd
cs
jne
jnp
das
inc
ret
sbb
sub
adc
adc
cmp
enter
leave
push
pop
mov
or
out
test
or
jl
outsl
daa
sarl
dec
lahf
push
fs
dec
cmp
test
hlt
adc
loope
gs
mov
push
inc
js
addb
xor
adc
cltd
pop
xchg
scas
mov
fst
bound
xchg
mov
xchg
and
xchg
inc
loopne
int3
lcall
ljmp
pop
and
sti
or
aam
mov
imulb
call
mov
repz
or
jg
pop
sbb
in
nop
mov
cmpsb
mov
addb
sbb
test
push
mov
mov
inc
push
test
scas
lods
xor
cmpb
test
pop
cmp
mov
fdivrl
adc
push
mov
data16
xchg
jns
pop
and
loopne
gs
clc
mov
hlt
test
aad
push
hlt
shlb
es
xor
push
test
inc
sub
je
aas
add
cmpsl
mov
cld
pop
push
fsqrt
dec
das
dec
daa
outsl
mov
movsb
jnp
loop
and
add
das
sahf
out
popf
jg
inc
imul
cmpsl
das
sub
test
pop
and
xchg
arpl
repz
imul
add
xchg
sbb
xlat
shr
jmp
out
in
pop
mov
cmp
jp
jmp
jle
pop
stos
movsb
jae
pop
push
leave
push
lods
stos
xchg
push
shrl
int3
aad
jp
adc
inc
fwait
adc
icebp
loope
push
adc
ret
jle
mov
stc
and
pop
out
adc
sbb
mov
in
outsl
mov
out
in
mov
inc
pop
xor
rolb
out
jnp
sbb
js
xor
push
cmpsb
pop
fistpl
mov
mov
mov
test
push
cmp
jecxz
mov
sarb
iret
fisubrs
fucomp
dec
mov
int3
dec
xlat
inc
xchg
montmul
cmpsb
neg
and
sbb
mov
pop
xor
mov
xchg
inc
nop
sub
sbbb
xor
jne
das
xor
add
rol
pushf
repz
xchg
out
and
or
cmp
sub
aas
in
or
mov
adc
pop
xchg
jge
subl
mov
push
jmp
mov
out
in
adc
cmp
jmp
dec
fimuls
rcl
call
das
cmp
fcmove
pusha
adcb
scas
test
adc
inc
fidivl
rol
jmp
lea
int
out
aam
dec
pop
mov
mov
lahf
push
and
jnp
out
outsl
pop
dec
gs
pop
inc
fstl
loope
and
xchg
mov
popf
inc
xchg
mov
jp
int
cwtl
aam
mov
and
dec
mov
cmp
hlt
outsl
xchg
sub
push
lds
fs
in
aas
cmp
mov
cltd
inc
scas
inc
inc
mov
pop
cmp
nop
out
divl
insl
jmp
or
lahf
stos
jno
xor
mov
xchg
call
mov
add
add
out
push
nop
cmp
cwtl
push
xchg
add
in
into
ret
in
jo
daa
lret
adcl
xchg
das
repnz
and
test
andl
mov
jnp
jecxz
mov
mov
push
xchg
outsl
pop
push
or
or
or
ja
pop
mov
jle
inc
xchg
repz
bound
in
iret
mov
rol
lods
xor
aam
subl
jb
pop
int3
fisttps
and
fistpll
js
push
lret
loop
ja
fwait
lods
cmp
push
call
mov
pop
dec
pop
inc
arpl
jg
xchg
cs
addr16
or
dec
aas
ja
mov
scas
pop
inc
fldt
dec
sub
dec
cmpb
and
dec
fbstp
add
out
xchg
jmp
adc
inc
and
xchg
fnsave
jb
addr16
cmp
loopne
jb
push
inc
fdivl
incb
inc
jmp
js
xor
mov
xchg
cs
pusha
adc
xchg
jl
hlt
sbb
das
nop
adc
pop
into
fimull
es
lret
data16
inc
jnp
xor
repz
into
gs
adc
mov
in
sbbl
mov
repnz
jg
pop
dec
bound
push
mov
pop
rcl
js
sbb
jmp
out
fbld
sub
dec
jecxz
iret
xor
xchg
push
jmp
and
push
push
jo
cmpsb
mul
dec
sub
push
and
adc
push
movsl
or
adc
adc
pop
lock
ss
lods
popa
jo
daa
loop
xor
movsb
mov
shll
push
add
inc
pop
cmp
mov
jno
inc
arpl
inc
cld
enter
mov
mov
xlat
mov
xchg
data16
iret
fs
push
sub
add
das
or
into
mov
jle
lea
cmc
adc
hlt
push
aad
jnp
inc
adc
call
sub
test
push
iret
loope
xchg
int
int
mov
mov
test
addr16
xor
into
push
loope,pt
mov
dec
dec
lret
inc
adc
adc
cmp
mov
xchg
sub
push
enter
shll
movsl
lahf
jns
ss
rclb
mov
ret
inc
jo
pop
in
dec
add
ss
dec
jns
mov
or
and
nop
test
inc
aas
mov
pop
pop
movsl
rcrl
std
lret
pop
test
pushl
inc
mov
jp
test
lahf
mov
jae
dec
insw
add
ret
xor
xchg
inc
cmp
popa
xchg
cmpb
stos
mov
fnstsw
add
rcr
xor
addb
sti
es
mov
lret
push
lcall
rcll
in
iret
pusha
xchg
shr
and
enter
fs
jb
test
lahf
outsl
sub
xchg
push
xor
dec
lock
ficoml
jnp
gs
and
ret
dec
jmp
or
aaa
test
scas
cli
add
sbb
add
sarb
cld
lcall
jne
pop
lahf
sbb
or
sub
pop
adc
shll
fildl
rep
jae
ret
dec
jbe
cmp
xor
testl
imul
xchg
icebp
xchg
mov
add
and
fstps
test
push
test
shl
lods
bound
xor
jns
push
xchg
adc
rcrb
add
test
jmp
int
inc
jle
out
bound
fcomps
arpl
sub
cwtl
shr
sub
mov
push
test
inc
test
repz
xchg
rorb
sub
mov
sahf
ret
mov
fisubrl
cmpl
mov
mov
aam
add
pop
test
in
mov
xchg
jle
or
dec
sbb
aam
je
jne
in
jns
or
test
inc
iret
enter
jne
adc
cmp
xchg
loop
mov
xorb
pusha
cmp
or
add
jo
mov
es
mov
mov
clc
mov
push
andb
inc
and
jecxz
test
add
mov
jle
xor
or
fcomps
ljmp
ds
je
popa
lea
notl
add
sar
mov
mov
rol
cli
lea
mov
daa
add
sub
xchg
in
push
dec
mov
movsl
add
stos
push
iret
xchg
in
cmp
arpl
cmp
ljmp
mov
rcrb
fidivrl
scas
mov
lods
movsl
inc
js
aam
jg
dec
in
sbb
sbb
and
mov
lret
jae
addr16
movl
sbb
dec
cmp
out
sub
loope
inc
jne
loopne
loopne
pop
in
ja
into
add
jmp
push
sbb
sbb
cmp
or
xchg
mov
arpl
lea
int
inc
dec
adc
push
add
push
int
pop
sbb
push
xor
or
sub
adc
dec
es
out
jne
faddl
sub
mov
mov
dec
lods
push
in
shlb
push
cwtl
pop
cmp
out
test
mov
stos
jbe
std
and
nop
push
lock
jne
cmp
fadd
pop
mov
mov
enter
jge
js
dec
dec
mov
jecxz
out
dec
call
sbb
lea
sti
sub
repz
inc
in
mov
test
jns
popa
xchg
jae
cs
outsl
adc
pop
test
push
das
add
push
sub
xchg
addr16
insl
shll
imul
push
mov
mov
leave
enter
push
add
scas
and
repz
int
lds
fnstsw
push
or
loope
xor
icebp
cld
out
ljmp
int
aaa
mov
imul
jmp
out
sub
pop
cmp
inc
jnp
mov
in
cmp
jp
or
sub
jmp
xor
repnz
push
out
push
cmc
dec
iret
lcall
cs
add
xorb
and
mov
mov
push
mov
insb
lret
dec
adc
out
iret
sbb
inc
sbb
sub
push
lahf
adc
sbb
loop
sti
int3
jae
adc
in
jp
xor
insl
mov
xchg
add
pop
pop
push
lods
js
int3
pop
das
out
mov
pop
lea
push
inc
add
push
out
fwait
test
xchg
cmp
fwait
sub
aas
sbb
jl
repz
cmpsb
dec
loop
mov
sub
dec
orl
dec
push
int3
and
mov
push
subl
mov
mov
adc
cmp
xchg
dec
inc
lcall
sarl
jl
sub
fisubl
bound
mov
fs
iret
int3
xchg
rol
enter
scas
inc
sub
iret
pop
inc
and
into
test
dec
pop
loope
int3
jae
inc
sbb
icebp
ja
bound
or
cmpl
dec
stos
mov
movsb
imul
cmp
push
cmp
add
aas
push
inc
repz
dec
rolb
lahf
imul
or
xchg
mov
xchg
mov
xlat
dec
adc
xor
xchg
xchg
ret
jb
das
pop
hlt
sbb
repnz
popf
pop
jns
inc
cmc
push
out
mov
cmpsl
ds
repz
rolb
cmp
call
cmpsl
imul
add
insb
arpl
sbb
inc
scas
mov
lods
xor
add
jg
out
or
push
jnp
adc
push
fldcw
push
lods
xchg
int3
daa
adc
fisubl
in
test
andb
aaa
lret
xor
jmp
xorl
fists
push
mov
jp
cmpsl
and
cmp
and
mov
dec
pop
ret
inc
jnp
cli
push
pop
out
sbb
mov
or
cmp
sbb
inc
ret
pop
jne
in
xchg
mov
aam
xchg
test
mov
mov
ret
sbb
xchg
adc
orl
pop
lds
lcall
and
sub
mov
repz
dec
mov
dec
test
aaa
into
add
dec
mov
or
rol
mov
retw
loope
mov
cs
popa
popa
sbb
inc
mov
mov
push
jp
ljmp
call
aad
cmp
push
cmp
lahf
cmpsb
loope
xchg
pushf
adc
inc
mov
bound
lret
scas
cmp
test
push
pusha
outsl
sti
int
stos
mov
and
mov
loope
lods
cmp
cmp
fistl
out
or
ja
pop
xsha1
cmpsb
mov
sbb
movsl
stos
inc
mov
push
leave
mov
xor
les
cmp
add
jnp
out
and
popa
testl
xchg
push
rcll
xor
les
div
mov
pop
sahf
jp
sbb
out
sti
push
outsl
push
mov
pop
mov
adc
les
xchg
mov
pop
outsl
insb
scas
or
mov
mov
aad
cmp
adc
in
inc
ja
iret
cmp
xlat
cmc
push
mov
stos
mov
mov
and
gs
push
pop
ljmp
push
inc
mov
es
lds
addb
dec
mov
stos
jne
orl
mov
mov
mov
and
adc
sub
mov
jge
fnstsw
xorl
push
cmc
pushf
adc
loope,pt
adc
sub
jmp
mov
stc
dec
sbb
rorb
mov
mov
int
call
xor
inc
push
lret
dec
jnp
mov
into
push
data16
pop
cmpsb
mov
and
sub
mov
push
adc
ss
jnp
lahf
jg
pusha
mov
mov
mov
arpl
loop
sub
mov
sbb
insb
into
sub
rclb
and
outsl
roll
sub
cmpsb
pop
push
rolb
pop
or
shl
sbbl
in
push
mov
push
xor
pop
push
test
pop
rclb
pop
filds
mov
data16
and
mov
xor
and
fstpt
push
sub
repz
and
out
cmp
jecxz
sbbl
sahf
fsubrs
or
adc
ret
fiadds
mov
jge
sahf
test
dec
and
js
ljmp
mov
jb
repnz
sbb
sbb
cmp
into
xor
stos
dec
shrl
stos
popf
insl
movsl
pop
out
cmp
or
dec
cmp
int
mov
insb
paddq
xchg
lret
stc
mov
fcmovbe
mov
imul
cmp
sahf
cmc
ret
sbb
pushf
repz
adc
push
mov
imul
pop
mov
inc
aam
mov
pop
ret
jle
imul
sbb
add
inc
data16
lret
je
das
cld
xchg
insl
insb
xchg
dec
jp
lahf
addb
pop
sbb
pop
inc
lahf
mov
xor
push
movsb
cwtl
mov
sti
adc
inc
jae
jne
pushf
mov
jae
push
jb
xchg
dec
loope
xchg
xchg
lahf
mov
or
outsb
addr16
inc
imul
cmpsb
sub
bt
aad
in
inc
inc
mov
and
cmpsl
mov
pusha
or
call
mov
jne
jo
call
xchg
cmp
sub
fnstenv
jo
inc
into
ja
jge
xlat
data16
pop
dec
repz
lock
rol
sub
shlb
cli
call
dec
cmp
push
rep
cmp
jae
in
push
push
repz
lock
jecxz
mov
out
aad
lret
push
fstpt
xor
sub
bound
out
mov
or
cltd
pop
mov
push
jo
mov
js
lea
mov
sahf
testb
add
sbb
jnp
ds
xchg
pushf
pop
mov
outsb
push
aas
adcl
les
jg
ds
push
aaa
xchg
or
dec
add
jg
push
movsl
ficompl
fimuls
subl
shll
or
mov
xor
rolb
ja
or
sbb
std
lahf
mov
imul
daa
pop
das
sbb
pop
test
jno
sub
cmp
ret
lock
test
xchg
movsl
sbb
sbb
std
push
dec
push
xlat
jmp
pop
sub
outsb
pop
aas
dec
repnz
popf
sbb
mov
mov
jmp
sbb
push
ss
je
jbe
lret
scas
mov
jne
hlt
ja
inc
call
xchg
and
sub
xor
std
mov
je
jns
adc
fisubl
mov
xor
mov
dec
lock
movsl
mov
int3
push
fidivs
pop
sub
movsb
rol
data16
std
mov
add
fiadds
leave
test
inc
mov
xchg
xchg
movsl
mov
inc
fbstp
push
lods
dec
icebp
adc
jae
xor
scas
push
out
sub
push
sti
call
pop
xchg
push
jmp
mov
inc
test
push
add
push
mov
nop
jg
mov
lret
daa
or
in
jns
popa
adc
pop
xor
pop
stos
push
jno
xchg
add
pop
lods
repz
lahf
or
cld
mov
jns
rcrb
xchg
cmp
dec
hlt
add
insl
inc
push
dec
data16
sub
push
push
mov
out
ja
cmpsb
sub
dec
out
inc
dec
scas
sub
xchg
mov
sub
jnp
lds
add
pop
orl
xchg
roll
xchg
inc
mov
rcrl
cmp
imul
lea
mov
gs
add
and
loope
mov
nop
push
cmp
ja
sahf
cld
mov
adc
push
mov
adc
or
shll
push
or
xor
stos
push
add
testl
mov
and
ljmp
in
push
cmp
jmp
fildll
push
cmpsl
test
hlt
lret
sub
or
stc
scas
leave
mov
push
push
dec
mov
xchg
mul
mulb
mov
mov
lret
mov
push
or
aad
pop
scas
mov
dec
jg
cmpsb
in
sbb
mov
and
mov
lahf
ljmp
int3
pop
mov
push
jmp
fmull
icebp
jnp
pop
mov
pop
shll
jmp
jp
jp
jmp
or
je
iret
in
mov
push
mov
bnd
js
dec
xor
imul
fisttpll
sbb
jb
stc
mov
insl
ret
sbbb
popa
rol
iret
jg
dec
stos
fiadds
or
cmpsb
ds
cmp
shrb
jle
pop
cmp
je
pop
pop
inc
push
int
icebp
das
jb
outsl
sub
leave
sbb
jae
jns
rolb
addr16
sbb
sub
mov
scas
inc
adc
mov
add
lds
push
lahf
ss
xchg
aad
test
inc
xor
xacquire
fstl
inc
pop
jp
aas
inc
mov
add
in
insb
cwtl
dec
cmpsb
jmp
cmp
cmp
aaa
aaa
push
pop
mov
aad
shll
sub
and
push
inc
mov
xor
bound
sbb
inc
and
leave
fnsave
adc
xlat
popf
test
sbb
mov
cmp
mov
mov
sub
ret
vmovshdup
mov
mov
outsl
lret
test
out
mov
stos
xchg
mov
popa
cld
scas
arpl
popf
popf
mov
cld
xchg
sbb
enter
aas
and
jl
xor
rcl
pop
mov
ja
inc
cmpsl
pop
and
lods
lret
leave
ja
pusha
xor
adcb
mov
scas
cld
push
xor
adc
lret
inc
ja
daa
and
xchg
notl
clc
mov
ret
cmp
scas
push
mov
js
pop
lds
sbb
xchg
adc
out
jge
mov
mov
scas
fsubr
decl
and
mov
jle
xchg
jge
popf
xchg
fidivl
sbb
test
test
mov
mov
call
cmp
out
fimull
or
shrb
and
fisubl
and
adc
mov
push
rcl
sbb
sahf
and
stc
notl
or
add
add
sbb
fists
cltd
sub
pop
mov
loop
cmp
xchg
sub
inc
cmpsb
jb
lock
decl
lea
int3
fcmovnb
jp
lea
sahf
inc
inc
push
stos
clc
or
fcmovbe
pop
or
and
mov
orb
repnz
mov
mov
shlb
movzbl
dec
loop
jo
mov
push
or
inc
scas
sbb
fdivs
outsl
sbb
test
cmp
inc
mov
aas
or
lods
movsl
aad
int
outsl
cmp
xchg
stc
mov
jns
adc
dec
and
mov
cmp
ror
outsl
inc
divl
push
and
aam
xor
sub
mov
mov
ret
hlt
sbb
jp
xchg
mov
cmpsb
or
sbb
bound
pop
in
aas
or
cmp
dec
inc
mov
rorb
outsl
xchg
rol
rcrb
in
aas
mov
lret
mov
jno
pop
sub
mov
pop
pop
add
repz
sub
popa
add
sub
jge
mov
add
loop
xchg
and
cmpsl
and
loop
and
cld
sbb
dec
cmpsl
xor
jecxz
lcall
cwtl
repz
inc
cmp
jns
xchg
pushf
movsb
xor
ljmp
andl
sbb
lcall
in
test
xchg
repnz
in
pop
sahf
mov
loope
push
out
scas
call
in
popa
xor
push
cmpsb
aaa
int3
jle
notb
xchg
sbb
mov
sub
aaa
pop
cmpsl
cmpsb
imul
je
mov
push
lahf
mov
sti
aas
adc
or
add
push
mov
or
push
jne
cmp
add
std
jo
stos
pop
out
fldt
out
shrb
incl
cmp
ja
iret
pushf
mov
sbb
jl
jl
out
dec
dec
icebp
ret
arpl
shrl
imull
in
int3
out
bound
or
jnp
adc
push
lret
fists
test
adc
jl
xchg
pop
pop
dec
cmp
stc
xchg
xor
out
sub
mov
fs
jns
push
dec
filds
fsubl
iret
adc
jnp
rclb
fbstp
and
and
xor
popa
cmp
mov
xor
xchg
sbbl
xor
out
xchg
fistpll
gs
mov
and
mov
sub
lods
inc
out
xchg
sub
push
fcmovnbe
idiv
iret
ss
and
cmp
dec
pushf
push
cmc
out
popa
or
sbb
mov
les
in
fwait
rorl
les
stos
mov
pushf
dec
iretw
pop
lock
dec
mov
mov
ret
jp
lret
mov
cmpsb
ret
gs
les
loopne
in
pop
jmp
cld
jecxz
jnp
and
xchg
movsl
jge
fldt
das
mov
repz
sbb
xchg
add
lea
cmp
subb
mov
imul
dec
mov
mov
mov
or
into
outsl
cmpb
sub
mov
push
in
fnsave
aaa
ss
stc
fldcw
out
push
or
pop
ja
add
add
scas
mov
imulb
fcompl
push
jno
or
push
lds
seta
test
pop
cmc
pusha
sub
sub
inc
idivb
addr16
sub
adc
loopne
stos
mov
sub
cmp
mov
sarb
lds
dec
pop
aas
repz
loopne
rclb
hlt
or
fwait
mov
mov
aas
clc
cld
jns
sbb
loop
imul
and
mov
dec
aas
dec
loop
mov
std
and
add
sbb
pushf
adc
jno
in
mov
fwait
pushf
xor
jae
popf
in
dec
movsb
and
pop
fsubrs
add
xor
jns
xchg
jno
fsubs
dec
in
orl
sub
push
pop
icebp
test
in
mov
in
es
mov
inc
xchg
shrl
gs
jb
mov
cld
lcall
cwtl
pusha
cmp
pusha
mov
lret
bound
cmp
sbb
xorps
dec
push
sub
add
out
mov
pop
scas
push
push
push
mov
fldln2
pushf
inc
cmp
imul
xchg
xchg
nop
pop
cli
and
or
dec
adc
movsl
sahf
lods
loope
test
mov
outsl
push
js
add
xor
imul
popa
lret
adc
int
xchg
iret
fsubrl
cli
xchg
mov
ffree
mov
inc
mov
and
push
xchg
jl
adc
pushf
push
xor
xchg
mov
mov
dec
sarb
movsl
imul
inc
sub
push
cmpb
adc
dec
mov
clc
dec
cmp
xchg
loope
cmp
xchg
lock
sub
push
loop
sub
test
cs
mov
jmp
pushf
add
xor
xor
mov
out
aam
repnz
pusha
jmp
adc
sbb
and
mov
and
fsubrs
mov
push
cs
pop
jge
cmpl
fists
push
xchg
rcl
push
ret
pop
push
imul
push
loope
mov
scas
mov
scas
jno
stos
add
shll
xor
adc
ss
loope
test
or
or
xchg
jle
test
and
lods
ja
into
xchg
je
mov
lret
sti
lods
gs
test
xor
mov
aam
cmp
ljmp
or
jb
cltd
cmp
mov
mov
adc
add
mov
in
orl
ret
xchg
dec
jecxz
pop
sub
sub
or
andb
outsb
pusha
xor
jae
push
inc
loopne
icebp
mov
orl
sbb
std
push
push
and
sti
test
and
mov
jb
lea
jns
jmp
sbb
push
aad
push
mov
out
rorl
jbe
xchg
repz
jnp
fwait
push
mov
test
sbb
int3
dec
outsb
jnp
stos
imul
push
mov
dec
cli
add
inc
js
stos
test
aaa
dec
loop
fsts
ja
xchg
dec
xor
sub
rclb
sub
cmpsl
mov
sub
popf
lret
test
std
mov
pushf
in
sub
push
std
shll
add
xchg
adc
loopne
push
jne
shll
dec
loope
and
pop
in
movl
push
push
sub
aam
mov
mov
adc
sbb
insl
xchg
in
pop
mov
or
inc
mov
rolb
mov
xor
shrb
fwait
push
dec
pop
stc
xchg
sbb
addr16
pushf
shrl
mov
pop
jl
hlt
mov
pop
ljmp
cmc
mov
mov
pop
test
ficomps
gs
daa
jle
mov
xchg
lods
xor
dec
call
orl
inc
nop
das
aas
push
lret
adc
add
pop
gs
xchg
aas
in
jbe
dec
pop
loop
popa
mov
push
popa
push
fcompl
ja
or
mov
xchg
adc
sub
add
xchg
movsl
gs
ljmp
pop
and
mov
fs
xchg
push
pop
add
cltd
sbb
insl
adc
fiaddl
xchg
or
adc
in
push
or
fnsave
mov
lods
in
mov
inc
mov
sbb
mov
dec
inc
fnstcw
dec
push
xchg
adc
mov
lds
addr16
lock
jmp
adc
inc
ds
stc
nop
add
jg
ds
fucomp
mov
lds
stos
inc
out
push
mov
pop
leave
xchg
mov
pop
add
stc
push
cmp
xor
fimuls
ret
inc
pop
adc
push
mov
push
jo
cwtl
push
pop
dec
jp
fidivl
xchg
cmc
lahf
push
jecxz
and
repz
sub
cwtl
out
fsubrl
daa
sub
sbb
add
xor
fstpt
push
xor
in
or
sbb
sub
in
or
pop
test
add
adc
movsb
sbb
jo
int3
outsl
sbb
push
sub
js
aaa
sahf
add
sub
mov
xchg
pusha
cmp
shrl
js
jns
sbb
adc
push
jbe
xchg
jns
xchg
sti
pop
jp
clc
mov
sbb
push
subl
ss
sub
lock
cmp
pop
hlt
pop
in
stos
add
test
cmpsb
jb
sbb
jl
add
add
jns
sbb
fldenv
mov
mov
loopne
icebp
cmp
ret
sbb
pushf
xchg
jp
sub
in
cmp
test
inc
fcomps
xor
frstor
jle
or
leave
rorb
arpl
dec
adc
inc
mov
push
fwait
pop
scas
inc
jb
pop
xor
lods
outsl
pop
negl
inc
test
push
push
or
adc
pop
jno
mov
sbb
add
addr16
cmp
xor
arpl
or
pop
ds
jo
sub
inc
mov
out
outsl
inc
mov
dec
pop
sbb
jge
and
jge
mov
not
mov
inc
jecxz
pop
cs
mov
push
sub
xlat
cmp
adc
scas
dec
scas
xor
push
push
loop
cs
sti
pusha
or
push
insl
loope
les
mov
out
clc
push
and
mov
and
adc
vcvtss2sd
push
mov
push
lea
movsb
insb
jb
fwait
repnz
test
pop
inc
arpl
jmp
aas
or
daa
ljmp
push
lods
lea
rol
das
xor
cmpsl
loope
pusha
jns
std
pop
pusha
aad
addr16
cmp
mov
jge
mov
adc
notb
push
cmp
add
and
push
adc
xor
push
lcall
sbb
dec
nop
daa
jge
out
adcl
sbb
lods
push
adc
addr16
mov
stos
mov
jmp
jp
pushf
jg
and
lods
dec
cwtl
in
inc
insb
xor
dec
shll
mov
adc
je
push
sub
addr16
cmp
xor
out
mov
out
test
cmp
imul
mov
sbb
fs
mov
inc
mov
mov
jno
pop
pusha
jmp
mov
mov
or
cld
int3
fisubs
stc
push
notl
std
repnz
sti
and
or
sahf
cmpsl
xlat
push
scas
popf
jo
adc
test
mov
ret
push
mov
xor
xchg
sub
outsl
jns
pushf
mov
cmc
lgs
in
test
dec
sub
out
sub
sub
test
fdivr
jle
icebp
mov
lahf
shrl
push
sub
sarl
test
dec
lea
data16
test
out
fwait
shl
pop
lret
jmp
add
adc
mov
fiadds
mov
or
cmpsl
ds
xor
shr
shufps
arpl
or
inc
jns
ret
lea
cmp
mov
sub
inc
into
dec
lahf
fisubl
shrb
or
push
pop
pop
lret
mov
fadds
sti
fs
xchg
lahf
mov
in
dec
pop
add
clc
or
dec
mov
dec
lods
jnp
adc
cmpsb
imul
hlt
ja
mov
inc
xchg
sbb
arpl
dec
rcl
mov
inc
mov
sbb
icebp
or
mov
xchg
mov
call
fldl
cli
rclb
loopne
fsubl
in
in
add
loopne
jno
popf
daa
or
sbb
or
fstps
out
aam
bound
mov
xor
int3
shl
out
xor
cld
sbb
mov
pop
cltd
dec
out
sbb
call
enter
push
mov
nop
mov
inc
out
xchg
adc
push
fs
rorl
pop
and
push
insb
out
pop
cli
in
pop
movsl
push
and
andl
jnp
jge
pop
scas
xor
add
loope
lcall
fld1
fstp
push
ror
and
inc
daa
push
lcall
xchg
mov
outsb
mov
jo
jg
sarl
inc
xchg
sbb
stos
inc
adc
mov
sarb
movsb
add
or
sub
jge
js
testl
lock
scas
inc
pusha
bound
mov
and
out
imul
in
inc
dec
movsl
jo
cmpl
push
andb
enter
pop
test
aam
jg
addb
dec
out
insl
aad
bswap
or
push
adc
popa
mov
or
adc
mov
ss
pop
lahf
or
and
xchg
sbb
vandps
pop
jp
add
inc
fistl
pop
test
in
jno
lret
mov
fs
fs
test
das
or
rcll
mov
push
add
adc
cmp
sti
push
out
cltd
into
iret
sbb
and
dec
inc
ss
enter
dec
push
jmp
clc
or
idiv
das
ror
rcrl
mov
xorb
pop
pop
scas
push
mov
cwtl
xchg
pop
cltd
in
jge
fisubrs
push
add
ret
outsl
stc
dec
inc
cmp
dec
sahf
enter
inc
mov
in
push
inc
inc
mov
xchg
orb
mov
pop
mov
in
jmp
test
lret
push
ss
int
fdivrs
pop
adc
push
stos
out
fildl
lods
inc
push
test
out
movsl
imul
push
sub
mov
inc
jno
cmc
mov
and
cmpb
out
cltd
scas
sbb
push
leave
jl
sarb
jg
movsl
insl
xlat
mov
hlt
cltd
or
lcall
bnd
lret
cltd
mov
push
adc
cmp
adc
rcrb
int
xor
ret
sti
push
sub
push
scas
jns
mov
in
pop
pop
dec
cmp
add
xchg
cmp
test
sbb
dec
lea
ficompl
sbb
push
dec
push
shrl
sub
pusha
mov
inc
dec
xchg
in
aas
push
mov
mov
jb
rorl
jnp
aaa
adc
in
ret
ljmp
hlt
sbb
lcall
sahf
xchg
mov
adc
subl
cltd
push
sbb
jo
sub
loope
hlt
push
add
lods
inc
or
rorl
xchg
and
sub
pop
stc
inc
lods
je
sbb
xor
lds
lock
cmp
out
add
sbb
aas
mov
clc
jg
and
and
fdivs
mov
mov
sarl
mov
inc
or
jmp
movsb
jmp
jmp
mov
pusha
shrb
jg
mov
subb
orb
dec
stc
add
pop
sbb
mov
movsl
mov
punpckhwd
cwtl
lods
out
jmp
cmp
xor
cmp
gs
aad
pop
pop
cmp
or
mov
lret
adc
inc
daa
mov
lods
mov
cmpb
or
push
sub
or
fwait
xchg
daa
sbb
in
mov
xor
and
mov
xor
mov
repnz
inc
pop
jg
sub
hlt
aas
and
ret
andb
add
out
xor
arpl
push
xchg
out
adc
dec
add
stc
nop
scas
addr16
pusha
push
or
std
add
lahf
pusha
xor
aas
or
mov
int
aaa
xor
and
push
xor
in
mov
xor
fistl
ja
scas
pop
es
cmp
aas
xchg
mov
xchg
cmp
mov
mov
xlat
mov
scas
inc
xchg
movsl
loopne
adc
int
pop
or
jnp
insl
scas
or
mov
sub
dec
sub
mov
loope
mov
in
pop
mov
outsb
and
inc
jne
mov
test
or
roll
mov
shlb
xor
mov
sbb
test
jne
fldenv
dec
or
ja
inc
lods
adc
out
or
xor
jbe
push
dec
cmpsb
jb
ljmp
lret
pop
cmp
mov
lods
clc
dec
cltd
cmpsb
sbb
xchg
sub
jg
push
dec
sbb
and
mov
rolb
test
cmpsb
lcall
sahf
jbe
mov
sbb
and
mov
iret
mov
ds
fwait
test
xchg
test
xor
test
jp
pop
imul
add
xlat
xchg
out
int3
mov
jo
xor
or
cld
xchg
std
js
iret
cwtl
sarb
inc
mov
rcll
clc
inc
dec
cmp
dec
cmp
add
xchg
xor
mov
in
or
out
add
xor
mov
adc
ja
clc
xchg
push
sbb
sbb
mov
jnp
mov
rcll
jne
rclb
jmp
out
mov
rol
stos
add
xchg
mov
sbb
les
adc
outsb
sbb
arpl
mov
int3
in
es
jl
mov
cmp
fcmovnb
insl
xor
jmp
test
jno
mov
sbb
sub
jl
push
outsl
scas
aas
xchg
xchg
xchg
add
mov
jns
pushf
pop
repz
adc
xor
sub
xchg
pop
mov
scas
outsl
mov
ss
push
addr16
ficompl
int3
shrl
sub
mov
pop
repz
or
cs
inc
inc
cld
add
sub
lret
cld
lahf
sub
lret
mov
out
es
shl
insb
aas
cmpsb
push
xor
roll
insl
jbe
lahf
adc
pop
jne
insl
mov
dec
xor
push
xchg
push
add
aas
repnz
mov
cmp
push
js
mov
sbbb
pop
sti
inc
cmp
mov
xchg
shrl
mov
mov
int
mov
and
add
hlt
imul
mov
fiaddl
popa
andl
lock
movsl
lods
pushf
out
ja
cltd
cmpsl
add
adc
arpl
lds
jae
mov
xchg
scas
mov
lods
in
adc
adc
and
mov
loopne
jnp
inc
inc
dec
lock
pop
sub
dec
into
ficompl
mov
ret
ret
std
or
arpl
ja
sub
add
jns
cmc
xchg
inc
fimuls
xchg
sub
insl
ds
fsubs
sbb
sarb
mov
aam
mov
and
fisttpll
push
imul
or
push
stos
out
mov
lds
mov
lea
pop
int
inc
pushf
cmp
push
cmc
adc
movsb
xchg
sbb
xor
addr16
ljmp
jno
mov
cmpl
push
jle
or
jnp
ja
or
movsb
cli
jmp
lretw
dec
cmp
loope
call
repnz
or
cmc
pop
sub
or
inc
cwtl
cmpl
ret
or
pop
xor
fadds
hlt
adc
mov
push
cmpsl
mov
mov
or
fs
mov
xlat
mov
and
iret
popa
ret
ret
mov
jle
imul
daa
movsl
mov
xor
pop
cmp
dec
and
mov
cmpsl
mov
cmp
loop
adc
enter
ret
push
imul
jns
outsl
jne
xchg
xor
bnd
xchg
pop
imul
pop
stos
in
sub
enter
mov
mov
ja
cmp
xor
outsb
mov
sub
test
and
mov
cwtl
test
test
dec
cmc
and
cmp
daa
lcall
inc
dec
add
pop
ljmp
lock
ss
dec
inc
xchg
add
into
and
xor
imul
or
mov
lcall
jns
idivb
and
and
xorl
add
test
inc
sub
lret
push
xchg
adc
out
repnz
mov
push
sbb
xor
mov
xchg
xchg
loopne
daa
adc
cmp
roll
movsb
insl
icebp
adc
loope
adc
lcall
stc
and
fsubl
inc
cmpxchg8b
iret
and
cmc
dec
adcb
xor
repz
inc
je
mov
mov
subl
adc
fdivrs
cmp
enter
mov
daa
xchg
arpl
icebp
into
das
pop
xor
pop
lods
xlat
rcrb
bndstx
xchg
adc
pushf
jmp
fstl
mov
add
fbstp
jbe
je
sti
dec
pop
mov
lret
xchg
xor
adc
xor
mov
mov
dec
arpl
push
add
lret
push
je
mov
xchg
push
lea
mov
inc
pushf
jmp
cld
cmp
cmpsl
sbb
push
and
bound
ljmp
out
rcrl
push
pop
idivl
sub
movsl
popa
or
sbb
pop
push
add
arpl
xor
xor
pop
imul
mov
jl
ret
inc
aad
out
mov
fidivs
xchg
mov
mov
adc
orb
xchg
pop
xlat
cmp
lock
mov
and
lahf
sbb
shlb
lods
stc
jmp
rcrb
jg
aas
mov
push
test
inc
mov
push
test
nop
data16
les
hlt
cmp
lods
inc
aaa
int
fsubrp
jnp
fidivrl
or
in
fwait
jge
xchg
mov
jge
add
push
jnp
std
xchg
xchg
push
ficompl
scas
pop
hlt
movsb
jmp
and
mov
cs
fsubrs
mov
notb
popf
arpl
xchg
jae
or
lock
pop
add
subl
xor
or
scas
xchg
insb
push
xchg
ja
imull
mov
or
sbbl
dec
lods
sbb
out
inc
arpl
mov
sti
rorl
ja
shll
adc
popa
call
mov
add
or
mov
mov
push
jge
fistpl
pop
enter
jno
pop
xchg
sti
in
test
scas
jno
idivw
xchg
xchg
push
push
mov
movsl
ret
pop
pop
lock
cmc
pusha
fnclex
xabort
andl
sbb
leave
and
inc
adc
inc
andb
inc
in
inc
fistl
mov
shlb
mov
fsubrs
sbb
jg
test
adc
jp
cli
mov
mov
aas
lds
xor
out
jle
test
test
sub
sahf
and
rolb
popf
xor
adc
mov
mov
cmpsb
fnstenv
sub
mov
or
dec
add
cmp
in
cmp
addl
pop
repz
add
loope
test
jnp
loope
sub
mov
sub
xchg
bound
data16
in
cmp
in
jno
nop
sub
lods
dec
dec
sub
loopne,pt
sub
scas
mov
cmp
cli
sbb
dec
movzbl
mov
ficomps
int
rcr
sub
loopne
out
pop
cmp
lea
mov
movsl
mov
pop
sub
je
and
mov
out
lea
fcoms
imul
sbb
test
jle
adc
xchg
pushf
out
or
popa
inc
or
mov
out
fcmovu
lret
cmp
cmp
mov
push
cld
push
jp
movsb
dec
out
int3
or
jmp
cs
or
lret
insb
js
dec
jg
lods
dec
stos
scas
call
xor
xchg
nop
pop
fbstp
xchg
es
cmc
icebp
movswl
sahf
or
je
xchg
cmp
mov
mov
jmp
xorl
sbb
pop
pushf
xor
loop
into
negl
movl
inc
push
fiadds
ret
adc
inc
pop
lock
pop
sbb
xchg
mov
inc
mov
mov
sti
pusha
or
and
adc
shrl
pop
pop
lcall
stc
sbb
push
stos
es
data16
hlt
or
xchg
aad
repz
fstpt
xchg
add
inc
and
stc
sar
inc
mov
loopw
loop
inc
cmp
lock
enter
sbb
loope
mov
test
test
ja
sti
test
adc
xchg
cs
mov
mov
add
arpl
cmp
mov
icebp
jg
arpl
mov
inc
push
cltd
and
gs
xor
lcall
shl
cli
push
jb
insb
mov
pusha
clc
cmp
das
jns
xlat
cmpsb
into
mov
fs
rcll
jns
fidivs
dec
push
mov
push
jmp
mov
imul
jmp
ljmp
es
int3
mov
dec
jecxz
pop
push
pop
jmp
mov
mov
cmpsl
or
in
lcall
dec
jnp
out
nop
fsubrp
sub
scas
sub
das
pop
test
dec
daa
shll
push
or
out
adc
cwtl
shll
in
mov
pop
mul
rorb
idivl
cmp
mov
popa
addl
sub
mov
push
sbb
es
loope
ror
aas
loopne
add
mov
cmp
cmpsl
ja
jmp
adc
xor
sbb
adc
ret
cmp
and
dec
sbb
aas
inc
lods
pop
pop
aad
dec
dec
testb
dec
push
or
mov
lods
push
xchg
mov
sub
outsl
xchg
aas
les
in
pop
lods
test
ja
int3
and
movsb
mov
mov
cli
and
sub
js
dec
inc
fsubr
jne
movsl
mov
sub
call
cmc
dec
ret
mov
enter
xor
pusha
sbb
es
sub
mov
sub
aas
dec
rol
mov
pop
sarl
lods
hlt
ds
jo
shld
in
fdivl
pop
les
rcrb
loope
daa
loop
cmpl
xchg
adc
ja
das
xor
lds
inc
je
popa
cmpl
lods
rcl
jmp
dec
add
mov
pusha
lret
inc
arpl
mov
into
pop
and
cli
jns
push
and
cld
scas
mov
mov
iret
test
in
not
ret
in
jae
stos
data16
jns
sbb
pop
lea
xchg
mov
cmpsl
mov
xlat
icebp
mov
stos
shll
orl
icebp
cmpsl
sub
fucomp
test
jmp
xchg
lret
fisubrs
jb
imul
int
mov
test
pop
into
fimull
lret
sbb
addr16
pushf
mov
stos
inc
daa
fcmovnb
fnsave
xor
mov
adc
or
mov
popa
mov
out
pop
mov
clc
sub
lea
push
mov
roll
or
mov
inc
scas
adc
inc
push
inc
sub
imul
shrl
lds
mov
das
jge
add
mov
add
xor
icebp
loope
aam
sahf
push
adc
push
imul
jg
pop
add
fsts
or
add
add
lret
mov
dec
frstor
fs
dec
push
int3
fs
cld
fsubrp
sub
xchg
dec
roll
imul
sbb
and
rcrb
mov
xchg
loop
clc
dec
and
sub
adc
inc
movl
fs
insl
int
push
jmp
stos
jo
push
push
adc
popa
xor
push
stos
in
enter
or
sbbb
subl
enter
mov
insl
sbb
fwait
add
int3
ret
cli
fwait
sti
fisubs
aaa
push
and
push
clc
xchg
lods
sub
ljmp
es
and
test
or
lret
out
lds
scas
dec
scas
sub
and
push
inc
cld
inc
adc
inc
dec
imul
dec
push
adc
out
aas
inc
inc
pop
xchg
cmp
sbb
vprotb
movl
mov
fnstsw
iret
lahf
hlt
pop
ret
mov
in
and
dec
mov
ret
lea
xchg
loopne
fnsave
sbb
or
pop
xlat
stos
out
test
jbe
or
shrb
push
lret
nop
daa
inc
mov
scas
inc
cmp
mov
jp
daa
inc
mov
pop
inc
fsts
aas
pusha
pop
and
mov
imul
enter
cmovno
rorl
sbb
cs
jge
add
xor
mov
dec
xchg
fbld
pop
pusha
ss
test
call
in
jg
push
jmp
push
mov
xor
dec
popa
fcompl
fadd
fisubl
int3
outsb
cmpps
cmpsb
int
sub
push
popf
xchg
cld
jnp
add
pop
mov
jecxz
push
lret
pop
cmp
sbb
jne
pop
xor
les
ret
add
scas
std
dec
cmp
push
inc
ljmp
mov
push
mov
mov
xor
arpl
and
fdiv
ljmp
sub
and
out
ljmp
mov
xchg
and
enter
cltd
std
xor
hlt
ja
push
decb
mov
iret
enter
xor
sbb
inc
inc
xor
out
xchg
jg
lods
or
pushf
mov
movsl
push
aas
iret
sbb
cmp
jg
stc
pop
gs
cmc
pop
jmp
or
adc
nop
lods
ret
or
and
repz
or
adc
mov
pop
push
jbe
inc
jg
scas
filds
in
bound
pushf
mov
and
ja
popa
adcl
push
fstpl
mov
das
dec
mov
aam
cltd
mov
and
jge
iret
aaa
add
andb
mov
nop
xchg
cvttps2pi
mov
dec
add
xor
mov
xchg
iret
aam
jmp
fiaddl
mov
aad
cwtl
scas
xor
cmp
mov
shrb
inc
dec
xchg
jbe
out
sti
jecxz
sbb
shrl
adc
add
or
mov
repz
ja
ljmp
xchg
lock
mov
sbb
insl
inc
xchg
add
popa
mov
mov
fwait
cmp
jb
gs
xchg
dec
cmovl
shrl
sub
xchg
pop
push
icebp
adc
lcall
dec
cmpsb
ljmp
shll
ret
fcomps
pusha
clc
movsb
mov
call
and
or
dec
pop
mov
popf
les
sahf
inc
fwait
inc
jne,pt
stos
lock
adc
or
jmp
fsubrp
fcoml
mov
in
sub
xchg
xchg
vsqrtss
mov
cmp
pop
dec
cmpsb
mov
fistpll
hlt
sub
push
pop
dec
push
jg
movsb
mov
repz
outsb
outsb
xor
push
jb
and
fucomi
mov
lock
inc
mov
adcl
xor
aam
jle
cmp
mulb
sbb
jbe
js
jne
inc
add
jle
mov
enter
pop
push
jge
inc
mov
out
jl
das
mov
pop
cwtl
xor
loope
mov
fcmovne
ja
test
pop
out
sbbl
fwait
push
mov
mov
sbb
push
or
fisubrl
jne
sar
gs
int
pop
les
ret
imul
leave
xor
pop
add
xchg
in
add
decb
outsl
or
xor
xchg
inc
mov
pusha
jp
rorb
ljmp
push
test
loopne
or
adc
pop
dec
jge
andb
inc
push
mov
lea
repnz
int3
pop
dec
pop
bnd
push
fwait
cmp
pop
and
xchg
mov
pop
aaa
cmp
nop
pop
movsl
dec
and
lcall
or
or
xchg
sub
cmp
cli
inc
or
cli
jne
dec
mov
sub
xor
int
xor
es
fdiv
and
or
sbb
aas
lahf
daa
jno
add
sbb
xor
sbb
ljmp
mov
iret
adc
add
sub
out
xrelease
push
jae
mov
xchg
addr16
adc
jle
mov
jle
mov
push
mov
or
out
inc
aad
dec
pushf
hlt
ret
jp
aas
and
fdivl
push
cmc
fidivl
pop
imul
push
es
mov
gs
std
xchg
push
sbb
movsb
add
mov
mov
ds
xchg
fmull
rcl
xchg
sub
js
dec
in
or
add
aam
and
mov
cmpsb
dec
sbb
jl
cmp
dec
out
cmp
dec
jbe
mov
push
xchg
xor
add
mov
add
rcrl
add
or
dec
mov
adc
fs
lret
sub
add
jb
loop
std
xchg
jae
les
adc
insb
popa
or
xchg
lea
ret
outsl
dec
sbb
rcll
cmp
push
mov
jnp
mov
push
mov
rcrl
inc
gs
xchg
or
inc
sti
xor
loope
shlb
pop
jno
test
mov
stos
xchg
push
or
mov
fdivrl
cmp
and
dec
jae
adcb
or
mov
sahf
xchg
insb
push
cwtl
xor
and
shlb
mov
cmpsl
and
cmpsb
pop
lret
push
xor
inc
or
push
mov
arpl
pop
clc
or
mov
mov
dec
std
jo
lea
ds
lods
inc
stos
mov
ret
shlb
dec
pop
mov
cmpsb
es
pop
out
cld
pushf
push
or
xchg
jae
icebp
dec
cltd
dec
mov
add
inc
sub
cld
sbb
mov
loope
push
bnd
fstpt
jne
jecxz
out
or
nop
mov
aam
xchg
push
mov
jb
xchg
mov
mov
out
sti
imul
sub
jo
push
mov
rep
adc
es
fdivl
data16
pusha
pop
cli
insl
lods
dec
imul
testb
les
jne
pop
cltd
jb
and
mov
mov
xchg
arpl
into
pushf
mov
dec
daa
add
daa
jno
push
in
aas
pop
mov
mov
in
je
fldl
push
fmull
lahf
inc
cmp
jbe
dec
add
test
sbb
fsubrs
fidivrs
jno
xchg
out
and
fs
xchg
pop
xorl
test
pusha
clc
or
arpl
sub
pop
sti
jbe
xor
mov
popa
aaa
sbb
je
rorl
sbb
inc
enter
fs
shll
lahf
repnz
ror
dec
daa
push
imul
int
movsb
push
hlt
push
jle
jle
psllw
mov
and
mov
cmp
loopne
arpl
je
das
repnz
cmp
mov
loop
std
fisubl
packssdw
dec
popa
loopne
fwait
inc
sbb
scas
in
sbb
cmpsb
dec
cli
mov
pop
fsubp
adc
dec
cmp
adc
jo
out
mov
inc
sti
mov
mov
mulb
out
rcll
dec
sub
jl
mov
mov
mul
mov
jge
icebp
xor
jl
and
push
neg
in
call
in
xor
shll
xchg
mov
cmp
int
dec
movsl
imul
out
pop
cs
out
inc
mov
mov
popa
sbb
mov
cs
shrb
mov
and
mov
xor
adc
jae
or
je
loope
stos
inc
xchg
dec
sbb
sbb
mov
test
je
and
arpl
sub
mov
mov
fists
repz
add
lcallw
xchg
or
sbb
addr16
xchg
ret
add
jmp
outsl
movsl
dec
jge
jmp
push
int
scas
faddp
stos
pop
neg
in
insb
es
stos
push
mov
gs
sbb
xchg
ret
out
loopne
pop
mov
lret
ja
cmp
dec
mov
iret
data16
dec
mov
addr16
in
inc
cmpsb
or
cmpsb
xor
push
xor
lds
xlat
inc
loopne
xchg
lock
jp
adc
lods
dec
cmc
cmp
mov
shr
and
movsl
cmp
xchg
push
out
inc
cltd
ret
or
gs
push
jmp
addr16
xor
movsb
xchg
out
sbb
mov
mov
out
imul
jns
fcomps
sarb
mov
adc
jbe
out
popa
hlt
stos
and
fs
iret
xor
lahf
sub
pop
addb
addr16
jmp
cmp
adc
pop
cmp
and
cmpsl
inc
imul
push
test
outsb
add
test
dec
push
out
mov
inc
bswap
sahf
insl
fidivl
push
and
xchg
fisttpll
jmp
fldcw
shrl
inc
arpl
jns
adc
fwait
mov
hlt
mov
adc
fst
jnp
lret
sbb
xor
in
cwtl
stos
push
inc
mov
rorl
pop
lods
mov
inc
test
shrl
adc
out
bound
stos
lds
rorb
cmp
add
adc
pop
adc
mov
data16
je
xor
push
push
xchg
es
insb
ret
or
jg
pushf
adc
aaa
xchg
and
movsl
inc
shl
data16
sub
dec
cwtl
movl
mov
cmp
test
test
jg
shrb
mov
test
mov
pushf
mov
mov
push
adc
mov
ret
sbb
cli
nop
push
mov
mov
fwait
push
cli
nop
insb
jle
and
xchg
loopne
ret
cld
jnp
hlt
inc
les
adc
std
sbb
dec
popf
pop
cmc
cmp
out
pop
inc
test
and
push
into
sbb
fnstsw
sbb
shl
gs
jle
mov
jno
push
jmp
popa
outsl
xchg
insb
push
orl
je
xchg
xor
xor
test
pop
popf
jnp
and
jns
push
fwait
decl
jl
and
clc
shrb
dec
adc
out
out
inc
jl
cmp
arpl
and
pop
hlt
xchg
dec
dec
push
sti
jecxz
jl
sbb
jnp
pusha
insb
fists
ss
xchg
in
mov
ss
outsl
mov
aaa
push
adc
stc
push
pusha
orl
xor
dec
mov
push
jmp
call
dec
sub
mov
ret
push
scas
dec
mov
clc
jno
lret
jo
jge
push
movsl
mov
int
cmc
into
cmp
fwait
xchg
mov
outsl
sbb
add
shr
jo
mov
dec
pop
adc
pop
test
mov
or
and
push
push
mov
jbe
cmp
lock
mov
sbb
hlt
inc
loop
mov
adc
mov
push
outsl
in
pop
imul
sbb
mov
cmp
leave
push
sub
sti
shll
sbb
cmp
iret
sbbl
or
dec
jbe
mov
fsubrs
jnp
les
and
arpl
jp
or
cmp
sub
int
repnz
jne
subb
jmp
mov
mov
movsb
mov
fisubs
and
inc
pop
dec
or
mov
out
sub
cli
stos
ret
int
push
cld
mov
jp
xlat
outsb
push
pushf
jno
int3
rclb
mov
mov
adc
stos
add
jo
push
adc
lods
mov
dec
xor
xor
xchg
and
pushf
sub
mov
jg
dec
cmpsl
mov
xchg
jp
lret
jg
jg
in
jmp
dec
mov
aas
sub
insb
cmpsb
add
addl
mov
cmpsl
and
adc
cmp
mov
lret
shll
repnz
mov
paddusb
hlt
test
add
inc
mov
fstp
rorb
push
jmp
mov
rorb
test
mov
jge
push
pop
jl
fs
fnsave
test
cmp
or
les
inc
fsts
or
dec
push
mov
imul
fdiv
jg
rorl
pop
push
fcmovu
jg
mov
sub
inc
push
cmp
sti
push
and
popa
sbb
add
daa
cmp
popa
jmp
loope
adc
imul
dec
in
test
adc
and
lods
cmpsb
ljmp
adc
stos
xlat
jno
jge
jb
pop
jmp
outsl
pop
repnz
push
jns
shrl
sub
cwtl
das
cmp
shrb
mov
insl
xchg
fldt
jb
imul
repnz
xlat
fstpl
mov
sbbb
xchg
push
ljmp
leave
std
add
pop
cmc
or
mov
adc
mov
inc
or
decb
inc
or
push
lret
xlat
cmp
fstpl
lret
and
pop
cmp
in
sti
push
ja
adc
fcomps
inc
out
mov
fbstp
push
aad
or
cs
cmp
sti
dec
iret
push
xchg
jle
mov
les
xchg
clc
lret
cli
cmp
mov
lods
cmp
loopne
mov
cltd
mov
adc
and
arpl
sbb
nop
lret
mov
and
inc
shrl
pop
add
adc
mov
jno
les
movsb
mulb
outsb
mov
mov
push
std
in
leave
pop
xchg
or
in
mov
xor
mov
movsl
cli
inc
xlat
jne
cmpl
movsb
in
xchg
lock
sbb
adc
mov
xchg
push
lcall
and
push
mov
jns
aaa
out
dec
loop
xor
sbb
add
add
ret
stc
add
cmp
push
jbe
adc
in
ljmp
inc
inc
sbb
fadds
inc
xor
sbb
cmp
pop
pcmpeqd
inc
call
push
or
iret
mov
ret
pop
pop
push
filds
mov
or
push
call
fidivs
jnp
inc
push
jb
add
push
out
int
jl
xchg
mov
dec
cmpsb
adc
call
or
mov
mov
stos
adc
add
xor
mov
mov
adcl
sbb
jle
std
dec
xor
pop
sub
inc
jo
ret
mov
cmp
aaa
or
mov
dec
xchg
out
in
aad
pusha
test
push
mov
mov
das
cmp
add
int
push
ja
in
push
push
push
fdivl
movsl
inc
loope
xchg
adc
xor
xchg
xor
adc
dec
cwtl
addl
popl
add
jg
xlat
xchg
ja
adc
jo
xor
dec
mov
jmp
insb
add
ljmp
cld
shll
mov
ja
jl
inc
pop
sub
push
or
sbb
sub
loop
dec
mov
xchg
das
test
ss
and
rorb
test
inc
in
jle
or
adc
addl
adc
out
pop
push
inc
insb
or
mov
xchg
push
mov
adc
inc
mov
xor
enter
das
pop
cmpsb
xchg
mov
les
jae
imul
fcoml
pop
sbb
cmp
aad
adc
or
pushf
test
lret
push
mov
adc
addr16
inc
int3
fcmovnbe
outsb
or
out
in
adc
into
and
int
in
xchg
mov
push
aas
aad
out
js
adc
cmp
jp
fwait
push
or
subb
xor
mov
mov
aas
aam
pushf
xlat
cwtl
int
sbb
in
mov
rcrl
cmp
mov
xchg
adc
dec
sub
insl
jnp
dec
sbbl
ret
out
fcmove
scas
mov
sbb
stc
push
ljmp
mov
sbb
mov
mov
pop
pop
daa
mov
mov
scas
dec
in
push
or
lock
jecxz
xchg
push
xor
dec
inc
ljmp
lea
mov
int
imul
repnz
stos
scas
testl
jp
cs
bound
lahf
pop
ret
call
aaa
fisubl
insb
add
ss
cmpsb
ds
cmp
pop
mov
push
add
and
sub
dec
les
and
dec
xor
ljmp
jle
subl
rolb
jno
push
in
inc
jb
xchg
movsl
and
add
pop
repz
lahf
mov
pop
das
clc
or
lods
icebp
sub
iret
std
xchg
add
pop
nop
stc
ss
mov
movsb
and
pop
mov
push
adc
in
ds
ds
test
xchg
adc
mov
in
into
push
test
psubq
arpl
and
cmp
jecxz
mov
loope
pop
sbb
inc
fmull
dec
inc
rep
in
and
cmp
test
outsb
shrl
pop
idivl
ds
sahf
add
ljmp
jecxz
imull
pop
shrl
sub
fists
or
cmp
stc
fwait
adc
nop
adc
sub
adc
mov
lods
mov
outsl
add
push
pop
cmp
xor
std
adc
bound
adc
out
sbb
arpl
pop
mov
gs
int3
mov
test
adc
cwtl
inc
test
lret
jno
out
and
mov
xchg
xchg
jb
sbb
je
sahf
dec
jle
aam
shr
lcall
jmp
push
mov
push
call
dec
lock
xlat
out
test
or
cltd
stos
inc
pop
fnstsw
sub
dec
sbb
adc
out
xchg
out
out
pop
mov
fimuls
lret
int3
xchg
test
inc
dec
addr16
jae
inc
out
scas
fidivl
shl
and
stc
adc
inc
in
je
and
stc
sarb
icebp
sbb
adc
fs
fldt
xchg
imul
insl
pop
mov
jmp
mov
push
out
loopne
adc
int3
arpl
push
ljmp
in
jne
inc
jns
ljmp
lret
xchg
or
test
shlb
clc
pop
or
inc
orl
repz
es
sub
lea
lds
dec
je
jle
and
pop
jo
sbb
sbb
push
in
iret
pusha
imul
out
test
lret
arpl
ficomps
push
jl
insl
pop
loope
mov
mov
test
ss
inc
cmpsb
rorb
lds
inc
sbb
mov
mul
or
adc
into
mov
and
push
lea
addr16
adc
rcr
or
fdivrl
sbb
enter
aam
or
cmp
scas
sub
sbb
adc
stos
mov
push
sub
popa
fdivl
mov
mov
mov
aad
pop
pop
mov
sub
or
rcrb
stos
cmp
mov
insl
cwtl
pop
push
cmp
cltd
pop
mov
loope
data16
mov
scas
lock
xor
mov
or
leave
mov
inc
js
sbb
sbb
mov
in
jo
pop
or
in
sbb
jp
xchg
pop
loopne
push
push
popf
mov
or
mov
pop
fadds
add
enter
cmp
adc
and
loope
test
lahf
sbb
mov
mov
std
andb
inc
push
push
repnz
inc
fwait
xlat
repz
lds
test
lahf
push
outsl
jmp
cmp
cmp
out
sbb
pushf
pop
xor
sub
xorb
in
shrl
aam
rolb
adc
mov
fistpll
das
flds
scas
sarl
ret
dec
into
sub
mov
loopne
lcall
fsubrs
mov
dec
or
inc
lcall
mov
dec
adc
addl
gs
pushf
xchg
outsb
ret
jle
inc
in
cmp
jmp
mov
mov
pop
notl
push
lcall
and
cmp
pop
ljmp
sub
xor
shll
movsl
mov
xlat
aas
int
shl
inc
stos
mov
mov
sub
sbb
int
push
sbb
stos
pop
adc
js
cmp
dec
out
loop
mov
insb
add
add
shlb
xchg
push
mov
cmp
pop
lcall
int
push
pop
dec
jp
ds
mov
mov
fsubs
dec
dec
lret
lds
stos
jns
adc
je
mov
mov
mov
mov
or
sub
pusha
pop
es
xor
stc
xchg
mov
inc
aad
dec
popl
fsubl
cld
dec
dec
add
loope
loopne
stos
inc
mov
pop
push
cmpsl
nop
mov
push
lea
xchg
jp
jmp
repz
dec
jp
jp
jno
xor
pop
mov
mov
btc
cmpl
enter
sar
and
ljmp
out
loopne
or
add
jo
mov
sub
mov
mov
sbb
cld
rorb
sbb
enter
rcrl
push
jl
inc
movsl
xor
leave
xchg
dec
in
addr16
adc
jmp
shrl
add
sbb
or
xor
call
and
jl
jb
jo
xchg
adc
sbb
push
mov
jne
data16
in
sbb
les
divb
ret
dec
std
imul
pop
push
xchg
add
or
push
insl
pop
loop
fisttps
jne
mov
lret
push
cld
inc
inc
fwait
jbe
inc
sub
cmp
push
jp
inc
popw
dec
arpl
lea
jge
cmp
in
jp
scas
mov
bound
loopne
sub
and
pop
push
xor
in
jbe
adc
and
test
stc
cwtl
test
sbb
adc
xchg
inc
jg
cmpsl
mov
mov
cmpsl
sbb
mov
movsl
loopne
push
push
dec
test
sti
mov
iret
push
ja
dec
pop
icebp
je
lcall
xchg
sub
sub
sub
imul
adc
enter
sub
repz
xor
cmpb
xlat
sub
stc
xor
or
pop
add
mov
popf
xor
sub
ret
sbb
inc
pop
cmc
je
mov
sub
add
mov
out
test
pop
mov
adc
sbb
jmp
stos
pop
adc
jb
loop
fiaddl
adc
inc
out
dec
lret
cld
outsb
jle
mov
cmpsb
xchg
je
and
in
aad
mov
xor
xchg
lock
lahf
daa
sbb
xor
mov
gs
js
fdivrl
mov
inc
sub
mov
das
jg
fnstenv
fucomp
cmpsl
push
add
cwtl
jae
push
mov
dec
xchg
fidivrs
push
mov
arpl
sub
lret
js
jo
sub
or
cmpsl
pop
mov
mov
and
in
or
bound
clc
push
ss
outsl
push
pop
sbb
sbb
sub
icebp
mov
or
in
fisttpll
insl
sbb
jns
mov
add
or
push
fbstp
and
ret
push
int3
fcoms
std
int3
push
or
int3
fcoml
sbb
push
out
xor
popf
incl
in
cmp
inc
icebp
aas
and
sub
iret
in
add
leave
push
mov
mov
xorb
pop
cmp
push
data16
xchg
adc
lcall
dec
dec
and
ds
xor
inc
ucomiss
fwait
add
rcr
dec
dec
mov
ss
fldenv
mov
daa
iret
repz
inc
jecxz
cmc
or
scas
rolb
xlat
fwait
push
mov
mov
jno
scas
arpl
sbbl
cmp
cmp
lahf
imul
xchg
adcb
jb
add
enter
pop
call
cmp
aas
ret
cmpsb
push
and
sbbb
push
sti
lods
adc
xchg
push
adc
or
mov
inc
and
xchg
xchg
add
add
push
call
dec
ljmp
out
dec
pop
in
arpl
stc
cmp
je
stos
insb
scas
fsubr
ret
mov
push
and
test
scas
jg
jae
call
or
cmp
xlat
cs
and
loope
dec
fldenv
inc
pop
aaa
stos
rolb
cmp
scas
popf
push
sub
mov
fs
iret
sbb
xchg
inc
mov
faddp
sub
mov
dec
movsb
inc
mov
pop
mov
xlat
ljmp
ljmp
pop
test
or
add
pop
scas
and
mov
stos
adc
gs
mov
idiv
enter
push
push
inc
fnstsw
push
or
ret
jns
xchg
scas
xchg
lcall
daa
push
pop
lock
ja
xorb
dec
jb
jecxz
iret
orps
inc
out
cltd
push
std
and
lods
or
jle
call
jno
jo
out
jbe
jbe
jmp
xor
imul
fsubp
cli
xchg
popa
clc
cld
sti
gs
mov
sub
in
out
sahf
push
les
inc
dec
sub
xchg
orl
sbb
adc
push
xor
or
dec
gs
push
loope
xchg
cmp
sti
or
repnz
xchg
lcall
inc
adc
mov
add
sbb
into
and
outsb
jl
inc
pop
icebp
cltd
ja
mov
adc
cmp
xchg
pusha
popf
ljmp
in
pop
lds
or
lahf
insb
push
movsb
pop
inc
or
cli
mov
mov
dec
gs
cs
pop
pop
lret
rolb
sub
xadd
std
dec
or
mov
and
movsl
mov
lret
neg
lahf
ss
sbb
xchg
dec
fld
dec
sub
aam
xchg
test
push
sbb
add
test
fnstcw
mov
pop
out
lahf
divl
fisttpl
popf
xor
es
pop
cmpsb
sbb
or
jg
aam
or
inc
daa
insb
mov
pop
lahf
sub
leave
sub
shl
icebp
push
mov
mulb
int
push
xchg
jmp
nop
scas
insl
js
mov
gs
jecxz
scas
mov
inc
jecxz
repnz
adc
xorb
xchg
cmpl
or
lock
xor
arpl
lea
xor
incb
cld
cmp
sub
and
or
xchg
add
fisttps
lret
or
adc
adc
lahf
sub
add
mov
sbbb
jge
push
movsb
in
mov
xchg
mov
mov
cmp
leave
xchg
aas
push
mov
pop
out
pop
into
mov
repnz
jbe
cmp
insb
jecxz
cmp
sub
pushf
sub
out
inc
or
test
int
sbb
lret
mov
add
in
out
aad
popa
mov
dec
leave
inc
clc
push
sub
cmc
push
push
scas
rcrb
ljmp
sar
jl
or
incl
xlat
cmp
push
icebp
dec
cmp
pop
or
jmp
pop
sub
sub
add
mov
ds
pop
cmp
xor
adc
cmpsb
std
push
je
insl
dec
inc
fstpt
push
cmpsb
mov
xchg
lcall
push
mov
sbbb
and
push
outsb
sub
mov
push
push
jns
xlat
orl
lods
mov
sbb
mov
cwtl
sbb
xor
outsl
lock
mov
shrb
sbb
add
call
in
pop
testb
in
adc
or
repz
mov
xchg
jno
xchg
mov
js
jge
ret
loopne
into
enter
sbb
cmp
pushl
ret
mov
mov
adc
lods
mov
gs
test
in
cld
aad
movsl
xor
loope
jle
sub
push
mov
loope
fmul
test
mov
lcall
jnp
loopne
cmpsb
lock
mov
cmp
ror
mov
loop
popa
adc
movsl
aaa
cs
stc
pop
mov
mov
jbe
xchg
enter
jae
xchg
cltd
mov
int3
mov
xchg
repz
imul
arpl
sub
icebp
inc
cmp
imull
shrd
mov
dec
xchg
imul
or
rcll
cmp
push
stos
jmp
sbb
scas
icebp
xor
inc
cmp
ss
fcompl
jmp
lods
gs
cs
mov
hlt
mov
mov
push
fists
outsb
fmuls
inc
int
sub
out
cmp
fstpl
push
cmp
int
dec
dec
scas
pop
das
push
ljmp
cmp
lahf
ss
mov
outsl
jmp
adc
loopne
daa
mov
xchg
mov
loopne
mov
icebp
orl
push
std
push
call
scas
jmp
rolb
aaa
data16
xlat
shrl
jnp
lea
fistpl
or
inc
ret
pop
jbe
scas
test
jne
lahf
dec
loopne
stc
ljmp
movb
gs
aaa
stos
cmp
xor
enter
and
add
sub
and
aaa
push
add
sti
adc
dec
dec
mov
imul
loopne
lods
push
mov
iret
mov
push
in
dec
je
sbb
je
popf
inc
xchg
out
test
popf
pop
mov
push
scas
add
jmpw
insb
in
mov
inc
int3
orl
sbb
jle
aas
mov
repnz
int3
out
in
jns
sub
pop
shlb
es
xchg
in
mov
outsb
lock
test
push
mov
push
in
test
lret
fbstp
adc
fxch
test
mov
mov
xor
fsubs
stos
mov
sbb
push
lret
sub
pop
in
fnstenv
sub
mov
push
xor
mov
and
cmp
dec
mov
mov
sbb
in
std
sub
stos
xchg
dec
pop
lcall
aaa
out
mov
roll
mov
and
push
mov
fmulp
lds
aas
stos
sub
adc
out
outsb
add
data16
inc
mov
or
mov
movl
push
loope
cmpsb
out
in
push
push
jb
mov
clc
iret
mov
adc
rcll
in
mov
popa
jo
je
lds
lret
or
lahf
stos
pushf
test
enter
mov
pop
mov
pop
fisubl
fwait
sub
jns
lock
dec
aas
mov
rcrl
and
push
fsub
aaa
ss
add
call
or
pop
jle
ss
push
cli
cltd
pushf
inc
cmpsb
xchg
xchg
inc
cmpsl
fimuls
loop
dec
push
jno
dec
push
test
scas
cmp
sbb
push
jne
push
fdivrs
movd
mov
sbb
adc
or
add
and
shll
js
and
ret
test
dec
push
nop
dec
test
dec
inc
aam
dec
jno
negb
push
xchg
sbb
fmull
out
push
popf
test
fldcw
imul
arpl
test
cmp
push
inc
jecxz
xchg
ds
fnstcw
add
leave
mov
cltd
jle
cwtl
rcl
xchg
negb
fdivr
cs
fists
cmp
push
inc
inc
push
repz
adc
aam
push
xchg
add
mov
pop
out
les
sub
jecxz
cmp
cltd
and
outsb
mov
inc
stos
and
clc
cmp
mov
dec
bound
cmp
push
cmpsl
or
cs
pop
push
xor
mov
shlb
js
inc
pusha
xor
rcr
arpl
hlt
in
xor
jle
outsb
mov
jle
pop
movsb
xchg
out
test
loop
dec
cmp
mov
lock
insb
decl
hlt
mov
jle
in
add
loope
popa
jmp
int
movsl
test
mov
mov
and
jmp
fnop
clc
bound
in
inc
pop
sub
jg
inc
dec
fbstp
enterw
cmp
enter
inc
addr16
shlb
mov
out
out
andb
rol
push
movaps
nop
jnp
adc
lcall
std
push
mov
and
and
shrb
mov
incl
lcall
mov
jmp
ss
je
in
mull
enter
cs
ds
cmp
mov
xlat
cli
add
lret
dec
fisubrs
pop
add
pop
mov
jg
insl
xor
xor
imul
int3
imul
dec
jne
pop
imul
xchg
add
xchg
add
test
add
mov
enter
jno
add
mov
enter
or
shr
add
gs
popa
and
xchg
inc
fisubs
and
imul
popa
add
mov
cmp
push
cmp
push
ljmp
mov
test
dec
jmp
in
in
cmp
jbe
mov
add
loopne
outsl
out
xor
fisubl
incb
cwtl
xor
pop
mov
les
aam
add
das
loope
repnz
jns
mov
arpl
lods
idivl
movsb
in
hlt
dec
dec
cmp
jecxz
cmp
imul
cmp
inc
pop
jne
adc
out
xchg
outsl
add
mov
outsl
imul
ret
repz
add
pop
cmpsb
test
dec
fs
lods
mov
je
lea
js
cltd
cmp
lods
ds
mov
inc
imul
or
loope
cmp
loopne
jb
pop
out
xchg
movsb
test
jle
jae
pop
xchg
testb
and
inc
xor
adc
push
push
enter
cmc
inc
mov
or
data16
pop
sbb
sbb
test
or
xchg
inc
xchg
rcrb
call
call
pop
lahf
mov
sahf
in
mov
jl
inc
mov
stos
decb
stos
icebp
pop
dec
mov
in
daa
mov
aas
sub
mov
fstpl
rclb
cmp
dec
nop
lea
nop
cmp
gs
loopne
daa
and
jmp
or
outsb
jecxz
add
jg
mov
clc
xchg
sbb
cmp
aaa
add
daa
mov
push
fwait
inc
mov
mov
pop
in
cmp
inc
mov
dec
fsubrl
or
stc
aam
sub
repnz
stc
fdivrl
pop
push
das
test
bound
mov
xorl
or
xlat
es
add
mov
rorb
cli
out
and
add
cmpsb
mov
xchg
arpl
sub
lcall
dec
ret
jns
movsl
icebp
fadds
xchg
jmp
push
leave
int
xchg
mov
mov
fnstsw
pop
fnsave
jg
xorl
jge
sti
jae
je
or
add
outsb
mov
cmpsl
cmp
lods
movsb
lods
mov
dec
sarb
push
ret
mov
jno
fstpt
lcall
and
or
xorps
arpl
xchg
ficompl
ja
sub
jno
scas
js
sbb
aad
rolb
add
pop
push
dec
sbb
rorl
rol
insb
cmpsl
fbstp
push
jecxz
dec
cld
xchg
cmpl
in
in
jo
sub
mov
rcll
int3
lds
xchg
pusha
test
outsl
jle
outsl
adc
jbe
test
mov
lcall
repz
push
leave
dec
mov
push
out
sbb
xchg
cmp
or
sub
bound
movsb
xor
xchg
xor
fs
jmp
call
push
cmc
daa
sahf
jmp
jnp
push
cmpsl
jecxz
lcall
lods
and
fisubrs
jae
lret
inc
jno
je
cmp
loopne
mov
inc
push
sub
inc
cmp
mov
adc
insb
sub
inc
stc
or
es
dec
add
mov
dec
push
into
imul
dec
push
hlt
jnp
xchg
in
pushf
jnp
push
add
inc
ss
sub
or
mov
stos
adc
out
clc
cmp
and
ljmp
cltd
inc
jecxz
repnz
pusha
sub
cmc
xor
cmp
call
bnd
sbb
xchg
movsb
mov
test
sub
jle
cmc
mov
lret
lret
and
push
inc
inc
inc
mov
test
fs
and
jae
hlt
leave
sbbb
icebp
push
insb
lods
call
ret
mov
xor
xor
push
in
bound
push
and
cwtl
daa
js
fnstcw
push
fcoms
lods
stc
popa
test
xlat
ljmp
jno
pusha
ret
dec
mov
insb
movsl
jb
sti
cmpsl
inc
testb
push
in
sub
cmc
jl
mov
pop
filds
test
imul
mov
cltd
mov
aad
push
push
loope
orl
xor
iret
jge
das
scas
call
sub
jle
pop
push
insb
pop
adc
mov
sti
xchg
cmpsb
lods
leave
cltd
pop
sbb
movsb
enter
push
loope
outsl
lcall
movsl
iret
add
jbe
fs
push
lcall
das
aam
mov
scas
rclb
iret
pop
lahf
add
mov
push
es
int3
adc
fld
dec
fs
lret
sbb
pop
push
pop
pushf
inc
fs
cld
jnp
cs
imul
imul
arpl
ret
push
or
jmp
iret
pushf
xor
inc
push
lds
push
insb
jmp
mov
inc
fmul
xor
mov
enter
xchg
mov
mov
push
jns
mov
les
js
sbb
pop
cmpsl
cs
sbb
repnz
jno
push
rcl
stos
rolb
lods
ficomps
cmp
cmpsb
push
push
aad
push
pop
sbb
mov
clc
push
push
lahf
mov
das
jg
pusha
add
jmp
xor
push
pop
mov
imul
stc
push
pop
push
sahf
ret
mov
jae
cwtl
call
jmp
mov
scas
cmp
divb
dec
outsb
pop
jg
shlb
xchg
adc
and
mov
enter
gs
pushf
mov
jns
push
jb
lock
xlat
in
mov
jge
sbb
ja
dec
cmpb
call
out
bound
pop
lahf
adc
ret
hlt
int3
les
sub
hlt
pop
int3
mov
int3
mov
sahf
sbb
fadds
daa
ds
and
inc
jl
xchg
fisttpll
mov
cmpsb
popf
xor
loopne
mov
mov
arpl
dec
dec
push
inc
fnstcw
cs
sub
pop
push
shrl
adc
pop
testl
or
je
and
inc
mov
mov
fucom
and
mov
cmp
jo
loop
xor
lret
inc
dec
jmp
ljmp
jb
aaa
loopne
or
push
sbb
cld
scas
hlt
aas
imul
jg
pop
sub
dec
shrb
inc
cmp
mov
cmp
push
mov
push
push
test
insb
jp
ja
test
lods
cmc
adc
pop
stos
push
mov
xor
mov
std
sbb
outsb
push
ds
lcall
lcall
lods
call
sar
mov
rcrl
das
pop
lcall
pop
clc
xchg
xchg
in
ret
sbb
insl
cs
nop
jo
jmp
push
mov
fildl
les
push
testb
mul
jns
stos
cltd
xchg
icebp
andl
sub
fidivs
dec
sbbb
add
repz
shlb
add
mov
scas
xchg
and
jae
jp
push
imul
jae
push
hlt
mov
cltd
xor
xchg
outsb
mov
mov
jbe
call
push
xlat
rorb
and
les
divl
cltd
mov
iret
adc
pusha
sbb
mov
jb
jne
stos
ljmp
addr16
sbb
loopne
stos
or
sahf
andl
xchg
xor
hlt
mov
notl
fwait
inc
subb
lahf
cmpsl
aaa
pop
mov
sub
stos
mov
fnsave
lds
cmpl
cltd
xchg
aam
pusha
cmpb
xorl
push
or
jae
cmpsb
test
js
adc
push
adc
mov
or
dec
jl
sbb
stos
mov
test
out
add
aas
or
repz
add
ds
or
js
loope
mov
push
fldcw
cmp
out
jmp
sbb
push
inc
sub
adc
movsl
pop
insl
fnstcw
and
cmpsb
mov
loopne
cmp
and
mov
xchg
out
pop
lods
in
cli
jecxz
push
xor
les
ret
ljmp
fsts
ljmp
mov
or
into
xchg
mov
sub
lea
sti
clc
jae
or
or
lret
loope
xor
test
dec
fdivrl
pop
movsl
cmc
xor
cmpsb
insl
loopne
dec
adc
imul
and
call
pop
cmp
sbb
xchg
dec
or
sub
rclb
xchg
pop
xchg
insl
or
insb
insl
loopne
ret
daa
loop
and
dec
pop
mov
pop
push
jne
sub
daa
and
pop
cmp
inc
aaa
push
jne
dec
out
jb
aad
mov
popa
fdivl
je
xchg
pop
push
cmp
and
and
lods
and
add
jge
add
xchg
jle
js
lods
outsl
pop
cltd
popf
scas
xchg
ret
inc
pop
js
notb
js
xor
flds
push
insl
or
adc
push
adc
enter
out
sahf
dec
xchg
xchg
ljmp
jns
dec
fbld
xor
dec
sbb
subl
cmp
xchg
push
shrl
in
pop
sti
xor
inc
std
aam
xor
cltd
cmpsl
stc
cmp
mov
push
xor
xor
mov
cmp
lods
or
pop
mov
xlat
icebp
movsb
cld
xchg
out
mov
loop
or
dec
lret
bound
cmpsb
mov
popa
xlat
outsb
xchg
and
shl
cmc
or
pop
pop
aas
mov
mov
movsl
fdivrp
fsubrs
inc
icebp
clc
es
pop
divb
xor
mov
mov
sbb
pop
inc
movsb
cmp
pop
mov
adc
movsb
sbb
test
xor
xlat
insl
sbb
mov
and
dec
adc
aad
xor
notb
sub
jne
cmp
jp
loope
jns
sub
dec
jecxz
cltd
jp
push
imul
jg
fsub
in
mov
mov
mov
mov
ds
jae
mov
insb
or
dec
pop
xorb
imul
dec
jecxz
mov
push
fadds
test
aaa
or
cmp
push
cmp
es
int3
pop
popf
jecxz
inc
push
insl
repnz
mov
cwtl
scas
xchg
shl
jno
mov
in
push
int3
adcb
aad
xor
lret
sub
mov
jg
and
inc
push
fisttpll
inc
imul
shll
or
arpl
int3
pop
andl
sub
add
sbb
jmp
pop
mov
xor
imul
mov
and
repz
jmp
push
mov
mov
push
ljmp
pushf
ss
pop
cmp
add
or
mov
movb
hlt
pop
mov
shll
je
stc
test
stc
repnz
pop
sbb
dec
xchg
jg
and
jns
out
hlt
inc
mov
popf
mov
jmp
popa
pop
sti
sub
jg
hlt
stc
nop
es
fldcw
dec
arpl
mov
insb
sbb
adc
mov
call
inc
dec
sbb
fcomps
or
mov
xchg
cs
sbb
nop
xchg
push
xchg
mov
jmp
xchg
mov
aam
push
test
sub
into
loop
mov
aas
in
push
test
inc
push
dec
fadd
nop
dec
dec
xchg
fsub
pop
lret
pop
shl
mov
outsb
sub
fs
dec
fisubrs
pop
push
inc
mov
dec
test
sub
shll
xlat
jno
sti
adc
cmp
sarb
cmp
or
pop
out
movsl
into
jge
xor
out
push
aam
add
pop
mov
mov
ret
jl
dec
cmpsb
into
push
and
shl
outsl
mov
adc
add
dec
loop
sub
mov
loop
popa
clc
mov
imul
es
pop
or
dec
xchg
push
lahf
divl
mov
pushw
pop
pop
fidivrs
cli
jne
adc
inc
sub
xor
pushf
jge
into
or
push
mov
mov
lock
lods
pop
arpl
stc
push
jnp
push
adcl
test
sahf
ljmp
cmp
mov
cli
xor
push
lods
xchg
mov
mov
or
jns
push
cmpsb
xchg
out
sub
mov
push
adc
jo
enter
inc
cmp
lods
or
push
mov
lret
in
jmp
cs
xor
inc
clc
or
mov
divl
rcll
js
cmp
lahf
xchg
add
push
lods
imul
rcrb
mov
xchg
xor
aam
test
stc
pop
mov
cmp
pop
lahf
in
movsl
nop
repnz
pop
das
notb
xchg
pop
lcall
lock
fs
movsl
cmp
andl
mov
xchg
dec
cltd
das
mov
in
je
jo
and
jg
inc
push
cmc
sbb
unpckhps
cltd
daa
ds
or
mov
popa
test
mov
mov
fldl
ljmp
and
mov
or
sub
adc
xchg
sbb
or
xchg
cmc
mov
fisubrl
adc
push
and
sbb
sub
pop
adc
jnp
cltd
lods
xchg
sub
sub
xchg
pushf
loopne
jo
and
and
daa
cmp
clc
aad
add
cltd
xchg
jno
push
pop
pushf
xor
xchg
sub
jp
fdivl
or
enter
or
shlb
insl
add
mov
call
jmp
outsl
mov
inc
ret
repz
cmc
mov
xor
cwtl
jnp
fsubrs
std
cwtl
das
icebp
xchg
pop
icebp
add
add
inc
mov
fs
fistpll
in
push
cmp
inc
fcmovb
cmp
repz
mov
xchg
jp
out
pop
inc
fimull
out
out
jl
icebp
lahf
mov
aas
add
mov
adc
or
cmp
das
mov
cmp
fsubr
or
shrl
xchg
pusha
testl
fidivrs
into
mov
fsubl
mov
inc
fmulp
mov
hlt
and
xchg
cs
add
lret
shll
out
mov
pop
xor
cli
subl
xor
pop
mov
mov
adc
push
leave
push
aam
push
jno
mov
test
arpl
mov
pop
stos
and
push
mul
sti
sub
clc
dec
adc
add
pop
xchg
pop
js
inc
stc
fdivrl
fwait
or
or
rcrl
cmpsl
movsb
cmp
call
and
add
jg
les
jo
shrl
std
sub
lock
ret
push
cmpsl
pop
fwait
sbb
mov
jg
mov
jl
cmp
fildll
inc
inc
fidivl
mov
cld
xchg
sbb
out
xchg
ss
call
adc
sub
mov
sub
pop
out
stos
xor
insl
movsl
cmp
jg
xor
xor
or
xor
mov
cmpsb
cmp
movsl
mov
pop
rep
sub
mov
inc
dec
in
cmp
push
mov
pop
repnz
mov
int3
mov
shll
jnp
out
pop
out
test
or
pop
push
imul
sbb
fdivs
mov
or
dec
aas
movsl
loopne
mov
rol
xlat
or
xor
mov
data16
mov
mov
gs
aas
mov
int
addb
fcompl
adc
inc
in
push
popf
push
ds
out
lahf
and
adc
cld
mov
sahf
popa
out
mov
cmp
cmp
insl
jne
inc
shl
movsl
mov
xlat
adc
cmp
lds
xchg
xor
push
add
jno
lcall
inc
pop
dec
mov
outsl
xchg
push
jmp
out
xchg
leave
leave
pusha
or
jo
test
scas
insl
loopne
sbbl
shl
lahf
xchg
sub
inc
es
mov
push
sub
push
in
imul
js
rclb
push
testl
rclb
sti
or
aam
lahf
jmp
lret
xchg
movsb
cmp
icebp
cmp
mov
sbb
popf
cmc
rolb
mov
push
in
mov
push
mov
mov
sub
pop
pusha
gs
sub
gs
jo
mov
xchg
popf
push
shrl
mov
repnz
cmp
in
test
pop
xchg
call
cmp
xchg
aas
inc
adc
pop
in
mov
sahf
push
push
inc
out
jb
out
test
and
cmp
add
test
pop
and
bound
js
jp
dec
cltd
sbb
in
push
xchg
mov
hlt
dec
and
mov
push
jae
push
xchg
mov
clc
cli
xchg
adc
cmpsl
sub
fdivs
dec
and
cs
xor
dec
inc
in
rorl
popf
das
shll
jae
pop
mov
jle
mov
mov
jge
mov
xor
cmp
cltd
push
in
pop
hlt
add
cmp
loopne
and
jbe
and
call
imul
pusha
popf
addr16
jne
mov
cmpsb
sub
mov
jle
jne
pop
sub
pushf
hlt
imul
fstpt
lahf
jg
rcrl
mov
fmul
and
cmp
push
scas
pop
out
xchg
dec
sub
filds
pop
mov
and
adc
mov
xchg
sub
scas
out
loope
push
scas
std
stos
aad
rcr
call
out
mov
xor
ror
pop
out
hlt
mov
sub
fisubs
mov
fwait
roll
imul
or
cmpsb
pop
ja
into
jle
pushl
pop
fiaddl
or
ss
add
xor
xchg
adc
les
call
pusha
fwait
xor
pop
inc
popa
mov
add
xchg
and
sti
cltd
jb
jle
mov
or
outsl
xor
ss
cmp
mov
insb
and
push
mov
ljmp
push
shl
xchg
mov
xor
dec
adc
negl
inc
fsubrp
fnstcw
leave
arpl
popfw
pusha
lock
xlat
and
inc
mov
loopne
inc
pop
and
inc
loope
xchg
xor
dec
ljmp
ljmp
mov
cwtl
cmp
dec
jmp
mov
xor
out
test
fadds
repnz
mov
mov
xor
imul
inc
out
ljmp
xchg
shl
or
hlt
push
in
or
add
sub
sub
inc
push
fldl
fisubrl
jg
nop
dec
add
cld
mov
add
xchg
jg
sbb
ret
loope
xor
gs
and
pop
jl
cmp
adc
xor
test
jecxz
pop
mov
icebp
cs
test
or
cmp
mov
or
jb
mov
test
inc
dec
cmp
jp
mov
jns
loope
xor
stc
xchg
adc
sub
pop
pop
xor
imulb
out
sub
add
dec
dec
pop
lret
jbe
les
rclb
dec
pop
inc
stc
push
push
insb
int3
mov
xchg
outsb
into
lods
sbb
push
or
pop
pop
mov
cmp
aaa
push
adc
pop
or
aaa
cmp
movsl
jno
cmp
stc
xchg
cwtl
imul
adc
push
lds
cmp
rclb
sub
pop
sub
xchg
lods
jne
fs
cli
cmp
dec
push
mov
xor
sti
aad
shlb
notl
enter
std
sti
test
lock
mov
push
pop
cs
or
pop
hlt
and
dec
xchg
or
fmull
or
and
pop
rcrl
mov
cmpb
sub
cmp
dec
pushf
xor
cmpsl
mov
rolb
popa
stc
cmpsb
idivl
shl
mov
pop
icebp
mov
fidivrl
xchg
add
jae
insb
adc
fidivrs
aad
push
fwait
movsb
adc
clc
addr16
mull
jg
js
lods
inc
cmp
jb
out
dec
adc
dec
mov
xrelease
pop
or
xor
xchg
scas
dec
pop
mov
push
pop
iret
lods
out
rcr
cli
mov
repz
lds
decb
sbb
stos
ds
mov
xor
cltd
mov
shl
mov
rcl
cmc
dec
xchg
jl
out
mov
and
and
loope
cli
add
sbb
adc
mov
jnp
pop
add
lcall
mov
insb
and
cwtl
outsl
sub
dec
adcl
cwtl
or
pop
or
mov
roll
rcll
out
xor
pop
mov
lods
push
and
add
std
cmp
outsw
scas
sbb
jne
jne
mov
mov
mov
into
mov
adc
cli
push
mov
sbb
lock
test
xchg
xchg
dec
pop
adc
jns
fimuls
ret
insb
push
icebp
mov
inc
shufps
lret
xchg
sub
lods
mov
stos
jmp
insb
ds
inc
imul
in
cmp
mov
iret
adc
scas
push
inc
loope
cld
add
sub
int
repz
add
scas
repz
jge
cmc
mov
sahf
stos
pop
inc
jecxz
add
out
loope
lods
fwait
call
stos
sub
push
xor
adc
mov
jno
mov
call
ja
sub
cld
pop
xor
xchg
jae
fbld
or
cmp
sub
je
mov
mov
cmp
mov
mov
sub
sahf
mov
dec
outsl
testb
adc
and
add
push
mov
lret
mov
mov
in
leave
test
cs
pop
mov
data16
daa
inc
mov
je
pop
jp
aaa
jmp
adc
xor
xchg
xor
cmp
repz
aas
dec
push
jno
jp
jo
ret
lods
xor
ja
outsb
das
xchg
lock
or
add
aam
popa
loopne
fstps
sub
xchg
adc
mov
push
js
mov
sbb
into
mov
xor
jns
or
mov
pop
fisubl
sub
lods
lds
popl
jne
mov
cmpsl
adc
push
or
push
popf
xor
or
popa
mov
xor
rcrl
arpl
jecxz
aaa
out
dec
es
or
insl
aam
dec
test
iret
push
jo
cmpsl
push
add
fisubs
and
or
in
xor
arpl
mov
dec
stos
inc
jl
push
lcall
and
mov
inc
jle
lock
lahf
lret
fistps
mov
enter
sbb
and
push
fisubrl
fsubl
push
jg
cmc
out
icebp
cmp
popl
pop
stc
imul
jg
adc
push
popa
out
test
and
add
push
imul
and
in
adc
leave
lds
jecxz
sbb
ret
lcall
in
ret
mov
fadds
mov
mov
fidivs
sub
cli
inc
xor
xor
xchg
popa
add
push
sub
jecxz
lret
inc
or
cmp
mov
mov
lret
jnp
jp
dec
iret
jg
cmp
pop
adc
pop
bound
cmp
mov
jmp
dec
idivl
dec
jecxz
dec
mov
sub
lods
dec
adc
mov
ret
add
sub
aas
stos
cmp
out
lcall
je
iret
in
push
inc
cmp
push
jns
scas
xchg
push
or
je
push
pop
mov
and
xchg
adc
xor
push
fldcw
das
push
sub
xorps
rcrl
xlat
insb
xchg
aas
fwait
sti
jo
repz
aam
jne
mov
rcrl
push
add
pop
cmp
jle
add
pop
inc
mov
mov
popa
movsb
dec
fs
int
in
fildll
imul
xor
stos
add
pavgw
ss
aas
mov
cmp
lea
aad
mov
in
or
xchg
sbb
into
mov
int3
pop
imul
sbb
xchg
pop
imul
mov
add
stos
movsb
and
push
or
in
mov
sub
ds
sbb
xor
repnz
les
out
jne
sbb
mov
add
int
pusha
addb
iret
cmpsb
push
popa
pop
cmp
pop
mov
cs
mov
ret
clc
ficoms
sub
xor
cwtl
lods
sbb
cmc
cmp
mov
pop
imul
inc
arpl
or
adc
mov
xchg
and
add
mov
mull
or
sbb
stc
dec
pop
scas
adc
les
adc
add
js
pop
ljmp
loope
ret
jle
aas
aaa
stos
lods
inc
xchg
sub
sbb
push
push
xorb
adc
cld
adc
adc
mov
dec
xchg
push
jo
dec
xor
lea
lea
jo
sub
mov
mulb
lcall
shl
dec
cmp
out
mov
push
pusha
aas
stc
outsl
sub
aam
int3
add
lret
lds
lds
jl
push
add
int
fmul
cmp
stos
in
inc
xchg
dec
cmp
cmpsb
divb
pop
leave
sbb
outsl
and
jne
jb
adc
jge
mov
mov
insb
insl
mov
sub
or
rol
jl
sub
fcmovnbe
in
or
inc
lods
push
jno
pop
xor
dec
add
rcll
inc
adc
and
or
dec
dec
push
mov
sbb
ljmp
ja
xchg
outsl
jnp
shrb
andnps
push
pop
and
outsb
push
and
push
pand
cmpsb
mov
and
xorb
mov
mov
pushf
jge
loope
andl
inc
insb
rcrb
orl
mov
inc
sahf
xchg
fisubrl
lods
inc
test
mov
stos
or
shrl
daa
cmp
pop
push
mov
popf
imul
push
sub
mov
ret
mov
cltd
int
xchg
cmp
mov
fisttpll
shrb
pop
stos
pop
mov
pushf
loopne
inc
jmp
negl
rorl
jb
rol
je
fldl
cmp
xor
sti
adcb
sbb
scas
add
fsubs
je
adc
fnstenv
cli
cmp
jnp
out
dec
sarb
repnz
push
jle
pop
inc
das
pop
bound
cmp
pop
sbbb
jns
jae
push
lods
push
ja
lods
fnstcw
popf
hlt
je
es
jnp
xor
jle
sbb
mov
test
push
loop
inc
adc
cmpsb
push
stc
adc
int
xor
sub
push
sub
or
push
ss
push
pop
push
das
adc
vaesenclast
subb
ret
sbb
inc
mov
and
jle
cmp
leave
pop
mov
mov
mov
stos
imul
pusha
clc
addr16
cmp
fwait
pop
dec
mov
mov
sub
push
and
xor
sub
push
vpmaxub
loope
cmp
inc
std
out
sub
pop
dec
lahf
add
mov
imul
push
rcrb
add
js
adc
pop
inc
cmp
cmpsb
xchg
clc
pusha
mov
pop
xchg
hlt
mov
inc
lock
xchg
out
cmp
rcrb
mov
scas
adc
sub
lds
inc
xlat
mov
rcrl
inc
gs
into
pop
sbb
lods
movsl
xor
xchg
mov
adc
mov
mov
loop
xchg
iret
test
mov
in
xchg
mov
sbb
push
or
pop
pushf
inc
push
jae
popa
movsl
lea
mov
pushf
lret
popa
stos
jmp
push
mov
orb
sarb
icebp
fwait
xchg
xor
cwtl
movsb
testl
mov
or
cmc
popf
or
in
jl
pop
ds
jae
mov
mov
test
lcall
add
mov
pusha
xor
orl
pop
adc
xor
xchg
out
mov
clc
or
cltd
pop
hlt
scas
out
inc
push
push
jl
push
mov
jge
jno
gs
les
push
insl
clc
ficomps
or
test
int
test
test
lods
daa
fs
push
sbb
lock
adc
cmp
outsl
xor
jp
or
es
imul
mul
je
jb
icebp
jl
das
mov
and
pop
xor
dec
fwait
pop
mov
dec
in
aaa
or
lock
sbb
fwait
inc
fmul
cld
inc
inc
cs
arpl
inc
into
popf
push
loop
sti
sbb
cmp
out
adc
xor
insl
enter
and
pop
xor
xor
mov
mov
pop
aam
add
std
cld
aam
and
rorb
add
jg
and
pop
aam
xlat
fdivrp
cmp
js
lock
in
adc
stc
jge
and
call
arpl
mov
ja
test
rcl
xchg
pop
repz
cmp
cmpsb
mov
inc
out
out
dec
xor
ret
push
imul
stc
out
jg
and
in
cmp
das
or
outsb
bnd
pop
cmc
mov
adc
push
push
xor
test
mov
adc
mov
sub
xchg
fsts
in
jae
mov
lahf
jo
ret
loopne
pushf
loopne
sub
addr16
es
dec
scas
test
das
push
xor
ss
stos
push
jnp
subb
cmc
or
push
andl
and
sbb
push
cltd
cmp
fisubrl
stos
mov
pop
popa
cmp
aam
out
imull
add
sbb
es
xchg
popf
inc
sub
aad
rorb
pop
mov
lds
push
movsl
and
push
in
sarl
insb
bound
clc
inc
jnp
notb
mov
shrb
fnstenv
insl
jge
dec
mov
xchg
lods
push
in
repnz
xchg
dec
repnz
mov
adc
jnp
lret
jmp
jbe
adc
into
pop
popf
fcompl
cmc
daa
push
icebp
adc
lret
xor
push
mov
pop
scas
inc
in
insl
insl
rcrb
nop
loopne
dec
xor
rcrb
mov
mov
aas
test
call
or
fwait
inc
and
cli
jne
inc
and
pop
jp
push
mov
outsb
fldenv
mov
lods
mov
stos
pop
leave
out
cmpb
push
sub
lret
lds
add
mov
push
mov
cmc
cmp
inc
repz
inc
and
push
movsb
or
dec
fcomip
sub
and
cmp
js
call
int
aas
dec
xor
inc
pop
pop
mov
and
scas
xchg
pop
fbld
mov
sti
or
inc
sub
add
xchg
scas
mov
in
jno
lret
and
es
xchg
cmp
mov
into
dec
xchg
repz
xchg
and
andl
jl
mov
cmpsl
das
add
aad
pop
jp
dec
movsb
mov
test
add
leave
pop
leave
sti
sbbl
cmp
xlat
das
shrl
in
mov
inc
arpl
sub
dec
adc
les
fwait
hlt
int
lret
lret
mov
out
inc
jns
jne
hlt
mov
jb
xor
mov
xchg
cmp
adc
vcomisd
lock
cmp
xlat
xor
sbb
and
ljmp
addr16
test
sub
jne
roll
push
icebp
mov
mov
aad
pop
pop
scas
inc
xor
and
cmpsb
lods
add
and
insb
adc
or
nop
js
mov
cli
dec
mov
inc
in
bound
push
cli
add
pop
xor
cs
pop
out
enter
jle
das
icebp
xchg
push
xchg
scas
push
sub
out
mov
pushf
movsb
cld
cmpsb
mov
fildll
call
mov
cmp
xchg
jbe
push
imul
rol
lcall
add
mov
pop
pushf
scas
fsubrs
jns
add
mov
cltd
into
xchg
pusha
mov
lock
jge
inc
push
xchg
xor
fcmovne
leave
aas
std
ret
mov
icebp
out
pop
cltd
aaa
add
mov
movsl
std
scas
in
loope
dec
sbb
or
imul
jne
sub
lock
mov
jns
and
mov
cmp
mov
mov
mov
dec
jnp
loop
nop
scas
or
sub
sub
mov
and
pop
jae
push
push
repz
ds
aad
loop
hlt
dec
sahf
fnsave
xchg
xor
ret
gs
xchg
push
dec
cltd
jg
or
xor
pop
push
movsb
xchg
mov
dec
ja
mov
test
imul
pextrw
xor
icebp
fs
lcall
lcall
add
fcomi
insl
dec
add
mov
xchg
jl
lods
and
mov
mov
stc
sub
mov
stos
in
sti
or
sub
loopne
int3
inc
cli
pop
in
dec
lcall
and
stos
adc
mov
xchg
jecxz
imul
add
dec
jb
fstpl
cmpl
add
cmpsl
fldl
test
bnd
sub
inc
adc
out
push
lock
cmpsb
push
jbe
sbb
xchg
push
xor
fidivs
repnz
outsl
mov
mov
cmc
xchg
mov
mov
insb
sub
adc
orl
cmp
dec
pop
pushf
aad
inc
daa
ficompl
enter
out
outsl
push
jbe
outsb
int3
mov
mov
push
cmpsl
cmp
testb
dec
dec
cmp
cltd
lods
sahf
arpl
push
movsl
mov
jg
xchg
or
push
fstps
loopne
ds
popf
call
and
mov
ds
push
and
mov
pop
lret
push
aas
lcall
stos
push
cmp
insl
aad
lods
pop
jg
out
sub
fisttps
mov
mov
xor
push
xchg
inc
sahf
iret
jno
sarl
pop
and
lock
adc
xchg
outsl
sub
ss
ret
lret
aam
notl
xlat
aad
popa
ja
xchg
cmp
mov
jmp
fs
test
push
subb
and
cmp
xor
dec
cmp
cmp
add
lret
gs
popa
push
int3
adcl
dec
out
jle
cmp
out
inc
cli
mov
int
push
pop
lods
outsl
mov
repz
test
in
popf
lea
inc
fidivl
sbbb
aaa
push
notb
pushf
iret
pop
cmp
insl
js
sbbb
in
cs
testl
incl
mov
cmp
push
pop
mov
in
cs
test
xor
and
icebp
leave
mov
dec
and
call
mov
push
scas
lods
or
dec
arpl
jge
stos
inc
call
push
push
lods
lds
adc
inc
add
dec
inc
lahf
mov
cs
stc
pop
inc
fwait
push
lcall
xchg
mov
or
add
frstor
mov
enter
repnz
fsubrl
out
sub
dec
push
mov
jle
out
scas
paddb
lods
cmp
addr16
mov
stos
or
mov
rcrl
into
xlat
pop
cmpsb
mov
sarb
and
mov
outsb
sub
cld
lods
lock
jl
adc
sbb
ljmp
scas
and
jg
mov
dec
enter
mov
dec
push
outsb
flds
mov
sub
jb
sub
lcall
sbb
mov
add
insl
sbb
and
cmpsb
fstps
bound
cmp
dec
aam
push
das
cli
pusha
pop
pop
aad
in
cmp
cmp
xorps
out
inc
mov
mov
pop
push
jne
push
leave
mov
mov
leave
andb
pop
call
cmp
popf
jg
add
jbe
dec
ljmp
push
test
fwait
jbe
inc
lea
fldenv
add
jns
adc
ret
orl
mov
adc
or
mov
sbb
les
call
mov
repnz
and
jl
hlt
scas
xchg
and
mov
pusha
adc
lock
or
jb
dec
sbb
in
outsb
pop
aad
pop
nop
pushf
sbb
iret
out
add
lds
cmp
sub
mov
pop
jl
add
es
gs
mov
inc
mov
or
pop
faddl
sub
imul
jnp
cmp
xor
arpl
das
or
or
xor
fs
xchg
and
push
outsb
movsl
mov
xchg
dec
insb
jns
negl
xchg
sub
sub
insl
pop
mov
pushf
rcrb
mov
sbb
shrl
das
inc
stc
int3
push
lock
je
add
es
lea
sub
popf
push
gs
dec
cmp
out
xchg
sub
mov
cmp
lahf
cld
shlb
mov
rclb
test
add
mov
pop
in
and
aam
inc
push
and
pop
xlat
pop
pop
in
std
jae
jge
inc
out
cmpsl
movsb
jnp
fistpl
aas
stc
jo
rcrb
adc
or
jmp
outsb
mov
ret
outsb
xor
dec
pop
mov
test
push
adc
fisttpll
sti
rorb
es
add
inc
mov
insl
stos
or
inc
or
mov
or
js
cmp
cmp
lret
scas
das
rcll
jbe
or
fdivp
icebp
imul
movsb
ret
sub
xlat
outsb
mov
dec
jecxz
movsl
mov
mov
mov
push
pop
cltd
into
enter
jl
xchg
sbbb
jecxz
mov
rcrl
sub
inc
out
loope
addr16
scas
inc
mov
mov
inc
dec
popl
lods
push
repz
enter
ret
pop
inc
popa
fsubl
ret
pop
out
hlt
inc
dec
repnz
popa
xchg
call
cmp
dec
popa
jg
jl
cmpb
rcrl
scas
add
repnz
pop
shrl
jbe
pop
adc
cwtl
jmp
sbb
outsb
test
xor
scas
inc
loop
pusha
daa
cltd
mov
fistpll
icebp
popf
xor
and
js
jl
aas
cmp
test
in
insl
pop
xchg
faddl
push
call
dec
subl
add
shll
shl
roll
or
sbb
into
push
push
insl
test
ret
adc
cmp
outsl
cmp
inc
lods
popf
xor
or
add
adc
lea
aaa
pop
dec
lret
adc
sarl
xor
xchg
sub
xchg
orb
cs
repz
xchg
jns
ret
mov
sbb
insl
mov
jo
test
xor
mov
mov
mov
inc
test
fs
inc
icebp
or
xchg
pop
inc
pop
xor
aaa
pop
or
push
out
mov
jb
call
out
dec
dec
adcb
insb
mov
inc
xor
jbe
stos
inc
inc
sbb
enter
es
lock
fldcw
in
insb
inc
dec
pusha
fadds
ret
push
dec
ja
jle
pop
mov
ficoms
int3
jmp
cmc
pop
stos
dec
cmpsb
mov
fsubrl
into
cmp
xor
repz
test
outsb
fbstp
ja
nop
movsl
dec
std
xchg
sub
sbb
rcll
sbb
push
stc
test
lods
or
lret
insb
clc
push
dec
fisubrl
add
pop
pop
das
loop
ja
mov
inc
xchg
call
insl
dec
jmp
aad
insb
movsb
repnz
outsl
or
lods
push
outsl
orl
addr16
mov
inc
lods
test
lea
xchg
scas
inc
pop
xchg
adc
dec
xor
ss
push
ljmp
sub
notl
xlat
rcrb
addr16
lret
lock
cld
insl
in
adcl
jle
and
xor
sub
outsl
roll
dec
dec
cmp
inc
sbb
mov
outsl
and
jp
push
shl
into
and
clc
mov
mov
or
or
lods
hlt
or
and
jb
pop
sub
repz
and
jb
nop
sub
stos
inc
cmp
negb
in
mov
jne
or
cmp
cltd
hlt
divl
mov
mov
leave
cmp
mov
rclb
inc
loope
mov
loope
mov
or
pop
jmp
fcomps
inc
mov
jno
mov
jb
lcall
pop
in
gs
xlat
add
push
movsb
push
imul
test
xor
jns
or
inc
xchg
std
fcoml
ficompl
ficoml
dec
iret
and
lret
mov
cmp
cmpsb
pop
sbb
and
mov
lock
sti
jg
in
popa
pusha
pop
addr16
xor
mov
sbb
cltd
in
push
lret
fisttps
mov
imul
lret
inc
icebp
stos
inc
mov
int
int
movsb
and
mov
add
insl
or
outsl
ds
jp
jecxz
xchg
push
pop
or
or
cs
stos
repz
add
fchs
int
adc
push
fstps
inc
mov
push
xchg
pop
in
scas
mov
into
test
pop
mov
fmulp
das
addr16
sub
adc
stc
jne
dec
mov
imul
push
push
and
xchg
sbb
cmpsb
push
sbb
ss
mov
mov
mov
or
mov
fmull
sti
add
scas
or
sub
in
xchg
xchg
sub
test
cs
and
and
mov
mov
sbb
jne
cmp
das
cmp
cmp
pop
jmp
dec
hlt
push
mov
fsubrs
lret
cmc
int
cmp
ret
jle
or
pop
mov
pushf
ret
or
fwait
hlt
fs
aam
sbb
sahf
ss
adcb
lahf
inc
in
dec
lds
lods
fxch
pop
pop
cmp
pop
imul
xor
jb
insb
xchg
mov
ja
jo
jg
cs
es
jae
mov
mov
jle
jbe
cmpsb
mov
iret
add
xor
jp
mov
inc
push
fidivrl
sub
lret
lock
scas
push
repnz
add
xor
cmpl
jle
adc
lods
add
jmp
lret
push
push
je
push
mov
arpl
in
repnz
js,pn
popa
and
cltd
mov
push
cmpsl
in
data16
cmp
adc
or
mov
in
out
fistl
call
int
ds
and
es
adc
pop
push
inc
out
fildll
sbb
loop
out
cmpsl
inc
mov
cmp
lea
pusha
ljmp
push
push
pop
jg
inc
sbb
sbb
repnz
or
push
xchg
push
fsubrl
fdivs
int
idivl
add
mov
fldcw
jbe
fdivs
xchg
in
ss
mov
or
dec
adc
notl
data16
divl
push
jns
or
mov
mov
xor
xorb
pop
inc
pop
push
push
fildll
cmp
xor
cld
adc
cmpsb
les
ljmp
cmp
or
pop
dec
inc
fisubrs
lahf
and
pushf
test
dec
inc
jmp
xchg
cmp
test
outsb
insl
out
cmpsl
lcall
jecxz
push
xchg
adc
jmp
xchg
scas
sbb
out
jge
ja
int3
mov
mov
and
adc
sub
fmul
gs
adc
mov
in
icebp
xor
inc
or
ja
mov
mov
sub
repnz
pop
dec
sub
dec
enter
loope
arpl
call
scas
xor
adc
aaa
xorb
das
xchg
cmc
jmp
es
scas
std
xchg
loopne
call
jae
cmp
test
lds
scas
pop
subb
out
cmp
sarb
scas
dec
and
rol
insl
in
adc
imul
sti
mov
test
xlat
imulb
dec
loopne
pop
sbb
pusha
push
sub
ljmp
xor
dec
lods
jle
aas
xchg
cmc
inc
js
js
sahf
bound
push
sahf
or
jo
pop
jg
adc
lods
dec
pop
andb
xchg
lods
mov
xchg
sarl
jmp
aaa
addr16
or
test
and
lds
insl
aas
push
fwait
jl
inc
inc
cmp
push
inc
sbb
js
xchg
or
xchg
rcr
push
imul
mov
xor
sub
sub
icebp
jo
lds
sbb
mov
iret
mov
inc
inc
das
addr16
gs
push
mov
adc
decb
lret
jmp
psrlq
dec
sar
add
das
sub
inc
xchg
mov
add
xorl
push
adc
xor
add
cld
push
adc
cmpl
imul
xchg
lcall
out
push
ljmp
jo
cs
xchg
sbb
xchg
push
in
xorl
sub
xchg
jb
mov
push
adc
or
mov
bound
dec
loop
shl
aad
pop
movsb
push
add
insl
xor
dec
xor
out
pop
stos
mov
sub
mov
dec
mov
jle
divl
inc
lea
out
mov
mov
mov
xor
xlat
test
jo
pop
add
es
insb
or
xor
pop
and
push
mov
adc
ss
inc
sbbl
enter
fwait
and
push
adc
xchg
repnz
into
xchg
jp
pushf
jmp
repz
mov
je
je
mov
mov
js
lcall
and
out
mov
dec
or
in
rclb
imul
jne
mov
cmpsb
stos
xchg
inc
fldl
out
cmp
std
and
lcall
xchg
pop
arpl
scas
pop
push
call
dec
jae
sahf
sbb
orb
and
adc
mov
aam
in
rorl
pop
clc
sbb
xchg
push
in
or
and
add
sbb
inc
dec
dec
mov
xchg
sbb
mov
pop
and
icebp
enter
mov
call
int3
mov
scas
scas
inc
and
arpl
adc
test
imul
mov
ljmp
imul
in
out
out
sti
and
sti
mov
adc
ljmp
xor
push
fimuls
shll
jecxz
jge
inc
lds
xchg
imul
dec
pop
dec
sub
imul
mov
fistpll
mov
mov
xor
adc
fisubs
cld
jnp,pn
pop
fwait
out
stos
sub
jmp
cmpl
into
pop
dec
inc
jnp
cmp
pop
flds
and
pop
push
js
mov
mov
jecxz
jecxz
dec
or
sub
ror
mov
movsb
push
jb
testb
lret
test
into
mov
flds
outsl
adc
mov
cwtl
xor
mov
mov
dec
repnz
jp
out
incb
cli
ja
loop
xchg
dec
repnz
push
aaa
inc
popa
xchg
gs
mov
mov
jg
xchg
sar
movsl
lds
cmpsb
out
rolb
adc
jl
push
lock
inc
aas
lea
jbe
push
lahf
mov
jns
popf
or
dec
jo
jnp
loopne
push
pop
nop
xchg
ja
push
out
inc
push
pop
test
mov
arpl
aam
push
cltd
mov
mov
add
pop
xor
adc
xchg
add
sahf
adcb
and
jg
jbe
dec
adc
jno
jge
push
xor
filds
ror
arpl
or
fs
sub
outsb
cs
lods
sub
test
pop
loopne
mov
es
mov
jmp
cmpsb
aam
inc
sti
dec
scas
nop
sbb
xor
xlat
mov
les
rorl
repnz
xchg
add
testl
jecxz
and
add
int3
mov
pop
fdivp
cmpsb
push
addl
leave
ss
out
or
lock
jle
adc
or
jg
les
xchg
or
xchg
jp
inc
mov
fisubs
mov
imul
adc
outsl
pop
ret
insb
aad
xchg
pop
push
in
repz
pop
loope
sub
repnz
lock
mov
adc
ss
push
in
test
push
ret
mov
lods
and
fidivs
cmp
ss
testb
pusha
jo,pn
mov
jae
clc
subb
dec
test
js
js
cmp
in
inc
pop
pop
push
inc
mov
aam
pop
daa
inc
xchg
fidivs
int3
data16
sub
dec
int
hlt
lret
mov
adc
call
cmc
adc
cld
sbb
popa
enter
or
mov
mov
jl
add
push
rclb
xor
icebp
movsl
dec
mov
dec
int3
pusha
aaa
jae
pop
and
clc
inc
jb
add
or
mov
xor
jle
pop
inc
int3
mov
cmp
mov
notl
cltd
mov
or
scas
popl
enter
fistpll
out
and
mov
mov
bnd
sbb
ret
dec
in
sub
shlb
inc
jnp
shl
adc
scas
test
push
fistpll
mov
repz
sub
fstpt
mov
lahf
arpl
nop
add
jle
repnz
fsubrl
sbb
dec
test
mov
repnz
sub
mov
imul
mov
sub
aad
sbb
stos
sub
repz
push
jp
lret
add
dec
add
mov
dec
push
call
push
sbb
mov
imul
inc
or
lock
push
call
lock
mov
out
push
mov
and
mov
jo
xchg
pop
popa
aas
dec
push
sub
subb
add
stc
inc
sub
cwtl
and
push
icebp
mov
inc
fwait
cmp
push
clc
gs
jb
mov
mov
jmp
cmpl
rcrl
mov
pop
testl
add
lds
jo
lea
rolb
sub
xchg
inc
jp
scas
cmp
movsl
inc
ret
aam
mov
dec
gs
mov
xor
insl
or
aam
push
lret
lahf
and
push
sub
jne
jo
cli
insl
andb
jnp
jmp
in
xchg
sahf
fdivs
cld
call
adc
sub
add
jle
mov
cmc
or
inc
hlt
mov
xchg
sbb
push
shll
pop
cmp
mov
cmp
repz
imul
cmp
testl
dec
loope
push
cld
and
scas
inc
cmpl
stos
clc
cmp
lods
aad
or
bound
cld
lock
daa
cmc
adc
mov
inc
mov
push
mov
sbb
imul
gs
xor
xor
inc
mov
leave
jle
cmp
or
jecxz
cmp
mov
and
sub
js
mov
xor
rcrl
xchg
add
repz
push
or
push
insl
pushw
roll
push
not
cli
insl
sub
fsubl
loopne
mov
mov
mov
lea
or
orb
adc
pop
jb
or
shl
sub
repz
add
adc
ror
cvtps2pd
jae
jmp
add
cmp
addr16
iret
dec
ss
cmovl
jecxz
adc
mov
add
mov
sub
mov
jl
pop
jle
pop
xchg
lahf
jno
sbb
xchg
jbe
insb
jnp
dec
or
jb
push
xor
stc
push
movsl
inc
cli
and
mov
stos
stos
inc
fnstsw
inc
fdivr
cmc
insb
cwtl
arpl
cltd
cmp
int3
jle
cmp
aas
aam
pop
xor
add
clc
pop
js
add
sub
rcll
mov
jle
xchg
mov
jnp
insl
sbb
popf
movsb
mov
dec
mov
sbb
pop
insb
inc
pop
inc
mov
cmp
in
je
xor
aam
in
fld
rcll
in
pusha
int
sarl
jb
fnstcw
dec
xchg
jge
dec
scas
xor
sbb
pop
je
insl
sbb
popf
jp
hlt
and
dec
insb
test
lods
ljmp
mov
ljmp
call
std
leave
addr16
dec
and
mov
adc
and
insl
jp
xchg
dec
inc
nop
popf
cmp
pop
inc
pop
fiaddl
mov
aam
xchg
addl
mov
push
pop
xorb
mov
pop
cmp
testb
sbb
xor
fdivrs
inc
push
jp
mov
fsubr
mov
jecxz
jmp
jae
inc
mov
mov
push
mov
inc
push
in
sub
mov
pop
mov
call
out
mov
and
test
lds
inc
insb
pop
daa
bound
pop
lret
push
imul
into
sbb
pop
pop
push
mov
sarl
adc
add
movsl
mov
in
jne
jbe
jbe
outsb
jne
pop
xor
shlb
push
inc
orl
fimull
or
push
pop
jae
dec
xor
into
and
test
inc
cmp
lock
jo
jmp
clc
test
cld
ja
out
xor
out
stc
les
jae
lods
mov
int
push
icebp
movsb
mov
pop
fistps
xchg
hlt
or
incl
pop
push
outsb
jne
outsl
push
xchg
pop
sbbl
mov
imull
adc
fildl
push
leave
testl
sub
jmp
jge
test
fs
mov
out
aaa
sub
adc
fistl
jno
sub
js
inc
inc
icebp
xchg
sbb
inc
fisttpll
sbbl
loope
dec
pop
xchg
add
jecxz
xchg
icebp
mov
shll
lods
jo
fs
push
and
ret
ret
std
xor
gs
out
cmpsb
hlt
test
and
outsb
aam
jne
sbb
push
lret
imul
das
pop
push
and
inc
xchg
add
out
shlb
push
adc
test
sarb
cmc
daa
sub
sub
iret
mov
or
push
popa
adc
mov
cmpsl
into
push
mov
fsubl
inc
xor
xor
and
jb
sbb
lret
insb
inc
cmpb
sub
lahf
cs
pop
add
and
lods
inc
loop
and
pushw
ss
xchg
and
mov
dec
movsl
jns
popa
out
arpl
ror
dec
xchg
mov
mov
lods
jae
push
movsl
lods
pop
cmp
jp
xor
in
ljmp
jmp
out
idiv
push
push
add
xor
or
adc
mov
popa
jne
lahf
inc
add
fidivl
test
jo
push
jle
inc
scas
inc
xchg
push
jle
mov
aad
jecxz
pushf
xor
sbb
push
addr16
in
sbb
and
loope
sub
jge
xor
cmpl
int3
mov
movsl
pop
bound
xchg
sti
fsub
sub
repz
mov
fisubrl
iret
mov
lock
jge
fdivr
and
dec
test
mov
mov
out
pop
mov
in
daa
push
movsb
imul
js
jae
shrl
mov
movsb
or
sbb
sbb
cld
or
popf
loop
inc
nop
dec
ret
cltd
xor
push
pop
adc
mov
or
fnstenv
push
loopne
cmp
cwtl
jg
mov
jb
pop
arpl
lods
aam
lock
xchg
lret
in
das
sbb
mov
or
nop
lock
in
xchg
aad
test
xor
gs
pop
fcmovne
das
or
sbb
xor
pop
mov
mov
pop
lds
or
addr16
mov
sub
pop
scas
or
daa
in
xor
popa
dec
outsb
jl
add
dec
aad
sub
xchg
scas
xor
sbb
fidivrl
mov
jp
jns
fisttps
add
out
mov
lret
pop
stc
nop
mov
les
sbb
inc
mov
lea
mov
insl
cmp
mov
out
loope
movsb
and
inc
std
inc
mov
sti
ret
cltd
mov
cmp
push
insl
mov
lods
daa
rcll
jnp
int
outsl
mov
enter
mov
dec
lods
cld
ljmp
roll
mov
ds
int
dec
inc
adcb
jp
dec
push
test
push
clc
fildll
mov
jno
or
xchg
bound
add
cmp
jg
addl
loopne
mov
insb
cmpsb
adc
mov
xchg
xlat
faddl
in
or
add
mov
pop
popa
mov
into
ja
xchg
jp
inc
jl
push
fwait
push
adc
cld
into
gs
fbstp
lret
inc
xchg
stos
aas
gs
push
inc
std
jae
js
push
sbb
mov
outsl
test
and
stos
rclb
mov
adc
pop
ss
lahf
sahf
pushf
jmp
xchg
sbb
sbb
rorl
into
inc
cltd
or
scas
faddl
and
jno
dec
sti
out
adc
dec
inc
push
dec
jns
sbb
mov
ja
add
pusha
test
jmp
iret
mov
mov
add
out
daa
mov
or
insl
add
ss
je
or
sahf
and
int
jmp
mov
adc
int
mov
pop
aaa
and
cmp
addr16
leave
pusha
inc
xchg
xchg
and
fs
insl
lcall
adc
jbe
outsl
xchg
inc
fnstenv
testl
xchg
aam
es
aaa
loop
xchg
cs
sbb
loop
pop
mov
sbbl
cmp
push
sub
pop
dec
aas
mov
jno
in
enter
adc
push
shrl
mov
lods
stos
hlt
out
mov
ljmp
cmp
sahf
inc
xlat
shl
inc
mov
adc
push
add
aas
mov
hlt
mov
lock
shrl
je
adc
shrl
out
mov
scas
out
hlt
push
sbb
and
enter
xor
mov
mov
mov
or
sahf
aas
pop
out
fisttpl
bound
mov
xchg
mov
fistps
pop
cmp
out
lcall
imul
test
xchg
test
fbld
ret
mov
ficomps
test
ds
test
enter
shrl
je
lahf
push
mov
push
push
mov
ss
ficoml
push
xor
pop
push
and
imulb
imull
push
pop
enter
xor
movsl
add
add
shll
jl
leave
scas
loope
rclb
aaa
push
je
aaa
pop
cmp
push
ss
and
adc
aam
add
call
jg
hlt
js
push
xchg
sub
adcl
xchg
jno
xchg
stos
adc
filds
shll
pop
les
inc
test
sti
imul
les
fidivs
or
push
cmpb
cmp
es
jns
jbe
push
sub
cmp
lock
dec
mov
fldl
rorl
rcrb
dec
in
add
scas
scas
mov
out
xlat
push
sub
scas
in
pusha
mov
pop
js
test
push
inc
daa
mov
pop
cmpsb
insl
xor
mov
adc
jae
jg
jmp
fyl2x
in
pop
mov
dec
lret
mov
cld
imul
lds
xchg
dec
mov
shl
cmpsl
push
push
pop
dec
stos
in
into
rcll
mov
shlb
repz
repnz
add
fsubl
dec
mov
dec
jns
adc
mov
fldenv
std
shrl
add
je
lahf
xchg
int3
jne
lods
int3
jecxz
cs
adc
add
xor
or
or
jae
aas
enter
daa
pusha
sbbl
test
inc
add
repz
arpl
in
adc
loopne
mov
inc
add
ds
imull
xchg
sub
cmp
or
xchg
pop
jmp
sbb
pop
lret
test
stos
adc
aaa
jne
movsb
cmpsb
cwtl
jae
dec
sti
adc
pop
popa
pusha
xchg
in
cmp
in
cli
push
mov
insl
loopne
pop
jecxz
dec
xor
inc
das
xchg
push
lods
push
or
jne
pop
lods
mov
nop
insb
fxch
xchg
push
adc
push
test
push
jne
cli
sub
in
mov
imul
cmpsl
jecxz
fsts
rclb
adc
jae
mov
int3
cmp
mov
inc
and
and
cmp
js
test
inc
push
sub
cli
jmp
or
or
xlat
insl
sub
cmpsb
pop
fsubp
xor
data16
jb
test
mov
je
ss
and
pop
adc
shrl
into
jae
adc
push
mov
xor
jne
out
icebp
adc
out
outsl
push
inc
daa
pop
popf
orb
insl
call
outsl
out
or
cmpsl
inc
adc
mov
lret
sub
xor
sbb
push
push
mov
iret
outsl
jmp
call
ret
push
and
js
mov
dec
and
fcomi
adc
fisubl
sub
bound
xor
aad
push
cmc
aad
movsb
xor
popf
andl
pop
mov
fistl
lea
mov
fnstcw
aas
add
fadd
gs
inc
lret
movsb
fsubrs
in
mov
dec
filds
pusha
xchg
xchg
pop
daa
cpuid
xchg
repz
sbb
jg
cmc
lret
jge
ss
outsb
sub
mov
jecxz
jns
movsl
pop
ljmp
in
dec
cmp
mov
xchg
or
ret
sbb
mov
arpl
fmuls
inc
fwait
xor
pop
repnz
mov
mov
or
sub
add
cmc
inc
in
negl
scas
add
cmp
mov
stc
jo,pt
jbe
loop
sbb
leave
stc
pop
loope
mov
sub
out
xor
dec
sbb
mov
push
push
ljmp
imul
push
dec
jle
jb
insb
mull
sbb
les
and
inc
lods
cmp
adc
xchg
inc
push
inc
fldt
test
pusha
mov
jg
andb
dec
inc
xchg
dec
imulb
repz
sbb
int
pop
dec
and
mov
rol
rolb
mov
jg
lods
shll
inc
adc
dec
in
stos
fsubrs
imul
push
into
pop
cmpsb
mov
push
mov
roll
cltd
cmp
in
cmp
cltd
mov
push
mov
int3
pop
je
fnsave
fldl
arpl
or
sbb
cmp
inc
jo
pop
jl
xor
cld
dec
xor
jge
test
jg
mov
ss
sbb
lret
and
adc
rorb
or
test
pop
test
mov
sub
adc
stos
lock
pop
sub
cltd
pop
push
push
hlt
sbb
lock
cli
shl
lods
addb
adc
cwtl
enter
leave
scas
cmp
fcmovnbe
push
div
inc
push
addr16
insl
jge
and
add
xor
out
sub
mov
lret
or
mov
mov
push
shrb
or
lods
mov
pop
ljmp
icebp
xchg
es
hlt
lea
sub
or
int3
call
xor
test
std
mov
cli
aaa
xor
jo
or
mov
xlat
lods
ret
xorl
mov
in
jns
pop
dec
mov
cmpsl
dec
es
int3
fmul
jp
jns
add
fsubrp
push
pop
in
push
stc
je
sub
mov
jb
imul
push
sub
aam
mov
adc
adc
and
mov
adc
push
dec
mov
divl
test
inc
das
adc
add
and
movaps
outsl
pop
fxch
test
push
pop
lret
loopne
add
sbb
jns
pop
inc
fisttpl
in
xlat
mov
aam
push
hlt
test
dec
movsb
or
push
ret
dec
sub
sub
insb
dec
pop
sahf
push
mov
push
fldt
xor
jl
sub
ret
mov
lret
data16
loope
adc
fs
xabort
jge
outsl
aaa
mov
mov
test
pop
inc
sub
push
lock
push
in
adc
arpl
mov
bnd
cwtl
insl
sti
daa
ljmp
cmp
xchg
push
pop
or
add
mov
test
cmp
stos
push
cwtl
das
int
sub
mov
mov
push
push
rclb
mov
pushf
outsb
aas
aam
pop
pop
fs
sbb
and
pop
jg
enter
inc
sub
scas
pop
addr16
sub
mov
rcrb
mov
out
cmp
mov
popf
jg
mov
mov
mov
dec
jle
movsb
ss
pop
dec
mov
dec
jl
popf
adc
mov
adcl
xchg
es
fidivl
into
push
std
or
inc
lret
popf
fsubrl
mov
mov
ja
and
aas
inc
negl
sub
jae
adcb
or
lock
sub
out
gs
loope
hlt
ret
ss
adc
int3
jg
and
bound
lret
push
and
mov
push
jge
sub
js
jns
dec
insl
jp
xchg
mov
cmpsl
mov
sbb
pushf
adc
add
jp
cltd
andb
jae
es
push
mov
das
js
shrb
xlat
fwait
push
aam
mov
jae
pushf
gs
push
mov
cmovge
movsl
dec
push
idivb
fstps
and
jge
dec
inc
scas
fidivrs
shl
iret
insl
subl
sti
dec
stos
aad
out
fdivl
cmpsl
xor
incb
xor
push
sub
lea
sub
xor
je
es
add
mov
mov
rclb
mov
psllw
sbb
daa
sti
mov
fcmovnbe
xor
sbb
mull
mov
shll
push
ds
or
pop
cmc
mov
fnstenv
inc
pop
jbe
popf
movsb
cmp
sub
cs
loope
sub
add
inc
pop
imul
imul
or
push
push
sbb
add
cmp
ja
pop
xor
sbb
push
rclb
lahf
das
notl
test
ja
pop
scas
mov
daa
rolb
es
fidivs
ljmp
es
adc
sub
fsubrs
xor
testl
lods
and
inc
mov
and
repnz
in
pop
ljmp
das
cmc
sub
inc
dec
sarl
mov
stos
fsub
fxch
fs
push
inc
notl
sub
test
movsb
cmc
jl
or
lret
jg
scas
mov
loop
inc
push
inc
notl
int3
pop
ret
mov
pop
inc
and
std
movsb
lock
push
mov
out
xor
add
fsubp
fwait
dec
and
dec
adc
jns
idivb
sbb
add
call
xor
sbb
mov
sub
pusha
enter
jno
sbb
push
outsl
fisubl
ret
movsb
lahf
pop
rcll
inc
cmpsb
cmp
andl
adc
xor
mov
movsl
mov
mov
jmp
jnp
dec
cmpl
iret
pushf
pop
xchg
sub
mov
push
cmpsl
sub
push
jne
add
inc
inc
cwtl
jg,pn
jae
fdivl
fcomip
inc
int3
inc
int3
sahf
mov
inc
fmul
jl
cmp
dec
arpl
jnp
pop
dec
repz
sub
fsubs
imul
jge
mov
repnz
add
out
pusha
pop
pusha
addr16
push
push
scas
mov
addb
jge
es
out
lea
ss
dec
sbb
push
stc
in
repnz
movsl
out
scas
xchg
stos
clc
and
movsl
adc
js
jb
sbb
or
dec
das
inc
lahf
push
jle
mov
or
insl
std
mov
std
cld
push
or
sub
mov
push
jmp
sub
mov
xchg
fisubrs
lds
sub
dec
mov
inc
ljmp
or
popa
mov
inc
add
inc
add
stos
sbb
test
fcomip
jp
ja
fstp
pusha
sub
jg
movsb
and
testb
sub
ja
cltd
sub
inc
lods
or
push
push
lahf
flds
cmc
xor
jl
inc
fwait
or
popf
stc
dec
enter
pop
jle
dec
std
enter
bound
decl
hlt
xor
or
mov
sbbb
subl
push
push
or
outsb
fs
or
or
dec
adcl
lret
xlat
or
inc
pop
adc
jno
xchg
lods
int3
sbb
pop
icebp
push
ljmp
and
dec
cmc
inc
das
or
dec
and
sub
mov
and
ja
sub
push
aad
xchg
mov
dec
addb
push
cmpsb
jne
out
clc
sub
mov
inc
fwait
enter
mov
jecxz
insb
add
adc
and
fcomps
sbb
sub
addr16
sub
xor
popl
fisttpll
dec
or
testl
fmul
test
mov
cmp
inc
jo
cltd
ss
das
repnz
adc
sub
adc
aaa
sar
shlb
mov
ret
ret
add
xor
pop
pop
or
xchg
lea
jne
adc
dec
call
in
xchg
cmp
out
cmp
or
inc
mov
mov
inc
mov
add
inc
dec
lds
sub
addr16
outsb
mov
sti
stos
fidivl
stc
js
pop
in
call
ret
sti
es
adc
mov
fidivs
aam
enter
adc
es
loop
mov
stos
stc
aam
sub
dec
push
mov
mov
fwait
in
ret
adc
lea
mov
aad
adc
mov
test
mov
cld
sar
mov
pop
in
pop
dec
add
mov
rolb
sahf
xor
iret
mov
sbb
jle
aas
daa
push
sbb
stos
jno
ljmp
jge
fisubrl
inc
add
aas
push
sbb
sub
mov
cmp
fisttpll
push
mov
lds
notb
sbb
mov
movsl
mov
jne
loopne
inc
sbb
jge
adc
inc
fsubrp
xor
dec
enter
sub
bound
and
pushf
dec
adc
in
leave
divl
lods
or
mov
leave
addr16
jns
out
cmp
mov
in
out
push
xchg
ja
repnz
loope
xlat
cmp
fdivrs
and
shlb
das
push
mov
mov
xchg
subl
and
sbbl
sti
test
das
scas
inc
adc
nop
sub
movsb
call
mov
test
int
push
ljmp
or
arpl
sbb
push
stc
push
sbb
movsl
icebp
jp
sti
aam
mov
lahf
jl
lcall
lods
xor
pop
rcrb
pop
call
cmpsl
test
orl
xchg
rcl
add
aaa
pop
push
adc
xlat
es
add
push
or
andl
xchg
insb
ljmp
fwait
pop
add
push
rclb
addr16
movsb
mov
stos
xor
jnp
shlb
je
jae
pop
jno
dec
cmpsl
push
lret
loop
mov
dec
and
xor
sub
sbb
mov
jne
jae
push
mov
call
cltd
pop
orb
cmp
push
inc
dec
jecxz
sbb
xlat
sahf
mov
mov
pop
jecxz
mov
stc
add
mov
in
push
xchg
xor
adc
inc
mov
sbb
sub
fdivrl
leave
sub
je
sub
orb
xor
pop
pop
sub
mov
out
xchg
popf
mov
cmp
jle
mov
add
mov
mov
int3
adc
sbb
out
cmp
pusha
mov
push
jmp
add
pop
mov
add
pusha
and
add
adc
push
or
sub
inc
add
aam
mov
mov
orl
inc
sub
pushf
imul
pusha
xor
bound
test
rorb
pushf
faddl
jae
inc
ljmp
pop
es
xchg
pop
inc
inc
or
pop
jmp
push
dec
loopne
xchg
inc
hlt
ror
adc
loop
adc
dec
test
sti
mov
sahf
into
stc
mov
imul
pushf
sbb
jne
xor
jns
lods
push
lea
cmp
lahf
gs
push
mov
pop
sub
jle
fidivl
sbb
imul
inc
fmul
sbb
jp
mov
pop
or
repz
fwait
xor
or
mov
push
mov
js
cmp
push
test
fld
xor
dec
shll
repz
ja
mov
incl
js
std
mov
mov
fistps
ret
pop
notb
mov
push
iret
mov
in
push
repnz
sub
int3
adc
sti
loope
fnsave
dec
sub
cmp
push
dec
cmpsb
dec
mov
add
mov
test
movsl
movsl
es
adc
fs
aad
adc
mov
adc
sbb
mov
nop
les
aaa
fwait
pop
sub
jo
mov
mov
and
xchg
out
test
mov
inc
jge
xlat
or
push
mov
sbb
inc
bound
sub
out
sbb
stos
lahf
pop
daa
xchg
insl
mov
aam
testl
fistl
mov
or
lock
push
pusha
pop
push
inc
mov
inc
or
jns
icebp
lcall
aas
clc
popf
pop
call
ljmp
cmp
sub
mov
and
test
mov
retw
test
adc
pop
leave
aad
push
jge
loope
stc
push
out
fcomi
xchg
jo
dec
jmp
test
jae
pushf
out
push
mov
inc
aaa
lcall
xchg
jbe
push
xor
dec
in
push
rcr
push
jae
sbb
mov
test
mov
or
aas
mov
or
fdiv
adc
xor
jbe
mov
mov
dec
adc
and
inc
test
mov
out
cmp
pop
xor
aas
aas
out
sahf
mov
cmp
les
sbb
xor
sbb
out
xor
aam
inc
fnstcw
enter
pop
xchg
inc
daa
push
or
cs
pop
mov
imul
cli
sub
in
mov
inc
xchg
movsl
in
ljmp
aas
jb
repnz
es
inc
jmp
mov
push
nop
cmc
or
and
outsl
arpl
test
adc
out
cmp
jne
ret
jno
rorb
xlat
xchg
pop
lea
pop
mov
cmp
dec
outsl
nop
pop
mov
imul
mov
jmp
shr
push
inc
cli
jbe
mov
into
fwait
push
in
shrl
push
mov
adc
je
sahf
sub
call
loop
stos
lea
dec
mov
dec
mov
daa
mov
inc
stos
fdivs
call
in
lret
cmp
aaa
into
sub
cmp
lds
add
xor
xchg
push
xchg
cmpl
sub
jg
jo
xchg
sub
xchg
add
lds
cmp
xchg
sti
dec
fists
fisubl
and
enterw
jb
mov
cli
mov
jecxz
push
out
mov
cwtl
xor
pop
lahf
xchg
je
popf
push
repz
pop
sub
cmpsb
nop
pop
push
push
pop
outsl
inc
decb
mov
push
mov
pop
out
cmp
dec
pop
push
sub
fcmovnb
bound
test
jmp
sbb
lahf
inc
push
in
cmpsl
sbb
je
xor
sti
adc
mov
pop
repz
scas
subl
fstl
sub
das
mov
add
lahf
leave
and
pop
jp
cmpsb
cmp
and
inc
adc
mov
je
cwtl
popa
dec
ljmp
movsl
inc
std
adc
push
cmpsl
lea
out
or
out
dec
mov
repnz
add
test
subl
mov
cmc
enter
cmp
rolb
jge
shrl
inc
mov
mov
fmull
inc
sbb
cmpsl
movsb
js
adc
mov
cwtl
clc
adc
cltd
push
dec
fistps
testl
sub
adc
sub
sub
gs
test
leave
shlb
icebp
ret
scas
clc
jns
jne
sbb
addr16
cld
mov
clc
stc
test
fadds
xor
lahf
rcl
jbe
dec
fbld
popa
push
roll
popa
loopne
pop
nop
out
adc
and
sti
pop
test
js
cmp
out
insb
jmp
mov
cli
sub
cltd
xchg
xchg
jle
mov
dec
insb
jle
aad
pop
or
cwtl
jp
loop
push
pushf
sub
ret
push
out
scas
xchg
loopne
flds
roll
pop
mov
into
sbb
add
leave
xchg
lds
pop
mov
stc
push
jne
push
mov
std
inc
xor
enter
leave
jle
add
sub
push
popa
cmp
stos
insl
lods
add
push
dec
outsb
mov
pop
jge
enter
stos
std
outsb
enter
lods
pushf
mov
jecxz
adc
outsl
addl
push
pop
mov
mov
push
mov
push
outsb
jl
sbb
mov
xchg
add
das
sbbl
jb
fsubl
inc
pop
lods
js
out
call
jp
adc
ss
rorb
and
test
ret
adc
aas
add
push
test
movsl
adcb
movsb
in
push
push
push
inc
inc
xor
andb
enter
enter
mov
sbb
xlat
outsb
sti
add
insl
mov
fnstsw
mov
add
mov
cmp
movd
pop
ror
or
aam
push
fnsave
leave
pop
ja
cltd
push
pushf
in
pop
mov
adc
mov
frstor
int3
sub
add
inc
xchg
sub
push
rcl
addr16
dec
jo
mov
jns
loop
rcrb
adc
dec
lds
xchg
mov
addr16
xor
or
pushw
leave
push
add
cltd
jno
jo
lock
jle
aaa
push
pusha
xchg
dec
and
jb
xor
lcall
subb
sti
mov
adc
push
mov
adc
mov
pushf
jle
fsubs
pushf
xor
mov
inc
out
sub
inc
jle
es
mov
and
lods
mov
insb
sub
stos
add
inc
cmp
xor
xchg
repz
push
and
outsl
mov
pop
testl
test
jno
pushf
pop
test
jl
add
adc
and
xor
cmp
loopne
adc
out
nop
sbb
jle
enter
push
sub
xchg
pop
call
add
insb
aam
adc
jnp
xchg
icebp
or
scas
jnp
mov
and
jb
cmpl
sbb
scas
add
push
add
roll
sahf
mov
dec
bound
sub
fstpt
das
add
inc
in
and
mov
xor
mov
mov
and
out
dec
add
cwtl
int
lret
push
sbb
push
cs
fwait
push
icebp
arpl
jae
add
fs
mov
rcll
xor
mov
stos
cltd
pushf
xor
fdivrl
dec
lahf
outsl
imul
xchg
imul
outsb
pop
mov
jb
and
scas
in
inc
push
loopne
stos
xchg
insb
jmp
fidivrs
mov
in
aaa
inc
push
cli
in
pop
xor
das
xor
mov
leave
jnp
loopne
loop
push
cltd
dec
add
push
xchg
push
push
popa
ret
mov
int
dec
push
cmp
push
out
ret
sbb
testb
std
lock
outsl
sub
cltd
push
movsl
or
inc
incb
gs
dec
ljmp
sbb
fiadds
jge
scas
push
mov
xchg
loopne
xor
cmp
add
mov
dec
ds
sbb
add
mov
mov
out
jmp
scas
cwtl
lea
out
jg
mov
out
jbe
sub
jae
dec
push
popl
cmp
cltd
sub
xlat
jb
bnd
cmp
fdivrs
aaa
cli
notl
sub
mov
sbbl
mov
push
xorl
and
test
popa
lds
mov
std
bound
dec
pusha
idivl
mov
cmc
mov
mov
mov
pushl
mov
lods
or
in
shlb
fcmovnb
xchg
add
mov
movsb
pop
popf
mov
movsl
test
aad
ret
ja
aad
into
sbb
push
les
and
add
cli
loop
ss
pop
rcrb
inc
mov
loope
dec
mul
add
roll
fcom
jns
push
jle
out
fs
movsl
sti
outsb
loope
dec
push
lods
jp
xchg
push
mov
arpl
push
mov
push
jmp
out
mov
sbb
idivl
mov
in
mov
sbb
xor
mov
repnz
xlat
pop
or
iret
xor
push
push
imul
cmc
xor
sbb
scas
outsl
and
cmp
pop
lea
lcall
dec
cltd
mov
lret
insb
movsl
xchg
jp
js
out
nop
repnz
inc
bswap
pop
out
bound
test
fnstsw
pop
sbb
sbb
jp
mov
pop
das
jb
cmp
in
mov
mov
xor
dec
mov
das
xchg
mov
ret
mov
icebp
test
xchg
mov
aas
popf
add
sbb
cmp
aad
mov
cmpsb
jne
push
cmp
mov
push
mov
out
dec
sub
dec
aaa
push
loop
les
mov
imulb
cmp
jmp
pop
lcall
iret
jno
jae
cwtl
out
inc
push
jno
cs
jbe
jg
pop
inc
pop
cmp
pop
add
mov
lret
xlat
cmp
lea
loope
mov
stos
xchg
int
ret
mov
in
mov
orl
inc
pop
rorl
mov
mov
adc
sub
inc
rcll
pop
inc
cmp
jbe
lret
bound
inc
jmp
sub
in
sti
fwait
in
or
nop
inc
ljmp
xor
push
jmp
push
jb
push
das
add
pop
cmc
xor
cmp
and
add
sbb
imul
and
in
lret
or
xchg
aam
andb
movd
and
mov
xor
sub
sbb
lds
pop
lods
hlt
add
jne
daa
xchg
mov
std
add
or
aaa
or
frstor
xor
int3
rsm
xchg
add
inc
mov
add
ds
dec
mov
push
arpl
pop
mov
int
and
push
or
add
jae
dec
push
scas
cmpsl
cmp
repnz
les
jnp
fsts
push
cmpsl
mov
jp
or
out
pop
test
cwtl
out
sbb
stos
arpl
inc
cmc
jl
sbb
add
test
decb
bound
popf
stc
pop
leave
mov
sub
out
push
xchg
inc
repnz
into
adc
incl
and
xchg
xor
add
rol
sub
mov
aas
xchg
popf
push
in
je
or
adc
mov
push
lods
jg
push
loop
mov
fdivr
push
nop
mov
out
mov
adc
pop
lret
adc
data16
shl
movsb
cmp
sti
fsubr
incl
fstl
sahf
cmp
dec
sub
mov
loopne
test
or
shl
inc
and
inc
xchg
xchg
and
inc
pop
scas
ja
push
add
fsubs
mov
lea
mov
inc
pop
xchg
dec
pop
pop
dec
add
hlt
pop
cmpsl
testb
pop
adc
push
xchg
stc
ss
mov
inc
ret
mov
fsts
icebp
mov
xchg
in
dec
add
pop
adc
shl
imul
outsb
loope
ljmp
shll
cbtw
daa
push
mov
fiaddl
cmpsb
popa
lods
cwtl
xor
or
pop
scas
and
mov
and
push
adc
cmp
test
push
dec
inc
popa
call
pop
mov
dec
add
sbb
and
sahf
and
imul
testl
inc
in
neg
icebp
and
stc
std
cmp
mov
pop
icebp
into
pop
inc
decb
sub
insl
mov
mov
ror
mov
or
int3
mov
popa
clc
pop
addr16
mov
in
mov
dec
scas
and
mov
hlt
or
mov
dec
add
jo
xor
dec
add
pushf
sub
xor
inc
jecxz
rcr
push
cmp
xchg
dec
pop
jle
push
je
jnp
lret
test
mov
sbb
push
inc
dec
jl
jg
jo
push
addr16
adc
mov
add
and
push
fisttpl
rcll
cmpl
cmp
adc
cmp
repnz
rol
mov
cwtl
pop
adc
push
lods
lods
ja
jle
movsb
jbe
fidivl
adc
stc
ss
jo
mov
outsl
inc
push
cmp
add
jg
jo
pop
sbb
and
int3
cmc
mov
test
mov
insb
je
lahf
jno
bound
mov
xor
xchg
ljmp
in
dec
mov
je
and
aad
movsb
push
ficompl
cmpsb
cmc
push
sub
inc
pop
push
cmp
lcall
xor
das
push
adc
gs
mov
fdivr
aam
in
jbe
mov
mov
mov
sbb
or
mov
inc
mov
push
fdivl
add
dec
lcall
movsb
pop
not
movb
stos
xchg
cmp
test
aas
loop
or
or
cmp
popf
mov
scas
xor
addr16
xchg
idiv
je
aas
push
mov
jecxz
mov
pop
repnz
int3
mov
sub
divl
lahf
arpl
or
bound
inc
xchg
pop
mov
cwtl
les
jl
shr
mov
jbe
popf
scas
pop
mov
dec
add
daa
mov
fucomp
daa
mov
sbb
dec
dec
cs
loopne
fldt
addr16
sarl
mov
lds
out
add
ret
rol
movsb
fnsave
push
dec
fpatan
cmpl
dec
data16
push
testb
or
int
inc
cmp
mov
inc
adc
mov
cmp
inc
lods
cmp
mov
mov
cmp
fidivrl
ret
movsb
aas
push
xchg
sti
fsub
and
jo
cmp
cmpsl
ret
cli
clc
jae
ret
repz
jge
fnstcw
sar
pushf
rcrl
into
jno
push
in
mov
je
mov
inc
pop
or
push
mov
inc
movsl
jle
mov
jnp
or
movsl
fstpt
sbb
mov
mov
xchg
hlt
adcb
pop
xchg
js
mov
outsb
xchg
call
dec
pop
push
cmova
frstor
mov
cltd
and
ds
call
stc
aam
outsl
das
inc
sbb
or
shrl
xchg
adc
mov
mov
shl
scas
add
fstpt
dec
cmp
sub
pop
fcompl
fidivl
js
movsb
js
cs
shrl
inc
addr16
das
lret
cltd
or
adc
xchg
push
ljmp
in
jle
mov
decb
je
bound
vpsubq
pop
jb
xchg
mov
sbb
xchg
inc
jbe
insb
shlb
cld
push
xchg
leave
int
cli
adc
sub
dec
add
jnp
xor
fstpl
pusha
add
cmpsl
out
jbe
pop
mov
lahf
and
in
xor
cmpsb
jmp
shlb
rcl
mov
bound
or
repz
and
and
sub
mov
ret
enter
mov
xchg
out
push
in
cmpsl
lcall
push
sahf
or
test
aad
das
pushf
ret
int3
mov
ljmp
cmp
add
addb
mov
xchg
std
or
mov
mov
sti
cwtl
jnp
iret
shlb
xor
shlb
mov
rorb
ret
jo
lods
xchg
pop
pop
push
popf
jl
dec
fs
mov
test
cli
je
jb
nop
push
incb
idivb
or
jne
xor
add
sub
inc
loope
cmpsl
mulb
test
cmp
jge
repnz
cmp
outsl
sbb
pop
dec
into
sarl
mov
mov
lea
mov
int3
arpl
jae
mov
sub
ljmp
jb
aam
inc
inc
or
data16
jecxz
adc
mov
movsl
js
aam
decb
inc
adc
outsl
or
inc
vpunpcklqdq
es
ds
ds
or
js
xchg
movsb
dec
jecxz
jp
xor
xor
inc
pop
cmp
xor
daa
mov
outsl
insb
add
push
insl
out
fucom
mov
xchg
out
mov
inc
mov
into
gs
jg
mov
adcl
jnp
fdivs
je
sahf
cwtl
pop
test
sbb
negb
jle
cmp
jmp
adcl
sbb
jo
lcall
mov
push
ljmp
jno
mov
sbb
jge
sahf
gs
push
je
xor
aas
sti
adc
jb
push
sub
adc
sub
push
mov
push
pop
mov
pusha
mov
loope
sub
mov
jno
data16
lods
enter
push
jmp
mov
xchg
in
shrb
test
sub
dec
jae
mov
sbb
sbb
cmpb
sbb
mov
add
pop
ss
and
rorb
ss
in
stos
jg
sahf
in
xor
cmpsl
jge
mov
out
sbb
cmp
mov
sub
xlat
pop
imul
rorl
in
fsubrs
mov
std
lea
cmpsl
lahf
pop
mov
roll
xor
stos
xor
push
sbb
add
push
sub
adc
jne
xchg
jno
lcall
outsl
jl
sub
xchg
ss
incb
push
out
xor
xor
dec
adc
loop
pop
sti
cmpsl
mov
mov
fwait
and
shll
mov
andl
dec
sbb
psubd
sbb
out
jle
cmpsl
mov
outsb
push
add
push
jp
scas
and
insb
popf
add
fcomip
xchg
push
or
xchg
imul
inc
and
pusha
pushf
jae
push
adcb
lret
inc
push
push
and
xchg
data16
adc
sub
mov
dec
fdivrl
sarl
rcl
pusha
cmp
lret
popa
stc
push
xchg
fldl
jp
test
subb
xchg
cmp
mov
insl
cmp
scas
pushf
jns
aad
mov
pop
insl
ja
add
lods
stos
imul
pop
and
leave
adc
cld
xchg
test
sbb
mov
add
sti
stos
or
dec
imul
cmp
out
push
sbb
mov
dec
out
lret
out
je
xchg
testb
cmp
mov
dec
dec
fs
cmp
testl
shlb
jecxz
cltd
lds
sbb
scas
fdivp
and
mov
cmpl
repz
jp
enter
add
or
mov
mov
adc
jecxz
lock
cmp
sahf
mov
mov
sbb
sub
cmp
ret
pop
in
lcall
cmp
xor
orl
fldenv
xor
xchg
ret
movsb
push
enter
rcl
lock
xchg
lea
aaa
mov
adc
pop
mov
testb
jge
pusha
orb
mov
sbb
mov
add
mov
fldenv
mov
dec
xor
mov
fistl
js
and
insb
fsts
and
jne
fstpt
pop
out
lea
sub
and
bound
push
incl
jbe
fwait
bound
or
add
lods
push
in
repz
inc
in
cmp
jmp
sbb
dec
push
out
sahf
int3
loope
test
popf
stc
int
xchg
lock
adc
pushf
mov
and
cs
sbb
cmp
and
jle
push
xchg
jle
adc
cmp
bound
xor
outsl
push
cmp
aaa
nop
sbb
dec
testb
addr16
repz
dec
icebp
stc
mov
mov
cmp
sbb
xlat
lds
cmp
fucom
stos
dec
push
push
movsl
mov
adcl
jbe
shr
leave
sbb
ret
xchg
adc
add
inc
pop
jg
stos
shll
iret
jl
in
icebp
dec
testb
pop
sbb
push
jae
ret
notl
cltd
sub
inc
cmp
cld
push
xlat
enter
imul
stos
mov
ret
push
aas
outsb
xor
inc
ret
bound
out
lods
lahf
xchg
cmpsb
sbb
xchg
sbb
jbe
jecxz
and
pushf
pop
mov
lods
daa
cld
es
test
fcmovnbe
and
insb
pop
bound
push
inc
and
add
into
jb
mov
ss
rcrl
sti
inc
enter
ret
lret
loop
sbb
ret
push
xchg
lods
add
ror
mov
mov
push
pop
dec
movsl
nop
push
xlat
push
mov
stc
nop
mov
push
xchg
out
test
cmpsl
push
popf
pop
pop
xchg
sub
bound
inc
xchg
addl
int3
sbb
rcrl
loop
mul
lods
lods
sub
cmp
imul
dec
or
inc
mov
cmp
sub
inc
pop
lods
mov
stc
scas
push
sub
mov
add
mov
mov
pop
jns
rol
loope
lds
inc
jge
fistl
pushf
arpl
mov
inc
fucomp
bnd
fisttps
cmc
xchg
ds
xor
inc
cli
mov
aam
cmc
cld
push
sbb
ret
in
insl
or
add
stos
outsl
aam
ds
adc
popf
jne
adc
mov
fidivl
push
push
mov
scas
xchg
andb
jnp
cmpsb
stos
mov
jbe
fwait
ss
cs
xor
inc
leave
or
gs
loope
sarb
jbe
loopne
cwtl
lods
and
dec
mov
loopne
push
cld
add
add
jns
orl
inc
push
test
ja
mov
jecxz
and
mov
and
aam
inc
mov
dec
ss
out
imul
fisubs
imul
lock
leave
adcl
leave
cs
cwtl
jb
leave
mov
movsb
pop
mov
rorb
dec
enter
lock
dec
jno
xchg
insl
stc
sub
test
adc
xchg
pop
mov
mov
adc
call
sarb
sbbb
dec
and
movsl
stc
mov
xlat
daa
mov
jmp
leave
inc
popa
aaa
js
mov
mov
push
xlat
aas
jb
and
lahf
mov
mov
enter
lods
out
xor
iret
clc
sahf
popa
call
ds
push
hlt
jp
sbb
mov
pop
sub
jbe
cmpl
or
arpl
sub
aam
arpl
cmpsb
test
stos
adc
lret
push
pop
out
fwait
arpl
stos
lods
push
js
inc
cmpl
int
dec
in
test
mov
adc
lret
push
add
imulb
test
ds
fiaddl
jl
xor
aaa
push
cwtl
push
push
or
cmpsl
jns
js
xor
mov
mov
fadds
and
mov
push
push
push
push
shl
mov
push
lcall
and
pusha
mov
pop
gs
lods
enter
jnp
dec
dec
fsts
jae
test
pop
push
add
les
repz
stos
jp
xchg
pop
lcall
mov
pop
xchg
mov
pop
repz
dec
lds
insl
jge
pop
cmp
frstor
fs
pop
pusha
sti
pop
ret
add
and
int
sbbb
sub
call
fwait
mov
pop
fbstp
push
or
int3
test
rorb
mov
nop
xchg
insb
aaa
into
popf
mov
xchg
fbstp
lock
jmp
xchg
mov
imul
les
cmp
repz
dec
pushl
jle
cmpsb
pop
lds
adc
mov
and
iret
mov
xchg
inc
data16
push
loop
rolb
out
inc
add
jne
xchg
mov
push
and
xchg
scas
sub
jns
rclb
fdivs
add
sub
cmp
push
pop
int
inc
insl
mov
dec
shrb
das
and
or
xor
int3
jle
push
mov
popf
jmp
sbb
push
mov
jmp
hlt
or
pop
lahf
and
mov
sbb
fcomps
mov
cmp
pop
xchg
push
push
pop
xor
int3
arpl
push
cmp
arpl
inc
pop
cmp
inc
jmp
aas
orl
push
test
pop
xchg
subl
loop
pusha
movsl
fiadds
test
inc
addr16
nop
push
loopne
repnz
sbb
sti
das
subl
pop
mov
adc
pop
lret
cmp
psubd
inc
lods
or
push
shr
xchg
dec
and
cmp
and
dec
add
rcrb
rol
or
ret
std
pop
dec
or
adc
out
dec
inc
sar
adcb
xchg
test
movsl
push
dec
cs
shrl
inc
dec
dec
lods
mov
int3
rclb
add
cmc
push
mov
ds
jne
xchg
test
jbe
imul
mov
pop
lahf
jg
sbb
ljmp
sub
shl
jno
pushf
mov
ret
cmp
mov
sub
push
aaa
scas
dec
mov
mov
fldl
xor
dec
xor
add
mov
or
dec
das
std
sarb
cs
repnz
mov
insb
push
jnp
mov
mov
cmp
fidivs
cmpsl
ds
rcrl
inc
pusha
imul
sub
inc
mov
and
push
mov
shrb
mov
nop
inc
popa
cmc
test
inc
mov
mov
into
enter
mov
pop
iret
sbb
mov
jle
movsb
testl
push
addb
sbb
jb
std
pop
push
sub
cmp
xor
add
pushf
in
sub
repnz
mov
jb
cmp
cmc
adc
fwait
mov
rol
mov
cwtl
pop
xchg
int
movsb
mov
data16
sub
rcr
dec
rcl
mov
arpl
mov
or
inc
dec
ffree
arpl
leave
and
or
mov
sub
sub
xchg
mov
into
push
mov
enter
xchg
mov
ret
mov
hlt
or
sbb
sbb
sbb
sub
cwtl
js
mov
mov
lds
add
inc
cs
lea
outsl
cltd
nop
addr16
scas
out
pop
idiv
pop
push
sub
mov
insb
add
jle
out
mov
add
call
dec
xor
fldln2
shrl
ljmp
dec
aaa
bound
cmp
aad
pop
shlb
dec
jmp
jmp
rcrb
xor
subb
jns
lahf
nop
insb
inc
sub
xor
mov
int3
sti
negl
insl
push
popaw
add
jns
inc
push
sahf
cmpsl
cmp
xchg
in
mov
dec
roll
cmpsl
out
pusha
mov
push
adc
push
leave
push
enter
fs
js
int
aas
push
test
and
mov
pushl
fsubl
ret
pushf
jae
or
add
push
add
xor
sbb
dec
mov
gs
outsl
push
xlat
jo
and
xchg
push
sub
mov
push
mov
inc
aaa
bound
mov
data16
test
mov
jo
add
xchg
add
adc
movb
push
adc
aaa
out
jp
inc
lea
in
fdiv
cmp
neg
movsb
lret
lds
je
int
dec
orl
loope
pop
lds
pop
sub
sub
addl
movsb
test
sbb
mov
insl
loop
pop
cmp
test
mov
fistpll
in
test
fdivs
push
cmpsb
mov
sub
mov
mov
mov
pop
aad
sub
fwait
mov
sbb
inc
jge
lret
into
push
js
loopne
push
lret
in
test
mov
mov
in
inc
dec
fistpll
xor
test
xor
movsl
inc
fucomip
inc
xchg
jb
call
subb
imul
outsb
jp
imul
test
shl
or
add
out
or
adc
xchg
cltd
clc
inc
mov
sti
fistps
prefetch
jge
xchg
scas
int3
cmp
lcall
lods
sahf
mov
xlat
lock
fnstenv
dec
add
leave
jno
scas
mov
leave
insb
leave
rcrl
mov
mov
xchg
pop
pop
negb
sbb
stos
sar
sbb
scas
mov
pop
ret
daa
outsl
jo
repnz
outsl
sti
adc
xor
dec
jae
sub
push
mov
fadd
ret
fdivrs
test
in
pop
ret
sub
loope
dec
divb
mov
ret
imul
cltd
popf
jne
xchg
sti
pop
call
cmc
out
lahf
adcl
inc
aam
js
jl
sub
add
repz
sub
xlat
adc
ret
sahf
and
push
xchg
inc
aam
mov
jecxz
stos
cmp
mov
jb
mov
cli
enter
mov
cmpsl
ret
adc
push
mov
or
cltd
push
mov
test
dec
xchg
icebp
inc
sub
in
jb
adcl
andb
cmp
orl
mov
sub
loope
mov
sbb
xorb
pop
cmc
pop
or
dec
adc
adcl
add
pop
jp
push
nop
dec
fstpt
push
dec
lret
lret
jns
out
mov
inc
int
xchg
ja
repz
dec
fidivl
std
sahf
cwtl
aaa
and
pushl
jne
testb
xchg
add
fs
adcl
add
flds
xchg
adc
out
push
adc
mov
out
repnz
std
xchg
adc
mov
ds
push
stos
clc
push
pop
imul
fdiv
cmc
jb
sub
mov
xchg
cmp
sahf
xor
insl
jo
mov
xchg
out
mov
cmp
scas
sbb
xchg
insl
stc
adc
or
fsubs
lods
mov
lea
pusha
mov
mov
out
jno
lret
mov
sub
data16
xchg
pop
call
scas
cmp
sub
sahf
repz
push
xchg
fwait
jne
int
in
arpl
add
mov
sbb
or
addr16
xor
sarb
mov
push
lret
sbb
pushl
add
mov
rcl
rcr
ds
scas
cmp
in
xchg
push
jl
fs
adc
pushf
and
nop
jnp
scas
mov
fwait
loope
xlat
fcoml
jge
jbe
lods
xor
int3
jns
cmpsb
outsl
rcrl
pop
lods
es
jnp
unpckhps
dec
xor
sbb
in
jae
outsb
into
cwtl
xor
cmpsl
movsl
cmp
mov
xor
shll
es
fs
pop
rol
pop
inc
ja
stc
push
jmp
rorb
stc
or
loopne
std
mul
movsb
sub
push
inc
adc
js
fwait
addr16
in
cwtl
mov
mov
push
add
or
fs
loopne
addr16
push
fwait
arpl
jne
mov
shl
gs
movsb
mov
xchg
jae
scas
sub
cmp
push
dec
ss
js
push
jmp
lcall
push
sbb
nop
sbb
jmp
xchg
sub
dec
pop
dec
dec
push
loopne
rcrb
nop
lds
mov
ss
push
add
and
or
nop
pop
mov
mov
dec
inc
out
or
or
int3
fs
cmp
add
mov
lods
imul
roll
into
fcoms
int
xor
mov
out
repnz
outsb
cmpsb
fidivs
pop
mov
imull
out
int3
ret
fldt
push
int
leave
mov
sub
xchg
mov
popf
dec
cwtl
xlat
fildl
xor
stos
push
add
clc
dec
or
pop
scas
cli
push
inc
sahf
adc
push
pop
mov
gs
clc
ds
lcall
sbb
cmpsb
or
cmpb
scas
addr16
sub
ret
mov
les
icebp
sub
jle
jmp
gs
dec
xchg
and
lret
jb
xlat
mov
imul
pop
dec
add
icebp
test
jns
cwtl
xlat
xchg
push
ret
les
cmp
popf
cmp
add
sbb
xor
xadd
les
cmc
mov
pop
dec
pop
cmc
dec
mov
imul
lods
jmp
aad
popf
je
mov
and
das
imul
and
daa
mov
xchg
lods
jb
fbstp
loope
xchg
lods
nop
clc
push
lea
test
dec
cmp
sub
fldcw
arpl
iret
jmp
out
mov
inc
push
lahf
les
mov
jmp
and
dec
or
insl
fldt
outsl
ss
pop
jo
mov
popa
dec
lret
inc
jmp
xlat
dec
inc
aad
push
aaa
bound
mov
cmp
ljmp
icebp
push
ss
test
cmp
lret
fildll
sbb
jbe
repz
jge
jns
and
and
lcall
das
mov
mov
cmp
mov
mov
jle
nop
push
in
loop
repz
je
ja
cmp
mov
cli
aad
aam
xchg
movl
lret
and
fbld
jbe
dec
call
jge
push
mov
pop
aad
mov
daa
mov
sbb
lcall
imulb
add
jns
mov
mov
mov
or
mov
sbb
into
stc
lods
xchg
pop
xor
or
inc
rcrl
pop
in
js
cmp
addb
add
pop
jl
sub
ret
dec
sti
add
sarb
shll
mov
mov
cmp
push
dec
add
fs
cld
cltd
rorl
gs
popa
jge
jo
and
call
push
inc
mov
fcomps
jno
sbb
push
mov
adc
das
jg
rclb
dec
and
pop
sub
xchg
loopne
es
aas
pop
mov
xor
gs
and
in
scas
outsl
jmp
fxch
hlt
clc
addr16
out
sbb
add
lcall
and
notl
jb
and
out
dec
add
mov
and
pop
jl
adc
aaa
lret
int3
fisubrs
push
jno
push
mov
ja
push
fisubs
pop
addr16
adc
mov
mov
adc
pushf
lret
rorl
mov
cmp
rclb
mov
in
push
sarb
mov
pop
hlt
jno
popf
jo
mov
divl
test
leave
sti
xchg
mov
cltd
sbb
lret
pusha
sar
lods
gs
sbb
nop
idiv
pop
xor
cmp
insb
xor
nop
inc
push
xor
mov
dec
push
scas
inc
mov
jno
mov
les
xchg
jge
lods
scas
mov
decl
test
movsb
jecxz
imul
sbb
and
mull
cmc
add
adc
shrl
imul
addr16
jne
adc
mov
stos
sbb
les
adc
push
push
lret
or
in
lock
jmp
insb
sbb
das
lods
inc
popa
adc
repz
ds
dec
mov
sub
into
dec
daa
cmp
adc
inc
shll
dec
mov
jg
dec
mov
sbb
adc
jbe
sti
mov
push
enter
push
insb
loop
jge
test
std
mov
test
sub
jns
or
mov
ret
lds
or
movsl
ljmp
mov
pop
mov
scas
sbb
inc
sti
loope
inc
test
lret
lret
xchg
shlb
push
out
mov
sbb
ret
imul
jb
xlat
cmp
lods
js
subb
imul
or
inc
pop
push
sub
cmp
scas
cmp
ret
xchg
lock
in
mov
cmp
repnz
stos
ljmp
int3
mov
sub
lods
shl
out
push
push
insb
xchg
mov
scas
add
adc
push
movsl
nop
pop
mov
inc
and
sub
push
repnz
xchg
sub
arpl
or
into
mov
sbb
lcall
and
jge
sti
push
cli
or
cmpsb
inc
loopne
pop
in
jle
jle
sbb
fsubs
pop
icebp
sbb
ds
movsl
cmp
imul
xlat
adc
movsb
push
lret
sti
aas
sub
jo
jne
dec
push
dec
in
imul
shl
mov
sbb
nop
or
outsb
jle
push
xchg
imul
mov
pop
adc
outsb
cmp
mov
jnp
ljmp
cmp
flds
clc
inc
pop
cmp
loopne
ss
cmp
repnz
jl
nop
cmpsl
xchg
sub
mov
or
hlt
cld
jns
jp
add
cs
pop
imul
addr16
aam
xchg
and
jp
xor
jle
or
mov
push
loopne
mov
iret
push
mov
pop
shrb
mov
add
cmpsl
xchg
dec
and
push
ja
sub
mov
mov
push
fadd
cmpl
or
adc
adc
mov
into
push
lret
or
dec
iret
and
pop
test
mov
xchg
lret
mov
push
aas
mov
shrl
enter
popa
add
push
loopne
push
dec
fdivs
jg
sub
outsl
dec
jnp
xor
dec
pop
and
inc
push
test
mov
shl
repnz
inc
push
testl
mov
pop
and
cmc
push
xchg
cmp
mov
imul
jmp
dec
jae
or
xlat
insl
popa
mov
andb
in
or
xor
rcrl
cmpb
mov
sahf
push
dec
xchg
mov
je
xor
or
jno
lahf
jp
add
hlt
jg
stc
mov
scas
cs
stc
or
fldenv
add
lea
mov
mov
mov
dec
test
mov
je
incl
xchg
aad
add
push
fs
pop
push
push
mov
loope
fcomps
les
fmull
sub
popf
jb
lret
or
lahf
insb
push
jno
jmp
inc
cmpsb
push
filds
popf
jp
and
test
xchg
ficoms
movsl
mov
in
jbe
xchg
and
mov
xchg
mov
xchg
sub
mov
and
add
inc
xchg
imul
dec
aam
dec
pop
in
xchg
in
push
or
add
xchg
insb
push
mov
mov
std
bound
insb
mov
or
enter
cmc
out
push
out
cmp
mov
hlt
shlb
xlat
sarb
push
or
mov
or
ss
cmp
lret
ds
hlt
shll
adc
mov
out
sbb
xchg
sahf
ja
leave
xor
mov
lret
insl
in
sub
fcmovbe
mov
cmc
cmp
pop
mov
call
xchg
push
and
push
lods
mov
adc
stos
lods
outsl
xchg
jmp
aaa
imul
clc
cmp
clc
and
fisttpll
inc
mov
inc
xchg
push
shrb
or
add
das
repnz
add
stc
and
or
aad
add
inc
movsl
jecxz
imul
dec
jbe
jae
es
xor
in
rorb
mov
in
loopne
mov
sbb
mov
in
or
gs
test
loop
movsb
cmp
inc
bound
movups
xor
in
nop
cmc
pushf
cmp
hlt
add
xchg
add
les
insl
push
jne
int
pop
clc
push
push
fdivs
or
aaa
in
aas
cmp
or
leave
adc
mov
cld
xchg
leave
cmp
xor
adc
or
cmpsb
push
aas
lock
add
aas
push
jp
push
mov
ds
ret
sbb
into
cmp
arpl
mov
fs
adc
stos
pop
mov
sbb
repnz
out
aas
out
dec
test
rorl
and
xlat
adc
negb
jo
sub
clc
and
cld
pop
movsl
add
scas
jp
inc
inc
pop
fwait
ss
cwtl
dec
jmp
push
or
mov
fdivrs
testl
stc
xchg
inc
xor
push
std
jl
push
leave
pop
insl
mov
adc
ds
pop
mov
xor
cli
daa
mov
ljmp
jno
dec
dec
mov
cli
enter
adc
bound
into
jno
and
push
lret
fbld
pop
xchg
pushl
sti
or
out
pop
sahf
mov
or
pop
cli
inc
sub
jnp
xchg
mov
cmp
lret
inc
in
movsl
mov
push
cmp
xor
stc
xor
bound
lret
push
fidivs
outsl
xchg
jmp
cltd
out
dec
jecxz
or
add
push
mov
xor
jno
push
add
divb
lods
mov
mov
in
clc
xor
xchg
mov
in
test
movl
andl
add
mov
adc
mov
push
jl
inc
xor
ja
pop
aaa
sbb
mov
data16
popa
fsubs
popa
pushf
into
adc
mov
mov
pop
insl
outsl
fsubr
push
dec
pop
inc
sahf
xchg
das
cmp
dec
int
rclb
sub
leave
inc
pop
and
push
movsl
push
leave
outsb
cmp
je
mov
xor
scas
mov
add
xchg
dec
mov
lret
outsb
jmp
cmpsl
stc
aas
in
std
push
lods
sub
mov
mov
fucomip
jecxz
jnp
repz
sub
sarl
dec
call
insl
jg
lock
mov
push
xlat
fwait
jo
xor
out
mov
jp
and
adc
bound
sbb
fwait
sti
das
cmpb
sbb
mov
cmp
fcomp
and
arpl
fbstp
jbe
push
sub
and
pop
pandn
sub
out
sti
cmp
sahf
popf
mov
fisttpl
adcb
js
xor
xchg
or
imul
enter
dec
adc
loopne
push
in
xchg
aas
lret
cmpsl
or
cmc
mov
push
xchg
or
sbb
dec
jne
inc
xor
xlat
cltd
ds
scas
pushf
pusha
das
sahf
push
or
mov
out
aam
mov
outsl
push
lea
mov
add
insb
mov
imul
stc
sbb
pusha
jl
pop
sub
or
inc
pop
xor
push
jo
ss
mov
xchg
shl
jo
cmp
cmp
inc
hlt
stos
es
push
icebp
xchg
rcll
mov
insb
sarl
pop
outsb
inc
clc
dec
cmc
imul
loop
sti
imul
cs
xchg
cltd
enter
cmp
outsl
adc
inc
mov
mov
and
xor
mov
bound
cmpsl
mov
gs
inc
in
push
popf
lock
inc
xchg
not
push
scas
jge
fwait
daa
leave
mov
adc
inc
adc
pop
sub
sub
lods
xchg
mov
lods
jg
loop
sbb
cmp
int
cmp
push
mov
mov
call
in
loopne
lock
xchg
cmc
stc
adc
dec
sahf
lods
jno
clc
or
jbe
push
test
bound
jmp
mov
mov
aaa
or
je
sub
add
adc
lret
inc
jecxz
inc
xchg
ds
in
ljmp
xor
mov
ds
nop
and
push
mov
dec
repz
orb
stos
and
push
mov
cmp
leave
ftst
jle
adcb
dec
lahf
sahf
orb
adc
lods
in
sbb
insb
std
xchg
lods
lds
push
loope
sbb
test
jmp
addr16
loop
mov
repz
dec
cs
or
push
lcall
daa
and
add
pop
adc
and
aam
movsl
ljmp
iret
out
arpl
sub
nop
stos
hlt
les
jno
sub
in
dec
fldl
ret
ret
xchg
popa
cld
sbb
rcl
inc
nop
sbbl
jge
out
and
insb
les
decl
stos
mov
adc
cmp
sbbl
fcomps
stos
dec
jge
xlat
mov
nop
ds
insl
cmc
dec
test
pop
mov
popf
movsb
dec
or
int
adc
pop
loope
and
push
mov
jle
pop
adc
mov
mov
outsb
sbb
dec
add
xchg
sub
inc
mov
xchg
mov
lods
push
cmp
push
stc
daa
adc
xchg
xchg
rorb
sub
inc
stos
divb
daa
jecxz
mov
cwtl
aaa
push
sti
aas
inc
push
cmp
push
call
or
rcl
inc
lea
lock
or
testl
mov
gs
jmp
dec
mov
dec
in
adcb
jecxz
pop
fs
mov
aad
dec
inc
push
jae
mov
mov
mov
jg
das
into
andl
jns
xor
clflush
mov
jb
or
add
adc
repz
shrb
push
pop
pop
movsl
inc
movsb
xabort
mov
inc
push
cmp
pop
mov
xchg
test
paddd
neg
jge
test
push
dec
sub
pop
inc
leave
lret
in
rcll
xor
xchg
and
inc
dec
fisubrl
das
mov
inc
xlat
fwait
decb
sub
jns
sub
xchg
stos
pop
mov
cmc
push
shr
pop
or
cmpxchg
and
cmp
pop
jae
lods
lods
sahf
filds
addb
iret
dec
jmp
mov
pop
in
subb
jo
lcall
mov
mov
cli
idivb
dec
repz
push
or
bound
xor
ljmp
push
outsl
mov
fdivp
cmp
sbb
das
lcall
sub
ss
call
mov
mov
nop
addb
lcall
mov
inc
and
cmp
push
dec
or
sbb
rcr
or
pop
dec
icebp
mov
rcl
int3
sarb
dec
in
mov
out
pushf
ja
inc
fstpl
mov
sbb
xchg
pop
dec
sti
cmp
scas
jp
int
bound
xlat
mov
dec
std
jo
push
ret
xor
adc
adc
frstor
stc
sbb
and
aad
push
jns
pop
cmpsb
int
idivl
sub
cmc
setb
lret
jmp
scas
rorb
jae
cmpb
and
push
call
fcmovb
outsl
subl
add
popf
adc
out
adc
xor
pop
push
test
sub
cltd
or
pop
movsl
push
pop
lret
sbb
jne
cmp
fidivs
ret
xchg
jno
mov
jnp
and
push
add
mov
and
pminsw
stos
mov
sahf
inc
shr
jl
jnp
scas
pushf
fiaddl
dec
imul
adcl
dec
les
inc
imul
inc
push
xor
ror
dec
fcoml
vcomisd
jge
and
aaa
cli
sbb
push
fs
insb
xchg
push
mov
or
mov
mov
prefetcht1
push
or
mov
sbb
mov
jl
addr16
adc
imul
or
cld
sub
sub
jmp
or
add
stos
jmp
inc
push
mov
mov
daa
scas
sbb
fdivrs
aad
push
cld
les
fwait
push
daa
xchg
pusha
out
mov
mov
sti
pop
aaa
int
sbb
lods
ljmp
pushf
xor
mov
in
jne
jge
or
mov
loopne
aad
jp
test
dec
dec
movsl
cwtl
mov
rorb
and
xor
mov
int3
pop
test
dec
push
cli
cmc
mov
dec
mov
mov
clc
shlb
add
cltd
dec
and
inc
es
mov
mov
rol
cmpsl
sbb
add
pop
cltd
inc
xchg
mov
push
aas
dec
in
mov
test
jp
es
mov
sub
clc
or
fs
pusha
cmpsb
cwtl
iret
push
add
inc
cmpsl
rorl
stc
cmp
out
xor
pop
jno
and
push
pop
adc
mov
call
int3
addr16
add
adc
dec
pop
pop
mov
cmp
xchg
push
int
setno
cld
repnz
xchg
std
ret
movl
add
pop
pop
movsb
jae
mov
pusha
mov
xor
ss
push
fldenv
jae
dec
scas
ljmp
pushf
repz
and
inc
loopne
jge
pop
std
push
scas
cmp
inc
push
xchg
dec
dec
aad
stos
lods
jmp
add
and
xlat
pop
and
aam
add
push
push
inc
cmpl
or
and
movsl
add
push
mov
shlb
inc
sbb
xlat
test
push
js
jo
fiadds
pop
push
adc
in
inc
mov
ficoml
mov
xchg
decl
sub
leave
inc
lret
lods
clc
pop
inc
jne
fbld
sbb
or
in
mov
addr16
sbb
loopne
outsb
scas
fstpl
fbld
into
sub
cs
pop
xchg
rorb
adc
rolb
cmpsb
push
mov
mov
pop
mov
dec
fsincos
xchg
ss
push
mov
pop
adc
cmpsb
add
loope
pop
and
adc
adc
je
jne
cmp
push
xor
adc
dec
mov
aaa
in
pushf
sub
insb
sub
cld
xchg
sub
repz
fisubl
or
ret
add
cld
xor
nop
test
imul
pop
inc
pop
jae
das
add
pusha
mov
popf
push
xor
popa
arpl
movsb
dec
movl
pop
xor
add
loopne
mov
mov
push
ret
hlt
mov
mov
sbb
sbb
xor
fwait
imul
in
xchg
es
arpl
mov
fldl
jnp
cmpsl
test
mov
ja
push
adc
hlt
jmp
subl
aas
push
mov
add
fwait
xor
cltd
cmpsl
xchg
pop
sub
aad
popa
clc
jle
inc
cmp
mov
imul
mov
rolb
xor
cltd
lock
dec
cwtl
and
outsl
dec
loop
pop
mov
pop
pop
xor
shll
cmpsb
adc
cmp
push
inc
into
mov
jnp
jae
fdivrs
or
and
pop
and
test
ljmp
push
mov
int
jno
fisubrs
repnz
addr16
inc
xor
xchg
mov
push
hlt
jp
idivl
or
popf
repnz
jbe
and
jecxz
cli
lock
out
push
das
iret
mov
jge
int3
mov
sub
std
je
in
int3
aaa
push
gs
sbb
xchg
pop
jl
loop
and
pop
cld
test
loope
cltd
sti
jbe
add
fsubs
jg
into
cmp
clc
jae
in
pushf
shl
jno
mov
pop
adc
push
push
test
mov
pop
nop
sub
shlb
jp
cs
fnstsw
ret
lea
jno
and
pop
add
sbb
mov
hlt
push
dec
mov
out
xchg
jl
or
ds
mov
les
out
or
cmc
mov
sbb
in
orl
lods
gs
xchg
fistpll
movlps
scas
mov
sarb
cmpsl
orl
mov
imul
push
std
jl
inc
fstpt
cwtl
pusha
add
stos
jmp
into
xsha1
cmpsb
movntq
mov
cmp
adc
add
push
lahf
pushf
fisttpl
adc
mov
dec
dec
mov
and
icebp
pusha
cmp
dec
loop
jns
xor
jg
sub
xchg
xchg
das
inc
stc
mulb
pop
push
dec
cmp
imul
ds
lahf
popa
outsb
scas
mov
nop
push
cmc
mov
add
or
mov
xchg
aaa
jb
and
adc
dec
xchg
xor
inc
aam
fwait
sub
dec
rcrb
inc
rcrb
ja
mov
or
out
jg
mov
mov
jg
dec
push
lcall
and
test
cwtl
cwtl
push
jb
xchg
add
idivl
mov
xchg
mul
lcall
jg
subl
scas
mov
add
jne
pop
xor
cmp
adc
mov
xor
movsb
arpl
rclb
xor
es
in
cmp
or
out
popa
aas
or
sub
rol
lds
popf
and
inc
or
cmpsb
daa
mov
cmp
pop
ljmp
pop
xlat
pop
arpl
jb
mov
outsb
sbb
scas
jae
inc
or
in
or
je
lea
gs
sub
mov
and
dec
lea
arpl
outsb
sbb
inc
and
shr
mov
mov
pop
out
out
in
divl
pop
fisubrl
cmp
les
inc
std
std
adc
fists
mov
jno
gs
xor
jno
push
ss
movsl
pop
popa
and
bound
dec
mov
mov
sbb
mov
push
movsl
dec
jne
mov
dec
aam
cmp
rcll
pop
cmp
push
or
scas
cmc
xchg
cmpsb
cltd
ja
lahf
xor
nop
xor
data16
stos
mov
xlat
mov
popa
dec
pop
rorb
jns
mov
jnp
jl
gs
test
hlt
xchg
push
push
xchg
adc
adc
adc
mulb
xchg
fstpt
call
movsl
bnd
dec
cmp
adc
repz
sub
push
aad
hlt
dec
aaa
shl
and
pusha
pop
cmc
inc
add
xchg
add
je
icebp
arpl
jae
sti
fwait
insb
subb
cmp
or
aas
mov
sub
xchg
clc
mov
fstl
roll
sbb
xor
aaa
std
jmp
ljmp
cmp
mov
xor
nop
mov
jo
call
mov
rcr
arpl
mov
test
dec
fnstsw
ljmp
sub
das
sub
lds
das
addr16
jmp
or
jg
lods
lcall
mov
xor
push
mov
jp
adc
imul
add
inc
mov
fcmove
sbb
push
mov
out
lock
fiaddl
daa
jo
mov
mov
and
fdivrs
and
fcoms
mov
stc
dec
pushf
movsl
stos
out
push
inc
sub
fnstenv
sarb
xlat
cltd
mov
adc
iret
and
sub
inc
jae
pop
sub
stos
pushf
dec
mov
mov
mov
mov
push
imul
xchg
xor
inc
add
std
out
test
push
jae
and
loop
jne
xor
insl
xchg
outsb
ret
mov
orl
add
and
dec
jns
lcall
xor
stos
mov
flds
xor
test
jge
pop
cli
push
test
and
les
jp
push
scas
lcall
mov
mov
sbb
push
lds
dec
add
fwait
push
inc
xchg
and
push
add
or
xor
arpl
lock
dec
shr
dec
in
shlb
mov
je
cli
mov
das
pop
push
enter
cmpsb
lock
aam
imul
shrl
and
insl
sbb
test
pop
sbb
cs
ds
test
or
mov
out
add
mov
in
cmp
sahf
hlt
pop
and
int
mov
mov
test
push
ficoml
aaa
rclb
ss
repz
cmpsb
mov
push
cmc
xor
aam
adc
xor
sub
xor
notl
mov
pop
stc
mov
pop
jno
sbb
add
enter
sbb
inc
jno
int
or
or
pushf
jo
xchg
dec
mov
add
fsubl
dec
adc
inc
xlat
mov
xchg
push
sbb
loope
std
xor
lahf
xorl
ret
insb
xchg
ja
pushf
ret
gs
add
add
and
mov
cld
pop
lock
pop
dec
dec
scas
inc
inc
xchg
jmp
cmp
mov
aad
into
add
jbe
mov
test
inc
sbb
les
pop
aam
pop
push
mov
xor
bound
sbb
xchg
lcall
push
mov
jmp
and
inc
les
stos
jmp
mov
inc
int
xchg
loopne
xchg
xchg
mov
loopne
adc
scas
mov
sub
ret
insb
lock
das
sbb
sbb
or
sbb
in
std
xor
xor
rcrb
push
xor
mov
aaa
insl
orl
and
ljmp
and
inc
lods
movb
mov
scas
shlb
js
mov
push
aam
inc
and
cmp
loopne
pop
imul
jecxz
jne
rolb
and
mov
arpl
pop
cmp
mov
loope
movl
adcb
movzbl
xchg
push
flds
addr16
aad
or
mov
stc
ljmp
add
xor
lret
cmpsl
mov
mull
mov
or
mov
xor
popf
or
ficoml
add
inc
pop
movsl
in
insl
outsb
push
jbe
mov
mov
jnp
inc
in
aad
jecxz
xlat
or
dec
fwait
push
jb
sbb
pop
pop
pop
push
sahf
push
cmp
cmpsl
add
ja
and
push
div
inc
jecxz
push
mov
jle
jno
cmpps
push
lcall
in
movsb
mov
aam
andb
fcompp
inc
jns
in
in
dec
push
inc
pop
sub
jb
sbb
scas
and
shlb
inc
insb
pcmpgtb
in
ja
test
mov
jmp
jne
pop
mov
shlb
in
gs
inc
clc
lcall
adcb
sub
and
xchg
cmp
jle
daa
rcrb
dec
sbb
icebp
out
stos
pop
cli
jns
insl
repz
and
xor
or
insl
outsb
sub
test
jg
mov
ljmp
adc
inc
xlat
ret
mov
mov
sbb
call
idivl
xor
sub
push
sar
dec
loope
pop
pop
fs
push
inc
bnd
test
dec
int3
jmp
jle
xor
leave
lea
jne
out
mov
test
inc
adc
mov
push
shrl
hlt
notb
ljmp
jno
mov
pop
jp
mov
clc
add
push
enter
loop
add
cmp
push
add
insl
shrb
jmp
sbb
inc
mov
rorb
cmpsb
rcrl
xor
test
mov
shrb
scas
in
inc
outsl
inc
mov
movsb
mov
int3
loop
pusha
xrelease
xchg
ret
and
jecxz
hlt
fmuls
xchg
das
xchg
jne
cmpsb
imul
push
ds
mov
sub
mov
lret
imul
sub
adc
hlt
sub
enter
rorl
lods
sbb
arpl
xlat
push
lret
mov
stos
or
jecxz
pop
sbb
cmp
pusha
mull
in
mov
lock
fwait
cld
push
cmp
mov
or
mov
aaa
or
out
cld
sti
or
test
shrb
bound
sbbb
out
xorb
cmp
aad
stc
mov
lods
xchg
inc
je
rcr
mov
fsubrs
fcomp
scas
cli
in
xor
xor
adc
lea
jbe
aad
add
cmp
in
and
dec
sbb
aaa
dec
adc
or
insl
fcompl
data16
nop
push
adc
aas
push
and
cmp
popf
iret
dec
jg
cmc
lock
popa
xchg
jnp
or
cmp
jnp
mov
arpl
xchg
mull
push
jl
pop
scas
mov
insb
pop
push
loope
jb
adc
ja
xchg
test
ja
jmp
cmc
pusha
stc
jns
xor
lcall
mov
xchg
xchg
xchg
icebp
movsl
icebp
and
fs
pop
jmp
jp
test
pop
hlt
inc
mov
lods
mov
setle
or
and
ljmp
pop
add
stc
xor
push
cwtl
sbb
mov
cmp
lods
ljmp
pushf
cli
aaa
push
adc
sbb
sub
mov
push
shlb
ret
and
pop
scas
push
jge
push
pusha
add
test
push
dec
in
jg
mov
adcl
mov
cmp
popa
stos
jne
cld
push
lret
call
mov
cmp
sbb
repnz
and
cmc
int3
add
rorl
mov
pop
adc
push
dec
cmc
std
ret
xchg
push
sub
ds
jae
sub
enter
sbb
inc
pusha
out
imul
rclb
mov
pushf
dec
lret
xor
and
loope
loop
das
cmp
mov
xor
imul
adc
cmp
int3
sub
xor
push
imul
movsb
cmp
pop
insl
dec
push
cltd
sub
enter
cmc
sti
pop
out
and
pop
rcrl
popf
xor
or
cmp
and
pop
mov
sbb
mov
and
pop
mov
rolb
ret
inc
lcall
or
or
shlb
stos
push
jp
sahf
push
out
lcall
mov
sbb
mov
sub
lods
mov
leave
mov
les
xor
push
insl
les
inc
pushf
stos
fwait
dec
and
or
rcrl
ret
cmp
jae
adc
mov
and
inc
push
cs
adc
loop
xor
jle
out
pop
insl
fistl
xor
jge
mov
lock
movsl
cmp
mov
adc
push
lods
mov
adc
cmp
lods
mov
mov
lret
push
sarb
pop
int3
leave
loope
popf
rcrl
push
ret
ret
xchg
add
mov
ret
adc
seto
cmp
fwait
jl
jge
or
jno
mov
cmovne
adcb
push
inc
out
sub
jne
fstl
sbb
inc
stos
mov
or
shrb
aad
sbbl
pop
aas
data16
movsl
mov
pop
cld
push
mov
les
dec
nop
adc
sbb
cltd
dec
mov
push
popf
movsb
mov
inc
lahf
scas
and
into
lret
shrb
sbb
pop
loopne
xchg
adc
sbb
mov
xchg
dec
testl
loope
dec
inc
xor
or
cmp
aad
lahf
pop
data16
dec
jno
mov
mov
out
jle
and
jle
xor
fildll
mov
in
testl
cmc
mov
pop
jns
pop
cmpsb
jecxz
xor
mov
jg
inc
adc
loope
int
lret
jecxz
inc
xchg
sti
test
iret
push
orb
std
xor
fwait
lods
inc
xchg
pop
xorl
movsb
in
popa
in
test
sub
push
jmp
in
out
mov
stos
mov
seto
jnp
push
mov
push
popf
test
dec
dec
xchg
loopne
cmp
sbb
pop
add
jo
lods
sub
jecxz
or
push
push
int
lret
in
xchg
push
pop
push
mov
das
test
inc
pusha
jl
aam
insl
adc
xor
mov
mov
xor
cld
xchg
or
out
sub
scas
test
ljmp
sti
or
out
loop
sbb
push
push
cld
xchg
sub
mov
shl
das
addr16
scas
jb
std
pop
mov
icebp
jecxz
cmpsb
push
push
lods
gs
xor
test
xor
cmp
scas
jb
pop
hlt
mov
dec
cltd
aad
push
cmp
rclb
pushf
mov
cmpsb
push
nop
sub
inc
lods
mov
cmp
popa
xlat
pop
xchg
inc
mov
mov
lea
push
scas
jmp
fdivr
jp
sbb
sti
mov
lock
mov
popa
push
adc
pushf
xor
xorl
push
enter
lds
movsl
roll
cmp
icebp
push
mov
int3
jl
dec
loop
test
sub
roll
lcall
fwait
inc
iret
push
pop
inc
stc
pushf
and
xchg
pop
add
jb
rcrb
push
mov
xor
mov
push
adc
popf
ds
cltd
std
cs
add
outsl
jnp
loope
data16
gs
sub
push
jne
jge
gs
adc
xchg
mov
push
mov
nop
loop
add
or
cs
leave
and
xor
dec
mov
cmp
dec
sbb
call
insb
xor
popa
pop
lret
cld
jge
and
mov
nop
daa
or
ret
cmp
dec
loopne
clc
pusha
mov
addr16
inc
mov
cmp
jmp
call
mov
lahf
lods
add
cmp
and
pop
nop
mov
jmp
clc
sub
pop
repnz
mov
sub
hlt
dec
fidivrs
loope
xlat
je
lock
clc
sbb
iret
push
xchg
xchg
loopne
lret
push
cmp
cmp
pop
mov
push
mov
int3
push
cmp
ljmp
pop
push
in
sub
inc
sub
sti
scas
dec
int3
and
push
stos
sub
adc
clc
or
mov
xchg
orl
inc
xchg
mov
lret
lret
imul
mov
mov
lret
fcomps
mov
xor
enter
dec
dec
jb
stos
movsb
push
pop
pop
push
xor
mov
lahf
lret
sbb
dec
sbbl
push
jb
push
mov
mov
cmp
mov
bound
rclb
xchg
inc
out
fldcw
pop
jbe
mov
mov
mov
sbb
mov
pop
loop
cwtl
mov
dec
sub
cmp
test
outsb
adc
xchg
ret
add
sbb
leave
sbb
pop
inc
iret
or
arpl
lock
loope
and
out
lcall
fucomi
pop
loop
pop
ljmp
pop
cmp
cmp
dec
divl
xchg
sub
lods
test
xchg
les
push
mov
mov
int
negl
or
mov
pop
cli
iret
aas
adc
mov
adcl
mov
sbb
test
xchg
mov
outsb
sbb
xchg
add
fldl
scas
inc
lds
mov
mov
in
cld
or
lds
dec
test
mov
xor
xchg
std
sub
push
or
jg
push
sahf
mov
dec
data16
scas
cmp
and
xor
cld
ret
sub
je
cmpsb
dec
mov
rclb
sub
ja
sub
movsl
mov
push
mov
cmp
inc
aaa
cmp
in
ja
and
insb
movb
dec
movsl
inc
insl
or
imul
rcll
dec
mov
dec
arpl
add
int
sbb
lods
test
test
out
cmpsl
leave
and
insl
lds
cmovge
sbb
or
pop
jl
jne
cmp
int3
mov
cmp
andb
sbb
sti
pusha
cli
fwait
cwtl
mov
cmp
inc
push
aaa
testb
in
rol
pop
sub
xlat
repnz
inc
stos
dec
cmp
mov
fcomps
call
cmp
pushaw
sbb
fs
mov
add
daa
mov
shlb
popa
loop
cmp
cltd
dec
in
mov
mov
push
fs
loope
clc
adc
or
mov
out
xlat
rcrl
inc
int
cld
dec
dec
cwtl
dec
fs
mov
xchg
sbb
aam
xor
rol
sub
sbb
pop
into
jl
test
xchg
lahf
insl
xor
shl
adc
int3
or
dec
and
sub
test
inc
arpl
pop
into
data16
cmp
ja
inc
mov
inc
jmp
fcompl
xchg
xchg
add
or
test
cli
xchg
add
rcr
jecxz
les
lret
cwtl
sub
cltd
fidivrl
sbb
stos
fsubr
movsb
xchg
std
jb
outsl
jmp
int3
in
fwait
lret
rolb
adc
and
pop
pop
insl
pop
outsl
mov
push
mov
test
adc
loopne
add
pop
fmuls
cld
mov
push
jnp
mov
jns
adc
jns
or
add
repnz
dec
aaa
mov
shrl
add
insl
jb
fimuls
stos
les
pusha
loop
sbb
jle
cmpsl
aas
lret
mov
fcoms
lcall
sahf
sbb
in
xchg
shr
insl
lret
in
lock
mov
aad
std
fsubrs
or
movsl
jno
pop
adc
mov
popl
add
daa
xchg
lods
lods
inc
jl
mov
lock
or
push
shll
xor
ffreep
test
pop
int
fdivrs
dec
aad
daa
or
ja
push
or
mov
les
insb
push
mov
sub
mov
mov
das
mov
cmp
hlt
mov
sti
mov
add
mov
cmc
adc
das
jnp
loope
dec
pop
inc
and
mov
jns
xchg
lcall
aad
sbb
mov
push
ficomps
xchg
sti
inc
push
xor
jmp
outsl
cmp
outsb
pop
in
xor
idivb
mov
cmp
and
pop
xor
ret
gs
ficompl
iret
fnstenv
push
sub
push
xchg
test
xlat
lahf
dec
cs
dec
cmp
mov
movsb
jg
inc
loop
inc
push
jno
cld
cmp
sbb
aaa
push
push
fiadds
into
cmp
jp
cmp
mov
lods
push
mov
int3
dec
sub
jns
mov
xor
mov
cmp
pop
adc
outsb
mov
jge
aam
add
xor
sarl
imul
test
imul
and
pop
lret
outsl
adc
inc
fcompl
xchg
xor
or
std
and
pusha
push
push
inc
cwtl
jae
ret
inc
cltd
testb
sahf
ds
out
xchg
jp
test
mov
xchg
inc
lret
orl
in
add
outsb
inc
std
imul
pushf
or
pop
sub
in
rol
dec
jle
ljmp
xor
enter
sbb
adc
lcall
std
sti
mov
push
xchg
jns
out
mov
sub
lods
sbbl
bound
scas
push
jo
push
repnz
imul
inc
push
jb
fsubp
mov
inc
rol
sub
fisubrs
cli
nop
adc
xlat
stos
pop
cltd
movsb
dec
cwtl
push
lods
pop
lods
arpl
or
or
pop
sub
daa
stc
call
pop
loope
or
icebp
cwtl
mov
int3
out
insl
dec
pop
lahf
or
fwait
jmp
in
mov
addr16
mov
pop
cli
push
jl
sub
dec
pop
mov
jge
rcll
fisttpll
jbe
push
int3
gs
insb
pop
push
mov
lock
and
push
pushf
mov
add
xor
clc
or
ljmp
add
popf
sbbb
js
mov
dec
and
rorl
xchg
or
push
inc
incl
push
add
int3
mov
clc
mov
sub
xchg
into
sbb
dec
outsb
and
fistps
imul
pop
lret
in
sub
dec
dec
scas
jge
jle
push
push
push
mulb
stos
fs
cmp
sub
push
loope
nop
pushf
imul
roll
or
mov
or
aam
out
rorb
adc
xchg
ds
cltd
bound
xor
push
xchg
pop
push
mov
jae
les
rclb
inc
fimuls
fcompl
arpl
xchg
aaa
xor
dec
jg
pop
jno
mov
mov
fists
sub
lods
inc
add
inc
fldcw
std
gs
es
cld
daa
sbb
fs
inc
fwait
lock
xor
sahf
jecxz
imul
add
add
dec
adc
jae
pop
out
in
repz
add
or
ljmp
mov
out
inc
shlb
xchg
inc
je
int
adc
mov
call
negb
inc
lcall
mov
hlt
mov
pop
loop
jns
test
shll
push
sbb
je
or
xchg
out
inc
rcll
or
and
test
or
aam
sbb
repnz
pop
or
mov
ja
ret
inc
test
enter
gs
lahf
testl
dec
cs
pop
imul
jb
and
or
das
das
push
sub
xchg
aad
leave
and
dec
xor
enter
dec
call
push
test
mov
add
movsl
icebp
aaa
fiadds
sub
add
shlb
and
and
adc
mov
dec
xor
push
sub
dec
mov
inc
into
and
mov
mov
lea
inc
xor
fisubrl
cmp
cwtl
inc
push
cli
sbb
cmpsb
push
fwait
or
dec
push
push
mov
xor
ljmp
mov
stos
jmp
jl
scas
jns
out
aas
lcall
jbe
ret
insb
int
adc
add
roll
outsl
push
or
sbb
in
inc
ds
stos
insl
ljmp
movsl
xchg
xor
mov
jb
xchg
call
mov
pusha
int3
jg
or
cmp
pusha
das
call
pop
repz
movb
dec
add
rol
jae
jmp
sub
cmpb
or
push
ds
sahf
in
notl
hlt
inc
inc
xchg
insb
xchg
jge
dec
add
xor
aaa
push
lcall
sub
dec
cmpsl
cmp
or
dec
cmp
hlt
xchg
jmp
mov
mov
or
loop
mov
mov
cld
inc
test
jp
into
sub
lds
notl
sub
int
adc
lods
xchg
push
and
test
adc
bound
std
insb
frstor
sbb
aam
inc
mov
push
out
movsl
add
jp
xchg
pusha
jmp
add
jle
mov
cmp
cmpsl
leave
fimull
cmc
mov
ljmp
lods
das
fidivs
ja
inc
mov
and
xchg
bound
add
pop
or
mov
fidivl
data16
pushf
test
inc
in
push
jle
inc
cmpsl
imul
cmp
sahf
pop
push
out
test
jno
sahf
mov
popa
icebp
adc
aas
push
aad
lcall
sub
xchg
push
sti
jg
ret
mov
xor
fidivl
insb
pop
mov
outsl
sbb
mov
jp
jne
jo
lea
std
pop
lret
imul
pusha
shl
shrb
or
jbe
xor
cltd
inc
push
sti
out
cmp
lods
mov
fbstp
aas
clc
jae
pop
xor
fisttps
push
daa
out
xchg
pushf
jl
out
sbb
das
cmp
pop
pop
inc
push
mov
xor
in
lcall
imul
jo
das
cmp
mov
pop
sbb
dec
push
inc
gs
and
cmp
cmpsl
inc
into
in
stos
dec
out
scas
out
sub
clc
xor
and
mov
or
fs
inc
out
mov
fdiv
sbbb
mov
lahf
jno
and
push
sub
push
pusha
mov
sbb
mov
xor
clc
mov
movsl
clc
out
sub
xor
sub
jo
jns
in
outsb
ret
dec
pop
je
pop
add
out
popa
xor
lret
sub
lret
jb
mov
popa
out
or
mov
es
push
enter
jmp
stos
xchg
mov
in
js
pop
mov
mov
cmp
mov
sbb
sar
jo
dec
xlat
imul
and
sbb
aas
clc
cltd
gs
fxam
sub
lods
pop
and
insl
gs
pop
jmp
testb
push
pop
imul
stos
and
inc
aaa
and
subl
jnp
and
js
cmp
push
mov
insb
sbb
pop
xchg
dec
and
push
mov
movsb
push
andl
pop
jmp
sub
out
xor
ret
cmpb
sub
inc
jp
arpl
nop
jmp
clc
popa
push
dec
ret
cmovle
nop
xlat
shl
cmp
inc
lcall
adc
pop
test
andb
ret
outsb
arpl
fs
lahf
insl
mov
jbe
cmp
cmpsl
js
gs
rolb
and
outsl
in
imul
dec
lea
data16
ss
aaa
outsl
in
cmp
xor
dec
out
cmp
imul
fwait
sti
or
mov
sbb
ficoms
pop
ss
daa
mov
test
dec
push
pop
jg
sub
add
xchg
pop
mov
dec
cmpsl
lret
scas
sub
inc
shrl
mov
out
and
xor
aam
or
mov
xchg
pop
rorl
divl
pop
pop
adc
in
in
jle
mov
adc
mov
mov
inc
push
ret
paddsw
pop
sbb
fucom
pusha
sub
sbb
cmp
inc
mov
jecxz
pusha
dec
in
or
aad
lea
cli
and
sbb
jb
shlb
jge
pop
jo
pop
pop
cmp
ret
or
sbb
repz
or
pop
hlt
mov
idivl
movsb
push
rcr
das
rol
out
repz
xchg
and
ret
cmpsl
js
scas
test
lahf
stos
jmp
dec
or
jmp
fwait
cmpsl
dec
mov
push
ldmxcsr
sbb
or
sbb
outsl
je
lods
or
cmp
mov
mov
push
adc
xor
mov
inc
sub
push
xor
push
movsb
jnp
fs
int3
inc
add
or
imul
push
popf
xchg
pop
push
aad
cld
popf
bound
in
cwtl
fisubl
sahf
ss
push
push
or
lret
enter
sahf
sub
loopne
cmp
fcomps
int
adc
ljmp
inc
pop
mov
mov
ret
shrb
push
shlb
fwait
clc
jmp
cld
xchg
add
imul
sub
outsl
bound
imul
lret
inc
pusha
into
inc
or
call
mov
test
lods
mov
dec
sub
sbb
cmp
sbb
pop
xchg
out
lret
cmp
push
sub
mov
mov
mov
adc
inc
daa
pop
jae
ds
mov
mov
sub
pop
mov
dec
push
xor
pop
jmp
cmp
pop
jp
fcoms
pop
data16
rol
mov
pusha
jle
adc
mov
in
mov
sub
repz
sbb
mov
lds
incl
fs
adc
add
pop
loope
in
push
push
popa
movsb
inc
mov
inc
es
jmp
cmpsl
cli
cmpsl
xlat
add
dec
inc
test
dec
jecxz
xchg
sbb
and
fisttpl
inc
fdivl
pop
push
js
movsl
lock
pop
es
xchg
outsl
or
push
dec
mov
adc
add
imul
sbb
call
jbe
clc
push
sub
adc
jmp
push
jbe
sub
lea
mov
lahf
mov
lea
imul
ja
jbe
add
push
pusha
xor
call
jg
inc
dec
fmuls
sub
add
mov
icebp
adc
insb
fnstsw
iret
and
aam
gs
push
repz
mov
and
dec
lret
js
inc
cmpsb
stc
icebp
imul
and
push
loopne
push
out
call
mov
dec
cs
cwtl
outsb
push
les
push
repnz
testb
stos
in
fidivrs
mulb
or
inc
and
insl
mov
cmp
xor
xchg
sub
aad
rolb
xor
cs
cmp
sbb
ss
les
ss
inc
sbb
cmp
enter
lds
es
mov
jp
sysret
add
jne
and
orl
mov
mov
cmp
xchg
add
sub
mov
sarb
and
adc
push
add
inc
addl
pop
mov
jne
mov
cmp
cmp
push
dec
mov
sbbl
sti
xchg
mov
xor
xor
popf
loop
shrb
adc
and
stos
mov
es
dec
loop
inc
mov
cmp
add
fidivrs
loop
call
mov
jns
pushf
xor
test
lods
dec
adc
into
enter
pop
inc
push
jne
es
push
push
jne
imul
push
mov
xchg
in
outsb
pop
ja
mov
int3
mov
inc
sub
and
jge
dec
pop
popa
lods
mov
in
andb
sbb
lret
cmp
push
sbb
leave
jge
mov
xchg
push
push
cld
cmpsl
subl
movsl
enter
lock
rcl
add
xchg
mov
dec
ret
ret
xor
inc
stos
push
xchg
les
mov
fimull
out
vmovsldup
add
testl
add
movsl
cmp
xor
push
testl
xlat
xor
cvtps2pi
mov
imul
mov
add
pop
sub
sbb
mov
mov
ret
mov
and
cmp
pop
mov
jge
sbb
pop
and
cmp
arpl
adc
in
imul
jle
hlt
sub
or
pop
fistl
mov
adc
int3
mov
add
adc
push
call
ja
in
cmp
jle
xor
cwtl
add
lret
loop
sub
arpl
cmp
fldcw
adcb
pop
mov
insb
mov
fimull
push
and
sbb
cmpsb
ja
mov
cmp
cmp
insl
rcrl
mov
into
mov
push
in
inc
xlat
mov
sbbl
jge
add
sub
data16
push
or
je
and
dec
add
xchg
xor
adc
fidivrs
arpl
adc
mov
sub
cmp
push
mov
inc
faddl
cmpsb
xor
ja
cmp
adc
dec
sar
add
mov
lret
adc
cmp
in
jae
shrb
mov
push
adc
jno
jecxz
movsl
adc
fwait
outsb
in
mov
ljmp
jno
cli
pop
push
pop
fdivl
lea
mov
cmp
push
cwtl
pop
cmp
lret
fsubs
xchg
add
add
cmc
mov
sti
dec
mov
cmpb
orl
pop
push
inc
flds
ds
cmp
push
iret
enter
and
andb
nop
mov
clc
or
jle
push
imul
jge
mov
cmp
mov
out
lods
fisttpl
xchg
cmpsb
mov
ds
in
cmc
mov
nop
hlt
mov
jbe
clc
pop
adc
add
adc
or
add
mov
scas
jne
xchg
scas
adc
mov
pop
push
adc
aad
add
les
aam
loope
xchg
stos
adc
and
inc
push
sub
mov
divb
in
adc
mov
repz
sbb
add
add
out
cld
dec
sub
fs
sarl
inc
adc
lret
add
mov
jecxz
mov
dec
cmp
out
out
push
xor
push
cmp
std
add
and
cmp
add
fmulp
gs
cmpsb
inc
arpl
dec
sub
imul
push
and
and
dec
jns
jbe
loopne
inc
mov
push
push
ds
cmp
adc
xchg
out
pop
dec
ljmp
ljmp
xchg
cmp
stos
dec
arpl
gs
adc
in
or
push
cmp
mov
cmp
rcll
xchg
out
call
inc
stos
rcr
mov
mov
push
pop
stos
sub
in
iret
in
inc
lds
mov
jle
vandnps
xor
test
sub
cmp
imul
xchg
add
nop
cwtl
fnstenv
inc
flds
fldl
sub
repz
sub
sub
jg
call
sub
lock
dec
sbb
movsl
jp
sbb
push
xchg
rcl
pop
das
rolb
lock
out
loopne
push
push
lods
ud2
mov
mov
outsl
daa
or
dec
arpl
in
sub
xchg
add
rol
jecxz
mov
push
cltd
std
and
push
stos
loopne
push
int
sub
pop
add
ljmp
mov
pop
or
mov
mov
lods
jnp
mov
int
dec
fwait
jne
or
lcall
push
je
rorl
fisttpll
cwtl
out
push
faddl
decl
repz
mov
mov
loopne
push
add
movsl
gs
jg
mov
or
sbb
pop
mov
fcmovne
fwait
idivb
negl
mov
jp
or
fstpt
sub
nop
or
jno
sbb
stc
adc
jbe
lret
jne
cs
rolb
mov
out
test
out
inc
leave
xchg
out
jnp
and
fbld
lods
pushf
sti
xor
jmp
aad
shl
inc
sbb
jle
js
test
ficompl
xorl
pop
push
int
rcr
and
add
sub
push
lock
out
adc
arpl
cmc
lret
insb
into
bound
or
xorb
fdivrl
xchg
div
lods
es
add
jne
loopne
xor
in
sbb
nop
push
stos
pop
jle
or
pop
outsl
mov
or
inc
fs
push
push
xor
mov
dec
cltd
jo
rorl
xor
shl
mov
fwait
out
jle
ds
inc
loop
cmc
or
in
cmpsb
lahf
nop
test
jp
call
pop
add
sub
xor
cli
insl
fiaddl
fcmove
dec
int3
jns
jecxz
imul
and
lret
push
incl
mov
adc
int
outsl
daa
or
or
iret
push
dec
data16
fs
pop
or
inc
rclb
fs
lods
pop
mov
out
orb
cmp
out
iret
dec
adc
jns
jg
mov
jecxz
sub
mov
jnp
lods
cmp
pop
pop
push
repnz
push
jmp
aad
xor
dec
xchg
pop
jg
xor
das
mov
pop
sub
mov
jnp
arpl
pop
sub
adcl
cmp
sbb
add
ret
push
je
cmp
dec
jecxz
add
out
scas
sub
int3
les
xor
add
jae
adc
fisubl
mov
mov
adc
js
sbb
jecxz
sbb
movsl
push
xchg
push
inc
imul
arpl
ljmp
mov
mov
mov
ds
scas
ds
movsl
xchg
rcrb
in
repz
push
lret
lret
fmul
adc
cld
cmp
fldt
dec
push
ja
gs
rcrb
cltd
mov
xchg
xchg
lret
je
cmpsl
push
xor
pop
mov
popl
jl
and
mov
sub
pop
xor
pop
xchg
jecxz
sbb
out
inc
pop
add
icebp
mov
cmpsb
mov
in
inc
xchg
in
xor
sahf
jb
dec
add
sbb
incb
and
adc
orl
adc
or
cltd
ja
sbb
cltd
test
and
jae
enter
repz
nop
cmc
inc
in
bound
add
out
add
pop
sbb
cmp
mov
in
mov
push
sub
pop
jecxz
sbb
out
mov
das
loop
fstpl
cld
leave
pop
xor
dec
outsb
or
inc
push
pop
cwtl
test
mov
sub
aad
and
push
dec
fisubrl
jb
mov
pop
lea
push
lret
or
mov
scas
mov
and
mov
adc
and
xor
cmc
cmc
mov
or
icebp
js
mov
test
mov
pop
jmp
movsb
popf
stc
nop
inc
mov
xor
and
xchg
mov
adc
cld
mov
add
arpl
sub
inc
mov
test
daa
lcall
stos
fsubrs
pop
les
les
cs
mov
les
orl
mov
fadds
pop
lea
sahf
mov
fwait
xchg
pop
inc
mov
rcrl
fwait
out
in
sbb
stc
dec
test
ror
into
movsb
shl
lods
mov
rcl
cs
loop
stc
mov
hlt
xchg
out
and
hlt
subb
das
iret
bound
outsb
jl
mov
sub
push
inc
or
nop
add
mulb
mov
out
add
out
add
adc
add
jb
adc
call
and
outsl
into
fiadds
outsl
pop
ljmp
ret
jae
scas
mov
pop
or
ljmp
pop
xchg
mov
clc
sbbl
sbbb
fsubrs
dec
lahf
mov
imul
repnz
xchg
pop
fwait
mov
xor
xchg
xchg
subb
xor
add
daa
ret
loop
push
pop
shr
push
mov
xlat
jb
mov
jp
or
sub
xor
cmpb
sub
xchg
js
lret
xor
testl
scas
or
test
add
stos
aad
pusha
jecxz
inc
xchg
xchg
mov
addr16
and
cs
in
mov
cmpsl
popf
xchg
add
in
sub
dec
scas
idiv
inc
pop
push
xchg
jne
inc
adc
fidivl
popf
mov
mov
xlat
jle
and
sub
clc
jp
inc
ljmp
inc
xor
xlat
scas
mov
pop
push
mov
jnp
push
sub
mov
out
sub
mov
out
jb
int3
xchg
cwtl
fwait
jbe
pop
gs
out
jne
setae
mov
loopne
jbe
inc
or
push
shrl
test
call
movsl
dec
movsb
sti
cld
ret
jb
pop
sub
popa
pop
bound
jge
lea
in
pop
outsl
cmp
fbstp
jnp
mov
or
decb
pop
cmc
sahf
xchg
jae
incb
adcb
jl
imul
lcall
imul
inc
clc
sub
xchg
cld
stos
mov
rcl
pushf
ss
lret
cmc
dec
fists
shlb
rcr
dec
loop
outsl
cmpsl
push
in
arpl
sub
cmp
mov
xor
adc
in
insb
call
and
or
cmpsb
mov
xchg
cmpb
jbe
push
mov
pusha
enter
jns
jo
jle
sti
lock
int
scas
into
mov
jno
and
xchg
fcmovnb
popa
stc
loope
fwait
cmpsl
hlt
dec
add
cmc
sbb
add
sbbb
cld
and
mov
js
add
mov
in
lret
aad
jle
popa
push
out
xchg
jmp
cmp
cwtl
fstpt
stc
lret
xor
lret
and
sbbb
jae
ficoml
dec
mov
testl
int
ja
mov
sbb
lds
xchg
mov
xchg
fnstenv
clc
jmp
add
push
clc
subb
sar
mov
inc
jno
sarl
orb
push
sub
inc
push
in
jae
mov
or
adc
xchg
dec
xchg
sub
sub
pop
clc
addr16
push
push
xlat
fbld
push
pop
loop
aam
addr16
bound
jl
out
test
adc
push
cmpsb
ds
add
xlat
imul
out
and
sub
jl
add
xlat
xchg
lcall
ljmp
mov
aam
movsl
or
jp
inc
addr16
adc
sub
in
xchg
and
adcb
stos
sbb
jle
mov
addr16
pop
pop
lcall
cmpsb
cmp
shlb
inc
fimull
test
dec
mov
ja
push
es
jae
aas
leave
pusha
jo
jge
sbbb
xchg
movsb
lods
mov
and
dec
enter
in
adcl
lock
pop
repnz
into
call
xchg
testb
xchg
sub
sub
fnsave
xchg
mov
mov
call
xchg
jns
lea
gs
jns
or
adcb
xor
jnp
std
mov
xor
movsb
pusha
sub
pushf
test
fsubrp
aaa
mull
scas
push
outsl
add
incb
es
fistl
mov
adc
pop
or
lret
xchg
movsb
repz
pop
js
push
push
jns
pop
inc
fldt
repnz
pop
mov
sbb
popf
or
jne
add
add
pop
adc
shrb
add
cmc
mov
or
fistpll
push
push
mov
ret
insl
dec
scas
adc
loope
xchg
sbb
insl
fwait
lret
mov
rcrb
mov
and
push
ret
icebp
inc
aam
jno
push
ljmp
sbb
test
adc
je
ret
pop
outsb
cmpsb
shlb
sub
cltd
sub
les
iret
sqrtps
imul
sub
rcll
pop
pop
sub
cld
cmpsb
mov
push
movsl
inc
ljmp
sbb
enter
jmp
aad
jne
cmp
xchg
insb
or
cmp
and
arpl
inc
es
xor
cmp
int3
push
jnp
mov
jp
xchg
mov
inc
mov
cmp
scas
push
adc
jge
das
and
pop
lret
repz
gs
orl
dec
in
into
mov
rorb
inc
jmp
push
lock
push
cli
xchg
mov
shrl
scas
sbb
and
jo
mov
push
xor
addr16
ja
repnz
outsb
cld
inc
push
jp
fidivrs
popl
xor
jb
loop
adc
pop
sub
sbb
lock
js
xchg
cwtl
lahf
mov
xchg
stos
jg
cwtl
jnp
adc
rorl
jno,pn
movsb
sbb
mov
adc
mov
movsl
lock
mov
pop
xor
sbb
das
ret
inc
push
fldl
mov
and
push
fnstsw
std
stos
inc
push
fwait
mov
pusha
cmpsb
adc
cmp
outsl
adcl
or
lds
xchg
rcr
int3
mov
jp
movsb
push
jne
sbb
push
pop
andl
adc
movsb
mov
arpl
sub
in
ja
jl
lret
pop
pop
jle
add
sbb
mov
mov
ljmp
in
test
sti
addl
sbb
repnz
les
mov
jp
repnz
lret
enter
cmp
mov
jle
fidivl
dec
in
dec
dec
dec
add
addl
dec
sub
pop
fxch
rol
xor
rcl
out
lea
dec
push
push
dec
sbb
jecxz
xor
bound
outsb
test
dec
inc
push
repz
rolb
cli
aas
or
mov
cmp
shll
add
cmp
fldenv
fnsave
add
repnz
sarb
inc
push
cmpsb
imul
repz
or
mov
mov
bound
sbb
inc
nop
jmp
xor
and
jbe
nop
enter
ss
cwtl
dec
sub
pop
inc
orb
push
xchg
imul
mov
cmc
stos
lods
lods
jae
push
mov
dec
inc
sti
hlt
dec
ds
call
lahf
adc
sbb
lock
stos
xor
movb
mov
arpl
mov
and
das
or
jle
xchg
mov
std
pop
stc
add
fs
push
sub
cli
xchg
jge
mov
out
sbb
aas
xor
dec
jns
mov
push
mov
inc
repnz
fdivrs
dec
dec
xlat
jg
stos
pop
jnp
arpl
clc
cmp
clc
and
cmp
ds
and
jns
dec
ja
repz
loope
mov
das
xchg
cmp
add
mov
ret
jae
dec
add
sbb
adc
pop
add
mov
icebp
in
stos
xchg
das
xchg
jns
xor
pusha
xor
add
push
jb
pop
mov
pushf
cli
push
fsubrp
sbb
mov
or
leave
push
movsl
js
mov
mov
sahf
mov
ljmp
pop
rcll
xchg
xchg
inc
mov
stos
push
add
lahf
xor
sbb
push
jmp
jle
push
jno
scas
sub
outsb
sub
adc
cmp
imul
xor
xor
imul
dec
lret
mov
push
bound
pop
jp
push
xor
hlt
dec
dec
ret
imul
cmp
or
cmp
shrl
movsb
jp
add
fsubrp
pop
jmp
ss
add
insl
sub
fldenv
xorb
std
sahf
je
inc
xchg
out
mov
icebp
inc
aas
std
fbld
mov
inc
lret
rclb
mov
loop
pusha
sbb
sbb
sbb
mov
or
pusha
leave
int3
lret
shlb
js
ret
xor
daa
adc
cmp
aam
cmp
in
out
mov
lds
cmpsb
mov
dec
ljmp
lahf
fbstp
aaa
aad
imul
sbb
ficoms
mov
adc
xor
xchg
sub
aad
mov
repz
pop
cmp
dec
sbb
sub
dec
pop
sti
divb
push
sahf
icebp
jbe
fwait
mov
inc
lret
xor
fs
cmp
or
inc
daa
sub
adcb
inc
push
xchg
inc
icebp
adc
xor
xor
mov
icebp
or
negb
jge
sahf
cmc
adc
or
call
jae
dec
xchg
xchg
push
fnstenv
fisubrs
jne
jbe
in
test
lods
nop
test
lret
cmpsb
hlt
aaa
pusha
sbbb
out
jge
aad
add
es
cmp
cmpsl
xchg
sub
aas
sti
into
jo
in
mov
fisttpll
jmp
ljmp
sbb
into
in
sub
jle
jle
jecxz
fisubrs
push
jecxz
aaa
push
fs
xor
push
sub
inc
xchg
popa
enter
es
sub
mov
cmp
imul
pushf
mov
jo
dec
fcmovnbe
testb
push
setle
in
nop
sub
fdiv
xchg
xor
repz
sub
iret
cltd
test
clc
mov
inc
js
sbb
ret
rcll
cmp
insl
shr
jecxz
adc
jne
gs
shrb
sbb
inc
sub
dec
enter
lock
ljmp
or
dec
mov
lcall
adc
mull
ret
je
jl
std
mov
fcmovb
scas
mov
movsl
xchg
inc
arpl
add
ljmp
test
sbb
ret
sti
sub
pop
in
test
sub
pop
dec
ret
mov
lock
pop
and
xchg
pop
int3
in
sub
call
or
sahf
mov
pop
pop
mov
into
in
cltd
adc
loop,pt
pop
inc
mov
jns
lret
fs
lcall
fucom
in
test
call
roll
mov
push
jp
adc
mov
xor
xor
stc
test
out
xchg
push
jmp
gs
jo
lahf
xchg
pop
add
outsb
add
fcmovnb
mov
jbe
loope
mov
stc
nop
pusha
pop
adc
jno
dec
gs
cmp
xor
xor
stos
mov
dec
inc
and
push
loopne
xchg
loop
enter
stc
aad
outsl
pop
sbb
xchg
pop
out
int3
arpl
jp
aad
mov
rclb
adc
and
inc
jbe
cmpsl
fs
test
fimull
xchg
scas
fs
push
cs
pop
popf
jp
fidivl
jecxz
aas
out
clc
mov
roll
pushf
mov
cmpsl
mov
jecxz
divl
popf
xchg
outsb
mov
and
cmc
dec
cmpsb
cld
xor
lock
in
cld
dec
and
faddl
mov
cli
mov
dec
cmpsb
rcr
pop
lods
lret
int3
push
pusha
lods
ljmp
xchg
insl
fldl
cmp
sahf
mov
test
jg
or
dec
sbb
aas
je
sbb
push
fbstp
sbbb
cmp
push
pop
and
hlt
pop
mov
mov
push
jge
pop
repnz
sahf
push
and
jns
mov
insl
and
inc
insl
lods
inc
lahf
scas
lcall
mov
push
inc
and
sbb
mov
adc
xchg
sub
xor
orl
fidivl
scas
cmp
mov
cmp
arpl
int3
dec
dec
loop
in
jg
push
fiaddl
dec
rorb
push
pop
repz
fcmovu
jecxz
add
cli
inc
add
xor
in
cmpsb
ds
fmull
cltd
jbe
sub
inc
test
ret
pop
xor
out
repnz
fidivs
inc
mov
sub
test
pop
imul
dec
mov
imul
ljmp
loop
lcall
jge
sarb
pusha
xor
leave
nop
loop
mulb
jbe
sahf
xchg
pop
test
mov
sbb
stos
cltd
std
test
mov
jo
sub
fstl
mov
mov
sub
es
loopne
mov
lds
out
xchg
mov
mov
jecxz
xor
sub
mov
lock
adc
and
push
jo
mov
xor
sub
gs
aaa
fistl
jmp
loop
pop
xlat
cmp
fwait
movsl
mov
mov
add
jle
push
dec
push
ret
mov
mov
mov
add
fldl
int
sub
push
jle
xchg
cmp
fwait
push
xor
addr16
fcompl
cmp
lret
cltd
inc
into
lea
adc
lret
mov
adc
faddl
es
out
adc
inc
int3
ss
stc
mov
test
loopne
inc
xor
clc
data16
mov
xor
clc
lea
aaa
pop
jne
cmp
lret
lds
gs
push
shll
dec
cmp
xor
mov
hlt
das
aas
push
sbb
pop
scas
lret
sub
xor
pop
jge
mov
ret
cld
mov
jg
pusha
repnz
or
push
fbld
jb
add
xor
popf
sub
std
int3
inc
call
aam
mov
add
addl
test
mov
sbb
xor
lock
mov
mov
mov
mov
mov
pop
cmp
or
test
pop
push
cli
push
xor
int3
lds
inc
call
cmp
and
out
insl
inc
and
jbe
cld
dec
mov
sbb
fisubl
je
fsubrl
or
sti
dec
mov
out
fiaddl
xor
sub
or
xor
imul
fnstcw
dec
jecxz
aad
sub
cmc
out
shrl
sub
dec
addr16
lea
jg
cmp
lcall
pop
std
negb
fidivs
cwtl
dec
in
movsb
rcr
mov
inc
insl
out
and
loope
out
stos
inc
ja
sti
xchg
adc
and
popf
jg
fwait
sub
lahf
jno
dec
sbb
inc
mov
xor
notb
les
popf
imul
shr
aas
cmp
jg
js
mov
pop
inc
push
shlb
jae
lcall
sbb
xchg
pop
rclb
jecxz
aas
decb
sti
jecxz
mov
add
sub
xchg
aam
mov
adc
orl
lret
xlat
mov
leave
sub
ds
sub
test
cmpsl
stc
outsl
ret
mov
dec
pop
dec
dec
adcl
jge
insl
mov
push
popf
sub
pushf
nop
push
cmpsb
aaa
lods
movsl
jbe
fistps
inc
mov
lock
pop
outsb
movl
xor
aaa
pushf
in
dec
pop
js
and
mov
lahf
ss
sti
pop
xor
push
sbb
fs
inc
or
jno
cmp
adc
ret
jecxz
xlat
movsb
dec
aad
movsb
cmp
jo
rorb
xor
jmp
cmovl
mov
rcr
das
mov
pushf
and
pop
push
mov
and
cmp
xor
jle
jl
in
dec
sbb
mov
mov
and
mov
adcb
sbb
repnz
pop
das
addr16
cmp
mov
sub
test
cli
add
shll
lods
inc
pop
mov
mov
mov
mov
shll
mov
dec
inc
in
cmp
ud1
arpl
mov
mov
inc
push
mov
icebp
adc
cmc
pop
or
cli
popa
mov
mov
scas
shlb
subl
xchg
rorb
push
or
and
mov
sbb
loop
std
jo
push
out
push
nop
repz
inc
popa
andl
jb
loop
pop
mov
xlat
and
and
out
dec
dec
push
cmp
cmpb
pop
push
mov
push
push
hlt
out
std
gs
or
enter
sbb
test
je
xor
sub
aaa
ds
sbb
out
je
mov
mov
mov
lahf
popa
into
and
pop
popf
jb
stos
mov
dec
mov
sarl
or
popf
xchg
xor
jmp
jmp
xor
inc
test
fistl
adc
sbb
bound
pop
jnp
pop
int
adc
or
xchg
test
loopnew
mov
inc
scas
mov
mov
sbb
or
pop
repnz
xor
xchg
xchg
or
mov
les
lahf
into
jl
imul
inc
pushaw
popa
xor
ss
aam
sbb
mov
in
or
mov
push
cli
mov
push
ret
and
xor
or
aad
movsb
fst
cmp
rcll
xchg
mov
xor
add
fcoms
sti
in
test
cld
cmp
test
mov
xchg
jge
fdivl
inc
sbb
xlat
or
sub
mov
js
and
call
repnz
pop
mov
in
or
or
pop
jo
repnz
jno
and
cmp
sub
cmp
jp
daa
imull
ljmp
inc
mov
xor
mov
stc
dec
sbb
add
das
and
push
shlb
lret
lret
lahf
lock
test
lret
and
sub
aad
dec
add
imul
dec
jecxz
sbb
loopne
and
xchg
out
repz
add
fldcw
roll
aaa
imul
dec
mov
jb
f2xm1
int
mov
ja
test
jecxz
mul
iret
arpl
fldt
leave
cltd
adc
shrl
scas
hlt
and
cltd
cwtl
pusha
cmpsl
jbe
mov
sbb
js
stos
pushf
cli
xchg
orl
aaa
push
pop
loopne
cmp
nop
cmc
xor
hlt
cmp
jnp
inc
pop
inc
xlat
daa
mov
push
sysenter
insb
add
mov
idivl
xchg
lods
mov
mov
fucomp
and
outsl
getsec
jmp
es
loopne
pop
popf
mov
cwtl
sarb
add
pop
add
fwait
inc
das
adc
jmp
add
fsubs
mov
xchg
mov
sbb
jle
popa
jae
test
push
fildl
lds
mov
or
pop
pop
filds
and
popf
jecxz
or
movsb
mov
enter
stos
xor
jmp
add
sub
pop
push
mov
push
xorb
cmp
popf
insb
xchg
popf
lds
cmp
std
cs
cmp
sarb
fldl2t
fsubrs
ss
idivl
xchg
mov
lahf
rolb
pop
mov
mov
dec
daa
clc
test
sbb
adc
sbbl
push
sbb
leave
dec
xchg
xchg
pop
idivb
xchg
sub
inc
mov
bnd
inc
pop
pushf
mov
dec
dec
cmp
mov
int
or
push
cs
mov
push
lds
mov
fadds
or
jno
inc
xchg
xchg
inc
sbb
xor
shl
lcall
std
xor
int
sbb
sti
inc
ss
repnz
or
mov
cmp
ret
xchg
cs
or
mov
in
test
nop
push
jge
adc
fs
pop
pop
pushl
pop
xor
pop
sti
adc
out
scas
inc
lcall
xorl
push
clc
inc
cltd
add
fprem1
pop
aad
mov
enter
mull
jb
jg
xor
xor
dec
bound
or
sarb
push
mov
loop
cld
push
out
mov
and
mov
mov
dec
icebp
pop
inc
pop
mov
jle
jae
xchg
pop
ljmp
in
xlat
adc
inc
loop
movsl
jae
and
fisttps
loope
inc
jecxz
mov
inc
add
jns
xor
cli
xchg
mov
xchg
out
jne
sbb
add
icebp
dec
fidivl
pop
add
fsubrs
outsb
jo
mov
mov
cs
xor
lea
je
fs
arpl
jle
cwtl
dec
add
mov
cmp
pop
mov
gs
aaa
cwtl
xchg
mov
addr16
stos
mov
ss
xchg
outsb
jl
in
push
test
ret
cmpsb
mov
sbb
push
mov
fwait
mov
push
push
xor
stc
ss
andl
inc
fs
outsb
cmp
pop
das
mov
fcoms
lea
xor
mov
fidivl
xor
mov
pop
out
test
lret
add
js
rcrl
icebp
aad
cwtl
xrelease
in
mov
in
loop
xchg
xor
sub
xor
cmp
mov
mov
ret
mov
ds
popa
clc
xor
pop
jg
stc
mov
xor
fidivrl
or
mov
mov
addr16
jle
dec
lods
rcl
lock
lods
lea
xchg
inc
push
out
andl
sbb
pop
or
stos
cmp
fidivs
mov
cltd
sti
jle
push
inc
jne
int
out
repnz
inc
mov
pop
lds
push
mov
push
mov
sbb
and
push
repnz
mov
dec
rcrl
jle
andb
std
push
inc
loop
mov
popf
ljmp
fmulp
loopne
sbb
and
add
pop
xchg
jb
pop
mov
sti
call
or
fmull
jb
fcoml
sub
pop
dec
xor
stos
popa
ret
sbb
hlt
sub
push
scas
lds
rorb
lods
add
pop
shlb
test
outsb
mov
xchg
bound
and
dec
in
adc
mov
cltd
call
data16
lret
inc
pop
mov
daa
popl
fidivs
adc
insl
mov
pop
pop
cmpsl
das
clc
pop
add
lds
adc
das
dec
dec
fisubs
test
jnp
gs
pushf
les
pop
imul
ret
movsl
push
test
push
imulb
int3
popa
ret
sbb
adc
or
icebp
call
and
sub
inc
pushf
xchg
out
ret
cmp
pop
cmp
addr16
cs
xor
adc
jle
popa
add
push
sti
jl
enter
xor
jbe
pop
cmpsb
nop
in
dec
in
ret
jecxz
fdivl
mov
push
add
xor
fsubl
jno,pt
ficomps
and
jmp
and
xor
arpl
push
out
repnz
fcoms
jne
add
and
mull
pop
sub
add
adc
xor
cs
data16
out
or
fdivl
xor
push
ds
mov
scas
clc
insl
rorb
mov
enter
add
fldl
es
jmp
cmpsl
outsb
jo
xchg
fiadds
adc
push
jge
gs
bound
mov
xor
adc
fstpt
dec
or
mov
mov
out
pop
out
loope
js
gs
pop
sbb
jne
int3
bound
lds
out
xor
mov
pop
xlat
inc
les
int3
scas
into
fsub
in
dec
jae
mov
cmp
mov
out
cmp
sub
mov
mov
repnz
push
mov
loopne
scas
cs
mov
icebp
pop
test
ret
mov
dec
push
out
sti
mov
filds
mov
fldt
sub
lahf
lcall
out
and
loopne
lods
cmpsl
xlat
shr
out
mov
shl
cmpsl
or
xchg
add
repnz
pop
jns
mov
mov
xchg
adc
push
sti
jmp
lcall
movsb
mov
aad
mov
inc
std
out
and
mov
call
das
sbb
arpl
aam
sub
inc
cmp
cmp
or
sbb
mov
mov
mov
mov
fmull
in
std
incb
inc
or
ds
cmp
pusha
dec
pop
lock
loopne
vpmaddwd
xchg
popa
clc
leave
repnz
nop
fs
push
xchg
mov
sbb
sub
int
adc
cmp
shl
es
lahf
pop
pushf
inc
lcall
sub
fbstp
movsl
cmp
aam
cmp
clc
jno
dec
sub
sti
orps
scas
jg
addr16
cmp
imul
mov
sub
adc
mov
cmpsl
or
aam
pop
push
lahf
js
adc
sahf
outsl
mov
push
ficoms
je
mov
insl
icebp
pop
iret
aas
jg
mov
fs
ret
in
sti
inc
mov
xchg
or
mov
or
add
enter
cmp
dec
mov
mov
fwait
jge
and
mov
sub
mov
add
pop
xor
push
xor
ja
fs
data16
jle
dec
enter
inc
jmp
popf
mov
jle
negl
cmp
sub
in
fiaddl
cmc
in
mov
inc
faddl
fildll
out
ds
sbb
mov
daa
leave
cmpsb
cltd
outsl
xchg
inc
clc
push
sti
mov
or
xchg
rcrb
ret
enter
xor
andl
mov
js
jmp
cmc
aad
adc
stc
int3
test
int
insl
and
xchg
mov
fdiv
repnz
jl
adc
lea
mov
inc
insl
icebp
stc
xchg
inc
or
sbb
mov
dec
xchg
stos
inc
sub
cmp
scas
pop
cmp
mov
in
stos
mov
pusha
out
sub
test
lret
dec
fstl
xor
ret
push
int3
mull
push
push
repnz
xchg
das
stos
adc
out
pop
in
jae
or
ret
test
pop
mov
sbb
loopne
fiadds
std
jnp
jl
mov
inc
pop
inc
mov
pop
in
lcall
out
std
xchg
mov
negb
jmp
pop
cltd
dec
add
pop
inc
push
lcall
stos
lahf
out
rclb
sbb
jbe
stos
movsb
fisubrs
adc
xor
scas
xchg
xchg
ret
iret
dec
pop
not
fidivl
mov
push
lret
and
dec
aam
outsl
jno
pop
xchg
sub
addr16
stos
inc
or
push
je
xchg
xlat
outsb
ret
pop
in
jbe
ljmp
mov
jl
cmpl
lcall
and
decl
inc
xlat
aas
sbb
pop
dec
stos
pop
rcr
sub
fldt
push
cld
push
jmp
sub
lahf
mov
aaa
mov
adc
int
and
pop
out
xchg
ljmp
dec
sbb
add
fidivl
out
sti
cli
cwtl
xlat
outsb
sarb
mov
notb
scas
aas
ljmp
insb
mov
int
icebp
fucomip
xchg
or
dec
or
adc
xchg
mov
mov
minps
push
stos
insb
sbb
mov
lods
pop
cmp
in
jnp
fisubs
stos
lds
sub
scas
add
enter
push
and
test
dec
pushl
fidivrs
rorb
xor
mov
jo
and
sbb
ret
xchg
in
into
popa
pop
jb
in
divl
je
sahf
add
pusha
mov
lock
adc
xchg
xor
movsb
xor
stos
mov
push
or
pushf
add
add
pop
mov
popf
out
adc
jle
cmpsl
rcrl
xchg
sub
mov
push
push
aam
mov
pop
or
mov
push
enter
in
sbb
lret
push
push
mov
xchg
shrl
or
sub
fmuls
push
xor
push
std
or
dec
lret
scas
mov
testl
xchg
or
cltd
gs
sub
fnstcw
add
lret
sub
mov
push
test
repz
call
test
sub
lcall
sbb
mov
mov
cld
lods
nop
hlt
ror
or
cmpsb
int
sub
xchg
pop
enter
cmc
sbb
pop
jae
jnp
addb
sbb
mov
pop
insb
xchg
xchg
pop
clc
inc
repz
inc
fcmovnu
push
dec
mov
jle
in
pop
jae
inc
ja
dec
stos
push
cltd
cmpsb
push
pop
cld
inc
outsl
push
cmpsl
adc
mov
fcmove
mov
mov
mov
outsl
sti
pop
fsubp
push
xchg
test
push
mov
fnstenv
aad
inc
add
dec
test
mov
inc
cltd
inc
sbb
xor
pushf
arpl
test
insl
jg
adc
cmp
mov
and
ret
adc
iret
daa
popa
sub
lcall
push
mov
jge
addr16
in
sti
adc
mov
push
out
verw
movsl
cs
shrb
loop
cs
jae
lock
adc
jg
test
sahf
mov
andb
lock
jge
xor
jl
into
dec
lds
in
jecxz
cli
inc
cltd
mov
xchg
push
xchg
cltd
clc
dec
sbb
xchg
mov
clc
mov
ja
and
popf
push
xorb
cmpsl
insl
pop
sub
mov
push
xchg
jns
adc
xchg
dec
ret
cld
sub
aad
cwtl
mov
outsb
into
loope
test
movsl
insb
sbb
add
insb
cmc
xor
sub
dec
or
mov
mov
loopne
rcrb
jns
aad
mov
out
loop
jo
xor
jne
jmp
psubw
or
insb
ret
inc
mov
dec
stos
repnz
out
mov
fnstsw
pushf
test
daa
inc
pop
icebp
pushf
xor
xchg
xchg
test
popf
mov
outsl
inc
loop
xchg
adc
pop
sbb
sahf
add
into
cltd
mov
lods
xor
arpl
dec
test
ret
cmc
aam
jecxz
lahf
stc
enter
outsl
stc
pop
mov
pushf
bound
add
sub
addr16
inc
movsl
negb
push
loopne
dec
jecxz
add
cmp
out
dec
xchg
dec
pop
stos
cmp
test
lret
adc
jmp
and
add
sbb
stos
jnp
jne
test
ret
or
or
xchg
daa
jno
enter
mov
loop
addr16
aaa
push
inc
xor
test
imul
jo
push
mov
fbstp
stc
mov
int3
ss
les
repz
push
mov
xlat
outsb
sub
or
ret
mov
aaa
in
out
dec
xchg
ljmp
xchg
imul
mov
into
cwtl
fsubrs
dec
aas
or
dec
popa
inc
sub
and
loopnew
and
mov
cmpsl
adc
int3
xor
sbb
dec
and
addr16
arpl
loop
dec
jl
test
arpl
popa
push
cwtl
or
ret
insb
jmp
sub
jb
test
mov
icebp
jbe
loopne
and
xlat
stc
or
pop
cli
dec
add
scas
lret
and
xchg
push
nop
in
adc
sbb
and
mov
mov
add
es
adc
outsl
inc
dec
xor
xor
mov
lret
xchg
mov
sub
push
out
scas
loope
jnp
sbb
sub
pop
test
xchg
dec
xor
cmp
mov
or
push
fucomip
call
pop
lods
js
xchg
sbb
lcall
jg
nop
sbb
push
sbb
pop
mov
andb
adc
mov
sar
stos
inc
xchg
and
push
repnz
and
sub
test
jo
cmpsl
pop
rol
not
ljmp
adc
je
das
cmp
sub
add
dec
loop
test
mov
dec
lods
aad
mov
in
adcb
stos
cmp
cs
mov
das
jl
mov
shll
push
xor
mov
jp
movb
jmp
dec
in
out
xchg
dec
cmp
mov
imul
lea
xchg
mov
imul
and
and
dec
mov
lcall
mov
inc
jg
cmp
popa
cwtl
xchg
fwait
and
sbb
xchg
cmp
and
int
cmp
movb
cli
hlt
push
subb
ja
cmp
lock
pop
daa
inc
mov
cltd
push
mov
hlt
xchg
popf
fisttpl
aad
mov
out
xor
fs
movsb
and
jae
inc
mov
xchg
dec
push
or
inc
inc
and
js
test
test
cmpsl
and
adc
sbb
aad
pcmpgtw
out
jne
cli
cmp
add
dec
or
pop
adc
sti
inc
clc
js
out
test
test
and
cmp
and
inc
xor
jne
loop
push
sbb
gs
jne
int
sbb
pop
movsb
xlat
cmp
xchg
fldl
push
stos
xor
fsubrp
stos
shlb
pop
je
push
cmpsb
xorb
jns
call
pushf
mov
jnp
or
pop
js
add
test
sub
sbb
cltd
or
imul
insb
mov
notl
push
popf
fsubrl
dec
cli
cmc
cmp
test
sub
dec
push
ds
sub
enter
or
push
dec
addl
fsubr
and
or
cltd
xor
repz
and
xchg
inc
fimuls
insb
faddl
es
jns
lea
outsb
std
sub
stc
lods
pusha
int3
movsl
xchg
lds
pop
out
mov
sbbb
dec
push
jo
xchg
popa
inc
pushf
push
fisubl
jg
add
and
sbb
fcomp
insb
negb
add
rcrl
mov
xor
ljmp
mov
mov
dec
cwtl
cmpsl
enter
lods
pop
xlat
push
adc
jb
outsb
add
je
adc
and
pop
ja
mov
ds
out
pop
jnp
push
cltd
jp
cmpsl
stos
add
in
sub
mov
dec
and
ret
jge
mov
adc
icebp
mov
cmp
ja
call
iret
clc
xlat
lds
mov
clc
insb
psubsb
in
sti
cmp
inc
ficompl
lcall
and
lock
mov
jl
jns
mov
or
mov
mov
cltd
rcrl
mov
iret
call
fildll
popf
mov
clc
dec
xor
add
jecxz
xor
add
mov
dec
dec
mov
test
out
hlt
xor
xchg
xchg
or
xor
cli
xchg
dec
adc
push
sub
mov
sbb
movsb
push
ret
cmp
data16
notl
cwtl
rcll
out
adc
fdivrs
fists
notl
mov
mull
ret
jl
cmc
jno
xor
pop
mov
call
cmp
dec
int3
adc
lret
popa
push
mov
sub
scas
out
dec
test
mov
xor
ficoms
roll
add
lcall
add
xor
xchg
mov
xchg
push
ss
pop
mov
push
insl
testl
cmc
int
push
divb
mov
dec
cmp
fdivl
cld
cld
xchg
enter
xchg
jmp
cld
iret
push
lret
jmp
mov
push
into
push
jl
or
into
fsubrl
adc
or
sbb
push
ss
pusha
sti
rolb
loop
fwait
mov
sarb
pusha
imul
xor
aas
out
stos
sbb
mov
pop
clc
sbb
pop
icebp
cs
insl
sub
nop
lods
xchg
push
sub
lea
hlt
inc
xor
fcmovu
xchg
ss
pop
outsl
stos
pop
leave
rclb
mov
fadd
or
push
in
dec
lods
cmp
mov
lcall
sbb
pop
and
inc
faddl
mov
adc
scas
mov
sub
std
dec
sub
mov
iret
gs
mov
ss
dec
lret
adc
jge
call
int
sbb
mov
iret
and
mulps
jb
mov
mov
dec
or
aad
aaa
iret
ss
inc
inc
lods
lcall
mov
pop
testl
xchg
lret
pop
ffreep
test
fstps
popf
fnstcw
mov
or
jns
inc
push
xor
xor
cwtl
int3
or
jmp
arpl
aad
rcrb
push
daa
outsb
lds
jle
lock
mov
jmp
or
leave
sub
push
mov
pcmpeqw
adc
cmp
push
into
and
push
xchg
add
imul
or
dec
lret
jbe
adc
imul
sbb
xchg
in
das
pop
stos
xlat
dec
and
inc
fisubrs
data16
dec
roll
sahf
xor
dec
fdivrs
mov
lret
cwtl
das
std
pop
xor
jl
xor
adc
data16
xor
cld
gs
clc
push
push
js
ja
push
jecxz
jb
add
push
in
lret
cmpsb
mov
push
in
je
sbb
add
pusha
int
jo
sbbl
push
jb
das
lcall
fsubl
cmpsl
call
arpl
mov
jmp
shl
dec
mov
mov
adc
fsubrp
stos
jnp
cmpsb
and
test
sbb
add
mov
sti
lahf
movsl
inc
xchg
and
stc
ljmp
movsb
cmp
or
sub
cli
daa
xchg
or
mov
lods
sub
and
jmp
mov
pop
insb
mov
adc
fs
mov
clc
lret
divb
sbb
outsb
mov
adc
inc
fstpt
fisubs
or
dec
fbld
inc
xchg
repz
imul
bndstx
stos
jmp
jg
push
and
xchg
pop
sbb
dec
jl
lock
shll
pop
add
push
les
aaa
mov
pop
sarl
cmp
pop
or
mov
outsl
xlat
scas
and
jmp
mov
pop
sbb
sub
jp
and
sahf
xlat
icebp
jp
stos
clc
and
xor
xchg
add
sbb
icebp
lret
in
sbb
jb
cmp
sub
mov
pop
in
dec
in
sbb
jmp
je
jp
out
cmpsl
in
xlat
repz
cmp
xchg
sub
popf
stc
pop
mov
jno
lea
aad
sub
imulb
insb
test
xorl
pop
nop
lahf
push
mov
mov
cltd
or
mov
loopne
fcmovnb
out
mov
jae
xor
sti
insb
aam
das
lret
xchg
jns
cli
push
mov
sub
lock
in
mov
rcrb
inc
in
xchg
lods
stos
cmpsl
andl
imul
addl
xlat
or
push
mov
xor
es
push
test
popl
popf
jle
std
enter
jg
lock
add
adc
dec
or
and
addr16
pop
mov
out
add
xchg
add
or
mov
push
stos
mov
push
xor
inc
pusha
jp
mov
sbb
mull
repz
cmp
ja
repz
sbb
jl
and
and
pusha
imulb
inc
adc
cli
xchg
jl
inc
iret
mov
dec
dec
aam
int3
pop
stos
lcall
add
push
cld
ss
test
inc
lods
mov
sub
or
cmp
popa
add
or
xchg
stos
aad
pop
jle
shlb
pop
cmpsb
xchg
sub
test
mov
push
icebp
cmp
arpl
sarb
movsb
push
or
leave
ss
out
inc
data16
pop
cltd
xchg
push
fisttpll
ret
mov
mul
jae
cmp
mov
dec
lods
dec
mov
fcmovbe
idivb
jp
push
lock
iret
lds
mov
jge
mov
mov
lock
idiv
mov
in
loopne
in
mov
and
std
push
sub
cmp
subl
or
add
push
test
mov
add
and
stos
xor
pop
pushf
push
into
js
jmp
scas
ret
jo
adc
mov
in
faddl
inc
or
and
mov
fidivrs
push
adc
dec
mulb
or
pop
insb
sub
push
aam
adc
fstp
add
aas
inc
adc
sti
push
popa
stos
lds
daa
adc
jns
push
push
sub
sti
inc
mov
cld
aad
pop
repnz
cmp
cmp
jmp
and
sti
sub
cmp
dec
data16
cwtl
pop
je
fists
xlat
outsb
test
adc
lret
push
addr16
or
mov
push
jp
xchg
out
shlb
mov
sub
fnsetpm(287
push
dec
dec
mov
jnp
sbb
push
add
paddusb
mov
movsb
aas
xor
push
push
jmp
and
mov
adc
addb
loopne
ss
xor
lods
xchg
ror
sti
inc
adc
sbb
and
repnz
xor
push
jns
push
and
push
pop
ret
aad
movsb
mov
push
in
mov
xor
sbb
daa
out
shll
push
mov
push
ret
add
push
out
lods
mov
jbe
idivb
ds
cmp
inc
addr16
pop
das
jecxz
repz
push
sahf
lock
jle
push
ficomps
mov
and
icebp
pop
add
loope
sub
fcmovnbe
mov
adc
jp
mov
mov
or
xchg
push
sbb
hlt
je
fldenv
fsubrl
sub
arpl
pop
xor
xchg
stos
inc
adcb
mov
adc
cmp
pop
arpl
jno
mov
jnp
imul
mov
fnstsw
loope
dec
in
push
aas
js
sbb
mov
popa
clc
xchg
fdivl
cmp
dec
inc
into
shll
inc
adc
sub
dec
mov
fimuls
mov
insb
pusha
fnstenv
sahf
mov
sbb
add
mov
dec
mov
dec
push
pusha
into
pop
pop
enter
ja
subl
mov
xchg
pop
fwait
test
push
stos
daa
fnsave
arpl
jns
xor
jae
clc
and
pop
insl
sbb
mov
movsl
push
leave
pusha
xor
loopne
cwtl
adc
adc
addr16
xchg
xor
xchg
iret
jecxz
loop
xchg
cltd
in
test
testb
pop
pop
xchg
xchg
les
in
stos
loope
fld
and
mov
lds
push
dec
ds
stc
lcall
lods
and
xlat
outsb
dec
inc
and
cmp
add
cmp
jns
mov
pop
cmp
aam
fwait
daa
cld
mov
cs
insl
add
adc
aad
mov
mov
add
imul
faddl
adcb
mov
les
sbb
pusha
or
std
and
sub
mov
add
call
lds
repz
sub
or
lds
or
fcom
and
and
mov
fs
mov
sbb
mov
dec
fstpl
mov
bsf
leave
sub
negl
dec
in
out
cmp
push
call
rclb
lret
jmp
mov
cmp
mov
icebp
sub
lahf
add
xchg
cli
and
push
lods
sub
ds
jp
outsb
enter
lea
iret
outsl
fisttpll
cltd
gs
mov
jb
sub
push
cmp
sbb
std
sbb
xchg
sub
push
mov
sbb
aam
clc
jo
sahf
test
add
leave
sub
stos
pop
ljmp
sub
or
aaa
mov
out
mov
shlb
push
cwtl
jle
iret
sub
dec
cmp
jns
mov
mov
dec
cmp
fisubl
xchg
adc
punpcklbw
lds
imul
dec
mov
xchg
or
jns
ss
xchg
cmp
outsl
xor
lea
insl
inc
xchg
rcrb
adc
xor
enter
movsl
sbb
popa
push
sub
sbb
les
int
icebp
sti
xchg
and
jb
mov
repz
test
mov
in
push
push
add
xor
out
out
into
cmc
jecxz
inc
and
hlt
sub
xchg
cs
cmp
mov
rorb
and
jae
inc
ss
xor
shrl
aaa
lods
mov
shl
ud1
xchg
pop
fistl
lds
icebp
into
loop
shr
in
inc
mov
cli
in
aas
push
aam
and
test
sbb
xchg
sub
push
mov
jne
adc
and
dec
divb
xchg
mov
push
js
cli
xchg
sub
jae
dec
mov
ljmp
in
cli
data16
pop
lds
cmpsb
fisubs
push
int3
in
arpl
and
pop
push
mov
inc
aas
and
dec
inc
fmuls
lods
push
out
faddp
rol
out
jle
fsubrl
add
xor
pop
lock
pop
mov
sub
ret
pusha
sub
add
hlt
cs
out
sahf
subl
jg
push
cmp
xlat
mov
filds
testl
adc
cmp
adc
jbe
or
cmp
pop
cmp
pop
das
cmp
repz
jp
jo
outsl
sbb
pop
push
and
jne
xor
sbb
in
mov
lds
faddl
movsl
cmp
shlb
repz
pop
stc
out
test
cmp
pop
sub
xor
add
ror
scas
stc
pop
rcrb
xor
mov
cmc
stos
fwait
and
pop
sub
mov
mov
xchg
ret
pop
dec
mov
out
pop
leave
movsb
addr16
ficompl
test
xchg
negb
lahf
mov
in
and
je
cli
int
pop
lret
xchg
mov
or
pop
inc
call
xchg
sub
mov
adcl
lahf
ds
movsb
inc
xchg
in
push
imul
push
sub
frstor
mov
aaa
or
lret
sarb
mov
shl
jae
idivl
mov
int3
shl
mov
xchg
les
pop
lcall
ja
outsl
stos
add
bound
cmpsl
repz
adc
xchg
imul
mov
test
cmp
add
cmp
add
rcll
jno
ds
vmovups
shl
js
jp
jae
mov
push
leave
fstl
insb
outsb
adcl
imul
lods
adc
sub
lds
out
pop
sbb
dec
and
sub
bound
inc
out
aam
stos
or
adc
adc
or
out
negb
sub
in
cmc
mov
test
cwtl
das
or
pop
scas
shrb
dec
push
and
sti
push
ret
push
inc
insb
shrb
out
xor
ret
add
push
imul
xchg
add
popf
xor
imull
mov
out
dec
loope
roll
push
or
mov
pop
clc
xor
and
inc
and
and
cmp
mov
push
add
cltd
cmpsb
popf
xor
loope
into
movsb
das
sub
pop
pop
out
scas
js
jge
add
cmp
mov
in
ret
inc
insl
jge
pop
nop
test
sbb
sbb
jne
and
ficoml
or
leave
outsl
bound
jne
je
push
stos
add
cmp
sahf
ja
pop
lret
ds
icebp
gs
or
vmwrite
sub
dec
loope
lahf
or
popa
push
inc
cmp
mov
rcll
xchg
test
les
int
ret
fidivrl
xor
movsb
loop
cwtl
pushf
int
out
inc
shl
jecxz
cwtl
repnz
or
shrb
xchg
cltd
lcall
dec
outsb
and
lcall
loop
ja
sahf
mov
ret
jl
lds
sbb
daa
jmp
test
test
and
push
fwait
mov
hlt
dec
daa
jmp
inc
pop
ret
inc
add
xchg
popa
sbbl
addr16
and
mov
aaa
or
les
lock
and
imul
imul
or
movsb
jp
xchg
mov
or
cmp
out
sti
push
jb
cwtl
mov
pop
mov
sbb
mov
pop
adc
jo
lds
mov
lds
imul
lods
xchg
xor
mov
xor
xlat
fwait
stc
adc
or
rorl
dec
insl
dec
sahf
xchg
sub
dec
loope
in
pop
sbb
add
aaa
xor
push
mov
jbe
inc
sbb
xor
addl
mov
push
push
xor
jg
loopne
in
outsl
mov
mull
mov
and
xchg
mov
jns
ja
add
pop
adc
jl
cwtl
inc
daa
pop
lcall
lcall
int
mov
cmp
sahf
scas
mov
xor
add
mov
inc
adc
push
lcall
in
sahf
ret
in
xchg
inc
add
insl
inc
sbb
mov
out
fcomip
out
inc
or
xchg
pusha
popf
xor
movsb
cmp
adc
mov
xchg
int
ljmp
jb
xchg
dec
dec
and
cli
pop
sub
lea
jg
popa
ds
lods
dec
lret
pusha
mov
loop
cmpl
fsubrp
xor
xchg
pop
pushf
icebp
or
das
adcb
jge
jae
mov
in
sub
shrl
or
jg
in
enter
adc
clc
push
repnz
in
add
add
sub
loop
imul
movl
xstore-rng
cmpsl
inc
aad
loopne
push
insl
jns
add
inc
outsl
sbbl
lret
rcr
repnz
pusha
pop
mov
jmp
push
cmpsb
cli
sbb
push
push
mov
and
inc
jl
daa
test
mov
adc
ret
pop
jae
adc
test
inc
or
bnd
rclb
loop
inc
aas
outsl
aaa
pop
les
in
es
loopne
mov
lock
mov
mov
rclb
ss
dec
rep
in
out
rcrl
rcrb
dec
out
outsl
repnz
leave
adc
mov
push
xchg
xlat
scas
inc
ja
cmp
sbb
mov
jg
inc
test
push
pop
call
fisubrl
mov
jb
popa
dec
out
lock
mov
or
rol
push
inc
leave
jl
dec
inc
pop
add
int
ds
popa
mov
sub
cmc
daa
mov
mov
shrl
push
xchg
mov
ds
shrb
sbbb
dec
loop
mov
inc
push
mov
jns
ror
and
pop
dec
iret
push
inc
fldenv
pop
outsb
jae
xchg
add
mov
adc
int
xorb
mov
call
jnp
mov
data16
jo
fwait
xorb
mov
mul
aaa
inc
mov
shll
xchg
sub
mov
out
loop
pop
imulb
adc
into
sahf
jge
sarb
and
xor
ret
dec
mov
cmp
mov
shrl
movl
xchg
dec
sub
jl
leave
pusha
pop
fwait
enter
out
shlb
insl
lds
mov
sbb
push
push
push
stc
or
popf
jecxz
iret
dec
stos
inc
jo
cld
xchg
fstl
or
stos
jle
out
mov
loop
std
jecxz
iret
cltd
push
int
je
scas
mov
push
stos
js
jl
jno
mov
cmp
loop
mov
lods
cs
lret
pop
cltd
imul
ljmp
sub
cmpsb
insl
scas
mov
fmul
lods
js
hlt
js
rcrl
and
adc
jl
xchg
adc
movsb
adc
pop
out
inc
int3
loop
das
adc
add
xchg
jbe
sbb
inc
ret
push
test
in
and
xor
mov
jns
std
cltd
mov
jmp
cmp
push
aaa
lods
add
repz
xor
inc
faddl
ror
shlb
sbbl
jno
leave
mov
pop
sbb
loope
in
mov
cmp
mov
sahf
xor
fsubrp
mov
in
outsb
stos
cmp
rcl
jp
adc
and
testl
push
insb
push
cmp
xchg
daa
fstpt
inc
xor
in
sub
int
adc
gs
pop
icebp
orb
pop
mov
add
es
fisttpll
sub
cmp
pop
mov
rcrl
insb
ret
inc
fwait
cmp
test
sub
sub
rcrl
mul
dec
mov
and
sbb
and
xor
sub
data16
cwtl
daa
push
repnz
jno
jnp
frndint
add
test
mov
add
dec
pop
fsubl
sub
sub
sbb
ror
mov
movsl
cmp
inc
push
popf
xor
mov
enter
stos
adc
push
sub
adcl
arpl
push
das
mov
jg
inc
pushf
pop
sbb
pop
les
pop
or
jecxz
mov
push
nop
dec
icebp
or
arpl
add
dec
jns
orb
test
sbb
or
cli
fwait
ss
sbb
mov
adc
pop
fdivs
test
dec
adc
xor
lock
sub
loop
aas
cmp
ljmp
cli
push
lods
pop
and
push
divl
mov
in
inc
fldt
fiadds
push
mov
mov
dec
ror
xchg
cmp
dec
pop
rcll
mov
mov
dec
daa
movl
in
fisttpl
push
aas
cmp
jae
jecxz
les
dec
inc
mov
jle
adc
xchg
data16
orb
xor
mov
push
cmp
cmp
movsl
and
xchg
in
jns
lcall
xchg
xchg
jb
and
sub
outsb
cmc
mov
pop
xor
enter
lods
inc
adc
lcall
xorb
mov
sbb
mov
negl
add
xchg
jb
jbe
ss
sbb
xchg
les
out
lock
insl
and
jge
push
out
mov
mov
and
out
data16
mov
fiadds
in
jns
push
sub
lret
call
xchg
sub
and
mov
sub
dec
mov
jne
fidivs
push
xor
out
sub
xchg
clc
xor
pop
out
enter
out
jns
pop
rcll
mov
stos
mov
pop
jno
mulb
mov
sbb
mov
enter
lahf
and
dec
adc
das
push
mov
mull
repnz
inc
xchg
arpl
adc
mov
mov
cmpsl
imul
outsl
push
je
leave
sbb
cmp
lret
ret
adc
fndisi(8087
sub
or
xor
testl
cwtl
xor
std
stc
iret
pop
call
int
inc
sbbl
dec
xchg
mov
pop
mov
inc
inc
insb
in
cmp
test
jb
cmp
push
cli
jge
mov
dec
mov
xchg
mov
pop
loope
arpl
pop
ja
push
fnsave
lods
mov
hlt
filds
bound
ds
jo
xorb
test
icebp
xchg
inc
pop
fst
out
or
xchg
inc
mov
inc
xor
repz
fisubrl
inc
mov
lret
or
pop
cmpsl
subb
sub
out
cmp
xchg
push
stos
orb
add
iret
ss
out
roll
push
mov
mov
cmp
imul
pusha
push
iret
fwait
adcl
int
ja
push
mov
push
out
adc
mov
cmp
pop
xchg
dec
pop
adc
pop
imul
xchg
jbe
pop
stos
mov
adc
add
mov
mov
pop
lods
orb
int
ret
inc
out
jle
out
loopne
ret
mov
xor
in
sahf
sbb
inc
cmp
in
popf
mov
cmp
pop
insb
add
pop
mov
xchg
in
fs
aaa
jnp
movsb
jo
mov
add
lods
push
aad
xchg
pop
iret
xor
inc
in
mov
mov
out
subb
add
fnsave
adc
xchg
popa
mov
movsl
push
aas
shll
setle
mov
cmp
xchg
sub
pusha
pop
xor
out
scas
std
sti
push
and
push
jmp
inc
and
jbe
imul
fcompl
xchg
jbe
dec
xor
scas
xor
into
push
jae
sbb
repnz
lret
add
cmp
jo
xchg
lods
xchg
es
popf
adc
push
jmp
pop
call
or
jne
or
pusha
pop
aad
or
pop
movsl
and
into
sub
out
fwait
sbbl
lret
inc
pop
scas
dec
xchg
cmpsb
cwtl
xlat
mov
addr16
fs
or
out
test
lds
fisubrs
int
sub
mov
into
fisubrs
int
loope
dec
popf
cmp
popa
ret
xchg
aam
or
stos
inc
pop
mov
jns
inc
hlt
leave
sbb
inc
lret
ret
mov
shr
inc
adc
je
push
push
cmc
pop
outsl
adc
sbb
movsl
jns
pop
mov
push
mov
mov
stos
mov
jl
or
lcall
sarl
pop
lods
cld
jns
mov
test
js
test
mov
ret
sbb
cmp
push
xchg
mov
leave
dec
int3
add
sub
pushf
aad
repz
sti
pop
jno
xor
ja
adc
test
scas
adc
jae
sub
pop
sbb
pop
jmp
scas
xchg
sub
iret
add
leave
call
xlat
cmp
pop
sub
pop
in
jge
xorl
ds
adcb
push
and
das
fldenv
enter
mov
imul
fisttpl
insb
or
sub
and
je
xchg
pop
mov
push
cwtl
das
inc
mov
cmp
mov
pop
cmpsl
imul
xchg
push
cmp
mov
sub
dec
jl
cmp
es
sbb
jmp
lods
inc
pop
xlat
je
adc
push
out
add
mov
hlt
mov
lods
dec
fistps
xchg
insl
add
sarb
vorps
int3
xchg
dec
loop
mov
push
lods
mov
daa
mov
lods
mov
pop
sbb
xchg
push
movsl
lds
fidivs
repz
dec
rcll
xchg
incb
adc
pop
testl
sti
aam
adc
out
es
cmp
sbb
pop
adcb
push
mov
sbbl
push
imul
jl
mov
add
inc
arpl
in
push
sbb
jbe
int3
out
data16
icebp
pop
mov
mov
push
shrb
shlb
aad
test
mov
mov
mov
aaa
add
insl
add
sbb
mov
push
dec
mov
enter
das
gs
cmp
pop
cmp
inc
mov
shr
adc
pop
xor
jb
and
frstor
orl
cltd
jp
push
jmp
adc
jmp
push
jmp
jge
cmpb
jne
xor
mov
and
fisubl
fsubr
or
insl
lods
out
ss
pop
inc
out
mov
push
and
fistpll
xor
adc
adc
mov
cltd
add
mov
xor
jp
aam
push
icebp
insb
and
js
test
push
js
subb
cltd
mov
dec
repz
inc
xchg
out
jg
and
sbb
xchg
cmc
xchg
jmp
add
outsl
dec
movsl
or
scas
jecxz
lock
repz
inc
ficoms
scas
dec
arpl
call
outsl
repz
arpl
lock
mov
sub
sti
enter
sbb
icebp
jae
in
das
adc
mov
leave
andl
pop
scas
push
fcom
shrl
dec
jl
jg
icebp
mov
dec
cmp
mov
stos
inc
out
in
movsl
cmp
sub
ret
sbb
xlat
jbe
push
loop
fs
in
js
xor
pop
mov
in
in
pop
loope
add
sti
std
pop
adcl
cwtl
aam
mov
or
lret
inc
frndint
push
push
insb
jae
pusha
mul
jg
jg
rorl
push
inc
pop
stc
dec
loop
cmp
stc
popf
xchg
mov
movsb
dec
fldt
out
mov
pop
jb
adc
pop
xchg
in
insb
pop
mov
mov
imul
pop
mov
inc
jbe
adc
pop
dec
xor
clc
jp
mov
and
inc
xlat
mov
arpl
imul
mov
push
addr16
je
imul
std
add
test
fdivp
mov
jg
cwtl
lods
pop
lock
addl
mov
mov
out
in
sub
out
jbe
call
lret
jae
rcrl
jg
loope
fninit
mov
push
mov
or
or
sbbb
inc
repnz
push
je
adc
enter
mov
add
mov
jg
dec
es
sti
xor
inc
stos
push
cmpb
push
jmp
sbb
xchg
sub
mov
mov
pushf
jecxz
push
push
addr16
outsb
xchg
mov
push
pop
cmp
cmp
sbbl
and
mov
dec
push
mov
fidivrs
daa
rcrb
fmuls
repz
icebp
cmp
arpl
push
dec
movsl
cmp
jae
jb
gs
xchg
popa
fisubrs
ja
mov
xorb
fidivrl
adc
iret
xchg
inc
sbb
adc
data16
jno
xchg
inc
mov
dec
loope
xchg
loop
xchg
and
stos
aas
mov
pop
mov
sarb
rcrl
in
sti
and
mov
sbb
and
imul
pop
rcll
push
pop
out
popa
jmp
aaa
and
mov
fstl
push
or
stos
push
lret
xchg
cmp
imul
cmp
and
lret
push
inc
mov
daa
xor
mov
cld
notl
jae
lods
stos
mov
pop
negb
xor
repnz
mov
pop
lret
add
std
jge
ficompl
popa
jg
inc
mov
fistps
lods
shr
mov
lahf
out
std
call
or
sbb
mov
hlt
push
or
jmp
es
iret
adc
xor
and
add
mov
insl
lock
lock
xchg
scas
es
sti
pusha
inc
ret
addl
aaa
fnstenv
arpl
int3
popf
pop
jns
ljmp
mov
icebp
mov
sbb
test
cs
test
in
hlt
jne
xor
sti
inc
loope
xchg
scas
or
fsubrp
sti
xor
cmp
and
test
pop
stos
scas
add
adc
sbb
mov
cmp
imul
clc
inc
test
rclb
insl
scas
push
mov
push
or
loop
sbb
mov
popf
stos
int
imul
mov
pushf
push
scas
dec
leave
cmp
and
adc
push
out
sbb
ret
inc
adc
das
push
rorl
cld
test
sub
fisubl
popa
clc
notb
clc
pop
pop
sub
mov
je
hlt
mov
ret
lock
imul
pop
cmp
lret
lahf
rorb
rclb
inc
fistpll
fisubs
or
not
pop
outsb
pop
lods
aad
pop
mov
sbb
mov
cmp
dec
rclb
out
orl
leave
push
in
xlat
inc
cmp
jecxz
sub
inc
rclb
jp
dec
repz
mov
out
inc
lret
xor
xor
pop
mov
test
ret
sbb
lea
and
rclb
mov
nop
dec
cmpsl
xchg
cmp
mov
shrb
mov
out
mov
cmp
mov
movsb
add
fdiv
push
xchg
mov
ret
sarl
out
xor
xchg
xor
bound
repnz
sbb
in
fcomps
pop
mov
jmp
jecxz
pop
ret
in
pusha
rorb
pop
repnz
out
and
clc
popl
ret
aad
sbbl
mov
cmpsb
cmp
xlat
lret
loop
std
std
js
int
jns
call
aas
push
xor
xor
addr16
sub
repz
insl
xor
fisubs
test
pop
icebp
dec
cmpsb
sbb
add
sbb
pop
mov
mov
je
adc
aad
nop
xchg
dec
sub
mov
out
popf
push
push
in
fsubrs
adc
pusha
xor
nop
test
jmp
adc
fistl
or
call
stos
mov
push
das
push
push
xor
pop
xor
push
fnstcw
std
or
negb
pop
xor
out
lods
dec
and
fnstenv
je
inc
mov
stc
pop
sahf
sub
pop
jge
jnp
xor
inc
fisubrs
pop
mov
mov
clc
xlat
sub
ret
mov
bound
jle
in
gs
sbbl
jae
pop
fsubl
or
arpl
out
scas
cmp
xchg
scas
jb
hlt
xchg
test
daa
add
iret
pop
pop
mov
out
cwtl
xchg
shl
sti
or
cmpsl
sti
popf
insl
add
js
je
out
jle
bound
xchg
sub
and
fisttpll
xchg
sub
and
addr16
pop
fidivl
test
clc
xchg
mov
les
or
cmpsb
xchg
cmp
shl
leave
loope
jp
cmc
pop
ja
mov
sub
imul
rcl
stos
lea
mov
sbb
mov
cmp
mov
jle
adc
sbb
jae
cmpsl
cmp
pusha
int3
adc
incb
imul
inc
jnp
js
pop
into
push
or
out
outsb
mov
das
fidivrs
xor
scas
cmp
fwait
xchg
sub
enter
popa
mov
xchg
mov
iret
data16
ljmp
ss
addr16
adcl
push
out
test
or
cmp
push
mov
test
lahf
fnstenv
ds
mov
mov
xor
mov
andb
js
pop
sbb
mov
aas
cmp
push
aad
out
and
cmp
fistpll
mov
mov
cmpsb
sbb
insb
cwtl
aaa
add
mov
or
arpl
das
sub
or
cmp
ret
rorl
mov
rclb
cmp
pop
lds
xor
or
push
test
mov
outsb
ja
cltd
add
repz
les
test
gs
hlt
fwait
xchg
xchg
adc
std
xor
and
sub
and
loopne
jno
jecxz
cmc
jge
scas
aam
adc
call
pop
mov
mov
lds
mov
jmp
add
fs
stc
mov
sbb
mov
fcmovnb
loopne
dec
sti
xchg
mov
push
mov
bound
xor
inc
mov
sub
dec
aaa
push
clc
or
jne
mov
leave
pusha
or
inc
fldenv
cmp
pusha
jg
das
push
jmp
int
pop
jl
fwait
push
jb
xchg
std
lds
inc
scas
cmp
pop
cltd
cmp
push
in
frstor
jae
mov
inc
and
xchg
pop
in
and
std
pop
mov
cmpsl
mov
int3
mov
or
into
mov
in
pop
aas
lock
aad
dec
stos
aaa
dec
cmp
pop
std
adc
int
xchg
sub
add
daa
adc
mov
xor
inc
gs
sbb
mov
test
fsubr
int3
inc
inc
push
inc
inc
fistpll
test
dec
mov
repz
inc
mov
jne
test
test
push
or
dec
push
xchg
fsubrs
or
jb
notb
xchg
xchg
ret
push
or
imul
sbb
lods
cmpsl
mov
leave
inc
das
fnstcw
lds
mov
shl
es
mulb
cltd
xor
fnsave
add
mov
pusha
cmp
nop
push
test
jge
imulb
enter
mov
popa
enter
ret
push
movsb
mov
or
pop
push
leave
loop
pop
scas
js
mov
sub
out
aad
fsts
cmpsl
call
sahf
fwait
and
jmp
imul
andb
sub
mov
ret
lret
jnp
pop
cmp
clc
inc
jno
jmp
fidivrs
mov
push
ja
fwait
sti
test
test
lock
and
out
push
jmp
out
leave
or
test
push
fldt
addb
adc
sub
mov
jne
sbb
xor
mov
mov
mov
stos
jge
out
fldt
outsl
pop
dec
filds
xchg
stos
out
scas
push
jne
jle
xchg
sbb
rorb
cmpsb
dec
in
pop
jno
sub
pop
out
insl
xchg
les
stos
push
in
aad
xchg
push
fdivl
dec
shrb
int3
cli
rcr
icebp
clc
lock
mov
and
lea
mov
cmc
out
push
lea
xor
stos
mov
lahf
ret
dec
dec
pop
loope
sub
repnz
add
inc
movsb
lds
push
int3
je
cwtl
xor
lods
jecxz
xchg
lcall
mov
je
outsb
fidivrs
add
cli
mull
push
mov
mov
out
mov
sbb
mov
faddl
inc
popa
push
sbbb
jns
aaa
lret
xlat
add
cmpsb
cmp
pop
mov
pop
mov
adc
ja
push
adc
xor
aad
pop
pop
outsb
nop
mov
inc
add
sub
jg
outsl
adc
adc
lret
sub
cmp
les
ret
pop
push
or
inc
xchg
mov
jp
sbb
test
mov
rcl
popa
sahf
cmpsb
push
pop
xor
push
ljmp
push
jo
and
inc
test
sub
push
addr16
lahf
mov
jns
and
jb
subb
and
jl
loop
stos
jbe
cli
mov
cs
push
aad
addb
jg
repz
aad
dec
stos
enter
das
inc
add
and
xchg
adc
jnp
pop
rcrb
in
mov
in
sbb
scas
jl
clc
mov
shrl
lret
inc
out
sti
pop
pop
lods
out
pop
mov
jl
cmc
xchg
cmpsl
mov
mov
dec
test
insl
out
sbb
add
add
dec
jns
paddsw
jge
cmp
cmp
mov
js
lcall
adc
dec
and
fildl
pop
xor
xchg
out
dec
mov
jl
push
pop
scas
inc
and
or
insl
jge
andb
in
pop
jmp
adc
mov
sahf
inc
mov
std
mov
loop
fldenv
adc
cmp
shr
push
sbb
dec
cld
cmp
add
mov
test
mov
icebp
sub
cmpsl
and
lea
dec
adc
repnz
xor
adc
xchg
add
or
ja
pop
cmp
mov
rol
mov
test
es
jne
add
daa
mov
int
mov
cmpsb
cmp
imul
ja
ss
push
out
and
data16
mov
inc
xchg
enter
hlt
iret
push
outsl
insl
push
js
jae
sbbb
fldt
stos
jge
fdiv
popa
jg
aas
push
mov
mov
fdivrs
cmp
mov
sub
mov
push
iret
int
mov
add
cwtl
inc
pushf
in
mov
and
push
fs
das
les
scas
sub
xor
popa
xor
push
xchg
loop
lret
das
gs
cld
jg
adc
test
jp
call
mov
loopne
gs
mov
jp
les
das
pushf
pop
fnstenv
inc
xor
add
es
scas
movsb
jge
bound
push
call
pushf
mov
lcall
and
jne
movsb
cmpsb
and
mov
ds
out
xlat
fmul
iret
shrl
icebp
shll
dec
aad
jo
mov
insl
sbb
dec
fidivrl
fildll
inc
pop
or
stos
js
js
xchg
mov
mov
xchg
in
fdivrl
fldcw
fnstenv
cmp
jle
sbb
mov
iret
aaa
xchg
xchg
xor
pop
pusha
mov
sbb
mov
js
leave
ljmp
jbe
popf
stc
fwait
xor
dec
in
xchg
cmp
test
popa
and
or
pop
fldenv
fdivl
sbb
mov
add
not
ljmp
xchg
and
cmp
pop
scas
xchg
push
sub
leave
inc
push
loopne
sbb
out
insb
mov
test
inc
sbb
cmp
lret
dec
nop
jg
xor
mov
jge
cmpsl
inc
insb
cmp
mov
cmpsb
sbb
or
sbbb
and
nop
sub
sub
rcrb
icebp
divb
imul
lock
jmp
fidivs
dec
lahf
ret
das
push
dec
ret
lret
xor
dec
xchg
sahf
je
dec
loope
subl
mov
rorl
or
les
add
lahf
hlt
push
ficompl
cmp
mov
fsubrs
xchg
lcall
mov
add
push
stos
fs
pop
push
je
cmp
aad
out
leave
jp
sti
rclb
pushf
nop
inc
nop
ret
lret
out
jecxz
jmp
xor
cwtl
nop
sbbl
es
inc
mov
repz
or
rol
ss
cmc
repz
sbb
jae
int
in
ret
adc
and
lcall
cltd
pop
fldl
xor
sbb
pop
inc
push
cmp
pop
jp
aam
insl
push
ret
repz
jns
std
xchg
mov
lret
sarb
cmp
mov
insl
push
montmul
cmpsb
sbbl
icebp
xor
in
or
icebp
sub
adc
mov
fidivrl
mov
inc
xchg
scas
xchg
pop
out
sub
outsl
push
dec
mov
fdivrl
push
jmp
mov
aaa
push
xlat
insl
mov
cmpsb
mov
mov
cmpsl
scas
cmp
enter
adc
mov
xor
lock
mov
dec
cltd
pop
dec
lea
mov
dec
in
and
mov
or
jge
dec
ret
insl
add
out
in
ds
pop
pop
adc
fbstp
mov
test
scas
les
stos
add
sub
stos
cld
xor
dec
shlb
je
lock
xor
inc
add
jae
dec
fadds
ds
cmp
jle
movsl
xchg
nop
scas
mov
sub
jp
pop
mov
mov
scas
cwtl
stos
lock
bound
insb
pop
mov
fs
aaa
and
in
inc
push
pop
std
cmp
insl
mov
adc
ss
mov
in
mov
cmp
data16
inc
xchg
mov
pop
loopne
dec
or
sub
xor
or
jp
mov
fwait
int3
dec
mov
jg
lods
cs
test
sub
repz
mov
lcall
pop
jo
xor
enter
aam
fimull
clc
jnp
fbld
pop
lock
add
test
push
xor
jne
xchg
pop
stos
push
xor
sbb
and
out
cmp
cmpsb
mov
shl
lahf
add
adc
xchg
mov
add
sub
stc
mov
mov
jge
sahf
loop
insb
aaa
sub
lods
int
adcl
rcrl
sbb
mov
in
mov
mov
push
cmp
daa
xchg
pop
gs
pop
idivl
insb
push
sub
cld
mov
cmpsb
sbb
add
cmpsb
mov
test
cmp
adc
ljmp
fldenv
jns
insb
lret
in
andl
test
test
inc
fcmove
pushf
idivb
or
cmp
rcrl
sbb
das
add
stos
call
jne
xor
push
pop
pop
mov
dec
xchg
push
push
xor
clc
jns
pop
pop
sbb
movsl
popf
insl
sub
daa
dec
xor
dec
ret
and
mov
push
mov
inc
push
ljmp
insl
xchg
xor
mov
in
mov
jl
popa
jg
popf
inc
fdivrl
fisubl
pop
into
and
mov
out
and
push
cmpsl
pop
mov
ja
cmp
cltd
pop
jle
mov
clc
pop
out
mov
lret
cs
enter
push
pop
add
lds
mov
inc
test
out
leave
fldcw
je
cmp
mov
lret
js
out
inc
sbb
sbb
xor
sarb
in
nop
mov
pop
mov
push
mov
jle
xor
std
in
push
add
push
hlt
outsb
mov
test
cmp
push
outsb
pop
push
scas
adcb
and
stc
shlb
js
sbb
leave
insb
fwait
xor
movsb
test
mov
out
ja
adc
ss
xchg
inc
mov
jo
scas
mov
jmp
push
sub
push
aad
leave
push
fistpl
cs
sub
fdiv
loope
and
sbb
and
js
and
arpl
js
lea
rclb
add
jae
hlt
adc
dec
xchg
lods
dec
arpl
adcl
xor
cmp
push
mov
es
add
sti
inc
jns
jns
ret
mov
int3
arpl
mov
cmpsb
mov
xchg
inc
stos
mov
add
mov
ja
mov
push
loope
xor
mov
std
xchg
and
sbb
orl
push
xor
push
push
loop
jno
mov
jecxz
cmp
xchg
adc
test
mov
sub
inc
pop
mov
or
cmp
nop
or
adc
push
inc
pop
sub
fstpl
mov
das
jnp
in
jmp
dec
pop
cmc
fld
gs
lahf
out
lds
mov
mov
or
ret
in
pop
sbb
ja
push
push
cmp
jle
outsl
jbe
test
mov
cmpsl
aaa
pop
idivl
cld
nopl
fwait
fs
xlat
jle
ret
out
test
js
fucom
lahf
or
jg
popa
cli
movsl
dec
jle
outsb
adc
inc
fwait
dec
gs
pop
lcall
hlt
cwtl
gs
jmp
adcb
repnz
pop
pop
adc
ret
sbb
shlb
pop
icebp
jno
std
mov
sub
and
xchg
dec
mov
cwtl
mov
out
call
js
lods
push
pop
adcb
sub
movsl
ljmp
sbb
add
mov
cwtl
jg
cltd
out
imul
jno
mov
bound
and
xor
or
mov
ds
pop
jge
hlt
je
stos
movsl
adc
test
xchg
push
cmp
clc
jl
sbb
jo
cmp
imul
dec
mov
insl
mov
push
mov
push
sub
lea
js
fs
inc
jmp
xchg
jb
int
or
and
inc
xchg
mov
sub
flds
mov
nop
call
mov
popf
pop
jne
add
lods
cs
mov
arpl
fs
lock
cmpsl
xor
std
or
pop
push
sub
add
xor
adc
in
lahf
repnz
cmp
ds
jge
jg
mov
enter
sbb
sub
movsb
scas
cmp
shrb
ret
stos
mov
fs
jnp
stc
popf
lcall
jns
jge
xor
popa
add
iret
pop
push
mov
fildl
mov
and
iret
push
jmp
push
cltd
jo
lret
icebp
int3
sbb
ss
pop
sahf
xor
aas
ss
inc
and
and
out
and
lret
fsts
sub
cli
popa
fsubl
add
out
mov
fsubrl
push
push
in
inc
inc
push
or
test
pushf
xchg
inc
inc
sbb
sub
or
or
pop
dec
cmpsb
dec
daa
dec
dec
sub
sub
xchg
dec
pop
enter
mov
cs
fucom
sbb
jp
pop
xor
fwait
sub
or
add
sub
pop
rcr
jo
stc
mov
jmp
test
and
mov
jno
sbb
jne
test
mov
lahf
lret
xlat
movsb
jl
into
sbb
test
mov
xlat
iret
xlat
inc
cmp
hlt
lahf
cmp
cmp
jns
loopne
and
decl
mov
adc
lahf
sahf
movsl
inc
pop
repz
jne
test
nop
xchg
mov
out
jb
mov
mov
std
or
repz
xchg
lahf
test
jbe
lea
inc
dec
mov
daa
enter
push
add
int
mov
push
ja
mov
pop
xor
xchg
arpl
sarb
out
adc
inc
aas
dec
fidivrl
xchg
add
adc
xor
mov
mov
lret
pushf
stos
jnp
stos
sbb
push
jmp
push
divl
and
in
mov
jno
call
or
push
inc
nop
xor
sarl
test
dec
or
jbe
mov
and
nop
add
mov
lods
std
repnz
jecxz
clc
adc
mov
jle
pop
jbe
push
inc
pushf
xor
jnp
stos
test
push
icebp
out
and
xor
int
inc
xor
mov
push
out
mov
xchg
aas
paddusw
bound
or
addr16
mov
dec
fstl
stos
faddl
xlat
mov
movsl
aam
and
clc
subb
leave
dec
cli
int3
scas
test
ret
scas
inc
add
or
xor
jg
xchg
imul
cld
lods
cs
inc
push
arpl
xor
loope
push
mov
push
and
inc
pop
sub
outsb
cmp
es
mov
mov
cmc
gs
imul
lock
into
mov
fidivl
ljmp
sahf
out
push
rclb
or
mov
fnstcw
push
loop
in
push
clc
imul
jle
test
cmc
stos
xchg
fcmovnb
lret
push
jp
mov
fstl
incb
mov
dec
jge
push
jo
or
adc
push
cwtl
add
arpl
int3
cs
data16
xchg
sbbl
inc
cmp
xchg
mov
ficomps
mov
lods
imul
adc
mov
xchg
mov
mov
and
sub
mov
mov
lods
adc
inc
xchg
cld
std
mov
mov
pop
aaa
jnp
dec
and
or
push
push
lds
jae
adc
dec
adc
sahf
xor
and
adc
mov
cmp
mov
sarb
hlt
jb
scas
dec
mov
dec
iret
cltd
xor
sti
jecxz
mov
dec
push
cmpsl
sbbl
or
vcvtps2dq
fidivs
jo
test
inc
or
or
mov
pop
or
mov
fiaddl
lods
jmp
sbb
int
les
jae
push
fwait
movsb
mov
testb
scas
stc
ss
dec
pop
xor
imul
rcrb
test
xchg
xor
in
loopne
in
mov
mov
sbb
inc
and
xchg
xor
sbb
mov
jecxz
dec
lcall
adc
jbe
add
ljmp
fwait
push
cmc
adc
je
je
pop
mov
lods
cmp
sbb
push
sbbl
pop
out
mov
mov
and
shlb
xchg
jmp
mov
mov
xlat
and
loope
or
push
mov
jne
mov
cli
push
pop
fcomip
inc
mov
fnstenv
xchg
mov
movsl
dec
push
mov
and
inc
mov
jae
popa
das
stc
push
pop
sbb
test
xorl
out
push
or
sub
stos
mov
jle
fildll
outsb
into
js
inc
xchg
lds
popa
lret
loopne
cwtd
xor
pop
pcmpgtw
lea
ds
frndint
fisttpl
inc
mov
jb
pop
sahf
cmp
dec
fists
sbb
aaa
jle
ss
fadds
mov
mov
sub
push
mov
or
mov
out
and
xrelease
sbb
jge
outsb
mov
movsb
mov
inc
or
and
xchg
mov
fsub
ja
inc
in
push
and
fidivrs
fstps
xor
mov
fsts
push
inc
adc
dec
stos
inc
pop
jbe
leave
or
adc
movsl
mov
insb
push
sub
mov
sbb
cs
imul
in
xchg
mov
add
jae
repz
mov
sbb
in
pop
pop
sbb
mov
arpl
shlb
lret
gs
jp
movsb
test
int
stc
gs
cmp
movsb
hlt
shrb
cwtl
scas
nop
pusha
mov
nop
movsl
test
jns
subl
mov
imul
cmp
dec
mov
mov
movsb
xchg
inc
stos
push
int3
popa
stc
data16
adc
movsl
sbb
mov
jl
cli
nop
cmpsb
mov
loope
gs
in
xchg
mov
popa
push
xor
or
sub
mov
mov
jp
push
mov
lcall
hlt
xchg
and
push
jmp
std
sbb
mov
pusha
mov
jmp
rolb
pop
ss
adc
and
jne
xchg
mov
pop
mov
ret
insb
mov
loopne
call
sahf
jb
inc
pop
imul
mov
push
jae
inc
xchg
cmc
clc
sbb
sbb
push
or
xchg
mov
inc
jp
shll
out
push
in
xor
jae
test
ljmp
push
in
push
fistl
dec
out
sub
xor
push
mov
gs
dec
pop
lock
jl
lock
add
ja
lea
and
jb
adc
mov
andb
add
jle
bound
fcompl
and
adc
sbbb
ret
or
jae
xlat
pop
aas
popf
dec
out
ljmp
ficoml
popa
or
cmp
movsl
sti
fadds
es
mov
fmull
mov
inc
icebp
dec
push
inc
ljmp
notl
test
hlt
stos
daa
daa
scas
cmpsb
push
and
bound
jne
inc
mov
xchg
jno
jbe
sahf
xchg
dec
stos
andb
mov
popa
imul
sbb
test
xorl
jnp
mov
dec
es
inc
test
data16
xor
fucomp
xchg
cmp
ret
mov
mov
cs
pop
outsl
push
jmp
jl
test
insl
data16
push
push
cs
xchg
insb
cmpl
sub
enter
jle
test
push
add
xlat
and
and
insb
dec
lock
loop
outsb
jl
out
pop
inc
lret
data16
dec
or
test
lret
jb
xorb
aas
adc
repnz
pop
dec
out
mov
mov
lock
cmp
icebp
cmpsb
xchg
cmc
mov
dec
js
ss
stos
fsts
sub
sub
push
in
jge
lret
lahf
jp
rcll
jl
repnz
mov
cli
xchg
js
in
sub
or
pop
push
cmc
mov
insl
cli
xchg
mov
xor
sarl
xchg
pop
cli
xchg
xchg
in
and
or
mov
in
inc
insl
notb
push
pop
mulb
int
cmp
jo
mov
scas
test
mov
add
sti
pop
fsubl
arpl
stos
into
cmp
sub
cmp
movsb
aas
mov
push
or
cmp
out
sbb
sti
aad
movsb
cli
les
mov
dec
jb
mov
loopne
mul
into
mov
lret
mov
inc
out
enter
xchg
dec
int
jg
mov
fisttpl
fstl
testb
pop
int
outsb
xor
xor
scas
push
inc
mov
lock
jmp
inc
sbb
cmp
push
or
sub
loopne
and
jb
mov
fs
and
test
sbb
push
xor
cmp
addr16
xchg
cwtl
pop
jbe
sbb
frstor
test
orb
jp
mov
das
pushf
xchg
cmp
aam
or
lods
jb
inc
out
push
aam
daa
clc
adc
sub
iret
pusha
jo
sbb
add
or
fsts
iret
in
pop
dec
jmp
mov
dec
mov
imul
adc
xchg
mov
mov
cltd
xor
clc
mov
sbb
sahf
cmp
loope
in
push
xchg
mov
or
popa
jno
ss
sub
sub
cmp
in
pusha
fcmovnbe
ja
cmp
lock
lret
dec
cmp
in
mov
inc
mov
or
fs
mov
nop
jmp
mov
mov
push
pushf
arpl
gs
or
imul
in
lock
sbb
and
mov
fxch
xor
sbb
mov
mov
scas
shll
xlat
shll
ss
lock
les
orb
mov
mov
dec
xchg
jb
in
jg
inc
adc
xchg
lahf
jnp
inc
bound
imul
adc
cli
xor
xchg
adc
cmp
jne
insb
mov
aad
xchg
or
imul
outsl
cmpsb
cli
jge
loopne
movsl
mov
pop
push
mov
jg
push
lds
mov
or
push
cmpl
pop
cltd
mov
movsb
loope
loop
ljmp
out
mov
fistpll
dec
lods
sahf
jecxz
jecxz
rolb
popf
ficoml
xrelease
loopne
push
xchg
sti
add
insl
lret
xchg
out
xor
stos
push
xchg
push
and
out
mov
dec
cmp
cmpsl
out
ljmp
sbb
fcoml
shr
int
sti
xchg
cmpsl
lock
sub
enter
adc
int
cmp
xchg
in
xor
leave
xor
loop
push
leave
cmpsl
sar
dec
or
mov
stc
out
mov
jns
or
inc
ds
jge
ss
pusha
movsb
lcall
xor
and
mov
ljmp
aaa
int3
dec
add
mov
rolb
add
gs
pop
sbb
mov
xor
addb
cmp
repnz
repz
add
push
cmc
push
dec
xchg
negl
mov
dec
jp
mov
fnstsw
xorl
or
jne
imul
scas
sti
or
fadds
sbb
push
addr16
lret
fwait
and
or
les
mov
xor
jge
sbb
push
insb
dec
dec
mov
rorl
dec
fsubrs
push
fimuls
jns
outsb
fdivl
mov
push
inc
mov
cltd
and
mov
push
movsb
mov
shrb
mov
or
dec
mov
sub
icebp
mov
arpl
pop
xchg
sbb
xlat
in
call
aad
adc
mov
ds
sub
insb
sbb
pop
mov
xchg
seta
jb
fidivl
pop
outsb
idivl
sub
rorb
out
lds
std
push
push
or
sub
cli
nop
pop
js
cmp
repnz
xor
mov
popa
jnp
xchg
cmp
sar
cmp
outsb
add
imul
push
sub
jne
dec
mov
test
fists
sbb
push
fs
dec
xor
in
sar
jb
and
fs
jge
iret
push
outsl
test
pop
push
and
test
adcb
fisttpll
or
sub
inc
jno
push
mov
enter
or
ljmp
gs
bound
cmp
rcrb
leave
dec
lahf
loop
sbb
ficoms
lods
into
push
aam
fs
lods
inc
push
shl
mov
mov
jecxz
fbld
and
or
xor
xor
mov
outsl
stos
fiadds
pop
jns
push
lods
pushl
or
in
cmpsl
gs
mov
adc
mov
aad
cmc
mov
pop
arpl
mov
jl
sbb
jne
fidivrs
adc
cli
arpl
repnz
sbb
xor
in
sbb
push
or
les
into
outsl
fmulp
int
xchg
push
sub
arpl
fwait
sub
test
inc
es
push
pop
rol
insb
ficompl
out
mov
adc
clc
mov
dec
shlb
inc
fxch
inc
adc
and
js
pusha
mov
lret
mov
xor
push
cmpsl
subb
fbstp
mov
and
sbb
pop
push
cmp
add
fists
cltd
shrb
mov
icebp
xchg
cmp
fwait
dec
in
cld
cmp
iret
insb
ss
or
lds
in
fstl
loopne
shll
jae
aas
out
incb
stc
pop
xor
addb
push
imul
loope
add
jge
mov
add
xchg
xor
daa
adc
sub
lea
pop
dec
and
adc
mov
push
nop
cli
lods
jmp
xchg
daa
push
xor
out
imul
dec
mov
test
xchg
mov
sbbb
std
scas
cli
in
sub
sbb
pop
add
aaa
aas
and
xchg
js
aam
add
loopne
imul
sub
les
mov
dec
loope
push
add
xchg
mov
push
test
clc
push
std
jns
mov
ss
rolb
inc
sbb
test
subb
push
pop
insb
pushf
loopne
imul
cli
mov
push
adc
in
iret
daa
add
cmp
pop
scas
fldl2t
mov
into
ja
cmc
int3
scas
loopne
and
aaa
mov
inc
ret
lret
icebp
imul
adc
jp
cmp
xor
xchg
mov
dec
xchg
fsubrs
fists
dec
insb
mulb
and
loopne
cmpsb
add
pop
insb
ds
pop
xchg
mov
imul
adc
mov
repz
andb
mov
adc
xor
inc
mov
or
fldenv
nop
adc
stc
mov
mov
dec
pop
imul
imul
popf
lock
and
shll
cli
cmp
cmp
bndstx
dec
out
lds
pop
aad
jle
pop
ret
mov
inc
pop
outsb
sbb
fdivs
cmp
in
mov
shl
cld
into
sub
push
push
fdivr
push
mov
or
mov
les
lea
cmp
mov
pop
jmp
xchg
rclb
sub
sbb
orb
je
xor
jp
rcll
js
xchg
insl
test
clc
cmp
add
xchg
sbb
loope
mov
push
xor
inc
sub
cld
sub
out
ret
sar
cwtl
int3
imul
add
inc
std
divl
lret
cmpsl
and
jecxz
adc
sbb
aaa
push
imulb
shl
mov
ss
mov
pop
sub
adc
xor
and
sbbb
into
xor
jbe
fldcw
enter
ret
lret
and
push
adc
mov
cmpsl
in
jne
dec
adc
mov
push
mov
test
shll
adc
shll
movsb
pop
mov
shl
xchg
jl
dec
scas
and
push
iret
aam
cmpsl
jg
outsb
and
adc
sahf
in
mov
enter
stos
mov
fmull
ja
int
adc
movsb
popa
push
mov
lds
jb
jmp
dec
test
cmp
xor
nop
mov
adc
inc
stos
pop
xchg
jmp
or
add
pop
popa
pop
sbb
mov
sar
mov
in
mov
fsubrl
iret
std
mov
add
jae
les
mov
jle
aam
sahf
nop
data16
ss
movsb
lods
mov
hlt
js
cmc
btc
andnps
insl
sbb
or
cmp
push
sub
xor
jnp
popa
hlt
and
in
push
mov
or
cmc
sbb
dec
xlat
mov
aam
jno
imul
pop
mov
daa
inc
ljmp
push
fnstenv
icebp
out
cmpsl
ds
sub
je
in
mov
cld
adc
sahf
sub
std
push
dec
pushf
lods
jno
hlt
inc
jo
outsl
add
pop
or
repz
mov
mov
iret
dec
or
outsb
jnp
mov
fcomps
sahf
bound
adc
clc
dec
xor
insl
test
cmpsl
push
and
loop
push
cwtl
and
leave
cmc
xchg
imul
push
lock
lret
pusha
cld
in
aam
mov
mov
or
ljmp
cmp
fsubr
mov
fs
xchg
xor
gs
jns
dec
jbe
stc
xor
sub
addl
xor
mov
mov
les
fsubrl
adcb
scas
decb
mov
adcb
or
jae
jp
push
aad
jl
xchg
push
mov
push
aaa
push
loope
cmp
push
sahf
clc
sub
lcall
in
scas
jbe
inc
pop
dec
stos
fxch
repz
mov
lret
jp
sti
pop
clc
cs
and
ret
mov
cmpsl
out
enter
test
cs
mov
cld
scas
cmpsl
imul
cwtl
mov
pop
mov
mov
aam
outsb
mov
mov
mov
inc
iret
incb
sub
or
fdivrl
sub
pop
push
cmpsb
fyl2xp1
aaa
xchg
cmp
sub
in
xor
push
pop
cld
pop
xchg
mov
and
mov
icebp
fdivs
repz
ss
mov
or
pop
addr16
jno
aas
jae,pn
or
rorb
adc
repnz
sbb
lcall
cmpsl
imul
in
ja
fs
test
in
fcomip
pop
mov
xor
dec
mov
sub
lret
shrl
addr16
test
adcl
shlb
ret
xchg
gs
lea
shr
bound
jbe
dec
cmpsb
les
test
fdivp
scas
xchg
and
mov
mov
push
icebp
movsl
push
daa
in
fs
aaa
hlt
nop
das
ret
sbb
sub
pop
pop
jl
mov
test
fiaddl
sub
push
ficompl
pop
xor
mov
jle
aad
lret
sub
stos
and
mov
adc
push
mov
sub
cli
add
movsb
xchg
pop
loop
jl
gs
inc
sbb
jle
mov
pusha
cmpsl
nop
clc
mov
mov
sub
or
push
iret
dec
out
inc
sbb
mov
sbb
mov
out
sbb
cmp
pop
scas
push
mov
nop
outsb
decb
mov
popa
xchg
add
leave
adcb
repnz
dec
in
in
push
xor
and
mov
adc
mov
es
jb
jnp
rorb
les
mov
repnz
sbb
dec
cmp
xlat
push
mov
mov
jbe
enter
fwait
jmp
adc
xlat
jmp
xor
outsb
xchg
inc
clc
push
mov
jno
and
sub
push
mov
cmc
loope
sub
mov
pop
lcall
sahf
out
push
ret
daa
jp
arpl
jg
adc
fcoml
retw
pop
lock
out
subb
lret
push
push
xlat
cmp
in
add
push
fdivrl
addb
jg
xchg
sbb
jns
sahf
sub
mov
std
pop
das
mov
or
clc
xor
mov
xchg
outsl
mov
and
outsl
push
and
mov
xchg
test
iret
mov
push
push
les
mov
dec
in
xor
pop
or
cmp
xchg
out
inc
sbb
lea
mov
jne
fsubrs
add
lods
xor
cmp
ljmp
sahf
lods
lds
fmuls
mov
xor
xchg
push
fcmovbe
inc
popa
push
mov
insl
push
add
insb
mov
jmp
rol
roll
rclb
pop
sbb
pop
jmp
negb
or
mov
push
jnp
mov
pop
xchg
mov
lock
mov
adc
or
idivl
out
pushl
lret
xor
jg
add
les
aaa
pushw
sbb
mov
fadds
and
loopne
mov
ret
jne
or
xchg
xchg
test
std
leave
cwtl
movsb
testl
lcall
js
and
inc
sbb
pop
fimull
push
jg
cmp
movsl
dec
mov
or
mov
in
popa
xchg
sub
ret
cmpb
cmp
iret
mov
lret
inc
fbld
cld
aad
mov
inc
mov
lods
or
in
cmp
icebp
stos
test
hlt
mov
cmpsb
js
into
jnp
pop
popf
fstpl
or
dec
pop
push
xchg
mov
fnsave
mov
sbb
jle
repz
xor
aam
xchg
jmp
push
mov
jb
xchg
fs
adc
mov
fnstenv
pop
pop
cmpsl
sub
sbb
mov
sbb
iret
stos
push
in
cmpsb
fistpll
jbe
cld
aad
fsubrl
cld
data16
xchg
mov
in
bound
add
pop
add
stos
daa
dec
jo
sbbl
aaa
jbe
ja
ret
xchg
mov
out
movsl
inc
sbb
push
mov
cltd
mov
add
xor
popf
add
leave
stos
out
cmp
xor
fsubrs
stos
inc
push
dec
cmpsb
call
xor
mov
mov
push
jno
adc
mov
cltd
inc
mov
push
cld
arpl
ret
inc
loope
lcall
sub
test
cmp
add
sahf
xor
mov
jg
addl
std
ret
jne
mov
test
inc
cld
mov
xchg
dec
in
add
push
push
sbb
in
test
loop
frstor
fnstenv
cltd
mov
sahf
mov
test
add
rol
add
les
dec
cmc
jle
mov
or
stos
pop
out
xchg
jle
sbb
dec
bound
shll
or
fisubs
sub
mov
or
push
mov
inc
cld
xchg
insb
push
or
adc
repz
jecxz
cmpl
sub
lods
pop
cmpsl
cmc
jg
push
mov
andb
jnp,pt
jl
ret
test
scas
mov
or
xchg
mov
ficoml
mov
aam
fadds
fidivrl
and
fisttpll
and
mov
jae
inc
inc
push
sub
and
mov
test
sub
dec
daa
iret
mov
inc
add
pop
pop
pop
aam
mov
pusha
and
cmpsb
test
rcll
pusha
outsb
fstpl
pop
aaa
xor
icebp
movl
aas
add
jp
test
inc
cmp
push
sub
jge
inc
mov
jg
ret
repz
sarl
push
pusha
imul
in
mov
sahf
xor
cmp
adc
rcrb
enter
in
push
sti
xor
mov
ficoml
push
mov
loope
sub
jno
int
push
out
iret
in
lds
jne
stos
push
mov
loope
testl
jle
pop
in
sub
dec
sbb
dec
aad
cld
push
dec
mov
push
aas
ja
lds
inc
fisttpl
cltd
das
subl
mov
push
imul
inc
mov
in
fwait
mov
in
ljmp
inc
push
pop
js
and
mov
xor
or
inc
popf
mov
cmp
push
cli
repnz
xchg
fistps
mov
cld
or
out
jo
call
iret
xorb
stos
iret
fcomi
stc
or
cs
clc
iret
lods
push
sbb
pusha
mov
dec
jnp
add
lret
loope
jmp
or
movq
out
xor
adc
sti
cmp
andb
data16
les
popa
or
shrb
jmp
pop
imul
loop
ret
in
enter
addl
mov
and
xor
pop
add
arpl
sub
scas
mov
inc
xchg
jge
mov
dec
pop
stc
lea
call
leave
in
lods
dec
fwait
movsb
inc
adc
dec
jle
in
imul
mov
xchg
mov
mov
xchg
mov
mov
adc
imulb
aas
mov
test
lahf
data16
les
outsl
insl
mov
mov
fnstsw
jp
int
and
repz
cld
lcall
in
sbbl
add
push
push
sti
aaa
mov
xor
fimuls
xchg
add
and
loop
pushl
mov
mov
adc
out
call
adc
les
test
insb
adc
imull
in
mov
push
dec
pop
mov
mov
test
cmp
jl
pusha
repz
push
pop
out
xchg
fldcw
pusha
test
adc
andb
push
out
sub
test
inc
fimull
jns
aam
or
bound
mov
push
xor
xlat
dec
es
fstpt
cmpl
or
and
ljmp
cmp
scas
mov
sbb
xchg
adc
push
adc
dec
jl
jne
jo
out
jnp
outsb
add
out
ljmp
insl
ss
and
fistps
xor
mov
pop
cli
inc
fwait
and
outsl
outsl
into
and
or
push
dec
dec
test
fimull
stc
data16
sub
cwtl
and
lods
test
inc
jb
mov
es
shl
mov
sub
dec
stos
mov
and
mov
dec
cwtl
cwtl
dec
aam
jnp
ja
stc
jp
push
fwait
cli
adc
pop
adc
cmp
pushf
les
add
sub
sbb
xchg
pop
iret
repz
xor
loopne
pop
or
mov
cli
test
lock
and
in
aam
sub
push
int3
and
popa
adc
ss
fmul
mov
fs
pusha
adc
mov
cmpsl
in
shl
nop
dec
xor
shll
bound
ljmp
inc
mov
push
pop
jo
into
lods
sahf
test
iret
cmp
cmc
dec
push
cwtl
dec
mov
repz
sbb
icebp
arpl
ja
dec
loopne
jle
jnp
and
push
jb
int
mov
cmp
inc
loopne
adc
andl
ss
gs
jmp
xchg
divb
pushf
pop
popf
rclb
add
negb
pop
enter
mov
rcrb
jmp
xlat
mov
pop
and
mov
mov
test
stos
ja
and
xchg
sub
shlb
std
aaa
mov
mov
mov
hlt
push
in
xchg
mov
or
sbb
push
or
mov
out
mov
pop
call
inc
out
aas
fldt
cmp
gs
imul
dec
ss
sub
arpl
push
mov
mov
jno
push
mov
loopne
fnstsw
iret
out
dec
out
sub
ret
push
adc
mov
pop
cmp
jge
movsb
pop
out
or
mov
pop
imul
mov
sub
out
jno
push
testb
sbb
repnz
inc
push
out
popa
dec
dec
shlb
das
in
or
add
sub
adc
inc
pop
loopne
xchg
and
dec
jg
adc
scas
inc
jns
and
mov
dec
mov
mov
int
lods
sbb
push
lahf
sbb
jp
jle
insb
lds
mov
mov
mov
daa
ret
sbb
push
jo
mov
repnz
incl
out
aaa
inc
jecxz
stos
cltd
fcmove
int3
sarb
mov
fsts
adc
pusha
rclb
mov
mov
outsl
adc
sub
cmc
aaa
mov
inc
ljmp
pushf
push
dec
dec
mov
movsl
or
outsb
jno
imul
adc
adc
xor
cmp
loopne
sub
sub
ja
cmp
lret
imul
js
mov
icebp
stc
inc
aam
ret
sbbb
addb
cmp
sahf
jno
dec
out
dec
push
fsub
mov
int3
xchg
cmp
call
mov
insb
leave
and
daa
jnp
or
insl
idivl
mov
pop
sub
dec
int3
pop
hlt
mov
push
lock
sti
push
mov
mov
das
stc
mov
or
push
push
std
jle
inc
ljmp
call
iret
jmp
inc
dec
push
cld
in
mov
jmp
bound
aad
bound
sbb
lahf
es
mov
imul
movsb
xchg
aas
ds
pop
push
push
xor
stos
jmp
outsl
or
push
push
aam
cmp
xchg
imul
xlat
jno
and
add
nopl
loop
imul
inc
dec
loopne
add
lcall
and
inc
das
xor
jbe
movsl
out
xchg
xchg
add
add
pusha
inc
fsts
lods
inc
add
xor
das
dec
enter
mov
lcall
and
popl
lret
dec
in
iret
push
inc
mov
lock
rcll
lds
call
xor
jns
out
xor
loopne
aad
xchg
pop
jp
mov
mov
add
fbstp
stc
jp
sub
std
cltd
pop
cmc
jne
out
sub
stc
lret
addr16
cmp
xchg
cmp
cmpsb
cmp
mov
ja
inc
loope
xor
sbbl
push
call
xchg
fwait
pusha
testl
sub
sbb
shll
rol
cmp
test
dec
daa
add
js
insb
add
popl
mov
or
sub
dec
in
mov
push
xlat
outsb
test
adcb
sbb
aas
push
adc
call
pextrw
sbb
iret
fnstcw
pop
pop
push
pop
icebp
inc
vpunpckhbw
fucomi
cmpsl
push
adc
decb
jecxz
negb
out
push
pop
add
mov
fcoms
or
jns
aaa
sub
xchg
mov
outsl
mov
dec
loopne
fidivs
push
push
xchg
out
pop
fdivl
push
pop
sahf
dec
add
mov
and
jnp
xlat
outsb
stc
xor
cltd
push
mov
mov
addb
adc
add
lods
ss
and
inc
push
xor
test
arpl
xchg
gs
adcl
or
pop
mov
add
sub
or
nop
sub
pop
mov
jne
jp
jmp
cmp
mov
adc
aaa
into
imul
pop
repz
imul
mov
and
mov
xor
data16
push
mov
jo
jne
or
int3
xor
std
inc
dec
loope
sub
fs
xchg
push
subb
dec
loopne
adc
pop
fs
xchg
jno
sub
jb
cmp
mov
sarb
shll
scas
iret
data16
pop
out
mov
out
test
movsl
push
movsl
dec
inc
xlat
jg
push
jmp
mov
jb
leave
std
mov
das
pushf
xor
push
test
adcl
andl
mul
jnp
cmc
sub
and
mov
jge
lcall
in
inc
fstps
in
fidivl
inc
inc
fnstenv
mov
adc
xchg
cs
dec
in
out
cli
xchg
sbb
lret
cmp
mov
loopne
lea
loopne
jae
xor
mov
xor
xchg
imul
dec
loope
in
jecxz
xor
call
add
aad
jne
in
xchg
adc
int3
arpl
adc
stos
xchg
jns
leave
out
call
cmp
add
push
ljmp
fnsave
and
adc
or
repz
je
sbb
into
dec
pushf
pop
sahf
leave
mov
mov
cmc
aaa
mov
iret
dec
rcrl
sbb
or
xchg
sub
push
out
inc
jg
dec
mov
jne
xchg
imul
lea
push
xchg
cwtl
push
rcrb
xchg
mov
mov
repnz
fdivs
push
rcrb
jmp
mov
and
lcall
mov
pop
in
test
xchg
xor
push
mov
and
mov
jge
es
add
sahf
movsb
stos
inc
flds
mov
xchg
stos
lret
fimull
int
js
outsl
push
cwtl
movsb
imul
mov
loope
jge
xchg
sub
movsb
lea
subl
jl
icebp
mov
jl
js
dec
in
test
mov
inc
fdivl
jo
add
jnp
jb
dec
call
cmpsl
cmpsb
mov
xlat
jns
shrb
jne
sub
leave
lods
inc
push
cmc
mov
and
mov
cmp
js
data16
lods
cltd
cmp
movsl
sti
out
jecxz
sbb
ds
hlt
imul
mov
xor
into
adc
rclb
pop
hlt
addr16
fdivl
outsl
sub
xchg
cmpl
mov
cmp
popf
imul
mov
sub
fs
cltd
xchg
mov
insl
cmp
in
xchg
xchg
test
mov
leave
shrb
lahf
pop
jle
mov
xchg
sub
insl
inc
fcomps
xchg
push
shll
mov
jnp
mov
scas
mov
cmpsl
cmpsb
dec
je
jl
add
xlat
outsb
inc
ficompl
xchg
mov
popf
dec
cwtl
das
jg
mov
mov
inc
fstp
jo
ret
sub
ja
das
scas
mov
mov
lods
cmp
inc
fsubs
jno
push
movsb
cmp
push
jno
sbb
or
mov
es
xchg
cmpsb
push
xlat
xchg
pop
ja
testl
insl
add
inc
mov
pop
test
sbb
loopne
xchg
sub
pusha
ja
nop
scas
mov
clc
jbe
test
and
arpl
test
sub
insl
mov
jl
jle
hlt
mov
lcall
push
idivl
and
inc
lods
inc
jns
sbb
aad
scas
inc
inc
repz
outsl
and
inc
insb
add
sbbl
lahf
sub
int3
push
sub
xor
testb
dec
mov
jle
test
aam
mov
imul
dec
sbb
jle
jbe
int3
cltd
mov
iret
jmp
push
and
add
pop
dec
cli
xchg
jnp
and
rcrl
out
in
mov
ja
pop
icebp
bound
lds
jo
add
aam
outsl
daa
or
mov
fiadds
xchg
or
xchg
sub
pop
adc
ljmp
sti
xchg
xchg
int
add
in
push
call
ss
push
cmpsl
pop
sbb
add
fbstp
cmc
sbb
movsb
dec
push
out
leave
fnstenv
xchg
fs
adc
jne
jmp
pop
and
cmpsl
mov
int3
cli
xchg
cli
stos
push
jmp
adc
pop
dec
or
xchg
ds
test
mov
xor
push
and
xchg
inc
pop
xor
jle
scas
iret
data16
ja
or
mov
xchg
outsl
push
aad
in
es
test
dec
mov
mov
xchg
insl
add
test
xor
in
mov
sub
dec
push
imul
repz
sbb
sarl
add
daa
and
pop
cmp
jp
fldcw
ret
cli
adc
fmul
loopne
pop
pushf
xor
mov
push
xchg
jp
hlt
scas
mov
adc
dec
push
les
addr16
xchg
xchg
push
adc
into
xor
sti
add
cmp
push
out
imul
rorb
xchg
sub
popf
xor
lcall
lret
addr16
call
popa
cmp
fnstcw
fmuls
scas
das
sub
jp
lret
fdivrl
xor
mov
add
pop
insb
out
outsl
dec
into
push
gs
andl
addb
inc
test
mov
aas
mov
mov
repz
arpl
test
mov
pusha
leave
cltd
fmuls
popa
push
mov
call
pop
pop
dec
sarb
xchg
test
xchg
jle
or
mov
adc
stos
or
xlat
movsb
mov
ficoml
out
xchg
into
call
or
sarb
in
push
aam
fmuls
test
mov
xor
movsb
pop
add
push
jns
scas
inc
movsl
cmp
push
mov
out
mov
cwtl
or
xchg
ja
jle
xor
js
mov
leave
ds
ljmp
mov
out
fcmovb
mov
inc
fdivs
pop
pop
stc
xor
int
xchg
cs
out
and
mov
push
push
push
scas
push
and
ljmp
lds
imul
andb
lahf
mov
xchg
add
lods
push
xchg
jl
jmp
mov
cmpsb
mov
repz
pop
cli
movsl
mov
cmc
pop
rcll
jecxz
out
pusha
into
push
stc
fcom
stos
pop
call
scas
xchg
sub
rcrb
mov
sub
cmpsl
out
sbb
ljmp
cmp
add
mov
fwait
add
stos
gs
xor
and
ficoml
sub
aaa
xor
push
jmp
cli
out
fs
rolb
cli
or
sbb
cli
js
mov
cld
dec
jg
push
mov
dec
repnz
push
aam
mov
cmp
mov
add
push
test
or
xchg
cmp
imulb
cwtl
pop
aaa
fdivl
in
mov
ss
jmp
and
mov
add
rclb
xor
inc
mov
sub
push
js
cmp
cmp
imul
pop
stc
or
in
sbb
outsb
adc
xor
jmp
or
mov
call
std
jmp
mov
xlat
cmp
je
sbb
mov
aaa
push
cmp
in
sbb
or
pushf
aas
out
test
in
addl
xor
fs
inc
mov
or
insl
orl
sub
and
es
sarb
adc
jb
test
dec
hlt
mov
or
fld
aaa
jmp
mov
cli
dec
insb
pop
push
mov
jb
les
mov
mov
xor
sahf
lods
stc
daa
adc
es
xchg
fsubrs
fisttpll
adc
mov
call
fldl
sti
fisttps
test
adc
enter
ss
outsb
je
movsb
pop
clc
xor
xchg
mov
idivb
fs
sbb
pop
lock
add
pop
js
lds
cli
push
ljmp
sub
push
pop
loopne
jae
mov
mov
jecxz
pop
leave
fsubrl
jecxz
cli
nop
roll
pushf
into
pop
shlb
inc
leave
into
add
add
inc
xlat
hlt
xchg
mov
pop
ljmp
push
notb
test
xchg
inc
mov
mov
inc
popf
push
cmp
mov
out
push
out
mov
mov
xchg
int
xor
into
test
sbb
mov
ljmp
lcall
jp
hlt
adc
in
pushf
jno
mov
lahf
xor
ja
cli
sub
pop
lock
push
mov
mov
imul
xchg
addr16
sarl
loopne
popf
xor
add
cmp
out
call
cwtl
out
pop
nop
mov
loop
pop
lret
xor
notl
clc
gs
jg
and
cmp
loopne
jg
mov
nop
xor
sbb
add
jb
or
jg
adc
into
hlt
xor
mov
call
jl
adc
stos
faddl
sbb
int
push
mov
push
or
repnz
out
mov
jmp
ljmp
sub
or
in
cwtl
xchg
pop
xor
rcrl
pop
aad
mov
sub
mov
out
and
pop
cltd
jne
sub
jp
mov
jnp
push
int3
push
mov
inc
test
mov
xchg
push
addb
daa
jle
mov
dec
mov
xor
popa
fwait
jno
mov
mov
pop
or
scas
bound
cmp
jle
mov
adc
and
inc
stos
arpl
dec
pop
pop
movsl
push
ds
and
and
enter
jbe
mov
enter
mov
jbe
loopne
cmc
adc
pop
jno
js
dec
xor
jp
pop
sbb
adc
or
and
test
cmp
lock
sub
pop
or
rorw
ljmp
mov
dec
sbb
mov
sti
cmp
cld
inc
adc
mov
test
mov
mov
hlt
out
xor
test
shlb
cmc
lods
inc
mov
pop
shll
xchg
mov
sub
clc
jns
outsb
mov
xchg
xchg
mov
xchg
insl
adc
xchg
das
imul
add
cwtl
dec
shrb
xor
jge
jp
loopne
lcall
jne
popf
xor
sub
sbb
in
cs
iret
cmp
push
sub
jp
bound
sbb
jg
xchg
cs
bnd
nop
hlt
rcr
jbe
adc
test
push
pop
out
xor
push
les
sbb
cwtl
dec
sub
inc
cmp
movsb
jns
cwtl
mov
nop
aam
arpl
insb
test
sub
je
mov
mov
jmp
call
jno
and
cmc
xchg
das
loope
mov
add
cs
add
and
mov
cmpl
mov
xchg
fcmovb
sahf
xchg
fst
dec
mov
jecxz
push
aam
fnstcw
xchg
notb
aaa
mov
out
fnsave
nop
xchg
push
jl
bound
xchg
jbe
stos
imul
inc
mov
mov
mov
lods
inc
dec
lods
add
jo
mov
adc
xor
popa
fwait
sub
das
js
push
iret
jl
add
test
xor
mov
cmp
mov
dec
aad
repz
xchg
and
inc
and
push
lcall
xchg
jmp
fsubr
add
sarl
out
cmp
adc
or
js
sbb
sbbl
andl
pop
test
mov
ret
test
aad
sarl
rorl
push
outsb
movsb
insb
add
mov
dec
arpl
adc
int3
arpl
arpl
inc
fs
dec
pushf
aaa
lods
pop
orl
je
cmpxchg
out
xchg
les
mov
cmc
in
lret
ret
push
not
cmp
in
push
push
fldcw
sti
cmp
mov
jmp
imul
mov
cmc
dec
jecxz
and
fcompl
or
add
sbb
sub
adc
ret
ret
in
loop
into
inc
mov
out
mov
in
and
xchg
in
gs
enter
cmpsb
into
xor
jmp
mov
mov
inc
push
out
cmp
aas
cmpsb
xchg
push
or
loope
les
aam
mov
jmp
stc
xchg
in
dec
mov
cltd
cmp
xchg
push
loopne
ja
inc
scas
lds
sub
loop
lea
add
jge
fsubrl
sti
xor
rclb
add
mov
pushf
mov
inc
push
xchg
xchg
nop
cs
popf
mov
insb
imul
pop
sub
push
lret
test
fidivrl
or
xchg
addr16
jmp
cmp
sbb
arpl
fidivrl
push
xor
aam
pop
xchg
and
imul
cmp
test
xchg
pop
jo
jno
cmpsb
addr16
push
pop
enter
js
das
sub
mov
addr16
mov
sub
or
punpckhdq
lods
cmp
mov
jae
dec
aad
aaa
xor
mov
sti
adc
lret
rcrl
xchg
in
jge
test
jne
rorb
out
ss
popa
mov
movsb
ja
jbe
daa
xor
scas
lods
fs
cmp
jo
and
shll
dec
xor
test
mov
mov
inc
sub
shrl
mov
xor
inc
mov
jo
push
mov
popa
stc
push
pushf
mov
fsubl
cld
fabs
sub
cld
lret
push
sbb
mov
imul
fnstenv
das
ret
sbb
mov
mov
add
es
test
and
roll
insl
jg
xor
xchg
sub
gs
push
adc
pop
cmpl
dec
lahf
ss
mov
lcall
mov
mov
cwtl
or
pop
mov
fcmovnbe
push
in
pop
push
adc
mov
scas
icebp
aad
cld
lock
shlb
sub
add
cmp
and
inc
jg
aam
add
arpl
mov
xchg
push
jb
and
cmp
jg
add
sub
and
cli
xor
mov
loopne
cli
test
cmp
movsl
mov
jecxz
add
jb
bound
jp
imul
cmp
mov
add
aas
lods
pop
aad
jb
mov
push
push
ret
dec
or
pop
enter
ds
stos
add
out
mov
out
and
jns
jp
lea
gs
dec
loopne
xchg
xchg
jge
push
sub
jo
mov
sahf
and
mov
sti
push
das
jge
je
aaa
inc
push
xchg
mov
fistl
daa
adcb
push
mov
clc
bound
lea
adc
lahf
sbbl
cmpsl
cmpsl
jno
sub
cmc
dec
loopne
jae
cmp
cmp
push
dec
out
pop
xor
add
push
sbb
sub
clc
rclb
je
aas
push
mov
in
iret
data16
lods
pusha
outsb
sbb
dec
pop
xchg
xchg
inc
jo
mov
pop
dec
pop
aam
jnp
aam
xchg
daa
in
and
repz
montmul
cmpsb
ret
add
idiv
xor
stc
in
and
ror
pop
add
mov
ds
repnz
mov
mov
push
pop
out
fildl
cmpb
lods
pusha
cmp
and
js
push
dec
outsb
aad
mov
ret
fsts
les
jno
es
inc
mov
orb
nop
pushf
inc
ja
push
push
dec
loop
jae
in
je
icebp
inc
mov
loop
inc
pop
adc
xor
call
daa
pop
out
dec
mov
fisubl
jne
mov
sub
pop
and
jmp
iret
ja
imul
add
popf
sarl
adc
push
daa
movsb
popa
fwait
and
imul
push
adc
mov
push
and
aad
adc
fisubrs
lea
mov
xchg
jo
adc
adc
addr16
jmp
shl
in
rcll
fildl
add
fstpt
shl
adc
add
adc
out
sub
mov
insl
je
push
ja
mov
xchg
stos
jbe
popa
jbe
inc
jmp
js
cmp
test
sarl
sahf
jo
sti
daa
into
inc
jno
cmp
jae
iret
dec
mov
js
insb
sub
cmp
ret
sbbb
push
and
fstpt
add
mov
xor
pop
nop
push
sub
sahf
je
pop
popf
mov
cmpsb
pusha
adcl
push
adc
test
in
push
ret
sub
fmull
push
pop
xchg
add
test
mov
in
add
mov
sti
int
mov
fdivl
add
idiv
negl
les
push
popf
aaa
and
mov
mov
cmc
icebp
mov
aam
sub
push
sub
arpl
loope
jmp
pop
scas
lds
push
cmpsl
fdivs
adc
je
xchg
js
cmp
pop
mov
cwtl
xchg
mov
in
jle
fldl2t
divb
int
dec
shl
fcmove
imul
mov
mov
dec
cmpsb
leave
sbb
loopne
fwait
into
lds
jne
push
mov
ss
and
lret
adc
test
xor
or
clc
sub
ret
cmp
into
and
fldl
iret
xor
fcmovne
rolb
inc
stos
jmp
or
clc
scas
scas
pushf
test
and
enter
sub
sbb
dec
test
gs
cmp
jg
das
add
inc
int
dec
out
sbb
sub
mov
ret
mov
sub
jmp
int
mov
sbb
or
lods
scas
mulb
shl
ror
lds
in
pop
mov
sub
clc
pop
mov
ljmp
dec
pop
divl
test
mov
push
ret
or
ret
jbe
aaa
lods
call
sti
mov
inc
enter
dec
jmp
inc
xlat
and
sub
inc
xlat
xchg
mov
or
test
dec
mov
ucomiss
dec
addr16
pop
repz
fcomps
sub
inc
push
adc
fs
and
arpl
xor
out
ss
sbb
cmp
push
and
inc
cmp
cwtl
inc
arpl
cmovns
movsb
push
dec
aad
push
push
dec
mov
vmwrite
ds
inc
adc
addr16
jo
mov
imul
cmpsb
add
add
es
mov
mov
fnstsw
adc
imul
and
nop
jo
jl,pn
insl
mov
fwait
outsb
pop
push
cmpl
adc
movsl
jge
push
and
in
stc
push
dec
mov
jmp
stos
push
jo
push
call
hlt
inc
adc
movsb
xchg
sbb
ja
xor
mov
lea
mov
or
rorb
xchg
mov
sahf
ret
push
data16
outsl
nop
mov
sub
arpl
cltd
outsb
mov
sti
pop
xchg
mov
cltd
imul
lds
daa
jmp
push
cmpsl
xchg
or
sub
js
sarl
ds
mov
jl
test
adc
call
cmp
enterw
mov
jo
jno
fsubs
adc
adc
and
dec
int
ss
mov
fdivl
dec
xor
fldt
sub
jl
sbb
push
cmpsl
lods
pushf
xor
xchg
xchg
out
daa
ljmp
adc
adcl
out
and
mov
fldl
repnz
jns
outsl
daa
repz
test
insb
mov
sub
dec
mov
add
std
cmpsl
jl
std
mov
mov
pushf
cwtl
cmpb
pusha
stos
movsb
lahf
xchg
sub
adc
mov
lds
pop
mov
adc
cmpsb
ds
fwait
mov
popa
imul
pop
cs
je
rorb
stos
shll
lock
and
lods
fdivl
mov
push
daa
add
and
xor
std
sbb
jl
dec
inc
into
fbstp
pop
mov
dec
or
xchg
jl
or
clc
pushf
xor
movsb
subps
cmp
fs
add
jecxz
jge
orb
inc
sbbl
ja
dec
data16
es
aad
cmp
jns
and
cmp
pop
not
dec
rclb
outsb
pop
repnz
pop
mov
les
idivb
inc
mov
fneni(8087
sbb
out
sbb
fdivs
call
jmp
jb
jns
movsb
pop
or
test
jecxz
mov
and
addr16
dec
push
les
pop
inc
mov
inc
scas
popa
push
stc
pop
xor
and
in
nop
enter
pop
js
fildl
lea
push
ror
jg
cmpsl
cmp
jns
or
xor
in
out
sbb
xor
or
mov
dec
push
sub
pop
mov
dec
mov
jb
ret
pop
xchg
into
je
fmuls
rcrl
fimuls
dec
lahf
mov
repnz
dec
inc
jne
mov
rorb
js
fildl
stc
add
jmp
cltd
add
xrelease
es
test
mov
push
mov
or
push
lret
or
cli
roll
icebp
sbb
mov
cmc
pop
add
iret
addb
pushl
out
jno
jo
xor
add
lods
jb
and
adc
test
xchg
adc
lea
or
cwtl
std
sub
mov
shrb
cmp
mov
cmp
xlat
arpl
and
data16
xor
lret
mov
mov
add
imul
scas
jb
inc
dec
out
stos
hlt
outsl
mov
enter
es
cmpb
je
adc
jo
add
test
hlt
push
ja
sti
xor
mov
cli
inc
mov
push
bound
inc
ss
mov
addr16
insl
pop
insb
inc
nop
pop
inc
out
and
xor
sbb
test
cs
mov
rorb
daa
dec
jne
sarl
pop
ret
inc
fsubs
dec
mov
mov
cmp
outsl
aam
adc
cmp
lea
psubb
repz
cmp
adc
sub
stos
xchg
test
cli
fsub
sub
lock
or
hlt
stos
shlb
adc
stos
gs
sbb
cwtl
xchg
fcompl
cmc
scas
loopne
add
sbb
scas
mov
add
fiadds
into
push
push
iret
cmp
and
dec
rol
cmp
outsb
lret
xlat
rcrb
in
fsts
lods
repz
stc
push
aam
popf
xchg
lds
mov
sar
pop
mov
adcb
loop
sub
addr16
sbb
pop
lcall
and
xchg
jns
in
sbb
mov
xchg
lods
dec
mov
std
ja
cmpsl
inc
fildll
fstp
xor
movsl
fidivl
into
sub
inc
mov
adc
push
mov
aaa
lods
push
out
jae
in
mov
pushf
mov
cmp
push
add
lock
sub
jp
adc
in
test
xchg
push
push
and
mov
xchg
mov
pop
stos
pop
mov
or
mov
jmp
mov
fs
psubb
add
fnstenv
and
dec
xor
movsb
inc
add
lds
xor
jne
sub
fnstenv
insl
data16
push
jns
fidivrs
jb
xor
int
popf
popa
mov
inc
sub
roll
repnz
ficoms
std
in
sub
xor
pop
push
testb
inc
dec
mov
mov
hlt
or
xor
pop
mov
cmp
dec
in
outsl
xchg
jge
rcll
js
mov
push
mulb
fnsave
stc
and
mov
cmp
out
mov
ret
sti
xchg
jle
mov
lods
test
movsb
outsb
jmp
jbe
pushf
les
aam
hlt
jno
mov
sub
in
lods
into
and
or
or
ljmp
and
xchg
xorb
mov
in
fs
unpcklps
test
lret
lock
hlt
mov
jmp
add
pop
ja
fcoms
and
xchg
adc
xor
mov
dec
ficoml
jns
movsl
xchg
stc
shrl
repz
nop
out
enter
dec
cmp
dec
shl
pop
shrb
mov
cmpsl
test
test
sub
mov
mov
mov
out
outsb
sahf
into
test
mov
sahf
pusha
pushf
stc
call
jne
rcl
scas
in
dec
in
add
sub
or
mov
cli
sub
cld
push
push
loope
aam
add
les
sbb
mov
test
mov
inc
mov
and
push
mov
pop
jl
out
push
mov
imul
cmp
pop
add
gs
jmp
push
xchg
sub
pusha
divb
xchg
sub
pushf
mov
and
dec
iret
jno
mov
xchg
push
mov
xchg
push
fiadds
daa
cmp
jp
mov
stc
sbb
xchg
xchg
fwait
mov
cmpsl
mov
fnstcw
loope
push
dec
shll
fnstenv
pusha
int3
jmp
jne
push
mov
pop
mov
movsb
pop
fdivp
jg
lods
inc
mov
dec
rorl
arpl
xor
jno
mov
push
notb
jp
ret
cmpsl
jnp
leave
push
push
shll
mov
rcl
xor
pop
mov
or
xor
hlt
fisttpl
stos
adc
pushl
test
xchg
lcall
gs
aaa
call
fs
movsb
mov
push
leave
push
and
lock
lidtl
and
xchg
mov
ficomps
scas
paddq
add
es
pop
adcl
popf
xor
aad
or
int
push
ljmp
nop
daa
pop
and
jno
jnp
inc
lods
jae
movsl
into
int3
arpl
push
lods
clc
and
adcl
or
pushf
es
out
sbb
dec
adc
cli
fwait
arpl
sbb
mov
arpl
push
aaa
inc
or
cmpb
mov
mov
out
daa
mov
cmp
inc
fnsave
pop
sbb
subl
sbb
call
xor
mov
or
xchg
sub
sahf
fdivl
clc
scas
inc
sub
cli
xchg
and
int
jle
sbb
rcll
or
sbb
mov
outsb
xchg
inc
fmul
nop
daa
shr
cli
sbb
scas
inc
adc
ss
arpl
lahf
rorl
push
adc
or
push
mov
nop
mov
fcoml
scas
or
das
xor
pop
pop
adcl
stos
shll
add
es
es
and
jb
jns
inc
stos
jae
nop
movsl
int3
lret
inc
pop
scas
negl
ljmp
jb
lahf
mov
les
mov
out
push
inc
faddl
out
mov
jecxz
inc
adc
shrb
dec
mov
jo
pusha
xlat
outsb
xchg
pop
cmc
mov
mov
stos
and
push
in
cli
inc
xor
je
xchg
outsb
movsb
cmp
addr16
dec
or
jne
adc
data16
xor
test
push
xchg
aam
cmpsl
pop
mov
sarb
jmp
add
popf
xor
and
shl
das
and
inc
sbbl
mov
add
sub
out
pop
icebp
testb
and
pop
jns
inc
adc
out
xchg
data16
sbb
ret
cmp
jecxz
push
xchg
add
je
and
sbb
aas
jle
jno
jge
push
mov
jb
stc
sub
jns
mov
je
mov
jmp
mov
xlat
out
cltd
cmp
aas
cmp
push
lcall
push
popa
imul
mov
jns
mov
popa
cmpsb
mov
or
vpshad
ret
decl
icebp
jb
adc
mov
cmpsb
fcompl
sub
sbb
add
decl
mov
jl
or
adc
xchg
push
outsb
ret
pop
xchg
xchg
out
movsl
push
test
pop
cmp
test
mov
fimuls
inc
lods
xor
sub
js
dec
lret
stc
or
addr16
jmp
jo
scas
add
loope
rolb
int3
pop
sbb
sbb
xor
pop
cmpsb
shld
jno
jb
vandpd
or
dec
mov
push
jo
push
jb
or
pop
xchg
or
addb
idivb
pop
pop
popa
sbb
xchg
mov
pop
sahf
mov
fisubrl
je
call
data16
cmp
sbb
jge
inc
mov
sub
push
inc
pop
pop
in
xchg
aam
cmpsb
xor
cmp
loope
sbb
sub
push
pop
mov
xor
push
push
add
stc
into
inc
sbb
mov
sbb
cli
sbb
mov
ds
or
cmp
das
fs
loopne
test
mov
sbb
sbb
lock
enter
jb
loopne
movsb
and
notb
ficoml
jmp
int3
out
addr16
sub
movsl
pop
rorl
xchg
popl
xor
sarb
dec
fnstsw
sbb
add
mov
ss
push
adc
mov
ret
sub
das
out
cmp
jmp
mov
dec
push
ret
cltd
and
inc
hlt
sbb
sti
fidivl
maskmovq
mov
lcall
inc
lods
push
xchg
mov
das
rorl
xchg
sub
cwtl
pop
cmp
sbb
sbb
ja
cmc
sub
cmp
lods
fidivrs
xor
cmp
or
lea
dec
in
sbb
insb
lea
int
jge
sbb
sahf
adc
lcall
and
clc
jp
testl
cltd
or
and
cwtl
sub
cmc
popf
add
jb
or
lods
pushf
xor
pop
ja
pop
hlt
in
xor
bound
cld
sub
hlt
or
pop
jp
cmp
inc
fwait
jecxz
lds
xchg
sub
data16
pop
mov
mov
call
dec
pop
testl
icebp
lahf
lds
imul
mov
mov
inc
hlt
xchg
sub
jns
aas
stos
inc
mov
or
push
adc
imul
movsb
xor
pop
and
scas
lods
pushf
cmp
mov
mov
sbb
lea
les
fcomps
loope
test
ss
inc
push
popf
cmp
add
lea
push
aam
bound
cmp
je
sub
hlt
popa
ret
pushf
popf
cmp
push
add
or
add
ficomps
loope
test
ret
loop
push
popf
cmp
add
test
imul
loope
xchg
mov
lret
cmp
push
add
or
test
ljmp
or
mov
fmul
xchg
add
or
mov
rorl
pushf
push
cli
icebp
dec
sub
iret
test
cmp
mov
out
sub
mov
test
in
jae
mov
lds
mov
mov
dec
adc
popf
inc
mov
scas
data16
in
je
inc
mov
cmp
xor
inc
or
es
sti
mov
stos
jle
arpl
insb
icebp
leave
xor
dec
mov
outsl
mov
pop
add
mov
jp
push
add
bound
getsec
push
pop
dec
and
fsubrs
xor
or
jb
push
pop
add
fadds
std
inc
stos
stos
das
mov
lods
mov
popf
fiaddl
pop
or
mov
push
and
imul
xor
jmp
sti
add
cmp
jmp
sub
push
mull
jmp
add
pcmpgtb
xchg
push
gs
xor
and
lock
rorl
mov
mov
jge
jae
negb
push
in
jecxz
fadds
push
aaa
cltd
dec
in
mov
cltd
push
clc
add
scas
xor
mov
dec
or
sbb
stc
adc
imul
inc
lods
mov
js
or
mov
push
faddl
pop
fcoml
jmp
add
lahf
fbld
mov
das
pop
add
dec
push
cli
loopne
mov
clc
popf
cmp
mov
mov
inc
or
outsb
sahf
xchg
inc
or
mov
pop
push
xchg
inc
arpl
mov
sub
das
scas
scas
roll
loop
mov
cld
sub
pop
dec
or
fiadds
scas
sub
sub
cmp
push
and
mov
ret
fcoms
push
add
mov
mov
mov
pop
das
mov
pop
mov
rcr
call
xchg
cmp
and
lods
pop
sub
sbb
fcomps
in
pop
add
mov
movsb
mov
cwtl
lods
sub
push
xchg
mov
rcr
in
insl
pusha
or
aas
jnp
mov
xor
pop
mov
mov
insl
in
jb
jae
push
imul
xor
js
sub
pop
mull
sbb
in
in
outsb
dec
push
add
cmp
dec
or
shlb
test
cltd
or
out
imul
or
dec
movsb
dec
push
xor
ljmp
pop
pop
cld
add
out
fcomps
xor
add
push
add
inc
cmovbe
stos
or
jmp
insb
inc
je
dec
and
dec
pop
push
lahf
fs
dec
xor
mov
loopne
push
outsl
push
mov
iret
ret
cmp
pop
inc
ds
xor
dec
or
pop
fdivrl
push
mov
inc
stos
sub
cld
std
pop
fisubrl
out
jl
lea
mov
mov
nopl
sub
scas
out
jge
push
enter
mov
jo
sub
inc
xchg
jne
iret
cwtl
dec
adc
sbb
mov
cltd
pop
shrb
sbb
out
xchg
mov
cli
pop
mov
pop
lcall
mov
pop
mov
mov
and
pop
addr16
mov
fdivp
jnp
mov
cmpsl
sub
push
aaa
stos
inc
or
and
mov
mov
lock
clc
fnstenv
push
icebp
sub
lods
dec
cmp
and
sub
jg
dec
ja
imul
and
stos
push
mov
push
mov
sbb
int3
mov
lock
adc
mov
stos
mov
xchg
mov
cmp
push
and
scas
dec
cmp
outsl
xchg
jns
adc
mov
dec
xor
scas
push
lds
lods
inc
mov
mov
sbbl
push
sbb
inc
xor
xchg
mov
mov
mov
lcall
shl
shll
mov
xor
ja
rol
cmpsl
mov
out
mov
mov
adcl
xorl
adc
cmp
mov
mov
rcll
ret
mov
dec
mov
xchg
push
rorb
xor
das
mov
aad
push
push
out
movsl
adc
xor
iret
dec
xor
push
ret
push
sarl
adc
repz
pop
rcrb
pop
std
movsl
xorb
push
pushf
ret
xchg
pop
lea
jp
mov
test
aaa
mov
jg
pop
stos
neg
test
push
pop
and
pop
push
test
cwtl
mov
loope
jne
scas
xor
popa
push
dec
add
jnp
fwait
pop
add
mov
sbb
xor
or
in
jno
pop
pop
insl
mov
inc
adc
pop
cmp
and
out
outsl
fdivrl
xor
pusha
add
mov
lods
ret
mov
xlat
adc
ja
xor
addr16
or
pushf
inc
pop
and
sbb
xor
push
sbb
sbb
pop
dec
orb
popa
gs
sbb
mov
pmaxub
push
jb
test
sub
mov
rorl
jnp
jp
test
cmp
sub
cwtl
xchg
mov
addr16
mov
xor
mov
sub
push
mov
test
or
pushf
push
or
mov
insl
cld
addr16
loope
xor
cmpsl
in
test
add
test
mov
lea
mov
jo
sbbb
ficomps
mov
pop
enter
sbb
fstps
mov
rcr
cs
divb
sbb
mov
in
pop
dec
and
ret
daa
enter
cmp
les
scas
adc
sub
in
sbb
mov
dec
cwtl
ds
arpl
orb
daa
mov
mov
imul
cmpsb
adc
mov
cmp
scas
pop
add
fiadds
test
pop
lea
sbb
test
out
enter
inc
or
pop
and
js
lahf
inc
popf
imul
je
out
ret
mov
pop
lock
nop
xchg
jmp
inc
add
lds
pop
mov
mov
enter
lea
ret
stos
shlb
cmpsb
pop
mov
bound
sub
cmpb
mov
shrl
sahf
lldt
nop
popa
xor
sub
inc
repz
out
xchg
push
aam
decb
push
cmpsb
lock
jge
cmp
insb
idiv
out
xchg
xchg
inc
imul
adc
jg
jle
dec
jo
rclb
or
add
xor
les
mov
mov
pop
mov
mov
insb
add
aaa
mov
sti
lods
adc
mov
mov
mov
fwait
xor
dec
data16
aas
scas
xchg
mov
inc
or
popf
inc
ja
mov
pusha
inc
add
jno
xchg
sti
push
mov
fldenv
subl
mov
jl
adc
insb
pop
stc
cmp
pusha
lock
add
pop
add
pop
stc
cmp
rcll
int3
fidivrl
addb
push
jmp
lahf
adc
insb
cmp
out
imul
mov
std
sbb
inc
dec
or
adc
mov
in
or
data16
xor
inc
sub
push
pop
fstpt
movsl
xor
ret
imul
inc
mov
xchg
xor
test
fcoms
cmpsb
cmp
rorl
dec
mov
inc
mov
jp
nop
adc
dec
dec
xchg
cmp
mov
cmp
dec
aas
pushf
pop
sbb
in
in
jp
lods
bndstx
xor
mov
mov
add
loopne
pusha
loop
sub
lock
aas
xchg
dec
bound
mov
roll
jo
fs
jo
sub
enter
dec
cmp
data16
loope
and
xor
pop
inc
es
or
dec
adc
push
imull
mov
test
scas
adc
inc
jno
andb
aas
push
std
mov
scas
es
jnp
test
into
push
add
jmp
stc
pop
leave
in
or
stos
and
add
fiaddl
iret
mov
mov
iret
mov
movsl
in
imul
inc
or
out
stos
xor
clc
faddl
adc
dec
lods
das
jp
sub
loop
testl
fwait
lock
and
ds
sti
cmp
inc
adc
fstpl
mov
leave
mov
mov
sbb
jnp
ja
push
leave
mov
lret
ja
aaa
mov
jns
loop
mov
iret
xchg
mov
adc
in
ret
inc
sub
pop
gs
loope
jge
mov
jnp
mov
mov
xor
lods
faddl
popf
aad
leave
mov
ja
sbb
push
mov
cmpsb
sub
xchg
je
in
jl
es
push
xor
push
or
adc
fbstp
dec
hlt
fldl
inc
fdivs
jmp
xchg
adc
lahf
or
and
push
lods
xor
test
js
adc
das
fwait
ljmp
jg
int3
mov
fisubs
mov
rorb
mov
icebp
fs
cmpsb
mov
dec
mov
push
push
add
adcb
mov
push
pop
sti
xchg
pop
and
aam
pop
cli
gs
push
and
es
cmp
sub
hlt
mov
jmp
fisubrs
mov
stos
xor
movsb
sbb
stos
xor
mov
dec
lds
iret
cmp
js
sbb
mov
add
fiadds
loop
inc
push
push
push
faddl
xor
mov
pop
add
xor
aam
and
hlt
mov
mov
loope
dec
add
mov
pop
test
out
pop
loop
push
add
mov
test
mov
sub
cmp
push
push
gs
sub
aaa
les
mov
movsl
sbb
lods
mov
jno
add
daa
push
pop
into
xor
inc
or
push
cld
push
jl
or
xchg
in
pop
add
and
jns
pusha
jmp
outsl
jne
mov
test
rorl
daa
orl
insl
out
push
out
push
test
or
push
je
and
inc
adc
and
sub
lock
inc
xor
sbb
rorl
fadd
in
jne
inc
nopl
out
inc
mov
enter
xchg
ret
and
test
ss
pushw
enter
loop
sahf
inc
cmp
and
fisubrl
in
jae
or
ss
popa
rorb
sub
or
pop
jmp
int3
push
addb
pop
test
jl
pop
lcall
into
orb
mov
mov
aas
std
add
mov
push
jg
ljmp
lea
test
aad
jg
cs
out
or
cwtl
sub
andb
ljmp
loope
xor
add
lock
in
outsb
and
or
jle
insl
in
mov
add
fildll
mov
mov
sub
data16
jb
fnsave
jo
jbe
xchg
cmp
dec
icebp
imul
js
adc
cmpsl
jne
out
push
rolb
pxor
iret
call
xchg
inc
sarl
adcl
inc
inc
fnstenv
adc
mov
ss
jp
or
iret
imul
push
and
lds
mov
gs
pop
orb
orb
xor
add
aas
sahf
and
sub
sbb
popf
mov
andl
sbb
or
stos
js
and
fistpll
inc
or
das
xchg
mov
cmp
fwait
inc
cmp
mov
xchg
hlt
pop
pop
cli
xchg
in
push
push
xor
iret
mov
test
or
or
cmp
pop
xor
es
js
mov
addr16
add
test
push
dec
cltd
fnstcw
xchg
pop
sti
ss
jns
aaa
sub
pop
mov
cmpsb
adcb
test
out
pushf
sbb
cmp
stc
pop
sub
into
repnz
mov
inc
cltd
fidivrs
lcall
ss
dec
or
dec
push
xor
mov
inc
sub
sub
or
cwtl
ds
pop
stc
nop
mov
pop
lock
scas
lahf
inc
je
lahf
inc
gs
push
xor
lea
cmp
cld
xor
outsb
lock
scas
cmp
lea
jl
rcl
loope
sbb
xchg
or
fidivrs
sbb
xchg
hlt
xchg
jbe
adc
xchg
and
sub
xchg
mov
pop
mov
cmpsb
icebp
notw
mov
mov
mov
cmp
into
fildll
jl
adc
mov
xor
stos
inc
adc
imul
test
jno
sti
lea
test
jecxz
ret
hlt
fdivrs
cmpsb
fwait
aas
cbtw
mov
scas
into
stos
ss
pop
push
pop
outsl
or
jl
hlt
pop
mov
stos
in
rcrl
popf
pop
int3
xchg
mov
mov
adc
fdivrs
or
ret
or
call
insb
rep
lock
stc
jge
imull
shl
push
in
push
adc
lcall
lods
jecxz
xor
mov
in
call
cmpsl
sub
jmp
rorb
push
movsl
jae
inc
fdivrp
xchg
push
repnz
xchg
in
outsl
clc
ret
ret
in
sbb
pop
cmp
sbb
shrb
pop
rcl
fs
push
adc
mov
xchg
or
mov
or
sbb
xchg
sub
sub
cmp
push
iret
iret
test
sbb
pop
sub
rcrb
inc
push
add
mov
mov
pop
lds
mov
test
loopne
and
aam
inc
adc
aaa
cld
dec
imul
loope
jl
jle
sbb
adc
inc
cmp
xchg
aas
fcoml
leave
mov
and
xor
push
inc
fiaddl
xor
cmp
mov
jnp
mov
cli
gs
mov
repz
ja
int3
ss
adc
add
sub
nop
js
loop
subl
sti
dec
out
enter
mov
push
lea
adc
sbb
mov
dec
xchg
loop
subb
loope
dec
xor
aad
out
aad
push
pop
roll
loop
bswap
insb
stc
mov
rclb
mov
aaa
xlat
mov
shlb
push
adc
pop
ret
int
inc
jecxz
daa
lods
imul
repz
jp
out
xlat
jnp
mov
push
divl
or
aam
and
xchg
mov
xchg
sarl
leave
and
mov
mov
dec
mov
clc
push
xchg
aaa
mov
cmpsb
in
push
push
mov
cmpsl
push
jmp
das
fidivl
divl
xorb
adc
outsb
hlt
jb
jecxz
or
dec
test
add
push
cmp
enter
roll
and
out
jnp
inc
inc
lds
movsb
mov
inc
inc
ficomps
sbb
add
movsb
or
adc
mov
insl
jb
jge
stc
imul
dec
loop
mov
xchg
pop
std
push
mov
cmpsl
nop
int
mov
jb
es
sub
dec
cmp
xchg
and
cs
aaa
jmp
hlt
test
push
mov
int3
lea
leave
scas
sub
leave
push
add
ss
pushf
ds
das
data16
jbe
mov
outsb
stos
sub
loopne
push
add
fidivrs
cwtl
mov
roll
sbb
inc
popf
cmp
fdivrl
addr16
xor
test
mov
adc
pop
sti
test
sbb
xchg
cmp
stc
jge
add
jp
mov
adc
xchg
addl
out
out
and
lret
fidivrs
mov
mov
mov
hlt
fisttpl
std
gs
xchg
xor
stos
in
movsb
daa
nop
mov
push
add
je
xor
inc
or
mov
fsubrp
mov
push
cld
hlt
sbb
aaa
cwtl
xchg
int3
inc
or
jle
and
dec
push
xor
mov
xor
jo
stos
daa
ljmp
sbb
mov
mov
adc
or
loop
mov
mov
dec
or
fidivs
jge
jp
ret
repz
bound
loope
addl
incl
jnp
in
sub
arpl
imul
sahf
cmp
jge
cmp
out
dec
or
decb
xor
in
rolb
scas
add
and
push
arpl
test
mov
push
sti
jl
pop
add
outsb
push
mull
subb
lcall
jne
pop
mov
pop
mov
sbb
test
xchg
push
xchg
lock
push
mov
fisttpll
push
in
mov
repnz
jl
lcall
inc
in
dec
adc
dec
push
mov
dec
cmp
push
adc
inc
adc
add
lret
mov
mov
jmp
out
jecxz
pop
add
or
push
jo
xchg
js
or
jg
add
jp
rcrb
mov
or
test
lods
cmp
push
into
and
cld
in
push
dec
push
add
mov
and
ficomps
scas
xor
dec
adc
les
cmp
adcb
xchg
or
add
fists
fmull
push
test
pop
nop
add
shl
andl
mov
stc
jnp
stc
mov
fidivrl
fildl
mov
test
dec
adc
sbb
mov
test
push
rcll
in
outsl
sahf
test
in
mov
cmp
mov
xor
mov
mov
mov
inc
add
inc
subps
frstor
aam
pop
jnp
mov
inc
addr16
push
mov
cmpsb
xor
mov
xor
xor
rolb
fcmove
mov
mov
sbb
fnsave
shlb
push
sub
adc
or
jl
imul
push
push
push
cld
sbb
mov
adc
arpl
inc
arpl
addb
fcoml
lahf
mov
ss
mov
aad
in
push
sbb
es
inc
sbb
sub
fdivl
pop
add
js
mov
nop
insl
mov
outsb
xor
cmp
sub
xchg
push
and
or
inc
adc
mov
dec
scas
test
jmp
shr
mov
outsb
or
lahf
cmp
mov
mov
pop
stc
dec
scas
adcb
testl
call
push
jecxz
inc
mov
mov
adc
fwait
inc
jae
xor
aam
adc
inc
push
aam
dec
xchg
sub
dec
cmp
aam
sub
cmp
mov
pop
sbb
call
mov
pop
add
xchg
js
stos
out
into
inc
adc
hlt
in
fwait
cmp
lret
mov
push
out
clc
out
jmp
je
addb
xchg
cmp
lcall
test
xor
fmuls
test
adc
jp
mov
sbb
mull
jae
or
jle
sbb
decb
or
xchg
jns
gs
enter
push
std
mov
pop
and
dec
or
dec
or
addr16
push
lcall
xchg
les
adcb
leave
mov
mov
and
loop
cmp
sarl
pop
pop
push
jne
and
movsl
les
mov
mov
adc
iret
jle
iret
cltd
sbb
and
shlb
out
notb
repnz
cmp
outsb
add
repz
mov
mov
in
outsb
loope
push
call
sti
jno
jnp
ljmp
cmp
xchg
inc
sub
test
xor
adcl
stos
fs
int
int
and
adc
inc
push
push
cld
add
xchg
aaa
cmp
mov
mov
lods
outsl
repz
es
xchg
and
stos
daa
and
clc
imul
xchg
mov
mov
lds
shr
fdivl
testl
es
cld
push
shl
test
in
mov
cmp
inc
xchg
add
mov
sub
popa
loopne
jno
jno
ret
cs
orb
fiaddl
jne
test
test
icebp
es
jle
ret
mov
jo
pop
out
sbb
incl
adc
inc
pop
loopne
jecxz
cmc
pop
sahf
repz
lds
sub
lret
mov
sbb
xchg
test
std
data16
inc
or
xor
xchg
dec
mov
push
xchg
sub
xorl
out
add
mov
mov
mov
mov
mov
mov
mov
addr16
shlb
xchg
das
cmp
sub
lahf
and
lahf
int
cmp
int
mov
sbb
jb
adc
mov
mov
pusha
or
fadds
pop
mov
cmp
add
cli
subl
jae
xchg
adc
jns
ret
push
sti
iret
xchg
cmp
sbb
mov
and
int3
mov
iret
dec
xchg
xchg
xchg
loope
lea
cmpsl
divb
or
shlb
fcompl
out
repnz
imul
js
mov
cmp
pop
jge
cld
scas
inc
mov
xchg
insb
and
loop
add
out
mov
iret
xchg
out
xchg
adc
vandpd
pop
test
loopne
test
cli
jns
sub
enter
mov
mov
or
xorl
adc
dec
mov
pop
lock
inc
adc
pop
rcrb
mov
add
push
negl
movsl
mov
mov
inc
pcmpgtb
lret
mov
push
scas
jle
lcall
flds
stc
push
fs
ljmp
out
stos
xor
negl
ret
pop
push
pop
sub
add
add
pop
xor
mov
lea
cmp
lea
xlat
fnstenv
xchg
jbe
jecxz
sbb
in
dec
icebp
pop
mul
xor
out
sahf
adc
unpckhps
loop
sbb
xor
inc
in
movsl
push
mov
or
sbb
pushf
ds
dec
inc
psrlq
mov
adc
sub
out
and
sub
jmp
std
pop
sub
lret
dec
loop
xor
shrl
xor
mov
xchg
test
leave
pop
pop
cs
pop
inc
or
push
out
jne
jae
icebp
aam
xchg
rorl
dec
pop
add
cmp
imul
out
sbb
mov
stos
jb
xor
cs
and
gs
pop
xchg
cmp
sbb
out
dec
dec
iret
xchg
lcall
int3
cli
pop
inc
sbb
dec
adc
jp
push
jns
xor
jnp
iret
lods
xor
and
mov
sub
inc
out
outsb
push
insl
adcb
movsb
xor
enter
add
cmp
lahf
mov
push
xchg
ret
cwtl
cmp
jno
sbbb
jo
outsb
movsl
xor
inc
add
xor
push
sti
shrl
scas
cwtl
add
push
iret
lcall
xor
mov
outsl
in
cltd
clc
jbe
scas
rcrl
mov
rclb
add
mov
mov
sub
mov
inc
and
out
pop
cli
mov
test
lea
aam
push
or
mov
push
adc
adc
aas
movsl
jnp
orb
stos
das
adc
inc
pushf
inc
insb
out
or
lods
xor
pop
mov
sbb
xchg
cmp
push
fadds
popa
into
data16
and
jecxz
cmp
ret
mov
clc
movsl
mov
fnsetpm(287
cli
pop
sub
les
mov
mov
push
pop
xchg
nop
xchg
shrl
mov
in
sbb
jge
cmpsl
popa
call
in
adc
test
xchg
cmp
jns
addr16
xchg
cmp
xchg
addr16
pop
lret
dec
push
dec
adc
mov
add
int
pop
add
iret
outsb
out
leave
mov
gs
and
scas
out
xchg
jns
mov
sahf
inc
pop
ffreep
mov
dec
in
imul
inc
or
sarb
orb
sub
scas
sub
xor
inc
and
or
call
repz
or
cld
sbb
std
ds
and
fisubrl
xchg
inc
xchg
xor
movsb
mov
mov
sbb
xor
mov
sub
mov
mov
jl
int
mov
jmp
in
arpl
arpl
cmp
lahf
scas
sub
pop
shlb
or
insb
repz
pop
jmp
lods
addl
cmpsb
cmp
mov
aam
sahf
sarl
lods
lds
out
mov
push
shll
push
enter
mov
and
jnp
xor
call
inc
aas
repz
cmp
sub
jno
xor
cmp
sub
mov
xchg
aaa
push
jns
shlb
mov
cmc
pop
loop
pop
pop
test
int
rcll
scas
les
les
mov
sub
into
test
xor
cmpsl
pusha
jb
outsl
jae
or
push
imul
ljmp
hlt
adcb
mov
insl
out
fistpll
ja
fists
int3
xchg
hlt
fidivrs
mov
sub
xchg
test
andl
jl
fistps
hlt
pusha
clc
xchg
dec
out
lea
adcb
sti
pop
dec
or
ja
sub
jg
mov
pop
out
push
popf
sbb
dec
sub
daa
in
xchg
fidivl
mov
adc
dec
push
ss
mov
pop
add
xor
ja
clc
popa
scas
data16
arpl
mov
test
cltd
arpl
jg
mov
mov
sbb
fadds
cltd
add
push
jl
push
cmp
insl
repz
mov
mov
aam
and
jg
add
mov
push
mov
or
mov
scas
pop
and
movsb
inc
out
jb
mov
jl
sbb
lds
dec
mov
dec
push
nop
fs
and
insl
adc
mov
dec
repz
or
mov
pushf
dec
jnp
jne
fwait
mov
pop
push
push
std
les
mov
mov
in
orb
pop
cmp
sub
divb
xor
gs
jge
jne
ja
xlat
js
bound
iret
aad
push
stc
xchg
add
sub
ret
movsb
sub
aaa
mov
dec
push
mov
xor
xchg
lock
ljmp
ja
and
insl
cmp
fidivrl
fadds
fisttps
fs
mov
sub
add
cmp
sbb
dec
scas
stc
pusha
lea
repnz
sub
cmp
sarl
mov
stos
xor
and
jnp
cld
lret
nop
aad
push
mov
mulb
add
les
pop
add
adc
popa
pop
mov
arpl
popa
repnz
call
inc
adc
or
jns
aad
cmpsb
das
adc
jne
xor
loop
add
in
sahf
fnsave
pushf
xor
jb
xchg
movsb
dec
lcall
push
xor
hlt
push
mov
mov
xchg
cli
clc
lahf
sub
add
cmc
sub
jae
aaa
ss
xchg
push
jmp
clc
pop
into
dec
push
push
and
push
push
xchg
adcb
cmpsl
ds
sub
fwait
inc
push
nop
enter
aam
mov
jmp
loop
ss
inc
adc
adcl
mov
push
aaa
test
in
stc
and
psrlq
outsb
fs
inc
and
mov
xchg
sbb
dec
add
js
pop
aas
mov
lods
aam
fiaddl
rcr
jg
cmpl
lcall
pushf
and
cmp
pop
add
fadds
aam
mov
fiaddl
clc
xor
loopne
and
pop
test
sub
cmp
xchg
icebp
pop
lcall
mov
aas
push
xor
incl
les
fnstenv
insb
outsl
neg
or
cmpsb
ss
cmp
ret
mov
jge
inc
jno
sbb
fwait
lea
sbb
adc
into
gs
jb
jmp
aas
pop
mov
sub
lahf
lahf
aas
pusha
call
lds
jle
dec
jns
and
fcmovne
nop
inc
and
sub
cwtl
orb
mov
call
repz
sub
mov
mov
sbb
xchg
xlat
pop
dec
insb
call
and
cmp
int
dec
fistpll
pop
jmp
or
pop
sub
in
cmc
leave
lea
hlt
adcl
or
dec
dec
subb
adc
pop
sub
imul
jbe
push
sbb
or
int3
dec
push
add
adc
inc
adc
pop
daa
scas
jmp
push
in
je
aaa
into
dec
xchg
adc
mov
sub
and
dec
cmp
cs
sub
add
fldl2e
jo
sbb
lret
ret
fnstcw
jp
iret
xchg
mov
test
arpl
jno
pop
mov
fstpl
push
cld
paddq
icebp
push
aam
pop
sub
xchg
clc
in
sub
jbe
sti
dec
add
dec
popf
and
mov
ret
shrl
inc
pop
repz
lock
jp
lds
movsl
lcall
ret
in
cmp
loop
mov
imul
repnz
mov
push
out
adc
cmp
pop
mov
dec
jecxz
scas
loop
loopne
push
pop
add
cwtl
xor
pop
lods
push
pop
mov
into
cmpsb
cmp
xlat
and
pop
push
clc
pop
repnz
jns
dec
jns
jl
add
iret
sbb
mov
lock
and
aam
inc
shrl
mov
icebp
mov
adc
inc
jmp
cwtl
das
xchg
cmp
dec
ljmp
insb
cmp
pop
repz
mov
test
test
xor
push
dec
in
sub
js
test
call
rcrb
aas
andb
push
mov
pop
lock
mul
jnp
leave
ja
sti
dec
add
dec
fwait
and
mov
ret
shrb
aas
pop
repz
icebp
mov
jp
ret
imul
das
push
mov
mov
imul
aam
mov
mov
mov
pop
out
adc
cmp
lds
dec
jecxz
scas
jecxz
loopne
push
pop
add
cltd
xor
pop
stos
push
and
movsl
ds
pop
lds
pop
repz
jp
dec
jp
jnp
add
into
sbb
mov
out
mov
and
aad
inc
aam
je
pop
repz
xchg
repnz
adc
adc
xchg
cmp
lds
mov
call
or
insl
cmp
push
adc
mov
mov
test
mov
xor
xor
les
push
dec
out
sub
jns
cmpsl
insl
add
jge
xchg
scas
cli
mov
sub
push
mov
dec
test
rcll
pop
shll
movsl
hlt
in
es
js
stc
inc
add
dec
cltd
and
lahf
jmp
sbb
shrl
cmp
repnz
jnp
shll
cwtl
loop
xor
cs
mov
addr16
in
mov
insb
mov
fcomi
mov
adc
aaa
subb
mov
pop
mov
dec
in
lods
in
fisubs
add
add
stos
push
and
std
mov
pop
push
cmc
pop
repz
jnp
inc
jp
jns
add
int3
pop
and
pop
push
fwait
inc
aam
jb
pop
hlt
in
xchg
repnz
push
jl
inc
out
cmpsl
pop
bound
lds
mov
jecxz
or
outsb
cmp
push
push
pop
cmc
mov
scas
adc
mov
xor
xor
les
push
push
out
sub
jns
cmpsb
outsb
add
lods
stc
mov
sub
push
mov
dec
stos
inc
jle
cmp
pop
shll
repnz
lds
testl
das
dec
xchg
and
popf
jmp
aam
icebp
cmp
insb
adc
mov
adc
loopne
xor
mov
mov
in
xchg
insl
mov
fxtract
mov
mov
and
sub
test
xor
push
pop
mov
dec
in
stos
in
fsubl
insb
add
lcall
and
sti
mov
pop
dec
repz
hlt
and
in
mov
ret
add
lret
mov
sbb
ds
jo
pop
cmc
jmp
repz
or
adc
in
test
pusha
fwait
xor
mov
push
in
dec
in
push
fsubrs
fisubrl
or
testb
lods
adc
fiadds
xor
xor
lds
push
out
daa
jecxz
pop
movsb
outsb
add
stos
testl
jl
ds
popf
enter
pop
repz
les
testb
je
cltd
xor
and
pushf
out
xlat
sbb
pop
cmc
push
hlt
mov
jl
mov
ficomps
call
or
cmp
add
xlat
hlt
mov
scas
mov
loope
adc
xor
xor
lods
push
enter
dec
in
test
jge
and
push
sti
add
sub
mov
cmpsb
dec
and
stc
lahf
inc
xlat
rcrb
enter
pop
cmc
and
jge
inc
jl
jne
add
repnz
lcall
jmp
inc
fcoms
mov
hlt
mov
or
cmp
adc
nop
xor
gs
push
jecxz
dec
in
add
jo
fsubrs
pop
testl
fdivrl
aas
mov
xor
cs
pop
add
push
call
push
mov
add
daa
lret
and
jp
aas
dec
fwait
leave
pusha
int
pop
hlt
mov
ret
hlt
inc
add
xor
and
lcall
insl
out
aaa
pop
imulb
cmc
mov
jge
mov
fcompl
enter
push
popa
pop
push
out
adc
mov
outsb
add
pop
lods
mov
fildll
adc
xor
enter
pusha
test
dec
out
cmpsb
out
fcomps
outsb
add
sub
and
stos
inc
negl
leave
pusha
dec
out
pop
mulb
insb
out
sahf
inc
jge
jae
add
xor
adc
inc
out
push
sbb
xchg
cmp
outsb
insb
mov
mul
cmc
mov
loopne
stos
adc
mov
xor
arpl
dec
out
add
jno
insl
add
push
clc
and
push
lods
fidivrl
scas
sti
xor
sub
pop
add
jmp
push
mov
add
and
inc
lods
inc
js
inc
xlat
dec
cltd
lret
insl
pop
cmc
sahf
in
call
adc
aas
push
popf
jo
fwait
xor
and
ret
push
cwtl
jecxz
fsts
xlat
outsb
in
xor
testb
pusha
adc
xchg
ficompl
in
mov
call
mov
outsl
push
mov
testb
es
push
stos
inc
xor
leave
stos
push
leave
pusha
or
out
movsb
out
sbb
add
and
dec
and
negb
lret
in
pop
negb
imul
popf
aas
jge
jno
push
popf
out
xchg
fwait
xor
adc
push
pop
arpl
xchg
cmp
outsb
push
popa
clc
out
cmc
mov
ficoms
stos
cvtdq2ps
enter
push
loopne
dec
out
add
jb
aam
add
push
stc
nop
xchg
mov
pop
test
scas
fnstcw
inc
lods
cli
xor
pop
add
ljmp
jno
shll
movsl
repnz
es
and
ja
inc
xlat
dec
cwtl
lret
lret
cmc
pushf
jmp
sbbb
pop
sahf
outsl
adc
mov
xchg
loop
ficoml
mov
popa
clc
gs
lea
pop
adc
fstps
leave
loop
mov
call
mov
outsl
push
xchg
testl
push
cld
stos
inc
js,pn
lret
leave
pusha
or
out
aam
jo
dec
cmc
add
and
js
lods
inc
cmc
cltd
inc
fmul
push
lret
bound
pop
negb
jmp
adc
mov
fwait
xor
mov
adc
xlat
outsb
push
mov
mov
fcoml
stos
or
cs
pop
lods
mov
out
add
jae
shrb
add
cli
xchg
xchg
sbb
stos
stc
ss
int3
pop
decb
jmp
pop
out
push
popf
jb
iret
jb
fwait
mov
lds
mov
jne
inc
fmuls
int3
arpl
imul
sbb
lahf
insl
setl
inc
mov
mov
xchg
loopne
fistl
mov
outsl
call
or
mov
test
lods
xlat
sahf
xor
loopne
mov
jmp
scas
push
jo
test
clc
popl
cmpsl
mov
push
cli
lods
inc
sub
xor
cmpsl
dec
lret
enter
mov
jno
dec
repz
popf
and
mov
shrl
enter
inc
jmp
ljmp
mov
pushf
xor
or
mov
fcoml
mov
cli
jecxz
testb
ficoml
or
aaa
mov
leave
pop
stos
mov
out
fdivl
shrl
add
xchg
test
and
sbb
test
lret
enter
push
jmp
push
out
push
fwait
jb
int
add
daa
and
and
jae
inc
flds
int3
arpl
push
ljmp
cmp
lahf
imul
xor
mov
mov
xchg
fiadds
mov
jo
xor
popa
or
cmp
push
lods
mov
sahf
xor
fildll
mov
ljmp
jno
test
clc
popl
cmpsb
fsubs
push
lods
push
stc
lods
inc
sub
movsl
dec
lret
bound
push
jmp
rcrl
jno
dec
repnz
sahf
and
sahf
inc
and
inc
icebp
xchg
inc
fcmovb
adc
arpl
clc
sbb
sbbl
lea
mov
adc
fmull
mov
cli
loope
testl
or
aaa
mov
xor
pop
test
push
call
shrb
add
xchg
andb
and
mov
stos
inc
test
ss
lret
cld
inc
push
jmp
sbb
jb
lret
jo
popf
mov
ret
and
hlt
aas
scas
inc
jno
inc
fiaddl
int3
arpl
addr16
clc
cwtl
in
adcl
cmp
lahf
imul
mov
fisttpl
cs
stc
pop
pop
stc
nop
cmp
pop
scas
mov
sahf
xor
fisubs
mov
ljmp
jno
or
jmp
scas
push
imull
int3
movsb
dec
lret
bound
ljmp
jb
dec
lock
sahf
and
daa
popf
inc
and
inc
lock
inc
fcmovb
adc
fs
out
clc
pop
gs
xchg
cmp
push
or
mov
fidivrs
fisttpll
scas
fs
loopne
testl
or
cmp
test
push
fidivrl
call
sub
dec
sti
xchg
andl
sbb
cmpsb
hlt
aaa
into
and
inc
push
in
ja
call
or
outsb
push
popf
lahf
jmp
sub
ds
inc
jo
inc
fiaddl
fs
gs
clc
xchg
in
adcb
jg
ljmp
xor
mov
fildl
or
fidivl
sub
stc
nop
aaa
jg
sbb
rcrb
int3
fsubl
push
ljmp
jno
or
es
sbb
daa
jb
int
dec
lret
bound
push
jmp
fwait
jmp
or
pop
sahf
pop
push
sub
scas
inc
out
xchg
inc
fcmovb
adc
gs
in
clc
adc
ss
push
mov
sarb
mov
fimuls
scas
gs
filds
test
xor
adc
cmp
cmpsl
rclb
push
call
sub
outsl
push
decb
xchg
jg
mov
shll
inc
movsb
repnz
and
lret
inc
push
in
jne
jmp
or
insb
pop
sahf
popf
jmp
and
inc
outsb
adc
into
shll
xchg
loop
adcl
pop
call
or
mov
mov
inc
fisttpll
mov
jb
sub
add
xchg
xor
push
sbb
add
mov
jmp
ja
jae
dec
jb
jg
cli
xchg
cld
mov
sbb
and
inc
int3
arpl
push
in
repz
ljmp
in
or
lcall
inc
in
nop
inc
fcmovnb
push
iret
inc
loop
stc
adc
test
or
mov
fidivrl
mov
data16
fldl
test
xor
push
lods
add
es
push
movsl
rclb
push
jmp
sub
jo
std
dec
cld
xchg
jge
es
sahf
sbb
mov
testl
orl
or
sbb
mov
insb
adc
inc
into
gs
loopne
adcl
sbbl
or
mov
xlat
inc
fisttpll
scas
fdivl
sub
add
xchg
xor
sbbb
push
sbb
add
mov
in
sub
jae
dec
jae
jle
cli
xchg
cli
lahf
xchg
sub
sbb
mov
repnz
inc
and
aaa
into
lahf
inc
int
ja
push
in
icebp
cwtl
jmp
lret
or
mov
cwtl
cmp
mov
jmp
inc
fadd
or
data16
cli
adc
test
mov
mov
mov
fnstcw
fisttps
stos
data16
fstpt
nop
mov
test
rcll
scas
add
mov
int3
push
mov
push
ljmp
jno
cld
dec
cld
xchg
jnp
nop
daa
dec
pushf
sbb
mov
int3
arpl
inc
push
in
jno
jmp
dec
xchg
je
les
mov
pop
mov
mov
push
inc
fldl
into
gs
fsubrp
adcl
sbbb
xor
mov
cmp
mov
fldl
scas
fnsave
fs
pop
add
xchg
xor
sbb
int3
mov
iret
xlat
pop
mov
in
sub
je
dec
je
jl
sti
xchg
clc
popf
xchg
sub
sbb
mov
lock
and
popf
inc
into
gs
push
in
out
xchg
in
or
jne
inc
jmp
xchg
sub
mov
dec
jmp
or
addr16
fs
adc
test
mov
mov
mov
sub
xor
mov
loopne
sub
jae
test
fnstcw
xchg
scas
cli
test
rcrl
scas
add
cmp
mov
push
jmp
hlt
fbstp
enter
inc
std
xchg
jns
xchg
sub
sbb
mov
ret
hlt
ds
out
outsl
adc
jne
ret
mov
adc
ss
push
mov
mov
cld
nop
fsubr
test
mov
sbb
das
or
aaa
subl
push
mov
inc
fiadds
fidivs
and
cld
xchg
xor
sbb
lret
mov
iret
aad
rclb
push
in
daa
jb
jne
dec
je
jp
cld
xchg
negl
sbb
and
rcrb
push
out
out
xchg
in
add
jbe
inc
out
mov
xchg
cmp
mov
call
or
push
push
pop
out
xchg
mov
movsb
loope
mov
ret
xor
mov
loope
sub
jae
cmpsl
push
xchg
lods
stc
xchg
add
cmp
ss
mov
push
jmp
repz
and
inc
xchg
js
xchg
sub
sbb
lret
inc
sahf
jmp
rcrl
int
repnz
in
addl
or
xchg
loop
sub
sub
or
cmp
shlb
pop
gs
mov
out
test
cs
pop
add
shll
dec
filds
stos
fidivs
and
std
push
std
cld
xchg
das
ja
sbb
lret
cld
mov
rcrl
push
in
and
inc
je
js
std
xchg
negb
sbb
dec
in
mov
push
push
rcrl
mov
in
add
ja
inc
in
mov
xchg
aaa
sub
out
inc
fnstsw
pop
lock
scas
push
movsl
loopne
mov
les
sarl
loop
fdivl
cmpsb
imul
stos
stc
xchg
sub
sbb
jle
aaa
into
push
lahf
ret
pop
shll
in
mov
les
testb
ja
xchg
sub
sbb
inc
pushf
ljmp
lock
lock
adc
test
ja
shlb
loope
sub
mov
shr
mov
or
cmp
data16
mov
out
xchg
test
loopne
or
cmp
jg
ret
rcrl
dec
loopne
test
jbe
and
push
sti
std
xchg
sub
dec
sbb
sti
mov
ret
repnz
out
and
ja
inc
jne
jbe
xchg
cmc
xchg
xchg
sub
push
sbb
dec
sbb
cmp
lcall
lock
nop
in
test
or
or
xchg
xor
mov
out
inc
fidivrs
fldenv
or
mov
scas
fistpll
cmp
sarl
jecxz
and
je
movsl
push
xlat
ja
xchg
test
lret
sbb
jge
cmp
dec
sahf
les
outsl
push
in
mov
ret
hlt
inc
add
inc
xchg
push
mov
push
cmp
sbb
icebp
imul
test
js
mov
fists
shl
mov
fs
dec
loopne
test
imul
lods
test
sub
movsl
pop
jmp
ret
scas
push
rcrl
dec
loope
cmpsb
fbstp
and
push
stc
std
xchg
sub
sbb
jge
movsb
cmp
sahf
cmp
iret
sbb
pop
dec
lock
out
and
js
inc
jne
je
call
adc
mov
sbb
rcrl
mov
in
test
or
adc
loope
mov
xchg
xor
shlb
in
inc
fidivs
xlat
gs
or
mov
adc
scas
ljmp
lds
sarb
jecxz
and
je
movsb
push
jbe
xchg
test
mov
sub
sbb
jl
cmp
dec
popf
les
outsb
push
in
lahf
lock
and
je
repz
add
inc
xchg
push
mov
addr16
cltd
out
rcrl
mov
pop
icebp
push
out
test
js
mov
ficoms
shl
mov
arpl
dec
loopne
test
imul
stos
test
mov
ret
scas
push
rcrl
dec
loope
movsl
fbstp
and
push
clc
std
xchg
sub
cmpsb
dec
sbb
stc
popf
cmp
into
sbb
shll
scas
cs
jae
addr16
xor
cmp
sahf
or
leave
sbb
fsub
hlt
mov
inc
xor
lock
sbb
leave
adc
mov
mov
enter
cmp
jmp
xchg
pop
mov
and
mov
call
add
orl
pushf
push
cld
lock
add
jb
push
ds
push
mov
insb
fidivrl
mov
xlat
sbb
mov
add
hlt
arpl
xor
in
outsb
popf
jno
fldenv
in
outsl
and
int
rcrl
sahf
sbb
mov
fidivl
adcb
not
xor
call
mov
add
les
and
pop
loop
out
test
sti
add
lret
shlb
leave
mov
and
scas
xchg
pusha
ja
nop
inc
cmpl
push
jg
lret
sbb
fdivrs
xchg
adc
push
pop
mov
iret
mov
inc
mov
ror
adc
mov
dec
push
bound
rolb
enter
cs
imul
add
mov
push
test
stos
ja
jne
cmp
ljmp
jg
jmp
and
pusha
pusha
pop
mov
sti
movsb
loope
gs
mov
call
movsb
inc
add
test
jp
cmp
xchg
test
inc
inc
ja
inc
sbb
mov
sbb
das
cwtl
orl
push
sbb
cwtl
mov
sub
xchg
jo
mov
adc
dec
loop
adc
test
pop
divl
loop
cwtl
shll
jo
es
inc
xchg
mov
ja
stos
mov
add
outsb
jno
ret
dec
test
mov
jb
jp
mov
mov
adc
fadd
aas
data16
sahf
icebp
jne
xor
mov
clc
add
jns
xor
mov
adc
cmpsb
pop
xchg
mov
movb
or
iret
push
add
jg
mov
mov
mov
insl
lcall
and
adc
in
pop
sbb
hlt
std
in
dec
idivl
sbb
std
in
clc
movlps
cmpl
add
cwtl
or
andl
or
ljmp
out
scas
fdivp
push
jo
inc
out
xor
cli
jmp
add
cli
in
std
ds
aad
add
mov
dec
clc
iret
pushf
pop
pop
scas
push
sub
sub
inc
xor
lret
jnp
mov
mov
and
sub
iret
cmpsl
int3
or
cld
addr16
jecxz
out
add
popa
incb
js
jb
data16
jmp
repz
lahf
mov
and
xor
sbb
mov
ds
cwtl
sarl
push
rep
push
mov
in
or
ja
jno
bt
rcrb
sub
iret
shll
sbb
sbb
or
dec
push
ds
pop
dec
or
testl
dec
das
mov
cmp
les
shlb
or
test
xor
mov
push
or
and
fidivs
push
stos
enter
stos
aaa
push
lods
and
cmp
stos
pop
pop
fstpt
outsb
lahf
data16
psubsw
out
mov
shrl
push
sbb
jg
gs
in
mov
add
mov
jmp
jae
out
adc
cmp
mov
jne
in
scas
fisubl
push
hlt
sbb
cmp
dec
mov
enter
mov
add
lret
xchg
in
lds
out
insl
lods
mov
add
pop
imul
inc
xlat
mov
sarb
adc
int3
test
pop
mov
ds
mov
jae
cld
dec
cmp
cmp
das
inc
or
mov
sbb
dec
ds
and
outsb
rcll
cltd
sti
add
xor
cltd
mov
nop
sarl
xchg
jns
call
pop
jne
aaa
and
int3
mov
dec
ss
mov
stos
stos
ljmp
test
sub
xor
fcmovbe
in
lods
rcrb
stos
pop
mull
mov
mov
mov
cmp
sbbl
es
shll
dec
lock
dec
out
adc
movsl
mov
adc
loopne
in
outsb
mov
or
xchg
dec
mov
mov
mov
xchg
mov
sub
push
je
push
mov
mov
das
clc
cld
and
in
mov
notl
jne
rcrl
insb
push
loope
add
jo
fwait
xor
sti
frstor
pop
or
dec
hlt
adc
sar
or
mov
mov
lret
or
nop
mov
jp
mov
lcall
sti
cmp
adc
xor
add
popf
push
xchg
bound
cld
mov
dec
testb
or
out
idivb
stos
loopne
sbb
xor
push
xor
and
int3
xchg
xor
and
xchg
push
cmp
outsb
or
cmp
test
mov
mov
cmpsb
mov
xorl
xor
cmp
pop
dec
ret
sti
jbe
mov
jecxz
pop
movsb
or
and
repz
das
sbbl
jnp
outsl
mov
xchg
jl
mov
shll
xchg
loop
mov
gs
je
and
out
sub
or
sbb
lcall
call
sbb
fistl
std
xor
sub
jns
out
push
jmp
arpl
in
adc
nop
inc
das
sub
sti
movsb
push
test
push
notl
sti
lahf
js
gs
arpl
shrb
ret
mov
cmp
jb
mov
jg
jp
sub
lock
bound
rol
subb
jge
insl
rclb
inc
shlb
aad
mov
loopne
xchg
jne
jne
mulb
fisubs
rclb
pop
cmp
repnz
mov
push
cmp
filds
xchg
enter
xchg
imul
and
push
push
pop
pop
cmp
loop
lods
mov
bound
aaa
mov
mov
jne
sarl
out
fnstcw
or
mov
pusha
in
outsb
ficomps
adc
pop
leave
in
mov
sub
es
arpl
sub
cmp
dec
hlt
inc
push
sbb
sbbb
jge
call
mov
mov
ret
pop
inc
sub
pop
inc
push
negb
pop
and
sub
je
dec
js
mov
cwtl
rorl
jo
addr16
daa
add
push
dec
test
ja
push
pop
adc
inc
cmp
jb
lcall
inc
arpl
mov
les
fidivs
or
iret
and
leave
and
jnp
stos
add
xor
stos
imul
push
ficomps
mov
jnp
lcall
push
mov
cmp
pop
mov
scas
push
jno
push
pushf
ds
test
sti
adc
mov
enter
jae
and
add
cmp
repnz
movsl
mov
push
pop
cmpsl
add
or
or
adc
inc
mov
fists
scas
push
push
mov
mov
in
or
cwtl
hlt
adc
or
cmp
pop
pop
fimuls
fsubrs
testl
xor
test
push
adc
rolb
cltd
dec
pop
xchg
dec
cwtl
sub
jns
jae
test
std
xchg
outsb
int3
push
iret
js
into
mov
mov
popa
mov
mov
sub
pusha
pop
ljmp
xchg
push
cmp
pop
lds
pop
ret
movsl
fisttpl
repz
roll
or
and
mov
mull
int
out
cltd
or
lods
or
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
int
sub
sub
add
dec
cmpsl
sbb
push
call
jl
cmp
les
mov
lock
fcos
lea
fucom
xchg
inc
and
insb
xor
outsl
xlat
jge
adc
adc
xchg
pop
pop
test
stos
les
sbb
jecxz
fimull
popa
out
cmp
pop
dec
repz
enter
dec
xchg
hlt
push
.byte
