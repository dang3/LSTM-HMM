lds
adc
mov
mov
lods
mov
mov
push
inc
adc
call
fldt
mov
pop
xchg
or
lret
jmp
add
sbb
mov
ds
lock
sub
adc
aas
test
cld
jge
loopne
pop
or
inc
push
xlat
cmp
out
pop
cmp
clc
lods
cmp
enter
dec
pop
stos
mov
shl
push
loope
and
loopne
cmpsb
push
leave
and
pop
fwait
std
outsb
pushf
jmp
inc
fstpl
getsec
jo
and
inc
cmp
cmp
into
addl
inc
ss
vmptrst
popf
sbb
int
icebp
adc
aaa
dec
andb
hlt
add
stos
push
inc
xchg
std
aaa
rcll
sti
jmp
loop
adc
xlat
adcl
dec
or
loope
push
xchg
gs
inc
mov
shll
loopne
sbb
sbb
push
lods
pop
mov
insb
sub
dec
push
mov
popf
sbb
or
inc
cwtl
and
or
pop
test
xchg
add
xchg
push
mov
dec
adc
dec
mov
jns
outsl
xchg
xchg
adc
lcall
movsb
add
ffree
out
inc
cmp
sbb
adc
xorb
or
sub
nop
jo
and
test
add
push
aaa
lea
inc
xchg
gs
cli
or
ffree
rcrl
dec
jmp
cltd
inc
aas
add
nop
ljmp
inc
mov
sbb
sub
xchg
cmp
add
push
rol
gs
aam
or
add
adc
das
das
cwtl
mov
sub
clc
sbb
aad
xor
xchg
push
or
cwtl
mov
out
inc
subb
les
sub
scas
jmp
push
cmp
icebp
push
scas
fcoml
addr16
xchg
dec
sub
dec
pop
push
cld
push
lds
sbb
popa
lahf
or
pop
or
and
and
aas
dec
and
pop
pop
pop
jb
lds
cmp
faddl
hlt
cmove
push
subl
ss
mov
push
xlat
inc
push
jecxz
and
cmpsb
mov
dec
push
mov
pusha
mov
adcl
scas
sub
mov
push
inc
dec
or
mov
dec
inc
fbld
sub
pusha
arpl
repz
test
lret
adc
push
int
leave
ror
mov
push
xchg
sbb
in
mov
shlb
add
cld
xchg
push
add
movsb
xchg
insb
adc
xchg
or
add
push
cmc
and
pop
lock
mov
mov
push
xlat
and
mov
jmp
jno
cmpsb
jmp
push
cld
add
push
jo
pop
xor
cmpsl
cmp
arpl
ja
or
dec
fdivrl
je
xor
jecxz
and
jns
mov
push
ret
xchg
add
addb
rcll
lcall
inc
sti
mov
cmp
adc
push
xor
xchg
xor
cltd
sbb
es
repz
add
fcmovu
nop
inc
mov
mov
test
gs
inc
dec
adc
cwtl
xor
stc
stos
stos
push
adc
push
xor
xchg
adc
mov
jb
mov
inc
ljmp
inc
dec
inc
pop
inc
cmp
push
les
ja
inc
pop
inc
push
add
enter
sub
pop
pop
pusha
add
and
int
add
or
mov
bound
cmp
mov
push
xchg
push
ss
in
bound
or
pop
jae
mov
xchg
adc
outsl
sub
mov
dec
push
jg
xor
repz
xchg
pop
cmpsb
or
pushf
add
call
aam
lahf
xor
adc
add
xchg
mov
pop
es
push
fwait
lret
mov
addr16
lcall
pop
push
cmp
xor
and
movsb
pushf
rol
add
mov
stc
lret
push
jmp
push
dec
cmp
lock
dec
icebp
aad
dec
and
movsl
call
xor
inc
xorb
loope
adc
aad
dec
and
inc
mov
and
pop
in
add
movsb
lret
mov
xor
imul
lds
rcr
xchg
push
pusha
repnz
dec
roll
push
inc
or
bound
push
push
jmp
mulb
and
and
lods
movsl
xchg
pusha
jb
adc
insl
mov
mov
fwait
orb
fs
cmp
outsb
into
mov
mov
jb
in
pop
repnz
mov
push
pmaxub
dec
push
je
jecxz
push
pop
ja
mov
push
cmp
shlb
gs
adcb
psrld
pop
movntq
orl
movsb
xor
jp
push
xchg
orb
mov
pop
gs
fldcw
cli
or
push
xchg
scas
cmc
lcall
adc
jnp
clc
test
cli
lcall
jb
adc
flds
pusha
lock
and
sti
xor
mov
pop
andb
fimuls
adc
or
mov
out
sbb
sbb
mov
rcrb
push
subl
leave
push
in
jb
mov
loop
xchg
cmc
push
xchg
inc
pop
push
inc
movsl
iret
lds
test
sbb
or
cli
ja
pop
rorb
fistpl
shlb
push
aam
nop
add
or
pop
leave
lret
cld
mov
push
hlt
pop
fcoml
sti
popa
shlb
jg
xchg
push
push
xorl
sbb
adc
in
iret
sub
in
call
or
nop
js
xor
rclb
inc
nop
adc
outsl
jae
inc
inc
add
push
fidivs
mov
sahf
pop
push
insl
es
mov
scas
outsb
loopne
mov
mov
xchg
movlps
add
pop
icebp
or
adc
les
jns
stc
or
in
and
mov
add
push
mov
and
dec
pop
sbb
mov
mov
imul
stos
sti
cmpsl
in
les
sbb
loope
je
adc
mov
inc
and
imul
or
fdivs
or
xorb
repnz
jl
cmp
add
xor
xchg
add
cld
xorb
push
ffree
mov
outsb
sub
xchg
mov
cmp
sbb
push
lods
and
inc
sub
xchg
orb
mov
dec
or
mov
dec
loope
std
sub
daa
mov
sbbl
jle
and
cmpsl
jns
test
ret
iret
adc
cs
fildl
icebp
mull
xor
fisttpll
add
rcll
inc
in
test
in
orb
rorb
mov
sbb
aas
and
inc
mov
movsb
and
jae
rcrb
add
pop
lcall
pop
jge
xchg
rolb
mov
out
mov
mov
scas
pop
fisttps
adc
mov
cmp
add
mov
pop
xlat
lods
sub
insb
mov
daa
mov
push
mov
and
test
adc
movsb
dec
sbb
mov
les
std
mov
cmc
shl
mov
push
test
or
roll
dec
lea
dec
scas
or
lcall
push
icebp
mov
lret
insb
loope
lahf
inc
mov
js
push
les
inc
jecxz
outsb
nop
dec
repnz
dec
adc
out
ljmp
jbe
adc
push
cmp
dec
xor
adc
and
sbb
lods
jno
sub
loopne
mov
repz
std
std
lret
negl
sbb
into
ss
dec
fistpl
xor
push
cmpb
jl
mov
stos
mov
cmpsl
in
sbb
pop
andb
fcmovne
push
les
or
pusha
mov
cmp
mov
mov
inc
test
push
and
and
lock
jl
cs
cs
dec
push
rcrb
and
test
rolb
xchg
or
xor
add
xchg
test
data16
xor
repz
in
or
cmp
xchg
or
outsl
sub
xor
cli
push
cmpsl
jno
cld
mov
into
cmp
xchg
xchg
mov
addl
rorb
cltd
ljmp
data16
add
shrb
adc
add
pop
inc
inc
ljmp
loopne
push
cltd
js
lret
fnstcw
push
int3
mov
inc
xor
cltd
out
sbb
pop
enter
leave
cmp
les
inc
sbb
mov
and
test
nop
sub
repz
scas
dec
and
cltd
loopne
pop
add
inc
adcb
mov
push
jnp
pop
add
mov
in
mov
push
and
adcb
push
cmp
stos
add
js
jl
or
pushf
mov
mov
add
push
lods
sub
outsb
jle
push
inc
neg
sti
xchg
test
inc
jnp
push
inc
sub
cltd
mov
and
add
xor
sub
js
shrb
sbb
xor
or
sahf
iret
fsubr
inc
lcall
loope
or
add
xor
in
add
push
sbb
out
or
inc
xchg
insb
enter
lock
pushf
xchg
cmp
inc
jge
dec
lret
mov
sub
jno
sub
pop
adc
clc
aas
sti
jg
mov
and
push
mov
or
add
xchg
cld
adc
dec
flds
dec
push
clc
sbb
add
xchg
cwtl
inc
repz
and
test
and
cmpsb
xor
loop
fnsave
imul
test
sbbb
inc
bound
int3
enter
sbb
out
fstps
lds
adc
or
mov
inc
pushf
mov
cmp
and
xchg
cli
xchg
into
push
stos
push
enter
mov
pop
or
iret
pusha
or
loope
loop
ss
adc
lds
cmp
mov
mov
cmpsb
pop
rorl
sub
jb
aad
test
aam
push
stos
xchg
and
xor
adc
sbb
dec
and
loope
push
fwait
push
mov
xor
arpl
dec
ss
add
mov
push
push
ret
or
movsb
mov
add
shl
shl
popa
popf
xor
or
loope
sub
mov
clc
mov
inc
ss
lock
addl
rol
push
daa
leave
or
lds
fpatan
inc
sub
xor
repz
mov
adcl
shll
cwtl
iret
repnz
push
lret
mov
adc
sarl
dec
adc
jo
jge
movsb
clc
adc
das
xchg
jno
out
jno
cmp
cwtl
je
lea
out
mov
imul
loope
jnp
cmp
shll
jmp
pop
ljmp
xor
in
mov
mov
icebp
int
les
and
xchg
or
jle
test
movsl
enter
sbb
pop
dec
mov
jnp
fiadds
repnz
or
push
jae
dec
sbb
mov
test
mov
lcall
test
aaa
add
iret
out
dec
push
ss
push
and
mov
ljmp
and
add
fucomi
shlb
adc
and
cmp
pop
pop
cmp
dec
lret
inc
movsb
and
dec
fmull
cmp
das
ds
gs
imul
or
inc
stos
pop
test
mov
sub
pop
xchg
sub
ds
sahf
inc
inc
mov
fisttpl
pusha
loop
mov
and
xchg
js
sub
inc
adc
lret
scas
adc
push
lahf
icebp
bound
test
mov
aam
loop
sub
test
pop
hlt
cmp
sbb
enter
dec
lahf
mov
pop
cmpsb
stc
inc
add
or
iret
frstor
sbb
push
dec
aad
enter
sbbl
cmp
sub
jb
fiadds
shl
nop
int3
cld
xor
nop
ret
daa
push
add
xor
shrb
xor
and
add
and
jmp
cmp
dec
sti
into
xor
inc
adc
dec
ja
and
scas
inc
sub
sub
adc
or
pop
popf
inc
sbb
adc
sbb
pop
test
add
xchg
out
and
sahf
in
inc
call
xor
cmp
push
adc
xchg
mov
or
bound
add
cmc
mov
mov
mov
push
aas
or
aaa
fwait
dec
add
and
scas
divb
add
cmp
mov
ljmp
push
mov
mov
adc
fwait
loopne
sub
mov
sub
bound
and
or
cmp
and
jno
mov
jl
and
fstl
and
ljmp
mov
inc
cmc
or
jmp
pop
test
mov
jns
inc
inc
mov
shrl
shrl
push
pop
lret
pop
adc
loope
cmp
mov
sbb
pusha
xchg
rclb
mov
inc
inc
nop
lcall
inc
jno
stos
sbb
add
inc
cmp
insb
push
loopne
clc
and
mov
pop
test
and
push
dec
les
mov
test
cltd
adc
cltd
movsb
stos
rcrl
jb
jl
mov
sahf
shrl
scas
jb
int3
and
stos
jecxz
push
dec
dec
cltd
into
mov
aaa
test
cmpsl
push
dec
and
leave
and
lahf
stos
mov
decl
mov
xlat
adc
dec
stos
outsl
cmpsl
pop
xchg
cmp
mov
pop
dec
dec
or
iret
ret
call
dec
loopne
sub
hlt
icebp
aam
xor
xchg
popa
cmp
nop
jp
loope
inc
ljmp
adc
mov
popf
mov
in
add
popf
imul
inc
and
loop
out
sub
adc
repnz
add
cmp
andl
mov
sbb
lock
adc
and
mov
push
cli
sub
add
pop
out
aas
jp
call
xor
add
dec
jo
adc
cmc
cwtl
adc
or
lret
push
and
jecxz
mov
mov
pop
and
lds
push
fchs
mov
stc
push
orb
popa
and
adc
fistl
xor
push
xor
lds
mov
jp
add
test
repz
loop
mov
pop
xchg
andb
fwait
loop
mov
roll
into
dec
add
in
or
movsb
into
xchg
lds
jbe
jmp
insl
add
in
cmp
adc
or
push
pop
pushf
cmp
out
aam
ja
negl
xchg
test
push
repz
and
and
cltd
or
sub
daa
sahf
push
test
loope
stos
imul
into
loop
inc
mov
xor
sbb
push
clc
jbe
lcall
add
arpl
repnz
aaa
clc
loope
jae
das
sub
outsb
sub
pop
mov
adc
xchg
xchg
push
movsb
pop
nop
mov
insl
dec
adc
cmp
mov
shl
add
and
aad
cmp
adc
push
adc
add
mov
push
daa
insl
imul
cs
jo
push
aad
lret
insb
ficoml
cltd
cmp
test
mov
repnz
and
and
and
push
mov
pop
xchg
adc
ss
xor
push
add
push
cmpsl
xor
ret
pop
fst
jmp
sub
lock
push
xor
xchg
mov
dec
push
inc
addl
and
insb
and
roll
not
jp
and
mov
pusha
in
adc
lret
lods
add
es
xor
inc
adc
pop
inc
repz
add
push
push
add
inc
jno
xchg
daa
xor
adc
push
out
cmp
pushf
sbb
outsb
shlb
ss
adc
mov
add
ss
test
stc
sub
dec
xor
push
test
push
and
cli
outsb
ss
hlt
je
inc
imul
jmp
loope
dec
in
jno
ret
xchg
mov
ljmp
mov
push
inc
xor
scas
push
push
mov
andb
out
lods
mov
fists
xor
and
push
dec
or
inc
nop
leave
arpl
or
push
lods
sbb
jp
add
jmp
lock
scas
inc
adc
cltd
mov
and
mov
les
add
popf
push
int
adc
pop
push
dec
frstor
add
outsb
mov
push
pop
fstpl
mov
inc
xlat
xchg
fldt
or
xor
add
adc
clc
adc
call
and
out
or
mov
testb
scas
je
in
or
dec
dec
push
inc
mov
cmpl
lods
repnz
enter
cmp
push
add
ljmp
je
push
sub
inc
mov
arpl
xor
stos
popa
in
shlb
xor
add
push
push
jne
mov
mov
add
jecxz
insb
add
mov
and
fmulp
or
or
cmp
add
fsubrl
popf
lods
xchg
addr16
inc
xor
repz
lds
jge
cmpsb
inc
inc
sti
adc
dec
bound
xchg
cmp
push
fstl
insl
adc
xchg
arpl
out
rolb
sub
dec
lods
pop
sti
inc
mov
dec
inc
inc
repnz
mov
rcll
cld
lcall
mov
repnz
in
mov
es
les
mov
xchg
ret
xor
sbb
shrl
xorl
ja
mov
cmpsl
mov
inc
fnstsw
das
mov
add
testl
out
mov
movsb
movsb
inc
ja
rcl
adc
shr
xor
lock
test
movsb
add
xchg
or
sub
adc
and
or
scas
lods
dec
and
or
push
imul
cmp
xor
leave
test
add
inc
mov
imul
mov
movsb
dec
adc
add
pop
ljmp
pop
je
inc
push
mov
adc
jg
pop
mov
inc
mov
cwtl
enter
mov
pop
inc
fidivrs
xchg
addl
mov
dec
or
add
xor
dec
ret
movb
adc
xchg
ret
jns
mov
or
and
lds
jmp
scas
sub
aas
add
addl
jecxz
stos
jmp
jl
nop
cmp
mov
inc
lods
or
push
push
cwtl
lcall
xchg
js
scas
in
js
sbb
call
cmp
sub
test
pusha
cwtl
jno
fisubrl
or
addr16
mov
pop
dec
pop
xchg
adc
fdivrl
sub
or
jle
clc
gs
fisttps
push
mov
adc
mov
adc
push
pop
mov
push
dec
mov
add
jp
in
xchg
fcomps
test
and
mov
mov
dec
xchg
mov
inc
adc
leave
push
test
repnz
dec
das
call
repz
outsl
jmp
xchg
das
shlb
pop
mov
js
xchg
inc
shlb
xchg
lahf
jmp
jp
insb
pushl
xlat
mov
sub
cmp
push
add
cmovp
push
subb
add
pop
movsb
jns
cli
xor
pop
add
dec
pushf
in
test
xcrypt-cbc
cmpsl
rcr
enter
fistl
fwait
in
sub
pop
mov
push
adc
ret
rclb
loop
pushf
xlat
sub
mov
fldl
sti
test
int3
and
add
xchg
adc
repnz
adc
rolb
popf
inc
add
xor
sub
or
ljmp
les
movl
xor
pop
adc
js
sbb
cwtl
jae
out
aad
bnd
jle
mov
adc
repnz
mov
xor
inc
jle
testb
pop
xorl
cli
shll
xor
js
fs
dec
pop
sbb
repz
scas
dec
stos
dec
bound
push
and
fsts
add
sbb
addb
test
ljmp
inc
pop
pop
push
in
xchg
clc
xor
orb
push
iret
push
outsl
les
mov
lret
sub
add
pop
mov
dec
test
in
arpl
or
out
xor
int
or
xor
std
or
and
popf
mov
sbb
add
mov
add
movsl
push
clc
dec
and
cld
arpl
inc
rcrb
andl
and
lock
enter
popa
push
xchg
jmp
add
xchg
or
dec
xorb
xor
test
jmp
test
pop
and
jns
cmp
ljmp
inc
mov
push
dec
adc
cmp
or
and
xchg
inc
les
sub
nop
sbb
jmp
inc
xor
dec
jl
sub
dec
sbb
ljmp
push
xchg
xor
aas
fisubrs
inc
adc
push
iret
sub
fcmovb
add
xchg
inc
mov
rorb
pusha
xor
pop
sbb
sbb
pop
mov
dec
andl
xchg
rcrb
xchg
lret
inc
mov
and
push
mov
and
sahf
adc
or
adcb
xchg
adc
mov
ljmp
jl
mov
andl
test
sahf
scas
dec
mov
adc
mov
shlb
mov
sub
xchg
fldenv
sahf
xor
pusha
sbb
rcrl
pop
mov
cmp
mov
loopne
jmp
mov
fnstenv
adc
out
pop
jnp
add
xchg
mov
cld
cmpsb
xchg
add
inc
or
sbb
xor
insl
aam
cmpsl
icebp
arpl
and
sub
icebp
xchg
aaa
sub
imul
push
ret
int
out
sub
mov
in
movsb
stos
out
jp
mov
dec
xor
adc
and
out
fdiv
ja
mov
pushf
mov
pop
push
sarb
stc
mov
push
dec
xor
movsb
push
sbb
inc
mov
lahf
stos
mov
or
es
add
xchg
dec
fwait
mov
icebp
cmp
mov
out
sub
mov
or
lret
cmp
or
sti
or
xchg
lods
int
je
les
jmp
pop
mov
and
or
test
arpl
and
movsb
dec
aam
das
ja
andb
and
fstl
jns
test
jb
or
leave
ds
ljmp
out
subl
sub
cmp
sbb
pop
push
push
scas
sub
jae
adc
sub
and
cmpsl
jle
roll
popf
mov
xor
fstpl
idivb
and
jnp
xchg
popa
xor
push
add
cld
jmp
std
and
idiv
cmpsl
mov
jae
push
fmull
hlt
stc
push
aaa
xor
testb
arpl
and
add
xchg
ret
push
cwtl
dec
cltd
movsl
jb
mov
mov
pop
lcall
adc
sub
jbe
cmc
nop
push
and
bound
jecxz
fcmovne
adc
cmp
mov
leave
mov
push
mov
popf
jne
cbtw
and
push
sub
mov
jnp
les
jb
stc
out
inc
imul
xlat
jmp
test
cmc
js
adc
and
jl
xlat
or
cmp
stos
aas
hlt
leave
or
mov
inc
cmp
mov
mov
dec
sub
xor
mov
icebp
cmp
dec
enter
cmp
cli
mov
jae
ss
out
push
xchg
leave
dec
mov
mov
loop
in
repnz
push
pop
loop
mov
orb
sub
mov
xchg
loop
jmp
cltd
xchg
bswap
js
cmp
xor
call
jecxz
jno
add
add
mov
movsb
arpl
jge
cmp
and
enter
push
pop
call
push
popa
push
sbb
cmc
fdiv
dec
out
mull
adc
or
inc
aaa
inc
sub
popa
cwtl
es
adc
dec
iret
mov
jae
push
and
mov
jmp
out
dec
test
or
jp
xor
nop
add
pusha
cmpsb
sub
popa
pusha
lock
mov
jecxz
mov
test
add
leave
jmp
addr16
mov
movsl
pop
lret
inc
pop
and
dec
push
adc
or
loopne
pop
sbb
in
pop
mov
mov
sub
rcrb
cli
inc
repnz
aam
idivl
inc
nop
add
xchg
cld
bound
mov
xchg
repz
xchg
dec
or
jb
xor
test
cwtl
cmp
xchg
imul
xor
movsb
inc
cwtl
ret
fimull
sub
call
adc
inc
mov
add
cmp
cs
lcall
inc
xorb
add
outsb
xchg
add
mulb
adc
shll
or
repz
and
test
cmc
cs
ffree
pop
jmp
std
lcall
jmp
xchg
sub
sub
ret
shll
sub
mov
outsb
movsb
addr16
sub
jo
mov
mov
stc
enter
dec
js
inc
stos
in
bound
pop
sub
insl
into
ja
xchg
push
loopne
add
add
dec
mov
mov
lods
inc
stos
xor
hlt
pusha
in
pop
pop
in
jae
mov
jno
test
fcomp
nop
in
cmp
sysret
lret
sbb
xor
lods
add
add
sbb
test
or
mov
push
or
clc
adc
lret
mov
adc
lods
push
pusha
ret
inc
jb
dec
jnp
jo
and
test
lock
inc
jecxz
scas
mov
mov
jne
dec
jl
mov
rcrb
bound
inc
fsubl
push
rol
adc
negb
cmp
adc
dec
push
enter
xchg
pushf
rcll
jmp
in
push
sub
push
and
add
push
mov
xlat
mov
shl
daa
sbbb
in
push
cmp
andl
incl
idivl
push
arpl
outsl
in
sbb
xchg
cmpsb
or
inc
inc
fiaddl
pop
push
jmp
cmpsb
push
add
fcoms
fsts
fdivl
add
fsubr
jecxz
ss
mov
push
aas
aam
jo
testb
xchg
mov
mov
hlt
lds
cmc
pand
add
cmpl
aad
and
mov
jl
pop
push
ret
inc
push
xchg
rcll
jne
push
jmp
or
and
pop
lods
add
inc
push
lahf
push
adc
mov
add
push
jmp
jmp
icebp
fcoml
hlt
pop
adc
lds
jecxz
ss
jno
sub
test
mov
jnp
sbb
fiadds
xchg
insb
sbb
push
mov
iret
and
cld
aad
std
dec
sahf
push
cwtl
xchg
mov
imul
inc
dec
add
aaa
mov
or
cs
or
and
cmp
shlb
hlt
push
pop
addl
sahf
and
loopne
roll
xor
sbb
adc
cmp
mov
or
iret
adc
cwtl
mov
sbb
dec
in
jne
mov
sub
jne
or
out
aaa
adc
pop
rcrb
inc
sahf
xor
test
mov
sub
jnp
add
mov
or
fs
scas
loopne
jmp
mov
ret
adc
mov
sbb
loope
or
or
outsl
adc
cmpsl
arpl
push
pop
or
sbb
cmp
or
push
push
test
pusha
stos
push
adc
dec
pop
jmp
cmp
aad
lea
add
sub
cld
lret
addl
inc
add
dec
dec
pop
ss
mov
lock
mov
xorb
mov
dec
xchg
xor
mov
and
adc
les
imul
roll
loopne
rorb
scas
test
ja
movsb
movsb
mov
jns
pop
push
xchg
daa
ds
pop
test
test
sub
add
pop
dec
lret
nop
jne
pop
in
stos
pop
sub
mov
push
inc
shlb
mov
arpl
dec
add
rcrb
adc
movsb
movsb
pusha
and
ljmp
push
push
and
adcl
jecxz
or
daa
push
out
cltd
or
jecxz
pop
lret
push
xchg
or
gs
pop
mov
cmp
ljmp
dec
aad
insb
pop
dec
out
loopne
nop
loop
cmp
and
pop
jge
jno
mov
test
sbb
and
fcoms
jl
enter
cmp
iret
mov
addl
filds
mov
jbe
add
rclb
xor
sbb
leave
xchg
adc
mov
add
mov
push
push
mov
loopne
jb
cmp
into
mov
add
sbb
js
les
jo
add
pop
pop
sub
mov
push
pop
mov
add
cmpb
pusha
stos
or
mov
inc
pop
adc
out
mov
xlat
mov
roll
push
gs
cmp
cmpsb
test
movsb
pop
loope
and
idivl
adc
adcb
in
mov
ficomps
addr16
jl
push
je
mov
jnp
xchg
xorl
xor
pusha
or
out
fcoms
cli
dec
shlb
or
aam
or
sub
xor
aad
xor
addr16
cmp
repnz
loop
fwait
mov
int
mov
mov
in
pop
rolb
inc
scas
dec
sbb
jbe
adc
mov
lahf
pop
mov
imul
shr
mov
dec
dec
cmpsl
lock
call
or
mov
or
xchg
js
shll
xor
imul
ret
add
push
push
push
inc
mov
subl
xchg
sub
inc
mov
mov
mov
dec
jmp
test
fisttpll
xchg
cmp
dec
sbb
xchg
arpl
ja
call
mov
mov
adc
gs
xor
add
ljmp
add
xor
jns
clc
in
sub
outsb
mov
push
sbbl
pusha
jp
imul
mov
mov
repz
cli
cmpsl
push
leave
ljmp
add
mov
out
sbb
mov
dec
and
shr
xchg
les
mov
ljmp
sbb
jl
inc
jl
movsb
pusha
stos
cmpsb
ficomps
jnp
enter
xchg
bound
dec
dec
bound
push
fists
cli
sub
pop
dec
mov
cltd
lea
repz
insl
mov
mov
xchg
sets
imul
sub
sbb
dec
jo
outsb
in
or
xchg
mov
xchg
inc
cmp
and
push
hlt
stc
xor
mov
imul
jns
cmp
mov
inc
cmpsb
inc
int
xchg
test
sub
mov
test
xchg
and
jmp
adc
in
xor
test
push
push
cs
mov
dec
adc
jge
adc
mov
rorb
rcrb
sarb
adc
xlat
push
hlt
inc
or
hlt
mov
push
insb
sbb
popf
stc
adc
arpl
mov
mov
push
ret
out
mov
imul
xchg
mov
xor
sub
mov
or
adc
dec
or
mov
daa
jmp
xchg
inc
cld
xchg
add
cltd
dec
inc
movsl
xchg
insb
inc
pop
inc
std
mov
loope
enter
mov
fldenv
cmpsl
sbb
arpl
bound
sub
adc
cltd
insl
iret
scas
pop
or
mov
fisubl
xchg
and
or
xchg
lods
xchg
shr
aam
inc
cmp
lods
cmp
subl
mov
pop
xchg
jmp
arpl
dec
and
and
ss
pusha
test
and
incl
xor
mov
enter
dec
jmp
pop
loopne
stos
dec
xor
in
xor
rolb
sbb
mov
pop
push
xchg
fs
daa
enter
ljmp
nop
ds
pop
or
sbb
inc
sti
pop
daa
xchg
cs
add
adc
pop
inc
outsl
inc
aas
xchg
adc
adc
shl
fld1
cmpsl
loop
bound
nop
jecxz
push
xchg
dec
fistpll
cmp
or
pusha
cmp
xrelease
call
inc
jns
jecxz
out
rcll
mov
adc
mov
movsl
mov
inc
or
xor
jle
mov
js
add
or
mov
xorb
pop
and
mov
les
add
or
les
call
push
sar
xor
ret
hlt
into
nop
inc
out
add
iret
aaa
sbb
fdivrp
aaa
jnp
iret
or
mov
loopne
cmp
leave
mov
int
fldcw
dec
mov
or
jecxz
bswap
scas
inc
jge
js
inc
cmp
scas
push
divl
mov
xchg
insb
dec
sbbl
cmp
loope
sub
arpl
xor
inc
scas
test
and
add
pop
clc
loop
call
mov
cmp
push
pop
sub
lcall
xor
insl
mov
mov
popa
in
inc
in
dec
daa
fstl
mov
movl
pop
fs
cmpsb
test
jmp
mov
arpl
stos
sbb
cmpsl
add
pop
jmp
adc
adc
or
inc
out
mov
pop
sub
or
sbb
hlt
inc
adc
pop
inc
cs
nop
in
lret
mov
push
xor
sub
aaa
int
adc
xchg
sbb
cmp
sti
mov
out
push
sbb
dec
pop
pop
repz
pop
es
sub
xchg
bound
fldl
mov
fildll
push
mov
cltd
mov
xchg
cld
push
and
cmpsb
add
loope
xchg
in
in
lods
xor
xor
sbb
xor
fsubl
push
push
cltd
mov
rclb
aam
cs
xchg
add
insl
pop
sub
cmpb
pushf
gs
loop
addr16
pop
mov
mov
add
fistps
ficoml
into
xchg
or
aaa
lahf
cmp
push
in
aas
add
and
inc
les
mov
adc
nop
js
cmpsb
xchg
or
mov
out
sbb
nop
xor
inc
inc
out
add
das
mov
inc
pop
mov
aad
call
sbb
push
aad
stos
iret
cmp
add
sbb
add
call
nop
and
adc
insb
imul
or
cmpsb
pop
adc
std
xchg
popa
dec
xor
pop
jns
mov
inc
mov
pusha
movsl
xor
scas
mov
inc
lret
sbb
cmp
int3
adc
stc
adc
jp
and
push
daa
mov
jecxz
and
sub
popa
dec
adc
into
push
mov
jns
pop
mov
outsl
ret
push
cmp
jb
lcall
outsl
daa
dec
movsl
bound
lahf
cmp
mov
jge
push
sarb
dec
xchg
test
lret
push
sbb
xor
jbe,pt
add
adc
dec
jp
pop
nop
popf
add
mov
mov
dec
xchg
push
data16
dec
push
pop
mov
cmp
add
pop
dec
add
loope
sbb
sub
xchg
add
and
out
dec
cltd
mov
and
inc
cmp
gs
pop
xor
incb
xor
aas
aam
and
adc
hlt
mov
mov
mov
mov
and
cmpsl
sbb
in
roll
loopne
pusha
movsb
rorl
aas
adc
add
aas
xchg
pop
fsubs
in
cmp
kmovb
mov
cmpsl
loop
inc
lds
push
cmp
nop
jns
test
and
jle
or
mov
divl
pop
xor
vpminsw
push
jne
inc
cmp
loope
cltd
pushw
add
adc
xorl
mov
adc
or
insl
movsl
cmpsl
jb
pop
movsb
fcoms
jbe
jb
mov
sbb
sti
push
shl
dec
and
lret
dec
mov
mov
mov
cmp
or
and
inc
in
pop
ds
add
push
in
stc
add
pop
insb
clc
ficoml
fadds
cmp
jmp
xorb
or
inc
aas
enter
cld
cltd
adc
and
jmp
loop
ficoml
aaa
dec
int3
outsl
mov
sub
push
mov
mov
and
nop
lcall
testl
neg
into
shlb
sarl
test
leave
and
sbb
sbb
add
push
dec
movsl
stc
aaa
adcb
adc
xor
idivl
mull
into
jbe
icebp
call
lock
stc
dec
jecxz
mov
data16
ljmp
dec
jae
cmovns
hlt
lcall
out
mov
inc
mov
out
into
stos
fistl
adcl
cmp
push
fcompl
les
sub
insl
mov
jbe
roll
or
and
jle
mov
inc
outsl
mov
mov
ret
adc
mov
repnz
xchg
movsl
cmc
pop
or
stos
mov
es
sub
adc
aas
sub
leave
xchg
sti
inc
and
scas
push
jmp
dec
stos
cmp
push
and
out
pushf
adc
arpl
pop
pop
and
addr16
cmc
fs
sub
dec
pop
lea
xor
dec
mov
sub
adc
les
fdivrl
lcall
cmc
addb
jne
js
sar
mov
jg
test
aam
jl
dec
push
cwtl
or
push
je
in
icebp
popf
or
sahf
cmp
jnp
pusha
sbb
mov
jp
mov
or
mov
cmp
and
call
in
mov
scas
out
push
imul
jno
xchg
cmp
or
stos
pusha
or
add
movsb
lahf
sub
fs
mov
push
mov
mov
mov
out
pop
sub
mov
jae
ss
lret
popa
orb
dec
lods
push
xor
push
icebp
adcl
or
and
mov
or
jo
and
sarb
imul
shl
mov
inc
cmp
mov
insl
scas
push
xchg
mov
push
sti
mov
push
add
sti
in
adc
push
dec
cmp
jge
mov
cmp
sbb
cmpsb
pop
or
add
popa
jmp
fsubl
inc
cwtl
and
mov
adc
jge
cmp
push
mov
jge
cmp
pop
or
inc
adc
shlb
dec
pushf
lahf
cmp
out
call
mul
outsb
sbb
xchg
fldt
out
hlt
cmp
clc
add
xchg
inc
and
adc
cltd
add
cli
cmpl
mov
stc
jns
int
xor
sti
cmp
sub
sbb
roll
mov
icebp
lahf
test
xlat
and
and
add
sub
jle
inc
sub
fwait
xchg
fcmovb
pushf
in
xorb
mov
pop
inc
push
push
cmc
pop
lods
into
sbb
add
xor
sbb
bound
scas
mov
shl
or
sti
xchg
mov
inc
mov
adc
arpl
xor
testb
mov
or
xchg
ja
sti
testb
add
add
inc
dec
pop
popa
mov
fsubl
cwtl
adc
loopne
sub
cmp
push
inc
aad
mov
addr16
add
flds
fstl
and
icebp
arpl
cmp
jp
sub
ss
testl
int3
repnz
jecxz
mov
fwait
add
inc
mov
jns
lds
popa
lods
repnz
pop
jl
call
repz
inc
test
and
push
test
add
sub
daa
add
das
cmpb
hlt
dec
mov
cld
mov
movsb
cld
push
adc
das
jo
js
sbb
xor
cmp
pop
idivb
xchg
aaa
loop
cs
stos
sbb
adc
les
cld
popf
fmuls
cmpsb
insl
xlat
push
and
mov
imull
out
notb
dec
push
std
inc
outsl
psrld
sub
mov
mov
stos
scas
dec
out
mov
jl
jnp
dec
lahf
xchg
adc
outsb
push
mov
inc
ja
sub
sub
stc
call
repz
fsubrl
and
adc
sbb
cmpsb
push
mov
dec
insl
jbe
and
sbb
es
inc
fmuls
imul
faddl
rcll
loopne
adc
or
add
pop
inc
inc
or
inc
in
out
lds
mov
into
lds
mov
sbb
call
repz
test
mov
repz
mov
outsl
mov
mov
push
mov
pop
hlt
mov
and
aas
and
ret
mov
xchg
into
lcall
mov
or
adc
mov
jge
test
aaa
xor
jg
pop
mov
mov
inc
dec
in
cmp
adc
cmpsl
xor
xor
jp
mov
inc
sbb
insb
pop
dec
test
push
xchg
frstor
loope
pushf
dec
js
push
push
cld
mov
cmp
and
dec
lret
cmp
jno
clc
push
ret
sub
jo
inc
xor
fisubrs
sbb
scas
push
repnz
sub
xor
jnp
cmp
in
bound
test
shll
xor
push
inc
add
mov
inc
bound
icebp
push
mov
out
std
cmp
push
movb
aaa
pop
in
xchg
add
mov
and
pop
or
jg
nop
pusha
in
repnz
dec
push
les
je
xchg
dec
mov
xchg
sbb
jns
push
jle
inc
movsb
pop
cmp
movsb
stos
jmp
aam
sti
cld
test
xor
outsl
cmc
or
repz
decl
and
pop
jne
cmp
mov
pop
icebp
inc
push
shrb
cmpsb
mov
inc
jb
xor
pop
in
xor
dec
mov
les
pop
xchg
lret
mov
dec
jo
xor
inc
je
dec
orl
cld
jbe
in
loopne
je
addl
bound
or
clc
cmp
xor
das
test
or
and
inc
lcall
push
dec
xor
into
xor
and
push
popa
push
or
and
sub
cmp
cmovne
push
cmp
jbe
lods
decl
sub
push
outsb
mov
adc
leave
adc
inc
cmpsl
ljmp
jmp
cmp
out
iret
icebp
sbb
dec
mov
or
sbbl
fwait
jno
jbe
jmp
push
xchg
loopne
subl
lcall
pop
and
xchg
mov
xchg
outsl
sub
loope
loopne
jo
push
xorl
pop
mov
loopne
push
mov
js
hlt
inc
mov
enter
dec
push
cmpsl
xor
pop
loope
sarb
inc
test
sub
xchg
and
fwait
mov
add
or
push
jecxz
fldt
pop
bnd
adc
push
dec
or
sub
movb
and
int
repz
pop
inc
pop
or
mov
adc
stc
xchg
cmp
adcb
adc
pop
adc
and
jnp
sbb
aas
fsubs
sub
inc
cmp
dec
cmp
lock
jne
test
addb
pushf
fs
hlt
jge
push
out
test
add
mov
xchg
mov
jmp
dec
fnstcw
test
mov
dec
cmp
in
or
aaa
push
shll
test
aam
dec
int
cmpsb
js
rol
aam
push
cmp
out
cmp
push
add
dec
adc
and
ds
roll
cltd
clc
pop
addb
loopne
hlt
loope
add
stos
and
cmp
mov
adc
ret
push
jnp
sub
cmp
mov
cmp
xor
dec
test
sarl
das
jecxz
pop
cmpsb
push
and
push
xor
out
xor
cmpsb
dec
shl
je
lahf
lods
jb
cltd
outsb
or
push
jbe
rclb
mov
inc
and
sub
add
mov
js
lret
movsb
test
sahf
lods
mov
rorl
out
out
mov
sbb
jl
adc
lahf
mov
sbb
sub
jne
inc
std
jmp
sti
dec
mov
es
push
inc
cmpsl
mov
fwait
inc
adc
xchg
clc
xlat
dec
mov
lock
cltd
pop
inc
pushf
roll
insb
dec
mov
mov
test
mov
repnz
mov
and
filds
fs
mov
rcr
inc
into
repnz
fs
and
xor
test
add
sub
lahf
mov
test
jae
push
mov
lcall
sbb
and
in
adc
pop
dec
clc
test
stos
insb
aam
repnz
cmp
pop
test
les
xor
add
cwtl
xchg
push
jp
stc
xorb
cmp
mov
xchg
adc
insb
jg
or
mov
shll
ret
mov
xor
sub
scas
push
xchg
cmp
xchg
mov
rcrb
mov
xchg
and
inc
pop
push
inc
adc
cmpsb
adc
and
fwait
and
mov
pusha
xor
test
pusha
push
pop
mov
fsub
sarb
popa
stc
cmp
adc
pop
std
rorl
push
add
adc
push
lock
inc
mov
mov
sbb
inc
inc
fsts
mov
adc
push
jno
sub
adc
sbb
inc
sbb
clc
add
sahf
sub
sbb
and
push
movsb
insb
sbb
push
mov
add
add
into
jecxz
or
push
ja
dec
test
in
add
lret
lret
clc
scas
stos
mov
popa
cwtl
test
in
push
sbb
push
pop
or
add
jle
pop
push
push
test
push
icebp
pop
and
scas
repz
cmp
mov
and
repz
lret
in
jno
xor
mov
and
movsb
in
and
add
and
cld
sub
aad
mov
inc
ret
mov
shll
adc
sbb
lret
sub
push
xor
pop
lock
gs
enter
nop
mov
add
adc
subb
inc
add
dec
mov
leave
or
das
mov
fcmovnbe
push
roll
xchg
sub
jle
subb
inc
clc
xor
test
cmp
jl
inc
clc
add
add
ret
sti
or
stc
jbe
sbb
ret
addb
add
inc
push
mov
adc
mov
or
test
xchg
hlt
idivb
stos
aad
adc
lret
add
loop
jg
fadds
nop
pusha
and
mov
mov
sub
sbb
mov
loopne
rolb
lods
jp
shll
mov
incl
push
push
roll
mov
xchg
cmp
xor
repnz
cmpl
aam
inc
adc
sub
lahf
pop
fmull
add
daa
jb
mov
mov
fbstp
js
lcall
pop
jp
leave
orb
mov
and
inc
cmp
mov
movsl
mov
in
stos
adc
pop
xor
jp
cmp
sbb
push
jnp
adc
repnz
and
stos
cmpsl
xchg
faddl
pop
jo
std
sub
shll
or
jbe
fwait
cwtl
sti
inc
fmulp
sbb
ljmp
pushf
pop
popf
repz
nop
xchg
stos
or
jae
cwtl
adc
pop
imul
imul
hlt
fbld
loope
adc
or
out
jo
adc
push
xor
xor
inc
mov
sub
and
iret
sub
fistl
ret
in
mov
adc
test
andl
arpl
decb
movsl
jge
pop
dec
xor
rcrb
xor
cmpsb
rclb
mov
adc
cmp
rclb
lret
mov
and
dec
pop
mov
or
lahf
fdivrs
push
pop
in
adc
pop
cmc
cmp
jg
repz
hlt
push
test
push
lods
or
loopne
adc
inc
or
cmp
mov
dec
fcmovnb
inc
gs
and
push
xlat
sbb
sub
add
lahf
jl
pop
mov
xor
cmp
rcl
leave
sbb
push
imul
xor
aad
std
pusha
adc
fwait
and
pop
call
leave
sub
mov
inc
rcll
std
fisttpl
inc
test
xor
out
stos
aam
insb
cwtl
aaa
test
pop
cwtl
orb
dec
push
outsb
mov
and
shl
inc
sbb
andb
dec
push
jno
or
ja
adc
pop
push
rclb
sub
cmp
call
pop
mov
jb
dec
test
sub
add
add
mov
xor
and
and
repnz
xchg
insb
pop
inc
icebp
and
out
jge
and
pop
test
pop
adcl
jl
sbb
andl
cli
pop
xchg
fdivp
daa
movsl
push
mov
xor
sarb
inc
inc
mul
adc
cltd
inc
test
ret
rcrl
jge
add
adcb
call
pop
and
or
call
nop
add
js
mov
pop
icebp
mov
sbb
mov
cmpsb
jb
outsb
popf
adc
popf
xlat
adc
movsb
mov
or
push
imul
sahf
pushf
pop
add
mov
hlt
out
repnz
andb
cmc
arpl
fcomip
pop
adc
add
out
cmpsb
add
das
push
mov
fs
adc
cmc
cmp
lea
adc
mov
jns
pop
insl
mov
ds
out
adc
pop
or
mov
dec
adc
call
nop
stc
repz
push
sbb
repz
in
leave
insl
add
and
mov
addb
enter
mov
divl
icebp
ljmp
and
lahf
test
lret
mov
mov
sbb
in
or
inc
out
sti
mov
inc
or
lret
es
xchg
mov
push
xor
jg
xchg
mov
xorb
and
sub
popf
leave
movsl
push
push
pop
mov
mov
xchg
add
add
dec
je
adc
fmuls
addb
pop
adc
popa
sbb
dec
std
into
mov
sbb
sub
shlb
fbld
dec
lea
add
add
or
and
push
loop
push
push
cli
iret
lahf
pushf
jo
sbb
cmc
ss
xchg
mov
or
js
rclb
ret
mov
ret
pushf
adc
fs
enter
sbb
loope
shlb
push
leave
add
cmp
loopne
jno
fdivrl
out
cwtl
sbb
or
in
fcoms
add
inc
data16
pop
std
sub
in
stos
std
aas
sbb
xor
lahf
sbb
jp
adc
mov
mov
adc
mov
loop
push
adc
sbb
sub
mov
sbb
add
xchg
out
pushf
mov
pusha
data16
lods
arpl
rcll
outsl
push
daa
cmpsb
les
inc
adc
dec
lahf
or
lahf
imul
ss
push
testl
sbb
xor
cmp
mov
xchg
not
sbb
push
add
inc
jo
roll
lods
orl
push
dec
dec
test
jp
in
dec
and
and
mov
int3
fdivs
clc
mov
and
push
aad
cmp
lds
mov
push
mov
add
pop
dec
sub
push
jae
mov
mov
inc
mov
sub
xchg
std
xor
sahf
mov
jns
lahf
push
icebp
push
std
xchg
mov
add
cmc
or
test
jecxz
add
and
aas
sub
stos
dec
and
aam
frndint
dec
pushf
mov
push
mov
pop
jl
add
xchg
xlat
inc
xor
test
jno
sub
loope
adc
jnp
adc
pop
daa
adc
or
aam
cmpsl
dec
into
cmpl
pushf
sub
jp
add
push
inc
in
add
adc
mov
sub
les
cli
addr16
xchg
or
jge
mov
lock
or
sbb
js
pop
xchg
mov
sbb
andb
je
mov
jae
sbb
add
shll
es
cmp
mov
or
mov
loopne
and
dec
lock
xchg
ds
push
stc
xchg
inc
mov
cli
pop
ljmp
imul
xchg
xchg
xor
fnstcw
jmp
mov
icebp
insb
jp
pop
call
jp
mov
ficoms
inc
inc
fscale
mov
sbb
sbb
adcb
jg
fstpt
push
in
jecxz
dec
xchg
push
test
add
and
neg
inc
loop
or
cmp
xor
popa
mov
cmp
add
in
test
data16
inc
xchg
sbb
sbb
cmp
dec
loop
inc
sti
jne
dec
xchg
out
outsl
xchg
aaa
push
push
adc
in
adc
cltd
jg
scas
loop
adcl
fdivp
jne
mov
sbb
ljmp
popf
inc
pop
sbb
addb
ud0
add
dec
add
add
jmp
ds
or
iret
andl
dec
aad
adc
mov
add
outsb
cmp
adc
in
cltd
pusha
and
out
adc
les
inc
push
loop
dec
xchg
cli
orb
cmp
push
push
pusha
out
or
jb
mov
jmp
and
insl
gs
ror
daa
sub
mov
mov
arpl
xchg
pop
jb
mov
out
mov
jecxz
add
add
sub
clc
ja
inc
inc
and
fiaddl
inc
gs
into
test
sub
out
loopne
push
and
out
pushf
mov
mov
and
push
je
xchg
lret
les
pop
mov
and
dec
aad
mov
insl
lods
add
dec
cmp
xchg
insb
lods
add
ret
push
idiv
sub
xchg
and
ja
sub
push
aad
add
addl
pushf
inc
insl
xchg
rorb
mov
or
pop
mov
add
out
fldt
movsl
jae
pop
push
push
jl
inc
rol
fmul
roll
lahf
cmp
popf
jbe
adc
jmp
xchg
dec
pusha
aad
mov
aas
mov
push
xchg
jmp
push
xlat
fneni(8087
and
xchg
adcb
mov
in
push
adc
lret
push
xchg
arpl
push
outsl
lock
mov
and
inc
arpl
dec
pushf
inc
jg
rorb
test
aam
xchg
add
icebp
pop
inc
and
stc
aas
sub
push
inc
movsl
outsb
or
fcomps
sahf
sub
pop
add
scas
push
sub
fimuls
jo
and
sub
repz
xchg
mov
jge
sbb
popa
or
adc
dec
pop
pop
jl
in
jo
jp
arpl
cmp
cmp
xlat
sbb
test
out
test
jbe
cmp
jbe
cmpsb
rcrb
fildl
lods
scas
mov
sti
and
pop
dec
mov
in
adc
mov
and
hlt
lahf
mov
ja
aam
lea
inc
inc
or
xchg
lock
adc
mov
pop
jle
push
scas
dec
pop
pop
mov
cmp
sbb
adc
lock
cmp
cmpsb
sbb
inc
aas
mov
movsl
sub
loopne
mov
sub
xchg
adc
shrl
loope
sbb
add
mov
fwait
mov
pushf
push
mov
aas
push
cmp
lods
push
mov
xchg
pop
loope
aas
ds
push
dec
jo
aas
loope
inc
jmp
mov
sub
sbbl
adc
adc
movb
xchg
add
xorl
push
es
negl
dec
imul
jecxz
insb
outsl
pop
mov
shl
jecxz
mov
xorl
add
xor
lret
shll
push
negb
dec
add
ds
inc
pop
ss
idivl
sbb
loopne
dec
xchg
sub
jo
mov
sbb
data16
mov
pop
inc
and
adcl
jbe
and
lahf
mov
mov
rorl
pop
cs
cmpl
push
nop
enter
jp
vmovsd
movsb
and
std
and
test
mov
cmp
add
aad
lcall
fdivrs
imul
out
add
pusha
stc
add
pop
mov
add
lcall
push
or
and
bound
shrb
xor
push
test
xorb
push
mov
inc
xor
inc
inc
push
mov
mov
push
inc
lds
rcrb
sbb
cmp
jg
mov
pavgw
cwtl
cmp
xor
dec
mov
sahf
fiaddl
testb
fwait
mov
mov
push
cmp
sbb
push
fadds
sbb
mov
pop
jle
scas
jg
test
in
das
cli
ss
xlat
lea
xchg
xor
lea
sbb
xor
and
ljmp
jecxz
js
xchg
sub
fs
jg
fadd
add
xchg
mov
xchg
cmpl
push
sub
xor
and
enter
xchg
xchg
mov
scas
xchg
sahf
push
aas
mov
push
mov
divb
inc
or
daa
scas
dec
jnp
and
ljmp
cmp
adc
cmpsl
jmp
sbb
sub
scas
push
rorb
mov
lods
add
out
cwtl
ljmp
pusha
mov
fstpt
shl
in
scas
cmp
jp
movl
sub
pop
lcall
xchg
sbbb
mov
adc
cld
test
or
mov
pusha
xor
popf
jle
stos
add
fbld
outsb
lock
sbb
adc
xor
xchg
push
xor
inc
pop
jno
mov
out
dec
imul
mov
test
push
jp
mov
ret
push
std
adc
sbb
jecxz
mov
mov
pop
dec
inc
or
movsb
mov
add
cmp
clc
mov
inc
sub
rcrb
mov
push
mov
test
ret
xchg
cmpsb
pop
push
out
add
lods
push
fnstcw
and
loope
pop
jp
mov
add
sbbb
inc
dec
imul
push
pmullw
cmp
fs
aam
xchg
cmp
lahf
loope
add
imul
inc
lods
dec
push
bound
sbb
wrmsr
and
xor
movsb
push
xor
lods
cmp
fwait
xchg
push
out
adc
fmulp
es
push
mov
sbb
dec
dec
rclb
mov
sbb
bound
enter
lcall
cmp
mov
lahf
add
sub
sub
add
loopne
sbbb
ja
mov
jle
movb
repz
add
or
sti
insl
push
jne
or
pop
rcll
push
adc
addl
jmp
cmp
out
lret
inc
lods
pushf
jo
jle
ret
sahf
dec
aam
inc
jge
pop
shlb
xlat
mov
jl
bound
jo
shlb
sbb
fwait
aas
pushf
jg
outsl
mov
jg
jge
mov
ret
push
mov
shlb
lods
or
push
cmp
das
loopne
test
or
sbb
popf
enter
jle
negl
lret
inc
sub
pop
test
outsb
test
or
mov
sbb
xchg
inc
xor
dec
mov
mov
in
mov
xor
loop
mov
adc
ret
and
inc
fldt
outsl
cmpsb
fwait
push
inc
insb
mov
xchg
lods
sahf
nop
inc
cmp
cmp
cmc
xor
call
mov
push
sub
cmp
cmc
mov
inc
push
test
pop
push
enter
or
adc
clc
sbb
les
sbbl
and
test
out
ret
and
push
dec
inc
lds
sbb
add
nop
and
add
pop
shlb
popf
nop
cli
inc
xor
add
jb
es
jmp
cmp
scas
adc
pop
popa
pop
xor
mov
in
xor
push
test
lds
push
lcall
sbb
addl
stos
faddl
call
lahf
push
iret
fs
or
outsl
and
sub
sub
fsts
out
inc
push
pop
cmpsb
push
popa
pop
xor
inc
inc
mov
push
push
les
mov
pop
cwtl
dec
jge
bound
lock
and
inc
mov
loopne
lods
outsb
cwtl
push
xchg
jg
lret
pop
adc
sbb
lea
mov
or
mov
mov
push
jb
xchg
sub
stos
cmp
stos
scas
push
lds
add
adc
mov
xor
in
and
insb
mov
push
sub
cmp
lcall
lds
aas
add
mov
mov
mov
adc
inc
in
out
add
sbb
sbb
rorb
arpl
test
daa
aas
ss
jbe
in
sbb
dec
lea
dec
aas
dec
cmp
mov
mov
jg
hlt
mov
or
and
xchg
and
lret
pop
xchg
adc
ja
addr16
add
push
into
and
xlat
cmpsl
sub
add
rolb
sbb
cmp
add
pop
rolb
lods
xchg
orb
xchg
ret
inc
inc
pusha
adc
mov
xchg
dec
mov
dec
xor
add
lock
clc
cmp
jp
fistl
rolb
test
jns
or
cmp
out
sbb
into
sub
fnsave
add
mov
jmp
test
inc
or
leave
imul
or
das
ret
mov
ss
jae
arpl
int
mov
inc
stos
mov
push
and
dec
mov
iret
je
cld
call
fadds
mov
sarw
daa
mov
xor
xor
mov
inc
xchg
fs
imul
adc
pusha
ss
popf
mov
mov
bound
std
mov
dec
or
pusha
xchg
mov
mov
xor
xchg
je
jp
push
fdivrs
mov
adc
aaa
cmpsb
mov
dec
pop
scas
stc
jne
jle
rcl
mov
mov
mov
stos
push
je
inc
shlb
imul
inc
and
add
in
leave
xchg
add
cld
fsts
lods
sbb
fstl
imul
loope
cs
mov
das
mov
testb
jge
mov
xchg
rcrl
or
sbb
ret
adc
or
clc
mov
mov
mov
fstps
sti
jae
test
cld
sub
sbb
mov
sahf
dec
mov
scas
sub
mov
ret
insb
add
iret
and
inc
call
iret
add
xor
or
mov
in
sbb
js
mov
fwait
sub
bound
lods
fildl
imul
inc
adc
dec
enter
test
xor
out
inc
icebp
mov
and
in
repz
jne
push
movsl
xor
sbb
and
adc
aad
jbe
lds
lcall
sub
nop
pushf
add
call
xor
mov
shrl
enter
xor
mov
pushf
ljmp
mov
les
bound
add
leave
cmp
std
addr16
enter
jbe
mov
mov
sbb
pop
rol
arpl
adc
dec
daa
scas
inc
lret
dec
xchg
test
jp
mov
adc
repnz
push
cmp
pop
xchg
inc
add
mov
ret
mov
pop
or
out
in
add
lods
sub
cmp
cmpb
lahf
or
cmp
cs
daa
sti
test
fildll
enter
mov
out
lds
xorb
xchg
cmp
shll
xor
call
scas
dec
mov
cli
jnp
push
sbbb
xor
dec
stos
inc
xor
push
lret
clc
cs
xchg
adc
push
lret
add
sub
lock
or
bound
dec
lret
loop
test
fistl
popf
xchg
aad
or
sub
xor
shlb
ficoml
push
sub
adc
mov
js
mov
and
xor
sbbb
xor
lcall
insl
xor
movl
jne
jno
dec
pop
loop
movsb
cli
inc
push
enter
loope
fxch
gs
in
orl
movsw
adc
cmp
shlb
fnstcw
ljmp
xor
pop
out
add
into
xchg
xor
xchg
push
mov
pop
pop
xor
out
je
push
fmul
hlt
in
mov
inc
loopne
sbb
aam
add
jbe
sbb
xor
sub
mov
jl
mov
push
pop
adc
cmp
jp
sbb
pop
inc
sahf
in
ret
sbb
and
mov
inc
enter
mov
pop
lods
inc
enter
test
mov
in
or
mulb
dec
sub
push
or
mov
cmpsb
mov
pop
scas
inc
push
and
daa
movsl
adc
mov
sbb
add
and
mov
mov
sub
aad
xor
aaa
lret
pop
push
leave
mov
fwait
inc
outsb
int
mov
push
mov
lods
adc
or
ret
pop
movsb
and
pop
iret
push
rclb
mov
fs
data16
jbe
push
pop
addr16
hlt
push
aad
adc
cmp
mov
push
in
mov
or
ds
dec
mov
test
shl
and
fldl
gs
inc
repnz
push
dec
movsb
add
cmp
pop
rcrb
adc
mov
movsl
sbb
dec
ljmp
jns
pop
add
mov
insb
pop
cmp
push
jno
test
xchg
pop
xor
insl
add
sbb
and
xor
mov
adc
sbb
adc
push
out
sub
xor
pop
pop
leave
cmp
push
jb
jae
sub
les
roll
push
push
add
lcall
mov
dec
lret
xchg
test
mov
jl
dec
add
and
mov
dec
sbb
popf
pop
push
add
fidivrs
and
xchg
sub
or
inc
cmp
pop
js
cmp
ljmp
aad
dec
pop
orl
sahf
gs
xchg
xchg
test
xchg
out
lods
mov
jno
in
cmpsl
cmpb
bound
sub
outsb
dec
xlat
push
mov
cli
cmp
in
and
std
leave
sub
rol
jecxz
add
mov
nop
fidivrl
push
jge
les
xor
fistpll
je
adc
mov
lea
pusha
xor
pop
test
jp
inc
addr16
dec
dec
or
stc
pop
pop
or
test
nop
adc
or
sub
or
cmp
nop
inc
or
nop
in
loopne
jnp
subb
sub
shl
inc
scas
popa
shlb
ret
push
push
popa
iret
xlat
subl
subb
pop
hlt
aaa
mov
or
jne
mov
pop
mov
daa
outsl
cmp
lods
les
out
push
push
fstps
xor
jmp
andb
rcll
cmpsb
das
cmp
adc
sbb
jl
jl
or
loop
xor
lds
cs
leave
out
xor
pop
repnz
daa
xchg
out
and
sbb
jge
mov
cmpsl
jp
cltd
lods
pop
leave
mov
lods
ret
std
pop
in
cmpsl
je
or
xchg
mov
sahf
leave
inc
and
lods
xchg
add
aaa
roll
out
inc
test
adc
sbb
dec
push
push
lret
adc
jle
pop
lret
push
or
and
lahf
xchg
loope
lock
and
xchg
arpl
dec
fdivrl
xor
lods
sbbb
inc
inc
test
sbb
dec
std
cmpsl
fsubrs
imul
mov
add
push
lods
out
pop
call
cmpsb
and
pop
inc
jge
mov
dec
sub
popa
cwtl
xor
test
dec
or
adc
jno
sahf
dec
aam
sub
dec
fcmove
pop
cwtl
leave
sub
cmp
inc
mov
xchg
movsl
loop
add
mov
cwtl
add
add
dec
and
push
xorl
and
jge
cmp
inc
mov
in
mov
and
inc
sbb
insl
test
jge
adc
lods
push
jle
loop
andb
sbbl
pusha
inc
call
stos
push
mov
dec
lret
pop
xchg
jmp
rorl
aas
mov
sbb
push
mov
jbe
or
sub
mov
sub
jecxz
sarl
in
fists
arpl
pop
push
mov
mov
repnz
into
cmpsb
push
nop
xor
loop
dec
push
and
and
dec
sbb
mov
icebp
int3
mov
jns
decl
push
scas
test
jp
dec
daa
out
jne
adc
pusha
jecxz
xchg
push
mov
add
test
mov
inc
lahf
call
xchg
xchg
cmpsl
inc
rorb
call
cmp
stos
mov
mov
pop
mov
pushf
dec
cmp
cs
inc
loopne
cmpsb
fwait
leave
dec
clc
lahf
dec
or
mov
mov
sub
and
jge
and
popa
mov
inc
loop
shlb
cli
bound
aas
pop
enter
push
dec
fldenv
dec
jle
cld
push
dec
sbb
call
and
jnp
lahf
adc
insb
push
or
aad
jbe
sbb
int3
jno
xchg
and
mov
add
dec
push
es
fisttps
cli
adc
outsb
inc
int
mov
add
testl
js
mov
jp
loopne
js
dec
xchg
das
jecxz
xor
push
and
jg
inc
xchg
clc
adc
aad
iret
fstl
inc
dec
adc
cmpl
shll
mov
pop
icebp
inc
dec
mov
mov
add
stos
or
push
lahf
in
mov
mov
clc
lcall
jecxz
push
jecxz
dec
scas
inc
into
lcall
and
into
mov
sbb
imul
or
rorb
out
xchg
bnd
xchg
stos
icebp
adc
cmp
mov
test
fsts
xchg
rcrl
adc
mov
loopne
inc
mov
dec
adc
mov
ja
ret
icebp
imul
out
movsb
pushf
in
jmp
mov
pop
adc
outsl
and
or
dec
pop
dec
std
gs
iret
js
cmp
pop
jecxz
cwtl
mov
testb
dec
jp
cld
pushl
sti
sarl
mov
shrl
xlat
add
test
ss
shl
cmp
call
mov
push
sub
mov
pop
leave
lea
or
push
pop
add
and
leave
mov
in
outsb
test
adc
and
cmp
or
subb
adc
cmp
cmc
push
push
clc
pop
cmp
push
dec
cmp
mov
inc
movsb
pop
sti
sarl
dec
xor
xchg
lods
dec
jnp
rorb
push
push
sub
lcall
cmp
adc
filds
mov
shl
xchg
jge
ds
and
adc
jno
and
jne
xlat
fwait
jmp
xor
cmp
loop
pop
movsb
imul
xchg
xchg
cs
pushf
jbe
aaa
lahf
lods
cmp
jmp
pusha
stos
dec
arpl
ljmp
loopne
ljmp
cmp
jne
cli
or
mov
daa
jo
arpl
sbb
gs
mov
and
gs
mov
and
sbb
aas
adc
push
lods
inc
das
mov
repz
adc
sbb
adc
mov
push
adc
lods
aam
dec
loop
or
cltd
mov
mov
mov
pusha
xchg
xchg
daa
lods
iret
inc
xor
lcall
je
scas
mov
lret
mov
and
adc
test
inc
aad
push
loop
cwtl
sbb
and
shrl
ljmp
xchg
cmpl
test
mov
sbb
adc
inc
mov
dec
or
popa
push
cmpsw
stc
sbb
insl
pop
add
inc
xorb
sbb
dec
cmc
or
ficompl
push
test
inc
insl
or
sub
cmp
cld
pushf
repz
ljmp
mov
cmc
sbb
adc
jns
pop
sbb
je
mov
mov
pop
shr
imul
shlb
or
std
sub
or
cmp
movsb
movsb
fisubrs
push
dec
pushf
adc
imul
and
push
fcomp
jmp
aad
pushf
push
inc
add
dec
aam
mov
mov
dec
adc
add
sti
pop
inc
add
jle
xor
mov
mov
sub
xor
out
push
shll
icebp
pop
loop
cmovno
inc
mov
lahf
test
xchg
cmp
mov
aam
dec
imul
xchg
dec
mov
nop
insb
adc
out
adc
xchg
cmpl
inc
push
xchg
mov
fwait
push
and
test
inc
aam
fs
add
loop
mov
and
shll
or
out
imul
inc
adc
jecxz
aas
out
adc
mov
or
pop
xlat
lahf
or
call
hlt
sub
and
cmc
shr
cmp
pop
mov
inc
cmp
dec
add
push
orb
mov
cmp
mov
or
push
adc
pop
add
lcall
scas
movsb
ljmp
int
mov
cmc
fsub
jo
sbb
mov
jo
pushf
add
stc
jl
stc
sbb
adc
ljmp
pop
sub
fiadds
jno
cs
add
mov
mov
add
fwait
push
push
insb
xchg
faddl
cmp
inc
or
inc
push
gs
pop
popa
mov
add
je
dec
or
call
cs
pusha
xchg
sub
push
invd
fwait
dec
je
in
ja
add
mov
sbb
enter
dec
push
xchg
adc
dec
or
jl
inc
mov
je
adc
mov
sub
pop
or
call
add
mov
adc
es
sub
inc
push
adc
mov
pop
mov
sti
notb
xor
rcrb
sbb
fwait
dec
in
pop
call
in
xchg
xchg
out
dec
inc
xchg
clc
mov
iret
in
xor
or
pop
jmp
addb
push
inc
popf
in
test
movsb
and
add
xchg
or
lods
rclb
jle
or
sbb
cmpl
std
or
jno
inc
jbe
push
lahf
fnstenv
cmp
cmp
or
push
cli
pop
mov
push
imul
mov
mov
mulb
ds
inc
fs
cmp
clc
jnp
lds
cmpb
adc
pop
lret
loop
mov
lret
or
jg
pop
pop
popf
push
jo
xchg
push
adc
ss
pop
dec
mov
subl
in
cmp
movsl
inc
mov
std
ljmp
pop
mov
and
rorb
xchg
mov
jbe
xchg
cmpsl
lea
jns
sub
cwtl
mov
int
pop
xchg
mov
inc
add
in
mov
and
addb
faddl
mov
add
pop
fsubl
inc
mov
addb
fs
lea
pminub
xchg
lea
jmp
adc
sbb
sbb
or
add
adcb
cmpsl
and
jno
dec
xchg
outsl
imul
ljmp
cld
xor
sbb
ficomps
cs
jb
popa
add
add
mov
add
in
les
sub
add
adc
repnz
xchg
mov
test
cmpb
aas
or
sub
push
stos
mov
cs
xlat
push
dec
inc
repnz
and
aaa
mov
rcrl
add
jg
dec
push
fnstcw
pop
adc
out
sub
mov
popf
cli
push
push
movsl
sub
fstp
arpl
hlt
into
sub
dec
jne
clc
mov
mov
jg
push
add
fiadds
data16
pop
mov
push
mov
pop
aad
lods
lods
js
andl
xchg
lods
or
scas
rcrl
pop
and
int
lea
faddl
addr16
and
sahf
out
and
test
fs
dec
inc
call
jecxz
sarl
push
aas
jnp
mov
xchg
mov
sbb
jae
push
jge
cli
xchg
push
stc
sbb
add
bound
ss
pop
scas
cmp
adc
fiaddl
aaa
cmp
xor
mov
aam
and
shlb
inc
xchg
pusha
sbb
add
cwtl
std
mov
mov
aam
sub
cmpsb
cmp
repnz
pop
mull
dec
bound
inc
sbb
sti
xchg
out
rcll
xchg
icebp
adc
sub
hlt
xchg
inc
es
aas
pop
in
adc
loopne
pushf
cmp
sub
dec
out
xor
and
lcall
lock
inc
jb
or
cmc
pop
push
int
or
sti
mov
pop
jno
inc
pop
mov
repnz
push
lods
add
in
jmp
lahf
cltd
dec
add
xor
mov
popf
xchg
or
lock
shlb
stc
add
ss
xchg
mov
pop
jae
in
jecxz
lods
dec
jecxz
mov
or
cmp
lahf
lock
xchg
cs
scas
inc
popf
aad
xor
sbb
and
icebp
or
lcall
inc
or
and
stc
push
and
jae
pop
out
adc
scas
test
mov
in
cmp
fsubs
xchg
xchg
sbb
push
adc
sub
add
mov
adc
mov
or
stc
inc
mov
push
mov
mov
cmp
outsl
adc
mov
xchg
iret
pop
aam
adc
jno
je
imul
push
orl
mov
ja
add
sahf
xor
add
mov
push
sub
and
ds
ds
jl
es
jb
leave
pop
es
push
push
addb
inc
mov
fs
mov
or
and
mov
cmp
and
aaa
dec
sbb
mov
sub
xchg
mov
lock
add
push
out
adc
inc
push
sub
or
or
dec
js
pcmpgtb
imul
pop
mov
add
xor
mov
add
lea
dec
dec
push
pop
jo
mov
sub
and
stc
and
mov
mov
dec
mov
sarb
jecxz
repnz
je
pop
jb
ficoml
dec
loop
js
mov
in
inc
add
xor
repz
xor
add
dec
icebp
loope
sbb
ds
adc
mov
test
aad
cmp
mov
xchg
xchg
idivl
and
dec
cmp
lret
adc
pop
lret
divb
outsl
mov
mov
and
roll
pop
dec
add
les
jno
push
inc
mov
push
enter
ret
cmp
clc
add
and
aam
mov
dec
mov
xchg
mov
xchg
and
mov
push
fwait
adc
out
es
xchg
nop
inc
mov
pop
ja
les
insl
adc
inc
call
or
data16
psraw
icebp
or
int
cmp
mov
or
movsb
repz
xchg
enter
pop
int
iret
adc
lcall
flds
sub
mov
xor
dec
add
and
test
gs
add
jecxz
sub
jp
scas
test
adc
xchg
lcall
sbb
push
cmp
push
mov
cwtl
push
xchg
add
add
dec
aad
lods
mov
or
fidivs
xchg
int3
push
pushf
sub
loop
dec
les
xchg
xor
mov
das
pop
jmp
jbe
xor
scas
mov
test
cmp
sbb
popa
mov
xor
enter
stos
sbbl
adc
lcall
push
or
push
sbb
push
add
iret
pop
cmc
in
xor
sub
cmovns
fs
lret
push
mov
sub
mov
jmp
mov
xchg
data16
mov
clc
lret
xchg
add
in
call
cmc
loop
xor
push
cli
mov
popf
sub
mov
push
push
hlt
dec
inc
jecxz
or
je
pop
nop
ss
test
sub
fwait
roll
inc
push
out
jnp
push
add
inc
das
insl
dec
jp
roll
test
jae
and
scas
mov
push
push
mov
inc
inc
xchg
or
jno
sub
add
add
jae
jmp
ret
fwait
xchg
sbb
and
cmpsl
xchg
mov
fldl
repnz
xchg
inc
test
push
js
cmp
dec
scas
add
popl
fwait
mov
inc
push
fwait
add
cmpsl
pop
popf
je
or
or
add
add
cmpsb
pop
mov
xchg
subl
lods
and
adc
stos
call
adc
mov
push
mov
cmp
mov
sub
lock
addl
aad
gs
sbbl
or
mov
movsl
mov
mov
pop
adc
test
imul
dec
add
and
imul
int
cmp
shrb
gs
roll
loope
push
loop
clc
ss
sbb
or
ret
mov
push
push
jns
or
xor
add
sub
xchg
or
cmp
sbb
out
mov
jb
je
mov
and
daa
jmp
adc
sbb
push
pusha
repz
in
in
pop
cmp
jae
mov
adc
aaa
dec
ljmp
xchg
ja
cwtl
adc
mov
dec
adc
push
mov
sub
mov
xor
push
scas
cmc
sti
pushf
pop
in
inc
adc
leave
loopne
outsb
push
xchg
jmp
or
shrl
dec
cmp
enter
pop
rorb
mov
xchg
and
roll
test
mov
xchg
add
adc
sbb
mov
and
in
dec
sbb
mov
lock
repz
fildl
mov
add
mov
mov
add
sbb
outsl
outsl
xor
ds
ret
out
jecxz
mov
test
or
sbb
into
mov
cmp
pop
add
cmp
push
shl
es
adc
lahf
sbb
or
jbe
sub
iret
push
cmp
cmp
repz
adc
dec
out
mov
cwtl
repz
enter
inc
sbb
std
cmp
dec
ret
data16
and
mov
mov
iret
test
cwtl
js
shlb
jne
ds
mov
cmp
dec
pop
es
xor
stos
push
xchg
lret
inc
stos
outsl
cmp
jmp
lret
inc
xchg
add
mov
and
mov
dec
xchg
inc
jb
sub
sub
push
pusha
add
call
das
pop
ret
bound
xchg
pop
popf
insl
addl
and
dec
sbb
dec
xchg
cmp
orl
cld
mov
in
cmp
sbb
jle
inc
js
sti
add
fnstsw
push
popa
bswap
cmp
push
mov
loopne
dec
cmpl
jno
inc
adc
and
dec
mov
xchg
add
add
inc
cmpsl
leave
and
xor
and
out
xor
lods
xchg
test
jl
add
pop
cs
push
add
mov
xor
movsb
cld
in
push
and
mov
mov
mov
xor
mov
sbb
enter
sub
or
test
adc
pusha
push
dec
rorl
jle
jb
sbb
adc
and
push
nop
sahf
mov
dec
jg
stos
out
mov
sbb
ss
mov
xor
mov
or
test
inc
call
inc
jmp
inc
mov
call
push
decl
sbb
sahf
les
mov
adc
inc
and
repz
mov
dec
test
enter
pop
cli
mov
dec
addr16
fisttpll
pop
mov
and
mov
add
cld
cld
iret
mov
sub
add
or
mov
sub
dec
aad
dec
int
sbb
leave
rorl
push
and
dec
add
jmp
mov
add
xor
rolb
or
in
or
adcb
xor
mov
stos
cmp
lds
scas
push
movsb
dec
inc
sbb
push
xchg
jns
cmpsb
jbe
fs
add
mov
outsl
sub
mov
mov
daa
shrl
es
add
jp
add
ss
outsl
sbb
les
test
fmuls
add
jmp
pop
popf
dec
mov
dec
lea
and
leave
jb
fimull
adc
jno
jnp
xchg
push
pop
lods
loop
in
cmp
mov
addr16
push
out
add
pop
stos
sbb
pop
sbb
add
sub
iret
push
mov
xor
add
xor
adc
add
shlb
sbb
loop
int3
inc
push
sbb
and
lea
or
in
int3
sbb
loopne
movsb
outsl
jge
pop
or
leave
movsb
jg
dec
inc
xlat
dec
sahf
sub
lods
lods
xor
mov
das
and
sarb
sbb
jecxz
add
dec
xchg
outsl
inc
pushf
pop
jae
and
jl
sbb
mov
jle
sahf
cmovno
dec
rcrl
sub
push
mov
sbb
repnz
and
or
cmp
pop
inc
sbb
pop
mov
fnstsw
and
jbe
jbe
pop
xor
inc
mov
sbb
adc
sbb
in
ret
mov
dec
scas
dec
fs
outsl
and
inc
inc
mov
popa
fwait
xor
mov
jge
in
cltd
ret
dec
lret
xchg
or
pusha
cmp
lods
popl
cmc
pop
out
and
cmp
cwtl
and
int3
mov
xor
in
push
shlb
adc
sbb
shll
sub
push
cmp
jno
dec
pop
mov
pushf
or
hlt
push
iret
mov
sbb
daa
aaa
pop
icebp
mov
xchg
sub
push
mov
add
pop
imul
loope
jb
dec
and
xor
jg
sbb
add
mov
pop
mov
and
andl
sbb
aas
ss
or
add
cmpsb
mull
out
push
and
add
mov
and
mov
loopne
xchg
popa
mov
lock
jo
add
adc
shlb
and
vpunpckhwd
loop
jmp
cmp
mov
shrb
ret
add
mov
pop
jle
out
in
lcall
mov
bound
pusha
add
adc
shlb
mov
xor
movsl
enter
xor
jmp
roll
loopne
orl
out
pop
push
insb
repz
scas
mov
into
xor
and
int3
adc
pop
dec
push
and
xlat
mov
mov
push
out
scas
mov
dec
int
sbb
dec
or
fisubrl
sbb
repnz
xchg
mov
sbb
je
push
jae
popf
and
aas
xor
inc
lcall
cmpsb
lods
sbb
adc
iret
out
leave
cmp
pop
sbb
push
add
repnz
dec
daa
stc
loopne
nop
ljmp
add
mov
rolb
cmp
mov
push
jnp
mov
fnsave
test
or
push
add
or
xchg
and
inc
clc
out
adc
jo
sbb
sub
pop
inc
xor
ficoml
dec
add
movsb
imul
imul
mov
aam
pushf
fidivrs
jo
sbb
or
dec
cmp
clc
adc
mov
arpl
mov
and
add
cmp
dec
jbe
inc
test
add
sub
pop
stc
or
inc
lods
test
jbe
subl
or
fistl
das
mov
mov
add
push
inc
out
popa
add
nop
call
push
enter
pop
mov
jne
cmp
jg
sub
mov
xchg
cmp
roll
add
addr16
add
pop
in
xor
imul
mov
stos
xchg
stos
dec
jl
scas
xor
push
cmp
xchg
addr16
stos
fadd
cwtl
aas
mov
addb
xchg
loop
scas
popf
or
fdivr
xor
and
inc
out
lds
adc
jecxz
mov
add
lods
inc
jg
pop
pop
rclb
dec
pop
addr16
jg
rcrb
insb
and
mov
mov
ljmp
int3
and
rolb
and
std
call
mov
or
pop
push
je
or
orl
fcomps
and
and
imul
mov
iret
loopne
dec
inc
dec
pop
adc
mov
pop
add
lock
test
mov
syscall
mov
cli
lock
xor
orl
lahf
cmp
iret
repnz
dec
dec
push
pop
jns
inc
ret
into
add
cld
push
in
and
test
orl
gs
mov
mov
push
or
enter
mov
adc
mov
mov
push
movsl
out
push
mov
dec
push
sbb
pushf
and
pop
cmp
cmp
shlw
cmp
add
insl
jo
ja
loopne
ret
xchg
rcrb
lds
loopne
sbb
test
inc
pusha
mov
fcom
pop
jecxz
imul
jecxz
pop
xor
test
or
movsl
inc
add
inc
inc
and
adc
int3
pusha
cs
push
into
rorl
das
jecxz
mov
aas
dec
lahf
testl
int
add
aam
xor
nop
mov
std
mov
sti
add
sub
inc
imul
or
testl
aad
repnz
addl
enter
cmp
std
push
or
mov
addb
xor
sbb
add
push
ret
push
xor
les
in
lea
cmpsb
mov
sarl
jbe
sbb
aaa
pop
hlt
add
roll
sub
or
jp
popa
sub
xchg
sub
jle
xchg
fisubrl
aas
out
sbb
adc
daa
cwtl
icebp
push
jl
dec
jmp
mov
and
inc
int3
jge
aad
adc
cld
lcall
lea
jp
mov
into
fs
xchg
adc
insl
rolb
inc
cmp
loope
loopne
inc
push
aas
addr16
mov
push
mov
popf
int
sarl
push
dec
out
or
rcrl
int
mov
insb
sub
jg
enter
or
bound
cmc
pop
aas
mov
emms
fldt
inc
dec
cmpl
sbb
mov
cli
fs
adc
aam
mov
and
xchg
push
insb
ret
je
sbb
and
lea
inc
aas
push
enter
mov
or
shl
test
xlat
xchg
inc
sbb
push
pop
pop
xchg
es
lds
sub
mov
cmpsl
add
adc
test
jno
dec
pop
loopne
mov
push
rolb
in
in
sub
jle
push
jns
inc
xchg
std
sub
dec
repnz
inc
rol
arpl
and
es
pop
scas
dec
add
aas
les
adc
cmc
gs
popl
push
cld
push
mov
shlb
jp
mov
aam
cmp
repnz
add
push
xchg
notb
roll
inc
cli
test
push
leave
lahf
data16
fisttpl
sahf
iret
add
int
iret
mov
ret
xor
xlat
lock
filds
pop
and
ds
xorb
or
push
imul
add
sahf
stc
sub
cmp
test
nop
les
fstps
hlt
adc
push
ret
push
rol
sarb
cwtl
xchg
or
xor
mov
cmpb
mov
fildll
and
inc
adcb
test
arpl
scas
pop
js
xchg
subl
push
loope
fsubs
rclb
movsl
mov
adc
pop
stos
cmp
test
pop
nop
rcrb
dec
loopne
dec
push
test
xor
inc
and
xchg
lds
loopne
push
jmp
push
mov
push
sbb
mov
loop
dec
mov
mov
jecxz
mov
pop
mov
adc
and
sti
bound
and
and
push
mov
sbb
inc
sub
inc
cwtl
push
sarl
cld
subb
std
stc
addl
addr16
xor
sub
mov
fmull
dec
or
dec
sahf
mov
sub
jbe
inc
sbb
lods
pop
push
mov
jns
movsl
xchg
adc
jl
adc
or
mov
sbb
adc
xor
sub
adc
daa
push
pop
xchg
ja
adc
mov
fists
or
xchg
mov
idivl
rsm
repz
add
test
mov
cmpsb
or
dec
loopne
xchg
repz
idivb
loopne
lods
and
inc
xor
test
pop
inc
mov
and
push
adc
test
sub
jp
adc
sbb
iret
insl
movsl
jl
sbb
and
out
mov
dec
mov
dec
sub
xchg
sub
push
xor
inc
repnz
sub
and
cs
dec
repz
sub
mov
xor
push
addr16
arpl
adc
inc
push
inc
mov
xor
and
insl
daa
rcrl
stos
pop
cld
xchg
rclb
cld
ja
addr16
adc
add
inc
jg
loopne
and
jae
sbb
jg
clc
adc
js
pop
repnz
add
xchg
ds
add
xchg
xchg
push
push
out
adc
iret
je
cs
sbb
in
xor
dec
inc
gs
sub
jge
mov
inc
cmpsl
cmpsb
or
icebp
fst
push
push
and
lds
push
jo
sub
pop
arpl
and
and
mov
mov
out
jl
cmp
mov
jne
ret
mov
sbbl
xchg
adc
push
adc
and
cmc
test
sub
or
and
cmp
loope
sub
xchg
add
or
add
jno
addr16
push
xor
lret
xor
bound
add
jmp
or
mov
xchg
jge
enter
dec
and
cmp
dec
sarl
push
sahf
popf
lea
and
test
adc
arpl
add
push
mov
push
jmp
aam
imul
sbb
mov
repnz
add
and
cs
sti
inc
es
cli
xchg
mov
stos
andb
outsl
push
bound
movsb
adcb
add
xchg
loop
gs
adc
loop
rcrl
dec
or
or
in
push
jecxz
jne
fwait
mov
scas
loope
in
pop
sbb
testb
sbb
mov
out
test
or
roll
or
push
popf
lds
clc
sub
fisubs
jo
push
pop
mov
movsl
std
and
int3
sbb
shrl
pop
sbb
inc
mov
adc
fwait
je
or
or
mov
lcall
lret
faddl
sarb
popa
inc
mov
mov
sbb
enter
movl
and
mov
dec
cmp
sub
cmp
mov
hlt
mov
repnz
mov
jge
pop
mov
stc
sbb
es
aam
fildl
cmpsl
mov
mov
mov
adc
setg
cmp
inc
stc
jg
test
cmp
mov
lds
mov
or
aas
cmp
insl
dec
mov
sldt
pop
jmp
mov
and
mov
andnps
inc
cmp
or
mov
ret
cmp
inc
inc
enter
or
sbb
les
imul
add
jge
add
lret
inc
add
mov
fsub
inc
hlt
xchg
add
or
push
inc
xchg
rclb
cmpsb
dec
push
dec
or
fbstp
filds
aaa
push
pop
fsubrs
lahf
rorb
push
std
movsl
or
jmp
and
push
lcall
push
stos
std
out
mov
mov
and
add
jl
jnp
ror
loope
mov
sahf
ds
mov
sti
pop
test
clc
sbb
lea
xchg
sub
add
xor
jge
imul
inc
jle
stc
mov
jns
sahf
jg
xchg
or
mov
xchg
cmp
iret
adc
popa
add
jo
xor
cmp
cmp
mov
ds
and
out
cmp
dec
popa
or
jbe
dec
pop
push
add
jns
sarl
pushf
jae
inc
or
sbb
jno
mov
ja
xchg
addb
xchg
mov
lods
sahf
fwait
je
pop
jbe
mov
inc
xchg
mov
sbb
nop
push
mov
cmp
pusha
push
pop
and
or
jmp
or
ret
jno
or
negl
sbb
in
hlt
and
sub
adc
adc
jnp
test
xchg
or
stos
add
add
repnz
jb
lret
or
adc
test
adc
sbb
test
popa
leave
jne
mov
leave
call
xor
jo
cli
fcoms
in
add
pop
iret
adc
push
push
test
fidivrl
add
es
xorb
xchg
jmp
push
idivb
pop
cmp
pop
inc
adc
and
outsb
mov
pop
mov
or
mov
sub
jnp
inc
stc
sarb
hlt
scas
mov
sbb
fs
inc
sti
pop
sarl
in
scas
adc
popa
and
mov
cs
mov
mov
or
inc
pushf
jecxz
pop
jl
insl
lcall
sub
cmp
add
and
dec
iret
and
ficoms
lret
loopne
inc
call
ror
jb
rcll
dec
repnz
jne
cmp
jbe
rolb
push
stos
sub
xor
pop
das
fmulp
iret
pop
or
pop
or
lahf
pop
jge
nop
bswap
add
fwait
jo
and
scas
add
cmp
xor
dec
rcrl
sub
pop
push
shr
out
pop
popf
sbb
xor
ljmp
inc
jno
mov
in
cmp
xchg
cmp
jnp
mov
sbb
xor
test
jmp
and
dec
dec
cmpl
xchg
pop
aam
adc
loop
movsb
jno
inc
jnp
cmp
adc
orl
shll
cmc
jge
or
fwait
or
jle
cmc
mov
cld
fxch
xlat
jne
enter
push
gs
cmp
xchg
push
lods
data16
xor
and
sub
push
aas
inc
jbe
push
mov
fiadds
lea
out
dec
jo
mov
mov
mov
and
inc
inc
xor
enter
push
jb
scas
and
ja
and
addr16
iret
mov
mov
add
mov
roll
jb
gs
push
mov
enter
mov
jbe
inc
xor
addr16
sbb
mov
or
push
inc
or
lret
dec
enter
pusha
jl
add
pusha
lret
cwtl
fdivrs
out
and
sub
enter
add
xor
iret
cmp
dec
ret
push
inc
pusha
xchg
push
ljmp
pushf
xchg
aad
inc
dec
mov
xchg
cwtl
push
and
or
or
or
fiadds
cmp
or
ret
cmp
lds
call
stc
sub
nop
push
dec
add
in
mov
pop
and
cmp
insb
sbb
inc
out
sbb
add
dec
in
add
mov
dec
mov
ja
fs
xchg
inc
mov
dec
ret
out
movsb
add
adc
subb
daa
push
pop
nop
std
pop
aam
pop
nop
xchg
push
int3
inc
adc
push
dec
jp
int
sbb
push
add
leave
sbb
mov
jg
in
pop
add
and
push
xchg
es
es
and
dec
dec
cmpsl
xchg
push
out
push
subb
jnp
mov
sarl
incb
out
ds
or
out
cmovo
pop
andb
and
sbb
mov
cmp
int3
cmp
jmp
jl
lahf
mov
lock
shll
mov
dec
jno
sbbb
lcall
fnstcw
sub
je
xorb
loop
or
nop
fimuls
sbb
pop
xchg
bound
push
popa
out
add
push
pusha
and
fucom
sub
pop
mov
nop
add
add
loope
addl
sub
xchg
sub
notl
lcall
aam
mov
cmp
cmc
leave
pop
jg
cmpsb
cmp
add
xchg
inc
es
scas
mov
xlat
push
in
hlt
ja
pop
test
enter
and
mov
push
test
les
mov
or
inc
in
xchg
push
jbe
and
in
faddp
dec
push
je
dec
add
loopne
sarb
repz
mov
sbb
outsb
ljmp
jg
inc
aaa
and
pusha
or
idivl
mov
dec
addr16
lcall
je
mov
sub
shl
xor
jae
mov
sbb
xor
int3
or
mov
push
cmp
sbb
cmpsl
adc
jnp
sub
lods
adc
jo
jle
jp
incb
int
inc
das
mov
bswap
adc
xor
xchg
or
jb
bound
dec
or
lods
jmp
inc
jbe
pop
out
add
or
cmp
add
loop
inc
mov
adc
enter
inc
cmp
pop
cmp
ja
and
loopne
xchg
data16
sbb
adc
adc
loop
addr16
mov
sbb
mov
or
jl
or
test
insl
and
mov
pop
popf
mov
icebp
pop
and
scas
pop
cmp
sbb
data16
adc
inc
mov
xor
and
in
in
xor
test
sbb
or
stos
push
pop
in
aas
mov
pop
scas
shlb
add
sub
aad
negb
test
push
shlb
or
shll
andl
enter
rcrl
mov
xor
test
push
fbstp
andb
cmp
sub
loopne
sbb
ret
scas
mov
push
mov
and
adc
pop
roll
in
pop
out
or
mov
movl
rorb
jecxz
cwtl
xchg
test
in
enter
iret
cli
mov
test
mov
fstpt
idivl
and
out
shll
aam
pusha
mov
arpl
sti
aam
mov
sbb
aaa
int
dec
in
jno
inc
in
mov
sub
or
adc
push
adc
ja
inc
mov
push
push
dec
imul
xchg
pop
test
mov
sub
dec
stc
xchg
xor
sbb
add
lcall
adc
inc
sub
pushf
loope
das
leave
and
fwait
lret
and
loop
pop
xchg
les
add
mov
test
mov
and
loop
icebp
sub
insl
mov
aaa
xchg
pop
lock
push
movsb
adc
out
and
or
orb
mov
leave
mov
pop
mov
add
lret
sti
adc
movsl
lret
pop
or
bound
push
pop
or
dec
mov
xchg
fwait
xor
jns
pushf
mov
push
push
xor
add
and
cld
pop
hlt
ja
mov
dec
sbb
mov
pop
cmpsb
add
pop
pop
jge
adc
adc
jbe
cmp
out
stos
xorb
add
xor
add
mov
dec
negb
sti
pop
xchg
push
sbb
sahf
imul
adc
call
sbb
and
jno
fs
jl
jecxz
sahf
or
inc
rcr
adc
enter
call
loopne
movsb
cmp
cltd
insb
arpl
fldcw
and
push
enter
jno
push
add
push
aas
mov
xor
adc
lcall
js
lea
rolb
adc
int3
cld
subb
pop
lret
cmpsb
mov
movsb
mov
cli
js
sbb
xchg
rcl
les
cmp
adc
cwtl
mov
xchg
addr16
lret
out
sub
jl
push
rorl
lret
xchg
test
cmpsb
ret
dec
lods
loope
mov
cmp
pop
mov
adcb
mov
and
shrl
inc
or
mov
cwtl
es
cmp
lret
xchg
repz
mov
fmul
dec
xor
lds
cmp
adc
xor
adc
or
adc
jl
cmp
arpl
fstpl
leave
mov
push
mov
adc
addr16
or
dec
and
add
mov
inc
cmpsb
clc
and
xor
leave
dec
inc
inc
mov
xchg
in
rcll
enter
push
stos
stos
test
and
xchg
insb
subl
cmpsl
add
jns
adc
stos
inc
cmp
or
mov
mov
fistps
or
sbb
cmp
dec
or
aam
pop
stos
lea
add
sbb
cmp
xor
cmp
jno
or
cltd
cmpsb
sahf
ret
xor
fs
jbe
pop
data16
push
dec
xchg
inc
push
xchg
bound
push
mov
fstps
aam
inc
xchg
mov
add
xchg
pop
movsl
or
xor
mov
inc
add
pop
jo
sub
adcb
add
sbb
sub
jno
in
mov
sub
in
fcom
mov
fnsave
fwait
pop
mov
int3
sti
adc
cmp
mov
dec
mov
test
sbb
in
subb
and
xchg
pop
mov
por
inc
xchg
mov
mov
scas
mov
xchg
jae
shrl
cmpb
repz
adc
push
sbb
test
js
xor
cmp
pop
add
mov
xchg
mov
into
aad
inc
lods
and
inc
cmc
xchg
inc
je
outsb
pop
pop
pusha
mov
cmpsl
jbe
adc
sbb
cmp
or
cmpsb
xchg
cld
mov
push
add
das
test
mov
testb
add
or
cmpsl
leave
rcrb
cwtl
or
or
mov
fdiv
mov
xchg
jl
mov
clc
add
inc
xchg
xor
les
mov
cmpsl
jle
xor
repnz
sbb
stos
mov
mov
nop
inc
js
adc
push
pop
sbb
pop
nop
test
fildl
and
inc
cwtl
nop
mov
dec
pop
fistps
push
ja
or
insl
cs
dec
mov
shll
or
in
or
adc
push
jno
pmulhuw
sbb
sub
mov
xorl
mov
inc
dec
mov
sbb
pop
add
and
das
inc
dec
shll
jnp
rolb
test
fisubs
pushf
and
dec
fcomps
or
cmpsb
mov
pop
ljmp
pop
and
outsb
shlb
ljmp
mov
popa
or
push
mov
pop
push
icebp
push
and
mov
and
cli
adc
ds
mov
xchg
int
add
fimull
jne
mov
add
or
mov
xchg
and
dec
xlat
adc
mov
aad
lcall
test
adc
fs
aad
pop
mov
pop
mov
bound
add
gs
sahf
pop
adcl
pop
lcall
data16
cmp
cmp
fldt
mov
push
lret
jo
inc
mov
xorb
pop
jns
int
test
xchg
outsl
and
dec
iret
rorl
loop
xor
loope
pop
cmp
js
test
cmpsl
sbb
mov
inc
or
daa
icebp
repnz
xor
jmp
mov
sub
subb
push
pop
mov
dec
fs
leave
lods
lock
or
and
sbb
bound
sub
lret
xchg
outsb
dec
mov
xor
loop
pop
bnd
pop
pop
cmpsb
xor
in
mov
movsl
jae
and
stc
in
mov
dec
lret
jmp
xchg
and
sub
cmp
bnd
adc
pop
and
xor
add
cmp
pop
shll
ret
jg
pop
adc
xchg
lods
orb
inc
xchg
repz
mov
or
fwait
mov
jno
inc
mov
cmp
jl
icebp
ss
aad
cmp
push
mov
out
pop
fdivr
xchg
enter
nop
ss
les
jae
popa
test
xchg
dec
sub
pop
cwtl
rcr
aam
dec
mov
daa
sub
iret
sub
sub
cmp
dec
movsl
xor
pop
daa
xchg
adc
mov
ss
sub
or
xor
aad
dec
or
pushf
insl
sub
sub
jecxz
fstl
mov
dec
ljmp
lcall
nop
test
push
sub
cltd
ffree
inc
inc
shrl
nop
xor
fisubl
testl
loop
cltd
push
ljmp
out
jae
das
pop
adc
inc
cld
and
adcb
js
add
dec
fdivrs
cmp
dec
or
jbe
cmpsl
mov
cmp
dec
repz
sub
mov
arpl
sbb
jp
dec
jae
pop
and
clc
and
push
inc
addl
inc
pop
adc
push
imul
inc
xchg
pop
dec
test
repz
pop
out
push
loopne
push
pcmpeqd
mov
sub
js
xchg
inc
dec
and
or
loop
stc
inc
jg
xor
mov
sbb
rolb
bound
push
notl
mov
imul
in
inc
xchg
int3
aad
rcll
xor
sbb
cmp
add
icebp
out
es
and
sub
or
inc
or
movsl
inc
shrb
addr16
adc
mov
add
enter
pop
iret
pop
inc
xorb
cmc
cmp
mov
mov
pop
adc
aad
jg
cmp
or
insb
and
call
or
scas
mov
mov
xchg
add
add
pop
test
adc
addr16
xor
cmpsb
iret
sbb
push
insl
cmp
aas
lock
or
scas
xchg
push
jp
push
lret
fcompl
in
mov
pop
mov
adc
cmpsl
fsubrl
pop
cmp
inc
movsb
loop
fmul
push
sbb
out
mov
inc
add
aad
inc
dec
lret
fldenv
repnz
adc
xchg
sub
enter
xchg
xchg
sub
cltd
in
shr
lret
add
and
imull
dec
fs
iret
dec
mov
mov
xchg
roll
int3
repnz
nop
nop
dec
sahf
dec
adc
dec
add
pushf
xor
pop
push
and
inc
pop
dec
sub
loope
sub
cmp
insl
xor
adc
andl
add
mov
stos
mov
gs
push
lret
ljmp
inc
cmpsb
xchg
sbb
xor
sbb
mov
adc
adc
test
or
sbbl
jno
push
mov
adc
mov
add
dec
add
shrl
jp
pop
sub
sub
jns
fcom
adc
fcompl
and
andl
cli
bound
pop
mov
mov
cmp
pop
jno
xchg
pop
lcall
sub
pop
add
ja
xor
movb
pop
mov
dec
inc
mov
in
stos
je
adc
inc
popa
cs
mov
les
pop
cmp
push
into
cmp
dec
fcoms
clc
fs
add
bound
aas
cld
test
pop
pop
ds
push
add
cmpsb
iret
lock
test
int
inc
fwait
jb
add
and
adc
stc
cmp
dec
push
dec
xor
iret
push
xor
mov
pop
in
xor
nop
dec
inc
and
nop
loop
movsl
adc
pop
imul
push
jno
cltd
sahf
cmp
sub
int
jnp
or
or
adc
cwtl
mov
fs
out
bound
add
addb
fwait
pop
mov
test
into
loopne
clc
push
test
and
xor
pop
push
mov
fs
mov
adc
sub
sub
jb
bound
add
test
aaa
mov
jl
and
push
push
ss
neg
or
xor
int3
cwtl
fs
cmp
shlb
fldl
ret
pop
inc
pop
add
cmc
data16
insb
sbb
and
mov
repz
sub
out
in
jo
jno
sbb
pop
dec
pop
add
add
sub
stos
xchg
xchg
sub
push
scas
add
add
or
jns
xor
and
aad
mov
jg
int
ret
insb
adc
mov
imulb
mov
es
mov
in
xor
mov
daa
dec
push
add
scas
xchg
out
add
sbb
lods
jo
push
jno
or
inc
adc
dec
fimuls
mov
mov
inc
xor
aad
shl
rorl
ret
shlb
dec
decb
push
inc
sbbb
enter
mov
cmp
xchg
call
mov
xchg
add
xchg
xchg
or
or
jae
and
cmpsb
shll
test
mov
mov
adc
rcrb
pop
cmc
and
cmp
shl
cs
lock
inc
mov
inc
imull
popa
and
mov
or
xchg
adc
jecxz
or
jmp
pushf
mov
enter
test
xchg
inc
and
out
jecxz
nop
sub
out
and
int
mov
nop
ret
call
inc
inc
repz
and
push
sub
add
add
mov
pop
sub
adc
inc
fadd
cltd
cmp
shlb
mov
pop
cmp
mov
and
mov
xorl
jbe
and
call
addl
add
leave
mov
xchg
insl
leave
orb
cs
xchg
sbb
aad
pop
ja
push
pop
popf
aas
xchg
xchg
notl
mov
stc
test
and
jae
or
adc
ja
pop
jl
stc
jbe
lret
fbld
dec
push
xchg
or
insl
xchg
jecxz
mov
add
rcll
stos
inc
xor
cwtl
pop
or
sbb
xchg
push
jp
push
lret
rclb
and
mov
sub
ss
mov
lahf
mov
jecxz
scas
push
dec
xchg
into
xor
rol
sbb
inc
lock
xchg
fildll
mov
nop
aad
sub
push
loope
arpl
punpcklbw
push
outsl
icebp
stos
pusha
lcall
dec
or
hlt
arpl
test
lcall
ret
fisttpll
leave
aad
mov
jns
push
addb
dec
xchg
adc
and
mov
sub
cmp
xlat
mov
add
add
xor
pop
mov
test
add
or
jecxz
imull
pop
inc
nop
andl
xchg
gs
bound
pop
or
add
scas
pop
pop
mov
scas
push
pop
fwait
pushf
or
mov
loope
inc
push
mov
addb
test
mov
adc
mov
fisubrs
lret
outsl
test
mov
test
rclb
jb
ret
sub
and
mov
addr16
shll
cs
cmpsb
sbb
cltd
push
pop
jecxz
shll
push
jle
or
push
popa
and
out
push
xchg
nop
sub
icebp
imul
adc
in
sbb
jbe
lahf
push
add
push
cmp
and
mov
in
pushf
outsb
in
sub
add
pushf
pop
dec
outsl
sub
pop
aaa
in
inc
push
sub
cld
loop
adc
popf
mov
mov
xchg
cwtl
pushf
ljmp
inc
test
or
testl
test
adc
adc
jbe
mov
xchg
into
push
adc
inc
jns
and
loop
test
xor
or
inc
movb
cmc
lret
xchg
call
xchg
dec
add
mov
mov
adc
addr16
movsl
or
test
push
adc
pop
test
cli
loop
sub
stos
push
xchg
sub
add
mov
adc
insb
negl
inc
inc
int3
adc
mov
cmp
out
jmp
xchg
rol
push
xchg
adc
movsb
imul
and
jp
and
bound
sbb
pop
push
loop,pt
jge
xor
cld
mov
int3
inc
adc
stc
jmp
int
pusha
adc
lret
mov
xchg
inc
es
ret
add
inc
or
xchg
vmread
enter
inc
leave
lahf
test
into
shll
sub
pop
lret
ds
or
pusha
mov
test
nop
and
daa
mov
mov
push
out
scas
push
aad
sub
test
xchg
add
sbb
or
mov
stc
jno
stos
in
inc
rclb
lods
ja
push
adc
mov
iret
inc
sbbl
cmpsb
out
nop
ds
push
inc
insl
in
and
pop
jb
xadd
sub
stos
fisttps
out
inc
xchg
inc
adcb
pop
add
sub
mov
shl
mov
or
outsl
push
loope
mov
mov
in
inc
push
sbb
rcrl
lret
mov
adc
clc
cmpsb
inc
add
adc
outsl
and
enter
and
mov
inc
lds
xchg
add
imul
jle
shrl
adc
or
sbb
pop
mov
cmp
es
mov
inc
mov
or
jo
aam
and
es
pop
cmp
push
or
into
inc
jne
jnp
mov
and
sub
insl
jnp
xchg
pop
push
add
mov
adc
jmp
lcall
add
jo
stos
inc
aam
pop
cmp
or
mov
lock
dec
ja
clc
je
lahf
add
and
je
mov
pop
lods
inc
pop
cmp
add
cmp
movb
cmpsb
inc
lods
sti
fs
add
test
xor
repnz
mov
fwait
inc
xor
jae
jo
and
push
sti
sahf
xchg
pushf
imul
jle
or
dec
push
cld
or
add
mov
dec
orl
pop
push
xlat
xchg
xor
pop
cmc
inc
int3
outsl
pop
faddl
and
xchg
pop
pop
inc
jecxz
mov
xchg
mov
cmp
jne
and
mov
pop
cmpsb
or
pop
out
adc
inc
sbb
add
mov
ret
icebp
push
push
mov
loope
and
jmp
push
shrb
push
mov
dec
mov
jnp
xchg
dec
push
xchg
ret
jl
std
sbb
in
and
rol
je
and
push
or
xlat
sub
cmpsl
sbb
or
int3
adc
subb
imul
fwait
cld
adc
mov
fs
jl
sub
jmp
xlat
mov
push
xor
or
and
xor
mov
sub
push
aas
and
sub
cmp
push
pop
dec
add
and
and
xchg
push
loope
fimull
jae
inc
or
mov
jl
push
lods
ss
nop
out
daa
lahf
call
jl
movsb
xor
lods
inc
andl
sub
jl
pop
and
rorb
or
push
mov
pavgb
mov
pop
dec
in
insb
clc
xor
xor
sbb
cmc
insb
cmp
orb
and
mov
mov
and
xor
into
or
dec
out
mov
dec
xchg
shlb
clc
out
loopne
xchg
sub
popa
pop
xchg
dec
addr16
cli
and
mov
mov
in
xor
pusha
adc
shrb
dec
jnp
xor
and
lahf
or
inc
lret
les
mov
cld
add
and
sub
test
xchg
mov
xor
test
test
mov
ss
push
inc
push
scas
roll
out
sub
push
rolb
add
and
int3
xchg
jmp
dec
scas
or
jmp
add
inc
push
inc
adc
jmp
lea
and
push
push
push
xchg
shl
xchg
test
add
test
data16
push
or
fcmovnu
mov
mov
fstps
sbb
jno
push
mov
pop
mov
movsb
mov
popa
mov
mov
jae
mov
popf
rclb
rorl
ret
shll
or
xor
cmp
arpl
ds
push
xor
ud1
push
dec
ja
xor
inc
pop
xorl
pop
or
lcall
xchg
nop
adc
sub
mov
mov
xchg
inc
xor
xor
fs
sbb
shr
cmpsb
jg
adc
jl
xor
inc
mov
dec
sub
jb
lret
xor
jb
inc
jg
lods
adcb
mov
mov
mov
pop
lods
adc
and
pop
adc
sub
or
pop
dec
inc
push
nop
sbb
add
imul
nop
lds
inc
daa
mov
cwtl
cmp
daa
inc
push
ret
jmp
stos
insl
xchg
lahf
sub
repnz
push
pop
push
dec
gs
and
cmp
mov
das
inc
push
fwait
push
movsl
addb
adc
push
inc
mov
js
int
lcall
inc
test
or
pop
lret
aaa
push
shlb
xchg
iret
lahf
xchg
or
cmp
outsb
dec
inc
daa
ja
inc
mov
xchg
mov
insb
shlb
jns
cmpsb
in
popa
enter
jae
jns
stc
or
push
enter
add
lods
cmp
adc
enter
imul
pusha
adc
loope
or
dec
mov
and
lahf
mov
mov
sbb
imul
jb
cwtl
inc
mov
fcoms
mov
or
iret
lcall
lods
leave
xor
andb
mov
mov
xchg
rclb
cmp
out
movsl
ds
sbb
pop
iret
test
dec
in
push
call
mov
mov
and
ret
and
lds
mov
mov
push
jmp
xor
fs
push
mov
fisttpll
jge
rcrb
pop
push
or
rclb
pop
sti
psubusw
jnp
add
test
push
mov
and
push
scas
push
add
pop
addr16
adc
jmp
repnz
pop
daa
push
sub
lret
push
add
mov
push
insl
fidivs
pop
lock
test
sar
in
pop
sbb
int
fimull
mov
pusha
cmp
outsb
xor
mov
xchg
jmp
scas
add
pop
cmp
in
ljmp
jo
imulb
test
in
push
dec
mov
push
mov
stos
popa
adc
aad
adc
add
add
sbb
xor
and
sub
imul
add
nop
add
jecxz
insl
inc
xchg
add
xor
fiadds
adc
ss
sub
gs
inc
pop
jmp
mov
xorb
cmc
jmp
fs
test
inc
fnstcw
pop
rclb
ret
inc
cmp
pusha
js
mov
lds
and
jb
push
mov
cmp
pop
mov
push
rolb
ljmp
and
or
add
frstor
push
and
adc
or
inc
ljmp
fs
das
popa
enter
test
add
ss
mov
daa
xor
push
loop
je
js
dec
push
adc
pop
push
mov
pop
jbe
aas
add
fildl
dec
je
jae
sub
adc
cmp
or
outsl
pop
mov
jae
inc
cmp
sbb
mov
int
or
aaa
mov
jbe
icebp
inc
into
xchg
xchg
push
cmc
push
stos
inc
movb
jbe
add
cltd
adc
dec
loop
aam
andl
lods
pop
jae
mov
mov
inc
sub
enter
lods
pop
mov
sub
or
outsl
jecxz
dec
aad
xor
push
test
addr16
test
jns
scas
jbe
and
xchg
imul
das
jne
pusha
mov
push
pusha
add
lcall
ss
out
lret
roll
mov
mov
icebp
jae
int
shlb
mov
mov
mov
dec
inc
adc
inc
cltd
orl
mov
xor
pop
jg
fxch
fwait
and
out
jge
out
pop
roll
inc
add
scas
idivb
dec
les
mov
xchg
xchg
mov
pushf
cmp
test
das
lret
sub
lret
outsl
pop
popf
add
xchg
or
ss
jns
push
or
pop
sub
inc
or
mov
rcrb
ret
xlat
in
mov
cmp
mov
jb
testl
mov
xor
cmp
pop
cmp
jno
movsl
dec
add
test
fldt
les
hlt
fcoms
mov
das
aas
or
sub
mov
adcb
rol
sbb
ret
mov
xor
xor
adc
idivb
and
dec
jne
mov
inc
add
dec
push
xor
mov
cmp
fsubs
push
or
pop
add
mov
sub
std
pop
cwtl
adc
cmpsb
jno
pop
and
inc
out
and
mov
test
movsb
mov
mov
sub
add
xchg
mov
rolb
movsl
lds
sbb
gs
decb
ret
fs
sub
mov
or
inc
lret
xor
insl
shlb
decl
sub
imulb
ret
xchg
add
push
push
or
mov
rolb
mov
pop
inc
mov
xchg
mov
decl
jb
push
push
in
xchg
push
adc
enter
mov
fsubrl
enter
je
pop
cwtl
mov
shlb
in
faddl
push
jae
ljmp
bound
adc
pop
jge
orl
pushf
sub
inc
inc
or
loop
pushf
addr16
mov
push
jp
sbbb
add
aad
dec
mov
cmpsl
mov
out
inc
jnp
sbb
sbb
mov
test
add
cmpb
and
sahf
add
test
pop
sbb
sbb
rcr
xor
popl
sbb
add
mov
cmp
je
push
sbb
jmp
stc
les
rcrl
jmp
sbb
iret
sbb
lret
pop
sbb
mov
pop
push
mov
lods
test
pop
add
aam
dec
xchg
inc
jo
outsb
jnp
jge
movsb
dec
aad
jo
and
mov
pusha
inc
cmp
sarb
inc
or
jb
nop
push
cmp
lea
pushf
psraw
jb
or
mov
imul
push
push
inc
idivl
pusha
adcl
jecxz
and
and
jno
cmp
dec
or
incb
outsb
jno
out
add
jp
push
insl
add
inc
jb
pop
cwtl
pushf
ds
cwtl
mov
fnstcw
adcb
and
clc
xorb
fidivs
adc
adc
jbe
cwtl
mov
dec
insb
out
filds
popa
xor
cltd
mov
sbb
in
ja
add
and
js
cli
inc
shrb
and
cmp
repnz
sub
hlt
or
jae
cmpsl
mov
roll
js
popa
mov
push
or
into
in
inc
jo
mov
das
aaa
sub
add
lods
leave
jo
jp
mov
nop
leave
lret
and
jbe
add
imul
sbb
pusha
cmp
push
into
cmp
int3
push
rcll
lret
adc
inc
dec
imul
fsubl
jns
mov
test
lret
test
jp
loopne
jo
loop
xorb
mov
cmp
mov
pop
sbb
mov
sbb
jl
cwtl
ret
adc
jae
hlt
cmp
push
mov
repz
idivl
sub
add
shll
push
sbb
xor
loopne
or
rcr
xor
pusha
int3
fwait
pop
stos
or
lock
mov
jbe
mov
add
jmp
sub
sbb
pop
mov
adc
aas
add
xorb
hlt
mov
mov
test
cmpsl
push
add
push
push
in
inc
mov
aam
xor
push
push
sub
int
sbb
add
dec
or
imul
push
mov
pop
inc
inc
xchg
mov
bnd
fs
fs
call
iret
dec
test
fiadds
iret
inc
pop
scas
out
hlt
mov
adc
dec
adc
add
cwtl
lds
add
shll
loop
cmp
inc
dec
push
mov
jge
adc
fwait
aam
adc
pop
push
pop
pushf
icebp
or
adc
xchg
mov
adc
cmp
ret
stos
jno
cmp
pop
shr
jle
sub
sbb
lcall
pop
test
xchg
jno
push
sub
and
aad
jle
jmp
and
adc
outsb
cmpb
inc
mov
and
cmp
data16
mov
pop
xchg
mov
fs
ds
sbb
imul
test
adc
jns
inc
es
add
jp
sbbb
inc
pop
sub
test
push
xor
ljmp
and
lods
and
jge
enter
pop
and
jle
xchg
push
popa
mov
mov
ret
sbb
out
and
push
icebp
or
call
aam
pushf
sbb
xchg
jecxz
popa
dec
leave
icebp
lret
call
mov
sti
xchg
inc
and
lods
cwtl
insl
subb
cmp
lods
pop
std
pop
out
je
mov
mov
ljmp
lret
lods
add
push
dec
inc
subb
pop
test
lock
jle
outsl
mov
lods
cltd
add
and
iret
sarb
and
pushf
pslld
or
mov
push
inc
pop
adcb
sub
sub
inc
clc
mov
rorb
push
out
adc
push
out
mov
inc
add
movsl
stc
cmpl
cmpsl
dec
add
or
push
pop
lret
lds
inc
or
out
repz
test
inc
push
sub
push
cmp
testb
outsb
cltd
pushf
push
dec
pop
add
xchg
lret
sbb
ja
ret
inc
pop
dec
add
daa
testb
or
push
jmp
mov
repnz
loop
pop
outsb
repnz
or
test
mov
icebp
inc
jge
gs
mov
sahf
ja
and
add
loope
jge
jno
sbb
icebp
imul
mov
mov
adc
sub
dec
andb
stc
push
mov
and
sbb
popf
mov
outsb
xchg
push
mov
inc
addb
mov
xchg
test
mov
in
ljmp
repnz
add
out
adc
and
sahf
and
aaa
divb
push
fwait
or
or
sti
fstl
adc
jnp
or
fdivrl
push
fnsave
adc
in
jae
lea
movsb
out
jle
mov
mov
jge
push
add
cmp
mov
dec
mov
sarl
xor
in
pop
sub
adc
pop
mov
or
insb
stos
pusha
popa
pusha
or
adc
adc
addb
mov
iret
lock
les
push
sub
jecxz
adc
sbb
pusha
sbb
mov
popa
or
and
cmp
lret
jbe
push
adc
inc
les
hlt
and
lds
ret
mov
in
pop
or
inc
dec
lock
test
lock
mov
mov
adc
inc
ss
push
mov
or
add
imul
xor
and
insl
xchg
enter
in
sub
je
adc
dec
adc
cmc
push
insl
popa
pop
dec
pop
and
and
ja
aad
sub
pop
lret
bound
gs
and
or
andl
ja
xchg
pop
andb
in
pop
cmp
test
es
jno
and
xor
icebp
clc
jl
pop
mov
push
mov
movsl
aaa
mov
shlb
mov
or
and
mov
add
mov
inc
jg
inc
jbe
sbb
jmp
and
dec
dec
add
dec
pop
aaa
jp
mov
lods
dec
imull
sar
out
push
mov
pop
and
mov
mov
or
nop
lret
dec
clc
mov
outsb
cs
cwtl
divb
or
repz
in
pusha
faddp
add
adc
adc
jmp
test
pusha
rcrb
lock
js
mov
or
mov
mov
mov
aaa
mov
ds
adc
decb
pusha
and
mov
test
bnd
ljmp
mov
pusha
dec
stc
aas
xchg
clc
addb
fisttpll
mov
add
and
or
mov
add
fdivl
mov
jbe
jno
add
xor
ret
add
cmpsl
popf
jp
popa
pusha
and
push
or
or
xor
loop
push
stc
mov
nopl
fimuls
mov
daa
adc
xchg
inc
pop
push
jmp
mov
nop
nop
push
popa
jg
sbb
cmpsl
and
ret
lds
cmp
ret
mov
loop
mul
je
bound
adcl
add
mov
ljmp
lock
outsl
ljmp
xchg
inc
scas
daa
imul
rcl
dec
les
std
cmp
add
add
jb
das
dec
and
cmpsb
lods
mov
hlt
adc
sbb
mov
in
shrl
sbb
outsl
cmpsb
push
mov
add
push
jno
add
mov
cmp
adc
sbbl
mov
inc
xor
rorb
dec
pop
sub
inc
push
push
xor
stc
mov
jle
stos
ret
sbb
jae
mov
jns
leave
dec
out
xlat
add
pop
or
dec
in
and
xchg
xor
mov
es
ret
add
and
mov
push
add
dec
rclb
pop
cltd
xchg
dec
mov
push
testl
adcb
arpl
ds
xlat
das
dec
imull
bound
and
pop
dec
push
mul
test
rcrl
outsl
scas
pop
shll
cmp
or
fs
mov
jg
cwtl
sbb
mov
sbb
loopne
add
add
xchg
stc
add
mov
inc
frstor
mov
xor
adc
enter
inc
inc
loop
sbb
and
outsb
add
add
shr
lea
data16
mov
pop
pop
add
xor
mov
jne
rorb
das
aad
adc
xlat
fistpl
outsl
loope
xor
addr16
mov
inc
mov
rolb
jp
xchg
push
jne
dec
int
cmp
or
mov
jns
mov
pushf
push
hlt
cmp
xlat
adc
jg
jne
adc
jb
pop
xchg
xchg
adc
or
inc
jle
and
sbb
shll
lods
inc
push
negl
add
pop
rorb
or
lret
inc
int3
mov
cmpb
out
xor
push
xchg
popf
xor
iret
sub
mov
sahf
inc
adc
pop
arpl
pop
xor
sub
ret
loopne
lock
or
xor
loopne
or
sbb
pop
jge
and
mov
out
sub
push
cmp
loopne
divps
dec
mov
pop
rclb
xchg
cmp
mov
pop
pop
repz
popf
into
mulb
sahf
inc
push
sub
mov
lret
jb
and
fnstcw
in
mov
pop
test
and
adc
aas
pop
call
sub
ss
sahf
push
and
les
xor
movsl
aam
pop
cwtl
cmc
cmpb
adc
shrb
xchg
add
mov
rcll
xchg
test
mov
ret
out
pushf
ret
mov
inc
addb
sub
dec
adc
jmp
vmulsd
xor
jg
cs
add
and
xchg
and
aad
lock
dec
push
das
jl
cmp
movsl
adc
dec
or
or
dec
mov
imul
add
mov
loope
sbb
jge
rorl
addr16
les
push
arpl
add
nop
or
sahf
stc
xor
push
fstpt
add
loop
outsb
xchg
and
and
popf
test
clc
xlat
or
ret
imul
aad
xchg
hlt
mov
loopne
xchg
push
iret
lret
add
push
adc
jl
jle
adc
fnstsw
fadd
ljmp
and
push
pop
in
add
ret
jno
pop
lea
into
sbb
ret
cmpsb
cmp
scas
cmp
in
inc
sub
mov
mov
cs
fadds
and
inc
cmp
icebp
sbb
movsb
jns
insl
data16
sub
push
outsl
insb
mov
jo
cmc
xlat
fwait
aas
movsl
in
mov
scas
into
mov
mov
lock
pop
ds
xor
cli
mov
sub
imull
and
mov
dec
test
sub
inc
add
std
nop
and
adc
or
inc
out
pop
or
jbe
push
leave
jb
xor
adc
push
add
mov
mov
pop
pop
bound
xchg
mov
inc
int
mov
xor
sbb
sub
xor
xchg
sarl
pop
add
movsl
insl
enter
and
insb
aas
cwtl
outsb
push
push
pusha
pop
xor
out
or
xor
inc
es
fs
cmp
adc
shl
jb
push
inc
xor
popa
lods
int
aad
xor
pop
mov
sub
lds
aas
mov
scas
pop
push
out
ljmp
sbb
mov
fwait
pop
iret
test
mov
lds
cmp
sbb
imul
mov
loop
in
inc
add
fstpl
cmp
es
inc
inc
and
xchg
inc
and
cmp
in
jmp
pushf
mov
cmp
loope
inc
jecxz
push
or
jmp
movsb
and
pusha
or
ljmp
jb
mov
add
jg
push
nop
cld
sub
sbb
and
xchg
xchg
jle
call
mov
lock
mov
pop
pop
insb
sbb
insl
enter
ja
rcr
push
mov
test
jl
divl
xchg
sub
push
sub
inc
sub
mov
fsin
jno
adc
mov
dec
jo
xor
adc
pop
ja
out
mov
fmuls
mov
cmp
adc
or
adc
and
dec
or
lea
adc
movsb
jge
daa
cmp
or
hlt
lahf
loop
scas
xchg
sub
loope
inc
leave
xorl
stc
dec
lea
rolb
and
ret
add
sbb
mov
sahf
pusha
jg
in
sub
push
xorl
add
xchg
mov
jl
in
rclb
jno
push
scas
inc
push
sbb
and
cmp
mov
add
or
sbb
aam
pop
adc
and
mov
and
adc
or
sahf
pop
outsb
push
or
inc
into
jle
dec
filds
push
push
push
dec
pop
cmp
lret
jno
jp
mov
jecxz
push
jb
sub
push
or
inc
sub
add
push
xor
mov
push
add
pop
mov
loope
sbb
mov
mov
add
mov
out
jbe
mov
stos
mov
jne
pop
xchg
push
mov
adc
push
popf
and
mov
sbbb
decb
cmp
shll
ret
adc
cld
out
jle
loop
mov
xlat
jo
xchg
mov
push
test
pushf
jo
leave
repz
leave
adc
shlb
push
mov
xor
add
jb
inc
ljmp
sarb
mov
xor
adc
mov
adc
add
or
adc
das
test
mov
filds
cmp
sub
mov
jp
pop
flds
jb
out
push
inc
pop
mov
test
inc
mov
adc
scas
dec
bound
and
sub
addb
in
cmp
cwtl
mov
add
insl
repnz
adc
aaa
cs
stc
pop
in
jb
insl
xor
or
andb
adc
sub
pushf
mov
clc
jo
jge
push
and
xor
push
mov
int3
adc
push
scas
or
push
fnstsw
fildll
mov
push
std
inc
lahf
cmpsb
adc
es
and
adc
sbb
jbe
xor
cmp
rcrl
outsb
xor
sub
add
mov
fs
int
cmp
adc
lock
sub
out
popa
dec
xchg
in
andps
vcvtsd2si
repnz
or
test
or
aam
ljmp
pushf
sbb
sub
push
loope
shrb
popa
daa
dec
sahf
mov
out
test
adc
push
mov
jns
ret
cmp
adc
adc
ja
cmp
push
push
pop
imul
adc
cmp
int
data16
or
push
mov
and
out
imul
nop
cmp
fldenv
push
jo
xchg
je
mov
nop
aaa
roll
int
bound
jecxz
bound
inc
push
pop
sbb
insb
cmp
repnz
mov
adc
jb
and
mov
mov
mov
cwtl
cmp
out
mov
sbb
or
add
add
les
dec
mov
in
mov
push
add
or
and
add
and
arpl
popa
mov
ret
outsl
addr16
dec
data16
fisttps
dec
dec
stos
cs
loope
jle
push
call
flds
fs
push
pop
adc
xchg
pcmpgtb
loopne
jno
ret
dec
sarl
add
xor
push
sbb
popf
fnstcw
fsin
popf
pop
sti
xor
insl
ret
es
cmp
jle
push
cli
pop
cmp
incl
nop
jo
xchg
add
sbb
sbb
rorb
movsb
int3
mov
and
cmp
add
dec
jp
add
adc
ret
inc
cmp
rolb
jmp
pop
cltd
xor
aas
in
xchg
adc
mov
or
ret
xor
sub
xchg
shll
andb
arpl
ljmp
stos
jno
jnp
inc
add
rolb
inc
in
xchg
inc
iret
nop
nop
dec
ja
lods
jp
popa
das
sbb
sub
xchg
mov
jle
adc
xlat
filds
pusha
inc
push
addr16
data16
popf
js
add
mov
pop
add
adc
or
aaa
rcrl
push
push
ret
pusha
mov
sub
and
dec
imul
call
rolb
inc
push
add
push
or
and
adc
outsb
imul
jg
pop
cmpb
movsb
mov
call
ret
cmpb
jp
icebp
psubsw
mov
popf
or
add
jmp
imul
aam
mov
shrl
ds
pop
loope
jle
pop
nop
cmp
xor
pop
rolb
push
mov
out
sub
insl
aad
mov
push
enter
dec
adc
inc
jle
cld
push
push
xor
cli
pop
xchg
add
fsubrl
or
std
mov
add
jb
add
add
push
ss
loopne
or
adc
mov
jne
inc
adc
lock
in
sub
mov
jne
loopne
sub
lock
imul
out
or
or
and
push
adc
mov
cmp
xchg
sub
and
jae
aaa
inc
aas
mov
clc
mov
jne
int
mov
adc
shlb
fadd
pop
jl
loop
mov
mov
fidivrl
xchg
inc
or
xor
mov
rcl
rol
fmuls
push
fldcw
imul
and
jnp
repnz
or
bound
faddp
and
and
jl
fcom
and
mov
hlt
mov
or
adc
rclb
test
mov
movsb
aas
les
inc
and
leave
fs
dec
test
cwtl
or
das
and
jb
stc
fsts
outsl
xor
mov
movsb
nop
add
dec
mov
mov
jl
sub
add
jg
and
push
cmp
int
dec
sbb
jnp
xor
fldpi
inc
repnz
xor
push
cmpsb
fwait
xor
add
lods
xchg
in
mov
push
and
addl
sti
dec
inc
adc
push
jmp
mov
cmp
in
sub
pushf
jmp
adc
cmp
xchg
cmp
add
xchg
not
fisubrl
mov
mov
pop
dec
jecxz
jg
mov
pop
xchg
clc
scas
pusha
stc
xor
cwtl
cli
pusha
out
inc
add
or
gs
cs
loop
mov
xor
jns
push
sub
fcompl
cmp
ss
mov
aad
dec
pop
mov
testl
sbb
adc
xchg
stc
adc
xchg
or
leave
cmp
sub
mov
xchg
add
jno
les
push
fadd
mov
dec
xor
aaa
push
imul
pop
aam
mov
inc
andl
loope
mov
add
mov
adc
aaa
or
les
inc
shll
dec
lea
jge
sbb
scas
nop
scas
cld
and
scas
xchg
xor
js
dec
mov
pop
adc
inc
xchg
sbb
das
and
mov
icebp
and
cld
divb
cmp
arpl
sbb
inc
adc
mov
adc
push
out
xchg
test
mov
push
push
nop
mov
jg
mov
in
data16
sahf
mov
ret
sbb
mov
fisttpll
nop
test
js
loop
mov
gs
fs
pop
mov
lret
mov
pop
mov
pop
lret
rclb
in
or
mov
inc
mov
cmp
std
jle
das
add
push
outsb
icebp
dec
aam
or
sbb
jmp
pop
in
and
xchg
mov
add
jne
xor
loope
adc
dec
sbb
pop
jb
pop
mov
pop
lret
lahf
push
pusha
add
dec
and
xchg
add
cmp
jmp
into
or
jmp
call
insl
je
xor
lock
mov
cmc
adc
popa
push
mov
testl
pop
mov
test
andb
cld
xor
pop
int3
mov
int3
mov
mov
pand
daa
loop
jae
jno
jmp
popf
mov
adc
xor
cmp
mov
pop
push
cmp
fistl
js
mov
sbbb
sbb
out
aas
pop
jno
cmpsl
jbe
loop
push
lret
pop
cltd
lret
xor
cmp
adc
mov
inc
fisttps
pop
imul
jmp
mov
dec
add
lahf
jbe
lock
add
mov
pop
das
cmp
adc
nop
test
push
xor
pusha
jno
scas
popa
int3
mov
nop
ds
add
mov
xchg
test
sbb
mull
lret
nop
push
xor
scas
inc
add
shrl
rolb
pop
frstor
mov
es
xor
xor
arpl
xor
mov
push
cmp
fstps
aaa
adc
pop
and
or
dec
aas
cmp
xchg
test
dec
iret
jmp
xor
hlt
and
repnz
pop
lret
cmp
ss
xor
push
addr16
push
cltd
inc
and
and
mov
inc
adc
out
mov
insl
sbb
dec
mov
mov
imul
mov
xchg
aas
shrd
add
push
stos
fsub
cld
mov
test
mov
pop
cs
adc
jle
gs
xor
mov
add
xadd
inc
fstl
adc
mov
xchg
mov
insb
ret
sbb
or
cli
push
xchg
xor
hlt
inc
xor
test
sbb
shlb
je
sbb
adc
test
push
sbb
cmc
loope
test
shlb
fs
je
mov
inc
adc
xor
fldl
inc
aas
pop
scas
push
test
jno
stc
add
push
or
js
dec
sbb
ret
fists
xchg
cmp
decb
mov
andb
lods
adc
pop
out
pop
cmp
dec
sti
sbbb
push
lcall
sbb
and
and
stos
mov
xchg
xchg
rclb
jb
push
imul
repnz
xor
enter
pop
sbb
and
test
cmp
or
mov
movsl
lods
in
adc
sbb
jnp
std
pop
inc
ljmp
or
inc
mov
icebp
add
addr16
fisttpl
cmp
movsl
rorb
sub
xlat
sub
mov
xchg
pop
pop
dec
test
dec
test
cwtl
adc
adc
ljmp
cli
jmp
lcall
mov
test
and
adc
pop
rclb
clc
push
sub
sub
je
xor
mov
pusha
adc
or
fldl
sbb
cmpsb
cmp
addl
stos
hlt
cmp
lahf
sbb
test
mov
mov
cs
push
cmpsb
xor
test
ljmp
xorb
and
leave
and
jecxz
xor
xor
fmuls
out
fs
stos
and
es
cmp
mov
movsb
lock
loop
aas
shlb
sti
pop
mov
pop
bound
lea
jns
inc
rolb
dec
cmp
adc
jle
cli
call
xchg
xor
xor
add
outsl
inc
mov
push
scas
mov
dec
xlat
stos
and
inc
cmp
test
nop
mov
cmp
mov
cmp
aaa
mov
testb
jno
enter
lahf
and
push
or
int3
add
mov
and
or
mov
jmp
iret
push
loopne
or
push
push
adc
mov
sbb
adc
and
jae
xchg
iret
sahf
adc
les
repz
mov
aaa
and
and
xor
fldl
jno
test
popa
dec
pop
clc
add
cmp
cli
sahf
sbb
push
jae
mov
pop
mov
dec
int3
add
xchg
nop
mov
adc
and
sub
cmc
jnp
leave
out
jecxz
das
in
and
jmp
or
add
xchg
rcll
cmpsb
push
hlt
cwtl
dec
or
sub
stc
or
push
cmp
adcl
jnp
pop
cmp
lcall
xorl
imul
or
bound
pop
test
jno
dec
sbb
mov
mov
jecxz
xchg
push
sub
pop
sub
mov
int3
push
loope,pt
nop
fcomps
inc
sbb
mov
dec
lock
add
dec
test
inc
adc
popl
xor
aad
lods
mov
inc
push
sbbb
dec
shrl
jno
adc
dec
cld
dec
ds
push
xchg
cmp
cmp
jno
insl
adc
sahf
add
out
imul
aad
cmp
jl
mov
and
adc
jle
sbb
cmpl
out
jae
adc
aas
sbb
popa
mov
fcompl
push
fnstenv
adc
mov
push
adc
cmp
cmp
lods
add
pop
xor
or
scas
dec
add
popf
lahf
push
js
call
mov
mov
enter
mov
sub
sbb
fimuls
sbbb
jnp
or
outsl
pop
stos
mov
cmp
enter
push
nop
cmp
sbb
lods
sbb
adc
and
sti
cli
sub
pushf
xor
push
xor
jge
push
or
mov
mov
call
adc
test
fs
nop
stos
jb
iret
sub
add
repnz
int
xchg
pusha
lcall
repnz
and
push
sub
jo
jle
xchg
cmp
cmp
mov
sub
scas
int
inc
pop
nop
add
insl
cwtl
and
mov
mov
mov
push
adc
mov
ja
mov
mov
adc
push
sbb
arpl
inc
out
cmpl
ljmp
mov
xchg
movsb
insb
mov
ret
dec
push
and
shll
mov
addb
iret
lock
jb
cwtd
mov
scas
out
pop
xor
lods
mov
out
ret
in
adc
xchg
addr16
jl
push
xor
incl
leave
popf
fistl
loope
inc
clc
adc
jecxz
out
cmp
push
xlat
cmp
stc
testl
cmp
stos
push
mov
sbb
addr16
and
and
mov
enter
fmull
cli
add
jg
ja
into
add
rolb
push
cmp
xchg
push
mov
push
mov
add
fldt
out
adcb
jle
sbb
push
stos
lret
gs
dec
adc
movsl
push
inc
mov
shrb
or
dec
dec
xchg
inc
orb
addl
dec
jbe
movsb
sub
push
shll
ret
pushf
test
sub
mov
enter
add
out
push
addb
dec
inc
das
test
mov
out
nop
jge
pop
andb
fstps
aas
pmaxsw
mov
sub
and
push
jecxz
js
xor
xorb
push
shll
xchg
sub
adc
sahf
mov
push
ds
jmp
jecxz
pop
out
std
test
cmp
add
dec
enter
xlat
push
mov
lret
test
mov
sub
lahf
shlb
pop
dec
push
std
scas
mov
mov
in
or
pusha
aas
and
enter
inc
mov
push
cmp
shll
cmp
rclb
mov
aad
repz
xor
repnz
dec
pop
in
test
loop
add
cltd
js
sbb
mov
jo
sbb
dec
repz
and
sbb
inc
xor
pop
ror
test
inc
mov
adc
add
clc
mov
mov
cs
idivb
dec
mov
lcall
or
and
or
xor
sbb
push
cmp
xor
mov
ja
hlt
fsubs
cwtl
xchg
push
ss
icebp
jo
inc
push
orb
outsl
insl
push
or
and
mov
mov
stc
aad
jp
adc
ret
dec
pushf
inc
rcrl
pusha
lds
lods
lods
jns
cmpsb
add
xor
and
ds
in
call
xchg
lea
jge
ficomps
or
dec
gs
jp
faddl
test
es
add
and
xlat
cmp
jecxz
jl
pop
orl
inc
sub
lock
test
mov
inc
mov
xchg
xchg
addr16
roll
pop
or
outsl
test
iret
insb
pushf
add
stc
mov
mov
and
jge
jl
stc
mov
inc
dec
dec
xchg
imul
dec
rcll
leave
add
xor
aam
sti
sbb
adcb
mov
or
call
imul
daa
enter
iret
orl
lods
mov
sbb
push
aas
mov
mov
inc
xchg
mov
pop
icebp
outsb
adc
add
in
xor
fdivl
sbb
jmp
inc
je
lret
add
sar
lahf
int
insl
subl
in
xchg
or
jecxz
sbb
aam
addl
sbb
and
inc
xor
sbb
xor
into
mov
outsb
mov
mov
and
add
paddq
xor
sbb
sub
jmp
jb
ds
and
jl
pop
stc
push
xabort
adc
imul
arpl
es
jmp
or
mov
fst
and
inc
xchg
or
jecxz
or
mov
cltd
ljmp
mov
inc
pop
and
das
and
mov
js
pop
lods
xor
mov
mov
cwtl
and
movsb
repz
daa
lret
fistpll
outsb
in
aaa
call
push
test
xchg
mov
sub
dec
insb
add
aad
int3
popa
cmc
test
addb
shlb
sbb
cli
leave
fmuls
dec
add
clc
fucomip
es
xlat
push
outsl
pop
add
xchg
sbb
dec
and
mov
and
dec
in
aas
sbb
jno
and
pushf
push
mov
sub
and
push
rolb
add
movsl
movsl
add
jmp
pushf
ss
mov
outsb
mov
test
inc
stos
xor
cwtl
mov
xor
mov
addr16
mov
adc
and
call
sub
push
int
test
jp
xchg
ds
es
loopne
dec
call
push
push
cld
mov
or
aaa
out
or
dec
lods
jno
in
lret
repz
cmp
sbb
push
lods
bound
popa
xor
in
or
movsb
inc
mov
inc
movsb
mov
std
rcrb
sub
cmpsb
adc
pusha
scas
or
ret
jecxz
add
nop
pop
push
xor
sbb
mov
int3
pop
cmpsb
push
fidivrl
xlat
and
int
cld
xor
lea
andb
in
xor
push
inc
mov
cli
clc
or
outsl
xchg
adc
cmp
data16
addl
ror
add
orb
jle
pop
test
rclb
nop
addr16
push
sub
sub
test
xor
ljmp
outsl
dec
push
movsb
into
add
add
lahf
dec
mov
dec
or
jp
cs
xor
push
pop
mov
cmp
aam
mov
xchg
nop
hlt
sub
addr16
fcoml
dec
xchg
xchg
andb
pop
xlat
xchg
rorl
sbb
mov
sbb
xor
adc
and
mov
movsb
push
sbb
cmc
pushf
fisubl
or
or
mov
push
xor
fdivr
out
pop
dec
std
fistl
inc
xchg
and
lahf
cs
subb
sbb
pop
mov
out
cmp
sub
enter
adc
nop
xor
in
and
mov
xor
cwtl
dec
movsb
ret
int
orb
imul
adc
hlt
and
lock
dec
mov
ja
cmpsb
adc
loop
ret
sub
cmp
xlat
loopne
xor
repnz
shlb
dec
inc
lock
pop
lods
dec
das
hlt
inc
popf
icebp
inc
pushf
xor
add
or
cmp
cli
inc
je,pn
add
push
fisttps
in
xchg
dec
inc
int3
outsl
into
pushf
pop
roll
xor
and
orb
xchg
testb
pop
nop
sbb
int
cmpb
clc
repnz
addr16
dec
arpl
adc
mov
lock
inc
adc
sbb
jl
add
and
movlps
lret
test
or
push
dec
aas
cmp
add
movsl
mov
fldl2e
data16
lea
out
pop
push
adc
add
out
inc
inc
inc
and
int
ficoms
pop
flds
jo
aam
lods
loopne
push
sbbb
jl
subl
or
jnp
aad
pushf
shr
lahf
lret
sbb
sub
xchg
sub
inc
loop
push
xlat
je
aas
rorb
jne
xchg
lods
adc
xchg
add
mov
shlb
out
andb
mov
push
adc
rorl
add
mov
or
lcall
add
clc
daa
dec
sahf
cmp
jl
outsl
add
lahf
xchg
mov
mov
inc
das
mov
pushf
push
push
imul
les
pusha
mov
xor
dec
jmp
and
or
add
mov
push
out
mov
cmpl
test
bound
iret
add
push
or
stos
leave
inc
fisttpll
or
pop
dec
xchg
or
mov
dec
fst
push
jae
cltd
cmp
test
mov
aas
fwait
data16
hlt
dec
scas
jnp
fwait
sub
call
lea
fs
add
cmpsl
std
sbb
push
and
cmpsl
or
fsubrp
cmp
cld
pop
les
sbb
xchg
bswap
or
lret
loop
call
in
inc
in
jge
pop
cmpsl
mov
or
add
subps
pop
pop
out
cmpsl
inc
clc
jbe
or
in
jecxz
ficomps
cltd
xor
shlb
xchg
cmp
dec
jnp
push
lcall
adcl
jbe
push
ficoml
out
pop
xchg
inc
add
jg
fcmovnu
sbb
scas
lahf
pop
out
xchg
out
jne
les
add
mov
add
and
inc
cld
mov
test
and
sbb
dec
insl
mov
xor
clc
pop
inc
insb
and
sarl
lods
sub
cmp
fcmovb
xchg
cmp
mov
pushf
lods
ja
loop
mov
push
add
sahf
mov
xchg
xlat
pop
rcr
aas
into
inc
gs
pop
sub
pop
cvtpi2ps
jmp
push
lods
and
neg
inc
dec
scas
mov
mov
push
nop
dec
fildl
stos
xchg
or
jp
mov
leave
jne
enter
xor
add
jnp
xor
ss
push
jo
jg
sbb
hlt
sub
mov
mov
add
aam
or
cld
mov
loope
inc
orl
lods
cmp
fidivl
add
imul
fs
or
pusha
mov
or
mov
icebp
push
lcall
and
lds
inc
xchg
push
mov
adc
shrl
xchg
shll
or
lods
jp
leave
divb
nop
cpuid
cmp
adc
dec
aam
jge
insb
das
sbb
push
jecxz
std
rcll
sbb
mov
jp
xor
push
repz
int
or
mov
mov
pop
sub
into
jl
inc
mov
aam
movsl
mov
mov
test
cltd
add
pushf
xchg
xchg
lock
sbb
xchg
dec
out
add
rep
divl
or
or
dec
or
jbe
mov
xor
mov
push
cmpb
dec
iret
ljmp
mov
sub
inc
fsubp
cwtl
call
or
add
inc
sub
xchg
popa
cmpsl
dec
inc
or
jge
out
adc
jg
arpl
and
push
inc
cmp
loopne
call
aas
add
pop
js
les
popa
scas
xchg
repz
jl
aad
mov
sub
and
pop
int3
addb
jnp
and
test
rolb
dec
mov
fimull
xchg
inc
cmp
loope
adc
jge
dec
and
adc
mov
sbb
test
push
push
sbb
addr16
mov
imul
add
shlb
in
push
ficompl
cmp
pop
mov
mov
jmp
lahf
mov
or
mov
jmp
rorb
pop
stos
test
sahf
stc
push
cmp
dec
stc
icebp
out
fwait
push
pop
icebp
jns
mov
test
movsb
dec
daa
sbb
push
test
adc
mov
xchg
sbb
mov
mov
loope
xchg
mov
mov
scas
and
mov
stos
int3
add
jns
int3
shrl
repnz
pop
mov
mov
dec
mov
int3
cmp
and
das
dec
nop
stc
jae
inc
test
adc
cmp
cmp
inc
or
pop
xchg
sub
mov
inc
mov
jmp
add
sbb
loop
repnz
push
and
mov
mov
xchg
loope
add
or
cli
xchg
pushf
adc
xchg
in
gs
xchg
pop
adc
sbb
loopne
inc
mov
adc
inc
rcll
sbb
pop
or
or
in
cmpsl
and
loope
cmpsl
jns
ja
pushf
sahf
loopne
in
and
push
fs
inc
and
and
and
push
push
sbb
int3
sbb
mov
dec
mov
add
in
push
lea
adc
out
dec
and
lea
idivb
adc
jb
sbb
jmp
sbb
sub
dec
int
jb
xchg
or
aam
sbb
test
mov
add
add
and
pop
mov
fs
and
out
push
or
sub
cmp
mov
and
jno
movsl
adc
je
mov
dec
pop
mov
test
push
mov
dec
pop
xchg
inc
push
or
int3
je
xor
sti
dec
pop
das
jg
or
rcrl
xchg
in
sar
inc
in
jl
dec
xchg
dec
sbb
dec
movsb
xchg
hlt
inc
sub
jns
xchg
xor
pusha
loopne
data16
popa
pushf
hlt
inc
dec
mov
push
jecxz
add
cmp
insb
or
xor
les
scas
inc
lods
int3
dec
jno
mull
bnd
push
or
ret
mov
leave
loop
cmpsl
mov
xchg
inc
call
outsb
pusha
dec
mov
xor
sbb
push
mov
cmp
inc
int3
fistl
js
lcall
lds
or
sti
aam
xchg
mov
in
mov
mov
pushf
sub
or
mov
xor
mov
dec
cmp
inc
mov
xor
add
in
lds
je
add
inc
scas
pop
cs
mov
adc
xchg
sbb
mov
ss
adc
sub
mov
and
jne
mov
and
dec
xor
or
or
outsl
adc
jle
jle
add
xchg
pusha
jbe
inc
adc
sbb
dec
dec
call
adc
adc
mov
shrb
orb
mov
dec
inc
or
out
andb
js
xor
popa
es
sub
cs
mov
pushf
jp
or
mov
daa
stc
push
xor
sti
cwtl
xchg
rcl
pop
xchg
loopne
sbb
sub
cmp
pushf
cs
dec
cmp
jge
cmc
cmp
cmpsb
test
push
test
mov
les
or
xchg
push
mov
das
adc
test
lahf
xor
mov
pop
mov
rcrl
ret
cmpsb
iret
dec
sahf
ss
xchg
inc
iret
js
sub
pop
mov
insl
sbb
mov
ds
push
fldl
sbb
stos
sbb
loop
rorb
fnstenv
add
repz
push
pop
xor
inc
and
stc
mov
or
es
mov
stc
jmp
jne
movsb
clc
sarb
add
sub
mov
xchg
test
mov
mov
mov
pop
push
push
mov
lods
test
sahf
push
mov
cltd
loope
sub
add
add
icebp
mov
sub
mov
push
push
add
inc
adc
sbb
int3
or
jl
add
cmp
or
adc
xor
ja
xor
cld
cwtl
lock
sub
movsb
faddl
pop
dec
mov
mov
dec
xlat
pop
jae
in
enter
mov
push
add
cmpsl
add
ja
sbb
mov
bound
int3
mov
and
lret
mov
xchg
ljmp
ficoms
pusha
cmp
out
subl
mov
into
popf
cmpsb
inc
inc
and
add
and
jge
jl
inc
mov
mov
aaa
sub
stos
adc
xor
fmuls
cs
lret
adc
jne
imul
xchg
adc
mov
add
out
xchg
testl
test
push
adc
push
movsb
adc
jo
test
push
js
es
and
xchg
inc
or
adc
and
mov
cmp
cwtl
addr16
dec
mov
stos
iret
rol
loopne
pop
data16
pop
mov
ficomps
and
repz
xchg
je
cltd
divl
inc
ja
out
sbb
or
ss
inc
bound
jmp
cmp
jmp
cli
pop
jbe
scas
push
sub
nop
ds
hlt
dec
adc
gs
subl
stc
lds
adc
dec
mov
jmp
push
dec
sbb
cmp
nop
adc
push
xor
mov
pop
inc
adc
outsl
lret
pushf
popf
dec
jecxz
mov
and
jle
sub
push
sub
or
push
jno
les
dec
dec
lahf
cmp
and
add
push
mov
add
and
inc
inc
rcrl
cmp
mov
mov
dec
nop
mov
xchg
sbb
xchg
add
cld
dec
jl
lret
inc
pop
dec
sbb
pop
mov
sub
js
xchg
ss
or
sbb
int
inc
adc
xchg
fisubrs
nop
and
insl
xchg
or
hlt
or
dec
aas
pop
dec
pop
cli
stc
shll
inc
inc
push
inc
or
cmp
inc
out
sub
or
loop
xor
jmp
adc
inc
lods
or
xor
insb
xchg
cwtl
push
lds
dec
mov
imul
jg
adc
les
add
add
sti
shl
pop
mull
mov
lock
add
adc
sbb
ret
or
dec
sbb
scas
xchg
shlb
add
pop
negl
mov
push
inc
pusha
leave
ljmp
lea
inc
ret
test
pop
das
mov
jge
lret
add
sub
lcall
sahf
xor
and
sbb
and
pop
test
arpl
xorl
push
mov
adc
cmp
xchg
fiaddl
and
mov
in
js
or
cmp
mov
jge
add
cmpl
pop
sbb
repnz
mov
jo
dec
mul
add
out
cmp
fbstp
cmp
pop
pop
or
cmpsl
stos
lret
push
or
fcmovnu
xchg
notl
dec
mov
inc
lret
dec
bound
jo
fimuls
and
sub
xor
movsb
push
push
in
out
or
jbe
mov
in
mov
sbb
adc
inc
jl
clc
insl
bound
xlat
pushf
int
mov
inc
testb
dec
popa
shl
dec
xchg
pop
push
lret
inc
leave
xchg
dec
sbb
mov
incl
sahf
push
pop
pop
loop
inc
jo
xchg
cwtl
adc
pop
int
pop
ja
push
in
sbb
clc
lods
int
jno
adc
fsts
and
pop
ret
xor
loope
int3
repz
push
jmp
jo
adc
mov
jno
sub
xchg
inc
xchg
dec
out
sbb
cli
sub
mov
les
fbld
sbb
repnz
mov
mov
roll
push
movsl
popa
jmp
dec
ret
subb
lahf
dec
jne
add
mov
push
xor
add
fnsave
test
scas
and
add
jb
aam
and
movl
negl
in
push
sbb
mov
loop
jmp
xorb
cwtl
sbb
pop
and
filds
and
jb
push
adc
cmp
xchg
inc
inc
inc
jmp
inc
pop
adc
inc
movsb
lret
js
add
jecxz
ss
popf
dec
mov
in
nop
jbe
ficoms
mov
cmp
lods
mov
sub
dec
int3
mov
adc
js
lret
icebp
fldl
sub
and
lds
into
adc
add
pushf
pop
jle
sub
or
add
add
pop
mov
into
aam
sbbb
inc
incb
xchg
inc
insl
das
enter
sbb
add
pop
pop
or
dec
dec
mov
jno
xor
ret
pushf
aad
mov
inc
dec
cmpsb
mov
mov
push
outsb
loope
inc
push
or
insl
jns
cmp
add
mov
or
mov
fldenv
loop
hlt
std
adc
adc
in
mul
mov
orl
xor
add
add
fisubs
dec
or
icebp
jns
pcmpgtw
xchg
lcall
adc
mov
adc
adc
inc
popf
push
test
es
adc
imul
or
loopw
dec
lret
arpl
imul
lods
xor
ret
orb
dec
mov
icebp
enter
ljmp
ljmp
cmp
cmpb
xchg
add
cli
sub
divl
mov
add
addl
mov
and
cld
ds
mov
pop
sub
adc
lahf
push
mov
inc
inc
mov
adc
hlt
pop
out
sbb
pushf
hlt
orb
ja
jg
popl
xchg
pop
inc
mov
repnz
lret
das
push
dec
loop
negb
out
add
sub
mov
adc
inc
insl
sub
lods
movsl
aas
xor
lret
push
lea
mov
pop
imul
test
inc
iret
stos
dec
sti
mov
testb
and
jl
push
adc
adc
lds
jmp
adc
cwtl
adc
xor
aam
rol
pop
enter
or
sub
xchg
jp
dec
push
pop
xchg
jmp
lret
add
mov
nop
dec
rol
or
dec
cs
xchg
push
sarb
push
cmpsb
bound
mov
cwtl
xchg
jbe
sbb
lahf
ljmp
faddp
lret
or
jnp
pop
bnd
inc
sub
xchg
inc
and
aas
data16
xchg
sub
into
inc
addb
xor
jne
mov
outsb
lods
dec
xor
xchg
adc
adc
push
stos
fsts
pop
mov
push
cmp
pop
mov
mov
sbb
addr16
cmp
mov
jg
mov
and
push
push
pop
inc
fxch
pop
fidivl
mov
add
stos
and
int
cmp
lcall
mov
cmpsl
pop
pop
mov
stc
jo
loopne
push
call
xchg
xchg
in
adc
dec
test
out
sub
adc
rcll
push
aaa
jl
cmp
mov
mov
xchg
lcall
addr16
les
jo
in
cmp
cmc
inc
inc
cmp
adc
rorb
stos
lods
jmp
jae
sub
lods
push
or
fbstp
add
pushl
sarl
and
mov
int
pop
mov
scas
ret
xchg
adc
xor
and
xor
bound
inc
popl
jbe
ja
jae
push
lds
sub
sahf
mov
xchg
or
insb
insb
shl
push
movsl
and
sub
bound
popf
cli
movsl
jne
push
imul
subl
loope
ja
xchg
add
movsb
ds
cs
incl
nop
mov
int
and
movsl
out
push
inc
mov
inc
cwtl
in
adcb
in
lea
loopne
inc
push
subl
adc
in
ljmp
flds
mov
inc
mov
insb
adc
mov
shl
imul
or
adc
mov
ljmp
lods
adc
push
jle
data16
lods
add
or
adc
movsb
pop
rcll
sbbw
loop
or
adc
add
inc
or
push
jbe
and
cmp
pop
pop
and
dec
insl
and
or
mov
jge
push
popf
add
jo
repz
ret
rolb
test
sub
lret
push
arpl
mov
dec
xchg
rorb
aad
push
xchg
adc
jb
jo
rcrb
sbb
xchg
in
add
and
dec
pop
adc
mov
add
sbb
jbe
xor
sti
xor
mov
pop
aam
loopne
xchg
jb
insb
dec
add
lods
shll
test
out
sub
xchg
inc
mov
arpl
in
pop
jl
xor
xor
ret
push
sub
add
stos
add
pop
cmpsb
loopne
push
cmp
push
pushf
fdivrs
out
pusha
mov
ljmp
mov
mov
shrl
lock
int
sbb
mov
xor
scas
sbb
std
test
adc
lods
xor
stc
adc
cmpsb
popa
out
jl
andl
call
jbe
push
mov
xor
out
movsb
ret
push
lcall
imul
sub
fsts
fsqrt
xchg
mov
add
out
mov
hlt
or
pushf
leave
mov
cmpsl
jbe
dec
mov
add
inc
xchg
test
enter
cmp
fdiv
dec
xor
sub
imul
push
lods
dec
jnp
adc
sub
faddl
and
loope
dec
xchg
call
jl
jp
test
movsb
test
or
popa
sbb
js
iret
or
pop
push
and
jecxz
add
gs
mov
pushf
adc
subl
lahf
adc
data16
mov
iret
and
outsb
mov
add
pushf
mov
mov
dec
sbb
jp
xlat
stc
dec
add
sahf
or
mov
push
adc
mov
dec
out
sbb
cmp
xchg
outsl
pop
add
les
xchg
popf
andb
cmp
lahf
lret
sbb
cmp
test
movsl
imul
jl
push
cmpb
sbb
xor
and
adc
cli
inc
aam
jl
mov
push
and
ret
xor
pop
test
in
adc
and
cmp
xorb
sub
push
or
mov
stos
imul
loopne
movsb
loope
fld
pusha
nop
and
cmp
push
leave
xchg
pop
mov
push
pushf
lds
pop
leave
add
ja
enter
or
adc
rorl
xchg
adc
xchg
in
dec
out
and
scas
in
pusha
sbb
in
mov
lods
add
mov
jl
mov
push
mov
inc
xor
fbstp
jp
popf
sbb
fiadds
stos
inc
negb
mov
add
cmpl
sbb
shll
popf
or
jo
add
shlb
inc
int3
cmpsb
stos
ds
ficompl
add
add
pop
adc
and
xchg
pop
shl
and
adc
and
mov
into
push
lds
xor
dec
ret
repnz
add
outsb
imul
test
cs
movsl
es
and
mov
pop
add
xchg
rorl
ror
inc
test
sbb
jmp
xor
fsubs
jne
xor
in
mov
adc
cs
lods
je
test
leave
push
lret
push
add
test
lods
nop
nop
sti
adc
and
ja
scas
aad
fwait
mov
jl
dec
and
pop
mov
imul
bound
jle
ret
and
xchg
das
iret
js
mov
insb
lret
add
push
mov
outsl
or
or
cmp
pushf
shll
inc
addr16
sub
gs
dec
mov
ds
jne
rorl
pop
push
daa
jle
add
ja
add
fs
add
inc
mov
or
push
inc
and
xor
xchg
fyl2x
leave
mov
mov
pop
ss
out
pop
inc
inc
inc
add
sub
mov
cwtl
mov
movl
rcr
mov
xchg
out
inc
cmp
hlt
jnp
mov
lret
out
mov
and
cs
mov
fimull
xchg
cmp
daa
cmp
stos
mov
mov
testl
inc
out
and
leave
push
jmp
mov
lcall
and
mov
xlat
or
test
xor
and
dec
je
les
dec
or
mov
enter
or
aad
rcll
push
lret
daa
add
mov
insb
xchg
inc
dec
pop
or
sub
and
or
into
add
pop
xor
push
and
inc
or
jnp
bound
lret
insl
testb
lds
xchg
in
mov
jmp
mov
mov
jge
ret
sbb
and
push
shll
filds
ret
sbb
addr16
sbb
or
push
xchg
pop
sub
in
lea
cmp
xchg
ds
push
or
push
xchg
mov
ljmp
inc
mov
stos
bound
xor
jl
or
sbb
pop
xor
inc
pop
ss
test
rcrl
aam
or
rcrb
nop
ss
and
pop
adc
and
cmc
dec
cs
jns
adc
xlat
lret
adc
add
add
inc
aas
push
rolb
out
test
sbb
cld
subl
in
in
jbe
fldenv
xchg
mov
sub
jecxz
inc
adc
xor
inc
or
sub
jl
outsb
setno
imul
and
adc
sti
and
fbld
addb
sub
cmp
rcl
ljmp
lock
lods
mov
push
cmp
push
jbe
sub
dec
cmpsb
lret
nop
dec
mov
pusha
push
pop
cmpb
lret
scas
or
push
mov
mov
mov
sbb
ss
sbb
mov
cs
lret
dec
pop
popa
popf
or
adc
je
sbb
loop
mov
jecxz
add
mov
js
sub
jecxz
insb
push
jnp
std
mov
inc
outsb
jge
sti
iret
mov
mov
inc
mov
movlps
push
and
xlat
pusha
data16
adc
ljmp
jecxz
nop
and
std
sbb
pop
cmpsl
or
inc
in
add
push
xchg
mov
scas
rorl
dec
mov
adc
in
ret
pop
and
fdivl
out
je
sub
pop
push
leave
push
mov
mov
add
push
pop
cmpsb
aam
xor
fldenv
and
add
jns
sub
jbe
pop
jp
mov
test
mov
sbb
fstp
test
scas
stc
adc
dec
inc
mov
dec
pop
inc
jno
xchg
or
add
testb
xchg
sbb
in
adc
mov
jbe
adc
lret
aaa
pop
xchg
cld
or
sub
sub
sub
mov
lods
loop
int3
add
divb
jecxz
sbb
es
cmp
data16
xor
inc
inc
and
or
mov
pop
pop
jae
xor
lods
sti
or
pop
or
adcb
pop
inc
ss
out
mov
mov
jno
shlb
pusha
jmp
cld
add
pop
cld
dec
inc
in
mov
test
push
cltd
shlb
xchg
fistpll
dec
ss
cs
jae
adc
mov
mov
shlb
repz
and
hlt
imul
cmp
jle
js
out
sub
fidivl
outsl
lock
push
in
xchg
pop
xor
inc
inc
or
sbb
dec
inc
jno
mull
sarb
fcmovnb
sub
push
cmp
pop
mov
pop
sbb
out
add
dec
pop
adc
mov
in
dec
push
cmc
add
je
sub
mov
pop
loop
hlt
addr16
push
popa
das
sub
test
push
pop
push
sub
xchg
ds
test
in
inc
inc
ds
testl
xchg
lret
xchg
in
sub
jnp
jle
repz
ds
and
jecxz
inc
int
push
mov
ds
fbstp
arpl
mov
jb
syscall
imul
aam
inc
int3
fstpt
sub
cltd
ds
scas
xor
xchg
shll
addl
iret
clc
mov
cwtl
push
hlt
jo
push
dec
xchg
lods
ret
fcmovnu
clc
add
mov
xor
sbb
jmp
mov
cmp
inc
cmc
and
fstpt
jns
pop
inc
push
push
xchg
and
push
cwtl
xor
dec
popf
add
pop
hlt
fwait
push
pop
insl
add
dec
cmp
shll
std
jp
and
or
shll
mov
add
and
test
push
add
int3
orl
adc
cmc
je
push
jb
addr16
dec
test
and
mov
insb
push
shr
xlat
add
jg
call
addr16
cltd
or
pop
mov
jl
ljmp
add
push
mov
pop
jle
sub
das
pop
or
push
sub
sub
inc
in
mov
sbb
xchg
xlat
jg
sbb
test
repnz
xchg
nop
pop
inc
sub
popf
and
lret
push
popa
add
test
pop
lea
push
addb
adc
xor
push
adc
mov
andl
inc
sub
add
push
push
push
cmpb
push
ret
dec
xor
out
jl
mov
lret
subl
xchg
mov
fdivrl
xchg
mov
lret
pushf
and
outsl
pop
lret
push
xchg
add
aaa
pop
pop
and
push
mov
xor
or
mov
add
in
mov
and
aad
add
sub
ljmp
add
mov
xor
dec
scas
adc
inc
jg
and
test
add
push
outsl
in
imul
into
sbb
pop
dec
mov
aam
loopne
mov
mov
inc
int
mov
rcll
pushf
jecxz
rol
lds
cltd
daa
jmp
cmp
pop
mov
inc
fistl
imul
jno,pt
ret
std
mov
dec
mov
bound
loopne
xchg
adc
or
call
dec
pusha
and
mov
scas
ja
pop
xor
inc
je
int3
ret
cmp
pusha
xchg
push
add
test
xchg
les
dec
jnp
jle
cwtl
jae
lea
in
and
and
xchg
jl
aaa
aam
xchg
aad
in
push
jb
lahf
sbb
lret
loopne
or
mov
mov
adc
sub
cmpps
mov
iret
jmp
mov
int3
dec
mov
aad
jmp
andb
and
inc
test
push
xchg
int3
xchg
push
push
loope
scas
adc
inc
pusha
dec
lds
je
jns
inc
test
cmp
xor
or
jmp
dec
add
xchg
jb
add
scas
fidivs
mov
push
cmp
push
xlat
and
cwtl
push
xchg
mov
in
and
inc
pop
fs
rorl
or
adc
jl
cmp
pop
call
int3
in
and
pop
push
add
push
nop
nop
hlt
ret
mov
pop
pop
scas
fistpll
and
bound
lret
dec
insl
popa
add
stc
inc
stc
test
push
test
loope
mov
int
pusha
loopne
aas
stc
adc
loope
dec
and
xor
xor
mov
jae
dec
dec
pop
inc
outsl
and
adc
mov
sbb
into
into
cmp
js
je
xchg
lret
enter
mov
mov
pop
fstpl
mov
cli
mov
push
adc
stc
sub
jbe
mov
stc
jb
push
add
stos
popf
les
and
jecxz
dec
and
add
stc
push
mov
mov
pop
sti
aad
push
stos
faddl
add
cmp
pop
and
xchg
sub
mov
fldcw
out
in
xchg
popl
push
nop
dec
rcll
hlt
adc
dec
insb
inc
adc
mov
and
insb
mov
in
mov
popf
and
addr16
push
pop
mov
aam
mov
mov
scas
pop
cmp
dec
loopne
add
add
add
outsb
iret
ljmp
mov
mov
shll
dec
jnp
sub
jle
test
pop
add
and
notl
mov
push
cmp
sub
jb,pt
arpl
mov
xchg
enclu
lea
popf
sub
xor
adc
jg
pushfw
pop
push
rcrl
inc
fadds
loop
call
push
mov
mov
and
dec
out
cmc
lods
dec
mov
fnsave
inc
ss
insb
out
or
dec
pop
inc
push
dec
and
jg
loope
dec
adc
adc
add
add
stos
mov
mov
std
stos
cwtl
push
fs
add
dec
arpl
test
sub
cltd
xor
loopne
fadds
mov
jg
xchg
dec
inc
add
dec
cld
and
not
shrl
ret
xchg
sub
call
js
pop
cwtl
fdivrs
adc
sub
pop
dec
pop
nop
xchg
xor
int3
les
cmpsl
and
xlat
pop
movsb
add
adc
pop
sub
loope
xor
add
fwait
test
addr16
rcll
insl
insl
outsl
add
xchg
jecxz
frstor
inc
pusha
pop
adc
sbb
sbb
add
lcall
cmpsl
sbb
dec
fidivl
jb
pop
faddl
cmp
or
xor
mov
xor
sub
pop
sbb
mov
jmp
loopne
mov
fisubrs
ja
js
add
and
add
lret
pop
adc
sub
xchg
pop
insb
pushf
sbb
xor
ret
dec
dec
cmc
test
ds
daa
mov
or
insl
mov
mov
xor
mov
cs
bound
jg
loopne
ja
adc
xchg
int3
inc
imul
mul
jne
mov
adc
push
and
sub
push
jo
push
push
iret
pop
lret
fdivrl
pop
mov
inc
icebp
xor
lahf
add
outsl
jp
ja
fldl
subb
inc
mov
add
test
add
outsb
clc
leave
outsl
add
lods
xor
je
xchg
or
rcrb
hlt
mov
sbb
xchg
pop
lods
jl
dec
int
add
push
dec
es
mov
mov
aad
pop
inc
mov
sbb
rcll
mov
mov
stos
scas
pushf
xchg
inc
cs
xchg
jl
adc
fildl
ret
lret
sbb
sbb
xorl
xchg
sbbb
or
or
or
out
nop
rol
int
int
call
jne
lret
sub
gs
iret
je
sbb
xor
xchg
mov
and
xchg
sbb
ds
xor
or
sbb
dec
stos
loope
sahf
inc
scas
out
jno
add
rclb
xchg
psubusw
fcompl
mov
dec
pushf
dec
or
nop
fmull
xor
cmp
into
adc
lea
mov
mov
push
add
inc
sbb
add
inc
xchg
nop
pushf
push
stos
push
ret
push
jbe
pop
jecxz
adc
rcrb
sahf
push
test
cmp
add
sti
orl
jne
inc
jmp
adc
rcr
bound
push
cmc
lds
ret
mov
push
sub
lock
mov
andb
popa
sarb
mov
push
pop
xchg
dec
jecxz
fimull
push
dec
push
mov
lret
leave
stc
repnz
daa
loope,pn
je
imul
xchg
bnd
test
add
fcomps
int
enter
std
and
inc
fsubs
push
mov
rcrb
clc
sbb
and
push
push
mov
cmp
xor
imul
cmc
icebp
out
lds
cmp
popf
outsb
cld
add
mov
frstor
jae
adc
adc
gs
pushf
rolb
inc
adc
aas
add
xchg
shrl
loopne
mov
cmp
xchg
int
push
aas
sbb
and
inc
daa
or
loop
add
inc
mov
loopne
cld
inc
push
dec
mov
sbb
xor
popa
in
xchg
pusha
pop
jns
call
push
cmpsl
mov
repz
mov
push
add
mov
addl
bnd
pop
or
nop
test
call
test
add
mov
mov
fmulp
push
stos
out
dec
cmpsl
jne
insl
imul
in
popaw
fisttpll
inc
dec
sti
dec
dec
cltd
and
push
push
or
add
xor
or
cmp
push
loopne
jns
xor
data16
push
mov
pop
pop
and
pop
xchg
dec
mov
push
pusha
mov
pop
xchg
inc
jne
sbb
mov
add
out
lea
mov
add
and
jno
scas
xor
pop
lret
mov
adc
decl
xchg
xor
movsl
pop
imul
jl
aaa
dec
mov
push
adc
and
scas
dec
addr16
test
push
fsubrp
test
mov
test
cld
add
or
xchg
inc
xchg
sub
mov
xor
inc
push
jnp
sbb
lret
or
inc
insb
arpl
arpl
xor
push
jmp
cli
and
data16
insl
cmp
shll
sub
mov
adc
jae
jecxz
daa
aad
sbb
sbb
aad
and
loope
mov
dec
push
and
loopne
scas
lods
or
add
nop
or
leave
inc
mov
push
jp
aad
aam
scas
xchg
pusha
call
adc
dec
mov
cmp
addl
repz
negb
call
adc
cmpb
lds
sahf
or
pop
aas
test
les
xor
and
es
mov
or
ljmp
scas
jbe
push
mull
int3
and
popf
mov
mov
movb
mov
mov
movsb
push
loope
mov
loopne
fmuls
mov
jge
cmp
dec
nop
icebp
mov
and
and
inc
insl
inc
pop
and
inc
push
invlpg
stc
pop
insl
lret
lret
aam
imul
jno
pop
lret
mov
sub
mov
lret
xchg
movsl
cmpsb
popf
lret
and
jmp
xor
imul
mov
push
xlat
cmp
add
adc
adcb
faddl
add
sbb
xchg
push
dec
or
roll
insb
push
xor
repnz
ljmp
xor
push
add
call
sahf
pusha
in
ds
push
or
or
data16
push
lods
xchg
sub
xchg
dec
and
dec
movsl
fidivrs
cmp
push
and
add
hlt
out
adc
clc
adc
mov
sbb
pushf
jg
mov
ret
inc
cmp
dec
xor
loop
sub
lahf
hlt
inc
pop
jbe
shlb
ljmp
or
add
mov
movsl
and
and
add
and
add
rorb
test
je
out
mov
dec
prefetch
inc
stc
push
pushf
and
imul
mov
and
int3
lock
pusha
jo
lods
or
fildll
lcall
das
jo
pop
adc
adcb
fwait
scas
inc
lret
call
fbld
mov
fdivrl
jl
dec
pusha
jb
lahf
stos
mov
dec
js
sub
and
stc
mov
es
stos
rcrl
add
push
jmp
add
test
ds
adc
or
insl
mov
cmp
test
or
mov
std
pop
or
ds
mov
jecxz
test
cwtl
ds
lods
sub
cmp
ds
jl
xchg
popa
jmp
test
xchg
jl
lods
mov
cltd
ror
fs
lock
pushf
mov
fstl
fwait
icebp
mov
jle
cli
in
aaa
test
loopne
jnp
pop
pushf
mov
add
jge
push
dec
int
shrl
je
imul
outsb
pop
cmp
push
inc
and
iret
sub
ds
ret
sub
sti
dec
rorl
fidivrs
lds
pop
push
jl
lcall
icebp
pop
mov
mov
fimull
xor
mov
incl
xchg
pop
fs
test
mov
pop
mov
inc
dec
rol
inc
or
push
enter
pop
xchg
and
pop
mov
es
mov
mov
sbb
xchg
icebp
adc
pop
add
sbb
sub
scas
and
dec
scas
xchg
lcall
fs
lahf
addb
push
stos
jns
popf
hlt
test
aad
sub
and
movl
cmp
mul
pop
add
sub
test
add
dec
jg
adc
ja
jl
loopne
fdivl
into
add
push
pop
jns
movsl
scas
pusha
add
add
push
and
add
mov
mov
pop
in
or
add
xor
or
arpl
adc
daa
fmulp
push
mov
jmp
xchg
stos
add
fs
mov
push
stc
push
aam
xlat
xchg
inc
cld
and
call
andl
inc
loope
and
loop
test
in
sbb
mov
sbb
rclb
sbb
pop
sbb
cmp
push
add
movsl
orb
adc
sub
stos
add
add
fs
jmp
add
js
xor
mov
cltd
insb
add
dec
sub
fnsave
loopne
xor
pop
sbb
ds
adc
mov
shlb
push
out
iret
mov
and
les
lret
mov
cs
add
loopne
cmc
mov
push
dec
lret
testb
enter
aam
and
jns
inc
mov
jl
fildll
ss
mov
shlb
xor
inc
or
mov
cmpsb
leave
add
push
mov
dec
add
ljmp
stos
add
jmp
aaa
mov
jns
adc
and
cmpsl
dec
nop
and
nop
jge
lods
dec
push
loope
aaa
divl
cmp
stos
jg
outsl
jge
dec
pusha
aam
cli
mov
inc
xor
xorl
sbb
pop
mov
dec
pop
xchg
pusha
or
aas
mull
cmp
lods
or
std
adc
fsubs
xchg
lods
jge
sbb
add
jo
mov
dec
arpl
and
jg
pushf
out
movsl
and
xor
cmpsb
in
movb
hlt
insb
pop
cld
nopl
js
inc
rcrb
je
sti
sub
xchg
xor
test
inc
dec
mov
inc
push
repnz
enter
aaa
dec
rorl
std
xchg
jnp
outsl
std
jl
lahf
fs
cmpsl
stc
xchg
add
lods
scas
mov
inc
adc
enter
andb
movb
push
in
cmpsb
mov
jae
bnd
gs
les
pop
nop
pop
push
test
cmp
in
sub
test
xor
cmpsl
pop
jbe
out
int3
mov
adc
dec
sti
cmp
push
adc
xchg
jne
fiadds
int
xchg
movsb
lahf
aam
pop
jb
cmp
cmp
push
test
adc
dec
or
scas
jns
jmp
cmp
adc
cmp
and
xor
xlat
enter
cvtpi2ps
sub
push
in
mov
sbb
adc
or
add
insl
inc
movsl
add
clc
adc
and
fscale
loop
add
into
mov
out
dec
das
add
jecxz
push
pushf
or
ss
mov
add
add
add
test
cmp
or
lock
add
jbe
cld
cmpsb
add
push
loopne
iret
xchg
jle
shlb
and
mov
jns
xchg
adc
add
test
test
enter
jmp
sub
in
and
dec
hlt
dec
ss
dec
mov
mov
sub
int3
jae
sbb
aas
cmp
add
ss
inc
jno
rcrl
cmp
ret
clc
dec
les
or
xchg
xor
jb
xor
sbb
mov
in
sub
xor
jp
sub
pop
and
fwait
jecxz
add
cwtl
fiadds
adc
ret
or
mov
leave
daa
xchg
jg
inc
rcrb
loope
aam
sbb
and
cmp
xchg
in
xor
stc
inc
pop
jle
dec
add
push
xor
out
xor
dec
leave
popf
inc
ror
jno
scas
subb
sub
jp
enter
rolb
loop
mov
xchg
aas
ret
xor
imul
xor
mov
arpl
sbb
lods
in
lahf
test
pushf
bound
lds
mov
fwait
jecxz
ret
jae
push
and
iret
jl
or
lahf
sub
push
scas
test
insl
lea
mov
jne
push
leave
cmp
jne
mov
mov
dec
scas
and
mov
add
aad
xor
rcrb
sub
mov
and
mov
xor
out
xor
xor
rclb
mov
jbe
sub
pop
mov
shl
enter
loope
add
sti
loope
add
mov
std
xor
push
mov
bound
pop
fdivrl
cmp
push
das
and
cmpb
inc
sub
pusha
mov
jo
inc
xor
pop
lcall
int
inc
xor
jmp
jb
nop
popf
push
inc
add
repnz
add
insb
cmpl
mov
xchg
add
je
outsl
mov
test
enter
xchg
lock
or
aam
fs
popf
or
rcr
and
jae
push
in
mov
xchg
stos
rcrb
lcall
inc
and
ljmp
rorb
xor
les
jnp
xorl
ds
push
mov
or
add
adc
push
daa
mov
xchg
jns
xchg
add
fsub
xor
sub
enter
xor
into
fs
cmpsl
push
leave
inc
cmp
es
sub
xor
movsb
sbb
inc
mov
cli
and
sbb
aam
clc
fsubrs
repnz
adc
push
into
and
arpl
or
mov
jnp
nop
lret
js
mov
cmpsl
jo
inc
mov
lea
pop
pop
nop
inc
push
loope
rclb
mov
jb
fidivrl
shlb
jmp
mov
in
pop
cmp
and
fcoml
or
daa
hlt
mov
ret
nop
fsts
dec
in
lret
aad
mov
popf
sub
fsubrl
call
push
jg
mov
xor
ret
hlt
test
movsl
icebp
or
and
adc
adcb
xchg
mov
cmpsb
mov
adc
cmp
cld
push
jle
mov
pushf
rorb
or
js
adc
mov
cmp
sti
sub
or
leave
pop
or
dec
fldcw
bound
inc
sbb
sub
arpl
aam
and
scas
xlat
mov
adc
push
js
dec
mull
les
mov
pusha
push
lods
add
rolb
loopne
popa
shrl
xor
mov
cmp
mov
pmulhw
and
mov
scas
push
cmpsb
cld
add
xor
pop
lea
jno
adc
and
cmp
fs
dec
into
sbb
xor
cld
fbstp
fistpll
dec
addb
mov
fcomps
xchg
push
js
cmc
mov
je
orw
mov
adc
jge
lds
xchg
stos
movsl
push
fisubs
fsubs
dec
sbb
adc
sbbl
iret
stos
push
in
cltd
inc
lock
les
or
or
cmp
sbb
aad
push
pop
inc
cli
movsb
cmp
cmpsl
clc
add
fstps
loopne
lahf
repz
fbld
push
add
test
repnz
sub
cmpsb
jno
test
int3
push
sti
pop
jle
and
jbe
or
dec
sub
lods
call
cs
mov
inc
inc
and
sbb
pusha
call
bnd
mov
dec
fs
into
cli
inc
sub
pusha
sahf
dec
lcall
and
pop
fucomi
adc
push
data16
dec
sti
push
adc
cmp
push
mov
ljmp
cmp
popa
mov
xchg
adc
mov
aas
mov
inc
fnstsw
xor
pop
xor
mov
int
add
mov
test
push
loope
int3
sub
mov
clc
xor
push
and
xchg
loopne
daa
and
pop
cmp
sbb
imull
repnz
inc
mov
jb
pop
xlat
nop
jne
inc
and
ret
ret
sbb
jae
nop
add
clc
stos
rorl
dec
js
imul
xor
pop
mov
mov
cmp
sub
fs
add
sub
mov
jl
xor
sbb
out
dec
inc
add
sub
push
mov
sbb
push
xorl
pop
in
dec
lods
xchg
push
jge
aad
and
lret
inc
fstl
rorb
out
test
push
rorb
adc
cs
loopne
mov
inc
cmp
jnp
sub
lret
sbb
repz
mov
mov
mov
dec
fmuls
sub
mov
mov
movsl
fdivl
clc
imulb
push
pop
or
mov
mov
fstpl
jne
scas
addb
xor
xchg
imul
std
or
cmp
mov
push
cmp
hlt
and
out
push
andb
adc
notl
rcll
mov
or
aad
mov
xchg
mov
dec
inc
or
out
cmc
lahf
mov
xchg
adc
push
xchg
ja
mov
cltd
mov
xchg
std
push
sub
xchg
dec
and
mov
sti
movsb
pop
sbb
or
enter
enter
hlt
insl
sub
mov
pop
aaa
cmp
jmp
andb
mov
cmpl
mov
pop
cltd
repnz
push
fwait
inc
jb
push
fldenv
dec
pop
xchg
cwtl
inc
add
mov
fcomip
in
or
cmc
gs
jns
and
xor
fwait
daa
stos
adc
or
sub
add
mov
rcl
mov
lret
fimuls
icebp
andl
loop
pop
mov
push
push
mov
cmp
inc
add
dec
add
and
int3
in
in
ret
add
xchg
out
and
sub
and
jne
gs
cmp
and
stos
sbb
dec
fwait
or
and
addl
mov
arpl
adc
xchg
mov
add
xchg
cmpsb
adc
dec
pop
adc
ret
arpl
cmp
outsl
fimuls
mov
imul
jle
movsl
repz
ficompl
jo
add
add
mov
lods
dec
retw
test
js
inc
xor
inc
xor
push
aam
dec
jnp
inc
lock
fwait
dec
dec
xor
dec
jmp
movsb
pop
loope
rclb
hlt
xor
inc
jl
and
jae
fldl
sub
and
insb
dec
je
jecxz
xchg
fistps
jmp
sbb
stc
xchg
or
xchg
xor
pop
cmp
ret
pushw
mov
lret
data16
es
and
pop
add
add
ja
adc
xchg
rcrl
loope
stos
addr16
mov
les
and
inc
sbb
loop
cli
in
xchg
loopne
inc
cld
fnstenv
cmp
nop
inc
push
daa
inc
out
stc
mov
ds
and
inc
call
jecxz
jo
jb
out
dec
imul
pop
les
out
push
dec
sub
xlat
inc
and
adc
cmp
push
outsb
mov
and
cli
sbb
ret
sbb
sbb
ss
repnz
lahf
dec
sahf
cwtl
sub
sahf
or
aas
incb
in
loopne
inc
xlat
push
push
dec
pop
pop
ret
jl
and
mov
filds
jae
adc
xor
cld
cmp
icebp
lods
add
pop
add
into
in
adc
mov
push
outsl
sbb
cmp
sub
pop
mov
sub
pop
icebp
std
shll
imul
cld
imul
xchg
jl
popa
pop
add
sub
xor
pop
adc
adcb
inc
cmp
popa
insl
dec
movsl
push
xchg
addr16
shll
push
push
cmpsb
inc
xor
js
cmp
or
and
scas
notl
inc
pusha
cs
pop
fisttpll
add
fisubl
mov
add
push
xchg
add
popf
insb
clc
stc
push
pop
loope
xchg
outsl
in
cmp
dec
sbb
sub
icebp
mov
test
jnp
mov
sbbl
add
aam
pusha
and
cli
and
push
scas
fnstsw
and
sbb
inc
add
sub
test
outsb
xchg
push
xchg
add
add
popf
jp
dec
sub
imul
out
xchg
das
lcall
in
setno
loop
mov
rcrl
bound
hlt
pop
pop
xor
inc
mov
fldlg2
fistl
aaa
pop
adc
and
or
aad
pop
mov
push
shlb
lds
xor
or
daa
bound
pop
xor
test
cwtl
xchg
and
rcr
aas
int3
mov
dec
loope
inc
leave
xchg
sub
insb
and
mov
cmpsl
jno
xchg
hlt
sub
cwtl
jg
pushf
mov
dec
mov
inc
mov
fidivrs
stos
add
movsb
push
scas
cwtl
mov
add
loop
lea
outsl
sbb
inc
addb
jb
mov
inc
and
jnp
in
adc
idivl
in
push
xchg
das
movsb
add
sub
loope
test
sub
iret
add
mov
xchg
test
mov
and
test
mov
push
jno
xlat
cmp
add
bound
inc
in
das
je
orl
and
xchg
mov
add
dec
fstl
jo
cmpsl
stos
test
or
aam
jecxz
outsb
loop
repz
cwtl
or
adc
repz
popf
xchg
mov
xchg
fcoml
shll
xchg
pop
jns
lock
cwtl
mov
das
popa
xor
push
xor
pop
loope
jns
dec
ja
aaa
sub
cmp
adc
cmp
push
sub
add
push
sbb
pop
or
inc
lods
adc
sbb
js
sub
adc
xor
inc
subl
outsb
movsl
push
or
nop
int
mov
inc
sub
or
xor
push
and
negl
and
sub
cwtl
ljmp
iret
adc
and
shll
mov
fs
in
rorb
push
movl
jl
gs
stos
mov
fcoml
cmp
inc
inc
lcall
mov
pop
jg
sbb
ret
rcr
push
xchg
test
je
rolb
sti
push
dec
push
sub
sbb
add
jo
xchg
sbb
inc
ds
push
nop
hlt
stos
nop
cmp
mov
rcrb
push
push
call
and
cli
fs
aaa
loopne
ss
cli
adc
rorb
ror
push
add
xlat
sub
jo
cmpsb
or
divl
xor
addr16
inc
add
jo
int
ret
cltd
hlt
or
fwait
dec
and
sti
js
or
arpl
mov
and
iret
lock
add
daa
addr16
rclb
rcrl
movsb
test
sbb
repz
int3
inc
lret
icebp
mov
push
adc
orb
cmp
push
push
out
hlt
int3
rolb
jmp
testb
pusha
popa
mov
pop
hlt
lret
testl
sub
orb
dec
push
jne
cmp
inc
mov
jmp
or
test
inc
rorb
pop
inc
movsl
ljmp
cltd
or
inc
xor
rorl
adc
loop
sbb
push
and
push
and
jb
aad
pop
and
cmp
mov
add
dec
repnz
add
jo
mov
lock
fs
js
vcvtps2pd
jecxz
xor
push
mov
xchg
jmp
lret
sbb
in
jno
lea
push
fistpl
jp
loopne
mov
test
pop
lds
jmp
jle,pn
mov
inc
lods
movsb
xchg
adc
inc
adc
jle
lret
add
orl
inc
add
mov
loopne
and
add
loopne
loope
sub
push
sub
cmpsl
mov
xrelease
inc
push
out
or
mov
xor
and
cld
xchg
mov
ja
push
jo
fwait
or
cmp
fidivs
mov
sub
xor
jbe
je
cmp
ss
push
or
mov
in
and
adc
cmp
pop
fsubr
adc
ficompl
test
sub
adc
xor
sub
leave
dec
arpl
pop
xlat
xchg
xchg
dec
cmc
cli
push
loope
or
add
adc
and
ds
dec
sbb
rol
into
mov
xor
inc
jnp
inc
pop
and
iret
jmp
jmp
movsb
mov
dec
mov
sbb
dec
jno
pop
lcall
out
mov
subb
repnz
call
mov
and
cmpsl
rorl
out
fbstp
dec
rcl
cmp
jno
in
add
pusha
sahf
cld
lret
xchg
inc
and
adc
mov
sbbb
xchg
mov
lret
shll
push
lods
mov
add
icebp
aas
or
pop
jbe
xlat
push
or
xor
sbb
nop
or
ror
pushf
dec
jns
push
adc
mov
sub
mov
push
inc
test
es
repz
cmpsl
dec
and
add
ret
add
sbbb
sbb
in
and
sub
nop
loopne
out
dec
sahf
inc
ret
mov
cmp
dec
out
fs
shrb
pop
sbb
xor
sbb
mov
jnp
mov
pushw
sbbb
incb
je
dec
popa
mull
cmpsb
xchg
das
js
jg
push
add
inc
nop
nop
adc
add
ret
mov
dec
fwait
test
mov
insl
xchg
lcall
xchg
loopne
sub
or
dec
dec
pop
icebp
aas
mov
mov
lahf
xchg
adc
cmp
pop
add
sub
pop
cmpsb
adcb
imul
jns
rsqrtps
rcll
lea
sbb
in
jl
mov
jno
in
or
addb
add
fbstp
rol
and
mov
adc
test
add
sub
lret
xchg
pop
insb
push
movsl
mov
cs
jbe
fsubl
dec
adc
outsl
shll
jno
subb
mov
mov
add
pusha
inc
inc
cmp
enter
push
in
and
jmp
push
test
push
andb
cmp
jg
inc
fbld
sub
xchg
js
and
push
and
cmp
clc
inc
jg
push
data16
mov
inc
rcll
and
out
inc
jno
js
pop
lds
bound
sbb
inc
mov
inc
add
lahf
fidivs
in
push
outsb
cli
les
fdivl
mov
pop
inc
loop
loop
adc
adc
repnz
int3
mov
adc
or
insb
out
xorl
in
mov
jb
and
lea
lcall
stc
ss
and
js
xor
call
mov
movsl
fdivrs
stos
dec
jp
pop
dec
sbb
mov
aam
mov
mov
pop
and
push
test
pop
mov
push
sbb
and
inc
push
sub
int
or
sub
icebp
xor
popa
pop
mov
xchg
fucomi
fstp
mov
jge
inc
dec
push
mov
bound
test
mov
mov
mov
sub
or
lock
mov
test
cmpsl
call
or
addr16
pusha
cmpsb
cmpb
clc
inc
outsl
dec
fsubl
jg
or
and
xor
call
pop
jg
jne
inc
mov
or
movnti
mov
aam
and
test
arpl
test
cld
push
cmpsl
add
xor
bswap
lcall
push
loope
sti
lret
xchg
rcrb
rclb
arpl
ds
push
dec
xchg
jo
stos
dec
or
mov
mov
and
jle
scas
dec
or
loope
and
sbb
add
add
lods
jne
rolb
sahf
rorl
sub
pop
xchg
int3
cmp
scas
jge
stos
add
ret
jo
std
adc
rorl
push
mov
add
bound
mov
mov
sbb
ror
xor
push
mov
and
add
inc
aas
push
jle
push
fimuls
pop
les
or
add
fdivl
ret
in
jo
push
pop
and
mov
faddl
sahf
mov
decl
idivl
push
cmp
push
sub
pop
dec
out
xchg
adc
repnz
sub
mov
mov
cltd
aad
adc
test
jle
out
cmp
les
adcb
in
xor
push
dec
pusha
outsb
outsb
adc
dec
xchg
pop
lret
push
xor
pop
and
movsb
xor
push
repz
jmp
jecxz
std
xchg
jge
push
push
add
inc
outsb
es
dec
sbb
adc
nop
jmp
or
mov
jmp
cmp
pop
in
jl
andb
or
push
cmpsl
mov
jl
jns
mov
ret
jl
sub
imul
mov
or
jne
leave
xchg
int
adc
cmp
mov
clc
adc
or
or
push
dec
jle
sar
andb
cld
inc
mov
xchg
icebp
addr16
or
mov
roll
xchg
jl
addl
mov
adc
jl
fistpll
jp
in
cmp
cmpsb
push
inc
xchg
repnz
fld
dec
lret
stos
jle
xchg
dec
add
popa
aas
sahf
adc
adc
adc
int3
pop
lock
jmp
mov
sub
cmp
and
or
dec
ljmp
mul
mov
inc
jp
fisubl
xchg
orb
enter
in
hlt
out
dec
mov
mov
mov
iret
mov
dec
xor
into
or
and
ret
ja
mov
mov
shrl
xor
lcall
and
andnps
enter
xor
test
fucomp
add
clc
and
mov
into
jge
adc
mov
cmp
into
or
pop
iret
dec
lock
adc
cltd
sub
popf
loop
push
jnp
push
repnz
adc
sbb
outsb
popa
cmp
in
movsb
add
outsb
cltd
jge
arpl
call
xchg
dec
shlb
pusha
repz
mov
or
sub
push
cmc
jl
sbb
in
call
cltd
rclb
add
popa
adc
pop
in
mov
jbe
enter
lods
pop
dec
xor
loopne
loope
adc
ds
adcl
add
movsl
sbb
mov
test
cmc
shr
xor
pop
jg
imul
repnz
sbb
xchg
pop
mov
fisttps
dec
push
adc
xchg
sbb
xchg
rorb
sbb
cmp
insb
add
xor
inc
mov
js
mov
adc
pop
cmpsb
sub
jbe
shl
mov
faddp
add
jno
sbb
push
mov
das
pop
and
xor
addr16
aad
push
in
lcall
and
sbb
loop
or
cmp
or
mov
in
cmp
ds
push
xchg
mov
cmp
add
sar
push
push
imul
bound
flds
xor
push
push
or
mov
aam
ret
adc
cmpsb
pop
inc
out
lcall
adc
xor
ljmp
cmpsl
push
add
je
jnp
add
xchg
inc
bound
xor
inc
jmp
adc
mov
and
or
xchg
jge
int3
outsb
pop
fs
push
or
xchg
lahf
xor
cmpsl
xchg
jae
in
xchg
xchg
sarl
mov
pavgb
ljmp
idivb
lods
mov
popa
cmp
mov
jb
fsubs
xchg
jns
push
outsb
inc
inc
aad
xchg
sub
mov
dec
inc
cmpb
xor
or
ret
sub
lea
xor
fincstp
jns
in
andnps
mov
adc
shl
pop
inc
sub
mov
and
pop
xchg
adc
adc
inc
negl
jbe
sbb
pushf
mov
je
xchg
xchg
cmp
iret
mov
lcall
lds
leave
int3
jno
mov
js
inc
and
jp
sbb
orb
dec
xor
stos
dec
rcrb
push
lret
lret
push
jge
jno
cmp
jl
or
jo
mov
add
shl
dec
jae,pt
sahf
cmpsl
test
jo
mov
inc
xlat
mov
jge
mov
xchg
pop
cmp
das
cmpsb
jl
sub
xor
adc
inc
sarb
dec
xor
sbb
repz
mov
mov
sub
xchg
jno
mov
es
xchg
outsb
sbb
std
and
movsb
dec
mov
bound
xchg
mov
jge
in
aam
mov
sbb
sbb
pop
and
jnp
xchg
sbb
testl
push
imul
jne
dec
mov
lcallw
mov
mov
aas
mov
push
sbb
lahf
mov
lods
test
adc
stos
mov
scas
xor
stos
add
lcall
jne
insb
out
cwtl
and
push
mov
out
adc
dec
mov
xchg
ret
jb
add
jne
mov
xor
or
rorl
ljmp
xchg
push
and
ljmp
pop
mov
dec
mov
aas
or
xchg
je
fcom
jno
pop
pop
pop
in
mov
xor
movsl
jmp
dec
enter
adc
loopne
fs
int
mov
or
xor
mov
jnp
fimuls
push
xor
cli
xchg
fstpl
jmp
sar
jno
cmpsb
mov
xor
push
leave
lea
mov
add
cmp
sti
and
lods
fisubrs
test
adc
stc
stos
xor
sbb
test
add
inc
scas
add
dec
cld
test
cmp
movsl
fiaddl
pop
lea
imul
out
fstl
shll
mov
lahf
loopne
add
dec
or
push
outsb
inc
xchg
inc
pop
mov
sub
iret
rolb
dec
cmp
mov
rclb
out
cmp
mov
cs
popa
lods
jns
push
jo
xlat
inc
jae
cmc
leave
mov
loop
and
mov
sbb
call
out
mov
lret
sub
stos
xchg
sbb
xor
imul
rcrb
or
cltd
or
jl
addb
call
xchg
cmp
mov
xorl
cmpsl
imul
push
inc
mov
mov
mov
movsl
test
imul
adc
enter
xchg
insl
enter
add
xchg
fucom
stos
sbb
dec
rolb
test
je
loop
test
test
xchg
fldenv
in
xor
add
mov
popa
in
rcll
fldlg2
popf
sub
es
cwtl
adc
dec
push
sti
add
adc
mov
sbb
xor
jo
jb
add
xchg
in
call
add
inc
mov
jmp
sbb
or
nop
aaa
repnz
cwtl
mov
aad
mov
add
mov
lret
adc
xchg
sti
jbe
data16
adc
call
and
and
pop
fcomps
xor
mov
inc
add
sbb
aam
loopne
push
adc
cmp
add
js
faddl
lods
inc
xorl
aad
aam
add
ret
lcall
inc
lds
dec
pop
sti
test
pop
mov
enter
mov
test
aas
ja
cmpsl
sbb
mov
mov
mov
push
stos
rorb
mov
clc
pop
push
jmp
movsl
jle
pop
push
add
mov
nop
xor
and
jnp
pop
and
in
sbb
jo
mov
mov
nop
adc
pop
adc
sbb
hlt
adc
and
test
out
mov
loope
mov
mov
mov
xchg
fwait
mov
xorl
inc
adc
fwait
dec
dec
fldt
pusha
adcb
mov
stc
add
mov
cmp
sbb
mov
int
test
lods
add
arpl
sbb
xorb
loopne
insb
lea
xchg
ds
stos
xor
xchg
cmp
adc
xor
push
push
and
ds
rolb
test
jl
in
nop
or
outsl
cltd
adc
sub
and
aaa
stc
or
lock
aas
movsb
dec
mov
mov
cmpsl
rclb
enter
jecxz
rcrb
es
adc
mov
and
and
call
int
or
push
ds
sbb
negb
sbb
sub
ljmp
imul
lcall
stc
cmp
or
mov
mov
lcall
or
bound
dec
and
fs
gs
cld
mov
fisubrl
cmpsl
addb
sbb
jbe
sub
out
pop
mov
pop
add
scas
sub
pop
call
dec
mov
nop
sub
orb
jl
jecxz
jno
cwtl
adc
xchg
mov
test
jecxz
xor
dec
sbb
unpcklps
sbb
dec
imul
adc
or
pop
loop
loop
mov
push
std
daa
loopne
or
ret
sbb
sti
popa
dec
shlb
je
or
mov
enter
sbbb
mov
mov
dec
pushf
pop
push
jle
aaa
jo
jo
imul
sarb
pusha
imul
dec
xor
adc
rcr
test
mov
cmp
mov
xchg
mov
leave
test
mov
subl
inc
inc
lahf
xchg
stos
loopne
inc
arpl
xor
shlb
aad
push
xor
movsl
into
pop
stos
in
das
adc
jnp
in
pop
hlt
add
inc
in
push
and
or
pop
sub
adc
in
shl
scas
pusha
dec
and
les
xchg
mov
popa
dec
ret
jg
sbb
loope
dec
push
enter
inc
mov
sarl
in
inc
sub
xor
ret
jle
fwait
sub
add
cmp
add
enter
lret
movsb
or
pop
sub
rol
rclb
xchg
addr16
loope
xchg
push
push
sahf
data16
cmp
mov
pop
fsubl
jp
pop
pop
xchg
dec
or
mov
inc
or
pop
loope
lahf
lahf
mov
das
mov
clc
in
cmp
adc
icebp
cmp
xor
sbb
imul
cmp
cmpsb
or
test
dec
call
pop
pause
fnstcw
mov
cmc
adc
add
inc
aad
popa
leave
les
inc
or
out
into
and
je
sbb
adc
fsubl
jo
fidivrl
adcb
or
and
dec
popa
ljmp
push
and
movsl
sub
push
imul
mov
mov
nop
push
cli
pop
jnp
lods
cmpsb
hlt
pop
cs
mov
sbb
outsb
xor
sbb
rolb
addl
lcall
rol
loop
xorl
fiaddl
lock
inc
dec
dec
or
pop
leave
cs
mov
loop
ja
js
add
in
rcrb
jge
out
push
or
rolb
xchg
dec
dec
jo
icebp
mov
jl
mov
xor
mov
das
hlt
and
sbb
adcb
inc
jne
mov
dec
mov
cwtl
cld
add
lcall
push
loopne
lds
push
push
mov
and
andl
test
das
mov
push
in
lea
inc
pop
aam
mov
js
imul
pop
push
repz
pop
popf
adc
ret
test
inc
je
cmpsl
pop
and
sub
sti
add
inc
jl
inc
dec
sbb
in
je
sub
iret
cwtl
or
jge
call
xchg
std
add
sub
adc
icebp
mov
rcll
cmpsl
lcall
xor
ffreep
mov
and
sub
or
fists
inc
mov
xlat
enter
and
cs
jb
and
lret
push
mov
xor
and
arpl
icebp
or
and
out
xor
sub
sub
cmp
fidivs
mov
jne
pop
jbe
inc
adc
stos
sub
add
sub
ljmp
cmpsb
push
xor
push
cmp
lret
dec
pop
push
cmp
sbb
lods
pop
shrb
mov
pop
in
sbb
and
stos
and
jae
and
mov
push
xor
jle
xchg
in
inc
loop
push
imul
or
sbb
lret
xchg
in
adc
mov
xor
mov
ja
cmp
cmp
aas
je
out
jno
fmull
int
inc
lret
lock
loopne
jmp
add
cmp
pop
dec
xchg
jno
or
adc
or
xchg
xchg
xchg
test
sbb
stos
xchg
dec
pop
or
inc
xor
fsubs
stos
mov
std
idiv
mov
pop
xor
loopne
or
ljmp
adc
sbb
add
push
rorl
or
bound
mov
push
sub
xchg
cmp
cmp
mov
nop
jecxz
lock
adc
fneni(8087
scas
push
dec
add
push
fld
and
inc
insl
jne
aaa
mov
sbb
das
and
fildll
dec
ss
pop
incl
cmpsl
xor
loopne
add
int3
cli
pushf
test
es
xchg
cld
mov
gs
jb
inc
call
sub
pushf
xlat
sub
jae
fisubs
es
xor
or
push
imul
jbe
popa
pop
adc
fmul
or
arpl
lods
dec
out
mov
pop
jge
aas
push
add
dec
add
mov
mov
pusha
add
push
inc
out
cmp
or
xorl
cwtl
js
mov
push
pop
mov
sub
stos
mov
inc
jmp
and
ficomps
inc
pop
add
pusha
ljmp
mov
jp
and
adc
pop
and
push
dec
sub
mov
adc
jle
mov
mov
xor
fiaddl
mov
repz
mov
ss
mov
loopne
adc
and
jno
dec
ljmp
out
out
sahf
pop
mov
push
or
cmpsl
inc
mov
jns
std
mov
movsb
sbb
sub
fildl
cltd
inc
or
fdivrs
mov
mov
lds
mov
xlat
xor
mov
adc
iret
push
sbb
mov
dec
jbe,pt
pop
or
cmp
call
inc
sub
mov
adc
insl
sahf
and
lods
mov
xchg
and
dec
iret
push
insb
cmpsb
rol
mov
out
mov
inc
pop
loope
cvtps2pd
rolb
inc
jmp
repnz
mov
loope
sub
or
or
jne
das
xchg
sbb
adc
adc
lock
andb
lods
push
add
in
ds
add
adc
sub
inc
sub
inc
pusha
fcompl
shr
xor
sbb
sub
mov
dec
add
mov
or
gs
cmp
cli
arpl
mov
mov
inc
dec
add
mov
adc
sub
xchg
jns
pop
sub
sub
mov
push
and
in
fbld
cmp
addr16
int3
aad
push
mov
imull
push
lods
inc
ficoms
pop
sub
cmp
inc
adc
stos
xor
xor
repnz
xor
push
and
adc
lret
or
mov
fildl
andl
sarl
cs
add
mov
inc
psadbw
inc
dec
pushf
pushf
add
and
daa
out
scas
and
bound
jmp
test
jo
jb
pop
xchg
fistpll
jnp
mov
jae
cmp
mov
fwait
orps
mov
mov
add
ds
stos
sahf
je
aad
and
xlat
scas
mov
inc
in
les
jl
enter
adc
sti
les
inc
sub
sub
lock
lock
setns
ret
jae
test
cs
test
xchg
inc
rcrl
push
push
cmp
xchg
nop
inc
aad
xor
adc
mov
xchg
data16
sbb
cmp
xchg
jge
push
loopne
jae
repnz
adc
cltd
xchg
pop
xchg
lcall
dec
cmp
or
xchg
inc
lcall
enter
xchg
cmc
jp
fistpl
xor
leave
sbb
mov
xchg
mov
push
mov
call
xchg
jne
fs
mov
inc
jns
mov
push
xor
inc
test
dec
mov
xor
or
mov
and
xchg
mov
nop
popf
xor
outsl
je
inc
iret
in
xchg
jne
subl
mov
add
insb
mov
sub
iret
jne
mov
inc
andb
inc
inc
mov
dec
jecxz
mov
inc
mov
pop
data16
in
push
push
or
pop
and
pusha
ret
dec
scas
push
inc
sbb
adc
pop
clc
stos
inc
aas
sbb
int
sbbb
inc
enter
movsl
add
mov
dec
shrb
ret
inc
pusha
push
mov
cmc
jne
xchg
jnp
enter
repz
mov
jno
dec
cmc
notl
les
idivb
nop
mov
inc
test
and
sub
fwait
int
test
rorl
or
mov
leave
pop
mov
inc
mov
push
insl
cwtl
add
cmp
out
mul
pop
adc
inc
and
popa
dec
aas
mov
es
rorb
lock
sbb
sbb
jbe
push
or
lods
in
and
out
in
sub
out
mov
out
cmp
adcb
popf
push
mov
dec
je
xchg
jl
std
sub
dec
push
xor
inc
cltd
push
fists
ja
cmp
aaa
sbb
lret
subl
xchg
cwtl
add
or
in
and
pop
dec
test
scas
arpl
mov
pop
or
push
rolb
dec
sub
scas
fadd
cwtl
addb
push
push
ds
jecxz
push
scas
and
fsub
sarb
sbb
sbb
fs
mov
leave
lret
cmp
inc
das
cld
ficompl
jb
push
inc
jp
test
push
loope
imul
xor
int
add
call
shl
xor
and
insl
jno
inc
aaa
enter
jae
mov
sub
jne
rclb
cmp
dec
mov
lock
int3
roll
ret
movsl
ss
cmp
sub
pop
icebp
add
and
sahf
xor
sub
ja
sbb
push
push
cmp
add
xchg
clc
xchg
and
insb
push
and
sbb
lds
lret
imul
pop
push
sbb
rol
iret
pop
in
and
inc
inc
lcall
xchg
or
xchg
add
inc
adc
test
mov
sub
push
lea
stc
subl
int3
scas
addl
xchg
sbb
mov
mov
jg
adc
scas
jno
and
dec
lahf
or
iret
andl
faddl
or
xchg
daa
subb
fmuls
insl
or
sbb
cmp
es
sub
cli
aas
cmp
stc
imul
dec
sub
movsl
sub
cltd
aad
adc
push
or
adc
sbb
xor
dec
sbbb
jnp
sbb
das
shl
addr16
or
or
ja
daa
xor
jo
xchg
mull
dec
shll
mov
jbe,pn
xchg
int
lahf
mov
xchg
dec
push
movsl
xor
je
ja
or
mov
mov
out
mov
dec
shll
or
es
mov
sbb
gs
or
fadd
out
sbb
icebp
sahf
or
dec
add
fmull
push
or
loopne
push
mov
bound
icebp
mov
mov
push
clc
mov
in
mov
push
cmp
pop
inc
orb
cmp
jmp
sbb
cmpb
cmp
hlt
inc
sub
push
mov
push
sbb
arpl
mov
stos
lahf
into
jns
aad
ficomps
out
pop
adc
mov
int3
inc
pushf
mov
adc
adc
ja
jg
adc
xchg
dec
out
out
xor
nop
jecxz
movsl
mov
push
mov
push
cmp
add
stc
adc
jb
lea
into
and
lods
push
icebp
dec
mov
lret
push
sbbb
sub
inc
outsb
ret
mov
push
and
add
lods
lret
jmp
scas
jmp
dec
and
orb
cmp
jne
dec
add
sar
ljmp
mov
adcb
mov
pop
std
cmc
and
ret
mov
dec
mov
mov
ljmp
scas
orb
mov
mov
xor
xor
in
mov
push
movsl
cmp
jnp
sub
mov
out
loopne
and
int3
cld
inc
stos
or
sbbl
les
cmp
movb
out
rorb
js
flds
cmp
mov
jg
add
loop
jp
cmp
jecxz
aaa
imulb
or
sub
add
add
ja
inc
out
fdivrp
sti
scas
pop
adc
jne
xor
and
sbb
aas
repz
scas
cmpsb
mov
sub
repnz
cwtl
stc
data16
add
mov
sar
filds
cli
mov
pop
and
or
and
push
sub
push
mov
push
inc
pop
sbb
and
xor
insb
call
enter
push
sub
mov
mov
scas
je
push
mov
dec
sbb
sbb
into
leave
jnp
xchg
icebp
push
and
dec
in
ret
insb
or
push
push
pop
xor
jl
addr16
in
mov
filds
mov
jmp
cmp
mov
add
in
push
test
ret
rcrl
mov
rolb
cmpsb
xor
aas
rcr
xor
repz
jmp
rorb
jecxz
cmp
inc
ficoml
adc
imul
and
push
ret
mov
push
mov
test
sbb
pop
push
or
ficoml
xor
imul
ljmp
je
dec
jle
jb
adc
es
enter
sub
or
fs
xchg
cmp
ja
shlb
dec
js
sbb
xor
in
xor
sub
enter
hlt
add
jae
dec
cmp
and
lock
fs
inc
bound
sub
add
es
in
dec
fldl
mov
dec
mov
add
sbb
and
adc
mov
movsb
mov
insb
mov
mov
js
dec
addl
iret
push
push
sbb
inc
sub
mov
mov
movsb
and
popa
loope
cmp
sbb
stos
xchg
or
aad
push
cmp
or
sbb
xchg
jmp
and
mov
mov
add
pop
lods
das
sbb
and
add
mov
movsb
xchg
adc
cmp
adc
and
jmp
stos
jne
outsb
rolw
stc
jg
add
mov
push
rol
andb
jg
mov
jl
lcall
lcall
orb
pop
dec
add
mov
outsl
lret
inc
mov
fldl
sahf
and
lods
sub
xchg
je
mov
ffreep
and
cmp
inc
add
and
pop
mov
sbb
out
popf
or
push
pusha
inc
lods
in
xor
sahf
add
push
js
and
insb
cwtl
fwait
aam
pop
movaps
cmpsb
std
clc
push
or
lret
xor
je
xorl
rcrl
cltd
or
xchg
push
pop
jecxz
adc
in
outsb
push
repz
push
fnstsw
pop
aad
xchg
or
aam
test
mov
or
movsb
jo
pop
shrl
mov
cmp
test
jmp
add
fucomi
loop
ret
shrb
and
js
lret
xor
xor
inc
fucomp
add
mov
lret
mov
jecxz
or
sbb
test
fdiv
dec
sbb
push
imul
inc
adc
inc
lret
ret
ret
dec
and
mov
mov
xor
scas
andb
fwait
xor
adc
inc
pop
inc
test
mov
shrb
mov
cmpsl
loope
xchg
scas
xor
push
and
cmp
xchg
mov
enter
notl
es
ds
test
push
fidivrs
scas
or
add
jle
shll
xor
jecxz
sbb
push
ret
or
cmc
add
fs
and
sahf
mov
adc
imul
orl
jecxz
js
mov
outsb
xor
inc
jbe
or
sbb
sub
notl
shll
test
jo
xchg
test
xchg
and
sti
scas
jecxz
sbb
mov
and
mov
or
repz
rcr
mov
xchg
pop
mov
in
lahf
loopne
mov
lea
jne
jbe
xchg
and
in
in
inc
stos
sbb
mov
mov
sbb
out
inc
fisttpl
push
es
and
dec
push
fsubrl
inc
in
sub
cmc
and
jbe
in
inc
add
push
cltd
clc
cltd
and
int3
sub
jge
dec
mov
push
add
out
pop
push
add
addb
or
lock
adc
les
inc
xor
pop
daa
aam
cmpsl
lock
cmp
cli
push
test
xchg
mov
inc
adc
pop
and
cli
jl
push
or
mov
out
xchg
and
je
popa
dec
add
repz
and
jge
push
jnp
bound
xor
inc
mov
push
xor
in
xchg
adc
dec
int
and
and
cld
sub
fdiv
sbb
adc
bound
movsb
jl
loopne
xchg
jno
mov
dec
inc
out
xor
shrb
mov
dec
cs
mov
mov
cmp
js
and
hlt
push
std
jmp
and
mov
iret
pop
mov
ljmp
sbb
and
xchg
dec
popa
das
push
loope
stos
sarl
inc
movsb
sbbb
sbb
or
sti
jbe
sbbl
push
popf
enter
dec
xor
shl
ficoml
inc
push
inc
push
adc
call
cmp
bound
faddl
psubq
shl
mov
mov
add
pop
and
bound
cmp
mov
cld
cmp
fdivrs
in
fs
bswap
int3
sbb
out
and
in
jle
xchg
cmpsb
adc
adc
mov
mov
or
enter
cld
xchg
mov
clc
inc
push
ljmp
xor
mov
rcrl
adc
stc
mov
neg
cwtl
andb
inc
mov
dec
adc
cmp
xchg
jg
mov
inc
mov
add
sbb
in
pop
popf
in
lds
call
popa
in
nop
fs
pop
mov
scas
xorl
test
and
lods
mov
mov
xchg
test
mov
jno
and
andb
lea
lahf
dec
mov
out
or
cmpsl
jmp
stc
test
push
xchg
iret
retw
push
jl
mov
in
sahf
or
add
repz
scas
sbb
xchg
aaa
out
inc
jns
movsb
clc
add
adcl
dec
nop
addb
mov
push
es
test
in
aad
aad
inc
es
outsb
ja
js
xchg
xchg
sub
push
and
cmp
int3
lret
cmp
or
and
jns
inc
or
incb
sbb
push
mov
cmp
jb
lcall
es
lds
jle
or
pop
aaa
jge
lods
fidivrl
xor
mov
dec
xchg
jo
mov
fadds
xchg
mov
testl
hlt
mov
cmp
popa
sbbl
dec
jb
or
sbb
xor
test
sub
fwait
lret
push
pop
sbb
mov
dec
mov
rorb
mov
rcrl
add
fs
or
push
dec
cmp
sub
add
cmp
sbb
lea
adc
mov
mov
cmp
outsb
or
rclb
sub
nop
mov
fisubl
lds
adc
sub
testb
or
je
push
and
mov
or
inc
push
inc
sbb
add
js
inc
stos
in
jno
add
js
xor
scas
push
inc
jge
test
mov
data16
lods
dec
nop
and
mov
aad
cltd
push
aas
stos
xor
jl
mov
loope
adc
jecxz
into
adc
dec
inc
in
cmp
mov
inc
int
mov
sbb
mov
pop
es
push
cmp
pusha
jl
xor
test
cmc
sub
pop
xchg
xor
sbbb
ss
and
nop
dec
in
mov
inc
adc
rolb
and
inc
push
roll
mov
push
xchg
pop
and
add
and
or
cmp
mov
stc
repz
jecxz
inc
cmc
cmp
lret
adc
jae
or
lcall
es
sub
xor
sarl
outsb
mov
call
out
mov
and
add
aas
sbb
push
test
cli
xchg
xchg
pop
xor
enter
test
jb
leave
repnz
inc
and
xsha1
cmpsb
mov
add
mov
loope
inc
lea
ljmp
push
aas
mov
dec
adc
inc
stos
scas
popa
sub
lahf
rcr
sbbb
xor
or
pop
lock
mov
scas
stos
in
pop
mov
or
ret
daa
cmp
mov
sets
aas
es
mov
cwtl
out
fiadds
push
xchg
mov
aaa
cmp
or
and
and
and
xchg
xor
mov
push
repnz
incb
mov
xchg
sub
je
daa
inc
adc
ds
out
mov
lds
or
rclb
in
gs
call
and
sti
pushf
mov
inc
dec
inc
aas
add
cmpb
jge
out
movsb
mov
adc
clc
mov
ds
outsb
in
or
add
jae
into
sbb
sahf
repz
aaa
adc
dec
shrl
cmp
or
or
sbb
in
jmp
xchg
out
jl
movl
and
fstpt
mov
jmp
lahf
adc
jl
push
dec
pop
push
hlt
fdivrs
outsl
movsl
ret
in
les
inc
mov
adc
or
xor
or
xchg
into
ds
sbb
mov
adc
sbb
push
into
sub
inc
mov
cld
jl
stos
sbb
mov
fdivrl
pusha
xchg
push
add
and
dec
mov
adc
lds
adc
insb
test
push
ds
fwait
in
push
mov
enter
jl
or
rcll
push
gs
add
push
les
negl
inc
jns
mov
cli
ret
and
fs
adc
inc
adc
jno
aam
aad
insl
mov
cmpsl
adc
int
inc
shrb
xchg
inc
call
mov
add
insb
test
inc
jno
aaa
es
sysret
nop
fwait
sbb
adc
adc
sahf
sbb
add
and
mov
shlb
and
fildl
in
adcl
adc
btr
mov
add
outsl
leave
pop
out
repz
insl
clc
leave
in
push
mov
pop
sti
cwtl
sub
mov
sbb
jb
leave
aaa
test
push
fstpt
inc
ja
cld
jmp
pop
sbb
sbb
inc
xchg
push
mov
cmc
xchg
cmp
jge
jno
jl
inc
or
test
cmp
mov
mov
and
in
inc
push
test
dec
sahf
test
fimuls
cmp
pushf
sbb
jecxz
add
cmp
xor
jmp
loop
insl
xchg
aad
mov
shrb
inc
bound
int
inc
lds
inc
or
or
mov
or
mov
cmp
push
mov
xchg
outsl
jno
lock
insl
jbe
test
out
add
stos
sub
in
pop
and
loop
xor
sbb
sbb
mov
or
add
insb
gs
fstpt
push
bound
jnp
add
pop
popa
or
js
test
jns
les
cmp
pop
cmc
sbb
sub
cwtl
outsl
cli
int
xor
fs
mov
mov
xor
mov
cmpsl
adc
and
and
mov
stos
sub
shl
and
enter
sbb
addr16
sarl
adc
jbe
std
xor
mov
adc
and
xchg
inc
int
pop
jnp
fwait
inc
popf
stos
xchg
sahf
and
inc
push
lahf
inc
orb
int3
ret
pop
out
insb
inc
aaa
cmp
mov
es
sub
das
sub
xchg
sub
wrmsr
lds
std
adcb
and
sub
les
and
jo
aaa
leave
cmpl
cltd
out
inc
add
xchg
stc
outsl
inc
push
scas
sti
or
std
xchg
negb
pcmpeqb
in
cwtl
and
dec
cwtl
add
leave
sbb
add
aaa
jp
xor
cltd
jno
addl
mov
std
pop
gs
and
ds
cmp
insb
jge
loopne
jbe
cld
sar
scas
cmp
insb
aam
push
arpl
pushf
lcall
out
jl
testb
fiaddl
pop
mov
insl
sbb
dec
fs
add
clc
rcll
bound
pop
adc
data16
fwait
rol
pusha
sub
mov
cmp
push
sub
lea
sub
dec
mov
mov
test
and
stos
jecxz
fs
xor
nop
and
push
sbb
jmp
imul
lods
jle
xchg
sbb
repz
mov
es
xchg
lret
mov
and
push
pop
cmc
shrl
cli
icebp
data16
stos
dec
or
add
pop
sbb
xlat
add
add
mov
clc
rcll
subl
push
or
pop
mov
and
pop
and
ljmp
xor
inc
repnz
cmp
popa
and
pop
and
inc
jns
loop
pushf
ss
daa
mov
out
mov
daa
add
jnp
rolb
cltd
mov
add
js
loopne
hlt
pop
loopne
xchg
cmc
or
cmp
popa
imul
sbb
shll
je
shrb
pushf
hlt
mov
pop
mov
xor
push
bnd
aas
mov
or
jp
and
cmc
imul
mov
movsl
add
push
mov
add
mov
scas
dec
inc
fstpl
adc
dec
jbe
stos
out
pop
and
pop
cmpl
lea
cmpsb
ret
enter
cld
or
sti
xor
out
cmp
or
push
pop
inc
jmp
sbb
xchg
nop
addb
int
sbb
jbe
adc
dec
aaa
mov
jg
jo
sub
pop
xorl
pop
jns
stos
ret
adc
in
sbb
lea
jbe
jmp
cmp
leave
xchg
sub
or
daa
sbb
inc
rcr
aas
mov
pop
add
dec
sarl
adc
adc
sbb
enter
test
sbb
push
mov
add
and
push
fcompp
push
add
add
sbb
mov
lock
push
xor
mov
mov
or
lcall
leave
bound
add
dec
jmp
add
jbe
jl
dec
add
mov
into
sbb
xlat
add
mov
pushf
nop
pop
das
pop
mov
add
mov
jns
roll
mov
sub
iret
mov
inc
arpl
adc
hlt
jl
pop
mov
shll
sbb
push
push
sbb
fldcw
inc
repz
dec
aam
rolb
sbb
xchg
dec
and
push
inc
cmp
or
test
testl
addr16
loop
jb
loopne
sub
adc
sbb
jl
push
add
sub
ja
adc
mov
shlb
movsl
shll
push
ret
cli
pop
enter
dec
or
inc
dec
and
fwait
push
inc
rcll
jl
mov
es
call
mov
sub
mov
out
sbb
scas
das
lods
push
fimuls
xor
lcall
mov
lock
xor
lret
stos
sbbb
and
adc
bound
inc
ljmp
fildll
call
cmp
xor
and
inc
int
and
cmp
ret
mov
lods
add
or
stc
mov
imul
fldl
fwait
pop
rcll
mov
sub
push
mov
pop
inc
push
push
mov
sahf
mov
mov
outsb
sub
xchg
popa
loopne
jns
xor
rorl
add
add
inc
nop
or
inc
pop
push
jo
aas
inc
dec
lahf
sbb
jp
or
incb
call
jge
cmpsl
je
xchg
leave
les
push
and
mov
fisubl
sti
cmp
rorb
cmp
xchg
js
out
das
push
and
and
xor
and
cld
mov
scas
iret
jb
inc
pop
jae
or
adc
dec
inc
sti
in
pop
dec
adc
or
add
adc
lret
filds
fidivs
and
daa
add
inc
test
jge
out
lret
xchg
and
nop
add
pop
push
addr16
push
cli
or
and
mov
mov
push
out
sub
popa
or
cmpb
and
or
jb
adc
cmp
rcrl
cld
mov
outsl
add
inc
fildll
pop
test
mov
or
outsb
cmp
fimuls
mov
gs
inc
push
sub
les
push
and
dec
xor
popf
dec
mov
or
rcr
jno
test
jl
js
into
fadds
outsb
scas
inc
leave
mov
cmpsl
sbb
lods
sub
xor
fsubp
mov
ja
cmp
dec
clc
mov
push
and
orb
mov
cmp
mov
daa
inc
push
hlt
add
pop
pusha
in
iret
movsl
mov
push
inc
scas
push
jno
push
add
inc
jmp
adc
fisubrl
testb
add
xchg
lods
push
je
sbbb
sub
sahf
jecxz
lahf
cwtl
pop
test
data16
jno
nop
movsl
out
adc
or
add
mov
dec
mov
sub
cmp
dec
cmpb
lret
cltd
roll
inc
mov
mov
add
and
cld
xchg
es
aaa
dec
pop
or
jecxz
out
or
xchg
mov
iret
or
hlt
inc
pop
adc
cmp
insb
orb
dec
arpl
jl
push
hlt
or
insl
or
out
or
imul
add
sbb
lahf
lret
xorb
pop
push
out
out
mov
jge
pusha
jns
push
xchg
loope
mov
dec
in
push
jne
cld
inc
repz
and
sub
mov
repz
jge
mov
out
cld
and
stos
or
out
mov
pop
mov
insl
pop
inc
xor
cmc
outsb
rclb
fldt
cmp
inc
mov
lds
mov
cmc
push
clc
lds
lods
dec
or
xchg
mov
cld
inc
xchg
cwtl
xor
mov
push
mov
inc
stc
ds
popa
sahf
jp
adc
imul
push
sbb
idivb
dec
test
or
adc
sbb
lock
movl
mov
cmp
jae
pop
mov
inc
cmp
rcrl
clc
ds
fyl2xp1
xchg
clc
scas
jl
add
inc
jecxz
sub
jmp
add
lea
xor
inc
push
sbb
lcall
insl
aaa
cmpsb
inc
jl
cmp
outsl
test
jle
rcrl
mov
cmp
sbb
push
xor
pop
xchg
adc
insl
cmp
xor
in
xor
push
add
sub
add
lock
movsb
mov
inc
push
ret
dec
pushf
roll
or
xchg
mov
mov
xchg
and
dec
push
je,pn
pusha
cmp
mov
out
push
mov
push
pop
pop
and
add
enter
addr16
stos
mov
nop
icebp
mov
push
sahf
mov
xor
aam
hlt
cltd
adc
jl
cmp
bound
pop
nop
and
and
mov
insl
pushf
subb
mov
arpl
mov
xchg
cli
and
and
nop
dec
and
roll
xor
shll
pushf
je
xchg
std
mov
inc
loopne
out
cmp
enter
outsl
lds
sbb
adc
imul
mov
mov
cmp
scas
sub
jbe
sub
jno
rcll
rorl
and
jno
into
dec
push
outsl
or
cmc
xchg
rolb
or
jns
mov
xcrypt-cfb
cmpsl
and
fwait
cmp
cmc
outsb
rcrb
jo
pop
lods
inc
add
jno
dec
add
in
sbbb
push
ret
or
loope
les
cwtl
mov
arpl
mov
dec
cltd
or
mov
rcrb
loopne
push
or
and
pop
inc
push
mov
sti
loop
push
in
dec
stos
popf
das
loopne
sbb
mov
cmp
sbb
or
das
push
dec
imul
stos
popf
inc
enter
cmp
dec
je
cld
xor
enter
xchg
mov
dec
jbe
movsl
cltd
shrb
push
cmp
shrl
fwait
jno
jno
mov
insl
mov
pushf
enter
and
mov
bound
inc
and
shlb
xchg
mov
sub
lea
mov
sbbl
sub
je
pop
add
mov
test
dec
mov
push
and
sub
roll
jg
mov
ja
negl
in
inc
inc
fsts
cmpsl
es
fs
addb
popf
or
and
sbb
mov
mov
into
outsb
xor
and
rclb
int3
push
inc
ljmp
mov
aaa
dec
stos
insb
inc
pop
push
mov
adc
xchg
pop
mov
add
cmp
and
in
es
pop
push
add
add
testb
cmp
data16
pusha
add
and
mov
fldenv
pop
lock
out
inc
pop
xchg
and
add
mov
nopl
leave
push
xor
in
xor
adc
test
sbb
rorl
mov
rorl
pusha
jne
imul
movsb
adc
sbb
sub
adc
adc
lret
mov
mov
xor
sub
sub
mov
push
and
mov
push
test
fs
or
mov
xchg
mov
dec
sahf
adc
push
sbb
cmp
xchg
sub
dec
ret
adc
test
popa
les
stc
pop
mov
xlat
cmp
sub
cmc
ss
mov
insb
push
rcrb
pop
mov
push
rolb
push
sbb
orl
mov
in
sbb
test
es
sub
jmp
rcpps
rcr
cmp
adc
arpl
inc
and
xchg
sbb
repz
push
push
push
push
scas
clc
or
push
adc
inc
loope
roll
and
xor
subl
xor
lock
imul
xor
cmp
xor
mov
and
push
push
sub
rcl
popa
sub
pop
mov
mov
addr16
jge
push
repz
fldcw
test
popl
sub
xchg
push
sbb
and
jg
fmul
cmc
jecxz
pop
int3
or
push
adc
add
int3
stc
mov
xor
cs
or
movsb
xchg
ret
jle
icebp
clc
xchg
inc
or
mov
mov
jnp
outsb
fwait
test
imull
or
adc
negl
out
pusha
int
and
xor
je
test
out
cmp
aam
scas
mov
cwtl
dec
repnz
aas
xor
cmp
cmp
addl
or
imul
push
nop
ljmp
xor
aad
aas
out
lea
stos
leave
nop
pop
ret
sbb
hlt
jle
push
cwtl
enter
jp
adc
xorl
inc
jp
or
loop
and
hlt
jle
outsl
inc
mov
xchg
fidivrs
mov
cmp
and
adc
repnz
addb
mov
out
sbb
cmp
xor
sub
xorb
rclb
es
mov
and
push
mov
adc
sbb
xor
lds
nop
or
daa
mov
jl
push
pusha
in
mov
stos
out
es
shlb
sub
call
shrb
xchg
inc
dec
mov
sbb
sub
dec
insl
jno
jle
sub
sbbb
dec
cwtl
ret
cmpsb
jbe
adc
push
mov
inc
xchg
mov
mov
jl
push
or
pop
mov
jb
fnstenv
and
fstps
xchg
cmp
and
fisubs
divl
inc
mov
xor
push
insl
adc
sub
lods
xchg
cld
leave
repnz
xor
or
add
dec
ret
mov
imul
or
jno,pt
dec
jno
or
pop
sbb
xchg
mov
jp
inc
loopne
xchg
inc
push
leave
xchg
push
adc
lret
xor
jno
adc
imul
cs
mov
add
movsb
js
push
mov
sti
xor
dec
lahf
lds
jo
sbb
std
in
int3
fwait
push
test
test
lcall
into
addl
je
fadd
xor
mov
pushf
jle
push
dec
pop
pop
movsl
leave
pop
sahf
fiadds
or
or
push
and
jo
imul
or
out
and
mov
inc
sbb
pusha
insl
inc
stos
jp
out
adc
inc
jo
add
fs
pop
push
ljmp
andl
or
daa
sub
and
cwtl
popa
enter
nop
push
mov
dec
jnp
jge
dec
dec
aam
inc
out
insl
nop
nop
xchg
sub
dec
rcrb
add
xor
or
cmp
in
dec
sbb
daa
test
decl
roll
arpl
add
cmp
fsubs
ljmp
aad
push
aam
and
adc
mov
aas
xor
mov
xchg
fstl
nop
gs
jl
mov
dec
inc
xchg
pop
shlb
adc
sub
ret
movsb
push
push
add
and
std
or
adc
pop
jns
aaa
fildl
adc
ja
and
insb
mov
xlat
jg
dec
sbb
out
lahf
or
dec
arpl
leave
mov
and
cmp
mov
push
sbbl
add
fadd
addl
push
cwtl
push
shrd
dec
pop
inc
psubq
sbb
mov
call
icebp
mov
jo
adc
add
gs
push
ljmp
or
pop
sbb
adc
int3
add
pop
mov
sub
idivb
xor
mov
rcrb
inc
rorl
loop
mov
idiv
sbb
and
lret
in
add
leave
add
push
jmp
or
insb
pop
xchg
test
cli
fnstenv
hlt
cmpsl
mov
cmpsl
xor
add
cmp
insb
adc
dec
mov
or
mov
and
loope
mov
out
fisttpll
pop
jnp
movsb
mov
rcrb
adcl
cmp
add
pop
sub
lret
dec
mov
test
dec
fisttps
cmp
xchg
cmp
daa
inc
in
add
inc
adc
mov
push
lods
pop
repz
aad
dec
mov
sub
cmc
inc
push
pop
jne
push
pop
sbb
sbbb
dec
aad
xchg
xchg
pusha
xor
push
jns
movb
out
imul
cs
add
call
xor
mov
shlb
adc
mov
xor
or
jb
ljmp
lret
fdivrl
sub
arpl
in
cltd
add
mov
pop
push
scas
sub
xchg
je
aam
loope
mov
cmc
add
fwait
pop
je
jmp
cltd
adc
add
ljmp
xchg
fs
xor
xor
jae
call
mov
rolb
sbb
add
jg
test
jns
inc
inc
shrb
dec
adc
sub
stc
push
stos
push
hlt
mov
stc
adc
test
insb
xchg
push
les
mov
outsb
xor
roll
and
test
stos
cli
shrl
je
out
add
push
aam
loope
cmpsb
add
cltd
cli
pop
mov
or
lret
xlat
scas
add
cmpsb
cmp
and
or
jns
dec
hlt
out
filds
fs
divl
sarl
mov
fwait
aad
outsl
dec
cmpsb
xchg
loopne
call
mov
inc
jmp
inc
std
adc
pusha
pop
pop
mov
jns
pop
ds
lds
out
inc
or
ret
push
sbb
shlb
std
aas
sahf
das
inc
jecxz
add
or
pop
jecxz
into
add
xchg
and
cmp
lea
notb
push
jnp
push
pusha
jo
pop
cmpsl
dec
mov
inc
js
mov
adc
pop
add
sarb
pop
adc
fnsave
add
pop
mov
push
inc
push
sub
lock
mov
call
sub
in
jl
pop
sbb
aas
jb
pop
xchg
mov
jl
es
js
xchg
pop
mov
adc
lea
dec
and
dec
add
or
imul
pushf
add
rorb
shlb
sbb
inc
jb
inc
pop
jnp
subl
pop
mov
push
xor
jo
inc
dec
sbb
das
and
loopne
dec
lcall
fs
movsl
push
push
xchg
sbb
outsl
sti
cmc
push
fildl
fwait
inc
mov
push
dec
fstl
or
adc
cli
add
xchg
sbb
shlb
out
push
push
add
int
cld
pop
dec
xchg
xchg
or
loopne
les
scas
test
dec
or
stos
sbb
jmp
push
test
pop
insl
icebp
adc
jge
loope
xchg
mov
cmp
sub
rolb
jbe
inc
sahf
cmp
mov
or
aas
pop
dec
adc
aad
jns
mov
xor
js
add
xchg
cmp
adc
stc
mov
xchg
dec
cmpsb
xor
jge
lock
sbbb
sbb
xor
jne
jg
inc
aad
adc
orb
sbb
lcall
addr16
pop
jno
outsb
daa
addb
sbb
add
or
dec
ds
xchg
add
stos
jbe
ret
nop
mov
popa
sub
mov
mov
sbb
pop
cld
test
jmp
or
mov
mov
and
or
out
add
adc
push
or
nop
mov
std
popa
push
sbb
loop
or
mov
test
in
lea
lcall
push
dec
add
sbb
ror
xchg
jl
push
xchg
inc
mov
inc
pop
test
test
add
pop
mov
jmp
out
gs
out
std
pop
inc
xchg
add
and
and
shlb
ret
shrb
ljmp
stos
int3
mov
shll
mov
sub
inc
rol
les
cmpsl
push
or
or
ds
les
lret
enter
push
call
cmp
pop
sub
and
xor
out
cmpsb
das
add
cmp
inc
xchg
ret
push
add
fistps
pcmpeqw
enter
xchg
push
inc
cld
cmp
mov
in
icebp
into
arpl
mov
or
pop
mov
xor
popl
in
push
jp
lcall
cli
adc
add
or
mov
fwait
xor
movsb
stc
cmpsl
pop
adc
frstor
or
xor
fdivs
les
mov
push
and
add
rorb
jp
inc
cmp
scas
mov
and
shlb
les
pusha
sbb
pop
mov
movsb
ret
xchg
jnp
mov
xchg
idivl
mov
pop
pop
mov
enter
push
outsl
leave
mov
ja
pop
xchg
ja
dec
enter
xlat
pop
and
pop
insb
cmpb
pop
je
jno
lcall
pop
sbb
mov
push
xchg
jns
and
xorl
xchg
lock
mov
and
sub
pop
popf
daa
or
shlb
scas
cld
je
lahf
lahf
pop
ret
faddp
mov
cli
rcl
imul
stos
dec
push
imul
push
arpl
mov
or
cmp
cmp
es
adc
ret
adc
lock
jmp
sti
lret
dec
xchg
push
and
cmp
popf
fwait
xlat
and
int
mov
xchg
push
dec
push
inc
mov
cmp
pop
or
mov
xorl
pop
or
mov
adc
ss
add
sarb
mov
adc
jno
data16
xchg
inc
sarb
push
pop
ljmp
mov
popa
cmpsl
scas
nop
cltd
sti
and
movsb
add
mov
mov
and
inc
and
inc
mov
add
int
mov
add
idivl
xchg
jns
jle
adc
jge
es
pop
in
add
mov
jmp
mov
adc
and
cmpsb
gs
adc
cmpl
xchg
jno
movsl
xchg
popf
add
test
jl
mov
xorb
stos
mov
jno
in
lds
inc
jmp
mov
es
rolb
pop
and
pop
ret
jne
dec
pop
pop
add
pusha
imul
imul
fwait
data16
adc
adc
aam
shrl
movsb
shlb
mov
into
js
shlb
push
and
inc
fwait
imul
call
pop
mov
cmp
outsl
adc
pop
sbb
loope
lret
fs
scas
jnp
mov
mov
movsb
push
adc
push
sub
scas
jp
sbb
ror
pop
pop
clc
xchg
jne
or
jnp
sub
inc
push
sbb
add
jmp
inc
xchg
bound
ror
or
es
pop
sub
pop
sub
sbb
mov
jns
outsl
rorb
cltd
or
push
rcrl
jbe
jno
jb
ror
int
cltd
xchg
loop
fists
sub
enter
push
lcall
fdivr
fucomip
dec
aam
and
xchg
dec
adcb
xor
ds
push
insb
dec
pushl
lret
mov
ds
push
mov
insl
arpl
xor
clc
fimull
andl
rolb
sbb
pusha
adc
shl
or
push
cs
js
into
sbb
nop
pop
or
add
in
gs
cmp
xlat
addr16
cmp
ljmp
mov
fdivrl
pushw
push
aad
aas
mov
cmp
div
std
in
adc
cmp
fwait
andb
rclb
test
adc
adc
sub
mov
into
orb
sbb
addb
and
pop
adc
stos
mov
adc
loopne
and
mov
pusha
or
rolb
test
hlt
add
add
xor
xor
inc
sub
push
and
xchg
add
lds
push
inc
adc
inc
in
sub
out
pop
in
push
xchg
inc
mov
adc
xchg
jno
mov
loopne
push
or
cmp
mov
cs
add
add
pushf
fbstp
sbb
cmp
loop
mov
xchg
inc
push
popa
or
mov
cltd
arpl
dec
inc
cmp
dec
repz
adc
sti
inc
jmp
push
xor
fstl
sub
adc
test
pop
add
adc
mov
cs
push
aam
pop
in
or
scas
and
lahf
mov
dec
nop
dec
lahf
lock
and
mov
ret
addr16
cmpsl
call
xchg
fsub
xor
adcl
adc
es
cmp
xchg
cmc
adc
aam
xor
sbbl
sub
or
icebp
leave
inc
jnp
ja
mov
pusha
inc
mov
cmc
mov
loopne
jbe
mov
push
cmp
hlt
lea
pop
insl
jle
or
sbb
xor
into
lods
mov
repz
jae
dec
loopne
add
dec
add
mov
jle
jbe
xchg
xchg
xor
xchg
adc
inc
inc
dec
xchg
pusha
mov
jbe
icebp
or
lcall
adc
loopne
cmp
shrb
gs
rclb
and
mov
popa
hlt
adcl
mov
add
sub
sbb
mov
out
mov
xor
js
sti
movsb
and
push
add
sti
mov
shll
xchg
mov
pushf
jmp
inc
mov
inc
add
pop
jge
push
mov
or
pop
push
inc
push
cmc
cmp
inc
arpl
xchg
add
adc
lret
cbtw
inc
enter
sti
loop
sub
or
mov
or
dec
inc
mov
jle
or
and
js
popa
mov
and
push
test
mov
repnz
or
sbb
add
imul
nop
jae
into
add
inc
loope
imul
add
mov
icebp
addl
pop
aam
pusha
ret
enter
sub
je
sub
ljmp
inc
push
fldenv
mov
xor
pushf
mov
xor
inc
mov
jecxz
cmp
orl
mov
rclb
stc
add
std
rorb
add
xor
es
xchg
inc
add
jno
xor
test
add
iret
and
jg
jbe
push
adc
ja
test
das
xchg
lret
repnz
pop
ss
ja
cmp
hlt
xchg
pop
enter
adc
cmc
loopne
mov
jl
daa
mov
or
int
mov
or
sbb
inc
movsb
arpl
or
xor
repnz
sbb
jle
xchg
ret
mov
lock
sub
push
or
mov
mov
imul
and
leave
inc
inc
and
jno
mov
lcall
add
cld
lret
inc
xchg
into
mov
mulb
in
add
repz
push
mov
sub
add
loope
xchg
lds
pushf
dec
cld
leave
mov
jae
or
or
popf
icebp
out
roll
ffree
stc
aas
sbb
dec
jg
mov
pushf
mov
xor
mov
ret
cmp
fnstenv
fisttpll
jp
call
xor
sub
imul
xchg
sbb
fnstenv
jae
shrb
jae
sarl
nop
or
or
sub
inc
jmp
cmp
cmp
aam
jns
in
sub
jecxz
lret
push
insl
in
push
mov
add
test
aad
dec
inc
shlb
mov
push
or
dec
inc
and
pop
or
addl
lea
pop
lock
sub
icebp
jae
sub
sub
loopne
adc
cli
adc
adc
cmp
adc
enter
lods
test
fsubrl
jl
adc
add
adc
orb
cmp
in
mov
jb
in
push
leave
in
cltd
mov
dec
and
loope
mov
rolb
cmp
jbe
mov
push
lods
xor
xchg
lahf
mov
mov
add
jl
cmp
gs
push
add
pop
xor
testl
into
mov
mov
mov
movsb
imul
nop
fstpl
pusha
iret
lcall
xchg
add
push
dec
push
sub
icebp
lahf
add
out
xchg
sub
push
jecxz
int
add
mov
cli
loope
inc
rcl
lea
and
fstpt
dec
cmp
mov
push
addl
imul
sbbl
test
aas
test
xchg
loope
loop
imul
aas
push
push
rclb
scas
faddp
fst
arpl
lea
mov
or
sahf
sub
addr16
pop
addr16
es
ds
sub
mov
mov
idivb
mov
adc
push
mov
xchg
jecxz
mov
xor
inc
lret
sbb
lcall
pop
icebp
mov
sbb
add
pop
int3
mov
aam
nop
cmp
icebp
inc
int3
dec
test
leave
or
imull
sbb
xor
push
push
adc
loop
inc
pop
dec
push
xchg
dec
dec
push
lret
pop
movsb
test
lods
lock
outsl
cmc
dec
pop
test
push
pop
faddp
pop
or
or
add
pop
out
or
negb
mov
mov
shrb
mov
xchg
nop
in
mov
fldl
insl
and
jbe
fsubrl
lds
das
sbb
or
cmp
sub
test
mov
adc
arpl
int3
test
pop
or
adc
or
pop
sub
shll
adc
out
mov
test
push
adc
mov
movsb
mov
push
adc
addr16
inc
nop
adc
cs
dec
stos
pop
mov
lret
xorb
lahf
loope
sub
sbb
loop
inc
jmp
add
sub
sub
sahf
and
and
push
jl
inc
mov
dec
xchg
test
add
int3
mov
adc
cmpsb
and
cmpsl
cmp
cmpsl
loope
sub
adcl
and
xchg
dec
call
cmpsl
jno
mov
pushf
outsb
shl
dec
mov
notl
aaa
dec
adc
icebp
jb
push
mov
jle
inc
mov
and
and
add
jne
jae
jne
rolb
call
or
mov
sub
xchg
les
push
cmp
jl
and
xor
rorb
or
mov
jecxz
sahf
nop
leave
jl
xor
and
dec
jmp
pop
dec
add
xor
and
mov
and
add
mov
mov
cli
pusha
gs
mov
cltd
mov
inc
js
insl
andb
adc
movsb
mov
adc
dec
mov
inc
mov
pop
imul
fs
add
ljmp
cmp
mov
sar
pop
jg
popa
mov
inc
jne
setns
inc
cmc
and
sub
mov
nop
icebp
enter
add
loop
cmp
clc
dec
ss
andb
aam
ret
mov
repz
ljmp
iret
stc
pop
xchg
frstor
push
jns
xchg
sbb
xchg
mov
into
push
sub
test
mov
adc
mov
imul
pop
and
test
stc
and
nop
pop
insl
pop
inc
mov
fs
jle
dec
imul
out
xchg
sub
add
shlb
inc
xor
push
adc
fdivrs
mov
cmp
ds
fimuls
cs
push
sub
mov
into
insb
and
cmp
mov
or
rolb
or
inc
in
in
inc
dec
movsl
shrl
stos
sbbl
mov
add
aas
dec
cltd
xorl
mov
adc
xchg
adc
mov
sub
mov
test
add
in
outsb
jnp
movsl
aas
mov
add
and
lea
and
fwait
aam
mov
xchg
sbb
fwait
adc
sub
push
lods
xor
orl
push
push
adc
into
iret
adc
or
mov
add
and
cltd
aad
pop
into
dec
or
popa
inc
notb
bnd
or
xchg
jge
sub
dec
cmpsb
int3
push
sbb
imul
icebp
pop
push
or
mov
fcoml
xor
ret
mov
xchg
and
fwait
mov
mov
aad
mov
mov
inc
pop
ja
add
popa
and
cmpsb
xchg
add
enter
in
mov
cmpl
ss
and
or
fwait
sbb
mov
ret
push
sahf
sub
xchg
xchg
adc
inc
dec
ljmp
mov
fldt
mov
dec
rcll
clc
lret
inc
stc
cmc
dec
enter
jne
das
ja
pop
mov
lods
dec
dec
pop
push
stc
mov
mov
sbb
inc
jbe
icebp
ss
enter
xorl
inc
xchg
lock
or
cmp
shrb
push
test
or
fiadds
xor
sub
jle
cwtl
arpl
xchg
mov
ret
pushf
and
sbb
adc
popf
imul
subl
inc
dec
xchg
test
outsl
pop
aaa
cmpsl
scas
data16
movsb
mov
adc
sti
ret
lds
mov
xor
sbb
mov
xor
push
sbb
in
mov
jnp
sbb
in
xor
out
jge
xchg
sbbl
add
xor
add
mov
xlat
fldcw
call
flds
and
jp
pop
inc
jmp
cs
ja
test
sbb
jns
ljmp
dec
or
push
jmp
xchg
push
outsb
and
inc
pusha
rcll
loop
pop
push
sbb
sub
enter
notl
adc
pop
movsl
xlat
mov
jb
pop
inc
mov
adc
icebp
jo
mov
ljmp
rcr
xchg
call
pushf
pop
shr
les
add
and
pop
push
pop
aad
aas
iret
lods
push
mov
sub
fnsave
ds
loop
cmp
cmp
mov
or
test
xchg
inc
les
pop
sub
and
shlb
mov
xchg
push
jecxz
shr
pop
cmc
iret
mov
test
and
mov
inc
and
stos
nop
loopne
or
lds
mov
xlat
inc
repnz
lods
test
pop
repnz
inc
dec
adc
dec
negb
add
ja
inc
and
push
pop
cmpsl
xchg
xchg
jno
addr16
fimuls
and
imul
cmp
les
std
push
cmp
push
pop
adc
pop
xchg
push
push
rolb
mov
jno
ljmp
jp
cmp
sbb
mov
and
mov
test
push
ret
movsl
cmp
gs
sbb
int
sbb
add
xor
rorb
jne
stc
movl
cmpsb
mov
push
pop
jbe
adc
push
or
dec
or
add
inc
mov
pop
or
and
cwtl
jp
sarl
int3
lods
dec
pop
sbb
sub
loop
dec
pop
imul
cmp
adc
inc
and
and
rcrb
mov
and
cmpsl
pop
bound
adc
sbb
pop
scas
fs
test
xor
jle
push
in
fsubrl
nop
xchg
xchg
jge
dec
cld
ret
rol
push
pusha
lods
nop
shll
ret
or
loop
sbb
mov
loopne
push
xlat
cmp
call
xchg
fsubrs
movsl
mov
int
add
pusha
xlat
sub
xchg
iret
xchg
imul
andb
rcr
nop
repz
push
mov
lret
and
mov
and
add
pop
jl
popa
sarl
dec
add
sub
lahf
sbb
mov
push
rorb
repz
out
les
push
or
cmp
mov
mov
test
jle
add
jmp
sbb
inc
lret
push
sbb
adc
pop
mov
lods
mov
push
push
push
jno
xor
ret
mul
sbb
sub
ret
or
subb
or
pusha
cmp
fiadds
bound
stos
inc
cmp
mov
inc
ss
sarl
jns
test
pop
lret
jmp
or
lock
jmp
jecxz
clc
loopne
xchg
pop
xchg
dec
push
jp
add
leave
mov
jg
in
cmpsb
jbe
push
lcall
inc
in
mov
jp
dec
sarl
pop
ljmp
shll
adcb
xchg
ljmp
push
scas
push
or
and
dec
add
sub
jle
scas
and
lock
rorb
movsl
add
add
lret
adc
int
in
dec
and
ret
jnp
push
in
aam
inc
xchg
push
hlt
int3
push
scas
mov
xor
mov
cmp
dec
icebp
sub
push
and
pop
push
adc
popa
call
les
xchg
lahf
dec
shll
pop
cmp
jns
mov
andl
adc
jo
push
cwtl
es
inc
loope
mov
push
push
xchg
adc
and
jle
lret
ds
ret
add
add
or
push
add
fistpll
adc
jl
push
iret
xchg
std
jne
jbe
xor
test
ss
js
cmp
dec
adc
xchg
pop
call
sbb
xor
xchg
add
jge
sbb
int
lds
jle
push
repz
in
ljmp
add
xor
xchg
dec
and
daa
jl
ds
bound
mov
dec
push
mov
mov
jns
outsb
inc
mov
shll
arpl
push
cwtl
or
mov
adc
inc
inc
inc
mov
pop
iret
mov
xchg
lods
sub
jl
push
popa
mov
jp
aad
push
add
mov
lods
lock
loopne
repz
xchg
mov
jne
jge
inc
movl
sub
inc
xchg
adc
mov
mov
divl
and
xor
sbb
push
jl
sbb
call
push
cld
adc
sbb
and
push
mov
push
sub
sbb
lds
js
xor
insl
repnz
sub
mov
sbb
push
jle
inc
into
sarl
stos
mov
repz
shlb
inc
jmp
out
pop
xor
sahf
add
cmc
push
sub
rclb
inc
addb
iret
test
or
enter
out
push
or
and
xchg
add
push
xor
mov
aas
jo
aas
or
cmp
xchg
leave
shlb
leave
inc
movsb
in
add
add
add
les
xchg
or
jle
shrl
pop
stos
inc
or
andl
repnz
shrl
dec
movsb
lock
rorb
cmp
sti
lret
sub
jno
push
jle
hlt
daa
mov
xchg
lock
lea
dec
adc
and
repnz
aas
test
jmp
cmp
ljmp
aad
or
cmp
movsb
repz
inc
cmp
or
jns
and
push
xchg
add
pop
aad
mov
and
lods
sbb
loope
add
sub
cmp
gs
sbb
mov
test
test
idiv
pop
mov
enter
dec
sub
sbb
test
jb
and
or
xor
enter
and
rcrb
sahf
add
and
push
xchg
js
aas
xor
adc
and
and
sub
ret
jge
dec
or
aad
int3
or
mov
call
out
mov
jp
movsl
pop
xchg
rcl
add
adc
bound
or
jno
enter
adc
sbb
daa
sbb
mov
loop
adc
pop
adc
leave
lea
sub
test
jne
add
and
fisubl
dec
mov
and
mov
sub
test
test
fistl
sbb
mov
xchg
or
iret
cltd
and
xor
outsl
and
adcb
iret
pop
add
jp
sbb
dec
pop
sub
sbb
add
push
popf
in
or
or
cmp
rorb
mov
pushf
dec
insb
mov
sahf
mul
add
lcall
push
sarl
sbb
push
push
nop
sbbl
std
xor
mov
fadds
or
sub
cld
xchg
add
popf
inc
loopne
jo
js
and
pop
mov
or
and
push
push
orb
xor
sbb
shrl
jns
xor
add
jo
jp
adc
mov
mov
mov
xchg
push
mov
add
enter
decl
inc
lcall
aas
stos
mov
cmp
or
addr16
pop
sub
adc
xor
or
out
leave
add
or
ficomps
filds
and
leave
push
mov
push
mov
nop
mov
leave
mov
scas
imul
lret
jle
imul
repz
mov
adc
and
pop
mov
inc
das
lods
daa
mov
lret
fwait
popf
idivl
push
stos
lea
jbe
or
in
mov
pop
sarb
xchg
jns
int3
jmp
adc
push
les
filds
fisttpll
lret
mov
mov
dec
mov
dec
jge
pop
int
test
adc
pop
inc
cmp
nop
sub
xor
ror
jmp
mov
in
and
in
test
cmp
std
dec
or
push
push
jl
or
gs
int3
add
inc
push
inc
int
adc
push
pop
call
pop
fs
cmp
mov
pop
test
loop
mov
insb
xor
ret
adc
or
add
fcomps
add
mov
sub
sahf
push
popa
pop
xor
add
cmc
popf
int3
daa
mov
lods
adc
imul
mov
or
jg
jle
and
arpl
mov
mov
mov
push
andb
test
insb
orb
dec
outsb
inc
fdivrs
iret
and
das
outsb
jo
in
sar
imul
cmp
and
cmp
fiaddl
repz
enter
popa
cs
ret
adc
mov
or
add
or
sahf
and
loope
cmp
add
push
enter
bswap
mov
cmp
sahf
pop
js
jp
xchg
lods
sub
mov
arpl
inc
pop
jle
inc
nop
cwtl
call
and
xor
sbb
shll
pop
scas
ljmp
mov
mov
mov
inc
push
test
or
test
mov
or
or
dec
arpl
outsl
iret
pop
cmp
inc
je
pushf
mov
or
lret
out
xchg
xor
leave
pop
sub
sub
cmc
xchg
or
cmp
aaa
dec
int3
pop
xor
xor
or
fsubr
cs
inc
and
push
or
inc
xchg
mov
cmp
sbb
adc
pop
pop
sub
out
cmp
push
pusha
dec
cli
jo
push
inc
bound
fimuls
les
ljmp
movsl
or
js
adc
out
pusha
mov
sub
ret
dec
aas
and
pop
push
or
dec
mov
sub
mov
mov
mov
adcb
jecxz
or
jo
sub
sbb
idivl
mov
jge
mov
add
scas
das
or
aam
aam
out
and
sbb
sbb
xor
add
leave
cld
sbb
ds
out
mov
xchg
jge
data16
xor
xchg
aad
cmp
or
xorl
sbb
out
or
adc
nop
movsl
cmp
add
enter
inc
out
arpl
fnstenv
test
dec
add
jp
sti
in
mov
inc
inc
iret
pusha
js
inc
and
ficoml
out
cmp
jae
pop
cs
adc
push
inc
push
jl
icebp
xor
cltd
out
adc
shl
loope
fists
sub
pop
out
inc
cmp
cmc
ret
push
rolb
inc
dec
les
nop
cld
jge
or
fnstenv
mov
push
jp
cmc
pop
std
nop
mov
add
push
sarl
jo
dec
addl
outsl
data16
mov
es
xor
and
mov
mov
cld
sbb
jle
test
and
stos
inc
loope
cmpsl
in
mov
std
mov
add
adc
jge
bound
popa
mov
xchg
sarb
xor
aaa
xor
outsb
add
or
xchg
mov
push
jbe
sub
shll
xorb
push
mov
cmp
xor
mov
xorl
and
je
aam
pop
out
adc
daa
cmp
and
outsb
mov
pop
mov
rorb
adcl
xchg
xchg
rorl
or
inc
cmp
mov
jae
popa
test
xor
inc
test
jmp
sbb
shll
xchg
pop
fcmovnu
lcall
or
xchg
sub
jnp
mov
xor
scas
shrl
int
std
sbb
inc
mov
or
fs
push
in
add
inc
push
fldenv
fdivs
mov
sbb
fwait
dec
rcr
add
repz
shr
sbb
shlb
enter
cmovno
fsubrl
add
push
cmp
arpl
xchg
inc
xor
aad
scas
xchg
ret
push
adc
pop
fstl
xor
shlb
adc
inc
loope
inc
addb
imul
repz
jnp
adc
aam
and
out
mov
enter
stos
fcomps
xchg
sub
dec
mov
dec
cmp
movsb
cmp
jbe
cli
stos
call
inc
inc
outsb
orb
mov
pop
arpl
pop
push
inc
mov
jne
and
inc
popl
or
pop
mov
in
std
xchg
xsha256
cmpsb
push
push
test
jne
ljmp
les
mov
fwait
inc
push
and
or
push
jmp
fwait
mov
lahf
pusha
aad
jns
sub
leave
and
movsl
adc
adc
or
mov
jb
or
sub
mov
push
mov
or
xor
rorb
sbb
jbe
std
mov
fistps
add
nop
lcall
and
cmp
imul
data16
or
rorb
ret
sbb
in
cmp
or
add
jle
loopne
ret
adc
sub
inc
movsl
push
xchg
push
inc
and
decb
movsl
es
jae
xchg
cmp
test
push
sub
cmp
add
notl
sbb
jecxz
shrl
jmp
ds
in
xchg
scas
add
and
cmp
pop
rclb
int3
mov
xor
jne
ds
adc
push
xchg
pop
test
xchg
push
mov
or
repnz
fld
push
mov
mov
add
add
inc
add
aad
push
mov
pushf
fildl
adc
xchg
shl
frstor
insl
adc
lods
mov
push
adc
sbb
xchg
xchg
push
mov
pop
mov
scas
sub
mov
pop
xrelease
and
xchg
mov
sbb
mov
mov
nop
pop
ja
sub
inc
loope,pn
mov
test
mov
insb
rolb
xchg
add
into
xchg
inc
xchg
xor
sbb
sbb
jnp
repz
movsl
or
std
mov
push
gs
add
inc
cmp
jbe,pt
sub
xor
push
punpckhwd
mov
push
xchg
in
insl
push
data16
in
jno
or
out
add
into
jbe
ljmp
sub
mov
add
addb
push
testl
pop
pop
jg
ret
inc
int3
into
js
jno
add
pop
mov
sbb
std
xchg
enter
xchg
jno
cmp
or
adc
inc
lea
fadd
ret
cmpsb
orb
scas
orb
rolb
int3
arpl
pop
adcb
mov
inc
sub
das
xor
lea
or
cmpb
xchg
add
cwtl
scas
mov
pushf
mov
add
or
inc
sahf
add
dec
mov
push
push
xchg
and
inc
test
stos
loopne
std
mov
xor
pop
cmp
add
out
pushf
in
dec
or
dec
mov
fsts
cmpsb
xorb
add
push
sbb
inc
fldenv
lds
ret
inc
sbb
mov
push
or
pop
scas
leave
mov
jp
jg
cmc
into
mov
push
jbe
ss
nop
out
adc
nop
push
cs
pushf
pop
jl
call
dec
jecxz
mov
enter
add
fs
push
sbb
xlat
xchg
add
fisttpll
mov
popf
jl
and
adc
sbb
call
fnstcw
push
xchg
pop
or
repz
addr16
xchg
push
nop
cmp
and
sbb
andl
mov
popa
in
mov
or
inc
xlat
js
mov
pushf
sti
pop
sub
mov
push
lret
push
mov
repnz
dec
sub
jne
adc
fdivs
and
sbb
xchg
aam
or
sub
subl
pop
cltd
xor
add
ret
js
sub
in
cmc
cmp
xchg
mov
icebp
xor
push
dec
hlt
or
mov
push
notb
jno
mov
mov
mov
jle
mov
movl
fsubs
test
push
push
repz
inc
enter
adc
inc
cltd
mov
inc
fcompl
loope
adc
xor
jmp
mov
add
or
sbb
nop
sub
add
incb
sbb
mov
mov
and
pop
push
cmc
popf
mov
notl
xor
faddp
mov
mov
inc
adc
dec
or
loope
stos
ficompl
push
mov
rcrb
inc
scas
mov
add
or
push
add
into
fs
mov
add
push
mov
orb
ret
testb
sbb
xchg
jne
rolb
movsl
shr
idivl
dec
or
ljmp
shlb
test
lahf
and
rclb
hlt
adc
adc
fidivl
add
sahf
mov
pop
ja
push
jbe
dec
dec
lcall
rcll
pop
xbegin
xor
cltd
xchg
cmpsl
scas
fisttps
mov
aas
repnz
aam
lret
andb
imul
dec
mov
push
sub
dec
sbb
mov
xor
jmp
inc
mov
jo
pusha
mov
xlat
xorb
adc
inc
ss
loop
and
push
or
mov
push
dec
sbb
inc
mov
or
fisubrs
pop
adc
push
cwtl
jno
int3
inc
xor
adc
dec
and
scas
pop
repnz
cmpsl
add
loop
ljmp
dec
pop
cmp
cmp
addr16
call
repz
jmp
cmp
fnstenv
mov
adc
push
cmp
cmpsb
ficompl
mov
stos
sub
push
cmp
pop
add
test
xor
ja,pt
fbstp
orl
adc
push
cmp
lahf
push
nop
mov
sbbb
inc
stos
push
sbbl
lods
add
jg
sbb
mov
aam
push
shrl
lock
jne
cmpsb
mov
push
mov
mov
adcb
in
mov
hlt
fmull
roll
pop
daa
pop
ljmp
icebp
std
xor
push
leave
imul
push
jnp
in
repz
xor
mov
clc
movsb
cs
and
jmp
push
mov
sbb
std
push
inc
inc
mov
inc
cmc
jb
test
sbb
inc
pop
fisttpll
iret
xchg
dec
and
stc
test
add
mov
fs
pop
scas
sub
sbbb
into
mov
mov
mov
push
daa
je
pop
and
ja,pt
and
int
mov
inc
sub
ret
sbb
mov
test
jb
pmaxub
xor
mov
and
mov
inc
mov
xchg
push
mov
xchg
cmp
nop
and
mov
imulb
fcompl
pop
aam
enter
jmp
arpl
std
jns
movsb
lock
sub
dec
sub
add
hlt
pop
and
in
rep
mov
pop
sub
push
and
test
mov
mov
pop
sub
int
cli
push
and
into
sub
daa
adc
xor
cs
cmp
dec
inc
pop
ret
out
sub
mov
mov
lods
pop
jp
orb
sub
push
xchg
xor
cmp
dec
subl
mov
lea
sub
mov
xchg
out
dec
add
repnz
in
and
out
popa
lret
imul
lahf
sbb
dec
faddl
jp
ljmp
pop
sti
mov
pop
lds
inc
push
mov
add
xchg
jl
int
arpl
lds
pushf
mov
sbb
mov
sti
lods
adcb
stos
sahf
ljmp
shrl
pushf
and
mov
mov
ds
sbb
lret
ds
stos
inc
ja
clc
shrl
inc
into
lahf
lahf
hlt
sbb
mov
jne
call
xor
je
mov
or
in
inc
jb
movsb
icebp
inc
rolb
push
xchg
push
add
pushf
repz
mov
jp
addl
mov
dec
std
mov
jmp
dec
repz
cmpsl
jp
xchg
add
shlb
cld
shrl
das
imul
push
cli
sub
adc
loopne
mov
mov
mov
xchg
movsl
rorb
cmp
or
sahf
inc
and
inc
adc
in
and
add
movsl
pusha
pop
ret
fmulp
lcall
enter
mov
mov
push
add
pop
sub
scas
cmc
sbb
fs
pop
in
std
les
xor
mov
adc
jg
jno
les
out
movsl
int
les
stc
pop
mov
xchg
xchg
cmpsl
leave
push
pop
out
jge
pop
xchg
sbb
push
or
repz
pop
cmpb
rorb
das
jno
adc
lods
sbb
push
push
mov
enter
jne
push
cwtl
clc
ds
adc
mov
stc
mov
adc
mov
jne
xor
jb
sbb
sub
pop
idivl
sbb
std
aam
sahf
jg
out
push
or
dec
xor
add
popa
imul
dec
je
push
adc
jnp
push
mov
pop
popf
repz
stc
mov
mov
and
adc
sbbb
or
in
iret
push
pop
and
scas
or
lock
inc
scas
adc
dec
mov
addb
jb
push
xor
test
cli
arpl
and
stos
push
or
mov
es
lcall
mov
xchg
jmp
push
lret
outsl
mov
sub
cs
loope
mov
or
or
mov
mov
mov
roll
dec
sub
xor
jns
push
shlb
nop
jb
add
cmp
cmp
repz
pop
mov
pop
scas
jl
add
mov
lods
loopne
stos
ret
mov
or
dec
out
int3
pushf
popa
je
mov
bound
je
or
or
ficomps
push
or
jno
mov
ds
clc
jl
in
mov
mov
pop
shrb
mov
aas
popf
aas
xchg
jecxz
push
mov
push
or
dec
mov
mov
addr16
test
xor
inc
popf
or
jge
xorb
js
mov
out
sbb
xchg
dec
mov
movsl
scas
dec
les
and
mov
xchg
sub
cvtps2pd
and
and
sbb
popf
lods
mov
icebp
ret
and
or
and
ret
dec
push
daa
jae
shrb
test
jae
scas
cs
ret
push
push
xchg
repz
mov
cltd
xchg
aas
pushf
or
mov
shlb
pop
inc
xor
dec
test
popl
adc
adcl
clc
cmp
loope
inc
imul
daa
sbb
leave
lock
xchg
mov
add
jle
jmp
jg
and
and
jb
movsl
mov
inc
repz
xchg
add
and
add
test
mov
notl
incb
add
adc
lock
xor
lods
in
cwtl
sub
push
mov
insl
xor
or
pop
push
xchg
js
add
test
frstor
movl
fmul
pop
sub
sub
sub
jb
scas
iret
cltd
ret
imul
mov
enter
sbb
test
cmp
adc
xchg
or
and
jmp
int
cmpsl
add
stos
sar
adc
jmp
mov
push
xchg
inc
sub
fdivrs
inc
idivb
dec
scas
outsl
lods
mov
fildll
cmp
ret
cltd
sbb
js
nop
imul
mov
sub
scas
cld
jle
enter
inc
sbb
add
dec
fsts
inc
arpl
inc
adc
ss
pop
stc
and
push
dec
ds
adc
lcall
sbb
das
jmp
pop
cmp
gs
xchg
push
popf
xor
out
xchg
xlat
sub
inc
add
sbb
or
xchg
movb
aam
sahf
xchg
lea
into
jle
adc
adc
xor
outsl
rep
addb
and
mov
ljmp
fimull
js
jae
xchg
scas
mov
lahf
cld
cltd
icebp
jno
popf
inc
jmp
lea
jecxz
push
inc
dec
add
push
notb
test
rorb
test
movsb
int
add
sub
and
and
leave
push
and
pop
and
adc
out
fcmovnbe
mov
outsl
les
and
pop
cwtl
pusha
sub
xchg
pop
dec
pushf
fldl
lds
aam
fistps
add
or
faddl
dec
jo
jno
push
cs
xor
cmc
or
mov
mov
adc
ja
xchg
add
inc
ret
mov
inc
cmp
hlt
sahf
loopne
xlat
mov
scas
and
mov
push
bound
xchg
jmp
push
xchg
jnp
in
ret
pop
lret
pop
sbb
dec
sub
int3
lea
cmp
cmp
add
std
jae
or
daa
movsb
loopne
rdtsc
icebp
lret
xchg
cmc
or
push
pop
pop
jp
repnz
mov
iret
push
add
sbb
or
xchg
pop
lock
push
dec
and
xchg
and
mov
jno
inc
cwtl
inc
and
das
insb
fs
idivb
xor
pop
add
test
mov
mov
insl
or
pop
ret
push
dec
test
rcll
jg
inc
in
and
inc
jb
std
jae
cwtl
and
mov
popf
mov
lds
pusha
ljmp
xchg
mov
and
sub
mov
in
sbb
inc
add
xchg
mov
add
xor
shlb
xor
test
adc
push
test
xor
imul
jo
jbe
lds
mov
adc
enter
fcomps
jle
push
cltd
and
and
xchg
push
shll
stc
mov
fwait
push
inc
add
xchg
mov
xchg
test
dec
popf
jl
lds
or
enter
fneni(8087
jle
xor
out
pop
jbe
or
mov
push
jb
mov
adc
insb
mov
pop
mov
sub
loope
fisttpl
sub
sbbb
shll
mov
sub
pop
outsl
xor
hlt
dec
shrb
sbb
in
xor
xor
or
jmp
stos
std
add
pop
test
xchg
sahf
dec
add
jmp
cmp
loope
insl
stc
stos
pop
pop
pop
ljmp
imul
adc
imul
loope
mov
pop
sub
mov
into
sbb
aam
frstor
pusha
sarb
pop
sub
mov
aad
rclb
pop
mov
rolb
mov
mov
sbb
push
push
cmpsb
arpl
xchg
fs
outsb
test
and
inc
inc
fistl
inc
lock
or
sti
mov
push
inc
ret
into
outsb
bound
xchg
movsl
or
adc
jb
xchg
sti
iret
hlt
das
loop
fs
and
movsl
jbe
xlat
xlat
shr
mov
cmpsb
inc
xchg
dec
lret
xchg
cmp
mov
mov
dec
bound
mov
loope
outsl
mov
xchg
push
lods
in
and
dec
ret
int3
fdivs
scas
lods
push
rcrl
cmpsl
hlt
lds
lock
pop
mov
or
pop
mov
pop
jl
imul
into
dec
jl
test
push
inc
aam
test
push
int
add
repz
dec
xchg
mov
lock
pop
adcl
mov
mov
inc
jmp
je
mov
cmp
inc
adc
mov
mov
push
shrb
cmp
pop
inc
dec
jnp
into
stc
roll
mov
sub
adc
adc
fs
pop
cltd
ret
mov
test
xor
icebp
rcrb
inc
sbb
inc
add
and
pop
add
or
imul
xor
test
or
cmp
pusha
jmp
andb
sbb
mov
inc
cmc
jne
adc
sbb
out
push
or
xor
jg
dec
sbb
out
fistl
int3
xor
ds
and
pop
cmp
scas
jg
and
add
xor
mov
dec
push
addl
jecxz
jns
ds
xchg
dec
mov
adc
clc
xor
jle
nop
or
mov
inc
sti
xrelease
icebp
inc
idivl
je
ljmp
sysexit
in
xor
xor
push
and
lahf
push
add
rcr
fsubrp
jl
dec
mov
addr16
and
adc
xor
or
add
ds
pop
mov
xor
or
movl
shl
jo
inc
cld
mov
shrl
cmp
in
lret
inc
sahf
mov
inc
and
adc
imul
jl
push
jecxz
ror
xchg
mov
cmp
add
xchg
jae
sub
jl
fsubrl
cmpl
mov
movsl
or
dec
mov
aas
stos
inc
bound
test
mov
sub
add
sub
xchg
inc
cmp
cmp
stc
int
xchg
loop
sbb
pop
out
adc
cwtl
imull
pop
sub
cwtl
out
inc
icebp
cmc
xor
frstor
dec
and
add
jno
jnp
in
bound
jecxz
pop
pop
leave
jns
sbb
bound
pop
mov
pop
mulb
cmp
test
test
add
mov
in
fwait
xchg
arpl
mov
cmpsl
push
mov
push
insb
pop
sbb
cmp
sub
xchg
sub
js
int3
cld
leave
push
xor
or
adc
filds
ss
inc
push
ss
mov
jmp
out
sbbb
adc
call
adc
ljmp
aaa
jmp
rolb
mov
mov
in
dec
mov
mov
adc
inc
add
sub
xchg
pop
inc
mov
divl
and
mov
cwtl
fisubrs
mov
nop
xchg
adcb
xchg
push
add
sti
pop
or
dec
or
hlt
add
jno
jnp
cmp
pusha
mov
je
mov
inc
xchg
jnp
test
insl
add
xchg
outsl
inc
insl
cmpsl
pop
add
xchg
jae
jns
or
push
pusha
hlt
repz
cli
xchg
inc
pop
push
aam
ss
push
aam
mov
jno
sbb
pop
push
mov
adc
mov
push
pop
add
addb
add
or
push
hlt
mov
sahf
fnstenv
inc
xchg
push
cmpsl
push
jmp
scas
sub
push
jp
mov
sub
mov
lret
mov
call
sbb
jle
dec
leave
xorb
loope
xchg
call
dec
mov
in
gs
faddl
dec
xor
adc
mov
and
xor
cmpsb
test
jl
sbb
pushf
cwtl
jecxz
xchg
cmp
into
test
outsb
adc
loope
pop
add
adc
cmp
push
jbe
rorb
cmpsb
outsl
sbb
aas
stos
or
cmp
int3
test
fwait
and
das
call
mov
inc
cmp
xchg
pop
mov
mov
orl
rcrl
mov
mov
iret
fldenv
es
mov
add
mov
int
insb
fwait
xor
pop
jno
bound
inc
int3
test
sbb
mov
lock
shll
push
cmp
jne
cwtl
clc
cs
push
incl
inc
or
xlat
xor
cmp
mov
shl
data16
mov
adc
in
test
xor
jbe
std
int
xor
pop
adc
xchg
xor
in
or
dec
jns
jb
ljmp
mov
adc
push
push
mov
ss
cld
es
pusha
push
loope
pop
ja
dec
dec
sub
vphadduwd
out
sbbl
inc
bound
aas
xlat
mov
add
in
outsb
lret
inc
pop
out
ds
addr16
adc
in
aam
js
mov
shlb
push
xor
xchg
push
scas
dec
xchg
stos
cltd
lods
loop
cmpsb
mov
sti
pop
cmp
mov
sbb
les
push
inc
fcoml
adc
or
inc
mov
or
pop
xchg
jge
and
xchg
jge
int
lea
mov
jle
repnz
sbb
lret
sub
rorl
jno
jecxz
pop
int3
dec
movsl
aas
xorb
test
mov
jge
mov
in
arpl
sub
cmc
dec
cmc
cli
out
pop
mov
push
push
or
idivl
xor
sbb
clc
add
les
inc
jb
adc
subb
xor
imul
adc
sub
dec
push
mov
cmp
inc
int
add
adc
dec
bound
xchg
inc
push
fdivrl
add
repz
cmp
pop
jb
mov
setno
push
dec
andl
test
cwtl
lods
sbb
mov
es
mov
mov
mov
enter
or
ret
sbb
mov
outsl
dec
push
add
pop
cli
or
push
xchg
mov
es
stc
jmp
jbe
jecxz
xor
pop
push
and
fisubrl
shll
daa
add
loopne
dec
jae
scas
push
enter
and
mov
or
xor
adc
scas
jp
int3
mov
mov
aaa
jmp
insb
gs
inc
mov
popa
insb
inc
pop
das
bound
andb
repnz
inc
andb
add
dec
xchg
ret
or
sub
cmp
push
movsb
push
je
iret
dec
rorl
cmpsl
js
pushf
xchg
pop
mov
dec
sub
and
scas
ja
mov
jl
push
sbb
mov
shll
je
and
and
daa
xor
stc
and
dec
mov
nop
jle
fisttpll
ljmp
adc
cmp
sub
add
pop
cmp
and
push
out
je
xor
mov
or
stos
lods
test
scas
cmp
cld
in
sub
and
cltd
jle
cmp
mov
pop
pusha
std
cmp
rolb
mov
pop
or
adc
cmp
and
sbb
jno
sbb
inc
loopne
test
pop
or
test
mov
test
ss
fildl
aad
fdivrl
mov
add
fidivs
add
cld
push
push
push
cltd
mov
inc
loop
jl
inc
adc
push
cmc
mov
call
loope
inc
jmp
cs
or
inc
xchg
adc
adc
lahf
sahf
out
xor
jae
push
inc
jno
xor
add
cmp
inc
fimull
or
lock
sbb
mov
pop
lds
mov
mov
add
cmp
or
mov
cmp
and
fwait
adc
and
cmp
inc
test
push
mov
data16
rcr
add
push
mov
inc
mov
jecxz
inc
es
sarl
cmpsb
scas
mov
dec
ss
out
ljmp
and
imull
flds
inc
or
xlat
and
inc
test
int3
dec
adc
rorl
call
and
xchg
rcrl
push
push
cwtl
ds
lahf
inc
into
adcl
jmp
js
add
sti
pop
pop
cltd
or
dec
add
cmpsb
xchg
sti
dec
sub
xchg
nop
call
enter
inc
cltd
and
dec
or
bound
int3
aad
pop
imul
add
nop
cs
loopne
or
xor
mov
mov
xchg
add
jnp
popa
pop
sub
insb
xor
adc
cmp
outsl
xchg
and
sbb
jecxz
js
sti
sbb
test
sbb
mov
bound
cmp
pop
inc
fmuls
pop
loope
cmpsl
lea
inc
shll
mov
lods
and
sub
jmp
mov
mov
xsave
cltd
mov
xor
shl
lcall
xchg
dec
nop
dec
push
pop
sub
cmp
cmp
jecxz
insb
jp
lahf
inc
adc
loop
push
or
aas
fldenv
xor
inc
lret
pop
rorb
jb
sub
mov
jno
xchg
mov
les
adc
ss
xchg
pop
aam
mov
dec
lahf
shll
arpl
pusha
icebp
jecxz
movsb
outsl
xor
xchg
rcll
jle
xor
mov
xor
pusha
mov
mov
rsm
pop
inc
std
pop
movsl
cmc
lret
mov
jo
mov
add
dec
fsubl
int3
movsl
adc
add
les
ljmp
or
and
adc
add
loopne
pop
jmp
fdivr
cwtl
lahf
cs
push
and
js
data16
das
pop
insb
add
cmp
shrl
dec
imul
inc
adc
mov
dec
imul
repz
push
and
cltd
mov
nop
in
ret
cmp
mov
mov
lret
adc
add
and
cmp
sbb
or
cmc
xlat
or
jbe
sti
pop
or
pusha
inc
enter
repnz
mov
xchg
sub
jl
imul
push
and
fdivl
jg
shrb
and
mov
add
out
inc
add
jge
pop
cmpsl
aaa
iret
shlb
and
jnp
mov
or
or
dec
xorb
das
addl
xlat
pushf
mov
data16
and
les
and
pop
cmp
xor
adcl
mov
shl
jmp
faddl
add
push
or
ret
or
push
sub
mov
data16
xchg
xchg
mov
movb
bound
and
mov
shll
fisttpl
mov
mov
arpl
mov
test
sub
and
sbb
and
inc
fidivs
inc
roll
sbb
lea
sarb
sbb
mov
aaa
push
cmpb
sbb
sarl
lahf
imul
les
cmp
sbb
mov
push
outsl
inc
push
negl
adc
push
pop
call
loope
cmp
add
mov
and
rorl
mov
and
pop
scas
into
inc
pop
cmp
inc
jno
xor
push
mov
add
fbstp
cmp
gs
or
xchg
paddw
js
inc
mov
rolb
mov
imul
clc
sub
pop
or
jl
pop
cmp
xor
bound
fsubrl
xchg
mov
add
nop
jno
xor
xchg
xchg
rorl
mov
movsb
add
in
in
in
jmp
cmp
or
les
mov
add
and
loop
out
or
das
orl
lea
daa
add
test
add
in
pop
push
movsl
xor
inc
add
outsb
movsb
repz
adc
test
nop
call
push
cld
sub
leave
shll
adc
ficompl
mov
cmp
push
ja
gs
clc
push
and
pop
dec
scas
cmp
loop
cmp
push
or
les
scas
xchg
sbb
jmp
cltd
or
dec
call
sar
mov
ror
ljmp
adc
mov
in
pop
inc
out
cmp
movsl
and
scas
xor
test
pop
cs
cmc
lock
or
sub
adc
test
imul
cmp
sub
pop
aaa
popa
test
clc
or
addr16
and
or
and
mov
add
movsb
jmp
dec
and
add
xor
test
sbb
mov
mov
in
sti
jbe
data16
jl
fdivl
mov
into
movsb
fdiv
in
lea
mov
mov
xlat
sub
sahf
xor
rclb
stos
hlt
mov
jnp
inc
lret
and
ljmp
mov
adc
and
push
add
sub
das
push
cmp
mov
sbbb
outsb
sub
lods
cmp
mov
int
nop
pushf
addb
cmp
pop
dec
int
and
mov
in
call
in
inc
push
xorl
sbb
mov
xor
jne
push
cmpsb
mov
nop
in
loop
out
inc
inc
push
jnp
push
add
movsl
ror
shr
and
enter
daa
jo
inc
pop
insl
mov
or
into
ljmp
cmp
mov
xor
stos
mull
bound
lock
andl
xchg
push
cli
jle
sub
or
lea
pop
add
cltd
out
sub
xor
out
lcall
and
xorl
mov
test
xor
pusha
sbb
or
and
dec
or
mov
xchg
adc
mov
xor
adc
xor
daa
sahf
cmp
je
icebp
cmpsl
xchg
andb
sbb
sbb
test
cmpsb
add
add
sarl
mov
aaa
mov
push
add
mov
mov
xchg
dec
dec
mov
adc
lds
lds
test
lahf
mov
cmc
std
scas
or
ss
mov
pop
push
add
test
rcrb
aam
popa
icebp
jnp
scas
in
mov
mov
or
jmp
push
sub
fldl
add
jp
imul
cld
loopne
add
lock
mov
or
xchg
push
repnz
lea
xchg
xor
jb
pop
andl
mov
adc
sbb
pop
lods
mov
push
das
jne
dec
dec
int3
cmp
stos
xchg
pop
pop
jo
int
lret
pop
sub
sahf
adc
fs
mov
out
sub
pop
sahf
js
int3
jb
cmp
lret
out
mov
je
aam
add
or
leave
mov
inc
jp
dec
fs
jg
lahf
stos
testl
ja
sar
leave
sbb
addr16
outsl
jno
mov
ss
pop
fs
pop
sahf
div
and
out
sub
mov
rcll
xor
xor
jno
std
or
les
dec
dec
push
xor
push
test
push
and
in
xor
add
mov
repnz
cmp
lock
push
jno
shl
dec
rcrl
cmp
icebp
adc
xor
shll
test
pop
shlb
sub
outsl
std
test
ret
adc
out
mov
rolb
or
xchg
push
lret
mov
mov
push
push
mov
in
cmpsb
lods
pop
in
call
inc
dec
inc
add
imul
cld
adc
gs
loope
sbb
push
cmp
outsb
leave
sbbb
mov
mov
notb
jp
ret
ffree
cmpsl
and
test
rclb
repnz
sub
dec
outsb
imul
cmp
push
lods
add
pop
jb
imul
inc
mov
jns
sahf
add
sbb
pop
adc
pop
push
push
shrb
and
leave
pop
sti
jmp
imul
and
adc
fwait
inc
cmp
out
cmc
pushf
test
inc
daa
xchg
mov
mov
mov
mov
push
jns
es
ret
dec
sahf
add
mov
mov
inc
pop
nop
outsb
mov
int
cld
aad
mov
popa
jno
jns
adc
push
adc
add
jle
mov
pop
pop
out
xchg
jg
fs
scas
adc
in
in
adc
sbb
cmp
mov
rorb
movsb
adc
xlat
sbb
sub
adc
cmc
inc
or
cmp
imul
icebp
mov
popa
subb
mov
sahf
int
push
aad
dec
cmp
push
test
add
adc
push
shlb
pop
or
imul
cmp
and
or
mov
lock
cltd
fsubl
mov
add
push
mov
lret
and
popf
jmp
push
aam
jo
icebp
fwait
push
and
cmpl
jle
rcrb
mov
inc
xor
dec
jg
and
clc
xlat
cmp
enter
sahf
mov
dec
pop
andl
addr16
xlat
jg
xor
test
or
es
pop
es
adc
das
adc
jns
testb
and
icebp
push
add
inc
cmpsb
add
add
cmpsb
mov
in
push
xchg
into
bound
addb
data16
jno
inc
bound
cmp
loopne
or
cmp
and
fistpl
and
jo
sub
test
jo
jge
lea
push
xor
rolb
push
sti
adc
mov
repz
push
mov
and
inc
cld
and
or
insb
std
jae
out
jns
mov
jecxz
cli
mov
xor
add
ret
mov
ret
jg
nop
aaa
rcl
pop
sbb
dec
repz
aaa
inc
addb
out
mov
inc
adc
adc
icebp
add
jb
pop
push
jns
adc
das
lds
aas
ror
dec
add
push
es
xor
inc
nop
pushf
add
loopne
jb
lods
sub
cld
push
xchg
adc
das
call
and
mov
jbe
out
int
or
mov
and
icebp
and
or
loope
outsb
and
add
mov
gs
fiaddl
adc
add
add
ss
pop
xchg
mov
add
jbe
xchg
add
xchg
shll
sub
or
arpl
inc
add
pop
jle
pop
fistl
xor
stc
sahf
jb
xor
out
sbb
popf
clc
scas
mov
jne
test
inc
mov
int3
inc
push
int
loop
pusha
jp
test
fldl
sbb
sahf
xchg
stos
or
insb
xlat
push
shl
les
dec
enter
xchg
push
out
imul
add
les
pusha
mov
push
bound
and
mov
enter
inc
inc
scas
cmp
es
push
push
or
movsb
mov
scas
add
or
mov
orb
mov
xchg
mov
xor
lahf
or
jbe
xchg
add
mov
daa
cmp
mov
mov
fs
xor
ljmp
ret
jne
sbb
mov
in
adc
adc
pmaddwd
sarb
add
lock
add
or
dec
mov
test
fstl
adc
mov
popa
cmp
dec
outsb
in
and
mov
add
pop
or
dec
sub
xchg
or
mov
xchg
xor
mov
add
inc
enter
lea
push
add
cbtw
idivl
or
xchg
xchg
inc
mov
daa
mov
xchg
popa
fcomip
cmp
mov
add
inc
aas
pushf
neg
mov
nop
inc
and
fldl
xor
es
int
inc
loope
or
je
sbb
fiaddl
jmp
out
outsb
fs
mov
inc
or
xchg
insl
sbb
andb
and
loopne
repz
mov
test
movsb
andb
jb
push
addb
add
callw
jns
adcl
fs
push
push
outsb
sbb
lods
or
push
and
sbb
lcall
call
xchg
mov
in
std
test
adc
and
jns
add
push
fprem1
test
arpl
jmp
or
pop
aas
fdivrl
and
add
mov
mov
icebp
stos
loopne
faddl
pusha
dec
pop
out
jmp
mov
mov
test
mov
inc
leave
mov
jg
xchg
pop
pusha
mov
adcl
inc
jecxz
adc
addr16
xchg
pop
xor
loope
scas
ljmp
jbe
sti
mov
fstps
and
mov
fs
push
sbb
loope
jmp
or
xor
jle
popa
push
mov
add
dec
shll
out
mov
pop
mov
out
sbb
xchg
sbb
adc
loopne
inc
pop
and
pushf
and
jo
adc
in
jb
aam
xorb
stc
mov
sbb
out
repz
mov
in
or
jecxz
push
test
ss
xor
add
insb
scas
pop
push
or
into
push
dec
adc
in
add
jp
enter
add
jno
call
out
inc
push
sbb
add
das
sub
cmpsl
push
push
pop
pop
ja
pop
fucomip
xor
adc
stos
je
sub
mov
jns
dec
sbb
or
push
or
test
sbb
cmp
xlat
negb
inc
jns
ds
into
xor
inc
lahf
icebp
adc
xchg
sub
decl
push
enter
enter
jp
pusha
xor
or
adc
add
sbb
xchg
dec
adc
iret
push
rorb
dec
inc
loope
std
sti
xchg
shll
cmp
xor
mov
or
inc
xchg
add
adc
clc
fs
test
jle
jne
orl
clc
or
xchg
xchg
iret
gs
cmp
mov
inc
cmp
jne
dec
pop
sarb
repz
adc
lds
loope
jns
out
mov
mull
iret
pop
enter
test
jnp
popa
dec
pop
sub
dec
pusha
xor
sbb
or
decl
push
into
or
mov
fidivrs
orb
mov
xor
xchg
testl
lock
ret
adc
out
imul
adc
loopne
lret
push
out
push
mov
xchg
pop
ss
daa
insb
fisubl
es
inc
fcmove
pop
cmp
cmp
push
inc
roll
cmc
into
xor
pop
sti
jo
dec
sub
testb
cld
pop
dec
dec
dec
cmc
std
nop
adc
mov
adc
pop
xchg
jle
nop
dec
xlat
in
daa
in
jl
into
jmp
xchg
int
xor
adc
test
aas
in
repz
sahf
xor
adc
and
mov
push
push
add
je
out
or
ds
xchg
inc
adc
xor
out
push
sub
sub
pushf
push
add
js
pushf
jbe
add
push
push
xchg
inc
inc
leave
mov
mov
or
or
in
mov
scas
pusha
lea
inc
pop
xchg
push
aas
sbb
test
and
inc
push
sbb
imul
mov
sti
fcoms
cmc
inc
push
pop
jmp
std
ja
jae
push
call
sbb
mov
inc
popf
std
lcall
icebp
mov
daa
push
push
bound
stc
iret
jl
dec
inc
jae
popl
jb
dec
sub
in
js
je
push
jo
push
cmpsb
sbb
lret
or
in
xor
pop
ljmp
jns
jmp
ret
mov
adc
add
dec
clc
xor
stos
dec
clc
movsb
sbb
shll
stc
jle
je
or
or
sti
mov
in
sbb
pop
jnp
jbe
mov
int3
push
or
add
mov
adc
push
or
lds
test
ret
cmp
mov
inc
shrl
push
jo
xor
mov
mov
lret
push
mov
int
into
shrb
loopne
jo
loope
mov
mov
rcrb
adc
push
je
incl
pop
std
xchg
push
jle
add
adc
mov
shll
loopne
fisttpl
pop
jmp
std
dec
lea
lahf
add
in
shll
nop
pushf
mov
repnz
jnp
push
mov
dec
adc
jo
ss
sbb
cmp
sbb
mov
xor
sbb
dec
mov
mov
aam
adc
fs
sti
test
xchg
xchg
mov
loopne
cli
or
and
or
sbb
mov
not
orl
mov
add
adc
jnp
push
movsl
adc
movsb
mov
dec
mov
movsb
mov
fisttpll
xor
test
dec
jl
inc
sahf
inc
lcall
in
mov
jle
xchg
inc
cmpsl
out
inc
push
jecxz
push
inc
push
andl
sbb
jp
pop
popa
and
fidivs
bswap
and
nop
test
je
push
clc
iret
and
mov
test
add
dec
dec
je
xor
and
nop
test
jbe
push
ret
sub
repz
mov
stos
lret
scas
inc
pop
add
xor
popa
out
lea
in
xor
push
mov
js
mov
adc
push
mov
subl
ja
dec
and
inc
jl
dec
inc
mov
jnp
push
pop
add
fimuls
sbb
inc
inc
aam
and
call
mov
scas
cwtl
fs
cmpb
mov
cmp
inc
pop
addb
repz
add
pop
add
pop
mov
or
das
sbb
idivl
imul
movsl
dec
out
ds
test
mov
add
sbb
loop
dec
movsb
std
jecxz
pop
jecxz
daa
push
pushf
jno
mov
xchg
mov
xor
fbstp
js
mov
push
add
mov
faddl
jns
dec
cmp
pusha
mov
sub
movb
cmp
in
dec
lahf
repnz
rcll
ss
sti
aas
mov
inc
aad
mov
jnp
sub
adc
and
loop
adcb
pop
sub
in
leave
inc
jnp
or
mov
sub
into
push
xor
xchg
jecxz
jmp
loopne
shrl
add
dec
mov
sub
inc
daa
testl
pop
adc
xor
mov
enter
dec
inc
cli
and
lock
bound
pusha
std
pop
shrl
ficoml
imul
rclb
in
dec
pushf
faddp
ja
fiadds
xchg
lods
and
test
or
scas
std
daa
and
mov
enter
adc
mov
int3
pop
clc
clc
sbb
repz
jecxz
and
insb
bound
clc
push
hlt
or
out
loopne
subl
inc
dec
movsl
sbb
fidivs
andnps
hlt
ljmp
orl
xor
sbb
ja
nop
jae
add
sub
pop
popa
xchg
stos
out
dec
pop
mov
imul
mov
and
sbb
pop
adc
insb
insl
adc
adc
into
je
add
sar
aas
or
push
pop
add
pushf
in
insb
mov
and
mov
nop
icebp
push
mulb
inc
inc
dec
inc
enter
jns
xor
lds
scas
or
out
sub
mov
rcrl
lods
hlt
cmp
mov
scas
aam
nop
xorl
scas
add
cmp
das
jge
and
mov
push
mov
fwait
adc
inc
pop
aaa
pop
notl
jmp
repz
cltd
push
out
pop
out
fmulp
xchg
inc
xor
xchg
jbe
mov
sti
or
dec
in
pushf
jp
push
stos
sbb
loopne
xor
testl
daa
flds
jne
cmpb
sarb
testl
lds
ret
mov
or
add
int
fstl
push
mov
and
mov
jb
stos
inc
jg
ds
out
xor
xchg
test
mov
adc
and
out
and
inc
mov
loope
jle
cmp
dec
xchg
enter
inc
shlb
and
push
push
cmpsl
jo
xchg
push
mov
inc
jbe
push
imul
sbb
divb
lds
sbb
pop
and
aas
inc
xor
outsl
fs
movsb
lea
pop
test
cmp
stc
mov
imull
dec
xchg
bound
into
lret
adc
outsb
xor
jmp
fcmovbe
cmp
and
xorl
xchg
inc
sbb
cmc
outsb
jbe
xor
fs
xchg
xchg
fdivs
or
scas
test
stos
inc
shrb
xchg
adc
xor
mov
loope
sub
sbb
cmp
sbb
xor
push
xor
cmp
es
add
adc
sub
in
aaa
rep
inc
je
jbe
dec
mov
xor
mov
ds
push
loope
pop
mov
pushf
and
pusha
add
mov
dec
lret
je
push
push
jae
xor
inc
cltd
in
ret
imul
call
jmp
inc
nop
sbb
lea
and
pop
sbb
les
cmp
int3
or
and
sub
adcb
mov
fidivl
popf
mov
loop
clc
ds
inc
push
inc
call
lcall
in
sar
cmp
stc
and
fbstp
push
add
je
pop
and
aas
movl
mov
cwtl
adcb
filds
clc
inc
sbb
push
adc
fisttpl
clc
adc
xchg
call
add
and
loopne
adc
inc
pushf
outsl
xchg
fbld
mov
sbb
mov
rcll
xchg
inc
daa
icebp
mov
loopne
or
xchg
sub
sbb
lock
stos
jo
push
push
mov
push
scas
out
jns
mov
sbbl
xchg
add
sub
inc
cli
aad
in
xlat
mov
jbe
popa
push
movsb
jl
pop
rclb
dec
stos
pushf
jbe
je
or
loopne
jbe
ds
push
mov
nop
outsl
pop
jge
mov
adc
jg
xor
pop
out
mov
loop
and
mov
mov
adc
jmp
mov
aad
xchg
dec
mov
sub
clc
xor
adc
adc
rcrl
and
mov
mov
test
hlt
cltd
and
pop
cwtl
jbe
adc
jmp
push
cwtl
shlb
in
test
cmp
imul
xor
aam
lret
inc
addb
adc
dec
dec
mov
js
cltd
add
sub
mov
test
cmp
sub
sub
cmc
or
mov
outsb
pop
jp
adc
sbb
jp
data16
pusha
movb
lcall
popf
xor
mov
test
adc
test
jno
mov
std
out
xchg
je
pop
repz
hlt
cld
lea
jb
repz
loopne
addl
lret
xchg
movsl
inc
lcall
mov
iret
and
dec
stos
sbb
pop
roll
mov
sti
repnz
sbb
mov
sti
popa
subb
push
xor
test
inc
mov
push
dec
push
arpl
andb
rcll
mov
inc
lret
scas
mov
push
jb
jl
or
repnz
out
jne
popf
adc
cmc
adc
sar
push
adc
mov
call
fs
lods
in
pop
int
iret
sbb
js
adc
push
inc
xor
hlt
dec
xor
jge
xor
and
cwtl
inc
push
jecxz
test
cmp
sub
dec
pop
iret
or
mov
es
rolb
into
scas
mov
dec
adc
ljmp
daa
jmp
pop
arpl
and
test
adc
mov
clc
cmpsb
rcll
lods
and
mov
pop
repz
repz
jbe
push
shrb
orb
lahf
pop
cmp
shr
incb
fs
and
cmp
ja
in
cmp
inc
jbe
nop
adc
cmp
lcall
adc
inc
les
fisttpll
sub
inc
movl
in
jg
bound
push
aad
mov
cmpsb
push
lock
rcl
push
ljmp
imul
out
sub
add
mov
inc
inc
mov
or
hlt
mov
int
dec
popa
fidivl
sbb
cli
and
sub
mov
rorl
int
add
adc
pop
mov
cmpsb
jle
pop
dec
or
pop
inc
mov
pop
gs
pop
lret
push
inc
call
jbe
and
subb
mov
xchg
xchg
notb
lds
mov
stos
mov
or
mov
xor
cltd
or
jo
and
dec
cmpsb
adc
gs
clc
jns
leave
data16
cld
stos
or
jle
adc
add
inc
seta
push
pop
add
les
leave
jo
repz
sub
fsubrs
call
mov
mov
fs
pusha
cmp
add
out
mov
out
daa
mov
mov
add
mov
data16
fiadds
stos
outsl
xchg
add
xchg
aam
push
stos
sbbl
lret
sti
dec
jns
pop
or
mov
js
jnp
pop
cltd
or
and
or
popa
js
shll
jl
xor
movsb
std
loopne
subl
and
ljmp
sbb
push
inc
adc
pop
add
add
mov
and
sbb
dec
inc
mov
add
mov
dec
nop
xor
push
mov
or
stos
dec
pusha
dec
popa
and
int
jl
call
push
mov
inc
dec
rclb
repnz
ret
mov
inc
repnz
add
pop
mov
ret
clc
mov
pop
pop
lea
mov
std
nop
pop
fwait
js
jl
testl
adc
das
test
pop
mov
into
cltd
cmpsl
push
sub
cmp
inc
mov
mov
sbb
icebp
test
fsubl
sahf
inc
stos
jns
cmp
sbb
pop
mov
pop
loope
mov
sub
push
je
call
rol
adc
test
repz
inc
movsb
aaa
das
pop
mov
cli
mov
xchg
xor
inc
xchg
inc
jo
and
mov
aaa
xchg
mov
loop
ret
leave
adc
pusha
cmp
pop
xor
and
jecxz
push
cmp
fbstp
jl
ss
dec
stos
lods
ljmp
mov
inc
arpl
mov
shrb
outsl
xchg
or
adc
fisubrl
in
fdivrl
ret
dec
mov
mov
xor
push
lods
sub
jl
arpl
mov
sbb
fcoms
add
sbb
inc
mov
cmpl
cmp
stos
pop
call
clc
add
pop
mov
push
pushf
add
iret
das
push
sbb
and
icebp
sbb
inc
leave
andb
xor
mov
lret
test
imul
jne
jo
jno
mov
inc
jno
rclb
xor
lahf
negb
outsb
pop
inc
cmpb
test
xor
enter
mov
and
sub
repz
addl
ja
fwait
sub
jbe
cwtl
mov
push
test
push
divl
in
adc
xor
sbb
jnp
dec
xor
adc
adc
sbbb
mov
xchg
in
arpl
addl
push
dec
adc
or
or
mov
xor
or
aas
cmpb
movb
test
mov
movsl
push
push
mov
xor
nop
repz
add
pop
iret
xchg
ljmp
icebp
cltd
pop
jecxz
bound
pop
jecxz
xchg
add
loopne
cmp
xchg
adc
push
inc
shrl
fs
and
xchg
and
or
sub
inc
inc
mov
sahf
pusha
push
jmp
mov
inc
cmp
lahf
jl
push
outsb
dec
jo
mov
push
test
xor
ljmp
mov
cmp
sbb
lock
jg
push
sbbb
lret
push
divb
cmp
daa
dec
in
je
popf
call
es
xor
jns
jecxz
jle
test
xchg
and
jecxz
mov
lds
dec
jae
or
ret
add
inc
sti
xchg
inc
dec
lret
in
mov
mov
push
movups
cmpb
stos
scas
dec
and
call
fsub
das
stos
cmpsl
xchg
lock
push
call
in
loope
sub
cmc
jmp
and
mov
cmpsb
or
cmc
les
pop
popa
mov
cmpsb
push
nop
inc
sub
jae
lds
jp
add
in
sub
adc
imul
orl
sub
arpl
idivb
or
and
xchg
loop
lahf
pop
fcmovnu
mov
and
mov
pusha
cwtl
cmp
mov
sarl
sub
add
sbb
mov
push
loop
ret
sbb
sbb
xlat
in
lcall
sbb
ret
mov
mov
data16
push
inc
pushf
add
sbb
cmp
jle
inc
xchg
pop
mov
mov
inc
adc
out
xchg
lea
adc
repz
or
inc
mov
jg
xor
stc
aam
insl
in
push
pop
in
jae
cltd
dec
and
xchg
inc
pop
mov
dec
ret
shl
sbb
cmp
sub
lods
inc
rorl
adc
lret
das
add
dec
sub
cmpsb
out
out
in
cmp
inc
mulb
sbb
cmp
sbb
and
add
and
cmp
rorb
pop
sbbl
daa
mov
fsubl
das
leave
xchg
mov
xchg
sbb
pop
test
jo
sbb
popf
jg
ret
push
inc
add
adc
rcrl
mov
rol
lea
mov
xchg
or
pop
sub
iret
outsl
inc
scas
or
addb
push
mov
mov
cld
cld
imulb
xor
inc
mov
adc
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
push
push
lea
push
lea
push
push
call
mov
mov
mov
mov
leave
ret
dec
mov
in
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
lea
push
call
mov
mov
mov
mov
leave
ret
and
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
push
pushl
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
js
sbb
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
insb
add
mov
hlt
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
push
push
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
cltd
pushf
dec
pop
xchg
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
sbb
cltd
sbb
imul
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
pushl
call
mov
mov
mov
mov
mov
mov
leave
ret
jle
mov
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
leave
ret
rorl
cwtl
sarl
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
push
lea
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
imul
stos
ds
mov
add
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
push
call
mov
mov
mov
mov
mov
leave
ret
pop
jmp
cld
mov
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
or
fadds
dec
push
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
leave
ret
xchg
mov
icebp
test
in
add
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
pushl
pushl
lea
push
call
mov
mov
mov
mov
leave
ret
in
fcomps
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
call
mov
mov
mov
mov
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
mov
ret
jge
movsb
pop
adc
in
add
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
testl
jge
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
fld
imul
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
subl
mov
mov
sub
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
subl
mov
mov
mov
mov
mov
mov
sub
je
push
pop
subl
mov
mov
mov
mov
mov
mov
mov
mov
sub
je
mov
mov
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jbe
mov
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
or
das
and
in
add
mov
mov
mov
mov
mov
mov
cmpl
jbe
mov
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jbe
mov
mov
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
xchg
adc
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
dec
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jg
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
subl
mov
mov
sub
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
push
push
push
push
push
push
push
push
call
dec
jne
call
call
call
call
call
call
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
push
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
jl
imul
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
cmp
je
mov
mov
mov
mov
rol
mov
mov
add
mov
mov
xor
mov
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
push
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
adc
popf
push
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
bnd
xchg
gs
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
lea
push
push
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
push
out
jns
int
xor
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
pushl
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
pop
adc
pop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jg
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
test
jge
jmp
cmp
jge
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
lea
push
lea
push
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
and
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
jmp
test
jbe
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
pushl
push
push
pushl
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
loop
inc
ret
adc
add
mov
mov
push
lea
push
push
pushl
push
push
lea
push
call
mov
mov
mov
mov
leave
ret
jb
xlat
jp
cmc
pop
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
test
jbe
jmp
testl
jge
mov
mov
jmp
test
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
ret
xchg
push
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
incb
in
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
push
pushl
lea
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
push
push
lret
and
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
xlat
xor
mov
les
decl
add
add
test
cmp
or
mov
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pushl
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pushl
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
xor
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
popl
pushl
pop
neg
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
popl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
subl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
jne
leave
ret
fimull
mov
in
add
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
adc
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
jmp
cmp
jg
mov
jmp
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmpl
jge
jmp
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
sbb
lret
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
jns
xor
mov
add
mov
mov
mov
cmp
jg
jmp
test
jge
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
jmp
testl
jge
mov
mov
jmp
testl
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
inc
sbb
cs
push
mov
add
mov
xor
push
mov
xor
push
mov
push
xor
push
mov
push
call
push
push
call
call
sub
mov
mov
pop
sub
push
push
push
push
pop
add
push
push
push
mov
sub
call
push
lea
push
pushl
push
push
call
call
pop
ret
push
mov
clc
ficoms
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
scas
push
push
xor
cmpsl
push
mov
add
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jbe
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
lea
push
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
cmpb
push
inc
push
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
lea
push
pushl
lea
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
repnz
loope
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
lea
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
push
push
cld
or
in
add
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
lea
push
lea
push
call
mov
mov
mov
leave
ret
cmc
add
std
push
mov
add
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
test
jbe
jmp
mov
cmp
jbe
mov
mov
jmp
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
inc
pusha
mov
add
mov
mov
mov
mov
mov
mov
pushl
pushl
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
pop
lahf
jno
or
mov
add
mov
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
jmp
test
jge
jmp
cmpl
jge
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
test
test
test
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
pushl
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
leave
ret
sbb
data16
rcr
push
mov
add
testl
jge
mov
mov
jmp
test
jge
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
jmp
cmp
jbe
mov
mov
mov
mov
mov
mov
jmp
cmp
jg
mov
mov
mov
mov
mov
mov
lea
push
pushl
lea
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
jnp
jmp
add
mov
mov
pushl
pop
push
popl
add
add
decl
jne
leave
ret
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
mov
addl
mov
mov
mov
mov
mov
mov
decl
mov
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
loope
or
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
push
inc
jb
add
push
mov
add
mov
cmp
jne
xor
inc
jmp
xor
leave
ret
in
out
rclb
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
push
pushl
pushl
push
lea
push
call
mov
mov
leave
ret
mov
fiaddl
xor
lock
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
das
out
cli
jge
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
sub
rorl
xchg
pop
in
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
lea
push
push
pushl
lea
push
call
mov
mov
mov
mov
call
push
mov
mov
pop
or
je
mov
mov
mov
mov
call
push
mov
mov
mov
mov
pop
or
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
leave
ret
testl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
divl
xchg
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
cmc
mov
outsb
push
mov
add
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
and
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
cmp
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
jmp
mov
cmp
jge
mov
jmp
test
jg
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pushl
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
test
cmpsl
in
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
pushl
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
cwtl
mov
mov
add
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
jmp
cmpl
jg
mov
mov
jmp
test
jbe
mov
mov
jmp
mov
cmp
jbe
mov
mov
mov
mov
pushl
lea
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
mov
sub
adc
in
add
mov
mov
mov
mov
movl
mov
mov
mov
mov
test
jge
mov
mov
jmp
test
jge
mov
mov
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
fisubrl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
add
mov
add
mov
mov
mov
mov
mov
mov
leave
ret
scas
inc
lcall
in
add
mov
mov
mov
mov
mov
mov
pushl
lea
push
lea
push
pushl
pushl
pushl
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
fistpll
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
pushl
push
lea
push
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
cmc
mov
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jg
jmp
cmpl
jg
mov
mov
mov
mov
mov
mov
mov
mov
jmp
test
jge
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
leave
ret
fisubs
mov
mov
mov
cmp
xchg
fidivl
dec
pop
sbbl
sbb
fwait
add
jl
adcb
mov
aas
dec
pop
lcall
jne
clc
andb
pop
pop
sbb
push
and
ret
jg
movsl
mov
adc
inc
add
pop
ljmp
inc
lds
adc
int3
mov
mul
test
arpl
dec
adc
or
push
movsb
add
icebp
inc
fsubs
push
sub
push
inc
and
hlt
leave
mov
shrl
rorb
xor
std
cli
push
repz
xor
sbb
jle
arpl
nop
std
inc
insb
aaa
jge
sbb
cmp
and
sbb
push
es
push
mov
bound
test
sar
test
subb
fists
lcall
daa
pop
jmp
je
mov
xor
dec
xor
add
je
add
mov
add
mov
add
ret
add
xor
add
adc
add
es
xor
add
inc
add
pusha
add
outsb
add
jl
add
mov
add
pushf
add
mov
add
lret
add
add
ljmp
add
add
and
add
ds
add
pop
aaa
add
jb
add
test
add
sahf
aaa
add
mov
aaa
add
fdivs
add
loop
add
out
aaa
add
or
add
cmp
add
cmp
add
add
pop
cmp
add
add
test
add
pushf
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
and
add
xor
add
dec
cmp
add
add
add
test
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
pusha
cmp
add
add
nop
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
jl
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jle
add
nop
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
xor
add
inc
cmp
add
je
add
mov
add
mov
add
les
add
repnz
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
jo
add
cmpb
add
add
sarb
add
add
in
add
add
add
push
aas
add
and
add
cs
add
inc
aas
add
push
aas
add
pop
aas
add
jbe
add
mov
add
cwtl
aas
add
test
add
mov
add
les
add
sarb
add
out
add
idivb
add
add
add
adc
add
and
add
xor
add
inc
add
dec
inc
add
pop
inc
add
js
add
mov
add
inc
add
rolb
add
add
enter
inc
xor
add
js
add
mov
xor
add
add
add
add
add
cmp
add
add
add
add
xor
je
add
mov
add
mov
add
ret
add
xor
add
adc
add
es
xor
add
inc
add
pusha
add
outsb
add
jl
add
mov
add
pushf
add
mov
add
lret
add
add
ljmp
add
add
and
add
ds
add
pop
aaa
add
jb
add
test
add
sahf
aaa
add
mov
aaa
add
fdivs
add
loop
add
out
aaa
add
or
add
cmp
add
cmp
add
add
pop
cmp
add
add
test
add
pushf
cmp
add
add
add
cmp
add
add
add
cmp
add
cmp
add
cmp
add
add
and
add
xor
add
dec
cmp
add
add
add
test
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
pusha
cmp
add
add
nop
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
jl
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
jle
add
nop
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
xor
add
inc
cmp
add
je
add
mov
add
mov
add
les
add
repnz
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
jo
add
cmpb
add
add
sarb
add
add
in
add
add
add
push
aas
add
and
add
cs
add
inc
aas
add
push
aas
add
pop
aas
add
jbe
add
mov
add
cwtl
aas
add
test
add
mov
add
les
add
sarb
add
out
add
idivb
add
add
add
adc
add
and
add
xor
add
inc
add
dec
inc
add
pop
inc
add
js
add
mov
add
inc
add
rolb
add
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
imul
outsl
push
jns
je
insl
push
imul
push
jb
jo
jb
push
popa
jo
add
add
je
outsl
imul
jbe
push
je
imul
add
outsl
bound
dec
popa
outsb
fs
add
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
push
outsb
insl
popa
jo
imul
insb
add
add
popa
outsb
addr16
imul
jne
push
imul
push
outsl
jae
push
jne
jne
fs
outsl
insl
jo
gs
outsl
outsb
push
je
je
jae
add
add
je
push
inc
data16
dec
popa
jae
add
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
add
add
fs
outsl
fs
add
add
inc
insb
jne
push
dec
inc
imul
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
outsl
bound
push
imul
push
jb
je
inc
imul
inc
insb
outsl
bound
dec
outsl
arpl
add
add
je
outsl
insb
jne
gs
popa
bound
push
add
add
outsb
arpl
push
popa
imul
insl
gs
add
push
gs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
je
gs
jo
popa
je
push
add
add
dec
jae
popa
fs
gs
fs
je
add
add
push
gs
insl
gs
push
add
add
dec
jae
popa
insb
imul
add
add
outsb
popa
insb
dec
bound
arpl
fs
popa
imul
push
jb
jbe
je
push
jb
imul
jne
je
add
add
push
gs
push
push
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
inc
gs
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
add
inc
gs
je
imul
push
add
add
inc
outsb
jne
push
gs
jne
arpl
popa
outsb
addr16
addr16
add
add
inc
gs
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
imul
jae
add
inc
outsl
insl
jo
jb
push
je
imul
add
gs
js
add
inc
imul
add
add
imul
je
push
jb
imul
imul
add
je
jns
je
insl
push
imul
jae
insl
outsb
je
add
push
gs
jbe
outsb
je
add
add
je
imul
gs
js
add
add
je
gs
jne
je
outsl
insl
insl
inc
outsl
outsb
imul
add
je
je
imul
inc
js
add
add
inc
imul
je
imul
push
gs
fs
imul
jns
push
jae
add
add
outsb
fs
outsl
insb
jne
gs
outsl
jne
je
outsl
imul
add
inc
dec
dec
xor
cs
insb
add
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
push
push
inc
push
xor
cs
insb
add
add
inc
popa
insb
insb
push
imul
outsl
arpl
add
inc
imul
outsl
ja
add
add
inc
imul
add
add
je
outsb
jne
outsb
outsw
add
add
je
gs
popa
addr16
imul
push
outsb
fs
dec
inc
dec
gs
popa
addr16
js
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
push
ja
jo
outsl
jne
gs
jne
je
outsb
add
add
inc
push
jo
popa
dec
jne
gs
arpl
add
inc
gs
jne
push
gs
jne
arpl
add
add
je
inc
inc
js
add
inc
gs
jb
jo
add
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
inc
imul
jae
popa
addr16
add
add
push
gs
arpl
jo
jns
add
add
push
imul
imul
add
outsb
jne
je
insl
inc
jb
insl
push
outsl
imul
fs
gs
jne
insb
imul
jbe
arpl
add
add
je
imul
fs
gs
imul
add
add
push
popa
imul
add
add
inc
jb
popa
je
inc
popa
je
dec
popa
outsb
fs
add
add
imul
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
dec
outsb
addr16
inc
add
add
push
outsb
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
inc
push
js
inc
js
add
add
fs
jne
jae
jb
add
add
jo
imul
gs
js
add
add
dec
outsl
popa
fs
je
imul
dec
jo
outsb
inc
insb
imul
add
add
fs
je
push
imul
add
push
outsl
push
outsb
imul
add
jo
outsb
fs
outsb
jne
add
add
imul
imul
inc
outsl
jb
popa
je
add
add
inc
gs
insb
imul
je
add
inc
gs
outsb
jne
add
inc
gs
jb
jns
outsb
jne
add
inc
fs
jb
gs
je
imul
insb
add
add
jo
imul
gs
js
add
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
insb
popa
jae
push
imul
add
popa
insb
inc
gs
imul
popa
jae
push
add
add
outsb
fs
gs
popa
addr16
imul
add
add
push
outsb
imul
imul
push
js
inc
add
add
push
gs
jae
jb
popa
outsb
fs
add
add
dec
outsl
popa
fs
arpl
insb
gs
je
jb
inc
add
add
fs
gs
outsl
popa
jb
dec
popa
jns
jne
push
add
add
je
outsl
jb
addr16
jne
fs
imul
add
je
popa
jb
je
insb
imul
add
add
jo
imul
gs
add
add
push
imul
push
arpl
inc
js
add
add
push
gs
outsl
jbe
dec
outsb
jne
add
add
je
insb
imul
inc
popa
je
add
add
dec
outsl
popa
fs
arpl
insb
gs
je
jb
push
add
add
popa
outsb
addr16
outsb
jne
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
add
dec
jae
imul
add
push
popa
insb
imul
je
add
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
add
je
imul
outsl
outsl
imul
add
je
outsb
jne
popa
jb
outsb
outsw
add
add
inc
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
outsl
ja
outsl
push
outsl
jo
add
add
je
gs
outsl
popa
jb
dec
popa
jns
jne
dec
popa
insl
gs
add
add
inc
gs
outsb
jne
outsb
outsw
add
add
je
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
push
gs
outsb
jne
outsl
outsb
je
js
dec
gs
jo
add
add
dec
jo
outsb
push
imul
popa
je
outsl
outsb
inc
add
add
dec
jo
outsb
push
imul
popa
je
outsl
outsb
push
add
add
push
gs
imul
outsb
addr16
add
add
dec
outsl
outsb
imul
push
arpl
add
je
insb
popa
jae
dec
outsb
outsw
push
add
add
je
popa
jo
jne
add
add
inc
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
push
gs
imul
outsl
outsl
imul
add
je
imul
js
inc
add
add
dec
insl
jo
jb
outsl
outsb
popa
je
inc
fs
insb
imul
outsl
ja
add
add
imul
jb
add
add
je
push
imul
add
inc
jb
popa
arpl
je
jns
je
insl
dec
gs
popa
addr16
add
add
dec
outsb
imul
inc
add
add
inc
jb
popa
je
dec
arpl
dec
outsb
imul
add
inc
push
js
push
add
add
imul
imul
je
outsl
outsb
add
add
data16
je
arpl
add
dec
popa
jo
imul
gs
add
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
outsb
arpl
je
jb
add
inc
fs
bound
outsl
outsb
push
jb
outsb
jae
arpl
outsb
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
imul
outsb
outsl
ja
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
push
dec
gs
push
add
add
push
imul
push
arpl
inc
add
add
inc
outsb
jne
push
jb
jo
inc
add
add
inc
fs
jne
jb
inc
outsl
outsb
jbe
outsb
outsw
add
add
inc
imul
outsl
ja
js
add
add
je
jne
dec
outsb
jne
add
add
je
imul
jae
add
add
je
insb
addr16
je
insl
dec
outsb
je
add
inc
gs
popa
jb
outsb
je
add
inc
jb
ja
je
je
push
add
add
push
gs
insb
addr16
je
insl
dec
outsb
je
add
inc
gs
imul
outsb
add
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
add
je
outsb
jne
je
imul
add
push
push
gs
dec
inc
push
add
add
inc
insl
jo
jns
insb
imul
add
add
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
inc
insb
popa
jae
push
imul
dec
add
add
xor
sbb
xchg
xor
add
add
add
add
add
add
or
add
std
mov
out
xor
inc
mov
add
xlat
add
int3
or
inc
adc
inc
cmpsb
mov
jmp
mov
out
xchg
or
loopne
push
xchg
pusha
in
cld
push
mov
sbb
mov
mov
mov
negb
sub
fcoms
push
xchg
outsl
lcall
inc
out
mov
mov
call
add
pop
and
repz
movsl
ss
sbb
lods
int3
xor
arpl
xchg
cmpsl
ds
fistpll
cwtl
inc
shrb
addr16
push
jecxz
add
mov
cmp
dec
mov
je
mov
shlb
cli
push
into
loopne
jns
orb
bound
jecxz
popf
pop
pop
psllq
add
fists
test
cmp
jmp
cwtl
or
cmpsl
adc
and
sahf
lahf
cs
sar
xor
pusha
loopne
sbb
shll
test
cmp
mov
test
addr16
cmp
mov
jecxz
pop
lret
mov
pusha
mov
lock
mov
push
outsb
and
pop
ret
or
out
mov
fmull
les
in
and
sub
nop
arpl
test
rol
stos
notl
push
mov
sahf
popa
lds
inc
dec
xlat
pop
decl
mov
ret
and
add
rclb
mov
add
add
sub
ljmp
mov
movsb
sbb
orb
adc
dec
rorb
dec
cltd
cmp
jb
shr
out
push
in
pop
mov
inc
sub
dec
add
sbb
sbb
test
inc
ds
les
nop
mov
push
add
cmp
sbb
xchg
je
rolb
pinsrw
inc
push
popf
inc
lea
mov
sub
es
sub
cltd
jmp
out
lahf
xchg
add
jno
inc
mov
pushf
push
test
dec
mov
filds
out
pop
sbb
mov
je
sbb
push
push
mov
into
adc
repnz
cwtl
xor
xchg
add
cmp
sbb
and
dec
bound
nop
scas
xor
mov
adc
adc
inc
cmp
in
and
shll
and
or
jge
cmp
dec
cs
xchg
or
scas
inc
loope
popf
add
jmp
pop
mov
test
pop
sub
xor
add
push
mov
xchg
scas
or
xchg
push
dec
aad
loope
and
mov
pop
pusha
push
mov
and
mov
test
adc
inc
cmp
lahf
inc
cmp
rcrl
andb
push
shlb
sti
mov
mov
inc
adc
and
add
push
leave
aad
push
push
sbb
pop
mov
inc
push
push
aas
push
mov
hlt
or
add
add
jb
mov
mov
pop
push
mov
pop
loope
roll
or
rcrl
cmp
lret
sahf
bound
addb
inc
jne
mov
sbb
cmp
cmp
inc
dec
cmp
out
or
mov
loopne
inc
push
pop
pop
sahf
cli
loopne
sub
test
int3
pushf
push
sbb
popa
cmp
push
gs
cmp
das
lds
fs
int
call
mov
scas
outsl
test
aad
enter
sbb
adc
add
adc
xchg
push
jb
test
sbb
out
and
mov
inc
add
mov
push
and
out
out
jg
sbb
jg
xchg
mov
mov
cld
mov
sub
fdiv
push
push
xchg
and
mov
cmp
je
push
and
push
jo
fisubl
mov
xchg
xor
movsl
rcr
or
push
jle
xchg
call
inc
scas
pusha
sbb
es
jle
lret
lods
xor
pop
xor
mov
push
mov
lods
pandn
and
adcb
lcall
ret
cwtl
inc
enter
jns
test
add
mov
sbb
cmpsl
dec
aaa
cmp
call
cmp
pop
push
or
dec
scas
mov
add
add
ror
popf
pop
emms
movsl
xchg
ds
or
insb
mov
mov
sarl
jp
pop
mov
adc
cmpsb
inc
mov
scas
in
adc
lea
xor
adc
int3
fimuls
fsubrl
sub
repz
das
hlt
mov
push
cwtl
push
and
lock
xor
or
cmpsb
loop,pn
mov
mov
xchg
fistl
sub
push
sbb
xchg
rolb
ret
jecxz
jge
adc
mov
decl
hlt
int3
andl
mov
outsb
and
adc
ds
call
mov
cmpsl
fnstcw
push
jp
jl
push
inc
lea
out
xor
fildl
add
add
xor
or
into
jno
jge
jg
imul
or
jne
mov
adc
inc
lret
ds
pop
ss
adc
in
mov
in
add
inc
push
es
lcall
scas
push
pop
nop
inc
test
push
or
push
sub
lods
ret
or
daa
jb
add
test
cmpb
outsl
mov
pop
pop
dec
jmp
push
je
mov
lods
sti
xor
jno
scas
dec
sbb
dec
in
xor
shll
mov
xchg
and
cmpsl
push
cmp
push
andl
stos
add
jo
aad
aam
mov
mov
mov
and
xchg
fstpl
cwtl
xor
cmc
sahf
push
inc
cli
mov
popl
add
pop
jo
add
dec
das
xchg
test
and
dec
mov
pushf
push
adc
out
inc
push
push
test
ds
adc
bound
xor
cs
sahf
and
out
or
mov
lea
stc
leave
mov
mov
add
and
add
and
sub
call
jb
bound
sahf
pusha
mov
hlt
sbbl
ds
push
xchg
sti
loope
xchg
ffreep
or
dec
dec
jns
sbb
mov
shll
dec
cmp
mov
mov
shrb
xchg
fiaddl
push
mov
xor
adcl
push
gs
cltd
dec
aad
push
stos
sbb
push
add
sbb
xor
inc
cmp
mov
add
pusha
xchg
fs
fdivrs
dec
or
sub
popa
or
mov
or
mov
mov
cmp
lods
adc
cmp
xchg
shlb
adcl
lahf
pop
sti
and
into
arpl
dec
xor
sti
arpl
in
or
test
jb
cwtl
push
cmc
lahf
fistps
push
or
scas
ja
cmp
insl
cmp
jg
cmpb
mov
daa
cmp
inc
je
sahf
add
add
cmp
push
repz
and
test
ljmp
cmp
pushf
and
add
push
sbb
test
sbb
shl
push
cmp
mov
sti
dec
dec
adc
je
push
loopne
pop
les
outsl
test
scas
and
or
mov
addr16
inc
lea
daa
ds
xor
pop
rorb
push
test
call
push
fwait
js
sub
add
jp
mov
popf
mov
adc
fimull
sub
adc
push
pop
mov
mov
xor
push
in
push
loopne
sbb
sti
and
sub
jae
add
xchg
push
and
lret
fcmovnu
mov
fcmovnb
add
xchg
cmp
rcrb
rorb
sbb
daa
lea
mov
or
les
cmp
add
out
sahf
push
popf
nop
popf
pop
mov
push
add
sar
mov
dec
or
cli
cmp
dec
out
stc
fisttps
xlat
arpl
mov
test
add
stc
ficoms
mov
jne
push
ret
mov
xor
dec
add
sbb
mov
outsb
mov
add
jle
push
pop
mov
push
adc
pop
mov
mov
cmpsl
or
int3
pusha
in
iret
in
inc
sbb
out
lcall
aam
movsl
roll
fldcw
mov
pop
jb
scas
inc
fisubs
mov
and
mov
dec
mov
push
out
push
push
cmp
sub
xor
and
sbb
inc
popa
xor
mov
push
imul
dec
pop
pushf
push
sbbb
fisubrs
lahf
je
xchg
sbb
pusha
test
and
orl
jle
cmp
dec
faddl
cmp
stos
mov
popf
sbb
daa
inc
xchg
pop
push
andb
push
jl
adc
cmp
imul
dec
sbb
jle
test
xchg
cs
inc
cmpsl
aas
lods
xchg
mov
mov
xor
ss
dec
das
jge
aas
insb
fstl
stos
add
je
mov
scas
xchg
push
adc
sub
or
test
jecxz
mov
jno
jnp
dec
add
repnz
sub
mov
dec
hlt
push
push
loope
fs
cmpsb
in
sti
adc
jmp
push
in
bound
mov
pop
push
int3
pop
aas
adc
leave
fmull
rorb
popf
loope
and
inc
mov
sub
xlat
rolb
mov
jnp
push
jp
into
hlt
adc
rolb
daa
test
test
pop
aaa
and
cmp
jns
mov
push
xor
daa
mov
jp
nop
xchg
pop
sub
shr
or
or
push
mov
lcall
pop
mov
mov
fabs
jo
jmp
test
inc
fcomps
test
data16
or
xchg
sub
jo
js
mov
inc
xor
sbbl
movsl
jns
jge
movb
inc
aam
outsb
adc
or
push
shll
sbb
push
pop
adc
or
test
or
popa
mov
iret
jae
pop
mov
push
out
test
in
adc
ret
or
sbb
push
push
jb
lock
and
fimull
and
jl
mov
push
adc
mov
js
mov
pop
ret
mov
test
out
pusha
push
ljmp
jg
ds
push
xchg
and
adc
mov
jmp
adc
fistl
inc
mov
mov
cmpsl
sbb
mov
pop
in
mov
or
orb
cs
or
inc
push
add
jl
aaa
pop
popa
ds
imul
jns
subb
addb
sub
add
dec
and
cs
mov
movsb
lds
jb
dec
sbb
out
lock
add
push
mov
or
sbb
jne
loop
pop
hlt
mov
popa
ret
sahf
push
sbb
inc
push
mov
fmuls
jno
ljmp
or
inc
cmp
add
mov
inc
testb
push
mov
xor
xchg
std
shl
pop
xchg
xchg
popa
arpl
popf
mov
and
jae
push
cmp
sub
mov
mov
aam
mov
xorl
lds
jo
xchg
cmpl
stc
iret
mov
ss
roll
nop
lods
gs
sbb
pop
sbb
rcll
bound
lock
xor
and
xor
pop
leave
rcll
stc
sbb
shlb
add
push
pop
scas
jae
cmc
xor
lcall
cld
push
dec
mov
inc
mov
dec
and
dec
orb
cld
hlt
enter
mov
f2xm1
je
mov
add
add
ret
pop
jnp
sub
adc
sub
aad
push
jne
xor
or
inc
leave
xor
ficoms
cmp
add
arpl
inc
pop
mov
cmp
int3
mov
test
lret
and
pop
hlt
je
dec
pop
sbb
stos
add
subb
lods
inc
push
cmp
xchg
call
rorb
movsb
and
sbbl
xchg
mov
xchg
mov
mov
push
movsb
inc
ss
adcl
cmp
scas
jo
pushf
or
ficoml
push
aas
mov
dec
adc
scas
add
cmpsb
cltd
or
dec
out
cs
rcrb
push
fcompl
clc
xor
jbe
adc
in
sub
mov
add
pop
cmpsl
out
sbb
cmp
cli
xor
push
and
sub
push
dec
leave
adc
xor
sub
add
add
mov
mov
pop
and
inc
mov
movnti
ficomps
mov
mov
adc
into
sub
fwait
mov
mov
add
dec
jb
mov
dec
jle
add
cmp
cmp
xorb
sbb
xchg
jl
in
push
and
add
dec
cmpsl
fs
push
inc
out
mov
ret
addb
cmpsl
inc
bound
inc
jo
repz
cs
scas
scas
outsl
xor
movsb
in
adcw
loope
add
rclb
adc
lock
cld
daa
jno
or
movsl
jge
add
testb
stos
dec
aaa
cmc
add
xor
mov
dec
jo
jle
push
loope
dec
mov
ret
xor
cmpsl
cld
jecxz
imul
or
imul
dec
sub
xor
dec
pop
adc
and
repz
or
sbb
inc
and
repnz
mov
or
cmpsl
xor
xchg
push
pop
jmp
sub
mov
leave
add
test
push
das
adc
jb
lds
add
imul
push
pop
xchg
jnp
inc
mov
inc
ss
push
or
gs
add
jp
inc
mov
dec
push
movsl
add
cmc
in
lcall
movsb
jle
mov
xchg
inc
xor
jle
jne
jno,pn
incb
or
sbb
cmp
and
inc
orl
xchg
les
sub
cmc
lea
mov
dec
xchg
dec
aam
jecxz
in
mul
addb
movsl
adc
sub
jne
lret
jns
add
xchg
xchg
pop
inc
push
fidivs
mov
sti
jo
xchg
cwtl
test
das
and
repz
dec
xchg
and
add
jp
ja
adc
in
inc
outsl
mov
push
adc
mov
push
cltd
add
xor
shll
xor
and
js
test
and
sbb
fcmovnbe
sub
mov
lea
jmp
jl
cmp
call
mov
adc
push
shlb
mov
jmp
subl
add
mov
imul
push
mov
loop
popa
scas
popa
lods
dec
or
add
std
movsl
push
cmpsl
sbb
inc
push
inc
jnp
cmp
inc
cwtl
sub
xchg
out
xchg
jns
mov
mov
xor
mov
mov
test
mov
stos
icebp
pop
lea
sub
xchg
sbb
inc
leave
inc
bound
cli
scas
sbb
in
fs
mov
sbb
push
or
imul
mov
fadd
xor
jmp
dec
nop
cmp
add
jmp
iret
or
pop
mov
sbb
pusha
imul
cmp
xchg
and
push
dec
sbb
outsb
mov
mov
sub
inc
inc
add
pushf
ret
push
daa
pop
jbe
movsb
cmp
or
outsl
jne
popa
xor
out
sbb
dec
pusha
js
nop
out
or
adc
mov
add
das
je
add
xor
rcrb
xor
and
enter
sub
repz
addr16
int
pop
movsl
push
mov
add
push
incl
push
sbbl
add
jge
dec
imul
inc
mov
call
mov
push
lret
push
test
aam
dec
ds
xchg
lret
xor
sbb
lods
and
and
loope
sub
call
or
pushf
rorl
push
arpl
mov
sbb
fldenv
addr16
inc
pop
jb
push
xor
add
push
in
in
insb
test
adc
clc
jo
dec
aas
in
cmp
ret
iret
sub
jge
cmp
add
cltd
stos
xchg
push
jb
test
shlb
sbb
or
xor
faddl
inc
cmp
nop
dec
mov
movsb
jecxz
or
add
out
cltd
and
ret
shlb
mov
movsb
sbb
fiadds
cltd
mov
mov
adc
jo
lret
cmp
bound
cmp
stos
xor
xor
mov
stos
jne
mov
mov
jmp
pushf
inc
lock
jmp
and
sbb
sbb
jae
cmp
cmpsl
cld
mov
popf
lret
insb
jne
lahf
push
cli
mov
sbb
push
adc
and
bound
mov
pop
inc
fbld
stc
sbb
mov
ret
iret
xor
aas
add
out
jno
cmpl
add
orl
mov
add
mov
pop
mov
xchg
inc
xchg
mov
jo
loopne
jmp
lods
sub
lock
xor
sub
cmp
in
pop
sub
fidivl
xor
orb
movsb
pop
lds
or
ss
lds
in
ret
xchg
mov
aas
mov
mov
call
and
outsb
mov
rorb
test
insb
js
repnz
or
and
pop
and
aas
shll
mov
pusha
fs
sbb
dec
ss
je
push
pop
push
out
cltd
addr16
push
lret
add
jp
mov
ds
dec
jmp
sarb
mov
mov
add
push
mov
xor
pusha
mov
movb
dec
xchg
push
out
ret
sahf
std
adc
pop
add
das
adc
nop
jnp
iret
les
movsb
mov
negb
add
push
inc
add
data16
sub
cmpsb
xor
sbbl
cwtl
mov
js
movsb
push
push
test
pusha
idivb
in
test
xchg
mov
push
inc
sbb
jns
mov
jmp
movsb
or
rorb
inc
jmp
bound
rorl
mov
addr16
rcrl
and
cmpsb
bound
push
jmp
sub
xchg
xor
aas
into
or
test
xchg
xchg
jns
add
add
jmp
orl
jg
xchg
out
add
inc
push
cmpsb
aad
dec
inc
in
sbb
ret
arpl
dec
or
jae
into
test
add
mov
and
xchg
or
push
push
and
inc
and
inc
insl
into
icebp
aam
xor
daa
sbb
sbb
adc
sub
repz
adc
and
cli
push
daa
data16
mov
mov
or
popf
sbb
test
inc
jl
test
mov
mov
pop
adc
push
rcl
cmpsb
pop
sahf
pusha
dec
cwtl
hlt
popa
icebp
xor
cmp
out
lods
leave
test
mov
sub
les
cmpl
leave
mov
flds
lea
ret
adc
mov
cli
jns
out
sub
jb
ret
leave
imul
mov
jno
ret
icebp
js
xchg
shll
lcall
movsb
rclb
push
or
cs
inc
pop
shl
enter
mov
ja
inc
pop
lcall
int3
mov
push
sub
testb
and
and
sub
movsl
mov
lods
or
cmc
and
xchg
cs
add
push
out
mov
sbb
xor
pusha
inc
pop
pop
popa
jl
leave
xchg
dec
mov
dec
xorb
lret
xor
push
pop
jae
mov
xor
xchg
or
adc
sbb
hlt
inc
ja
mov
and
sub
lahf
insl
sub
sub
scas
lahf
je
mov
add
or
dec
xor
vmwrite
and
aad
dec
pop
cmp
stc
push
push
cltd
mov
lcall
gs
into
dec
sub
push
cli
mov
sub
scas
push
sarl
data16
jg
pop
mov
mov
push
scas
sub
subb
cli
or
jmp
out
lahf
dec
sbb
add
jns
push
and
sarl
push
imul
sbb
jno
sbb
addb
add
add
out
push
es
and
out
xor
movsl
xlat
dec
movl
inc
subl
sarb
cli
or
mov
mov
stc
dec
cmc
or
lret
lret
cltd
in
or
pop
jb
add
sub
dec
and
mov
adc
cmp
pop
xchg
pop
imul
pop
stos
bound
inc
xchg
cmp
push
xor
mov
data16
rcl
pop
addr16
cli
mov
xor
or
imul
repz
mov
sbb
push
icebp
jns
repnz
fs
lea
add
jmp
add
and
fwait
dec
xor
sub
mov
xchg
push
cmp
stos
inc
aaa
sbb
inc
push
xlat
cmc
and
repz
mov
incl
xor
popf
xlat
jecxz
pop
mov
mov
test
add
sub
adc
ja
fistl
jmp
add
pop
das
dec
jp
rolb
cs
jne
shrb
sbb
xor
fisttps
imulb
xorb
push
jo
sub
inc
in
dec
imul
push
and
jo
sbb
push
mulb
cli
or
shll
inc
aas
or
out
mov
jmp
mov
sar
dec
stc
adcb
push
xchg
fneni(8087
rcrb
jne
hlt
add
sbb
jbe
mov
daa
push
insb
pop
add
cmp
dec
mov
aaa
js
loopne
lahf
pop
test
call
xchg
fwait
in
cwtl
aas
gs
popf
sub
cmp
mov
daa
push
repnz
xor
cmc
mov
imul
fdiv
adc
sbb
push
sub
xor
fcompl
mov
clc
insb
push
insb
sbb
inc
cli
xor
scas
or
lds
mov
cli
mov
lock
add
sbb
mov
addb
sar
mov
push
cli
leave
fiaddl
fidivrs
push
add
lahf
popl
mov
mov
cmc
inc
sub
pop
xchg
fisubrs
or
ss
nop
int3
or
push
mov
nop
sbb
and
inc
sahf
shrl
cmc
dec
sbb
mov
ret
cwtl
or
push
mov
popl
lcall
mov
and
adc
aam
loope
cmp
adc
inc
fs
and
cmp
stc
pop
push
or
insb
movb
subb
mov
adcl
ss
lahf
sub
into
add
enter
ret
ret
inc
loopne
add
inc
inc
or
inc
dec
inc
movsl
jnp
adc
stc
cs
and
std
push
xor
mov
dec
mov
inc
jle
stos
xor
rolb
mov
xor
adc
daa
jmp
mov
in
push
push
icebp
sub
pop
mov
mov
adc
sub
lahf
scas
pop
inc
aad
adc
add
xor
mov
sbb
cs
inc
test
lcall
xor
sbb
add
incb
pop
cmp
in
add
mov
jo
xor
inc
push
aas
add
mov
push
push
xchg
mov
stos
bound
es
lret
aad
cmpsb
sub
les
and
fidivrl
jo
sbb
sub
popf
or
clc
jb
mov
xchg
lock
dec
into
mov
lcall
mov
mov
clc
or
or
pop
std
into
inc
pop
adc
sub
mov
mov
and
add
jo
jbe
sbbb
pop
fs
call
push
cs
outsl
add
and
shlb
sub
or
pop
xchg
leave
sbb
scas
sub
shlb
fcmovnu
pop
pop
int
aam
mov
sub
xchg
mov
in
mov
xchg
and
xchg
es
mov
pushf
imul
sbb
sbb
lea
aam
sub
and
ret
inc
jp
adc
mov
aas
add
mov
or
jp
cmp
ret
inc
outsb
lahf
in
loop
sub
mov
out
push
clc
loop
inc
pusha
das
xor
icebp
inc
mov
imul
rcr
xor
pop
and
push
or
adc
jo
roll
and
nop
or
insb
ja
je
and
mov
repnz
pop
aad
test
mov
mov
insl
xor
das
adc
pop
and
clc
test
adc
movsl
and
push
test
scas
imul
fiaddl
icebp
test
mov
add
sub
xchg
imul
bound
adc
or
lcall
mov
cmp
push
add
shll
pop
inc
sbb
sub
xor
stos
sbb
push
leave
test
xchg
insl
xor
enter
or
inc
es
or
add
adc
add
add
mov
or
paddusw
test
mov
jne
dec
pop
dec
adc
movsb
and
enter
inc
test
inc
and
insb
push
cmp
je
imull
xchg
in
lds
add
in
mov
cmpl
sbb
popa
repnz
outsl
sub
cmp
lret
push
jmp
xor
repnz
jb
add
rclb
mov
push
call
stos
scas
inc
xor
adc
cld
lahf
stos
xor
mov
add
ret
xchg
enter
sbb
push
add
sbbl
scas
in
out
int3
in
add
pop
popl
pushf
sbb
loope
inc
add
in
lcall
in
stos
ss
movsb
jbe
inc
mov
push
je
gs
xchg
loop
test
dec
push
out
xchg
scas
or
cwtl
add
imul
mov
into
and
mov
loope
mov
loop
addr16
loope
pop
jecxz
mov
xchg
jge
rorl
cmp
cld
jp
ror
int
stos
jno
push
mov
sub
adc
fs
adc
call
pop
mov
adc
or
mov
inc
inc
iret
or
enter
jg
or
dec
lcall
pop
push
or
pop
sti
sub
and
test
xor
jmp
test
cli
dec
loopne
or
dec
sub
pop
push
addb
xchg
jecxz
repnz
inc
jbe
or
aaa
andl
pop
mov
and
mov
adc
or
and
sbb
mov
add
jge,pn
inc
jno
mov
xor
sub
adc
test
sbb
sbb
push
adc
mov
xor
inc
mov
pop
je
jge
inc
mov
jle
mov
fwait
dec
cmc
mov
leave
cwtl
and
lds
daa
mov
add
or
pop
gs
xor
push
push
loope
mov
dec
adc
rol
jecxz
scas
add
ja
xor
les
mov
add
add
popa
cli
or
adc
stc
or
inc
adc
out
lods
lds
scas
xor
imul
mov
and
and
jns
fsubs
adc
mov
xlat
andb
idivl
or
and
mov
stc
shrb
lds
nop
pusha
and
sub
jo
ds
test
cwtl
cld
sub
outsb
and
icebp
inc
orl
popl
aaa
inc
and
pusha
inc
xor
test
pushf
or
cli
jns
or
jbe
cwtl
nop
jg
sbb
dec
popf
dec
dec
and
sbb
jne
or
ja
mov
push
xchg
cwtl
loope
test
roll
jno
mov
adc
loope
jmp
mov
cld
inc
push
xchg
xchg
xor
xchg
mov
add
and
xchg
outsl
add
pushf
jmp
cmp
lcall
mov
add
cmp
gs
sarl
and
pop
inc
mov
push
mov
add
add
pop
mov
inc
scas
test
movsb
and
add
rcll
xchg
out
cmpl
hlt
pop
jnp
xchg
sub
jnp
adc
adc
pop
sti
dec
nop
dec
mov
imul
push
sbbb
push
sub
adc
xor
adc
aaa
in
mov
jge
cmpsl
or
cwtl
cld
es
inc
or
shl
test
dec
ficompl
nop
mov
movmskps
pop
jmp
ret
les
push
fbld
mov
ss
outsb
jo
ret
inc
add
push
inc
fcomip
jecxz
mov
in
test
jae
pop
loopne
loopne
out
pusha
aad
call
and
into
hlt
xchg
ror
ljmp
xchg
or
repz
pop
cmpsl
cmp
call
pop
aad
ret
adc
jae
addb
leave
add
out
push
push
pop
es
xor
jae
push
cld
loop
pop
sub
sub
loopne
add
or
popa
mov
xchg
xchg
pop
push
aam
adcb
adc
shrl
stc
and
cmpsb
xor
add
and
mov
or
push
shrb
cwtl
pop
cmp
or
xchg
jmp
out
sub
out
xorb
cmp
or
fwait
add
xor
loop
mov
inc
cmp
dec
xchg
roll
or
push
push
lock
sub
mov
andl
adc
out
mov
push
adc
add
leave
inc
aaa
daa
or
mov
stos
inc
loope
add
inc
and
rolb
nop
mov
loop
arpl
pop
or
nop
add
fiaddl
mov
push
push
dec
cwtl
and
out
add
jge
mov
hlt
jns
lret
sbb
mov
or
push
xchg
dec
inc
scas
push
add
mov
lea
lret
jge
sarl
push
mov
add
popf
cltd
ffreep
loop
xchg
mov
dec
sub
add
scas
cwtl
mov
mov
scas
mov
loopne
ds
inc
push
dec
xor
das
test
cltd
jle
cmp
mov
ljmp
push
add
and
jne
sbb
and
add
add
data16
push
xchg
int3
cli
clc
cmp
dec
insb
inc
or
inc
or
sahf
into
movsb
cltd
in
jge
mov
push
popa
negl
pop
adc
mov
incb
clc
fildl
mov
adc
loope
not
and
xor
lahf
in
cmp
sbb
pop
enter
or
cltd
data16
lods
int3
inc
push
cwtl
or
push
sbb
decb
xchg
xor
jmp
fwait
out
sub
lods
and
mov
mov
pop
sub
cmp
push
aaa
movsb
pop
gs
xor
es
adc
gs
cwtl
in
and
stos
sub
rcrb
add
inc
pusha
popf
mov
mov
icebp
dec
xchg
andb
push
mov
hlt
cmpsb
pop
jno
xchg
mov
add
enter
pop
shll
movsl
dec
sbb
sub
add
dec
cmp
or
push
inc
mov
arpl
inc
cmp
int3
iret
fildl
cmp
push
test
adc
and
jecxz
add
mov
cmp
outsl
ljmp
imul
jge
inc
into
inc
pushf
mov
or
add
add
andl
aam
push
and
push
loopne
jbe
bswap
jb
aam
add
mov
add
xchg
idivb
movsb
jne
inc
xor
add
adc
lret
icebp
or
add
lock
and
popf
fwait
adc
call
out
fnstcw
pop
nop
add
mov
cmp
les
jp
les
lret
pushf
fdivs
loopne
call
stos
fists
mov
jno
fisubrs
push
or
cltd
mov
out
loope
jnp
adc
out
ret
xchg
xchg
inc
push
xchg
mov
xchg
movaps
lahf
xchg
sbb
lods
shll
dec
mov
cld
mov
xor
add
jbe
or
mov
inc
xchg
push
mov
adc
mov
nop
jecxz
xor
lods
ret
or
push
cmpsl
inc
sysenter
mov
je
inc
cwtl
pop
stc
sti
mov
or
push
pop
clc
fstpt
add
push
mov
lods
imul
jecxz
daa
mov
or
call
pop
ret
mov
and
xchg
pop
mov
pop
xor
testb
lea
add
fsubl
pop
lahf
add
sbb
add
mov
cmc
ret
inc
out
push
or
push
rorb
js
xor
bound
outsb
mov
xor
clc
jns
inc
cmp
ja
sbb
stos
icebp
sahf
lds
lahf
outsb
push
adc
mov
adc
movsl
inc
or
fprem1
xor
adc
dec
push
xchg
rorb
mov
xor
adc
out
cld
adc
push
cwtl
mov
nop
rolb
jmp
orl
sub
jle
push
or
mov
mov
xor
inc
mov
ja
loop
in
push
or
ja
dec
add
add
sub
in
int3
pop
daa
mov
les
cmp
dec
sbb
inc
jge
andb
and
or
jno
xchg
lcall
cmp
or
sti
jno
lock
les
fcomi
or
inc
add
inc
cmc
dec
in
je
nop
xor
ret
or
outsb
adc
pop
fistpl
loopne
repz
sbbb
scas
mov
inc
inc
shlb
daa
imul
inc
add
mov
cmp
hlt
lods
aaa
jo
pop
dec
push
inc
int
add
rcrb
mov
jo
inc
in
mov
jns
sete
push
rep
xor
sub
mov
adc
jae
loopne
adc
xchg
repz
test
jb
scas
push
daa
mov
out
xor
lods
mov
and
mov
leave
xlat
shlb
lods
popa
jl
hlt
jge
xor
pop
and
add
add
test
ret
stos
cmp
in
adc
imul
testb
fucomip
mov
hlt
fdivrs
cltd
lds
sbb
cmp
sbb
jmp
adc
jbe
pop
mov
dec
sbb
sbb
fbld
mov
xor
mov
bound
fs
lods
and
push
pushf
mov
shlb
movsb
add
or
repnz
jo
xor
ret
aam
jmp
loopne
push
xor
add
dec
add
add
adc
int
pushf
aad
adc
sbb
push
loope
jns
bnd
pop
pushf
rorb
or
or
xorl
fsubrl
mov
push
adcb
sub
pop
out
push
sbb
or
xchg
inc
pushf
push
xchg
or
sub
or
pusha
sbbl
xchg
pop
cltd
push
push
sti
cmp
jbe
cmp
xor
or
adcb
pop
int3
shr
inc
loopne
xor
mov
lea
mov
jno
xor
mov
adc
mov
inc
repz
inc
filds
arpl
or
mov
and
and
or
stc
sbb
pop
shll
mulb
pusha
xchg
sbb
lea
icebp
cmp
cmp
or
mov
add
rorl
rcl
or
xor
adc
mov
mov
dec
test
adc
imul
mov
flds
jne
imul
nop
push
cmp
sub
jnp
data16
imul
daa
jg
ret
cwtl
mov
in
je
dec
rorb
fistpl
bound
dec
add
loopne
inc
fistpll
push
ds
shlb
std
xchg
aad
fmuls
xchg
lds
pop
daa
fsub
out
andl
cwtl
mov
cmc
ficoml
and
pop
and
and
sbb
bound
sub
rcl
jecxz
pop
xor
sub
stc
jne
sarl
inc
stc
popa
outsl
add
jne
int3
arpl
cli
dec
mov
and
push
sbb
jnp
lret
adc
push
lock
or
pop
or
cmpsb
pop
and
cld
or
cmp
sbb
enter
test
pop
fisttps
in
adc
push
add
and
cmc
dec
fisttps
xchg
pop
xlat
leave
or
dec
and
movb
out
xchg
mov
lcall
movsl
inc
adc
out
loope
inc
cmp
mov
or
call
xor
add
pop
add
lcall
sub
push
hlt
adc
lock
adc
sub
lret
adc
aaa
sub
sbb
in
pop
icebp
inc
xchg
push
cld
mov
lcall
inc
inc
stos
mov
and
scas
cli
out
and
inc
add
lods
jl
sub
xor
or
sub
fcomip
lock
mov
inc
add
leave
push
xchg
std
or
mov
ss
std
dec
inc
cmp
jo
loopne
dec
cmp
pop
int3
movsl
int3
mov
call
sub
loop
mov
ffreep
out
adc
jecxz
data16
push
cmpb
ret
sub
mov
inc
cmp
idivl
add
fwait
mov
jnp
stos
mov
rcr
add
cmp
ljmp
fs
xchg
sub
insb
sub
dec
push
inc
cmp
daa
cmpsl
ds
push
pop
mov
nop
popf
cmpsb
xchg
mov
daa
pop
xlat
int3
stos
pop
jg
lret
push
adcl
lods
popa
mov
jl
push
push
inc
mov
mov
pop
add
xor
je
bound
dec
push
jle
xchg
rcrl
sub
pop
clts
mov
data16
mov
or
sahf
mov
cmp
mov
xchg
add
lods
dec
out
jg
imul
sub
loop
push
push
flds
movsl
or
or
adc
movsl
adc
xor
dec
xchg
jmp
xor
pop
xor
loopne
xlat
sahf
inc
outsl
mov
ret
aam
push
or
inc
je
push
inc
popl
xor
loopne
add
fcmovne
inc
ret
daa
mov
enter
iret
cmp
mov
adc
pop
sarl
add
mov
mov
addl
lea
es
nop
loop
and
adc
push
jb
int3
movsb
nop
mov
and
enter
add
jge
les
or
and
jmp
pop
lds
iret
xchg
scas
mov
jle
pusha
insb
loope
stc
and
jnp
sar
es
rorb
nop
cld
jl
mov
clc
mov
inc
sti
inc
stos
ret
shl
sub
lods
mov
sub
leave
lods
out
fdivs
sub
lds
adc
sub
mov
add
inc
into
add
insl
dec
pop
mov
jmp
ficoms
adc
and
cwtl
xor
popa
out
xlat
pop
cmp
fildl
cld
loope
adc
mov
int3
neg
sub
mov
xor
jl
lods
sahf
dec
jle
in
add
rorl
mov
push
or
push
and
mov
push
test
add
sbb
pop
push
add
pop
enter
std
enter
jb
and
and
roll
mov
sbb
or
es
dec
adc
xor
lock
and
add
sbb
adc
or
push
xor
leave
cmpb
je
cli
cmp
inc
testb
jl
enter
addb
pop
add
add
push
and
add
jo
lods
hlt
lods
push
add
xor
mov
and
adc
xchg
add
sub
aas
test
test
and
cmp
cmpsl
mov
push
cs
test
mov
pop
cmc
mov
xchg
xor
pusha
dec
cmc
add
lods
inc
push
jno
adc
mov
lcall
xor
sbb
mov
adc
stc
adc
xchg
or
mov
add
sbb
mov
cmp
or
movsl
sbb
aaa
jns
cli
dec
loop
and
lds
mov
or
cltd
jge
pop
cmp
scas
fdivl
dec
fsub
inc
es
in
shll
aaa
cld
or
jo
lock
jle
jb,pn
push
sbb
orl
and
mov
test
pop
jp
xchg
sbb
dec
lea
and
icebp
push
std
into
and
jg
push
add
dec
and
addl
adc
lret
add
rcrb
and
and
cmp
or
rcr
mov
mov
jle
sti
shll
dec
push
add
into
ja
cltd
lahf
sbb
xor
jp
repnz
out
or
inc
cwtl
mov
sbb
xor
add
xchg
clc
inc
je,pn
rorl
loope
imul
adcl
ljmp
add
aas
pushf
dec
pusha
mov
dec
and
rcrl
pop
add
push
in
adc
mov
lock
xlat
xor
dec
pop
stos
outsb
and
call
cmp
enter
cmp
movsl
inc
dec
adc
xchg
loope
add
mov
aaa
pop
cltd
or
icebp
mov
jge
and
sub
popf
stos
xor
inc
dec
and
arpl
adc
mov
push
iret
xlat
mov
inc
pop
sub
inc
xchg
inc
enter
ljmp
repnz
out
sub
cmp
adcb
ds
dec
jbe
lds
and
add
mov
inc
xor
and
loop
mov
insb
iret
popa
and
sbb
cli
iret
lcall
dec
add
fcomps
ret
jge
ret
sbb
adc
mov
inc
inc
mov
xor
cmpsb
daa
sub
popl
shll
mov
add
out
add
jmp
ja
or
sbb
stc
and
pop
hlt
jmp
loopne
mov
push
ss
adc
stos
dec
aas
clc
mov
mov
inc
hlt
jecxz
fimull
adc
and
push
loop
pop
mov
inc
add
lock
out
lea
lods
imul
mov
sbb
in
mov
aad
test
and
arpl
call
ljmp
shll
and
rcrb
decl
loop
cmp
andb
add
mov
mov
bound
rdpmc
cmp
lds
adc
daa
inc
and
dec
or
sbb
and
push
rolb
sbb
test
add
add
pop
jmp
sbb
outsw
adc
and
xchg
cmp
je
leave
push
sbb
out
inc
mov
adc
and
mov
cwtl
pop
and
add
sbb
add
shl
pop
shll
jl
shll
adc
mov
adc
negl
xchg
lds
aad
test
jo
mov
pop
nop
bound
sbb
test
les
int3
fists
ret
dec
inc
sub
test
std
adc
xor
mov
inc
dec
rcl
mov
jb
mov
faddl
inc
cmpsl
pop
dec
adc
aaa
ljmp
jecxz
pop
ret
rcrb
mov
jle
push
sbb
insl
jne
ret
enter
dec
jmp
add
add
mov
into
nop
xchg
repz
ret
sahf
test
or
loop
mov
adc
shlb
arpl
test
dec
orb
jae
in
adc
xchg
scas
iret
pop
pop
shl
js
sub
lret
ss
data16
js
or
stos
jge
mov
mov
int3
sbb
pop
mov
dec
dec
loopne
shl
jne
mov
mov
push
mov
adc
pop
std
lcall
outsb
std
xor
ret
mov
xchg
hlt
stc
sbb
cli
cmp
stos
sub
push
jb
add
mov
sbb
push
inc
mov
mov
lret
or
xchg
ljmp
pop
or
sub
push
mov
inc
xchg
je
xchg
fst
andl
and
xor
and
cwtl
andb
loopne
repz
sbb
out
jae
into
mov
cmp
dec
dec
stos
push
sub
push
into
xlat
addb
out
jecxz
cmp
imul
ret
xor
sub
or
and
push
inc
push
cmp
call
and
push
mov
and
or
mov
es
pop
xchg
testl
xchg
and
ss
js
cmp
cltd
sub
push
jbe
sbb
pop
pop
int3
adc
and
or
arpl
stos
and
xor
test
jl
add
mov
and
dec
ljmp
leave
out
int
lock
cld
sub
mov
lods
mov
stc
mov
xchg
popa
inc
out
mov
lahf
js
add
dec
and
out
add
mov
xchg
je
add
test
adc
jne
xlat
shlb
mov
sub
cmpsb
mov
sub
jle
mov
adc
pusha
sub
leave
xor
jmp
sbb
or
inc
out
test
shll
cmp
sbb
sarl
aad
fyl2x
jbe
cmp
add
cltd
add
hlt
jl
rorb
dec
add
ljmp
dec
test
or
mov
inc
jg
leave
xlat
in
pop
inc
add
shl
push
inc
adc
jg
or
pop
pop
mov
push
or
insl
bswap
xchg
mov
test
test
xchg
cmp
add
push
and
push
mov
adc
call
xor
rcrl
mov
add
cmp
or
icebp
int3
iret
aas
jecxz
outsl
lahf
cmp
outsl
fsubs
xor
in
leave
jno
adc
leave
sbb
imul
mov
fildl
cmp
and
jne
cmpsb
nop
mov
je
sub
sbb
ja
orb
xchg
dec
push
fscale
mov
push
je
push
push
push
out
pop
loopne
add
xchg
pushf
js
repnz
mov
imul
push
lea
jmp
and
xchg
jbe
add
sarl
das
push
add
cmp
push
jno
fisttpl
push
inc
cmp
and
outsb
lock
lea
xchg
xor
jg
enter
loop
std
js
cmp
pushf
inc
movsl
sbb
lods
loop
leave
add
ret
loop
andl
loopne
roll
cmp
or
pop
push
push
adc
mov
dec
sbb
xor
test
cmp
cmpsl
shlb
adc
add
add
ficoms
or
push
jg
xchg
nop
ss
test
xlat
xchg
xor
dec
inc
pop
adc
xor
in
xorl
pop
int3
test
lods
dec
scas
icebp
nop
or
or
xor
popf
outsl
push
adc
mov
ret
test
pop
orl
dec
inc
insl
dec
add
mov
mov
sarl
cmp
out
clc
xchg
in
or
push
mov
shrb
mov
push
pop
adc
mov
cmp
xor
ss
clc
lds
dec
inc
xchg
xchg
dec
xchg
jle
inc
addr16
sub
test
pop
adc
cmpl
das
fcompl
test
jno
lcall
mov
js
push
sub
or
inc
adc
loopne
add
add
leave
xor
jae
movsl
ret
cwtl
js
orl
xchg
jp
and
cmp
outsl
adc
mov
fstpl
lods
push
test
test
or
scas
lea
ror
mov
dec
mov
icebp
ret
mov
pop
xor
xorl
je
daa
adc
pop
sub
and
pop
cmp
jp
shll
add
daa
icebp
mov
or
cmpsl
xchg
dec
adc
test
int3
repz
imul
push
inc
inc
xor
and
cld
mov
xchg
adc
dec
cmp
xor
cmpsb
pop
mov
dec
mov
add
or
mov
test
test
add
test
and
inc
and
dec
xchg
arpl
jne
adc
inc
push
dec
mov
cwtl
loop
cmp
dec
sbb
call
pop
hlt
push
je
in
inc
cli
out
lock
push
es
mov
xor
jmp
aas
fidivrl
testl
roll
lds
xchg
and
dec
cld
shlb
mov
aaa
lahf
lcall
clc
lahf
or
pusha
adc
pusha
mov
mov
test
sbb
push
jmp
repnz
push
es
dec
sub
mov
and
mov
popf
movsb
movsl
fiadds
and
xchg
arpl
xor
xchg
call
shlb
inc
cmpsb
or
and
pop
std
dec
mov
cmp
add
dec
sub
out
inc
mov
mov
sbb
jb
cmp
xrelease
jge
jg
aaa
ds
sub
jns
sub
xor
and
xchg
jl
in
jp
cmp
lret
mov
push
push
jge
jle
div
mov
cmpsl
push
imulb
jmp
adc
das
sti
ret
movsl
push
inc
stc
shrb
rcr
enter
push
xchg
movsb
pusha
sbb
aam
popf
or
lods
fcoms
and
test
in
sldt
add
mov
cmp
sarl
stos
pop
push
hlt
aas
and
sbb
enter
imul
mov
pop
xlat
iret
lea
mov
push
imul
mov
sub
and
mov
rolb
or
in
xor
jp
push
clc
sbb
mov
jae
adc
dec
push
xchg
xor
and
ss
lea
enter
dec
subb
mov
mov
mov
rolb
jle
add
push
cltd
fadds
pop
mov
pushf
adc
xor
inc
xchg
cmp
sub
cmpsl
pushf
jno
push
pop
sub
nop
clc
add
push
sbb
subb
test
push
sub
ss
adc
cmp
aad
push
call
xlat
out
aas
sbb
lods
out
enter
je
leave
mov
dec
pushf
lods
cmp
inc
fbstp
stos
push
nop
lods
add
jecxz
mov
xchg
cmp
cmp
inc
pop
loopne
xchg
add
add
add
push
out
adc
add
sub
dec
pusha
sub
and
mov
sbb
hlt
or
push
scas
inc
lret
mov
mov
aad
xor
mov
mov
inc
pop
mov
sub
jb
dec
mov
add
mov
xchg
je
or
sarb
or
cmc
add
stc
mov
jecxz
fsubs
cmp
sti
pop
inc
es
lods
cltd
stos
add
lret
xchg
je
cmp
fs
int3
push
add
mov
les
xchg
mov
cmp
cmp
pusha
out
xchg
inc
rcr
bound
insb
mov
dec
lahf
orl
bound
add
cmp
sub
cld
inc
mov
lcall
cmp
add
or
push
sbb
enter
icebp
adc
adc
dec
mov
mov
mov
out
sti
cltd
mov
in
flds
inc
fwait
arpl
aaa
mov
or
add
aaa
cmc
aam
lock
mov
addr16
adc
lea
sub
jecxz
push
adc
pop
pushf
das
mov
jecxz
scas
xor
and
shlb
dec
jns
movsb
fs
sbb
aas
push
adc
daa
mov
bound
jle
mov
imul
xchg
inc
test
add
add
in
mov
arpl
adc
mov
pop
hlt
adc
dec
or
inc
insl
push
inc
cld
dec
fwait
pop
push
lahf
add
add
cld
xor
mov
or
mov
lahf
dec
outsl
popf
stc
bound
adc
stc
xor
mov
insl
mov
lret
sub
loope
jmp
pop
lods
stc
mov
repz
mov
pusha
push
into
xor
mov
inc
mov
sub
lds
inc
xchg
push
in
xor
mov
subb
cwtl
adc
add
nop
jae
or
rcll
xchg
jecxz
pop
add
test
add
rcll
push
push
push
jmp
fwait
xchg
sub
and
aad
sub
adc
push
repnz
lock
stc
test
std
sti
loope
pop
ss
fcoms
aas
rorl
shll
sub
xchg
psubq
inc
push
es
sahf
loopne
push
sub
in
push
jp
lds
sbb
fimull
js
test
push
jne
je
scas
lret
sub
xor
stos
xor
rcll
ja
xor
or
inc
cltd
fcompp
fnsave
inc
or
jmp
add
pop
and
ror
movsl
shr
mov
add
nop
fs
inc
movsb
jb
mov
mull
fadd
mov
and
xor
mov
xchg
mov
push
mov
test
or
or
add
push
cmc
arpl
dec
pop
popa
sub
xchg
div
imul
dec
and
pop
sub
fistpll
add
cmovne
adc
and
je
jae
loope
sub
stos
adc
mov
lret
lods
cmpsl
repz
pop
cmpsb
mov
in
js
mov
sbb
mov
jo
add
movsl
push
and
sub
andl
xchg
jae
xorb
adc
lds
nop
pop
dec
jmp
stos
or
stos
push
fs
push
push
jmp
lret
inc
cs
sub
mov
xor
xchg
push
out
and
and
pushf
cmp
sub
dec
pusha
stos
fdivrs
test
sub
cltd
inc
sub
mov
mov
push
pop
fnstsw
out
dec
mov
ret
dec
in
adc
divb
xchg
add
loope
jbe
imul
loop
sub
mov
rcr
adc
push
and
mov
mov
clc
rol
arpl
lds
jb
lods
in
jle
push
and
adc
and
cmp
dec
inc
pop
push
jb
xchg
mov
add
mov
inc
popf
arpl
notb
leave
sbb
sti
adc
adc
clc
xchg
scas
sahf
mov
pop
pusha
enter
ficoms
dec
push
adc
mov
and
fwait
inc
mov
loopne
pop
and
push
aas
sub
int3
aaa
cwtl
rorb
lahf
fsubrs
add
pop
pop
test
mov
in
cltd
jo
inc
adc
xchg
movntq
out
hlt
add
loope
push
cwtl
adc
add
sub
push
mov
inc
pop
iret
pop
test
cmp
es
enter
popa
sbb
jnp
fadds
push
pusha
loopne
cmp
pop
mov
xorb
sbb
xchg
or
add
inc
fs
xor
add
and
loop
push
nop
ds
fdivrs
popf
cmp
pusha
inc
ret
xchg
adc
push
push
xlat
add
ds
sbb
add
or
out
mov
test
add
cmp
cmpxchg
push
mov
orb
push
or
pop
inc
outsl
and
push
incl
cmp
mulb
adc
jecxz
cmp
sbb
push
sbb
sbbl
sub
popa
push
mov
sbb
ljmp
mov
dec
dec
pop
push
sbb
push
jbe
mov
pop
imulb
lock
leave
rorl
aam
push
sti
cli
and
xor
cmpsb
fnstcw
xor
push
xchg
inc
push
mov
aad
in
sub
add
dec
pop
sub
cmp
cs
xchg
mov
pop
mov
aas
addr16
fisubs
inc
mov
inc
add
pop
aas
inc
or
xchg
pop
movl
faddl
dec
mov
repnz
push
cmp
scas
pop
ja
jne
orl
add
jae
pop
mov
pop
and
lods
outsl
inc
dec
outsb
add
test
ss
jo
out
fsubrs
leave
icebp
or
lahf
imul
popf
popf
fwait
cwtl
mov
cld
mov
movsb
lods
cmp
mov
loopne
dec
dec
fwait
push
sub
cmp
sub
push
push
xchg
loop
and
lcall
add
add
movsl
arpl
mov
aad
stos
and
movsb
add
les
xchg
pop
inc
add
push
sbbb
test
ds
add
lahf
arpl
mov
lret
push
data16
and
dec
dec
jae
aam
xor
inc
addb
or
jne
dec
jmp
out
repnz
pop
sbb
or
scas
fdivl
push
pop
in
orb
ljmp
into
das
pop
test
in
mov
mov
or
jge
push
adcb
mov
pmuludq
xchg
andl
xchg
adc
int3
push
or
xchg
or
lcall
xchg
loope
js
rcrl
sbb
leave
mov
sbb
sub
out
add
or
or
add
into
insl
inc
in
les
inc
rorl
lock
icebp
clc
pop
aas
sbb
xor
adc
rcr
sbb
iret
xorb
cmp
dec
rorb
pop
mov
fbld
mov
adc
mov
cltd
popf
cmp
punpcklbw
sbb
test
sbb
mov
or
push
jae
jecxz
pop
add
fildl
popf
push
jle
push
inc
jae
mov
sbb
out
test
or
aam
lods
cmp
fld
popf
jge
outsl
add
jle
cli
push
push
adc
aas
xor
nop
mov
jg
push
dec
pop
adc
adc
xor
mov
xlat
lods
sbb
addb
nop
dec
inc
push
and
shll
cltd
cwtl
outsl
movsl
daa
xchg
mov
lret
mov
iret
and
mov
xchg
out
mov
leave
ret
xchg
fs
xor
mov
dec
sub
leave
jecxz
scas
jmp
or
shrb
cmpsl
cmpsl
outsb
pop
inc
xor
sbbl
ffreep
outsl
xchg
test
or
or
or
push
es
sbb
out
inc
addb
and
or
xor
nop
jno
int3
idiv
mov
inc
mov
ror
repz
test
jmp
push
mov
xchg
iret
add
add
mov
jne
xchg
jb
lret
mov
inc
jns
xchg
sub
xor
jne
ret
rclb
nop
fldcw
leave
or
push
in
push
xchg
or
je
adc
dec
xlat
aas
in
scas
inc
or
adc
add
cmpsb
rcl
cltd
inc
wbinvd
mov
pop
lock
push
xchg
js
fistpll
leave
sahf
imul
out
lods
mov
repnz
jbe
aam
in
mov
inc
jle
ret
inc
push
dec
imul
pop
xchg
cld
add
jbe
add
mov
mov
lods
inc
mov
pop
mov
fidivs
mov
push
jp
outsb
add
clc
shl
pop
pause
pop
test
sbb
loope
pop
push
add
cld
mov
call
rcll
mov
bound
xchg
cmp
add
daa
mov
mov
push
clc
cmp
aam
cmpl
sub
mov
sti
and
mov
sub
add
push
scas
push
sbb
jnp
int3
cwtl
das
add
add
in
out
mov
jmp
mov
pushf
jb
out
adc
xor
movsl
mov
aad
inc
ljmp
pusha
leave
push
imul
sbb
shrl
add
dec
bound
or
mov
std
jge
add
push
mov
mov
mov
push
test
pop
push
jo
insl
and
sahf
cltd
and
test
lds
inc
ror
punpcklbw
daa
and
sub
adc
clc
fildl
sbb
jnp
push
inc
lods
testl
xorb
sub
dec
add
and
add
enter
pusha
push
mov
or
jno
lock
or
cli
add
or
js
pop
test
aaa
hlt
and
inc
fnsave
ret
dec
aaa
adc
pop
rolb
lock
inc
inc
mov
inc
push
ja
jo
adc
mov
scas
xor
jb
pusha
push
ss
push
lock
sahf
test
or
mov
ds
inc
shl
dec
cmp
add
add
pop
mov
jb
ja
fisubs
rclb
xor
pop
jg
enter
pop
push
mov
or
sub
or
repnz
pop
mov
cmp
int
lret
mov
or
in
out
fdivl
mov
cli
push
pop
adc
push
push
jo
push
push
inc
and
adc
mov
inc
dec
mov
daa
jle
notl
in
add
bound
xlat
add
imul
movsl
adc
jo
adc
add
aad
test
cmp
or
fistps
jecxz
and
cmp
sub
cwtl
adc
dec
stos
xchg
outsl
mov
and
ja
xchg
fcomps
clc
ss
push
add
add
rclb
xor
fistpl
dec
jmp
fwait
xchg
add
or
int3
imul
pop
push
fidivl
popa
popf
jg
adc
int3
add
sbb
xchg
and
paddq
lds
das
daa
leave
mov
bound
imul
repnz
ret
pop
mov
jge
add
inc
test
scas
fistl
cmp
xchg
add
imul
adc
ret
inc
les
stos
xchg
and
xchg
ja
sbb
fsqrt
lahf
or
cmp
dec
push
insb
or
testb
test
mov
pop
pop
xchg
lods
inc
inc
loopne
lcall
cmp
test
sbb
inc
popa
xor
aad
fidivrs
sbb
dec
jle
jp
popa
idivb
mov
aad
mov
popa
scas
insl
push
lds
jecxz
add
sub
test
xor
mov
jg
cld
mov
dec
cmp
shlb
scas
mov
adc
jb
xchg
add
test
cmpsl
and
and
xor
ss
mov
rclb
imul
mov
nop
test
bound
add
mov
inc
push
mov
sub
inc
test
mov
int
push
test
inc
and
aam
ret
or
popa
sbb
inc
sbb
sbb
xor
scas
sub
pushf
mov
xor
jge
fsubrl
jl
stos
pop
mov
xchg
stos
xchg
popf
aam
and
xor
mov
pop
add
xor
pop
stos
jge
jns
ljmp
cmpsb
aaa
sub
jle
loope
or
add
loope
mov
mov
test
xchg
movsl
lret
or
and
cmpsb
ret
adc
adc
xor
add
xchg
xor
cli
fsubl
sbb
xchg
mov
jae
and
lds
loop
enter
sbb
inc
into
mov
push
mov
sbb
popa
bound
sub
add
sbb
push
xchg
dec
outsl
pop
ljmp
ljmp
sub
xor
and
out
xchg
scas
insl
mov
incl
cmp
hlt
xchg
lods
adc
mov
addr16
xchg
mov
pop
dec
cltd
movsb
jp
out
dec
xor
lret
sti
adc
jle
ljmp
ds
adcl
jle
add
out
mov
cmp
add
stos
addb
fwait
xchg
or
push
popa
inc
pop
addb
pusha
lds
fadd
sub
loope
loop
inc
pushf
dec
in
fstl
fs
sub
cmp
mov
jno
and
or
jmp
fisubs
aas
sbb
out
loopne
push
mov
lods
scas
jge
mov
add
and
mov
and
inc
sbb
mov
sti
lret
adc
jne
test
dec
jp
imul
fcoml
fwait
push
dec
inc
rorl
add
mov
push
add
mov
mov
sahf
or
inc
jb
loopne
add
adc
adc
addb
call
js
xor
mov
jne
subb
lcall
loop
adc
and
cmp
cld
jmp
mov
lret
inc
mov
mov
mov
fcoms
sbb
popa
sub
movsl
xchg
push
iret
pop
mov
jl
js
iret
mov
or
rcll
adc
arpl
xchg
adc
roll
in
pop
rolb
mov
icebp
mov
dec
jl
and
loopne
and
clc
mov
fisttps
jae
inc
pop
je
mov
dec
xchg
mov
jnp
stc
and
inc
into
mov
subl
xchg
bound
fdivrp
or
sbb
lea
pop
stos
cmp
xchg
loope
enter
mov
ss
outsb
out
rclb
add
or
fsts
and
jns
jecxz
or
stos
std
loopne
call
mov
movsb
aaa
mov
xor
roll
cmpsb
shl
sub
je,pt
or
add
or
add
mov
xchg
out
test
mulb
cltd
lock
inc
hlt
and
ret
test
mov
jb
mov
jge
repz
mov
jg
push
or
jmp
outsl
sahf
leave
xchg
add
xor
ret
add
movsl
ret
cmp
jae
xchg
cmpsl
push
into
ja
push
test
cmpsb
mov
arpl
or
mov
jns
loop
ficoml
gs
arpl
pop
cld
stos
push
dec
sub
cli
mov
test
sbb
push
pop
xor
xchg
push
shlb
sbb
mov
or
iret
cmp
sub
and
and
and
push
xchg
add
fisubs
movl
ss
shll
dec
flds
xlat
inc
pop
jge
pop
fisubs
arpl
lret
adc
test
xchg
sbb
sbb
and
xchg
or
cmp
xchg
push
in
rcr
jne
rcl
mov
mov
imul
xchg
inc
cltd
in
cmpsl
jbe
xchg
in
daa
xor
xor
xchg
sbb
pop
push
ret
mov
jle
bound
out
cmpsb
mov
pop
sbb
pop
fcomps
in
fsubs
add
xor
imul
sarl
xor
sbb
movsb
sarl
aas
imul
fdivrl
jp
pusha
sbb
or
add
cmpsl
or
lcall
push
in
inc
repz
mov
cltd
push
lock
and
mov
in
aad
push
dec
or
stos
inc
stos
sbb
xchg
pushf
xorl
mov
lods
daa
or
roll
mov
push
jb
push
cmp
xor
vprotb
rolb
js
adc
pop
or
lods
nop
adc
mov
imul
aaa
andb
movsl
pop
pop
es
into
push
je
cmp
inc
or
add
clc
adcb
mov
sarl
aam
mov
inc
pushf
xchg
dec
jnp
lret
cmp
xlat
mov
and
adc
lods
inc
xor
cmp
xchg
or
mov
shl
adc
lods
dec
xor
test
outsl
sbb
or
sbb
mov
jno
rcl
dec
or
sub
mov
jge
push
mov
adc
mov
xchg
std
mov
push
add
orl
popf
shl
pop
adc
xchg
mov
adc
ret
push
push
pop
mov
xchg
ss
push
subb
xchg
jae
dec
sti
cmp
jl
loopne
inc
jmp
xor
lahf
outsb
je
divb
les
lock
sub
movsb
mov
fmull
jle
in
out
and
xorb
orb
pop
mov
sbb
dec
jo
xchg
in
cltd
cmp
movl
pusha
jb
xchg
jnp
call
lds
addr16
inc
loopne
inc
inc
inc
pop
scas
push
sti
jge
pop
ds
cwtl
popf
cmp
adc
lea
and
xchg
xor
repz
test
das
inc
adc
icebp
cmp
adc
aad
or
popf
jge
cmp
dec
adc
cwtl
popa
mov
sahf
xchg
cvtps2pi
and
nop
pop
imul
popa
jae
jae
mov
dec
xor
sub
mov
dec
mov
xchg
mov
dec
cmp
pop
jno
mov
cld
outsb
and
shll
and
lods
std
adc
pop
test
dec
and
mov
lods
mov
iret
dec
out
in
xchg
inc
and
push
and
cwtl
mov
lret
ret
xchg
stos
push
dec
loop
sub
popa
stos
in
movsb
adc
inc
jns
or
sub
sbb
add
test
enter
repz
mov
mov
xchg
pop
addl
fisubs
mov
aas
dec
mov
pusha
scas
sarb
aaa
adc
outsl
pop
in
jno
test
outsl
fdivrs
pop
jo
cmp
or
inc
cld
cmp
das
fnstenv
fmuls
aad
mov
out
mov
pop
je
scas
stos
enter
mov
fdiv
push
lret
add
and
fdivr
hlt
mov
push
ror
rorl
insl
fldt
inc
xchg
lret
xchg
clc
out
lret
xor
add
add
push
or
mov
cli
add
sahf
fistpl
fcoms
push
push
pop
sahf
in
cltd
adcb
loopne
not
pop
add
adc
push
xor
cs
out
xor
xor
adc
mov
dec
jl
push
add
into
xor
pop
ret
xchg
and
sub
sbb
aad
jae
pop
cmc
call
aam
shr
mov
in
mov
dec
in
aad
jns
push
or
xchg
inc
pop
neg
bound
sbb
fistps
inc
adc
or
and
das
dec
pusha
push
xchg
inc
xchg
cmp
loop
push
fimuls
xor
inc
jno
or
inc
repnz
lret
les
aam
stos
xchg
xor
fnop
stos
sub
jl
mov
pop
in
pushf
push
dec
add
adc
lcall
add
dec
jno
fldcw
mov
inc
adc
lds
jae
clc
or
adc
and
movsb
sarl
mov
divl
add
xchg
pusha
ficompl
push
rorb
shrl
push
lret
stos
orl
out
jbe
mov
sub
lret
push
push
inc
and
push
roll
dec
int3
add
push
popf
mov
sub
les
lcall
sbb
pushf
jno
test
jg
or
and
arpl
dec
out
cwtl
rcrb
pop
das
dec
pop
pop
push
or
jp
xor
ds
adc
into
cmp
stos
push
sbb
scas
imul
pop
mov
mov
or
jmp
cmp
scas
sbb
pop
sbb
test
push
js
gs
test
bnd
sbb
repnz
mov
or
add
adc
adc
mov
iret
jb
stos
cmp
dec
adc
rorb
stc
lret
xor
xor
inc
imul
fildl
out
movsb
imul
and
popf
dec
cmp
int
inc
das
leave
cmp
fwait
and
pop
and
addl
inc
push
lods
negb
cmpsb
negl
sbb
data16
adc
insb
repz
inc
push
in
jp
adc
xor
add
add
fsub
xor
mov
dec
adc
xchg
sbb
repnz
nop
add
sbb
mov
shll
mov
and
jnp
jg
faddl
cmpb
fwait
lea
dec
arpl
push
int
sbb
les
in
mov
xchg
leave
cmpsl
test
lock
pushf
dec
in
movsb
pop
xchg
dec
sbb
xor
xor
shlb
cltd
dec
xchg
or
jnp
adc
push
inc
mov
push
add
adc
jbe
sahf
cmp
xchg
popa
fbstp
sbb
jnp
bound
loop
idivl
out
sub
icebp
lea
or
jne
mov
int
or
icebp
lahf
xor
xorl
outsb
adc
mov
je
xchg
adc
test
dec
dec
sbb
jo
dec
sbb
mov
sub
jmp
xor
sub
into
cmp
add
lods
mov
add
dec
daa
mov
cmp
sbbb
movsl
arpl
add
pop
js
mov
cmpsb
scas
lcall
and
scas
push
inc
mov
dec
int3
test
cltd
lcall
jo
inc
data16
pop
movsb
or
cmp
fwait
add
mov
sbb
mov
and
stc
mov
in
je
or
inc
repz
icebp
pop
dec
rorb
std
ret
mul
jecxz
dec
andb
adcb
rcrb
in
in
test
das
xchg
jmp
out
aas
test
add
mov
pop
xchg
loop
adc
call
xor
jp
les
and
xor
push
or
sub
movsb
repz
xor
mov
scas
and
sbb
xchg
mov
lds
call
dec
mov
and
xchg
mov
inc
orl
dec
mov
jbe
je
repnz
in
orb
into
fdivs
sub
xchg
cmpb
test
test
mov
jmp
ja
fidivl
sub
mov
mov
mov
inc
aad
int
push
sub
cmp
cmpsl
add
test
add
loop
js
and
movsb
jne
loope
lock
andb
shll
jle
test
jmp
subb
jecxz
adc
xchg
push
outsl
pop
push
movsb
jge
inc
add
mov
out
adc
adc
jns
adcb
xchg
mov
mov
int3
jns
mov
clc
enter
pop
jne
lock
mov
xchg
mov
pop
mov
mov
and
enter
daa
cmpsl
test
mov
jmp
xor
adcl
scas
push
test
movsb
orl
loope
mulb
test
pop
lahf
nop
sbb
mov
insb
lds
les
fistpll
orl
sub
pop
pop
sub
mul
mov
orl
repz
add
add
bnd
add
add
add
add
std
lds
sti
mov
movsl
inc
inc
les
inc
rorb
iret
faddl
testl
scas
mov
jmp
jmp
pop
pusha
pop
mov
xorl
pop
popa
jns
adc
push
dec
scas
push
arpl
mov
cltd
iret
mov
adc
add
cmp
adc
mov
push
and
jmp
cmp
out
sub
inc
mov
xor
inc
jle
repz
lods
ret
mov
jne
fwait
hlt
ret
mov
cwtl
shr
and
mov
movsl
aam
nop
mov
dec
mov
mov
lea
jl
or
push
cmp
ja
and
test
and
xchg
pop
or
mov
es
cwtl
stos
adc
mov
push
jbe
mov
mov
pusha
mov
mov
out
pop
dec
mov
mov
dec
loop
inc
and
push
push
test
jb
sub
add
mov
add
aas
daa
add
dec
nop
in
xchg
cmp
or
test
sbb
cmp
cmp
addb
xor
nop
mov
shll
test
add
jmp
lock
ret
inc
xchg
add
cwtl
ret
adc
incb
xor
inc
rorb
inc
scas
cli
mov
adc
adc
mov
dec
sbb
xor
pop
push
jo
add
mov
jo
je
stos
daa
xor
xor
cli
push
jle
jp
mov
aam
lahf
and
lods
pop
xchg
sub
inc
movsl
in
lret
jmp
sbb
cmp
pop
push
add
fwait
cmpsl
mov
leave
test
cmpsb
cmp
into
adc
mov
mov
xchg
out
cmp
sbb
cmc
int
iret
xchg
inc
and
mov
mov
jle
adc
sbb
or
call
lds
das
hlt
fsubl
lea
mov
movntq
out
out
pop
pushf
xor
add
inc
insb
test
mov
popa
loope
xor
mov
inc
and
incl
sbb
jae
in
bound
gs
or
inc
cmp
fucomp
sbb
mov
lret
test
or
xor
ljmp
ljmp
ss
test
cmp
add
in
loopne
loop
push
push
aam
lock
enter
dec
call
and
pop
push
mov
push
sub
push
lret
sti
xchg
repnz
push
push
ret
addl
sbb
push
xor
jmp
rcrl
lret
xor
xchg
add
xchg
stc
adc
inc
test
add
sbb
adc
xchg
adc
push
push
mov
gs
loop
add
nop
and
out
add
rcrl
dec
lahf
cltd
adc
mov
or
cmp
outsl
xchg
and
ja
mov
pusha
xlat
mov
inc
cld
xorb
sub
fstpt
mov
add
add
insb
sbb
cmp
popf
jno
xchg
movsl
icebp
adc
jae
testl
mov
add
test
push
mov
fistpl
adc
cmp
pushf
push
sbbb
or
movb
mov
ret
jne
iret
jb
or
push
mov
sarb
and
sbbb
fisttpll
and
and
out
cmp
mov
nop
xor
sbb
xor
lahf
add
nop
and
fcmovne
lcall
stos
sbb
fidivrs
and
loop
ret
mov
inc
subb
ret
push
mov
adc
fdivrl
push
aas
and
roll
loop
test
shlb
pop
repnz
adcb
mov
pop
aaa
mov
jecxz
fsts
push
hlt
data16
add
leave
push
int3
pop
jle
xchg
daa
dec
or
lahf
dec
cld
add
out
mov
pop
nop
lock
add
in
cmp
push
test
add
inc
icebp
movd
inc
sbb
outsb
imul
pushf
pusha
jnp
pop
mov
or
icebp
dec
push
stc
mov
inc
cmpsl
push
dec
add
add
int3
mov
ja
add
pop
je
and
pop
sub
adc
ret
xlat
pusha
je
or
push
mov
arpl
aad
scas
or
rol
fistpll
push
or
xor
das
adc
mov
mov
and
dec
icebp
xor
push
loopne
push
inc
pop
sub
inc
addr16
jno
and
sarl
sub
xchg
js
stos
cwtl
push
inc
mov
cmpsb
xchg
sbb
and
ret
pop
movsb
pop
dec
mov
mov
cmpsb
or
xchg
inc
jbe
add
into
push
mov
push
sbb
push
sub
aam
mov
popa
pushf
dec
inc
int3
out
sub
push
xor
ds
jmp
arpl
sub
push
add
fs
shll
je
inc
aad
pop
mov
jnp
mov
enter
pop
jae
add
repnz
mov
push
adc
adc
add
sbb
insb
cmc
sahf
and
xchg
popa
add
adc
or
xchg
adc
pop
repz
add
inc
in
test
or
xor
scas
into
mov
aaa
push
and
and
bound
orb
mov
lcall
dec
sub
push
push
lcall
bound
mov
stos
dec
fistpl
and
sbb
insb
addb
mov
lahf
roll
mov
adc
imul
push
pop
add
adc
repz
xor
loop
push
bound
scas
inc
jl
add
push
or
xor
inc
rcrb
inc
pusha
ds
xor
and
sti
popa
sub
mov
push
in
add
fidivs
lret
add
mov
sub
mov
std
lds
sub
ficoml
in
mov
test
jmp
arpl
repz
inc
jle
adcl
push
push
loop
lds
push
in
pushl
jb
pop
call
rcl
or
cmpb
clc
push
mov
pusha
jle
insl
jg
and
pop
cmc
mov
jle
sbbb
fwait
inc
inc
arpl
xor
sbb
adc
mov
mov
jne
xor
mov
cmp
rcll
or
xlat
cmp
jne
inc
in
cmp
adcb
and
jnp
mov
sarl
pop
push
xor
scas
testl
mov
pop
das
das
call
lcall
fwait
add
imul
inc
xchg
cmp
aad
js
cmp
cli
cmpsb
lods
adc
js
dec
cld
jle
or
inc
xchg
adc
addr16
in
jmp
and
repnz
pop
cld
jl
jl
outsl
inc
adc
and
mov
pop
test
push
adc
sub
ja
inc
or
sbb
in
orb
cmp
mov
dec
xchg
out
mov
bnd
lds
sbb
pop
mov
add
rcrl
pop
inc
mov
imul
push
pop
jb
aad
rcrb
jne
jp
test
xlat
dec
fnstenv
rclb
xchg
dec
lock
ficoms
inc
fs
mov
push
mov
mov
sub
pop
and
cwtl
or
pop
adc
add
aad
mov
clc
imul
in
inc
sub
shrl
dec
mov
pop
jle
nop
or
xchg
jo
mov
or
lahf
arpl
adcb
inc
imul
lret
das
mov
and
sbb
mov
sub
xchg
sbb
inc
cmpsl
fldl
adcb
mov
repnz
cmp
or
dec
or
ret
ljmp
test
das
jo
icebp
nop
add
test
ja
adc
popf
push
out
adc
fs
or
leave
dec
and
add
outsl
xchg
pop
iret
loop
xor
mov
mov
dec
mov
jo
mov
mov
scas
rorl
hlt
xorb
adc
push
addr16
mov
mov
adc
mov
pop
mov
dec
mov
outsl
dec
in
jp
jge
fisttps
mov
mov
xchg
add
adc
xor
scas
xor
xchg
leave
and
subl
fs
ret
pushf
inc
jecxz
gs
std
loop
jl
mov
pop
inc
push
shlb
adc
dec
lea
mov
ffree
out
cmp
pop
rcll
jmp
repz
out
pop
push
adc
clc
test
inc
push
les
rolb
sub
adc
pop
or
rcrl
sbb
out
cmp
inc
inc
cmp
fcoml
sub
cltd
cmpsl
subb
cmp
jecxz
test
add
and
cwtl
mov
xchg
sub
andb
jl
mov
scas
add
mov
dec
jo
rolb
mov
out
into
inc
pop
je
pop
and
lods
iret
aaa
pop
jne
pusha
int3
mov
pop
cwtl
mov
test
outsl
jecxz
xor
hlt
cmpsb
dec
aas
adc
inc
or
pop
dec
cmp
mov
movsl
lock
or
std
xchg
or
pop
push
orl
xchg
push
mov
es
sub
sub
mov
pop
cmp
cmpl
xchg
insb
push
outsb
jle,pt
sti
mov
mov
aaa
dec
adc
adcl
cmp
dec
pop
mov
sbb
and
or
xor
mov
cmc
mov
mov
jbe
mov
sbb
gs
repnz
enter
jge
inc
mov
pusha
jns
adc
inc
add
mov
fs
push
insb
adc
push
pushf
rorl
ror
push
dec
sahf
mov
push
jo,pn
dec
jge
and
xorb
pop
inc
movsb
flds
cmc
mov
mov
mov
pop
adc
in
jne
pop
fadds
adc
dec
inc
insb
shll
push
pop
nop
les
pop
jno
hlt
rcll
fdiv
mov
leave
mov
movsb
adc
aas
and
xlat
sbb
orb
jge
push
mov
orl
cmp
out
mov
cmp
add
lock
cltd
add
scas
and
inc
das
js
inc
cltd
subb
pusha
enter
add
add
cmpsb
loop
dec
inc
adc
ret
pop
fdivrs
sti
negb
mov
ljmp
cmp
fadds
xchg
push
outsl
lret
pop
push
sbb
jb
pop
and
xchg
pop
inc
sbb
inc
shll
sub
adc
mov
outsl
out
std
cmpsl
addl
stc
call
push
lea
and
inc
xor
xchg
and
adc
or
in
cltd
sbb
and
aaa
jmp
psubusb
std
cmp
or
fstpt
out
add
gs
outsl
mov
dec
jae
ret
pop
xchg
sahf
nop
mov
inc
xchg
pop
inc
inc
pop
add
fs
ja
lock
cmc
pushl
push
dec
add
add
cmc
les
test
push
push
in
or
add
mov
inc
outsb
add
or
adc
decl
cmp
xchg
inc
stos
adc
mov
and
cli
dec
mov
test
jl
dec
adc
jl
mov
and
mov
test
jmp
jle
xor
cmc
or
xchg
ret
add
loop
xor
int3
inc
and
mov
aad
addb
das
dec
pusha
ljmp
mov
cwtl
lds
in
sbb
xor
lret
pop
push
push
mov
sub
out
lret
xor
lret
jo
xchg
enter
loop
dec
jns
xor
inc
movsl
pop
cmp
and
mov
jecxz
adc
bound
cmp
loope
out
paddd
mov
sahf
hlt
jp
dec
mov
pop
nop
cmp
ret
jmp
dec
mov
popf
pop
sub
and
in
and
test
loop,pt
cs
loopne
inc
dec
out
js
push
mov
jg
fadd
xor
lea
jae
mov
dec
inc
push
adc
sub
xor
mov
and
shrb
daa
adc
adc
movb
inc
mov
ret
xchg
push
aaa
enter
or
xchg
jl
inc
xchg
push
es
inc
inc
fs
clc
push
adc
inc
jge
mov
aas
fwait
sub
push
push
inc
ficompl
mov
setno
adc
fisubrs
loopne
pop
xchg
cli
sbb
xchg
mov
inc
adc
adc
or
loop
cmc
mov
and
cltd
ror
inc
cmp
stos
xchg
insb
stc
xor
ret
inc
inc
xchg
sub
js
clc
xchg
push
xchg
lods
push
nop
jo
mov
push
test
test
dec
xchg
icebp
imul
cwtl
push
pushf
imull
ljmp
fcmovne
pop
add
jg
fdivrs
insb
in
mov
push
mov
and
mov
pushf
loope
in
xchg
in
sub
dec
movl
pop
loopne
rcrb
mov
add
cli
add
lea
jmp
mov
xor
jne
sbbb
mov
loopne
sti
adc
inc
pushf
inc
inc
push
and
pop
sbb
das
mov
add
fbld
add
inc
push
lods
mov
or
pop
and
sbb
mov
ret
cmp
inc
fmuls
rcll
xchg
into
daa
loopne
jmp
scas
dec
sub
adc
out
rorl
jecxz
lds
inc
jecxz
or
adc
xor
cwtl
dec
jne
cld
jmp
cld
inc
arpl
inc
add
or
inc
inc
outsl
sub
cmp
mov
adc
push
jge
xor
push
insl
fistps
pop
inc
push
fwait
int3
fs
fimuls
lea
jae
jmp
insl
cmp
inc
jbe
scas
fwait
xchg
mov
push
iret
icebp
sarl
pop
adc
xchg
das
cs
add
cmp
stos
or
jnp
or
loope
filds
fists
sub
mov
dec
pop
or
dec
das
je
popa
lods
mov
or
cmc
adcl
nop
cmpb
jmp
lods
cwtl
mov
add
sbb
inc
fisubrs
movsb
push
push
cmp
add
mov
cld
fdivrp
cmpsb
mov
push
les
xor
dec
push
xchg
sti
add
pusha
std
fldenv
adc
dec
lret
or
insl
or
lods
sub
and
and
aam
or
mov
sbb
aaa
sub
adc
mov
stos
ds
adc
jae
jp
sub
cmp
out
iret
fwait
je
gs
fisubrs
lea
and
es
pop
scas
divl
aas
xor
pop
repz
daa
roll
test
add
lock
pop
jle
adc
sbb
ljmp
outsl
faddl
je
push
addr16
jb
pop
lock
add
add
adcb
movsb
subb
loopne
xchg
add
mov
es
pop
sub
xor
idivb
popf
inc
sahf
pushl
fildl
jg
out
ss
inc
xor
adc
mov
mov
call
js
adc
jge
push
cmp
push
mov
nop
mov
mov
mov
addb
lsl
sub
mov
clc
or
sub
loop
out
movsl
rorb
clc
movsb
dec
sbb
jae
and
adc
leave
mov
add
xchg
push
jge
pusha
push
mov
mov
mov
cmp
cmp
gs
xor
enter
loop
inc
sub
test
leave
mov
pop
ret
data16
fmulp
jmp
and
mov
int3
es
stos
shlb
push
inc
out
nop
jbe
jbe
outsl
mov
adc
jne
adc
and
aam
mov
stos
shll
les
add
mov
and
push
jbe
imul
mov
lods
and
mov
std
pop
xchg
test
das
jl
jle
mov
or
aaa
inc
ret
fsubrl
mov
mov
mov
fdivl
iret
fisubl
nopl
jle
pop
xorb
sub
fdivs
sub
in
xchg
or
jo
cmp
and
mov
adc
sbb
loopne
idivl
cmpsl
ss
sbb
mov
mov
sub
andb
xor
test
push
dec
je
popf
or
pop
mov
add
nop
je
inc
lret
jp
fwait
pop
push
pop
add
add
mov
or
addb
lods
popa
xchg
xor
fisubs
jmp
jns
shrl
push
fldcw
out
sarl
fwait
add
lds
outsl
jl
cmp
and
movsb
push
mov
sub
mov
insb
add
loope
inc
jo
jne
js
xor
sahf
call
jne
pop
sbb
test
xor
nop
or
inc
sbb
fstpl
loop
shrb
cmc
or
cmpl
dec
sbb
cmc
call
mov
cwtl
or
stos
cwtl
xchg
pop
movsb
mov
mov
ret
aam
mov
add
or
add
fildl
sbb
rolb
cli
sbb
sbbl
cmpsb
call
loop
and
xchg
cmpsb
and
js
addb
loopne
in
xlat
fistpl
cmp
and
jo
jp
addr16
or
jne
ss
cmpsb
mov
ret
pop
je
jnp
mov
push
mov
les
adc
sbb
test
and
mov
push
jg
and
or
popf
imul
cmp
dec
jne
sub
xchg
push
into
xchg
and
insl
add
sbb
sbb
int
adc
mov
lods
or
add
or
dec
lcall
sahf
inc
pop
ret
imull
hlt
or
ljmp
mov
push
mov
call
cmpb
mov
adc
inc
add
sti
pushf
les
mov
mov
dec
push
adc
cld
shrl
in
call
push
mov
decl
pop
push
pop
js
sub
inc
cli
mov
mov
mov
push
cs
pop
add
iret
scas
or
or
adc
sti
addb
shlb
jne
xlat
mov
xchg
jo
es
push
add
mov
lret
pop
dec
mov
xchg
sub
ror
add
inc
dec
jecxz
je
or
push
mov
fs
inc
push
orl
test
inc
hlt
inc
cmpsb
inc
movsl
inc
lret
aad
adc
mov
dec
mov
jns
scas
cwtl
sarl
adc
adc
les
popf
jl
jmp
outsl
popa
repz
dec
adc
mov
jle
pop
and
xor
cmp
sbb
mov
jae
popa
and
repz
popa
pop
jbe
pop
mov
out
xchg
sbb
loopne
add
or
xchg
or
dec
pop
mov
cmc
cmpl
ret
push
pop
add
addl
add
dec
push
add
movsb
je
inc
mov
add
sub
icebp
fists
loope
pop
dec
jno
inc
enter
jae
mov
dec
xchg
and
add
in
aaa
inc
push
sbb
aas
and
mov
mov
jne
push
insb
xchg
es
pop
sbb
test
in
bound
jbe
nop
cmp
sbb
push
std
xlat
mov
adc
dec
adc
test
ret
test
sub
add
lds
sbbl
scas
adc
pop
mov
ret
push
and
add
inc
fidivrl
jecxz
inc
mov
out
or
icebp
into
out
xchg
xor
shr
les
inc
mov
adc
sarl
insb
loope
test
ss
mov
mov
mulb
subl
sarb
es
loopne
dec
push
add
mov
or
adc
stos
cwtl
mov
in
cmp
jecxz
es
push
add
xchg
lock
andl
and
jge
insb
jbe
loopne
and
jmp
cmp
lret
dec
lret
pop
adc
add
mov
push
cli
jnp
or
enter
in
mov
xchg
test
pop
jg
adc
cwtl
pop
xor
sub
fildl
push
jns
push
inc
jmp
dec
pop
add
inc
ret
push
sub
addr16
nop
or
nop
mov
repnz
ret
jl
xlat
flds
inc
mov
sub
pop
pop
js
cmpb
push
lret
mov
mov
out
fimuls
adc
not
adc
into
mov
test
sub
adc
cli
sub
out
xchg
lods
add
and
cmc
jl
aam
push
add
roll
sub
inc
jle
push
cmp
loope
add
xor
and
cmpsl
lods
stc
add
aad
test
les
xchg
add
and
sarl
call
inc
and
repnz
into
ret
sarb
dec
or
jo
or
or
mov
ds
pop
xchg
out
jl
jge
lock
icebp
mov
inc
cmp
cmp
mov
ds
inc
dec
pop
pop
push
ds
in
pop
icebp
stc
add
and
jl
mov
lret
mov
js
outsl
arpl
dec
xchg
jo
sbb
je
out
jp
dec
movl
jl
iret
adc
xchg
int
cwtl
in
movsb
cmpsb
jne
add
adc
test
or
cmpsb
fcom
popa
lahf
or
lods
popf
xor
jmp
jb
andb
test
jle
loopne
mov
sbb
jmp
adc
inc
into
js
pop
mov
xchg
aam
xor
push
and
mov
lds
repnz
jp
iret
jae
out
sbb
mov
insb
sbb
mov
xor
mov
test
mov
test
cmp
dec
aam
xchg
inc
mov
mov
fsts
stc
inc
test
loope
push
ds
cs
cmp
lods
xchg
cmpsl
pop
sbb
pop
into
fadds
outsl
test
xchg
and
sbb
cmpsb
inc
cwtl
daa
test
push
sahf
mov
movl
mov
cmp
frstor
sbb
pushf
ss
dec
outsl
lcall
testb
jmp
inc
or
inc
pop
xor
dec
or
sbbb
cmp
mov
js
in
mov
ljmp
inc
or
test
cwtl
jp
or
iret
or
push
push
push
mov
mov
sub
loop
lock
xchg
sarl
fcmovu
add
test
xchg
jae
and
pop
into
es
cmp
mov
or
cmp
popf
add
pop
inc
inc
pop
leave
fdivl
mov
cmpsl
clc
cmc
jnp
add
push
lock
mov
cwtl
stos
arpl
add
add
inc
inc
mov
sub
test
mov
ret
out
sti
enter
dec
mov
jae
or
xchg
jge
add
add
pop
pop
jg
jbe
fwait
dec
mov
les
cmp
stos
xchg
and
lods
stos
roll
lds
cmp
lods
add
inc
mov
xor
or
mov
sbb
les
push
lods
orb
pop
mov
fnstenv
popa
xchg
enter
cmp
flds
in
outsb
sbb
pusha
and
mov
mov
adc
mov
sbb
adc
sbb
sub
sarb
getsec
addl
adc
dec
adc
jb
testl
adc
xchg
mov
les
std
dec
add
movl
adc
imul
inc
xor
push
mov
mov
inc
push
xchg
jmp
lret
sti
cmpsl
pop
imull
fwait
and
fidivrs
or
jns
pusha
inc
fldenv
inc
jne
stc
pop
les
mov
sbb
adc
inc
test
stc
mov
push
or
ja
dec
mov
mov
xor
jp
inc
push
daa
leave
imull
das
test
sub
cmp
movsl
movsb
in
xchg
xchg
in
or
sbb
sbb
jl
enterw
cmc
dec
cmp
xchg
pop
jp
test
cmp
into
dec
lock
dec
imul
stos
xor
aas
xchg
popf
call
dec
cmc
in
xor
inc
std
leave
lahf
ret
stos
ficomps
mov
ret
xor
mov
sbb
and
xchg
adc
mov
and
sarb
cmpsl
and
push
sub
enter
pop
xor
test
clc
mov
mov
popa
mov
mov
mov
lock
subb
adc
add
jl
adc
sub
add
das
pusha
sbb
std
in
xchg
cmp
adc
mov
mov
fiadds
adc
data16
andb
push
pop
int3
push
cmpb
push
mov
mov
mov
adcb
sbb
popf
inc
xor
and
pop
addl
inc
addr16
inc
dec
cwtl
and
imul
cld
xorl
into
mov
xor
xchg
xchg
jno
sub
push
push
pop
nop
and
lcall
jmp
aas
and
es
sub
cmp
mov
xchg
mov
mov
add
sbb
adc
cmp
adc
mov
pop
mov
dec
pop
arpl
test
push
cmp
adc
aas
js
push
xlat
adc
adc
mov
cmp
sub
aad
aad
repz
adc
lahf
sub
call
inc
push
mov
shll
inc
xlat
jp
inc
call
xor
lock
outsl
jmp
or
pop
xchg
cwtl
divb
mov
pop
add
pop
ror
mov
dec
push
enter
insl
mov
test
sbb
pop
aam
inc
stos
call
testl
adc
mov
inc
inc
dec
adc
xchg
aam
scas
lahf
pop
add
push
pop
cs
sub
aaa
leave
mov
loope
enter
push
and
mov
out
adc
mov
in
inc
jbe
rcrl
jae
push
xor
xor
sub
je
in
jo
mov
push
add
roll
adcb
xchg
pop
inc
mov
gs
sub
dec
xchg
mov
cmp
inc
xor
dec
les
adc
xor
mov
inc
andl
mov
jbe
dec
lahf
lods
or
mov
leave
sbb
and
jp
adc
mov
in
sub
fs
add
scas
add
loopne
or
sbb
cmpsl
add
icebp
and
test
je
loope
xchg
movsb
mov
jp
push
inc
outsl
jl
sbb
push
outsl
lods
cmovae
fwait
cmp
jl
test
adcb
cmpsb
sub
out
mov
mov
push
incl
sti
daa
xchg
in
push
jge
inc
int
mov
orb
ret
fisttpll
inc
shrb
out
jecxz
test
shlb
pop
psubusb
outsl
sti
xchg
lock
jne
lret
adc
mov
and
push
mov
xor
mov
sub
clc
enter
cltd
inc
xchg
mov
bound
pop
push
adc
push
xlat
ret
adc
loopne
fbld
mov
inc
inc
xchg
inc
lock
in
xchg
inc
cli
or
and
cmp
das
or
imul
xor
fmuls
inc
js
fistps
pop
xchg
sub
add
dec
and
shrl
call
or
push
incb
mov
ja
add
pop
push
aaa
fs
add
inc
sbb
or
and
cs
mov
jmp
sub
jne
je
repnz
and
xchg
push
adc
or
adc
addr16
in
lods
add
sub
add
daa
add
push
out
adc
jo
mov
cmpsb
std
add
inc
mov
jns
xchg
or
test
sbb
sub
push
dec
mov
stos
sbb
xchg
call
push
aad
sub
enter
test
or
aas
sbb
inc
loop
repz
push
push
adc
lds
mov
push
lahf
lret
push
jecxz
mov
xor
int
adc
leave
cmp
or
pop
loope
push
inc
enter
jge
and
cs
pop
add
mov
loopne
inc
mov
stc
and
inc
xor
pop
inc
pushf
mov
inc
mov
push
xor
push
lret
sub
outsl
fcomps
adcb
sub
jno
sub
xor
add
add
mov
pop
cmp
cmp
repnz
lock
in
xchg
cmp
push
cmp
f2xm1
jp
push
add
or
int3
mov
imul
inc
addb
and
mull
cld
adc
jp
imul
insb
jge
dec
or
lcall
ret
aad
popa
out
push
push
pop
rolb
or
bound
out
adc
cmp
mov
nop
add
adc
mov
dec
fst
or
push
xlat
js
out
jge
shlb
cltd
and
lods
mov
xor
dec
add
inc
pop
sub
xlat
push
cmp
popa
mov
rcll
ljmp
inc
inc
adc
mov
push
mov
xor
push
mov
int3
mov
add
mov
popa
idivl
adc
xor
enter
sub
xlat
and
sbb
and
dec
nop
mov
stos
lahf
and
add
add
push
int3
adc
pop
lock
or
loopne
add
add
test
mov
push
xchg
sub
aam
and
out
mov
inc
cmp
test
jne
and
dec
insb
or
or
sbb
test
cmpb
addb
pop
divl
lahf
jp
nop
lret
mov
xor
fcompl
add
out
subb
bound
out
out
mov
xor
nop
test
ficomps
fistl
mov
test
mov
add
enter
sbb
and
inc
sbb
mov
int3
jb
mov
test
mov
inc
int3
sub
adc
sbb
mov
push
mov
add
sbb
popa
sub
xchg
add
ret
pop
orb
pop
pop
mov
pop
testl
pop
mov
inc
aas
sub
sbb
mov
ja
clc
in
xchg
inc
sbb
or
outsb
jo
test
lea
popa
xchg
out
sbb
notl
adc
mov
xor
orl
jl
sbb
mov
jnp
or
push
cld
enter
and
stos
fwait
lds
push
enter
lahf
test
pop
push
mov
or
repz
es
and
sub
add
fiadds
push
jno
in
inc
stos
mov
lcall
pop
mov
pop
call
dec
mov
cmpsb
add
andb
shrl
mov
xlat
push
pop
pusha
stos
sub
shlb
cs
mov
jle
lret
xor
pop
or
xor
rorb
push
xor
xor
loopne
adc
test
test
dec
xchg
fstps
add
sbb
les
add
addb
cwtl
pop
push
sub
and
fistl
mov
jecxz
and
xchg
js
lea
mov
iret
dec
sub
xchg
enter
or
jmp
inc
jge
popa
dec
push
sti
pop
inc
sub
out
out
mov
and
pop
repz
sub
add
push
ret
and
lcall
in
mov
imul
in
aas
or
das
and
out
cmp
cmpsb
in
rcrl
gs
shrl
xor
push
cwtl
into
add
mov
cvtps2pd
insb
push
ljmp
icebp
adcl
nop
pushf
cld
push
sub
sbb
jnp
add
sbb
mov
xor
push
test
lahf
movsb
movsl
fstl
ljmp
xchg
mov
pop
test
and
jmp
xor
scas
mov
rol
lea
jg
jge
insl
fs
aad
call
aas
jo
int3
push
negb
outsl
add
shrl
in
call
fstps
pop
jl
sbb
add
repz
scas
push
sbb
mov
scas
ficomps
cld
adc
xor
lret
in
and
mov
test
sbb
jns
es
lcall
js
inc
mov
clc
sub
sbb
push
mov
pop
shlb
jge
orl
xorb
inc
sub
out
xchg
out
cmc
imul
aad
rorb
push
inc
ret
xchg
or
sahf
xchg
xorb
int
pusha
or
xchg
test
dec
aaa
lea
sub
jo
pop
std
loope
adc
xchg
xor
jmp
cmpsb
mov
pushf
jmp
cmp
mov
pusha
add
or
adc
add
fists
jl
mov
hlt
or
bound
xchg
jle
mov
imul
rolb
shll
fs
push
aaa
xor
cmp
mov
pushf
loop
or
aaa
jae
shll
cli
loope
ljmp
imulb
jmp
ficoml
dec
mov
lret
jle
sbb
and
mov
ror
push
pop
mov
cmpsb
jle
pop
aaa
sub
push
into
xor
and
xchg
push
adc
sub
add
mov
jmp
or
inc
lods
loop
or
ds
sub
enter
mov
jle
leave
pop
loope
enter
mov
sbb
lret
sahf
dec
dec
mov
int3
lea
mov
es
std
jg
cmp
or
movsb
mov
and
push
mov
cmp
out
push
sbbl
push
add
movb
incb
pop
push
subb
jns
add
xchg
aaa
cmp
cmp
test
and
jle
push
in
and
jae
outsb
xchg
jno
cmpl
popf
scas
jae
shrb
or
add
fmull
jo
andb
out
int
shl
out
jno
shlb
xor
sub
or
pop
call
push
add
movsb
mov
dec
loope
mov
sbb
pop
lock
ds
add
mov
cmpsl
and
pop
shll
test
xor
or
ret
mov
or
adc
dec
pop
xor
out
pusha
xlat
cld
loop
shr
mov
std
enter
sti
mov
push
icebp
sahf
scas
mov
pop
sub
and
jb
sub
mov
inc
nop
mov
ds
xlat
out
mov
mov
stc
xchg
je
add
ror
rcll
jg
and
rorl
xchg
inc
dec
lcall
decb
stos
sub
leave
sbb
add
les
jmp
mulb
sub
xchg
lock
outsb
in
push
mov
in
cmp
stos
cmp
add
std
jb
daa
mov
add
repz
cwtl
push
or
imul
cmp
int3
and
adc
pop
pop
push
xchg
clc
push
aam
mov
lods
out
xor
or
je
or
je
in
fcmovu
movsb
inc
xor
mov
push
pop
adc
iret
inc
mov
push
adc
push
xchg
inc
or
mov
lods
aad
pop
sbb
es
sarb
jl
add
in
adc
xchg
jle
push
adc
pop
xchg
clc
loope
stos
dec
dec
add
ds
iret
into
fisubl
or
sub
push
sub
add
jmp
out
mov
std
into
xor
clc
xor
shrb
lret
add
push
sub
mov
ret
sbb
lahf
ljmp
xchg
sub
inc
inc
test
les
and
in
stos
clc
pop
jl
rorl
jns
mov
cmp
das
dec
jp
movsl
adcl
fdivs
mov
dec
dec
ror
cwtl
loope
lcall
in
dec
icebp
adc
out
imul
pushf
cwtl
inc
inc
shrl
loope
add
mov
addl
lock
gs
popa
fcompl
cmpsb
adcl
int3
jnp
sub
int3
lods
adc
push
inc
sub
arpl
sar
push
xorl
test
jp
popa
inc
and
pop
xchg
sub
jecxz
push
mov
iret
ljmp
push
cmp
xor
in
out
sahf
xchg
mov
or
imul
rclb
outsl
stos
nop
mov
orb
aaa
dec
jb
and
sub
mov
xchg
cmovbe
sbb
stos
cmp
es
adc
imul
arpl
xor
mov
xor
pop
mov
xor
stc
jge
xor
ds
loope
adc
or
and
jmp
sbb
mov
roll
flds
inc
mov
xor
xchg
sbb
jmp
xchg
cmp
ljmp
push
sub
sub
add
add
push
mov
xchg
or
addl
xchg
jno
cmp
mov
shrl
fwait
pop
add
scas
or
in
rcrb
add
xor
test
mov
adcb
dec
jbe
enter
sbb
cmpsb
loopne
push
pop
pop
fistps
stos
xor
add
mov
jbe
dec
xchg
scas
inc
pop
and
dec
fs
adc
stos
and
je,pt
lods
test
pushf
push
and
inc
hlt
add
push
and
cmpsl
addb
adc
cmc
fcompl
sbb
dec
out
mov
leave
adc
or
or
aas
cli
data16
sbb
test
ja
mov
pop
aam
sti
les
loop
pop
mov
push
jb
push
icebp
sub
mov
pop
pop
subb
movsb
push
adc
in
sub
add
gs
jp
xor
jl
out
and
dec
xlat
cli
testb
dec
enter
pop
inc
rcrb
jns
adc
mov
push
lods
insb
jecxz
ljmp
adc
inc
pop
sbb
arpl
mov
add
test
mov
adc
sti
mov
mov
leave
xchg
fisttpll
adc
movsl
or
xor
lock
push
addr16
adc
xchg
pop
aaa
jl
or
clc
jno
add
mov
orl
inc
or
jno
adc
pop
insl
xchg
shll
dec
mov
dec
xor
nop
inc
jecxz
cmpsl
sbb
aad
adc
ret
and
mov
or
ja
mov
xchg
or
xor
mov
mov
cmp
push
add
imul
xor
or
gs
enter
mov
fisubs
pop
ds
push
je
add
jae
lods
out
ss
movsl
push
dec
in
and
sub
ja
fs
jp
cli
fs
mov
fs
stos
push
adc
clc
cli
into
in
add
add
outsb
jno
push
adc
sti
sahf
sbb
add
dec
sub
daa
cmp
aam
dec
sub
mov
sbb
push
sub
dec
push
test
ds
pop
cmc
sbbb
cs
sub
pop
adc
xor
movsb
inc
fcoms
mov
jl
outsb
pop
data16
jge
inc
scas
scas
pop
push
iret
xchg
out
rcrb
sbb
pusha
add
aam
test
test
and
mov
dec
fucom
add
add
jmp
int3
push
and
jmp
push
aam
sbb
clc
addr16
mov
xchg
pop
rcr
mov
xchg
jno
imul
xchg
adc
test
lcall
mov
xchg
lods
xor
pop
mov
or
or
dec
xor
and
and
sub
and
sub
mov
and
lods
mov
cmpsl
hlt
imul
add
or
push
jno
push
or
fldcw
rol
xor
jg
cmpsl
jge
adc
sub
js
insb
add
sub
ja
decl
xor
out
outsl
aad
adc
icebp
add
add
incl
cld
in
popa
adc
inc
jo,pt
cmp
movsb
add
mov
inc
ret
adc
test
sti
out
test
cmp
sbb
repz
mov
xchg
push
and
pop
leave
ljmp
fistps
shlb
clc
orb
xor
xor
sbb
add
and
pavgw
out
pusha
cmc
into
mov
jbe
pop
dec
xor
movl
jbe
pop
inc
jbe
fs
adc
clc
dec
dec
mov
jl
fcmovnu
lods
ljmp
adc
cltd
jae
xchg
add
xor
inc
xor
pop
loope
dec
inc
cmpsb
xchg
pusha
mov
dec
rolb
cwtl
adc
push
mov
inc
mov
add
sub
add
sbb
inc
add
addl
xor
call
xchg
stc
in
inc
aam
sbb
lret
inc
ja
ja
dec
add
add
popf
rcl
xchg
sbb
sbb
pop
dec
xchg
or
adc
ret
inc
jns
test
gs
fs
push
mov
ret
incb
fists
mov
jno
aad
shll
mov
rcll
mov
out
out
mov
jecxz
push
jl
adc
loop
dec
pop
sbb
adc
lea
pop
cs
add
imul
mov
and
and
shr
pop
push
or
push
divb
sbb
mov
push
sbb
pop
in
mov
or
fisubs
les
add
bound
in
sbb
negb
rclb
inc
outsl
or
insl
mov
pop
mov
sbb
cmp
xchg
cmpb
sbb
lret
outsl
sub
adc
add
add
inc
add
call
mov
sub
je
xor
jle
push
mov
add
scas
rclb
cmp
push
sub
nop
mov
call
lods
dec
bndstx
sbb
mov
jb
es
sbb
jl
pop
lock
inc
repz
add
adc
pusha
lds
fbld
out
frstor
aam
sbb
pop
andb
pushf
nop
xor
js
sub
lret
xchg
gs
testl
adc
pop
cmp
popa
mov
lea
pop
ret
aaa
adc
jl
inc
adc
add
xor
ss
xchg
arpl
lock
fwait
inc
and
sub
pop
pusha
test
sbb
popf
lods
mov
or
pop
ljmp
and
pusha
movsb
and
cwtl
jno
pop
popf
inc
in
sub
push
std
push
dec
push
popa
dec
xchg
pop
jle
pop
adc
rcrl
cmc
movsb
ds
mov
xchg
pop
pushf
jo
test
sub
xchg
or
fidivrl
mov
shrb
dec
icebp
outsb
mov
cld
scas
inc
cmp
cmpsl
push
adc
lret
std
jnp
adc
pushf
xchg
call
enter
pusha
xor
inc
in
and
pop
es
mov
repz
daa
insb
in
jne
add
mov
loopne
adcl
cmp
dec
out
jne
ret
sbb
mov
arpl
in
loop
push
xchg
pusha
jl
pop
add
or
rolb
inc
lea
sbb
addl
test
test
pusha
clc
xchg
andl
xor
dec
nop
lods
test
or
sub
fwait
or
mov
pop
dec
aad
mov
xor
cmp
cmpsb
roll
push
out
add
xor
xchg
icebp
add
push
arpl
xchg
inc
xor
js
movsb
loop
sub
test
fs
lahf
mov
addb
dec
sub
fs
je
adc
arpl
out
lea
push
shl
pop
or
mov
test
adc
cmp
and
xchg
sub
jmp
aas
inc
aas
addl
adc
sub
jb
rolb
jecxz
adcb
and
es
xchg
les
jl
int3
add
lret
sbb
sbb
mov
sbb
and
sub
aaa
mov
mov
jnp
dec
adc
inc
sub
xchg
fdivrs
xchg
fnsave
jle
jnp
loope
mov
loop
hlt
lds
movsl
jmp
flds
jecxz
sbb
or
jecxz
jae
dec
in
mov
mov
in
adc
or
xchg
mov
aam
push
sbb
loop
es
aas
mov
mov
leave
cld
cmpsl
add
dec
and
shll
mov
and
nop
inc
cmp
sub
mov
dec
mov
lock
push
mov
and
mov
jmp
push
and
rolb
sti
outsb
inc
outsb
cmp
sbb
xchg
and
xchg
pop
push
outsl
adc
cmp
std
xor
rcr
lods
int3
cli
dec
outsl
sbb
pop
movsb
add
mov
add
icebp
pop
adc
inc
mov
call
in
cmc
sbb
imull
adc
mov
dec
popf
add
xor
mov
sbb
je
cs
icebp
mov
cmc
adc
fistpll
adc
lods
xor
cli
rcrl
push
add
push
jecxz
xor
mov
sub
dec
cmp
mov
subb
jb
movsl
call
fstps
hlt
sub
out
pop
add
orb
push
lcall
sbb
pop
jl
xor
subb
mov
shrl
or
xchg
cmp
cs
pop
insb
out
add
cli
add
and
adc
and
xchg
pop
out
adc
lods
push
popl
lcall
add
add
pop
sbb
push
testb
add
movsb
dec
xor
cmp
jp
iret
cmpsb
leave
cld
out
mov
jl
int3
shlb
mov
or
ds
jle
repz
cmpsl
jbe
inc
test
arpl
push
dec
sti
iret
inc
jecxz
mov
in
insb
inc
sub
fadd
popa
push
iret
sub
imul
dec
adc
xchg
adc
in
mov
xchg
or
mov
sbb
xchg
xor
or
inc
test
xor
mov
inc
dec
adc
xlat
out
bound
stos
and
xor
sarl
sub
push
and
jge
add
movsl
fwait
mov
sarb
fistps
pop
mov
clc
xchg
lds
ja
sub
mov
lret
inc
jge
jno
inc
or
in
in
cmpsb
mov
mov
imul
and
lea
jp
dec
or
pop
sub
inc
les
insb
mov
adc
sti
xchg
into
push
push
mov
inc
jo
adc
xchg
iret
imul
push
or
pop
push
clc
cmp
mov
popf
pop
sub
aas
mov
jns
push
cs
pop
stc
cmp
frstor
mov
shrb
jmp
loope
adc
and
rol
popa
and
jmp
jecxz
call
and
mov
add
cs
cltd
push
imul
gs
pop
inc
imul
testl
xor
mov
faddl
lods
fstl
xor
fs
aas
and
dec
or
int3
data16
push
nop
add
lds
mull
and
andb
cli
dec
mov
xchg
sbbb
xor
push
mov
mov
pop
pop
or
xchg
out
movsb
filds
movsb
and
icebp
adc
mov
push
mov
mov
out
stos
jl
mov
andl
inc
pop
mov
ja
add
out
sub
movsl
stc
scas
sahf
popf
push
or
or
xchg
sbb
adc
lods
std
or
xor
int3
cmpsl
stc
addr16
in
mov
adc
ja
flds
xlat
mov
mov
stos
das
mov
and
mov
or
sahf
shlb
mov
enter
mov
out
aad
add
lock
movsb
popf
mov
ret
fildl
es
cmc
inc
rorl
mov
push
push
mov
lock
bound
jp
or
jl
shrb
fisubl
sub
test
lret
dec
push
mov
push
inc
add
int3
and
bound
xchg
bound
into
into
pop
cs
pop
and
adc
in
dec
pop
outsb
xchg
push
sahf
jg
das
pop
icebp
xor
add
inc
aas
sub
mov
lods
jae
mov
mov
out
idivl
test
pop
call
imul
pusha
mov
push
test
lcall
lcall
mov
adc
mov
jmp
sti
in
imul
mov
stos
insl
pop
mov
adc
push
in
jp
adc
mov
jbe
lret
mov
mov
gs
sub
call
jge,pn
outsl
dec
inc
mov
xor
repz
mov
lods
es
adc
push
dec
xorb
mov
push
mov
arpl
push
int3
pop
les
mov
mov
outsl
aad
mov
pop
push
sbb
mov
rcrl
add
add
add
in
xchg
mov
out
sbb
ret
out
test
pop
jge
xor
jle
xchg
pop
mov
lret
sar
sarb
addr16
adc
push
xchg
push
rcll
add
pop
into
repnz
pop
or
xchg
sahf
cmpsl
scas
lahf
andl
sub
xor
add
dec
mov
out
jbe
int3
pop
adc
xchg
sub
fisttps
sbb
in
jnp
jns
mov
xlat
add
bound
lods
loope
cmp
adc
or
repz
inc
mov
push
popa
ret
xor
lea
nop
addb
cwtl
cltd
sbb
mov
div
out
jge
bound
das
add
jmp
into
xchg
pusha
movsl
xchg
dec
pop
fmuls
xor
jle
pop
cld
and
sti
loope
jle
mov
pop
inc
mov
nop
jge
sub
ss
adc
mov
inc
dec
mov
scas
xchg
adc
add
addb
sbb
outsb
shr
aam
xlat
xchg
pop
or
cmp
sub
mov
test
xor
mov
mov
xor
jnp
lahf
aas
test
push
stc
lahf
loop
ret
jle
fsubrs
mov
push
jne
and
mov
cmp
push
ds
adc
scas
out
xor
and
fisubrs
clc
and
mov
cmc
stos
pop
jp
leave
flds
mov
and
pushf
repz
push
andb
sub
jnp
add
out
jae
sbb
jbe
test
out
js
inc
lret
std
orb
enter
aam
je
subb
pop
sahf
xchg
rorb
and
adc
and
arpl
testl
es
outsl
lea
arpl
cmc
lcall
int3
or
loope
bound
rol
pop
je
sahf
mov
loop
cmp
rcll
add
std
mov
dec
lds
ret
push
mov
push
notb
out
cmp
dec
cmp
lods
in
fildl
orb
mov
xchg
in
and
nop
frstpm(287
adc
aad
scas
pop
push
bound
jge
les
push
test
inc
sbb
addr16
andl
cli
int3
js
outsb
cmp
lcall
fisttpll
scas
ds
inc
push
lret
pop
add
xor
ficompl
repnz
push
and
test
mov
mov
ja
inc
loopne
sub
xchg
out
repnz
lcall
push
int
xchg
mov
leave
cmp
jnp
mov
dec
cmp
adc
les
sub
orl
mov
ljmp
lret
ficompl
cmp
rcr
gs
xchg
jbe
adc
adc
inc
shlb
cmp
cmp
pop
lds
les
sbb
inc
iret
pop
inc
mov
out
mov
sbb
popf
pop
pop
lock
pop
pop
pop
pop
xor
cmpb
pop
in
jmp
pop
dec
in
mov
mov
xor
pop
jle
xchg
mov
rol
jnp
in
and
and
insb
xchg
imul
xlat
fprem1
mov
dec
cs
test
mov
mov
mov
add
mov
pop
int3
test
jmp
das
dec
test
mov
mov
jne
xchg
aas
fst
dec
sub
push
mov
push
and
stos
cmp
sbbl
mov
sbb
pop
xchg
cmpsb
xor
lret
mov
mov
push
gs
cmp
fsubl
sub
cmpsl
lods
cli
icebp
roll
mov
daa
jae
jo
cli
xor
push
jg
dec
pop
mov
int
pop
hlt
addr16
add
cmp
out
lods
mov
dec
or
pop
rcr
push
lret
nop
js
mov
int
push
out
lock
pop
sub
loope
cli
or
addr16
sbb
xor
fimuls
mov
sub
or
push
cld
or
jl
pop
shll
cltd
test
out
pop
xchg
xchg
loopne
and
dec
xor
push
inc
add
jp
dec
ljmp
add
lahf
imul
cmpsb
test
xchg
loopne
add
mov
icebp
loopne
fadds
mov
repz
mov
adc
scas
push
adc
lea
pop
mov
loopne
pop
loopne
fidivrl
lcall
pop
adc
stc
loope
mov
sbb
push
and
les
notl
adc
clc
cs
xchg
push
iret
ljmp
jmp
add
lahf
nop
jl
xor
repnz
dec
sbbl
or
test
movsb
pop
call
jns
sbb
push
adc
or
sbb
inc
xlat
mov
aad
pop
ficompl
jae
test
pop
je
test
hlt
fiadds
mov
lea
dec
data16
shl
cwtl
jp
or
ja
shr
sub
lds
dec
xchg
call
rorb
rcrl
lcall
mov
xor
aad
and
pop
loop
aaa
mov
inc
imul
cmp
mov
sub
mov
js
nop
xchg
cmpsl
mov
and
sarl
jp
xchg
fiadds
decl
mov
mov
jb
adc
xchg
sbb
mov
adc
xchg
jmp
hlt
arpl
nop
mov
arpl
and
jmp
inc
loopne
ficoms
pushf
and
fstpt
mov
movsb
sub
xor
movsb
push
add
cltd
imul
aas
notb
imul
arpl
enter
fisubl
fwait
ja
and
xchg
pop
lods
mov
inc
addr16
or
leave
lods
ret
dec
xorl
rcrl
push
lcall
ror
icebp
stc
mov
add
adc
popf
inc
add
insb
lock
call
mov
pop
call
dec
mov
adc
not
fsubs
and
das
mov
std
js
mull
lahf
sub
mov
iret
test
xchg
mov
popf
or
ljmp
cmp
je
push
cmpsl
inc
mov
fisubs
xchg
repnz
es
dec
push
or
rcr
sub
pop
cld
cmpsb
movl
mov
flds
repz
fildl
mov
push
les
dec
add
mov
je
xchg
cli
jo
xchg
lods
or
faddl
mov
ret
or
sub
cmpsl
mov
xchg
xchg
popf
into
mov
cmp
add
xchg
pop
and
ficomps
in
cmp
lret
call
and
mov
xor
or
dec
fdivrs
cmp
nop
test
mov
mov
push
movsb
jnp
icebp
lcall
mov
movsl
xor
mov
mov
add
cmp
xor
je
or
scas
repz
sti
mov
rorl
dec
xchg
or
pushl
shl
shrl
aas
loop
fsubrp
add
fiaddl
adc
enter
fisttpl
adc
cmp
loope
adc
pushf
xor
mov
les
ss
push
jne
push
lods
in
stos
addr16
jbe
mov
pop
xchg
sbb
cmp
mov
xor
mov
fistl
clc
mov
and
sbb
cli
xor
jmp
pop
and
lods
inc
mov
pushf
loop
jnp
cwtl
cmp
das
test
sahf
stc
leave
jno
and
sub
xchg
faddl
pop
pop
or
xchg
call
xor
out
pop
hlt
dec
into
ljmp
out
sub
mov
inc
cmp
lock
dec
cs
xchg
inc
fcmovnbe
in
gs
add
rep
and
cld
inc
and
inc
leave
pushl
mov
push
lods
lret
pop
sbb
fstpl
pop
mov
movsl
push
sub
mov
negl
jae
dec
mov
sub
adcb
scas
push
out
ljmp
xchg
cmp
sbb
int3
xchg
jmp
ret
mov
mov
and
int3
xchg
lahf
sub
xor
push
aas
sti
lods
cmp
loope
ja
stos
icebp
cmpsb
sbb
push
mov
lret
gs
jg
fcomps
inc
add
sbb
push
cmpsb
mov
iret
mov
fxch
and
pop
insb
push
fidivl
pop
fistpl
mov
cmpsl
push
xchg
or
mov
mov
cmp
pop
xchg
xor
inc
mov
mov
lret
adc
cmp
jp
aad
cli
xor
mov
rol
mov
or
out
pop
cvttps2pi
jecxz
mov
pop
test
mov
mov
mov
mov
fldt
fs
fcoml
test
je
gs
push
push
cwtl
in
jp
or
fisttpl
sahf
movsb
and
pop
pop
lret
in
pop
mov
and
stc
dec
and
cmp
cmovg
std
fiaddl
movsl
cmc
mov
popa
insb
jl
insl
in
shrl
out
fbld
push
push
std
sar
jo
ret
jnp
outsl
cmp
push
ret
mov
int
call
dec
mov
push
shlb
inc
je
clc
dec
scas
xchg
insl
aaa
cmp
fldt
adcb
mov
inc
adc
cmc
pushf
pop
mov
gs
aad
out
xor
push
jbe
push
jmp
icebp
xor
sub
and
int
sbbb
push
enter
cmpsl
add
xor
fdivs
outsl
jecxz
out
xor
sbb
sub
mov
and
lahf
xor
lret
lret
fbstp
inc
xor
xchg
mov
pushf
or
in
dec
fsubr
or
cli
jmp
pop
insl
cli
adc
rcll
out
inc
or
and
xlat
jb
stos
cwtl
popa
cmp
fcomps
rclb
jmp
into
imul
repz
test
mov
mov
negb
pusha
fldcw
ds
sbb
int
test
addl
push
xor
lret
in
popf
jge
int3
mov
scas
pusha
mov
xlat
pop
dec
not
push
aad
in
loopne
jo
pop
adc
sbb
inc
stc
aam
jns
adcl
test
and
in
loopne
inc
in
xor
loopne
jns
nop
ficompl
icebp
sbbl
cs
popw
pop
subl
dec
outsb
pushf
inc
jmp
inc
xor
mov
stos
dec
testl
xor
push
stos
fwait
adc
jb
in
mov
shll
mov
lods
sbb
pop
adc
test
lcall
jae
pop
push
or
xchg
cli
orl
add
aam
ret
mov
and
xchg
les
hlt
sbb
adc
xchg
and
outsb
gs
in
jbe
sub
push
cmp
push
xchg
cmp
sbb
hlt
out
testb
add
clc
cmp
or
pop
jecxz
je
xchg
jge
dec
lahf
ffreep
add
inc
scas
mov
lods
dec
call
into
push
or
mov
enter
test
sahf
fstps
jae
stos
ss
movb
jp
fld
jae
int
jge
imul
adc
inc
stc
nop
mov
push
xchg
ficomps
insl
xchg
orl
leave
mov
add
cwtl
cli
add
scas
mov
mov
popa
inc
mov
insb
inc
xor
dec
jns
ret
sahf
adc
enter
dec
pop
cmpsb
cli
fiaddl
ret
cmp
out
jl
jle
add
mov
faddl
sahf
jae
or
int
das
lea
pushf
pop
jl
int3
popa
cmp
push
sbb
fcompl
mov
jl
inc
ljmp
cmp
xor
mov
sbb
cltd
repz
outsl
rorl
loop
and
loop
imul
movsl
xchg
push
or
fwait
jg
push
add
push
mov
pop
int3
cmp
mov
cli
push
ret
in
push
lcall
rorb
in
xor
divb
mov
dec
mov
shlb
mov
packsswb
inc
loop
subb
lods
aas
inc
mov
mov
lods
push
test
mov
and
sti
cmp
std
inc
aad
pop
add
test
sub
inc
adc
in
sub
sub
dec
popf
loop
pop
or
imull
or
movsl
pop
jns
ljmp
pop
jo
or
inc
dec
jbe
cmp
loop
test
jb
push
nop
sarl
fucompp
lea
jmp
pop
shrl
addr16
lret
push
xchg
mov
inc
pop
cld
subl
pop
mov
lea
fucom
inc
and
push
int
jne
ljmp
jp
add
dec
push
out
popf
jne
shlb
in
cli
fnsave
fldt
out
popa
in
neg
movsb
cmp
jmp
sarl
loop
in
pop
js
js
mov
cmpb
jmp
bound
adc
inc
and
rolb
rcl
movsl
cld
inc
mov
pop
push
jns
sub
data16
test
into
ljmp
jle
aam
rcll
sbb
lods
inc
xchg
xchg
out
into
sbb
test
inc
fidivs
inc
comiss
mov
fs
inc
rolb
sbb
arpl
sbb
cmp
sub
sub
mov
sbb
pop
adc
push
daa
jae
mov
popf
movsl
scas
ret
insl
pop
xor
cmp
cs
xor
sbb
and
hlt
lret
mov
jl
mov
cld
ret
pop
sbb
std
mov
mov
and
mov
mov
cli
jmp
test
mov
push
in
test
jmp
or
mov
mov
inc
sbbb
cmc
mov
leave
push
in
decb
mov
push
fcompl
xorb
adc
mov
xchg
sub
xchg
repnz
jp
jle
mov
sbb
sbb
ficoml
pop
sub
xor
loopne
call
sarl
mov
ljmp
icebp
rclb
dec
mov
in
adc
dec
ds
jmp
jp
or
mov
mov
pusha
mov
dec
popf
orl
gs
mov
dec
sbb
xlat
in
lods
test
std
add
cmp
lea
loopne
jl
and
mov
les
inc
fwait
pop
dec
mov
dec
loopne
jge
mulb
dec
pusha
adc
add
sub
pop
iret
ss
mov
clc
push
sbb
push
dec
jle
pop
aas
dec
push
add
aad
cmp
sub
arpl
imul
fistpll
popf
enter
enter
ljmp
hlt
pop
or
call
fsubs
das
xchg
pop
ds
shrl
les
xchg
pop
fisubl
lock
push
and
mov
insb
std
or
lods
push
and
push
mov
fwait
adc
pop
icebp
test
xlat
or
sbb
xchg
je
sub
cmp
jno
dec
mov
xchg
fidivrl
pop
mov
push
sbb
mov
lcall
insb
addl
fdivs
pushf
mov
mov
xchg
fstpt
inc
into
inc
mov
test
das
xlat
mov
xchg
sbb
sbb
js
sbb
push
mov
dec
and
gs
push
repz
popl
shll
mov
add
testl
cld
xchg
push
jb
jae
jne
mov
cmp
aas
mov
mov
pop
repnz
shlb
xchg
mov
inc
push
jge
jbe
push
add
mov
xor
add
cltd
add
aad
or
lcall
add
sub
movsl
jns
out
rorl
xchg
out
push
cmp
ds
rcll
fwait
push
shll
pop
dec
rol
fsubrs
leave
addr16
push
adc
mov
push
movsb
cmc
xchg
mov
stc
fildll
lock
and
insl
ret
mov
sub
incl
push
cltd
mov
mov
rcrl
sub
pop
cmp
sbb
daa
fs
pop
mov
jg
rcrl
shlb
pop
enter
ss
js
test
fidivl
scas
dec
jmp
fstpl
jae
ja
cmpsl
sti
pop
pop
or
mov
leave
scas
jmp
mov
cmp
push
mov
cs
call
xlat
adc
sbb
fucomi
scas
pop
shlb
insl
stos
mov
movsb
pop
dec
mov
mul
adc
pop
pop
cmp
mov
aas
test
pop
push
dec
mov
ret
repnz
sbb
int
mov
add
pop
or
mov
xor
into
pop
shlb
imul
in
rol
mov
cmp
and
add
pusha
cmc
xor
int3
mov
fld
les
or
mov
xchg
inc
std
popa
aas
or
xchg
imul
sub
xchg
mov
fbstp
lods
xor
xchg
ja
int
incb
rcrl
dec
ss
rep
xor
xor
mov
or
mov
imull
aad
add
mov
pop
dec
cli
arpl
sbbb
sbbl
cmpsl
xchg
into
aaa
data16
add
cmp
out
pop
int3
sahf
mov
les
push
jmp
ret
in
dec
xchg
cld
shlb
out
lds
sbb
mov
mov
push
or
sbb
ud1
pop
xchg
mov
aas
hlt
pop
fbstp
push
xchg
add
subl
into
and
fsubl
leave
and
stc
or
push
out
nop
jnp
push
add
dec
fiaddl
mov
es
scas
popf
xchg
jg
stos
mov
inc
add
js
pop
mov
xchg
popa
xchg
jg
mov
and
xchg
or
cmp
nop
rorb
movsl
pop
mov
dec
clc
enter
aad
js
cmc
mov
jns
sahf
cmp
mov
data16
adc
ret
jae
push
movsb
dec
adc
ja
mov
jno
fwait
inc
pop
xchg
mov
xchg
push
xorb
mov
aaa
in
add
push
adc
int3
mov
stos
jbe
add
mov
ficomps
ljmp
dec
jnp
or
sbb
lods
inc
fildl
push
sbb
call
fdivs
int
inc
imul
pusha
adc
adc
fdivrp
inc
bswap
mov
push
insl
sbb
test
sub
cmpsl
add
in
in
mov
push
in
push
fs
cmp
pushw
notb
in
nop
adc
pop
mull
das
repnz
rol
movb
xor
and
out
sub
cmp
test
jbe
je
std
push
call
mov
xlat
jge
add
std
mov
pop
or
mov
xchg
dec
jbe
in
push
mov
imul
bound
aam
outsl
xor
decb
xchg
sbb
mov
cmp
jmp
cwtl
dec
iret
fdivl
insb
push
adc
pop
lea
jmp
bound
into
pop
cli
sti
add
icebp
pop
es
or
lods
iret
dec
mov
dec
mov
or
loopne
xchg
cmpsb
repnz
mov
movsb
hlt
data16
cmp
inc
loop
int
outsb
lahf
cmpsb
iret
ds
and
push
pop
jns
push
xchg
dec
addr16
mov
cmpsb
cwtl
inc
pop
pop
add
rcrl
mov
push
dec
fsubs
rorl
adc
add
lret
mov
mov
jmp
addr16
sarl
into
adc
movsb
push
ret
mov
mov
lahf
je
dec
das
movsl
popf
lcall
or
fdivp
sub
jae
dec
iret
xchg
fidivrl
lds
xchg
addr16
leave
shll
jo
mov
bound
lock
mov
add
mov
mov
cmp
mov
lea
outsl
mov
mov
aas
and
inc
out
lea
addb
pop
dec
pushf
test
xor
pop
mov
push
testb
lahf
fildl
test
push
add
mov
or
sahf
xchg
cmp
sbb
jmp
scas
stos
and
fiadds
cltd
push
clc
insb
push
insb
test
dec
pop
jno
jbe
mov
pop
xor
aaa
or
test
and
lods
dec
pop
movsb
es
out
adcl
inc
insb
mov
sbb
movsl
dec
pop
js
cmp
xor
jge
repnz
mov
adc
orb
adcb
fdivrs
mov
mov
test
mov
dec
pop
xlat
scas
dec
xchg
pop
jmp
pop
jle
fldl
loopne
mov
fsubr
add
pop
add
mov
sahf
inc
jl
out
sub
repnz
lahf
jmp
mov
and
movsl
dec
or
test
seta
push
mov
mov
lods
jo
push
popa
ret
enter
mov
dec
shlb
imul
ljmp
or
iret
adc
cmp
ljmp
push
test
pop
fucomip
and
xchg
mov
movsb
or
rolb
dec
xor
jo
pop
sbb
fs
and
mov
jo
mov
and
sbb
imul
jnp
mov
addl
or
sahf
dec
ljmp
stos
xor
les
add
mov
lahf
jno
inc
push
mov
or
sarl
orl
lret
pop
ljmp
filds
stc
mov
mull
out
mov
adcb
les
icebp
rcrl
mov
push
movsl
repnz
jnp
cmpsb
cmp
push
pinsrw
sub
lods
out
cmp
xchg
ret
or
adc
push
ljmp
dec
out
mov
mov
flds
sbb
test
dec
cltd
iret
sub
ret
cwtl
outsl
mov
jmp
pusha
lret
arpl
test
gs
jg
ret
jge
jb
xchg
adcb
adc
mov
add
mov
mov
enter
adc
xor
jno
xchg
xchg
cmc
cmpsb
into
add
mov
mov
jns
xchg
xchg
pop
outsb
sbb
out
sti
data16
add
pop
jnp
jle
adc
adc
pop
pop
movsb
jno
cmpsb
cld
push
sub
jg
cld
xor
imul
in
mov
push
jae
adc
cmpsb
lds
and
push
ret
cs
cmp
test
pop
push
out
lea
rcl
imul
xchg
jmp
adc
icebp
pop
inc
sbb
or
mov
fistpl
stos
icebp
jae
xchg
push
imul
add
leave
cmp
ja
ja
dec
lahf
push
rolb
push
cld
jle
clc
loope
push
stc
sbb
dec
lods
add
dec
cmp
adc
jge
inc
bound
or
je
mov
dec
sub
lcall
mov
sub
jmp
sub
movsl
mov
jae
test
inc
push
pop
cmp
mov
je
inc
pop
jmp
xor
ds
out
loop
push
arpl
cltd
jo
cs
pop
cs
cmp
and
lods
adc
cmp
imul
fcomp
negb
jb
xor
push
out
jae
jmp
popf
aaa
jle
stos
xchg
shll
push
gs
mov
pop
dec
call
cli
sub
inc
pushf
xchg
in
nopl
enter
mov
es
adc
cmpsl
adc
sbb
push
mov
sub
jbe
dec
ret
xor
sbb
pop
insb
aam
jmp
mov
jl
jbe
push
in
and
movsb
out
pop
leave
dec
dec
jp
xor
xchg
mov
insl
or
xor
int
push
push
mov
inc
mov
inc
jnp
adc
xor
sub
ljmp
push
mov
loopne
jns
arpl
faddl
fnstcw
push
mov
xchg
loope
adc
adc
inc
inc
add
call
xchg
ret
add
iret
or
jle
sub
pushf
xor
xor
ret
out
sbb
dec
mov
and
ret
inc
pop
imul
clc
test
loop
mov
cmpl
adc
outsb
repnz
je
jno
or
ds
jae
stos
gs
bound
xor
push
cld
push
mov
xlat
xor
shrl
cltd
mov
xor
pop
xchg
pop
movsb
in
cmp
stos
cmpsl
adc
rolb
sbb
rolb
mov
repnz
ret
into
pusha
cltd
adcb
cmp
cmp
add
pop
mov
cmp
insb
test
ds
mov
movsb
push
pop
mov
xchg
mov
add
push
arpl
mov
aam
push
sbbb
push
stos
cmpsb
aam
loop
pop
jns
or
jb
fisubrl
pop
faddl
inc
notl
and
and
fsub
jb
pop
and
xor
lcall
cmpsl
test
imul
stos
lods
pusha
mov
pop
movsb
test
add
ffreep
ljmp
add
cmp
outsl
and
fcmovne
jp
pusha
mov
cmp
or
cmc
push
inc
aam
mov
in
mov
push
pop
sbb
hlt
jecxz
pop
loope
xchg
jne
sub
jecxz
loope
jecxz
fwait
gs
xor
adc
int3
cwtl
mov
sahf
roll
xor
aaa
or
fstps
pop
lahf
jae
push
dec
sub
and
jbe
adc
or
jge
mov
or
xchg
push
inc
rol
and
add
fdivrl
movsl
rcrl
out
icebp
and
mov
jae
in
aam
addr16
add
mov
mov
scas
aas
adc
push
iret
or
sbb
fldl
in
push
push
xor
sub
lods
add
xchg
jecxz
imul
adc
inc
fidivrl
pushf
popf
pushf
sbb
cli
dec
pop
jmp
les
inc
outsl
sub
imul
lods
movsb
jnp
cltd
test
mov
ret
pmaxub
into
inc
mov
sub
pop
dec
mov
or
pushf
push
push
mov
sub
out
popf
addr16
insb
fcmove
stos
add
inc
imul
popf
lret
xchg
daa
rclb
mov
mov
mov
inc
test
dec
jg
fcom
mov
add
das
nop
dec
xorl
pop
mov
stos
inc
addb
scas
loopne
shl
dec
lods
rcrb
push
rorb
movl
lds
aad
fdivrl
loopne
stc
sbb
data16
inc
push
jae
popf
in
mov
adc
scas
inc
fisubs
inc
push
and
mov
fstps
ret
stos
shl
adc
cmp
call
xchg
jle
add
ret
push
test
lcall
jo
fists
sub
dec
xor
or
and
pop
dec
or
or
jmp
pop
sahf
mov
mov
mov
stos
xor
sub
mov
mov
outsb
dec
test
mov
insb
in
mov
mov
cwtl
aaa
enter
jae
addr16
popf
mov
clc
mov
xchg
test
fcoms
fwait
rcrb
ret
mov
cli
cmp
adc
faddl
adc
cli
in
mov
pop
cmp
add
dec
cmp
xor
mov
mov
mov
orb
imul
iret
test
mov
push
lret
push
adc
ficompl
and
mov
aas
push
mov
pop
mov
mov
mov
sbb
sbb
push
inc
push
sbb
mov
sub
mov
jp
xor
bnd
or
cwtl
cmp
push
mov
imul
cwtl
aas
repnz
mov
xchg
jo
cmp
sbb
pop
adc
shrl
push
imul
js
mov
mov
mov
in
imul
dec
loop
cmp
adc
cmpsb
jl
out
popa
sbb
rcrb
rcrl
add
aas
fs
cmp
push
mov
add
pop
mov
insl
fstps
push
ljmp
xchg
xlat
xlat
in
ja
ljmp
repnz
cmp
push
loop
dec
int3
cmp
jmp
imul
cmpl
cmp
mulb
je
popa
scas
data16
jl
and
mov
lods
xorb
jns
adc
jns
push
lods
jmp
leave
adc
push
mov
mov
xchg
int3
dec
lahf
leave
sbb
add
push
or
or
fbstp
repz
sti
mov
xchg
pop
mov
mov
sub
jno
push
sbb
push
jb
jge
cmpsb
push
push
jo
pop
movsb
add
xchg
loopne
pop
mov
into
xlat
xchg
xor
dec
mov
jle
outsb
rorb
xor
push
push
in
pop
or
rclb
sti
add
xchg
rol
mov
jmp
pushf
push
jb
dec
dec
fxch
jle
popf
mov
add
sti
ret
xor
mov
inc
inc
fwait
mov
xor
xor
lahf
or
ljmp
outsb
lds
dec
pusha
notl
imul
xor
push
mov
int3
stos
mov
add
and
mov
loope
jp
out
fisttpl
mov
sbbb
movsl
outsl
push
incb
push
rcrl
mov
jg
sub
lret
loopne
movsl
sub
inc
cmp
cltd
scas
jb
and
mov
jg
les
adc
enter
inc
cmpsl
cmp
es
int3
push
and
push
and
sbb
cltd
jge
add
jns
pop
dec
dec
mov
decl
out
out
inc
push
in
sti
mov
cmp
popa
ja
inc
nop
sahf
xor
add
push
pop
jp
xor
cmc
inc
sbb
sub
lea
outsl
inc
data16
xor
subb
lods
arpl
push
sub
out
jecxz
xor
lret
mov
xor
imul
int
repz
xchg
das
outsl
lea
adc
loope
arpl
push
ficompl
or
mov
mov
cmp
mov
je
jmp
repnz
popa
cmp
gs
arpl
push
add
sarl
dec
fs
fisttps
rcrb
pop
cltd
test
pop
sub
mov
pop
push
lcall
lret
dec
dec
sbb
pushf
dec
fs
popf
sahf
mull
jo
xchg
xchg
inc
sarl
hlt
cmp
jl
insb
das
arpl
inc
or
iret
outsl
push
push
sbb
push
push
xor
rcll
outsb
out
push
adc
xchg
mov
xchg
scas
fld1
pop
dec
pushf
ret
and
mov
xchg
lea
sub
imul
fnstenv
or
lds
ljmp
xchg
and
xchg
bound
and
sbb
rolb
call
cld
add
xchg
xchg
dec
icebp
out
mov
add
into
fisttpll
inc
enter
out
insb
out
push
cmpsl
mov
hlt
testb
aam
jbe
lret
flds
cli
add
xchg
inc
lret
ljmp
xchg
xlat
incb
pop
adc
jmp
je
inc
ja
test
or
jbe
mov
inc
jne
cwtl
popa
jno
lods
and
shrl
push
fs
dec
fwait
rclb
mov
int
and
fimuls
iret
gs
jmp
loopne
rcll
push
inc
lods
frstor
xchg
and
test
jl
outsl
test
add
lods
pop
andl
test
mov
sub
jnp,pn
push
mov
icebp
dec
rolb
sbb
sub
aad
insb
mov
pop
mov
sbb
mov
flds
leave
dec
arpl
int3
xlat
cmp
pop
mov
jmp
imul
cltd
stc
fisttpll
add
mov
andb
lock
mov
outsl
inc
stc
xchg
pop
cli
adc
insl
rolb
std
out
inc
and
xchg
loope
cmp
sbb
inc
flds
sti
or
mov
or
jb
hlt
shlb
jns
push
jl
je
pop
dec
in
fcompl
scas
push
push
xor
mov
out
mov
enter
fmul
or
cwtl
or
xchg
dec
push
lret
push
sub
mov
xor
mov
in
sbb
cmp
fidivs
sbb
pop
lahf
push
lret
js
mov
sub
ljmp
shufps
mov
mov
into
cmp
lea
xchg
es
sub
pushf
fldt
arpl
jmp
stos
xor
xchg
lock
sub
ljmp
pushf
jg
lea
imul
pop
sub
mov
xor
nop
sub
andb
or
adc
and
adc
xchg
mov
testl
xor
pop
jge
mov
fsubl
lds
daa
lea
ljmp
in
jmp
xchg
cmp
dec
in
inc
repnz
cmp
les
xchg
cmp
push
js
ss
mov
sahf
loopne
addb
xor
clc
pushf
add
lods
fisttpll
jno
rolb
nop
sbb
fidivrl
outsl
pusha
in
bound
add
fdivrs
xchg
add
adc
jl
jmp
add
stos
pop
dec
sub
lods
mov
fisubs
subb
loop
push
push
call
movsb
cmp
aaa
in
sbb
aam
push
outsl
loopne
call
cmp
out
jle
out
lret
jg,pn
pop
es
stc
pop
sub
test
sbb
lods
lret
stc
adc
sbb
adc
aam
in
shll
xlat
popa
mov
enter
arpl
aad
fcomp
xchg
cmp
pop
popf
leave
push
fisttpll
rorl
cwtl
jns
sbb
xchg
push
cld
movsb
xchg
push
rolb
mov
out
outsl
adc
adc
ds
out
aas
sbb
xchg
push
pop
adcl
lds
push
mov
jp
push
jo
mov
or
imul
frstor
push
adc
jp
jb
mov
xor
ljmp
dec
mov
inc
sbb
pop
dec
cmp
out
rorb
test
cmc
mov
xor
test
fsubl
fimull
ja
lods
add
sahf
das
gs
loop,pn
movsl
mov
jge
clc
adc
sarb
push
movsl
pop
or
jb
cmpb
inc
cli
jb
stc
mov
cmp
roll
jo
push
dec
mov
popl
and
ja
or
xor
aad
and
push
arpl
in
mov
lea
daa
xchg
sub
add
pushl
push
and
shlb
cld
nop
and
jmp
cmp
and
bound
in
xor
pop
ss
sub
into
jp
jl
ret
mov
xchg
push
inc
pop
lcall
cli
jbe
xchg
sub
jb
mov
xchg
mov
mov
pop
and
xchg
cld
jp
ficomps
bsr
repnz
and
jecxz
jno
testl
and
mov
mov
mov
pop
jl
push
push
ror
in
or
cwtl
mov
and
fwait
adc
sbb
dec
jmp
fsubrs
cmp
outsl
mov
mov
clc
test
fldenv
addr16
rep
push
stos
inc
fndisi(8087
xchg
dec
fisttps
loope
push
pop
pop
jnp
or
or
or
enter
enter
dec
out
daa
xlat
or
mov
js,pt
or
fimull
test
data16
and
addr16
sub
jl
sbb
adc
xchg
imul
notb
push
adc
jle
lret
fsub
cltd
push
in
mov
adc
adc
push
pop
mov
inc
adcl
add
adc
jnp
or
test
mov
add
imul
les
ljmp
fmulp
mov
lods
pop
sarl
ds
inc
inc
leave
outsb
mov
inc
mov
ljmp
pop
pop
jp
xor
or
imul
sub
mov
cld
fwait
or
add
arpl
out
cwtl
cmp
stos
divb
cmp
sub
sbb
fistpll
push
lods
lea
mov
pop
rorl
dec
cld
call
inc
xchg
aas
lahf
xchg
std
push
adc
fs
test
pushf
repnz
lret
pop
push
js
fstpt
push
dec
jb
mov
add
mov
sbb
cwtl
sub
sbb
push
and
rcrl
sahf
sbb
daa
inc
out
call
in
lods
leave
jae
xchg
shrl
enter
lahf
sub
or
inc
push
mov
jno
add
push
dec
inc
loope
mov
xchg
testl
mov
cmp
int3
cmp
aas
fidivrs
push
mov
add
xchg
or
in
addb
sbb
fimuls
mov
pop
ret
xchg
sbb
mov
xchg
mov
mov
leave
ds
cltd
lods
sarb
inc
inc
cwtl
nop
lea
outsl
leave
xor
adc
stos
negb
fdivrl
pop
cmp
call
subl
repz
push
popf
loopew
sub
mov
mov
call
cli
ret
xchg
jnp
fmull
test
jg
xor
lds
jo
mov
ret
and
enter
jmp
or
mov
mov
pop
insl
pop
adcl
aaa
pop
icebp
push
outsl
sbb
cwtl
jno
fadds
daa
ss
mov
lret
push
jb
sub
mov
adc
cmp
dec
jge
lcall
stos
push
mov
arpl
cmc
repz
jo
subb
shll
pop
dec
je
sbb
xor
out
xchg
xchg
sbb
cli
insl
xchg
aaa
mov
outsl
sub
and
mov
pop
sub
xor
ljmp
ret
repz
test
inc
sub
and
pusha
repnz
add
and
sbb
jae
dec
fclex
add
add
pop
out
sar
xor
punpckhbw
loopne
push
shlb
xchg
dec
scas
dec
cmp
fiadds
jae
xor
mov
jge,pn
inc
mulb
lahf
pop
or
pop
xchg
rol
sahf
pop
shll
les
inc
push
call
jo
add
scas
cli
sbb
pop
dec
xor
adc
xchg
movsl
add
inc
and
add
pushf
ja
dec
jne
sub
xor
jae
or
imul
in
jp
and
push
xor
xchg
xor
lds
test
je
or
inc
xchg
push
cmp
sub
xchg
jl
dec
cli
lahf
js
into
push
pop
sub
js
or
push
inc
cs
add
movsb
jno
pop
jno
ja
mov
adc
sub
push
add
fxch
pop
lods
insl
sub
dec
inc
jecxz
or
xchg
dec
sbb
packuswb
xchg
outsl
das
xchg
lock
or
mov
cmpsl
aas
enter
or
adc
or
mov
loopne
dec
jno
pop
pop
negb
push
push
mov
push
or
and
or
movsb
test
inc
mov
push
jmp
push
jo
and
cmp
push
imul
mov
lret
movsb
loope
push
cmp
subl
clc
mov
push
ret
mov
mov
sarl
jo
mov
add
pop
sbb
mov
push
stos
jnp
dec
sbb
out
in
mov
push
or
aad
dec
call
int
outsb
and
pop
psubw
and
shll
stos
in
popa
jge
xchg
cmp
arpl
fadds
cmp
punpckhdq
mov
xchg
insb
imul
sbb
ret
add
in
ja
adc
pop
and
leave
in
sbb
cmp
jle
jb
adcl
call
out
jl
js
cmpsb
cmp
rolb
mov
lea
inc
xor
sti
lret
cld
aaa
mov
and
jne
push
jnp
movsl
divl
jle
fcoms
cmpl
lcall
and
xchg
aaa
sbb
pop
sub
inc
aaa
cmp
out
mov
mov
out
movsb
or
cmc
adc
js
int
out
cmp
jp
xchg
es
ss
iret
mov
push
fldenv
test
out
stos
mov
mov
aad
mov
fwait
cmp
cmc
fisttpl
fwait
jle
xor
scas
in
sbb
pop
aad
dec
push
rcrl
sub
test
lahf
xchg
push
test
inc
cmpsl
aas
add
xchg
mov
cmpsb
pop
adc
aaa
pop
fldcw
xor
xchg
les
add
pop
stos
pop
mov
aas
les
push
fwait
push
push
and
inc
mov
movsb
cmc
add
fwait
icebp
dec
arpl
rclb
scas
pusha
sahf
push
or
push
fiadds
lds
scas
jge
jecxz
aad
pop
inc
test
cmp
sbb
cld
mov
outsl
dec
jmp
fiadds
ficompl
sahf
sub
dec
xor
and
xchg
xlat
cmp
ds
outsb
mov
pushl
add
lret
scas
adc
and
adc
data16
pushf
inc
mov
xlat
push
inc
clc
add
or
movsl
mov
mov
idivb
xlat
scas
sbb
out
push
pop
jnp
jne
xchg
mov
mov
in
and
xchg
jns
dec
xchg
sub
pushf
jge
fsubl
and
sub
cmp
cmp
fisttpll
sarb
clc
leave
jmp
cmp
mov
xchg
jns
xchg
inc
aad
cmc
add
outsl
push
dec
lods
mov
testb
ret
call
add
and
jp
mov
frstor
jg
add
jp
inc
adc
movsb
mov
push
lds
inc
out
or
aam
inc
and
inc
mov
pushf
cmp
movsb
in
out
jae
cmc
jno
mov
out
mov
data16
ds
pop
fs
adc
xor
xchg
push
jo
and
arpl
fsubrp
movsl
pop
scas
aad
mov
pop
mov
in
and
add
add
sub
das
jecxz
mov
push
inc
pushf
js
sub
inc
adc
push
decl
cmpb
adc
cmp
dec
adc
aad
mov
mov
jo
in
js
mov
cmp
mov
xchg
loopne
std
pop
inc
sbb
cmp
fisubl
jle
mov
sbb
jo
lahf
pop
cld
and
je
aaa
test
pop
inc
mov
cmp
mov
arpl
pop
adc
scas
and
jbe
cmp
jae
push
pop
wbinvd
and
orl
mov
adc
hlt
push
les
xchg
jae
dec
loop
leave
push
push
dec
fistl
mov
add
and
pushf
xor
jmp
mov
loop
int
ds
ljmp
jne
pop
and
int3
addl
xor
insl
inc
ret
pop
loope
and
loopne
add
inc
pushf
pop
mov
outsb
mov
cmpsl
stos
loopne
hlt
pop
cwtl
test
pop
sub
dec
mov
ljmp
cmp
jg
inc
jb
jnp
jg
rclb
cmpsb
lret
test
adc
lock
pusha
das
and
test
sbb
sub
sub
pop
xlat
push
leave
and
lds
imul
cwtl
xchg
rorb
mov
mov
sub
and
sub
mov
lea
addr16
and
xor
inc
add
pop
aad
mov
jmp
xchg
pusha
popf
out
inc
into
jp
dec
sub
movsb
lea
jp
mov
nop
ret
adc
push
add
in
add
imul
js
rclb
push
or
mov
div
or
xchg
sbb
pop
ja
jnp
int
dec
ds
lods
aam
cmp
mov
insl
jmp
incl
add
cld
int3
ja
out
jp
adc
xor
mov
inc
jns
inc
or
clc
jg
dec
jae
pop
sub
sub
inc
add
cli
icebp
div
jnp
adc
fadd
lods
lret
dec
scas
bnd
orb
inc
mov
mov
push
lcall
mov
cmp
xor
mov
pop
clc
push
add
or
pop
and
sbb
and
and
test
or
into
jge
pushf
push
out
mov
rclb
aas
rolb
dec
pop
icebp
iret
add
adc
and
pop
mov
cmp
shlb
imul
icebp
xor
adc
xor
pop
idivl
adc
inc
lret
addb
pop
pop
push
add
push
inc
leave
xor
adc
pushl
out
dec
ret
mov
sub
dec
inc
lds
push
loop
mov
lods
xor
shll
jecxz
cld
jp
cmp
sub
imul
inc
adcb
xor
sub
push
mov
pop
movsb
int
lea
mov
nop
jnp
mov
ss
inc
out
fmuls
imul
test
inc
cld
cmp
push
or
sti
les
sbb
popf
push
xor
add
punpckhdq
gs
jne
jp
inc
fs
push
push
aaa
xor
xor
mov
push
sbb
cmp
fsub
popf
sub
stc
push
daa
sbb
and
sub
xchg
mov
push
es
cmp
cmp
inc
aas
add
out
adc
or
push
add
out
jmp
add
shlb
stc
sbb
jmp
inc
ret
mov
call
sbb
mov
xor
pop
dec
jb
adc
jg
loope
sub
ds
int
dec
hlt
jge
xor
sbb
adc
iret
cmpxchg
push
cld
test
loop
xchg
aad
push
xchg
xchg
stos
add
in
addb
push
lods
add
pop
sbb
pushf
lds
lock
mov
and
dec
cmc
cmpsl
mov
xlat
mov
lea
outsl
jo
icebp
and
repz
out
movsb
jecxz
adc
ffreep
decl
or
out
or
adc
jne
in
adc
mov
clc
jecxz
adc
xchg
xor
xchg
cmp
inc
fimull
sub
pop
aad
push
pop
clc
mov
movsl
add
rolb
xchg
and
mov
stc
movl
adc
test
shll
and
jl
lcall
aam
hlt
pop
je
push
dec
ret
push
and
mov
push
jl
nop
clc
inc
jecxz
cli
loop
lea
hlt
inc
call
pop
scas
mov
sub
mov
cld
cwtl
loope
inc
mov
adc
cmp
out
mov
iret
pop
cmp
movsb
jmp
inc
sub
sbb
mov
mov
mov
in
jns
push
stos
xor
pop
pop
push
pop
call
fisubl
iret
les
push
decb
ds
jo
iret
arpl
inc
dec
movsb
sar
roll
push
jmp
aaa
mov
das
fsubl
pop
ret
mov
stos
ret
adc
ficoml
or
or
cltd
dec
jecxz
dec
leave
movsb
mov
xor
movsb
pop
or
loop
add
and
mov
jb
mov
nop
mov
sub
addb
push
mov
xchg
outsl
inc
in
enter
fnstenv
mov
cmpsl
pop
jo
mov
dec
adc
rcll
shlb
jno
addb
test
lds
mov
xor
or
sub
sahf
or
sbb
lea
out
shrb
cmpb
lods
icebp
cmpsl
mov
jnp
adc
mov
lds
movsb
mov
ja
pop
stc
loope
or
sub
push
jnp
ja
cltd
jmp
mov
int
addr16
lcall
mov
ss
stos
push
ror
xor
pop
aaa
or
pop
pop
mov
add
por
out
mov
xchg
movsb
data16
xor
or
jns
xchg
inc
cmc
sbb
adc
and
xchg
cmp
add
movsl
stos
mov
out
stos
fdivrl
fdivr
js
fsubs
sub
cmpl
add
and
js
cmp
stos
push
push
push
mov
cmp
andl
xlat
clc
stos
mov
je
sbb
and
daa
adc
mov
in
leave
add
ja
jmp
pusha
icebp
adc
push
pop
adc
inc
sub
in
sub
add
subb
xlat
add
or
out
std
sti
mov
ret
adc
sti
pop
mov
add
sarl
int3
xor
xlat
push
cmp
sub
dec
loop
push
jns
scas
xor
dec
aaa
cli
push
sub
fsubrp
andb
data16
or
repz
push
ds
xchg
cli
push
ljmp
or
es
mov
pop
pop
pushf
in
adc
add
jge
sbb
test
mov
js
inc
sbb
shrl
data16
div
push
in
test
or
movsb
pop
lahf
sahf
iret
aaa
hlt
mov
sub
pop
cmp
mov
push
dec
cmp
aas
xor
mov
add
mov
mov
inc
cs
mov
or
fcomip
es
push
daa
xorl
push
movsl
loopne
lods
clc
or
imul
xor
mov
xor
xchg
push
inc
out
inc
pop
outsb
je
pusha
stos
outsl
jbe
xor
icebp
inc
mov
shrb
insb
push
lahf
xchg
sahf
into
xchg
or
popf
push
push
aas
test
loop
push
inc
cmc
sub
inc
push
push
hlt
jnp
ja
sbb
cmc
dec
fsts
pop
test
dec
lea
and
das
or
ja
cld
test
test
sbb
dec
or
aas
and
adc
lret
sub
jmp
dec
in
mov
adc
adc
pop
call
outsb
mov
js
xchg
xchg
add
fisttpll
and
call
sbb
pop
es
or
inc
insb
add
scas
sub
aaa
mov
push
pop
lock
dec
in
xor
push
mov
mov
xor
cmp
daa
mov
add
mov
xorb
rolb
and
outsb
in
dec
and
mov
inc
push
js
lcall
aaa
push
xor
pop
pop
popf
sbb
xchg
inc
rorb
lret
add
in
rol
iret
mov
gs
pop
leave
cmp
aas
push
dec
es
fisttps
inc
fidivrs
mov
mov
insb
pop
imul
gs
call
sbb
pop
movsb
cmc
pop
and
sub
cwtl
push
cli
add
push
fcom
push
je
pop
mov
outsb
push
cmpsb
or
inc
push
xchg
in
les
and
pushf
adc
js
mov
adc
bound
adc
lret
mov
ret
mov
xor
adc
lea
and
jae
into
int3
rclb
icebp
jo
add
or
icebp
mov
push
pop
movsb
sti
fs
push
xorl
addl
cmc
aam
pop
mov
jo
jl
add
cmp
mov
adc
les
leave
dec
test
mov
jno
outsl
leave
dec
add
push
mov
sbb
pusha
jns
dec
inc
jg
int3
loopne
outsb
iret
ljmp
sub
and
inc
shlb
xchg
lds
adc
or
push
rcrl
and
sub
cmp
cwtl
sbb
push
jae
loopne
sarb
int3
push
dec
dec
push
dec
lds
dec
pop
or
cmp
dec
das
pop
leave
cmp
aam
dec
mov
add
cmpsb
inc
and
dec
shrl
add
ljmp
push
lcall
loop
sub
daa
ss
cs
loop
adc
jo
in
sbb
push
incl
call
loop
adc
dec
and
shlb
data16
mov
iret
stos
in
jle
mov
popa
imul
das
lods
sbb
adc
xchg
jo
and
cmp
clc
je
push
addb
xchg
decb
ds
into
test
push
int
loope
mov
iret
shlb
lret
inc
insl
fidivrl
push
repz
dec
mov
adc
or
xchg
popf
add
sbb
adc
push
cmpsb
and
xchg
or
or
fsubrp
push
add
or
dec
adc
mov
das
shll
xor
fwait
call
dec
add
sar
mov
push
lods
lcall
mov
inc
add
cltd
jno
repnz
movsb
in
jae
cwtl
add
xor
mov
pop
icebp
std
adc
push
adc
dec
adc
and
xor
cltd
and
mov
cmp
mov
ss
loop
adc
dec
or
inc
das
popl
mov
loope
movsl
jge
pop
dec
push
add
dec
js
daa
adc
push
leave
inc
adc
flds
fldl
inc
cmp
fisttpl
push
sbb
mov
in
jmp
inc
repz
pop
sti
mov
clc
pop
in
push
orl
scas
nop
mov
iret
pop
fstpl
sbbl
dec
adc
mov
cltd
mov
mov
jp
mov
lcall
mov
mov
add
cmp
or
inc
cmp
or
repz
pop
pop
adc
rclb
adc
arpl
sub
inc
dec
or
fstl
fistpll
dec
sbb
jns
loop
cmp
int
mov
xor
lret
rcrl
jnp
adc
in
jns
and
add
and
cltd
mov
and
fucom
add
ret
inc
shll
inc
insl
jno
call
cmp
mov
pop
lahf
test
sub
adc
or
or
adc
insb
pop
pop
frstor
inc
loopne
insl
cmp
adc
sub
daa
pop
inc
outsl
inc
mov
mov
or
ja
jae
in
rorb
lea
mov
pop
out
add
and
out
mov
inc
cmp
jb
pop
mov
and
xor
rcl
mov
or
mov
xor
pop
mov
mov
cli
xchg
push
and
es
fcomp
or
mov
and
pop
addr16
xor
jo
movsb
rol
notl
adcl
or
xor
fs
scas
clc
es
xor
subb
test
gs
and
jne
sbb
lds
push
jo,pt
jge
jle
xor
loope
sahf
ds
dec
jnp
sub
sub
test
jnp
stos
push
push
sbb
mov
fadds
test
push
mov
call
mov
push
pop
inc
xchg
popa
lock
xor
sbb
in
or
mov
add
mov
dec
test
pop
and
push
cli
inc
es
jo
leave
xor
dec
les
fldcw
and
outsb
sub
mov
jg
or
mov
add
inc
cmc
adc
add
push
movsl
add
shl
in
cli
dec
or
inc
aam
jae
push
movsl
mov
js
xor
pop
dec
add
ljmp
inc
adc
add
fnstcw
add
push
and
sub
aaa
out
loope
ja
mov
mov
icebp
and
push
test
mov
enter
and
in
scas
fnsaves
movsb
lds
xchg
inc
adc
inc
lret
xchg
xchg
xor
out
mov
pop
loopne
sub
scas
pop
jbe
clc
sbb
adc
xchg
push
lock
js
xchg
fisttps
inc
inc
int3
insl
das
cli
or
mov
jecxz
or
mov
dec
movsl
fxtract
dec
or
lret
jle
push
rol
inc
mov
jo
arpl
add
mov
les
fistpll
add
lds
add
sbb
lcall
mov
push
cmp
mov
outsb
adc
nop
bound
push
cmp
lds
loopne
sub
add
fsts
fdivs
leave
mov
int3
sub
sub
sub
sub
xor
dec
addr16
sarl
stc
imul
in
into
xor
dec
add
fcos
mov
bound
mov
cmpl
clc
roll
mov
or
or
sub
push
sbb
xchg
fadds
je
cltd
lret
imul
ds
stos
lcall
clc
push
hlt
ljmp
cwtl
add
jae
es
adc
das
mov
cmp
mov
pop
dec
add
inc
loopne
cmpsl
scas
and
push
xchg
xchg
mov
xchg
sub
daa
cmpl
je
repnz
add
add
inc
push
scas
sbb
cmp
and
xchg
adc
jae
add
aad
movsl
nop
js
fidivl
xor
out
lret
mov
pusha
and
cmp
adc
mov
jne
pushf
icebp
popa
and
fstps
lcall
fsubs
or
jmp
out
pop
push
aam
and
pop
popa
add
add
js
addb
addb
dec
movsl
pop
fistpl
data16
and
dec
jmp
sahf
outsb
iret
push
and
inc
or
mov
push
dec
mov
sub
fnstenv
pop
or
lret
aam
imul
loopne
add
inc
movsl
aaa
leave
push
das
ds
pop
and
sbb
mov
call
mov
subb
push
mov
add
adc
cmp
add
push
jno
cld
push
or
into
cmp
add
pushf
mov
rol
push
dec
push
inc
sub
rep
xor
jmp
pusha
adc
ljmp
in
repnz
inc
lock
sarl
jo
xor
imul
int
jb
out
lcall
xor
orb
mov
mov
loope
fistps
add
out
in
add
jg
add
or
sbb
xchg
cmpsb
inc
loopne
lods
pop
aas
and
jns
xchg
sarl
lods
push
movl
or
lret
aad
inc
insb
mov
clc
sbb
pushf
stos
push
sub
mov
and
adc
outsb
add
pop
and
sbb
testb
inc
sahf
sub
pop
loopne
xor
pop
push
jae
and
or
int
or
in
mov
inc
xor
push
dec
push
out
stc
in
pop
js
in
dec
and
mov
and
jmp
int
pop
adcl
loop
and
lret
jmp
xchg
nop
add
in
and
or
xor
and
lcall
std
ret
add
add
xor
push
sbb
fmuls
test
ret
or
adc
mov
test
int
mov
xor
clc
into
rorb
insb
cmp
xor
pop
lds
dec
xor
mov
cli
adc
and
mov
imul
mov
out
mov
sti
enter
add
pusha
mov
push
push
js
imul
loopne
pop
mov
mov
pop
test
test
jmp
pop
sub
and
dec
adc
add
inc
ljmp
jno
hlt
and
xchg
lds
and
bound
or
xchg
stc
test
stc
dec
jo
fidivrs
adc
sub
xchg
ja
inc
sbbb
add
sti
movsl
add
les
into
xor
cli
enter
push
or
dec
push
cld
jecxz
rorb
or
pop
or
adc
push
je
cmp
sub
add
sbb
dec
cmc
out
imul
rolb
add
add
repz
xchg
ret
test
mov
lds
jo
mov
adc
test
js
lods
mov
cs
cmc
push
mov
push
jle
scas
adc
movsl
inc
cmp
inc
xor
adcl
call
sub
rcll
add
lcall
cwtl
xchg
ret
lods
ret
daa
inc
ljmp
jne
jno
pop
cmp
dec
or
ljmp
shll
stc
ret
lcall
xchg
mov
js
cmc
dec
mov
pop
inc
out
int3
cs
push
pop
ljmp
ss
testb
scas
rcrl
das
sub
out
mov
das
call
jle
fcomi
stos
jl
jle
jge
into
jbe
mov
jno
into
xor
inc
cltd
pmaddwd
and
sub
adc
add
scas
ljmp
add
inc
xor
pop
add
pop
jo
ret
inc
clc
repz
stc
pusha
nop
in
jb
das
fsubl
out
pusha
sysenter
sbb
jecxz
push
test
mov
inc
adc
dec
xor
cmp
pop
jne
or
daa
sbb
adc
jne
addr16
jae
ja
add
mov
cmp
mov
scas
ret
sub
pop
push
out
sbb
pop
andl
jmp
jmp
les
fsubrl
test
or
aaa
cmp
and
pop
xchg
pop
cmp
andl
or
adc
hlt
dec
movsl
popa
mov
in
idivb
dec
jmp
sahf
icebp
push
in
inc
repnz
and
xchg
sarl
cs
inc
call
jo
rol
insl
loopne
cwtl
adc
rolb
xor
xchg
sbb
mov
jo
pop
mov
or
xlat
lea
loop
in
xor
mov
dec
xchg
jno
pusha
in
fs
pop
iret
mov
in
testl
mov
out
mov
inc
cmp
popl
stos
sti
leave
push
pop
mov
sbb
or
ljmp
int3
sbb
testb
lea
and
push
fistl
add
sub
icebp
mov
les
mov
loop
in
mov
dec
xchg
jl
dec
nop
dec
add
cmc
xor
hlt
imul
pop
jl
add
push
adc
sbb
and
jb
hlt
fdivrp
mov
cltd
clc
adc
inc
pop
jb
cltd
xor
inc
and
or
jmp
faddl
pop
cwtl
sbb
dec
insb
cltd
pop
scas
btl
and
fmuls
jns
mov
or
cld
jno
mov
stos
or
adc
sub
les
addr16
and
mov
and
mov
mov
test
repnz
xlat
testl
jb
loop
andb
iret
mov
xchg
mov
test
inc
iret
out
icebp
pop
adc
sub
mov
sub
popf
cmp
bound
fstpl
xlat
xchg
or
xor
push
jno,pt
loop
push
dec
inc
lret
push
xor
out
in
lahf
sar
add
push
pop
sub
lret
mov
xor
lods
inc
jbe
and
rcrb
cmp
mov
xchg
inc
adc
pop
add
mov
xorl
sub
xor
fdivl
sbb
aas
rol
pushf
add
stc
fbld
inc
aas
dec
pop
xchg
sahf
or
or
add
subb
lret
movsl
ret
sbb
xor
or
in
ret
xlat
cmp
pop
into
pop
cmp
roll
fsubs
data16
sbb
add
xor
es
xchg
dec
and
scas
in
mov
jo
and
scas
push
jns
xchg
pop
fcoml
mov
addb
sbbl
sahf
push
and
jns
cmp
xor
jmp
inc
adcb
xor
sbb
jns
outsl
xor
outsb
enter
cmp
dec
pop
or
movsl
push
jae
and
add
add
add
add
adcb
add
cmp
add
add
add
add
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
int3
adc
add
add
add
imul
pop
add
ja
jne
jo
imul
or
add
add
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
addb
push
daa
add
add
add
sub
incl
add
insl
add
add
add
add
add
add
add
add
repz
incl
add
add
add
add
add
xor
or
nop
and
add
add
je
add
add
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
test
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
popa
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insl
add
insb
add
push
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
add
outsb
add
data16
arpl
and
inc
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
add
add
imul
add
jo
and
dec
add
jb
add
add
add
add
add
jne
jb
jne
and
inc
add
add
outsl
add
add
insl
add
jno
imul
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
add
add
dec
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
pop
add
xor
add
imul
add
add
jno
jns
add
js
add
add
sbb
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
jo
imul
inc
add
outsl
add
and
push
add
je
jne
add
and
dec
add
add
add
imul
imul
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
and
inc
add
outsb
add
insl
add
arpl
jae
sub
and
dec
add
arpl
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
