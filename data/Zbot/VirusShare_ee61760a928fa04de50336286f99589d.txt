ljmp
rcl
into
ljmp
hlt
and
push
repz
in
sbb
call
inc
adc
pushf
or
imul
jg
lahf
pop
mov
ljmp
mov
lret
mov
stos
repz
fsubl
adc
push
data16
hlt
mov
scas
jae
adc
xchg
and
xlat
sahf
mov
sub
mov
mov
lar
loop
mov
ljmp
hlt
jno
mov
in
dec
bsr
mov
mov
pop
push
popf
les
cmpsb
and
in
leave
inc
ror
int
mov
adc
cmp
sub
aad
push
xchg
mov
popf
insb
sti
std
sub
cwtl
repz
sti
add
adc
jp
in
loope
jno
pop
sbb
call
jle
sbb
add
push
notl
les
out
pushf
in
test
push
sahf
cli
sub
inc
pop
push
ss
sti
cmp
into
mov
add
or
pop
cs
decl
ljmp
std
ljmp
xor
push
aas
bound
mov
data16
jp
jne
add
lds
adc
mov
fisttps
daa
addl
ljmp
inc
fisubrl
into
xlat
jae
cmp
dec
sub
out
mov
sub
fisttpl
xchg
test
jb
test
or
mov
pop
lcall
push
ds
jg
incl
jbe
cmp
call
stos
stos
pop
out
movsb
adc
imul
lods
push
lret
xor
inc
push
or
jg
cwtl
push
ljmp
mov
sub
xchg
pop
pop
inc
xor
lock
push
add
dec
sbb
inc
stos
sbb
out
mov
std
mov
pop
insb
ret
mov
push
xchg
inc
ljmp
or
les
in
jne
pop
bound
stos
repnz
imul
jmp
data16
sub
xchg
iret
mov
jns
push
movsl
ja
mov
add
mov
call
push
or
xchg
ja
fimuls
mov
movsb
iret
cwtl
push
out
cmc
dec
mov
mov
ss
rcrb
out
adcb
jle
fildl
push
mov
push
inc
jnp
scas
es
push
je
addr16
pushl
dec
sbb
nop
movsl
and
push
nop
int3
repz
fcmovbe
jne
inc
sub
dec
cmp
jge
mov
push
mov
adc
das
inc
int
or
in
sub
fsts
sbb
outsl
incl
lahf
xchg
sbb
aas
sub
fnstcw
cmp
es
pop
pushf
mov
jno
pop
mov
fdivs
pushl
and
dec
xchg
adc
fdivrp
pop
adc
into
sarl
das
cmp
jle
rcl
push
dec
rol
adc
mov
push
and
jge
inc
pop
addb
inc
ror
inc
and
mov
scas
push
mov
imul
out
jns
mov
popa
call
xor
pop
ficoms
pop
fidivs
cmp
cs
and
sti
mov
fnstenv
inc
pop
ljmp
fwait
adc
bound
pop
or
loop
out
punpckhbw
insb
pop
push
loop
popf
incl
jmp
ds
in
clc
mov
ja
mov
xor
cld
testl
ret
cld
push
jnp
xchg
ret
daa
lret
mov
mov
iret
pop
sub
int
ja
out
xor
ds
sbb
add
mov
dec
rolb
aam
decl
and
adc
dec
js
out
mov
mov
gs
fs
pushl
inc
cmp
pop
mov
test
add
pop
into
sub
sbb
incl
cmpsl
and
repnz
int3
xchg
jecxz
hlt
in
mov
jae
push
mov
popa
jne
incl
sbb
nop
outsb
je
shlb
repnz
push
dec
mov
xor
xor
incl
xchg
imull
pop
sarl
and
outsb
int
and
push
mov
mov
xchg
add
or
sub
jg
mov
les
push
ds
push
and
call
mov
pop
xchg
ja
decl
sbb
out
insb
imul
testb
lock
sbb
xchg
test
popf
sbb
fadd
pushl
push
and
mov
das
stos
sbb
xchg
push
in
incl
dec
call
cmpsl
imul
add
mov
roll
cmp
cmp
add
call
xchg
mov
cli
mov
cltd
fstl
int
loopne
jmp
iret
in
mov
dec
cmpsb
xchg
stos
cli
out
pushf
cmpsl
mov
rolb
add
jmp
lret
jecxz
xchg
jnp
es
jl
sub
pop
orl
cmpsl
jl
scas
sti
iret
xchg
call
nop
pop
lds
xor
mov
mov
dec
or
out
lcall
es
and
int3
out
fs
cmpsl
lret
mov
lcall
cld
call
cld
leave
xchg
or
push
cmp
jno
jns
mov
jne
xor
pushl
dec
jl
mov
mov
enter
fabs
rcll
sub
sti
jge
jg
incl
dec
dec
xlat
and
fs
mov
dec
rorb
ss
inc
push
outsb
pop
mov
bound
stc
sbb
insb
add
push
inc
jb
pop
mov
xor
mov
ret
sub
imul
xchg
add
xchg
mov
call
jno
aam
test
and
cwtl
lds
scas
xchg
or
inc
imul
pop
cmp
cmp
and
dec
sbb
out
fcmove
int3
sub
bound
inc
adc
nop
push
in
notl
xor
mov
loopne
aad
jno
pop
jle
pop
ja
pushl
sbb
xor
nop
das
jo
jmp
popa
xchg
push
and
test
repz
jmp
or
xor
jl
mov
ds
pop
push
cltd
sbb
incl
xchg
add
leave
out
cwtl
mov
out
push
mov
dec
out
nop
sti
outsb
or
ja
xchg
out
test
mov
nop
jno
inc
dec
cld
imul
outsb
mov
enter
mov
adc
and
ret
cltd
inc
push
lret
jl
pushl
push
fisubrl
fwait
push
dec
jle
mov
cmp
cmp
popf
inc
pop
shl
cld
pushl
pusha
inc
es
pop
mov
mov
dec
ljmp
sub
push
incl
xchg
aaa
js
or
icebp
and
mov
shl
pop
cli
jl
or
mov
pushl
and
mov
mov
fnsave
int
negb
shr
aam
aad
adc
mov
pushl
xchg
add
pop
dec
test
adc
push
sti
hlt
adc
pop
icebp
lods
sbb
popf
iret
cmc
jnp
loopne
jbe
cmc
aas
jae
lds
sub
movsl
mov
call
int3
loop
lcall
out
xor
pusha
and
xchg
push
adc
jns
hlt
insb
test
or
fiadds
push
inc
mov
fcoms
jge
imul
or
test
xor
push
fiaddl
ljmp
push
xchg
andb
push
cmpsb
dec
aam
mov
add
bound
fwait
xchg
sub
push
pushl
iret
jecxz
jns
fxch
add
sbb
stos
test
mov
mov
decb
in
mov
pop
add
or
movsl
jns
and
insl
int
fcoms
fstl
mov
cmp
and
xchg
scas
mov
mov
addl
je
mov
push
daa
hlt
xor
and
cltd
icebp
xchg
dec
push
outsl
lock
mov
mov
lret
push
lock
lcall
call
cltd
lods
and
push
notb
fs
adc
outsb
pop
fs
lock
decl
repnz
mov
inc
test
pushf
movsl
int
dec
adc
movsl
mov
cwtl
es
mov
mov
nop
mov
clc
xchg
mov
scas
loope
imul
jmp
enter
cs
inc
rcr
mov
ljmp
stos
dec
loopne
sbbl
jno
repnz
xchg
and
ljmp
mov
cmpsb
test
idivb
cmp
lret
nop
cli
cmp
movups
sarl
lea
in
mov
loopne
mov
adc
shr
mov
cs
pop
jae
cmp
push
gs
sbb
inc
repz
ljmp
push
pop
out
pop
xchg
clc
jns
pop
aas
mov
and
inc
add
fldt
ret
mov
mov
std
adc
and
add
loopne
sub
sub
ja
fisttpll
mov
pop
and
pop
pop
push
inc
mov
ds
and
pop
mov
dec
inc
aas
mov
mov
mov
mov
mov
jnp
sub
xor
add
das
push
ds
add
inc
or
and
cmp
test
das
fnstcw
xor
xchg
orb
and
insl
jl
jbe
cltd
std
test
je
jno
gs
into
mov
mov
fnsave
xchg
dec
mov
out
addb
sahf
pusha
testb
push
jne
popa
outsl
and
mov
ja
fdivr
xor
push
push
clc
js
mov
add
clc
mov
andb
jmp
outsl
int
loop
fists
mov
add
adc
cmp
jnp
push
sub
mov
data16
xchg
and
mov
pop
subl
ret
pusha
add
cmpsl
mov
xor
jge
xchg
add
cmc
mov
cmp
jl
jnp
stos
xchg
daa
addb
rclb
cmp
into
ds
jbe
jne
push
add
outsl
sub
lcall
mov
xor
and
andb
add
adc
add
or
adc
push
sarl
adc
add
push
aas
test
fiadds
int
sbb
std
mov
int
pushl
int3
aaa
xor
mov
fiadds
or
cmc
cmp
and
imull
jmp
int
dec
inc
mov
push
aam
nop
hlt
fstpl
jne
or
dec
add
sub
out
or
xor
ljmp
adc
lock
push
enter
sbb
ds
inc
lds
and
jg
jecxz
cwtl
jl
out
rorl
movsl
xchg
sub
test
repz
lret
faddl
add
pop
ror
sub
sub
jnp
mov
cwtl
cmp
lods
aaa
or
dec
decl
jnp
adc
cmp
jg
stos
enter
xor
jl
sub
lds
lcall
dec
es
stc
inc
fs
subb
fildll
lods
xor
adc
test
push
sahf
lret
std
cmp
mov
jl
fsub
and
cmp
mov
inc
and
fs
ud2
mov
mov
and
inc
or
and
dec
push
cmp
xor
aas
and
pop
adc
or
lret
sbb
leave
and
mull
and
pusha
dec
inc
sub
mov
sub
push
aas
and
outsl
shll
inc
cmpsl
pop
fwait
mov
mov
sbb
cld
nop
pop
cmp
ds
or
sbb
xchg
push
pop
mov
dec
mov
jnp
or
test
fildll
mov
sub
or
or
or
out
mov
mov
inc
add
push
ret
into
out
and
rorb
or
or
dec
pop
xorl
xor
pop
xchg
mov
test
mov
into
mov
xor
nop
add
add
subl
add
mov
stos
and
incl
or
test
pop
or
push
repnz
add
cmp
enter
add
leave
subb
push
incl
jmp
xor
popa
adc
addl
mov
dec
or
add
add
push
and
fs
nop
orl
mov
adc
mov
pop
and
add
add
mov
sub
xor
stos
imul
stos
mov
jecxz
int3
repz
pop
negb
pushf
movsl
pop
push
movsb
sub
jp
jnp
ljmp
jecxz
fdivl
push
jge
stc
leave
ljmp
jbe
push
dec
ret
lds
call
jmp
or
es
push
cs
shl
jbe
mov
test
or
loopne
call
stos
cmpl
addr16
lods
in
mov
xchg
test
pop
je
pop
and
incl
rorl
orl
dec
adc
dec
push
mov
sbb
cltd
sub
and
lcall
dec
jmp
je
lahf
xor
lods
mov
inc
loopne
arpl
xchg
fildl
cltd
in
mov
std
xor
push
adc
or
fstpt
in
mov
xchg
pop
call
mov
push
lcall
in
fists
in
stc
add
xchg
lock
inc
daa
sahf
repnz
jmp
inc
xchg
push
mov
sub
sbb
cs
mov
push
out
add
dec
test
jnp
dec
push
xor
nop
adc
cmp
mov
clc
jns
pushl
iret
fmuls
fwait
dec
adc
cmp
xchg
jp
or
mov
rcrl
jg
lcall
out
hlt
scas
push
push
cmp
push
or
mov
call
xor
add
movsb
push
cmp
jecxz
sbb
push
int
outsl
mov
lret
xchg
call
cli
pop
xchg
loopne
fcom
mov
adc
lea
clc
rorl
inc
jo
xor
mov
and
pop
mov
push
mov
dec
testl
sbb
and
xchg
gs
xchg
in
cltd
mov
inc
aas
sub
fdivl
push
imul
sahf
xlat
cmc
cmp
aad
hlt
push
mov
or
or
sarb
decl
aas
loope
pop
and
mov
daa
orb
mov
repz
nop
imul
lcall
mov
pop
mov
lea
jmp
test
decl
das
pop
aad
sub
mov
cli
push
in
out
scas
jb
cmp
lahf
pop
andl
movsl
mov
incl
xchg
scas
xor
sub
push
mov
lret
lahf
mov
cld
cltd
jp
ss
sbb
jmp
or
xor
push
int
loope
lcall
dec
xchg
and
jb
popl
push
loope
and
and
push
inc
push
push
call
nop
inc
add
or
and
or
push
inc
dec
adc
inc
or
aas
adc
mov
and
mov
jne
mov
sbb
push
fucom
int3
jne
xor
call
xor
in
xchg
sub
push
in
int3
outsl
mov
filds
imul
mov
or
data16
mov
and
lods
in
call
mov
fistpll
psubusw
pop
cmpsl
or
jns
ds
aaa
ljmp
pop
mov
mov
out
xchg
cmpb
xchg
push
stos
int3
sub
ljmp
ds
mov
movsl
loope
push
mov
lcall
lock
rcrb
cltd
mov
dec
mov
sahf
dec
fwait
dec
mov
scas
lds
and
mull
iret
fildll
addb
sub
enter
xchg
mov
pushf
adc
sub
cld
in
jo
cli
mov
mov
fadds
mov
rolb
fisttps
mov
andb
cmp
mov
mov
shld
into
addb
inc
test
aaa
insb
pushl
mov
push
clc
mov
shll
sbb
andb
les
mov
loop
ja
cmpsb
stc
cmp
cs
fwait
pop
push
idivl
ss
js
xchg
int3
mov
fidivs
jle
aas
int
mov
push
mov
lea
fwait
push
test
clc
decl
mov
xchg
pushf
jl
hlt
mov
pop
and
incl
pop
sahf
in
or
lret
dec
lea
ss
scas
iret
mov
leave
xchg
std
mov
mov
lcall
jbe
test
lea
pop
mov
mov
in
jg
sbb
ljmp
pop
dec
cmpsl
pop
pop
add
push
sub
jle
mov
fcmovnb
mov
lea
popa
ret
cmpsl
popa
jno
inc
sub
insl
call
roll
notl
mov
xchg
pop
outsb
jmp
inc
pop
sbb
test
xorb
scas
mov
cmc
in
testb
and
out
pop
cs
inc
call
fistpll
movsb
mov
lret
mov
pop
es
int
stc
xlat
pop
lret
mov
mov
mov
clc
in
or
mov
lea
and
push
aam
test
sub
call
dec
ss
neg
dec
shll
stos
push
cmp
push
insl
cmp
jbe
es
jge
fisttpl
out
es
fiadds
lret
stos
fiadds
iret
imul
ss
and
mov
mov
aaa
pushl
adc
lret
push
outsb
fcoml
push
std
mov
jbe
push
mov
arpl
push
pop
push
and
sbb
popa
in
pop
pop
pop
fistl
clc
pop
callw
movsb
push
mov
mov
add
and
movsb
pop
dec
in
pop
in
fwait
push
xor
xchg
dec
sbb
lods
outsl
sti
jg
jb
pop
or
jb
call
push
imul
clc
jmp
sahf
scas
mov
mov
jle
arpl
out
jle
push
out
mov
mov
loopne
mov
jae,pt
adcl
mov
add
std
push
jg
jmp
add
fbld
sbbb
in
or
popa
jg
incl
addr16
inc
push
jmp
jmp
out
addl
cmp
scas
pop
cmp
sub
loop
sub
insl
cmpsb
scas
mov
clc
scas
test
movsb
out
sar
in
jg
cli
mov
pushf
outsb
mov
cltd
lock
adc
xchg
lahf
push
arpl
xor
sub
mov
add
mov
bound
pushf
and
call
mov
pushf
out
xor
sub
mov
mov
mov
fsubrl
cmp
xchg
aad
push
insb
bound
adc
out
lcall
sbb
arpl
movsl
mov
push
ficoms
xchg
in
fcmovnbe
std
pop
mov
jmp
xchg
test
push
xchg
test
out
arpl
fwait
mov
sbb
sbb
aaa
mov
arpl
sti
ljmp
mov
int
lock
mov
pop
mov
rcrl
call
mov
mov
push
test
push
jmp
mov
nop
mov
leave
push
in
sub
shlb
and
sub
jns
mov
int
ss
jg
sbbb
movsb
xchg
pusha
arpl
pop
jb
pop
sub
call
mov
pop
inc
pop
aad
filds
sub
mov
bound
outsl
call
in
and
sub
xor
loope
dec
jno
push
movsl
fsubs
inc
pusha
cli
mov
mov
push
std
js
mov
ljmp
out
decl
movsb
mov
popf
xchg
insl
lahf
push
lahf
or
xchg
sub
cld
in
pop
push
scas
fldl2t
mov
mov
mov
jmp
ret
sub
es
adc
jge
and
push
xor
adc
outsb
or
mov
mov
cli
and
pusha
imul
outsb
cwtl
cld
scas
mov
push
cs
cli
mov
push
inc
jnp
aam
lahf
adc
mov
push
es
mov
xchg
lcall
pop
or
mov
ret
int
dec
jg
fwait
mov
aad
mov
mov
fxam
sbb
xchg
push
pop
mov
pushl
loope
lods
push
ficoml
sbb
call
hlt
lahf
adc
push
mov
ss
push
cs
jg
movsl
aas
int3
pop
int
cmc
in
jb
jecxz
push
mov
aas
mov
cld
mov
andl
mov
push
dec
scas
and
and
push
pop
and
add
shll
fnstenv
clc
call
ja
outsl
jno
xor
outsl
popa
xor
push
push
dec
jp
dec
dec
push
xor
ljmp
inc
jo
pop
push
gs
pop
dec
pop
cmp
dec
jne
insb
push
pop
push
push
je
dec
ja
pushl
inc
dec
dec
dec
push
dec
inc
push
cmp
xor
dec
push
jno
push
dec
xor
push
jp
push
jg
outsl
dec
jbe
jb
js
push
push
push
ja
inc
pop
jo
mov
dec
xor
ljmp
aaa
outsl
dec
pop
push
popa
push
dec
dec
dec
outsb
jb
xor
je
pop
dec
push
xor
pushl
jne
pop
push
xor
xor
dec
jbe
data16
inc
dec
dec
inc
inc
xor
pop
gs
incl
push
dec
inc
fs
gs
dec
push
cmp
fs
pop
js
jbe
inc
inc
outsl
outsl
xor
call
imul
xor
js
popa
dec
xor
mov
jbe
gs
dec
inc
xor
dec
dec
push
adc
cmp
inc
mov
pop
dec
jb
inc
push
inc
aaa
xor
dec
arpl
xor
xorb
insb
jno
imul
je
dec
pop
inc
outsl
fs
imul
pushl
push
cmp
push
js
dec
ss
push
inc
jp
popa
jno
dec
outsb
cs
mov
jg
pop
imul
jbe
dec
je
xor
inc
ljmp
dec
inc
bound
inc
push
xor
aaa
inc
mov
dec
push
push
fdivp
decl
dec
inc
jno
pop
jbe
push
xor
inc
outsl
dec
jo
insb
dec
push
stos
aaa
data16
pusha
sub
xchg
inc
and
inc
add
testb
xchg
jg
add
rcrl
js
popl
add
shll
sbb
inc
and
add
fcom
movsb
jns
sub
sbb
add
lock
int3
iret
test
xlat
loopne
lock
in
and
and
test
dec
and
adc
shrl
push
pop
dec
repz
or
test
test
repnz
mov
aam
out
add
inc
cmp
and
ja
push
inc
sub
outsb
sbb
jbe
push
or
ss
in
mov
adc
and
adc
lcall
sub
in
sbb
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
rcrb
jle
xor
loop
in
sti
cmpsl
jge
jns
xor
ret
xchg
dec
dec
mov
cmpsl
insl
mov
push
mov
subl
lcall
pushf
mulb
les
and
jmp
mov
idivb
daa
out
dec
test
dec
push
popf
inc
test
pop
ds
mov
pop
js
rolb
pop
sti
jbe
adc
cs
adc
cmp
or
push
in
rorl
push
inc
fisttpll
inc
push
xchg
in
sbb
adc
cmpsl
dec
jo
sbb
iret
lock
ret
push
in
jo
jbe
pop
xchg
loop
xlat
inc
out
ret
addb
enter
xbegin
loope
negb
pushf
pop
test
outsl
fadd
mov
outsb
push
cmp
outsl
and
into
mov
sub
xchg
jb
push
pop
xor
shll
data16
aas
leave
mov
sub
insb
push
push
mov
xchg
jo
int
fldt
icebp
sarl
add
mov
ss
dec
mov
jmp
pushl
ffreep
jl
jns
test
jbe
insb
mov
xchg
je
sti
fiaddl
das
jge
insb
jle
scas
fadd
jb
out
jmp
call
fwait
iret
sti
sbb
into
loope
jbe
push
jae
loop
pop
adc
scas
ds
mov
out
rol
push
in
imul
js
or
or
pop
imul
gs
xor
idiv
pop
imull
fs
insb
pop
inc
sbb
gs
jb
je
arpl
push
arpl
mov
cs
gs
jbe
add
pop
jb
mov
outsb
and
imul
jne
mov
jne
inc
jb
sbb
outsl
arpl
adc
aaa
pop
xor
push
fbstp
inc
outsl
jne
pop
push
jne
jns
push
outsw
jb
popa
jnp
out
outsb
arpl
sbb
push
adc
sbb
fidivs
sti
inc
jne
mov
popa
fs
fs
imul
fs
or
insb
mov
adc
dec
cmpb
jmp
loop
popa
jb
outsl
dec
jne
mov
flds
insb
sub
sub
js
ss
sub
movsb
mov
pop
arpl
sbb
ficomps
mov
jb
jns
js
push
out
flds
and
popa
divb
into
or
rolb
push
jb
inc
fs
jae
mov
jae
imul
dec
push
fsubr
rcrl
inc
daa
inc
imul
sub
and
inc
push
xchg
pusha
inc
mov
insl
mov
xor
sbb
mov
fs
jb
scas
cmp
or
bound
mov
lock
or
push
idiv
push
push
outsb
push
cmp
jo
xor
dec
mov
jecxz
ss
push
outsl
xchg
and
cmp
mov
jns
push
je
xorb
push
cmp
imul
jo
pop
adc
push
sahf
ss
jo
jbe
add
shl
xchg
xchg
das
dec
in
jne
jb
push
gs
push
cwtl
lds
jae
mov
aas
call
addr16
outsl
mov
movzbl
jnp
gs
push
inc
jbe
jo
jae
pop
popa
mov
jg
add
cmp
outsb
mov
push
dec
mov
popa
jne
jg
jns
sbb
xchg
gs
pop
pop
aas
and
int3
mov
daa
lret
int3
push
push
mov
sbb
push
out
or
and
lcall
push
insb
push
dec
bound
repz
test
jg
jo
cmpsb
movl
and
xchg
imul
lcall
mov
jge
pop
repz
adc
and
mov
nop
pop
xchg
arpl
jne
inc
lahf
test
cmpsb
int
and
aas
repz
and
or
inc
stos
pop
push
lds
push
dec
push
xor
popa
push
mov
pop
jae
inc
shrb
pushf
pushf
xchg
sub
push
mov
daa
push
add
pop
inc
sbb
ret
add
frstor
adcb
push
rcll
sbb
sub
fmuls
das
les
inc
jo
jo
push
xor
adc
sbb
sub
jl
dec
jmp
sbbb
mov
mov
cmp
es
push
mov
daa
ss
xor
push
add
pop
mov
pop
lret
movsb
in
jnp
pushw
jl
push
sbb
ds
dec
push
xor
inc
imul
xlat
inc
insb
js
stos
shlb
lea
movsl
jecxz
movhps
pop
push
sbbb
and
mov
pop
and
xchg
ret
gs
js
add
popa
jo
addr16
pop
pop
sbb
test
inc
inc
cmpsl
push
xchg
adc
push
mov
jb
daa
sub
imul
incl
jne
push
sbb
push
push
jmp
jmp
in
or
pop
out
sbb
or
dec
arpl
sbb
roll
inc
lret
mov
test
pop
mov
rcrl
fimuls
inc
arpl
sub
adc
nop
inc
add
inc
push
add
add
adc
andb
push
and
add
sub
mov
xchg
mov
jmp
push
and
add
add
and
add
sub
test
pop
add
add
adc
shlb
orb
add
adc
shlb
addb
add
mov
orb
adc
adc
nop
inc
add
add
inc
sub
enter
nop
inc
add
inc
push
add
add
add
adc
shlb
sub
and
subb
sub
mov
add
imul
inc
inc
orl
inc
adc
xor
add
add
fs
add
nop
push
add
add
xorl
subb
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
xchg
sub
cwtl
fs
push
movl
or
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
scas
testl
ljmp
hlt
and
push
repz
in
lcall
jnp
inc
adc
pushf
or
imul
jg
lahf
pop
mov
ljmp
mov
lret
mov
stos
repz
fsubl
adc
push
data16
hlt
decl
xor
mov
sub
mov
mov
lar
loop
mov
mov
sub
jno
mov
in
dec
bsr
mov
mov
pop
push
popf
inc
sub
mov
inc
ror
int
mov
adc
cmp
sub
aad
push
xchg
pushl
mov
popf
insb
sti
std
sub
cwtl
repz
sti
add
adc
jp
in
loope
jno
pop
sbb
ljmp
sbb
jle
sbb
add
push
notl
les
out
pushf
in
incl
cli
sub
inc
pop
push
ss
sti
cmp
into
mov
add
or
lcall
cld
cmc
inc
int3
ljmp
std
ljmp
xor
push
aas
bound
pushl
aam
adc
fwait
add
lds
adc
mov
fisttps
daa
cmp
incl
push
lea
test
stos
xchg
ror
xlat
jae
cmp
dec
sub
out
std
mov
jmp
fwait
notb
sbb
cmp
jae
lcall
jg
incl
ds
addr16
cmp
call
stos
pop
out
movsb
adc
imul
lods
push
lret
xor
inc
push
or
jg
cwtl
push
ljmp
mov
sub
xchg
pop
pop
inc
xor
lock
push
add
dec
sbb
inc
stos
sbb
out
mov
std
mov
pop
insb
ret
mov
push
xchg
inc
ljmp
or
les
in
jne
pop
bound
stos
repnz
imul
jmp
data16
sub
xchg
iret
mov
jns
push
movsl
ja
mov
add
mov
call
push
or
xchg
ja
fimuls
mov
movsb
iret
cwtl
push
out
cmc
dec
mov
mov
ss
rcrb
out
adcb
jle
fildl
push
mov
push
inc
jnp
scas
es
push
je
addr16
pushl
dec
sbb
nop
movsl
and
push
nop
int3
repz
fcmovbe
jne
inc
sub
dec
cmp
jge
mov
push
mov
adc
das
inc
int
or
in
sub
fsts
sbb
outsl
incl
lahf
xchg
sbb
aas
sub
fnstcw
cmp
es
pop
pushf
mov
jno
pop
mov
fdivs
pushl
and
dec
xchg
adc
fdivrp
pop
adc
into
sarl
das
cmp
jle
rcl
push
dec
rol
adc
mov
push
and
jge
inc
pop
addb
inc
ror
inc
and
mov
scas
push
mov
imul
out
jns
mov
popa
call
xor
pop
ficoms
pop
fidivs
cmp
cs
and
sti
mov
fnstenv
inc
pop
ljmp
fwait
adc
bound
pop
or
loop
out
punpckhbw
insb
pop
push
loop
popf
incl
jmp
ds
in
clc
mov
ja
mov
xor
cld
testl
ret
cld
push
jnp
xchg
ret
daa
lret
mov
mov
iret
pop
sub
int
ja
out
xor
ds
sbb
add
mov
dec
rolb
aam
decl
and
adc
dec
js
out
mov
mov
gs
fs
pushl
inc
cmp
pop
mov
test
add
pop
into
sub
sbb
incl
cmpsl
and
repnz
int3
xchg
jecxz
hlt
in
mov
jae
push
mov
popa
jne
incl
sbb
nop
outsb
je
shlb
repnz
push
dec
mov
xor
xor
incl
xchg
imull
pop
sarl
and
outsb
int
and
push
mov
mov
xchg
add
or
sub
jg
mov
les
push
ds
push
and
call
mov
pop
xchg
ja
decl
sbb
out
insb
imul
testb
lock
sbb
xchg
test
popf
sbb
fadd
pushl
push
and
mov
das
stos
sbb
xchg
push
in
incl
dec
call
cmpsl
imul
add
mov
roll
cmp
cmp
add
call
xchg
mov
cli
mov
cltd
fstl
int
loopne
jmp
iret
in
mov
dec
cmpsb
xchg
stos
cli
out
pushf
cmpsl
mov
rolb
add
jmp
lret
jecxz
xchg
jnp
es
jl
sub
pop
orl
cmpsl
jl
scas
sti
iret
xchg
call
nop
pop
lds
xor
mov
mov
dec
or
out
lcall
es
and
int3
out
fs
cmpsl
lret
mov
lcall
cld
call
cld
leave
xchg
or
push
cmp
jno
jns
mov
jne
xor
pushl
dec
jl
mov
mov
enter
fabs
rcll
sub
sti
jge
jg
incl
dec
dec
xlat
and
fs
mov
dec
rorb
ss
inc
push
outsb
pop
mov
bound
stc
sbb
insb
add
push
inc
jb
pop
mov
xor
mov
ret
sub
imul
xchg
add
xchg
mov
call
jno
aam
test
and
cwtl
lds
scas
xchg
or
inc
imul
pop
cmp
cmp
and
dec
sbb
out
fcmove
int3
sub
bound
inc
adc
nop
push
in
notl
xor
mov
loopne
aad
jno
pop
jle
pop
ja
pushl
sbb
xor
nop
das
jo
jmp
popa
xchg
push
and
test
repz
jmp
or
xor
jl
mov
ds
pop
push
cltd
sbb
incl
xchg
add
leave
out
cwtl
mov
out
push
mov
dec
out
nop
sti
outsb
or
ja
xchg
out
test
mov
nop
jno
inc
dec
cld
imul
outsb
mov
enter
mov
adc
and
ret
cltd
inc
push
lret
jl
pushl
push
fisubrl
fwait
push
dec
jle
mov
cmp
cmp
popf
inc
pop
shl
cld
pushl
pusha
inc
es
pop
mov
mov
dec
ljmp
sub
push
incl
xchg
aaa
js
or
icebp
and
mov
shl
pop
cli
jl
or
mov
pushl
and
mov
mov
fnsave
int
negb
shr
aam
aad
adc
mov
pushl
xchg
add
pop
dec
test
adc
push
sti
hlt
adc
pop
icebp
lods
sbb
popf
iret
cmc
jnp
loopne
jbe
cmc
aas
jae
lds
sub
movsl
mov
call
int3
loop
lcall
out
xor
pusha
and
xchg
push
adc
jns
hlt
insb
test
or
fiadds
push
inc
mov
fcoms
jge
imul
or
test
xor
push
fiaddl
ljmp
push
xchg
andb
push
cmpsb
dec
aam
mov
add
bound
fwait
xchg
sub
push
pushl
iret
jecxz
jns
fxch
add
sbb
stos
test
mov
mov
decb
in
mov
pop
add
or
movsl
jns
and
insl
int
fcoms
fstl
mov
cmp
and
xchg
scas
mov
mov
addl
je
mov
push
daa
hlt
xor
and
cltd
icebp
xchg
dec
push
outsl
lock
mov
mov
lret
push
lock
lcall
call
cltd
lods
and
push
notb
fs
adc
outsb
pop
fs
lock
decl
repnz
mov
inc
test
pushf
movsl
int
dec
adc
movsl
mov
cwtl
es
mov
mov
nop
mov
clc
xchg
mov
scas
loope
imul
jmp
enter
and
mov
sar
ljmp
lods
fwait
mov
mov
xchg
mov
outsb
ljmp
out
add
adc
testl
inc
out
nop
lret
cwtl
push
jo
pushf
mov
mov
xchg
shl
jge
inc
mov
xor
xchg
or
insl
push
call
fisubs
fdivs
bound
dec
push
mov
xor
fisttpll
add
enter
cmp
out
loop
aad
sub
push
jge
inc
mov
sub
stos
and
xchg
cld
ljmp
sbb
sub
repnz
out
pop
mov
xchg
pop
and
xchg
inc
sub
int
cltd
lcall
push
imul
test
hlt
cmpsl
and
pushl
and
push
fstps
jmp
sbb
pushl
std
cmp
data16
and
sbb
lods
or
sbb
xchg
out
adc
sbb
cli
jmp
mov
sub
xchg
aad
fcomp
cli
jg
sbb
in
aas
lock
idivb
incl
addr16
enter
aad
xor
jnp
inc
inc
cmc
dec
sub
pushl
push
popa
es
xor
jne
mov
push
cli
sub
jo
inc
icebp
cli
or
push
mov
mov
bound
nop
movsl
push
int3
mov
xchg
popf
lret
or
incl
nop
ficoms
or
cmpsb
pop
fwait
jb
js
cmp
ud0
call
inc
mov
mov
jbe
icebp
push
sbbl
mov
nop
enter
fistl
test
jno
fdivs
jne
imul
imul
daa
push
sub
arpl
pushl
xchg
test
push
ljmp
ficomps
sahf
sub
ds
mov
xlat
lcall
ret
and
cmp
cmp
pop
cwtl
call
incl
sub
xchg
frstor
ljmp
push
arpl
jne
in
dec
repnz
cmp
decl
lock
ret
mulb
xchg
subl
lret
xor
aaa
inc
and
gs
and
cwtl
loope
pushl
add
lret
xchg
mov
and
xchg
mov
adc
pop
mov
call
incl
fs
outsb
testb
jno
loopne
pop
iret
push
mov
loopne
jge
mov
out
sar
pushl
pop
mov
mov
cld
xchg
mov
xor
cld
jg
dec
dec
icebp
lods
push
cld
in
fwait
cld
js
push
lds
push
not
or
xchg
mov
pushl
lods
ret
fld
xchg
shll
into
xchg
cli
pop
jae
ficomps
in
xchg
cmc
jmp
je
dec
test
jns
jle
mov
sbb
daa
pop
int3
dec
and
lcall
mov
pop
mov
sub
cmp
adc
sbb
scas
es
popf
mov
jnp
cmpb
and
fnsave
inc
dec
cmp
outsb
out
xor
pop
add
incl
sbb
adc
mov
inc
sbb
in
aad
std
jno
dec
lods
ret
pushf
fwait
incl
ds
pop
ret
test
insb
sahf
aad
loopne
dec
add
add
mov
fwait
jb
test
lcall
pusha
pop
ljmp
das
xlat
pusha
imul
lcall
or
repz
fcmovnbe
nop
and
into
das
clc
mov
daa
mov
ficoms
xchg
int
dec
aaa
pushl
add
sbb
test
sar
dec
les
and
and
incl
mov
in
sbb
icebp
imul
andnps
decl
cmpsl
sub
rclb
popf
xchg
stc
jnp
push
rcl
ret
mov
or
pop
dec
adc
lcall
lcall
data16
inc
cld
mov
bound
scas
rcr
xchg
jmp
incl
shl
xor
xor
and
sbb
inc
test
mov
jb
idiv
lcall
mull
aas
ljmp
dec
stos
ss
or
popa
adc
mov
jg
jns
and
andl
inc
xor
pusha
clc
out
insb
int
mov
push
sub
fnstenv
cmc
sbb
ret
push
mov
dec
sub
lock
js
xchg
cmpsl
xor
xchg
cli
mov
xchg
adc
fwait
xchg
call
stos
inc
pop
mov
jmp
ja
loop
xor
out
fidivrl
cmp
pushl
out
sub
fistpl
xor
cmp
int3
arpl
movsb
div
lock
test
movsb
outsl
clc
or
inc
mov
cmp
cltd
out
insl
ss
pop
in
sahf
rolb
call
mov
and
jle
std
sbb
stos
and
jp
jbe
cltd
lds
daa
lods
or
ljmp
lds
or
nop
add
inc
push
ret
xor
stos
clc
xchg
cmp
lret
fcomip
push
icebp
aaa
push
mov
sub
les
or
icebp
leave
push
jnp
dec
pop
jmp
sahf
clc
push
inc
xor
test
std
adc
xor
jl
in
mov
sbb
fnsave
daa
and
xchg
inc
cmp
and
mov
clc
sbb
ds
jmp
push
sub
jecxz
cmpsl
push
push
jo
ja
loope
daa
lea
adc
lcall
xchg
shlb
cmp
mov
inc
adc
insb
or
push
ljmp
fsubrs
mov
push
sub
out
push
sub
clc
imul
mov
aam
and
push
mov
and
std
xchg
repz
addr16
xchg
fisubrl
xor
fldcw
aam
imul
ds
xchg
repnz
lcall
dec
jo
xor
cld
lahf
fisttpl
push
sti
repz
add
dec
mov
data16
cs
lock
pushl
cmp
rorb
jbe
xor
jbe
lcall
xor
fs
lahf
addr16
insl
iret
xchg
sbb
pop
jo
insb
push
pop
rclb
decl
fs
fcoms
pop
out
inc
cmc
push
loope
mov
incl
mov
lret
stos
push
enter
pop
stos
dec
push
push
aas
cmp
pop
popf
sub
jmp
ret
or
divl
and
popa
sbbl
mull
lcall
xlat
push
hlt
sub
movsb
push
cmc
push
jae
inc
inc
and
or
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
dec
mov
mov
mov
sub
and
stos
les
add
add
xor
push
add
in
xor
dec
scas
inc
mov
add
mov
test
pop
add
add
add
sbbb
imulb
decl
jne
add
adc
addb
inc
addl
in
cli
jo
incb
pop
rolb
sbb
sub
sub
sti
fistl
mov
roll
adcl
aas
rorl
lcall
js
adcb
xchg
sbb
je
in
mov
push
jge
shrb
xor
lcall
sub
pusha
shll
je
rorb
rclb
cmp
rolb
sar
cld
or
add
or
insb
nop
arpl
pop
shrb
or
cli
data16
or
or
add
sbb
and
adc
add
or
in
xchg
pop
imul
jae
pusha
sbb
jns
cmpsb
inc
xor
or
fwait
cmpsb
mov
add
xor
sbb
push
or
pop
jl
leave
scas
dec
ss
imul
dec
sub
lods
mov
push
and
cmc
pusha
test
fisttpll
lds
rcrl
inc
popa
push
pop
fs
cmp
mov
mov
push
std
gs
jne
ss
bound
push
loopne
xchg
mov
rep
imul
add
imul
fimull
jo
gs
push
pop
push
ja
test
add
imul
push
push
xlat
outsb
scas
push
or
add
sbb
inc
pop
jnp
imul
fnstcw
js
roll
mov
jns
or
ficomps
add
loopne
aad
mov
cmpsb
imul
jno
sub
roll
aas
das
sub
insb
or
call
pop
push
int
mov
dec
rcrl
push
pusha
fucomip
push
addr16
imull
mov
seta
jmp
ss
loopne
bound
cmp
jae
adc
mov
test
loope
sbb
pop
or
outsb
cmp
loop
out
jg
scas
sbb
fstps
int
mov
testl
mull
push
sbb
dec
arpl
xchg
int
imul
movsb
jecxz
or
rcll
imul
out
add
or
adc
and
push
aas
pop
aas
loopne
aad
inc
mulb
add
add
stc
pusha
sbbb
sbb
lds
popa
add
stos
popa
and
sahf
inc
cmp
rcr
insl
hlt
jo
jl
sub
fdivrs
stc
jo
push
pop
sbb
ja
xor
mov
lahf
cwtl
or
fs
xchg
loopne
jae
adc
pusha
pop
pop
add
push
jne
mov
daa
sbbl
adc
sbb
jmp
popa
loopne
push
sbb
and
mov
inc
xor
pop
jo
or
add
push
push
scas
add
fcmovbe
mov
sbb
adc
outsb
pop
sti
rcll
cmp
or
add
or
ficoms
and
jo
outsl
insl
xlat
pop
xchg
jp
or
sub
insb
mov
adc
push
outsb
add
push
and
xor
xorl
push
cmp
rorl
aad
mov
rcrl
in
jl
add
sbb
shl
fisubs
int
in
xor
jnp
fidivs
add
xor
pop
aaa
lcall
pop
sti
and
lock
sub
sub
jnp
movsl
fdivp
pop
sarl
lock
and
sbb
fimull
pop
sbb
push
lds
and
jbe
add
pop
cmp
dec
mov
sbb
jmp
or
jo
fucomp
add
pop
imul
add
add
ds
add
lods
and
add
jg
jl
mov
xorb
lock
pusha
ret
mov
add
mov
stos
sbb
jg
sbb
popa
pop
push
inc
std
ret
cmp
sub
jo
or
xor
outsl
jo
jno
xchg
pop
pop
mov
incb
inc
add
add
xor
leave
enter
add
adcb
mov
cwtl
ds
push
test
pop
xor
vmovsd
jbe
cli
inc
incl
cld
pop
pop
loop
pop
cmp
inc
inc
pushf
dec
pop
ja
ljmp
das
mov
testl
cmp
xor
in
fiaddl
push
sbb
sbb
cmp
add
pushl
insb
dec
inc
xchg
lahf
add
push
jle
mov
outsb
fadds
cmp
aam
outsl
mov
mov
jno
int3
or
jne
cmp
daa
fldl
jo
pop
pushl
cld
call
add
push
enter
scas
mov
add
dec
sub
in
das
cli
pop
add
imul
gs
lea
jo
fisttps
outsl
add
mov
je
add
and
je
call
loopne
imul
inc
adc
jb
stc
andb
xchg
jg
or
jo
addb
mov
add
les
add
loop
daa
cmp
ret
mov
lock
xlat
cmp
or
jo
fsubs
xchg
push
jo
mov
push
sarb
shll
lcall
push
jp
out
faddl
jg
push
les
add
push
notl
fnsave
or
add
cs
add
in
jo
adc
loopne
mov
inc
adc
mov
cmp
ja
lds
sub
filds
std
add
push
adc
adc
into
xor
lret
pop
mov
test
int
sub
add
jbe
inc
or
sbb
jbe
xor
xchg
les
decl
shr
pop
lock
pusha
lock
or
add
xchg
push
icebp
add
adc
mov
or
push
std
fisubrl
push
cmpsb
pop
dec
sbb
nop
add
js
cmp
mov
les
adc
push
imul
mov
dec
lock
push
lcall
ljmp
mov
push
and
test
test
pop
inc
push
call
push
sbbb
dec
sahf
imul
jl
cmp
lock
sbb
lods
imul
dec
pop
jnp
cmpsb
data16
xor
adc
pop
mov
cmpsb
jns
imul
bound
andb
sbb
pop
rcrl
xchg
dec
jo
cmpb
xor
cmp
aam
xor
sub
mov
dec
mov
mov
dec
fs
add
int
inc
push
add
jbe
imul
pmullw
lods
inc
shll
push
stos
xchg
or
imul
pushf
dec
arpl
jle
lods
imul
testb
adc
lahf
repnz
push
adc
lock
jno
push
xor
ret
icebp
or
lcall
mov
or
ss
or
pop
mov
push
xchg
lock
push
cmp
rclb
addb
cmpsb
imul
mov
adc
repnz
sbb
adc
lcall
jne
xor
sub
bound
stos
adc
shr
aad
pop
sbb
lcall
fidivl
insl
sub
lea
mov
cli
lea
add
push
ss
pop
jae
jo
or
test
js
iret
in
adc
loop
insl
mull
xorl
out
pop
mov
jo
or
mov
adc
jo
or
pop
imul
jnp
dec
es
negb
push
cs
clc
pop
ja
aaa
mov
lcall
push
daa
scas
push
push
xchg
mov
out
push
adc
sbbb
push
sahf
inc
mov
jg
push
mov
aas
repnz
jnp
testl
mov
or
push
cmp
add
dec
push
ss
out
gs
push
jo
push
roll
pop
ja
repz
pusha
and
inc
cli
cmp
jns
push
push
pop
sbb
ja
push
js
shrl
iret
repz
push
dec
sahf
into
repz
add
ja
cmp
repz
je
leave
or
sahf
fs
push
pop
test
dec
iret
jmp
jmp
cltd
xchg
mov
jl
fstps
cmp
repz
or
dec
iret
repz
stc
add
mov
cmp
xor
or
cmp
repz
repz
in
pop
sbb
cmp
cmp
adc
out
sahf
out
mov
mov
sarl
cmc
add
jns
out
jbe
int
out
sahf
out
lods
push
xchg
out
sahf
in
or
popf
arpl
iret
repz
jle
fldl
ljmp
out
sahf
cs
scas
js
dec
push
adc
in
xor
popa
and
add
out
jns
xchg
jns
rcrl
sub
in
dec
repz
dec
dec
sahf
mov
pushl
lret
gs
out
and
dec
sahf
out
jmp
sbb
in
cmp
mov
push
lahf
decb
addr16
out
mov
xor
mov
or
jns
incb
pop
sbb
jns
xchg
xchg
jnp
xlat
imul
scas
or
jae
jae
notl
ja
jns
iret
aaa
iret
addr16
daa
scas
push
out
mov
inc
out
pop
ljmp
push
aas
filds
inc
mov
jle
sahf
mov
push
out
add
out
add
push
out
add
add
ds
push
jno
fsubp
push
add
add
in
add
cmp
or
add
add
sbb
pop
push
popa
sub
test
xor
dec
push
imul
mov
adc
ljmp
hlt
push
xor
lcall
add
incl
imul
ljmp
inc
push
shl
les
jo
push
lret
jmp
int
fisttpl
lcall
fdivrl
jmp
rclb
inc
jl
jle
sub
mov
sbb
or
jno
repz
test
in
insl
scas
mov
hlt
cmp
insb
adc
aas
test
fs
std
adc
mov
insb
push
arpl
pusha
jg
and
mov
inc
pusha
aad
jno
mov
mov
test
jmp
xchg
cwtl
mov
sub
mov
lods
sbb
fdivs
mov
xor
sar
out
cli
stos
push
xor
es
jmp
hlt
mov
fadd
mov
xchg
mov
mov
testl
or
out
dec
push
jmp
ret
mov
inc
fdivl
jno
add
rcrb
jbe
mov
loopne
mov
pop
in
pop
loopne
mov
call
lret
pushf
test
xchg
out
push
loope
or
push
sarb
fs
pop
arpl
or
imul
gs
call
xchg
push
insb
test
cwtl
test
pmaddwd
fnstenv
adc
call
mov
bound
jl
mov
popa
mov
xor
cmp
incl
mov
aam
movsl
fisttps
xchg
fdivrs
add
rcll
incl
fldcw
mov
mov
add
sbb
or
ret
jno
call
inc
add
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
fdivrp
lcall
leave
fldcw
fstpl
xlat
call
or
mov
rcr
mov
in
dec
mov
lcall
mov
movb
push
ja
popf
ljmp
jae
or
sar
jecxz
cmp
push
or
hlt
iret
push
in
and
scas
add
jg
decl
pop
jge
xchg
sub
add
add
push
imul
incl
sbb
imul
aam
pop
sub
mov
dec
frstor
fistpll
decl
sub
adcl
fisttps
addr16
jmp
mov
mov
and
sbb
scas
or
ss
jp
inc
cmp
pusha
fildll
ljmp
xchg
popa
lret
in
mov
outsl
and
push
or
cld
inc
or
decl
add
shlb
add
xlat
or
sub
push
pop
pop
call
ret
shlb
loop
ficomps
ret
fptan
arpl
arpl
insl
add
fistpll
shlb
jmp
addr16
jb
jl
jge
mov
push
sub
jnp
sbb
xchg
repnz
fdivrl
fisttpl
sub
roll
pop
mov
ljmp
sbb
xor
mov
negb
ja
outsl
mov
sbb
pop
or
xor
pop
cmc
mov
gs
xchg
scas
clc
sub
imul
push
xchg
mov
mov
stos
addl
add
sahf
cmpsl
or
pusha
shlb
jmp
outsb
ds
shrl
cltd
or
inc
fdivs
lods
scas
mov
fiadds
mov
xor
repnz
lret
mov
pop
mov
sarb
jg
int
push
ficoms
fldenv
sarl
mov
dec
popa
std
sbb
imul
sub
mov
fucomip
decl
add
sub
sbb
xor
sub
inc
lds
jns
pop
push
cmp
fxch
mov
ret
call
jne
out
cli
xor
hlt
jecxz
dec
mov
mov
mov
xor
xchg
inc
dec
out
and
push
sub
js
inc
out
popa
stos
xlat
scas
cs
mov
sub
test
add
out
add
ss
ljmp
insb
jmp
aas
inc
aam
pop
int
and
xchg
sbb
lahf
mov
inc
mov
sahf
ja
ljmp
icebp
sbb
repz
lcall
pop
adc
inc
inc
xlat
int3
imul
jg
jo
fdivl
cmp
pop
sub
rorl
pop
or
ss
fisttps
pop
mov
pushl
std
push
jo
iret
gs
sub
mov
pop
nop
add
lahf
pop
incl
test
xchg
test
cmp
jns
jae
dec
call
inc
ret
sub
pop
cli
dec
jns
cmc
pushl
mov
sub
mov
lea
fistpll
mov
and
xchg
or
xchg
lea
testb
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
cwtl
xlat
fsubrp
test
call
insb
lret
cli
cmc
mov
out
imul
sbb
test
cmpsl
adc
push
out
cmp
jmp
adc
and
inc
and
inc
out
fimull
lret
push
fwait
cmp
dec
aaa
std
lcall
add
int3
cmpsl
xor
loope
lods
adc
adc
adcl
lcall
push
and
leave
adc
inc
jle
xchg
ja
loop
jns
das
dec
dec
and
mov
or
lcall
or
lea
fisubs
into
out
jle
add
out
inc
ret
adcl
aad
mov
mov
xchg
cmpsl
test
cwtl
cmpl
test
mov
decl
ja
scas
adc
insb
hlt
inc
xor
fldcw
push
ret
adc
std
and
jo,pt
inc
jg
ja
mov
out
mov
mov
movsl
jnp
sbb
mov
ja
incl
fldcw
dec
sub
or
sub
add
in
add
mov
decl
jmp
hlt
out
les
ret
xchg
fdecstp
push
mov
sbb
xchg
fidivs
decl
test
push
lret
jo
nop
sbb
shrl
inc
loope
fisubs
lcall
lds
push
call
dec
sbb
mov
pop
ret
cwtl
xchg
test
fldenv
incl
lahf
fdivrp
test
call
addb
mov
rorl
mov
cmp
decl
adc
sub
mov
pop
dec
loope
dec
or
imul
inc
jp
mov
arpl
push
out
shlb
mov
stc
jb
xlat
loopne
adc
mov
jo
popf
jbe
mov
add
clc
insb
cmp
cmp
adc
sub
test
jns
jle
bound
cmp
mov
push
mov
xchg
adc
in
xor
bound
daa
push
lcall
call
jle
push
push
xlat
jnp
sbb
in
mov
xor
call
incl
jle
push
ret
xchg
xchg
dec
insb
shlb
adc
push
pop
or
call
mov
aas
adc
adc
cltd
sbb
mov
pop
mov
shr
popf
in
fsubr
out
inc
loope
adc
shlb
incl
xchg
aas
inc
and
jo
adc
out
test
pop
dec
imul
pop
jle
enter
decl
push
out
mov
dec
testl
adc
std
and
jg
ljmp
enter
xchg
aam
add
test
adc
lret
push
dec
jl
incl
push
dec
add
jo
rorl
sub
push
or
stc
sbb
lods
xchg
fmuls
cmc
sub
decl
ret
or
leave
in
adc
push
push
or
sbb
ja
in
sbb
mov
sbb
repnz
pop
es
outsb
dec
jae
jmp
lcall
adc
test
jp
pop
inc
dec
cmp
sub
cmp
leave
cmp
or
ret
out
inc
aas
hlt
test
cmp
push
add
nop
jge
aaa
leave
ret
fidivl
jnp
cli
mov
xchg
xor
add
xor
imul
mov
xor
daa
pushl
pop
sub
and
out
ljmp
sub
fidivrs
sub
incl
cld
mov
sub
sbb
cmp
mov
gs
mov
lcall
lcall
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
pushl
fmull
jg
or
jl
je
jns
push
inc
js
mov
cmp
lret
dec
cs
insl
and
cmp
nop
es
xchg
in
ja
std
push
xor
cmp
imul
adc
sub
shr
sub
cmpsb
gs
add
mov
and
imul
sbb
scas
outsb
xchg
dec
add
dec
xor
sbb
insl
mov
dec
pop
fstpl
jg
lock
inc
or
inc
ds
inc
mov
pop
cmovo
out
inc
loop
mov
push
call
xor
mov
mov
jae
clc
push
inc
stos
cmp
adc
push
sub
push
pop
cmp
lcall
push
and
in
pop
dec
xchg
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
loope
jno
loopne
iret
mov
movsl
jae
mov
fsin
out
addr16
in
dec
es
decl
lock
lock
movsb
sahf
mov
in
sbb
das
call
jne
stos
mov
jmp
pop
imul
cmp
sar
popa
insb
xchg
push
push
push
call
adc
cli
lods
fdivr
mov
scas
pop
clc
mov
add
addb
lock
push
inc
icebp
imul
pop
sub
dec
cmc
add
decl
lahf
pop
js
test
mov
fcmovb
jecxz
fildl
jno
je
pushl
fstpl
dec
aaa
fsubl
or
xlat
adc
dec
fsubr
aam
mov
aad
movsb
ror
into
push
jmp
shll
pop
pushf
les
sbb
xor
ret
incl
xchg
ret
pop
adc
push
adc
push
scas
dec
lret
pusha
lds
enter
leave
mov
inc
int3
ljmp
xchg
in
ror
mov
xchg
mov
insl
nop
roll
xchg
out
jmp
xchg
arpl
cmpsb
xchg
push
push
fs
and
pop
mov
sahf
imul
cmp
outsl
mov
in
add
mov
xor
iret
xor
dec
mov
jmp
mov
adc
inc
mov
add
dec
and
mov
lcall
lcall
mov
subb
faddl
pushf
cmpsb
push
test
sbb
xchg
jb
xchg
loop
push
lock
pushl
add
stos
push
outsb
movsb
stos
cmpl
mov
sub
cmpsb
lods
lods
out
icebp
ljmp
mov
movsb
mov
sub
mov
push
std
jl
bound
mov
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
psubd
fildll
xchg
and
mov
stc
notb
into
pushf
xchg
mov
jl
scas
out
cmc
das
push
and
xor
mov
mov
pop
loopne
adc
int
fidivs
and
and
adc
mov
inc
jne
or
loopne
outsl
incb
dec
and
push
int3
ja
loopne
adc
pusha
push
sbb
idiv
call
xor
cli
mov
lods
inc
aaa
sarb
cmpsl
mov
outsl
into
int
mov
jg
xchg
ljmp
aas
popa
rcrb
xchg
call
jae
sub
mov
pushl
inc
jp
shrl
sbb
cmp
das
add
das
repz
in
xchg
sbb
js
in
xchg
frstor
sub
ja
adc
ljmp
in
inc
cmp
call
clc
sub
cmp
and
push
sahf
loop
outsl
dec
jg
ljmp
outsb
pop
movl
xor
cmp
jg
xchg
lahf
fsubrl
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
nop
sbb
mov
test
lods
push
pop
jg
jnp
ret
push
sub
call
sbb
cmpsb
mov
adc
rcrl
cmpb
das
lret
jnp
dec
ja
outsl
cli
jg
or
jae
movl
or
cld
adcl
out
in
ficoml
daa
mov
mov
out
mov
pop
mov
in
fildl
outsb
js
lcall
pop
pusha
cld
mull
cmp
das
xchg
adc
sub
pusha
inc
mov
pop
clc
or
dec
push
inc
iret
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
inc
dec
lock
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
adc
push
decl
aaa
pop
in
push
loope
mov
cwtl
call
scas
jmp
inc
addb
jmp
ds
mov
xlat
loopne
xor
mov
in
mov
jle
inc
ljmp
sbb
call
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
push
nop
mov
inc
xor
jl
cmpsl
sbb
pop
test
cmp
ds
add
pushl
jbe
xor
sahf
mov
fsts
js
scas
dec
sarb
std
rcrb
clc
lcall
inc
push
pop
xchg
testl
and
sbb
ljmp
jle
out
shll
adc
ficomps
mov
ret
mov
es
add
mov
rclb
push
arpl
sahf
and
sahf
push
inc
cmpsb
mov
mov
leave
outsb
mov
or
adc
add
into
movsl
out
xchg
mov
rdmsr
fsts
out
pop
cmc
call
mov
jbe
sbb
jbe
jp
add
ljmp
jae
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
jmp
inc
fcoml
inc
clc
fs
jns
stc
lret
push
xchg
inc
and
lcall
mov
int
decl
lock
imul
ss
test
cltd
xchg
cs
add
jg
xchg
dec
jno
aam
loope
xor
ss
mov
filds
loopne
in
negb
pop
jmp
icebp
fiadds
subb
aam
into
mov
xlat
pushl
test
jg
mov
mov
sub
lret
sbb
jg
push
adc
jle
test
sub
adc
ja
mov
jle
jg
test
jmp
mov
mov
data16
fisubrs
mov
rcll
out
stos
pushl
loope
mov
mov
rolb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
push
mov
test
or
imul
push
push
add
xor
or
call
clc
insl
les
push
arpl
mov
xchg
mov
push
push
xorl
sbb
dec
mov
repnz
jno
jnp
inc
fsubp
fcmovbe
jge
fucom
jmp
aam
push
jl
test
in
insb
cwtl
push
fwait
imul
pushl
leave
in
jmp
pop
dec
pushf
push
insb
flds
or
enter
pop
sub
in
lcall
jno
ret
add
shll
test
pop
or
cli
mov
mov
call
stc
inc
int
insb
jecxz
fistps
or
pop
xor
xlat
push
cmp
incl
popa
push
fidivs
and
mov
movsl
add
or
or
mov
decl
jmp
xchg
popa
sbb
cmp
shlb
mov
adc
adc
mov
mov
pusha
mov
aam
xchg
leave
mov
imul
lcall
push
cwtl
sbb
insl
cmp
xchg
sbb
add
popa
bound
xor
decl
push
xchg
in
in
movsl
jnp
or
rorl
les
mov
in
mov
push
je
mov
incl
mov
sbb
dec
jae
jl
int3
dec
gs
popa
pop
pushl
push
into
pop
mov
xor
mov
movsl
inc
ret
xlat
pop
rol
insl
sub
hlt
sti
mov
jmp
cld
push
mov
pusha
mov
jae
add
and
pop
decl
jno
fadds
inc
stos
inc
or
adc
push
test
mov
fildll
mov
incl
aam
xor
lahf
mov
fxch
cwtl
dec
rcrb
mov
mov
pop
ffreep
or
cmp
mov
andl
mov
loop
mov
inc
cmp
ja
sti
adc
sbb
or
imul
insl
push
test
test
push
iret
push
decl
insb
or
popf
cmc
add
mov
setae
mov
movsb
push
jg
inc
decb
bound
jg
addr16
out
ss
xor
add
sbb
sar
pop
lock
loopne
fidivrl
cwtl
fisttpll
push
mov
stc
call
mov
aad
pushl
std
mov
push
fadd
les
mov
push
shlb
pop
loopne
mov
ss
daa
or
sbb
add
mov
push
jnp
pusha
out
ret
cmp
jl
mov
mov
jg
mov
inc
sbbw
outsl
shlb
xor
xchg
inc
or
fldl
push
mov
cmp
or
aam
pop
xchg
mov
xlat
jmp
rcr
sahf
mov
jmp
mov
arpl
mov
pushf
std
insl
xchg
or
push
test
lea
addr16
add
ljmp
dec
sbbb
sub
insl
rorb
or
hlt
fcmovnu
and
jns
rcl
push
aam
inc
xchg
fnsave
outsb
jle
push
int
mov
ja
out
inc
ja
pushl
pop
out
punpckhdq
push
cmp
out
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
lcall
loop
sub
adcl
ret
es
das
pusha
push
divl
outsb
ja
call
push
es
pop
fdivrl
fdivrs
lock
mov
sahf
lds
mov
jmp
inc
mov
ret
mov
xor
mov
cmpsb
inc
shlb
add
stos
ficoms
addr16
dec
data16
cmp
mov
aad
sub
or
mov
rolb
out
call
out
xor
bound
fwait
insb
lds
ja
inc
test
pushl
dec
add
hlt
fxch
push
mov
or
scas
jle
popa
subl
js
sbb
ret
lods
fldenv
adc
out
inc
xchg
shrl
out
call
cwtl
mov
cli
addl
add
fistl
lret
lcall
insb
lcall
inc
aas
fbstp
pop
push
sahf
push
and
jae
adc
and
ja
push
call
sar
jmp
cmp
andl
scas
stos
mov
imul
mov
imul
sub
ljmp
out
hlt
pop
or
repz
mov
jo
jno
imul
lcall
inc
sub
negl
ret
sbb
jne
pop
mov
sti
icebp
test
jns
lock
pushl
jns
xchg
call
sbb
fisubrs
cmp
jns
add
cmp
inc
xchg
sbb
imul
inc
pop
and
addl
ret
lds
push
xchg
cmpsl
in
lea
or
cli
bound
inc
mov
insb
adc
ja
aas
outsb
xchg
push
xchg
and
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
mov
dec
test
lock
jo
ret
fwait
lcall
pushl
test
or
xchg
scas
mov
int3
cmpsl
int3
and
mov
loope
cmpsb
sbb
scas
dec
aas
shr
pusha
adc
jns
mov
dec
and
das
push
adc
jle
sub
aas
jns
leave
and
mov
or
je
adc
xor
lods
dec
lea
jmp
jo
jle
xor
out
incb
std
ret
rclb
cmp
gs
pop
mov
mov
gs
sbbl
divb
lret
mov
hlt
insb
push
xchg
fnstcw
int
ret
or
adc
inc
and
ds
jo
daa
ja
subb
inc
jno
out
pop
incl
mov
inc
sbb
xchg
pop
mov
cwtl
movsl
insb
ljmp
pop
fdiv
lcall
sub
fldl
add
pop
xorl
je
bound
and
lds
cmp
lcall
push
adc
cmpsl
xchg
or
xchg
aad
pop
mov
test
xor
imul
sub
mov
sub
dec
lods
pop
pop
sbb
inc
sub
cltd
fidivs
loope
lds
push
arpl
or
in
ret
test
es
scas
mov
ljmp
repz
cmp
call
imul
or
push
test
jg
sbb
mov
pop
adc
jmp
sub
clc
xor
mov
loope
scas
imul
test
ss
pop
mov
xor
xlat
dec
sub
pushl
push
int3
mov
pop
xlat
push
push
xchg
adc
lea
or
jo
jnp
inc
mov
and
incl
cmp
adc
push
test
push
test
shlb
lcall
addr16
pop
dec
push
cmpsl
popf
push
adc
add
add
pop
sub
cltd
xor
fdivs
call
scas
cli
jle
test
sub
aam
lea
push
loopne
call
shlb
ja
in
mov
mov
das
lds
ss
idiv
mov
sub
jns
jo
dec
movsl
pop
xchg
sbb
mov
daa
or
rorb
xlat
std
fisubs
out
and
mov
cld
dec
cmpl
xchg
mov
jle
shlb
xchg
lret
adc
cmp
imul
push
or
or
jg
pushl
or
lock
int3
xor
jb
inc
push
cld
test
ljmp
inc
mov
fdivr
lret
ret
lea
dec
push
test
adc
lock
repnz
test
call
repz
out
loope
sbb
fs
xchg
push
cmc
sahf
sub
cmp
loop
leave
inc
loopne
ja
lcall
loope
sbb
lods
in
popa
fwait
out
ffreep
out
mov
in
xor
cwtl
incl
jae
xchg
ljmp
and
mov
in
dec
inc
jmp
sub
leave
xchg
mov
or
mov
roll
push
ret
gs
pop
pop
lcall
pop
enter
lret
jp
test
test
xchg
aad
int
imul
adc
inc
push
std
add
fldt
nop
mov
cmpsl
fcom
fldcw
dec
dec
cld
frstor
cltd
and
and
adc
aam
ficomps
cld
pusha
inc
xlat
or
jno
incl
mov
mov
ret
shl
enter
mov
rorb
pop
scas
decl
xchg
and
sub
aad
inc
orl
or
scas
incl
xorb
push
xchg
test
lret
lret
mov
out
cli
xchg
nop
jmp
xchg
ja
pop
xchg
xor
xchg
repz
fdivp
jg
pushf
insl
js
sub
lcall
jecxz
cli
incl
loopne
lea
adc
dec
mov
jg
fs
fisubs
mov
or
mov
mov
mov
frstor
mov
push
scas
mov
andb
int
inc
mov
dec
out
mov
icebp
push
incl
addr16
mov
or
stos
mov
scas
mov
cmp
movsb
and
decl
push
fbld
jb
mov
sub
add
lods
das
insl
push
fcomip
pushl
jno
sbb
jae
fstps
cmp
pop
sbb
xor
lcall
jp
add
adc
and
adc
hlt
popa
pop
das
ficoml
in
mov
mov
stos
mov
adc
rcl
movl
push
push
test
call
sub
fdivrs
push
sahf
les
pop
scas
jne
add
test
incl
adc
or
or
sub
or
int
js
pusha
daa
mov
mov
and
jecxz,pt
and
mov
and
and
and
dec
in
imul
test
ljmp
sub
movsb
add
mov
jo
sub
pop
adc
pushf
xchg
daa
mov
adc
inc
dec
cmp
xchg
cmp
roll
xchg
xor
scas
ljmp
aaa
leave
jnp
or
icebp
xor
xor
rcrl
xor
mov
jmp
incl
insl
cld
ja
sub
insb
jmp
ds
push
and
repnz
mov
clc
popa
jle
iret
arpl
adc
addr16
and
ja
adc
xor
dec
repz
jb
xor
pop
add
loope
jo
mov
jne
popf
in
je
neg
incl
jbe
dec
xorb
mov
jl
mov
push
mov
out
roll
jnp
int3
push
aaa
cld
jp
cmpsb
arpl
js
sbb
jns
jb
add
shlb
mov
into
call
stc
add
js
push
sub
dec
add
lods
adc
and
sbb
jmp
add
fcomip
pop
jne
jbe
aas
inc
add
sub
pop
cmp
add
stos
pop
mov
decl
jae
dec
push
sbb
add
cmpsl
mov
add
fisttpl
cmpxchg
add
punpckldq
decl
xlat
and
adc
push
testb
xchg
pushf
xor
inc
fimuls
addl
xor
pop
pop
fiaddl
xor
cmp
addr16
fcomip
decl
enter
scas
out
add
xchg
push
enter
add
imul
cmp
decl
out
orb
mov
nop
mov
xchg
add
push
fldl
pop
call
ja
cmpsl
arpl
push
add
movsl
xor
add
mov
jnp
enter
lods
add
into
outsl
add
jg
rclb
sbb
ja
movsb
mov
js
rcrb
pop
jae
inc
add
and
sub
pop
shlb
scas
ds
enter
cmp
push
cmp
fcmovnu
icebp
imul
lock
in
es
mov
xor
decl
sub
add
pop
ja
add
push
mov
clc
mov
lcall
xor
sbb
orb
cmp
or
xchg
cld
inc
sbb
lret
dec
jb
mov
add
sbb
fsubrs
jg
add
inc
sbb
inc
and
hlt
pushl
xchg
push
dec
call
cmp
add
sbb
not
add
jbe
sar
iret
push
lret
add
pop
loope
ret
pusha
test
mov
pop
mov
or
mov
cmp
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
or
push
movl
es
outsl
cwtl
cmc
add
call
jle
fidivl
sbb
icebp
mov
clc
dec
dec
add
out
jecxz
mov
sbb
xlat
jg
aam
js
jg
call
add
testl
outsb
das
aas
mov
xchg
pop
decl
pusha
push
repz
pop
mov
pop
icebp
iret
mov
in
mov
lcall
adc
jo
add
dec
das
fiadds
and
xorb
inc
out
ja
sbb
pushf
sub
cld
ds
jb
sbb
pop
std
pushl
lret
mov
mov
incl
call
mov
aaa
out
push
add
addb
clc
inc
clc
inc
ds
ljmp
and
jmp
xlat
scas
int3
pop
mov
add
pop
mov
stos
in
pop
add
sbb
add
cmp
insb
and
aaa
xor
out
mov
sahf
aam
push
stc
mov
jge
push
pop
lds
jg
xor
ret
and
outsb
out
repnz
or
cmpsb
insl
add
loope
cli
cld
ljmp
add
dec
sub
push
cmc
dec
dec
add
and
jne
adc
js
xchg
fstps
incl
dec
scas
add
inc
movsw
add
xchg
pop
sbb
sub
jns
mov
lock
jmp
icebp
repnz
xlat
jle
add
mov
add
mov
push
fists
out
fldcw
mov
xor
ljmp
add
stc
popa
gs
add
mov
rcr
cmpsb
mov
ljmp
dec
lcall
xchg
lock
loope
mov
incl
insl
adc
int
lods
mov
adc
movsl
jbe
add
data16
jp
lcall
xor
test
icebp
and
sbb
cmp
lcall
add
icebp
mov
and
fwait
clc
inc
call
push
mov
lcall
mov
adc
xchg
add
jmp
add
lock
bound
imul
ret
fwait
inc
jnp
ss
xchg
cltd
xor
add
lcall
call
popa
call
pop
jno
lret
loope
ja
ss
out
mov
add
call
aas
out
inc
addl
movsb
pop
notb
add
push
ds
add
addb
sub
popa
inc
add
mov
stos
xorl
jg
cmp
xorl
loop
incl
pop
add
mov
adc
in
test
cmp
lret
imul
pop
ret
jle
cmp
arpl
cltd
in
incl
leave
mov
push
outsb
add
push
cmpsl
rcr
ret
outsl
fisubrs
sarl
xor
dec
mov
dec
jnp
mov
push
add
pop
sub
fcomi
ret
scas
addr16
cmpsb
add
mov
pop
mov
jp
cltd
mov
push
icebp
fndisi(8087
jg
in
or
and
std
loopne
or
cld
lods
jmp
popa
or
mull
or
cmc
jmp
incl
rorb
gs
outsl
gs
gs
loopne
sub
fneni(8087
pop
push
or
mov
push
pop
shll
hlt
or
mov
call
outsl
mov
psraw
popa
add
popa
pop
repz
xor
push
push
stos
jae
xor
xor
sti
or
jecxz
dec
repz
mov
add
mov
dec
repz
popf
sbb
xor
lods
sub
xor
repz
jne
xor
jecxz
adc
jns
cmpsb
movsl
and
cmpsb
jns
add
fnstcw
cmpsb
jns
cltd
sbb
imul
lcall
mov
sarl
cmpsb
jns
xchg
adc
popa
cmpsb
jns
cmpsb
mov
lcall
mov
cmpsb
jns
sahf
push
out
outsb
cmpsb
jns
cmpsb
scas
cs
dec
mov
divb
ss
jns
cmpsb
jns
xchg
push
out
cmpsb
jns
cmpsb
cmpsb
movb
cmpsb
jns
push
cli
jp
cmp
jnp
cmpsb
jns
lcall
sbb
sahf
cmpsb
or
bnd
sahf
cmpsb
imul
dec
adc
xor
add
js
insb
scas
ret
push
xorb
in
add
fnstenv
push
insb
jo
push
lods
add
sub
push
int3
add
add
out
sbb
hlt
add
add
idivl
sbb
xchg
add
push
in
sbb
movsb
add
mov
inc
sbb
test
mov
js
push
mov
fdiv
out
jnp
add
add
add
push
sub
push
enter
out
mov
add
add
ficomps
push
mov
xor
push
rolb
out
jnp
nop
add
add
mov
and
push
rolb
cmpl
decl
sbb
and
dec
repz
xor
sbb
divl
xlat
xchg
out
dec
repz
xchg
mov
dec
repz
lret
mov
xor
jl
mov
add
push
pop
sti
mov
sbb
rolb
subl
repz
std
in
cmc
in
lcall
jecxz
lcall
imul
stos
hlt
add
jg
inc
in
clc
call
sti
add
add
out
add
pop
inc
pop
pop
testl
add
or
and
or
or
or
aas
add
add
or
ret
adc
push
add
aas
add
add
add
por
add
in
adc
jg
lods
adc
adc
ljmp
mov
sti
data16
insl
or
sbb
scas
out
add
in
or
sbb
in
add
loop
add
daa
repnz
add
lock
mov
mov
icebp
sbb
test
adc
adc
test
adc
int3
in
adc
or
add
in
clc
notb
or
adc
xor
push
adc
add
std
adc
fwait
outsl
out
mov
sbb
jg
mov
cmpb
mov
mov
cs
xchg
mov
out
jmp
aad
xor
xlat
cmp
mov
pop
outsb
inc
pop
std
pop
cmp
xchg
pop
cwtl
icebp
push
xor
pop
push
mov
jno
xor
aas
icebp
add
xor
aam
lods
lret
clc
out
pop
incl
jo
add
push
lcall
sbb
add
and
pop
jmp
in
add
push
daa
dec
push
inc
ret
or
outsb
push
xor
pop
adc
mov
cs
or
rclb
lock
xchg
adc
insb
cld
jg
push
sub
inc
cmp
mov
nop
xchg
add
testb
jo
je
std
xor
jo
out
mov
lock
aaa
sub
mov
ds
lock
and
jbe
mov
adc
add
xor
insb
jnp
push
add
jo
test
out
and
adc
divb
push
fdivp
fstpt
lock
sarl
addl
in
das
pop
int3
incb
push
decb
add
adc
sbb
and
xor
inc
add
popa
je
cld
pusha
icebp
adc
aas
lods
jmp
ss
lcall
sbb
sbb
add
xchg
faddl
xchg
imul
xor
out
pop
imul
fs
mov
popf
std
add
cmp
add
push
cmove
push
or
sarl
je
xchg
bound
les
jae
pushf
jl
fdivl
rolb
insl
stc
filds
sub
testl
jae
push
repz
mov
nop
cli
add
out
jbe
mov
mov
sub
popf
int
push
outsl
and
xchg
outsb
push
pushf
insl
imul
push
mov
push
push
shlb
xor
dec
push
push
inc
jle
andb
gs
add
or
mov
xchg
es
push
inc
rcll
xchg
inc
inc
inc
mov
dec
dec
dec
mov
dec
push
scas
push
mov
lcall
pop
popa
bound
imul
jno
mov
mov
js
jp
xor
xor
xor
sub
xchg
mov
incl
jbe
js
jp
and
push
push
ds
mov
data16
insb
mov
mov
scas
push
stos
push
ss
addr16
pop
pop
movsl
pop
pop
pop
mov
arpl
cltd
addr16
imul
into
insb
xchg
outsl
cmpsl
es
push
xchg
cld
jo
mov
mov
jp
imul
dec
into
adc
adc
shl
das
ss
fcomps
jle
inc
std
jnp
push
mov
jg
or
cmp
std
jns
jge,pt
scas
sbbl
out
inc
push
sub
push
xchg
or
add
adc
push
mov
push
repz
cmc
iret
pop
add
outsl
std
jg
add
add
add
cmp
add
push
add
push
add
call
jns
push
add
push
add
dec
add
add
add
sti
lcall
add
pop
xor
movl
inc
add
inc
add
inc
add
mov
add
add
mov
out
jg
out
cmp
cmp
push
add
call
add
add
ljmp
add
add
push
add
sub
daa
add
add
add
jo
and
bound
pop
adc
pop
neg
out
mov
add
add
add
jb
add
mov
adc
push
inc
pop
lret
push
stos
jno
add
add
add
mov
push
fcoml
xor
xchg
add
mov
rorb
and
jp
lret
xor
add
sub
and
add
and
insb
push
int
testb
add
mov
sbb
sbbb
push
add
add
pop
mov
pop
pop
add
mov
adc
ss
add
dec
add
add
add
add
fnstenv
add
dec
add
insb
mov
add
push
add
add
add
add
incb
and
or
incb
push
or
fcom
pop
add
add
adc
sub
add
xchg
or
xchg
push
add
fbstp
add
add
and
rcrb
mov
add
xor
xor
lods
pop
add
xor
repnz
mov
xor
movsl
pushl
push
add
xor
xor
jecxz
push
add
xor
out
push
add
xor
cld
xor
mov
xor
movsb
xor
xor
test
dec
add
xor
stos
xor
lods
xor
scas
xor
mov
pushl
inc
add
xor
xor
mov
inc
add
xor
mov
xor
add
xor
add
pushl
cmp
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pushl
sub
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
and
add
xor
add
xor
add
xor
add
xor
add
sahf
add
or
inc
add
pop
push
ds
and
cmp
and
cmp
and
jmp
push
cmp
sub
ss
sub
xor
sub
xor
sub
ljmp
push
xor
xor
cs
xor
sub
xor
sub
xor
pushl
push
sub
cmp
es
cmp
pop
add
inc
push
sbb
add
inc
push
sbb
inc
push
sbb
inc
push
pop
add
dec
push
adc
add
dec
push
adc
dec
push
adc
dec
push
syscall
push
push
push
add
push
push
pop
push
lds
sub
pop
push
push
lods
pop
mov
pop
push
push
pop
push
bound
jb
push
lds
push
xchg
push
push
mov
popa
fwait
bound
ret
add
loop
pop
mov
add
push
and
add
hlt
pusha
sbb
loop
add
adc
pop
add
sub
mov
or
or
or
or
fiaddl
bound
orb
mov
push
repnz
add
or
push
inc
and
lret
add
push
or
test
rcr
push
ljmp
mov
lcall
sub
cmp
dec
ficompl
push
sbb
push
jp
push
xchg
orb
jo
stos
xor
test
loop
lret
ret
mov
jo
sbb
sbb
ret
mov
stos
and
ret
xchg
test
sbb
popa
add
mov
sbb
sbb
xchg
push
pop
fiaddl
mov
add
mov
adc
add
rolb
adc
add
repnz
add
adc
sbb
mov
jb
push
adc
or
or
xor
push
inc
or
add
inc
lds
xchg
add
mov
add
add
push
mov
mov
add
pop
xchg
pop
pop
mov
pop
pop
mov
pop
pop
mov
pop
pop
stos
add
mov
pop
mov
pop
popl
push
pop
test
push
pop
adc
push
lods
pop
mov
pop
lods
push
pop
scas
mov
scas
lcall
decl
nop
add
int3
add
int
pop
lret
xchg
pop
mov
inc
pop
jg
scas
dec
add
pop
xchg
add
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
push
xchg
jp
cwtl
rolb
cltd
add
pop
lcall
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
loop
mov
cmp
mov
ljmp
mov
rolb
cmpsl
add
pop
test
es
test
add
incl
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
mov
mov
add
mov
ljmp
cmp
mov
add
pop
mov
add
pop
roll
pop
ret
add
ret
jg
incl
les
or
lds
or
movb
pop
movl
pop
leave
add
mov
lcall
or
pop
or
and
pop
or
and
add
push
or
and
call
cmpsb
and
and
popf
and
sahf
and
mov
and
lods
and
and
or
inc
or
inc
or
and
or
or
and
shlb
aaa
or
cmp
or
xor
aam
xor
shlb
xor
popa
and
or
and
or
fdivrp
ljmp
and
or
and
or
and
or
and
mulb
or
xchg
enter
std
in
andb
xchg
and
push
and
or
pop
or
and
call
and
or
sbb
or
and
sbb
push
or
and
or
and
adc
adc
or
adc
mov
and
or
lcall
or
or
and
xor
aaa
std
pop
jl
sub
pop
or
pop
or
and
add
pop
test
pop
or
mov
pop
and
and
and
pushl
mov
adc
push
or
and
and
or
and
and
lcall
or
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
fisttps
and
sub
inc
or
add
sub
cmp
pop
and
or
or
mov
pop
and
or
xor
shll
or
and
decl
scas
and
or
and
or
and
or
and
or
and
pop
lock
daa
and
lods
and
and
mov
and
iret
sbb
scas
and
int
out
or
or
and
mov
es
and
or
and
adc
fcoml
cld
jmp
adc
arpl
adc
adc
gs
push
and
xor
or
daa
or
pop
daa
in
outsl
es
push
mov
or
or
or
es
adc
or
and
or
and
mov
loop
or
pop
or
add
jle
or
cmp
or
cmp
add
or
mov
movsb
and
or
sub
or
sub
out
rolb
push
or
mov
clc
call
and
or
add
sbb
or
add
sbb
add
call
add
push
or
add
adc
fildl
adc
add
filds
push
or
add
or
jecxz
or
insb
or
add
sub
add
or
push
dec
ljmp
js
ljmp
or
pop
pop
dec
mov
pop
or
pop
jo
in
aaa
in
clc
push
or
push
push
sub
push
or
push
jg
push
or
push
push
or
adc
dec
or
adc
dec
or
call
dec
or
push
push
dec
or
sbb
inc
or
sbb
inc
or
hlt
lcall
inc
or
push
push
inc
or
and
ds
and
cmp
push
cld
pop
push
inc
cmp
cmp
sbb
or
decl
ss
sub
xor
sub
xor
sub
push
xor
xor
decl
cs
xor
sub
xor
sub
xor
push
sub
cmp
jle
adc
lock
and
push
lcall
or
inc
push
sbb
or
inc
push
sbb
inc
push
sbb
call
or
dec
push
adc
or
dec
push
adc
push
cmp
mov
or
mov
push
push
or
lock
cli
dec
lods
or
push
aam
pop
push
push
or
push
sub
cmp
pop
dec
xor
pop
push
pop
sub
xor
aaa
xor
xor
xor
mov
push
xor
xor
xor
insb
mov
sub
dec
cmp
fiaddl
ljmp
cli
inc
xor
inc
xor
inc
xor
sub
mov
inc
xor
dec
xor
xor
xor
dec
xor
xor
mov
rorl
dec
xor
xor
dec
xor
xor
push
repnz
mov
ret
xchg
add
adc
and
sbb
insb
fdivs
pop
xor
xor
xor
xor
or
xor
xchg
popa
xor
bound
push
insb
fdivs
test
repnz
lds
adc
lods
adc
lods
adc
pop
mov
scas
adc
adc
adc
adc
mov
xchg
mov
mov
mov
lds
shlb
fdivs
mov
adc
mov
in
and
mov
arpl
mov
rclb
rcll
ret
sub
fcoms
adc
js
push
jg
call
adcl
push
sub
xor
mov
and
adc
lock
stc
adc
cs
adc
adc
inc
adc
inc
adc
pop
and
mov
fldcw
mov
and
data16
cmpsl
and
stos
and
testb
ljmp
iret
repz
repz
repz
in
in
add
jns
out
add
out
sahf
lods
fldcw
out
stos
fisubrs
sahf
out
lahf
pushf
sahf
push
rcrl
aam
rclb
js
xchg
cld
jg
fbstp
jmp
repnz
cs
out
sahf
out
mov
mov
fldt
push
jns
fsubs
arpl
xchg
fsubl
fisubs
cmp
in
popa
push
shlb
iret
repz
push
xchg
push
xchg
push
xchg
cmp
repz
xchg
push
xchg
push
repz
cmpsl
stc
nop
add
dec
push
sahf
repz
aad
add
popf
stos
dec
add
add
add
fwait
outsl
insl
stos
dec
push
lcall
dec
push
cwtl
add
dec
repz
sbb
adcl
lcall
cmp
out
mov
mov
pop
imul
pop
xchg
aaa
sbb
test
lcall
lcall
jle
jge
lcall
sub
jns
cmpsb
jp
jns
js
push
dec
rcr
out
add
sbb
pop
adc
sbb
push
cs
addb
pop
or
mov
mov
adc
push
xchg
or
push
cltd
add
and
add
push
movsl
outsl
mov
das
jbe
jns
daa
std
incl
add
fwait
data16
outsl
idiv
jg
jb
mov
ja
xchg
orb
pop
lahf
cwtl
vmread
mov
pop
add
mov
add
xchg
inc
sti
add
les
bnd
mov
faddl
pushl
shll
add
das
mov
jp
or
push
aad
leave
add
mov
or
cmp
or
or
jmp
ljmp
sbb
sbb
sbb
pop
xlat
sub
sub
ljmp
out
rol
cmp
adc
pop
cli
pop
jnp
pop
jg
mov
clc
sub
addb
or
outsl
sbb
mov
scas
lcall
mov
movsl
cmpsb
cmpsl
push
test
jle
lods
scas
scas
dec
mov
mov
dec
mov
mov
mov
mov
decb
ret
cmp
mov
leave
add
lret
xor
into
iret
das
clc
rcl
sub
xlat
daa
pop
cld
decl
fstp
fistps
loope
loop
sbb
out
pop
into
ljmp
in
out
out
psllw
or
div
pop
stc
sar
add
jmp
pop
lcall
pop
pop
stos
mov
jecxz
mov
fnstcw
push
cmpsl
pop
pop
inc
add
std
pop
ds
jle
incl
daa
popa
mov
jne
out
mov
decl
add
add
loopne
aad
fistps
in
jg
or
fwait
repnz
lods
cld
pusha
and
pusha
add
add
sti
popa
pop
push
popa
fsubs
loop
lock
pusha
or
jae
add
addb
pop
sub
sbb
in
adc
push
dec
pop
add
adc
lcall
mov
push
add
testb
mov
lock
add
add
xchg
mov
mov
mov
icebp
add
pop
lock
pop
sub
jo
sti
or
testl
iret
jne
pushl
xchg
cli
lock
and
pop
sub
inc
repnz
or
jne
add
xchg
test
cld
idiv
xchg
fisttps
add
push
hlt
push
dec
popa
inc
vpackssdw
fcomip
mov
sub
js
mov
inc
mov
repz
sbb
or
fcomip
fstpt
dec
push
dec
loopne
sahf
test
dec
push
daa
push
pop
cs
icebp
adc
add
xchg
mov
add
out
jg
in
ss
xchg
cmp
movsb
adc
mov
inc
cmp
dec
jmp
push
jbe
push
ss
pop
fdivrs
lret
das
out
std
in
out
cli
lahf
hlt
inc
lret
jmp
add
cmp
mov
push
cmp
cmp
aas
incb
je
cmpl
lret
pop
hlt
mov
rcrb
xlat
pop
cmc
bound
in
mov
in
xor
jle
cmp
cmp
cmp
mov
cmp
and
sarl
inc
mov
mov
pushl
jne
xchg
sbb
add
test
push
movsb
inc
push
cmp
dec
fists
xor
in
ss
mov
ja
clc
add
sbb
jecxz
cli
fwait
inc
pop
jbe
adc
cmp
andb
mov
mov
push
xchg
je,pt
cmpl
adc
xchg
arpl
xchg
push
repnz
in
and
dec
xchg
jg
pop
pop
ljmp
push
aas
adc
jecxz
and
in
aaa
aas
xor
ret
aas
inc
adc
loopne
aad
movsb
call
xchg
add
and
out
outsb
jge
loopne
adc
push
mov
inc
xor
aam
and
in
adc
hlt
cmp
sbb
icebp
js
pop
jb
arpl
jns
mov
out
fcomps
mov
aam
add
add
dec
xor
xor
lock
xchg
mov
imul
cmp
sbb
jg
leave
das
xchg
add
pop
sar
jmp
xchg
adcl
out
add
sti
xor
jmp
sbb
sub
push
xor
xor
mov
outsb
cmp
add
cmp
add
or
shlb
sbb
inc
cmp
int3
xor
xor
adc
xor
in
xor
xor
adc
test
int
sbb
xor
mov
hlt
inc
add
ljmp
push
fidivl
insb
xor
xor
sbb
xor
jb
into
les
dec
and
aad
lcall
sub
pop
pusha
stos
add
pusha
sbb
push
xor
clc
ja
lds
adc
pop
adc
inc
mov
pop
cld
or
ret
rcr
xchg
mov
ret
idiv
dec
adcb
nop
daa
cwtl
xor
xor
inc
sbb
in
xor
xor
adc
xor
xor
scas
mov
fwait
add
pop
je
push
pop
lock
ret
fsub
cmpsb
mov
dec
mov
or
incl
fstpt
fdivrl
mov
cmp
add
into
inc
push
es
sub
loope
jl
add
aas
xchg
pop
loop
jl
add
xor
mov
ret
jl
xor
or
and
or
test
roll
incl
mov
popf
out
nop
aad
mov
add
cmp
cmp
cmp
idivb
adc
sar
stos
jg
cmp
adc
movsl
sbbb
scas
sbb
shlb
out
clc
call
fxam
add
mov
push
xchg
lahf
cmp
cmpsl
outsb
jg,pt
hlt
in
jno
movsb
adc
fdivrs
and
movsl
and
stos
pop
and
sub
add
cld
mov
fildll
xor
add
adc
inc
fdivs
or
lock
test
adc
sbb
jae
fdivp
push
test
pop
push
aaa
cmp
nop
ss
cmp
cmp
pop
cld
or
jno
mov
out
xor
fs
pop
enter
inc
in
out
add
mov
xorl
jno
dec
xor
xor
mov
pushf
push
pusha
imul
mov
xor
push
ret
pop
cmp
rclb
jl
xchg
xor
mov
push
ja
enter
lea
pop
in
xlat
sub
cmp
and
imul
in
sub
xchg
adc
cld
aam
adc
ja
ja
cmpsb
fcoml
popa
add
out
daa
inc
push
frstor
push
test
push
add
iret
aas
jl
cmp
stos
cmp
sub
incl
push
pop
add
inc
les
pusha
inc
out
out
ret
mov
ss
jb
std
push
pusha
add
gs
push
std
movsl
mov
cli
fdivs
sub
pop
movsb
xor
loopne
int
sub
add
das
in
sub
mul
add
fs
cwtl
ret
pop
loopne
adc
into
jle
mov
mov
jns
xchg
aas
mov
mov
inc
and
push
inc
pop
movsb
addb
ja
movb
mov
in
stos
sub
xor
sub
fcomip
pop
std
les
jmp
push
and
xchg
dec
fadds
nop
xor
cmpsb
mov
mov
pop
in
andb
inc
push
inc
xchg
adc
rcr
xchg
inc
scas
cmc
xchg
and
inc
addr16
lret
pushf
xchg
stc
inc
or
mov
inc
addl
mov
inc
xor
dec
daa
add
cmp
inc
and
adc
jno
stos
and
xchg
hlt
pop
mov
push
loope
std
ljmp
lods
sahf
scas
lcall
cmp
push
jg
ljmp
cwtl
and
mov
push
in
jl
jg
shl
or
adc
add
add
movsl
out
rolb
mov
and
aad
hlt
ss
adc
repnz
enter
icebp
pop
std
roll
add
outsl
mov
stos
fdivl
bound
jle
lock
add
push
dec
loopne
adc
cld
push
rol
add
call
and
hlt
adc
xchg
sbb
adc
sbb
xor
xchg
mov
stos
loop
inc
leave
fwait
out
cmp
inc
adc
mov
cld
add
adc
push
add
jo
push
pop
daa
mov
pop
sub
add
mov
add
add
add
add
cld
add
test
fisttps
add
mov
add
add
mov
rep
std
imulb
das
xor
jb
adc
jo
lret
ret
mov
in
inc
add
sbb
add
or
mov
les
stos
xor
mov
sbb
in
dec
shll
xor
add
mulb
or
push
cmp
sub
lds
xchg
rclb
ret
call
lcall
stos
es
test
xor
push
xchg
add
add
mov
sub
andb
movl
ret
push
and
jle
inc
sbb
push
js
push
cmp
push
movsl
add
ss
fwait
push
push
push
add
pop
mov
arpl
iret
add
imul
and
and
and
outsb
mov
push
sbb
pop
push
pop
sti
sub
cmpsl
or
fmuls
stos
lods
shrb
push
inc
add
xor
mov
roll
fistpl
pusha
dec
jmp
enter
adc
mov
rolb
push
add
dec
popa
fwait
xor
pushw
sbb
add
adc
inc
add
imul
xchg
mov
push
addb
sbbb
or
and
out
or
xchg
mov
xacquire
xchg
punpckhbw
adc
aas
push
les
xchg
mov
outsl
or
add
push
add
subb
das
fidivrl
push
cs
scas
test
lahf
push
pop
insl
lcall
push
jnp
sarl
mov
subb
movsb
pusha
and
fcmovnbe
add
addb
rorb
pop
pop
xchg
xchg
nop
sahf
or
andb
out
jae
test
arpl
pop
testb
mov
mov
icebp
push
rorb
rolb
rolb
fcmovnu
mov
mov
ljmp
scas
sbb
push
push
test
js
adc
fimuls
sbb
rorb
or
rclb
jbe
mov
out
xlat
fldl
push
push
cmpl
rclb
sbb
insb
inc
add
pushf
rclb
les
mov
jg
pop
shlb
jns
inc
insb
scas
inc
rclb
dec
mov
outsl
pop
ret
scas
loop
mov
jmp
adc
call
or
xor
or
negb
hlt
inc
mov
push
stos
ret
mov
pop
fwait
mov
or
mov
or
int3
adc
ret
lock
ss
mov
pop
mov
shrb
stos
jnp
das
cmp
add
sbb
sarb
out
jns
xchg
cs
iret
pop
ja
pusha
rolb
insb
shlb
mov
adc
aam
dec
or
or
or
cmpb
insl
sahf
stos
mov
sahf
and
fiaddl
cmpsb
rcrl
cmp
popf
mov
imul
negl
xor
sbb
outsl
adc
add
mov
push
lret
sbb
rorb
fsubrs
adc
or
loopne
push
push
push
jmp
loopne
mov
inc
loopne
pop
jg
aad
push
adc
cltd
add
out
cltd
mov
sub
cmc
loopne
aaa
adc
cmp
in
iret
mul
push
dec
loopne
pop
push
xor
add
push
shrb
clc
loope
push
fwait
dec
test
fldt
lods
push
cmpsl
add
stos
es
sbb
shrl
jecxz
cmp
loopne
or
in
pop
sti
neg
pop
imul
or
jle
movsb
adc
add
test
adc
adc
mov
loopne
mov
insl
loop
inc
or
loopne
dec
jp
lcall
pop
sbb
xor
add
sbb
add
jg
insl
orl
mov
xchg
xor
cmp
xlat
aad
jecxz
call
loop
or
mov
push
fs
punpcklbw
loopne
cmp
add
pusha
lahf
xor
or
loopne
repz
mov
push
jg
mulb
cmp
sbb
or
mov
dec
call
sbb
loopne
out
jbe
pop
jle
sahf
jge
int3
push
ljmp
add
add
and
mov
and
js
fabs
add
adc
xor
dec
mov
xor
adc
es
clc
icebp
stos
loope
shr
jle
jge
dec
adc
in
scas
loopne
aam
stos
fadd
adc
xor
mov
push
pop
clc
sbb
sbb
xchg
loope
insl
sub
sbb
loopne
cld
mov
enter
xorl
orl
push
movsb
cmp
and
stos
mov
jge
add
stos
jle
jne
rcrb
push
jp
int
nop
mov
inc
loopne
das
fidivrl
dec
mov
fucomip
loope
push
or
jnp
inc
loopne
push
mov
jg
fcmovne
mov
jb
sbb
xchg
loopne
jmp
test
mov
xchg
insb
pop
jns
stc
adc
sub
loop
out
and
add
pop
ss
mov
push
loopne
xchg
es
sbb
rcrw
mov
stos
xchg
sahf
push
clc
mov
outsb
hlt
mov
add
aas
pop
mov
in
icebp
outsb
jo
mov
sbb
addl
mov
mov
xor
loopne
mov
dec
fwait
loop
test
jmp
push
jo
add
lock
incl
lock
ja
push
or
inc
cmp
data16
adc
lock
add
mov
fwait
lock
jae
push
jo
sbbl
sbb
cmpsb
jns
add
dec
and
ret
mov
xchg
jo
push
sbb
lock
mov
cmp
add
sub
adc
test
incl
je
add
push
outsb
nop
inc
bound
pusha
mov
jmp
mov
add
decl
inc
mov
add
repnz
call
fdivrp
call
xor
dec
shl
jmp
cmc
inc
and
leave
xchg
add
daa
sub
inc
xchg
das
xor
outsl
clc
mov
mov
jne
sub
push
test
mov
mov
lock
pop
scas
push
xorb
sub
add
das
cli
sbb
leave
adc
bound
dec
mov
lahf
jle
pop
dec
cld
insl
popa
iret
or
rclb
shrb
sub
testb
cmc
add
lods
pop
inc
pop
pop
addb
outsl
leave
stos
movsb
pop
mov
mov
sar
fistpll
cmp
aam
xchg
cmp
sbb
mov
stos
out
mov
pop
imul
insb
lret
add
popa
lahf
aam
xchg
mov
shrb
jge
addl
inc
imul
mov
push
pop
cmp
add
gs
std
sti
push
mov
xchg
or
jmp
and
ja
add
xchg
jno
adc
adc
bound
adc
btr
mov
xor
or
sbb
mov
adc
adc
add
mov
lcall
inc
fwait
fs
mov
mov
popa
in
lcall
mov
bound
jb
add
add
and
gs
push
mov
cmc
sbb
scas
inc
jb
hlt
neg
insb
lcall
jne
push
dec
xchg
outsw
jle
popa
je
call
int3
push
ss
arpl
mov
push
lods
jo
mov
call
gs
fwait
push
je
lea
je
push
fmuls
fdivr
jmp
xchg
insb
mov
inc
lcall
popa
outsb
fwait
insb
test
rcl
push
sahf
push
sub
add
fisubs
pushl
cmpsb
aaa
adc
in
ret
js
in
and
mov
pushl
lds
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
addr16
xor
insb
lcall
inc
jbe
pop
push
sbb
xor
cmp
inc
fsubrl
push
loopne
mov
lcall
push
mov
pop
mov
pushf
sbb
jno
mov
ret
add
insb
insb
add
push
push
fs
lcall
cmp
add
je
add
and
xor
sub
insl
and
fldl
mov
std
sbb
stos
lcall
andb
stos
cmpsb
sbb
mov
pop
cmpsl
mov
dec
mov
jle
jmp
add
rol
sbb
inc
aaa
out
jg
cli
inc
in
xor
lock
add
rorb
loopne
mov
test
jg
jns
loop
pop
inc
dec
test
mov
stos
push
push
dec
add
call
gs
and
int
jb
xor
push
add
ror
pop
shrl
cmp
imul
mov
ja
cmpsb
loopne
mov
mov
mov
lods
mov
loop
test
arpl
add
sbb
jmp
and
daa
out
add
inc
sub
int3
inc
mov
clc
add
insl
rcrl
push
enter
repnz
fnstsw
into
rolb
ljmp
decl
filds
sub
shll
fdivrl
rcr
loope
adc
enter
clc
es
icebp
loopne
daa
and
aas
cmp
std
pushl
sub
push
dec
inc
push
or
inc
test
pusha
imul
popa
jle
mov
add
and
js
jnp
imul
imul
inc
dec
in
inc
push
cmpsl
inc
inc
inc
sub
lcall
add
aam
ret
into
and
je
ffreep
icebp
or
orl
dec
adc
sbb
incb
stos
repnz
cld
jo
ret
adc
ror
cltd
and
add
fidivrs
and
and
sub
cmp
lds
jmp
frstor
cmp
and
add
lcall
pop
cld
fstpt
xor
xor
adc
sub
fdivs
adc
gs
sub
cmp
sbb
cmp
or
add
call
outsb
adc
cli
aaa
je
shlb
mov
sub
lret
data16
ds
xor
aas
dec
cmp
cli
pop
cld
aad
dec
inc
cld
inc
pop
dec
mov
pop
or
pop
inc
pop
in
in
push
cmp
test
push
dec
add
pusha
aaa
sahf
bound
and
les
insl
sub
cld
cmp
or
hlt
inc
push
sbb
and
pushl
jl
pop
dec
pop
mov
inc
inc
push
adc
icebp
sbb
sbb
and
push
testb
push
mov
mov
xchg
cltd
ss
loop
out
clc
fcompl
pop
sbb
int3
push
push
loop
adc
in
adc
inc
or
sub
add
and
mov
int3
mov
xor
incl
daa
mov
fcmovbe
pop
xchg
ret
fcoml
adc
mov
cwtl
and
das
pusha
add
outsl
sub
je
cld
stos
incl
jns
jo
jg
jbe
add
jp
jo
dec
les
sbb
jecxz
ja
clc
push
jle
repz
add
sbb
sbb
push
idivl
lock
sbb
or
cmp
sti
scas
adc
xor
in
cmpsl
jmp
in
in
std
xchg
rcrb
in
out
hlt
std
icebp
adc
in
outsl
das
clc
mov
ljmp
hlt
bound
ret
aad
into
ret
inc
jmp
xorb
iret
fsts
shll
pop
cltd
decl
add
pushf
nop
sahf
arpl
mov
data16
xor
add
stos
mov
enter
into
sub
cmpsb
jmp
int
pop
mov
jb
inc
test
or
ja
jmp
ret
cmp
cmp
and
xor
sub
inc
adc
cmp
out
ljmp
cmc
fdivrp
push
pop
or
in
repz
testl
clc
xlat
inc
sti
adc
test
jo
enter
das
cli
lret
push
iret
mov
ret
dec
int3
add
aaa
loop
in
mov
sub
ljmp
add
out
clc
sub
scas
loope
jmp
jecxz
repnz
outsl
xchg
cmp
std
mov
xchg
fwait
mov
sahf
or
out
and
out
ljmp
inc
movsb
inc
nop
push
push
inc
mov
push
add
sub
inc
imul
call
push
test
push
dec
add
xor
cmc
fdivs
int3
sbb
aaa
inc
aas
jo
add
in
inc
aaa
cld
int3
jecxz
and
rorb
fld
jmp
clc
lds
sub
xlat
fnstenv
out
ss
add
es
pusha
jg
or
cmp
das
sub
fdivs
sbb
into
sub
cmp
cmp
es
jmp
jmp
and
and
sub
faddp
sub
xchg
push
lods
xchg
lods
pop
hlt
incl
cmpsl
lock
or
ds
or
or
cltd
mov
jne
mov
add
add
fsubrs
andb
repnz
hlt
lock
cmc
loop
inc
cmc
cmp
js
jns
ja
fwait
pushf
arpl
mov
xlat
xchg
aas
pop
lret
fmul
cmp
aas
adc
or
push
imul
std
mov
pop
dec
mov
push
test
mov
mov
xchg
mov
pop
mov
mov
add
lock
jnp
mov
subb
jo
fwait
lahf
outsl
subl
jle
imul
jno
jne
insb
es
in
std
push
out
call
mov
xor
fcmovbe
leave
insl
sbbl
out
add
jmp
pop
std
mov
adc
ljmp
scas
mov
imul
movsb
mov
aam
cmove
fnstsw
mov
stos
xchg
jmp
push
repz
std
and
lock
insb
test
push
out
cmp
fidivrs
es
jp
mov
push
out
mov
jo
imul
ljmp
scas
mov
dec
pop
pop
test
mov
and
gs
insb
sbbl
jmp
mov
hlt
cmc
hlt
or
lock
mov
stc
out
stos
sub
lret
cli
call
fcmovb
cmp
scas
push
loop
into
fcmovne
xor
enter
sub
xor
sub
out
add
sub
add
mov
add
in
in
aas
ja
jns
xchg
andb
xchg
pop
sub
shll
int
xor
cs
cmp
int3
ret
lret
inc
push
stos
inc
push
inc
lods
bound
andl
jle
notl
cld
pop
je
xchg
jbe
outsb
xchg
sub
push
scas
dec
dec
dec
mov
jmp
fcmovne
mov
or
jecxz
cld
adc
add
sbb
adc
inc
push
inc
les
scas
mov
pop
and
ret
xlat
fcom
lcall
subl
test
push
out
jle
dec
mov
push
push
mov
pop
dec
mov
push
pop
mov
cmp
aam
sub
shll
adc
xlat
and
sub
sbb
or
pop
ret
or
stos
lods
jg
cld
movsl
bound
aam
fsubrl
fistl
ja
fldl
mov
ret
sbb
cmpsb
jg
in
xor
jo
push
cmpsl
dec
pop
repnz
add
jmp
sbbl
mov
mov
test
jae
add
lahf
mov
ljmp
mov
dec
test
scas
xchg
or
loop
sti
cmc
sbb
mov
or
pusha
cltd
xchg
jle
add
fnsave
pop
pop
mov
cli
mov
mov
push
out
jecxz
incl
cmpsl
push
stos
mov
icebp
adc
clc
out
inc
ds
pop
inc
pop
mov
incl
incl
inc
mov
rcrb
and
sub
fildll
sarl
and
ds
pop
pop
inc
mov
decl
inc
push
stos
inc
push
inc
lods
dec
gs
inc
jp
fistl
ret
xor
jae
jge
jle
out
pop
dec
push
aas
cli
es
dec
pop
pop
scas
test
pop
stos
movsb
iret
mov
clc
xchg
pop
pop
cmpsl
cmpsl
mov
mov
int3
fadd
xor
roll
mov
push
jl
cmpsb
imul
pop
xlat
lret
mov
jg
decb
add
or
sbb
divb
inc
inc
dec
mov
sub
ret
sub
fdivrp
mov
nop
out
or
cmp
and
test
and
int3
fidivl
sub
packsswb
push
imul
cld
sbb
xchg
je
sub
cld
testl
leave
sub
push
outsb
daa
and
push
fstpl
push
ficompl
imul
xor
sbb
jge
es
in
jg
rolb
aaa
jae
mov
adc
outsb
notl
arpl
fs
adc
ljmp
sub
jo
cs
jbe
adc
push
stos
mov
lret
push
ja
xchg
lock
sbb
mov
and
push
xchg
cmc
adc
inc
dec
cmpl
std
ljmp
dec
push
jns
jle
jno
gs
pusha
das
lods
add
and
fwait
xor
fstpt
xor
fnstcw
das
js
or
and
adc
push
pop
icebp
pop
ljmp
loop
jnp
inc
dec
scas
push
push
jns
mov
and
sub
cmp
mov
add
iret
cmp
mov
add
sbb
test
out
dec
sbb
shl
or
loopne
adc
cmpsl
mov
push
jmp
in
sbb
push
mov
lods
add
xor
sub
loopne
sub
pop
add
sbb
mov
repz
in
es
icebp
fimuls
sbb
sub
push
or
icebp
adc
push
jo
jg
push
aas
mov
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
ja
xor
inc
inc
pop
mov
push
imul
in
incl
push
push
or
pop
das
adc
push
mov
jns
xchg
jns
jg
repz
pushl
jg
jge
js
pop
lahf
outsw
lea
dec
data16
scas
mov
addr16
cmp
and
test
xor
lcall
adc
sub
das
cmp
and
cltd
jnp
xchg
arpl
clc
incl
mov
sahf
pusha
addr16
pushf
je
add
sub
mov
cmp
arpl
mov
outsb
mov
das
incl
or
xlat
rolb
into
leave
and
and
rolb
mov
cmp
int
cmp
fbstp
and
ljmp
fisubs
arpl
push
aad
jg
sub
loopne
or
movsb
or
push
int3
pop
adc
in
add
add
outsl
push
jl
clc
stc
add
cmp
std
das
sub
push
std
jae
add
jmp
and
ret
ss
adc
cld
adc
adc
adc
cmp
xor
cli
pop
sbb
sti
add
fsubs
pop
scas
dec
dec
sbb
push
push
inc
lods
inc
inc
adc
push
inc
mov
push
add
mov
fs
jb
popa
mov
and
imul
mov
mov
mov
mov
lcall
lods
dec
scas
mov
adc
mov
add
ja
clc
lcall
pop
mov
push
dec
pop
mov
pop
dec
stc
bound
dec
mov
cmc
adc
dec
mov
fs
enter
pushf
test
lods
inc
adc
inc
call
nop
mov
inc
shrd
sysret
in
cs
int3
and
stos
pushl
jmp
and
shll
and
and
xor
push
sbb
das
sub
cmp
push
jmp
xor
sbb
ljmp
push
jmp
mov
adc
mov
jg
jle
cs
jp
pushl
into
jl
pop
mov
scas
inc
push
inc
mov
dec
mov
inc
insb
stos
js
inc
push
inc
stos
pop
dec
sbb
gs
push
jbe
subl
ja
pop
or
jbe
js
jns
dec
lock
stc
sti
or
mov
test
dec
imul
sar
pushl
subl
insl
xorl
mov
jge
inc
sarb
mov
cld
add
mov
inc
hlt
add
outsb
jle
mov
push
inc
push
mov
ljmp
outsl
xorl
lods
outsl
fs
pop
dec
pop
lea
inc
mov
call
xchg
xorl
lcall
xchg
xchg
outsl
xchg
cwtl
decl
int3
movsl
movsb
loop
out
loope
call
mov
mov
push
mov
pushl
jb
aad
sub
rcl
jp
enter
orl
out
addr16
mov
popa
ja
xor
jo
insb
insb
jne
outsl
sub
outsl
push
jg
insb
popa
cltd
arpl
mov
mov
push
push
out
add
decb
push
inc
push
adcl
movsb
inc
pop
dec
decb
lock
jg
xor
in
xor
shrl
xor
shll
sar
insl
bound
adc
jp
add
push
and
hlt
sbb
call
add
jmp
sbb
in
xor
add
loopne
test
decl
in
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
ljmp
sar
lds
rol
shrb
nop
or
add
leave
int
or
inc
xor
test
inc
mov
mov
add
mov
dec
int3
mov
cmpsb
mov
mov
jmp
test
cld
lcall
mov
ja
nop
loopne
mov
lret
mov
mov
sbb
push
or
pushl
arpl
fwait
js
and
inc
fisubs
push
dec
pop
movsl
dec
adc
decl
hlt
push
dec
dec
test
dec
or
inc
fnstenv
jle
mov
aaa
dec
data16
dec
cmp
fucomp
sbb
jmp
or
mov
jge
imul
xor
int3
aaa
cmp
cmp
xchg
mov
insl
into
or
cs
out
call
add
lret
dec
stc
sbb
cs
push
test
mulb
arpl
xor
std
aas
xorb
popf
inc
test
mov
mov
mov
and
loopne
cmp
or
sbb
add
adc
pop
fnstenv
add
ret
dec
in
jecxz
and
neg
and
scas
aas
loope
repnz
cli
aam
aas
fcmovnb
fldcw
pop
pop
pop
jmp
jmp
fstpt
mov
daa
fidivrs
and
xor
sub
xor
cmp
cmp
mov
dec
nop
pushl
lds
adc
push
fimull
add
pop
mov
dec
aam
enter
iret
iret
out
add
add
add
dec
out
mov
mov
or
mov
pop
inc
clc
aas
push
mov
sahf
inc
mov
mov
mov
mov
pop
xchg
iret
ror
lcall
push
aaa
in
sbb
sbb
adc
sbb
jp
outsb
pushf
out
push
push
jp
push
and
mov
jle,pn
pop
repnz
cmp
adc
jecxz
adc
mov
mov
pop
push
pop
stos
push
pop
add
pop
cld
call
push
scas
and
add
sub
sub
loope
sbb
in
adc
add
dec
and
push
push
or
nop
mov
inc
inc
repnz
jg
jmp
in
gs
int
rcr
shll
lds
rol
jne
fcmovne
sub
sahf
inc
cmp
adc
clc
out
push
mov
loop
test
fwait
push
jo
adc
add
pop
cld
inc
sbb
sti
pop
pop
pop
cli
sbb
mov
loopne
notb
adc
sbb
push
cmp
fbstp
pop
dec
dec
dec
sahf
add
inc
dec
inc
mov
inc
sbb
mov
adc
pop
stos
push
pop
push
mov
add
aam
es
xchg
sbb
ret
xchg
jbe
push
xchg
les
push
cmp
enter
iret
pop
aaa
mov
pop
sub
inc
loope
mov
xchg
scas
aas
xor
aam
push
subb
test
dec
mov
repnz
cmpsb
mov
sbb
mov
and
or
outsl
mov
add
shlb
push
in
fldl
dec
mov
daa
fdivl
aaa
add
or
sub
xorl
bound
out
mov
push
xchg
outsl
xchg
cmp
sub
lret
into
notb
push
sub
and
cs
adc
popa
mov
gs
add
add
mov
leave
xchg
and
inc
in
sbb
push
mov
jg
jmp
int
into
cmpsl
mov
sbb
out
dec
stos
lods
fcomi
ljmp
std
sti
sub
inc
cmpsb
dec
push
push
in
xchg
sbb
jmp
stos
pop
decl
int
sub
shlb
jb
jl
xor
or
aaa
jp
jg
pusha
sub
fidivs
ja
jge
mov
inc
sub
adc
or
aas
pop
push
out
cmp
xor
in
jg
ljmp
hlt
div
or
call
sbb
lock
sbb
mov
or
stc
icebp
ljmp
mov
int
cmp
lret
lret
ss
cltd
and
fildll
icebp
filds
add
cmpsb
mov
inc
dec
inc
cmp
les
dec
add
fdiv
cmpsl
pop
cmp
push
dec
gs
or
jne
mov
jns
or
push
insb
cmpsb
add
lahf
inc
mov
add
shl
add
xor
sbb
outsb
cli
imul
lods
inc
inc
fnstsw
out
add
xor
push
outsb
pop
xadd
push
dec
push
add
std
mov
popa
bound
gs
fwait
ret
dec
inc
lea
je
scas
add
cmpsl
push
adc
imul
in
jae
mov
jae
jb
jns
test
mov
push
xchg
add
dec
loopne
sbb
arpl
pop
mov
cltd
mov
es
outsb
xchg
sbb
hlt
pop
push
addr16
jbe
pop
xchg
push
push
push
mov
nop
push
mov
idivl
mov
mov
ss
leave
pushw
xchg
sahf
pop
js
or
cs
xchg
push
loopne
or
lea
dec
loop
js
lds
icebp
incb
push
arpl
cmp
bound
bound
fsubrs
cld
jge
and
pop
add
into
push
cli
fldl
push
push
sbb
sub
mov
adc
arpl
je
dec
data16
addr16
cmp
aas
add
das
lods
cs
clc
hlt
cmp
insl
mov
mov
add
add
scas
insb
insl
jbe
dec
mov
cs
sbb
outsb
push
cmp
cmp
jb
xchg
push
mov
outsb
add
push
push
sbb
add
pop
cmpsb
push
push
inc
add
addb
pop
nop
mov
xor
stos
cmp
pop
fwait
inc
inc
add
popa
and
jnp
cmp
xchg
decl
subb
push
subb
orb
andb
push
aaa
jae
adc
xorb
leave
add
addb
inc
push
add
jmp
addl
sub
daa
add
movl
lods
movsl
and
mov
subl
clc
mov
bound
push
inc
push
mov
inc
adc
push
mov
andl
pop
loopne
dec
mov
inc
mov
xorl
inc
orl
add
stos
dec
push
pusha
stos
subb
adc
lods
push
movsb
dec
dec
mov
push
scas
call
sub
inc
sbb
dec
addl
inc
sbbl
dec
inc
mov
or
roll
or
roll
push
xchg
add
sbb
shr
mov
enter
mov
add
incl
ret
inc
dec
inc
stos
dec
cmpsb
pushf
jne
call
js
sub
gs
arpl
mov
pop
je
shlb
pushf
mov
mov
popa
outsb
mov
arpl
push
aas
std
mov
jb
fs
pushf
push
stos
mov
ljmp
gs
popa
insb
cmp
rclb
mov
sub
xchg
adc
aad
pushf
dec
adc
jo
scas
add
mov
jb
or
call
nop
ja
ret
rcrb
push
jle
inc
imul
push
jecxz
add
or
mov
gs
xchg
popa
mov
mov
rcll
fs
add
lods
imul
or
popa
jbe
mov
mov
outsl
shrb
dec
in
sbb
inc
arpl
pop
mov
or
inc
loope
xor
or
mov
lcall
mov
add
mov
push
outsl
mov
shrl
push
cld
rorb
mov
xchg
and
ret
ret
mov
orl
inc
outsb
xchg
popa
sbbl
xor
mov
insb
outsl
pushf
imul
int
mov
jns
fdivl
shlb
adc
arpl
add
insb
and
jae
sub
fistps
imul
and
push
sahf
popf
pusha
pop
mov
mov
std
arpl
and
imulb
push
fs
fbstp
mov
sbb
and
loopne
xorb
loope
push
adc
pop
fucom
add
ljmp
lods
xchg
mov
loop
rcll
clc
popa
push
movsb
jg
push
pop
stos
mov
push
lods
mov
adc
loop
pop
jbe
cld
add
into
mov
push
jnp
inc
je
aam
mov
pop
and
out
jne
test
mov
movsbl
sti
push
jg
out
mov
push
stc
inc
cmp
jne
addb
pushl
jne
int3
leave
test
jle
mov
lea
add
cmp
jne
cmp
and
cmpb
mov
add
push
rolb
add
mov
movsb
test
test
jne
notb
or
cs
or
xor
std
jp
jmp
movsb
leave
ret
xchg
in
cmp
xchg
cmp
test
fisttpl
fcoms
in
jg
mov
inc
inc
fmuls
or
ss
push
push
decl
mov
cmp
xlat
jg
aas
jne
xor
jmp
push
test
call
jp
pusha
data16
push
cmp
jmp
and
jg
das
jne
decl
inc
sbb
cld
mov
ja
and
mov
lea
add
cmc
call
cli
call
add
mov
call
mov
pop
adc
outsl
mov
xor
inc
mov
jmp
icebp
or
lea
or
push
pop
sbb
mov
cmp
das
mov
loopne
sbb
in
hlt
mov
fcompl
or
inc
ror
add
je
mov
cmp
add
clc
inc
ret
jg
inc
icebp
add
cs
sub
add
sub
jne
int3
call
aas
je
sti
mov
inc
hlt
mov
movb
and
jne
inc
test
jne
add
rol
les
je
cmpb
mov
or
je
and
jle
sbb
je
cmpb
je
push
jl
xor
mov
lock
testb
dec
ret
ljmp
adc
fbld
push
add
sbb
add
add
loopne
cli
mov
mov
call
lock
pop
pop
ss
divb
test
cmp
ds
inc
push
ss
jg
decl
in
loop
pop
mov
ds
mov
and
incb
or
and
pop
add
mov
and
mov
addl
adc
leave
push
pop
push
mov
mov
mov
call
cmp
leave
inc
pop
jmp
xor
mov
insb
mov
cmpb
and
jmp
mov
jb
int3
stc
cmp
mov
lods
ljmp
sbb
and
test
pop
xor
icebp
jg
dec
sub
jg
sbb
inc
pop
add
sahf
cs
add
mov
loopne,pn
xchg
jo
push
pop
mov
inc
mov
pop
lock
xchg
inc
movb
xor
mov
testl
xor
add
add
rcll
in
xchg
pusha
or
mov
movzbl
fcoml
divl
xor
push
mov
mov
dec
decl
in
xor
pop
cmc
outsw
dec
jb
adc
pop
sbb
mov
cmp
mov
dec
addb
mov
aaa
adc
mov
es
push
aam
adc
sbb
push
push
mov
push
jbe
mov
inc
xor
repnz
add
jl
mov
cmp
add
adc
push
je
pop
mov
sbb
inc
pop
mov
rolb
jge
lock
fdiv
into
loopne
add
pop
pop
pop
pop
add
movl
cmp
xchg
cmp
add
dec
fcmovnu
fimull
rcll
dec
mov
and
jmp
jg
fcoms
push
dec
jae
and
mov
sbb
push
inc
jae
add
push
add
call
pop
mov
add
ljmp
add
pop
imul
sbbb
iret
add
jo
push
sbb
dec
sbbb
rorl
pop
mov
xor
sahf
jmp
ja
fiaddl
cmp
jb
fsubp
pop
mov
pop
lock
imul
mov
jnp
lock
push
adc
decl
push
das
js
scas
je
add
mov
lcall
jb
lret
sub
in
sbb
out
pop
inc
mov
jmp
jl
gs
dec
mov
jo
push
lock
push
xchg
pop
xchg
dec
add
xchg
push
jbe
jbe
cmp
push
jb
push
jge
sar
or
and
xor
cli
push
les
out
decl
adc
cmpl
je
xor
mov
sbb
jbe
jo
jo
adc
inc
adc
jp
pop
adc
fmull
les
add
je
push
in
add
jb
push
add
dec
inc
je
lock
sub
jne
xor
mov
adc
mov
jmp
lea
pop
mov
fdivs
jne
mov
jo
inc
jg
testb
xor
mov
add
mov
loopne
cli
add
dec
lock
adc
je
mov
std
jne
dec
mov
clc
inc
jmp
mov
push
adc
pop
fdivl
les
ret
clc
add
lea
lea
fs
loop
mov
cmp
jbe
idivb
bnd
add
sti
decl
lret
rorb
mov
xor
and
cli
ljmp
mov
mov
pop
cmc
adc
pop
sbb
mov
jg
cmp
jae
add
jge
call
jo
mov
pop
cmp
sub
push
sti
cmp
xor
or
mov
and
cmp
into
mov
cld
sub
scas
in
add
xlat
insl
add
pushf
call
in
jne
pop
or
cmp
lea
rcl
pop
mov
repz
add
xor
hlt
adc
jmp
loopne
mov
mov
push
jo
mov
wrmsr
cs
daa
add
les
jae
pop
lock
pop
lcall
pusha
data16
lea
sub
sub
jnp
push
xor
xor
popa
and
adc
cltd
add
push
shrl
lret
inc
sub
je
in
stos
cld
mov
jp
xchg
jl
mov
add
dec
shl
lea
pop
mov
inc
imul
jae
test
scas
call
push
or
mov
into
add
pop
fmull
incl
jo
push
call
jge
in
icebp
or
imull
cli
dec
inc
rcr
inc
xrelease
mov
cld
notb
xor
or
or
jno
mov
test
das
xor
or
cwtl
pop
mov
ljmp
test
pop
adcb
jle
lock
jecxz
outsl
or
jo
aas
je
scas
cwtl
or
imul
mov
push
and
mov
adc
add
lcall
pop
jns
pusha
xor
or
sbb
add
ret
mov
inc
call
adc
add
pusha
jle
pop
sti
adc
add
push
orl
push
xchg
push
mov
cmpsl
sti
cli
fists
mov
xchg
jg
inc
and
movsb
in
fsubr
or
sbb
and
and
inc
ret
add
jmp
lea
mov
sub
mov
bound
lock
movl
lock
mov
fadds
pop
fstpl
sahf
je
push
inc
jmp
lcall
adc
mov
dec
or
push
mov
test
je
mov
hlt
repnz
jbe
adc
movsb
fdivs
cmpsb
jne
pop
mov
hlt
in
add
adc
or
inc
fisttpl
mov
add
xchg
testb
in
sbb
cmp
mov
or
or
or
into
jmp
adc
push
push
jl
sbb
fwait
adc
andb
andl
push
stos
push
es
rclb
mov
push
or
adc
mov
divb
cmp
dec
add
scas
sbb
insb
and
adc
pop
in
es
clc
sar
jg
push
push
adc
xor
add
lcall
push
pop
mov
push
push
fmulp
lock
pop
mov
mov
jmp
xor
leave
and
outsl
inc
xor
mov
adc
cld
push
xor
dec
testb
xor
cld
clc
mov
push
sub
push
into
mov
xor
push
aad
mov
lock
inc
jp
jg
push
jbe
sahf
and
push
and
sub
orb
adc
push
fildl
or
cmp
sbb
push
stc
push
or
push
iret
lock
mov
mov
lock
adc
add
call
push
jbe
repz
push
flds
push
pop
and
inc
repnz
adc
nop
xlat
stos
in
push
sbb
rclb
test
or
jg
jo
sbb
xor
push
mov
hlt
add
shr
call
std
dec
mov
xor
pusha
inc
repz
or
add
sub
mov
push
push
push
inc
clc
pop
push
repnz
fdivs
xor
jmp
add
push
lock
sbb
lock
xchg
ret
mov
mov
pop
mov
out
stos
clc
mov
or
hlt
push
call
mov
scas
pop
and
mov
lock
inc
andl
push
je
push
mov
inc
scas
dec
mov
in
push
decl
in
add
jb
loopne
push
jo
dec
push
mov
and
mov
fstpt
cli
or
jns
inc
lea
mov
pushl
fisttpl
inc
into
je
push
mov
push
sub
cmc
and
ret
inc
fidivl
out
or
test
lcall
daa
lea
pop
cwtl
adc
sbb
loopne
test
testb
sbb
dec
lret
dec
scas
jp
push
orb
je
call
je
outsb
jl
push
popa
mov
cli
mov
mov
xlat
jb
jno
call
sub
je
adc
cld
idivb
mov
mov
jbe
jae
andl
mov
sbb
adc
test
sbbl
das
xchg
and
add
repnz
gs
push
fld1
jl
sub
shr
fdivl
notb
not
sub
push
test
add
call
das
mov
xor
push
push
sub
ret
cmpsb
add
ret
xor
rorl
pop
and
pop
fidivrs
and
daa
inc
or
dec
mov
pushl
xor
lds
cmp
lea
sub
pop
adc
insb
mov
add
push
mov
push
fistpl
cmc
add
jnp
inc
cmp
fadds
test
xlat
mov
add
adc
test
mov
and
stos
xor
lea
insb
repz
jg,pt
pop
roll
in
xor
and
cmp
jl
jmp
inc
pop
cmp
sarb
mov
insb
mov
ja
or
sub
mov
push
pop
sbb
data16
inc
adc
in
fstpt
ret
dec
cmpsb
mov
and
scas
mov
sbb
jmp
mov
mov
jb
sarb
inc
clc
xorb
mov
add
subb
mov
lock
mov
je
xorl
mov
fsub
xor
add
ljmp
testb
mov
dec
jle
or
iret
add
incl
cld
in
js
mov
cltd
push
mov
cmp
inc
mov
sbb
mov
cmp
std
xor
sbb
pop
sti
addr16
jmp
add
jg
jmp
push
add
sbb
and
fisubrs
movsb
and
mov
dec
cld
mov
add
roll
nop
mov
ds
ljmp
rclb
inc
adc
in
cmp
mov
and
lock
mov
xchg
adc
push
cmpsb
mov
stos
orl
lock
or
pop
mov
cs
scas
daa
outsl
flds
cli
js
xchg
jg
in
mov
fbld
jo
mov
lods
add
insb
sub
mov
or
call
ret
sub
cmpsb
mov
sbb
decl
and
jmp
stos
or
cld
cli
ret
xor
jg
sub
inc
daa
rorb
mov
mov
cwtl
sub
mov
ret
lea
rorb
jle
mov
push
shrb
or
and
inc
test
push
mov
mov
pop
and
jbe
and
testb
mov
cs
and
push
inc
enter
rorb
adc
jbe
adcb
sti
je
test
jbe
push
push
les
rclb
adc
ret
jne
or
cmp
or
loopne
cmc
xchg
mov
pushl
shlb
mov
add
xchg
pushf
cmp
fwait
icebp
push
jne
mov
scas
push
push
loope
lea
lcall
pushf
call
sarb
push
xor
pop
mov
jle
cmpsb
ss
int3
rorb
fistpl
stos
cmpl
sbb
inc
or
scas
ret
push
xchg
add
add
or
and
add
loopne
and
lahf
rcll
adc
adc
imul
cmp
jmp
mov
adc
sbb
inc
adc
pop
cmp
fnstenv
add
ljmp
int3
add
lods
pop
adc
fisttps
incl
fistpl
xor
inc
xchg
fs
ljmp
mov
loopne
inc
dec
or
xor
out
insb
dec
shrl
inc
ljmp
stos
sbb
je
mov
cmp
add
push
mov
push
insb
adc
cwtl
arpl
mov
data16
insb
add
fimull
divb
adc
jge
pop
jmp
cmpl
jmp
jle
repz
mov
je
and
std
and
cmp
cld
or
cmp
pcmpgtd
sbb
loopne
sub
add
push
fdivrs
into
idivb
xor
rcll
xchg
adc
inc
sti
movzbl
scas
lea
divb
or
mov
fs
arpl
add
push
xchg
push
pop
cli
push
xchg
in
cmp
mov
inc
push
es
shll
inc
clc
pop
cld
in
pop
add
mov
jb
or
or
pop
add
leave
je
jp
jne
inc
pushf
jl
jle
pop
out
rclb
xchg
adc
mov
pop
inc
ret
pop
push
roll
es
mov
lods
lea
ss
pop
lret
mov
inc
or
inc
loopne
xchg
inc
mov
lods
dec
xchg
scas
or
ret
enter
mov
add
lea
popa
cmp
subb
call
lea
pusha
adc
add
mov
add
mov
push
jmp
or
int3
lock
lods
mov
call
fldl
push
ss
push
ss
push
mov
cld
mov
decb
lea
push
notl
pop
cmp
adc
lea
cmp
xchg
add
ss
out
fsubrl
aam
aad
jg
inc
dec
sub
adc
pop
inc
jbe
pop
mov
loopne
mov
xchg
pop
cmp
je
cmovs
add
ficompl
bound
not
stc
iret
jne
and
addl
js
add
jne
push
pop
cld
rolb
push
pusha
add
pop
das
cmpw
ja
fidivs
xor
add
xchg
lock
lods
ljmp
leave
jmp
jb
decl
int3
jbe
jl
and
add
add
movl
pusha
pop
add
pop
cmp
or
je
cmp
jl
in
jmp
push
push
xchg
pusha
push
add
inc
andb
fs
lcall
sub
and
cld
push
adc
outsl
cld
loopne
pusha
stos
mov
mov
push
or
sahf
and
inc
out
jle
add
sti
fstpt
mov
jo
cmp
mov
lea
inc
leave
fcoml
push
or
data16
stos
shll
cltd
mov
inc
mov
fists
adc
cmp
mov
add
and
cld
pop
add
ret
pusha
arpl
lods
push
adcb
hlt
call
ja
jg
je
mov
or
pop
mov
pusha
or
mov
mov
push
je
hlt
incl
movsl
shlb
aas
loopne
add
cltd
cmpl
loopne
mov
add
sbb
je
xchg
inc
jl
jbe
push
xchg
clc
incl
jecxz
loopne
loope
je
popa
sbb
aam
jp
xchg
adc
clc
mov
mov
add
or
leave
cmp
add
push
test
push
lods
and
call
jbe
sub
jne
pop
leave
mov
fwait
in
pushl
loopne
call
pusha
call
jp
enter
jmp
fcoml
orl
sti
pop
xchg
movb
imul
std
addb
es
inc
mov
pusha
dec
pop
push
add
in
add
loopne
push
cs
ljmp
rolb
scas
xor
loope
loope
add
pop
pop
pushf
aad
js
inc
pop
or
shlb
dec
inc
pop
mov
push
dec
jne
fiadds
dec
sti
andl
cmp
cmp
out
cli
icebp
inc
mov
gs
pushl
and
cs
clc
mov
add
push
aaa
sub
cmp
and
mov
push
je
adc
cld
idiv
call
mov
or
icebp
inc
decb
outsb
jo
push
or
sbb
mov
loop
mov
jae
mov
mov
jne
cmp
jle
test
stc
dec
mov
adc
xor
mov
jbe
call
mov
mov
test
fistpl
add
or
add
inc
out
cli
fstpt
mull
loope
adc
shl
lock
mov
mov
sbb
fmul
adc
je
int
ret
sbb
adc
push
or
pop
mov
adc
add
pop
mov
push
in
add
push
push
clc
jp
mov
lock
xor
lock
jl
les
adc
add
xor
call
fcoml
add
jl
xchg
adc
adc
inc
and
out
push
pop
addb
outsb
and
nop
fcmovnu
sub
lcall
add
test
je
xchg
dec
push
mov
jo
mov
adc
jecxz
sbb
pop
lret
sub
or
jp
dec
xor
outsb
mov
inc
scas
ljmp
push
cmpsl
mov
jb
add
add
popa
sti
push
xlat
or
or
divb
ds
jbe
jg
mov
mov
sbb
mov
call
push
bound
cwtl
xchg
mov
mov
out
xor
ljmp
stos
adc
je
in
lcall
insl
test
in
loop
sbb
jo
pop
icebp
scas
mov
stos
or
in
in
add
dec
lock
xchg
sti
or
call
movsbl
pop
add
out
mov
add
scas
adc
ja
scas
dec
jne
add
mov
sub
in
sub
or
xor
addb
mov
add
mov
pop
cmp
or
call
lock
inc
into
xor
jb
sbb
mov
push
inc
cmp
icebp
cmp
mov
jo
mov
dec
jl
add
aaa
mov
imul
xor
jbe
std
aaa
jge
jbe
jge
aam
jo
add
or
sti
adc
pushl
add
adc
mov
js
or
pop
xchg
cmc
ja
pop
lock
call
sub
sbb
je
jo
divl
cmp
or
and
or
insl
cmp
lock
punpckhdq
inc
imul
cmp
lods
jae
scas
in
call
jno
sbb
decl
ret
outsb
or
inc
or
or
std
adcb
push
call
xor
call
pop
or
or
xor
or
sarb
pop
sbb
mov
and
push
std
dec
or
adc
aad
scas
sub
test
sbb
imul
jmp
call
add
lods
jne
add
add
xchg
ret
fiadds
ret
jmp
std
ljmp
or
es
and
cmp
mov
cmp
shlb
push
and
insb
add
mov
add
push
adc
xorl
sub
or
xchg
inc
jl
and
clc
sbb
cmp
push
mov
pop
fildl
and
add
mov
sub
and
or
clc
mov
mov
add
loop
cli
cmp
cmp
push
push
andb
cli
mov
pop
mov
lods
lock
push
out
xor
incl
cmp
jne
mov
mov
xchg
add
pop
inc
hlt
fistpl
inc
lock
and
je
and
loope
adc
shll
inc
push
std
fbstp
dec
cltd
cmp
xor
inc
push
jb
push
push
push
jp
jg
rcrl
pop
cmpsl
ds
stos
jo
lret
lret
or
adc
push
add
test
test
mov
inc
sahf
jne
pop
xchg
pop
mov
fcomip
decl
pop
or
repz
inc
push
push
cmovs
xor
jl
add
ret
mov
jbe
cld
jmp
jbe
mov
mov
mov
cld
lods
add
jne
es
lcall
mov
ss
mov
adcl
mov
mov
mov
je
add
pop
xor
lock
cmp
je
call
mov
out
cli
stc
aam
adc
push
or
test
addb
or
stos
push
cmpsb
xor
cmp
jg
pop
pop
and
xor
add
push
testb
and
mov
call
es
ljmp
push
lret
adc
pop
mov
jg
decb
lret
jne
shlb
add
scas
push
pop
imul
push
add
sub
das
rcrb
inc
ret
mov
mov
add
inc
fbld
fistl
mov
shll
jmp
add
mov
push
scas
call
out
fistpll
ss
inc
mov
stos
xor
icebp
push
adc
lea
testb
push
test
xor
push
xor
sbb
adc
xor
mov
adc
cmp
adc
call
pop
adc
push
scas
or
subb
pop
sbb
cmp
decl
and
cmp
inc
and
cmp
icebp
das
subb
xor
test
je
inc
idivb
jb
hlt
icebp
aam
bound
pusha
dec
icebp
jnp
mov
call
lock
int3
add
jo
push
scas
jg
cli
xor
aas
adc
out
add
cmp
add
std
push
jmp
ret
jne
mov
push
test
sti
or
notb
mov
add
xor
mov
cmp
pushf
pushf
push
jg
call
jle
mov
cmp
push
lock
inc
lock
mov
adc
adc
js
add
adc
inc
push
mov
pop
cmp
xchg
or
fistpll
sbb
inc
cmc
or
pop
notl
jo
addl
fdiv
fildl
inc
adc
and
leave
pushf
repz
add
mov
in
jae
push
cli
repnz
push
mov
push
jo
pusha
push
or
jno
ljmp
inc
mov
loop
jg
xor
jne
in
xor
rolb
and
repz
cmp
bound
incb
add
addl
outsb
outsl
pushf
add
shrb
push
cld
call
sub
outsl
pushl
stc
lock
scas
test
add
insl
js
lea
add
cld
inc
stos
clc
rorb
mov
fistpll
add
add
add
push
out
je
daa
xorb
mov
add
and
cli
enter
add
pop
rclb
and
add
cwtl
inc
mov
js
dec
mov
fwait
ret
je
push
movb
scas
ret
add
rclb
pop
fisttpl
data16
fbld
int3
iret
lock
cmp
pop
cmp
sbb
and
adc
pop
jno
stos
cltd
or
data16
add
data16
je
adc
rorl
push
fiaddl
cld
rclb
or
ss
dec
sub
push
xor
dec
int3
ret
push
or
jl
jo
das
dec
call
mov
push
push
cmp
loopne
mov
rclb
sub
xor
sub
jp
idiv
mov
jae
add
sbbb
or
call
mov
jl
push
xchg
mov
sbbb
cmp
scas
test
jo
inc
xorl
in
xor
add
jp
or
mov
xchg
push
pop
xchg
dec
push
push
xchg
aaa
rorl
sbb
test
mov
or
push
mov
jo
jb
or
lea
cmp
add
call
pop
or
inc
std
adc
adc
pop
push
pop
dec
addl
rolb
icebp
inc
hlt
ja
cmpsb
xor
mov
cmpl
inc
add
sbbb
mov
push
dec
xlat
mov
pop
pop
push
inc
stos
fistpl
hlt
in
and
push
andl
and
dec
mov
stos
int
movsb
subb
shll
jle
inc
ss
push
sbb
ljmp
jl
je
pushl
cltd
andl
sarb
aam
lea
lea
pushl
push
rorb
lret
dec
dec
xchg
pop
cmp
add
xadd
or
push
or
clc
test
cmp
or
scas
push
sub
rolb
push
das
rolb
sti
sbb
cli
divb
in
jmp
jb
mov
loope
out
clc
add
jmp
and
add
sub
mov
sub
ja
mov
jl
add
data16
fildl
jne
mov
repz
sbbl
mov
stos
addl
cmp
jae
adc
add
mov
hlt
pop
pop
loopne
icebp
and
push
cmp
jae
mov
cmp
xchg
js
lock
jb
aam
add
mov
inc
or
mov
and
lret
orb
std
push
shrl
test
mov
into
jle
lods
cmc
inc
ret
dec
add
mov
in
loopne
add
and
mov
call
mov
mov
je
adcb
bound
sbb
lahf
adcl
lret
and
add
fwait
loope
inc
pop
inc
inc
clc
jl
aam
lea
fsubrl
pop
sarl
xor
dec
push
or
or
mov
aaa
pop
add
dec
jns
adc
incb
insl
or
pop
pusha
in
call
mov
mov
orb
jo
call
jnp
adc
mov
dec
add
jmp
xchg
and
lock
lods
add
pusha
dec
je
andl
cmp
test
dec
jbe
inc
hlt
cmp
cld
idivl
jmp
or
inc
addb
jg
mov
jb
mov
loopne
jne
lea
xorb
fildl
jne
sub
cld
jmp
jne
lods
fbstp
or
push
or
sbb
fmuls
aaa
mov
jmp
sub
pop
jne
int3
leave
fiadds
add
mulb
mov
sar
and
cli
jb
push
sbb
cmp
add
add
sub
sub
inc
repnz
loopne
inc
nop
scas
js
ja
push
and
xchg
xor
push
imul
jmp
cli
inc
dec
ret
jl
faddl
inc
add
mov
pusha
jo
adc
push
add
mov
inc
ret
mov
enter
pusha
and
ljmp
add
les
call
push
popa
and
clc
add
or
or
sbb
mov
fisttps
push
adc
lock
mov
testl
cmpsb
xor
cmpl
pushf
addl
or
decl
cmp
in
add
mov
add
js
lock
repnz
dec
and
jge
sub
ret
cvttps2pi
sub
pushl
bnd
addb
out
jo
cltd
cmp
jne
mov
dec
mov
test
enter
cltd
shlb
mul
and
add
add
subl
lds
insb
xor
add
rcll
sti
call
sbb
mov
jp
sbb
shrb
inc
adc
or
aaa
inc
mov
lock
loopne
push
fsubs
loop
je
add
orl
hlt
and
clc
iret
cli
pop
lret
and
mov
dec
clc
pop
add
and
fildl
pusha
and
pop
or
xchg
or
mov
or
sahf
out
add
xor
je
jmp
cltd
and
ljmp
pop
or
push
pusha
add
in
ret
mov
test
mov
inc
adc
pusha
pushf
cmpsl
lcall
mov
call
pop
pop
jl
clc
and
jg
mov
and
push
pop
cltd
push
add
mov
and
das
jb
fstpl
mov
jnp
push
pushl
je
outsb
dec
mov
call
xor
mov
lahf
cmp
push
xchg
and
fs
inc
or
add
inc
pusha
outsl
clc
inc
call
clc
inc
les
push
fldenv
or
rorl
sub
in
pusha
mov
mov
cltd
cld
sarb
movsb
dec
pop
int3
pusha
xchg
stc
cmp
add
pop
jb
xorb
and
pusha
inc
add
clc
inc
imul
pushf
pusha
pop
adc
xor
aas
inc
jmp
push
ffreep
jmp
fsub
bound
mov
xor
inc
pop
movsbl
add
inc
aam
jne
aam
pusha
mov
push
cld
div
addb
and
bound
xchg
out
adc
push
ljmp
dec
or
test
lock
or
add
jbe
repz
push
or
bound
jp
dec
sbb
aam
jle
test
adcl
shlb
call
repnz
scas
sbb
roll
movsb
pusha
sub
add
add
shll
sbb
push
pop
dec
movsb
jne
inc
xchg
add
dec
jmp
push
scas
add
in
lahf
pusha
xchg
outsb
inc
lock
push
xchg
mov
add
jae
je
in
sub
cld
push
jno
in
or
and
add
adc
jne
pop
js
jo
push
push
lock
add
lock
adc
inc
push
xor
adc
andb
jne
push
mov
enter
xchg
clc
out
mov
cmp
add
fidivl
insl
fiadds
xor
sub
xchg
xor
loop
jmp
push
mov
inc
ss
shrb
mov
repnz
lahf
sar
cld
outsl
hlt
neg
sbb
pop
lea
incl
xchg
inc
add
test
clc
or
out
cmc
cmp
jmp
fbld
cltd
cmp
in
xchg
shl
or
subb
std
mov
ret
jo
push
sbb
aaa
or
fildl
jb
sbb
icebp
push
and
call
mov
idiv
jg
push
ljmp
push
orl
add
jg
or
stos
or
adc
pop
and
jp
and
add
xor
pop
cmp
push
pop
dec
xor
and
scas
push
add
pop
addb
ja
lret
inc
orb
ljmp
hlt
add
dec
push
lcall
mov
ljmp
mov
or
xor
pop
jns
adc
mov
push
sub
mov
mov
imulb
movsb
decl
xor
jo
or
rcrb
jmp
inc
mov
and
add
std
call
and
jbe
adc
cmp
jge
or
add
jo
repz
pop
jno
adc
fildll
jo
or
call
or
mov
and
sbb
repnz
add
mov
cmp
push
decl
jo
lea
mov
or
jns
mov
pop
rcl
mov
pop
xor
add
pop
leave
ret
sar
push
ss
mov
adcb
dec
ds
mov
jo
pop
mov
jae
je
clc
jbe
daa
icebp
ljmp
jmp
and
add
jmp
data16
push
jo
adc
loope
add
imul
xchg
jmp
fimuls
stos
jg
fnsave
and
je
mov
mov
decl
jle
xchg
pop
into
cmp
add
mov
inc
cltd
mov
lods
push
cmp
xor
mov
cmp
hlt
mov
cmp
ljmp
ret
pop
cmpb
shrl
xchg
add
into
mov
add
jae
cmpb
jle
cmp
jne
mov
outsb
decl
lock
lock
lret
add
jle
testb
push
loopne
xchg
and
subb
xchg
call
lcall
add
adc
int3
fldt
add
mov
cld
mov
cld
lods
add
and
adc
lea
xor
pop
mov
inc
cmp
jb
fimuls
jle
rcrl
inc
shr
jbe
adc
sbb
push
add
out
jmp
aaa
loopne
incl
inc
or
jnp
icebp
xor
dec
jbe
hlt
mov
dec
jno
clc
sbb
lds
jne
les
int
in
cmp
mov
xchg
or
mov
jo
and
mov
incl
jne
jnp
push
jle
or
outsb
xor
cld
or
lea
stc
out
add
dec
inc
push
sbb
jmp
add
loop
sbb
adc
dec
mov
mov
cwtl
mov
xchg
push
cld
jmp
inc
add
lcall
or
mov
xchg
cmp
and
or
pop
mov
adc
mov
outsl
idivb
inc
mov
jo
fcom
decb
inc
add
push
jmp
inc
or
add
pusha
addl
mov
cs
inc
dec
add
bound
test
cmp
mov
sbb
push
jno
inc
push
adc
xchg
add
je
subb
cmc
adc
xchg
or
or
mov
mov
or
je
cmp
xor
sti
mov
fists
pop
push
call
mov
mulb
mov
xor
ljmp
int3
out
sub
sub
lock
dec
pop
add
mov
inc
sbb
test
xor
adcl
icebp
rclb
mov
lahf
lock
pop
push
add
lea
scas
rolb
loop
push
pushf
push
lock
ss
ficoml
sbb
mov
leave
add
std
pop
push
mov
sub
fdivrs
add
je
add
ret
dec
ret
dec
cwtl
loopne
mov
cli
or
jne
movsb
xchg
jne
mov
pop
sbb
cs
inc
mov
rol
add
and
mov
push
inc
cs
lock
adc
icebp
inc
or
mov
lock
mov
loop
movsl
mov
pop
jp
adc
inc
movsb
add
push
loop
movb
xorl
call
ret
xor
mov
adc
or
pop
scas
outsb
popw
adc
call
add
fsubl
clc
jo
push
mov
jne
or
add
bound
push
lea
xor
add
incl
pop
xor
add
add
mov
fdivr
jno
jo
xchg
push
das
adc
adc
mov
pop
xorl
adc
push
jno
nop
ss
push
frstor
mov
mov
adcb
jmp
fsubl
pop
pop
cmp
or
push
sbb
xchg
add
push
push
lods
lock
jg
loopne
add
lret
rolb
sbb
stos
lock
push
mov
adc
jne
mov
add
dec
xor
adc
add
mov
lret
or
or
lock
scas
mov
dec
mov
aaa
add
xor
lock
xor
mov
clc
adc
add
add
mov
fistps
je
call
cwtl
and
sbb
shll
sbb
decl
sub
jo
scas
adc
mov
insl
aaa
add
fdivr
enter
pop
pop
pusha
and
jbe
mov
mov
inc
mov
repz
inc
xor
push
add
adc
jle
add
jmp
neg
adc
and
ret
mov
add
push
or
push
mov
adc
cld
pop
jns
add
mov
jo
rolb
lret
fs
jp
call
and
outsl
clc
push
push
push
cltd
mov
dec
or
mov
push
cmpsb
lock
test
inc
and
movzwl
out
push
stos
add
out
cmp
jbe
dec
mov
inc
sahf
pop
test
xor
xchg
ds
incl
lea
mov
repz
nop
push
push
pop
data16
fcomip
pop
cld
adc
sti
push
in
push
pop
and
mov
decl
in
lea
loope
add
subb
sbb
add
mov
loopne
sbb
mov
xor
mov
les
sub
or
insl
rorb
cmpsl
pushl
aas
pop
clc
lods
test
popf
test
inc
and
mov
mov
stos
call
lock
in
jl
inc
jle
pop
sub
je
push
mov
sub
jnp
pop
lret
adc
adc
stos
xor
add
inc
sti
cmp
jmp
jnp
shlb
clc
inc
adc
cmp
jns
call
cld
lret
cli
pop
insb
fstpt
push
cs
mov
and
fidivl
insl
lods
mov
arpl
inc
orl
mov
jmp
xchg
jo
sub
add
stc
push
filds
xor
inc
push
scas
mov
push
mov
jbe
add
add
add
mov
add
mov
push
cmp
mov
mov
lock
jp
xor
jno
inc
mov
jg
sbb
shrb
scas
mov
jmp
push
add
mov
sbb
test
adc
aaa
hlt
lock
pop
ja
dec
je
mov
testb
jg
dec
insl
xor
rorb
fadd
jmp
push
push
lds
mov
adc
jo
ret
add
xchg
std
or
outsb
cmpb
jne
xor
push
je
les
in
or
js,pn
pop
mov
pop
push
xchg
jo
add
pushl
test
jl
add
decb
jne
adc
mov
xlat
pop
lcall
sbb
or
push
jmp
lods
orb
or
push
xor
je
je
mov
jecxz
push
push
jle
pop
and
push
call
adc
mov
adc
pop
cwtl
data16
ret
jp
je
cld
movsl
bound
push
lea
sub
je
mov
push
test
fmuls
jne
push
clc
inc
xchg
stos
lock
dec
mov
mov
ret
lea
add
add
jnp
push
sbbl
xor
bound
stc
notb
dec
add
loopne
ret
or
dec
inc
mov
call
xchg
push
std
jl
add
inc
sbb
movsb
shlb
add
pop
cmpsb
out
mov
sub
push
sahf
cwtl
jp
aas
push
fdivs
jle
jle
hlt
jg
add
pop
mov
int3
xor
pcmpeqw
aas
out
shlb
cltd
cmp
je
neg
sbb
and
jb
dec
clc
cmp
adc
cmpsb
call
pop
je
pop
ret
push
push
pop
cwtl
add
mov
rorb
xor
xchg
in
dec
outsb
jmp
int3
mov
mov
call
hlt
mov
in
call
in
push
add
inc
fxtract
pusha
cld
and
pop
sub
or
ds
jecxz
clc
jl
sub
jge
movb
mov
pop
or
mov
add
clc
pop
jne
movl
sahf
adc
rcl
notb
sub
and
cmp
mov
cmovns
mov
cmp
inc
push
ret
imul
lock
call
decl
xchg
cmp
jbe
dec
jmp
xor
pusha
cmp
popf
repnz
push
jle
icebp
and
push
adc
insb
aaa
fdivr
adc
xchg
adc
inc
cmp
clc
mov
dec
push
rcl
mov
testb
call
mov
push
mov
ljmp
loopne
cmpsb
add
push
mov
xlat
mov
adc
push
push
fisubrs
jbe
call
adc
sub
adc
mov
pop
js
andl
xchg
addb
mov
pop
sbb
pop
dec
jb
push
xchg
push
push
mov
aaa
or
jbe
add
test
cmpl
push
or
fisubs
pop
cmp
xor
out
cmp
push
cwtl
inc
mov
pop
cmp
outsl
movsb
add
lea
dec
loopne
xor
lock
sbb
call
aaa
cs
fsubl
fsubl
aad
adc
xchg
aam
jp
mov
add
sub
fs
or
in
cwtl
cmp
pop
add
cmpsl
add
aam
out
jecxz
stos
mov
sahf
mov
xor
je
pop
rcrb
jb
jne
jbe
hlt
addl
mov
cmp
jg
pushl
xchg
xor
test
js
mov
rcr
cmp
outsb
rclb
jge
or
rcll
test
jle
sarl
xorb
rcrb
dec
je
add
push
xor
out
mov
pop
or
jne
cld
add
jg
les
jne
test
xor
adc
jmp
incl
inc
sub
mov
and
dec
sub
cli
cmpsb
fldpi
push
cs
fimuls
or
shrb
or
inc
push
and
mov
fs
inc
lods
mov
push
jl
or
fiaddl
rclb
ret
push
adc
xchg
mov
push
push
cs
sahf
aas
movsb
rolb
mov
rolb
je
adc
fbstp
hlt
cld
lock
rolb
addl
scas
mov
mov
xchg
mulb
repnz
negb
mov
out
inc
rorl
push
inc
bound
int
jmp
outsb
cld
xchg
adc
or
push
lea
call
xor
and
push
lock
jmp
dec
cmp
adc
dec
or
es
pushl
sbb
push
mov
sub
xchg
and
push
das
sub
lock
loopne
in
call
or
inc
mov
mov
xchg
add
mov
aam
jnp
add
xor
iret
stos
in
pop
add
sbb
add
std
andl
fimuls
pop
adc
inc
jnp
test
ficomps
mov
mov
jl
into
ljmp
cs
mov
xor
es
add
fbld
fiadds
sbb
test
loopne
mov
push
adc
jb
out
not
clc
xorb
jne
cmp
stc
stos
scas
ja
push
fbld
in
aas
jge
loope
pop
les
lea
cs
add
jl
pop
out
push
cmp
call
call
sub
ds
cld
fs
lea
pusha
aaa
jge
jge
push
call
xchg
jle
add
jb
xchg
aam
cmp
xor
pop
fists
mov
push
jb
orl
mov
fidivrl
decb
icebp
push
lea
subb
cmp
adc
data16
add
sub
das
push
lea
repnz
xor
sub
and
or
cmp
xor
jge
mov
test
pop
out
fimuls
or
dec
sarb
aaa
sahf
jmp
insb
push
jbe
daa
arpl
subl
push
movzwl
add
lea
fsubr
xchg
mov
aaa
mov
dec
hlt
add
fmuls
std
lcall
push
jb
cmp
ja
testb
jne
sub
push
jae
adc
lea
jnp
fcomip
inc
jb
pushf
mov
xor
dec
sti
punpckhdq
mov
lret
jnp
mov
push
cmp
mov
sub
shll
les
rorb
mov
pop
inc
jne
sub
js
jg
decb
jb
mov
loopne
out
adc
or
mov
sbb
lcall
cmpb
gs
mov
imul
add
mov
mov
xchg
ss
mov
sarb
push
add
inc
fcoml
pop
add
jl
mov
push
std
and
rclb
dec
out
mov
in
in
outsl
call
scas
mov
pop
sub
decl
outsb
jg
inc
cmp
fmull
pop
sbb
adc
mov
call
in
add
data16
int3
call
sbb
mull
xlat
add
pop
push
out
ljmp
dec
fists
addl
cwtl
adc
stos
rclb
call
xor
pusha
daa
fmul
cmp
data16
repz
mov
test
outsb
pop
pusha
divb
movb
mov
add
icebp
and
xorl
inc
scas
rcrl
mov
xor
adc
jle
test
lods
and
dec
repz
cmc
pop
cmp
sub
je
call
adc
jnp
fcompl
lock
jne
jmp
xchg
add
add
jle
hlt
sub
scas
out
sbb
mov
mov
mov
std
cmp
daa
or
call
adc
sbb
xor
adc
cmp
fsubrp
or
daa
cmp
pop
add
push
ss
mov
cmp
mov
pop
mov
add
mov
xchg
push
mov
cld
inc
or
cmp
add
add
rclb
push
ss
mov
daa
dec
push
je
inc
or
addb
jne
mov
mov
mov
enter
sbb
adc
mov
push
es
fldt
lods
xor
push
loope
lock
jbe
mov
cmpb
int
push
add
pusha
pop
les
movsb
inc
mov
fadd
jb
inc
jle
cmp
es
add
cmp
lock
fidivs
mov
lds
cmp
mov
xchg
mov
cmp
xlat
mov
push
call
cmpsb
hlt
outsb
and
pop
push
pop
push
cmp
and
hlt
mov
lock
push
insb
in
mov
test
mov
dec
data16
data16
and
inc
adc
call
cmp
call
sbb
fstl
fisubrs
jnp
or
mov
push
pop
ficomps
outsb
mov
ret
jmp
mov
or
lea
dec
emms
jne
mov
xor
mov
mov
mov
dec
dec
fs
or
jae
xor
sbb
bnd
mov
sub
ja
cmpsl
add
or
in
jae
push
xchg
les
mov
in
sbb
lea
pop
pop
inc
jle
in
cmpsb
rolb
mov
mov
or
or
pop
or
or
mov
stc
fiadds
xchg
punpckhwd
das
ret
cs
push
fadds
mov
inc
inc
lea
into
jns
fcomi
testb
push
mov
jg
cs
lock
push
jb
rorb
fsubs
jle
add
mov
or
out
or
jmp
inc
pop
mov
cmp
push
cmp
je
cmp
je
cmp
je
jecxz
fisttps
lock
jmp
mov
jmp
mov
jmp
mov
inc
and
and
jl
jbe
data16
in
clc
mov
ss
sub
mov
sbb
cmp
push
push
mov
mov
mov
dec
test
add
mov
std
jne
into
pop
repz
adc
andb
cmp
jecxz
jp
fisubs
pop
je
or
jmp
push
sahf
jae
call
add
mov
mov
addl
lea
shlb
sbb
fimuls
cld
mov
call
jp
jle
clc
jg
sahf
sti
in
clc
out
mov
int3
leave
mov
cmp
cs
mov
cmp
mov
inc
iret
daa
xchg
xor
lahf
inc
lea
jb
in
mov
loopne
push
or
xor
and
scas
call
nop
dec
sbb
mov
imul
sub
sbb
movsb
cmp
jbe
xchg
push
cmp
push
jl
sub
sbb
test
fiadds
adc
pop
pop
outsl
push
dec
inc
push
testb
es
xor
mov
or
jmp
mov
jl
inc
pop
sbb
xchg
cmp
addl
rorb
lret
outsb
add
dec
xchg
scas
add
scas
subb
mov
pop
call
mov
stos
pop
adc
jl
cmpsl
xchg
in
push
rolb
orb
sub
push
idivb
or
push
cmp
orb
and
pop
test
cwtl
int3
jp
sub
hlt
xlat
mov
lret
adc
rcl
pop
pop
cltd
mov
fidivs
pop
jmp
or
cmp
fucomi
loop
or
dec
adc
decl
jo
inc
and
stc
es
movb
xorb
aam
add
std
and
jb,pt
adc
add
and
movsl
fbstp
mov
or
out
lcall
call
mov
cli
stos
repnz
add
mov
mov
inc
inc
xor
adc
aaa
and
push
pop
push
out
loop
add
aad
mov
add
sbb
jmp
cmpw
jae
xchg
and
adc
jmp
adc
jb
mov
sbb
add
and
pop
pop
lods
clc
pop
test
push
push
fdiv
scas
jbe
and
jl
jp
push
sbb
sbb
pop
jp
mov
loope
jne
push
lea
mov
lea
mov
jmp
test
mov
test
jo
pop
and
imul
mov
ljmp
or
xchg
testl
sbb
jbe
add
ja
or
out
loop
cmp
pop
out
lock
fisubrs
lods
loop
adc
mul
call
pop
mov
loop
into
push
call
mov
adc
into
jne
stos
out
adc
out
cmpl
lods
call
lock
add
add
pop
mov
call
or
pop
adc
lcall
inc
jb
xor
dec
test
jl
cwtl
pop
jmp
test
add
shrb
or
iret
jb
ja
out
sbb
jmp
jg
and
sbb
cmp
jbe
notb
sbb
cli
or
mov
mov
dec
test
or
cld
mov
fwait
test
fimull
mov
imul
cmp
outsb
pop
sti
sub
add
daa
mov
or
lods
call
adc
push
in
push
pop
jb
decb
addl
sub
lea
test
test
mov
mov
mov
sbbb
popl
je
rclb
jne
add
jae
xor
outsb
add
jg
add
sbb
ds
jbe
sahf
mov
jmp
call
push
pop
in
xchg
clc
pop
push
push
dec
sbb
cmp
out
and
outsl
in
mov
decl
les
scas
int3
mov
ds
or
jmp
mov
or
push
push
je
pop
mov
bnd
adc
pushl
repnz
cmp
ja
data16
adc
js
jne
sub
pop
cmp
jae
cs
lret
stc
mov
sub
hlt
or
mov
stc
lcall
clc
gs
jb
xlat
test
sub
dec
insb
adc
fdivp
scas
lock
adc
inc
lock
cmp
xchg
outsl
mov
cld
dec
or
push
adc
push
adc
mov
push
and
stc
jne
nop
xchg
jbe
outsb
add
fldcw
orb
addr16
aaa
add
call
dec
push
mov
mov
in
cmpsb
bound
outsl
pusha
movswl
stos
clc
out
enter
mov
je
subb
mov
add
xor
lock
hlt
push
ss
push
fdiv
xor
inc
adc
aaa
js
add
pop
scas
mov
mov
add
mov
sub
test
sub
xchg
cmp
das
cmpsb
cmp
or
mov
ja
cwtl
in
jmp
cmp
call
mov
cld
add
push
xor
cld
cmp
cmp
or
or
dec
das
mov
mov
repz
loope
ss
xor
loopne
mov
out
sub
inc
sbb
xchg
jecxz
mov
cld
jge
xor
ja
rcll
or
push
push
mov
call
aaa
xchg
push
push
shl
xchg
adc
inc
out
inc
rcrl
fists
and
pop
mov
scas
jecxz
adc
pop
push
data16
das
add
sbb
ds
adc
cld
cmpsb
dec
sahf
inc
add
add
rcll
divb
mov
leave
mull
sbb
sbbl
push
fisttps
mov
jbe
fdivrs
loopne
jmp
jbe
outsb
cli
cmp
push
adc
sarb
push
jmp
mov
jb
push
push
in
std
xor
fs
cs
push
mov
pop
jp
test
cld
incl
inc
je
push
test
xor
add
outsb
ljmp
call
add
add
lea
loop
sahf
scas
call
jge
in
mov
inc
enter
sub
push
fsubrs
cld
push
xchg
cmp
les
call
add
xchg
push
jl
mov
hlt
pop
out
fisttps
sbb
push
push
icebp
sub
je
or
push
testb
repz
xchg
inc
subb
adc
pushl
or
jg
jmp
mov
repnz
cmp
mov
dec
movsb
mov
sti
repnz
and
mov
adc
sub
mov
pop
mov
iret
jle
cmp
divb
ljmp
xor
push
scas
call
loop
les
pusha
mov
xchg
daa
add
add
jae
cmp
jl
mov
call
or
pop
cld
xchg
adc
je
in
pop
mull
pop
imul
jbe
pop
inc
das
data16
rsm
lret
lahf
call
pop
cs
je
aas
jg
xor
push
mov
mov
and
adc
add
or
sub
rcrl
test
add
push
or
clc
rcll
call
lock
cmpsb
clc
ficoml
push
je
imul
cmp
sub
pop
into
dec
jne
mov
push
jo
jae
adcb
aas
jecxz
add
mov
jo
push
call
mov
data16
inc
add
pop
add
jg
mov
movsbl
mov
push
push
scas
add
push
xor
mov
add
inc
outsl
inc
pop
and
xchg
xchg
iret
imul
add
inc
push
push
dec
xor
adc
imul
inc
pop
enter
push
jb
sbb
jle
loope
decl
add
loop
jl
roll
cmp
orb
pop
incl
test
add
test
inc
or
or
xor
call
test
xchg
sbb
dec
pop
test
add
inc
and
fimuls
push
fidivs
push
jb
dec
cmpsl
call
add
das
mov
cmpsl
and
mov
stos
add
dec
push
mov
incb
jle
push
in
push
mov
shrb
jg
and
mov
or
inc
bound
add
inc
pop
enter
mov
mov
push
push
call
inc
cltd
rorb
and
and
sub
les
mov
jns
jp
pusha
or
subl
jae
inc
ret
xchg
push
mov
mov
push
push
push
push
dec
pop
ret
jbe
sub
or
pop
add
mov
jae
cmp
ds
jbe
sbb
mov
std
outsb
sub
push
xor
sub
divb
cmp
xor
jmp
push
mov
jg
sahf
es
call
jbe
push
fisttps
je
into
sub
pop
xchg
mov
add
jmp
bndldx
and
mov
test
ja
add
call
neg
movsb
sbb
je
xor
cmp
sub
xlat
xchg
mov
pushl
cmp
jbe
loop
clc
dec
mov
push
in
dec
divb
je
push
mulb
outsl
sub
xor
call
fwait
test
mov
cmpsb
aam
sarb
jmp
pusha
cmp
and
push
pop
mov
and
push
sub
in
add
push
xor
mov
adc
mov
mov
lds
cltd
sub
mov
push
mov
leave
xor
in
mov
push
or
lret
dec
loopne
out
incl
repnz
into
pop
jae
mov
inc
test
jne
pop
push
fwait
sbb
xchg
jo
pop
jb
ljmp
lret
cmpsb
or
xorl
cli
cmp
or
push
or
mov
pop
mov
jae
xorw
jmp
xchg
out
outsl
pop
adc
xor
call
sbb
lea
pusha
cs
rcll
mov
or
xor
lock
mov
cmp
jecxz
loop
mov
pop
call
fcomp
call
push
cmp
adc
push
push
jb
loopne
adc
fmuls
inc
inc
jb
adc
xor
jb
loopne
push
inc
ja
push
call
mov
nop
fisubrl
lea
hlt
lods
lods
cld
js
lds
inc
push
xchg
adc
lea
clc
dec
int
rcrb
and
jb
loopne
fisubs
imul
pop
and
push
jecxz
xchg
test
popf
pop
idivb
xorl
jbe
adc
adcl
inc
jb
jmp
sub
lods
je
shlb
notl
or
jge
je
mov
loopne
dec
xor
aam
inc
add
sbb
js
or
in
mov
lock
clc
add
sub
push
lea
adcl
aas
int3
add
lret
mov
jecxz
pop
cmp
or
mov
ret
punpcklbw
cmpsb
push
pop
aam
dec
sbb
mul
push
stos
dec
fbstp
jge
call
mov
dec
lea
pusha
xor
popf
cmp
inc
aam
mov
das
or
dec
xor
int3
sti
mov
mov
hlt
in
jg
jmp
inc
mov
ja
nop
mov
jbe
int3
mov
xor
push
push
mov
stos
lock
aaa
lock
mov
pop
clc
out
jg
adc
mov
cmp
mov
xlat
mov
jg
or
or
sbb
inc
add
inc
call
rcll
cmp
call
push
xchg
mov
mov
call
fmuls
pop
mov
xchg
mov
shrb
xchg
adc
sti
xorb
call
jge
jne
adc
jo
push
je
dec
dec
insb
imul
cld
js
scas
out
pop
xchg
aam
mov
hlt
jmp
test
xlat
bound
aam
cwtl
pusha
popf
xor
je
loopne
push
jle
or
rclb
adc
ljmp
push
cmp
lock
add
xchg
push
dec
add
clc
mov
pop
add
xor
cmpsb
adc
cmp
pop
add
adc
testl
ljmp
fstps
incb
fadd
push
test
shlb
dec
inc
pusha
movsb
aam
push
jp
adc
rolb
sub
and
insl
push
cmp
sbbl
cmpsb
sub
jo
mov
or
xchg
aas
inc
notl
jmp
cmpsb
aas
lret
sub
dec
mov
push
xchg
push
cmpsb
lahf
repnz
loop
pop
pop
push
adc
movsl
test
lock
cmpsl
rcr
movsb
adc
xor
in
out
mov
jo
xchg
rorb
hlt
adc
or
test
mov
fildl
sahf
ss
ss
pop
pop
mov
sti
pop
scas
push
push
push
cltd
rol
xchg
fdivs
add
push
push
mov
ret
popf
cwtl
cmp
or
add
cmp
je,pn
outsb
add
push
push
add
add
cmp
loope
sub
es
mov
into
lahf
sbb
out
dec
dec
cli
cmp
add
add
jbe
add
movl
fidivrs
je
orb
mov
xor
hlt
mov
push
arpl
cs
clc
push
es
xchg
repnz
mov
sub
mov
adc
stos
fnstcw
pop
and
mov
ljmp
adc
nop
push
mov
adc
stos
call
ret
push
jb
and
jle
ret
out
in
adc
xorb
jmp
cmp
pop
jo
test
dec
add
test
scas
jl
add
jl
dec
xchg
jmp
mov
cmp
push
jb
fs
xchg
add
pop
lods
subl
mov
or
inc
push
add
enter
jp
adc
inc
jl
push
jbe
inc
add
inc
out
insb
lea
sbb
lar
outsl
ja
popf
out
sub
jl
andb
lds
mov
loop
ds
aad
mov
dec
incb
mov
xor
inc
lods
enter
div
mov
pop
adc
sub
sub
push
lods
sar
jbe
hlt
mov
cld
fistpl
mov
lret
add
xor
sbb
cmpsb
inc
jmp
inc
in
and
scas
inc
push
dec
sarl
lock
add
imul
daa
sbb
aaa
call
pop
cmpsl
aam
mov
lret
mov
or
mov
jmp
inc
outsb
jb
jmp
mov
fldl2t
hlt
add
adc
inc
mov
test
fistl
jbe
dec
repz
es
movl
add
into
lds
jae
in
cmp
outsl
jp
xor
push
xchg
adc
pop
cmp
out
pushf
ds
test
adc
xchg
push
iret
add
jecxz
dec
cmp
repz
xchg
cs
push
retw
lea
fwait
insb
jb
hlt
call
jp
mov
mov
std
pusha
add
mov
inc
sub
pop
xor
push
fistpll
xor
adc
je
push
call
mov
adc
push
dec
dec
lods
call
aad
mov
push
iret
or
xchg
and
cs
ds
pop
lret
loopne
insl
add
js
ret
les
aas
jmp
push
push
mov
ret
mov
pop
and
jbe
inc
shlb
mov
adc
pop
mov
mov
xchg
mov
test
fsubrl
push
call
or
lods
sahf
pop
test
movsl
and
shll
pop
mov
mov
or
mov
subb
popa
mov
clc
repz
lea
xor
outsl
push
aad
mov
stos
lret
adc
dec
jmp
fmuls
jg
sub
push
sbb
out
mov
enter
decl
in
int3
neg
fidivs
jne
je
lcall
mov
dec
lret
inc
out
push
or
cmp
test
or
hlt
push
lock
push
test
jle
shrb
jne
jbe
dec
hlt
lret
decb
jne
mov
cmp
aas
xor
push
pop
cmpsb
ljmp
imul
outsb
fs
xchg
pop
pop
add
mov
mov
sti
mov
shlb
mov
das
xchg
aaa
mov
je
mov
adc
sar
push
cld
testb
mov
inc
push
push
std
xlat
jno
push
fildll
movsb
stos
test
sbb
sub
cld
in
cmpsb
jns
sahf
sub
in
jl
jle
std
dec
out
std
or
add
cs
pusha
inc
data16
jo
mov
stc
cld
jnp
xlat
push
lods
sbb
jns
movsl
scas
sub
scas
mov
out
bswap
push
cmp
xchg
into
pushf
call
shrb
xchg
lcall
in
pop
f2xm1
ljmp
out
fnsave
scas
xchg
push
scas
stc
fsubrs
stos
pop
mov
stos
in
int
push
js
out
jl
pop
pushl
cli
ret
inc
or
sub
dec
mov
dec
lcall
fimuls
in
or
mov
or
mov
nop
cmp
mov
int
push
lods
outsl
insb
ret
xchg
je
movd
and
insl
sahf
inc
sub
aas
ja
lock
clc
lods
mov
mov
ljmp
push
sarl
call
stos
test
add
push
jnp
pushf
std
sub
outsb
imul
mov
mov
test
push
into
add
jmp
sub
inc
clc
sbb
mov
mov
add
inc
and
pushf
out
aas
push
pop
and
mov
pop
push
shlb
cli
stos
pop
outsb
xor
sbb
pusha
xor
cmc
pop
or
nop
es
outsl
test
cmp
or
cld
cmp
fcom
xor
fcomip
sub
fisubrs
adc
test
hlt
mov
push
cmp
das
clc
out
or
jmp
jecxz
mov
and
jle
or
fwait
push
loop
stos
clc
or
xchg
std
popa
xchg
mov
clc
pop
in
fisttps
pop
dec
shlb
jle
and
lock
in
idivb
and
or
orl
mov
xchg
lret
pop
mov
stc
mov
sub
mov
popf
lods
outsl
in
out
inc
out
out
cld
jmp
fcoms
clc
add
ror
aas
mov
popa
push
jo
lock
pop
rcll
icebp
stos
mov
ljmp
lock
xchg
loopne
outsb
jae
mov
add
enter
stos
shll
xchg
rorb
pop
and
adc
cli
aad
xchg
mov
xor
adc
insb
stc
xor
push
jb
int3
mov
divb
jo
scas
jne
addl
adc
jge
insb
sub
pop
dec
inc
pop
insl
inc
div
inc
sbb
test
aaa
loopne
lea
mov
mov
mov
inc
pusha
push
mov
adc
jbe
adc
inc
cs
std
adc
test
xchg
push
pushf
mov
adc
jo
mov
sbb
mov
mov
test
mov
cmp
push
rolb
hlt
cmp
pop
mov
insl
mov
jbe
call
xlat
dec
jnp
inc
call
push
xchg
xchg
lods
push
mov
data16
pop
mov
jp
push
loopne
cmp
mov
in
inc
lock
lock
add
xchg
pop
pushl
mov
repz
jne
jp
sarb
cmp
lea
add
push
pushl
call
xchg
std
out
ss
lea
call
mov
or
test
xchg
push
clc
push
or
enter
xchg
out
and
jb
lret
in
ret
push
hlt
add
add
int3
shrl
outsb
jge
lcall
cld
imul
cmpl
push
sub
iret
dec
test
ja
ljmp
dec
daa
xor
dec
out
push
pop
cmp
in
sub
out
push
call
add
jae
pop
pop
icebp
pushf
mov
das
cld
jns,pt
scas
lods
mov
outsb
rolb
call
in
inc
mov
into
and
es
insb
inc
mov
bound
add
add
or
xchg
stos
mov
adc
push
in
adc
push
faddp
sub
ret
pop
popa
mov
mov
mov
invd
lock
xchg
pop
jb
inc
lods
ret
adc
inc
inc
enter
xchg
in
sahf
sub
test
mov
add
or
xor
mov
loope
addr16
cwtl
loope
imul
push
out
mov
les
pop
or
lret
sbb
push
cmpsb
mov
outsb
push
and
cmp
call
mov
mov
mov
jg
pop
add
dec
orb
hlt
mov
mov
dec
or
iret
push
jg
scas
lods
incb
mov
push
decb
dec
dec
decb
jecxz
mov
mov
lock
push
push
rolb
xor
lds
cld
dec
or
xor
ja
inc
pushl
pop
mov
gs
mov
mov
adc
mov
incb
and
dec
adc
repnz
jne
clc
pop
loopne
dec
and
xor
inc
mov
cmp
jne
hlt
pop
add
dec
jne
pop
pop
pop
es
pop
add
sub
sbb
xchg
into
push
aam
mov
xor
inc
sbb
pop
push
or
or
testb
mov
jmp
loopne
dec
jne
inc
pop
loopne
mov
ljmp
push
stc
sbbl
clc
pop
clc
decl
rcll
or
jne
cmp
add
cmpb
incl
mov
loopne
cli
and
shl
ds
xchg
xlat
dec
hlt
fildll
std
mov
addb
add
arpl
add
out
fisubl
into
repz
jbe
cmp
out
outsl
mov
push
push
add
push
jl
or
out
mov
mov
push
add
dec
add
addr16
test
xchg
push
sub
or
cmp
out
inc
test
iret
scas
add
int3
sarb
fisttps
jne
out
incl
add
incb
inc
sub
ja
out
rorl
xchg
push
das
int
test
mov
mov
sar
and
cmp
jb
cmp
inc
add
mov
inc
addl
jne
ja
or
mov
push
push
shl
aas
call
push
sub
inc
cld
mov
push
push
cmc
dec
sti
rcrb
ret
call
push
call
loope
sbb
mov
mov
ss
test
mov
fildl
or
jb
dec
sbb
push
cmpsb
pop
mov
fiadds
jbe
jb
add
push
pop
stos
xchg
dec
out
xor
mov
mov
ret
cmp
fwait
and
push
fildl
adc
and
test
xor
mov
add
or
mov
neg
aas
mov
es
inc
sahf
lea
mov
mov
movsb
inc
inc
or
stc
cs
test
ja
pop
mov
sub
in
push
call
bound
movsb
mov
cli
call
xor
push
sbb
add
decl
fnstsw
cmpsl
addr16
mov
add
cmp
jne
dec
pop
rcr
mov
iret
xor
scas
sub
jmp
add
add
ret
je
inc
movsb
push
push
add
mov
int3
add
push
mov
call
mov
adc
push
mov
pop
xchg
outsb
shll
in
cmpsb
add
fs
pop
imul
cmp
flds
mov
adc
ljmp
iret
mov
pop
mov
loop
push
je
mov
add
sahf
mov
stos
cmp
cmp
scas
or
in
addr16
dec
fstpt
test
lods
push
ret
push
sbb
cld
xor
mov
rcr
mov
push
push
pop
push
sbb
fdiv
inc
std
icebp
loopne,pt
push
repnz
add
sbb
mov
bound
mov
je
fists
adc
mov
push
call
push
add
mov
sub
jmp
mov
cmp
ret
inc
subl
jo
fstl
inc
lret
movsb
sub
and
or
clc
faddl
into
call
jmp
jle
inc
aam
add
jo
push
hlt
cmp
es
test
mov
ljmp
ret
outsb
test
das
xchg
jo
xchg
add
lret
add
in
les
mov
or
cwtl
lods
push
mov
inc
dec
scas
insl
fisttps
sbb
mov
add
outsb
into
mov
jmp
mov
add
sbb
aam
push
adc
addb
sti
inc
push
cmp
jmp
cmp
sarb
push
add
inc
add
and
out
push
xor
jbe
insb
add
mov
pusha
lret
inc
ret
inc
inc
jl
mov
jo
mov
mov
mov
add
mov
mov
outsl
clc
mov
dec
mov
pushf
add
and
addr16
jnp
push
fadd
or
and
lea
dec
mov
int3
add
test
int3
addl
cmp
xchg
subl
mov
xor
add
lods
add
int3
add
popa
jl
jl
mov
lea
call
jg
jbe
add
cmp
sub
and
incl
mov
sbbb
mov
inc
cmp
inc
jnp
jae
ret
cmp
adc
pop
pop
andl
std
repz
je
add
call
ds
lcall
addb
addl
xchg
or
pop
sbb
daa
cmc
mov
mov
je
pop
or
orb
imul
leave
cmp
pop
fbstp
addb
cmp
das
aam
push
or
rorb
cld
cmp
inc
add
inc
mov
ljmp
les
mov
sbb
xchg
rclb
das
push
fdecstp
or
cli
push
adc
push
add
std
sarl
push
xlat
call
clc
ljmp
sub
test
ret
sbb
cmp
jmp
jbe
pop
xchg
xor
sub
outsl
add
adc
or
mov
lock
add
xor
sub
add
or
lock
fildl
jbe
test
inc
mov
fistl
mov
mov
outsb
dec
xrelease
push
push
add
out
xchg
lods
push
stos
movsb
cmpsb
adc
add
es
mov
sub
rorb
inc
pop
popa
add
inc
in
aam
sti
pop
mov
push
adc
add
or
mov
in
pop
cld
jbe
adc
mov
xchg
popa
sbbb
or
stos
adc
jne
push
xchg
xor
data16
pop
pusha
xchg
cli
mov
inc
psubsb
dec
add
test
adc
add
pop
in
add
dec
cs
mov
call
enter
outsb
mov
adc
jne
mov
inc
pop
cmpsb
rcrb
or
dec
pop
movsb
je
outsb
push
idivb
outsl
dec
gs
dec
imulb
test
add
push
int3
aam
or
xor
jo
mov
cltd
sbbb
rorl
add
je
adc
or
cmp
orb
dec
jge
add
sarl
jl
mov
scas
push
push
push
add
or
inc
sub
repnz
and
pop
or
add
add
je
xchg
test
adc
es
cwtl
incl
js
add
div
test
or
mov
incb
std
jg
insl
mov
cmp
sub
jge
pusha
inc
pop
pusha
pop
adc
pop
dec
xor
out
ljmp
ret
cmp
mov
loop
std
dec
jne
adc
and
mov
sub
mov
push
data16
jo
leave
dec
mov
push
stc
popa
jb
cmp
inc
shl
jp
mov
xor
or
pop
adc
test
push
pusha
push
add
fcoms
testl
add
pusha
jle
call
or
mov
dec
pop
cmp
dec
loopne
jb,pn
or
dec
popf
cmp
add
cmp
arpl
sub
cmp
pop
add
push
mov
add
lret
adc
push
adc
pop
add
jle
cld
fbld
clc
lea
cmp
xchg
stc
pop
pusha
push
xchg
dec
adc
push
dec
xchg
scas
push
lods
jmp
or
cld
shr
loopne
cmp
pop
test
push
mov
add
jnp
mov
test
add
add
dec
aam
or
sub
or
ljmp
cli
lret
cld
cmp
mov
lea
pop
add
test
in
sub
cli
cmp
cmp
clc
outsl
mov
movb
ja
and
inc
push
mov
decb
ljmp
outsb
jmp
xor
pop
in
xorb
or
mul
jbe
pop
mov
xchg
cltd
cmp
sti
in
hlt
addr16
inc
mov
jb
adc
jg
arpl
loopne
or
orps
ret
lds
and
mov
and
inc
incl
jb
add
cmp
add
inc
call
aad
jge
je
and
jb
cmp
call
call
xchg
mov
mov
call
loopne
stos
push
sti
xor
or
xor
out
adc
addl
popa
int
or
popa
push
clc
and
cmp
ja
nop
mov
scas
push
jnp
call
in
push
lea
add
xchg
add
lea
std
addl
loope
push
jb
popf
in
pusha
adc
pop
popa
or
inc
cld
call
test
sub
and
lock
scas
or
insl
pusha
sbb
push
and
loopne
push
and
mov
push
adc
sub
call
rolb
fs
bound
fimuls
ljmp
add
cld
fwait
jle
and
or
jmp
or
adc
das
mov
dec
inc
mov
xorb
push
inc
jb
jb
and
or
pusha
lock
push
in
xchg
int3
in
adc
shrl
bound
fsubp
lret
call
add
cmp
pusha
inc
push
loopne
cmp
test
adc
pop
cmpsl
xchg
xchg
incb
sub
or
add
push
add
add
jmp
test
or
mov
pusha
or
call
neg
cmp
jne
add
xor
shrb
xchg
inc
sbb
fcompl
add
and
enter
or
fistl
into
dec
loopne
sbb
nop
push
pushf
loop
pop
and
sbb
jo
cmc
lea
push
mov
dec
mov
or
xor
add
fsubrs
call
add
je
push
int
sar
jl
jecxz
jmp
dec
and
sub
push
sbbl
add
or
out
cmc
pop
cld
lahf
subl
push
adc
or
cs
fnstenv
fnsave
movsl
add
or
dec
fistpl
cmp
push
lock
and
je
adc
inc
xor
push
cli
scas
cli
add
adc
rolb
add
xchg
mov
cmp
push
push
shrb
data16
testl
pop
push
lcall
or
adc
mov
aam
sbb
ret
jb
xor
xchg
dec
lret
push
and
xchg
rolb
scas
sbb
adc
push
rclb
call
add
andb
jo
icebp
jo
hlt
dec
jmp
sub
lock
call
jbe
loope
push
and
sub
aaa
add
test
xor
call
call
jbe
pop
add
jno
gs
sarb
adcl
inc
lcall
add
cs
mov
or
jb
clc
mov
shlb
sub
push
push
and
push
je
lea
inc
push
jo
call
into
mov
call
jp
mov
push
popa
and
push
mov
test
mov
jno
push
pop
dec
pop
in
push
xlat
and
lock
jp
js
decb
push
and
pop
xor
mov
pusha
jb
test
xor
push
push
and
sbb
inc
mov
call
call
aaa
add
lods
call
xchg
cs
adc
inc
test
jle
or
xchg
mov
or
mov
clc
outsl
mov
inc
call
insb
mov
inc
cmp
mov
cmp
xlat
pop
and
mov
mov
call
add
je
testl
ss
addl
ljmp
je
push
xor
xor
mov
and
cmpsl
clc
xchg
decb
push
fs
mov
push
fdivrs
pop
mov
jb
mov
pop
add
bound
adc
pop
rorb
add
decl
push
sbb
dec
or
add
jmp
inc
cmp
mov
push
jmp
dec
inc
lock
lock
cli
ja
pushl
push
push
lock
push
ss
aas
insb
lods
xor
sbb
test
cld
outsl
ja
xchg
push
adc
jo
or
or
jae
mov
add
push
fimuls
push
pop
lods
popa
adc
pop
movsl
pop
pop
xor
cwtl
xor
and
gs
mov
inc
pop
sub
mov
pop
mov
inc
cmp
xor
adc
and
clc
push
jbe
cmp
pop
imul
les
call
xchg
add
scas
addb
push
lea
add
cmpsl
xor
pop
mov
aaa
cld
sub
push
pop
lods
lea
incl
mov
jo
push
sbbl
jecxz
jmp
mov
push
mov
insb
add
or
push
jb
adc
mov
sbb
xor
cwtl
sbb
in
lock
push
jg
adc
test
dec
repnz
sbb
push
lea
fcmovnu
mov
sub
jo
jmp
in
jo
add
adc
es
adc
inc
popf
rorb
add
fdiv
add
cld
push
xor
or
xchg
mov
push
shll
enter
push
rolb
cmp
std
jg
cmpsb
pop
push
xchg
insl
inc
mov
stos
sbb
add
mov
mov
inc
rolb
rcrb
clc
incl
cs
inc
test
and
push
cld
add
adc
sbb
leave
incl
pop
jo
sub
daa
pop
add
sbb
jmp
fisttps
decl
pusha
xchg
mov
add
stos
push
pop
ljmp
cmp
sbb
push
fiaddl
xchg
cwtl
xchg
cmp
push
push
fcoml
mov
mov
testb
sub
repz
mov
add
cmp
and
xchg
fadds
push
xor
pop
mov
push
into
jmp
stos
cld
jno
hlt
add
mov
jp
xchg
fdivp
lcall
rol
hlt
jl
or
xchg
outsl
nop
sub
mov
push
movsl
mov
adc
pop
mov
mov
addb
push
shll
scas
stos
scas
mov
jg
inc
inc
lods
and
int
push
lods
pop
data16
sub
push
pop
pop
jno
nop
js
push
xor
inc
outsb
into
or
hlt
cmc
data16
cld
add
shlb
clc
cmp
push
inc
enter
push
fmull
data16
and
pop
inc
pusha
mov
push
lcall
add
push
pusha
lcall
or
mov
dec
loop
das
les
mov
mov
or
mov
hlt
xor
js
cli
test
std
je
sahf
xchg
aam
cmpsl
call
shr
testb
lcall
jmp
sahf
in
push
adc
clc
sbb
dec
fadds
dec
testb
ljmp
adc
xchg
insl
dec
das
add
outsl
xor
or
adc
xchg
push
add
cmc
add
leave
adc
aaa
xchg
les
fidivrl
jo
mov
pop
push
scas
divb
push
int3
push
inc
fdivl
fwait
outsb
mov
mov
xchg
imulb
adc
cld
subb
outsl
or
add
jmp
jo
call
xorl
and
sbb
inc
adc
test
cmpsb
fildl
xor
test
dec
lock
icebp
or
dec
ss
pop
outsb
scas
pop
lock
push
mov
and
xorl
call
hlt
lods
scas
push
pop
rorl
add
pop
mov
scas
add
movsb
jle
mov
or
pop
repz
mov
call
or
adc
and
imul
push
or
add
rclb
push
and
aam
jo
cmp
lock
push
ljmp
stos
addb
imul
mov
test
push
jbe
adc
pop
pop
data16
push
sbb
xchg
add
xor
push
xchg
mov
nop
in
dec
std
aaa
adc
or
test
xor
mov
icebp
mov
call
adcb
in
in
sub
or
jg
cmp
pop
mov
push
pop
repnz
out
popl
add
mov
push
movsb
lea
pop
scas
dec
pusha
daa
lcall
or
test
mov
xor
push
js
xlat
mov
cli
ja
rolb
jle
je
and
mov
sahf
cltd
sub
add
clc
ss
ret
das
jne
add
jmp
call
aam
adc
cmp
inc
lock
into
pop
sbb
adc
into
lea
pusha
add
lea
mov
jecxz
test
cmp
call
mov
mov
dec
xor
leave
test
mov
loopne
lea
and
mov
fisubrl
mov
inc
sbb
and
repnz
hlt
fs
cmp
mov
xor
test
sub
in
std
add
or
aam
jp
xchg
sbb
pop
add
cs
inc
test
stos
fs
sub
cmp
in
mov
mov
hlt
pop
ret
pop
jl
pop
in
pop
inc
jle
ljmp
inc
pop
outsb
addb
and
fcompl
or
add
inc
mov
cmpsb
add
inc
xchg
stos
popa
inc
jbe
js
stos
icebp
aas
pop
jne
sub
push
dec
add
je
call
or
add
loopne
xchg
ss
fstps
orb
pop
mov
push
je
ret
add
push
cmp
mov
test
cmpsb
and
add
pop
scas
dec
je
or
scas
sbb
mov
add
push
popf
repnz
push
bound
scas
add
push
push
push
adc
std
ja
and
mov
push
add
add
and
fucomi
cmp
bound
fisubs
dec
das
add
jb
mov
rorl
add
fsubrl
mov
shr
xchg
pop
lods
or
push
fsubr
add
dec
js
add
mov
add
lock
fcoml
push
shll
xorb
inc
xchg
fsub
jg
shlb
add
jne
pop
adc
movsl
jle
addr16
addb
add
push
adc
fs
scas
mov
and
lds
bound
cmp
mov
pop
hlt
add
cmp
add
outsb
inc
cs
xor
hlt
cmpsb
int3
scas
sub
pushf
test
or
dec
test
jl
adc
dec
cmp
push
clc
movsb
ds
inc
add
jp
jg
fildl
mov
cmp
outsb
js
pop
and
rcrb
inc
clc
push
stos
mov
mov
test
push
sub
ret
cli
and
sub
in
call
push
add
loopne
push
pusha
ds
jb
mov
mov
dec
xchg
xor
jle
call
bswap
jbe
repnz
lods
add
test
or
mov
inc
mov
jbe
idiv
adc
pop
dec
add
addb
add
int3
sarb
notl
testb
aas
shlb
add
pop
cmpsl
mov
pop
test
arpl
xchg
add
mov
nop
shlb
pop
std
movsb
mov
pusha
mov
je
cmp
movsb
test
lods
pop
addb
shll
in
pop
lcall
or
or
jbe
push
lods
mov
movsl
push
mov
adc
xchg
jne
ljmp
outsb
clc
sbb
aas
mov
rcll
cld
jl
add
lock
mov
fisubs
push
push
rorl
push
add
rorb
sbbl
fdivrl
fdivr
mov
add
enter
outsb
add
scas
je
adc
mov
int3
loopne
add
lahf
call
adc
add
dec
sbb
xchg
mov
push
subb
push
mov
ret
lea
outsl
xchg
ljmp
call
aas
popa
sbb
pusha
daa
sbb
cmc
loopne
clc
bound
adc
lock
add
pop
push
mov
cmp
cs
jne
cmp
das
call
or
loopne
lods
cld
cmpl
call
into
mov
pusha
add
dec
push
out
loopne
orb
clc
pusha
and
push
fs
add
add
mov
ja
fcoms
es
sub
mov
cmp
popa
jno
ret
loopne
cmpl
sti
jbe
bound
push
xchg
ljmp
xchg
in
gs
push
popa
sahf
call
pusha
cltd
or
and
aaa
sub
popa
or
ds
fcoml
push
add
insb
enter
mov
call
mov
lock
loopne
mov
sbb
cli
mov
cmp
dec
sbb
mov
dec
sub
xor
testl
dec
jne
decl
push
pop
mov
pop
icebp
pusha
test
addl
dec
mov
lret
pushl
inc
loopne
mov
push
loope
xchg
test
mov
pop
aaa
pop
mov
or
stos
sub
push
or
adc
pusha
adc
inc
incb
fs
fsubrl
lods
filds
sbb
inc
lret
mov
or
and
outsb
inc
sbb
push
subb
lcall
dec
in
xchg
paddw
mov
js
push
adcb
sbb
mov
cmpb
fmuls
lret
pop
or
dec
enter
push
orb
addr16
inc
pusha
popf
loopne
add
mov
in
pop
push
push
mov
pusha
cmp
cmp
ret
inc
decb
sub
pusha
sub
loopne
push
or
loopne
out
add
mov
push
mov
cmp
insl
inc
stos
lods
jne
mov
mov
cwtl
pop
data16
mov
mov
jne
mov
popa
cmp
cmp
push
and
push
test
dec
popa
cltd
stc
rorb
mov
clc
loop
or
push
cld
pusha
lahf
lea
lods
loopne
mov
popa
add
in
loope
scas
aam
xchg
rsqrtps
mov
popa
mov
pusha
sbb
call
mov
pop
add
push
push
movsb
out
lret
call
sti
sbb
cmpsb
pop
or
add
xchg
push
js
add
push
mov
push
js
cmp
loopne
pusha
and
ljmp
addw
dec
dec
mul
sub
movzwl
add
stc
mov
add
lcall
and
inc
in
inc
jo
pop
outsl
cli
jg
arpl
jb
hlt
call
add
adc
push
and
call
clc
mov
test
lock
cli
xchg
test
cmp
mov
xor
js
mov
sbb
je
xor
sbb
inc
sar
mov
in
inc
out
lock
and
sbb
lock
push
add
int3
xor
push
pop
pop
stc
adc
dec
into
push
push
add
xchg
and
out
add
dec
and
lret
test
or
jne
push
add
pop
insl
repnz
call
jp
loope
adc
sbb
aas
add
int3
jo
add
pop
dec
xor
test
jo
mov
pop
hlt
push
call
jo
ret
pop
jb
mov
push
adc
pop
sbb
adc
inc
jns
or
seto
xlat
cltd
sub
aas
xor
or
jge
lea
call
sbb
add
popa
inc
dec
mov
outsb
roll
mov
bound
pop
clc
incl
mov
adc
test
imul
cmp
mov
dec
aad
outsb
aas
data16
cmp
jl
adc
loopne
xor
or
mov
jg
in
mov
add
xor
movl
inc
and
xchg
jbe
push
mov
adc
clc
and
mov
pop
add
add
aaa
cmpsl
push
xchg
xor
add
nop
stos
hlt
push
cli
inc
mov
push
inc
add
dec
aas
shrb
icebp
push
jl
clc
stos
lock
rorb
call
lea
lods
mov
xchg
jle
jo
es
sbbb
das
inc
je
adc
mov
and
jnp
adc
and
lret
test
loopne
xor
push
add
cld
subps
dec
les
pop
pushl
jne
add
test
and
dec
jo
push
push
bound
pop
and
add
mov
mov
mov
inc
add
iret
sbb
ljmp
dec
pop
and
rcrl
push
xor
pop
jne
push
sub
ret
fdivrl
lock
lock
sbb
add
add
sbb
jno
ja
add
lea
mov
xor
pop
lds
lock
adc
mov
jns
adc
jp
nop
pop
adc
push
inc
xchg
mov
pop
aam
push
scas
mov
mov
inc
push
scas
sbb
lock
xor
dec
lock
mov
mov
push
mov
fildl
jg
push
cwtl
outsb
cmp
or
pop
dec
cmp
lock
outsb
cli
pushl
adc
push
jno
and
push
js
je
xor
jnp
mov
pusha
sbb
push
cs
xor
adc
push
stos
imul
inc
and
shrb
mov
fisttps
shrl
and
adc
and
gs
xor
scas
push
ds
and
cld
call
ljmp
push
lock
fcmovnbe
and
roll
lock
cmp
adc
jo
xor
fldt
loope
call
and
or
icebp
pop
ljmp
pop
mov
and
or
cmpsb
lcall
sub
jg
or
xor
cmp
or
jnp
jne
std
mov
jo
push
mov
pop
inc
call
jne
hlt
mov
push
or
mov
sbb
scas
stos
jg
int
mov
jb
and
cmp
jbe
push
jb
add
push
jb
mov
adc
xor
or
mov
add
pop
cld
jne
push
jge
inc
js
xor
adc
inc
pop
and
or
inc
in
sbb
in
or
sarl
mov
scas
push
lods
je
test
adc
test
lock
lods
push
mov
inc
dec
test
mov
jb
adc
inc
addl
jb
add
out
cli
jo
jbe
in
ss
xchg
lret
mov
push
mov
cli
mov
or
call
pop
xchg
popa
ret
daa
push
insb
icebp
inc
lock
pop
push
mov
loopne
jge
lea
pop
pushl
push
dec
hlt
sbb
sub
adc
outsb
out
scas
lcall
pusha
test
jle
push
movb
mov
jp
xchg
mov
decl
test
jle
cmovns
jbe
push
inc
inc
les
out
inc
sti
sbb
jne
pop
loopne
fisttps
push
jb
iret
andl
es
mov
out
push
in
xor
ljmp
adc
or
in
notl
loope
sbb
imul
or
cmp
add
inc
adc
stos
xor
std
cmp
cmp
cmp
rorb
mov
sti
push
xchg
sub
nop
mov
xchg
loope
push
push
cmp
xlat
fistpll
je
fcoml
sbb
inc
push
mov
repnz
scas
mov
adc
or
jo
add
ds
je
aaa
movsl
in
xchg
xor
clc
je
clc
add
lock
adc
mov
jle
dec
fcmovnu
mov
and
and
jne
and
jge
sbb
sarl
mov
pop
cmpsl
adc
arpl
jg
clc
inc
xor
pop
lcall
mov
pop
xor
enter
push
cwtl
les
test
jecxz
pop
mov
das
aam
aaa
add
push
mov
hlt
push
push
test
xor
test
nop
je
sbb
push
arpl
mov
lock
lock
les
jb
xor
sahf
mov
mov
mov
lock
mov
pop
cmp
push
jno
mov
and
mov
call
cmp
rcrb
dec
xchg
xchg
loope
push
push
inc
xor
lea
sub
lea
orb
xor
rorb
in
sub
sub
fucomip
xchg
push
je
pop
idiv
adc
lcall
enter
sub
xor
jmp
divb
call
sbb
cmp
cmpsb
add
rorb
add
mov
lock
or
push
js
ss
in
cwtl
inc
cmp
cmpsb
xchg
pop
jg
fadds
mov
jp
xorb
xchg
cmpsb
fwait
xchg
cmp
lods
sti
test
fwait
out
sbb
lock
pusha
clc
into
cli
rorb
push
inc
cmpsb
push
sbb
and
xchg
adc
test
into
out
cmp
xor
sbb
mov
out
pop
ret
ja
mov
inc
mov
filds
inc
adc
sub
cwtl
shlb
daa
push
xor
xlat
dec
sbb
in
mov
sbb
sbb
inc
sbb
mov
add
add
and
call
mov
or
ret
sbbb
scas
lret
sub
adc
sub
and
sbb
push
leave
sbb
lret
xchg
clc
nop
xor
data16
int3
sbb
data16
mov
mov
lcall
out
mov
mov
imul
jne
fdivs
push
shll
add
pop
loopne
adc
test
pop
loopne
pop
mov
push
push
mov
sub
fcoml
and
decb
adcb
movsb
pusha
push
mov
push
cwtl
icebp
sahf
cli
adc
or
adcb
jl
mov
or
xor
inc
push
mov
add
add
insb
push
xchg
vorps
mov
popf
xorb
inc
sub
adcb
mov
testl
xor
sub
pop
mov
add
jmp
ret
mov
mov
mov
mov
mov
xchg
push
push
faddp
add
stos
or
add
es
aam
addb
jmp
pushf
rolb
add
mov
mov
xor
dec
adc
mov
push
adc
jp
mov
inc
cs
enter
ret
xchg
add
repz
ret
clc
or
or
sub
or
jnp
and
pushf
or
out
inc
pop
vmovhps
outsl
test
sub
add
into
pop
inc
lea
fidivrl
xchg
jl
mov
cmp
push
enter
roll
ret
push
cmp
mov
jg
xor
xchg
push
adc
push
jmp
xchg
pop
shl
mov
stos
ffreep
add
xor
mov
adcb
jge
sub
push
push
ret
xor
cs
cmp
mov
mov
and
adc
pop
dec
std
inc
shll
mov
sbb
xchg
rclb
std
ljmp
rcll
rclb
enter
lds
pushf
mov
in
rcrb
add
sub
jp
je
mov
ss
mov
push
inc
sarb
add
push
aaa
sub
add
loopne
push
sbb
push
movsl
cmc
add
andb
addb
adc
sub
add
outsb
mov
and
add
clc
scas
mov
and
and
call
pop
adc
paddw
rclb
pop
testb
mov
adc
and
xchg
lock
push
xchg
or
shlb
mov
jne
mov
test
shrb
mov
mov
pop
and
add
cmp
outsl
test
daa
add
push
adc
jg
jo
loopne
nop
adc
clc
ret
icebp
lods
loopne
and
sti
pusha
int3
mov
call
jecxz
bound
push
ficoml
mov
rolb
loope
sahf
jp
stos
test
andl
pusha
punpckhbw
push
shlb
add
hlt
int3
div
loope
add
add
mov
pusha
or
jne
dec
dec
insl
outsl
add
jg
or
jbe
clc
push
mov
popa
jg
add
cmpsb
inc
add
jbe
test
dec
clc
shlb
mov
add
es
aam
adc
pop
insb
shlb
lock
pop
loopne
mov
std
jmp
loope
dec
push
add
ftst
fs
and
jle
mov
cmp
cmp
fldenv
loop
push
loopne
adc
loope
popf
clc
cmp
push
and
xchg
fcoms
inc
cld
add
and
add
clc
mov
dec
jmp
pop
test
test
push
mov
outsb
and
mov
loopne
test
insb
ret
jmp
adc
xchg
mov
xchg
cmp
hlt
out
jp
dec
and
jl
scas
adc
nop
outsl
pusha
loopne
int
std
add
pop
pusha
sub
mov
fisttpl
adc
and
pop
popa
jbe
adc
jg
add
addr16
or
inc
repz
ljmp
jp
and
loopne
loopne
xchg
xchg
loopne
pusha
es
cmpsb
xor
sbb
popa
sahf
inc
insb
jmp
andl
shrb
add
inc
mov
sub
pop
loop
xor
adc
fildll
outsb
popa
xor
mov
cli
outsb
call
es
add
int3
jmp
jl
mov
idivb
scas
mov
flds
xor
xor
mov
cmc
dec
cld
fldt
loop
jne
je
push
jmp
ja
dec
or
inc
outsl
jg
cmp
popa
adc
sub
je
adc
mov
and
adc
xor
pusha
sbb
xor
cmp
mov
scas
add
adc
fisubrs
push
xor
cmpl
cmp
inc
in
mov
sbb
arpl
add
or
push
mov
pop
orl
sbb
add
jbe
mov
adc
pusha
pop
xchg
jo
shlb
fildl
pop
pop
push
mov
or
cmp
test
push
cld
aas
nop
sbb
ss
call
pop
out
mov
fsubr
or
imul
add
add
jbe
call
xchg
adc
call
inc
adc
mov
loopne
call
pop
or
arpl
pusha
ss
jmp
mov
mul
sub
and
dec
data16
and
fisttpl
push
inc
test
lods
add
pop
dec
add
jb
add
mov
rcll
xlat
dec
push
xchg
jb
sarb
and
add
fwait
mov
inc
pop
mov
jecxz
adc
add
fcoml
cmc
inc
sub
les
nop
or
loope
push
loopne
mov
loopne,pn
adc
push
push
test
fsubr
pusha
into
std
mov
rcrl
adc
loopne
pop
iret
fwait
jbe
pop
inc
incl
cld
jb
mov
mov
jge
xor
add
and
icebp
psubsb
fcomps
fwait
push
insb
out
inc
mov
outsb
adc
xchg
bound
mov
fiaddl
mov
mov
cmpsb
aaa
sbb
adc
pop
jo
cmp
mov
ss
mov
cmp
mov
dec
loop
mov
int
shl
mov
addl
test
pop
xor
hlt
adc
inc
ss
sub
adcb
pop
shrl
mov
adc
or
mov
sti
fisubs
jo
jb
outsl
divb
mov
ret
and
xor
mov
negb
test
add
test
cmp
shlb
fdivr
mov
addr16
push
lods
shlb
add
lcall
pop
out
jo
jne
and
mov
mov
xchg
lods
incl
xchg
lock
call
aam
jmp
add
push
incl
jg
int3
or
jg
or
jae
push
lock
cmp
or
fdivr
jo
mov
push
add
sbb
js
sbb
and
cld
adc
mov
rcrb
and
lds
add
fiadds
or
push
pop
sahf
xchg
jo
jge
push
dec
daa
outsb
push
outsl
sub
mulb
sti
jne,pn
cmp
add
stc
add
testb
or
in
jnp
mov
fcoms
mov
lea
pop
push
push
mov
inc
xor
lock
loopne
sub
bound
aaa
jmp
lock
mov
jge
or
ljmp
lock
inc
mov
orb
sbb
arpl
xorb
push
jne
dec
jge
xlat
pop
and
inc
popa
mov
adc
ljmp
sbb
fsubr
jmp
xor
mov
push
jae
incl
lret
or
jl
add
push
adc
xor
popa
int3
int
push
sbbb
sbb
or
mov
jb
sub
push
sbb
scas
outsl
xchg
ss
jmp
xchg
lret
lock
adc
push
lock
in
and
jmp
fcomp
pop
into
jmp
fldl
mov
sbb
insb
add
pop
mov
psrlw
addl
and
add
jp
call
jg
aam
jl
test
orl
ss
repz
bound
add
mov
mov
popf
icebp
sub
add
insb
jg
push
nop
add
mov
lea
dec
or
push
ret
jb
push
jmp
xor
add
aaa
cld
jl
addb
mov
jne
cld
js
or
in
sub
sarb
adc
xor
jecxz
call
inc
lcall
shlb
hlt
adcl
pop
js
cmp
decl
test
mov
cli
jo
loopne
clc
mov
push
fdivl
mov
movsl
adc
mov
in
movl
jmp
jb
das
lock
lea
xor
mov
mov
add
mov
leave
shr
inc
jb
mov
or
stos
nop
adc
jbe
dec
aam
ljmp
xchg
jo
icebp
xor
je
aaa
ja
push
inc
icebp
pop
jbe
call
call
lock
mov
and
roll
or
jb
iret
jo
sbb
out
add
inc
imul
jne
fsubp
inc
cmp
push
pop
in
jl
cmc
mull
jno
pushf
cmp
jge
test
add
bound
jge
test
mov
pop
dec
ja
inc
pop
mov
add
sbb
add
je
sub
lret
adc
mov
sbb
xorl
push
inc
pop
xchg
dec
adc
scas
jo
mov
push
push
xor
rclb
mov
je
or
mov
call
les
icebp
adc
push
adc
in
sbb
cmc
add
cwtl
adc
mov
push
fidivs
inc
je
cld
push
mov
ficoms
out
xor
sti
push
add
mov
cmp
push
push
or
mov
mov
jg
nop
call
mov
stos
xor
mov
or
or
push
popf
add
lret
call
scas
mov
rorl
mov
cs
cmp
enter
fistpll
jo
or
mov
dec
mov
call
mov
lock
fisubrs
xor
sbb
add
mov
inc
push
pop
jp
pop
xor
push
mov
mov
xor
call
lcall
jo
mov
mov
jo
dec
out
clc
pushl
pop
loopne
mov
repnz
adc
push
leave
xor
inc
and
lea
cld
jl
sub
out
jnp
andl
push
mov
fldcw
xchg
cmp
idiv
int
mov
add
push
mov
mov
sub
mov
repnz
or
jns
jg
and
xor
xlat
jo
jecxz
xor
lock
test
sar
mov
dec
and
xchg
push
cld
ljmp
add
xor
adc
mov
push
push
andb
ja
out
dec
call
mov
push
sub
xchg
scas
in
fbstp
mov
subb
rorb
pop
push
and
sbb
add
jl
outsb
test
cmc
stos
jl
ret
mov
push
add
adcl
push
sbbl
cmc
call
mov
fucomp
ret
and
xor
jo
lock
testl
push
adc
sub
loopne
decl
ds
sub
sbb
js
sti
cmp
in
xor
out
bound
insb
xchg
adc
lea
dec
cld
mov
mov
mov
add
adc
rclb
mov
xorl
ljmp
mov
sub
mov
lods
je
ret
xor
mov
out
jg
rcrb
aad
cld
jg
add
xor
sbb
mov
cmc
mov
inc
push
sub
call
and
pop
mov
add
and
jle
sbb
and
rcrl
inc
bound
aam
add
adc
test
in
retw
outsl
add
adc
ja
incl
sub
mov
jb
or
mul
hlt
push
cltd
aad
inc
mov
out
xor
call
scas
mov
je
pop
ret
add
inc
std
lcall
mov
test
add
mov
mov
xchg
cmpsb
loopne
adc
es
outsb
xor
in
sbb
add
lods
icebp
or
and
sub
and
das
ss
test
xchg
add
push
test
movsb
sbb
sbb
add
push
sub
xchg
pop
jl
das
xchg
mov
ficomps
inc
lcall
jbe
clc
and
lret
subb
mov
das
call
or
push
add
mov
pop
pop
cli
add
fcoml
push
dec
les
sub
orb
lods
mov
or
add
pop
call
xchg
add
push
enter
ss
mov
add
and
pop
jl
lret
out
mov
test
inc
mov
insl
clc
incl
insl
adcb
adc
xchg
cmp
mov
call
jne
mov
insb
push
inc
sub
or
mov
xchg
shrb
add
cmp
push
add
mov
das
outsb
cmp
sbb
outsb
push
and
js
inc
out
lods
jmp
add
rolb
inc
pop
hlt
scas
lock
pop
inc
jp
lcall
mov
and
xor
mov
test
sarb
enter
lcall
shlb
test
jge
push
jb
adc
push
push
adc
call
decb
add
push
jbe
adc
sub
fdivr
aaa
leave
pop
test
ret
fbld
pop
jb
push
jle
mov
adc
and
mov
call
hlt
adc
pop
or
fwait
mov
push
add
pop
push
cwtl
adc
mov
mov
and
aam
mov
push
pop
jge
ror
xor
push
rolb
aaa
mov
lds
fiaddl
xor
add
addr16
out
mov
xchg
sbb
push
push
mov
jecxz
push
pop
in
roll
push
sti
shll
push
notb
sub
pop
lcall
and
adcl
fisubs
sbb
mov
xor
shl
adc
lock
mov
add
pop
fstp
cmp
fildll
inc
mov
ret
or
xchg
push
and
loopne
xchg
mov
xchg
mov
adc
out
and
or
lcall
mov
inc
jmp
fcmovnu
xlat
push
ds
mov
mov
mov
cmpsb
or
sub
in
sub
lods
test
adc
fimuls
inc
roll
dec
mov
mov
mov
and
mov
in
inc
mov
mov
divl
mov
push
cmp
in
int
xchg
mov
mov
push
mov
xor
push
adc
aad
mov
mov
or
inc
rcrl
mov
mov
mov
mov
aam
leave
jge
mov
imul
fsubrl
fiadds
push
sub
std
pop
mov
mov
dec
push
out
mov
mov
lret
lahf
aaa
fwait
in
jecxz
out
inc
aas
bound
mov
lods
mov
or
push
jg
negb
or
mov
mov
inc
cld
mov
pusha
sub
inc
dec
fistpl
fdivrp
ret
rolb
mov
clc
outsl
fisttps
xor
push
mov
xchg
idivl
loopne
or
fwait
dec
stos
inc
fmuls
dec
or
cmp
mov
mov
mov
xchg
loopne
loopne
sti
idiv
push
out
cmp
bound
jp
sbb
jecxz
mov
push
inc
vpavgb
mov
call
and
cmp
dec
fildl
mov
mov
xor
es
push
dec
sub
push
pop
cmp
dec
sub
idivl
pop
mov
mov
mov
loopne
xor
outsl
decb
adc
pop
fwait
int
inc
add
loop
ds
add
sub
inc
inc
xor
and
jb
lcall
pusha
and
add
js
add
push
loop
inc
pop
outsl
clc
pushl
les
loop
dec
mov
sub
dec
mov
inc
jg
lea
mov
mov
jecxz
pusha
add
mov
push
inc
and
cmpsl
mov
pop
mov
pop
sub
and
sbbb
mov
cld
add
bound
jmp
in
int
pop
outsb
inc
jle
or
mov
mov
dec
mov
inc
cltd
arpl
mov
or
or
mov
icebp
mov
push
adc
sbb
lcall
cltd
sbbl
add
jnp
mov
inc
mov
lea
sbb
add
xor
daa
jb
outsl
fisttps
data16
cmovns
shrw
or
cmp
lods
std
xor
test
cmp
inc
jl
push
push
mov
inc
js
js
cmp
pusha
in
mov
insb
lock
add
jo
add
ljmp
cltd
jbe
call
lods
mov
out
push
push
scas
push
push
sub
and
jae
add
test
inc
sub
xor
push
fildll
loopne
mov
xor
push
inc
enter
jo
imul
rorb
imull
loope
xchg
xchg
mov
add
mov
push
xor
jmp
mov
jmp
adc
pop
lds
shrb
test
mov
aam
nop
lock
add
mov
mov
sub
push
into
jo
mov
mov
push
sbb
insl
mov
insb
and
xor
lcall
repz
cld
cmpsb
cli
mov
mov
xor
test
add
push
push
test
fisubl
sub
and
clc
jg
lock
add
mov
add
xor
gs
push
ja
xor
jne
aaa
add
add
call
sbbl
int
js
or
cmp
or
sbb
add
decl
inc
pushf
mov
and
xor
inc
cld
mov
mov
icebp
or
dec
int3
add
mov
cmc
decl
fstpt
jb
jmp
push
inc
inc
lock
mov
mov
add
add
je
cld
cmp
jbe,pt
pushl
insb
subb
mov
lea
inc
sbb
call
add
pop
lea
xchg
add
gs
inc
jl
add
cmpsl
jo
aam
fs
lock
mov
lret
scas
call
cmc
lods
jo
xor
jmp
jno
adc
sub
sbb
loopne
inc
sti
rorl
fsubl
cli
sub
jl
add
pop
xchg
push
call
sbb
clc
mov
sbb
and
cmp
dec
jnp
or
mov
jne
loopne
hlt
mov
push
and
push
notl
stos
fdiv
mov
hlt
pop
jmp
xchg
pushf
lock
dec
dec
xor
cli
lods
mov
mov
aaa
arpl
xchg
xor
pop
mov
test
lock
sub
lock
push
jl
inc
push
pop
mov
or
sub
imulb
xor
scas
push
popf
add
sti
xor
push
xor
rolb
icebp
pop
loopne
mov
pop
xor
inc
xor
pop
sub
addb
or
inc
xor
add
push
dec
xchg
lods
add
add
fnstenv
cmpsb
jne
dec
cmpl
mov
xor
lret
xor
mov
imul
loopne
and
xchg
or
push
movhps
lods
dec
pop
cmpsl
push
fildll
test
mov
jo
in
xor
sahf
outsl
mov
lods
inc
sub
rorl
adc
mov
jmp
adc
cmpsl
pop
out
inc
ret
mov
push
inc
sarb
ss
mov
mov
mov
jl
or
lret
cmpsb
cmp
adc
pop
les
lret
cltd
mov
push
mov
xor
lds
repnz
out
jne
rep
ret
push
xchg
or
pusha
icebp
rorl
lret
lock
add
cmp
mov
or
fidivrs
aam
jge
jne
scas
loopne
adc
jne
data16
inc
add
pusha
xchg
add
scas
js
cltd
xor
aas
call
add
adc
lea
sub
data16
out
nop
sbb
xor
jne
movzwl
std
cmp
mov
push
mov
js
mov
mov
call
cmp
add
mov
pop
push
inc
jnp
mov
je
jbe
data16
je
int3
fdivr
dec
data16
pusha
jne
shr
pop
xchg
stc
sub
adc
cmp
imul
enter
push
rolb
fildll
mov
mov
dec
add
jo
stos
and
inc
rolb
fisubrs
movsb
fbld
aaa
pop
add
stos
or
mov
lret
insb
sti
in
insb
andb
mov
adc
push
or
outsl
ljmp
add
mov
pop
rolb
or
mov
data16
je
das
jmp
push
cli
sub
inc
leave
fisttpl
repz
divb
xor
mov
mov
and
js
cmpsb
pop
in
sbb
sbb
sub
and
or
xor
inc
lret
ret
into
aas
push
jg
stc
sub
push
add
int
push
mov
cs
add
cmc
pushf
leave
jb
rolb
addb
jge
jnp
mov
pop
xor
std
je
mull
add
or
adc
test
add
in
push
mov
mov
or
jo
add
mov
cli
jle
test
add
or
dec
jg
movsb
xor
xor
push
sub
pop
inc
sbb
mov
push
adc
add
cmp
add
arpl
sub
mov
outsl
insl
mov
add
xor
cmp
mov
push
test
out
add
stos
and
mov
add
rcrl
lock
inc
and
mov
mov
dec
lret
mov
jle
orb
add
es
movups
lock
push
xchg
mov
mov
xor
sbb
addb
cmp
shll
ja
nop
mov
mov
push
mov
ret
mov
shl
or
addb
outsl
xchg
adc
test
cmp
cmp
inc
sub
mov
cwtl
pushf
sub
push
test
adc
mov
lods
add
pop
adc
jmp
sub
mov
add
mov
xor
inc
subb
or
dec
inc
pop
rcrl
or
jo
and
xchg
bound
ret
jl
fidivl
inc
es
xlat
mov
push
orb
stos
std
inc
aam
mov
jo
jg
mov
add
mov
shll
stc
lea
nop
or
lock
cltd
je
jle
lods
jmp
addr16
xor
fstpl
fs
add
mov
xchg
add
adc
loopne
test
and
cld
clc
jmp
and
sub
stos
inc
inc
add
or
idivb
push
lods
jle
add
enter
repz
clc
pop
lret
lods
ja
jnp
sbb
mov
push
cld
or
mov
jg
sub
jmp
push
push
dec
push
rclb
dec
inc
ret
add
aaa
mov
or
ret
addb
lahf
add
popf
lods
add
or
lock
mov
and
and
movb
pop
int3
lock
ss
jle
pop
dec
add
mov
mov
je
into
dec
and
mov
push
cmp
inc
in
les
jl
and
je
mov
and
pop
cld
sbb
jbe
je
jg
clc
adc
mov
add
hlt
jl
adc
pop
pop
cmp
sub
fmuls
mov
aas
cmpsb
orb
repz
add
pop
sub
lcall
mov
ja
lret
sbb
dec
add
test
hlt
adcb
das
rorb
inc
and
sbb
mov
cmpsb
pop
mov
mov
in
mov
add
test
dec
cmpb
add
pop
or
lcall
xchg
adcb
fistps
mov
adcl
adc
testb
das
fsubs
into
cmpl
push
and
enter
or
mov
lods
sbb
push
push
pop
jbe
lret
add
mov
ret
scas
ret
xchg
xchg
pushf
rorb
mov
mov
shll
sub
or
sbb
das
and
addb
add
push
add
mov
pop
or
add
fmuls
inc
push
cmp
repnz
in
add
movsl
je
push
xchg
lret
cs
mov
orl
adc
cmp
cwtl
std
sub
dec
and
push
adc
lea
incl
arpl
sub
xchg
push
sub
bound
aam
jle
mov
enter
or
imul
inc
sbb
ret
sub
inc
inc
mov
mov
shll
int3
popa
mov
lock
mov
fisubl
mov
dec
jno
fisttpl
push
mov
movsb
adc
jb
add
les
jo
scas
pop
shll
filds
jl
jmp
inc
stos
pop
hlt
xchg
or
mov
inc
outsb
mov
mov
icebp
in
jb
dec
sbb
loop
add
push
adc
pause
scas
or
push
push
scas
rclb
loop
add
mov
ds
out
sub
les
xchg
shrl
sahf
mov
push
cmpsl
cmp
call
or
ror
das
adc
rorb
inc
xchg
shlb
cmp
cmp
call
cmp
and
jb
mov
mov
mov
cli
rcrb
adc
mov
add
jo
xor
out
adc
sti
ret
push
add
pop
or
xchg
push
and
rorl
test
sub
mov
gs
lock
sbb
or
test
mov
mov
ret
je
fcmove
icebp
ja
fmuls
cld
cmp
ret
movsl
sub
out
adc
mov
push
inc
mov
loope
aas
push
jnp
sbb
and
mov
jge
sub
and
add
push
jns
add
sbb
add
mov
cli
pusha
dec
inc
push
scas
cli
push
sbb
jmp
notb
push
xor
xorb
loopne
inc
jl
pusha
ljmp
popf
loopne
cmp
test
xor
lods
ljmp
test
ljmp
sbb
sti
jae
cwtl
xchg
adc
pusha
pop
loopne
out
pop
add
pop
pusha
push
mov
add
adc
xor
ret
xchg
push
lcall
mov
clc
cmpsb
cli
sbb
js
lcall
xchg
incl
test
test
lcall
insb
mov
fs
add
jp
jmp
sub
inc
cld
lea
sub
sbb
je
and
jl
add
sub
aaa
je
nop
stos
mov
dec
andb
or
lods
divb
in
push
cli
sbb
loop
adc
cltd
outsb
sbb
mov
and
test
sub
pusha
jns
lea
cmp
loopne
pop
jae
ljmp
loope
push
xor
jns
jmp
loopne
add
push
push
cs
add
ds
jge
jbe
lock
push
push
aas
mov
jne
fs
sub
inc
sbb
jb
mov
jne,pt
and
xchg
add
pop
lock
add
mov
mov
int
sub
add
loopne
jb
add
sbb
fcomip
incl
push
pop
add
loope
or
add
fildl
test
inc
push
pop
jg
cmc
stos
sbb
sub
sbb
push
add
add
jmp
push
jp
and
mov
pop
repnz
clc
inc
or
dec
sbb
xlat
daa
xor
dec
cltd
call
dec
mov
xchg
lret
repz
loope
or
push
and
mov
loopne
scas
ret
mov
ds
jg
inc
and
or
add
mov
push
mov
or
xor
movsb
xchg
jmp
or
mov
popa
aas
hlt
roll
and
jmp
dec
push
syscall
pop
cmc
pusha
or
cmp
sarl
add
sbb
mov
mov
loope
dec
jecxz
xor
xchg
into
mov
jbe
mov
lock
enter
lock
roll
cmpsb
ss
adc
call
stc
pop
or
adc
dec
pop
pop
and
mov
mov
inc
fs
xchg
dec
add
or
aaa
lea
and
cmc
jg
jno
dec
cmp
adc
or
pusha
xchg
sbb
cwtl
mov
je
adc
or
outsl
or
cmp
mov
test
add
cmp
clc
jg
inc
out
jg
pusha
fimuls
pusha
cmp
xor
adc
mov
add
push
mov
cwtl
pcmpeqd
sti
push
or
add
ljmp
mov
mov
or
mov
divb
or
mov
mov
ljmp
clc
adc
cmp
test
gs
jl
incb
decl
xchg
lock
jo
push
sub
inc
sbb
in
sar
mov
push
mov
and
negl
hlt
aaa
cld
sub
cmp
add
pop
jmp
jle
hlt
fbstp
or
pop
mov
sbb
xor
std
je
lcall
fidivs
pop
cmp
invd
test
out
jne
sbb
les
enter
lock
pop
out
mov
jecxz
ret
call
iret
out
jo
test
push
adc
ja
fisttps
jecxz
enter
cmpb
add
enter
cmp
mov
ds
out
push
sbb
or
mov
ror
js
add
sahf
ret
mov
or
push
mov
cld
sbbb
loop
cmp
daa
jmp
mov
sbb
push
mov
sbb
add
les
inc
xchg
testb
sbb
inc
in
lods
loop
into
mov
sbb
adc
xchg
jne
mov
add
nop
je
jne
add
pusha
rcrb
pop
xor
xchg
addl
jle
lock
jle
popa
lock
mov
xor
loopne
test
bound
movswl
jbe
push
jb
mov
rcll
xor
in
pop
pushl
or
sub
and
xor
js
push
mov
sarb
sub
mov
mov
icebp
inc
mov
lds
js
clc
outsl
data16
xchg
insb
aam
or
les
cmpb
adc
xor
xor
pop
lock
cmp
and
mov
jne
aad
inc
dec
mov
idivb
arpl
push
dec
push
mov
push
mov
lret
jne
in
ret
data16
xorl
cmp
inc
les
xorb
mov
xor
ret
sub
adc
mov
xchg
lea
adc
xor
test
ds
sub
add
sbb
push
push
jl
sbb
mov
aaa
sar
pop
divl
xor
ret
mov
lock
dec
mov
add
loopne
sub
xor
dec
add
sub
push
mov
inc
pop
xor
sub
add
sbbb
sete
adc
adc
mov
jo
sub
lock
or
xchg
mov
sbb
adc
clc
pop
outsb
mov
scas
cmp
sbb
fwait
pusha
fwait
outsl
clc
repnz
mov
or
repz
lock
inc
pop
mov
div
adc
or
ret
cmpb
cld
lar
mov
pop
in
icebp
or
ja
rcr
cmp
and
mov
or
xchg
hlt
pop
jmp
loop
es
mov
dec
xor
out
clc
inc
or
or
mov
push
mov
mov
push
shlb
adc
push
jmp
pop
divl
testb
mov
add
fwait
dec
shrb
incb
mov
sti
outsb
lcall
or
mov
add
jl
sbb
add
adc
mov
sbb
add
pop
adc
ss
or
dec
add
fidivs
or
outsl
aaa
sbb
or
xor
loop
pop
into
jmp
xchg
xchg
in
ret
and
sub
jo
dec
inc
pusha
fdiv
cltd
xor
mov
mov
adc
aas
and
inc
or
mov
jo
cmpl
inc
mov
pushf
lods
shrb
mov
clc
notb
fwait
add
and
in
pop
mov
mov
adc
adc
jg
nop
std
ja
xor
inc
icebp
pop
orb
inc
cld
mov
add
and
test
outsl
jo
cmp
jnp
xor
dec
xor
imul
add
lock
jl
adc
aam
and
lcall
rolb
fdivrs
stos
aam
push
mov
cmp
push
sub
testb
add
or
or
xor
or
jg
shl
ret
xor
call
xor
ret
pop
add
cmp
xor
pop
jg
loop
addb
jne
add
mov
enter
mov
mov
jp
xor
adc
add
dec
adc
sub
add
mov
jg
lds
inc
inc
fs
jb
test
nop
jo
mov
int3
test
or
push
xchg
add
add
xor
fbld
dec
xor
mov
icebp
fwait
lock
adc
pop
jne
js
orl
xchg
cmp
add
mov
dec
roll
pop
mov
or
fidivl
xor
mov
mov
into
into
pop
mov
sti
push
jg
jno
stos
shll
jo
adc
nop
add
nop
cmp
inc
mov
mov
mov
push
hlt
jl
movl
or
add
loope
mov
filds
mov
push
inc
mov
xor
jo
xor
lock
mov
add
sub
pop
sarb
add
cmp
jl
adcl
movsb
and
mov
inc
test
popa
add
je
mov
je
or
sbb
sbb
ret
in
mov
test
pop
push
xor
dec
ja
clc
mov
leave
and
xchg
out
lea
test
lret
je
mov
outsl
xchg
adc
pop
pop
cwtl
addr16
adc
push
stos
in
jl
test
inc
lea
jl
and
inc
jb
ret
das
fdiv
pop
lock
jo
int3
or
dec
xor
add
pushl
mov
flds
icebp
test
jo
mov
sub
xor
or
rolb
ret
enter
add
cld
jmp
push
sbbl
test
mov
add
mov
lret
jno
cmp
mov
xor
enter
adc
inc
shl
jo
rcll
mov
testl
xor
and
dec
adc
xor
shr
fadds
les
test
mov
jge
std
cmp
add
pop
inc
and
out
adc
fwait
and
xor
cmp
lea
mov
cmp
add
ss
sahf
add
lcall
mov
xor
or
dec
dec
pop
stos
jbe
jb
add
bound
data16
je,pt
mov
mov
movsb
pop
test
jb
mov
pushf
add
test
mov
jmp
pusha
outsl
add
into
mov
leave
cmp
lods
or
jo
push
sub
pop
dec
lock
add
sbb
lea
push
add
ljmp
mov
call
incl
les
pop
add
add
cs
inc
xor
xchg
mov
sbb
dec
xor
adc
dec
or
roll
sub
pop
bound
push
mov
pop
mov
aaa
mov
sub
int
ret
xchg
adcb
add
jbe
xchg
mov
cmpl
fnsave
mov
dec
sahf
lcall
jg
mov
mov
in
pop
pop
hlt
jne
add
sbb
cmp
and
sbb
xchg
sar
mov
xor
fmuls
mov
xorb
rcrl
cld
add
cld
nop
mov
add
jg
enter
std
les
in
sbb
adc
adc
xor
js
jmp
pushl
push
push
cmp
andl
and
popa
stc
movsl
add
andl
mov
andl
in
push
pop
adc
xlat
adc
jg
popa
fsubr
or
jge
shll
addl
rolb
inc
into
add
adc
js
ljmp
fildl
bound
sbb
push
jbe
pop
dec
orl
push
and
fidivs
sbb
shr
cmp
lock
pop
inc
fildl
xchg
subb
push
push
rcr
xor
sbb
jo
insl
or
dec
mov
sbb
sbb
or
sarb
sub
lahf
test
push
aas
in
and
inc
sbb
lods
xor
test
shrb
outsl
outsl
mov
cmp
or
push
rorb
pop
inc
lea
jae
fisubl
add
mov
hlt
or
pop
add
push
mov
ret
add
or
je
push
ret
cmp
int3
add
xor
and
arpl
cwtl
mov
mov
shrb
xor
mov
adc
shrl
lds
lock
jmp
out
pop
mov
cld
ja
mov
or
add
dec
add
mov
mov
rolb
adc
movsb
xchg
jecxz
sub
hlt
in
rcrb
incb
dec
fiadds
add
stos
call
inc
add
add
std
and
inc
add
outsl
adc
or
or
inc
cmp
test
cli
adc
test
icebp
or
mov
cld
aad
shr
scas
les
pop
cli
pushf
mov
outsw
lretw
lret
jge
rclb
xor
sti
add
in
orps
je
add
inc
add
jno
mov
sub
inc
fimuls
push
fsubrs
sub
adc
pusha
pop
lock
adc
mov
notb
je
add
test
loopne
and
and
call
in
add
lcall
aad
pop
inc
cmp
add
loopne
mov
scas
add
jmp
push
test
inc
xchg
andb
stc
jl
ret
jno
adc
test
jmp
shl
or
repz
and
xor
mov
movsb
cs
ljmp
imul
in
outsl
mov
or
jmp
loopne
dec
loopne
loopne
or
inc
int
mov
subl
aaa
cmc
hlt
enter
popa
insl
push
jecxz
push
add
mov
lahf
test
add
mov
cmpb
jns
cld
adc
test
in
ljmp
arpl
and
pusha
pop
inc
jmp
jecxz
jmp
popa
loopne
dec
popa
xchg
jecxz
cmp
loop
dec
add
push
fdivl
mov
lea
loopne
ret
mov
loopne
loopne
and
faddl
sbb
fsts
mov
mov
jno
adc
dec
pusha
add
mov
cmp
add
test
mov
pop
cs
sub
add
jmp
dec
ret
mov
rcl
rorl
mov
insb
jl
inc
inc
cmc
fisubrl
dec
lock
stos
xlat
fcomp
nop
jecxz
nop
mov
call
loope
push
repz
push
fimull
cmp
int3
xor
inc
push
mov
push
out
mov
repz
dec
dec
adc
stos
and
clc
jg
mov
fidivs
insb
add
rol
fimull
xchg
adc
fsubr
lret
gs
pusha
scas
clc
or
sub
mov
loop
pop
add
add
inc
jl
push
incl
mov
add
adc
or
cli
test
push
jnp
insb
repz
sbb
pusha
loopne
bound
xchg
jle
or
mov
pusha
mov
jae
cmpb
mov
inc
jmp
or
adc
jl
inc
or
pusha
pushf
and
jle
in
inc
dec
cmp
loop
and
out
loopne
jle
mov
lds
add
int
push
and
jmp
clc
loopne
add
mov
aaa
add
or
pop
test
pop
or
aad
pusha
sti
pop
cld
loopne
pusha
jmp
add
adc
fildll
bound
mov
push
pushf
insb
or
incl
mov
dec
or
or
xchg
pusha
aas
loope
cmp
xor
loopne
or
push
or
add
in
dec
andb
push
sbb
push
ljmp
xor
testb
insb
push
fnsave
push
ja
shl
sbb
fiaddl
jnp
rcr
aaa
cmp
add
sahf
stos
mov
inc
cld
jg
jb
jg
jl
popa
aaa
jg
or
cmp
jg,pn
dec
xorb
jg
adc
jp
icebp
mov
lock
push
jle
add
xor
push
jmp
cmp
jmp
mov
jb
add
data16
xor
mov
or
mov
mov
jmp
lock
jmp
jle
fldenv
xor
in
sub
xchg
xor
cs
mov
xor
vmread
adc
add
jl
xchg
xchg
push
inc
cmp
clc
std
out
clc
jg
js
xchg
cmp
add
sbb
mov
jbe
mov
lea
jp
pop
add
mov
jno
sbb
pop
shl
push
ja
mov
cmp
or
pop
jg
push
add
add
es
mov
push
lock
sub
enter
mov
sub
fs
jnp
sti
divb
push
pushl
ret
xor
or
sub
jnp
sbb
rolb
adc
jnp
out
mov
out
mov
push
push
fmuls
mov
jo
das
clc
das
je
mov
imul
cmp
jecxz
mov
push
or
ljmp
sar
repz
outsb
jo
xorl
pusha
xor
xor
mov
mov
inc
cltd
mov
xor
sub
adc
jno
inc
in
jl
mov
outsl
push
je
xor
jl
xor
jo
dec
add
mov
cmpsb
mov
pop
mov
pop
lock
stos
jle
insb
lock
mov
push
es
jo
mov
test
hlt
incb
push
mov
add
outsb
pop
or
jns
cwtl
or
fisttps
add
mov
or
mov
aam
out
in
outsl
ds
xor
mov
xor
xchg
xor
or
data16
push
xorl
cmp
jle
adc
sbb
or
adcb
shlb
jne
pop
inc
mov
push
xor
sub
test
adc
mov
jne
or
push
dec
dec
adc
push
rorl
mov
xor
clc
idiv
adc
gs
fldt
arpl
adc
jmp
push
adc
xor
jo
adc
mov
clc
xor
push
ljmp
and
xor
movsb
mov
in
stos
gs
cmp
inc
push
mov
in
fcmovu
fwait
mov
popa
jbe
out
ljmp
test
sub
lods
sahf
pop
sub
push
adc
bound
inc
or
popf
add
loopne
jb
or
adc
xor
hlt
movb
je
cmpsb
jmp
out
shrb
lret
add
cmp
lock
cmp
mov
or
add
jl
and
add
xor
das
mov
pop
clc
pushl
mov
nop
call
xchg
inc
adc
xlat
je,pn
hlt
lea
icebp
lea
jno
test
rclb
pusha
fs
cli
mov
fs
cmpsl
jg
cmp
movsb
cmpl
lock
sub
call
inc
mov
mov
lock
ret
dec
add
loopne
icebp
jne
mov
add
jmp
mov
je
push
adc
scas
push
sub
scas
push
xchg
call
loopne
inc
jp
or
add
call
push
xbegin
push
push
jo
xchg
jmp
test
xor
mov
cld
push
push
das
subb
lea
jne
mov
push
sahf
xor
push
mov
cmpb
pop
push
mov
aaa
adc
inc
add
add
call
inc
mov
loop
adc
or
inc
mov
mov
or
inc
jo
clc
inc
idiv
mov
add
mov
test
inc
mov
jns
inc
jge
sarb
add
mov
cwtl
and
call
cld
xlat
jno
jno
jb
addl
lock
push
mov
push
lcall
jb
xchg
fisttps
les
mov
ss
mov
fcomip
adc
adc
xor
cmp
xor
add
or
jecxz
cld
or
jmp
pop
push
incb
jns
cmp
mov
clc
jno
cld
jbe
and
lods
bound
imulb
inc
in
pop
lock
inc
jmp
add
inc
and
icebp
scas
fcomip
sbb
inc
sbb
or
ljmp
or
push
repz
cmc
and
add
jle
and
sbb
push
mov
lock
and
adc
call
adc
add
loope
fdivp
stos
mov
loopne
inc
mov
in
mov
ljmp
sbb
sbb
icebp
push
ror
mov
fwait
xor
add
outsl
ficomps
push
test
push
movsb
jmp
xor
cmp
mov
mov
outsl
les
mov
mov
sub
sti
mov
scas
cmp
jno
and
call
xchg
movsb
xor
or
mov
movl
mov
add
adc
cwtl
pop
add
je
adc
jl
add
inc
cld
xor
lret
in
add
call
push
sbb
cmp
int3
mov
cmp
push
adc
js
add
push
and
stos
mov
inc
jbe
decl
std
lock
adc
or
jbe
adc
dec
adc
sub
jbe
mov
or
sbb
mov
xchg
xchg
rcrb
and
xchg
push
dec
jo
cld
addb
addb
xor
lcall
and
orl
jmp
push
loop
into
jne
cmp
pop
je
jo
jle
lock
mov
sbb
add
mov
mov
insb
fcomps
and
loop
mov
add
add
movsb
mov
lock
test
call
add
cld
shll
push
inc
cmp
fidivrs
hlt
jmp
mov
jmp
dec
add
inc
add
sbb
add
enter
xchg
sbbl
inc
or
mov
out
add
lods
pop
cmp
jae
ret
scas
push
test
jle
fsubr
jecxz
enter
adc
mov
and
push
jbe
cmp
clc
test
cmpl
mov
or
fsubr
adcl
in
in
arpl
nop
cmp
in
stos
add
add
mov
xor
jb
ret
outsl
add
test
dec
pop
push
adcb
int3
fcmovnu
rcrb
and
ret
cld
subb
dec
cld
mov
rorb
ret
shrb
rolb
jle
mov
shll
sbb
bound
mov
stos
push
loope
adc
enter
and
mov
push
mov
icebp
mov
add
pop
jne
fcoml
incb
shlb
adc
out
mov
push
dec
out
aaa
and
lods
nop
fdivrp
fadd
push
mov
ret
add
jae
rorl
clc
mov
hlt
out
sbb
stos
adc
loopne
dec
push
sub
push
lock
inc
xchg
jmp
repnz
movsb
mov
sub
inc
jo
into
addb
jmp
xchg
repnz
add
pop
shlb
pushf
lock
cs
push
dec
fimull
and
movb
adc
cltd
push
aas
add
push
cwtl
sbb
xlat
and
xor
dec
adc
or
jmp
push
call
add
rcrl
rcr
aaa
jge
dec
shlb
add
mov
arpl
shll
decl
jp
adc
inc
pop
jl
data16
inc
in
jl
pop
jo
rolb
sbb
jb
in
mov
push
mov
inc
pop
or
pop
xor
inc
mov
ljmp
cmp
mov
jno
sub
and
adc
adc
outsl
data16
outsl
ljmp
jmp
sub
js
cld
mov
jmp
mov
jl
or
test
push
out
in
xor
inc
aad
incb
mov
clc
inc
pop
clc
pusha
andb
enter
push
clc
mov
jmp
in
jnp
add
xchg
rorb
and
xor
incl
add
shr
mov
mov
ljmp
inc
sub
dec
push
xorb
flds
bound
shr
ror
add
add
mov
test
mov
add
fmuls
mov
test
mov
mov
rolb
pop
mov
jbe
mov
aas
call
adc
sbbb
sbb
push
decl
loope
sbb
andb
daa
and
mov
es
cmpsb
cmc
mov
adc
sub
add
in
inc
inc
adcl
cmpsb
jnp
mov
sbb
cli
jmp
fisubl
lock
mov
add
sbb
push
adc
loopne
adc
ljmp
inc
and
adc
in
xchg
popa
add
fwait
loopne
popa
sbb
add
add
and
inc
push
fsubs
loopne
add
out
push
loop
scas
jmp
jl
or
lea
add
fidivl
mov
jp
loopne
jp
push
fsubs
mov
mov
sbb
aam
shr
dec
fdivr
jmp
xor
jecxz
cmp
pusha
pop
popa
cmp
xor
loopne
xchg
lock
cmp
and
jecxz
popa
cmpsb
loopne
xchg
add
mov
sub
sub
shr
out
popa
jb
imul
loop
sub
and
mov
orl
adc
aas
fs
enter
sub
xchg
js
test
stos
fs
jmp
aaa
inc
add
push
lcall
loope
jecxz
lahf
loop
add
mov
xor
or
call
and
or
or
mov
mov
subb
rorb
inc
jp
lret
das
add
xchg
sbb
or
fnsave
loop
push
inc
add
mov
pusha
lock
pusha
push
inc
lock
mov
cmp
ja
fisttpl
fsubs
roll
mov
subb
jns
clc
push
add
inc
je
cmp
jp
test
mov
adc
mov
pusha
fiadds
lods
add
cmp
subb
jmp
add
cmp
pop
sbb
lods
pop
and
loopne
cwtl
jecxz
cmp
ret
jmp
push
stos
jbe
rcr
nop
and
enter
mov
add
mov
pop
or
adc
orb
sub
add
xchg
scas
cmp
or
or
or
cmp
or
lret
mulb
mov
adc
mov
inc
testb
push
pop
sub
sbb
inc
pop
or
pushl
aas
pop
lock
xor
sub
test
jge
jmp
sbb
push
clc
mov
rorb
aam
das
cmpsb
xor
mov
sbb
add
mov
push
aaa
or
push
outsl
add
push
push
dec
adc
pop
mov
aad
jo
fidivl
cmp
xor
push
mov
xor
or
adc
add
sub
add
add
in
xor
jns
push
popa
push
push
mov
xor
add
lret
push
add
xor
popa
mov
cld
fidivrl
fwait
push
icebp
cs
inc
pop
loop
cltd
std
aaa
in
imul
mov
ja
in
outsl
imul
xor
int
push
data16
xlat
js
aaa
subl
sbb
sbb
insb
aas
add
adc
dec
jb
xor
jmpw
cmpsb
pusha
xor
pushl
add
inc
mov
and
sub
jp
dec
loop
xchg
dec
dec
cltd
or
fildll
or
add
dec
mov
sar
or
dec
adc
adc
push
call
xchg
movb
sbb
sbb
push
pop
and
fcmovnu
mov
and
and
shlb
xlat
add
push
or
sub
sub
and
dec
jl
xor
jl
outsl
incl
xor
out
ss
cmp
les
cmp
enter
inc
inc
inc
mov
inc
dec
nop
adc
add
mov
ds
clc
and
push
lock
sbb
nop
cwtl
inc
push
cwtl
sbb
addb
fidivl
add
int
nop
inc
pop
cs
ljmp
xchg
fmull
mov
roll
inc
aas
sarb
mov
mov
jbe
roll
push
mov
sbb
cmp
inc
push
mov
cmp
dec
and
je
mov
pop
sti
fildll
cmp
inc
push
or
hlt
decl
lock
daa
add
cwtl
sub
ss
outsl
adc
dec
mov
les
in
mov
mov
or
outsl
pop
test
je
xchg
std
jmp
and
add
jg
sbb
loop
and
jne
dec
sbb
jecxz
xchg
push
adc
push
cmpsl
pushl
mov
inc
out
mov
dec
and
mov
dec
nop
aam
in
and
and
add
cmc
fwait
xchg
sub
xor
orb
cli
mov
jle
push
mov
jmp
clc
dec
inc
addl
push
mov
sbb
popf
clc
hlt
jnp
fdivrs
lods
pop
inc
sub
add
les
add
xor
rorb
sbb
lock
inc
and
pushf
rcrb
mov
shrl
add
sbb
or
test
jmp
enter
add
cld
shll
mov
bound
stos
mov
repz
test
add
jbe
mov
pop
lods
lods
add
sbb
popl
or
pop
or
adc
mov
test
aad
test
call
insb
pop
add
into
push
out
adc
push
adc
mov
fldcw
mov
ret
dec
or
jno
pusha
add
inc
or
icebp
fwait
add
call
js
test
mov
pop
mov
sete
or
outsl
and
inc
xor
pushl
mov
xor
and
mov
stos
inc
add
or
jge
es
call
push
je
push
jmp
xchg
lock
mov
jmp
lock
rorl
mov
mov
jge
mov
add
fnstenv
mov
cli
mov
js
pusha
mulb
je,pt
xchg
push
pop
cmp
sbb
iret
or
fildl
je
add
push
movsb
mov
ljmp
std
xor
adc
mov
clc
fildl
cmp
je
pop
aad
cld
stc
imull
inc
cmp
add
mov
dec
push
ficomps
ret
push
mov
push
adc
stc
mov
add
or
and
mov
ja
dec
xor
je
idivb
mov
mov
jmp
mov
sbb
loopne
test
sbb
add
cmpsb
add
stc
jo
adc
add
inc
enter
je
sbb
pop
or
cli
idiv
enter
jns
imul
iret
ds
lock
push
inc
ljmp
sub
add
pop
jmp
ret
sub
movl
fs
mov
sbb
adc
mov
dec
lret
lock
orl
les
or
pop
into
mov
je
incl
push
adc
mov
sbb
or
adc
fs
mov
mov
shll
jb
mov
cli
inc
push
xor
roll
inc
loopne
add
lcall
or
cmp
jae
testb
cmp
inc
stos
daa
lock
or
and
lcall
loopne
mov
repnz
dec
and
xchg
testb
inc
or
or
push
inc
push
xor
push
jmp
cmp
and
cs
fisubs
cld
xchg
test
pop
adc
andl
icebp
and
fisubs
scas
fdivr
cmp
in
je
jo
rolb
stc
mov
iret
mov
jmp
push
pop
sbb
jge
inc
pop
dec
mov
dec
mov
add
and
loopne
push
hlt
pushl
mov
adc
lea
and
cmpsb
and
pop
shl
mov
jo
xor
adc
sbb
mov
adc
cld
decl
mov
adc
jl
xor
push
add
or
into
mov
mov
cld
xlat
jbe
or
inc
mov
test
pop
push
std
divb
jo,pn
jl
add
xor
ds
xor
cmp
jno
sub
push
std
in
aaa
and
push
jo
cmp
les
fwait
add
mov
pop
or
adc
scas
jno
and
jo
sub
jge
bound
pop
dec
iret
xor
add
jmp
lcall
fcmovb
daa
les
aaa
ficoms
jge
ja
xchg
cmp
add
or
mov
lret
or
sbb
mov
cwtl
and
pop
jb
push
clc
test
mov
mov
sub
cmp
loopne
push
cmp
mov
push
mov
testb
dec
or
lcall
or
movsb
lcall
outsl
jo
add
or
stos
inc
and
outsb
sbb
cs
jge
push
in
jne
cmpsb
mov
cmp
pop
pop
lock
adcb
mov
adc
pop
cmp
inc
add
jbe
inc
les
sbb
mov
inc
add
and
mov
sbb
decl
add
dec
or
push
sbb
jb
jmp
dec
add
add
inc
mov
test
mov
ret
cld
push
add
add
sbb
jecxz
add
add
mov
cmc
adc
push
call
adc
xchg
fsubrl
test
in
popf
je
cmp
sbb
movsb
out
cmp
sbbl
je
jle
mov
subl
pop
in
pop
jmp
in
cmp
add
incl
sub
movb
cli
push
mov
es
mov
daa
pop
and
add
shrb
ficoms
addl
and
jne
fdiv
ja
sbbb
adc
mov
mov
mov
adcb
jo
lcall
sbb
cmp
push
jg
cmp
xor
pop
add
add
pop
xor
and
pop
je
inc
xorb
sub
inc
cmp
jo
rclb
sti
inc
add
pop
add
mov
ss
jmp
andb
cld
filds
je
lahf
cmp
jl
fcoml
mov
push
adc
push
dec
push
ljmp
sub
xchg
test
jmp
mov
sbb
mov
sub
mov
cmp
cwtl
cmc
call
lods
jg
adc
dec
push
add
pop
mov
mov
cmp
mov
pop
loopne
andl
dec
clc
shlb
and
sbb
stos
add
inc
sbb
xor
in
movb
mov
incb
shlb
sub
stos
xor
adc
sbb
xchg
add
add
jmp
add
pushf
add
loopne
xchg
or
xchg
push
nop
sub
xor
adc
jl
push
add
cmpsl
sub
call
stos
add
sub
push
outsw
adc
les
or
add
lea
ficoml
inc
lock
mov
shrl
cld
pop
outsl
add
jmp
sti
adc
xchg
sarb
push
xchg
xor
pop
pop
inc
inc
jmp
cmpb
adc
mov
jmp
sbb
cs
pusha
inc
pusha
inc
fsubrs
mov
outsb
sahf
mov
dec
or
aaa
cwtl
mov
stc
and
pop
mov
shll
jg
cmpb
mov
push
movb
push
add
add
adc
addb
dec
inc
sbb
xor
jg
fcomi
add
jmp
push
dec
sbb
push
jmp
movl
loop
add
testl
add
or
cli
in
mov
push
sbb
ret
push
std
sub
xchg
lcall
cmpsl
push
shlb
rolb
add
xchg
cmpsb
imul
dec
and
add
cmp
sub
fwait
insl
xchg
icebp
lods
outsb
add
inc
add
fdivrl
xchg
notl
push
icebp
xor
pop
mov
jp
pusha
add
push
das
dec
lods
adc
xchg
incl
add
shr
adc
call
loopne
mov
aas
xchg
pusha
and
fimull
mov
sbb
pop
ljmp
xchg
cli
cmp
movl
cli
mov
adc
stos
sub
push
data16
or
test
pop
add
out
cli
push
lcall
or
loopne
sub
pop
or
xchg
add
add
fstp
inc
mov
add
add
xchg
fisubrl
push
aam
add
xor
bound
or
and
jo
cld
fs
xor
cmp
je
adc
sub
int3
sarb
scas
add
add
jl
shll
ror
loop
cmp
pop
sbb
mov
mov
mov
fstps
out
or
jl
in
adc
inc
pusha
pop
pop
nop
loopne
inc
pusha
test
clc
mov
hlt
and
fmuls
pusha
and
sub
test
mov
push
shll
mov
stos
cmpsb
push
call
adc
push
push
push
call
js
or
add
push
test
push
jb
mov
clc
jne
mov
arpl
mov
pushl
pushl
lcall
push
cmp
xor
push
arpl
out
inc
push
cmp
mov
add
xor
add
imul
push
pusha
add
addr16
arpl
and
push
or
xchg
or
mov
lods
pusha
or
cmp
or
arpl
dec
xor
pop
loope
adc
andb
sub
roll
aam
pop
repnz
push
mov
and
adc
daa
dec
inc
je
push
jl
js
add
mov
cmpb
call
mov
add
adc
push
adc
mov
adc
sbb
aad
mov
adc
and
loopne
and
dec
loope
nop
add
pop
aam
adc
push
add
mov
cmpl
add
or
add
bound
test
cmp
lea
js
mov
mov
andb
incb
sbb
xor
es
cld
adc
loopne
mov
iret
add
test
push
inc
ret
sbb
cmpsb
cs
nop
jle
push
mov
cmp
jle
or
testb
sbb
xchg
add
faddl
imul
push
jl
sub
inc
mov
je
mov
push
mov
mov
aam
add
cmp
fdivl
insb
mov
in
movsb
sbb
mov
dec
cmp
ret
xchg
jmp
rorb
mov
outsl
call
add
fs
push
push
sub
call
push
cmpb
xchg
xchg
loopne
stos
jbe
dec
loope
push
and
xchg
icebp
lea
inc
daa
sti
push
jmp
lcall
push
add
decl
loop
adc
inc
aam
add
popf
loope
pop
add
adc
or
aam
and
outsl
dec
or
sub
cs
push
or
ljmp
mov
xchg
sbb
fimull
sub
jg
add
jmp
divb
nop
or
pushl
pop
sbb
pop
lock
leave
mov
mov
sub
in
enter
pop
sub
bound
jo
rol
pop
mov
and
leave
or
inc
mov
call
or
or
or
mov
loopne
je
or
pop
into
lea
adc
imul
shll
cmpb
scas
call
insl
test
shl
jg
cmp
call
mov
or
lock
das
xor
push
je
lock
adc
fidivs
test
notb
push
movb
lock
inc
and
inc
add
bound
adc
stos
lcall
lea
push
or
xor
push
cld
hlt
ror
stos
mov
push
mov
decl
adc
pop
scas
test
je
mov
orb
mov
es
or
jecxz
ja
fmull
sub
mov
ja
lock
jb
sbbb
and
jg
rcll
pop
add
xor
fdivl
adc
je
or
and
inc
and
outsb
andb
fsubl
sbb
gs
imul
pop
lock
mov
and
mov
jne
jne
sbb
icebp
sbb
dec
call
cmp
dec
aad
push
mov
sub
cld
loopne
rolb
ret
push
mov
add
inc
adc
mov
sti
cmpsb
js
sbb
cmpsb
push
inc
inc
inc
push
mov
mov
add
mov
push
aaa
xor
xchg
and
scas
cmpb
lea
out
push
into
push
sbb
arpl
jp
sub
clc
mov
mov
sbb
jne
lods
push
push
add
jo
addl
adc
push
cmp
adc
call
aam
xor
lock
testb
lcall
js
inc
call
push
mov
icebp
pusha
call
jg
in
js
lock
add
dec
jo
cmp
mov
pop
icebp
push
add
mov
test
and
mov
add
jg
fs
in
jo
mov
test
mov
lock
je
push
xor
fcomip
cmpsb
pop
sbb
adc
pop
pop
xor
cltd
mov
sub
inc
out
sub
ret
punpckhdq
pushl
in
mov
add
jmp
out
clc
out
add
sub
jp
pop
clc
and
jo
mov
push
shlb
jo
mov
mov
sub
ljmp
push
xchg
jo
lea
repnz
call
mov
xchg
sbb
push
adc
jnp
imul
sbb
xor
ret
inc
and
push
jo
dec
add
mov
std
icebp
mov
adc
add
pop
iret
adc
or
rcrb
jecxz
mov
jp
xchg
clc
inc
mov
or
push
out
inc
lock
adc
inc
inc
ret
decl
cwtl
push
icebp
push
dec
mov
aam
xchg
shrb
xchg
test
lock
inc
xchg
test
sbb
xor
lods
fildll
jo
mov
adc
inc
mov
rorb
pop
jp
imul
and
or
cmp
fstpt
jo
fdivrp
xor
pop
int3
dec
jmp
jo
push
push
push
and
push
mov
mov
adc
xor
out
clc
outsl
je
sbbl
or
push
fs
mov
lods
mov
fsubl
push
push
add
xor
adc
sldt
cld
incb
pushl
icebp
jb
add
repnz
fisttpl
dec
push
add
xor
mov
hlt
push
into
pop
scas
idiv
adc
mov
lods
xor
loope
stos
insb
sub
xor
imul
xor
add
mov
or
fbld
aas
fcmovnu
mov
push
aaa
jo
xor
movsb
icebp
push
lock
and
push
xor
daa
add
mov
ret
mov
xor
int3
inc
inc
fwait
cmp
in
adc
add
std
jg
insl
or
stc
mov
call
and
push
push
or
sbb
dec
push
les
test
pop
pop
in
pop
hlt
andl
cmc
add
push
jbe
popf
sub
repnz
cld
call
jne
lods
jae
push
jmp
push
pusha
test
fists
stos
aam
call
hlt
mov
ret
mov
jg
addl
and
scas
pop
push
xor
jo
jg
dec
jb
push
push
cmp
mov
icebp
add
add
jo
popa
mov
dec
scas
ljmp
jne
dec
jo
jne
ljmp
in
adc
cs
mov
call
loopne
orb
imul
aad
sub
pop
jb
fs
pop
jg
outsl
cli
dec
and
mov
jo
mov
mov
lea
inc
idiv
add
les
jo
sub
xor
ret
lret
pop
icebp
mov
or
pop
mov
push
dec
sbb
mov
mov
pop
xchg
lods
or
loop
or
jne
cmpb
test
cmp
call
adc
aaa
mov
jg
inc
pop
jo
jge
mov
dec
pop
jmp
jae
inc
int3
lock
sbb
lcall
push
jo
decl
lock
cld
mov
jo
sub
mov
iret
adc
adc
stos
pop
les
out
mov
and
push
jmp
mov
pop
lds
jo
mov
or
cmp
int3
inc
mov
xchg
push
jo
push
mov
call
shlb
out
mov
pop
leave
add
icebp
cmp
add
cmc
push
pop
sub
cwtl
mov
adc
je
add
test
push
sar
stos
or
je,pt
data16
ffree
loopne
mov
imul
push
pusha
lock
call
mov
shrb
add
mov
xor
mov
push
jg
jmp
dec
add
lock
cmp
dec
cld
call
pop
icebp
pop
push
cld
movb
cmp
push
mov
jbe
jg
mov
sub
push
jae
dec
add
adc
sub
stos
test
jl
lea
or
add
xchg
inc
xor
push
push
sbb
pop
push
call
fsubr
dec
je
and
enter
add
add
inc
adc
orb
mov
add
or
push
push
and
push
xchg
inc
jle
add
mov
jo
mov
inc
test
add
mov
enter
fisttpl
push
push
push
xor
fcoms
add
sbb
incl
es
add
pop
inc
mov
pushf
and
mov
add
clc
sub
adc
or
mov
ja
push
xchg
test
call
jmp
aam
dec
inc
dec
cli
lcall
jl
fdivr
in
inc
push
xchg
call
pop
jle
pop
add
hlt
mov
outsb
push
aam
lds
lods
add
adcl
push
add
cwtl
or
or
cmp
jbe
aas
pop
fld1
jl
in
or
dec
cmpb
clc
sbb
insb
push
lea
mov
cs
stos
sbbb
mov
insl
push
add
inc
jmp
and
mov
andb
or
and
or
pop
loopne
mov
add
fldt
out
sub
add
imul
sub
mov
jbe
mov
sti
jmp
push
mov
sub
push
xor
pop
and
pop
mov
pushf
cmp
or
sbb
clc
stos
icebp
lock
pop
outsl
push
add
sbbb
out
mov
mov
add
je
inc
int
testl
outsb
xchg
jbe
orb
mov
adcl
push
adc
add
inc
je
call
and
jg
mov
je
jmp
lcall
pop
divl
push
ret
adc
aas
xor
push
out
or
hlt
sbb
outsb
push
imul
cmpsb
cli
cld
xor
cld
xchg
jp
dec
cld
pop
adc
rclb
xor
ds
fcmovu
and
fistps
mov
jp
cmpb
xor
sbb
sarb
push
rorb
or
outsb
mov
jmp
ljmp
pop
rolb
add
mov
sub
shlb
cmp
jl
mov
lock
hlt
xor
loop
outsl
xlat
lods
pop
aam
sbb
adc
pop
pop
gs
or
dec
cmp
ret
add
aas
xchg
and
sub
mov
int3
call
push
push
in
fs
stos
in
and
fisttpl
dec
repz
pushf
push
jb
mov
nop
mov
jo
sbb
call
pop
lock
arpl
xchg
and
push
pushf
rorl
call
or
push
sub
ret
adc
inc
sbb
aad
out
jo
lea
add
cmc
ret
push
inc
push
jns
stos
pushl
push
movb
add
or
shll
lret
pop
cwtl
dec
push
loope
jp
sbb
jne
add
sbb
dec
les
and
shlb
cmc
mov
sbb
rorb
stos
add
mov
xchg
add
or
mov
out
nop
cmp
test
mov
sbb
jbe
pop
pop
xchg
add
inc
je
cmp
mov
pushf
add
pop
roll
jl
loopne
mov
jg
shll
inc
ret
add
sbb
mov
pop
jbe
test
mov
mov
les
int
push
lock
mulb
cli
bound
je
xchg
mov
nop
adc
or
adc
mov
fcoms
sub
sub
movsb
push
push
pop
pusha
insl
subb
lods
shl
push
scas
repnz
test
adc
adc
pop
mov
lods
cli
mov
outsl
add
jmp
subb
adc
outsb
xor
push
sar
or
inc
pop
bound
mov
adc
pushl
fnsave
mov
sub
xor
cmp
mov
movsb
shlb
movsb
add
les
push
dec
call
mov
pusha
or
rcrb
push
mov
adc
jnp
or
mov
adc
pop
mov
push
sub
sub
add
xlat
mov
jp
incl
addb
push
filds
insb
adc
insl
pop
lock
xchg
stos
ss
out
xchg
pop
cmpb
cmpsb
or
fdivrl
pop
sub
mov
aad
outsb
cwtl
add
fsubs
je
in
decl
in
sub
pop
add
scas
loopne
jecxz
xchg
add
jecxz
or
gs
int3
push
and
js
cld
jbe
sub
incl
loopne
js
cmpl
in
or
jecxz
fadds
jmp
mov
dec
push
lcall
adc
adc
test
sub
pop
dec
mov
xchg
pusha
pop
call
sub
adc
cmp
in
pusha
das
test
mov
xorb
adc
or
pop
jae
mov
cmp
push
xchg
imul
or
and
mov
adc
fucomi
bound
jle
aaa
lods
cwtl
dec
push
pop
pusha
mov
mov
sbb
pop
outsl
and
mov
arpl
push
push
cld
outsb
push
les
inc
mov
push
push
fwait
pusha
pop
test
mov
xchg
push
in
or
mov
fs
add
loopne
je
popa
shlb
pop
fwait
sub
fs
or
shrb
pop
je
inc
mov
pop
call
jl
icebp
mov
pop
ds
pusha
add
mov
loopne
insb
sbb
mov
jo
decl
or
adc
call
fsubrs
inc
in
adc
bound
pop
rcrb
add
sbb
data16
adc
les
pusha
add
js
mov
adc
cmc
mov
add
addb
clc
sbb
sub
mov
jmp
push
or
aaa
sar
jl
pop
je
dec
ss
add
filds
mov
pop
pusha
lds
add
pop
mov
test
testl
mov
jl
push
jb
shlb
jg
lock
cmp
and
fcomi
rcrb
hlt
push
nop
clc
sti
mov
je
cli
mov
cmp
add
push
mov
or
jbe
jecxz
and
add
nop
push
cmp
hlt
add
jmp
dec
mov
adc
add
cmp
pushf
and
ret
adc
xchg
scas
pop
and
outsl
repnz
icebp
jge
adc
pusha
jnp
sti
sub
cmp
sbb
shlb
xor
push
movb
cli
enter
adc
mov
xchg
jle
jo
jbe
fs
lahf
mov
adc
xchg
test
hlt
xor
lret
in
ficomps
imul
jg
xor
ss
mov
or
xor
inc
mov
jb
and
mov
lock
or
ret
mov
in
adc
or
mov
adc
mov
lcall
orb
repnz
mov
mov
orl
inc
fsub
mov
inc
xor
inc
xchg
or
add
add
add
jg
std
pop
aad
jb
mov
test
xor
or
outsl
ja
jmp
dec
xor
xor
cmp
pop
leave
jae
add
aam
xchg
cmc
rol
and
add
inc
or
lock
fbld
pop
je,pn
jp
ljmp
push
sub
sub
push
loope
xor
hlt
adc
jl
mov
call
adc
shl
hlt
add
jo
or
add
insb
ljmp
pop
add
add
push
adc
adc
fwait
mov
dec
pop
and
cli
je
jbe
test
aad
call
and
and
ds
stc
add
mov
cmp
out
popa
ret
ljmp
push
or
add
lods
jbe
in
pushl
mov
shl
pop
hlt
mov
add
mov
inc
jl
adc
inc
adc
clc
jb
mov
imul
push
push
shrb
mov
lock
loope
lock
je
cld
xchg
mov
loopne
outsb
jp
add
pop
add
mov
lds
adc
incl
mov
inc
add
cmpl
inc
repz
loopne
and
and
gs
jge
shrb
adc
call
icebp
scas
pop
repnz
test
movsb
js
testb
inc
call
lock
and
popa
fwait
iret
add
cmpsb
pop
clc
adc
pop
out
mov
mov
inc
sub
dec
je
in
pop
pusha
pop
lock
sub
add
fs
sarl
push
push
cmp
jg
inc
cmpsb
imul
imul
pop
or
mov
jne
movsb
mov
mov
and
das
adc
or
outsl
imul
clc
mov
fisttps
js
stos
loop
out
mov
adc
stos
fcomp
jecxz
fsubrs
sahf
jo
out
mov
fsts
mov
loopne
fucomp
mov
sbb
jbe
fs
pop
pop
divb
cs
mov
dec
push
mov
xor
jg
jge
jno
outsb
sub
mov
xlat
sbb
or
pop
imul
add
aam
xor
mov
sbb
jnp
rol
stos
aaa
sub
subb
cs
aas
arpl
xchg
jno
mov
scas
adc
lods
pop
ss
push
xor
mov
jbe
mov
nop
xchg
add
jo
mov
cmpsb
cmp
rclb
pushl
inc
daa
push
pop
cwtl
clc
sti
insl
add
add
sbb
mov
incb
add
mov
je
test
je
dec
shl
outsl
sub
xor
xor
nop
mov
cld
mov
stos
xorl
lods
fwait
dec
cmp
or
sbb
inc
ret
add
repnz
adc
mov
mov
inc
push
data16
xchg
add
les
je
stos
sbb
add
or
aaa
sbb
add
test
sbb
add
test
das
adc
ficoms
repnz
mov
xor
stos
lods
frstor
inc
mov
mov
outsb
push
push
ret
cmpl
inc
sbb
xor
mov
mov
loopne
sbb
and
add
cld
fldenv
testl
sbb
fdivrl
sub
aam
mov
jge
adc
scas
cwtl
cmp
adc
mov
lea
roll
out
mov
inc
push
sbb
xlat
jae
xchg
hlt
add
mov
es
push
jnp
and
adc
cmp
push
add
or
rorb
cmp
leave
mov
inc
in
inc
cmp
pop
add
movsb
xor
inc
fdivs
add
add
insl
mov
shr
add
rclb
push
mov
lcall
or
lcall
bnd
scas
fcoms
mov
lret
loopne
dec
mov
cmp
loopne
inc
int3
mov
mov
je
xor
add
push
mov
loopne
and
jo
je
lods
jp
mov
incl
pusha
ret
pop
xor
sbbl
jmp
and
and
jne
icebp
rcrl
xorb
fldl
fldl
add
mov
jl
or
test
dec
cltd
insl
out
es
mov
push
mov
jo
push
xchg
adc
xor
es
xor
sbb
gs
mov
cmp
cmpb
push
cli
cwtl
popa
mov
sti
adc
pop
cld
testl
into
daa
hlt
nop
sbb
mov
xchg
mov
add
add
push
xor
jo
push
mov
xchg
out
add
xor
fmuls
and
xchg
test
jns
clc
and
or
lock
pop
call
and
shll
or
mov
clc
or
jmp
cmpsl
icebp
and
cmp
sbb
dec
insb
pop
pop
push
rorb
stos
fcmovb
ja
mov
and
dec
ja
addb
mov
lret
rclb
lcall
mov
adc
pop
das
mov
add
mov
mov
mov
jb
adc
adc
fcompl
loopne
sbb
rolb
ficomps
adc
push
out
adc
shl
test
pop
push
push
fisubs
es
pop
or
pop
adc
stos
sub
add
icebp
or
add
lock
lea
scas
push
push
int3
inc
mov
adc
sbb
sub
jle
hlt
mov
out
bound
mov
jne
into
lock
aam
ret
dec
sub
fisubs
insb
loope
test
test
pop
or
jecxz
lock
ret
mov
fdivrl
push
push
test
movl
fdivrl
aam
mov
shlb
imul
bound
jg
test
mov
xchg
cmpb
cmpb
jo
pop
or
test
jge
test
mov
lock
inc
sbb
lock
vmread
sbb
add
adc
ret
aam
inc
cmp
int3
dec
fimull
out
lea
push
call
or
dec
dec
sub
mov
lea
push
and
push
mov
or
add
sub
mov
cmp
mov
jecxz
arpl
cmp
add
outsb
pop
inc
aam
repnz
testl
sbb
out
mov
cli
test
xor
pop
push
sub
inc
sti
dec
popa
inc
jp
pop
inc
xorl
ss
pop
or
shl
mov
cmp
adcb
adc
aas
stos
add
adc
lea
scas
adc
rorb
mov
jg
cmp
fadds
ret
mov
add
or
aaa
add
in
cltd
cmpl
push
test
pop
add
loopne
push
fwait
loope
adc
add
insb
rolb
mov
scas
shll
inc
jmp
push
lods
pop
mov
movsb
inc
test
or
call
or
jl
loop
xchg
sbb
pop
push
call
sub
je
or
ja
psubq
and
push
lock
lock
push
rcrl
ja
or
rcrb
inc
in
fbstp
cli
and
call
push
add
sahf
ret
inc
mov
sub
leave
jp
roll
or
je
cwtl
xor
rolb
lock
movsl
movsl
inc
cwtl
jl
sbb
pop
dec
mov
cmp
packssdw
lods
lods
push
ds
add
pop
loopne
mov
sub
push
inc
shll
es
cmp
clc
add
mov
fiadds
push
pop
xchg
mov
lahf
pop
pop
jg
inc
mov
adc
dec
cmp
shll
rolb
je
repnz
rcrb
insl
loope
repnz
js
cli
add
movzwl
sbb
dec
inc
sbb
orb
call
and
mov
mov
xor
and
mov
test
or
hlt
test
ja
outsl
faddp
cmp
scas
mov
decb
pop
shlb
cld
out
xchg
and
adc
or
inc
inc
sbb
aaa
lock
je
mov
mov
outsl
inc
inc
push
std
adc
and
lea
cmp
sbb
lods
pop
pusha
dec
pushf
fdivrs
lea
loopne
dec
and
pusha
scas
sub
subb
pop
jecxz
cmp
adc
lret
popa
enter
das
dec
push
and
sub
data16
ss
loopne
mov
decl
push
pop
cltd
mov
and
lea
or
rcrl
adc
notb
inc
or
add
cld
mov
inc
add
dec
sub
out
dec
bound
pop
jecxz
loop
adc
mov
jmp
jb
enter
adc
inc
in
fsubs
lcall
loopne
loopne
mov
loopne
xor
faddl
xchg
adc
lret
mov
cmp
sbb
jbe
mov
cmp
fbld
jecxz
or
cwtl
pushl
ret
pop
jo
ljmp
add
inc
test
and
cmp
mov
movb
inc
loopne
mov
xchg
clc
stos
cmpb
pop
jne
push
idiv
jmp
push
pop
pop
adcl
mov
fsubs
sbb
sti
sbb
adc
mov
sub
sub
inc
aas
lret
imul
adc
fsubr
xor
xor
dec
add
jp
jb
testl
and
cmp
mov
faddl
inc
add
lds
lcall
fcomi
jg
inc
je
pusha
or
add
mov
enter
jg
pusha
sub
cs
test
add
sbb
lcall
lock
lods
pusha
jnp
inc
sub
xor
adc
push
mov
outsl
or
call
loopne
movsb
or
popf
mov
sbb
pusha
jae
mov
and
mov
add
add
push
dec
add
sub
mov
popa
inc
cwtl
clc
je
and
or
mov
xor
lea
addl
stos
cmp
je
in
incl
sbb
insb
das
add
rol
jp
loopne
loope
mov
or
push
jp
sbb
jmp
add
inc
pusha
add
sbb
push
sbb
push
xchg
cmpsb
push
push
cli
pop
test
bound
xorl
loop
lock
popa
xchg
pop
mov
jecxz
mov
or
or
gs
pop
call
je
mov
cmp
test
or
cli
sbb
mov
jo
jns
jp
iret
and
ljmp
mov
loopne
lock
pop
popa
add
decl
jl
test
js
sbb
pop
jne
inc
popa
fs
mov
jp
call
popa
das
daa
std
test
jle
loop
subb
and
outsb
or
test
mov
cmp
jg
inc
les
and
loope
loopne
xchg
add
dec
jmp
pop
pop
jg
xor
imul
insb
orl
bound
and
and
cmp
cld
pop
add
sahf
loope
arpl
aad
inc
pusha
mov
dec
mov
or
out
add
or
pop
mov
mov
js
push
lock
loope
xorb
loope
pusha
adc
push
sti
push
enter
pusha
call
cmp
jle
adc
jmp
add
inc
jae
vshufpd
in
lea
jle
fisttpl
add
dec
cli
or
jno
scas
call
jle
rol
test
xchg
popa
cmp
pop
cli
xor
int3
push
out
mov
dec
mov
or
mov
sub
or
and
cmp
adc
fimuls
ss
sbbb
pop
insb
adc
sub
dec
mov
data16
sub
loop
dec
inc
pop
mov
lock
xorb
adc
andl
cmc
push
mov
dec
fstpt
out
xor
mov
mov
dec
add
and
aaa
je
jo
add
add
movsb
pushw
cs
loopne
ret
add
call
pop
mov
test
data16
and
xor
pop
push
add
sbb
orl
adcl
mov
lret
xor
in
subl
push
lock
aas
push
call
adc
sbb
cmp
mov
jle
jb
jo
incl
inc
and
negl
add
ret
into
add
pop
js
push
and
adc
adc
clc
test
inc
adc
add
sub
hlt
push
mov
das
mov
stos
das
cmp
or
push
mov
push
aam
push
orb
add
jg
lock
jo
icebp
mov
icebp
adc
fdivl
pop
mov
sbb
jle
lock
bound
sub
and
jg
fbstp
cs
jne
mov
xor
jmp
push
xor
incl
lea
push
push
xorb
push
pop
lret
and
push
jb
jg
jg
adc
dec
inc
enter
dec
jl
and
or
lock
add
cmp
icebp
call
xor
icebp
sbb
xor
cmp
ss
cmpsb
cmp
jb
mov
jb
incb
add
add
mov
fisttpl
and
mov
shrb
sub
push
dec
mov
pop
and
jg
xor
lock
push
mov
add
push
cld
mov
mov
pop
add
call
mov
pop
dec
jmp
mov
fwait
or
rcll
mov
inc
testl
push
sahf
pop
push
push
popa
cmpsl
stos
stos
sarb
js
loope
xor
loopne
inc
test
or
imulb
add
loope
jne
enter
add
cld
mov
lods
jo
jbe
fists
mov
xor
xchg
pop
or
mov
aaa
add
push
test
test
loopne
jne
fdivrp
mov
sub
jno
nop
mov
call
incl
inc
movsb
xor
je
mov
cmp
dec
mov
mov
and
sbb
cli
jmp
push
sbb
pop
cmp
push
pushf
push
pop
add
push
int
stos
cmp
add
jle
jo
mov
loope
push
popa
push
fcoms
repnz
adc
pop
pop
mov
ret
ds
stc
test
jge
mov
scas
mov
mov
push
add
cld
mov
jmp
lahf
adcl
adcb
push
inc
adc
and
fwait
xor
cld
jo
mov
mov
paddq
jae
faddl
jb
and
aas
adc
or
jo
push
inc
and
jo
sbb
inc
jo
data16
mov
xchg
cmc
push
jmp
mov
lock
mov
decl
pop
and
add
xor
pop
or
test
call
loope
mov
xchg
push
sarl
add
call
pop
ljmp
pop
lock
pop
ret
pop
bound
repz
push
xor
xor
sbb
ljmp
pusha
xchg
fcoms
fcompl
jbe
addl
or
ds
push
cld
lods
shl
dec
sub
jo
movsl
cmp
xchg
adc
push
stos
lea
out
out
sti
call
js
xchg
mov
or
lret
test
push
andl
adc
jmp
lock
xor
dec
sbb
fadds
cwtl
jb
fisttpl
inc
push
lock
loop
sti
out
and
movb
jb
or
jmp
or
sbb
cmp
sbb
inc
mov
repz
adc
sbb
test
sbb
sti
add
decl
jb
inc
shrb
hlt
pop
mov
jb
mov
in
outsl
das
ss
mov
das
pop
push
icebp
xchg
inc
fdiv
add
xor
or
mov
aaa
cld
or
push
pop
test
call
sbb
mov
testl
stos
mov
add
jbe
loopne
push
adc
xorb
in
negl
mov
adc
mov
scas
push
mov
std
mov
clc
shrl
test
jo
and
xor
push
in
mov
imul
pusha
pop
xor
adc
daa
fmul
mov
push
and
jg
or
and
cwtl
out
and
mov
inc
xor
push
flds
cmp
lret
add
sbb
int3
movsl
push
push
pop
lock
fiadds
cs
call
inc
mov
lock
pop
jmp
lock
stc
jo
pop
dec
enter
pushf
addb
clc
je
add
inc
xor
jne
mov
test
lea
mov
or
inc
cltd
cmp
mov
sahf
mov
stos
mov
adc
int
xor
mov
jne
ds
ljmp
mov
cld
cwtl
in
das
rol
lds
inc
insb
mov
cmp
mov
jae
lods
push
mov
js
sti
movzbl
cmp
data16
cmp
cltd
xor
mov
clc
add
cli
rclb
data16
dec
data16
add
adc
pop
pop
jno
cmp
or
jecxz
sub
ret
mov
mov
test
popa
inc
dec
call
sub
sbb
je
mov
jne
add
in
inc
adcl
rol
jb
imul
mov
in
ficompl
add
jmp
push
mov
dec
pusha
ret
stos
mov
cmc
int
mov
notrack
ss
jle
aaa
jp
jno
cmp
cmp
jmp
xor
ret
das
fistpll
loope
xchg
leave
pop
mov
jbe
xchg
jnp
mov
add
decl
mov
inc
add
lahf
mov
in
stos
inc
pushf
adc
mov
icebp
or
mov
push
aam
mov
call
lea
cmp
sti
push
testb
mov
cmp
add
iret
add
inc
mov
mov
cmp
xchg
hlt
mov
pusha
bound
es
mov
mov
mov
and
rcrl
push
es
cmp
jbe
decl
xor
adc
push
add
add
xor
sbb
mov
push
je
jb
push
inc
lea
xchg
bnd
push
and
insl
js
clc
mov
adc
hlt
jbe
add
push
jae
mov
cmp
les
int3
mov
adc
aaa
bound
add
push
testb
inc
push
lds
hlt
push
fdivr
jo
inc
inc
add
outsl
push
sbb
das
mov
or
add
jne
adc
inc
mov
les
loope
mov
jne
push
es
xchg
mov
lods
stc
mov
mov
les
mov
je
jb
out
sub
pop
mov
das
sub
adcb
mov
add
or
orb
call
loop
pop
inc
xchg
push
push
mov
rolb
inc
out
mov
pop
sub
dec
mov
mov
push
push
xorl
mov
fcmovnb
loopne
inc
test
fs
fs
or
jnp
dec
jl
outsb
and
loop
insl
orl
orl
mov
jmp
or
adc
pop
ficompl
inc
clc
push
inc
call
add
lock
adc
call
or
push
push
push
jmp
xor
cmp
push
xchg
sbb
push
enter
xchg
adc
push
rorb
enter
xor
cmp
notl
in
setbe
mov
sub
mov
dec
xchg
sbb
sbb
sub
pop
imul
sti
fists
jb
mov
inc
nop
push
imul
lods
std
push
sub
lcall
lods
popa
jne
je
loop
ret
shrb
fadd
sub
push
imul
sbb
mov
shlb
sbbb
pushf
push
ret
xor
adc
cs
adc
loop
jmp
add
sbb
xchg
xchg
or
shlb
push
adc
ret
jle
inc
idivb
call
push
adc
fstpt
dec
les
adc
mov
inc
sub
cmp
mov
cwtl
and
in
ret
repz
inc
aam
jne
jo
fisttpl
jo
push
cmp
cmp
out
mov
stos
push
or
sub
shll
add
jle
je
rorb
je
inc
in
das
movsb
push
add
xor
sub
popa
ret
test
xchg
xorb
shrb
xor
pusha
jmp
out
int3
lds
jbe
jl
push
jae
push
cld
or
xlat
ja
mov
or
sub
repnz
sub
rcll
les
incl
and
push
incl
inc
testl
call
add
mov
jmp
push
dec
push
jbe
or
and
jbe
mov
push
add
mov
pop
mov
lods
outsl
and
or
popa
pop
push
aam
andl
or
or
enter
addb
mov
push
mov
loop
inc
es
jbe
ret
add
clc
ja
lods
inc
je
push
call
loopne
mov
bound
xchg
add
pop
pusha
hlt
mov
adc
imul
xlat
and
lahf
leave
adc
xor
push
sub
dec
insb
jg
out
out
clc
je
jp
push
lods
call
add
or
add
iret
xchg
leave
inc
lods
cmp
pop
ljmpw
and
xchg
adc
push
push
push
push
add
es
rclb
es
call
push
sahf
and
out
xchg
mov
clc
xor
xor
jle
lea
clc
outsb
jne
mov
addb
loope
inc
adc
cld
push
popa
pop
pop
lret
lods
add
cwtl
ret
fs
pushl
std
in
mov
loop
adc
adc
jns
lret
pusha
fs
addl
xor
mov
das
pop
lock
pop
or
push
or
mul
dec
pop
loopne
add
test
mov
sbb
imul
dec
sbb
xchg
lcall
stos
mov
xor
sbb
jne
repz
clc
mov
andb
xchg
mov
sub
sbb
push
push
add
mov
mov
sub
lds
lcall
jp
decl
pusha
add
sbb
or
xor
dec
ret
scas
inc
repz
pop
add
aam
jo
inc
inc
push
cwtl
add
cs
or
pop
jp
add
adc
fisubl
jbe
sub
sti
outsl
xchg
addr16
dec
loopne
std
je
xchg
or
and
jge
jl
cwtl
popa
adc
mov
cmc
mov
clc
loopne
jg
sbb
pop
cmp
stc
mov
inc
add
sar
inc
add
and
or
popa
cmp
test
cli
in
imul
or
jmp
or
in
aad
lcall
aad
incl
sub
or
das
andb
adc
loopne
mov
add
mov
fs
cmp
insb
fs
or
inc
hlt
push
rorb
inc
or
xor
dec
pop
cmpsb
adc
test
incl
call
pop
pop
and
clc
push
xchg
adc
add
mov
jmp
xor
adc
pop
adc
sbb
mov
std
and
adcl
xchg
push
fisubrs
xchg
mov
mov
popa
outsl
fiaddl
cmp
bound
push
inc
loope
push
mov
push
push
loopne
cmp
ret
jp
jbe
shlb
je
data16
xor
ds
jg
sahf
pop
call
xchg
cmp
mov
in
cs
loopne
test
add
fimuls
add
sub
dec
es
aas
sbb
pop
pop
sti
cmpsb
in
aam
imull
ret
popa
pop
addb
cmp
pusha
pop
add
xorl
mov
enter
and
je
popa
sbbl
les
mov
sarb
jp
lret
push
sbbl
mov
add
orb
pop
out
in
imul
add
jne
ss
push
aam
negb
or
mov
adc
pushf
add
fwait
rcrb
inc
mov
incl
adc
xor
dec
sbb
jge
push
pop
icebp
addr16
mov
js
jecxz
and
inc
aam
idiv
and
je
outsl
insl
adc
add
dec
lock
mov
jo
pop
insl
mov
nop
out
xchg
inc
jle
dec
or
mov
inc
aaa
mov
pop
call
push
add
pusha
addb
inc
inc
push
enter
pop
pusha
xchg
or
cmp
mov
mov
jb
mov
fucom
push
or
dec
and
ret
insb
mov
addb
xor
and
mov
jle
jae
jne
xchg
in
mov
add
push
xchg
add
call
pop
add
mov
jg
dec
jo
mov
add
lock
mov
enter
jo
push
test
fbld
sbb
push
call
adc
dec
movsb
inc
lcall
cli
in
add
mov
mov
and
mov
clc
pop
loope
imul
mov
adc
adc
hlt
aaa
data16
lar
lea
pop
xor
or
jge
or
push
into
or
xchg
and
call
mov
or
jne
inc
icebp
call
mov
shll
mov
outsb
xor
push
pushf
add
push
or
mov
mov
je
add
mov
xor
es
and
sbb
inc
ja
cmp
lods
xor
mov
pushf
mov
stos
loop
push
mov
shrl
je
ror
loopne
call
mov
jo
xchg
dec
icebp
adc
outsb
fcoms
and
xor
xchg
cmp
dec
adc
scas
insl
fsubrl
xchg
or
outsb
je
je
cmp
call
cmpsl
sbb
icebp
mov
leave
loop
mov
clc
fidivrl
faddl
and
mov
lcall
sbb
jl
mov
and
mov
or
lea
lea
das
les
or
add
and
fs
add
test
jae
cmp
or
inc
ss
scas
pop
xor
outsb
mov
jb
add
pop
adc
add
xor
pop
imul
inc
or
pop
sar
inc
imul
pop
sbb
add
adc
es
testb
mov
xchg
mov
es
xor
xor
dec
push
sbb
xor
in
and
cmp
or
xor
sbbb
mov
adc
clc
cmp
mov
mov
test
xor
mov
jne,pt
fcomps
subb
ss
jbe
fcomip
aaa
sbbb
call
lock
out
sbb
inc
and
add
push
mov
and
add
pop
test
mov
ds
inc
sarl
scas
notb
sbb
fldl
add
je
push
or
pop
aam
add
wrmsr
adcb
movsl
push
sbb
or
cmpsl
push
loope
mov
mov
std
call
pop
push
cmovne
or
mov
dec
jb
hlt
dec
loop
pop
mov
or
mov
push
inc
and
pop
clc
pop
and
or
adc
insb
cmc
aaa
adc
ret
lock
sub
js
xchg
add
mov
sub
dec
cmp
andl
adc
xor
test
mov
test
loopne
sbb
stos
xor
repz
loop
dec
sahf
push
pop
cld
mov
and
jo
add
int3
popa
aaa
mov
and
add
adc
jge
adc
lods
mov
mov
mov
adc
or
das
add
push
cs
outsl
fwait
les
sbb
push
jo
lock
ficompl
in
pop
jne
push
jl
mov
enter
jmp
mov
imul
inc
adc
pop
push
mov
jo
add
jg
je
imul
or
or
xor
push
adc
mov
ret
movsb
sub
jl
inc
sub
fwait
in
adc
sbb
inc
xor
push
push
rorl
test
clc
pusha
aaa
jo
add
jg
xor
ljmp
adc
xchg
jo
cmpl
imul
inc
adc
mov
je
aam
test
and
clc
aam
push
pop
pop
jg
cmp
addl
outsb
mov
add
inc
jne
gs
lock
lock
insb
pusha
xor
jle
inc
mov
inc
dec
call
mov
pop
and
pop
and
aaa
dec
call
mov
decl
adc
ss
or
and
lock
dec
je
lret
mov
sub
jbe
lahf
add
scas
and
inc
insl
or
sahf
inc
out
cmp
ljmp
clc
repnz
fucomi
cmp
pop
fildl
repz
shrl
mov
pusha
inc
adc
add
mov
fbld
je
cmp
pop
mov
xor
xor
xchg
push
push
add
enter
andb
data16
aad
fcmovnb
call
out
clc
pop
or
push
inc
mov
mov
jecxz
into
shlb
jg
mov
jle
cmp
push
sbb
lock
mov
insl
aaa
pop
out
test
jge
mov
pop
in
mov
scas
nop
mov
sbb
movsb
test
shr
mov
call
inc
testb
out
es
and
pop
into
xor
ror
mov
jo
xor
add
rcrb
lcall
adc
push
sbb
ljmp
xchg
mov
into
icebp
sub
xor
lods
push
or
shrb
push
sbb
push
orb
adc
nop
add
push
jno
loope
jp
mov
and
nop
fcomip
popf
xchg
mov
adc
fs
ja
pusha
jo
adc
or
jo
icebp
add
addl
pop
mov
mov
or
aam
cmp
push
nop
fs
mov
cmpsl
pushl
add
mov
ss
push
push
test
adcb
jb
stc
push
jmp
sub
push
jp
xor
clc
cmp
jg
sbb
mov
roll
jmp
lea
pop
mov
inc
repz
sbb
loope
mov
call
insl
add
in
lea
orb
in
pop
movsb
filds
jno
cmc
add
push
test
fistpll
les
xor
jns
iret
adc
push
adcb
addb
adc
rcrb
add
lcall
jge
cmpsb
push
or
mov
add
addb
sti
jne
mov
sbb
add
icebp
ds
hlt
iret
xor
lea
jle
jle
shrb
mov
or
push
sub
add
mov
sbb
outsl
push
jo
inc
clc
scas
add
cmp
jnp
adc
ljmp
sbb
daa
jo
ret
test
pushl
iret
jmp
or
das
leave
inc
add
movb
and
mov
mov
sub
es
leave
rolb
xchg
xor
jno
adc
inc
fsubs
sahf
add
adc
mov
jg
sbbl
clc
orl
mov
repnz
jo
iret
pusha
push
pop
data16
or
and
lret
cs
push
mov
add
call
cmpsb
outsb
xor
in
call
xchg
shlb
lcall
pushl
mov
inc
add
orl
jmp
xchg
xor
std
je
and
mov
enter
orb
jl
fcmovbe
inc
loop
mov
js
jns
xchg
pusha
mov
shlb
and
rorl
cmp
leave
lea
cs
sbbb
andb
pushf
mov
js
sub
andb
or
pop
shlb
inc
push
add
sbbl
add
push
ds
pop
add
in
insb
xor
std
scas
xor
add
pop
push
subb
push
orb
inc
pushl
mov
xchg
inc
push
or
ret
push
movsb
rolb
xor
cli
sbb
xor
outsb
xor
sub
mov
inc
or
rcrb
push
sbb
fbld
push
loopne
or
les
push
xchg
mov
test
test
imulb
lock
mov
call
dec
and
xchg
or
cli
and
mov
xor
dec
test
ffreep
in
jle
scas
mov
dec
and
jbe
push
xchg
insl
mov
mov
mov
pop
ljmp
outsl
push
rorb
sbb
ret
inc
js
je
and
shlb
mov
mov
sub
inc
or
loope
push
cmc
dec
adc
ljmp
mov
mov
add
test
jbe
jnp
fwait
mov
data16
jmp
in
push
and
or
rcll
sub
dec
loopne
xchg
xor
outsl
mov
and
sub
mov
stc
sarb
shrb
adc
repnz
repz
cmp
shlb
add
pop
jmp
push
lea
cmp
inc
out
sbb
adc
leave
rcll
cmp
lock
lret
and
je
push
test
ljmp
mov
sbb
push
rolb
call
jecxz
dec
add
pop
fimull
filds
pop
push
popa
loopne
gs
add
leave
ret
faddp
xchg
xchg
or
add
je
xor
adc
clc
add
mov
inc
pop
inc
fldt
sbb
das
rolb
rcrb
inc
xor
mov
and
mov
call
and
mov
jne
add
push
lret
jo
mov
jne
test
popf
cmpl
sub
sub
jmp
pop
and
xchg
mov
popf
bound
jl
mov
xchg
je
rcrb
jecxz
and
inc
cmc
fldt
dec
ss
insb
ret
pusha
or
dec
pusha
sar
mov
and
push
push
sbb
ret
mov
popa
sbb
mov
mov
mov
inc
push
push
jmp
loop
adc
adcb
pop
mov
fs
jl
bound
sub
scas
enter
dec
inc
cmp
testb
or
or
sub
ret
loopne
xorb
mov
dec
or
loopne
add
xor
and
aam
mov
sbb
xor
hlt
jl
push
mov
xor
sub
popa
pop
ljmp
loopne
das
jmp
adc
adc
sub
ss
and
lcall
out
ret
xchg
sub
pusha
sbb
push
out
push
bound
fs
cmp
ds
and
movsl
jg
jb
call
inc
and
pusha
arpl
mov
loopne
call
fs
mov
out
jle
ljmp
jb
sarb
dec
sub
add
add
or
add
ret
ljmp
pusha
jae
lea
loopne
pop
dec
mul
daa
popa
inc
mov
inc
adc
pop
test
nop
mov
adc
adc
push
add
decb
mov
xchg
add
shrb
fildl
mov
loope
loope
adc
enter
sub
call
jle
outsb
push
add
mov
call
adcb
sbb
in
mov
add
outsl
loopne
fisubl
shlb
hlt
test
loope
test
imul
sbb
clc
add
add
adc
jns
push
xor
cwtl
mov
loopne
loope
pop
mov
pusha
push
mov
pusha
loop
mul
orl
adc
mov
push
loop
mov
addb
subb
push
data16
cmp
call
orb
pop
mov
repnz
ja
sbb
lcall
cld
mov
push
mov
icebp
pop
or
add
adc
add
icebp
das
test
pop
cmpb
mov
mov
mov
movl
fiaddl
sbb
mov
pop
xorl
repnz
cmp
add
add
push
je
cmp
adc
xorb
in
add
inc
ret
xchg
loope
cld
push
leave
and
add
sub
add
aas
sub
sub
mov
jl
mov
push
mov
push
pop
mov
or
mov
mov
xchg
in
out
arpl
mov
push
loopne
clc
loopne
call
lea
fbstp
push
leave
ret
mov
mull
cmp
adc
sub
and
incb
inc
adc
imul
jo
add
sbb
fldl
mov
add
ficompl
xor
adc
push
ja
adc
pop
cs
mov
or
stos
sub
inc
xlat
or
push
int3
scas
xor
dec
jg
mov
or
dec
jne
sub
add
add
dec
pop
inc
sub
mov
ret
jo
inc
pop
mov
dec
insb
fcomps
push
mov
pop
xchg
cmpb
dec
or
dec
loope
sub
pop
cmp
inc
xor
mov
jbe
push
fwait
or
dec
jl
add
mov
sbb
add
mov
insb
loope
jne
insb
add
dec
xor
call
xchg
mov
mov
mov
sbb
bound
push
pop
ficomps
cld
pop
adc
popf
jo
cli
jg
mov
adc
jo
fistl
repnz
jns
scas
test
fdiv
sub
adc
xchg
mov
add
adc
incl
je
lea
hlt
mov
icebp
adc
in
mov
mov
xchg
das
lock
xor
insb
jne
xor
inc
in
or
cwtl
repz
xchg
fisttps
or
or
orb
loopne
xor
pop
ss
adc
push
cld
cmpsb
scas
add
pop
push
icebp
sbb
pop
ds
jae
pusha
mov
adc
testb
cmp
adc
enter
je
and
adc
mov
ljmp
mov
add
pop
push
ret
mov
xor
pop
sar
cmpsb
add
dec
or
mov
pop
sbb
mov
es
incl
xlat
call
and
or
lahf
sub
cld
push
xchg
cmc
and
add
adc
jb
add
incl
hlt
cmpsb
leave
jae
repnz
and
push
and
ret
shll
jl
fstpt
sbb
mov
mov
js
cmpl
pop
adc
and
mov
and
dec
mov
shrb
shlb
fadds
stos
cmp
pushl
movsl
es
sahf
add
outsb
js
out
nop
lock
or
inc
outsb
or
orl
mov
mov
lock
mov
pusha
jecxz
push
subl
test
fs
lock
ss
inc
jl
loope
pop
and
and
pop
xor
and
jne
and
fs
cld
lods
push
mov
pop
mulb
mov
pushf
mov
aam
sarl
call
inc
and
cwtl
loopne
cmp
lock
and
sbb
sub
test
mov
lock
adc
mov
jo
test
loopne
call
test
or
xor
push
dec
mov
cmp
loope
inc
mov
fnsave
cmpb
mov
sbb
pop
jge
xor
pop
mov
add
and
fwait
dec
push
std
or
inc
test
inc
mov
cmpsb
cmp
jg
cmc
decl
xor
std
arpl
mov
test
add
adc
repnz
add
adc
sbb
stos
cmc
sbb
adc
fcom
lock
inc
sub
sub
push
test
bnd
add
adcb
lods
push
adc
push
or
jae
lock
mov
push
jo
ljmp
jns
adc
addr16
ds
inc
addl
inc
inc
lock
cli
mov
fdiv
cltd
cmpsb
fisubrl
jbe
push
adc
pop
movsl
mov
cmp
pop
loop
stos
movsb
aaa
sbb
jle
xor
cld
incl
add
pushl
xor
adc
or
hlt
fcmovnb
adc
and
cmp
cs
loop,pt
call
xor
adcl
sub
mov
add
adc
jg
add
dec
push
push
push
pop
or
or
repz
dec
add
lods
jno
or
mov
fiaddl
sub
mov
add
mov
add
ds
cld
push
out
or
data16
jp
dec
call
aam
inc
or
shlb
fcoms
adc
or
shll
lods
jns
push
push
or
sbb
negb
or
mov
ss
dec
sbb
das
mov
push
pop
je
rep
lock
fildll
shlb
decl
call
jno
pop
call
mov
icebp
jne
pop
mov
pop
add
repz
sub
push
inc
sub
fidivl
incl
lock
jo
xor
push
push
push
out
mov
fs
mov
xor
ljmp
pop
call
mov
test
mov
add
mov
or
les
and
xchg
push
xor
cmpsb
data16
add
jno
add
adc
incl
pop
jns
adc
andl
mov
sbb
push
sub
call
inc
mov
push
jnp
sub
jmp
mov
outsb
jo
in
sub
pop
cmp
jl
lcall
outsb
jo
push
inc
inc
adc
outsl
or
lods
jbe
adc
out
add
in
xor
jae
addl
cmc
push
add
adc
daa
movsb
adc
pop
sub
jno
aam
pushl
jo
lock
xchg
lock
movb
adc
cmp
jno
sbb
jg
sub
add
or
icebp
shl
adc
add
xor
adc
lds
push
or
sub
and
ret
mov
popa
xlat
xchg
push
clc
std
adc
add
jmp
mov
call
mov
sbb
lahf
or
sub
jb
xor
incb
mov
loopne
aad
test
and
jnp
jp
xor
mov
std
cmpsb
and
lea
inc
push
push
jl
xchg
lock
out
sahf
je
jo
push
xor
jne
lea
push
loop
sub
pusha
dec
xadd
into
and
xor
jl
call
adc
test
inc
xchg
es
fwait
inc
fcmovnbe
xchg
inc
add
scas
nop
inc
jmp
push
shll
dec
xlat
outsb
cwtl
push
sbb
jp
or
rcrb
xor
je
lea
jmp
add
pusha
add
pop
popa
lea
sbbb
pop
lea
imul
add
fwait
adc
and
xor
mov
pop
or
and
rorb
sub
dec
decl
hlt
ja
lods
ja
xor
shr
imul
andb
sub
pop
lock
fiaddl
loopne
sbbl
adc
cs
sarl
icebp
fadd
sub
ret
or
in
stos
lahf
mov
jbe
outsb
int3
subb
or
push
push
sub
xor
scas
or
fwait
or
sar
movsl
mov
xor
loopne
pushw
adc
mov
xor
pop
adc
xchg
mov
ficomps
inc
cld
ja
cmp
je
inc
push
call
mov
jp
mov
adc
and
in
orb
lods
pop
repnz
push
rorl
rcl
aam
packsswb
mov
cmp
push
js
or
push
cmpsb
push
int3
into
pop
stos
adc
pop
add
sbb
push
test
mov
dec
dec
fcoml
and
dec
push
nop
mov
dec
jle
iret
xor
add
bound
jne
lea
sub
xorb
fistpll
or
not
test
pusha
scas
mov
fdivr
adc
adc
add
sub
cli
rorb
hlt
and
dec
ds
ret
shrb
mov
add
adc
sarb
or
and
bound
add
pushf
sbb
push
xchg
rorb
push
xor
ficoms
std
adc
outsb
mov
sbb
inc
jle
jp
sbbb
xor
rcr
mov
icebp
outsl
fbld
out
inc
rcll
stos
jne
cmp
sbb
sub
cmp
subb
enter
dec
xchg
add
dec
std
das
mov
fmuls
adc
pop
dec
push
test
insl
pop
add
ja
adc
sub
fadds
inc
cld
je
lods
call
js
pop
call
mov
mov
rclb
or
sti
add
inc
aam
pop
or
mov
sub
mov
push
adc
rclb
arpl
test
push
xor
inc
pop
es
cmp
sbb
fildl
inc
roll
jmp
add
rcl
fisubrs
mov
adc
ja
pop
movsl
test
add
sbbb
sti
add
inc
xchg
sarb
jl
fildl
ss
or
fldt
mov
mov
mov
nop
push
or
shlb
loope
gs
andb
inc
jecxz
mov
and
jp
sbb
add
or
or
loop
push
xchg
testl
push
pop
jle
xor
mov
stos
and
ljmp
mov
ss
inc
add
nop
insl
cmpsb
push
cs
pop
hlt
cmp
pop
jle
mov
cld
or
aam
sub
pushl
jmp
cld
ret
fisubl
cld
pushl
pop
push
xchg
sbb
arpl
mov
push
push
add
das
add
sbb
xchg
loopne
push
pop
sbbb
adc
test
lret
sbb
push
adc
test
push
dec
pusha
jl
jmp
xor
mov
clc
jp
outsl
std
pushl
andl
loopne
and
pop
call
sbb
dec
and
and
or
mov
data16
in
loopne
or
shlb
cltd
fsubr
pusha
aaa
push
loopne
add
xchg
call
fsubs
jbe
push
or
pop
gs
add
cmpb
aaa
lcall
push
pop
mov
ss
fsub
bound
mov
add
jle
sbb
xor
nop
inc
mov
out
inc
ret
or
fnstsw
mov
dec
jne
pusha
inc
lret
cld
pop
push
adcb
mov
sarl
push
sbb
and
mov
mull
loopne
cmp
pusha
stc
push
call
pusha
pop
adc
test
pusha
mov
leave
pop
and
xor
pop
fwait
pop
rep
cli
ja
testb
shll
sbb
jp
bound
add
loopne
popa
insl
into
clc
pusha
insl
bound
loop
push
sbb
insb
jl
or
fcmovnb
pushl
add
inc
jmp
and
loopne
push
inc
pusha
push
xor
cmp
jmp
adc
add
jle
xor
adc
xorl
jl
mov
pop
xor
in
add
stos
aam
adc
mov
push
lock
mov
and
jbe
aas
jl
pusha
jno
scas
dec
roll
push
mov
mov
add
int3
xor
lods
cmp
xor
sbb
sbb
mov
push
pushf
and
mov
inc
mov
and
sub
xor
clc
add
mov
cmp
cltd
sti
pushl
sbb
dec
loop
loopne
call
push
in
and
in
scas
negl
data16
repz
leave
sbb
popa
and
bound
loope
mov
aaa
jmp
mov
lcall
pushf
sbb
and
pusha
pop
notb
and
dec
cmc
adc
test
adc
aam
mov
js
je
and
cmp
sub
and
adc
jno
push
xorb
shrl
je
call
fwait
movsl
movsb
clc
xor
xchg
clc
bound
dec
fidivrs
fs
push
mov
adc
push
dec
mov
or
cmp
or
dec
or
fldt
xor
mov
cmp
inc
add
sub
push
jo
cs
je
add
xchg
repnz
push
add
pop
test
sub
outsb
lock
push
scas
dec
and
sbb
iret
call
adc
cli
add
dec
in
and
jne
sub
pop
cli
test
daa
incl
test
mov
incb
add
sbb
pop
adc
ljmp
outsb
mov
inc
jmp
stos
mov
jg
push
lea
icebp
push
clc
add
pushl
mov
or
fnsave
incl
nop
pshufw
or
out
ret
and
xor
xor
js
or
jg
adc
push
adc
mov
jmp
push
jmp
push
lock
xor
or
mov
lock
popa
in
sbb
and
stos
or
hlt
pushl
pop
mov
scas
inc
xor
lock
xor
sbb
cld
imulb
shr
cmp
add
xor
xchg
mov
mov
mov
dec
add
adc
sbbl
out
cmpl
mov
loop
lock
cmp
or
push
aaa
inc
adc
addl
xor
outsl
lcall
inc
bnd
xor
dec
mov
jne
mov
adc
jb
lock
test
jb
jbe
fnstcw
xor
sub
xor
or
cmp
jle
and
and
xorl
outsl
fs
int3
or
mov
xor
call
pushl
and
test
lock
sbb
je
xor
xorl
jbe
ja
jmp
loop
pushl
sub
jle
inc
sub
icebp
push
mov
fs
popa
push
and
jae
jl
fists
mov
mov
out
inc
add
jo
xlat
push
jo
sub
or
xor
mov
loop
mov
jmp
lock
call
je
call
and
mov
mov
lock
pop
and
jge
repnz
inc
jle
dec
stos
dec
add
xor
push
test
xor
filds
xor
mov
sub
sbb
mov
add
lret
fmuls
mov
dec
sbb
and
pop
sbb
insb
mov
aam
inc
and
xor
fs
cli
pop
cmp
inc
xor
outsl
hlt
add
pop
add
jb
test
push
icebp
test
cltd
fildl
jge
mov
lods
dec
jg
sub
sub
cmp
mov
sub
mov
lock
pop
lds
cmp
mov
lds
mov
jo
mov
enter
movsb
inc
pop
loope
mov
jmp
fidivrl
ds
int
add
sbb
and
dec
or
push
mov
pop
fs
adc
xor
fwait
clc
mov
push
out
push
scas
ss
pop
sbb
xor
push
sbb
dec
sub
in
add
adc
jp
fs
test
into
jns
jecxz
mov
or
sbb
add
dec
and
jg
ret
add
jo
mov
add
sub
jb
or
inc
or
sbb
jmp
push
test
dec
xchg
pop
mov
adc
dec
add
jno
mov
call
or
xor
mov
fcompl
sub
dec
xor
shrl
test
aam
xchg
loopne
enter
jp
mov
test
push
movsb
fdiv
stos
push
clc
push
xchg
xchg
jo
incb
cwtl
stos
inc
std
and
xor
dec
clc
lds
rcrb
ds
div
sub
and
cmp
aaa
jl
jae
fsubrl
daa
lea
xor
dec
or
cmp
cmp
sti
jecxz
add
test
push
push
inc
int3
inc
notb
pop
cmc
mov
push
pop
mov
or
add
icebp
mov
enter
push
sti
mov
rcrb
testl
ljmp
mov
div
mov
orb
push
lock
movsl
sub
cmpsb
inc
nop
sub
adc
cmp
xchg
add
add
mov
iret
out
clc
inc
jmp
push
jmp
mov
loope
mov
ret
xchg
jg
rclb
jo
push
lock
mov
and
subb
jne
adc
pop
and
inc
inc
mov
dec
and
push
test
dec
push
and
push
fs
popa
push
adc
pop
ljmp
push
lea
call
or
mov
les
add
add
repnz
pop
cli
inc
push
sbb
outsb
icebp
sub
es
push
pop
pop
repz
addb
xchg
mov
push
push
and
jo
push
jno
mov
or
mov
xor
sbb
in
lock
cmp
fcomip
aaa
shlb
add
push
scas
cmp
or
add
stos
add
lret
pop
jl
jl
lock
call
and
push
push
mov
mov
fmul
mov
mov
pop
jb
icebp
fdivrs
inc
or
imul
scas
sub
loope
or
jbe
add
js
and
jmp
xchg
adc
andb
fcompl
mov
gs
push
test
out
xchg
xor
loop
test
loop
mov
cmp
add
and
mov
test
sub
ljmp
sub
or
test
inc
add
lcall
or
movsb
xchg
jb
aas
xor
mov
mov
cmp
daa
cltd
xor
or
adcb
pop
add
decl
incl
andb
repz
repz
shlb
dec
std
sarb
jg
add
mov
dec
test
inc
jg
daa
mov
sbb
vmwrite
add
cli
add
inc
test
push
sbb
add
mov
add
jo
inc
or
js
arpl
enter
addb
adc
and
push
cs
inc
mov
mov
add
fiadds
adcb
ja
cmp
adcb
mov
incl
loope
pop
xorb
loop
lcall
xchg
enter
pop
adc
fistl
or
xchg
test
imul
test
subb
adc
loop
scas
push
js
mov
fdiv
and
daa
lods
or
pop
adc
xchg
sbbb
ret
xor
ret
jl
push
add
sti
adc
and
out
rorl
and
sub
pop
inc
addl
dec
cmp
ss
lock
push
cmp
xor
sbb
jnp
adc
fcmovnb
pushf
cmpsb
and
sub
sub
fwait
mov
jle
lods
incb
dec
insb
jnp
inc
sbb
mov
sbb
mov
es
adc
stc
push
mov
rorb
add
or
adc
out
shrb
insl
leave
lock
incb
push
jns
insl
movb
sbb
pop
jo
fiadds
rcll
fiaddl
or
test
inc
shr
add
call
and
sbb
cwtl
je
push
push
sti
inc
sbb
imul
es
or
daa
mov
sbb
hlt
sarl
ret
and
add
mov
add
rol
jmp
or
ficompl
pushf
or
cmp
push
add
jno
add
mov
adc
inc
ret
call
xchg
ds
fldcw
rol
mov
mov
je
sub
xlat
inc
repz
push
cld
in
push
pop
adc
in
and
sbb
fists
in
push
ror
adc
in
add
aaa
test
movsb
and
or
or
pushf
ret
xor
call
roll
iret
fsubr
lock
into
cmpsl
fdiv
xchg
and
into
mov
or
push
adc
add
pop
pop
sar
mov
pusha
clc
aas
inc
jmp
push
push
pop
xchg
and
pop
mov
push
jl
call
and
dec
in
jbe
test
mov
pop
dec
imul
nop
cltd
add
call
xchg
adc
jbe
popa
popa
orl
lock
push
popf
add
insl
aaa
imul
loopne
or
jmp
call
dec
sbb
cmp
je
push
lods
inc
popa
insb
test
dec
add
aaa
add
loopne
pusha
push
lods
xor
push
shl
sbb
dec
dec
repnz
jmp
dec
in
hlt
fwait
into
arpl
push
je
pusha
sub
push
mov
jbe
pop
or
icebp
filds
push
clc
push
xchg
or
push
inc
loopne
je
mov
sub
clc
test
add
icebp
jg
push
and
cld
ret
clc
cld
cli
mov
push
mov
daa
push
pusha
sub
fadds
cld
push
mov
push
test
and
gs
sbb
aad
popa
add
sbb
xchg
into
cmp
mov
mov
ficoml
clc
ja
or
or
adc
add
mov
xor
xchg
lock
nop
or
ret
in
jb
pop
call
arpl
xchg
push
loopne
loopne
test
pop
pop
add
decw
mov
testb
jne
add
nop
shrb
pop
pusha
dec
enter
adc
and
add
ficomps
xor
mov
into
mov
mov
push
xor
xor
jg
cmc
loopne
pop
lds
repnz
ds
adc
xor
push
cld
pop
add
inc
cmp
mov
pop
inc
enter
inc
push
pop
repnz
lcall
adc
pop
mov
dec
popa
imul
sbb
inc
testb
jl
and
rcr
cmpb
dec
rcrb
test
push
dec
lock
xor
loopne
mov
or
and
add
dec
mov
in
jl
or
mov
cmp
cmp
loop
jge
lods
repz
cmp
cmp
push
pop
mov
mov
cltd
fucompp
mov
dec
pusha
insl
loopne
and
pusha
les
call
clc
loopne
sbb
sti
pop
out
pusha
add
pop
cmc
loope
jb
clc
pop
bound
stc
cli
jp
adc
int
fistl
mov
mov
jno
or
or
cmp
outsl
nop
icebp
inc
in
add
and
mov
popa
mov
pop
or
mov
hlt
jg
lcall
test
jnp
mov
scas
into
aam
add
jne
loop
movw
cmpl
push
and
mov
inc
adc
sbb
adc
mov
and
inc
inc
adc
outsb
push
pop
pusha
jle
or
jmp
sub
cmp
test
xor
sbb
shrl
lret
repz
xor
lock
mov
pop
and
sub
add
rorb
int
orb
into
jl
test
pop
icebp
repnz
stos
jecxz
addl
rcrb
fneni(8087
pop
adc
mov
shr
arpl
orb
adc
inc
push
add
shll
pusha
inc
ds
dec
jge
mov
add
scas
ss
push
push
cli
cmpsb
sarl
jb
adc
fadd
jmp
inc
mov
mov
std
mov
lods
push
mov
movsb
add
cmp
add
pop
in
cmp
xchg
mov
push
cmp
mov
ja
fdiv
xor
in
xlat
fisubrs
cwtl
outsl
push
sbb
push
mov
jo
aaa
add
mov
clc
mov
mov
mov
sub
lock
jo
xlat
push
call
xchg
lock
ja
addl
mov
icebp
jo
or
and
test
fs
movsb
lods
xchg
mov
mov
in
cwtl
push
ret
add
xchg
je
adc
pop
scas
adc
scas
xchg
xchg
test
arpl
push
add
addb
push
clc
xchg
enter
jle
ret
es
mov
andb
add
cmp
or
cs
xor
mov
out
cs
add
call
test
xor
mov
mov
xchg
add
fsubs
bound
mov
or
dec
cmp
cltd
hlt
decl
xchg
inc
roll
xor
mov
jl
push
jl
loop
in
xor
rorb
inc
cmp
insl
cmp
pop
clc
setg
inc
sbb
jne
push
mov
add
jb
adc
adc
sbb
push
rol
add
pop
movsb
orb
or
call
add
inc
stos
pop
fsubs
sbb
loopne
pop
jmp
aaa
and
fs
inc
jo
xor
mov
pop
test
hlt
stos
dec
fmul
dec
sub
rorb
jp,pn
sbb
lock
pop
jo
mov
cs
adcb
pusha
loop
inc
add
mov
or
dec
pop
sub
xor
push
icebp
inc
mov
ret
mov
jo
lea
fadds
push
cld
mov
call
or
xchg
hlt
mov
inc
jp
jae
dec
adc
add
enter
pop
decb
xor
add
xchg
addb
and
push
aad
idivb
mov
add
call
dec
or
test
xchg
call
add
add
ja
iret
lret
scas
mov
scas
sar
pop
lods
in
faddl
outsl
call
sbb
and
cmp
je
ret
cli
push
mov
sbb
in
repz
push
or
mov
imul
and
fisubs
popa
and
call
and
es
es
push
pop
mov
push
cmp
adc
call
clc
sub
test
mov
je
call
xchg
jl
ret
test
mov
push
xor
ja
jl
sub
mov
mov
push
xor
adc
push
add
int
inc
cmc
pop
cmp
add
mov
cmp
adc
dec
pop
xor
adcl
push
fwait
sub
adc
xor
mov
sahf
decb
and
or
sar
clc
lock
imul
xchg
mov
xor
lock
push
xchg
jne
inc
add
mov
je
add
rcr
mov
mov
inc
ret
es
cmpsl
lock
std
incl
jnp
lock
jae
ljmp
mov
add
mov
dec
mov
pop
mov
push
add
pop
addl
lods
add
loopne
imul
ss
push
inc
lock
mov
mov
and
jo
dec
mov
push
xchg
test
sub
sub
inc
mov
xor
add
push
pusha
mov
inc
inc
les
adc
ss
add
decl
push
jae
dec
dec
scas
call
xor
add
lods
pop
push
aam
cmp
fs
jg
add
and
jne
lock
call
sbb
loop
adc
fildl
loop
inc
push
cli
lock
mov
adc
popf
jle
cld
mov
fs
fwait
mov
lock
fstpt
push
loope
lcall
jnp
shlb
jno
pop
sub
add
mov
fs
shlb
inc
scas
fcomps
push
lock
daa
lock
fidivl
sub
scas
push
add
push
xchg
jns
sub
ljmp
ja
je
push
xor
icebp
cltd
and
adc
mov
mov
cmp
lods
pushl
repnz
add
mov
sbb
jg
adcb
mov
push
and
jecxz
stos
sahf
xor
mov
scas
mov
cmpsl
icebp
mov
inc
pop
ret
cmp
pop
mov
push
ja
sub
enter
cmpsb
xchg
jg
or
mov
cmp
int
mov
ljmp
jl
jp
mov
pusha
and
add
sbb
clc
sub
add
rcrl
adcl
sbb
dec
mov
divl
jl
and
dec
mov
sub
rcrb
imul
mov
sbb
gs
cld
cmpl
inc
xor
push
pop
bound
mov
mov
lock
pusha
fs
mov
mov
push
add
notb
cmp
and
push
ljmp
mov
call
mov
cmp
adc
loopne
sub
arpl
int
stos
jg
je
jmp
mov
sbb
lret
lock
push
lock
add
scas
lock
orl
orl
orb
repnz
lock
jmp
pop
add
jo
pop
decl
inc
push
mov
repnz
bound
shrl
or
daa
cwtl
test
lock
mov
pop
jecxz
out
insb
lock
andb
jo
xor
lock
jo
clc
popf
adc
nop
mov
mov
test
shlb
enter
pop
jg
jo
lahf
jae
pop
jl
ret
add
mov
xor
jl
loopne
test
pushf
call
paddusb
mov
aam
int3
ficomps
mov
add
cwtl
inc
mov
or
xor
clc
sbb
xor
stos
in
xor
mov
xor
mov
xor
ljmp
lock
jge
xchg
xorl
push
mov
aam
call
addl
xchg
or
in
adc
in
inc
jbe
push
and
adc
mov
lret
jae
and
bnd
sub
or
mov
bound
aam
rolb
or
push
imul
call
dec
mov
sahf
jle
push
adc
mov
push
push
adc
hlt
clc
mov
xchg
push
xor
push
jb
cwtl
push
aaa
sbb
out
mov
mov
ljmp
push
orb
adc
pop
push
out
out
cmp
push
push
add
inc
add
dec
mov
mov
lea
js
js
xor
mov
jns
sbb
sub
and
xchg
and
es
cmp
dec
cmpsl
testb
cmp
add
mov
xchg
xor
pushf
and
push
adcl
sbb
cwtl
fisttpl
sub
cmpsb
jbe
data16
std
addb
outsb
adc
stos
dec
pop
std
sbb
ljmp
je
adc
and
fists
inc
mov
call
jmp
je
inc
jl
lea
adc
test
sub
movlhps
or
sbbb
inc
add
out
mov
sbb
mov
xchg
xor
int3
adc
out
roll
rclb
and
inc
dec
les
testb
loopne
aam
clc
add
pop
cmp
push
inc
cmp
enter
inc
jmp
push
repz
call
push
cwtl
cltd
mov
pop
jmp
sbb
enter
jg
sbbl
aas
fadds
inc
ds
pop
fmull
imulb
jmp
xchg
nop
loop
and
pop
mov
cld
xchg
cmp
sbbb
shrb
lds
xchg
add
cmp
movsb
sbb
ss
adc
jg
mov
push
adcl
out
push
cmc
divl
add
mov
shufps
sbb
adc
ret
clc
ret
sub
fcoms
pop
xor
mov
pop
add
add
sbb
add
in
add
call
rorb
mov
jg
and
mov
and
cmpsb
rolb
add
jl
mov
push
cmp
enter
sarl
sub
aaa
add
cmp
dec
clc
add
xor
das
pop
negl
dec
shl
outsb
mov
ret
rcll
add
sbb
push
out
test
insl
inc
fisttpl
xor
lret
xor
int3
adc
adc
clc
rcrb
push
pop
and
push
mov
loop
pop
fwait
add
cmpsb
xchg
sbb
inc
imul
js
or
dec
movsb
int
pushf
int3
ljmp
hlt
divb
or
push
test
add
xchg
fdivr
movsl
popa
mov
pushf
mov
addl
aaa
pop
test
push
add
lret
fsubl
push
push
stc
sub
or
fmull
fcmovnb
or
dec
adc
test
pushl
sbb
shrb
adc
adc
push
sarb
es
cmp
or
popa
dec
clc
add
cli
jne
mov
and
or
inc
adc
pop
mov
xchg
and
adc
mov
add
adc
cmpsb
and
mov
pop
ret
push
and
ja
add
test
decb
pop
jo
cli
adc
insl
pop
or
nop
and
mov
mov
add
into
hlt
orb
lods
ret
ja
pusha
dec
test
popl
jg
mov
leave
call
je
xor
push
push
ss
adc
stos
mov
sub
mov
mov
dec
add
pusha
cli
dec
cs
inc
dec
sarb
sub
jge
inc
stc
loopne
movsl
ljmp
inc
loopne
clc
aam
pop
movups
mov
sub
ss
scas
mov
sub
push
test
insb
outsl
out
ja
lahf
loopne
and
and
mov
mov
add
xor
scas
loopne
pop
lahf
jecxz
add
and
fisttps
mov
pop
mov
loop
pop
loope
mov
je
sar
arpl
sub
rol
xor
insb
cmp
or
add
int3
mov
es
or
pusha
adc
sbb
int3
and
inc
outsb
sbb
cwtl
mov
sbb
cltd
push
nop
push
mov
and
inc
addb
adc
pusha
push
or
cmp
inc
push
pusha
data16
in
in
jg
add
inc
dec
inc
mov
add
sub
test
loop
push
push
jp
adc
jle
cs
and
fisttpl
cmp
repz
orl
jo
pusha
dec
xchg
adc
test
sub
sub
push
or
jne
cmp
pop
inc
enter
loopne
call
mov
cmp
in
aad
lods
sahf
pusha
pop
loopne
sbb
adc
fdivl
es
shlb
dec
pop
movsb
fbstp
jmp
pop
jmp
clc
mov
mov
das
push
mov
arpl
sub
loope
aad
cmp
fcoml
cmp
push
jne
lods
push
int
ss
ret
inc
aam
nop
push
push
adc
sbb
sbb
dec
repz
sub
add
imul
addl
scas
dec
mov
shrl
hlt
loopne
lock
and
sbb
adc
dec
mov
loopne
addr16
mov
push
sub
popf
loop
je
jmp
jnp
call
inc
je
bound
inc
sub
decb
outsl
mov
fs
and
ds
rclb
cs
jmp
test
pusha
cmp
loopne
add
dec
loope
cmp
push
push
fisttpl
adc
test
add
loop
push
popa
loopne
push
clc
push
movl
insb
fadds
sub
pusha
inc
jae
ljmp
loopne
adc
lret
sub
push
std
es
loopne
insb
or
lock
push
bound
test
pop
push
call
mov
mov
cmpsb
or
or
push
call
sub
xchg
jo
lcall
arpl
test
rolb
mov
ret
push
call
in
add
pop
inc
ss
pop
aad
cmp
jnp
sbb
push
pop
cld
das
and
inc
stos
loopne
mov
arpl
inc
add
loopne
mov
inc
ret
insb
sub
push
pop
std
dec
cmp
jne
inc
out
inc
sub
pop
test
mov
pop
push
es
xor
faddl
jne
pop
fcoms
xchg
lock
jo
jmp
xor
enter
sbb
pusha
mov
push
xor
xor
cs
or
adc
sub
movsl
incb
mov
call
push
jo
push
jmp
jl
mov
out
outsl
pop
mov
mov
lods
xchg
xor
dec
add
xor
adc
cmp
push
push
jb
loop
inc
sbb
pop
add
xchg
or
lock
push
pusha
mov
shr
push
pop
add
or
je
inc
rcrb
icebp
lock
adc
push
pop
insb
push
scas
ss
sub
dec
int3
xchg
lea
xchg
sbb
add
jle
push
add
and
mov
andl
dec
sub
xor
cli
dec
add
sub
mov
xor
lock
clc
add
inc
gs
xchg
rol
dec
sub
push
inc
dec
loop
sub
jmp
pusha
and
mov
push
in
or
add
sbb
roll
add
inc
push
sbb
or
sar
aam
sarl
in
sbb
xor
call
mov
call
mov
push
mov
imul
xor
or
inc
fs
js
jg
or
hlt
xchg
adc
add
mov
out
jg
sub
inc
and
push
je
xchg
or
jle
mov
insl
xor
push
mov
xor
movsb
xor
lcall
mov
push
adc
mov
hlt
test
punpckhdq
test
cmp
pop
mov
repnz
jno
or
mov
adc
sahf
push
inc
clc
add
inc
dec
call
orl
jmp
push
mov
sbb
mov
rorb
jmp
rolb
movb
lea
adc
das
xchg
dec
adc
inc
scas
test
xlat
mov
and
mov
fdivrs
fsubp
xor
add
test
jb
mov
icebp
or
movzbl
stos
adc
or
test
and
add
fs
mov
xor
lock
sub
add
test
inc
push
add
incl
xor
movsl
add
aam
movl
decl
test
inc
adc
movsl
or
sti
in
rolb
sahf
imul
adc
fmul
jbe
ljmp
push
call
cld
lea
mov
mov
inc
inc
cld
das
inc
or
or
push
dec
cmp
add
pop
jmp
mov
mov
cmp
les
jno
push
sbb
test
and
mov
adc
jb
mov
mov
sbb
lcall
mov
stos
inc
jbe
jo
add
mov
loopne
outsl
mov
stc
sub
dec
xor
adc
mov
cltd
je
int3
and
mov
inc
sbbl
jg
add
mov
jb
inc
fcoml
call
jo
sbb
mov
push
stos
jnp
mov
jo
xor
add
rorb
dec
lock
mov
test
mov
das
and
cmp
ja
ds
lea
rclb
pop
mov
subb
jo
inc
clc
cmc
mov
or
xor
or
icebp
and
jb
inc
or
imul
movsb
jl
aam
ljmp
test
aas
jne
inc
jge
adc
mov
push
inc
jmp
jle
jbe
lock
sbb
bnd
adc
aaa
lods
push
mov
pop
sahf
xor
add
dec
pop
pop
lods
mov
lea
add
or
dec
or
les
cmpsb
xchg
rorl
add
xchg
push
cs
jo
mov
xchg
out
sub
lock
data16
push
lock
dec
incb
push
adc
push
or
ret
pushl
test
call
add
dec
rol
mov
pop
sub
xor
in
add
fs
aas
xchg
hlt
imul
adc
cmp
jge
sub
je
push
xor
jecxz
dec
add
inc
adc
dec
clc
in
fisttpl
hlt
notl
call
jb
aam
mov
add
jle
jmp
xorl
mov
inc
sbb
mov
push
scas
xor
inc
push
mov
inc
xor
dec
pop
mov
xor
pop
je
fisubl
ds
mov
inc
sti
outsl
or
add
decb
add
loop
int3
add
jne
fcomip
ja
inc
mov
pusha
mov
int3
pop
push
mov
pushl
sbbl
xor
dec
jo
pop
cmpsl
cmp
fldt
sub
jne
mov
jae
and
adc
sub
dec
push
fdivrs
xlat
shlb
mov
xor
and
in
out
mov
inc
incb
jae
vmwrite
sub
orl
mov
add
icebp
mov
and
stos
inc
divl
inc
outsb
shrb
jae
inc
xor
dec
lret
inc
mov
fisubs
add
fcomp
lock
inc
jo
mov
in
mov
js
int
incl
jne
lea
add
push
mov
loop
cld
jne
lea
dec
inc
jl
jp
pop
insl
mov
mov
fildll
mov
adc
out
jb
jge
sbb
adc
cmp
jmp
adc
sub
adc
daa
hlt
ljmp
mov
mov
mov
jmp
push
adcl
adc
lret
dec
inc
add
jmp
sarl
adc
loopne
fisubrs
cmp
xor
cmp
icebp
cmp
test
rol
push
daa
lds
mov
xor
decb
inc
add
add
sbbb
rorb
sub
mov
test
scas
clc
add
cmp
mov
or
jg
pusha
inc
sub
jnp
rclb
pop
imul
bnd
addb
jmp
jp
aam
lcall
mov
jp
mov
jae
mov
out
je
add
sbb
sbb
inc
cmp
mov
jb
inc
fcomi
inc
adc
flds
and
testb
xor
inc
inc
sub
ljmp
inc
cmp
adcb
xchg
pop
lock
sub
sbb
icebp
xor
sbb
mov
iret
dec
mov
sbb
cmp
icebp
sbb
clc
lock
ss
aas
and
testb
fists
push
and
xchg
adc
or
inc
inc
rcrb
sbb
pushf
inc
sbb
adcb
cmp
dec
inc
xchg
push
mov
jb
jmp
mov
dec
add
push
add
cltd
or
loopne
cmp
xchg
loop,pn
push
lret
push
jg
jle
sbb
mov
inc
stos
je
call
hlt
add
popa
adc
call
dec
mov
inc
sub
mov
mov
jbe
test
mov
add
jp
cld
lcall
jbe
mov
cmp
jmp
cmp
out
mov
leave
mov
insl
and
js
add
pushf
clc
sub
xchg
inc
add
stc
loopne
cld
inc
push
inc
push
lret
mov
call
push
mov
xlat
xchg
mov
ljmp
pop
enter
push
push
mov
push
aaa
fcmovnu
xor
mov
stos
pop
add
inc
loope
cmp
xchg
xchg
and
dec
ss
push
or
cmpsb
call
es
or
sar
mov
push
clc
lea
mov
aaa
adc
or
inc
push
mov
push
pushf
sti
dec
jne
lret
daa
fcomps
ds
test
in
out
mov
cmp
lret
cmp
jb
mov
mov
or
rolb
push
pop
stc
scas
add
add
aam
and
lock
mov
ja
call
push
dec
movl
clc
pusha
sub
icebp
push
push
lea
dec
push
push
pop
xchg
cli
insl
insb
pop
mov
mov
bound
xchg
je
ja
loopne
daa
and
add
scas
push
cmpsb
mov
jecxz
pushl
pushl
fimuls
or
faddp
repz
cmp
les
fisttps
nop
cmp
adc
in
and
orb
jl
add
mov
divb
adc
mov
sub
mov
push
or
mov
adc
stos
mov
mov
pop
or
push
push
push
mov
adc
push
subl
repnz
jl
jl
cld
adc
xor
aam
sbb
mov
loope
cmp
add
hlt
add
adc
sub
mov
fmuls
js
cs
dec
or
call
push
fs
fwait
rolb
push
inc
call
dec
xor
sub
fs
or
cmp
std
add
mov
push
jge
mov
scas
daa
ljmp
rol
inc
mov
push
int
push
fadd
push
outsb
sbb
es
adc
mov
jle
incb
clc
jmp
pop
add
jne
or
cmp
loopne
fcomps
data16
cs
and
jb
pushfw
ljmp
jb
ja
add
stc
add
sub
jne
clc
or
punpckhdq
aad
sbb
sbb
xchg
mov
lea
hlt
push
mov
js
mov
insl
xor
imul
cld
push
cmpb
push
pop
push
push
or
sbb
daa
dec
test
mov
push
mov
ss
mov
aad
pop
out
add
adc
divl
sbb
push
out
outsl
xorb
jle
xor
mov
sti
adc
ss
call
ret
adc
lahf
xchg
pop
bound
fstpl
call
scas
mov
test
lods
dec
jp,pt
sbb
jecxz
shlb
enter
cmc
jg
mov
fsts
idivb
add
mov
jb
shr
push
ret
pop
inc
std
nop
pop
inc
add
or
pop
inc
call
adc
add
or
rorb
inc
movsl
and
hlt
cmc
mov
scas
nop
push
add
dec
push
lea
je
push
shrb
addr16
cmp
jle
xchg
hlt
jnp
add
sub
or
add
or
adc
jl
dec
lock
testb
je
xchg
cmp
lret
addb
cmc
testb
mov
and
shrl
flds
shlb
xor
jle
xorl
jbe
xchg
das
adc
call
jmp
orl
adc
sub
xlat
mov
xchg
lsl
int
imul
scas
call
js
rorl
pop
mov
push
lock
xchg
test
lock
add
pop
mov
cmp
lock
sub
orl
das
pop
arpl
mov
add
negl
or
sbb
mov
add
mov
jg
hlt
loope
pop
lret
mov
xor
jle
jbe
xchg
jle
cli
cmp
sub
sub
out
push
sbb
push
push
enter
push
xlat
fsubr
push
movsb
push
push
mov
mov
and
mov
cmpsb
xchg
push
rolb
out
out
jns
pop
cmp
dec
jbe
ret
mov
adc
or
push
push
test
rorl
repz
std
ss
cmp
push
sti
test
out
mov
mov
call
sub
jb
fildl
mov
sbb
and
sub
scas
outsb
xor
pusha
inc
push
sahf
into
pop
scas
sub
ljmp
xor
xor
shll
repz
test
fimuls
cmp
push
mov
std
inc
pop
enter
into
adc
pop
mov
and
add
add
xchg
adc
clc
dec
adc
sti
jb
jmp
or
dec
mov
cwtl
repz
sahf
inc
mov
cmp
stos
jbe
sarb
pop
pop
jp
testb
rolb
sub
cld
xor
and
test
es
aad
push
ret
iret
inc
stos
mov
ja
cs
add
xor
jae
mov
lods
xor
add
push
pop
sbb
fiadds
adc
xlat
aaa
sbb
pop
cmpsl
roll
push
loope
sti
cmp
pop
sti
sub
call
mov
popf
insl
mov
push
push
add
cmpsl
push
leave
mov
pop
add
and
xchg
push
or
cmp
adc
call
jne
mov
das
sub
and
fxch
ja
push
push
test
pop
xchg
ficompl
or
arpl
decl
sahf
push
mov
cmp
xorl
add
push
cmpl
and
pop
imul
adc
push
cmp
in
cmpsb
xchg
push
mov
xchg
and
and
push
inc
pop
jb
mov
shlb
sub
pop
cmp
push
aas
cld
mov
cmp
mov
jl
in
movsb
mov
push
ds
cmpsb
in
out
jae
fldcw
jne
pop
mov
repnz
and
ljmp
decb
mov
mov
lds
loope
les
sub
cs
push
sbb
or
movsb
ret
or
pop
sub
dec
test
gs
pushf
cmp
add
xor
xchg
cmp
mov
pop
push
adc
xor
push
push
mov
mov
pop
mov
or
cld
sbb
push
mov
repz
incl
sub
cmp
lea
push
cmpsl
dec
das
push
and
js
or
push
xchg
pop
mov
push
and
inc
cmp
push
mov
jbe
jne
inc
shlb
stc
add
mulb
test
xchg
or
or
mov
add
in
andl
xor
mov
mov
xor
xchg
movsb
rcrb
call
cmp
or
add
push
mov
jne
leave
test
fnstcw
inc
decl
scas
aaa
add
shrb
ljmp
push
push
dec
fildl
repnz
lret
scas
lret
or
clc
int
push
sarb
lock
inc
jg
je
adc
add
or
xchg
orb
es
icebp
loope
fiaddl
and
pop
call
inc
inc
add
push
insb
int
sbb
sbb
sbb
fildll
add
adc
ret
jmp
adc
push
lock
out
inc
inc
cmp
jb
jmp
cmp
in
sub
cld
push
xchg
outsb
ss
jne
mov
add
dec
fisubrl
add
in
inc
mov
inc
or
cld
dec
or
xchg
xchg
and
or
push
add
mov
xchg
icebp
fsubs
mov
xlat
out
xchg
push
adc
jno
daa
dec
or
fdivl
mov
subb
xor
into
mov
pop
and
dec
lds
add
push
stos
fidivrs
cmp
or
xor
add
inc
adc
pop
cmp
push
test
clc
cmp
ja
and
pop
adc
fcmovnu
jg
mov
adcb
repnz
lock
dec
call
lock
pop
ret
push
xchg
cmp
addl
lcall
loopne
into
xchg
inc
lods
or
xchg
rolb
sub
mov
and
xor
sub
add
sub
flds
jne
cs
orl
fisubl
adc
push
sub
jge
jb
aaa
or
sbb
lea
je
adc
adc
mov
jg
cmpb
std
mov
mov
inc
mov
outsl
add
enter
leave
sbb
lea
jecxz
and
cmc
lret
ja
aaa
mov
add
decb
cmp
pop
rol
ret
jge
sahf
mov
clc
add
push
aam
pop
jmp
push
dec
and
push
in
decl
push
jne
sbb
mov
mov
cmp
and
fdivr
dec
mov
ret
hlt
and
jl
cmp
mov
cmc
lock
add
inc
push
or
xchg
sbb
sbb
outsb
xor
cmp
jge
mov
push
adc
sub
lock
mov
push
dec
mov
cli
jo
inc
std
pushfw
test
mov
cvttps2pi
jb
push
sub
push
es
pusha
xchg
adc
scas
xor
fstl
jbe
xor
fidivrl
mov
hlt
dec
and
cld
lea
jp
int
xchg
add
and
pop
and
cs
mov
push
adc
outsl
inc
inc
test
incb
dec
ss
add
cmp
inc
movb
mov
mov
enter
hlt
mov
call
test
adcl
push
jne
int3
mov
cmp
rorb
ljmp
push
add
fldt
jne
sarl
push
pop
inc
aaa
decl
mov
subb
out
push
pop
cmp
jbe
adc
lea
mov
dec
insl
and
call
push
jg
add
mov
mov
mov
pop
insl
test
or
mov
pop
add
lds
cmc
pop
push
hlt
or
mov
mov
add
jl
shlb
inc
adc
or
xchg
ja
dec
adc
out
push
loop
pop
or
jne
push
pusha
sub
scas
cld
outsb
inc
scas
push
or
faddl
ds
shll
pop
inc
scas
sbbl
cmp
add
out
add
or
into
aam
sbb
aam
sbb
mov
cld
repz
mov
insl
shr
jns
jmp
jnp
pop
pop
or
cmpsl
int3
mov
mov
mov
ror
popa
jno
push
int3
mov
cmc
es
push
pop
jle
cmp
inc
or
or
loopne
loop
cmp
fimuls
das
test
lock
mov
cmp
faddl
shll
in
js
test
mov
xchg
in
mov
jecxz
jne
je
xorb
fwait
push
mov
xchg
mov
and
xchg
les
dec
mov
out
push
aad
cmpsl
inc
hlt
outsb
add
or
add
and
jl
add
shr
and
cli
mov
lcall
sub
mov
push
insl
mov
stos
rcrb
dec
push
fisttpll
mov
mov
and
dec
xor
push
fsubs
in
mov
fmul
and
add
ljmp
add
aas
mov
outsl
xchg
mov
es
repz
mov
pop
aad
sar
mov
aas
or
ss
push
jne
ss
jb
xor
adc
xchg
pop
loopne
cwtl
pop
test
push
scas
jge
scas
in
mov
xor
mov
xchg
mov
ret
xchg
je
and
cltd
stos
inc
add
xor
mov
aam
loope
lods
inc
and
jl
mov
xchg
add
xor
sub
mov
sub
sub
stos
mov
inc
jmp
pop
mov
sub
mov
mov
cmc
inc
push
or
push
icebp
dec
sbb
push
xor
cli
call
jbe
add
xor
add
dec
xchg
jecxz
mov
cs
push
sbb
test
lret
scas
mov
push
ret
test
pop
int3
cs
push
mov
push
pop
fsubs
fmull
pop
mov
push
int3
cmpb
push
push
lock
xor
jo
adc
pop
test
pop
push
push
pop
dec
mov
push
mov
push
fldcw
in
push
mov
lret
mov
dec
popa
data16
jle
inc
cmp
adc
push
cltd
in
mov
ds
sbb
add
outsb
xchg
dec
pushw
pop
xorb
push
mov
test
sbbb
adc
mov
les
fcom
outsl
data16
fdivrs
jbe
xchg
test
inc
stos
int3
ss
pop
push
scas
cwtl
push
mov
mov
mov
sbb
xor
aad
lods
fimuls
inc
push
add
add
lret
call
out
int
xor
mov
sub
out
imulb
fmull
mov
jmp
repz
into
je
or
mov
cld
subb
inc
pop
movsb
mov
sub
dec
add
adc
inc
clc
xchg
ss
mov
pop
adc
int3
call
xlat
pop
out
add
adc
cmp
dec
xlat
enter
bsf
dec
and
xlat
pop
cmp
adc
dec
lock
push
std
xchg
dec
lcall
loope
jbe
mov
repz
clc
cs
xchg
or
and
or
jge
outsb
jg
pop
push
inc
jge
cmp
mov
add
data16
mov
mov
repnz
stos
pop
cmp
cmp
xchg
repnz
stos
test
clc
es
pushf
dec
push
clc
mov
loope
mov
shl
inc
add
lcall
or
pop
pop
lcall
aam
mov
push
fsubrs
lock
push
cli
mov
add
lret
int
inc
es
sbb
inc
xlat
cli
mov
mov
mov
and
sti
call
adc
sbb
mov
sbb
adc
add
or
inc
les
push
sbb
or
outsb
pop
ljmp
es
in
andb
mov
mov
scas
adc
aam
add
mov
adc
mov
scas
ss
fldlg2
adc
je
test
mov
fsub
or
nop
cli
int3
idivb
addb
shl
pop
or
out
sub
and
adc
mov
mov
push
in
cmp
mov
cmp
push
pop
aad
cli
and
decl
and
adc
xorb
cmpsl
sub
push
hlt
inc
mov
adc
repnz
xchg
ljmp
loopne
lock
sub
fstpt
stos
rorb
dec
das
lret
test
mov
xchg
out
sub
fmul
loopne
rorb
or
jne
mov
xchg
shlb
add
enter
scas
ret
push
clc
mov
jmp
sbb
enter
scas
mov
je
sub
add
mov
ljmp
add
aam
ds
jo
stos
push
push
mov
push
add
push
in
in
pop
aaa
cli
pop
clc
jecxz
inc
mov
ja
loope
sarl
ja
mov
adc
jmp
mov
push
std
je
cld
dec
rcll
and
das
clc
mov
clc
cmp
inc
dec
cs
lock
mov
and
je
mov
repz
call
dec
cs
pop
xchg
xchg
into
and
lea
orl
nop
add
jg
arpl
enter
fstpt
mov
push
loopne
or
fnsave
cmp
inc
add
or
pop
mov
cmp
jb
je
jle
mov
in
pop
mov
mov
jg
add
bnd
mov
mov
inc
insb
dec
jg
xor
jmp
cmp
adc
mov
shlb
ja
lret
sti
jne
ficoml
dec
xor
mov
mov
mov
outsb
ljmp
jbe
nop
mov
js
lea
filds
ja
push
add
je
cmp
es
xchg
jno
data16
repz
pusha
outsb
mov
dec
cld
shlb
fmulp
cltd
mov
cltd
add
rcrb
cmp
add
mov
int3
mov
push
enter
xchg
pusha
pop
ret
sbb
repnz
mov
inc
jbe
les
hlt
push
stos
enter
add
test
sub
lock
je
push
lock
ret
inc
cld
movsb
aam
or
sub
mov
pusha
movsl
xchg
rorb
push
lea
subl
data16
not
lds
push
mov
lea
scas
fdivs
mov
mov
add
push
idiv
mov
and
jg
add
addb
lret
xor
push
dec
push
xor
ret
outsb
mov
push
das
ret
add
rorb
or
xor
adc
test
push
out
add
cmp
xchg
subb
jbe
jmp
int
mov
mov
xchg
ds
cmp
fistpll
sub
cld
icebp
mov
jne
mov
cltd
cmp
jne
lock
es
jb
cmp
xor
into
jmp
cmp
ss
in
add
js
sub
mov
roll
cmp
jae
enter
ja
aam
jbe
imul
add
stc
mov
add
les
or
das
inc
xchg
sarb
jg
ljmp
jl
fdivp
inc
add
lea
mov
mov
lock
decb
or
outsb
mov
or
mov
jle
insb
fcompl
ret
leave
jnp
loopne
adc
in
ds
jbe
add
lock
mov
mov
neg
dec
cli
lea
xchg
mov
xchg
out
xchg
lods
or
dec
je
mov
and
push
out
dec
jno
popa
mov
das
push
mov
pop
xchg
cli
push
sub
adc
outsb
or
test
dec
push
test
jbe
pop
mov
test
jl
stos
aam
sub
add
xchg
adc
movb
movsb
sub
xchg
xor
enter
xor
pop
int3
jmp
shlb
stos
lock
add
pusha
pop
jmp
mov
cmp
or
shlb
push
rcrb
cmp
push
pop
imul
cmp
aad
sub
fdivrs
sub
clc
bound
adc
lret
mulb
xor
popf
xor
adc
shr
add
into
pop
dec
or
mov
mov
jno
fsubrl
inc
mov
add
cmpsl
lahf
dec
xchg
push
adc
xchg
mov
pushf
or
inc
mov
xchg
in
adc
cmp
lea
push
pop
pop
push
mov
push
push
loop
inc
cmp
dec
test
sub
outsl
popa
add
cmp
push
pop
inc
jecxz,pn
call
xor
or
sub
xor
cltd
fsubs
ret
mov
sarb
xor
das
mov
lods
pop
js
xor
mov
ja
outsl
negl
mov
push
inc
faddp
inc
and
jg
or
mov
and
incb
jl
adc
movl
and
pop
popf
jb
and
sbb
and
sbb
add
aaa
sbb
aad
clc
or
call
iret
rcrl
aam
pop
call
fistpll
or
mov
adc
or
mov
adc
inc
or
mov
inc
xor
ficoms
scas
or
adc
adc
push
js
jmp
out
mov
xchg
or
outsb
dec
aas
or
in
push
rorb
mov
fwait
mov
add
inc
mov
cmp
sbb
jl
push
sbb
test
and
mov
inc
inc
dec
es
inc
push
rorl
sub
aaa
clc
mov
out
or
mov
and
loop
hlt
lret
mull
jo
rcl
add
inc
insl
loope
push
aam
cmc
sbb
sub
adc
fildl
dec
push
nop
and
dec
mov
loope
ljmp
push
in
mov
lods
loope
rol
ret
incl
or
ja
sti
fadds
xlat
loopne
sbb
mov
out
pop
scas
lea
scas
mov
mov
mov
ret
or
sub
xor
push
scas
and
in
sbb
ss
pop
add
mov
dec
call
loopne
mov
add
dec
outsb
mov
pop
je
cmp
mov
call
mov
mov
out
adc
or
dec
dec
shl
je
mov
iret
dec
test
lock
push
or
imull
sbb
loopne
jmp
call
add
push
adc
lods
sub
push
inc
push
push
dec
lock
data16
bound
fildll
inc
testl
scas
push
add
push
or
insl
jbe
mov
push
das
pop
inc
ja
pop
call
test
fiaddl
sti
and
mov
push
pop
add
mov
vpmaddwd
push
popf
outsl
loopne
lock
mov
es
inc
mov
ds
outsb
add
inc
cmc
wrmsr
hlt
and
fstps
cltd
sahf
je
and
adc
adc
mov
adc
xor
sub
and
fists
pop
jg
inc
and
mov
roll
shl
data16
push
or
pushf
call
pop
xchg
xlat
outsb
bound
adcl
out
lahf
or
cwtl
inc
cmp
sbb
or
aam
dec
and
incb
pop
fsubrs
push
or
push
dec
flds
aam
cs
lea
adc
dec
sbb
add
push
addr16
pop
xchg
dec
and
push
in
pop
or
cmp
add
out
add
into
xchg
clc
mov
nop
add
ljmp
test
sub
mov
adc
cli
out
inc
add
or
adc
cmp
shlb
jno
imul
xor
fstpl
add
mov
mov
hlt
mov
jle
jbe
push
add
xchg
nop
ret
call
add
ljmp
add
mov
adc
xchg
clc
mov
add
mov
push
iret
ror
dec
mov
add
loop
or
add
fwait
jno
sub
pop
or
jb
mov
adc
sub
lds
xchg
xor
add
fdivrl
pop
jnp
push
adc
xchg
clc
fldl
scas
shll
push
inc
insb
fadds
jle
mov
sti
mov
add
addb
sub
adc
jo
or
push
cmp
pop
push
inc
ljmp
lea
incb
aam
outsl
xchg
js
or
and
jne
pusha
addl
fiaddl
gs
call
rcll
push
loop
sub
xchg
pop
adc
les
cld
sub
add
sbb
lds
adc
orb
shlb
enter
les
or
dec
sub
pop
dec
adc
xor
xchg
cli
dec
ljmp
fsts
data16
mov
stos
cs
pop
ds
add
adc
jae
ds
test
in
adc
or
or
jbe
data16
push
je
add
daa
mov
rolb
mov
loop
push
es
adc
leave
cmp
or
setle
jl
pusha
cmp
and
adc
ds
and
fbld
icebp
mov
jl
js
outsl
push
add
loop
cmp
out
enter
rorl
jo
xchg
pop
nop
dec
adc
in
bound
push
hlt
and
or
mov
aam
and
cmp
int3
dec
ljmp
imul
sbbl
mov
rorb
idivb
lods
ja
push
xorl
dec
movsl
negb
cld
xchg
mov
clc
adc
lea
mov
fdivr
aam
inc
lock
repz
xorl
push
ret
pop
out
add
sbb
clc
daa
int3
jge
push
xor
or
xchg
push
pop
lret
fisttpl
push
mov
push
jge
es
add
mov
mov
xor
dec
adc
push
inc
hlt
shrl
mulb
enter
mov
ljmp
mov
adc
int3
jb
sub
xchg
rcrb
xchg
inc
out
shll
or
add
cmpb
add
adc
loopne
mov
mov
cmp
ror
loopne
mov
dec
jne
sub
mov
inc
cmpl
test
test
xor
sbb
mov
imul
dec
xchg
or
mov
shlb
test
add
sbb
loop
add
sbb
and
xor
and
test
adc
mov
in
popa
std
call
rol
mov
in
arpl
adc
inc
mov
loopne
jmp
or
inc
mov
test
mov
pop
shl
jb
pusha
inc
push
jecxz
add
push
loop
pop
dec
cli
push
pop
xor
or
cmp
inc
and
cmp
push
test
sub
loop
out
fsubrl
dec
and
aaa
mov
and
shl
orl
jo
xchg
sbb
push
add
bound
and
hlt
push
test
add
mov
cmp
push
in
push
mov
and
ljmp
fisttps
cmp
lea
inc
dec
mov
lods
fsubs
or
or
or
adc
jo
dec
mov
aad
or
push
xchg
xchg
xor
adc
mov
call
repnz
jg
popf
mov
jae
call
jecxz
sbb
flds
sub
jecxz
sub
in
and
jb
inc
mov
mov
fabs
dec
or
jle
fbstp
pop
shlb
mov
jne
pop
addb
je
pusha
aas
adc
or
inc
mov
jg
jge
mov
pop
mov
loopne
shlb
data16
inc
adc
cwtl
add
mov
stos
rcrl
je
out
jmp
inc
jle
add
jg
call
pusha
mov
adc
repz
dec
pusha
stos
jmp
add
mov
add
test
mov
lea
decl
sarb
jmp
cmp
add
add
push
xor
sub
mov
inc
jl
push
cmp
jg
mov
imul
add
sub
test
and
loop
iret
jge
pop
loopne
add
jl
loopne
notb
je
imul
jae
scas
enter
push
pop
add
inc
arpl
insl
loopne
andl
jmp
or
xor
out
jp
or
loopne
jbe
add
and
andb
cli
and
adc
pushf
jne
shrb
ficoms
mov
mov
xor
add
imul
int
dec
mov
push
stos
test
sub
push
gs
pop
test
sbb
add
add
push
das
push
sbb
push
mov
test
dec
call
lret
mov
shlb
pop
adc
push
pop
mov
and
loopne
and
or
ds
push
pop
and
push
mov
xor
cmp
adc
xor
rclb
push
sbb
mov
push
std
sub
mov
mov
mov
jbe
add
adc
les
or
xchg
and
dec
ret
incl
pusha
xchg
in
adc
loope
dec
or
and
sub
mov
pusha
mov
add
push
popa
pop
push
add
pop
xor
movsb
daa
sahf
mov
push
sti
inc
jl
add
adc
mov
stc
clc
imul
in
xor
jb
adc
xor
add
loopne
sub
aad
jmp
ret
add
inc
xchg
loope
clc
repz
outsl
pop
or
cmp
add
enter
adc
sbb
aam
dec
cld
scas
push
jecxz
in
adc
pusha
mov
pop
add
sub
aaa
out
arpl
sub
mov
xor
or
lds
add
jo
clc
mov
adc
adc
lcall
ret
movsl
out
js
xor
push
insl
jg
jg
mov
mov
mov
sarl
and
and
mov
lock
add
jo
mov
gs
jp
push
jmp
pushf
add
enter
rorb
adc
fimuls
lock
cmp
mov
pushf
and
xor
jmp
ja
lock
adcb
push
mov
mov
repz
aad
pop
pusha
cmpsb
nop
pop
mov
push
sbb
sub
lock
sbb
and
cs
clc
and
into
test
sub
xor
jbe
cmp
faddl
push
mov
icebp
movsl
push
cld
clc
xchg
add
push
shr
outsb
add
jg
mov
mov
push
inc
fcoms
ret
add
adc
test
ss
outsl
push
cmc
mov
call
xor
lcall
xor
repz
pop
sti
rol
dec
cmpsb
xor
add
mov
mov
aaa
adc
call
cmp
mov
lahf
mov
call
cmp
rolb
mov
mov
mov
leave
jo
inc
jno
dec
cmp
add
or
clc
mov
jo
sbb
mov
lcall
orb
js
leave
cmp
data16
ss
inc
adc
jo
xor
push
mov
data16
add
add
jb
jg
adc
or
add
or
and
push
mov
add
inc
negl
add
pop
add
push
dec
push
sub
adc
inc
jecxz
xlat
xor
rolb
dec
xor
adc
push
pop
mov
inc
pop
mov
pusha
sbb
pop
outsl
addb
ljmp
imul
js
inc
jo
xorb
mov
ret
mov
enter
mov
testl
clc
aaa
adc
pop
int3
inc
mov
scas
mov
cltd
push
push
call
aaa
push
nop
mov
or
add
icebp
stos
inc
jo
mov
idivl
fwait
xor
jp
fwait
movsb
js
out
call
adc
sbb
addr16
jbe
xchg
xor
sbb
or
div
pop
mulb
or
push
lcall
mov
xchg
push
inc
lock
xor
inc
mov
mov
aam
sub
or
push
hlt
add
add
push
jl
and
and
push
sti
cmp
add
pop
inc
sub
add
bound
xor
inc
inc
or
clc
lcall
sbb
fnstenv
adc
and
jnp
pop
cmp
xor
inc
push
mov
inc
lock
ljmp
adc
xor
adc
inc
lock
das
xchg
push
adcb
add
cmpb
lock
pushf
ss
sub
mov
jg
mov
push
jo
xor
jnp
lea
and
fistpl
lock
sbb
lock
fdivl
pop
sub
test
lret
sbb
and
jo
push
mov
xor
jp
jo
or
shl
pop
push
pop
xor
mov
sub
mov
incb
mov
or
jg
in
and
je
or
lret
je
push
loopne
cs
mov
stos
cld
shll
enter
jo
lret
stos
adc
push
and
loopne
pushl
cmp
or
ljmp
daa
xor
inc
sahf
cmp
lock
push
xorb
sbb
icebp
mov
jno
push
push
psubb
ret
inc
test
jo,pt
or
xchg
call
sahf
xchg
cmpsb
scas
hlt
xchg
and
addl
jnp
cwtl
xchg
dec
add
lock
jl
or
xor
mov
mov
or
jge
sub
jbe
cs
fcmovne
inc
or
inc
push
pop
jp
add
push
test
mov
push
lcall
and
or
adc
idiv
add
add
push
fadds
lret
push
xor
push
aaa
lods
mov
cmp
jmp
push
fadds
repnz
clc
dec
ljmp
xchg
xchg
push
test
add
sbb
xor
push
out
and
xor
cs
inc
inc
push
dec
mov
add
lahf
mov
mov
cmp
addb
lock
mov
dec
or
call
sub
jp
jge
or
jg
inc
mov
add
dec
push
xchg
add
adc
aad
push
fmuls
std
outsl
fildll
cmp
push
xchg
bound
out
mov
xchg
shlb
and
jl
pop
cmp
lock
xchg
push
or
mov
test
and
add
or
stos
push
lods
into
xor
xor
lods
lea
or
clc
lock
push
lods
sub
arpl
sbb
mov
dec
add
lea
inc
push
cli
push
bnd
cmc
lock
add
add
or
xchg
mov
icebp
adc
fcoml
notb
je
push
jbe
or
mov
mov
jmp
jl
add
pop
je
mov
test
outsl
jbe
add
push
or
mov
pop
inc
incl
push
sbb
inc
inc
inc
shll
das
movsb
adc
pop
add
iret
xchg
adc
icebp
mov
sub
mov
pop
push
call
cmp
pop
in
add
je
mov
mov
or
into
push
jns
xchg
mov
adc
or
or
dec
inc
test
jb
dec
mov
mov
mov
cltd
push
xor
loope
add
inc
and
aam
or
jno
sbb
push
aas
jge
mov
je
adc
add
call
dec
push
pop
jo
mov
or
mov
adc
push
inc
hlt
scas
sub
xor
pop
mov
xor
popa
stos
pop
adc
add
les
xchg
rolb
or
sbb
pop
push
dec
neg
insl
pop
inc
xchg
mov
bound
rep
adc
je
xor
mov
jp
push
testl
call
insl
mov
sbb
jp
ret
xchg
test
pop
mov
xor
orb
xorl
add
daa
jl
xor
add
jle
enter
push
xor
add
ja
test
rorb
icebp
cmp
jl
inc
clts
jle
dec
add
mov
int3
mov
mov
sbb
cmp
mov
repnz
sti
call
inc
xlat
repz
cmpl
test
sub
jl
outsl
mov
add
or
xchg
dec
sbb
push
imull
dec
sbb
mov
sbb
imul
lock
dec
mov
testl
and
add
sub
jle
xor
and
pop
sbb
sbb
lret
sub
mov
xor
pop
and
adc
ds
hlt
notl
ror
and
add
test
int
push
and
dec
push
mov
mov
push
sbbb
inc
int3
and
add
add
dec
and
adcb
enter
rcl
jb
mov
add
sbb
enter
mov
push
add
addb
adc
sbb
mov
or
fstl
sbb
pop
gs
pusha
inc
fstpl
adc
jp
jle
xor
push
inc
out
sbb
xchg
pop
fisubrl
bound
hlt
or
ret
fcmovnbe
add
into
cmp
xor
mov
and
mov
movsb
testl
nop
jo
and
and
orb
pop
fsts
adcb
pusha
sbb
mov
fidivl
daa
mov
pop
test
nop
fisubs
cmp
jl
pop
rorb
add
mov
or
mov
sbb
inc
push
mov
adc
add
iret
adc
out
aam
out
fiaddl
jecxz
sbb
notb
sbb
sub
imul
aaa
sub
dec
mov
push
jle
push
dec
add
cwtl
pop
mov
lret
add
jnp
xchg
pop
jo
addb
dec
lcall
add
mov
je
or
or
cmp
inc
adc
dec
adc
mov
leave
rcl
or
or
hlt
lea
mull
std
rclb
pop
lock
mov
aaa
imul
rclb
inc
xor
jnp
add
adc
mov
test
mov
xchg
sbbb
and
push
inc
jnp
std
outsl
divb
dec
mov
das
inc
sub
rorb
pop
fcmovnb
add
and
xor
rclb
add
push
imul
cmc
data16
int3
sbb
cmp
or
fdivp
ss
js
lcall
int3
mov
and
int
xorb
mov
ret
inc
xor
inc
or
sub
stc
rorb
push
scas
call
aad
mov
je
dec
aas
add
test
sbb
fstps
orb
test
jmp
shrb
sar
dec
push
add
decb
sub
lods
call
gs
lea
add
call
adc
iret
mov
sub
fldenv
cmpb
andb
and
and
or
mov
adc
or
inc
stos
dec
xor
nop
inc
sbb
mov
or
sub
dec
xchg
in
or
dec
mov
sbb
daa
sbb
decl
pusha
and
pusha
js
xchg
mov
notb
xchg
jle
jne
push
loop
test
adc
js
push
mull
mov
sbb
pop
xor
or
and
pusha
orl
cli
out
xchg
or
dec
adc
call
pusha
jp
or
out
es
lea
xor
pop
loope
hlt
insl
add
push
sbb
push
adc
test
and
jl
xor
cmc
xor
fldenv
sub
daa
inc
xchg
xor
push
test
cmp
out
and
xor
xchg
clc
sbb
xor
add
adc
and
ss
mov
call
mov
insb
cwtl
mov
adc
inc
out
push
jp
jg
sub
sbb
push
call
jne
lock
call
call
je
fidivs
push
add
popa
mov
push
or
ljmp
stos
inc
ljmp
stos
and
pusha
jg
outsl
bound
or
pusha
adc
mov
push
pusha
mov
addr16
push
jle
test
pusha
sub
jo
dec
pop
arpl
insb
insb
push
or
mov
stos
nop
or
lock
ljmp
xchg
push
mov
std
cmp
hlt
rcll
inc
xchg
outsb
test
xchg
xchg
mov
lods
jne
sti
mov
sbb
out
dec
mov
dec
ja
xchg
lock
and
mov
movsb
in
jp
es
inc
dec
or
loope
push
and
pusha
mov
pusha
push
lods
pop
imul
mov
pop
dec
and
mov
insb
sub
push
incl
add
stc
push
into
or
das
sub
fsubs
mov
xor
addl
and
push
mov
push
loopne
pop
jmp
out
xchg
add
callw
mov
inc
xor
cmp
incl
inc
adc
jg
push
jbe
mov
add
pop
mov
pusha
lret
add
sbb
es
loop
jp
notb
mov
push
neg
add
shlb
pop
push
pop
fs
adc
call
and
or
in
push
clc
inc
adc
and
jl
mov
pop
inc
xchg
sbb
loopne
adc
ret
bound
sbb
push
mov
lcall
mov
jmp
add
xorb
pushf
pusha
pop
add
repnz
rolb
into
sarl
cld
adc
in
call
cmp
jg
xor
mov
mov
push
add
fadd
neg
lods
sbb
add
cmp
mov
dec
add
orb
lock
mov
dec
aas
and
mov
je
sbb
addl
add
and
push
sub
es
dec
mov
clc
mov
shrb
adc
pushf
andb
dec
push
scas
adc
in
add
pop
shl
sbb
pop
outsb
rolb
mov
data16
lret
dec
or
inc
testl
adc
pop
cwtl
cmpsl
loope
jne
cmpl
push
xor
push
psubsb
inc
int
in
ret
sbb
call
enter
lea
push
push
dec
mov
jecxz
movsb
add
call
js
testb
mov
jl
jb
call
add
inc
es
pop
and
bound
dec
es
jp
xor
inc
mov
xor
mov
test
jle
adc
add
jg
mov
or
push
pop
mov
shll
add
pop
dec
loopne
shlb
data16
xor
inc
push
jl
cld
add
jl
add
push
mov
jg
clc
mov
push
and
jl
dec
call
or
in
imul
shlb
out
mov
lods
enter
fisubrl
jo
adc
ljmp
in
in
add
or
cmp
ficomps
xchg
js
lea
add
ret
jmp
push
mov
rorb
fdiv
mov
mov
movsb
mov
pop
pushl
in
mov
xchg
sub
adc
jb
pop
push
add
or
clc
pop
imul
clc
xchg
push
mov
cmpsb
sub
mov
mov
sub
mov
sahf
sbb
pop
inc
add
or
inc
add
cmc
cmpb
call
jmp
jo
inc
or
xor
xor
push
sub
and
add
pop
jo
pushl
mov
cli
outsl
xor
call
aaa
xor
add
sar
idivb
xor
pushl
or
push
mov
loop
inc
sub
xchg
lock
push
loope
xor
push
call
push
and
ret
subl
cld
pop
push
sub
pop
push
loopne
mov
jmp
sub
or
mov
lcall
loop
dec
or
add
cs
sahf
add
inc
mov
mov
jae
adc
and
mov
push
cld
mov
mov
mov
out
xor
test
out
add
pop
cmp
xor
jne
xor
inc
push
addb
lods
dec
aam
add
decl
mov
jo
jne
je
adc
jne
mov
and
mov
xor
gs
popa
jl
pusha
mov
push
jne
cmp
push
inc
mov
cmp
and
push
jmp
add
fcmovnu
pop
lods
cmpb
xorb
test
pop
ss
jle
push
jmp
xorl
pop
je
push
cli
test
or
push
mov
push
mov
xchg
cmp
aam
adc
push
xor
add
and
cmp
jle
push
mov
or
outsl
dec
lea
fwait
insb
xor
or
mov
rolb
sub
jl
and
sar
daa
sbb
mov
mov
mov
test
jo
add
loope
dec
not
faddl
add
std
mov
hlt
dec
or
lock
adc
mov
xchg
add
mov
push
push
jo
mov
xchg
pop
das
and
adc
mov
push
add
out
aas
mov
mov
mov
push
mov
subb
add
pop
mov
mov
sar
decl
lock
pop
push
icebp
les
add
sbb
add
es
push
addr16
push
sub
pop
adc
pop
pop
jne
jne
loope
int
test
cmp
sbb
ret
push
lret
ljmp
daa
adc
and
es
decl
mov
sti
outsb
inc
call
push
dec
sub
pop
andb
aas
testb
sub
xor
lock
aam
adc
jmp
icebp
push
inc
pushf
xor
ljmp
outsl
test
mov
repnz
push
loopne
sub
push
mov
adc
adc
cld
mov
add
sub
test
sbb
lea
inc
xor
adc
push
sub
andb
and
shl
add
sub
xor
xchg
repnz
int3
mov
fldl
mov
xor
adc
pop
in
push
aam
cmp
mov
cmp
mov
loope
call
cmp
adc
xor
push
or
push
add
clc
mov
mov
testl
fwait
sub
frstor
bound
cltd
ficompl
sbb
push
cli
inc
mov
jecxz
pushl
adc
dec
jo
out
and
push
mov
mov
ret
pusha
jp
jmp
pushf
dec
loop
lods
dec
sbb
xor
inc
mov
mov
xor
sub
mov
inc
data16
ljmp
test
add
mov
or
call
xor
add
push
pop
pop
call
xor
mov
jb
xchg
pusha
mov
mov
xchg
pop
lock
adc
in
insl
jmp
inc
cwtl
mov
sub
sub
mov
push
xor
inc
out
add
insb
icebp
incb
cld
add
jne
addl
sbb
stc
or
cli
frstor
decb
aas
shrb
adcb
push
inc
jbe
std
aaa
mov
xor
mov
jl
add
mov
adc
and
push
shrb
sbb
push
fcoms
add
popa
add
adc
or
lcall
loopne
nop
sbb
add
subl
sti
add
adc
jle
icebp
jg
bnd
and
lock
jmp
xor
aas
addl
pop
aaa
test
adc
push
daa
mov
and
leave
adc
mov
sbb
std
add
and
mov
xchg
jo
and
add
mov
sbb
mov
hlt
jle
bnd
clc
pminsw
mov
mov
cmp
stos
movsb
push
mov
add
or
xor
cmpl
sub
dec
jne
jbe
call
add
lea
xor
jb
roll
movsl
push
pusha
sbb
push
add
or
add
cmp
add
inc
mov
pop
sub
mov
add
adc
cld
cmpb
incb
loopne
mov
add
xchg
add
push
dec
and
out
jp
mov
push
inc
sbb
insl
pusha
sbb
add
xchg
ljmp
pop
mov
inc
sbb
sbb
mov
ss
test
in
pusha
adc
push
dec
shl
pushf
adc
imulb
mov
je
call
shld
jle
jb
lock
mov
pop
jne
iret
add
ret
je
mov
mov
pusha
adcb
add
push
lods
mov
call
ss
ljmp
push
dec
cmp
sti
mov
jmp
add
repz
call
xchg
add
mov
imul
mov
call
pop
mov
add
push
movb
sub
jp
cmp
xchg
or
cmp
jle
rclb
dec
push
cltd
std
cmpb
je
adcl
inc
adc
sbb
lret
jmp
cs
sbb
mov
push
xchg
add
pop
orb
dec
sbb
fsubr
clc
pop
xor
les
or
testl
inc
jl
add
mov
test
sahf
loop
and
sbb
insl
js
and
cmp
push
pusha
add
mov
mov
push
and
mov
sbb
icebp
in
ret
push
and
or
aad
inc
insb
sub
daa
inc
jp
sub
add
mov
add
mov
mov
insl
das
int3
subb
inc
mov
adc
idivb
lods
call
adcb
or
cmp
inc
repz
push
arpl
idiv
push
mov
data16
in
lods
mov
mov
mov
mov
roll
into
fimuls
sub
inc
ljmp
or
push
inc
or
movsl
push
pop
rorb
rorb
mov
ret
dec
fists
push
cmpsb
jg
hlt
or
roll
adc
sub
xchg
js
je
addl
xlat
clc
hlt
jmp
xchg
icebp
pop
cli
je
imul
mov
mov
out
sub
mov
std
pop
lret
sbb
ret
mov
and
mov
mov
mov
shlb
cld
add
es
jmp
repnz
jg
push
inc
mov
repnz
call
jnp
push
inc
cmp
sbb
sub
mov
pop
rclb
clc
rorb
mov
js
mov
movsl
or
movsb
ret
jb
jmp
imul
or
clc
jne
mov
xor
or
fsub
push
je
ljmp
pushl
cld
lea
mov
fmull
mov
ret
sarl
int3
add
rolb
inc
push
in
clc
push
sbb
out
sarl
test
sbb
bnd
jb
outsl
in
das
fsubs
jle
fmull
jne
test
sarb
jne
gs
xchg
outsl
subb
sub
pop
aaa
insb
test
aaa
mov
mov
jbe
and
clc
pop
push
ret
and
or
pop
push
and
testb
repz
movb
das
fmuls
push
lcall
rcll
add
pop
jbe
and
add
jo
xchg
jo
lock
add
call
icebp
mov
in
mov
adc
outsb
shlb
loope
or
mov
ja
pop
loop
bound
inc
mov
ret
loope
mov
jecxz
pop
xchg
jl
test
pop
loope
push
ret
push
sub
dec
hlt
call
popa
cmp
adc
leave
loope
add
pop
adc
rcl
aam
cmpb
das
sub
shlb
test
adc
add
cmc
lret
je
pop
pop
jae
rcrb
outsb
repnz
mov
xchg
sbb
pusha
imul
les
adc
add
lea
sbb
icebp
push
inc
addr16
add
aaa
jb
jne
mov
bound
pop
push
add
sahf
push
stos
add
push
mov
js
add
add
inc
fiaddl
push
fistpll
loopne
push
jo
cltd
les
outsb
pop
imul
dec
jle
in
xchg
int3
push
push
aas
pusha
call
adc
js
sahf
xor
cmc
sbb
or
call
sar
pop
pop
pop
cmpsb
pusha
jle
test
loopne
dec
add
inc
and
mov
shl
lods
and
push
lea
xchg
pusha
push
punpckhbw
adc
loopne
test
fiaddl
loopne
mov
jp
add
mov
xchg
std
add
faddp
inc
adc
pop
xor
pop
xchg
popa
cmpb
and
dec
jp
test
xchg
mov
popf
add
pop
stos
and
and
mov
jg
add
cld
pusha
sbb
loopne
loopne
repnz
jg
push
mov
cli
lock
and
outsb
xor
add
sahf
add
mov
xchg
add
add
rclb
inc
xchg
nop
cld
test
mov
xchg
call
push
pop
add
push
test
inc
in
dec
insl
push
clc
cmpb
sbb
cmpsb
sub
pusha
push
push
push
jb
pushf
sahf
jo
sub
push
adc
adc
pusha
push
adc
mov
inc
pusha
ss
sub
loopne
popa
mov
xor
lods
xor
mov
push
shrl
hlt
xchg
pop
ljmp
in
psubsw
lock
jb
jge
pop
sti
add
aas
xorb
adc
lock
or
insb
and
clc
adc
pusha
xor
push
sub
add
decl
add
fstpt
lret
jbe
add
or
sbb
cmp
xor
je
pusha
jns
loop
orb
and
and
jb
test
insb
pop
adc
pushf
loopne
rorb
mov
xor
xchg
pop
or
inc
nop
inc
adcb
add
fnstsw
xchg
inc
xchg
cmp
jge
mov
cwtl
loopne
mov
mov
pusha
cmp
xchg
add
popf
add
les
inc
and
je
pusha
mov
mov
dec
and
add
es
sbbb
sub
popa
gs
sbb
or
xchg
add
mov
mov
mov
or
ret
shlb
pushf
push
pop
sar
add
inc
xor
pop
hlt
lcall
sub
add
add
loop
push
inc
cmpb
outsb
add
add
data16
scas
dec
sbb
mov
loope
push
pop
call
sub
xor
aaa
shrl
ret
jge
cmpsb
push
lock
testb
xor
scas
ss
mov
xchg
xor
add
fs
push
cmp
mov
sub
add
xchg
add
sbb
outsb
add
or
push
inc
add
inc
mov
jp
insb
jg
fs
orb
pop
mov
adc
sbb
fwait
add
call
sub
dec
adc
jo
adc
xchg
or
jl
cmpsl
call
push
dec
fcompl
pop
pop
popa
jo
imul
jnp
add
push
jecxz
cld
pop
cmp
mov
mov
and
push
mov
hlt
and
std
lock
lcall
jo
nop
insl
inc
xchg
aam
test
sub
jnp
aas
fisttpl
push
cs
icebp
xchg
lock
add
add
mov
push
outsb
ljmp
xor
push
lock
clc
imulb
add
add
xor
lock
or
push
push
jo
in
xlat
incb
push
xor
push
enter
add
xchg
xchg
add
push
or
jecxz
pop
je
push
icebp
jp
mov
pop
mov
dec
test
out
mov
or
add
wrmsr
add
js
scas
int3
pop
sbb
pop
lsl
push
orb
add
es
fdivrs
add
hlt
jb
xchg
add
in
dec
pop
or
add
adc
je
adc
push
movl
mov
jle
lock
sahf
cmpsb
sbb
scas
mov
mov
and
movsb
mov
inc
test
imul
push
adc
testl
sbb
jp
dec
testb
ljmp
sub
pop
dec
xor
mov
pop
sbb
test
or
or
add
mov
and
jp
daa
ds
into
push
dec
mov
mov
add
das
add
and
cmp
lcall
mov
or
mov
push
call
xor
lods
add
push
sbb
sti
orb
sub
xor
pop
in
dec
sub
addb
popa
mov
push
xchg
fs
xor
cli
fcoms
pop
adc
adc
int3
rorb
ret
push
jne
ret
sub
add
push
movb
jmp
ret
inc
cmp
pop
or
popa
mov
xor
cmpsb
call
push
andb
xor
jne
imul
test
or
orb
push
mov
add
test
inc
jecxz
jae
cmp
incl
rcrb
mov
adc
jbe
rcl
popf
adc
out
outsl
pop
sub
push
and
push
ljmp
jno
jbe
jb
stos
and
sub
jne
inc
popf
xchg
loop
push
stos
enter
outsl
rclb
xchg
pop
push
call
mov
shlb
mov
dec
and
mov
jp
and
jg
lea
dec
mov
test
aaa
lock
sahf
lcall
icebp
or
add
cwtl
in
jno
cld
xchg
std
outsl
test
or
xor
inc
fcompl
daa
or
push
add
les
repnz
lock
sarl
stos
or
push
jo
adc
mov
sub
popa
and
xor
jp
les
sub
xchg
push
orb
push
test
scas
sub
sti
push
adc
int
xor
jne
push
loopne
and
dec
outsl
adc
addb
es
xchg
enter
or
add
dec
mov
andl
jecxz
add
andl
xor
clc
adc
andb
mov
jl
cmp
inc
test
inc
xchg
shlb
adc
fildll
rolb
es
call
pusha
add
mov
pop
addb
mov
stos
mov
lock
movsb
pop
or
push
call
lret
pop
jo
ret
lock
repz
lock
cmpxchg
fcomps
idivb
dec
clc
lcall
xor
dec
je
call
test
mov
adc
or
xchg
int
fimuls
jp
xor
sbb
rol
xchg
add
push
adc
js
sub
cmp
out
dec
mov
cmovge
inc
xchg
shl
mov
and
and
out
fnstenv
loopne
mov
cmp
lods
adc
js
addb
add
movsl
add
push
adc
cmpb
fmull
mov
add
je
out
or
adc
jo
lret
jb
clc
adc
call
pop
dec
mov
nopl
xor
hlt
int3
xor
je
out
mov
add
xor
push
sarb
or
mov
and
ret
shr
mov
sbb
or
dec
insb
sub
xchg
add
push
push
adc
and
pushl
xor
out
cli
or
push
mov
mov
jb
inc
and
call
orb
pusha
mov
inc
add
and
lea
and
push
dec
cmpl
pop
pop
add
pop
jmp
scas
add
xlat
add
mov
sub
and
mov
inc
add
mov
shlb
pop
mov
mov
aas
subb
in
dec
or
and
lahf
xor
xchg
xor
roll
fildll
mov
jo
std
mov
mov
and
scas
add
es
clc
jmp
loopne
or
ss
cmp
test
pusha
push
hlt
lock
enter
fs
pop
subl
jnp
add
xchg
pop
test
stos
je
jbe
add
sub
fsubr
mov
xor
int3
sbb
mov
push
inc
xor
lahf
shlb
adc
add
add
and
mov
xor
dec
cmpsl
xlat
push
je
lcall
or
xor
mov
push
inc
stos
rclb
mov
cs
add
pop
je
mov
add
sti
push
lods
inc
clc
jl
jo
push
addl
add
or
sub
add
clc
incl
cmp
or
mov
call
notb
pop
stc
jo
xlat
mov
pushf
and
shrl
mov
test
add
mov
loope
xor
pop
repz
stos
mov
stos
and
cli
pop
jg
or
add
and
xchg
jp
cmp
or
xor
pop
jbe
sub
jnp
mov
sub
cs
or
fcompl
pusha
adc
into
shlb
in
or
or
mov
sub
xchg
and
or
xor
xchg
add
cld
add
mov
iret
push
scas
push
jmp
outsb
push
sbb
xchg
xor
add
popa
pop
sub
lods
jo
and
pop
xchg
mov
cmpsb
aaa
pop
or
and
lea
in
call
mov
rcrb
cld
or
iret
add
add
cmp
mov
add
loop
jle
mov
dec
jo
xor
inc
xor
sub
jl
xrelease
jmp
enter
pop
jmp
out
or
aad
addr16
add
adcl
pop
movsb
xchg
pop
arpl
popa
inc
call
inc
xchg
imul
inc
push
sub
mov
push
je
push
adc
pop
jmp
pop
repnz
inc
mov
push
in
adc
idivb
mov
pop
or
test
mov
cmp
or
add
mov
and
cmpsb
push
jb
sbb
sahf
aad
sahf
fldt
or
sti
dec
incl
cmc
call
lock
ret
int3
mov
andl
outsl
push
mov
je
movl
rolb
push
jge
dec
mulb
xchg
and
jmp
scas
orb
mov
loopne
xor
icebp
sub
dec
dec
es
gs
and
out
test
lea
or
xchg
enter
insl
pushf
int
push
into
in
pop
scas
sub
scas
invd
cwtl
stos
push
add
pop
sbb
call
pop
and
arpl
or
sbb
call
mov
enter
cmp
insb
pop
and
and
insb
xchg
or
subb
jmp
bnd
test
test
jne
in
mov
add
shll
insl
adc
lods
push
out
push
leave
jle
sub
ljmp
fsubs
mov
sbb
xchg
or
pop
rclb
shrb
aam
rclb
inc
jp
pusha
push
and
out
inc
mov
sub
ret
stos
mov
ja
aas
sarb
pop
and
inc
mov
and
push
push
or
andb
fisttpl
push
jb
push
dec
and
mov
or
movsb
repnz
sub
cmp
xor
add
push
dec
popf
mov
xchg
or
mov
sahf
pop
mov
cli
fwait
jae
fwait
push
adc
enter
rcll
mov
add
ret
ret
arpl
mov
add
adc
mov
rolb
mov
aaa
fidivs
rclb
inc
mov
cwtl
inc
fldcw
mov
clc
in
adc
add
mov
add
add
insb
pop
shl
js
dec
test
in
xchg
call
adc
mov
clc
ret
test
add
add
xchg
sahf
cmpb
scas
xchg
ret
ds
xchg
call
cs
jmp
add
call
cmovp
inc
shl
mov
insl
cmp
hlt
in
mov
std
idivb
rolb
test
add
ret
sub
stos
xchg
mov
xorb
fwait
test
into
je
cmp
lock
inc
or
cmp
jbe
or
mov
pop
sub
ja
or
inc
jne
ret
or
push
lea
clc
shlb
inc
adc
pop
andb
test
or
loopne
sahf
repz
or
inc
insl
lods
or
or
and
mov
loopne
mov
pop
mov
jo
push
jge
fsub
jnp
cmp
ficomps
pop
shr
push
movsb
inc
adc
mov
scas
mov
or
and
call
push
add
mov
loopne
add
call
pusha
sbb
or
fldenv
mov
pop
mov
mov
and
js
mov
jge
jbe
clc
in
xchg
add
call
inc
add
or
mov
or
filds
clc
mov
loop
call
addl
and
das
xchg
hlt
bound
cmp
out
addb
and
loope
mov
or
rorb
cld
dec
push
and
and
outsl
sbb
and
mov
mov
outsl
push
adc
fisubrs
pop
or
and
cld
xchg
cli
jnp
popa
pop
mov
and
jbe
inc
mov
inc
inc
enter
dec
or
or
dec
je
clc
fisubrl
mov
mov
inc
push
jo
add
or
add
add
js
sub
jo
push
sbb
add
cmc
or
mov
subb
jbe
add
mov
inc
pushf
pop
popa
push
push
jmp
jo
call
adc
out
bound
xchg
adc
sub
jmp
jmp
addb
mov
std
fisttps
andl
pusha
mov
adc
sbb
lret
ljmp
mov
mov
xlat
xor
adc
mov
je
mov
add
dec
pusha
mov
test
xchg
nop
fs
pushl
roll
add
nop
psubsb
in
pusha
pop
insb
add
icebp
inc
ljmp
or
sar
mov
mov
adc
add
inc
out
push
push
xchg
out
xchg
and
or
inc
pusha
arpl
or
test
sbb
fstl
je
push
jo
test
mov
inc
call
dec
push
add
icebp
aam
arpl
test
cld
bound
loope
inc
fs
das
and
sbbb
shlb
aad
and
or
xchg
int3
nop
xchg
sbb
daa
into
cmpb
push
jge
cmpsb
jmp
jmp
shrb
cmpsl
lea
inc
fs
loopne
ja
push
pop
jb
rclb
or
pop
incb
dec
fs
or
and
loope
adc
loopne
bound
mov
insb
pop
clc
pop
mov
sbb
fmuls
mov
stc
sub
orl
push
push
mov
add
jbe
fimuls
inc
add
push
inc
sub
cmp
in
sbb
pop
jbe
notb
pop
sub
sub
mov
mov
dec
push
xor
test
loope
and
mov
adc
lret
es
adcb
and
ja
fcom
sbb
mov
dec
pushf
hlt
repz
sti
xchg
rorb
mov
xchg
jno
es
call
push
jmp
adc
pushl
or
jno
es
mov
dec
fdivrs
mov
lock
mov
jo
aad
mov
and
jbe
movb
add
into
sarb
lret
shl
test
jae
jle
int3
pop
jmp
xor
lods
mov
std
pop
sbb
mov
call
sub
cld
fisttps
push
pop
push
jae
mov
inc
mov
mov
mov
in
or
or
decb
sub
cmp
call
sub
pop
add
or
add
cmp
add
mov
adc
sub
cmpb
add
or
jle
lock
cmp
jo
jns
jge
cmp
jge
add
call
pop
insl
mov
mov
add
xchg
pop
movsl
bound
jg
sbb
or
pop
add
sbb
lcall
adc
jle
call
je
and
cld
aas
mov
pop
xor
loope
push
xor
lret
andb
andb
shrb
dec
or
mov
pusha
mov
mov
inc
repnz
jmp
mov
sahf
rolb
adc
mov
inc
mov
inc
js
not
dec
jmp
cltd
jle
mov
shll
sub
nop
inc
idiv
in
popf
mov
lods
add
adc
lea
push
stos
inc
into
push
fcmovnbe
popa
stos
pop
pop
inc
sub
lods
adc
adcl
es
xor
mov
sbb
xchg
pusha
push
daa
stos
mov
test
addl
adc
stos
and
cmp
mov
add
sub
add
mov
loop
dec
ret
adc
mov
push
jo
adc
xlat
add
cmpsb
ficomps
add
push
lock
mov
jmp
mov
add
xor
bound
jl
sub
pop
jo
movsb
inc
test
jmp
xor
adc
js
incl
xor
lock
icebp
dec
clc
fbld
xor
sbb
cld
xor
xor
or
repz
and
int3
inc
add
push
xorb
and
adc
push
dec
mov
lret
mov
lock
imulb
inc
mov
pop
jne
jbe
pandn
mov
add
inc
mov
pop
or
stos
sub
jle
jmp
ja
pop
mov
pop
js
add
cmp
push
icebp
add
inc
std
cmp
or
adc
add
xchg
push
je
in
mov
imull
ficoms
cmp
pop
mov
xor
aas
jo
jge
add
add
cli
mov
outsb
out
and
das
je
imul
push
add
add
cmpl
cmp
xchg
xchg
enter
inc
mov
add
flds
mov
dec
repz
clc
inc
xor
movb
lock
push
add
add
mov
data16
adc
push
inc
je
enter
inc
jo
cmp
jg
stos
fsubrp
xor
push
mov
sub
push
push
mov
adc
push
test
or
add
call
xor
jb
xor
add
aaa
and
repz
js
add
es
ljmp
call
lea
xchg
js
push
call
mov
pop
les
mov
outsl
pop
push
or
sbb
test
out
adc
ja
adc
add
xor
mov
add
add
mov
popf
shl
mov
mov
jecxz
pop
mov
xchg
clc
hlt
testb
xor
sahf
xor
fdivrs
stc
fwait
int
ds
rorb
pop
sub
push
and
cs
jl
push
push
in
sar
mov
push
inc
repnz
jbe
mov
add
push
mov
addl
int
mov
fildll
pop
dec
xchg
stos
push
add
adc
mov
pushl
sub
lock
cmpl
scas
lea
xor
loop
or
cld
jo
push
lea
add
dec
mov
inc
add
dec
xchg
mov
push
lcall
aam
jle
sub
fcoml
push
push
jb
dec
push
xor
fmuls
sub
add
loopne
nop
fdivs
jo
mov
adc
pop
mov
dec
nop
shrl
pop
rclb
xor
lcall
or
into
mov
addl
into
push
sarb
and
or
ss
shlb
and
mov
mov
pop
jge
mov
lock
movsb
jle
mov
es
cmp
lea
inc
lods
in
add
jae
in
add
test
addl
push
call
rolb
inc
lock
adc
push
lock
cmc
add
mov
push
push
adc
aam
or
sete
loop
jne
mov
mov
xchg
fsubrp
loope
cmp
adc
push
inc
inc
sti
jo
data16
loope
pop
ficoms
adc
mov
rcl
call
sub
ret
leave
cmp
or
or
into
push
add
mov
insl
dec
sbb
mov
sbb
aam
mov
cli
pop
add
mov
daa
dec
mov
sbb
inc
dec
adc
faddl
or
pop
and
push
cld
in
add
or
pop
push
scas
cmp
inc
icebp
and
inc
pop
test
in
adc
inc
xchg
add
lea
and
inc
add
fwait
inc
dec
jns
adc
push
cld
push
adc
lock
mov
adcb
xor
js
mov
push
lds
jb
mov
adc
mov
ja
or
mov
data16
and
lcallw
push
adc
and
and
xor
mov
cli
hlt
arpl
idiv
fnsave
repz
xchg
rclb
fisubrs
xor
std
mov
pop
cmpsb
ret
addl
xchg
cwtl
lods
outsl
and
mov
xor
mov
ljmp
push
sub
add
dec
sar
adc
sub
xor
inc
or
jmp
cmp
or
mov
gs
in
mov
xchg
cmc
pop
lcall
ficoml
add
or
sarb
rcrb
mov
pop
add
mov
lock
mov
mov
push
call
movsl
push
mov
mov
and
sarl
adc
loopne
insb
jle
fmull
scas
mov
sbb
sbb
call
rcr
mov
cmp
push
dec
hlt
add
movsl
add
scas
and
add
imul
inc
test
sbb
scas
lds
popf
pusha
std
mov
rorl
loope
cld
push
les
xchg
inc
add
subb
sti
xchg
bound
jne
push
add
les
hlt
cmp
add
mov
in
inc
cmpb
push
push
pop
aam
dec
loopne
sbbb
add
or
jp
and
cli
jge
add
push
cwtl
pop
lods
adc
adc
daa
xor
ljmp
xor
fmuls
sbbb
int3
daa
pop
sbb
cld
sub
sbb
bound
add
ds
cld
xchg
shrb
mov
rclb
pop
inc
cs
fdivrl
or
notb
stos
leave
dec
mov
mov
mov
pop
addb
outsl
push
xor
add
call
or
add
in
call
mov
push
sahf
sub
daa
mov
push
std
mov
lret
dec
mov
test
inc
mov
std
je
cmpb
decl
js
adc
sub
pop
mov
call
or
sbb
or
mov
push
imul
inc
lea
add
aaa
mov
stos
inc
popf
enter
bnd
push
xor
dec
je
je
or
add
fcoms
push
icebp
or
jb
mov
push
mov
dec
xchg
add
out
ret
and
orb
lcall
ret
sarb
ret
mov
ret
rol
push
das
clc
int
push
mov
outsb
mov
and
aaa
inc
xchg
and
call
mov
shrl
ret
pusha
test
pushw
add
mov
shlb
mov
mov
cld
mov
sahf
push
mov
loopne
movsl
aaa
sar
ret
dec
cli
int3
rorl
je
adc
ret
push
push
clc
icebp
jmp
dec
adc
ret
or
or
or
js
sub
fs
jp
add
popa
push
push
cmp
shlb
loopne
mov
mov
ljmp
test
imul
ret
adc
int
sbb
pop
add
push
test
and
je
je
roll
add
cwtl
rcl
outsl
sarb
sub
pop
rcll
pop
ret
adc
and
mov
xor
jne
jo
adc
es
sub
pop
scas
adc
mov
fiaddl
add
je
jle
mov
out
inc
call
pop
push
add
lcall
aad
adc
cmc
dec
es
test
jnp
add
adc
inc
push
andb
lock
xor
jb
hlt
jp
adc
cli
call
out
xor
mov
adc
cmp
dec
push
loop
jmp
xor
pusha
add
add
jp
jne
push
pop
mov
out
pusha
push
inc
lahf
or
dec
dec
and
pop
test
outsb
add
add
in
loope
subb
out
pusha
xchg
xchg
jbe
call
push
movsl
lods
or
jno
push
ljmp
test
fildll
cli
jne
call
sti
mov
call
incl
add
test
sub
sarb
jle
add
pusha
mov
data16
ja
add
addb
outsl
or
lock
mov
mov
std
iret
loopne
add
jl
inc
pop
or
pop
mov
lea
push
lcall
xchg
mov
loopne
loope
sbb
cmp
add
loopne
or
hlt
add
push
mov
lcall
pusha
pop
fiadds
mov
inc
call
push
bound
sub
jmp
jbe
adcb
or
sub
in
pusha
cmp
jo
push
xchg
in
push
add
sub
mov
or
mov
in
cs
and
and
paddb
in
imul
fs
movsb
add
pusha
cmp
mov
popa
lret
mov
addb
cmp
insb
jne
clc
outsl
cmpsb
std
pop
push
add
js
test
ljmpw
push
jle
xor
mov
and
push
inc
into
and
ret
sub
jne
inc
mov
mov
loop
pusha
mov
sub
sbb
and
cld
ljmp
sub
xlat
or
aas
inc
loope
rcrl
inc
add
and
push
sbb
cltd
sub
in
pop
insb
decl
add
mov
pusha
cmp
mov
push
decl
andl
pusha
or
adcb
jmp
loop
pop
or
imul
sbb
adc
aas
and
ljmp
aaa
sbb
sbb
pusha
adc
sbb
xor
or
fbld
inc
js
loope
mov
and
cmpsl
push
loopne
dec
or
mov
sub
aaa
test
daa
add
das
lcall
and
push
mov
loopne
ret
cwtl
lea
sbbb
loopne
mov
or
fadds
test
ss
mov
inc
jp
xlat
and
mov
push
andb
jo
mov
xchg
add
xchg
inc
stos
loop
loope
cmpl
lock
mov
pusha
adcb
mov
test
add
cli
push
icebp
adc
mov
cmp
mov
xchg
ja
call
loope
jae
add
lock
loopne
cmp
lock
cmpsb
lock
insb
adc
xchg
push
test
mov
push
pusha
push
inc
adc
add
out
loop
push
pop
or
adc
cmpsl
popa
pop
push
aam
inc
in
mov
jl
mov
cmp
adc
outsl
stc
in
push
mov
push
dec
decl
aam
or
inc
pusha
sub
dec
mov
dec
adc
add
std
dec
add
popa
pop
xchg
inc
bound
xchg
or
cmpsb
xor
push
cld
ljmp
lods
inc
ficoms
jne
mov
into
inc
push
push
add
call
or
ret
mov
xchg
test
mov
mov
push
adc
mov
lock
xor
mov
inc
and
mov
sbb
xor
inc
fdiv
mov
or
mov
and
jg
cmp
sub
dec
push
xor
scas
popa
or
cmp
jg
or
adc
add
pop
inc
add
stos
push
ljmp
pop
cmp
push
push
jo
int
add
jo
or
ret
cli
mov
jmp
xorb
jmp
ret
mov
sahf
push
mov
aad
sbb
cmp
inc
hlt
std
jo
add
test
jb
roll
into
cmpb
js
aaa
xor
lock
mov
jo
cmpb
movl
pop
xor
imul
add
cmp
enter
lods
and
lock
hlt
lock
cmp
out
fisubl
cld
test
add
cli
or
and
subb
inc
decb
les
int3
jbe
jb
inc
in
push
mov
test
pop
imul
xchg
add
dec
adc
mov
mov
lret
jo
mov
cld
add
es
push
loop
lock
mov
adc
test
adcl
xorb
hlt
pop
cmc
test
sbb
and
mov
call
jo
shlb
je
cmpsb
outsb
lea
dec
mov
pop
andb
mov
xchg
sub
cmp
adc
lock
adc
in
push
ret
sub
xor
jmp
add
inc
jo
push
or
cmc
call
xchg
jae
daa
mov
sbb
call
xor
jno
or
std
arpl
adc
xor
inc
jae
fistps
mov
pop
fimuls
adc
mov
and
jno
and
scas
ss
jo
add
add
pop
repnz
add
mov
xor
insb
mov
mov
push
push
mov
mov
mov
jo
adc
xlat
clc
sub
jle
lock
and
decl
add
call
loop
aaa
cmp
mov
aas
xor
pop
jp
fdivs
cld
push
push
dec
lcall
sbb
xchg
add
addb
cwtl
jge
xor
fcoms
scas
inc
xor
add
push
les
pop
aaa
xor
sub
add
pushf
lods
adc
add
lock
gs
xor
data16
imul
dec
or
pop
pop
mov
push
mov
sub
cs
and
jge
add
push
pop
xchg
mov
xchg
inc
add
enter
aaa
sub
arpl
pop
int
loope
mov
xor
jle
jge
or
mov
cmp
mov
cmp
ja
clc
xor
loope
test
call
test
rorb
push
dec
in
les
inc
xchg
movsb
decl
xchg
and
or
and
shlb
and
mov
mov
or
icebp
inc
sub
sbb
pop
test
lock
pop
adc
xor
pop
xor
sahf
andb
or
adc
xor
les
loop
xor
bound
add
pop
xchg
jecxz
data16
outsl
fsubl
or
test
jg
aad
call
add
ljmp
mov
xchg
les
stos
xor
push
adc
pop
push
mov
lods
jo
push
sbb
mov
lds
xchg
ss
dec
icebp
mov
push
add
adc
and
xchg
shll
xchg
jo
add
xor
sti
dec
aaa
mov
int
inc
inc
decl
mov
and
add
lcall
enter
lods
push
or
xor
ss
iret
subb
stos
ret
add
cs
adc
test
jmp
or
scas
mov
add
test
je
sbbb
add
xor
add
add
pop
xor
mov
out
mov
shl
loopne
and
adc
and
idivl
add
sbb
outsl
xchg
inc
mov
gs
pop
mov
cmpsl
lock
mov
dec
push
dec
mov
in
xchg
nop
fisubrl
std
adc
inc
out
and
add
jne
xor
decb
mov
add
push
inc
and
mov
push
and
dec
mov
out
sbb
pop
cltd
cli
dec
bound
xorl
or
jo
ret
inc
dec
call
addb
ljmp
nop
incl
testl
popf
call
inc
adc
cmc
aas
xor
into
lock
pop
mov
arpl
daa
pop
jno
call
lock
data16
ljmp
dec
loop
sarb
fidivl
mov
xchg
add
add
or
pop
mov
aad
outsb
outsb
and
sbb
in
cli
sub
mov
add
jo
mov
mov
insb
mov
add
ljmp
idivb
mov
mov
in
push
mov
bound
loopne
mov
push
call
add
incl
xor
je
mov
or
jno
pop
xor
andb
add
adc
adc
or
jecxz
cmp
mov
inc
jmp
ljmp
or
adc
lock
push
push
call
xchg
sbb
mov
pop
scas
cli
divb
mov
and
or
jb
xor
clc
leave
pop
call
lock
jo
sub
jno
movsl
mov
xor
test
adc
sbb
push
pusha
jl
lock
ja
ficoms
mov
xorb
pop
mov
push
fsubl
mov
bound
cmp
jne
pusha
push
popa
xchg
insb
ss
shl
movsb
enter
test
inc
icebp
sbb
mov
movsl
lea
call
xor
adc
pop
xor
call
mov
pop
and
lods
lock
or
sbb
mov
sbbl
adc
inc
pop
test
sbb
jno
sub
mov
xor
add
jo
cmp
in
or
jo
shlb
or
and
aaa
test
mov
loopne
hlt
icebp
inc
add
mov
xchg
addl
and
addl
hlt
add
xchg
aad
and
add
mov
mov
cwtl
push
push
jbe
test
add
rcrl
jle
aam
or
sbbb
nop
push
xchg
adc
pop
fs
or
mov
je
mov
test
inc
insb
sbb
dec
add
loopne
scas
jl
div
pusha
mov
xchg
add
and
rol
dec
daa
pop
cmp
pop
mov
or
mov
inc
nop
xor
inc
movsb
xchg
sub
push
loop
and
adc
add
sub
add
ret
adc
sbb
pop
fmull
roll
fwait
mov
scas
out
cltd
sub
push
int3
jmp
add
mov
mov
pop
ficoms
mov
push
mov
add
add
adc
add
push
cmp
pop
xor
mov
push
inc
adc
mov
stos
into
mov
mov
pop
sbbb
ficoml
mov
clc
decl
xchg
cmp
hlt
jmp
sub
inc
ljmp
and
cmp
shlb
add
sub
sub
push
bound
icebp
mov
add
and
lock
xchg
inc
sub
inc
jae
and
xor
push
and
outsb
dec
push
push
sub
ljmp
cs
dec
adcb
lea
std
lea
sbb
shll
outsl
pop
fidivl
xchg
jg
and
mov
adcl
xlat
xchg
mov
cld
rolb
add
pusha
xor
jecxz
sub
inc
push
rorl
addb
cmpsb
push
loopne
or
mov
mov
test
mov
push
fdivp
xor
int3
and
inc
out
shll
sub
lock
call
adc
inc
xor
shr
add
lock
mov
push
push
or
nop
add
dec
cs
popa
in
cli
or
ljmp
movsb
insl
int
pusha
inc
movsl
rcrl
add
dec
xchg
push
pushf
loop
jmp
call
push
dec
testb
inc
sbb
mov
jmp
mov
push
adc
test
pop
mov
loop
and
sub
ljmp
mov
mov
adc
push
ret
inc
scas
lods
mov
mov
clc
mov
adc
imulb
cmp
add
fisubrs
jl
shlb
push
and
xchg
push
sahf
pop
add
es
inc
fcomps
add
jo
call
daa
push
call
add
gs
or
sarl
mov
inc
cli
xor
xchg
mov
inc
inc
xor
pop
fbld
mov
movntq
add
sbbl
ja
push
lea
add
shll
mov
pop
fbld
movnti
and
das
pushf
shlb
lock
add
mov
mov
divl
add
pop
in
xchg
or
adc
add
ret
rclb
dec
inc
sarb
or
push
rcll
and
xchg
xchg
inc
ror
dec
mov
nop
mov
adc
push
ljmp
cmp
add
js
sub
add
shr
rolb
xchg
dec
xor
inc
sub
test
inc
mov
scas
loope
add
pusha
popa
lea
cmp
mov
dec
inc
outsb
mov
sub
push
add
sub
lods
add
ljmp
lcall
cmc
fsub
add
inc
mov
int3
loopne
bnd
rcl
adc
bound
add
or
dec
fwait
lret
inc
andb
sti
int3
jg
jg
clc
jbe
mov
jb
push
popa
fcmovnbe
movsb
add
and
mov
cmpsl
icebp
push
call
push
dec
test
shlb
stos
jo
loope
pusha
add
push
ljmp
mov
jl
mov
scas
adc
jns
sbb
fwait
sub
popa
add
add
mov
and
or
or
ret
add
mov
nop
add
popa
ds
sub
and
xor
mov
push
mov
sbbb
adc
xor
xor
push
lcall
mov
pusha
xor
add
mov
or
adc
loop
add
std
push
vcvtusi2ss
cmp
into
dec
test
adc
sub
xchg
xchg
add
inc
add
add
pop
jp
les
enter
fisubrl
dec
loopne
and
mov
adc
loopne
call
dec
test
pusha
or
sbb
notl
dec
scas
sbb
popa
pop
and
popa
push
adc
cmp
and
les
pusha
sahf
push
mov
jo
mov
loopne
clc
popl
lcall
loope
int
aaa
scas
sbb
pusha
xor
mov
addl
pusha
mov
ret
mov
add
je
pusha
pop
push
cli
popa
imul
pusha
push
mov
dec
inc
mov
stc
popa
inc
mov
xor
cmc
push
inc
jne
stos
stc
popa
mov
adc
loopne
pushl
push
test
adc
pusha
xchg
test
hlt
add
or
cs
mov
push
test
xor
inc
ret
sub
dec
sti
xchg
loopne
adc
stos
mov
add
dec
xor
cld
or
push
in
or
fs
out
mov
dec
bound
cmpb
add
jo
loopne
add
aad
enter
arpl
adc
push
bound
popa
dec
push
push
lret
ret
cli
add
gs
and
dec
movsb
mov
push
or
idiv
or
loope
push
repz
push
daa
mov
mov
es
mov
bound
jmp
loopne
cwtl
mov
pop
frstor
adc
or
pusha
cmp
loopne
loopne
dec
add
mov
loopne
cmp
xor
or
or
inc
jecxz
mov
enter
inc
aad
inc
cld
mov
add
or
lods
loopne
popa
sub
sahf
add
push
pop
notb
or
push
in
push
pop
loope
stos
pop
inc
ljmp
dec
and
sbb
in
insb
push
jmp
loopne
push
mov
mov
push
or
add
pop
decl
loopne
cmp
daa
add
stos
jbe
mov
adc
dec
jne
xchg
push
and
out
fs
dec
mov
push
popa
fnstcw
inc
xchg
mov
jbe
cmp
push
jo
sub
cmpl
lret
sub
ljmp
hlt
lock
xor
unpckhps
jmp
xor
xchg
adc
test
pop
jo
aam
sbb
pop
lock
mov
pop
outsl
ljmp
lock
adcb
sbb
xor
add
add
xor
add
xchg
imul
ljmp
add
cmpsb
pop
pushf
inc
push
xor
test
xor
add
lock
fdivs
clc
outsl
repnz
sub
xor
je
mov
sub
pushf
push
xor
and
adc
call
lock
mov
lar
jmp
add
lods
pusha
sub
inc
data16
aaa
lcall
xor
push
bound
hlt
inc
leave
ret
jnp
clc
call
push
add
or
or
push
sub
je
clc
popf
clc
and
sub
and
adc
mov
cmp
lock
push
mov
fbstp
sarb
add
adc
push
inc
call
rclb
push
adc
mov
mov
ret
mov
mov
cmpb
cmp
sub
outsl
pop
cmp
cmp
mov
jge
les
jp
fidivrs
je
call
mov
daa
adc
adc
out
frstor
sbb
outsb
or
aas
add
sahf
mov
push
pop
mov
xor
adc
add
icebp
jno
lock
ljmp
jo
test
xor
scas
xor
or
sbb
mov
sub
adc
or
xchg
test
mov
andb
call
fbld
jmp
xor
repnz
pusha
jnp
dec
cs
xor
xchg
test
adc
bound
lock
push
cmc
sub
lods
loop
and
cmp
jg
pop
je
xchg
incb
test
push
push
mov
sub
xor
pop
pop
sub
mov
lock
pop
rclb
push
inc
call
clc
incl
ljmp
xorb
mov
adc
not
movups
testl
xor
cmp
fists
add
in
mov
mov
add
sbb
dec
adc
ljmp
aas
add
lock
cli
sub
and
mov
mov
adc
and
mov
jmp
call
daa
jno
mov
push
scas
testl
mov
gs
sahf
je
popa
scas
fdiv
adc
cmpsl
call
jnp
adcb
inc
aaa
mov
loop
add
inc
adc
movsb
mov
and
aaa
add
inc
les
test
pop
enter
lock
jne
xor
cmp
divb
jae
lock
mov
movsl
pop
fistl
or
je
mov
cmp
cld
and
add
js
adc
or
incb
mov
js
or
add
out
loopne
mov
add
dec
dec
pop
popa
or
push
loop
lock
pop
xlat
stos
fs
inc
icebp
repnz
mov
jne
dec
adc
xchg
mov
dec
add
fimull
lock
adc
jbe
test
pop
sub
jno
inc
or
mov
add
rorb
cmp
xchg
shr
cld
mov
adc
xchg
cmpb
add
lds
push
mov
test
mov
mov
mov
dec
xor
stc
pusha
clc
add
lock
add
or
mov
xchg
cmp
pop
clc
jmp
push
adc
cmp
inc
mov
and
imul
add
mov
add
adc
xor
sub
cmp
jo
pushw
cli
sbb
outsl
fwait
incb
mov
sub
or
es
addb
hlt
pop
or
pop
gs
pop
or
adc
or
scas
in
dec
stc
je
push
sbb
iret
jmp
mov
sub
call
push
inc
mov
or
sbb
mov
jge
adc
inc
call
jo
jle
pop
push
adc
push
push
sbb
xor
xchg
adc
mov
mov
cltd
test
inc
add
incl
dec
data16
sbb
cmp
or
adc
jo
ret
arpl
inc
rorl
pushf
aam
jo
push
mov
adc
in
push
shrb
lock
push
ss
pop
inc
mov
dec
xor
sub
shrl
jo
mov
mov
and
sbb
aam
rorl
push
xor
lds
mov
add
jo
ds
push
mov
pusha
inc
arpl
repz
adc
imul
sahf
adc
adc
ja
cld
dec
pushl
jecxz
jo
ficoml
clc
xor
jns
aam
inc
jp
xorb
jno
lods
mov
mov
into
aam
ljmp
jl
sub
out
stos
and
fisttpl
sbb
test
divl
xchg
inc
sti
or
xor
adc
sub
loop
test
inc
jmp
push
outsb
dec
mov
mov
jbe
cwtl
pop
xchg
mov
xor
jge
mov
fsubl
je
pushl
jno
sbb
nop
jne
push
icebp
aaa
adc
jmp
sahf
adc
inc
and
mov
adc
push
cmpsb
pop
push
test
leave
hlt
and
push
js
faddl
jb
je
addl
xchg
xor
gs
std
pop
rorb
and
rdtsc
or
pop
jo
test
je
sub
xor
or
loopne
add
lock
or
subb
pop
sub
xchg
add
jp
rclb
jb
loopne
pusha
mov
idiv
int
xor
mov
or
lock
mov
bound
call
into
xchg
push
cmp
mov
and
jl
dec
or
add
add
or
test
push
cli
je
lea
pop
pop
add
cmp
mov
cmp
and
sbb
sub
je
test
fs
jo
aad
or
fcoml
add
push
mov
in
insb
pop
cld
pusha
inc
pusha
cmp
xchg
outsb
xchg
mov
jmp
add
cmp
push
add
jo
or
and
and
jmp
add
add
pusha
movsb
dec
dec
cld
mov
rclb
add
push
or
sbb
cmp
into
fidivrl
add
add
into
popf
sub
mov
test
cmp
xchg
pop
rorb
sub
adc
and
pop
test
push
jmp
and
add
frstor
push
je
idivl
pusha
jl,pn
inc
and
ja
xchg
mov
mov
sbb
jle
ljmp
push
dec
adc
mov
cmp
cmp
push
add
add
clc
sub
lcall
addb
cmp
stos
rcrl
pop
add
ljmp
cmp
or
add
add
or
pop
add
rcr
adcb
fnstcw
jmp
cwtl
adc
push
pop
sbbb
rcrl
cmp
push
aad
dec
es
in
test
jnp
out
mov
mov
lock
adc
insl
shl
clc
inc
adc
xchg
je
dec
push
or
inc
std
pop
sbb
adc
call
imull
add
dec
push
adcb
add
inc
and
jo
inc
adc
mov
cmp
mov
push
int
loope
or
mov
andl
and
dec
inc
xchg
mov
inc
inc
pop
mov
fs
add
insl
cmp
mov
ret
sbb
fdivrp
je
in
add
push
idivb
adc
push
adc
outsl
outsl
adc
ffreep
push
inc
adc
add
push
pop
and
not
and
add
mov
sbb
mov
shlb
add
xchg
fs
dec
xorb
push
mov
mov
inc
inc
cmp
add
inc
cld
pop
ja
xchg
lock
cmp
test
mov
inc
cmp
mov
cs
je
add
add
cwtl
jp
adc
sahf
add
mov
mov
insl
sbb
cmp
jge
je
push
and
sub
sti
inc
test
divb
fisubrs
inc
stc
ljmp
cmp
mov
ret
or
adc
add
fs
mov
icebp
data16
clc
jbe
or
cmp
adc
or
pop
push
sar
aam
test
shlb
test
and
sbb
cmp
sub
and
ret
xor
stos
leave
inc
pop
inc
cld
roll
orb
cltd
and
cmp
aaa
jbe
lods
lods
add
mov
jmp
loop
rorb
mov
mov
inc
mov
rorb
test
test
push
and
xchg
rcl
xchg
or
gs
add
mov
sbb
imul
sarb
pop
addb
sub
ret
call
push
push
add
pop
rcrb
sbb
xchg
loop
push
add
and
orl
cmpl
jge
pop
mov
push
push
sti
stos
rcr
es
adc
push
les
mov
pop
mov
xor
add
outsb
pusha
push
inc
es
pushf
adc
pop
dec
cli
adc
sbb
enter
mov
sbb
add
push
jg
add
xchg
repnz
adcl
clc
or
or
inc
dec
aam
xlat
loopne
dec
shl
xor
add
inc
adc
cs
add
adc
imul
faddl
andl
sub
subb
mov
adc
testb
add
idivl
inc
inc
addb
add
inc
pushl
pusha
xchg
xchg
and
push
mov
jecxz
mov
cmovp
jmp
loopne
mov
lods
inc
push
or
stc
fisubl
sub
wbinvd
mov
repnz
sti
scas
and
or
mov
mov
aad
lock
ja
adc
fs
sbb
stos
movsl
or
cmp
loopne
fs
decl
mov
pop
cmp
lock
sub
mov
test
mov
dec
xchg
jle
inc
incl
adc
adc
pop
mov
push
lods
jp
lcall
adc
xlat
pusha
jg
call
frstor
jmp
in
inc
pop
test
and
fs
arpl
cmp
out
push
pushf
and
sub
loop
push
pusha
and
and
xchg
pop
push
fucomi
or
mov
mov
ljmp
mov
xor
adc
loopne
adc
add
mov
pusha
loopne
mov
inc
pusha
je
mov
xchg
je
loopne
sti
cs
jne
adc
sbb
lcall
mov
mov
adc
mov
adc
pop
int
shll
and
call
xor
lahf
xchg
adc
or
and
or
loopne
mov
xorb
push
mov
adc
js
gs
jl
inc
lds
pushf
pusha
cmpsl
dec
and
add
add
in
dec
loope
out
aam
push
sahf
lods
push
xorl
and
or
xor
ljmp
mov
jle
mov
test
pop
test
test
mov
aaa
test
aaa
movsb
xchg
popa
int3
pop
pop
int3
mov
xlat
inc
adc
add
loopne
ret
lcall
loopne
lea
test
xchg
push
push
xlat
leave
test
or
sub
aaa
cmp
adc
add
dec
call
cld
xchg
fwait
push
pop
push
in
inc
arpl
incl
and
flds
loop
ret
fbld
imul
mov
pusha
push
pusha
in
pusha
ret
sub
ror
outsb
mov
push
out
mov
inc
mov
add
adc
adc
push
adc
fcmove
mov
hlt
data16
dec
pusha
adc
movb
ja
lea
repnz
inc
aas
fdivl
subl
add
mov
pushf
loopne
adc
mov
jo
fisttpl
lods
sub
add
out
xchg
sar
mov
into
stos
test
pushf
mov
and
inc
icebp
add
cld
frstor
mov
pop
sub
sti
push
lock
dec
add
pop
mov
jbe
xor
sbb
lock
mov
subb
sub
or
movb
push
or
fs
push
sbb
sbb
idiv
pop
dec
es
mov
xorb
ljmp
push
xor
test
in
call
call
mov
dec
xchg
mov
push
dec
lock
add
inc
xchg
in
add
clc
call
dec
mov
add
jo
xor
jmp
push
test
jnp
lock
hlt
cltd
mov
hlt
inc
push
cltd
rorl
mov
add
mov
fsubrs
sbb
stc
and
mov
push
push
or
xor
push
popf
sarb
fwait
dec
sbb
lea
jb
mov
and
xorb
push
pop
mov
mov
sar
cmp
insl
addb
xor
mov
or
push
mov
mov
inc
xchg
fs
mov
inc
inc
or
adc
push
out
inc
sbb
mov
call
push
xor
rcll
or
or
mov
or
pusha
jo
call
xor
jno
inc
or
jo
cmp
stos
lock
jg
inc
xor
add
mov
jl
jo
mov
mov
mov
clc
call
lock
mov
xor
jne
orb
jo
add
adc
adc
sbb
add
push
js
aaa
addl
aam
sbb
mov
push
sti
idivb
lock
inc
adc
add
jo
mov
adc
xchg
inc
js
hlt
add
xchg
push
sbb
xor
or
fcomps
adc
sub
add
fisttps
sbb
push
xor
pop
adc
cmp
fisttpl
sbb
jns
push
jo
fnsave
std
xor
push
test
in
add
lock
sti
fnsave
sub
adc
inc
dec
mov
nop
hlt
lock
pusha
pop
je
addl
xchg
mov
enter
dec
or
mov
sub
inc
sbb
jg
incl
cmp
dec
lock
and
mov
mov
lcall
cmp
mov
cmp
mov
cmpb
mov
pop
jno
or
sub
jo
insb
ret
adc
rcl
push
fcmovne
add
jno
fimuls
mov
sahf
adc
cmp
sti
jg
mov
xchg
and
jno
or
mov
ja
or
cmp
inc
cbtw
subb
add
mov
mov
jbe
std
or
add
out
or
mov
scas
inc
adc
mov
mov
inc
fadd
jno
mov
mov
mov
xchg
fwait
mov
jg
lea
add
sbb
fdivs
xchg
xor
mov
scas
jp
test
nop
mov
aad
icebp
sub
flds
cli
mov
nop
jb
add
adcb
mov
and
add
incl
jno
popf
inc
lock
jo
or
pop
add
mov
inc
push
ret
cmp
jmp
cmp
add
push
sub
decl
dec
mov
je
xor
mov
sbb
xorl
sub
xchg
mov
pop
out
orb
fistl
dec
push
jbe
adc
call
andl
cmp
ja
push
mov
repz
cmc
insb
cltd
jle
xchg
jo
add
dec
shrb
push
pop
add
mov
mov
scas
je
xor
pop
js
mov
xchg
jbe
add
adc
sbb
xorb
jg
andb
or
mov
jo
loopne
fimuls
inc
lcall
adc
repz
xor
pushf
fcoms
jg
mov
lock
mov
jo
xchg
decl
adc
js
add
es
mov
push
mov
dec
xchg
mov
adc
adc
fistl
jo
pop
test
adc
bound
add
mov
xor
inc
pop
inc
test
incl
loope
repnz
pop
mov
push
jbe
push
xor
add
xor
add
rclb
push
lods
jo
inc
adc
rclb
int3
xor
adc
pop
push
loopne
xchg
xor
pop
jl
xchg
push
and
insb
aaa
cwtl
inc
add
and
adc
xor
xor
fidivrl
adc
add
mov
mov
jo
dec
loope
add
xchg
ds
inc
stos
cwtl
mov
mov
push
mov
loopne
xor
xchg
jo
imul
add
cld
add
fdivr
pop
sbb
push
xchg
sbb
push
nop
inc
mov
or
push
adc
decl
push
or
mov
nop
rcrb
ds
jecxz
jge
and
push
mov
dec
jb
or
sbb
lret
sbb
cmp
xor
ret
daa
mov
mov
add
call
mov
xor
notl
xchg
pop
loope
pop
adc
xchg
lea
aaa
call
jne
out
loop
or
scas
sub
adc
dec
mov
pop
add
invd
sub
out
sbb
loopne
jmp
decb
push
ds
mov
jmp
mov
xor
pushl
je
and
sub
jno
out
and
pop
mov
jne
shrb
pushl
je
shl
jg
call
mov
xor
out
jp
pop
pop
lock
xor
mov
xor
out
add
mov
sbb
lret
push
inc
ret
aaa
cld
dec
jno
lock
jmp
pop
outsl
xor
testb
mov
mov
shlb
jg
adc
or
pushf
lock
adc
push
fdivr
mov
or
sbb
mov
sbb
and
aam
mov
adc
gs
dec
or
and
push
orl
sbb
push
and
sub
sbb
sub
hlt
xchg
lret
push
mov
xor
lret
mov
insl
call
cwtl
push
mov
mov
and
testb
add
je
jo
adc
dec
mov
dec
cli
pop
adc
popa
inc
or
push
sub
testl
add
inc
xor
lock
mov
or
jp
jmp
pop
add
mov
add
cli
not
fildl
pop
fdivrp
and
cld
or
scas
hlt
adc
add
lds
push
sahf
push
xchg
pop
adc
adc
adc
divb
mov
repnz
sti
push
push
adc
sbb
dec
fsubs
pop
adc
ficoms
loopne
dec
loopne
add
outsl
shr
mov
and
ret
jo
sbb
lcall
lcall
ss
sub
adc
nop
dec
aam
imul
push
adc
sar
add
subb
fcomp
push
inc
cmp
das
add
push
xchg
inc
cmpsb
fistpl
push
or
sub
inc
cmp
shlb
jo
add
je
call
rcll
add
mov
test
xchg
sbb
pop
push
xlat
xchg
push
call
jno
inc
fmull
mov
and
adc
outsl
call
sarl
add
pop
or
ret
test
xor
bound
and
dec
jl
outsb
or
mov
pop
insb
into
adc
push
scas
add
cmp
or
lock
out
ret
mov
mov
iret
jne
adc
xorl
js
mov
mov
push
and
push
and
int3
test
mov
pop
jmp
inc
adcl
pushl
test
leave
cmp
call
sub
cmp
jl
xor
mov
xor
les
xor
rclb
xchg
add
shrl
or
rol
sub
or
or
inc
roll
push
mov
rolb
imul
popa
int
add
lret
pop
pop
push
push
jbe
push
xorb
rolb
rolb
decb
rorb
nop
je
or
lahf
imul
jle
ret
jmp
xor
push
mov
rolb
push
add
mov
push
jl
push
mov
adc
dec
and
add
add
inc
add
outsl
pop
inc
in
sbb
scas
push
cmp
shrb
add
push
clc
add
dec
ret
fistps
mov
jmp
lods
add
cwtl
push
xor
push
or
je
test
or
pop
mov
push
xchg
sub
jl
idiv
stos
inc
cmp
add
bound
aam
or
or
sub
add
jecxz
ss
xchg
sub
add
add
inc
ja
mov
aas
push
pusha
xor
ret
xchg
rolb
push
pop
dec
inc
push
loopne
pusha
pop
xorb
pop
add
popa
add
or
sub
or
add
adc
jg
jno
bound
lea
lods
inc
xor
stos
add
call
mov
mov
xorb
fistpll
add
shrb
gs
inc
pusha
adc
cmp
inc
adcl
ret
xchg
test
push
shrb
in
mov
add
ss
lods
out
loop
aas
fs
mov
hlt
inc
ljmp
mul
sub
mov
decl
xchg
dec
ret
add
add
or
ds
loopne
inc
rcrb
shr
mov
push
mov
xor
or
mov
inc
cmp
pusha
movsl
mov
lea
data16
or
add
dec
inc
rcr
pop
js
or
gs
andl
dec
pusha
cmp
shrl
dec
pop
loope
ret
cs
hlt
jmp
pusha
lods
jg
push
fsubrs
aas
jp
insl
movsb
add
dec
dec
mov
mov
loopne
mov
ja
add
mov
pusha
sbb
psubq
shlb
lock
xor
inc
xchg
loop
jne
sub
divb
outsb
lea
cmpsl
lock
xchg
ficompl
orb
jne,pn
movzwl
movsb
outsb
push
outsl
mov
cmp
in
adc
push
sbb
push
mov
ret
lods
out
enter
mov
nop
gs
enter
inc
aam
stos
mov
inc
cli
scas
popa
and
adc
xor
push
icebp
pop
clc
pusha
lea
bound
push
test
lock
add
fs
ss
and
test
pop
adc
fwait
push
je
or
mov
jg
jbe
jb
inc
arpl
addb
mov
pusha
jp
mov
mov
mov
cli
orps
xor
scas
test
pop
cli
add
and
pop
mov
lock
add
xor
mov
loopne
imul
data16
call
test
add
insb
mov
cs
sbb
inc
call
cmpsb
insb
mov
jne
sbb
mov
cwtl
or
or
mov
adc
data16
out
and
popa
xchg
test
lods
pop
ljmp
loopne
jo
xor
cs
cwtl
add
hlt
sbb
push
ss
mov
adcb
push
jne
xor
inc
pop
insb
fisttpl
shlb
jo
xor
insb
inc
adc
movsb
div
push
aas
pop
test
repnz
test
das
mov
jecxz
add
sbb
ficoml
nop
cmp
inc
stos
sbb
pop
roll
loopne
test
insl
mov
nop
out
pcmpgtd
fwait
hlt
daa
or
inc
mov
push
push
push
pop
pop
sbb
mov
push
mov
inc
jo
and
out
add
lock
mov
add
aas
mov
xor
push
mov
aas
add
add
call
les
dec
clc
jne
mov
scas
enter
outsl
sub
mov
pop
mov
xor
and
negb
out
int3
xchg
adc
fdivr
orb
sti
fwait
test
mov
or
adc
add
add
or
jg
jo
insb
mov
lock
test
repnz
jl
push
movsb
jb
pop
lock
sub
cmpsb
adc
inc
mov
xor
pushl
lods
adcb
push
aaa
inc
in
and
push
push
fisttpl
sbb
jo,pn
or
push
pop
cli
sbbb
test
sub
push
and
jp
or
lret
or
mov
mov
je
xor
adc
adc
xor
sahf
pop
roll
cmp
js
icebp
jmp
test
sbbl
or
jl
jmp
cmc
mov
mov
cmp
push
xchg
mov
idiv
add
dec
jo
cmp
or
inc
xor
adc
xor
or
mov
ljmp
dec
inc
mov
subb
sub
out
add
push
jle
lods
out
pop
push
xchg
mov
jo
xor
jl
sub
push
clc
fldt
rcr
mov
mov
mov
xor
push
xor
call
push
je
adc
and
xorb
pusha
dec
sbb
aam
jo
xor
mov
xchg
fisubs
sbb
pop
jb
shr
pop
jl
incl
add
dec
je
inc
pop
je
sub
mov
rcl
call
movsl
xchg
cli
inc
dec
loopne
mov
xchg
jo
mov
and
subb
andb
jge
adc
lret
or
mov
call
jmp
gs
in
pop
and
mov
addl
call
dec
jecxz
dec
cmp
iret
jge
aad
add
or
adc
jae
or
clc
and
push
pop
mov
std
dec
adc
add
pop
jmp
fdivr
adc
xor
dec
aad
in
leave
cmc
test
push
pusha
call
adc
jb
lret
lret
push
or
pop
and
cmp
xacquire
int
mov
scas
ja
inc
insl
mov
out
sbb
adcl
or
adc
ds
ljmp
pop
or
mov
outsb
mov
xor
les
cmpsb
cmp
and
jae
sub
stos
lcall
ret
mov
mov
add
cld
inc
cld
cmp
lcall
xlat
fstl
mov
add
xor
add
add
mov
incl
shll
mov
fucomip
xlat
cmp
jne
add
add
mov
fidivrl
mov
and
add
cmp
mov
pop
insb
xchg
add
inc
add
cs
mov
hlt
mov
dec
rorb
js
push
icebp
xchg
pop
call
cmp
add
dec
add
roll
mov
pusha
jl
cld
movl
cli
cmp
jp
adc
hlt
and
enter
jb
push
pusha
lock
lock
dec
fistpll
in
add
pop
call
push
cli
inc
bound
push
push
or
lock
adc
negb
xchg
push
push
subl
and
push
add
cli
push
mov
cmp
je
rolb
cmp
test
sub
adc
mov
xor
xor
push
pop
dec
dec
xchg
ds
xor
sub
pop
add
je
idivl
sar
add
adc
mov
popf
nop
lret
push
push
inc
scas
lret
lcall
xor
cli
in
cs
dec
sti
mov
add
je
popa
sbb
or
mov
clc
add
cwtl
and
mov
dec
add
adc
lods
mov
pop
add
cmp
push
add
push
xor
pop
adc
hlt
int3
xchg
sub
cld
cmpsb
and
clc
lds
xchg
mov
and
jo
or
pop
and
jmpw
inc
pusha
dec
incl
mov
mov
fwait
inc
xchg
decb
and
inc
aam
jne
add
mov
xchg
mov
fdivrs
inc
movsb
push
push
add
pop
inc
mov
test
test
or
lock
jg
cli
xor
sti
or
es
pop
jne
push
jb
addb
pop
jo
inc
inc
adc
adc
int3
push
xor
inc
loope
inc
in
cli
cs
das
popa
loopne
decl
push
pop
loopne,pn
jo
sub
or
decl
call
jno
jp
sbb
mov
pushf
repnz
call
pushf
jne
shrb
xchg
pop
add
jo
push
adc
mov
mov
inc
call
xor
rolb
add
loop
adc
xor
mov
cmp
enter
mov
adc
lods
adc
cmp
je
adcb
call
sbb
push
xor
loope
jle
test
pop
mov
push
add
add
push
mov
mov
enter
inc
adc
mov
dec
call
test
movsb
adc
cmpxchg
sbb
nop
icebp
cmp
adc
testb
ljmp
mov
and
push
push
jnp
pusha
jo
fists
imul
pop
xor
and
mov
mov
xor
mov
scas
pop
mov
adc
push
test
or
xchg
or
xor
mov
lods
adc
shrb
orb
sub
sti
repnz
mov
sub
fistpll
jno
xchg
das
clc
pop
jl
add
mov
adc
and
test
pop
inc
sbb
xchg
pop
sarb
dec
call
dec
inc
test
cmc
mov
dec
xor
lock
das
jmp
sti
jne
mov
ja
lret
pop
and
into
mov
inc
sbb
mov
adc
hlt
fwait
mov
pop
dec
xchg
add
incl
ret
push
add
inc
ljmp
mov
lock
or
mov
or
inc
loope
inc
call
repz
popa
decl
mov
jb
pop
or
add
cwtl
fdiv
cmpsb
decb
or
pop
dec
adc
sub
or
jo
mov
push
mov
push
or
leave
aaa
and
rol
push
enter
pop
popa
mov
iret
rcrb
add
lods
or
inc
rorb
push
add
jmp
sbb
test
push
cmp
rcrb
xchg
push
ds
fbstp
mov
fcmovnb
es
mov
in
add
lods
mov
jo
jbe
mov
adc
movsb
inc
cli
sub
mov
inc
outsb
rcrb
and
call
push
sbb
popa
sbb
data16
ljmp
testl
imul
cmp
loop
fwait
mov
ss
mov
sbb
inc
adc
mov
mov
push
mov
push
adc
fcompl
test
fdivp
addb
jp
in
xor
add
push
sub
add
nop
call
jmp
mov
push
xchg
and
je
xor
push
les
jne
hlt
mov
cli
out
lea
imul
cltd
mov
cmp
sbb
cmpsb
mov
out
push
mov
push
adc
mov
ljmp
adc
push
enter
insl
adc
lods
addl
in
test
jo
xor
call
pusha
jmp
test
cmp
and
outsb
sbb
and
mov
in
add
or
addb
sbbb
test
cli
push
jns
mov
cmp
sbb
pop
inc
insl
xchg
inc
jecxz
adc
mov
xchg
xchg
add
pop
enter
shrb
and
cmpl
push
outsl
scas
jle
in
mov
pop
xchg
or
add
test
lret
les
test
jb
cmove
int
push
inc
add
sbb
jl
add
lahf
mov
pusha
imul
cmp
add
push
ds
add
add
sub
add
pusha
push
add
push
loop
imul
pushl
sub
dec
push
jne
add
xchg
push
mov
int3
lods
pop
in
dec
inc
push
inc
rolb
mov
mov
mov
ss
adc
ret
xorl
cmp
and
mov
jle
adc
pop
cmp
xchg
adc
mov
push
and
sbb
ds
xchg
into
xchg
mov
in
and
mov
dec
xchg
shlb
or
rorb
push
cmp
jae
nop
nop
inc
in
and
adc
add
rolb
cld
jne
mov
jb
cli
mov
add
mov
or
aas
repnz
shlb
and
pop
shrl
mov
pop
cmpl
xor
inc
gs
xchg
push
xor
test
and
scas
cld
mov
add
xchg
ret
sbb
inc
sub
test
mov
lock
lock
and
fwait
rclb
sub
push
mov
clc
lea
rolb
mov
bnd
or
adc
push
adc
add
inc
jge
lods
sti
loopne
jecxz
add
shl
jne
jae
popa
push
mov
inc
mov
cmpsl
pusha
push
add
adc
push
push
mov
sbb
ror
dec
jb
decb
inc
adc
inc
in
popa
outsb
cmp
xchg
jp
adc
jmp
jns
jge
and
adc
push
add
mov
add
mov
cld
cli
push
sub
cmp
ja
lock
arpl
cmp
sbbb
jbe
inc
and
add
dec
je
sbb
pusha
je
test
data16
enter
push
push
inc
push
inc
data16
clc
ljmp
push
inc
loopne
and
push
bound
dec
push
popa
push
adc
adc
push
push
imul
mov
pop
push
xlat
add
popa
jo
push
add
xlat
sbb
je
adc
adc
add
add
add
mov
ljmp
lock
loopne
mov
push
or
in
pop
sti
jmp
in
mov
add
or
shll
je
cmp
shlb
sbb
mov
or
mov
pop
inc
loopne
incl
or
popa
mov
pop
xchg
jle
adc
dec
and
insb
add
ss
mov
test
mov
sbbb
test
ror
push
xor
add
stos
and
popf
or
pop
add
lods
sub
cmpsb
add
stos
adc
addb
test
decl
or
hlt
loopne
lea
das
call
imul
adc
push
add
push
pop
mov
pop
loope
fsubrp
js
push
ss
push
mulb
mov
cmc
jmp
arpl
xchg
pop
incb
inc
inc
mov
rclb
mov
popa
mov
stos
and
xchg
cmp
jle
mov
or
enter
sub
push
shl
pop
int3
inc
jmp
push
pop
xchg
popa
enter
adc
lock
inc
test
inc
call
test
shl
loope
cltd
sub
in
add
add
je
pusha
pop
push
adc
mov
movsb
bound
lock
ljmp
xchg
add
data16
xrelease
mov
loopne
int
add
or
in
pusha
and
sub
fimull
subl
sbb
push
push
mov
jl
adc
and
mov
cmp
xor
inc
dec
xor
ror
fiaddl
dec
test
adc
ss
mov
pusha
xchg
push
popa
mov
stos
push
pop
add
pusha
and
push
sub
add
movsb
scas
jb
add
adc
or
inc
outsb
out
je
cs
xchg
jno
sti
gs
adc
mov
jle
inc
out
inc
les
addl
subl
push
sub
xchg
jne
addb
push
gs
pop
js
jl
stc
xor
push
cld
fadds
xor
xchg
inc
add
add
adc
sti
loopne
push
adc
cmp
add
mov
inc
inc
or
addb
or
and
lcall
push
add
sti
stos
ret
sub
stc
or
mov
jmp
andb
inc
pop
fs
jl
pop
test
and
add
add
or
mov
mov
movb
mov
jmp
add
ds
idiv
push
mov
repz
pop
mov
or
push
sub
flds
jp
jo
jbe
and
push
mov
sarb
addb
push
and
in
mov
push
dec
lea
nop
sbb
or
scas
and
incl
xchg
icebp
add
or
add
lea
cmp
push
add
ljmp
sub
aaa
movsl
cmpl
and
dec
xor
lods
mov
shll
lds
xor
sbb
cmp
in
clc
fstpt
or
lret
or
ds
or
ret
std
mov
incb
icebp
pop
and
inc
imul
cltd
lock
mov
or
mov
push
or
loopne
mov
fbstp
sti
in
mov
xor
xor
movsb
inc
adc
mov
push
adc
inc
mov
mov
or
mov
xchg
aam
mulb
mov
sarb
push
jge
loopne
rol
mov
ja
lods
sbb
ss
imul
cltd
dec
das
jg
lret
cltd
add
data16
subb
jmp
or
orb
fistpll
pop
je
cli
inc
lock
icebp
rdmsr
jmp
fcmovb
es
jno
call
cmc
push
pop
push
inc
sub
aaa
shlb
outsl
and
jp
icebp
or
popa
loop
push
or
cmc
mov
mov
pop
test
jae
lret
lock
and
subb
nopl
and
mov
mov
je
test
aas
dec
je
ret
and
adc
mov
loopne
sbb
mov
lea
add
jne
sub
push
mov
jb
push
and
xor
inc
lock
jge
inc
add
jmp
mov
or
fs
dec
je
mov
xor
and
dec
mov
fs
test
or
push
push
dec
xor
clc
jmp
jmp
jmp
outsl
mov
push
and
or
jo
mov
movzbl
xchg
push
shlb
push
add
je
cmp
sahf
lcall
pop
aam
mov
sbb
add
icebp
cmp
cmp
es
test
rcrl
inc
add
add
jne
cmpl
adc
sti
mov
adc
das
xchg
out
jmp
cmp
push
adc
es
xchg
adc
es
scas
es
ret
fcomip
pushl
or
sbb
pusha
jno
lret
cs
filds
dec
inc
movb
enter
fs
adc
pop
sub
sub
loop
in
jmp
push
rol
push
outsb
xor
xchg
xor
mov
rorb
push
add
add
outsl
aaa
adc
faddl
repz
push
mov
fidivrl
and
pusha
stos
push
adc
adc
repnz
adc
mov
add
jb
mov
cmp
xor
cld
inc
inc
lods
cmp
in
push
jmp
dec
loop
je
lock
sbb
mov
clc
cld
adc
or
mov
pusha
add
adcb
mov
push
xor
or
and
dec
mov
popf
orb
lods
sbb
push
xchg
mov
adc
cmp
adc
sub
adc
jg
and
aas
std
ja
popa
insb
out
arpl
push
mov
adc
or
aaa
jne
call
and
popa
jl
adc
mov
xor
adc
cmp
je
pop
xor
add
xor
xor
or
in
shrb
sub
xor
jb
das
and
mov
jle
sti
xor
les
cmp
test
insl
jp
hlt
jno
sahf
add
sahf
cmp
jno
or
mov
sti
add
xor
adc
and
repnz
je
fdivr
pop
lock
je
cmp
mov
test
and
jo
jmp
pushl
mov
push
pop
or
and
jo
lock
loopne
stos
add
aam
push
mov
pop
out
and
add
jl
mov
add
je
insl
jb
or
repnz
inc
sub
ret
jmp
mov
cmp
pop
sbb
pop
aas
adc
popf
nop
les
jle
test
add
sbb
cld
mov
mov
sbb
jno
pop
jb
add
pushf
mov
mov
nop
inc
pop
push
imul
int
loope
pop
stos
mov
xchg
jne
jno
or
dec
adc
dec
incl
push
push
mov
mov
les
fnstenv
lods
or
add
jno
dec
call
es
loop
mov
and
xchg
and
adc
xor
outsb
jg
pusha
or
aaa
stc
push
bound
push
sub
mov
or
je
mov
or
and
mov
out
mov
fnstsw
cmc
icebp
sbb
fsubrs
and
add
mov
sub
push
and
mov
test
add
mov
fidivs
sub
sbb
adc
cld
fucomip
imulb
jno
jo
sub
or
jno
hlt
mov
xchg
or
inc
mov
ret
cltd
test
ja
push
xor
lcall
mov
hlt
add
icebp
adc
mulb
xchg
adc
or
inc
ja
pop
or
mov
gs
dec
ljmp
mov
adc
icebp
sub
aaa
sbb
std
hlt
add
dec
mov
add
add
inc
testb
fisubrs
inc
mov
arpl
in
cmp
xor
jl
scas
xchg
je
mov
and
and
je
dec
mov
mov
orb
jmp
pushf
or
add
addl
cli
cmp
push
shll
cld
or
xor
sub
es
xor
mov
ljmp
pop
or
adc
xchg
js
call
pop
push
imul
into
fcomi
movsb
mov
add
sub
jl
out
mov
jg
imul
and
push
jg
dec
addb
je
and
scas
push
shr
pop
pop
sbbb
push
or
push
lahf
incb
fwait
push
add
add
mov
filds
xchg
lods
cmp
add
jb
incb
fisttps
ja
mov
jp
mov
lds
in
fbld
test
jl
orb
mov
mov
pop
xorl
and
in
pop
pop
adc
dec
push
subl
shl
and
add
pop
or
daa
dec
andb
int
pop
jb
fidivs
sbb
xchg
push
push
cmc
add
add
bnd
cli
or
addl
test
addl
lods
call
adc
andb
insb
subb
pop
push
lods
std
fildll
in
les
rcll
pop
test
popf
or
cmp
add
push
movb
inc
ret
sub
sub
ret
dec
clc
mov
mov
mov
andl
jmp
push
mov
rolb
xchg
push
pop
adc
jp
call
mov
shr
sub
push
or
adc
hlt
jg
mov
sarb
fs
inc
xchg
imull
rcll
mov
xchg
adc
mov
cmp
jno
mov
enter
push
cld
push
inc
aaa
push
rclb
testb
and
pop
ret
push
and
lcall
stc
lds
add
jmp
add
push
pop
imul
and
test
and
test
lock
rolb
add
mov
adc
outsl
ficoml
fildl
inc
sbb
enter
inc
cld
or
roll
enter
mov
rorl
movb
das
adcb
sub
sub
incl
je
add
mov
sbb
rep
imul
xor
test
arpl
cli
inc
add
jne
rolb
or
inc
shlb
aaa
or
adc
je
ret
lcall
inc
testl
jne
shrb
push
rcll
rcrb
arpl
push
mov
orb
stos
push
xchg
addb
fildll
dec
mov
jle
test
sbb
lock
loop
sbb
lock
push
cmpsb
jne
add
cmp
ret
inc
jb
lods
aam
jbe
lods
int
dec
fcmovne
scas
ljmp
sub
hlt
dec
sub
movsb
add
movsl
mov
scas
adc
push
sarl
cwtl
adc
pushf
xchg
adcl
ds
shlb
addl
dec
xchg
out
add
lcall
adc
sbb
xchg
shl
add
add
call
fisttpl
inc
mov
push
movsbl
jl
call
insb
cmpsl
mov
inc
push
pop
out
outsb
pusha
xchg
mov
cmpsb
dec
or
sbb
push
fsubs
clc
sbb
or
dec
and
jne
inc
enter
lcall
add
pusha
add
sub
idiv
jecxz
adc
psubsw
mov
adc
push
je
subl
jl
mov
dec
sbb
inc
movsb
and
popa
inc
jmp
outsb
pop
push
and
adc
and
fsubl
cs
aad
xor
mov
incl
sti
bound
cmp
ja
imul
fdivr
add
mov
fcom
jg
andl
add
outsb
or
cli
or
insb
leave
sub
push
je
push
nop
bound
mov
or
or
scas
test
dec
push
ds
or
pusha
cltd
mov
xor
push
inc
or
push
and
cld
pusha
pop
push
pusha
mov
out
jmp
loop
imul
in
or
jmp
pop
lret
or
pop
jmp
pop
add
push
mov
jo
aad
pop
add
sbb
or
jnp
mov
or
xchg
sbb
loopne
aas
adc
or
xchg
fwait
loopne
popa
jns
sub
add
xor
inc
roll
test
or
stos
cmp
add
pushf
and
push
out
out
and
push
add
fidivs
dec
out
mov
jno
hlt
fcomps
adc
loope
mov
xor
inc
idivb
add
call
dec
sbbb
pusha
cli
ss
popa
or
aam
xchg
add
nop
in
cmp
jg
jl
cmp
jae
add
rolb
loop
jmp
and
pop
popa
in
sub
xor
inc
jecxz
imul
pusha
pop
ficoms
gs
cmp
lods
adc
lock
xchg
out
sub
sbb
out
es
or
sbb
pusha
js
call
pop
adc
loopne
stos
mov
pop
sbb
pusha
mov
cmp
in
mov
and
mov
jg
stos
and
pop
test
movsl
arpl
loopne
adc
push
shl
addr16
cld
mov
cli
adc
mov
out
lock
pop
das
push
pop
cld
cmp
or
icebp
lcall
mov
pop
mov
and
push
mov
sbb
divl
add
pop
adc
mov
dec
cmp
sbb
je
mov
push
sub
mov
das
add
add
lods
dec
ret
ljmp
and
add
mov
in
aas
xor
add
out
cmpsl
das
les
jmp
add
jmp
test
mulb
push
mov
lock
cmpsb
sbbb
fmull
adc
incl
jge
inc
fisttpl
lcall
lock
sub
int3
mov
pop
testl
shll
add
in
mov
and
jp
mov
pop
push
cld
xor
xor
pop
cld
mov
push
jno
je
push
clc
push
xor
inc
mov
stc
xchg
cmpsb
aaa
lret
and
push
sub
in
lock
or
sub
or
push
orb
popf
clc
das
xchg
jno
xor
pop
jmp
mov
sahf
clc
out
xor
sub
push
call
cld
xor
test
push
push
jo
dec
sbb
out
loopew
add
and
out
test
insb
adc
push
vpshuflw
dec
or
jmp
insb
pop
add
xor
icebp
mov
call
insl
popa
icebp
add
jp
shlb
jae
mov
rcl
and
add
scas
xor
mov
dec
mov
cld
xor
and
enter
js
mov
add
or
cli
push
xor
fwait
cmp
push
jl
xchg
movsb
xor
mov
jo
inc
sub
push
mov
jns
sbb
js
test
mov
mov
jge
push
add
sti
lcall
cmc
inc
or
or
push
dec
jno
jbe
cmpsb
add
stos
or
sbb
sbb
jo
sbb
insl
push
imul
or
insb
push
cld
inc
ds
imul
or
int
mov
les
inc
push
add
add
jo
mov
in
xor
aam
outsb
imul
divb
mov
addw
imulb
mov
ds
mov
test
divl
out
sub
aad
mov
mov
lock
sbb
and
out
pop
jmp
int3
rcl
call
insb
packssdw
lea
mov
push
loop
stos
xchg
inc
push
adcb
mov
test
sarb
push
xor
push
cltd
pusha
xchg
lods
xchg
adc
mov
pop
mov
or
dec
push
nop
outsb
xchg
and
add
pop
push
mov
mov
and
add
xor
call
dec
add
in
xchg
scas
add
mov
or
adc
lods
xchg
addb
mov
out
pop
inc
stos
clc
das
sub
or
rclb
push
adc
or
xor
xor
and
cmc
call
jne
and
push
loopne
orb
dec
filds
lret
add
pop
mov
jmp
aaa
mov
enter
popa
dec
xor
lds
pop
jle
clc
push
lock
sub
or
outsl
lods
and
and
test
roll
mov
repnz
call
adc
jo
adc
add
or
popa
or
adc
movsl
inc
test
cli
push
insb
int3
imul
sub
cmp
add
aad
mov
sub
notb
xorb
adc
xor
dec
cmp
push
or
sub
inc
xchg
dec
jnp
push
insb
adc
mov
addb
or
pop
add
mov
mov
xorl
out
push
or
movb
sti
imul
test
jp
std
jg
xchg
and
ljmp
cmp
lea
pop
add
pop
punpcklbw
nop
xchg
mov
add
cmp
jmp
push
sti
xchg
testb
repz
pop
add
imul
cmp
adc
dec
xchg
cmc
push
out
push
mov
fs
add
addb
lock
jno
jbe
movsl
mov
adc
mov
cmp
lock
call
mov
or
imul
cmp
mov
lock
sbb
adc
int3
mov
or
mov
aam
mov
mov
daa
scas
rcl
push
jp
inc
xor
jbe
xor
cmp
pop
test
push
test
sbb
add
out
cmp
addb
add
pop
fs
jmp
pop
adcb
jmp
or
dec
mov
mov
idivb
rcrb
add
sbb
pop
xor
mov
mov
lar
jecxz
xchg
cli
lea
cmpsl
call
je
pop
test
fiaddl
rcll
mov
mov
sub
dec
pop
scas
pop
sub
sbb
stos
scas
push
nop
push
and
inc
jo
xor
loopne
push
inc
mov
pop
mov
call
test
orb
das
test
mov
push
je
jl
xor
dec
sar
mov
push
je
lock
rcrb
pop
pushl
and
int
push
sub
cmpsl
mov
add
xor
add
pop
call
adc
call
pop
arpl
fisubl
incb
cld
sbb
mov
mov
dec
push
adc
sti
jmp
xorl
loop
out
jge
sbb
push
adc
out
mov
inc
jbe
movsb
add
sbb
ljmp
cmpsb
jo
inc
adc
repz
mov
mov
pop
jo
out
jb
sbb
data16
dec
dec
fdivr
daa
aam
mov
icebp
je
jl
clc
fs
gs
shlb
or
in
fisubrs
or
and
inc
adc
inc
pop
jb
inc
adc
inc
ret
mov
xor
adc
jle
push
int3
add
lea
cmp
add
add
cli
call
push
mov
inc
ljmp
cmp
push
jb
lods
enter
cmp
jb
sarb
pop
jecxz
in
loop
mov
test
or
adcl
pop
jg
orb
adc
bound
mov
dec
ret
stos
mov
nop
jecxz
addl
inc
and
cmpl
dec
jg
ret
adc
pushaw
call
adc
sahf
mov
fmull
xchg
add
adc
add
mov
mov
and
jo
or
icebp
frstor
push
or
jle
insl
jo
cmp
adc
cltd
or
xchg
mov
push
jnp
mov
les
dec
loopne
mulb
call
push
add
sysexit
or
les
push
and
inc
inc
dec
adc
jp
popa
xor
pop
inc
add
mov
sub
add
mov
xchg
dec
xor
cltd
addl
pop
lods
pop
adc
incl
dec
lea
stc
scas
call
and
cld
std
call
mov
les
xor
pop
pusha
imul
loop
int3
jno
cmc
jbe
shlb
dec
call
xchg
mov
cmp
mov
mov
movsb
or
into
pop
add
push
inc
in
ljmp
mov
sbb
add
inc
push
rclb
aam
mov
insl
mov
mov
push
push
adc
sbb
ret
push
in
rcl
addr16
inc
jge
dec
jmp
clc
xchg
and
js
inc
pop
cmp
sbb
cmp
adc
pop
test
es
inc
and
push
andb
popa
or
and
call
sub
xchg
add
aaa
fisttpl
addb
loop
addl
adc
add
fmull
inc
daa
sbb
idivl
push
in
fwait
and
in
jb
int3
mulb
sub
mov
mov
subl
adc
dec
add
adc
mov
movb
dec
lods
cwtl
jae
test
pop
or
and
pop
insb
jl
adc
sbb
push
data16
mov
movsb
pop
sbbl
add
and
insl
mov
nop
jmp
push
ss
pop
movb
inc
mov
push
xchg
mov
jp
sbbl
mov
add
jb
incb
mov
rcrb
js
bound
cmpb
jmp
add
mov
inc
pop
or
mov
push
pop
xchg
sbb
jge
cmp
fwait
mulb
pop
add
ds
daa
pusha
in
mov
cwtl
pop
or
lret
divb
mov
sbbl
ss
outsl
test
dec
sbb
jmp
mov
pop
push
fimull
adc
rorb
dec
sub
leave
add
xchg
lea
int3
push
and
push
bound
xchg
leave
lretw
loopne
push
hlt
clc
inc
shrb
pop
call
ss
in
pop
add
mov
nop
insb
out
and
aas
dec
mov
ss
rolb
mov
roll
sub
jl
ljmp
jne
jns
adc
adc
mov
and
test
jns
outsl
push
sub
jmp
inc
lea
pop
cwtl
sbb
and
pushf
sub
inc
or
andb
fmuls
adc
loopne
cltd
sbb
jbe
fsub
lret
cli
xor
adc
leave
inc
rol
cmp
mov
int
mov
std
ret
sahf
jbe
ret
fildl
call
xchg
loopne
dec
cwtl
add
mov
push
push
push
push
rol
jne
popf
sub
shlb
cwtl
mov
ja
shlb
test
cmc
adc
fs
mulb
or
js
lock
rorb
ret
loopne
mov
adc
sub
setg
add
xorb
cmp
cmp
clc
cmpsb
int3
push
outsb
jmp
jbe
inc
cmp
inc
cwtl
bound
inc
pop
lock
ljmp
push
push
stos
test
dec
lret
pop
push
sti
popa
dec
jne
test
or
mov
sbbb
sti
mov
and
daa
pop
pusha
pop
or
lods
adc
addr16
add
adc
add
mov
sub
in
aam
dec
imulb
add
pop
cmp
inc
jle
mov
adc
pop
stos
push
or
adc
jmp
or
add
add
jno
mov
loopne
pop
loopne
add
popa
fcomps
jg
mov
add
adc
jg
mov
push
fsts
dec
sbb
aas
fwait
movsb
jg
ss
xor
jl
pusha
test
call
inc
adc
adc
sar
loope
add
and
mov
mov
subb
aas
cmpsb
les
push
add
add
out
inc
add
adc
adc
mov
js
loop
pushl
xchg
xchg
fiadds
loopne
inc
cmp
mov
sbb
add
std
hlt
std
rolb
addb
add
adcl
add
fldt
or
push
cmp
cmpb
or
jge
jecxz
sub
clc
decl
pop
or
test
cmpsl
call
add
aad
and
loope
incb
or
push
stos
pop
dec
pop
jne
pusha
cmp
rcll
popa
rolb
pusha
jmp
xchg
add
mov
loopne
and
add
or
or
or
ss
cs
add
cmpb
lret
or
add
test
lods
add
arpl
insb
ret
and
push
push
insb
adc
cli
mov
push
xlat
sub
fsubrs
loopne
movsb
xor
aam
rcll
test
mov
loope
xchg
fisubl
sub
repnz
adc
andl
add
icebp
mov
lcall
gs
movsb
fimuls
loope
shlb
push
lock
adc
aaa
mov
cltd
jl
pop
insl
xchg
inc
mov
clc
pusha
or
mov
movsb
adc
cmp
xchg
int
mov
aaa
mov
test
push
loope
in
out
cmpsl
in
lcall
adc
mov
pop
jbe
mov
xor
dec
sub
hlt
add
adc
ror
jb
cmpl
or
lock
pop
ja
data16
inc
adc
and
sbb
sbb
cld
mov
sti
xor
ficoms
sub
add
jb
pop
dec
sbb
jge
xchg
pop
cmp
mov
test
popa
push
push
ret
fildll
sub
scas
and
dec
mov
mov
int
mov
cmp
clc
jg
mov
rol
jb
out
pop
pop
add
daa
or
ret
fiaddl
mov
test
xor
loop
or
add
add
cs
data16
adc
ret
clc
add
inc
adc
incb
and
mov
lds
aam
popf
xor
and
inc
es
inc
adc
adc
xor
movsl
cmp
dec
jmp
push
pusha
mov
lea
repz
jb
pushl
push
lea
add
pop
add
jp
or
adc
add
pusha
lahf
aam
or
inc
xchg
mov
and
lods
fbld
lock
mov
in
inc
add
mov
das
and
jo
add
icebp
add
xchg
and
pusha
mov
nop
jo
add
adc
js
hlt
adc
inc
jle
add
mov
or
aam
das
or
xor
jne
test
adc
stos
and
adc
jg
clc
dec
cmpb
call
jo
adc
test
cli
pop
jo
andl
cmp
add
das
pop
mov
cmp
add
mov
into
pop
clc
jg
push
mov
or
fcoms
leave
aas
lock
es
pop
fcmovne
pop
mov
ret
sbb
xchg
jo
sub
dec
jbe
jge
xor
xor
in
nop
out
ja
add
inc
xchg
lock
pop
clc
or
cmpl
add
enter
inc
fcomp
adcl
test
and
push
jo
push
push
pop
adc
add
mov
or
add
divl
mov
and
push
jl
cld
je
xchg
and
inc
test
mov
jp
dec
pop
scas
pop
loope
mov
pop
xchg
adc
jle
sarl
incl
stc
mov
dec
movsl
call
lock
loopne
sub
sub
testl
xor
jle
or
aad
adc
ja
inc
push
mov
jo
push
mov
das
mov
repz
jae
sub
popa
or
jbe
hlt
incl
push
std
jo
jae
ljmp
loope
dec
xor
jo
shll
or
pmaddwd
pop
lea
add
jae
mov
mov
and
push
dec
dec
dec
in
xor
and
sarb
jo
dec
dec
add
inc
loop
inc
ljmp
sbb
add
or
push
call
or
pop
pop
xchg
pop
cmp
inc
testl
add
cs
fcomps
push
int3
or
incl
mov
cwtl
add
jle
inc
mov
lock
inc
mov
cmpsb
movsl
push
test
movb
lods
fwait
pop
mov
cld
inc
pushf
cld
push
scas
hlt
into
sub
sub
add
cs
adc
adc
nop
pop
les
shr
or
mov
pop
int3
rolb
lock
or
mov
jo
mov
mov
bound
outsb
insb
xor
xchg
mov
push
aaa
gs
push
cld
and
inc
xchg
stos
ret
push
pop
pop
dec
adc
adc
inc
mov
push
pop
loopne
add
or
mov
stos
nop
inc
jo
es
icebp
pop
adc
inc
cmpb
call
xor
decb
sub
enter
adc
add
pusha
insb
mov
call
shr
dec
cs
cmp
mov
lock
mov
cmp
lock
mov
adc
inc
adc
das
clc
das
pop
cli
and
mov
dec
mov
mov
call
inc
mov
jmp
or
mov
jne
push
push
icebp
or
xor
inc
sbb
adcl
dec
call
ljmp
enter
xor
jo
mov
push
jb
sub
push
fisubrs
fsubr
push
sub
cmp
testl
jbe
ret
je
push
push
jne
jbe
xchg
gs
inc
adc
fidivrs
shl
call
sbb
xor
or
rcrl
mov
adc
test
jb
xor
ret
into
and
outsl
call
pop
xor
pop
adc
add
inc
add
mov
test
lock
jb
jecxz
arpl
int
shlb
testl
mov
adc
cmp
lock
pusha
clc
jo
idiv
fwait
jl,pt
adc
lods
push
xor
lock
jo
pop
pop
test
iret
out
inc
clc
popf
sti
and
jmp
sbb
mov
mulb
adc
call
sbbl
xchg
xor
adc
ss
mov
cld
jno
sub
jne
sub
shlb
mov
pop
mov
fsubrl
mov
xor
adc
xor
loopne
movsb
loopne
cmp
nop
fsubs
add
cld
xor
add
dec
inc
mov
xor
lcall
push
and
mov
test
aaa
mov
mov
sbb
jg
jle
std
pop
icebp
and
icebp
adc
mov
insl
ret
cmp
lock
cmp
lock
clc
dec
call
xor
sub
pop
add
xor
out
pop
std
inc
push
jle
dec
and
sbb
pop
inc
incl
in
push
repz
cmpsb
fsubr
repz
add
cmp
adc
xchg
adcb
aaa
inc
mov
call
lods
jo
clc
inc
decl
lock
mov
fs
xor
sub
jle
icebp
je
test
faddl
sbb
hlt
mov
inc
inc
xchg
jo
cmp
pop
mov
adc
test
mov
mov
sub
jne
rolb
pop
shl
pusha
enter
add
gs
incl
lret
xor
add
cmp
jle
xlat
xor
push
jo
jecxz
adc
adc
adc
lret
add
or
push
leave
mov
je
xor
inc
out
add
incb
inc
jmp
cld
mov
mov
push
in
idivb
scas
push
add
repnz
dec
jp
or
andb
lcall
hlt
xor
add
xor
jno
cli
inc
and
ja
or
pop
jo
push
xchg
xchg
pop
add
push
fcmovb
push
mov
mov
aas
xor
mov
xor
and
inc
jbe
mov
ljmp
lret
je
mov
or
mov
adc
adc
orl
sub
or
aam
lret
or
or
lret
mov
push
rolb
rcrb
cmp
inc
inc
sub
cli
sahf
sbb
je
pop
push
xchg
mov
jl
xchg
adc
and
loop
or
add
jne
push
ljmp
mov
mov
and
xor
cmp
inc
incl
es
cmpsl
add
addb
shrb
adc
in
dec
cs
je
add
mov
stc
js
loope
fdivrs
add
push
sub
jg
stos
mov
inc
dec
push
mov
inc
sub
sub
push
ret
fidivl
jge
push
addb
test
or
mov
and
movsb
xchg
in
mov
adc
test
push
or
call
pop
imull
adc
xorl
mov
sbbb
adc
fwait
adc
mov
sub
les
mov
push
and
push
push
push
repz
fcoms
and
or
inc
int3
testb
mov
lea
add
mov
sbb
and
jle
inc
aam
or
cmp
cld
fsts
imul
xchg
dec
lods
cs
adc
es
adc
fwait
push
and
adc
repnz
leave
add
ja
and
dec
cmp
pop
cmp
rclb
and
xor
mov
adc
rclb
adc
cld
rolb
test
call
ja
ret
ret
shlb
testl
stos
outsl
xor
push
shlb
add
dec
inc
dec
aam
xchg
ret
movsb
les
scas
nop
or
ret
cmp
out
lock
adc
cli
xchg
decl
rorl
add
cld
xchg
jo
and
adc
xor
jp
addr16
jo
je
add
call
enter
and
inc
test
lods
add
retw
mov
adc
jge
fs
into
add
ret
mov
cmp
inc
nop
jo
xchg
pop
pop
test
push
pop
mov
dec
jae
dec
dec
into
cmp
pop
xor
mov
fildl
pushf
lods
inc
xchg
mov
shlb
aas
insb
xchg
je
popl
dec
sub
aaa
je
push
lods
mov
ret
add
shll
push
sbb
int3
ret
add
xor
or
pop
xor
cld
xchg
add
cmp
push
nop
fs
mov
test
inc
testb
xor
and
push
push
pop
lahf
cli
shlb
test
push
or
adc
rolb
aad
adc
adc
ret
push
sub
shrb
ljmp
xor
sub
dec
in
inc
mov
scas
jbe
rclb
adc
ret
or
pop
add
pop
call
jbe
cmc
inc
repz
or
push
enter
test
sbb
loopne
add
xchg
fsubrp
testb
and
xor
pop
test
int3
add
xor
insl
dec
adc
data16
adc
dec
jecxz
jo
push
sub
loopne
inc
add
hlt
clc
mov
pusha
cmp
and
aaa
bound
inc
and
testb
push
rclb
mov
aam
pop
xchg
loopne
or
mov
pusha
imul
movsb
shlb
shl
sub
cwtl
inc
test
and
mov
mov
hlt
and
call
jmp
fwait
sub
pusha
pop
fcoms
xor
cwtl
jbe
mov
call
shlb
pusha
lods
cmpb
push
sbb
cmpsb
pusha
xchg
add
call
and
rorb
out
jne
shlb
add
fmull
or
lock
dec
pop
dec
push
dec
ficoms
ja
stos
pop
dec
cs
pop
shlb
movb
pop
jle
add
dec
loope
push
mov
fwait
add
mov
add
test
loopne
shlb
jecxz
loopne
xor
lods
jo
orb
in
jl
clc
aas
inc
and
mov
xchg
cld
pop
adc
inc
push
bound
dec
add
or
inc
insb
pusha
int3
and
leave
aam
nop
dec
aam
popa
xor
andl
and
sub
jbe
or
pop
cmpl
add
mov
add
fmuls
nop
mov
fdivr
inc
push
or
fidivl
mov
loop
in
adc
loopne
popf
cwtl
and
inc
push
push
xor
pop
push
xchg
test
movsl
or
pushl
pop
mov
adc
call
das
adc
pop
or
pushl
pusha
adc
dec
call
pop
mov
cli
xchg
cmpb
cmp
sbb
and
xchg
add
in
push
loopne
lods
call
xchg
dec
add
call
xor
shrb
sbb
xchg
xchg
or
add
jmp
test
add
add
mov
cli
jbe
loope
jmp
dec
call
movl
lock
inc
cmp
fs
add
mov
jae
or
loop
push
mov
mov
inc
fimull
dec
add
inc
push
push
pushw
add
std
icebp
pop
testl
lea
or
add
mov
or
mov
loopne
sub
call
inc
out
gs
das
push
xor
clc
xor
lock
sti
or
mov
sti
jno
or
add
lock
popa
add
dec
inc
mov
mov
cmovns
cltd
mov
jb
mov
fdiv
sbb
inc
ja
xor
add
ficomps
mov
jmp
lods
js
js
mov
ret
incl
mov
adc
roll
clc
bound
shlb
lret
add
sbb
cld
into
adc
sub
jg
xorb
ret
add
lods
loope
add
pop
bound
lcall
xchg
mov
bound
test
mov
insb
call
dec
add
aad
xor
cmp
out
dec
xchg
lret
fimull
dec
or
adc
xchg
dec
adc
jle
fiaddl
iret
ljmp
cld
inc
bound
lock
mov
adc
cmpsb
inc
mov
mov
jno
dec
add
add
lods
cmp
or
repnz
dec
adcb
jbe
cmp
ja
aaa
mov
xor
mov
nop
mov
mov
cmp
pusha
add
sarb
sbb
sub
icebp
scas
adc
mov
incb
mov
xor
mov
pop
orb
mov
sbb
dec
ds
cs
mov
adc
outsb
cld
mov
mov
divb
je
hlt
andb
xchg
aas
add
fisubl
xchg
lods
push
cmp
rol
pop
cmp
push
xor
mov
add
xor
shlb
aad
hlt
divb
cld
pop
into
pop
pop
in
sub
aas
mov
xchg
mov
or
ja
sbb
scas
lea
pop
div
pop
and
pop
cld
jecxz
pop
xor
add
xor
jg
cmp
aam
dec
inc
adc
sti
push
mov
add
jl
cs
lock
add
sbb
add
or
addb
mov
jg
test
adc
lea
scas
adc
int3
sub
movsl
aaa
add
test
add
es
mov
cli
push
push
repnz
adc
add
push
shrb
or
clc
xor
cmp
add
call
xor
xchg
cmp
shlb
or
cld
jb
fsubr
or
lock
pop
add
add
mov
cmp
call
cmp
lret
insl
loope
iret
mov
out
adc
mov
jbe
add
dec
mov
dec
jle
orb
cmp
sbb
or
add
test
adc
lock
scas
add
fisttpl
push
rcr
mov
jle
mov
add
adc
push
or
and
xchg
mov
add
jp
lods
mov
or
test
cld
notb
inc
jl
cmp
shlb
pop
jbe
jl
xchg
mov
adc
push
add
mov
and
and
mov
jl
mov
lods
bound
sbb
add
jge
mov
pop
add
aas
jmp
jo
test
or
aaa
inc
imull
adc
call
loop
dec
cmp
mov
or
cltd
orb
mov
in
cmp
and
ds
ljmp
jp
jno
dec
xchg
xlat
and
ffreep
xor
shrl
fcomip
fdivs
pop
insb
repnz
add
js
inc
inc
popa
push
loopne
sbb
xchg
loope
or
pop
hlt
movq
mov
pushl
or
xor
add
jbe
add
inc
or
cld
dec
add
ss
cmp
mov
mov
inc
push
inc
push
add
and
jge
mov
clc
sbb
adc
add
cld
pop
lcall
cmpb
decl
cmpl
scas
jno
mov
jno
cmp
or
pop
repz
inc
inc
mov
fadds
scas
lock
and
stos
in
push
adc
push
or
lods
movl
lock
xchg
xor
add
mov
inc
add
and
fiadds
dec
leave
cmp
push
push
add
popa
mov
loopne
lock
push
cwtl
mov
push
and
imul
jo
leave
orb
lods
dec
push
icebp
dec
pop
and
mov
hlt
mov
mov
mov
nop
inc
jmp
mov
inc
xor
mov
inc
mov
ljmp
mov
xchg
add
cmp
stc
push
inc
test
push
mov
cli
jmp
repz
sub
inc
push
jb
jne
call
add
insb
call
lods
rolb
and
es
add
mov
mov
inc
xor
adc
testb
xor
cli
mov
repnz
sub
xor
cwtl
fcomip
push
jle
es
push
je
xor
call
loopne
ja
lea
add
cltd
ss
adc
nop
loopne
cli
and
inc
inc
pop
rcrb
xor
add
stos
lret
adc
push
jo
scas
outsb
mov
xor
je
insb
xchg
jle
sbb
pushf
push
jg
mov
outsl
adc
and
xorb
or
in
push
sub
push
aaa
and
stos
das
test
daa
sbb
lock
add
popf
shl
mov
mov
stos
mov
fistl
push
scas
inc
divl
mov
mov
mov
inc
xor
movb
lcall
adc
mov
xor
add
sbb
call
jp
push
sbb
and
push
sarl
add
lea
cmp
cmp
adc
xlat
adc
add
call
scas
xchg
push
lock
adc
mov
sub
add
xor
pop
cmpsb
shll
hlt
scas
or
push
ljmp
mov
xor
les
xor
push
in
adc
sub
push
sbb
sub
push
dec
and
push
jne
fnsave
shlb
dec
rcrl
daa
mov
jg
mov
jne
push
push
lret
lods
xor
push
cmp
jae
test
push
cld
icebp
inc
push
push
shl
pop
push
clc
pop
mov
mov
or
pop
jne
jg
mov
push
mov
or
jb
sbb
lock
or
imul
nop
or
jp
mov
andb
cmc
paddsb
xor
test
hlt
ljmp
push
mov
jo
je
push
jo
shr
jl
lock
or
xor
cmpsl
add
jnp
pop
cmp
bound
test
sbb
add
test
xor
lret
pusha
adc
cs
outsb
repz
arpl
test
ljmp
add
fwait
lahf
and
add
sbb
lahf
call
sub
jo
and
mov
ret
lock
add
xor
arpl
jmp
or
pop
mov
rcll
call
scas
insl
add
divb
scas
mov
gs
js
fisubs
add
inc
and
test
add
mov
sbb
les
sbb
ds
push
inc
pop
mov
bound
or
scas
fwait
data16
sbbb
adc
xor
jp
pop
add
or
add
in
push
add
insb
outsl
aam
add
lock
add
pushl
add
sub
adcb
inc
fistl
sbb
dec
pop
loopne
dec
je
cs
aaa
inc
sbb
pop
ret
add
sbb
push
push
push
mov
push
imul
imul
and
add
adc
js
add
jmp
cmpsb
mov
sbb
daa
dec
push
or
je
sub
sbb
or
xor
orb
adcb
in
adc
push
pop
sbbb
ret
fidivrl
fstpt
orl
je
or
xchg
lea
and
pop
test
orl
lea
and
sbb
ficomps
neg
pusha
es
push
add
sbb
mov
ret
lock
xor
cmp
pop
sarl
faddl
xorb
hlt
cli
and
inc
add
adc
andl
mov
addb
pop
or
fwait
shr
icebp
aam
cwtl
pop
xchg
mov
sbb
and
mov
imul
add
pop
in
xchg
and
inc
adc
mov
enter
pop
dec
xor
leave
xor
and
xchg
inc
push
and
andl
dec
jmp
in
jbe
xchg
jo
mov
test
push
sarb
mov
adc
sub
ficomps
nop
div
inc
ss
enter
jle
shl
sbb
addb
addb
inc
lea
dec
add
js
jg
pop
dec
mov
into
call
or
dec
inc
jle
or
jmp
push
adc
sub
nop
lcall
inc
sub
jg
rclb
hlt
in
call
jl
push
cmp
add
jnp
pop
mov
outsb
add
dec
mov
orl
mov
add
adc
es
jp
add
and
aas
pop
and
inc
or
inc
sbb
xchg
stos
xor
jl
roll
int3
push
jg
call
or
loope
shrb
mov
mov
hlt
enter
push
dec
push
pop
les
clc
dec
popa
mov
add
push
adc
push
adc
es
loopne
jl
in
mov
imul
add
mov
popa
inc
dec
in
movb
cld
ret
push
mov
pop
adc
xchg
addl
inc
sub
in
push
or
pop
push
cs
push
jle
adc
sbb
pop
push
adc
xorl
je
mov
and
jo,pt
ficoms
jmp
aaa
xor
push
xchg
dec
and
jmp
stos
loop
aam
clc
rcl
adc
push
ljmp
fdiv
add
aaa
sub
sti
stos
movsb
add
add
cmp
adc
adc
push
ret
pop
push
dec
mov
dec
cld
andb
push
shrl
pop
and
mov
and
dec
ljmp
pop
mov
push
adc
mov
xchg
inc
xlat
mov
lds
mov
push
and
test
mov
popa
push
mov
or
and
mulb
mov
dec
inc
mov
or
sbb
int3
xor
inc
cli
jg
cld
pusha
imul
pusha
xor
push
xor
pushf
or
add
pop
call
lcall
mov
and
sub
arpl
add
sti
loope
ljmp
into
adc
hlt
aad
movsb
inc
adc
in
mov
jne
pushl
inc
test
decl
cld
pusha
sbb
xor
xor
ss
inc
and
xchg
inc
add
out
mov
in
xchg
cwtl
loop
add
add
jecxz
movsb
dec
insl
or
push
push
loope
je
mov
mov
and
lock
movsb
cld
loopne
call
pop
testl
cmp
scas
cmp
xor
inc
push
pop
dec
push
add
call
pop
sti
loopne
popa
pop
pop
push
fbld
pusha
and
add
ja
push
cltd
cmp
add
jmp
xor
out
mov
inc
add
adc
call
dec
js
lret
xor
xor
repnz
push
jb
mov
inc
adc
ret
incl
cmp
push
dec
pusha
push
jle
add
add
push
pop
jge
mov
pusha
cmp
push
cmpb
add
mov
xorl
adc
dec
decl
dec
xorb
roll
inc
sbb
lcall
call
sub
mov
push
mov
or
mov
loope
inc
adc
out
pusha
lods
roll
inc
ret
mov
fmuls
out
adc
add
cs
mov
push
xchg
xor
sbb
cld
ja
push
loopne
sbb
adc
aas
adc
rolb
stos
jecxz
pop
add
xor
pop
push
push
repnz
imul
mov
mov
scas
inc
sub
js,pt
loopne
movsb
or
lock
jne
add
pusha
and
jmp
mov
mov
sti
jne
out
add
ds
ret
push
or
les
sub
clc
sub
sbb
and
mov
xchg
outsl
mov
add
add
in
and
loope
lods
inc
aam
loope
add
call
inc
add
add
orb
call
mov
arpl
push
idiv
cli
cmp
cmp
pop
add
subb
out
lock
push
call
push
shrb
ret
pop
jne
mov
sbb
xchg
dec
jg
push
pop
pop
xchg
pusha
mov
dec
inc
or
or
add
push
push
loope
lods
add
jge
shlb
movsb
jle
push
js
or
in
ds
incl
jno
cmpsb
add
push
add
dec
pop
movsl
pop
loop
add
fdivl
adc
push
pop
pop
fcomi
sub
push
scas
and
adc
adc
lret
addb
mov
jb
inc
outsl
clc
es
jl
pop
pusha
xchg
or
mov
jg
repnz
aam
insl
dec
adc
testl
jnp
pop
mov
xabort
adc
sbb
hlt
or
ljmp
fs
push
push
nop
jbe
add
test
add
or
in
mov
xor
jg
jg
add
xchg
dec
cli
out
push
mov
fisubrs
pop
out
inc
sbb
dec
inc
jae
xor
dec
inc
lock
lock
cmpsb
insb
ss
scas
cmp
clc
jbe
sub
xchg
cmp
ljmp
call
mov
sbb
insl
push
mov
das
push
mov
testl
xor
test
jmp
mov
stos
add
sbb
std
mov
or
push
sbb
movsb
lock
out
inc
sub
inc
loop
addl
and
add
jp
aaa
jae
or
loopne
fbstp
repnz
pop
sub
stc
adc
jg
or
ljmp
inc
adc
jmp
add
cmc
lea
lahf
mov
loope
or
sbb
in
or
inc
pop
adc
pop
xor
shrb
aaa
lods
incb
inc
jmp
ljmp
dec
arpl
push
push
dec
and
or
jo
mov
sbbb
ss
ljmp
nop
rolb
cmp
lds
in
jno
scas
adc
inc
xor
and
cmc
or
and
pop
inc
jg
ficompl
test
fidivrl
mov
or
psrld
jno
push
jno
pushf
insb
std
call
popa
mov
add
mov
and
aad
push
sbb
dec
jne
lods
and
pop
cmc
push
xor
mov
and
cmp
es
jp
lods
xchg
and
leave
lock
hlt
xor
enter
pop
inc
xorb
xor
lock
inc
adcb
cld
inc
out
dec
dec
add
fmuls
stos
and
mov
cmp
adc
add
lea
arpl
icebp
ljmp
or
fbld
push
test
mov
fbstp
ljmp
inc
xor
pusha
mov
mov
orl
fsubp
mov
xchg
mov
repz
mov
cli
outsb
add
imul
hlt
add
sbb
cld
fdivp
jle
clc
mov
pop
insb
cmp
es
sbbb
pop
add
int3
shl
repz
nop
pop
idiv
mov
and
pusha
and
xor
popa
stos
cmp
and
add
insb
test
add
scas
xorb
pusha
mov
dec
rcrl
adc
add
mov
addb
xor
push
dec
lock
lock
fwait
sti
out
add
fbstp
jmp
xor
add
inc
and
cli
xor
pop
lahf
jno
cli
add
leave
pop
or
adc
and
iret
sub
pop
inc
pop
cmp
orb
cmpsl
sub
mov
add
mov
add
sub
add
mov
mov
inc
push
int3
add
jmp
push
faddl
dec
jo
out
cld
sub
fisubs
out
xor
dec
xor
je
inc
add
mov
loop
jo
enter
adc
xchg
leave
int
data16
push
lock
pop
sbb
lea
mov
cmp
rorb
or
lea
inc
cs
push
dec
ja
add
scas
loopne
ret
je
add
cmp
add
inc
rcrb
xor
add
xor
jl
cmp
sub
or
mov
icebp
arpl
pop
mov
mov
adc
shll
clc
dec
add
push
jb
pop
or
fiadds
cmc
sub
cmp
add
jno
mov
push
push
mov
ja
mov
in
jb
cmp
ja
leave
add
lds
int3
icebp
and
mov
mov
adc
sbb
mov
scas
cltd
clc
es
xor
and
cmpb
ss
incb
mov
sub
push
add
mov
mov
cmp
jb
cmp
dec
repz
jnp
push
mov
sub
fiaddl
stc
adc
sbb
xchg
xor
ret
add
mov
mov
mov
mov
mov
aas
gs
ss
mov
add
ja
push
sahf
push
les
mov
aas
nop
mov
xor
lock
jmp
gs
jb
or
mov
inc
pusha
or
stos
mov
loopne
sbb
inc
lea
xchg
mov
cmpb
jl
xor
or
lock
js
sbb
je
lret
lock
clc
lock
sbb
dec
push
test
decb
add
jne
pop
call
ljmp
xor
jb
push
ss
push
pop
and
lods
push
push
push
mov
inc
mov
cmp
sub
jo
in
mov
fnstenv
sub
pop
sub
call
push
inc
mov
mov
ljmp
pop
jg
or
xchg
dec
dec
push
push
dec
test
push
mov
pop
pop
lds
mov
add
fistpll
mov
adc
mov
adc
pushf
ljmp
cmc
je
xor
loop
mov
sar
lds
xchg
pop
rorb
xor
and
sub
jp
aaa
push
pop
inc
and
sbb
mov
sar
mov
out
scas
sub
pop
cmpsb
icebp
or
lock
lods
call
test
and
cmp
out
test
call
push
ljmp
cmp
jmp
or
jecxz
mov
outsl
inc
jae
addb
dec
cmpb
test
mov
dec
mov
push
sbb
add
adc
cld
js
popa
and
pop
pop
and
mov
mov
pop
in
sbb
sbb
adc
mov
adc
push
loope
and
pusha
sbb
pusha
jae
incl
push
xor
pop
adc
divb
int3
push
jle
loopne
push
adc
jb
jle
fiadds
scas
mov
push
es
fcoms
in
les
sub
xor
cwtl
call
lea
fcoms
jae
push
in
push
mov
jae
sub
jmp
add
lea
add
insl
dec
sbb
push
js
stos
add
sbb
cmp
icebp
adc
add
cwtl
adc
insl
je
movsb
and
call
cltd
cmp
je
fiaddl
and
or
je
stc
pop
mov
inc
das
les
cmpsb
lock
rolb
mov
ss
sbb
or
xor
std
mov
mov
jno
fisubrl
std
add
dec
mov
and
mov
mov
loop
adc
out
cmp
jp
enter
xchg
or
adc
out
push
sbb
push
hlt
sub
out
and
lods
pop
in
ss
or
sti
jne
push
inc
xor
nop
adc
mov
sbb
cmp
and
dec
push
push
add
mov
mov
xchg
push
mov
call
pushf
add
aaa
and
xorb
dec
mov
testl
stos
adc
sub
or
xchg
fs
mov
sbb
mov
and
pop
push
dec
lea
mov
push
jae
jle
adc
push
outsl
xor
mov
inc
adc
jle
jnp
js
or
jae
fcomps
cs
add
shlb
std
fiadds
add
ja
sub
je
and
inc
lret
or
add
test
jnp
scas
push
pop
mov
inc
jno
popa
pop
insb
loopne
pop
cmp
xchg
pop
adc
addb
pop
pop
inc
andb
pop
pop
loop
jl
cmpb
push
pop
mov
sub
xchg
hlt
and
and
mov
sbb
movsb
xorb
push
cmp
inc
lods
addb
lock
aaa
or
rorl
orb
mov
or
rolb
iret
orb
in
inc
stos
cmp
dec
xchg
rcrl
push
cld
lea
call
jg
sub
sbbb
or
add
add
mov
in
imul
mov
pop
jo
mov
dec
ljmp
cmp
rolb
cmp
ds
add
ja
push
and
mov
cmp
sbb
pushl
sbb
push
xor
pop
jbe
int
stos
push
mov
adc
push
cmpb
shlb
data16
je
cmp
out
rol
inc
test
rolb
insb
shrb
adc
xor
lret
lods
push
dec
jecxz
orl
out
and
test
pop
mov
rorb
push
push
push
lods
dec
or
xchg
mov
and
xchg
pop
add
orb
cmpl
dec
das
adc
stos
mov
lds
icebp
fistps
add
pop
shrb
fcompl
jp
daa
roll
or
insl
mov
push
and
das
or
add
inc
push
push
lea
neg
lcall
ds
jae
rolb
inc
inc
rolb
popl
dec
sbb
rolb
es
jp
rclb
insl
jae
and
insb
clc
mov
sbb
and
jp
adc
aad
cmp
shlb
xor
pop
sbb
stos
leave
lods
push
ret
ret
cs
mov
test
pop
fmulp
int3
xor
push
les
or
or
sbb
inc
jecxz
lret
push
xor
inc
add
mov
pop
shr
push
inc
sbbb
ja
dec
mov
jp
mov
inc
cmpb
and
int3
cli
jl
xor
outsb
subb
xor
mov
incl
xchg
adc
cmp
ja
lea
dec
bound
jecxz
sarb
lods
push
add
out
lods
sbb
mov
add
push
inc
mov
js
mov
and
adc
les
xor
iret
nop
jne
dec
stos
cli
lds
mov
cmp
fldt
adc
lock
xchg
sub
ljmp
mov
push
ljmp
and
dec
les
push
or
jne
test
add
push
add
aaa
or
aaa
cmp
push
pusha
and
loope
rcrb
pop
bound
xor
pusha
mov
cmpsb
jbe
mov
dec
data16
jne
mov
jmp
push
xor
lods
dec
dec
jmp
sub
loopne
in
mov
cs
mov
dec
mov
incb
repnz
adcb
popa
sbb
jbe
fwait
push
icebp
add
fsubs
aam
idivb
sub
jle
push
push
and
shl
adcl
adc
sahf
pusha
adc
pop
pusha
shr
mov
add
pop
lods
push
cs
test
sbb
jecxz
jp
mov
outsb
or
sub
andl
call
push
imul
xor
mov
add
loope
inc
jmp
or
sbb
and
pushf
add
adc
or
lods
adcb
data16
mov
ss
pop
adc
add
fstpt
add
loop
aam
sub
fldcw
mov
add
jg
cwtl
cmp
adc
cmp
push
inc
jo
cli
lret
add
iret
dec
sbb
mov
push
hlt
push
adc
mov
push
lock
inc
ljmp
repz
jg
dec
add
jae
call
add
pcmpeqb
sti
negb
add
add
cld
cmp
mov
dec
dec
out
push
out
fwait
js
sbb
pushf
clc
je
adc
aam
sub
icebp
jbe
jae
add
hlt
mov
js
pop
mov
or
lock
jae
jg
and
mov
mov
jmp
and
addb
mov
pushf
jb
adc
ret
fwait
jle
rclb
mov
or
mov
adc
mov
mov
add
js
test
inc
jl
adc
push
inc
mov
hlt
dec
in
clc
push
scas
or
fimull
loopne
xchg
call
push
push
push
xchg
inc
sarl
inc
jmp
in
les
inc
outsl
aam
and
mov
mov
shll
sbb
adc
adc
gs
incl
add
bnd
scas
lock
add
dec
or
movsb
mov
mov
cmp
add
js
repnz
ja
bound
fs
cli
and
stos
add
mov
jg
push
inc
add
loopne
mov
loopne
sbb
enter
pop
and
stos
mov
dec
jo
out
adc
fidivs
call
scas
add
fisttpl
add
add
ret
std
frstor
in
push
pusha
sbb
jno
add
decl
bound
je
sbb
push
dec
cmp
and
inc
adcl
rolb
shll
jns
sbb
add
mull
dec
jle
and
loopne
out
xchg
push
pushf
xchg
nop
push
xchg
jmp
add
jmp
and
push
call
inc
inc
add
mov
mov
dec
decb
clc
ret
pusha
sub
ds
or
cmp
xor
push
cmp
xor
cli
sahf
cmp
lock
rorb
add
push
or
mov
test
push
or
lcall
push
sbb
loopne
sub
and
jp
jo
push
xor
sbb
jbe
loop
or
ret
xchg
ss
push
addb
add
push
test
mov
test
xor
lret
jo
test
adc
cld
pusha
adc
and
cmp
inc
je
loopne
push
jp
cli
decb
push
push
mov
aas
or
mov
inc
or
int
adc
pushf
jae
cmp
cmpl
push
aam
ss
pop
fildl
add
dec
add
push
dec
shlb
in
mov
sbb
and
or
adc
or
subl
cmp
je
je
adc
push
cmp
dec
mov
in
ss
mov
add
mov
mov
fimull
sbb
adc
inc
push
dec
and
or
adc
add
or
or
mov
mov
push
out
push
scas
movsb
push
mov
jo
scas
push
add
loopne
adc
push
or
inc
add
and
nop
sbb
xlat
mov
xor
sub
mov
or
or
adc
les
xor
dec
mov
testb
ljmp
or
mov
data16
mov
add
and
ficoml
mov
sub
and
movsb
scas
push
xchg
pushf
aam
or
fdivs
jne
fimuls
jp
cld
test
jecxz
insl
mov
lcall
add
in
mov
rorb
ret
inc
fucomip
inc
bnd
cmp
outsb
mov
mov
jo
adc
add
pop
lock
push
sub
pop
lods
insl
jmp
ljmp
shlb
cmp
test
and
in
cmp
push
mov
xor
imull
push
mov
mov
mov
inc
inc
nop
mull
adc
inc
cmp
add
jmp
inc
mov
push
push
in
xor
rcll
roll
fcmovnbe
adc
jne
hlt
testl
negl
fbld
mul
add
jb
push
cmp
ja
jb
cmp
mov
jbe
xor
lods
dec
sub
xor
addl
push
mov
fidivl
jl
add
out
adc
push
pop
ret
int3
lods
push
mov
fistl
jmp
push
adc
jo
dec
mov
dec
or
inc
mov
push
push
push
cmpsl
and
pop
movsb
ret
rol
test
xor
inc
dec
push
outsb
pop
xchg
insb
in
adc
inc
roll
inc
jp
lock
stos
add
jo
cmp
sbb
clc
xorl
inc
dec
cmp
aaa
sub
jmp
cltd
int3
xchg
or
mov
lea
xchg
test
or
inc
gs
out
int3
stc
jb
je
and
es
jb
push
clc
sbb
rcl
jb
mov
xchg
and
xchg
pop
jo
cmp
inc
clc
jg
addb
adc
das
cmp
xchg
sub
push
dec
push
outsl
inc
pop
cmpsb
pop
mov
sub
fcmovnb
call
loopne
aam
ret
stos
andb
xor
shlb
scas
test
mov
pop
sub
call
and
lock
ljmp
aaa
mov
or
inc
dec
fisttpl
pop
bound
loope
mul
je
xorl
loope
mov
sub
sarl
xchg
hlt
sbb
sbb
pop
jbe
add
loopne
and
mov
aam
into
add
cmp
shlb
clc
jo
xor
inc
mov
dec
or
jo
cmpb
cmpsl
cs
fwait
mov
mov
push
cmp
movsb
or
stos
movsl
clc
mov
subb
dec
lock
xchg
lock
sbbb
sbb
adc
clc
xor
xor
sbb
cmpsb
push
lret
sarb
cmp
jbe
divb
sub
mov
push
inc
dec
ja
dec
dec
cmpsb
inc
sbb
mov
xchg
pop
jnp
test
adc
sbb
jbe
xor
or
mov
idiv
push
add
jno
ret
mov
jno
mov
push
pop
push
movsl
outsl
mov
aad
sbbl
or
je
and
fisttpll
cwtl
je
sub
jno
adc
lcall
or
loopne
xchg
add
inc
scas
inc
xlat
clc
add
js
xor
bound
jbe
sub
add
test
pop
lods
inc
js
jecxz
inc
negb
or
rcrb
dec
add
mov
les
pusha
and
push
jnp
mov
xchg
mov
out
aam
xor
push
adc
add
xchg
ss
mov
lds
movl
dec
testb
cmp
mov
mov
das
lock
adc
mov
aam
add
mov
mov
jo
je
andb
je
push
iret
push
add
pop
and
adc
clc
or
je
dec
dec
iret
xor
and
add
push
or
jbe
jmp
out
sbb
pop
mov
mov
sub
mov
ja
aam
je
mov
lea
rolb
pusha
inc
or
out
mov
xor
dec
addb
daa
lods
fcmovnu
add
jo
and
mov
inc
xchg
popl
ret
dec
dec
data16
jmp
add
fsts
inc
cmp
ficompl
mov
inc
mov
adc
inc
pop
addl
mov
das
fmul
cld
push
push
xor
push
inc
cmp
call
inc
adc
test
jl
enter
sbb
dec
dec
cmp
dec
push
mov
push
inc
mov
loopne
dec
add
and
jbe
inc
dec
xorl
xchg
mov
add
inc
jo,pn
mov
push
xor
mov
shr
addr16
insb
orb
fidivs
or
cmp
add
lcall
mov
push
add
stc
xor
pop
mov
aas
data16
ret
lea
or
ret
aam
add
mov
insb
icebp
jecxz
adc
cmp
enter
stc
filds
inc
add
push
inc
jo
int3
faddp
xchg
add
and
mov
push
movsb
adc
cli
clc
test
lea
ja
pop
orl
inc
mov
je
xchg
push
xor
mov
cmp
movl
repnz
mov
cmp
jb
sub
mov
leave
js
push
cmp
mov
incb
rclb
push
push
pop
sarb
add
pop
or
add
cld
adcb
lret
xchg
jl
pop
cmp
loop
sub
mov
sub
sub
mov
movsb
lea
es
jge
add
lcall
pop
fneni(8087
incl
dec
xor
add
mov
or
dec
aam
in
adc
inc
prefetcht0
in
pop
scas
mov
add
inc
jo
movsl
sbb
add
jl
roll
shlb
sub
xchg
sub
lods
loopne
ja
mov
add
cmp
dec
cwtl
mov
imul
push
mov
inc
shl
mov
daa
add
mov
std
lods
int
adc
int3
adc
ficoms
add
xor
scas
sarb
cli
lahf
mov
adcb
and
push
xchg
insb
add
je
lea
add
cmp
movsb
mov
inc
cmp
mov
xchg
sbbb
addb
push
xchg
je
or
cmp
mov
adc
ss
inc
and
outsl
pop
push
dec
lods
inc
sahf
add
jb
insb
and
mov
insb
or
sub
int3
add
insb
in
dec
insl
jbe
add
sub
mov
add
je
or
and
or
lahf
cmpl
out
or
inc
and
aam
jo
push
mov
je
movsb
add
scas
fisubl
cs
cwtl
rolb
dec
add
push
sub
mov
xor
lahf
into
push
dec
insl
add
movsb
mov
leave
mov
data16
dec
test
popa
push
or
addl
jae
mov
in
nop
leave
pop
adcl
sbb
ds
jg
ljmp
or
insb
xchg
adc
inc
leave
fdivs
xor
sub
movb
rcl
loop
ljmp
xchg
push
ja
jl
pop
lods
add
sub
fcmovbe
add
dec
cmp
sbb
shl
and
insb
xor
or
loop
and
loopne
push
sti
pop
sbb
add
xor
inc
sbb
and
pusha
mov
push
icebp
mov
mov
mov
les
push
mov
mov
orb
jbe
mov
test
sub
fbstp
and
dec
or
pop
rcrl
mov
std
mov
xor
mov
inc
fcomip
decl
xor
ret
dec
mov
pop
dec
inc
adc
inc
data16
sbb
lock
rorb
sub
enter
inc
cmp
sub
mov
stos
je
stos
add
cmp
std
jp
inc
roll
stos
pop
sbb
cmp
and
mov
push
pop
jmp
lahf
stc
rorl
or
inc
std
filds
inc
out
mov
leave
xor
cli
dec
pop
cmpsb
dec
shrb
ror
cmp
int3
inc
pusha
xchg
call
sahf
adcb
lea
and
mov
mov
pushf
jl
or
inc
sbb
jl
les
pop
pusha
push
hlt
pop
pop
hlt
lea
inc
lcall
or
jae
and
pop
jo
push
cli
loopne
out
or
lret
sbb
test
add
dec
or
clc
mov
pop
pusha
test
mov
mov
insb
dec
out
add
sub
pusha
cmp
repnz
push
sub
inc
data16
pusha
pop
pop
add
add
dec
data16
mov
xchg
xchg
mov
std
pusha
sub
js
test
mov
jg
mov
push
jae,pn
add
xchg
mov
das
sub
ja,pn
adc
rolb
mov
and
cmp
mov
aaa
sbb
mov
pusha
adc
mov
pop
push
adc
add
add
js
lcall
xor
add
outsl
loopne
cmp
cltd
popa
pop
loopne
cltd
dec
std
negb
mov
je
sub
lahf
movsb
rolb
or
mov
test
pop
and
loope
scas
ljmp
dec
dec
pusha
popa
data16
sub
cwtl
mov
pusha
bound
lahf
loop
adc
or
adc
add
mov
call
ficoms
or
mov
sub
test
leave
and
inc
enter
inc
cwtl
sbb
mov
adc
js
pop
and
ljmp
mov
js
or
jb
xorl
dec
mov
jbe
jp
push
inc
mov
cmp
mov
adc
aaa
sub
mov
push
rol
test
rcrb
inc
mov
xor
sub
inc
and
mov
add
out
inc
or
push
pop
jb
testb
pop
cwtl
ret
and
jne
loopne
loope
sub
int3
push
inc
lahf
loopne
jbe
decl
xor
popa
popf
test
pop
test
loopne
xchg
add
add
jno
test
fcmovb
push
scas
call
sbb
cmp
in
loopne
loop
inc
mov
adc
xchg
shl
push
adc
loopne
sbb
sarb
insl
pusha
cmp
sbbb
idiv
orb
inc
jecxz
scas
aaa
fidivs
push
je
loope
loope
ja
add
add
fcomip
pop
insb
push
cltd
mov
pushf
xchg
popa
insl
jb
loop
xchg
js
ljmp
jne
pusha
aad
push
pusha
and
rcll
inc
mov
incb
sar
cmc
add
loopne
mov
cmp
jmp
pusha
mov
loopne
in
adc
lods
or
jg
movsl
mov
dec
cli
inc
loope
test
xor
cld
pop
jo
bound
pop
popa
lcall
popa
adc
stos
jbe
mov
cmp
ret
ret
js
loopne
fisubrs
xor
aam
test
cli
jl
outsb
add
add
stos
nop
inc
fimull
decb
ja
xor
adc
cmc
call
daa
cmc
mov
je
test
lcall
mov
dec
jmp
or
and
mov
push
or
jbe
int3
mov
push
push
sub
sub
xor
adc
lods
adc
add
add
nop
shrl
movsl
enter
mov
call
dec
push
push
dec
movl
add
add
and
lahf
inc
lods
or
and
daa
loop
jno
push
jg
xorl
andb
push
xor
or
xor
mov
faddp
add
inc
sub
xor
add
jb
sbb
jl
scas
jp
mov
movd
into
add
add
adc
rclb
les
je
inc
xlat
rorb
in
xchg
mov
push
cmp
js
or
inc
lods
fcoms
clc
call
mov
clc
or
xor
and
and
mov
xor
into
xor
lret
shlb
sub
movlps
or
std
popf
or
mov
pop
or
mov
movb
test
inc
and
add
pop
push
add
sub
mov
inc
in
fsubs
dec
filds
dec
push
pop
int3
in
mov
stos
sbbb
inc
push
repz
mov
add
ljmp
ljmp
adc
out
xor
pop
out
xchg
fs
es
push
call
sti
gs
cmp
mov
pop
jle
push
push
ret
call
fdivl
inc
dec
and
pusha
inc
into
pop
stos
mov
jo
and
and
pop
cli
xor
lock
in
jae
jl
xor
int
cwtl
mov
add
enter
mov
es
add
sub
rorb
inc
ror
hlt
pop
test
ss
and
mov
data16
mov
inc
cmp
push
fdivs
inc
xor
imulb
push
aam
out
push
fmulp
sub
adc
aaa
push
nop
push
call
loope
lock
cs
and
pop
xor
xor
xor
pop
mov
lods
fadds
jb
pusha
add
mov
loop
js
lret
add
loopne
sub
push
lods
or
pop
loope
push
je
lret
xchg
aam
je
inc
insb
xor
sub
fdivp
sbb
adc
ret
add
push
shl
test
mov
add
mov
lea
jnp
xor
pop
cs
inc
and
test
sbb
incb
mov
jg
dec
adc
insl
cld
incl
jmp
js
mov
fucomip
lock
je
xor
or
jg
lods
aas
hlt
jne
movl
sub
jp
ss
adc
ret
lea
cmp
sbb
incb
jbe
mov
push
je
cmp
adc
test
inc
loopne
pop
dec
mov
push
invd
xchg
adc
lock
add
inc
testb
inc
decl
cs
pop
repz
push
cld
adc
and
and
aaa
sbb
push
mov
sub
mov
inc
or
lea
inc
or
or
inc
mov
xor
es
pop
pop
pop
sbb
add
and
dec
ret
push
and
loope
mov
mov
int
std
out
push
stos
add
adc
xor
test
dec
sbb
pop
sbb
outsb
adc
jo
xor
mov
jle
mov
mov
add
mov
inc
add
mov
mov
aaa
inc
push
negl
or
and
adcb
les
fdivrl
cld
lcall
mov
jo
movb
mov
hlt
inc
push
ret
ss
and
jmp
push
std
or
out
inc
cmpl
or
mov
incl
mov
mov
jmp
xorb
ret
pushl
sub
jecxz
add
mov
mov
clc
xchg
loopne
testb
or
enter
push
clc
jmp
jmp
addb
int
loop
cmp
xor
imul
pop
or
or
push
bound
xor
rorl
add
bound
out
mov
and
ret
or
push
add
test
lock
gs
inc
sbb
cs
or
add
inc
sbb
pop
or
mov
div
or
clc
stos
inc
lcall
ljmp
adc
fdivr
ja
cmpsb
push
scas
call
and
push
int3
fistl
out
pop
lods
jmp
dec
loope
or
adc
fisttpll
and
in
mov
int3
or
pop
icebp
adc
incb
jb
and
push
add
gs
outsb
pop
clc
xor
rorb
pop
push
loop
mov
ljmp
fisubrl
jp
mov
in
mov
clc
out
rorb
jg
push
scas
push
pop
add
and
pop
adc
xor
out
inc
adc
jno
pusha
outsl
jb
loope
push
scas
mov
add
call
lcall
je
jle
mov
xor
ja
mov
or
pop
mov
xor
xbegin
jno
aam
orb
popa
clc
pop
sahf
mov
ss
mov
rcrb
mov
lock
adc
inc
pushf
lock
or
jle
mov
outsl
sbb
adc
mov
repnz
loopne
xor
mov
add
mov
fsubs
shrl
xor
sbb
mov
mov
std
shll
mov
adc
cmp
mov
add
xor
fistps
mov
dec
adc
push
inc
xchg
lock
and
and
stos
imul
add
sbb
aam
in
xor
int
pop
or
aam
inc
xchg
in
sbb
xor
mov
es
xchg
sbb
sbb
lds
pop
sub
out
push
adcb
pop
notl
sub
adc
sub
jg
shll
xchg
test
das
sub
mov
adc
stc
jo
icebp
adc
xchg
xchg
repz
and
xchg
call
sub
and
or
and
stos
ljmp
bound
cmp
mov
mov
xor
mov
incl
xor
daa
stos
mov
sbb
or
inc
xor
or
aam
push
ljmp
cmp
adc
orl
sahf
aaa
test
in
mov
lock
lock
sbb
sbb
aas
xor
and
adc
pop
xor
add
xorb
mov
orb
jno
inc
pusha
les
push
jo
jo
cmp
add
or
dec
dec
add
xchg
xchg
or
dec
dec
lret
cmp
pop
dec
dec
dec
mov
push
jl
cmp
or
sbb
and
push
adc
cmp
or
insb
inc
mov
jo
push
outsl
jb
je
clc
mov
mov
inc
loope
sub
ret
adc
jo
pusha
mov
lea
shlb
add
push
std
sub
sub
scas
stos
int
mov
cli
daa
fiadds
push
hlt
push
cmp
scas
sti
aad
sub
insb
idivb
fists
js
cmp
les
ds
or
sub
sbb
pop
mov
cmp
xchg
dec
or
and
rolb
adc
xor
shlb
lret
pop
loopne
mov
xorb
and
sub
add
orb
mov
cmp
scas
ljmp
sub
inc
or
popa
inc
loopne,pt
sbbl
mov
or
or
sub
mov
cmpb
out
inc
lock
adcb
subb
or
cmp
adc
and
sub
lods
mov
or
clc
call
sbb
enter
fnsave
mov
and
sub
and
or
icebp
cwtl
sbb
sbb
jae
lods
nop
sub
and
xchg
add
mov
jmp
ret
movsl
push
or
sbb
dec
sub
adc
push
push
jp
inc
incl
add
test
or
jmp
jle
add
mov
fwait
inc
mov
rorb
jl
add
clc
add
jmp
add
shrb
add
adc
adc
incl
add
adc
or
sbb
add
sub
clc
xor
dec
adc
out
ja
push
les
add
and
nop
js
or
insb
mov
xor
rorb
and
cwtl
nop
mov
rclb
push
pop
or
fiaddl
data16
pop
push
shlb
pop
scas
push
or
mov
mov
movsl
sub
les
ret
clc
add
pop
ret
add
and
mov
or
js
add
or
inc
clc
add
pop
dec
adc
rolb
insb
jmp
popa
add
jae
ror
sub
iret
orl
push
jl
add
rcl
mov
adc
add
ret
xor
jo
pop
and
push
and
or
dec
jl
dec
jo
or
cmpl
clc
jmp
pop
invd
js
stc
rcrb
add
stc
cli
add
add
xchg
shlb
mov
or
mov
incb
rcr
pusha
cmpsb
jb
cld
testb
orl
stos
test
test
test
cmpsb
add
les
rolb
pop
lods
add
fcompl
pop
push
dec
inc
std
fucomi
scas
mov
mov
loopne
hlt
adc
mov
pop
lods
adc
clc
or
or
push
jbe
fisubl
and
sub
incl
dec
cmpsb
out
xchg
add
mov
jle
ret
cmpsb
jb
lock
push
std
xchg
adc
push
les
call
adc
js
mov
push
xchg
cmpsb
test
adc
or
pop
cvtpi2ps
add
xlat
incl
pusha
inc
mov
cld
inc
pusha
adc
loopne
sbb
xchg
mov
add
pusha
sbb
and
je
orl
rcl
outsb
dec
mov
mov
arpl
or
loope
push
addr16
jae
fstp
pusha
pop
mov
mov
or
sbb
push
leave
pusha
inc
inc
push
ja
mov
loopne
adcl
out
jae
in
cmp
xor
sbb
repnz
add
or
add
shr
sub
std
or
or
and
push
pusha
mov
testb
push
and
and
adc
pusha
mov
add
ljmp
dec
lock
shl
sub
or
or
push
adc
mov
lea
add
cwtl
cmp
adc
aam
ljmp
adc
jecxz
xchg
push
add
or
pusha
mov
or
jmp
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
movsl
call
rcrl
sub
inc
add
cmp
dec
or
mov
lods
je
inc
pusha
pop
adc
jecxz
pushf
clc
jmp
dec
sub
sub
xor
sub
mov
fidivrl
or
mov
pop
inc
stc
mov
add
xchg
rcr
push
push
ret
popa
enter
cmpb
pusha
inc
mov
js
add
test
add
loop
add
hlt
add
sub
mov
sbb
jne
jecxz
mov
frstor
ljmp
inc
cmpsb
dec
je
mov
xlat
adc
add
push
mov
or
loopne
inc
adc
mov
push
and
xchg
sbb
mov
loopne
les
jb
xor
mov
or
mov
aad
lea
mov
push
out
pop
pusha
loopne
pusha
push
jecxz
pusha
push
or
dec
push
push
pop
fildl
imul
or
popa
mov
and
xor
popa
addb
add
js
pop
push
push
inc
lea
jge
ljmp
push
pop
js
imul
cli
and
sbb
scas
adc
lcall
jo
mov
mov
pop
dec
daa
inc
mov
test
or
mov
pop
mov
enter
and
out
mov
test
or
adcb
dec
dec
loop
push
adc
lods
add
in
adc
loopne
bound
jno
movl
push
mov
pusha
aaa
insb
dec
cmp
mov
inc
mov
jecxz
roll
repz
in
push
sbb
mov
cltd
pusha
adc
je
addb
adc
clc
xlat
ret
xor
push
rol
inc
test
fiadds
addb
sbb
out
adc
enter
dec
adc
push
cmc
mov
mov
mov
roll
xor
inc
add
ja
sub
jne
sbb
lret
lock
jbe
inc
call
imul
or
jo
lods
cld
inc
push
fistpl
mov
jo
aaa
jne
xchg
xor
jo
sub
insb
ficomps
or
sub
xor
sub
xor
test
mov
and
outsl
sub
cmp
jne
add
pushl
jbe
xchg
push
loopne
push
out
mov
inc
ss
das
adc
pop
sbb
lock
cmp
adc
adc
xor
inc
adc
push
xchg
rdmsr
inc
mov
xor
push
add
hlt
lock
jne
xchg
jle
lock
xor
aaa
mov
pop
testb
sahf
mov
hlt
or
decl
sub
jmp
mov
lock
mov
xchg
lock
push
mov
mov
je
add
push
enter
mov
repz
roll
sti
int
outsl
lcall
mov
lcall
sbb
mov
push
pop
add
sbb
jo
divb
or
push
lcall
sbb
add
jbe
pop
jg
sbb
inc
mov
outsb
mov
mov
cmovl
nop
jo
pop
jbe
mov
sbb
jbe
jo
jbe
xor
pop
fcoms
jg
mov
je
sub
dec
sbb
xor
add
sbb
add
dec
add
fcomip
imul
inc
cmp
cld
dec
sub
xor
mov
jl
rcrb
pop
dec
xor
xor
aam
dec
lret
add
xor
dec
add
sbb
or
push
mov
fndisi(8087
test
and
add
cmp
scas
es
faddl
jbe
push
push
mov
mov
and
xor
dec
aam
push
mov
pop
inc
jo
mov
enter
movsl
filds
xor
or
inc
adc
insl
mov
xor
sub
cwtl
mov
add
mov
adc
call
stos
pop
jg
lock
xor
dec
push
xor
decl
xor
lea
xchg
mov
repnz
add
xor
jg
adc
ja
and
mov
xchg
push
mov
lock
adc
movsb
mov
loope
and
or
mov
push
test
push
loopne
sub
call
movsb
sbb
push
inc
mov
push
xor
ret
sbb
jno
pop
mov
add
daa
adc
inc
iret
icebp
add
cmp
and
mov
dec
inc
call
sbb
push
test
and
inc
or
cld
sarl
out
or
pop
movl
pop
sub
push
push
xbegin
repnz
mov
test
push
clc
stos
je
pop
ljmp
icebp
sub
cmp
inc
clc
mov
aam
pop
mov
or
mov
cmpb
sub
cmp
pusha
js
dec
pop
dec
call
mov
mov
mov
xchg
popa
lock
mov
std
cmp
mov
xor
fdivrs
adc
mov
push
clc
pop
sbb
std
push
or
lret
fmuls
push
add
ja
add
jg
add
mov
sarb
in
and
test
push
add
lea
pop
sub
adc
ss
jmp
ljmp
movsb
mov
push
pusha
jg
push
pop
aam
mov
ret
mov
mov
mov
mov
push
inc
leave
and
sub
mov
mov
push
push
call
adc
fwait
outsb
nop
test
mov
aam
adc
push
cli
jae
or
jbe
pop
test
inc
cmp
clc
adc
or
fdivrp
pusha
cmp
adc
add
or
xchg
adcl
inc
mov
ret
or
sbb
stos
loopne
add
test
jne
test
and
push
sub
sub
inc
xor
sbb
push
push
adc
pushl
mov
add
adc
push
rcll
jmp
inc
ljmp
insb
push
mov
arpl
imul
add
imul
and
adc
enter
in
cmpsb
sub
xor
adc
nop
xor
mov
ss
mov
clc
mov
int
lcall
cli
loop
shll
mov
repnz
push
and
and
subb
xor
test
mov
nop
inc
pop
cld
xor
ljmp
push
inc
adc
jecxz
daa
inc
and
push
push
mov
out
je
pop
adc
mov
orl
push
shr
cmpsb
aam
cli
inc
imul
test
jbe
mov
mov
lret
icebp
dec
jb
adcl
jl
adc
js
add
mov
lcall
adc
ds
scas
add
rcll
sahf
mov
lea
pop
pop
clc
or
sbbb
sti
adc
mov
subl
adc
inc
or
ljmp
mov
cmc
or
clc
xor
ds
in
lds
pop
mov
or
add
sti
dec
inc
inc
add
incl
scas
test
jecxz
adc
sub
sub
les
pop
push
add
bound
push
mov
pop
std
add
cld
add
push
push
cli
add
in
imul
add
test
hlt
add
push
push
repnz
lock
and
sub
loopew
addr16
mov
addb
or
shr
imul
xchg
pusha
or
out
test
xor
ljmp
add
add
addr16
cld
cmpsb
inc
aaa
cld
lcall
jp
add
enter
pop
cld
ret
xor
xor
cli
mov
pop
lret
inc
cmpl
loopne
xchg
pop
mull
sub
mov
push
fcmovb
orl
divb
inc
sub
call
int3
rolb
loop
jbe
sbb
jecxz
adc
xchg
enter
enter
xor
push
jl
and
mov
mov
adc
mov
mov
js
jle
adcb
je
movb
enter
popf
enter
lahf
insb
mov
mov
adc
jp
add
xor
ret
mov
sti
and
add
ficoml
lcall
aaa
sub
insl
imul
jo
inc
or
push
sub
cmp
int
leave
push
in
push
mov
sti
mov
lcall
adc
insl
pop
leave
inc
ljmp
rcr
fstpt
ret
test
pusha
add
push
or
mov
xlat
adc
push
add
and
sbb
push
sar
mov
lods
pop
cs
ret
ss
add
rol
ss
ret
out
sub
les
stc
push
add
int3
inc
cld
dec
dec
add
out
outsb
jg
sbb
or
imull
dec
fildl
adc
cmp
xor
jb
ds
push
add
pusha
outsb
pop
rcll
and
cmp
loope
call
inc
xor
enter
sbb
nop
push
add
cmp
popa
cmp
in
loop
sbb
andb
mov
xor
add
rorl
sbb
xchg
loopne,pt
cld
jne
rcrb
loopne
xor
jp
scas
adc
ficompl
fwait
pop
adc
pop
pop
inc
sti
cmpsb
int3
stos
push
push
push
jl
and
cmp
mov
js
lcall
pop
mov
mov
loop
sbb
shl
or
mov
push
sbbb
or
add
mov
mov
mov
jbe
sub
push
add
push
lea
mov
fdivs
adc
shll
xchg
dec
mov
call
inc
inc
ljmp
xor
pop
mov
mov
cmp
loopne
repz
hlt
inc
das
mov
jmp
lret
add
jle
cmp
pusha
loopne
mov
lods
aam
lock
pusha
add
jnp
jmp
xor
lock
adc
jne
mov
je
adc
add
and
icebp
mov
clc
ret
cmp
cmpsl
addb
jno
xor
test
adc
mov
sti
xor
add
movsb
jne
cmpl
and
ret
add
aaa
or
pusha
insl
sub
notl
sti
cmp
and
mov
jge
add
and
jg
icebp
push
adcb
test
push
shrl
cli
pop
js
fucomi
dec
or
pop
cmp
loopne
sbb
dec
popl
pusha
mov
daa
insb
sti
or
mov
mov
inc
mov
dec
dec
mov
sbb
popa
or
and
adc
mov
dec
int
das
cld
cmp
pop
sbb
inc
mov
fdivrs
ret
in
andb
out
jle
outsl
lcall
popa
jae
leave
xorb
mov
push
xchg
sub
outsl
je
or
xchg
adc
add
lcall
insb
xchg
andl
lea
insl
and
insb
jg
mov
and
xchg
je
jb
adc
adc
or
and
cmp
cmp
inc
xor
sbb
jb
xchg
loopne
mov
loope
int3
mulb
iret
mov
fistpll
jne
lea
and
je
mov
loopne
adc
mov
lea
negl
push
in
loopne
in
add
add
pop
aas
mov
subb
sbb
cld
mov
and
ret
int3
loope
mov
fs
adc
cs
add
lds
sub
test
add
pop
pop
loopne
xorb
ja
ss
mov
mov
xchg
xchg
adc
push
sbb
aaa
sbb
jb
push
pop
imul
insb
adc
add
xchg
push
fprem
or
adc
dec
mov
cltd
mov
push
pusha
cld
add
cmpsb
sbb
pushaw
movsb
insl
nop
call
je
push
cld
mov
xor
cmp
cs
add
mov
push
loopne
leave
mov
cmp
addl
jno
mov
add
jecxz
add
or
jp
cmp
pushf
mov
int3
std
or
dec
cmpsb
adc
push
mov
dec
lcall
jbe
push
scas
add
add
sbbl
adc
leave
sbb
sbb
lret
adc
jg
or
adc
jbe
mov
insl
rorl
dec
scas
adc
add
mov
sete
or
or
xor
cld
mov
push
and
nop
mov
push
adc
mov
mov
inc
cmp
subl
mov
aam
xor
nop
push
mov
mov
dec
insb
add
addb
iret
jle
es
mov
jle
mov
pop
jg
je
in
cmp
outsb
sbb
hlt
mov
cmpb
repnz
pop
cld
push
add
les
pshufw
decb
push
pushf
lods
and
leave
je
mov
clc
push
cwtl
add
lock
xlat
add
sub
xor
sub
mov
add
scas
xor
sub
test
icebp
and
js
xor
mov
xchg
repnz
hlt
mov
jl
add
xorl
fadds
jg
aaa
sbb
add
xchg
dec
add
mov
lret
lock
pusha
xor
loopne
mov
xor
test
in
mov
pusha
mov
dec
dec
adc
and
dec
sub
push
sti
mov
rclb
add
add
xchg
aam
js
je
nop
clc
adc
stc
add
cwtl
mov
cs
in
std
or
stos
jne
sbbb
adcl
dec
jo
mov
popa
test
aaa
cs
andl
adc
mov
and
shr
push
jecxz
add
pop
call
dec
pop
jb
sub
rolb
mov
outsb
fmuls
add
push
fisttpl
ja
filds
push
mov
sub
add
dec
stos
jmp
in
cmp
insb
add
dec
das
push
or
imul
imul
add
scas
inc
ret
mull
js
ret
outsb
adc
adc
jg
data16
not
mov
cltd
les
rolb
insl
or
jne
inc
lds
pop
call
adc
cmp
xor
mov
incl
mov
lea
inc
mov
add
testb
xor
jg
mov
jnp
pop
ret
adc
fdivl
aam
jo
mov
cmovns
or
push
xor
rorb
push
lock
icebp
cli
mov
xor
inc
or
jge
mov
or
mov
stos
and
or
xor
push
test
push
stos
shl
jg
push
push
test
dec
les
clc
movsl
xor
hlt
mov
or
mov
ret
lock
jo
sub
jle
mov
adc
loope
dec
inc
mov
ja
sub
bnd
jecxz
pop
shlb
inc
or
inc
push
dec
adc
scas
adc
dec
cmc
or
dec
add
out
repnz
pop
jmp
lret
cld
ljmp
lock
dec
les
adc
cmc
jg
movsl
adc
icebp
push
rcrw
cld
iret
sub
pop
adc
pop
int3
mov
jmp
jo
test
es
adc
or
pushf
or
jo
mov
out
sub
aam
test
xor
cmp
jle
xchg
lods
mov
and
bound
add
subb
aad
data16
mov
lock
fs
or
clc
incl
je
adc
or
ja
outsb
outsl
or
jb
in
adc
pop
xor
stos
push
lock
cld
inc
pop
lea
mov
or
cld
ss
sub
jmp
inc
je
push
mov
mov
ja
inc
mov
cltd
or
ret
aam
mov
push
and
inc
jo
inc
pushw
sub
outsb
pop
mov
sub
push
lock
xchg
jg
outsl
popf
cmp
add
add
sbb
fcmovnu
subb
sbb
xor
xor
ja
push
xor
cmpl
mov
pop
jg
add
mov
adc
xor
out
subl
mov
hlt
push
pop
jmp
push
and
loop
and
jg
add
cmp
mov
mov
xor
sbb
lock
adc
xor
or
fwait
mov
adc
nop
aas
shrl
mov
add
out
imull
filds
adcb
andb
lock
ja
or
movsb
and
lods
xor
into
mov
je
jno
sbb
lds
dec
adc
push
and
mov
or
decl
insb
hlt
or
and
jo
jg
or
rcrb
rolb
and
sbbl
mov
mov
in
or
push
inc
out
jne
lcall
repnz
mov
adc
and
testb
pop
sub
pop
ret
hlt
adc
aad
data16
repz
lret
hlt
and
sub
ja
jl
roll
out
mov
adc
and
add
sub
inc
push
andl
outsl
xor
xor
sahf
sbb
xor
cmp
jg
sub
push
or
rcrl
pusha
xor
and
rcrl
lock
pop
in
xor
mov
xor
mov
mov
mov
jb
ja
stos
lret
cmp
pop
shrb
fisttpll
mov
mov
fsubs
les
cwtl
sub
ret
jne
into
cmp
jp
jl
js
faddl
fs
add
push
cmpxchg8b
enter
mov
lcall
add
loope
scas
cli
loope
hlt
jo
jecxz
mov
fiadds
js
or
divb
jmp
adc
adc
lahf
rolb
mov
dec
add
add
adc
mov
dec
add
add
cmp
jne
dec
shlb
mov
das
or
fmull
clc
xor
pusha
cld
stos
pop
mov
cmpl
dec
dec
xor
and
dec
inc
pop
imul
add
push
push
sub
push
push
sub
loope
cs
mov
push
leave
add
das
add
arpl
pop
mov
sbbl
dec
js
add
lds
mov
jle
mov
push
xchg
dec
mov
pop
test
loopne
loopne
cmpl
sbbb
dec
shrb
aam
cmpb
mov
fcmovnu
sbb
or
fbld
loope
sar
or
push
cltd
mov
inc
dec
add
enter
and
movsl
jae
sarl
xchg
inc
shlb
jle
outsl
mov
bound
cmp
xchg
mov
lds
movsl
call
mov
push
xchg
loopne
xchg
pusha
push
adc
pop
outsb
push
mov
or
add
pop
xor
pop
shll
bswap
bnd
cmovns
shrb
add
cmpsb
jnp
adc
pop
pop
xchg
adc
pop
cmc
pop
inc
add
adc
mov
test
xchg
or
and
jg
cmpsb
pop
int3
ret
pop
adc
pop
call
add
popa
data16
or
inc
sub
adc
lret
push
or
jno
ret
cld
ret
arpl
add
add
pusha
lock
push
shrb
ss
imul
call
jle
mov
imul
clc
rclb
push
lds
mov
adc
nop
pop
rorb
cmp
shrb
fidivrs
movsb
rclb
add
cwtl
ror
xor
inc
repnz
inc
add
add
xchg
mov
cmp
pop
popa
loope
cmpsb
cld
sub
jle
add
jle
decl
adc
fistpl
enter
xor
jmp
fsubrs
ret
mov
ljmp
inc
adc
inc
out
repz
adc
fbstp
mov
push
jmp
or
mov
out
and
xor
imul
inc
add
push
cld
out
xchg
mov
add
arpl
xchg
loopne
adc
aam
mov
push
cmp
push
clc
lock
mov
add
loopne
bound
and
lcall
pusha
add
inc
jnp
stos
jmp
dec
jbe
loop
pushw
pop
inc
xor
mov
outsl
inc
push
mov
xchg
sbb
aaa
outsb
inc
loopne
cld
mov
ljmp
dec
mov
arpl
mov
sti
adcl
data16
add
add
cmp
jg
sub
push
ja
sbb
mov
xchg
pusha
xchg
and
or
ljmp
pop
adc
loope
lret
mov
orb
or
hlt
mov
adc
into
sbb
adc
lret
sub
and
add
ja
addb
lock
inc
je
ljmp
push
lcall
jecxz
jl
pusha
adc
mov
mov
arpl
mov
rclb
fbstp
pusha
sub
cs
xlat
loope
inc
in
js
mov
loopne,pt
and
lock
push
negl
mov
addr16
daa
xchg
out
outsb
hlt
xor
sti
scas
and
mov
pop
or
and
mov
inc
negb
jbe
pop
decl
push
inc
pusha
adc
dec
test
and
add
mov
lret
mov
into
decb
mov
mov
xlat
popa
adc
push
adc
stos
clc
or
pop
mov
insb
rorl
aam
or
clc
adc
std
push
fdivr
cmp
push
cmpsb
arpl
adc
iret
jecxz
adc
cmp
jg
pushl
popa
fs
add
or
sub
sub
repnz
pop
into
xorl
adc
dec
call
call
adc
cmp
es
dec
mov
cmp
pusha
cmp
mov
loop
pop
and
scas
loopne
mov
cld
stos
jno
sbb
rcll
into
jb
or
loop
pusha
pop
test
loop
loop
mov
loopne
sbb
insb
adc
in
idiv
cmp
cmpsb
mov
pusha
in
pop
cltd
xor
loop
add
inc
dec
mov
clc
or
mov
pop
and
jg
stos
inc
or
sub
data16
fwait
mov
inc
or
or
pushl
inc
pusha
mov
clc
pop
sub
push
inc
mov
addl
aad
mov
ret
mov
add
inc
ret
aam
mov
mov
cs
inc
jp
mov
dec
jl
adc
in
fwait
insb
adc
out
push
mov
scas
hlt
mov
push
add
jg
rcll
pop
arpl
loope
je
bound
push
addl
jle
in
or
and
jg
out
push
add
in
adc
test
adcl
xor
xor
jg
inc
ror
xor
pop
cmp
jo
mov
sti
pop
push
cmpsb
xor
mov
jbe
icebp
jg
imull
add
xorb
mov
jb
push
add
or
push
bound
lock
jg
sub
js
inc
mov
add
sar
loopne
fistpll
rol
and
imull
lock
sbb
je
xor
lock
dec
cmp
or
push
mov
jbe
inc
test
mov
pop
pop
jne
shll
clc
or
push
cmp
cmp
leave
add
sub
lret
inc
les
sbb
insl
clc
loopne
cld
icebp
mov
test
into
push
dec
inc
fidivl
jle
xor
add
fisttpl
add
mov
aam
push
sbb
and
xchg
fimull
call
pop
sbb
add
mov
sbb
jle
pop
adc
pop
lock
adc
notl
test
fadd
rolb
out
leave
call
test
outsb
dec
xor
cmp
sbb
adc
ja
mov
xor
sarb
loope
add
dec
cmp
dec
jns
insl
bsr
jo
xchg
dec
pusha
jnp
bound
dec
add
cmpsl
dec
dec
add
mov
loopne
data16
xchg
faddl
pop
mov
std
jge
loopne
jge
mov
jbe
stos
and
xor
add
adc
jnp
pop
adc
pop
pushl
xor
or
clc
lcall
add
xchg
push
lock
mov
dec
push
or
xchg
and
test
mov
add
or
jp
adc
call
add
pop
cmp
jl
add
bnd
mov
movsb
and
or
das
clc
or
push
jo
sahf
pusha
addb
jbe
rol
add
orb
call
push
in
add
add
adc
je
mov
ja
or
push
push
lock
push
std
subb
test
shlb
adc
lock
inc
dec
lock
imul
or
mov
and
pop
add
or
stos
incb
cmc
aaa
pop
call
inc
mov
icebp
mov
sub
js
or
lahf
pusha
shrb
add
inc
mov
sbb
mov
add
subb
andl
push
adc
xchg
mov
scas
push
dec
jg
imul
sbb
jg
or
popa
faddl
jb
cmp
mov
sbb
add
inc
clc
mov
jg
push
dec
xchg
lock
pop
dec
out
mov
sub
lea
jno
adcb
xchg
add
lea
mov
int
cwtl
test
dec
jb
adc
or
inc
int3
mov
sub
pop
dec
mov
mov
xor
mov
imul
mov
imul
outsb
sub
cmp
xor
mov
or
jl
addl
jge
jb
dec
inc
adc
ss
decb
mov
sbb
add
sub
pop
add
adc
add
jb
clc
inc
dec
mov
aas
sbb
mov
js
xchg
incl
adcb
adc
sub
mov
repnz
movsb
sbb
jae
hlt
push
sbb
cwtl
dec
cmp
xor
mov
xor
sbbb
rclb
lret
mov
ret
jl
adc
pusha
cmpl
jmp
add
out
mov
push
or
insb
mov
mov
pop
ss
adcb
sub
js
lock
push
add
push
add
ds
subb
dec
push
loopne
cli
inc
sbb
lea
xor
lret
daa
popa
fistl
mov
pop
cmp
mov
movsb
xor
xor
mov
mov
mov
js
cmc
shr
jl
std
pop
fs
lret
jmp
jb
dec
add
or
inc
inc
pop
sub
adcb
jg
hlt
dec
and
lock
pop
addl
inc
or
dec
stos
mov
decb
sbb
cmp
add
mov
lea
adc
push
loopne
cltd
rcrl
or
pop
cmpb
test
repnz
and
mov
pop
sbb
dec
push
loopne
xor
jo
inc
enter
mov
adc
xchg
xor
mov
jmp
mov
je
daa
jno
jb
xor
data16
sub
jno
inc
push
inc
scas
inc
push
call
lods
repz
mov
ret
imul
mov
adc
mov
cmp
outsl
cmp
std
subb
mov
mov
lods
adc
pushl
or
shlb
je
push
sbb
nop
fsts
ds
cwtl
dec
hlt
fidivl
fs
and
in
pop
pop
xor
cmp
clc
rcrb
std
daa
xor
repnz
push
mov
and
popf
xor
cld
push
jnp
mov
shlb
or
push
jo
into
ficoms
mov
sbb
stos
lock
out
aam
loopne
add
dec
and
hlt
inc
sbb
add
lods
lods
push
pcmpeqw
pop
add
inc
xchg
add
fsubp
mov
add
add
imul
pop
mov
packuswb
and
push
push
push
arpl
movsb
inc
inc
add
cmpsl
mov
or
stc
add
adc
fildl
mov
out
mov
jg
mov
aam
test
jmp
test
outsl
test
fidivrl
cmp
dec
dec
push
inc
mov
dec
dec
push
or
mov
jl
or
jo
push
sub
dec
and
push
sub
ret
sub
sbbb
stos
lock
lods
test
xor
add
adc
or
inc
jecxz
mov
fsubrs
mov
fadds
je
sub
adc
daa
push
aam
and
sub
xor
adc
pop
lret
movsb
cld
add
les
mov
mov
adc
mov
cmp
xor
fidivrs
sub
into
add
or
adc
add
cmp
inc
out
mov
aaa
mov
xchg
push
push
push
lods
pushf
mov
xorl
push
bound
mov
je
jg
mov
outsb
add
inc
clc
outsl
push
add
mov
sub
inc
loop
lret
mov
push
push
or
or
jge
cwtl
in
std
jmp
cli
insb
into
mov
sub
add
gs
jg
inc
pop
pop
pop
cmpsl
add
xchg
repnz
xchg
push
mov
cmpb
hlt
call
and
jg
aad
es
mov
aad
shr
movsb
xchg
mov
loop
mov
in
xchg
or
ja
push
inc
mov
rcll
loop
addb
addb
fisttpl
fldz
out
mov
test
addr16
jg
and
xorl
rcrl
dec
movsl
push
lds
sbbb
cmp
ja
or
in
aaa
out
add
test
add
subl
test
test
subb
mov
sub
pop
mov
inc
shrb
cwtl
inc
pusha
sbb
lds
in
inc
adc
es
mov
aam
les
ret
imul
in
mov
jl
mov
and
mov
push
ds
push
sbb
movb
orb
pop
cld
repz
mov
stos
lods
lcall
cli
add
cmp
or
lcall
push
pop
and
adc
rclb
and
pop
push
inc
jne
lds
call
add
xor
sub
les
sbb
das
xor
pop
or
pop
out
sbb
xor
fld
add
xchg
cmp
or
lret
push
mov
jne
js
je
imul
lahf
cld
adc
pop
mov
xor
jbe,pt
sub
adc
roll
sub
jo
mov
push
ret
icebp
inc
lock
jbe
add
lock
sub
out
sbb
inc
or
and
inc
push
rolb
or
dec
shll
adc
or
adc
pop
and
pop
add
mov
inc
imul
cmp
and
and
xchg
adc
fstl
pxor
fcomps
nop
inc
rol
addl
ja
ret
shlb
push
ds
cli
divb
cld
repz
jl
and
scas
pand
movd
xor
fsubrl
dec
dec
and
and
test
out
xchg
in
out
stos
pop
xchg
jg
fistl
xchg
sarb
rol
or
in
cmc
pop
cld
or
rcll
inc
sub
cli
shl
enter
sub
pop
inc
mov
fsubrl
xchg
add
fs
in
in
mov
push
cs
pusha
shl
push
dec
in
lock
mov
push
xor
hlt
jg
mov
hlt
dec
int3
and
sub
rcrb
loope
mov
test
adc
mov
pop
in
sub
shlb
sub
je
repnz
inc
push
pop
out
addb
cs
xlat
lds
bound
add
push
xorl
decl
mov
andl
mov
loopne
inc
mov
xchg
push
dec
out
add
pop
clc
aaa
mov
add
push
popa
es
inc
cs
shl
and
adc
fcmovb
and
and
mov
je
int3
bound
addb
sarl
out
cld
lret
call
popa
xor
inc
ret
and
jg
pop
sub
arpl
popa
inc
cmp
adc
sub
loop
pop
dec
inc
in
mov
dec
sub
push
repz
mov
inc
loopne
sub
add
gs
cs
push
out
out
popa
push
or
lret
bound
and
push
and
lock
mov
mov
and
or
aaa
or
outsl
jbe
and
loope
sbb
in
pushw
sub
jb
adc
mov
loopne
pop
out
rol
push
xchg
dec
out
sbb
adc
in
adc
les
mov
pop
add
mov
push
sbb
sbb
icebp
fwait
sub
mov
push
lret
lea
push
fidivl
cmp
mov
mov
sub
aam
mov
scas
adc
adc
adc
or
clc
sub
pusha
sbb
sbb
in
cmpb
sub
adc
adc
cli
das
js
pusha
add
fidivs
aam
int3
hlt
add
or
stos
pop
xor
ret
or
out
sbb
pusha
ds
fbstp
outsb
dec
clc
or
pusha
mov
add
jmp
sub
mull
xchg
lods
test
xchg
dec
push
or
icebp
jl
push
andb
cmovs
movsb
push
adc
inc
adc
movsb
jbe
test
or
adc
mov
mov
jp
pop
aas
jmp
sbb
push
lea
inc
cltd
and
dec
pop
rorb
test
out
imulb
push
adc
add
paddusb
pop
sub
mov
and
loop
jge
inc
cld
cmp
sub
jmp
mov
es
fcoml
add
sbb
in
mov
push
or
movl
pop
imul
push
jbe
sub
mov
andb
pop
xchg
rcll
fs
test
into
adc
add
sub
push
js
inc
sbb
roll
cld
xor
in
test
jle
adc
add
sbb
pop
xor
bound
pusha
mov
or
mov
movsb
mov
or
je
push
dec
in
add
dec
cli
pusha
add
push
ja
pop
or
test
jb
mov
in
jecxz
push
mov
inc
sub
cmp
imul
push
test
jbe
insb
jae
inc
xor
inc
data16
jb
push
push
xchg
cmp
inc
sbb
inc
mov
mov
mov
jge
xorl
push
pop
call
in
xor
adc
mov
fdivrl
rolb
pushf
pop
icebp
pop
enter
add
add
test
jne
xorb
adc
in
push
add
and
push
js
ljmp
dec
je
push
add
inc
int3
pop
lea
jge
jb
rcl
aam
dec
xor
call
add
jmp
push
add
xchg
push
icebp
mov
xchg
mov
sbb
mov
aad
inc
jne
sub
inc
stos
adc
jl
rolb
enter
push
sbb
lret
sbb
lcall
jbe
ja
adc
or
cs
push
adc
jp
fisubrl
cld
lahf
jo
jbe
adc
lret
je
jge
sub
mov
insb
lret
rcl
inc
adc
pop
xchg
lea
jne
jp
xor
add
mov
popa
push
dec
test
cmp
push
mov
shlb
fnstsw
dec
and
test
je
mov
cmp
mov
inc
icebp
pop
aad
or
add
cmc
dec
xchg
sub
call
mov
mov
pop
clc
sub
jnp
xor
mov
adc
pop
sbbl
cmp
ss
mov
sarb
adc
ljmp
aaa
sub
das
and
lock
or
inc
inc
cmpl
shl
sbb
mov
xor
jae
adc
clc
enter
sub
pop
add
insb
insb
push
inc
inc
hlt
add
xchg
in
dec
adc
mov
scas
ret
sub
sbb
add
mov
mov
and
mov
stos
jo
add
jg
sub
and
push
jae
mov
aam
adc
push
mov
shll
cld
mov
test
xor
stc
fdivs
jl
jp
lods
dec
xchg
push
jbe
call
and
ds
mov
clc
lock
test
test
orb
jecxz
int3
sbb
push
cmp
into
adc
clc
sub
push
xor
inc
clc
ja
decl
mov
mov
shr
xorl
les
test
je
nop
lock
adc
hlt
adc
dec
repnz
fdivs
or
mov
incb
push
bound
ljmp
mov
int3
ret
mov
sbb
dec
ret
icebp
add
add
bound
add
icebp
ja
les
mov
mov
dec
add
add
jmp
ljmp
sub
sub
lock
popf
jbe
xchg
cld
shll
xor
sub
and
pop
adc
faddl
jb
add
loopne
dec
or
xchg
inc
hlt
fs
and
push
les
dec
jle
push
jb
dec
and
out
clc
sub
data16
movl
icebp
xor
fwait
mov
pop
lock
xor
pop
loopne
movsl
xchg
leave
push
xor
shll
fldl
jo
jno
push
daa
rolb
mov
xchg
std
aad
inc
add
or
add
push
in
xlat
mov
jnp
adc
sarl
jb
imul
xor
dec
xchg
xlat
sbb
ficomps
and
inc
lods
push
push
fcmovbe
ficoms
sahf
lock
fistps
fwait
ss
pop
imul
add
sub
inc
in
add
lds
lcall
pop
push
lcall
fs
sbb
cmpsl
imul
lods
and
cmp
lock
mov
xor
mov
sbb
nop
mov
clc
and
fcomi
insl
cs
sub
test
faddl
jb
fadds
in
pop
dec
imul
rolb
sbb
sbb
jbe
push
xchg
mov
xchg
xorl
stos
xor
jl
js
jmp
ss
mov
sub
cli
insl
sar
mov
sbb
and
std
or
add
or
test
shrb
add
dec
stos
sub
and
insl
jbe
or
imul
imul
adc
cmp
add
insl
imul
repz
lock
aam
scas
ret
sbb
or
mov
mov
int3
add
ficomps
push
sarb
sub
into
in
shrl
mov
jmp
imul
das
push
xchg
xchg
out
xor
adc
add
enter
push
pop
xor
inc
cmp
xor
stc
orb
lea
or
add
adc
cld
push
ljmp
xchg
inc
inc
push
mov
cmp
loopne
pop
pop
xor
nop
add
adcb
xor
movsb
aad
lock
in
add
shlb
test
push
or
push
xchg
push
repz
es
jl
adc
jg
shl
push
jo
push
aad
sub
loope
jnp
daa
adc
mov
sbb
push
sbb
xor
in
mov
fiadds
xor
xor
or
dec
shr
in
jne
or
sbb
or
lock
stos
jae
mulb
div
adc
cmpl
xor
pop
les
sub
rep
cmc
mov
lds
jp
test
jp
in
mov
ds
push
pop
jo
push
or
fadd
dec
or
mov
sahf
add
adc
cmp
imul
lcall
fisubl
add
test
mov
hlt
add
lock
in
shll
mov
and
mov
push
ds
sbb
xor
add
imul
stos
mov
mov
lods
test
or
push
add
pushf
push
negb
xor
add
or
mov
cmp
add
and
test
mov
shl
sub
lcall
dec
sbb
inc
inc
scas
imul
sub
sub
mov
and
sbb
or
add
cld
divb
jg
lock
call
lcall
imul
imul
xlat
xchg
aam
mov
in
xor
nop
addb
mov
lcall
loop
addb
fisubs
mov
lods
addb
add
sbb
fwait
jge
orb
pop
lods
mov
loopne
mov
je
and
imul
sbb
adc
or
mov
cld
or
aas
hlt
lock
add
in
leave
mov
dec
sbb
add
mov
sub
test
cwtl
shll
add
imul
sub
pop
lods
adc
cmp
sbbb
nop
add
mov
xor
or
inc
add
cmpsb
jp
push
jbe
insb
fwait
mov
push
insb
add
add
pusha
pop
fwait
cmpsb
cmp
out
dec
dec
fldcw
rorb
pushf
cmp
adc
stos
jge
sarb
sub
jnp
stos
fiaddl
sub
jnp
jge
sbb
jg
cmpsb
jns
aam
int3
imul
sub
rclb
mov
or
movsb
xchg
mov
push
xor
jl
mov
push
sbb
fwait
mov
cwtl
lea
rol
sbb
sub
pusha
sub
adc
xor
push
lcall
xchg
or
iret
movsl
mov
sub
subb
add
or
add
sbb
push
sarl
mov
add
or
negb
xor
sbb
add
jmp
lods
stc
ss
add
fnstenv
shll
out
sbb
push
adc
loop
xchg
test
inc
mul
cs
xchg
cltd
sbb
imul
dec
jns
loopne
ret
lcall
sbb
andl
mov
mov
mov
jb
andl
pop
sbb
xor
jnp
add
dec
dec
sahf
inc
cmpsb
sub
inc
cmp
push
imul
and
fwait
out
dec
push
add
sahf
push
add
pusha
mov
cli
add
out
ljmp
loop
fcmovbe
rolb
lret
mov
adc
das
pop
call
add
bound
cmpsb
cli
inc
push
ljmp
fiaddl
lret
jecxz
inc
sbb
adc
mulb
pop
cli
xor
adc
sbb
mov
xor
lcall
xor
aaa
xor
outsb
push
bound
pop
push
push
or
es
xor
divb
cmp
xor
sbb
and
sbb
or
loopne
adc
data16
incb
dec
stos
jb
cs
or
jecxz
sbb
loop
fiaddl
pop
ret
add
dec
imul
add
mov
lcall
stos
cmpsb
mov
imul
movsl
sbb
jbe
add
dec
push
mov
cld
and
push
movsl
mov
movsl
decl
pushf
test
sarb
jp
loopne
add
movsb
push
cmpsl
movsb
push
adcl
mov
nop
pusha
add
push
jo
mov
adc
movsl
mov
out
sub
mov
sbb
xorb
aaa
sbb
mov
push
push
inc
andl
inc
inc
xor
add
and
rolb
mov
push
cmp
pop
dec
adc
cmp
ret
js
cs
repz
jmp
dec
jnp
xor
aad
int
leave
lcall
std
loop
lcall
mov
xchg
lods
or
movb
sbb
roll
mov
inc
push
pushf
xor
inc
inc
sub
mov
dec
and
mov
add
add
jl
pushl
sub
xor
pop
movsl
pop
add
mov
sbb
aad
mov
mov
ds
pop
ljmp
pushl
shl
push
pushf
or
sti
adcl
decb
or
or
inc
or
mov
aam
sbb
ss
into
nop
push
adc
ret
mov
dec
mov
cmp
call
sar
ret
ret
jl
push
sub
andl
mov
std
inc
mov
outsl
and
jbe
adc
xorb
cli
neg
shlb
mov
mov
ret
adc
push
adc
push
std
addl
cmp
pop
sbb
and
adcb
adc
inc
fdivl
call
push
aaa
mov
add
jne
call
ret
pop
add
clc
xchg
das
add
sbb
pop
and
and
jl
jl
add
cmp
icebp
xchg
or
add
mov
test
lock
cmp
xorb
push
data16
pushl
inc
add
rolb
cmp
in
pop
int3
rol
mov
mov
push
and
pop
cmp
and
cld
fisttpll
mov
sub
and
add
xor
add
add
push
and
call
xchg
jo
mov
add
lock
call
mov
cmpxchg
adc
add
or
mov
cmpsb
jle
fildl
or
pop
jl
or
test
mov
and
je
xor
stc
adc
rclb
or
xor
add
xchg
mov
pusha
or
pop
lock
fdivrp
xor
cltd
xor
xchg
xor
mov
push
xchg
std
add
adc
dec
add
clc
cmp
repnz
call
or
mov
jae
pop
mov
fistpl
dec
insb
and
sbb
adc
je
ljmp
jo
jb
push
or
stc
add
and
lods
push
mov
and
mov
js
lock
mov
adcb
cmpb
rcrb
or
push
cli
mov
jno
adc
or
push
cmp
lock
mov
cmp
add
inc
and
jo
jnp
shrb
add
mov
orl
imul
popa
sahf
jno
call
and
ljmp
xchg
add
xor
mov
shl
push
xor
sbb
je
ret
ljmp
xor
xchg
jnp
xor
jge
jle
mov
scas
mov
xchg
or
pop
push
rcll
or
pop
les
andb
fimuls
mov
mov
add
cmp
mov
add
arpl
cmpl
aaa
out
call
ja
mov
cli
sbb
add
pop
lock
in
or
dec
cmp
call
jle
xlat
push
xchg
rolb
inc
mov
sub
in
sbb
dec
in
add
mov
outsl
add
or
orl
and
inc
sub
sbbb
sbbl
xor
adc
fwait
andb
fsubrs
test
add
loop
pop
cmpsb
adc
push
pushf
test
cli
xorb
dec
shrl
lcall
mov
sbb
or
push
ljmp
push
xchg
adcl
or
sti
or
add
call
loope
and
out
js
dec
fisubrl
orb
cmp
push
addb
adc
or
add
sub
in
mov
sub
clc
jle
outsb
ja
add
pop
mov
adc
nop
lds
dec
mov
xor
adc
mov
pop
push
mov
inc
or
test
rorb
or
cmp
or
shlb
dec
je
call
testb
sbb
push
jne
out
call
cmc
add
pop
add
in
push
std
shlb
sbb
xchg
cmp
ret
cmpsb
jp
stos
shll
mov
add
pop
add
adc
sti
sbb
lods
push
mov
xchg
mov
das
pop
fwait
shrb
xlat
shrb
es
sbb
pushf
sarl
shlb
ja
scas
pop
and
shufps
mov
push
push
les
sarl
call
test
rorb
fiadds
pop
das
les
fcomip
mov
sub
fcoml
shll
sbb
jmp
or
jle
loopne
push
push
clc
roll
adc
in
push
cmc
add
aam
sub
sub
testb
mov
sbb
jmp
loope
loopne
ljmp
call
loope
loopne
inc
popa
and
adc
dec
in
unpcklps
in
std
push
test
sahf
push
lock
call
sbb
pop
adc
loopne
inc
bound
loopne
lods
lods
call
jmp
imul
ss
add
push
jne
pop
pop
or
or
jne
call
testl
pop
call
jo
cli
aaa
test
pusha
inc
push
flds
xor
fwait
jmp
inc
rorb
jecxz
jne
scas
pop
lock
clc
mov
ret
sbb
pop
mov
push
loope
adc
stos
movsb
test
and
pop
pusha
dec
popa
sub
pusha
sub
or
push
nop
test
mov
lods
popa
shrb
add
add
pusha
and
cmp
xor
mov
aas
pusha
and
imul
fwait
loopne
ret
cmp
push
or
loopne
xor
shl
mov
je
add
pop
add
mov
rcrl
adc
add
and
pusha
add
sbb
jle
xchg
push
inc
cmp
je
cmp
adc
cmp
je
cmp
pop
int
enter
insb
lods
add
loop
notl
sti
call
inc
ret
sub
repnz
addr16
loopne
pusha
out
in
out
mov
je
ret
test
adc
je
jnp
mov
xchg
cs
stos
je
adc
je
lods
je
ret
mov
sbb
mov
adc
insl
je
ret
outsb
je
outsl
sbb
int3
in
je
ret
fiadds
adc
xchg
jo
lods
add
sbb
in
aaa
sub
and
adc
lock
mov
es
push
sbb
add
stos
sbb
pop
ljmp
imul
pusha
pop
add
bound
test
xchg
xchg
in
jmp
cli
jbe
loopne
pop
hlt
andb
inc
test
ret
sub
ja
push
sbb
and
mov
jg
jb
loope
jmp
mov
sbb
jbe
mov
out
cmp
aaa
rorb
pusha
pop
jmp
adc
mov
mov
jg
sub
bound
addl
dec
pop
pop
or
cmp
ret
adc
push
jl
addl
or
mov
sbb
outsb
adc
push
mov
push
loop
lea
xchg
inc
inc
insb
mov
in
adc
cmp
pop
pusha
inc
mov
inc
popa
cmp
popa
add
mov
out
push
call
pusha
adc
fucom
sub
dec
sbb
cltd
loop
outsl
fdivrs
inc
mov
call
or
jbe
shr
or
ja
roll
jne
push
or
jno
jge
push
pusha
pop
ret
and
cmp
loopne
jg
fs
add
adc
sbb
repnz
test
addb
cmpb
clc
pop
call
ljmp
cld
scas
mov
in
call
xor
push
adc
jl
and
stc
test
push
sub
push
lret
push
mov
push
cli
insl
mov
sub
hlt
and
cmp
inc
icebp
mov
cmp
jns
xor
xor
xor
and
adc
pop
sub
ret
xor
ljmp
push
div
pusha
out
mov
and
mov
add
add
jg
sahf
mov
or
ret
adc
xchg
cmp
loope
jle
lods
jmp
lret
jl
imul
mov
call
stos
lcall
repz
daa
pop
push
icebp
or
mov
in
and
stc
call
xchg
inc
sbb
data16
pop
sbb
xor
clc
ljmp
mov
xor
xor
inc
cmp
repz
mov
and
or
test
pop
sub
add
sbb
or
repz
xor
push
inc
call
dec
scas
nop
repnz
int3
pusha
int3
int3
lret
dec
jp
inc
loope
mov
loopne
mov
pop
dec
aaa
add
pop
sbb
adc
mov
mov
je
xchg
sub
jnp
mov
cmp
jecxz
cmp
xor
daa
adc
insl
insb
pop
lds
sub
inc
outsl
jmp
mov
push
arpl
push
loopne
dec
ja
fs
adc
lods
fldl
outsl
xchg
in
mov
js
mov
mov
pushl
pop
or
add
mov
mov
adc
xchg
and
or
push
pop
mov
sub
push
repz
sbb
jl
hlt
mov
mov
cs
fwait
loope
shll
add
and
pop
in
mov
mov
insb
mov
pop
sbb
xor
outsb
addr16
push
push
std
jo
xor
jne
and
push
dec
fwait
rorb
fstpt
insl
cmp
add
cmp
fdivp
add
ficoms
xor
cwtl
inc
in
std
pop
fimuls
mov
out
lock
daa
jge
xchg
aas
stos
insl
xchg
xor
or
pop
cmp
add
inc
adc
flds
mov
ds
mov
jns
add
lods
mov
std
push
lock
push
scas
aaa
pop
mov
je
sbb
jnp
pop
test
sar
popa
dec
cmp
mov
jl,pt
mov
mov
test
lret
bound
jno
fucomip
and
mov
pop
xchg
sbb
push
leave
lret
xor
loope
stos
xor
jae
add
mov
test
out
inc
popf
stc
repnz
or
cmp
mov
cmpsb
xchg
scas
push
dec
dec
subl
push
mov
lret
out
loope
inc
xchg
push
out
sbb
dec
arpl
dec
xchg
push
enter
jno
mov
popf
mov
loope
push
rcll
xor
movsl
loopne
popf
shrb
mov
xor
mov
arpl
push
lock
and
sbb
xor
xor
stc
dec
xor
dec
aas
pop
add
fisubl
pop
lock
sbb
ja
push
jo
popa
sbb
sbb
sub
stc
inc
lcall
clc
test
mov
push
imul
sub
sti
icebp
add
xchg
pop
add
mov
adc
pop
push
out
sahf
pop
sbb
jbe
arpl
adc
sbb
mov
jo
push
jns
sbb
dec
icebp
loopne
cltd
mov
and
sub
pop
pop
and
loope
adc
outsb
test
sbb
sbb
or
adc
xor
jecxz,pt
xor
sub
ss
pop
aad
xor
add
icebp
push
add
imulb
xor
int
or
add
sbb
movsl
in
cld
xchg
pop
push
sub
in
aaa
cltd
xor
dec
mov
mov
add
push
jge
imul
inc
ret
sub
pop
adc
add
sub
xor
jnp
cmpsb
imul
mov
or
pop
in
push
insb
outsb
add
fidivs
mov
iret
out
xchg
adcb
inc
loopne
into
mov
mov
sub
or
inc
or
fcomps
or
ljmp
in
in
add
push
push
cli
addb
add
out
loopne
and
sub
adc
jg
imul
push
stc
mov
sarb
push
lcall
sbb
add
xor
mov
adc
push
or
adc
scas
xchg
add
mov
mov
add
les
insb
gs
ljmp
dec
dec
ds
mov
insl
xchg
popa
xor
adc
mov
test
mov
sti
inc
ja
push
xchg
gs
cltd
inc
imul
insl
popa
mov
ds
inc
xchg
insb
inc
dec
add
mov
dec
subl
add
and
mov
outsl
jb
xchg
outsb
adc
push
add
xchg
int3
push
jbe
push
outsb
mov
sarb
and
jo
or
and
or
insb
xchg
arpl
lcall
push
sub
insb
jecxz
fmull
dec
or
add
mov
jb
sbb
add
gs
xchg
add
or
enter
push
inc
sub
imul
fcmove
dec
pop
pushf
adc
mov
lcall
pusha
rorb
inc
loop
cmp
out
add
clc
add
and
mov
adc
rcrb
or
mov
movsb
sbb
dec
xchg
arpl
cmp
mov
aam
dec
leave
add
add
cmp
imul
outsl
sub
je
inc
xchg
or
movb
nop
push
imul
lret
lea
xchg
popa
jmp
lods
xchg
jp
inc
sbb
popa
xchg
ss
and
adc
fdivrs
fcoms
rorb
cltd
push
test
mov
clc
mulb
insb
add
imul
sub
xchg
or
jne
push
cmp
inc
insb
mov
adc
ret
mov
mov
scas
or
pop
stos
push
test
fs
lea
je
je
and
pop
call
inc
push
scas
sub
rcrb
push
xchg
ret
in
fisttps
add
mov
rorl
mov
gs
clc
lds
std
shll
jae
jb
nop
jg
ja
push
adc
push
or
cmp
add
xchg
mov
jecxz
pop
out
js
push
add
push
inc
pop
ljmp
jbe
bound
add
adc
add
mov
add
xchg
add
mov
ds
shrb
jb
loop
adc
clc
fildl
pop
jne
add
dec
inc
gs
mov
mov
add
push
lods
inc
add
arpl
mov
pushl
adc
stos
pusha
push
loopne
mov
pop
mov
and
fs
push
shrb
or
lea
or
pop
push
lcall
mov
cmpsb
or
or
add
aaa
sbb
mov
pop
data16
inc
add
inc
or
outsb
cwtl
pusha
adc
add
sahf
xchg
xchg
clc
xchg
xchg
pusha
es
enter
loopne
add
push
insb
push
imul
adc
clc
jg
jb
mov
pusha
sub
and
pop
inc
nop
insl
jo
sbb
sub
cwtl
loopne
sbb
dec
nop
mov
jne
arpl
add
in
scas
js
dec
adc
outsb
adc
adc
jne
arpl
mov
ds
idivb
push
gs
sbb
mov
lods
add
sub
loope
in
test
cmp
sub
lods
shl
js
mov
xor
popf
xchg
push
cs
push
sbb
arpl
test
das
inc
xchg
add
or
loop
mov
jb
jb
jg
cmp
sbb
je
xor
xor
gs
ret
les
inc
loop
mov
jns
adc
out
inc
popa
fwait
push
gs
and
push
inc
push
or
in
inc
adcb
inc
dec
mov
inc
add
xchg
xor
dec
test
ret
jg
jo
inc
insb
xchg
sbb
jne
jns
daa
fs
jg
mov
in
dec
lcall
fidivrl
or
add
add
xchg
int
ja
fimull
enter
push
xor
orb
aaa
mov
cmpb
xchg
jmp
mov
xchg
outsl
push
loope
stos
imul
push
add
rcrl
dec
add
or
popa
xor
or
and
jns
add
ret
push
loop
test
xchg
push
dec
xor
mov
test
push
jae
push
dec
ret
push
xor
pusha
and
outsb
inc
mov
clc
mov
popa
xor
pop
jne
inc
sar
jb
pusha
adc
jge
loopne
into
mov
jne
lds
loopne
pusha
scas
insb
mov
xchg
pop
fs
push
add
out
lcall
lcall
jb
jmp
dec
popa
sbb
sub
inc
gs
mov
outsl
xchg
and
in
or
inc
outsl
mov
xor
cmp
cmp
cld
push
sub
daa
mov
push
add
dec
and
call
adc
jne
dec
inc
outsb
data16
xchg
incl
pop
mov
push
insb
lock
pusha
push
out
lock
xor
adcb
lods
in
mov
fldt
mov
push
xor
out
imul
inc
xchg
jb
cmpsb
sbb
cmp
mov
xor
dec
adc
xor
mov
pop
add
xchg
jle
int3
xor
and
adc
lahf
adc
adc
push
fsubl
test
sahf
jno
std
aaa
cld
dec
pop
inc
or
dec
mov
mov
pushl
xor
les
xor
imul
mov
xchg
nop
jo
xchg
xor
insb
jne
cmpsb
dec
popa
lcall
loop
lcall
outsb
lcall
icebp
inc
dec
xor
xor
stos
cmp
inc
sub
adc
repnz
jno
cmp
jp
inc
insb
insb
cs
cmp
jae
jno
mov
repnz
inc
xor
push
ljmp
repnz
push
cmc
push
rclb
jp
mov
push
mov
mov
inc
cld
jo
sbb
cld
pushl
mov
add
push
xor
jae
sahf
xor
jle
add
mov
jae
mov
push
popa
xchg
testb
icebp
das
xchg
mov
or
xchg
in
popf
adc
pusha
cmp
ljmp
xor
adcb
sahf
xchg
push
mov
fdivl
mov
pop
mov
nop
int3
xor
imul
mov
lods
cmp
mov
jg
mov
push
dec
mov
shll
inc
rcr
and
add
enter
mov
outsl
stos
outsb
imul
or
jecxz
push
bound
lea
mov
push
sbb
jns
popf
and
iret
pusha
es
test
or
outsb
adc
insb
xor
nop
imulb
clc
mov
push
inc
push
add
mov
mov
mov
jae
jo
stos
jp
dec
add
aam
imul
shll
mov
mov
push
lock
push
add
movsb
jno
cwtl
push
and
outsl
jae
add
div
arpl
add
fwait
outsl
push
ja
xor
adc
insb
xor
inc
and
sti
pop
mov
push
xor
icebp
sub
es
jnp
xor
add
addl
mov
xor
cwtl
loopne
jg
cs
mov
mov
test
mov
add
ja
fdivl
arpl
mov
outsl
clc
decl
dec
inc
dec
mov
fwait
jno
jo
fcomip
or
inc
mov
cmc
imul
push
push
nop
lock
or
gs
insb
inc
jae
outsl
fsubs
test
scas
mov
mov
dec
sahf
add
and
fs
int3
add
gs
ljmp
pop
mov
lock
or
nop
push
jb
jl
adc
inc
rcrl
mov
cmc
or
mov
xchg
fdiv
aaa
sub
fs
push
xor
or
pusha
aad
mov
popa
imul
mov
dec
outsb
jne
inc
lcall
push
cwtl
imul
push
icebp
outsl
or
adc
add
add
pop
loope
std
push
sbb
sbb
or
jnp
inc
sbb
icebp
pop
hlt
and
ja
icebp
add
xor
push
es
inc
cmpsb
jbe
sbb
fdivl
mov
push
jo
push
sub
xchg
loop
jae
stos
push
xchg
xor
je
repnz
cld
fildll
mov
fs
inc
xor
mov
mov
mov
mov
xlat
inc
repnz
mov
push
lock
push
outsl
pop
or
pusha
push
add
dec
cmc
sbb
or
rcl
and
lds
inc
insb
dec
jb
xor
lock
pop
inc
mov
jge
sarb
cli
mov
inc
out
add
ja
add
pop
dec
ret
test
pushf
mov
jno
jae
test
sub
xchg
fs
xor
jne
add
mov
push
xchg
pop
jge
cmp
mov
cli
xchg
imul
lock
rorl
sub
push
outsl
cmp
loope
hlt
sub
add
dec
loopne
lock
add
push
inc
jae
xor
xor
jbe
push
mov
cmp
ja
xchg
fbld
test
jo
je
push
add
cwtl
adc
cli
imul
lods
mov
insb
nop
hlt
bound
mov
lods
jo
fstpt
movsb
xchg
or
xor
lock
jo
jle
pop
xorb
jae
jae
testb
sbb
test
decl
jbe
or
pop
jno
jae
xor
sti
mov
cmovno
xlat
adc
rorb
popa
jae
shrb
push
xchg
decl
mov
jno
add
fs
in
jb
lds
fiaddl
xor
lock
je
aaa
mov
pushf
mov
mov
sbb
push
jo
hlt
push
jge
stos
into
and
inc
ljmp
clc
mov
mov
gs
jne
jo
jo
pusha
or
loope
outsl
mov
aaa
add
mov
mov
ret
or
insl
inc
nop
jne
cmp
add
adc
add
add
inc
or
push
mov
xchg
add
mov
or
jle
in
add
mov
push
data16
jb
jae
xor
pop
push
sub
bound
cli
fcmovnu
or
xor
push
add
lcall
mov
js
xor
dec
orb
adc
mov
insl
mov
inc
repnz
push
dec
jmp
xor
jp
das
push
mov
daa
mov
pop
data16
insl
cmpb
aas
push
push
mov
push
gs
imul
add
js
dec
sahf
mov
add
xor
fwait
and
jno
popa
ret
addl
sbb
inc
outsb
and
add
stos
mov
mov
cwtl
subb
push
xchg
inc
insb
push
mov
subb
jbe
jb
popa
adc
mov
add
mov
jle
nop
stos
icebp
daa
pop
cmc
push
inc
push
int3
mov
fs
insb
mov
pop
cmp
ficoms
ret
add
sub
dec
push
mov
lock
push
xor
sub
or
popa
inc
xchg
test
xor
pop
movsb
int3
gs
lcall
and
pop
js
lock
mov
imul
add
test
faddl
dec
outsb
push
mulb
leave
orl
movsl
xchg
push
xchg
test
push
les
scas
cltd
fidivrs
cs
add
and
js
call
jns
arpl
loope
xorb
jmp
lcall
adc
pop
rol
clc
inc
out
arpl
mov
push
dec
sahf
insl
test
outsb
push
dec
fs
inc
lea
ret
jle
mov
push
inc
jbe
jb
cmpsb
pop
cwtl
mov
mov
push
pushf
adc
mov
jmp
xchg
iret
add
inc
dec
ret
into
sbb
sbb
add
cld
rcrl
pop
xchg
data16
outsb
popa
and
subb
shlb
shll
jp
stos
rclb
fisttpll
nop
jb
dec
push
fbld
shrl
or
pusha
rorl
mov
or
sub
ljmp
jge
dec
test
push
push
lods
loope
out
outsb
shll
cmp
inc
imul
fadd
push
mov
xor
ss
popa
mov
add
data16
inc
pushf
loopne
lea
jle
loopne
adc
shr
jbe
enter
add
ret
xchg
rorb
add
ret
aad
push
mov
imul
dec
add
xchg
mov
xor
outsl
scas
push
lods
jne
inc
push
movsb
clc
das
cld
add
sbb
push
xchg
push
cld
pushl
pop
pop
cmpsl
rorb
je
pusha
outsl
jl
loopne
gs
insb
in
inc
jae
mov
dec
mov
sbb
xor
add
pop
mov
xchg
jbe
insb
lcall
sub
incl
mov
or
or
jbe
mov
cmp
inc
push
dec
in
mov
clc
outsl
nop
push
jb
push
outsb
loopne
popa
jo
inc
loope
sbb
mov
in
jbe
jl
gs
push
xchg
in
pop
ja
and
mov
incl
jae
or
ja
inc
loopne
push
dec
mov
xchg
mov
jnp
nop
dec
popf
rcrb
xor
pushaw
les
fs
in
dec
push
xchg
cld
les
and
or
out
mov
mov
mov
adc
and
push
testb
bound
bound
decl
popa
andb
insb
pusha
xchg
pusha
add
dec
rclb
jae
push
dec
pusha
push
push
bound
mov
lret
mov
push
arpl
push
mov
jnp
inc
add
push
fs
sahf
or
inc
dec
lock
test
jl
add
imul
and
pop
inc
inc
mov
ret
cmc
inc
inc
pusha
inc
mov
add
lods
imul
aam
adc
add
outsb
jno
jne
pusha
push
ss
cs
or
loop
dec
dec
inc
arpl
in
or
mov
cwtl
mov
xor
test
insl
xchg
inc
or
gs
adc
mov
adc
push
push
add
mov
add
lret
sbb
xor
mov
jnp
jbe
add
jle
dec
mov
and
ret
add
mov
mov
pop
cli
jg
cltd
bound
or
pusha
or
loopne
mov
cltd
adc
mov
arpl
popa
shlb
rcrb
outsl
addr16
loope
adc
pop
jo
dec
adcb
inc
mov
sbb
popa
xor
addr16
add
jp
push
call
push
loopne
lods
call
outsb
jo
mov
add
pusha
call
adc
or
push
loop
sbb
or
in
xor
pop
cwtl
jbe
and
and
int3
add
adc
and
inc
loopne
popa
adc
bound
xchg
popa
dec
or
or
mov
test
inc
lret
mov
push
test
sbb
or
sub
call
loopne
inc
insb
adc
mov
pusha
test
addl
movsl
test
mov
addr16
jo
movl
mov
mov
lea
decl
xorb
in
inc
dec
mov
insl
inc
dec
inc
sub
sbb
ret
inc
sbb
fwait
loopne
inc
int
dec
inc
pushf
addr16
push
adc
aaa
inc
out
add
or
mov
pop
xor
and
or
push
push
mov
push
and
inc
sbbb
ljmp
aad
add
jo
arpl
or
mov
daa
add
and
shrb
jae
adc
add
je
ficomps
mov
cld
adc
mov
mov
xor
insb
mov
fstpt
and
pop
xor
jo
outsl
je
sbb
mov
add
cmpsl
and
push
inc
repnz
les
mov
xchg
addb
je
xchg
arpl
icebp
inc
and
lea
cmpsb
jle
dec
push
jns
mov
jo
ljmp
jo
in
jb
sarb
clc
decl
mov
mov
add
mov
js
mov
add
add
jne
insb
push
xor
xor
js
lock
je
xor
scas
inc
pop
lret
sub
push
push
out
andb
shrb
inc
push
cmpsb
push
push
hlt
mov
mov
or
and
xor
add
in
add
pusha
jne
xchg
pop
jo
mov
aam
adc
cmp
push
addb
dec
jae
and
lods
scas
inc
hlt
or
fildll
jno
mov
je
mov
lcall
inc
dec
lods
mov
sub
xor
xor
movsl
test
mov
lret
in
push
adc
in
mov
sar
test
lock
inc
insb
pop
xor
clc
add
pop
mov
adc
jbe
lock
out
xchg
xorb
insb
insb
cli
es
push
dec
or
add
inc
inc
jbe
xchg
aam
popa
in
sub
inc
pop
mov
push
push
cld
fildll
cmpb
mov
icebp
push
cwtl
dec
lods
jbe
dec
sub
mov
in
mov
mov
decl
ja
ret
or
push
lea
pushf
push
gs
jb
xchg
push
mov
push
push
lcall
dec
mov
push
xchg
testb
popa
imul
pop
jbe
lock
outsl
xchg
mov
gs
push
dec
and
repnz
dec
dec
cwtl
inc
push
push
xor
insb
dec
sbb
mov
jo
icebp
popl
inc
outsl
call
vphaddbd
call
std
xor
push
xor
and
inc
scas
dec
mov
push
add
mov
cmp
insl
lock
mov
insl
jg
dec
fcoms
jb
arpl
dec
and
fmuls
insl
nop
hlt
or
sub
jle
pop
ja
outsl
imul
sahf
add
cmpsb
arpl
pop
jne
xchg
je
popa
lock
mov
jo
jne
arpl
cmp
clc
decl
jbe
dec
lea
stos
pop
add
push
mov
push
mov
sub
push
loop
cli
add
hlt
popf
jne
test
incl
fwait
xor
out
push
je
jnp
or
push
inc
mov
cli
je
test
sub
fcoml
jge
inc
fs
dec
xor
test
xchg
add
cmp
push
mov
scas
enterw
mov
and
dec
aaa
inc
negb
vmread
jb
imul
aas
add
adc
add
jo
out
mov
and
sub
mov
filds
jl
shrb
mov
jo
hlt
add
push
xchg
jg
mov
mov
or
xor
mov
xchg
inc
movsl
or
adc
mov
push
mov
ret
cmp
fcomi
adc
fisubs
mov
imul
mov
cmc
leave
in
xor
mov
sbb
lock
sub
imul
sbb
mov
jmp
inc
mov
xlat
xchg
mov
push
add
inc
push
mov
add
jle
mov
aad
xor
dec
pop
subl
nop
loopne
adc
inc
inc
xchg
test
inc
test
filds
testl
push
mov
jmp
stos
push
in
pop
loopne
pop
out
jecxz
repnz
jnp
es
xlat
adc
stos
pop
scas
cld
mov
cli
inc
adc
add
repz
loope
test
int3
xchg
icebp
stos
jg
fildll
inc
repnz
or
addl
dec
cmpsl
inc
in
insb
cmp
inc
mov
shlb
cwtl
push
cmpsl
lcall
ret
pop
add
lock
and
pop
ret
call
pop
jbe
add
addr16
xchg
clc
repz
fdivrs
fldl
xchg
fisttps
add
jne
adc
int3
int
xor
xchg
movb
sti
aas
mov
or
mov
sub
cmp
mov
outsb
in
xor
cmp
sub
mov
loop
pop
dec
shl
xor
mov
mov
jle
cmp
mov
scas
add
xor
cmp
lock
cld
in
add
aas
cmp
test
ja
stos
mov
decl
pop
loope
les
leave
aas
insl
les
sarl
adc
lcall
movb
lock
jle
xchg
aas
dec
mov
jp
sahf
push
pop
roll
jl
in
mov
das
jp
mov
add
dec
jmp
clc
fldt
lods
mov
inc
das
fstl
add
ja
push
mov
cmp
gs
cld
arpl
jl
mov
cmp
loopne
rcr
std
xlat
cmp
mov
in
call
mov
cmp
jne
cs
jno
rcl
decb
xor
mov
pop
in
pop
xchg
adcb
xchg
mov
sbb
mov
adc
dec
in
leave
rolb
push
into
imul
movsb
adc
ret
call
mov
xchg
aaa
ret
ret
scas
add
gs
cli
fistl
dec
push
scas
stc
xchg
jge
sbb
enter
loop,pn
cmpsb
fsub
add
aaa
sub
xor
aaa
shlb
inc
add
fldt
push
scas
inc
push
pop
orl
addl
imul
ds
addb
dec
stos
adcb
mov
mov
lods
adc
into
mov
call
fisubl
roll
push
sbb
or
fcmovnu
data16
mov
testl
stos
ss
cmp
add
inc
out
sub
push
lcall
lea
stos
sbb
das
pop
andl
cmp
stos
ja
orl
fwait
jge
sbb
xor
ret
push
cltd
lahf
lret
add
mov
int3
add
mov
mov
push
add
mov
in
lret
or
sbb
inc
pop
lret
adc
jmp
mov
inc
xchg
lret
fistpl
loope
pop
sub
insl
mov
mov
xor
icebp
insl
dec
test
and
mov
ss
outsb
mov
mov
or
or
shrw
jl
das
sub
jge
fldt
mov
jmp
push
push
mov
popa
dec
js
cmpsb
xor
bound
cmp
fcmovnu
call
mov
addr16
jmp
push
dec
sub
adc
aaa
jb
mov
cs
es
rorb
out
dec
pop
adc
pusha
xchg
lret
cmp
push
aaa
mov
aas
push
clc
int
adc
aaa
daa
aaa
in
paddb
idivl
adc
push
adc
inc
cmp
adc
or
out
cmp
out
sbb
cmp
ja
sarb
cmp
sahf
sbb
movsl
ja
xor
xor
xor
xor
adc
xor
xor
loop
and
sbb
test
jae
enter
and
jbe
push
fwait
and
adc
jbe
in
adc
hlt
cmp
ret
stos
cmp
add
cmp
cmp
push
adc
insb
inc
adcb
mov
xchg
add
cmp
cmp
cmp
cmp
icebp
jg
mov
inc
cmp
cmp
adc
cmp
loopne
adc
add
xchg
test
repz
outsl
out
adc
cmp
push
mov
cmp
cmp
jae
xchg
arpl
ss
adc
insl
adc
add
adc
mov
repz
and
sarl
ds
ds
ds
xchg
dec
cwtl
and
adc
fnsave
inc
push
adc
push
aaa
jg
mov
mov
inc
les
xor
and
in
adc
add
ss
repz
repz
and
aas
mov
insb
ret
mov
mov
mov
repz
xchg
aas
aas
cmpl
aas
jae
aas
arpl
movsb
aas
push
aas
popa
mov
inc
and
aas
mov
inc
and
aas
mov
rcl
mov
push
loopne
push
fdivrp
or
xor
xor
lret
adc
mov
es
pop
xor
les
sbb
fwait
mov
xor
lods
xor
xor
xor
xor
mov
sub
adc
xor
add
and
sbb
xor
xor
xor
jl
jnp
mov
xor
pop
xor
fwait
sbb
sti
int
sbb
xor
mov
fldt
adc
into
sub
mov
cmp
mov
xchg
dec
mov
sbb
jl
mov
enter
pushf
xor
ss
mov
mov
xor
fdivl
sbb
in
xor
cld
pop
or
mov
mov
sbb
sbb
test
fwait
xor
out
mov
jl
jnp
mov
xor
xor
mov
xor
es
ss
mov
xor
xor
xor
ljmp
xchg
xor
xor
xor
xor
xor
xor
ss
or
jo
xorb
pop
mov
lods
ds
aas
insb
aas
inc
jno
pop
jnp
sub
loop
ss
orb
lcall
insb
or
sarl
xor
xor
jnp
int
call
mov
jg
cmp
cmp
cmp
mov
add
add
adc
push
add
inc
or
aam
scas
mov
outsb
mov
cmp
cmp
cmp
cmp
enter
cmp
in
sbb
dec
cmp
mov
dec
ret
jl
aas
lock
push
or
mov
nop
xor
xchg
out
xor
or
xor
xor
xor
xor
cld
decl
xor
xor
mov
dec
ss
aaa
add
mov
xchg
add
add
inc
popa
pop
pop
cmp
rorb
sbb
sbb
cmp
cmp
stc
cmp
cmp
mov
xorl
lock
add
popf
cmp
xor
repnz
xor
leave
sahf
aaa
push
aaa
lret
loopne
cmp
cmp
cmp
dec
clc
pushl
sub
cmp
inc
inc
cmp
cmp
cmp
mov
lock
jmp
push
out
cmp
cmp
rclb
jo
push
cmp
fcmovnu
sbb
cmp
adc
fdivrs
and
jl
lock
jl
cmp
cmp
adc
fsubrs
gs
cmp
push
ret
stos
aaa
or
das
cmp
xchg
cmp
xchg
mov
cmp
xor
pop
mov
add
mov
repnz
lock
insl
adc
cwtl
xor
lods
ds
sbb
pop
sub
xor
data16
sub
pop
add
cmp
cmp
cmp
cmp
popw
cmp
cmp
cmp
mov
enter
nop
inc
mov
aam
cld
pop
idivb
inc
nop
push
test
xor
xor
pop
xor
xor
xor
xor
mov
xor
adc
xor
xor
push
push
add
into
xor
outsl
clc
lcall
dec
xor
adc
rolb
sub
popa
in
xchg
call
cmp
popa
lock
cli
cmp
dec
push
cmp
cmc
fwait
jmp
pop
cmp
xchg
adc
cmp
lock
pop
mov
cmp
cmp
adc
cmp
adc
aaa
ds
std
ja
pushl
push
ds
sarl
aas
jp
fwait
aas
sub
adc
inc
incl
push
xor
sbb
dec
xor
mov
mov
dec
xor
xor
xor
cli
xor
xor
xor
xchg
lahf
xor
xor
xor
adc
xor
add
push
je
and
jne
scas
in
mov
ss
aaa
adc
jge
mov
adc
lea
fs
dec
ljmp
cli
push
cs
aaa
std
fnstcw
cmp
adc
cmp
cmp
test
js
inc
sarl
cmp
push
mov
cmp
inc
in
dec
cli
in
filds
test
je
mov
mov
pop
ds
push
aas
lds
inc
aas
sbb
loopne
mov
aas
push
aas
sub
and
lods
mov
call
aad
xor
fdivl
xor
mov
ret
xor
xor
and
ss
and
or
pop
cmp
cmp
fwait
mov
repz
outsb
jge
mov
ret
jo
dec
mov
inc
das
orb
mov
out
and
dec
mov
xor
daa
inc
xor
jbe
mov
dec
xor
pop
into
arpl
mov
add
cmp
cltd
cmp
mov
adc
cmp
cmp
in
ss
adc
mov
pop
cmp
mov
loopne
cmp
add
jmp
mov
sub
mov
scas
jo
lret
xor
xor
roll
dec
xchg
push
cltd
mov
jecxz
mov
or
gs
ss
adc
shl
outsl
jg
aaa
cwtl
mov
pop
cmp
lds
lret
cmp
cmp
mov
lods
cmp
ds
adc
cmpsb
xlat
xor
pop
cld
inc
xor
ss
aaa
and
out
sub
fidivrs
add
jl
rcrb
popa
push
cmp
adc
ds
jae
xor
out
insb
cmp
aam
cmp
test
mov
mov
scas
add
repnz
xor
clc
call
mov
call
add
daa
jle
lcall
in
cmp
sub
outsb
and
ljmp
mov
xor
xor
jne
xor
mov
mov
shl
jne
mov
jbe
mov
int3
fdivs
or
das
xor
xor
xor
adc
xor
mov
imulb
pop
xor
xor
fiaddl
js
xor
std
xor
xlat
adc
cmp
mov
xor
jo
push
xor
lahf
xor
insb
xor
jl
addb
jg
test
push
add
pop
movsb
xor
mov
xor
xor
ss
add
ss
insl
ret
int
adc
ss
lahf
ss
cld
int
cld
ss
xchg
jl
test
ja
mov
xchg
ss
fcomip
fistps
movsb
ss
lods
orb
ss
ss
aaa
ss
add
mov
ss
add
pop
fdivl
pop
fsubp
insb
std
mov
sbb
ds
ds
aas
mov
mov
outsb
pop
aas
cld
ljmp
push
rclb
incl
out
xor
out
jb
lcall
xor
sbb
ss
add
pop
stos
xor
out
cli
jmp
cwtl
push
xor
bound
jo
mov
mov
ret
xor
fbld
sbb
xor
inc
xor
add
stc
nop
imul
sbb
jg
fbstp
sub
iret
adc
popf
xor
lea
test
outsl
mov
and
xor
jg
shll
pop
xor
adc
repnz
xor
scas
mov
jmp
insl
cmpsb
xor
hlt
add
out
push
pop
loopne
sub
mov
frstor
rorb
popa
test
and
xor
out
xor
xor
mov
bound
lock
sbb
push
xor
ret
ljmp
xor
ss
push
cmpsb
push
jg
lock
jo
dec
shlb
sub
aaa
push
aaa
movsl
add
out
pushl
jb
xchg
test
insl
adc
aaa
xor
divl
add
loope
xor
decb
push
outsl
cmp
adc
cmp
int
aaa
fidivrs
sbb
or
loop
cmp
cmp
mov
cmp
cmp
cmp
adc
cmp
cmp
sbb
jmp
cmp
shrb
cmp
xchg
scas
sub
xchg
loopne
repnz
cmp
add
adc
outsl
dec
add
and
and
add
push
mov
sahf
and
scas
push
or
ljmp
push
insl
xor
xor
xor
outsl
fadds
xlat
xor
xor
xor
xchg
add
shlb
into
mov
xor
jecxz
loopne
int
jne
test
mov
pop
clc
xchg
xor
mov
out
xor
xor
xor
xor
fidivl
add
stos
xor
xor
xor
sub
aaa
jge
aaa
adc
xor
xor
movsb
xor
xor
xor
fdivs
sbb
std
xor
xor
ret
out
ret
icebp
ret
scas
cli
lcall
cmp
sahf
sub
fstpt
icebp
ljmp
or
stc
into
add
aaa
in
aaa
or
push
loope
aaa
jecxz
fnstenv
sub
iret
aaa
xor
mov
aaa
push
aaa
cmpsl
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
test
jne
ljmp
cltd
aaa
popa
aaa
mov
aaa
mov
inc
aaa
shll
cmp
lret
aaa
das
aaa
aad
and
aaa
jmp
aaa
pop
aaa
std
add
pop
cmp
cmp
dec
clc
call
cmp
cmp
cmp
cmp
push
cmp
sarl
cmp
inc
cmp
cmp
jne
test
jg
jnp
ljmp
decb
cmp
cmp
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
decl
cmp
cmp
mov
cmp
xchg
cmp
xchg
jg
outsl
cmp
cmp
mov
cmp
ljmp
cmp
scas
inc
pushf
cmp
leave
cs
cmc
divl
test
out
lds
xor
xchg
shlb
push
mov
xor
ljmp
jb
pop
jo
ss
cmp
cmp
xchg
cmp
cmp
jl
cld
pushl
inc
cmp
cmp
cmp
cmp
cmp
cmp
push
jg
fstpt
je
sahf
cmp
adc
push
ds
popa
stos
icebp
ds
mov
aas
ret
inc
call
loop
mov
mov
pop
pushf
scas
aas
outsb
jecxz
jl
sub
in
inc
xor
mov
xor
xor
xor
add
xor
xchg
std
jg
xor
xor
xchg
xor
adc
push
lea
inc
jp
push
mov
jno
jbe
aaa
out
lock
mov
push
cmp
cmp
leave
cmp
cmp
test
pop
cmp
inc
outsb
cs
ljmp
cmp
pop
mov
jg
jbe
arpl
test
mov
sub
outsb
adc
inc
xchg
aas
dec
aas
out
mov
pop
repz
xor
fistl
xchg
xor
hlt
cmc
pushl
xchg
xor
je
cmpsl
xor
enter
pop
cmp
fwait
push
xor
cmp
shll
loope
and
rolb
mov
xchg
cli
xor
xor
jge
xchg
call
mov
xor
or
mov
mov
inc
inc
mov
dec
ss
mov
jb
ljmp
in
push
cmp
mov
imul
cmp
leave
cmp
jg
jg
cmp
cmp
scas
sarb
mov
cmp
cmp
cmp
cmp
cmp
push
loop
cmp
sub
cmp
xlat
cmp
mov
scas
ds
ds
lods
aas
cwtl
xor
iret
into
mov
int
sahf
dec
xlat
xor
xor
inc
xor
subl
xor
xor
ljmp
loopne
loop
xor
xor
daa
xor
ss
pop
loopne
push
rcrl
cmp
push
cmp
mov
dec
cmp
mov
mov
mov
cmp
lods
test
pop
ds
loop
sub
cmpsl
cmp
cmp
decb
or
mov
pop
xor
xor
loop
lcall
rcr
mov
xor
xorb
inc
clc
scas
jmp
adc
fbstp
sub
dec
ss
ss
jg
stos
mov
cmpb
aaa
scas
aaa
cmp
decl
ss
mov
stos
cmp
adc
pushf
cmp
cmp
cmp
cmp
cmp
cmpsl
xor
and
ds
shlb
out
imul
pop
loopne
inc
xor
sub
or
mov
adc
add
enter
incl
mov
xor
xor
xor
xor
xor
xor
fdivs
inc
mov
and
sub
ljmpw
lds
in
testb
test
cmp
cmp
cmp
cmp
stos
ljmp
push
or
mov
cmp
lds
push
movhps
daa
loopne
incl
int
push
sbb
xor
xor
jg
icebp
fisttps
xor
xor
xor
xor
mov
xchg
ss
ss
shlw
or
jbe
inc
add
mov
pop
cmp
cmp
cmp
cmp
and
std
cmp
cmp
cmp
cmp
jb
push
adc
repnz
pop
xor
scas
xor
sub
mov
or
lcall
xor
jo
mov
sti
xor
sbb
jg
add
lock
lods
fwait
aaa
push
aaa
mov
repnz
sbb
cmp
push
repnz
xor
mov
push
fs
jae
test
out
pop
sub
mov
arpl
cmp
cmp
cmp
cmp
sub
add
cli
xchg
cmp
fwait
pop
test
push
cmp
cmp
push
lea
or
push
cmp
add
aas
rclb
push
xor
outsb
cmp
xor
xor
scas
push
xor
xor
outsb
aaa
cmpsl
ljmp
cmp
cmp
cmp
test
mov
or
pop
cmp
rcrb
cmp
cmp
cmp
add
xchg
cmp
clc
aaa
ljmp
idivb
cmp
cmp
mov
xlat
outsl
clc
pop
cmp
cmp
cwtl
cmp
mov
or
or
cmp
push
arpl
jp,pt
bound
xor
xor
add
xor
xor
xor
xor
xor
lods
cli
mov
jo
mov
xor
cs
xor
cmpsb
dec
sub
adc
cli
mov
movsl
pop
push
mov
jb
fsubrp
xor
stos
mov
rol
out
xchg
cmp
or
in
and
enter
scas
cmp
clc
cmp
pusha
ret
cmp
dec
cmp
cld
cmp
cmp
cld
clc
xchg
push
pop
scas
inc
aas
pushf
aaa
xor
xor
xor
sbb
push
mov
xor
mov
xor
xchg
xor
mov
xor
or
pop
loopne
cs
xor
mov
mov
xor
sub
iret
xor
dec
xor
xor
xor
dec
or
xor
push
push
dec
ret
cmp
xor
fdivl
sbb
and
daa
aas
std
cmc
lcall
cmp
cmp
clc
cmp
cli
mov
cld
cmp
cmp
cmp
ds
ds
aaa
inc
addr16
cli
lcall
xor
xor
xor
push
int
leave
jo
mov
nop
xor
jo
push
popa
xor
xor
xor
xor
push
adc
outsl
add
scas
cmp
cmp
cmp
jbe
xchg
cmp
sarb
sub
cs
aad
push
cltd
cmp
leave
sar
mov
cmp
cmp
cmp
push
loope
xchg
cmp
inc
cmp
hlt
jg
mov
ds
cli
add
aas
cmp
mov
outsb
xor
mov
push
loopne
push
cmp
mov
xor
xchg
aad
inc
adc
xor
xor
std
xchg
sub
jge
xchg
xor
mov
test
loop
xor
xor
dec
lock
xor
push
lds
or
adc
dec
xor
xor
scas
or
fdivs
mov
jle
repnz
push
ss
ss
imul
jmp
aaa
xchg
aaa
mov
cmc
aaa
jmp
cmp
pop
cmp
sub
push
cmp
cmp
cmp
mov
sbb
hlt
jg
cmp
cmp
cmp
push
lret
and
ds
push
fistpll
shlb
sbb
outsb
jns
je
shlb
movsl
xor
lods
in
xor
xor
sub
cld
insl
mov
xor
xor
lret
xor
inc
sub
pop
sahf
hlt
xor
xor
xor
data16
mov
out
xor
dec
ret
mov
cmpsb
pop
xor
push
cmp
and
test
sub
test
cmpsb
push
shlb
clc
xor
loopne
fmull
mov
sbb
add
sub
aaa
in
cld
push
lcall
push
ret
mov
cmp
scas
adc
cmp
cmp
cmp
ljmp
dec
cmp
or
adc
icebp
pop
add
imul
push
cmp
mov
cmp
cmp
orb
push
mov
cmp
lret
jo
or
cli
ret
dec
xor
das
lcall
testb
cmp
loopne
sub
xor
xchg
jle,pt
inc
stos
clc
pushl
push
ds
aas
ss
cmpsb
aas
data16
push
aas
sarb
aas
divb
cmc
shrl
add
enter
jge
das
push
and
sbb
xor
xor
xor
inc
push
out
bound
mov
xor
jae
cwtl
xor
xor
xorb
std
pushl
bound
mov
and
jmp
fidivl
xor
xor
xor
xor
xor
xor
xor
mov
out
jb
aaa
mov
adc
xchg
into
or
cmp
mov
mov
outsb
cmp
sub
sbb
cmp
stos
cmc
cmp
and
dec
cmp
cmp
cmp
cmp
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
clc
call
cmp
cmp
int
bound
test
adc
icebp
lds
inc
rolb
add
push
push
ret
xchg
push
mov
aas
aas
ds
mov
aas
test
cmpsl
imul
fistpll
stos
icebp
or
xor
incb
xor
dec
icebp
jg
pop
push
xor
xor
jbe
inc
xor
aaa
push
cmp
jp
pop
or
jmp
cmp
cmp
pop
mov
add
ds
aas
test
nop
xchg
sub
fisttps
xor
jbe
xor
outsb
pop
xchg
xor
xor
bound
dec
cwtl
xor
sub
pop
add
movsb
and
sbb
out
out
xor
outsb
push
add
xor
out
push
adc
pop
mov
adc
ljmp
xchg
inc
ljmp
adc
adc
xor
xchg
mov
push
ja
jg
inc
inc
sub
xchg
and
lret
inc
pop
movsb
mov
ss
aaa
cmpsb
push
loop
xor
aaa
cmp
repnz
cli
fidivrl
cmp
cmp
xchg
je
icebp
xlat
sbb
out
dec
inc
xor
lock
xor
orl
lea
xor
mov
into
ljmp
xor
xor
xor
xchg
mov
mov
lcall
mov
scas
std
xor
ss
pop
ds
xor
adc
addl
ss
push
jp
aaa
jl
lea
adc
into
scas
cmp
jecxz
outsb
ljmp
lea
jp
jno
cmp
add
cmp
cmp
push
lods
push
and
adc
cmp
cmp
cs
push
push
cmp
cmp
cmp
cmp
add
cmp
cmp
jb
outsl
cmp
stos
icebp
pop
sbb
cmp
movsl
cmp
xor
push
cmp
push
cmp
sbb
js,pt
push
loopne,pt
or
and
lret
push
daa
jb
dec
aas
ja
mov
sbb
filds
xor
xor
xor
ret
xor
xor
stos
sbb
pop
xorw
mov
add
pop
scas
jno
jge
mov
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
cmp
mov
and
pop
mov
js
ja
stos
int3
mov
addl
cmp
enter
mov
fwait
out
sbb
xor
mov
cmpsb
mov
sbb
icebp
mov
xor
lea
mov
mov
enter
inc
sub
leave
xor
xor
sub
ficompl
push
subl
xchg
xor
pop
or
clc
push
xor
cmpsb
stos
dec
cmp
enter
cmp
cmp
in
push
in
mov
push
test
je
or
sub
aas
aaa
aas
popf
call
push
inc
rorl
aad
push
xor
jg
mov
xor
dec
xor
enter
scas
not
xor
pop
mov
clc
mov
and
shll
xor
inc
pop
mov
xchg
xchg
ss
sub
out
or
es
mov
add
jmp
inc
cmpsl
mov
notrack
orl
inc
ret
cs
cmpsb
dec
sbb
sbb
mov
lock
in
ret
push
push
xor
pop
or
cli
pushf
cmp
cmp
jbe
cmp
cmp
rclb
add
adc
adc
outsl
jbe
test
cmp
cmp
mov
dec
cmp
sbb
cmpsl
fcomps
push
cmp
mov
stos
test
jecxz
add
xor
push
neg
outsb
inc
ret
aas
sub
iret
mov
aas
pop
adc
adc
mov
aas
mov
mov
clc
aas
xor
xlat
cmp
and
or
push
sbb
jg
adc
xor
lds
inc
js
ds
adc
fisubs
adc
movsb
scas
fidivl
xor
arpl
add
imulb
lcall
cmp
mov
lret
mov
mov
stos
push
in
aaa
icebp
add
dec
adc
jp
arpl
xchg
sub
divb
jmp
sbb
sub
in
inc
xchg
or
pusha
dec
jl
pop
test
push
mov
ja
add
dec
adc
aaa
out
test
addb
out
mov
mov
sub
ret
xor
neg
test
lahf
pop
or
je
xchg
mov
nop
xor
add
test
adc
dec
xor
ret
lods
loop
adc
xor
hlt
fcomp
sbb
call
xor
icebp
and
dec
mov
cmpsb
inc
mov
jae
call
xor
repz
mov
xchg
jae
inc
into
aad
pop
shlb
inc
xor
xchg
mov
mov
loopne
or
push
outsl
scas
outsl
push
xchg
inc
ss
ss
rolb
cmp
mov
mov
fidivl
pop
adc
adc
mov
xchg
push
nop
mov
jbe
mov
cmpsb
add
jg
push
ss
adc
jg
add
adc
or
test
aas
add
pop
adc
jb
and
ljmp
ret
test
inc
add
and
scas
jp
add
test
divb
dec
jbe
repnz
adc
fdivp
or
pop
xchg
lock
nop
xchg
push
cltd
and
es
xchg
mov
arpl
das
outsb
push
call
adc
mov
test
mov
scas
movsb
loope
das
and
insl
xchg
test
shll
add
push
in
dec
pop
dec
in
sbb
popf
xor
stc
inc
sub
int
scas
add
sarl
rclb
mov
lock
jecxz
add
push
enter
jnp
es
filds
pop
aad
mov
pop
call
cli
fdiv
cmpsl
xchg
ds
int
jge
push
jne
jb
ljmp
nop
mov
mov
repnz
scas
add
mov
shrb
iret
jns
incl
lcall
test
cmpsb
cmp
mov
arpl
mov
adc
fsubr
sub
add
ljmp
sarb
inc
pop
lea
sub
xchg
mov
jmp
mov
hlt
loope
add
dec
add
jno
jns
int3
data16
shrb
andb
cmp
addr16
loopne
adc
gs
fsubr
repz
jmp
popa
ds
push
push
out
pushf
bound
or
lds
clc
sbb
or
jp
xor
add
mov
pop
add
incl
mov
repnz
xchg
add
enter
call
or
es
scas
test
fst
and
and
push
std
jmp
add
cmpsl
mov
add
test
or
das
sar
data16
ret
push
mov
sbb
rcrl
loopne
shr
call
clc
je
push
dec
sahf
sbb
jle
inc
sub
xchg
add
shll
mov
jle
lods
jg
dec
cltd
andl
bound
arpl
dec
clc
mov
test
cli
sbb
lods
xchg
ret
and
pop
pcmpgtd
ret
add
lds
and
pop
jne
lcall
or
lcall
pop
in
dec
xor
jne
adc
sbb
xchg
and
shrb
adc
mov
xchg
inc
add
ds
cwtl
insl
push
cmp
push
inc
inc
mov
mov
adc
jl
pop
sub
mov
inc
jb
jp
in
xchg
pop
sarb
je
inc
dec
mov
stos
test
gs
insl
gs
adc
push
insb
jae
push
scas
sbb
dec
aaa
dec
das
xchg
loop
imul
xchg
test
mov
mov
push
dec
fisttpl
popf
fisttpll
dec
pushf
je
adc
mov
inc
lahf
or
jo
jl
pop
std
or
sbb
arpl
fs
jno
or
add
cmp
inc
mov
xchg
lods
fs
imul
xchg
sbb
sahf
insl
les
fs
arpl
xor
sub
pusha
xor
ds
addr16
jb
popf
push
popa
ja
arpl
push
in
push
xchg
push
xor
push
movsl
mov
add
sub
inc
sub
insb
imul
and
js
jmp
or
jg
adc
and
or
dec
add
dec
loope
inc
int3
xchg
mov
cmpsl
xchg
sub
pause
stos
dec
inc
mov
nop
or
mov
jmp
xor
movsl
loopne
xor
adc
lret
push
lret
test
adc
insl
pop
push
and
jno
pop
add
aad
inc
jns
mov
mov
test
mov
test
adc
push
pusha
adc
adc
jns
add
adc
adc
and
push
and
xor
mov
addb
lods
ret
rcrb
testl
or
and
stos
cltd
inc
or
inc
xchg
ret
mov
sub
push
loop
lds
adc
stos
bound
test
inc
inc
mov
call
loopne
add
pop
push
xchg
add
and
loopne
mov
into
repnz
adc
or
testl
lret
sub
sub
inc
push
sbb
mov
push
sub
roll
sbb
or
dec
xor
push
stos
sub
daa
xchg
add
pusha
rclb
subb
popf
xchg
sub
sar
rclb
push
adc
test
popa
sbb
pusha
add
add
test
add
sub
test
pop
leave
jne
and
xorl
fsubl
xor
dec
outsb
and
insb
xor
jae
adc
mov
pop
add
mov
push
mov
add
loop
movsl
test
inc
xchg
adc
or
cmp
adc
and
sti
daa
dec
add
mov
pop
rorl
mov
fildl
push
xor
and
out
and
push
adc
or
test
dec
xor
add
pusha
subl
rorl
mov
decl
add
xor
xchg
adc
pop
movsb
sub
shrb
data16
icebp
fwait
adc
sbb
movsl
fbld
dec
adc
push
sub
adc
addb
sub
and
adc
pusha
adc
adc
add
cmpsl
aad
mov
and
mov
push
sub
mov
outsb
popa
push
addb
sbb
shl
add
jnp
pusha
push
and
xchg
mov
and
lret
aas
push
adc
mov
fists
test
add
dec
dec
adc
rorb
mov
and
jnp
pop
push
inc
stos
or
sbb
aaa
push
roll
cmpsl
stc
andl
test
or
sbb
xor
inc
and
adc
inc
add
add
and
pop
or
push
fistl
inc
adc
xlat
mov
and
iret
test
sbb
and
or
sbb
or
xchg
adc
shlb
inc
dec
sub
popa
xor
sbb
mull
add
aaa
adc
sbb
insl
mov
mov
test
test
fwait
push
sbb
sub
or
notl
inc
add
push
cmp
stos
iret
and
sarb
mov
push
xor
adc
push
cmpsl
leave
mov
sbb
imul
add
daa
loope
pusha
and
xchg
loopne
push
inc
pop
loope
xor
and
shrl
arpl
out
jno
inc
xchg
add
arpl
push
inc
jge
xchg
inc
jne
dec
mov
mov
push
add
push
xor
and
pushw
pop
adc
and
mov
and
sbb
in
push
or
popa
jecxz
bound
pop
inc
adc
inc
andb
push
push
mov
inc
inc
int3
shlb
movsl
xchg
sub
lds
mov
orl
push
inc
sub
fstpl
mov
sub
jns
mov
push
sbb
pop
aam
mov
add
inc
lds
add
add
mov
push
mov
push
xor
and
pop
mov
push
add
sbb
mov
or
add
or
sti
mov
mov
test
sbb
mov
sbb
lea
dec
adc
push
test
xlat
adcb
mov
mov
push
inc
mov
jne
or
leave
or
adc
gs
xor
adc
sub
sub
adc
lds
test
and
and
sub
in
push
xor
push
add
push
lods
ret
adc
inc
movsb
test
push
and
inc
inc
xor
adc
xlat
mov
dec
sub
jns
adc
adc
xchg
sbb
mov
cmpsl
mov
pop
push
or
and
or
fdivrl
mov
andl
inc
add
sbbb
lea
test
sub
int3
push
rcll
inc
mov
xrelease
or
adc
popf
adc
lcall
or
sbb
pop
xor
das
test
sbb
daa
add
and
add
adc
jecxz
mov
xor
sbb
and
or
add
mov
das
and
imul
xchg
mov
mov
add
pop
add
lods
insl
ja
add
push
dec
add
scas
loopne
add
loopne
popl
ret
xor
sbb
daa
dec
lret
xchg
adc
pop
and
fnstenv
fnstenv
cmp
mov
add
lea
nop
movb
in
jo
fcoml
ret
clc
cmp
or
or
rolb
mulb
and
pusha
cmpsl
in
add
add
mov
loopne
je
cmpsb
mov
mov
outsb
dec
push
xor
in
mov
cli
dec
rolb
add
lcall
xor
add
push
shr
jb
jb
pop
lea
repnz
xchg
mov
fwait
push
add
mov
xchg
pusha
mov
incl
add
add
add
add
add
jle
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
ret
test
inc
cmp
scas
jp
push
pop
jns
dec
test
push
mov
repnz
and
adc
and
or
nop
xchg
or
push
cltd
insb
fs
arpl
outsb
push
shrl
adc
mov
or
dec
addr16
and
mov
shll
popa
cmpl
in
add
sbb
bound
idiv
rolb
sub
mov
pop
scas
mov
sarl
rclb
add
xor
fnstcw
xorl
push
mov
mov
repz
xchg
ror
int
jge
push
mov
jb
in
add
es
or
xor
xchg
or
sub
jns
xlat
les
arpl
popf
mov
xor
or
adc
and
in
inc
mov
inc
pop
lea
inc
fstps
sub
xchg
jae
jmp
inc
xchg
loope
pop
dec
add
mov
jns
ret
xchg
aas
rcl
or
add
repz
ds
or
mull
jo
repz
push
in
addr16
push
test
dec
mov
sbb
cmp
add
rcrl
jp
lret
add
outsl
pushf
imul
mov
fs
mov
push
dec
xchg
add
dec
mov
enter
call
es
push
test
cmp
and
adc
mov
fidivrl
mov
inc
mov
ret
push
mov
call
cmp
mov
xchg
les
out
sahf
out
xor
test
xor
xchg
stc
shll
mov
cltd
sbbl
pop
arpl
test
cli
mov
fcmovnb
xor
and
pcmpgtd
in
dec
cmp
jns
stos
push
jno
cmp
stos
stos
push
jns
mov
xor
rorl
dec
push
in
jl
xlat
adc
subl
scas
in
cld
test
in
dec
in
push
sarl
mov
cmp
insl
std
not
pushf
sub
xchg
mov
mov
mov
lds
cmc
pop
jle
mov
jns
push
in
jae
icebp
ret
test
hlt
mov
ret
add
repz
or
jl
cltd
xchg
push
sbb
in
cmp
iret
adc
pop
push
pusha
mov
outsl
repnz
xor
in
test
repnz
or
sahf
fldl
mov
cld
iret
pop
jnp
pop
or
sub
sub
test
push
mov
shrb
push
enter
add
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
