mov
call
in
add
andl
push
lea
push
pushl
push
in
push
push
idiv
jg
lea
push
push
call
leave
ret
xchg
add
decl
flds
roll
dec
neg
inc
neg
movl
jmp
xchg
ret
or
fcmovnb
test
push
in
push
dec
in
lock
add
and
xchg
lret
call
push
push
lea
push
clc
push
push
push
out
push
ja
mov
inc
sub
xchg
add
cwtl
push
push
mov
loopne
pusha
mov
xchg
jnp
sub
test
jbe
outsl
jle
insl
gs
push
in
push
push
lods
hlt
insl
imul
and
clc
add
pop
mov
push
call
ret
jbe
cmp
push
std
push
bound
les
lret
ss
cwtl
mov
mov
call
outsb
cmpsb
in
or
lock
fnstcw
movsl
xor
add
test
loop
push
fisttps
arpl
and
and
sbb
shl
mov
inc
fsubs
or
push
jne
push
jae
pop
mov
in
cmp
xchg
add
xchg
sub
xorb
mov
mov
inc
fxch
or
enter
sbb
push
jmp
clc
sahf
push
popa
push
xor
adc
push
cld
push
cmp
xor
sbb
nop
adc
or
sbb
loopne
rcll
sbb
xor
lock
or
cld
loopne
outsl
push
xor
dec
pop
push
scas
inc
xor
add
mov
fnstsw
xor
adc
mov
cmp
enter
cmp
rcrl
mov
xchg
js
push
pusha
push
data16
mov
jnp
add
rolb
in
or
inc
mov
xchg
out
cli
movsl
and
mov
or
push
pop
xchg
sbb
dec
addr16
xchg
nop
jae
and
or
dec
fldcw
mov
push
imul
cltd
sub
rsm
inc
addr16
add
jae
push
dec
mov
pop
mov
fs
jnp
sbb
xchg
call
nop
add
rolb
jge
dec
inc
inc
mov
xor
and
push
cmp
repz
inc
sbb
sub
push
outsb
dec
jmp
loope
outsl
add
rcll
push
mov
aam
mov
ljmp
push
movsb
push
sbb
ljmp
add
adc
xorl
lock
jno
and
jbe
popa
dec
cmp
mov
mov
add
inc
push
outsb
fstpl
hlt
ss
dec
inc
cwtl
adc
mov
xchg
dec
mov
jmp
out
dec
inc
pop
andl
mov
xor
nop
and
sbb
int3
cmp
jne
dec
inc
movsb
jb
inc
inc
js
cmp
ja
or
into
cs
lahf
add
jne
push
jbe
jo
xchg
inc
dec
cmpb
xchg
add
jae
inc
add
pop
inc
rcr
xchg
xchg
out
fdiv
pop
mov
xorl
fidivrl
xchg
loope
and
cwtl
mov
mov
xchg
in
cmpsb
jmp
cld
sarl
add
andb
sbb
jno
outsb
xor
add
inc
xor
pop
addb
push
cmpsb
addr16
insb
movsb
and
xchg
in
loop
add
or
jg
outsb
call
neg
inc
inc
notl
add
pushf
or
sbb
jns
call
pop
dec
mov
pop
les
movsl
outsb
loope
push
pop
push
jbe
mov
imul
adc
xchg
or
mov
jle
jno
push
js
arpl
add
bound
aam
and
jne
jne
insb
lcall
rolb
imul
ret
dec
push
fistpll
cld
test
popf
mov
test
inc
ss
and
or
inc
cmpsl
or
mov
in
xchg
pop
out
pop
jg
shrb
jb
out
ds
insl
je
xchg
insb
dec
xor
add
pop
pop
add
mov
mov
xor
sub
les
sub
loopne
push
inc
xchg
inc
mov
enter
nop
cwtl
fsubl
mov
inc
jne
das
inc
xor
inc
mov
dec
dec
addl
int3
adc
pushf
push
cmpsl
js
int3
push
push
pop
mov
int
insb
loopne
pop
push
push
or
stos
arpl
dec
lock
aaa
inc
add
js
adc
inc
outsb
cmpsl
mov
loopne
rorl
dec
or
lret
test
nop
mov
inc
je
push
in
loopne
daa
addb
inc
fstl
pop
decl
push
or
aaa
add
movsb
bound
lahf
adc
jb
pop
xchg
out
lods
ja
push
mov
negb
shlb
pushl
or
adc
dec
add
mov
not
xor
aaa
inc
sbb
add
aas
sbb
inc
push
jg
inc
orl
movsb
aaa
push
cmp
or
cmpsb
in
mov
adcl
mov
outsl
inc
dec
imul
jbe
mov
or
mov
xor
pop
ss
inc
push
in
out
mov
lds
shl
scas
lea
dec
xor
aaa
xchg
or
js
mov
push
add
shl
js
clc
lock
inc
mov
imul
stos
jbe
sbb
data16
mov
push
jae
sub
dec
js
bound
push
dec
rorl
lds
add
ss
shll
or
add
push
dec
loopne
dec
or
gs
outsb
mov
jge
jg
xchg
shrl
dec
int3
test
int3
mov
inc
popa
in
and
mov
xor
mov
push
xor
sahf
outsl
lahf
repz
xchg
add
jmp
gs
test
mov
and
add
add
sbb
pop
mov
mov
jg
mov
leave
inc
cmp
cmp
rorl
inc
sub
lock
sub
or
mov
add
xor
pop
dec
add
mov
add
pop
xchg
pusha
nop
fwait
or
jns
aas
add
jns
push
inc
push
and
jp
sar
inc
mov
aaa
mov
outsl
cs
jae
cmp
push
or
in
popa
pop
mov
adc
or
mov
dec
push
dec
mov
push
mov
mov
adc
adc
push
add
adc
xchg
and
rcrl
inc
pop
push
and
add
adcb
loope
pop
push
sub
jae
push
outsb
add
aaa
imul
ror
cmpsl
xchg
lcall
es
out
mov
je
dec
ss
dec
push
lods
sub
dec
sub
sbb
outsb
clc
inc
daa
enter
adc
dec
test
mov
cmpsl
jl
mov
dec
scas
notl
orps
inc
dec
add
or
xchg
add
test
pop
clc
in
jne
jb
arpl
dec
js
inc
sub
push
je
inc
xor
jo
push
insl
dec
mov
xor
std
xchg
jns
mov
push
pop
iret
loopne
inc
cld
out
dec
add
cli
insb
adc
dec
bound
add
dec
sbb
stos
aas
push
gs
mov
push
jne
cld
mov
gs
inc
arpl
xor
xor
nop
xor
sub
pusha
mov
stc
mov
rorl
jne
pop
loopne
stos
negl
sub
adc
lahf
xchg
xor
loop
sub
xor
inc
lock
or
jbe
insb
insl
xchg
add
push
push
jne
popa
jb
add
imul
bound
sbb
mov
pop
adc
sbb
pop
push
insb
push
push
add
inc
add
mov
fnsave
mov
push
mov
cld
push
jbe
cvttps2pi
xchg
sub
into
adc
not
ret
leave
ret
sbb
outsl
loopne
mov
xor
cmp
arpl
sar
xchg
pop
or
inc
pop
and
orb
movsb
pop
popf
pop
cwtl
fdivrs
roll
fstpt
dec
add
es
shlb
in
or
add
and
pop
push
jns
xor
flds
push
push
andl
js
loopne
sahf
mov
mov
xlat
stos
pop
mov
push
adc
inc
dec
jb
sub
xor
xor
push
jb
leave
or
std
insb
jo
js
jno
nop
inc
dec
push
inc
popa
push
aam
xor
icebp
les
bound
test
subb
inc
dec
aaa
jo
aaa
inc
cs
ss
insb
jp
pop
cmpsb
xchg
sub
inc
bound
add
ss
push
push
or
pusha
inc
xchg
gs
scas
addr16
sub
lock
sarl
push
loopne
xor
sbb
add
cmp
push
adc
push
adc
bound
outsl
push
inc
mov
mov
icebp
sbb
subl
pushf
inc
xor
out
push
pop
test
js
cld
add
xchg
cwtl
sub
dec
push
mov
sbb
dec
inc
xor
movsl
xchg
xchg
sbb
add
lock
das
or
lahf
push
or
push
mov
insb
popf
cwtl
in
push
xor
dec
push
inc
not
adc
dec
decl
jne
and
pusha
shrb
mov
rorb
addr16
outsb
lods
hlt
mov
mov
mov
push
movsb
popf
dec
mov
mov
pop
add
mov
and
jns
adc
add
mov
add
dec
imul
adc
nop/reserved
inc
stos
sbb
adcl
pop
js
pop
andl
dec
lret
js
mov
stos
sub
cmp
mov
std
das
sub
not
sbb
adc
add
flds
stc
movl
push
inc
add
repnz
sub
dec
mov
stos
pop
mov
dec
jmp
stc
cs
lods
or
inc
add
dec
xlat
jno
stos
or
aad
pop
pop
fmull
xchg
lahf
inc
lea
test
testb
or
mov
clc
push
xlat
cmp
flds
xchg
jl
aas
push
movsb
and
dec
pushf
push
push
pop
xor
pop
jge
dec
xor
leave
xchg
sub
fbld
lds
add
jl
jne
xor
mov
mov
in
pop
cmp
aaa
dec
add
push
cmpsl
push
push
mov
ret
test
insl
lock
cli
xor
xor
jp
addr16
mov
and
rcrl
inc
cld
push
inc
jo
int
sbb
and
out
sarl
mov
sub
dec
dec
cmp
cmpsb
inc
loopne
jb
add
fidivs
shll
fildl
push
mov
dec
mov
inc
xor
fcoms
xor
ja
loop
mov
pop
out
add
mov
shlb
gs
sbb
pop
sub
inc
add
xor
sub
push
mov
icebp
mov
sbb
push
repnz
push
xlat
push
sbb
adc
rcll
xlat
ret
adc
das
mov
call
mov
adc
not
sub
xorl
push
insb
push
cmp
fucomp
push
filds
dec
push
add
dec
push
inc
sbb
dec
jnp
outsb
xor
sub
xchg
push
pop
xor
mov
and
jns
xlat
add
adc
lods
xor
into
addr16
push
add
xchg
mov
imul
bound
insb
cltd
xor
cmpsb
ja
adc
mov
in
cmovno
and
push
roll
lcall
dec
gs
gs
scas
dec
rcr
jne
loopne
cs
clc
sub
and
inc
adc
rolb
jmp
push
xor
push
push
stos
stos
adc
pushf
ljmp
imul
xor
and
mov
bound
leave
sub
dec
les
xlat
insl
aam
pop
ljmp
add
jno
adc
jge
fisubrs
pop
sub
dec
adc
mov
push
sbb
cmp
shlb
outsb
inc
jb
inc
inc
cmp
scas
push
adc
mov
mov
push
shlb
xchg
push
inc
push
push
xor
add
jbe
idivl
add
clc
add
push
adc
adc
rcrl
dec
data16
lds
push
je
mov
les
jmp
or
xor
jno
inc
adc
dec
adc
and
movsb
and
leave
popf
int
xor
jg
in
movsl
inc
jb
sbb
push
or
pop
lods
mov
je
mov
daa
mov
addr16
and
adc
inc
inc
and
loopne
xchg
and
mov
fs
outsl
mov
out
bound
push
mov
aam
push
leave
and
mov
test
jae
in
xchg
mov
cmp
inc
dec
sbb
or
push
loope
mov
push
add
fs
xadd
jo
inc
inc
sbb
clc
outsb
inc
jbe
sbb
gs
incl
inc
add
sbb
adc
je
sub
inc
sbb
shrb
fdivrs
push
aas
jb
push
add
outsb
jne
sbb
pop
jno
adc
add
mov
mov
orl
cmp
push
inc
mov
and
mov
inc
sbb
insb
mov
and
sbb
nop
pextrw
and
imul
xchg
push
mov
push
andl
mov
inc
addb
cmc
aaa
dec
and
mov
inc
sbbb
add
shrb
lcall
or
jne
movsl
lods
adc
jb
jo
or
pop
stc
sbb
neg
sbb
add
lahf
adc
je
pop
inc
mov
inc
fnsave
mov
push
push
ja
dec
inc
jbe
push
cmc
in
es
dec
push
jnp
xor
sbb
imul
push
insb
mov
fdivrs
add
fdivrs
icebp
jp
push
mov
lret
jno
popa
add
adcb
ja
jnp
stos
js
test
or
and
mov
adc
xor
inc
inc
pop
mov
jmp
mov
push
ss
push
lds
sti
arpl
lret
test
pushf
ficomps
mov
loopne
mov
js
call
jne
dec
mov
sbb
test
mov
mov
not
sub
dec
inc
sub
repz
neg
mov
sub
jbe
divl
sbb
ljmp
shll
ret
mov
or
icebp
test
outsl
push
jo
dec
push
jecxz
push
and
loop
repnz
test
loopne
cli
loop
xchg
add
popa
cmp
data16
mov
fcoms
or
push
js
and
insl
dec
jns
jnp
jmp
ds
hlt
mov
cld
les
lahf
xor
inc
and
out
mov
rorl
mov
adc
push
jo
ljmp
fstl
pop
movsl
push
insb
push
add
aaa
test
lea
shlb
call
xor
shrl
mov
stos
push
scas
fwait
mov
mov
mov
cmp
inc
push
inc
popa
lock
rcll
jo
cmc
mov
repz
neg
dec
fucomp
sub
adcb
xor
jmp
les
dec
les
push
ss
and
mov
mov
dec
not
sub
fcoms
cmp
push
push
aaa
inc
lahf
addb
push
push
cmp
das
inc
xor
cmp
repnz
enter
xor
pop
sbb
div
push
xor
cmc
enter
mov
push
pop
insb
push
inc
mov
rcr
dec
popf
pushl
dec
add
xchg
loopne
mov
dec
dec
push
inc
jbe
xor
mov
jge
dec
insb
mov
add
ret
push
add
and
pusha
imul
xor
ja
mov
mov
bound
inc
jg
push
je
inc
add
cmp
xor
loop
push
cwtl
pop
cmp
cmc
jb
xor
cmpsb
mov
push
add
out
sbb
cld
popf
gs
movsb
lods
enter
xor
scas
movl
flds
adc
mov
std
fs
rorb
orb
hlt
arpl
sub
cmp
push
or
and
xchg
mov
mov
fcoml
fcomps
movsb
sbb
mov
adc
sub
xchg
pop
and
inc
sub
inc
pop
rorl
add
shrl
push
and
adc
enter
les
pop
jb
imul
fadd
and
hlt
jle
cmpsb
inc
mov
push
inc
and
shrl
dec
lock
pop
inc
jb
inc
mov
push
add
gs
test
push
dec
pop
xor
fimuls
test
cmp
or
xchg
je
add
adc
fs
push
outsl
pop
adc
pop
sbb
dec
movsb
mov
js
inc
add
mov
push
xor
pop
dec
scas
xor
push
and
mov
loopne
popf
mov
inc
inc
add
or
cmc
dec
pop
insl
arpl
xor
pop
push
and
cmp
add
lds
shll
shlb
insb
outsb
dec
punpckhwd
jb
cmp
add
fldcw
aad
sbb
mov
mov
push
jl
push
dec
jb
call
cmp
lods
cwtl
dec
outsb
push
rolb
jno
sbb
jb
mov
inc
mov
mov
mov
sbb
inc
insb
jb
adc
adc
adc
pop
mov
inc
mov
xor
sbb
setg
pop
rorl
movsl
adc
inc
sbb
daa
xor
xor
cs
ss
addr16
imulb
jo
add
mov
test
sbb
nop
sub
enter
push
lock
jns
or
push
loopne
push
sub
jb
and
aad
and
rcr
push
aas
add
leave
test
inc
inc
insb
xor
add
movsb
mov
lods
inc
adc
neg
inc
push
subb
orl
cmpl
push
mov
sbbl
sub
or
xchg
lcall
lcall
mov
sbb
mov
not
sbb
sub
mov
not
adc
mov
add
dec
aaa
mov
repnz
inc
inc
pop
flds
push
add
or
jne
add
pop
pop
mov
or
dec
jo
shl
cltd
fwait
pop
inc
stos
xchg
xlat
add
int3
inc
xor
jmp
pop
pop
sub
mov
xor
cld
fwait
push
cmp
repnz
out
adc
int
fwait
bound
xor
add
inc
ljmp
outsl
inc
ja
inc
addb
mov
scas
push
pop
sub
add
push
or
icebp
in
jp
aad
sbb
push
std
inc
dec
stos
dec
aam
insl
mov
popa
push
jo
sbb
pop
sub
pop
pusha
add
adc
dec
arpl
insb
js
xor
popa
xlat
or
shrl
push
add
xchg
adc
add
int3
in
cmp
push
xadd
push
ret
hlt
sar
push
cmpsb
cmpsl
fwait
cmp
fsubrl
mov
bound
cmc
inc
xor
pop
lds
push
mov
add
sbb
or
sub
cmpsl
push
push
xchg
mov
push
leave
xchg
add
fldt
mov
cmp
shrl
add
add
ret
pop
aad
filds
clc
incl
call
out
incl
into
inc
and
sbb
cmpsl
js
js
mov
and
or
aas
sub
fs
mov
out
inc
ss
and
mov
loop
imul
loop
addr16
aas
mov
ljmp
lock
mov
cmp
addl
add
push
test
push
in
inc
cld
add
jne
arpl
cmp
add
adc
mov
inc
mov
sbb
and
mov
je
jp
ret
scas
inc
push
jb
or
jb
and
std
mov
not
add
cmpsl
mov
xor
jle
sub
add
sub
pop
xchg
push
mov
out
xor
add
popa
ja
and
out
push
in
insb
inc
leave
or
rolb
and
movnti
add
push
aad
loop
mov
inc
ss
inc
ss
push
push
shlb
test
and
inc
aas
test
adc
pop
loop
cmpsb
lock
lcall
mov
clc
inc
and
outsl
jno
not
inc
mov
sti
push
sub
mov
add
adc
pop
sub
cld
add
cmp
inc
dec
outsl
in
incl
adc
dec
push
dec
sbb
adc
sub
sbb
and
sahf
sub
shll
jmp
ret
add
adc
sub
pushl
mov
pop
lcall
add
pushl
inc
jle
sub
sbb
iret
adc
pop
mov
xchg
xor
cmp
rorb
clc
or
inc
popf
inc
sbb
sbb
push
aam
push
ss
outsl
push
dec
loopne
or
mov
jb
bound
xor
sub
and
mov
push
insl
fsubs
mov
mov
dec
mov
call
push
lea
insl
push
mov
xor
mov
jb
xchg
or
inc
icebp
adc
push
xor
mov
wrmsr
dec
sub
push
inc
dec
push
dec
jecxz
inc
sbb
dec
outsb
jne
fsubs
inc
repnz
add
mov
push
inc
fildl
scas
push
add
clc
mov
jmp
dec
or
push
or
scas
inc
out
sbb
pusha
mov
mov
lock
jae
insl
fdivl
in
pushf
jle
popa
call
or
sub
sbb
rorb
repz
jo
inc
mov
cld
testb
cwtl
lcall
loopne
cs
jno
lcall
cmp
push
mov
loopne
push
gs
mov
or
aaa
mov
call
cs
mov
addr16
je
imul
fstl
stos
in
in
lods
mov
shrl
ret
fwait
xor
dec
dec
rolb
in
and
sarb
rolb
mov
dec
jo
inc
movsl
jp
push
ss
dec
push
add
and
andb
fildl
add
jno
pop
dec
lea
jae
mov
inc
shrl
or
test
popf
imul
jne
inc
scas
push
jae
add
push
cld
inc
cmpsl
or
in
mov
jg
inc
xor
lahf
ss
pushf
or
je
mov
mov
mov
push
mov
imul
fdivrs
mov
incb
inc
or
mov
lea
fstps
iret
dec
add
clc
inc
cmp
sbb
shrl
mov
testl
xlat
xor
mov
loop
xchg
pusha
add
jecxz
cmovl
mov
enter
and
gs
stos
rorl
outsl
push
jne
jae
lock
inc
add
add
push
int3
ret
ja
xchg
dec
inc
add
inc
popf
bound
dec
push
push
mov
mov
test
xchg
mov
inc
hlt
xor
std
pop
lock
jp
imul
adcl
gs
push
mov
aaa
fstpl
es
sbb
lods
adc
icebp
add
sub
mov
pushl
dec
sub
hlt
repnz
mov
mov
push
lret
lds
std
inc
mov
jne
arpl
push
outsb
insl
rolb
loopne
adc
jne
push
scas
fcoml
clc
rorb
mov
leave
mov
add
stos
mov
addr16
ja
fwait
jmp
inc
stos
movsl
call
mov
test
and
or
arpl
sub
and
inc
clc
scas
jle
jno
add
push
push
je
jbe
push
dec
push
jb
sbb
test
pop
push
pop
clc
and
insl
inc
gs
xor
adc
lds
aas
arpl
out
xchg
xor
cmp
pop
popa
xchg
movsb
dec
test
mov
mov
xchg
fs
test
icebp
push
and
addr16
mov
push
addl
call
sbb
jl
cwtl
cmpb
add
outsb
dec
andb
and
insl
add
out
add
outsl
imul
inc
xor
push
sub
gs
or
mov
mov
push
roll
outsb
loope
dec
insb
mov
mov
fiadds
ss
fldenv
pop
add
imul
xchg
in
testl
xor
inc
push
orl
add
add
jge
push
sbb
test
test
adc
in
adc
les
or
cmp
jg
mov
aas
sub
add
std
nop
or
mov
add
push
xchg
aad
and
mov
adcb
cli
bound
outsb
fisttpll
fwait
or
incl
sub
shlb
or
dec
popa
into
outsb
pop
bound
mov
inc
aas
mov
inc
sbb
cwtl
imul
sbb
inc
inc
insb
inc
and
repz
or
cmpsl
inc
outsl
inc
cmc
int
fidivs
or
mov
dec
unpcklps
mov
sbb
sub
push
mov
add
jne
pop
ljmp
xor
aad
push
and
lcall
xor
push
mov
test
stos
inc
jae
inc
or
adc
popf
inc
jnp
inc
inc
push
xor
mov
out
fmull
popa
push
dec
push
loopne
addb
aam
fsubrs
pop
jbe
push
cmc
mov
or
fcoml
and
aas
and
adc
and
sbbb
ja
push
in
test
cmp
cmp
test
mov
add
push
or
shrb
xchg
mov
push
fwait
or
lock
neg
push
add
ret
dec
neg
leave
ret
mov
cwtl
or
int3
inc
push
imul
repz
mov
adc
push
inc
add
sub
push
and
sub
paddw
arpl
addl
aas
out
sbb
cmp
cmpsb
mov
clc
mov
loop
aad
aam
push
jne
pop
hlt
or
push
and
in
scas
and
std
and
bound
cmpb
mov
and
sub
dec
or
pop
mov
pop
test
enter
mov
jge
xchg
adc
add
jmp
and
into
inc
push
adc
inc
not
jmp
jp
cli
dec
mov
push
stos
daa
inc
add
clc
and
add
add
popa
xorl
jb
mov
push
push
sbb
push
jecxz
push
aas
sbbl
insb
std
mov
xor
mov
aaa
outsb
js
push
cmp
sub
hlt
test
mov
and
gs
dec
lock
out
add
cmp
lret
xor
push
inc
call
jb
gs
popf
clc
mov
test
imul
loop
ja
cmp
xchg
pop
or
jno
jno
cli
jg
mov
mov
pop
xor
push
mov
fs
push
lea
test
inc
xchg
clc
nop
in
push
dec
shlb
popf
cmp
inc
cmp
jo
notl
movsl
sub
pop
xchg
adc
or
repnz
push
sti
push
add
push
inc
push
push
lock
int
inc
and
sbb
pop
pop
dec
xchg
imull
outsb
adc
inc
mov
add
orl
pop
je
mov
and
int
or
xor
sbb
adc
add
icebp
andl
mov
push
pop
push
inc
ss
pop
test
sbb
push
mov
iret
mov
inc
xor
ret
inc
add
mov
and
sarb
cwtl
jae
push
dec
or
stos
inc
add
out
in
faddp
push
rcrb
pop
pop
jbe
insb
adc
sub
ljmp
push
enter
push
imul
cltd
sbbb
push
inc
cltd
std
mov
int3
sbb
xor
push
movsb
arpl
ds
jne
mov
sbb
inc
add
ljmp
je
push
xorb
lret
or
nop
enter
jns
jbe
call
cld
mov
push
cltd
inc
pop
mov
sub
inc
xor
rclb
shlb
jmp
jge
dec
outsb
les
jb
addr16
add
mov
mov
jno
jne
inc
dec
call
jb
lock
pop
sbb
imul
push
adc
mov
ret
dec
inc
movsb
add
or
mov
call
enter
mov
mov
inc
jb
mov
push
cli
dec
dec
cmp
fwait
mov
les
rol
and
clc
push
sbb
je
or
addr16
in
pushf
push
mov
aas
adc
lods
ret
mov
inc
aam
in
jns
cmp
pop
push
adc
lods
loop
and
and
dec
rolb
sbb
dec
call
pop
inc
add
roll
sbb
xchg
xchg
mull
sbb
js
mov
sub
mov
je
inc
mov
stos
inc
dec
jns
cmp
jg
jmp
add
andb
add
outsb
jo
imul
dec
repnz
xchg
arpl
addr16
outsl
jb
jbe
aas
inc
inc
outsl
fs
jbe
dec
insl
imul
js
repnz
ja
dec
push
outsb
pop
bound
js
push
jb
repnz
xor
ss
cmp
xor
and
pop
push
imul
insb
insb
outsl
push
outsb
and
popa
jno
imul
ja
outsl
insb
push
push
push
arpl
jg
in
push
push
dec
inc
dec
gs
push
inc
push
popa
inc
push
dec
inc
decl
inc
push
dec
inc
dec
xor
cs
xchg
jg
dec
dec
push
pop
pop
addr16
fs
dec
jae
push
pop
lock
ljmp
fs
dec
dec
insb
dec
dec
je
incl
and
inc
mov
aam
mov
push
xchg
xor
dec
mov
sarb
femms
or
dec
fadds
jp
out
push
sbb
add
inc
mov
aas
das
std
div
in
or
xor
out
in
aad
or
jmp
push
sub
les
inc
call
mov
fcom
xor
and
or
mov
loopne
lret
iret
mov
cwtl
mov
call
inc
jmp
adc
mov
push
lcall
push
cmp
clc
mov
fdivrs
decl
jns
pusha
outsb
lods
and
cmpsb
lcall
xchg
sub
loop
inc
mov
pushl
test
and
adc
fs
cmpb
imul
pushl
test
inc
jp
push
dec
and
pusha
pusha
pop
cs
andl
bnd
scas
nop
aas
inc
dec
dec
xlat
cwtl
push
xor
pop
inc
inc
stc
ret
push
les
cmp
mov
cmp
notl
jp
decl
dec
mov
fwait
das
sbb
sub
stos
mov
sub
pushf
outsl
and
cmpsb
jne
push
push
sbb
add
fidivs
out
jecxz
stc
pop
xchg
mov
int3
repnz
or
push
rcrl
pop
inc
jmp
les
cli
stc
push
jge
and
fcomi
adc
out
push
pop
lds
out
ds
insb
inc
gs
lcall
sti
inc
dec
push
xchg
mov
mov
aad
cmp
cs
push
cld
ror
mov
lret
mov
pushl
jno
xchg
mov
mov
mov
dec
sarl
shrl
ljmp
ja
insl
cmc
scas
push
lcall
cwtl
xchg
test
andb
jbe
popf
decl
mov
xchg
addb
pop
rolb
inc
jns
jne
push
lret
int
xlat
lcall
outsb
stc
loope
push
cmc
subl
cmp
mov
push
mov
movsl
inc
popf
pop
push
push
mov
push
push
push
inc
popa
jbe
inc
sbb
jne
or
aas
scas
jb
ss
cmp
popf
cmp
xor
mov
sbb
sbb
adc
xor
cmpsl
ficoms
and
mov
pop
test
and
sub
adc
push
jmp
sbb
pop
pop
out
outsl
pushl
add
cs
or
or
jecxz
and
jo
lock
xchg
lcall
mov
sub
lret
mov
jl
pop
xor
adc
mov
mov
dec
nop
pop
ret
jecxz
enter
ljmp
sbb
movsb
cmp
mov
int
decl
ffreep
sub
scas
in
xchg
scas
lret
cwtl
inc
outsl
push
mov
test
mov
lcall
jb
add
imul
shld
ljmp
xor
mov
jg
data16
jnp
and
fidivl
xchg
jg
insl
jmp
jmp
mov
pushf
arpl
pop
adc
pop
pop
inc
jo
pop
push
decl
cld
inc
lods
cmp
dec
xchg
dec
pop
push
dec
dec
ss
or
dec
inc
cwtl
sub
outsl
lock
aas
cmp
mov
xchg
inc
in
adc
sbb
lcall
call
sub
daa
dec
pusha
jno
or
and
sub
repnz
add
sbb
adc
adc
xchg
decl
dec
xchg
std
icebp
aad
inc
mov
mov
sti
outsl
mov
push
cmc
imul
in
fcoms
in
jmp
and
inc
pop
xchg
sub
mov
and
fisttpl
jmp
scas
popa
push
adc
push
xor
ror
xchg
mov
call
scas
pop
and
ja
std
xchg
dec
incl
pop
int
jns
mov
aas
fidivs
incl
xchg
sbb
and
mov
jge
mov
mov
xor
push
mov
and
pop
jge
scas
xchg
xchg
push
loope
pop
scas
in
dec
push
push
xchg
or
mov
push
incl
add
or
sub
pop
xorl
imul
movsb
out
push
lret
mov
or
pop
pop
sbb
push
cltd
push
push
cmp
incl
or
xchg
push
int3
scas
dec
inc
inc
sub
dec
inc
inc
push
cmp
stc
call
clc
inc
xor
cli
inc
xor
xchg
popf
adcl
sub
sub
or
pop
test
daa
add
addl
mov
or
or
mov
fldenv
insl
mov
mov
jp
fs
add
push
mov
test
mov
repnz
fsubp
loopne
sbbl
aaa
loope
mov
rclb
xchg
aaa
ss
fidivl
xchg
repnz
scas
incl
dec
andb
add
sbb
mov
lcall
lock
jmp
mov
es
mov
movsb
sahf
popf
pop
lret
or
pop
jl
mov
pop
call
mov
jecxz
outsl
and
lods
ret
ds
arpl
jns
xchg
jnp
jae
pop
and
pop
test
sbb
outsl
std
jmp
popf
mov
stos
inc
inc
jno
push
jl
imul
shrl
dec
dec
xor
pop
ljmp
gs
inc
arpl
cmpsb
mov
sbb
outsb
add
mov
lods
out
mov
ljmp
xchg
sub
push
scas
sbb
scas
inc
scas
fs
es
lea
sub
fwait
push
add
cltd
and
cmp
gs
inc
xor
clc
testl
jno
pop
loopne
jns
push
jb
ljmp
fldt
add
icebp
ret
jg
mov
fcomp
rcrb
arpl
iret
and
into
int3
lret
cmp
jmp
into
adc
mov
push
or
cltd
mov
ljmp
add
repnz
insb
push
int
jmp
pop
in
subl
jno
mov
pop
icebp
fidivs
test
in
xor
call
jge
xchg
push
mov
sti
js
pop
imul
xchg
das
insl
test
ljmp
fs
jge
jb
xorb
push
push
sub
sub
push
add
movsl
ss
jg
sbb
sahf
mov
jne
cltd
mov
sub
into
test
daa
push
dec
inc
in
test
aas
xor
stos
popa
subb
mov
shld
dec
jmp
data16
push
push
adc
sbb
push
adc
cmp
xor
pop
ljmp
push
add
add
push
xlat
sub
shrl
fists
call
mov
ljmp
cmp
jecxz
add
stos
cmp
adc
in
fistpll
out
into
cltd
mov
mov
outsl
cld
inc
pop
pop
add
movb
sahf
ss
mov
jae
dec
call
popa
fimull
shlb
push
test
cmpsb
cltd
cwtl
xchg
data16
mov
xchg
pop
clc
decl
fldenv
shlb
test
ljmp
shlb
lret
bound
test
aaa
mov
jmp
mov
push
lcall
rcll
test
xchg
ljmp
fcoms
fistl
push
arpl
or
clc
rcrl
test
inc
xchg
sub
dec
xchg
sahf
cmc
cld
cmp
xchg
jmp
sub
sub
pmaddwd
gs
leave
or
jns
fucomip
fistpll
mov
test
test
popa
repnz
jg
sbb
sbb
push
into
xor
call
xchg
mov
sbb
add
ljmp
hlt
xchg
mov
push
sbb
loope
leave
xlat
fstp
das
cld
pop
cld
add
inc
inc
cltd
popf
shlb
enter
ljmp
cld
aam
ret
mov
scas
jg
pop
inc
and
enter
jne
lock
js
lcall
sbb
loopne
mov
xchg
js
ljmp
sahf
adc
pop
mov
sbb
mov
test
mov
or
pop
into
dec
shrb
addb
mov
js
adc
js
xorb
mov
push
ljmp
push
cmp
shrb
inc
mov
pop
pop
jg
fnstsw
rcrl
cld
add
push
xor
adc
fdivl
push
cmp
cmp
loopne
imull
add
xchg
cmp
das
cmp
call
pushf
sbb
or
sub
jl
mov
lds
adc
arpl
jg
mov
data16
jno
mov
push
mov
add
add
mov
jg
cld
in
sbb
clc
scas
or
jle
leave
hlt
bound
jnp
jp
insl
sub
call
pushl
shrb
int
in
loopne
xchg
mov
xchg
call
mov
das
test
stc
pop
fildl
loop
xchg
fnstsw
rorl
decl
popf
scas
or
mov
imul
jge
dec
inc
movsb
mov
lret
scas
push
jmp
aas
test
xchg
cmpsb
mov
lcall
add
push
cltd
stos
lcall
xchg
jg
test
call
pop
add
pop
das
mov
inc
mov
jmp
lock
stos
ja
popf
imul
outsl
decl
lahf
test
insl
repz
inc
jno,pn
into
push
pushf
loop
aad
inc
incl
push
dec
dec
pop
mov
inc
inc
inc
sub
cmp
dec
negb
std
ljmp
cmc
mov
add
sbb
sti
sbb
call
daa
daa
sqrtps
clc
mov
mov
cmp
add
insl
jmp
mov
lods
mov
jg
add
push
shll
fwait
jmp
test
or
inc
cmc
sbb
scas
dec
mov
lods
es
lock
fsubrs
call
ss
ss
loop
push
leave
add
fstp
mov
test
pop
call
fcom
sarl
insl
xchg
jae
cmc
call
xchg
scas
test
mov
lret
mov
mov
fisttpll
stos
add
mov
mov
mov
lahf
mov
leave
decl
jb
clc
or
aad
aas
ds
ja
mov
lock
decl
adc
jle
jle
cmp
pop
out
test
jno
jo
dec
ljmp
pop
lcall
fs
lret
popf
testb
pop
inc
mov
loopne
fists
nop
leave
pushf
test
in
leave
cmpsl
addr16
incl
jo
daa
and
dec
cmp
mov
bound
or
jle
popa
sub
sbb
repnz
push
rclb
rcll
cli
pop
and
cltd
dec
fcompl
clc
sahf
and
mov
jo
add
cmp
pop
add
popa
cmpl
jg
dec
push
hlt
cwtl
push
shll
jecxz
rolb
in
cmp
outsl
push
xor
loopne
add
adc
shr
pushl
cli
aaa
int
sub
xor
xchg
stos
cmpsb
fdivrl
sub
or
mov
dec
jno
test
stos
xchg
shlb
loope
jg
inc
inc
cmc
mov
lcall
data16
sti
loop
testb
sahf
mov
decl
scas
test
imul
add
cmp
ss
sbbl
cmp
pushf
push
in
sub
push
pop
decb
sub
hlt
pop
pop
sbb
inc
adc
or
incl
dec
jb
jae
mov
inc
inc
inc
lret
orl
fwait
push
cmp
xchg
outsl
ljmp
mov
lods
inc
sbb
mov
jbe
or
mov
push
iret
loopne
sbb
push
pushl
mov
pop
ret
cwtl
popa
adc
dec
xor
or
das
cmc
call
mov
inc
fistpl
add
push
out
adc
sti
pop
cmp
mov
test
imul
out
inc
push
test
cmp
jle
cmp
xchg
aad
int
pop
fiadds
push
lods
adc
inc
shl
nop
dec
cmp
mov
sbb
and
js
xor
ret
das
std
mov
movsl
movsb
jg
movsb
fstpt
or
pop
xchg
fs
jp
pop
fdivrp
sbb
jp
movsb
xchg
test
lods
add
push
cmp
test
mov
adc
call
in
rcr
mov
out
pop
int3
mov
xchg
jne
pop
aam
xchg
inc
into
jne
or
mov
es
das
loop
loope,pt
push
das
cmc
das
icebp
mov
jl
adc
insl
dec
dec
mov
popa
das
icebp
or
test
dec
and
sub
sbb
call
repz
and
adc
mov
call
in
cmpsl
mov
cmp
adc
jmp
jle
in
rorb
pusha
add
test
ret
jmp
cmp
xlat
cmp
sahf
lock
xchg
in
mov
inc
rcrl
jmp
jecxz
fwait
scas
lds
sbb
fldcw
leave
sarl
incl
test
xor
test
fcom
or
int3
ret
ret
ds
jmp
mov
in
mov
das
mov
aas
and
pop
decl
mov
movsl
mov
mov
adcl
ja
inc
decl
mov
xchg
mov
jmp
inc
jo
nop
test
rorb
aas
mov
ja
jne
pop
dec
andl
push
jg
hlt
ss
fnsave
mov
insl
xchg
jo
aaa
cli
lcall
pop
test
xor
popa
rcrl
inc
jg
pop
dec
dec
fildl
imul
dec
cmp
cmp
jp
mov
push
cmp
in
mov
sbb
mov
lea
das
fdivs
mov
adc
sbb
out
jmp
stos
sbb
xchg
out
leave
or
rclb
std
mov
sbb
loope
out
gs
fstpl
cmpsb
in
in
movsb
add
andl
cmp
lret
dec
cmpsl
sar
xchg
mov
mov
sarl
sarb
or
mov
sub
fcomi
xor
pop
jle
mov
fs
jg
jp
aaa
outsb
xor
sub
das
ficompl
lea
mov
das
pop
scas
das
xchg
sub
mov
lcall
sub
fnsave
adc
jmp
push
push
or
out
lret
in
fsubrp
push
test
js
jo
loop
das
pop
push
insl
xor
jg
incl
push
push
cmp
inc
repnz
test
lods
mov
jle
jg
lret
lods
push
jns
dec
dec
add
hlt
cmp
xchg
or
inc
sub
xor
cmp
inc
dec
sbb
mov
xor
cli
adc
cmpsl
pop
push
mov
aaa
das
and
jp
mov
adc
add
lods
sbb
pop
pushl
and
mov
inc
add
daa
adc
and
hlt
div
cmp
jg
fildll
inc
or
movsl
repz
icebp
jmp
into
inc
out
decl
xchg
jge
pop
and
sub
filds
push
xchg
xor
lcall
mov
leave
mov
adc
cmp
mov
in
mov
mov
cltd
mov
in
repz
mov
loopne
incl
test
fldenv
out
icebp
inc
rcrl
call
inc
insb
lock
jg
aam
ret
mov
jbe
nop
adc
pop
mov
pop
xchg
test
mov
insl
xchg
mov
ja
gs
pop
inc
add
movsl
incl
push
scas
pop
aad
stos
loopne
jbe
and
cltd
aad
fucomip
xor
inc
jae
jb
add
daa
pop
push
inc
call
mov
jnp
scas
pop
sub
cmp
mov
adc
sub
jg
jmp
or
sbb
inc
loope
dec
or
lahf
push
cmc
adc
repz
sbb
mov
add
mov
jg
das
xor
pop
call
repnz
out
mov
sahf
jl
push
call
push
into
cmp
loope
sbb
xor
pop
cmp
aam
mov
lret
lea
out
fadds
pop
push
data16
mov
mov
test
cmp
mov
out
add
push
adcb
lock
mov
mov
test
lahf
sahf
xchg
push
jmp
xchg
adc
ja
mov
dec
ret
push
aad
lcall
pushl
repz
lret
nop
mov
jae
popa
outsl
outsb
push
lcall
icebp
ret
cmp
push
jae
sub
or
js
ficomps
push
push
and
in
push
fstpt
aaa
pop
cmp
lret
mov
or
xchg
bnd
repz
inc
dec
les
and
dec
es
repnz
pop
or
mov
es
repnz
ret
and
in
movsl
mov
add
inc
mov
lahf
fiadds
mov
jecxz
in
pop
pop
pop
pushf
xchg
cmp
adc
push
mov
adc
popf
out
jmp
mov
stc
test
add
cmc
out
xchg
mov
out
je
and
push
sbb
leave
mov
push
incl
and
adc
pop
mov
int3
mov
lret
aam
clc
fld
ret
cli
pushf
add
sahf
mov
test
inc
mov
cwtl
push
push
stos
xchg
ja
leave
sub
jmp
dec
xor
popf
popf
test
imul
mov
jg
test
insl
test
inc
popf
ljmp
fdivr
jb
xchg
sub
xchg
lret
jmp
pushl
jne
push
jp
xchg
movsl
jns
loopne
cltd
pop
pop
pop
jg
pop
loop
hlt
push
in
xchg
call
mov
xor
pop
decl
xchg
jle
loope
aaa
inc
lret
popa
pop
arpl
ljmp
xorb
aas
in
test
pop
mov
dec
std
inc
lods
and
aad
aam
out
push
popf
sub
rcrb
decl
adc
lcall
int
push
out
cmpsl
rcr
push
inc
cmp
lods
mov
in
out
test
stos
pushf
mov
in
aas
fs
dec
rcr
mul
in
mov
decb
sub
ret
lds
sub
decb
iret
and
mov
sbb
loop
loopne
pop
cmpsl
lds
adc
shrb
stos
or
das
setnp
mov
scas
orb
lahf
push
mov
lods
mov
mov
add
fists
sub
push
jmp
mov
or
jmp
or
enter
jg
outsl
inc
out
or
cs
jbe
push
sti
mov
pop
push
pop
insb
imul
ffreep
call
fimull
inc
lret
setae
dec
pop
lcall
adc
in
push
push
jbe
mov
xlat
cltd
inc
cmpsb
push
xor
xchg
ljmp
rorl
ficompl
orb
pop
out
repz
cwtl
aas
xor
cmp
sbb
hlt
mov
pop
sbb
lcall
xchg
mov
faddl
inc
bound
sti
pop
cmp
out
xor
jno
lea
aaa
mov
das
lock
jmp
cmpsl
mov
movsb
stos
aaa
xlat
inc
in
mov
push
incl
mov
out
cmpsb
leave
mov
je
sbb
adcl
jecxz
loope
sarl
mov
test
dec
dec
mov
das
stos
or
aam
lods
push
int
cmp
mov
loop
test
insl
sub
fwait
lret
jg
mov
jg
jg
cld
sbb
push
roll
jbe
in
inc
xor
call
cmp
jp
call
jmp
jae
jbe
inc
xchg
stos
ljmp
fnsave
addr16
pushf
mov
pushl
push
pop
pop
jle
lret
stos
mov
cs
dec
aaa
fs
jg
inc
or
int
ss
or
jge
test
loopne
fnstsw
dec
add
xchg
ret
xor
outsl
std
ljmp
pusha
and
sub
les
js
into
jns
xchg
sub
add
mov
mov
or
sub
sub
jo
mov
fsubrs
cld
ret
repz
in
aam
add
int3
int3
mulb
jnp
lock
fnstsw
loop
jg
fists
mov
call
das
hlt
xchg
pop
in
iret
fistl
or
mov
aad
rcrl
jmp
fiaddl
orl
shr
lcall
xchg
lcall
inc
clc
mov
lods
ljmp
jmp
lods
or
ljmp
mov
xchg
xchg
pop
andb
call
jge
leave
nop
jle
mov
push
push
dec
mov
das
adc
outsl
sub
call
mov
dec
add
shl
sbb
fs
jns
dec
sbbb
cmp
sbb
pop
dec
loop
insl
cmp
call
sub
mov
add
inc
inc
sub
xor
add
test
or
ds
adc
sub
mov
adc
cmp
sbb
js
xor
dec
add
cli
lret
incl
pusha
sbb
adc
testb
lcall
push
pop
cmp
or
fcmovbe
adc
loopne
and
or
adc
subb
fmulp
xcrypt-cfb
cmpsl
fs
out
push
ljmp
out
andl
mov
mov
icebp
lds
lret
ss
adc
fwait
jg
cmp
scas
inc
lds
in
iret
push
mov
sub
xchg
test
inc
xchg
popa
sbb
mov
clc
lcall
mov
mov
test
insb
jns
and
dec
inc
cwtl
aaa
pop
mov
test
pop
lea
sub
incl
repz
mov
or
dec
enter
or
add
jo
xchg
arpl
xchg
inc
cmp
test
cli
or
pop
xchg
divb
mov
stc
and
cmp
cmp
test
fwait
loop
stos
inc
pop
sub
mov
push
sub
or
frstor
push
xor
dec
xchg
pop
loope
inc
jg
in
and
arpl
xchg
adc
and
enter
out
clc
push
lcall
sti
out
jmp
jle
arpl
dec
filds
mov
adc
mov
insb
aaa
sub
clc
insl
or
lret
jb
pop
loop
cli
cmp
xor
mov
mov
lds
push
pop
ret
mov
das
ret
lds
mov
popa
or
and
adc
jge
and
ret
push
test
pop
jne
les
and
pushl
cwtl
xchg
sbb
xchg
xchg
push
popf
sbb
arpl
decl
or
rcll
ljmp
clc
inc
jecxz
ja
sbb
sub
mov
movsl
jmp
dec
dec
pop
jmp
dec
mov
push
jo
push
and
fnstsw
xchg
push
ljmp
cmc
xor
ffree
adc
xchg
int3
test
mov
jecxz
cmp
mov
dec
push
lret
call
sub
mov
cmp
hlt
and
shrb
xor
push
clc
divl
sti
cli
inc
loopne
jp
pop
sbb
ret
fcompl
call
inc
mov
push
push
lock
inc
mov
daa
repnz
movsl
fistps
jmp
int
lock
inc
jmp
mov
out
iret
lods
int3
pop
int
pop
sub
pushl
jnp
xchg
fsubl
xchg
mov
outsl
pop
rorl
test
cltd
xchg
das
icebp
call
lods
jmp
sbb
jp
mov
popf
in
mov
pop
clc
das
and
xchg
scas
nop
and
sarb
cmc
xchg
xchg
shrb
lock
negb
icebp
jnp
pushf
movsl
mov
dec
rorb
jmp
jo
outsl
addl
pop
mov
movsb
dec
ljmp
js
mov
jb
sbb
inc
stc
mov
pop
imul
push
in
call
fisubs
pop
and
push
rclb
cmp
sti
int3
mov
cmp
push
arpl
dec
pop
mov
inc
adc
test
addl
jg
daa
das
jle
enter
sbb
adc
mov
mov
push
jg
test
and
mov
mov
mov
cmc
fmuls
inc
push
or
fildl
out
inc
loope
ffreep
xor
das
hlt
test
ljmp
ljmp
sub
fucomip
dec
jl
leave
daa
fldpi
fsubrl
push
ss
pop
jbe
cmc
aam
mov
mov
inc
leave
jp
adc
ljmp
mov
in
sbb
mov
add
jg
inc
mov
adc
fwait
cmp
lods
out
xor
inc
inc
dec
inc
test
xorl
lret
mul
das
cmc
pop
pop
stos
jnp
jp
jne
jne
push
movsl
xor
iret
xchg
sar
pop
xchg
ds
subl
cmp
lock
xchg
popa
mov
iret
loopne
sbb
dec
mov
pop
pop
xchg
or
jecxz
pop
aas
nop
dec
outsl
xchg
or
dec
popf
push
and
lcall
jnp
call
in
and
daa
add
xchg
mov
mov
pop
call
adc
jg
jno
aad
call
loopne
sbb
decl
adc
mov
push
cwtl
adcl
cmp
lret
pop
mov
push
pop
mov
dec
jecxz
ljmp
pop
fldenv
inc
mov
out
cli
add
fs
pop
pop
mov
or
dec
xor
les
lea
cld
scas
push
movsl
fmul
sbb
popf
fisubrl
add
int3
stos
xor
inc
mov
inc
mov
mov
mov
lods
lcall
jecxz
jmp
pushl
cmpsl
pop
xchg
loop
sub
and
xchg
sbb
out
dec
jbe
cmc
mov
insb
mull
push
clc
jg
jmp
incl
in
push
pop
aas
push
lock
mov
mov
sub
pop
hlt
pop
fs
pop
mov
incl
incl
jmp
inc
call
or
mov
incl
ljmp
and
inc
movsb
adc
pop
sub
inc
pop
addr16
fnstsw
xchg
or
jb
ss
int
daa
ja
ds
aaa
xchg
mov
mov
or
push
dec
add
fisubl
lcall
fwait
aad
push
fdiv
daa
adc
jns
les
in
cld
sti
ficoms
pushl
bound
cli
lock
out
dec
cld
mov
add
adc
jecxz
test
out
and
ljmp
rcl
xlat
paddusw
mov
ljmp
lock
fsubrl
je
jbe,pn
cmp
test
aad
mov
insb
stos
in
call
dec
rcrb
scas
popa
add
stos
test
xchg
movsb
mov
xchg
mov
or
mov
push
sbb
ja
xchg
stos
pop
stos
lock
inc
call
insl
push
imul
xchg
call
syscall
push
ret
pop
mov
pop
dec
bound
fbstp
icebp
mov
outsl
dec
aaa
insl
arpl
in
xlat
add
iret
popa
sub
dec
push
push
fists
dec
dec
add
inc
xor
lcall
and
jae
icebp
xor
je
or
mov
adc
sbb
std
popa
ficompl
lods
or
sbb
add
call
push
dec
cli
pop
push
push
or
xchg
dec
shr
faddl
add
xchg
ja
mov
stos
jmp
mov
hlt
xchg
push
loope
dec
imul
cmp
adc
cld
mov
sub
sbb
aaa
enter
rclb
std
inc
inc
decl
inc
sbb
sub
jno
jg
jl
or
test
mov
mov
mov
xchg
mov
hlt
aaa
clc
or
sbb
iret
pop
push
movsl
and
hlt
or
mov
pushf
pop
push
fistpl
and
and
movsb
lock
jge
xchg
in
imul
addl
rorb
andl
imul
mov
psubw
mov
aad
mov
push
and
xchg
xchg
fistpll
testb
movsb
inc
inc
aaa
inc
dec
sbb
jg
notl
and
ss
icebp
das
incl
imul
stos
xchg
es
inc
mov
ljmp
in
sbb
or
cld
xor
les
test
or
and
hlt
ljmp
mov
adc
notb
outsl
outsl
mov
scas
jno
out
jae
das
mov
jg
mov
loop
repz
ficomps
add
xor
pushl
clc
daa
sbb
leave
sub
fstp
xor
adc
push
popa
test
lcall
iret
push
sub
lret
aas
mov
lods
and
add
dec
movsb
mov
or
mov
jg
mov
jge
ljmp
add
icebp
mov
mov
enter
insl
stc
xor
xchg
clc
sar
jno
insb
les
jae
ja
std
jg
xchg
xchg
hlt
cmpsb
lea
fdivrs
cmc
pushl
and
or
test
mov
sbb
jae
jno
pop
fnstcw
decl
xchg
sbb
mov
call
mov
in
dec
dec
cwtl
loopne
pop
dec
mov
lods
popa
inc
mov
jae
sub
pop
push
jg
jmp
mov
push
and
mov
sub
push
pcmpeqb
pop
mov
jp,pn
cmp
cmpsb
pop
add
mov
mov
dec
sub
hlt
or
jno
icebp
adc
inc
call
add
data16
sbb
lcall
bound
rep
xchg
sub
rolb
push
loopne
in
jmp
xchg
call
ffree
fmulp
fcom
inc
mov
mov
lret
pushl
ror
lret
mov
rol
push
arpl
test
stos
cmpsl
mov
incl
fldenv
jl
cmp
shrl
int
xchg
sbb
fucom
test
clc
rorl
nop
test
adc
popa
dec
test
testb
sbb
in
dec
dec
std
or
jp
stc
jle
ljmp
sbb
jle
std
das
mov
imul
inc
popa
xor
movsb
pop
inc
ret
dec
aaa
decl
push
data16
stc
in
sub
jl
inc
repz
inc
dec
in
ljmp
sub
jno
or
les
incl
cmp
sub
mov
mov
pop
adc
and
rcrb
add
leave
loopne
dec
and
or
cmc
hlt
or
pop
dec
push
mov
sub
cld
add
sarl
pop
add
jecxz
jg
inc
scas
or
cld
fsubrl
fdiv
push
enter
adc
cld
xchg
xchg
mov
mov
dec
mov
dec
mov
icebp
out
call
loop
fimull
popf
stos
cld
xor
repz
add
cmp
mov
push
jg
and
ljmp
std
mov
std
icebp
sahf
arpl
push
sti
jne
pusha
test
stos
shrl
outsb
dec
lahf
and
subl
mov
mov
xchg
jnp
push
and
std
outsl
mov
pop
mov
leave
leave
xor
xchg
es
push
fcomps
add
xor
je
jle
call
xlat
scas
aam
dec
pop
int
xchg
push
adc
mov
cli
test
repz
aaa
das
cltd
cmp
adc
daa
sahf
sub
mov
mov
inc
add
hlt
cwtl
xor
movsl
daa
xchg
push
pop
dec
mov
pop
mov
or
add
jnp
jae
loopne
aad
push
gs
sbb
ljmp
lahf
cli
add
ljmp
test
inc
jne
jle
jecxz
fsubrl
adc
push
movzbl
cwtl
shrb
call
in
lahf
pop
mov
lds
mov
cmc
fildll
xor
outsb
pop
pop
mov
iret
push
jecxz
nop
sbb
mov
mov
out
dec
fnstsw
jo
and
ljmp
xchg
and
pop
notl
jl
lock
sub
xor
add
pop
xchg
xor
push
subl
fneni(8087
cwtl
rorb
xchg
or
inc
sbb
jp
into
insb
jo
jnp
sbbl
xlat
out
pop
pop
cli
sub
arpl
pop
fs
xor
push
lcall
aas
mov
mov
pop
int3
in
mov
pop
pop
push
dec
jmp
add
in
movsl
ljmp
lock
inc
dec
test
xor
out
xchg
rcl
cmp
xchg
sub
xor
cmp
dec
repnz
ss
add
jo
loope
and
mov
in
test
das
add
jae
in
add
mov
incl
push
and
sbb
mull
mov
or
decl
ljmp
sub
movb
jns
repz
mov
sbb
jbe
insb
lods
fcmovne
cmpsb
call
lret
xor
lcall
ds
cli
sbb
cmpsl
mov
int3
push
popa
loop
push
int3
dec
lret
sub
ret
addr16
sub
ljmp
push
ret
aaa
xchg
cmpsb
scas
scas
cwtl
lods
mov
aad
add
dec
outsb
jg
incl
jecxz
mov
mov
pop
stos
sbb
mov
xchg
jp
mov
stc
pop
mov
rorb
cli
mov
add
and
test
out
pop
xor
fucomip
dec
pop
test
fs
dec
orl
pop
call
cmc
mov
push
int3
and
xchg
push
pcmpeqw
outsl
lock
pusha
xor
lcall
lea
adc
out
cmp
and
and
decl
push
cs
mov
or
daa
call
aam
cmp
aaa
lcall
push
addr16
iret
mov
push
inc
fidivs
fistps
outsl
clc
jg
in
jne
pusha
xchg
outsb
mov
out
cmc
fidivs
filds
popa
call
fsubrp
out
rorl
fidivl
push
incl
lret
sub
ss
inc
cwtl
push
leave
sarl
mov
push
inc
sub
mov
std
dec
inc
cmc
sub
incl
sti
movsb
popf
lea
ja
pop
mov
je
nop
mov
mov
mov
pusha
mov
pop
jne
pop
addb
jmp
xchg
lea
fs
xor
pushl
clc
jle
lods
pop
lret
mov
pop
or
call
sbb
lods
jg
inc
lods
sti
stc
cltd
test
and
dec
adc
inc
or
nop
inc
push
adc
cmp
cmp
pushl
pop
cld
jle
decb
je
inc
inc
inc
sub
daa
aas
ds
jle
add
js
and
ljmp
fdivs
cs
sbb
and
sub
add
aaa
xor
xor
sub
sbb
cmc
jg
clc
mov
adc
or
adc
flds
or
add
sub
adc
sbb
jne
out
cmc
cli
stc
scas
and
test
push
inc
icebp
xchg
ljmp
imul
sbb
cmpsb
call
into
loope
rorb
jmp
nop
adc
fld
bswap
add
stc
mov
push
adc
pop
int
sbb
inc
test
jl
jg
xchg
add
mov
incl
xchg
xchg
rorl
push
xchg
adc
adc
cmp
mov
daa
insl
icebp
flds
mov
adc
xchg
jle
xchg
das
cmp
or
int
and
mov
call
dec
mov
imul
imul
mov
test
mov
jg
into
jp
mov
call
and
sbb
and
push
rcrb
inc
test
xchg
call
outsl
std
in
xchg
and
pop
xchg
jmp
popa
lock
push
jle
aaa
clc
insb
lock
mov
lret
test
sbb
pop
mov
ljmp
dec
js
js
inc
cli
addr16
or
cltd
pop
mov
pop
push
dec
xor
outsl
push
loope
ret
orl
pop
ljmp
push
inc
test
aaa
cli
je
shlb
xor
jno
out
loope
push
sarl
shll
test
inc
mov
lods
and
leave
hlt
or
cli
cmp
clc
xchg
dec
xor
sahf
lcall
movsl
mov
mov
mov
mov
lock
loopne
fwait
adc
pop
xchg
xchg
xchg
jle
mov
fnsave
sbb
or
jno
jle
push
pop
xor
gs
jg
js
push
push
pminsw
xor
jb
mov
cmp
fsubr
aaa
pop
ljmp
pop
rcll
pop
into
sbb
xor
mov
or
fwait
lcall
or
inc
push
std
inc
sub
sub
rorl
fistl
inc
inc
inc
mov
sbb
repnz
jae
enter
add
sbb
xchg
xchg
outsl
out
daa
popf
movb
adc
out
add
movsl
decl
and
stos
frstor
sbb
jmp
pop
clc
pop
adc
pop
mov
aaa
clc
push
hlt
jle
fdivrl
in
add
adc
cmp
cli
loope
imul
fnstsw
lea
imul
insl
push
cmp
and
xor
or
cli
mov
test
data16
sub
ljmp
adc
mov
or
movsb
test
lods
dec
push
xchg
push
push
cwtl
xchg
dec
in
jo
inc
jp
mov
add
jp
outsl
clc
jmp
cmpb
inc
mov
les
pop
inc
pop
inc
inc
cmp
loop
in
lcall
fnstsw
loop
lret
mov
orb
mov
jecxz
ljmp
addl
ret
mov
lret
cld
dec
xchg
sub
cmp
jno
inc
subb
in
cmpsb
ljmp
fnstenv
mov
sub
push
xchg
and
jno
or
movsl
sahf
dec
aam
mov
sub
or
xchg
jle
mov
inc
inc
in
movsb
in
inc
dec
pusha
out
gs
loope
jg
push
mov
lock
push
cmpl
mov
into
icebp
ret
pop
dec
adc
xchg
aam
or
adc
cmp
xchg
fimull
add
lods
push
mov
scas
sub
inc
scas
sbb
decl
mov
je
xor
cmpsl
cmpsb
dec
mov
cli
jge
mov
test
and
test
lret
ja
xchg
clc
ljmp
mov
jae
lds
in
push
add
ljmp
inc
sub
dec
dec
pop
dec
dec
dec
dec
jne
xchg
jge
dec
insl
ja
insb
dec
pop
jne
imul
inc
leave
dec
insb
jne
cmp
mov
xor
add
in
jg
mov
jo
sbb
scas
add
cmc
mov
push
aam
hlt
fcompl
mov
arpl
mov
add
xlat
cld
outsb
fmuls
mov
mov
cld
push
sbb
iret
jg
adc
mov
xor
mov
mov
lock
add
pop
xor
insl
movsl
jns
or
fmull
sahf
pslld
jne
mov
mov
filds
fsts
mov
add
sub
fisubl
mov
mov
and
cld
lds
jle
lds
xor
sbb
into
mov
out
jge
aas
int
pushf
mov
cmpsb
jmp
imul
or
imul
mov
into
cwtl
test
push
mov
notl
sub
add
or
fdivl
inc
les
mov
ret
mov
inc
fnstsw
or
mov
push
sbb
sbb
out
idivb
inc
push
pop
adc
add
je
pop
jns
std
dec
aaa
push
mov
test
repz
or
inc
mov
ss
iret
pop
adc
js
mov
sahf
or
and
imull
bsr
add
stc
xor
mov
xor
xchg
mov
mov
pand
push
xchg
cmp
test
cmpl
in
mov
mov
lock
movsb
jne
leave
and
xchg
call
jmp
jae
into
and
cmpsb
pop
inc
and
ret
push
sbb
xor
sahf
sub
or
xor
jno
clc
repnz
popa
mov
std
mov
bnd
add
mov
xor
adc
dec
add
jg,pt
jl
data16
mov
mov
and
cmp
mov
mov
inc
mov
mov
outsl
ret
fisttpll
or
testl
imul
inc
enter
mov
mov
pusha
fwait
lcall
call
sub
sbb
mov
mov
jecxz
dec
scas
or
mov
jl
loope
es
orl
fwait
xchg
mov
je
iret
adc
jp
mov
sub
lea
jl
add
jecxz
sahf
lods
add
std
fmul
das
mov
cmp
aam
out
pop
inc
xor
xchg
add
dec
in
dec
cli
jecxz
sub
in
icebp
mov
je
fldt
adc
dec
adc
mov
ds
adc
mov
jle
fs
sbb
mov
lahf
int
repnz
pcmpeqb
hlt
enter
popf
data16
add
clc
decb
rorb
and
fsubs
pusha
jecxz
fstps
inc
push
aad
mov
add
fs
cmp
ja
les
movsl
fwait
sbb
sub
fwait
pop
imul
inc
adc
ret
xlat
lods
xor
add
pop
cmp
arpl
inc
mov
jecxz
hlt
push
stos
or
xor
mov
adc
sbb
outsb
mov
dec
aam
js
mov
cli
in
not
mov
sub
adc
mov
cmp
or
push
idivb
les
test
mov
ja
or
add
xchg
jnp
sub
add
add
jnp
sbb
jl
dec
push
sub
cmp
xor
lret
jmp
pop
jbe
mov
add
pop
clc
das
cmp
mov
lret
sbb
sbb
pushf
ret
test
cmc
jne
movsl
cmp
sbb
cwtl
mov
in
addl
jo
mov
add
fcomp
mov
mov
pusha
adc
pop
jno
xchg
mov
xchg
add
xor
fildll
popf
sub
and
add
xor
popf
inc
lock
inc
cmp
icebp
push
cli
push
xchg
fcoms
lret
or
mov
daa
pop
movsb
pusha
fstps
and
iret
mov
fistpll
mov
mov
jle
mov
hlt
dec
das
jbe
stos
push
aam
mov
rcrb
push
arpl
int3
adc
cs
imulb
out
xor
pop
pop
bnd
sbb
or
xor
addr16
pop
out
xlat
or
add
out
dec
cmp
outsb
mov
pop
loopne
insb
sub
in
repnz
mov
sbb
sbbb
inc
pop
popa
out
mov
sahf
in
pop
jne
or
jnp
cmp
xchg
mov
push
xor
imul
pop
idivl
sub
cmc
shlb
pop
sbb
jl
cmp
popl
mov
add
mov
scas
cli
pop
lahf
int
lods
fisubrl
jo
mov
dec
dec
inc
je
dec
call
lods
int
fs
fs
adc
cmpb
pop
adc
jge
and
iret
mov
leave
mov
pop
adc
cld
or
scas
lods
bound
iret
outsl
loop
mov
ret
jbe
pop
sbb
sbb
sub
aad
je
iret
cltd
lods
mov
jb
and
sub
pop
and
xchg
mov
cmp
xor
test
xor
fs
sub
jmp
inc
int3
dec
mov
push
add
fldenvs
loope
jns
cmp
add
dec
ja
xorl
pushw
jg
and
data16
aam
xchg
pop
adc
sti
dec
xlat
jae
mov
loopne
dec
mov
pushf
xorb
imul
jne
mov
int3
js
out
fnop
loope
or
fld
jp
enter
push
mov
push
sbb
scas
cmp
loopne
js
xchg
xchg
in
xchg
mov
imul
fs
xor
xchg
repnz
jmp
inc
xor
cmc
icebp
fwait
movsl
iret
js
cwtl
cmpsl
add
icebp
xor
push
fiaddl
hlt
test
out
push
out
sbb
jne
sti
ror
ss
repnz
adc
or
add
xchg
sub
sbb
popf
rcrb
xor
or
imul
in
xlat
ja
or
mov
jnp
add
test
push
inc
movsb
mulb
and
imul
push
pop
pusha
mov
ret
and
xlat
mov
icebp
xlat
mov
test
sbb
enter
jmp
adc
outsb
jg
push
jge
shll
test
mov
xchg
push
push
out
inc
adc
outsb
jl
dec
mov
cltd
inc
cmp
jmp
loopne
sub
adc
in
cmp
pop
lock
sbb
add
pop
cmpsb
pusha
scas
arpl
loope
xor
sub
in
mov
adc
and
mov
dec
pushf
lds
dec
add
xchg
pop
xchg
and
or
jno
cli
ret
lods
lahf
jmp
sub
mov
dec
mov
xchg
xor
out
fnstenv
xorb
stos
pop
or
xor
xor
sbb
sub
mov
aas
xor
fabs
sub
cmpsl
sbb
clc
xchg
dec
inc
call
bound
pop
cmp
push
iret
or
sbb
adc
lret
dec
pop
dec
pop
mov
sub
mov
mov
and
xchg
push
dec
lea
outsb
mov
lret
pop
outsb
add
inc
out
xor
lahf
test
adc
aad
out
leave
insl
add
dec
or
add
es
and
sar
push
movsb
dec
nop
leave
mov
jnp
mov
aad
pop
call
adc
and
ror
pop
adc
nop
sbb
jmp
mov
sbb
mov
imul
scas
rcll
movl
popa
pop
hlt
xor
inc
in
fadds
je
scas
mov
fcom
js
outsb
dec
outsl
int3
dec
sub
sbb
lock
into
or
add
call
sbb
add
dec
mov
sub
pop
pop
xchg
xor
clc
insb
lahf
in
adc
add
xchg
lret
js
in
out
loop
inc
jo
icebp
clc
mov
mov
sub
dec
test
daa
or
in
popa
jne
hlt
cli
aas
rorb
cmpsb
test
inc
pop
pavgb
into
jge
lea
aad
loopne
lods
data16
movsl
xchg
aas
fsts
add
mov
sub
dec
bound
cmpb
loope
mov
icebp
cld
cmp
scas
pop
dec
fdivrl
into
out
mov
cmc
mov
fistpll
mov
xchg
mov
mov
pusha
inc
fsubl
pop
icebp
push
ss
shl
clc
mov
ret
fimull
scas
enter
fcompl
pop
push
pop
push
add
and
int3
loopne
pop
cmpsb
pop
push
addr16
idivl
out
sbb
iret
inc
out
sub
fcmovu
lock
es
push
mov
movsl
dec
pop
ljmp
sub
aam
js
popa
sub
mov
jge
xchg
mov
movl
mov
sbb
fsub
or
jle
pop
rcll
stos
cmp
push
popa
jb
test
mov
sub
cmp
or
xor
mov
mov
dec
dec
cmp
or
out
dec
sbb
adc
lods
testl
adcl
adc
je
loop
in
jecxz
sub
add
popa
cs
cs
jle
xchg
cmp
and
lahf
das
lock
lea
lea
ja
dec
cmp
sarb
mov
je
loop
cld
hlt
pop
jge
jne
loopne
jns
jno
cmp
gs
jg
lret
testl
mov
sub
repz
icebp
adcl
add
in
dec
inc
dec
mov
pop
call
imulb
fwait
aaa
push
outsl
out
icebp
je
lcall
out
fistps
push
mov
in
inc
and
stos
mov
mov
xor
fisubs
in
scas
mov
inc
arpl
mov
rcll
or
or
stc
xchg
pop
inc
push
push
mov
xorl
gs
mov
adc
int3
sarl
adc
pop
pop
fstpl
out
lahf
outsl
sub
mov
xor
dec
test
push
push
push
aas
scas
jo
lcall
fisubrl
ss
dec
xor
push
ffree
or
add
dec
xchg
and
jle
orb
add
ret
pop
cmp
aam
pop
imul
jnp
dec
push
or
fadds
incb
pop
push
pop
lret
hlt
clc
enter
and
add
and
pop
in
inc
xchg
shll
sar
push
inc
push
addb
fcoms
inc
testl
repz
adc
cmc
cmpsl
rorb
inc
jge
iret
lods
sub
jg
or
subl
ret
cltd
xchg
fld
push
ret
pushf
inc
add
shlb
pop
push
aam
xchg
lret
imul
cmp
test
xchg
mov
sti
pop
sti
mov
and
push
pop
test
arpl
xchg
dec
aam
adc
mov
test
in
test
in
jl
pop
push
dec
aas
pop
stos
ljmp
xor
rolb
scas
or
pop
xchg
push
cmp
icebp
loopne
push
outsb
cmp
lock
dec
cmp
mov
jbe
fidivs
test
shl
push
pop
dec
jbe
aam
jnp
fistl
mov
ret
cmp
ljmp
adc
sbbl
inc
es
ret
fldcw
pop
test
jne
rol
mov
inc
bt
jecxz
dec
mov
call
rcrl
cltd
push
sarb
or
add
int
or
test
sbb
and
jle
fcmovnbe
adc
dec
loope
adc
adc
dec
push
cs
jge
loopne
lcall
pop
mov
lret
addr16
insl
loop
fldenv
or
jns
in
call
out
scas
sbb
ljmp
push
movsl
ficoms
mov
loopne
add
js
test
xchg
mov
xor
cmpsl
cld
xor
movsl
ret
cmp
daa
aas
shll
test
int3
data16
or
mov
jmp
call
call
aam
xchg
inc
fldcw
and
shl
loopne
repnz
dec
repz
cmp
imul
test
xchg
mov
push
pop
sbb
push
insl
sub
jb
imul
jo
pushf
test
call
add
mov
invd
cmp
cmp
xor
movsl
nop
pop
adcb
in
ror
out
xor
mulb
push
inc
repz
cmp
rclb
pop
out
clc
test
mull
and
jp
xchg
xchg
test
pop
insl
push
ret
aaa
les
xor
adc
xor
pop
clc
rol
push
pop
xchg
ss
jge
cs
inc
and
call
fisubrs
lods
incl
pop
out
in
dec
movsl
xchg
cltd
jge
or
addr16
insl
loope
pop
mov
popf
inc
repz
pop
loopne
leave
xchg
add
xchg
sbb
das
add
repz
out
push
les
sub
sarl
inc
cmp
adc
scas
adc
mov
shlb
outsb
nop
test
mov
fwait
adc
cmp
or
xchg
inc
sbb
mov
adc
jg
sbb
xor
shll
mov
clc
pop
adc
stos
sub
adc
cwtl
mov
and
addr16
sbb
repnz
scas
decb
enter
and
pop
outsb
out
push
jb
mov
cmp
cmp
sbb
out
dec
cltd
lret
mov
inc
ljmp
fstpl
mov
popf
push
jg
cs
dec
inc
mov
mov
mov
ja
mov
addl
xchg
or
rclb
xchg
les
lods
cli
xchg
and
inc
pop
mov
and
sub
adc
into
adc
lcall
ficoml
sti
sahf
sahf
lret
fnstsw
or
insl
fisubrl
cmp
mov
cmp
out
out
in
or
repnz
pop
jmp
shr
shrb
fstp
scas
sbb
outsb
pop
rcrb
stos
jae
cmp
pop
in
jne
pop
sbb
mov
cli
inc
dec
mov
arpl
inc
jno
arpl
pop
mov
adc
je
or
test
cmc
push
jg
mov
lock
push
rcrb
xlat
pop
mov
loopne
or
jno
pop
dec
jge
out
aam
push
sub
sbb
shlb
loope
loopne
or
mov
cmpsb
xchg
and
and
or
xor
push
xchg
or
into
outsb
imul
in
xorl
lahf
shrb
xor
aad
push
sbb
mov
xchg
lcall
in
ret
aas
addr16
fldcw
jp
sbb
xchg
inc
jge
mov
xor
sbb
js
and
mov
push
test
add
dec
push
cld
lret
iretw
add
pop
pop
test
jl
mov
mov
or
push
pop
mov
mov
es
movsl
and
cmpsl
pop
pop
mov
ds
xchg
xor
mov
aaa
jns
jmp
loopne
cld
adc
fdivrs
xchg
cmp
or
mov
imul
movsb
ret
cmpsb
adc
jmp
mov
lock
mov
inc
imul
pop
pop
adc
lds
mov
outsb
adc
sbb
adc
dec
and
mov
in
nop
inc
sbb
mov
mov
mov
bound
jge
ja
cmp
in
and
lds
jge
or
popa
test
loope
test
ss
call
xchg
add
add
jmp
inc
jecxz
cmp
jbe
pop
pop
mov
sahf
xor
js
loop
jp
icebp
jmp
and
xor
dec
cld
push
sti
bound
jno
loopne
dec
inc
sub
lock
inc
insb
push
shl
xchg
movsb
shrb
decl
pusha
mov
and
and
mov
xchg
xorb
test
mov
dec
pop
dec
sub
out
mov
mov
aas
lret
aaa
sbb
pop
add
push
cmpsl
popl
mov
jecxz
ficoml
fucom
xorb
xor
fisttpll
int3
pop
pusha
xchg
jns
jmp
bound
push
pop
xchg
shl
fisttpl
testl
movsb
xlat
aaa
ds
xchg
into
push
jmp
cli
fildll
call
jb
aam
je
push
insb
fs
xchg
pusha
mov
arpl
lret
push
fcomp
sbb
pop
outsl
arpl
mov
out
add
push
div
dec
stos
or
adc
sbb
cmp
cmp
repnz
push
mov
lock
sbb
xor
fadd
xlat
or
jbe
daa
inc
lahf
nop
sbb
xchg
jnp,pn
xchg
mov
ror
mov
outsl
mov
test
cmp
mov
push
pushf
sbb
bswap
mov
int
cld
loopne
sbb
stc
or
pop
shl
stc
xor
fcoml
loope
in
out
loopne
mov
push
ret
arpl
push
cs
popf
jae
mov
or
iret
inc
mov
insl
xchg
lret
add
mov
rcl
ret
adc
mov
push
cmp
int
jmp
mov
out
push
mov
dec
mov
jo
aaa
sarb
adc
insl
sbb
jo
mov
cmp
lret
xchg
test
xlat
je
cmpsl
ja
add
mov
in
call
mov
cmp
scas
jmp
jl
cmp
or
mov
mov
ss
pop
mov
jl
and
movsb
jle
sbb
mov
add
iret
scas
rorb
cmp
hlt
and
orl
popf
pop
fsub
sub
dec
daa
shlb
cmp
lcall
outsb
fldt
xchg
pusha
into
dec
insb
push
add
push
ljmp
xlat
cld
xor
aaa
dec
jl
mov
testb
lret
pop
inc
lcall
push
in
inc
jae
lcall
sbb
nop
sub
js
xchg
shrl
fisubs
int3
sbb
and
push
mov
inc
xor
out
pusha
mov
cltd
add
mov
nop
lcall
ljmp
xor
mov
push
adc
lret
enter
and
jle
xchg
sbb
mov
leave
out
jno
add
mov
fnstenv
mov
lock
mov
mov
xchg
fs
roll
xchg
mov
scas
jmp
add
or
sbb
jnp
insl
iret
outsl
stos
les
inc
mov
push
stos
hlt
push
decl
or
adc
lahf
sub
mov
popa
jne
or
aam
adc
rep
cmpsl
nop
aad
lcall
icebp
in
xor
fwait
push
fwait
cmpsb
movsl
xchg
or
sub
jle
addr16
inc
arpl
pop
pop
shrb
or
aam
arpl
add
pushf
or
fwait
mov
loope
sbb
mov
scas
aam
or
ret
ret
daa
ficoms
sti
cmp
mov
push
sub
and
dec
aaa
mov
clc
pop
in
test
cmc
xlat
andb
ss
shl
xlat
push
scas
jb
sahf
pop
dec
je
jp
cmp
cmp
cmp
sbb
lcall
stos
or
pop
das
mov
pop
mov
loopne
leave
out
mov
movsb
test
sar
pop
or
sahf
sub
shll
xor
sbb
shr
stos
int3
fcom
shrb
movsl
xchg
mov
aas
lcall
ds
ss
ljmp
int3
xor
aam
out
lea
and
lds
add
pop
pop
push
or
mov
fildll
add
imul
xor
xor
mov
dec
push
pand
or
cs
mov
testl
cmc
jo
xor
cld
jne
cmc
pop
adc
pushf
faddl
movb
pop
or
dec
sbb
push
pop
pop
mov
or
mov
add
xchg
in
sti
inc
addl
rolb
jno
pop
push
fdivrl
or
push
leave
push
test
sub
sbb
es
push
xchg
mov
cmp
sbb
test
lods
cltd
cmpsb
mov
rcll
mov
cmp
or
push
lcall
jmp
jmp
insb
inc
sub
lea
or
sbb
cmpsl
xor
sub
and
or
aad
cmp
popa
outsb
insl
sti
aaa
push
scas
mov
xchg
stos
mov
adc
popa
adc
imul
mov
movsl
push
fiaddl
mov
or
arpl
sbb
push
add
cmp
repnz
inc
idivl
mov
aam
push
jge
hlt
xchg
inc
jecxz
mov
outsl
shr
lock
out
xchg
hlt
call
iret
fcompl
pop
aaa
pop
sbb
outsl
dec
insl
xchg
inc
enter
sub
imul
je
aam
or
mov
scas
xchg
xor
add
push
sub
or
cmp
xchg
stos
add
inc
mov
xor
jnp
xor
xor
les
mov
inc
pop
xor
insl
lahf
push
int
out
mov
and
pop
repz
aad
ss
pop
sbb
mov
xor
loopne
in
sub
xchg
mov
xchg
daa
sub
xchg
sbb
jge
test
cmp
push
jmp
imul
mov
pop
pop
sub
add
shl
hlt
call
push
push
mov
mov
and
lahf
in
pop
add
or
stc
sarb
pop
jl
add
mov
insl
push
xchg
push
sub
xchg
das
rolb
cmovb
push
test
stos
fs
outsl
pop
jge
pop
incb
call
subb
sbb
dec
in
push
xchg
cltd
xchg
and
lods
pop
out
xlat
scas
data16
das
repz
repz
jp
imul
mov
pop
mov
femms
add
xchg
mov
mul
and
xor
xchg
dec
add
lods
insl
jle
in
add
add
pop
mov
xchg
mov
mov
fsub
ljmp
and
jnp
arpl
in
rol
gs
outsb
sti
pop
ss
rcr
cmc
and
fdivrl
pop
les
or
addr16
fldt
mov
fisubrl
mov
insl
lahf
loope
and
xchg
lcall
ret
xchg
xchg
mov
jecxz
addr16
add
jne
ficoms
or
dec
mov
adc
xor
fdivrl
adc
jae
sbb
xchg
xchg
rcrb
xchg
jg
pusha
lcall
add
xchg
insl
mov
fldcw
or
or
xchg
orl
sti
shrl
adc
rorl
mov
test
ljmp
lea
jae
mov
or
xchg
or
jbe
daa
sub
cmc
inc
jmp
popa
pop
jne
out
jo
xor
ss
adc
sbb
jp
addr16
and
fdivrp
push
mov
xchg
sub
adc
loop
jecxz
sahf
sub
sbb
dec
jae
arpl
sbb
dec
inc
cmp
and
fsubl
mov
test
adc
lcall
mov
adc
add
xlat
sti
sub
enter
jl
mov
pop
stos
or
pop
in
daa
or
or
fildl
ret
int
push
test
data16
into
mov
inc
in
sbb
pop
inc
aas
sbb
push
dec
rcl
ja
push
es
shll
sti
xchg
clc
mov
ja
push
jecxz
dec
lds
ljmp
mov
sbb
xor
sub
xchg
arpl
and
cmp
int
push
and
push
fistpl
fdivl
pop
inc
mov
mov
mov
fists
out
mov
in
xor
lods
leave
cmpsb
cltd
rorb
xor
shlb
push
dec
mov
aam
cmp
popa
and
mov
or
sub
out
mov
add
gs
xchg
loope
fadd
imul
pop
push
mov
test
mov
ret
jb
mov
adc
jbe
rcll
rclb
cli
add
inc
insb
rcll
orl
sbb
test
xchg
inc
add
out
jb
add
xor
lahf
xor
xlat
mov
mov
je
mov
shlb
mov
mov
sbbl
and
mov
xchg
call
es
aas
inc
dec
icebp
mov
mov
lock
testl
xchg
jns
cmp
xor
or
std
call
adc
loopne
mov
inc
das
sbb
sbb
pop
lock
jno
in
mov
repnz
negb
subb
sahf
call
jae
stos
mov
mov
dec
lret
out
or
mov
loop
add
arpl
shrb
lret
add
sub
cli
pusha
xor
rclb
cld
jle
out
or
push
cmp
dec
lret
mulb
in
in
add
cld
clc
inc
pop
fsubrl
fsubl
push
inc
push
jmp
aas
pop
punpcklbw
mov
xchg
inc
pop
mov
cwtl
pusha
lahf
cmp
xchg
sbbb
clc
mov
popf
les
add
data16
notb
sub
mov
fcoms
mov
gs
ljmp
or
pop
js
or
xor
xchg
xchg
scas
outsl
cltd
push
sbb
pop
or
bound
xchg
arpl
cmpsb
and
pop
mov
sub
test
push
ret
dec
shll
mov
pusha
mov
adc
mov
mov
sub
jmp
call
jg
pop
scas
test
jo
aad
cmpsl
inc
push
sub
or
inc
mov
daa
das
jns
fidivrl
pop
pushf
mov
adc
xor
jbe
ds
cld
mov
mov
mov
fbstp
add
into
pop
test
in
mov
lock
fdivs
xor
cltd
mov
rorb
lahf
push
test
mov
outsl
adc
push
jb
cmp
fs
fdivr
clc
rol
push
xchg
jmp
jmp
dec
xlat
fdivrs
movsb
push
push
ljmp
and
xor
scas
dec
sub
es
push
xchg
loopne
daa
mov
push
out
inc
sub
arpl
adc
inc
mov
pop
sub
push
cmc
xor
sti
je
push
inc
pop
dec
test
cmc
jbe
ret
xor
mov
roll
mov
jns
pusha
xor
sbb
out
mul
push
fucomip
mov
xchg
jnp
push
or
fwait
inc
adc
or
pop
stos
clc
pusha
and
sbb
test
out
xchg
inc
fcomps
add
insb
stos
mov
sub
mov
dec
out
adc
daa
inc
cmp
inc
das
inc
xchg
jp
fdivs
decb
pop
imul
mov
mov
stos
sbb
add
xor
jbe
jne
jns
sbb
xchg
fdivp
pop
push
or
xchg
es
repnz
bound
fcompl
add
and
lahf
cmpsl
pop
mov
lea
inc
sbbl
cmp
mov
mov
iret
or
int3
sbb
nop
push
push
dec
xchg
xor
xchg
ss
mull
jbe
clc
sbb
sbbl
shr
mov
arpl
inc
and
push
sub
cld
xchg
rol
push
pop
fdivr
mov
pop
cmpsb
fxch
or
sub
clc
xor
mov
leave
repz
xor
mov
sub
je
int
sub
add
cmp
jne
sub
push
pop
je
adc
sub
sub
push
bound
xchg
or
and
roll
mov
out
sub
inc
cmp
pop
cs
sbb
dec
sbb
xor
push
scas
fnstsw
sub
in
inc
test
add
push
add
or
jecxz
loop
aad
fadds
mov
lods
adc
cwtl
and
and
movsl
faddl
pop
je
outsb
fmuls
push
lea
cmpsb
cli
mov
and
ja
fstpt
and
inc
xchg
or
jo
mov
pusha
add
jge
xor
and
call
mov
or
sbb
dec
jmp
mov
adc
stos
inc
jg
pop
sbb
or
hlt
lea
lods
loope
les
sbb
sub
insl
imul
loopne,pt
nop
iret
or
jmp
repnz
fidivs
xchg
lock
xor
test
pop
sub
cs
insb
repz
xor
xchg
mov
stos
daa
cmp
cwtl
add
jg
mov
in
xor
ljmp
add
dec
xchg
jp
push
lahf
xchg
xor
jmp
testl
and
dec
adc
in
xlat
int
arpl
jp,pn
js
jne
or
cmp
cmp
jne
xorb
pop
repz
jae
inc
int
call
pusha
dec
outsb
add
aas
movsl
inc
loopne
addr16
push
pushf
add
adcb
out
adc
add
jno
xor
dec
xor
xchg
xchg
and
or
cmp
sub
xor
clc
sub
into
mov
or
jae
incb
pushl
jne
xor
or
push
cli
pop
ret
sbbl
cwtl
add
xor
jb
push
jmp
call
add
stos
pop
sbb
in
lock
rcll
pusha
fsts
lcall
push
cmpsb
xchg
xchg
jo
scas
shrb
lret
inc
leave
test
ret
xacquire
scas
add
cmpsb
xchg
add
fistpl
jg
mov
cmpsl
mov
push
out
mov
or
fadd
pop
outsl
jge
fdivrs
les
sub
mov
ficoms
xorb
xlat
lret
rcrb
popf
out
cmp
test
push
dec
xchg
and
adc
test
gs
les
mov
mov
mov
and
ds
sub
hlt
pop
test
sbb
pop
jg
xlat
mov
jbe
dec
mov
imul
push
jl
mov
int
ret
aad
pop
ds
roll
sbb
loop
jb
aaa
mov
push
incb
push
loop
lods
call
xor
jg
sbb
fs
js
xchg
push
lods
or
cwtl
jnp
cmpsb
push
mov
sbb
and
insl
push
fcomp
xchg
inc
scas
dec
test
sbb
shr
dec
jno
jb
rorl
pop
orb
bound
sarl
mov
out
jmp
mov
jo
and
aam
inc
sbb
fstpt
adc
ja
adc
ss
push
sbb
insb
rol
movb
ss
jp
adc
test
ret
xchg
mov
pusha
xchg
inc
add
dec
arpl
or
fdivp
fsubr
fsubp
in
mov
pop
jp
stos
aas
or
xchg
js
inc
not
mov
adc
fs
and
js
mov
push
pusha
add
add
sub
lods
addr16
cmpb
sbb
or
cmc
arpl
xchg
fisttpl
in
sub
testb
ror
test
push
pop
cmp
and
stc
scas
dec
inc
jbe
imul
mov
test
push
mov
sbb
popf
or
cmpb
sbbl
and
out
mov
and
lret
sbb
or
in
movsb
js
cwtl
lahf
mov
ja
jp
loop
sbb
mov
add
arpl
and
push
push
adc
add
inc
jbe
ret
test
pop
add
pop
push
xchg
addb
sub
cmpsb
xchg
mov
sar
adc
sbb
je
cs
nop
mov
ljmp
or
push
cmp
sbb
mov
mov
mov
scas
jp
aam
test
imul
lods
mov
repnz
pop
je
imull
or
mov
xor
mov
out
cwtl
je
adc
fstl
fcmovb
jg
adc
xchg
adc
or
outsb
gs
sarb
xor
sahf
test
xor
rolb
pusha
leave
mov
or
int3
inc
insl
cltd
inc
ret
std
sbb
jmp
mov
loopne
hlt
push
jne
add
in
mov
lret
sbb
mov
rclb
mov
out
subb
stc
fsubs
clc
dec
out
shlb
outsl
add
in
inc
dec
push
pop
add
test
movsl
mov
pushf
sbb
sbb
add
sbb
cmpsb
mov
fsubrs
mov
push
sar
jae
push
mov
cmp
mov
rolb
movl
mov
idivl
mov
fcomps
xor
or
adc
dec
rcl
loop
push
mov
xor
jecxz
pop
notb
sbb
cli
loop
add
jecxz
imul
in
int
lahf
jb
xor
sub
cs
cmp
sub
ficompl
mov
mov
mov
add
and
ljmp
push
stc
scas
cmp
mov
sbb
mov
rol
loope
cwtl
cld
mov
mov
xor
imul
xor
sbb
icebp
cltd
cmc
jmp
adc
xchg
mov
and
adc
les
inc
std
xchg
fisttpl
and
fmuls
iret
sarl
clc
add
lock
in
sub
sbb
xchg
imul
xor
imul
cmp
lock
enter
mov
outsl
mov
test
ret
jmp
dec
fcoms
or
ror
insb
test
test
inc
mov
push
out
xchg
inc
mov
xor
andl
bound
clc
xorb
ret
test
lahf
leave
and
scas
dec
out
movsb
push
mov
and
lock
inc
idivb
outsb
pop
shl
adc
fistl
pop
mov
xchg
mov
sbb
or
in
out
arpl
test
add
jne
fcoms
int
popf
in
ss
jne
cmpl
mov
call
divb
mov
inc
mov
sub
arpl
push
adc
cmp
or
xchg
call
mov
andl
cmp
mov
adc
or
sub
xor
or
aas
xchg
inc
popf
addr16
mov
or
push
push
pop
xchg
clc
testb
and
cli
add
inc
and
sbb
jns
pushl
cmp
adc
or
adc
dec
mov
mov
out
xor
ljmp
pop
mov
js
fnstcw
mov
cmp
cmpsl
outsb
dec
sub
repnz
push
pop
icebp
rcrl
mov
in
push
xor
fwait
or
loopne
jnp
cmp
icebp
xchg
shlb
hlt
test
cld
adcb
sbb
in
and
stos
imull
inc
das
jg
inc
mov
mov
or
xchg
push
dec
mov
ret
addb
sbb
ret
mov
mov
test
push
cmp
inc
dec
add
fst
fstl
mov
sub
ret
stos
inc
xor
pop
sarb
stos
test
adc
gs
repz
call
or
mov
sarl
loopne
add
adc
xchg
cmp
pop
shrl
ret
addb
stos
rorl
jb
fs
inc
rep
add
sub
xchg
sahf
mov
inc
repnz
ret
sahf
jmp
xchg
xchg
adcl
cs
scas
popa
push
sbb
xchg
ja
pop
or
adc
fs
push
xor
inc
adc
xlat
lock
sub
xor
call
xchg
out
pop
or
dec
sub
add
jge
repz
ficoml
test
xor
sbb
cmc
jmp
sub
jge
cmp
pop
ss
or
xchg
jp
mov
push
movsb
fimull
jmp
scas
dec
notb
xchg
push
mov
fnsave
ss
cmc
push
cltd
testl
xor
nop
push
xchg
in
les
push
or
std
and
test
pop
xor
fildll
adc
add
divb
push
jl
fsts
jmp
adc
sub
xchg
push
out
mov
in
ret
pop
mov
xor
sub
xor
aaa
mov
inc
xchg
test
jg
jne
add
add
xchg
loope
je
add
push
mov
inc
or
jmp
xchg
icebp
cmp
jno
push
outsl
out
sbb
push
data16
lret
rcrl
dec
hlt
popf
lea
mov
cmp
mov
rep
shll
into
lods
addr16
sbb
aaa
enter
jg
inc
data16
insl
mov
loop
cltd
push
dec
addr16
aad
pop
es
call
fdivs
scas
popl
push
imulb
lods
mov
mov
mov
jecxz
sbb
push
jbe
mov
cmp
jae
mov
mov
sbb
pop
mov
xchg
adc
loopne
mov
jne
iret
mov
or
cmpsl
sbb
repnz
push
adc
inc
push
rclb
sbb
or
inc
adc
rcrl
pop
insl
int3
push
push
ror
add
loope
push
stos
lods
fstpt
clc
dec
gs
test
cmpsb
scas
or
cmpsl
js
ss
ljmp
daa
adc
fwait
dec
adc
in
mov
pop
mov
xchg
rolb
mov
xlat
adc
cmp
mov
incl
adcb
js
mov
and
mov
cmc
mov
mov
pop
lods
negl
dec
push
push
pop
mov
nop
push
xor
faddl
aam
mov
mov
mov
mov
push
rcrl
divps
roll
cmp
cwtl
sbb
adc
push
cmc
mov
dec
cmpsb
fs
inc
mov
inc
in
mov
xor
xorb
sbb
push
pop
shll
sbb
ja
and
outsb
fwait
bound
loop
sub
add
lds
ret
mov
mov
and
test
inc
lret
ljmp
jle
and
in
push
aas
out
mov
les
push
add
imul
popa
push
mov
add
adcb
or
mov
loopne
aad
daa
mov
push
xor
out
jne
push
stos
aad
jge
xor
call
fildl
pop
xchg
ja
mov
mov
enter
jnp
call
mov
push
and
inc
daa
sahf
icebp
inc
lods
es
xor
aad
lock
in
shlb
inc
mov
cmpsb
adc
imul
jle
push
gs
sti
mov
int
sarl
adc
daa
mov
imul
adc
jo
dec
ja
cs
divl
inc
xchg
into
in
and
ljmp
mov
dec
fcoms
add
in
adc
fstl
pop
add
fwait
mov
lods
dec
mov
call
inc
addb
mov
clc
cltd
mov
outsl
clc
cwtl
mov
mov
sbb
lret
xor
out
pop
inc
loope
vpsubsw
inc
mov
and
mov
push
lcall
and
rorb
adc
stos
rcr
push
ljmp
clc
dec
cltd
jp
push
cmp
mov
sub
xlat
jnp,pn
dec
js
ljmp
jge
je
movb
popa
mov
fdivs
cmc
xor
dec
jl
shll
in
mov
andb
dec
xchg
stos
popf
adc
test
lret
cmc
aad
das
outsb
inc
mov
aas
pop
sbb
cmp
sbb
stos
pop
out
pop
push
fistpll
ja
call
or
inc
es
push
mov
loopne
and
jle
inc
in
out
pop
aam
push
clc
sub
mov
push
fwait
lea
jb
leave
pop
les
push
adc
popf
dec
addl
inc
fstpt
mov
cli
scas
scas
jge
pop
push
dec
xchg
and
push
xchg
xor
mov
push
jmp
xchg
ret
insl
test
push
fcoml
pusha
inc
ret
add
push
out
mov
sbb
mov
enter
xchg
mov
push
movsb
jo
insb
mov
sbb
ljmp
imul
outsb
pop
mov
xlat
into
jp
bound
fbld
jl
mov
popa
xchg
push
jae
cwtl
xchg
xchg
or
adcl
sub
icebp
sub
inc
aad
sub
lock
jne
psubd
repz
dec
jns
fidivrs
jno
inc
pop
cld
bound
dec
addl
movsb
lcall
mov
cwtl
arpl
xchg
xchg
sbb
outsb
and
jge
mov
fidivs
jge
testb
in
fildll
shrd
rorb
loopne
jno
les
shrl
sahf
jno
sub
pop
fcmovnu
popl
mov
bound
je
cmc
stos
stos
imul
jns
jge
hlt
mov
in
jbe
icebp
das
mov
pop
cs
ret
add
dec
pop
jecxz
lock
in
arpl
sbb
pop
je
flds
fistps
iret
mov
ret
aaa
loope
mov
out
pop
movsb
iret
mov
hlt
rorl
xor
adc
popf
outsl
mov
inc
pop
lock
out
jb
push
addr16
mov
xor
push
xlat
xor
roll
jb
paddq
stc
adc
or
bswap
daa
mov
jb
inc
inc
and
ret
insl
xor
shlb
jnp
stc
out
dec
js
pop
icebp
and
cmove
negl
in
cmp
jno
sub
push
int
aaa
adc
movaps
push
pushf
fmull
sbb
or
or
fildl
out
shll
inc
out
in
cs
xor
aas
insb
pop
orb
push
js
scas
into
or
imul
mov
pop
jle
push
xchg
pushl
aaa
adc
shll
or
les
fmull
mov
mov
mov
outsl
add
inc
mov
stos
xor
outsb
cmp
pop
xor
movsl
mov
test
xorb
pop
bound
lock
dec
lahf
fidivrl
shl
sub
jl,pt
fcoms
dec
xchg
lret
decl
and
mov
mov
sbb
mov
insl
pop
je
mov
adc
push
push
mov
popa
stos
popa
pop
daa
ss
cmp
mov
xlat
jmp
sbb
pop
call
hlt
ds
or
xchg
adc
xchg
or
nop
mov
mov
dec
mov
rol
pop
daa
lock
sub
sbb
aam
xor
jge
andl
sub
push
jmp
out
ret
mov
addr16
push
fldcw
jne
or
scas
push
arpl
dec
fdivrs
popa
mov
sbb
mov
cmc
movl
scas
pop
push
inc
jg
cmpsl
jns
or
in
and
into
shr
scas
scas
mov
xor
js
jnp
push
xchg
adc
sbb
ljmp
mov
pushf
lods
xchg
call
sbb
jae
inc
mov
aad
push
push
push
pop
insl
les
push
pop
push
dec
hlt
jbe
sbb
push
xchg
ret
incb
fnsave
xchg
xchg
ret
add
subl
je
add
fiaddl
mov
mov
inc
add
orb
jno
mov
or
stos
btr
pusha
movsb
pop
pop
imul
pop
sub
xlat
xor
xchg
mov
and
pop
imul
popa
dec
outsl
insl
ret
lds
or
clc
sahf
jecxz
pop
outsb
outsl
sbb
cmpb
and
xor
push
lret
cwtl
sbb
push
je
and
ljmp
popa
rolb
xchg
mov
andl
outsb
pop
sub
test
cmp
out
mov
frstor
ss
push
or
push
ds
in
jecxz
sub
sub
pop
pusha
mov
cmp
or
fwait
pop
pop
mov
sbbb
pop
aaa
sub
insl
fwait
lods
aaa
add
and
data16
and
mov
mov
leave
in
test
dec
scas
add
lcall
ja
outsl
push
jo
xor
and
fcmovu
inc
lds
or
rcll
dec
adc
enter
lahf
lea
lock
sub
push
cmp
lcall
ds
cltd
mov
push
incb
aas
shlb
loopne
into
pop
cmpsl
ljmp
xorb
jo
fstl
push
dec
or
mov
dec
sub
andb
aad
pop
jge
mov
mov
pop
xchg
imul
clc
pop
jmp
xchg
cmp
sbb
jle
add
sbb
inc
movsl
adc
pop
je
mov
and
and
sbb
dec
mov
cmpsl
test
fcoms
sub
aas
loopne
push
test
ss
daa
mov
sbb
sbb
and
jns
les
sbb
mov
sub
push
mov
cmpsb
lcall
das
cmpsb
pop
lea
popf
mov
mov
cli
hlt
das
jns
imul
sub
mov
pop
mov
mov
xorb
cmc
mov
or
xor
orb
or
popf
inc
xlat
jno
stos
lahf
cs
and
das
hlt
inc
iret
pop
cmp
dec
mov
lea
pop
ljmp
movsb
loope
roll
xchg
int3
jo
in
sub
inc
push
ficomps
jbe
mov
inc
clc
pop
add
adc
jbe
push
jl
out
sbb
clc
lock
or
pop
outsl
rorl
imul
jmp
nop
mov
pop
or
fadds
std
inc
sub
test
pop
mov
or
push
mov
faddl
add
push
stos
aas
sbb
negl
sub
ret
mov
shl
pop
ror
loopne
std
adc
cmp
lods
mov
xchg
mov
mov
movsb
mov
daa
mov
pop
clc
inc
add
jmp
ret
push
icebp
pop
cs
and
and
push
test
pop
mov
lahf
jl
outsb
xor
nop
add
fstp
cmp
push
cmpsl
cmc
scas
ds
pop
repnz
and
adc
repz
dec
jl
inc
xchg
daa
out
jnp
or
fcmovnbe
jmp
loop
mov
and
out
dec
je
mov
sarb
ss
xchg
pop
int
xor
inc
jno
cld
push
cli
in
mov
xchg
push
dec
dec
cmpsb
xchg
mov
mov
ss
or
or
or
nop
or
push
pop
jmp
pop
inc
push
pop
push
je
std
test
insb
xchg
sub
ds
sbb
and
mov
fsubl
push
movb
push
mov
jmp
or
inc
mov
js
sbb
clc
xor
add
cmp
mov
push
push
mov
pop
sub
aam
shl
cmpl
insb
xchg
xor
sbb
push
mov
and
or
jl
out
push
aaa
pop
push
jne
sub
mov
ljmp
adc
or
divb
mov
shrl
mov
mov
fyl2x
sarb
pop
xlat
cmp
sarl
lods
test
push
mov
adc
imul
test
daa
cs
mov
xor
xor
dec
lret
sub
subl
shr
inc
clc
inc
rorl
call
mov
mov
add
push
xchg
outsl
test
add
lret
xchg
xor
mov
test
sub
add
aam
pop
push
rcrl
jne
sti
ss
mov
add
pop
jmp
je
fdivrs
and
add
mov
xor
mov
test
sbb
jbe
mov
orb
jl
ss
dec
sbb
jno
int3
mov
mov
dec
das
test
xor
push
cld
insl
movsl
shl
repnz
or
xchg
pop
mov
mov
push
icebp
mov
cmp
jle
sbb
pushf
push
adc
test
mov
pop
sbb
loope
pop
rcrl
adc
int
adc
fcom
movsb
mov
daa
sbb
leave
stc
mov
inc
cmp
fisubl
mov
nop
push
sbb
jo
shlb
out
xor
mov
data16
in
add
clc
pop
sub
push
leave
pop
ret
fcmovnb
test
xchg
orl
xor
mov
fstpl
shlb
shrb
mov
je,pn
mov
push
mov
mov
jns,pt
loop
test
add
daa
ljmp
jo
push
pop
and
nop
dec
scas
pop
mov
sub
dec
outsb
sti
inc
jnp
mov
decb
push
es
or
sbb
sbb
dec
push
cmpsb
mov
xchg
repz
adc
stos
mov
or
inc
test
cmp
movb
cmp
icebp
rcl
fcmove
lcall
cmp
push
std
mov
stos
sysenter
xchg
subl
pop
insl
cmp
scas
mov
mov
xchg
add
int3
push
pushf
cmc
repnz
sub
mov
pop
dec
jp
lahf
mov
pop
int3
mov
and
dec
lahf
add
mov
mov
mov
aam
lods
clc
mul
sbb
inc
popf
repnz
lcall
add
jbe
mov
cwtl
and
jge
imull
popa
fwait
and
or
push
lods
inc
pushf
popf
jo
das
sub
xlat
inc
lods
pusha
pop
ret
fcmovnbe
push
jmp
ja,pt
lcall
fs
adc
paddusw
movsb
rclb
add
loop
sub
fmull
cmp
clc
outsl
dec
push
jo
jl
dec
test
fadds
sbbl
call
outsb
dec
dec
cs
cli
or
movsl
xor
subl
stos
je
mov
je
pop
ret
lea
push
stos
or
decl
or
mov
jmp
push
dec
nop
insl
stos
xlat
push
scas
inc
mov
pop
mov
sub
ds
popf
xor
imul
mov
xor
test
push
mov
addr16
adc
data16
das
cld
jae
jl
ret
push
lea
arpl
sub
popf
push
mov
ljmp
outsl
lock
mov
or
push
mov
fnstenv
leave
sbb
fmull
loope
jl
push
mov
mov
sahf
and
jecxz
or
sti
cwtl
sbb
xchg
mov
push
ret
data16
dec
mov
out
xchg
rorl
les
lahf
pop
cmp
popa
inc
cli
jo
xchg
add
clc
push
mov
cwtl
stos
cmp
mov
xchg
imul
push
push
adc
cmp
imul
loopne
call
data16
filds
mov
sbb
pop
and
sub
fistpl
mov
cmp
arpl
or
mov
fmull
inc
jnp
mov
mov
in
or
mov
stos
fistpll
repnz
or
jg
inc
in
nop
mov
lea
std
aam
cli
xchg
push
sbbb
sbbl
and
in
and
and
lcall
adc
pop
sbb
sub
jae
mov
push
and
aaa
mov
jge
icebp
aaa
sub
fsts
dec
sub
stc
nop
test
in
dec
push
xchg
mov
xchg
addr16
adc
push
xor
aas
mov
add
pop
insb
inc
cmpsb
inc
mov
sbb
jo
cmp
mov
push
or
pop
push
rcl
jae
adcl
arpl
and
push
stos
pop
das
jecxz
inc
inc
mov
lret
rorl
mov
xchg
mov
lds
push
mov
pop
sub
enter
dec
sbb
mov
xor
or
adc
jge
imul
mov
and
cld
ret
add
inc
mov
dec
or
pop
mov
movsb
sti
jp
lret
mov
lds
and
pop
shrl
pop
push
ljmp
mov
push
movsb
push
jle
push
sbb
push
insb
jp
mov
ljmp
insb
in
xchg
aaa
add
loopne
add
push
cli
aaa
jb
pop
mov
cmp
imul
push
inc
cld
inc
pop
mov
cmp
or
aad
sbb
mov
cltd
adc
cmp
inc
adc
or
ja
sub
inc
leave
and
jo
push
sahf
xchg
xchg
or
inc
adc
jo
or
adc
fmull
adc
fsubrl
dec
and
addr16
out
mov
sbb
cs
dec
inc
sub
push
pop
int3
or
les
or
jmp
adc
sbb
loope
fwait
sbb
inc
movl
add
push
rcrl
xchg
mov
aam
cmpsl
dec
nop
popa
stc
outsl
jl
push
jbe
push
out
shlb
mov
movb
in
lahf
js
and
mov
jge
mov
dec
popf
cmp
jge
push
sub
adc
mov
jp
lods
mov
bound
in
outsb
mov
pop
fadd
push
stc
xchg
ss
jl
pop
sbb
sub
push
insl
add
nop
icebp
cltd
gs
jo
cmpsl
xchg
test
sbb
pop
pop
sub
mov
add
aad
cmpl
pop
cwtl
ds
push
or
adc
or
mov
cmpsl
sbb
jge
inc
fwait
cli
mov
sub
imul
enter
sbb
test
dec
pop
jo
insl
jnp
mov
je
sarb
mov
mov
lahf
jnp
aaa
repz
lcall
pop
adc
pop
mov
mov
xchg
xor
inc
sbb
xchg
sbb
es
and
orl
pop
or
stc
jge
push
clc
test
std
test
dec
rcrl
and
mov
jne
jmp
aam
call
lret
adc
std
lds
adc
mov
je
jp
out
shll
mov
xchg
mov
push
jp
arpl
js
in
add
xor
fbld
insl
add
and
es
sbb
inc
xchg
mov
adc
je
inc
add
mov
dec
pop
test
cmp
fldenv
int
pop
xor
cmpsb
xlat
pop
mov
mov
push
test
insl
sbb
insl
and
iret
bound
dec
fsubrs
lret
lds
sbb
andb
mov
push
pusha
and
xchg
add
shl
outsl
pop
movsb
cld
inc
ss
mov
mov
mov
pop
shll
shrl
outsl
sub
push
aas
scas
dec
adc
pop
outsl
ret
cmpsb
jle
jb
std
jge
outsb
inc
insl
les
pop
outsl
aaa
lea
xchg
xchg
push
adc
fcoms
push
sub
mov
add
mov
jl
xlat
rcrl
xor
pop
jne
xchg
addr16
pop
inc
sbb
mov
ret
aas
sbbb
out
aam
push
in
push
inc
xchg
ret
mov
call
pop
mov
sarb
sti
pop
cmp
shll
aaa
insb
sub
and
mov
mov
fstl
ja
pop
cwtl
mov
dec
mov
push
sub
jnp
push
or
sub
xchg
mov
mov
cmp
pop
mov
sti
iret
jo
push
pushf
adc
push
cld
aam
jge
lods
pop
xor
in
fwait
es
push
insl
sbb
frstor
sbb
xlat
xor
xchg
xor
sti
pop
cmp
fistpl
popa
ss
sbb
inc
xor
test
and
add
mov
sbb
bound
sarl
mov
mov
and
sub
pop
add
push
lods
push
ficomps
xor
xchg
fnsave
mov
push
and
mov
shlb
jns
fsubrs
loop
stos
sti
sbb
inc
std
dec
arpl
lods
mov
fs
xchg
or
xchg
lds
call
loope
lods
fwait
negb
mov
mov
mov
iret
or
cmp
inc
lret
push
mov
jb
jo
push
filds
fcomps
stos
add
mov
pop
addr16
pop
and
aam
fdivrp
das
outsb
scas
mov
mov
sub
and
ss
in
lods
stos
mov
jb
lret
jbe
jecxz
lahf
cli
cmp
jg
inc
in
mov
arpl
ret
xlat
jo
sbb
add
insl
jp
lock
sbb
cmp
jnp
mov
mov
inc
mov
inc
hlt
and
rclw
add
xor
ret
lock
mov
jmp
roll
fiaddl
sbb
inc
jbe
xor
dec
mov
mov
fsubrl
mov
bnd
and
sbb
xchg
sbb
mov
test
adc
xor
insb
lahf
xchg
inc
xor
aam
mov
test
test
jp
mov
les
stos
mov
xchg
ja
add
pop
cmp
mov
movsb
pushf
clc
inc
jmp
mov
loopne
inc
cmp
push
cli
adc
lds
js
adc
mov
out
pop
jl
call
fidivrl
pop
mov
imulb
mov
xor
stos
cltd
dec
push
daa
movsl
aad
pop
dec
xor
fsubrl
xchg
inc
pushf
inc
xchg
jne
mov
xchg
faddl
cmp
sub
in
stos
rcr
mov
push
xor
pop
lea
dec
sbb
in
loop
xor
daa
sub
fnsave
dec
adc
sbb
and
lods
cmc
xchg
mov
xor
lods
or
or
inc
push
cmp
out
adc
outsl
ss
xchg
or
push
test
data16
jg
mov
rolb
mov
mov
sti
inc
dec
push
sub
inc
test
outsb
pop
mov
es
xor
sub
dec
mov
dec
or
inc
cwtl
pop
aad
icebp
add
push
sub
stos
pop
in
andb
hlt
adc
adc
pop
push
popa
mov
filds
jno
call
loop
xadd
clc
into
aam
call
mov
sub
data16
or
out
add
add
xor
dec
or
mov
inc
sub
fwait
ret
and
inc
cmp
cs
or
add
adc
jb
in
adc
and
add
or
push
shll
movsb
adc
mov
out
dec
push
jo
ret
mov
je
js
add
pop
fistpl
jl
or
or
xchg
outsl
push
jl
into
out
gs
pushf
pop
rorl
jmp
nop
lods
sbb
mov
je
push
cmp
insl
loopne
pop
mov
jae
out
mov
cwtl
sub
and
movsl
adc
sbbl
test
sbb
cmp
fucomp
push
or
or
sub
mov
xchg
pop
push
or
divb
ljmp
cs
mov
push
or
or
mov
mov
mov
mov
in
or
sub
xorb
jle
xlat
fisubl
subl
fstps
push
incb
jecxz
fmuls
stc
inc
inc
add
mov
or
movsb
pop
mov
xchg
mov
jp
or
lock
push
stc
js
and
xchg
add
dec
addr16
rorl
stos
and
pop
mov
cli
inc
adc
lods
jne
xor
ljmp
clc
mov
or
dec
rcl
icebp
adc
sbb
ret
sbb
popl
pop
insl
cmp
loop
lcall
loope
sbb
jl
popa
mov
sub
or
stos
or
roll
mov
xchg
inc
jle
mov
and
or
mov
ficomps
dec
xor
mov
fnsave
dec
or
jno
call
call
and
mov
scas
mov
in
add
cs
dec
pop
sar
lock
mov
inc
sahf
sbb
bound
push
les
mov
and
xlat
adc
and
dec
jecxz
sbb
add
test
mov
sub
adc
push
or
int3
inc
pop
arpl
pop
lea
lock
out
loopne
sub
daa
in
and
push
jge
insl
pop
js
sub
push
sar
add
mov
sbb
push
pop
push
xchg
sub
aad
pop
mov
hlt
ffree
daa
or
jbe
inc
mov
lahf
xor
sbb
lock
sbbl
mov
and
mov
rclb
sahf
cmp
icebp
mov
out
jle
cmp
mov
iret
adc
pusha
dec
dec
in
int
lahf
add
cmp
imul
cmp
mov
popa
mov
pop
pusha
in
fisttpll
fs
fucomi
lea
push
or
mov
sub
aad
shrl
jae
xchg
nop
xor
or
sahf
aas
lds
mov
jmp
mov
leave
mov
mov
cmp
inc
sbb
push
fwait
sub
cs
push
fildl
ss
pop
lahf
mov
orl
test
inc
mov
pop
push
or
rcll
aad
dec
sub
pushf
out
or
clc
lods
fildll
xchg
or
cmp
mov
test
jle
ja
mov
lds
pop
ret
dec
jp
vmread
cmp
jle
dec
cmp
in
fidivrl
shl
inc
rclb
mov
mov
std
dec
lock
and
cld
xlat
or
outsl
and
test
sub
mov
cmp
inc
stos
lahf
out
das
test
aad
cs
call
adc
aas
jle
loope
lea
sub
bound
push
cmpsl
xchg
addb
dec
mov
or
repnz
imul
or
jbe
repnz
fnsave
inc
arpl
sti
mov
and
cmp
in
dec
cmpl
jo
push
shl
mov
cmc
jne
adc
sbb
dec
int
sub
lahf
out
loope
xchg
pop
pop
leave
cs
mov
adc
or
sub
mov
adc
es
int
mov
enter
fcomps
dec
daa
rcrb
insb
or
add
push
or
jns
mov
ja
addr16
test
dec
iret
decl
sbb
dec
cwtl
mov
push
mov
ds
sub
jbe
xor
mov
inc
das
insl
leave
in
add
sbb
subb
xchg
cmpsl
call
stos
dec
scas
das
fs
loope
loopne
push
add
cmpl
jne
add
iret
loope
push
fwait
pop
addb
lods
mov
pop
clc
jb
loope
mov
shlb
or
mov
call
sbb
scas
dec
scas
fstpl
out
imul
dec
fidivrs
inc
ljmp
xchg
pop
daa
shr
popa
mov
sub
fsubp
adc
das
jbe
mov
sub
sbb
inc
repz
cmpsl
jle
xchg
sbbb
testb
xchg
add
lods
fsubrs
sahf
mov
rcl
outsl
ficoml
lret
xchg
idiv
push
gs
sahf
js
mov
add
or
call
ljmp
repnz
mov
sbb
ret
cld
add
aaa
test
add
xchg
mov
dec
insl
lods
or
outsl
ljmp
sub
cmp
or
out
jmp
mov
inc
push
gs
fwait
lods
fwait
pop
jnp
mov
cmc
repz
adc
mov
pop
addb
pop
subl
hlt
imul
in
pop
je
movsl
test
sti
aam
popa
inc
jb
push
mov
shrl
push
inc
iret
enter
xchg
nop
enter
sti
and
pusha
gs
push
cld
in
lret
hlt
shll
std
fsubs
cmpsb
enter
call
cmp
push
mov
jae
sub
sbb
sbb
fdivl
cwtl
cmpsb
xor
add
ret
in
jo
imul
mov
out
add
lahf
jecxz
sbb
inc
rorb
mov
inc
jl
mov
or
and
sub
lea
push
aam
add
sbbb
loop
xchg
inc
dec
cli
ljmp
add
es
cmp
shll
shlb
jl
jge
shr
dec
adc
cmp
add
and
dec
inc
cmovo
pop
or
cmp
push
outsl
jge
pop
adc
xor
sarb
jne
and
jle
incl
mov
test
mov
nop
xor
cwtl
movsb
popa
dec
cltd
lods
sbb
cltd
add
sti
rcrl
sub
mov
sub
cli
mov
inc
mov
cmp
ss
pop
mov
mov
decl
inc
xor
and
mov
sbb
hlt
push
aaa
mov
addr16
and
into
push
jmp
mov
jmp
roll
lret
mov
pop
insb
xor
mov
movsl
sti
sbb
lock
leave
xor
jo
pop
addr16
xchg
push
mov
jmp
mov
xchg
or
cmpsl
sahf
add
mull
mov
inc
and
push
jae
dec
outsb
dec
mov
mov
pop
lret
jo
add
lcall
push
mov
test
jge
and
push
pop
fcomip
inc
aas
pop
into
je
sbb
mov
jnp
rolb
pop
icebp
cmp
shlb
fimull
rcl
dec
add
mov
sarl
inc
addl
xchg
fstl
test
and
nop
fidivl
pop
jne
sub
push
gs
adc
cmpsb
dec
leave
pop
lods
jmp
jnp
enter
iret
out
lahf
add
jo
adc
lcall
stc
fldz
adc
xor
mov
jg
sbb
jno
aad
pop
insl
adc
call
xor
mov
adcb
or
js
pushf
movsb
test
mov
jne
dec
inc
and
push
icebp
stos
jecxz
dec
cmp
push
jle
fadds
les
rol
insl
and
inc
mov
in
adc
rolb
jmp
loopne
and
shr
pop
repnz
cmp
pop
sahf
adc
cmp
add
mov
lock
adc
inc
scas
lock
cmc
mov
fdivl
sbb
mov
bound
fdiv
test
mov
not
and
xchg
pop
pop
ret
aad
jnp
pop
stos
or
pop
mov
add
in
imul
int3
test
mov
dec
cmpsl
hlt
daa
in
loope
mov
jmp
ret
repnz
sbb
sub
call
std
mov
mov
out
popl
sub
int3
add
and
cld
mov
jne
cld
pop
fldenv
outsb
in
int3
or
xchg
push
pop
outsb
shrb
incb
sbb
pusha
pop
cs
rcrl
lret
ds
jnp
stos
in
cmp
rol
or
popf
mov
jecxz
mov
cmp
in
insl
push
sub
repz
cli
add
shl
fisubs
popf
bound
dec
ss
pop
pop
mov
or
jg
push
cmp
insb
aam
mov
jns
popa
lods
dec
ljmp
xor
scas
push
repnz
repnz
xor
int
cmp
push
ss
clc
or
adc
test
push
pop
dec
dec
lods
scas
iret
or
xchg
fsubrl
mov
ljmp
sar
and
mov
inc
int3
aad
aaa
lock
scas
dec
xchg
stc
ja
add
fwait
test
stos
test
bound
cltd
ss
or
fistpl
jecxz
fistps
sbb
in
inc
xchg
push
fs
sub
das
adc
cli
sub
stos
loopne
sub
outsb
pop
test
inc
cmpsl
in
out
jmp
jge
adc
ret
mov
push
sub
push
mov
inc
inc
clc
mov
gs
dec
int
dec
shr
sub
mov
mov
adc
cli
gs
or
addr16
mov
shll
aaa
mov
add
and
rcl
cmp
aaa
ret
pop
popa
test
les
std
inc
or
aaa
lock
dec
repnz
lods
xchg
cmpsb
ds
inc
push
mov
xchg
mov
xor
mov
je
xor
push
mov
pusha
lcall
adc
add
stos
faddp
data16
loopne
xor
lock
addb
loopne
add
aaa
adc
ret
in
adc
add
addb
pop
pop
std
rorb
push
or
mov
repnz
stc
pusha
adc
pop
movsb
inc
jg
mov
pop
jmp
cmp
mov
mov
pusha
aam
push
bound
push
rorl
in
or
mov
rol
lods
xchg
cmp
sbbl
sbb
in
jmp
out
leave
pop
cmc
xchg
lret
inc
insl
or
jo
jne
fnstsw
sub
xchg
add
icebp
test
mov
xchg
les
xchg
mov
in
shrl
es
push
sti
ffreep
mov
mov
pop
jnp
sar
loope
fsts
lahf
ret
ret
outsl
mov
push
pusha
push
mov
mov
mov
mov
mov
loop
jl
jnp
repnz
pop
in
mov
movl
dec
sbb
repnz
ss
loopne
xor
sbb
and
pop
mov
iret
sub
dec
lahf
sbb
lds
inc
lahf
stos
movsl
pop
daa
xor
das
jo
clc
mov
jmp
aas
jbe
loop
aaa
sbb
fs
out
mov
idivl
cmc
sbb
add
mov
jmp
mov
movsb
push
nop
sbb
xchg
pop
sbb
mov
xor
inc
pop
jle
xchg
gs
or
or
lcall
add
pop
push
pop
mov
inc
adc
push
ljmp
popa
adc
out
daa
pop
mov
inc
rolb
je
mov
int
jo
sub
dec
pop
mov
movl
mov
push
sub
mov
and
rolb
in
xchg
mov
and
push
imul
nop
enter
xchg
mov
jl
dec
xorl
popa
mov
pop
xchg
mov
or
int3
test
push
or
and
mov
xor
jl
sbb
stc
lds
jno
sbb
jo
and
hlt
inc
or
fidivrl
dec
imul
ret
pop
clc
subl
dec
mov
mov
xchg
loop
pop
and
or
les
lahf
into
mov
aaa
add
or
insl
inc
mov
cli
fcmovb
add
inc
sahf
je
lods
mov
jmp
imul
int
add
add
xchg
lret
into
push
fcoms
popa
or
jg
cli
aaa
xchg
xor
xor
push
xchg
push
jo
dec
das
add
fsub
cwtl
cmp
or
xchg
loope
clc
and
mov
daa
add
pushf
mov
cltd
sbb
jo
call
fdivrl
mov
sbb
mov
stc
arpl
sbb
mov
out
mov
insl
fs
cwtl
add
fldt
xchg
add
addr16
mov
fld
add
pop
clc
mov
inc
sub
iret
push
xchg
rcrb
cmp
shl
outsl
aaa
dec
or
add
lock
mov
pop
jmp
loop
aaa
dec
jge
out
inc
mov
test
aad
adc
push
in
aam
xlat
fidivs
add
jbe
adc
sbb
mov
adc
xchg
fldt
add
xor
cli
pop
hlt
or
add
push
push
adc
out
cmpsl
push
push
pop
sub
cmp
push
aam
mov
das
sbb
mov
xchg
mov
out
push
push
je
shlb
cmc
xor
sbb
mov
dec
pop
ret
and
xchg
sbb
xlat
repz
dec
inc
sbb
xor
pop
and
and
int3
popa
int3
ret
pop
dec
jb
and
add
std
push
add
repnz
fwait
cli
imul
cmc
adc
test
push
scas
dec
aas
sarl
jno
mov
push
xorl
cmp
mov
aaa
dec
aas
jae
inc
pop
leave
out
fistpl
sbb
lret
rcr
movsl
jae
mov
adc
cwtl
ja
adc
out
or
xchg
add
jo
outsl
xor
shrb
jge
pop
fsqrt
push
lock
pop
cmpsb
sahf
lds
and
mov
mov
ljmp
mov
andl
fmuls
subl
push
push
inc
mull
cmc
cmp
movsl
stos
repnz
fwait
xchg
jmp
ficompl
aaa
ljmp
xchg
push
mov
sub
nop
mov
lock
and
mov
cmc
dec
inc
in
fs
loope
stos
rcrb
lea
dec
add
mov
jg
jge
movsl
lcall
xor
mov
inc
xchg
stos
iret
roll
lret
lret
hlt
dec
fstpl
jl
pop
sbb
jnp
shlb
lds
jp
test
das
jl
or
mov
es
bound
out
pushf
xchg
dec
mov
in
out
pop
jg
adc
mov
popa
jmp
ja
or
clc
mov
call
jp
push
ja
adc
in
in
jle
frstor
pop
inc
inc
or
add
inc
pop
jle
sarl
imul
xor
pop
push
cmpsb
lock
cmp
cmp
sub
test
test
jo
pop
pusha
adc
mov
imulb
shlb
cmp
adc
fadd
ffreep
addr16
bound
mov
loopne
fistpll
add
ds
cmp
push
scas
xor
cmp
jl
cmp
mov
and
pop
mov
cs
xchg
push
mov
dec
out
push
mov
cmp
in
sahf
and
lea
into
xlat
mov
enter
fcmovnb
push
pop
inc
jge
rorl
lods
jp
and
sub
js
xchg
pop
js
cmp
jbe
and
push
mov
bound
pushf
fiadds
or
lahf
test
mov
pop
cmpsb
movups
clc
dec
popf
loopne
xchg
fs
mov
adc
dec
cmc
ja
outsl
mov
pop
in
push
adc
and
inc
test
js
jl
daa
in
adc
in
mov
sub
xor
addr16
jmp
or
enter
inc
icebp
adc
mov
and
inc
inc
imul
sbb
or
imul
stc
test
mov
cmpsl
lret
psllw
and
and
ret
add
pop
sbb
jb
enter
int3
and
fsubp
adc
mov
lea
and
movsl
mov
adc
imul
mov
shlb
test
and
inc
daa
adc
adc
pop
aam
int
jnp
pop
pop
ret
mov
jb
mov
andb
fs
stos
sbb
or
andl
sbb
fiaddl
ret
loopne
test
add
sub
fiadds
mov
ds
and
xchg
cmpb
fcoml
repz
jecxz
int3
lahf
add
jl
sar
dec
cmp
inc
dec
lcall
hlt
mov
or
sbb
mov
enter
insl
ret
and
aam
add
mov
xchg
test
mov
lea
mov
jl
fiadds
push
fistpll
adc
es
bound
dec
add
fmull
adc
cmp
add
inc
leave
je
or
int
lret
jno
dec
or
arpl
adc
jle
or
aam
mov
std
cmpsb
cmp
mov
mov
push
or
in
insb
negl
mov
das
insl
inc
fsts
add
jp
stos
cmpb
inc
mov
adc
test
loope
push
in
in
sub
sti
cli
push
sub
and
mov
popf
dec
sub
lds
iret
out
sbb
sti
mov
loopne
imul
pop
xchg
pusha
std
mov
aam
aad
jno
fcomps
push
dec
jle
fdivrl
sbb
fs
subb
cmp
add
icebp
xchg
sti
add
adc
aaa
cld
out
xor
test
mov
xchg
in
call
leave
fistpll
or
jmp
pop
lea
sbb
xchg
mov
mov
push
add
je
dec
pushf
sbb
dec
pop
xor
mov
inc
movsl
fisubrl
pop
or
add
or
pop
test
into
mov
movl
xor
inc
enter
mov
sbb
inc
and
gs
inc
sub
xchg
cmp
cld
pop
cld
xchg
cmpsb
mov
inc
cmp
movsl
sbb
or
pop
test
dec
dec
lods
pminsw
outsb
lret
mov
orb
ffreep
test
push
fmul
mov
roll
dec
test
jecxz
int
arpl
lods
dec
cmp
loope
jbe
fstl
mov
out
xlat
mov
stc
loop,pt
add
movsl
idivb
icebp
lcall
ss
mov
cmp
inc
and
rclb
xchg
stc
mov
sbb
inc
inc
stc
test
inc
aam
add
jl
mov
xchg
and
push
pop
iret
and
shlb
fiadds
cmp
jae
jl
cwtl
and
sub
sub
stos
test
push
mov
pop
cld
iret
mov
fiaddl
mov
cwtl
data16
xor
sub
xchg
sbb
fwait
loopne
scas
lds
xchg
sub
pop
stos
fistps
bound
cmp
adc
jne
sbb
pop
out
mov
cld
mov
lahf
sub
push
or
leave
sbb
dec
inc
inc
mov
sbb
xor
fstpt
or
jbe
std
adc
adc
mov
inc
loop
and
xor
cmp
ss
and
sbb
push
dec
mov
and
and
add
jmp
lds
mov
mov
mov
cmp
loopne
std
cmp
adc
push
test
add
adc
xor
add
fbstp
dec
xchg
dec
inc
cmp
pop
test
pushf
and
or
sub
je
loop
test
or
cmpsb
jno
lock
cmp
dec
cmpb
sub
divb
and
mov
add
andl
in
ss
xor
push
cmpb
adc
mov
xchg
adcl
shlb
pushf
jge
fisubrs
sub
jg
pop
pop
xchg
mov
add
repz
vhsubpd
les
inc
pop
in
lret
or
data16
movsl
pusha
push
dec
outsb
inc
mov
jge
ret
jns
incl
orb
imul
mov
mov
push
arpl
dec
mov
xor
scas
test
adcl
subl
sbb
loop
outsl
clc
outsb
jl
add
xchg
cmc
test
inc
loop
outsb
pop
add
test
xchg
stos
sub
scas
pop
mov
cmp
cmpsl
popa
dec
out
jno
mov
xor
insb
mov
mov
xor
aaa
jmp
insb
mov
invd
pop
int
cmp
xchg
mov
add
adc
enter
in
fcmovnbe
xchg
jmp
ss
dec
testb
pop
outsb
push
mov
mov
lea
dec
xor
dec
and
jmp
sub
rclb
sbb
jl,pn
in
into
rorl
ljmp
adc
inc
rorl
jmp
jg
lret
and
addr16
adc
sub
inc
call
or
mov
ljmp
popa
lock
mov
adcl
icebp
push
mov
andl
or
jge
insb
mov
js
jno
dec
aaa
and
sub
movsb
cs
dec
scas
leave
loopne
cmp
fsubr
mov
or
test
pop
push
adc
pop
or
test
sbb
popa
int
ficompl
mov
daa
add
lock
pop
dec
jmp
pop
add
arpl
lea
fistps
push
mov
popa
stc
bound
push
fcmovu
or
push
fidivrs
not
callw
je
sub
dec
imul
adc
inc
xor
push
inc
mov
movsl
inc
or
cmpsw
imulb
mov
mov
sbb
sbb
mov
outsb
sub
adc
es
in
bound
inc
popf
or
mov
mov
mov
sti
jecxz
adcl
jp
xchg
inc
mov
bound
inc
pop
loopne
mov
cld
mov
andb
pop
sub
faddp
incl
leave
adc
mov
add
push
loopne,pt
xchg
mov
xchg
adc
les
dec
icebp
lock
pop
iret
cmpsl
mov
mov
adc
outsl
mov
jb
ljmp
pop
int3
mov
dec
xchg
loop
lret
sub
lahf
out
inc
out
fmull
fnstcw
in
xchg
clc
jnp
sub
jno
rcrb
mov
shrb
stos
outsl
push
test
data16
or
mov
or
sbb
jbe
cli
outsl
cmc
and
out
fistpl
and
inc
or
fs
pop
loopne
test
mov
and
lods
and
xchg
loopne
out
push
mov
xchg
adc
jecxz
fcomps
fbstp
xor
ja
jge
sub
aas
pop
rcll
aad
sarl
std
jg
mov
mov
outsl
inc
fbstp
repnz
ja
push
pop
and
aad
cmp
scas
push
xor
mov
in
mov
mov
and
dec
cld
insl
xchg
jb
cmpsb
fsubs
mulb
movsb
push
sbb
add
sub
std
jb
mov
sbb
fsubrl
sbb
or
xchg
cmpsl
pushl
pop
mov
xchg
sbb
and
int
inc
mov
ud0
ror
mov
movsl
dec
adc
mov
rorb
mov
inc
lods
sti
int3
popf
jnp
inc
jl
rorl
rcl
outsl
lods
or
mov
inc
pop
mov
subl
or
push
mov
les
lods
lahf
cmc
sub
dec
xchg
test
xor
dec
roll
test
cld
or
sbb
xor
cwtl
movsb
pop
push
shlb
mov
das
sbb
add
add
sub
pop
in
mov
outsb
dec
add
add
jno,pn
mov
dec
xorl
imul
cmp
lds
push
jg
dec
pop
dec
in
sbb
pop
or
jbe
sti
adc
ja
inc
or
out
pop
sbb
pop
pop
push
sti
arpl
adc
aad
xchg
aad
push
adc
gs
icebp
iret
loope
adc
cmp
aad
or
pop
je
loopne
loope
jns
call
adc
push
inc
mov
pop
out
ss
or
xlat
scas
mov
mov
repz
icebp
add
or
lcall
loope
loop
jge
ficompl
adc
dec
int
out
cli
jg
faddl
out
test
push
dec
popf
sbbl
jno
test
outsl
push
test
mov
loope
mov
push
cld
in
les
mov
mov
inc
mov
and
cmpsb
mov
push
mov
jne
xchg
push
xchg
fcmovnbe
or
std
cmp
fcoms
pop
aam
mov
or
arpl
test
popl
icebp
add
shrb
cmp
mov
jb
or
outsl
or
test
mov
cli
inc
fsubs
jb
mov
call
push
sub
adc
stos
in
xor
sbb
add
adc
test
cmp
aaa
loopne
add
mull
xor
pop
xor
mov
jno
xor
mov
xchg
mov
mov
push
mov
cmpl
cmc
test
call
imul
rorl
or
jae
test
icebp
fwait
daa
fistl
pusha
fldt
cmp
rclb
lcall
mov
roll
cs
iret
lock
sbb
pop
lahf
xor
fisubrl
jb
test
adc
cmpb
test
mov
and
or
jno
shrl
sub
repz
call
or
call
pusha
jnp
xlat
imulb
mov
aam
fisubl
pop
mov
divb
stos
lds
fcmovnbe
and
mov
cmp
sbb
adc
xchg
mov
leave
shl
mov
test
in
frstor
lea
mov
jno
dec
pushf
jnp
or
call
out
lea
popa
fsubrl
mov
cmp
add
and
outsb
inc
adc
mov
jb
push
fsubrl
sbb
jae
lea
mov
xlat
jbe
in
pusha
mov
pop
pop
clc
aaa
fidivs
jnp
mov
ss
dec
cld
adc
pop
cmp
test
inc
pop
nop
imull
bound
and
loop
ja
jmp
dec
add
mov
mov
arpl
adc
cli
pop
cmp
mov
in
and
or
movsl
xlat
iret
mov
add
sbb
stc
in
jle
out
mov
or
movsb
inc
sub
xor
pop
cmpsb
negb
hlt
push
xor
adc
mov
xchg
movsl
jmp
pop
sub
ja
fs
scas
xor
or
insl
rorb
mov
pop
lret
pop
cmp
ja
fs
test
int3
add
adc
nop
mov
or
adcb
clc
iret
push
adc
mov
push
pop
xor
movsl
mov
jo
out
or
lds
loop
inc
aaa
in
jmp
lock
mov
jbe
out
jne
or
int
sub
xchg
cmp
cmp
jmp
pop
insl
mov
pop
test
sub
cmp
mov
int
and
in
xchg
fnsave
jne
mov
cmc
mov
or
in
mov
test
cmp
in
lods
in
pop
stc
or
js
mov
sbbb
lahf
push
movntq
shll
mov
xchg
scas
inc
test
jmp
shr
lret
out
movl
mov
sbb
mul
idivl
sbb
int
hlt
fadd
xor
dec
dec
and
inc
je
pop
pop
and
mov
insb
xchg
enter
mov
mov
add
dec
adc
aaa
jne
add
das
sti
in
das
cmp
xor
mov
add
xchg
subb
pop
pop
lock
jno
std
pop
mov
lea
adc
mov
aaa
lock
jmp
mov
stos
cld
jmp
dec
dec
cmp
sbb
ja
lods
popa
test
mov
dec
out
fwait
lret
shlb
inc
rolb
in
in
sub
dec
mov
callw
loopne
inc
xchg
test
out
mov
xor
rclb
hlt
dec
lock
sub
cli
or
pop
push
adc
jns
addl
mov
and
pop
jbe
fdivr
push
jg
aam
scas
adc
pop
xchg
call
pop
clc
inc
inc
movsb
outsb
xor
iret
cmp
sub
imul
jl
inc
sub
shll
inc
jbe
pop
fld
roll
push
jp
aas
pop
sub
add
loopne
aad
xchg
push
pop
or
nop
mov
mov
mov
mov
inc
jg
add
cmpl
scas
and
mov
pop
jnp
bound
inc
dec
ret
arpl
popf
rcll
adc
mov
outsb
cmpsl
decb
je
in
das
lahf
push
addb
lods
xorb
adc
pop
mov
pop
cltd
std
add
fbld
enter
and
jg
cmp
testl
frstor
sbb
jg
insb
fisubrs
scas
mov
enter
mov
pop
inc
movb
adc
sub
mov
iret
test
dec
jno
lret
sahf
inc
mov
cltd
mov
sbb
push
add
test
sbb
aaa
aad
and
fucompp
sarb
pushf
and
insl
pop
sbb
insl
xchg
pop
cmpb
loope
push
cmp
mov
add
xchg
mov
loope
lods
in
dec
rcll
adc
mov
aam
rcrb
in
jmp
popa
mov
mov
fists
push
stos
sti
in
jg
dec
aam
sbb
push
push
scas
or
xor
pop
fcoml
in
stos
jo
sbb
add
test
mov
outsl
dec
insb
cmp
push
push
sub
jle
loopne
dec
jb
icebp
sbb
and
out
aaa
fidivs
jl
pop
cltd
pop
ljmp
outsl
mov
pop
mul
pop
jno
repz
leave
dec
cli
dec
pop
inc
out
imul
sti
aam
aam
jge
mov
addr16
sub
mov
or
cmp
dec
sbb
cmc
outsl
adc
xchg
jmp
adc
cmp
add
mov
adc
mov
push
add
cmp
dec
push
mov
divb
dec
jo
jae
adc
push
icebp
or
dec
cmp
pop
cltd
add
pop
push
pop
mov
cmpsb
sub
popf
call
xchg
xor
lods
popf
dec
test
cld
jno
rcr
incb
mov
sub
loop
jo
add
test
into
dec
insb
aad
jecxz
push
sti
pop
stos
push
in
xor
jns
mov
xchg
sbb
pop
xchg
into
xlat
mov
es
xorb
mov
cmp
sbb
and
dec
movsb
das
outsb
jo,pn
sub
fs
xchg
rcl
lret
push
enter
mov
push
adc
pop
cmpsb
mov
subl
inc
push
sarb
adc
mov
xchg
aad
adc
sti
mov
mov
sbb
mov
cmp
jg
cmp
adc
inc
mov
pcmpgtw
cmp
sbb
inc
enter
stos
pop
mov
push
aaa
les
sbb
stos
dec
xor
incb
xchg
jnp
testl
mov
rcl
mov
negb
mov
mov
sbb
mov
call
pop
mov
call
mov
fmul
insb
gs
test
iret
movsb
pushl
bound
sti
sbb
fcoms
adc
dec
pop
xchg
xor
add
xchg
das
in
push
not
and
inc
in
pop
sbb
outsl
call
cwtl
push
fwait
or
push
std
mov
push
aas
ljmp
or
call
sahf
adc
inc
xor
pop
addr16
sbb
js
scas
es
push
add
lds
mov
mov
in
data16
cmp
addr16
fistpl
inc
or
aam
bound
xchg
test
push
adc
cmpsb
sub
das
repz
add
push
loop
lods
mov
pop
xchg
pop
out
leave
jle
aaa
fwait
dec
std
inc
in
rcll
psubusb
hlt
lcall
loop
pop
push
push
dec
dec
shlb
pop
fdivr
fdivs
sbbl
std
push
shlb
sub
pop
mov
fcomi
icebp
xor
scas
xchg
out
mov
inc
fwait
xorb
and
push
js
sub
cmpl
cmp
mov
jo
mov
lock
jp
lock
jmp
loop
imul
icebp
adc
and
fwait
jecxz
xor
mov
rorb
mov
xor
xorb
imul
inc
cmc
pop
adc
or
push
pop
cmp
xchg
fldl
hlt
mov
dec
push
mov
mov
lds
and
mov
sbbl
sub
ret
cmp
aam
or
pop
sub
push
xchg
inc
sub
or
jo
mov
push
pop
lds
mov
ja
addl
pusha
fisttps
into
cmpsb
addb
imul
adc
pop
repz
punpcklwd
jno
xchg
mov
pop
into
or
jnp
scas
dec
shlb
or
push
lret
cmp
adc
inc
sar
mov
in
xchg
xchg
or
xchg
jg
ja
lcall
dec
shlb
idivl
or
aaa
sbb
sbb
sbb
sub
inc
iret
ret
jo
jb
fcomp
mov
les
push
pop
fildll
push
outsl
mov
and
clc
inc
mov
clc
sub
pop
mov
and
scas
insb
sbb
inc
aas
jb
or
std
sub
mov
xchg
fldenv
fistl
ljmp
cld
mov
jns
sti
aas
jle
adc
imul
insb
out
add
pushw
xchg
add
gs
jb
loope
add
push
mov
int
and
arpl
loop
sti
add
pusha
adc
pop
push
pop
addps
push
jmp
inc
fmull
test
dec
push
cmp
fildl
xchg
daa
rolb
pop
mov
ljmp
xor
jae
dec
sub
and
shll
loopne
fists
or
aam
lods
jnp
ljmp
adc
pop
scas
push
mov
loope
push
daa
mov
or
cmp
or
ljmp
push
jg
inc
jmp
lods
incb
mov
stos
call
sub
adc
push
fiaddl
fwait
test
aaa
mov
bound
sbb
js
dec
pushf
and
mov
jg
sub
xchg
ds
push
into
add
popa
shr
jnp
sub
pop
in
xor
movsb
rclb
lds
or
cmpsl
mov
pop
and
cli
jae
in
mov
movsl
aad
push
sbb
sbb
cld
pop
fisubrl
xchg
push
mov
out
lcall
stos
bnd
jb
cmp
popf
dec
inc
inc
testl
dec
in
int
sbb
in
ret
sbb
ficomps
mov
dec
pop
jo
testl
scas
stos
repz
ret
jle
mov
add
inc
test
pop
xor
das
test
test
mov
into
in
sti
movsl
cli
xchg
xchg
dec
out
lock
out
lods
mov
stos
inc
dec
and
and
sbb
pop
push
ret
or
mov
cmpsb
inc
loope
dec
dec
add
mov
icebp
test
gs
rorb
leave
dec
test
cwtl
push
sbb
mov
cmpsl
or
or
repz
mov
lock
xchg
mov
nop
xchg
push
lret
mov
das
push
test
and
scas
add
shlb
mov
push
sahf
pop
jmp
and
cltd
fidivs
outsl
jo
daa
pusha
add
out
sbb
sbb
cli
or
cmp
pop
jnp
pop
shlb
sbb
aaa
lds
inc
dec
mov
roll
pop
push
lds
fbld
jnp
mov
or
iret
scas
pop
outsl
xor
mov
ljmp
push
outsb
jns
mov
stc
movsl
xlat
or
mov
mov
cli
dec
xlat
adc
int
aaa
pop
jo
in
test
jmp
test
xchg
popf
mov
push
inc
test
inc
pop
mov
mov
add
cltd
out
js
movsb
xor
dec
je
lds
xchg
imul
inc
push
scas
mov
cmp
inc
pop
repz
mov
ja
or
push
mov
or
test
gs
or
fldenv
icebp
dec
push
mov
icebp
push
cmc
pop
xchg
mov
lods
lcall
ss
cmp
outsl
or
xor
push
adc
jno
xor
sbb
jb
jne
mov
and
ss
sub
cmpsb
mov
lock
lahf
inc
or
mov
inc
add
add
push
mov
bound
mov
inc
mov
pop
jge
pop
xchg
cmp
pop
lods
sbb
push
pop
fsubr
jge
cmp
cmpsb
xor
fldl
subl
push
in
out
mov
dec
or
out
push
pop
ja
daa
mov
push
test
ljmp
mov
cmp
jge
xorl
mov
pop
ret
and
rol
out
xchg
mov
adc
jmp
ficomps
in
mov
inc
inc
jnp
xchg
push
sbb
mov
push
fdivl
push
xor
jl
fisttpl
add
jno
fiaddl
ljmp
add
sbb
xchg
push
inc
xor
ret
xchg
jbe
das
mov
outsl
mul
push
add
and
sub
mov
push
mov
das
hlt
jl
adc
or
bound
jp
pushf
push
mov
inc
mov
lcall
pop
push
or
jl
mov
adc
inc
cwtl
lods
das
insl
inc
dec
or
lods
fisubl
push
or
fiaddl
jecxz
and
les
or
push
sub
insl
inc
mov
in
hlt
je
jmp
psrlw
mov
cmpb
xor
stc
pop
fmull
ret
cli
mov
mov
xchg
pusha
fstpl
int3
jmp
mov
cltd
pop
xchg
cmp
fldcw
js
cld
scas
das
cld
les
pop
pop
mov
pop
pop
call
pushf
jmp
cmp
ja
fcmovnb
testb
das
lcall
addr16
fistps
mov
pushf
mov
mov
jno
sti
test
test
xor
push
or
or
int
cld
fildl
mov
subb
jbe
mov
pop
jo
outsb
insb
ds
test
push
add
outsb
jns
and
sub
icebp
add
add
dec
adc
mov
add
inc
mov
pop
sbb
push
rclb
icebp
jns
cld
mov
inc
loopne
in
dec
sub
das
mov
lock
sbb
leave
mov
ljmp
mov
mov
aas
add
adc
popa
push
pop
clc
sbb
sub
pop
jg
pop
cmp
cmp
shlb
sahf
call
popl
xor
pop
push
icebp
fwait
mov
es
cmpb
xor
pop
imul
or
rolb
cmp
or
sbb
mov
loopne
lcall
test
cmp
shl
push
dec
ja
leave
orb
jl
lcall
adc
xchg
leave
mov
and
mov
pop
push
cmp
and
or
int
jo
add
lods
dec
adc
std
push
loopne
popa
orps
fsubrl
lods
test
pop
cmp
lea
mov
mov
mov
dec
maskmovq
idivl
add
int
lret
scas
mov
xchg
popa
test
mov
cmpb
push
sbb
mov
fistps
ss
repz
and
lock
xchg
mov
xlat
cli
stos
sub
lret
adc
dec
iret
xchg
mov
out
fiaddl
push
in
popf
sbb
stos
jecxz
pop
test
call
aaa
add
sbb
and
ja
scas
fs
outsl
in
movsl
sbb
jecxz
sti
dec
aas
mov
jbe
pop
inc
out
cmpsb
outsl
inc
jle
lret
movl
popa
add
inc
jns
add
fcoml
jl
insl
adc
nop
mov
jns
mov
adc
inc
aad
lea
xor
push
repnz
daa
stc
add
inc
sti
aas
ret
pop
rol
cmp
or
ja
jmp
je
sub
inc
les
push
negl
mov
gs
pop
in
fcoms
mov
inc
cld
jge
xor
ss
fbstp
mov
jns
pop
popa
nop
wbinvd
lea
test
nop
fidivl
push
push
jo
sbb
inc
clc
add
mov
popf
mov
lahf
jns
inc
cld
pop
in
int3
cmp
inc
mov
mov
jno
loope
scas
stos
mov
sbb
mov
call
adc
mov
call
call
mov
xchg
lahf
or
lods
mov
cmp
xchg
mov
push
call
js
push
sub
out
push
lock
sub
push
cmp
xchg
imul
add
jbe
ret
mov
movsb
add
clc
push
test
mov
lret
les
mov
rorl
aam
aam
mov
xchg
mov
inc
and
sbb
into
shll
and
cli
push
jle
ja
fsubp
pop
pop
add
inc
ljmp
test
sbb
sbb
in
and
loop
mov
and
jne
subb
push
sub
ret
mov
loop
adc
lea
sbb
pop
nop
inc
sbb
dec
hlt
xchg
arpl
or
lret
outsl
fsts
or
imul
je
or
fidivrl
jne
jns
aas
and
push
add
call
jge
dec
lods
cmpb
aaa
xor
push
fdivr
dec
fistps
and
fstps
or
out
add
dec
addr16
jg
clc
xchg
fbld
rorl
or
dec
cmp
add
dec
dec
cmp
out
int
add
repz
call
ffreep
aad
shll
jae
mov
or
add
sbb
ja
inc
stc
in
mov
shl
or
dec
add
out
mov
aas
inc
xorl
outsb
stos
pop
xchg
dec
in
dec
add
and
adc
rcrb
fwait
dec
adc
mov
hlt
rcrb
mov
sti
ja
outsl
imul
je
movsb
insb
xlat
std
cmp
jno
sarl
fdivs
push
add
lods
add
dec
cmp
nop
into
ret
fbstp
pushf
sbb
inc
sbb
std
jg
xchg
shll
xchg
jmp
mov
sub
or
inc
inc
fldl
ret
popf
sbb
leave
jae
fnstcw
adc
dec
loope
pop
jbe
pop
pop
pop
pop
es
or
lret
aam
fcomi
xor
insl
mov
dec
ds
faddl
xor
cli
lea
inc
stos
xor
int
test
push
mov
mov
fadds
fidivl
mov
cwtl
fadd
xor
loopne
enter
aaa
push
pop
mov
fidivs
xlat
in
ret
add
fistl
add
mov
std
mov
test
fists
call
push
iret
jo
dec
mov
mov
jg
and
je
rcrb
push
add
movsb
mov
icebp
xor
xchg
jbe
inc
pop
cwtl
and
inc
jp
lods
xchg
inc
pop
insl
mov
enter
adc
and
add
cmp
xor
outsb
aam
std
jmp
add
dec
sub
mov
pushl
xorl
pop
cld
dec
dec
pop
insb
mov
dec
sub
shr
xchg
dec
add
out
addr16
dec
push
lcall
jecxz
nop
sbb
cmc
adc
mov
xchg
ljmp
rcl
adc
stc
ret
xor
and
or
shrb
filds
mov
push
insl
lahf
mov
adc
mov
cmp
or
push
mov
sub
pusha
sub
pop
leave
xor
add
mov
cwtl
shr
loop
adc
idiv
push
in
dec
jecxz
insb
fmull
and
sbb
stos
add
inc
push
sub
cli
xchg
fimull
jl
fistpll
jp
call
jo
push
mov
jb
aad
das
insb
pop
mov
rcl
add
dec
jle
xchg
neg
mov
mov
pop
je
sti
scas
loop
and
imul
add
mov
cmp
mov
cwtl
icebp
pop
outsl
pop
lcall
dec
leave
out
js
sti
cmpsl
jg
xchg
adc
movsb
push
push
lods
push
push
and
loop
inc
jno
imul
pop
aas
mov
movsl
fmull
add
add
in
push
mov
mov
daa
rorl
gs
pop
ss
aam
mov
sub
ret
sbb
in
int3
inc
push
mov
adc
xchg
mov
arpl
jl
loopne
fucomi
dec
mov
mov
aas
stos
das
pop
pop
sbb
mov
xchg
or
std
mov
mov
pusha
adc
sub
sarl
jg
or
enter
andl
inc
mov
enter
mov
sbb
jl
add
imul
mov
and
or
bound
fisttpll
loopne
xor
adc
daa
adc
dec
icebp
or
sbb
test
cmc
mov
adc
lret
jns
sarb
mov
enter
aas
pushf
mov
push
pop
lret
movsl
popa
insl
mov
sbb
adc
adc
outsl
mov
out
movzbl
adc
cmpsl
fcmovne
lods
jnp
je
lods
jl
fs
pop
and
or
fisttpll
mov
daa
push
mov
clc
mov
xlat
repz
inc
mov
jae
stc
loop
mov
cmc
xlat
rclb
scas
mov
movsl
dec
sub
push
jecxz
sahf
jg
fdivl
in
mov
repnz
or
rclb
outsl
outsl
and
add
stos
loopne
inc
push
pop
mov
sbb
inc
add
es
push
out
pop
ja
stos
cmp
or
mov
mov
scas
or
lock
pop
mov
xor
add
imul
xchg
outsl
adc
cli
scas
pop
jne
add
pop
mov
in
aaa
jo
and
bound
mov
fdivrs
out
dec
mov
mov
out
inc
je
je
sbb
cmp
and
jg
push
repz
push
xchg
xor
mov
loope
and
adc
mov
stos
mov
adc
addb
push
pop
ficoml
bound
adcb
jmp
jl
push
or
fnstcw
nop
sub
hlt
pop
lcall
mov
pop
mov
mov
aam
lods
jns
out
push
inc
mov
loope
fcmovnu
pusha
xchg
call
push
ljmp
ficompl
arpl
inc
mov
mov
jo
ja
mov
jb
cli
pop
movsl
mov
sub
inc
sub
fcoms
mov
lret
add
clc
push
xlat
movsl
and
add
addb
lret
in
ja
mov
not
ret
sub
jle
dec
mov
sbb
aam
lret
call
test
push
sbbb
and
call
mov
stc
mov
mov
xchg
in
mov
inc
dec
pop
repnz
filds
and
add
xchg
jmp
and
pop
pop
stos
cld
scas
mov
das
sub
or
inc
fucom
sub
test
mov
adc
mov
aaa
pop
imul
xchg
sub
cmc
sub
sbbb
loop
push
sbb
sub
jg
sbb
push
jns
or
stc
test
int
fstps
popa
rcrb
adc
filds
cltd
inc
shrb
or
inc
push
ret
xchg
mov
jecxz
mov
loopne
mov
arpl
or
lcall
sbb
and
jmp
cli
das
clc
push
ret
andb
push
ficoms
cmpb
cmpl
outsl
mov
mov
movsl
inc
cmp
loop
push
add
xchg
adcb
pop
xchg
mov
push
push
or
inc
adc
mov
jbe
faddl
ljmp
std
pop
popa
push
test
fsubrl
fcoms
push
sub
jmp
xor
sbb
neg
dec
jno
std
pop
insb
cmpsl
fucomip
add
dec
cmp
rcrb
sarb
sbb
sarb
lock
rorl
add
or
movsl
mov
repnz
imul
sti
pop
inc
or
out
in
rclb
mov
push
movsb
lahf
stos
in
pop
test
fs
jge
jb
int3
int3
out
fidivl
rcll
sub
shll
lret
adc
sar
test
sti
aad
das
mov
outsl
mov
je
ds
rcrl
shrb
arpl
data16
fdivr
mov
cs
pop
or
or
mov
gs
js
aam
daa
fstp
pop
mov
add
cmp
adc
mov
insb
or
dec
and
and
popa
dec
xchg
fcmovnb
or
cwtl
subb
jbe
pop
lods
or
jae
js
fdivrs
cli
es
xchg
std
sub
dec
push
sbb
and
push
ja
rorl
sbb
outsl
adc
lahf
xchg
mov
xor
outsb
and
sbb
mov
adc
mov
leave
rol
push
and
cvtps2pi
aas
rorb
adc
push
sarl
neg
sbb
and
cld
icebp
cmp
pop
push
and
adc
lock
ljmp
lods
loopne
lock
notb
sbb
xlat
std
dec
sahf
mov
dec
xchg
dec
xchg
xorl
inc
or
push
and
inc
loope
push
sbbb
jg
or
aad
sbbl
mov
fsubrs
rorl
inc
mov
add
call
enter
pop
cmc
cli
adc
push
push
sub
push
ljmp
xor
dec
adc
sti
or
fistpl
dec
mov
in
stos
insb
sbb
xchg
mov
add
sarl
xchg
pop
arpl
popf
jp
sbb
xor
mov
rorb
dec
fwait
imul
cmc
movsl
mov
xor
lahf
pop
aaa
sub
sub
mov
adc
cld
push
mov
xor
or
and
mov
xchg
jmp
push
xchg
mov
cmpsl
sub
jbe
test
push
sahf
add
data16
fnsave
xchg
popa
aad
pop
add
insb
in
jo
sub
push
imul
and
fistl
jmp
aaa
sbb
clc
inc
pop
imul
insl
inc
filds
je
cmp
lds
ds
leave
bound
jecxz
xor
push
andl
stos
icebp
mov
in
lods
push
push
push
aad
outsb
push
andl
rorb
testl
adc
and
enter
mov
scas
mov
scas
jns
jb
pop
jne
sbb
pop
xor
in
ret
xorb
arpl
test
adc
inc
xchg
ja
int
cmpsb
aam
addl
pusha
loopne
or
mov
push
or
push
les
clc
or
shl
cs
and
push
xor
push
call
test
aas
in
mov
lock
or
xor
push
mov
inc
dec
mov
mov
sbb
xor
scas
sbb
or
loopne
gs
xchg
icebp
cmpsb
add
arpl
ret
test
mov
or
add
inc
mov
push
test
xchg
adc
mov
and
sub
addr16
push
aad
jae
pop
mov
out
pushf
pop
push
movsb
add
xchg
xor
inc
cmpsb
mov
push
mov
dec
aas
out
popa
cmp
add
lds
xor
inc
xchg
movsl
arpl
add
cmpsb
jo
gs
aaa
imull
ds
push
lock
jae
ja
and
inc
mov
mov
mov
ret
outsl
call
sub
add
das
dec
lea
pop
call
and
test
pop
xor
into
mov
outsb
mov
add
sub
ret
mov
shll
mov
cmp
insl
outsb
insl
out
cmp
mov
jbe
mov
mov
aas
in
cmp
aad
ja
mov
cmp
add
adc
test
outsb
jnp
jp
sbb
pop
dec
cmp
pop
pop
rorl
and
stos
arpl
xorb
cmc
in
or
and
leave
mov
mov
mov
in
outsb
add
push
push
loop
mov
or
leave
shl
xchg
stos
mov
movsl
lds
aaa
push
push
rol
mov
pop
lcall
fsincos
jmp
gs
xor
mov
sbb
xor
pop
cmp
std
addb
and
inc
cmpsl
xor
mov
pop
add
pop
push
notl
insb
push
fdivl
and
ret
adc
jle
outsb
add
jecxz
stos
or
xchg
inc
adc
push
popf
daa
mov
xor
pop
jmp
fwait
mov
fildll
stc
adcl
mov
unpcklps
xchg
push
add
jg
jmp
notb
inc
push
decl
lds
out
or
cmp
mov
inc
jno
fwait
lcall
jl
icebp
inc
xor
insb
mov
push
jno
in
adc
lods
xor
pop
push
popaw
xor
scas
mov
pushl
fdivl
and
fs
mov
mov
mov
lcall
push
aas
out
ror
sub
mov
inc
test
mov
xchg
loopne
cmp
in
sub
push
or
fwait
in
mov
ret
and
lcall
lahf
pushf
insb
pop
cpuid
pop
int
add
and
lahf
mov
push
adc
sbb
popf
mov
or
icebp
popa
mov
add
jno
lock
data16
inc
sbb
add
lods
sub
and
ud0
lods
sbb
xlat
cmpsb
mov
cld
xor
mov
inc
pop
outsl
add
cld
mov
lret
fildl
js
inc
fisubs
mov
push
aaa
cmc
outsl
js
lret
cs
fcoms
jmp
jne
push
sarl
mov
pop
sbb
dec
pop
test
and
dec
xor
sbb
adc
inc
inc
adc
mov
cmc
sbb
mov
movsl
ret
fisubl
jmp
and
fs
outsb
inc
lock
loopne
mov
adc
ja
adc
ss
pop
mov
roll
inc
jle
adc
xlat
or
icebp
pop
and
sub
clc
pop
ret
insl
jmp
adc
adc
jae
iret
jle
fisubrs
es
lcall
jge
inc
out
lock
cmp
and
stos
inc
xor
loopne
jle
pop
orl
rorb
andb
dec
sub
dec
repnz
sub
mov
add
mov
mov
bound
outsb
sbb
inc
orb
fwait
clc
mov
push
adc
xchg
mov
pushf
xor
mov
fdivrl
inc
fbstp
dec
je
stos
aaa
cltd
mov
mov
fucomip
push
test
and
in
cmp
fcmovnbe
das
incl
or
mov
add
xor
and
mov
and
ret
fwait
movsl
mov
mov
loope
inc
and
add
lahf
xchg
push
ffreep
sbb
repz
xchg
fcmovnb
or
sub
cltd
sbb
inc
and
sub
je
outsl
xor
fstpl
aam
aaa
dec
lcall
lret
add
push
shl
pop
push
decl
xor
xor
mov
xchg
scas
add
stos
pop
and
push
aad
outsb
cmp
and
testb
sahf
push
test
cld
ret
pop
mov
or
sbb
xchg
daa
outsl
push
mov
jle
stos
mov
and
addr16
pop
and
popa
pop
js
xchg
push
mov
sub
int
xor
lret
rcll
mov
lock
lret
pop
int
sub
sub
dec
jo
xor
dec
dec
jecxz
sub
out
insb
cwtl
mov
shrb
call
filds
jns
pop
mov
push
mov
bnd
loop
scas
pusha
jns
je
inc
std
mov
mov
fwait
mov
adc
incl
outsl
ljmp
movsl
popa
rcrl
pop
dec
and
sbb
enter
enter
adc
jnp
or
movsl
scas
xchg
test
pop
test
stos
icebp
cwtl
xorl
mov
rcrl
stos
push
push
and
pop
test
shlb
or
pop
adc
sbb
push
fidivrs
mov
sarb
lock
add
sub
xchg
sbb
repnz
in
push
mov
sbb
inc
ja
xor
sbb
ret
and
daa
arpl
les
hlt
outsl
mov
test
mov
icebp
ret
iret
xchg
repz
push
mov
fsubl
jnp
or
bound
movsb
pop
test
aam
mov
call
add
dec
mov
mov
leave
cmp
orb
ss
nop
cltd
call
add
lock
clc
mov
and
stos
push
test
fsubrl
cli
pop
loopne
xor
ret
loopne
adc
pop
pop
push
push
inc
fidivrl
ud1
pop
int
cmpsb
dec
inc
aam
test
out
push
push
scas
xor
sub
mov
jbe
fildll
mov
enter
pushf
stc
cmp
icebp
add
xor
sub
ror
sub
das
inc
or
cmp
mov
xchg
jmp
cmp
shrl
popf
in
xlat
notl
mov
xchg
pop
lret
movl
push
inc
aam
pusha
xor
add
lea
and
xchg
xchg
out
pop
pop
leave
lea
mov
andb
or
movsb
ficompl
or
ss
or
cld
mov
pop
mov
ja
and
mov
cmp
loopne
ffreep
mov
mov
ja
jne,pt
lret
pop
mov
mov
aas
lock
cltd
xchg
mov
aam
add
inc
sarb
lret
add
jns
xchg
push
or
cmc
outsl
jg
jg
mov
pusha
inc
cmp
pop
dec
jb
jbe
rcrb
fildll
aam
js
sti
mov
ljmp
cs
insl
mov
jp
mov
mov
aam
xorb
xor
push
fstl
mov
cli
rcr
pop
insl
rep
mov
add
dec
adc
or
mov
das
inc
mov
and
rcrl
outsl
cli
push
test
nop
xchg
cli
mov
into
mov
adc
fists
ret
test
lea
inc
mov
push
test
mov
loope
test
push
loop
inc
xchg
push
jg
ficomps
std
das
leave
cmp
arpl
xchg
daa
mov
pop
imul
jmp
jge
inc
outsl
fnsave
xchg
push
rorb
inc
push
lds
cld
sub
lock
js
and
fildl
xchg
xchg
ret
pop
in
adc
mov
add
xchg
or
or
jo
inc
dec
jg
pushf
xchg
mov
pop
and
jae
shlb
test
jg
and
jecxz
enter
inc
insl
dec
push
sbb
les
cld
push
into
into
lahf
adc
adc
cmc
lods
hlt
jmp
sub
in
std
or
inc
mov
jle
and
dec
mov
jnp
sbb
or
and
in
test
or
mov
push
and
mov
aaa
call
call
andb
mov
cmp
es
mov
sti
call
xor
insb
jmp
test
sub
push
mov
or
ficoms
test
mov
gs
call
xor
pop
ljmp
lret
rol
xor
push
inc
add
mov
loopne
das
mov
in
sbb
cmp
imul
mov
pop
pop
push
lahf
mov
ja
lods
push
enter
test
sub
mov
mov
jb
push
mov
int3
in
sbb
inc
pushf
mov
insl
cmpb
mov
das
jmp
xor
push
and
sahf
sbb
dec
mov
push
push
movsl
js
das
int
pop
das
shlb
sub
mov
mov
xchg
adc
push
mov
pop
mov
add
adcl
mov
stos
dec
mov
fdivr
mov
or
inc
pop
addb
stos
adc
repz
mov
mov
sar
std
leave
or
scas
scas
fisttpll
fldt
call
daa
sti
int
inc
mov
add
and
mov
mov
or
xor
jo
loope
and
jecxz
add
xor
std
aaa
dec
mov
popf
and
xor
jmp
add
nop
fisubrs
rclb
pop
xchg
mov
jle
aas
mov
js
lods
inc
rcrb
or
pop
jp
push
xchg
or
std
or
pop
call
pop
fdiv
stos
sub
pusha
inc
popf
sbb
cmp
cld
add
pusha
sbb
jae
repnz
xchg
loop
inc
cmp
sbb
test
pop
std
sar
xor
cmp
enter
lods
lods
outsl
adc
cmpsb
mov
jno
or
and
call
or
fs
ficoml
in
fildll
cmp
mov
fdivp
jmp
outsl
cmp
push
jne
aam
out
shr
inc
std
pop
cwtl
dec
sbb
add
inc
mov
addr16
mov
loopne
or
xchg
jae
push
test
in
cli
sbb
test
push
pop
nop
rol
out
loop
mull
mov
jb
sti
sbb
test
dec
mov
sub
and
andl
xchg
xor
cs
pop
mov
inc
in
jnp
lea
push
mov
fisttpl
js
out
and
incb
mov
cmp
ljmp
in
push
inc
ds
mov
shlb
rclb
add
stos
andb
mov
fistpll
scas
inc
push
cld
popf
push
adc
sub
jg
sbb
popf
push
nop
xorl
and
mov
add
jge
icebp
xor
outsl
adc
sbb
cmpb
hlt
fistps
and
mov
aad
mov
movsb
cwtl
inc
and
jg
sbb
aam
insl
in
les
es
and
xchg
adc
push
loope
das
lock
adc
in
cmp
inc
xor
into
lahf
es
sti
and
fidivs
orl
fimuls
stos
sub
and
in
or
jmp
cmp
idivb
mov
ss
adc
sarb
lcall
dec
mov
stc
mov
mov
int
sub
inc
jo
xchg
pop
and
pop
push
mul
aaa
pushf
pop
and
jnp
out
fs
ss
pop
inc
aaa
enter
sbb
mov
stos
mov
or
jo
xlat
mov
ffreep
cmp
add
pop
push
scas
andl
das
lds
rclb
aad
sbbb
adc
in
dec
or
in
popa
inc
push
pop
jne
or
out
cld
mov
adc
clc
ss
repnz
add
sbb
pop
das
ret
mov
jecxz
ret
jle
mov
push
xchg
imul
or
mov
stos
push
outsb
aaa
int3
hlt
sub
loopne
sbb
imul
test
ljmp
ss
gs
outsb
inc
jl
outsl
jge
mov
and
or
mov
mov
nop
add
mov
sbb
jne
and
je
out
dec
stos
fistpll
loopne
add
nop
adc
pop
sub
xor
dec
jno
ret
lea
xor
cmpsb
dec
xorl
nop
push
mov
mov
xor
mov
pop
fimuls
pop
sahf
cwtl
jbe
pusha
add
jne
jle
subb
in
mov
cli
mulb
rclb
repnz
and
in
out
dec
cwtl
cmp
fbstp
fdivrl
inc
dec
mov
mov
xchg
lret
lcall
push
push
and
data16
jp
testb
inc
push
fmuls
and
sar
add
call
movsl
inc
or
mull
jmp
mov
psubb
dec
mov
les
cmpsl
repnz
push
pushf
leave
sbb
sbb
mov
out
push
adc
cmc
test
js,pn
mov
cmp
out
mov
xor
dec
mov
subb
ret
inc
mov
xchg
fstl
xlat
pop
xor
cmp
xorb
shlb
add
jg
loopne
in
push
mov
and
push
mov
lcall
movsl
loopne
and
insl
lahf
mov
mov
and
jns
les
ja
mov
test
ret
test
add
mov
xchg
fs
sbb
ficoml
fcomp
inc
sahf
dec
cmp
leave
adc
popf
add
test
ljmp
rcl
sub
cs
mov
xor
add
in
xor
lret
sbb
mov
xor
jbe
mov
ljmp
dec
lahf
and
adc
mov
outsb
or
sbb
or
cli
xchg
push
dec
xchg
or
test
push
or
push
aaa
add
test
call
pop
jo
jg
adc
add
fbstp
repnz
xchg
repz
cmc
sub
mov
aam
push
ret
repnz
adc
push
mov
je
mov
into
stc
inc
bound
stos
jmp
outsb
inc
fbld
jecxz
imul
dec
add
shll
or
xchg
mov
jns
mov
add
hlt
and
sarl
push
out
shl
rorb
in
ljmp
mov
xchg
js
lds
mov
or
and
jg
fwait
clc
push
outsb
fiadds
je
or
stos
mov
daa
xorb
ficomps
cmp
cmpsb
cmp
ljmp
aaa
inc
mov
je
push
into
mov
cmpb
and
decb
adc
sbb
aaa
push
adc
add
inc
dec
cld
mov
dec
sbbl
xor
sbb
sub
or
cmc
aaa
in
nop
xchg
xor
fisubrs
repz
add
and
mov
insl
mov
popf
lea
mov
andl
sub
mov
fnstsw
push
in
dec
xor
sti
or
sti
adc
add
or
dec
push
add
mov
sti
sub
mov
inc
pop
sbb
ss
mov
imul
subb
inc
xor
rcr
loopne
outsl
push
data16
fstl
icebp
push
rcrb
mov
jle
mov
nop
test
sub
stos
add
jp
or
push
loope
stc
xor
out
mov
loop
or
or
xchg
jp
out
jno
inc
outsb
sbb
leave
sbb
jnp
inc
das
dec
adc
lock
gs
mov
mov
dec
fisubrs
push
jne
testb
mov
aam
stos
pop
push
pop
push
pushw
xlat
loope
std
in
sbb
sbb
bound
jo
xor
cmp
mov
iret
xlat
inc
mov
das
mov
xlat
dec
jmp
ja
add
std
jb
xor
lods
stos
push
loope
add
sbb
mov
add
mov
jbe
mov
mov
add
pop
xchg
aam
xor
addr16
movsl
cli
test
push
push
ss
fisubrl
aad
mov
test
gs
sbb
xlat
pop
pop
and
out
sub
push
push
xorb
xor
arpl
cltd
scas
push
lea
das
lods
or
mov
movsb
loop,pn
in
rorl
out
jp
cmpl
aaa
jge
sbb
std
lea
mov
dec
cs
hlt
mov
mov
fidivs
pop
jle
aas
adc
push
cld
push
rdpmc
cltd
sbb
adc
es
nop
ret
jnp
and
pop
mov
pop
xor
daa
sbb
cwtl
cli
loope
jbe
and
xchg
sbb
mov
or
jnp
inc
mov
stos
mov
and
mov
push
insl
daa
mov
test
cld
push
les
cmc
addb
push
fs
loope
ja
into
lods
inc
dec
into
mov
stos
lods
mov
or
mov
je
test
sbb
lds
shlb
lcall
loop
sub
enter
mov
adc
xchg
push
and
ljmp
push
adc
cld
inc
pushf
inc
push
jmp
jbe
mov
pop
mov
sahf
jl
inc
pop
lea
add
xchg
pop
movsl
leave
fcoms
in
xor
inc
insl
mov
dec
cli
mov
jmp
fisttpl
aaa
sahf
add
jg
ret
cltd
xor
adc
test
lock
loopne
adc
fadd
pop
in
jb
jne
imul
mov
sub
xlat
add
sub
adc
fs
mov
push
mov
or
test
or
cltd
add
sbb
subb
psubusb
imulb
sub
in
sub
sub
shr
loopne
jl
repnz
fadd
pop
mov
push
mov
dec
xor
inc
out
stos
inc
fucomip
gs
sarb
test
pop
movsb
leave
pop
dec
notl
add
add
incb
jnp
movsl
mov
mov
xor
andb
cli
xchg
scas
push
add
outsb
mov
push
push
cli
xchg
imul
add
xorb
fildll
popa
push
or
fs
das
je
dec
mov
imul
shrb
mov
mov
jbe
cmp
call
sub
test
push
loope
jg
imul
adc
mov
ret
insb
cmp
aad
stos
mov
inc
add
flds
cmc
jne
lcall
orb
lea
clc
adc
filds
cmc
pusha
cmpsb
jmp
pop
std
jge
adc
push
cwtl
pop
xor
pop
xchg
jbe
push
imul
push
fisttpll
clc
adc
sbb
enter
add
and
add
aaa
xchg
xchg
test
test
inc
ret
iret
mov
jbe
cld
or
aas
xorb
loope
jb
jne
pop
mov
pop
add
arpl
pushf
mov
fiadds
cmp
xchg
mov
inc
loopne
inc
das
rorb
or
mov
cs
push
sbb
stc
push
xchg
or
shrl
std
mov
or
sahf
xor
inc
ss
gs
push
test
out
jo
xor
out
mov
mov
cmp
xlat
jl
cmpsl
mov
and
inc
sbb
xchg
jmp
fstpl
pusha
aam
push
cmpsl
lods
xor
loope
scas
add
xlat
push
mov
mov
pop
inc
shr
fcmovbe
ficoml
dec
jle
aam
ljmp
pop
adc
sbbb
jle
mov
lock
mov
outsb
mov
fistpll
jl
adc
or
cwtl
or
ds
sbb
jg
adc
dec
js
pop
fisubs
orb
jo
aaa
cmp
sarb
testl
push
cltd
mov
mov
ret
or
jg
sub
push
mov
cld
arpl
adc
push
les
ret
jae
pop
pop
lret
xchg
inc
xchg
out
jno
rolb
insb
mov
nop
shrb
mov
sbb
jge
dec
lret
pop
lret
clc
or
mov
daa
jge
arpl
push
cld
dec
add
cmp
popf
out
lret
rcr
mov
push
dec
mov
pop
lock
lea
idivl
cltd
mov
inc
push
jg
outsl
mov
fldt
push
jge
daa
cmp
outsl
addb
jno
adc
adc
mov
push
or
pusha
andb
sub
push
repz
fsts
dec
ficoms
stos
inc
inc
jge
mov
cwtl
adc
adc
test
mov
inc
xor
in
test
addr16
push
addl
mov
scas
xchg
fs
mov
inc
inc
loop
adc
clc
in
sub
xor
push
jo
lods
mov
jbe
xor
aas
sub
out
jmp
add
lods
xbegin
outsl
fdivrl
nop
mov
jae
js
cltd
mov
aam
into
xchg
jecxz
add
decl
andb
adc
jecxz
add
mov
into
test
sub
push
or
lods
fdivs
dec
lods
lds
pop
inc
call
and
mov
or
add
sbb
add
ret
test
or
aas
adcb
sub
icebp
xchg
cmp
mov
pop
into
push
divb
push
clc
mov
jg
pop
pushf
fstl
cmp
sarl
fistpll
mov
lahf
push
jmp
inc
mov
inc
ljmp
sub
testb
lea
stos
pop
inc
lret
loope
js
loopne
or
cmp
sbb
xchg
xchg
iret
jmp
insb
aad
rcrl
stos
push
je
mov
xor
inc
add
jg
aaa
cmp
pop
call
xor
add
push
sti
scas
mov
nop
push
jnp
leave
pusha
xor
mov
add
push
daa
inc
rol
mov
jl
sbbb
imul
pop
fwait
xchg
xor
sbb
lret
das
je
inc
xchg
xchg
movhps
and
out
push
or
das
sbb
rcll
pop
jg
xor
jno
jb
xchg
sbb
adc
push
dec
ret
sub
rcr
cli
fcoms
sahf
sbbb
mov
loop
in
rcr
fwait
in
and
inc
daa
xor
fmuls
add
jae
push
pusha
adc
mov
push
pop
outsb
xor
aas
cltd
mov
push
xchg
lret
dec
faddl
mov
xchg
js
pshufw
push
call
loop
sbb
mov
insl
shrl
sbb
xor
jmp
enter
or
mov
nop
inc
xchg
test
lahf
popf
or
das
cmp
cli
and
pop
pop
cmp
outsl
ljmp
inc
jb
mov
mov
andb
sub
xchg
push
incb
jb
mov
mov
mov
push
int
scas
orl
pop
push
aam
dec
inc
lahf
mov
add
leave
sahf
sub
aaa
xchg
ret
mov
stos
daa
bound
pushf
xor
pop
paddb
mov
insb
mov
adc
add
outsb
es
adc
mov
and
jg
ds
pop
aas
mov
and
and
pop
push
lods
test
cltd
mov
or
cmp
stc
pop
jge
mov
fwait
aad
xor
mov
outsl
insb
in
aaa
adc
push
test
pushl
shlb
fldl
jge
push
adc
pop
mov
or
or
add
fs
jle
xchg
xor
aaa
mov
sbb
mov
or
cmpsb
adc
xchg
pop
dec
movsl
xchg
cmp
push
cwtl
jnp
push
jno
shr
mov
xor
dec
in
dec
cmp
xor
or
insb
mov
sbb
lea
mov
aam
movsl
inc
dec
inc
push
jb
in
aaa
adc
dec
dec
out
cmpsb
pop
inc
psubsb
inc
pop
mov
mov
shlb
push
sub
incl
cmc
mov
mov
sbb
rorb
cmp
fst
loop
adc
hlt
adc
sarb
pop
and
sbb
sub
sub
mov
mov
fisubrs
data16
sbb
push
pop
sbb
aaa
jecxz,pt
popl
hlt
sbb
pop
insb
inc
orl
mov
add
xchg
mov
lret
xor
das
push
lock
mov
xchg
aam
or
and
adc
jge
orb
cmp
pop
mov
push
cmp
aam
fidivs
les
dec
lods
or
lock
mov
or
pop
sbb
test
xor
mov
aaa
cs
pop
xchg
mov
lds
mov
pushf
adc
push
in
add
outsl
dec
pusha
arpl
cmc
and
fisubs
popa
push
cltd
sub
mov
or
push
sbb
lea
out
pop
jp
outsl
mov
cmp
jae
out
mov
in
ds
and
xchg
in
adc
aad
fimuls
stc
mov
add
dec
cltd
inc
loope
sbb
lret
inc
ja
bound
fsub
pop
clc
jmp
fidivs
pop
mov
adc
add
pop
pop
mov
roll
int3
xor
and
std
push
aas
adc
movb
jl
setns
jns
mov
pop
fnstsw
inc
lea
incb
add
fnsave
aam
push
cmp
test
sbb
adc
dec
pop
call
or
std
add
cli
in
xor
or
mov
xchg
bound
lcall
mov
test
or
ss
outsl
push
decl
or
cld
leave
outsl
aam
push
and
popf
and
loopne
sbb
testl
jb
std
dec
icebp
pop
jo
stc
inc
push
xchg
dec
jbe
jecxz
mov
mov
mov
fstpl
test
dec
in
int3
adc
mov
repnz
mov
jo
shr
int3
bound
test
add
jmp
cmp
push
stos
mov
mov
fistl
ja
dec
pop
mov
cmpsl
push
mov
inc
aaa
cld
jmp
and
or
cmpsb
notl
int3
scas
lock
pop
mov
adc
push
add
mov
pop
sbb
xor
xchg
or
inc
xchg
je
aaa
lahf
fs
ret
push
popa
xchg
pop
add
add
push
push
paddq
das
push
dec
adc
sub
add
adc
xor
lods
mov
fstpl
mov
add
in
pop
cmp
sub
mov
rcrb
outsl
clc
sbb
lcall
add
mov
lock
or
cmp
pop
ljmp
push
xchg
imul
insl
test
cld
lret
out
xchg
cs
mov
pop
mov
test
adc
push
inc
fistpl
jo
stos
sub
das
aad
or
movsb
jo
loopne
inc
pop
out
mov
or
sub
jecxz
bound
cltd
and
jecxz
aaa
mov
iret
sub
pop
add
fs
cmp
xchg
outsb
pushf
and
xchg
mov
enter
mov
ret
dec
mov
ud2
push
lret
and
push
or
mov
xchg
in
rcrl
add
sarl
or
jp
imul
jge
in
lods
or
movsl
cmpsb
outsb
mov
int3
sarl
and
pop
mov
pop
insl
aas
add
outsl
dec
or
test
xchg
xor
jg
cli
das
push
lret
data16
sbb
push
arpl
je
fmuls
inc
ja
inc
sbb
mov
out
loopne
inc
imul
scas
cmp
mov
lods
cli
jbe
test
inc
mov
cli
mov
cmp
sti
add
dec
xchg
in
aad
test
add
sub
mov
sub
xchg
stos
lea
mov
adc
insb
imul
in
cmpsb
fistps
pusha
mov
add
rcr
mov
add
and
xchg
push
jp
lahf
sahf
sub
mov
leave
and
out
and
fildl
fcoml
push
and
scas
test
xlat
das
roll
sub
sub
in
cltd
dec
mov
mov
cmp
pop
or
xchg
addb
sbb
pusha
pop
or
mov
xor
pop
sbb
into
mov
jge
mov
jo
adc
sub
jbe
cli
mov
movsl
cmpsb
cltd
xor
retw
mov
pop
popa
cs
stos
dec
sbb
sub
dec
cmp
vcvtps2dq
das
cld
pusha
add
mov
jns
aam
sbb
fidivl
icebp
and
push
sahf
mov
pop
mov
add
in
neg
hlt
pop
mov
jg
cmp
loopne
loope
add
or
pusha
or
inc
std
xchg
pop
ret
ja
cld
repnz
push
sbb
inc
out
and
ret
mov
imul
inc
lret
enter
hlt
mov
std
cmp
js
andl
stc
adcb
cli
lods
sbb
inc
mov
xor
ret
fwait
orl
test
mov
mov
movsb
movsb
pop
into
test
pop
jne
fidivrl
aam
nop
cltd
jo
or
push
sub
daa
shlb
xchg
je
push
add
jnp
cmp
xchg
ficoms
sbbl
ret
jne
lock
mov
sub
mov
das
cli
test
dec
dec
lods
loope
loopne
inc
mov
es
or
dec
stos
subl
jns
aaa
ljmp
sbb
test
push
jg
fmuls
push
add
leave
adc
inc
clc
pop
fistpll
cld
aam
jnp
cwtl
jg
popa
pop
cltd
rep
add
inc
xlat
in
jno
and
test
cli
pop
mov
cmp
mov
xchg
dec
aam
mov
lea
inc
mov
out
sub
or
imul
les
fcmovnu
ja
lods
pushf
cmp
sbb
cld
mov
jle
xor
insl
adc
jno
rcrb
mov
test
mov
xor
popa
add
popa
clc
movsl
adc
push
lcall
fnstsw
ret
insb
sbb
sbb
sarb
insb
lods
adc
bound
out
fcmovb
pop
and
mov
cmp
mov
mov
aad
lea
and
imul
push
icebp
dec
ds
mov
push
xor
and
fdivrl
mov
add
rorl
outsl
sub
repz
inc
mov
imul
or
popa
cmp
aaa
subb
sub
mov
inc
mov
inc
test
outsl
call
pop
or
xor
jecxz
inc
sbb
cli
test
loopne
or
cltd
or
nop
push
xorb
negl
iret
bound
arpl
mov
and
pop
in
mov
xor
ffreep
outsl
sbb
sub
xor
adc
orl
popl
jle
pushf
xchg
cmp
mov
jl
mov
jecxz
iret
dec
xchg
das
mov
push
adc
pop
mov
push
jg
loope
jne
sbb
add
xor
filds
and
inc
cmpl
fcmovne
or
dec
push
push
xchg
clc
out
jle
ror
or
ret
insl
inc
out
sub
cld
sbb
cmpsb
mov
pop
xor
cwtl
dec
cmp
pop
jae
inc
cltd
sahf
test
jge
rcr
in
shll
or
sbbl
mov
xchg
push
and
out
mov
scas
repz
mov
fdivp
into
test
shrl
leave
cmp
and
lods
js
add
add
mov
cmp
pop
cmp
aad
push
std
sub
pop
sub
jmp
mov
or
mov
loopne
jmp
xchg
lods
lods
aaa
cmc
insl
imul
adc
xchg
cs
test
jle
xchg
loope
sbb
fisttpl
pop
push
es
outsl
call
adc
jb
mov
sti
xchg
cmpsl
push
stc
jle
icebp
dec
xchg
mov
insb
add
sarb
aas
sub
clc
dec
ss
shrl
repz
loopne
and
in
in
movb
loopne
dec
in
inc
push
cld
jbe
fidivrl
xchg
push
mov
mov
mov
sti
sbb
repz
insl
or
sysexit
lahf
outsl
inc
and
enter
clc
inc
xorb
dec
aaa
es
cmp
jecxz
inc
out
hlt
cmp
outsl
add
add
loop
mov
adc
mov
stos
sbb
test
dec
mov
push
inc
inc
xor
outsl
sub
inc
loop
lea
push
and
aad
fmuls
test
dec
mov
stc
in
popf
aaa
or
fildll
aad
lods
divb
imul
cmp
sbbb
xor
push
fstpt
cmp
repnz
je
or
idiv
and
clc
mov
pop
add
pop
loop
push
sub
inc
call
sbb
stc
sbb
push
add
adcb
fiadds
ss
fistpll
mov
xchg
sub
orb
mov
fbld
sbbb
pop
adc
xor
push
fldcw
push
mov
sbb
movsl
add
pop
pop
loopne
out
xchg
cmp
arpl
inc
push
aaa
cmp
lods
arpl
dec
int3
scas
fs
icebp
jg
or
sbb
pusha
cmovl
jno
js
les
cli
add
cwtl
cmp
bound
mov
mov
aam
adc
cs
inc
filds
and
cltd
mov
hlt
inc
jmp
jp
mov
test
cmpsb
in
fwait
inc
add
aas
das
outsb
jp
icebp
lods
cmp
xor
push
filds
test
out
ret
add
clc
jnp
mov
push
mov
mov
cld
mov
dec
and
testb
test
or
rcrl
insb
cli
sub
pop
enter
in
pop
cld
jb
xchg
adcl
jp
sbbb
and
mov
int
les
imul
xor
fwait
shlb
sub
dec
cmc
mov
shll
ljmp
sbb
lcall
sti
out
clc
xchg
in
and
or
pushf
aaa
pushf
and
sub
jecxz
ret
das
xchg
cs
cwtl
insb
je
cmp
cmp
push
pop
jge
push
mov
mov
imul
aaa
fidivrl
adc
jecxz
lock
lea
insb
dec
das
adc
adc
inc
adcl
popf
clc
sbb
movsl
push
sbb
pusha
jae
inc
pop
push
fcomip
jp
repz
jo
xlat
add
jp
fsubr
loopne
pop
shll
inc
rcrb
cmp
test
out
inc
jg
std
es
sbb
ret
aam
cmpsb
dec
iret
ja
in
jb
dec
pop
fcomip
aaa
insl
daa
pop
inc
enter
cli
mov
stc
scas
dec
push
fistpll
das
shlb
pop
flds
and
lds
aas
mov
xchg
adc
add
lods
cmp
inc
add
push
add
inc
aas
inc
sti
lods
inc
sbb
movsl
xchg
in
lret
fisubs
into
adc
or
xorb
test
movsb
ret
jbe
adc
cmp
int
mov
mov
lret
repz
sbb
fimull
add
jg
cmp
imul
mov
ljmp
rorb
decb
mov
fadd
xchg
lcall
pop
pop
mov
mov
aas
fidivs
mov
or
mov
xchg
mov
aaa
push
in
adc
call
leave
push
stos
ret
inc
cwtl
mov
stos
inc
or
ss
cmpsl
jmp
int3
imul
sub
xchg
add
sbb
or
dec
shlb
jno
mov
aam
adc
adc
xor
xchg
aas
add
repnz
cltd
mov
and
data16
loop
cmp
dec
push
sbb
and
jg
fwait
lret
test
iret
insl
jmp
cmpsb
dec
out
call
or
adc
js
dec
push
in
icebp
pop
repz
aaa
lods
push
adc
jb
and
push
cmpb
push
and
test
add
mov
imul
push
mov
test
jb
and
mov
adc
ljmp
dec
mov
lret
loope
dec
jg
loop
xlat
inc
jg
scas
shrb
andl
jno
push
iret
push
jmp
jo
cld
movsb
in
mov
mov
imul
xchg
mov
arpl
and
xorb
outsl
xor
shlb
xor
gs
push
inc
in
mov
iret
js
xor
cltd
loop
cmp
pop
clc
mov
mov
shrb
mov
mov
xchg
or
outsl
jmp
cmp
sub
mov
imul
cmpsl
clc
neg
repnz
fiadds
xchg
xor
dec
addr16
xchg
stos
lea
and
repnz
jbe
in
mov
cs
scas
rcll
pop
jno
hlt
mov
push
rclb
mov
sub
daa
pop
test
jle
jle
pusha
imul
loopne
jne
rcrl
xchg
cs
sbb
out
shrb
add
aad
xchg
add
pop
fs
cwtl
clc
xchg
cwtl
xor
push
sbb
xor
decb
dec
fimull
add
sbb
ja
loopne
sbb
pop
enter
and
xor
jbe
or
xchg
jge
mov
test
dec
lods
leave
andl
push
aaa
pop
add
lds
arpl
push
sub
mov
push
not
aad
jmp
pop
xor
push
mov
xchg
repz
movsb
cmp
and
enter
add
insb
cmp
lods
mov
std
or
dec
pop
les
mov
popf
fdivl
mov
sbbl
push
mov
pop
xchg
fdivs
pop
lret
insl
and
rolb
ljmp
dec
mov
dec
into
inc
pop
loope
neg
dec
sbb
cltd
jl
mov
jmp
sarb
test
out
or
leave
ficoms
pop
ret
jnp
sbb
addl
fistps
popa
jbe
stos
dec
or
add
mov
pop
fadds
mov
fstpl
pop
adc
sbb
push
pusha
adc
jbe
and
and
aam
fists
fwait
xchg
fadd
fildll
jp
pop
jge
mov
push
xor
xchg
cs
ja
fdivrl
jmp
cmp
mov
rorb
int
fcomps
cltd
xor
mov
lds
mov
aad
fnstcw
fsubrs
outsb
outsb
mov
imul
ljmp
mov
pop
pushl
nop
push
mov
movl
insl
loop
test
dec
orl
aaa
shrl
cmp
mov
test
xchg
clc
dec
inc
rcll
push
mov
fs
adc
outsl
clc
xchg
shll
addl
sub
movsl
or
int3
int3
test
pop
sbb
sahf
test
sbb
out
fldt
bound
or
insl
and
shr
call
dec
js
push
loopne
cmpsb
mov
adc
int3
adc
xorl
les
rcrl
inc
xor
xorb
mov
mov
push
jno
ret
popa
add
ret
sub
stc
jecxz
xchg
test
loop
xlat
sbb
lods
fnstcw
mov
cli
das
jmp
ret
jmp
nop
xor
or
lds
adc
imul
lods
hlt
sub
insl
sbb
ffreep
pop
mov
jb
loope
call
mov
mov
insl
jmp
aaa
or
test
mov
aas
stos
xchg
sbb
mov
outsb
jmp
inc
les
sbb
into
and
fiadds
imul
pop
mov
shrl
add
std
jmp
test
cmp
sbb
mov
inc
pusha
cltd
or
lret
cmpl
daa
andb
sub
sar
fsts
dec
test
jo
or
jg
rclb
jle
cmp
adc
jg
outsl
mov
movsl
std
out
or
inc
lret
xchg
or
mov
je
lock
mov
lret
inc
mov
push
and
add
push
out
jle
xchg
loope
xchg
out
decl
or
mov
cmp
js
lods
ljmp
sub
stos
lret
leave
push
cmpsl
in
adc
push
aaa
lock
jb
mov
inc
cwtl
loopne
aam
adc
arpl
jb
xchg
pop
pop
add
in
sahf
lahf
jbe
adcb
mov
xor
or
ret
and
decl
out
push
sbb
xchg
rcrb
xchg
sub
sbb
cmp
es
aad
push
add
jnp
sbb
sarb
cmp
or
push
add
les
inc
jmp
dec
jl
jmp
cmpb
je
xor
hlt
jl
jle
jl
jnp
jnp
ja
stc
cli
movl
xchg
ficoms
pop
stos
inc
cmp
shll
push
sbb
xchg
pop
pop
loope
xor
out
ret
faddl
outsb
jmp
repz
cs
push
into
rcr
push
mov
mov
sub
les
loop
push
mov
shlb
mov
mov
inc
insl
xor
pop
insl
stos
jle
xchg
mov
test
int3
inc
mov
sbb
jo
and
add
xchg
jae
in
mov
jg
xchg
test
sub
rorl
jg
ljmp
lcall
mov
sarb
cmp
cmp
mov
add
fs
ss
cmp
loopne
mov
fwait
lret
stos
pop
ret
mov
or
cwtl
enter
repnz
sbb
aas
inc
or
icebp
or
test
adc
add
data16
add
pushf
jbe
lea
test
inc
test
lcall
rcl
inc
push
add
inc
sub
pop
loope
and
mov
add
pop
jbe
mov
imul
ja
mov
pop
jecxz
movsb
mov
jne
int3
movl
aam
jle
cmc
push
xchg
int3
xor
mov
sub
dec
push
ds
pop
or
jp
leave
jnp
mov
enter
cmp
jge
pop
je
xor
mov
divb
daa
fdivrl
or
and
shr
add
adc
out
subl
xor
or
xor
mov
daa
and
or
aam
in
fdivl
std
dec
inc
or
add
leave
roll
or
add
enter
cmpsl
mov
mov
cld
out
hlt
out
mov
push
cld
stc
jmp
nop
mov
int3
loop
or
comiss
in
or
push
mov
push
test
mov
cmp
in
test
jo
sub
pop
pop
movsb
pop
xchg
sbb
test
push
pop
int3
adc
xchg
adc
icebp
addr16
add
sahf
arpl
scas
scas
add
pop
movsl
pop
imul
adc
stc
adc
cmc
icebp
inc
les
cld
mov
js
mov
push
mov
sub
out
jae
mov
sub
adc
out
les
mov
jno
lahf
push
scas
sbb
jo
out
cmp
hlt
dec
jnp
sub
andl
mov
das
or
mov
mov
lahf
clc
aaa
stc
data16
inc
aam
ret
cmp
pusha
sti
outsl
outsl
xchg
pusha
mov
inc
and
mov
pushf
ljmp
aaa
adc
dec
aad
adc
sti
inc
rcrl
pusha
movsb
mov
jge
jbe
mov
mov
cmp
inc
sub
out
add
cmp
dec
cltd
xor
arpl
cmp
je
ss
imulb
sarb
fstl
ret
dec
and
xchg
movsl
or
mov
sub
das
or
fisubs
addl
roll
pop
add
and
xchg
leave
loopne
clc
aas
and
dec
les
push
and
dec
sahf
and
dec
cmp
lock
setnp
loopne
jmp
xchg
pop
fst
dec
add
mov
mov
mov
push
sbb
sbb
pop
mov
adc
out
or
lea
sbb
push
hlt
dec
lcall
xor
mov
clc
push
jae
jnp
mov
lods
sti
pop
add
mov
mov
dec
sar
imul
sub
nop
xor
aad
adc
test
lahf
push
call
pop
shrb
cltd
sbb
xchg
add
push
pop
icebp
xchg
ss
mov
or
lds
mov
sbb
jmp
notb
shrb
or
addl
stos
fldenv
sbb
orl
mov
sub
inc
ja
lods
ret
inc
pop
cmp
int3
jo
pop
inc
fsts
push
xor
sahf
sub
into
dec
add
inc
lea
push
iret
sub
fildl
pop
out
addr16
mov
cmc
sbb
or
pop
lcall
in
mov
xchg
ljmp
inc
and
pop
filds
adc
pop
test
mov
and
je
int3
cwtl
jbe
push
mov
or
aaa
or
adc
in
mov
jg
ret
bound
adc
push
sbbb
mov
inc
sbb
or
dec
xor
dec
or
sub
ret
push
jno
call
negb
fists
inc
pop
fwait
dec
insl
aaa
hlt
adc
cmpps
loope
fdivs
test
aaa
push
jne
js
or
cmp
inc
mov
inc
les
add
loope
imul
push
inc
movsb
out
imul
push
or
inc
lret
aas
ret
mov
pop
adc
jne
lea
push
xor
add
stos
repz
cmpsb
leave
add
adc
pop
js
mov
movsl
fdivr
adc
mov
movsl
outsb
adc
mov
aas
pop
icebp
lock
dec
add
push
aaa
test
ja
fbld
sbb
and
jae
iret
jmp
sub
mov
mov
inc
aad
and
sub
mov
push
xchg
movsb
sbbb
shrl
and
mov
in
jno
mov
or
outsl
and
inc
add
addb
fldl
cli
lea
lods
lods
fcoml
and
dec
out
lret
repnz
rclb
movl
ds
jnp
lock
mov
inc
dec
cmp
jg
jecxz
mov
addl
rolb
pop
subl
adc
add
mov
bound
adc
fsubp
fdivrp
pop
sbb
mov
pop
mov
pop
rcrl
sub
lds
jne
cld
outsl
sbb
add
xchg
ja
fmulp
mov
insb
mov
shrl
lahf
add
stos
push
push
jg
out
cmpsb
xor
loopne
loope
mov
push
add
xchg
and
ds
mov
popf
mov
fdivrp
jl
ret
das
or
jmp
jo
stos
push
leave
arpl
pop
dec
dec
and
dec
and
sub
adc
flds
cmp
xor
mov
sbb
movsb
test
mov
icebp
scas
push
loope
mov
and
adc
push
and
sbb
call
fnsave
cs
gs
outsl
lods
adc
in
icebp
sub
outsb
mov
jae
clc
cld
sub
hlt
das
ljmp
inc
mov
ret
inc
js
movsb
stos
jo
stc
dec
or
or
dec
cli
dec
dec
aaa
or
out
sub
loop
sbb
push
nop
xchg
jmp
ljmp
xchg
jb
add
loope
sub
cli
jne
in
adc
adc
inc
inc
test
add
hlt
js
push
test
sub
ljmp
cmp
mov
notb
leave
ja
xchg
inc
and
insb
or
pop
call
pop
xchg
mov
imul
jg
das
std
xor
jg,pt
sbb
push
or
jo
or
xchg
jle
adc
fstpl
add
daa
pop
outsb
add
daa
cld
out
jb
nop
add
push
call
adc
xchg
xchg
mov
js
ret
add
or
mov
pushl
mov
dec
inc
or
fbstp
jg
add
xchg
and
in
out
mov
dec
inc
movsb
and
and
adc
mov
das
out
sbb
dec
outsl
add
rcrb
add
mov
mov
mov
bound
and
fdivl
sub
mov
fcoml
cltd
je
or
shrl
adc
cmc
hlt
inc
iret
cld
push
test
cmpl
jae
inc
adc
mov
out
popa
and
xorl
mov
leave
aas
test
jmp
repnz
adc
pop
lds
pop
idivl
lock
xchg
cmc
and
loop
fwait
or
iret
fistps
push
or
adc
sbb
outsb
cmp
insl
dec
jp
lcall
cwtl
xchg
dec
and
rolb
out
adc
xor
stos
jg
movsb
rolb
mov
outsl
or
lret
inc
adc
js
jle
pop
mov
adc
dec
movsl
mov
xor
dec
decl
mov
dec
aas
mov
sub
fnstenv
outsl
lods
dec
mov
push
lret
lods
fdivl
adc
adc
icebp
aas
lcall
mov
mov
aas
icebp
scas
mov
xor
jecxz
mov
add
push
loope
insl
sbb
xor
pop
pop
cli
or
mov
aam
fisubs
je
jmp
out
dec
push
cwtl
or
sbb
rclb
negl
inc
testl
scas
inc
cmp
lret
mov
negb
dec
in
cwtl
xor
push
xchg
add
jl
outsl
lods
xchg
cmpsl
mov
ss
push
test
out
add
jecxz
adc
xchg
cmc
jg
je
lret
push
xchg
xchg
inc
adc
fbstp
fs
xchg
inc
fldl
movb
push
dec
mov
push
mov
fists
decl
icebp
pop
inc
flds
adc
sbb
sbb
mov
iret
adc
lcall
xchg
cmp
add
cli
rolb
sub
mov
dec
hlt
and
sbb
mov
imul
insb
cmc
cmp
pop
iret
pop
mov
out
les
in
mov
add
or
iret
das
push
cli
jg
inc
scas
jle
out
pop
sub
and
imul
jmp
outsl
adc
xlat
pop
or
rol
push
add
das
xchg
mov
sahf
push
cmp
or
das
daa
std
imul
lock
test
cmp
mov
mov
sbb
ud1
stos
push
subl
aad
andb
fldl
or
mov
push
out
xor
mov
js
dec
ficoml
sub
xchg
inc
arpl
mov
sarb
jmp
pop
pop
inc
push
shll
mov
mov
popa
jecxz
or
and
or
mov
loope
mov
sbb
cmc
or
mov
test
jne
stos
mov
dec
mov
jbe
mov
cmpsl
mov
cmp
jmp
mov
fistps
adc
or
pop
das
insb
aaa
lods
sub
dec
xlat
sbb
in
xor
inc
ljmp
hlt
inc
add
cmpsl
jnp
ja
mov
push
cwtl
mov
pushl
sub
ljmp
call
fcmovnu
add
sub
call
mov
imull
jge
call
je
dec
or
sbb
sbb
adc
lea
push
rolb
clc
notb
cs
add
mov
sbb
mov
mov
into
inc
and
test
mov
mov
je
shrl
mov
in
mov
movsl
imul
fcmovnu
dec
call
loopne
pushf
push
dec
add
lahf
adc
clc
push
shll
and
sahf
inc
jo
add
xor
mov
rcll
mov
inc
xor
inc
jmp
or
dec
sbbb
ja
inc
aas
inc
add
cli
mov
std
jg
pop
sub
fldt
pusha
in
xor
dec
jle
pop
repz
mov
pop
cmp
sub
cli
xor
sti
ljmp
add
sub
icebp
and
jno
xchg
mov
xchg
dec
xchg
cmp
arpl
mov
xor
push
negl
mov
cmpl
xor
pop
mov
pop
pop
sub
leave
ret
pusha
xorl
mov
adc
adc
sbb
pop
push
cli
les
rolb
les
lcall
cli
rcr
add
xchg
loopne
faddl
bound
and
dec
jb
pop
pusha
xchg
cmp
add
test
xchg
dec
jg
mov
addr16
and
cli
lds
out
shlb
fs
mov
incl
adc
cwtl
cmp
rcll
pop
add
sub
mov
jns
sub
add
jle
cmp
dec
mov
jge
js
jne
es
mov
or
xchg
dec
mov
aad
int3
mov
and
mov
rorb
ja
mov
outsb
xchg
sub
lock
xchg
xorb
lea
cmc
push
hlt
test
fwait
jno
mov
bound
push
push
fwait
push
ficomps
sbb
test
call
int3
iret
dec
subl
push
inc
pop
popf
test
jb
ud0
cmp
sbb
mov
xor
test
sbb
ds
pop
jns
mov
or
jg
mov
jbe
adc
ss
or
nop
xchg
ljmp
subb
xorl
pop
sbb
or
push
xor
pop
imul
insl
stos
add
mov
in
sahf
push
sbb
mov
push
and
add
inc
std
repz
scas
jle
push
in
sub
fs
push
mov
xlat
dec
mov
call
sub
dec
movsb
add
mov
mov
jns
stc
adc
sbb
add
and
xchg
xchg
or
cmpsl
das
jp
xchg
int
jg
sub
add
and
test
aaa
mov
sti
mov
ss
or
cmp
std
faddl
dec
jle
je
pop
rclb
test
jl
cmp
popa
jecxz
inc
imull
adc
dec
push
inc
jmp
es
ret
inc
aaa
push
inc
aam
fbstp
inc
test
add
mov
mov
or
mov
loop
fiadds
mov
in
inc
add
hlt
xchg
jge
mov
je
iret
cld
mov
fistpl
xor
add
mov
xor
jns
test
push
dec
jge
jae
bound
addr16
and
stos
aad
fsts
lds
jb
sub
call
jne
test
jp
addb
lock
lret
in
xchg
lods
popf
xchg
jmp
ss
jg
add
xchg
scas
inc
lea
sbb
push
jno
mov
adc
add
aad
and
cmpsl
cmp
ja
add
cmpsb
clc
outsl
mov
leave
mov
add
and
and
jle
jg
xor
cmc
push
movsb
push
aaa
into
test
shll
movsl
lods
lock
push
jno
push
std
in
inc
insb
adc
adc
sub
adc
dec
test
aad
push
cmpsl
mov
inc
popf
dec
fisubrs
jo
adc
mov
inc
jle
lea
xor
xorb
shl
faddl
aas
ficoms
dec
sub
clc
xor
mov
jns
pop
aaa
cmp
jae
and
call
mov
adc
test
mov
mov
sahf
popf
sub
lea
push
mov
js
mov
imul
ljmp
stos
cmp
jmp
mov
xchg
sbbb
in
add
fistpl
xchg
jg
ret
mov
pusha
push
sub
xchg
fsubrl
or
sbbl
adc
sbb
sbb
movsb
adc
push
stc
sbb
in
sub
or
in
daa
mov
cmpl
mov
in
dec
mov
adc
xor
inc
push
insl
loop
int3
gs
add
jbe
add
cmp
aam
insl
aas
lock
xchg
lcall
movsl
outsb
test
cmpb
movsl
ljmp
aas
mov
add
inc
mov
mov
push
push
add
daa
mov
mov
sub
mov
lds
push
inc
mov
and
lea
fidivl
sub
add
leave
mov
fsubr
pop
lods
adc
mov
ret
sub
mov
fdivrl
test
fs
cmp
sbbb
pop
pop
outsb
jg
mov
ds
pop
bound
je
aaa
jle
cltd
jmp
int3
fs
mov
fcompl
insb
leave
or
in
bound
sub
fistpl
and
lods
cmp
push
jle
sub
mov
inc
lock
push
jns,pt
sub
mov
mov
leave
std
movsl
push
mov
jo
xchg
hlt
mov
cs
imul
fadd
mov
mov
cs
add
and
lock
scas
dec
add
subl
daa
lods
inc
scas
sub
das
pop
aad
or
popf
icebp
add
hlt
jbe
test
adc
jnp
push
icebp
insb
popf
ret
std
testl
dec
fldenv
push
mov
mov
dec
xchg
mov
mov
aaa
cmpsb
movsl
int3
adc
jp
inc
ffree
test
mov
ja
or
xchg
out
dec
xchg
out
call
xchg
adc
std
jo
call
jae
jns
inc
xor
mov
pop
std
fldcw
jnp
sub
leave
in
loopne
xor
rcr
adc
stc
lret
pop
push
xchg
and
cmp
pusha
pop
push
mov
dec
mov
cmp
imul
dec
push
jae
fists
xchg
sub
cmpsl
adc
mov
filds
rcr
inc
shlb
adc
or
rorl
xor
fisttpl
inc
rol
add
ret
push
ljmp
movsl
or
sbb
mov
mov
mov
je
mov
orb
aad
push
sub
mov
or
adc
sbb
add
and
mov
fsubrl
or
cmpsb
leave
dec
jp
jle
lret
xchg
dec
es
es
cwtl
mov
pop
scas
sbb
scas
cmpsb
sbb
inc
icebp
and
sbb
mov
fstpt
cmp
add
stos
in
out
sbb
movsl
aaa
in
push
in
adc
fmull
and
arpl
aam
jmp
mov
cs
aad
lahf
lds
insl
sbb
adc
pop
or
fs
daa
pop
stos
mov
sub
jle
repz
popa
mov
cmp
jl
jo
jle
or
pop
and
roll
inc
mov
sbb
stos
loope
jecxz
fildl
mov
jb
test
mov
pusha
mov
insb
push
hlt
and
sub
add
sbb
fldt
xchg
js
dec
and
add
push
aaa
pop
mov
dec
fdivs
ljmp
pop
sub
fs
movsl
addr16
std
dec
outsb
and
sub
xor
leave
cmp
add
aam
jbe
fcmovb
fistl
mov
loopne
or
repz
into
or
inc
fstl
bndstx
fsubs
sbb
data16
inc
fldl
loop
xchg
sub
mov
cli
push
loop
cmpl
ret
nop
mov
mov
shlb
mov
in
xlat
mov
cli
adcb
cwtl
mov
lcall
lahf
push
xor
sub
popf
pop
roll
sub
incl
fcompl
jno
in
out
aad
push
adc
jne
mov
xchg
insl
mov
sub
arpl
imul
fimull
xchg
test
clc
bound
rolb
sub
mov
movsb
or
ret
pusha
xor
pushf
lea
scas
xchg
in
adc
lods
outsl
push
test
sbb
jmp
jbe
js
adc
xchg
xchg
inc
push
out
add
sbb
aam
push
arpl
xor
adc
das
bound
jle
clc
test
adc
popa
mov
and
mov
add
push
xchg
add
pop
or
pop
pop
cmc
mov
mov
ss
xchg
outsl
pop
pop
mov
jne
push
fisubrs
fcoml
bound
mov
xchg
mov
mov
stos
insb
sub
mov
cmpb
in
or
push
arpl
inc
add
xor
xor
movsl
xchg
mov
jge
dec
cmpsl
mov
sub
or
jns
adc
mov
gs
mov
push
cmp
lahf
dec
aam
out
and
fists
lret
lods
out
adc
and
or
outsl
mov
mov
sub
outsl
or
push
lcall
and
sbb
js
jno
iret
dec
cli
test
jg
add
pop
ja
out
lret
sbb
je
and
std
daa
pop
imul
mov
add
cmp
loopne
sbb
adc
mov
mov
pop
cmpsl
cli
lret
ljmp
outsl
inc
mov
je
lcall
pop
push
popa
jae
mov
lock
and
cmp
push
call
cs
jmp
movsb
or
sbb
out
cs
adc
test
sub
jg
fucomi
mov
nop
gs
pop
rsqrtps
cmp
and
fbld
addb
add
xchg
orb
or
dec
sbb
jge
fisubrl
outsb
xorb
js
das
bound
je
arpl
leave
jg
aas
lods
push
sbb
fistps
dec
imul
ret
mov
nop
pushf
pop
jmp
jmp
jne
lock
stos
inc
andl
outsb
addr16
sbb
sarl
out
mov
adc
mov
dec
dec
enter
push
dec
adc
test
sub
cld
jmp
in
lahf
mov
stos
push
cmp
lahf
jge
fiadds
aaa
scas
mov
das
or
rorb
or
dec
mov
jns
jb
dec
fcmovnu
sbb
push
adc
and
ljmp
cld
push
inc
dec
jle
or
jo
cmp
aam
xchg
test
enter
or
xor
scas
lock
jmp
aaa
pop
icebp
add
pop
in
add
or
jmp
fstpt
push
inc
enter
or
das
add
mov
aaa
dec
orl
sti
cld
xor
in
in
in
and
sub
lret
movsb
pusha
pop
mov
and
cwtl
mov
int3
mov
mov
add
lcall
or
sbb
fimuls
aam
dec
dec
shll
add
push
xchg
scas
push
frstor
test
mov
mov
mov
adc
ljmp
pop
or
sbb
cld
leave
outsl
cmc
cli
lods
rcl
adc
and
or
jle
repnz
jns
cwtl
add
add
rcr
dec
enter
xchg
and
jecxz
cmp
xchg
pop
add
repz
add
inc
mov
push
cmpsl
jnp
das
lds
pusha
movsl
out
inc
add
mov
jl
ret
inc
sbb
mov
pop
adc
rcl
jp
loope
pop
insl
es
cmpsb
int3
mov
outsl
insl
pop
mov
fadds
jg
jnp
sub
aas
mov
sub
cmp
dec
in
or
jb
jge
dec
iret
arpl
push
sub
sbb
daa
les
mov
fldcw
xor
pop
fbstp
scas
arpl
mov
xchg
dec
push
jae
out
out
inc
cld
call
aam
fcoml
mov
scas
and
mov
rcr
shr
imul
ds
dec
cmp
sbb
in
sahf
cwtl
ss
shrb
jle
or
jmp
mov
lock
out
push
ljmp
and
jge
adc
nop
pop
push
testb
sub
insb
insl
cmc
in
mov
adc
in
outsl
outsl
pushf
dec
test
ljmp
js
jmp
jl
xor
dec
stc
test
fsts
mov
pop
sbb
sub
xlat
lock
mov
lock
jmp
inc
ret
faddp
rclb
adc
cmc
cmp
test
jge
cwtl
outsl
cli
pop
cwtl
movsl
test
dec
shlb
cmpsb
popa
xor
xor
jnp
loopne
jecxz
movsb
pop
into
inc
jno
mov
mov
pop
inc
nop
fxtract
cmp
movsl
cld
testb
cmp
les
shll
shrl
push
cmpb
add
xchg
pop
orl
aaa
pusha
mov
and
inc
fiaddl
and
lock
push
hlt
mov
jmp
nop
stos
data16
data16
lret
dec
loop
mov
cli
imul
mov
lds
add
insb
movsl
and
ds
loopne
cld
call
and
cmp
xor
.byte
mov
call
in
add
andl
push
lea
push
pushl
push
in
push
push
idiv
jg
lea
push
push
call
leave
ret
xchg
add
decl
flds
roll
dec
neg
inc
neg
movl
jmp
xchg
ret
or
fcmovnb
test
push
in
push
dec
in
lock
add
and
xchg
lret
call
push
push
lea
push
clc
push
push
push
out
push
ja
mov
inc
sub
xchg
add
cwtl
push
push
mov
loopne
pusha
mov
xchg
jnp
sub
test
jbe
outsl
jle
insl
gs
push
in
push
push
lods
hlt
insl
imul
and
clc
add
pop
mov
push
call
ret
jbe
cmp
push
std
push
bound
les
lret
ss
cwtl
mov
mov
call
outsb
cmpsb
in
or
lock
fnstcw
movsl
xor
add
test
loop
push
fisttps
arpl
and
and
sbb
shl
mov
inc
fsubs
or
push
jne
push
jae
pop
mov
in
cmp
xchg
add
xchg
sub
xorb
mov
mov
inc
fxch
or
enter
sbb
push
jmp
clc
sahf
push
popa
push
xor
adc
push
cld
push
cmp
xor
sbb
nop
adc
or
sbb
loopne
rcll
sbb
xor
lock
or
cld
loopne
outsl
push
xor
dec
pop
push
scas
inc
xor
add
mov
fnstsw
xor
adc
mov
cmp
enter
cmp
rcrl
mov
xchg
js
push
pusha
push
data16
mov
jnp
add
rolb
in
or
inc
mov
xchg
out
cli
movsl
and
mov
or
push
pop
xchg
sbb
dec
addr16
xchg
nop
jae
and
or
dec
fldcw
mov
push
imul
cltd
sub
rsm
inc
addr16
add
jae
push
dec
mov
pop
mov
fs
jnp
sbb
xchg
call
nop
add
rolb
jge
dec
inc
inc
mov
xor
and
push
cmp
repz
inc
sbb
sub
push
outsb
dec
jmp
loope
outsl
add
rcll
push
mov
aam
mov
ljmp
push
movsb
push
sbb
ljmp
add
adc
xorl
lock
jno
and
jbe
popa
dec
cmp
mov
mov
add
inc
push
outsb
fstpl
hlt
ss
dec
inc
cwtl
adc
mov
xchg
dec
mov
jmp
out
dec
inc
pop
andl
mov
xor
nop
and
sbb
int3
cmp
jne
dec
inc
movsb
jb
inc
inc
js
cmp
ja
or
into
cs
lahf
add
jne
push
jbe
jo
xchg
inc
dec
cmpb
xchg
add
jae
inc
add
pop
inc
rcr
xchg
xchg
out
fdiv
pop
mov
xorl
fidivrl
xchg
loope
and
cwtl
mov
mov
xchg
in
cmpsb
jmp
cld
sarl
add
andb
sbb
jno
outsb
xor
add
inc
xor
pop
addb
push
cmpsb
addr16
insb
movsb
and
xchg
in
loop
add
or
jg
outsb
call
neg
inc
inc
notl
add
pushf
or
sbb
jns
call
pop
dec
mov
pop
les
movsl
outsb
loope
push
pop
push
jbe
mov
imul
adc
xchg
or
mov
jle
jno
push
js
arpl
add
bound
aam
and
jne
jne
insb
lcall
rolb
imul
ret
dec
push
fistpll
cld
test
popf
mov
test
inc
ss
and
or
inc
cmpsl
or
mov
in
xchg
pop
out
pop
jg
shrb
jb
out
ds
insl
je
xchg
insb
dec
xor
add
pop
pop
add
mov
mov
xor
sub
les
sub
loopne
push
inc
xchg
inc
mov
enter
nop
cwtl
fsubl
mov
inc
jne
das
inc
xor
inc
mov
dec
dec
addl
int3
adc
pushf
push
cmpsl
js
int3
push
push
pop
mov
int
insb
loopne
pop
push
push
or
stos
arpl
dec
lock
aaa
inc
add
js
adc
inc
outsb
cmpsl
mov
loopne
rorl
dec
or
lret
test
nop
mov
inc
je
push
in
loopne
daa
addb
inc
fstl
pop
decl
push
or
aaa
add
movsb
bound
lahf
adc
jb
pop
xchg
out
lods
ja
push
mov
negb
shlb
pushl
or
adc
dec
add
mov
not
xor
aaa
inc
sbb
add
aas
sbb
inc
push
jg
inc
orl
movsb
aaa
push
cmp
or
cmpsb
in
mov
adcl
mov
outsl
inc
dec
imul
jbe
mov
or
mov
xor
pop
ss
inc
push
in
out
mov
lds
shl
scas
lea
dec
xor
aaa
xchg
or
js
mov
push
add
shl
js
clc
lock
inc
mov
imul
stos
jbe
sbb
data16
mov
push
jae
sub
dec
js
bound
push
dec
rorl
lds
add
ss
shll
or
add
push
dec
loopne
dec
or
gs
outsb
mov
jge
jg
xchg
shrl
dec
int3
test
int3
mov
inc
popa
in
and
mov
xor
mov
push
xor
sahf
outsl
lahf
repz
xchg
add
jmp
gs
test
mov
and
add
add
sbb
pop
mov
mov
jg
mov
leave
inc
cmp
cmp
rorl
inc
sub
lock
sub
or
mov
add
xor
pop
dec
add
mov
add
pop
xchg
pusha
nop
fwait
or
jns
aas
add
jns
push
inc
push
and
jp
sar
inc
mov
aaa
mov
outsl
cs
jae
cmp
push
or
in
popa
pop
mov
adc
or
mov
dec
push
dec
mov
push
mov
mov
adc
adc
push
add
adc
xchg
and
rcrl
inc
pop
push
and
add
adcb
loope
pop
push
sub
jae
push
outsb
add
aaa
imul
ror
cmpsl
xchg
lcall
es
out
mov
je
dec
ss
dec
push
lods
sub
dec
sub
sbb
outsb
clc
inc
daa
enter
adc
dec
test
mov
cmpsl
jl
mov
dec
scas
notl
orps
inc
dec
add
or
xchg
add
test
pop
clc
in
jne
jb
arpl
dec
js
inc
sub
push
je
inc
xor
jo
push
insl
dec
mov
xor
std
xchg
jns
mov
push
pop
iret
loopne
inc
cld
out
dec
add
cli
insb
adc
dec
bound
add
dec
sbb
stos
aas
push
gs
mov
push
jne
cld
mov
gs
inc
arpl
xor
xor
nop
xor
sub
pusha
mov
stc
mov
rorl
jne
pop
loopne
stos
negl
sub
adc
lahf
xchg
xor
loop
sub
xor
inc
lock
or
jbe
insb
insl
xchg
add
push
push
jne
popa
jb
add
imul
bound
sbb
mov
pop
adc
sbb
pop
push
insb
push
push
add
inc
add
mov
fnsave
mov
push
mov
cld
push
jbe
cvttps2pi
xchg
sub
into
adc
not
ret
leave
ret
sbb
outsl
loopne
mov
xor
cmp
arpl
sar
xchg
pop
or
inc
pop
and
orb
movsb
pop
popf
pop
cwtl
fdivrs
roll
fstpt
dec
add
es
shlb
in
or
add
and
pop
push
jns
xor
flds
push
push
andl
js
loopne
sahf
mov
mov
xlat
stos
pop
mov
push
adc
inc
dec
jb
sub
xor
xor
push
jb
leave
or
std
insb
jo
js
jno
nop
inc
dec
push
inc
popa
push
aam
xor
icebp
les
bound
test
subb
inc
dec
aaa
jo
aaa
inc
cs
ss
insb
jp
pop
cmpsb
xchg
sub
inc
bound
add
ss
push
push
or
pusha
inc
xchg
gs
scas
addr16
sub
lock
sarl
push
loopne
xor
sbb
add
cmp
push
adc
push
adc
bound
outsl
push
inc
mov
mov
icebp
sbb
subl
pushf
inc
xor
out
push
pop
test
js
cld
add
xchg
cwtl
sub
dec
push
mov
sbb
dec
inc
xor
movsl
xchg
xchg
sbb
add
lock
das
or
lahf
push
or
push
mov
insb
popf
cwtl
in
push
xor
dec
push
inc
not
adc
dec
decl
jne
and
pusha
shrb
mov
rorb
addr16
outsb
lods
hlt
mov
mov
mov
push
movsb
popf
dec
mov
mov
pop
add
mov
and
jns
adc
add
mov
add
dec
imul
adc
nop/reserved
inc
stos
sbb
adcl
pop
js
pop
andl
dec
lret
js
mov
stos
sub
cmp
mov
std
das
sub
not
sbb
adc
add
flds
stc
movl
push
inc
add
repnz
sub
dec
mov
stos
pop
mov
dec
jmp
stc
cs
lods
or
inc
add
dec
xlat
jno
stos
or
aad
pop
pop
fmull
xchg
lahf
inc
lea
test
testb
or
mov
clc
push
xlat
cmp
flds
xchg
jl
aas
push
movsb
and
dec
pushf
push
push
pop
xor
pop
jge
dec
xor
leave
xchg
sub
fbld
lds
add
jl
jne
xor
mov
mov
in
pop
cmp
aaa
dec
add
push
cmpsl
push
push
mov
ret
test
insl
lock
cli
xor
xor
jp
addr16
mov
and
rcrl
inc
cld
push
inc
jo
int
sbb
and
out
sarl
mov
sub
dec
dec
cmp
cmpsb
inc
loopne
jb
add
fidivs
shll
fildl
push
mov
dec
mov
inc
xor
fcoms
xor
ja
loop
mov
pop
out
add
mov
shlb
gs
sbb
pop
sub
inc
add
xor
sub
push
mov
icebp
mov
sbb
push
repnz
push
xlat
push
sbb
adc
rcll
xlat
ret
adc
das
mov
call
mov
adc
not
sub
xorl
push
insb
push
cmp
fucomp
push
filds
dec
push
add
dec
push
inc
sbb
dec
jnp
outsb
xor
sub
xchg
push
pop
xor
mov
and
jns
xlat
add
adc
lods
xor
into
addr16
push
add
xchg
mov
imul
bound
insb
cltd
xor
cmpsb
ja
adc
mov
in
cmovno
and
push
roll
lcall
dec
gs
gs
scas
dec
rcr
jne
loopne
cs
clc
sub
and
inc
adc
rolb
jmp
push
xor
push
push
stos
stos
adc
pushf
ljmp
imul
xor
and
mov
bound
leave
sub
dec
les
xlat
insl
aam
pop
ljmp
add
jno
adc
jge
fisubrs
pop
sub
dec
adc
mov
push
sbb
cmp
shlb
outsb
inc
jb
inc
inc
cmp
scas
push
adc
mov
mov
push
shlb
xchg
push
inc
push
push
xor
add
jbe
idivl
add
clc
add
push
adc
adc
rcrl
dec
data16
lds
push
je
mov
les
jmp
or
xor
jno
inc
adc
dec
adc
and
movsb
and
leave
popf
int
xor
jg
in
movsl
inc
jb
sbb
push
or
pop
lods
mov
je
mov
daa
mov
addr16
and
adc
inc
inc
and
loopne
xchg
and
mov
fs
outsl
mov
out
bound
push
mov
aam
push
leave
and
mov
test
jae
in
xchg
mov
cmp
inc
dec
sbb
or
push
loope
mov
push
add
fs
xadd
jo
inc
inc
sbb
clc
outsb
inc
jbe
sbb
gs
incl
inc
add
sbb
adc
je
sub
inc
sbb
shrb
fdivrs
push
aas
jb
push
add
outsb
jne
sbb
pop
jno
adc
add
mov
mov
orl
cmp
push
inc
mov
and
mov
inc
sbb
insb
mov
and
sbb
nop
pextrw
and
imul
xchg
push
mov
push
andl
mov
inc
addb
cmc
aaa
dec
and
mov
inc
sbbb
add
shrb
lcall
or
jne
movsl
lods
adc
jb
jo
or
pop
stc
sbb
neg
sbb
add
lahf
adc
je
pop
inc
mov
inc
fnsave
mov
push
push
ja
dec
inc
jbe
push
cmc
in
es
dec
push
jnp
xor
sbb
imul
push
insb
mov
fdivrs
add
fdivrs
icebp
jp
push
mov
lret
jno
popa
add
adcb
ja
jnp
stos
js
test
or
and
mov
adc
xor
inc
inc
pop
mov
jmp
mov
push
ss
push
lds
sti
arpl
lret
test
pushf
ficomps
mov
loopne
mov
js
call
jne
dec
mov
sbb
test
mov
mov
not
sub
dec
inc
sub
repz
neg
mov
sub
jbe
divl
sbb
ljmp
shll
ret
mov
or
icebp
test
outsl
push
jo
dec
push
jecxz
push
and
loop
repnz
test
loopne
cli
loop
xchg
add
popa
cmp
data16
mov
fcoms
or
push
js
and
insl
dec
jns
jnp
jmp
ds
hlt
mov
cld
les
lahf
xor
inc
and
out
mov
rorl
mov
adc
push
jo
ljmp
fstl
pop
movsl
push
insb
push
add
aaa
test
lea
shlb
call
xor
shrl
mov
stos
push
scas
fwait
mov
mov
mov
cmp
inc
push
inc
popa
lock
rcll
jo
cmc
mov
repz
neg
dec
fucomp
sub
adcb
xor
jmp
les
dec
les
push
ss
and
mov
mov
dec
not
sub
fcoms
cmp
push
push
aaa
inc
lahf
addb
push
push
cmp
das
inc
xor
cmp
repnz
enter
xor
pop
sbb
div
push
xor
cmc
enter
mov
push
pop
insb
push
inc
mov
rcr
dec
popf
pushl
dec
add
xchg
loopne
mov
dec
dec
push
inc
jbe
xor
mov
jge
dec
insb
mov
add
ret
push
add
and
pusha
imul
xor
ja
mov
mov
bound
inc
jg
push
je
inc
add
cmp
xor
loop
push
cwtl
pop
cmp
cmc
jb
xor
cmpsb
mov
push
add
out
sbb
cld
popf
gs
movsb
lods
enter
xor
scas
movl
flds
adc
mov
std
fs
rorb
orb
hlt
arpl
sub
cmp
push
or
and
xchg
mov
mov
fcoml
fcomps
movsb
sbb
mov
adc
sub
xchg
pop
and
inc
sub
inc
pop
rorl
add
shrl
push
and
adc
enter
les
pop
jb
imul
fadd
and
hlt
jle
cmpsb
inc
mov
push
inc
and
shrl
dec
lock
pop
inc
jb
inc
mov
push
add
gs
test
push
dec
pop
xor
fimuls
test
cmp
or
xchg
je
add
adc
fs
push
outsl
pop
adc
pop
sbb
dec
movsb
mov
js
inc
add
mov
push
xor
pop
dec
scas
xor
push
and
mov
loopne
popf
mov
inc
inc
add
or
cmc
dec
pop
insl
arpl
xor
pop
push
and
cmp
add
lds
shll
shlb
insb
outsb
dec
punpckhwd
jb
cmp
add
fldcw
aad
sbb
mov
mov
push
jl
push
dec
jb
call
cmp
lods
cwtl
dec
outsb
push
rolb
jno
sbb
jb
mov
inc
mov
mov
mov
sbb
inc
insb
jb
adc
adc
adc
pop
mov
inc
mov
xor
sbb
setg
pop
rorl
movsl
adc
inc
sbb
daa
xor
xor
cs
ss
addr16
imulb
jo
add
mov
test
sbb
nop
sub
enter
push
lock
jns
or
push
loopne
push
sub
jb
and
aad
and
rcr
push
aas
add
leave
test
inc
inc
insb
xor
add
movsb
mov
lods
inc
adc
neg
inc
push
subb
orl
cmpl
push
mov
sbbl
sub
or
xchg
lcall
lcall
mov
sbb
mov
not
sbb
sub
mov
not
adc
mov
add
dec
aaa
mov
repnz
inc
inc
pop
flds
push
add
or
jne
add
pop
pop
mov
or
dec
jo
shl
cltd
fwait
pop
inc
stos
xchg
xlat
add
int3
inc
xor
jmp
pop
pop
sub
mov
xor
cld
fwait
push
cmp
repnz
out
adc
int
fwait
bound
xor
add
inc
ljmp
outsl
inc
ja
inc
addb
mov
scas
push
pop
sub
add
push
or
icebp
in
jp
aad
sbb
push
std
inc
dec
stos
dec
aam
insl
mov
popa
push
jo
sbb
pop
sub
pop
pusha
add
adc
dec
arpl
insb
js
xor
popa
xlat
or
shrl
push
add
xchg
adc
add
int3
in
cmp
push
xadd
push
ret
hlt
sar
push
cmpsb
cmpsl
fwait
cmp
fsubrl
mov
bound
cmc
inc
xor
pop
lds
push
mov
add
sbb
or
sub
cmpsl
push
push
xchg
mov
push
leave
xchg
add
fldt
mov
cmp
shrl
add
add
ret
pop
aad
filds
clc
incl
call
out
incl
into
inc
and
sbb
cmpsl
js
js
mov
and
or
aas
sub
fs
mov
out
inc
ss
and
mov
loop
imul
loop
addr16
aas
mov
ljmp
lock
mov
cmp
addl
add
push
test
push
in
inc
cld
add
jne
arpl
cmp
add
adc
mov
inc
mov
sbb
and
mov
je
jp
ret
scas
inc
push
jb
or
jb
and
std
mov
not
add
cmpsl
mov
xor
jle
sub
add
sub
pop
xchg
push
mov
out
xor
add
popa
ja
and
out
push
in
insb
inc
leave
or
rolb
and
movnti
add
push
aad
loop
mov
inc
ss
inc
ss
push
push
shlb
test
and
inc
aas
test
adc
pop
loop
cmpsb
lock
lcall
mov
clc
inc
and
outsl
jno
not
inc
mov
sti
push
sub
mov
add
adc
pop
sub
cld
add
cmp
inc
dec
outsl
in
incl
adc
dec
push
dec
sbb
adc
sub
sbb
and
sahf
sub
shll
jmp
ret
add
adc
sub
pushl
mov
pop
lcall
add
pushl
inc
jle
sub
sbb
iret
adc
pop
mov
xchg
xor
cmp
rorb
clc
or
inc
popf
inc
sbb
sbb
push
aam
push
ss
outsl
push
dec
loopne
or
mov
jb
bound
xor
sub
and
mov
push
insl
fsubs
mov
mov
dec
mov
call
push
lea
insl
push
mov
xor
mov
jb
xchg
or
inc
icebp
adc
push
xor
mov
wrmsr
dec
sub
push
inc
dec
push
dec
jecxz
inc
sbb
dec
outsb
jne
fsubs
inc
repnz
add
mov
push
inc
fildl
scas
push
add
clc
mov
jmp
dec
or
push
or
scas
inc
out
sbb
pusha
mov
mov
lock
jae
insl
fdivl
in
pushf
jle
popa
call
or
sub
sbb
rorb
repz
jo
inc
mov
cld
testb
cwtl
lcall
loopne
cs
jno
lcall
cmp
push
mov
loopne
push
gs
mov
or
aaa
mov
call
cs
mov
addr16
je
imul
fstl
stos
in
in
lods
mov
shrl
ret
fwait
xor
dec
dec
rolb
in
and
sarb
rolb
mov
dec
jo
inc
movsl
jp
push
ss
dec
push
add
and
andb
fildl
add
jno
pop
dec
lea
jae
mov
inc
shrl
or
test
popf
imul
jne
inc
scas
push
jae
add
push
cld
inc
cmpsl
or
in
mov
jg
inc
xor
lahf
ss
pushf
or
je
mov
mov
mov
push
mov
imul
fdivrs
mov
incb
inc
or
mov
lea
fstps
iret
dec
add
clc
inc
cmp
sbb
shrl
mov
testl
xlat
xor
mov
loop
xchg
pusha
add
jecxz
cmovl
mov
enter
and
gs
stos
rorl
outsl
push
jne
jae
lock
inc
add
add
push
int3
ret
ja
xchg
dec
inc
add
inc
popf
bound
dec
push
push
mov
mov
test
xchg
mov
inc
hlt
xor
std
pop
lock
jp
imul
adcl
gs
push
mov
aaa
fstpl
es
sbb
lods
adc
icebp
add
sub
mov
pushl
dec
sub
hlt
repnz
mov
mov
push
lret
lds
std
inc
mov
jne
arpl
push
outsb
insl
rolb
loopne
adc
jne
push
scas
fcoml
clc
rorb
mov
leave
mov
add
stos
mov
addr16
ja
fwait
jmp
inc
stos
movsl
call
mov
test
and
or
arpl
sub
and
inc
clc
scas
jle
jno
add
push
push
je
jbe
push
dec
push
jb
sbb
test
pop
push
pop
clc
and
insl
inc
gs
xor
adc
lds
aas
arpl
out
xchg
xor
cmp
pop
popa
xchg
movsb
dec
test
mov
mov
xchg
fs
test
icebp
push
and
addr16
mov
push
addl
call
sbb
jl
cwtl
cmpb
add
outsb
dec
andb
and
insl
add
out
add
outsl
imul
inc
xor
push
sub
gs
or
mov
mov
push
roll
outsb
loope
dec
insb
mov
mov
fiadds
ss
fldenv
pop
add
imul
xchg
in
testl
xor
inc
push
orl
add
add
jge
push
sbb
test
test
adc
in
adc
les
or
cmp
jg
mov
aas
sub
add
std
nop
or
mov
add
push
xchg
aad
and
mov
adcb
cli
bound
outsb
fisttpll
fwait
or
incl
sub
shlb
or
dec
popa
into
outsb
pop
bound
mov
inc
aas
mov
inc
sbb
cwtl
imul
sbb
inc
inc
insb
inc
and
repz
or
cmpsl
inc
outsl
inc
cmc
int
fidivs
or
mov
dec
unpcklps
mov
sbb
sub
push
mov
add
jne
pop
ljmp
xor
aad
push
and
lcall
xor
push
mov
test
stos
inc
jae
inc
or
adc
popf
inc
jnp
inc
inc
push
xor
mov
out
fmull
popa
push
dec
push
loopne
addb
aam
fsubrs
pop
jbe
push
cmc
mov
or
fcoml
and
aas
and
adc
and
sbbb
ja
push
in
test
cmp
cmp
test
mov
add
push
or
shrb
xchg
mov
push
fwait
or
lock
neg
push
add
ret
dec
neg
leave
ret
mov
cwtl
or
int3
inc
push
imul
repz
mov
adc
push
inc
add
sub
push
and
sub
paddw
arpl
addl
aas
out
sbb
cmp
cmpsb
mov
clc
mov
loop
aad
aam
push
jne
pop
hlt
or
push
and
in
scas
and
std
and
bound
cmpb
mov
and
sub
dec
or
pop
mov
pop
test
enter
mov
jge
xchg
adc
add
jmp
and
into
inc
push
adc
inc
not
jmp
jp
cli
dec
mov
push
stos
daa
inc
add
clc
and
add
add
popa
xorl
jb
mov
push
push
sbb
push
jecxz
push
aas
sbbl
insb
std
mov
xor
mov
aaa
outsb
js
push
cmp
sub
hlt
test
mov
and
gs
dec
lock
out
add
cmp
lret
xor
push
inc
call
jb
gs
popf
clc
mov
test
imul
loop
ja
cmp
xchg
pop
or
jno
jno
cli
jg
mov
mov
pop
xor
push
mov
fs
push
lea
test
inc
xchg
clc
nop
in
push
dec
shlb
popf
cmp
inc
cmp
jo
notl
movsl
sub
pop
xchg
adc
or
repnz
push
sti
push
add
push
inc
push
push
lock
int
inc
and
sbb
pop
pop
dec
xchg
imull
outsb
adc
inc
mov
add
orl
pop
je
mov
and
int
or
xor
sbb
adc
add
icebp
andl
mov
push
pop
push
inc
ss
pop
test
sbb
push
mov
iret
mov
inc
xor
ret
inc
add
mov
and
sarb
cwtl
jae
push
dec
or
stos
inc
add
out
in
faddp
push
rcrb
pop
pop
jbe
insb
adc
sub
ljmp
push
enter
push
imul
cltd
sbbb
push
inc
cltd
std
mov
int3
sbb
xor
push
movsb
arpl
ds
jne
mov
sbb
inc
add
ljmp
je
push
xorb
lret
or
nop
enter
jns
jbe
call
cld
mov
push
cltd
inc
pop
mov
sub
inc
xor
rclb
shlb
jmp
jge
dec
outsb
les
jb
addr16
add
mov
mov
jno
jne
inc
dec
call
jb
lock
pop
sbb
imul
push
adc
mov
ret
dec
inc
movsb
add
or
mov
call
enter
mov
mov
inc
jb
mov
push
cli
dec
dec
cmp
fwait
mov
les
rol
and
clc
push
sbb
je
or
addr16
in
pushf
push
mov
aas
adc
lods
ret
mov
inc
aam
in
jns
cmp
pop
push
adc
lods
loop
and
and
dec
rolb
sbb
dec
call
pop
inc
add
roll
sbb
xchg
xchg
mull
sbb
js
mov
sub
mov
je
inc
mov
stos
inc
dec
jns
cmp
jg
jmp
add
andb
add
outsb
jo
imul
dec
repnz
xchg
arpl
addr16
outsl
jb
jbe
aas
inc
inc
outsl
fs
jbe
dec
insl
imul
js
repnz
ja
dec
push
outsb
pop
bound
js
push
jb
repnz
xor
ss
cmp
xor
and
pop
push
imul
insb
insb
outsl
push
outsb
and
popa
jno
imul
ja
outsl
insb
push
push
push
arpl
jg
in
push
push
dec
inc
dec
gs
push
inc
push
popa
inc
push
dec
inc
decl
inc
push
dec
inc
dec
xor
cs
xchg
jg
dec
dec
push
pop
pop
addr16
fs
dec
jae
push
pop
lock
ljmp
fs
dec
dec
insb
dec
dec
je
incl
and
inc
mov
aam
mov
push
xchg
xor
dec
mov
sarb
femms
or
dec
fadds
jp
out
push
sbb
add
inc
mov
aas
das
std
div
in
or
xor
out
in
aad
or
jmp
push
sub
les
inc
call
mov
fcom
xor
and
or
mov
loopne
lret
iret
mov
cwtl
mov
call
inc
jmp
adc
mov
push
lcall
push
cmp
clc
mov
fdivrs
decl
jns
pusha
outsb
lods
and
cmpsb
lcall
xchg
sub
loop
inc
mov
pushl
test
and
adc
fs
cmpb
imul
pushl
test
inc
jp
push
dec
and
pusha
pusha
pop
cs
andl
bnd
scas
nop
aas
inc
dec
dec
xlat
cwtl
push
xor
pop
inc
inc
stc
ret
push
les
cmp
mov
cmp
notl
jp
decl
dec
mov
fwait
das
sbb
sub
stos
mov
sub
pushf
outsl
and
cmpsb
jne
push
push
sbb
add
fidivs
out
jecxz
stc
pop
xchg
mov
int3
repnz
or
push
rcrl
pop
inc
jmp
les
cli
stc
push
jge
and
fcomi
adc
out
push
pop
lds
out
ds
insb
inc
gs
lcall
sti
inc
dec
push
xchg
mov
mov
aad
cmp
cs
push
cld
ror
mov
lret
mov
pushl
jno
xchg
mov
mov
mov
dec
sarl
shrl
ljmp
ja
insl
cmc
scas
push
lcall
cwtl
xchg
test
andb
jbe
popf
decl
mov
xchg
addb
pop
rolb
inc
jns
jne
push
lret
int
xlat
lcall
outsb
stc
loope
push
cmc
subl
cmp
mov
push
mov
movsl
inc
popf
pop
push
push
mov
push
push
push
inc
popa
jbe
inc
sbb
jne
or
aas
scas
jb
ss
cmp
popf
cmp
xor
mov
sbb
sbb
adc
xor
cmpsl
ficoms
and
mov
pop
test
and
sub
adc
push
jmp
sbb
pop
pop
out
outsl
pushl
add
cs
or
or
jecxz
and
jo
lock
xchg
lcall
mov
sub
lret
mov
jl
pop
xor
adc
mov
mov
dec
nop
pop
ret
jecxz
enter
ljmp
sbb
movsb
cmp
mov
int
decl
ffreep
sub
scas
in
xchg
scas
lret
cwtl
inc
outsl
push
mov
test
mov
lcall
jb
add
imul
shld
ljmp
xor
mov
jg
data16
jnp
and
fidivl
xchg
jg
insl
jmp
jmp
mov
pushf
arpl
pop
adc
pop
pop
inc
jo
pop
push
decl
cld
inc
lods
cmp
dec
xchg
dec
pop
push
dec
dec
ss
or
dec
inc
cwtl
sub
outsl
lock
aas
cmp
mov
xchg
inc
in
adc
sbb
lcall
call
sub
daa
dec
pusha
jno
or
and
sub
repnz
add
sbb
adc
adc
xchg
decl
dec
xchg
std
icebp
aad
inc
mov
mov
sti
outsl
mov
push
cmc
imul
in
fcoms
in
jmp
and
inc
pop
xchg
sub
mov
and
fisttpl
jmp
scas
popa
push
adc
push
xor
ror
xchg
mov
call
scas
pop
and
ja
std
xchg
dec
incl
pop
int
jns
mov
aas
fidivs
incl
xchg
sbb
and
mov
jge
mov
mov
xor
push
mov
and
pop
jge
scas
xchg
xchg
push
loope
pop
scas
in
dec
push
push
xchg
or
mov
push
incl
add
or
sub
pop
xorl
imul
movsb
out
push
lret
mov
or
pop
pop
sbb
push
cltd
push
push
cmp
incl
or
xchg
push
int3
scas
dec
inc
inc
sub
dec
inc
inc
push
cmp
stc
call
clc
inc
xor
cli
inc
xor
xchg
popf
adcl
sub
sub
or
pop
test
daa
add
addl
mov
or
or
mov
fldenv
insl
mov
mov
jp
fs
add
push
mov
test
mov
repnz
fsubp
loopne
sbbl
aaa
loope
mov
rclb
xchg
aaa
ss
fidivl
xchg
repnz
scas
incl
dec
andb
add
sbb
mov
lcall
lock
jmp
mov
es
mov
movsb
sahf
popf
pop
lret
or
pop
jl
mov
pop
call
mov
jecxz
outsl
and
lods
ret
ds
arpl
jns
xchg
jnp
jae
pop
and
pop
test
sbb
outsl
std
jmp
popf
mov
stos
inc
inc
jno
push
jl
imul
shrl
dec
dec
xor
pop
ljmp
gs
inc
arpl
cmpsb
mov
sbb
outsb
add
mov
lods
out
mov
ljmp
xchg
sub
push
scas
sbb
scas
inc
scas
fs
es
lea
sub
fwait
push
add
cltd
and
cmp
gs
inc
xor
clc
testl
jno
pop
loopne
jns
push
jb
ljmp
fldt
add
icebp
ret
jg
mov
fcomp
rcrb
arpl
iret
and
into
int3
lret
cmp
jmp
into
adc
mov
push
or
cltd
mov
ljmp
add
repnz
insb
push
int
jmp
pop
in
subl
jno
mov
pop
icebp
fidivs
test
in
xor
call
jge
xchg
push
mov
sti
js
pop
imul
xchg
das
insl
test
ljmp
fs
jge
jb
xorb
push
push
sub
sub
push
add
movsl
ss
jg
sbb
sahf
mov
jne
cltd
mov
sub
into
test
daa
push
dec
inc
in
test
aas
xor
stos
popa
subb
mov
shld
dec
jmp
data16
push
push
adc
sbb
push
adc
cmp
xor
pop
ljmp
push
add
add
push
xlat
sub
shrl
fists
call
mov
ljmp
cmp
jecxz
add
stos
cmp
adc
in
fistpll
out
into
cltd
mov
mov
outsl
cld
inc
pop
pop
add
movb
sahf
ss
mov
jae
dec
call
popa
fimull
shlb
push
test
cmpsb
cltd
cwtl
xchg
data16
mov
xchg
pop
clc
decl
fldenv
shlb
test
ljmp
shlb
lret
bound
test
aaa
mov
jmp
mov
push
lcall
rcll
test
xchg
ljmp
fcoms
fistl
push
arpl
or
clc
rcrl
test
inc
xchg
sub
dec
xchg
sahf
cmc
cld
cmp
xchg
jmp
sub
sub
pmaddwd
gs
leave
or
jns
fucomip
fistpll
mov
test
test
popa
repnz
jg
sbb
sbb
push
into
xor
call
xchg
mov
sbb
add
ljmp
hlt
xchg
mov
push
sbb
loope
leave
xlat
fstp
das
cld
pop
cld
add
inc
inc
cltd
popf
shlb
enter
ljmp
cld
aam
ret
mov
scas
jg
pop
inc
and
enter
jne
lock
js
lcall
sbb
loopne
mov
xchg
js
ljmp
sahf
adc
pop
mov
sbb
mov
test
mov
or
pop
into
dec
shrb
addb
mov
js
adc
js
xorb
mov
push
ljmp
push
cmp
shrb
inc
mov
pop
pop
jg
fnstsw
rcrl
cld
add
push
xor
adc
fdivl
push
cmp
cmp
loopne
imull
add
xchg
cmp
das
cmp
call
pushf
sbb
or
sub
jl
mov
lds
adc
arpl
jg
mov
data16
jno
mov
push
mov
add
add
mov
jg
cld
in
sbb
clc
scas
or
jle
leave
hlt
bound
jnp
jp
insl
sub
call
pushl
shrb
int
in
loopne
xchg
mov
xchg
call
mov
das
test
stc
pop
fildl
loop
xchg
fnstsw
rorl
decl
popf
scas
or
mov
imul
jge
dec
inc
movsb
mov
lret
scas
push
jmp
aas
test
xchg
cmpsb
mov
lcall
add
push
cltd
stos
lcall
xchg
jg
test
call
pop
add
pop
das
mov
inc
mov
jmp
lock
stos
ja
popf
imul
outsl
decl
lahf
test
insl
repz
inc
jno,pn
into
push
pushf
loop
aad
inc
incl
push
dec
dec
pop
mov
inc
inc
inc
sub
cmp
dec
negb
std
ljmp
cmc
mov
add
sbb
sti
sbb
call
daa
daa
sqrtps
clc
mov
mov
cmp
add
insl
jmp
mov
lods
mov
jg
add
push
shll
fwait
jmp
test
or
inc
cmc
sbb
scas
dec
mov
lods
es
lock
fsubrs
call
ss
ss
loop
push
leave
add
fstp
mov
test
pop
call
fcom
sarl
insl
xchg
jae
cmc
call
xchg
scas
test
mov
lret
mov
mov
fisttpll
stos
add
mov
mov
mov
lahf
mov
leave
decl
jb
clc
or
aad
aas
ds
ja
mov
lock
decl
adc
jle
jle
cmp
pop
out
test
jno
jo
dec
ljmp
pop
lcall
fs
lret
popf
testb
pop
inc
mov
loopne
fists
nop
leave
pushf
test
in
leave
cmpsl
addr16
incl
jo
daa
and
dec
cmp
mov
bound
or
jle
popa
sub
sbb
repnz
push
rclb
rcll
cli
pop
and
cltd
dec
fcompl
clc
sahf
and
mov
jo
add
cmp
pop
add
popa
cmpl
jg
dec
push
hlt
cwtl
push
shll
jecxz
rolb
in
cmp
outsl
push
xor
loopne
add
adc
shr
pushl
cli
aaa
int
sub
xor
xchg
stos
cmpsb
fdivrl
sub
or
mov
dec
jno
test
stos
xchg
shlb
loope
jg
inc
inc
cmc
mov
lcall
data16
sti
loop
testb
sahf
mov
decl
scas
test
imul
add
cmp
ss
sbbl
cmp
pushf
push
in
sub
push
pop
decb
sub
hlt
pop
pop
sbb
inc
adc
or
incl
dec
jb
jae
mov
inc
inc
inc
lret
orl
fwait
push
cmp
xchg
outsl
ljmp
mov
lods
inc
sbb
mov
jbe
or
mov
push
iret
loopne
sbb
push
pushl
mov
pop
ret
cwtl
popa
adc
dec
xor
or
das
cmc
call
mov
inc
fistpl
add
push
out
adc
sti
pop
cmp
mov
test
imul
out
inc
push
test
cmp
jle
cmp
xchg
aad
int
pop
fiadds
push
lods
adc
inc
shl
nop
dec
cmp
mov
sbb
and
js
xor
ret
das
std
mov
movsl
movsb
jg
movsb
fstpt
or
pop
xchg
fs
jp
pop
fdivrp
sbb
jp
movsb
xchg
test
lods
add
push
cmp
test
mov
adc
call
in
rcr
mov
out
pop
int3
mov
xchg
jne
pop
aam
xchg
inc
into
jne
or
mov
es
das
loop
loope,pt
push
das
cmc
das
icebp
mov
jl
adc
insl
dec
dec
mov
popa
das
icebp
or
test
dec
and
sub
sbb
call
repz
and
adc
mov
call
in
cmpsl
mov
cmp
adc
jmp
jle
in
rorb
pusha
add
test
ret
jmp
cmp
xlat
cmp
sahf
lock
xchg
in
mov
inc
rcrl
jmp
jecxz
fwait
scas
lds
sbb
fldcw
leave
sarl
incl
test
xor
test
fcom
or
int3
ret
ret
ds
jmp
mov
in
mov
das
mov
aas
and
pop
decl
mov
movsl
mov
mov
adcl
ja
inc
decl
mov
xchg
mov
jmp
inc
jo
nop
test
rorb
aas
mov
ja
jne
pop
dec
andl
push
jg
hlt
ss
fnsave
mov
insl
xchg
jo
aaa
cli
lcall
pop
test
xor
popa
rcrl
inc
jg
pop
dec
dec
fildl
imul
dec
cmp
cmp
jp
mov
push
cmp
in
mov
sbb
mov
lea
das
fdivs
mov
adc
sbb
out
jmp
stos
sbb
xchg
out
leave
or
rclb
std
mov
sbb
loope
out
gs
fstpl
cmpsb
in
in
movsb
add
andl
cmp
lret
dec
cmpsl
sar
xchg
mov
mov
sarl
sarb
or
mov
sub
fcomi
xor
pop
jle
mov
fs
jg
jp
aaa
outsb
xor
sub
das
ficompl
lea
mov
das
pop
scas
das
xchg
sub
mov
lcall
sub
fnsave
adc
jmp
push
push
or
out
lret
in
fsubrp
push
test
js
jo
loop
das
pop
push
insl
xor
jg
incl
push
push
cmp
inc
repnz
test
lods
mov
jle
jg
lret
lods
push
jns
dec
dec
add
hlt
cmp
xchg
or
inc
sub
xor
cmp
inc
dec
sbb
mov
xor
cli
adc
cmpsl
pop
push
mov
aaa
das
and
jp
mov
adc
add
lods
sbb
pop
pushl
and
mov
inc
add
daa
adc
and
hlt
div
cmp
jg
fildll
inc
or
movsl
repz
icebp
jmp
into
inc
out
decl
xchg
jge
pop
and
sub
filds
push
xchg
xor
lcall
mov
leave
mov
adc
cmp
mov
in
mov
mov
cltd
mov
in
repz
mov
loopne
incl
test
fldenv
out
icebp
inc
rcrl
call
inc
insb
lock
jg
aam
ret
mov
jbe
nop
adc
pop
mov
pop
xchg
test
mov
insl
xchg
mov
ja
gs
pop
inc
add
movsl
incl
push
scas
pop
aad
stos
loopne
jbe
and
cltd
aad
fucomip
xor
inc
jae
jb
add
daa
pop
push
inc
call
mov
jnp
scas
pop
sub
cmp
mov
adc
sub
jg
jmp
or
sbb
inc
loope
dec
or
lahf
push
cmc
adc
repz
sbb
mov
add
mov
jg
das
xor
pop
call
repnz
out
mov
sahf
jl
push
call
push
into
cmp
loope
sbb
xor
pop
cmp
aam
mov
lret
lea
out
fadds
pop
push
data16
mov
mov
test
cmp
mov
out
add
push
adcb
lock
mov
mov
test
lahf
sahf
xchg
push
jmp
xchg
adc
ja
mov
dec
ret
push
aad
lcall
pushl
repz
lret
nop
mov
jae
popa
outsl
outsb
push
lcall
icebp
ret
cmp
push
jae
sub
or
js
ficomps
push
push
and
in
push
fstpt
aaa
pop
cmp
lret
mov
or
xchg
bnd
repz
inc
dec
les
and
dec
es
repnz
pop
or
mov
es
repnz
ret
and
in
movsl
mov
add
inc
mov
lahf
fiadds
mov
jecxz
in
pop
pop
pop
pushf
xchg
cmp
adc
push
mov
adc
popf
out
jmp
mov
stc
test
add
cmc
out
xchg
mov
out
je
and
push
sbb
leave
mov
push
incl
and
adc
pop
mov
int3
mov
lret
aam
clc
fld
ret
cli
pushf
add
sahf
mov
test
inc
mov
cwtl
push
push
stos
xchg
ja
leave
sub
jmp
dec
xor
popf
popf
test
imul
mov
jg
test
insl
test
inc
popf
ljmp
fdivr
jb
xchg
sub
xchg
lret
jmp
pushl
jne
push
jp
xchg
movsl
jns
loopne
cltd
pop
pop
pop
jg
pop
loop
hlt
push
in
xchg
call
mov
xor
pop
decl
xchg
jle
loope
aaa
inc
lret
popa
pop
arpl
ljmp
xorb
aas
in
test
pop
mov
dec
std
inc
lods
and
aad
aam
out
push
popf
sub
rcrb
decl
adc
lcall
int
push
out
cmpsl
rcr
push
inc
cmp
lods
mov
in
out
test
stos
pushf
mov
in
aas
fs
dec
rcr
mul
in
mov
decb
sub
ret
lds
sub
decb
iret
and
mov
sbb
loop
loopne
pop
cmpsl
lds
adc
shrb
stos
or
das
setnp
mov
scas
orb
lahf
push
mov
lods
mov
mov
add
fists
sub
push
jmp
mov
or
jmp
or
enter
jg
outsl
inc
out
or
cs
jbe
push
sti
mov
pop
push
pop
insb
imul
ffreep
call
fimull
inc
lret
setae
dec
pop
lcall
adc
in
push
push
jbe
mov
xlat
cltd
inc
cmpsb
push
xor
xchg
ljmp
rorl
ficompl
orb
pop
out
repz
cwtl
aas
xor
cmp
sbb
hlt
mov
pop
sbb
lcall
xchg
mov
faddl
inc
bound
sti
pop
cmp
out
xor
jno
lea
aaa
mov
das
lock
jmp
cmpsl
mov
movsb
stos
aaa
xlat
inc
in
mov
push
incl
mov
out
cmpsb
leave
mov
je
sbb
adcl
jecxz
loope
sarl
mov
test
dec
dec
mov
das
stos
or
aam
lods
push
int
cmp
mov
loop
test
insl
sub
fwait
lret
jg
mov
jg
jg
cld
sbb
push
roll
jbe
in
inc
xor
call
cmp
jp
call
jmp
jae
jbe
inc
xchg
stos
ljmp
fnsave
addr16
pushf
mov
pushl
push
pop
pop
jle
lret
stos
mov
cs
dec
aaa
fs
jg
inc
or
int
ss
or
jge
test
loopne
fnstsw
dec
add
xchg
ret
xor
outsl
std
ljmp
pusha
and
sub
les
js
into
jns
xchg
sub
add
mov
mov
or
sub
sub
jo
mov
fsubrs
cld
ret
repz
in
aam
add
int3
int3
mulb
jnp
lock
fnstsw
loop
jg
fists
mov
call
das
hlt
xchg
pop
in
iret
fistl
or
mov
aad
rcrl
jmp
fiaddl
orl
shr
lcall
xchg
lcall
inc
clc
mov
lods
ljmp
jmp
lods
or
ljmp
mov
xchg
xchg
pop
andb
call
jge
leave
nop
jle
mov
push
push
dec
mov
das
adc
outsl
sub
call
mov
dec
add
shl
sbb
fs
jns
dec
sbbb
cmp
sbb
pop
dec
loop
insl
cmp
call
sub
mov
add
inc
inc
sub
xor
add
test
or
ds
adc
sub
mov
adc
cmp
sbb
js
xor
dec
add
cli
lret
incl
pusha
sbb
adc
testb
lcall
push
pop
cmp
or
fcmovbe
adc
loopne
and
or
adc
subb
fmulp
xcrypt-cfb
cmpsl
fs
out
push
ljmp
out
andl
mov
mov
icebp
lds
lret
ss
adc
fwait
jg
cmp
scas
inc
lds
in
iret
push
mov
sub
xchg
test
inc
xchg
popa
sbb
mov
clc
lcall
mov
mov
test
insb
jns
and
dec
inc
cwtl
aaa
pop
mov
test
pop
lea
sub
incl
repz
mov
or
dec
enter
or
add
jo
xchg
arpl
xchg
inc
cmp
test
cli
or
pop
xchg
divb
mov
stc
and
cmp
cmp
test
fwait
loop
stos
inc
pop
sub
mov
push
sub
or
frstor
push
xor
dec
xchg
pop
loope
inc
jg
in
and
arpl
xchg
adc
and
enter
out
clc
push
lcall
sti
out
jmp
jle
arpl
dec
filds
mov
adc
mov
insb
aaa
sub
clc
insl
or
lret
jb
pop
loop
cli
cmp
xor
mov
mov
lds
push
pop
ret
mov
das
ret
lds
mov
popa
or
and
adc
jge
and
ret
push
test
pop
jne
les
and
pushl
cwtl
xchg
sbb
xchg
xchg
push
popf
sbb
arpl
decl
or
rcll
ljmp
clc
inc
jecxz
ja
sbb
sub
mov
movsl
jmp
dec
dec
pop
jmp
dec
mov
push
jo
push
and
fnstsw
xchg
push
ljmp
cmc
xor
ffree
adc
xchg
int3
test
mov
jecxz
cmp
mov
dec
push
lret
call
sub
mov
cmp
hlt
and
shrb
xor
push
clc
divl
sti
cli
inc
loopne
jp
pop
sbb
ret
fcompl
call
inc
mov
push
push
lock
inc
mov
daa
repnz
movsl
fistps
jmp
int
lock
inc
jmp
mov
out
iret
lods
int3
pop
int
pop
sub
pushl
jnp
xchg
fsubl
xchg
mov
outsl
pop
rorl
test
cltd
xchg
das
icebp
call
lods
jmp
sbb
jp
mov
popf
in
mov
pop
clc
das
and
xchg
scas
nop
and
sarb
cmc
xchg
xchg
shrb
lock
negb
icebp
jnp
pushf
movsl
mov
dec
rorb
jmp
jo
outsl
addl
pop
mov
movsb
dec
ljmp
js
mov
jb
sbb
inc
stc
mov
pop
imul
push
in
call
fisubs
pop
and
push
rclb
cmp
sti
int3
mov
cmp
push
arpl
dec
pop
mov
inc
adc
test
addl
jg
daa
das
jle
enter
sbb
adc
mov
mov
push
jg
test
and
mov
mov
mov
cmc
fmuls
inc
push
or
fildl
out
inc
loope
ffreep
xor
das
hlt
test
ljmp
ljmp
sub
fucomip
dec
jl
leave
daa
fldpi
fsubrl
push
ss
pop
jbe
cmc
aam
mov
mov
inc
leave
jp
adc
ljmp
mov
in
sbb
mov
add
jg
inc
mov
adc
fwait
cmp
lods
out
xor
inc
inc
dec
inc
test
xorl
lret
mul
das
cmc
pop
pop
stos
jnp
jp
jne
jne
push
movsl
xor
iret
xchg
sar
pop
xchg
ds
subl
cmp
lock
xchg
popa
mov
iret
loopne
sbb
dec
mov
pop
pop
xchg
or
jecxz
pop
aas
nop
dec
outsl
xchg
or
dec
popf
push
and
lcall
jnp
call
in
and
daa
add
xchg
mov
mov
pop
call
adc
jg
jno
aad
call
loopne
sbb
decl
adc
mov
push
cwtl
adcl
cmp
lret
pop
mov
push
pop
mov
dec
jecxz
ljmp
pop
fldenv
inc
mov
out
cli
add
fs
pop
pop
mov
or
dec
xor
les
lea
cld
scas
push
movsl
fmul
sbb
popf
fisubrl
add
int3
stos
xor
inc
mov
inc
mov
mov
mov
lods
lcall
jecxz
jmp
pushl
cmpsl
pop
xchg
loop
sub
and
xchg
sbb
out
dec
jbe
cmc
mov
insb
mull
push
clc
jg
jmp
incl
in
push
pop
aas
push
lock
mov
mov
sub
pop
hlt
pop
fs
pop
mov
incl
incl
jmp
inc
call
or
mov
incl
ljmp
and
inc
movsb
adc
pop
sub
inc
pop
addr16
fnstsw
xchg
or
jb
ss
int
daa
ja
ds
aaa
xchg
mov
mov
or
push
dec
add
fisubl
lcall
fwait
aad
push
fdiv
daa
adc
jns
les
in
cld
sti
ficoms
pushl
bound
cli
lock
out
dec
cld
mov
add
adc
jecxz
test
out
and
ljmp
rcl
xlat
paddusw
mov
ljmp
lock
fsubrl
je
jbe,pn
cmp
test
aad
mov
insb
stos
in
call
dec
rcrb
scas
popa
add
stos
test
xchg
movsb
mov
xchg
mov
or
mov
push
sbb
ja
xchg
stos
pop
stos
lock
inc
call
insl
push
imul
xchg
call
syscall
push
ret
pop
mov
pop
dec
bound
fbstp
icebp
mov
outsl
dec
aaa
insl
arpl
in
xlat
add
iret
popa
sub
dec
push
push
fists
dec
dec
add
inc
xor
lcall
and
jae
icebp
xor
je
or
mov
adc
sbb
std
popa
ficompl
lods
or
sbb
add
call
push
dec
cli
pop
push
push
or
xchg
dec
shr
faddl
add
xchg
ja
mov
stos
jmp
mov
hlt
xchg
push
loope
dec
imul
cmp
adc
cld
mov
sub
sbb
aaa
enter
rclb
std
inc
inc
decl
inc
sbb
sub
jno
jg
jl
or
test
mov
mov
mov
xchg
mov
hlt
aaa
clc
or
sbb
iret
pop
push
movsl
and
hlt
or
mov
pushf
pop
push
fistpl
and
and
movsb
lock
jge
xchg
in
imul
addl
rorb
andl
imul
mov
psubw
mov
aad
mov
push
and
xchg
xchg
fistpll
testb
movsb
inc
inc
aaa
inc
dec
sbb
jg
notl
and
ss
icebp
das
incl
imul
stos
xchg
es
inc
mov
ljmp
in
sbb
or
cld
xor
les
test
or
and
hlt
ljmp
mov
adc
notb
outsl
outsl
mov
scas
jno
out
jae
das
mov
jg
mov
loop
repz
ficomps
add
xor
pushl
clc
daa
sbb
leave
sub
fstp
xor
adc
push
popa
test
lcall
iret
push
sub
lret
aas
mov
lods
and
add
dec
movsb
mov
or
mov
jg
mov
jge
ljmp
add
icebp
mov
mov
enter
insl
stc
xor
xchg
clc
sar
jno
insb
les
jae
ja
std
jg
xchg
xchg
hlt
cmpsb
lea
fdivrs
cmc
pushl
and
or
test
mov
sbb
jae
jno
pop
fnstcw
decl
xchg
sbb
mov
call
mov
in
dec
dec
cwtl
loopne
pop
dec
mov
lods
popa
inc
mov
jae
sub
pop
push
jg
jmp
mov
push
and
mov
sub
push
pcmpeqb
pop
mov
jp,pn
cmp
cmpsb
pop
add
mov
mov
dec
sub
hlt
or
jno
icebp
adc
inc
call
add
data16
sbb
lcall
bound
rep
xchg
sub
rolb
push
loopne
in
jmp
xchg
call
ffree
fmulp
fcom
inc
mov
mov
lret
pushl
ror
lret
mov
rol
push
arpl
test
stos
cmpsl
mov
incl
fldenv
jl
cmp
shrl
int
xchg
sbb
fucom
test
clc
rorl
nop
test
adc
popa
dec
test
testb
sbb
in
dec
dec
std
or
jp
stc
jle
ljmp
sbb
jle
std
das
mov
imul
inc
popa
xor
movsb
pop
inc
ret
dec
aaa
decl
push
data16
stc
in
sub
jl
inc
repz
inc
dec
in
ljmp
sub
jno
or
les
incl
cmp
sub
mov
mov
pop
adc
and
rcrb
add
leave
loopne
dec
and
or
cmc
hlt
or
pop
dec
push
mov
sub
cld
add
sarl
pop
add
jecxz
jg
inc
scas
or
cld
fsubrl
fdiv
push
enter
adc
cld
xchg
xchg
mov
mov
dec
mov
dec
mov
icebp
out
call
loop
fimull
popf
stos
cld
xor
repz
add
cmp
mov
push
jg
and
ljmp
std
mov
std
icebp
sahf
arpl
push
sti
jne
pusha
test
stos
shrl
outsb
dec
lahf
and
subl
mov
mov
xchg
jnp
push
and
std
outsl
mov
pop
mov
leave
leave
xor
xchg
es
push
fcomps
add
xor
je
jle
call
xlat
scas
aam
dec
pop
int
xchg
push
adc
mov
cli
test
repz
aaa
das
cltd
cmp
adc
daa
sahf
sub
mov
mov
inc
add
hlt
cwtl
xor
movsl
daa
xchg
push
pop
dec
mov
pop
mov
or
add
jnp
jae
loopne
aad
push
gs
sbb
ljmp
lahf
cli
add
ljmp
test
inc
jne
jle
jecxz
fsubrl
adc
push
movzbl
cwtl
shrb
call
in
lahf
pop
mov
lds
mov
cmc
fildll
xor
outsb
pop
pop
mov
iret
push
jecxz
nop
sbb
mov
mov
out
dec
fnstsw
jo
and
ljmp
xchg
and
pop
notl
jl
lock
sub
xor
add
pop
xchg
xor
push
subl
fneni(8087
cwtl
rorb
xchg
or
inc
sbb
jp
into
insb
jo
jnp
sbbl
xlat
out
pop
pop
cli
sub
arpl
pop
fs
xor
push
lcall
aas
mov
mov
pop
int3
in
mov
pop
pop
push
dec
jmp
add
in
movsl
ljmp
lock
inc
dec
test
xor
out
xchg
rcl
cmp
xchg
sub
xor
cmp
dec
repnz
ss
add
jo
loope
and
mov
in
test
das
add
jae
in
add
mov
incl
push
and
sbb
mull
mov
or
decl
ljmp
sub
movb
jns
repz
mov
sbb
jbe
insb
lods
fcmovne
cmpsb
call
lret
xor
lcall
ds
cli
sbb
cmpsl
mov
int3
push
popa
loop
push
int3
dec
lret
sub
ret
addr16
sub
ljmp
push
ret
aaa
xchg
cmpsb
scas
scas
cwtl
lods
mov
aad
add
dec
outsb
jg
incl
jecxz
mov
mov
pop
stos
sbb
mov
xchg
jp
mov
stc
pop
mov
rorb
cli
mov
add
and
test
out
pop
xor
fucomip
dec
pop
test
fs
dec
orl
pop
call
cmc
mov
push
int3
and
xchg
push
pcmpeqw
outsl
lock
pusha
xor
lcall
lea
adc
out
cmp
and
and
decl
push
cs
mov
or
daa
call
aam
cmp
aaa
lcall
push
addr16
iret
mov
push
inc
fidivs
fistps
outsl
clc
jg
in
jne
pusha
xchg
outsb
mov
out
cmc
fidivs
filds
popa
call
fsubrp
out
rorl
fidivl
push
incl
lret
sub
ss
inc
cwtl
push
leave
sarl
mov
push
inc
sub
mov
std
dec
inc
cmc
sub
incl
sti
movsb
popf
lea
ja
pop
mov
je
nop
mov
mov
mov
pusha
mov
pop
jne
pop
addb
jmp
xchg
lea
fs
xor
pushl
clc
jle
lods
pop
lret
mov
pop
or
call
sbb
lods
jg
inc
lods
sti
stc
cltd
test
and
dec
adc
inc
or
nop
inc
push
adc
cmp
cmp
pushl
pop
cld
jle
decb
je
inc
inc
inc
sub
daa
aas
ds
jle
add
js
and
ljmp
fdivs
cs
sbb
and
sub
add
aaa
xor
xor
sub
sbb
cmc
jg
clc
mov
adc
or
adc
flds
or
add
sub
adc
sbb
jne
out
cmc
cli
stc
scas
and
test
push
inc
icebp
xchg
ljmp
imul
sbb
cmpsb
call
into
loope
rorb
jmp
nop
adc
fld
bswap
add
stc
mov
push
adc
pop
int
sbb
inc
test
jl
jg
xchg
add
mov
incl
xchg
xchg
rorl
push
xchg
adc
adc
cmp
mov
daa
insl
icebp
flds
mov
adc
xchg
jle
xchg
das
cmp
or
int
and
mov
call
dec
mov
imul
imul
mov
test
mov
jg
into
jp
mov
call
and
sbb
and
push
rcrb
inc
test
xchg
call
outsl
std
in
xchg
and
pop
xchg
jmp
popa
lock
push
jle
aaa
clc
insb
lock
mov
lret
test
sbb
pop
mov
ljmp
dec
js
js
inc
cli
addr16
or
cltd
pop
mov
pop
push
dec
xor
outsl
push
loope
ret
orl
pop
ljmp
push
inc
test
aaa
cli
je
shlb
xor
jno
out
loope
push
sarl
shll
test
inc
mov
lods
and
leave
hlt
or
cli
cmp
clc
xchg
dec
xor
sahf
lcall
movsl
mov
mov
mov
mov
lock
loopne
fwait
adc
pop
xchg
xchg
xchg
jle
mov
fnsave
sbb
or
jno
jle
push
pop
xor
gs
jg
js
push
push
pminsw
xor
jb
mov
cmp
fsubr
aaa
pop
ljmp
pop
rcll
pop
into
sbb
xor
mov
or
fwait
lcall
or
inc
push
std
inc
sub
sub
rorl
fistl
inc
inc
inc
mov
sbb
repnz
jae
enter
add
sbb
xchg
xchg
outsl
out
daa
popf
movb
adc
out
add
movsl
decl
and
stos
frstor
sbb
jmp
pop
clc
pop
adc
pop
mov
aaa
clc
push
hlt
jle
fdivrl
in
add
adc
cmp
cli
loope
imul
fnstsw
lea
imul
insl
push
cmp
and
xor
or
cli
mov
test
data16
sub
ljmp
adc
mov
or
movsb
test
lods
dec
push
xchg
push
push
cwtl
xchg
dec
in
jo
inc
jp
mov
add
jp
outsl
clc
jmp
cmpb
inc
mov
les
pop
inc
pop
inc
inc
cmp
loop
in
lcall
fnstsw
loop
lret
mov
orb
mov
jecxz
ljmp
addl
ret
mov
lret
cld
dec
xchg
sub
cmp
jno
inc
subb
in
cmpsb
ljmp
fnstenv
mov
sub
push
xchg
and
jno
or
movsl
sahf
dec
aam
mov
sub
or
xchg
jle
mov
inc
inc
in
movsb
in
inc
dec
pusha
out
gs
loope
jg
push
mov
lock
push
cmpl
mov
into
icebp
ret
pop
dec
adc
xchg
aam
or
adc
cmp
xchg
fimull
add
lods
push
mov
scas
sub
inc
scas
sbb
decl
mov
je
xor
cmpsl
cmpsb
dec
mov
cli
jge
mov
test
and
test
lret
ja
xchg
clc
ljmp
mov
jae
lds
in
push
add
ljmp
inc
sub
dec
dec
pop
dec
dec
dec
dec
jne
xchg
jge
dec
insl
ja
insb
dec
pop
jne
imul
inc
leave
dec
insb
jne
cmp
mov
xor
add
in
jg
mov
jo
sbb
scas
add
cmc
mov
push
aam
hlt
fcompl
mov
arpl
mov
add
xlat
cld
outsb
fmuls
mov
mov
cld
push
sbb
iret
jg
adc
mov
xor
mov
mov
lock
add
pop
xor
insl
movsl
jns
or
fmull
sahf
pslld
jne
mov
mov
filds
fsts
mov
add
sub
fisubl
mov
mov
and
cld
lds
jle
lds
xor
sbb
into
mov
out
jge
aas
int
pushf
mov
cmpsb
jmp
imul
or
imul
mov
into
cwtl
test
push
mov
notl
sub
add
or
fdivl
inc
les
mov
ret
mov
inc
fnstsw
or
mov
push
sbb
sbb
out
idivb
inc
push
pop
adc
add
je
pop
jns
std
dec
aaa
push
mov
test
repz
or
inc
mov
ss
iret
pop
adc
js
mov
sahf
or
and
imull
bsr
add
stc
xor
mov
xor
xchg
mov
mov
pand
push
xchg
cmp
test
cmpl
in
mov
mov
lock
movsb
jne
leave
and
xchg
call
jmp
jae
into
and
cmpsb
pop
inc
and
ret
push
sbb
xor
sahf
sub
or
xor
jno
clc
repnz
popa
mov
std
mov
bnd
add
mov
xor
adc
dec
add
jg,pt
jl
data16
mov
mov
and
cmp
mov
mov
inc
mov
mov
outsl
ret
fisttpll
or
testl
imul
inc
enter
mov
mov
pusha
fwait
lcall
call
sub
sbb
mov
mov
jecxz
dec
scas
or
mov
jl
loope
es
orl
fwait
xchg
mov
je
iret
adc
jp
mov
sub
lea
jl
add
jecxz
sahf
lods
add
std
fmul
das
mov
cmp
aam
out
pop
inc
xor
xchg
add
dec
in
dec
cli
jecxz
sub
in
icebp
mov
je
fldt
adc
dec
adc
mov
ds
adc
mov
jle
fs
sbb
mov
lahf
int
repnz
pcmpeqb
hlt
enter
popf
data16
add
clc
decb
rorb
and
fsubs
pusha
jecxz
fstps
inc
push
aad
mov
add
fs
cmp
ja
les
movsl
fwait
sbb
sub
fwait
pop
imul
inc
adc
ret
xlat
lods
xor
add
pop
cmp
arpl
inc
mov
jecxz
hlt
push
stos
or
xor
mov
adc
sbb
outsb
mov
dec
aam
js
mov
cli
in
not
mov
sub
adc
mov
cmp
or
push
idivb
les
test
mov
ja
or
add
xchg
jnp
sub
add
add
jnp
sbb
jl
dec
push
sub
cmp
xor
lret
jmp
pop
jbe
mov
add
pop
clc
das
cmp
mov
lret
sbb
sbb
pushf
ret
test
cmc
jne
movsl
cmp
sbb
cwtl
mov
in
addl
jo
mov
add
fcomp
mov
mov
pusha
adc
pop
jno
xchg
mov
xchg
add
xor
fildll
popf
sub
and
add
xor
popf
inc
lock
inc
cmp
icebp
push
cli
push
xchg
fcoms
lret
or
mov
daa
pop
movsb
pusha
fstps
and
iret
mov
fistpll
mov
mov
jle
mov
hlt
dec
das
jbe
stos
push
aam
mov
rcrb
push
arpl
int3
adc
cs
imulb
out
xor
pop
pop
bnd
sbb
or
xor
addr16
pop
out
xlat
or
add
out
dec
cmp
outsb
mov
pop
loopne
insb
sub
in
repnz
mov
sbb
sbbb
inc
pop
popa
out
mov
sahf
in
pop
jne
or
jnp
cmp
xchg
mov
push
xor
imul
pop
idivl
sub
cmc
shlb
pop
sbb
jl
cmp
popl
mov
add
mov
scas
cli
pop
lahf
int
lods
fisubrl
jo
mov
dec
dec
inc
je
dec
call
lods
int
fs
fs
adc
cmpb
pop
adc
jge
and
iret
mov
leave
mov
pop
adc
cld
or
scas
lods
bound
iret
outsl
loop
mov
ret
jbe
pop
sbb
sbb
sub
aad
je
iret
cltd
lods
mov
jb
and
sub
pop
and
xchg
mov
cmp
xor
test
xor
fs
sub
jmp
inc
int3
dec
mov
push
add
fldenvs
loope
jns
cmp
add
dec
ja
xorl
pushw
jg
and
data16
aam
xchg
pop
adc
sti
dec
xlat
jae
mov
loopne
dec
mov
pushf
xorb
imul
jne
mov
int3
js
out
fnop
loope
or
fld
jp
enter
push
mov
push
sbb
scas
cmp
loopne
js
xchg
xchg
in
xchg
mov
imul
fs
xor
xchg
repnz
jmp
inc
xor
cmc
icebp
fwait
movsl
iret
js
cwtl
cmpsl
add
icebp
xor
push
fiaddl
hlt
test
out
push
out
sbb
jne
sti
ror
ss
repnz
adc
or
add
xchg
sub
sbb
popf
rcrb
xor
or
imul
in
xlat
ja
or
mov
jnp
add
test
push
inc
movsb
mulb
and
imul
push
pop
pusha
mov
ret
and
xlat
mov
icebp
xlat
mov
test
sbb
enter
jmp
adc
outsb
jg
push
jge
shll
test
mov
xchg
push
push
out
inc
adc
outsb
jl
dec
mov
cltd
inc
cmp
jmp
loopne
sub
adc
in
cmp
pop
lock
sbb
add
pop
cmpsb
pusha
scas
arpl
loope
xor
sub
in
mov
adc
and
mov
dec
pushf
lds
dec
add
xchg
pop
xchg
and
or
jno
cli
ret
lods
lahf
jmp
sub
mov
dec
mov
xchg
xor
out
fnstenv
xorb
stos
pop
or
xor
xor
sbb
sub
mov
aas
xor
fabs
sub
cmpsl
sbb
clc
xchg
dec
inc
call
bound
pop
cmp
push
iret
or
sbb
adc
lret
dec
pop
dec
pop
mov
sub
mov
mov
and
xchg
push
dec
lea
outsb
mov
lret
pop
outsb
add
inc
out
xor
lahf
test
adc
aad
out
leave
insl
add
dec
or
add
es
and
sar
push
movsb
dec
nop
leave
mov
jnp
mov
aad
pop
call
adc
and
ror
pop
adc
nop
sbb
jmp
mov
sbb
mov
imul
scas
rcll
movl
popa
pop
hlt
xor
inc
in
fadds
je
scas
mov
fcom
js
outsb
dec
outsl
int3
dec
sub
sbb
lock
into
or
add
call
sbb
add
dec
mov
sub
pop
pop
xchg
xor
clc
insb
lahf
in
adc
add
xchg
lret
js
in
out
loop
inc
jo
icebp
clc
mov
mov
sub
dec
test
daa
or
in
popa
jne
hlt
cli
aas
rorb
cmpsb
test
inc
pop
pavgb
into
jge
lea
aad
loopne
lods
data16
movsl
xchg
aas
fsts
add
mov
sub
dec
bound
cmpb
loope
mov
icebp
cld
cmp
scas
pop
dec
fdivrl
into
out
mov
cmc
mov
fistpll
mov
xchg
mov
mov
pusha
inc
fsubl
pop
icebp
push
ss
shl
clc
mov
ret
fimull
scas
enter
fcompl
pop
push
pop
push
add
and
int3
loopne
pop
cmpsb
pop
push
addr16
idivl
out
sbb
iret
inc
out
sub
fcmovu
lock
es
push
mov
movsl
dec
pop
ljmp
sub
aam
js
popa
sub
mov
jge
xchg
mov
movl
mov
sbb
fsub
or
jle
pop
rcll
stos
cmp
push
popa
jb
test
mov
sub
cmp
or
xor
mov
mov
dec
dec
cmp
or
out
dec
sbb
adc
lods
testl
adcl
adc
je
loop
in
jecxz
sub
add
popa
cs
cs
jle
xchg
cmp
and
lahf
das
lock
lea
lea
ja
dec
cmp
sarb
mov
je
loop
cld
hlt
pop
jge
jne
loopne
jns
jno
cmp
gs
jg
lret
testl
mov
sub
repz
icebp
adcl
add
in
dec
inc
dec
mov
pop
call
imulb
fwait
aaa
push
outsl
out
icebp
je
lcall
out
fistps
push
mov
in
inc
and
stos
mov
mov
xor
fisubs
in
scas
mov
inc
arpl
mov
rcll
or
or
stc
xchg
pop
inc
push
push
mov
xorl
gs
mov
adc
int3
sarl
adc
pop
pop
fstpl
out
lahf
outsl
sub
mov
xor
dec
test
push
push
push
aas
scas
jo
lcall
fisubrl
ss
dec
xor
push
ffree
or
add
dec
xchg
and
jle
orb
add
ret
pop
cmp
aam
pop
imul
jnp
dec
push
or
fadds
incb
pop
push
pop
lret
hlt
clc
enter
and
add
and
pop
in
inc
xchg
shll
sar
push
inc
push
addb
fcoms
inc
testl
repz
adc
cmc
cmpsl
rorb
inc
jge
iret
lods
sub
jg
or
subl
ret
cltd
xchg
fld
push
ret
pushf
inc
add
shlb
pop
push
aam
xchg
lret
imul
cmp
test
xchg
mov
sti
pop
sti
mov
and
push
pop
test
arpl
xchg
dec
aam
adc
mov
test
in
test
in
jl
pop
push
dec
aas
pop
stos
ljmp
xor
rolb
scas
or
pop
xchg
push
cmp
icebp
loopne
push
outsb
cmp
lock
dec
cmp
mov
jbe
fidivs
test
shl
push
pop
dec
jbe
aam
jnp
fistl
mov
ret
cmp
ljmp
adc
sbbl
inc
es
ret
fldcw
pop
test
jne
rol
mov
inc
bt
jecxz
dec
mov
call
rcrl
cltd
push
sarb
or
add
int
or
test
sbb
and
jle
fcmovnbe
adc
dec
loope
adc
adc
dec
push
cs
jge
loopne
lcall
pop
mov
lret
addr16
insl
loop
fldenv
or
jns
in
call
out
scas
sbb
ljmp
push
movsl
ficoms
mov
loopne
add
js
test
xchg
mov
xor
cmpsl
cld
xor
movsl
ret
cmp
daa
aas
shll
test
int3
data16
or
mov
jmp
call
call
aam
xchg
inc
fldcw
and
shl
loopne
repnz
dec
repz
cmp
imul
test
xchg
mov
push
pop
sbb
push
insl
sub
jb
imul
jo
pushf
test
call
add
mov
invd
cmp
cmp
xor
movsl
nop
pop
adcb
in
ror
out
xor
mulb
push
inc
repz
cmp
rclb
pop
out
clc
test
mull
and
jp
xchg
xchg
test
pop
insl
push
ret
aaa
les
xor
adc
xor
pop
clc
rol
push
pop
xchg
ss
jge
cs
inc
and
call
fisubrs
lods
incl
pop
out
in
dec
movsl
xchg
cltd
jge
or
addr16
insl
loope
pop
mov
popf
inc
repz
pop
loopne
leave
xchg
add
xchg
sbb
das
add
repz
out
push
les
sub
sarl
inc
cmp
adc
scas
adc
mov
shlb
outsb
nop
test
mov
fwait
adc
cmp
or
xchg
inc
sbb
mov
adc
jg
sbb
xor
shll
mov
clc
pop
adc
stos
sub
adc
cwtl
mov
and
addr16
sbb
repnz
scas
decb
enter
and
pop
outsb
out
push
jb
mov
cmp
cmp
sbb
out
dec
cltd
lret
mov
inc
ljmp
fstpl
mov
popf
push
jg
cs
dec
inc
mov
mov
mov
ja
mov
addl
xchg
or
rclb
xchg
les
lods
cli
xchg
and
inc
pop
mov
and
sub
adc
into
adc
lcall
ficoml
sti
sahf
sahf
lret
fnstsw
or
insl
fisubrl
cmp
mov
cmp
out
out
in
or
repnz
pop
jmp
shr
shrb
fstp
scas
sbb
outsb
pop
rcrb
stos
jae
cmp
pop
in
jne
pop
sbb
mov
cli
inc
dec
mov
arpl
inc
jno
arpl
pop
mov
adc
je
or
test
cmc
push
jg
mov
lock
push
rcrb
xlat
pop
mov
loopne
or
jno
pop
dec
jge
out
aam
push
sub
sbb
shlb
loope
loopne
or
mov
cmpsb
xchg
and
and
or
xor
push
xchg
or
into
outsb
imul
in
xorl
lahf
shrb
xor
aad
push
sbb
mov
xchg
lcall
in
ret
aas
addr16
fldcw
jp
sbb
xchg
inc
jge
mov
xor
sbb
js
and
mov
push
test
add
dec
push
cld
lret
iretw
add
pop
pop
test
jl
mov
mov
or
push
pop
mov
mov
es
movsl
and
cmpsl
pop
pop
mov
ds
xchg
xor
mov
aaa
jns
jmp
loopne
cld
adc
fdivrs
xchg
cmp
or
mov
imul
movsb
ret
cmpsb
adc
jmp
mov
lock
mov
inc
imul
pop
pop
adc
lds
mov
outsb
adc
sbb
adc
dec
and
mov
in
nop
inc
sbb
mov
mov
mov
bound
jge
ja
cmp
in
and
lds
jge
or
popa
test
loope
test
ss
call
xchg
add
add
jmp
inc
jecxz
cmp
jbe
pop
pop
mov
sahf
xor
js
loop
jp
icebp
jmp
and
xor
dec
cld
push
sti
bound
jno
loopne
dec
inc
sub
lock
inc
insb
push
shl
xchg
movsb
shrb
decl
pusha
mov
and
and
mov
xchg
xorb
test
mov
dec
pop
dec
sub
out
mov
mov
aas
lret
aaa
sbb
pop
add
push
cmpsl
popl
mov
jecxz
ficoml
fucom
xorb
xor
fisttpll
int3
pop
pusha
xchg
jns
jmp
bound
push
pop
xchg
shl
fisttpl
testl
movsb
xlat
aaa
ds
xchg
into
push
jmp
cli
fildll
call
jb
aam
je
push
insb
fs
xchg
pusha
mov
arpl
lret
push
fcomp
sbb
pop
outsl
arpl
mov
out
add
push
div
dec
stos
or
adc
sbb
cmp
cmp
repnz
push
mov
lock
sbb
xor
fadd
xlat
or
jbe
daa
inc
lahf
nop
sbb
xchg
jnp,pn
xchg
mov
ror
mov
outsl
mov
test
cmp
mov
push
pushf
sbb
bswap
mov
int
cld
loopne
sbb
stc
or
pop
shl
stc
xor
fcoml
loope
in
out
loopne
mov
push
ret
arpl
push
cs
popf
jae
mov
or
iret
inc
mov
insl
xchg
lret
add
mov
rcl
ret
adc
mov
push
cmp
int
jmp
mov
out
push
mov
dec
mov
jo
aaa
sarb
adc
insl
sbb
jo
mov
cmp
lret
xchg
test
xlat
je
cmpsl
ja
add
mov
in
call
mov
cmp
scas
jmp
jl
cmp
or
mov
mov
ss
pop
mov
jl
and
movsb
jle
sbb
mov
add
iret
scas
rorb
cmp
hlt
and
orl
popf
pop
fsub
sub
dec
daa
shlb
cmp
lcall
outsb
fldt
xchg
pusha
into
dec
insb
push
add
push
ljmp
xlat
cld
xor
aaa
dec
jl
mov
testb
lret
pop
inc
lcall
push
in
inc
jae
lcall
sbb
nop
sub
js
xchg
shrl
fisubs
int3
sbb
and
push
mov
inc
xor
out
pusha
mov
cltd
add
mov
nop
lcall
ljmp
xor
mov
push
adc
lret
enter
and
jle
xchg
sbb
mov
leave
out
jno
add
mov
fnstenv
mov
lock
mov
mov
xchg
fs
roll
xchg
mov
scas
jmp
add
or
sbb
jnp
insl
iret
outsl
stos
les
inc
mov
push
stos
hlt
push
decl
or
adc
lahf
sub
mov
popa
jne
or
aam
adc
rep
cmpsl
nop
aad
lcall
icebp
in
xor
fwait
push
fwait
cmpsb
movsl
xchg
or
sub
jle
addr16
inc
arpl
pop
pop
shrb
or
aam
arpl
add
pushf
or
fwait
mov
loope
sbb
mov
scas
aam
or
ret
ret
daa
ficoms
sti
cmp
mov
push
sub
and
dec
aaa
mov
clc
pop
in
test
cmc
xlat
andb
ss
shl
xlat
push
scas
jb
sahf
pop
dec
je
jp
cmp
cmp
cmp
sbb
lcall
stos
or
pop
das
mov
pop
mov
loopne
leave
out
mov
movsb
test
sar
pop
or
sahf
sub
shll
xor
sbb
shr
stos
int3
fcom
shrb
movsl
xchg
mov
aas
lcall
ds
ss
ljmp
int3
xor
aam
out
lea
and
lds
add
pop
pop
push
or
mov
fildll
add
imul
xor
xor
mov
dec
push
pand
or
cs
mov
testl
cmc
jo
xor
cld
jne
cmc
pop
adc
pushf
faddl
movb
pop
or
dec
sbb
push
pop
pop
mov
or
mov
add
xchg
in
sti
inc
addl
rolb
jno
pop
push
fdivrl
or
push
leave
push
test
sub
sbb
es
push
xchg
mov
cmp
sbb
test
lods
cltd
cmpsb
mov
rcll
mov
cmp
or
push
lcall
jmp
jmp
insb
inc
sub
lea
or
sbb
cmpsl
xor
sub
and
or
aad
cmp
popa
outsb
insl
sti
aaa
push
scas
mov
xchg
stos
mov
adc
popa
adc
imul
mov
movsl
push
fiaddl
mov
or
arpl
sbb
push
add
cmp
repnz
inc
idivl
mov
aam
push
jge
hlt
xchg
inc
jecxz
mov
outsl
shr
lock
out
xchg
hlt
call
iret
fcompl
pop
aaa
pop
sbb
outsl
dec
insl
xchg
inc
enter
sub
imul
je
aam
or
mov
scas
xchg
xor
add
push
sub
or
cmp
xchg
stos
add
inc
mov
xor
jnp
xor
xor
les
mov
inc
pop
xor
insl
lahf
push
int
out
mov
and
pop
repz
aad
ss
pop
sbb
mov
xor
loopne
in
sub
xchg
mov
xchg
daa
sub
xchg
sbb
jge
test
cmp
push
jmp
imul
mov
pop
pop
sub
add
shl
hlt
call
push
push
mov
mov
and
lahf
in
pop
add
or
stc
sarb
pop
jl
add
mov
insl
push
xchg
push
sub
xchg
das
rolb
cmovb
push
test
stos
fs
outsl
pop
jge
pop
incb
call
subb
sbb
dec
in
push
xchg
cltd
xchg
and
lods
pop
out
xlat
scas
data16
das
repz
repz
jp
imul
mov
pop
mov
femms
add
xchg
mov
mul
and
xor
xchg
dec
add
lods
insl
jle
in
add
add
pop
mov
xchg
mov
mov
fsub
ljmp
and
jnp
arpl
in
rol
gs
outsb
sti
pop
ss
rcr
cmc
and
fdivrl
pop
les
or
addr16
fldt
mov
fisubrl
mov
insl
lahf
loope
and
xchg
lcall
ret
xchg
xchg
mov
jecxz
addr16
add
jne
ficoms
or
dec
mov
adc
xor
fdivrl
adc
jae
sbb
xchg
xchg
rcrb
xchg
jg
pusha
lcall
add
xchg
insl
mov
fldcw
or
or
xchg
orl
sti
shrl
adc
rorl
mov
test
ljmp
lea
jae
mov
or
xchg
or
jbe
daa
sub
cmc
inc
jmp
popa
pop
jne
out
jo
xor
ss
adc
sbb
jp
addr16
and
fdivrp
push
mov
xchg
sub
adc
loop
jecxz
sahf
sub
sbb
dec
jae
arpl
sbb
dec
inc
cmp
and
fsubl
mov
test
adc
lcall
mov
adc
add
xlat
sti
sub
enter
jl
mov
pop
stos
or
pop
in
daa
or
or
fildl
ret
int
push
test
data16
into
mov
inc
in
sbb
pop
inc
aas
sbb
push
dec
rcl
ja
push
es
shll
sti
xchg
clc
mov
ja
push
jecxz
dec
lds
ljmp
mov
sbb
xor
sub
xchg
arpl
and
cmp
int
push
and
push
fistpl
fdivl
pop
inc
mov
mov
mov
fists
out
mov
in
xor
lods
leave
cmpsb
cltd
rorb
xor
shlb
push
dec
mov
aam
cmp
popa
and
mov
or
sub
out
mov
add
gs
xchg
loope
fadd
imul
pop
push
mov
test
mov
ret
jb
mov
adc
jbe
rcll
rclb
cli
add
inc
insb
rcll
orl
sbb
test
xchg
inc
add
out
jb
add
xor
lahf
xor
xlat
mov
mov
je
mov
shlb
mov
mov
sbbl
and
mov
xchg
call
es
aas
inc
dec
icebp
mov
mov
lock
testl
xchg
jns
cmp
xor
or
std
call
adc
loopne
mov
inc
das
sbb
sbb
pop
lock
jno
in
mov
repnz
negb
subb
sahf
call
jae
stos
mov
mov
dec
lret
out
or
mov
loop
add
arpl
shrb
lret
add
sub
cli
pusha
xor
rclb
cld
jle
out
or
push
cmp
dec
lret
mulb
in
in
add
cld
clc
inc
pop
fsubrl
fsubl
push
inc
push
jmp
aas
pop
punpcklbw
mov
xchg
inc
pop
mov
cwtl
pusha
lahf
cmp
xchg
sbbb
clc
mov
popf
les
add
data16
notb
sub
mov
fcoms
mov
gs
ljmp
or
pop
js
or
xor
xchg
xchg
scas
outsl
cltd
push
sbb
pop
or
bound
xchg
arpl
cmpsb
and
pop
mov
sub
test
push
ret
dec
shll
mov
pusha
mov
adc
mov
mov
sub
jmp
call
jg
pop
scas
test
jo
aad
cmpsl
inc
push
sub
or
inc
mov
daa
das
jns
fidivrl
pop
pushf
mov
adc
xor
jbe
ds
cld
mov
mov
mov
fbstp
add
into
pop
test
in
mov
lock
fdivs
xor
cltd
mov
rorb
lahf
push
test
mov
outsl
adc
push
jb
cmp
fs
fdivr
clc
rol
push
xchg
jmp
jmp
dec
xlat
fdivrs
movsb
push
push
ljmp
and
xor
scas
dec
sub
es
push
xchg
loopne
daa
mov
push
out
inc
sub
arpl
adc
inc
mov
pop
sub
push
cmc
xor
sti
je
push
inc
pop
dec
test
cmc
jbe
ret
xor
mov
roll
mov
jns
pusha
xor
sbb
out
mul
push
fucomip
mov
xchg
jnp
push
or
fwait
inc
adc
or
pop
stos
clc
pusha
and
sbb
test
out
xchg
inc
fcomps
add
insb
stos
mov
sub
mov
dec
out
adc
daa
inc
cmp
inc
das
inc
xchg
jp
fdivs
decb
pop
imul
mov
mov
stos
sbb
add
xor
jbe
jne
jns
sbb
xchg
fdivp
pop
push
or
xchg
es
repnz
bound
fcompl
add
and
lahf
cmpsl
pop
mov
lea
inc
sbbl
cmp
mov
mov
iret
or
int3
sbb
nop
push
push
dec
xchg
xor
xchg
ss
mull
jbe
clc
sbb
sbbl
shr
mov
arpl
inc
and
push
sub
cld
xchg
rol
push
pop
fdivr
mov
pop
cmpsb
fxch
or
sub
clc
xor
mov
leave
repz
xor
mov
sub
je
int
sub
add
cmp
jne
sub
push
pop
je
adc
sub
sub
push
bound
xchg
or
and
roll
mov
out
sub
inc
cmp
pop
cs
sbb
dec
sbb
xor
push
scas
fnstsw
sub
in
inc
test
add
push
add
or
jecxz
loop
aad
fadds
mov
lods
adc
cwtl
and
and
movsl
faddl
pop
je
outsb
fmuls
push
lea
cmpsb
cli
mov
and
ja
fstpt
and
inc
xchg
or
jo
mov
pusha
add
jge
xor
and
call
mov
or
sbb
dec
jmp
mov
adc
stos
inc
jg
pop
sbb
or
hlt
lea
lods
loope
les
sbb
sub
insl
imul
loopne,pt
nop
iret
or
jmp
repnz
fidivs
xchg
lock
xor
test
pop
sub
cs
insb
repz
xor
xchg
mov
stos
daa
cmp
cwtl
add
jg
mov
in
xor
ljmp
add
dec
xchg
jp
push
lahf
xchg
xor
jmp
testl
and
dec
adc
in
xlat
int
arpl
jp,pn
js
jne
or
cmp
cmp
jne
xorb
pop
repz
jae
inc
int
call
pusha
dec
outsb
add
aas
movsl
inc
loopne
addr16
push
pushf
add
adcb
out
adc
add
jno
xor
dec
xor
xchg
xchg
and
or
cmp
sub
xor
clc
sub
into
mov
or
jae
incb
pushl
jne
xor
or
push
cli
pop
ret
sbbl
cwtl
add
xor
jb
push
jmp
call
add
stos
pop
sbb
in
lock
rcll
pusha
fsts
lcall
push
cmpsb
xchg
xchg
jo
scas
shrb
lret
inc
leave
test
ret
xacquire
scas
add
cmpsb
xchg
add
fistpl
jg
mov
cmpsl
mov
push
out
mov
or
fadd
pop
outsl
jge
fdivrs
les
sub
mov
ficoms
xorb
xlat
lret
rcrb
popf
out
cmp
test
push
dec
xchg
and
adc
test
gs
les
mov
mov
mov
and
ds
sub
hlt
pop
test
sbb
pop
jg
xlat
mov
jbe
dec
mov
imul
push
jl
mov
int
ret
aad
pop
ds
roll
sbb
loop
jb
aaa
mov
push
incb
push
loop
lods
call
xor
jg
sbb
fs
js
xchg
push
lods
or
cwtl
jnp
cmpsb
push
mov
sbb
and
insl
push
fcomp
xchg
inc
scas
dec
test
sbb
shr
dec
jno
jb
rorl
pop
orb
bound
sarl
mov
out
jmp
mov
jo
and
aam
inc
sbb
fstpt
adc
ja
adc
ss
push
sbb
insb
rol
movb
ss
jp
adc
test
ret
xchg
mov
pusha
xchg
inc
add
dec
arpl
or
fdivp
fsubr
fsubp
in
mov
pop
jp
stos
aas
or
xchg
js
inc
not
mov
adc
fs
and
js
mov
push
pusha
add
add
sub
lods
addr16
cmpb
sbb
or
cmc
arpl
xchg
fisttpl
in
sub
testb
ror
test
push
pop
cmp
and
stc
scas
dec
inc
jbe
imul
mov
test
push
mov
sbb
popf
or
cmpb
sbbl
and
out
mov
and
lret
sbb
or
in
movsb
js
cwtl
lahf
mov
ja
jp
loop
sbb
mov
add
arpl
and
push
push
adc
add
inc
jbe
ret
test
pop
add
pop
push
xchg
addb
sub
cmpsb
xchg
mov
sar
adc
sbb
je
cs
nop
mov
ljmp
or
push
cmp
sbb
mov
mov
mov
scas
jp
aam
test
imul
lods
mov
repnz
pop
je
imull
or
mov
xor
mov
out
cwtl
je
adc
fstl
fcmovb
jg
adc
xchg
adc
or
outsb
gs
sarb
xor
sahf
test
xor
rolb
pusha
leave
mov
or
int3
inc
insl
cltd
inc
ret
std
sbb
jmp
mov
loopne
hlt
push
jne
add
in
mov
lret
sbb
mov
rclb
mov
out
subb
stc
fsubs
clc
dec
out
shlb
outsl
add
in
inc
dec
push
pop
add
test
movsl
mov
pushf
sbb
sbb
add
sbb
cmpsb
mov
fsubrs
mov
push
sar
jae
push
mov
cmp
mov
rolb
movl
mov
idivl
mov
fcomps
xor
or
adc
dec
rcl
loop
push
mov
xor
jecxz
pop
notb
sbb
cli
loop
add
jecxz
imul
in
int
lahf
jb
xor
sub
cs
cmp
sub
ficompl
mov
mov
mov
add
and
ljmp
push
stc
scas
cmp
mov
sbb
mov
rol
loope
cwtl
cld
mov
mov
xor
imul
xor
sbb
icebp
cltd
cmc
jmp
adc
xchg
mov
and
adc
les
inc
std
xchg
fisttpl
and
fmuls
iret
sarl
clc
add
lock
in
sub
sbb
xchg
imul
xor
imul
cmp
lock
enter
mov
outsl
mov
test
ret
jmp
dec
fcoms
or
ror
insb
test
test
inc
mov
push
out
xchg
inc
mov
xor
andl
bound
clc
xorb
ret
test
lahf
leave
and
scas
dec
out
movsb
push
mov
and
lock
inc
idivb
outsb
pop
shl
adc
fistl
pop
mov
xchg
mov
sbb
or
in
out
arpl
test
add
jne
fcoms
int
popf
in
ss
jne
cmpl
mov
call
divb
mov
inc
mov
sub
arpl
push
adc
cmp
or
xchg
call
mov
andl
cmp
mov
adc
or
sub
xor
or
aas
xchg
inc
popf
addr16
mov
or
push
push
pop
xchg
clc
testb
and
cli
add
inc
and
sbb
jns
pushl
cmp
adc
or
adc
dec
mov
mov
out
xor
ljmp
pop
mov
js
fnstcw
mov
cmp
cmpsl
outsb
dec
sub
repnz
push
pop
icebp
rcrl
mov
in
push
xor
fwait
or
loopne
jnp
cmp
icebp
xchg
shlb
hlt
test
cld
adcb
sbb
in
and
stos
imull
inc
das
jg
inc
mov
mov
or
xchg
push
dec
mov
ret
addb
sbb
ret
mov
mov
test
push
cmp
inc
dec
add
fst
fstl
mov
sub
ret
stos
inc
xor
pop
sarb
stos
test
adc
gs
repz
call
or
mov
sarl
loopne
add
adc
xchg
cmp
pop
shrl
ret
addb
stos
rorl
jb
fs
inc
rep
add
sub
xchg
sahf
mov
inc
repnz
ret
sahf
jmp
xchg
xchg
adcl
cs
scas
popa
push
sbb
xchg
ja
pop
or
adc
fs
push
xor
inc
adc
xlat
lock
sub
xor
call
xchg
out
pop
or
dec
sub
add
jge
repz
ficoml
test
xor
sbb
cmc
jmp
sub
jge
cmp
pop
ss
or
xchg
jp
mov
push
movsb
fimull
jmp
scas
dec
notb
xchg
push
mov
fnsave
ss
cmc
push
cltd
testl
xor
nop
push
xchg
in
les
push
or
std
and
test
pop
xor
fildll
adc
add
divb
push
jl
fsts
jmp
adc
sub
xchg
push
out
mov
in
ret
pop
mov
xor
sub
xor
aaa
mov
inc
xchg
test
jg
jne
add
add
xchg
loope
je
add
push
mov
inc
or
jmp
xchg
icebp
cmp
jno
push
outsl
out
sbb
push
data16
lret
rcrl
dec
hlt
popf
lea
mov
cmp
mov
rep
shll
into
lods
addr16
sbb
aaa
enter
jg
inc
data16
insl
mov
loop
cltd
push
dec
addr16
aad
pop
es
call
fdivs
scas
popl
push
imulb
lods
mov
mov
mov
jecxz
sbb
push
jbe
mov
cmp
jae
mov
mov
sbb
pop
mov
xchg
adc
loopne
mov
jne
iret
mov
or
cmpsl
sbb
repnz
push
adc
inc
push
rclb
sbb
or
inc
adc
rcrl
pop
insl
int3
push
push
ror
add
loope
push
stos
lods
fstpt
clc
dec
gs
test
cmpsb
scas
or
cmpsl
js
ss
ljmp
daa
adc
fwait
dec
adc
in
mov
pop
mov
xchg
rolb
mov
xlat
adc
cmp
mov
incl
adcb
js
mov
and
mov
cmc
mov
mov
pop
lods
negl
dec
push
push
pop
mov
nop
push
xor
faddl
aam
mov
mov
mov
mov
push
rcrl
divps
roll
cmp
cwtl
sbb
adc
push
cmc
mov
dec
cmpsb
fs
inc
mov
inc
in
mov
xor
xorb
sbb
push
pop
shll
sbb
ja
and
outsb
fwait
bound
loop
sub
add
lds
ret
mov
mov
and
test
inc
lret
ljmp
jle
and
in
push
aas
out
mov
les
push
add
imul
popa
push
mov
add
adcb
or
mov
loopne
aad
daa
mov
push
xor
out
jne
push
stos
aad
jge
xor
call
fildl
pop
xchg
ja
mov
mov
enter
jnp
call
mov
push
and
inc
daa
sahf
icebp
inc
lods
es
xor
aad
lock
in
shlb
inc
mov
cmpsb
adc
imul
jle
push
gs
sti
mov
int
sarl
adc
daa
mov
imul
adc
jo
dec
ja
cs
divl
inc
xchg
into
in
and
ljmp
mov
dec
fcoms
add
in
adc
fstl
pop
add
fwait
mov
lods
dec
mov
call
inc
addb
mov
clc
cltd
mov
outsl
clc
cwtl
mov
mov
sbb
lret
xor
out
pop
inc
loope
vpsubsw
inc
mov
and
mov
push
lcall
and
rorb
adc
stos
rcr
push
ljmp
clc
dec
cltd
jp
push
cmp
mov
sub
xlat
jnp,pn
dec
js
ljmp
jge
je
movb
popa
mov
fdivs
cmc
xor
dec
jl
shll
in
mov
andb
dec
xchg
stos
popf
adc
test
lret
cmc
aad
das
outsb
inc
mov
aas
pop
sbb
cmp
sbb
stos
pop
out
pop
push
fistpll
ja
call
or
inc
es
push
mov
loopne
and
jle
inc
in
out
pop
aam
push
clc
sub
mov
push
fwait
lea
jb
leave
pop
les
push
adc
popf
dec
addl
inc
fstpt
mov
cli
scas
scas
jge
pop
push
dec
xchg
and
push
xchg
xor
mov
push
jmp
xchg
ret
insl
test
push
fcoml
pusha
inc
ret
add
push
out
mov
sbb
mov
enter
xchg
mov
push
movsb
jo
insb
mov
sbb
ljmp
imul
outsb
pop
mov
xlat
into
jp
bound
fbld
jl
mov
popa
xchg
push
jae
cwtl
xchg
xchg
or
adcl
sub
icebp
sub
inc
aad
sub
lock
jne
psubd
repz
dec
jns
fidivrs
jno
inc
pop
cld
bound
dec
addl
movsb
lcall
mov
cwtl
arpl
xchg
xchg
sbb
outsb
and
jge
mov
fidivs
jge
testb
in
fildll
shrd
rorb
loopne
jno
les
shrl
sahf
jno
sub
pop
fcmovnu
popl
mov
bound
je
cmc
stos
stos
imul
jns
jge
hlt
mov
in
jbe
icebp
das
mov
pop
cs
ret
add
dec
pop
jecxz
lock
in
arpl
sbb
pop
je
flds
fistps
iret
mov
ret
aaa
loope
mov
out
pop
movsb
iret
mov
hlt
rorl
xor
adc
popf
outsl
mov
inc
pop
lock
out
jb
push
addr16
mov
xor
push
xlat
xor
roll
jb
paddq
stc
adc
or
bswap
daa
mov
jb
inc
inc
and
ret
insl
xor
shlb
jnp
stc
out
dec
js
pop
icebp
and
cmove
negl
in
cmp
jno
sub
push
int
aaa
adc
movaps
push
pushf
fmull
sbb
or
or
fildl
out
shll
inc
out
in
cs
xor
aas
insb
pop
orb
push
js
scas
into
or
imul
mov
pop
jle
push
xchg
pushl
aaa
adc
shll
or
les
fmull
mov
mov
mov
outsl
add
inc
mov
stos
xor
outsb
cmp
pop
xor
movsl
mov
test
xorb
pop
bound
lock
dec
lahf
fidivrl
shl
sub
jl,pt
fcoms
dec
xchg
lret
decl
and
mov
mov
sbb
mov
insl
pop
je
mov
adc
push
push
mov
popa
stos
popa
pop
daa
ss
cmp
mov
xlat
jmp
sbb
pop
call
hlt
ds
or
xchg
adc
xchg
or
nop
mov
mov
dec
mov
rol
pop
daa
lock
sub
sbb
aam
xor
jge
andl
sub
push
jmp
out
ret
mov
addr16
push
fldcw
jne
or
scas
push
arpl
dec
fdivrs
popa
mov
sbb
mov
cmc
movl
scas
pop
push
inc
jg
cmpsl
jns
or
in
and
into
shr
scas
scas
mov
xor
js
jnp
push
xchg
adc
sbb
ljmp
mov
pushf
lods
xchg
call
sbb
jae
inc
mov
aad
push
push
push
pop
insl
les
push
pop
push
dec
hlt
jbe
sbb
push
xchg
ret
incb
fnsave
xchg
xchg
ret
add
subl
je
add
fiaddl
mov
mov
inc
add
orb
jno
mov
or
stos
btr
pusha
movsb
pop
pop
imul
pop
sub
xlat
xor
xchg
mov
and
pop
imul
popa
dec
outsl
insl
ret
lds
or
clc
sahf
jecxz
pop
outsb
outsl
sbb
cmpb
and
xor
push
lret
cwtl
sbb
push
je
and
ljmp
popa
rolb
xchg
mov
andl
outsb
pop
sub
test
cmp
out
mov
frstor
ss
push
or
push
ds
in
jecxz
sub
sub
pop
pusha
mov
cmp
or
fwait
pop
pop
mov
sbbb
pop
aaa
sub
insl
fwait
lods
aaa
add
and
data16
and
mov
mov
leave
in
test
dec
scas
add
lcall
ja
outsl
push
jo
xor
and
fcmovu
inc
lds
or
rcll
dec
adc
enter
lahf
lea
lock
sub
push
cmp
lcall
ds
cltd
mov
push
incb
aas
shlb
loopne
into
pop
cmpsl
ljmp
xorb
jo
fstl
push
dec
or
mov
dec
sub
andb
aad
pop
jge
mov
mov
pop
xchg
imul
clc
pop
jmp
xchg
cmp
sbb
jle
add
sbb
inc
movsl
adc
pop
je
mov
and
and
sbb
dec
mov
cmpsl
test
fcoms
sub
aas
loopne
push
test
ss
daa
mov
sbb
sbb
and
jns
les
sbb
mov
sub
push
mov
cmpsb
lcall
das
cmpsb
pop
lea
popf
mov
mov
cli
hlt
das
jns
imul
sub
mov
pop
mov
mov
xorb
cmc
mov
or
xor
orb
or
popf
inc
xlat
jno
stos
lahf
cs
and
das
hlt
inc
iret
pop
cmp
dec
mov
lea
pop
ljmp
movsb
loope
roll
xchg
int3
jo
in
sub
inc
push
ficomps
jbe
mov
inc
clc
pop
add
adc
jbe
push
jl
out
sbb
clc
lock
or
pop
outsl
rorl
imul
jmp
nop
mov
pop
or
fadds
std
inc
sub
test
pop
mov
or
push
mov
faddl
add
push
stos
aas
sbb
negl
sub
ret
mov
shl
pop
ror
loopne
std
adc
cmp
lods
mov
xchg
mov
mov
movsb
mov
daa
mov
pop
clc
inc
add
jmp
ret
push
icebp
pop
cs
and
and
push
test
pop
mov
lahf
jl
outsb
xor
nop
add
fstp
cmp
push
cmpsl
cmc
scas
ds
pop
repnz
and
adc
repz
dec
jl
inc
xchg
daa
out
jnp
or
fcmovnbe
jmp
loop
mov
and
out
dec
je
mov
sarb
ss
xchg
pop
int
xor
inc
jno
cld
push
cli
in
mov
xchg
push
dec
dec
cmpsb
xchg
mov
mov
ss
or
or
or
nop
or
push
pop
jmp
pop
inc
push
pop
push
je
std
test
insb
xchg
sub
ds
sbb
and
mov
fsubl
push
movb
push
mov
jmp
or
inc
mov
js
sbb
clc
xor
add
cmp
mov
push
push
mov
pop
sub
aam
shl
cmpl
insb
xchg
xor
sbb
push
mov
and
or
jl
out
push
aaa
pop
push
jne
sub
mov
ljmp
adc
or
divb
mov
shrl
mov
mov
fyl2x
sarb
pop
xlat
cmp
sarl
lods
test
push
mov
adc
imul
test
daa
cs
mov
xor
xor
dec
lret
sub
subl
shr
inc
clc
inc
rorl
call
mov
mov
add
push
xchg
outsl
test
add
lret
xchg
xor
mov
test
sub
add
aam
pop
push
rcrl
jne
sti
ss
mov
add
pop
jmp
je
fdivrs
and
add
mov
xor
mov
test
sbb
jbe
mov
orb
jl
ss
dec
sbb
jno
int3
mov
mov
dec
das
test
xor
push
cld
insl
movsl
shl
repnz
or
xchg
pop
mov
mov
push
icebp
mov
cmp
jle
sbb
pushf
push
adc
test
mov
pop
sbb
loope
pop
rcrl
adc
int
adc
fcom
movsb
mov
daa
sbb
leave
stc
mov
inc
cmp
fisubl
mov
nop
push
sbb
jo
shlb
out
xor
mov
data16
in
add
clc
pop
sub
push
leave
pop
ret
fcmovnb
test
xchg
orl
xor
mov
fstpl
shlb
shrb
mov
je,pn
mov
push
mov
mov
jns,pt
loop
test
add
daa
ljmp
jo
push
pop
and
nop
dec
scas
pop
mov
sub
dec
outsb
sti
inc
jnp
mov
decb
push
es
or
sbb
sbb
dec
push
cmpsb
mov
xchg
repz
adc
stos
mov
or
inc
test
cmp
movb
cmp
icebp
rcl
fcmove
lcall
cmp
push
std
mov
stos
sysenter
xchg
subl
pop
insl
cmp
scas
mov
mov
xchg
add
int3
push
pushf
cmc
repnz
sub
mov
pop
dec
jp
lahf
mov
pop
int3
mov
and
dec
lahf
add
mov
mov
mov
aam
lods
clc
mul
sbb
inc
popf
repnz
lcall
add
jbe
mov
cwtl
and
jge
imull
popa
fwait
and
or
push
lods
inc
pushf
popf
jo
das
sub
xlat
inc
lods
pusha
pop
ret
fcmovnbe
push
jmp
ja,pt
lcall
fs
adc
paddusw
movsb
rclb
add
loop
sub
fmull
cmp
clc
outsl
dec
push
jo
jl
dec
test
fadds
sbbl
call
outsb
dec
dec
cs
cli
or
movsl
xor
subl
stos
je
mov
je
pop
ret
lea
push
stos
or
decl
or
mov
jmp
push
dec
nop
insl
stos
xlat
push
scas
inc
mov
pop
mov
sub
ds
popf
xor
imul
mov
xor
test
push
mov
addr16
adc
data16
das
cld
jae
jl
ret
push
lea
arpl
sub
popf
push
mov
ljmp
outsl
lock
mov
or
push
mov
fnstenv
leave
sbb
fmull
loope
jl
push
mov
mov
sahf
and
jecxz
or
sti
cwtl
sbb
xchg
mov
push
ret
data16
dec
mov
out
xchg
rorl
les
lahf
pop
cmp
popa
inc
cli
jo
xchg
add
clc
push
mov
cwtl
stos
cmp
mov
xchg
imul
push
push
adc
cmp
imul
loopne
call
data16
filds
mov
sbb
pop
and
sub
fistpl
mov
cmp
arpl
or
mov
fmull
inc
jnp
mov
mov
in
or
mov
stos
fistpll
repnz
or
jg
inc
in
nop
mov
lea
std
aam
cli
xchg
push
sbbb
sbbl
and
in
and
and
lcall
adc
pop
sbb
sub
jae
mov
push
and
aaa
mov
jge
icebp
aaa
sub
fsts
dec
sub
stc
nop
test
in
dec
push
xchg
mov
xchg
addr16
adc
push
xor
aas
mov
add
pop
insb
inc
cmpsb
inc
mov
sbb
jo
cmp
mov
push
or
pop
push
rcl
jae
adcl
arpl
and
push
stos
pop
das
jecxz
inc
inc
mov
lret
rorl
mov
xchg
mov
lds
push
mov
pop
sub
enter
dec
sbb
mov
xor
or
adc
jge
imul
mov
and
cld
ret
add
inc
mov
dec
or
pop
mov
movsb
sti
jp
lret
mov
lds
and
pop
shrl
pop
push
ljmp
mov
push
movsb
push
jle
push
sbb
push
insb
jp
mov
ljmp
insb
in
xchg
aaa
add
loopne
add
push
cli
aaa
jb
pop
mov
cmp
imul
push
inc
cld
inc
pop
mov
cmp
or
aad
sbb
mov
cltd
adc
cmp
inc
adc
or
ja
sub
inc
leave
and
jo
push
sahf
xchg
xchg
or
inc
adc
jo
or
adc
fmull
adc
fsubrl
dec
and
addr16
out
mov
sbb
cs
dec
inc
sub
push
pop
int3
or
les
or
jmp
adc
sbb
loope
fwait
sbb
inc
movl
add
push
rcrl
xchg
mov
aam
cmpsl
dec
nop
popa
stc
outsl
jl
push
jbe
push
out
shlb
mov
movb
in
lahf
js
and
mov
jge
mov
dec
popf
cmp
jge
push
sub
adc
mov
jp
lods
mov
bound
in
outsb
mov
pop
fadd
push
stc
xchg
ss
jl
pop
sbb
sub
push
insl
add
nop
icebp
cltd
gs
jo
cmpsl
xchg
test
sbb
pop
pop
sub
mov
add
aad
cmpl
pop
cwtl
ds
push
or
adc
or
mov
cmpsl
sbb
jge
inc
fwait
cli
mov
sub
imul
enter
sbb
test
dec
pop
jo
insl
jnp
mov
je
sarb
mov
mov
lahf
jnp
aaa
repz
lcall
pop
adc
pop
mov
mov
xchg
xor
inc
sbb
xchg
sbb
es
and
orl
pop
or
stc
jge
push
clc
test
std
test
dec
rcrl
and
mov
jne
jmp
aam
call
lret
adc
std
lds
adc
mov
je
jp
out
shll
mov
xchg
mov
push
jp
arpl
js
in
add
xor
fbld
insl
add
and
es
sbb
inc
xchg
mov
adc
je
inc
add
mov
dec
pop
test
cmp
fldenv
int
pop
xor
cmpsb
xlat
pop
mov
mov
push
test
insl
sbb
insl
and
iret
bound
dec
fsubrs
lret
lds
sbb
andb
mov
push
pusha
and
xchg
add
shl
outsl
pop
movsb
cld
inc
ss
mov
mov
mov
pop
shll
shrl
outsl
sub
push
aas
scas
dec
adc
pop
outsl
ret
cmpsb
jle
jb
std
jge
outsb
inc
insl
les
pop
outsl
aaa
lea
xchg
xchg
push
adc
fcoms
push
sub
mov
add
mov
jl
xlat
rcrl
xor
pop
jne
xchg
addr16
pop
inc
sbb
mov
ret
aas
sbbb
out
aam
push
in
push
inc
xchg
ret
mov
call
pop
mov
sarb
sti
pop
cmp
shll
aaa
insb
sub
and
mov
mov
fstl
ja
pop
cwtl
mov
dec
mov
push
sub
jnp
push
or
sub
xchg
mov
mov
cmp
pop
mov
sti
iret
jo
push
pushf
adc
push
cld
aam
jge
lods
pop
xor
in
fwait
es
push
insl
sbb
frstor
sbb
xlat
xor
xchg
xor
sti
pop
cmp
fistpl
popa
ss
sbb
inc
xor
test
and
add
mov
sbb
bound
sarl
mov
mov
and
sub
pop
add
push
lods
push
ficomps
xor
xchg
fnsave
mov
push
and
mov
shlb
jns
fsubrs
loop
stos
sti
sbb
inc
std
dec
arpl
lods
mov
fs
xchg
or
xchg
lds
call
loope
lods
fwait
negb
mov
mov
mov
iret
or
cmp
inc
lret
push
mov
jb
jo
push
filds
fcomps
stos
add
mov
pop
addr16
pop
and
aam
fdivrp
das
outsb
scas
mov
mov
sub
and
ss
in
lods
stos
mov
jb
lret
jbe
jecxz
lahf
cli
cmp
jg
inc
in
mov
arpl
ret
xlat
jo
sbb
add
insl
jp
lock
sbb
cmp
jnp
mov
mov
inc
mov
inc
hlt
and
rclw
add
xor
ret
lock
mov
jmp
roll
fiaddl
sbb
inc
jbe
xor
dec
mov
mov
fsubrl
mov
bnd
and
sbb
xchg
sbb
mov
test
adc
xor
insb
lahf
xchg
inc
xor
aam
mov
test
test
jp
mov
les
stos
mov
xchg
ja
add
pop
cmp
mov
movsb
pushf
clc
inc
jmp
mov
loopne
inc
cmp
push
cli
adc
lds
js
adc
mov
out
pop
jl
call
fidivrl
pop
mov
imulb
mov
xor
stos
cltd
dec
push
daa
movsl
aad
pop
dec
xor
fsubrl
xchg
inc
pushf
inc
xchg
jne
mov
xchg
faddl
cmp
sub
in
stos
rcr
mov
push
xor
pop
lea
dec
sbb
in
loop
xor
daa
sub
fnsave
dec
adc
sbb
and
lods
cmc
xchg
mov
xor
lods
or
or
inc
push
cmp
out
adc
outsl
ss
xchg
or
push
test
data16
jg
mov
rolb
mov
mov
sti
inc
dec
push
sub
inc
test
outsb
pop
mov
es
xor
sub
dec
mov
dec
or
inc
cwtl
pop
aad
icebp
add
push
sub
stos
pop
in
andb
hlt
adc
adc
pop
push
popa
mov
filds
jno
call
loop
xadd
clc
into
aam
call
mov
sub
data16
or
out
add
add
xor
dec
or
mov
inc
sub
fwait
ret
and
inc
cmp
cs
or
add
adc
jb
in
adc
and
add
or
push
shll
movsb
adc
mov
out
dec
push
jo
ret
mov
je
js
add
pop
fistpl
jl
or
or
xchg
outsl
push
jl
into
out
gs
pushf
pop
rorl
jmp
nop
lods
sbb
mov
je
push
cmp
insl
loopne
pop
mov
jae
out
mov
cwtl
sub
and
movsl
adc
sbbl
test
sbb
cmp
fucomp
push
or
or
sub
mov
xchg
pop
push
or
divb
ljmp
cs
mov
push
or
or
mov
mov
mov
mov
in
or
sub
xorb
jle
xlat
fisubl
subl
fstps
push
incb
jecxz
fmuls
stc
inc
inc
add
mov
or
movsb
pop
mov
xchg
mov
jp
or
lock
push
stc
js
and
xchg
add
dec
addr16
rorl
stos
and
pop
mov
cli
inc
adc
lods
jne
xor
ljmp
clc
mov
or
dec
rcl
icebp
adc
sbb
ret
sbb
popl
pop
insl
cmp
loop
lcall
loope
sbb
jl
popa
mov
sub
or
stos
or
roll
mov
xchg
inc
jle
mov
and
or
mov
ficomps
dec
xor
mov
fnsave
dec
or
jno
call
call
and
mov
scas
mov
in
add
cs
dec
pop
sar
lock
mov
inc
sahf
sbb
bound
push
les
mov
and
xlat
adc
and
dec
jecxz
sbb
add
test
mov
sub
adc
push
or
int3
inc
pop
arpl
pop
lea
lock
out
loopne
sub
daa
in
and
push
jge
insl
pop
js
sub
push
sar
add
mov
sbb
push
pop
push
xchg
sub
aad
pop
mov
hlt
ffree
daa
or
jbe
inc
mov
lahf
xor
sbb
lock
sbbl
mov
and
mov
rclb
sahf
cmp
icebp
mov
out
jle
cmp
mov
iret
adc
pusha
dec
dec
in
int
lahf
add
cmp
imul
cmp
mov
popa
mov
pop
pusha
in
fisttpll
fs
fucomi
lea
push
or
mov
sub
aad
shrl
jae
xchg
nop
xor
or
sahf
aas
lds
mov
jmp
mov
leave
mov
mov
cmp
inc
sbb
push
fwait
sub
cs
push
fildl
ss
pop
lahf
mov
orl
test
inc
mov
pop
push
or
rcll
aad
dec
sub
pushf
out
or
clc
lods
fildll
xchg
or
cmp
mov
test
jle
ja
mov
lds
pop
ret
dec
jp
vmread
cmp
jle
dec
cmp
in
fidivrl
shl
inc
rclb
mov
mov
std
dec
lock
and
cld
xlat
or
outsl
and
test
sub
mov
cmp
inc
stos
lahf
out
das
test
aad
cs
call
adc
aas
jle
loope
lea
sub
bound
push
cmpsl
xchg
addb
dec
mov
or
repnz
imul
or
jbe
repnz
fnsave
inc
arpl
sti
mov
and
cmp
in
dec
cmpl
jo
push
shl
mov
cmc
jne
adc
sbb
dec
int
sub
lahf
out
loope
xchg
pop
pop
leave
cs
mov
adc
or
sub
mov
adc
es
int
mov
enter
fcomps
dec
daa
rcrb
insb
or
add
push
or
jns
mov
ja
addr16
test
dec
iret
decl
sbb
dec
cwtl
mov
push
mov
ds
sub
jbe
xor
mov
inc
das
insl
leave
in
add
sbb
subb
xchg
cmpsl
call
stos
dec
scas
das
fs
loope
loopne
push
add
cmpl
jne
add
iret
loope
push
fwait
pop
addb
lods
mov
pop
clc
jb
loope
mov
shlb
or
mov
call
sbb
scas
dec
scas
fstpl
out
imul
dec
fidivrs
inc
ljmp
xchg
pop
daa
shr
popa
mov
sub
fsubp
adc
das
jbe
mov
sub
sbb
inc
repz
cmpsl
jle
xchg
sbbb
testb
xchg
add
lods
fsubrs
sahf
mov
rcl
outsl
ficoml
lret
xchg
idiv
push
gs
sahf
js
mov
add
or
call
ljmp
repnz
mov
sbb
ret
cld
add
aaa
test
add
xchg
mov
dec
insl
lods
or
outsl
ljmp
sub
cmp
or
out
jmp
mov
inc
push
gs
fwait
lods
fwait
pop
jnp
mov
cmc
repz
adc
mov
pop
addb
pop
subl
hlt
imul
in
pop
je
movsl
test
sti
aam
popa
inc
jb
push
mov
shrl
push
inc
iret
enter
xchg
nop
enter
sti
and
pusha
gs
push
cld
in
lret
hlt
shll
std
fsubs
cmpsb
enter
call
cmp
push
mov
jae
sub
sbb
sbb
fdivl
cwtl
cmpsb
xor
add
ret
in
jo
imul
mov
out
add
lahf
jecxz
sbb
inc
rorb
mov
inc
jl
mov
or
and
sub
lea
push
aam
add
sbbb
loop
xchg
inc
dec
cli
ljmp
add
es
cmp
shll
shlb
jl
jge
shr
dec
adc
cmp
add
and
dec
inc
cmovo
pop
or
cmp
push
outsl
jge
pop
adc
xor
sarb
jne
and
jle
incl
mov
test
mov
nop
xor
cwtl
movsb
popa
dec
cltd
lods
sbb
cltd
add
sti
rcrl
sub
mov
sub
cli
mov
inc
mov
cmp
ss
pop
mov
mov
decl
inc
xor
and
mov
sbb
hlt
push
aaa
mov
addr16
and
into
push
jmp
mov
jmp
roll
lret
mov
pop
insb
xor
mov
movsl
sti
sbb
lock
leave
xor
jo
pop
addr16
xchg
push
mov
jmp
mov
xchg
or
cmpsl
sahf
add
mull
mov
inc
and
push
jae
dec
outsb
dec
mov
mov
pop
lret
jo
add
lcall
push
mov
test
jge
and
push
pop
fcomip
inc
aas
pop
into
je
sbb
mov
jnp
rolb
pop
icebp
cmp
shlb
fimull
rcl
dec
add
mov
sarl
inc
addl
xchg
fstl
test
and
nop
fidivl
pop
jne
sub
push
gs
adc
cmpsb
dec
leave
pop
lods
jmp
jnp
enter
iret
out
lahf
add
jo
adc
lcall
stc
fldz
adc
xor
mov
jg
sbb
jno
aad
pop
insl
adc
call
xor
mov
adcb
or
js
pushf
movsb
test
mov
jne
dec
inc
and
push
icebp
stos
jecxz
dec
cmp
push
jle
fadds
les
rol
insl
and
inc
mov
in
adc
rolb
jmp
loopne
and
shr
pop
repnz
cmp
pop
sahf
adc
cmp
add
mov
lock
adc
inc
scas
lock
cmc
mov
fdivl
sbb
mov
bound
fdiv
test
mov
not
and
xchg
pop
pop
ret
aad
jnp
pop
stos
or
pop
mov
add
in
imul
int3
test
mov
dec
cmpsl
hlt
daa
in
loope
mov
jmp
ret
repnz
sbb
sub
call
std
mov
mov
out
popl
sub
int3
add
and
cld
mov
jne
cld
pop
fldenv
outsb
in
int3
or
xchg
push
pop
outsb
shrb
incb
sbb
pusha
pop
cs
rcrl
lret
ds
jnp
stos
in
cmp
rol
or
popf
mov
jecxz
mov
cmp
in
insl
push
sub
repz
cli
add
shl
fisubs
popf
bound
dec
ss
pop
pop
mov
or
jg
push
cmp
insb
aam
mov
jns
popa
lods
dec
ljmp
xor
scas
push
repnz
repnz
xor
int
cmp
push
ss
clc
or
adc
test
push
pop
dec
dec
lods
scas
iret
or
xchg
fsubrl
mov
ljmp
sar
and
mov
inc
int3
aad
aaa
lock
scas
dec
xchg
stc
ja
add
fwait
test
stos
test
bound
cltd
ss
or
fistpl
jecxz
fistps
sbb
in
inc
xchg
push
fs
sub
das
adc
cli
sub
stos
loopne
sub
outsb
pop
test
inc
cmpsl
in
out
jmp
jge
adc
ret
mov
push
sub
push
mov
inc
inc
clc
mov
gs
dec
int
dec
shr
sub
mov
mov
adc
cli
gs
or
addr16
mov
shll
aaa
mov
add
and
rcl
cmp
aaa
ret
pop
popa
test
les
std
inc
or
aaa
lock
dec
repnz
lods
xchg
cmpsb
ds
inc
push
mov
xchg
mov
xor
mov
je
xor
push
mov
pusha
lcall
adc
add
stos
faddp
data16
loopne
xor
lock
addb
loopne
add
aaa
adc
ret
in
adc
add
addb
pop
pop
std
rorb
push
or
mov
repnz
stc
pusha
adc
pop
movsb
inc
jg
mov
pop
jmp
cmp
mov
mov
pusha
aam
push
bound
push
rorl
in
or
mov
rol
lods
xchg
cmp
sbbl
sbb
in
jmp
out
leave
pop
cmc
xchg
lret
inc
insl
or
jo
jne
fnstsw
sub
xchg
add
icebp
test
mov
xchg
les
xchg
mov
in
shrl
es
push
sti
ffreep
mov
mov
pop
jnp
sar
loope
fsts
lahf
ret
ret
outsl
mov
push
pusha
push
mov
mov
mov
mov
mov
loop
jl
jnp
repnz
pop
in
mov
movl
dec
sbb
repnz
ss
loopne
xor
sbb
and
pop
mov
iret
sub
dec
lahf
sbb
lds
inc
lahf
stos
movsl
pop
daa
xor
das
jo
clc
mov
jmp
aas
jbe
loop
aaa
sbb
fs
out
mov
idivl
cmc
sbb
add
mov
jmp
mov
movsb
push
nop
sbb
xchg
pop
sbb
mov
xor
inc
pop
jle
xchg
gs
or
or
lcall
add
pop
push
pop
mov
inc
adc
push
ljmp
popa
adc
out
daa
pop
mov
inc
rolb
je
mov
int
jo
sub
dec
pop
mov
movl
mov
push
sub
mov
and
rolb
in
xchg
mov
and
push
imul
nop
enter
xchg
mov
jl
dec
xorl
popa
mov
pop
xchg
mov
or
int3
test
push
or
and
mov
xor
jl
sbb
stc
lds
jno
sbb
jo
and
hlt
inc
or
fidivrl
dec
imul
ret
pop
clc
subl
dec
mov
mov
xchg
loop
pop
and
or
les
lahf
into
mov
aaa
add
or
insl
inc
mov
cli
fcmovb
add
inc
sahf
je
lods
mov
jmp
imul
int
add
add
xchg
lret
into
push
fcoms
popa
or
jg
cli
aaa
xchg
xor
xor
push
xchg
push
jo
dec
das
add
fsub
cwtl
cmp
or
xchg
loope
clc
and
mov
daa
add
pushf
mov
cltd
sbb
jo
call
fdivrl
mov
sbb
mov
stc
arpl
sbb
mov
out
mov
insl
fs
cwtl
add
fldt
xchg
add
addr16
mov
fld
add
pop
clc
mov
inc
sub
iret
push
xchg
rcrb
cmp
shl
outsl
aaa
dec
or
add
lock
mov
pop
jmp
loop
aaa
dec
jge
out
inc
mov
test
aad
adc
push
in
aam
xlat
fidivs
add
jbe
adc
sbb
mov
adc
xchg
fldt
add
xor
cli
pop
hlt
or
add
push
push
adc
out
cmpsl
push
push
pop
sub
cmp
push
aam
mov
das
sbb
mov
xchg
mov
out
push
push
je
shlb
cmc
xor
sbb
mov
dec
pop
ret
and
xchg
sbb
xlat
repz
dec
inc
sbb
xor
pop
and
and
int3
popa
int3
ret
pop
dec
jb
and
add
std
push
add
repnz
fwait
cli
imul
cmc
adc
test
push
scas
dec
aas
sarl
jno
mov
push
xorl
cmp
mov
aaa
dec
aas
jae
inc
pop
leave
out
fistpl
sbb
lret
rcr
movsl
jae
mov
adc
cwtl
ja
adc
out
or
xchg
add
jo
outsl
xor
shrb
jge
pop
fsqrt
push
lock
pop
cmpsb
sahf
lds
and
mov
mov
ljmp
mov
andl
fmuls
subl
push
push
inc
mull
cmc
cmp
movsl
stos
repnz
fwait
xchg
jmp
ficompl
aaa
ljmp
xchg
push
mov
sub
nop
mov
lock
and
mov
cmc
dec
inc
in
fs
loope
stos
rcrb
lea
dec
add
mov
jg
jge
movsl
lcall
xor
mov
inc
xchg
stos
iret
roll
lret
lret
hlt
dec
fstpl
jl
pop
sbb
jnp
shlb
lds
jp
test
das
jl
or
mov
es
bound
out
pushf
xchg
dec
mov
in
out
pop
jg
adc
mov
popa
jmp
ja
or
clc
mov
call
jp
push
ja
adc
in
in
jle
frstor
pop
inc
inc
or
add
inc
pop
jle
sarl
imul
xor
pop
push
cmpsb
lock
cmp
cmp
sub
test
test
jo
pop
pusha
adc
mov
imulb
shlb
cmp
adc
fadd
ffreep
addr16
bound
mov
loopne
fistpll
add
ds
cmp
push
scas
xor
cmp
jl
cmp
mov
and
pop
mov
cs
xchg
push
mov
dec
out
push
mov
cmp
in
sahf
and
lea
into
xlat
mov
enter
fcmovnb
push
pop
inc
jge
rorl
lods
jp
and
sub
js
xchg
pop
js
cmp
jbe
and
push
mov
bound
pushf
fiadds
or
lahf
test
mov
pop
cmpsb
movups
clc
dec
popf
loopne
xchg
fs
mov
adc
dec
cmc
ja
outsl
mov
pop
in
push
adc
and
inc
test
js
jl
daa
in
adc
in
mov
sub
xor
addr16
jmp
or
enter
inc
icebp
adc
mov
and
inc
inc
imul
sbb
or
imul
stc
test
mov
cmpsl
lret
psllw
and
and
ret
add
pop
sbb
jb
enter
int3
and
fsubp
adc
mov
lea
and
movsl
mov
adc
imul
mov
shlb
test
and
inc
daa
adc
adc
pop
aam
int
jnp
pop
pop
ret
mov
jb
mov
andb
fs
stos
sbb
or
andl
sbb
fiaddl
ret
loopne
test
add
sub
fiadds
mov
ds
and
xchg
cmpb
fcoml
repz
jecxz
int3
lahf
add
jl
sar
dec
cmp
inc
dec
lcall
hlt
mov
or
sbb
mov
enter
insl
ret
and
aam
add
mov
xchg
test
mov
lea
mov
jl
fiadds
push
fistpll
adc
es
bound
dec
add
fmull
adc
cmp
add
inc
leave
je
or
int
lret
jno
dec
or
arpl
adc
jle
or
aam
mov
std
cmpsb
cmp
mov
mov
push
or
in
insb
negl
mov
das
insl
inc
fsts
add
jp
stos
cmpb
inc
mov
adc
test
loope
push
in
in
sub
sti
cli
push
sub
and
mov
popf
dec
sub
lds
iret
out
sbb
sti
mov
loopne
imul
pop
xchg
pusha
std
mov
aam
aad
jno
fcomps
push
dec
jle
fdivrl
sbb
fs
subb
cmp
add
icebp
xchg
sti
add
adc
aaa
cld
out
xor
test
mov
xchg
in
call
leave
fistpll
or
jmp
pop
lea
sbb
xchg
mov
mov
push
add
je
dec
pushf
sbb
dec
pop
xor
mov
inc
movsl
fisubrl
pop
or
add
or
pop
test
into
mov
movl
xor
inc
enter
mov
sbb
inc
and
gs
inc
sub
xchg
cmp
cld
pop
cld
xchg
cmpsb
mov
inc
cmp
movsl
sbb
or
pop
test
dec
dec
lods
pminsw
outsb
lret
mov
orb
ffreep
test
push
fmul
mov
roll
dec
test
jecxz
int
arpl
lods
dec
cmp
loope
jbe
fstl
mov
out
xlat
mov
stc
loop,pt
add
movsl
idivb
icebp
lcall
ss
mov
cmp
inc
and
rclb
xchg
stc
mov
sbb
inc
inc
stc
test
inc
aam
add
jl
mov
xchg
and
push
pop
iret
and
shlb
fiadds
cmp
jae
jl
cwtl
and
sub
sub
stos
test
push
mov
pop
cld
iret
mov
fiaddl
mov
cwtl
data16
xor
sub
xchg
sbb
fwait
loopne
scas
lds
xchg
sub
pop
stos
fistps
bound
cmp
adc
jne
sbb
pop
out
mov
cld
mov
lahf
sub
push
or
leave
sbb
dec
inc
inc
mov
sbb
xor
fstpt
or
jbe
std
adc
adc
mov
inc
loop
and
xor
cmp
ss
and
sbb
push
dec
mov
and
and
add
jmp
lds
mov
mov
mov
cmp
loopne
std
cmp
adc
push
test
add
adc
xor
add
fbstp
dec
xchg
dec
inc
cmp
pop
test
pushf
and
or
sub
je
loop
test
or
cmpsb
jno
lock
cmp
dec
cmpb
sub
divb
and
mov
add
andl
in
ss
xor
push
cmpb
adc
mov
xchg
adcl
shlb
pushf
jge
fisubrs
sub
jg
pop
pop
xchg
mov
add
repz
vhsubpd
les
inc
pop
in
lret
or
data16
movsl
pusha
push
dec
outsb
inc
mov
jge
ret
jns
incl
orb
imul
mov
mov
push
arpl
dec
mov
xor
scas
test
adcl
subl
sbb
loop
outsl
clc
outsb
jl
add
xchg
cmc
test
inc
loop
outsb
pop
add
test
xchg
stos
sub
scas
pop
mov
cmp
cmpsl
popa
dec
out
jno
mov
xor
insb
mov
mov
xor
aaa
jmp
insb
mov
invd
pop
int
cmp
xchg
mov
add
adc
enter
in
fcmovnbe
xchg
jmp
ss
dec
testb
pop
outsb
push
mov
mov
lea
dec
xor
dec
and
jmp
sub
rclb
sbb
jl,pn
in
into
rorl
ljmp
adc
inc
rorl
jmp
jg
lret
and
addr16
adc
sub
inc
call
or
mov
ljmp
popa
lock
mov
adcl
icebp
push
mov
andl
or
jge
insb
mov
js
jno
dec
aaa
and
sub
movsb
cs
dec
scas
leave
loopne
cmp
fsubr
mov
or
test
pop
push
adc
pop
or
test
sbb
popa
int
ficompl
mov
daa
add
lock
pop
dec
jmp
pop
add
arpl
lea
fistps
push
mov
popa
stc
bound
push
fcmovu
or
push
fidivrs
not
callw
je
sub
dec
imul
adc
inc
xor
push
inc
mov
movsl
inc
or
cmpsw
imulb
mov
mov
sbb
sbb
mov
outsb
sub
adc
es
in
bound
inc
popf
or
mov
mov
mov
sti
jecxz
adcl
jp
xchg
inc
mov
bound
inc
pop
loopne
mov
cld
mov
andb
pop
sub
faddp
incl
leave
adc
mov
add
push
loopne,pt
xchg
mov
xchg
adc
les
dec
icebp
lock
pop
iret
cmpsl
mov
mov
adc
outsl
mov
jb
ljmp
pop
int3
mov
dec
xchg
loop
lret
sub
lahf
out
inc
out
fmull
fnstcw
in
xchg
clc
jnp
sub
jno
rcrb
mov
shrb
stos
outsl
push
test
data16
or
mov
or
sbb
jbe
cli
outsl
cmc
and
out
fistpl
and
inc
or
fs
pop
loopne
test
mov
and
lods
and
xchg
loopne
out
push
mov
xchg
adc
jecxz
fcomps
fbstp
xor
ja
jge
sub
aas
pop
rcll
aad
sarl
std
jg
mov
mov
outsl
inc
fbstp
repnz
ja
push
pop
and
aad
cmp
scas
push
xor
mov
in
mov
mov
and
dec
cld
insl
xchg
jb
cmpsb
fsubs
mulb
movsb
push
sbb
add
sub
std
jb
mov
sbb
fsubrl
sbb
or
xchg
cmpsl
pushl
pop
mov
xchg
sbb
and
int
inc
mov
ud0
ror
mov
movsl
dec
adc
mov
rorb
mov
inc
lods
sti
int3
popf
jnp
inc
jl
rorl
rcl
outsl
lods
or
mov
inc
pop
mov
subl
or
push
mov
les
lods
lahf
cmc
sub
dec
xchg
test
xor
dec
roll
test
cld
or
sbb
xor
cwtl
movsb
pop
push
shlb
mov
das
sbb
add
add
sub
pop
in
mov
outsb
dec
add
add
jno,pn
mov
dec
xorl
imul
cmp
lds
push
jg
dec
pop
dec
in
sbb
pop
or
jbe
sti
adc
ja
inc
or
out
pop
sbb
pop
pop
push
sti
arpl
adc
aad
xchg
aad
push
adc
gs
icebp
iret
loope
adc
cmp
aad
or
pop
je
loopne
loope
jns
call
adc
push
inc
mov
pop
out
ss
or
xlat
scas
mov
mov
repz
icebp
add
or
lcall
loope
loop
jge
ficompl
adc
dec
int
out
cli
jg
faddl
out
test
push
dec
popf
sbbl
jno
test
outsl
push
test
mov
loope
mov
push
cld
in
les
mov
mov
inc
mov
and
cmpsb
mov
push
mov
jne
xchg
push
xchg
fcmovnbe
or
std
cmp
fcoms
pop
aam
mov
or
arpl
test
popl
icebp
add
shrb
cmp
mov
jb
or
outsl
or
test
mov
cli
inc
fsubs
jb
mov
call
push
sub
adc
stos
in
xor
sbb
add
adc
test
cmp
aaa
loopne
add
mull
xor
pop
xor
mov
jno
xor
mov
xchg
mov
mov
push
mov
cmpl
cmc
test
call
imul
rorl
or
jae
test
icebp
fwait
daa
fistl
pusha
fldt
cmp
rclb
lcall
mov
roll
cs
iret
lock
sbb
pop
lahf
xor
fisubrl
jb
test
adc
cmpb
test
mov
and
or
jno
shrl
sub
repz
call
or
call
pusha
jnp
xlat
imulb
mov
aam
fisubl
pop
mov
divb
stos
lds
fcmovnbe
and
mov
cmp
sbb
adc
xchg
mov
leave
shl
mov
test
in
frstor
lea
mov
jno
dec
pushf
jnp
or
call
out
lea
popa
fsubrl
mov
cmp
add
and
outsb
inc
adc
mov
jb
push
fsubrl
sbb
jae
lea
mov
xlat
jbe
in
pusha
mov
pop
pop
clc
aaa
fidivs
jnp
mov
ss
dec
cld
adc
pop
cmp
test
inc
pop
nop
imull
bound
and
loop
ja
jmp
dec
add
mov
mov
arpl
adc
cli
pop
cmp
mov
in
and
or
movsl
xlat
iret
mov
add
sbb
stc
in
jle
out
mov
or
movsb
inc
sub
xor
pop
cmpsb
negb
hlt
push
xor
adc
mov
xchg
movsl
jmp
pop
sub
ja
fs
scas
xor
or
insl
rorb
mov
pop
lret
pop
cmp
ja
fs
test
int3
add
adc
nop
mov
or
adcb
clc
iret
push
adc
mov
push
pop
xor
movsl
mov
jo
out
or
lds
loop
inc
aaa
in
jmp
lock
mov
jbe
out
jne
or
int
sub
xchg
cmp
cmp
jmp
pop
insl
mov
pop
test
sub
cmp
mov
int
and
in
xchg
fnsave
jne
mov
cmc
mov
or
in
mov
test
cmp
in
lods
in
pop
stc
or
js
mov
sbbb
lahf
push
movntq
shll
mov
xchg
scas
inc
test
jmp
shr
lret
out
movl
mov
sbb
mul
idivl
sbb
int
hlt
fadd
xor
dec
dec
and
inc
je
pop
pop
and
mov
insb
xchg
enter
mov
mov
add
dec
adc
aaa
jne
add
das
sti
in
das
cmp
xor
mov
add
xchg
subb
pop
pop
lock
jno
std
pop
mov
lea
adc
mov
aaa
lock
jmp
mov
stos
cld
jmp
dec
dec
cmp
sbb
ja
lods
popa
test
mov
dec
out
fwait
lret
shlb
inc
rolb
in
in
sub
dec
mov
callw
loopne
inc
xchg
test
out
mov
xor
rclb
hlt
dec
lock
sub
cli
or
pop
push
adc
jns
addl
mov
and
pop
jbe
fdivr
push
jg
aam
scas
adc
pop
xchg
call
pop
clc
inc
inc
movsb
outsb
xor
iret
cmp
sub
imul
jl
inc
sub
shll
inc
jbe
pop
fld
roll
push
jp
aas
pop
sub
add
loopne
aad
xchg
push
pop
or
nop
mov
mov
mov
mov
inc
jg
add
cmpl
scas
and
mov
pop
jnp
bound
inc
dec
ret
arpl
popf
rcll
adc
mov
outsb
cmpsl
decb
je
in
das
lahf
push
addb
lods
xorb
adc
pop
mov
pop
cltd
std
add
fbld
enter
and
jg
cmp
testl
frstor
sbb
jg
insb
fisubrs
scas
mov
enter
mov
pop
inc
movb
adc
sub
mov
iret
test
dec
jno
lret
sahf
inc
mov
cltd
mov
sbb
push
add
test
sbb
aaa
aad
and
fucompp
sarb
pushf
and
insl
pop
sbb
insl
xchg
pop
cmpb
loope
push
cmp
mov
add
xchg
mov
loope
lods
in
dec
rcll
adc
mov
aam
rcrb
in
jmp
popa
mov
mov
fists
push
stos
sti
in
jg
dec
aam
sbb
push
push
scas
or
xor
pop
fcoml
in
stos
jo
sbb
add
test
mov
outsl
dec
insb
cmp
push
push
sub
jle
loopne
dec
jb
icebp
sbb
and
out
aaa
fidivs
jl
pop
cltd
pop
ljmp
outsl
mov
pop
mul
pop
jno
repz
leave
dec
cli
dec
pop
inc
out
imul
sti
aam
aam
jge
mov
addr16
sub
mov
or
cmp
dec
sbb
cmc
outsl
adc
xchg
jmp
adc
cmp
add
mov
adc
mov
push
add
cmp
dec
push
mov
divb
dec
jo
jae
adc
push
icebp
or
dec
cmp
pop
cltd
add
pop
push
pop
mov
cmpsb
sub
popf
call
xchg
xor
lods
popf
dec
test
cld
jno
rcr
incb
mov
sub
loop
jo
add
test
into
dec
insb
aad
jecxz
push
sti
pop
stos
push
in
xor
jns
mov
xchg
sbb
pop
xchg
into
xlat
mov
es
xorb
mov
cmp
sbb
and
dec
movsb
das
outsb
jo,pn
sub
fs
xchg
rcl
lret
push
enter
mov
push
adc
pop
cmpsb
mov
subl
inc
push
sarb
adc
mov
xchg
aad
adc
sti
mov
mov
sbb
mov
cmp
jg
cmp
adc
inc
mov
pcmpgtw
cmp
sbb
inc
enter
stos
pop
mov
push
aaa
les
sbb
stos
dec
xor
incb
xchg
jnp
testl
mov
rcl
mov
negb
mov
mov
sbb
mov
call
pop
mov
call
mov
fmul
insb
gs
test
iret
movsb
pushl
bound
sti
sbb
fcoms
adc
dec
pop
xchg
xor
add
xchg
das
in
push
not
and
inc
in
pop
sbb
outsl
call
cwtl
push
fwait
or
push
std
mov
push
aas
ljmp
or
call
sahf
adc
inc
xor
pop
addr16
sbb
js
scas
es
push
add
lds
mov
mov
in
data16
cmp
addr16
fistpl
inc
or
aam
bound
xchg
test
push
adc
cmpsb
sub
das
repz
add
push
loop
lods
mov
pop
xchg
pop
out
leave
jle
aaa
fwait
dec
std
inc
in
rcll
psubusb
hlt
lcall
loop
pop
push
push
dec
dec
shlb
pop
fdivr
fdivs
sbbl
std
push
shlb
sub
pop
mov
fcomi
icebp
xor
scas
xchg
out
mov
inc
fwait
xorb
and
push
js
sub
cmpl
cmp
mov
jo
mov
lock
jp
lock
jmp
loop
imul
icebp
adc
and
fwait
jecxz
xor
mov
rorb
mov
xor
xorb
imul
inc
cmc
pop
adc
or
push
pop
cmp
xchg
fldl
hlt
mov
dec
push
mov
mov
lds
and
mov
sbbl
sub
ret
cmp
aam
or
pop
sub
push
xchg
inc
sub
or
jo
mov
push
pop
lds
mov
ja
addl
pusha
fisttps
into
cmpsb
addb
imul
adc
pop
repz
punpcklwd
jno
xchg
mov
pop
into
or
jnp
scas
dec
shlb
or
push
lret
cmp
adc
inc
sar
mov
in
xchg
xchg
or
xchg
jg
ja
lcall
dec
shlb
idivl
or
aaa
sbb
sbb
sbb
sub
inc
iret
ret
jo
jb
fcomp
mov
les
push
pop
fildll
push
outsl
mov
and
clc
inc
mov
clc
sub
pop
mov
and
scas
insb
sbb
inc
aas
jb
or
std
sub
mov
xchg
fldenv
fistl
ljmp
cld
mov
jns
sti
aas
jle
adc
imul
insb
out
add
pushw
xchg
add
gs
jb
loope
add
push
mov
int
and
arpl
loop
sti
add
pusha
adc
pop
push
pop
addps
push
jmp
inc
fmull
test
dec
push
cmp
fildl
xchg
daa
rolb
pop
mov
ljmp
xor
jae
dec
sub
and
shll
loopne
fists
or
aam
lods
jnp
ljmp
adc
pop
scas
push
mov
loope
push
daa
mov
or
cmp
or
ljmp
push
jg
inc
jmp
lods
incb
mov
stos
call
sub
adc
push
fiaddl
fwait
test
aaa
mov
bound
sbb
js
dec
pushf
and
mov
jg
sub
xchg
ds
push
into
add
popa
shr
jnp
sub
pop
in
xor
movsb
rclb
lds
or
cmpsl
mov
pop
and
cli
jae
in
mov
movsl
aad
push
sbb
sbb
cld
pop
fisubrl
xchg
push
mov
out
lcall
stos
bnd
jb
cmp
popf
dec
inc
inc
testl
dec
in
int
sbb
in
ret
sbb
ficomps
mov
dec
pop
jo
testl
scas
stos
repz
ret
jle
mov
add
inc
test
pop
xor
das
test
test
mov
into
in
sti
movsl
cli
xchg
xchg
dec
out
lock
out
lods
mov
stos
inc
dec
and
and
sbb
pop
push
ret
or
mov
cmpsb
inc
loope
dec
dec
add
mov
icebp
test
gs
rorb
leave
dec
test
cwtl
push
sbb
mov
cmpsl
or
or
repz
mov
lock
xchg
mov
nop
xchg
push
lret
mov
das
push
test
and
scas
add
shlb
mov
push
sahf
pop
jmp
and
cltd
fidivs
outsl
jo
daa
pusha
add
out
sbb
sbb
cli
or
cmp
pop
jnp
pop
shlb
sbb
aaa
lds
inc
dec
mov
roll
pop
push
lds
fbld
jnp
mov
or
iret
scas
pop
outsl
xor
mov
ljmp
push
outsb
jns
mov
stc
movsl
xlat
or
mov
mov
cli
dec
xlat
adc
int
aaa
pop
jo
in
test
jmp
test
xchg
popf
mov
push
inc
test
inc
pop
mov
mov
add
cltd
out
js
movsb
xor
dec
je
lds
xchg
imul
inc
push
scas
mov
cmp
inc
pop
repz
mov
ja
or
push
mov
or
test
gs
or
fldenv
icebp
dec
push
mov
icebp
push
cmc
pop
xchg
mov
lods
lcall
ss
cmp
outsl
or
xor
push
adc
jno
xor
sbb
jb
jne
mov
and
ss
sub
cmpsb
mov
lock
lahf
inc
or
mov
inc
add
add
push
mov
bound
mov
inc
mov
pop
jge
pop
xchg
cmp
pop
lods
sbb
push
pop
fsubr
jge
cmp
cmpsb
xor
fldl
subl
push
in
out
mov
dec
or
out
push
pop
ja
daa
mov
push
test
ljmp
mov
cmp
jge
xorl
mov
pop
ret
and
rol
out
xchg
mov
adc
jmp
ficomps
in
mov
inc
inc
jnp
xchg
push
sbb
mov
push
fdivl
push
xor
jl
fisttpl
add
jno
fiaddl
ljmp
add
sbb
xchg
push
inc
xor
ret
xchg
jbe
das
mov
outsl
mul
push
add
and
sub
mov
push
mov
das
hlt
jl
adc
or
bound
jp
pushf
push
mov
inc
mov
lcall
pop
push
or
jl
mov
adc
inc
cwtl
lods
das
insl
inc
dec
or
lods
fisubl
push
or
fiaddl
jecxz
and
les
or
push
sub
insl
inc
mov
in
hlt
je
jmp
psrlw
mov
cmpb
xor
stc
pop
fmull
ret
cli
mov
mov
xchg
pusha
fstpl
int3
jmp
mov
cltd
pop
xchg
cmp
fldcw
js
cld
scas
das
cld
les
pop
pop
mov
pop
pop
call
pushf
jmp
cmp
ja
fcmovnb
testb
das
lcall
addr16
fistps
mov
pushf
mov
mov
jno
sti
test
test
xor
push
or
or
int
cld
fildl
mov
subb
jbe
mov
pop
jo
outsb
insb
ds
test
push
add
outsb
jns
and
sub
icebp
add
add
dec
adc
mov
add
inc
mov
pop
sbb
push
rclb
icebp
jns
cld
mov
inc
loopne
in
dec
sub
das
mov
lock
sbb
leave
mov
ljmp
mov
mov
aas
add
adc
popa
push
pop
clc
sbb
sub
pop
jg
pop
cmp
cmp
shlb
sahf
call
popl
xor
pop
push
icebp
fwait
mov
es
cmpb
xor
pop
imul
or
rolb
cmp
or
sbb
mov
loopne
lcall
test
cmp
shl
push
dec
ja
leave
orb
jl
lcall
adc
xchg
leave
mov
and
mov
pop
push
cmp
and
or
int
jo
add
lods
dec
adc
std
push
loopne
popa
orps
fsubrl
lods
test
pop
cmp
lea
mov
mov
mov
dec
maskmovq
idivl
add
int
lret
scas
mov
xchg
popa
test
mov
cmpb
push
sbb
mov
fistps
ss
repz
and
lock
xchg
mov
xlat
cli
stos
sub
lret
adc
dec
iret
xchg
mov
out
fiaddl
push
in
popf
sbb
stos
jecxz
pop
test
call
aaa
add
sbb
and
ja
scas
fs
outsl
in
movsl
sbb
jecxz
sti
dec
aas
mov
jbe
pop
inc
out
cmpsb
outsl
inc
jle
lret
movl
popa
add
inc
jns
add
fcoml
jl
insl
adc
nop
mov
jns
mov
adc
inc
aad
lea
xor
push
repnz
daa
stc
add
inc
sti
aas
ret
pop
rol
cmp
or
ja
jmp
je
sub
inc
les
push
negl
mov
gs
pop
in
fcoms
mov
inc
cld
jge
xor
ss
fbstp
mov
jns
pop
popa
nop
wbinvd
lea
test
nop
fidivl
push
push
jo
sbb
inc
clc
add
mov
popf
mov
lahf
jns
inc
cld
pop
in
int3
cmp
inc
mov
mov
jno
loope
scas
stos
mov
sbb
mov
call
adc
mov
call
call
mov
xchg
lahf
or
lods
mov
cmp
xchg
mov
push
call
js
push
sub
out
push
lock
sub
push
cmp
xchg
imul
add
jbe
ret
mov
movsb
add
clc
push
test
mov
lret
les
mov
rorl
aam
aam
mov
xchg
mov
inc
and
sbb
into
shll
and
cli
push
jle
ja
fsubp
pop
pop
add
inc
ljmp
test
sbb
sbb
in
and
loop
mov
and
jne
subb
push
sub
ret
mov
loop
adc
lea
sbb
pop
nop
inc
sbb
dec
hlt
xchg
arpl
or
lret
outsl
fsts
or
imul
je
or
fidivrl
jne
jns
aas
and
push
add
call
jge
dec
lods
cmpb
aaa
xor
push
fdivr
dec
fistps
and
fstps
or
out
add
dec
addr16
jg
clc
xchg
fbld
rorl
or
dec
cmp
add
dec
dec
cmp
out
int
add
repz
call
ffreep
aad
shll
jae
mov
or
add
sbb
ja
inc
stc
in
mov
shl
or
dec
add
out
mov
aas
inc
xorl
outsb
stos
pop
xchg
dec
in
dec
add
and
adc
rcrb
fwait
dec
adc
mov
hlt
rcrb
mov
sti
ja
outsl
imul
je
movsb
insb
xlat
std
cmp
jno
sarl
fdivs
push
add
lods
add
dec
cmp
nop
into
ret
fbstp
pushf
sbb
inc
sbb
std
jg
xchg
shll
xchg
jmp
mov
sub
or
inc
inc
fldl
ret
popf
sbb
leave
jae
fnstcw
adc
dec
loope
pop
jbe
pop
pop
pop
pop
es
or
lret
aam
fcomi
xor
insl
mov
dec
ds
faddl
xor
cli
lea
inc
stos
xor
int
test
push
mov
mov
fadds
fidivl
mov
cwtl
fadd
xor
loopne
enter
aaa
push
pop
mov
fidivs
xlat
in
ret
add
fistl
add
mov
std
mov
test
fists
call
push
iret
jo
dec
mov
mov
jg
and
je
rcrb
push
add
movsb
mov
icebp
xor
xchg
jbe
inc
pop
cwtl
and
inc
jp
lods
xchg
inc
pop
insl
mov
enter
adc
and
add
cmp
xor
outsb
aam
std
jmp
add
dec
sub
mov
pushl
xorl
pop
cld
dec
dec
pop
insb
mov
dec
sub
shr
xchg
dec
add
out
addr16
dec
push
lcall
jecxz
nop
sbb
cmc
adc
mov
xchg
ljmp
rcl
adc
stc
ret
xor
and
or
shrb
filds
mov
push
insl
lahf
mov
adc
mov
cmp
or
push
mov
sub
pusha
sub
pop
leave
xor
add
mov
cwtl
shr
loop
adc
idiv
push
in
dec
jecxz
insb
fmull
and
sbb
stos
add
inc
push
sub
cli
xchg
fimull
jl
fistpll
jp
call
jo
push
mov
jb
aad
das
insb
pop
mov
rcl
add
dec
jle
xchg
neg
mov
mov
pop
je
sti
scas
loop
and
imul
add
mov
cmp
mov
cwtl
icebp
pop
outsl
pop
lcall
dec
leave
out
js
sti
cmpsl
jg
xchg
adc
movsb
push
push
lods
push
push
and
loop
inc
jno
imul
pop
aas
mov
movsl
fmull
add
add
in
push
mov
mov
daa
rorl
gs
pop
ss
aam
mov
sub
ret
sbb
in
int3
inc
push
mov
adc
xchg
mov
arpl
jl
loopne
fucomi
dec
mov
mov
aas
stos
das
pop
pop
sbb
mov
xchg
or
std
mov
mov
pusha
adc
sub
sarl
jg
or
enter
andl
inc
mov
enter
mov
sbb
jl
add
imul
mov
and
or
bound
fisttpll
loopne
xor
adc
daa
adc
dec
icebp
or
sbb
test
cmc
mov
adc
lret
jns
sarb
mov
enter
aas
pushf
mov
push
pop
lret
movsl
popa
insl
mov
sbb
adc
adc
outsl
mov
out
movzbl
adc
cmpsl
fcmovne
lods
jnp
je
lods
jl
fs
pop
and
or
fisttpll
mov
daa
push
mov
clc
mov
xlat
repz
inc
mov
jae
stc
loop
mov
cmc
xlat
rclb
scas
mov
movsl
dec
sub
push
jecxz
sahf
jg
fdivl
in
mov
repnz
or
rclb
outsl
outsl
and
add
stos
loopne
inc
push
pop
mov
sbb
inc
add
es
push
out
pop
ja
stos
cmp
or
mov
mov
scas
or
lock
pop
mov
xor
add
imul
xchg
outsl
adc
cli
scas
pop
jne
add
pop
mov
in
aaa
jo
and
bound
mov
fdivrs
out
dec
mov
mov
out
inc
je
je
sbb
cmp
and
jg
push
repz
push
xchg
xor
mov
loope
and
adc
mov
stos
mov
adc
addb
push
pop
ficoml
bound
adcb
jmp
jl
push
or
fnstcw
nop
sub
hlt
pop
lcall
mov
pop
mov
mov
aam
lods
jns
out
push
inc
mov
loope
fcmovnu
pusha
xchg
call
push
ljmp
ficompl
arpl
inc
mov
mov
jo
ja
mov
jb
cli
pop
movsl
mov
sub
inc
sub
fcoms
mov
lret
add
clc
push
xlat
movsl
and
add
addb
lret
in
ja
mov
not
ret
sub
jle
dec
mov
sbb
aam
lret
call
test
push
sbbb
and
call
mov
stc
mov
mov
xchg
in
mov
inc
dec
pop
repnz
filds
and
add
xchg
jmp
and
pop
pop
stos
cld
scas
mov
das
sub
or
inc
fucom
sub
test
mov
adc
mov
aaa
pop
imul
xchg
sub
cmc
sub
sbbb
loop
push
sbb
sub
jg
sbb
push
jns
or
stc
test
int
fstps
popa
rcrb
adc
filds
cltd
inc
shrb
or
inc
push
ret
xchg
mov
jecxz
mov
loopne
mov
arpl
or
lcall
sbb
and
jmp
cli
das
clc
push
ret
andb
push
ficoms
cmpb
cmpl
outsl
mov
mov
movsl
inc
cmp
loop
push
add
xchg
adcb
pop
xchg
mov
push
push
or
inc
adc
mov
jbe
faddl
ljmp
std
pop
popa
push
test
fsubrl
fcoms
push
sub
jmp
xor
sbb
neg
dec
jno
std
pop
insb
cmpsl
fucomip
add
dec
cmp
rcrb
sarb
sbb
sarb
lock
rorl
add
or
movsl
mov
repnz
imul
sti
pop
inc
or
out
in
rclb
mov
push
movsb
lahf
stos
in
pop
test
fs
jge
jb
int3
int3
out
fidivl
rcll
sub
shll
lret
adc
sar
test
sti
aad
das
mov
outsl
mov
je
ds
rcrl
shrb
arpl
data16
fdivr
mov
cs
pop
or
or
mov
gs
js
aam
daa
fstp
pop
mov
add
cmp
adc
mov
insb
or
dec
and
and
popa
dec
xchg
fcmovnb
or
cwtl
subb
jbe
pop
lods
or
jae
js
fdivrs
cli
es
xchg
std
sub
dec
push
sbb
and
push
ja
rorl
sbb
outsl
adc
lahf
xchg
mov
xor
outsb
and
sbb
mov
adc
mov
leave
rol
push
and
cvtps2pi
aas
rorb
adc
push
sarl
neg
sbb
and
cld
icebp
cmp
pop
push
and
adc
lock
ljmp
lods
loopne
lock
notb
sbb
xlat
std
dec
sahf
mov
dec
xchg
dec
xchg
xorl
inc
or
push
and
inc
loope
push
sbbb
jg
or
aad
sbbl
mov
fsubrs
rorl
inc
mov
add
call
enter
pop
cmc
cli
adc
push
push
sub
push
ljmp
xor
dec
adc
sti
or
fistpl
dec
mov
in
stos
insb
sbb
xchg
mov
add
sarl
xchg
pop
arpl
popf
jp
sbb
xor
mov
rorb
dec
fwait
imul
cmc
movsl
mov
xor
lahf
pop
aaa
sub
sub
mov
adc
cld
push
mov
xor
or
and
mov
xchg
jmp
push
xchg
mov
cmpsl
sub
jbe
test
push
sahf
add
data16
fnsave
xchg
popa
aad
pop
add
insb
in
jo
sub
push
imul
and
fistl
jmp
aaa
sbb
clc
inc
pop
imul
insl
inc
filds
je
cmp
lds
ds
leave
bound
jecxz
xor
push
andl
stos
icebp
mov
in
lods
push
push
push
aad
outsb
push
andl
rorb
testl
adc
and
enter
mov
scas
mov
scas
jns
jb
pop
jne
sbb
pop
xor
in
ret
xorb
arpl
test
adc
inc
xchg
ja
int
cmpsb
aam
addl
pusha
loopne
or
mov
push
or
push
les
clc
or
shl
cs
and
push
xor
push
call
test
aas
in
mov
lock
or
xor
push
mov
inc
dec
mov
mov
sbb
xor
scas
sbb
or
loopne
gs
xchg
icebp
cmpsb
add
arpl
ret
test
mov
or
add
inc
mov
push
test
xchg
adc
mov
and
sub
addr16
push
aad
jae
pop
mov
out
pushf
pop
push
movsb
add
xchg
xor
inc
cmpsb
mov
push
mov
dec
aas
out
popa
cmp
add
lds
xor
inc
xchg
movsl
arpl
add
cmpsb
jo
gs
aaa
imull
ds
push
lock
jae
ja
and
inc
mov
mov
mov
ret
outsl
call
sub
add
das
dec
lea
pop
call
and
test
pop
xor
into
mov
outsb
mov
add
sub
ret
mov
shll
mov
cmp
insl
outsb
insl
out
cmp
mov
jbe
mov
mov
aas
in
cmp
aad
ja
mov
cmp
add
adc
test
outsb
jnp
jp
sbb
pop
dec
cmp
pop
pop
rorl
and
stos
arpl
xorb
cmc
in
or
and
leave
mov
mov
mov
in
outsb
add
push
push
loop
mov
or
leave
shl
xchg
stos
mov
movsl
lds
aaa
push
push
rol
mov
pop
lcall
fsincos
jmp
gs
xor
mov
sbb
xor
pop
cmp
std
addb
and
inc
cmpsl
xor
mov
pop
add
pop
push
notl
insb
push
fdivl
and
ret
adc
jle
outsb
add
jecxz
stos
or
xchg
inc
adc
push
popf
daa
mov
xor
pop
jmp
fwait
mov
fildll
stc
adcl
mov
unpcklps
xchg
push
add
jg
jmp
notb
inc
push
decl
lds
out
or
cmp
mov
inc
jno
fwait
lcall
jl
icebp
inc
xor
insb
mov
push
jno
in
adc
lods
xor
pop
push
popaw
xor
scas
mov
pushl
fdivl
and
fs
mov
mov
mov
lcall
push
aas
out
ror
sub
mov
inc
test
mov
xchg
loopne
cmp
in
sub
push
or
fwait
in
mov
ret
and
lcall
lahf
pushf
insb
pop
cpuid
pop
int
add
and
lahf
mov
push
adc
sbb
popf
mov
or
icebp
popa
mov
add
jno
lock
data16
inc
sbb
add
lods
sub
and
ud0
lods
sbb
xlat
cmpsb
mov
cld
xor
mov
inc
pop
outsl
add
cld
mov
lret
fildl
js
inc
fisubs
mov
push
aaa
cmc
outsl
js
lret
cs
fcoms
jmp
jne
push
sarl
mov
pop
sbb
dec
pop
test
and
dec
xor
sbb
adc
inc
inc
adc
mov
cmc
sbb
mov
movsl
ret
fisubl
jmp
and
fs
outsb
inc
lock
loopne
mov
adc
ja
adc
ss
pop
mov
roll
inc
jle
adc
xlat
or
icebp
pop
and
sub
clc
pop
ret
insl
jmp
adc
adc
jae
iret
jle
fisubrs
es
lcall
jge
inc
out
lock
cmp
and
stos
inc
xor
loopne
jle
pop
orl
rorb
andb
dec
sub
dec
repnz
sub
mov
add
mov
mov
bound
outsb
sbb
inc
orb
fwait
clc
mov
push
adc
xchg
mov
pushf
xor
mov
fdivrl
inc
fbstp
dec
je
stos
aaa
cltd
mov
mov
fucomip
push
test
and
in
cmp
fcmovnbe
das
incl
or
mov
add
xor
and
mov
and
ret
fwait
movsl
mov
mov
loope
inc
and
add
lahf
xchg
push
ffreep
sbb
repz
xchg
fcmovnb
or
sub
cltd
sbb
inc
and
sub
je
outsl
xor
fstpl
aam
aaa
dec
lcall
lret
add
push
shl
pop
push
decl
xor
xor
mov
xchg
scas
add
stos
pop
and
push
aad
outsb
cmp
and
testb
sahf
push
test
cld
ret
pop
mov
or
sbb
xchg
daa
outsl
push
mov
jle
stos
mov
and
addr16
pop
and
popa
pop
js
xchg
push
mov
sub
int
xor
lret
rcll
mov
lock
lret
pop
int
sub
sub
dec
jo
xor
dec
dec
jecxz
sub
out
insb
cwtl
mov
shrb
call
filds
jns
pop
mov
push
mov
bnd
loop
scas
pusha
jns
je
inc
std
mov
mov
fwait
mov
adc
incl
outsl
ljmp
movsl
popa
rcrl
pop
dec
and
sbb
enter
enter
adc
jnp
or
movsl
scas
xchg
test
pop
test
stos
icebp
cwtl
xorl
mov
rcrl
stos
push
push
and
pop
test
shlb
or
pop
adc
sbb
push
fidivrs
mov
sarb
lock
add
sub
xchg
sbb
repnz
in
push
mov
sbb
inc
ja
xor
sbb
ret
and
daa
arpl
les
hlt
outsl
mov
test
mov
icebp
ret
iret
xchg
repz
push
mov
fsubl
jnp
or
bound
movsb
pop
test
aam
mov
call
add
dec
mov
mov
leave
cmp
orb
ss
nop
cltd
call
add
lock
clc
mov
and
stos
push
test
fsubrl
cli
pop
loopne
xor
ret
loopne
adc
pop
pop
push
push
inc
fidivrl
ud1
pop
int
cmpsb
dec
inc
aam
test
out
push
push
scas
xor
sub
mov
jbe
fildll
mov
enter
pushf
stc
cmp
icebp
add
xor
sub
ror
sub
das
inc
or
cmp
mov
xchg
jmp
cmp
shrl
popf
in
xlat
notl
mov
xchg
pop
lret
movl
push
inc
aam
pusha
xor
add
lea
and
xchg
xchg
out
pop
pop
leave
lea
mov
andb
or
movsb
ficompl
or
ss
or
cld
mov
pop
mov
ja
and
mov
cmp
loopne
ffreep
mov
mov
ja
jne,pt
lret
pop
mov
mov
aas
lock
cltd
xchg
mov
aam
add
inc
sarb
lret
add
jns
xchg
push
or
cmc
outsl
jg
jg
mov
pusha
inc
cmp
pop
dec
jb
jbe
rcrb
fildll
aam
js
sti
mov
ljmp
cs
insl
mov
jp
mov
mov
aam
xorb
xor
push
fstl
mov
cli
rcr
pop
insl
rep
mov
add
dec
adc
or
mov
das
inc
mov
and
rcrl
outsl
cli
push
test
nop
xchg
cli
mov
into
mov
adc
fists
ret
test
lea
inc
mov
push
test
mov
loope
test
push
loop
inc
xchg
push
jg
ficomps
std
das
leave
cmp
arpl
xchg
daa
mov
pop
imul
jmp
jge
inc
outsl
fnsave
xchg
push
rorb
inc
push
lds
cld
sub
lock
js
and
fildl
xchg
xchg
ret
pop
in
adc
mov
add
xchg
or
or
jo
inc
dec
jg
pushf
xchg
mov
pop
and
jae
shlb
test
jg
and
jecxz
enter
inc
insl
dec
push
sbb
les
cld
push
into
into
lahf
adc
adc
cmc
lods
hlt
jmp
sub
in
std
or
inc
mov
jle
and
dec
mov
jnp
sbb
or
and
in
test
or
mov
push
and
mov
aaa
call
call
andb
mov
cmp
es
mov
sti
call
xor
insb
jmp
test
sub
push
mov
or
ficoms
test
mov
gs
call
xor
pop
ljmp
lret
rol
xor
push
inc
add
mov
loopne
das
mov
in
sbb
cmp
imul
mov
pop
pop
push
lahf
mov
ja
lods
push
enter
test
sub
mov
mov
jb
push
mov
int3
in
sbb
inc
pushf
mov
insl
cmpb
mov
das
jmp
xor
push
and
sahf
sbb
dec
mov
push
push
movsl
js
das
int
pop
das
shlb
sub
mov
mov
xchg
adc
push
mov
pop
mov
add
adcl
mov
stos
dec
mov
fdivr
mov
or
inc
pop
addb
stos
adc
repz
mov
mov
sar
std
leave
or
scas
scas
fisttpll
fldt
call
daa
sti
int
inc
mov
add
and
mov
mov
or
xor
jo
loope
and
jecxz
add
xor
std
aaa
dec
mov
popf
and
xor
jmp
add
nop
fisubrs
rclb
pop
xchg
mov
jle
aas
mov
js
lods
inc
rcrb
or
pop
jp
push
xchg
or
std
or
pop
call
pop
fdiv
stos
sub
pusha
inc
popf
sbb
cmp
cld
add
pusha
sbb
jae
repnz
xchg
loop
inc
cmp
sbb
test
pop
std
sar
xor
cmp
enter
lods
lods
outsl
adc
cmpsb
mov
jno
or
and
call
or
fs
ficoml
in
fildll
cmp
mov
fdivp
jmp
outsl
cmp
push
jne
aam
out
shr
inc
std
pop
cwtl
dec
sbb
add
inc
mov
addr16
mov
loopne
or
xchg
jae
push
test
in
cli
sbb
test
push
pop
nop
rol
out
loop
mull
mov
jb
sti
sbb
test
dec
mov
sub
and
andl
xchg
xor
cs
pop
mov
inc
in
jnp
lea
push
mov
fisttpl
js
out
and
incb
mov
cmp
ljmp
in
push
inc
ds
mov
shlb
rclb
add
stos
andb
mov
fistpll
scas
inc
push
cld
popf
push
adc
sub
jg
sbb
popf
push
nop
xorl
and
mov
add
jge
icebp
xor
outsl
adc
sbb
cmpb
hlt
fistps
and
mov
aad
mov
movsb
cwtl
inc
and
jg
sbb
aam
insl
in
les
es
and
xchg
adc
push
loope
das
lock
adc
in
cmp
inc
xor
into
lahf
es
sti
and
fidivs
orl
fimuls
stos
sub
and
in
or
jmp
cmp
idivb
mov
ss
adc
sarb
lcall
dec
mov
stc
mov
mov
int
sub
inc
jo
xchg
pop
and
pop
push
mul
aaa
pushf
pop
and
jnp
out
fs
ss
pop
inc
aaa
enter
sbb
mov
stos
mov
or
jo
xlat
mov
ffreep
cmp
add
pop
push
scas
andl
das
lds
rclb
aad
sbbb
adc
in
dec
or
in
popa
inc
push
pop
jne
or
out
cld
mov
adc
clc
ss
repnz
add
sbb
pop
das
ret
mov
jecxz
ret
jle
mov
push
xchg
imul
or
mov
stos
push
outsb
aaa
int3
hlt
sub
loopne
sbb
imul
test
ljmp
ss
gs
outsb
inc
jl
outsl
jge
mov
and
or
mov
mov
nop
add
mov
sbb
jne
and
je
out
dec
stos
fistpll
loopne
add
nop
adc
pop
sub
xor
dec
jno
ret
lea
xor
cmpsb
dec
xorl
nop
push
mov
mov
xor
mov
pop
fimuls
pop
sahf
cwtl
jbe
pusha
add
jne
jle
subb
in
mov
cli
mulb
rclb
repnz
and
in
out
dec
cwtl
cmp
fbstp
fdivrl
inc
dec
mov
mov
xchg
lret
lcall
push
push
and
data16
jp
testb
inc
push
fmuls
and
sar
add
call
movsl
inc
or
mull
jmp
mov
psubb
dec
mov
les
cmpsl
repnz
push
pushf
leave
sbb
sbb
mov
out
push
adc
cmc
test
js,pn
mov
cmp
out
mov
xor
dec
mov
subb
ret
inc
mov
xchg
fstl
xlat
pop
xor
cmp
xorb
shlb
add
jg
loopne
in
push
mov
and
push
mov
lcall
movsl
loopne
and
insl
lahf
mov
mov
and
jns
les
ja
mov
test
ret
test
add
mov
xchg
fs
sbb
ficoml
fcomp
inc
sahf
dec
cmp
leave
adc
popf
add
test
ljmp
rcl
sub
cs
mov
xor
add
in
xor
lret
sbb
mov
xor
jbe
mov
ljmp
dec
lahf
and
adc
mov
outsb
or
sbb
or
cli
xchg
push
dec
xchg
or
test
push
or
push
aaa
add
test
call
pop
jo
jg
adc
add
fbstp
repnz
xchg
repz
cmc
sub
mov
aam
push
ret
repnz
adc
push
mov
je
mov
into
stc
inc
bound
stos
jmp
outsb
inc
fbld
jecxz
imul
dec
add
shll
or
xchg
mov
jns
mov
add
hlt
and
sarl
push
out
shl
rorb
in
ljmp
mov
xchg
js
lds
mov
or
and
jg
fwait
clc
push
outsb
fiadds
je
or
stos
mov
daa
xorb
ficomps
cmp
cmpsb
cmp
ljmp
aaa
inc
mov
je
push
into
mov
cmpb
and
decb
adc
sbb
aaa
push
adc
add
inc
dec
cld
mov
dec
sbbl
xor
sbb
sub
or
cmc
aaa
in
nop
xchg
xor
fisubrs
repz
add
and
mov
insl
mov
popf
lea
mov
andl
sub
mov
fnstsw
push
in
dec
xor
sti
or
sti
adc
add
or
dec
push
add
mov
sti
sub
mov
inc
pop
sbb
ss
mov
imul
subb
inc
xor
rcr
loopne
outsl
push
data16
fstl
icebp
push
rcrb
mov
jle
mov
nop
test
sub
stos
add
jp
or
push
loope
stc
xor
out
mov
loop
or
or
xchg
jp
out
jno
inc
outsb
sbb
leave
sbb
jnp
inc
das
dec
adc
lock
gs
mov
mov
dec
fisubrs
push
jne
testb
mov
aam
stos
pop
push
pop
push
pushw
xlat
loope
std
in
sbb
sbb
bound
jo
xor
cmp
mov
iret
xlat
inc
mov
das
mov
xlat
dec
jmp
ja
add
std
jb
xor
lods
stos
push
loope
add
sbb
mov
add
mov
jbe
mov
mov
add
pop
xchg
aam
xor
addr16
movsl
cli
test
push
push
ss
fisubrl
aad
mov
test
gs
sbb
xlat
pop
pop
and
out
sub
push
push
xorb
xor
arpl
cltd
scas
push
lea
das
lods
or
mov
movsb
loop,pn
in
rorl
out
jp
cmpl
aaa
jge
sbb
std
lea
mov
dec
cs
hlt
mov
mov
fidivs
pop
jle
aas
adc
push
cld
push
rdpmc
cltd
sbb
adc
es
nop
ret
jnp
and
pop
mov
pop
xor
daa
sbb
cwtl
cli
loope
jbe
and
xchg
sbb
mov
or
jnp
inc
mov
stos
mov
and
mov
push
insl
daa
mov
test
cld
push
les
cmc
addb
push
fs
loope
ja
into
lods
inc
dec
into
mov
stos
lods
mov
or
mov
je
test
sbb
lds
shlb
lcall
loop
sub
enter
mov
adc
xchg
push
and
ljmp
push
adc
cld
inc
pushf
inc
push
jmp
jbe
mov
pop
mov
sahf
jl
inc
pop
lea
add
xchg
pop
movsl
leave
fcoms
in
xor
inc
insl
mov
dec
cli
mov
jmp
fisttpl
aaa
sahf
add
jg
ret
cltd
xor
adc
test
lock
loopne
adc
fadd
pop
in
jb
jne
imul
mov
sub
xlat
add
sub
adc
fs
mov
push
mov
or
test
or
cltd
add
sbb
subb
psubusb
imulb
sub
in
sub
sub
shr
loopne
jl
repnz
fadd
pop
mov
push
mov
dec
xor
inc
out
stos
inc
fucomip
gs
sarb
test
pop
movsb
leave
pop
dec
notl
add
add
incb
jnp
movsl
mov
mov
xor
andb
cli
xchg
scas
push
add
outsb
mov
push
push
cli
xchg
imul
add
xorb
fildll
popa
push
or
fs
das
je
dec
mov
imul
shrb
mov
mov
jbe
cmp
call
sub
test
push
loope
jg
imul
adc
mov
ret
insb
cmp
aad
stos
mov
inc
add
flds
cmc
jne
lcall
orb
lea
clc
adc
filds
cmc
pusha
cmpsb
jmp
pop
std
jge
adc
push
cwtl
pop
xor
pop
xchg
jbe
push
imul
push
fisttpll
clc
adc
sbb
enter
add
and
add
aaa
xchg
xchg
test
test
inc
ret
iret
mov
jbe
cld
or
aas
xorb
loope
jb
jne
pop
mov
pop
add
arpl
pushf
mov
fiadds
cmp
xchg
mov
inc
loopne
inc
das
rorb
or
mov
cs
push
sbb
stc
push
xchg
or
shrl
std
mov
or
sahf
xor
inc
ss
gs
push
test
out
jo
xor
out
mov
mov
cmp
xlat
jl
cmpsl
mov
and
inc
sbb
xchg
jmp
fstpl
pusha
aam
push
cmpsl
lods
xor
loope
scas
add
xlat
push
mov
mov
pop
inc
shr
fcmovbe
ficoml
dec
jle
aam
ljmp
pop
adc
sbbb
jle
mov
lock
mov
outsb
mov
fistpll
jl
adc
or
cwtl
or
ds
sbb
jg
adc
dec
js
pop
fisubs
orb
jo
aaa
cmp
sarb
testl
push
cltd
mov
mov
ret
or
jg
sub
push
mov
cld
arpl
adc
push
les
ret
jae
pop
pop
lret
xchg
inc
xchg
out
jno
rolb
insb
mov
nop
shrb
mov
sbb
jge
dec
lret
pop
lret
clc
or
mov
daa
jge
arpl
push
cld
dec
add
cmp
popf
out
lret
rcr
mov
push
dec
mov
pop
lock
lea
idivl
cltd
mov
inc
push
jg
outsl
mov
fldt
push
jge
daa
cmp
outsl
addb
jno
adc
adc
mov
push
or
pusha
andb
sub
push
repz
fsts
dec
ficoms
stos
inc
inc
jge
mov
cwtl
adc
adc
test
mov
inc
xor
in
test
addr16
push
addl
mov
scas
xchg
fs
mov
inc
inc
loop
adc
clc
in
sub
xor
push
jo
lods
mov
jbe
xor
aas
sub
out
jmp
add
lods
xbegin
outsl
fdivrl
nop
mov
jae
js
cltd
mov
aam
into
xchg
jecxz
add
decl
andb
adc
jecxz
add
mov
into
test
sub
push
or
lods
fdivs
dec
lods
lds
pop
inc
call
and
mov
or
add
sbb
add
ret
test
or
aas
adcb
sub
icebp
xchg
cmp
mov
pop
into
push
divb
push
clc
mov
jg
pop
pushf
fstl
cmp
sarl
fistpll
mov
lahf
push
jmp
inc
mov
inc
ljmp
sub
testb
lea
stos
pop
inc
lret
loope
js
loopne
or
cmp
sbb
xchg
xchg
iret
jmp
insb
aad
rcrl
stos
push
je
mov
xor
inc
add
jg
aaa
cmp
pop
call
xor
add
push
sti
scas
mov
nop
push
jnp
leave
pusha
xor
mov
add
push
daa
inc
rol
mov
jl
sbbb
imul
pop
fwait
xchg
xor
sbb
lret
das
je
inc
xchg
xchg
movhps
and
out
push
or
das
sbb
rcll
pop
jg
xor
jno
jb
xchg
sbb
adc
push
dec
ret
sub
rcr
cli
fcoms
sahf
sbbb
mov
loop
in
rcr
fwait
in
and
inc
daa
xor
fmuls
add
jae
push
pusha
adc
mov
push
pop
outsb
xor
aas
cltd
mov
push
xchg
lret
dec
faddl
mov
xchg
js
pshufw
push
call
loop
sbb
mov
insl
shrl
sbb
xor
jmp
enter
or
mov
nop
inc
xchg
test
lahf
popf
or
das
cmp
cli
and
pop
pop
cmp
outsl
ljmp
inc
jb
mov
mov
andb
sub
xchg
push
incb
jb
mov
mov
mov
push
int
scas
orl
pop
push
aam
dec
inc
lahf
mov
add
leave
sahf
sub
aaa
xchg
ret
mov
stos
daa
bound
pushf
xor
pop
paddb
mov
insb
mov
adc
add
outsb
es
adc
mov
and
jg
ds
pop
aas
mov
and
and
pop
push
lods
test
cltd
mov
or
cmp
stc
pop
jge
mov
fwait
aad
xor
mov
outsl
insb
in
aaa
adc
push
test
pushl
shlb
fldl
jge
push
adc
pop
mov
or
or
add
fs
jle
xchg
xor
aaa
mov
sbb
mov
or
cmpsb
adc
xchg
pop
dec
movsl
xchg
cmp
push
cwtl
jnp
push
jno
shr
mov
xor
dec
in
dec
cmp
xor
or
insb
mov
sbb
lea
mov
aam
movsl
inc
dec
inc
push
jb
in
aaa
adc
dec
dec
out
cmpsb
pop
inc
psubsb
inc
pop
mov
mov
shlb
push
sub
incl
cmc
mov
mov
sbb
rorb
cmp
fst
loop
adc
hlt
adc
sarb
pop
and
sbb
sub
sub
mov
mov
fisubrs
data16
sbb
push
pop
sbb
aaa
jecxz,pt
popl
hlt
sbb
pop
insb
inc
orl
mov
add
xchg
mov
lret
xor
das
push
lock
mov
xchg
aam
or
and
adc
jge
orb
cmp
pop
mov
push
cmp
aam
fidivs
les
dec
lods
or
lock
mov
or
pop
sbb
test
xor
mov
aaa
cs
pop
xchg
mov
lds
mov
pushf
adc
push
in
add
outsl
dec
pusha
arpl
cmc
and
fisubs
popa
push
cltd
sub
mov
or
push
sbb
lea
out
pop
jp
outsl
mov
cmp
jae
out
mov
in
ds
and
xchg
in
adc
aad
fimuls
stc
mov
add
dec
cltd
inc
loope
sbb
lret
inc
ja
bound
fsub
pop
clc
jmp
fidivs
pop
mov
adc
add
pop
pop
mov
roll
int3
xor
and
std
push
aas
adc
movb
jl
setns
jns
mov
pop
fnstsw
inc
lea
incb
add
fnsave
aam
push
cmp
test
sbb
adc
dec
pop
call
or
std
add
cli
in
xor
or
mov
xchg
bound
lcall
mov
test
or
ss
outsl
push
decl
or
cld
leave
outsl
aam
push
and
popf
and
loopne
sbb
testl
jb
std
dec
icebp
pop
jo
stc
inc
push
xchg
dec
jbe
jecxz
mov
mov
mov
fstpl
test
dec
in
int3
adc
mov
repnz
mov
jo
shr
int3
bound
test
add
jmp
cmp
push
stos
mov
mov
fistl
ja
dec
pop
mov
cmpsl
push
mov
inc
aaa
cld
jmp
and
or
cmpsb
notl
int3
scas
lock
pop
mov
adc
push
add
mov
pop
sbb
xor
xchg
or
inc
xchg
je
aaa
lahf
fs
ret
push
popa
xchg
pop
add
add
push
push
paddq
das
push
dec
adc
sub
add
adc
xor
lods
mov
fstpl
mov
add
in
pop
cmp
sub
mov
rcrb
outsl
clc
sbb
lcall
add
mov
lock
or
cmp
pop
ljmp
push
xchg
imul
insl
test
cld
lret
out
xchg
cs
mov
pop
mov
test
adc
push
inc
fistpl
jo
stos
sub
das
aad
or
movsb
jo
loopne
inc
pop
out
mov
or
sub
jecxz
bound
cltd
and
jecxz
aaa
mov
iret
sub
pop
add
fs
cmp
xchg
outsb
pushf
and
xchg
mov
enter
mov
ret
dec
mov
ud2
push
lret
and
push
or
mov
xchg
in
rcrl
add
sarl
or
jp
imul
jge
in
lods
or
movsl
cmpsb
outsb
mov
int3
sarl
and
pop
mov
pop
insl
aas
add
outsl
dec
or
test
xchg
xor
jg
cli
das
push
lret
data16
sbb
push
arpl
je
fmuls
inc
ja
inc
sbb
mov
out
loopne
inc
imul
scas
cmp
mov
lods
cli
jbe
test
inc
mov
cli
mov
cmp
sti
add
dec
xchg
in
aad
test
add
sub
mov
sub
xchg
stos
lea
mov
adc
insb
imul
in
cmpsb
fistps
pusha
mov
add
rcr
mov
add
and
xchg
push
jp
lahf
sahf
sub
mov
leave
and
out
and
fildl
fcoml
push
and
scas
test
xlat
das
roll
sub
sub
in
cltd
dec
mov
mov
cmp
pop
or
xchg
addb
sbb
pusha
pop
or
mov
xor
pop
sbb
into
mov
jge
mov
jo
adc
sub
jbe
cli
mov
movsl
cmpsb
cltd
xor
retw
mov
pop
popa
cs
stos
dec
sbb
sub
dec
cmp
vcvtps2dq
das
cld
pusha
add
mov
jns
aam
sbb
fidivl
icebp
and
push
sahf
mov
pop
mov
add
in
neg
hlt
pop
mov
jg
cmp
loopne
loope
add
or
pusha
or
inc
std
xchg
pop
ret
ja
cld
repnz
push
sbb
inc
out
and
ret
mov
imul
inc
lret
enter
hlt
mov
std
cmp
js
andl
stc
adcb
cli
lods
sbb
inc
mov
xor
ret
fwait
orl
test
mov
mov
movsb
movsb
pop
into
test
pop
jne
fidivrl
aam
nop
cltd
jo
or
push
sub
daa
shlb
xchg
je
push
add
jnp
cmp
xchg
ficoms
sbbl
ret
jne
lock
mov
sub
mov
das
cli
test
dec
dec
lods
loope
loopne
inc
mov
es
or
dec
stos
subl
jns
aaa
ljmp
sbb
test
push
jg
fmuls
push
add
leave
adc
inc
clc
pop
fistpll
cld
aam
jnp
cwtl
jg
popa
pop
cltd
rep
add
inc
xlat
in
jno
and
test
cli
pop
mov
cmp
mov
xchg
dec
aam
mov
lea
inc
mov
out
sub
or
imul
les
fcmovnu
ja
lods
pushf
cmp
sbb
cld
mov
jle
xor
insl
adc
jno
rcrb
mov
test
mov
xor
popa
add
popa
clc
movsl
adc
push
lcall
fnstsw
ret
insb
sbb
sbb
sarb
insb
lods
adc
bound
out
fcmovb
pop
and
mov
cmp
mov
mov
aad
lea
and
imul
push
icebp
dec
ds
mov
push
xor
and
fdivrl
mov
add
rorl
outsl
sub
repz
inc
mov
imul
or
popa
cmp
aaa
subb
sub
mov
inc
mov
inc
test
outsl
call
pop
or
xor
jecxz
inc
sbb
cli
test
loopne
or
cltd
or
nop
push
xorb
negl
iret
bound
arpl
mov
and
pop
in
mov
xor
ffreep
outsl
sbb
sub
xor
adc
orl
popl
jle
pushf
xchg
cmp
mov
jl
mov
jecxz
iret
dec
xchg
das
mov
push
adc
pop
mov
push
jg
loope
jne
sbb
add
xor
filds
and
inc
cmpl
fcmovne
or
dec
push
push
xchg
clc
out
jle
ror
or
ret
insl
inc
out
sub
cld
sbb
cmpsb
mov
pop
xor
cwtl
dec
cmp
pop
jae
inc
cltd
sahf
test
jge
rcr
in
shll
or
sbbl
mov
xchg
push
and
out
mov
scas
repz
mov
fdivp
into
test
shrl
leave
cmp
and
lods
js
add
add
mov
cmp
pop
cmp
aad
push
std
sub
pop
sub
jmp
mov
or
mov
loopne
jmp
xchg
lods
lods
aaa
cmc
insl
imul
adc
xchg
cs
test
jle
xchg
loope
sbb
fisttpl
pop
push
es
outsl
call
adc
jb
mov
sti
xchg
cmpsl
push
stc
jle
icebp
dec
xchg
mov
insb
add
sarb
aas
sub
clc
dec
ss
shrl
repz
loopne
and
in
in
movb
loopne
dec
in
inc
push
cld
jbe
fidivrl
xchg
push
mov
mov
mov
sti
sbb
repz
insl
or
sysexit
lahf
outsl
inc
and
enter
clc
inc
xorb
dec
aaa
es
cmp
jecxz
inc
out
hlt
cmp
outsl
add
add
loop
mov
adc
mov
stos
sbb
test
dec
mov
push
inc
inc
xor
outsl
sub
inc
loop
lea
push
and
aad
fmuls
test
dec
mov
stc
in
popf
aaa
or
fildll
aad
lods
divb
imul
cmp
sbbb
xor
push
fstpt
cmp
repnz
je
or
idiv
and
clc
mov
pop
add
pop
loop
push
sub
inc
call
sbb
stc
sbb
push
add
adcb
fiadds
ss
fistpll
mov
xchg
sub
orb
mov
fbld
sbbb
pop
adc
xor
push
fldcw
push
mov
sbb
movsl
add
pop
pop
loopne
out
xchg
cmp
arpl
inc
push
aaa
cmp
lods
arpl
dec
int3
scas
fs
icebp
jg
or
sbb
pusha
cmovl
jno
js
les
cli
add
cwtl
cmp
bound
mov
mov
aam
adc
cs
inc
filds
and
cltd
mov
hlt
inc
jmp
jp
mov
test
cmpsb
in
fwait
inc
add
aas
das
outsb
jp
icebp
lods
cmp
xor
push
filds
test
out
ret
add
clc
jnp
mov
push
mov
mov
cld
mov
dec
and
testb
test
or
rcrl
insb
cli
sub
pop
enter
in
pop
cld
jb
xchg
adcl
jp
sbbb
and
mov
int
les
imul
xor
fwait
shlb
sub
dec
cmc
mov
shll
ljmp
sbb
lcall
sti
out
clc
xchg
in
and
or
pushf
aaa
pushf
and
sub
jecxz
ret
das
xchg
cs
cwtl
insb
je
cmp
cmp
push
pop
jge
push
mov
mov
imul
aaa
fidivrl
adc
jecxz
lock
lea
insb
dec
das
adc
adc
inc
adcl
popf
clc
sbb
movsl
push
sbb
pusha
jae
inc
pop
push
fcomip
jp
repz
jo
xlat
add
jp
fsubr
loopne
pop
shll
inc
rcrb
cmp
test
out
inc
jg
std
es
sbb
ret
aam
cmpsb
dec
iret
ja
in
jb
dec
pop
fcomip
aaa
insl
daa
pop
inc
enter
cli
mov
stc
scas
dec
push
fistpll
das
shlb
pop
flds
and
lds
aas
mov
xchg
adc
add
lods
cmp
inc
add
push
add
inc
aas
inc
sti
lods
inc
sbb
movsl
xchg
in
lret
fisubs
into
adc
or
xorb
test
movsb
ret
jbe
adc
cmp
int
mov
mov
lret
repz
sbb
fimull
add
jg
cmp
imul
mov
ljmp
rorb
decb
mov
fadd
xchg
lcall
pop
pop
mov
mov
aas
fidivs
mov
or
mov
xchg
mov
aaa
push
in
adc
call
leave
push
stos
ret
inc
cwtl
mov
stos
inc
or
ss
cmpsl
jmp
int3
imul
sub
xchg
add
sbb
or
dec
shlb
jno
mov
aam
adc
adc
xor
xchg
aas
add
repnz
cltd
mov
and
data16
loop
cmp
dec
push
sbb
and
jg
fwait
lret
test
iret
insl
jmp
cmpsb
dec
out
call
or
adc
js
dec
push
in
icebp
pop
repz
aaa
lods
push
adc
jb
and
push
cmpb
push
and
test
add
mov
imul
push
mov
test
jb
and
mov
adc
ljmp
dec
mov
lret
loope
dec
jg
loop
xlat
inc
jg
scas
shrb
andl
jno
push
iret
push
jmp
jo
cld
movsb
in
mov
mov
imul
xchg
mov
arpl
and
xorb
outsl
xor
shlb
xor
gs
push
inc
in
mov
iret
js
xor
cltd
loop
cmp
pop
clc
mov
mov
shrb
mov
mov
xchg
or
outsl
jmp
cmp
sub
mov
imul
cmpsl
clc
neg
repnz
fiadds
xchg
xor
dec
addr16
xchg
stos
lea
and
repnz
jbe
in
mov
cs
scas
rcll
pop
jno
hlt
mov
push
rclb
mov
sub
daa
pop
test
jle
jle
pusha
imul
loopne
jne
rcrl
xchg
cs
sbb
out
shrb
add
aad
xchg
add
pop
fs
cwtl
clc
xchg
cwtl
xor
push
sbb
xor
decb
dec
fimull
add
sbb
ja
loopne
sbb
pop
enter
and
xor
jbe
or
xchg
jge
mov
test
dec
lods
leave
andl
push
aaa
pop
add
lds
arpl
push
sub
mov
push
not
aad
jmp
pop
xor
push
mov
xchg
repz
movsb
cmp
and
enter
add
insb
cmp
lods
mov
std
or
dec
pop
les
mov
popf
fdivl
mov
sbbl
push
mov
pop
xchg
fdivs
pop
lret
insl
and
rolb
ljmp
dec
mov
dec
into
inc
pop
loope
neg
dec
sbb
cltd
jl
mov
jmp
sarb
test
out
or
leave
ficoms
pop
ret
jnp
sbb
addl
fistps
popa
jbe
stos
dec
or
add
mov
pop
fadds
mov
fstpl
pop
adc
sbb
push
pusha
adc
jbe
and
and
aam
fists
fwait
xchg
fadd
fildll
jp
pop
jge
mov
push
xor
xchg
cs
ja
fdivrl
jmp
cmp
mov
rorb
int
fcomps
cltd
xor
mov
lds
mov
aad
fnstcw
fsubrs
outsb
outsb
mov
imul
ljmp
mov
pop
pushl
nop
push
mov
movl
insl
loop
test
dec
orl
aaa
shrl
cmp
mov
test
xchg
clc
dec
inc
rcll
push
mov
fs
adc
outsl
clc
xchg
shll
addl
sub
movsl
or
int3
int3
test
pop
sbb
sahf
test
sbb
out
fldt
bound
or
insl
and
shr
call
dec
js
push
loopne
cmpsb
mov
adc
int3
adc
xorl
les
rcrl
inc
xor
xorb
mov
mov
push
jno
ret
popa
add
ret
sub
stc
jecxz
xchg
test
loop
xlat
sbb
lods
fnstcw
mov
cli
das
jmp
ret
jmp
nop
xor
or
lds
adc
imul
lods
hlt
sub
insl
sbb
ffreep
pop
mov
jb
loope
call
mov
mov
insl
jmp
aaa
or
test
mov
aas
stos
xchg
sbb
mov
outsb
jmp
inc
les
sbb
into
and
fiadds
imul
pop
mov
shrl
add
std
jmp
test
cmp
sbb
mov
inc
pusha
cltd
or
lret
cmpl
daa
andb
sub
sar
fsts
dec
test
jo
or
jg
rclb
jle
cmp
adc
jg
outsl
mov
movsl
std
out
or
inc
lret
xchg
or
mov
je
lock
mov
lret
inc
mov
push
and
add
push
out
jle
xchg
loope
xchg
out
decl
or
mov
cmp
js
lods
ljmp
sub
stos
lret
leave
push
cmpsl
in
adc
push
aaa
lock
jb
mov
inc
cwtl
loopne
aam
adc
arpl
jb
xchg
pop
pop
add
in
sahf
lahf
jbe
adcb
mov
xor
or
ret
and
decl
out
push
sbb
xchg
rcrb
xchg
sub
sbb
cmp
es
aad
push
add
jnp
sbb
sarb
cmp
or
push
add
les
inc
jmp
dec
jl
jmp
cmpb
je
xor
hlt
jl
jle
jl
jnp
jnp
ja
stc
cli
movl
xchg
ficoms
pop
stos
inc
cmp
shll
push
sbb
xchg
pop
pop
loope
xor
out
ret
faddl
outsb
jmp
repz
cs
push
into
rcr
push
mov
mov
sub
les
loop
push
mov
shlb
mov
mov
inc
insl
xor
pop
insl
stos
jle
xchg
mov
test
int3
inc
mov
sbb
jo
and
add
xchg
jae
in
mov
jg
xchg
test
sub
rorl
jg
ljmp
lcall
mov
sarb
cmp
cmp
mov
add
fs
ss
cmp
loopne
mov
fwait
lret
stos
pop
ret
mov
or
cwtl
enter
repnz
sbb
aas
inc
or
icebp
or
test
adc
add
data16
add
pushf
jbe
lea
test
inc
test
lcall
rcl
inc
push
add
inc
sub
pop
loope
and
mov
add
pop
jbe
mov
imul
ja
mov
pop
jecxz
movsb
mov
jne
int3
movl
aam
jle
cmc
push
xchg
int3
xor
mov
sub
dec
push
ds
pop
or
jp
leave
jnp
mov
enter
cmp
jge
pop
je
xor
mov
divb
daa
fdivrl
or
and
shr
add
adc
out
subl
xor
or
xor
mov
daa
and
or
aam
in
fdivl
std
dec
inc
or
add
leave
roll
or
add
enter
cmpsl
mov
mov
cld
out
hlt
out
mov
push
cld
stc
jmp
nop
mov
int3
loop
or
comiss
in
or
push
mov
push
test
mov
cmp
in
test
jo
sub
pop
pop
movsb
pop
xchg
sbb
test
push
pop
int3
adc
xchg
adc
icebp
addr16
add
sahf
arpl
scas
scas
add
pop
movsl
pop
imul
adc
stc
adc
cmc
icebp
inc
les
cld
mov
js
mov
push
mov
sub
out
jae
mov
sub
adc
out
les
mov
jno
lahf
push
scas
sbb
jo
out
cmp
hlt
dec
jnp
sub
andl
mov
das
or
mov
mov
lahf
clc
aaa
stc
data16
inc
aam
ret
cmp
pusha
sti
outsl
outsl
xchg
pusha
mov
inc
and
mov
pushf
ljmp
aaa
adc
dec
aad
adc
sti
inc
rcrl
pusha
movsb
mov
jge
jbe
mov
mov
cmp
inc
sub
out
add
cmp
dec
cltd
xor
arpl
cmp
je
ss
imulb
sarb
fstl
ret
dec
and
xchg
movsl
or
mov
sub
das
or
fisubs
addl
roll
pop
add
and
xchg
leave
loopne
clc
aas
and
dec
les
push
and
dec
sahf
and
dec
cmp
lock
setnp
loopne
jmp
xchg
pop
fst
dec
add
mov
mov
mov
push
sbb
sbb
pop
mov
adc
out
or
lea
sbb
push
hlt
dec
lcall
xor
mov
clc
push
jae
jnp
mov
lods
sti
pop
add
mov
mov
dec
sar
imul
sub
nop
xor
aad
adc
test
lahf
push
call
pop
shrb
cltd
sbb
xchg
add
push
pop
icebp
xchg
ss
mov
or
lds
mov
sbb
jmp
notb
shrb
or
addl
stos
fldenv
sbb
orl
mov
sub
inc
ja
lods
ret
inc
pop
cmp
int3
jo
pop
inc
fsts
push
xor
sahf
sub
into
dec
add
inc
lea
push
iret
sub
fildl
pop
out
addr16
mov
cmc
sbb
or
pop
lcall
in
mov
xchg
ljmp
inc
and
pop
filds
adc
pop
test
mov
and
je
int3
cwtl
jbe
push
mov
or
aaa
or
adc
in
mov
jg
ret
bound
adc
push
sbbb
mov
inc
sbb
or
dec
xor
dec
or
sub
ret
push
jno
call
negb
fists
inc
pop
fwait
dec
insl
aaa
hlt
adc
cmpps
loope
fdivs
test
aaa
push
jne
js
or
cmp
inc
mov
inc
les
add
loope
imul
push
inc
movsb
out
imul
push
or
inc
lret
aas
ret
mov
pop
adc
jne
lea
push
xor
add
stos
repz
cmpsb
leave
add
adc
pop
js
mov
movsl
fdivr
adc
mov
movsl
outsb
adc
mov
aas
pop
icebp
lock
dec
add
push
aaa
test
ja
fbld
sbb
and
jae
iret
jmp
sub
mov
mov
inc
aad
and
sub
mov
push
xchg
movsb
sbbb
shrl
and
mov
in
jno
mov
or
outsl
and
inc
add
addb
fldl
cli
lea
lods
lods
fcoml
and
dec
out
lret
repnz
rclb
movl
ds
jnp
lock
mov
inc
dec
cmp
jg
jecxz
mov
addl
rolb
pop
subl
adc
add
mov
bound
adc
fsubp
fdivrp
pop
sbb
mov
pop
mov
pop
rcrl
sub
lds
jne
cld
outsl
sbb
add
xchg
ja
fmulp
mov
insb
mov
shrl
lahf
add
stos
push
push
jg
out
cmpsb
xor
loopne
loope
mov
push
add
xchg
and
ds
mov
popf
mov
fdivrp
jl
ret
das
or
jmp
jo
stos
push
leave
arpl
pop
dec
dec
and
dec
and
sub
adc
flds
cmp
xor
mov
sbb
movsb
test
mov
icebp
scas
push
loope
mov
and
adc
push
and
sbb
call
fnsave
cs
gs
outsl
lods
adc
in
icebp
sub
outsb
mov
jae
clc
cld
sub
hlt
das
ljmp
inc
mov
ret
inc
js
movsb
stos
jo
stc
dec
or
or
dec
cli
dec
dec
aaa
or
out
sub
loop
sbb
push
nop
xchg
jmp
ljmp
xchg
jb
add
loope
sub
cli
jne
in
adc
adc
inc
inc
test
add
hlt
js
push
test
sub
ljmp
cmp
mov
notb
leave
ja
xchg
inc
and
insb
or
pop
call
pop
xchg
mov
imul
jg
das
std
xor
jg,pt
sbb
push
or
jo
or
xchg
jle
adc
fstpl
add
daa
pop
outsb
add
daa
cld
out
jb
nop
add
push
call
adc
xchg
xchg
mov
js
ret
add
or
mov
pushl
mov
dec
inc
or
fbstp
jg
add
xchg
and
in
out
mov
dec
inc
movsb
and
and
adc
mov
das
out
sbb
dec
outsl
add
rcrb
add
mov
mov
mov
bound
and
fdivl
sub
mov
fcoml
cltd
je
or
shrl
adc
cmc
hlt
inc
iret
cld
push
test
cmpl
jae
inc
adc
mov
out
popa
and
xorl
mov
leave
aas
test
jmp
repnz
adc
pop
lds
pop
idivl
lock
xchg
cmc
and
loop
fwait
or
iret
fistps
push
or
adc
sbb
outsb
cmp
insl
dec
jp
lcall
cwtl
xchg
dec
and
rolb
out
adc
xor
stos
jg
movsb
rolb
mov
outsl
or
lret
inc
adc
js
jle
pop
mov
adc
dec
movsl
mov
xor
dec
decl
mov
dec
aas
mov
sub
fnstenv
outsl
lods
dec
mov
push
lret
lods
fdivl
adc
adc
icebp
aas
lcall
mov
mov
aas
icebp
scas
mov
xor
jecxz
mov
add
push
loope
insl
sbb
xor
pop
pop
cli
or
mov
aam
fisubs
je
jmp
out
dec
push
cwtl
or
sbb
rclb
negl
inc
testl
scas
inc
cmp
lret
mov
negb
dec
in
cwtl
xor
push
xchg
add
jl
outsl
lods
xchg
cmpsl
mov
ss
push
test
out
add
jecxz
adc
xchg
cmc
jg
je
lret
push
xchg
xchg
inc
adc
fbstp
fs
xchg
inc
fldl
movb
push
dec
mov
push
mov
fists
decl
icebp
pop
inc
flds
adc
sbb
sbb
mov
iret
adc
lcall
xchg
cmp
add
cli
rolb
sub
mov
dec
hlt
and
sbb
mov
imul
insb
cmc
cmp
pop
iret
pop
mov
out
les
in
mov
add
or
iret
das
push
cli
jg
inc
scas
jle
out
pop
sub
and
imul
jmp
outsl
adc
xlat
pop
or
rol
push
add
das
xchg
mov
sahf
push
cmp
or
das
daa
std
imul
lock
test
cmp
mov
mov
sbb
ud1
stos
push
subl
aad
andb
fldl
or
mov
push
out
xor
mov
js
dec
ficoml
sub
xchg
inc
arpl
mov
sarb
jmp
pop
pop
inc
push
shll
mov
mov
popa
jecxz
or
and
or
mov
loope
mov
sbb
cmc
or
mov
test
jne
stos
mov
dec
mov
jbe
mov
cmpsl
mov
cmp
jmp
mov
fistps
adc
or
pop
das
insb
aaa
lods
sub
dec
xlat
sbb
in
xor
inc
ljmp
hlt
inc
add
cmpsl
jnp
ja
mov
push
cwtl
mov
pushl
sub
ljmp
call
fcmovnu
add
sub
call
mov
imull
jge
call
je
dec
or
sbb
sbb
adc
lea
push
rolb
clc
notb
cs
add
mov
sbb
mov
mov
into
inc
and
test
mov
mov
je
shrl
mov
in
mov
movsl
imul
fcmovnu
dec
call
loopne
pushf
push
dec
add
lahf
adc
clc
push
shll
and
sahf
inc
jo
add
xor
mov
rcll
mov
inc
xor
inc
jmp
or
dec
sbbb
ja
inc
aas
inc
add
cli
mov
std
jg
pop
sub
fldt
pusha
in
xor
dec
jle
pop
repz
mov
pop
cmp
sub
cli
xor
sti
ljmp
add
sub
icebp
and
jno
xchg
mov
xchg
dec
xchg
cmp
arpl
mov
xor
push
negl
mov
cmpl
xor
pop
mov
pop
pop
sub
leave
ret
pusha
xorl
mov
adc
adc
sbb
pop
push
cli
les
rolb
les
lcall
cli
rcr
add
xchg
loopne
faddl
bound
and
dec
jb
pop
pusha
xchg
cmp
add
test
xchg
dec
jg
mov
addr16
and
cli
lds
out
shlb
fs
mov
incl
adc
cwtl
cmp
rcll
pop
add
sub
mov
jns
sub
add
jle
cmp
dec
mov
jge
js
jne
es
mov
or
xchg
dec
mov
aad
int3
mov
and
mov
rorb
ja
mov
outsb
xchg
sub
lock
xchg
xorb
lea
cmc
push
hlt
test
fwait
jno
mov
bound
push
push
fwait
push
ficomps
sbb
test
call
int3
iret
dec
subl
push
inc
pop
popf
test
jb
ud0
cmp
sbb
mov
xor
test
sbb
ds
pop
jns
mov
or
jg
mov
jbe
adc
ss
or
nop
xchg
ljmp
subb
xorl
pop
sbb
or
push
xor
pop
imul
insl
stos
add
mov
in
sahf
push
sbb
mov
push
and
add
inc
std
repz
scas
jle
push
in
sub
fs
push
mov
xlat
dec
mov
call
sub
dec
movsb
add
mov
mov
jns
stc
adc
sbb
add
and
xchg
xchg
or
cmpsl
das
jp
xchg
int
jg
sub
add
and
test
aaa
mov
sti
mov
ss
or
cmp
std
faddl
dec
jle
je
pop
rclb
test
jl
cmp
popa
jecxz
inc
imull
adc
dec
push
inc
jmp
es
ret
inc
aaa
push
inc
aam
fbstp
inc
test
add
mov
mov
or
mov
loop
fiadds
mov
in
inc
add
hlt
xchg
jge
mov
je
iret
cld
mov
fistpl
xor
add
mov
xor
jns
test
push
dec
jge
jae
bound
addr16
and
stos
aad
fsts
lds
jb
sub
call
jne
test
jp
addb
lock
lret
in
xchg
lods
popf
xchg
jmp
ss
jg
add
xchg
scas
inc
lea
sbb
push
jno
mov
adc
add
aad
and
cmpsl
cmp
ja
add
cmpsb
clc
outsl
mov
leave
mov
add
and
and
jle
jg
xor
cmc
push
movsb
push
aaa
into
test
shll
movsl
lods
lock
push
jno
push
std
in
inc
insb
adc
adc
sub
adc
dec
test
aad
push
cmpsl
mov
inc
popf
dec
fisubrs
jo
adc
mov
inc
jle
lea
xor
xorb
shl
faddl
aas
ficoms
dec
sub
clc
xor
mov
jns
pop
aaa
cmp
jae
and
call
mov
adc
test
mov
mov
sahf
popf
sub
lea
push
mov
js
mov
imul
ljmp
stos
cmp
jmp
mov
xchg
sbbb
in
add
fistpl
xchg
jg
ret
mov
pusha
push
sub
xchg
fsubrl
or
sbbl
adc
sbb
sbb
movsb
adc
push
stc
sbb
in
sub
or
in
daa
mov
cmpl
mov
in
dec
mov
adc
xor
inc
push
insl
loop
int3
gs
add
jbe
add
cmp
aam
insl
aas
lock
xchg
lcall
movsl
outsb
test
cmpb
movsl
ljmp
aas
mov
add
inc
mov
mov
push
push
add
daa
mov
mov
sub
mov
lds
push
inc
mov
and
lea
fidivl
sub
add
leave
mov
fsubr
pop
lods
adc
mov
ret
sub
mov
fdivrl
test
fs
cmp
sbbb
pop
pop
outsb
jg
mov
ds
pop
bound
je
aaa
jle
cltd
jmp
int3
fs
mov
fcompl
insb
leave
or
in
bound
sub
fistpl
and
lods
cmp
push
jle
sub
mov
inc
lock
push
jns,pt
sub
mov
mov
leave
std
movsl
push
mov
jo
xchg
hlt
mov
cs
imul
fadd
mov
mov
cs
add
and
lock
scas
dec
add
subl
daa
lods
inc
scas
sub
das
pop
aad
or
popf
icebp
add
hlt
jbe
test
adc
jnp
push
icebp
insb
popf
ret
std
testl
dec
fldenv
push
mov
mov
dec
xchg
mov
mov
aaa
cmpsb
movsl
int3
adc
jp
inc
ffree
test
mov
ja
or
xchg
out
dec
xchg
out
call
xchg
adc
std
jo
call
jae
jns
inc
xor
mov
pop
std
fldcw
jnp
sub
leave
in
loopne
xor
rcr
adc
stc
lret
pop
push
xchg
and
cmp
pusha
pop
push
mov
dec
mov
cmp
imul
dec
push
jae
fists
xchg
sub
cmpsl
adc
mov
filds
rcr
inc
shlb
adc
or
rorl
xor
fisttpl
inc
rol
add
ret
push
ljmp
movsl
or
sbb
mov
mov
mov
je
mov
orb
aad
push
sub
mov
or
adc
sbb
add
and
mov
fsubrl
or
cmpsb
leave
dec
jp
jle
lret
xchg
dec
es
es
cwtl
mov
pop
scas
sbb
scas
cmpsb
sbb
inc
icebp
and
sbb
mov
fstpt
cmp
add
stos
in
out
sbb
movsl
aaa
in
push
in
adc
fmull
and
arpl
aam
jmp
mov
cs
aad
lahf
lds
insl
sbb
adc
pop
or
fs
daa
pop
stos
mov
sub
jle
repz
popa
mov
cmp
jl
jo
jle
or
pop
and
roll
inc
mov
sbb
stos
loope
jecxz
fildl
mov
jb
test
mov
pusha
mov
insb
push
hlt
and
sub
add
sbb
fldt
xchg
js
dec
and
add
push
aaa
pop
mov
dec
fdivs
ljmp
pop
sub
fs
movsl
addr16
std
dec
outsb
and
sub
xor
leave
cmp
add
aam
jbe
fcmovb
fistl
mov
loopne
or
repz
into
or
inc
fstl
bndstx
fsubs
sbb
data16
inc
fldl
loop
xchg
sub
mov
cli
push
loop
cmpl
ret
nop
mov
mov
shlb
mov
in
xlat
mov
cli
adcb
cwtl
mov
lcall
lahf
push
xor
sub
popf
pop
roll
sub
incl
fcompl
jno
in
out
aad
push
adc
jne
mov
xchg
insl
mov
sub
arpl
imul
fimull
xchg
test
clc
bound
rolb
sub
mov
movsb
or
ret
pusha
xor
pushf
lea
scas
xchg
in
adc
lods
outsl
push
test
sbb
jmp
jbe
js
adc
xchg
xchg
inc
push
out
add
sbb
aam
push
arpl
xor
adc
das
bound
jle
clc
test
adc
popa
mov
and
mov
add
push
xchg
add
pop
or
pop
pop
cmc
mov
mov
ss
xchg
outsl
pop
pop
mov
jne
push
fisubrs
fcoml
bound
mov
xchg
mov
mov
stos
insb
sub
mov
cmpb
in
or
push
arpl
inc
add
xor
xor
movsl
xchg
mov
jge
dec
cmpsl
mov
sub
or
jns
adc
mov
gs
mov
push
cmp
lahf
dec
aam
out
and
fists
lret
lods
out
adc
and
or
outsl
mov
mov
sub
outsl
or
push
lcall
and
sbb
js
jno
iret
dec
cli
test
jg
add
pop
ja
out
lret
sbb
je
and
std
daa
pop
imul
mov
add
cmp
loopne
sbb
adc
mov
mov
pop
cmpsl
cli
lret
ljmp
outsl
inc
mov
je
lcall
pop
push
popa
jae
mov
lock
and
cmp
push
call
cs
jmp
movsb
or
sbb
out
cs
adc
test
sub
jg
fucomi
mov
nop
gs
pop
rsqrtps
cmp
and
fbld
addb
add
xchg
orb
or
dec
sbb
jge
fisubrl
outsb
xorb
js
das
bound
je
arpl
leave
jg
aas
lods
push
sbb
fistps
dec
imul
ret
mov
nop
pushf
pop
jmp
jmp
jne
lock
stos
inc
andl
outsb
addr16
sbb
sarl
out
mov
adc
mov
dec
dec
enter
push
dec
adc
test
sub
cld
jmp
in
lahf
mov
stos
push
cmp
lahf
jge
fiadds
aaa
scas
mov
das
or
rorb
or
dec
mov
jns
jb
dec
fcmovnu
sbb
push
adc
and
ljmp
cld
push
inc
dec
jle
or
jo
cmp
aam
xchg
test
enter
or
xor
scas
lock
jmp
aaa
pop
icebp
add
pop
in
add
or
jmp
fstpt
push
inc
enter
or
das
add
mov
aaa
dec
orl
sti
cld
xor
in
in
in
and
sub
lret
movsb
pusha
pop
mov
and
cwtl
mov
int3
mov
mov
add
lcall
or
sbb
fimuls
aam
dec
dec
shll
add
push
xchg
scas
push
frstor
test
mov
mov
mov
adc
ljmp
pop
or
sbb
cld
leave
outsl
cmc
cli
lods
rcl
adc
and
or
jle
repnz
jns
cwtl
add
add
rcr
dec
enter
xchg
and
jecxz
cmp
xchg
pop
add
repz
add
inc
mov
push
cmpsl
jnp
das
lds
pusha
movsl
out
inc
add
mov
jl
ret
inc
sbb
mov
pop
adc
rcl
jp
loope
pop
insl
es
cmpsb
int3
mov
outsl
insl
pop
mov
fadds
jg
jnp
sub
aas
mov
sub
cmp
dec
in
or
jb
jge
dec
iret
arpl
push
sub
sbb
daa
les
mov
fldcw
xor
pop
fbstp
scas
arpl
mov
xchg
dec
push
jae
out
out
inc
cld
call
aam
fcoml
mov
scas
and
mov
rcr
shr
imul
ds
dec
cmp
sbb
in
sahf
cwtl
ss
shrb
jle
or
jmp
mov
lock
out
push
ljmp
and
jge
adc
nop
pop
push
testb
sub
insb
insl
cmc
in
mov
adc
in
outsl
outsl
pushf
dec
test
ljmp
js
jmp
jl
xor
dec
stc
test
fsts
mov
pop
sbb
sub
xlat
lock
mov
lock
jmp
inc
ret
faddp
rclb
adc
cmc
cmp
test
jge
cwtl
outsl
cli
pop
cwtl
movsl
test
dec
shlb
cmpsb
popa
xor
xor
jnp
loopne
jecxz
movsb
pop
into
inc
jno
mov
mov
pop
inc
nop
fxtract
cmp
movsl
cld
testb
cmp
les
shll
shrl
push
cmpb
add
xchg
pop
orl
aaa
pusha
mov
and
inc
fiaddl
and
lock
push
hlt
mov
jmp
nop
stos
data16
data16
lret
dec
loop
mov
cli
imul
mov
lds
add
insb
movsl
and
ds
loopne
cld
call
and
cmp
xor
mov
xor
rcr
mov
mov
in
in
add
les
pop
sbb
xchg
inc
sub
decl
cld
add
cmp
mov
add
jno
mov
jo
dec
enter
in
daa
push
clc
mov
xor
adc
adc
decb
mov
ror
push
mov
je
jns
inc
inc
mov
dec
jg
dec
add
cmpsb
div
push
sub
cli
les
incl
and
or
cli
loope
and
cld
jg
data16
pop
icebp
and
sbb
lcall
xor
test
pop
imul
cld
or
cli
mov
scas
mov
ret
xchg
mov
js
inc
pop
push
mov
and
data16
add
ret
fbstp
pop
ja
mov
adcb
outsl
std
xchg
cmp
enter
roll
lahf
sbb
jp
add
lcall
bound
or
leave
and
lds
cmp
adc
test
lods
or
jge
mov
dec
mov
mov
adc
add
outsb
add
shrl
and
push
mov
sub
ret
push
call
dec
decl
or
lret
push
cs
das
inc
out
std
xorl
outsl
push
or
jle
xchg
or
ds
xor
adc
add
outsl
leave
decb
or
cs
ja
nop
cmpsl
sub
and
lock
jle
insb
add
add
out
sarl
das
insb
dec
movsb
and
push
lret
outsl
push
push
push
arpl
fucom
mov
mov
add
popf
lods
decl
mov
sbb
push
cmpb
pop
xchg
pop
sub
out
inc
xchg
and
push
cmc
rcrl
xchg
mov
arpl
nop
mov
xchg
and
out
mov
arpl
imul
sub
push
cmpsl
pushf
pushf
dec
mov
pushl
push
jg
pop
jle
mov
lock
or
pcmpgtb
das
inc
or
cmp
hlt
mov
adc
pop
mov
adc
and
xchg
shlb
sub
xchg
pusha
ret
cltd
icebp
xchg
sbb
out
adc
pop
and
out
cmp
iret
xor
and
aaa
push
movsl
or
rcr
inc
jle
sub
rorb
add
pop
or
movsl
std
and
je
or
nop
cmp
push
out
call
insb
out
int
bnd
cli
cld
push
mov
rolb
and
loopne
mov
jle
lcall
test
xor
shr
inc
pop
outsl
mov
repz
cltd
inc
and
mov
jl
test
pop
or
notl
rcrl
sbb
dec
ljmp
mov
push
sub
jecxz
int
cmp
xchg
movsl
leave
das
pop
orb
loop
cs
clc
jg
xchg
aas
jnp
gs
stos
into
or
dec
mov
aaa
or
mov
fisttps
into
sbb
inc
dec
fcom
mov
fildl
or
mov
lock
stc
xchg
inc
fsubs
and
push
pop
fs
jp
mov
jne
add
scas
pop
fcoms
mov
xor
into
negl
f2xm1
stc
fbld
sar
adc
shl
and
cmp
lcall
sub
sbb
pushf
js
mov
mulb
xchg
ds
in
stos
mov
fdivrs
mov
out
push
adc
inc
jo
mov
stos
mov
cltd
movsl
insb
push
dec
loopne
sub
and
loop
or
xchg
pop
decb
xchg
and
mov
push
and
inc
mov
aaa
cmpsl
dec
dec
cmp
add
sub
mov
stos
pop
scas
addr16
add
cmpb
sub
push
xchg
cmp
scas
sub
and
sbb
push
xchg
jmp
jle
sub
ret
stc
cltd
cmp
icebp
outsl
in
adc
cmc
pop
cmp
sti
push
push
and
outsl
jg
jp
rcll
aas
loope
cld
mov
aaa
cmc
sub
bound
mov
aaa
sarl
xor
stos
pop
int
fldenv
add
sub
into
jo
mov
pop
insb
shrb
jns
lcall
fisttpl
rcrl
sub
jb
pop
test
lea
dec
cmp
insb
fbld
movsb
hlt
add
mov
dec
push
popf
sbb
lahf
js
clc
push
xchg
xchg
stos
mov
mov
pop
fisubrl
push
or
lods
popa
ja
mov
mov
orb
push
stc
mov
aad
ja
sbb
xor
or
xchg
xchg
lods
adc
inc
and
or
decl
into
jecxz
cmp
adc
add
imul
pmaxsw
add
shrl
and
add
scas
mov
mov
or
xorb
xor
mov
mov
out
xchg
jb
xor
and
xor
shrb
jnp
hlt
add
sti
std
adc
dec
or
fucom
ret
xor
adc
pop
lcall
xchg
dec
jge
add
decb
jae
dec
push
push
fiadds
aad
push
mov
cli
cmpsb
addr16
and
or
dec
call
shrb
subb
fildl
aad
lods
add
cwtl
arpl
sub
push
andb
addb
push
clc
dec
sub
xchg
jb
lcall
cmpsb
mov
add
xchg
les
imul
sti
fmull
inc
lahf
jle
imul
jns
sbb
ret
mov
repnz
mov
adc
sub
cltd
test
mov
fdiv
add
in
rcrl
in
mov
push
jmp
mov
pop
pop
imul
adc
das
fistps
dec
je
fstpl
inc
and
fsts
push
pushf
sbb
int
pop
mov
pop
xchg
enter
bound
loopne
xor
pop
orb
adc
js
cmc
jle
fwait
adc
popf
mov
call
add
inc
popa
inc
and
mov
cmp
call
sbb
mov
ds
fiaddl
xor
daa
xchg
sbb
and
dec
jg
je
ja
dec
add
push
mov
inc
shll
ja
mov
inc
sbb
fmuls
cmpb
mov
cmp
mov
loop
in
ja
in
mov
cmpl
jno
xchg
pop
in
fs
sbb
popa
mov
mov
clc
inc
leave
jmp
pop
lods
cmpsl
dec
jg
sti
pop
cmp
jbe
pop
mov
mov
int3
jmp
cld
orl
mov
and
sar
push
push
sub
mov
mov
dec
pushf
ss
push
sbb
jnp
pop
fcomps
mov
mov
sbb
push
adcl
xchg
leave
stos
xor
loopne
mov
test
xchg
outsl
sbb
out
jno
pop
aad
xchg
aaa
push
mov
and
adc
jb
push
in
add
loope
movsl
add
xor
pop
dec
or
lcall
fwait
js
jl
js
pop
aaa
add
das
or
dec
sub
inc
lret
dec
test
mov
dec
cld
lea
aas
adc
jno
dec
lods
sbb
gs
ret
or
fidivrs
loopne
xlat
pop
popf
pusha
stc
mov
sbb
pop
xchg
outsl
mov
add
aaa
mov
jle
mov
mov
fnstcw
cmp
push
aaa
mov
inc
adc
inc
or
imulb
adc
sbb
xchg
mov
jg
sbb
repz
mov
mov
cmpsl
pop
test
fistpl
cwtl
popf
adc
loop
sub
adc
das
and
or
pop
jb
mov
and
je
mov
icebp
pop
mov
fcomps
jbe
lea
das
movsb
leave
movsl
mov
cmp
mov
inc
cmp
mov
xchg
or
cmp
div
pop
add
adc
push
jle
shl
cs
movsl
and
pop
arpl
or
cmc
fs
sub
dec
hlt
adc
rsqrtps
dec
fisubl
aad
sub
jle
sub
xor
pop
xchg
mov
out
fsubrs
addr16
sbb
lods
cmpsl
xchg
pop
jg
xchg
outsl
std
xor
add
or
pop
adc
pusha
jl
jle
outsl
pop
mov
xor
mov
and
jecxz
les
fs
sbb
sbb
or
cmp
xor
or
pop
pop
jnp
insl
mov
pop
sub
and
fcoml
pushl
test
inc
mov
xor
or
push
inc
jnp
add
popf
push
fidivrl
mov
inc
jl
mov
cmp
jg
in
incl
fsubrs
xchg
popa
jp
sti
outsl
insb
mov
adc
xor
xor
xchg
mov
icebp
loope
add
push
jb
add
mov
test
and
addr16
mov
and
push
jmp
lahf
mov
push
js
inc
je
and
ljmp
imul
mov
jg
mov
push
push
mov
mov
cmp
outsb
adc
mov
out
gs
leave
mov
ret
sbb
hlt
pop
push
notl
mov
add
cmp
mov
cli
mov
push
aam
rclb
adc
sub
aam
dec
mov
sub
hlt
push
repz
mov
aaa
inc
test
imul
repz
es
iret
inc
jnp
stos
jg
pop
pusha
inc
lock
test
ss
dec
pop
cmpl
pop
iret
mov
incl
mov
sub
pushf
subb
stc
xchg
jle
incb
ljmp
mov
jo
xchg
std
std
fcmovnb
fwait
mov
and
imul
and
jnp
or
test
push
je
pop
in
stos
loop
rcrl
mov
lods
sbbb
jp
ss
je
cmpsb
lods
push
call
repnz
xor
mov
sub
pop
jmp
lahf
push
cltd
iret
sarb
jl
scas
jns
arpl
dec
mov
jbe
mov
pop
fs
repz
test
and
or
or
mov
lret
cmp
add
scas
adc
fcmovnu
in
sub
push
cmp
xor
outsl
loopne
inc
stos
sub
andl
ljmp
adc
daa
popa
clc
cmp
pop
jge
or
and
arpl
test
mov
adc
sahf
cmp
pop
js
lcall
imul
adc
sub
add
inc
jno
fdivrs
arpl
sub
mov
lea
adc
cli
cmp
inc
int3
out
repz
or
push
fidivrl
or
or
das
rcr
fstpt
push
imul
pop
inc
inc
and
mov
psadbw
ret
fwait
dec
or
insb
fcoml
cmpsl
jne
push
icebp
ffreep
lahf
mov
out
cmp
or
and
lods
std
mov
mov
ret
lock
xchg
xlat
pop
mov
lock
movsl
cs
mov
das
inc
aas
add
and
pop
loope
cmp
push
lea
call
pop
mov
loop
or
out
test
mov
lds
adc
cmp
pop
insl
inc
hlt
repz
out
or
lods
xor
cli
jo
dec
js
mov
cmp
inc
lcall
mov
fldln2
or
add
lea
std
or
and
testb
out
push
sbb
cmp
lahf
mov
shl
sub
lods
outsb
cmpsb
add
js
ret
sbb
aas
push
mov
sbb
pusha
call
sub
sbbl
lret
mov
shl
rcrl
adc
mov
les
adc
cmp
iret
adc
inc
push
push
pop
xor
inc
jp
jae
mov
test
ljmp
or
or
add
jbe
in
adc
add
loop
cmpsl
aaa
or
test
cltd
push
dec
in
out
subb
test
push
dec
sbbb
adc
mov
fistps
jg
add
mov
push
gs
cmc
in
or
push
lahf
enter
cli
sbb
movsb
xorl
and
sub
lods
pop
mov
push
adc
fwait
cmp
pusha
insb
sarl
mov
pop
std
mov
or
push
inc
fimull
mov
push
mov
lods
add
cli
or
or
push
and
test
add
loop
mov
addr16
pop
add
push
out
sub
aad
in
ror
pusha
sti
push
inc
test
mov
cmp
adc
mov
ja
push
add
testb
fstpl
jl
xlat
adc
insb
test
call
jge
pop
cs
clc
sbb
cmp
pop
inc
push
inc
test
cli
jmp
aas
adc
rolb
lret
stos
lcall
or
das
decl
mov
xlat
ljmp
push
clc
aaa
clc
xchg
imul
test
mov
imul
add
mov
clc
fistl
iret
mov
dec
adc
push
sahf
cmp
add
adc
sbb
mov
mov
cmp
xchg
and
insl
push
adc
adc
mov
mov
add
sub
ffreep
sbb
les
push
cmpl
hlt
and
dec
fdivrl
xchg
mov
cmpsb
xorl
and
nop
fimull
pop
stc
ret
dec
cld
fwait
loop
dec
inc
jecxz
mov
add
or
sbb
mov
cld
shrb
mov
sahf
jae
jbe
bound
ljmp
jle
loope
add
sub
inc
mov
stos
mov
mov
addr16
cmp
loopne
fs
ds
sbb
adc
xor
fisttps
adc
pop
aad
dec
mov
sub
aaa
addb
stos
fisubl
imull
dec
out
or
mov
imul
push
mov
or
sbb
mov
xor
rcr
cmp
and
or
ret
mov
jg
pop
push
jns
cmp
int
inc
inc
adc
sub
popa
sti
mov
push
pusha
ss
jg
sbb
int
adc
sub
fdivs
test
add
pop
push
cmpsb
xor
in
data16
push
jnp
filds
push
bound
fdivr
push
xlat
inc
push
lock
push
pop
jmp
add
clc
nop
add
js
cwtl
imul
cli
xchg
and
mov
jnp
outsb
gs
adc
jo
in
inc
gs
rcl
fists
mov
xchg
mov
xchg
popa
decl
xor
dec
pop
test
mov
rcrb
inc
mov
adc
xchg
int3
pop
jae
rcrb
int3
sbb
leave
aaa
xchg
pusha
loop
sarl
lret
dec
cwtl
jecxz
sbb
xor
jb
inc
daa
pop
pop
outsl
jo
cwtl
test
add
ret
xor
add
ret
sbb
std
and
adc
nop
pop
js
sarb
and
jl
fcmovb
xchg
pusha
mov
icebp
inc
push
jo
add
cmp
sub
sub
sub
pop
jecxz
jle
mov
scas
in
jecxz
fadds
imul
xor
loope
jp
and
sbb
push
add
bound
mov
test
into
adc
loope
int3
data16
in
jns
add
cmp
xchg
lcall
fdivrs
sarb
fadd
mov
addl
ss
outsl
and
and
cld
das
adc
lods
xor
sub
or
lods
loopne
pusha
mov
mov
fimuls
out
std
mov
adc
lds
jmp
in
movsb
push
test
arpl
jae
pushf
data16
pop
cs
add
add
sbbb
hlt
lea
cmp
test
movsb
lds
sbb
cmp
fbstp
cmp
mov
mov
sar
push
xor
push
sbbl
call
subb
mov
out
mov
scas
adc
xor
addr16
imull
addr16
mov
js
jb
aad
sti
in
inc
cmpsl
push
inc
das
fisttpll
sub
stos
or
sbbl
test
jo
in
vphsubdq
push
in
out
adc
inc
cmpsl
mov
mov
mov
jmp
jo
inc
xor
adc
add
push
add
xor
test
outsl
lcall
push
push
orl
iret
movsb
loop
push
mov
mov
fucomi
insl
push
cld
and
sbb
por
xor
mulb
insb
mov
xor
pop
pop
aad
lret
icebp
cmc
add
stos
push
pop
divb
not
dec
inc
xlat
jecxz
push
dec
xor
cmp
pop
jne
loopne
xchg
iret
mov
pop
call
mov
fs
stc
mov
or
pop
inc
jl
pop
orl
jnp
mov
sarb
dec
scas
stos
fsub
int3
push
mov
shl
push
push
ret
xchg
inc
pop
bound
lock
into
and
lcall
sbb
xor
adc
mov
pop
mov
imul
mov
or
in
sbb
call
imul
mov
push
sbb
pop
lods
dec
xorl
cmp
popa
dec
daa
inc
cmp
sarb
dec
call
jecxz
jg
push
sub
aaa
inc
lock
dec
std
dec
push
shll
push
icebp
push
jp
and
or
mov
out
push
imul
js
nop
xor
cli
or
outsl
cmpsb
cs
orb
push
cld
pop
cmp
xchg
dec
and
lret
mov
out
or
pop
orb
inc
xor
pop
cmp
shlb
subb
xchg
pop
cmp
incb
lds
and
cmpsb
outsb
mov
dec
mov
dec
and
pop
fsubr
andb
pop
into
aaa
lahf
test
jg
je
mov
xor
or
call
clc
sub
adc
stos
sub
xor
sbb
loopne
sahf
dec
pop
enter
scas
in
int
or
cmpsb
pop
imul
or
fmuls
lret
mov
jg
lods
cmpsb
rol
fs
and
mov
roll
inc
das
fldl
stos
mov
inc
xchg
ffree
add
lods
inc
cmpsb
fstps
sub
dec
arpl
imul
pop
xorl
mov
jg
sbb
rcrb
clc
jmp
aaa
xchg
add
call
data16
jne
je
adc
sbb
dec
nop
sbb
mov
mov
push
and
fwait
cmpl
mov
outsb
pop
cld
push
stos
in
scas
sbb
jg
push
xchg
pop
pop
jno
add
xor
pusha
add
filds
mov
arpl
or
xchg
and
pop
rorl
mov
push
lcall
ljmp
cmp
std
cmpsl
push
rorb
pop
and
and
cltd
xor
or
sub
adcb
pop
adc
fiadds
cmp
push
repnz
adc
test
je
ffree
mov
sbb
push
pop
sbb
jmp
lock
out
mov
je
inc
fistps
inc
pop
cmp
inc
mov
jnp
pop
jp
and
mov
mov
outsb
mov
in
and
fistpll
xor
mov
jmp
out
clc
mov
xor
es
call
inc
test
fwait
cli
mov
mov
into
jl
cmc
pop
clc
jbe
xor
js
xchg
push
std
ror
push
icebp
mov
sbb
or
frndint
stc
aaa
pop
cwtl
cmpb
sub
inc
inc
pusha
adc
xchg
xchg
in
dec
pop
sub
lods
mov
mov
xchg
or
add
hlt
xchg
popf
fdivrl
repnz
add
inc
push
inc
popa
addr16
loopne
faddl
dec
popa
and
outsb
add
sbb
jmp
add
sbb
mov
or
or
je
xchg
push
out
dec
mov
or
es
jne
inc
mov
aad
arpl
lods
push
mov
sbb
mov
shrl
sub
sbb
pop
sbbl
add
push
aas
push
test
adc
xchg
stos
mov
aaa
outsb
cli
and
imul
sbb
outsl
dec
rcll
lret
rclb
pop
xchg
push
test
pop
push
mov
and
loopne
decl
leave
jnp
jp
or
enter
dec
insl
clc
sbb
xchg
push
mov
orb
cs
pop
sbb
ds
xchg
cli
dec
dec
ja
in
jne
fists
xchg
pop
xor
sbb
shl
and
leave
add
mov
subb
fdivrl
lock
mov
lds
mov
mov
je
mov
cmc
lds
pop
out
mov
jge
inc
mov
repnz
jne
sbb
std
cmpsb
stos
icebp
dec
push
testl
push
add
xchg
sti
loopne
fistpll
xchg
cmp
call
jo
mov
push
xchg
int
sbb
outsl
pop
stos
mov
xor
test
adc
add
mov
pop
imul
sbb
test
negl
imul
sbb
adc
mull
stos
xor
push
insb
jg
pop
cmp
hlt
xchg
pop
dec
sbb
add
std
mov
xor
fs
mov
sbb
aam
mov
jl
jl
in
mov
and
pop
pop
add
out
adc
xchg
das
cwtl
fisubrs
mov
and
jp
xor
xor
mov
into
stos
mov
orl
mov
pop
add
aad
push
cld
xchg
lcall
aaa
shlb
adc
cmpsb
jle
cs
je
bound
insb
cld
cs
push
adc
loop
mov
push
fsubrl
adc
pop
sbbb
jge
insb
mov
sub
push
and
inc
sbb
lock
andl
push
xor
popa
mov
mov
xchg
leave
xorl
mov
sti
mov
push
or
push
loop
enter
notb
adc
dec
out
lahf
or
fdivs
aaa
inc
sub
cmp
ret
jns
out
ds
aad
cmp
outsl
push
sub
pop
push
mov
test
pusha
fcompl
jg
cmpl
jecxz
mov
push
dec
sub
sub
das
inc
adc
ljmp
mov
cmp
je
scas
fldl
sbb
or
lret
aad
push
fldt
movsl
mov
mov
push
jl
std
fildll
aad
mov
rcr
dec
cltd
imull
inc
sbb
in
sub
mov
scas
cwtl
pop
add
mov
dec
lea
xchg
stc
xchg
lock
aad
lea
push
sahf
fadds
add
sub
jp
mov
push
fwait
loopne
fisttps
pop
and
inc
mov
fnstsw
and
test
or
pop
dec
xchg
test
jle
aaa
jle
stos
mov
adc
mov
dec
sbb
ret
subb
popa
stos
insb
sbb
fildll
sbb
cmpb
nop
push
sbb
je
xchg
push
cmpsl
inc
repz
and
jb,pt
pop
add
aaa
cs
insl
popa
xor
bound
icebp
pop
lret
lock
mov
sbb
mov
popf
sub
mov
xchg
mov
sahf
or
dec
mov
and
cld
jge
ret
inc
ret
imul
jp
sub
imul
ret
adc
stc
mov
dec
in
lcall
dec
push
faddp
pusha
enter
ret
into
pop
mov
push
inc
mov
or
add
mov
aam
out
aam
imul
nop
je
incl
xor
test
dec
mov
and
shll
add
push
mov
inc
cwtl
sub
in
add
adcl
jg
xor
pop
lds
mov
stos
andb
out
rcrl
movsl
sbb
fsubrl
add
fwait
pop
xchg
mov
les
push
push
or
mov
mov
mov
orl
test
pop
icebp
and
mov
mov
cmp
xor
mov
or
stc
mov
sbb
sbb
arpl
mov
lods
xor
test
pusha
mov
mov
dec
lods
loopne
cmp
out
cmpsb
lods
lret
xchg
mov
rclb
inc
lret
ljmp
xchg
data16
jmp
shlb
mov
jns
cli
mov
dec
jmp
inc
mov
dec
and
in
push
lds
movsb
pop
inc
ja
jb
xchg
fwait
add
ljmp
jg
scas
dec
cltd
cli
or
ss
imulb
sbb
sbb
inc
cmp
jo
sub
lret
ret
pop
sub
pusha
fiadds
rclb
out
fidivrl
xchg
xor
xchg
incb
testb
lods
sub
pop
fsubrs
sahf
lahf
push
jg
lcall
nop
xchg
or
cltd
mov
in
push
into
push
add
xchg
adc
adc
push
fadd
or
fisttpl
fsin
lea
lods
mov
push
gs
push
je
pop
testl
sti
sub
or
stos
mov
sbb
cld
jg
test
cmp
sub
in
shlb
rol
pop
in
sbb
jl
push
mov
repz
xor
sub
sbb
adc
clc
push
inc
adc
mov
sbb
sbb
sbb
lock
cmp
mov
jg
pop
mov
cmp
or
mov
jae
add
xor
pop
inc
lds
dec
and
jbe
and
std
xchg
xchg
repz
lods
ret
or
sub
and
scas
aam
and
sub
aaa
movsb
mull
stc
in
mov
movsl
xlat
dec
cmpsl
test
sub
sbb
test
ffreep
mov
mov
mov
mov
cmp
call
inc
xchg
addr16
imul
ficomps
push
fcomi
push
mov
pop
xor
inc
fadd
test
cmp
xchg
enter
or
and
mov
adc
jo
inc
iret
dec
mov
bound
xchg
ds
pop
add
aad
frstor
out
mov
js
and
lcall
mov
mov
aaa
cmpb
sub
inc
loope
push
fstpt
jne
into
or
stc
test
push
mov
enter
push
mov
ljmp
xlat
add
mov
xor
mov
std
hlt
and
das
out
mov
pop
dec
sbb
push
movsl
out
xchg
sahf
mov
lret
mov
mov
mov
mov
iret
pop
and
pop
add
test
adc
ret
shl
sbb
cmp
and
mov
rcrl
xor
loop
int3
mov
jp
arpl
pop
mov
shrl
stos
addr16
sub
add
mov
cmp
push
mov
mov
dec
das
jne
push
xor
xor
mov
sbbb
shll
repz
clc
pusha
pop
pop
inc
xchg
outsl
rcr
aaa
dec
std
pop
imul
out
push
dec
xlat
and
fnstsw
loopne
pop
push
movsl
xchg
xchg
lea
outsl
push
ficoms
sub
rcrl
add
and
mov
jge
and
repnz
das
jo
xchg
xchg
mov
lahf
push
push
sbb
inc
inc
mov
je
xchg
mov
pop
mov
mov
call
mov
add
dec
enter
mov
imul
mov
fdivs
call
mov
pop
leave
push
cmc
push
rclb
add
lock
orb
outsl
ljmp
inc
outsb
insb
add
sbb
adc
add
xchg
ds
test
cld
mulps
mov
outsl
movb
and
mov
sahf
dec
outsl
test
mov
std
in
cld
inc
jbe
ss
into
sub
jns
loopne
adc
out
mov
dec
mov
adc
or
jnp
lds
mov
addb
push
test
imulb
or
dec
ret
bound
in
xlat
add
sbb
mov
mov
dec
nop
mov
mov
dec
out
mov
push
addr16
adc
dec
jecxz
mov
add
ja
lock
mov
es
push
and
sbb
xchg
add
cmp
inc
or
cmpsl
lods
imul
cmp
call
loop
sbb
rol
daa
aas
push
xchg
sahf
int3
xchg
mov
nop
sub
enter
lahf
inc
or
ds
dec
inc
pop
lcall
xor
inc
fidivs
xor
cmc
clc
in
rcl
mov
scas
inc
pop
rclb
pusha
fldt
aaa
or
jb
es
mov
xor
daa
fildll
cmp
negl
loopne
es
and
aas
push
arpl
imul
data16
mov
or
and
aad
mov
imul
std
dec
mov
dec
pop
dec
jle
fidivs
in
dec
cmp
add
push
outsl
adc
cmc
jle
cmpsl
ret
test
mov
adc
and
hlt
out
jle
lods
adcl
roll
fisttpl
insb
das
xchg
inc
cmpsb
and
add
and
mov
adcl
add
in
mov
rcrl
lret
loope
test
outsb
insb
mov
and
addb
setb
jp
sub
and
leave
insl
test
add
xchg
adc
loopne
pop
outsb
mov
jo
enter
sbb
aaa
inc
pop
add
inc
fsubrl
out
mov
dec
xchg
inc
fisttps
xlat
add
add
out
incb
xor
jbe
outsb
fsubl
mov
orl
cltd
or
sub
int
cmp
repnz
jmp
pop
xor
mov
mov
pop
push
dec
add
imul
xor
dec
jns
daa
xor
scas
or
lods
test
jg
cmp
or
mov
icebp
bound
aad
sub
stos
addr16
and
sbb
loope
popa
or
test
xor
loop
xor
jbe
xchg
insb
ds
add
mov
out
sbb
jmp
inc
faddl
cmc
cmp
ret
add
imul
loopne
pop
les
das
jl
jg
inc
shll
insb
inc
rcrl
jecxz
aad
mov
subl
inc
imul
or
or
icebp
ret
mov
sub
and
jno
xor
mov
mov
insb
les
mov
and
or
adc
sahf
insl
jl
ret
jecxz
sbb
mov
xor
jmp
sbb
addr16
push
clc
decl
mov
lods
iret
sub
jbe
lods
push
mov
inc
pop
or
test
inc
out
jmp
rorb
jl
jne
loope
call
mov
pusha
or
mov
sub
xchg
mov
inc
out
cli
push
mov
sti
loop
lahf
jne
sub
push
jb
adc
sahf
jb
loope
testb
cmp
stos
shrl
fidivrl
mov
adc
in
ud0
mov
lea
push
push
xor
xchg
xchg
and
push
lock
pop
sti
pop
cmp
push
sbb
mov
out
mov
subb
inc
jmp
sbb
out
push
xchg
les
add
push
add
incl
sub
addr16
push
in
cmpsb
push
cmc
inc
jbe
ss
cmpsb
pop
sub
nop
lock
xor
aam
mov
inc
sub
rcrb
pop
add
or
sbb
stos
adc
pop
bound
sti
adc
sarb
mov
aam
mov
jge
bound
jg
mov
icebp
push
jg
inc
push
mov
and
dec
aam
imul
dec
cmc
jno
xchg
sub
sub
daa
jb
addb
dec
fidivs
mov
fistpll
add
jbe
pop
lods
fcomps
cmpsl
icebp
divb
test
fidivrs
das
xor
test
fmull
and
test
in
cmp
cwtl
pop
inc
gs
ja
fldt
and
pop
cmp
fninit
add
jo
nop
mov
mov
push
push
pop
xor
jl
shrb
sub
int3
add
stos
dec
sub
mov
stos
js
outsl
test
or
pop
data16
adc
popa
push
xchg
mov
hlt
cs
insl
xchg
lds
adc
xchg
outsb
aas
adc
repz
add
xlat
and
mov
hlt
add
rolb
mov
ret
icebp
aas
dec
std
aaa
jne
add
or
sbb
adc
mov
outsl
fsubs
mov
add
or
sub
cld
mov
adc
add
xor
stos
xor
cmp
pop
jmp
push
shr
fimuls
push
out
je
ljmp
xlat
rcr
inc
in
or
je
ja
xchg
lods
mov
or
les
xchg
mov
add
js
fwait
mov
daa
dec
mov
das
xor
pop
shrb
jns
sbb
cmp
dec
mov
pop
sub
repnz
jge
je
push
mov
add
repz
xor
sbb
cmp
mov
stos
mov
push
aad
adc
negb
mov
xchg
jnp
dec
xor
int3
push
sub
scas
fnsave
push
pop
xchg
fisubs
testl
outsl
bound
jnp
and
or
xchg
cmp
pop
clc
ljmp
fsubrl
xchg
nop
jne
call
inc
es
sbb
fdivrs
dec
daa
inc
in
lea
sbb
mov
mov
inc
or
push
mov
outsl
xchg
fidivs
dec
or
sbb
sti
mov
loopne
test
mov
push
shr
out
hlt
cmp
or
push
push
mov
xor
nop
or
push
outsb
adcl
xchg
in
mov
inc
xchg
mov
push
adc
sbb
movsb
shrb
imul
lea
enter
stos
insl
cli
sbbb
xchg
ret
test
fistpll
loopne
push
les
ret
popl
loop
jmp
sub
pop
ss
mov
enter
insl
sbb
pop
jg
nop
and
push
lcall
jbe
or
cltd
mov
or
xor
mov
sub
popf
jno
or
and
in
test
jl
mov
aad
mov
clc
sub
xor
loopne
push
fdivrl
mov
aaa
sbbb
insl
cmp
sub
xchg
adc
xchg
push
jae
push
cld
cmp
adc
mov
inc
cli
sub
movsl
mov
scas
dec
xor
aaa
or
cmpsb
jb
adc
jnp
fisttpll
or
lods
pop
sbb
cmp
push
pop
test
cmp
pop
sub
cwtl
push
and
jecxz
add
rol
ret
lods
mov
dec
cmp
mov
jp
pop
sti
mov
ficompl
aas
inc
es
adcl
and
fucomip
xchg
dec
jo
cmpsb
out
sub
jbe
adc
inc
mov
jge
sti
pop
movsl
cltd
shll
sbb
adc
scas
dec
pusha
or
in
addb
inc
scas
sbb
pop
inc
push
iret
lea
insb
dec
mov
lea
xchg
or
arpl
test
ficompl
rcrb
cmp
push
cmpl
sub
add
aad
jns
adc
subb
mov
cmp
sub
or
dec
adc
xchg
mov
loop
cld
push
leave
mov
aad
fadd
idiv
xor
add
xor
sti
mov
stos
mov
push
loop
mov
and
test
add
pop
ss
decb
xchg
or
inc
clc
and
xchg
aas
mov
ss
fld
or
ds
icebp
sub
aam
jg
push
add
pop
sub
xor
push
pop
out
in
mov
sub
loopne
pop
inc
mov
and
mov
nop
pushf
movsb
mov
pusha
pop
popa
test
xchg
pop
or
mov
out
add
push
insb
push
adc
sub
mov
insl
add
jns
jns
add
inc
mov
push
enter
stc
xor
fwait
sbbb
adc
mov
hlt
adc
mov
cli
lret
push
test
std
sbb
sub
fcmovnu
pop
mov
or
mov
fldt
fsubl
fistl
mov
push
mov
jmp
and
mov
stos
pop
je
mov
sti
aaa
adc
cmc
push
pushl
lcall
rcrl
pop
jns
mov
inc
sbb
insb
lods
push
cltd
add
mov
stos
or
out
mov
xchg
nop
dec
adc
pop
div
in
jae
leave
mov
sbb
lods
xorl
aad
cmpb
dec
dec
lret
xchg
inc
loopne
cmpsl
cwtl
xor
mov
add
js
pop
js
into
test
xchg
mov
rcrb
add
mov
divb
and
andl
leave
les
test
leave
testl
adc
mov
xchg
mov
leave
out
lock
ss
ljmp
jno
pop
aam
sub
push
inc
fs
and
cmp
das
je
pop
cltd
scas
int3
ss
jbe
jge
mov
inc
jge
mov
popa
push
dec
pop
jmp
lret
ror
lods
jbe
or
dec
inc
mov
std
mov
xchg
gs
sbb
lock
cmp
stos
mov
dec
mov
sarl
and
jo
sub
ljmp
mov
movsb
sahf
pop
jmp
imulb
or
inc
xlat
loopne
imull
and
sub
pop
mov
cmp
ljmp
ljmp
dec
repz
mov
std
rolb
pushf
or
adc
xchg
add
testb
push
jge
xor
outsl
test
clc
xor
rcrl
jge
pop
movsb
cmp
pop
mov
leave
cmp
xor
cmpl
push
xchg
pop
cmp
cmpsl
stos
imul
jo
ja
fldt
sbbl
and
xchg
fs
ss
lahf
lock
ja
xor
mov
fnsave
inc
pop
cltd
push
mov
fdivrs
sub
push
sub
cmp
cmp
and
repz
jecxz
aaa
fldl
out
mov
cs
inc
xchg
movsl
mov
cld
or
fdivrs
mov
add
orb
in
inc
ud0
mov
adc
mov
add
fistl
loop
xor
clc
sub
rcrb
inc
lods
mov
add
fisubrl
hlt
out
and
mov
insb
cld
gs
or
lcall
pop
jmp
frstpm(287
lcall
add
test
adc
icebp
arpl
and
mov
mov
fdivl
jg
adc
test
cli
cmpsb
lods
inc
push
int3
dec
push
hlt
notb
mov
or
mov
jecxz
aas
nop
or
sti
push
xchg
popa
pop
or
xchg
arpl
lods
jbe
xor
push
lds
addr16
adc
daa
sbb
dec
les
xchg
dec
xor
jecxz
xor
mov
mov
mov
or
sbb
dec
and
sarb
aam
fs
dec
icebp
mov
inc
insb
pushf
cmpsl
dec
mov
push
pop
jae
fcomps
fidivrl
xchg
jae
and
add
inc
sbb
or
mov
pop
mov
fcmovu
ljmp
pop
scas
out
ja
dec
stc
jo
mov
dec
aaa
jmp
mov
aas
mov
adc
stos
add
sbb
sbb
mov
ret
fildl
xor
dec
iret
and
int
pop
jno
cmc
push
sub
mov
adcb
imul
fcmovnb
jmp
mov
fsubl
pop
lahf
cltd
push
nop
loop
test
mov
cmp
adc
ret
lahf
sub
adc
push
fnsave
push
add
and
jnp
jmp
sti
inc
out
loop
cmc
movsl
xchg
cmc
das
mov
xor
sahf
sbb
je
pop
fiadds
xchg
xlat
in
adc
das
aam
and
dec
arpl
or
pop
das
shlb
les
orl
or
adc
outsl
aad
push
xchg
add
idivb
mov
in
jb
sti
test
iret
sub
jp
jg
or
adc
adc
push
push
gs
punpckhdq
or
stos
add
xchg
cwtl
rolb
push
and
xor
scas
add
pushf
repnz
lret
cmpsl
add
fildll
in
out
and
xor
fs
mov
cli
lret
test
add
lea
xor
and
loope
sub
stc
sub
or
and
jae
mov
pusha
arpl
jle
fsubrl
in
rcll
xchg
orb
dec
nop
pop
jecxz
in
dec
sub
mov
push
loopne
inc
jge
sub
add
or
xchg
imul
clc
outsl
aam
outsl
pop
sub
nop
cmp
mov
and
mov
dec
pop
lahf
add
mov
push
pushl
mov
pusha
add
adc
fdivrs
pop
aas
and
dec
in
dec
shlb
jp
cld
mov
or
rcll
popa
cmpl
mov
mov
push
cmc
rcr
sarb
and
mov
and
jae
cli
add
mov
test
stc
frstor
je
xor
cmp
movsl
mov
aas
inc
xchg
pop
loope
pop
push
dec
enter
mov
mov
pop
pop
or
cltd
in
mov
popl
xchg
cmp
aaa
mov
cmpsb
xchg
pop
movsl
pop
sub
and
into
push
stos
hlt
loop
or
mov
dec
sti
popa
jo
je
sub
aam
ret
dec
flds
cmp
and
and
cmp
lret
adc
addb
jl
enter
sbb
subb
cmp
ss
fstpt
cmp
pop
xchg
lock
cmp
or
ljmp
loopne
fs
xor
cmpl
cmp
iret
xchg
std
inc
pop
push
bound
lsl
push
dec
or
mov
dec
mov
sub
test
push
inc
inc
xchg
mov
cmpsb
cltd
pop
fdivrp
lock
ljmp
push
pushf
mov
mov
cmp
cmp
fstpt
test
xor
push
and
push
jl
out
sahf
out
movsb
cld
mov
je
out
stos
stos
pop
add
mov
inc
add
in
ficoml
jl
mov
std
les
xchg
out
adc
cmp
cltd
add
push
mov
shlb
ljmp
jo
sbb
nop
andl
mov
imul
and
mov
int3
sub
push
hlt
add
sub
decl
mov
xor
adc
das
jne
lods
mov
rorl
xchg
stos
cmpsl
mov
subb
js
andb
lds
push
cmp
scas
fcoml
das
sbb
jne
jmp
push
add
js
inc
cltd
or
add
inc
mov
sub
testb
in
inc
and
sbb
add
sbb
sbb
fwait
xchg
imulb
lea
dec
cs
mov
mov
cmpb
lea
cld
insl
fldt
cltd
out
push
test
mov
mov
in
jmp
mov
int
sar
js
adc
mov
mov
call
data16
jne
imul
cmp
imul
mov
loop
lret
xor
sti
add
dec
mov
jecxz
ret
adc
jl
pop
or
pop
inc
ret
cmp
test
cli
call
mov
adc
push
loop
sub
rclb
cmp
sti
sbb
sbb
gs
fldpi
call
mov
xchg
lcall
fucomip
jbe
test
push
xor
divl
test
push
add
in
sbb
jl
adc
notb
mov
idiv
sub
adc
das
cld
cmp
stos
xor
aam
dec
lret
inc
xchg
add
pop
std
fisttpl
sbbl
lcall
daa
adc
xor
mov
aaa
dec
push
push
sbb
or
fstpl
pushf
add
fisttpl
xchg
mov
jle
inc
addb
jne
sbb
dec
sbb
mov
sbb
mov
mov
mov
and
xlat
es
nop
mov
mov
cmp
hlt
pop
sbb
adc
sbb
icebp
rorl
sbb
xor
subb
push
mov
arpl
sub
and
int3
xchg
push
jl
daa
push
sub
das
xor
test
push
and
fsubrs
and
out
and
loop
pop
jl
mov
mov
imul
sti
push
dec
mov
push
lahf
ret
cwtl
fstp
leave
mov
dec
add
dec
pusha
inc
inc
sub
xchg
pop
sbb
jmp
and
unpcklps
mov
jo
gs
iret
aad
aam
negb
push
icebp
bound
or
lcall
scas
and
dec
leave
insb
lock
imul
stos
fcmovbe
into
and
sbb
gs
insl
dec
inc
mov
es
add
mov
inc
jns
ret
and
mov
mov
mov
flds
mull
test
push
mov
mov
addb
add
push
aaa
inc
fcmovnu
push
imul
xor
add
pop
add
fyl2x
lea
lods
pusha
jecxz
shlb
cmp
mov
adc
push
cmpsb
aas
jmp
nop
xor
fldenv
mov
jae
filds
pop
call
je,pn
dec
fisubs
mov
sahf
push
inc
inc
cwtl
insb
xchg
arpl
call
dec
jns
loope
mov
aad
imul
loope
notb
test
in
adc
inc
pop
nop
push
incl
lret
fsts
mull
aam
gs
rorl
cltd
sub
addb
jl
inc
xchg
in
ss
ja
lds
jbe
clc
mov
les
in
mulb
cmpsl
data16
push
jmp
fidivs
cmp
cmpb
mov
in
inc
lock
std
dec
add
cmc
inc
jo
add
mov
or
idiv
adc
and
xchg
dec
call
inc
sub
cmp
push
cltd
cli
xchg
dec
sarb
inc
outsl
xor
push
mov
test
cmp
xchg
mov
dec
adc
loope
xchg
repnz
dec
fadds
pop
iret
and
push
dec
scas
insb
adc
add
int
mov
rolb
push
push
mov
imul
lcall
adc
or
mov
loope
fisttpl
bnd
inc
cmc
push
rolb
sbb
pop
fists
jp
ss
dec
jnp
andb
adc
pop
mov
dec
sarl
mov
add
inc
jge
xor
cmp
dec
and
jge
fdivrs
loope
mov
pushf
xchg
mov
jge
push
sub
test
inc
mov
push
jo
or
sbb
add
mov
sbb
pop
dec
hlt
lcall
push
jo
arpl
xchg
push
sarl
nop
adc
ret
scas
cmp
shlb
xchg
clc
call
les
ja
aad
and
jmp
fdivrl
and
sti
inc
pop
fcmovne
insb
jecxz
outsb
clc
rorb
notl
dec
addr16
fwait
or
loopne
fsubs
and
fbld
mov
adc
pop
fistps
insb
mov
mov
push
sbb
cmp
arpl
dec
and
mov
scas
push
pop
shlb
push
mov
add
nop
and
mov
sbb
or
push
out
jmp
xchg
nop
add
lock
ss
dec
dec
data16
jns
test
cli
or
enter
cwtl
add
pop
andl
pop
mov
bound
stos
sub
das
mov
lret
sbb
mov
or
dec
loope
jns
inc
adc
pop
pop
jle
or
mov
xchg
mov
or
adc
and
iret
mov
sahf
jecxz
je
jno
outsl
jne
sbb
inc
outsl
adc
mov
pop
roll
mov
mov
insl
xor
xlat
pop
cld
rcrb
inc
jmp
xchg
push
fimuls
mov
test
js
mov
inc
fcmovnbe
ret
leave
xor
call
mov
sub
dec
ret
ret
scas
dec
leave
mov
sbb
pop
and
lahf
inc
ret
pop
inc
add
add
jle
repnz
dec
aaa
xor
cmp
jg
syscall
mov
shll
mov
xchg
shlb
mov
mov
push
aam
clc
pop
mov
in
outsl
inc
dec
or
and
or
outsl
mov
jecxz
sub
out
roll
xor
cmpb
mov
sbb
scas
fiaddl
jmp
movsb
divl
and
xchg
insb
stos
ret
fcmovnbe
mov
adc
je
outsb
cwtl
mov
inc
xor
or
aam
or
sbbb
pop
mov
enter
ret
xchg
sbb
jb
push
outsb
push
rcrl
or
test
sbb
shll
jb
nop
jle
pop
fwait
pop
xchg
imul
inc
test
ret
cmp
mov
mov
add
insb
nop
add
bnd
rclb
jne
andb
int3
js
cmp
call
dec
out
cmpsl
popa
push
ds
rolb
dec
pop
loop
ljmp
sbb
pusha
jbe
pop
outsl
sar
push
add
or
push
sahf
xchg
sub
xor
lret
aas
in
in
mov
adc
jg
add
scas
cmp
xchg
jb
pop
or
push
inc
out
clc
fildl
jmp
adc
sarl
movsl
or
cmpsb
repnz
jmp
ljmp
push
cmp
mov
inc
push
sbb
cmp
or
pop
test
add
in
add
push
jge
fadds
insl
in
xor
adc
sub
sti
dec
adc
push
andb
mov
fcomi
xor
lock
inc
std
cld
je
aaa
xchg
in
dec
pusha
fsubs
dec
jo
inc
js
aad
cmpsb
sbb
pop
mov
insl
insb
xor
cmc
inc
push
mov
fidivrl
cmp
add
mov
adc
pushf
rorl
adc
mov
orb
es
bound
mov
xchg
daa
push
dec
pop
arpl
mov
loopne
jp
test
les
fiaddl
dec
push
adc
shll
call
mov
hlt
out
rclb
xchg
lret
jbe
outsl
int3
paddb
add
fists
cli
xchg
mov
movsb
or
sahf
and
les
cmp
pop
sbb
stos
mov
xchg
dec
fucomi
fistpll
push
cmp
mov
dec
jecxz
jns
imul
sub
mov
ljmp
and
mov
loopne
sub
push
enter
frstor
dec
mov
notb
loop
aaa
nop
gs
xor
add
popa
sub
mov
pop
lock
cmp
dec
pop
popf
call
pop
sub
popf
shlb
mov
movsl
add
aaa
hlt
arpl
test
sbb
fcoms
filds
mov
lds
push
mov
mov
sbb
or
fsts
add
mov
movsb
push
ss
or
add
jp
inc
test
aam
mov
rcl
clc
outsl
fisttps
dec
sub
ljmp
or
daa
cmp
add
or
popa
xchg
jge
add
or
or
fistpl
es
daa
mov
shll
or
outsb
arpl
mov
or
add
mov
pop
aaa
add
sub
jle
inc
insb
or
jmp
hlt
fdivl
sbb
mov
sbb
lock
pusha
mov
xchg
addb
pop
fiaddl
sub
rcrb
mov
xchg
adc
idiv
jp
rcr
mov
fcomp
and
xchg
push
fists
add
leave
pop
aad
lds
gs
jecxz
and
inc
xchg
fsubrs
jne
ljmp
inc
imul
fwait
pop
test
inc
lds
andb
add
cmpsl
pushl
inc
and
mov
test
fdivs
test
cmp
adc
mov
adc
cmp
mov
add
push
mov
or
mov
mov
daa
sbbl
adc
out
jle
or
les
pop
mov
fisubl
shrb
stc
icebp
in
data16
mov
jae
xchg
sub
shrl
jge
lods
sub
or
arpl
int3
outsl
loopne
pusha
je
not
push
decl
stos
mov
and
cmp
mov
inc
xor
pusha
int3
or
lock
push
les
cwtl
and
ds
sbb
ficomps
out
loope
hlt
push
inc
dec
movsl
in
mov
addb
popw
jne
cli
or
out
call
pop
pop
loopne
sub
sub
data16
std
fistps
xor
lret
pop
adc
and
in
nop
adc
shlb
pop
sti
nop
or
add
test
daa
icebp
cs
pop
add
inc
scas
fildl
test
jmp
jg
inc
outsl
ret
cmpsb
fwait
or
add
sbb
mov
data16
aaa
xor
cmp
test
xor
xchg
fdiv
jmp
sbb
adc
xor
ds
push
rcl
mov
jge
scas
dec
ds
pop
aad
popa
paddusw
int3
aad
push
mov
ds
test
fs
mov
cmp
stc
dec
adc
cli
test
and
mov
cmp
dec
std
mov
test
and
mov
add
insl
sbb
iret
sahf
mov
add
or
arpl
test
push
adc
lods
jb
loopne
nop
cmpsb
out
xchg
adc
subl
push
xor
rclb
inc
cmc
int3
clc
in
inc
arpl
sbb
and
test
orb
pop
aaa
int
in
movsb
in
rcrl
and
subl
jo
mov
frstor
imul
pop
subb
pushf
mov
or
cmp
push
repnz
cwtl
xchg
xchg
sub
fistpll
call
add
ret
cwtl
cmc
lcall
std
and
bswap
add
in
cmp
out
xchg
shl
adc
push
mov
and
pop
mov
mov
inc
mov
xchg
jns
imulb
std
incl
mov
stc
mov
cmp
in
rclb
inc
insl
xor
fimull
adc
lods
jmp
jmp
mov
loope
jg
call
data16
or
mov
sbb
ret
clc
cmp
pop
aas
mov
pop
js
shlb
loopne
js
xor
je
das
xchg
pushl
stos
arpl
mov
pop
test
add
das
xchg
negl
mov
pop
fistpll
xorl
inc
push
daa
and
enter
adc
mov
syscall
adc
call
ja
inc
mov
int
out
sub
cli
inc
jnp
test
push
sti
jg
push
and
add
or
and
ljmp
ret
cld
loopne
dec
mov
mov
pop
mov
shr
pop
cs
test
aad
cli
push
add
test
cmpsl
cmpsb
and
inc
hlt
sbb
push
loope
idiv
adc
and
jne
jb
cmp
test
test
and
lcall
hlt
xor
xchg
daa
popf
decl
les
mov
stc
mov
push
ret
or
xchg
mov
jmp
push
push
push
or
add
test
aam
jnp
insb
cltd
sbb
inc
adc
xchg
mov
test
lods
push
pop
cld
ret
inc
andl
jge
push
fists
inc
xlat
test
mov
sbb
cwtl
sub
cmp
lea
fisttpll
inc
add
push
lcall
popf
or
mov
push
in
gs
sbbb
jae
mul
int
lahf
adc
cld
cmp
aad
and
movsb
inc
sub
xor
jl
pop
hlt
dec
sbb
fcomp
inc
push
mov
rolb
mov
js
inc
mov
ror
mov
shrl
push
inc
or
sub
mov
ljmp
je
inc
es
stc
adc
imul
xchg
cmpsl
xor
mov
mov
lock
xchg
inc
fildl
jmp
lds
loope
or
loope
loope
sub
ret
xor
jl
mov
mov
insb
rol
inc
cld
outsl
repz
jb
outsl
mov
sbb
inc
fcoms
or
and
inc
adc
fcmovbe
mov
add
andl
sbb
sar
cmp
dec
and
cli
orb
daa
loopne
dec
lods
fnstsw
xchg
cld
adc
aad
xor
aas
mov
push
xlat
fdivs
aam
mov
mov
fildll
dec
hlt
add
cmp
rclb
or
stos
hlt
sub
cli
xchg
sarb
mov
inc
pop
loope
inc
les
mov
aam
mov
or
fldt
call
push
and
mov
pop
data16
and
mov
mov
gs
leave
jmp
adc
stos
adc
xchg
jb
mov
cmp
call
call
loope
cmc
adc
lods
mov
push
insl
leave
mov
adc
mov
sbb
call
ds
mov
jp
mov
das
sub
sbb
and
fdivs
mov
add
imull
cmp
xchg
fstpl
fisubrl
xlat
xchg
jge
jo
ret
popa
sti
loopne
push
mov
pop
jl
popf
out
add
xor
jle
push
jo
mov
cmp
cwtl
or
mov
add
sbb
push
xor
sbb
mov
inc
test
mov
jae
movsl
jno
hlt
add
repnz
pop
or
dec
outsb
adc
les
fldt
loope
add
pop
mov
add
xor
adc
aam
xor
test
ljmp
aaa
imul
dec
movsl
jle
inc
cltd
mov
dec
lahf
repz
aaa
inc
pop
xor
jb
sbb
xor
jle
add
push
clc
fbstp
jmp
mov
das
scas
dec
movsl
fiadds
jno
es
test
push
data16
std
dec
xchg
nop
dec
popf
nop
stos
push
add
add
adc
test
test
pop
or
adc
xchg
add
pop
movsl
xor
and
add
and
lret
loopne
fbld
or
push
pop
and
lea
int
data16
add
fstpt
jae
and
mov
fs
jns
stos
jl
push
sub
ret
xchg
mov
out
hlt
push
and
in
mov
aaa
mov
arpl
inc
pop
push
fadds
cld
dec
int3
and
std
xor
lea
test
and
test
hlt
pop
xor
cmp
jmp
scas
pop
push
out
push
fs
ljmp
cmpsb
mov
icebp
test
sbb
testb
aaa
incl
and
sti
push
nopl
and
test
or
mov
lret
cmc
mov
insb
and
mov
mov
add
pushf
jne
push
call
popa
mov
or
adc
jg
adc
or
inc
ljmp
clc
movsb
and
int3
lods
bound
das
scas
pop
inc
xchg
jl
and
std
lods
repz
inc
mov
xchg
or
push
ror
cmp
adc
js
fs
sbb
mov
js
inc
sbb
sbb
add
xor
xor
lea
push
jp
sub
sarl
cs
mov
adc
subb
jno
notl
dec
push
hlt
andl
pusha
jmp
nop
mov
sub
pusha
pop
pop
cli
pop
mov
push
lret
or
lret
fisttps
mov
mov
lock
es
pop
scas
mov
mov
mov
repz
pop
daa
xchg
jle
xor
push
mov
pop
sub
adc
insl
pop
sysret
xchg
outsl
xchg
and
add
sub
jb
pop
ret
mov
iret
jl
test
mov
int
into
adc
adc
and
idivb
jge
insl
xor
adc
and
pop
sti
repz
and
gs
neg
orl
pop
jle
js
ja
jbe
pop
out
das
push
xchg
fldt
aas
enter
xor
loop
sbb
decb
xchg
jge
xchg
cli
jns
cli
dec
lock
jg
andb
ret
xor
push
fnstsw
lret
dec
sbb
mov
mov
outsb
cli
cmp
jae
lcall
pop
mov
push
in
cmp
inc
test
mov
test
xchg
aaa
pop
in
clc
outsl
mov
sub
rcl
test
ret
cmpsb
or
mov
jb
clc
pushl
fdivr
mov
dec
xor
mov
xor
icebp
js
add
mov
sbb
aas
lds
lock
test
les
sti
mov
outsb
mov
stos
test
aad
mov
push
jg
outsl
sarb
cmpsb
xchg
cmp
mov
out
mov
test
jg
mov
and
dec
adc
insl
inc
jmp
aam
and
sahf
aas
pop
cmp
pop
mov
jnp
cmc
outsl
and
lahf
inc
jb
push
and
mov
and
subl
icebp
ja
dec
push
jo
insb
cmp
add
push
insb
push
jae
out
adc
cmp
mov
push
xchg
add
loop
mov
js
and
mov
adc
into
mov
fwait
xorb
push
mov
dec
and
xchg
js
push
mov
add
jle
loope
and
in
ljmp
cmp
leave
and
fbstp
jo
mov
or
xchg
pop
mov
mov
mov
popf
ljmp
dec
pop
xchg
pushl
pop
jo
pop
pop
ljmp
mov
aad
add
dec
iret
push
fidivl
into
cwtl
mov
sbb
jno
push
adc
sbb
dec
cmp
ljmp
push
divb
out
int3
cmp
push
int
push
cmp
push
scas
mov
shlb
bound
mov
jnp
insl
bound
adc
inc
mov
dec
out
out
dec
mov
ljmp
cmp
adc
shr
mov
divl
ljmp
call
mov
int3
pop
mov
scas
jbe
dec
rcrb
loope
cmp
cmc
mov
adc
shlb
iret
subb
lods
sarl
and
mov
mov
pop
mov
es
cltd
dec
mov
outsb
fstpt
or
or
testl
clc
xlat
clc
jg
iret
fldcw
xchg
les
xor
dec
pushf
std
mov
adc
mov
loope,pn
fs
dec
aas
xorl
jbe
xchg
mov
subl
stos
dec
mov
stos
mov
push
insl
js
inc
pop
dec
outsl
popa
imul
insl
aas
std
lahf
outsb
dec
shlb
sub
xchg
jp
daa
or
pop
sub
js
shlb
xor
hlt
dec
add
mov
sbb
divb
jo
pop
xor
daa
pop
sbb
dec
cmc
movsl
in
xor
push
jne
push
insl
pop
inc
test
and
jl
jb
imul
mov
dec
push
mov
cmp
inc
xor
xchg
pop
sub
outsb
xchg
ficomps
add
jno
pop
or
inc
addr16
cmpsb
and
jne
jmp
mov
add
add
call
add
test
imul
sti
mov
jg
sub
cmc
nop
inc
push
iret
sti
cmp
mov
push
fsubrs
xchg
int
inc
jg
jo
xchg
dec
push
inc
pop
mov
and
fcmovnu
mov
or
mov
add
dec
inc
sub
cmpsb
jl
or
inc
jmp
mov
pop
or
addr16
mov
lock
jo
rcl
adc
icebp
and
ljmp
push
lret
lret
mov
jle
fdiv
cmp
je
lret
mov
in
aas
imul
cmp
pop
clc
ret
cmp
lahf
sbb
push
das
fdivl
add
pop
ljmp
cmpsl
andb
cmp
fmull
xor
cs
call
clc
push
or
sti
dec
push
mov
mov
sub
push
lock
aad
cmpsl
iret
pushf
jl
push
popa
mov
xchg
sub
jg
out
ss
cmpsb
lahf
lea
push
testb
jg
rcll
test
leave
and
pop
inc
jno
mov
fcoml
add
jp
jle
loopne
or
add
movsl
mov
dec
jmp
push
ljmp
pusha
jmp
shlb
and
mov
negb
jle
xor
jg
mov
xor
jmp
dec
enter
pop
pop
icebp
sub
jg
xchg
or
cmp
cmp
xchg
dec
xchg
mov
xor
outsl
mov
pop
cld
decl
inc
and
loopne
shll
movsl
pop
xchg
in
cs
push
push
fstpt
sub
into
xlat
and
das
push
pop
mov
xor
leave
jno
xlat
or
movsb
jg
clc
das
mov
inc
mov
sbb
lea
cld
mov
cmp
or
sbb
lea
das
daa
xlat
pop
in
andl
sbb
sbb
rdtsc
sbb
cmpb
xorb
mov
mov
push
fstpl
inc
adc
mov
in
inc
std
call
aad
inc
cmp
push
hlt
adc
xchg
sub
or
cmp
push
jp
cld
xor
lock
sbb
sub
xchg
clc
aas
push
outsb
testl
sar
pop
idivl
inc
aad
daa
push
lcall
sub
xchg
sub
jmp
outsb
dec
icebp
mov
out
cli
das
icebp
pop
sbb
pop
ss
shr
inc
xchg
xchg
and
pop
jle
mov
ljmp
ret
loopew
adc
imul
add
sbb
mov
in
scas
cmp
lock
add
ss
lock
fidivrl
lahf
cld
or
xchg
xor
test
mov
cmp
or
mov
mov
out
add
sbb
jbe
mov
rolb
fldl
and
rorb
addl
jb
and
jecxz
inc
data16
aad
insl
ret
xchg
in
and
mov
pop
jmp
mov
test
inc
cmp
cs
mov
std
push
test
aam
rcrb
cmp
fldt
sub
int
mov
inc
or
jge
rorl
xor
ljmp
cmc
jg
sbb
add
sarb
movsl
fists
xchg
sub
jno
out
and
mov
xor
inc
stc
scas
dec
mov
inc
dec
test
clc
inc
jnp
xor
pop
inc
and
ret
jp
fcomps
ds
cmp
insl
pop
clc
movsb
rorb
es
cmc
pop
inc
push
mov
or
or
out
jnp
mov
cmp
add
mov
and
xchg
mov
lcall
dec
push
mov
push
lods
outsl
lcall
shlb
xor
loope
add
add
clc
lods
std
mov
in
jne
inc
lds
test
hlt
xchg
pop
xchg
add
and
adc
or
mov
or
pushl
adc
xor
loope
stc
in
inc
adc
mov
fists
add
xchg
enter
std
jg
mov
sbb
jne
push
sbb
sbb
add
lea
loope
jbe
je
xor
sar
pop
loop
pop
outsb
jle
jg
dec
test
or
inc
push
rorb
shrb
inc
push
rorl
add
cmc
lahf
mov
cs
nop
cld
pop
xchg
and
adc
cltd
push
dec
push
and
inc
stos
push
clc
pop
inc
test
jle
addl
mov
cmp
xchg
outsl
lds
pop
pop
stos
jmp
addr16
and
inc
jns
inc
and
pop
aad
mov
mov
mov
cs
ljmp
jbe
cmp
cmpsb
and
sub
xchg
mov
push
sbb
out
xchg
jnp
jle
gs
mov
inc
sbb
mov
adc
sahf
je
nop
cltd
loope
xchg
pop
outsb
xchg
mov
sbb
adc
add
mov
out
shlb
lea
cmpsb
test
xor
ret
push
rclb
stos
cmp
pop
xchg
fucomi
stos
inc
lahf
aas
and
lods
mull
dec
test
fs
cmpsb
xlat
daa
jmp
jecxz
sarl
das
arpl
dec
mov
and
inc
inc
cmp
movsb
sub
mov
leave
or
mulb
hlt
dec
sbb
mov
inc
fistpll
or
das
adc
mov
out
push
loopne
dec
and
mov
sbb
inc
and
fadd
xor
cmpsl
mov
repnz
pushl
push
adc
xor
mov
jmp
ja
mov
xor
lods
arpl
daa
sbb
call
push
and
push
stos
dec
push
adc
out
pop
adc
int
cmp
pusha
xchg
pop
jnp
ficoml
incb
adc
das
call
icebp
icebp
fbld
mov
in
into
push
adc
out
xlat
push
pop
bound
add
inc
cmp
imul
push
and
fimuls
pop
clc
out
xchg
xor
and
jbe
leave
inc
cmpb
popa
aaa
pusha
jmp
add
sub
lods
mov
test
mulb
into
push
pop
rorl
test
adc
in
mov
std
jg
pusha
sub
outsb
mov
dec
jmp
xchg
xor
fisttpl
movsb
cli
out
movsb
mov
pop
xchg
outsl
outsl
jg
fistpll
xchg
fstpl
insl
push
pop
mov
cwtl
hlt
xchg
je
test
repz
insb
inc
in
insb
addb
movsb
add
and
mov
xchg
iret
jbe
scas
inc
pop
sub
cld
or
inc
addb
icebp
call
jg
dec
and
jo
pop
mov
notl
and
jb
xchg
lods
mov
dec
and
or
stos
pop
lahf
xchg
cmp
pop
jl
mov
pop
ficomps
stos
xchg
out
jl
or
mov
mov
cmp
cld
push
popf
es
xchg
lcall
sbb
jle
dec
mov
and
sub
pop
imul
cli
push
inc
call
addl
or
push
push
cmc
outsl
lock
pop
lret
enter
loope
cwtl
or
push
sub
mov
and
push
cmp
ljmp
xor
daa
xchg
aam
orl
jle
pop
fcomip
push
push
inc
ljmp
fildll
add
cli
jnp
adc
test
sbb
xchg
mov
imul
xor
xchg
sahf
pop
jo
les
das
or
cmp
jo
xor
pop
sub
notb
pusha
adc
std
dec
jg
lret
imul
add
inc
pop
adc
lods
or
fisttpl
dec
ljmp
js
lea
insl
xchg
pushw
cmp
dec
rcr
fistps
sarl
xchg
sarb
or
mov
jp
push
mov
xor
mov
inc
lock
cmpsl
cmc
iret
dec
outsb
sub
mov
repnz
xlat
cmp
adc
sbb
inc
out
aad
cmpsl
pusha
jb
adc
into
mov
jecxz
mov
dec
add
pushf
fiadds
mov
pop
sbbl
mov
sarb
sbb
call
or
outsl
jo
inc
sbb
sarb
push
xor
push
sbb
xchg
outsb
cli
pop
out
add
into
add
mov
xchg
test
inc
xor
pop
xor
sti
in
dec
lock
mov
pop
mov
push
mov
adc
mov
and
mov
mov
cmpsb
push
dec
ds
cld
sbb
xchg
and
xor
and
repnz
dec
adc
sbb
ljmp
mov
push
add
test
mov
pushl
shrb
out
pushf
mov
fsubrl
cmp
push
mov
jmp
adc
add
loopne
add
push
icebp
mov
gs
mov
push
push
std
push
sub
js
inc
fists
stos
cmp
jecxz
in
sahf
in
mov
icebp
cmpl
inc
lds
fs
call
xchg
inc
test
mov
inc
or
and
lock
in
or
ss
xchg
outsl
xchg
push
adc
mov
mov
ljmp
les
lock
push
clc
sbb
or
dec
push
fdivrs
repz
icebp
jne
mov
imul
mov
ja
xchg
lods
sub
inc
fisubrl
jne
or
jo
mov
movsb
adc
inc
pop
or
push
mov
and
popa
sub
or
xor
inc
nop
mov
ja
rorl
mov
add
add
fistps
fcoms
mov
lea
test
icebp
ret
sub
mov
out
outsb
or
push
cmp
inc
cwtl
loopne
in
fucomi
scas
pop
mov
pop
cmp
test
or
ljmp
sub
movsb
xchg
or
pop
loopne
call
sub
xchg
sti
outsl
push
test
adc
xlat
adc
data16
rorb
es
gs
xchg
mov
scas
add
push
push
push
test
or
xchg
insb
mul
sub
or
jp
mov
ret
mov
inc
ficoml
pushf
lock
out
rorl
ljmp
into
mov
or
insb
fdivrp
fwait
jecxz
and
out
int3
adc
or
pop
cmp
dec
les
mov
stos
dec
bound
mov
mov
mov
mov
adcb
popa
dec
imul
sbb
lods
inc
dec
inc
lock
xchg
scas
loope
lods
int3
call
mov
pop
push
fs
jbe
pop
sub
sub
fsubrs
push
in
inc
pop
inc
pop
inc
daa
mov
mov
hlt
ret
xchg
sub
frstor
movsl
jno
xchg
or
add
fdivl
xchg
xor
ss
cmove
pop
fcmovb
das
sti
ja
loop
gs
mov
mov
dec
and
cld
dec
cmp
or
insl
outsl
cmpsl
adc
jnp
sbb
je
jne
out
das
popa
mov
xchg
frstor
mov
push
pop
cmpsb
push
xchg
mov
insb
lea
int3
enter
fsubrs
push
cmp
add
ljmp
out
lods
rcr
cmpsl
loope
nop
push
adcl
ss
das
push
jge
std
jae
in
push
arpl
in
aad
xchg
sbb
addl
nop
fsubs
lock
mov
pop
fdivs
xlat
sub
xchg
xor
mov
mov
xchg
popa
add
mov
in
in
fistl
addb
into
lcall
stc
dec
dec
arpl
cmp
inc
enter
mov
repz
pop
incl
and
pop
inc
scas
cld
subb
sti
idivb
or
jle
mov
inc
cmp
bound
loop
jo
dec
lcall
mov
pop
jg
push
lds
push
shll
sbb
ss
je,pn
mov
nop
xchg
call
lock
fsub
ja
imul
cmpsl
xor
pusha
loope
lods
in
popf
fmull
lods
xchg
loop
inc
jecxz
mov
xorl
mov
inc
lods
loop
or
xchg
push
loope
dec
incl
cld
sahf
add
xor
pop
int
push
ja
ret
mov
cltd
mov
jecxz
or
mov
sar
in
xchg
inc
into
pop
insl
out
push
sbb
dec
or
or
adc
sbb
mov
daa
aam
xlat
sub
jecxz
test
jl
and
in
sahf
push
pop
mov
incb
repz
iret
sbb
push
andl
jnp
sub
dec
ret
sbb
mov
movsb
icebp
movsb
fcmovne
add
cmp
mov
cmc
pop
pop
fimull
ds
aas
dec
testl
dec
xor
inc
jecxz
cmp
stos
or
loopne
pop
and
sub
stos
shr
decb
bound
add
dec
push
dec
iret
mov
aas
mov
jp
and
push
popa
cwtl
mov
push
mov
rep
popa
mov
shll
xor
jae
or
jecxz
jg
jmp
push
push
pop
dec
xchg
sbb
adc
ja
ret
rcrl
lds
mov
sub
gs
outsb
jbe
inc
inc
cltd
shrb
pop
xchg
pop
dec
mov
ja
rol
das
xchg
mov
mov
jns
clc
pop
call
repz
dec
cld
fwait
cmpsb
lods
sub
fdiv
cli
loopne
and
cmp
aad
sub
push
outsb
or
popf
jae
mov
mov
xchg
jg
mov
lds
xlat
adc
adc
push
jns
test
clc
into
int3
outsl
or
mov
xchg
add
inc
movsl
jbe
push
pop
rorb
repz
mov
jge
data16
out
into
xor
pop
les
mov
mov
mov
xor
outsb
cld
lods
jg
and
inc
repnz
call
mov
mov
mov
xchg
push
pop
mov
fbstp
fiadds
add
pusha
adc
int3
rclb
push
aam
das
das
mov
sbb
sbb
pop
mov
sbb
inc
test
addb
add
mov
or
inc
rcrb
lods
and
mov
mov
and
mov
clc
imull
idivl
test
mov
mov
std
sbb
adc
jb
and
pop
cmp
scas
sti
inc
dec
push
jle
shl
cmc
aas
add
lea
aas
decb
addr16
inc
icebp
mov
dec
jne
je
stc
cmp
call
cli
sbb
shl
jg
sarl
stos
mov
lds
arpl
daa
pop
xchg
shrl
mov
ss
and
add
rclb
xlat
jg
ss
xor
scas
or
test
xor
call
lea
xchg
shl
sub
aad
clc
sbb
or
inc
pop
adcl
lret
jae
out
lret
lds
xchg
pop
jne
rcrb
repnz
inc
push
mov
pop
cli
lds
std
outsb
jle
inc
xsaveopt
test
lods
and
xchg
cwtl
mov
adc
mov
cmpsb
or
fwait
inc
ljmp
sub
aaa
pop
sarl
cmp
pop
dec
jmp
das
fisubs
cmp
mov
loope
outsl
shrb
jp
adc
js
cmpsl
mov
adcb
andb
call
and
enter
in
jb
jno
movsl
push
pop
mov
or
or
cmp
pop
jae
fdivrs
sti
or
adc
inc
ret
nop
add
pusha
cmpsl
and
incl
jne
sbb
mov
xlat
movsl
fcoms
addr16
sbb
push
out
in
dec
inc
inc
push
mov
mov
test
das
and
dec
in
sub
pop
mov
mov
push
das
jge
push
and
clc
mov
mov
jbe
add
inc
adc
jo
jg
mov
pop
add
cmp
jnp
mov
xor
fucom
jmp
pop
mov
sub
pop
aam
lea
xchg
std
das
sub
adc
js
mov
dec
adc
fbstp
lahf
or
jno
cmpsl
addl
stos
aas
je,pn
orb
mov
fildll
movsb
imul
icebp
mov
inc
adc
mov
dec
ret
inc
cs
sarb
push
sbb
movsb
adc
pop
sahf
sti
jno
subl
add
dec
xchg
orl
arpl
inc
out
add
lock
popf
push
incl
outsl
sbbl
and
jae
cld
shr
lcall
cld
mov
loop
pop
clc
das
add
push
mov
shll
aas
cmp
insb
icebp
call
jo
mov
loop
pushf
mov
push
xor
int3
loopne
bound
popf
xchg
out
add
add
sbb
lds
dec
jle
hlt
mov
jb
pop
out
icebp
lret
adc
popf
inc
mov
lea
std
pop
loope
jb
mov
cmp
lock
mov
outsb
push
std
aam
test
lahf
and
mov
and
inc
xchg
add
mov
add
shl
inc
xlat
lret
jo
in
call
fbstp
clc
inc
inc
ret
pop
aam
int
dec
or
lahf
sbb
inc
adc
lock
stos
xchg
mov
outsb
dec
testl
jbe
or
and
stos
push
and
and
or
out
and
fadds
mov
lock
bound
or
sbb
mov
icebp
pop
out
leave
push
inc
pop
pushf
aaa
mov
push
inc
mov
lret
mov
and
outsb
push
mov
movsb
insb
jbe
sub
push
or
pop
xchg
mov
xchg
jp
ds
mov
mov
xlat
aas
icebp
add
sub
js
test
adc
loopne
mov
cmpsb
daa
dec
aaa
mov
xorb
mov
data16
stc
xlat
inc
arpl
add
insl
roll
sbb
mov
jbe
jge
xchg
outsl
cmp
sbb
cmp
repnz
cmpsl
repnz
cli
lods
mov
daa
ficoml
icebp
rorl
mov
arpl
mov
std
inc
jge
dec
or
aas
out
addb
out
push
fcoml
fldcw
add
adc
jmp
sarb
inc
shrl
and
adc
into
jle
or
mov
and
mov
jmp
or
rolb
or
fistl
dec
fistl
jne
cmp
fildll
insb
int3
xor
xchg
mov
aam
clc
jg
inc
cmp
xorb
movsb
inc
add
int3
cmc
or
dec
aas
cwtl
sub
inc
jecxz
jns
insl
cmc
dec
pop
ret
xchg
mov
jmp
arpl
test
add
test
sbb
xchg
loope
test
dec
mov
enter
test
ret
repnz
iret
mov
inc
jmp
fs
jmp
ljmp
cltd
pusha
push
pop
cmpl
imul
xchg
or
cld
das
lds
mov
les
or
incl
fisttpl
or
dec
inc
hlt
mov
leave
jns
sbb
inc
push
sub
and
mov
pop
sbb
inc
shrb
mov
push
sub
outsl
loopne
bound
test
lcall
call
adc
in
inc
sub
les
es
add
outsl
pop
or
or
adc
cs
xchg
and
pop
es
jo
aas
mov
add
inc
lret
lahf
outsl
addb
stc
je
jno
inc
inc
mov
xchg
cmp
mov
and
mov
dec
jbe
js
in
inc
cmp
insl
mov
int3
lock
aad
or
mov
sti
mov
mov
xchg
into
cmp
xchg
push
scas
mov
testl
push
sbb
shlb
jge
mov
jae
mov
pop
mov
cmpsb
pushf
jne
or
jmp
inc
cld
jl
rcrb
sarb
inc
sub
shll
repz
pop
mov
gs
jp
daa
stc
mov
insl
adc
ja
adc
mov
push
sti
pop
loope
xorb
cli
rcr
hlt
or
fcomp
fistpl
sahf
mov
cmp
test
lret
hlt
adc
out
pop
aam
mov
addr16
xchg
mov
shr
or
pop
xchg
stc
bound
aaa
cld
push
scas
and
imul
ret
mov
scas
push
je
push
pushf
push
inc
stos
mov
fistps
pop
cmp
fsubp
sbb
mov
fildll
mov
cwtl
cmpsl
je
sub
out
arpl
insl
loope
adcl
or
xchg
cmp
cmp
gs
sub
popa
aaa
test
mov
mov
or
add
cld
test
out
lea
mov
shlb
sbb
outsl
icebp
push
mov
dec
loope
fabs
dec
mov
and
nop
inc
ja
fstpl
mov
mov
pop
jge
add
mov
adc
shrl
das
ja
repz
sbb
imul
lods
pop
in
sub
movsl
das
test
mov
adc
xor
insb
shrl
mov
mov
aad
outsb
mov
and
mov
pushf
add
push
inc
mov
xchg
roll
lret
mov
jmp
jge
aad
pop
cltd
arpl
jmp
enter
popl
aad
pusha
pop
jbe
xrelease
push
ljmp
mov
mov
movl
xor
add
mov
sarl
fs
mulb
adc
rolb
push
jg
and
jecxz
movsb
xor
cli
pop
dec
cmp
adc
jbe
imul
fimull
sbb
cmpsb
inc
pop
jmp
pop
test
sub
adc
stos
cmp
mov
popa
cmp
mov
out
mov
and
adc
mov
mov
xor
out
stos
icebp
and
sbb
adc
fistps
rcrb
stos
iret
popa
sbb
lock
aaa
adc
stc
jno
inc
add
mov
jg
ret
adc
jp
pusha
xor
shrb
adc
mov
inc
mov
fiadds
mov
out
xchg
in
inc
das
cmc
sbb
insb
or
shlb
out
xorb
stos
pop
mov
outsl
std
aaa
add
cltd
cmp
ljmp
xchg
jo
inc
pushl
jns
dec
sti
push
mov
mov
pop
faddp
add
mov
lret
ljmp
xor
mov
stc
aad
jmp
or
dec
pop
cmc
add
movsb
arpl
fisttpll
fs
or
lcall
push
mov
jbe
outsb
lret
push
cli
pop
mov
and
jns
mov
inc
sbb
pmulhw
pop
xor
mov
or
test
add
inc
cmc
xorl
lea
fwait
lds
sbb
push
data16
jae
jg
sarl
outsb
cld
subl
ret
or
push
outsl
adc
push
mov
jnp
lds
mov
decl
xchg
roll
mov
mov
push
xor
orb
ljmp
out
xchg
stos
arpl
jmp
dec
loopne
jg
push
inc
push
ret
mov
jge
loope
addr16
rolb
adc
sub
mov
push
push
xchg
xchg
leave
popa
dec
cwtl
mov
mov
ffreep
jg
or
aam
push
hlt
or
xor
test
fbstp
clc
pop
cli
ret
inc
aam
out
sbb
aad
push
fcom
test
adc
and
rcrl
sub
and
outsl
outsl
je
xchg
daa
ret
dec
add
dec
cld
call
pusha
ljmp
pusha
add
inc
push
jns
ja
push
std
mov
jne
dec
je
aaa
insb
xor
sti
pop
xchg
cmp
xor
xor
push
xor
enter
inc
imul
outsb
jne
mov
call
dec
inc
push
push
push
inc
push
dec
dec
inc
pop
push
push
jg
pop
adc
imul
gs
ret
cs
insb
cmp
xor
shlb
icebp
push
add
or
push
adc
jne
ja
jbe
imul
dec
jbe
dec
dec
dec
pop
inc
imul
pop
lcall
pop
andl
xchg
lahf
inc
push
adc
jo
das
push
add
xchg
jp
mov
mov
push
mov
dec
call
cld
and
mov
jle
orl
push
adc
jl
and
fsubl
cmp
push
push
cmp
addr16
or
add
add
cmp
test
dec
out
in
push
loopne
shl
sbb
mov
mov
push
mov
aam
dec
movb
adc
mov
jl
add
mov
mov
movsl
out
sbb
xchg
xchg
xchg
and
and
dec
fisttpl
mov
xor
mov
xchg
fsubl
add
and
mov
or
adc
mov
pop
inc
adc
cmpl
and
popf
outsl
xor
out
pushl
jo
add
mov
cld
inc
sub
push
jmp
shrl
ljmp
imul
cmp
add
push
adc
movb
nop
sbb
test
imull
fnstsw
mov
xchg
and
in
stos
jle
xlat
push
add
xlat
cli
dec
add
pusha
cmpb
shr
or
mov
roll
xchg
stos
fdiv
loopne
dec
into
scas
mov
cmp
movsl
ret
stos
xchg
int3
or
or
push
or
incb
mov
adc
mov
xor
cmp
add
insl
jo
jb
mov
je
imul
gs
imul
jns
mov
adc
insb
gs
inc
gs
inc
je
fsin
fnsave
adc
imul
lods
std
outsl
jg
imul
dec
jne
je
inc
jns
xor
inc
jne
inc
outsb
je
dec
push
add
pop
push
std
add
dec
outsl
popa
fs
popa
jb
sub
fld
out
dec
push
push
adc
fisttpl
cmp
or
imul
push
outsl
lods
std
fldcw
orb
inc
das
sbb
idiv
fbstp
movb
data16
outsb
arpl
adc
negb
ja
lods
add
dec
popa
jo
sub
insl
or
bound
adc
mov
lods
mov
outsl
push
jns
adc
dec
js
and
sub
cmp
jnp
lods
jge
outsl
sub
popa
insl
mov
lods
shlb
and
or
test
push
pop
imul
jne
arpl
jne
or
sub
pop
ret
jecxz
sbb
fs
out
mov
lds
jle
xchg
jbe
or
sbb
mov
daa
gs
jns
or
inc
push
jae
dec
popa
dec
adc
gs
sbb
push
inc
gs
mov
fldl
push
outsl
ss
incl
sbb
cmpl
popa
pop
push
ficoms
inc
dec
inc
aaa
inc
shrb
mov
jg
loope
dec
mov
in
in
mov
je
push
pop
jl
data16
jne
add
shll
xor
lods
ret
or
cli
inc
mov
sub
xor
fwait
adc
imul
fadd
or
pop
das
xor
mov
clc
sbb
imul
scas
jb
xchg
inc
nop
pop
test
xchg
data16
dec
jne
jo
push
jne
or
push
inc
insb
addr16
popa
bound
jge
enter
push
jl
inc
popa
mov
insb
and
pop
insl
lcall
addr16
dec
pop
lods
mov
jb
cmp
sahf
in
mov
sub
inc
push
push
outsb
or
arpl
out
pushf
lret
outsw
shlb
dec
and
into
pop
push
imul
pop
xchg
xorb
sub
out
pop
jnp
sbb
dec
jo
cmc
dec
fsubs
pop
or
js
fsubl
inc
pop
or
jbe
in
inc
mov
dec
jae
rcll
sbb
outsb
popa
xor
arpl
or
popa
inc
popf
out
popf
arpl
adc
fldenv
outsl
push
pop
adc
mov
es
mov
sub
xor
add
jae
movsl
jbe
xor
insl
jmp
negl
sbb
xchg
cwtl
lahf
sub
lods
outsl
sbb
adc
fadds
mov
insb
addr16
fs
int3
aaa
jne
mov
lea
insl
mov
ret
add
arpl
or
data16
jae
push
pop
ret
mov
mov
repz
mov
ret
neg
inc
subb
sbb
arpl
test
je
and
adc
sbbb
sub
push
rcrb
mov
rolb
mov
and
jne
int
pop
outsb
sbb
aas
push
int3
fimull
pop
jg
inc
add
dec
lret
incl
add
std
imul
or
add
pop
mov
lahf
add
mov
xchg
fildl
add
add
out
mov
add
xor
pop
push
sbb
xchg
add
sarl
addb
mov
in
in
lock
pusha
cmp
sub
je
pop
jmp
nop
or
ret
add
and
jmp
in
or
les
inc
add
es
inc
sahf
add
shlb
pop
stos
xorb
dec
xlat
or
cmp
repz
jo
dec
add
jae
aam
xchg
add
and
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
add
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
roll
add
add
add
add
add
aad
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
cmp
add
add
add
or
add
add
in
add
nop
add
add
add
sub
add
adc
add
and
add
add
sbb
mov
fstpt
pop
fstpt
aad
fists
push
sar
divb
xlat
popf
jnp
shll
fistpll
fwait
pushl
xor
jp
mov
push
bnd
jae
mov
xlat
lahf
cli
xlat
mov
cltd
bnd
xor
mov
sti
jae
mov
fdivrp
jbe
div
jle
aad
ja
repz
fnsave
mov
fstpt
not
sti
jle
fcomi
div
fbstp
idiv
pop
mov
icebp
cmp
mov
push
lahf
mov
xchg
jg
fwait
aaa
not
not
aad
divl
mov
pop
cltd
div
ss
xchg
ja
fnstcw
fcomi
jbe
jb
xlat
cmp
mov
xchg
jle
xchg
cmp
jg
fwait
cli
idivl
push
mov
jg
jg
mov
push
jbe
div
sti
jae
sarl
mov
pop
cltd
jnp
icebp
push
mov
xlat
fnstenv
fnsave
lahf
ja
mov
div
jg
sti
push
mov
push
mov
aad
xlat
stc
mov
stc
mov
xchg
aaa
pop
mov
fbstp
ja
mov
mov
lahf
cmp
aas
divl
xchg
idiv
cltd
cli
pop
mov
jg
jle
stc
mov
pushl
fnstsw
xchg
jnp
xchg
jbe
mov
div
repnz
xchg
jae
xchg
mov
fistpll
fnstenv
mov
idivb
ja
mov
xlat
cmp
mov
std
jle
fnsave
jg
sarl
xchg
mov
cltd
mov
cltd
jle
mov
pushl
push
mov
xchg
ss
repz
xchg
ds
xchg
jae
xlat
mov
divl
push
lahf
jb
stc
jp
popf
mov
mov
push
xchg
jp
sti
mov
xchg
pop
popf
ss
mov
lahf
mov
mov
jbe
ja
fnsave
mov
cltd
aas
fnstenv
jle
repz
icebp
cmp
push
call
div
fwait
notl
cmp
aad
push
cmc
jle
stc
fdivp
jae
fnstsw
push
fbstp
aad
lahf
jle
repz
jle
jnp
mov
idiv
idiv
jb
idiv
ja
sti
xlat
xchg
aas
jbe
mov
xchg
cmp
cmp
aaa
shl
jle
jae
fistpll
lahf
jnp
cmc
mov
divl
divl
pop
div
push
mov
xlat
popf
not
std
jle
popf
jg
mov
fbstp
jg
bnd
jnp
repz
mov
notb
aaa
push
std
mov
lahf
aaa
push
xchg
repnz
mov
xlat
stc
jle
mov
cmc
xor
jp
mov
jg
mov
sarl
shl
ja
jnp
mov
ficoms
add
add
test
add
add
add
add
add
add
add
add
add
jns
add
outsb
add
outsb
add
incl
ja
scas
add
cmc
aas
add
aas
add
jle
out
mov
add
incl
jmp
jg
jecxz
add
scas
add
sti
out
add
das
add
jns
add
mov
add
jns
add
outsb
add
out
add
outsb
add
mov
add
mov
add
outsl
add
outsb
add
mov
mov
add
jge
add
out
add
aas
add
incl
ja
mov
add
cmc
incl
push
das
add
cs
stc
incl
mov
out
add
out
add
add
outsl
add
jne
add
jge
add
out
add
std
jle
divl
add
mov
ds
xor
arpl
add
jg
add
mov
add
outsb
add
aaa
incb
divl
outsb
add
scas
add
mov
add
cmp
add
scas
add
cmp
add
jge
add
mov
add
mov
incl
addr16
mov
add
jle
jecxz
scas
add
xor
das
add
mov
add
mov
jle
out
mov
add
aaa
jg
jg
incb
jg
cs
jnp
add
jle
aas
out
add
aas
add
cmp
add
aas
add
stc
incl
out
aaa
aas
add
jle
addr16
das
add
scas
add
mov
add
incl
ja
das
add
aas
add
rep
add
jne
add
scas
add
mov
scas
add
cmc
incl
jnp
out
add
jg
add
incl
addr16
cs
mov
das
add
jg
add
out
add
cs
cmp
incb
jae
scas
add
cmc
mov
add
jne
add
jno
add
aas
add
add
jg
ja
scas
add
mov
add
incl
out
scas
add
cs
xor
arpl
add
aaa
out
add
scas
add
mov
add
mov
add
jg
add
jnp
add
cs
jns
add
incl
ja
cs
jne
add
mov
scas
add
scas
add
std
outsb
add
outsl
add
xor
add
sti
out
add
sti
jg
repz
add
cmp
incl
jnp
out
add
stc
cs
cmp
jmp
add
outsb
add
out
add
mov
add
aas
add
std
incl
out
repz
jae
add
cmp
incl
ja
jle
jecxz
out
add
aaa
add
ds
jg
add
jnp
add
mov
incl
divl
jle
sti
mov
add
aaa
scas
add
cmp
add
jae
add
mov
add
mov
mov
add
jnp
add
jge
add
incl
addr16
outsl
add
stc
mov
add
xor
add
scas
add
mov
add
incl
sti
cmc
mov
add
scas
add
outsl
add
scas
add
std
cs
imull
add
jae
add
cmp
aas
add
mov
scas
add
jg
sti
jg
add
scas
add
aas
add
imull
add
ds
mov
add
aas
add
stc
cs
cmp
scas
add
cs
aas
aas
add
icebp
jle
idiv
jle
jg
aas
add
mov
add
incb
jg
incb
sti
mov
add
stc
out
add
aas
aas
add
ljmp
add
mov
add
outsl
add
icebp
scas
add
jnp
add
jne
add
cmp
mov
add
xor
aas
add
das
add
jae
add
mov
add
jg
divl
add
outsb
add
mov
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
int3
add
add
add
add
xor
cmp
xor
xor
inc
add
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
outsb
add
jo
push
and
push
add
imul
add
add
outsb
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
and
push
add
inc
add
add
dec
add
add
pop
add
add
add
pop
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
outsb
add
jo
push
and
push
add
js
add
push
add
jno
arpl
ja
imul
add
jo
insl
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
and
xor
add
and
xor
xor
cmp
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
insb
add
push
outsb
add
jo
push
add
add
jbe
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
outsb
add
jo
push
and
push
add
imul
add
add
outsb
add
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
outsb
add
jo
push
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
outsb
add
jo
push
and
push
add
js
add
push
add
jno
arpl
ja
imul
add
jo
insl
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
and
xor
add
and
xor
xor
cmp
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
fldl
add
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
jae
outsb
jne
