push
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
push
mov
mov
lea
shr
mov
jne
mov
mov
add
sub
jne
mov
pop
pop
ret
push
mov
sub
mov
mov
push
push
xor
mov
add
mov
push
mov
mov
mov
mov
mov
mov
xor
mov
lea
mov
mov
sub
test
mov
jne
add
add
movzbl
add
mov
movl
mov
shr
and
add
test
je
mov
mov
sub
test
mov
jne
add
add
movzbl
add
mov
movl
mov
shr
and
add
test
mov
je
mov
mov
sub
test
mov
jne
add
add
movzbl
add
mov
movl
mov
shr
and
add
test
je
sub
and
xor
movl
mov
mov
sub
test
mov
jne
add
add
movzbl
add
movl
mov
shr
and
add
subl
lea
jne
test
mov
je
mov
sub
mov
jmp
movb
jmp
movzbl
mov
and
add
add
shr
mov
je
test
je
mov
sub
mov
mov
add
sub
jne
mov
mov
mov
jmp
movl
mov
mov
jmp
lea
call
test
jne
cmp
jne
xor
sub
call
test
mov
je
lea
mov
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
sub
mov
movzbl
shl
add
add
lea
mov
mov
call
cmp
jb
add
cmp
jb
add
cmp
jae
add
test
mov
je
mov
sub
mov
mov
add
sub
jne
mov
mov
sub
xor
or
mov
mov
mov
jmp
mov
add
mov
mov
add
xor
mov
cmpl
je
pop
mov
sub
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
xor
push
push
call
push
push
call
test
jne
jmp
xor
xor
xor
or
sub
mov
add
xor
add
xor
mov
sub
and
mov
or
mov
mov
or
or
or
or
and
xor
or
sub
and
or
call
test
je
call
pop
pop
pop
pop
mov
pop
sub
xor
mov
push
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
or
mov
push
push
push
push
push
push
call
mov
add
push
push
push
push
push
push
call
xor
xor
and
xor
sub
xor
push
push
push
push
push
push
call
mov
push
push
call
sub
push
call
xor
add
or
push
push
call
sub
xor
or
mov
call
push
push
call
mov
cmpl
je
mov
pop
pop
pop
pop
add
ret
movl
mov
mov
movw
mov
mov
add
mov
movl
call
and
or
push
call
push
push
call
and
xor
sub
sub
push
push
push
push
push
push
call
push
push
call
push
push
call
push
push
push
push
push
push
call
or
or
or
and
call
mov
mov
push
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
movl
add
and
mov
push
push
push
push
push
push
call
push
push
call
sub
xor
and
and
push
call
and
or
push
push
push
push
push
push
call
or
xor
mov
push
push
call
and
xor
xor
or
or
push
push
push
push
push
push
call
and
mov
mov
push
push
call
mov
mov
push
call
xor
mov
lea
push
push
lea
push
call
test
mov
je
mov
mov
xor
test
jbe
mov
sub
sub
and
test
jne
mov
mov
mov
mov
add
or
add
cmp
jb
mov
sub
cmpl
je
jmp
lea
nop
mov
mov
sub
shr
lea
je
mov
jmp
lea
nop
movzwl
mov
and
cmp
jne
mov
and
add
add
add
add
sub
jne
add
cmpl
mov
jne
push
call
or
mov
mov
mov
mov
lea
push
lea
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
add
lea
push
call
push
mov
call
add
test
jne
mov
mov
add
mov
pop
pop
pop
xor
pop
add
ret
sub
mov
push
push
push
movl
add
and
add
mov
mov
add
add
mov
call
mov
mov
add
add
cmpl
mov
movl
jle
jmp
lea
mov
mov
mov
add
xor
test
je
movsbl
rol
add
xor
mov
test
jne
mov
mov
mov
shr
mov
jne
mov
mov
add
sub
jne
cmp
je
mov
add
cmp
mov
jl
jmp
movl
mov
call
cmpl
jne
pop
pop
xor
pop
add
ret
push
call
xor
mov
movzwl
mov
mov
pop
pop
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
and
and
mov
mov
lea
add
mov
jne
mov
mov
mov
sub
jne
and
xor
mov
call
add
add
mov
mov
sub
mov
jne
mov
mov
add
sub
jne
push
push
sub
xor
and
mov
push
call
or
mov
mov
add
add
add
test
mov
je
mov
mov
mov
sub
jne
push
call
movl
mov
sub
sub
jne
add
or
mov
push
push
push
push
push
push
call
mov
mov
lea
sub
mov
je
xor
mov
or
sub
jne
push
push
push
push
push
push
call
or
xor
movl
mov
lea
xor
sub
jne
push
push
push
push
push
push
call
and
movl
mov
sub
sub
jne
mov
mov
push
push
call
mov
mov
add
add
add
mov
jne
mov
mov
mov
sub
jne
push
push
call
or
and
mov
mov
shl
mov
jne
mov
mov
or
sub
jne
mov
or
push
push
call
mov
mov
mov
add
mov
je
mov
mov
mov
sub
jne
push
push
call
sub
call
xor
sub
mov
mov
add
mov
je
mov
mov
sub
sub
jne
mov
or
mov
push
call
and
sub
mov
mov
shr
mov
jne
mov
mov
sub
sub
jne
sub
push
call
or
mov
lea
jmp
lea
shl
mov
jne
mov
mov
sub
sub
jne
push
push
push
push
push
push
call
mov
mov
mov
shr
mov
je
mov
mov
sub
sub
jne
push
call
push
push
call
push
call
mov
xor
mov
and
mov
mov
call
mov
push
push
call
movl
mov
jmp
lea
add
sub
jne
sub
push
call
mov
push
push
push
push
push
push
call
mov
mov
nop
add
mov
sub
sub
jne
call
push
push
call
or
add
xor
push
call
push
push
push
push
push
push
call
mov
add
add
movl
mov
add
sub
jne
push
push
push
push
push
push
call
add
sub
xor
movl
or
mov
sub
or
mov
push
call
xor
and
or
push
push
push
push
push
push
call
or
and
push
call
and
and
call
pop
mov
mov
pop
lea
add
mov
je
mov
mov
add
sub
jne
sub
push
call
and
and
sub
pop
mov
pop
ret
sub
push
push
mov
mov
mov
mov
jmp
lea
sub
xor
sub
mov
sub
test
jne
add
add
mov
movzbl
add
mov
mov
mov
shr
and
lea
mov
add
sub
test
jne
add
add
mov
movzbl
add
mov
mov
mov
shr
and
add
test
jne
mov
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
test
je
push
push
sub
mov
add
mov
sub
cmp
ja
sub
mov
movsbl
lea
cltd
mov
idiv
add
jmp
mov
sub
cmp
ja
add
add
xor
movsbl
lea
cltd
mov
idiv
add
mov
and
jmp
mov
sub
xor
mov
mov
add
and
and
mov
add
test
mov
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
mov
sub
test
lea
mov
jne
push
add
add
mov
movzbl
add
mov
mov
movl
pop
mov
mov
shr
and
add
mov
add
ret
push
mov
sub
push
push
push
mov
mov
sub
or
push
push
push
push
push
push
call
mov
movzwl
mov
add
lea
push
push
mov
mov
mov
movb
call
add
lea
push
call
push
mov
call
add
lea
push
push
push
push
call
mov
mov
mov
lea
push
push
lea
push
call
test
je
call
add
call
or
or
mov
push
call
add
mov
mov
lea
addl
add
sub
jne
mov
mov
sub
mov
jne
mov
mov
mov
sub
jne
or
and
sub
push
push
push
push
push
push
call
add
and
mov
mov
mov
mov
add
mov
mov
test
mov
mov
je
mov
lea
and
mov
call
mov
mov
sub
mov
mov
add
mov
jne
xor
mov
add
sub
jne
cmp
je
lea
mov
sub
shr
test
lea
jle
mov
movzwl
mov
and
cmp
jne
mov
and
add
add
add
add
sub
jne
add
cmpl
jne
mov
cmpl
je
push
call
add
and
mov
add
cmpl
mov
je
mov
add
push
call
mov
test
mov
je
xor
xor
or
mov
test
jne
mov
mov
mov
lea
mov
add
test
mov
je
jmp
mov
mov
test
jns
and
add
movzwl
push
push
call
mov
jmp
mov
add
mov
mov
add
push
push
call
mov
mov
add
mov
mov
add
test
jne
add
cmpl
mov
jne
mov
mov
add
movl
mov
push
mov
mov
pop
mov
mov
mov
mov
or
or
mov
cmp
jne
and
xor
or
push
push
call
mov
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
lea
push
call
test
je
push
mov
push
mov
lea
mov
mov
lea
shr
mov
je
mov
mov
mov
sub
jne
lea
push
call
mov
sub
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
pop
add
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
in
add
in
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
add
add
scas
add
addb
add
mov
add
jp
add
data16
add
add
add
add
add
adc
add
add
pop
xor
fnstenv
jecxz
test
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ds
test
mov
ss
cmpsb
aaa
leave
aaa
iret
aaa
or
mov
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
js
test
int3
cmp
cmp
fstpt
cmc
ds
aas
pop
aas
aas
add
add
dec
add
add
xor
xor
xor
test
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
jle
test
mov
nop
xor
xor
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
imul
mov
mov
add
sbb
cmp
mov
js
lret
adc
sbb
or
sub
sub
sahf
or
outsl
push
adc
mov
or
inc
or
jns
or
jnp
sbbl
mov
and
push
xchg
adc
fstl
adc
mov
add
shlb
lret
mov
nop
adc
mov
fdivr
add
mov
mov
sub
or
add
fcompl
xchg
add
popa
and
jge
mov
dec
fsts
and
inc
sub
outsl
and
dec
cltd
xchg
mov
roll
inc
xchg
sbb
and
dec
lahf
xchg
mov
lret
inc
fucomp
mov
subb
std
xchg
adc
and
inc
lods
dec
push
cwtl
and
fistl
xchg
shll
sbb
daa
xor
lds
mov
or
setno
imul
inc
xchg
les
or
and
inc
push
popa
mov
andl
jecxz
repz
and
mov
dec
inc
xchg
push
and
jno
inc
test
mov
adc
or
mov
adc
and
mov
dec
daa
xchg
inc
and
jae
mov
dec
xlat
xchg
in
stc
ss
mov
inc
sub
mov
push
and
dec
add
lds
and
dec
adc
rorl
mov
das
sbb
or
loope
or
xchg
lods
and
imul
mov
orw
adc
xchg
add
in
subl
stos
mov
dec
pop
xchg
inc
and
or
incl
dec
xchg
mov
mov
in
les
lcall
jb
and
inc
imul
adc
xchg
lods
mov
mov
and
xchg
or
or
insl
mov
inc
and
dec
and
cltd
push
fisttpl
adc
xchg
mov
jge
imul
xchg
mov
dec
dec
aaa
xchg
sub
pop
inc
add
mov
adc
xchg
outsl
and
aas
sub
add
and
dec
iret
xchg
shll
mov
or
imul
inc
movups
std
nop
fs
rorl
xchg
mov
popf
inc
xchg
orl
and
cmove
or
mov
adc
les
or
dec
sbb
xor
and
or
sbb
sbb
fsts
aaa
or
and
dec
or
mov
xchg
or
and
dec
adc
and
dec
leave
cltd
mov
mov
mov
adc
and
dec
cmc
cltd
or
mov
inc
xor
cltd
rorl
mov
popf
xchg
lea
jae
pop
dec
mov
adc
and
inc
stc
cwtl
or
xchg
iret
and
jae
jl
jge
cltd
jnp
addr16
jp
adc
jl
insb
adc
sub
mov
xchg
adc
or
or
movsb
orb
jns
push
push
inc
or
sarb
sbb
mov
xor
lahf
pop
psrld
sbb
ds
add
popa
rcll
cmp
push
inc
mov
sbbl
inc
add
mov
insb
jo
adc
cs
insb
or
std
jno
je
or
adc
fcoms
outsb
xor
add
sbb
add
mov
dec
push
mov
dec
test
lods
add
pcmpgtw
std
data16
xchg
mov
adc
add
scas
or
int
jb
jae
repnz
sbb
sbb
mov
add
outsb
sbb
or
xor
aad
test
push
je
sarl
dec
inc
aad
bound
and
inc
inc
shlb
outsl
or
je
ds
imul
add
and
arpl
pusha
jo
sarb
insb
gs
movups
roll
push
adc
adc
lods
xor
xor
pop
or
dec
push
mov
sbb
sbb
and
icebp
ja
call
call
jl
dec
mov
inc
test
arpl
cmp
mov
loope
sub
xor
clc
jae
pusha
clc
insb
lret
xor
icebp
jb
int3
lahf
sub
sbb
adc
xor
ss
cmp
sbb
adc
out
jbe
sub
sahf
add
add
add
inc
femms
cmp
jg
pop
adc
arpl
pop
jl
sbb
add
sbb
inc
jecxz
jecxz
jecxz
jecxz
ret
and
movb
clc
pusha
clc
and
pop
clc
and
fs
clc
fdivrl
add
jge,pt
sub
jnp
sub
ds
clc
cs
cmp
das
clc
add
cli
xor
pop
clc
xor
clc
or
clc
cmp
inc
clc
cmp
inc
clc
ds
dec
clc
inc
clc
push
stc
sti
loop
inc
pop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
inc
jle
push
jecxz
loop
arpl
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
arpl
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
out
add
lahf
and
das
aam
and
loop
pop
and
and
push
clc
xor
movsb
loop
jp
pop
clc
sbb
inc
clc
imul
inc
or
or
sbb
data16
insb
fistpll
mov
push
push
adc
jl
cmp
inc
adc
and
gs
sbb
push
xchg
sub
adc
pop
sbb
adc
icebp
popw
les
sbb
dec
pop
sbb
pop
xor
sub
jl
and
inc
pop
dec
cmp
xor
clc
clc
addr16
inc
add
jg
and
clc
sub
dec
pop
mov
call
clc
push
out
cmp
cmp
or
or
lret
ret
or
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
pop
pop
adc
jl
jl
jl
jl
jl
sti
icebp
sbb
mov
icebp
sbb
std
test
icebp
and
lods
icebp
and
scas
icebp
and
mov
and
mov
and
mov
and
icebp
mov
icebp
sub
mov
icebp
sub
shl
icebp
ret
icebp
sub
icebp
icebp
cs
leave
icebp
das
icebp
lret
lret
xor
int3
xor
int
xor
into
divl
rol
xor
xlat
aaa
fcmovb
cmp
ffree
cmp
faddp
cmp
ffreep
cmp
loopne
cmp
loope
cmp
in
aas
out
inc
call
movl
jmp
inc
in
movl
repnz
fwait
add
mov
sbb
sub
push
loope
icebp
and
sub
and
sub
and
sub
icebp
and
das
icebp
and
icebp
xor
daa
icebp
xor
sub
xor
sub
xor
sub
xor
icebp
sub
aaa
icebp
sub
icebp
cmp
das
icebp
cmp
sub
cmp
xor
cmp
xor
cmp
icebp
xor
aas
icebp
xor
icebp
inc
icebp
aaa
icebp
inc
icebp
cmp
inc
icebp
cmp
dec
icebp
aas
icebp
dec
icebp
inc
icebp
dec
icebp
inc
icebp
dec
icebp
inc
icebp
dec
icebp
inc
icebp
dec
icebp
inc
icebp
dec
icebp
inc
icebp
push
icebp
inc
icebp
push
icebp
inc
icebp
push
icebp
dec
icebp
push
icebp
dec
icebp
push
icebp
dec
icebp
push
icebp
dec
icebp
push
icebp
dec
icebp
push
icebp
dec
icebp
pop
icebp
dec
icebp
pop
icebp
dec
icebp
pop
icebp
push
icebp
pop
icebp
push
lock
je
js
js
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
pop
adc
pop
sbb
add
sbb
js
sbb
push
pop
icebp
add
icebp
and
pop
cmc
and
or
and
or
and
or
and
icebp
icebp
daa
icebp
or
icebp
sub
dec
icebp
sub
das
icebp
sub
sti
icebp
sub
inc
icebp
sub
icebp
xor
das
icebp
inc
icebp
xor
xor
xor
inc
repz
aaa
xor
cmp
xor
cmp
xor
cmp
aaa
cmp
cmp
cmp
cmp
dec
cmp
aas
cmp
inc
cmp
movl
jl
xor
icebp
dec
repz
movl
movl
jl
icebp
dec
repz
sub
dec
adc
dec
and
dec
adc
dec
and
push
adc
push
and
push
pop
push
sbb
push
sbb
push
sbb
push
sbb
push
sbb
pop
sbb
pop
cs
pop
pop
pop
and
pop
and
pop
and
pop
xchg
pusha
adc
popa
sub
sub
arpl
push
fs
daa
gs
sub
data16
sub
addr16
es
push
movsb
test
je
je
js
js
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
hlt
and
stos
jl
jl
jl
js
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
sarl
icebp
aas
icebp
movsl
icebp
inc
icebp
cmpsb
icebp
inc
icebp
cmpsl
icebp
inc
std
test
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
dec
icebp
mov
push
icebp
mov
push
icebp
mov
push
icebp
mov
icebp
push
icebp
mov
icebp
push
icebp
mov
icebp
pop
icebp
mov
icebp
pop
icebp
shl
icebp
ret
icebp
shl
icebp
ret
icebp
pop
icebp
icebp
pop
icebp
vpunpcklbw
icebp
popa
icebp
icebp
enter
sbb
push
and
or
and
lret
xchg
adc
mov
pop
adc
pop
movsl
adc
mov
pop
adc
pop
popf
pop
pop
fistps
pop
sbb
stos
pop
and
pop
inc
daa
xchg
sub
sub
xor
fistps
sbb
sub
sbb
pop
xor
cmp
xor
inc
pop
ss
shll
aaa
roll
pusha
aas
sbb
movl
movl
es
dec
daa
pop
clc
clc
pop
clc
xchg
ljmp
cmp
addr16
xchg
ret
dec
cmpsb
stc
and
rol
and
jl
jl
jl
je
jl
js
jl
jl
jl
jl
jl
jl
jl
pop
pop
and
push
cmp
push
jecxz
jecxz
jecxz
jecxz
loopne
and
mov
loopne
jecxz
jecxz
jecxz
jecxz
loopne
and
pop
push
xor
pusha
pop
sub
popa
sub
pop
or
sbb
pop
or
pop
push
pop
nopl
pop
adc
or
adc
or
adc
adc
jl
icebp
adc
pop
jl
jl
out
icebp
sbb
push
popa
cwtl
icebp
push
rcrl
icebp
push
loope
icebp
push
icebp
sbb
icebp
push
icebp
pop
icebp
pop
icebp
and
pop
repz
nop
xorl
sub
es
sub
lock
pop
jp
clc
pop
call
das
clc
pop
clc
xor
cwtl
dec
xor
ds
aaa
cmp
cmp
scas
cmp
pop
and
mov
cmp
sbb
cmp
jecxz
jecxz
jecxz
jecxz
pop
and
inc
pop
stos
and
inc
mov
inc
into
dec
lods
dec
in
and
stos
pop
pop
lods
pop
dec
pop
mov
dec
pop
mov
es
enter
ds
ds
cmp
xor
es
mov
bound
push
ds
ds
or
daa
pop
or
jl
out
pop
inc
nop
pop
push
inc
pop
shrl
icebp
insb
shll
inc
loope
icebp
aas
icebp
vpacksswb
adc
push
cmp
mov
lea
inc
xor
cmp
psrlw
rclb
inc
enter
shrl
movsb
icebp
sub
inc
fsubrl
das
jo
jl
jl
jl
jl
jl
mov
jl
mov
icebp
aas
repnz
clc
inc
repnz
add
repnz
or
icebp
mov
xor
sbb
iret
add
dec
roll
dec
rol
dec
aam
dec
aad
push
push
xlat
push
fadd
push
fld
push
fcmovb
push
fcmovnb
push
fadd
push
ffree
pop
faddp
pop
ffreep
pop
loopne
pop
loope
pop
loop
pop
jecxz
pop
in
pop
in
pusha
out
popa
out
call
ret
or
add
or
add
or
movl
adc
push
adc
pop
notl
or
adc
or
adc
or
adc
or
pop
or
sbb
psubb
clc
adc
sbb
adc
sbb
adc
sbb
clc
adc
pop
clc
adc
clc
and
pop
clc
and
sbb
and
sbb
and
sbb
and
clc
sbb
daa
clc
sbb
clc
sub
pop
clc
sub
xor
clc
and
sub
and
sub
clc
and
das
nop
ret
clc
xor
es
xor
daa
clc
xor
sub
xor
sub
xor
sub
xor
clc
sub
aaa
clc
sub
clc
cmp
das
clc
cmp
xor
cmp
xor
cmp
xor
cmp
clc
xor
aas
clc
xor
clc
inc
clc
aaa
clc
inc
clc
cmp
inc
clc
cmp
inc
clc
cmp
clc
dec
clc
aas
clc
dec
clc
inc
clc
dec
clc
inc
clc
dec
clc
inc
clc
dec
clc
inc
clc
dec
clc
inc
clc
dec
clc
inc
clc
push
clc
inc
clc
push
clc
inc
clc
push
clc
dec
clc
push
clc
dec
clc
push
clc
dec
clc
push
clc
dec
clc
push
clc
dec
clc
pop
clc
dec
clc
pop
clc
push
clc
pop
clc
push
clc
pop
clc
push
clc
pop
clc
push
clc
pop
clc
push
clc
pop
clc
push
clc
pusha
clc
push
clc
popa
clc
push
clc
clc
pop
clc
or
stos
xor
or
ds
xor
psubb
clc
adc
aaa
clc
adc
cmp
adc
cmp
adc
cmp
adc
clc
cmp
pop
clc
cmp
clc
sbb
aas
clc
sbb
inc
clc
sbb
inc
clc
sbb
inc
clc
sbb
clc
inc
clc
pop
clc
inc
cwtl
stc
clc
inc
clc
and
inc
clc
and
dec
clc
and
dec
clc
and
dec
clc
and
clc
dec
clc
daa
clc
dec
clc
sub
dec
clc
sub
dec
clc
sub
push
clc
sub
push
clc
sub
push
clc
sub
clc
push
clc
das
clc
push
clc
xor
push
mov
xor
pop
jecxz
jecxz
jecxz
jecxz
sti
xor
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
in
mov
aas
jecxz
ret
inc
in
in
out
popl
lods
popl
lods
popl
popl
scas
popl
mov
inc
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
dec
mov
push
mov
push
mov
push
mov
push
pop
push
pop
pop
subl
jo
pop
jecxz
ret
pop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loopne
adc
out
call
push
mov
jecxz
mov
push
call
or
mov
mov
and
movsb
js
clc
cmpsl
and
jg
vmwrite
loope
movsb
jmp
and
jbe
movsb
dec
jl
inc
test
adc
lea
adc
adc
xchg
and
mov
shlb
leave
cltd
xchg
mov
and
inc
xchg
int3
mov
cwtl
inc
aam
enter
mov
repnz
divb
jbe
cli
and
dec
sti
xchg
fisubl
cld
fistl
std
dec
fcoml
adc
popl
mov
dec
add
inc
mov
mov
push
and
dec
pop
xchg
xchg
and
inc
xchg
adc
aam
adc
inc
pop
mov
adc
and
adc
enter
lret
adc
and
dec
int3
xchg
sbb
into
mov
adc
and
dec
rclb
and
mov
adc
and
dec
ficoml
sub
mov
adc
and
dec
ficoms
loopne,pn
das
adc
and
dec
loop
xor
jecxz
xor
mov
adc
and
dec
out
xor
call
and
dec
ljmp
in
mov
adc
and
dec
out
xchg
cmp
lock
or
dec
dec
xchg
or
dec
and
inc
push
or
push
and
jno
dec
lds
rolb
mov
je
cmp
mov
jecxz
xor
mov
cmp
xor
lods
repnz
dec
hlt
in
jb
and
dec
notl
fdivr
mov
cmp
sti
dec
inc
xchg
cld
and
std
dec
mov
adc
shll
gs
int3
mov
adc
inc
mov
add
or
into
popa
add
adc
mov
adc
popf
sbb
test
imul
xor
or
adc
popf
push
sub
or
adc
mov
sub
loope
hlt
dec
and
adc
movb
adc
inc
popf
or
sub
call
popa
cltd
mov
loop
adcb
xor
adc
push
inc
xor
cltd
adc
or
sahf
adc
xor
mov
xchg
jno
adc
cmpsl
pushf
xor
xor
pop
popf
inc
cwtl
sub
adc
mov
loope
pop
xor
fldenv
jp
sbb
clc
adc
popf
jo
inc
mov
adcb
in
lret
xchg
adc
add
push
roll
jge
addl
adc
ret
or
adc
lcall
xchg
or
adc
xorl
or
enter
cmpsb
mov
adc
mov
mov
pop
popf
clc
xor
adc
cltd
xchg
adc
adc
sahf
mov
adc
adc
adc
inc
popf
pop
mov
inc
cltd
sahf
adc
sub
add
es
inc
or
and
xchg
xchg
repz
xor
and
mov
dec
adc
test
adc
inc
rclb
mov
test
shlb
adc
adcb
popf
and
fdivl
gs
adc
dec
nop
inc
adc
add
adc
xchg
cmp
adc
mov
xchg
adc
adc
and
add
adc
fildl
sbb
xor
adc
js
dec
sbb
pusha
push
xchg
dec
pop
adc
xchg
adc
cmpsb
mov
xchg
adcl
dec
jbe
imul
adc
inc
xor
clc
and
sbb
adc
xchg
or
int3
adc
dec
int3
xor
adc
int3
xor
adc
adc
adc
pop
sbb
adc
loope
and
adc
mov
cmpsb
rorb
das
push
cwtl
jns
adc
cltd
jne
fwait
and
insl
leave
adc
adc
dec
jg
xor
mov
popa
dec
gs
adc
xor
ss
dec
fnstcw
lea
or
and
push
mov
xchg
adc
icebp
mov
xor
add
icebp
popa
test
loopne
push
adc
and
dec
lret
rcrb
sub
adc
adc
xor
js
fs
popf
adc
mov
adc
mov
pusha
adc
sbb
adc
cltd
icebp
mov
xchg
int3
adc
xchg
inc
jno
jmp
jbe
cmp
adc
pop
mov
and
xor
xor
xchg
in
xlat
jo
adc
mov
mov
xor
lea
adc
adc
jl
imul
adc
add
xchg
add
and
test
test
int
mov
mov
pushf
sub
cmp
adc
mov
test
adc
pop
ret
sbb
adc
aad
adc
jae
test
lock
adc
sub
adcl
xchg
adc
xor
mov
push
xchg
adc
dec
shlb
mov
mov
adc
and
sbb
xchg
jl
int3
or
popf
sbb
rcll
adcl
xor
and
inc
imul
or
xor
cmp
sbb
outsl
fwait
jbe
ds
out
adc
fcoms
xor
fisubs
mov
inc
adc
add
icebp
repnz
push
adc
cmp
pop
dec
mov
jno
movsb
or
iret
cmp
pop
xorb
les
stos
shrb
orl
out
inc
mov
into
or
shrb
insb
loop
mov
jge
jns
add
dec
push
push
add
push
add
mov
pushf
lea
xor
mov
shrb
jbe
into
add
movsb
jl
test
mov
or
jno
mov
xchg
add
loope
enter
add
cmpsl
xchg
les
mov
xor
dec
push
xor
or
xor
lods
arpl
dec
ljmp
and
insb
fcoms
xchg
pop
ljmp
lret
movl
cmp
aad
push
xchg
ret
cmp
add
into
or
bound
sub
out
add
dec
shlb
andnps
sahf
jnp
push
mov
int3
in
mov
dec
mov
xor
jmp
inc
add
mov
out
movsl
out
addr16
hlt
scas
and
xchg
add
push
aad
add
negb
mov
add
outsb
and
leave
push
enter
pusha
imul
les
pop
clc
inc
lods
addb
iret
push
ret
call
xchg
divb
movb
push
std
jb
int3
outsb
cmp
popa
aad
jmp
incb
addb
clc
pop
lcall
xchg
sahf
fisttpl
cwtl
add
fnstcw
push
mov
xchg
adc
lcall
cltd
pop
ret
andb
je
jg
add
hlt
inc
pop
add
pop
shlb
ret
xchg
sbb
orb
ljmp
movsb
or
lods
stos
xchg
add
cli
in
leave
pop
adc
in
push
push
les
lcall
inc
mov
pop
call
out
into
cltd
and
test
or
mov
test
sub
jg
push
gs
inc
adc
aad
mov
lds
xor
int
xor
inc
add
out
and
fildl
fdivr
lret
stos
lods
adc
mov
cmp
mov
aas
cmp
addb
push
adc
mov
scas
repnz
mov
cmp
or
xor
scas
dec
popa
push
cli
test
orb
repnz
sbb
pusha
ja
ds
jge
clc
jg
and
lds
add
or
add
xor
push
lahf
dec
aam
ficomps
rcrb
xchg
xlat
jnp
mov
cwtl
clc
insb
cltd
je
add
cmp
push
jae
sbb
sbb
jae
inc
xor
add
push
jo
shll
add
sbb
fdivl
test
xor
cmpsl
push
dec
ljmp
sub
pusha
dec
out
adc
sbb
or
das
cmp
add
jae
push
imul
adcl
test
into
sub
fwait
inc
gs
sub
inc
insl
aam
adc
pop
sahf
sbb
inc
mov
loope
and
leave
or
mov
push
xchg
xor
lea
or
inc
int
or
mov
lgs
call
rcrb
xorb
clc
pop
aad
sub
adc
inc
jb
std
jae
mov
adc
pop
mov
push
outsl
arpl
pop
xor
push
jne
adc
jb
cmp
imul
jmp
test
adc
jg
das
push
shll
int
je
xor
adc
add
inc
sub
or
inc
into
adc
insb
add
pusha
outsb
int
gs
xor
loopne
mov
inc
loopne
dec
mov
push
movsb
xor
or
cltd
adc
inc
stos
add
xor
into
pop
xchg
in
jo
addr16
jno
push
sub
or
rcll
mov
dec
jb
hlt
jno
popf
cld
js
out
add
flds
outsb
push
lods
in
add
int3
pop
gs
dec
adc
pop
aad
jae
or
push
adc
pusha
adc
add
sarl
mov
push
add
xor
jmp
push
orb
loope
loopne
add
shrl
mov
adc
push
addr16
insb
inc
push
dec
enter
xchg
push
sub
insl
add
cmp
dec
add
test
test
mov
add
outsl
loopne
xor
xchg
mov
push
and
or
stos
or
fidivrs
and
inc
outsb
filds
or
sub
imul
and
jae
add
imul
adc
inc
sbb
mov
and
imul
call
outsb
insl
lret
add
push
dec
scas
add
push
shrb
or
mov
mov
shll
mov
or
fisttps
cmpb
int3
or
lock
push
insb
insl
and
fs
or
mov
push
ret
inc
test
add
outsb
shlb
cltd
inc
cmp
xchg
clc
shrb
xchg
xor
mov
sub
movsb
adc
sub
rclb
scas
adc
aaa
or
add
clc
je
or
fstl
mov
call
or
dec
data16
nop
nop
push
jecxz
loop
lea
test
or
andl
std
push
popa
imul
scas
fisttps
sub
sbb
je
inc
cmp
ret
xor
nop
adc
inc
cmp
fs
rcl
or
jbe
pop
mov
sbb
add
cltd
nop
xchg
inc
xor
sub
imul
cli
mov
enter
stos
loopne
or
scas
cltd
jmp
imul
xor
lods
sbb
xchg
sub
fmul
lock
push
cltd
int
int3
mov
and
leave
mov
sbb
adc
sub
pusha
cmp
sarl
xor
andb
add
insb
or
jo
fcomi
add
adc
adc
imul
enter
call
imul
rorb
and
jbe
push
imul
ud0
rorb
push
je
mov
lret
js
pop
test
fdivrs
and
into
or
das
sbb
or
or
and
mov
rorb
lods
ds
cmp
fldenv
and
and
sbb
xchg
adc
or
add
std
into
add
and
icebp
add
xorb
and
and
pushl
imul
jb
movsb
mov
dec
fnstcw
das
sub
push
nop
sbb
test
adc
js
dec
dec
and
movsb
lods
icebp
push
test
int3
xor
cmp
inc
sub
rclb
or
mov
add
and
mov
lock
fadds
shrb
add
loope
sub
ss
clc
aaa
cmpsl
mov
xor
in
and
jae
shrl
adc
pop
lret
ja,pn
adc
fmuls
int3
insb
into
add
bound
lret
jbe
int3
add
xchg
test
ret
cs
add
add
pop
frstpm(287
arpl
imul
jb
jl
test
and
mov
mov
pop
jb
push
je,pn
subl
mov
add
fldl
push
test
mov
push
and
std
js
push
cs
mov
or
adc
push
popa
outsb
faddl
gs
push
loope
arpl
pop
pusha
jl
add
lock
add
pop
mov
shrb
loop
inc
hlt
xlat
or
gs
add
or
adc
adc
lret
call
adc
je
adc
stos
mov
sub
fs
lock
loope
xchg
sub
rcr
nop
mov
pusha
popf
mov
mov
cmp
movsb
dec
and
jo
shl
sbb
xchg
les
mov
add
sub
lcall
and
xchg
inc
es
es
fdivs
rorl
js
out
outsl
ss
push
jns
dec
and
sub
int
data16
outsb
sbb
jg
negb
jo
cli
pop
inc
mov
mov
test
and
fwait
lcall
add
popa
rcl
jp
movl
pop
sub
add
pop
push
mov
adc
rcrb
js
add
ss
fcoms
pop
jno
add
daa
or
add
mov
pop
add
hlt
pop
or
pop
add
jo
dec
xor
mov
sbb
clc
lock
sub
xchg
jl
pop
out
jp
mov
sub
ret
dec
pop
insb
sub
mov
inc
jp
add
mov
sbb
adc
lcall
cmp
mov
shrb
and
xchg
lret
mov
nop
test
cmp
mov
jg
or
dec
inc
mov
jmp
pop
push
add
add
pop
outsl
gs
push
faddl
insl
add
icebp
jae
out
jbe
ds
rolb
jo
mov
fdivs
ds
sbb
push
xor
rolb
scas
cmp
add
leave
sub
ds
lret
cmpsl
test
fldpi
and
xchg
out
and
cmp
xchg
in
es
loopne
pop
test
cld
and
push
dec
or
adc
mov
and
add
jae
fcoms
sub
aad
xor
or
rorb
and
std
addr16
jge
adc
or
shr
inc
inc
mov
mov
inc
inc
mov
push
push
add
mov
pop
push
out
mov
inc
cmp
sti
add
lret
sub
fadds
loopne
pop
pop
mov
mov
cmc
push
push
mov
cmovno
jecxz
dec
add
enter
sbb
sbb
out
test
scas
cli
push
shr
dec
jge
ljmp
pushf
lock
hlt
out
push
xchg
jecxz
lock
gs
sbb
imul
pop
and
jle
hlt
sbb
movsb
mov
in
dec
scas
mov
adc
in
mov
mov
dec
mov
mov
mulps
mov
mov
add
pop
dec
iret
cli
push
call
pop
mov
out
dec
mov
insb
scas
sbb
push
adc
jae
andb
cmp
xchg
xor
pop
es
add
lea
hlt
pusha
jge
scas
add
or
push
or
mov
sub
popf
lahf
std
cmp
add
clc
pop
dec
add
negb
int3
add
sbb
mov
ficoml
pop
popa
int
jl
pop
out
add
out
clc
add
jmp
push
sbb
rolb
insb
add
arpl
addr16
pop
stos
loope
add
repz
push
pop
inc
adc
fcoms
mov
add
sbb
or
or
shr
dec
enter
movl
inc
mov
push
mov
sbb
mov
push
jmp
dec
push
pop
push
gs
dec
stos
sbbb
pop
mov
mov
or
mov
adc
loopne
imul
decb
or
adc
aam
add
fmuls
push
jl
or
dec
xchg
icebp
fisttpl
fsubp
push
xchg
mov
cmp
sbb
dec
mov
pop
sub
pop
add
imul
lods
sub
mov
hlt
push
js
imul
imul
push
dec
dec
mov
sbb
inc
push
lahf
add
add
pop
enter
jnp
or
push
lods
imull
pop
daa
cld
inc
int3
add
shr
jnp
loopne
jmp
adc
fidivrl
enter
out
or
sub
ret
jo,pn
clc
mov
cld
outsl
data16
inc
dec
es
stc
add
lock
sbb
stos
cmovnp
out
xor
push
pop
fadds
jnp
jg
ljmp
lcall
sub
mov
das
mov
xor
js
fnsave
add
cmc
dec
xor
push
dec
mov
cld
adc
stos
mov
mov
hlt
xor
rcr
add
inc
rol
dec
mov
rorl
pop
ffreep
pop
insb
fiaddl
dec
outsl
ret
ret
jne
shl
test
sahf
push
add
sbb
push
or
dec
push
add
push
add
pop
jns
adcb
inc
mul
dec
dec
sbb
inc
push
fsincos
arpl
sbb
mov
cmp
jnp
or
xorl
jp
add
ss
out
dec
xchg
pusha
sarb
add
sti
incb
nop
ljmp
sbb
dec
xchg
cwtl
subb
xor
add
pop
xorb
push
ja
repz
xchg
call
loop
push
pop
jp
push
int3
xor
fwait
sbb
add
mov
xchg
add
mov
stos
in
add
fs
std
call
push
nop
push
cmp
inc
clc
xlat
cmp
xorb
sti
dec
nop
gs
int3
arpl
add
loop
rorb
xor
les
aad
and
iret
and
xor
js
push
pop
addb
or
jp
or
addl
mov
pop
je
shrl
mov
jmp
add
je
loope
adc
js
clc
jl
or
inc
mov
inc
xchg
cmp
xor
or
push
cmp
test
inc
arpl
fistps
fs
add
jbe
jmp
fwait
repz
push
pop
pop
clc
add
cli
cld
push
jle
in
jmp
adcl
add
sbb
lock
lods
push
dec
imul
push
add
outsb
fadd
jge
inc
js
add
pusha
orb
orb
fcmovnu
test
lods
add
inc
mov
and
jns
cld
jae
and
sbb
jmp
mov
or
adc
mov
cwtl
add
sarb
add
daa
xchg
sbb
sub
xchg
mov
add
rclb
sbb
dec
add
loopne
cmp
pop
push
popf
xor
sub
adc
jno
out
jge
orb
ret
pop
xchg
inc
jg
add
dec
dec
int3
loope
mov
pop
in
jl
cmc
push
dec
xor
addb
js
add
test
fucom
dec
js
sbb
mov
ljmp
push
shlb
pushw
mov
sti
bound
outsl
ja
or
rcrl
movsb
add
rcrl
and
add
sub
jae
cmp
pushf
add
outsl
adc
icebp
int
dec
test
mov
fistl
pusha
inc
outsb
mov
sbb
stos
lods
orb
les
cs
sarl
mov
mov
mov
aad
xchg
pop
jmp
add
mov
orl
in
addb
cmp
aas
add
insb
shlb
jl
call
aad
pop
push
mov
ffreep
loope
sbb
jo
sub
mov
and
jg
and
or
inc
pusha
test
lods
sti
push
add
dec
mov
mov
adc
or
loop
push
dec
ret
inc
mov
imul
outsb
bound
lcall
cmp
add
jnp
mov
nop
cmpsb
mov
aaa
mov
sub
pop
movsl
mov
cmp
and
rclb
sbb
cmpsb
in
add
mull
sbb
inc
rolb
adc
cmc
push
addl
mov
dec
dec
or
out
je
test
aas
pop
ret
push
hlt
push
inc
add
pop
push
lods
cmc
dec
es
jle
add
push
mov
sbb
xchg
pushf
sbb
mov
sub
ds
or
xchg
xchg
jnp
andb
lret
pop
rorb
inc
cli
lret
pop
nop
add
xor
sub
aad
dec
push
mov
sbb
push
jno
and
mov
jge
out
jns
cmp
xlat
and
and
cli
inc
sbb
nop
jl
add
xlat
xor
movsb
mov
cmp
cwtl
or
adc
xchg
pshufw
cld
cmp
loopne
je
frstor
and
mov
outsb
jb
mov
mov
and
xchg
in
sub
dec
xchg
popf
hlt
xor
mov
icebp
sub
xchg
add
and
adcl
mov
pop
test
out
or
or
mov
scas
cmp
test
pop
add
push
push
cli
push
inc
inc
add
xor
fstps
fcom
jbe,pn
loopne
jnp
pop
loope
ja
fiadds
stc
ror
pop
test
add
sub
out
cmc
dec
nop
repnz
test
sarl
cmp
fwait
aaa
or
sbb
pop
pop
cld
add
pop
mov
or
mov
xor
scas
mov
push
popf
mov
dec
cmp
mov
dec
mov
nop
add
adc
popf
inc
icebp
cs
xchg
add
ret
rcrb
sarl
and
cmp
rclb
rolb
xor
dec
xlat
faddl
xor
aam
outsb
cli
out
getsec
jb
roll
fimull
fs
in
xor
inc
xor
sbb
mov
lret
data16
jbe
jae
or
inc
or
insb
add
add
jl
sbb
clc
add
jo
or
xchg
les
ret
call
sti
pop
adc
xor
lods
jg
add
fnstcw
sub
shl
and
popl
cld
insb
pusha
xlat
adc
mov
cmc
jecxz
test
lock
mull
jmp
pop
test
in
ds
inc
add
dec
and
fcom
sub
movl
add
mov
inc
insl
bound
xor
inc
arpl
int3
sbb
mov
and
cmpsl
adc
loopne
mov
mov
lods
sbb
in
push
inc
lods
mov
fs
mov
ss
sub
lea
mov
adc
addr16
or
inc
fadd
ss
iret
add
jnp
or
cwtl
fadds
or
call
sbb
add
lock
inc
call
mov
dec
push
out
dec
inc
add
loop
push
add
es
add
adc
add
adc
dec
add
cmp
xchg
add
subb
pop
jbe
or
mov
cmpsb
adc
mov
mov
fisttps
pop
pushf
add
hlt
sub
lahf
pop
test
std
jmp
mov
clc
dec
dec
add
mull
mov
jecxz
pop
lock
ljmp
addr16
fdiv
insb
jne
cmp
mov
add
push
stc
ljmp
push
mov
push
add
ret
ss
xlat
lret
xor
cwtl
test
add
jnp
sbb
or
adc
add
pop
mov
pop
adc
mov
sub
popf
iret
and
sbb
inc
add
in
pop
loopne
loopne
mov
andb
push
add
imul
and
add
jns
stos
dec
adc
lahf
or
jb
fmull
rol
pop
inc
ret
push
jle
nop
sub
cltd
mov
sbbl
cli
push
pmovmskb
mov
enter
popf
aad
cmp
xor
adc
push
arpl
or
daa
dec
xchg
push
hlt
add
push
push
mov
ljmp
in
pop
xchg
cmc
mov
mov
int
out
push
mov
cltd
dec
imul
in
push
enter
push
add
lahf
sbb
mov
xchg
hlt
arpl
cld
and
pusha
rcrl
ljmp
int
pop
mov
mov
pop
vmwrite
cmp
cmp
mov
pop
pop
jge
add
test
out
cmpsl
and
shlb
or
imul
fisttps
mov
leave
jnp
jmp
les
xchg
mov
inc
dec
mov
mov
mov
mov
cltd
int3
xor
adc
or
fcoms
push
mov
push
add
flds
enter
mov
pop
orb
xor
fwait
mov
mov
cmp
or
mov
add
jo
inc
imul
pushf
push
adc
mov
jge
xor
nop
xor
jge
or
add
cli
pop
pop
es
lods
push
jge
pop
fimuls
or
js
hlt
mov
xor
mov
in
jle
add
aad
mov
and
mov
adc
fs
pop
je
dec
inc
fistpl
inc
les
adc
push
inc
add
shlb
cmp
nop
inc
addr16
push
js
dec
mov
rep
nop
lods
ret
pop
sub
and
shlb
sti
push
mov
sbb
mov
hlt
add
or
sbb
mov
orb
cmp
push
xchg
test
adc
mov
or
cmc
xor
and
and
imul
jae
movsb
pop
enter
mov
popf
or
insb
xor
lahf
mov
inc
nop
nop
jle
add
out
pop
jne
push
push
mov
cmp
lcall
aas
jl
ret
popa
test
addr16
jmp
push
jl
pop
sbb
dec
jge
sbb
or
nop
xor
mov
add
iret
push
push
loopne
test
fimuls
pop
clc
andb
adc
jns
faddl
frstor
add
push
mov
or
shll
lock
mov
insl
fwait
xor
std
in
inc
adc
je
incl
add
fidivrs
xor
fcoml
sahf
pushf
add
iret
xlat
cli
je
pop
daa
inc
sarb
xchg
shll
enter
add
mov
lret
sahf
xor
xchg
test
jns
and
shll
mov
xchg
nop
insb
add
jns
push
push
adcl
rclb
add
lds
inc
pmuludq
shll
push
sub
movsb
dec
add
mov
push
sbb
xchg
adc
out
jmp
sbb
inc
xor
or
in
shrl
lock
sub
les
rcrb
mov
adc
sub
push
sbb
mov
fdivr
nop
fsubs
xchg
repz
loopne
jo
ret
adc
cmp
pop
pop
cmp
add
fwait
push
aaa
mov
in
scas
orl
cld
adc
add
mov
imul
pop
jne
pop
add
and
mov
push
call
xor
pusha
js
mov
lods
push
test
test
aas
jecxz
mov
push
mov
push
inc
push
jecxz
and
js
cmp
add
addr16
or
push
mov
add
sbb
loope
test
jno
and
imul
and
in
inc
cmp
sub
and
movsl
adc
dec
mov
and
aam
in
xor
sub
xor
je
pop
jecxz
adc
or
out
pop
nop
inc
add
jmp
hlt
lods
adcb
dec
and
pop
or
std
pusha
loopne
add
sub
je
es
or
mov
cwtl
nop
sbb
adc
je
frstor
add
enter
xor
inc
adc
add
pop
les
or
icebp
mov
push
mov
jp
mov
sbb
xor
push
sub
cli
pushf
cwtl
mov
bound
mov
push
push
push
lods
and
je
dec
cmp
xorb
movsb
mov
dec
push
call
divb
pop
adc
pop
push
test
adc
in
push
shlb
test
mov
push
pop
rcrb
add
in
push
xchg
mov
js
inc
repz
cmp
adc
int3
push
jno
jnp
adc
add
adc
lods
dec
and
mov
pop
es
pop
xor
loopne
add
in
push
hlt
jecxz
or
cwtl
mov
loope
lahf
notb
out
lldt
jnp
add
or
mov
xorl
add
iret
je
call
test
adc
push
scas
cwtl
mov
gs
add
loop
jb
inc
sarb
daa
dec
cld
hlt
loop
and
adc
dec
or
xor
xor
sub
mov
mov
inc
rol
xor
hlt
push
mov
inc
adc
or
andl
xor
inc
fdivl
lahf
xlat
push
stc
jle
aam
insb
add
shlb
and
jns
push
push
xchg
repz
fisubrs
add
sub
pop
pop
pop
inc
enter
mov
rcr
add
imul
into
mov
and
popf
push
nop
mov
or
pusha
adc
jae
aam
pmaxub
cmp
sub
pop
sub
adcb
in
adc
pop
fcoml
xor
xor
addr16
rcl
shlb
inc
push
les
add
ret
hlt
rorl
popa
dec
mov
sahf
js
icebp
aas
loopne
stos
pushf
fcom
sar
mov
mov
js
call
enter
cmp
xchg
or
sbb
sbb
dec
je
adc
jl
test
push
or
sbb
or
mov
ret
pusha
mov
xchg
fadds
push
std
pop
xchg
fs
inc
pop
jo
or
mov
mov
dec
mov
sti
xor
cwtl
jne
je
cmp
ret
cmp
push
or
aam
clc
pop
test
add
out
mov
clc
mov
in
xchg
add
dec
test
sub
adc
mov
push
mov
sahf
adc
test
cmp
push
mov
ret
sub
pop
loop
add
mov
xchg
add
ret
nop
sbb
or
fs
dec
add
add
shll
push
jge
cwtl
cwtl
cld
and
pop
sub
lea
orl
lock
adc
inc
adc
xchg
test
int3
je
xchg
test
mov
push
push
push
push
mov
lds
cmp
repnz
mov
andl
dec
lea
aas
jle
adc
iret
cmc
test
pop
adc
sti
ret
sahf
jo
sbbl
or
in
push
in
dec
xor
clc
cmc
scas
movsb
test
ss
add
dec
in
mov
sub
sbb
or
mov
das
xchg
test
shl
xchg
mov
test
hlt
ljmp
inc
jno
adcb
adc
push
jle
xor
decb
in
mov
andb
adc
jne
notb
and
std
xchg
hlt
and
lock
popf
push
mov
data16
adcl
frstor
jmp
lods
jmp
pop
test
and
nop
push
or
or
jns
xchg
cmp
dec
cmp
mov
xor
out
inc
adc
je
enter
fstpt
ja
mov
clc
adc
mov
or
or
or
je
incb
cmpsl
mov
roll
mov
lock
push
push
out
xchg
add
push
add
daa
push
xor
sti
and
push
jle
les
daa
clc
sbb
je
test
cld
xchg
hlt
dec
call
clc
mov
adc
gs
les
arpl
adc
scas
xchg
andl
pop
add
outsb
call
mov
test
xchg
add
call
inc
jnp
push
test
shl
sti
pop
and
add
call
mov
jp
inc
adc
add
frstor
pop
mov
cld
sub
ret
sbb
and
pop
lcall
orl
mov
mov
push
mov
hlt
adc
insl
pop
inc
adc
pop
mov
push
push
cwtl
adc
test
mov
and
bound
call
in
subl
inc
test
outsb
or
popf
lea
inc
dec
mov
repnz
jb
cwtl
adc
push
in
add
cmp
mov
les
mov
xor
cmp
and
push
add
mov
add
sbb
push
mov
aas
sub
test
loopne
jle
cwtl
mov
lods
adcl
rcrb
push
mov
cmp
push
push
push
cld
jo
or
xor
test
dec
cld
push
pop
loope
and
subb
xor
xchg
add
cwtl
nop
push
lahf
popa
dec
mov
fwait
pop
movsb
or
xor
and
cmp
push
test
sahf
and
aas
cwtl
sbb
shlb
mov
sbb
insl
add
stc
cmpsl
int3
frstor
pop
dec
loopne
imul
testl
xor
orb
jae
arpl
ret
int3
push
call
push
jl
ds
xor
andb
lds
add
inc
add
mov
xor
jecxz
xchg
cmp
mov
inc
mov
cli
ret
mov
out
sbb
imul
fs
les
mov
mov
daa
popf
adc
cmp
xchg
add
and
pop
push
out
xor
andb
or
adcl
out
add
jmp
and
sarb
mov
push
add
mov
sub
test
sbb
and
xchg
push
imul
sbb
add
sub
push
dec
or
out
push
push
call
pushf
ja
inc
popa
fadds
ret
iret
mov
mov
loope
push
rclb
push
inc
adc
scas
pop
fwait
add
xor
dec
test
rorb
divb
mov
shl
add
sarl
add
lock
pushf
movsb
cmovge
mov
push
fs
sub
fcoml
insb
pop
inc
int3
jae
lock
pusha
mov
xor
imul
lock
test
imull
nop
sbb
inc
adc
mov
rclb
push
push
jnp
imul
and
shlb
inc
test
test
ret
inc
or
push
jmp
test
or
mov
psubb
ret
rclb
or
setne
pusha
push
das
mov
add
sub
jmp
sarl
mov
sub
hlt
mov
adc
int3
cmovo
sub
pushf
test
inc
add
push
lcall
test
lock
lock
enter
and
jo
cld
std
filds
dec
push
rorb
daa
flds
xchg
and
mov
add
mov
mov
mov
addb
mov
in
sbb
mov
arpl
jmp
and
adc
and
mov
and
or
les
les
hlt
bound
call
push
call
sub
ds
adc
jne
nop
lock
mov
or
loopne
test
in
or
rolb
mov
jl
in
test
je
mov
xor
out
mov
push
negb
loop
insb
sub
rorl
pop
add
decl
pavgb
and
in
or
das
test
imul
lock
fs
cwtl
sub
call
dec
mov
test
mov
iret
adc
or
or
push
aam
je
repnz
popf
jae
cmp
and
push
lods
dec
pop
adc
inc
xchg
mov
xor
test
add
enter
ja
sbb
in
sub
adc
push
mov
or
rcrl
ret
xlat
and
dec
mov
fadds
adc
insb
pushf
stos
call
je
lea
adc
inc
adcb
sub
cli
mov
lods
xor
lock
aaa
rcrl
xor
les
addr16
aam
leave
xchg
xchg
enter
call
mov
test
and
mov
push
subb
mov
fildl
sub
jl
inc
pop
pop
fs
add
roll
push
out
les
jmp
mov
test
je
xor
inc
test
test
cld
cmpsl
adc
mov
mov
sar
mov
and
mov
cmp
fldl
push
push
nop
mov
push
xchg
add
test
push
jge
inc
mov
loopne
mov
adc
sbb
mov
loopne
leave
inc
sbb
mov
mov
mov
orl
cmp
inc
inc
inc
aam
or
cwtl
mov
sbb
test
rcrb
adc
or
mov
pushf
xchg
insb
and
loop
inc
or
addr16
add
test
mov
sbb
pop
leave
xchg
cmp
fisttpll
je
mov
xchg
or
test
push
ret
and
lock
mov
jo
mov
xchg
popa
add
push
mov
jnp
sub
hlt
push
in
mov
sub
cld
imul
jne
jns
int3
and
movsb
cmpsb
pop
adc
or
mov
push
mov
ss
shrl
adc
xor
enter
cli
inc
icebp
fdivr
push
sub
pop
repnz
js
and
ret
mov
loopne
dec
inc
shlb
sar
nop
add
push
mul
sti
pusha
adc
popa
jg
pop
les
enter
jmp
cmp
les
call
cmp
xor
inc
loopne
sbb
dec
mov
pop
sub
or
pop
loope
add
adc
mov
fildll
sub
inc
call
lahf
lods
sbbl
testb
pushf
inc
fdivrp
or
sbb
rcr
out
test
shlb
frstor
push
or
sbb
pop
add
or
mov
pushf
push
in
pop
and
fs
inc
test
movsb
je
and
adc
mov
popf
jg
jns
and
sub
mov
in
call
pusha
out
mov
push
jl
push
loope
and
add
dec
xchg
sbb
or
dec
pop
js
cmp
add
ljmp
or
hlt
in
add
adc
pop
in
orl
loopne
mov
and
push
xorb
dec
cmp
or
out
xor
mov
fcomps
sbb
adc
bound
push
or
loopne
sbb
add
clc
loopne
test
sbb
dec
lds
enter
test
xor
adc
xchg
jl
fmuls
cltd
lods
cmp
sbb
add
xor
cmp
or
sub
adc
mov
cmp
or
test
dec
insb
mulb
xor
mov
sarl
pusha
inc
test
pop
mov
mov
or
or
adc
sbb
dec
cmp
add
fistl
xchg
test
pop
clc
or
push
rcrl
scas
hlt
sub
mov
movsb
xchg
sub
jo
push
push
push
cmp
loopne
test
bound
test
popf
push
xchg
pop
mov
inc
dec
sahf
inc
test
jnp
and
mov
dec
insb
push
adc
call
sbb
idivl
out
dec
lock
vaddps
pop
and
dec
push
ret
in
ret
xlat
cmp
and
push
adc
subb
mov
popa
test
push
push
mov
mov
add
or
and
jl
test
cmpsl
aam
sbb
loopne
and
fwait
xlat
loopne
bound
and
adc
fdivp
xchg
leave
mov
lock
lret
insb
xor
addl
add
inc
xchg
cwtl
cltd
pop
xor
xchg
mov
lock
in
sbb
dec
hlt
jb
mov
sbb
int3
xchg
jmp
fadds
mov
xchg
daa
leave
sbb
popf
popa
loopne
xor
daa
mov
xor
adc
or
js
mov
cmpb
inc
out
lock
shlb
xchg
xor
jae
mov
out
inc
sub
cmc
mov
sub
rorl
js
sbb
adc
add
ret
fisubs
or
and
jl
adc
lock
daa
xor
movsb
sbb
rolb
sub
hlt
aam
push
loopne
inc
test
pop
xor
cwtl
or
out
test
pop
pop
xor
or
subl
test
movsb
aam
inc
insl
aad
add
int3
adc
add
lds
popf
test
enter
add
fildl
popa
push
in
shl
mov
cmp
mov
add
cmp
je
out
pop
mov
xlat
int
fwait
add
sub
and
add
bound
pop
sbb
jg
stc
outsb
pop
inc
ljmp
jmp
bound
ret
add
or
add
jl
sub
je
flds
xor
sbb
add
mov
insb
pop
mov
add
inc
adc
push
and
repnz
or
fimuls
cmp
xor
add
fisttpll
xor
mov
shr
and
mov
add
movsb
jne
ror
push
pop
data16
scas
xchg
add
insb
out
mov
notb
or
call
add
mov
mov
call
lods
add
mov
and
xor
std
aaa
pop
jns
adc
mov
push
fisubrs
jecxz
sub
add
mov
lods
push
push
jne
add
dec
mov
icebp
test
pusha
inc
sub
sub
les
dec
mov
push
pop
leave
sub
pop
testb
push
jo
push
jmp
jg
jns
push
add
xchg
stos
mov
ret
outsb
andl
in
leave
or
and
mov
mov
xchg
sbb
mov
sub
sti
pop
pop
dec
mov
jne
push
fwait
inc
add
mov
or
js
popf
adc
leave
repz
cmp
adc
or
cmpsl
push
repz
mov
push
sbb
dec
xchg
xor
mov
lahf
movsb
inc
sub
jns
divb
pusha
or
repnz
pusha
push
push
ret
pop
test
call
and
enter
stc
mov
lods
pushf
sahf
nop
adc
cmp
cmp
adc
jl
pop
inc
insb
clc
cmp
cmpsb
jae
mov
pop
mov
mov
pusha
lea
in
xchg
pusha
pop
fwait
push
or
cmpb
call
leave
lock
mov
aaa
add
add
mov
xchg
mov
adc
imul
loope
subb
and
mov
mov
add
test
gs
stos
mov
inc
adc
or
and
mov
ds
jno
adc
sub
xchg
movsb
mov
jge
sub
scas
pop
test
jl
movsb
cmp
inc
adc
xchg
add
rcr
out
sub
movb
pop
cwtl
xchg
test
or
fs
shlb
je
mov
xlat
std
repnz
add
orl
pushf
in
pop
xchg
or
mov
or
mov
shlb
pushf
je
mov
dec
mov
cmpb
cmp
add
das
mov
and
inc
xor
jo
add
jge
add
scas
mov
xchg
inc
or
movsb
dec
push
push
dec
inc
add
xlat
subps
fldt
mov
push
push
lock
inc
xor
xor
cmp
xchg
sahf
sbb
imul
pop
loop
rcr
hlt
je
push
xchg
lods
ret
pop
jns
pop
mov
lea
lret
lret
mov
or
add
test
xor
jp
pop
lods
out
inc
movl
xchg
xchg
dec
ja
subl
js
outsb
xor
arpl
add
mov
stos
push
mov
xor
out
pop
add
pusha
mov
mov
arpl
or
add
das
and
decb
mov
add
mov
ss
orb
jp
xchg
repnz
or
out
lret
clc
dec
push
add
insb
mov
inc
test
imul
and
add
and
in
rcr
sbb
or
push
and
sub
test
popa
mov
and
repz
stc
xchg
jns
das
mov
xor
add
in
mov
mov
fs
loopne
push
add
and
inc
xor
dec
and
test
cwtl
jns
rcrl
push
cmc
in
sbb
repnz
xchg
and
cmc
ror
pop
or
mov
cmp
out
sbb
xchg
movb
dec
aam
sbb
data16
fnstenv
test
test
lds
jno
sbb
cmp
dec
sub
outsb
ja
mov
cmpsl
push
sbb
adc
outsl
add
and
clc
outsl
xchg
cmpb
pop
jae
fs
roll
mov
mov
and
into
cmp
xchg
lock
dec
out
adc
pop
jae
push
in
sub
add
mov
and
add
inc
test
xchg
sub
push
and
les
push
xorb
out
and
loopne
orl
dec
mov
dec
scas
ror
popf
sub
test
xchg
xchg
mov
aaa
xor
cwtl
sbb
fdivs
mov
sub
in
and
add
out
fdivrs
dec
dec
add
cmp
or
push
sub
mov
jno
adc
or
das
outsb
ret
jp
adc
iret
mov
push
jbe
inc
fsubrs
add
xchg
mov
clc
cmp
jno
shll
not
andb
add
push
sbbb
and
adc
sbb
cwtl
imul
test
dec
cld
lea
push
cmp
adc
push
es
addr16
sbb
push
mov
xor
popf
sarl
mov
das
or
insb
addb
sbb
mov
dec
idivb
mov
xor
rolb
orb
add
xchg
inc
inc
ret
mov
or
cmp
fstp
pop
and
inc
fdivrl
ret
dec
dec
push
mov
add
or
daa
add
loopne
fcoml
test
in
xor
inc
mov
mov
sbb
clc
mov
outsb
pop
es
sub
and
mov
fdivrs
cltd
popa
movsb
add
mov
xchg
lea
jp
rorb
rclb
inc
adc
inc
stc
stos
pop
jp
push
ja
mov
xor
lea
shlb
mov
add
mov
xchg
inc
mov
and
and
push
adc
or
or
mov
sub
cmp
lods
mov
inc
jae
fdivs
cs
pop
pop
add
cli
aaa
and
lock
sbb
add
jle
in
test
jg
icebp
lock
xlat
inc
call
add
jbe
adc
cltd
adc
addr16
aam
jne
and
pushf
or
mov
movsb
and
sahf
dec
or
add
js
loopne
jne
rorb
push
inc
sahf
repnz
cwtl
or
mov
ljmp
mov
mov
jne
movb
stos
sbb
push
inc
add
call
and
rolb
mov
test
ret
mov
dec
mov
pushf
push
movb
in
imul
push
repnz
mov
js
lock
ret
sbb
xor
xor
push
and
or
xorb
notb
lds
idivb
and
xor
call
and
lock
loop
or
inc
adcb
fs
enter
adc
adc
mov
fadds
ret
enter
push
add
inc
hlt
mov
div
pop
add
jl
and
and
ret
das
and
repnz
pop
xor
push
sub
and
adc
mov
movsb
scas
pusha
pusha
jo
sbb
sub
scas
xchg
popf
and
jne
int3
cmp
popf
imul
jle
frndint
mov
adc
and
es
and
dec
rorb
rorb
xor
dec
call
das
loop
add
adc
pop
bound
cmpsb
loopne
sbb
mov
add
xor
cmp
pop
pusha
lock
notl
and
shr
hlt
fiadds
lods
push
cmp
and
and
xchg
test
and
mov
lcall
repz
outsb
add
hlt
loope
movsl
call
testb
out
jo
push
test
sub
lea
js
and
cwtl
loopne
jg
fs
in
movsb
adcb
mov
push
xor
stc
and
push
call
adc
and
cmc
push
std
xchg
test
push
push
call
insb
pop
inc
cwtl
scas
sub
je
sub
jne
adc
cmpb
and
stos
daa
xor
mov
cmp
rol
rcrl
cwtl
test
fmulp
imul
loopne
push
call
jg
je
aas
out
pop
xchg
jl
jl
mov
xchg
imul
je
sarb
mov
test
mov
jae
add
pop
and
sub
out
xchg
and
shlb
adc
sub
and
outsb
dec
or
mov
imul
and
lock
sub
bnd
rcrl
inc
or
sahf
dec
adc
xchg
xchg
adc
mov
in
push
enter
outsl
dec
clc
jmp
stos
fimull
and
pop
pop
push
mov
inc
and
or
mov
pop
je
add
add
lea
pop
rcr
mov
les
movsb
jle
cmp
je
test
mov
dec
xchg
hlt
mov
adc
mov
mulb
fst
sbb
dec
test
fimuls
lahf
aas
jmp
pushf
adc
xor
fsubrs
enter
dec
add
mov
add
xor
mov
mov
pop
mov
int3
ljmp
ljmp
mov
les
fisttpll
xor
and
nop
js
cltd
pop
xor
sar
mov
mov
test
adc
orl
test
push
inc
fisubl
mov
mov
push
mov
mov
int
or
test
in
adc
or
test
push
test
mov
addb
sti
push
push
push
notb
dec
mov
push
push
add
add
movsb
arpl
rcrl
and
pop
clc
inc
sub
dec
dec
adc
test
sahf
and
xor
dec
xlat
dec
pop
add
push
pusha
stos
add
iret
mov
insl
ret
dec
or
js
test
add
or
push
mov
mov
and
jg
loopne
int3
mov
mov
pop
cwtl
pusha
subl
stc
cmp
adc
and
pop
or
int3
fisubrs
orb
js
add
ret
andb
mov
add
test
repnz
push
shrl
loop
pop
add
mov
mov
xchg
aam
subb
iret
xchg
dec
mov
and
call
and
movsl
sahf
add
mov
das
inc
mov
repnz
fisubs
ss
test
enter
hlt
cwtl
fs
inc
adc
push
pop
and
fs
out
arpl
push
jp
inc
or
fdivrs
je
mov
test
testb
push
cli
or
enter
loope
xchg
fsubrs
data16
and
add
stos
fimuls
or
or
test
outsb
push
push
mov
pusha
daa
imul
add
pop
mov
shll
and
cmp
or
sahf
push
ret
sar
ljmp
pop
add
xorb
fmuls
and
dec
xor
xor
cmc
subb
cmp
xchg
pusha
jne
xchg
mov
or
orl
pop
mov
adc
xor
add
mov
inc
cwtl
mov
cmp
jl
hlt
icebp
pop
outsl
inc
movsb
add
and
xchg
test
and
dec
inc
inc
das
add
mov
mov
test
lcall
sbb
pushf
or
test
mov
dec
enter
xor
mov
mov
pop
add
jbe
sbb
lahf
out
sbb
sbb
push
push
hlt
dec
mov
inc
and
inc
sub
mov
inc
js
aad
push
cmc
or
jns
adc
and
jmp
fsubs
test
mov
lock
mov
cmp
enter
mov
pushf
cmp
roll
enter
roll
mov
mov
cmp
jl
in
add
cwtl
push
sbb
xchg
stc
ret
cmp
mov
jl
add
nop
or
shr
add
into
mov
out
fdivs
push
call
xor
sbb
add
and
and
or
inc
rorl
adc
inc
mov
push
int3
movsl
dec
xor
push
call
aam
and
shll
add
in
insb
adc
in
push
aaa
xorb
mov
ja
inc
adcb
je
jo
pop
fists
in
adc
push
dec
xor
dec
inc
call
push
adc
mov
call
add
sarb
sub
insb
push
sbb
lock
daa
push
dec
sbb
or
sub
xor
and
dec
rcl
jl
and
and
pop
and
insb
fwait
inc
outsb
add
pop
test
and
shlb
pmaxsw
push
pop
or
mov
or
out
ret
or
dec
add
sbb
mov
adc
shl
mov
out
pop
mov
or
or
sbb
enter
pop
mov
mov
add
cwtl
jg
adc
aam
incb
movsb
arpl
rcl
mov
orb
dec
dec
sub
movsb
clc
mov
test
jl
ficomps
add
mov
scas
sub
and
inc
push
mov
jo
test
in
xchg
fmuls
xor
test
cmp
adcl
pop
daa
and
shrl
outsl
lcall
mov
call
addl
rcr
mov
cmp
loopne
cmc
sbb
call
add
sbb
push
sub
add
mov
and
test
jne
testb
sub
mov
add
inc
xor
dec
mov
add
inc
fs
jno
add
push
les
inc
push
notb
inc
add
leave
imulb
cmp
fucomi
je
jno
test
pop
push
mov
sbb
out
sub
enter
outsb
rolb
mov
pop
in
movl
pop
mov
popf
xor
pop
push
rolb
mov
clc
jmp
xor
cmc
test
sbb
cmp
rorb
jp
add
xor
inc
cld
mov
ror
or
cld
add
mov
int
cmp
xlat
std
jl
rorb
js
cwtl
xor
add
les
out
xchg
sub
in
fstps
inc
cmp
sbb
add
add
mov
cmc
mov
lock
stos
fdivrl
in
in
cmp
push
mov
pop
insb
pop
cld
jecxz
mov
dec
loopne
fists
repnz
mov
cmp
xor
in
faddl
or
mov
jle
rdmsr
mov
push
ds
test
cli
enter
pushf
in
mov
call
das
jmp
adc
lock
push
jl
clc
jl
gs
push
gs
ret
and
clc
out
fwait
je
and
add
add
imul
mov
pop
call
fmuls
push
adcb
cmpsb
int3
inc
in
mov
ds
push
lods
add
nop
pop
pop
and
push
xor
nop
dec
fs
clc
int3
shr
adc
cmp
movsl
push
jecxz
sbb
mov
sbb
ljmp
test
lods
inc
ds
shlb
inc
mov
pop
cmp
push
jbe
add
pop
data16
inc
cmp
pop
je
inc
mov
clc
loopne
dec
dec
push
cmp
sbb
or
mov
into
add
pusha
adc
test
shll
call
inc
lahf
incb
lahf
inc
sub
dec
push
into
mov
jg
or
and
jo
xchg
pusha
jl
or
out
mov
inc
jno
in
add
or
push
movsl
test
mov
add
aam
repnz
imulb
lods
jl
jae
test
inc
es
adc
jb
or
mov
sub
jo
jno
push
or
int3
and
or
mov
or
nop
jnp
mov
and
mov
pop
clc
cld
sbb
dec
xor
jmp
jbe
xchg
push
loopne
mov
inc
test
stos
adc
cwtl
push
jmp
fwait
sub
xor
pushf
add
sbb
fs
fadd
add
adc
push
ret
sbb
pusha
or
jle
scas
add
cwtl
sub
mov
loopne
sub
inc
and
dec
adc
xchg
pop
clc
out
leave
adc
mov
je
loopne
popa
cltd
shl
push
cmp
repnz
lods
sub
fidivs
test
cld
cwtl
xchg
imul
fisubs
pop
push
cs
test
jne
aam
orb
dec
call
mov
loopne
fildl
cmp
jge
popf
je
and
mov
mov
adc
adc
dec
adc
push
loopne
sbb
call
cmp
daa
or
arpl
or
add
adc
adc
inc
or
pop
or
and
out
sub
popf
xchg
adcb
data16
mov
xlat
adc
mov
in
movsb
andb
js
inc
je
adc
sbb
sub
lods
xor
push
and
nop
mov
test
mov
enter
popa
mov
les
jb
adc
test
add
mov
in
adcb
in
mov
inc
or
out
lods
cmp
add
daa
imul
push
mov
nop
hlt
hlt
test
and
sbb
xor
sahf
jl
icebp
and
or
pop
and
pop
xchg
and
push
adc
dec
add
iret
push
pushf
add
shlb
xchg
aad
xor
and
push
xorl
cmp
and
mov
inc
jb
or
xchg
pop
push
notb
mov
cmp
adc
test
popf
xchg
jno
int
cld
idivb
popf
loop
or
sbbb
jl
int3
and
in
inc
adc
movsb
or
push
jo
and
inc
inc
call
adc
les
les
loope
mov
adc
cmc
adc
nop
aas
mov
pop
dec
add
sbb
mov
test
inc
ja
aaa
adc
and
in
inc
adc
xor
cmp
adc
and
adc
xor
js
or
shr
movsb
js
rsm
nop
mov
xor
dec
dec
ds
jp
addr16
clc
mov
xchg
cmpsl
adc
pushf
nop
test
fidivl
push
popf
xlat
fiadds
push
fmul
inc
imul
mov
les
xor
dec
pop
icebp
sbbb
adc
or
push
xchg
and
insb
test
dec
pop
adc
lods
sbb
add
lea
jb
xor
cs
xchg
inc
ficoms
enter
pop
popf
push
insl
and
and
inc
adc
int3
out
mov
popa
test
push
adc
test
jns
or
xor
sbb
push
nop
jno
and
and
out
adc
inc
sub
xlat
dec
and
cmp
cmp
mov
orb
cmp
fldl
sbb
mov
arpl
mov
mov
daa
js
and
push
lahf
enter
sub
ljmp
add
pop
xchg
and
shll
push
stc
xor
bound
jo
arpl
or
add
inc
and
mov
add
scas
pop
mov
mov
and
movsb
clc
adcl
cld
aas
mov
push
mov
dec
and
adc
outsb
xchg
sbb
and
add
fidivs
push
movsb
or
movsb
popa
sub
rolb
ret
pop
cwtl
adc
push
adc
sub
mov
jno
xchg
les
jo
add
test
cmpb
movsb
mov
shrb
xor
adc
scas
mov
xchg
imul
mov
push
rep
mov
dec
push
inc
lods
push
and
add
div
repz
call
dec
mov
dec
cld
or
test
push
ret
adc
inc
sub
bnd
mov
mov
push
sbb
inc
jl
xchg
imul
pop
or
and
mov
mov
xor
cmp
movzbl
inc
mov
faddl
inc
mov
shlb
sti
add
leave
iret
and
ret
adc
and
cwtl
or
fs
push
add
cmp
lea
jge
incb
jne
mov
rorb
es
int3
rclb
iret
mov
push
aaa
dec
dec
inc
pop
fcoms
sub
test
sar
mov
pop
or
pop
and
xor
or
adc
subb
add
or
je
add
es
and
cmp
cmpsl
loop
test
push
pop
cmpsb
rclb
fs
adc
and
inc
adcl
ret
clc
in
mov
and
jle
mulps
xchg
int3
add
jge
push
sub
lods
inc
js
xor
lods
sub
rclb
cld
movsb
bound
cmp
hlt
sbb
push
pop
loop
pop
orb
es
xor
ja
inc
cld
mov
cld
dec
mov
or
in
fs
pop
xchg
popa
je
mov
sub
sub
dec
fdivrl
test
loopne
push
mov
mov
clc
and
mov
loope
adc
ljmp
clc
or
in
filds
loope
jge
test
adc
adcb
mov
call
je
jge
int3
pusha
and
pushf
jmp
popf
xchg
in
inc
cld
jecxz
sub
dec
mov
cltd
cld
or
and
dec
dec
cmp
or
nop
add
shlb
xor
jne
test
and
insb
outsb
xor
test
call
out
xorb
sti
mov
nop
int3
and
add
movb
dec
test
sahf
adc
dec
int3
cmc
scas
add
push
into
cld
in
rol
mov
ljmp
test
mov
push
mov
out
mov
or
loopne
pop
dec
inc
jo
jl
push
cmp
cmp
add
mov
lahf
rolb
sub
outsl
int3
xchg
and
movsl
mov
dec
jno
push
mov
sub
adc
push
xor
mov
cs
jne
lahf
dec
or
pusha
xor
inc
sarb
iret
stos
mov
jae
mov
inc
test
rclb
in
xor
cli
push
mov
or
imul
cmp
pop
push
call
mov
ret
and
push
fcoms
and
rcll
lds
hlt
pusha
mov
dec
xlat
hlt
jb
pusha
dec
xor
jmp
mov
popa
xor
and
mov
fsts
sub
and
add
dec
adc
repnz
mov
insb
xchg
push
adc
sbb
sub
pusha
pop
pushf
je
dec
xor
and
nop
push
push
push
pop
adc
lods
pop
inc
add
mov
fs
mov
fmuls
into
inc
inc
sbb
pop
lock
lock
pushf
movsb
int3
adc
cwtl
add
icebp
and
mov
leave
dec
sbbb
rclb
out
lea
add
cld
adc
adcl
or
inc
xchg
or
gs
orb
gs
xchg
jge
adcb
mov
add
std
jbe
inc
rolb
rorl
adc
lahf
adc
enter
pop
in
les
jno
adcb
in
mov
je
fmull
movb
mov
push
mov
ds
jle
adc
sub
push
fimull
mov
inc
call
mov
inc
pop
xor
mull
pop
lods
loop
adc
addb
adc
pop
scas
add
push
sub
lcall
mov
mov
gs
sbb
inc
stos
dec
adc
mov
sbb
push
ljmp
add
cmpb
cmp
add
add
xor
leave
je
js
add
mov
das
sbb
ret
std
lea
cmp
inc
add
cmp
popa
cld
lods
add
outsl
add
dec
test
sub
add
or
int3
mov
ficomps
or
push
pop
rclb
in
rclb
cli
and
out
add
add
rolb
ret
jo
pop
dec
mov
aam
xchg
lahf
mov
mov
or
sub
sarb
clc
push
call
add
nop
sbb
and
nop
and
dec
add
aaa
test
repz
nop
inc
jo
mov
mov
xchg
enter
pop
adc
fdivs
lds
popf
jecxz
add
in
push
in
clc
or
cltd
in
dec
mov
fwait
rorl
je
out
or
loopne
arpl
hlt
loopne
sbb
add
xor
or
adc
xchg
adc
mulb
jae
adc
test
lea
das
cmpsl
pop
mov
dec
movsl
in
mov
lcall
subb
enter
push
push
cmc
insb
lahf
js
xchg
call
jne
or
or
adc
mov
sti
shlb
cmp
adc
xchg
xchg
or
jae
repz
cmp
adc
jg
push
sub
add
push
fucomp
loopne
cltd
mov
aas
andb
or
sub
jae
mov
loope
add
sub
cwtl
or
mov
popa
push
add
movsb
dec
or
in
stos
cwtl
rclb
cmp
mov
aas
sarl
loopne
lock
enter
mov
aam
lods
xchg
inc
add
xchg
inc
inc
and
nop
cmp
les
mov
adc
icebp
cmp
adc
inc
pop
xor
and
cmp
inc
clc
in
add
addb
jo
das
notb
mov
fcomps
add
and
add
inc
clc
mov
lahf
add
imul
push
xor
sub
jno
std
add
lahf
add
sbb
jg
jle
sahf
jo
jmp
pusha
test
movsb
popf
pusha
lock
repnz
lods
push
popa
push
jge
jns
adc
int3
add
xchg
adcb
enter
push
mov
sub
pop
xchg
icebp
mov
leave
je
sub
dec
or
xchg
mov
jo
push
test
add
ss
in
mov
mov
and
xchg
fdivs
sub
js
ljmp
enter
loopne
push
jp
call
dec
loopne
jns
cmp
mov
loopne
sarb
xchg
adc
mov
movsb
xchg
jge
lods
mov
jmp
and
or
push
inc
out
ss
or
mov
cmp
push
and
add
in
push
das
testb
and
push
nop
xor
xchg
mov
cwtl
or
mov
js
and
cmc
push
dec
mov
xchg
mov
test
xor
or
adc
shll
mov
jno
cwtl
add
and
in
add
or
mov
xchg
dec
inc
sbb
xchg
inc
mov
cmpsl
sub
in
dec
stos
and
push
pop
adc
dec
mov
repnz
mov
and
cld
xchg
push
mov
mov
and
xchg
push
call
mov
mov
ret
cmpsb
sbb
andb
mov
add
or
and
sub
enter
call
and
insb
sbb
xorb
out
xlat
in
test
and
push
movsb
or
xchg
mov
add
inc
or
insb
loop
and
xor
dec
and
cmpb
in
xor
mov
jb
mov
out
dec
clc
mov
sub
arpl
cli
jg
xchg
mov
mul
push
les
es
gs
cmp
lcall
mov
pusha
test
add
and
popl
sbb
xchg
mov
or
dec
rcrl
jne
and
subb
mov
and
cmp
mov
filds
imul
enter
mov
loopne
jg
mov
call
xor
adc
add
sarl
mov
or
adc
jne
shrl
adc
push
hlt
andb
mov
sbb
sbb
aam
xchg
mov
fsts
pusha
ljmp
mov
push
and
lock
xor
and
sbb
and
clc
rcrb
lds
addb
inc
jmp
mov
add
hlt
xor
mov
daa
inc
push
mov
les
notb
stos
pop
xchg
mov
add
sub
and
mov
dec
xchg
push
cmp
sbb
mov
das
mov
and
stc
lcall
mov
insl
addr16
xor
add
and
nop
push
sarb
leave
dec
aaa
test
dec
je
xor
add
sub
in
movsb
add
loop
insb
or
lock
add
jae
imulb
das
mov
nop
mov
mov
loope
sbb
mov
pop
cmpsb
rorl
or
add
andps
sbb
cmp
sbb
sub
cli
cmp
pop
in
popa
js
dec
test
adc
jae
or
pop
hlt
add
cld
movsb
mov
lock
xchg
adc
mov
loopne
push
enter
push
push
dec
cmp
je
cmp
xor
add
pop
sub
scas
enter
and
mov
sub
shlb
push
shll
std
adc
xor
add
test
repnz
test
mov
ja
stos
push
mov
add
shlb
push
rclb
or
sar
lea
out
sbb
xchg
cld
lds
jns
and
cld
sub
dec
and
call
sub
fisttpll
cmp
jmp
fsincos
xorb
push
or
mov
ror
adc
jne
addb
cmp
out
jmp
xor
lock
lea
or
out
and
scas
xchg
mov
icebp
fistpll
jge
sub
jl
mov
add
nop
push
sub
cmp
or
fsubr
fnstcw
add
je
js
adc
sub
cmp
and
insl
out
sbb
cmp
sarl
subb
call
lods
pusha
test
mov
add
sti
je
daa
jge
push
das
or
xchg
call
cwtl
je
jp
fs
sar
xchg
clc
jl
push
cmp
mov
fdivs
mov
das
pop
mov
inc
sbb
dec
or
les
nop
jle
adc
adc
xor
idivb
mov
or
mov
mov
jae
shll
push
enter
jge
pop
add
and
les
sbb
test
dec
outsl
cwtl
nop
fidivs
hlt
or
testl
in
mov
add
inc
inc
hlt
repz
or
cmp
push
jns
push
jne
and
or
dec
arpl
stc
pop
cmp
fiadds
mov
push
cmp
out
je
push
inc
in
sbb
pop
nop
push
sub
test
push
cmp
das
sub
mov
dec
add
inc
xor
je
mov
inc
cwtl
xor
addb
and
cmp
push
mov
enter
dec
xor
loopne
scas
add
cli
and
push
insl
fwait
dec
pmaxub
popa
popf
jne
sub
sbb
mov
repz
or
sbb
jb
addl
aam
test
mov
fcmovnb
cmp
inc
cmc
out
decb
push
in
lock
add
rcr
or
nop
cmp
xchg
cmpsb
push
push
test
je
pop
enter
pop
inc
and
adc
sbb
add
fstp
subl
sub
inc
and
adc
cwtl
int3
ss
sbb
outsl
or
mov
mov
mov
sbbb
jb
xchg
jb
sub
cmp
das
jo
jne
push
andl
push
mov
test
cmp
push
scas
out
pop
sub
rcl
outsl
nop
fdivr
jle
xchg
pop
pop
xorl
call
sbb
adc
or
sub
mov
add
xor
cmc
xchg
repz
call
inc
incb
fnstcw
cwtl
aam
adc
test
lods
enter
dec
imul
lods
jne
xchg
jp
adc
pusha
js
pop
fmuls
sub
outsb
mov
nop
adc
pop
xor
mov
cmp
push
adc
mov
adc
loopne
test
out
les
loopne
je
mov
add
test
sbb
dec
dec
jecxz
jns
inc
in
jl
or
inc
add
shrl
lods
movsl
dec
inc
loopne
bound
mov
jl
repnz
loopne
xor
arpl
cmp
pop
jo
fsubr
imul
int3
xchg
mov
cmc
test
push
stos
adc
jmp
mov
popa
mov
mov
and
xor
and
test
movb
nop
fsubl
lea
lods
test
mov
push
push
cld
or
xor
jl
fisttps
scas
mov
add
ret
cmp
hlt
jb
or
sub
inc
mov
shll
adc
mov
pusha
pop
mov
mov
and
xchg
call
je
add
jecxz
outsb
insb
pusha
add
adc
xchg
fprem
cmp
adc
js
in
mov
add
xchg
mov
int3
add
or
insl
jl
scas
push
pusha
mov
lahf
adc
icebp
jo
out
dec
push
xchg
add
test
push
cwtl
roll
add
lock
mov
addr16
push
push
das
push
cmp
adcb
push
in
aas
daa
xchg
popf
lods
dec
cli
enter
cmp
fmuls
out
push
xchg
push
add
js
pusha
pop
mov
and
in
test
dec
sarl
mov
adc
adc
sbb
mov
rcl
pop
cmp
enter
jne
mov
mov
fidivrs
mov
cmp
or
adc
add
mov
push
incb
adc
pop
cmp
push
xchg
mulb
lock
cmp
add
sbb
movsb
sub
outsb
adc
out
inc
and
insb
xchg
adc
add
fs
int3
add
shll
or
add
mov
add
xchg
mov
test
rorl
insb
cmpl
dec
lea
pushf
cmpsb
shlb
dec
mov
and
dec
fdivrl
shll
add
sub
test
nop
add
test
jne
rorb
and
int3
pusha
andl
add
add
in
pusha
enter
inc
jno
sub
cld
popa
mov
sub
inc
jns
jo
cld
mov
xor
mov
cmp
mov
mov
subl
xor
popa
push
int3
inc
or
or
and
xchg
shll
shrl
xchg
cwtl
or
loopne
in
dec
add
sbb
fwait
rorb
xor
jnp
loop
inc
loopne
data16
or
add
and
incb
clc
push
xchg
aas
jb
js
pusha
mov
xor
add
repnz
rcrb
filds
sbb
cmp
loopne
mov
xchg
jno
lods
int3
adc
xchg
jmp
enter
sub
cmp
fidivrs
jns
dec
and
hlt
xchg
lods
dec
xor
movsb
or
mov
and
daa
lds
xor
lea
push
sbb
mov
mov
in
test
add
out
out
cmp
repnz
arpl
push
sbb
int3
into
mov
and
mov
and
outsb
and
inc
nop
repnz
mov
or
push
test
sti
pop
mov
inc
shll
nop
fidivs
inc
out
mov
in
fcoms
scas
shll
xor
repnz
xchg
out
inc
insb
out
push
mov
and
nop
je
adc
or
mov
inc
mov
aad
mov
je
js
jmp
lret
xorb
hlt
xchg
adc
add
out
xchg
jbe
iret
pop
cmp
mov
jge
inc
cmp
push
adc
inc
jmp
call
adc
je
push
adc
pop
in
fdivs
fildl
insb
mov
mov
ss
inc
cmp
dec
jo
push
test
imul
nop
in
fstps
cld
rorb
sub
add
sub
in
lahf
add
lea
xchg
cld
push
pop
add
adc
mov
sbb
test
and
mov
cli
test
bound
mov
inc
jl
jmp
sub
xchg
mov
adc
sub
das
pop
pusha
mov
push
push
and
push
push
cld
adc
test
pop
les
lcall
push
add
cltd
inc
popa
xchg
sarl
push
push
cmpl
jae
clc
xor
js
mov
mov
mov
sub
add
pop
inc
push
mov
lcall
sub
in
pop
or
fisubs
sub
jg
lock
cmc
inc
mov
ror
and
call
pusha
stos
mov
cmpsb
jno
daa
gs
xchg
push
sub
mov
movsl
dec
hlt
push
mov
mov
je
negb
adc
add
decb
sahf
jo
movsb
loop
push
shl
add
daa
dec
fnstsw
adc
adcl
sbb
xchg
and
sub
fs
xor
ror
pxor
sbb
lock
mov
xchg
fsubrs
daa
push
add
jae
or
mov
cmp
cmp
dec
int3
lock
mov
int3
add
iret
ficoml
xlat
rolb
jne
daa
shr
and
push
push
mov
daa
mov
in
push
push
mov
ret
add
xorb
push
xchg
aaa
mov
add
and
iret
loop
into
popa
shl
or
push
nop
pop
pop
ret
mov
sub
arpl
mov
lock
iret
mov
cwtl
or
aas
cmc
out
push
shlb
out
imul
call
push
jl
lods
inc
xor
adcl
adc
inc
aaa
mov
or
adc
xchg
sub
pop
or
lock
shl
or
cli
enter
insl
cmp
xchg
adc
and
mov
pop
add
xor
out
imul
in
jle
cmp
lods
xor
je
and
pop
test
in
fldl
cmp
push
jg
or
add
ljmp
outsl
mov
sub
lds
mov
das
mov
mov
in
add
bound
jbe
cmc
add
mov
and
outsl
push
leave
push
mov
dec
or
or
or
test
and
xor
push
xchg
test
inc
xor
push
and
scas
inc
shlb
and
mov
or
sbb
icebp
add
add
out
addr16
fdivs
int
push
pushf
fwait
in
cmp
add
push
lock
and
sahf
clc
mov
aas
push
push
xor
and
fcmovne
adcl
mov
cmp
pusha
adc
push
mov
mov
sbb
pop
jno
nop
in
or
leave
loopne
lods
mov
lock
push
enter
xchg
loope
xor
gs
fstpl
dec
je
mov
in
sbb
and
lea
iret
and
test
rcrb
movsb
xor
lret
sub
jo
xor
or
push
imul
das
lds
xor
sbb
and
fldcw
xor
and
push
and
lock
loopne
out
cmp
daa
sbb
push
mov
sub
adc
xlat
inc
movsb
or
push
xchg
pop
xor
jae
test
push
es
roll
jmp
repz
sbb
les
and
lods
js
in
addr16
mov
xor
and
mov
add
pop
sbb
mov
dec
int3
jecxz
insb
add
inc
mov
repnz
xor
test
dec
add
clc
or
adc
mov
push
mov
mov
es
mov
rorl
mov
adc
cmp
jge
mov
or
adc
in
and
and
sbb
call
mov
je
outsl
sahf
movsb
dec
mov
ljmp
jo
sub
sub
sahf
movsb
leave
pop
sbb
push
movsb
imul
push
idiv
sub
xor
adc
mov
adc
sub
add
push
jo
pop
or
inc
jle
sbb
pushf
jl
push
call
add
test
mov
imul
push
push
sar
xorl
jne
pop
in
pop
in
push
ret
mov
sbb
mov
sbb
or
leave
rcrb
setne
sub
add
lods
sti
xor
pop
xor
sub
sti
addb
test
mov
scas
sub
fidivl
push
lods
xchg
or
daa
mov
lret
pop
out
or
add
push
divb
mov
dec
jge
cmpsb
sub
int3
mov
dec
or
inc
je
add
ret
sarb
adc
imul
outsb
les
and
pop
add
cmpsb
inc
inc
data16
cmp
adc
mov
test
clc
cwtl
mov
or
push
lock
cmp
or
sbb
int3
outsb
stos
loope
push
cmc
scas
je
add
cmp
or
adc
add
pop
or
cmp
les
mov
imul
cld
or
je
mov
jae
cmpsb
jo
pop
push
cwtl
or
sbb
test
test
mov
mov
addb
pop
and
in
xchg
cwtl
pop
dec
jno
and
rorb
add
inc
loope
inc
xor
push
int3
les
test
aaa
pop
pop
pop
sub
clc
adc
loop
mov
sti
push
cmp
dec
dec
xchg
mov
outsb
mov
add
jbe
jl,pt
mov
pusha
lock
test
or
add
add
jmp
mov
fadd
and
jl
add
hlt
call
in
add
setl
addr16
cli
or
fildll
aam
fs
adc
push
sbbb
jns
out
sub
les
push
pusha
xor
add
cmp
shll
pop
scas
mov
test
pushf
mov
loope
push
roll
loopne
jne
adc
mov
pop
push
es
pusha
sub
aas
mov
and
pop
mov
and
adc
and
xchg
xchg
sbb
lods
mov
call
stc
testb
mov
and
sub
in
cmp
ror
add
xchg
hlt
add
fnstenv
test
sbb
scas
push
icebp
and
sbb
hlt
mov
xchg
test
mov
bound
or
lods
cmp
gs
inc
cmpsb
test
test
mov
dec
xor
adc
mov
or
pop
adc
in
dec
xchg
mov
adc
pusha
test
lds
jne
nop
inc
mov
andb
sub
or
mov
push
inc
sub
push
pop
mov
dec
push
and
es
aam
stc
out
shrb
test
and
sub
addl
leave
jo
je
ret
adc
push
cld
sub
fmuls
dec
jno
inc
mov
insb
push
fidivrs
nop
enter
adc
dec
icebp
cli
aaa
or
cmpsl
imul
sub
fidivrs
sub
jo
mov
push
mov
adc
lcall
jl
test
or
test
and
add
clc
jo
push
jl
xor
xchg
imul
mov
cwtl
call
push
daa
cld
fadd
sbb
imul
sahf
mov
cmpsb
js
pop
into
orb
sub
test
cwtl
xchg
std
and
push
ret
mov
les
xchg
orb
lcall
push
xor
rcl
and
mov
adcl
nop
leave
xor
xchg
mov
add
push
maskmovq
idivl
ret
pop
pop
bound
mov
bound
loope
ret
mov
in
mov
mov
add
movsb
dec
lea
sbb
popf
shr
dec
add
mov
and
and
cwtl
clc
add
lea
out
dec
pop
push
xchg
sahf
jmp
icebp
rcrb
push
mov
int3
and
hlt
cmp
das
mov
mov
cmp
adc
nop
test
ficoms
jge
sub
stc
loope
mov
push
icebp
popa
sbbb
inc
ret
mov
mov
shll
mov
add
decb
js
mov
mov
sbb
call
sbb
add
jns
push
sub
mov
daa
add
lods
filds
mov
out
lret
adc
int3
xchg
mov
or
frstor
enter
stos
adc
adc
push
push
mov
adc
aaa
pop
adc
iret
mov
lock
pop
js
push
dec
test
add
mov
stos
mov
mov
loope
out
jne
cmp
scas
pop
push
xchg
pop
loopne
dec
dec
lock
inc
adc
and
cltd
pop
mov
push
call
adc
fidivs
nop
cld
dec
in
hlt
ror
push
and
xchg
jl
lds
xor
je
popf
and
enter
xor
call
enter
stos
xchg
pop
xchg
shll
loope
lcall
lahf
je
shrl
push
stos
or
pop
and
cmp
xor
in
sbb
pop
and
push
idiv
cs
fidivl
in
call
fsubrl
xchg
in
inc
push
insb
bound
mov
movsb
sub
orb
pop
inc
sbb
cmp
and
dec
enter
sub
xchg
in
pushf
adc
inc
mov
mov
mov
xorb
cmp
xor
bound
xchg
push
mov
fs
out
mov
or
jmp
lds
popf
push
cld
andb
mov
mov
test
add
in
out
or
add
hlt
adc
push
sbbb
aam
and
fcoms
sub
xor
mul
cli
inc
fdivs
xchg
cld
mov
push
adc
jne
loope
jmp
cmp
lock
mov
inc
and
add
int3
subl
mov
mov
xor
push
mov
add
inc
sti
adc
mov
cmpb
ja
dec
pop
and
mov
ljmp
test
lock
stc
mov
cld
popa
test
loope
and
test
fiadds
and
cmp
push
sub
jge
test
nop
xchg
loopne
pusha
pop
icebp
inc
push
sub
or
dec
jp
push
mov
rolb
je
movsb
xchg
inc
adc
out
and
clc
sbb
mov
add
adc
jae
ret
jno
xchg
or
aas
push
push
add
loope
mov
sub
push
in
add
adc
and
cmc
shll
mov
or
inc
inc
loop
popf
and
pop
or
xchg
repnz
shll
add
push
pop
dec
sahf
push
xorb
mov
fcomps
sti
sbb
xchg
push
jg
fsubr
fsubrl
cmp
fimuls
push
andl
clc
inc
mov
rclb
pop
ret
and
sub
or
pop
call
loopne
in
push
inc
push
lock
push
cmc
push
cwtl
mov
or
push
das
enter
test
push
scas
sbb
aas
xchg
push
cld
test
and
xchg
xchg
mov
inc
pushl
and
xchg
inc
pop
push
shrb
mov
mov
pop
sbb
xchg
shl
scas
mov
sub
add
adc
int3
and
xchg
and
in
and
adc
dec
lods
ret
test
or
sbb
cmpsb
cmp
xchg
dec
pushf
insb
push
or
inc
test
jae
push
push
or
or
mov
sub
in
dec
pcmpeqb
adc
push
push
push
mov
push
fcom
out
sbbb
test
mov
sahf
mov
fmull
or
lods
adc
clc
call
jl
daa
shr
push
jo
add
dec
push
xchg
mov
les
push
jl
mov
pop
mov
enter
or
dec
gs
in
sbb
shll
orl
push
daa
dec
jns
inc
mov
jb
add
pop
push
mov
sbb
add
xor
xchg
push
pop
add
mov
xchg
add
adc
adc
fadds
in
sar
or
pop
jmp
ja
sub
lahf
jge
push
lock
adc
fdivl
test
dec
xchg
mov
add
enter
sub
js
mov
sbbb
fcoms
imul
call
scas
add
xor
subl
pop
nop
mov
pop
sbb
aad
nop
loopne
nop
mov
lods
sbb
sub
push
fisttpl
cmc
dec
call
bound
adc
jl
lds
ret
sti
mov
push
ljmp
fs
adc
xchg
xor
cmp
add
adc
repz
push
push
shl
leave
sub
lahf
jp
xchg
add
lea
iret
pusha
mov
push
inc
jbe
sub
push
add
inc
adc
jmp
movsb
and
lods
addb
insl
pop
rolb
xor
add
adc
mov
xor
es
cltd
cmp
sub
movsb
pop
addr16
jns
rclb
mov
fcomp
das
jbe
fdivrs
pop
add
fsts
cld
leave
loopne
or
cmp
fildl
mov
push
shrl
fsubl
nop
xchg
dec
aam
loopne
add
clc
cmp
push
inc
mov
cwtl
cld
leave
ffreep
jmp
jo
push
mov
add
bound
adc
fiaddl
push
mov
pop
add
fstpt
pop
adc
xchg
jo
dec
adc
hlt
das
or
ret
push
sbb
js
mov
cmp
fsubrl
cmp
faddl
push
lods
mov
outsb
je
or
or
ret
rcrl
dec
mov
les
in
xchg
pusha
aas
popf
add
jge
add
and
or
mov
or
hlt
sub
and
inc
sbb
adc
inc
adc
adc
or
test
and
aad
adc
adc
or
fs
adc
inc
jae
push
nop
sub
pusha
adc
and
add
adc
sbb
adc
inc
pop
and
adc
test
and
loopne
mov
mov
lcall
adc
mov
adc
popa
adc
mov
inc
andb
lcall
mov
mov
dec
add
les
test
and
test
loopne
and
scas
inc
lea
js
and
sub
push
and
inc
mov
js
andl
xor
or
mov
test
das
shrb
stos
or
enter
jg
nop
ret
or
aas
add
xor
orl
add
xchg
test
push
shll
cs
mov
pusha
add
xor
inc
xor
adc
fwait
xor
add
jbe
lahf
clc
pushf
or
sub
pop
cld
mov
xchg
adc
ror
cmp
movsb
daa
jae
sub
jo
jne
mov
enter
lods
lods
jbe
push
adc
mov
mov
je
addb
mov
xchg
sub
and
test
sub
lock
cmp
sbb
dec
pop
inc
pop
push
rclb
jne
clc
les
mov
push
testb
hlt
xor
std
dec
ret
sbb
push
call
sti
jne
std
or
adc
les
adc
dec
call
jne
push
adc
dec
lcall
repz
cs
pusha
fidivs
sub
lock
mov
jo
loopne
pushf
int3
pop
jns
lods
pop
sbbb
adc
mov
mov
xchg
je
mov
pushf
ja
lea
jns
loopne
call
mov
out
ja
xor
in
inc
scas
add
cmp
fdivp
movsl
pop
popa
and
outsb
add
pop
jl
arpl
aam
sbb
push
mov
xor
lds
fst
orb
imul
push
loopne
adc
jl
xchg
jnp
or
les
jno
adc
push
out
dec
pop
hlt
mov
test
repz
sub
in
fsts
jp
cwtl
cmp
imul
mov
mov
push
and
shll
ds
jmp
xor
push
add
sbb
push
pop
ret
mov
pop
test
push
push
iret
scas
inc
shlb
add
call
push
add
jns
enter
mov
pop
inc
ret
hlt
jl
inc
sub
sbb
in
sbb
mov
push
scas
xchg
add
jmp
mov
popa
repz
mov
movsb
in
jbe
xor
and
mov
nop
add
adc
sbb
cli
cmp
and
inc
pop
lods
cmp
dec
in
xchg
rorl
mov
fistl
jne
xchg
cmp
das
out
push
and
mov
pushf
lods
lock
call
stos
shlb
mulb
mov
dec
push
or
in
push
and
push
nop
lods
push
pop
divb
or
and
sub
push
call
cmp
pop
adc
rol
test
pop
cmp
adc
les
test
loop
das
or
mov
test
add
ljmp
add
filds
jo
aas
pop
incl
mov
mov
adc
addr16
adc
mov
rcrl
mov
and
movsl
sarb
and
sbb
test
sarl
add
sahf
out
bound
test
cltd
xchg
push
jb
fmuls
int3
add
icebp
clc
and
xchg
shlb
imul
in
pop
add
push
jns
cmp
push
sub
push
pop
mov
adc
add
dec
mov
cld
and
mov
xchg
dec
xor
cwtl
shll
sub
subl
fcoms
jg
xor
pop
js
push
push
orb
ds
lret
rorb
lock
push
dec
cld
pop
nop
or
add
dec
dec
push
add
cmp
add
test
or
mov
or
pop
mov
add
push
fs
sbb
and
repnz
xchg
xor
arpl
mov
sbb
xor
int
lcall
pop
or
and
cld
lods
inc
mov
outsb
dec
test
bound
jle
push
lock
push
pop
movsb
sub
lahf
pusha
push
add
add
stc
sub
xor
pusha
jl
insb
cmp
ljmp
inc
xor
mov
insb
push
mov
rorl
addb
stc
fdivrp
and
sbbl
push
adc
xor
xchg
sub
pushf
lds
adc
std
nop
enter
hlt
pop
jae
dec
mov
faddl
sub
fmul
or
je
cltd
ret
je
xor
rol
or
and
pop
sub
test
popa
sub
in
daa
enter
push
ficoms
ljmp
pop
addb
cwtl
adc
testb
jmp
mov
je
inc
inc
mov
jns
shlb
lahf
loope
inc
mov
inc
mov
nop
xor
inc
cmpsl
sahf
mov
and
pop
shlb
push
je
or
jge
jg
mov
fnstsw
add
inc
xchg
testl
sbb
pop
addr16
pusha
sbb
sub
fbld
pop
bnd
daa
fcomps
shrb
or
clc
mov
call
dec
test
loopne
shlb
inc
aas
and
mov
xor
inc
dec
adc
mov
jmp
stc
fstl
test
das
in
shrl
adc
mov
xchg
mov
push
dec
loopne
add
mov
call
outsb
jmp
hlt
repnz
aad
or
addl
jo
clc
or
xor
push
push
dec
decl
enter
and
clc
push
movsb
dec
iret
bnd
or
mov
jnp
pop
lods
int3
xchg
call
pushf
call
test
adc
mov
and
movsl
and
mov
mov
aam
xor
jbe
or
adc
mov
pop
push
mov
std
mov
test
push
test
subb
push
fucom
mov
mov
popa
mov
mov
scas
mov
jns
dec
mov
leave
or
testl
xor
pop
xchg
test
inc
sbb
call
je
jne
sub
cwtl
js
mov
push
mov
fwait
xor
loopne
in
clc
push
add
pop
or
jmp
inc
jnp
adc
je
clc
in
fsubs
iret
sarb
lock
mov
sbb
pop
cs
loope
add
adc
cmp
test
sub
mov
lds
mov
and
test
jne
push
or
push
adc
and
xor
clc
sub
sub
lods
cld
insb
adc
leave
jo
fdiv
xlat
add
psubsb
stos
cwtl
sbb
jmp
es
out
pop
int3
adc
mov
das
test
shll
mov
rorl
and
mov
ret
mov
dec
mov
mov
sub
or
test
and
and
loopne
adc
push
lods
sbb
inc
jns
push
in
sbb
pop
mov
loop
push
adc
sub
in
mov
and
xchg
or
int3
nop
mov
push
fucom
dec
aas
jns
mov
sbb
mov
int3
xor
xor
dec
add
jge
subl
push
mov
xor
popa
pusha
lods
fadds
push
add
cmpl
add
data16
fs
loopne
push
js
in
add
addl
or
les
and
and
test
insb
imul
rorb
jne
adc
aam
mov
test
int3
sbb
mov
scas
shlb
dec
push
insl
test
cmc
pop
push
mov
sub
sbb
imul
and
mov
push
stos
sbb
test
in
push
pop
jbe
andb
mov
cwtl
inc
and
clc
movsb
icebp
out
dec
push
fs
jne
or
test
and
push
fadds
leave
add
jns
sub
sbb
dec
push
mul
cmp
mov
adc
add
rolb
call
inc
out
push
cmp
iret
inc
sbb
mov
out
mov
sbb
jne
push
adc
xchg
push
pusha
sahf
ds
cmpb
andl
clc
adc
mov
lods
mov
iret
mov
xlat
inc
mov
stos
xchg
hlt
pop
xchg
xor
mov
mov
adc
mov
test
adc
test
icebp
cwtl
lea
inc
push
js
xchg
outsb
clc
pop
adc
push
scas
or
add
push
in
fs
test
mov
clc
sub
fsubs
or
jne
cmp
jmp
stos
add
shrb
inc
or
add
call
mov
jl
pusha
adc
test
test
adc
pop
adc
shrb
fneni(8087
or
and
out
sbb
aam
inc
es
in
js
mov
push
or
jb
mov
dec
xchg
test
pop
sub
or
test
hlt
in
sub
add
mov
push
ret
ljmp
je
cltd
jne
add
add
inc
adc
stos
inc
mov
and
pop
push
cltd
xor
sub
je
imul
push
das
push
xchg
sbb
inc
sub
push
add
jne
push
push
or
add
push
ret
mov
mov
adc
loope
lods
adcl
pop
xlat
iret
mov
jo
push
mov
test
cmp
xor
lea
adc
mov
rclb
pop
jg
and
mov
mov
ret
jne
je
imul
lock
pop
mov
adc
mov
lea
das
ror
fdivl
sub
add
sbb
shr
add
push
mov
shl
inc
jno
add
movsb
mov
push
xchg
test
xor
sahf
and
sbb
mov
and
and
stos
cwtl
loopne
mov
pop
test
push
loop
pop
repnz
adc
add
adcl
loope
xor
leave
push
test
adc
push
cmp
test
nop
mov
call
add
imul
mov
sub
adc
cmp
xor
add
mov
xchg
jnp
add
iret
fidivrl
adcl
add
test
adc
cmp
je
aam
aaa
inc
rorb
cmp
push
popf
jne
shrl
insl
xor
mov
loopne
dec
pusha
add
inc
in
in
mov
incl
popf
sub
fbld
sets
cmp
adc
fcoml
xor
nop
push
movb
inc
adc
push
dec
popa
sub
push
insb
lock
popa
push
mov
and
inc
or
data16
inc
sub
gs
xchg
push
loopne
push
or
cmp
lods
test
push
mov
shl
xor
adc
jo
sbb
pop
mov
push
mov
or
sbb
hlt
sbb
cltd
insb
imul
sub
adc
mov
adcl
sub
loop
inc
repz
bound
xorb
or
jnp
das
insl
cmp
adc
dec
jbe
jno
test
mov
jne
stos
mov
mov
xorb
adc
jp
pop
push
pop
in
idivl
push
cld
jl
xor
or
cwtl
pop
aam
pop
push
sarb
sahf
arpl
mov
loopne
adc
ljmp
push
inc
cltd
adc
fsubl
inc
xchg
mov
sub
dec
pushf
add
call
icebp
add
jge
push
push
in
xor
sub
add
aad
jae
es
push
cmp
adc
xchg
adc
test
addl
insl
cmp
push
cmp
add
push
stc
or
add
addl
addl
lods
sti
imul
adc
repz
daa
jne
adc
mov
loopne
call
ja
imul
rolb
sbb
push
add
rcrl
pop
imul
sub
adc
dec
sbb
mov
repz
imul
jge
roll
push
dec
and
push
mov
push
xor
cmp
inc
add
xchg
sbb
lock
ud0
movsb
pop
movsb
xlat
sbb
in
sbb
movl
cmp
out
mov
jnp
sub
mov
mov
xor
jo
mov
add
mov
jmp
add
enter
push
add
out
sub
test
mov
outsl
sbb
mov
push
les
call
les
in
and
inc
mov
and
inc
and
or
add
add
mov
out
arpl
mov
pop
push
repz
pop
and
ret
call
je
test
rorb
add
add
mov
es
sbb
xchg
gs
js
push
jae
or
add
inc
and
cmp
jmp
mov
xchg
test
sbb
add
pop
or
scas
or
mov
dec
mulb
mov
mov
xor
call
notb
xchg
or
xor
xchg
or
rorl
mov
bound
adc
inc
js
push
adc
lock
xor
stc
push
or
rclb
les
jo
pop
icebp
push
dec
stc
jle
pushf
mov
sub
pusha
enter
add
dec
enter
push
ror
or
popa
pop
cmpl
push
sbbl
jmp
xor
lcall
roll
jno
or
mov
jns
push
adc
or
fmull
add
add
into
nop
div
shrb
pop
pop
mov
adc
push
test
add
enter
add
mov
inc
mov
dec
daa
push
lods
and
or
clc
mov
mov
add
adc
je
push
loopne
xor
icebp
sub
clc
mov
clc
mov
add
stc
or
test
lds
adc
pushf
mov
pusha
add
movb
aas
adcl
add
jmp
mov
cli
dec
rorb
push
and
enter
dec
lock
push
testb
sub
mov
jg
aad
mov
jno
xchg
mov
les
cmp
lods
pop
hlt
lock
imul
rorb
xchg
popa
lock
rclb
sbbb
or
inc
dec
and
or
daa
adc
push
iret
aad
jne
cmpsb
mov
pop
repnz
add
dec
jns
or
lret
pusha
adc
int3
add
je
dec
and
iret
xor
push
ror
push
int3
and
pop
xor
jno
iret
pop
cmp
adcb
sub
cmpsb
dec
mov
ljmp
mov
adc
mov
dec
and
inc
add
fsts
sub
insb
dec
arpl
enter
out
mov
mov
clc
or
push
push
mov
add
sub
or
mov
pusha
andl
insb
xor
sbb
pop
push
xorb
shll
add
xor
lahf
xchg
push
cmp
dec
push
std
movsb
jp
or
jns
into
lea
sbb
sbb
mov
out
loopne
jbe
int
sub
lret
or
sbbl
push
xchg
and
dec
enter
push
mov
loopne
mov
xchg
inc
lock
and
frstor
ljmp
aaa
icebp
and
add
insl
int3
sbb
inc
repnz
xchg
or
cmp
mov
or
xchg
jl
add
inc
pop
shl
test
inc
inc
punpckhdq
lods
mov
test
bound
out
dec
sub
in
mov
jo
add
dec
push
xchg
dec
in
lock
pusha
xor
je,pn
clc
mov
test
inc
fldcw
add
sub
push
mov
js
cwtl
pusha
xor
cmpl
stos
mov
mov
dec
adc
test
js
xchg
xorl
adc
mov
scas
adc
test
lods
xor
pop
shrb
add
fwait
test
or
xor
repz
jo
adc
fcomp
je
push
add
loope
test
test
mov
shll
roll
out
insl
cmp
mov
cwtl
adc
ret
cld
mov
adc
je
mov
and
lea
and
jmp
call
mov
and
jmp
mov
addr16
or
dec
decb
push
fildl
jne
adc
daa
xchg
jle
jne
insb
adc
push
pushf
test
out
scas
nop
mov
add
push
jecxz
dec
xor
rclb
cwtl
mov
insb
mov
nop
frstor
pushf
cmp
add
cwtl
or
mov
dec
adcl
adc
test
xchg
and
mov
fadds
cltd
sti
push
sbb
dec
mov
test
xchg
add
out
mov
add
jp
popf
lock
ret
xor
jl
movsb
lock
test
dec
or
dec
inc
ret
mov
sbb
xchg
imul
lahf
jae
jne
out
sbb
and
rolb
movsb
pop
pop
push
shlb
push
mov
roll
jbe
add
loopne
mov
mov
mov
repz
push
insb
das
xor
jle
adc
les
mov
jno
dec
push
inc
imul
sub
push
hlt
daa
out
adc
add
cmp
add
lock
and
jo
add
push
pushf
sub
addb
lret
js
ret
ljmp
imul
mov
xorl
sub
shl
adc
or
cmp
adc
insb
fisubs
pop
or
dec
pop
ret
add
add
fnstenv
orl
lahf
push
loop
dec
lock
mov
add
adc
mov
dec
pop
adc
inc
lods
mov
sub
push
push
outsl
adc
aas
call
shlb
mov
cwtl
mov
jl
mov
inc
push
cmpsl
fcompl
incl
into
cli
hlt
dec
aaa
in
sbb
mov
fdivs
push
sarb
hlt
inc
sbb
pop
push
fwait
or
mov
jge
loop
lfs
jo
pop
test
test
enter
test
pop
push
push
call
mov
cmp
adc
mov
adc
inc
mov
cmp
push
pop
and
or
je
clc
add
sub
mov
nop
hlt
sbb
nop
push
cltd
adc
pop
call
adc
adc
scas
push
sub
cmp
push
test
add
dec
pop
cmpb
mov
int3
add
jle
push
jmp
daa
pop
and
jmp
cwtl
cmp
test
test
mov
loopne
addr16
int3
fmul
inc
jp
mov
xor
out
lahf
cs
adc
in
add
mov
in
test
call
push
rcrb
outsl
pop
roll
imul
fcoms
sub
add
sbb
fwait
rol
mov
sbb
and
lea
ret
or
in
out
js
adc
mov
call
adcb
or
test
adc
rcll
mov
cmp
or
and
ret
mov
cmp
dec
mov
or
test
call
mov
add
xor
imul
lock
pop
jnp
add
adc
mov
mov
rorw
fdivrl
pusha
xor
sub
movsl
inc
orb
add
mov
enter
lcall
or
das
clc
pop
out
dec
fs
mov
mov
shlb
or
fs
mov
sub
cmp
adc
push
pop
and
iret
sub
mov
cmp
out
nop
loopne
loop
sti
sub
pop
pop
orb
push
sub
sbb
cmc
jo
je
lahf
push
aam
inc
fdiv
lods
adc
movsb
call
add
rolb
sub
mov
cld
pop
jp
push
shl
sbb
cmp
jno
clc
add
test
daa
dec
int3
insb
pop
imul
lahf
jp
sbb
lds
mov
and
in
mov
andb
cmpl
push
out
dec
call
sub
enter
loop
mov
pushf
push
jl
test
dec
add
nop
scas
pop
int3
add
jge
mov
sahf
add
shl
das
pop
incl
push
push
lock
loop
inc
sbb
cs
in
mov
xchg
sub
jl
notb
pop
call
popa
dec
and
adc
cmpb
adc
dec
push
lods
sbb
mov
pop
sub
jle
add
add
sbb
or
sub
jo
push
out
cmp
lods
adc
scas
rcrb
inc
jno
adc
jecxz
addl
je
cltd
popa
push
call
inc
subb
call
mov
pop
fsubr
sahf
lock
lret
negl
inc
aas
push
cwtl
in
and
mov
sbb
push
add
add
clc
rolb
aas
add
lret
gs
test
mov
or
inc
ss
dec
test
sub
jl
fadds
out
mov
pushf
outsb
mov
jge
ljmp
jno
je
mov
call
lock
push
cmp
je
cmp
lahf
add
leave
mov
test
pop
dec
mov
push
lahf
nop
and
fdivrl
cwtl
add
into
cmp
lret
bound
or
sarb
rol
or
gs
call
mov
imul
addb
pop
das
int
add
xchg
sub
in
push
cmp
loop
in
pop
xor
movb
imul
ret
add
lahf
add
test
int3
xor
or
pop
pop
addl
je
insl
rorb
xchg
pop
movsl
dec
movsl
and
out
jl
andnps
shl
mov
cmp
cmp
or
movsb
fmuls
test
pop
mov
hlt
lea
enter
movsl
pop
sti
xchg
out
jno
mov
push
call
or
mov
dec
or
or
fs
mov
adcb
push
outsl
pushf
push
inc
xchg
lock
pop
cltd
enter
dec
push
movsb
loope
icebp
insl
sahf
mov
stc
inc
add
cmp
in
or
sub
and
mov
nop
roll
mov
inc
iret
sub
sub
repz
cltd
push
xchg
inc
jo
scas
pop
push
add
rolb
pop
add
dec
mov
push
mov
adc
mov
bound
push
sarb
jmp
sbb
cli
or
stos
mov
andb
push
stos
loopne
lock
sub
inc
add
lea
mov
xor
dec
or
adc
mov
or
in
add
dec
fdiv
jbe
add
pop
in
icebp
aam
in
arpl
add
imul
stos
test
xchg
sub
inc
sub
and
push
and
cwtl
cmp
xchg
or
jl
inc
outsl
jb
adc
inc
scas
xlat
out
jl
add
rorb
nop
nop
clc
mov
mov
mov
sbb
adc
or
jne
or
js
push
sti
cmp
fildll
or
in
push
and
adc
mov
test
inc
repnz
hlt
dec
repz
mov
or
cmp
enter
adc
enter
popf
inc
mov
js
sub
sbb
sub
frstor
jb
inc
scas
es
mov
ja
insl
sbb
roll
outsb
adc
sbb
inc
icebp
or
stos
fbld
loopne
jg
xor
push
jno
adc
inc
int
add
sub
cli
cltd
insb
lock
lock
mov
iret
scas
xchg
pop
jl
pop
push
mov
repnz
push
lods
mov
mov
add
enter
test
daa
roll
jno
jge
add
adc
and
fnstenv
mov
jo
iret
pop
cmc
shrb
lret
test
add
push
mov
mov
adc
popf
inc
pushf
loope
add
je
dec
test
mov
loopne
clc
lret
mov
popa
cmp
jbe
pop
pop
test
int3
adc
and
mov
pop
out
insb
push
lea
add
push
divb
mov
jge
xor
or
int
jmp
add
jo
jge
clc
adc
add
inc
sub
pop
sbbb
rclb
fwait
ja
add
xchg
sub
dec
les
xchg
movsb
inc
test
pop
divb
pop
fidivs
andl
mov
pop
push
add
cmp
testb
sbbb
push
mov
sbb
mov
subl
cmp
push
pop
pop
leave
push
lret
insb
stos
inc
mov
xor
ja
pop
rorb
js
leave
fsubrs
push
inc
faddl
add
pusha
ja
ret
nop
cmp
pop
sub
push
push
mov
pop
pusha
rcrb
mov
pop
xchg
adc
add
inc
out
inc
mov
sub
dec
pop
add
mov
rorl
mov
pushf
xchg
sub
pusha
add
jecxz
ja
imul
inc
mov
shrl
fmuls
sbb
and
sub
sbb
jmp
sub
enter
lret
pusha
test
push
pop
or
xorb
fcomi
adc
xor
cmpsb
jbe
rcrl
shrl
add
push
cmp
test
shlb
test
jo
loopne
icebp
popf
jl
or
add
or
in
addr16
jmp
mov
xchg
pop
and
mov
call
mov
jb
pop
sarb
pop
lret
adc
sub
hlt
mov
ret
and
pop
fcomp
vmptrld
or
pop
or
jl
xchg
inc
sub
sub
or
push
pop
cmp
mov
pop
cmp
fsubrl
jmp
cmp
fistl
lea
and
stc
pop
in
pop
in
int3
xor
insl
push
mov
out
push
shl
test
es
mov
mov
push
orb
adc
mov
js
pop
push
andl
sbb
push
inc
mov
testl
push
mov
dec
pop
mov
mov
scas
repz
pusha
nop
cld
hlt
lcall
ret
fldenv
popf
inc
enter
aam
jge
orb
cmpsl
xchg
clc
adc
jmp
popa
es
push
enter
cwtl
xchg
dec
jno
pop
js
xchg
or
sub
add
mov
enter
add
mul
add
xor
popa
push
cmp
or
xchg
jae
pop
andl
test
lea
imul
jg
push
fsts
and
hlt
or
push
push
stc
lock
dec
mov
fdivrs
push
fnstsw
cmpl
sub
mov
rolb
js
je
lock
and
inc
sbb
and
int3
or
or
mov
pushf
mov
xor
mov
push
hlt
add
testb
add
jb
shld
ja
mov
ret
jle
js
lahf
loope
inc
cmp
sub
adc
cwtl
je
jl
bound
inc
enter
sub
or
jnp
push
and
filds
inc
cmp
in
fs
addl
inc
xchg
pop
add
or
add
xchg
sub
gs
add
test
clc
cmp
call
push
add
fdivrs
fisubs
push
in
and
add
mov
test
fnstsw
push
loope
inc
or
pop
enter
faddl
rclb
mov
push
shrb
push
stos
mov
ds
pushf
jo
stc
pusha
inc
lods
inc
xchg
push
inc
cld
jne
repnz
test
pop
jmp
sbb
icebp
daa
dec
pop
add
cmp
enter
clc
mov
or
and
in
notb
or
or
mov
mov
nop
pop
in
sbb
jle
and
sub
push
pop
add
mov
fmuls
push
sub
gs
mov
or
mov
jge
clc
xchg
pusha
insb
or
lock
je
ja
and
mov
pop
movsb
add
inc
dec
or
and
fdivrs
rolb
call
pop
mov
aam
xchg
movsb
push
push
shl
dec
clc
adc
pop
test
frstor
cmp
adc
sub
or
iret
aad
jno
fsubrl
pusha
pop
push
or
je
fmuls
jb
imul
fdivr
push
push
sbb
rorb
jb
outsb
add
arpl
inc
jp
jl
fs
adc
and
shl
into
push
xor
enter
cmp
xor
xor
and
pop
js
add
sub
adc
inc
scas
pusha
and
push
or
push
mov
mov
xor
pop
gs
fisttpll
outsl
xor
out
outsb
cli
lahf
popa
hlt
ret
mov
and
pop
or
lds
sbb
pop
push
add
subl
js
je
inc
and
insb
stos
inc
jae
aaa
adc
sbb
test
and
inc
movsb
pop
jl
push
mov
int3
sub
adc
xor
adc
add
ljmp
sarb
rorl
sub
pop
loopne
rcrb
fmull
andb
cwtl
add
ret
rclb
inc
dec
stc
repnz
mov
lds
add
mov
pusha
add
iret
pop
push
adc
ja
shrb
and
insl
and
add
push
call
dec
pusha
loopne
mov
add
dec
cmpsl
adc
mov
test
jmp
and
lret
dec
or
and
test
adc
pop
and
or
insb
add
aam
nop
imul
ret
pop
add
mov
mov
sbb
sub
mov
add
pop
mov
pop
cs
loopne
adc
loope
subb
pop
and
jge
jae
cld
push
loopne
lds
outsb
sbbb
test
ss
fisttps
xor
or
push
popa
icebp
adc
pusha
push
mov
xchg
addb
ficoms
test
push
adc
push
js
push
jle
test
and
inc
jno
add
push
adc
pop
call
push
add
scas
cwtl
shr
jo
mov
add
addr16
je
aad
cwtl
ret
or
and
sbb
adc
je
dec
xor
or
and
xor
sbb
mov
std
or
cmpsb
lcall
sbb
je
dec
ljmp
mov
dec
aad
or
inc
lods
mov
cmpsl
mov
add
dec
sarb
xchg
shlb
cltd
adc
je
dec
sahf
or
imul
test
add
shrb
ret
xlat
pop
pusha
and
sarl
gs
fcompl
sbb
das
stc
pop
xchg
or
xchg
clc
fiaddl
add
sub
je
cwtl
pusha
dec
xor
movsb
and
jae
or
cwtl
imul
ficomps
push
int
in
sub
or
into
call
pop
mov
movsb
lock
jl
sbb
movsl
cmpsb
jo
test
dec
dec
inc
adc
out
rcrb
mov
rolb
or
aad
jne
sbb
or
xor
hlt
pusha
push
or
xchg
xor
movsb
icebp
pop
jecxz
sbb
rolb
cmp
lods
push
mov
xor
inc
add
add
mov
movntps
dec
sarb
sti
pusha
hlt
mov
jge
adc
jp
pop
addr16
jg
in
mov
mov
inc
shr
and
fistl
pusha
out
cmp
mov
push
mov
in
push
mov
add
cmp
lods
push
test
cmp
repnz
jmp
clc
pusha
repnz
pop
add
cmp
hlt
ljmp
dec
test
mov
je
xchg
rorl
mov
test
bound
pop
and
add
jge
jae
xchg
pop
sbb
add
rclb
add
fcoms
sbb
stos
andb
add
repz
cmp
pop
pop
imulb
sbb
inc
sbb
jg
cli
jbe
pop
push
jo
cmp
stos
cmpb
xorb
popf
push
enter
popa
cmp
orl
test
cmp
mov
repz
faddl
or
cmp
iret
adc
decb
in
popa
mov
movsb
loop
xor
adc
pop
jmp
aas
jae
xchg
sbb
mov
jmp
cli
mov
je
push
add
xlat
ret
add
or
fstl
sbb
jns
mov
add
push
mov
sbb
or
sub
xchg
daa
inc
pop
or
in
mov
rcll
loop
mov
loopne
push
ret
inc
call
andl
in
cmp
push
shr
or
test
push
pop
mov
inc
xchg
xor
ret
es
shl
cmp
push
call
mov
iret
mov
mov
cmp
sbb
lods
cmc
dec
mov
in
es
sbb
push
sub
inc
ljmp
sub
call
add
push
sahf
add
add
pop
jle
inc
ljmp
xchg
stos
filds
in
mov
movsb
out
mov
les
popa
je
clc
bound
rep
cmpb
inc
adc
mov
pushf
push
jo
add
call
mov
dec
mov
outsl
mov
mov
call
dec
mov
cmp
sti
loopne
shll
aas
in
mov
test
into
rol
and
xor
hlt
push
pop
and
movsl
dec
movsb
inc
or
dec
sbb
sbb
test
sbb
popa
test
das
loope
fidivrl
movsl
imulb
sub
clc
add
hlt
mov
or
dec
xor
add
push
push
nop
movsb
push
loop
dec
cld
clc
and
es
push
xchg
imul
clc
adc
dec
movsb
lods
pop
adc
jns
ss
jae
adc
fdiv
and
lahf
popa
dec
clc
sub
pop
scas
add
syscall
aam
cmp
aam
inc
dec
sbb
fdivrl
repnz
xchg
xorb
add
cld
or
dec
inc
inc
cmp
mov
das
xor
push
xchg
lock
jae
jno
sbb
xchg
icebp
in
or
outsb
mov
enter
mov
and
and
cld
test
jmp
je
cltd
iret
enter
cmp
pop
adc
test
jmp
insl
call
mov
or
rolb
add
push
jo
add
dec
lea
js
push
adc
ret
insb
and
test
xor
and
pop
mov
jb
xchg
shr
cwtl
cs
push
loopne
repz
mov
ja
fmuls
popf
inc
and
mov
inc
mov
or
cmp
cmc
rolb
dec
shl
or
add
leave
xorb
add
repz
and
and
add
fwait
cmp
lods
test
mov
push
int
xor
push
fmuls
xchg
outsl
xor
mov
cmpsb
out
push
and
and
lea
es
add
push
icebp
lods
push
daa
lahf
fsub
or
add
pop
out
loopne
add
add
cltd
lods
inc
cmp
test
jno
mov
iret
cmp
fwait
nop
clc
enter
je
idivb
test
fbld
leave
jg
int3
pushl
adc
mov
adc
add
cld
adc
sarl
dec
test
push
xchg
inc
add
scas
xlat
jp
push
mov
pop
push
dec
movsb
sub
push
inc
fdivrs
adc
sub
loope
push
scas
dec
les
cmpsl
sti
hlt
or
push
adc
lahf
adc
inc
cmp
ss
fnstenv
repz
es
loopne
push
fnstsw
adc
push
sub
pop
xor
flds
push
dec
sti
mov
sbbb
xor
pop
rolb
push
xor
or
mov
mov
fsubr
je
aad
adc
aad
jge
loopne
fiadds
ljmp
and
add
inc
popf
mov
daa
adc
test
inc
inc
mov
mov
sbb
jns
cwtl
fcompl
repz
inc
bound
push
les
mov
dec
mov
or
mov
in
push
mov
add
add
dec
mov
out
push
push
mov
mov
mov
mov
cwtl
dec
faddl
sub
pop
mov
imul
mov
cld
push
ja
jl
push
mov
stc
testb
test
xor
inc
cwtl
xchg
call
xor
xchg
outsb
dec
xor
add
mov
or
or
add
fucomp
mov
jge
imul
les
inc
int3
xlat
jl
cmp
adc
lods
pop
pop
dec
push
sub
cwtl
imul
orl
add
jae
lock
mov
jmp
jl
and
cld
movsl
mov
pop
repz
pop
pop
in
dec
mov
les
mov
je
sarl
fdivrs
add
imul
sti
push
shll
shrb
test
test
ret
out
rclb
loopne
pop
push
mov
iret
push
hlt
mov
and
inc
test
or
call
sub
cmpl
add
lea
xor
push
jb
push
insl
repnz
sbb
lods
or
sbb
jns
test
mov
xchg
pop
jns
dec
out
and
in
adc
cld
sbb
or
sbb
test
jno
dec
adc
or
pop
lock
lock
pop
int3
add
mov
cwtl
xor
cwtl
movsb
rcrb
out
pop
mov
cmp
cwtl
mov
andl
adc
mov
sbbl
cwtl
pop
out
dec
inc
pop
add
xchg
pop
loopne
push
xor
shrl
mov
or
sbb
push
mov
sbb
push
js
mov
aam
cmpsl
sbb
cld
daa
jle
pushf
sub
xchg
leave
in
and
out
jg
je
pop
mov
je
das
stc
call
pop
pushf
pop
push
std
add
not
cmp
addb
or
icebp
rorb
dec
mov
popa
addl
ljmp
aam
mov
or
lods
add
dec
fs
xor
pop
jg
in
xor
sarl
call
mov
cmp
push
pop
loopne
inc
lcall
andl
cmp
add
je
mov
xlat
push
jns
sbb
fcomps
in
inc
movsb
seta
jo
jns
jle
inc
push
cld
adc
imul
jns
jbe
or
shll
dec
into
loope
push
dec
pop
inc
pop
push
pusha
insl
xor
mov
adc
fsubs
mov
fisubs
inc
push
or
or
push
add
js
mov
sbb
hlt
push
and
inc
daa
or
push
mov
pop
cmp
adc
repz
loopne
testl
in
call
mov
fldl
pop
xlat
mov
pop
xchg
xor
mov
jno
aaa
pop
jge
lds
into
les
or
mov
test
pop
cld
or
repz
dec
rclb
pop
pop
mov
mov
inc
popa
sub
mov
mov
push
adc
or
mov
lods
or
je
pop
fistpll
xor
sbb
add
popf
testb
in
adc
je
frstor
add
scas
mov
mov
fisubs
imul
insb
inc
shr
and
sub
enter
push
outsl
js
adc
mov
nop
jl
orb
inc
int3
mov
movsb
in
dec
dec
push
mov
into
sbb
andl
enter
mov
in
mov
insb
adc
fs
adc
out
jp
add
jmp
mov
lods
loopne
mov
not
lods
shlb
mov
add
jbe
hlt
jo
jge
and
adc
jne
call
add
add
stos
sub
mov
popf
psraw
in
cmp
adc
cli
int3
push
mov
enter
inc
nop
cld
adc
cmp
filds
rcll
jecxz
outsb
int3
xor
mov
andl
xor
mov
jmp
jge
or
pop
scas
insb
imul
lods
psllw
xor
mov
or
test
shll
nop
lcall
call
stc
js
pop
jp
and
jnp
cmp
lds
lock
inc
sub
fsubl
xor
mov
or
mov
or
sti
data16
mov
ficoms
enter
jbe
xor
add
push
sar
insb
xor
push
ja
in
aam
mov
inc
cmp
in
shr
daa
lods
icebp
mov
mov
sbbb
cwtl
movsb
or
cmpb
push
lahf
mov
and
mov
ljmp
jmp
mov
add
test
and
popf
jne
hlt
xor
pop
mov
lds
test
and
jmp
sub
push
or
add
add
shr
test
pop
mov
jbe
in
shrb
dec
mov
dec
loopne
jmp
adc
jle
mov
mov
ja
and
sbb
orb
call
movsb
xchg
fwait
ja
je
or
cmp
push
mov
pop
jmp
inc
mov
mov
push
mov
rclb
call
add
fidivs
hlt
sub
mov
lcall
mov
popf
push
adcb
jns
mov
push
cmp
pusha
mov
mov
adc
rolb
fidivrs
jns
or
push
xchg
fsubrs
fnstsw
and
cmp
xchg
in
inc
and
sub
divl
mull
cwtl
adc
in
or
pop
adc
add
ret
fsubrp
imul
xor
int3
push
int
adcb
fwait
xor
dec
repz
inc
jae
adc
jle
loopne
sub
mov
es
in
sbb
mov
jno
popa
movsb
roll
sbb
push
sbb
clc
pop
adc
pop
das
hlt
push
jne
test
loopne
mov
and
and
sub
add
xchg
cld
movsb
adc
clc
inc
dec
xor
mov
add
clc
jp
add
mov
push
push
fists
push
jle
jl
xchg
dec
inc
inc
and
clc
add
insb
add
push
movsl
xorl
pop
push
sub
push
test
cs
push
orb
in
jno
lods
hlt
and
add
in
xchg
jp
xchg
daa
jle
clc
jnp
cld
pop
mov
adc
scas
inc
inc
add
sub
mov
std
cmpsl
icebp
push
xchg
insb
in
add
jno
int3
aam
mov
add
pop
jbe
jnp
add
sti
mov
push
mov
clc
gs
lds
aam
mov
in
inc
sub
lods
mov
jae
mov
jecxz
outsb
iret
ret
stc
or
add
jge
xor
pop
cld
push
shlb
jno
call
inc
lock
nop
dec
mov
mov
in
sbb
mov
adc
adc
add
or
test
inc
push
sub
enter
fsubrp
leave
mov
testl
int3
pop
mov
and
push
mov
hlt
sbb
lds
mov
dec
adc
mov
incl
es
dec
cmp
pushf
pop
movsl
inc
push
inc
and
cmp
and
inc
inc
sbb
fldl
xor
aaa
mov
rorb
xor
xchg
cwtl
imul
cmp
inc
cmp
mov
inc
add
lock
test
xchg
sbb
cmp
daa
push
mov
lods
and
mov
mov
test
sub
andb
mov
lods
xor
or
fwait
jbe
pop
insb
orb
push
push
sub
pop
call
add
sbb
adc
mov
cmp
sub
sbbb
pop
cmc
cmpl
mov
enter
rorl
out
inc
push
mov
jge
inc
sbb
pop
jg
cmp
loop
jne
mov
adc
fldt
test
jbe
jo
and
cld
orl
cmp
sbb
push
mov
and
xor
imul
push
movsb
pop
push
in
fcompl
sbb
adc
fstpl
sahf
mov
aam
sbb
xchg
jns
inc
mov
leave
and
nop
mov
test
fcomps
mov
xchg
push
call
mov
repnz
jo
lahf
leave
nop
aam
test
add
fwait
sysenter
xchg
popa
aam
xorb
dec
pop
push
popa
jmp
hlt
add
xor
in
rclb
lods
sbb
dec
repz
cmp
sub
call
stos
lahf
push
loopne
adc
mov
xchg
cmp
fisttpll
xchg
rolb
testl
adc
ret
jno
and
mov
lock
adc
mov
daa
jge
push
and
inc
hlt
mov
ror
jbe
adc
negl
and
and
loopne
inc
mov
sub
js
add
dec
mov
pop
xor
or
xorb
rorl
pop
or
shlb
sub
les
add
ljmp
pusha
pop
pusha
dec
mov
jns
push
xor
or
mov
adcl
popf
xor
sub
jno
pusha
das
sub
mov
inc
mov
add
mov
add
nop
pop
sub
pop
loopne
mov
or
mov
mov
shlb
mov
test
cld
jns
test
xor
shlb
and
sbb
out
outsb
inc
fs
dec
add
andl
movb
popf
inc
in
xchg
and
or
in
xchg
add
je
push
add
stc
jae
repnz
add
mov
push
lock
xchg
jb
adc
test
in
pusha
add
xlat
je
fbstp
aam
and
inc
pop
push
out
shlb
es
rolb
mov
daa
je
clc
jae
call
mov
pusha
mov
stos
mov
jno
pop
pop
and
xchg
faddl
push
test
cmp
pop
nop
pop
add
sbb
or
cmp
sbb
inc
mov
into
fisttps
inc
pusha
adc
sbb
in
sub
adc
mov
cmp
clc
fsubl
adc
enter
sub
call
rol
movsb
jo
shll
mov
out
shrb
or
mov
je
and
pop
sub
cmp
loope
adc
cmpsb
mov
and
inc
add
nop
in
and
push
xchg
jb,pn
or
dec
or
dec
rolb
imul
cmp
insb
add
test
daa
mov
adc
push
push
loopne
inc
dec
testl
bound
les
mov
clc
mov
or
call
pop
sub
movsl
fmul
jo
xchg
enter
push
jbe
xchg
in
test
inc
add
je
test
jmp
dec
movl
inc
in
sub
rorb
inc
test
cs
adc
xor
inc
sbb
pusha
enter
filds
cmp
pop
mov
push
xor
dec
or
fists
sbb
lods
sbb
xor
icebp
inc
inc
test
test
fildll
add
jns
inc
dec
dec
in
or
inc
fiadds
cmp
adc
nop
sub
mov
push
pusha
pop
sub
rcrb
xlat
mov
cmp
add
xchg
push
hlt
test
cwtl
fs
aas
inc
cmp
jne
test
or
xchg
push
sub
loopne
jae
and
leave
jne
pop
pop
xor
dec
das
or
test
mov
inc
fisubs
fs
or
ret
les
mov
ljmp
shr
lock
cwtl
cmp
xchg
mov
and
pop
add
sar
js
arpl
aam
xor
add
imul
xchg
push
fsubrl
cld
xor
test
stos
adc
fmull
mov
push
test
daa
or
and
out
xlat
nop
enter
and
call
and
lods
in
sub
jns
fdivl
dec
pop
ret
loope
xchg
pusha
or
hlt
addb
push
sub
shll
lahf
js
mov
outsb
out
mov
rorb
mov
daa
mov
mov
add
jg
pop
mov
add
cmp
sarb
xor
add
push
xchg
and
dec
pop
cmp
xlat
out
sub
inc
test
inc
loopne
xorb
dec
js
jae
or
shll
add
call
cs
sysret
subl
push
mov
jnp
and
out
and
push
sahf
mov
cld
push
fnstsw
inc
add
push
mulb
dec
cwtl
aas
push
insb
out
xchg
add
enter
je
sub
ret
mov
jp
push
out
pop
jne
cld
mov
xchg
daa
push
xor
in
mov
mov
push
ret
sti
call
imul
dec
add
add
or
mov
or
cmp
sub
cmp
sbb
icebp
imul
xchg
in
push
out
inc
dec
dec
je
add
stos
or
add
es
push
lahf
lret
or
or
add
or
pop
loopne
cmp
jl
ret
mov
pop
adc
xor
jo
sub
adc
lods
pop
test
addl
sub
popf
pop
in
dec
jno
les
or
or
addb
pusha
movsl
mov
fcoml
test
sub
sub
add
and
movsb
arpl
test
xor
and
out
mov
icebp
and
ret
les
jo
mov
cmp
std
out
and
sub
adc
cmp
sbb
in
jnp
push
or
or
push
cli
cmp
js
push
and
pop
call
sbb
cmp
mov
les
clc
or
jae
push
or
adc
imul
pop
pop
pop
lock
push
cmpsl
in
inc
xchg
mov
cmp
je
pop
sub
sub
clc
push
dec
pop
jne
add
enter
rolb
imulb
test
mov
push
shrb
clc
xchg
cmp
pop
or
sub
je
cmp
pop
in
in
sbb
sub
mov
imul
je
ds
xlat
jg
dec
aam
orl
loopne
sub
push
xor
pop
orl
dec
test
cwtl
mov
cmp
and
fmul
adc
xor
mov
ja
repnz
mov
xchg
cli
bound
push
jmp
jmp
sub
in
mov
test
enter
int
or
add
int3
push
xchg
dec
lcall
sub
dec
or
fnstsw
xor
jno
out
das
pop
jbe
pop
push
data16
xor
jae
xchg
pusha
jge
cmp
mov
call
pop
xchg
mov
dec
mov
pop
mov
test
xchg
js
insb
out
gs
aad
test
loopne
adc
dec
adc
out
xchg
movsb
xor
cwtl
add
mov
adc
test
add
pop
sahf
into
leave
and
loopne
imul
in
addb
ja
add
sbb
and
sbbb
adc
push
adc
mov
mov
movsb
ljmp
test
push
daa
mov
loope
push
in
mov
imul
sti
shr
dec
daa
movsl
sbb
mov
fisttps
lock
add
push
and
add
or
and
ret
pop
jns
mov
lock
adc
push
andl
add
xchg
stos
mov
mulb
std
sub
or
add
filds
out
fnstenv
repnz
dec
stos
sbb
repnz
jmp
inc
mov
fs
mov
jo
enter
popf
ljmp
mov
mov
sar
add
daa
lock
jo
orl
ljmp
shl
adc
pop
rcll
and
sub
add
lock
loopne
and
mov
and
push
testl
repz
adc
mov
add
mov
jecxz
call
fimuls
lods
xchg
repnz
lods
movsb
sbb
xchg
and
add
or
test
mov
mov
rcll
clc
jbe
in
add
xlat
jmp
sbb
cmp
lock
das
ljmp
and
or
inc
andl
pop
hlt
xor
daa
test
sbbl
icebp
pusha
jl
add
jbe
leave
jbe
add
xor
xor
pop
mov
push
or
lret
mov
hlt
je
xchg
dec
push
test
pop
cmp
rorl
fs
inc
dec
hlt
jne
movsb
inc
cmp
imul
imul
mov
scas
movsb
sub
pop
add
idivb
rclb
stc
push
movsb
mov
pop
sahf
hlt
xchg
xchg
cmp
test
pushf
xor
push
dec
inc
call
nop
in
mov
adc
jge
add
push
jmp
sarl
mov
cld
xlat
test
mov
repnz
xchg
clc
adc
stos
and
data16
in
loopne
pop
and
sbb
repz
cwtl
daa
inc
sbb
jae
sub
nop
in
push
das
mov
fwait
add
shrl
cwtl
je
adc
mov
int3
add
sbb
mov
xchg
popf
jns
inc
or
mov
lret
push
mov
test
dec
jns
add
push
mov
out
rorb
mov
subb
addl
inc
daa
into
mov
mov
stc
incl
daa
add
sbb
pop
sbb
movsl
rclb
shlb
and
mov
dec
adc
fdivp
push
xchg
sbb
and
pop
lods
jo
js
push
push
rcll
mov
pop
jle
and
fst
xor
iret
pop
add
jl
add
push
add
adc
outsl
cmovo
arpl
cs
adc
iret
add
pushf
adc
pop
sub
cmp
int3
dec
lahf
push
dec
sahf
inc
add
andb
jg
test
lcall
jbe
sbb
add
ficomps
ret
nop
iret
pop
cwtl
xor
push
hlt
mov
shlb
lahf
in
mov
push
imul
add
mov
add
cmp
daa
imul
push
ret
cwtl
daa
jle
add
add
ret
add
fmull
sti
xchg
cmp
sub
jns
movsl
rol
adc
sub
adc
scas
jae
sub
pop
jno
sub
fcoml
imul
push
mov
mov
and
cld
add
mov
xchg
adc
add
inc
sub
adc
inc
rcrl
adc
xlat
test
sub
jb
sub
or
aad
cmp
sub
adc
lock
aaa
push
add
popa
xor
adc
test
push
adc
pushf
dec
cld
xchg
cmp
pop
rorb
jb
inc
sbb
pusha
les
out
decb
sarb
inc
es
cld
rorl
test
adc
adcl
pop
sbb
add
daa
mov
lahf
dec
dec
in
test
xor
lock
movsb
loope
mov
sub
jo
enter
jne
js
and
add
mov
dec
nop
imulb
lock
lea
cmp
pop
add
mulb
hlt
call
cld
lock
or
pusha
jo
push
add
jmp
insb
push
pop
sbb
push
fsub
push
sub
add
ret
ja
cmp
sub
scas
test
cmc
int3
inc
push
loope
aad
in
dec
js
fadds
pop
add
dec
dec
es
push
je
pop
in
in
or
sub
jo
pop
push
mov
repnz
roll
pop
push
and
sarb
cwtl
cwtl
mov
add
cmp
imul
or
sbb
test
sub
or
mov
cld
test
mov
sahf
inc
adc
dec
in
adc
aam
or
daa
xlat
sete
imul
or
in
pop
sbb
mov
call
xor
cmpb
xchg
enter
sbb
xor
jl
or
mov
nop
pop
in
pusha
pop
loope
cli
sbb
inc
push
lods
cmp
pop
nop
or
rol
or
nop
int3
fidivl
xor
ret
push
clc
cmp
mov
pop
in
sbb
enter
mov
fmuls
je
sarb
jns
adc
fdivrl
add
or
stc
js
incb
add
pop
shll
imul
stos
movsb
sub
ret
add
push
jo
iret
daa
cmp
clc
test
clc
je
xchg
add
mov
call
in
pop
dec
xor
test
add
jmp
out
mov
cmp
add
inc
fimuls
scas
aam
bound
add
dec
jno
push
xor
ds
push
adc
push
in
in
push
push
dec
mov
or
in
mov
filds
sub
rolb
shl
int3
inc
mov
shlb
test
ss
lods
clc
pop
sti
xchg
and
pop
cmc
push
inc
hlt
insb
and
mov
popa
xchg
mov
data16
or
sbb
jmp
pusha
das
leave
dec
pop
pop
adc
rcrb
cmp
inc
add
mov
xchg
dec
or
mov
nop
mov
cmp
cmp
insb
mov
cld
lahf
dec
add
leave
lods
mov
mov
jne
xor
adc
or
fcoms
sub
dec
shlb
push
in
mov
out
cmpsl
pop
pop
pushf
popf
ficoms
ret
call
clc
pop
frndint
loopne
mov
lods
and
mov
xor
add
push
sub
xchg
push
test
xchg
mov
mov
pop
or
cwtl
push
rcl
adc
push
sahf
xchg
add
pop
xchg
lds
push
add
push
in
adc
dec
mov
mov
sti
rorl
add
sub
dec
mov
loope
dec
cld
and
loope
xor
push
push
lods
inc
leave
dec
in
pushf
int
test
xor
cmp
or
jb
mov
add
call
pop
cwtl
cmp
mov
mov
xor
enter
adc
enter
sbb
in
mov
adc
icebp
xchg
and
cmp
lods
movsl
cmp
or
in
pop
testl
in
add
and
lock
fnstenv
mov
sbb
push
insl
push
lretw
xor
test
cmpsl
pop
dec
mov
dec
mov
lock
fdivrl
das
or
adc
nop
inc
cwtl
test
notb
outsl
jmp
icebp
fs
cwtl
pop
mov
fdivs
shr
cmp
je
add
leave
ficoms
mov
lea
add
add
fldt
or
mov
mov
iret
ror
dec
ret
pusha
scas
cld
push
rorl
movsl
and
add
jle
fcomps
or
js
movsb
xor
outsl
pop
dec
xor
ret
mov
cld
test
pop
js
dec
rcl
push
xorl
sub
mov
les
scas
test
xor
out
aas
mov
xchg
jae
mov
in
push
popf
clc
je
test
fcoml
mov
xchg
xor
pushf
jmp
or
push
or
jmp
jmp
jne
push
xchg
xorl
popf
fadds
xlat
sarb
and
sbb
adc
fstps
add
sahf
ljmp
lahf
push
jmp
nop
sub
jae
cmpsb
mov
cmp
adc
nop
xchg
rolb
adc
flds
je
shrl
jo
pop
div
cmp
push
mov
inc
mov
inc
add
xor
push
lret
pop
push
cmp
test
inc
jno
jle
dec
pop
fcompl
mov
xchg
push
and
xor
mov
mov
test
dec
or
mov
nop
cmp
or
mov
sub
add
jl
dec
mov
imul
negb
add
xchg
add
enter
insb
in
or
inc
call
ljmp
sub
push
jmp
and
mov
or
inc
pushf
mov
sub
cld
out
rolb
mov
jns
mov
test
mov
xor
ret
mov
and
mov
jmp
adc
jo
pushf
sbb
add
add
cmp
pop
sub
lahf
jl
setnp
push
int3
push
adc
mov
or
cld
dec
pusha
push
and
pop
scas
sub
pop
adc
sbb
repz
je
subb
adc
sub
or
pop
or
mov
push
cs
dec
dec
cmp
dec
mulb
push
cmp
dec
xchg
ljmp
ljmp
push
push
sbb
xor
dec
cltd
out
test
and
or
mov
xchg
cwtl
dec
push
mov
adc
push
subl
pop
movsb
jge
inc
lock
sbb
leave
cmp
and
lods
loopne
add
xchg
shr
gs
dec
pop
in
adc
aaa
sbb
and
cmp
jge
clc
lret
pusha
mulb
adc
js
mov
call
mov
pop
popf
fdiv
mov
les
add
mov
pop
inc
jb
lock
pop
cwtl
test
xorl
cwtl
inc
hlt
adc
push
or
sbb
cli
add
insl
lcall
add
pop
enter
push
inc
sub
insb
dec
mov
or
loopne
adc
les
divl
cld
hlt
jmp
andb
sbb
xor
insb
inc
lock
or
imul
adc
or
adc
std
in
xchg
xchg
cli
ror
gs
ds
cmp
pop
and
mov
rorb
aas
clc
sbb
and
jo
and
loopne
add
xor
dec
push
mov
xchg
lock
test
call
cwtl
movsl
and
mov
add
aad
and
sbb
xchg
adc
sub
adc
je
cmp
cmpsl
jg
and
movsb
roll
add
xor
sahf
sahf
lcall
clc
adc
xor
cwtl
and
inc
push
pushf
or
jo
clc
icebp
or
inc
adc
mov
test
mov
shlb
or
mov
ret
sub
lods
add
mov
or
in
cwtl
movsb
adc
sbb
test
cwtl
adc
lahf
sahf
push
inc
sub
lods
xchg
dec
sar
adc
pushf
xor
or
and
loop
mov
push
cs
nop
pop
mov
and
shl
xor
clc
sub
mov
mov
dec
xor
jo
in
addr16
cmp
fnsave
pop
mov
add
push
stos
addl
add
and
and
imul
scas
mov
and
les
test
or
xlat
mov
xor
cmp
add
cmp
pop
adc
stos
int3
inc
xlat
dec
ret
movhps
sbb
das
xor
js
sub
xchg
mov
mov
dec
pop
loop
pop
lock
xchg
icebp
and
hlt
jae
adc
mov
imul
inc
sbb
insb
daa
pop
imul
mov
lahf
pusha
jle
push
cwtl
je
and
or
aaa
inc
out
or
loope
subb
sar
push
mov
les
mov
dec
int3
mov
dec
or
mov
stos
mov
mov
popf
jno
mov
push
sbb
stc
test
idiv
ds
mov
mov
sub
pusha
and
jp
popa
es
daa
push
mov
jb
push
pop
or
mov
jb
or
ret
sbb
jl
lcall
sub
or
out
in
call
adc
mov
rcrb
stos
sarl
mov
pushw
xchg
test
fwait
or
push
push
push
enter
dec
adc
or
shrb
xchg
loope
out
push
hlt
pop
inc
lods
jl
mov
mov
and
fsubl
add
jmp
mov
adc
jp
jo
dec
mov
enter
out
jb
test
std
mov
pop
dec
xchg
mov
dec
jl
add
fidivrl
jb
and
test
scas
adc
add
mov
dec
adc
xchg
mov
add
pushf
cmp
pop
stos
mov
or
push
sbb
add
jmp
cwtl
nop
mov
cld
sub
imul
ret
mov
xchg
mov
xchg
adc
pusha
test
lock
pop
fisttpl
lods
mov
popf
lcall
loopne
xor
pop
pop
lahf
test
jne
test
push
and
add
mov
push
sub
imul
sbb
test
in
fadds
or
mov
mov
mov
dec
in
stos
loope
jg
test
sub
and
add
jecxz
inc
jl
hlt
cmp
outsb
aad
or
frstor
adc
mov
loop
inc
cmp
push
lods
je
call
jecxz
dec
in
int3
das
adc
sbb
cmpl
sub
je
ss
aas
mov
fwait
shlb
pop
xor
cmc
loope
push
and
js
push
add
test
push
out
xchg
or
addb
lods
and
inc
movsl
jno
cltd
cld
test
js
out
push
dec
les
inc
adc
in
add
pop
stos
pop
adc
cmp
cmp
jl
clc
test
fwait
pop
inc
clc
add
shll
cmp
mov
jge
repz
loopne
loopne
xlat
movb
and
pop
push
mov
mov
inc
or
mov
andl
and
adc
dec
pop
push
fs
mov
mov
and
inc
iret
cmp
add
fdiv
inc
mov
fisubrl
sub
sub
inc
mov
addb
jns
popf
add
dec
jne
sbb
pusha
rclb
ja
add
xor
cmp
rorl
jmp
add
repz
mov
ror
inc
mulb
cmp
cld
xchg
inc
pop
or
mov
es
sub
adc
push
dec
sbb
dec
or
and
xchg
jnp
inc
push
xorb
mov
add
cmp
jl
cs
xchg
test
stos
aam
mov
or
rclb
enter
outsl
movsb
shr
icebp
push
andl
enter
mov
adc
or
call
mov
or
dec
xchg
mov
cmp
shlb
xor
and
or
aad
nop
add
xor
ret
and
mov
clc
add
pop
jge
aas
push
push
stos
rorl
rclb
insb
jno
sub
pushf
adc
jmp
fsubrs
cld
clc
push
inc
xchg
mov
test
dec
mov
xor
dec
in
pop
xchg
push
sahf
fsubr
cli
arpl
std
mov
ror
clc
aas
add
sahf
mov
int3
adcl
add
add
add
ret
das
mov
fcompl
fs
push
call
mov
add
ljmp
and
test
fdiv
out
xor
stos
add
adc
in
add
mov
xchg
pop
sbb
sahf
jne
push
mov
test
enter
mov
xlat
subb
pusha
fs
push
dec
lods
inc
pop
push
in
sbb
inc
add
add
jne
mov
add
jecxz
inc
test
js
outsb
cmc
fadds
xchg
clc
or
pop
sbb
out
mov
loopne
add
mov
in
inc
sub
pop
test
push
sub
fdivrl
adc
test
test
cmp
jo
adc
test
lock
icebp
adc
clc
xchg
push
test
cmp
dec
add
pop
inc
fwait
sub
pop
scas
and
cli
xchg
insb
push
adc
int3
push
adc
jg
test
or
jnp
adc
repnz
xchg
mov
jbe
addb
lods
mov
dec
pushf
mov
cwtl
dec
adc
mov
loope
sub
jne
or
xor
fwait
stos
and
pop
or
adc
xor
dec
push
push
push
nop
xchg
test
and
xor
hlt
or
popf
push
out
add
mov
pusha
jmp
and
mov
aam
dec
sti
clc
jo
testb
mov
rolb
push
dec
push
cmp
mov
mov
inc
pop
pushf
mov
mov
cmp
jne
sbb
push
int
and
mov
inc
and
inc
aam
out
inc
cmp
dec
cmp
inc
and
cmp
je
and
cmp
iret
inc
cmp
in
adc
dec
sbb
mov
mov
xor
push
and
ljmp
pop
je
call
push
sbb
fs
xchg
lea
dec
pop
fmull
jmp
mov
or
popa
inc
pop
ror
xor
push
add
popa
fisttpll
loopne
add
and
add
jno
ljmp
add
xchg
pop
mov
jns
adc
or
mov
push
cmp
test
icebp
in
mov
mov
sub
and
add
xchg
bound
lods
lret
sub
outsl
cli
mov
mov
lea
movsl
adc
or
cmpb
lock
adc
or
jmp
push
sub
jecxz
adc
fmull
pop
and
insb
cli
mov
or
mov
xor
or
mov
pusha
stc
cwtl
mov
push
test
pop
daa
mov
loop
add
xchg
xchg
jl
adc
in
popa
mov
cltd
mov
stos
adc
adc
jl
addb
push
rorb
push
int3
pushl
mov
and
fsub
daa
jbe
push
mov
call
fistpl
jecxz
sub
test
lahf
add
mov
xchg
inc
cli
call
test
clc
enter
push
insl
sbb
mov
test
adc
inc
cmp
fsubrl
fstpl
mov
or
sub
xchg
mov
sbb
mov
cmp
xchg
xchg
and
ret
adc
repz
fs
mov
push
mov
jne
scas
adc
push
sub
fwait
xor
fldenv
imul
sarl
stos
add
dec
lea
dec
push
fimuls
mov
adc
pop
mov
or
in
and
pusha
push
pop
inc
call
and
pop
pushf
test
out
xor
adc
lock
sub
mov
addl
push
cmp
fistpl
add
sbb
cwtl
sarb
dec
push
stc
movsb
or
in
pop
sbb
or
les
adc
rcr
sbb
xor
cltd
push
pop
sub
pop
divb
in
adc
mov
insb
lea
in
and
or
and
mov
dec
or
and
sti
hlt
arpl
and
and
mov
inc
jne
repz
cli
cld
push
xor
shrl
and
and
loopne
sub
push
cwtl
imul
and
pop
pop
pop
xor
lea
pop
push
jl
sbb
inc
mov
adc
scas
push
fdivr
xor
push
and
pop
pop
mov
cmpb
test
sahf
hlt
loopne
je
xchg
movsb
pop
addr16
pop
push
js
inc
adc
mov
scas
push
mov
xchg
les
repnz
sbb
xor
mov
in
imul
js
add
and
xchg
frstor
sbb
je
hlt
mov
pusha
in
push
imul
push
lock
sbb
mov
pop
stos
cmp
push
icebp
jo
sbbb
shlb
and
adcb
stos
sub
pop
jo
lock
bound
xchg
mov
jp
and
add
or
xor
mov
push
and
push
js
testb
xchg
inc
movsb
outsb
rcll
es
ja
addl
push
es
or
mov
sub
adc
or
push
sub
test
dec
mov
jge
and
add
jo
bts
je
out
addb
xchg
xchg
call
js
add
inc
jno
inc
adc
jecxz
push
pop
add
add
sahf
jo
push
call
cmp
mov
orl
rorl
call
sbb
jmp
mov
clc
mov
push
push
or
jne
pop
or
add
pop
aad
cltd
pop
xchg
fsubs
outsb
cmp
sbb
add
mov
inc
daa
flds
adc
push
add
add
cmp
pusha
sub
jl
add
inc
movsb
insb
lock
cmp
ror
dec
inc
stos
jecxz
and
pop
and
sbb
pusha
sbb
cmp
pop
inc
xchg
inc
add
or
jbe
hlt
adc
mov
jb
lock
mov
daa
jo
adcl
pop
adc
cmp
es
mov
pop
data16
mov
ljmp
or
xchg
sub
popa
lret
fwait
inc
filds
jecxz
inc
loope
add
mov
pop
push
test
sub
insb
or
jnp
pop
inc
push
sbb
stos
pop
jge
xor
mov
push
cwtl
or
scas
sub
daa
jl
pop
out
jle
inc
test
adc
enter
test
test
mov
aad
adc
scas
add
or
dec
add
fbld
stos
je
sbb
pop
mov
add
or
std
enter
push
hlt
roll
repz
add
ljmp
xchg
jo
add
loopne
add
mov
pop
mov
adc
add
aam
add
adc
mov
inc
mov
inc
cltd
mov
cmp
push
xor
cli
sbb
loope
push
push
add
cld
mov
and
sub
outsl
test
push
add
jae
adc
clc
and
add
fcoms
mov
push
hlt
test
and
and
jmp
fwait
dec
cs
nop
ja
sarb
in
pop
push
add
out
sbb
inc
sub
cmp
js
or
js
mov
xor
data16
fsubs
add
mov
popf
dec
call
int3
xor
lret
sbb
pop
and
je
xorb
adcl
push
mov
add
or
jecxz
or
inc
ja
ljmp
or
enter
sti
sub
adc
jae
pusha
je
sbb
nop
mov
faddl
sub
in
add
je
enter
and
cmpb
popf
jae
mov
add
mov
adc
out
push
test
and
inc
subb
test
pop
fwait
rcll
in
mov
js
pop
mov
cmp
clc
push
adc
rolb
scas
filds
pop
test
inc
jl
mov
add
mov
mov
lock
pop
test
fistl
pop
in
sbb
pop
push
push
fcoms
mov
std
mov
add
dec
or
jmp
push
push
jle
or
cmp
jl
push
jmp
pushf
movsl
js
arpl
sar
pop
stos
test
outsl
nop
aam
out
mov
push
jl
xchg
xchg
cmpb
mov
inc
mov
pop
xor
pop
pxor
add
and
lahf
scas
mov
pop
call
mov
loop
adc
push
and
xchg
jbe
adc
or
ret
jl
inc
frstor
sahf
call
and
nop
decb
or
ss
lods
pop
neg
mov
xor
les
rol
add
and
pop
je
pop
and
sbb
dec
pop
rolb
popa
ljmp
loopne
imul
adc
push
inc
ret
jb
mov
in
pop
in
pop
add
push
mov
dec
push
in
addl
mov
ljmp
dec
and
push
xor
xchg
cmp
cmp
stos
or
mov
inc
or
jmp
shlb
cmc
cmp
add
daa
lret
jge
sbb
insl
adc
dec
and
in
cmovg
clc
mov
adc
bextr
jmp
insl
fcomps
add
jns
jl
and
add
stos
fucom
mov
cld
adc
ljmp
add
clc
inc
cmp
push
sbbb
pop
pop
pop
popa
sub
cs
cld
mov
adc
je
outsl
xchg
repz
loopne
or
je
lea
pop
and
adcb
popa
fcoms
jae
and
push
mov
xor
cwtl
fnstenv
xlat
mov
push
jns
dec
fdivs
jp
jl
add
cwtl
jbe
push
mov
je
mov
add
mov
xchg
mov
rcrb
cwtl
xorb
ljmp
fsubr
jae
inc
daa
xchg
or
stc
add
imul
in
xor
inc
mov
divl
jg
or
ficoms
push
dec
push
addl
orl
clc
scas
mov
bound
call
iret
addb
mov
orb
jae
lock
cmp
jo
pop
sbb
push
jge
cmp
aam
stos
push
lock
sub
fiaddl
divb
mov
test
mov
adc
inc
dec
push
hlt
jb
or
inc
lock
rcll
loopne
clc
mov
mov
sub
mov
xchg
mov
repnz
push
jo
inc
jno
sub
sub
rcrb
pop
adc
or
je
mov
movsl
and
pop
test
or
lods
inc
test
xor
xchg
fs
lods
xorb
cld
in
mov
jecxz
cli
nop
adc
add
cld
pop
adc
mov
or
adc
inc
push
jp
add
adc
push
nop
mov
enter
mov
inc
inc
and
loopne
and
cmp
inc
mov
push
sub
lods
nop
lock
adc
scas
pop
bound
jae
test
fbstp
lea
in
out
push
jbe
adc
adc
insb
jp
fucomip
pop
call
mov
test
inc
jl
cmp
lock
imul
test
cli
jle
lret
push
outsl
push
add
sub
add
mov
and
es
jo
je,pt
jne
int3
sub
cmp
cmc
jmp
dec
fwait
mov
jae
popa
je
adc
stos
xchg
in
loopne
sahf
adc
lods
repz
int3
push
adc
mov
adc
inc
repz
addl
sbb
nop
test
pop
in
jmp
insl
fidivrl
and
or
les
scas
popf
fsts
or
jbe
sbb
sbb
lock
je
xchg
lods
pop
add
aas
stc
test
mov
aad
adc
fnsave
test
xor
push
icebp
hlt
mov
movsb
cmp
jno
das
pop
jl
pop
mov
lea
enter
fsubrs
cmp
mov
xorl
dec
test
sub
int3
xlat
sub
clc
movsb
mov
mov
stos
les
js
adc
mov
mov
js
jne
dec
xor
aas
andb
clc
inc
lock
outsb
movsl
andb
inc
or
jl
cmp
pushf
cs
shlb
add
adc
or
mov
fmul
and
push
int3
mov
add
add
add
jbe
lock
pop
mov
add
mov
sub
adc
push
ret
fcompl
iret
enter
xchg
cltd
nop
dec
dec
mov
add
pop
sub
fs
popa
call
add
or
mov
pop
ret
push
aam
test
in
imul
inc
inc
xchg
pop
dec
lret
insb
ds
cmp
pop
push
push
stos
inc
jo
push
call
push
clc
mov
mov
mov
and
cmp
aam
int
sub
inc
mov
pushf
addr16
xchg
sbb
out
xor
adc
das
insb
push
das
rcll
cmpsb
xchg
sbb
adc
pop
std
and
add
subb
jne
icebp
adc
movsb
mov
call
aam
jmp
loopne
lcall
pop
jns
aam
loopne
sbb
ja
mov
jl
inc
scas
push
idivb
mov
inc
or
jno
or
hlt
sbb
or
movsb
inc
sbb
dec
add
cmp
dec
push
or
es
sti
mov
and
jne
ffree
dec
inc
cs
enter
insb
sub
mov
xchg
test
push
pusha
sbb
inc
pusha
call
mov
addb
pop
das
shrb
fidivs
sahf
test
adc
cld
pusha
jg
jne
add
add
pusha
push
scas
pop
jo
fs
xrelease
add
push
rcrl
divl
adcl
push
pop
add
ret
inc
dec
jl
adc
stos
xor
enter
adc
inc
jl
addr16
dec
push
leave
sbb
pop
lea
pushf
fstl
mov
push
movsl
enter
cltd
xor
push
test
addb
nop
inc
dec
push
shlb
test
imul
mov
pushf
stc
cs
adc
inc
das
or
adc
sarb
sub
pop
or
mov
js
adc
push
adc
ds
lods
mov
lock
adcb
xor
daa
stc
push
xchg
fnstcw
or
nop
out
sub
in
sbbl
das
mov
dec
je
std
adc
aas
lock
dec
sub
fdivrs
dec
enter
out
inc
inc
pop
divb
mov
loopne
pop
mov
inc
or
lahf
jo
and
std
jbe
in
dec
add
xor
mov
push
pop
nop
stc
ss
in
jp
dec
cld
mov
sti
lahf
fisubrs
add
cwtl
lahf
cli
mov
or
es
fadds
pop
lods
test
pushf
popf
mov
rcl
mov
cmp
mov
mov
imul
enter
add
fidivs
cld
add
push
out
outsl
mov
rolb
fbld
pop
stos
mov
add
testb
lahf
je
pop
add
pop
pusha
add
stos
mov
dec
pop
cmp
push
add
dec
lea
dec
in
xchg
orb
push
in
imul
add
psubsb
jne
push
out
pushl
xor
mov
xor
xchg
ret
adc
fucom
stc
jo
loopne
fs
pop
adc
pop
and
nop
sbb
ljmp
sbb
call
inc
jg
cld
xor
mov
add
inc
daa
inc
in
icebp
mov
adc
or
call
sbb
nop
mov
pop
adc
push
jne
das
fdivp
enter
push
sbb
mov
dec
xor
or
hlt
loop
xlat
mov
mov
dec
or
and
pop
or
and
or
pusha
jne
sbb
add
ret
ror
push
call
and
pop
xor
jae
test
je
mov
lea
shl
testb
lds
or
sbbl
jp
rcrb
lea
and
pop
gs
bnd
mov
mov
mov
add
xor
mov
outsl
and
mov
pusha
inc
inc
test
ret
adc
movsb
lock
mov
popa
jns
out
mov
lock
adc
or
add
or
lock
push
adc
repnz
in
add
dec
ds
or
rorl
jmp
loopne
hlt
dec
fs
xor
and
cmc
jo
in
xchg
mov
mov
or
jo
sub
fdivr
outsl
add
mov
push
mov
daa
repz
cmp
pop
dec
loopne
call
cmp
rclb
push
shl
sub
jmp
cwtl
lods
add
mov
mov
pop
popa
adc
fisubs
dec
jge
lret
shll
sbb
jo
inc
clc
hlt
lock
or
daa
inc
add
push
call
push
cli
adc
cmp
jle
pop
push
lahf
imul
xchg
mov
sub
xor
imul
mov
imull
pop
hlt
xchg
xorl
in
pop
js
sub
daa
test
push
pop
sub
cmp
push
adc
inc
fcmovnb
mov
or
lods
mov
mov
pop
pop
rcll
pop
ja
test
add
insb
lea
repnz
adc
add
or
push
adc
insl
sbb
cmp
or
je
aam
insl
test
js
xor
in
mov
repz
jbe
ds
add
sti
cwtl
mov
or
inc
insl
popf
and
adc
push
notb
daa
fisubl
call
loop
xlat
add
rolb
and
pop
push
sub
or
out
or
call
out
lahf
repz
je
mov
outsb
add
loopne
dec
cli
add
and
cld
pop
xor
push
js
js
add
pop
js
insl
xchg
add
dec
adc
hlt
add
jnp
push
or
pusha
jno
adc
loop
mov
add
pusha
and
xor
jo
mov
adc
xor
nop
cwtl
pop
call
inc
out
mov
sbb
andl
sbb
mov
push
and
inc
add
mov
popa
les
ja
push
add
iret
movsb
jmp
xchg
inc
subl
sbb
movsb
and
lock
adc
out
std
mov
jne
adc
mov
xchg
shrl
dec
lods
hlt
add
push
mov
cwtl
sub
fcomps
cwtl
adc
cmpsl
cwtl
pop
test
js
loopne
les
add
lock
enter
in
adc
add
rcrl
mov
adc
js
sub
sbb
js
lds
dec
dec
add
pop
mov
sbb
or
mov
lea
lods
dec
nop
enter
jecxz
add
mov
insb
hlt
add
sti
call
ficoms
xor
xor
and
jbe
and
pusha
mov
out
pop
jge
sub
xchg
jae
sub
call
xor
aas
cmp
loopne
adc
sti
mov
pusha
add
mov
nop
addb
daa
and
add
fnstcw
mov
cld
lea
cmp
iret
push
or
and
cwtl
inc
je
add
sar
hlt
int3
xchg
mov
add
jbe
sub
test
or
call
mov
cmp
push
mov
xchg
je
inc
add
mov
xchg
loope
push
and
arpl
ljmp
pop
fs
popa
add
clc
pop
sarb
ljmp
test
adc
cmp
leave
mov
mov
add
ret
add
lcall
mov
sub
in
mov
or
out
aam
insb
inc
adc
dec
cmp
xor
lahf
xchg
push
jns
mov
dec
jmp
les
mov
push
push
mov
jbe
pop
leave
mov
int
cs
lods
dec
xor
cmc
sub
hlt
fs
jne
lock
movsb
addb
or
lods
test
aam
stos
hlt
sbb
dec
mov
repnz
mov
out
lcall
push
in
stos
sub
and
mov
jle
test
jne
arpl
fsub
rdpmc
add
sub
add
test
pushf
push
sub
adc
shl
cmp
add
cmp
cmp
ss
aas
lock
pusha
mov
repz
or
or
jno
daa
jmp
mov
pushf
fsubrl
in
mov
and
outsl
scas
repnz
pop
imul
scas
or
pop
mov
imul
and
dec
or
or
hlt
push
lret
pusha
shl
nop
mov
pop
adc
and
les
sbb
pop
mov
push
clc
cld
rolb
loop
sub
push
mov
test
inc
push
jg
pushf
jns
out
cmpsb
xchg
mov
repnz
jecxz
jo
adc
sbb
pop
push
cmp
xchg
imul
repz
jp
and
shll
sbb
mov
test
lods
xor
pop
cld
ret
pop
sub
icebp
loopne
outsb
loop
sub
nop
out
add
outsb
adc
pop
fs
movsb
xchg
je
push
stos
mov
cli
and
ljmp
call
repnz
enter
test
xchg
sbb
orb
dec
pop
out
pop
mov
mov
push
rol
call
fsts
pop
or
cmp
pop
pop
addb
icebp
lock
int3
cs
cmp
lock
and
jmp
in
mov
icebp
jae
sub
testl
mov
cmp
or
and
inc
add
mov
and
pcmpeqb
push
xor
lock
loopne
mov
mov
jns
add
scas
cwtl
pop
adc
test
jo
sbb
mov
repnz
jp
aam
inc
jne
xchg
push
push
cmp
and
cmp
adc
and
or
orb
dec
or
test
pop
push
lock
push
mov
add
lods
mov
or
fcomp
fldl
add
and
mov
jl
jne
out
inc
pop
jmp
push
notl
mov
fs
popa
adc
or
mov
aam
mov
lds
add
add
lock
lea
repz
imul
sub
loopne
ds
mov
lods
enter
adc
and
lret
push
or
in
xchg
jb
out
cwtl
push
rolb
xor
cld
test
and
jne
jb
int
add
pop
das
xor
in
mov
pop
or
mov
sub
outsb
test
fcoml
test
rcrl
pop
testb
sub
icebp
pop
aaa
scas
push
xor
or
dec
lods
adc
push
ds
stos
repnz
push
fmulp
pop
addr16
dec
mov
movsb
push
call
jb
add
push
mulb
shlb
adc
pushf
xor
or
push
inc
mov
imul
sub
xchg
add
data16
movsb
mov
js
ret
xchg
inc
test
mov
add
sub
loopne
rcll
fdivp
ret
inc
or
xchg
add
movb
fstl
add
and
fimull
xchg
addb
sub
lcall
mov
xchg
xor
jne
sub
xchg
sbb
jb
and
fcoml
jle
inc
clc
bnd
adc
pop
scas
jl
jo
shlb
pop
adc
adc
out
mov
hlt
inc
call
add
cwtl
inc
inc
mov
rcrb
sbb
cld
cmp
subb
dec
arpl
js
cmp
adc
stos
jo
hlt
arpl
pop
cmc
divb
jp
xor
test
in
das
push
mov
scas
add
mov
jge
std
shr
xchg
add
adc
enter
pop
jb
mov
push
adc
loopne
push
xlat
nop
mov
or
add
in
rol
test
or
outsb
mov
cmp
in
xchg
gs
int3
jge
sub
repnz
mov
and
push
mov
cs
imul
dec
xor
lods
fs
and
inc
dec
lds
and
hlt
or
movsb
push
movsl
test
lds
xorl
jmp
cmp
pop
in
adc
cwtl
lea
cmp
cmpl
adc
add
hlt
int3
add
test
hlt
in
sarl
daa
or
xchg
mov
aad
mov
xchg
lods
push
hlt
mov
sti
push
push
add
push
js
sub
mov
pop
cli
dec
cmp
sbbb
call
dec
in
cmp
mov
jne
xor
adc
inc
mov
or
aad
mov
arpl
popa
and
sub
mov
add
mov
xor
std
push
loopne
dec
jns
in
test
xchg
jb
call
imul
pop
mov
or
rclb
mov
sbbl
or
and
add
orl
ret
xchg
mov
lock
adc
push
lods
cmp
fstpl
in
push
in
mov
and
sub
adc
push
dec
xchg
cwtl
pop
push
pop
sbb
movsl
dec
pop
test
enter
lods
les
bound
adc
pop
xor
push
jno
xor
xchg
cs
and
pop
add
rcrl
xor
xor
repz
mov
xchg
lock
inc
insb
jno
icebp
out
stos
popa
xor
mov
mov
inc
adcl
clc
mov
popa
push
sbb
mov
es
clc
xor
or
fmull
pop
shlb
push
test
mov
ds
mov
hlt
and
jge
mov
inc
clc
daa
nop
or
loop
call
sub
mov
lret
je
fcmovbe
pop
add
and
xor
inc
call
ja
enter
mov
push
jl
or
push
add
inc
clc
repz
push
jecxz
sub
nop
or
cli
call
mov
stos
mov
dec
xor
mov
imul
pop
mov
xchg
mov
mov
jno
xchg
add
and
mov
add
xchg
enter
sbb
pcmpgtd
xor
jp
rolb
adc
fnstsw
addr16
loopne
and
dec
shlb
pop
imul
adc
jne
lods
xchg
movsb
daa
pop
cmpb
and
mov
sbb
adc
xchg
das
shl
push
pushf
push
pop
test
xchg
std
scas
mov
inc
cmp
adc
sub
cmp
add
lock
nop
jmp
dec
shrb
test
adc
leave
or
add
mov
sbb
fmulp
ljmp
mov
pop
jg
or
sbb
mov
test
adc
push
fwait
push
lock
filds
mov
nop
adc
cs
fs
or
mov
inc
shlb
mov
nop
adc
aas
adc
incb
sbb
inc
loope
test
ret
sub
pop
add
mov
add
push
sub
jl
in
cli
add
insb
adcb
push
cmc
or
rcr
or
daa
sub
jb
lcall
out
inc
sub
add
xor
sti
stos
inc
insb
ljmp
xchg
dec
adc
add
cwtl
cmpsb
inc
ljmp
push
das
std
in
scas
add
or
je
dec
hlt
sub
cmp
dec
jne
cmp
bound
bound
clc
adc
mov
clc
lea
adc
adc
repnz
aad
sub
test
mov
mov
add
or
or
out
das
out
push
hlt
mov
movsb
or
fdivp
ficoms
enter
fdivrs
pop
or
cmp
in
shlb
and
pop
mov
and
les
loopne
js
and
mov
enter
jnp
movsb
and
jo
push
xor
cmp
rorb
ret
jp
push
repnz
sti
push
adc
push
in
push
loope
clc
sub
into
call
gs
pop
test
orb
lcall
cwtl
call
xchg
jno
fs
cmp
test
push
test
add
xchg
add
in
dec
dec
js
sti
sbb
fstl
inc
outsb
adc
pop
stc
push
inc
cmp
mov
cmp
das
jg
lret
cltd
sbb
cmp
shr
inc
push
or
movsb
imul
loope
adc
sti
clc
sub
mov
rcll
mov
add
cmp
stos
adc
inc
dec
movsb
ljmp
and
jmp
ficoml
pop
add
and
out
push
mov
sub
dec
scas
and
push
in
and
sbb
fldenv
adc
mov
push
in
bound
fldenv
pop
pop
hlt
dec
adc
fs
out
outsb
add
push
fisubl
cmp
pop
mov
and
icebp
xchg
add
js
dec
jmp
sub
sbb
push
and
adc
jo
cmp
and
sbb
push
push
cmp
mov
xchg
dec
cmp
or
cld
daa
inc
and
adc
and
aaa
js
imul
mov
test
mov
mov
adc
orl
cmp
out
pushf
jno
xchg
hlt
add
pop
jmp
and
out
jp
js
adc
iret
incb
mov
nop
cmp
lods
mov
scas
add
je
std
dec
je
aam
aas
adc
or
lcall
cld
push
and
mov
daa
orb
jge
inc
mov
mov
adc
pop
add
pop
enter
repnz
shl
dec
add
pop
loope
repnz
nop
ds
mov
cmp
shll
lock
imul
add
divb
jae
or
dec
stos
shl
pop
inc
sbb
add
mov
fnstsw
or
sub
test
lods
mov
xchg
xchg
fwait
mov
xchg
inc
mov
and
add
dec
jbe
subb
mul
clc
xor
jbe,pn
int3
daa
pop
clc
or
adc
jae
and
mov
cmp
inc
je
adc
insl
sbb
shlb
popf
mov
hlt
or
sub
adc
inc
fnstsw
adc
mov
stos
inc
in
mov
imul
pop
hlt
or
cmp
dec
sbb
loopne
or
js
mov
pop
je
mov
mov
andl
jmp
jmp
pop
xchg
test
pop
out
mov
repz
aam
fnstenv
push
lods
and
enter
push
or
fdivr
adc
add
ret
push
call
adc
xchg
jmp
subb
mov
add
rcll
cmp
or
pusha
lock
stos
push
push
rol
adc
lahf
mov
loop
pop
xor
mov
adc
ja
sub
or
loopne
daa
inc
fs
mov
ja
push
push
mov
adc
aas
je
sub
jl
add
clc
mul
cmpsl
mov
mov
das
test
cli
ljmp
adc
movsb
jne
add
lods
jae
enter
outsb
pop
pusha
clc
jo
inc
pushf
add
cmpb
push
sbb
mov
sub
lea
lods
andl
call
mov
out
aam
out
mov
or
dec
adc
lods
fdivrs
enter
xor
mov
sub
dec
jp
adc
aas
mov
sbb
test
pop
ljmp
subl
adc
mov
and
jp
mov
movsb
pop
xchg
adc
lret
jle
mov
js
sbb
and
or
mov
inc
testl
and
inc
sub
cli
push
rcll
xor
jecxz
je
adc
inc
adcl
test
aam
add
push
mov
lock
jns
iret
in
lock
adc
fs
push
and
imull
loop
daa
add
pushf
fists
add
adc
mov
movsb
xorl
push
push
jmp
rorb
xchg
inc
pusha
add
adc
shr
das
inc
mov
cmp
and
add
sbb
mov
xchg
xor
push
mov
call
sub
pop
add
sub
adc
bnd
dec
push
adc
and
mov
xor
je
daa
mov
push
test
pop
and
ficomps
mov
push
enter
inc
imulb
leave
movsl
sbb
or
mov
pop
mov
jae
jo
pop
insl
pushf
daa
xor
and
or
or
sbb
call
adc
mov
rol
or
xchg
lock
bound
mov
ret
in
pop
dec
mov
rcll
shll
je
pop
icebp
in
pop
lret
rcr
and
inc
mov
push
call
pop
aas
mov
dec
mov
gs
pop
jge
mov
out
int3
movsl
push
dec
lahf
pop
cld
lahf
inc
fdivrl
dec
lock
and
sub
das
sbb
mov
in
call
sbb
in
adc
clc
xchg
and
add
mov
jbe
lea
jl
cmp
lock
xor
push
push
or
pop
or
mov
negb
jb
dec
sbb
sbb
in
and
sbb
icebp
or
jne
hlt
sbb
mov
mov
jno
out
and
xchg
fdivrl
cmp
enter
and
and
mov
repz
adc
je
and
jbe
dec
mov
hlt
dec
test
mov
add
test
fsubp
fs
xor
cmpsb
or
lods
scas
mov
jge
add
in
std
inc
pushf
hlt
dec
xlat
push
movsb
mov
adc
lods
jge
daa
lock
ljmp
mov
in
add
aaa
ljmp
fcomps
add
push
adc
test
and
shl
cmp
test
xor
out
mov
push
and
xor
in
mov
mov
pop
test
adc
fsubl
arpl
push
sbb
lea
in
mov
adc
adc
call
cld
mov
jns
push
jae
ds
pusha
es
xor
or
shrb
inc
out
mov
inc
jno
fstpt
adc
mov
pop
ds
or
test
sbb
mov
pop
adc
push
sub
sarl
pushf
pop
jne
stos
add
aad
lds
xorl
nop
pop
mov
pusha
das
or
inc
lods
and
add
push
mov
lahf
jnp
pop
fcompl
stc
int3
add
push
lret
pop
or
jo
rolb
adc
adc
mov
movsl
mov
call
dec
or
mov
nop
movsb
sti
pop
pushl
and
add
andl
sub
test
pop
sbb
adc
mov
mov
dec
inc
adc
cwtl
scas
es
sub
repnz
dec
fdivr
in
mov
test
repnz
call
dec
fcoml
int3
adc
int
imul
aaa
pop
test
fcom
mov
iret
pop
cmp
xor
mov
aam
add
aam
call
adc
jmp
xor
in
or
les
pop
xchg
push
testb
dec
insb
push
rcrl
out
and
and
mov
bound
xlat
sbb
inc
lods
cmp
jno
inc
andb
cli
imulb
and
push
int3
push
out
lods
icebp
and
xchg
ret
fbstp
add
dec
mov
or
mov
dec
sub
xchg
mov
ret
push
test
inc
sbb
xchg
clc
add
pop
in
mov
shrb
sbb
add
pusha
sub
ljmp
jne
pop
cmp
ja
lahf
out
add
mov
jg
hlt
or
push
popa
shlb
xchg
mov
daa
pop
or
stc
repz
add
clc
nop
and
aaa
cmp
pop
and
or
pop
sbb
or
movsl
adc
jl
pop
xchg
scas
scas
inc
in
xchg
add
mov
pop
jb
push
out
cmp
mov
add
enter
loopne
add
mov
scas
loop
inc
movsb
pop
adc
repnz
test
add
add
sub
cwtl
das
test
or
mov
push
lahf
jp
daa
sub
push
leave
loope
lds
in
push
clc
mov
add
clc
push
jb
mov
repz
push
cmp
mov
test
mov
xor
mov
adc
imul
lods
ret
movups
mov
sbb
enter
jg
dec
dec
mov
in
xlat
dec
nop
test
cmc
mov
jmp
movsb
adc
aaa
lahf
adc
add
sub
push
dec
rcl
js
add
and
je
xchg
je
and
jge
jmp
pmuludq
pop
pushf
pop
cmp
out
sub
nop
cmp
nop
and
add
aad
push
pushf
out
rolb
and
and
and
add
mov
jle
pushf
mov
cmp
jle
push
daa
sub
cld
sbb
or
add
inc
call
add
cli
fisubs
es
lods
push
mov
movsb
or
nop
push
cmp
test
sub
cld
fsubs
xlat
roll
mov
adc
pusha
call
add
fmuls
and
sbb
inc
inc
adc
push
add
jg
sub
test
or
int3
fcoml
iret
jecxz
and
loopne
xlat
scas
jmp
sub
add
fwait
xor
fadds
jle
in
xchg
and
jg
xchg
adc
adc
scas
pusha
push
leave
or
sbb
mov
sub
add
ja
push
jo
in
loopne
mov
jns
je
add
test
add
test
add
enter
rcrl
cmc
xchg
call
rclb
mov
test
cld
push
and
jle
nopl
add
xchg
aad
mov
dec
or
dec
mov
dec
add
pusha
pop
aad
adc
jno
push
push
movsb
call
add
enter
adc
inc
mov
dec
xor
push
dec
test
mov
dec
push
call
inc
mov
push
push
shrb
insl
repnz
pop
insb
rcr
icebp
mov
lcall
jo
or
xor
js
adc
ljmp
popa
divl
adc
je
lock
sbb
push
mov
shrb
cmp
mov
ret
mov
add
sti
and
and
push
push
and
stc
sub
xchg
fistps
inc
movsl
inc
push
push
mov
mov
or
xor
push
inc
imulb
xchg
lds
sti
ret
push
sbbl
test
or
xchg
push
loope
idivb
ror
mov
mov
out
outsb
je
add
inc
push
adc
orb
add
and
aam
xor
add
lahf
roll
cmp
add
xchg
popf
push
pushf
and
mov
fucom
cld
fucomp
out
dec
jne
xchg
sbb
fs
jl
xor
or
int
fstps
adc
mov
fsubs
je
test
or
push
sbb
adc
and
lods
add
pop
outsl
popf
ljmp
hlt
push
or
ret
repz
add
jo
pop
mov
cmp
call
popf
mov
xchg
push
mov
das
jle
xchg
cmc
cmp
add
or
inc
sub
dec
lret
add
jbe
xlat
outsl
add
sbb
pop
push
iret
or
test
addb
add
add
in
cmpsl
xor
inc
or
mov
or
push
test
das
int3
sub
stos
inc
cld
inc
dec
into
insb
popf
ficompl
fisttpll
call
data16
or
jmp
mov
setb
out
ljmp
xchg
repz
dec
jns
imul
adc
or
movsl
cld
cwtl
adcb
or
xor
sbb
push
adc
sti
mull
and
sub
pop
or
and
lods
jmp
fsts
test
xor
and
add
fcomps
xchg
mov
fistpl
add
adc
sub
leave
pop
call
pop
adc
cmp
push
mov
push
add
jnp
sbb
xchg
sbb
call
and
rclb
aam
js
cmp
jbe
mov
mov
or
movsl
inc
jnp
dec
inc
in
pop
cld
add
sub
pop
fs
pop
add
adc
out
pop
js
dec
fdivrl
repnz
cmpsl
mov
jg
mov
test
rolb
hlt
or
cwtl
sarl
cli
add
int
adc
jg
sub
and
jg
enter
test
jnp
inc
jmp
jle
dec
cmpsb
add
sbb
insb
ljmp
test
je
xor
push
loop
xchg
out
jmp
xor
jns
sbb
roll
js
sti
jne
sub
sbb
outsb
mov
dec
push
sub
push
popa
add
test
xchg
sub
and
mov
pop
and
adc
enter
jbe
jae
pop
pop
adc
fldl
movsb
mov
in
pop
sub
pop
adc
cld
ja
fs
xor
push
add
xor
lcall
adc
fwait
dec
jae
dec
xchg
or
mov
push
push
hlt
and
shrl
and
pop
test
shll
repnz
sub
je
mov
xor
inc
dec
adc
or
inc
insb
inc
jle
test
sbbb
nop
jl
bound
mov
addr16
hlt
dec
cmp
and
adc
push
and
pop
mov
fstpt
and
out
jp
mov
test
inc
ficoms
inc
test
loope
push
sub
push
mov
dec
rolb
or
pop
push
pop
add
clc
sti
adc
scas
xchg
push
pop
add
cmp
sub
loopne
mov
adc
imul
adc
call
dec
imul
dec
cli
pop
clc
aas
add
outsb
sub
add
and
sub
inc
mov
add
pop
in
mov
adc
pop
loopne
leave
dec
mov
in
lock
enter
adc
fstps
sbb
je
mov
ss
or
jne
mov
movsb
sub
xchg
nop
movsl
testl
les
orl
jne
pop
cld
scas
jecxz
pop
xor
add
adc
loope
aas
jmp
pusha
mov
jl
int3
adc
iret
add
sub
and
subb
repnz
pop
adc
addr16
fldcw
leave
test
and
ljmp
xorb
sub
add
out
in
cmpb
les
inc
add
add
in
and
test
push
lds
fsubrs
inc
icebp
and
shrb
cmp
fnsave
add
mov
mov
cwtl
cwtl
mov
test
pop
add
mov
pop
adc
mov
mov
sarb
and
inc
mov
mov
clc
inc
pop
andb
cli
or
rolb
loope
sub
and
rolb
adc
xchg
jp
icebp
outsl
mov
push
sahf
push
jl
sub
adc
in
es
adc
enter
repz
xchg
sti
xor
loopne
fmul
inc
add
and
jno
xlat
data16
mov
sub
mov
ljmp
in
lahf
add
mov
movsb
out
mov
hlt
sti
and
mov
loop
js
pusha
fcoms
pusha
inc
jge
add
mov
mov
or
add
aam
mov
subb
pop
add
cld
imul
out
jecxz
faddl
xor
and
test
mov
xor
cmp
out
dec
cmp
xchg
pop
sbb
push
add
cmc
add
movsl
in
out
mov
mov
push
rclb
sahf
cmp
cmp
xor
pop
add
add
adc
out
inc
fadds
cmp
sbb
mov
mov
or
or
dec
fcompl
sbb
xlat
mov
clc
mov
dec
test
mov
stos
call
rcrl
fdivr
aad
xchg
push
pop
clc
call
hlt
mov
cwtl
and
adcb
hlt
loop
fsubl
and
addl
imul
or
xchg
test
adc
outsl
xor
inc
jns
out
hlt
ret
test
and
xchg
rorl
jecxz
xor
dec
lock
mov
or
and
mov
push
and
imul
test
enter
fwait
mov
inc
cmpb
adc
sbb
xchg
das
mov
cld
scas
jl
dec
jns
adcb
js
lahf
and
add
push
flds
mov
cmp
ret
or
mov
dec
das
in
sub
fists
mov
add
pop
mov
xchg
adc
adc
inc
add
shrb
sub
mov
xchg
test
adc
or
in
and
lahf
mov
icebp
fisttpll
xchg
push
add
aas
test
in
add
adc
adc
lods
pop
or
fs
or
add
add
and
lods
call
xor
xor
or
dec
fs
mov
mov
cmp
clc
mov
gs
enter
fs
ja
push
nop
leave
or
insb
dec
mov
shr
inc
cmp
test
mov
mov
movsb
dec
scas
pop
shlb
and
add
mov
bound
or
jns
push
ljmp
gs
enter
add
inc
test
adc
pop
mov
sub
les
js
addr16
adc
sbb
sub
pop
mov
les
jb
repz
in
and
mov
and
ja
and
je
ljmp
test
adc
push
xchg
xor
and
and
or
lcall
mov
xor
loopne
ja
add
pop
call
jg
shrb
out
sub
mov
outsb
pushf
cmp
loopne
test
push
mov
push
pusha
push
sub
pop
sub
mov
cmp
pop
pop
sti
xor
sarl
xchg
je
mov
inc
pop
test
mov
add
push
ret
aam
xchg
nop
insb
sbb
cmp
or
xor
adc
jle
lock
lret
shlb
in
inc
sahf
out
sbb
aad
mov
jmp
pushf
imul
insb
andb
testl
roll
sub
fmul
sub
sub
js
or
out
mull
es
inc
xor
xor
andl
popa
sbb
das
std
lods
inc
test
rcrl
jl
mov
add
pop
push
scas
and
repz
mov
call
and
mov
push
inc
aas
inc
movsb
xchg
jb
mov
cltd
xor
adc
or
pop
popa
mov
inc
in
test
repz
lods
xorl
adc
fmuls
pusha
and
mov
jnp
sar
pop
dec
push
jl
popa
je
adc
fisubrl
test
mov
jle
mov
test
and
jns
repnz
push
jl
mov
pop
push
lea
mov
cmp
mov
in
or
clc
ret
push
rolb
es
dec
cmp
adc
hlt
mov
lret
xor
lock
mov
in
popa
and
inc
or
popf
adc
pusha
adc
mov
fstpl
in
lea
lock
je
call
test
fistl
sub
imul
movsl
aam
enter
jns
ret
xor
popf
mov
mov
pop
inc
add
cmpsb
sub
lds
and
loope
fstps
ret
and
addr16
sbb
inc
and
sub
loopne
xorl
mov
sbb
outsl
adc
pop
aas
rcrb
push
fs
test
or
and
sbb
sti
sub
sub
add
gs
or
hlt
movsl
ret
dec
loope
stos
out
cld
lods
add
push
mov
dec
mov
jne
and
out
dec
cwtl
enter
movsb
rorl
js
or
test
mov
call
and
add
pop
jo
js
aas
or
add
inc
cld
addr16
mov
cmp
std
mov
in
push
lods
mov
xor
imul
adc
popa
je
dec
mov
mov
scas
sbb
pop
outsl
push
enter
xchg
push
inc
adc
test
popf
cld
pop
adc
adc
sti
rorb
xor
cmp
mov
clc
jae
push
ret
rolb
imul
mov
or
pop
les
inc
jl
test
push
push
rcll
test
fdivr
xor
dec
lods
incl
mov
fnsave
dec
mov
jge
enter
stos
xchg
mov
int3
xor
mov
jge
jl
pop
in
call
out
arpl
movsb
add
cmp
test
mov
jns
push
rcll
push
push
mov
fstpt
mov
call
fdivrl
sub
add
fs
dec
push
add
cmp
nop
sbb
testb
mov
cmp
scas
and
xchg
dec
mov
or
lret
bound
and
push
daa
push
xor
inc
out
out
flds
lea
in
ljmp
pop
jnp
lods
add
cs
xchg
test
and
scas
and
clc
js
push
push
call
daa
fcmovnbe
sub
jmp
fsub
and
mov
roll
inc
xor
inc
add
les
test
add
fidivrs
and
lahf
loopne
mov
dec
xor
add
cmpb
dec
adc
lds
cltd
in
mov
popa
and
or
andl
adc
and
inc
insb
jge
or
xlat
stc
sbb
inc
scas
add
cmpl
add
daa
leave
sbb
imul
push
pop
scas
add
repnz
rcl
test
rcrb
icebp
cmp
out
mov
push
in
xorl
mov
sbb
shll
jl
jg
addb
ret
xlat
sarl
push
push
ljmp
or
mov
clc
push
pop
pop
mov
and
movsl
sar
daa
stc
or
pop
xchg
sub
int3
in
inc
add
stos
scas
push
push
jo
insl
nop
in
cmp
insb
lods
jl
cmp
mov
notb
jno
adc
insl
ja
jl
in
sbb
subl
add
adc
and
or
and
jl
lock
popa
xor
jg
cld
add
push
push
imul
test
stos
mov
mov
add
sub
mov
mov
rcrl
dec
imul
cld
ficomps
scas
inc
clc
je
push
fadd
ret
push
test
xor
or
xor
mov
jae
sub
es
add
lods
mov
fmul
add
dec
inc
test
xchg
testl
popf
jae
shrl
dec
xchg
lahf
and
and
or
das
fnstsw
jl
mov
mov
fs
clc
imul
mov
scas
add
fildl
or
addb
and
sbb
neg
int3
push
cmp
jg
hlt
dec
call
inc
xor
add
icebp
sti
test
add
jns
stos
mov
and
mov
dec
lea
sub
mov
in
add
subl
sub
rolb
test
jb
ss
clc
adc
push
les
add
cwtl
pop
movsb
xor
nop
mov
in
push
lods
jae
loop,pt
push
push
mov
lds
jl
adc
rcll
mov
js
inc
fs
or
je
popa
sub
loopne
or
pop
stc
sbb
push
out
sbb
mov
adc
pusha
scas
xor
push
test
add
sbb
sub
repnz
fs
cmp
sub
cltd
call
mov
adc
aaa
inc
lock
das
mov
jl
adc
sbb
fisubs
push
and
repz
das
adc
scas
repz
inc
hlt
mov
sbb
sub
sub
jnp
cld
xchg
cli
mov
push
loope
adc
xor
lahf
sbb
outsb
mov
cltd
dec
add
shll
call
and
clc
dec
push
mov
inc
add
clc
or
sub
xor
jmp
sub
hlt
call
xor
dec
loopne
in
xor
mov
pop
ljmp
imul
mov
mov
mov
rcr
test
xor
test
adc
xor
stos
mov
cmp
adc
or
mov
fwait
push
jo
jge
jne
pop
jl
add
adc
popf
data16
clc
mov
cmp
mov
out
int3
sbb
adc
adc
cmp
sub
cld
jle
jl
push
sub
in
dec
sbb
mov
add
xchg
daa
sarb
fistpl
test
mov
push
addb
ror
or
imul
test
int
les
add
insb
and
push
or
xchg
hlt
or
rclb
fidivrl
mov
mov
add
mov
mov
loopne
jge
iret
cmc
inc
rolb
sti
and
cmp
hlt
das
or
xchg
and
add
loope
and
inc
ret
or
and
std
sub
push
jb
stos
std
in
js
cwtl
adc
ror
ltr
movsb
sub
fnsave
push
mov
lea
xor
cwtl
stc
mov
rcrb
jmp
and
mov
clc
xor
mov
cwtl
daa
sub
jmp
pop
jns
shlb
je
addr16
lahf
cwtl
insb
adc
test
jo
imul
add
cwtl
jo
mov
jo
push
test
hlt
fcompl
xchg
fistpl
inc
sub
push
add
and
ror
xchg
add
mov
adc
and
sub
je
movsl
pop
rcrb
or
hlt
dec
cmp
dec
add
xchg
mov
dec
push
outsl
imul
popa
sarl
jo
cmp
adc
movsl
shlb
mov
aaa
loopne
jmp
adc
rclb
adc
gs
push
pop
push
or
mov
stos
jns
push
imul
adc
aam
push
int
jnp
nop
mov
movq
ljmp
fs
adc
mov
add
jae
mov
and
mov
adc
mov
xchg
xor
xorl
test
mov
mov
xchg
ret
bound
out
mov
les
jmp
jne
adc
cmp
and
mov
sti
imul
shlb
pop
and
push
push
mov
push
xlat
sti
sub
incb
mov
jge
xor
pop
jno
mov
daa
int
xor
mov
sub
call
orl
add
pop
test
stos
mov
imul
and
mov
stos
pushf
push
or
push
sub
ret
fsub
sub
mov
test
cmpsb
enter
cmp
or
cmp
sar
pop
lcall
xchg
rolb
mov
stc
push
hlt
adc
pusha
dec
pop
call
push
sub
jge
lods
mov
int3
xor
imul
adc
in
cmp
push
add
je
mov
mov
out
xor
adc
jae
push
add
mov
shlb
jg
imul
add
lahf
imul
mov
adc
and
rolb
inc
hlt
xchg
orb
dec
mov
xchg
xorb
cmpsl
mov
nop
loope
call
push
adc
rorb
hlt
repnz
cld
sbb
or
je
nop
pusha
push
and
enter
movsb
push
push
inc
jo
fists
push
push
adc
stos
pop
jl
outsb
mov
or
push
repnz
ja
mov
mov
movq
dec
add
fsubrs
mov
mov
mov
lods
mov
jnp
mov
mov
dec
in
incb
add
mov
push
xchg
fsubs
add
mov
cwtl
fwait
cmp
or
ret
jg
fdivrl
aad
and
push
mov
adc
pop
je
pop
dec
in
dec
cmp
sbb
cwtl
shl
cmp
push
or
add
call
or
nop
add
or
add
and
std
jg
mov
jmp
adc
lock
push
dec
lds
in
stos
les
inc
push
pop
mov
hlt
adc
fcoms
jo
push
dec
or
call
je
call
inc
mov
lock
pop
jge
call
and
addr16
nop
aam
rcll
dec
and
xchg
push
subb
je
push
add
pop
or
xchg
pushf
scas
clc
mov
in
and
add
xor
cmc
dec
xor
lea
add
add
sbb
mov
or
out
sub
scas
bound
nop
push
inc
insb
fildll
dec
xlat
xor
icebp
xor
notb
push
and
push
sbb
call
orl
adc
or
popf
dec
sub
adc
mov
dec
push
hlt
and
and
mov
add
aad
mov
or
arpl
je
xchg
xor
sub
in
test
jne
enter
sub
out
lock
cmp
sbb
bound
cld
ds
push
cmp
scas
xor
inc
in
jno
call
dec
sub
test
shll
mov
cmp
jno
sti
lea
adc
sbb
adc
mov
jmp
fcomp
aam
hlt
xor
sbb
push
inc
imul
enter
push
sub
lods
mov
jp
aaa
test
ret
mov
lock
ficoms
sbb
imul
es
test
add
adc
dec
inc
pop
mov
in
cltd
push
dec
xchg
add
test
inc
jne
mov
sbb
push
mulb
or
push
test
rcrb
add
and
and
lahf
jp
mov
fnstenv
inc
loop
pop
bound
mov
repnz
adc
inc
mov
sub
cmp
xchg
and
dec
lock
pop
cmp
inc
xor
pop
call
lods
dec
test
nop
and
add
mov
loope
insb
xchg
aad
je
faddl
shlb
adc
lret
cld
in
imul
fmul
jbe
daa
xor
aas
sbb
sub
jo
cmp
or
cmp
add
movl
and
out
std
mov
add
pop
push
orl
adc
lahf
adc
jp
xchg
inc
xchg
and
inc
arpl
testb
push
mov
sub
adc
sbb
shrl
out
lret
mov
dec
ljmp
nop
mov
pushf
adc
add
add
mov
push
mov
push
shlb
js
inc
lret
and
push
mov
shlb
daa
adc
leave
cmp
call
add
jno
sub
mov
fdiv
nop
adc
int
lea
push
xchg
mov
pop
xor
insl
sbb
rorb
xor
rorb
movsl
and
notb
xlat
dec
pushf
dec
mov
fs
dec
add
lock
push
mov
fmuls
jne
aaa
shll
mov
push
imul
add
in
bound
xchg
push
jl
or
mov
clc
scas
or
pop
inc
xchg
push
nop
cld
xor
fs
sarb
jne
cmc
out
mov
test
mov
aam
dec
fwait
mov
add
mov
test
mov
adc
cmc
pop
getsec
dec
or
jo
rcrl
mov
scas
add
sarb
fldenv
adc
xchg
pop
lods
test
or
mov
xchg
or
and
adc
cmp
gs
pusha
push
sar
add
repnz
aas
inc
iret
aad
pop
jne
mov
in
push
pusha
push
adc
insb
std
or
xchg
and
div
add
dec
sub
and
mov
xor
js
mov
pushf
adc
lret
sbb
insb
add
pop
cld
dec
cmc
fbld
pop
sub
call
rol
xchg
gs
ret
xor
or
xor
scas
int3
dec
repnz
daa
adc
test
add
jl
mov
fwait
ja
sub
sar
dec
adc
jg
mov
pusha
cld
je
mov
xchg
fisttps
sbb
mov
mov
or
insl
dec
dec
lods
inc
sub
adc
adc
in
xchg
stc
js
and
pop
mov
or
inc
mov
pop
mov
cli
jb
add
push
xchg
mov
subb
je
movsl
fldl
cmp
or
and
stc
mov
xor
xchg
and
and
add
pusha
and
sbb
sub
push
mov
daa
cli
loopne
lahf
sub
insb
xchg
and
mov
inc
or
std
pop
sbb
pop
sub
mov
cmp
shlb
ror
in
clc
sbbb
ret
hlt
push
mov
pop
lahf
out
sbb
or
xor
jne
test
push
jp
das
addr16
pusha
inc
mov
inc
sbb
shrl
mov
xchg
pusha
in
adc
push
xor
insl
lods
mov
jae
mov
sahf
dec
cltd
aas
mov
and
or
sbb
mov
and
mov
dec
push
rolb
push
xor
fsts
pop
pop
xchg
dec
fcoml
add
mov
adc
insb
in
add
or
in
clc
xor
xchg
and
mov
or
push
call
xor
adc
je
mov
mov
xor
or
pop
jge
aam
ds
inc
sbbb
push
shr
pop
push
and
scas
je
adc
add
cmpb
push
rcrb
jo
push
fcoms
lods
popf
pop
les
cmp
or
shll
test
mov
cmp
js
test
loopne
sub
in
addb
enter
out
les
adc
push
lock
jo
icebp
mov
jb
rcll
add
mov
test
cmpb
aam
lret
cmp
fs
xor
out
fidivl
enter
inc
xorl
push
pop
mov
or
mov
dec
sub
and
or
loopne
mov
pop
or
insl
pop
rcr
jne
push
bound
popa
add
and
push
add
inc
add
adc
sub
xor
shll
push
les
lock
je
add
jle
call
sahf
mov
andb
or
add
dec
mov
paddsw
mov
add
and
push
sub
popf
push
daa
or
das
mov
loope
cmp
mov
loopne
and
sub
dec
jo
test
jle
lock
or
pushf
cmp
pop
pusha
push
pop
mov
adc
push
mov
adc
and
stc
cmp
mov
aaa
xor
in
sbb
push
dec
xor
in
inc
loope
and
in
adcl
or
dec
adc
inc
and
and
es
sub
rorl
dec
xor
cwtl
mov
cmovae
cld
jge
test
jns
mov
ret
adc
adc
pop
out
fs
xchg
adc
sub
adcl
mov
js
hlt
movsb
xlat
inc
adc
dec
test
xor
cmp
push
push
mov
pop
add
mov
mov
add
push
call
add
sti
sub
clc
push
add
fidivrl
inc
sub
mov
xchg
stos
rcll
in
jl
mov
inc
adc
int3
mov
xchg
pusha
cld
add
aad
mov
mov
test
push
mov
daa
ret
cmpl
cmp
jmp
push
mov
lahf
sbb
adc
mov
repz
leave
push
mov
popf
or
push
adc
or
and
sbb
add
dec
or
dec
mov
out
lret
js
cltd
jno
adc
test
flds
sub
mov
cltd
ret
movsb
std
les
jg
sahf
das
xchg
sub
sarb
push
push
jbe
test
in
xchg
js
hlt
xor
insb
mul
sub
into
call
xorb
adc
arpl
loopne
xchg
rorb
or
cmc
lds
test
pop
pop
mov
imul
add
push
add
add
test
pushf
cmp
dec
cmp
or
mov
lock
dec
sub
leave
popf
shlb
jne
repz
je
test
push
and
or
sbbb
icebp
js
repz
push
ss
shrb
add
mov
or
fsubs
sbbb
and
xor
pop
lcall
pop
mov
adc
orl
inc
mov
mov
dec
pusha
in
add
cmpsl
push
adc
push
int3
mov
ret
sub
pusha
dec
dec
mov
cmc
sub
lcall
jge
jno
push
jne
movsb
lcall
and
nop
and
push
les
and
bound
or
mov
aad
mov
lea
sbb
movl
push
mov
xchg
filds
cwtl
push
mov
pop
addr16
xlat
push
sub
pop
mov
or
fdivl
or
jmp
jecxz
and
jo
add
aaa
adc
andb
add
jmp
pop
sub
push
rcrb
gs
pushf
ljmp
cmp
dec
popf
push
cwtl
add
lret
fwait
add
testl
cld
repnz
mov
insb
xchg
mov
pop
nop
sub
xchg
clc
insb
pop
mov
and
loope,pn
aam
cmp
shll
push
xor
push
subl
lds
jge
clc
mov
hlt
orb
pop
pop
add
sub
hlt
stos
adcl
push
add
sbbb
and
add
adc
or
lods
jne
nop
lahf
push
fs
daa
jle
and
pop
pop
mov
inc
or
shll
test
mov
push
jecxz
push
push
call
test
in
mov
clc
je
flds
inc
cmp
fcoms
ja
xor
dec
inc
lea
repz
or
std
out
or
clc
mov
lock
test
in
or
pop
hlt
mov
xor
sbb
out
dec
mov
or
call
mov
mov
sub
sub
mov
icebp
out
dec
lods
and
xchg
sub
mov
push
and
orb
aam
adc
js
and
and
fsubs
clc
lahf
mov
push
and
call
scas
divb
xor
clc
test
inc
sub
or
aam
cmp
pusha
sub
insb
add
jo
test
jp
mov
lods
add
cmp
xor
rcrb
pop
cmp
adc
subl
adc
mov
xorb
inc
push
push
mov
push
sbbl
aaa
push
pushf
rorl
jl
loop
pop
js
or
loopne
hlt
ficoms
xor
inc
mov
cwtl
or
in
popa
mov
orl
std
dec
pop
xchg
aam
push
clc
pop
movl
lahf
adc
and
adc
in
xchg
jge
clc
jo
sub
mov
cmp
cwtl
add
add
shlb
jb
add
out
pop
push
test
pop
out
enter
mov
popf
lock
je
add
and
subl
and
fadds
or
movsb
cs
in
fsubrl
addb
in
cmp
inc
mov
insb
clc
adc
out
push
add
repz
jecxz
cmp
or
add
cmp
call
push
fwait
cmp
jae
push
ja
mov
push
adc
test
xchg
lock
lea
cmp
jle
aad
sbbb
push
sbb
cs
pop
cmp
or
in
sbb
cmp
int3
mov
addr16
mov
int3
xchg
xor
loope
repnz
dec
enter
cmp
daa
jo
xchg
or
ret
enter
sub
add
push
mov
push
add
and
mov
je
aam
in
js
dec
jne
adc
pop
stos
jo
push
aad
adc
jl
adc
mov
mov
pop
dec
push
xchg
clc
pop
jecxz
std
pushf
sar
dec
add
lock
test
fsubrl
call
out
mov
push
incb
test
repnz
mov
pop
cmp
adc
adc
or
and
inc
pop
add
call
cmc
jp
pop
sub
or
adc
and
call
push
and
mov
lods
leave
pop
fcoms
test
push
paddsw
dec
call
pop
mov
xchg
mov
cmp
xchg
ljmp
imul
fsubr
sbb
dec
mov
cld
mov
or
test
rol
imul
test
dec
push
test
mov
dec
dec
test
push
jl
dec
sbb
test
inc
es
dec
cltd
and
push
or
mov
xchg
das
mov
loopne
shlb
shlb
mov
pop
dec
push
add
test
hlt
push
rcll
out
or
jo
add
xor
or
les
push
mov
imulb
add
or
push
sbb
aam
les
inc
ljmp
das
divb
cli
mov
sbb
sbb
xlat
xlat
or
fdivrl
mov
movsb
xchg
loopne
outsl
repnz
dec
dec
cmp
fs
les
test
out
mov
mov
mov
xchg
mov
movsb
fdivs
inc
test
and
inc
pusha
mov
orb
sbb
xor
sub
bound
sub
xchg
lock
dec
mov
out
mov
pusha
mov
mov
push
and
nop
cwtl
js
cmp
adc
jl
dec
into
popl
daa
dec
sub
or
cmp
rorb
fisubs
les
push
and
pushl
pop
orb
jge
fsubs
inc
lea
les
cmp
and
rorl
pop
rorb
inc
push
xor
test
in
pusha
or
jo
sub
mov
cmp
test
xorl
push
or
test
mov
pop
push
mov
gs
jbe
lods
cld
adc
lock
push
xchg
cwtl
shlb
add
nop
xlat
and
add
notl
jno
sarb
repz
add
cmpsl
aas
subl
testl
pusha
push
lahf
jns
sub
idivl
lock
je
and
or
inc
test
inc
cmp
pop
or
and
imul
shr
ds
mov
add
xor
or
and
pop
dec
sbb
add
sbb
mov
jge
cmp
add
pop
gs
cmp
dec
jl
pop
nop
ds
test
or
scas
rcl
mov
dec
nop
mov
dec
mov
js
mov
cwtl
adc
add
in
jg
lods
add
or
lods
orb
xor
dec
sbb
test
push
icebp
daa
adcl
test
jo
push
cmp
ljmp
call
dec
aam
jecxz
mov
repz
rcll
mov
pusha
and
mov
cmp
fsubl
jnp
fdivrl
fst
add
mov
sub
push
roll
notb
fcomps
lds
call
loopne
add
loope
cmp
call
push
pop
jg
je
push
sbb
pusha
jl
mov
jbe
dec
andb
xor
jmp
push
mov
and
lock
sub
xor
jae
add
mov
hlt
ficoml
test
lds
adc
pop
sub
bound
mov
jne
jne
xchg
jge
jl
or
dec
and
or
adc
adc
fnstsw
add
jg
pusha
aaa
adc
call
test
cmp
xchg
push
push
and
sbb
rorl
adc
clc
push
call
cmp
je
hlt
aaa
add
repnz
or
inc
movsb
mov
negb
shlb
cs
ficomps
jle
xchg
mov
or
insl
fwait
sub
add
or
dec
or
adc
mov
jo
sbb
ljmp
sahf
adc
adc
pop
cli
idivl
mov
mov
je
xor
mov
pop
test
add
inc
push
lock
inc
in
mov
xor
inc
cld
pop
sub
repnz
cli
ja
cmp
or
push
mov
or
or
test
lods
or
sub
hlt
and
sbb
or
add
repz
xchg
adc
dec
loopne
hlt
popf
je
sbb
dec
mov
mov
mov
jl
push
mov
and
cmp
mov
cwtl
and
xchg
jmp
cmp
jno
loope
push
adc
sub
or
aaa
hlt
adc
and
or
pop
cmp
orb
rcrl
fcoms
insb
pop
hlt
jle
mov
mov
dec
xchg
cmp
mov
sbbb
mov
ret
insb
xor
stos
add
out
mov
sbb
dec
or
add
addb
adc
sub
subps
add
enter
sub
push
je
call
sti
sub
mov
sbbb
movsb
cwtl
or
in
lock
stc
cli
mov
mov
sub
dec
or
je
lea
lahf
lret
out
insb
lods
fadds
mov
sub
inc
hlt
mov
movsb
sbb
jo
out
mov
mov
xlat
fnstcw
les
call
and
mov
repnz
pop
lods
push
and
test
icebp
fs
and
call
imul
rcll
lahf
jmp
mov
and
jbe
mov
dec
mov
test
push
leave
lock
les
lock
and
std
call
nop
add
imul
push
sub
lock
popf
icebp
cmp
sti
pop
testb
cmp
test
or
les
mov
insb
jmp
movsb
rol
adc
add
jb
nop
ret
pop
xchg
clc
or
add
pop
lods
mov
cmp
imul
test
out
lods
add
jge
out
mov
aas
fs
add
or
adc
cmp
stos
subl
hlt
adc
push
das
inc
stc
inc
in
or
and
sbb
repz
adc
adc
sub
aad
push
mov
adc
and
out
mov
das
xor
test
lds
sbb
out
and
les
sahf
adc
addl
and
pop
inc
adc
cld
sahf
mov
sub
push
mov
dec
incl
and
dec
xchg
repnz
or
fsubrs
xor
push
cmpsb
addl
add
test
call
push
jae
xor
adc
dec
inc
fadd
mov
jl
ret
add
pusha
cmp
dec
mov
popf
lds
mov
jmp
out
pop
mov
dec
decb
sti
pop
push
pop
inc
lock
fs
or
lods
push
cltd
test
stos
mov
cmp
jmp
fdivl
cld
mov
popa
leave
cmp
mov
test
rorb
rorb
out
das
mov
cmp
adc
fisubrs
addb
cmpsb
rclb
and
popf
leave
hlt
sub
mov
jnp
sbbl
inc
mov
in
jmp
pop
add
inc
sbb
pop
pushf
mov
inc
pop
das
hlt
or
adc
fdivl
outsb
mov
repnz
pop
pop
push
sub
call
pop
or
sbb
and
ds
outsb
adc
test
and
push
lahf
pop
dec
xchg
push
pop
cli
sbb
enter
lahf
fsubrl
aaa
orl
jge
add
or
pop
sbb
les
jae
inc
lock
add
sub
xchg
adc
push
call
or
mov
inc
sbb
mov
popa
xor
sbbb
sub
and
sbbl
push
sub
aad
insb
sarl
movsb
cwtl
push
mov
ret
fwait
adc
andnps
mov
adc
push
push
sti
dec
mov
loope
and
and
mov
add
in
pop
test
xchg
mov
sbb
adc
call
or
mov
sub
lods
xor
filds
cmp
popf
les
jns
and
push
es
xor
add
and
adc
add
sub
movsb
sub
adc
lret
cmp
add
lock
fisubs
mov
mov
sbb
or
or
jne
arpl
lods
mov
repnz
pusha
jo
test
lods
mov
add
sub
and
or
mov
push
add
lea
mov
adc
mov
or
jno
dec
push
mov
test
decb
idiv
and
dec
xchg
jno
addr16
xchg
mov
push
aad
pushf
and
test
push
push
and
sbb
and
adc
lock
in
or
cmp
mov
aad
pop
out
fadd
add
imul
inc
inc
push
sub
leave
or
mov
ret
xchg
or
in
add
test
pop
and
es
inc
nop
lahf
rcrl
add
push
aad
sbb
add
mov
sbb
and
pop
and
jp
pop
repnz
aas
pop
and
stc
xor
sbb
enter
nop
pop
add
xchg
icebp
cwtl
xchg
je
mov
shl
add
mov
roll
mov
test
aam
mov
pop
adc
push
pop
mov
hlt
adc
mov
sbb
imul
orb
repnz
out
subl
and
clc
inc
popa
mov
ljmp
notb
aas
shrb
pop
or
pop
lods
mov
mov
shlb
dec
cld
mov
and
arpl
jl
lret
mov
sub
pop
les
repz
sbb
lock
lods
add
lea
pop
inc
clc
leave
cld
inc
in
cmp
loopne
or
mov
in
scas
fisttpl
mov
adc
lret
loop
and
and
roll
push
add
mov
cmpb
adc
dec
push
adc
xchg
push
xor
fisubs
lods
dec
push
fmull
push
stos
push
push
nop
cmp
inc
cld
mov
adc
sbb
inc
insb
or
js
adc
jg
inc
mov
cld
mov
movsb
ljmp
add
and
jl
xchg
adc
sub
lcall
in
and
pop
scas
test
mov
sbb
xlat
int3
sbb
sub
push
cmp
and
push
sbb
and
push
inc
in
sar
enter
sub
hlt
or
repz
mov
fdivr
faddl
fcomi
sub
cmpsl
pop
data16
adc
call
and
enter
mov
sub
mov
jge
jl
out
shll
or
pop
fwait
and
pop
mov
addr16
and
adc
add
inc
andl
adc
out
icebp
inc
insb
or
xchg
inc
lods
jae
inc
insl
mov
adc
push
leave
ror
lods
inc
icebp
cmp
dec
divl
loop
sbb
sub
sbb
adc
dec
adc
out
faddl
jne
daa
dec
or
setle
je
add
repnz
sar
lods
pop
lea
adc
add
imul
add
cmp
nopl
jns
in
and
mov
xor
fiadds
cmp
push
jmp
call
add
mov
mulb
xorb
rcl
data16
in
add
out
push
mov
mov
hlt
push
movsl
jl
out
fs
jmp
lar
sti
std
pop
mov
mov
push
pop
fcomps
dec
mov
adc
ret
mov
or
rorl
lcall
andb
sbb
aad
mov
push
mov
and
jne
jle
lret
fistl
add
inc
add
pop
into
or
shlb
sarl
or
aaa
add
daa
dec
add
sahf
push
mov
loope
cmpb
add
or
pop
pop
out
rorb
push
sbb
push
push
mov
sub
fadd
je
add
insb
push
or
js
pop
scas
iret
sbb
pushf
or
insl
call
bound
hlt
sbb
jecxz
adc
jo
lea
loopne
add
rclb
adc
add
mov
dec
pop
mov
in
inc
sbb
xlat
cltd
fsubr
pop
sti
dec
sbb
movsl
cli
movsb
and
bound
popa
loope
adc
jns
fiaddl
test
push
sbb
lahf
sbbb
incl
negl
or
add
in
xor
adc
loop
nop
rclb
in
jmp
insb
scas
mov
pushf
pop
jmp
int3
mov
pusha
jmp
hlt
cmovo
fidivs
xchg
std
mov
push
xor
fadd
mov
movsb
jl
dec
mov
add
call
adc
aam
stos
dec
nop
outsl
inc
mov
mov
adc
or
clc
enter
sbb
loopne
les
jne
call
jo
aam
and
mov
pusha
inc
hlt
mov
cmp
add
or
call
addb
dec
pop
xchg
icebp
sub
jg
push
fmull
mov
fsubl
or
sbb
jmp
or
push
js
add
in
or
roll
adcb
mov
mov
pop
roll
jl
add
push
in
and
jl
mov
fldcw
negb
neg
dec
in
push
ficomps
sbb
je
enter
scas
mov
inc
insl
cmp
ja
fmull
mov
aaa
test
xchg
mov
mov
xor
jnp
xor
rorl
sbb
leave
or
push
setb
pop
in
andl
pop
xor
push
int3
add
xchg
cwtl
xchg
pop
adc
push
push
jmp
notb
paddsw
cmp
ljmp
roll
or
push
shll
je
popf
mov
mov
add
stc
or
call
jle
daa
pop
pop
cli
sub
enter
or
sbb
in
hlt
addr16
dec
mov
or
lret
xlat
jecxz
out
sbb
cli
dec
test
loopne
in
push
adc
mov
lods
pop
orl
das
lods
dec
enter
or
pop
pusha
call
xor
add
jo
pushf
add
ret
sub
push
in
rolb
xchg
or
pmaxsw
rcrl
test
dec
shl
clc
and
jle
lods
push
call
data16
push
push
filds
test
cwtl
mov
icebp
lock
pusha
fldt
mov
mov
aas
pop
addl
inc
or
repnz
xchg
jg
sub
pop
sbb
js
push
shl
mov
mov
stos
inc
clc
adc
mov
imul
mov
or
sbb
lahf
mov
fs
or
pop
mov
pop
sbb
sbb
and
or
lock
adc
pop
pop
cmp
cmp
adc
hlt
mov
insb
das
mov
test
jne
pop
shr
stc
xchg
mov
ret
js
adc
mov
call
and
mov
clc
icebp
iret
adc
jecxz
sub
cmp
xor
pop
shrl
shl
gs
subl
push
out
lods
test
xchg
pop
mov
adc
cmp
xor
nopl
push
adc
pusha
mov
pusha
jne
call
mov
hlt
ja
sub
add
lds
xchg
mov
pop
adc
test
xchg
add
fs
jns
xor
mov
or
xchg
test
hlt
mov
adc
adc
in
stc
xchg
arpl
and
pop
mov
rolb
fadd
daa
jbe
cld
sbb
dec
stos
push
out
mov
int3
sub
adcb
mov
sub
call
mov
add
and
aas
and
lea
cmp
xchg
movb
cwtl
popf
loop
sub
pop
sub
adc
mov
pop
sub
adc
lods
or
mov
dec
cwtl
mov
push
std
xchg
push
and
cmp
pop
push
je
dec
or
xchg
frndint
paddsb
jl
or
dec
dec
pusha
mov
popf
sar
cmpsl
decb
call
and
push
out
or
mov
lods
fstl
test
ja
xor
push
rcll
xchg
inc
call
ret
jo
fidivs
push
rorb
mov
jne
sbb
test
push
or
pop
pop
add
test
mov
incb
out
push
fisttps
cld
test
xlat
adc
pop
and
psubsb
xchg
incb
mov
test
inc
adc
movsl
imul
dec
xchg
loopne
mov
or
jge
negb
int3
cmp
outsl
ret
cld
and
scas
inc
notl
cmp
popf
je
sbb
notb
inc
mov
hlt
test
jl
repz
mov
cwtl
leave
rcl
pusha
mov
imul
call
in
fwait
add
jo
scas
pop
mov
ljmp
cmp
jmp
mov
sub
cmp
sub
mov
adc
inc
xchg
xchg
test
push
pop
pop
testb
arpl
hlt
jge
mov
add
lods
cld
imul
inc
stc
add
and
dec
or
mov
or
or
shrb
pop
leave
or
daa
cltd
flds
mov
push
add
sbb
scas
and
pop
lret
dec
or
filds
in
jbe
sub
data16
test
or
mov
enter
fdivrl
adc
push
sahf
or
in
dec
hlt
or
jne
mov
jle
mov
test
and
and
sub
nop
test
pop
enter
or
test
mov
ljmp
test
jle
xor
out
adcl
push
pop
inc
mov
loop
push
js
and
push
mov
clc
sbbb
xor
sub
add
insb
or
mov
je
or
je
add
cli
and
push
in
or
jge
adc
jmp
xor
lahf
cmp
adc
and
adc
aaa
lea
sub
mov
in
jl
movb
cwtl
test
mov
cmpsl
call
sub
jp
and
or
jmp
pop
push
in
stos
mov
mov
out
ljmp
sub
fsubrl
repz
sbb
rcrb
sub
xchg
add
dec
fistpll
dec
mov
push
frstor
movsl
adcl
push
cmp
stos
adcl
nop
mov
push
test
popf
sub
jb
es
mov
mov
popf
push
add
sbb
add
addr16
push
add
hlt
mov
xrelease
xchg
push
pop
mov
adc
stos
bnd
push
xchg
mov
mov
test
cld
push
push
inc
mov
jmp
test
gs
mov
je
orb
push
inc
jns
dec
or
or
movsb
lock
mov
mov
and
addr16
and
fnstsw
sarl
adc
insb
push
mov
cs
mov
pop
or
push
xor
pop
mov
add
and
packssdw
sub
rcrb
mov
scas
pop
jmp
stos
test
je
or
andl
adc
cmp
arpl
ljmp
xchg
xor
popf
addr16
mov
inc
outsb
daa
jo
push
daa
popf
pop
xchg
push
adc
add
and
push
idiv
push
rorb
push
subb
pop
xchg
jl
push
rcl
test
mov
stos
mov
aam
call
inc
xor
aam
repz
call
in
ljmp
jge
cmp
mov
lods
adc
rolb
test
std
sbb
nop
sbb
mov
mov
add
mov
das
lahf
xchg
jbe
inc
xor
enter
fs
shlb
ja
loopne
shrl
fisubs
add
les
mov
dec
shl
push
mov
icebp
nop
sub
in
shll
leave
clc
out
aad
and
mull
cwtl
movsb
pop
ret
add
mov
ds
sub
in
xor
sbb
rcll
inc
push
test
xchg
push
jg
sbb
rcll
jge
shl
mov
clc
dec
mov
xor
rclb
mov
outsl
dec
rol
test
xor
cmp
push
fdivrs
loopne
scas
xor
ss
push
pusha
aad
lods
pop
shlb
sub
mov
jo
mov
aam
push
mov
mov
adc
xchg
in
push
mov
sub
xchg
jge
lock
inc
add
scas
add
ds
negb
adc
stos
sarb
in
pusha
add
push
loopne
mov
jo
cli
in
das
addr16
mov
test
mov
xor
call
js
and
mov
scas
mov
imul
mov
popf
push
movsb
push
in
and
mov
rorl
fmuls
shl
mov
dec
in
push
mov
nop
push
pop
and
inc
ljmp
fs
decb
inc
inc
in
lods
and
lds
xchg
inc
hlt
mov
cld
and
in
mov
test
mov
faddl
je
mov
mov
out
or
push
sbb
mov
xor
out
inc
pusha
loope
mov
cltd
and
adc
add
sub
cmp
sbb
pop
push
subl
fadd
loope
xor
mov
push
add
hlt
mov
xlat
je
pop
add
cmp
pop
cs
adc
cmp
add
int3
aas
add
mov
mov
sbb
lret
fistpl
adc
mov
mov
lret
test
push
inc
lods
pop
jae
cmpsl
xlat
adc
mov
fisttps
push
call
jl
pusha
sbb
shll
in
push
xor
ret
xor
and
mov
pop
xor
test
add
and
in
and
cs
cmp
push
mov
xchg
xor
adc
mov
pop
cmp
dec
mov
inc
jp
jo
xor
or
lods
les
out
add
outsb
mov
orl
add
ret
in
test
pusha
jl
push
jae
hlt
cli
add
fistpll
and
fstl
mov
push
xlat
sub
or
pushf
popf
jo
mov
fadds
push
cmp
test
repz
sbb
filds
ffreep
fdivrs
pushf
je
push
fimull
and
out
inc
pushf
popf
fiaddl
inc
cmp
and
cli
ret
andl
in
loopne
and
xlat
repnz
cmpb
call
fs
call
inc
push
fwait
push
call
mov
test
cmp
js
je
mov
les
or
push
in
ret
inc
orb
jb
inc
js
xchg
jmp
mov
mov
or
adc
sub
xorl
lods
add
sbb
enter
das
ret
les
jl
pop
jne
rolb
test
scas
or
push
jb
sub
mov
mov
testl
mov
nop
xchg
sub
push
roll
or
fcoml
jnp
mov
arpl
cmp
orl
pop
xchg
sub
loop
mov
mov
aad
pop
loope
mov
mov
mov
enter
jecxz
insb
out
push
icebp
cmp
in
add
sub
mov
jg
add
xchg
jg
dec
mov
enter
cs
dec
stos
shr
sti
push
add
shl
testl
pop
add
push
push
clc
aaa
stos
hlt
lods
pusha
pop
adc
movsl
repz
mov
jnp
scas
in
or
dec
add
repz
pop
and
xor
xchg
loopne
xchg
add
sti
jge
and
test
lock
js
ja
hlt
or
lods
je
jmp
fwait
jbe
sub
gs
sbb
loopne
mov
jbe
icebp
push
add
sti
lods
inc
dec
adc
push
and
xchg
mov
stos
push
mov
cmpb
push
dec
loopne
dec
stc
inc
or
inc
add
or
fs
dec
mov
out
add
fcmovnbe
or
cmp
add
lds
out
fists
rcrb
sbbl
jmp
cld
adc
subb
ret
insl
daa
or
daa
cld
inc
ret
sub
adc
push
lret
out
cmpl
lods
loope
mov
xchg
jge
adc
enter
stc
cmp
or
and
and
les
sub
adc
mov
jmp
hlt
jae
inc
hlt
mov
fcoms
call
push
shll
movsb
test
add
sub
adc
add
test
test
cmp
repz
xchg
xchg
rcl
add
shr
repnz
idivb
movsb
adc
aaa
add
hlt
je
sbb
cli
jns
mov
and
sub
dec
sbb
lahf
je
addr16
aam
call
and
or
pusha
pushf
negl
dec
inc
add
adc
dec
and
test
daa
pop
std
pop
cwtl
daa
pusha
lock
pusha
psubb
inc
adc
aam
add
dec
bnd
in
arpl
in
mov
xchg
jg
shlb
or
adc
insb
jp
call
repnz
jl
and
and
mov
mov
cmp
pop
movsb
pop
add
shlb
pop
call
fs
adc
lcall
adc
std
cwtl
dec
mov
subb
in
or
fisubs
mov
mov
adc
sub
lods
add
hlt
pop
lret
mov
xlat
add
call
sbb
movsl
clc
push
scas
push
push
stos
xchg
xchg
fldl
push
and
out
push
pop
mov
aaa
fs
daa
xor
or
push
pop
sbb
push
and
xor
das
push
in
lock
pushf
in
scas
mov
rorb
and
movb
xchg
add
mov
mov
or
sub
adc
mov
into
rolb
or
mov
out
add
and
dec
pminsw
movsb
add
and
push
je
mov
fwait
loopne
sti
push
mov
lods
cmp
add
jp
pushf
xchg
inc
test
andb
inc
cli
pop
push
test
push
test
data16
stos
cmp
fs
xor
test
mov
cli
and
stc
dec
or
jmp
pop
and
aam
add
enter
xchg
push
or
aaa
push
ljmp
jnp
jns
test
mov
out
push
out
xorl
orl
mov
add
push
jns
sub
add
std
push
mov
daa
es
or
jne
pop
inc
lcall
bound
incb
movzwl
mov
jns
fisubs
inc
inc
int
sti
and
andps
mov
mov
mov
fsubr
sbb
shrb
aam
nop
mov
mov
nop
mov
mov
and
sub
hlt
loope
rorb
cmp
fs
xchg
push
shlb
in
fsubs
dec
loopne
enter
je
xchg
inc
or
mov
ret
dec
inc
add
fwait
or
adc
jmp
aam
xchg
ss
scas
add
push
call
icebp
mov
test
mov
jo
and
xchg
push
rolb
movsb
sbb
jmp
pop
in
inc
mov
fnstsw
push
adc
bound
lahf
je
sar
jae
or
sbb
aas
cmp
addb
jae
es
shll
push
cwtl
sti
inc
cld
jmp
cld
mov
movsb
jle
add
lods
invd
xor
je
add
andl
mov
mov
or
enter
int3
iret
stos
scas
aam
lahf
push
icebp
nop/reserved
push
movsb
push
xchg
jae
cmpsb
loopne
pop
jge
call
in
jp
mov
jle
adc
repz
lods
add
or
or
push
or
add
inc
jns
mov
lahf
dec
clc
movsl
cwtl
mov
andb
mov
sbb
lods
xlat
dec
jb
lahf
cmp
insl
adc
stos
ret
push
push
mov
inc
inc
movsb
je
jb
pop
mov
add
mov
outsl
adc
cmp
not
call
and
xchg
fwait
das
jg
in
in
xor
push
mul
aas
pushf
jge
fucomip
in
push
pop
mov
lods
lea
std
pop
cmp
cmp
mov
js
arpl
sub
add
test
mov
stos
aaa
cmpl
pusha
movsb
fs
inc
aad
rorl
pop
rcrb
in
mov
in
mov
sub
mov
daa
fistpll
lods
add
stc
repz
xlat
je
je
clc
adc
in
dec
cmp
ficoms
test
add
jl
rcrl
loopne
sbb
cmp
xchg
filds
jge
insl
and
sbb
push
dec
enter
insb
inc
inc
cmpxchg
mov
popa
movaps
xchg
adc
xchg
inc
fisttps
push
repnz
jp
or
add
mov
adc
aam
andb
test
add
lahf
lahf
mov
jo
mov
psubb
in
inc
fsubr
sbb
xchg
mov
icebp
test
inc
repz
test
fwait
sbb
pop
push
loope
rep
loopne
jae
add
mov
and
in
repnz
iret
subb
cmp
and
nop
fsubl
fldpi
sbb
dec
jle
les
push
adc
jl
xor
insb
insl
mov
fstl
out
loopne
incb
sahf
dec
pop
jno
cmp
adcb
lahf
test
xchg
cmp
push
jmp
adc
cmc
sbb
jp
push
or
xlat
daa
mov
test
push
xchg
jge
push
in
dec
movsb
fs
mov
out
mov
inc
xor
mov
fadd
scas
cltd
loope
or
sub
push
push
mov
sub
ljmp
mov
mov
inc
mov
mov
in
mov
and
sub
dec
shlb
ljmp
pop
sarb
add
fcoms
int3
les
jge
mov
je
push
xor
in
jge
ror
pop
faddl
pusha
cld
sub
in
dec
xor
loope
out
mov
or
lea
jo
adc
jg
sbb
js
imul
jo
into
adc
push
popa
sbb
dec
mov
outsl
loope
xchg
or
jge
popf
jle
or
sti
incl
dec
push
cmp
adc
pop
decl
push
sub
inc
sub
imul
jbe
orl
mov
cld
xor
ret
cmp
rorb
add
mov
add
cwtl
rorb
dec
and
in
cwtl
sbb
add
mov
inc
xorb
sti
paddusw
xchg
add
push
push
sti
scas
mov
sbb
stos
add
jo
add
fwait
push
jne
push
nop
push
or
add
shl
sub
fdivr
or
call
xor
cld
and
xchg
cltd
mov
pop
test
xor
add
lds
and
add
subl
loop
cmp
add
mov
sub
or
pop
enter
push
mov
leave
out
add
xor
xor
es
adc
mov
mov
pop
fdivr
push
add
in
xor
fists
jns
in
add
in
and
leave
cwtl
xor
movsb
test
pop
pop
stos
aaa
call
mov
lea
and
cltd
popa
pusha
out
nop
mov
aad
pmaxub
jns
jl
cmc
xor
call
js
outsl
add
dec
movsb
mov
push
repnz
cmp
sbb
adcl
sub
push
loope
in
call
loopne
clc
scas
add
adc
inc
ret
pusha
xor
xchg
mov
fiadds
dec
test
add
xorb
fldcw
repnz
dec
or
and
cld
mov
addb
sbb
sub
ficomps
subb
adcb
cmp
lock
xchg
pop
inc
lea
and
jne
fisubrs
lock
cmp
mov
sub
and
cld
push
sub
or
and
addr16
es
xor
and
ret
adc
shrd
loope
enter
popa
mov
fdivr
cwtl
loopne
push
and
jl
xorl
adc
lock
add
ror
and
dec
cs
cwtl
movsl
decb
clc
push
jo
cmp
scas
cwtl
sub
add
cld
js
xchg
cmp
and
lock
fs
lcall
mov
enter
add
mov
sbb
in
lods
repnz
mov
mov
cli
add
xchg
pop
fs
test
adc
shlb
add
lock
xor
and
rol
fmuls
push
or
xor
scas
push
rclb
mov
xor
add
dec
les
adcl
pusha
dec
out
movsb
push
jbe
popa
test
clc
cmp
adc
pop
and
rcrb
or
and
dec
loopne
mul
or
add
push
decl
add
push
call
pop
in
sbb
fisubs
push
gs
bound
cmp
fcoml
in
mov
dec
or
ror
or
movsb
in
cmp
xor
mov
inc
fbld
push
fstpl
cmp
movsb
in
lahf
ret
xchg
fbld
sbb
or
or
inc
dec
outsl
add
cmp
adcb
sahf
xchg
pushf
mov
call
lcall
rorb
sub
xor
push
rorb
das
xchg
nop
sub
gs
sub
je
rcll
inc
push
jne
xchg
or
mov
mov
cltd
fisttps
ja
enter
rolb
xchg
test
adc
dec
out
cmp
sbb
push
ficoml
and
das
in
out
addl
mov
and
mov
std
pusha
aas
inc
out
sub
ret
pop
xchg
lock
xchg
push
test
in
sub
shl
add
or
shlb
nop
cld
and
rorb
loopne
int3
and
into
pusha
mov
push
xor
clc
imul
mov
lock
dec
sbb
mov
mov
push
or
sbb
xor
cmp
inc
sbb
jl
adc
cmp
adc
ret
mov
and
cmp
ds
cmp
addb
pop
pop
lock
push
les
add
add
mov
jnp
mov
mov
mov
sub
inc
in
push
insb
push
pop
rep
mov
enter
jbe
inc
mov
add
scas
pop
fcomp
jle
jno
pop
in
and
adc
loop
enter
mov
sahf
je
imul
add
call
imul
sub
cmp
clc
mov
roll
jne
xor
in
or
mov
int3
jge
push
sbb
add
mov
leave
jo
sbb
shll
or
insb
je
sub
cs
rorb
or
xchg
inc
enter
pusha
mov
dec
dec
cwtl
call
mov
xor
add
repnz
jl
xchg
inc
push
pop
int3
xor
mov
popa
fmuls
in
incl
sub
and
xor
sarl
add
or
dec
loopne
add
push
mov
or
nop
pop
and
in
es
jne
and
not
movsl
test
imul
dec
mov
mov
loop
inc
mov
gs
popf
and
inc
enter
dec
add
or
and
cwtl
push
or
cmp
incl
call
mov
insb
jne
gs
sbb
sbbb
push
push
inc
adc
jle
add
in
shrl
enter
jg
and
cmp
push
andb
push
mov
hlt
frstor
adc
xor
add
mov
adc
add
adc
mov
je
inc
mov
imul
faddl
or
popf
add
stos
pop
ret
inc
jo
mov
sbb
outsb
cld
add
loop
xor
shrl
subl
mov
push
or
incl
ljmp
pop
and
cld
xor
pushf
cmp
lock
rcrl
clc
cld
imul
ret
enter
push
cwtl
in
cmp
pop
push
inc
add
call
add
loopne
in
add
sub
mov
mov
sbb
adc
or
cmp
lcall
push
dec
enter
das
sbb
xchg
stos
push
push
mov
scas
cld
lock
fistpll
lret
shl
and
adc
pop
push
jl
das
add
inc
fisttpl
jl
inc
orl
add
hlt
push
jmp
adc
enter
mov
mov
mov
fs
je
orb
or
test
fistl
add
push
ja
icebp
jae
sbb
pop
pop
sbb
aad
sbb
or
jge
out
and
ljmp
pop
pop
daa
loop
jne
jl
cmp
jle
pop
mov
stos
nop
cmp
or
les
add
cmp
cs
or
stos
jge
dec
sarb
sub
je
mov
aas
dec
ds
or
mov
mov
pop
and
ss
cmp
fsubs
adcb
push
cli
pusha
pop
dec
add
cmp
fsubl
push
ja
pushf
and
push
xor
cli
fs
jne
and
int3
jo
sub
test
adc
add
jne
xchg
sar
pop
pusha
push
pop
xchg
enter
nop
dec
hlt
insb
dec
in
js
xor
je
js
pop
sub
ret
mov
and
jno
into
nop
or
idiv
in
cmp
dec
fadds
pop
mov
add
stc
xchg
xor
cmp
jne
lods
lods
add
mov
mov
sbb
add
fldt
mov
pusha
cmp
and
sahf
jecxz
pop
and
test
or
push
jae
cld
je
call
add
sbb
inc
pop
mov
jbe
pusha
popl
mov
mov
inc
loopne
xor
cmp
add
mov
out
hlt
pop
es
movsb
cmp
pop
movsb
int3
je
test
out
mov
jbe
xchg
or
shr
add
lock
mov
add
icebp
out
sub
adc
mov
mov
lock
lea
cltd
nop
cmp
adcb
stc
inc
push
nop
pop
push
cmp
enter
jo
mov
loopne
ljmp
popf
xor
call
push
push
imul
or
mov
popf
xor
dec
pushf
scas
mov
or
daa
notl
test
not
fs
repnz
add
out
sbb
mov
sbb
cmp
jno
jg
outsb
or
dec
or
jg
rclb
add
and
roll
in
cmp
or
jl
mov
mov
xchg
adc
call
add
push
xor
xchg
nop
sub
test
cmp
iret
push
rclb
jge
xor
adcb
inc
add
mov
fdivp
ret
pop
add
add
pop
enter
add
dec
cli
clc
or
lret
jmp
icebp
filds
push
insb
pop
mov
test
inc
adc
cmp
imul
mov
sar
call
mov
js
fsubrs
movb
xor
scas
xchg
xor
xchg
faddl
fmul
enter
push
mov
pop
test
fstpl
enter
mov
push
and
or
outsb
test
mov
hlt
jne
mov
xchg
mov
and
loopne
and
mov
in
pop
mov
lock
push
mov
lods
adc
mov
xor
inc
adc
cmp
add
jge
mov
mov
scas
pause
add
dec
push
shr
pop
and
xor
jo
adc
jne
inc
add
loopne
outsb
icebp
dec
pushf
pusha
test
inc
ja
pop
and
pusha
lahf
adc
and
jae
loopne
nop
rcrb
add
inc
enter
in
or
cmp
sbb
adc
insb
add
subb
fcompl
aas
fidivs
imul
pop
rep
enter
dec
lea
and
addr16
sbb
and
mov
les
nop
call
mov
cmp
mov
mov
rcrb
bound
adc
leave
loopne
outsl
add
icebp
sarl
lods
add
loop
test
incl
clc
adc
clc
in
cld
nop
ret
mov
xor
hlt
bound
sub
adc
jle
fs
inc
sub
call
push
jo
or
inc
fsubs
push
fcmove
mov
fs
shlb
sub
and
push
pop
outsl
mov
push
loope
subb
je
shr
jge
mov
inc
clc
gs
add
scas
xchg
jl
inc
subl
test
out
adc
fst
sbb
sti
cli
sub
rolb
push
mov
or
movsb
inc
pop
push
icebp
hlt
cmp
mov
push
sbb
or
or
insb
adc
decl
jo
xchg
cmp
xchg
push
insb
call
xchg
sbb
mov
cmp
cwtl
adc
js
jge
in
sbb
and
test
pop
ror
mov
push
popf
pop
mov
and
mov
dec
daa
inc
sbb
push
dec
add
pop
mov
sub
rol
push
lods
subb
outsb
cmp
adc
mov
in
mov
pop
jmp
and
insb
clc
or
inc
pop
hlt
pop
mov
jg
mov
test
in
test
pop
fcoml
in
out
bswap
rclb
outsl
add
addl
pop
adc
mov
loopne
mov
mov
lds
or
shll
call
xor
and
test
push
fsubl
nop
or
test
xor
or
in
and
hlt
or
add
adc
cwtl
xor
mov
lock
mov
fcompl
jle
cmpb
rolb
mov
pop
pop
mov
loopne
inc
mov
or
out
jnp
dec
add
mov
cmpsb
mov
adc
mov
add
in
es
push
mov
repz
leave
fdivrs
adc
nop
movsb
adc
add
mov
daa
push
insb
add
ficoml
and
push
movb
pop
pop
leave
clc
pop
pop
test
andb
pop
cld
mov
cwtl
in
movsb
jp
mov
sub
mov
call
clc
and
mov
push
cmpsb
call
test
cmp
fidivs
mov
push
pusha
or
jns
into
fisttps
out
push
loop
or
mov
lea
test
cmpl
jne
sbb
adc
fsubr
sar
testl
fcompl
decl
shlb
out
xor
push
jne
dec
mov
mov
add
repnz
pusha
stc
outsb
add
inc
push
test
add
inc
cld
inc
les
lret
cmp
out
and
call
movsb
mov
adc
push
adc
mov
cmp
add
lock
aam
insb
push
inc
mov
and
add
icebp
mov
pop
mov
push
insl
push
xchg
pop
sub
lahf
push
xchg
imul
push
hlt
popf
shl
cmp
ret
daa
dec
hlt
pop
fmuls
and
jmp
faddl
cmpsl
rcrb
push
shl
cmp
add
inc
call
jns
mov
add
mov
rorb
mov
cmpsl
mov
fsubrs
fs
mov
or
push
jns
in
clc
inc
nop
outsb
test
and
dec
sbb
scas
xchg
or
pop
cmp
enter
xchg
lods
pusha
jne
jne
pop
pop
xor
cmp
or
adc
mov
pop
add
dec
or
add
mov
in
gs
setl
sub
stos
xchg
daa
xor
fmul
aas
std
pop
mov
cmpsl
lock
mov
rcr
jge
orb
lret
ffree
xchg
xor
xchg
sub
and
and
adc
push
stos
adc
lea
pop
push
sbb
cmp
pop
insl
ror
push
xor
dec
add
mov
inc
pop
movsl
jae
or
hlt
loope
adc
hlt
jns
or
pop
sbb
clc
icebp
push
pop
jno
xor
inc
rolb
mov
loop
fldl
mov
fdivr
inc
add
adc
stc
in
loope
push
shll
cmp
push
add
jg
std
xchg
lock
sub
add
sub
mov
stos
mov
cli
mov
lods
mov
rcrl
hlt
jno
pminsw
je
jae
call
sub
adc
pop
test
inc
imul
inc
int3
jae
dec
cmp
push
sub
leave
les
mov
dec
cld
sub
mov
push
pop
in
pop
add
aad
fisubs
adc
inc
in
pop
mov
fsubl
mov
cmpsb
aad
push
and
add
push
jb
pop
lock
xorl
add
iret
test
add
and
sbb
inc
add
mov
or
addr16
movsl
and
mov
lods
sbb
dec
arpl
out
es
adc
and
adcb
or
cli
shlb
mov
jbe
or
ss
sub
adc
xchg
adc
add
jmp
sub
loopne
jne,pt
push
add
mov
es
in
pusha
repnz
leave
loop
mov
mov
dec
pop
adc
xor
jecxz
inc
mov
jo
cli
mov
cmp
adc
cmp
push
jns
adc
cmp
je
mov
sub
lods
cmovg
or
cmp
popa
mov
sbb
loope
xor
xchg
push
dec
test
je
dec
sbb
movsb
pop
jmp
mov
test
pop
push
mov
sub
test
and
xor
inc
je
sbb
or
push
pop
mov
jno
adc
push
clc
mov
sub
jmp
shrl
pop
fs
inc
jecxz
mov
push
dec
or
dec
push
dec
test
add
mov
xchg
jbe
cmp
pop
jae
pop
mov
pop
or
pusha
test
call
adc
or
and
je
mov
sbb
pop
loopne
addb
mov
jle
or
imul
daa
add
ret
hlt
arpl
or
sub
pop
call
lcall
mov
jge
fcoms
call
xor
jo
xchg
movsb
cmpl
add
dec
jecxz
add
hlt
xchg
xor
mov
mov
mov
pop
xor
enter
clc
mov
mov
sarb
out
xor
mov
xchg
js
jne
es
mov
repnz
xchg
jge
sbb
mov
inc
adc
movsl
cmc
rcrb
scas
sarb
inc
jnp
sbb
sub
sbb
clc
add
sbb
pushf
inc
add
adcb
test
rolb
nop
xor
jmp
jo
add
idivb
inc
insb
xchg
rol
mov
das
jmp
pop
mov
in
ds
lods
xchg
mov
xor
mov
xchg
test
xchg
inc
inc
push
sub
add
inc
adc
adc
andl
pop
cld
dec
scas
inc
sbb
mov
inc
les
pandn
inc
and
sbb
sbb
test
adc
or
adc
and
test
int3
xor
mov
repnz
adc
pop
adc
inc
push
arpl
orl
cmp
aaa
inc
xor
jnp
and
sbb
pop
adc
pop
dec
adc
dec
fs
or
dec
repz
add
daa
sub
fildll
fisttpl
xlat
dec
rcll
mov
sub
and
mov
mov
ret
push
lds
and
fwait
inc
xchg
xchg
mov
adc
jg
jnp
ja
jae
adcl
adc
sub
xor
or
pop
lcall
test
scas
inc
stos
cmpsl
enter
sub
daa
inc
and
mov
adc
and
dec
setno
and
inc
add
outsb
xadd
out
inc
jmp
int3
stc
rcll
lods
int3
dec
test
xor
rcll
mov
cs
mov
mov
scas
mov
dec
lahf
xchg
fwait
and
mov
xchg
dec
jg
jnp
ja
mov
sbb
or
inc
inc
mov
adc
and
dec
xor
daa
dec
push
adc
mov
or
mov
adc
and
pop
loop
or
inc
adc
les
decl
or
or
mov
adc
xor
cmp
dec
fildll
fcmovne
or
xchg
rcl
inc
xor
adc
and
mov
mov
scas
mov
dec
lahf
xchg
fwait
and
ds
inc
mov
xchg
xor
adc
mov
sbb
xchg
dec
and
xor
and
dec
pop
xchg
sbb
pop
inc
adc
into
push
es
adc
or
sbb
ja
frstor
xor
add
or
xchg
out
jecxz
mov
adc
xor
test
or
jge
cld
mov
repnz
lahf
sbb
pop
int3
sbb
adc
jnp
and
cltd
push
sub
or
adc
or
movsl
xor
popf
adc
mov
cltd
or
es
or
mov
adc
and
inc
test
sti
or
notl
jmp
mov
adc
movsb
shlb
dec
xor
xor
dec
mov
adc
xchg
mov
fwait
adc
xor
add
and
fiaddl
enter
aad
shll
pop
pop
or
mov
dec
and
dec
inc
xchg
aas
and
inc
aaa
xor
daa
dec
and
pop
adc
pop
dec
add
testl
jecxz
filds
mov
adc
and
dec
xchg
ret
and
mov
enter
cmpsl
xchg
mov
adc
arpl
or
xchg
jnp
in
and
outsw
sbb
inc
arpl
stos
and
or
lcall
ja
jae
pop
adc
and
dec
adc
adc
and
or
dec
notl
jmp
mov
pop
adc
shll
lret
dec
xor
iret
repnz
adc
xchg
or
dec
xor
or
xchg
and
jg
adc
inc
push
jae
outsl
adc
or
pop
mov
push
and
dec
dec
xchg
dec
and
fmuls
adc
or
mov
adc
and
dec
sbb
ud2
mov
and
or
testl
inc
out
mov
adc
and
dec
rcll
push
mov
xchg
mov
scas
inc
stos
cmpsl
mov
int3
adc
adc
xchg
jg
jnp
ja
mov
imul
sarl
mov
push
and
dec
dec
xchg
dec
and
inc
aas
mov
adc
and
dec
popf
imul
mov
and
or
sbb
insl
jle
enter
popa
adc
or
jmp
out
enter
hlt
and
fs
or
dec
in
xor
fcomps
aam
or
and
sbb
or
mov
mov
lods
and
dec
movsb
mov
or
out
cwtl
or
mov
adcb
rorl
mov
dec
lods
xchg
test
popf
mov
dec
lea
cmpl
jno
insl
mov
adc
pop
dec
push
xchg
push
and
dec
inc
mov
cmp
xchg
xor
sub
and
sbb
xchg
adc
or
add
std
in
or
xchg
cmc
and
inc
in
jmp
and
dec
fsts
int
mov
adc
and
dec
mov
inc
lods
test
and
dec
cltd
xchg
xchg
and
test
andl
cli
and
dec
popa
xchg
pop
and
push
push
mov
dec
and
dec
inc
xchg
cmp
xor
and
and
inc
adc
clc
xchg
add
or
mov
adc
and
dec
in
loope
fldl
mov
adc
and
dec
lds
mov
lods
and
dec
movsl
xchg
mov
xchg
mov
dec
test
jns
mov
insl
das
shll
gs
popa
pop
mov
push
and
dec
dec
xchg
dec
and
inc
cmp
and
dec
sub
inc
and
and
inc
cs
or
cltd
add
std
sbb
xchg
or
and
inc
in
jmp
and
dec
fsts
int
mov
adc
and
dec
mov
and
inc
bound
push
dec
push
xchg
and
lea
and
test
int3
sub
or
mov
adc
sub
or
popa
and
pop
push
mov
or
dec
push
or
es
and
cmp
xchg
xor
sub
and
sbb
xchg
adc
or
add
std
push
add
and
dec
icebp
xchg
in
and
inc
in
mov
adc
and
dec
rorl
and
or
mov
dec
movsl
xchg
mov
xchg
mov
dec
test
jns
mov
insl
das
shll
gs
popa
pop
mov
push
and
dec
or
jmp
or
and
add
sub
or
mov
dec
and
adc
or
pusha
inc
stc
cmc
mov
adc
and
dec
in
loope
fldl
mov
adc
and
dec
lds
mov
lods
and
dec
movsl
xchg
mov
xchg
mov
dec
test
jns
mov
insl
das
shll
gs
popa
pop
mov
push
and
dec
dec
xchg
dec
and
inc
cmp
and
dec
sub
inc
and
and
dec
or
add
std
add
stc
and
dec
icebp
xchg
in
and
inc
in
mov
adc
and
dec
rcll
mov
dec
mov
lods
and
popf
adc
xchg
lea
mov
mov
jns
jne
jno
insl
jle
adc
pop
dec
pop
xchg
push
and
dec
dec
mov
inc
and
dec
cmp
sub
and
and
inc
or
add
std
add
dec
cmc
xchg
icebp
and
inc
jmp
frstor
dec
aad
rcll
and
and
sbb
adc
xor
mov
clc
and
hlt
inc
icebp
in
mov
adc
and
dec
fcoml
ror
mov
adc
and
dec
mov
inc
mov
mov
fmulp
push
mov
bound
push
inc
adc
mov
mov
aas
jne
sub
test
and
xor
negl
shrb
hlt
int3
outsl
sbb
loope
pop
ret
cmc
addb
nop
stc
rorl
je
lods
sub
frstor
and
mov
imul
es
or
xchg
dec
push
xorl
mov
ja
loopne
push
popf
out
mov
insl
cmp
pop
dec
xchg
cmp
inc
nop
stos
mov
rcll
sub
ret
in
jae
and
mov
sbb
addb
aas
loope
and
add
jae
loope
out
iret
gs
and
dec
pop
ret
push
pshufw
call
mov
js
and
outsb
adc
and
outsl
test
test
sub
jns
or
xor
push
push
int3
mov
pop
arpl
rcrb
cmp
jge
mov
call
insb
adc
inc
adc
or
mov
inc
mov
add
mov
sbbl
enter
mov
rcr
insl
push
test
xchg
pop
sub
and
lock
push
xor
ret
jo
jmp
sub
sbb
psubsb
jl
test
incb
call
mov
xor
popf
xchg
cld
xchg
sbb
and
rcrb
inc
fimuls
mov
ret
call
sbb
mov
cmpsb
add
and
cmp
outsl
and
and
lods
xchg
push
adc
inc
sbb
jmp
into
inc
test
and
or
push
test
sbb
mov
xor
mov
sbb
pusha
xchg
mov
jae
push
adc
xchg
mov
push
add
add
mov
add
imul
push
push
fcomps
push
imul
and
pop
fsubrs
test
je
lock
popf
js
ss
and
push
adc
daa
cmp
mov
call
lods
shlb
in
out
and
add
adc
js
call
lock
xchg
cwtl
cmp
push
dec
mov
and
inc
dec
and
push
adc
or
push
add
out
cmp
xor
fwait
lock
icebp
popa
sti
call
or
je
sub
or
adcb
jl
decl
and
cwtl
bound
out
cmp
push
ljmp
inc
std
addr16
push
test
jge
and
mov
enter
lods
and
or
call
sbb
insb
stos
test
maskmovq
divl
pushf
dec
mov
and
mov
inc
push
test
sbb
and
adc
aad
cltd
sub
push
test
dec
mov
cltd
sub
repz
and
dec
popa
add
outsb
xchg
xor
or
outsl
xor
loop
sbb
xor
bound
imul
push
dec
xor
out
arpl
fwait
xchg
or
inc
out
inc
data16
cmc
cli
xor
sub
push
and
mov
dec
test
std
cltd
xchg
sbb
push
jo
push
pop
push
aad
sub
or
leave
push
fs
mov
xchg
pushf
add
add
out
out
or
test
fimuls
cmp
ds
sub
lock
test
std
add
add
and
cltd
or
icebp
jp
pop
das
stc
test
lahf
orb
cld
fs
sub
gs
pushf
les
and
aad
add
ret
or
xchg
jne
and
mov
das
push
cmp
sub
or
jecxz
loope
stc
dec
hlt
inc
mov
and
sbb
insb
mov
push
mov
cmp
icebp
aaa
dec
push
jo
push
int3
sti
pusha
sbbb
push
lods
push
adc
movl
xchg
pop
es
push
out
ret
dec
insb
cmp
out
add
fidivs
mov
sub
mov
sbb
sbb
and
popf
inc
sub
test
clc
adc
add
adc
js
and
test
pop
fs
inc
rolb
popa
add
test
inc
jo
adc
ss
lock
jl
and
xor
cli
xchg
jo
test
call
jo
pop
adc
push
mov
and
xchg
mov
pusha
sarl
cwtl
sarb
push
push
enter
mov
bound
lahf
jle
notb
out
inc
insb
push
and
mov
adc
loop
mov
lods
and
sub
and
jmp
xchg
xor
rcll
pop
push
mov
clc
hlt
stc
shll
es
push
inc
fs
or
xor
cli
inc
mov
imul
cmpsb
mov
jae
scas
arpl
push
loope
xchg
ret
pop
pushf
test
mov
add
mov
inc
int
adc
movsb
mov
movsl
sub
ds
inc
lock
inc
clc
xor
inc
clc
cs
inc
clc
sub
inc
clc
es
dec
clc
and
dec
clc
push
clc
dec
clc
sbb
dec
clc
push
clc
or
adc
or
push
clc
or
lret
jecxz
jl
adc
adc
fildll
sub
loopne
sbb
jge
js
add
push
or
adc
and
bound
or
test
xchg
mov
or
rorl
in
xchg
ret
push
nop
sbb
sub
cmp
sbb
clc
or
test
pop
clc
and
mov
imul
inc
inc
add
sbb
call
dec
cmp
mov
cmp
cmp
mov
mov
sub
push
or
bound
aaa
sub
inc
push
inc
adc
xchg
je
notl
mov
outsl
pop
add
jnp
pop
lock
xchg
pop
mov
or
adcb
jns
inc
movsb
dec
cwtl
pushf
xchg
adc
es
or
hlt
dec
sbbl
xor
repnz
shr
insl
call
cmp
adc
mov
cmpsb
jae
insb
test
cli
js
sub
test
dec
repnz
inc
cmp
out
pop
pop
adc
add
adc
mov
push
jg
pusha
inc
call
inc
xor
adc
sbb
push
add
mov
push
pusha
dec
fcoml
or
in
adc
adc
push
aad
int
sub
or
push
lods
notb
je
jle
push
sub
pop
sub
add
jae
mov
add
es
add
out
pop
mov
inc
sbb
add
repnz
and
pop
cli
outsl
cmp
stc
jno
sbb
pop
std
xchg
and
fs
push
mov
push
sbb
daa
push
lock
sub
cltd
xor
sub
adc
testb
mov
repnz
and
fs
push
dec
mov
or
imul
add
call
in
pusha
sbb
dec
mov
add
cmp
add
bound
sbb
xchg
and
ret
or
jg
inc
xchg
sbb
cmp
dec
adc
fildl
movsl
push
fwait
stc
sub
inc
xchg
jmp
mov
jbe
sub
push
gs
addr16
mov
add
push
push
xchg
mov
daa
sub
pop
les
mov
sub
dec
clc
fs
or
jge
lea
popf
inc
stos
lds
add
xchg
inc
and
outsl
test
rorl
mov
das
inc
orl
and
dec
fstl
sub
std
dec
hlt
in
ret
mov
and
inc
xchg
icebp
fimuls
mov
cmp
or
int3
sbb
adc
imul
out
add
adc
or
aas
mov
popa
and
dec
adcl
adc
and
dec
decl
and
push
arpl
add
mov
adc
or
and
dec
testl
mov
xchg
and
dec
mov
inc
in
mov
mov
imul
dec
dec
push
xchg
arpl
add
lds
mov
inc
mov
imul
dec
mov
or
sbb
xchg
or
xor
jns
and
leave
inc
lods
popf
mov
dec
dec
xchg
cmp
stc
or
orl
adc
and
dec
add
or
and
test
imul
inc
xchg
cmp
or
adc
and
dec
mov
inc
mov
or
inc
lcall
jb
or
xchg
imul
adcl
or
das
int3
or
insl
xchg
pop
and
xor
mov
pop
call
xchg
or
and
mov
jge
imul
shlb
mov
or
aaa
adc
and
dec
add
xlat
and
inc
test
outsl
and
dec
aas
xchg
sub
mov
mov
mov
adc
and
inc
mov
or
imul
add
dec
fwait
inc
pinsrw
nop
or
or
mov
dec
xchg
xchg
andl
mov
dec
add
xchg
or
and
inc
mov
mov
adc
test
dec
sbb
xor
and
inc
lea
sbb
mov
or
movsb
aaa
or
mov
mov
shrb
mov
and
dec
jae
popa
and
aas
das
mov
cltd
cltd
mov
xor
or
inc
aad
mov
adc
xor
or
es
jle
lcall
mov
dec
pop
xchg
dec
and
inc
and
in
iret
and
dec
fwait
xchg
mov
jae
in
shll
or
cltd
jp
outsb
xchg
or
data16
xchg
or
sbb
mov
jle
movsb
xchg
xorb
or
jns
push
push
inc
rorb
and
push
shlb
xchg
sub
sbb
xchg
dec
jo
mov
inc
aas
jb
mov
popa
add
pushf
pop
add
fisttpl
arpl
xchg
fmull
ret
sbbb
cmp
push
and
xor
mov
arpl
insl
flds
inc
js
adc
jb
jmp
cwtl
outsl
add
inc
or
popa
shl
inc
add
mov
jno
push
dec
outsl
outsb
int
sbb
pusha
jl
add
out
push
dec
cmp
push
add
pushf
rolb
mov
mov
mov
fadd
jne
push
into
in
outsb
int
pusha
push
sub
mov
fdivrp
imul
dec
gs
add
jne
aad
jge
sbb
loope
sbb
jo
pop
sahf
inc
fmuls
push
dec
lret
cmp
pop
lods
push
shlb
inc
pop
jbe
or
and
repnz
sbb
jb
push
sub
flds
sbb
push
fistpl
add
inc
loope
xchg
hlt
push
lahf
dec
jo
mov
roll
xchg
pusha
fisubl
inc
insb
fmuls
add
or
and
add
fimuls
inc
cmp
and
xchg
arpl
xchg
inc
int3
mov
jb
les
lret
mov
push
jo
sub
arpl
xor
jns
repz
sub
int
or
inc
adc
adc
nop
adc
adc
rcrb
jae
scas
add
stos
add
lmsw
or
stos
icebp
pop
inc
in
lock
inc
adc
adc
add
outsb
jae
fdivrs
into
paddusw
or
fs
mov
and
fbld
fistl
sbb
aaa
add
adc
lock
mov
pushf
jns
xchg
push
in
jno
or
push
outsl
xchg
push
xchg
bound
fmuls
dec
test
adcb
push
insl
fs
or
call
test
phaddw
insl
outsl
nop
or
push
push
push
add
push
arpl
es
adc
xor
lock
sbb
xor
movsb
rolb
insb
roll
cltd
jo
hlt
push
outsb
add
or
push
outsl
and
adc
inc
jl
insl
data16
dec
jne
adcb
inc
sbb
inc
js
popl
and
outsl
lret
xorl
push
xor
mov
add
andb
cwtl
add
insb
mov
cmp
call
inc
or
pop
lock
inc
call
dec
inc
and
push
mov
inc
or
outsb
in
jb
repnz
inc
jl
test
out
clc
dec
pusha
fcom
mov
and
add
inc
cwtl
inc
inc
pushf
mov
mov
xor
inc
xlat
adc
mov
je
shlb
aad
nop
ja
in
imul
or
lret
stos
rorb
sub
ret
fs
leave
add
test
dec
or
or
clc
sub
lea
dec
sbb
mov
test
or
jae
fldenv
arpl
push
fdivrl
push
hlt
mov
mov
mov
mov
add
mov
or
fbstp
xchg
xchg
ror
push
or
sub
addb
fs
mov
in
and
mov
divb
add
jae
ret
fs
pusha
lret
pushf
es
xor
lret
push
popa
mov
adc
inc
mulb
js
cltd
adc
dec
test
push
sub
cmp
jecxz
mov
jp
push
mov
insb
and
ficoms
cwtl
aas
mov
fmul
dec
enter
cmp
test
lods
dec
movsl
inc
or
dec
inc
add
movsb
adc
add
shlb
xor
stos
inc
adc
sub
push
sub
pop
sub
adc
sbbl
inc
loop
test
fdiv
push
and
pushf
dec
inc
jl
or
shll
rcr
je
push
iret
les
mov
aam
push
sub
push
je
mov
dec
gs
in
nop
dec
sub
jae
pushf
mov
push
inc
and
adc
jno
mov
adc
aam
pushf
movsb
in
sub
mov
in
sub
lret
lods
add
jae
and
test
shrb
das
and
sub
int3
and
test
jbe
mov
setns
and
xchg
rorl
sub
push
and
rolb
repnz
insb
fmulp
inc
clc
sti
and
outsl
aad
or
or
push
jl
adc
je
sub
and
jns
pushf
movsb
mov
lock
inc
xor
and
adc
mov
nop
mov
lds
add
fs
inc
pushf
jne
shlb
or
fdivl
movsb
xchg
cmp
fisttpl
mov
cld
xchg
lahf
push
adc
mov
outsl
push
rol
ja
iret
and
call
insl
popa
fptan
andb
insb
pushf
dec
in
in
sbbb
or
pop
xor
inc
aad
js
enter
inc
push
xorb
pop
aam
out
in
push
fcomps
jb
into
xchg
popa
pop
push
lret
in
adc
jl
mov
ljmp
cld
and
sbbb
test
in
outsl
xlat
push
sub
mov
ja
pushl
into
jo
adc
and
fcoms
jo
cs
xor
jb
pushf
dec
loop
dec
fs
push
outsl
mov
fsubs
imul
outsb
cwtl
shl
jmp
lahf
adc
out
jns
or
push
pop
fdivrs
fildll
lret
insb
and
popa
rorb
and
add
data16
inc
lock
nop
test
push
data16
pushl
inc
fmull
adc
xor
fsubrl
pushf
xchg
and
sbb
fs
pushf
dec
mov
and
sub
aas
test
lods
push
movsb
insb
lods
mov
adc
add
outsb
sbbb
or
mov
iret
jmp
imul
adc
loopne
addr16
pop
stos
add
add
dec
inc
fdivrs
pop
test
pushf
xchg
and
nop
rorb
cltd
mov
pop
mov
mov
loopne
inc
jl
nop
inc
lock
dec
dec
and
popa
xor
test
xor
sbb
mov
push
clc
sbb
jno
aas
xchg
outsl
fistl
in
add
mov
addr16
or
or
ja
dec
and
push
orl
or
and
fs
add
inc
push
cld
outsb
jecxz
dec
or
sub
or
fs
fs
adc
and
je
add
inc
aad
inc
cmp
push
sub
sahf
sbb
fbld
inc
adc
movsl
push
jle
je
cltd
fstps
inc
aam
test
orb
jbe
push
push
dec
out
dec
pop
and
sarb
xor
sub
insb
pusha
dec
imul
pop
enter
popa
sub
jns
and
repz
dec
test
push
phaddsw
xchg
and
push
shll
int
int3
cmp
movsb
rcll
scas
mov
cld
mov
mov
cmp
je
push
imul
data16
hlt
nop
int3
mov
jb
jl
mov
nop
pop
in
rorl
dec
cmp
enter
hlt
and
pop
jae
popa
inc
cltd
mov
pop
fsubrp
adc
lahf
inc
mov
push
dec
pop
fsubs
lret
cmp
cwtl
mov
inc
lods
xchg
adcb
dec
xorb
dec
xchg
adcl
subb
cwtl
scas
and
insl
cs
pushf
add
nop
or
inc
pop
dec
sub
add
mov
cmc
insl
movsb
sbb
roll
popf
sub
adc
and
sahf
dec
jae
ret
push
scas
or
loop
inc
adc
mov
ljmp
mov
mov
xchg
adc
push
push
mov
fnstcw
adc
in
mov
mov
je
fistpl
std
jb
pushf
adc
or
js
mov
push
loopne
add
fcompl
push
or
out
jmp
inc
mov
push
xor
mov
shll
inc
test
mov
sbb
dec
js
xor
add
pop
out
or
mov
push
rcl
mov
ljmp
push
imul
shlb
cmp
in
push
fmuls
cmp
je
fs
xor
push
pop
jns
or
sbb
jno
adc
xor
push
fs
push
and
rcrb
pusha
xchg
or
aad
xor
in
xchg
inc
push
outsl
inc
sbb
add
or
daa
loop
inc
aam
dec
into
adc
fs
fnstsw
adc
pushf
sbb
aam
pushf
sbb
dec
fsubs
xchg
nop
jae
fiadds
lcallw
aam
es
fadds
js
xchg
xlat
mov
lock
inc
xchg
mov
mul
jo
insb
mov
sahf
pop
adcl
ret
lcall
adcb
aad
dec
outsb
shl
push
outsb
rcrb
cltd
inc
adc
loopne
rclb
push
enter
nop
mov
push
mov
add
loope
jne
sbb
test
dec
mov
je
jns
outsl
mov
jge
int
sub
or
sub
jo
add
rcrl
dec
cltd
or
sbb
sbb
mov
fs
mov
outsl
lock
xchg
lret
clc
xchg
push
mov
inc
cwtl
add
jo
adc
jo
add
aas
loopne
jnp
mov
hlt
call
fadds
movsb
mov
mov
pushf
dec
shlb
jl
movsb
cmp
insb
adc
mov
std
scas
insb
loopne
mov
adc
cld
cmp
pushf
xor
pop
inc
fdiv
in
ficompl
cld
push
jne
pop
mov
rolb
les
fiadds
loop
cld
int3
fcoms
loopne
jb
inc
js
imul
sbb
fs
adc
inc
adc
dec
push
outsl
mov
jbe
in
and
add
pusha
insb
fisubrs
sbb
pop
sub
push
shll
insl
test
cmp
push
adc
dec
pop
inc
je
sbb
inc
inc
shlb
adc
adc
pushf
mov
les
mov
xor
cltd
loopne
outsl
push
and
push
stos
cs
add
xchg
movsl
popa
adc
push
fcompl
cmpsl
inc
adc
lret
sub
jo
or
cmp
rclb
mov
je
pop
outsb
fs
add
in
enter
mov
outsb
mov
mov
sub
lret
imul
popa
ds
pop
ss
mov
sar
push
bound
add
fildll
in
sbb
pushf
dec
add
add
jne
add
std
bound
and
stos
mov
add
jo
push
stos
or
xor
push
adc
xchg
pusha
jo
mov
popf
jbe
xlat
jnp
pop
jb
es
adc
pop
cmp
dec
stos
adc
sbb
gs
repnz
sub
inc
jne
out
xchg
stc
pushf
sub
mov
cmpsb
cwtl
jge
nop
je
push
add
or
sbb
jl
bound
mov
adc
push
addl
adc
mov
popf
inc
adc
outsb
fisubl
adc
out
clc
int3
pop
add
jp
data16
xor
sub
or
test
mov
adc
aam
stos
pushf
or
add
dec
cs
or
stos
nop
leave
xor
icebp
fs
add
jns
roll
test
nop
add
call
inc
fildl
jbe
loope
add
mov
and
call
imul
mov
cwtl
cmp
xor
fs
adc
inc
aam
lods
sub
rolb
mov
push
dec
lods
xor
test
add
je
and
nop
sbb
cmp
scas
loopne
loop
cmp
dec
or
and
imul
sarl
and
imul
nop
jae
push
or
fs
sub
sub
sahf
lods
loop
inc
pop
mov
add
rclb
popa
mov
sub
sub
and
jl
dec
jmp
pop
test
in
inc
mov
pop
jae
cmp
dec
or
je
and
dec
jo
enter
dec
mov
iret
xchg
adcb
loope
xchg
mov
std
adc
xor
fs
sub
into
and
lahf
fdivs
hlt
shll
shrb
push
rclb
div
pop
aam
or
and
in
movsb
sbb
xor
pop
sub
jnp
push
insb
test
inc
xor
call
lret
js
dec
leavew
and
test
bnd
loopne
xor
adc
add
jnp
sub
sub
scas
or
insl
or
adc
imul
jo
mov
inc
adc
inc
test
iret
add
cs
loop
xchg
sar
mov
and
push
ret
push
or
test
mov
lds
jno
jne
cmp
cwtl
add
dec
and
dec
aam
mov
pop
movsl
sub
xchg
add
loopne
xor
adc
inc
push
push
je
pop
in
pop
test
pop
jb
push
dec
xchg
je
gs
dec
jo
inc
call
in
sub
adc
inc
push
insb
lds
push
pushl
push
popa
arpl
icebp
jno
insb
fsubrs
push
les
push
push
stos
adc
cwtl
push
into
es
xchg
ja
jb
fldenv
adc
push
xchg
or
outsl
lret
push
sub
movsb
adc
inc
sbb
fisttpl
pop
inc
sbbb
inc
nop
or
lret
or
cmp
add
pusha
orl
and
or
fadds
mov
push
pop
rclb
dec
add
mov
dec
dec
scas
fstl
mov
popf
dec
nop
dec
push
nop
loopne
mov
loopne
outsb
adc
inc
jne
add
std
sub
adc
loope
sub
out
popl
shrl
aas
ret
imul
leave
xchg
sbb
outsb
sbb
fldl
sbb
cwtl
ficoms
inc
out
inc
sbb
cmp
sub
jl
inc
daa
mov
xchg
pop
and
inc
aas
enter
hlt
scas
rclb
ds
cli
fists
inc
int3
les
xchg
movsb
repnz
jl
inc
clc
mov
movsb
pop
adc
in
xor
push
and
int3
jl
inc
out
dec
stc
mov
adc
push
and
inc
fimull
adc
loop
ds
mov
xor
lock
ss
inc
les
mov
adc
es
or
sbb
mov
and
jmp
jecxz
push
jecxz
jecxz
loopne
aaa
jne
adc
test
and
xchg
clc
xor
movsl
clc
inc
clc
mov
push
clc
clc
aad
jae
in
cmp
clc
xchg
clc
add
adc
ds
ds
jecxz,pt
push
ds
jne
adc
xchg
xor
mov
push
pop
arpl
in
orl
scas
mov
and
mov
inc
icebp
jecxz
push
icebp
repz
lock
jl
je
jl
js
jl
jl
jl
jl
jl
jl
jl
jl
push
jae
in
xor
icebp
xchg
lock
adc
jl
jl
jl
jl
jl
jl
jl
jl
pop
add
jne
adc
test
and
xchg
pop
xor
movsl
pop
inc
pop
mov
push
pop
lds
arpl
aad
jae
in
sbbl
pop
xchg
pop
add
inc
mov
and
rol
inc
jecxz
push
repz
roll
jne
adc
test
and
xchg
icebp
xor
movsl
icebp
inc
icebp
mov
push
icebp
vpacksswb
aad
jae
in
xor
icebp
xchg
lock
adc
jl
jl
jl
jl
jl
jl
jl
jl
pop
add
push
and
xchg
pop
xor
movsl
pop
inc
pop
mov
push
pop
lds
arpl
aad
jae
in
sbbl
pop
xchg
pop
add
inc
mov
and
rol
inc
jecxz
push
repz
roll
jne
adc
test
daa
loope
icebp
aas
icebp
mov
push
icebp
int
dec
mov
add
mov
call
popa
clc
daa
push
ss
shrb
mov
lods
popl
mov
dec
mov
and
cmp
mov
shll
jbe
or
aam
daa
mov
push
xchg
iret
rorb
mov
mov
push
aad
jecxz
mov
lret
xlat
lahf
cmp
call
cmp
lods
cmp
ds
arpl
xlat
jb,pt
in
cmpb
mov
cld
ds
invd
fisubl
and
mov
aaa
aam
inc
loop
pop
cli
jo
cs
out
mov
icebp
js
in
icebp
mov
shll
js
ja
jl
jnp
jl
jg
jl
jl
pop
and
mov
push
push
mov
test
outsl
int3
sbb
sbb
mov
pop
push
pop
rcrb
aas
cld
jl
jl
jl
pop
and
lret
pop
add
inc
xchg
ss
movl
push
inc
stos
sbb
int3
cmp
jmp
pop
test
xor
rcll
push
mov
iret
movsl
icebp
adc
loope
icebp
sub
lock
jl
je
jl
js
and
sarb
push
xchg
pop
aaa
xor
push
inc
ret
jne
in
pop
inc
stos
rcrl
aam
push
shr
icebp
imul
xor
push
adc
pop
clc
and
add
ss
adc
hlt
je
js
js
jl
jl
pop
push
cmp
cwtl
pop
and
cmc
lea
cmp
sbb
je
jb
push
cmp
dec
push
repz
xchg
sbbl
jecxz
mov
je
icebp
clc
mov
int3
cmp
xor
into
icebp
andb
ds
call
pop
fstpt
aas
int3
push
outsb
out
mov
cld
add
pushf
add
imul
cmp
sarb
cmp
lcall
add
iret
ja
xor
shl
mov
setno
ud0
in
aaa
xor
mov
hlt
mov
sarb
cmp
idivb
pushf
jg
cmp
mov
push
hlt
pcmpgtb
push
movsb
fadds
mov
and
ret
stos
cwtl
inc
pushf
jns
xor
aas
push
inc
jl
or
movsl
stc
push
add
cld
xor
add
pop
xor
rorl
sbb
mov
mov
cmp
sub
adc
mov
mov
or
fisubrl
cmp
aas
imul
sub
cmpsl
call
iret
das
xor
sar
call
add
shrl
aad
add
sub
sub
push
inc
popf
add
or
fsub
into
sbb
or
jge
sub
lcall
lock
inc
jl
js
pop
add
sbbl
lods
add
adc
mov
and
cwtl
loope
jecxz
ror
ss
sbb
loope
push
idivb
data16
add
scas
adc
sahf
xor
lods
pop
push
pop
rcrl
jge
repnz
pushf
pop
or
cmpsl
push
inc
mov
xchg
and
call
jbe
pop
jl
js
jl
jl
sub
pushf
je
push
add
jae
hlt
jl
js
jl
jl
pop
and
rcrb
rcrl
mov
dec
pop
cmp
dec
mov
cmp
or
cmpsl
cmp
mov
enter
movsl
cmp
repz
and
add
cmp
sbb
xor
iret
adc
cmp
int
lret
rcl
add
aad
cmp
cmp
pop
cmp
fnstcw
pop
fidivl
xchg
test
cmp
inc
jl
jl
jl
jl
jl
jl
jl
jl
pop
or
ja
adc
sbbl
es
xchg
pop
xor
lahf
pop
cmp
test
pop
dec
pop
mov
pop
bound
rcrl
insb
pop
fistpl
jbe
in
sbbb
pop
mov
stc
adc
cmp
mov
and
mov
pop
xor
pmullw
in
push
out
pop
clc
addl
jno
or
ret
mov
ret
test
and
jecxz
jecxz
jecxz
jecxz
out
jl
jl
dec
mov
shll
test
addr16
jnp
ljmp
jecxz
jecxz
loope
fdivl
mov
sbb
mov
es
shll
clc
fdivr
push
clc
in
clc
pop
clc
cli
nop
sbb
flds
imul
pop
xor
adc
test
and
sahf
bndstx
aam
loope
outsl
int
xor
cmpsb
lock
into
rorl
ds
and
inc
xchg
xchg
dec
in
mov
sbbb
sahf
iret
call
xor
addb
push
and
pusha
aas
fcmovu
push
jbe
cmpsb
lock
cmp
in
pop
enter
rorl
jecxz
mov
sarb
sbb
add
dec
aaa
mov
jbe
icebp
clc
clc
les
aam
cmp
and
or
shl
shlb
cmp
je
push
jnp
js
jg
push
adc
scas
sbb
push
sub
pop
inc
inc
xchg
pop
add
mov
push
fnstenv
cmpsb
ficompl
mov
xor
fcmovnbe
add
cmp
mov
mov
imul
lahf
mov
mov
daa
test
aas
lahf
icebp
dec
ror
icebp
insl
loope
icebp
andl
mov
and
jl
adc
and
into
je
je
pop
cmp
rorl
xchg
add
iret
mov
sub
fucomip
call
call
stc
clc
cwtl
clc
or
rolb
xor
mov
rorb
movsl
add
rol
jecxz
mov
push
xor
sub
ror
cmp
cmc
cmp
prefetch
jle
xor
fmull
pop
aaa
mov
es
mov
clc
sahf
clc
aas
push
aam
cmp
mov
ret
pop
mov
xchg
ja
cmp
int
outsl
cmp
cmp
jp
xlat
sti
cmp
sarb
mov
cmp
inc
out
inc
jb
sub
je
stc
rclb
xlat
sbb
xor
cmpsb
add
cmp
fadds
xchg
fldz
cmp
adc
dec
aam
add
ds
push
mov
jp
mov
cmp
and
mov
pushf
or
xorl
rol
loope
loop
dec
mov
icebp
pop
loopne
xor
pop
jl
js
pop
add
test
aas
pop
fistpl
dec
pop
repnz
jae
adc
push
and
and
mov
xor
stos
mov
mov
sub
clc
je
adc
aaa
jg
dec
xchg
pop
test
adc
push
nop/reserved
rorl
jle
sti
xchg
orl
cmpsb
jecxz
mov
enter
pop
nop
icebp
push
icebp
jbe
clc
aas
cmpb
ds
lsl
sahf
mov
lods
pop
add
loop
dec
cld
sub
sbb
mov
xlat
stos
lock
clc
xchg
lock
ds
cmp
add
mov
loop
cmp
push
cmp
or
lods
sbb
pop
adc
jmp
fwait
cmpl
shlb
aas
imul
nop
int3
xor
shr
mov
push
mov
sub
sub
cmp
mov
push
xor
rolb
call
xor
push
daa
add
sub
sub
xchg
sbb
ret
lcall
loope
loopne
fmuls
mov
sbb
mov
ja
push
js
jns
aaa
xor
nop
pop
or
mov
xor
les
pushf
scas
clc
sbb
sahf
xchg
xchg
fistpl
test
push
iret
stc
mov
xor
daa
shl
stos
inc
dec
xor
loope
shl
icebp
scas
loopne
sarl
mov
stos
xor
cmp
push
mov
mov
loopne
daa
cmp
lds
pop
add
aas
mov
int3
add
popf
or
loopne
cmp
into
hlt
not
inc
xor
je
add
shl
xor
xchg
pop
adc
setb
or
and
pushf
call
jne
push
push
rcrl
aaa
repnz
add
mov
call
jg
das
push
lahf
push
dec
push
dec
lods
out
lea
and
mul
ja
adc
inc
cld
sub
cmp
arpl
jl
jl
pop
and
rcrl
jg
cmp
adc
daa
sbb
cltd
pushf
pop
mov
mov
aaa
int
xor
sbb
js
inc
in
fwait
stc
clc
into
sar
jmp
clc
jecxz
loopne
xor
dec
nop
test
test
pop
mov
icebp
push
loope
icebp
shl
sarb
lods
or
xor
adc
je
jmp
lock
cwtl
clc
or
pop
es
test
aas
pop
rclb
jns
test
jecxz
mov
fdivrl
ss
cmc
xor
cmp
cmp
out
imul
sub
into
jnp
jmp
cltd
orl
fsub
dec
ret
stc
jecxz
loopne
cmp
clc
jb
fcomps
xchg
pop
adc
mov
pop
addl
sub
leave
jbe
add
cmp
cmp
ds
cmp
ds
ds
loop,pt
test
inc
fsts
cmp
ret
xchg
ret
mov
cmp
sub
les
out
loop
pop
sub
enter
stos
and
cmp
shlb
push
jae
enter
and
xor
sub
popa
lock
mov
or
push
jge
xor
pop
sbb
arpl
sub
fdivp
xchg
shrb
xor
push
xor
xor
push
and
lock
jb
and
and
les
cmp
loop
pop
add
aaa
lcall
add
mov
out
pmulhuw
cwtl
jecxz
mov
icebp
loop
clc
test
int
mov
and
mov
loope
or
hlt
cmp
ds
arpl
mov
pxor
into
mov
sub
je
sub
lcall
clc
sar
sahf
add
fistps
lods
icebp
add
aam
lock
ds
cmp
fstpt
daa
out
add
into
ds
arpl
add
fwait
int3
add
mov
adc
add
xor
sarb
cmp
cmp
xor
ss
rcrl
cmp
cmp
test
sub
rolb
push
call
add
xlat
stc
mull
pop
cmp
out
inc
pop
cmp
inc
cmp
punpckldq
decl
add
mov
mov
push
pop
popa
rorb
cmp
mov
cwtl
add
loopne
stc
mov
enter
int
add
test
jno
lock
clc
mov
add
xor
xor
je
js
js
jl
pop
add
rcrl
ja
sbb
xchg
jb
movsb
clc
pop
aaa
call
push
aam
cmp
mov
ret
dec
mov
shl
icebp
xchg
loope
sub
mov
mov
movsb
pop
add
ret
je
add
stos
clc
sub
adc
clc
dec
call
repz
sahf
cld
pop
test
inc
mov
dec
mov
adc
movsb
je
sbbb
pop
mov
vmovntps
pusha
inc
inc
lret
int
xor
mov
inc
js
jmp
iret
icebp
ja
pop
xor
sbb
sbb
pop
add
adc
dec
rolb
mov
aaa
mov
jb
in
xchg
wbinvd
aam
mov
sti
insb
shll
stos
icebp
push
ror
icebp
movsb
jecxz
mov
jp
pop
and
mov
jge
std
stc
mul
mov
dec
cmp
int
push
out
popf
movups
mov
push
subb
flds
in
cmp
push
cmp
and
inc
adc
icebp
pushf
das
addb
dec
int
xor
adc
xor
inc
popa
inc
out
xchg
icebp
inc
shr
icebp
js
sbb
sbb
inc
push
mov
sbb
aam
dec
cmp
cmp
or
shlb
dec
fmull
orb
or
int3
lock
xlat
pop
push
cmp
fsubs
lret
pusha
mov
cmp
aas
lock
mov
mov
call
or
dec
sub
add
loope
or
mov
cmp
out
insb
add
aas
adc
je
pop
pop
and
icebp
mov
aam
inc
xor
mov
out
push
lock
arpl
pushl
int3
push
pushf
and
lods
rcll
int
jae
in
icebp
xchg
icebp
or
sub
dec
popa
insl
clc
adc
xor
cmp
jg
jae
in
clc
xchg
clc
or
sub
repz
insl
add
test
push
mov
jl
jl
dec
or
rorl
insl
adcl
out
lods
push
bswap
jae
in
xchg
mov
cld
cli
mov
bound
gs
and
aas
jne
arpl
add
add
add
add
add
pop
loopne
add
xor
add
filds
add
add
filds
add
xor
add
filds
add
loopne
add
xor
add
filds
add
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
add
add
scas
add
addb
add
mov
add
jp
add
data16
add
add
add
add
add
push
insb
gs
inc
add
je
jne
jb
outsb
je
imul
jns
add
cmp
inc
outsl
insl
jo
jb
push
je
imul
add
je
jb
arpl
fs
jae
add
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
imul
je
add
dec
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
jo
je
push
popa
addr16
add
cmp
inc
gs
gs
popa
addr16
add
outsb
jae
popa
je
dec
gs
popa
add
push
push
inc
push
xor
cs
insb
add
dec
dec
inc
inc
push
push
xor
cs
insb
add
jg
inc
jb
popa
je
dec
bound
gs
outsl
outsb
imul
xor
cs
insb
add
add
add
add
addb
add
pusha
add
addb
add
nop
add
sbbb
add
test
add
add
add
add
add
add
andb
add
add
andb
add
add
addb
add
add
add
or
add
add
add
jo
add
and
add
add
add
add
add
add
addb
add
add
add
push
add
addb
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
icebp
add
xchg
add
add
add
xchg
add
add
sti
add
xchg
add
add
adc
add
add
dec
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
or
add
or
add
add
or
add
add
insb
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
or
add
or
add
add
or
add
add
insb
add
add
addb
addb
add
rol
rcr
add
lret
xor
add
add
xor
xor
xor
xor
add
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
incl
xchg
add
add
in
int3
add
out
add
out
add
pushl
add
add
add
cltd
add
add
add
xor
add
xor
add
xor
add
cltd
add
xor
add
xor
add
data16
add
add
data16
cwtd
add
data16
add
incw
add
xor
add
cltd
add
cltd
int3
add
cltd
incl
add
add
add
xor
add
data16
int3
cltd
add
int3
int3
add
int3
incl
add
data16
lcall
add
incl
add
add
add
add
xor
cltd
add
add
add
add
add
xor
add
xor
add
xor
xor
cltd
add
xor
add
xor
add
data16
xor
add
data16
cwtd
add
data16
add
incw
xor
xor
xor
cltd
add
cltd
int3
add
cltd
incl
xor
add
xor
xor
xor
data16
int3
cltd
add
int3
int3
add
int3
incl
xor
xor
xor
data16
lcall
add
incl
data16
add
xor
data16
data16
add
incl
xor
add
xor
xor
xor
add
incl
data16
data16
data16
cltd
add
int3
add
add
cwtd
xor
cwtd
data16
cltd
add
int3
add
incl
data16
add
data16
xor
data16
cltd
add
int3
add
incl
incw
add
xor
lcallw
add
add
add
add
add
xor
add
add
add
add
cltd
xor
add
data16
cltd
xor
cltd
xor
cltd
cwtd
add
xor
add
cltd
data16
cltd
int3
add
int3
add
cltd
int3
xor
data16
data16
int3
int3
add
incl
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cltd
data16
cwtd
add
data16
add
cltd
add
int3
cltd
xor
int3
cltd
data16
cltd
cltd
add
cltd
int3
add
cltd
incl
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cltd
add
int3
int3
add
int3
incl
int3
incl
add
pushl
add
lcall
add
incl
int3
add
add
add
incl
cltd
add
xor
add
xor
add
xor
pushl
cltd
add
xor
add
xor
add
data16
jmp
add
data16
cwtd
add
data16
add
incw
lcall
xor
lcall
cltd
add
cltd
int3
add
cltd
incl
dec
add
dec
xor
dec
data16
int3
cltd
add
int3
int3
add
int3
incl
pushl
add
jmp
lcall
add
incl
jmpw
data16
incl
jmp
add
incw
jmp
and
movsl
add
pop
add
ja
xchg
xchg
add
lret
lret
add
xlat
xlat
add
fstp
add
jecxz
add
ljmp
clc
clc
clc
add
sti
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
sub
add
and
add
inc
add
add
add
add
add
add
add
add
jg
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
addb
lahf
pop
pop
pop
sub
aam
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
jmp
fld1
fst
loop
xor
xor
aad
jmp
fsubr
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jecxz
xor
xor
aad
jmp
fsubr
call
pop
test
decl
push
mov
incl
push
mov
decl
pop
test
call
fs
enter
out
in
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jecxz
xor
xor
aad
jmp
fsubr
pushl
cwtl
pushl
xchg
ljmp
mov
insb
sub
ljmp
test
imul
mov
jo
pushl
xchg
pushl
cwtl
jl
sahf
incl
mov
out
loop
out
loop
out
loop
out
loop
out
loop
out
loop
out
loop
out
jecxz
jmp
jmp
fsubrp
jmp
fsubrp
jmp
fsubrp
jecxz
xor
xor
fdivrp
out
in
js
cltd
pushl
xchg
pushl
nop
ljmp
mov
insb
sub
ljmp
xchg
insb
sub
pushl
nop
pushl
js
cltd
jl
lahf
jg
movsb
inc
mov
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fsubrp
jmp
fucomip
jmp
fucomip
jmp
fucomip
jmp
fucomip
jecxz
xor
xor
fdivrp
out
in
jp
fwait
pushl
xchg
pushl
xchg
pushl
ljmp
mov
insb
sub
ljmp
mov
jno
pushl
xchg
pushl
xchg
jp
fwait
jl
mov
inc
movsb
aam
loopne
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fucomip
jmp
fucomip
jmp
fucomip
jmp
fucomip
jmp
fucomip
jecxz
xor
xor
xlat
fdivrp
out
in
jnp
sahf
js
cltd
pushl
pushl
xchg
pushl
nop
pushl
pushl
pushl
nop
pushl
xchg
pushl
js
lcall
cmp
inc
movsl
aad
jecxz
jmp
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
jmp
fsubr
call
loopne
call
loopne
call
pushl
xor
inc
fcmovnbe
fdivrp
out
in
jge
mov
js
cltd
pushl
xchg
pushl
xchg
pushl
pushl
pushl
pushl
xchg
jns
cltd
jp
popf
jge
mov
incl
aad
in
ljmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
call
loope
call
loope
call
pushl
xor
inc
out
in
incl
cmp
jnp
fwait
js
cltd
pushl
cwtl
js
cltd
js
cltd
jp
fwait
jnp
sahf
jge
mov
incl
inc
scas
inc
cmpsb
aad
call
loop
call
loop
call
loop
call
loop
call
loop
call
loop
call
pushl
xor
inc
call
inc
test
jg
mov
jl
lahf
jnp
sahf
jnp
sahf
jl
lahf
jle
mov
incl
inc
stos
incl
inc
mov
cmpsl
jmp
loop
jmp
loop
jmp
loop
jmp
loop
in
lret
dec
mov
call
mov
in
loop
xor
xor
call
inc
scas
incl
test
jg
movsb
jg
movsb
jg
movsb
incl
cmp
cmpl
incl
scas
decl
dec
mov
enter
jecxz
call
jmp
fucom
jmp
fucom
jmp
fucom
jmp
fucom
jmp
fucom
jmp
fucom
dec
mov
ljmp
ljmp
xchg
mov
call
fnclex
pushl
xor
inc
fstp
call
inc
mov
xchg
incl
inc
stos
incl
inc
test
incl
inc
lods
incl
inc
scas
decl
dec
mov
enter
out
jmp
in
ljmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
jmp
fucomp
dec
mov
pushl
xchg
pushl
decl
in
loop
xor
xor
fcmovu
jmp
dec
mov
decl
mov
xchg
incl
inc
scas
incl
inc
mov
mov
decl
dec
mov
call
lods
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
int3
mov
jp
fwait
js
cltd
call
in
jmp
fsub
pushl
xor
inc
jmp
push
mov
decl
dec
mov
mov
decl
dec
mov
lea
decl
dec
mov
call
push
dec
mov
jmp
loop
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
jmp
loope
call
mov
cmpsb
incl
addr16
jmp
fucom
pushl
xor
inc
loopne
jmp
jp
lcall
push
mov
call
dec
mov
call
dec
mov
call
push
lcall
pop
lret
mov
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
call
mov
mov
mov
jmp
out
jmp
fucom
pushl
xor
inc
loopne
ljmp
pushl
push
ret
call
push
ret
push
ret
push
ret
call
push
lcall
pop
enter
int3
jmp
mov
jmp
in
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
jmp
loop
call
shl
xchg
push
mov
ljmp
out
jmp
fsubp
pushl
xor
inc
loope
loop
jmp
in
pushl
mov
lcall
push
push
push
lcall
pop
lret
pop
int3
jmp
pop
sar
mov
mov
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
call
ret
jecxz
pushf
pop
int3
lcall
sar
jmp
in
jmp
pushl
xor
inc
loope
loop
jmp
in
pushl
loopne
mov
test
jmp
pop
into
jmp
pop
into
jmp
pop
sar
mov
pusha
sar
movsl
popa
jmp
mov
jmp
out
jmp
out
jmp
out
jmp
out
fadd
out
movsl
popa
xlat
jmp
sbb
jmp
in
jmp
pushl
xor
inc
loope
loop
in
ljmp
mov
nop
loope
mov
mov
pushl
fs
mov
pusha
aad
movsl
popa
jmp
xlat
ljmp
arpl
call
mov
jmp
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
fcmove
out
scas
imul
lods
push
mov
ljmp
xor
xor
loopne
in
ljmp
rcll
rcll
inc
xchg
in
rclb
pushl
js
pushl
jnp
mov
out
aad
jmp
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
fmulp
in
inc
xchg
lock
xchg
lock
mov
in
jmp
loopne
pushl
xor
inc
loope
loop
in
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
mov
inc
ljmp
shr
call
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
out
dec
xchg
idiv
leave
xchg
cmc
dec
mov
in
jmp
loope
pushl
xor
inc
loopne
jmp
in
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
jmp
loope
pushl
xor
inc
loopne
in
jmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
loope
pushl
xor
inc
fdivrp
jmp
call
call
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
loope
pushl
xor
inc
xlat
xlat
xlat
fcmovu
xor
xor
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
push
push
or
add
add
incl
add
add
incl
add
add
add
and
add
add
add
add
add
add
add
incl
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
incl
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
or
