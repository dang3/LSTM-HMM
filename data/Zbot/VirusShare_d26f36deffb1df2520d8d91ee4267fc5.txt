and
pushl
lock
scas
frstpm(287
push
lcall
and
or
add
sti
call
sbb
pcmpeqb
fs
mov
lcall
adc
inc
and
mov
or
add
addb
test
movb
jmp
iret
mov
cmp
pop
adc
or
or
imul
add
push
inc
xor
add
pushf
add
lcall
add
xchg
sti
outsl
or
mov
xor
sub
popa
ret
add
push
outsl
fists
xchg
popf
and
add
push
rorb
sti
fistpll
incl
pop
cmp
mov
add
pop
or
shlb
adc
outsl
xor
xor
pop
sub
mov
pop
xor
add
or
pop
fbstp
inc
cwtl
add
add
xlat
ja
dec
add
incl
loope
sub
mov
imull
jmp
add
jg
outsl
in
add
movsb
sub
dec
test
cmp
add
popa
mov
add
xchg
test
adc
adcl
fldt
std
aaa
loope
add
mov
cmp
pusha
and
sbb
add
ljmp
cmp
nop
dec
pop
stc
bound
insl
add
xor
in
fstpt
xchg
xlat
xchg
xchg
xchg
movsl
jecxz
add
ljmp
xchg
pop
push
scas
add
xchg
inc
or
xchg
mov
cmp
flds
sbb
add
pop
out
test
cmp
fsts
in
pushl
dec
and
add
jmp
jae
std
mov
sub
jnp
push
pop
and
clc
mov
jno
iret
pop
outsb
jg
ret
pop
je
mov
or
sub
add
or
dec
js
mov
push
lock
fwait
add
idivb
mov
mov
xor
jne
jg
lock
sbb
out
cmpsb
es
xlat
add
dec
loopne
jg
xor
loope
adc
int
push
mov
add
movl
fcmovnu
pop
clc
mov
neg
mov
dec
mov
insl
loope
icebp
add
fcoms
jae
mov
insl
pushl
testl
test
add
cmp
xor
scas
add
xlat
mov
jge
jne
rorb
jg
xor
mov
out
testl
or
decb
insb
cs
aam
shlb
ret
mov
int
fdivrp
dec
not
sbb
or
cld
sbb
imul
xor
test
jnp
xchg
subb
or
mov
not
aam
roll
mov
jg
leave
pop
and
or
mov
out
mov
testb
rclb
fldcw
mov
inc
bound
fistpll
add
arpl
dec
cld
sub
jge
sub
pushf
cld
call
jo
fists
add
push
xchg
fs
fwait
or
addr16
mov
push
call
out
insb
xor
sbb
sti
xor
push
sbb
icebp
stos
pop
xor
adc
add
imul
loope
sub
adc
add
and
pop
cli
int
or
cmpsb
leave
sbb
sub
inc
or
movsl
andl
fcmovnu
sbb
imul
imul
adc
dec
sbb
sub
pop
xchg
int
cwtl
rorb
dec
adc
cmp
fmull
pop
fcmovnb
inc
movsl
cmp
ret
pand
add
push
ss
insl
daa
or
inc
adc
es
test
and
sbb
jl
push
loope
rolb
and
or
sbb
dec
shlb
mov
imul
and
andb
pop
call
push
fdivrl
jge
insb
int
add
jge
repz
sbb
fnstenv
and
sbb
xor
aas
jp
icebp
push
xor
mov
xchg
or
xlat
adc
movsl
movsl
jge
call
xchg
in
xor
out
imul
add
clc
pop
stos
jno
imul
dec
mov
andl
test
cmp
outsl
pop
xor
lret
imul
mov
add
int
loope
pop
and
or
xchg
jg
in
sbb
or
stc
arpl
jbe
ret
add
add
adc
clc
add
popa
adc
stos
lea
push
push
push
fdiv
or
adc
mov
mov
pop
push
in
jo
add
out
loope
and
subl
lret
int
and
mov
call
push
jne
sub
insl
inc
xor
push
clc
sub
sbbb
int3
add
sbb
sbb
icebp
scas
add
fimull
jo
test
or
aad
adc
les
ltr
cmpsb
outsl
dec
lods
inc
fists
mov
xlat
in
out
out
nop
sbb
inc
cmp
mov
cmp
mov
sub
xchg
cmp
loope
mov
inc
iret
adc
mov
sti
mov
orb
stos
stc
cmp
inc
jp
aaa
and
inc
sbb
cmp
pop
hlt
and
cmp
lds
mov
and
adc
push
adc
sbb
in
add
or
in
push
ja
cltd
jle
sbb
int3
sub
inc
sahf
xor
add
cwtl
sub
push
loopne
addb
xor
out
lret
test
adc
dec
xor
or
lret
test
outsb
gs
gs
pop
sbb
not
adc
or
add
sbb
fcmovne
int3
adc
mov
sti
add
mov
pop
aaa
or
xchg
xchg
fdivrs
add
loope
inc
pop
movsl
cmp
lret
test
int3
std
fdivrs
loope
add
mov
xchg
jp
inc
push
or
pop
cmpsl
hlt
nop
int
xchg
xor
mov
adc
inc
add
or
ja
cmc
ficomps
xor
mov
or
fdivs
ret
test
xor
push
fsubrs
inc
add
into
add
shrl
cwtl
sbb
xor
push
mov
fcoms
int3
pop
sub
fiaddl
add
neg
aad
or
pop
scas
inc
sub
cmp
adc
jnp
mov
sbb
pop
pop
hlt
sahf
lock
inc
popf
sub
xchg
cwtl
inc
mov
cmp
stos
mov
test
inc
enter
or
cmp
lock
mov
cli
push
lods
hlt
sub
shr
mov
add
pop
mov
push
cwtl
and
inc
pushf
jo
mov
jne
leave
pop
jmp
dec
test
fsubrs
dec
push
enter
lea
pop
in
pop
jle
and
pop
aaa
pop
por
ds
icebp
fdivl
mov
cmp
addl
xor
lahf
xor
inc
adcb
mov
or
dec
sbbb
mov
and
ja
adc
xor
div
dec
push
roll
mov
call
dec
ret
in
push
mov
add
cs
addr16
jmp
fildll
mov
cld
push
push
push
rcl
out
stos
push
imul
je
loopne
hlt
fdivl
jge
fisubs
add
mov
testb
enter
cmpsb
push
nop
movb
sub
call
sub
fisubl
jb
adc
rcl
mov
incb
sbb
mov
cmp
xor
push
jle
aaa
xorl
rcrb
add
iret
and
dec
cmp
mov
ret
or
into
pop
into
or
xor
in
push
ds
enter
push
push
mov
push
div
das
clc
enter
cld
pop
hlt
lret
mov
pop
ret
lds
fistps
sbb
inc
ret
scas
sub
mov
add
rcrb
add
push
dec
or
add
mov
add
insb
xchg
hlt
sbb
add
das
adc
xorb
dec
loop
mov
sti
mov
dec
rorl
mov
outsl
cmp
cmpsb
add
adc
aaa
icebp
mov
adc
sbb
adc
je
lea
daa
test
or
adc
iret
mov
xor
loop
sbb
daa
sub
repnz
call
xor
sbb
out
sub
add
aaa
fdivrl
xor
xor
aaa
stos
or
cmp
inc
cltd
jecxz
fidivs
xor
fcomps
fcoms
daa
mov
adc
out
inc
push
xor
dec
ret
lock
cmp
xchg
sahf
call
add
fildl
gs
push
adc
inc
push
orb
mov
pop
into
or
shl
sub
aad
xor
jle
xor
in
rorb
jbe
lcall
xchg
arpl
adc
or
lods
sbb
popa
jg
sbb
scas
jl
cld
adc
jae
mov
push
push
into
jo
push
dec
add
mov
adc
add
cmp
jno
enter
inc
jno
sbb
jge
cld
add
ljmp
outsl
loop
jb
test
push
xor
jns
ret
xchg
rol
push
pop
mov
loop
and
push
insb
mov
mov
or
or
jmp
push
dec
mov
lea
or
fidivrl
sahf
enter
daa
xor
clc
movsl
xchg
popf
mov
les
or
cmp
sbb
out
mov
pushl
inc
test
mov
pop
movsl
bts
stos
testl
xchg
dec
xor
cvtps2pd
jg
inc
rolb
pop
inc
or
cld
arpl
dec
push
add
int
fidivl
cli
push
add
sbbb
in
int3
js
jnp
inc
repz
hlt
int
std
push
inc
out
cld
xor
cmpsl
aaa
aam
fistps
idivl
mov
outsb
jbe
adc
add
leave
mov
shr
out
mov
movsl
adc
dec
sub
mov
add
enter
mov
arpl
outsl
mov
outsb
pop
mov
push
and
xor
xor
icebp
insb
fwait
test
add
shr
jae
sub
jecxz
clc
mov
ds
and
pop
pushf
ret
mov
adc
xchg
cmp
je
negl
mov
inc
xchg
add
adc
jge
xchg
jnp
iret
cltd
movsl
or
and
inc
js
pop
mov
out
loope
and
dec
adc
inc
lcall
f2xm1
mov
xchg
xor
pop
cld
or
xchg
and
fadds
loope
mov
inc
mov
and
adc
mov
adc
hlt
out
jae
data16
addr16
pushf
cmp
add
jmp
jl
fidivs
xor
scas
insl
adc
inc
fidivl
add
cmp
xchg
add
push
pop
fcmovu
inc
lods
out
adc
sbb
sub
jle
mov
incb
jae
add
repnz
or
fidivrs
rolb
add
enter
cwtl
pop
push
fdivrl
mov
jns
mov
xchg
and
push
dec
sub
or
pop
movsl
and
adc
xor
fildl
arpl
outsl
shlb
adc
inc
les
ljmp
lretw
sbb
stos
rcl
push
aas
test
jae
xor
mov
xchg
pop
shll
stc
xlat
es
or
or
lock
and
ret
sbb
dec
pusha
repnz
lret
cmp
orb
cmc
jle
andb
mov
jb
fs
stos
cmc
xor
fdivrp
xchg
lock
dec
inc
adcb
ret
test
aaa
jnp
int3
iret
ror
fmull
outsb
popa
cmp
hlt
and
xor
adc
lods
sbb
dec
fsub
inc
sub
shlb
adc
jne
stos
cld
cmc
xor
call
ja
loop
data16
ss
cmp
orl
mov
test
fisubrs
imul
not
sub
add
icebp
in
jbe
std
or
icebp
jnp
and
xchg
das
jne
xchg
cmc
adc
lea
enter
int
push
sti
sbb
sub
mov
pop
aam
xchg
inc
sti
xchg
test
jne
mov
lods
lret
shrl
and
mov
xor
push
mov
mov
call
xor
rol
ljmp
or
mov
mov
pop
sbb
jl
cmp
dec
mov
ja
outsb
aam
add
ret
pop
inc
adc
adc
pop
jecxz
rcrl
ficomps
fdivr
cmp
push
add
lods
sbb
or
test
push
pop
mov
adc
or
xchg
jecxz
mov
xor
jecxz
lds
and
cmc
ss
adc
aad
or
mov
and
data16
insb
push
add
cmp
jb
cmp
jp
or
popa
ljmp
or
loope
xor
imul
lea
push
adc
jg
pop
mov
mov
or
push
push
icebp
rorb
lcall
lods
daa
dec
pop
ss
fs
cmpsl
xchg
out
adc
fiaddl
cltd
add
push
inc
push
ljmp
jo
add
cli
sbb
arpl
movsl
addr16
dec
sbb
sub
adc
sbb
loop
mov
jo
addb
enter
lods
iret
sti
and
mov
fsubrp
lahf
or
cmp
jnp
mov
push
dec
sub
push
jmp
int
pushf
adc
fcmovnb
leave
or
mov
ret
inc
or
pop
add
leave
mov
icebp
jmp
lock
fistpll
or
test
aad
push
cmp
dec
push
into
push
nop
cmp
mov
mov
push
add
mov
ljmp
shll
shlb
xorb
loopne
inc
pop
outsb
or
add
fcoms
insb
xlat
xor
pushf
in
push
sbb
jle
jb
and
add
cmp
aas
jecxz
shl
push
mov
and
mov
mov
add
xchg
jo
fisttpll
adc
pop
ret
fwait
icebp
pushf
aam
out
dec
popa
ret
cli
les
mov
cli
insb
ret
adc
xor
inc
jae
loope
ret
enter
add
jecxz
ds
sbb
aad
mov
ficomps
jle
or
imul
pop
inc
stc
fstpl
adc
add
mov
push
das
xlat
or
or
jle
mov
add
mov
rolb
sbb
into
add
xlat
cs
ss
jmp
pop
fidivrl
add
pop
add
inc
jno
dec
inc
jl
push
clc
xchg
mov
cwtl
adc
sbb
push
mov
cmc
cmp
out
jecxz
ss
add
rcll
cmp
call
jecxz
push
mov
add
in
pop
clc
push
xor
or
xchg
cwtl
fs
xor
inc
sub
mov
bnd
test
and
add
and
xor
mov
mov
mov
pop
dec
push
jae
lods
dec
mov
xchg
adc
dec
add
bound
adc
inc
add
inc
dec
push
out
mov
xor
loope
mov
push
sbb
sbb
scas
mov
hlt
and
sub
arpl
cmp
loopne
ret
ffree
sbb
xchg
adc
dec
enter
sbb
imulb
divl
xchg
dec
xor
aaa
bound
jmp
fmuls
push
mov
push
mov
dec
lods
add
push
sysret
incb
xchg
xchg
sub
push
js
inc
cmc
ljmp
cmp
inc
int3
hlt
and
dec
jbe
push
xchg
lcall
negl
clc
sbb
xor
daa
outsb
inc
jne
push
out
pop
lds
push
dec
pop
inc
inc
adc
cmp
push
aaa
xchg
add
or
popl
outsb
icebp
jnp
das
add
ja
push
aas
push
mov
cmp
or
mov
mov
dec
arpl
sub
ret
adc
shrb
in
hlt
fsubr
fiaddl
roll
mov
jb
mov
adc
fcmovne
jl
or
enter
jle
sbb
and
or
lock
enter
pop
nop
int
in
pop
jl
stos
or
lahf
mov
pop
es
mov
adc
adc
inc
add
and
xor
fiadds
mov
shlb
adc
repz
ja
push
mov
iret
and
dec
fldl
int
hlt
shl
adc
fs
loope
lods
xchg
sbb
push
jge
loopne
cli
adc
xchg
add
sbbl
xor
dec
out
test
pop
scas
xchg
popf
xor
mov
test
iret
mov
mov
mov
sub
hlt
add
pcmpgtd
xor
cmp
movsb
jne
sub
or
loope
and
mov
movsb
push
inc
push
mov
pop
jge
je
cmpl
je
push
xorl
lods
dec
inc
rcl
lods
sbb
cmp
fnstenv
cmpsb
popa
in
fdivrs
lds
mov
push
negb
orb
pop
pushf
or
mov
faddl
jl
in
fs
lock
cmp
inc
cmp
sbb
add
testl
mov
stos
pop
ss
repz
cli
or
mov
sub
dec
xor
and
aad
sub
dec
mov
dec
mov
push
xchg
inc
xor
sbb
add
dec
ljmp
into
cmp
in
xor
add
test
es
or
pop
jge
add
xor
notb
icebp
xor
divb
iret
sbb
repz
xor
lret
enter
lock
in
icebp
or
hlt
leave
push
inc
outsl
call
cmpsl
mov
add
das
jo
cli
repnz
add
test
sahf
mov
orb
insl
add
add
fadds
or
inc
and
jg
push
mov
pop
or
enter
cltd
aam
pop
jle
insb
add
in
mov
out
add
dec
cmp
fcoml
fldl
mov
jbe
leave
aaa
xchg
outsl
fidivrs
mov
add
mov
sbb
add
mov
mov
mov
imul
mov
and
pop
mov
aaa
and
jge
xor
aaa
fs
adc
scas
jge
jecxz
sahf
xchg
jae
imul
jmp
ss
ret
cmpsl
or
xchg
inc
inc
add
stos
int
jmp
sbb
test
imul
out
mov
ds
add
pop
add
add
jbe
cmp
sub
adc
ljmp
js
gs
or
adc
add
adc
cmp
push
incb
pop
add
xor
cmp
sti
aaa
js
daa
pop
test
sbb
aaa
dec
in
fnsave
and
pop
and
js
add
xchg
dec
les
jne
inc
insb
ret
sub
loopne
jg
fdivs
out
add
rolb
inc
push
pusha
test
hlt
cld
or
outsl
pop
in
push
lods
sti
jecxz
fs
imul
outsb
mull
xchg
movsb
jmp
inc
or
nop
icebp
nop
dec
fs
cmp
dec
imul
xlat
repnz
ficomps
add
dec
adc
test
addl
add
inc
sub
add
mov
cltd
jns
movl
lods
xor
lcall
sub
mov
pop
das
sbb
push
sbb
roll
sti
pop
sbb
add
or
fdivrs
push
xchg
push
ja
sbb
sbb
fcomps
pop
ror
sbb
mov
push
fidivrl
xchg
add
dec
sub
jbe
imul
add
cmp
psubd
sbb
out
jg
ret
movsb
inc
add
and
pop
mov
and
or
adc
or
cmp
xchg
push
scas
cmpsb
outsb
xchg
leave
subb
adc
cmp
ss
test
xor
mov
ret
ja
xor
call
mov
test
pusha
and
jb
dec
xor
arpl
popa
pop
fcomp
data16
dec
hlt
mov
xchg
ljmp
pop
jle
aam
and
add
das
cld
or
js
cmpl
rcll
inc
push
mov
mov
subb
adc
add
mov
ret
sbb
jae
cmp
call
dec
pop
call
mov
mov
sti
movsb
ret
repz
clc
in
push
sbb
or
or
mov
loopne
dec
pusha
call
add
mov
cmpb
sbb
adc
sti
aaa
dec
mov
xlat
xchg
adc
dec
xor
mov
mov
or
fnstcw
and
mov
icebp
add
add
jp
sub
pushf
loope
adc
shl
pop
orb
jge
push
pop
cld
fcoms
lods
jge
insb
arpl
add
xchg
test
adc
subl
xchg
mov
call
adc
es
repnz
pop
in
hlt
push
or
popa
add
fisubrl
stos
mov
xor
fisubrs
sbbl
sbb
push
or
xchg
fcomip
fdivp
scas
mov
push
rclb
mov
push
sbb
cmpsl
inc
xchg
jb
add
cmp
xor
push
and
subl
fstps
inc
add
add
das
rcl
shlb
dec
push
mov
mov
pop
pop
push
push
cld
or
arpl
dec
test
push
and
mov
pop
outsb
pop
xor
add
clc
sbb
dec
pushf
push
pop
jmp
or
inc
stos
jne
xchg
adc
mov
mov
pop
push
sbb
mov
jg
dec
xchg
and
dec
loop
adc
or
mov
push
xchg
loope
lods
popa
xchg
inc
add
jnp
mov
cs
pop
xor
lods
dec
popa
lcall
push
add
inc
push
lret
mov
cmp
xorb
orb
rclb
xor
test
mov
repz
outsl
mov
pop
fwait
or
add
cwtl
stc
int
setle
mov
jecxz
mov
xor
or
or
arpl
call
sbb
add
xor
xor
loopne
cld
or
pop
add
add
add
lds
and
adc
gs
pusha
mov
addr16
in
rcll
xchg
mov
push
adc
outsb
scas
sub
sti
scas
leave
jo
jno
cld
imul
loop
mov
cmp
sbb
mov
mov
cmp
add
lods
mov
add
add
outsb
sub
add
adc
andb
xor
sub
jnp
sbb
adc
leave
jmp
add
cmp
sbb
call
sub
addb
pop
sbb
test
test
adc
push
sub
xor
inc
shlb
popf
gs
cmpsb
ja
das
cmc
andb
mov
lret
and
push
xchg
or
aaa
push
mov
ror
fisubl
mov
dec
cmp
scas
push
sbb
filds
dec
adc
mov
dec
dec
jne
fistl
xchg
add
and
scas
js
aad
std
add
or
xchg
jg
popa
xchg
aaa
int3
fistpl
pop
testb
fistpll
pop
mov
inc
lahf
or
test
mov
cmp
into
xchg
sti
aaa
sub
xchg
xor
cld
bound
mov
insl
aaa
insl
jmp
cmp
push
pop
sbb
mov
mov
jbe
jns
mov
fsubs
sbb
mov
daa
sub
adc
fnsave
sub
mov
clc
aaa
mov
or
cbtw
setnp
negb
pop
gs
mov
cli
pop
mov
ret
push
inc
ret
decl
jae
lahf
mov
fwait
xor
dec
jo
dec
lret
enter
push
push
scas
sub
incl
outsb
pop
mov
inc
fistpl
push
cmpsb
mov
pop
pop
pop
pop
pop
lahf
dec
loope
sarl
jge
mov
or
insl
adc
fst
xchg
les
shl
pop
les
cld
jnp
cmpsb
push
ds
jbe
jbe
fldt
jg
sbb
shlb
jbe
cmp
and
xor
or
scas
xchg
out
inc
in
xchg
insb
and
loopne
pop
imulb
addr16
inc
xchg
jo
pop
in
leave
xchg
jg
cltd
imul
xor
aad
add
enter
push
jnp
pusha
mov
scas
inc
xchg
lwpval
add
dec
or
inc
xor
sbb
das
inc
dec
leave
ret
ret
xchg
or
push
pop
in
gs
out
and
push
or
inc
mov
fidivrl
xchg
adc
sub
es
outsl
cltd
push
push
add
call
inc
inc
dec
and
loop
int3
in
mov
push
cmpsl
popa
push
ret
lret
cli
or
pop
inc
sbb
cld
dec
scas
pop
xor
icebp
push
sub
lcall
pop
or
aaa
imul
lock
push
adc
cli
or
hlt
xor
sarb
inc
mov
add
insl
call
rcll
lods
negl
cmp
jmp
jg
outsb
scas
inc
cld
icebp
push
fs
mov
test
lea
mov
and
and
or
aad
push
vpackssdw
mov
gs
or
add
insb
mov
inc
pop
cmpsb
xchg
and
cli
lret
in
inc
push
inc
adc
icebp
lds
mov
inc
push
jnp
orb
mov
fisttpl
xor
dec
sbb
cmp
imul
jl
mov
aad
jle
adc
pusha
xorb
pop
cmp
outsl
fisttps
mov
and
adc
add
dec
xchg
in
jae
xor
jns
mov
adc
jmp
add
inc
dec
loope
add
sti
sub
sbb
push
adc
pop
cmp
pop
push
mulb
outsl
lods
adc
mov
sbb
jg
aam
sar
mov
jg
fwait
je
rcrl
aad
pop
sbbl
lock
mov
mov
cmpsb
je
adc
sub
lds
js
sbbl
mov
push
mov
aad
mov
ret
pop
loopne
inc
popa
mov
push
icebp
and
int
outsl
adc
push
rolb
dec
stos
sub
push
inc
mov
pop
bound
mov
cli
sub
mov
add
sahf
ljmp
jmp
sbb
xor
adc
sbb
mov
test
and
decb
push
sar
pusha
cmp
mov
xchg
sub
es
push
cmp
and
push
sub
add
mov
pop
inc
xchg
add
andb
mov
pop
inc
das
insl
push
inc
mov
push
mov
out
imul
aad
jne
addr16
sbb
shlb
or
aam
call
add
dec
and
shlb
lods
bound
jecxz
sbb
and
pushl
pop
test
push
in
dec
insb
clc
dec
inc
cmpsb
pop
or
pusha
lret
mov
xchg
mov
sbb
scas
div
or
scas
mov
adc
fucomp
aas
jecxz
jp
lahf
sbb
insb
dec
mov
add
or
jle
add
repz
aad
aam
fsubl
mov
fldenv
ffreep
add
insb
mov
adc
xor
add
pop
sbbb
test
sbb
add
add
jecxz
mov
sbbb
pop
enter
mov
cmp
movsb
or
mov
lret
insl
mov
stos
push
mov
push
adc
and
xchg
jo
dec
pushf
test
add
in
mov
shr
jo
idivb
jge
pop
shlb
nop
cmp
jo
out
push
cmc
mov
stos
ljmp
push
out
mov
mov
xor
jmp
jecxz
cmp
rolb
leave
mov
ljmp
mov
leave
addr16
add
cs
pop
sbb
push
pop
popa
neg
cltd
popf
enter
mov
das
in
or
mov
data16
xorl
test
loopne
sbb
mov
testb
jae
mov
add
pop
pushf
out
or
test
loopne
xchg
fcompp
push
mov
push
xor
fcmovnu
mov
pop
cwtl
clc
fbstp
out
subb
sti
idivb
out
mov
test
movsb
mov
xor
and
insl
ret
fs
bswap
aas
mov
push
idivb
test
sbb
mov
mov
mov
xchg
jns
xlat
xchg
or
ret
insl
rcrb
xchg
shlb
mov
or
repz
or
xchg
lcall
mov
mov
jp
sbb
flds
dec
pop
lcall
mov
cmp
outsl
pop
and
sbb
call
inc
js
xchg
test
pushf
std
ja
inc
and
adcb
aas
lea
adcb
mov
mov
pop
pop
push
xchg
mov
clc
sbb
push
int
into
movsl
push
jns
mov
push
pop
lock
and
clc
xorb
dec
test
sahf
in
inc
xor
sbb
push
adc
mov
jbe
jae
sbb
out
mov
fdivs
js
mov
in
fcmovnu
std
test
push
adc
orl
fidivrl
sbb
aas
sti
pop
dec
or
pop
xchg
jl
mov
rcrl
mov
jmp
lods
xchg
mov
ja
and
jg
inc
out
jb
or
adc
das
in
repnz
xor
test
xor
push
mov
std
mov
xchg
xlat
sub
ret
cmp
add
mov
repz
scas
test
add
or
jbe
mov
or
ret
fdivl
sti
int3
jl
pop
fbstp
mov
xor
leave
out
das
ljmp
incl
xchg
adc
xchg
push
ss
adc
cld
xchg
adcl
popa
into
jne
or
or
das
mov
xchg
pop
aas
xor
adc
icebp
push
mov
cmc
inc
pop
ret
idivb
int
roll
xchg
xor
pop
mov
adcb
nop
cmpsl
pop
incb
fcmovnbe
pop
dec
outsl
inc
movsl
xor
push
cmp
or
mov
jmp
dec
pop
jecxz
mov
add
setae
dec
or
aaa
ss
mov
flds
bound
std
xchg
and
test
inc
cmc
add
inc
sub
push
pop
test
inc
fldenv
sbb
sub
pop
movb
adc
fbstp
add
pop
fnstcw
xchg
push
imul
test
shll
xor
mov
jle
jnp
repnz
stos
mov
pushf
mov
jecxz
jmp
inc
mov
xchg
in
loop
mov
ret
and
fisubl
dec
lea
lock
je
mov
cmpsb
jg
cmp
cmpsb
sti
inc
ss
incb
or
test
or
adc
push
incb
xor
rorl
pop
js
pop
mov
cld
jb
sub
out
fidivl
inc
stos
adc
sub
std
jg
loop
pushf
push
aad
mov
sbb
lret
mov
rolb
push
in
nop
iret
adc
xchg
mov
cmpsb
or
jecxz
jl
or
fcomps
jae
cmp
into
push
popa
mov
aam
ffree
xor
inc
xor
shll
pop
xchg
pop
js
pop
cli
cmp
imul
rcrb
dec
aas
push
jecxz
in
pop
xor
jecxz
xchg
push
or
repz
xchg
pop
js
dec
js
arpl
fcompl
inc
movsl
jecxz
lods
sbb
inc
jl
xchg
out
push
dec
mov
inc
push
dec
pop
orb
cmp
sti
in
lcall
jl
out
faddl
cld
jbe
jp
mov
pop
jb
or
sarl
test
out
dec
icebp
test
sarl
pop
jl
mov
pop
fisubrs
inc
out
jns
mov
cmp
lods
lods
lcall
outsb
cmpsl
sbb
mov
pop
or
add
imul
dec
fmull
orb
push
sbb
mov
pop
lock
xchg
jno
mov
dec
jne
pop
loop
out
sarl
cmp
lock
lods
jne
dec
cli
adc
pop
inc
dec
andb
and
mov
push
fwait
jg
incb
bound
sub
adcl
jne
leave
sub
xchg
or
hlt
mov
push
icebp
lea
pop
inc
ljmp
xor
call
fcomps
xor
mov
cmpsb
out
mov
adc
and
and
stos
clc
stos
mov
xor
inc
in
arpl
xchg
jecxz
stos
jcxz
xor
in
adc
addb
aam
push
repnz
loop
mov
aaa
mov
add
pop
in
call
inc
aas
pop
jmp
pushf
sbb
and
mov
fisubl
mov
fisubl
mov
mov
jmp
and
pusha
push
xor
aam
aas
data16
pop
or
hlt
push
cld
and
xor
out
push
arpl
push
mov
xlat
cwtl
je
scas
or
lds
mov
shll
xor
sub
sbb
xor
jo
cmp
ja
lock
sub
xor
call
and
in
fildl
sar
ljmp
push
jnp
jns
repz
popa
cmp
lret
jecxz
jnp
lret
inc
aam
add
adc
lret
push
clc
xchg
mov
sub
bnd
mov
sub
and
loop
test
inc
scas
mov
adc
icebp
add
sarb
cmc
mov
mov
test
and
sub
adc
sarb
adc
and
add
add
arpl
push
iret
aas
sub
imul
ja
in
sub
inc
mov
mov
adc
mov
push
push
or
test
clc
adc
dec
das
xor
jbe
sub
sahf
and
cwtl
scas
ret
sbb
es
push
insl
or
cmpl
ret
fdiv
inc
add
adc
scas
sahf
insl
xchg
cld
sbb
xchg
ljmp
mov
in
in
dec
jno
movsb
lahf
sbb
lret
sub
xchg
add
adc
push
negl
sub
aas
sbb
mov
cmp
and
inc
xchg
or
sbbl
dec
jae
ret
hlt
pusha
push
push
in
popa
add
sti
shlb
xchg
mov
add
or
icebp
data16
jo
mov
fisubl
shlb
ss
out
outsl
in
mov
xor
iret
out
repnz
rorb
test
pushf
ja
cmpsb
add
js
cmpsl
test
sub
sbb
rorl
lock
jmp
xchg
stos
imul
leave
hlt
aas
push
or
not
push
xor
fcmovnb
mov
push
pop
adc
ret
pop
in
push
pop
fadds
sub
mov
lods
cmp
dec
js
in
fildl
in
pop
mov
shll
xchg
dec
or
pop
mov
adc
pop
jp
into
and
out
test
and
lds
inc
int
ljmp
sbb
fdivrl
ficomps
aad
xor
lods
cld
jg
lcall
leave
inc
and
daa
push
adc
adc
jno
xchg
out
int3
fstl
inc
cli
loop
inc
mov
xor
in
and
push
clc
fimuls
push
and
popf
sbb
fsubr
lods
inc
dec
push
stos
mov
call
and
mov
xor
imul
dec
aaa
sub
add
or
push
push
rcll
sub
and
fs
rolb
xorb
xor
popl
mov
sbb
das
and
cwtl
test
outsb
rolb
call
or
fmull
lea
push
push
rcrl
add
inc
cmp
cmpsb
stc
xchg
incb
add
mov
xchg
xchg
or
rcrl
test
mov
hlt
xchg
dec
shlb
dec
fdivrs
call
loopne
jo
dec
das
push
cld
and
jnp
push
push
ja
ret
inc
into
je
and
pop
imul
xchg
je
dec
adc
xchg
mov
sbb
inc
orl
out
aad
xor
stos
add
shlb
or
jbe
inc
test
loopne
dec
jo
sbb
adc
cwtl
mov
push
sub
mov
jl
adc
js
arpl
cmp
lods
enter
xchg
daa
xchg
sbbb
or
mov
das
dec
hlt
inc
cmp
ljmp
adc
cld
stos
or
inc
adc
dec
je
imul
and
cmp
addr16
cmp
and
xor
inc
adc
cmp
aaa
inc
test
jg
and
sbb
push
test
mov
pop
loop
fnstenv
ret
aas
ljmp
add
andl
sub
ret
stos
push
jne
jmp
cmp
xlat
pop
xlat
xor
shrl
clc
mov
aam
adc
add
inc
adc
xchg
push
hlt
cmp
sti
jns
popf
inc
xchg
and
dec
mov
mov
inc
sbb
xor
fcomps
popa
cld
and
xor
inc
and
ret
inc
or
flds
shr
xchg
cli
scas
inc
adc
data16
adc
jge
mov
cmp
mov
cmp
in
test
jbe
jo
ret
jl
or
mov
ret
push
pusha
leave
gs
dec
shll
pop
into
pop
enter
add
jne
icebp
pop
test
jmp
mov
out
xchg
push
add
adc
pusha
push
pop
mov
out
or
inc
adc
add
mov
in
xor
or
popa
cmp
xchg
ret
mov
inc
cli
ja
adc
jnp
add
inc
xor
cmp
cmp
adc
xchg
mov
sbb
test
cmp
sbb
out
sub
fcmovu
loope
out
scas
fs
enter
aam
rclb
les
aam
js
icebp
das
jne
das
dec
addr16
cld
or
fisubs
rol
inc
int
jle
sbb
pop
jnp
inc
fwait
sub
adc
jne
or
int3
ss
and
shrl
cs
aad
ljmp
loopne
jb
into
adc
mov
add
cmpl
scas
loop
clc
cld
lds
push
inc
lahf
imul
bound
fadd
andl
repz
adc
cmp
fnstcw
add
adc
int
aam
xor
jne
in
jmp
call
dec
cmc
lods
loopne
push
and
mov
cli
jno
adc
aas
xor
pushf
outsl
insb
push
ficomps
mov
push
xor
mov
outsb
shlb
or
cli
push
movsl
pop
dec
ds
iret
jns
daa
cmpsb
jle
sub
sar
test
push
push
out
or
sbb
gs
scas
jno
sub
test
mov
xchg
sbb
jb
in
arpl
xor
mov
aas
stos
js
rorb
cltd
and
pop
jmp
sub
mulb
xor
int
inc
repz
cmc
adc
pop
inc
mov
cld
pop
aaa
andb
cmp
int
int3
lock
jge
cli
test
adc
xchg
fwait
mov
sub
pop
imul
pop
mov
ret
rcrl
pop
cltd
insl
test
dec
loope
push
outsl
addb
add
js
pop
sbb
inc
shlb
dec
inc
scas
inc
or
xor
sub
sub
or
loopne
sbbb
out
loopne
rcrl
inc
daa
sub
sbb
iret
sbb
outsl
cmpsl
xor
shlb
out
add
jmp
cmc
pop
xor
nop
add
inc
sbb
or
gs
jb
in
xor
xchg
ljmp
adc
orb
mov
in
sub
and
fimuls
dec
add
daa
jnp
mov
movsl
adc
xchg
mov
fneni(8087
or
je
andl
inc
in
xor
dec
mov
out
adc
add
add
pop
inc
loopne
inc
push
faddl
loopne
fsubl
sbb
roll
int3
loope
inc
jge
test
push
aaa
xor
add
xchg
aam
clc
pop
xchg
and
push
fcmovnb
and
inc
inc
sbb
add
sti
arpl
push
dec
xor
dec
xor
pop
push
pushf
pop
inc
pop
cmpsl
jp
loopne
xchg
imul
jo
das
hlt
sbb
jecxz
pop
push
test
dec
push
push
cli
ljmp
xchg
or
jo
cmp
push
mov
add
sub
add
xchg
mov
sub
in
jp
push
shll
and
mov
xor
or
fbld
lret
sub
xchg
inc
dec
mov
lret
add
cwtl
add
ljmp
xor
xor
push
add
je
dec
or
push
aaa
add
icebp
xorl
jg
filds
cld
fs
jg
and
cmp
mov
dec
add
rol
sar
outsl
jg
inc
push
add
cmpsb
mov
pop
bound
add
cli
aaa
cli
div
jbe
mov
xchg
mov
pop
add
sbb
ss
iret
mov
jge
lock
pop
notl
or
mov
push
cmp
mov
subb
incl
sub
stos
scas
mov
aas
mov
repz
idivb
pop
add
adc
ds
push
xor
mov
mov
lods
cmp
sbb
xor
xchg
mov
and
arpl
ja
mov
loopne
ljmp
cmp
sub
xor
sub
adc
clc
add
adc
pushf
add
mov
jno
lahf
cmp
pusha
pop
movsl
negb
jno
test
pop
push
add
cmp
clc
xor
iret
mov
sub
leave
pushw
pop
stc
in
lcall
pop
sub
sub
mov
or
xchg
shll
jmp
int
or
lds
call
rol
std
fs
or
aam
dec
and
mov
movsb
fisubl
test
loopne
sbbl
pop
daa
inc
add
cmpsb
ret
push
psubb
jo
xchg
loopne
pop
mov
ljmp
and
ds
addb
cwtl
roll
push
adc
daa
mov
les
sub
ret
inc
and
or
out
inc
les
or
xor
push
mov
int
insl
xor
and
jg
fsubl
stos
orb
and
add
push
push
jp
repz
movsl
dec
mov
mov
sti
add
popa
add
mov
int3
popf
aam
stc
add
fwait
push
sti
shll
push
int3
mov
dec
sarb
inc
mov
adc
jmp
sbb
das
xor
je
dec
dec
sti
pushf
jne
aas
or
out
jno
bound
mov
stos
pop
int3
adc
sahf
or
pop
adc
ret
fwait
lock
mov
add
dec
xor
dec
insb
lock
in
add
xchg
mov
lcall
sbb
xchg
mov
or
jo
xchg
jmp
mov
cmp
out
int3
fs
adc
push
pop
push
mov
adc
pusha
rolb
xchg
enter
test
xor
xchg
add
add
inc
cmp
pop
lods
dec
mov
cli
cli
rcrb
or
add
or
inc
jne
fisttpll
mov
mov
fistpll
cmp
lea
add
aam
fstl
icebp
roll
out
cmp
and
pop
push
test
lock
adc
mov
lods
mov
andb
or
pop
or
adc
fcomp
adc
addr16
fadds
shlb
stos
mov
adc
fsubrl
les
xchg
jnp
and
call
in
xchg
add
adcb
sbb
cmp
adc
sub
negl
inc
mov
sbbb
sbb
cmc
test
sub
add
or
mov
pop
and
into
or
shlb
push
inc
pop
push
dec
cwtl
fadds
invd
ja
mov
sub
xorb
mov
inc
and
inc
add
rcr
les
inc
cmp
shlb
pop
fmuls
jmp
rclb
sub
fwait
cmp
movsl
insl
push
jle
test
mov
popf
xor
xor
and
add
dec
cld
aam
and
or
pop
xchg
xchg
jae
jmp
frstor
sub
dec
leave
fwait
xchg
sbb
lea
mov
push
bnd
test
add
shl
ds
jmp
and
aam
iret
xchg
leave
sbb
xchg
mov
mov
loopne
pop
fiaddl
fwait
je
cld
push
fidivs
inc
cld
aaa
sub
mov
int3
or
mov
sarb
and
mov
sbbb
loop
loopne
sbb
cs
adc
xchg
popfw
loope
xor
jg
push
jbe
dec
rolb
mov
add
mov
loop
push
repz
idivl
loop
xor
shrb
sahf
adc
and
add
jne
shr
dec
xchg
lods
mov
and
pop
outsl
cs
jae
and
fstps
mov
adc
jns
adc
xor
pop
mov
xlat
add
jnp
or
jp
popa
ss
mov
clc
push
add
dec
and
jbe
out
or
fiaddl
clc
out
pop
adc
popf
repnz
bound
dec
sbb
mov
sub
mov
pusha
add
or
adcl
add
mov
sbb
push
shl
je
cmp
xchg
cmp
adcb
inc
add
sub
push
inc
push
outsb
cs
and
mov
pop
xor
pop
popf
stc
dec
mov
sbb
stc
fdiv
adc
or
dec
pop
fwait
push
mov
or
ss
testl
mov
ror
jecxz
rcrb
rcll
mov
std
insl
aaa
mov
push
out
pop
xchg
faddl
lock
inc
out
push
adc
fstps
rcl
xor
or
clc
mov
mov
orl
adc
daa
lock
mov
or
sub
push
xchg
aas
movsb
das
repnz
addr16
xor
dec
mov
add
fcmovnbe
popa
add
in
sti
pop
pop
xor
jbe
lock
call
pop
jne
stos
dec
xor
cmp
inc
repz
in
sub
jno
aam
repnz
inc
dec
cmp
jmp
sbb
or
mov
inc
mov
lock
call
or
dec
lods
fists
mov
or
ds
dec
dec
or
mov
fcomp
rolb
sub
push
hlt
call
ljmp
dec
cmp
data16
add
in
pushf
imul
pop
ljmp
xor
lds
inc
icebp
or
inc
andb
add
add
cmp
lock
and
push
xchg
ljmp
and
jno
xchg
sarb
sbb
pop
aam
shlb
pop
dec
push
xchg
icebp
andb
xor
fndisi(8087
testl
cmpb
inc
inc
push
ret
addr16
arpl
in
in
test
repnz
sahf
out
add
and
test
lock
push
jo
into
cld
sub
scas
es
adc
ret
scas
cld
add
into
inc
cld
lea
push
mov
add
add
pusha
sub
les
fbld
jbe
in
shlb
mov
inc
shrl
add
cli
loopne
call
inc
or
fsubs
rcl
bound
push
or
cmp
lea
xor
jl
mov
dec
add
in
sbb
mov
and
or
inc
push
rorl
rolb
cmp
jmp
popf
xor
loopne
sbb
push
cwtl
push
and
rorl
or
add
add
or
add
mov
je
ret
sbb
mov
or
bound
xor
and
ss
pop
add
lret
add
loope
inc
jg
mov
add
push
mov
iret
inc
add
ds
sub
jae
rolb
push
sbb
ret
outsb
rcrb
icebp
addr16
std
nop
les
std
inc
dec
shll
pop
mov
js
cltd
pop
call
insw
jmp
out
jne
rclb
pop
test
dec
les
mov
imul
or
or
push
out
insb
aam
dec
and
ss
lret
jno
bnd
fdiv
push
pop
xchg
outsl
les
pop
sbb
dec
adc
icebp
cmpsl
andb
sub
jecxz
sbb
mov
jge
jmp
sbb
ret
lds
mov
loope
jecxz
rclb
or
sbb
jbe
cmp
ja
or
out
imul
repnz
jmp
test
test
movsl
mov
ficoms
std
movb
add
sub
pusha
lcall
sbb
dec
lock
and
xor
ljmp
sub
loop
push
sub
fistl
dec
lock
cmp
sbbb
inc
test
push
mov
sbb
aad
loop
inc
pop
sub
or
push
push
xchg
or
les
in
pop
clc
and
shrl
pop
in
sub
add
test
sarb
xchg
popf
pop
add
inc
jae
cltd
sub
cld
push
and
outsl
scas
xchg
call
xchg
rolb
shl
cs
mov
repz
jge
cld
fldt
rcrb
jge
pop
fadd
mov
xchg
push
add
ret
subps
mov
xlat
cli
and
pop
and
and
out
mov
mov
outsb
cs
je
lods
lcall
popa
dec
rcrl
dec
cmpsb
cmp
sbb
out
dec
cld
out
inc
xor
js
adc
stos
sti
aaa
mov
xchg
adc
dec
sub
jle
lret
adc
push
push
outsl
fists
fists
cwtl
mov
test
add
adc
jecxz
insb
arpl
and
add
ret
inc
mov
and
mov
sar
cld
rep
clc
jmp
inc
lods
or
loop
mov
dec
in
cmp
mov
and
out
pop
in
inc
sbb
lds
daa
scas
jl
mov
das
push
inc
aas
add
stc
adc
xor
icebp
in
jg
repz
inc
test
andb
outsl
adc
icebp
dec
fisttpl
shrb
icebp
add
xchg
data16
xlat
andb
add
or
cmpsb
int3
sbb
adc
hlt
add
push
out
test
lret
movb
adc
inc
or
push
or
lcall
bound
mov
xchg
mov
mov
lret
push
mov
sub
cmpl
test
aad
adc
mov
test
popf
lcall
cmc
loopne
pop
mov
nop
movsb
sti
aas
es
test
outsb
outsl
pop
decb
loopne
sub
sbbb
push
js
mov
mov
jo
add
and
push
xlat
xchg
or
or
adc
idiv
lea
adc
ja
data16
jg
mov
cmp
shrb
popa
or
add
add
dec
mov
hlt
arpl
mov
outsl
cs
inc
xor
and
cmp
sbb
clc
or
adc
cltd
inc
cmp
ficompl
ljmp
sub
add
sub
lods
shll
sarb
int3
mov
add
ret
xchg
xchg
sbb
cld
sbb
test
jl
inc
lock
mov
mov
jecxz
adc
mov
inc
pop
fldl
es
insl
xor
das
ds
sbb
add
dec
jmp
jecxz
imul
pop
jbe
jmp
pop
shll
int3
mov
cmc
jg
jmp
aam
jb
insb
jae
push
add
shll
shlb
push
test
pop
mov
les
mov
mov
adc
inc
mov
xor
sbb
in
xchg
setne
rcrb
dec
into
jg
push
jno
out
mov
mov
ss
sahf
inc
nop
jnp
subl
pop
clc
fistl
nop
cmp
mov
and
outsl
or
les
mov
cld
fsubs
stos
mov
add
outsl
cmp
mov
mov
sti
shlb
outsb
cld
xchg
mov
and
iret
mov
push
out
cmpsb
aas
rorb
add
sbb
jb
ljmp
sub
test
pop
sbb
adc
sbb
mov
xor
xchg
push
jge
sbb
jl
call
mov
add
clc
jo
fisubrl
cmpl
shrb
xchg
clc
xor
cmp
fstpl
adc
and
add
pop
mov
xor
dec
adc
push
mov
sbbl
sbb
adc
cmp
ljmp
les
or
setp
sub
mov
rolb
add
mov
push
fisubrl
cmp
faddl
inc
jae
push
and
daa
aad
mov
or
faddl
xor
add
std
fdiv
pop
cwtl
lods
adc
sub
mov
or
adc
adc
mov
lahf
mov
jnp
pop
xchg
inc
mov
data16
int3
mov
cmp
pop
cld
jbe
jnp
sbb
and
or
push
nop
xor
lcall
dec
mov
jo
lahf
and
aas
sbb
mov
push
sub
outsb
add
ret
xor
mov
xor
dec
lea
inc
push
daa
popf
js
int
jge
sti
jp
inc
pop
sbb
fsubs
sbb
pop
jecxz
and
dec
mov
ds
cmp
inc
push
jecxz
das
push
leave
out
mov
das
dec
add
xchg
push
rcl
and
es
lock
insb
out
out
out
jmp
lds
lahf
dec
pusha
ljmp
or
sub
les
adc
add
cmp
sbb
adc
adc
enter
sub
andb
or
rcll
cmpsb
inc
add
xchg
lret
dec
ds
and
in
lahf
inc
sub
mov
lahf
jmp
aad
cvtpi2ps
add
adcl
add
iret
adc
sbb
repnz
testl
imul
cli
push
ljmp
pop
inc
outsb
cmp
std
ljmp
mov
enter
enter
fiaddl
movsl
jecxz
or
mov
frstor
fmulp
push
sbb
test
jo
xlat
pop
cli
xchg
clc
rorl
out
js
faddl
loope
and
cltd
hlt
or
das
dec
mov
call
jge
jge
aad
ret
call
shll
sbb
lea
pushl
fldenv
pop
mov
repnz
sbb
and
mov
or
out
pop
aas
call
mov
fidivrs
xor
mov
decl
int3
addr16
or
push
int
cld
arpl
mov
pusha
xchg
jne
mov
sbb
push
push
sbb
mov
pushl
cld
add
jl
addb
stos
xor
mov
cmp
in
push
aaa
push
dec
sbb
hlt
add
cli
out
pop
pop
mov
daa
dec
mov
mov
xor
cmp
loop
mov
inc
pop
fwait
gs
hlt
mov
or
mov
incl
mov
dec
cs
dec
sub
outsb
sahf
jle
cli
addb
call
cltd
shrb
and
loopne
movl
test
inc
divb
arpl
or
pop
das
lods
sbb
aam
adc
cmp
inc
sbbl
hlt
mov
adc
mov
push
push
add
mov
pushf
sbb
shlb
cmpl
iret
in
cmp
jbe
inc
inc
pop
sbb
jle
lods
xorl
fadds
and
dec
pop
push
push
sub
jp
js
std
outsl
mov
sbb
sarb
mov
push
sub
lds
inc
xor
pop
ror
jo
cmp
fistps
mov
mov
pop
inc
cmp
scas
shll
xchg
in
xor
or
push
sub
test
sti
sub
icebp
test
daa
xchg
popa
lahf
mov
jle
lcall
xchg
push
jnp
mov
rorl
je
jecxz
in
mov
mov
xchg
and
popa
or
adc
adc
jbe
cmp
subl
and
repz
les
sbb
adc
jle
add
sarb
jns
stc
aam
and
lahf
scas
mov
std
mov
in
enter
mov
rcrb
push
mov
fcoms
push
fmul
jecxz
aad
gs
lret
movsl
and
jbe
ret
cmp
cli
pop
movsl
gs
sbb
lret
cmc
adc
mov
and
xor
add
adc
pop
add
jg
nop
rorb
adc
addb
or
jmp
and
mov
xchg
jo
jmp
inc
add
test
cli
push
je
sarb
arpl
adcl
pusha
call
popf
popf
cmpsl
pop
movsl
lock
lea
sub
sub
jge
or
pop
fsubl
push
push
sar
xlat
bound
jne
push
inc
ljmp
xchg
nop
faddl
adc
pusha
mov
xor
cmp
fisubl
js
in
and
movsl
dec
fisubl
out
leave
xchg
xor
push
cmp
test
leave
loope
es
clc
and
mov
icebp
push
inc
mov
jp
hlt
daa
rolb
pushf
dec
dec
sub
inc
cs
dec
stos
and
cmc
sbb
repnz
xchg
icebp
mov
pop
cmc
push
aam
mov
imul
push
lcall
sbb
lods
xor
pop
shrb
mov
stos
sub
fdivr
mov
mov
call
cmp
fists
xor
inc
inc
push
lahf
sub
xchg
inc
xchg
jne
enter
add
inc
or
adc
add
pop
xor
adc
pop
mov
scas
jl
cwtl
shr
rcl
mov
fsts
add
xor
pop
jle
sbb
push
loop
inc
xchg
pop
popf
lods
pushf
or
xchg
xchg
push
sbb
pusha
jbe
inc
lret
xor
mov
and
sbb
loope
rcl
xchg
fsubs
xorb
adc
cmp
sbb
dec
mov
and
push
clc
and
cs
jmp
lret
dec
sbb
clc
mov
mov
fs
sub
xchg
das
push
jge
inc
insb
in
loopne
add
aaa
testb
xor
ret
andb
jns
test
push
loopne
pop
insb
add
and
vmaxps
sahf
mov
push
shll
scas
shll
fstpl
and
cwtl
add
xchg
sub
jnp
mov
push
outsb
add
loopne
pop
xor
scas
fmuls
sbb
sub
mov
add
enter
mov
sub
inc
push
cmc
fiaddl
scas
aad
insb
mov
loopne
bound
inc
mov
xor
or
and
sar
push
xchg
add
mov
fmuls
orl
test
adc
push
loop
push
daa
add
or
pop
pinsrw
aad
test
call
adc
mov
jnp
mov
lea
orb
icebp
ja
mov
ja
lock
call
inc
sub
jae
jecxz
fsubs
hlt
and
arpl
ds
dec
ret
or
jl
in
jle
test
pop
xor
fwait
cltd
inc
lret
lret
sbb
negb
mov
ret
mov
ret
mov
add
popf
push
rcrl
cli
pop
outsl
out
cwtl
push
cmp
jne
and
mov
adc
or
roll
push
mov
dec
orb
aam
sbb
test
shl
notl
sub
adc
lcall
ljmp
cwtl
jbe
int3
push
adc
jbe
faddl
imul
adc
mov
xor
dec
addl
adc
cmp
xchg
call
in
outsl
fnstsw
cmp
sub
pusha
test
mov
dec
rcr
scas
mov
adc
dec
cwtl
push
fld
subb
stc
pop
push
lcall
mov
pop
and
push
pop
movsl
or
mov
pop
mov
xchg
mov
push
enter
dec
xchg
movsl
sub
adc
sbb
xchg
leave
mov
frstor
sbb
call
fists
in
sbb
cmpsl
mov
ja
adc
mov
fisttpl
sub
jo
lock
cmpl
sbb
xor
test
inc
inc
mov
stos
ljmp
pop
addr16
nop
lods
dec
push
leave
sbb
or
movsb
sbb
xor
jb
ss
xchg
js
mov
call
push
adc
add
lds
fiaddl
add
mov
mov
iret
cmp
lock
stos
scas
add
jno,pn
add
inc
pop
sahf
inc
filds
jbe
dec
mov
dec
push
jp
mov
cmpsl
mov
push
xor
xchg
es
lock
das
adc
out
fnstcw
mov
push
xor
dec
aaa
out
add
or
fiadds
xor
inc
jmp
add
ret
jae
aam
out
jae
imul
pop
movsb
and
sub
dec
ret
ljmp
adc
mov
outsb
or
not
mov
test
sub
push
mov
incb
outsb
sub
ficoml
outsl
cld
or
movsl
mov
pusha
or
rcl
ljmp
cmpsl
xor
push
and
adc
mov
sbb
pop
or
mov
lock
addb
bound
or
ja
inc
sub
add
das
lock
push
out
cltd
test
jnp
sbb
pop
jnp
push
cmp
imul
ret
pop
jmp
or
outsl
inc
dec
popf
leave
std
push
mov
mov
out
adc
mov
ret
push
or
aaa
or
in
push
scas
pop
sbb
cwtl
add
test
or
adc
data16
arpl
in
inc
imul
movsb
insb
loopne
outsl
cld
loopne
lock
movsl
add
mov
jmp
push
or
cmp
xchg
push
mov
jnp
popf
out
in
ss
cli
leave
dec
insl
pop
push
test
out
cmpsl
lcall
pusha
iret
push
mov
jl
or
pop
jmp
adc
push
xlat
mov
cwtl
inc
or
insl
adc
gs
xor
cmovns
jne
dec
add
push
xchg
add
fidivrl
mov
or
add
push
data16
or
lret
xor
and
cmpsl
jno
mov
stc
test
sar
mov
sahf
shrl
sub
icebp
mov
mov
call
loope
push
adc
fucomp
rcll
inc
and
mov
adc
out
push
sub
pop
sbb
push
cs
and
fcmovnbe
clc
fisttps
fsts
xchg
out
xor
xlat
push
push
cmpsb
dec
outsl
icebp
int
pusha
jle
mov
mov
push
popa
mov
push
jmp
int
loope
xchg
leave
aad
add
xor
inc
pop
jg
jg
pop
jg
and
js
fisubl
shr
sbb
fstl
dec
lcall
insl
lcall
repz
and
adc
cmp
jecxz
add
das
sbb
mov
push
or
lods
jb
arpl
ret
call
outsl
cltd
cld
iret
test
xor
inc
pop
cwtl
cld
je
xor
loop
icebp
cmp
leave
rclb
cmp
pushw
xor
push
push
orb
pop
sub
xchg
fidivl
mov
cmp
pop
cmp
mov
push
pop
jmp
sub
cmp
icebp
mov
fdivr
cmc
xor
xor
cld
loopne
outsl
cld
add
jecxz
lret
sub
sbb
clc
test
aaa
pusha
and
call
les
xchg
ret
sbb
xor
mov
lods
aad
cmp
sub
dec
or
test
mov
push
mov
or
imul
sti
mov
jo
jb
test
filds
xor
jle
push
aad
and
mov
scas
cs
insb
xchg
xchg
ret
adc
ficoml
jb
adc
dec
jb
pusha
ficomps
leave
jmp
adc
lea
rcr
fmuls
scas
push
jp
push
push
std
add
clc
fcmovnu
aaa
cmp
sub
adc
push
loopne
sti
jp
fwait
repz
mov
scas
push
sub
pop
andl
aam
pop
pop
mov
inc
pop
jae
and
stos
arpl
mov
subb
xchg
pop
int3
pop
or
jge
sbb
pop
pushl
cmp
jns
sbb
inc
push
ffreep
cmpsb
dec
cltd
sbb
sub
test
mov
ja
ret
and
sub
mov
clc
mov
ss
sub
xor
mov
movsl
jb
push
mov
insl
sti
loopne
jge
inc
dec
add
das
sub
xor
fdivs
push
hlt
ss
xor
ret
jg
cmp
xor
push
mov
mov
shrl
sbb
and
les
xchg
mov
pusha
loope
std
sti
add
test
ljmp
inc
das
ja
hlt
repnz
std
ljmp
pop
gs
pop
sbb
dec
jb
mov
or
add
outsb
sbb
pop
mov
aas
push
adc
add
out
rorl
add
or
repz
cmc
or
inc
icebp
popa
xor
rclb
dec
daa
and
sub
adc
cmp
test
decl
mov
add
push
arpl
sbb
mov
ret
pushf
subl
xchg
pusha
pop
add
mov
add
jl
or
cmp
lea
dec
push
jmp
testb
add
std
outsl
sbb
in
jb
insl
xchg
test
lahf
mov
push
nop
push
ljmp
ret
stos
mov
loop
jne
jmp
pushf
pusha
mov
cmp
int
mov
cmp
shrl
inc
jb
add
mov
test
mov
push
ja,pn
cs
and
fdivs
adc
rorb
adc
mov
mov
aaa
and
adc
sbb
idivb
das
fst
insb
lock
inc
xchg
push
fildl
rolb
sbb
or
sahf
add
stos
dec
xchg
push
and
stos
fimull
mov
cmp
pop
sbb
bound
mov
inc
lods
mov
pop
mov
xorl
cmp
xor
xchg
into
add
into
scas
xor
add
sbb
pop
mov
push
lods
lea
adc
out
adc
cmp
ljmp
sub
xlat
movsb
jp
xor
in
xor
adc
shlb
fstpt
jb
cmc
jecxz
pop
or
mov
test
sub
inc
mov
adc
dec
insl
pop
call
in
mov
addr16
or
add
cmpsl
dec
mov
inc
jno
into
ljmp
dec
and
in
adc
or
xor
call
and
lock
cmpb
insl
push
outsb
push
std
dec
shlb
push
lock
or
inc
fwait
sbbb
xor
jbe
push
add
push
xchg
sahf
jbe
sbb
ss
or
cmp
mov
add
xor
and
inc
or
aas
addb
sbbb
ret
sbb
push
adc
jbe
cmp
push
mov
sbb
mov
jo
or
jne
pop
xor
xchg
lds
xor
sbb
inc
adc
add
ret
push
mov
rorl
cld
and
addl
adc
add
ret
movsb
ja
hlt
aaa
rorb
in
out
imul
fnstsw
mov
lea
je
std
push
fcoml
mov
add
push
mulb
das
ja
int
add
mov
sub
mov
dec
nop
icebp
fcoml
int
jmp
jge
adc
sti
fistps
popa
dec
sub
add
fcomip
inc
push
andb
aas
sbb
std
pop
test
call
imul
fsts
inc
adc
sub
xor
pop
ficoml
dec
shlb
and
lea
sub
dec
nop
jle
xor
mov
jae
mov
add
stos
adc
jp
das
adc
inc
stc
test
xchg
mov
or
xor
mov
mov
xor
call
sti
inc
xchg
stc
xchg
sub
mov
inc
sub
inc
sub
mov
adc
aaa
pop
addr16
push
add
aam
shl
xchg
cmp
pushl
imul
or
ret
xor
test
add
outsl
icebp
jbe
adc
nop
sti
and
fstl
jmp
sbb
push
xchg
xchg
add
xchg
ljmp
jecxz
rol
shrb
or
sbb
pop
mov
mov
into
inc
mov
jmp
les
or
adc
inc
jecxz
fstpt
mov
icebp
xchg
jp
push
pusha
pop
shr
es
push
mov
nop
or
push
or
imul
popf
add
les
fneni(8087
incl
push
jae
mov
pop
adc
loop
lods
xor
sbb
add
inc
adcl
sub
scas
mov
inc
fldcw
lahf
cld
pop
mov
jg
es
imul
jne
sbb
lret
cmp
xor
add
xlat
lret
in
mov
and
dec
pop
add
dec
pop
or
movsb
dec
pusha
aam
fbld
xor
loope
push
fwait
dec
sub
sbb
movsl
mov
jb
mov
sar
hlt
add
fmull
sub
faddl
and
add
mov
nop
lahf
add
out
add
and
adc
mov
js
out
adc
stos
pop
lock
adc
es
sbb
inc
pop
cmp
nop
push
int3
inc
xor
movsb
mov
shll
adc
or
inc
mov
dec
mov
xchg
negl
inc
dec
stc
or
xchg
adc
pop
sarl
fildl
push
pusha
and
cmp
shrb
mov
cmp
movsb
test
or
or
ljmp
movsb
fsubr
dec
hlt
pop
jnp
ret
jecxz
add
sbb
scas
sub
dec
pop
lods
fldt
sub
add
repz
cld
loope
inc
loopne
inc
ffree
push
imul
jecxz
fildll
jp
pop
enter
popa
or
or
cmp
cmp
pop
jg
mov
imul
pop
loopne
push
shll
xor
jo
or
and
movsl
lock
push
aaa
fadd
adc
rolb
mov
adc
data16
stc
xchg
push
push
loope
cmp
loop
add
daa
and
jns
sbb
jo
xor
dec
lock
xor
push
jo
inc
and
test
pop
insb
xchg
fdivrl
aas
in
xchg
inc
sub
addr16
mov
in
pusha
or
pushf
sbb
popf
outsl
mov
adc
inc
movsb
jecxz
bound
inc
sbb
push
dec
pop
jecxz
adc
adc
fwait
sbb
inc
mov
xor
sbb
add
dec
addb
add
loopne
push
notl
movsl
sub
sbb
paddd
insb
jno
inc
pop
mov
and
cltd
mov
xor
add
popf
test
icebp
jb
test
call
xchg
adc
fwait
jp
mov
push
fistpll
or
lods
bound
call
mov
scas
pop
or
popl
clc
xor
clc
fs
fucomp
mov
cli
jbe
or
xor
insb
dec
mov
jmp
icebp
pop
adc
push
add
ffreep
out
sarb
or
jg
pop
imul
std
pop
pop
dec
addr16
mov
fcmovbe
cmp
bound
fimuls
or
aas
shlb
pop
in
and
out
scas
stc
mov
imul
incl
add
mov
inc
scas
lock
repz
cmpsl
lock
jbe
gs
aaa
in
mov
rcll
das
add
rcl
jnp
mov
incb
out
idivb
lods
pusha
jg
lock
xor
adc
pop
icebp
imul
incl
dec
or
add
fnstcw
pcmpeqw
sbb
or
lods
outsb
lock
pop
imul
cwtl
clc
jbe
lods
movsl
fcmovnbe
data16
adc
movsl
push
and
cmp
data16
push
jle
aam
push
cld
xor
jp
mov
bound
es
mov
ljmp
test
jge
lock
add
adc
add
pop
shrb
ds
and
insl
inc
mov
jge
ret
sub
repnz
pop
push
or
jg
test
add
stos
cmc
enter
scas
dec
jge
mov
xchg
push
mov
clc
xchg
fiadds
popa
push
mov
ljmp
ss
ret
out
loopne
mov
push
dec
imul
loopne
and
aaa
jno
dec
dec
sbb
js
dec
in
push
sbb
jg
std
aaa
nop
dec
inc
mov
adcl
cltd
loopne
pop
sub
repnz
rorb
sbb
mov
sbbb
aad
outsl
adc
sahf
nop
js
add
daa
insb
inc
aaa
push
fwait
xor
aas
inc
mov
ljmp
loopne
xlat
jno
cli
mov
mov
popf
adc
adc
aaa
out
sahf
adc
out
dec
jg
add
xor
mov
xor
in
sub
pop
xor
js
jl
push
push
rcl
dec
pop
mov
add
inc
cmp
inc
and
adc
loopne
add
jb
roll
and
insb
pusha
inc
test
jb
test
pop
cs
adc
dec
cltd
push
mov
mov
popf
test
leave
add
test
scas
pop
scas
shlb
stos
in
add
subl
and
and
adc
dec
jno
xchg
das
iret
push
shlb
sub
cmp
dec
push
cltd
cmpsb
das
dec
inc
lods
ljmp
or
mov
addb
cwtl
inc
pusha
adc
push
inc
pusha
pop
pop
inc
adc
fldenv
adc
loop
pop
mov
inc
push
fimuls
mov
test
adc
icebp
repz
xchg
inc
xor
test
shrb
cmp
nop
scas
cld
jno
or
inc
inc
clc
cmp
xor
sub
std
insl
push
inc
test
ss
xor
inc
loopne
arpl
sub
shlb
xchg
xor
test
mov
pop
sbbb
rclb
mov
bnd
pop
pop
or
push
ret
pop
sbb
jo
xchg
or
or
sub
push
lods
sbb
lea
rcll
imul
pop
aam
loope
pushf
adc
add
sbb
cwtl
push
sbb
stos
and
dec
insb
xchg
loopne
pushf
jge
push
mov
xor
dec
jo
loop
repz
push
xchg
test
test
adc
mov
or
enter
and
icebp
lds
sbbl
inc
push
rorb
test
popa
incb
dec
lock
mov
xor
in
pop
lea
xorl
pop
inc
and
test
and
lods
and
movsb
or
test
mov
jg
adc
jbe
sub
dec
cltd
loopne
pop
dec
fld
lods
add
add
jne
dec
fmul
sub
and
lcall
add
mov
cmpsl
add
rcrl
ds
popa
popa
hlt
movsl
xor
test
push
jo
xchg
add
or
sarl
or
rcrl
inc
icebp
test
fsubrl
dec
das
je
cs
push
lret
addb
pop
lock
ljmp
shll
fwait
mov
addl
push
or
xor
mov
push
fbld
pop
loop
push
outsl
fcompl
pop
adcl
jl
addb
add
add
dec
xor
fisttps
adc
test
loope
pop
sub
inc
dec
mov
pop
int3
pop
adc
pushl
mov
stc
ljmp
into
cltd
dec
push
pmullw
add
mov
and
frstor
mov
push
insb
lock
jl
push
loope
sbb
push
mov
add
jle
add
lods
inc
insl
ficoms
mov
pop
lods
pushf
push
fsubrs
mov
lcall
and
dec
movsl
bound
mov
pop
xor
lret
mov
push
cmp
xchg
in
test
xchg
test
aad
les
sub
adc
loop
xchg
mov
shrb
out
mov
or
inc
mov
fwait
std
daa
mov
pop
xor
mov
push
or
cmpsl
xor
sbb
xor
les
inc
sti
mov
sub
and
aaa
dec
cs
shll
movsl
mov
cli
xchg
lret
add
push
sbb
push
dec
les
add
pop
jle
mov
jmp
aaa
jle
decb
test
xchg
popf
aaa
data16
js
xchg
mov
xor
nop
shrl
xchg
outsl
std
pushl
bound
out
inc
inc
pop
jne
xchg
cmp
mov
inc
add
cmp
mov
test
adc
or
mov
xor
ficompl
pop
or
pop
loop
mov
or
xchg
jmp
push
imul
or
inc
inc
aam
dec
es
nop
jb
and
lock
jnp
fbld
inc
rcrb
in
ljmp
xchg
fstps
sbb
push
cmc
push
sbb
xchg
jle
inc
sub
dec
fisubs
jo
lahf
jno
add
test
das
pop
ja
xor
mov
loop
add
aaa
movsl
call
jmp
bound
push
mov
imul
decl
and
andb
or
and
mov
cmp
dec
add
or
xor
pop
mov
jmp
icebp
xor
mov
repnz
add
lea
int
sbb
sarl
out
fisubrs
sub
std
or
pop
mov
es
stc
test
adc
mov
in
stos
sbb
pop
lret
lea
mov
cs
insb
fldt
out
pop
fstpt
mov
js
out
add
mov
shr
mov
fistpll
add
cmc
sbb
add
faddl
mov
pop
cmc
inc
movsl
iret
adc
xor
mov
stc
push
push
jg
lds
push
inc
es
shlb
mov
nop
mov
fidivrs
aad
push
loop
test
stos
inc
push
push
mov
out
enter
adc
je
shll
lock
lret
jmp
outsl
push
add
dec
jecxz
fisubrs
dec
add
scas
xchg
mov
idiv
bound
push
movsl
shr
bound
cmp
jg
dec
cs
fsubrl
adc
sti
scas
mov
sub
jns
ss
mov
inc
ds
jb
fstl
sarb
outsb
mov
lret
adc
lds
fldl
imul
sub
call
je
and
dec
std
sti
push
mov
push
mov
sub
and
xor
ja
dec
shlb
clc
mov
xor
pop
mov
mov
and
push
xchg
aam
pop
adc
mov
addr16
cmpb
inc
sbb
jo
mov
test
jno
jns
sbb
dec
xor
dec
cmp
cmp
jl
add
mov
out
orb
cmp
push
dec
xchg
jnp
xor
mov
dec
sub
adc
push
pop
int3
test
jl
cmp
jge
out
nop
add
pusha
rorl
cmp
jbe
inc
sub
ljmp
lods
shr
std
lea
adc
jle
ds
mov
movsl
in
dec
fcmovu
rcll
inc
lahf
data16
popl
insb
aaa
dec
xlat
mov
js
sbb
mov
push
add
add
leave
jle
xor
mov
imul
xchg
and
or
pop
xchg
and
mov
mov
mov
decb
bound
fistps
mov
icebp
unpcklps
add
inc
and
push
out
insb
or
rcll
pushl
std
je
sbb
ror
std
jle
popa
and
pop
lret
add
popa
pushf
or
test
ljmp
popf
add
outsb
or
jns
dec
repz
out
sub
mov
add
aad
scas
mov
inc
mov
jl
loope
in
and
cmp
jb
or
scas
add
inc
call
stc
testl
push
cmp
bound
gs
ret
dec
not
sbb
repnz
inc
or
mov
and
mov
insl
adc
xchg
out
incl
cmp
in
mov
movsl
dec
xor
mov
mov
push
std
inc
or
fwait
pop
sarl
aas
xor
cmpl
mov
lret
sub
push
mov
aaa
sub
test
xor
dec
cmp
pop
and
loopne
in
lcall
aam
sti
jp
xor
jle
in
cmp
push
jecxz
loope
cli
inc
scas
jae
cmc
add
jg
mov
and
rorl
push
pop
aas
rcl
aam
push
mov
pop
and
push
sub
jb
sbb
insl
add
scas
stos
fnsave
fwait
pop
stos
shr
repz
cltd
les
out
push
ficomps
sub
mov
repz
add
cltd
jmp
push
int
pop
xor
ret
adc
cli
ret
or
scas
inc
arpl
nop/reserved
or
in
lret
std
outsl
cld
lcall
lock
out
cli
inc
pop
and
adc
fildll
icebp
aas
or
mov
cli
jg
adc
cld
cli
hlt
jg
fcoml
aad
push
jno
imul
sti
push
inc
mov
xor
dec
daa
out
or
scas
or
pushl
dec
jb
leave
and
arpl
push
xchg
dec
lahf
mov
loope
sub
fcoml
adc
add
cwtl
fisttpll
leave
xlat
push
jmp
mov
rcrb
stos
fimuls
mov
les
cmp
and
jns
icebp
lock
or
aad
sub
adc
pop
lods
mov
daa
pop
ror
mov
js
xchg
nop
adc
mov
lcall
or
test
jmp
enter
loop
pop
xchg
faddl
dec
push
lret
add
mov
jo
or
jle
jno
push
add
lret
lds
shl
shl
dec
decl
repnz
pushf
or
inc
jge
jp
mov
in
push
movsb
push
cmp
inc
inc
push
or
into
popa
aam
sbb
jg
pop
push
das
test
mov
aaa
pushl
movsl
mov
clc
addr16
inc
fnop
inc
adc
xchg
pusha
fcoms
xchg
aam
movsl
jl
add
push
add
sbb
mov
jno
xorl
es
faddl
and
sbb
outsb
mov
xlat
xchg
std
fs
cmpsl
push
hlt
or
xor
pushf
stos
popa
xchg
inc
jbe
ljmp
or
mov
pushf
sub
fistpll
and
es
je
int3
dec
jecxz
mov
sub
cs
adc
xchg
or
xor
arpl
adc
xor
bound
test
shrb
and
jg
push
xchg
aas
pcmpgtb
xchg
test
mov
jns
hlt
stos
or
fistl
std
in
fstpt
mov
or
cmp
outsl
insb
cmp
cmpsb
xchg
rorl
lahf
push
inc
ret
push
pop
mov
sarb
mov
ret
or
loope
mov
cwtl
sub
pop
dec
pop
mov
mov
or
sbb
mov
xchg
add
int3
xor
iret
cmpsl
or
or
in
and
pop
adc
jle
loopne
jg
cld
bound
push
xchg
push
repnz
add
jecxz
push
nop
js
jbe
sbb
rorb
jecxz
leave
aas
test
jo
mov
movsl
iret
loopne
ljmp
les
adc
adcb
add
scas
pop
and
sub
push
adc
cmpb
pop
mov
imul
and
addr16
cmpsl
add
xlat
jge
popf
loopne
or
cmpsb
fisubrs
mov
bound
enter
fistpl
scas
jns
outsl
clc
push
xchg
scas
pop
pop
xor
stc
in
dec
scas
cld
cmc
push
lds
xor
mov
mov
jg
lahf
fwait
lea
hlt
in
push
ds
and
fldl
std
addb
stos
xor
ss
add
push
cmp
xchg
mov
adc
loopne
push
fmul
jb
int
out
out
cli
outsl
pusha
out
insb
add
je
stos
add
stos
js
xchg
mov
jae
scas
test
adc
add
adc
pop
lcall
aas
lock
mov
imul
pop
ja
dec
lea
adc
pusha
mov
cli
int
inc
das
arpl
in
xchg
jmp
iret
and
cld
clc
aas
mov
jge
stos
lock
adc
pop
out
fists
imull
jnp
xlat
andb
dec
xorb
pop
mov
insl
lcall
add
or
cmp
or
add
enter
push
inc
sub
mov
stos
pusha
inc
gs
inc
icebp
inc
xor
pushf
fdivl
dec
test
sub
addb
cmp
pop
loopne
push
or
add
xchg
nop
sub
fwait
push
loop
test
or
dec
fistl
rol
call
mov
adc
aam
cmp
in
or
cmp
mov
insl
call
rorl
mov
andl
or
mov
mov
sub
inc
or
jno
add
mov
ud2
dec
and
add
test
cwtl
adc
addb
inc
mov
adc
scas
and
cmpsb
sbbb
xchg
push
mov
int3
das
int
sbb
arpl
mov
leave
in
mov
repnz
pusha
dec
int3
aas
and
or
dec
ljmp
xlat
int3
and
pop
sbbb
add
mov
fwait
fwait
add
mov
jecxz
out
inc
add
dec
out
fmull
mov
mov
movsb
bound
stos
mov
jbe
aam
stos
inc
int3
out
pop
sub
xchg
inc
dec
and
pop
sbb
dec
jno
sub
ret
or
dec
hlt
or
and
pop
inc
mov
loopne
lret
inc
add
mov
rclb
shl
adc
add
add
pop
jns
loopne
adc
sbb
hlt
add
test
cwtl
lcall
and
shrb
and
ret
push
test
add
int3
out
inc
xor
mov
outsb
add
fwait
add
call
repz
loopne
shll
sbb
test
jge
subb
push
inc
ret
cli
das
cmp
enter
pop
pop
sti
mov
mov
icebp
stos
add
aad
jl
fneni(8087
push
shl
adc
xor
clc
or
inc
add
std
jmp
cmp
jae
lret
dec
sub
inc
and
int
mov
xchg
imul
sbb
sbb
adc
inc
sbb
mov
testb
push
aad
xor
mov
inc
mov
out
pop
call
add
and
xchg
filds
push
hlt
push
cs
scas
cmpsb
data16
insb
je
aas
mov
mov
dec
lahf
lods
rcll
dec
ret
nop
or
add
ret
dec
add
inc
push
shll
call
adc
andl
bound
stos
mov
loop
pop
scas
stos
imul
adc
cmp
mov
sub
mov
mov
or
sub
dec
and
add
and
xchg
insl
ljmp
mov
xchg
loope
pop
inc
inc
ljmp
ss
cmpsb
cmc
cld
mov
js
je
add
add
cmpsl
in
jge
sbb
and
shlb
aad
in
orl
test
mov
xor
dec
lcall
xchg
stos
or
pop
clc
push
add
pop
fistpl
xor
test
int3
inc
or
testb
push
jle
add
push
pusha
in
mov
xchg
cmpsl
mov
imul
sub
dec
cltd
or
sbb
loopne
pop
outsb
lea
inc
pushf
adc
dec
popf
cmp
mov
pop
lcall
cmp
jmp
aaa
popf
test
inc
ss
xchg
mov
cmp
mov
or
xchg
fs
mov
dec
push
ja
dec
mov
lahf
push
stos
aaa
ss
movsb
push
push
cmpl
push
mov
mov
mov
loope
pusha
test
lret
xorl
or
jb
dec
sarl
sub
cmc
mulb
lods
push
mov
push
cmp
aas
push
mov
aas
sub
xlat
cwtl
or
mov
inc
mov
and
ljmp
hlt
jle
aas
insl
sbb
sti
mov
cmpsl
pop
lock
cmp
pop
adc
dec
jg
mov
push
fmuls
xchg
mov
cmp
mov
mov
jne
cmp
xchg
leave
push
and
pop
pcmpeqd
fmull
push
mov
mov
cmp
fstpt
ss
inc
pop
mov
pushf
mov
pop
popa
push
lea
dec
xor
outsl
hlt
pop
xor
ds
or
sti
push
and
icebp
hlt
ret
dec
daa
pusha
rcl
jae
pop
out
add
sub
pop
push
add
and
jl
out
sbb
std
fstpt
arpl
cs
data16
push
arpl
jmp
pop
or
jno
xor
dec
mov
int3
out
daa
sub
es
pop
shll
or
push
test
ljmp
sbb
lcall
sbb
jg
push
dec
fisubl
inc
cwtl
ljmp
inc
pop
in
push
jo
cltd
dec
popl
inc
jp
mov
mov
push
lret
fwait
xor
ljmp
ret
in
or
inc
adc
sti
imul
les
outsb
pusha
mov
nop
push
lret
xchg
mov
mov
jg
test
add
inc
arpl
popf
dec
and
bound
fistpl
das
cld
pushl
adc
inc
sub
and
and
add
inc
mov
sbb
cwtl
jae
sub
movb
mov
movsl
ljmp
and
pusha
aas
and
shll
lcall
inc
xchg
cmp
jns
and
sub
js
sti
cmp
pop
push
ljmp
lret
inc
movsbl
sub
dec
xchg
mov
mov
mov
lahf
inc
daa
int
adc
aaa
outsb
mov
mov
stc
cmc
sti
es
dec
inc
xchg
ljmp
test
dec
sbb
pop
xor
inc
loop
mov
les
xchg
lret
push
cld
hlt
outsl
std
jg
cs
in
lret
cmpsb
inc
scas
aad
add
sti
aam
lods
push
clc
adc
dec
xor
in
aas
cmp
jo
leave
popl
xchg
out
fs
popf
popf
cmp
loop
adc
mov
inc
hlt
fildl
jmp
je
icebp
addr16
dec
fists
dec
and
adc
pop
cmp
mov
pop
ljmp
sbb
lcall
in
test
jmp
and
or
lods
cld
lea
add
xchg
add
jp
or
jmp
push
insb
mov
and
fildll
mov
mov
inc
rcr
fistpl
xor
es
and
in
insb
push
sti
nop
mov
mov
mov
aas
je
inc
adc
push
jb
insb
imul
inc
mov
pop
jle
icebp
mov
and
dec
scas
mov
mov
and
add
pop
jne
call
xchg
jmp
jl
jnp
mov
scas
pop
xchg
pop
shll
enter
mov
fisubl
loopne
pop
xor
js
aaa
fldt
cmp
ret
dec
repnz
dec
xchg
push
test
dec
lcall
and
push
incb
add
test
xchg
and
fwait
rolb
scas
inc
in
jns
clc
ret
decl
adc
inc
add
mov
fistl
cwtl
shll
enter
fidivs
fldt
add
repz
hlt
cmp
mov
mov
xchg
repnz
dec
shrl
out
cli
mov
mov
xor
mov
pusha
and
xor
je
rorl
mull
hlt
stos
and
push
sbb
lret
lock
inc
dec
mov
ja
push
xchg
fdecstp
push
add
or
aam
bnd
loope
dec
roll
loop
mov
loop
cld
xor
xor
sub
add
inc
int3
mov
dec
insb
pop
jae
es
inc
shl
subl
stc
faddp
pop
jno
clc
aad
mov
es
inc
inc
add
cmp
jno
or
and
inc
push
addb
int3
jg
decl
aas
mov
call
add
mov
xchg
inc
and
jle
mov
pop
shl
push
sbb
mov
sbb
xor
test
push
jns
adc
push
sub
inc
xor
loopne
ret
inc
insl
cmp
jb
loop
jg
inc
out
mov
add
repz
and
mov
and
mov
xchg
clc
popf
sbbb
popa
loop
xor
jmp
or
mov
jbe
xchg
inc
pop
add
or
lea
adc
mov
jbe
adc
test
stos
push
nop
cli
addl
adc
fstps
adc
cld
dec
pusha
adc
xor
xor
and
addr16
int3
popf
adc
xchg
daa
mov
add
xor
jp
adc
loop
fidivs
ds
push
jp
dec
insb
push
mov
aam
lea
mov
jbe
lock
pusha
inc
xor
push
push
cld
add
pop
or
cs
xor
cmpsl
test
xor
outsl
push
and
stc
movb
call
or
jle
xchg
cmc
add
and
nop
adc
test
orb
add
push
inc
int
loope
shll
xor
leave
sbb
aad
sub
pushf
xor
jecxz
cmp
add
mov
cmpsl
pop
fcoml
sbb
pop
xlat
and
and
adc
pusha
sbb
add
inc
mov
and
or
lret
insb
jle
push
rorb
mov
mov
xchg
inc
xor
cmp
or
bsr
out
insb
fcmovnbe
push
and
add
loopne
adc
lds
dec
std
fimull
cmpsl
mov
inc
aad
pop
ret
frstor
js
xor
inc
jne
or
jno
push
and
add
jl
cmp
jg
inc
shrb
dec
sbbb
xor
inc
leave
lahf
sar
mov
or
sahf
mov
dec
movsl
mov
out
ljmp
les
or
add
adc
popa
push
out
aad
ljmp
inc
rcl
cwtl
popa
ljmp
subl
push
test
and
dec
mov
inc
sbb
or
fcmovnu
call
jae
inc
xchg
in
hlt
mov
sub
push
sarl
jae
and
test
data16
adc
push
mov
sbb
lcall
fwait
mov
fimull
or
jnp
lahf
xor
xor
icebp
and
adc
insl
pop
add
daa
xchg
lock
inc
rcll
rcll
push
sbb
int
not
imulb
xor
push
push
sub
adc
jb
loope
cmc
jg
pop
bound
xchg
push
inc
popa
sub
push
jnp
es
push
inc
sub
bound
popa
cmp
lea
add
fcoml
ret
add
mov
data16
add
shlb
iret
rorl
or
add
adc
xchg
leave
or
stos
cmp
cmp
cs
jmp
aam
sub
jb
or
dec
scas
cs
into
and
icebp
daa
jo
xor
adc
xchg
mov
enter
cmc
data16
sbb
decb
jl
cmpsb
test
pushf
data16
in
outsl
movsl
insl
mov
add
jl
dec
cli
mov
outsb
jl
dec
xor
jne
pop
and
in
dec
addr16
mov
es
inc
push
pop
add
ret
adc
xor
or
shrl
imul
mov
add
ds
or
xchg
mov
test
sub
fs
dec
mov
ljmp
les
inc
std
incl
push
decl
push
clc
shlb
xchg
xchg
insb
mov
test
leave
dec
xor
aam
push
add
test
mov
cmpsl
sub
mov
std
jg
mov
or
sub
aaa
mov
pop
jl
mov
call
ret
sbb
sbb
and
and
cmp
push
std
dec
loopne
add
test
lret
jge
push
sbb
push
movsb
jecxz
test
mov
in
fucomi
arpl
imul
test
mov
insl
inc
jge
mov
bound
sahf
mov
cmc
pop
shll
mulb
dec
loop
hlt
mov
pop
call
cmc
dec
adcb
subb
decl
adc
inc
je
ret
or
add
dec
sbb
xchg
mov
jg
pop
cld
or
inc
sub
in
inc
popf
and
int3
xchg
sub
lea
fisttpll
mov
xorl
outsl
pop
dec
push
scas
or
ret
xchg
mov
cld
inc
inc
daa
cs
out
cmp
mov
or
dec
lods
adc
push
stos
mov
mov
cmp
addr16
and
xor
rcr
xchg
loopne
mov
inc
movsl
jne
and
cli
adc
lcall
or
jnp
lods
add
ret
aaa
sbbb
es
jo,pn
stc
in
mov
mov
xor
out
cmc
jno
xor
insl
leave
jae
cmp
pusha
push
mov
mov
outsl
lea
icebp
dec
scas
push
fldt
adc
pop
jne
and
add
and
mov
fnstsw
sub
and
aas
mov
inc
ljmp
testb
inc
fistpll
mov
and
hlt
push
jl
or
or
cld
or
jp
inc
adcb
je
imul
adc
stos
cmp
lret
notl
mov
sbb
pop
mov
iret
xlat
adc
incl
rorl
adc
jns
imulb
ds
loope
dec
xlat
or
aam
stos
xchg
fsubrp
dec
or
pop
mov
das
lods
in
add
test
inc
lret
mov
mov
fcomip
adc
adcl
popa
sub
fistl
scas
cmp
pop
movsb
inc
mov
pop
add
add
dec
sub
cld
xchg
fisttpll
ret
jae
mov
jecxz
stos
sbb
mov
add
pop
or
das
push
popa
lock
lea
mov
jg
test
gs
sbb
add
mov
inc
out
fildll
xor
inc
outsb
lods
cltd
dec
leave
pusha
mov
insl
or
nopl
inc
sti
pop
pop
dec
push
imul
inc
mov
sbb
push
test
mov
inc
adc
dec
lahf
dec
mov
push
test
push
dec
sti
mov
add
movsl
cmpsb
adc
mov
test
out
mov
or
xchg
mov
imul
push
bound
adc
mov
fwait
cmp
or
jl
stos
ret
mov
jmp
sub
hlt
movsl
push
mov
or
mov
mov
mov
or
push
push
loop
cmp
flds
pop
mov
pop
pop
xor
insl
call
dec
cwtl
adc
fidivrs
or
and
ss
adc
push
ja
push
cmp
out
mov
cmp
lock
sbb
mov
aad
das
test
not
out
push
je
push
aam
out
jno
add
ret
push
jns
mov
push
cmc
mov
xchg
xor
adc
inc
idivb
xchg
lea
ret
incl
sub
xchg
mov
sahf
sbb
adc
xor
das
je
icebp
adc
aaa
sub
das
pop
out
mov
aaa
pushf
loope
adc
adc
or
and
cli
jbe
sti
sub
subb
add
imul
xor
mov
mov
jne
int
pushf
je
rcll
clc
shr
sbb
add
pushl
loope
scas
mov
push
dec
enter
lods
adc
pop
incl
test
rclb
stos
insb
cs
mov
xchg
ja
pop
loopne
mov
fadd
lret
xchg
mov
fimuls
or
shr
es
adc
sub
into
cmp
add
rolb
cmpsl
fistpl
xor
loope
dec
icebp
mov
add
aaa
cld
test
mov
cmp
lea
out
cld
pop
dec
mov
iret
fdiv
das
mov
mov
cmp
lret
roll
mov
inc
cli
sub
pop
rol
adc
push
dec
jb
mov
mov
hlt
shlb
rorb
call
pop
mov
arpl
jmp
pushf
sub
sbb
jb
inc
cli
add
add
out
push
or
in
mov
ljmp
stc
sahf
mov
jmp
leave
add
push
and
lret
ret
push
fidivs
cmp
cmp
fcmovnbe
sub
imul
xor
nop
inc
jl
cs
out
stos
rcrb
imul
adc
adcb
lret
adc
ud1
jns
outsb
andb
inc
popf
fstp
cs
and
in
dec
daa
outsl
mov
push
fisubrl
dec
mov
std
lahf
dec
xor
mov
jns
fldt
push
or
fisubrl
sub
or
inc
or
popf
jno
mov
test
outsl
pop
inc
adc
mov
out
push
add
add
mov
pop
negb
arpl
push
push
jg
add
dec
sbb
loopne
sbbl
jl
pop
test
cli
orb
or
shll
dec
cmpsb
dec
pop
jno
sti
in
cld
mov
ss
push
ljmp
ja
enter
sti
adc
jns
loopne
hlt
xor
loope
adc
fstpt
mov
jge
and
repz
mov
dec
pop
popf
or
cmp
inc
cli
dec
ljmp
dec
mov
repnz
das
lock
movl
fldt
orl
push
repz
pop
icebp
add
and
sbb
push
out
mov
pop
call
outsb
int3
xchg
mov
push
jp
add
add
adc
out
jg
add
or
mov
incb
mov
pop
dec
mov
stos
push
cmp
out
inc
jp
sti
jecxz
lcall
ljmp
aaa
cmp
fisubl
fst
and
shl
sub
icebp
shrb
orl
pop
xchg
add
loop
dec
aam
jl
sub
test
xor
sbb
arpl
and
jp
test
xchg
mov
out
addr16
pop
lcall
insl
pop
mov
xchg
into
inc
sub
aaa
push
jns
ja
movsb
imul
fwait
add
push
pop
xor
faddp
pop
push
push
lods
cmp
xor
pop
outsb
add
ds
out
insb
sub
cltd
pusha
add
mov
xchg
sub
in
xchg
jecxz
jmp
movsb
lcall
shll
in
push
xchg
orl
cmpsb
mov
pop
je
scas
push
dec
push
fcoml
xor
bound
push
inc
adc
call
rclb
pop
xor
neg
dec
sbb
dec
sub
aad
test
inc
cmc
jge
xor
mov
inc
cmp
xchg
enter
jge
mov
and
xor
mov
daa
cs
inc
jle
out
or
dec
and
stc
add
cmp
clc
push
xchg
add
mov
mov
ret
test
xchg
xchg
mov
in
mov
cmp
int3
test
inc
movsl
lods
ljmp
inc
xlat
sarb
rep
push
push
data16
lea
js
sbbb
lcall
sahf
ja
pop
fdivrs
cmpb
hlt
ficoms
sbb
outsl
mov
fnstsw
mov
movl
stc
xchg
mov
and
push
lcall
fwait
cmp
mov
mov
add
sub
loop
mov
jnp
xchg
lock
scas
mov
rcll
cli
add
inc
popf
rorb
mov
scas
jmp
cmp
jbe
sbb
outsb
xor
mov
mov
incl
or
mov
xchg
std
cmc
mov
mov
jne
add
sub
add
fcom
out
loopne
xchg
add
out
test
push
cwtl
cmp
adc
lret
aas
mov
inc
mov
dec
fwait
pushf
pop
fcomps
fisubl
pop
xchg
sub
es
mov
cltd
icebp
mov
mov
lea
xchg
adc
int
cmp
cwtl
jnp
xor
push
outsl
mov
sub
or
jge
pusha
movsl
test
mov
push
outsl
add
push
add
dec
or
xor
jae
push
mov
mov
xor
xor
add
mov
sbb
jecxz
add
pop
es
test
movsl
ss
mov
loope
dec
sub
shll
push
dec
pop
rcl
adc
les
divl
add
test
and
in
or
fs
imul
cmpb
and
test
mov
es
cmpsb
cmpsb
fcompl
adc
adc
push
adc
cmp
bound
dec
pop
sub
mov
xchg
pop
lods
dec
aad
sub
dec
sbb
push
push
and
or
xor
add
or
movlps
clc
test
call
fsubl
adc
fsubl
adc
inc
sbb
xor
andb
or
rcr
ret
mov
sbb
add
push
and
xor
das
push
lods
and
pop
das
jne
dec
pushf
sub
andl
mov
jle
lea
jae
test
mov
xor
ss
or
fs
xchg
or
popf
push
push
sbb
test
add
insb
xchg
xor
dec
dec
jne
or
cmp
mov
mov
jns
adc
andb
sbb
int
xchg
mov
inc
fistpl
shlb
js
inc
insb
cmovb
push
add
adc
pushf
or
mov
mov
lds
push
hlt
mov
mov
test
out
mov
push
cmc
int3
loopne
sub
mov
iret
clc
imul
mov
xchg
aad
sbbb
push
cmp
es
push
inc
daa
add
repz
mov
jb
mov
xchg
pop
adc
inc
dec
es
call
lock
ljmp
popa
push
js
sarb
in
mov
stc
cmp
and
fcmovbe
sbb
les
lods
cmp
push
adc
clc
dec
dec
push
aam
add
pop
lods
mov
mov
or
mov
or
imul
xchg
xor
les
cmc
stc
and
pop
imul
call
test
mov
add
cmp
jmp
pop
jo
pop
rcrb
enter
roll
sub
in
fimuls
mov
std
rcll
les
cs
pushf
xor
xchg
mov
aam
mov
loopne
shlb
lcall
in
mov
popf
xor
mov
test
pop
lock
fiaddl
sub
or
out
jo
dec
push
inc
and
adc
adc
xchg
push
jl
push
mov
test
out
sub
les
add
mov
fsubrs
icebp
test
cmp
cmp
mov
mov
movsb
and
fidivrl
jmp
mov
push
stos
jmp
pop
shlb
and
sub
and
fcomp
ret
testb
xor
pop
and
pop
int3
pop
adc
in
inc
dec
and
push
int3
ljmp
fimull
push
add
cmpsb
jo
push
stos
xchg
sti
add
xor
and
cmpsl
push
push
jp
dec
xchg
imul
xchg
lret
inc
cmc
scas
inc
add
xchg
inc
int3
dec
jg
mov
and
fistpl
js
pushf
in
sbb
fiadds
push
cmp
pushf
add
and
inc
mov
iret
sub
lahf
sub
scas
or
cltd
pop
imul
inc
lahf
mov
fisubrl
mov
push
loopne
pop
cmp
jle
cmp
cmp
or
mov
or
xchg
mov
aad
or
dec
repz
pop
sub
xor
dec
mov
gs
add
sbb
icebp
push
add
pop
gs
mov
shll
pop
xor
addb
push
and
add
add
and
mov
mov
xor
sub
add
mov
inc
incl
mov
out
sbb
sbb
arpl
mov
sub
loope
sbb
mov
sub
mov
cmc
test
and
sbb
mov
inc
mov
push
pusha
xchg
add
ret
xchg
fisttpl
mov
out
fldt
xchg
and
adc
pop
cld
ret
rclb
adc
sbb
xor
ja
push
jb
inc
data16
push
mov
test
jne
push
daa
add
xchg
addr16
inc
ljmp
pop
dec
gs
aam
xor
jb
sti
nop
xor
pop
sub
mov
sub
sbb
stos
add
pop
mov
sub
add
lahf
xchg
ja
js
lock
std
pop
pop
movsl
dec
out
inc
push
bound
push
xchg
push
imul
push
pop
or
jns
mov
mov
movsb
pop
shlb
scas
push
loope
sbb
jp
add
cmpb
fimuls
xor
insl
jb
mov
pusha
cmpsl
pop
lds
sbb
scas
xor
aas
and
cmpsb
push
insb
call
jb
add
popa
sub
clc
bound
jae
xchg
subb
lcall
cli
out
in
roll
or
add
lock
iret
dec
imulb
push
xchg
push
aaa
adc
shrb
mov
xchg
fdivr
fwait
mov
lahf
pop
test
jecxz
jb
mov
shrl
sar
and
push
pusha
xchg
sub
jge
mov
pop
mov
fisubrl
test
iret
in
adc
cli
inc
into
add
fs
shr
add
lret
in
push
aas
xchg
enter
adc
loop
lea
mov
mov
pop
lcall
bound
inc
mov
pop
call
add
fmull
cmp
xor
in
dec
or
call
cmp
cli
jg
lret
jne
idivl
push
push
scas
mov
loopne
lods
fdivl
and
xchg
orb
mov
sub
or
shr
mov
dec
pop
outsb
cld
mov
out
xor
add
xor
xchg
ret
out
test
orb
aad
fldl
loope
inc
jb
insb
fsts
pop
lods
pusha
xchg
mov
fsub
or
jp
lea
cwtl
and
inc
pushf
lods
or
loopne
jle
movsb
mov
cs
cltd
out
fldcw
or
movsl
lea
sbb
sbb
push
pop
ljmp
and
imul
out
and
cs
sbb
adc
in
or
nop
pop
mov
test
adcb
gs
das
lods
bnd
or
sbb
ss
xchg
rclb
popa
loope
or
cmp
adc
inc
jo
inc
test
jnp
sbb
xchg
pop
nop
inc
sar
aad
push
xchg
loopne
das
xor
pusha
mov
push
fildll
fwait
adc
pop
cmpb
dec
add
dec
dec
adc
fistps
mov
cli
xchg
or
pop
aam
mov
ucomiss
in
lods
pop
idivl
push
xchg
jp
mov
inc
inc
push
dec
shrb
sub
push
cwtl
or
clc
in
adc
les
movsl
in
fistl
mov
inc
push
dec
out
push
xchg
inc
pop
mov
add
pop
pusha
mov
mov
das
out
fcmovnu
ds
cltd
call
icebp
loope
and
movsl
sbb
push
insl
lods
mov
movsl
lcall
cld
or
push
lcall
inc
popa
push
cmpsb
mov
push
adcb
cltd
or
or
test
mov
nop
gs
pushl
xor
jnp
ja
cs
or
jl
fistps
fsubr
mov
push
mov
sub
push
xor
mov
pop
js
add
add
scas
shrl
cli
xor
xorl
mov
dec
out
cmpsb
inc
jo
cmc
xchg
mov
add
xor
lret
cmp
cltd
fcmovnbe
fstpl
loopne
jge
pop
sbb
ret
cltd
jle
adc
paddusb
call
adc
jb
mov
xchg
xchg
pusha
xchg
int
lret
outsl
jl
mov
dec
stos
add
scas
lahf
sbb
cli
inc
imul
cmc
dec
roll
inc
inc
push
jle
lods
loopne
mov
data16
ret
ljmp
outsl
mov
cli
gs
push
pop
rorb
lcall
mov
imull
inc
inc
xchg
dec
jmp
out
idiv
imul
and
sub
nop
jns
idivl
ret
movb
ss
in
gs
xchg
sub
mov
xlat
outsb
and
dec
mov
sbb
sub
rolb
pop
or
push
fcmovne
fbstp
mov
mov
daa
jne
das
cld
scas
jns
jne
and
sub
mov
or
adc
pop
pop
jl
adc
pop
adc
jle
adc
cwtl
and
call
pusha
cmp
and
inc
and
pop
lods
test
adc
inc
addb
fisttps
clc
es
data16
sbb
pusha
push
mov
jb
loope
jo
xlat
mov
icebp
adcl
nop
and
jmp
fildll
and
cwtl
mov
jns
ficoml
orb
xchg
xchg
jecxz
std
jo
and
nop
pop
inc
sub
mov
dec
cld
add
mov
adc
hlt
movl
pusha
pop
mov
pop
mov
int3
pusha
or
loopne
adc
mov
add
push
sbb
cmc
sub
jnp
pop
or
jmp
add
push
mov
aas
insb
jbe
sub
pop
sub
hlt
mov
push
mov
in
cltd
sbb
addr16
mov
xchg
or
pop
aas
mov
push
mov
filds
xor
insl
ss
pop
add
add
les
cmc
cltd
dec
jp
push
xor
jg
adc
xchg
or
push
cmpsb
enter
cld
ss
push
add
call
or
imul
in
xchg
shll
add
fcoms
dec
jle
iret
daa
add
insb
insl
ret
shll
xor
push
add
lret
iret
clc
sub
mov
lcall
or
sub
adc
in
push
inc
shrb
iret
push
into
incl
xchg
and
sbbb
out
fwait
xor
in
sbb
jge
sbb
push
mov
pop
test
and
cwtl
mov
inc
xor
adc
fnstsw
addb
sbb
push
data16
and
cmp
push
fldenv
insl
xor
inc
pop
adc
add
das
shlb
adcb
movsl
mov
jns
xchg
aam
sahf
mov
xor
mov
lret
jne
jbe
inc
or
dec
dec
fstpt
outsl
aam
outsb
xor
mov
ljmp
cmpsl
and
cltd
xchg
out
mov
bound
push
push
shrl
pop
stos
outsb
pop
xchg
mov
inc
and
or
jp
sbb
repz
cmp
int3
mov
lods
pop
xor
lahf
dec
mov
mov
and
outsl
push
insl
mov
lock
pop
mulb
push
paddusw
shlb
fsubl
repnz
es
push
mov
xchg
mov
int3
jmp
aam
cmp
lret
sub
fstpt
sbb
jb
xchg
insb
adc
lahf
jge
xchg
fldl
call
mov
outsb
inc
outsb
int
das
rorb
int3
add
adc
mov
or
add
or
lahf
rcrl
xor
cmpsl
jae
pop
js
xlat
pop
scas
mov
in
nop
push
mov
jo
jg
fucom
aad
loop
arpl
lfs
out
push
mov
aam
fs
sarl
xchg
push
ret
jnp
ja
xor
shlb
test
jge
cmp
xor
dec
mov
mov
cmp
pushf
ret
mov
mov
pop
lods
ss
std
dec
or
repnz
cli
mov
mov
adc
pusha
push
inc
test
clc
ss
or
mov
in
dec
movsb
dec
xchg
sub
add
inc
mov
xchg
sub
and
rclb
rclb
outsb
mov
inc
ficomps
or
stos
or
in
or
mov
inc
in
add
mov
sub
xor
inc
andl
insl
out
fildll
push
popa
shrl
stos
in
call
add
push
pop
sub
mov
cmc
scas
xor
gs
rcrl
adc
daa
mov
test
add
mov
and
sbb
sub
testl
fistpl
mov
out
sbb
adc
mov
cmc
pusha
dec
xchg
mov
sbb
dec
popl
adc
decl
mov
dec
repz
sbb
jnp
mov
or
cltd
inc
dec
mov
lock
lock
or
sbb
sbb
ds
mov
sbb
jle
call
add
push
enter
pop
add
xor
cmc
ja
push
xor
inc
dec
int3
lret
push
mov
jp
shlb
xchg
arpl
jbe
icebp
jg
fildl
lcall
or
fistl
lea
cmpb
pushf
and
outsb
icebp
pop
outsb
insl
enter
cmp
cmp
mov
mov
enter
push
pop
jns
sub
mov
aam
test
pop
ret
movsl
or
lea
dec
jecxz
addl
xor
pop
jae
insb
xor
loop
rcr
test
popf
cmc
and
push
jge
test
mov
jge
scas
aaa
loopne
mov
out
mov
scas
bound
lods
xorw
mov
js
add
ret
mov
xor
xchg
adc
sbb
dec
push
add
stos
dec
subb
sbbb
test
rolb
sub
fcmovu
roll
push
mov
dec
push
push
push
loop
or
lods
arpl
jbe
lock
mov
dec
icebp
movsb
pop
sti
add
cmpsl
mov
and
jb
es
add
jno
adc
mov
and
push
pop
dec
rolb
lret
pushf
jge
xchg
insl
xchg
mov
cmpsb
push
mov
pop
sbb
aaa
aam
adc
or
or
popf
imul
mov
loopne
andb
jnp
loop
mov
add
testl
dec
cmc
sub
push
adcl
ror
sub
add
loopne
xchg
jae
es
push
or
inc
aam
notl
add
dec
add
and
push
adc
lods
lret
inc
push
jnp
mov
mov
adc
push
xor
and
inc
movl
cmpsl
adc
jns
adc
sub
mov
rorl
inc
pop
inc
mov
pusha
pop
dec
mov
inc
mov
and
add
inc
xlat
mov
sub
mov
mov
xor
shll
or
clc
movsl
shrl
pushl
mov
mov
xor
in
repnz
out
mov
mov
jno
jg
cld
lahf
adc
xor
push
push
aaa
testb
data16
loopne
xor
cmpsl
adc
test
iret
dec
into
fstpl
add
js
sbb
je
dec
fistpl
and
outsl
ficompl
sarb
xchg
and
push
xlat
pop
jle
mov
adc
add
dec
stos
mov
or
xorl
je
or
imul
nop
imul
mov
jecxz
stos
ljmp
fldl
push
adc
fcompl
les
loopne
add
cmpsl
xor
insl
jl
xlat
inc
adc
pop
in
jl
push
inc
bound
stos
mov
or
cwtl
jne
lret
pop
insl
adc
out
lock
mull
mov
pop
repz
cmp
dec
ficoml
scas
stos
lds
fadd
or
loope
adc
mov
jecxz
push
add
scas
adc
xchg
movl
loopne
fsubr
xchg
xor
ds
or
rcrb
mov
loope
push
scas
andl
pop
mov
inc
jge
mov
test
mov
xor
jno
lahf
mov
fs
fcomps
cmc
dec
or
in
mov
adc
cmp
cmp
push
and
adc
cmp
xchg
shrl
jno
sbb
lock
scas
out
xchg
pushl
shlb
lcall
inc
out
xor
push
cs
dec
insb
sbb
repz
mov
fistl
or
daa
jae
pushf
xor
rol
aam
fmuls
decb
pop
pop
jo
dec
icebp
jb
sbb
sub
out
pusha
mov
sub
subl
lret
inc
std
adc
add
mov
les
xchg
adc
loop
aad
adc
lcall
call
add
pop
adc
dec
push
cs
inc
and
mov
pop
sub
sub
and
int3
and
bound
in
xor
dec
inc
or
movsl
xchg
bound
jmp
rcl
xchg
xor
bswap
cld
jae
add
subl
push
insl
push
mov
mov
mov
shlb
and
mov
mov
pop
mov
rolb
dec
andb
jecxz
aas
lea
lock
xchg
xor
xor
aam
mov
sub
xchg
fidivs
adc
out
fiadds
push
adc
pop
pop
sub
mov
fmulp
jo
push
and
or
stos
mov
sub
shrb
paddsw
adc
push
stos
ror
pmaddwd
aad
prefetch
or
push
dec
inc
mov
shlb
or
adc
or
fdiv
xor
inc
cld
pushw
mov
inc
sub
sbb
dec
leave
inc
cld
mov
jne
sbb
hlt
cmp
pop
call
xor
mov
gs
mov
into
imul
adc
add
jne
adc
lcall
ljmp
outsl
cmp
and
or
cmc
jmp
sarl
adc
push
adc
mov
add
push
fistpll
xchg
mov
pop
push
pushf
mov
decb
adc
je
inc
std
add
cmpsb
in
std
fsubl
add
xchg
fldcw
shll
rorl
es
push
mov
mov
stos
aaa
fsubp
arpl
add
lea
pop
inc
out
aam
xor
in
xchg
movsl
inc
push
push
lcall
rclb
lea
clc
cmp
pop
cmp
push
cmp
mov
sbb
int
adc
hlt
pop
fcoms
fcoms
aas
in
ret
test
xor
and
and
mov
adc
lcall
repnz
sbb
sub
fwait
push
cmpsb
clc
jge
sub
pusha
stos
pop
sub
xor
insl
rolb
sub
mov
rol
mov
inc
popf
inc
adc
mov
push
xchg
out
push
and
imul
dec
and
dec
notb
sbb
mov
add
mov
lret
mov
push
xchg
sbb
fimull
push
das
nopl
jnp
jno
cli
dec
mov
lds
jb
xchg
out
ret
or
lock
in
jge
mov
adc
das
je
pand
mov
out
xor
push
xor
sbb
xchg
ljmp
adc
inc
movsl
psubsb
jle
adc
lea
in
inc
mov
inc
pushf
pop
mov
sub
shll
nop
cwtl
sub
inc
outsb
leave
mov
ja
pop
fs
xchg
outsl
pop
outsb
pop
ret
add
clc
sbb
shr
stos
sub
pop
mov
and
dec
dec
outsl
inc
lock
pop
xor
mov
mov
in
inc
fwait
add
sbb
shr
shll
mov
jo
and
or
sub
mov
inc
adc
cltd
or
mov
push
out
test
lret
mov
aam
push
dec
sub
fs
mov
ret
inc
out
stc
push
out
and
pop
shl
sarl
pop
loope
xorb
rcl
sub
inc
cmp
mov
inc
jg
push
js
push
fistps
push
dec
out
add
dec
inc
push
das
pop
xorb
out
xchg
rorl
rcll
fsubl
call
push
rol
and
dec
mov
clc
lcall
popf
sub
add
test
stos
in
in
push
sub
dec
jne
ret
loop
xchg
addr16
mov
mov
add
mov
outsb
mov
inc
pop
in
iret
sti
jg
mov
jae
ret
sub
adc
popa
flds
fstpt
mov
mov
call
fstl
cmpsb
pop
imul
fists
insb
repz
dec
xor
inc
fidivs
xchg
outsb
add
repz
or
cld
mov
push
cwtl
mov
movsb
fst
mov
bound
roll
push
subb
inc
mov
cmpsb
pop
mov
repz
insb
icebp
in
fs
orb
mov
scas
cmp
cmp
icebp
xchg
hlt
aas
mov
mov
rorl
lock
fs
sbb
pushf
and
ljmp
cs
std
rorl
xor
sbb
mov
or
aam
mov
adc
inc
addl
ss
lcall
lea
test
mov
mov
adc
jg
loopne
xchg
imul
mov
das
mov
incl
push
fwait
lods
sub
push
cmp
mov
rolb
pop
add
mov
xchg
aam
and
fs
push
imul
mov
sbb
pop
call
inc
aas
push
icebp
xchg
sub
pusha
dec
dec
fdivs
inc
loope
jno
dec
lret
jne
mov
into
mov
sti
xchg
mov
cmp
sub
scas
into
sub
or
mov
enter
subb
jb
mov
jle
das
orl
and
fsub
imul
insl
sub
push
cmp
cwtl
push
cs
mov
inc
pop
clc
pop
adcb
aaa
das
mov
pop
cli
pop
jno
push
std
ret
cwtl
out
jae
popf
lods
or
shlb
mov
or
jecxz
mov
push
mov
cmc
fstpt
jg
dec
rorb
push
sahf
icebp
popa
js
dec
pop
pop
cmp
test
call
dec
das
dec
movl
incl
cs
push
cmp
lcall
pushf
pop
ret
push
call
adc
out
imul
pop
mov
fldl
xchg
imul
xor
pop
mov
mov
pop
fdiv
inc
pop
and
iret
jge
dec
mov
adc
pop
and
push
les
add
mov
je,pn
orb
ds
push
icebp
pushl
fdivrs
dec
dec
jnp
adcl
xor
out
aas
pushl
add
and
dec
gs
adc
adc
pop
ror
and
fiaddl
lret
aam
int3
in
les
aaa
mov
pop
pop
mov
loope
jge
mov
pushl
mov
sub
or
or
pop
inc
sbb
xlat
dec
jmp
dec
aam
push
test
inc
lds
out
fistl
scas
dec
mov
mov
outsl
test
and
mov
jmp
dec
mov
cmpsb
int3
insl
xor
nop
ss
pop
cltd
xchg
lods
push
sbb
aaa
push
jmp
jnp
insl
and
cmpsl
adc
lret
test
mov
sub
arpl
les
stos
out
mov
push
mov
loopne
les
push
mov
jle
add
add
loop
and
daa
loope
xchg
cs
push
add
insb
stos
and
mov
fistpl
dec
popf
int3
test
jbe
push
xor
sub
dec
mov
cmp
sub
jae
js
int3
jl
in
push
sbb
iret
aam
mov
pop
cltd
fisubs
mov
xchg
fidivrl
fcmovb
add
clc
stos
arpl
in
out
mov
jmp
pop
in
js
lret
aaa
loop
insb
inc
pop
add
loopne
imul
add
mov
mov
adc
cmp
or
mov
or
addr16
pushf
outsb
out
pop
rorl
jmp
dec
scas
pop
dec
adc
push
xchg
sub
ljmp
cmp
ja
out
xlat
sbb
std
pushl
je
popf
adc
jecxz
mov
dec
scas
insb
or
push
loop
inc
shrb
add
dec
dec
icebp
pop
pop
mov
xchg
movsb
jmp
adc
jmp
fnsave
or
out
jecxz
push
push
pop
mov
lods
or
and
cmpsl
movl
sub
mov
push
sbb
imul
lcall
popf
arpl
adc
movsl
enter
dec
test
adc
xchg
aaa
stos
test
dec
leave
sub
sub
push
aas
push
call
dec
repz
ret
shll
and
jne
jo
or
jo
out
jno
push
addr16
inc
data16
aaa
push
inc
scas
adc
in
adc
pop
mov
fisttps
sub
inc
repnz
mov
arpl
xor
andb
push
clc
fnstenv
mov
adc
and
add
shrl
out
push
or
test
add
sub
sbb
lcall
mov
jge
xorl
adc
xchg
arpl
outsl
push
or
mov
cmp
pop
jae
dec
xor
cld
dec
push
push
push
jmp
or
inc
data16
inc
stos
mov
xor
xchg
sbb
test
into
in
push
inc
or
jb
test
pop
imul
cmp
push
cltd
pop
push
push
xchg
test
jns
jb
pop
out
js
cwtl
add
and
mov
mov
es
mov
mov
dec
jno
fimull
push
adcb
mov
lret
jb
add
adcb
sbb
xor
cmpsl
addr16
lock
mov
inc
fiaddl
add
out
mov
in
fldl
fisubs
add
inc
clc
adc
scas
sti
xorb
jle
ret
and
or
sbb
jg
scas
ljmp
jno
flds
xchg
sub
loopne
mov
fistps
and
add
xor
loopne
fistpll
fucom
sub
test
inc
adc
loop
pop
jo
push
add
xchg
rolb
adc
adc
adc
add
les
mov
and
fiadds
pop
pop
aam
pop
mov
adc
add
leave
dec
inc
orb
loop
test
loope,pn
jmp
pushf
sub
mov
mov
lea
adc
push
nop
test
fdivs
subl
push
add
mull
ss
nop
jg
xor
pop
or
or
imul
int3
call
adc
outsl
push
jl
loope
sbb
outsb
mov
or
inc
out
xchg
mov
inc
lret
lcall
inc
jl
shll
add
rcrb
sbb
aaa
call
add
pop
cmp
mov
xor
add
push
sub
push
or
and
or
call
push
js
ffreep
inc
mov
int3
sub
orb
nop
mul
mov
and
xchg
imul
sub
add
sub
iret
jae
sub
imul
inc
es
out
xor
shl
arpl
lock
leave
dec
adc
mov
xchg
orw
push
pop
es
rcll
movsl
mov
xchg
rcrb
nop
jmp
mov
pop
or
shll
jp
adc
imul
adc
sub
jp
push
adc
adc
mov
or
lea
in
fs
dec
cli
mov
mov
pushf
mov
dec
jge
jns
lahf
in
push
je
mov
inc
fcmove
sub
pop
jl
test
jno
shrl
clc
or
mov
push
dec
dec
and
cmp
mov
sbb
lret
bound
fisubrs
pop
push
xor
lds
add
jp
js
test
xchg
mov
lods
xor
aaa
sbb
int
ljmp
stos
xchg
call
inc
pop
mov
mov
or
xor
sbb
outsb
aad
aaa
sahf
packsswb
shll
pop
mov
repnz
sub
mov
mov
xor
ljmp
andb
in
das
inc
sub
pop
push
sub
outsl
cld
mov
clc
push
dec
dec
jmp
xor
sbb
data16
fistps
cs
sub
mov
push
dec
add
aaa
push
test
fistl
fcoml
sbb
stos
adcl
sub
adc
fwait
das
push
in
xor
and
pop
inc
inc
xor
shrl
mov
lods
add
ret
lock
loop
and
xlat
and
je
or
sub
jg
inc
sbb
lds
das
mov
and
push
adc
or
and
or
push
push
leave
mov
cmpsb
mov
outsl
lea
sarb
pop
test
mov
xchg
cmpsb
pop
ret
sbb
jg
das
mov
inc
scas
outsb
cmc
cli
jecxz
or
sub
lds
pop
pop
pop
cli
mov
loop
pushf
ss
cmc
xchg
ljmp
imul
repnz
icebp
je
mov
fcoml
mov
es
pop
cmp
stos
jo
inc
jl
fists
mov
jp
mov
mov
fidivrs
ja
fwait
jb
sub
jl
add
adc
bound
fildl
adc
cli
inc
aad
dec
das
icebp
inc
mov
sbb
mov
jns
inc
push
add
int3
push
fdivrs
loopne
jl
icebp
shrb
push
test
mov
fstl
pop
stos
hlt
pop
imul
inc
sbb
loope
adc
lods
int
cld
adc
dec
jl
ds
mov
and
push
ret
push
and
add
sbb
loopne
clc
aas
pop
push
ljmp
cli
arpl
sub
jne
outsl
cmp
mov
push
sub
call
addr16
jb
push
in
cmc
icebp
enter
pop
loopne
sbb
arpl
adc
scas
outsb
mov
adc
fbstp
push
test
rcll
cs
orl
call
jnp
testb
jne
xchg
bound
scas
push
dec
sbb
mov
das
insb
inc
cmp
cwtl
xchg
clc
sub
std
testb
dec
out
js
enter
pop
fsubrl
and
mov
sub
decl
push
repnz
jb
mov
or
test
inc
dec
xchg
lcall
je
int3
stos
bound
repnz
push
add
dec
sbb
ljmp
and
sbb
cli
push
add
or
add
push
dec
out
pop
aad
popa
icebp
stc
push
outsb
or
add
adc
mov
pop
add
les
ds
cmpl
and
pop
je
add
dec
arpl
aam
clc
or
int
xor
add
es
push
loop
pop
jle
mov
xchg
enter
or
das
cwtl
lea
jbe
int3
clc
js
mov
and
xchg
not
cld
clc
enter
push
test
scas
fadds
sub
lds
jmp
cmpsb
cmp
sub
sbb
push
int3
test
adc
loop
jp
mov
rcrb
add
iret
mov
ljmp
xor
push
orb
adc
inc
movsb
jle
lret
es
sbb
imulb
pop
out
pop
and
xchg
xor
loopne
test
out
out
clc
rcrl
add
jbe
sub
adc
cmp
push
outsl
and
dec
dec
cmp
push
fsubs
idivl
dec
rorb
enter
aaa
dec
cmp
ret
and
mov
xchg
orb
or
push
mov
or
add
mov
insl
inc
add
push
mov
aad
lahf
stos
xchg
clc
aad
xchg
jmp
push
add
fwait
add
and
adc
arpl
fidivs
enter
push
cmpsl
add
add
jle
sbb
sbb
jg
lret
scas
adc
std
pop
test
or
lahf
adc
and
adc
adc
dec
adc
sub
inc
xchg
fidivrl
fsubrs
dec
push
pop
cmc
jge
cmp
enter
sahf
adc
dec
xor
stos
cmp
push
jecxz
inc
mov
mov
pusha
mov
lods
popf
hlt
sbb
pop
std
movsl
dec
stc
inc
pop
inc
add
or
in
ret
or
clc
je
inc
push
test
xor
sub
outsb
daa
jae
adc
pop
jb
movsl
leave
adc
decl
enter
sub
push
dec
popf
arpl
roll
cmp
inc
or
adc
sub
mov
pop
jne
push
outsl
es
and
pop
in
movsl
iret
mov
loopne
mov
fidivl
lret
ljmp
pop
jbe
xor
aaa
push
jmp
mov
lock
aas
xchg
repz
add
pop
fildll
jl
push
lahf
inc
add
adc
cmp
sbb
ss
aas
dec
imul
arpl
and
push
mov
pop
loop
jne
test
xchg
ret
insb
pop
cld
pop
cmp
mov
dec
pop
cli
pop
add
pushf
sbb
pop
mov
jle
mov
pop
mov
cmp
or
inc
mov
xor
neg
filds
and
out
sub
out
daa
and
lods
out
dec
in
push
pop
sbb
sub
outsl
adc
iret
dec
bound
sbb
xchg
sbb
imul
mov
int3
outsb
jmp
test
fnstcw
cmp
cltd
inc
jns
sbb
rcll
nop
sbb
jmp
loop
mov
mov
pop
cld
push
sbb
scas
popf
pop
sbb
call
push
dec
fistl
jb
scas
dec
mov
testb
flds
mov
fs
adc
jo
int
jns
cmpb
test
add
out
call
inc
jb
adc
ficomps
pop
xor
pop
data16
and
es
aad
jmp
and
pushf
out
out
adc
dec
repz
sbbl
ds
push
outsl
jmp
addr16
xor
nop
jl
pop
push
mov
lcall
les
rclb
lret
das
pop
clc
outsl
adc
mov
movsl
popf
arpl
test
pop
jbe
mov
push
orb
mov
std
aaa
out
mov
imul
or
orb
subl
xlat
jge
cltd
xchg
add
mov
ret
hlt
pop
decb
cs
daa
xchg
lods
push
out
jg
pushl
test
jle
add
bound
mov
pop
leave
pusha
popf
pusha
add
xor
push
mov
shl
pop
enter
add
icebp
pop
lea
adc
test
scas
sub
sub
or
mov
cmp
sbb
mov
and
adc
pushf
inc
in
test
mov
mov
mov
stc
adc
lahf
xor
test
sbb
dec
sbb
fistpll
lock
rcrl
push
mov
add
imul
loope
and
insl
out
push
fwait
aas
imul
or
inc
push
insl
movsb
test
cmpsl
lcall
stc
mov
jmp
dec
adc
jl
inc
mov
clc
outsl
mov
into
xchg
jp
sub
repnz
and
and
sbb
xor
inc
pop
and
or
fistl
out
jae
push
les
aad
mov
mov
inc
jp
jae
pop
in
sub
fisttpl
aas
stos
inc
filds
mov
int3
lcall
imul
icebp
das
fs
mov
sbb
out
pop
mov
and
ret
jle
in
pop
in
popa
icebp
dec
es
pop
or
and
adc
xchg
ljmp
xor
lock
sub
adcb
inc
aad
and
mov
pop
mov
in
aaa
add
xor
adc
push
loopne
mov
pop
clc
jl
cmp
pop
aam
add
pop
sbb
add
mov
cmp
or
arpl
sub
or
xor
imul
and
push
mov
xchg
and
adc
xchg
sub
int
cvtpi2ps
adc
leave
pop
and
in
pop
ds
push
cmp
dec
jge
mov
and
imul
out
pop
push
mov
sti
icebp
add
xor
into
adc
and
pop
push
out
sub
pusha
inc
push
inc
sbb
sbb
ret
sarl
inc
xor
and
fwait
add
inc
add
and
xor
std
and
leave
xorb
stos
pop
mov
pop
xchg
cmp
pushf
mov
mov
lods
xor
mov
add
jbe
add
pushf
or
repz
popf
jo
pop
ja
and
xchg
js
decl
pop
sub
dec
subb
loopne
pop
dec
scas
dec
mov
lret
icebp
push
add
test
jo
lods
adc
push
test
mov
ret
rcr
cli
sub
icebp
lods
push
dec
out
cmc
sub
and
mov
inc
sti
push
mov
sbb
sub
and
jl
xor
sbb
adc
lahf
loop
scas
jnp
jle
mov
and
rcrl
into
addb
lahf
jb
mov
scas
out
mov
popa
cmp
jp
inc
out
out
sub
cli
sbb
cmpb
clc
xchg
mov
mov
or
or
push
jmp
lcall
adcb
sub
pusha
add
jmp
jle
lods
scas
repz
pushf
mov
movsl
scas
cmpsl
imul
and
lcall
inc
sub
inc
push
loop
adc
push
movsl
and
lods
pop
mov
test
repnz
test
xchg
or
leave
cmp
push
aad
fstpt
loopne
sub
inc
loopne
lret
add
rorb
xchg
clc
jg
test
jl
aad
pop
cmp
add
xor
mov
pop
cmp
pop
jo
mov
outsl
rcll
cmp
push
add
shrb
lea
test
lret
xchg
and
loopne
je
inc
fwait
imul
pop
insb
nopl
push
fsub
fs
xchg
pop
addb
imul
mov
dec
scas
add
lea
xchg
stos
xchg
cmpsb
xorl
lods
repz
mov
mov
push
mov
hlt
mov
fdivl
daa
or
scas
in
mov
lret
inc
stc
or
cmp
aam
fcmovnbe
jmp
ret
sti
sub
fmuls
les
mov
pop
push
daa
mov
fdivs
data16
push
mov
cmpsl
pop
test
lea
lret
data16
daa
or
xor
pop
clc
in
in
mov
popa
sbb
inc
lret
and
or
push
addl
jb
stc
jbe
lea
jno
jae
iret
cli
rorl
or
outsl
push
mov
add
cmpsl
pop
mov
dec
mov
sbb
pop
pop
jl,pn
push
fwait
mov
cs
or
cmp
fistpll
sbb
mov
subb
mov
bnd
ja
jp
in
mov
data16
jb
mov
lea
sbb
in
inc
or
adc
mov
push
cltd
inc
mov
call
nop
or
rcl
add
add
push
rol
incl
add
and
cmp
dec
fdivr
push
pusha
and
xchg
inc
shr
mov
push
cltd
mov
jecxz
push
xchg
push
mov
setns
jmp
xchg
cli
push
cltd
sbb
and
das
in
test
pop
xchg
adc
jecxz
add
lcall
mov
lahf
lret
popa
mov
std
add
mov
pop
mov
jbe
in
xchg
test
mov
stos
mov
push
pop
pop
push
lcall
mov
ds
movsb
cli
js
adc
mov
lock
push
mov
in
jg
fstl
int3
pop
jmp
sbb
iret
add
jle
cs
mov
ljmp
out
daa
mov
ja
xchg
mov
push
call
cmpsl
or
or
add
insb
add
pop
inc
stos
jne
mov
fistl
mov
gs
scas
xrelease
mov
pop
pop
xorb
pop
inc
cld
mov
or
sbb
inc
mov
cmp
test
mov
push
mov
jge
mov
adc
loope
mov
sahf
cmpsl
stos
int
jo
cmp
sbb
xchg
jns
xchg
mov
loope
je
adc
sub
or
xchg
enter
outsl
cmp
xchg
mov
cmp
loope
mov
fildll
mov
jns
dec
and
pop
lock
jmp
lds
push
inc
jo
xchg
xchg
outsl
call
xchg
pop
push
push
orb
cmp
lock
stos
pop
mov
fcompl
sbb
mov
mov
mov
add
aam
out
adc
mov
dec
and
inc
ret
add
add
and
stc
rorb
inc
xor
pop
sbb
test
cmp
bound
in
or
pop
or
mov
ljmp
add
sub
fisttps
add
add
outsl
loopne
lea
inc
mov
es
push
or
pop
and
pop
add
shl
mov
pop
sbb
into
out
inc
stc
test
sub
jnp
test
xchg
ljmp
and
push
adc
loope
ds
sarb
add
shrl
and
js
lcall
sahf
mov
push
mov
out
loop
mov
loopne
cwtl
adc
es
and
add
loopne
add
sbb
rorw
jbe
es
sub
enter
test
icebp
or
gs
in
test
orb
loopne
pop
mov
push
daa
inc
loope
sub
in
jae
push
push
and
push
bound
add
dec
add
in
orb
adc
xor
fimuls
sbb
dec
jae
fadds
xor
sub
aas
lret
scas
push
int3
lcall
inc
inc
sub
pop
rcr
pop
and
pop
push
mov
xchg
push
xchg
push
add
jmp
xor
sbb
adc
enter
adc
ret
jg
in
mov
dec
fs
fisttps
rolb
add
inc
xchg
and
faddl
sahf
jb
and
sahf
aad
mov
orb
lds
push
and
inc
in
mov
pushf
adc
dec
jnp
add
fiadds
jb
add
pop
push
or
mov
les
pop
jno
pop
lret
ret
mov
pop
adc
sub
dec
add
adc
sub
sahf
xchg
imul
add
pop
out
jbe
cmp
adc
fstpt
inc
sarl
cmp
xor
cmp
hlt
or
andb
inc
or
pop
xchg
mov
push
xor
arpl
mov
leave
cwtl
ret
pop
mov
pushf
dec
nop
gs
push
sbb
pop
dec
mov
icebp
das
push
or
push
ja
pop
add
outsb
mov
insl
push
inc
jae
pop
mov
xchg
mov
pop
pusha
adc
lock
jb
push
test
js
inc
push
push
and
push
lret
call
mov
sbb
adc
add
bound
dec
pusha
insb
mov
fildl
cmpsl
dec
in
mov
mov
or
or
add
jecxz
and
cmpsb
lret
add
add
xlat
inc
enter
fst
in
loop
js
mov
xchg
and
adcb
cwtl
mov
fidivl
js
add
dec
or
pusha
cmp
mov
fistps
sar
out
ja
shlb
cmpsl
mov
fsubr
mov
mov
mov
sbb
xchg
imul
mov
xor
pop
stos
mov
fists
in
icebp
xchg
pushf
xor
sbb
push
rol
mov
cs
dec
cmc
lahf
xor
or
fldenv
add
lods
sub
add
leave
mov
cmp
mov
xchg
or
and
int3
push
lcall
cmp
add
and
test
xlat
mov
add
add
pop
cmpb
fldl
mov
scas
sbb
loop
fldt
outsl
push
xchg
mov
test
fsubl
std
ljmp
popa
ret
sub
sbb
dec
xchg
xor
add
in
fldt
std
das
stc
movsb
jcxz
push
jge
arpl
test
push
mov
inc
pop
push
sub
movsl
movb
aam
mov
mulb
loopne
add
or
inc
shlb
lret
adc
fstpt
dec
adc
mov
mov
stc
sbb
adc
push
rcrl
lea
incb
test
fstl
jg
in
repz
adc
inc
jne
xor
out
fwait
mov
xor
jmp
popa
mov
nop
not
mov
lret
in
adc
cltd
dec
or
jle
and
sub
mov
insl
mov
add
insb
add
out
cmp
push
sub
jb
fwait
sbb
or
out
add
mov
inc
and
in
jno
es
fisttpl
hlt
cld
and
cmp
inc
sbb
xchg
fstpl
ficomps
imul
ja
mov
sub
lcall
lcall
cmp
xchg
or
mov
enter
sub
pop
imul
dec
cwtl
mov
mov
lea
movsl
mov
mov
sbb
movsl
cmp
aam
shll
fst
sarl
sbb
add
sub
imul
imull
inc
xchg
and
sahf
mov
push
sbb
pop
in
adc
test
pop
push
andl
insl
stos
or
popf
shl
push
sub
mov
xchg
xchg
enter
mov
adcb
shll
or
out
add
pop
or
push
dec
xchg
movb
sti
mov
leave
jae
mov
fiaddl
inc
and
sar
mov
and
push
out
imul
shld
mov
adc
lcall
push
mov
add
sub
pushf
inc
stc
xchg
inc
pop
outsb
pop
mov
push
int3
cli
adc
jg
pop
lret
push
dec
inc
or
movl
cmc
jg
sar
inc
and
cwtl
push
mov
pop
int
pusha
push
loope
or
nop
jl
std
ljmp
push
in
push
mov
cmp
aaa
mov
push
mov
std
adc
adc
adc
jno
push
ljmp
jge
jno
dec
ljmp
leave
lret
mov
data16
dec
ljmp
std
add
pop
aas
gs
and
cwtl
sbb
fwait
divb
lcall
push
lret
cmp
xor
xchg
stos
mov
mov
aas
jecxz
lcall
sub
enter
push
cmpb
mov
ljmp
aaa
jp
fmul
jno
dec
imul
enter
cmpsb
lcall
arpl
cld
andb
into
test
pop
sbb
mov
sbb
mov
add
and
mov
repz
dec
add
xor
jg
ret
bound
adc
dec
push
in
mov
mov
sbbl
pop
xlat
jmp
xchg
jae
adc
lret
or
insb
cmp
jae
mov
mov
fisubrl
xlat
bnd
push
bound
pop
aas
or
ljmp
clc
add
lcall
xchg
mov
sarl
aam
inc
mov
ds
pushf
adc
cmp
sbb
and
mov
adc
add
cltd
mov
mov
aad
icebp
and
jecxz
pop
repz
inc
mov
jp
sti
lret
mov
sub
or
inc
mov
inc
push
sbb
dec
dec
icebp
aaa
mov
dec
bnd
adc
rolb
aas
xchg
xor
push
mov
sub
add
ss
push
xchg
sub
xor
lods
in
out
add
aad
jecxz
jmp
mov
sbb
add
sti
dec
rcrl
or
lret
add
mov
cli
mov
inc
push
orb
sub
add
inc
adc
inc
jge
cmc
fdivs
jo
sbb
adc
mov
pop
hlt
mov
dec
idiv
adc
dec
in
jmp
push
in
lods
or
inc
cli
decl
pop
or
in
jo
jne
and
test
xchg
mov
outsb
jge
std
test
dec
pop
fists
lock
xchg
sti
fbstp
add
movsb
or
lcall
lret
pop
decl
sub
das
cmp
mov
mov
sbb
in
hlt
fs
inc
mov
pushf
inc
pusha
push
mov
or
cmc
inc
stos
test
mov
loope
shl
loope
ret
mov
xchg
ret
mov
xchg
ljmp
shrb
mov
out
xchg
stos
sarb
jo
sbb
mov
adc
mov
and
inc
cmp
scas
adc
dec
mov
sbb
imul
sar
psrlq
mov
std
cmp
sbb
lea
cmp
jo
fcmovnu
push
xor
fstps
std
fildll
dec
add
flds
adc
jp
lret
iret
mov
sub
mov
mov
pop
sti
pop
sti
sub
in
daa
in
adc
rolb
ja
mov
test
xchg
sub
xchg
jno
call
or
arpl
bound
mov
sti
movsb
xor
xor
push
push
aad
or
sti
pusha
and
adc
je
inc
mov
or
rorl
jge
ss
loop
mov
jnp
mov
cmpsb
mov
lock
mov
rorl
jl
mov
test
aad
xor
clc
mov
mov
cmp
add
add
xorb
dec
sbb
enter
mov
add
data16
pop
cwtl
lds
inc
pop
xchg
es
cwtl
fdivrs
jbe
sbb
ss
das
ds
insl
imul
shrl
or
les
sub
inc
rcll
or
jp
mov
jbe
push
int3
xchg
or
inc
jmp
arpl
ss
cld
dec
popa
outsl
js
mov
js
loop
mov
shrb
push
or
and
dec
adc
sarl
pop
inc
ja
aam
or
mov
pop
and
in
and
xor
jl
js
fisubrs
push
xchg
xor
fsubrs
lea
jge
mov
es
adc
adcb
loop
test
mov
and
bound
add
sub
xor
je
mov
retw
mov
or
stos
pop
mov
adc
mov
mov
mov
lods
xlat
pop
and
add
lret
and
mov
loop
ror
inc
xor
or
inc
xor
dec
sbb
rcll
xor
sbb
fs
add
rcl
jge
sbb
ljmp
shrl
out
popa
not
pop
stos
aaa
dec
add
mov
in
lods
ss
push
mov
mov
nop
or
ja
js
arpl
stos
or
popf
jb
orb
out
and
and
dec
and
sub
test
shll
mov
pop
jo
in
lret
sub
addl
lcall
or
cli
ja
xchg
and
loop
ret
aas
mov
or
fcompl
sbb
jbe
test
or
sub
movsl
xlat
fldt
lock
fs
push
dec
lcall
jg
lahf
add
cmp
aas
cmp
mov
and
popa
jecxz
inc
das
pop
pop
loop
insb
and
or
lcall
jbe
pop
mov
inc
push
xchg
hlt
outsl
dec
adc
jae
adc
clc
or
cmp
mov
xor
cli
push
int
mov
inc
mov
push
ret
sbb
dec
sub
repz
bound
rorl
cmp
add
bound
inc
out
adc
hlt
push
lods
push
mov
rorb
fcomip
ret
test
inc
call
outsl
cmp
mov
int3
mov
cmp
outsl
mov
jge
popa
sbb
dec
push
incl
int3
add
test
cmp
pushl
sahf
pop
lock
add
xor
and
push
lock
and
hlt
int
hlt
lcall
and
movsl
insb
lahf
add
addl
ljmp
xchg
call
and
xchg
sub
rclb
jns
cmpsb
and
sub
jmp
push
fldenv
rorl
inc
mov
lock
push
lods
or
jmp
mov
push
ja
leave
push
or
leave
scas
rol
fiadds
out
and
push
test
add
push
sti
pop
mov
rorb
xchg
in
or
adc
mov
inc
mov
cld
push
andl
fdivrs
xchg
cltd
aas
gs
hlt
das
and
les
add
ja
adc
scas
and
add
push
xor
pop
jmp
icebp
test
add
mov
add
dec
addr16
roll
fwait
roll
xor
adc
jecxz
inc
or
sarb
pop
jge
xlat
es
fistpll
add
lock
and
sbb
mov
mov
inc
pop
dec
sbb
out
push
pusha
in
shr
jo
mov
cs
cltd
and
jne
sub
push
mov
std
adc
or
sub
sub
dec
shr
jns
hlt
sub
int
mov
and
mov
iret
hlt
and
movl
scas
stos
das
jp
inc
mov
rcrb
sbb
prefetch
or
mov
add
xorl
subl
sub
shrb
test
call
add
hlt
cmp
ret
inc
sub
rcll
add
push
push
xor
test
mov
push
and
dec
imul
cwtl
pop
aaa
adc
testb
cli
ret
lds
call
jmp
adc
inc
push
and
or
aaa
cmp
in
or
lock
fcoml
xchg
in
inc
push
push
cs
add
lock
sub
xor
mov
and
es
pop
xor
mov
cmpsl
sbb
lock
add
ror
roll
or
mov
cwtl
jnp
mov
or
or
mov
out
ljmp
hlt
loope
rcll
sub
adc
jo
insb
pushl
add
fst
cwtl
jecxz
lds
mov
andb
cmpsb
lret
xor
fcmove
fs
dec
lcall
pop
push
cmpsl
xchg
fdivrs
lcall
mov
movsb
dec
xchg
ljmp
inc
inc
pusha
push
ffree
hlt
mov
fistpl
stos
dec
lcall
ret
frstor
test
fs
scas
mov
or
and
cltd
mov
and
jo
das
jge
mov
call
fsub
dec
ja
sbb
outsb
adc
rcl
iret
clc
clc
es
jl
inc
subb
std
dec
mov
add
in
push
icebp
mov
cwtl
mov
adc
aad
ljmp
cmp
sar
es
orb
xchg
sbbb
or
push
sbb
movsb
adc
sbb
loopne
loope
mov
cmc
push
fldcw
cli
pop
imul
fs
aad
jns
inc
mov
push
add
lret
subl
add
pop
std
xchg
inc
cwtl
lcall
into
cmpsl
pop
sub
incb
jne
push
arpl
pop
or
mov
out
lret
ds
add
or
mov
and
pusha
movsb
mov
mov
jl
loop
int3
inc
push
fsubrs
push
lock
mov
push
arpl
movsbl
dec
jle
jae
cmp
inc
lock
dec
je
adc
clc
sub
icebp
lods
xchg
mov
jle
in
mov
es
adc
jnp
mov
mov
and
dec
pop
adc
call
cld
js
sub
cmp
mov
sub
mov
icebp
sub
xchg
mov
hlt
call
mov
cltd
inc
mov
roll
add
sti
xor
add
cli
dec
in
lcall
decl
jne
leave
ret
mov
add
xor
xor
jge
popa
or
je
shll
push
jg
outsl
adc
sbb
loopne
inc
add
xor
sbb
iret
std
xor
push
shr
aas
fcomps
insl
push
dec
das
aaa
add
and
loopne
fsubp
adcb
dec
movsl
sub
call
add
out
clc
sbb
lret
push
and
dec
ret
aad
lret
rolb
mov
lcall
mov
mov
dec
or
sbb
fs
inc
jne
or
ret
cld
std
sbb
fldenv
or
push
cwtl
or
addb
clc
mov
test
and
fs
sub
es
cltd
fsubrs
sbb
orb
jecxz
cli
icebp
jl
int
dec
inc
xor
inc
pop
js
inc
out
cmove
dec
cmp
mov
fsubs
mov
in
dec
jmp
repz
sti
incl
mov
or
dec
cmc
sahf
mov
or
aad
cld
inc
pop
aad
test
insb
add
sbb
test
cmp
aam
cli
adc
add
sub
enter
add
mov
sub
iret
nop
jae
xchg
xor
sbb
sub
pusha
adc
fidivrl
mov
clc
jg
int3
sub
pop
mov
repnz
shll
xchg
mov
pop
fldt
jmp
fwait
pop
push
and
mov
imul
in
mov
sbb
xor
popa
or
xor
addr16
push
mov
call
mov
push
daa
cltd
movsl
shll
or
mov
xor
enter
call
dec
insl
imul
inc
lcall
pop
pop
add
mov
pop
and
sti
movsl
imul
inc
decl
dec
sbb
xor
out
adc
xchg
xlat
hlt
mov
outsl
pop
dec
cmc
xor
cmp
and
push
mov
pop
test
xchg
jae
mov
xlat
cmc
jg
pop
xchg
sarl
and
jno
pop
fisubrl
push
and
inc
out
call
xchg
dec
fldt
fneni(8087
mov
pop
cld
mov
adc
push
or
rol
arpl
and
sbb
mov
cwtl
and
outsl
jne
test
jne
out
push
mov
std
lock
sub
mov
push
pop
cmp
or
inc
pop
rcl
es
pop
loop
lcall
sub
push
pop
xor
outsl
pop
fdivl
out
mov
popa
ds
push
outsl
in
cltd
gs
xchg
roll
add
cld
scas
and
das
je
or
lcall
mov
das
add
lret
je
add
das
insl
in
xchg
sub
aaa
ljmp
and
call
push
sti
dec
dec
dec
loope
shll
subb
mov
lret
mov
out
jmp
je
test
imul
fildll
mov
push
or
jmp
or
dec
sub
inc
inc
mov
mov
mov
adc
in
jg
imul
js
mov
jbe
jmp
push
stc
mov
clc
stos
adc
cs
aam
push
push
pop
test
dec
hlt
push
leave
dec
call
lret
mov
repz
lods
cmpsl
inc
aas
jmp
fldl
fistl
inc
add
rorl
push
pop
and
sub
or
shll
scas
xchg
fisttpll
sarl
movsb
pop
pop
int3
loop
add
cmp
mov
and
pop
cld
push
pushf
inc
icebp
sbb
push
pop
out
mov
out
data16
or
call
call
cmc
add
loope
faddl
mov
sahf
sbb
in
push
inc
es
mov
negb
je
fdiv
adc
cmp
fldcw
dec
xor
jp
call
sub
aaa
jo
sbb
out
faddl
inc
adc
add
dec
or
mov
adc
or
mov
test
inc
ret
das
adc
dec
add
xchg
ljmp
push
pushf
and
bound
shlb
pop
or
add
xchg
add
xchg
pop
cmpb
mov
jo
sbb
add
push
lods
push
cmp
cmp
sub
push
loopne
lds
inc
adc
jg
rcl
lods
push
dec
lock
add
xor
lock
les
clc
cmp
push
ret
sub
insb
filds
and
or
sub
adc
in
test
mov
fdivl
imulb
mov
xchg
pop
mov
inc
cmp
out
in
shrl
lcall
andl
ljmp
test
or
fstps
movsl
lret
fcoml
push
loop
cmp
or
lock
sbb
adc
mov
add
icebp
in
inc
pop
adc
jp
add
add
bound
lret
xor
and
inc
mov
insl
rolb
adc
add
insb
inc
xor
lock
cmp
mov
add
aad
xor
shrl
clc
repnz
dec
add
ret
mov
xor
orb
loope
or
ficomps
sbb
dec
add
sub
xor
add
and
sub
pop
and
jae
add
fstl
lcall
inc
mov
add
addb
mov
sub
and
ds
rclb
cmc
call
mov
orl
push
xchg
fwait
xor
jo
pop
sub
jo
sbb
sbb
icebp
add
mov
outsl
ljmp
repz
jp
fiaddl
stos
push
xor
jb
lock
popf
xchg
shlb
repnz
ljmp
je
lock
test
les
mov
pop
mov
xlat
repz
sbb
add
addr16
outsl
rcl
adcl
pop
dec
add
lods
dec
pop
jge
mov
push
push
repnz
movsl
pusha
and
das
out
cmp
adc
repz
jl,pn
decl
pusha
lcall
es
cmp
push
mov
sub
pop
mov
pushf
adc
pop
gs
jno
jae
bound
inc
jmp
sbb
sub
dec
icebp
adc
and
out
sbb
aad
sbb
filds
inc
inc
add
aam
clc
dec
fsubr
rclb
mov
popf
fs
inc
adc
mov
xlat
int3
cli
into
xchg
mov
icebp
inc
test
and
out
pop
adc
xchg
push
push
inc
insl
mov
stc
mov
jp
fdivr
cmp
es
shl
in
loopne
in
mov
adc
mov
jge
outsb
das
inc
adc
sbb
mov
jecxz
mov
ret
sub
jp
lds
in
cld
call
xchg
lea
nop
popa
sub
faddl
icebp
or
mov
cmp
jns
jecxz
lret
dec
test
stc
mov
jo
mov
push
mov
mov
rcl
lret
mov
outsl
fbstp
fcompl
cmp
les
dec
mov
pop
mov
xor
push
xchg
adc
sbb
lods
fwait
iret
insl
mov
adc
lcall
cmp
scas
or
mov
xchg
cli
outsl
push
mov
mov
in
xlat
fcoms
aaa
mov
scas
in
out
nop
jb
call
mov
test
sbb
bound
or
xchg
xor
imulb
testb
mov
gs
mov
nop
cltd
addr16
inc
cmp
mov
xchg
push
xor
mov
insl
test
lock
push
shr
or
ret
push
dec
sar
adc
data16
lods
clc
inc
clc
xor
mov
dec
in
cli
push
clc
mov
push
in
pop
fwait
add
les
cld
outsl
dec
mov
inc
iret
sub
sub
or
adc
clc
lea
push
pop
mov
or
add
decl
pop
xchg
pop
ret
cmp
mov
repnz
aad
lcall
cwtl
dec
add
adc
mov
add
jb
test
jmp
push
je
or
lea
sbb
lret
pop
xor
inc
dec
or
or
inc
dec
cmp
mov
add
das
jp
outsl
ljmp
ret
repz
add
pop
push
sbb
getsec
xchg
stc
movsl
mov
mov
das
sub
mov
inc
sbb
es
cmpsl
mov
xlat
mov
incl
sbbb
cmpsb
and
inc
int
mov
adc
cld
inc
ret
add
sbb
es
sbb
nop
jmp
dec
push
nop
xchg
ljmp
and
pushf
push
jmp
mov
aad
arpl
loop
xor
es
lret
icebp
fnstenv
and
ret
pusha
insl
stos
push
loopne
mov
cmc
add
xchg
iret
inc
inc
push
int3
ret
sysexit
fidivrs
jo
add
outsl
pop
testb
push
xchg
pop
ss
inc
test
add
cmpsl
push
sub
push
jp
mov
add
pop
loope
xlat
adc
incb
es
movb
xor
push
shr
or
test
mov
jp
call
sbb
popf
xor
test
or
mov
lods
adc
adc
jg
ja
loope
nop
push
push
and
cwtl
mov
xchg
ret
stos
mov
ret
das
jbe
sti
nop
out
add
add
pop
cmpsl
test
dec
aad
push
enter
mov
addr16
arpl
ljmp
sarl
or
push
adc
loope
std
shll
sub
cmc
jnp
xchg
cld
inc
or
lcall
xchg
xor
cmpb
cmpb
cmp
cmpsb
push
cmpb
push
insl
fistpl
int
xor
push
jmp
pop
xchg
rcrl
or
jl
imul
into
push
iret
call
mov
scas
je
call
sub
in
js
pop
and
mov
push
shll
gs
jmp
add
inc
adc
pop
jnp
les
lret
add
das
ret
push
and
adc
js
dec
test
sahf
adc
or
pop
jnp
cli
mov
imul
mov
pop
call
push
inc
add
or
mov
fiaddl
or
loop
clc
or
xlat
addr16
sub
jbe
mov
test
aam
and
popa
sub
lds
push
xchg
or
test
ds
add
and
outsl
aad
mov
mov
cltd
xor
or
add
and
imul
jg
push
test
aad
mov
cltd
jns
jbe
push
mov
jmp
xor
divl
std
jmp
icebp
fcmovb
in
decl
inc
push
outsl
inc
inc
push
sbb
lcall
push
pop
add
imul
addl
imul
pop
insb
scas
add
sbb
test
xchg
and
addb
inc
add
dec
xchg
outsl
lock
jp
jo
push
mov
clc
inc
outsb
inc
sbb
jnp
or
mov
mov
daa
dec
add
bound
pop
pop
clc
pop
fisttpll
adc
mov
iret
clc
clc
shll
adc
or
mov
xchg
mov
mov
lock
sahf
mov
shlb
lds
push
sub
add
mov
loop
pop
lock
imul
mov
add
xor
add
pop
push
sti
sbb
dec
mov
decb
and
aaa
push
sub
jnp
movsl
dec
pop
adc
mov
mov
cld
jno
rclb
inc
jnp
or
aas
repnz
pop
adc
daa
bound
fadds
push
outsl
xchg
fists
adc
out
aaa
and
sbbb
mov
pop
rcll
sbb
adc
lock
dec
shl
cwtl
sub
mov
add
mov
jp
inc
and
and
cmp
shr
mov
sub
call
and
lret
fstpt
mov
add
aad
sub
jb
inc
subb
ljmp
mov
lock
mov
lods
stos
lcall
les
je
mov
jp
mov
push
mov
inc
jmp
lcall
daa
adc
das
notl
mov
jbe
dec
test
push
or
mov
or
nop
add
in
push
addr16
push
cs
jmp
mov
or
jne
or
or
add
stc
lds
sub
negl
repnz
xchg
mov
push
dec
pop
lds
adc
subl
xchg
jp
push
je
cmp
hlt
das
sbbb
or
fsubs
or
xchg
xor
fnsetpm(287
sub
pop
daa
stos
xor
cmpsl
push
shl
sub
les
push
mov
xchg
out
movl
xchg
ret
daa
stos
fs
in
push
and
push
xor
rorb
lret
test
pop
repnz
ss
push
pop
ljmp
scas
pop
or
sar
adc
add
cmpsl
sbbb
mov
sub
xor
jno
test
loopne
pop
movsb
sub
adc
adc
and
lods
dec
cmp
jne
sub
rolb
loope
sbb
sub
push
ficompl
andb
add
aam
mov
adc
pushf
test
and
lds
popw
fwait
adc
lods
jmp
cmpsl
stos
inc
mov
stc
cmpsb
pop
add
push
in
mov
inc
xchg
loopne
xchg
cs
mov
pop
lahf
add
js
ret
mov
adc
adc
cmp
std
mov
and
xor
add
jb
sarb
jbe
xchg
jbe
push
mov
inc
int
adc
rorl
push
les
mov
jbe
mov
add
icebp
inc
fs
scas
and
and
ds
or
inc
mov
outsl
idivb
aaa
cmp
xor
dec
or
das
shrl
cmp
fwait
mov
mov
ror
inc
jl
out
mov
mull
push
or
lea
mov
mov
push
cmp
xchg
mov
fisttpll
js
in
pop
fdivrs
ljmp
push
add
mov
sub
enter
jbe
in
adc
adc
fiadds
fdivs
test
sbb
out
cmpb
and
mov
adc
sbb
sarl
dec
push
aad
mov
push
cmc
notb
inc
mov
add
dec
and
or
aam
mov
rorl
mov
ret
adc
add
mov
gs
mov
inc
mov
ret
ljmp
fildl
mov
faddp
sbb
ja
rcr
mov
js
pop
mov
adc
loopne
rol
roll
push
imul
push
shll
pop
jbe
loopne
in
inc
or
adc
or
mov
sub
popf
push
jb
jl
adc
sti
dec
jecxz
mov
fildll
sub
pop
push
cld
pushl
xlat
sbb
add
mov
xor
push
cli
adc
inc
cltd
and
lea
cmc
xor
pusha
or
mov
jo
cmp
jg
fnstsw
adc
or
in
mov
hlt
adc
into
imul
and
add
mov
iret
std
sbb
sbb
and
pop
mov
mov
stos
adc
inc
lcall
cmp
push
add
lret
mov
fs
rorb
ja
outsl
add
mov
or
jecxz
jno
or
test
lock
mov
inc
ljmp
je
pop
faddl
cmp
mov
add
cli
push
xor
cmpsl
cltd
pop
mov
or
addr16
bound
les
mov
xor
add
mov
sbb
mov
das
icebp
mov
call
outsb
xchg
imul
shll
mov
nop
xchg
dec
sbb
loop
pop
enter
js
pop
idivb
xor
pop
int
mov
add
mov
loopne
fwait
push
sub
aad
test
mov
xor
aad
les
dec
fiadds
add
pop
jg
or
jg
mov
clc
mov
inc
jb
dec
int
push
dec
xor
inc
adc
iret
cmp
sub
in
outsl
out
sbb
scas
std
xor
pop
mov
mov
cs
pushf
push
inc
notb
adc
jmp
push
xor
das
cmc
negb
and
pop
or
add
loop
negb
imulb
jecxz
add
push
pop
push
cvtps2pi
sbb
xor
call
or
adc
mov
shl
andl
std
jbe
sub
and
gs
inc
push
cmp
pop
add
adc
je
dec
mov
jnp
mov
or
out
mov
in
inc
lret
bound
jmp
inc
gs
fcoml
push
out
loopne
clc
repz
jle
in
or
push
push
xor
ds
push
stos
je
pop
dec
arpl
add
mov
out
xor
xor
sti
es
xchg
sarb
add
les
push
das
cltd
mov
xchg
in
inc
push
daa
mov
xor
push
pop
sar
sbb
mov
movsb
addb
pop
icebp
or
cld
jne
movsb
out
js
jbe
sbb
data16
add
mov
jns
push
roll
in
fldl
and
fsubp
cmp
or
jno
and
inc
jns
ret
mov
ss
add
inc
add
rolb
or
daa
xchg
pop
sbb
push
out
mov
adcl
push
lds
test
and
or
or
push
add
sbb
xor
jne
jl
sub
sub
aad
push
jl
in
fstl
fldl
and
jae
rcll
loopne
test
mov
push
mov
es
add
mov
push
lock
adc
mov
dec
jle
clc
push
fisttps
sbb
pop
nop
in
in
add
xorl
lret
cli
js,pn
jmp
aad
mov
or
outsb
jo
push
mov
xor
sub
xor
mov
mov
or
sub
jg
xorl
std
or
mov
sarl
out
jo
lock
mov
mov
or
pop
pusha
cmp
or
pop
sub
pusha
push
and
sbb
push
mov
imul
imul
sub
or
mov
dec
jnp
ja
addb
cmp
xchg
or
dec
push
fwait
or
adc
jae
xor
inc
add
mov
nop
jl
lods
loopne
xchg
pop
mov
fisttpll
fidivrs
movsl
inc
inc
mov
mov
js
imul
jecxz
lods
add
lret
sub
jmp
js
dec
lea
lcall
adc
std
jmp
call
mov
ret
test
inc
adc
insb
hlt
or
dec
jg
jo
adc
out
dec
mov
add
enter
adc
xchg
xchg
add
dec
lock
inc
xlat
cmpb
mov
shrl
flds
aam
pushf
xchg
jb
dec
cwtl
mov
jo
and
test
adc
lds
and
inc
mov
push
cpuid
sbb
mov
mov
cli
cmp
adc
xchg
outsl
pop
fwait
pop
ret
adcb
popf
mov
cmc
and
mov
test
gs
fsubr
mov
rcll
jne
jns
ja
outsb
adc
push
scas
pop
es
mov
in
lock
jge
rorl
dec
filds
dec
pop
dec
mov
mov
pop
rorb
jbe
cs
inc
jge
repnz
dec
hlt
xchg
inc
ds
addr16
sarb
mov
cwtl
div
test
lods
push
or
jg
xor
adc
adc
pop
push
pop
xor
inc
jle
xchg
cli
add
pop
std
and
popa
jae
jle
cmp
sbb
or
mov
in
lcall
mov
fwait
or
cli
adc
mov
add
add
popa
jecxz
aaa
out
cmpsb
push
push
ds
in
lea
jno
iret
cmp
jge
sub
or
sub
jecxz
dec
jno
clc
mov
jne
and
jl
loop
fbstp
xor
fnstsw
mov
imul
or
imul
outsb
test
inc
xor
lods
jecxz
sub
sarb
xor
fucomi
add
add
push
repnz
stos
lcall
mov
pop
ds
inc
das
adc
mov
test
and
faddl
push
sbb
cmpb
xchg
lods
cmp
and
lock
jmp
shll
inc
mov
sub
cmpb
pop
mov
fidivl
mov
leave
push
and
pop
and
ljmp
add
xchg
pop
mov
and
into
dec
cmp
iret
repnz
pop
and
icebp
jg
inc
leave
xor
enter
add
add
jle
insl
mov
test
dec
push
mov
or
xor
neg
dec
push
sub
test
adc
add
dec
inc
mov
dec
es
loop
std
inc
mov
xchg
leave
sub
pop
fwait
mov
xor
add
mov
mov
inc
movsb
out
fistpl
out
lahf
orl
push
xchg
push
mov
out
cmp
fisubs
jmp
mov
out
sbb
lea
fldenv
orl
add
push
in
push
lahf
add
mov
loopne
cltd
dec
rorb
sbb
insl
ja
pop
inc
and
push
and
mov
rol
daa
ds
aas
push
adc
outsl
das
sbb
out
pusha
sbbb
lds
lock
sbb
push
ja
mov
push
gs
sbb
aad
icebp
push
mov
lods
cmp
jno
ljmp
in
jbe
push
mov
cmc
cltd
and
dec
out
push
mov
or
nop
xchg
mov
sub
jne
lods
mov
loope
sahf
lock
ffreep
sbb
mov
mov
pop
loopne
push
je
lods
sti
addr16
test
dec
cmpsl
pop
faddl
and
xor
mov
push
cmp
mov
and
add
jns
jae
push
or
mov
jmp
or
outsl
lds
ficoml
push
inc
das
dec
pop
mov
pusha
push
sub
mov
mov
gs
mov
sub
lds
out
roll
clc
popa
pop
arpl
jno
push
call
jle
sub
subb
clc
pop
sbb
xor
dec
pop
mov
or
xor
push
stos
dec
rorl
in
vorps
mov
mov
push
push
push
sub
outsb
fwait
movsl
mov
pop
test
sahf
and
mov
rcl
push
jb
fisubrs
mov
jg
inc
data16
std
int
push
js
insl
sub
insl
pop
pop
icebp
mov
jmp
lret
ret
pop
outsl
pop
leave
adcl
outsl
or
push
pop
cli
cmp
jns
jno
fwait
jmp
sub
in
lea
lds
sbb
fisubs
jbe
cmp
or
mov
bound
repz
das
push
xchg
cld
pusha
jge
stc
mov
les
les
fdivrs
mov
mov
jne
inc
loop
mov
pop
xor
addr16
seta
pusha
or
lods
clc
jb
clc
inc
pop
and
lods
mov
inc
stos
sbb
fcoms
pop
pop
lock
xchg
fmuls
cvtps2pd
xor
aam
scas
stos
lock
xor
aaa
xor
jae
cmc
outsb
cld
imul
jnp
and
push
testl
jg
and
sbb
ljmp
push
addr16
add
or
dec
fwait
sub
rorb
mov
mov
hlt
das
insb
dec
sbb
and
dec
sbb
fs
negl
mov
push
mov
cld
sahf
mov
rclb
sub
scas
mov
sub
xchg
orb
shrb
sub
movsb
adc
xchg
adc
cli
in
loope
outsl
test
lods
jae
mov
les
add
dec
mov
sbb
orb
movsl
mov
push
pop
je
aaa
mov
add
add
lahf
lret
dec
or
pop
clc
jno
dec
dec
dec
lcall
iret
mov
mov
popa
mov
test
rclb
sbb
inc
rcrb
mov
dec
int3
sub
xor
or
xchg
inc
inc
fwait
mov
mov
subl
sub
fdiv
mov
int3
xor
ss
jecxz
add
or
dec
sub
or
dec
xor
add
cmp
mov
push
test
adc
daa
mov
push
shrb
int3
int
fstl
mov
add
adc
add
mulb
lock
pop
jo
sbb
xchg
adcl
fsubs
shrl
movsb
push
sbb
loopne
jbe
inc
cs
pusha
outsl
mov
int3
sbbl
mov
add
testb
insb
push
adc
gs
pop
btl
mov
sub
clc
mov
mov
mov
mulb
dec
lea
xor
jo
add
cmp
adc
roll
push
and
test
sbb
xor
xchg
lock
pop
and
loop
into
jp
push
lea
sub
inc
dec
dec
pop
mov
aad
imulb
out
mov
or
sbb
sub
pop
dec
insb
cmp
jb
jmp
ljmp
int3
ljmp
les
dec
daa
js
loop
mov
lret
fidivrl
or
imul
rolb
mov
push
xchg
mov
pop
pop
int
scas
pop
mov
fcomip
adcb
inc
adcl
adc
rcrl
out
xor
cmp
sub
mov
pop
mov
push
in
mov
insb
mov
lock
sbb
int3
and
dec
addb
outsb
inc
mov
cld
mov
lock
pop
or
push
jecxz
dec
shlb
pop
inc
test
out
push
es
mov
aad
stos
mov
mov
pop
dec
mov
inc
mov
aam
dec
popf
inc
test
inc
bound
cmp
cmp
mov
or
xor
mov
xchg
subb
inc
pop
cmp
aaa
mov
cli
jg
mov
or
inc
lret
clc
push
aaa
nop
icebp
cmp
xchg
or
int3
.byte
and
pushl
lock
scas
frstpm(287
push
lcall
and
or
add
sti
call
sbb
pcmpeqb
fs
mov
lcall
adc
inc
and
mov
or
add
addb
test
movb
jmp
iret
mov
cmp
pop
adc
or
or
imul
add
push
inc
xor
add
pushf
add
lcall
add
xchg
sti
outsl
or
mov
xor
sub
popa
ret
add
push
outsl
fists
xchg
popf
and
add
push
rorb
sti
fistpll
incl
pop
cmp
mov
add
pop
or
shlb
adc
outsl
xor
xor
pop
sub
mov
pop
xor
add
or
pop
fbstp
inc
cwtl
add
add
xlat
ja
dec
add
incl
loope
sub
mov
imull
jmp
add
jg
outsl
in
add
movsb
sub
dec
test
cmp
add
popa
mov
add
xchg
test
adc
adcl
fldt
std
aaa
loope
add
mov
cmp
pusha
and
sbb
add
ljmp
cmp
nop
dec
pop
stc
bound
insl
add
xor
in
fstpt
xchg
xlat
xchg
xchg
xchg
movsl
jecxz
add
ljmp
xchg
pop
push
scas
add
xchg
inc
or
xchg
mov
cmp
flds
sbb
add
pop
out
test
cmp
fsts
in
pushl
dec
and
add
jmp
jae
std
mov
sub
jnp
push
pop
and
clc
mov
jno
iret
pop
outsb
jg
ret
pop
je
mov
or
sub
add
or
dec
js
mov
push
lock
fwait
add
idivb
mov
mov
xor
jne
jg
lock
sbb
out
cmpsb
es
xlat
add
dec
loopne
jg
xor
loope
adc
int
push
mov
add
movl
fcmovnu
pop
clc
mov
neg
mov
dec
mov
insl
loope
icebp
add
fcoms
jae
mov
insl
pushl
testl
test
add
cmp
xor
scas
add
xlat
mov
jge
jne
rorb
jg
xor
mov
out
testl
or
decb
insb
cs
aam
shlb
ret
mov
int
fdivrp
dec
not
sbb
or
cld
sbb
imul
xor
test
jnp
xchg
subb
or
mov
not
aam
roll
mov
jg
leave
pop
and
or
mov
out
mov
testb
rclb
fldcw
mov
inc
bound
fistpll
add
arpl
dec
cld
sub
jge
sub
pushf
cld
call
jo
fists
add
push
xchg
fs
fwait
or
addr16
mov
push
call
out
insb
xor
sbb
sti
xor
push
sbb
icebp
stos
pop
xor
adc
add
imul
loope
sub
adc
add
and
pop
cli
int
or
cmpsb
leave
sbb
sub
inc
or
movsl
andl
fcmovnu
sbb
imul
imul
adc
dec
sbb
sub
pop
xchg
int
cwtl
rorb
dec
adc
cmp
fmull
pop
fcmovnb
inc
movsl
cmp
ret
pand
add
push
ss
insl
daa
or
inc
adc
es
test
and
sbb
jl
push
loope
rolb
and
or
sbb
dec
shlb
mov
imul
and
andb
pop
call
push
fdivrl
jge
insb
int
add
jge
repz
sbb
fnstenv
and
sbb
xor
aas
jp
icebp
push
xor
mov
xchg
or
xlat
adc
movsl
movsl
jge
call
xchg
in
xor
out
imul
add
clc
pop
stos
jno
imul
dec
mov
andl
test
cmp
outsl
pop
xor
lret
imul
mov
add
int
loope
pop
and
or
xchg
jg
in
sbb
or
stc
arpl
jbe
ret
add
add
adc
clc
add
popa
adc
stos
lea
push
push
push
fdiv
or
adc
mov
mov
pop
push
in
jo
add
out
loope
and
subl
lret
int
and
mov
call
push
jne
sub
insl
inc
xor
push
clc
sub
sbbb
int3
add
sbb
sbb
icebp
scas
add
fimull
jo
test
or
aad
adc
les
ltr
cmpsb
outsl
dec
lods
inc
fists
mov
xlat
in
out
out
nop
sbb
inc
cmp
mov
cmp
mov
sub
xchg
cmp
loope
mov
inc
iret
adc
mov
sti
mov
orb
stos
stc
cmp
inc
jp
aaa
and
inc
sbb
cmp
pop
hlt
and
cmp
lds
mov
and
adc
push
adc
sbb
in
add
or
in
push
ja
cltd
jle
sbb
int3
sub
inc
sahf
xor
add
cwtl
sub
push
loopne
addb
xor
out
lret
test
adc
dec
xor
or
lret
test
outsb
gs
gs
pop
sbb
not
adc
or
add
sbb
fcmovne
int3
adc
mov
sti
add
mov
pop
aaa
or
xchg
xchg
fdivrs
add
loope
inc
pop
movsl
cmp
lret
test
int3
std
fdivrs
loope
add
mov
xchg
jp
inc
push
or
pop
cmpsl
hlt
nop
int
xchg
xor
mov
adc
inc
add
or
ja
cmc
ficomps
xor
mov
or
fdivs
ret
test
xor
push
fsubrs
inc
add
into
add
shrl
cwtl
sbb
xor
push
mov
fcoms
int3
pop
sub
fiaddl
add
neg
aad
or
pop
scas
inc
sub
cmp
adc
jnp
mov
sbb
pop
pop
hlt
sahf
lock
inc
popf
sub
xchg
cwtl
inc
mov
cmp
stos
mov
test
inc
enter
or
cmp
lock
mov
cli
push
lods
hlt
sub
shr
mov
add
pop
mov
push
cwtl
and
inc
pushf
jo
mov
jne
leave
pop
jmp
dec
test
fsubrs
dec
push
enter
lea
pop
in
pop
jle
and
pop
aaa
pop
por
ds
icebp
fdivl
mov
cmp
addl
xor
lahf
xor
inc
adcb
mov
or
dec
sbbb
mov
and
ja
adc
xor
div
dec
push
roll
mov
call
dec
ret
in
push
mov
add
cs
addr16
jmp
fildll
mov
cld
push
push
push
rcl
out
stos
push
imul
je
loopne
hlt
fdivl
jge
fisubs
add
mov
testb
enter
cmpsb
push
nop
movb
sub
call
sub
fisubl
jb
adc
rcl
mov
incb
sbb
mov
cmp
xor
push
jle
aaa
xorl
rcrb
add
iret
and
dec
cmp
mov
ret
or
into
pop
into
or
xor
in
push
ds
enter
push
push
mov
push
div
das
clc
enter
cld
pop
hlt
lret
mov
pop
ret
lds
fistps
sbb
inc
ret
scas
sub
mov
add
rcrb
add
push
dec
or
add
mov
add
insb
xchg
hlt
sbb
add
das
adc
xorb
dec
loop
mov
sti
mov
dec
rorl
mov
outsl
cmp
cmpsb
add
adc
aaa
icebp
mov
adc
sbb
adc
je
lea
daa
test
or
adc
iret
mov
xor
loop
sbb
daa
sub
repnz
call
xor
sbb
out
sub
add
aaa
fdivrl
xor
xor
aaa
stos
or
cmp
inc
cltd
jecxz
fidivs
xor
fcomps
fcoms
daa
mov
adc
out
inc
push
xor
dec
ret
lock
cmp
xchg
sahf
call
add
fildl
gs
push
adc
inc
push
orb
mov
pop
into
or
shl
sub
aad
xor
jle
xor
in
rorb
jbe
lcall
xchg
arpl
adc
or
lods
sbb
popa
jg
sbb
scas
jl
cld
adc
jae
mov
push
push
into
jo
push
dec
add
mov
adc
add
cmp
jno
enter
inc
jno
sbb
jge
cld
add
ljmp
outsl
loop
jb
test
push
xor
jns
ret
xchg
rol
push
pop
mov
loop
and
push
insb
mov
mov
or
or
jmp
push
dec
mov
lea
or
fidivrl
sahf
enter
daa
xor
clc
movsl
xchg
popf
mov
les
or
cmp
sbb
out
mov
pushl
inc
test
mov
pop
movsl
bts
stos
testl
xchg
dec
xor
cvtps2pd
jg
inc
rolb
pop
inc
or
cld
arpl
dec
push
add
int
fidivl
cli
push
add
sbbb
in
int3
js
jnp
inc
repz
hlt
int
std
push
inc
out
cld
xor
cmpsl
aaa
aam
fistps
idivl
mov
outsb
jbe
adc
add
leave
mov
shr
out
mov
movsl
adc
dec
sub
mov
add
enter
mov
arpl
outsl
mov
outsb
pop
mov
push
and
xor
xor
icebp
insb
fwait
test
add
shr
jae
sub
jecxz
clc
mov
ds
and
pop
pushf
ret
mov
adc
xchg
cmp
je
negl
mov
inc
xchg
add
adc
jge
xchg
jnp
iret
cltd
movsl
or
and
inc
js
pop
mov
out
loope
and
dec
adc
inc
lcall
f2xm1
mov
xchg
xor
pop
cld
or
xchg
and
fadds
loope
mov
inc
mov
and
adc
mov
adc
hlt
out
jae
data16
addr16
pushf
cmp
add
jmp
jl
fidivs
xor
scas
insl
adc
inc
fidivl
add
cmp
xchg
add
push
pop
fcmovu
inc
lods
out
adc
sbb
sub
jle
mov
incb
jae
add
repnz
or
fidivrs
rolb
add
enter
cwtl
pop
push
fdivrl
mov
jns
mov
xchg
and
push
dec
sub
or
pop
movsl
and
adc
xor
fildl
arpl
outsl
shlb
adc
inc
les
ljmp
lretw
sbb
stos
rcl
push
aas
test
jae
xor
mov
xchg
pop
shll
stc
xlat
es
or
or
lock
and
ret
sbb
dec
pusha
repnz
lret
cmp
orb
cmc
jle
andb
mov
jb
fs
stos
cmc
xor
fdivrp
xchg
lock
dec
inc
adcb
ret
test
aaa
jnp
int3
iret
ror
fmull
outsb
popa
cmp
hlt
and
xor
adc
lods
sbb
dec
fsub
inc
sub
shlb
adc
jne
stos
cld
cmc
xor
call
ja
loop
data16
ss
cmp
orl
mov
test
fisubrs
imul
not
sub
add
icebp
in
jbe
std
or
icebp
jnp
and
xchg
das
jne
xchg
cmc
adc
lea
enter
int
push
sti
sbb
sub
mov
pop
aam
xchg
inc
sti
xchg
test
jne
mov
lods
lret
shrl
and
mov
xor
push
mov
mov
call
xor
rol
ljmp
or
mov
mov
pop
sbb
jl
cmp
dec
mov
ja
outsb
aam
add
ret
pop
inc
adc
adc
pop
jecxz
rcrl
ficomps
fdivr
cmp
push
add
lods
sbb
or
test
push
pop
mov
adc
or
xchg
jecxz
mov
xor
jecxz
lds
and
cmc
ss
adc
aad
or
mov
and
data16
insb
push
add
cmp
jb
cmp
jp
or
popa
ljmp
or
loope
xor
imul
lea
push
adc
jg
pop
mov
mov
or
push
push
icebp
rorb
lcall
lods
daa
dec
pop
ss
fs
cmpsl
xchg
out
adc
fiaddl
cltd
add
push
inc
push
ljmp
jo
add
cli
sbb
arpl
movsl
addr16
dec
sbb
sub
adc
sbb
loop
mov
jo
addb
enter
lods
iret
sti
and
mov
fsubrp
lahf
or
cmp
jnp
mov
push
dec
sub
push
jmp
int
pushf
adc
fcmovnb
leave
or
mov
ret
inc
or
pop
add
leave
mov
icebp
jmp
lock
fistpll
or
test
aad
push
cmp
dec
push
into
push
nop
cmp
mov
mov
push
add
mov
ljmp
shll
shlb
xorb
loopne
inc
pop
outsb
or
add
fcoms
insb
xlat
xor
pushf
in
push
sbb
jle
jb
and
add
cmp
aas
jecxz
shl
push
mov
and
mov
mov
add
xchg
jo
fisttpll
adc
pop
ret
fwait
icebp
pushf
aam
out
dec
popa
ret
cli
les
mov
cli
insb
ret
adc
xor
inc
jae
loope
ret
enter
add
jecxz
ds
sbb
aad
mov
ficomps
jle
or
imul
pop
inc
stc
fstpl
adc
add
mov
push
das
xlat
or
or
jle
mov
add
mov
rolb
sbb
into
add
xlat
cs
ss
jmp
pop
fidivrl
add
pop
add
inc
jno
dec
inc
jl
push
clc
xchg
mov
cwtl
adc
sbb
push
mov
cmc
cmp
out
jecxz
ss
add
rcll
cmp
call
jecxz
push
mov
add
in
pop
clc
push
xor
or
xchg
cwtl
fs
xor
inc
sub
mov
bnd
test
and
add
and
xor
mov
mov
mov
pop
dec
push
jae
lods
dec
mov
xchg
adc
dec
add
bound
adc
inc
add
inc
dec
push
out
mov
xor
loope
mov
push
sbb
sbb
scas
mov
hlt
and
sub
arpl
cmp
loopne
ret
ffree
sbb
xchg
adc
dec
enter
sbb
imulb
divl
xchg
dec
xor
aaa
bound
jmp
fmuls
push
mov
push
mov
dec
lods
add
push
sysret
incb
xchg
xchg
sub
push
js
inc
cmc
ljmp
cmp
inc
int3
hlt
and
dec
jbe
push
xchg
lcall
negl
clc
sbb
xor
daa
outsb
inc
jne
push
out
pop
lds
push
dec
pop
inc
inc
adc
cmp
push
aaa
xchg
add
or
popl
outsb
icebp
jnp
das
add
ja
push
aas
push
mov
cmp
or
mov
mov
dec
arpl
sub
ret
adc
shrb
in
hlt
fsubr
fiaddl
roll
mov
jb
mov
adc
fcmovne
jl
or
enter
jle
sbb
and
or
lock
enter
pop
nop
int
in
pop
jl
stos
or
lahf
mov
pop
es
mov
adc
adc
inc
add
and
xor
fiadds
mov
shlb
adc
repz
ja
push
mov
iret
and
dec
fldl
int
hlt
shl
adc
fs
loope
lods
xchg
sbb
push
jge
loopne
cli
adc
xchg
add
sbbl
xor
dec
out
test
pop
scas
xchg
popf
xor
mov
test
iret
mov
mov
mov
sub
hlt
add
pcmpgtd
xor
cmp
movsb
jne
sub
or
loope
and
mov
movsb
push
inc
push
mov
pop
jge
je
cmpl
je
push
xorl
lods
dec
inc
rcl
lods
sbb
cmp
fnstenv
cmpsb
popa
in
fdivrs
lds
mov
push
negb
orb
pop
pushf
or
mov
faddl
jl
in
fs
lock
cmp
inc
cmp
sbb
add
testl
mov
stos
pop
ss
repz
cli
or
mov
sub
dec
xor
and
aad
sub
dec
mov
dec
mov
push
xchg
inc
xor
sbb
add
dec
ljmp
into
cmp
in
xor
add
test
es
or
pop
jge
add
xor
notb
icebp
xor
divb
iret
sbb
repz
xor
lret
enter
lock
in
icebp
or
hlt
leave
push
inc
outsl
call
cmpsl
mov
add
das
jo
cli
repnz
add
test
sahf
mov
orb
insl
add
add
fadds
or
inc
and
jg
push
mov
pop
or
enter
cltd
aam
pop
jle
insb
add
in
mov
out
add
dec
cmp
fcoml
fldl
mov
jbe
leave
aaa
xchg
outsl
fidivrs
mov
add
mov
sbb
add
mov
mov
mov
imul
mov
and
pop
mov
aaa
and
jge
xor
aaa
fs
adc
scas
jge
jecxz
sahf
xchg
jae
imul
jmp
ss
ret
cmpsl
or
xchg
inc
inc
add
stos
int
jmp
sbb
test
imul
out
mov
ds
add
pop
add
add
jbe
cmp
sub
adc
ljmp
js
gs
or
adc
add
adc
cmp
push
incb
pop
add
xor
cmp
sti
aaa
js
daa
pop
test
sbb
aaa
dec
in
fnsave
and
pop
and
js
add
xchg
dec
les
jne
inc
insb
ret
sub
loopne
jg
fdivs
out
add
rolb
inc
push
pusha
test
hlt
cld
or
outsl
pop
in
push
lods
sti
jecxz
fs
imul
outsb
mull
xchg
movsb
jmp
inc
or
nop
icebp
nop
dec
fs
cmp
dec
imul
xlat
repnz
ficomps
add
dec
adc
test
addl
add
inc
sub
add
mov
cltd
jns
movl
lods
xor
lcall
sub
mov
pop
das
sbb
push
sbb
roll
sti
pop
sbb
add
or
fdivrs
push
xchg
push
ja
sbb
sbb
fcomps
pop
ror
sbb
mov
push
fidivrl
xchg
add
dec
sub
jbe
imul
add
cmp
psubd
sbb
out
jg
ret
movsb
inc
add
and
pop
mov
and
or
adc
or
cmp
xchg
push
scas
cmpsb
outsb
xchg
leave
subb
adc
cmp
ss
test
xor
mov
ret
ja
xor
call
mov
test
pusha
and
jb
dec
xor
arpl
popa
pop
fcomp
data16
dec
hlt
mov
xchg
ljmp
pop
jle
aam
and
add
das
cld
or
js
cmpl
rcll
inc
push
mov
mov
subb
adc
add
mov
ret
sbb
jae
cmp
call
dec
pop
call
mov
mov
sti
movsb
ret
repz
clc
in
push
sbb
or
or
mov
loopne
dec
pusha
call
add
mov
cmpb
sbb
adc
sti
aaa
dec
mov
xlat
xchg
adc
dec
xor
mov
mov
or
fnstcw
and
mov
icebp
add
add
jp
sub
pushf
loope
adc
shl
pop
orb
jge
push
pop
cld
fcoms
lods
jge
insb
arpl
add
xchg
test
adc
subl
xchg
mov
call
adc
es
repnz
pop
in
hlt
push
or
popa
add
fisubrl
stos
mov
xor
fisubrs
sbbl
sbb
push
or
xchg
fcomip
fdivp
scas
mov
push
rclb
mov
push
sbb
cmpsl
inc
xchg
jb
add
cmp
xor
push
and
subl
fstps
inc
add
add
das
rcl
shlb
dec
push
mov
mov
pop
pop
push
push
cld
or
arpl
dec
test
push
and
mov
pop
outsb
pop
xor
add
clc
sbb
dec
pushf
push
pop
jmp
or
inc
stos
jne
xchg
adc
mov
mov
pop
push
sbb
mov
jg
dec
xchg
and
dec
loop
adc
or
mov
push
xchg
loope
lods
popa
xchg
inc
add
jnp
mov
cs
pop
xor
lods
dec
popa
lcall
push
add
inc
push
lret
mov
cmp
xorb
orb
rclb
xor
test
mov
repz
outsl
mov
pop
fwait
or
add
cwtl
stc
int
setle
mov
jecxz
mov
xor
or
or
arpl
call
sbb
add
xor
xor
loopne
cld
or
pop
add
add
add
lds
and
adc
gs
pusha
mov
addr16
in
rcll
xchg
mov
push
adc
outsb
scas
sub
sti
scas
leave
jo
jno
cld
imul
loop
mov
cmp
sbb
mov
mov
cmp
add
lods
mov
add
add
outsb
sub
add
adc
andb
xor
sub
jnp
sbb
adc
leave
jmp
add
cmp
sbb
call
sub
addb
pop
sbb
test
test
adc
push
sub
xor
inc
shlb
popf
gs
cmpsb
ja
das
cmc
andb
mov
lret
and
push
xchg
or
aaa
push
mov
ror
fisubl
mov
dec
cmp
scas
push
sbb
filds
dec
adc
mov
dec
dec
jne
fistl
xchg
add
and
scas
js
aad
std
add
or
xchg
jg
popa
xchg
aaa
int3
fistpl
pop
testb
fistpll
pop
mov
inc
lahf
or
test
mov
cmp
into
xchg
sti
aaa
sub
xchg
xor
cld
bound
mov
insl
aaa
insl
jmp
cmp
push
pop
sbb
mov
mov
jbe
jns
mov
fsubs
sbb
mov
daa
sub
adc
fnsave
sub
mov
clc
aaa
mov
or
cbtw
setnp
negb
pop
gs
mov
cli
pop
mov
ret
push
inc
ret
decl
jae
lahf
mov
fwait
xor
dec
jo
dec
lret
enter
push
push
scas
sub
incl
outsb
pop
mov
inc
fistpl
push
cmpsb
mov
pop
pop
pop
pop
pop
lahf
dec
loope
sarl
jge
mov
or
insl
adc
fst
xchg
les
shl
pop
les
cld
jnp
cmpsb
push
ds
jbe
jbe
fldt
jg
sbb
shlb
jbe
cmp
and
xor
or
scas
xchg
out
inc
in
xchg
insb
and
loopne
pop
imulb
addr16
inc
xchg
jo
pop
in
leave
xchg
jg
cltd
imul
xor
aad
add
enter
push
jnp
pusha
mov
scas
inc
xchg
lwpval
add
dec
or
inc
xor
sbb
das
inc
dec
leave
ret
ret
xchg
or
push
pop
in
gs
out
and
push
or
inc
mov
fidivrl
xchg
adc
sub
es
outsl
cltd
push
push
add
call
inc
inc
dec
and
loop
int3
in
mov
push
cmpsl
popa
push
ret
lret
cli
or
pop
inc
sbb
cld
dec
scas
pop
xor
icebp
push
sub
lcall
pop
or
aaa
imul
lock
push
adc
cli
or
hlt
xor
sarb
inc
mov
add
insl
call
rcll
lods
negl
cmp
jmp
jg
outsb
scas
inc
cld
icebp
push
fs
mov
test
lea
mov
and
and
or
aad
push
vpackssdw
mov
gs
or
add
insb
mov
inc
pop
cmpsb
xchg
and
cli
lret
in
inc
push
inc
adc
icebp
lds
mov
inc
push
jnp
orb
mov
fisttpl
xor
dec
sbb
cmp
imul
jl
mov
aad
jle
adc
pusha
xorb
pop
cmp
outsl
fisttps
mov
and
adc
add
dec
xchg
in
jae
xor
jns
mov
adc
jmp
add
inc
dec
loope
add
sti
sub
sbb
push
adc
pop
cmp
pop
push
mulb
outsl
lods
adc
mov
sbb
jg
aam
sar
mov
jg
fwait
je
rcrl
aad
pop
sbbl
lock
mov
mov
cmpsb
je
adc
sub
lds
js
sbbl
mov
push
mov
aad
mov
ret
pop
loopne
inc
popa
mov
push
icebp
and
int
outsl
adc
push
rolb
dec
stos
sub
push
inc
mov
pop
bound
mov
cli
sub
mov
add
sahf
ljmp
jmp
sbb
xor
adc
sbb
mov
test
and
decb
push
sar
pusha
cmp
mov
xchg
sub
es
push
cmp
and
push
sub
add
mov
pop
inc
xchg
add
andb
mov
pop
inc
das
insl
push
inc
mov
push
mov
out
imul
aad
jne
addr16
sbb
shlb
or
aam
call
add
dec
and
shlb
lods
bound
jecxz
sbb
and
pushl
pop
test
push
in
dec
insb
clc
dec
inc
cmpsb
pop
or
pusha
lret
mov
xchg
mov
sbb
scas
div
or
scas
mov
adc
fucomp
aas
jecxz
jp
lahf
sbb
insb
dec
mov
add
or
jle
add
repz
aad
aam
fsubl
mov
fldenv
ffreep
add
insb
mov
adc
xor
add
pop
sbbb
test
sbb
add
add
jecxz
mov
sbbb
pop
enter
mov
cmp
movsb
or
mov
lret
insl
mov
stos
push
mov
push
adc
and
xchg
jo
dec
pushf
test
add
in
mov
shr
jo
idivb
jge
pop
shlb
nop
cmp
jo
out
push
cmc
mov
stos
ljmp
push
out
mov
mov
xor
jmp
jecxz
cmp
rolb
leave
mov
ljmp
mov
leave
addr16
add
cs
pop
sbb
push
pop
popa
neg
cltd
popf
enter
mov
das
in
or
mov
data16
xorl
test
loopne
sbb
mov
testb
jae
mov
add
pop
pushf
out
or
test
loopne
xchg
fcompp
push
mov
push
xor
fcmovnu
mov
pop
cwtl
clc
fbstp
out
subb
sti
idivb
out
mov
test
movsb
mov
xor
and
insl
ret
fs
bswap
aas
mov
push
idivb
test
sbb
mov
mov
mov
xchg
jns
xlat
xchg
or
ret
insl
rcrb
xchg
shlb
mov
or
repz
or
xchg
lcall
mov
mov
jp
sbb
flds
dec
pop
lcall
mov
cmp
outsl
pop
and
sbb
call
inc
js
xchg
test
pushf
std
ja
inc
and
adcb
aas
lea
adcb
mov
mov
pop
pop
push
xchg
mov
clc
sbb
push
int
into
movsl
push
jns
mov
push
pop
lock
and
clc
xorb
dec
test
sahf
in
inc
xor
sbb
push
adc
mov
jbe
jae
sbb
out
mov
fdivs
js
mov
in
fcmovnu
std
test
push
adc
orl
fidivrl
sbb
aas
sti
pop
dec
or
pop
xchg
jl
mov
rcrl
mov
jmp
lods
xchg
mov
ja
and
jg
inc
out
jb
or
adc
das
in
repnz
xor
test
xor
push
mov
std
mov
xchg
xlat
sub
ret
cmp
add
mov
repz
scas
test
add
or
jbe
mov
or
ret
fdivl
sti
int3
jl
pop
fbstp
mov
xor
leave
out
das
ljmp
incl
xchg
adc
xchg
push
ss
adc
cld
xchg
adcl
popa
into
jne
or
or
das
mov
xchg
pop
aas
xor
adc
icebp
push
mov
cmc
inc
pop
ret
idivb
int
roll
xchg
xor
pop
mov
adcb
nop
cmpsl
pop
incb
fcmovnbe
pop
dec
outsl
inc
movsl
xor
push
cmp
or
mov
jmp
dec
pop
jecxz
mov
add
setae
dec
or
aaa
ss
mov
flds
bound
std
xchg
and
test
inc
cmc
add
inc
sub
push
pop
test
inc
fldenv
sbb
sub
pop
movb
adc
fbstp
add
pop
fnstcw
xchg
push
imul
test
shll
xor
mov
jle
jnp
repnz
stos
mov
pushf
mov
jecxz
jmp
inc
mov
xchg
in
loop
mov
ret
and
fisubl
dec
lea
lock
je
mov
cmpsb
jg
cmp
cmpsb
sti
inc
ss
incb
or
test
or
adc
push
incb
xor
rorl
pop
js
pop
mov
cld
jb
sub
out
fidivl
inc
stos
adc
sub
std
jg
loop
pushf
push
aad
mov
sbb
lret
mov
rolb
push
in
nop
iret
adc
xchg
mov
cmpsb
or
jecxz
jl
or
fcomps
jae
cmp
into
push
popa
mov
aam
ffree
xor
inc
xor
shll
pop
xchg
pop
js
pop
cli
cmp
imul
rcrb
dec
aas
push
jecxz
in
pop
xor
jecxz
xchg
push
or
repz
xchg
pop
js
dec
js
arpl
fcompl
inc
movsl
jecxz
lods
sbb
inc
jl
xchg
out
push
dec
mov
inc
push
dec
pop
orb
cmp
sti
in
lcall
jl
out
faddl
cld
jbe
jp
mov
pop
jb
or
sarl
test
out
dec
icebp
test
sarl
pop
jl
mov
pop
fisubrs
inc
out
jns
mov
cmp
lods
lods
lcall
outsb
cmpsl
sbb
mov
pop
or
add
imul
dec
fmull
orb
push
sbb
mov
pop
lock
xchg
jno
mov
dec
jne
pop
loop
out
sarl
cmp
lock
lods
jne
dec
cli
adc
pop
inc
dec
andb
and
mov
push
fwait
jg
incb
bound
sub
adcl
jne
leave
sub
xchg
or
hlt
mov
push
icebp
lea
pop
inc
ljmp
xor
call
fcomps
xor
mov
cmpsb
out
mov
adc
and
and
stos
clc
stos
mov
xor
inc
in
arpl
xchg
jecxz
stos
jcxz
xor
in
adc
addb
aam
push
repnz
loop
mov
aaa
mov
add
pop
in
call
inc
aas
pop
jmp
pushf
sbb
and
mov
fisubl
mov
fisubl
mov
mov
jmp
and
pusha
push
xor
aam
aas
data16
pop
or
hlt
push
cld
and
xor
out
push
arpl
push
mov
xlat
cwtl
je
scas
or
lds
mov
shll
xor
sub
sbb
xor
jo
cmp
ja
lock
sub
xor
call
and
in
fildl
sar
ljmp
push
jnp
jns
repz
popa
cmp
lret
jecxz
jnp
lret
inc
aam
add
adc
lret
push
clc
xchg
mov
sub
bnd
mov
sub
and
loop
test
inc
scas
mov
adc
icebp
add
sarb
cmc
mov
mov
test
and
sub
adc
sarb
adc
and
add
add
arpl
push
iret
aas
sub
imul
ja
in
sub
inc
mov
mov
adc
mov
push
push
or
test
clc
adc
dec
das
xor
jbe
sub
sahf
and
cwtl
scas
ret
sbb
es
push
insl
or
cmpl
ret
fdiv
inc
add
adc
scas
sahf
insl
xchg
cld
sbb
xchg
ljmp
mov
in
in
dec
jno
movsb
lahf
sbb
lret
sub
xchg
add
adc
push
negl
sub
aas
sbb
mov
cmp
and
inc
xchg
or
sbbl
dec
jae
ret
hlt
pusha
push
push
in
popa
add
sti
shlb
xchg
mov
add
or
icebp
data16
jo
mov
fisubl
shlb
ss
out
outsl
in
mov
xor
iret
out
repnz
rorb
test
pushf
ja
cmpsb
add
js
cmpsl
test
sub
sbb
rorl
lock
jmp
xchg
stos
imul
leave
hlt
aas
push
or
not
push
xor
fcmovnb
mov
push
pop
adc
ret
pop
in
push
pop
fadds
sub
mov
lods
cmp
dec
js
in
fildl
in
pop
mov
shll
xchg
dec
or
pop
mov
adc
pop
jp
into
and
out
test
and
lds
inc
int
ljmp
sbb
fdivrl
ficomps
aad
xor
lods
cld
jg
lcall
leave
inc
and
daa
push
adc
adc
jno
xchg
out
int3
fstl
inc
cli
loop
inc
mov
xor
in
and
push
clc
fimuls
push
and
popf
sbb
fsubr
lods
inc
dec
push
stos
mov
call
and
mov
xor
imul
dec
aaa
sub
add
or
push
push
rcll
sub
and
fs
rolb
xorb
xor
popl
mov
sbb
das
and
cwtl
test
outsb
rolb
call
or
fmull
lea
push
push
rcrl
add
inc
cmp
cmpsb
stc
xchg
incb
add
mov
xchg
xchg
or
rcrl
test
mov
hlt
xchg
dec
shlb
dec
fdivrs
call
loopne
jo
dec
das
push
cld
and
jnp
push
push
ja
ret
inc
into
je
and
pop
imul
xchg
je
dec
adc
xchg
mov
sbb
inc
orl
out
aad
xor
stos
add
shlb
or
jbe
inc
test
loopne
dec
jo
sbb
adc
cwtl
mov
push
sub
mov
jl
adc
js
arpl
cmp
lods
enter
xchg
daa
xchg
sbbb
or
mov
das
dec
hlt
inc
cmp
ljmp
adc
cld
stos
or
inc
adc
dec
je
imul
and
cmp
addr16
cmp
and
xor
inc
adc
cmp
aaa
inc
test
jg
and
sbb
push
test
mov
pop
loop
fnstenv
ret
aas
ljmp
add
andl
sub
ret
stos
push
jne
jmp
cmp
xlat
pop
xlat
xor
shrl
clc
mov
aam
adc
add
inc
adc
xchg
push
hlt
cmp
sti
jns
popf
inc
xchg
and
dec
mov
mov
inc
sbb
xor
fcomps
popa
cld
and
xor
inc
and
ret
inc
or
flds
shr
xchg
cli
scas
inc
adc
data16
adc
jge
mov
cmp
mov
cmp
in
test
jbe
jo
ret
jl
or
mov
ret
push
pusha
leave
gs
dec
shll
pop
into
pop
enter
add
jne
icebp
pop
test
jmp
mov
out
xchg
push
add
adc
pusha
push
pop
mov
out
or
inc
adc
add
mov
in
xor
or
popa
cmp
xchg
ret
mov
inc
cli
ja
adc
jnp
add
inc
xor
cmp
cmp
adc
xchg
mov
sbb
test
cmp
sbb
out
sub
fcmovu
loope
out
scas
fs
enter
aam
rclb
les
aam
js
icebp
das
jne
das
dec
addr16
cld
or
fisubs
rol
inc
int
jle
sbb
pop
jnp
inc
fwait
sub
adc
jne
or
int3
ss
and
shrl
cs
aad
ljmp
loopne
jb
into
adc
mov
add
cmpl
scas
loop
clc
cld
lds
push
inc
lahf
imul
bound
fadd
andl
repz
adc
cmp
fnstcw
add
adc
int
aam
xor
jne
in
jmp
call
dec
cmc
lods
loopne
push
and
mov
cli
jno
adc
aas
xor
pushf
outsl
insb
push
ficomps
mov
push
xor
mov
outsb
shlb
or
cli
push
movsl
pop
dec
ds
iret
jns
daa
cmpsb
jle
sub
sar
test
push
push
out
or
sbb
gs
scas
jno
sub
test
mov
xchg
sbb
jb
in
arpl
xor
mov
aas
stos
js
rorb
cltd
and
pop
jmp
sub
mulb
xor
int
inc
repz
cmc
adc
pop
inc
mov
cld
pop
aaa
andb
cmp
int
int3
lock
jge
cli
test
adc
xchg
fwait
mov
sub
pop
imul
pop
mov
ret
rcrl
pop
cltd
insl
test
dec
loope
push
outsl
addb
add
js
pop
sbb
inc
shlb
dec
inc
scas
inc
or
xor
sub
sub
or
loopne
sbbb
out
loopne
rcrl
inc
daa
sub
sbb
iret
sbb
outsl
cmpsl
xor
shlb
out
add
jmp
cmc
pop
xor
nop
add
inc
sbb
or
gs
jb
in
xor
xchg
ljmp
adc
orb
mov
in
sub
and
fimuls
dec
add
daa
jnp
mov
movsl
adc
xchg
mov
fneni(8087
or
je
andl
inc
in
xor
dec
mov
out
adc
add
add
pop
inc
loopne
inc
push
faddl
loopne
fsubl
sbb
roll
int3
loope
inc
jge
test
push
aaa
xor
add
xchg
aam
clc
pop
xchg
and
push
fcmovnb
and
inc
inc
sbb
add
sti
arpl
push
dec
xor
dec
xor
pop
push
pushf
pop
inc
pop
cmpsl
jp
loopne
xchg
imul
jo
das
hlt
sbb
jecxz
pop
push
test
dec
push
push
cli
ljmp
xchg
or
jo
cmp
push
mov
add
sub
add
xchg
mov
sub
in
jp
push
shll
and
mov
xor
or
fbld
lret
sub
xchg
inc
dec
mov
lret
add
cwtl
add
ljmp
xor
xor
push
add
je
dec
or
push
aaa
add
icebp
xorl
jg
filds
cld
fs
jg
and
cmp
mov
dec
add
rol
sar
outsl
jg
inc
push
add
cmpsb
mov
pop
bound
add
cli
aaa
cli
div
jbe
mov
xchg
mov
pop
add
sbb
ss
iret
mov
jge
lock
pop
notl
or
mov
push
cmp
mov
subb
incl
sub
stos
scas
mov
aas
mov
repz
idivb
pop
add
adc
ds
push
xor
mov
mov
lods
cmp
sbb
xor
xchg
mov
and
arpl
ja
mov
loopne
ljmp
cmp
sub
xor
sub
adc
clc
add
adc
pushf
add
mov
jno
lahf
cmp
pusha
pop
movsl
negb
jno
test
pop
push
add
cmp
clc
xor
iret
mov
sub
leave
pushw
pop
stc
in
lcall
pop
sub
sub
mov
or
xchg
shll
jmp
int
or
lds
call
rol
std
fs
or
aam
dec
and
mov
movsb
fisubl
test
loopne
sbbl
pop
daa
inc
add
cmpsb
ret
push
psubb
jo
xchg
loopne
pop
mov
ljmp
and
ds
addb
cwtl
roll
push
adc
daa
mov
les
sub
ret
inc
and
or
out
inc
les
or
xor
push
mov
int
insl
xor
and
jg
fsubl
stos
orb
and
add
push
push
jp
repz
movsl
dec
mov
mov
sti
add
popa
add
mov
int3
popf
aam
stc
add
fwait
push
sti
shll
push
int3
mov
dec
sarb
inc
mov
adc
jmp
sbb
das
xor
je
dec
dec
sti
pushf
jne
aas
or
out
jno
bound
mov
stos
pop
int3
adc
sahf
or
pop
adc
ret
fwait
lock
mov
add
dec
xor
dec
insb
lock
in
add
xchg
mov
lcall
sbb
xchg
mov
or
jo
xchg
jmp
mov
cmp
out
int3
fs
adc
push
pop
push
mov
adc
pusha
rolb
xchg
enter
test
xor
xchg
add
add
inc
cmp
pop
lods
dec
mov
cli
cli
rcrb
or
add
or
inc
jne
fisttpll
mov
mov
fistpll
cmp
lea
add
aam
fstl
icebp
roll
out
cmp
and
pop
push
test
lock
adc
mov
lods
mov
andb
or
pop
or
adc
fcomp
adc
addr16
fadds
shlb
stos
mov
adc
fsubrl
les
xchg
jnp
and
call
in
xchg
add
adcb
sbb
cmp
adc
sub
negl
inc
mov
sbbb
sbb
cmc
test
sub
add
or
mov
pop
and
into
or
shlb
push
inc
pop
push
dec
cwtl
fadds
invd
ja
mov
sub
xorb
mov
inc
and
inc
add
rcr
les
inc
cmp
shlb
pop
fmuls
jmp
rclb
sub
fwait
cmp
movsl
insl
push
jle
test
mov
popf
xor
xor
and
add
dec
cld
aam
and
or
pop
xchg
xchg
jae
jmp
frstor
sub
dec
leave
fwait
xchg
sbb
lea
mov
push
bnd
test
add
shl
ds
jmp
and
aam
iret
xchg
leave
sbb
xchg
mov
mov
loopne
pop
fiaddl
fwait
je
cld
push
fidivs
inc
cld
aaa
sub
mov
int3
or
mov
sarb
and
mov
sbbb
loop
loopne
sbb
cs
adc
xchg
popfw
loope
xor
jg
push
jbe
dec
rolb
mov
add
mov
loop
push
repz
idivl
loop
xor
shrb
sahf
adc
and
add
jne
shr
dec
xchg
lods
mov
and
pop
outsl
cs
jae
and
fstps
mov
adc
jns
adc
xor
pop
mov
xlat
add
jnp
or
jp
popa
ss
mov
clc
push
add
dec
and
jbe
out
or
fiaddl
clc
out
pop
adc
popf
repnz
bound
dec
sbb
mov
sub
mov
pusha
add
or
adcl
add
mov
sbb
push
shl
je
cmp
xchg
cmp
adcb
inc
add
sub
push
inc
push
outsb
cs
and
mov
pop
xor
pop
popf
stc
dec
mov
sbb
stc
fdiv
adc
or
dec
pop
fwait
push
mov
or
ss
testl
mov
ror
jecxz
rcrb
rcll
mov
std
insl
aaa
mov
push
out
pop
xchg
faddl
lock
inc
out
push
adc
fstps
rcl
xor
or
clc
mov
mov
orl
adc
daa
lock
mov
or
sub
push
xchg
aas
movsb
das
repnz
addr16
xor
dec
mov
add
fcmovnbe
popa
add
in
sti
pop
pop
xor
jbe
lock
call
pop
jne
stos
dec
xor
cmp
inc
repz
in
sub
jno
aam
repnz
inc
dec
cmp
jmp
sbb
or
mov
inc
mov
lock
call
or
dec
lods
fists
mov
or
ds
dec
dec
or
mov
fcomp
rolb
sub
push
hlt
call
ljmp
dec
cmp
data16
add
in
pushf
imul
pop
ljmp
xor
lds
inc
icebp
or
inc
andb
add
add
cmp
lock
and
push
xchg
ljmp
and
jno
xchg
sarb
sbb
pop
aam
shlb
pop
dec
push
xchg
icebp
andb
xor
fndisi(8087
testl
cmpb
inc
inc
push
ret
addr16
arpl
in
in
test
repnz
sahf
out
add
and
test
lock
push
jo
into
cld
sub
scas
es
adc
ret
scas
cld
add
into
inc
cld
lea
push
mov
add
add
pusha
sub
les
fbld
jbe
in
shlb
mov
inc
shrl
add
cli
loopne
call
inc
or
fsubs
rcl
bound
push
or
cmp
lea
xor
jl
mov
dec
add
in
sbb
mov
and
or
inc
push
rorl
rolb
cmp
jmp
popf
xor
loopne
sbb
push
cwtl
push
and
rorl
or
add
add
or
add
mov
je
ret
sbb
mov
or
bound
xor
and
ss
pop
add
lret
add
loope
inc
jg
mov
add
push
mov
iret
inc
add
ds
sub
jae
rolb
push
sbb
ret
outsb
rcrb
icebp
addr16
std
nop
les
std
inc
dec
shll
pop
mov
js
cltd
pop
call
insw
jmp
out
jne
rclb
pop
test
dec
les
mov
imul
or
or
push
out
insb
aam
dec
and
ss
lret
jno
bnd
fdiv
push
pop
xchg
outsl
les
pop
sbb
dec
adc
icebp
cmpsl
andb
sub
jecxz
sbb
mov
jge
jmp
sbb
ret
lds
mov
loope
jecxz
rclb
or
sbb
jbe
cmp
ja
or
out
imul
repnz
jmp
test
test
movsl
mov
ficoms
std
movb
add
sub
pusha
lcall
sbb
dec
lock
and
xor
ljmp
sub
loop
push
sub
fistl
dec
lock
cmp
sbbb
inc
test
push
mov
sbb
aad
loop
inc
pop
sub
or
push
push
xchg
or
les
in
pop
clc
and
shrl
pop
in
sub
add
test
sarb
xchg
popf
pop
add
inc
jae
cltd
sub
cld
push
and
outsl
scas
xchg
call
xchg
rolb
shl
cs
mov
repz
jge
cld
fldt
rcrb
jge
pop
fadd
mov
xchg
push
add
ret
subps
mov
xlat
cli
and
pop
and
and
out
mov
mov
outsb
cs
je
lods
lcall
popa
dec
rcrl
dec
cmpsb
cmp
sbb
out
dec
cld
out
inc
xor
js
adc
stos
sti
aaa
mov
xchg
adc
dec
sub
jle
lret
adc
push
push
outsl
fists
fists
cwtl
mov
test
add
adc
jecxz
insb
arpl
and
add
ret
inc
mov
and
mov
sar
cld
rep
clc
jmp
inc
lods
or
loop
mov
dec
in
cmp
mov
and
out
pop
in
inc
sbb
lds
daa
scas
jl
mov
das
push
inc
aas
add
stc
adc
xor
icebp
in
jg
repz
inc
test
andb
outsl
adc
icebp
dec
fisttpl
shrb
icebp
add
xchg
data16
xlat
andb
add
or
cmpsb
int3
sbb
adc
hlt
add
push
out
test
lret
movb
adc
inc
or
push
or
lcall
bound
mov
xchg
mov
mov
lret
push
mov
sub
cmpl
test
aad
adc
mov
test
popf
lcall
cmc
loopne
pop
mov
nop
movsb
sti
aas
es
test
outsb
outsl
pop
decb
loopne
sub
sbbb
push
js
mov
mov
jo
add
and
push
xlat
xchg
or
or
adc
idiv
lea
adc
ja
data16
jg
mov
cmp
shrb
popa
or
add
add
dec
mov
hlt
arpl
mov
outsl
cs
inc
xor
and
cmp
sbb
clc
or
adc
cltd
inc
cmp
ficompl
ljmp
sub
add
sub
lods
shll
sarb
int3
mov
add
ret
xchg
xchg
sbb
cld
sbb
test
jl
inc
lock
mov
mov
jecxz
adc
mov
inc
pop
fldl
es
insl
xor
das
ds
sbb
add
dec
jmp
jecxz
imul
pop
jbe
jmp
pop
shll
int3
mov
cmc
jg
jmp
aam
jb
insb
jae
push
add
shll
shlb
push
test
pop
mov
les
mov
mov
adc
inc
mov
xor
sbb
in
xchg
setne
rcrb
dec
into
jg
push
jno
out
mov
mov
ss
sahf
inc
nop
jnp
subl
pop
clc
fistl
nop
cmp
mov
and
outsl
or
les
mov
cld
fsubs
stos
mov
add
outsl
cmp
mov
mov
sti
shlb
outsb
cld
xchg
mov
and
iret
mov
push
out
cmpsb
aas
rorb
add
sbb
jb
ljmp
sub
test
pop
sbb
adc
sbb
mov
xor
xchg
push
jge
sbb
jl
call
mov
add
clc
jo
fisubrl
cmpl
shrb
xchg
clc
xor
cmp
fstpl
adc
and
add
pop
mov
xor
dec
adc
push
mov
sbbl
sbb
adc
cmp
ljmp
les
or
setp
sub
mov
rolb
add
mov
push
fisubrl
cmp
faddl
inc
jae
push
and
daa
aad
mov
or
faddl
xor
add
std
fdiv
pop
cwtl
lods
adc
sub
mov
or
adc
adc
mov
lahf
mov
jnp
pop
xchg
inc
mov
data16
int3
mov
cmp
pop
cld
jbe
jnp
sbb
and
or
push
nop
xor
lcall
dec
mov
jo
lahf
and
aas
sbb
mov
push
sub
outsb
add
ret
xor
mov
xor
dec
lea
inc
push
daa
popf
js
int
jge
sti
jp
inc
pop
sbb
fsubs
sbb
pop
jecxz
and
dec
mov
ds
cmp
inc
push
jecxz
das
push
leave
out
mov
das
dec
add
xchg
push
rcl
and
es
lock
insb
out
out
out
jmp
lds
lahf
dec
pusha
ljmp
or
sub
les
adc
add
cmp
sbb
adc
adc
enter
sub
andb
or
rcll
cmpsb
inc
add
xchg
lret
dec
ds
and
in
lahf
inc
sub
mov
lahf
jmp
aad
cvtpi2ps
add
adcl
add
iret
adc
sbb
repnz
testl
imul
cli
push
ljmp
pop
inc
outsb
cmp
std
ljmp
mov
enter
enter
fiaddl
movsl
jecxz
or
mov
frstor
fmulp
push
sbb
test
jo
xlat
pop
cli
xchg
clc
rorl
out
js
faddl
loope
and
cltd
hlt
or
das
dec
mov
call
jge
jge
aad
ret
call
shll
sbb
lea
pushl
fldenv
pop
mov
repnz
sbb
and
mov
or
out
pop
aas
call
mov
fidivrs
xor
mov
decl
int3
addr16
or
push
int
cld
arpl
mov
pusha
xchg
jne
mov
sbb
push
push
sbb
mov
pushl
cld
add
jl
addb
stos
xor
mov
cmp
in
push
aaa
push
dec
sbb
hlt
add
cli
out
pop
pop
mov
daa
dec
mov
mov
xor
cmp
loop
mov
inc
pop
fwait
gs
hlt
mov
or
mov
incl
mov
dec
cs
dec
sub
outsb
sahf
jle
cli
addb
call
cltd
shrb
and
loopne
movl
test
inc
divb
arpl
or
pop
das
lods
sbb
aam
adc
cmp
inc
sbbl
hlt
mov
adc
mov
push
push
add
mov
pushf
sbb
shlb
cmpl
iret
in
cmp
jbe
inc
inc
pop
sbb
jle
lods
xorl
fadds
and
dec
pop
push
push
sub
jp
js
std
outsl
mov
sbb
sarb
mov
push
sub
lds
inc
xor
pop
ror
jo
cmp
fistps
mov
mov
pop
inc
cmp
scas
shll
xchg
in
xor
or
push
sub
test
sti
sub
icebp
test
daa
xchg
popa
lahf
mov
jle
lcall
xchg
push
jnp
mov
rorl
je
jecxz
in
mov
mov
xchg
and
popa
or
adc
adc
jbe
cmp
subl
and
repz
les
sbb
adc
jle
add
sarb
jns
stc
aam
and
lahf
scas
mov
std
mov
in
enter
mov
rcrb
push
mov
fcoms
push
fmul
jecxz
aad
gs
lret
movsl
and
jbe
ret
cmp
cli
pop
movsl
gs
sbb
lret
cmc
adc
mov
and
xor
add
adc
pop
add
jg
nop
rorb
adc
addb
or
jmp
and
mov
xchg
jo
jmp
inc
add
test
cli
push
je
sarb
arpl
adcl
pusha
call
popf
popf
cmpsl
pop
movsl
lock
lea
sub
sub
jge
or
pop
fsubl
push
push
sar
xlat
bound
jne
push
inc
ljmp
xchg
nop
faddl
adc
pusha
mov
xor
cmp
fisubl
js
in
and
movsl
dec
fisubl
out
leave
xchg
xor
push
cmp
test
leave
loope
es
clc
and
mov
icebp
push
inc
mov
jp
hlt
daa
rolb
pushf
dec
dec
sub
inc
cs
dec
stos
and
cmc
sbb
repnz
xchg
icebp
mov
pop
cmc
push
aam
mov
imul
push
lcall
sbb
lods
xor
pop
shrb
mov
stos
sub
fdivr
mov
mov
call
cmp
fists
xor
inc
inc
push
lahf
sub
xchg
inc
xchg
jne
enter
add
inc
or
adc
add
pop
xor
adc
pop
mov
scas
jl
cwtl
shr
rcl
mov
fsts
add
xor
pop
jle
sbb
push
loop
inc
xchg
pop
popf
lods
pushf
or
xchg
xchg
push
sbb
pusha
jbe
inc
lret
xor
mov
and
sbb
loope
rcl
xchg
fsubs
xorb
adc
cmp
sbb
dec
mov
and
push
clc
and
cs
jmp
lret
dec
sbb
clc
mov
mov
fs
sub
xchg
das
push
jge
inc
insb
in
loopne
add
aaa
testb
xor
ret
andb
jns
test
push
loopne
pop
insb
add
and
vmaxps
sahf
mov
push
shll
scas
shll
fstpl
and
cwtl
add
xchg
sub
jnp
mov
push
outsb
add
loopne
pop
xor
scas
fmuls
sbb
sub
mov
add
enter
mov
sub
inc
push
cmc
fiaddl
scas
aad
insb
mov
loopne
bound
inc
mov
xor
or
and
sar
push
xchg
add
mov
fmuls
orl
test
adc
push
loop
push
daa
add
or
pop
pinsrw
aad
test
call
adc
mov
jnp
mov
lea
orb
icebp
ja
mov
ja
lock
call
inc
sub
jae
jecxz
fsubs
hlt
and
arpl
ds
dec
ret
or
jl
in
jle
test
pop
xor
fwait
cltd
inc
lret
lret
sbb
negb
mov
ret
mov
ret
mov
add
popf
push
rcrl
cli
pop
outsl
out
cwtl
push
cmp
jne
and
mov
adc
or
roll
push
mov
dec
orb
aam
sbb
test
shl
notl
sub
adc
lcall
ljmp
cwtl
jbe
int3
push
adc
jbe
faddl
imul
adc
mov
xor
dec
addl
adc
cmp
xchg
call
in
outsl
fnstsw
cmp
sub
pusha
test
mov
dec
rcr
scas
mov
adc
dec
cwtl
push
fld
subb
stc
pop
push
lcall
mov
pop
and
push
pop
movsl
or
mov
pop
mov
xchg
mov
push
enter
dec
xchg
movsl
sub
adc
sbb
xchg
leave
mov
frstor
sbb
call
fists
in
sbb
cmpsl
mov
ja
adc
mov
fisttpl
sub
jo
lock
cmpl
sbb
xor
test
inc
inc
mov
stos
ljmp
pop
addr16
nop
lods
dec
push
leave
sbb
or
movsb
sbb
xor
jb
ss
xchg
js
mov
call
push
adc
add
lds
fiaddl
add
mov
mov
iret
cmp
lock
stos
scas
add
jno,pn
add
inc
pop
sahf
inc
filds
jbe
dec
mov
dec
push
jp
mov
cmpsl
mov
push
xor
xchg
es
lock
das
adc
out
fnstcw
mov
push
xor
dec
aaa
out
add
or
fiadds
xor
inc
jmp
add
ret
jae
aam
out
jae
imul
pop
movsb
and
sub
dec
ret
ljmp
adc
mov
outsb
or
not
mov
test
sub
push
mov
incb
outsb
sub
ficoml
outsl
cld
or
movsl
mov
pusha
or
rcl
ljmp
cmpsl
xor
push
and
adc
mov
sbb
pop
or
mov
lock
addb
bound
or
ja
inc
sub
add
das
lock
push
out
cltd
test
jnp
sbb
pop
jnp
push
cmp
imul
ret
pop
jmp
or
outsl
inc
dec
popf
leave
std
push
mov
mov
out
adc
mov
ret
push
or
aaa
or
in
push
scas
pop
sbb
cwtl
add
test
or
adc
data16
arpl
in
inc
imul
movsb
insb
loopne
outsl
cld
loopne
lock
movsl
add
mov
jmp
push
or
cmp
xchg
push
mov
jnp
popf
out
in
ss
cli
leave
dec
insl
pop
push
test
out
cmpsl
lcall
pusha
iret
push
mov
jl
or
pop
jmp
adc
push
xlat
mov
cwtl
inc
or
insl
adc
gs
xor
cmovns
jne
dec
add
push
xchg
add
fidivrl
mov
or
add
push
data16
or
lret
xor
and
cmpsl
jno
mov
stc
test
sar
mov
sahf
shrl
sub
icebp
mov
mov
call
loope
push
adc
fucomp
rcll
inc
and
mov
adc
out
push
sub
pop
sbb
push
cs
and
fcmovnbe
clc
fisttps
fsts
xchg
out
xor
xlat
push
push
cmpsb
dec
outsl
icebp
int
pusha
jle
mov
mov
push
popa
mov
push
jmp
int
loope
xchg
leave
aad
add
xor
inc
pop
jg
jg
pop
jg
and
js
fisubl
shr
sbb
fstl
dec
lcall
insl
lcall
repz
and
adc
cmp
jecxz
add
das
sbb
mov
push
or
lods
jb
arpl
ret
call
outsl
cltd
cld
iret
test
xor
inc
pop
cwtl
cld
je
xor
loop
icebp
cmp
leave
rclb
cmp
pushw
xor
push
push
orb
pop
sub
xchg
fidivl
mov
cmp
pop
cmp
mov
push
pop
jmp
sub
cmp
icebp
mov
fdivr
cmc
xor
xor
cld
loopne
outsl
cld
add
jecxz
lret
sub
sbb
clc
test
aaa
pusha
and
call
les
xchg
ret
sbb
xor
mov
lods
aad
cmp
sub
dec
or
test
mov
push
mov
or
imul
sti
mov
jo
jb
test
filds
xor
jle
push
aad
and
mov
scas
cs
insb
xchg
xchg
ret
adc
ficoml
jb
adc
dec
jb
pusha
ficomps
leave
jmp
adc
lea
rcr
fmuls
scas
push
jp
push
push
std
add
clc
fcmovnu
aaa
cmp
sub
adc
push
loopne
sti
jp
fwait
repz
mov
scas
push
sub
pop
andl
aam
pop
pop
mov
inc
pop
jae
and
stos
arpl
mov
subb
xchg
pop
int3
pop
or
jge
sbb
pop
pushl
cmp
jns
sbb
inc
push
ffreep
cmpsb
dec
cltd
sbb
sub
test
mov
ja
ret
and
sub
mov
clc
mov
ss
sub
xor
mov
movsl
jb
push
mov
insl
sti
loopne
jge
inc
dec
add
das
sub
xor
fdivs
push
hlt
ss
xor
ret
jg
cmp
xor
push
mov
mov
shrl
sbb
and
les
xchg
mov
pusha
loope
std
sti
add
test
ljmp
inc
das
ja
hlt
repnz
std
ljmp
pop
gs
pop
sbb
dec
jb
mov
or
add
outsb
sbb
pop
mov
aas
push
adc
add
out
rorl
add
or
repz
cmc
or
inc
icebp
popa
xor
rclb
dec
daa
and
sub
adc
cmp
test
decl
mov
add
push
arpl
sbb
mov
ret
pushf
subl
xchg
pusha
pop
add
mov
add
jl
or
cmp
lea
dec
push
jmp
testb
add
std
outsl
sbb
in
jb
insl
xchg
test
lahf
mov
push
nop
push
ljmp
ret
stos
mov
loop
jne
jmp
pushf
pusha
mov
cmp
int
mov
cmp
shrl
inc
jb
add
mov
test
mov
push
ja,pn
cs
and
fdivs
adc
rorb
adc
mov
mov
aaa
and
adc
sbb
idivb
das
fst
insb
lock
inc
xchg
push
fildl
rolb
sbb
or
sahf
add
stos
dec
xchg
push
and
stos
fimull
mov
cmp
pop
sbb
bound
mov
inc
lods
mov
pop
mov
xorl
cmp
xor
xchg
into
add
into
scas
xor
add
sbb
pop
mov
push
lods
lea
adc
out
adc
cmp
ljmp
sub
xlat
movsb
jp
xor
in
xor
adc
shlb
fstpt
jb
cmc
jecxz
pop
or
mov
test
sub
inc
mov
adc
dec
insl
pop
call
in
mov
addr16
or
add
cmpsl
dec
mov
inc
jno
into
ljmp
dec
and
in
adc
or
xor
call
and
lock
cmpb
insl
push
outsb
push
std
dec
shlb
push
lock
or
inc
fwait
sbbb
xor
jbe
push
add
push
xchg
sahf
jbe
sbb
ss
or
cmp
mov
add
xor
and
inc
or
aas
addb
sbbb
ret
sbb
push
adc
jbe
cmp
push
mov
sbb
mov
jo
or
jne
pop
xor
xchg
lds
xor
sbb
inc
adc
add
ret
push
mov
rorl
cld
and
addl
adc
add
ret
movsb
ja
hlt
aaa
rorb
in
out
imul
fnstsw
mov
lea
je
std
push
fcoml
mov
add
push
mulb
das
ja
int
add
mov
sub
mov
dec
nop
icebp
fcoml
int
jmp
jge
adc
sti
fistps
popa
dec
sub
add
fcomip
inc
push
andb
aas
sbb
std
pop
test
call
imul
fsts
inc
adc
sub
xor
pop
ficoml
dec
shlb
and
lea
sub
dec
nop
jle
xor
mov
jae
mov
add
stos
adc
jp
das
adc
inc
stc
test
xchg
mov
or
xor
mov
mov
xor
call
sti
inc
xchg
stc
xchg
sub
mov
inc
sub
inc
sub
mov
adc
aaa
pop
addr16
push
add
aam
shl
xchg
cmp
pushl
imul
or
ret
xor
test
add
outsl
icebp
jbe
adc
nop
sti
and
fstl
jmp
sbb
push
xchg
xchg
add
xchg
ljmp
jecxz
rol
shrb
or
sbb
pop
mov
mov
into
inc
mov
jmp
les
or
adc
inc
jecxz
fstpt
mov
icebp
xchg
jp
push
pusha
pop
shr
es
push
mov
nop
or
push
or
imul
popf
add
les
fneni(8087
incl
push
jae
mov
pop
adc
loop
lods
xor
sbb
add
inc
adcl
sub
scas
mov
inc
fldcw
lahf
cld
pop
mov
jg
es
imul
jne
sbb
lret
cmp
xor
add
xlat
lret
in
mov
and
dec
pop
add
dec
pop
or
movsb
dec
pusha
aam
fbld
xor
loope
push
fwait
dec
sub
sbb
movsl
mov
jb
mov
sar
hlt
add
fmull
sub
faddl
and
add
mov
nop
lahf
add
out
add
and
adc
mov
js
out
adc
stos
pop
lock
adc
es
sbb
inc
pop
cmp
nop
push
int3
inc
xor
movsb
mov
shll
adc
or
inc
mov
dec
mov
xchg
negl
inc
dec
stc
or
xchg
adc
pop
sarl
fildl
push
pusha
and
cmp
shrb
mov
cmp
movsb
test
or
or
ljmp
movsb
fsubr
dec
hlt
pop
jnp
ret
jecxz
add
sbb
scas
sub
dec
pop
lods
fldt
sub
add
repz
cld
loope
inc
loopne
inc
ffree
push
imul
jecxz
fildll
jp
pop
enter
popa
or
or
cmp
cmp
pop
jg
mov
imul
pop
loopne
push
shll
xor
jo
or
and
movsl
lock
push
aaa
fadd
adc
rolb
mov
adc
data16
stc
xchg
push
push
loope
cmp
loop
add
daa
and
jns
sbb
jo
xor
dec
lock
xor
push
jo
inc
and
test
pop
insb
xchg
fdivrl
aas
in
xchg
inc
sub
addr16
mov
in
pusha
or
pushf
sbb
popf
outsl
mov
adc
inc
movsb
jecxz
bound
inc
sbb
push
dec
pop
jecxz
adc
adc
fwait
sbb
inc
mov
xor
sbb
add
dec
addb
add
loopne
push
notl
movsl
sub
sbb
paddd
insb
jno
inc
pop
mov
and
cltd
mov
xor
add
popf
test
icebp
jb
test
call
xchg
adc
fwait
jp
mov
push
fistpll
or
lods
bound
call
mov
scas
pop
or
popl
clc
xor
clc
fs
fucomp
mov
cli
jbe
or
xor
insb
dec
mov
jmp
icebp
pop
adc
push
add
ffreep
out
sarb
or
jg
pop
imul
std
pop
pop
dec
addr16
mov
fcmovbe
cmp
bound
fimuls
or
aas
shlb
pop
in
and
out
scas
stc
mov
imul
incl
add
mov
inc
scas
lock
repz
cmpsl
lock
jbe
gs
aaa
in
mov
rcll
das
add
rcl
jnp
mov
incb
out
idivb
lods
pusha
jg
lock
xor
adc
pop
icebp
imul
incl
dec
or
add
fnstcw
pcmpeqw
sbb
or
lods
outsb
lock
pop
imul
cwtl
clc
jbe
lods
movsl
fcmovnbe
data16
adc
movsl
push
and
cmp
data16
push
jle
aam
push
cld
xor
jp
mov
bound
es
mov
ljmp
test
jge
lock
add
adc
add
pop
shrb
ds
and
insl
inc
mov
jge
ret
sub
repnz
pop
push
or
jg
test
add
stos
cmc
enter
scas
dec
jge
mov
xchg
push
mov
clc
xchg
fiadds
popa
push
mov
ljmp
ss
ret
out
loopne
mov
push
dec
imul
loopne
and
aaa
jno
dec
dec
sbb
js
dec
in
push
sbb
jg
std
aaa
nop
dec
inc
mov
adcl
cltd
loopne
pop
sub
repnz
rorb
sbb
mov
sbbb
aad
outsl
adc
sahf
nop
js
add
daa
insb
inc
aaa
push
fwait
xor
aas
inc
mov
ljmp
loopne
xlat
jno
cli
mov
mov
popf
adc
adc
aaa
out
sahf
adc
out
dec
jg
add
xor
mov
xor
in
sub
pop
xor
js
jl
push
push
rcl
dec
pop
mov
add
inc
cmp
inc
and
adc
loopne
add
jb
roll
and
insb
pusha
inc
test
jb
test
pop
cs
adc
dec
cltd
push
mov
mov
popf
test
leave
add
test
scas
pop
scas
shlb
stos
in
add
subl
and
and
adc
dec
jno
xchg
das
iret
push
shlb
sub
cmp
dec
push
cltd
cmpsb
das
dec
inc
lods
ljmp
or
mov
addb
cwtl
inc
pusha
adc
push
inc
pusha
pop
pop
inc
adc
fldenv
adc
loop
pop
mov
inc
push
fimuls
mov
test
adc
icebp
repz
xchg
inc
xor
test
shrb
cmp
nop
scas
cld
jno
or
inc
inc
clc
cmp
xor
sub
std
insl
push
inc
test
ss
xor
inc
loopne
arpl
sub
shlb
xchg
xor
test
mov
pop
sbbb
rclb
mov
bnd
pop
pop
or
push
ret
pop
sbb
jo
xchg
or
or
sub
push
lods
sbb
lea
rcll
imul
pop
aam
loope
pushf
adc
add
sbb
cwtl
push
sbb
stos
and
dec
insb
xchg
loopne
pushf
jge
push
mov
xor
dec
jo
loop
repz
push
xchg
test
test
adc
mov
or
enter
and
icebp
lds
sbbl
inc
push
rorb
test
popa
incb
dec
lock
mov
xor
in
pop
lea
xorl
pop
inc
and
test
and
lods
and
movsb
or
test
mov
jg
adc
jbe
sub
dec
cltd
loopne
pop
dec
fld
lods
add
add
jne
dec
fmul
sub
and
lcall
add
mov
cmpsl
add
rcrl
ds
popa
popa
hlt
movsl
xor
test
push
jo
xchg
add
or
sarl
or
rcrl
inc
icebp
test
fsubrl
dec
das
je
cs
push
lret
addb
pop
lock
ljmp
shll
fwait
mov
addl
push
or
xor
mov
push
fbld
pop
loop
push
outsl
fcompl
pop
adcl
jl
addb
add
add
dec
xor
fisttps
adc
test
loope
pop
sub
inc
dec
mov
pop
int3
pop
adc
pushl
mov
stc
ljmp
into
cltd
dec
push
pmullw
add
mov
and
frstor
mov
push
insb
lock
jl
push
loope
sbb
push
mov
add
jle
add
lods
inc
insl
ficoms
mov
pop
lods
pushf
push
fsubrs
mov
lcall
and
dec
movsl
bound
mov
pop
xor
lret
mov
push
cmp
xchg
in
test
xchg
test
aad
les
sub
adc
loop
xchg
mov
shrb
out
mov
or
inc
mov
fwait
std
daa
mov
pop
xor
mov
push
or
cmpsl
xor
sbb
xor
les
inc
sti
mov
sub
and
aaa
dec
cs
shll
movsl
mov
cli
xchg
lret
add
push
sbb
push
dec
les
add
pop
jle
mov
jmp
aaa
jle
decb
test
xchg
popf
aaa
data16
js
xchg
mov
xor
nop
shrl
xchg
outsl
std
pushl
bound
out
inc
inc
pop
jne
xchg
cmp
mov
inc
add
cmp
mov
test
adc
or
mov
xor
ficompl
pop
or
pop
loop
mov
or
xchg
jmp
push
imul
or
inc
inc
aam
dec
es
nop
jb
and
lock
jnp
fbld
inc
rcrb
in
ljmp
xchg
fstps
sbb
push
cmc
push
sbb
xchg
jle
inc
sub
dec
fisubs
jo
lahf
jno
add
test
das
pop
ja
xor
mov
loop
add
aaa
movsl
call
jmp
bound
push
mov
imul
decl
and
andb
or
and
mov
cmp
dec
add
or
xor
pop
mov
jmp
icebp
xor
mov
repnz
add
lea
int
sbb
sarl
out
fisubrs
sub
std
or
pop
mov
es
stc
test
adc
mov
in
stos
sbb
pop
lret
lea
mov
cs
insb
fldt
out
pop
fstpt
mov
js
out
add
mov
shr
mov
fistpll
add
cmc
sbb
add
faddl
mov
pop
cmc
inc
movsl
iret
adc
xor
mov
stc
push
push
jg
lds
push
inc
es
shlb
mov
nop
mov
fidivrs
aad
push
loop
test
stos
inc
push
push
mov
out
enter
adc
je
shll
lock
lret
jmp
outsl
push
add
dec
jecxz
fisubrs
dec
add
scas
xchg
mov
idiv
bound
push
movsl
shr
bound
cmp
jg
dec
cs
fsubrl
adc
sti
scas
mov
sub
jns
ss
mov
inc
ds
jb
fstl
sarb
outsb
mov
lret
adc
lds
fldl
imul
sub
call
je
and
dec
std
sti
push
mov
push
mov
sub
and
xor
ja
dec
shlb
clc
mov
xor
pop
mov
mov
and
push
xchg
aam
pop
adc
mov
addr16
cmpb
inc
sbb
jo
mov
test
jno
jns
sbb
dec
xor
dec
cmp
cmp
jl
add
mov
out
orb
cmp
push
dec
xchg
jnp
xor
mov
dec
sub
adc
push
pop
int3
test
jl
cmp
jge
out
nop
add
pusha
rorl
cmp
jbe
inc
sub
ljmp
lods
shr
std
lea
adc
jle
ds
mov
movsl
in
dec
fcmovu
rcll
inc
lahf
data16
popl
insb
aaa
dec
xlat
mov
js
sbb
mov
push
add
add
leave
jle
xor
mov
imul
xchg
and
or
pop
xchg
and
mov
mov
mov
decb
bound
fistps
mov
icebp
unpcklps
add
inc
and
push
out
insb
or
rcll
pushl
std
je
sbb
ror
std
jle
popa
and
pop
lret
add
popa
pushf
or
test
ljmp
popf
add
outsb
or
jns
dec
repz
out
sub
mov
add
aad
scas
mov
inc
mov
jl
loope
in
and
cmp
jb
or
scas
add
inc
call
stc
testl
push
cmp
bound
gs
ret
dec
not
sbb
repnz
inc
or
mov
and
mov
insl
adc
xchg
out
incl
cmp
in
mov
movsl
dec
xor
mov
mov
push
std
inc
or
fwait
pop
sarl
aas
xor
cmpl
mov
lret
sub
push
mov
aaa
sub
test
xor
dec
cmp
pop
and
loopne
in
lcall
aam
sti
jp
xor
jle
in
cmp
push
jecxz
loope
cli
inc
scas
jae
cmc
add
jg
mov
and
rorl
push
pop
aas
rcl
aam
push
mov
pop
and
push
sub
jb
sbb
insl
add
scas
stos
fnsave
fwait
pop
stos
shr
repz
cltd
les
out
push
ficomps
sub
mov
repz
add
cltd
jmp
push
int
pop
xor
ret
adc
cli
ret
or
scas
inc
arpl
nop/reserved
or
in
lret
std
outsl
cld
lcall
lock
out
cli
inc
pop
and
adc
fildll
icebp
aas
or
mov
cli
jg
adc
cld
cli
hlt
jg
fcoml
aad
push
jno
imul
sti
push
inc
mov
xor
dec
daa
out
or
scas
or
pushl
dec
jb
leave
and
arpl
push
xchg
dec
lahf
mov
loope
sub
fcoml
adc
add
cwtl
fisttpll
leave
xlat
push
jmp
mov
rcrb
stos
fimuls
mov
les
cmp
and
jns
icebp
lock
or
aad
sub
adc
pop
lods
mov
daa
pop
ror
mov
js
xchg
nop
adc
mov
lcall
or
test
jmp
enter
loop
pop
xchg
faddl
dec
push
lret
add
mov
jo
or
jle
jno
push
add
lret
lds
shl
shl
dec
decl
repnz
pushf
or
inc
jge
jp
mov
in
push
movsb
push
cmp
inc
inc
push
or
into
popa
aam
sbb
jg
pop
push
das
test
mov
aaa
pushl
movsl
mov
clc
addr16
inc
fnop
inc
adc
xchg
pusha
fcoms
xchg
aam
movsl
jl
add
push
add
sbb
mov
jno
xorl
es
faddl
and
sbb
outsb
mov
xlat
xchg
std
fs
cmpsl
push
hlt
or
xor
pushf
stos
popa
xchg
inc
jbe
ljmp
or
mov
pushf
sub
fistpll
and
es
je
int3
dec
jecxz
mov
sub
cs
adc
xchg
or
xor
arpl
adc
xor
bound
test
shrb
and
jg
push
xchg
aas
pcmpgtb
xchg
test
mov
jns
hlt
stos
or
fistl
std
in
fstpt
mov
or
cmp
outsl
insb
cmp
cmpsb
xchg
rorl
lahf
push
inc
ret
push
pop
mov
sarb
mov
ret
or
loope
mov
cwtl
sub
pop
dec
pop
mov
mov
or
sbb
mov
xchg
add
int3
xor
iret
cmpsl
or
or
in
and
pop
adc
jle
loopne
jg
cld
bound
push
xchg
push
repnz
add
jecxz
push
nop
js
jbe
sbb
rorb
jecxz
leave
aas
test
jo
mov
movsl
iret
loopne
ljmp
les
adc
adcb
add
scas
pop
and
sub
push
adc
cmpb
pop
mov
imul
and
addr16
cmpsl
add
xlat
jge
popf
loopne
or
cmpsb
fisubrs
mov
bound
enter
fistpl
scas
jns
outsl
clc
push
xchg
scas
pop
pop
xor
stc
in
dec
scas
cld
cmc
push
lds
xor
mov
mov
jg
lahf
fwait
lea
hlt
in
push
ds
and
fldl
std
addb
stos
xor
ss
add
push
cmp
xchg
mov
adc
loopne
push
fmul
jb
int
out
out
cli
outsl
pusha
out
insb
add
je
stos
add
stos
js
xchg
mov
jae
scas
test
adc
add
adc
pop
lcall
aas
lock
mov
imul
pop
ja
dec
lea
adc
pusha
mov
cli
int
inc
das
arpl
in
xchg
jmp
iret
and
cld
clc
aas
mov
jge
stos
lock
adc
pop
out
fists
imull
jnp
xlat
andb
dec
xorb
pop
mov
insl
lcall
add
or
cmp
or
add
enter
push
inc
sub
mov
stos
pusha
inc
gs
inc
icebp
inc
xor
pushf
fdivl
dec
test
sub
addb
cmp
pop
loopne
push
or
add
xchg
nop
sub
fwait
push
loop
test
or
dec
fistl
rol
call
mov
adc
aam
cmp
in
or
cmp
mov
insl
call
rorl
mov
andl
or
mov
mov
sub
inc
or
jno
add
mov
ud2
dec
and
add
test
cwtl
adc
addb
inc
mov
adc
scas
and
cmpsb
sbbb
xchg
push
mov
int3
das
int
sbb
arpl
mov
leave
in
mov
repnz
pusha
dec
int3
aas
and
or
dec
ljmp
xlat
int3
and
pop
sbbb
add
mov
fwait
fwait
add
mov
jecxz
out
inc
add
dec
out
fmull
mov
mov
movsb
bound
stos
mov
jbe
aam
stos
inc
int3
out
pop
sub
xchg
inc
dec
and
pop
sbb
dec
jno
sub
ret
or
dec
hlt
or
and
pop
inc
mov
loopne
lret
inc
add
mov
rclb
shl
adc
add
add
pop
jns
loopne
adc
sbb
hlt
add
test
cwtl
lcall
and
shrb
and
ret
push
test
add
int3
out
inc
xor
mov
outsb
add
fwait
add
call
repz
loopne
shll
sbb
test
jge
subb
push
inc
ret
cli
das
cmp
enter
pop
pop
sti
mov
mov
icebp
stos
add
aad
jl
fneni(8087
push
shl
adc
xor
clc
or
inc
add
std
jmp
cmp
jae
lret
dec
sub
inc
and
int
mov
xchg
imul
sbb
sbb
adc
inc
sbb
mov
testb
push
aad
xor
mov
inc
mov
out
pop
call
add
and
xchg
filds
push
hlt
push
cs
scas
cmpsb
data16
insb
je
aas
mov
mov
dec
lahf
lods
rcll
dec
ret
nop
or
add
ret
dec
add
inc
push
shll
call
adc
andl
bound
stos
mov
loop
pop
scas
stos
imul
adc
cmp
mov
sub
mov
mov
or
sub
dec
and
add
and
xchg
insl
ljmp
mov
xchg
loope
pop
inc
inc
ljmp
ss
cmpsb
cmc
cld
mov
js
je
add
add
cmpsl
in
jge
sbb
and
shlb
aad
in
orl
test
mov
xor
dec
lcall
xchg
stos
or
pop
clc
push
add
pop
fistpl
xor
test
int3
inc
or
testb
push
jle
add
push
pusha
in
mov
xchg
cmpsl
mov
imul
sub
dec
cltd
or
sbb
loopne
pop
outsb
lea
inc
pushf
adc
dec
popf
cmp
mov
pop
lcall
cmp
jmp
aaa
popf
test
inc
ss
xchg
mov
cmp
mov
or
xchg
fs
mov
dec
push
ja
dec
mov
lahf
push
stos
aaa
ss
movsb
push
push
cmpl
push
mov
mov
mov
loope
pusha
test
lret
xorl
or
jb
dec
sarl
sub
cmc
mulb
lods
push
mov
push
cmp
aas
push
mov
aas
sub
xlat
cwtl
or
mov
inc
mov
and
ljmp
hlt
jle
aas
insl
sbb
sti
mov
cmpsl
pop
lock
cmp
pop
adc
dec
jg
mov
push
fmuls
xchg
mov
cmp
mov
mov
jne
cmp
xchg
leave
push
and
pop
pcmpeqd
fmull
push
mov
mov
cmp
fstpt
ss
inc
pop
mov
pushf
mov
pop
popa
push
lea
dec
xor
outsl
hlt
pop
xor
ds
or
sti
push
and
icebp
hlt
ret
dec
daa
pusha
rcl
jae
pop
out
add
sub
pop
push
add
and
jl
out
sbb
std
fstpt
arpl
cs
data16
push
arpl
jmp
pop
or
jno
xor
dec
mov
int3
out
daa
sub
es
pop
shll
or
push
test
ljmp
sbb
lcall
sbb
jg
push
dec
fisubl
inc
cwtl
ljmp
inc
pop
in
push
jo
cltd
dec
popl
inc
jp
mov
mov
push
lret
fwait
xor
ljmp
ret
in
or
inc
adc
sti
imul
les
outsb
pusha
mov
nop
push
lret
xchg
mov
mov
jg
test
add
inc
arpl
popf
dec
and
bound
fistpl
das
cld
pushl
adc
inc
sub
and
and
add
inc
mov
sbb
cwtl
jae
sub
movb
mov
movsl
ljmp
and
pusha
aas
and
shll
lcall
inc
xchg
cmp
jns
and
sub
js
sti
cmp
pop
push
ljmp
lret
inc
movsbl
sub
dec
xchg
mov
mov
mov
lahf
inc
daa
int
adc
aaa
outsb
mov
mov
stc
cmc
sti
es
dec
inc
xchg
ljmp
test
dec
sbb
pop
xor
inc
loop
mov
les
xchg
lret
push
cld
hlt
outsl
std
jg
cs
in
lret
cmpsb
inc
scas
aad
add
sti
aam
lods
push
clc
adc
dec
xor
in
aas
cmp
jo
leave
popl
xchg
out
fs
popf
popf
cmp
loop
adc
mov
inc
hlt
fildl
jmp
je
icebp
addr16
dec
fists
dec
and
adc
pop
cmp
mov
pop
ljmp
sbb
lcall
in
test
jmp
and
or
lods
cld
lea
add
xchg
add
jp
or
jmp
push
insb
mov
and
fildll
mov
mov
inc
rcr
fistpl
xor
es
and
in
insb
push
sti
nop
mov
mov
mov
aas
je
inc
adc
push
jb
insb
imul
inc
mov
pop
jle
icebp
mov
and
dec
scas
mov
mov
and
add
pop
jne
call
xchg
jmp
jl
jnp
mov
scas
pop
xchg
pop
shll
enter
mov
fisubl
loopne
pop
xor
js
aaa
fldt
cmp
ret
dec
repnz
dec
xchg
push
test
dec
lcall
and
push
incb
add
test
xchg
and
fwait
rolb
scas
inc
in
jns
clc
ret
decl
adc
inc
add
mov
fistl
cwtl
shll
enter
fidivs
fldt
add
repz
hlt
cmp
mov
mov
xchg
repnz
dec
shrl
out
cli
mov
mov
xor
mov
pusha
and
xor
je
rorl
mull
hlt
stos
and
push
sbb
lret
lock
inc
dec
mov
ja
push
xchg
fdecstp
push
add
or
aam
bnd
loope
dec
roll
loop
mov
loop
cld
xor
xor
sub
add
inc
int3
mov
dec
insb
pop
jae
es
inc
shl
subl
stc
faddp
pop
jno
clc
aad
mov
es
inc
inc
add
cmp
jno
or
and
inc
push
addb
int3
jg
decl
aas
mov
call
add
mov
xchg
inc
and
jle
mov
pop
shl
push
sbb
mov
sbb
xor
test
push
jns
adc
push
sub
inc
xor
loopne
ret
inc
insl
cmp
jb
loop
jg
inc
out
mov
add
repz
and
mov
and
mov
xchg
clc
popf
sbbb
popa
loop
xor
jmp
or
mov
jbe
xchg
inc
pop
add
or
lea
adc
mov
jbe
adc
test
stos
push
nop
cli
addl
adc
fstps
adc
cld
dec
pusha
adc
xor
xor
and
addr16
int3
popf
adc
xchg
daa
mov
add
xor
jp
adc
loop
fidivs
ds
push
jp
dec
insb
push
mov
aam
lea
mov
jbe
lock
pusha
inc
xor
push
push
cld
add
pop
or
cs
xor
cmpsl
test
xor
outsl
push
and
stc
movb
call
or
jle
xchg
cmc
add
and
nop
adc
test
orb
add
push
inc
int
loope
shll
xor
leave
sbb
aad
sub
pushf
xor
jecxz
cmp
add
mov
cmpsl
pop
fcoml
sbb
pop
xlat
and
and
adc
pusha
sbb
add
inc
mov
and
or
lret
insb
jle
push
rorb
mov
mov
xchg
inc
xor
cmp
or
bsr
out
insb
fcmovnbe
push
and
add
loopne
adc
lds
dec
std
fimull
cmpsl
mov
inc
aad
pop
ret
frstor
js
xor
inc
jne
or
jno
push
and
add
jl
cmp
jg
inc
shrb
dec
sbbb
xor
inc
leave
lahf
sar
mov
or
sahf
mov
dec
movsl
mov
out
ljmp
les
or
add
adc
popa
push
out
aad
ljmp
inc
rcl
cwtl
popa
ljmp
subl
push
test
and
dec
mov
inc
sbb
or
fcmovnu
call
jae
inc
xchg
in
hlt
mov
sub
push
sarl
jae
and
test
data16
adc
push
mov
sbb
lcall
fwait
mov
fimull
or
jnp
lahf
xor
xor
icebp
and
adc
insl
pop
add
daa
xchg
lock
inc
rcll
rcll
push
sbb
int
not
imulb
xor
push
push
sub
adc
jb
loope
cmc
jg
pop
bound
xchg
push
inc
popa
sub
push
jnp
es
push
inc
sub
bound
popa
cmp
lea
add
fcoml
ret
add
mov
data16
add
shlb
iret
rorl
or
add
adc
xchg
leave
or
stos
cmp
cmp
cs
jmp
aam
sub
jb
or
dec
scas
cs
into
and
icebp
daa
jo
xor
adc
xchg
mov
enter
cmc
data16
sbb
decb
jl
cmpsb
test
pushf
data16
in
outsl
movsl
insl
mov
add
jl
dec
cli
mov
outsb
jl
dec
xor
jne
pop
and
in
dec
addr16
mov
es
inc
push
pop
add
ret
adc
xor
or
shrl
imul
mov
add
ds
or
xchg
mov
test
sub
fs
dec
mov
ljmp
les
inc
std
incl
push
decl
push
clc
shlb
xchg
xchg
insb
mov
test
leave
dec
xor
aam
push
add
test
mov
cmpsl
sub
mov
std
jg
mov
or
sub
aaa
mov
pop
jl
mov
call
ret
sbb
sbb
and
and
cmp
push
std
dec
loopne
add
test
lret
jge
push
sbb
push
movsb
jecxz
test
mov
in
fucomi
arpl
imul
test
mov
insl
inc
jge
mov
bound
sahf
mov
cmc
pop
shll
mulb
dec
loop
hlt
mov
pop
call
cmc
dec
adcb
subb
decl
adc
inc
je
ret
or
add
dec
sbb
xchg
mov
jg
pop
cld
or
inc
sub
in
inc
popf
and
int3
xchg
sub
lea
fisttpll
mov
xorl
outsl
pop
dec
push
scas
or
ret
xchg
mov
cld
inc
inc
daa
cs
out
cmp
mov
or
dec
lods
adc
push
stos
mov
mov
cmp
addr16
and
xor
rcr
xchg
loopne
mov
inc
movsl
jne
and
cli
adc
lcall
or
jnp
lods
add
ret
aaa
sbbb
es
jo,pn
stc
in
mov
mov
xor
out
cmc
jno
xor
insl
leave
jae
cmp
pusha
push
mov
mov
outsl
lea
icebp
dec
scas
push
fldt
adc
pop
jne
and
add
and
mov
fnstsw
sub
and
aas
mov
inc
ljmp
testb
inc
fistpll
mov
and
hlt
push
jl
or
or
cld
or
jp
inc
adcb
je
imul
adc
stos
cmp
lret
notl
mov
sbb
pop
mov
iret
xlat
adc
incl
rorl
adc
jns
imulb
ds
loope
dec
xlat
or
aam
stos
xchg
fsubrp
dec
or
pop
mov
das
lods
in
add
test
inc
lret
mov
mov
fcomip
adc
adcl
popa
sub
fistl
scas
cmp
pop
movsb
inc
mov
pop
add
add
dec
sub
cld
xchg
fisttpll
ret
jae
mov
jecxz
stos
sbb
mov
add
pop
or
das
push
popa
lock
lea
mov
jg
test
gs
sbb
add
mov
inc
out
fildll
xor
inc
outsb
lods
cltd
dec
leave
pusha
mov
insl
or
nopl
inc
sti
pop
pop
dec
push
imul
inc
mov
sbb
push
test
mov
inc
adc
dec
lahf
dec
mov
push
test
push
dec
sti
mov
add
movsl
cmpsb
adc
mov
test
out
mov
or
xchg
mov
imul
push
bound
adc
mov
fwait
cmp
or
jl
stos
ret
mov
jmp
sub
hlt
movsl
push
mov
or
mov
mov
mov
or
push
push
loop
cmp
flds
pop
mov
pop
pop
xor
insl
call
dec
cwtl
adc
fidivrs
or
and
ss
adc
push
ja
push
cmp
out
mov
cmp
lock
sbb
mov
aad
das
test
not
out
push
je
push
aam
out
jno
add
ret
push
jns
mov
push
cmc
mov
xchg
xor
adc
inc
idivb
xchg
lea
ret
incl
sub
xchg
mov
sahf
sbb
adc
xor
das
je
icebp
adc
aaa
sub
das
pop
out
mov
aaa
pushf
loope
adc
adc
or
and
cli
jbe
sti
sub
subb
add
imul
xor
mov
mov
jne
int
pushf
je
rcll
clc
shr
sbb
add
pushl
loope
scas
mov
push
dec
enter
lods
adc
pop
incl
test
rclb
stos
insb
cs
mov
xchg
ja
pop
loopne
mov
fadd
lret
xchg
mov
fimuls
or
shr
es
adc
sub
into
cmp
add
rolb
cmpsl
fistpl
xor
loope
dec
icebp
mov
add
aaa
cld
test
mov
cmp
lea
out
cld
pop
dec
mov
iret
fdiv
das
mov
mov
cmp
lret
roll
mov
inc
cli
sub
pop
rol
adc
push
dec
jb
mov
mov
hlt
shlb
rorb
call
pop
mov
arpl
jmp
pushf
sub
sbb
jb
inc
cli
add
add
out
push
or
in
mov
ljmp
stc
sahf
mov
jmp
leave
add
push
and
lret
ret
push
fidivs
cmp
cmp
fcmovnbe
sub
imul
xor
nop
inc
jl
cs
out
stos
rcrb
imul
adc
adcb
lret
adc
ud1
jns
outsb
andb
inc
popf
fstp
cs
and
in
dec
daa
outsl
mov
push
fisubrl
dec
mov
std
lahf
dec
xor
mov
jns
fldt
push
or
fisubrl
sub
or
inc
or
popf
jno
mov
test
outsl
pop
inc
adc
mov
out
push
add
add
mov
pop
negb
arpl
push
push
jg
add
dec
sbb
loopne
sbbl
jl
pop
test
cli
orb
or
shll
dec
cmpsb
dec
pop
jno
sti
in
cld
mov
ss
push
ljmp
ja
enter
sti
adc
jns
loopne
hlt
xor
loope
adc
fstpt
mov
jge
and
repz
mov
dec
pop
popf
or
cmp
inc
cli
dec
ljmp
dec
mov
repnz
das
lock
movl
fldt
orl
push
repz
pop
icebp
add
and
sbb
push
out
mov
pop
call
outsb
int3
xchg
mov
push
jp
add
add
adc
out
jg
add
or
mov
incb
mov
pop
dec
mov
stos
push
cmp
out
inc
jp
sti
jecxz
lcall
ljmp
aaa
cmp
fisubl
fst
and
shl
sub
icebp
shrb
orl
pop
xchg
add
loop
dec
aam
jl
sub
test
xor
sbb
arpl
and
jp
test
xchg
mov
out
addr16
pop
lcall
insl
pop
mov
xchg
into
inc
sub
aaa
push
jns
ja
movsb
imul
fwait
add
push
pop
xor
faddp
pop
push
push
lods
cmp
xor
pop
outsb
add
ds
out
insb
sub
cltd
pusha
add
mov
xchg
sub
in
xchg
jecxz
jmp
movsb
lcall
shll
in
push
xchg
orl
cmpsb
mov
pop
je
scas
push
dec
push
fcoml
xor
bound
push
inc
adc
call
rclb
pop
xor
neg
dec
sbb
dec
sub
aad
test
inc
cmc
jge
xor
mov
inc
cmp
xchg
enter
jge
mov
and
xor
mov
daa
cs
inc
jle
out
or
dec
and
stc
add
cmp
clc
push
xchg
add
mov
mov
ret
test
xchg
xchg
mov
in
mov
cmp
int3
test
inc
movsl
lods
ljmp
inc
xlat
sarb
rep
push
push
data16
lea
js
sbbb
lcall
sahf
ja
pop
fdivrs
cmpb
hlt
ficoms
sbb
outsl
mov
fnstsw
mov
movl
stc
xchg
mov
and
push
lcall
fwait
cmp
mov
mov
add
sub
loop
mov
jnp
xchg
lock
scas
mov
rcll
cli
add
inc
popf
rorb
mov
scas
jmp
cmp
jbe
sbb
outsb
xor
mov
mov
incl
or
mov
xchg
std
cmc
mov
mov
jne
add
sub
add
fcom
out
loopne
xchg
add
out
test
push
cwtl
cmp
adc
lret
aas
mov
inc
mov
dec
fwait
pushf
pop
fcomps
fisubl
pop
xchg
sub
es
mov
cltd
icebp
mov
mov
lea
xchg
adc
int
cmp
cwtl
jnp
xor
push
outsl
mov
sub
or
jge
pusha
movsl
test
mov
push
outsl
add
push
add
dec
or
xor
jae
push
mov
mov
xor
xor
add
mov
sbb
jecxz
add
pop
es
test
movsl
ss
mov
loope
dec
sub
shll
push
dec
pop
rcl
adc
les
divl
add
test
and
in
or
fs
imul
cmpb
and
test
mov
es
cmpsb
cmpsb
fcompl
adc
adc
push
adc
cmp
bound
dec
pop
sub
mov
xchg
pop
lods
dec
aad
sub
dec
sbb
push
push
and
or
xor
add
or
movlps
clc
test
call
fsubl
adc
fsubl
adc
inc
sbb
xor
andb
or
rcr
ret
mov
sbb
add
push
and
xor
das
push
lods
and
pop
das
jne
dec
pushf
sub
andl
mov
jle
lea
jae
test
mov
xor
ss
or
fs
xchg
or
popf
push
push
sbb
test
add
insb
xchg
xor
dec
dec
jne
or
cmp
mov
mov
jns
adc
andb
sbb
int
xchg
mov
inc
fistpl
shlb
js
inc
insb
cmovb
push
add
adc
pushf
or
mov
mov
lds
push
hlt
mov
mov
test
out
mov
push
cmc
int3
loopne
sub
mov
iret
clc
imul
mov
xchg
aad
sbbb
push
cmp
es
push
inc
daa
add
repz
mov
jb
mov
xchg
pop
adc
inc
dec
es
call
lock
ljmp
popa
push
js
sarb
in
mov
stc
cmp
and
fcmovbe
sbb
les
lods
cmp
push
adc
clc
dec
dec
push
aam
add
pop
lods
mov
mov
or
mov
or
imul
xchg
xor
les
cmc
stc
and
pop
imul
call
test
mov
add
cmp
jmp
pop
jo
pop
rcrb
enter
roll
sub
in
fimuls
mov
std
rcll
les
cs
pushf
xor
xchg
mov
aam
mov
loopne
shlb
lcall
in
mov
popf
xor
mov
test
pop
lock
fiaddl
sub
or
out
jo
dec
push
inc
and
adc
adc
xchg
push
jl
push
mov
test
out
sub
les
add
mov
fsubrs
icebp
test
cmp
cmp
mov
mov
movsb
and
fidivrl
jmp
mov
push
stos
jmp
pop
shlb
and
sub
and
fcomp
ret
testb
xor
pop
and
pop
int3
pop
adc
in
inc
dec
and
push
int3
ljmp
fimull
push
add
cmpsb
jo
push
stos
xchg
sti
add
xor
and
cmpsl
push
push
jp
dec
xchg
imul
xchg
lret
inc
cmc
scas
inc
add
xchg
inc
int3
dec
jg
mov
and
fistpl
js
pushf
in
sbb
fiadds
push
cmp
pushf
add
and
inc
mov
iret
sub
lahf
sub
scas
or
cltd
pop
imul
inc
lahf
mov
fisubrl
mov
push
loopne
pop
cmp
jle
cmp
cmp
or
mov
or
xchg
mov
aad
or
dec
repz
pop
sub
xor
dec
mov
gs
add
sbb
icebp
push
add
pop
gs
mov
shll
pop
xor
addb
push
and
add
add
and
mov
mov
xor
sub
add
mov
inc
incl
mov
out
sbb
sbb
arpl
mov
sub
loope
sbb
mov
sub
mov
cmc
test
and
sbb
mov
inc
mov
push
pusha
xchg
add
ret
xchg
fisttpl
mov
out
fldt
xchg
and
adc
pop
cld
ret
rclb
adc
sbb
xor
ja
push
jb
inc
data16
push
mov
test
jne
push
daa
add
xchg
addr16
inc
ljmp
pop
dec
gs
aam
xor
jb
sti
nop
xor
pop
sub
mov
sub
sbb
stos
add
pop
mov
sub
add
lahf
xchg
ja
js
lock
std
pop
pop
movsl
dec
out
inc
push
bound
push
xchg
push
imul
push
pop
or
jns
mov
mov
movsb
pop
shlb
scas
push
loope
sbb
jp
add
cmpb
fimuls
xor
insl
jb
mov
pusha
cmpsl
pop
lds
sbb
scas
xor
aas
and
cmpsb
push
insb
call
jb
add
popa
sub
clc
bound
jae
xchg
subb
lcall
cli
out
in
roll
or
add
lock
iret
dec
imulb
push
xchg
push
aaa
adc
shrb
mov
xchg
fdivr
fwait
mov
lahf
pop
test
jecxz
jb
mov
shrl
sar
and
push
pusha
xchg
sub
jge
mov
pop
mov
fisubrl
test
iret
in
adc
cli
inc
into
add
fs
shr
add
lret
in
push
aas
xchg
enter
adc
loop
lea
mov
mov
pop
lcall
bound
inc
mov
pop
call
add
fmull
cmp
xor
in
dec
or
call
cmp
cli
jg
lret
jne
idivl
push
push
scas
mov
loopne
lods
fdivl
and
xchg
orb
mov
sub
or
shr
mov
dec
pop
outsb
cld
mov
out
xor
add
xor
xchg
ret
out
test
orb
aad
fldl
loope
inc
jb
insb
fsts
pop
lods
pusha
xchg
mov
fsub
or
jp
lea
cwtl
and
inc
pushf
lods
or
loopne
jle
movsb
mov
cs
cltd
out
fldcw
or
movsl
lea
sbb
sbb
push
pop
ljmp
and
imul
out
and
cs
sbb
adc
in
or
nop
pop
mov
test
adcb
gs
das
lods
bnd
or
sbb
ss
xchg
rclb
popa
loope
or
cmp
adc
inc
jo
inc
test
jnp
sbb
xchg
pop
nop
inc
sar
aad
push
xchg
loopne
das
xor
pusha
mov
push
fildll
fwait
adc
pop
cmpb
dec
add
dec
dec
adc
fistps
mov
cli
xchg
or
pop
aam
mov
ucomiss
in
lods
pop
idivl
push
xchg
jp
mov
inc
inc
push
dec
shrb
sub
push
cwtl
or
clc
in
adc
les
movsl
in
fistl
mov
inc
push
dec
out
push
xchg
inc
pop
mov
add
pop
pusha
mov
mov
das
out
fcmovnu
ds
cltd
call
icebp
loope
and
movsl
sbb
push
insl
lods
mov
movsl
lcall
cld
or
push
lcall
inc
popa
push
cmpsb
mov
push
adcb
cltd
or
or
test
mov
nop
gs
pushl
xor
jnp
ja
cs
or
jl
fistps
fsubr
mov
push
mov
sub
push
xor
mov
pop
js
add
add
scas
shrl
cli
xor
xorl
mov
dec
out
cmpsb
inc
jo
cmc
xchg
mov
add
xor
lret
cmp
cltd
fcmovnbe
fstpl
loopne
jge
pop
sbb
ret
cltd
jle
adc
paddusb
call
adc
jb
mov
xchg
xchg
pusha
xchg
int
lret
outsl
jl
mov
dec
stos
add
scas
lahf
sbb
cli
inc
imul
cmc
dec
roll
inc
inc
push
jle
lods
loopne
mov
data16
ret
ljmp
outsl
mov
cli
gs
push
pop
rorb
lcall
mov
imull
inc
inc
xchg
dec
jmp
out
idiv
imul
and
sub
nop
jns
idivl
ret
movb
ss
in
gs
xchg
sub
mov
xlat
outsb
and
dec
mov
sbb
sub
rolb
pop
or
push
fcmovne
fbstp
mov
mov
daa
jne
das
cld
scas
jns
jne
and
sub
mov
or
adc
pop
pop
jl
adc
pop
adc
jle
adc
cwtl
and
call
pusha
cmp
and
inc
and
pop
lods
test
adc
inc
addb
fisttps
clc
es
data16
sbb
pusha
push
mov
jb
loope
jo
xlat
mov
icebp
adcl
nop
and
jmp
fildll
and
cwtl
mov
jns
ficoml
orb
xchg
xchg
jecxz
std
jo
and
nop
pop
inc
sub
mov
dec
cld
add
mov
adc
hlt
movl
pusha
pop
mov
pop
mov
int3
pusha
or
loopne
adc
mov
add
push
sbb
cmc
sub
jnp
pop
or
jmp
add
push
mov
aas
insb
jbe
sub
pop
sub
hlt
mov
push
mov
in
cltd
sbb
addr16
mov
xchg
or
pop
aas
mov
push
mov
filds
xor
insl
ss
pop
add
add
les
cmc
cltd
dec
jp
push
xor
jg
adc
xchg
or
push
cmpsb
enter
cld
ss
push
add
call
or
imul
in
xchg
shll
add
fcoms
dec
jle
iret
daa
add
insb
insl
ret
shll
xor
push
add
lret
iret
clc
sub
mov
lcall
or
sub
adc
in
push
inc
shrb
iret
push
into
incl
xchg
and
sbbb
out
fwait
xor
in
sbb
jge
sbb
push
mov
pop
test
and
cwtl
mov
inc
xor
adc
fnstsw
addb
sbb
push
data16
and
cmp
push
fldenv
insl
xor
inc
pop
adc
add
das
shlb
adcb
movsl
mov
jns
xchg
aam
sahf
mov
xor
mov
lret
jne
jbe
inc
or
dec
dec
fstpt
outsl
aam
outsb
xor
mov
ljmp
cmpsl
and
cltd
xchg
out
mov
bound
push
push
shrl
pop
stos
outsb
pop
xchg
mov
inc
and
or
jp
sbb
repz
cmp
int3
mov
lods
pop
xor
lahf
dec
mov
mov
and
outsl
push
insl
mov
lock
pop
mulb
push
paddusw
shlb
fsubl
repnz
es
push
mov
xchg
mov
int3
jmp
aam
cmp
lret
sub
fstpt
sbb
jb
xchg
insb
adc
lahf
jge
xchg
fldl
call
mov
outsb
inc
outsb
int
das
rorb
int3
add
adc
mov
or
add
or
lahf
rcrl
xor
cmpsl
jae
pop
js
xlat
pop
scas
mov
in
nop
push
mov
jo
jg
fucom
aad
loop
arpl
lfs
out
push
mov
aam
fs
sarl
xchg
push
ret
jnp
ja
xor
shlb
test
jge
cmp
xor
dec
mov
mov
cmp
pushf
ret
mov
mov
pop
lods
ss
std
dec
or
repnz
cli
mov
mov
adc
pusha
push
inc
test
clc
ss
or
mov
in
dec
movsb
dec
xchg
sub
add
inc
mov
xchg
sub
and
rclb
rclb
outsb
mov
inc
ficomps
or
stos
or
in
or
mov
inc
in
add
mov
sub
xor
inc
andl
insl
out
fildll
push
popa
shrl
stos
in
call
add
push
pop
sub
mov
cmc
scas
xor
gs
rcrl
adc
daa
mov
test
add
mov
and
sbb
sub
testl
fistpl
mov
out
sbb
adc
mov
cmc
pusha
dec
xchg
mov
sbb
dec
popl
adc
decl
mov
dec
repz
sbb
jnp
mov
or
cltd
inc
dec
mov
lock
lock
or
sbb
sbb
ds
mov
sbb
jle
call
add
push
enter
pop
add
xor
cmc
ja
push
xor
inc
dec
int3
lret
push
mov
jp
shlb
xchg
arpl
jbe
icebp
jg
fildl
lcall
or
fistl
lea
cmpb
pushf
and
outsb
icebp
pop
outsb
insl
enter
cmp
cmp
mov
mov
enter
push
pop
jns
sub
mov
aam
test
pop
ret
movsl
or
lea
dec
jecxz
addl
xor
pop
jae
insb
xor
loop
rcr
test
popf
cmc
and
push
jge
test
mov
jge
scas
aaa
loopne
mov
out
mov
scas
bound
lods
xorw
mov
js
add
ret
mov
xor
xchg
adc
sbb
dec
push
add
stos
dec
subb
sbbb
test
rolb
sub
fcmovu
roll
push
mov
dec
push
push
push
loop
or
lods
arpl
jbe
lock
mov
dec
icebp
movsb
pop
sti
add
cmpsl
mov
and
jb
es
add
jno
adc
mov
and
push
pop
dec
rolb
lret
pushf
jge
xchg
insl
xchg
mov
cmpsb
push
mov
pop
sbb
aaa
aam
adc
or
or
popf
imul
mov
loopne
andb
jnp
loop
mov
add
testl
dec
cmc
sub
push
adcl
ror
sub
add
loopne
xchg
jae
es
push
or
inc
aam
notl
add
dec
add
and
push
adc
lods
lret
inc
push
jnp
mov
mov
adc
push
xor
and
inc
movl
cmpsl
adc
jns
adc
sub
mov
rorl
inc
pop
inc
mov
pusha
pop
dec
mov
inc
mov
and
add
inc
xlat
mov
sub
mov
mov
xor
shll
or
clc
movsl
shrl
pushl
mov
mov
xor
in
repnz
out
mov
mov
jno
jg
cld
lahf
adc
xor
push
push
aaa
testb
data16
loopne
xor
cmpsl
adc
test
iret
dec
into
fstpl
add
js
sbb
je
dec
fistpl
and
outsl
ficompl
sarb
xchg
and
push
xlat
pop
jle
mov
adc
add
dec
stos
mov
or
xorl
je
or
imul
nop
imul
mov
jecxz
stos
ljmp
fldl
push
adc
fcompl
les
loopne
add
cmpsl
xor
insl
jl
xlat
inc
adc
pop
in
jl
push
inc
bound
stos
mov
or
cwtl
jne
lret
pop
insl
adc
out
lock
mull
mov
pop
repz
cmp
dec
ficoml
scas
stos
lds
fadd
or
loope
adc
mov
jecxz
push
add
scas
adc
xchg
movl
loopne
fsubr
xchg
xor
ds
or
rcrb
mov
loope
push
scas
andl
pop
mov
inc
jge
mov
test
mov
xor
jno
lahf
mov
fs
fcomps
cmc
dec
or
in
mov
adc
cmp
cmp
push
and
adc
cmp
xchg
shrl
jno
sbb
lock
scas
out
xchg
pushl
shlb
lcall
inc
out
xor
push
cs
dec
insb
sbb
repz
mov
fistl
or
daa
jae
pushf
xor
rol
aam
fmuls
decb
pop
pop
jo
dec
icebp
jb
sbb
sub
out
pusha
mov
sub
subl
lret
inc
std
adc
add
mov
les
xchg
adc
loop
aad
adc
lcall
call
add
pop
adc
dec
push
cs
inc
and
mov
pop
sub
sub
and
int3
and
bound
in
xor
dec
inc
or
movsl
xchg
bound
jmp
rcl
xchg
xor
bswap
cld
jae
add
subl
push
insl
push
mov
mov
mov
shlb
and
mov
mov
pop
mov
rolb
dec
andb
jecxz
aas
lea
lock
xchg
xor
xor
aam
mov
sub
xchg
fidivs
adc
out
fiadds
push
adc
pop
pop
sub
mov
fmulp
jo
push
and
or
stos
mov
sub
shrb
paddsw
adc
push
stos
ror
pmaddwd
aad
prefetch
or
push
dec
inc
mov
shlb
or
adc
or
fdiv
xor
inc
cld
pushw
mov
inc
sub
sbb
dec
leave
inc
cld
mov
jne
sbb
hlt
cmp
pop
call
xor
mov
gs
mov
into
imul
adc
add
jne
adc
lcall
ljmp
outsl
cmp
and
or
cmc
jmp
sarl
adc
push
adc
mov
add
push
fistpll
xchg
mov
pop
push
pushf
mov
decb
adc
je
inc
std
add
cmpsb
in
std
fsubl
add
xchg
fldcw
shll
rorl
es
push
mov
mov
stos
aaa
fsubp
arpl
add
lea
pop
inc
out
aam
xor
in
xchg
movsl
inc
push
push
lcall
rclb
lea
clc
cmp
pop
cmp
push
cmp
mov
sbb
int
adc
hlt
pop
fcoms
fcoms
aas
in
ret
test
xor
and
and
mov
adc
lcall
repnz
sbb
sub
fwait
push
cmpsb
clc
jge
sub
pusha
stos
pop
sub
xor
insl
rolb
sub
mov
rol
mov
inc
popf
inc
adc
mov
push
xchg
out
push
and
imul
dec
and
dec
notb
sbb
mov
add
mov
lret
mov
push
xchg
sbb
fimull
push
das
nopl
jnp
jno
cli
dec
mov
lds
jb
xchg
out
ret
or
lock
in
jge
mov
adc
das
je
pand
mov
out
xor
push
xor
sbb
xchg
ljmp
adc
inc
movsl
psubsb
jle
adc
lea
in
inc
mov
inc
pushf
pop
mov
sub
shll
nop
cwtl
sub
inc
outsb
leave
mov
ja
pop
fs
xchg
outsl
pop
outsb
pop
ret
add
clc
sbb
shr
stos
sub
pop
mov
and
dec
dec
outsl
inc
lock
pop
xor
mov
mov
in
inc
fwait
add
sbb
shr
shll
mov
jo
and
or
sub
mov
inc
adc
cltd
or
mov
push
out
test
lret
mov
aam
push
dec
sub
fs
mov
ret
inc
out
stc
push
out
and
pop
shl
sarl
pop
loope
xorb
rcl
sub
inc
cmp
mov
inc
jg
push
js
push
fistps
push
dec
out
add
dec
inc
push
das
pop
xorb
out
xchg
rorl
rcll
fsubl
call
push
rol
and
dec
mov
clc
lcall
popf
sub
add
test
stos
in
in
push
sub
dec
jne
ret
loop
xchg
addr16
mov
mov
add
mov
outsb
mov
inc
pop
in
iret
sti
jg
mov
jae
ret
sub
adc
popa
flds
fstpt
mov
mov
call
fstl
cmpsb
pop
imul
fists
insb
repz
dec
xor
inc
fidivs
xchg
outsb
add
repz
or
cld
mov
push
cwtl
mov
movsb
fst
mov
bound
roll
push
subb
inc
mov
cmpsb
pop
mov
repz
insb
icebp
in
fs
orb
mov
scas
cmp
cmp
icebp
xchg
hlt
aas
mov
mov
rorl
lock
fs
sbb
pushf
and
ljmp
cs
std
rorl
xor
sbb
mov
or
aam
mov
adc
inc
addl
ss
lcall
lea
test
mov
mov
adc
jg
loopne
xchg
imul
mov
das
mov
incl
push
fwait
lods
sub
push
cmp
mov
rolb
pop
add
mov
xchg
aam
and
fs
push
imul
mov
sbb
pop
call
inc
aas
push
icebp
xchg
sub
pusha
dec
dec
fdivs
inc
loope
jno
dec
lret
jne
mov
into
mov
sti
xchg
mov
cmp
sub
scas
into
sub
or
mov
enter
subb
jb
mov
jle
das
orl
and
fsub
imul
insl
sub
push
cmp
cwtl
push
cs
mov
inc
pop
clc
pop
adcb
aaa
das
mov
pop
cli
pop
jno
push
std
ret
cwtl
out
jae
popf
lods
or
shlb
mov
or
jecxz
mov
push
mov
cmc
fstpt
jg
dec
rorb
push
sahf
icebp
popa
js
dec
pop
pop
cmp
test
call
dec
das
dec
movl
incl
cs
push
cmp
lcall
pushf
pop
ret
push
call
adc
out
imul
pop
mov
fldl
xchg
imul
xor
pop
mov
mov
pop
fdiv
inc
pop
and
iret
jge
dec
mov
adc
pop
and
push
les
add
mov
je,pn
orb
ds
push
icebp
pushl
fdivrs
dec
dec
jnp
adcl
xor
out
aas
pushl
add
and
dec
gs
adc
adc
pop
ror
and
fiaddl
lret
aam
int3
in
les
aaa
mov
pop
pop
mov
loope
jge
mov
pushl
mov
sub
or
or
pop
inc
sbb
xlat
dec
jmp
dec
aam
push
test
inc
lds
out
fistl
scas
dec
mov
mov
outsl
test
and
mov
jmp
dec
mov
cmpsb
int3
insl
xor
nop
ss
pop
cltd
xchg
lods
push
sbb
aaa
push
jmp
jnp
insl
and
cmpsl
adc
lret
test
mov
sub
arpl
les
stos
out
mov
push
mov
loopne
les
push
mov
jle
add
add
loop
and
daa
loope
xchg
cs
push
add
insb
stos
and
mov
fistpl
dec
popf
int3
test
jbe
push
xor
sub
dec
mov
cmp
sub
jae
js
int3
jl
in
push
sbb
iret
aam
mov
pop
cltd
fisubs
mov
xchg
fidivrl
fcmovb
add
clc
stos
arpl
in
out
mov
jmp
pop
in
js
lret
aaa
loop
insb
inc
pop
add
loopne
imul
add
mov
mov
adc
cmp
or
mov
or
addr16
pushf
outsb
out
pop
rorl
jmp
dec
scas
pop
dec
adc
push
xchg
sub
ljmp
cmp
ja
out
xlat
sbb
std
pushl
je
popf
adc
jecxz
mov
dec
scas
insb
or
push
loop
inc
shrb
add
dec
dec
icebp
pop
pop
mov
xchg
movsb
jmp
adc
jmp
fnsave
or
out
jecxz
push
push
pop
mov
lods
or
and
cmpsl
movl
sub
mov
push
sbb
imul
lcall
popf
arpl
adc
movsl
enter
dec
test
adc
xchg
aaa
stos
test
dec
leave
sub
sub
push
aas
push
call
dec
repz
ret
shll
and
jne
jo
or
jo
out
jno
push
addr16
inc
data16
aaa
push
inc
scas
adc
in
adc
pop
mov
fisttps
sub
inc
repnz
mov
arpl
xor
andb
push
clc
fnstenv
mov
adc
and
add
shrl
out
push
or
test
add
sub
sbb
lcall
mov
jge
xorl
adc
xchg
arpl
outsl
push
or
mov
cmp
pop
jae
dec
xor
cld
dec
push
push
push
jmp
or
inc
data16
inc
stos
mov
xor
xchg
sbb
test
into
in
push
inc
or
jb
test
pop
imul
cmp
push
cltd
pop
push
push
xchg
test
jns
jb
pop
out
js
cwtl
add
and
mov
mov
es
mov
mov
dec
jno
fimull
push
adcb
mov
lret
jb
add
adcb
sbb
xor
cmpsl
addr16
lock
mov
inc
fiaddl
add
out
mov
in
fldl
fisubs
add
inc
clc
adc
scas
sti
xorb
jle
ret
and
or
sbb
jg
scas
ljmp
jno
flds
xchg
sub
loopne
mov
fistps
and
add
xor
loopne
fistpll
fucom
sub
test
inc
adc
loop
pop
jo
push
add
xchg
rolb
adc
adc
adc
add
les
mov
and
fiadds
pop
pop
aam
pop
mov
adc
add
leave
dec
inc
orb
loop
test
loope,pn
jmp
pushf
sub
mov
mov
lea
adc
push
nop
test
fdivs
subl
push
add
mull
ss
nop
jg
xor
pop
or
or
imul
int3
call
adc
outsl
push
jl
loope
sbb
outsb
mov
or
inc
out
xchg
mov
inc
lret
lcall
inc
jl
shll
add
rcrb
sbb
aaa
call
add
pop
cmp
mov
xor
add
push
sub
push
or
and
or
call
push
js
ffreep
inc
mov
int3
sub
orb
nop
mul
mov
and
xchg
imul
sub
add
sub
iret
jae
sub
imul
inc
es
out
xor
shl
arpl
lock
leave
dec
adc
mov
xchg
orw
push
pop
es
rcll
movsl
mov
xchg
rcrb
nop
jmp
mov
pop
or
shll
jp
adc
imul
adc
sub
jp
push
adc
adc
mov
or
lea
in
fs
dec
cli
mov
mov
pushf
mov
dec
jge
jns
lahf
in
push
je
mov
inc
fcmove
sub
pop
jl
test
jno
shrl
clc
or
mov
push
dec
dec
and
cmp
mov
sbb
lret
bound
fisubrs
pop
push
xor
lds
add
jp
js
test
xchg
mov
lods
xor
aaa
sbb
int
ljmp
stos
xchg
call
inc
pop
mov
mov
or
xor
sbb
outsb
aad
aaa
sahf
packsswb
shll
pop
mov
repnz
sub
mov
mov
xor
ljmp
andb
in
das
inc
sub
pop
push
sub
outsl
cld
mov
clc
push
dec
dec
jmp
xor
sbb
data16
fistps
cs
sub
mov
push
dec
add
aaa
push
test
fistl
fcoml
sbb
stos
adcl
sub
adc
fwait
das
push
in
xor
and
pop
inc
inc
xor
shrl
mov
lods
add
ret
lock
loop
and
xlat
and
je
or
sub
jg
inc
sbb
lds
das
mov
and
push
adc
or
and
or
push
push
leave
mov
cmpsb
mov
outsl
lea
sarb
pop
test
mov
xchg
cmpsb
pop
ret
sbb
jg
das
mov
inc
scas
outsb
cmc
cli
jecxz
or
sub
lds
pop
pop
pop
cli
mov
loop
pushf
ss
cmc
xchg
ljmp
imul
repnz
icebp
je
mov
fcoml
mov
es
pop
cmp
stos
jo
inc
jl
fists
mov
jp
mov
mov
fidivrs
ja
fwait
jb
sub
jl
add
adc
bound
fildl
adc
cli
inc
aad
dec
das
icebp
inc
mov
sbb
mov
jns
inc
push
add
int3
push
fdivrs
loopne
jl
icebp
shrb
push
test
mov
fstl
pop
stos
hlt
pop
imul
inc
sbb
loope
adc
lods
int
cld
adc
dec
jl
ds
mov
and
push
ret
push
and
add
sbb
loopne
clc
aas
pop
push
ljmp
cli
arpl
sub
jne
outsl
cmp
mov
push
sub
call
addr16
jb
push
in
cmc
icebp
enter
pop
loopne
sbb
arpl
adc
scas
outsb
mov
adc
fbstp
push
test
rcll
cs
orl
call
jnp
testb
jne
xchg
bound
scas
push
dec
sbb
mov
das
insb
inc
cmp
cwtl
xchg
clc
sub
std
testb
dec
out
js
enter
pop
fsubrl
and
mov
sub
decl
push
repnz
jb
mov
or
test
inc
dec
xchg
lcall
je
int3
stos
bound
repnz
push
add
dec
sbb
ljmp
and
sbb
cli
push
add
or
add
push
dec
out
pop
aad
popa
icebp
stc
push
outsb
or
add
adc
mov
pop
add
les
ds
cmpl
and
pop
je
add
dec
arpl
aam
clc
or
int
xor
add
es
push
loop
pop
jle
mov
xchg
enter
or
das
cwtl
lea
jbe
int3
clc
js
mov
and
xchg
not
cld
clc
enter
push
test
scas
fadds
sub
lds
jmp
cmpsb
cmp
sub
sbb
push
int3
test
adc
loop
jp
mov
rcrb
add
iret
mov
ljmp
xor
push
orb
adc
inc
movsb
jle
lret
es
sbb
imulb
pop
out
pop
and
xchg
xor
loopne
test
out
out
clc
rcrl
add
jbe
sub
adc
cmp
push
outsl
and
dec
dec
cmp
push
fsubs
idivl
dec
rorb
enter
aaa
dec
cmp
ret
and
mov
xchg
orb
or
push
mov
or
add
mov
insl
inc
add
push
mov
aad
lahf
stos
xchg
clc
aad
xchg
jmp
push
add
fwait
add
and
adc
arpl
fidivs
enter
push
cmpsl
add
add
jle
sbb
sbb
jg
lret
scas
adc
std
pop
test
or
lahf
adc
and
adc
adc
dec
adc
sub
inc
xchg
fidivrl
fsubrs
dec
push
pop
cmc
jge
cmp
enter
sahf
adc
dec
xor
stos
cmp
push
jecxz
inc
mov
mov
pusha
mov
lods
popf
hlt
sbb
pop
std
movsl
dec
stc
inc
pop
inc
add
or
in
ret
or
clc
je
inc
push
test
xor
sub
outsb
daa
jae
adc
pop
jb
movsl
leave
adc
decl
enter
sub
push
dec
popf
arpl
roll
cmp
inc
or
adc
sub
mov
pop
jne
push
outsl
es
and
pop
in
movsl
iret
mov
loopne
mov
fidivl
lret
ljmp
pop
jbe
xor
aaa
push
jmp
mov
lock
aas
xchg
repz
add
pop
fildll
jl
push
lahf
inc
add
adc
cmp
sbb
ss
aas
dec
imul
arpl
and
push
mov
pop
loop
jne
test
xchg
ret
insb
pop
cld
pop
cmp
mov
dec
pop
cli
pop
add
pushf
sbb
pop
mov
jle
mov
pop
mov
cmp
or
inc
mov
xor
neg
filds
and
out
sub
out
daa
and
lods
out
dec
in
push
pop
sbb
sub
outsl
adc
iret
dec
bound
sbb
xchg
sbb
imul
mov
int3
outsb
jmp
test
fnstcw
cmp
cltd
inc
jns
sbb
rcll
nop
sbb
jmp
loop
mov
mov
pop
cld
push
sbb
scas
popf
pop
sbb
call
push
dec
fistl
jb
scas
dec
mov
testb
flds
mov
fs
adc
jo
int
jns
cmpb
test
add
out
call
inc
jb
adc
ficomps
pop
xor
pop
data16
and
es
aad
jmp
and
pushf
out
out
adc
dec
repz
sbbl
ds
push
outsl
jmp
addr16
xor
nop
jl
pop
push
mov
lcall
les
rclb
lret
das
pop
clc
outsl
adc
mov
movsl
popf
arpl
test
pop
jbe
mov
push
orb
mov
std
aaa
out
mov
imul
or
orb
subl
xlat
jge
cltd
xchg
add
mov
ret
hlt
pop
decb
cs
daa
xchg
lods
push
out
jg
pushl
test
jle
add
bound
mov
pop
leave
pusha
popf
pusha
add
xor
push
mov
shl
pop
enter
add
icebp
pop
lea
adc
test
scas
sub
sub
or
mov
cmp
sbb
mov
and
adc
pushf
inc
in
test
mov
mov
mov
stc
adc
lahf
xor
test
sbb
dec
sbb
fistpll
lock
rcrl
push
mov
add
imul
loope
and
insl
out
push
fwait
aas
imul
or
inc
push
insl
movsb
test
cmpsl
lcall
stc
mov
jmp
dec
adc
jl
inc
mov
clc
outsl
mov
into
xchg
jp
sub
repnz
and
and
sbb
xor
inc
pop
and
or
fistl
out
jae
push
les
aad
mov
mov
inc
jp
jae
pop
in
sub
fisttpl
aas
stos
inc
filds
mov
int3
lcall
imul
icebp
das
fs
mov
sbb
out
pop
mov
and
ret
jle
in
pop
in
popa
icebp
dec
es
pop
or
and
adc
xchg
ljmp
xor
lock
sub
adcb
inc
aad
and
mov
pop
mov
in
aaa
add
xor
adc
push
loopne
mov
pop
clc
jl
cmp
pop
aam
add
pop
sbb
add
mov
cmp
or
arpl
sub
or
xor
imul
and
push
mov
xchg
and
adc
xchg
sub
int
cvtpi2ps
adc
leave
pop
and
in
pop
ds
push
cmp
dec
jge
mov
and
imul
out
pop
push
mov
sti
icebp
add
xor
into
adc
and
pop
push
out
sub
pusha
inc
push
inc
sbb
sbb
ret
sarl
inc
xor
and
fwait
add
inc
add
and
xor
std
and
leave
xorb
stos
pop
mov
pop
xchg
cmp
pushf
mov
mov
lods
xor
mov
add
jbe
add
pushf
or
repz
popf
jo
pop
ja
and
xchg
js
decl
pop
sub
dec
subb
loopne
pop
dec
scas
dec
mov
lret
icebp
push
add
test
jo
lods
adc
push
test
mov
ret
rcr
cli
sub
icebp
lods
push
dec
out
cmc
sub
and
mov
inc
sti
push
mov
sbb
sub
and
jl
xor
sbb
adc
lahf
loop
scas
jnp
jle
mov
and
rcrl
into
addb
lahf
jb
mov
scas
out
mov
popa
cmp
jp
inc
out
out
sub
cli
sbb
cmpb
clc
xchg
mov
mov
or
or
push
jmp
lcall
adcb
sub
pusha
add
jmp
jle
lods
scas
repz
pushf
mov
movsl
scas
cmpsl
imul
and
lcall
inc
sub
inc
push
loop
adc
push
movsl
and
lods
pop
mov
test
repnz
test
xchg
or
leave
cmp
push
aad
fstpt
loopne
sub
inc
loopne
lret
add
rorb
xchg
clc
jg
test
jl
aad
pop
cmp
add
xor
mov
pop
cmp
pop
jo
mov
outsl
rcll
cmp
push
add
shrb
lea
test
lret
xchg
and
loopne
je
inc
fwait
imul
pop
insb
nopl
push
fsub
fs
xchg
pop
addb
imul
mov
dec
scas
add
lea
xchg
stos
xchg
cmpsb
xorl
lods
repz
mov
mov
push
mov
hlt
mov
fdivl
daa
or
scas
in
mov
lret
inc
stc
or
cmp
aam
fcmovnbe
jmp
ret
sti
sub
fmuls
les
mov
pop
push
daa
mov
fdivs
data16
push
mov
cmpsl
pop
test
lea
lret
data16
daa
or
xor
pop
clc
in
in
mov
popa
sbb
inc
lret
and
or
push
addl
jb
stc
jbe
lea
jno
jae
iret
cli
rorl
or
outsl
push
mov
add
cmpsl
pop
mov
dec
mov
sbb
pop
pop
jl,pn
push
fwait
mov
cs
or
cmp
fistpll
sbb
mov
subb
mov
bnd
ja
jp
in
mov
data16
jb
mov
lea
sbb
in
inc
or
adc
mov
push
cltd
inc
mov
call
nop
or
rcl
add
add
push
rol
incl
add
and
cmp
dec
fdivr
push
pusha
and
xchg
inc
shr
mov
push
cltd
mov
jecxz
push
xchg
push
mov
setns
jmp
xchg
cli
push
cltd
sbb
and
das
in
test
pop
xchg
adc
jecxz
add
lcall
mov
lahf
lret
popa
mov
std
add
mov
pop
mov
jbe
in
xchg
test
mov
stos
mov
push
pop
pop
push
lcall
mov
ds
movsb
cli
js
adc
mov
lock
push
mov
in
jg
fstl
int3
pop
jmp
sbb
iret
add
jle
cs
mov
ljmp
out
daa
mov
ja
xchg
mov
push
call
cmpsl
or
or
add
insb
add
pop
inc
stos
jne
mov
fistl
mov
gs
scas
xrelease
mov
pop
pop
xorb
pop
inc
cld
mov
or
sbb
inc
mov
cmp
test
mov
push
mov
jge
mov
adc
loope
mov
sahf
cmpsl
stos
int
jo
cmp
sbb
xchg
jns
xchg
mov
loope
je
adc
sub
or
xchg
enter
outsl
cmp
xchg
mov
cmp
loope
mov
fildll
mov
jns
dec
and
pop
lock
jmp
lds
push
inc
jo
xchg
xchg
outsl
call
xchg
pop
push
push
orb
cmp
lock
stos
pop
mov
fcompl
sbb
mov
mov
mov
add
aam
out
adc
mov
dec
and
inc
ret
add
add
and
stc
rorb
inc
xor
pop
sbb
test
cmp
bound
in
or
pop
or
mov
ljmp
add
sub
fisttps
add
add
outsl
loopne
lea
inc
mov
es
push
or
pop
and
pop
add
shl
mov
pop
sbb
into
out
inc
stc
test
sub
jnp
test
xchg
ljmp
and
push
adc
loope
ds
sarb
add
shrl
and
js
lcall
sahf
mov
push
mov
out
loop
mov
loopne
cwtl
adc
es
and
add
loopne
add
sbb
rorw
jbe
es
sub
enter
test
icebp
or
gs
in
test
orb
loopne
pop
mov
push
daa
inc
loope
sub
in
jae
push
push
and
push
bound
add
dec
add
in
orb
adc
xor
fimuls
sbb
dec
jae
fadds
xor
sub
aas
lret
scas
push
int3
lcall
inc
inc
sub
pop
rcr
pop
and
pop
push
mov
xchg
push
xchg
push
add
jmp
xor
sbb
adc
enter
adc
ret
jg
in
mov
dec
fs
fisttps
rolb
add
inc
xchg
and
faddl
sahf
jb
and
sahf
aad
mov
orb
lds
push
and
inc
in
mov
pushf
adc
dec
jnp
add
fiadds
jb
add
pop
push
or
mov
les
pop
jno
pop
lret
ret
mov
pop
adc
sub
dec
add
adc
sub
sahf
xchg
imul
add
pop
out
jbe
cmp
adc
fstpt
inc
sarl
cmp
xor
cmp
hlt
or
andb
inc
or
pop
xchg
mov
push
xor
arpl
mov
leave
cwtl
ret
pop
mov
pushf
dec
nop
gs
push
sbb
pop
dec
mov
icebp
das
push
or
push
ja
pop
add
outsb
mov
insl
push
inc
jae
pop
mov
xchg
mov
pop
pusha
adc
lock
jb
push
test
js
inc
push
push
and
push
lret
call
mov
sbb
adc
add
bound
dec
pusha
insb
mov
fildl
cmpsl
dec
in
mov
mov
or
or
add
jecxz
and
cmpsb
lret
add
add
xlat
inc
enter
fst
in
loop
js
mov
xchg
and
adcb
cwtl
mov
fidivl
js
add
dec
or
pusha
cmp
mov
fistps
sar
out
ja
shlb
cmpsl
mov
fsubr
mov
mov
mov
sbb
xchg
imul
mov
xor
pop
stos
mov
fists
in
icebp
xchg
pushf
xor
sbb
push
rol
mov
cs
dec
cmc
lahf
xor
or
fldenv
add
lods
sub
add
leave
mov
cmp
mov
xchg
or
and
int3
push
lcall
cmp
add
and
test
xlat
mov
add
add
pop
cmpb
fldl
mov
scas
sbb
loop
fldt
outsl
push
xchg
mov
test
fsubl
std
ljmp
popa
ret
sub
sbb
dec
xchg
xor
add
in
fldt
std
das
stc
movsb
jcxz
push
jge
arpl
test
push
mov
inc
pop
push
sub
movsl
movb
aam
mov
mulb
loopne
add
or
inc
shlb
lret
adc
fstpt
dec
adc
mov
mov
stc
sbb
adc
push
rcrl
lea
incb
test
fstl
jg
in
repz
adc
inc
jne
xor
out
fwait
mov
xor
jmp
popa
mov
nop
not
mov
lret
in
adc
cltd
dec
or
jle
and
sub
mov
insl
mov
add
insb
add
out
cmp
push
sub
jb
fwait
sbb
or
out
add
mov
inc
and
in
jno
es
fisttpl
hlt
cld
and
cmp
inc
sbb
xchg
fstpl
ficomps
imul
ja
mov
sub
lcall
lcall
cmp
xchg
or
mov
enter
sub
pop
imul
dec
cwtl
mov
mov
lea
movsl
mov
mov
sbb
movsl
cmp
aam
shll
fst
sarl
sbb
add
sub
imul
imull
inc
xchg
and
sahf
mov
push
sbb
pop
in
adc
test
pop
push
andl
insl
stos
or
popf
shl
push
sub
mov
xchg
xchg
enter
mov
adcb
shll
or
out
add
pop
or
push
dec
xchg
movb
sti
mov
leave
jae
mov
fiaddl
inc
and
sar
mov
and
push
out
imul
shld
mov
adc
lcall
push
mov
add
sub
pushf
inc
stc
xchg
inc
pop
outsb
pop
mov
push
int3
cli
adc
jg
pop
lret
push
dec
inc
or
movl
cmc
jg
sar
inc
and
cwtl
push
mov
pop
int
pusha
push
loope
or
nop
jl
std
ljmp
push
in
push
mov
cmp
aaa
mov
push
mov
std
adc
adc
adc
jno
push
ljmp
jge
jno
dec
ljmp
leave
lret
mov
data16
dec
ljmp
std
add
pop
aas
gs
and
cwtl
sbb
fwait
divb
lcall
push
lret
cmp
xor
xchg
stos
mov
mov
aas
jecxz
lcall
sub
enter
push
cmpb
mov
ljmp
aaa
jp
fmul
jno
dec
imul
enter
cmpsb
lcall
arpl
cld
andb
into
test
pop
sbb
mov
sbb
mov
add
and
mov
repz
dec
add
xor
jg
ret
bound
adc
dec
push
in
mov
mov
sbbl
pop
xlat
jmp
xchg
jae
adc
lret
or
insb
cmp
jae
mov
mov
fisubrl
xlat
bnd
push
bound
pop
aas
or
ljmp
clc
add
lcall
xchg
mov
sarl
aam
inc
mov
ds
pushf
adc
cmp
sbb
and
mov
adc
add
cltd
mov
mov
aad
icebp
and
jecxz
pop
repz
inc
mov
jp
sti
lret
mov
sub
or
inc
mov
inc
push
sbb
dec
dec
icebp
aaa
mov
dec
bnd
adc
rolb
aas
xchg
xor
push
mov
sub
add
ss
push
xchg
sub
xor
lods
in
out
add
aad
jecxz
jmp
mov
sbb
add
sti
dec
rcrl
or
lret
add
mov
cli
mov
inc
push
orb
sub
add
inc
adc
inc
jge
cmc
fdivs
jo
sbb
adc
mov
pop
hlt
mov
dec
idiv
adc
dec
in
jmp
push
in
lods
or
inc
cli
decl
pop
or
in
jo
jne
and
test
xchg
mov
outsb
jge
std
test
dec
pop
fists
lock
xchg
sti
fbstp
add
movsb
or
lcall
lret
pop
decl
sub
das
cmp
mov
mov
sbb
in
hlt
fs
inc
mov
pushf
inc
pusha
push
mov
or
cmc
inc
stos
test
mov
loope
shl
loope
ret
mov
xchg
ret
mov
xchg
ljmp
shrb
mov
out
xchg
stos
sarb
jo
sbb
mov
adc
mov
and
inc
cmp
scas
adc
dec
mov
sbb
imul
sar
psrlq
mov
std
cmp
sbb
lea
cmp
jo
fcmovnu
push
xor
fstps
std
fildll
dec
add
flds
adc
jp
lret
iret
mov
sub
mov
mov
pop
sti
pop
sti
sub
in
daa
in
adc
rolb
ja
mov
test
xchg
sub
xchg
jno
call
or
arpl
bound
mov
sti
movsb
xor
xor
push
push
aad
or
sti
pusha
and
adc
je
inc
mov
or
rorl
jge
ss
loop
mov
jnp
mov
cmpsb
mov
lock
mov
rorl
jl
mov
test
aad
xor
clc
mov
mov
cmp
add
add
xorb
dec
sbb
enter
mov
add
data16
pop
cwtl
lds
inc
pop
xchg
es
cwtl
fdivrs
jbe
sbb
ss
das
ds
insl
imul
shrl
or
les
sub
inc
rcll
or
jp
mov
jbe
push
int3
xchg
or
inc
jmp
arpl
ss
cld
dec
popa
outsl
js
mov
js
loop
mov
shrb
push
or
and
dec
adc
sarl
pop
inc
ja
aam
or
mov
pop
and
in
and
xor
jl
js
fisubrs
push
xchg
xor
fsubrs
lea
jge
mov
es
adc
adcb
loop
test
mov
and
bound
add
sub
xor
je
mov
retw
mov
or
stos
pop
mov
adc
mov
mov
mov
lods
xlat
pop
and
add
lret
and
mov
loop
ror
inc
xor
or
inc
xor
dec
sbb
rcll
xor
sbb
fs
add
rcl
jge
sbb
ljmp
shrl
out
popa
not
pop
stos
aaa
dec
add
mov
in
lods
ss
push
mov
mov
nop
or
ja
js
arpl
stos
or
popf
jb
orb
out
and
and
dec
and
sub
test
shll
mov
pop
jo
in
lret
sub
addl
lcall
or
cli
ja
xchg
and
loop
ret
aas
mov
or
fcompl
sbb
jbe
test
or
sub
movsl
xlat
fldt
lock
fs
push
dec
lcall
jg
lahf
add
cmp
aas
cmp
mov
and
popa
jecxz
inc
das
pop
pop
loop
insb
and
or
lcall
jbe
pop
mov
inc
push
xchg
hlt
outsl
dec
adc
jae
adc
clc
or
cmp
mov
xor
cli
push
int
mov
inc
mov
push
ret
sbb
dec
sub
repz
bound
rorl
cmp
add
bound
inc
out
adc
hlt
push
lods
push
mov
rorb
fcomip
ret
test
inc
call
outsl
cmp
mov
int3
mov
cmp
outsl
mov
jge
popa
sbb
dec
push
incl
int3
add
test
cmp
pushl
sahf
pop
lock
add
xor
and
push
lock
and
hlt
int
hlt
lcall
and
movsl
insb
lahf
add
addl
ljmp
xchg
call
and
xchg
sub
rclb
jns
cmpsb
and
sub
jmp
push
fldenv
rorl
inc
mov
lock
push
lods
or
jmp
mov
push
ja
leave
push
or
leave
scas
rol
fiadds
out
and
push
test
add
push
sti
pop
mov
rorb
xchg
in
or
adc
mov
inc
mov
cld
push
andl
fdivrs
xchg
cltd
aas
gs
hlt
das
and
les
add
ja
adc
scas
and
add
push
xor
pop
jmp
icebp
test
add
mov
add
dec
addr16
roll
fwait
roll
xor
adc
jecxz
inc
or
sarb
pop
jge
xlat
es
fistpll
add
lock
and
sbb
mov
mov
inc
pop
dec
sbb
out
push
pusha
in
shr
jo
mov
cs
cltd
and
jne
sub
push
mov
std
adc
or
sub
sub
dec
shr
jns
hlt
sub
int
mov
and
mov
iret
hlt
and
movl
scas
stos
das
jp
inc
mov
rcrb
sbb
prefetch
or
mov
add
xorl
subl
sub
shrb
test
call
add
hlt
cmp
ret
inc
sub
rcll
add
push
push
xor
test
mov
push
and
dec
imul
cwtl
pop
aaa
adc
testb
cli
ret
lds
call
jmp
adc
inc
push
and
or
aaa
cmp
in
or
lock
fcoml
xchg
in
inc
push
push
cs
add
lock
sub
xor
mov
and
es
pop
xor
mov
cmpsl
sbb
lock
add
ror
roll
or
mov
cwtl
jnp
mov
or
or
mov
out
ljmp
hlt
loope
rcll
sub
adc
jo
insb
pushl
add
fst
cwtl
jecxz
lds
mov
andb
cmpsb
lret
xor
fcmove
fs
dec
lcall
pop
push
cmpsl
xchg
fdivrs
lcall
mov
movsb
dec
xchg
ljmp
inc
inc
pusha
push
ffree
hlt
mov
fistpl
stos
dec
lcall
ret
frstor
test
fs
scas
mov
or
and
cltd
mov
and
jo
das
jge
mov
call
fsub
dec
ja
sbb
outsb
adc
rcl
iret
clc
clc
es
jl
inc
subb
std
dec
mov
add
in
push
icebp
mov
cwtl
mov
adc
aad
ljmp
cmp
sar
es
orb
xchg
sbbb
or
push
sbb
movsb
adc
sbb
loopne
loope
mov
cmc
push
fldcw
cli
pop
imul
fs
aad
jns
inc
mov
push
add
lret
subl
add
pop
std
xchg
inc
cwtl
lcall
into
cmpsl
pop
sub
incb
jne
push
arpl
pop
or
mov
out
lret
ds
add
or
mov
and
pusha
movsb
mov
mov
jl
loop
int3
inc
push
fsubrs
push
lock
mov
push
arpl
movsbl
dec
jle
jae
cmp
inc
lock
dec
je
adc
clc
sub
icebp
lods
xchg
mov
jle
in
mov
es
adc
jnp
mov
mov
and
dec
pop
adc
call
cld
js
sub
cmp
mov
sub
mov
icebp
sub
xchg
mov
hlt
call
mov
cltd
inc
mov
roll
add
sti
xor
add
cli
dec
in
lcall
decl
jne
leave
ret
mov
add
xor
xor
jge
popa
or
je
shll
push
jg
outsl
adc
sbb
loopne
inc
add
xor
sbb
iret
std
xor
push
shr
aas
fcomps
insl
push
dec
das
aaa
add
and
loopne
fsubp
adcb
dec
movsl
sub
call
add
out
clc
sbb
lret
push
and
dec
ret
aad
lret
rolb
mov
lcall
mov
mov
dec
or
sbb
fs
inc
jne
or
ret
cld
std
sbb
fldenv
or
push
cwtl
or
addb
clc
mov
test
and
fs
sub
es
cltd
fsubrs
sbb
orb
jecxz
cli
icebp
jl
int
dec
inc
xor
inc
pop
js
inc
out
cmove
dec
cmp
mov
fsubs
mov
in
dec
jmp
repz
sti
incl
mov
or
dec
cmc
sahf
mov
or
aad
cld
inc
pop
aad
test
insb
add
sbb
test
cmp
aam
cli
adc
add
sub
enter
add
mov
sub
iret
nop
jae
xchg
xor
sbb
sub
pusha
adc
fidivrl
mov
clc
jg
int3
sub
pop
mov
repnz
shll
xchg
mov
pop
fldt
jmp
fwait
pop
push
and
mov
imul
in
mov
sbb
xor
popa
or
xor
addr16
push
mov
call
mov
push
daa
cltd
movsl
shll
or
mov
xor
enter
call
dec
insl
imul
inc
lcall
pop
pop
add
mov
pop
and
sti
movsl
imul
inc
decl
dec
sbb
xor
out
adc
xchg
xlat
hlt
mov
outsl
pop
dec
cmc
xor
cmp
and
push
mov
pop
test
xchg
jae
mov
xlat
cmc
jg
pop
xchg
sarl
and
jno
pop
fisubrl
push
and
inc
out
call
xchg
dec
fldt
fneni(8087
mov
pop
cld
mov
adc
push
or
rol
arpl
and
sbb
mov
cwtl
and
outsl
jne
test
jne
out
push
mov
std
lock
sub
mov
push
pop
cmp
or
inc
pop
rcl
es
pop
loop
lcall
sub
push
pop
xor
outsl
pop
fdivl
out
mov
popa
ds
push
outsl
in
cltd
gs
xchg
roll
add
cld
scas
and
das
je
or
lcall
mov
das
add
lret
je
add
das
insl
in
xchg
sub
aaa
ljmp
and
call
push
sti
dec
dec
dec
loope
shll
subb
mov
lret
mov
out
jmp
je
test
imul
fildll
mov
push
or
jmp
or
dec
sub
inc
inc
mov
mov
mov
adc
in
jg
imul
js
mov
jbe
jmp
push
stc
mov
clc
stos
adc
cs
aam
push
push
pop
test
dec
hlt
push
leave
dec
call
lret
mov
repz
lods
cmpsl
inc
aas
jmp
fldl
fistl
inc
add
rorl
push
pop
and
sub
or
shll
scas
xchg
fisttpll
sarl
movsb
pop
pop
int3
loop
add
cmp
mov
and
pop
cld
push
pushf
inc
icebp
sbb
push
pop
out
mov
out
data16
or
call
call
cmc
add
loope
faddl
mov
sahf
sbb
in
push
inc
es
mov
negb
je
fdiv
adc
cmp
fldcw
dec
xor
jp
call
sub
aaa
jo
sbb
out
faddl
inc
adc
add
dec
or
mov
adc
or
mov
test
inc
ret
das
adc
dec
add
xchg
ljmp
push
pushf
and
bound
shlb
pop
or
add
xchg
add
xchg
pop
cmpb
mov
jo
sbb
add
push
lods
push
cmp
cmp
sub
push
loopne
lds
inc
adc
jg
rcl
lods
push
dec
lock
add
xor
lock
les
clc
cmp
push
ret
sub
insb
filds
and
or
sub
adc
in
test
mov
fdivl
imulb
mov
xchg
pop
mov
inc
cmp
out
in
shrl
lcall
andl
ljmp
test
or
fstps
movsl
lret
fcoml
push
loop
cmp
or
lock
sbb
adc
mov
add
icebp
in
inc
pop
adc
jp
add
add
bound
lret
xor
and
inc
mov
insl
rolb
adc
add
insb
inc
xor
lock
cmp
mov
add
aad
xor
shrl
clc
repnz
dec
add
ret
mov
xor
orb
loope
or
ficomps
sbb
dec
add
sub
xor
add
and
sub
pop
and
jae
add
fstl
lcall
inc
mov
add
addb
mov
sub
and
ds
rclb
cmc
call
mov
orl
push
xchg
fwait
xor
jo
pop
sub
jo
sbb
sbb
icebp
add
mov
outsl
ljmp
repz
jp
fiaddl
stos
push
xor
jb
lock
popf
xchg
shlb
repnz
ljmp
je
lock
test
les
mov
pop
mov
xlat
repz
sbb
add
addr16
outsl
rcl
adcl
pop
dec
add
lods
dec
pop
jge
mov
push
push
repnz
movsl
pusha
and
das
out
cmp
adc
repz
jl,pn
decl
pusha
lcall
es
cmp
push
mov
sub
pop
mov
pushf
adc
pop
gs
jno
jae
bound
inc
jmp
sbb
sub
dec
icebp
adc
and
out
sbb
aad
sbb
filds
inc
inc
add
aam
clc
dec
fsubr
rclb
mov
popf
fs
inc
adc
mov
xlat
int3
cli
into
xchg
mov
icebp
inc
test
and
out
pop
adc
xchg
push
push
inc
insl
mov
stc
mov
jp
fdivr
cmp
es
shl
in
loopne
in
mov
adc
mov
jge
outsb
das
inc
adc
sbb
mov
jecxz
mov
ret
sub
jp
lds
in
cld
call
xchg
lea
nop
popa
sub
faddl
icebp
or
mov
cmp
jns
jecxz
lret
dec
test
stc
mov
jo
mov
push
mov
mov
rcl
lret
mov
outsl
fbstp
fcompl
cmp
les
dec
mov
pop
mov
xor
push
xchg
adc
sbb
lods
fwait
iret
insl
mov
adc
lcall
cmp
scas
or
mov
xchg
cli
outsl
push
mov
mov
in
xlat
fcoms
aaa
mov
scas
in
out
nop
jb
call
mov
test
sbb
bound
or
xchg
xor
imulb
testb
mov
gs
mov
nop
cltd
addr16
inc
cmp
mov
xchg
push
xor
mov
insl
test
lock
push
shr
or
ret
push
dec
sar
adc
data16
lods
clc
inc
clc
xor
mov
dec
in
cli
push
clc
mov
push
in
pop
fwait
add
les
cld
outsl
dec
mov
inc
iret
sub
sub
or
adc
clc
lea
push
pop
mov
or
add
decl
pop
xchg
pop
ret
cmp
mov
repnz
aad
lcall
cwtl
dec
add
adc
mov
add
jb
test
jmp
push
je
or
lea
sbb
lret
pop
xor
inc
dec
or
or
inc
dec
cmp
mov
add
das
jp
outsl
ljmp
ret
repz
add
pop
push
sbb
getsec
xchg
stc
movsl
mov
mov
das
sub
mov
inc
sbb
es
cmpsl
mov
xlat
mov
incl
sbbb
cmpsb
and
inc
int
mov
adc
cld
inc
ret
add
sbb
es
sbb
nop
jmp
dec
push
nop
xchg
ljmp
and
pushf
push
jmp
mov
aad
arpl
loop
xor
es
lret
icebp
fnstenv
and
ret
pusha
insl
stos
push
loopne
mov
cmc
add
xchg
iret
inc
inc
push
int3
ret
sysexit
fidivrs
jo
add
outsl
pop
testb
push
xchg
pop
ss
inc
test
add
cmpsl
push
sub
push
jp
mov
add
pop
loope
xlat
adc
incb
es
movb
xor
push
shr
or
test
mov
jp
call
sbb
popf
xor
test
or
mov
lods
adc
adc
jg
ja
loope
nop
push
push
and
cwtl
mov
xchg
ret
stos
mov
ret
das
jbe
sti
nop
out
add
add
pop
cmpsl
test
dec
aad
push
enter
mov
addr16
arpl
ljmp
sarl
or
push
adc
loope
std
shll
sub
cmc
jnp
xchg
cld
inc
or
lcall
xchg
xor
cmpb
cmpb
cmp
cmpsb
push
cmpb
push
insl
fistpl
int
xor
push
jmp
pop
xchg
rcrl
or
jl
imul
into
push
iret
call
mov
scas
je
call
sub
in
js
pop
and
mov
push
shll
gs
jmp
add
inc
adc
pop
jnp
les
lret
add
das
ret
push
and
adc
js
dec
test
sahf
adc
or
pop
jnp
cli
mov
imul
mov
pop
call
push
inc
add
or
mov
fiaddl
or
loop
clc
or
xlat
addr16
sub
jbe
mov
test
aam
and
popa
sub
lds
push
xchg
or
test
ds
add
and
outsl
aad
mov
mov
cltd
xor
or
add
and
imul
jg
push
test
aad
mov
cltd
jns
jbe
push
mov
jmp
xor
divl
std
jmp
icebp
fcmovb
in
decl
inc
push
outsl
inc
inc
push
sbb
lcall
push
pop
add
imul
addl
imul
pop
insb
scas
add
sbb
test
xchg
and
addb
inc
add
dec
xchg
outsl
lock
jp
jo
push
mov
clc
inc
outsb
inc
sbb
jnp
or
mov
mov
daa
dec
add
bound
pop
pop
clc
pop
fisttpll
adc
mov
iret
clc
clc
shll
adc
or
mov
xchg
mov
mov
lock
sahf
mov
shlb
lds
push
sub
add
mov
loop
pop
lock
imul
mov
add
xor
add
pop
push
sti
sbb
dec
mov
decb
and
aaa
push
sub
jnp
movsl
dec
pop
adc
mov
mov
cld
jno
rclb
inc
jnp
or
aas
repnz
pop
adc
daa
bound
fadds
push
outsl
xchg
fists
adc
out
aaa
and
sbbb
mov
pop
rcll
sbb
adc
lock
dec
shl
cwtl
sub
mov
add
mov
jp
inc
and
and
cmp
shr
mov
sub
call
and
lret
fstpt
mov
add
aad
sub
jb
inc
subb
ljmp
mov
lock
mov
lods
stos
lcall
les
je
mov
jp
mov
push
mov
inc
jmp
lcall
daa
adc
das
notl
mov
jbe
dec
test
push
or
mov
or
nop
add
in
push
addr16
push
cs
jmp
mov
or
jne
or
or
add
stc
lds
sub
negl
repnz
xchg
mov
push
dec
pop
lds
adc
subl
xchg
jp
push
je
cmp
hlt
das
sbbb
or
fsubs
or
xchg
xor
fnsetpm(287
sub
pop
daa
stos
xor
cmpsl
push
shl
sub
les
push
mov
xchg
out
movl
xchg
ret
daa
stos
fs
in
push
and
push
xor
rorb
lret
test
pop
repnz
ss
push
pop
ljmp
scas
pop
or
sar
adc
add
cmpsl
sbbb
mov
sub
xor
jno
test
loopne
pop
movsb
sub
adc
adc
and
lods
dec
cmp
jne
sub
rolb
loope
sbb
sub
push
ficompl
andb
add
aam
mov
adc
pushf
test
and
lds
popw
fwait
adc
lods
jmp
cmpsl
stos
inc
mov
stc
cmpsb
pop
add
push
in
mov
inc
xchg
loopne
xchg
cs
mov
pop
lahf
add
js
ret
mov
adc
adc
cmp
std
mov
and
xor
add
jb
sarb
jbe
xchg
jbe
push
mov
inc
int
adc
rorl
push
les
mov
jbe
mov
add
icebp
inc
fs
scas
and
and
ds
or
inc
mov
outsl
idivb
aaa
cmp
xor
dec
or
das
shrl
cmp
fwait
mov
mov
ror
inc
jl
out
mov
mull
push
or
lea
mov
mov
push
cmp
xchg
mov
fisttpll
js
in
pop
fdivrs
ljmp
push
add
mov
sub
enter
jbe
in
adc
adc
fiadds
fdivs
test
sbb
out
cmpb
and
mov
adc
sbb
sarl
dec
push
aad
mov
push
cmc
notb
inc
mov
add
dec
and
or
aam
mov
rorl
mov
ret
adc
add
mov
gs
mov
inc
mov
ret
ljmp
fildl
mov
faddp
sbb
ja
rcr
mov
js
pop
mov
adc
loopne
rol
roll
push
imul
push
shll
pop
jbe
loopne
in
inc
or
adc
or
mov
sub
popf
push
jb
jl
adc
sti
dec
jecxz
mov
fildll
sub
pop
push
cld
pushl
xlat
sbb
add
mov
xor
push
cli
adc
inc
cltd
and
lea
cmc
xor
pusha
or
mov
jo
cmp
jg
fnstsw
adc
or
in
mov
hlt
adc
into
imul
and
add
mov
iret
std
sbb
sbb
and
pop
mov
mov
stos
adc
inc
lcall
cmp
push
add
lret
mov
fs
rorb
ja
outsl
add
mov
or
jecxz
jno
or
test
lock
mov
inc
ljmp
je
pop
faddl
cmp
mov
add
cli
push
xor
cmpsl
cltd
pop
mov
or
addr16
bound
les
mov
xor
add
mov
sbb
mov
das
icebp
mov
call
outsb
xchg
imul
shll
mov
nop
xchg
dec
sbb
loop
pop
enter
js
pop
idivb
xor
pop
int
mov
add
mov
loopne
fwait
push
sub
aad
test
mov
xor
aad
les
dec
fiadds
add
pop
jg
or
jg
mov
clc
mov
inc
jb
dec
int
push
dec
xor
inc
adc
iret
cmp
sub
in
outsl
out
sbb
scas
std
xor
pop
mov
mov
cs
pushf
push
inc
notb
adc
jmp
push
xor
das
cmc
negb
and
pop
or
add
loop
negb
imulb
jecxz
add
push
pop
push
cvtps2pi
sbb
xor
call
or
adc
mov
shl
andl
std
jbe
sub
and
gs
inc
push
cmp
pop
add
adc
je
dec
mov
jnp
mov
or
out
mov
in
inc
lret
bound
jmp
inc
gs
fcoml
push
out
loopne
clc
repz
jle
in
or
push
push
xor
ds
push
stos
je
pop
dec
arpl
add
mov
out
xor
xor
sti
es
xchg
sarb
add
les
push
das
cltd
mov
xchg
in
inc
push
daa
mov
xor
push
pop
sar
sbb
mov
movsb
addb
pop
icebp
or
cld
jne
movsb
out
js
jbe
sbb
data16
add
mov
jns
push
roll
in
fldl
and
fsubp
cmp
or
jno
and
inc
jns
ret
mov
ss
add
inc
add
rolb
or
daa
xchg
pop
sbb
push
out
mov
adcl
push
lds
test
and
or
or
push
add
sbb
xor
jne
jl
sub
sub
aad
push
jl
in
fstl
fldl
and
jae
rcll
loopne
test
mov
push
mov
es
add
mov
push
lock
adc
mov
dec
jle
clc
push
fisttps
sbb
pop
nop
in
in
add
xorl
lret
cli
js,pn
jmp
aad
mov
or
outsb
jo
push
mov
xor
sub
xor
mov
mov
or
sub
jg
xorl
std
or
mov
sarl
out
jo
lock
mov
mov
or
pop
pusha
cmp
or
pop
sub
pusha
push
and
sbb
push
mov
imul
imul
sub
or
mov
dec
jnp
ja
addb
cmp
xchg
or
dec
push
fwait
or
adc
jae
xor
inc
add
mov
nop
jl
lods
loopne
xchg
pop
mov
fisttpll
fidivrs
movsl
inc
inc
mov
mov
js
imul
jecxz
lods
add
lret
sub
jmp
js
dec
lea
lcall
adc
std
jmp
call
mov
ret
test
inc
adc
insb
hlt
or
dec
jg
jo
adc
out
dec
mov
add
enter
adc
xchg
xchg
add
dec
lock
inc
xlat
cmpb
mov
shrl
flds
aam
pushf
xchg
jb
dec
cwtl
mov
jo
and
test
adc
lds
and
inc
mov
push
cpuid
sbb
mov
mov
cli
cmp
adc
xchg
outsl
pop
fwait
pop
ret
adcb
popf
mov
cmc
and
mov
test
gs
fsubr
mov
rcll
jne
jns
ja
outsb
adc
push
scas
pop
es
mov
in
lock
jge
rorl
dec
filds
dec
pop
dec
mov
mov
pop
rorb
jbe
cs
inc
jge
repnz
dec
hlt
xchg
inc
ds
addr16
sarb
mov
cwtl
div
test
lods
push
or
jg
xor
adc
adc
pop
push
pop
xor
inc
jle
xchg
cli
add
pop
std
and
popa
jae
jle
cmp
sbb
or
mov
in
lcall
mov
fwait
or
cli
adc
mov
add
add
popa
jecxz
aaa
out
cmpsb
push
push
ds
in
lea
jno
iret
cmp
jge
sub
or
sub
jecxz
dec
jno
clc
mov
jne
and
jl
loop
fbstp
xor
fnstsw
mov
imul
or
imul
outsb
test
inc
xor
lods
jecxz
sub
sarb
xor
fucomi
add
add
push
repnz
stos
lcall
mov
pop
ds
inc
das
adc
mov
test
and
faddl
push
sbb
cmpb
xchg
lods
cmp
and
lock
jmp
shll
inc
mov
sub
cmpb
pop
mov
fidivl
mov
leave
push
and
pop
and
ljmp
add
xchg
pop
mov
and
into
dec
cmp
iret
repnz
pop
and
icebp
jg
inc
leave
xor
enter
add
add
jle
insl
mov
test
dec
push
mov
or
xor
neg
dec
push
sub
test
adc
add
dec
inc
mov
dec
es
loop
std
inc
mov
xchg
leave
sub
pop
fwait
mov
xor
add
mov
mov
inc
movsb
out
fistpl
out
lahf
orl
push
xchg
push
mov
out
cmp
fisubs
jmp
mov
out
sbb
lea
fldenv
orl
add
push
in
push
lahf
add
mov
loopne
cltd
dec
rorb
sbb
insl
ja
pop
inc
and
push
and
mov
rol
daa
ds
aas
push
adc
outsl
das
sbb
out
pusha
sbbb
lds
lock
sbb
push
ja
mov
push
gs
sbb
aad
icebp
push
mov
lods
cmp
jno
ljmp
in
jbe
push
mov
cmc
cltd
and
dec
out
push
mov
or
nop
xchg
mov
sub
jne
lods
mov
loope
sahf
lock
ffreep
sbb
mov
mov
pop
loopne
push
je
lods
sti
addr16
test
dec
cmpsl
pop
faddl
and
xor
mov
push
cmp
mov
and
add
jns
jae
push
or
mov
jmp
or
outsl
lds
ficoml
push
inc
das
dec
pop
mov
pusha
push
sub
mov
mov
gs
mov
sub
lds
out
roll
clc
popa
pop
arpl
jno
push
call
jle
sub
subb
clc
pop
sbb
xor
dec
pop
mov
or
xor
push
stos
dec
rorl
in
vorps
mov
mov
push
push
push
sub
outsb
fwait
movsl
mov
pop
test
sahf
and
mov
rcl
push
jb
fisubrs
mov
jg
inc
data16
std
int
push
js
insl
sub
insl
pop
pop
icebp
mov
jmp
lret
ret
pop
outsl
pop
leave
adcl
outsl
or
push
pop
cli
cmp
jns
jno
fwait
jmp
sub
in
lea
lds
sbb
fisubs
jbe
cmp
or
mov
bound
repz
das
push
xchg
cld
pusha
jge
stc
mov
les
les
fdivrs
mov
mov
jne
inc
loop
mov
pop
xor
addr16
seta
pusha
or
lods
clc
jb
clc
inc
pop
and
lods
mov
inc
stos
sbb
fcoms
pop
pop
lock
xchg
fmuls
cvtps2pd
xor
aam
scas
stos
lock
xor
aaa
xor
jae
cmc
outsb
cld
imul
jnp
and
push
testl
jg
and
sbb
ljmp
push
addr16
add
or
dec
fwait
sub
rorb
mov
mov
hlt
das
insb
dec
sbb
and
dec
sbb
fs
negl
mov
push
mov
cld
sahf
mov
rclb
sub
scas
mov
sub
xchg
orb
shrb
sub
movsb
adc
xchg
adc
cli
in
loope
outsl
test
lods
jae
mov
les
add
dec
mov
sbb
orb
movsl
mov
push
pop
je
aaa
mov
add
add
lahf
lret
dec
or
pop
clc
jno
dec
dec
dec
lcall
iret
mov
mov
popa
mov
test
rclb
sbb
inc
rcrb
mov
dec
int3
sub
xor
or
xchg
inc
inc
fwait
mov
mov
subl
sub
fdiv
mov
int3
xor
ss
jecxz
add
or
dec
sub
or
dec
xor
add
cmp
mov
push
test
adc
daa
mov
push
shrb
int3
int
fstl
mov
add
adc
add
mulb
lock
pop
jo
sbb
xchg
adcl
fsubs
shrl
movsb
push
sbb
loopne
jbe
inc
cs
pusha
outsl
mov
int3
sbbl
mov
add
testb
insb
push
adc
gs
pop
btl
mov
sub
clc
mov
mov
mov
mulb
dec
lea
xor
jo
add
cmp
adc
roll
push
and
test
sbb
xor
xchg
lock
pop
and
loop
into
jp
push
lea
sub
inc
dec
dec
pop
mov
aad
imulb
out
mov
or
sbb
sub
pop
dec
insb
cmp
jb
jmp
ljmp
int3
ljmp
les
dec
daa
js
loop
mov
lret
fidivrl
or
imul
rolb
mov
push
xchg
mov
pop
pop
int
scas
pop
mov
fcomip
adcb
inc
adcl
adc
rcrl
out
xor
cmp
sub
mov
pop
mov
push
in
mov
insb
mov
lock
sbb
int3
and
dec
addb
outsb
inc
mov
cld
mov
lock
pop
or
push
jecxz
dec
shlb
pop
inc
test
out
push
es
mov
aad
stos
mov
mov
pop
dec
mov
inc
mov
aam
dec
popf
inc
test
inc
bound
cmp
cmp
mov
or
xor
mov
xchg
subb
inc
pop
cmp
aaa
mov
cli
jg
mov
or
inc
lret
clc
push
aaa
nop
icebp
cmp
xchg
or
int3
stc
or
jl
or
pop
pop
add
mov
pushf
stos
clc
push
adc
js
sbb
and
mov
cld
inc
nop
and
mov
fdivs
xchg
daa
into
inc
gs
sub
movsl
pusha
stos
push
adc
stos
rolb
stos
add
aas
pop
pop
loop
push
xchg
das
dec
insb
mov
jle
xchg
sub
dec
inc
cwtl
mov
cltd
and
dec
mov
push
add
xor
jnp
jo
nop
sub
movsl
or
outsl
daa
fwait
xchg
push
rorb
lret
pop
adc
fistl
xchg
aam
ja
loop
add
jae
add
sbbb
mov
arpl
mov
in
fdivr
push
sbb
jae
insb
push
mov
into
inc
pop
std
inc
scas
inc
inc
xor
inc
lret
outsl
mov
addr16
push
inc
xor
xchg
js
mov
sbb
int3
bound
aaa
xorb
test
pop
loopne
pop
cs
fwait
adc
xor
jno
inc
cld
and
pop
or
push
cmc
les
out
adc
push
and
add
dec
out
out
movsl
mov
mov
ds
xchg
adc
hlt
stos
std
ret
inc
jle
or
fwait
orl
mov
daa
cmpsb
inc
ret
sarl
xor
pusha
adc
sub
cmp
je
jle
and
pop
dec
les
pushf
orl
and
inc
imul
and
inc
cltd
adcb
inc
mov
mov
test
das
add
sub
sbb
or
push
dec
je
movsb
push
or
je
out
ljmp
test
push
or
add
jp
in
jo
mov
adc
add
ror
and
out
or
aas
outsl
and
inc
jne
xchg
add
pop
push
jne
inc
stc
cld
adc
mov
mov
ja
cwtl
adc
rclb
cmp
les
xor
dec
pushf
add
mov
pop
push
flds
jl
push
and
add
repz
and
aam
sbb
nop
fisttpl
cli
ret
shl
nop
push
and
je
jnp
enter
mov
adc
mov
add
adc
mov
dec
add
cld
xchg
add
add
dec
loopne
lods
ret
adc
rolb
mov
push
mov
mov
inc
mov
fildl
daa
rcr
xchg
and
push
inc
dec
ja
andl
repnz
add
lock
ret
push
cli
aad
mov
rorl
jmp
inc
mov
int3
sub
cmp
addr16
dec
adc
cmpsl
push
xor
fdiv
jo
scas
mov
adc
jne
or
fsubrl
js
cmp
sbb
sarb
or
mov
pusha
and
mov
push
cmp
jb
push
adc
xchg
or
repz
mov
into
fsts
std
icebp
cmp
je
cwtl
test
sar
lcall
addr16
orl
mov
add
jg
xchg
sbb
jns
out
inc
xor
arpl
jns
test
cmp
lock
mov
sub
cli
fldl
push
lcall
lret
stos
or
and
add
mov
decl
nop
iret
jnp
fistpll
aas
xor
das
jge
adc
mov
adc
jp
stos
mov
test
gs
dec
jmp
movsl
aam
repnz
cmp
lds
fistpll
in
or
adc
adc
ficoms
out
cmpsl
add
insl
loopne
rclb
adcl
out
or
mov
mov
inc
inc
out
push
aas
test
inc
xchg
stos
dec
lcall
xchg
outsb
jle
icebp
push
cld
decl
and
enter
push
jg
add
std
lea
jl
into
in
insb
shrb
add
dec
add
jg
test
pusha
sbbb
sbb
jne
sarl
mov
push
push
sub
cmp
addl
dec
mov
sbb
test
lret
sbb
aaa
je
cmpsl
jnp
jg
inc
ret
add
cmp
lret
cmp
mov
jno
test
imul
jge
in
lea
fldl
mov
mov
inc
or
add
fdivs
cmp
pop
and
ret
inc
jmp
xchg
scas
sbb
inc
cmp
aas
mov
add
add
imul
or
sbb
dec
add
dec
xlat
cmp
mov
aam
call
es
xor
and
shll
xchg
push
test
mov
inc
test
jo
xlat
or
sub
adc
icebp
mov
pop
add
cld
sub
call
inc
inc
sub
lahf
test
adc
cmpsl
hlt
add
pop
add
inc
cmp
mov
push
popf
pop
dec
xorl
pushf
aaa
loop
lock
or
pop
dec
sti
nop
stc
xchg
pop
roll
push
adc
push
pop
push
iret
mov
mov
sbb
loop
test
inc
inc
out
xor
mov
adc
ret
pusha
mov
test
and
mov
rorl
xor
sub
pop
push
or
pop
add
pop
pop
ja
or
lods
cli
popa
adc
out
les
push
aaa
mov
add
cmpsl
mov
loop
lock
mov
add
fiadds
push
sbb
sub
and
loope
sub
pop
ffree
add
mov
orl
cmc
mov
dec
inc
jge
inc
cmp
add
add
dec
push
mov
aaa
mov
pop
rorl
cmp
inc
outsl
add
adc
mov
call
cwtl
pusha
stc
add
call
ja
aas
sbb
add
sub
rorl
fmull
adc
mov
mov
mov
shll
std
test
mov
or
adc
lea
mov
lods
sub
xchg
add
data16
and
fsubr
enter
sbb
and
int
jecxz
popf
ret
mov
jno
push
pop
push
xor
fcmovbe
pop
les
jb
sbb
outsb
lea
mov
lahf
mov
pop
fisubl
pop
fwait
mov
sbb
pop
call
fs
hlt
mov
jp
push
cmp
fildl
or
mov
sbb
mov
pop
add
pop
adc
lcall
sbb
les
sbb
inc
add
call
sub
mov
decl
jne
add
inc
mov
push
ja
inc
inc
inc
jp
mov
incl
mov
lea
lret
lret
dec
inc
and
push
push
sub
lods
or
add
scas
adc
or
mov
aas
xchg
pushf
daa
mov
mov
hlt
das
std
jg
cltd
dec
push
jg
and
sbb
pop
ss
fistl
sbb
je
call
imul
fisttps
jg
mov
push
add
cs
fiaddl
mov
mov
sti
ljmp
push
sub
xchg
cmc
loop
js
jg
push
sbb
mov
push
and
pop
in
mov
std
cmp
pop
setg
pop
push
daa
jns
xchg
push
pop
les
jns
ja
rolb
test
ficomps
cmp
jmp
adc
push
adc
xchg
adcb
or
sbb
sbb
push
inc
push
and
call
sbb
jecxz
imul
mov
dec
das
ljmp
test
mov
cmp
aam
shll
cmpsb
ret
pop
cld
icebp
jmp
mov
mov
out
mov
int3
pop
les
add
fdivl
dec
in
cli
jg
lcall
adc
mov
inc
fisubrl
sub
imul
dec
lea
inc
and
mov
push
add
adc
loope
mov
imul
push
movsl
cmp
sub
cs
movl
mov
mov
mov
fidivl
stos
jmp
loope
pop
jae
notl
jp
int
aas
lock
daa
les
ficompl
mov
push
pop
mov
xchg
iret
clc
shrb
fidivl
jmp
mov
lret
push
repz
ljmp
lahf
pop
push
repnz
imul
push
push
push
adc
sub
rcll
sbb
xchg
xchg
add
add
pop
ds
sbb
rorl
fists
xchg
in
inc
sub
dec
addr16
aad
xor
add
pop
out
inc
fcmovne
push
movsb
frndint
lcall
mov
ja
cli
push
ret
je
incl
dec
or
lds
sti
into
jo
das
cmp
xor
adc
mov
cld
pop
ja
repnz
jb
shll
mov
out
push
and
jmp
xor
push
and
mov
sbb
mov
mov
mov
dec
gs
jae
xchg
sarl
decb
stos
or
mov
jge
sub
add
faddl
test
and
jns
push
cld
inc
test
inc
push
jne
add
pop
xchg
faddl
add
mov
add
sar
add
into
movsl
dec
inc
test
stos
fdivrl
sbb
add
inc
roll
mov
adc
pop
push
mov
jnp
mov
flds
and
addb
pop
mov
rolb
mov
cs
test
dec
mov
add
lods
sbbl
xor
sbbl
fsts
push
les
mov
int
jecxz
push
into
mov
mov
dec
add
xchg
jno
out
push
out
cmp
add
inc
mov
les
xor
outsb
inc
and
xorb
adc
push
popa
mov
adc
or
test
and
add
dec
pop
cmp
and
orb
cli
and
push
or
subb
data16
aas
lds
fdivr
sahf
push
sbb
rclb
loop
jne
mov
js
xor
and
icebp
stc
scas
push
xchg
aam
dec
cld
jnp
xor
mov
push
push
sub
ljmp
dec
popa
mov
out
add
adc
or
pop
sub
nop
sub
cmpb
lds
push
push
je
data16
cmp
lret
or
add
xor
addr16
loopne
add
dec
test
jp
fdivrs
ret
push
arpl
pusha
out
pushf
or
das
pop
add
add
or
les
les
sub
add
dec
sub
jmp
inc
mov
shlb
xor
xor
add
cmp
sbb
xor
jg
out
or
or
and
inc
dec
not
add
jl
xor
push
adc
xchg
inc
sub
filds
mov
int
and
hlt
mov
fdivrp
iret
daa
pusha
popa
gs
cmp
pop
push
push
lds
nop
loope
sbbb
in
or
cmpsb
lock
mov
inc
lea
jb
mov
sub
loopne
cmp
push
stc
inc
imul
pop
data16
repnz
ret
mov
xor
push
xlat
adc
cmp
sub
repnz
insb
in
out
jmp
adc
call
pop
mov
push
xchg
fsubl
sbb
leave
je
aaa
push
xor
adc
jno
push
mov
nop
xor
push
sbb
sub
pop
clc
call
adc
iret
lods
das
in
inc
rol
and
mov
push
add
fildl
mov
jg
pop
mov
iret
dec
pop
sub
push
insb
inc
jge
jae
push
sub
pushf
mov
mov
sahf
sub
mov
jb
cli
rclb
outsl
lock
cmp
push
cltd
jge
mov
sbb
test
je
movsb
cmp
adc
dec
pop
pusha
or
icebp
or
ljmp
push
popa
fdivr
pop
push
pop
adc
and
pop
jecxz
shl
xorb
inc
pop
jmp
movl
xchg
add
loop
and
sahf
inc
xchg
shrb
inc
js
rcr
lods
into
mov
clc
je
mov
add
fldenv
mov
dec
iret
adc
inc
xlat
cmpsb
sub
fwait
sbb
dec
mov
adc
pmaddwd
ret
iret
inc
xor
cmp
lahf
pop
pop
dec
cmp
mov
jae
mov
ja,pt
ljmp
mov
cmp
popl
mov
push
jle
xchg
scas
rol
add
jg
bound
sub
jno
loop
bound
ret
stos
hlt
scas
mov
decl
in
push
sub
movsl
cmp
dec
movl
fwait
pop
lods
mov
push
loop
push
mov
pusha
mov
mov
cltd
or
or
mov
cmp
dec
sub
roll
xor
xor
fdivrp
cmp
enter
xchg
test
jg
repnz
mov
lcall
inc
mov
sbb
pop
mov
testb
inc
in
push
add
lock
mov
subb
mov
cmp
sbb
fucom
mov
lcall
lds
call
adcl
inc
and
xor
sbbl
sbb
icebp
inc
sub
dec
xor
ret
sbb
ret
sbb
es
in
jge
in
sbb
test
push
adcl
inc
sub
or
mov
fmull
jmp
mov
and
in
loopne
dec
pop
loop
xchg
xor
jbe
jb
xchg
insl
and
mov
xor
daa
jp
ds
adc
mov
ljmp
pop
in
dec
sbb
std
les
out
orps
and
add
cmp
dec
mov
stos
mov
dec
mov
add
push
and
lea
std
ret
shll
xchg
adc
adc
test
xchg
xor
jo
push
inc
pop
nop
clc
fsubrl
xor
or
loopne
or
lock
sbb
add
jle
push
fsubr
mov
stos
mov
pusha
and
lds
lahf
lcall
fmuls
cmpsl
insl
iret
xor
aad
daa
add
loop
mov
adcl
xchg
call
and
addb
iret
addb
loope
clc
ret
add
add
and
xchg
pusha
push
imul
push
out
movl
xor
lock
push
stos
fiadds
sahf
jbe
fsub
push
adc
inc
adc
jmp
shll
mov
adcb
add
sub
out
pop
cmp
xlat
sub
or
sarl
xor
lods
push
test
jne
push
push
adc
and
pusha
outsl
aaa
adc
jle
mov
aam
repnz
pop
inc
add
add
movaps
pop
cmpsl
mov
add
les
pushf
rcll
lods
pop
icebp
clc
scas
or
dec
ss
js
mov
loope
add
fldenv
icebp
add
add
sub
dec
dec
adc
xor
mov
cmc
inc
mov
or
inc
je
sbb
adc
mov
pop
icebp
and
enter
shrb
jmp
dec
das
sarb
cmp
mov
mov
cmp
repnz
xchg
push
mov
rclb
shrb
adc
test
rcl
roll
jo
adc
in
and
xor
or
movsl
lahf
mull
mov
add
push
rcrb
jle
mov
fsubp
fbstp
jb
fidivrs
sbb
push
xor
xor
jge
cvtps2pi
inc
mov
ret
dec
xchg
push
cli
insl
rol
dec
rol
or
xchg
add
mov
mov
and
testl
jl
lods
imul
jne
pop
and
loop
push
push
dec
pop
shlb
mov
mov
mulb
inc
push
loope
popa
fisubrs
xchg
int
mov
push
movsl
bound
sub
cli
cmp
xor
mov
xor
cmp
ret
in
and
or
push
pop
clc
fwait
mov
mov
push
mov
mov
outsb
or
cld
inc
aam
sahf
test
or
or
pushw
and
cmp
aam
jno
mov
push
pop
jns
sarl
testb
stos
pusha
xchg
sbb
sub
or
sbb
call
xor
sub
enter
xor
rcl
push
push
mov
add
ja
adc
and
mov
fs
std
and
mov
test
rolb
jbe
dec
addr16
jbe
data16
scas
faddl
in
int3
push
fildl
lock
push
cmp
ja
pop
mov
aaa
add
popf
sub
loopne
fwait
inc
add
insl
xor
or
dec
and
stos
mov
inc
jp
inc
mov
mov
add
ret
adc
or
aaa
or
gs
add
mulb
xor
int
xchg
les
popa
and
addb
add
adc
mov
inc
sbb
dec
push
cmp
or
mov
xor
ljmp
cmp
movsb
add
test
xchg
jle
ds
fists
bound
lock
fbld
fadds
push
je
jge
sar
pop
mov
and
mov
sub
jnp
jg
lret
xchg
jns
iret
mov
dec
rclb
pushf
adc
mov
dec
jge
fisttps
dec
dec
lods
lods
mov
xor
xlat
ja
add
xor
jne
outsl
jge
inc
mov
adc
or
inc
outsb
mov
cltd
loop
pop
jmp
outsl
sbb
aad
xchg
pop
xchg
xor
icebp
push
pop
ds
sub
ja
jge
bsf
pop
pushf
icebp
in
mov
sub
mov
cmp
mov
add
icebp
and
lock
add
test
es
pop
jmp
iret
mov
pop
and
loopew
lahf
psllw
aam
bound
cmp
sub
repnz
xchg
add
push
aaa
mov
loop
dec
mov
decl
push
xlat
adc
jnp
inc
mov
adc
test
fwait
insb
movsb
and
mov
dec
xchg
mov
jbe
pop
aad
loop
xchg
xchg
mov
pop
sub
push
inc
pop
push
and
push
call
pop
fstps
clc
pusha
pop
jbe
and
ss
fcmovnu
sbb
jae
lret
inc
or
adc
and
adc
pop
sbb
mov
mov
or
push
jl
sbb
xchg
ds
imul
push
xchg
push
andb
or
jno
sbb
ljmp
cmp
xor
adc
push
or
ljmp
cld
aaa
adc
mov
pushf
test
pusha
xchg
adc
pop
mov
cld
lods
add
out
sub
mov
push
pop
push
in
cmp
mov
jne
jl
cmc
lds
sarb
in
sbb
add
pop
cli
jmp
test
cld
sti
adc
jns
pop
push
rcr
test
mov
mov
inc
or
adc
leave
cmp
add
lods
fcmovnu
fisttps
or
xchg
push
pop
xchg
cld
push
out
andb
adc
fidivl
sbb
adc
push
sbb
mov
rcr
jg
pop
xor
cwtl
test
data16
xchg
xchg
mov
pop
cs
xchg
inc
add
rcrb
std
or
outsl
dec
pop
lret
cmp
aad
jecxz
push
test
and
pop
inc
jg
pop
clc
fisttpl
adc
fisubrs
cmp
or
mov
mov
pop
aad
and
cmc
sub
pop
or
cs
adc
jl
ljmp
dec
ja
cmp
jae
nop
mov
fcomps
shrl
hlt
pop
jbe
sar
cli
and
call
or
adc
aad
aad
loop
es
jns
or
fmull
ret
sub
jb
add
movsl
cltd
into
mov
push
cmp
enter
or
xor
mov
ja
mov
fbstp
mov
imul
add
cwtl
jb
rol
cmc
fisttpl
push
shll
xor
sbb
clc
mov
push
sub
orb
cld
pop
jge
cmp
pop
mov
jae
xlat
and
sub
test
add
hlt
call
call
xchg
inc
sub
or
mov
or
xchg
or
mov
push
inc
enter
sbb
cwtl
mov
mov
mov
popa
jg
sbb
pop
mov
sub
dec
inc
or
mov
not
jns
xchg
cmp
and
sbb
add
inc
sbb
xchg
jecxz
decl
dec
add
jmp
imul
roll
or
fimull
push
mov
jmp
sbb
add
arpl
mov
mov
arpl
dec
icebp
insl
mov
cli
outsl
jmp
jno
iret
jnp
cmpsb
lea
sbb
cmp
arpl
insl
ret
inc
shrl
fcomps
popf
loop
rcll
fimull
inc
add
rorb
je
imul
outsl
cld
pop
and
mov
mov
aaa
insl
or
dec
jle
mov
cmp
in
lcall
rclb
xchg
jp
adc
out
ret
pop
xorl
pop
gs
mov
mov
cld
and
ret
mov
push
dec
mov
cmpsb
movsl
jbe
cmp
pop
xchg
cmpsb
addr16
jne
inc
xchg
insb
mov
mov
out
or
dec
jg
dec
sub
or
jbe
fs
pop
xor
jne
loop
pop
mov
add
sarl
jns
fwait
adc
mov
add
mov
mov
lock
jbe
test
cmc
adc
in
cmp
add
inc
sti
ret
ja
push
les
xchg
test
outsl
push
xchg
mov
cld
or
sti
jmp
xor
adc
xor
jmp
sbb
jg
dec
mov
sarb
orb
sbb
dec
std
ja
outsl
adc
push
jmp
out
jnp
mov
mov
bound
and
iret
test
inc
in
mov
ds
shll
cs
inc
cwtl
adc
scas
sub
add
mov
call
adc
push
lods
mov
js
faddl
xchg
inc
aam
mov
mov
test
mov
sahf
stos
cs
mov
jp
outsl
mov
push
or
push
adc
nop
ds
fsubrl
cltd
inc
subb
popf
inc
and
add
icebp
dec
bound
test
dec
add
test
pop
jg
mov
jno
jno
or
xchg
mov
arpl
mov
insl
dec
pop
and
jl
adc
insl
pop
outsb
or
add
daa
iret
sbb
mov
hlt
andb
jl
sub
pop
cmc
xor
push
gs
and
loopne
fs
jnp
or
or
test
icebp
inc
and
das
cld
jg
add
xchg
pop
aad
or
int
out
stos
fidivrl
mov
adc
or
incb
fsubrl
jmp
jne
xchg
nop
add
jbe
mov
adc
add
lahf
mov
addr16
mov
iret
lds
cwtl
cmpsb
mov
arpl
jmp
xor
inc
mov
vmaxsd
inc
in
or
jge
jae
mov
bound
hlt
dec
sbb
mov
std
sarl
shlb
mov
xchg
sbb
ss
dec
jb
inc
loopne
xchg
cmp
cld
nop
aam
data16
mov
popf
fstpl
inc
mov
aaa
outsl
or
jo
sbb
inc
or
ret
jp
in
test
or
and
sbb
jl
or
pushf
loop
sbb
pop
pop
push
sbb
mov
stc
aaa
mov
js
mov
xorb
fs
imul
jno
push
inc
xorb
mov
bound
mov
mov
mov
inc
xchg
mov
cmpsl
addr16
cli
sbb
pop
cltd
mov
add
rorl
mov
loope
or
fldt
arpl
adc
les
jne
adc
and
add
fwait
cmp
out
out
clc
adc
clc
movsl
inc
jb
mov
fimull
not
mov
popa
push
push
or
sbb
fwait
cmp
shr
mov
pop
and
in
adc
inc
inc
leave
div
add
adc
push
iret
sub
fsubrp
dec
fimuls
loopne
pop
cmp
and
xor
sub
in
aas
outsb
sub
out
cli
andb
sub
jbe
push
inc
adc
enter
stos
in
pushf
mov
pusha
cmp
sbb
cmpsl
call
cmpsb
mov
cmp
imul
stos
popa
je
cwtl
mov
and
lds
xor
xchg
push
dec
cmc
lcall
jecxz
insb
push
dec
xor
jp
loop
mov
lods
rorl
stos
xchg
xor
jne
incl
cmp
push
and
cmp
mov
iret
or
mov
mov
lret
outsl
sbb
cltd
sahf
cmp
shl
push
jmp
or
jmp
push
add
add
addr16
pusha
mov
sbb
pop
pop
repnz
and
jg
je
sub
pushl
fs
or
lcall
inc
mov
fldt
cmpsl
pusha
rorb
push
add
jle
push
mov
adc
mov
nop
add
inc
mov
push
mov
pop
ljmp
imul
sub
sbb
cmc
cmc
pop
insl
in
jecxz
pusha
cmc
xchg
sti
popl
push
int3
cmp
push
out
bound
jmp
decb
cwtl
sbb
push
jo
popf
push
push
test
rolb
aad
les
mov
fwait
mov
dec
mov
push
lea
dec
cwtl
loop
jo
loope
add
inc
sbb
dec
jp
rcr
mov
cmpsb
rclb
xor
seto
call
push
and
sbb
out
in
roll
lods
mov
xor
shll
mov
and
ja
mov
mov
or
outsl
pop
dec
lea
push
inc
jo
or
jg
adc
or
imul
jg
pop
cmp
sbb
in
jg
pop
repnz
dec
mov
mov
or
es
dec
xchg
addr16
into
jle
mov
push
or
gs
and
sbb
out
mov
lds
lcall
mov
idivb
arpl
push
test
adc
cmpsb
movsl
pusha
lea
imul
decb
lods
mov
sub
xchg
jmp
test
mov
and
cmp
mov
lea
add
mov
push
test
jl
movsb
in
dec
das
fadd
shl
jae
push
inc
jbe
jae
repnz
jmp
es
add
ds
push
andb
clc
push
dec
cs
or
cmpsb
mov
or
adc
enter
xorb
jg
lds
fists
adc
popa
loope
sub
divl
ss
cwtl
ja
in
add
int3
ss
fildll
std
rol
adc
mov
jg
inc
in
outsb
ljmp
addr16
mov
inc
notb
cmp
filds
lret
jbe
mov
mov
lea
iret
nop
mov
cmp
jmp
insl
adc
mov
in
leave
mov
xchg
jmp
xchg
sub
clc
mov
jns
iret
mov
add
push
or
pushl
cmp
jmp
daa
inc
jns
jl
cmp
inc
rcrb
ja
jg
adc
mov
imul
aad
and
fs
mov
cmpsb
sbb
int3
scas
cwtl
fbstp
jecxz
cld
incl
push
mov
xchg
adc
xchg
xchg
into
or
in
jg
cmpsb
je
sbb
pop
loop
orl
cli
movsl
jg
cld
mov
cmp
dec
fisubrl
adc
add
aaa
jge
mov
ljmp
stos
sbb
repz
fldl
mov
aaa
mov
jne
xor
fisubrl
push
jno
add
fcmovbe
decb
movsb
out
push
fstpl
push
mov
sub
clc
sub
lock
lods
mov
dec
lods
or
nop
or
jbe
sbb
push
mov
push
xor
or
les
pop
sbb
xor
jp
ss
les
mov
mov
pusha
rolb
xor
arpl
and
or
sbb
lret
mov
mov
shlb
mov
into
jge
push
jnp
sub
mov
fldt
or
or
pop
inc
stc
sub
push
cwtl
jnp
clc
jb
sub
sub
pop
xchg
mov
inc
or
dec
shrl
pop
and
mov
mov
popa
mov
pusha
mov
adc
or
dec
push
cli
cmpl
sub
push
xor
lock
or
xchg
mov
adc
jo
mov
ret
dec
mov
dec
adc
push
inc
mov
inc
inc
or
mov
add
imul
sbb
sbb
xchg
or
rorl
mov
sub
bound
push
add
faddl
sbb
and
sub
mov
and
sub
add
sub
hlt
xor
add
pop
inc
dec
lret
add
lret
rcll
repz
push
inc
sbb
inc
adc
adcb
aaa
jae
lahf
xor
ss
xor
xchg
mov
mov
loop
push
insb
mov
xchg
add
adc
sbb
or
ret
and
rcr
stc
add
fiaddl
fisttps
xor
inc
cmp
mov
adc
das
adc
mov
add
inc
jnp
cmpb
add
out
out
mov
mov
xchg
cmp
ljmp
int3
sbb
xor
and
clc
icebp
outsb
inc
lret
shrb
rcrb
sbb
dec
pop
mov
mov
xorb
fadds
icebp
lds
pop
loope
xlat
dec
pop
add
mov
mov
repnz
pusha
push
mov
jp
mov
jno
add
jnp
hlt
or
iret
xor
xchg
sub
inc
dec
push
add
out
mov
int3
and
dec
lea
movsb
js
sub
jg
clc
sahf
add
pop
sbb
nop
lcall
jle
test
cli
add
test
jae
dec
push
test
jecxz
iret
cmp
push
loope
mov
jge
and
mov
jo
pop
jbe
or
inc
les
dec
jle
fmuls
adc
jno
ret
ret
fmull
pop
fcomip
and
rorb
call
filds
sbb
adc
aad
jne
jmp
inc
push
pop
movsl
pop
fucomip
mov
cld
and
adc
in
dec
xor
push
push
adc
out
adc
adc
pushf
sub
out
stos
sbb
popl
cltd
xchg
pop
pop
popa
repnz
cmp
push
mov
pop
xchg
or
rclb
jo
sbb
mov
inc
xchg
cltd
aam
cmp
enter
push
mov
sahf
mov
out
or
fmuls
sbbb
adc
ret
jmp
cld
in
dec
sub
divb
cmp
cmpsl
int
or
jp
inc
les
inc
pop
adc
sub
rolb
or
cmp
leave
inc
clc
add
pop
fidivrl
fs
lahf
aaa
lods
movsb
sub
xchg
dec
mov
fldt
mov
dec
xchg
dec
inc
xchg
ds
cmp
imul
dec
push
mov
daa
ljmp
cld
sbb
js
test
sub
jb
xor
ljmp
lock
in
xchg
push
mov
and
or
lods
adc
pusha
or
lock
jle
pop
lea
inc
xor
ud0
mov
gs
inc
in
or
push
xchg
dec
fstpl
out
jg
cli
fiaddl
cmpsl
ljmp
cmc
scas
push
mov
push
std
lcall
xchg
rol
xchg
in
insb
mov
xlat
stos
fnstenv
cli
jb
outsb
cmp
add
fs
push
sahf
mov
pop
aam
fadds
sub
enter
mov
out
cmpsb
sbb
popf
xchg
mov
das
dec
repz
lods
ret
mov
loop
add
aam
and
bound
and
sti
pop
jb
dec
and
arpl
sub
stos
loopne
and
add
mov
adc
insb
outsb
inc
fcoml
outsl
sub
jne
loop
push
xor
aaa
fisubrs
cmp
int3
pop
popa
push
jmp
xchg
sti
xor
outsb
mov
and
pop
pop
cld
aam
push
mov
data16
adc
push
xor
push
hlt
xorl
mov
mov
outsb
cmp
mov
mov
nop
or
pop
push
add
or
scas
sbb
pop
push
xorb
sti
xchg
push
add
mov
clc
mov
adcl
ss
xlat
cld
in
push
push
mov
sbb
jle
push
ds
sub
jo
adcb
push
dec
jecxz
shlb
scas
lahf
inc
lahf
or
mov
jno
imulb
test
call
dec
sub
aam
in
jecxz
and
ret
jnp
sarb
and
enter
xchg
add
jg
push
sub
xchg
mov
pushf
insb
dec
and
aad
mov
xor
push
ltr
xchg
pop
jbe
add
pop
js
fadds
inc
orb
int3
sub
inc
lea
sbb
mov
rolb
clc
out
repz
cmp
push
inc
sahf
add
xor
fists
mov
push
loopne
movsl
fidivl
push
adcl
rcll
mov
cmp
xchg
iret
mov
jo
inc
jne
adcl
push
test
sbb
stos
mov
jnp
lock
or
aas
or
cwtl
jo
cmc
dec
jnp
out
sar
add
int3
in
jle
orb
mov
mov
out
mov
pop
pop
movsl
loopne
lock
push
aad
dec
mov
adc
loopne
pop
sub
xchg
call
lock
sarl
push
fdivrl
std
retw
into
scas
fsubs
jle
mov
mov
jecxz
mov
ds
pop
icebp
adc
dec
adc
mov
fsub
xor
sbb
jbe
dec
jns
xchg
scas
out
sbb
gs
int3
adc
add
cmpsl
ja
sub
popa
iret
movb
lret
mov
mov
xlat
rorb
push
pop
fimuls
fwait
scas
push
into
sbb
push
jl
jle
push
mov
cltd
inc
into
mov
push
das
mov
jae
arpl
xor
jmp
xchg
mov
cmc
mov
xchg
enter
jbe
sub
flds
lret
add
mov
loope
enter
dec
mov
loopne
sbb
and
mov
inc
mov
iret
lahf
decb
stos
push
rorl
out
fadd
mov
add
outsl
pop
les
jnp
jmp
sub
mov
xchg
cmp
jmp
pop
lock
mov
sbb
in
incl
mov
xlat
ds
add
cmp
dec
adc
sbb
das
cmp
adc
es
cmp
pop
outsl
sahf
test
cmp
or
mov
aad
mov
pop
shlb
cs
push
adc
inc
sub
ret
hlt
hlt
or
test
mov
mov
push
ljmp
xchg
outsb
es
ds
bound
insl
loop
jp
lret
mov
cmp
sbb
fimuls
xchg
icebp
ljmp
rol
mov
fcompl
jnp
push
mov
dec
shrl
addb
enter
icebp
filds
inc
dec
push
je
pop
nop
and
fnstenv
adc
and
pop
imul
add
cmp
add
ljmp
std
xchg
xchg
lock
std
adcl
ret
or
lret
mov
ret
mov
xor
movsb
inc
pop
sbb
negb
add
mov
clc
hlt
and
inc
sbb
out
test
adc
gs
inc
push
mov
fs
inc
or
iret
fidivs
pop
mov
shrb
inc
mov
and
mov
das
xor
iret
cmp
sub
jae
add
orb
xor
pop
and
push
int
sub
adc
cmpb
in
fs
roll
sub
pop
xchg
daa
and
outsl
dec
mov
sub
fmull
and
mov
add
and
ljmp
jo
lods
xor
xchg
inc
pop
arpl
mov
sbb
adc
pop
cmpsb
pop
jmp
mov
ret
and
mov
pop
popf
pop
fdivs
add
xchg
jl
adc
aam
adc
sbb
out
push
outsb
mov
mov
adcl
in
sub
dec
movsl
push
into
push
sbb
sarb
and
jl
add
xchg
mov
fbld
pusha
inc
dec
pusha
and
jo
jecxz
stos
das
hlt
ds
mov
dec
add
cmp
inc
or
shrb
clc
and
and
nop
testb
adc
lret
add
mov
decb
cli
loop
pop
pmullw
inc
and
adc
mov
adc
or
sbb
or
or
dec
cld
in
push
sbb
jp
in
xor
sbb
and
fmulp
add
xorb
jmp
ret
or
cmp
clc
inc
add
jbe
add
xchg
fisubl
js
dec
mov
mov
pop
stos
testb
dec
das
pop
ds
aas
sbb
xchg
and
mov
dec
fldenv
dec
add
aam
push
daa
xor
jmp
dec
jo
mov
dec
mov
rolb
jg
cmp
mov
insl
pop
movsb
imulb
fdivrl
int3
push
cmp
cmpl
sbb
rcr
and
es
push
pop
xor
out
xchg
pop
sbb
adc
jns
xchg
cwtl
loopne
and
cmp
jo
lea
sbb
cmp
jp
arpl
cmp
jns
push
bound
fdivr
pushl
inc
jne
xor
shrl
test
out
or
sub
std
adc
push
inc
ror
adc
decl
nop
testl
outsl
jb
jp
icebp
call
and
jg
xor
xor
or
cmp
outsl
mov
and
pop
inc
jnp
test
jecxz
mov
cs
inc
adc
xor
je
xchg
test
fistpll
and
test
call
aaa
fsubr
mov
leave
in
jl
incl
xchg
add
out
loop
mull
in
cli
dec
cld
sbb
ljmp
cmp
mov
clc
in
adc
in
xor
mov
jmp
ret
and
inc
cmp
mov
jg
sahf
and
jmp
xchg
mov
and
push
inc
lds
outsl
std
xchg
jg
sti
ret
std
sub
jp
hlt
aas
adc
xlat
mov
imul
push
inc
mov
push
aas
int3
sarb
aaa
daa
jmp
into
xor
add
out
inc
jne
jecxz
xchg
push
mov
add
fdivrp
lds
clc
fwait
sahf
or
pusha
mov
mov
in
insl
or
rclb
sar
and
mov
xlat
and
mov
repz
les
push
mov
test
sbb
jecxz
mov
or
cmp
jecxz
pop
cli
sub
push
enter
mov
push
int3
dec
jg
jg
lea
push
mov
jecxz
mov
push
pop
cmpsl
or
rorl
out
add
adc
inc
sbb
and
mov
mov
lahf
inc
in
lcall
fdivp
fisubrl
data16
mov
in
cmc
adc
aaa
push
test
lods
add
cltd
ss
adc
pushf
insl
ljmp
jle
xchg
shl
es
in
push
xchg
fiadds
outsb
pusha
jg
leave
lods
xor
clc
mov
xor
in
or
aam
popl
jge
or
pop
sub
fsubs
in
xchg
jmp
in
add
cwtl
jecxz
xchg
scas
pop
clc
xor
sub
incb
std
subb
in
fistpl
and
test
sbb
shll
aad
cs
aam
pop
int
icebp
mulb
clc
data16
decl
andl
inc
dec
je
andb
or
push
push
xchg
push
out
repnz
fsubrp
inc
sti
mov
aas
call
scas
mov
pop
xchg
pop
cli
pop
pop
or
or
fists
mov
loopne
adc
xor
loop
movb
mov
sub
rolb
and
and
mov
mov
and
xor
mov
out
push
rorl
cld
mov
xor
int
or
adc
js
adc
sub
cmp
test
je
adc
mov
arpl
sahf
lcall
jne
xor
push
mov
negb
test
push
xor
cmp
fisubrl
add
iret
aam
mov
xor
shrb
imull
jno
inc
adc
fsubrl
pop
jl
sbb
adcb
cmpsl
mov
repz
jno
dec
test
mov
push
loope
inc
popa
js
add
push
sbb
cmp
ljmp
add
sarl
xor
repnz
or
xor
xchg
imul
and
adc
stc
or
sub
fmul
fists
mov
mov
push
jnp
or
jl
cmp
adc
cmpsb
hlt
inc
into
add
jge
sbbb
jo
push
add
sbbb
mov
add
adc
mov
or
jle
mov
cmc
test
pop
inc
fmulp
popw
or
and
loopne
clc
dec
test
inc
vrsqrtps
jno
test
push
cld
push
push
pop
jl
or
cmc
das
mov
push
out
sbb
push
add
mov
xchg
lret
cld
adc
pop
movl
rolb
sbb
inc
mov
add
lret
or
dec
test
xchg
cmp
sub
sti
sbb
lods
mov
adc
xor
push
dec
out
xor
ljmp
xor
dec
lahf
fnsave
dec
inc
sub
sub
add
shr
adc
pop
mov
jb
hlt
sub
int
gs
sbb
or
std
mov
stc
adc
cmpb
es
push
sbb
ljmp
adc
lds
scas
add
inc
jl
add
bound
mov
mov
dec
or
lcall
pop
sub
ret
xchg
fisttpl
stos
loopne
mov
lods
mov
subb
jo
cs
lock
imul
fiaddl
int
call
xchg
jmp
push
imul
push
push
cmc
pop
inc
adc
out
and
aas
push
add
lea
imul
and
out
arpl
andl
jecxz
inc
pop
sub
xlat
sbb
outsl
movsl
sbbb
or
test
mov
mov
sub
jnp
mov
inc
add
dec
add
jae
clc
push
mov
rol
sub
jmp
push
inc
addl
add
and
inc
ja
jp
xchg
loop
push
mov
dec
cmc
lods
fisubs
nop
adc
sbb
incl
sbb
dec
loope
and
inc
pop
push
sub
inc
mov
mov
lret
jecxz
or
dec
test
pop
and
test
pop
and
lds
js
push
xchg
pop
add
sub
aam
mov
arpl
xchg
push
dec
andb
mov
add
popa
push
pop
imul
fisubs
adc
jns
jb
push
roll
lcall
test
loop
xor
fdivs
loop
inc
enter
add
xor
or
push
pop
pop
dec
pop
sub
jne
adc
mov
jne
sub
out
or
pusha
sbb
cld
leave
dec
sub
adc
ret
or
ja
outsl
pop
mov
fisttpl
sub
or
mov
add
sub
bound
hlt
cmpsb
cli
stos
pop
xchg
out
ret
jge
sbb
mov
inc
adc
inc
jmp
adc
mov
add
lcall
pop
mov
mov
adc
xor
jmp
inc
decl
mov
cltd
push
dec
mov
scas
cmpb
push
mov
rorl
push
fwait
xor
adc
fmul
cmpsb
lock
pop
lods
lock
aas
jb
lods
testl
in
sbb
pop
mov
mov
pop
out
lret
imul
jbe
lret
and
pop
add
outsb
pop
xor
dec
mov
and
mov
sub
cmp
mov
inc
adc
mov
push
cld
mov
stc
push
out
sbb
subb
sahf
sbb
jne
fdivl
js
loope
fbstp
xchg
fdivrs
mov
test
insl
outsb
fwait
mov
adc
adc
mov
fistpl
pop
jbe
pop
shlb
inc
inc
xchg
fsubl
ror
mov
or
xor
cmpsl
shrl
sbb
cmp
js
and
fmull
pop
rclb
push
rol
loope
adc
mov
shll
add
shrb
test
loopne
imul
sub
cwtl
jecxz
xor
or
pop
jmp
cmp
in
hlt
cli
sbb
xor
je
add
dec
gs
hlt
jecxz
mov
dec
jnp
dec
sbb
mov
bound
xchg
push
fs
jmp
arpl
push
dec
nop
add
dec
xor
cmpb
dec
and
cmp
adc
pop
push
xchg
scas
movsl
pusha
sub
and
sub
outsb
inc
fistpl
cmp
pop
sti
insl
stos
adc
sbb
push
imull
scas
jmp
pop
or
push
add
aas
pop
movsl
and
imul
mov
filds
fisubs
decb
inc
inc
je
out
mov
inc
pop
and
out
insl
sahf
add
les
pusha
mov
jbe
pop
mov
inc
dec
push
sbb
and
add
movsl
pop
ret
cld
xchg
dec
jo
and
fistpll
mov
outsl
pop
das
int
cmp
mov
lcall
in
and
outsb
ficompl
or
add
push
mov
push
ss
pusha
scas
ljmp
cld
decl
or
popf
pop
pop
iret
or
and
pop
jge
icebp
movsl
roll
sub
or
incb
popa
adc
push
add
outsb
ljmp
icebp
mov
mov
and
lret
jne
xchg
inc
or
push
push
xor
shrb
mov
jns
pop
pop
dec
loopne
clc
outsl
rorb
and
les
test
aas
sub
jno
fisttps
dec
aas
lods
jne
push
hlt
hlt
mov
jle
push
xlat
xor
sahf
add
lds
xchg
fcmovb
clc
lds
stos
scas
inc
xor
mov
loope
movsb
loop
inc
push
adc
outsl
hlt
call
rcll
rcrb
mov
lds
es
loopne
in
mov
dec
push
and
popa
fcmovu
pop
adc
mov
xor
fildll
lret
ficoms
mov
lahf
push
iret
movsl
pop
inc
or
jo
push
dec
mov
leave
ret
mov
clc
pop
insl
clc
mov
adc
loopne
aam
xor
xchg
fisubl
je
adc
pop
mov
adc
outsl
pop
loopne
pop
cld
cld
sti
inc
mov
or
test
stos
js
mov
push
mov
pop
mov
stos
lcall
rorb
pushl
or
add
xor
push
mov
push
jmp
lods
xor
or
mov
ud0
cmp
xlat
popf
int
or
mov
push
sar
jns
ds
cmp
imul
mov
push
inc
inc
sub
and
cmp
mov
movsb
mov
push
add
push
jne
call
sbb
xor
ja
aad
enter
cmp
pop
in
pop
cltd
mov
push
test
adc
or
aaa
negl
dec
jecxz
xor
aam
or
pop
rcrb
xor
xchg
adc
daa
cwtl
pop
dec
add
pop
imul
and
jno
sbb
ret
inc
add
movsb
jmp
out
fwait
mov
adc
inc
add
mov
xchg
pusha
add
lock
stc
cmpsb
inc
pop
lods
xchg
pop
mov
popf
adc
movsb
sbb
inc
inc
shl
stos
push
mov
push
xchg
cs
push
iret
add
loop
je
icebp
or
je
xor
jae
push
loop
addr16
dec
ret
jl
mov
gs
xchg
mov
orl
mov
push
imul
dec
xchg
push
pop
stos
iret
rcrb
jmp
cmp
cmp
dec
call
or
loop
pop
daa
add
add
std
outsl
popa
dec
rcll
sub
or
test
sbb
xor
frstor
sub
fiadds
aad
sbb
adc
dec
js
js
in
sar
xorl
push
push
rolb
lcall
cmp
movb
add
xchg
cmp
enter
jbe
mov
pop
xor
pop
ret
test
ja
jg
xchg
in
pop
xchg
and
push
inc
pop
push
xchg
pop
shl
clc
lcall
mov
xchg
add
mov
jg
jo
mov
fcoms
cmc
push
in
sbb
jo
out
adc
bound
xchg
out
xor
subb
jne
add
inc
in
jmp
mov
bound
cmp
mov
mov
inc
add
jl
xor
push
int
sbb
in
sbbb
add
fbstp
sbb
cmpb
sbb
pusha
pop
loopne
mov
jae
inc
pop
inc
ss
adc
movb
mov
mov
hlt
xor
and
jmp
mov
and
cmc
xchg
add
lods
mov
int
aad
iret
xchg
sub
pop
push
fisubl
pusha
push
pop
test
lods
std
js
xchg
push
jmp
data16
addb
leave
movsb
jp
sbb
and
xor
cmp
and
and
inc
add
dec
jge
icebp
or
sub
dec
rolb
jecxz
pop
add
out
in
push
arpl
and
or
cmp
bound
xor
pop
or
or
cmpsb
outsl
sti
shlb
inc
cmc
inc
push
mov
cmp
rcll
pop
cld
ja
cwtl
adc
test
xlat
push
sahf
loopne
icebp
subb
nop
pop
push
inc
insb
xchg
adc
adc
mov
push
or
andl
jg
jge
ret
insl
mov
push
cmpsb
add
xor
cli
cmpsl
mov
outsl
icebp
fiadds
in
push
mov
rcrl
add
aas
push
mov
sub
ds
cmp
sbb
lock
jae
popa
mov
in
cmp
das
mov
rcll
xchg
adc
add
pop
sub
dec
out
xchg
repnz
dec
aaa
push
mov
loopne
inc
orb
addr16
inc
mov
test
mov
sbb
jecxz
xor
dec
rcr
mov
mov
test
lcall
fisubs
les
mov
test
inc
stos
js
push
inc
mov
sbb
cld
push
and
out
or
loop
or
loopne
mov
inc
mov
push
fsts
push
nop
and
jge
push
hlt
in
sbb
fstpl
scas
shlb
mov
jg
clc
lods
enter
imul
pop
mov
call
aas
adc
add
cmp
insb
cwtl
test
rol
xchg
xchg
outsl
cld
mov
icebp
pushf
dec
pop
jle
ljmp
call
pop
cmp
jmp
mov
ljmp
xlat
cmc
inc
pop
loop
sti
add
push
inc
in
jl,pt
mov
pop
pop
ds
xor
movsl
adcb
mov
mov
add
test
sub
jle
mov
jmp
sub
outsb
in
pop
dec
mov
pop
mov
xchg
jns
jge
or
cmpsb
in
or
jae
into
les
inc
inc
push
push
push
in
mov
subb
sub
insl
test
adc
adc
in
mov
jg
cmpsb
adc
es
out
adc
testl
imul
fldl
fistpl
or
daa
push
aas
int
insb
mov
pop
mov
inc
jmp
les
inc
mov
inc
sahf
adc
sti
loope
xchg
js
add
pop
sbb
and
fiadds
or
sti
adc
inc
lds
mov
pop
add
pop
adc
mov
lea
and
mov
push
cmpsl
out
push
jnp
fistpl
outsl
mov
push
and
mov
iret
push
mov
mov
mov
ljmp
jp
rcrb
inc
mov
out
ss
or
adc
fistpll
inc
stc
inc
mov
sti
fnstenv
pop
pop
mov
sub
cmc
sti
dec
aad
pop
inc
test
dec
sub
dec
rclb
mov
jge
jp
add
and
scas
add
inc
cmpb
adcb
add
in
movb
fisubrs
add
adcb
mov
sbb
lcall
push
sub
movsb
jnp
test
add
inc
mov
dec
jb
xor
mov
or
lret
push
in
cmp
pushf
insb
cmp
cltd
or
ret
add
rcll
out
repz
loopne
mov
movsl
mov
inc
loope
jl
add
mov
rcll
icebp
shrl
xor
data16
mov
vpsubb
adc
ret
sub
jmp
pop
inc
xlat
sub
jns
sub
inc
arpl
in
pop
cltd
fidivl
inc
or
dec
cld
adc
outsl
jge
pop
xor
movsl
push
cld
cmpsb
mov
add
addr16
mov
loopne
enter
push
jmp
push
push
insl
pop
shl
push
adc
jge
loopne
push
xchg
movl
mov
mov
push
jnp
dec
pop
jge
popf
outsb
sti
push
mov
mov
adc
in
shlb
jne
pop
aaa
inc
pop
ljmp
inc
xorl
adc
shll
adc
test
lret
ss
insl
mov
mov
inc
pop
mov
addl
adcb
mov
push
add
sbb
inc
push
sbb
pop
aam
add
pusha
or
mov
mov
xor
cmp
dec
pop
mov
notb
dec
xlat
pop
leave
repz
daa
dec
fbld
clc
ret
jns
mov
fidivs
xchg
push
mov
rcl
sbb
gs
jmpw
pop
data16
sbb
sub
push
inc
rcl
adc
xchg
rcr
sbb
mov
add
xor
cmp
lods
mov
pop
fimull
pop
int
repnz
fistpll
nop
frstor
push
iret
out
dec
mov
lock
test
out
call
sarl
and
test
mov
xchg
aas
add
into
mov
mov
aas
add
xor
mov
hlt
lods
pop
filds
and
js
test
fldt
iret
push
push
jg
outsl
jo
xor
popf
pop
negl
mov
push
jl
hlt
dec
test
xchg
in
into
or
push
pop
fistpl
inc
cmc
insl
faddl
dec
mov
icebp
pop
clc
adc
mov
cmp
movsl
mov
in
cmp
dec
jo
stos
jp
roll
jnp
mov
stos
fnsave
dec
mov
in
movsb
ja
orb
pop
jne
leave
inc
cmpsb
sub
cwtl
lret
int3
adc
push
fisttpll
xchg
pop
adc
mov
outsl
cld
sub
mov
pop
imull
fidivrl
jbe
fiadds
fidivs
iret
jbe
jae
inc
xchg
cs
mov
xlat
out
rcrl
in
fwait
xlat
jecxz
call
add
test
cli
in
add
popa
stc
mov
sub
pop
push
add
loopne
fldt
loope
inc
jle
push
and
mov
dec
jno
push
roll
idivw
rcll
add
mov
xor
decb
sbb
mov
add
imul
sbb
jp
xor
mov
lret
mov
popa
sti
or
push
jmp
xor
lea
mov
nop
pop
dec
cmpsb
scas
fwait
push
iret
insl
mov
push
fimull
pushf
mov
jbe
cli
outsl
fidivl
imul
pusha
add
inc
loop
sbb
psubusw
and
cli
das
jg
outsl
cld
cld
add
movsl
loope
in
pop
add
jge
add
stos
mov
mov
mov
stos
aaa
roll
xor
jg
mov
xlat
push
fisttpll
and
testl
push
jnp
dec
dec
shll
lret
and
or
movb
inc
pop
div
fiadds
or
xorl
ljmp
lret
mov
fadds
aas
xchg
rolb
xchg
arpl
sub
loop
aad
push
dec
sub
dec
fistl
or
mov
jp
rclb
das
cld
repnz
repnz
sbb
pop
mov
add
aas
dec
int3
cmp
cmc
ret
inc
jae
filds
roll
xchg
and
jno
cltd
adcb
sti
lcall
inc
bound
mov
repnz
sbb
pop
jle
sbb
sbbb
ljmp
ret
cmp
xchg
push
push
and
insb
and
adc
adc
mov
aam
hlt
movsl
add
mov
inc
cwtl
popf
sbb
mov
inc
test
lock
cmc
inc
push
xchg
push
dec
fsubr
or
insb
lret
je
or
aad
inc
jb
fwait
sbb
scas
push
repnz
or
push
sbb
and
sbb
push
clc
mov
cmpsb
push
outsl
sub
sbb
fmull
test
pop
sub
mov
mov
xor
fnstsw
mov
or
movb
jae
sar
sub
add
insl
cmp
rorl
push
adc
cmp
inc
xchg
jmp
xor
ds
sub
mov
xchg
test
test
cwtl
xor
xor
inc
xor
lahf
sub
mov
cmp
mov
adc
mov
fwait
inc
fs
sbbl
fnsave
icebp
repnz
xor
dec
xchg
dec
adc
imul
mov
inc
aas
sbbb
ret
lods
stos
fiadds
add
push
ret
xor
cld
mov
push
sub
inc
xor
testl
dec
cmp
jae
xchg
ljmp
out
xor
inc
xor
aad
adc
das
or
decl
icebp
notb
jbe
mov
cs
or
cmp
push
insb
push
pop
imul
ret
mov
jbe
out
mov
jns
push
mov
cli
movsl
das
mov
xor
xchg
sbb
mov
adc
xchg
inc
xlat
mov
nop
enter
aaa
rclb
add
adc
sub
js
fcoms
inc
xor
sti
jbe
and
insb
xor
aam
loope
mov
sub
or
push
pop
or
fstpt
xchg
sub
stc
xchg
ja
fcmovbe
fnstcw
pop
stos
dec
cld
in
inc
popl
movsb
cmp
push
ret
lods
sbb
je
pop
sub
movsb
shrl
jns
add
push
movsl
in
and
sub
push
iret
jge
je
ljmp
push
fwait
sbb
data16
scas
in
adc
rclb
sti
je
mov
emms
mov
loopne
xchg
shlb
pushf
pushf
pop
fistl
hlt
or
bound
and
sub
jnp
adc
sub
in
out
call
icebp
into
add
hlt
imul
lret
mulb
dec
ss
cli
mov
add
add
mov
push
push
andl
sbbb
or
aam
sbb
insl
test
das
pop
jg
sbb
aaa
mov
ret
dec
pop
mov
fsubrl
daa
scas
or
sub
mov
cmp
sub
sbb
bound
add
cmc
test
jns
jl
mov
cltd
fwait
cmpl
push
ret
adc
mov
inc
cmp
xchg
sub
xchg
push
shrb
pop
jmp
pop
movsl
sbb
or
cmp
sbb
jge
ljmp
add
aam
sbb
push
leave
mov
mov
andl
lds
adc
xchg
adc
push
fistl
test
inc
sub
pusha
test
inc
and
popf
and
das
outsl
mov
or
sub
mov
pop
mov
xchg
int3
mov
or
sarl
push
cmp
push
fwait
and
mov
js
adc
outsl
sub
andb
or
into
inc
mov
clc
movsb
out
push
cli
mov
ret
sbb
pop
cli
pop
pusha
pop
add
mov
test
lret
insb
in
mov
pop
lods
mov
sub
jne
flds
dec
lock
pusha
mov
shl
adc
rorb
mov
mov
cmp
test
mov
fsubr
cmp
push
cs
enter
cmpsl
sub
add
mov
push
je
adc
loop
roll
cmp
or
cmp
fldt
aaa
add
repz
cmp
lds
push
in
xchg
imul
movsb
xor
jl
mov
cmp
adc
shll
lds
xchg
fwait
sbb
pop
push
add
shlb
adc
push
lds
cmpsb
enter
stos
pop
into
nop
outsb
orl
inc
mov
sbb
subb
sub
dec
sub
fwait
popa
xor
inc
xor
push
xchg
cmp
fisubs
xor
push
je
sbb
sahf
pop
xchg
les
inc
enter
sbbb
les
mov
mov
inc
add
or
inc
inc
or
enter
je
es
adc
sahf
in
dec
and
sbb
add
sti
and
sbb
outsb
hlt
fs
and
mov
adc
cltd
inc
mov
mov
imul
xadd
rorb
sbb
mov
scas
jp
imul
mov
pop
ss
mov
push
xor
mov
dec
setle
in
pop
stos
sub
inc
outsb
stc
imul
les
xchg
lret
sbb
xor
lock
ljmp
push
pushf
xchg
ljmp
mov
jp
jg
mov
add
in
jl
dec
cmpl
or
inc
orl
movsl
push
imull
and
into
push
sti
mov
pop
arpl
jo,pt
mov
call
fwait
js
loopne
mov
jo
fcmovne
mov
push
and
sbb
std
sub
add
pop
das
fsubrl
mov
xchg
cmp
mov
inc
mov
sahf
xchg
sub
mov
sub
stos
inc
ljmp
loopne
loopne
pop
in
adc
mov
fistpl
push
lahf
and
mov
jge
in
mov
rolb
gs
incl
pop
fs
mov
and
decb
xchg
repnz
xor
fcomip
daa
clc
mov
aad
sbb
mov
fisubrs
insl
cmpsl
cmpsl
stos
shll
cld
pop
dec
mov
addr16
ret
dec
call
icebp
jne
iret
sahf
or
jle
push
push
pop
ds
rclb
mov
push
insb
rorb
and
add
cli
movsl
testb
dec
fcompl
cmp
push
adc
xor
rep
aam
mov
jmp
push
pop
push
jecxz
add
aad
ljmp
jo
fsubrl
aas
popf
cmp
cli
mov
push
stos
sbb
mov
sahf
test
fstl
inc
mov
xor
mov
leave
jno
mov
pop
pop
lock
movsl
sarb
or
adc
xchg
repz
pushf
push
or
lret
and
cltd
orl
sbb
popf
add
arpl
jg
push
in
jnp
shll
xchg
lret
movl
push
mov
xchg
ljmp
jp
inc
ja
sti
sbb
pop
push
lret
cli
cwtl
and
pop
jg
les
insl
outsl
and
xchg
lods
sub
xchg
push
cmp
test
stc
jle
dec
inc
in
dec
xchg
addb
and
xchg
fldt
loop
call
or
hlt
push
out
mov
adc
cltd
ret
inc
nop
add
mov
cmpsl
ja
es
and
repz
test
mov
add
mov
mov
dec
lods
cli
fcmove
and
pop
aad
pop
sub
sub
pop
xor
fisubl
aaa
hlt
add
xchg
inc
pop
loopne
imul
andb
cwtl
insb
out
inc
xchg
add
vmread
push
out
jbe
out
or
cmp
push
fmull
cwtl
sub
xor
add
push
cmpsl
gs
pop
xor
jo
cmpsb
cmp
cli
xchg
and
rcrl
push
or
or
test
and
mov
ljmp
pop
hlt
and
dec
stos
add
inc
stos
icebp
lea
cmp
jbe
mov
jo
inc
inc
int3
inc
sarl
loopne
mov
fsubl
test
mov
bound
add
mov
add
adc
fiadds
jb
mov
push
lods
inc
sbbl
dec
or
leave
cmp
repnz
push
testl
imul
mov
or
adc
inc
insb
sbb
xor
cmp
pop
or
orb
inc
addl
loopne
stos
fistpl
mov
fmuls
arpl
andb
xor
andl
cmp
pop
xchg
mov
push
sbbl
hlt
fiaddl
ss
sbb
aaa
mov
sub
mov
xchg
push
js
in
inc
pop
add
mov
adc
inc
lcall
lds
mov
sub
and
shlb
test
ljmp
add
inc
xor
lret
dec
enter
sbb
dec
stos
aad
lods
inc
fiadds
lds
dec
and
pop
stos
fcmovu
rolb
add
mov
mov
int3
xchg
hlt
outsl
push
cmpsl
repz
das
adc
daa
sbb
jne
enter
add
test
repnz
lret
pop
xchg
leave
jl
es
push
cltd
inc
xchg
adcb
dec
ja
stos
add
loope
mov
mov
dec
sub
and
inc
mull
jl
out
pop
ja
notl
and
push
push
aad
loop
mov
adcb
push
push
sub
mov
adc
adc
sub
inc
dec
pop
iret
push
in
pop
push
inc
hlt
enter
or
pop
xchg
mov
add
test
add
clc
sbb
lods
ret
pop
mov
mov
mov
faddl
cmp
in
dec
push
cld
mov
pop
mov
sbb
call
movsl
or
daa
adc
rol
jo
pop
jnp
test
cmp
enter
pop
push
mov
mov
stos
or
jne
sbb
mov
inc
xchg
rorl
jle
inc
inc
je
les
add
add
push
jp
add
in
std
cs
daa
add
sub
push
mov
loopne
dec
lock
push
stos
and
add
pushf
pop
push
push
cld
add
dec
jle
or
xchg
xor
add
jb
rolb
add
and
fucomp
cmp
mov
loopne,pn
add
rcll
cmpl
aad
push
inc
pusha
inc
add
addb
adc
loope
mov
mov
or
lea
adc
ljmp
cmc
pusha
xchg
mov
xor
cmpsb
mov
add
xchg
fisubrl
loopne
mov
xchg
jbe
and
psrlq
call
cmp
xchg
or
inc
cld
adc
popa
in
lahf
mov
xchg
adc
in
inc
lds
adc
xor
mov
mov
loopne
popa
pushf
cmpsb
add
outsl
xchg
pop
js
sbb
ret
call
add
cmpsb
cli
pop
push
cmc
insl
dec
sbb
mov
in
lock
xchg
jge
sub
stos
xor
xlat
mov
xchg
push
test
sahf
stos
push
fs
data16
xchg
clc
into
iret
jge
jns
adc
mov
repnz
inc
insb
repz
sub
out
mov
jle
stos
icebp
test
shrb
stos
and
xor
push
add
addr16
dec
lret
dec
addl
mov
add
push
repnz
mov
int3
dec
sbb
or
sti
sbb
pop
jb
sbb
push
shll
inc
dec
in
add
sub
and
daa
test
pop
mov
inc
jmp
fbstp
and
sbb
ja
inc
cmpb
inc
cmp
mov
mov
test
add
inc
loopne
rcll
insl
dec
cmp
xor
jp
or
xchg
dec
lods
std
test
or
stos
es
cmp
sub
cmpsb
add
dec
push
dec
add
das
aad
fs
in
aam
cmp
jg
sub
and
mov
stos
loop
fidivrl
pop
and
or
or
and
mov
push
push
outsl
loop
and
aam
mov
insb
push
add
andl
lcall
inc
mov
push
mov
pop
pop
cmp
add
test
mov
sub
inc
imul
hlt
dec
pop
adc
gs
sbb
out
outsb
shlb
cwtl
cmc
adc
ds
clc
movsl
sub
sub
sahf
mov
adc
aas
xor
lahf
mov
pushl
jecxz
outsl
call
rcr
xchg
add
sbb
jecxz
mov
pop
jge
and
jge
add
dec
pop
stc
pop
dec
ret
mov
inc
mov
mov
fldenv
xorb
inc
imul
pushf
jg
in
das
js
jp
or
loop
or
pop
jmp
mov
mov
and
je
mov
lods
fcoml
sarb
test
inc
ret
lahf
add
insl
push
mov
jno
adc
decl
jbe
imul
movsb
add
aam
adc
lea
ret
push
cmpsl
pop
and
scas
sbb
mov
push
rorl
push
fwait
push
arpl
push
cld
js
xor
mov
imul
mov
sbb
push
mov
jae
sub
xor
cltd
push
adc
jnp
add
jg
lock
orl
and
movb
jmp
ljmp
jle
push
dec
out
aaa
fnstcw
ja
cltd
xchg
adc
mov
lea
push
sub
lods
hlt
cmp
lea
mov
cmp
fnstenv
lcall
xchg
lods
mov
mov
xchg
ljmp
je
ljmp
lods
in
inc
or
adc
jecxz
shl
loope
pop
mov
pop
lret
pop
cld
repnz
mulb
pop
jmp
test
sahf
or
mov
push
sbb
mov
daa
or
adc
jnp
mov
shll
addr16
add
lods
stc
push
mov
push
dec
pop
addr16
xor
inc
pop
pop
fnsave
movntps
outsl
mov
popf
inc
adc
mov
inc
addr16
add
and
mov
add
fwait
jb
adc
cmp
push
pop
cmpl
mov
pop
and
adc
lods
aaa
loopne
fisubl
mov
rcrb
leave
jge
pop
flds
stc
mov
mov
mov
sbb
clc
add
mov
in
jb
fldcw
loope
test
xchg
in
pop
orl
adc
sbbb
push
cmp
fldl
loopne
sbb
cmc
insl
inc
adc
add
jo
push
inc
stos
lret
repnz
xchg
fcmovnu
cs
imul
fistps
add
inc
pop
jnp
sbb
outsb
push
sub
test
pop
inc
and
sbb
aam
imul
push
clc
aam
xchg
mov
mov
insb
into
mov
pusha
stos
add
js
mov
dec
add
ret
pop
mov
xchg
mov
push
cmp
cmpsb
dec
dec
outsb
cwtl
adc
inc
rorl
inc
mov
aaa
adc
out
jecxz
pushl
dec
movsb
or
popa
les
mov
cmp
rclb
fistps
inc
faddl
dec
repnz
in
cmp
fists
repnz
sub
enter
mov
outsl
cwtl
jle
lret
xor
inc
fst
push
xchg
lods
or
imul
dec
add
mov
sti
ret
mov
push
mov
ret
dec
and
sub
hlt
fiaddl
mov
loop
mov
shl
lahf
in
mov
insl
jmp
dec
subb
add
inc
in
dec
testl
jecxz
add
je
fsubrs
je
pop
outsb
dec
bswap
in
adc
imul
mov
mov
cmp
xor
sbb
cs
xor
test
lea
mov
mov
xor
or
and
push
pop
fistl
outsl
dec
adc
xchg
add
dec
pop
dec
testb
fsubrp
call
cld
or
xchg
ljmp
pop
les
inc
es
sete
sbb
rclb
pop
aam
dec
push
jmp
mov
sbb
sbb
inc
xchg
dec
mov
int
push
testb
lods
aam
adc
or
or
cmp
and
fwait
and
jmp
or
add
mov
jl
mov
push
push
push
add
mov
mov
adc
jg
pop
fdiv
cli
lods
xor
add
and
mov
pop
push
cmc
sub
lahf
jns
xchg
or
inc
mov
add
sar
lods
cmp
push
cwtl
shrl
sub
call
lcall
outsl
rorb
fcmove
arpl
fs
or
xor
cmp
lea
adc
dec
pop
cmpsb
cmp
rclb
mov
lret
jb
rol
imulb
pop
jle
ljmp
inc
pop
in
cmpsl
inc
sub
mov
push
inc
mov
add
out
pop
sbbb
sub
or
and
add
popf
mov
push
ja
xchg
cs
sbb
adc
pop
dec
test
stos
inc
pusha
fistpl
stos
int3
pop
sahf
adc
es
lret
out
jmp
jle
cltd
pop
pusha
push
adc
xchg
xor
pop
test
xlat
cs
push
movsb
jbe
dec
outsb
lock
cmp
lcall
sbb
pop
sbb
in
fimull
mov
dec
xor
pop
test
mov
inc
and
xor
sbbl
pop
xchg
mov
rclw
je
mov
cwtl
dec
test
test
aas
adc
sbbl
nop
push
mov
aaa
xchg
orb
out
sbb
int
xor
adc
in
addr16
aaa
sbb
cli
xchg
pop
loopne
or
push
adc
sbb
xchg
add
or
dec
xor
pusha
mov
mulb
es
cli
xor
mov
insl
mov
lods
push
mov
cmc
in
mov
outsl
cld
out
sbb
data16
xor
xor
loopne
fs
lret
pop
mov
data16
insl
test
sbbb
xchg
out
mov
mov
mov
out
pop
mov
dec
dec
insb
adc
leave
push
gs
inc
std
je
pop
daa
stc
xchg
adc
cmp
pop
pop
xchg
and
add
xchg
push
dec
add
lcall
scas
lret
push
in
icebp
and
movsl
das
ret
mov
mov
and
popa
aam
in
add
push
out
xor
int3
call
jge
mov
sbb
sub
sub
jge
mov
jl
icebp
leave
icebp
mov
mov
fwait
outsl
fldt
lret
ret
mov
shll
add
cmc
push
insl
jp
lea
lods
repz
xlat
jo
outsb
dec
cmp
cmp
mov
cmpsb
pushf
insb
mov
adc
inc
pop
sarl
nop
test
jmp
mov
ret
divb
inc
mov
rorb
jmp
mov
and
lret
jno
push
dec
mov
inc
outsl
push
adc
jecxz
jo
mov
dec
sub
mov
sbb
daa
mov
ret
add
add
out
dec
popf
js
push
xor
aaa
sub
or
mov
xchg
adc
aad
outsl
js
xlat
cwtl
cmp
int3
int3
cmp
pop
scas
xchg
scas
addl
jno
std
push
push
aas
add
jecxz
mull
mov
push
mov
jl
or
ss
push
mov
pop
decb
es
or
jo
out
jne
out
add
dec
xor
xchg
fbstp
call
push
and
or
test
mov
add
sbb
das
push
pusha
sub
push
mov
test
shll
loop
pop
or
xadd
test
out
ljmp
cld
pop
lcall
test
mov
pop
loopne
rorb
or
sbbb
ret
push
push
mov
cmp
aaa
lods
xor
jle
cmp
repnz
in
cli
pop
shl
mov
adc
std
and
dec
nop
push
mov
push
or
sbb
js
inc
add
pusha
xchg
cmp
adc
inc
jmp
jmp
nop
mov
call
call
test
lds
fbstp
clc
cltd
mov
xlat
push
popf
dec
scas
sub
xor
hlt
jmp
sbb
pushl
pusha
into
mov
adc
insb
mov
std
xchg
jo
in
inc
sbb
movsb
sbb
push
lcall
fsubr
jl
mov
jno
gs
dec
adc
cmp
loop
mov
ds
push
outsb
pushl
dec
dec
stos
sbb
pusha
jno
loopne
or
sub
cmpsl
sbb
mov
iret
cmc
sar
push
dec
jae
nop
aam
xchg
nop
push
dec
pop
jno
mov
xchg
cmp
pop
pop
or
xlat
sbb
xor
fdivr
fidivrs
in
inc
scas
out
test
in
pop
popf
daa
out
cmp
aas
add
ret
cmp
daa
jbe
shr
ss
jae
inc
icebp
test
jo
adc
pop
lcall
in
ja
adc
xchg
or
ljmp
inc
push
test
test
ret
orb
cmp
mov
mov
repnz
lcall
call
out
aad
adc
bound
outsl
and
inc
test
pusha
sbb
jmp
or
dec
inc
dec
xchg
fs
push
outsb
pop
and
sbb
push
jl
pop
leave
cmc
inc
push
fisttps
or
clc
mulb
pop
jge
scas
es
test
bound
mov
out
sbb
add
iret
sarl
jne
or
push
dec
add
cld
cs
adc
fdivr
or
inc
pushf
aaa
clc
pushl
int
push
hlt
sbb
sbb
xor
jne
jg
ret
outsb
pop
shll
ret
jne
and
testl
dec
sti
cmp
negb
xchg
clc
decl
icebp
iret
into
dec
and
xchg
popf
or
fdiv
dec
std
lds
push
pop
adc
fstpl
sbb
inc
sahf
pushf
insb
rorb
mov
js
scas
fcmovnb
outsl
mov
xor
cmp
inc
inc
pushf
dec
add
outsl
jne
mov
cmpsl
dec
and
test
loop
das
fisubs
pop
stc
mov
mov
mov
test
cmpsb
push
inc
test
add
jno
into
int
add
xchg
and
sar
mov
fdivrl
cmp
arpl
repnz
jg
sti
cmp
or
sbb
push
mov
or
cmpsb
adc
insb
add
or
sbb
call
mov
jp
sti
lcall
adc
or
push
cli
and
test
std
push
inc
jmp
nop
ljmp
in
push
or
fldl
push
mov
inc
push
adc
imul
mov
decl
imul
sti
int
bound
dec
enter
xchg
outsl
mov
and
popf
add
lds
decb
outsl
cmpsl
inc
push
dec
invd
xchg
xor
fnstsw
pop
mov
pusha
popa
push
popa
add
adc
fwait
subb
out
pop
pop
add
sub
jg
iret
mov
push
icebp
fistl
and
in
and
rcll
lods
cmove
call
orl
mov
pusha
add
add
mov
lds
lds
push
bound
data16
les
mov
adc
inc
pop
dec
lret
inc
fadd
rorb
addr16
das
pop
fistl
or
int3
scas
inc
jbe
mov
js
cmpsl
mov
dec
sgdtl
mov
or
mov
xor
push
adcl
jge
sub
cmpsl
ficompl
mov
outsb
mov
les
adc
paddsb
fcomps
pop
mov
pop
pop
and
xchg
jmp
ljmp
mov
jle
inc
mov
aaa
cmovno
movsb
sub
inc
in
pop
xchg
adc
pushf
jo
fcoms
cmp
int3
jnp
mov
inc
inc
xor
hlt
imulb
movsl
lods
adc
mov
aad
sub
jge
or
inc
mov
out
mov
inc
and
xor
cmc
and
cmc
outsl
pop
fidivrs
dec
add
inc
pop
addr16
xchg
aaa
mov
mov
insb
push
xor
inc
cmp
sti
pop
mov
jle
in
or
pushf
jle
adc
aas
insl
sub
pop
cltd
mov
xor
out
mov
sbb
or
stos
loopne
movsl
mov
fwait
or
or
sub
push
sub
add
sbb
les
and
and
sub
bound
sub
inc
mov
mov
xchg
rclb
cmpsb
rorb
cs
pop
inc
adc
inc
enter
add
ret
xchg
dec
inc
fstl
aas
xor
sbb
adc
or
mov
and
jg
pop
outsl
lods
xor
shrb
in
ss
outsl
fistl
sub
dec
add
neg
js
fisttpl
aam
push
inc
mov
jp
sbb
dec
test
arpl
xchg
aaa
idivl
cmc
jg
mov
push
in
jmp
addr16
lcall
add
pop
out
pop
push
enter
das
sub
out
hlt
pushl
add
insl
sahf
jnp
push
sub
dec
push
dec
fs
fucomi
sbb
sbb
ss
test
arpl
add
inc
add
adc
mov
lret
mov
ja
rclb
fcomi
add
lret
enter
aaa
pop
jg
mov
mov
popf
or
test
stos
sbb
jp
xor
add
adcb
mov
cmp
dec
push
or
shlb
jne
mov
mov
xchg
cmp
mov
rclb
lods
sbb
stos
inc
int
subb
add
and
or
test
xchg
mov
cltd
outsb
hlt
push
mov
xor
cld
sub
test
arpl
push
sub
and
icebp
ljmp
add
xor
popa
mov
mov
je
add
sub
xchg
push
mov
outsl
fwait
inc
pop
out
add
mov
decl
lods
cmpb
jno
mov
sub
mov
sarb
and
sub
lds
mov
sub
loop
fs
inc
repnz
add
pop
stc
in
nop
test
dec
shrb
jbe
cmp
jp
faddp
stos
scas
mov
push
mov
push
decb
fwait
add
aam
xchg
inc
pop
icebp
jmp
pop
and
push
sar
sub
loop
cmpsl
push
sbb
icebp
call
mov
dec
inc
and
pop
adc
js
sti
fldt
in
out
add
jne
adc
cmpsl
xchg
adc
jbe
add
fisubl
fisttps
adc
jb
jge
sbb
xchg
xorb
push
in
push
jbe
jge
add
sbb
flds
dec
or
xor
addr16
pop
mov
mov
add
cwtl
or
sar
pop
mov
inc
pushf
mov
inc
das
dec
mov
sub
pop
xor
inc
or
sub
ss
inc
ror
cmc
stos
push
xchg
pop
testl
lret
loopne
xor
sahf
sbb
inc
pop
jbe
sub
xor
xor
subb
cmp
loope
jg
andb
inc
jmp
adc
adcl
add
rclb
in
sbb
adcb
sub
jb
mov
hlt
pop
xor
test
js
inc
loopne
outsl
and
and
in
fsubs
cmp
rcl
cld
push
adc
out
fisubl
add
xchg
fwait
lock
sub
xchg
adc
sub
into
inc
jp
mov
jge
or
jbe
fimull
or
sub
inc
fimull
push
push
ret
xor
stc
je
mov
ret
mov
hlt
cmp
push
or
in
test
nop
nop
stos
xchg
pop
pavgb
mov
add
jae
cmp
and
inc
and
int
mov
jbe
xor
pop
push
popa
xor
and
aad
pop
push
les
mov
pop
xchg
dec
int3
jge
push
push
mov
sbbb
mov
mov
and
inc
hlt
movsl
rorb
lcall
faddl
cmp
sbbb
shlb
movsb
pop
cmp
je
pop
pop
ja
xorb
mov
cmp
imul
lods
cmp
dec
sti
and
dec
inc
xchg
pushf
add
push
fstp
inc
inc
adc
sbb
shlb
dec
in
test
or
iret
cmp
movb
adc
adc
push
mov
mulb
sbb
xor
pop
adc
out
xchg
adc
cmp
and
pop
or
and
mov
hlt
test
rcrb
mov
sub
mov
cld
fldenv
add
mov
or
insb
shrl
cmp
cmp
imul
mov
xor
out
sbb
and
adc
fwait
xor
sub
scas
shlb
rorl
and
or
sarb
add
mov
and
adc
dec
sub
mov
dec
pop
int3
out
out
loope
cmpl
push
lret
lret
sub
inc
les
jae
xor
shr
xor
fsub
mov
adc
ficoml
cmp
rcrb
fmulp
add
mov
push
adc
push
out
xor
pop
add
cmp
out
bound
mov
cld
movl
pop
jo
add
addb
cmp
in
sbb
mov
fs
rclb
or
add
inc
insb
or
mov
in
inc
jbe
sub
xchg
cld
js
mov
mov
dec
cmp
xor
add
data16
clc
mov
leave
and
or
jmp
or
cwtl
dec
push
lds
push
repnz
lahf
pusha
nop
jle
std
imull
fists
cwtl
mov
shll
in
and
popf
cmpb
orl
pop
xchg
hlt
popa
add
subl
or
popa
add
orl
cwtl
int
push
in
inc
add
xchg
roll
popa
mov
shll
jmp
add
icebp
test
ja
loop
cmp
xchg
cld
pop
sub
and
dec
xchg
adc
xor
push
adc
xor
mov
cmp
or
mov
and
sub
jo
jo
adcb
push
pusha
add
and
xor
xor
mov
push
inc
sbb
lcall
mov
stos
loopne
xchg
jle
pop
jecxz
fs
and
mov
andl
mov
push
icebp
bound
lods
scas
gs
std
call
and
lret
pusha
outsl
mov
imul
sub
test
push
inc
std
call
pop
mov
mov
xor
add
pop
popf
lcall
cmp
xchg
or
jl
dec
aad
jae
jne
mov
pushl
dec
js
cmc
mov
bound
dec
mov
loope
faddl
insb
mov
cmpsl
mov
fiadds
ficompl
scas
or
cld
mov
mov
jp
mov
lds
out
mov
sbb
nop
test
or
mov
in
sub
mov
or
mov
aam
pop
adc
loope
mov
gs
cmp
aad
cmc
jg
lods
ss
add
sub
mov
push
mov
xchg
sub
inc
mov
xchg
sub
dec
fstps
add
sbb
call
aaa
in
mov
clc
pop
sub
add
mov
mov
xor
call
pop
loope
add
into
addb
ljmp
mov
cmpl
mov
fldcw
sub
std
or
or
popf
lea
cld
fcmovnb
add
dec
imul
jg
mov
popa
lea
in
jg
popf
movl
and
fdivrs
adc
fistpll
push
dec
int3
sub
loopne
adc
xchg
mov
int
xchg
fildll
xchg
stos
repnz
hlt
pop
inc
dec
add
and
cmp
cmp
add
push
add
jge
adc
orl
push
data16
mov
sub
test
rcrb
stos
and
test
xchg
mov
movsl
xor
cwtl
sbb
mov
adc
xor
gs
daa
adc
scas
mov
dec
test
adc
dec
mov
mov
dec
imul
add
fimull
sbb
int
jbe
mov
in
aaa
dec
icebp
inc
mov
imul
lock
shrl
ljmp
sti
inc
cwtl
add
loopne
xchg
jmp
mov
push
adc
or
testl
out
xchg
pop
xor
cmp
inc
lret
xchg
int3
jge
jle
enter
movsl
xor
shrl
mov
and
loop
mov
xor
jne
or
xlat
iret
inc
ljmp
xchg
xchg
call
fcompl
rorl
fimuls
ret
mov
or
out
sbbl
insl
shrb
add
mov
loopne
add
stos
outsl
aaa
and
xor
loope
test
inc
xor
lcall
fwait
loopne
mov
dec
fiaddl
rcll
shll
std
and
sbb
in
repz
jp
daa
jo
test
dec
popa
test
sar
push
outsl
mov
sarl
mov
popf
ror
mov
adc
js
mov
sbb
fmuls
and
jg
xor
and
adc
jge
mov
or
sbb
add
fwait
movsb
xor
int
pop
fildl
les
and
test
sbb
dec
outsl
inc
out
mov
insl
cmp
pop
sti
es
xchg
dec
and
es
cmc
int3
test
jecxz
nop
dec
gs
jecxz
xor
pop
insl
push
mov
and
mov
xchg
in
jns
sti
jo
push
mov
jge
jno
shrb
and
mov
pop
sbb
fcomi
ss
rorb
pop
dec
orl
or
fcoml
fcoms
mov
jno
daa
bound
inc
push
fdivl
rorl
mov
pop
sbb
or
fistpl
sub
sbb
cmc
nop
adc
mov
or
ficoms
push
rcll
jne
cmp
dec
adc
pop
adc
cmp
add
pop
je
packssdw
jmp
ljmp
mulb
icebp
and
popf
lock
push
clc
jno
xchg
sbb
rcrl
test
mov
and
and
cs
jmp
jne
js
inc
cld
outsl
fistl
rorl
rcrl
jge
test
pop
stos
mov
rcrl
sbb
add
ja
mov
adc
aaa
mov
add
add
imul
sbb
inc
mov
mov
xchg
jmp
rcrb
jg
inc
stc
add
mov
jb
inc
orl
jnp
pop
les
popa
leave
adc
cmp
lds
in
je
aas
clc
add
mov
nop
mov
xchg
je
pop
xlat
divl
jmp
lea
push
lds
sti
pop
test
lods
jmp
adc
loopne
pop
sbb
push
inc
cmc
cwtl
repnz
lds
pop
rcrb
adc
cli
xor
jg
xorb
pop
pop
sub
jb
xor
jl
adc
nop
scas
mov
or
xchg
movsl
orb
ja
or
pop
test
jp
adc
push
add
flds
push
rcll
mov
stos
xor
mov
addr16
cltd
aas
mov
add
or
bound
pop
cli
mov
and
hlt
push
inc
frstor
cmp
mov
fcomi
and
arpl
add
add
sub
faddp
and
dec
lret
sub
and
jnp
or
push
adc
xchg
ror
add
mov
loope
mov
test
mov
xchg
pop
iret
adc
popa
jmp
pop
xchg
cmp
mov
dec
mov
shl
lock
popa
mov
mov
adc
fdivrl
pop
jg
pop
orb
dec
insl
adc
and
adc
cmpsl
out
fstpl
insl
xchg
lock
sbb
add
sub
hlt
dec
lds
adc
es
dec
adc
shlb
je
int3
adc
in
xchg
inc
or
cmp
xor
inc
push
xor
or
cli
adcb
inc
push
cwtl
rclb
dec
pop
jp
push
lahf
mov
loopne
daa
out
lods
dec
sub
mov
mov
sbb
sub
adc
adc
shlb
add
xchg
iret
mov
cmp
xlat
cmp
stc
decl
js
sbb
repnz
mov
dec
mov
or
imulb
icebp
cwtl
scas
hlt
inc
jbe
call
mov
punpcklbw
into
cli
iret
sbb
das
cld
xchg
pop
in
adc
out
repz
and
xchg
inc
rorb
out
ja
dec
pop
push
cld
mov
push
push
cwtl
adc
fnstcw
cmpsb
les
mov
pop
xchg
daa
xchg
xchg
cwtl
push
clc
mov
inc
add
in
rcrl
pop
pop
lock
xchg
mov
add
cwtl
pop
mov
dec
scas
and
xchg
add
sahf
push
fucomp
mov
sbb
xchg
fisttps
inc
fnstenv
push
dec
ds
addr16
push
mov
push
xchg
lea
jne
mov
add
add
outsl
push
mov
pop
push
and
mov
cld
add
inc
push
push
fs
icebp
mov
mov
cli
xchg
rol
outsl
jge
rcr
xor
loopne
push
push
inc
mov
jge
out
jmp
and
ja
push
sbb
fcmovne
call
fldl
jecxz
adc
sub
and
dec
fistl
lcall
lock
jp
stos
add
outsl
in
stos
stos
dec
pop
je
xor
mov
pop
jo
mov
jno
in
pop
inc
pushf
fwait
add
lret
sbb
dec
mov
mov
fsubl
imul
cmp
int3
xor
divb
ret
xlat
mov
jg
fidivs
add
jo
or
push
les
xchg
cmp
cmpsl
jns
xor
mov
dec
and
cmp
movsb
pop
imull
aad
shll
adc
jnp
xor
movsb
push
cmp
inc
jl
insb
mov
sti
xor
adc
or
cmp
push
clc
push
inc
stc
pop
add
bound
add
cmp
pusha
xor
in
js
sub
sub
pop
cld
mov
dec
sarl
rorb
or
mov
iret
push
mov
inc
mov
inc
fsubl
xor
push
pop
testl
pop
cmpsb
mov
cmp
mov
int
sar
lock
pop
add
or
adc
in
rorl
xorl
xor
xchg
ljmp
lds
fsubrl
pop
dec
jmp
mov
daa
js
xor
mov
push
pusha
xor
arpl
jbe
test
loope
mov
mov
in
and
dec
and
mull
jge
sbb
and
sahf
mov
stc
int3
shll
fdivrp
push
inc
mov
pop
ret
dec
data16
jne
pop
jmp
cmpb
inc
sbb
rcll
movsb
push
add
mov
jl
int
dec
mov
adc
cmc
into
push
jae
push
and
pop
jg
or
mov
inc
jne
jne
cmpsb
xlat
mov
mov
loop
pop
sbb
dec
cld
or
push
test
stc
out
mov
mov
test
int3
jg
and
mov
inc
pop
popa
cmp
pop
add
ljmp
and
jl
and
repnz
inc
jl
out
mov
mov
jmp
mov
dec
jge
inc
lock
lret
mov
jo
neg
fildl
sbb
sub
mov
sub
adc
xor
jl
and
call
addb
add
icebp
adc
xor
push
clc
inc
xor
adc
add
call
sub
pop
mov
fldcw
inc
push
shr
cmp
iret
sbb
bound
rorb
xchg
test
sbbb
or
inc
mov
jo
aas
and
push
mov
lret
shrb
add
dec
fsts
aad
rorl
and
mov
or
xor
fwait
inc
adc
pop
fiaddl
adc
ficoms
cmp
les
test
or
in
js
mov
mov
out
data16
xchg
mov
int
les
xor
push
adc
dec
sbbb
dec
inc
roll
xor
xor
sbb
add
mov
shll
bound
or
in
call
add
pop
jae
inc
pop
out
mov
sub
xor
sub
cmpsl
repnz
out
in
jmp
xor
xor
add
push
hlt
lcall
bound
sub
push
lret
jne
jle
cmpsl
and
shlb
or
push
ljmp
arpl
push
sub
adc
pop
lds
jb
push
sar
or
lret
loope
lock
cmp
add
mov
dec
mov
cmp
scas
leave
in
lret
pop
mov
mov
data16
fwait
call
ljmp
mov
mov
enter
mov
pop
jb
cmp
pop
leave
popa
lahf
jecxz
adc
test
mov
shlb
lods
mov
mov
out
mov
fld
in
mov
sub
je
cmp
jmp
jp
add
cmpsb
add
add
aam
mov
std
mov
call
and
rorb
push
cmp
sbb
std
decl
push
pop
out
fsubrs
aam
and
or
mov
int3
je
sub
xor
adc
add
xchg
fldl
xchg
cmp
mov
sbb
or
jns
sbb
jo
jno
bound
shlb
decl
ss
push
jge
pop
js
dec
popa
ljmp
pushf
scas
jns
mov
and
iret
add
and
xchg
add
mov
inc
ret
rorl
std
std
mov
jne
out
push
fcom
push
mov
jnp
mov
sub
dec
cmc
mov
inc
pop
loope
fsubs
mov
xor
cwtl
push
loope
mov
stos
adc
ja
outsb
jg
enter
sub
jl
scas
lret
or
add
jno
add
lock
push
movsl
xor
xchg
fimuls
inc
repz
add
sbb
pushf
or
fstps
loope
push
dec
test
cmp
mov
cmp
movsb
xchg
call
mov
loopne
fmuls
pushf
pop
push
push
jl
addr16
and
mov
xchg
mov
jg
dec
out
scas
fdivrs
shrl
out
dec
or
lock
jmp
push
idiv
ljmp
pushl
jge
insb
inc
mov
push
rcrb
fwait
std
and
out
outsl
jge
inc
xor
pop
das
xchg
enter
fcomps
mov
inc
rcll
adc
jge
inc
ss
shrl
call
idivl
dec
push
mov
sbb
push
mov
aaa
and
pop
shrl
mov
movsb
adc
mov
ret
sub
stos
cmpsb
dec
das
sarb
add
popa
or
loopne,pn
push
hlt
aaa
addb
cmp
outsl
sub
push
fdivl
sbb
ficompl
aaa
cmp
lahf
rcrb
push
adcl
scas
adc
and
test
add
pop
add
icebp
jg
ret
xor
dec
popa
jne
insl
cmp
jo
push
pop
imul
test
pop
rolb
dec
shll
aaa
pop
out
push
mov
testb
ret
mov
push
and
inc
jmp
repz
out
inc
test
fs
lods
test
and
ret
fidivs
es
fadd
pushl
push
or
xorb
mov
mov
aad
loopne
mov
mov
daa
sahf
stos
cltd
addl
xchg
pop
or
and
adc
dec
aaa
fimull
incl
andb
cwtl
sti
in
hlt
rcrl
pop
clc
push
lds
andl
insl
mov
fwait
sub
ljmp
ret
push
push
rorb
xlat
aam
sub
sbb
stc
xor
mov
xchg
push
or
dec
jle
xor
mov
gs
loopne
hlt
mov
sub
jg
sti
xchg
and
mov
addb
add
adcb
fldt
les
and
fcmovnu
call
and
adc
add
or
and
add
and
divb
aaa
add
inc
test
sub
adc
and
cmp
xor
divb
inc
and
mov
adc
adc
jge
nop
adc
or
mov
inc
and
dec
nop
nop
push
mov
and
or
or
push
adc
fucomi
inc
test
and
test
pop
and
fstpl
mov
xor
test
mov
insl
imul
and
adc
mov
outsb
jno
adc
mov
adc
insl
lods
mov
sub
adc
push
insl
jmp
or
and
mov
fldenv
fcmovbe
fisubl
test
add
sbb
inc
mov
mov
test
push
mov
adc
in
leave
or
pop
imul
add
or
adc
nop
add
fcmovnu
and
mov
orb
add
mov
or
mov
outsb
mov
or
andb
or
cmp
adcb
or
add
cmp
lods
sarb
and
sbbb
lcall
sub
or
or
mov
and
pop
push
inc
inc
inc
popa
imul
add
xor
mov
jae
and
push
js
addb
adc
int
call
push
pop
rcrb
mov
lds
mov
cld
and
add
adc
adc
dec
es
sbb
inc
test
orb
adc
scas
mov
mov
pop
xchg
or
jb
popa
lcall
ret
xchg
or
xor
jo
add
mov
pop
sub
inc
adc
sbb
into
jo
xor
inc
push
sbb
push
push
adc
mov
mov
inc
dec
or
jo
movsl
or
adc
sbb
xchg
push
andb
pop
or
sbb
lods
iret
cwtl
and
xor
adc
cld
sub
popa
imul
xor
push
sub
adc
fstpt
pop
mov
xor
mov
movb
push
jo
imul
popf
and
lods
mov
rcll
fs
imul
adc
xor
inc
adc
pop
rcl
imul
aam
xor
sbb
or
pop
rcl
jb
repz
mov
outsb
int
pop
dec
and
mov
inc
mov
xchg
loopne
jns
rolb
in
ret
push
inc
and
mov
lods
add
add
jo
cmp
imul
addb
or
lcall
push
nop
and
xor
sbbl
sub
dec
lar
pop
and
mulb
test
mov
push
enter
dec
and
jmp
sub
insl
or
mov
data16
test
add
lods
cltd
xchg
sbb
mov
or
jg
cmpb
push
imul
or
push
xor
mov
mov
add
in
rcrl
cmpsl
hlt
out
sbb
rcrb
int3
cmp
rolb
jnp
adc
cltd
pop
dec
fnstcw
outsb
shl
lcall
pop
lods
xor
and
mov
adc
shr
imul
cmp
sbb
adc
lcall
lret
or
call
sbb
lock
xor
clc
cmp
xlat
jmp
mov
or
sbb
nop
add
dec
pop
cmpsb
inc
adc
lods
rcrb
inc
or
jl
xor
or
sbb
mov
outsb
or
or
daa
insb
mov
dec
push
push
ss
mov
sbb
addb
scas
xchg
inc
adc
insb
int
push
dec
adc
jb
sbb
sub
adcb
push
jo
mov
sub
add
enter
divb
inc
mov
sub
fwait
imul
test
xchg
or
nop
loopne
sbb
fisubl
adc
daa
pop
and
sub
pop
je
scas
sbb
push
or
adc
mov
push
stos
mov
jo
stos
loopne
hlt
cmp
xor
iret
andb
scas
loop
inc
push
loopne
add
cmpsb
push
fwait
add
outsl
add
or
dec
mov
or
push
add
es
jo
loopne
jp
inc
ret
pop
int
sbb
mov
push
jg
test
int
test
inc
adc
push
jg
iret
loopne
mov
jp
jb
push
push
es
cmp
inc
ret
shlb
xor
pop
push
push
imul
push
xor
ret
stos
sub
dec
int
insb
mov
dec
insl
int
mov
jle
nop
pop
xlat
push
xor
adc
or
jne
xor
cmp
push
push
stc
pop
or
push
lea
lods
mov
out
mov
add
cmp
xor
xchg
cmc
cmpsl
or
mov
les
shr
lods
mov
inc
add
cwtl
push
cld
lcall
add
aam
movsb
mov
or
push
fistl
and
outsb
in
mov
cmc
stc
ds
int
pop
lret
sub
cmp
imul
les
mov
stos
xor
scas
dec
int
stos
pop
test
in
jg
pusha
imul
divb
aad
ret
mov
fiaddl
movsb
scas
jo
push
xchg
fs
sbb
pusha
mov
ss
rcrb
ds
psrlw
data16
or
push
inc
jae
aam
out
mov
mov
fwait
cmpsl
mov
inc
jae
jge
push
lret
imul
or
and
insl
sub
test
inc
test
mov
mov
mov
mov
orb
cmp
sub
imul
lea
les
inc
adc
adc
imul
pop
or
rclb
cmp
inc
pop
lods
sbb
sbb
add
insb
and
xor
dec
fwait
roll
xchg
nop
shr
pop
fwait
xor
push
inc
nop
jb
popa
push
xor
sub
repz
jo
mov
inc
and
daa
adc
dec
cmpsl
sub
xchg
ret
lods
stos
inc
inc
cmp
cmpsb
xchg
stc
mov
pop
mov
pop
lods
sub
add
or
rep
adc
jge
movaps
jae
pop
inc
sbbb
xlat
xchg
out
jmp
pop
test
add
cwtl
sbb
jecxz
jns
push
jo
lret
mov
out
notl
mov
es
fidivl
test
loope
push
enter
divl
cwtl
dec
add
roll
je
test
and
mov
adc
push
cmp
shlb
dec
es
test
mov
jo
or
call
inc
test
xor
push
nop
adc
xchg
loopne
push
add
xor
push
ret
rclb
lcall
sbb
nop
or
push
pop
and
xor
in
inc
adc
sbb
sbb
call
pusha
enter
adc
mov
fwait
dec
int
and
sub
lea
sbb
sarl
inc
inc
into
insb
mov
and
and
xlat
cmpb
xor
push
dec
les
add
inc
xorb
dec
addr16
filds
xor
xor
ret
mov
add
pop
stos
mov
jmp
push
cmp
dec
pusha
push
orl
adc
fidivs
sub
push
ficompl
adc
inc
int3
pusha
xchg
dec
mov
push
push
dec
dec
out
fbstp
sahf
xor
pop
sub
subl
and
icebp
pop
sbb
cmp
cs
hlt
jns
notb
aam
adc
jo
enter
rcll
add
inc
cmp
lret
sub
bound
jp
rorb
inc
pop
inc
insl
or
xchg
or
lcall
push
imul
sbb
push
or
test
and
or
push
xchg
test
pop
scas
and
push
mov
mov
or
cs
jnp
sbb
mov
cltd
test
push
or
cmpl
test
sub
jb
push
test
nop
dec
fmuls
xor
lcall
addl
mov
mov
dec
sahf
addl
mov
fstpt
xor
sbb
sub
and
jp
or
dec
adc
mov
xchg
fs
scas
test
imul
add
push
dec
rcll
inc
addl
inc
jae
popf
lret
rclb
lods
test
xor
test
push
jo
dec
push
test
add
adc
xor
pop
jae
jp
push
mov
enter
inc
jo
jae
adc
cmpsl
shlb
rclb
mov
mov
mov
lods
rcrb
add
setl
lods
jecxz
pop
xchg
xlat
pop
add
or
push
xor
ljmp
pop
ja
or
out
shl
pusha
cmpsb
popa
jo
loopne
sbb
jb
pop
or
add
push
subb
xor
xor
pop
fistl
andl
inc
stos
mov
mov
lret
adc
dec
adc
fwait
clc
add
leave
jnp
mov
inc
into
push
popf
popa
add
pop
inc
enter
pop
add
cs
out
or
test
fimull
loope
arpl
out
jne
pop
mov
ljmp
jno
add
inc
cmp
stc
orb
iret
inc
das
add
jae
ret
or
pop
ret
inc
xchg
test
xchg
xchg
pop
dec
adc
imul
lcall
addb
shll
push
cs
jae
imul
or
rolb
pusha
daa
xor
lcall
outsl
dec
scas
add
sub
jnp
js
adc
inc
addr16
inc
dec
xor
cs
jae
mov
scas
add
push
inc
shrl
ficoml
lods
xor
add
inc
adc
inc
rcrl
and
and
xchg
lret
shlb
sbb
pop
stc
xchg
or
inc
and
push
cmpsb
sbb
cli
mov
adcb
push
outsl
test
xchg
rclb
xchg
pop
lods
sbb
push
shlb
mov
cmc
and
or
ljmp
stos
insl
push
sbb
mov
arpl
mov
xchg
jne
pushf
out
jae
inc
lods
inc
push
loopne
xchg
je
push
sub
test
push
push
inc
mov
fimull
dec
add
test
sbb
add
lods
cltd
pop
insl
and
andb
testb
adc
iret
push
mov
int
dec
xor
imul
sbb
pop
pop
sbb
cld
adc
push
jo
sbb
push
ret
hlt
xchg
pop
or
loop
push
xor
mov
lcall
push
xor
mov
add
sub
mov
loope
mov
loope
xchg
pusha
mov
and
or
mov
sti
jbe
pop
dec
cmp
nop
push
rclb
mov
aam
or
cs
xor
mov
and
xchg
push
test
mov
das
lods
inc
dec
cltd
xchg
pop
mov
push
mov
mov
rclb
cmc
or
andb
add
shlb
dec
add
cmp
aaa
roll
inc
cli
aad
lea
inc
jne
fsubrl
sub
add
pusha
push
xor
xchg
or
test
test
dec
push
push
scas
add
or
xor
movb
cmpsl
lea
push
mov
and
xchg
xor
sbb
scas
lcall
stos
adc
cmp
or
dec
dec
fwait
test
push
orb
dec
jae
and
test
push
inc
outsb
sub
test
cmp
push
jecxz
dec
mov
dec
fisubs
sbb
or
sub
cmc
push
and
test
les
and
daa
or
push
ficoml
xor
cmp
add
int3
rorl
out
mov
sbb
mov
icebp
andb
test
sub
mov
inc
aas
ss
mov
mov
lods
adc
stos
xor
xor
ficompl
insl
adc
add
int
imulb
push
cmp
lahf
jne
mov
jo
mov
js
es
inc
push
jae
fwait
push
pusha
jecxz
push
mov
push
adc
and
sbb
pop
inc
aam
mov
cmpsb
test
push
push
mov
mov
or
faddp
add
add
adc
adc
xlat
sbb
in
arpl
push
aam
adc
fldl
adc
das
inc
or
inc
push
sub
loop
jg
push
xor
rolb
mov
lret
or
or
push
jo
sbb
jmp
dec
aam
popa
fiadds
sbb
pop
jne
sbbb
lods
mov
mov
scas
xor
and
popa
jo
idivb
test
lcall
or
repz
jae
jno
or
stos
inc
cmp
pusha
mov
or
test
push
js
sbb
fldt
sub
lods
cs
inc
dec
or
mov
icebp
popa
or
lds
ret
jae
sub
lea
jnp
or
fmuls
stc
rcrl
push
loopne
out
adc
es
sub
push
inc
stos
daa
jne
mov
fidivl
mov
sub
leave
xor
sbb
inc
mov
mov
adc
adc
in
jp
sbb
dec
add
mov
jae
push
ljmp
cmp
and
or
mov
and
push
or
xor
andl
imul
lcall
mov
sbb
or
mov
es
jl
add
in
jbe
inc
sbb
add
sub
int
and
stos
imul
leave
nop
mov
push
scas
cmp
push
xchg
shlb
jo
scas
push
loope
cmp
pushf
imul
hlt
xchg
das
add
jno
pop
in
data16
xchg
jne
mov
xlat
push
push
mov
cltd
inc
sarl
jp
jbe
mov
sub
add
pop
or
arpl
insb
test
lahf
sahf
adc
or
je
sbb
pop
sbb
loope
push
dec
xor
adcb
lretw
dec
outsb
jnp
xlat
add
dec
je
and
test
adc
das
lcall
ds
or
or
push
lods
jo
inc
rolb
sbb
ret
nop
cwtl
push
sbb
data16
test
and
cmp
out
mov
mov
stos
jp
pushf
adc
pop
jge
xchg
lret
and
and
shll
push
enter
cs
jle
pop
and
and
leave
xchg
addb
mov
xchg
push
sub
jge
dec
add
shlw
inc
xor
je
lea
jne
movl
push
xchg
stos
cltd
test
int3
out
sub
mov
sbb
cmp
mov
push
jne
aam
scas
jo
mov
xor
ljmp
mov
jb
cld
xchg
aam
jae
xchg
test
cmp
mov
push
inc
std
rcrl
jmp
push
imul
dec
add
mov
xchg
cmp
sub
out
inc
shlb
lcall
std
popf
test
inc
mov
and
int
pop
sub
lock
xchg
mov
mov
xor
push
add
adc
subb
xor
or
and
add
inc
adc
pusha
adc
inc
sub
addl
lea
adc
push
xor
cltd
mov
mov
add
mov
sbb
push
sahf
or
dec
insl
test
ret
sbb
xchg
xor
aaa
nop
pop
int
push
mov
mov
shll
movsb
ret
pop
add
shl
loopne
and
mov
push
inc
gs
xor
xchg
int
adc
loopne
int
mov
adc
add
inc
lds
stc
adc
aad
lods
jo
cmpsb
nop
xor
adc
js
lcall
and
cmp
xor
aam
int
jmp
push
add
adcl
or
pop
popa
lcall
lods
clc
addl
lods
xor
nop
lret
rcl
or
mov
sbb
cmp
cwtl
pop
call
xor
mov
mov
xor
sbb
add
jg
mov
inc
push
movsb
sub
xor
or
test
shll
xchg
add
cmpsb
push
inc
jae
add
popf
in
jo
mov
sbb
cltd
jns
nop
xor
xor
nop
es
pop
shll
in
pop
xor
int
sbb
xchg
adcl
xor
and
adc
pop
in
mov
jo
add
nop
mov
and
mov
add
cmp
cmp
push
or
mov
inc
sbb
lods
inc
addr16
and
inc
push
push
pop
xchg
enter
in
push
adc
arpl
test
pop
es
mov
shlb
push
addb
ret
inc
xor
stos
fwait
test
pop
scas
inc
adc
das
pop
xchg
cli
push
enter
ficompl
adc
adc
mov
xor
and
sbb
and
inc
cmp
loope
or
xor
or
icebp
sub
andb
fists
pop
xchg
push
add
push
mov
into
mov
rolb
test
int3
add
call
push
or
or
dec
mov
push
cmpsl
mov
pop
in
daa
cmp
sbb
pop
push
push
imul
sub
test
mov
xor
push
push
shlb
pop
dec
cmpsb
int
push
add
popa
sbb
mov
les
bound
sub
gs
or
lds
jae
xorl
push
mov
mov
leave
fldt
dec
int
jle
push
pop
xor
sub
ret
jo
jbe
loopne
dec
adc
fldcw
movsl
les
cmp
jle
push
push
mov
sub
jae
inc
sbb
ret
dec
lret
cwtl
ljmp
and
test
mov
push
cltd
xor
mov
loope
fwait
adc
pop
mov
fisubrl
rclb
jae
mov
xor
mov
in
dec
test
dec
and
mov
xorb
add
in
push
add
pop
xor
and
lods
inc
mov
cmc
outsb
inc
xor
push
stos
push
or
mov
leave
adcb
stos
adc
inc
adc
xor
sbb
sub
pop
xchg
lods
sbb
cmp
jmp
jnp
mov
in
outsb
adc
jo
pushf
add
fcomps
inc
fdivrp
mov
leave
sahf
inc
xchg
mov
or
lock
data16
mov
or
aam
adc
mov
mov
add
or
in
sbb
push
xor
shll
sub
mov
xchg
imul
mov
cmp
and
add
push
test
xchg
test
push
push
subl
cmp
or
enterw
addb
dec
sbb
and
mov
lcall
add
adc
les
std
packuswb
pop
jno
insb
xchg
add
fistpll
jb
jp
xchg
int3
add
inc
roll
aad
outsl
or
mov
add
add
add
push
cmp
test
in
jecxz
adc
push
lahf
nop
push
pop
or
add
mov
and
test
sarl
inc
dec
incl
add
gs
fildll
inc
flds
sarl
add
movsb
jle
ljmp
adc
add
ja
add
push
add
outsl
jns
fsubl
xorb
ds
push
xor
ljmp
stos
add
les
mov
outsl
push
sbb
mov
int
sub
minps
or
xchg
or
add
add
pop
jmp
xchg
mov
jb
jmp
test
fcoms
shrb
jg
stos
sub
ljmp
add
fbstp
push
push
nop
add
out
jae
fdivr
add
or
jmp
loope
jge
outsl
add
stc
adcb
push
mov
inc
push
imul
sub
pushf
sub
fcomi
out
ret
add
movsl
add
stc
insb
xor
idiv
mov
mov
fnsave
fs
loope
push
out
inc
push
adc
and
and
outsb
stos
cmp
jnp
lods
mov
aas
cmovae
push
pop
ds
or
push
jnp
adc
idivb
insl
sti
mov
push
adc
jno
iret
adc
xor
adc
rorl
add
mov
inc
roll
mov
jge
jmp
pop
mov
hlt
or
outsb
mov
rol
scas
xor
add
cmp
dec
pop
in
aam
fisttpll
cmp
xchg
std
cli
dec
or
and
daa
outsl
ljmp
ret
or
hlt
aad
inc
dec
fpatan
sub
incl
in
test
inc
arpl
into
mov
pop
fwait
and
sub
fiadds
dec
int3
mov
dec
popa
push
aad
in
push
popa
jbe
and
pop
sub
lcall
ret
js
lock
and
jmp
lods
add
test
or
or
inc
shrb
lds
xchg
lock
or
mov
fwait
adc
inc
add
lret
inc
cwtl
xchg
mov
mov
in
es
int3
fdivl
inc
repz
pusha
cwtl
jge
xchg
aaa
inc
rcl
add
jecxz
lock
mov
push
mov
cld
mov
jmp
iret
sbb
fiadds
cwtl
dec
xor
pop
rcrb
push
jle
xor
or
out
mov
lea
or
mov
dec
add
cmp
icebp
filds
pop
hlt
mov
xchg
add
mov
mov
call
outsb
movsl
jg
xchg
dec
aam
lcall
aad
mov
mov
pop
mov
xchg
adc
push
aam
lock
inc
rolb
sbb
jecxz
test
test
aas
jne
sahf
xor
sti
aaa
jle
and
or
cmp
test
fdivs
ljmp
mov
mov
sbb
sbb
mov
andl
xorb
or
fsubl
xchg
push
or
dec
pop
or
add
add
xchg
jle
inc
adc
mul
rclb
fmull
sub
insl
jmp
icebp
add
mov
push
inc
add
lea
aaa
fdivs
xor
inc
xchg
adc
jecxz
test
mov
push
mov
sub
testb
cmc
pop
into
jge
test
test
sub
gs
je
push
lds
hlt
pop
clc
inc
inc
or
inc
aad
rcl
imul
inc
cmc
dec
inc
addr16
and
adc
add
sahf
or
ficoml
jbe
into
les
daa
fildll
sub
jno
jae
movsb
sbb
out
mov
inc
add
jns
not
add
jmp
lret
faddl
or
pop
cli
pop
sub
adc
mov
ljmp
cli
mov
xchg
dec
bound
sahf
xor
loopne
or
das
push
xchg
inc
icebp
mov
xor
or
scas
pop
add
pop
mov
push
push
inc
loop
pop
ss
ljmp
mov
imul
lret
add
add
outsb
sbb
scas
aaa
sbb
mov
outsl
xchg
bound
inc
lcall
scas
xchg
ret
push
add
xchg
mov
js
sub
xor
dec
or
mov
pop
sub
repnz
cmp
js
xor
mov
inc
movlps
inc
cld
sbb
repz
mov
or
fisubs
mov
outsl
bound
test
sbb
adc
sub
ja
cmp
lea
cld
pop
push
aas
pop
sbb
in
cmc
push
subl
pushl
and
or
add
sub
cs
stos
movl
test
mov
sub
add
in
adcb
call
or
orb
call
jg
and
das
xchg
jg
movsb
shld
or
aaa
pop
stc
pop
stos
mov
jmp
and
cmp
or
filds
mov
push
xor
ss
int3
mov
jo
xchg
imul
push
mov
shr
out
sub
fbstp
jl
sar
or
scas
jae
fisubrs
insl
filds
adc
jo
movsl
mov
mov
movsb
push
lret
adc
rol
inc
ret
sub
xchg
popf
fstps
lock
lret
push
arpl
mov
xlat
adc
push
ljmp
std
mov
inc
adc
push
es
rorb
jmp
ret
xchg
adc
imul
repnz
inc
pop
xor
sbb
cmp
dec
xchg
nop
stos
xchg
xchg
adc
fsts
filds
lret
xchg
lods
fs
lret
add
repz
shll
mov
sbb
inc
sub
sub
in
mov
xor
ficompl
cmp
and
inc
sbb
or
test
clc
and
mov
mov
mov
ror
adc
sbb
push
js
xor
daa
mov
test
cmp
mov
sarb
mov
xor
ret
test
push
jge
ja
jmp
iret
jo
jne
aas
outsb
cmpsb
lea
mov
bound
inc
int3
into
mov
das
out
stc
clc
add
fstl
pop
and
pop
push
pop
add
jge
adc
push
fsubrs
outsl
ret
bound
pop
out
aad
mov
sub
fmuls
push
pop
push
sti
lret
xchg
inc
or
xor
and
cmp
popf
call
push
je
cld
mov
lea
std
mov
inc
fists
xor
lea
movsb
dec
in
inc
push
nop
je
sbb
push
orb
pusha
leave
inc
pushf
xor
hlt
in
outsb
adc
xor
mov
mov
call
adc
orl
mov
add
mov
lock
pop
outsl
fnsave
add
add
ss
fcoms
mov
push
dec
xacquire
movsl
add
adc
mov
data16
ret
or
xchg
dec
sub
xchg
pop
and
adc
int
add
popf
jo
pop
adc
sbb
push
sub
jg
and
add
xor
sbb
jo
pop
dec
movsl
cmc
dec
xor
lods
mov
jbe
cs
mov
arpl
adc
pop
enter
out
adc
call
or
divb
cwtl
ds
movsb
cld
sub
in
adc
jge
jo
adc
pop
inc
fcmovnb
lods
push
enter
mov
testl
pop
clc
jg
mov
bound
sbb
xchg
cmp
mov
into
adc
scas
les
inc
or
mov
add
dec
xchg
mov
leave
or
xchg
sub
sti
cmp
and
push
sbb
dec
in
loopne
bound
xor
ss
sti
lds
in
pop
into
mov
aas
in
dec
mov
sub
xchg
orb
vphaddubd
add
pusha
test
fldl
stos
jecxz
jnp
dec
xchg
fwait
shll
adc
insl
sti
incl
movsb
inc
pop
in
inc
sub
jmp
dec
inc
scas
xor
cmp
mulb
shl
sub
stos
inc
pop
cli
mov
fisttpl
mov
aad
xchg
decl
adc
out
pop
incl
push
push
je
inc
jno
xor
pop
push
jne
inc
das
mov
pop
shl
push
xchg
mov
xchg
popf
mov
pop
movl
imul
arpl
and
push
lock
in
mov
inc
movsl
int
cmp
das
jl
cld
xor
ficoms
mulb
mov
push
mov
or
outsl
fisttpll
cs
pand
mov
hlt
or
dec
shlb
pop
int3
pop
inc
popf
jno
shl
insb
and
or
mov
into
push
jmp
icebp
add
lcall
sub
jle
dec
shll
ret
xchg
jo
fidivl
inc
rcrl
sti
aaa
test
hlt
mov
mov
insl
mov
fisttps
pop
and
mov
add
sub
out
xor
fistpll
sti
mov
hlt
scas
ljmp
nop
stc
fucomp
in
push
jo
pop
sub
or
and
sub
jns
push
out
dec
outsl
xchg
mov
sbb
je
cmp
das
or
jmp
mov
mov
inc
sub
clc
xor
dec
adc
adc
movsl
and
sub
inc
push
mov
push
pop
jo
fidivl
mov
mov
cmpsb
fcompl
fdivs
jmp
fildll
or
cmpsb
out
das
aad
inc
mov
lret
xor
xchg
fsubrp
and
push
mov
sbb
jb
xor
pop
dec
add
popa
ja
mov
cmc
js
sub
add
xchg
pop
fnsave
xlat
lea
jecxz
int
mov
das
or
push
xchg
outsb
lcall
and
hlt
test
and
cmp
fimull
hlt
mov
sbb
aas
daa
dec
sub
gs
mov
add
aaa
sbb
add
inc
mov
rol
sub
test
insl
pop
pop
das
out
test
or
dec
mov
inc
rcrl
das
fildll
repnz
mov
mov
daa
push
mov
jg
and
jo
hlt
push
leave
mov
sarl
mov
add
push
sbb
pop
sbb
pop
repz
lock
pop
cli
pop
cmp
ljmp
sbb
mov
cmp
out
pop
stos
pop
clc
cmpsl
loop
xorl
addb
jg
mov
mov
ja
sub
or
les
test
outsl
hlt
pop
pop
or
mov
add
or
and
call
adc
or
andl
inc
dec
rcrb
adc
iret
in
sbb
mov
inc
dec
sbb
jbe
adc
inc
dec
mov
leave
mov
inc
pop
mov
in
and
add
mov
aad
lahf
push
ret
xchg
add
gs
int3
out
cld
mov
mov
clc
xor
cltd
mov
push
push
aad
not
lds
ret
dec
fnstsw
sarl
repnz
in
xlat
or
or
and
rcl
mov
stos
repnz
sysenter
test
in
and
negb
daa
in
fldenv
clc
popa
push
test
ljmp
ret
inc
cmpsl
xchg
fnsave
push
inc
ret
std
fldcw
rorl
mov
pop
push
cmp
nop
incl
xchg
sbb
jae
rorb
daa
or
inc
jg
push
and
xchg
sarl
push
ret
sub
aas
adc
push
add
pop
clc
mov
fnstenv
inc
clc
mov
push
sbb
xchg
add
pushf
mov
ss
sub
out
and
add
shlb
mov
xchg
dec
xchg
or
outsl
mov
cs
xor
inc
icebp
nop
fildl
sbb
dec
imul
in
jb
lock
mov
mov
sub
das
lds
call
push
mov
xor
loopne
jae
adc
cmp
fisttpll
aaa
rcrb
stos
inc
push
pop
sbb
lods
or
in
iret
in
les
add
test
in
or
inc
inc
rclb
sbb
ljmp
adc
jecxz
lcall
sbb
push
jg
pop
movd
aaa
or
sub
popf
pop
xchg
and
fldl
push
call
outsb
jno
adcb
das
std
xorb
arpl
adc
xor
out
or
test
stos
insl
sbb
adc
cmp
and
outsl
movsl
inc
jg
fildll
jo
mov
pop
pop
pushl
sub
lock
add
or
cmp
jl
push
sbb
jg
sub
inc
xchg
inc
xor
pop
data16
sbb
add
sahf
incl
sbb
mov
push
jle
xchg
mov
xchg
or
jno
inc
loope
or
mov
daa
jo
xlat
aas
and
or
cld
aas
dec
fisttpl
push
lahf
cltd
ret
fadd
movsl
enter
adc
cltd
inc
add
push
fiaddl
push
push
int
cmpsl
aaa
div
ja
sbb
sbb
mov
dec
addr16
imul
dec
int3
cwtl
jmp
imul
add
push
movsl
ja
add
pop
dec
clc
jmp
std
jbe
adc
and
ror
sub
and
mov
or
pushl
push
ficoml
sbb
dec
add
sbb
mov
rcr
sti
push
push
shll
sbb
xchg
or
popf
mov
popl
lahf
movsb
icebp
dec
xor
sbb
je
xchg
fidivs
mov
push
shl
push
in
sbb
cmp
add
lcall
or
dec
in
add
iret
pop
rcr
push
mov
and
pop
scas
arpl
mov
test
sbb
jmp
sbb
inc
lret
and
adc
add
lahf
in
fs
pop
ss
xor
mov
les
cmpsl
add
insl
mov
pop
daa
adc
inc
out
push
add
lods
stos
add
push
adc
std
pop
subl
fistps
ds
sahf
pop
pop
or
mov
add
addb
mov
sbb
adc
or
sbb
test
mov
or
and
and
cmpsb
popf
shll
leave
stos
sbb
xor
in
xchg
popa
lock
enter
jge
mov
popa
or
push
mov
xchg
cmp
jg
or
jge
lds
psrld
dec
dec
sub
push
testl
adc
stos
cmp
test
or
movsl
and
mov
icebp
std
scas
ss
mov
pop
and
nop
mov
mov
pusha
mov
fadds
inc
and
inc
sbb
mov
pop
jecxz
int3
cmpsl
inc
test
jno
icebp
mov
push
sbb
lds
cmp
mov
sub
aaa
mul
ret
pop
fistps
xchg
lods
aas
test
pop
scas
ret
repnz
mov
cmp
mov
stc
mov
imul
addr16
sbb
mov
into
jecxz
lea
add
or
ljmp
and
sbbb
cwtl
enter
fldl
dec
lcall
xchg
fldt
lret
ret
adc
mov
dec
lds
adc
push
je
add
cmp
mov
mov
push
divb
cmc
call
jg
cmp
sbb
mov
sub
iret
mov
jno
lock
or
outsl
sbb
decb
das
movnti
xchg
inc
lret
adc
ss
scas
ss
mov
andl
inc
ret
scas
in
and
testl
mov
mov
std
pop
xchg
cmp
test
pop
mov
mov
dec
jecxz
inc
cmpsl
mov
clc
dec
movsl
test
xchg
imul
pop
inc
mov
and
sub
movntq
clc
add
jae
ret
or
jne
sbb
add
mov
aaa
sub
lods
mov
rorb
dec
and
cmp
mov
xor
repz
jbe
in
mov
stc
shrl
scas
adc
sbb
les
loop
repnz
pop
mov
das
adc
push
and
inc
cmc
dec
add
adc
mov
sub
stos
lcall
or
pop
sub
adc
xor
or
daa
add
xchg
or
out
dec
repnz
aad
loope
test
cld
rol
fcompl
push
in
cmc
adc
int3
jne
movsl
add
jecxz
mov
outsl
jg
fwait
inc
enter
popf
jmp
jnp
sub
call
or
andb
shll
push
cmp
push
cli
ret
aaa
cld
addb
dec
movsl
adc
jg
add
or
mov
insb
jne
xchg
sub
dec
ds
cwtl
aaa
cwtl
loope
xlat
or
dec
inc
mov
data16
inc
mov
inc
sbb
aaa
mov
inc
rcrl
lea
mov
aad
icebp
push
cmp
in
cmp
mov
adc
mov
and
jmp
inc
out
imull
rorl
je
mov
clc
fistpll
iret
popa
xorl
out
push
mov
rcl
jg
mov
movb
ja
cwtl
imul
push
mov
test
stos
inc
popa
jbe
insb
push
lea
out
mov
aaa
lock
inc
inc
sbb
stos
sub
lock
add
ret
out
xchg
out
out
mov
ss
cmp
pop
adc
scas
addr16
push
mov
cmpsb
mull
pop
outsb
inc
ficomps
inc
xchg
or
fstpl
xor
add
andb
imul
pop
ljmp
adc
add
shlb
cmp
nop
or
mov
push
cmpsb
test
inc
cmpsl
icebp
mov
les
sbb
clc
jg
mov
sub
add
icebp
or
cmp
xchg
nop
fildll
push
rorb
pop
loopne
das
outsb
push
rcrb
sbb
or
movsl
xchg
loopne
xchg
push
push
jecxz
fisttpl
sahf
scas
insb
adc
movb
push
faddl
pushl
xchg
push
inc
das
filds
in
loope
or
add
loopne
outsl
loopne
pop
jl
rol
mov
cmp
adc
lea
call
inc
leave
mov
push
push
mov
and
cli
dec
aaa
cmp
inc
bound
jecxz
push
xor
xchg
mov
lock
test
stos
outsb
je
cwtl
and
call
push
and
bound
xchg
mov
imul
pushf
jge
aas
out
mov
push
in
rol
das
cmc
cltd
jmp
xor
scas
outsb
ffree
js
mov
addb
out
js
mov
test
cmp
push
mov
sub
mov
sbb
clc
lods
mov
add
xor
mov
stos
sbb
dec
shlb
ds
add
movsb
push
int
pop
mov
jo
mov
adc
xchg
mov
loop
out
add
js
push
xchg
paddb
int3
scas
test
pop
adcb
and
lods
icebp
jo
ljmp
sub
gs
bound
sahf
sbb
mov
dec
pop
jmp
std
pushl
and
mov
mov
xchg
iret
sbb
bound
mov
jg
add
pop
add
sub
icebp
jbe
push
clc
fsubl
adc
aam
mov
adc
outsl
enter
dec
mov
dec
mov
push
rcrl
push
and
adc
test
xchg
push
aas
lahf
imul
inc
test
and
sbb
sbb
push
cmpsb
or
add
push
cmp
outsb
pop
popf
pushf
and
xor
inc
mov
mov
das
fstp
fldl
sbb
and
fucomip
mov
hlt
mov
pusha
add
jmp
inc
jno
inc
mov
add
fcmovnbe
push
mov
insb
test
sub
mov
xchg
add
dec
dec
outsl
sub
add
xchg
add
or
fcmovnbe
inc
push
xor
add
dec
mov
enter
jbe
mov
test
fcmovnu
ret
inc
add
cmp
adc
mov
pop
push
xchg
ds
mov
aam
xor
adc
test
push
les
or
pusha
jo
es
add
aaa
rcr
inc
sub
ja
sti
and
icebp
cmp
dec
pusha
cli
gs
cmpsb
push
jle
push
pusha
adcl
pusha
test
mov
cmpsl
into
out
sbb
aaa
shr
xchg
imul
fcomps
jg
jb
push
das
int3
push
xor
xchg
sbb
hlt
movsl
pop
inc
loope
or
mov
xor
xor
xor
hlt
inc
mov
subb
fsubrs
add
ljmp
mov
xlat
mov
imul
xor
popa
ret
push
lahf
inc
shrl
movsb
mov
dec
lcall
rcll
xlat
inc
or
jle
filds
sbb
andl
arpl
cmpsl
mov
sbb
adc
sub
test
cmp
pop
mov
mov
adc
dec
cmp
add
mov
fnsave
lds
pusha
jns
test
jnp
sub
pop
jle
jecxz
bswap
hlt
aas
mov
mov
or
sbb
mov
movsl
andl
cli
shl
imul
xchg
sbb
in
push
cmp
iret
dec
dec
es
mov
mov
adc
fldl
fildll
insb
ret
cmp
mov
mov
fmul
and
mov
enter
call
inc
sbb
loop
mov
jecxz
pop
jmp
adc
rcll
ds
dec
aam
les
adc
push
or
inc
mov
roll
jnp
lea
adc
rclb
inc
mov
std
decl
adcl
test
pop
lock
inc
lahf
xor
mov
fstpt
sub
lock
jecxz
add
xor
dec
out
mov
popa
pop
test
fldcw
cmc
rcll
push
and
lret
cmpsl
adc
mov
inc
xchg
mov
push
jb
lcall
bound
mov
mov
in
sbb
sbb
and
lods
stc
dec
pop
add
inc
call
in
add
and
ja
push
pop
subb
adc
into
les
adc
cmp
cmp
push
mov
out
ret
js
in
xor
or
cmp
inc
gs
inc
mov
int
push
das
or
mov
mov
ljmp
jne
and
ret
ret
sub
dec
shl
adc
out
loopne
sarb
mov
jbe
add
je
or
lea
mov
es
lahf
sub
lahf
arpl
pop
inc
dec
pop
jb
std
js
push
nop
sbb
cltd
in
pushl
lods
in
jo
pop
inc
xchg
pop
xor
mov
arpl
icebp
mov
movsb
fdivrp
out
scas
in
or
pop
cmp
int
clc
outsb
xchg
std
push
not
lcall
mov
rolb
outsl
hlt
add
pop
xchg
jg
fistpll
cli
loop
push
pop
icebp
int
inc
jp
dec
inc
mov
in
ret
xchg
or
imul
inc
outsl
dec
js
in
std
push
repz
and
decl
lret
sub
add
pop
ss
cmc
lret
mov
sarb
xchg
inc
or
das
into
xor
clc
clc
loop
adc
adc
hlt
arpl
in
rcl
pop
mov
pop
hlt
fucomp
inc
aaa
ss
mov
mov
nop
mov
mov
add
sub
daa
jecxz
push
jo
sarb
cmc
pushf
adc
inc
rolb
or
fists
outsl
cmpsb
lods
sub
inc
iret
xchg
cmp
pop
lea
scas
test
mov
xor
xor
movsl
pop
hlt
imul
push
add
scas
inc
ret
mov
popa
xchg
push
cwtl
fisubrs
cli
sarl
rcr
sarb
adc
xor
mov
cwtl
arpl
insb
pop
outsl
test
fbld
or
and
push
pop
fimuls
test
xchg
adc
push
out
fnstcw
mov
xchg
adc
stos
scas
lcall
insb
xchg
adc
jle
mov
push
icebp
fucom
jbe
xchg
jbe
dec
shl
int
call
push
lret
test
nop
aas
mov
inc
mov
jp
incb
pop
cld
dec
mov
add
scas
dec
sahf
pop
and
push
mov
leave
adc
mov
rclb
inc
add
int
sbb
xchg
fstpt
lods
inc
std
sbb
dec
movsl
into
jno
shl
pop
add
xor
jp
dec
outsb
mov
decb
add
xor
out
sbb
pop
cmpl
in
dec
not
mov
xchg
adc
xor
sbb
dec
lret
dec
faddl
je
pop
lret
pop
test
pop
lea
push
je
sub
add
imulb
out
inc
cmpsl
in
jmp
jmp
and
mov
sti
xlat
mov
or
sub
inc
adc
in
xor
mov
pop
pop
adc
ja
inc
hlt
add
lds
adc
jge
std
pop
mov
fbld
push
in
push
mov
test
jg
jle
ret
cmp
adc
sub
and
jmp
jo
xchg
jae
shl
pop
pop
push
aad
std
xchg
popf
and
or
test
js
pop
pop
sub
xor
mov
dec
in
adc
xchg
pop
jle
jmp
std
add
sub
imul
in
and
pop
cmpb
movsb
mov
ja
icebp
xor
mov
xchg
hlt
cmpsb
loop
hlt
das
mov
loope
dec
mov
enter
mov
imul
std
lods
push
xchg
sti
aad
pop
hlt
jge
jmp
pop
mov
rcll
sbb
add
outsb
mov
enter
imul
jl
jle
xchg
inc
cmp
movsb
and
ret
jg
in
pushf
xchg
jo
mov
or
xchg
in
ret
rcrl
icebp
or
xor
sti
loope
fxch
outsb
ljmp
push
xlat
jge
jp
lds
loope
xchg
es
cmp
loope
lock
dec
xchg
into
mov
movsb
cmpl
leave
leave
add
dec
dec
outsl
icebp
mov
dec
and
loope
int3
imul
push
js
xor
xor
outsl
mov
push
jecxz
sar
or
fistpll
fisubrs
xor
rolb
mov
std
das
mov
in
insl
mov
sbb
int
sub
ds
or
add
ds
call
xchg
test
xorb
out
fdivs
roll
lret
mov
das
rcrb
cmpsb
jge
jecxz
pushf
add
pop
pop
mov
xor
incl
mov
cmp
or
scas
and
and
aam
mov
mov
push
and
shrl
fcmovnbe
lea
shll
jmp
push
mov
mul
xor
outsb
insb
cli
sbb
jle
lahf
dec
jne
les
xchg
dec
loop
jg
mov
sbb
lods
icebp
and
inc
and
stos
movsl
ret
jg
or
iret
ja
cs
inc
sbb
repnz
adc
in
push
in
stos
sti
movsb
jmp
fwait
mov
mov
mov
xorb
cmp
je
mov
jmp
pop
fistpl
mov
mov
xchg
xchg
xchg
cmp
aaa
jge
jmp
add
xor
mov
mov
dec
das
enter
int
jecxz
xchg
mov
sbb
mov
and
ret
iret
jnp
negl
das
std
fcmovnb
iret
enter
test
mov
cmp
dec
test
mov
mov
pushf
movsl
pop
loop
sarb
loop
in
pop
call
lahf
and
rcll
rclb
mov
outsl
dec
pop
push
fbld
repz
outsb
lods
popa
enter
cs
and
addps
icebp
cmc
subl
das
jno
adc
cmc
xor
ss
shl
mov
lock
hlt
popf
lret
mov
je
adc
xlat
pop
decl
push
cmpsb
enter
test
nop
xchg
and
ja
in
std
mov
sub
dec
clc
repnz
jne
mov
and
or
stos
pop
rcll
inc
add
inc
jg
jp
lret
ja
cmp
iret
push
bswap
mov
jp
push
mov
mov
cs
int3
xor
outsb
pop
nop
insb
sbb
hlt
in
outsl
insl
loope
mov
xchg
mov
fdivrs
add
adc
or
cmp
enter
push
out
cmc
test
int
and
incl
sbb
hlt
js
fdivrs
aam
nop
push
add
idiv
jl
dec
jle
lahf
in
in
and
dec
test
jp
jg
iret
shl
in
rolb
push
outsl
push
ret
adcl
cld
dec
mov
cmpsb
sub
xor
scas
push
int3
fstl
sub
sbb
leave
nop
cmc
insl
ljmp
jle
outsb
loopne
dec
push
jne
mov
test
scas
mov
fldt
aad
mov
mov
loop
xchg
mov
call
mov
jb
add
xor
leave
rcrb
mov
push
mov
pop
sbbb
call
ss
jmp
je
push
fisttpl
dec
out
shlb
inc
cmc
ja
fisttps
js
lret
sub
mov
xor
push
xchg
jl
push
loop
das
rcrl
lods
mov
mov
mov
testl
cwtl
fimull
movl
sahf
ficompl
adc
stos
outsb
enter
inc
insb
nop
jp
or
or
push
aad
pop
or
jo
cmc
inc
pop
push
push
add
leave
jge
mov
xor
dec
loop
addb
mov
mov
sti
cmpsb
cmp
ds
fidivl
inc
mov
mov
and
xchg
xchg
inc
mov
adc
dec
mov
fistl
lcall
pusha
xchg
mov
outsb
std
inc
sub
or
push
jbe
das
adc
rcll
pusha
lock
xchg
xchg
test
insl
xor
pop
sbb
iret
loop
loop
mov
add
out
insl
xchg
add
mov
lods
fwait
push
fsts
in
ljmp
cltd
or
aaa
aam
or
cmp
pop
enter
lods
push
lea
add
push
mov
push
popf
pop
inc
add
in
dec
xchg
sbb
cmc
or
mov
xlat
cmpsb
jb
subb
fidivs
or
cmp
pop
dec
hlt
movsl
cmp
sar
movsl
dec
and
int3
test
lods
or
aam
int
cli
das
aad
mov
mov
roll
or
mov
fwait
imul
sbb
stc
and
insl
addb
icebp
shrl
mov
shrl
out
test
xchg
pop
cmp
mov
cltd
js
inc
inc
jns
out
jae
push
push
jg
das
cmp
sub
mov
mov
mov
lds
cmpsb
sbb
mov
adc
rclb
cs
xor
jmp
loopne
shrb
fldt
lea
sbb
fistpl
push
enter
jb
cltd
in
fwait
lret
mov
in
jmp
in
stos
or
cmpsl
xchg
testl
sbb
bnd
sub
mov
sub
sub
bound
aaa
adc
in
pushf
sti
mov
dec
sbb
jmp
sahf
aaa
test
push
out
sbb
aam
movsl
lldt
ret
mov
loope
dec
in
mov
add
mov
sub
insb
fwait
pusha
test
scas
cltd
pop
mov
dec
pop
lds
push
jno
xor
sbb
xchg
adc
lods
xchg
sbb
mov
sub
jb
sbb
bound
sbb
xadd
or
push
and
lret
mov
sbb
add
arpl
call
pop
pop
sbb
fadds
or
lock
js
mov
adc
pop
pop
aad
std
js
insl
dec
lea
push
lcall
and
cmp
cltd
xor
movsb
xlat
nop
xor
mov
stos
xor
mov
fiadds
test
das
push
inc
xor
das
roll
push
jno
xorl
das
xor
push
adc
jl
jle
lods
aaa
push
mov
sbb
pop
inc
loopne
std
repnz
sub
imul
jbe
mov
push
jo
aam
iret
jl
pop
pop
shl
inc
jnp
mov
nop
sti
or
pop
pusha
jns
fistps
mov
iret
push
mov
lahf
mov
test
xor
js
movsb
push
and
lods
adc
pop
loopne
subb
fs
push
jns
shrb
push
jecxz
ss
aaa
add
dec
push
and
stos
xchg
jle
cs
icebp
je
pop
jbe
cmc
mov
loopne
insl
pop
xchg
aaa
jmp
jle
insl
pop
dec
jl
sbb
or
add
push
js
xchg
jle
and
sbb
mov
inc
divl
push
in
and
mov
lods
sarl
in
jge
mov
ret
lcall
fucomp
lods
and
push
mov
fucomp
dec
add
push
es
out
testb
icebp
iret
xor
lea
sbb
push
and
repz
insl
cs
or
mov
sub
push
push
cmp
or
push
shlb
and
inc
call
mov
jg
mov
mov
mov
jmp
enter
sub
mov
test
insl
loopne
inc
pop
movsl
mov
pop
mov
outsl
jmp
sahf
xchg
aad
xchg
scas
push
jecxz
pop
xchg
mov
inc
hlt
push
ret
les
or
lods
fcmovnu
dec
cld
clc
xor
mov
fcmovne
aad
inc
sub
rol
jmp
pop
pop
push
mov
mov
subl
stos
sbb
fbstp
sbb
adc
jecxz
or
repz
dec
clc
ss
pop
pop
xchg
push
fprem
out
data16
icebp
loope
inc
mov
shl
sbb
stos
pop
mov
ljmp
sbb
lret
jp
std
cli
decl
and
clc
push
lock
outsb
push
xchg
lods
mov
stos
and
icebp
hlt
inc
push
test
cmpsl
sahf
fidivrl
mov
fs
mov
jg
adcb
pause
mov
pop
cwtl
mov
or
add
ljmp
or
xor
dec
aas
adc
idiv
popa
xchg
insb
in
jg
or
push
fistl
mov
lock
insb
mov
cmp
adc
shll
sti
push
gs
loope
in
pop
dec
dec
sub
lock
test
pop
sub
lret
jmp
and
adcl
add
xchg
repnz
adc
lock
adc
or
mov
push
mov
movsl
xor
jl
xchg
ret
adc
xlat
loopne
xor
not
add
mov
sbb
xor
fdivl
aam
mov
fwait
cld
bound
out
outsb
or
mov
cmp
lods
aas
fisttpll
loopne
fisubrl
stos
cmp
lcall
inc
push
std
insl
lahf
sbb
arpl
lock
fidivl
or
add
pop
out
adc
mov
or
xchg
push
push
xor
push
outsl
mov
pop
inc
mov
mov
scas
dec
out
aas
ret
jo
jae
mov
call
mov
push
sbb
mov
xchg
rclb
sbb
insl
push
adc
test
pop
dec
lods
jge
inc
push
adc
jae
ret
rorb
pop
jecxz
test
jmp
mov
and
sub
pop
jmp
adc
and
daa
add
in
push
add
sbb
lcall
push
mov
pusha
jg
ret
jg
aam
mov
xor
in
icebp
stos
loop
in
sbb
cli
pop
jnp
mov
mov
pop
sub
das
jge
xchg
cmp
inc
and
sbb
decl
mov
test
aam
stc
lea
and
or
push
shlb
cmp
inc
popa
jmp
decl
pop
ret
sbb
int
es
aam
xchg
stos
cmc
stos
dec
test
mov
filds
adc
decl
inc
cwtl
sub
test
cltd
rcll
icebp
cwtl
mov
jle
das
jge
in
sbb
mov
cmp
lea
loop
push
inc
insl
pusha
xchg
outsb
and
mov
pop
add
or
mov
mov
or
in
sub
cltd
and
imul
call
dec
mov
out
decl
sub
sbb
clc
call
iret
cmp
inc
mov
outsl
roll
jbe
mov
fsubrl
dec
sbb
xchg
adc
lahf
stos
pop
jae
sub
push
icebp
and
nop
xchg
aas
mov
fistpll
shrb
shll
lea
aam
add
das
rorb
les
pop
enter
cmpsl
mov
int3
jg
decb
shrl
inc
stos
clc
outsb
and
cld
outsl
das
aad
mov
sbb
and
out
enter
mov
movsl
xor
cmpsb
sbb
and
xlat
outsl
scas
mov
decb
mov
add
mov
rol
lock
jb
or
stos
mov
add
sub
pop
sti
xchg
push
inc
jp
mov
mov
dec
lods
pop
sub
fbstp
xor
add
hlt
mov
add
dec
and
inc
or
inc
mov
mov
push
adc
ret
inc
cli
add
xchg
ds
out
mov
js
test
into
push
js
pop
rorb
loop
sub
push
push
adc
jp
xor
adc
in
jmp
shrl
inc
ljmp
iret
cltd
orb
pop
and
and
lods
test
add
sbb
mov
jns,pt
mov
lret
das
adc
cwtl
lds
sbb
cmc
add
mov
sub
addr16
sub
mov
xchg
pusha
pop
call
push
xor
pop
pop
jl
mov
lods
fidivl
cmp
sbb
imul
xor
and
in
push
rcr
aaa
mov
jbe,pn
or
pusha
or
out
jno
sbb
add
inc
test
js
in
push
scas
add
stc
add
mov
into
daa
nop
xchg
xor
mov
fdivs
adc
fstpt
push
out
icebp
xor
insb
sbb
jmp
pop
mov
mov
adc
stos
aas
mov
pusha
or
loop
pop
mov
mov
fwait
in
ljmp
lahf
sbb
out
pushf
movsb
mov
sti
das
cmp
movsl
dec
les
xchg
std
and
pop
cs
outsl
sbb
adc
push
inc
pop
bound
lods
or
je
fs
arpl
orl
add
cmp
sbb
mov
or
or
and
outsl
mov
repnz
sub
pop
loopne
fcoml
sub
xor
adc
fwait
sbb
mov
enter
loope
cmp
aam
mov
loop
aaa
mov
addr16
and
add
sub
mulb
mov
outsb
push
inc
xor
shrb
pop
jg
pop
inc
outsb
lahf
and
pop
lahf
and
mov
xlat
imul
rcr
xchg
jge
add
outsb
dec
cmpsb
xor
das
ss
push
xchg
test
loopne
xchg
or
mov
fldt
pop
test
outsb
pop
fildl
ret
outsb
xchg
ret
sbb
inc
iret
aaa
mov
jle
dec
and
mov
stc
push
icebp
adc
cmp
sbb
test
mov
dec
movsl
sar
lea
mov
out
inc
or
stos
daa
and
jmp
es
in
clc
shlb
xor
pop
push
xchg
adc
ret
adc
cmpsb
fdivl
push
aaa
lds
bound
cmp
adc
add
iret
cmp
das
xor
jle
aas
pusha
sub
xchg
dec
js
mov
sub
push
or
int3
xchg
ficoml
inc
in
mov
push
inc
inc
pop
aad
fistpl
cmc
int
insl
cs
loopne
mov
or
mov
outsb
xchg
mov
push
mov
or
les
cmc
dec
aam
sub
jg
rorl
and
inc
loopne
xor
int3
or
jg
mov
aam
lahf
push
popa
es
pop
pop
bound
shrb
cmp
cli
dec
fucomp
inc
push
pop
dec
xor
outsb
add
add
adc
pop
pop
push
insb
xor
mov
pop
push
xchg
bound
mov
sbb
roll
int3
jbe
fnsave
push
pop
aaa
fisubs
out
push
mov
test
pop
shll
test
cli
sub
adc
cmp
cmp
lock
test
addb
or
add
and
sbb
xchg
scas
pop
pop
xor
jbe
or
andb
sub
gs
stos
inc
lods
loopne
or
push
fildll
filds
in
push
loope
sar
mov
xor
test
xchg
sarb
cmpsl
call
test
cmpl
stos
jp
mov
mov
test
lea
gs
add
adc
pusha
rcr
sub
cmp
or
std
out
cli
and
cmpl
mov
mov
loop
das
pop
mov
fnsave
js
loope
in
rclb
pop
out
cmpsl
adc
scas
sub
test
cmpsb
cld
out
push
xor
mov
jns
adc
iret
xchg
ret
xchg
jp
add
fs
inc
popf
xor
inc
lret
std
jmp
clc
addb
dec
and
inc
inc
lock
stos
incl
lcall
cltd
adc
aam
outsb
jecxz
adc
call
add
cmpsl
shlb
cmp
jp
out
xor
notl
mov
pop
mov
fistl
jge
sbb
test
das
sub
arpl
cs
clc
pop
enter
and
fmuls
movsl
dec
test
in
ja
repz
dec
dec
xlat
ss
negb
mov
cltd
add
jl
sub
cmp
es
or
out
and
mov
lret
lcall
push
and
adc
pop
and
repnz
test
mov
sub
push
test
adcb
in
mov
dec
xchg
je
notb
lahf
gs
cmp
xchg
cld
divb
adc
mov
and
sbb
pop
ja
adc
insl
xchg
scas
loopne
call
sub
cmp
rcr
mov
lds
addl
ffree
and
or
sbb
insl
cwtl
mov
clc
incl
sbb
jnp
scas
lock
fwait
in
push
sub
pop
or
outsl
xchg
fiadds
outsb
jge
sub
jno
les
mov
xor
lock
inc
push
into
cmp
insb
mov
shll
scas
imul
cmp
in
push
insl
sbb
mov
lock
inc
je
mov
or
xchg
call
lock
mov
lahf
inc
out
out
add
das
add
movsl
lret
dec
ret
jo
mov
cld
sub
out
adcl
mov
icebp
int3
push
or
cwtl
mov
in
cmp
push
jecxz
repz
pusha
in
stos
fildl
lea
dec
inc
enter
idiv
xchg
out
push
js
loop
pusha
adc
cs
inc
cwtl
mov
sub
push
daa
cmp
pop
incl
addl
insl
mov
filds
add
dec
les
fimull
xor
dec
mov
mov
inc
ja
fidivl
inc
or
pop
sub
cmpsb
jp
das
pop
jp
sbb
clc
or
xor
pop
push
add
or
add
in
inc
sbb
movq
cmp
je
pop
mov
sub
xchg
cld
xor
xchg
bound
adc
jmp
call
outsl
mov
nop
push
cltd
jp
sub
push
fistps
adc
mov
dec
insl
push
lods
inc
jns
mov
rcl
outsl
lds
js
dec
lock
mov
mov
sqrtps
and
jb
lea
adc
add
aam
sbbl
in
adc
or
jns
div
dec
xlat
and
ret
mov
push
cld
aaa
imul
es
ret
adc
adc
outsb
loopne
or
arpl
aam
mov
cmpsb
mov
dec
outsl
outsl
lret
rol
inc
and
mov
ret
mov
inc
enter
xchg
popf
mov
sub
das
fadd
decl
dec
cwtl
out
roll
mov
lret
rcr
pushl
adc
mov
pushl
adcb
cmc
adc
sbb
incl
inc
push
xor
mov
filds
xor
xor
adc
sub
nop
lret
enter
xchg
jle
in
cmp
lret
bound
pop
add
and
outsb
xchg
adc
les
adc
js
xor
xor
and
push
pop
push
and
insl
push
jnp
pop
rorl
and
jne
xchg
iret
cmc
subl
pop
je
imul
cmc
stos
loope
mov
movsb
adc
idivl
test
mov
mov
outsb
shll
or
loop
fildl
mov
push
ja
mov
sbb
frstor
pop
in
pop
mov
jb
xchg
loop
mov
sub
and
adc
or
inc
je
lret
sub
sbb
loopne
std
add
or
add
js
nop
xchg
add
xor
cmp
fmuls
inc
ret
stos
shll
and
daa
jecxz
xchg
aad
xchg
and
adc
rorl
or
and
dec
shll
xchg
pop
call
xchg
jecxz
dec
test
test
aas
sbb
pop
inc
hlt
dec
jne
lret
rclb
push
hlt
imull
clc
stos
or
adc
jle
cmp
lock
xor
std
lods
cmpsl
xchg
leave
out
jp
jno
pop
mov
lahf
mov
jl
rorl
fildll
cmc
adc
jmp
add
mov
rcrb
hlt
sti
shl
cmpsb
lea
add
push
ja
das
inc
cli
mov
mov
mov
push
repz
or
xor
cmp
cmpb
inc
adc
mov
mov
frstor
mov
push
inc
inc
add
xchg
out
dec
jne
dec
push
roll
lds
and
mov
pop
fdivs
dec
pop
mov
lods
cltd
or
lods
ret
pop
scas
or
fdivl
mov
cmp
and
or
pop
xor
fsubrs
sub
xchg
push
jl
ret
mov
inc
jns
sub
mov
xor
sahf
xchg
jg
shlb
xchg
mov
push
notb
ss
jo
faddl
cmp
inc
push
rolw
lcall
fiadds
and
aaa
jl
sub
lcall
push
and
mov
xor
test
pusha
inc
mov
ret
cmpsl
inc
mov
or
inc
cmp
inc
test
and
aam
outsl
sub
dec
add
ret
nop
sbb
mov
fstl
mov
xchg
clc
mov
jmp
pushl
lret
scas
adc
cmp
jmp
sbb
adc
sti
pop
ficomps
and
and
inc
aas
xchg
jle
mov
scas
dec
aaa
mov
xchg
paddsw
negl
movsl
sbb
or
aam
ret
mov
das
pop
xorl
and
adc
mov
push
lahf
jge
aaa
push
clc
push
clc
push
jp
add
rolb
jbe
nop
movsb
and
sub
hlt
or
movsl
lods
and
or
push
adc
cmp
push
std
jg
nop
loopne
inc
or
mov
jno
lea
sub
scas
ror
mov
adc
cli
mov
popa
pop
add
cli
add
movsb
dec
add
pop
mov
xchg
cld
aaa
ror
in
push
pop
lock
ja
jp
or
dec
leave
xlat
lcall
cmp
test
jbe
js
in
and
cs
push
out
mov
mov
inc
mov
add
in
call
jo
mov
sbb
mov
repz
ficoms
aas
xchg
or
rclb
sub
jg
adc
shlb
inc
cmpsl
push
bswap
movaps
xchg
mov
aas
cmp
sbb
and
add
and
fisubrl
test
movsb
jns
or
clc
inc
icebp
jne
hlt
push
mov
movsl
lcall
fs
push
sbbb
adc
lahf
test
mov
js
dec
scas
in
hlt
mov
test
mov
inc
adc
mov
xor
ret
ja
and
ret
mov
fisubl
std
repnz
subb
adc
mov
rcrb
and
xchg
inc
pop
mov
and
push
insl
lret
neg
cli
into
push
es
add
xor
jbe
outsb
imul
mov
das
mov
inc
sub
shrl
adcl
jl
int
dec
and
inc
push
pop
arpl
mov
fwait
or
add
sbb
push
dec
jno
mov
fstl
fistps
or
aaa
and
nop
and
xor
icebp
mov
loop
push
push
lahf
fcoms
adc
and
pop
aas
pushf
cmp
das
add
iret
jbe
rorl
or
inc
daa
adc
pop
arpl
nop
pop
jg
inc
das
cmp
loopne
ljmp
jno
mov
bswap
fildll
loopne
lock
ljmp
lcall
xlat
jg
xchg
pop
push
or
add
inc
or
jno
sbb
add
pop
or
mov
cli
jl
or
fnstsw
gs
mov
pop
mov
loope
push
jecxz
cmp
fucomip
bound
adc
push
fisttps
sub
mov
pop
es
jno
sahf
mul
or
and
or
dec
insb
pop
ljmp
mov
add
stos
cmp
hlt
xor
lods
inc
xor
adc
lods
or
adc
sbb
mov
mov
pop
int3
and
lret
int
aaa
dec
cs
call
int
andb
xchg
outsl
sbbb
adc
jg
fistpll
mov
scas
sbb
inc
cmp
hlt
cmp
inc
add
jl
add
jl
mov
aaa
dec
mov
jge,pn
arpl
out
fistps
push
movl
push
cmp
scas
repz
sbb
and
aas
sti
jg
mov
loopne
pop
mov
ja
not
xchg
jno
sti
or
cmpsb
test
adc
fsubr
icebp
jbe
sub
lcall
mov
add
and
je
adc
cmp
cmpsb
fwait
push
mov
popa
push
or
fwait
dec
mov
inc
xchg
or
leave
dec
push
cmp
dec
mov
and
loop
xor
cmp
repz
mov
ss
and
and
not
aas
loope
cmp
xor
lret
dec
jne
push
dec
mov
idivl
shlb
stc
fcmove
ficoms
cmp
in
mov
rsm
mov
aaa
jae
shl
cld
mov
and
out
and
xor
decl
pop
xor
and
jbe
pop
js
and
xlat
inc
sub
mov
push
sbb
pop
stos
or
jo
inc
testl
or
test
inc
mov
xchg
mov
push
in
orb
jo
pop
out
inc
test
pop
or
add
insb
sub
addr16
pushf
into
xor
call
add
add
mov
jge
sti
sbb
es
outsb
cs
mov
mov
sub
js
shll
insb
negl
test
inc
lock
lds
ljmp
fcmovbe
adc
inc
pop
mov
pop
dec
inc
test
push
gs
push
xlat
fmul
stos
ja,pt
lock
ljmp
movsb
and
inc
xchg
sbb
and
sbb
xchg
cmp
xor
add
sbbl
and
sbb
lods
out
lds
dec
lods
scas
jb
sahf
cmpsl
pop
cmp
insb
incl
or
mov
sbb
lret
hlt
mov
sarb
xor
sti
arpl
ret
sub
mov
shl
je
dec
xchg
jl
or
popf
dec
or
cmp
dec
xlat
xor
in
mov
ret
stos
ja
movsl
add
add
cmp
mov
mov
mov
in
nop
mov
fistpl
jle
movb
fsubrl
mov
cmp
jle
xchg
dec
les
xor
shl
xlat
sti
mov
push
xlat
jbe
xchg
mov
adc
jae
push
xchg
in
sbb
mov
or
xchg
dec
mov
jg
mov
or
lahf
pop
test
hlt
xchg
mov
inc
movb
adc
test
std
cmp
push
fdivrl
mov
mov
jg
iret
fimuls
daa
inc
loop
nop
sub
loope
movsl
decl
stos
jge
and
icebp
outsl
loopne
outsb
xchg
enter
lods
outsl
inc
data16
mov
call
mov
sbb
popf
addl
mov
push
insb
mov
faddl
mov
xchg
gs
or
and
fstps
xor
cmpsb
mov
mov
jmp
sbb
and
mov
add
cmp
ret
adc
xchg
stc
sub
and
sub
nop
inc
std
loop
fstp
and
stos
inc
imul
mov
outsb
mov
int3
jecxz
xchg
notl
cmp
push
push
jno
mov
jg
mov
cwtl
pop
out
mov
jae
dec
pop
lcall
decl
pop
aam
scas
adc
dec
movsl
lret
int3
sub
cs
test
adc
sbb
xchg
dec
sub
jecxz
xor
insb
icebp
or
subb
adcw
jns
xlat
lahf
push
cltd
fcmove
in
and
mov
gs
fbld
jg
inc
xchg
dec
push
aas
push
or
es
movsl
test
cld
bound
ret
cmp
call
icebp
pusha
insl
std
mov
addr16
add
data16
pushf
jb
out
mov
outsl
sub
in
jmp
cmpsb
nop
jecxz
cmpl
or
cmpsb
int
push
push
ljmp
add
and
repz
movsl
mov
dec
das
je
and
arpl
pop
loopne
lods
cli
jg
icebp
push
and
fistl
inc
inc
outsb
mov
in
mov
sub
jg
xor
pinsrw
pop
mov
das
fsubl
jbe
les
sub
push
sti
jg
jbe
cmp
lret
mov
or
inc
dec
je
insl
sar
outsl
jge
fstp
cltd
pop
shrl
lahf
cmp
mov
aaa
decb
aad
bound
gs
decl
icebp
inc
fldl2t
pop
leave
call
arpl
inc
les
pushl
mov
cmp
lods
shlb
push
sub
jl
outsl
std
mov
dec
jl
add
cmp
sub
std
mov
lcall
and
fildl
mov
or
in
jg
stc
xchg
mov
imul
adc
fsubrs
fistl
push
xchg
xchg
mov
jl
pop
sub
add
mov
or
call
mov
leave
pop
sbb
jmp
push
decl
repnz
ds
cmp
dec
push
mov
inc
jne
cli
in
or
outsl
mov
inc
sbb
aaa
lock
pop
mov
test
pop
addl
dec
out
in
and
frndint
or
adc
pop
mov
xchg
and
icebp
jp
aad
sbb
mov
pushf
loope
pop
test
incl
push
gs
mov
loopne
inc
and
or
push
in
xchg
mov
call
xor
mov
clc
xor
jo
push
mov
sub
and
adc
inc
call
lods
pop
mov
arpl
mov
pop
adc
mov
push
xor
xchg
ret
lcall
faddl
fwait
call
andl
ljmp
shld
mov
mov
mov
in
mov
insb
sbb
cld
or
fmul
push
imul
stc
ja
xchg
and
sub
fistpl
xchg
inc
shrb
mov
movsl
dec
add
mov
xor
pop
fdivr
mov
fs
lock
push
jmp
imul
int3
stc
rorl
dec
psubsb
mov
mov
inc
mov
insb
pop
in
paddusw
push
xlat
jp
push
dec
ljmp
fistpll
stos
mov
call
and
dec
push
sub
push
in
aaa
or
fstpl
mov
nop
and
lock
popa
in
mov
fs
push
inc
pop
xor
mov
icebp
mov
dec
push
nop
mov
in
negb
xor
push
std
dec
ja
les
push
and
sub
leave
ljmp
sarb
int
rolb
inc
mov
popa
jle
int
test
cltd
mov
dec
add
stos
out
mov
mov
mov
incb
mov
insl
call
test
call
sbb
xor
imul
mov
sbb
dec
jo
std
aaa
mov
lahf
or
pop
jnp
mov
mov
add
mov
xchg
sar
clc
fneni(8087
inc
push
icebp
std
mov
sahf
out
sub
add
jp
and
mov
mov
jae
push
sbb
push
out
inc
addr16
xchg
pop
das
jne
add
xchg
xor
aaa
mov
hlt
out
inc
add
dec
adc
int
in
je
icebp
icebp
das
cld
pop
mov
in
inc
popf
das
sbb
cmp
popa
js
lock
adcb
push
lcall
adc
cvtdq2ps
sbb
and
leave
xor
lods
rorl
fisttps
or
jae
addr16
dec
mov
aas
xchg
nop
insb
scas
jecxz
jno
add
and
lea
outsl
jl
inc
mov
movsl
dec
xchg
add
aad
pop
test
cltd
xor
dec
mov
push
fisubl
xchg
pop
bound
ror
sar
pop
and
ljmp
daa
push
inc
jbe
pusha
cmp
mov
cltd
mov
sub
nop
lods
outsl
pop
insl
inc
mov
rol
xor
movb
xor
and
in
fistpll
push
adcb
gs
sub
in
mov
js
jl
mov
mov
cmp
push
loopne
icebp
pop
insl
faddp
jnp
das
je
dec
sbb
mov
jge
mov
sub
push
lock
cmpsb
addb
push
jbe
mov
xor
pop
sbb
inc
ffree
in
fdivl
sub
cmp
call
jmp
addr16
push
lahf
imul
mov
call
enter
cmc
stos
bound
imul
repnz
adc
subl
push
inc
pop
leave
dec
sti
ja
mov
pop
adc
fisttps
pop
rol
jl
ds
ja
scas
rorb
and
add
inc
push
cmp
jno
insl
pop
outsb
std
push
pop
bound
dec
jecxz
cmpsl
les
stc
pop
dec
mov
test
cli
scas
inc
xchg
inc
jge
dec
loop
mov
mov
shrl
push
adc
cltd
out
jnp
cmp
pop
cli
mov
sbb
xchg
enter
lods
cmpsl
jl
add
and
cmpsb
dec
add
mov
arpl
clc
jmp
add
bound
in
fbstp
xchg
mov
mov
or
push
push
sbb
mov
pop
sbb
pop
sbb
sbb
hlt
sub
pop
pop
add
int3
push
adc
jg
pop
xor
xor
mov
lods
lock
jg
cmpsb
cli
cmpsb
adc
inc
into
add
adc
das
enter
lea
push
mov
xchg
stos
or
pusha
lock
sbb
dec
cmc
insl
and
add
movsl
test
lea
pop
push
cltd
or
sub
push
adc
or
insl
and
sub
aas
push
lock
xor
jb
pop
adc
ljmp
pop
clc
cmp
sbb
or
hlt
jo
pop
add
inc
adc
xor
mov
shrb
movsl
in
mov
enter
mov
jg
mov
fsubs
mov
jmp
outsl
pop
not
pop
jl
push
mov
test
mov
pop
ljmp
in
pop
inc
jns
call
push
jmp
xor
insb
lret
aad
jge
xchg
pop
aas
cwtl
neg
jle
insl
std
mov
add
mov
cmp
pusha
ret
cs
orl
mov
adc
sti
lret
mov
int3
rorl
xchg
cli
or
ss
sahf
cli
out
adc
loope
insl
sar
pop
fsubl
addl
mov
je
daa
icebp
mov
fmuls
aaa
fsubrs
mov
and
cld
pop
imul
sub
sbb
cld
repnz
js
ror
pop
or
subl
pop
negl
and
jp
out
nop
scas
or
adc
fwait
dec
pop
imull
sub
push
mov
je
mov
mov
mov
and
sbb
ss
jg
pop
lock
sbb
loop
pop
jmp
mov
aad
pop
loopne
hlt
add
loope
push
adc
or
fs
mov
aaa
mov
orl
daa
pop
xor
dec
call
mov
mov
ss
filds
push
push
pop
jge
repnz
jp
xchg
iret
jne
inc
out
jae,pt
and
mov
lcall
add
outsl
mov
xlat
lods
pop
cli
cmc
xor
adc
sub
dec
mov
popa
or
sahf
adc
sub
aaa
mov
adc
xchg
mov
mov
adc
ds
or
rep
mov
out
test
jge
xchg
push
leave
and
imul
les
xor
sbb
xlat
mov
inc
imul
fistpll
mov
popf
ds
sub
mov
xchg
xchg
movsl
push
jp
shr
test
mov
stos
push
xor
popa
jmp
sub
sub
pop
sbb
mulb
pop
loop
xor
mov
test
in
xchg
clc
add
jbe
and
inc
mov
inc
push
inc
aad
int
mov
fildl
fisttps
adc
inc
jl
sub
push
jmp
pop
faddl
insl
sbb
imul
cmpsl
adc
mov
mov
lea
mov
inc
or
and
push
push
adc
adc
test
inc
and
xor
adc
pop
fcompl
fisubrl
sbb
popa
inc
cld
rcrb
aas
sarl
das
sub
jo
inc
jg
adc
mov
cli
outsl
lock
es
loopne
pop
scas
jge,pn
mov
iret
adc
mov
pushf
test
filds
and
pop
and
mov
lock
stos
jns
mov
loopne
ja
movsl
sbbb
cli
cmpsb
int
push
nop
sbb
in
xchg
mov
add
mov
in
jl
scas
adc
mov
fldt
lahf
adc
sbb
adc
xchg
loope
sub
frstor
mov
fbstp
out
sbb
cmp
popf
dec
das
add
std
movsl
outsb
adc
sub
lcall
cmpsb
fdivrs
mov
xchg
xchg
lea
aam
cmp
or
xor
clc
icebp
lret
inc
cmp
cmp
scas
inc
outsl
fs
xchg
dec
popa
adc
pop
inc
adc
in
mov
mov
ljmp
cmp
jmp
dec
fwait
inc
iret
js
mov
cld
and
ret
das
stos
jo
jmp
bound
fnstsw
jmp
mov
in
sub
orb
stos
std
push
mov
sbb
dec
shlb
jmp
xor
enter
mov
in
nop
xchg
jecxz
push
inc
mov
add
mov
jne
rol
cs
arpl
shll
mov
mov
cmpsl
xor
or
push
pop
mov
enter
pop
aas
pop
push
lea
mov
ret
icebp
mov
sub
in
adc
je
rolb
mov
imul
shll
pop
mov
iret
je
mov
test
jmp
lahf
ret
xor
push
pop
and
mov
das
jne
xor
imul
mov
imul
jecxz
lock
push
adc
repnz
lock
sub
pop
xor
xor
ljmp
push
jno
xor
sbb
xchg
arpl
add
cmp
les
rcrl
cli
fdiv
fldl
mov
decl
popa
jo
testl
and
outsl
jecxz
lret
or
pop
out
push
xchg
cmpsl
add
test
aaa
cs
cmpb
mov
sar
cmp
rorl
or
mov
pop
push
xchg
inc
pushf
jne
jle
inc
lcall
jp
gs
sbb
mov
xor
aad
jecxz
inc
add
outsl
ficompl
mov
pop
rcrb
lods
outsb
and
xchg
pop
push
lock
hlt
shl
decl
jae
xor
xchg
xchg
jl
inc
cmpsb
insb
mov
and
icebp
or
mov
test
int
dec
dec
rcr
lcall
outsb
jge
or
push
aas
insb
and
mov
test
pop
jle
cmc
cli
movsl
xorl
ret
cli
cmp
and
inc
or
mov
out
mov
pop
jge
pusha
fdivs
ss
mov
hlt
jg
loopne
es
fsubrl
outsl
ret
xadd
test
adcb
das
push
jnp
jecxz
ret
jmp
dec
pusha
mov
incb
pop
or
dec
pop
xor
enter
mov
mov
dec
pop
out
jecxz
add
jge
clc
icebp
xor
jno
push
sar
push
or
test
arpl
test
xor
inc
das
mov
mov
imul
cld
xchg
les
or
pop
inc
or
fimull
stc
cld
lds
xchg
push
cmp
aad
jne
dec
inc
inc
lods
cmp
in
jmp
or
push
xchg
pop
push
pusha
adcl
movsl
or
decb
push
fwait
cs
lds
imul
xchg
loop
out
add
jle
push
inc
mov
test
ljmp
movsl
inc
jnp
dec
insb
dec
sbb
cmpsl
mov
add
sar
ret
mov
sarl
lahf
rorb
jmp
scas
push
test
jg
arpl
adc
jbe
xchg
mov
repz
cmp
cli
mov
cmpsb
cld
lea
loop
adc
push
and
and
inc
jbe
add
xchg
fdivrs
aas
xor
dec
fidivrs
enter
cmc
inc
fldl
fdivl
pushf
xchg
orl
xchg
xchg
cli
sub
mov
xor
pop
pop
fists
aam
cwtl
mov
add
sub
push
xchg
jmp
cs
sub
jmp
bound
popf
inc
pop
in
mov
mov
lock
fldt
out
inc
popa
cmc
add
cli
ret
repnz
adc
fmul
add
push
gs
lcallw
or
leave
cmp
jb
test
repz
sub
inc
jnp
jecxz
or
sbb
sbb
or
cltd
push
rorb
adc
aad
addb
xchg
cmp
inc
std
cmpsb
and
cwtl
push
hlt
inc
cmpl
repnz
mov
rcrb
outsb
mov
rorb
fdivrp
adcb
inc
iret
call
add
mov
pusha
or
mov
ss
mov
pop
cmova
repnz
ds
out
push
sbb
in
lods
dec
xchg
or
sar
in
push
fs
je
je
pop
inc
pushf
les
mov
cwtl
xchg
es
shll
pusha
ljmp
push
pop
loopne
loop
das
lock
test
xchg
cltd
push
adc
cmp
outsl
das
push
xor
int3
subb
subb
dec
cmc
dec
lock
xchg
or
dec
adc
or
int3
ljmp
lcall
jmp
push
push
adc
pop
test
push
jg
call
mov
inc
jmp
dec
sti
scas
pop
sbb
pop
and
das
insb
hlt
fcmovnu
in
inc
test
dec
aaa
cwtl
cwtl
jp
outsb
icebp
sbb
filds
mov
jecxz
stos
sarb
lds
outsl
cld
daa
stc
inc
inc
popw
xchg
xor
shl
mov
mov
subb
leave
adc
test
cmp
jns
jg
and
lods
incl
aad
cwtl
stos
aas
lds
add
xor
je
in
xor
icebp
xor
xchg
cwtl
cli
fisubs
aaa
push
mov
mov
clc
call
aad
das
insl
int
and
and
cltd
mov
cltd
and
adc
das
mov
iret
pop
pusha
mov
movsb
testl
xchg
add
fisubl
jae
filds
cmp
cmp
nop
adc
mov
pop
mov
mov
sahf
flds
sub
mov
lea
movsb
inc
ljmp
xor
jo
cs
out
jp
mov
add
cld
or
adc
out
sti
add
add
or
xchg
jmp
mov
hlt
rorb
fcompl
dec
jg
dec
addr16
and
cld
lret
aaa
in
push
fidivrl
inc
adc
mov
call
cltd
fisttps
loopne
push
and
rcrl
inc
mov
mov
xchg
pop
int3
lods
push
cmp
push
pusha
imul
sub
pop
addl
fiadds
ljmp
or
mov
ret
push
jns
sbb
adc
mov
pushf
inc
ret
into
sbb
dec
jmp
pop
shlb
fdiv
aas
jno
push
clc
and
inc
inc
enter
sbb
jg
jg
or
icebp
cmpsl
cmp
sarb
jecxz
xor
in
mov
push
cs
pop
xor
out
cmp
jbe
sub
ljmp
stos
xorl
inc
test
aaa
test
or
adc
rcr
sar
inc
add
inc
dec
fs
outsb
fs
and
fcomps
call
inc
icebp
inc
cli
int
jns
fistpll
mov
push
add
or
dec
push
xor
mov
push
insl
add
cmp
adc
data16
out
sti
pop
stos
pop
outsb
faddp
insl
addr16
pop
ficoms
subl
popa
lret
push
push
cmp
shll
add
fistpll
jmp
ret
xor
or
mov
jo
xchg
mov
cwtl
in
in
mov
leave
mov
adc
test
lods
cmpsb
adc
mov
iret
lret
pop
xchg
lret
add
push
and
stos
sbb
cmp
dec
data16
out
xchg
rolb
test
insl
jmp
jg
icebp
jo
inc
testb
ja
and
pop
pop
iret
ljmp
ret
outsl
cmpsl
pop
sub
in
pushl
or
scas
or
cli
imul
fcoms
mov
insb
test
adc
or
hlt
repnz
xchg
mov
inc
mov
icebp
or
jl
mov
adcl
test
fstpt
push
rolb
mov
aaa
sbb
loopne
cmp
lcall
loop
sbb
cmp
orb
fstpt
fcmovu
ja
xchg
mov
decb
jne
mov
fsts
rcll
and
adc
jle
orl
sbb
fimuls
sqrtps
es
add
cmp
ljmp
cmp
sub
adc
daa
or
rcll
loope
enter
je
test
imul
dec
outsb
push
and
sub
stos
cmp
mov
stos
stos
sub
movsl
hlt
je
mov
push
orb
mov
mov
test
rcrb
xlat
call
cmp
mov
das
cld
incl
mov
in
nop
sbb
or
jne
jb
addr16
xchg
mov
adc
xchg
inc
mov
pushw
daa
xchg
jp
fimuls
cmc
repnz
popa
mov
hlt
outsb
inc
in
repnz
ds
push
xchg
hlt
mov
test
push
stos
xor
add
int
jmp
adc
jo
hlt
fwait
stos
rcll
push
push
test
mov
pop
lret
xchg
jle
mov
cmp
pop
out
pop
je
dec
outsb
push
xchg
mov
cld
push
mov
cwtl
jg
adc
or
pop
js
or
dec
popf
stc
pop
add
test
aas
xor
push
xchg
mov
mov
push
jo
jno
inc
rcl
cmc
outsl
push
push
call
ss
add
sbb
popa
mov
push
rcll
test
es
cmp
ret
inc
mov
jae
inc
int
cmp
pop
inc
mov
mov
sub
cmp
call
mov
adc
jmp
or
popa
arpl
xchg
sbb
flds
ds
push
pop
ret
xchg
push
xlat
xor
push
hlt
out
rorl
cld
mov
cmc
fldl
and
pop
imul
push
movsb
sahf
lds
faddp
adc
inc
jbe
push
mov
stc
jno
insb
adc
in
fwait
xchg
xor
pusha
add
sbb
mov
aam
pop
dec
xor
int
sbb
rclb
cmpsb
popa
andl
stos
iret
xor
and
insl
out
popa
mov
adc
sbb
loopne
pushf
inc
insb
loopne
incl
mov
js
push
rcll
push
lcall
pop
aam
fildll
add
aas
arpl
jg
loop
inc
stos
lods
and
jo
add
pop
pop
ud0
lock
mov
and
push
mov
and
call
stos
popl
jp
int
test
sub
add
call
ljmp
push
lcall
push
push
mov
fdivs
cs
ljmp
pop
add
call
pop
cmp
fs
jns
mov
hlt
cmpl
incl
outsl
mov
add
int3
ret
add
decl
adc
and
cwtl
adc
jne
je
pop
add
jmp
push
pop
les
rcrl
or
pop
dec
leave
test
jle
jns
adc
shll
in
xorl
js
inc
out
lock
push
imul
mov
loop
sbb
pop
adc
clc
dec
cmp
fistl
jmp
and
pop
fisubs
movsb
push
jp
jecxz
cmp
mov
adc
pop
pusha
shll
bound
movsb
jge
adc
repz
incb
and
ffreep
lfs
jecxz
inc
push
xor
adc
push
decl
decl
test
pushf
lods
enter
ret
int
cmpl
dec
orl
bound
mov
aas
jo
mov
cli
xchg
inc
jbe
repnz
add
push
jp
push
lcall
or
into
add
dec
lock
mov
mov
xor
rcll
jp
sti
pusha
icebp
xorb
inc
addr16
sbb
inc
inc
sbb
push
pop
jae
sbb
xchg
xor
loop
xor
clc
lcall
xchg
fmul
sub
ds
in
scas
pusha
stos
lret
ss
mov
daa
jg
or
mov
inc
stos
or
mov
call
out
lock
xlat
push
ss
in
or
cs
add
inc
movsb
lods
cmp
jbe
js
sti
dec
xchg
les
stos
pop
into
rol
incl
js
mov
sbb
cmp
sti
or
movsl
test
scas
out
dec
outsl
fsubl
into
clc
sahf
push
mov
xchg
inc
sub
jnp
jo
out
mov
sub
clc
mov
dec
push
adcb
mov
aaa
push
test
pop
and
lea
fdivrs
pop
inc
aaa
shlb
adc
jg
rcl
add
cltd
add
xchg
mov
and
in
push
lahf
icebp
jg
lods
fmulp
inc
push
in
push
or
jb
push
testl
clc
in
xlat
mov
mov
inc
jecxz
enter
jno
push
out
mov
push
fsubrl
fs
xor
inc
pop
ljmp
ds
mov
jge
mov
sysexit
pop
and
mov
and
cli
or
adc
pop
mov
insl
stos
fbld
add
nop
push
and
jl
mov
rcrb
imul
fbld
pop
cltd
jae
xor
sbbb
push
or
push
or
sub
inc
dec
movsl
mov
aas
mov
or
ret
adc
fcomps
pop
lea
cmp
or
ds
push
pop
mov
mov
jne
lock
bound
mov
nop
mov
pop
or
or
jno
jl
cmpsb
dec
mov
or
jg
mov
subb
std
cs
mov
jg
mov
push
pop
aad
vmaxps
out
sub
pop
popf
xchg
xor
aaa
lods
cmpsb
cmc
aaa
pusha
jmp
push
adc
sub
clc
or
pusha
pop
adc
imul
jp
addl
xchg
inc
adc
outsb
mov
jmp
dec
cmc
add
sbb
bound
hlt
outsl
out
or
xorl
adc
arpl
rcr
add
call
or
push
outsb
jo
and
adc
sbb
or
sub
lock
mov
mov
shll
inc
lock
adc
movsb
insl
divl
mov
mov
aad
dec
sbb
mov
loop
pop
adc
das
push
dec
incl
mov
subl
out
in
out
sarl
push
inc
push
mov
or
xchg
mov
cli
jmp
rol
data16
icebp
sbb
xchg
js
dec
mov
mov
nop
popf
scas
cmp
outsl
fstl
repnz
das
xorl
xor
fistl
xor
gs
inc
mov
xor
jbe
in
cmp
jne
xor
adcl
rcr
xchg
inc
and
cltd
arpl
push
in
addb
in
loopne
testb
rcll
adc
loopne
xlat
pushf
sti
insl
push
push
lods
pop
and
push
les
in
sub
xchg
or
sub
sub
sbb
push
sbb
and
xchg
dec
pop
aaa
inc
rorl
dec
mov
adc
test
rclb
cli
daa
mov
repz
push
sti
jg
insl
xchg
loope
and
shlb
sub
jnp
punpckhwd
push
xchg
fwait
out
jmpw
dec
fstl
cmp
nop
fadd
divb
jno
pop
and
mov
pushl
fistps
mov
push
pop
push
adc
cmp
pop
mov
ret
into
inc
jg
cwtl
add
and
mov
data16
pop
scas
push
cmp
pushf
mov
fs
je
adc
push
arpl
mov
fsub
push
add
or
std
mov
movsb
call
push
mov
popf
and
nop
loope
lock
mul
xor
fstpt
dec
push
inc
cmp
out
push
cmc
mov
jbe
dec
mov
or
daa
loopne
sub
pop
cmpb
ja
cmc
mov
mov
in
jb
jle
xor
jae
pop
mov
hlt
nop
test
outsb
sbb
sub
add
lods
adc
cwtl
jge
push
shll
shrl
and
ja
jecxz
pop
push
inc
jb
mov
rcrl
push
pop
pop
rcrb
mov
into
add
add
test
jbe
add
xchg
cmp
xchg
push
out
pop
and
outsl
or
jecxz
testl
clc
dec
int
ja
shl
repz
xchg
add
jno
lods
mov
sub
adc
fisubl
aam
or
dec
ss
popf
dec
and
sti
push
mov
stos
jmp
orl
int3
add
pop
or
ret
xor
das
inc
inc
jo
mov
cmp
mov
mov
dec
cmp
mov
lret
pusha
inc
icebp
add
test
jge
scas
movsl
pop
adc
push
adc
shr
dec
push
jo
mov
movsb
or
bound
test
into
fcomip
add
add
cmc
shlb
scas
in
lea
popf
popf
mov
test
or
or
xor
cs
fnstsw
fbld
add
mov
xchg
or
add
xor
sahf
xchg
jg
mov
test
fadd
or
lds
ret
push
loop
aad
push
enter
outsb
rclb
out
cmpb
inc
call
jno
not
add
mov
gs
popf
decb
insl
in
pop
push
dec
fdiv
cs
mov
mov
sbb
inc
call
xor
inc
cmpsl
push
and
out
loope
subl
aas
jae
cwtl
adc
xor
mov
rclb
cbtw
push
in
push
xor
pop
or
pop
out
mov
ds
jnp
subl
popf
mov
pop
sbb
sub
dec
xchg
mov
movsb
and
cld
lea
dec
mov
xchg
xor
imul
mov
cs
aad
das
xchg
js
hlt
lahf
fcoms
fildll
mov
mulb
test
adc
jo
jle
sub
add
fxch
pop
push
or
insb
xchg
dec
push
nop
sbb
xchg
pop
xor
sub
or
push
jno
xchg
sbb
addr16
es
mov
cmp
mov
lock
mov
mov
out
and
outsb
push
aaa
xor
ret
jns
test
add
fidivrs
mov
rorl
sbb
add
or
cmc
inc
shll
cmpb
push
xchg
cmp
mov
sti
mov
lods
mov
jle
push
mov
stc
jns
incl
hlt
inc
add
ja
xor
in
arpl
jb
or
adc
aas
pop
pushf
dec
mov
lods
loopne
test
cmp
outsl
notl
dec
into
dec
push
mov
push
lea
adc
mov
rcl
fidivrl
ss
adcl
xlat
and
cs
sbb
lds
xchg
pop
jp
cmp
fisubl
mov
mov
outsb
inc
adc
add
jno,pn
cmp
add
jp
test
aam
fs
cltd
lret
fwait
into
lods
test
dec
ret
icebp
lods
sub
andb
aaa
push
in
jns
dec
pop
cmpsb
loopne
mov
lahf
or
dec
add
pop
loopne
jg
bound
lock
pop
xor
scas
decl
mov
outsb
sti
adc
ds
or
aaa
pop
adc
es
into
xor
hlt
div
push
add
ds
addb
test
push
mov
adc
xor
loopne
push
mov
sub
push
sti
inc
stos
inc
pop
das
mov
xor
mov
inc
aaa
sub
and
sub
mov
aam
mov
insb
push
mov
ss
mov
std
push
and
push
mov
outsb
in
cmp
xor
cwtl
jb
and
in
jg
rolb
and
mov
sbb
std
cmc
jg
sub
dec
shlb
push
imull
mov
jnp
cmp
xchg
mov
fwait
mov
xchg
test
push
push
add
xchg
leave
xchg
mov
xchg
and
push
ficompl
jp
xor
sahf
mov
inc
mov
inc
cmc
mov
mov
cmp
and
ss
mov
cmp
push
lods
jl
vlddqu
mov
popa
cli
mov
pop
fiadds
mov
mov
inc
mov
sahf
sbb
push
mov
std
das
or
loope
push
push
add
jne
jne
pop
mov
pusha
mov
mov
std
and
fucomip
outsb
push
imul
mov
jno
test
inc
mov
pop
lret
adc
or
gs
xchg
adcl
jmp
mov
call
sbb
xor
or
cld
notb
mov
cmpsl
push
sahf
aam
jae
mov
jo
js
jmp
and
nop
je
xchg
push
test
inc
mov
add
test
ret
jbe
lcall
mov
or
into
cld
movq
test
xor
add
std
adc
add
push
sarl
test
pop
cltd
xchg
add
fdivrp
mov
outsb
sub
jl
xchg
mov
incl
mov
ficomps
add
jnp
add
out
ds
mov
insb
xor
ss
cwtl
rorl
dec
sub
jne
or
cmc
cmp
and
sbb
push
scas
decb
lea
push
mov
loopne
mov
cmp
adc
dec
push
clc
sbb
scas
or
shlb
cwtl
mov
outsb
movl
cmp
in
xor
sbb
dec
and
dec
stos
in
outsl
outsl
add
decb
jge
push
stos
repz
into
jle
js
test
cld
pop
xor
movsl
in
test
jmp
andl
cmp
inc
jne
in
aad
imul
cs
xchg
and
faddl
inc
sti
push
and
leave
jb
stos
outsl
pop
outsl
repnz
fdivl
pop
dec
push
pop
pop
cmpsb
inc
cmpsb
dec
test
mov
dec
or
pop
mov
dec
adcl
sbb
or
cmp
add
lods
adc
push
inc
mov
jecxz
mov
xor
fwait
popf
popa
mov
mov
adc
pop
popa
inc
add
aaa
mov
jbe
decb
pop
imul
popf
mov
pushl
push
nop
inc
outsb
cmp
pushf
jle
push
mov
mov
fs
mov
push
lods
lock
adc
orl
test
pop
mov
sub
ret
popa
mov
add
pop
out
xchg
in
pop
mov
lods
pop
dec
push
dec
das
mov
addl
popa
or
cmp
fisubl
mov
xchg
stos
in
push
mov
push
and
mov
push
stos
cld
mov
mov
inc
xchg
vmovdqa
sub
popa
dec
add
js
stos
add
pop
sub
imul
push
xchg
aam
mov
mov
jae
inc
xchg
fildll
fsubrs
dec
notb
outsl
or
aaa
loope
ljmp
sub
aam
cmp
dec
xor
pop
imul
inc
imul
and
imul
or
mov
push
cmc
iret
pop
push
inc
loopne
test
mov
shr
pusha
dec
lsl
in
mov
imull
iret
stc
add
push
addb
add
cli
mov
and
aaa
adcb
jl
outsl
cmpsb
cs
xchg
xorb
sbbb
addr16
mov
scas
pushl
xlat
fisubrs
dec
push
test
lds
in
in
or
add
scas
lods
into
jo
pop
cmc
pop
decl
aaa
adc
daa
shll
testb
and
sbb
inc
mov
xchg
or
dec
ljmp
movsl
inc
or
outsb
mov
mov
std
push
shl
shll
sbb
jns
pop
and
jmp
pop
loope
xor
test
lods
cmpsl
mov
push
adc
arpl
cltd
scas
add
std
sbb
mov
push
pop
sti
and
aad
and
int3
sub
and
gs
jmp
pop
imul
mov
cld
mov
lock
repnz
add
pop
adc
pushf
sbbl
mov
or
mov
add
adc
sbb
out
lea
pop
test
xchg
inc
aaa
lock
add
pushf
call
loop
inc
mov
outsb
out
and
cmpsl
cmpsl
sbb
xor
mov
rcll
dec
cmp
sbb
shrb
sbb
data16
jg
or
xchg
add
loopne
push
dec
mov
add
push
dec
xchg
outsb
insb
mov
shlb
test
pop
sbb
inc
out
pushf
ds
stos
inc
addr16
stos
or
dec
movsb
loopne
lret
pop
test
mov
fimuls
cmc
mov
or
aaa
mov
cwtl
push
cmp
sbb
fstpt
lds
shlb
loope
incl
mov
jge
repz
ret
inc
test
popa
and
xlat
test
std
mov
inc
lea
out
xchg
and
aas
and
repnz
inc
cmpb
jbe
or
arpl
mov
ljmp
fcompl
and
lods
dec
pop
negb
repnz
mov
aas
ficomps
cmp
loop
inc
pop
adc
adc
mov
iret
adc
repz
mov
xchg
jecxz
movsl
jmp
pop
addr16
push
hlt
ret
mov
mov
push
jno
lea
push
in
adc
cmp
add
sub
mov
imul
and
je
arpl
jnp
xor
push
adc
enter
inc
scas
hlt
mov
loop
sub
test
decb
adc
cmp
gs
xchg
nop
push
jmp
jg
fcmovnb
popf
call
aaa
jp
pop
jmp
loop
dec
inc
pushl
push
xor
mov
sub
cmp
cld
cmp
das
negl
mov
mov
hlt
mov
dec
outsb
jecxz
xchg
adc
mov
fldl
sbb
outsl
test
sub
out
nop
xor
jmp
sbb
sarl
cld
fsubl
mov
pop
pusha
mov
add
inc
push
add
sti
push
push
sbb
pop
je
xor
inc
lods
sub
mov
rcrb
bound
and
pop
loopne
push
shrb
test
mov
outsb
std
fmuls
pop
mov
adc
cmpsb
mov
mov
lea
and
fyl2x
movsb
pop
lahf
subb
sbb
and
xchg
adc
sbb
cwtl
adc
and
mov
lret
idivb
sbb
and
xchg
data16
fldt
das
test
adcb
nop
outsb
lret
jbe
sub
xchg
xchg
fdivrp
dec
std
sub
pusha
jge
adc
or
inc
sar
mov
cli
stos
sbb
jo
cltd
inc
push
test
fwait
addl
cli
fiaddl
push
scas
dec
jbe
mov
and
sub
loopne
das
in
adcl
add
sbb
sub
nop
push
rcll
stos
mov
push
mov
jl
insl
test
xchg
fsubs
scas
orb
push
repnz
clc
loope
int3
mov
fisubrl
cli
inc
adc
aas
add
sub
rcrb
mov
pop
dec
lock
xor
negb
sbb
xchg
scas
aam
or
nop
call
push
faddp
ljmp
pop
outsl
or
shlb
mov
das
pop
stos
push
sub
sarb
hlt
ror
scas
inc
push
divl
sub
outsb
xor
xorl
dec
cmpsb
rolb
lcall
shll
stos
lock
insl
jg
and
mov
push
dec
jp
scas
jmp
cmpsl
jmp
int
in
jg
shlb
scas
add
test
dec
jb
sbb
pop
iret
or
lret
adc
mov
imul
in
dec
cmp
jecxz
push
loope
push
push
pop
bound
mov
dec
adc
dec
xor
jo
fildll
test
shlb
or
es
or
movsb
and
push
mov
dec
ds
push
adc
mov
mov
ds
ret
sbb
cs
sbb
bound
aad
push
in
sbb
or
aam
cmp
push
and
mov
mov
into
and
add
pusha
mov
ret
lahf
or
lock
mov
inc
mov
push
sub
mov
push
in
mov
push
outsb
cmp
cmp
ljmp
rolb
xor
pop
mov
sbb
jbe
pop
fdivs
xchg
push
pop
add
add
mov
jbe
clc
ret
jmp
or
cwtl
mov
dec
xchg
clc
pop
xor
sbb
out
sbb
ljmp
sub
cmp
push
int
xchg
push
inc
ljmp
pop
outsl
sub
iret
mov
fs
pushf
and
sarl
out
push
adc
inc
jbe
mov
ficomps
dec
mov
aaa
cmc
mov
sub
int
mov
les
ret
mov
lods
fcomps
fwait
shrb
cmp
fdivrs
add
add
aaa
mov
jecxz
rclb
mov
push
outsb
outsl
js
ret
and
adc
daa
cwtl
ljmp
ret
inc
stc
push
sub
sub
mov
iret
rclb
orl
mov
popf
repnz
mov
mov
mov
dec
out
test
std
fdiv
movsb
adc
adc
push
fs
filds
ja
or
into
outsb
jmp
rolb
pusha
push
jl
popf
fmull
pop
loopne
jle
aam
sbb
pop
jmp
scas
cmp
dec
xchg
jg
inc
les
dec
inc
jno
ja
jb
mov
cltd
gs
mov
mov
cltd
dec
xor
insl
mov
outsl
call
rcll
inc
xchg
sbb
pushf
insl
outsl
das
std
lcall
add
push
adc
and
lods
cmp
push
jno
push
or
and
xchg
in
push
aas
das
cmp
xor
mov
ret
loop
enter
jg
mov
scas
shlb
jle
mov
cmp
outsl
ljmp
adc
stos
sti
pop
push
push
imul
cld
rcr
ss
sti
sbb
mov
xor
mov
out
sub
pop
mov
and
in
pop
insb
je
add
pop
inc
bound
arpl
lock
xchg
shll
inc
xchg
sub
and
incl
jmp
cwtl
xchg
and
into
mov
mov
add
cmp
and
adc
aaa
push
mov
outsl
pop
sbbb
shl
andb
inc
fists
add
enter
mov
add
pop
push
xchg
lret
or
jle
faddp
jbe
inc
xchg
ror
les
pop
movsb
pusha
jl
adc
sub
add
xor
pop
pop
stos
into
pushf
ljmp
jecxz
jmp
bound
xchg
sub
push
in
sub
sbb
push
jge
movsb
and
push
out
xor
fisttpl
fsub
arpl
jo
inc
js
mov
inc
int3
decl
mov
cmp
clc
fucomp
shll
scas
dec
shlb
pop
xchg
adc
movsb
clc
inc
pop
push
inc
inc
cmp
sti
mov
add
scas
add
mov
mov
outsl
cld
or
xor
mov
loopne
outsl
dec
jb
mov
sarl
test
rcll
add
sub
xchg
fcmovu
insb
in
lea
jp
cmp
outsl
std
inc
cwtl
test
xor
iret
xor
cwtl
adc
adc
sarb
mov
xor
lods
imul
outsl
inc
rorb
lock
sub
pop
inc
dec
iret
ret
push
adc
ljmp
mov
sbb
sub
hlt
lret
sbb
pusha
add
fiaddl
push
xchg
or
mov
sbbb
fsubrl
inc
and
mulb
add
push
pop
rclb
adc
stos
xor
pop
xchg
das
sub
push
test
jecxz
pop
clc
mov
rcrb
insb
mov
roll
push
mov
sub
orl
dec
std
lea
mov
pop
mov
loope
lret
mov
icebp
add
pop
aas
jl
imul
nop
popf
or
fsubl
ja
int
adcb
sub
test
inc
xor
jl
fwait
jnp
hlt
insl
mov
cmp
out
and
outsb
pop
push
in
mov
mov
push
jg
cmpsl
jg
icebp
fistps
mov
sbb
repnz
dec
push
pop
rol
jmp
in
cmpsb
sbb
push
outsl
lods
add
jo
stos
orl
mov
scas
and
dec
mov
add
ret
je
cmp
std
push
jmp
jns
dec
mov
push
in
adc
outsl
loopne
or
enter
cld
mov
divb
cltd
inc
xchg
or
jo
inc
dec
inc
pusha
mov
push
mov
or
shl
hlt
mov
pop
jae
sub
pop
insb
cmp
pusha
push
sbb
mov
sub
clc
or
or
mov
cltd
das
les
xor
test
jo
add
mov
cs
and
test
lds
jne
cmp
mov
into
popa
jbe
add
add
push
adc
clc
aam
jecxz
add
rcl
cmp
adc
sub
cltd
xchg
outsb
mov
mov
inc
jmp
push
scas
sub
adc
shlb
sbb
adc
inc
arpl
inc
push
mov
sub
dec
xor
cltd
cmp
xchg
ljmp
cld
pop
sbb
push
sbb
add
sahf
mov
je
cmpsb
dec
mov
std
dec
test
cli
fcmovne
jae
dec
pushf
dec
out
and
mov
test
popf
push
inc
imul
pop
repnz
adc
dec
in
sbb
fprem1
pop
cli
test
mov
shlb
and
iret
pop
icebp
into
push
fsubl
inc
jb
mov
mov
test
pop
sbb
aaa
cwtl
and
mov
pop
jl
fwait
add
nop
es
adc
fadds
outsl
mov
sbb
and
inc
mov
xchg
insl
and
call
inc
or
dec
jecxz
inc
nop
pop
fmulp
lea
dec
std
lock
push
mov
mov
sbb
mov
das
lret
xor
or
sub
mov
inc
jne
pop
dec
out
or
mov
inc
into
pop
rolb
outsl
cli
in
and
movsb
add
add
mov
insb
gs
inc
mov
test
call
or
loopne
subl
out
cmpsl
test
mov
pop
loope
std
lcall
repnz
pop
movsl
loop
leave
fwait
pop
sbb
xor
rclb
mov
jbe
loop
mov
pop
xchg
or
and
cmp
pop
sbb
xchg
cwtl
or
es
lahf
push
shrl
fcompl
in
lret
imul
fs
testb
jmp
mov
js
jnp
jne
jg
scas
inc
mov
std
dec
in
das
popf
mov
xchg
loopne
fiadds
lret
pop
pop
subb
mov
in
dec
xor
movsl
movl
jg
mov
daa
std
popf
inc
pop
xchg
rol
fists
jmp
pop
mov
popa
jg
in
push
push
sbb
jb
xor
push
jb
jb
sbb
ss
mov
cmp
xchg
scas
fcoms
push
pop
cmc
sarl
mov
orl
rorb
xor
in
push
push
mov
xchg
xor
repz
fcoms
mov
fsts
and
addb
xchg
daa
mov
dec
push
mov
mov
ja
out
cmp
ds
call
xor
in
fistps
lds
mov
in
lcall
cwtl
or
push
cld
sub
or
dec
adc
test
push
loope
fistps
cld
mov
and
incb
jmp
adc
push
jbe
sub
in
insl
or
jne
or
push
adc
out
mov
into
inc
mov
addr16
test
sbb
mov
sbbb
out
mov
scas
fidivrl
minps
ja
mov
mov
xchg
or
rol
aam
ljmp
imul
xchg
mov
or
lret
pop
jb
pop
loopne
push
out
out
inc
sbb
movsl
aaa
in
test
push
xor
mov
adc
insl
and
pop
out
movsl
outsl
in
mov
or
leave
insb
mov
dec
das
sub
pop
fwait
push
cmp
add
cli
pop
loope
push
adc
inc
pusha
mov
adc
pop
inc
pop
mov
rcrb
popl
or
test
xorb
pop
mov
lret
into
je
xchg
testb
imul
mov
inc
es
mov
cmp
pop
mov
shl
cmp
repnz
mov
ljmp
dec
ret
dec
movsl
call
lahf
sub
in
ljmp
out
call
adc
xlat
pop
ret
addl
call
pop
rol
insl
ja
sbb
xchg
inc
dec
xor
mov
test
pop
dec
mov
xor
fiaddl
and
clc
les
mov
mov
adc
fisubrs
cmp
fisttpl
fldt
sub
int3
sbb
adc
ss
ret
inc
fcoms
add
mov
inc
inc
fsubl
leave
rcrb
sub
xchg
jnp
xchg
mov
push
mov
pop
imul
les
or
add
sbb
enter
imul
aas
outsb
sbb
push
test
xor
sub
xor
test
push
cmp
adc
aad
xchg
lret
psubsw
dec
loope
aad
insl
add
loop
push
pop
insl
cmc
std
jmp
pop
rorl
push
mov
xor
cltd
cltd
or
xor
and
stc
and
cmp
add
dec
in
jge
add
cld
cltd
cmpsb
cmc
xchg
mov
insl
jecxz
icebp
inc
mov
dec
hlt
inc
push
mov
cmp
xchg
out
push
in
push
xor
sbb
aas
cvtps2pi
or
push
call
jo
cli
pushf
xor
dec
push
jl
push
mov
jl
push
mov
mov
out
mov
pop
jnp
or
push
jbe
imul
inc
sub
loopne
mov
fcmovbe
adc
cmc
mov
adc
xlat
mov
inc
decl
jne
adcl
scas
or
enter
fidivl
mov
xor
sbb
mov
mov
pop
dec
outsl
fcompl
dec
push
fdivrl
push
cmp
xorl
mov
repnz
jns
mov
pop
or
outsb
rolb
je
add
outsb
mov
imul
add
adc
mov
dec
insb
push
mov
fidivrs
xor
aas
loop
mov
xchg
or
jg
shrl
xor
cmpsl
mov
mov
sbb
hlt
mov
or
push
mov
pop
xor
pushf
mov
adc
lods
add
xchg
stos
rcl
fisubs
xchg
data16
sub
pop
shl
cmp
in
inc
jb
xchg
or
add
repz
adc
andb
push
insl
pop
xchg
sub
jge
fistpll
inc
rorb
xchg
sbb
fildll
sbb
push
push
aam
xchg
int3
cmp
clc
out
and
pop
fimull
leave
cmp
mov
sbb
rol
add
call
jp
jp
or
push
xor
mov
mov
push
jo
add
movb
xor
xor
add
cmp
lcall
test
push
imul
rcpps
and
fs
mov
les
pop
and
xor
push
jnp
add
jbe
incl
mov
lods
adc
in
adc
push
lods
imul
out
cmpsb
cmp
pusha
aaa
adc
or
insb
push
inc
inc
jae
movsl
jmp
in
out
adc
mov
sbb
pop
loop
sub
idivl
or
add
icebp
xchg
mov
jae
jmp
sbb
mov
stos
or
lods
movsb
imul
ret
push
subb
add
pusha
push
cltd
xchg
cmp
sub
mov
mov
dec
mov
and
cmp
or
sub
ss
shl
cmp
int
pop
jo
cmp
xor
inc
inc
or
add
mov
fisttps
xor
xlat
jmp
out
insb
fbstp
push
add
dec
int3
adc
cmp
mov
cmp
cmc
shrb
ss
push
arpl
mov
movsb
mov
out
pop
ja
test
push
cmp
push
cmp
aad
lods
mov
imul
mov
lods
popf
and
and
push
jne
int
clc
icebp
xchg
rclb
pop
call
outsl
mov
std
out
jno
xchg
push
test
out
and
adc
mov
xchg
jns
xchg
in
adc
cltd
les
cmpsl
or
ja
cli
iret
lahf
inc
lock
shrl
ds
pop
clc
ret
jle
jo
into
adc
push
cmpsl
outsb
rol
push
sbb
ficoms
and
andb
addr16
push
inc
pop
or
and
cmpsb
stc
test
fwait
sub
shll
dec
shrb
or
push
xor
ffreep
xchg
mov
and
js
jmp
les
or
xchg
mov
aas
aaa
outsb
imul
movl
cmp
push
inc
imul
lahf
pop
test
pop
stos
sbb
sub
mov
das
mov
and
push
cli
dec
xchg
adc
mov
lds
lahf
mov
mov
mov
insb
inc
cmpsb
pop
mov
stos
test
clc
push
xchg
pop
cltd
clc
ret
mov
lea
hlt
fwait
stos
lock
addr16
push
sbb
iret
jge,pt
adc
in
repnz
leave
fldcw
mov
fisttps
ficompl
pop
insl
xchg
cmp
outsl
jl
pop
pop
movsb
cmc
adc
fwait
mov
ljmp
ret
xlat
dec
in
and
xchg
stos
push
pop
fsts
aad
sub
lcall
xor
jns
es
mov
sahf
outsl
adc
std
mov
cltd
mov
mov
in
sar
mov
add
pop
mov
dec
push
jne
ja
add
lahf
pop
test
xor
shlb
roll
xchg
and
pop
stc
mov
daa
jl
pop
mov
xchg
sub
sbb
test
sub
fiaddl
pop
push
dec
inc
call
pop
js
cs
orl
push
cmp
pop
pop
jb
test
dec
popw
jp
push
xor
mov
mov
or
es
sub
call
push
arpl
std
mov
sti
repnz
adc
jo
inc
hlt
add
lods
jnp
insl
pop
cltd
or
call
aam
ss
test
mov
pop
in
sbb
and
mov
repz
outsl
call
leave
mov
ret
pop
or
push
scas
and
jmp
mov
sbb
cmp
or
pop
in
outsb
stos
sar
ljmp
rol
inc
mov
mov
sbb
fsubr
nop
out
test
ss
xchg
cmp
pop
dec
fwait
push
push
js
lea
aam
jmp
mov
pop
xor
shrb
or
fbstp
in
mov
das
adc
sub
call
es
arpl
jecxz
fldcw
xor
inc
lahf
xor
adc
out
or
inc
and
stos
mov
pop
ret
pcmpgtb
pop
enter
pop
mov
add
fisubs
std
push
cs
and
inc
addr16
xchg
in
lcall
add
test
cmp
ds
xor
out
stos
test
xchg
orl
xchg
jae
and
clc
mov
sbb
cmc
lock
clc
nop
mov
fsubrp
movsl
lret
iret
lret
or
sbb
pop
sbb
movsb
icebp
jle
lea
cmovg
out
ds
sub
mov
and
mov
xor
rcl
jge
or
repnz
xor
shl
jbe
ss
dec
popf
adc
mov
lcall
into
icebp
mov
push
pop
jo
add
mov
push
mov
xor
xchg
call
mov
mov
mov
mov
cmp
cmp
push
adc
adcb
add
ss
inc
call
mov
mov
movsl
neg
insl
ds
xor
dec
scas
pop
sub
or
inc
jae
push
push
shrl
outsb
fcmovnu
push
lea
cwtl
add
jle
or
pop
xor
ret
sub
mov
jns
jne
mov
cmp
insb
cli
ss
cs
cmp
int3
ja
adc
out
movsb
leave
add
aaa
xchg
cmpsl
lds
outsl
mov
sub
loop
popf
sti
cmpsb
mov
test
mov
xor
xor
scas
lea
cli
mov
adc
fs
movsl
cmp
mov
cmp
lcall
call
arpl
push
in
adcl
cmp
dec
inc
rolb
push
xor
shrl
xchg
dec
sbb
aam
and
jmp
out
adc
stos
call
adc
pop
mov
inc
cld
shr
aaa
dec
dec
dec
mov
lret
sbb
mov
xchg
js
adc
outsl
lods
call
insl
or
pop
sbb
aaa
pop
jle
mov
sub
sti
into
sahf
lods
pushl
out
sahf
cwtl
mov
cmp
out
jg
mov
mov
insl
fs
mov
movsl
push
aad
in
mov
lret
ja
sub
pop
mov
xchg
shl
inc
lret
fildll
scas
xchg
xchg
stc
xlat
enter
inc
mov
mov
loope
cmpb
or
icebp
cmc
push
mov
jne
outsb
ja
jo
outsl
fistpll
pop
mov
scas
adc
jno
adc
or
jecxz
xor
inc
mov
cmc
stc
cmc
and
or
icebp
mov
int
lret
icebp
sub
data16
and
rcrl
fdivrl
xchg
sub
shr
sub
std
aaa
jne
adcb
xor
mov
popf
mov
add
or
mov
out
inc
cmp
nop
jmp
loope
xchg
inc
in
addr16
ret
mov
scas
or
hlt
dec
dec
push
push
loopne
push
insl
jne
movl
xor
inc
inc
jne
pop
imul
push
xchg
cltd
mov
jb
out
stos
jg
mov
popf
stos
pop
add
sbb
dec
scas
imul
stos
clc
mov
loopne
imul
std
mov
inc
jl
or
and
adc
loope
aam
loopne
mov
lret
sbb
pop
test
insl
pusha
pop
jg
enter
mov
pushf
mov
or
inc
xlat
mov
mov
push
fadds
fisttpl
cmp
dec
pop
add
aaa
add
jecxz
filds
xchg
sbb
add
mov
ret
mov
lahf
pop
mov
in
mov
shll
xor
lret
or
notl
enter
out
push
dec
inc
nop
xor
mov
mov
add
and
repz
ljmp
mov
xchg
sbb
or
and
outsl
pusha
push
sub
sub
lret
pushf
jp
test
mov
mov
push
pop
inc
sbb
xor
or
sub
mov
aad
call
das
mov
cs
pop
fwait
ds
mov
xchg
int3
aam
fcmovb
inc
xchg
cld
clc
dec
lea
orb
lods
mov
cld
dec
dec
pop
out
adc
aas
xchg
mov
xor
mov
sbb
push
jbe
sub
lret
fwait
push
int
test
mov
mov
xor
xchg
imul
dec
ljmp
fcom
lret
inc
mov
xchg
add
and
cltd
jmp
cmp
lcall
movsb
push
sub
or
gs
xchg
dec
insl
ss
sub
js
and
repnz
shlb
call
rcrl
mov
and
mov
in
sub
dec
test
cld
imul
or
pop
orb
cs
ljmp
fbld
push
push
inc
mov
or
adc
js
xchg
pop
cmpsb
test
xchg
and
push
lret
xor
mov
icebp
fiadds
aad
jl
inc
lods
dec
mov
jnp
inc
push
mov
mov
aam
or
movsb
mov
mov
sub
pop
scas
in
stos
hlt
push
xchg
aaa
mov
xchg
lds
sbb
cwtl
sahf
add
scas
js
inc
push
mov
add
fs
and
loope
insl
leave
pop
lahf
push
jge
mov
inc
ficompl
sub
fisubrl
rorl
or
inc
and
xlat
aad
push
sub
sbb
mov
xchg
cmp
add
test
jg
dec
cwtl
vpshlw
in
test
xor
mov
cmp
cltd
imulb
pop
cld
decl
mov
dec
fstl
push
dec
adc
xlat
fiaddl
out
test
aaa
test
and
mov
mov
test
sub
add
jecxz
xor
nop
cmp
pop
ret
cmpb
fistl
mov
lods
pop
popa
shll
push
and
fcoms
int3
movsl
outsl
jg
push
inc
push
mov
loopne
cmp
repnz
js
mov
dec
ficoms
loopne
jg
sbb
aas
clc
pop
or
test
inc
outsl
dec
add
leave
and
lock
cld
clc
divb
mov
jecxz
movsb
lods
pusha
mov
int3
jg
aaa
sub
cmp
and
mov
ret
push
mov
jecxz
enter
inc
jne
cmpsb
cs
test
pushf
xchg
inc
push
scas
sbb
dec
add
mov
mov
fsubrl
std
push
jno
test
clc
mov
je
fidivrs
jecxz
sbb
fwait
fisttps
or
and
popa
aaa
aam
jg
lock
add
cltd
addb
and
in
pop
inc
lods
dec
cmp
lods
dec
loope
mov
cld
outsl
cld
sbb
dec
jecxz
cmp
sbb
push
jns
mov
test
icebp
push
or
out
add
pop
ror
push
inc
int3
lods
sbb
xor
or
iret
stos
mov
pop
scas
ret
arpl
and
push
cld
inc
sub
inc
mov
cli
xchg
fcomps
outsl
sub
mov
xchg
and
aam
test
xor
mov
aam
push
push
jno
jmp
mov
jnp
or
call
adc
iret
jns
je
xchg
mov
xor
adc
xchg
mov
inc
inc
or
inc
stos
xor
push
inc
add
aaa
jae
sbb
jbe
insl
fs
mov
sbb
popf
sub
mov
fimull
adc
xchg
adc
mov
icebp
mov
clc
mov
sbb
bound
jp
and
in
or
ja
sub
adc
subb
je
push
sub
adc
mulb
ljmp
fdivs
xor
repz
test
mov
mov
fldt
in
ficoms
inc
push
mov
push
jge
push
cs
call
int3
cmp
icebp
loopne
mov
imul
das
jle
adc
arpl
pop
mov
bound
add
daa
ds
inc
cs
pop
jg
data16
sub
and
std
fsubl
xor
xchg
shlb
incb
or
cltd
pop
mov
mov
rcrb
cmp
dec
aam
pop
dec
pop
loop
mov
scas
mov
outsb
sbb
data16
pop
fcmovu
roll
pop
fwait
add
add
loope
push
popa
adcb
adc
je
jb
sub
adc
pop
das
hlt
pop
mov
jne
rol
enter
das
cld
fbld
popa
sub
hlt
scas
cmp
dec
pop
jno
mov
sbb
das
cli
aaa
test
frstor
mov
ss
jne
insb
xchg
dec
addl
pop
lock
dec
pop
pop
push
dec
inc
mov
dec
lret
sti
xor
inc
mov
mov
cmpsl
stc
mov
xchg
add
repz
cmpb
sub
shr
pop
cld
fbstp
ljmp
lcall
mov
pop
faddl
fdivl
mov
xchg
pushl
jmp
and
xlat
pop
inc
jmp
sbb
push
xlat
jg
mov
pop
xor
jmp
iret
lods
inc
pop
rol
ficoml
xor
das
pop
cmpsb
stos
stos
ficompl
and
in
in
cmp
adc
jge
mov
les
push
sbb
sahf
add
or
jmp
jnp
insb
sbb
in
outsl
or
fs
push
mov
fnstsw
cmp
andl
mov
shrl
lcall
lahf
sbb
mov
xor
push
loop
cmp
aaa
outsb
in
aaa
cli
sub
adcb
push
cmp
pop
jle
cmp
push
mov
fstp
pop
cmp
or
test
out
jno
fbld
or
or
jp
and
mov
cmp
push
fdiv
test
pop
cmp
xor
and
sti
adc
mov
mov
movsl
jg
or
loop
push
inc
mov
inc
fwait
push
insl
in
push
push
xchg
rolb
arpl
sbb
xchg
int
mov
sub
or
and
xchg
shll
dec
mov
lahf
xorl
mov
pop
shrb
inc
scas
pop
sub
mov
ss
jge
test
or
hlt
in
lahf
adc
or
jg
daa
xchg
cmpsb
mov
or
sbb
mov
and
ret
mov
vcvtdq2pd
xor
add
popf
xor
cs
mov
cmp
jmp
rclb
cs
mov
mov
cmp
hlt
cwtl
mov
xlat
popa
repnz
rorl
xchg
flds
aad
fbstp
and
push
sbb
rorl
xchg
das
pop
cmp
xchg
add
out
daa
mov
and
pop
popa
or
jle
inc
xchg
pop
lea
or
adc
sbb
call
push
out
inc
jbe
decl
aas
inc
jno
shll
mov
add
ja
insb
call
out
cmp
sub
lret
or
or
mov
dec
inc
jge
fildl
push
jne
fldenv
push
xor
rcl
sub
fistl
adc
and
and
lock
mov
mov
repnz
xchg
icebp
sbb
mov
outsl
mov
and
and
mov
decl
lds
xor
repz
aaa
jo
pusha
jb
xchg
fistps
adc
push
xchg
fs
mov
addl
sti
cmp
test
in
dec
les
mov
adc
or
pop
test
shll
add
insl
mov
adc
test
cld
sub
lods
dec
aaa
or
sbb
jecxz
cmpl
int
push
fisubrl
lods
or
aad
add
loope
jae
jl
jle
mov
pop
or
and
adc
or
inc
int
icebp
mov
push
fidivs
jne
jge
jae
pop
jle
mov
add
jg
add
cmpsl
pop
pop
clc
jecxz
sbb
pop
lret
inc
ret
pop
mov
xchg
sahf
repz
in
bnd
sti
aas
push
loop
inc
test
xchg
lds
or
jg
jmp
ret
lahf
push
mov
push
adc
sub
and
dec
mov
pop
and
pop
xor
push
aad
dec
mov
sbb
xlat
inc
push
daa
fnstenv
cmp
pop
pop
xor
cs
fcomp
aaa
hlt
sub
out
sbb
out
sarl
mov
xchg
ss
jg
mov
cmp
icebp
cmpsb
aad
pop
jmp
push
jecxz
mov
pop
add
ljmp
sbb
movsl
xlat
imul
fisttpll
add
xchg
pop
inc
inc
mov
call
and
bswap
xchg
adc
xchg
inc
push
scas
rorb
cld
push
lock
push
jno
and
xchg
pop
ljmp
mov
dec
sti
cmp
mov
icebp
js
xor
gs
das
jl
xchg
adc
or
shll
xchg
ret
inc
ljmp
std
xchg
sub
xor
mov
xchg
pop
and
aas
mov
mov
sbb
leave
xor
call
xor
outsl
jge
out
push
es
adcb
jb
nop
loopne,pn
iret
cmpsb
pop
cld
call
cmp
imul
mov
cli
or
or
test
inc
mov
nop
mov
cmp
or
decl
mov
fnsave
add
dec
mov
cld
lret
dec
ds
mov
jo
sbb
pop
mov
dec
adc
jecxz
hlt
xorl
jge
lds
mov
pop
push
pop
rorb
test
lcall
outsl
mov
insl
adc
adc
fwait
js
push
dec
les
dec
out
mov
cwtl
mov
mov
enter
inc
xchg
out
cwtl
push
pop
push
aaa
cmp
dec
jb
mov
inc
mov
stc
je,pt
mov
orb
mov
add
dec
lods
mov
clc
adc
jg
mov
addl
subb
jp
test
adc
pop
fadd
adc
or
pop
je
push
sub
dec
test
inc
lods
pop
adc
cs
ret
hlt
aas
and
or
fildl
dec
shll
push
fistpll
push
daa
adc
daa
inc
sub
xor
mov
and
dec
jg
outsl
insl
cmc
inc
jne
clc
sti
inc
insb
jmp
cmpl
cmp
push
push
pop
mov
push
cmp
cmpsb
call
pop
cld
pop
adc
arpl
adc
jl
inc
or
cltd
inc
and
inc
dec
jmp
clc
dec
mov
mov
out
adc
bound
std
outsl
cld
mov
xchg
mov
pop
mov
int
shrl
jo
mov
das
pop
push
add
pop
pop
jg
int
mov
addr16
push
jne
fsubp
sbb
pop
xchg
dec
shll
mov
mov
mov
test
mov
jno
inc
fists
mov
push
push
add
mov
out
inc
sbb
das
jge
lcall
dec
push
cltd
or
hlt
pop
push
faddp
pop
mov
mov
xchg
lahf
outsl
mov
xor
pop
sbb
les
cs
sbb
or
cmp
and
mov
inc
aam
jo
dec
pop
loopne
sbb
aam
roll
mov
fwait
push
xchg
pop
lcall
icebp
filds
leave
xchg
push
loope
pop
into
dec
xor
push
dec
daa
das
movsl
jg
jge
xchg
xchg
jnp
out
insb
in
sbb
sbb
mov
mov
pop
sub
and
inc
sbb
mov
sub
stc
je
and
jl
sub
fnstsw
subl
pop
stos
mov
jne
xor
jns
mov
andb
pop
sub
fs
scas
cs
mov
and
sbb
mov
mov
mov
mov
mov
jae
lahf
push
xlat
in
insl
mov
mov
mov
ss
in
aad
lcall
or
loop
loope
jbe
cmpb
adc
movsb
xchg
push
inc
mov
push
push
push
outsb
icebp
ret
xchg
es
adc
out
bound
insl
push
sub
hlt
add
pop
mov
pop
clc
into
pop
stc
lret
repnz
push
mov
and
cmp
mov
out
mov
pop
mov
push
mov
jb
add
cmp
movsl
out
dec
stc
xor
pop
xchg
pop
mov
dec
jae
cmpsl
pop
cmp
mov
mov
test
xor
sub
inc
ret
divl
adc
je
cmp
xchg
daa
xlat
jg
test
push
xor
cwtl
push
mov
push
xor
sub
fbstp
pop
fidivrs
dec
aas
les
icebp
push
push
cmpsl
rcr
or
ljmp
pop
and
ljmp
aam
sbb
mulb
sbb
mov
sbb
or
and
pop
popf
push
sub
adc
mov
dec
dec
mov
pusha
int
movsl
repz
decl
stos
in
mov
pop
fisubrl
loop
je
test
insl
sub
call
stos
dec
outsl
clc
incb
pop
sbb
mov
cmovb
jmp
test
loop,pn
int
rcrl
popa
icebp
mulb
repnz
cld
adcb
adc
inc
sub
push
fldl
push
xor
je
fsub
or
xchg
xor
test
or
xorb
sbb
or
xchg
ret
inc
mov
imul
loope
or
flds
jb
fistpll
jo
pop
and
incl
stos
push
and
bound
test
or
into
ficoms
adc
testl
push
imul
xchg
clc
jl
lods
mov
mov
xchg
jle
jae
jbe
push
imul
or
mov
jns
clc
int3
push
xor
bound
inc
ss
cmp
repz
jle
mov
insb
pop
mov
xor
bswap
call
inc
mov
data16
icebp
das
fisttpll
es
push
and
jg
xchg
adc
je
insb
rcr
popa
mov
dec
push
in
push
mov
sub
icebp
pandn
neg
imul
sti
ret
inc
push
les
imul
dec
dec
fiaddl
movsb
jp
fbld
mov
testl
mov
mov
and
fmuls
inc
movsl
push
clc
fwait
adc
adc
cmp
pop
mov
fs
xchg
repz
jg
ret
pop
adcl
mov
shrl
adc
rcl
sub
pop
movsb
add
clc
test
jmp
mov
fldenv
lahf
sbb
pushl
mov
push
out
es
jmp
call
imul
ljmp
mov
daa
push
jg
negl
xchg
enter
aas
popa
icebp
or
int
ljmp
icebp
push
outsl
int3
inc
jbe
sub
mov
repnz
mov
call
mov
lcall
and
addr16
add
pushl
mov
test
in
xchg
sub
jae
xor
jge
cmpsl
cmp
leave
into
loop
idiv
lcall
test
fnstenv
fmuls
mov
mov
jmp
jo
push
xor
jmp
sub
aaa
jb
leave
cmc
cmc
arpl
xor
xor
dec
mov
cli
incl
mov
mov
movsb
sub
adc
stc
in
adc
imul
cld
or
ret
incl
push
pusha
and
loop
cmp
dec
cmp
dec
sbbl
imul
xor
jp
bound
pushl
out
xchg
dec
jl
inc
or
rol
gs
lahf
int
pop
clc
incl
mov
push
jns
xor
lea
js
les
in
stos
fwait
sub
clc
jecxz
loop
pushl
mov
fstpl
ljmp
in
inc
ror
aam
andl
xchg
test
add
jae
movsl
mov
dec
stos
ds
lcall
adc
inc
idivl
dec
jnp
test
xor
shlb
ja
inc
lods
test
mov
pop
cmc
xchg
sbb
xor
hlt
outsb
les
or
popa
popa
pop
aam
fsubrl
decl
push
cmpsb
negl
shl
dec
pop
lret
inc
stc
pop
or
jmp
stos
mov
enter
jbe
out
xor
xchg
sub
int3
fldl
inc
mov
incl
inc
push
insb
iret
cmc
fisubl
and
fsub
dec
aad
or
mov
cli
ljmp
rcr
mov
dec
je
rorl
out
or
jmp
xor
sbb
fdivrl
push
add
loopne
sbb
daa
jb
inc
sbb
push
xchg
call
or
lods
jnp
scas
loop
call
cmpl
repnz
loope
sub
std
fisttpl
loope
fwait
push
mov
mov
mov
or
inc
mov
mov
push
adc
sti
sub
aam
cmp
jmp
push
leave
nop
jne
xchg
int
ss
int
fwait
mov
adc
mov
mov
fsub
into
and
inc
mov
cmpsb
in
add
jbe
dec
bound
outsb
jmp
dec
int3
sub
pop
push
lea
mov
sbb
call
or
sub
jle
pop
adc
jbe
mov
int3
out
push
incl
push
jo
mov
stc
cli
dec
in
lret
aad
lahf
out
xor
cmpsb
sub
call
sbb
push
aas
adc
inc
xchg
jbe
addr16
mov
clc
and
adc
jg
insl
loope
add
in
and
cmp
adcb
jp
je
mov
or
sbb
inc
sub
lods
xor
mov
xchg
lock
mov
xlat
adc
mov
mov
inc
pop
dec
or
jmp
int
insb
jno
sub
leave
or
popf
out
add
scas
stc
xchg
and
out
insb
push
fcos
jg
mov
jecxz
mov
push
dec
mov
and
mov
mov
rcl
xor
mov
icebp
test
jge
and
ficomps
inc
push
inc
dec
in
and
int
mov
adc
in
and
mov
movsb
in
incl
fisttpll
or
push
xchg
scas
jb
loopne
mov
data16
insb
repnz
cld
ljmp
in
int3
mov
push
out
fistpll
jg
js
jmp
jmp
in
or
je
sbb
mov
add
cmc
scas
pop
leave
mov
mov
lcall
dec
and
imul
jmp
pushl
sbb
scas
imul
push
jl
bound
xchg
fistpll
imul
call
push
into
ja
pushf
ret
mov
stos
mov
xchg
imul
dec
inc
mov
decl
jp
or
pusha
sbb
pop
inc
test
cmc
lds
scas
sub
dec
xchg
popl
jg
xchg
pop
add
jp
mov
std
mov
ds
jmp
imul
inc
add
clc
call
jp
push
push
push
dec
dec
jp
rcll
aad
daa
dec
cmp
mov
pushf
jne
and
std
stc
je
rorl
es
out
mov
aad
lcall
imul
push
mov
xor
push
iret
adc
lods
mov
add
jg
dec
cltd
sti
mov
pushf
dec
imul
cmp
mov
jg
fisttps
mov
push
pop
popa
mov
clc
iret
popf
xchg
lods
mov
jge
add
pop
data16
bound
in
das
push
ljmp
xchg
lds
or
int
push
cmpsl
jb
ljmp
mov
pop
std
movsl
pop
adc
inc
not
push
hlt
pop
dec
popf
add
jg
lcall
and
pop
adc
mov
dec
dec
jmp
inc
pop
lcall
ljmp
push
ljmp
sbbl
movsl
jg
dec
mov
cs
pop
enter
fisubs
popa
jmp
or
das
std
pushl
cmc
in
imul
scas
icebp
push
push
out
cli
ficompl
pop
inc
mov
loope
push
xchg
sbb
xor
clc
mov
jg
mov
arpl
sub
mov
jns
mov
pushl
pop
mov
ljmp
mov
adc
push
jmp
mov
dec
xlat
inc
icebp
jae
shrb
stos
jecxz
loope
je
mov
lds
jns
icebp
clc
jbe
cmc
cmpb
pop
inc
outsl
sub
in
cwtl
inc
outsl
mov
and
ret
dec
lahf
push
movl
test
lret
xor
repz
cltd
xor
lcall
cmp
lcall
rcr
sub
jle
or
popf
incl
std
dec
mov
pop
clc
xor
jg
movsl
shl
dec
lcall
mov
mov
cmp
icebp
pop
mov
pushf
imull
mov
ja
aam
stos
sahf
inc
aas
pop
dec
sub
outsl
aaa
jge
test
lods
xchg
leave
test
dec
imul
test
jmp
mov
aad
imul
mov
stos
xor
in
cwtl
sbb
sbb
pop
or
aam
jecxz
dec
mov
pop
mov
mov
lods
xchg
jg
xor
lea
and
outsl
lcall
mov
jge
lcall
decl
adc
ret
bswap
xchg
xor
loop
jb
test
aam
jg
pop
add
sbb
out
jb
int
jno
fidivrl
xchg
mov
inc
xchg
orb
mov
punpckldq
cmp
pop
add
jecxz
pusha
xor
cmc
xor
jp
and
cwtl
int
sub
jg
mov
adc
js
nop
pusha
scas
rcrl
mov
jnp
mov
pushl
lcall
insb
sbb
popa
mov
int3
ljmp
clc
subb
call
jg
loop
fldcw
mov
lock
std
push
xor
movsl
clc
es
or
adc
mov
bound
jo
cs
and
ljmp
je
out
mov
cmp
sbb
mov
adc
pop
xor
lret
jp
push
sub
mov
cmp
js
add
bnd
add
mov
insb
rcll
lcall
rcrl
cmpsb
out
mov
jecxz
mov
cmp
insl
xor
arpl
ljmp
mov
cmp
lea
rolb
fwait
int3
sub
lock
and
adc
sbb
lea
into
pop
mov
jl
pop
xchg
fisubl
shlb
mov
es
or
enter
js
std
add
pusha
cli
movsb
jecxz
push
lock
mov
decl
fistpll
adc
mov
jno
adc
mov
enter
mov
rclb
aaa
leave
cmp
mov
jge
mov
je
mov
in
lea
xchg
out
and
dec
jecxz
hlt
fldenv
dec
scas
outsb
or
mov
ljmp
add
divl
cmpsl
sub
imul
pushf
cmc
jp
mov
js
jmp
inc
jae
repnz
icebp
pop
cmp
xor
xchg
xor
lahf
les
stc
jp
cmp
aam
bound
int
into
jg
outsb
inc
push
aam
repnz
lcall
mov
and
mov
lock
sbb
outsl
push
mov
adc
sbb
ljmp
add
out
stos
pop
sbb
dec
outsl
hlt
or
cltd
or
fiaddl
jb
push
jbe
ss
in
or
adc
jo
sbb
dec
cwtl
or
rclb
mov
imul
pushf
xchg
in
mov
test
jno
push
push
incl
or
in
jbe
fsubr
mov
and
xor
xor
stos
sarb
mov
mov
pop
sbb
in
mov
sahf
adc
call
sub
pop
sbb
fdiv
insb
dec
inc
loop
xor
mov
loop
mov
adc
pushl
cmp
jmp
pop
jle
cwtl
jmp
and
fstpl
push
xchg
xorb
xchg
std
lcall
add
xchg
inc
clc
pop
push
push
xchg
jno
mov
mov
mov
xchg
dec
xor
out
mov
fdiv
aaa
and
pop
cli
decl
push
mov
push
dec
jp
shrl
sub
mov
xor
std
cmp
sarb
cmp
movb
or
lea
sub
sbb
fstpt
sub
mov
cmp
loope
inc
push
shlb
repz
loop
scas
movsb
rcrb
push
adc
mov
mov
sbb
jg
mov
sub
popa
adc
and
mov
cltd
mov
mov
inc
enter
mov
cmp
cli
sbbl
pop
test
aad
leave
lea
fidivrs
lret
scas
pop
jecxz
push
orl
sbb
xchg
push
pushl
call
cmp
lcall
cmpb
lahf
xor
push
incl
out
out
dec
fisubl
iret
xchg
out
pop
pushf
dec
dec
xor
add
xor
insb
jg
imul
dec
fcompl
and
xchg
cmpsl
or
scas
in
leave
inc
ret
xorl
test
jg
pusha
imulb
xchg
push
jecxz
mov
cli
scas
mov
push
insl
mov
popa
mov
cmp
sub
pushl
es
fisubrs
pop
div
xchg
cmp
dec
push
sahf
incl
negb
sbb
dec
inc
out
jb
ljmp
incl
cmpsl
out
xchg
movsl
mov
sbb
and
bound
push
movsl
ja
sub
inc
clc
pop
sub
dec
add
cmp
das
adc
loope
cli
aad
jns
sub
or
xor
decl
cld
mov
cmp
test
adc
xchg
jae
pop
push
inc
dec
in
lock
jle
cwtl
arpl
hlt
ljmp
out
sti
cwtl
lcall
call
mov
mov
icebp
sub
ljmp
outsl
shl
jo
incl
shr
aaa
fwait
ja
jge
dec
and
ljmp
popf
jl
outsl
cld
jmp
int3
lods
imul
rcl
loopne
dec
xchg
mov
addr16
jmp
xor
mov
test
lods
push
jp
incl
jg
xchg
cmp
pop
jb
mov
sbb
sub
or
fnstenv
mov
cmp
fisttpll
mov
lret
xchg
jb
xor
loope
call
cld
rcrl
mov
mov
jb
sbb
jg
jl
bound
int3
iret
lret
sahf
pusha
jg
fcmovbe
insb
add
das
ret
push
decl
loop
xchg
push
ret
cmpsb
pop
jmp
std
ret
mov
sar
ljmp
sahf
dec
scas
adc
lods
out
divl
jae
sbb
sbb
das
adc
jb
mov
ret
xor
xlat
sbb
mov
fcompl
in
cmp
mov
aas
repz
fildll
sbb
sbb
addr16
xchg
dec
das
stos
negb
jl
inc
mov
inc
mov
inc
sbb
dec
ret
mov
ret
test
mov
ljmp
addr16
xchg
addr16
xchg
out
push
clc
cmp
inc
mov
daa
das
pop
ret
add
cli
jle
add
popa
sbb
sub
fstpt
mov
pop
xchg
ja
sbb
call
in
imul
sbb
lock
cmc
cmp
xor
mov
data16
push
cmp
mov
insl
and
fldt
sub
pop
push
pop
jmp
pop
push
stos
add
cld
pushl
cli
inc
mov
in
aas
pop
lret
lret
out
pop
loop
dec
push
movsl
dec
pop
pushf
mov
loop
call
jae
cmp
fidivrl
jle
ret
stos
pop
outsb
or
fldenv
or
or
movsl
jnp
arpl
push
ljmp
ss
ret
movsb
jo
pop
outsl
movsb
jnp
cld
jo
lcall
std
adc
inc
jo
xor
mov
mov
cmc
sub
jle
decl
add
test
mov
sbb
ljmp
addl
cmp
jo
inc
xor
mov
mov
inc
cmp
or
call
icebp
sti
push
scas
push
es
pop
cmp
hlt
call
and
and
leave
repz
sub
mov
mov
ljmp
pop
cld
xor
outsb
fcmovbe
test
push
dec
std
fistpl
shlb
lret
call
mov
lods
adc
jne
pop
dec
pop
dec
and
scas
xchg
cmpsl
dec
xchg
dec
lcall
adc
inc
inc
mov
mov
adc
sub
leave
xchg
into
rcll
mov
nop
sbb
hlt
sub
cld
and
pop
push
or
sbb
loope
jmp
sti
aam
aas
xacquire
mov
in
ljmp
sbbb
mov
scas
dec
xchg
cld
sahf
imul
mov
aam
in
ljmp
ss
enter
push
cmpsb
test
jo
push
das
std
mov
movsb
call
and
std
and
pop
sbb
decl
sub
mov
add
cmp
bound
sbb
leave
push
mov
in
mov
pop
fisttpll
dec
test
or
jg
into
or
add
push
mov
sbb
fisubl
pop
aas
add
mov
pop
adc
das
std
fisttps
pop
sub
or
fistpl
or
inc
jg
jmp
inc
in
aaa
or
test
lea
mov
loopne
pop
add
sbb
mov
cmpsb
or
sbb
incl
pushl
notl
or
inc
mov
scas
mov
dec
cli
push
arpl
pop
cmp
lds
adc
int
add
xchg
pop
push
mov
lcall
decl
cmp
call
push
fildll
test
dec
xor
scas
aam
xor
fisubrs
jg
orl
sbb
lea
and
inc
decl
push
decl
loope
stos
push
repnz
and
adc
pushl
pop
fs
aad
adc
sahf
xor
data16
test
pushf
loope
js
add
sub
pusha
hlt
mov
xor
loope
push
xor
mov
or
sub
jle
mov
sbb
jle
sbb
adc
mov
lock
inc
sti
xor
pop
insl
xchg
mov
xchg
sbb
jmp
rcrl
xorb
jle
adc
mov
insb
and
pop
mov
mov
sub
jne
jg
xor
loop
add
jle
mov
repz
cli
lcall
cmp
imul
hlt
das
cld
jg
mov
hlt
push
push
pop
lcall
imul
xchg
xor
mov
call
pop
inc
outsl
mov
sbb
dec
or
cs
jb
or
arpl
fsts
sub
cmpsl
inc
sbb
jmpw
jmp
push
mov
pop
in
mov
outsl
ret
or
jb
fldt
in
or
jmp
push
inc
cmp
ja
or
into
adc
adc
decl
xchg
inc
mov
fstpl
inc
daa
popa
jnp
sbb
push
call
andb
sbb
testb
or
bound
mov
sar
push
push
rolb
insb
insl
mov
pop
rorb
mov
inc
pushf
cs
dec
incl
xchg
xchg
jno
mov
lods
mov
sub
popa
or
in
in
push
adc
fwait
mov
adc
xchg
push
adc
fcos
decl
sahf
inc
cmp
popa
sbb
lret
test
insb
mov
insb
sbb
sbb
mov
mov
fcomp
pop
dec
loope
push
out
push
out
loopne
fistl
pop
mov
nop
inc
push
inc
daa
adc
sub
push
sbb
lcall
dec
aad
shlb
outsb
lods
cmp
jae
xor
or
nop
movsl
sar
ljmp
ljmp
or
mov
int3
jne
lret
test
arpl
lcall
sub
inc
loopne
adc
xchg
sbb
xchg
inc
int3
sar
mov
inc
cli
jmp
sub
arpl
lcall
mov
xchg
add
sub
rorl
ja
jle
mov
call
xchg
add
rol
mov
jg
scas
rep
popf
push
cli
dec
je
sahf
mov
fwait
in
test
cltd
dec
fadds
test
xchg
xchg
push
jge
add
push
or
push
ficompl
push
outsl
mov
xor
push
fidivl
addr16
mov
cmp
adc
mov
sub
inc
daa
jmp
es
jl
mov
fmull
sbb
pushf
xchg
mov
clc
fistpl
or
mov
js
dec
jbe
inc
cmp
jg
pop
dec
xchg
popf
repz
jle
aaa
fucomi
lret
int3
push
lods
out
inc
inc
mov
sar
ljmp
and
stc
lods
cld
test
push
cmpsb
add
sbb
arpl
mov
insl
xor
jp
decl
inc
gs
andb
mov
mov
leave
data16
call
arpl
jle
fwait
repnz
das
xchg
cmp
inc
adc
push
fistpl
mov
ret
xor
mov
or
in
jmp
jl
cli
ljmp
fsts
out
outsl
inc
ljmp
xlat
ret
cmp
or
mov
popf
pop
push
cld
mov
pop
sti
push
fidivrs
xchg
dec
inc
mov
call
cli
mov
outsl
mov
out
popa
ficompl
xchg
arpl
ret
filds
mov
mov
in
pop
stos
aam
mov
dec
stos
test
mov
push
jp
lock
scas
jg
call
in
jmp
xchg
cmpsl
mov
pop
xchg
sub
cltd
jne
jp
add
ds
push
outsb
out
sub
xchg
cmp
xlat
stos
arpl
les
fcomps
popf
xor
or
jbe
js
ret
jge
pop
and
jbe
or
out
mov
lods
stc
dec
daa
lods
in
decl
xchg
pop
inc
lahf
loope
dec
xchg
sbb
js
test
das
hlt
cmp
xor
movsb
sub
and
das
lock
int3
and
and
rolb
mov
int
jecxz
cli
inc
pop
insl
sti
jmp
push
pop
pushl
and
adc
push
call
js
sbb
enter
mov
pop
push
jmp
jmp
addr16
adc
mov
jmp
or
pop
cmpsb
jg
decl
sub
loopne
and
mov
cmp
jae
fldt
call
dec
fistl
imul
xlat
iret
ljmpw
cld
lcall
imulb
jecxz
mov
ret
pop
aas
jns
mov
mov
jmp
pop
int3
jmp
cs
in
add
xor
mov
loop
es
or
or
xchg
push
xchg
call
std
mov
inc
xchg
sub
jo
outsb
push
push
popf
out
push
adc
iret
insb
jl
stc
aas
aaa
mov
nop
aam
dec
imul
mov
inc
sbb
jmp
dec
mov
je
jp
aaa
jbe
dec
mov
jb
rorl
or
or
adc
notb
jg
lods
js
mov
cmp
sub
sub
stos
dec
test
cmp
decl
std
mov
push
cmc
dec
mov
cmp
sub
roll
sarb
je
aaa
popl
mov
cmpsl
and
and
ljmp
jbe
xor
push
mov
mov
xor
cmp
jl
test
sbb
mov
xchg
cld
lods
pop
bswap
or
jo
or
xlat
subl
and
inc
incl
in
xlat
bound
or
push
jp
ret
pop
add
pop
mov
pusha
pop
jbe
adc
pop
dec
push
fildl
jg
in
sbb
out
data16
pop
mov
pop
loopne
incl
inc
pop
or
clc
aas
push
sub
stos
ds
rorl
popa
add
call
pop
sbb
adc
flds
jae
fildl
inc
xchg
roll
call
jbe
out
fwait
addr16
lds
cmp
push
or
lods
push
pop
insl
sub
out
push
stc
mov
xchg
add
push
out
cmp
cwtl
pop
out
xchg
mov
pop
xor
lcall
out
pop
xchg
loopne
sbb
push
in
pop
sbb
js
adcb
ljmp
test
sub
push
and
mov
incb
push
sub
sbb
push
jae
fnstsw
or
mov
adc
shlb
shll
pop
xor
aam
jne
sbbl
jle
daa
add
loop
pushl
shl
lea
jg
jp
pop
out
shl
mov
inc
cmpsl
or
testb
xchg
push
jb
xlat
loopne
ljmp
lret
sub
dec
sub
movsb
cmp
xlat
xor
in
jo
repz
sbb
test
mov
adc
push
in
test
jge
and
inc
test
insb
lock
ds
lods
xor
push
pop
cmp
out
incl
fildll
data16
push
lahf
arpl
jns
shr
xchg
pusha
mov
in
jp
scas
sub
call
dec
push
cltd
xor
mov
pusha
shll
inc
xor
lea
in
jecxz
imul
or
cmp
mov
sbb
gs
push
jg
xchg
in
cmp
incl
in
and
rcll
sahf
pop
mov
jo
sbb
mov
bound
fs
adc
xchg
inc
lret
adc
ds
inc
dec
les
xchg
ss
dec
rcr
mov
dec
cmpl
xor
adcb
scas
in
stc
iret
sar
call
cli
sbb
pop
pop
inc
sub
push
jle
out
clc
fnstsw
mov
dec
adc
test
and
adc
js
call
test
in
stos
fldenv
repz
xchg
add
mov
inc
cmp
pop
dec
pushl
cli
jmp
scas
cmp
adc
daa
lret
test
pop
sti
ret
icebp
and
cmpsb
lea
xchg
test
sbb
ret
lcall
jnp
mov
jp
in
jp,pt
cmp
xchg
pop
pusha
jecxz
cs
fmull
cmpsb
pop
int3
popf
nop
add
cmp
incl
insb
fistps
xor
ja
sar
shlb
outsl
push
decb
shlb
and
sbb
in
outsl
popf
fistpll
imulb
cs
pop
cld
dec
adc
sbb
test
mov
or
call
out
inc
dec
rcrl
inc
in
cmp
jle
adc
shll
loopne
adc
dec
outsb
bound
jbe
std
pop
dec
mov
sbb
fdivr
sbb
decl
fdiv
and
mov
push
inc
mov
les
jbe
mov
or
jmp
mulb
xchg
push
pop
out
push
js
pop
call
bound
push
adc
testb
cmp
inc
sub
sub
cmc
cmp
xchg
loope
or
lods
fdivs
inc
outsb
xor
mov
xchg
jmp
hlt
decl
xchg
fsts
pop
rcr
fidivrs
add
xor
mov
and
jb
lret
in
bound
addr16
push
xchg
push
pop
sub
push
mov
dec
and
das
out
cmp
sbbb
xchg
cli
incl
xor
in
cmpsl
shll
stos
or
cmc
shlb
pushl
decb
sub
lods
add
xor
clc
call
in
call
test
jo
sub
lods
lcall
add
test
mov
cwtl
lds
cmpl
mov
mov
fcomip
cld
xchg
data16
add
mov
cmp
in
dec
add
addb
mov
jne
sub
lcall
divl
lahf
sub
sbb
push
js
and
call
add
roll
jne
xchg
fbstp
add
or
or
cmp
call
xor
push
mov
jmp
outsb
nop
xchg
icebp
cmp
or
lcall
shrl
sbb
fldenv
and
lcall
addr16
in
dec
or
mov
xor
jb
mov
xchg
nop
push
cmpsl
std
jmp
sti
popa
sbb
push
adc
sarl
icebp
fiadds
dec
das
jne
add
sub
enter
leave
sbb
jg
dec
or
decl
add
ret
jne
jmp
fbld
fldcw
in
add
sbb
clc
aaa
shlb
enter
dec
or
lods
xor
clc
nop
stos
fnsave
popf
and
ret
adc
push
repnz
mov
scas
ljmp
cmpsb
fists
push
jmp
or
int
fnstsw
jnp
push
lret
sbb
pop
or
fwait
es
adc
nop
and
ljmp
push
jo
fildl
out
adc
mov
sbb
sub
inc
jg
inc
xorb
out
lods
cmp
scas
sahf
clc
cs
or
call
push
cs
fmull
add
pop
mov
fidivrl
jb
ret
push
sar
ljmp
movsb
push
ja
jo
add
out
adc
xor
lcall
jae
adc
mov
xchg
jne
hlt
sub
mov
inc
adc
div
sub
test
jmp
ja
out
xchg
or
dec
add
in
lcall
ljmp
out
outsb
push
add
inc
in
out
int3
jnp
aad
mov
dec
loopne
out
test
rol
mov
sub
shlb
ljmp
test
mov
mov
dec
inc
jno
cmp
das
lods
pop
imul
fwait
lcall
and
scas
and
ljmp
insb
loope
mov
cmc
push
jno
leave
fisubl
aaa
aad
fwait
sub
push
pushl
push
cmp
mov
test
push
jmp
iret
mov
sub
outsb
and
adc
push
icebp
dec
cmc
mov
aam
sbb
out
decl
std
sti
sbb
shl
iret
inc
fwait
loope
jle
mov
insb
sub
in
pop
dec
jb
loopne
xchg
shl
jmp
cli
lcall
scas
je
fdivrp
bnd
or
loopne
and
lock
pushl
mov
shlb
loop
mov
leave
mov
jbe
roll
jg
xchg
in
pop
cmpsl
lret
jne
movsb
test
in
xchg
mov
enter
movsl
pop
mov
jmp
fidivrs
pop
test
arpl
decl
or
mov
xchg
sti
push
scas
xchg
fs
in
out
push
out
aaa
mov
outsb
lcall
insl
cmp
pop
push
adc
jle
leave
cmp
and
lock
pushl
loop
negl
loop
mov
mov
adc
and
or
lock
mov
es
gs
xor
jns
push
mov
jmp
test
mov
cmc
mov
enter
lods
fisubrs
or
xchg
push
in
je
push
scas
loope
pop
loop
lcall
enter
scas
inc
xchg
or
inc
push
push
icebp
mov
jg
test
sub
xor
popf
sub
push
call
outsl
dec
mov
or
cltd
clc
push
pop
cli
rcrb
ljmp
imul
stos
sbbl
sbb
hlt
xchg
daa
test
dec
call
lahf
pop
cli
pushl
cli
dec
sub
mov
xchg
ret
sbb
int3
ret
lcall
fistps
and
inc
ret
sbb
stc
inc
lock
and
jecxz
push
jg
test
mov
push
loope
mov
dec
loop
sbb
jb
lds
incl
insb
and
test
mov
repnz
lea
pop
pop
jno
mov
loop
movsb
push
sbb
lahf
pop
mov
or
mov
icebp
cld
inc
mov
add
std
lret
into
jnp
and
xor
pop
shrl
inc
decl
push
cmc
xor
adc
ret
in
jle
mov
gs
sub
divb
subl
add
or
jo
jns
vmwrite
fsubl
or
ret
shll
adc
jl
add
xor
loope
jae
cld
mov
xchg
cltd
sbb
ljmp
aad
xor
push
orl
scas
popa
popf
testl
daa
orl
mov
jecxz
cmc
outsl
xchg
fistpll
je
cmpsl
lods
push
aam
jns
iret
fidivl
mov
lcall
dec
sbb
ret
cmp
adc
mov
mov
clc
mov
sbb
rcrl
dec
cmpsb
push
mov
or
iret
imul
gs
ljmp
std
or
fcomps
pop
adc
divb
or
stos
pushl
and
add
clc
scas
mov
or
jl
mov
mov
call
inc
jl
push
movsb
cmpsb
movsl
std
ss
fistpll
cmp
mov
in
or
icebp
bnd
loope
aas
and
loopne
sub
sar
inc
shl
in
outsl
les
shlb
cmp
push
mov
int
dec
jecxz
lcall
mov
and
mov
std
push
push
pop
test
xor
int3
scas
sahf
in
scas
mov
incl
mov
mov
mov
rclb
lcall
or
jo
mov
jno
fbld
lods
sbb
aam
js
xor
loopne
push
test
add
dec
xor
ljmp
mov
cmp
imul
jo
xor
decl
fistpll
lds
sub
popa
xor
cmc
push
out
jmp
insb
pop
cld
pop
push
aaa
loop
xchg
jl
test
or
sbb
cmp
mov
ud0
push
xchg
inc
sbb
dec
mov
gs
jl
inc
popf
in
dec
stc
test
sbb
aaa
pushl
iret
push
mov
fsubrl
inc
lret
add
ds
sub
lcall
stos
push
pop
cmpsl
pop
push
xor
cmpsl
jo
jb
arpl
rolb
lcall
xchg
mov
push
clc
dec
cmpsl
cmp
inc
mov
shl
sub
pusha
xor
jg
call
std
aaa
mov
xchg
out
bound
call
add
repz
incl
cld
push
xor
sbb
or
lret
mov
mov
int3
or
punpckhwd
test
mov
ss
adc
loope
xchg
dec
push
mov
jmp
cmc
mov
lods
pop
test
loope
pop
gs
movsl
cs
in
lods
xchg
pop
int3
out
mov
lds
pop
push
fs
lahf
stos
jecxz
and
cmp
adc
mov
aaa
mov
inc
jbe
sarl
js
inc
push
test
mov
decl
jno
mov
mov
incl
stos
lret
adc
hlt
xor
jns
dec
sbb
mov
ret
pop
ficompl
mov
je
shl
testl
std
lcall
ret
hlt
pushl
push
pusha
and
xchg
sub
pop
mov
das
cmc
decl
hlt
sbb
pop
int
xchg
mov
sbb
ljmp
xchg
fildll
fwait
jg
and
mov
aam
dec
imul
shrb
lea
pop
js
out
or
sub
pusha
jecxz
cmpsl
test
fmull
icebp
test
push
incl
mov
dec
clc
push
ljmp
xor
sarl
lock
pop
lcall
or
xchg
cltd
jmp
loop
cmp
and
imul
mov
and
mov
popf
jle
mov
shr
xor
sub
adc
sbb
fs
stos
add
das
call
fdivrp
call
call
mov
and
cli
or
mov
pandn
push
or
imul
lds
lods
mov
xchg
push
jg
pop
clc
pop
shlb
fcoml
push
adc
ret
or
or
decl
pop
xchg
mov
ds
xor
cltd
cmp
dec
clc
mov
decb
gs
sub
and
into
mov
xlat
xchg
in
sub
mov
ljmp
imul
sbb
cwtl
push
cmp
subb
aam
xchg
xor
fistpl
dec
pop
jmp
mov
scas
test
sbb
mov
pop
ljmp
jno
xor
ljmp
call
std
sbb
scas
repnz
inc
and
loopne
je
pop
daa
idiv
push
mov
les
mov
hlt
mov
ljmp
xchg
lods
xor
and
jge
mov
sub
in
das
jecxz
xchg
stc
xchg
xor
sarl
repnz
cmpsl
adc
js
xor
pop
lods
dec
xor
dec
and
mov
imull
ljmp
out
mov
mov
xorl
jnp
inc
and
jg
push
or
in
leave
sbb
rcl
dec
sub
adc
enter
mov
ljmp
std
ds
sarb
aad
pop
mov
icebp
jo
test
es
mov
mov
adc
stos
jae
push
ljmp
add
add
mov
decl
test
dec
jnp
nop
xlat
jo
std
mov
adc
jno
push
push
mov
inc
fsubl
enter
push
lea
mov
push
or
mov
insl
adcb
xchg
fucomp
dec
xor
gs
clc
cvtps2pi
test
add
jmp
inc
test
shl
xor
loop
es
cmpsb
mov
mov
popa
mov
jnp
pusha
push
fldcw
outsl
hlt
and
test
inc
ss
call
mov
adc
pop
nop
sub
int3
jmp
adcl
notb
inc
jae
das
enter
decl
stos
and
test
js
fisttpl
int3
fsubr
out
add
shlb
sahf
fwait
jecxz
pop
mov
push
call
nop
lcall
sahf
movsl
stos
cmpsl
jbe
xchg
pop
insl
lock
mov
aam
ret
cmpsb
popf
ret
mov
mov
add
lcall
xor
or
mov
inc
add
ror
stos
sbbb
inc
decl
leave
test
dec
jecxz
lahf
jbe
lret
mov
pop
cld
mov
bound
mov
sub
cmc
out
xchg
or
sahf
pop
es
out
std
mov
sahf
dec
int
lcall
inc
popa
add
cmp
int
dec
lcall
test
call
fisttps
pop
pusha
pushl
pop
sbb
iret
lds
les
and
jge
add
test
test
jp
jo
jne
or
movsb
dec
vsqrtps
add
mov
sti
jns
fs
add
loope
mov
add
imul
decl
xchg
xchg
push
fldl
cmp
cmc
pop
aaa
xlat
stos
jo
cmp
das
cmc
in
pop
jno
repnz
xor
imul
xor
ljmp
dec
popf
jp
xchg
lods
sti
jo
sti
jp
or
out
cmp
stc
push
lods
call
pop
jbe
dec
adc
movsb
add
xchg
dec
adc
and
jmp
xchg
cmp
rcll
inc
sbb
add
push
in
scas
fs
adc
mov
xchg
int
shrl
push
ljmp
sbb
push
sub
int
arpl
cmpsl
mov
inc
jno
sbb
ljmp
xchg
xchg
scas
leave
pop
repnz
mov
sub
ficomps
je
push
lahf
mov
mov
mov
dec
jnp
aas
mov
mov
adc
lcall
mov
cmpsl
xlat
into
aam
inc
sbb
outsb
cld
int
cli
xlat
or
mov
jo
mov
test
insl
loope
les
or
ret
ficomps
cltd
mov
lds
dec
lea
ja
mov
xor
push
sbb
je
adc
lea
cltd
pop
movsb
clc
cmp
mov
inc
cmp
mov
int
sub
popa
mov
cli
out
cmp
jecxz
dec
jmp
lret
add
pusha
cmp
mov
mov
ret
je
out
daa
jmp
ret
xor
mov
js
push
jo
insb
sbb
pusha
dec
dec
sub
cmp
js
jae
in
into
imul
xchg
dec
test
cld
jg
push
hlt
lcall
loop
xlat
rep
jne
jmp
sub
push
insb
das
pop
xchg
outsb
pushl
and
xchg
fucomip
ret
sbb
cmp
je
xor
push
push
xchg
jmp
mov
cmc
push
call
insb
sbb
ljmp
cli
mov
jns
in
mov
push
dec
into
insb
jle
xor
sahf
and
pushl
or
jecxz
or
popf
shl
js
xor
sbb
ret
movsb
adc
fbstp
insb
xchg
fdivs
xor
loope
jb
or
shll
pushl
jmp
stc
cmc
iret
int
movsl
loop
mov
mov
cld
sub
inc
lock
dec
and
sbb
cmp
fisttpl
mov
aad
dec
sub
repz
mov
inc
sar
loope
jns
jge
cmp
decl
inc
shlb
cwtl
pop
sbb
mov
cwtl
rcr
loopne
decl
push
adc
in
jecxz
cmpsb
cmp
fstpt
pop
mov
jno
mulb
ret
incl
repnz
stc
push
fcoms
rorb
dec
ss
call
divl
cwtd
mov
lds
lret
loopne
sbb
test
sbb
add
jge
adc
xchg
dec
jecxz
icebp
cmp
in
pop
xorl
inc
push
ljmp
jp
andb
mov
call
rorl
aad
fnstsw
dec
push
mov
outsl
data16
stos
jnp
xchg
inc
cmpsb
mov
outsl
je
decl
jmp
jmp
or
sub
bnd
push
mov
shlb
pop
loope
adc
aad
dec
or
rcll
dec
sub
lods
decb
int
scas
ret
arpl
push
cmp
pop
lcall
std
sub
stc
pop
cwtl
lods
mov
inc
movsb
jmp
xchg
or
cmp
ljmp
lcall
ror
stos
aam
adc
or
pushf
enter
jge
jg
fcoml
jecxz
dec
sbb
adc
ret
test
mov
outsl
and
mov
lcall
jns
jbe
add
dec
es
jle
icebp
push
mov
adc
ret
xchg
cmp
js
call
loopne
stos
push
adc
inc
push
add
sbb
in
cmp
mov
shrb
daa
push
loop
adc
jg
aam
adc
lea
add
testl
jg
cld
je
pop
loop
ds
pop
fistpl
pop
lcall
push
sub
shll
clc
aaa
dec
cmc
pop
cmp
shll
out
inc
sbb
xor
call
out
stos
mov
mov
insl
sub
pop
sbb
sar
dec
xchg
das
arpl
pop
xchg
or
aam
in
lods
aaa
iret
sub
inc
fwait
call
pop
mov
filds
pop
and
sahf
and
or
call
inc
arpl
cwtl
sbb
aaa
orb
jl
add
cmp
jmp
push
fmuls
sbb
jne
out
subl
cmp
ljmp
xor
movl
pop
stos
ljmp
mov
in
jle
pop
ljmp
sub
pop
mov
data16
in
sti
pushl
push
ljmp
les
push
mov
aas
test
xor
xor
pushf
sub
lods
pushl
xor
xor
push
sub
les
test
hlt
mov
mov
push
fs
mov
add
dec
cmp
jp
in
jbe
jge
add
xchg
dec
pop
hlt
sbb
adc
dec
mov
push
xor
ljmp
lock
sub
and
sbb
xlat
mov
lret
xchg
dec
jecxz
lods
mov
xor
subl
adc
jg
inc
xchg
icebp
sbb
lds
ret
dec
sahf
push
mov
jo
mov
stos
mov
dec
ret
subb
jb
mov
adc
mov
mov
ds
leave
out
cmp
add
jp
shl
cmp
stos
sub
lret
fdivs
in
sbb
ss
ljmp
mov
mov
out
mov
mov
cmpsl
shr
pop
call
pushl
xor
push
xchg
cmp
dec
mov
pop
mov
jg
adc
out
inc
pop
out
push
mov
lahf
pop
mov
rclb
addr16
jmp
nop
sbb
xor
mov
int
add
imul
mov
inc
add
test
push
pushf
je
adc
jmp
out
das
cld
decl
cmp
cmpsl
push
arpl
or
vmovlps
inc
pop
fcoml
push
mov
ret
decl
sbb
call
jp
mov
cld
push
lods
inc
in
fldcw
ljmp
add
es
dec
jecxz
xorb
xchg
or
pop
xchg
and
push
hlt
cmpsl
dec
mov
ja
iret
fdivr
sarl
lcall
xchg
stc
lock
xchg
data16
jmp
pop
dec
cs
sub
std
lds
clc
pushl
xorb
ja
loope
push
and
adc
ret
test
xchg
movsl
sbb
outsl
fstpt
jge
sub
cmp
decl
iret
out
mov
jl
int3
jo
ret
enter
pop
test
imul
leave
dec
adc
pop
sbb
decb
arpl
mov
sbb
cltd
sbb
add
push
lahf
roll
xlat
xor
stos
jne
shrb
jmp
enter
lds
push
xor
call
pop
jl
cmpsb
rcrl
leave
repnz
int3
pop
into
and
sub
xchg
jns
icebp
mov
call
mov
adc
sahf
les
insl
icebp
dec
pop
ljmp
jle
dec
arpl
xchg
movsl
cmp
andl
add
jg
aaa
or
xor
prefetchw
or
mov
inc
jg
stos
xor
inc
sbb
out
adc
mov
cmc
or
cs
mov
pushl
inc
leave
adc
dec
mov
sub
or
adc
xchg
pop
fs
ficoms
xorl
add
filds
loopne
aad
and
and
inc
lock
in
add
mov
cmp
xchg
cltd
dec
cmp
sub
sub
mov
cli
and
ss
call
add
leave
sub
mov
scas
repz
pop
mov
leave
add
or
arpl
mov
inc
call
call
add
adc
je
mov
sbb
jg
add
and
or
mov
mov
test
jp
sbb
mov
sbb
bound
gs
sbb
adc
or
std
ljmp
fistps
or
mov
push
cmp
or
pop
sub
add
call
fstpl
and
insl
pop
add
jbe
add
mov
or
imul
faddp
aad
ljmp
inc
in
das
sub
inc
sbb
dec
mov
ljmp
inc
clc
je
es
fnstsw
add
outsl
das
push
pop
add
mov
dec
ds
or
pop
cmp
xor
sub
sahf
push
jle
add
ja
les
xor
xchg
ret
enter
or
xchg
or
pop
jno
sbb
jns
loopne
lahf
outsb
jp
add
mov
jecxz
mov
stc
xchg
loope
cltd
mov
mov
gs
lret
outsb
add
add
mov
add
inc
mov
jmp
rcr
adc
das
jns
xchg
mov
das
jo
pop
or
xlat
add
sub
cmp
mov
push
push
pop
push
mov
xchg
or
lcall
jbe
adc
sbb
ljmp
scas
data16
push
ljmp
nop
subb
test
ret
rclb
loop
push
push
cmp
sub
enter
and
and
or
jne
add
outsl
jmp
xchg
movsb
int
lods
jae
cs
dec
pop
popa
lcall
scas
dec
jns
adcb
pop
mov
ljmp
add
and
add
push
lcall
or
pushf
add
jg
sub
cli
xchg
add
test
js
lock
xchg
mov
rorb
sbb
lea
jmp
or
daa
ret
jle
inc
pop
cli
lods
push
mov
push
pop
add
imul
out
and
and
push
ja
lcall
jae
push
lea
and
mov
and
sti
insl
daa
or
xor
fildll
notb
rcll
jl
add
jp
call
jo
fisttps
fsubl
mov
sub
mov
test
xor
adc
mov
sub
cmp
jg
push
popa
outsl
adc
fldl
lret
popf
xchg
cs
je
sbb
add
inc
cmp
idivb
mov
add
jle
mov
inc
inc
adc
shl
jl
mov
je
adc
adc
clc
pop
in
jno
pop
add
cmc
adc
in
mov
jle
pusha
sti
add
rcl
jl
call
xchg
xor
and
adc
call
dec
and
sub
jge
mov
xorb
adc
shll
aaa
aaa
mov
inc
dec
jnp
push
add
pop
nop
dec
call
popa
pop
mov
and
inc
das
fnstsw
dec
mov
outsl
mov
add
push
cli
pop
mov
jecxz
lea
in
aam
daa
add
add
cld
fistpl
cld
adc
sub
iret
scas
add
imul
decl
jnp
jmp
dec
xchg
shlb
shlb
xchg
adc
mov
std
push
inc
lods
fcmovb
pop
sbbb
mov
mov
adc
inc
loop
and
xchg
test
mov
ja
adc
mov
jae
push
add
mov
pop
test
pop
xor
hlt
push
mov
mov
pop
sub
clc
fistl
ss
pop
push
sbbb
jb
jle
andb
adc
nop
or
sbb
icebp
push
aam
jg
and
add
stos
pop
std
outsl
mov
and
pop
or
adcb
and
out
push
jae
jmp
pop
orb
sbb
sbb
bound
test
mov
and
add
test
lret
push
or
arpl
xchg
lcall
mov
inc
sub
dec
add
aas
xchg
int3
add
mov
sti
cmp
cmc
mov
mov
jmp
ja
xor
aad
jbe
xchg
fimuls
push
xlat
insb
adc
sub
mov
push
jg
pop
add
mov
push
mov
cmp
or
jg
ja
push
shll
hlt
pop
fs
xor
mov
test
imulb
out
ret
xchg
xor
in
pop
push
cmp
fsts
inc
leave
shlb
xchg
ret
push
rcrb
test
sbb
inc
adc
mov
add
aam
lods
lock
xlat
push
cs
jl
je
daa
sbb
adc
sub
pop
jbe
iret
inc
ret
cltd
jno
add
fs
jg
sbb
in
inc
cmc
loopne
mov
or
mov
sub
in
jae
cmp
jns
jbe
pusha
jns
lea
mov
push
sbb
nop
and
pop
loopne
in
ret
xor
pop
sbb
mov
int3
daa
pop
sub
mov
nop
cli
add
xchg
push
lret
cmp
pop
int
imul
shrl
inc
mov
loop
iret
sub
js
xor
aas
or
sub
sub
outsl
mov
jge
in
icebp
add
add
ljmp
ficompl
addr16
push
cmpb
outsb
xchg
jecxz
es
xchg
pop
clc
add
sub
mov
and
jg
jmp
js
cmp
push
test
mov
jne
ss
lret
push
jmp
mov
jmp
lock
adc
mov
ret
sti
sub
test
dec
pop
sbb
xlat
xorl
sub
pop
call
outsb
or
xchg
test
arpl
xor
movsl
inc
mov
cmp
pop
adc
outsl
insl
push
data16
mov
add
mov
adc
jbe
inc
push
add
ljmp
cli
mov
and
push
cmp
and
aam
pop
jle
fadds
or
insl
mov
jmp
lods
std
or
call
outsl
insl
subl
xchg
sbb
add
shll
push
add
cmp
or
add
stos
cmpsl
and
add
xchg
mov
stos
push
ret
pop
mov
rcrl
outsb
sub
push
insb
int
sbb
in
testb
cs
jecxz
int
inc
cmpsb
mov
xor
sub
sbb
sti
sar
pop
pop
mov
sub
in
dec
xchg
out
pop
pop
js
mov
xor
roll
in
jl
or
lds
mov
incl
and
adc
xchg
insb
adc
movsl
xorb
call
insl
mov
fwait
and
sub
ss
xchg
fidivl
cmp
mov
mov
pusha
fdivs
in
xor
sbb
sbb
loop
sbb
push
test
das
pop
jne
push
mov
sbb
es
inc
adc
sbb
popa
add
xor
addl
add
inc
xor
dec
lret
mov
jbe
lds
out
pusha
negl
jle
mov
aad
ror
dec
outsb
pop
decl
push
lds
push
das
pop
xchg
adc
mov
cmp
andl
dec
scas
dec
stc
cmp
neg
add
dec
add
aam
adc
mov
push
repnz
hlt
outsl
in
mov
mov
fsubl
movsb
es
or
js
arpl
sahf
ljmp
cmc
in
push
xchg
test
sti
scas
jae
mov
cli
add
mov
data16
or
mov
jmp
cwtl
mov
sbb
and
cli
inc
sbb
cmpsl
aam
dec
mov
hlt
testb
sbb
xor
hlt
sbb
or
mov
push
out
lds
jl
jmp
roll
fistps
subb
mov
daa
lods
add
push
jae
mov
inc
adc
or
jo
inc
arpl
je
scas
mov
stos
pushf
push
in
sbb
mov
adc
rorl
push
arpl
or
hlt
xchg
push
ljmp
cs
test
mov
clc
ret
push
jg
test
xor
inc
add
adc
cld
pop
and
gs
lock
lret
inc
shll
ljmp
jle
cmp
movsb
stos
sub
lods
jp
enter
jno
jp
lods
outsb
cli
daa
mov
loope
aaa
xchg
mov
adc
mov
out
outsb
lods
jo
icebp
movb
or
lods
inc
loope
add
xchg
repnz
push
inc
test
aaa
mov
loop
sbb
xchg
mov
adc
sbb
mov
xchg
insb
stos
in
lcall
sub
mov
sub
outsb
xchg
pop
test
mov
js
sbb
in
daa
and
loope
ficompl
jecxz
xor
xchg
or
xor
lret
repz
add
aaa
cmp
cmpsb
ja
sbb
inc
xchg
mov
or
stc
mov
adc
or
mov
orb
out
push
pop
mov
subb
pop
adc
jbe
add
mov
test
aas
push
clc
sub
data16
xchg
ja
pop
inc
jmp
lods
add
inc
movsb
push
mov
shll
ljmp
inc
movsl
or
dec
pop
mov
mov
inc
in
fimuls
notb
jp
and
lods
mov
inc
nop
fistpl
test
sbb
xor
das
arpl
add
das
push
lds
mov
cmp
rorb
sarb
cmp
cmp
mov
addb
pop
cs
pop
push
xor
xchg
push
outsb
xchg
outsl
push
dec
and
sbb
mov
pop
leave
dec
mov
dec
mov
adc
mov
cmpsb
enter
and
outsb
inc
add
aad
sub
aam
xor
ret
mov
sarb
inc
xlat
sub
pop
movsb
pop
jns
test
xor
test
add
and
leave
cmp
xor
mov
inc
push
inc
cs
outsb
or
pop
lds
das
gs
gs
fmuls
pop
cmp
outsb
pop
xchg
outsb
in
or
cld
push
into
and
add
daa
push
stos
inc
xchg
mov
repz
mov
pop
dec
mov
mov
into
fstps
add
sub
in
std
inc
loope
in
mov
jle
adc
mov
clc
mov
add
inc
add
jg
push
popa
xor
cmpb
pop
push
jb
and
outsl
lock
xchg
fisubrs
cld
jno
js
clc
pushf
lret
push
outsl
sahf
movsb
fdivrl
mov
mov
mov
outsl
test
and
pop
sbb
dec
mov
lret
inc
mov
mov
or
imul
pop
pop
imul
xchg
lcall
sbb
or
in
cmp
mov
rcl
sti
mov
mov
mov
and
cmp
pop
cs
jmp
adc
aam
in
xor
cmc
mov
dec
dec
add
stos
sti
popf
in
outsl
loopne
ret
das
outsb
sbb
xor
std
in
fsubs
lods
and
add
xor
ds
or
rcrl
mov
pop
sbb
inc
bound
or
inc
sbb
jg
push
in
orl
xchg
inc
enter
mov
insl
aad
mov
add
cld
je
cmp
out
sbb
cmp
enter
xchg
add
adc
sbb
frstor
dec
pop
xchg
cmp
mov
loope
mov
xchg
fdivrs
jns
push
xlat
xor
jmp
fwait
out
sub
into
mov
aaa
sbb
inc
or
cltd
jnp
rolb
in
sarl
mov
push
mov
sbb
sarl
loope
xchg
or
xor
add
xor
aaa
mov
mov
jmp
aam
mov
jne
jbe
negl
cmp
mov
mov
ja
shlb
or
fcom
aad
test
xchg
mov
fcmovb
sub
cmp
out
fsubrs
icebp
add
cmp
dec
inc
sub
lret
inc
push
push
pop
or
xchg
fbstp
dec
push
add
adc
xor
inc
pop
jecxz
pop
mov
xchg
fld
push
sub
test
fstl
push
add
fadds
sub
push
jbe
push
ret
xor
or
or
in
enter
fistpll
xchg
xchg
add
dec
push
loop
int3
mov
sbb
cmpsl
lods
aaa
mov
data16
sbb
sbb
in
daa
jnp
mov
or
cmp
inc
cmp
lcall
inc
hlt
push
testl
ljmp
hlt
outsl
stos
and
inc
mov
pop
jecxz
nop
push
xchg
cwtl
cli
mov
or
and
into
sbb
add
adc
cmp
jl
pusha
lret
pusha
outsb
icebp
das
mov
mov
or
mov
lods
lahf
add
lds
movsl
pop
imul
xchg
cmp
negb
push
push
push
mov
jmp
decb
and
adc
loope
mov
ret
outsb
inc
stos
add
cs
pop
int3
aad
cmc
loop
add
ja
xchg
mov
mov
cmp
xchg
mov
sub
test
or
adc
ja
lret
dec
adc
ret
rcl
and
test
add
cwtl
xchg
xchg
sti
xchg
adc
add
dec
ljmp
sbb
lock
fwait
scas
mov
add
stc
or
jo
push
mov
popa
imull
and
fidivl
shr
adc
jle
mov
ljmp
push
mov
sbb
sub
pop
mov
xor
sub
cs
shlb
sub
sub
mov
out
xorl
clc
or
lcall
lods
incl
movsb
xchg
je
push
stos
cmp
iret
mov
push
pusha
dec
clc
sarb
and
enter
sub
mov
outsb
icebp
mov
movsb
push
push
adc
test
mov
inc
inc
sub
popa
inc
or
and
jl
jo
ljmp
call
jp
iret
or
jle
rorb
test
loope
push
pop
sbb
dec
clc
adc
sub
mov
flds
in
popf
fcmovnu
mov
pushl
push
or
nop
mov
and
insb
mov
enter
ljmp
addb
daa
fmul
lcall
jg
rorb
rol
cmp
lds
jo
rolb
xor
inc
xor
daa
mov
pop
call
push
bound
add
es
inc
jo
cmp
out
sbb
and
lcall
jle
mov
loope
popa
inc
or
mov
fdivr
lret
cmp
xor
push
jb
adc
sahf
jg
pop
fimull
outsl
jmp
inc
push
mov
pushf
pop
jb
loopne
add
or
xchg
cmp
jp
stos
dec
sub
pop
aam
mov
loopne
scas
insb
aad
adc
jl
adc
add
sub
insb
mov
enter
scas
sbb
fstpt
nop
push
insb
jne
mov
cwtl
cmp
cmpsb
fst
in
mov
clc
movl
dec
push
sub
rcrb
orb
fwait
lret
in
sub
leave
in
inc
mov
in
ret
fsubp
leave
test
lock
sbb
mov
lret
and
dec
fnstcw
xchg
jle
cld
dec
mov
or
das
imul
dec
jb
int
sub
dec
addr16
jg
stos
push
add
dec
or
xchg
cltd
int3
and
pushf
mov
decl
or
mov
daa
jg
fbstp
jmp
and
rcrb
xor
xchg
hlt
pop
call
adc
cmc
std
gs
call
sbb
js
dec
aas
enter
mov
dec
jg
orl
push
mov
mov
mov
dec
or
loope
or
or
jo
push
mov
mov
add
imul
adcb
decl
dec
jmp
add
in
xchg
sbb
add
xchg
gs
js
pop
sbb
daa
pop
xorl
bound
pop
addb
insl
lahf
stos
add
xor
mov
aad
adc
data16
addr16
add
pop
mov
test
mov
cltd
shlb
or
sbb
sub
shl
inc
je
xor
adc
add
js
add
xchg
jae
sarl
inc
jne
push
push
mov
jo
sahf
imul
xor
mov
dec
dec
sbb
jno
jge
insb
outsb
cs
pop
jo
pop
popa
cmc
mov
stos
or
sahf
jl
pusha
mov
loopne
xor
mov
mov
cmp
mov
push
adc
pop
nop
mov
mov
sub
jecxz
push
aad
add
sti
int
repnz
push
in
jp
int
movsl
out
divb
add
cmp
adcb
fdivr
mov
gs
in
adc
mov
sbb
fmuls
popa
outsl
xchg
lds
mov
insl
mov
cmp
jo
das
cld
jmp
sbb
pop
and
or
xor
adc
roll
sub
or
adcl
pop
add
dec
popf
inc
adc
pop
adc
in
inc
add
fwait
add
fldt
mov
pop
sarb
pusha
cmp
clc
ljmp
add
mov
mov
dec
cmp
jmp
add
clc
test
mov
sar
clc
lods
sbb
sub
and
push
push
inc
push
cld
push
add
adc
roll
sti
xchg
push
mov
push
inc
xor
cltd
cmc
lret
pop
iret
lock
gs
mov
clc
loopne
fiaddl
adc
int
xchg
fdivs
and
push
inc
fildl
shl
notb
xchg
push
mov
mov
mov
push
inc
ja
in
cltd
push
fsubs
adc
ja
mov
inc
sbb
adc
mov
imul
mov
xchg
dec
insl
and
jbe
fsubl
lret
mov
dec
jg
shrb
lods
roll
mov
or
rcrl
out
push
aaa
enter
add
lcall
lods
das
std
mov
add
lock
mov
inc
ret
mov
sub
cs
xor
jo
scas
pushf
pop
loopne
xor
or
mov
fsub
cmp
mov
inc
mov
jo
in
dec
mov
dec
jmp
or
inc
adc
cmp
int3
fldl
dec
mov
add
jb
jg
sarl
jb
jle
out
pop
push
add
or
push
mov
jl
adc
mov
xchg
mov
shlb
cmp
ljmp
in
or
or
push
lock
outsb
and
out
aaa
pop
sbb
outsl
in
mov
xor
hlt
fwait
lret
daa
xor
insb
cmp
and
xchg
subb
imul
pop
decb
jo
popa
sti
mov
in
sub
aas
int3
push
jno
dec
clc
mov
mov
push
add
xor
dec
incl
and
sti
lds
mov
sbb
mov
xor
cmpb
mov
mov
pop
mov
add
arpl
sub
ljmp
arpl
lcall
push
fucom
mov
es
outsl
ss
adc
pushf
xor
nop
mov
cltd
lds
pop
aaa
outsb
call
mov
cmp
adc
inc
push
ficoms
adc
push
and
pop
push
and
or
dec
adc
push
xchg
xchg
push
das
sub
inc
pop
test
push
cs
cmp
inc
mov
popf
xor
andb
ret
in
pop
lods
sbb
mov
ljmp
xchg
cmp
stos
repnz
inc
mov
fisubs
push
ja
sbb
inc
dec
or
into
movsl
nop
ret
pop
sbb
xchg
in
inc
inc
stos
fsts
insb
fisubrs
sub
and
das
push
sbb
addr16
rol
pop
incl
ds
adc
push
jne
jg
mov
push
movsl
or
add
cmp
xor
decl
push
mov
jl
stos
jl
inc
stos
pop
shll
idivl
mov
aaa
clc
fldl
mov
sub
and
cmpsb
pop
push
test
pop
ljmp
pop
clc
pop
sbb
jg
gs
jle
fs
ljmp
loopne
xor
fldt
mov
dec
mov
shlb
jno
xchg
jecxz
dec
outsl
lcall
sub
cmp
rorb
orb
mov
out
and
or
test
adc
add
jge
sbb
jg
push
mov
ret
shlb
insl
adc
xchg
in
sbb
popa
aas
data16
push
or
adc
imul
push
xchg
mov
push
mov
push
mov
sub
or
dec
xor
mov
mov
mov
cmp
rcrb
jnp
mov
mov
outsl
lods
xchg
or
or
push
inc
xchg
xchg
inc
shr
inc
cmp
mov
sub
in
icebp
bound
leave
ret
icebp
lcall
adc
lods
jecxz
xchg
pop
pop
xchg
pop
enter
xor
mov
push
fists
xor
add
inc
arpl
or
xor
fisubs
addl
sub
mov
xchg
mov
push
cltd
adcb
add
or
lea
fbstp
fiadds
cmp
sbb
cwtl
inc
fadds
mov
pop
mov
idivl
mov
cmpsl
pop
ljmp
call
out
fnstcw
lahf
pushw
ja
push
insb
fucomi
test
cli
arpl
stos
outsl
dec
cld
push
data16
unpckhps
sbb
popa
mov
loopne
cli
in
inc
sub
in
or
jb
or
mov
jl
imul
xchg
push
mov
popa
sub
push
adc
in
std
es
adc
arpl
call
push
ss
push
int3
jecxz
xchg
dec
ljmp
notl
orl
outsl
push
sbb
sbb
imull
push
adc
jae
xchg
insl
pop
push
cld
adc
out
scas
stc
add
mov
insl
insl
adc
movsl
mov
cli
or
xchg
sbb
xor
sbb
mov
mov
dec
sti
push
fs
mov
xlat
pusha
push
mov
mov
outsl
lock
rolb
scas
mov
sti
or
mov
jge
fwait
leave
scas
popf
movsl
andb
clc
fisttpl
mov
fisttpl
mov
or
sbb
pop
mov
sub
add
inc
sub
rcrb
or
lret
int
in
ret
sbb
jecxz
and
addr16
xor
add
das
ss
lret
pop
mov
or
pushf
std
aaa
pop
shl
sub
add
or
push
leave
lahf
and
jmp
ja
add
pop
lds
mov
pop
sub
mov
mov
dec
rorb
adc
lods
xchg
mov
xchg
mov
dec
stos
inc
add
pushl
sub
bound
inc
mov
sub
lahf
popf
xchg
popl
lret
push
clc
rorb
lcall
out
inc
mov
test
iret
mov
jp
mov
rcrl
test
std
push
jno
push
aaa
fnstsw
lahf
insl
xor
pop
insl
mov
mov
and
pop
ret
adc
xorl
pop
xchg
push
call
pop
xor
popf
loope
out
or
add
lods
sbb
push
push
std
mov
cmpsb
jns
xor
cltd
sbb
push
cli
xor
scas
add
and
sbb
js
in
test
es
dec
or
pop
and
inc
cmp
add
pop
sbb
pusha
adc
adc
fcompl
cs
xor
inc
insl
mov
xor
data16
pop
or
frstor
shlb
pop
sub
dec
pushf
adc
lock
cmp
loope
pop
jp
test
dec
aas
inc
sarl
adc
pop
arpl
sbb
mov
pusha
popa
jnp
nop
ja
adc
xor
mov
sti
test
push
jno
insl
ds
cmpsb
int
sarl
pop
inc
push
in
mov
lock
cmp
cmp
call
cli
adc
mov
add
mov
out
sub
pop
inc
ficoml
jo
fsubr
add
das
nop
test
push
lret
je
add
inc
mov
sbb
jge
cmp
cmp
or
or
push
aaa
das
enter
mov
fs
jmp
mov
addl
pop
mull
or
push
sub
mov
mov
insl
add
push
in
cmp
pop
lods
jb
es
imul
test
push
in
incb
jne,pt
push
pop
cmp
lods
leave
push
lret
lahf
push
inc
lea
in
testb
dec
gs
fists
clc
push
into
sbbl
stc
cmc
sbb
pop
and
mov
adc
xchg
mov
pop
inc
call
and
stos
mov
in
aaa
push
out
and
dec
adc
jb
ret
mov
imul
das
mov
and
mov
add
or
inc
inc
pop
std
lea
and
loopne
jp
or
scas
mov
in
jo
xchg
das
jnp
stos
mov
push
pop
leave
test
clc
mov
push
cmc
sub
and
push
daa
dec
cwtl
mov
push
dec
push
shll
sub
clc
sbb
mov
dec
cmc
jns
leave
jg
pop
mov
nop
push
add
xor
ja
aad
sbb
push
dec
je
sub
mov
xor
daa
and
sbb
aaa
push
js
cmp
add
lock
or
fwait
sub
mov
testl
jl
mov
scas
sbb
and
mov
dec
cli
or
test
scas
mov
lea
int
push
shr
adc
cmp
mov
sub
and
pop
notl
xchg
pop
inc
dec
ja
gs
and
pop
or
mul
or
dec
iret
sahf
mov
sub
jecxz
pop
add
adc
test
das
mov
dec
mov
sub
hlt
clc
in
stos
movsl
mov
jnp
imul
jbe
rcrl
scas
int
scas
pushaw
icebp
rorb
ja
outsl
aam
mov
cli
call
pop
clc
ret
pop
mov
mov
test
loopne
mov
and
adc
jnp
stos
jmp
mov
cwtl
or
inc
cmp
push
pop
cmpsb
outsl
cmc
pop
inc
push
adc
xchg
paddsb
cmc
ficoml
mov
xor
or
xor
outsl
sar
je
aaa
dec
jl
js
jbe
mov
push
ds
mov
adc
add
test
and
fcomip
incl
inc
xchg
dec
test
cmp
inc
jbe
and
fldcw
enter
push
mov
out
inc
adc
shll
jae
jno
adc
cltd
xchg
cmpsb
mov
or
cs
dec
insb
sub
jp
inc
add
mov
xchg
push
mov
mov
or
call
test
cli
mov
pusha
cmp
fucom
mov
ret
add
lods
rclb
repz
add
mov
lods
call
mov
rcl
fistpll
push
movsb
bound
jmp
mov
mov
pushl
xor
insl
insb
test
mov
inc
add
daa
orl
cld
mov
add
mov
pop
scas
mov
leave
mov
mov
jb
sbb
das
push
sbb
stos
dec
icebp
out
cli
incl
xlat
dec
fs
dec
sub
push
and
in
sub
or
hlt
jmp
xor
std
movsb
lock
inc
or
lcall
push
pop
xor
test
add
sub
xor
pop
stos
mull
pop
push
popa
sbb
inc
mov
inc
sbb
je
pop
imul
add
and
insb
orl
pusha
lret
push
cmc
push
aad
imull
or
push
mov
ljmp
out
xor
cmc
adc
mov
into
jo
adc
stos
push
xor
mov
rorl
xchg
cld
sbb
aaa
pop
or
and
jmp
mov
mov
mov
inc
icebp
dec
mov
inc
mov
fldt
mov
bound
test
sub
ror
in
dec
or
jle
add
subb
aas
popf
addr16
ja
fadds
xchg
addb
ficompl
xor
lock
sub
imul
xor
outsl
idiv
cli
lods
sub
adc
pushl
je
repz
shl
jno
dec
mov
mov
mov
stc
push
sub
sub
xor
insb
or
lcall
stos
popf
add
hlt
in
inc
in
and
imul
mov
insl
jnp
add
adcb
jl
add
cmp
push
out
lods
in
stos
jo
enter
shr
push
xchg
sub
adc
push
xchg
fdivr
scas
cmc
adc
or
or
lret
popf
push
aam
fwait
add
xchg
xor
jb
jbe
push
mov
fidivrl
cwtl
pop
pop
xor
sbb
js
shrl
push
fbstp
test
add
dec
inc
repz
mov
mov
out
inc
cmp
jne
rcl
fcompl
and
and
ret
arpl
pop
popa
nop
lods
and
cmp
mov
sbb
mov
call
pop
in
mov
pop
sub
mov
mov
mov
lret
andb
or
xchg
cmp
add
insl
pmuludq
and
and
cmp
jmp
in
add
inc
fsubrs
or
fbld
jle
cmp
sti
adc
std
lods
test
mov
enter
fsts
orb
fucom
loop
loop
or
sub
mov
arpl
sub
gs
mov
add
adc
movsb
push
and
pop
cmpsb
rcl
push
sbb
das
orl
mov
sahf
mov
add
test
fdivrl
push
leave
cld
lret
xor
sar
push
iret
gs
hlt
mov
sbb
xchg
ret
out
push
add
cmp
imull
xor
push
test
fidivs
lock
and
push
hlt
inc
adc
dec
pop
xor
loopne
xchg
mov
jl
or
sub
jle
test
jne
pop
cli
into
inc
rclb
add
pop
sbb
pop
dec
jbe
lods
outsl
fidivrs
insl
insb
mov
pop
cmpsl
inc
in
mov
mov
sahf
dec
or
es
mov
test
push
pop
mov
pop
fdivs
out
add
dec
leave
fstl
add
dec
clc
adc
jnp
cmp
adc
xchg
mov
xchg
les
cmpsl
clc
mov
xlat
shl
mov
mov
negb
fcomps
loop
add
cwtl
mov
jg
hlt
incl
mov
dec
and
mov
imul
xchg
ret
daa
sub
ret
pushf
or
pop
pusha
rclb
inc
imul
add
clc
in
enter
cmp
jnp
outsl
rclb
or
stc
mov
fdivrp
mov
lock
and
test
js
xchg
mov
out
pop
push
call
loop
ljmp
dec
ret
mov
mov
es
dec
jne
xor
test
gs
insb
std
in
ss
loop
adc
lahf
mov
cmp
xor
ret
add
hlt
mov
fildll
lock
jb
fists
lods
push
mov
mov
decl
imul
and
leave
and
pause
in
imul
fcomip
xchg
subl
cltd
stc
shll
out
pop
sub
sti
push
aad
test
sub
xchg
inc
cmpsb
sbb
fsubrl
cmp
push
adc
mov
ss
lods
jb
lret
addb
lds
clc
cmp
add
imul
test
pop
fnstcw
lcall
pop
repnz
ljmp
lahf
sub
inc
jo
push
adcb
jmp
sub
clc
dec
sub
adc
enter
sahf
mov
mov
pop
add
sub
adc
fildll
pop
sbbb
push
aam
dec
fstpl
mov
jbe
sub
pushf
xchg
pop
cmp
ljmp
clc
fsubs
sub
mov
xchg
sbb
cli
ljmp
hlt
test
mov
loopne
aas
dec
pop
js
es
loopne
or
or
pushf
add
jge
out
adc
mov
bswap
jns
inc
stc
pop
and
fnsave
out
xchg
rorl
mov
cmpsb
rorl
fistpll
cmc
adc
jo
or
jmp
dec
test
fbld
les
call
addr16
adc
icebp
fisubrs
in
je
sub
in
js
push
call
push
xor
mov
dec
test
jno
cwtl
and
lcall
xor
lods
jg
pop
lds
test
xor
aam
sub
and
stos
jg
mov
pop
rol
push
add
pop
push
or
sub
cld
rcr
js
scas
pop
std
cld
shr
in
dec
mov
xlat
stc
aam
sbb
fiaddl
ss
dec
mov
imull
xor
sub
pop
aam
ljmp
push
adc
cmpsl
mov
addr16
xchg
push
div
fildll
lcall
and
lea
out
insl
inc
ds
lock
rorl
imul
in
push
ret
mov
xchg
mov
sub
and
dec
pop
cmpsl
mov
dec
dec
dec
jge
mov
mov
nop
dec
mov
mov
stos
fs
sbb
shll
xor
cmp
rcrl
neg
mov
pop
or
add
icebp
jp
jl
adcl
sbb
adc
jl
mov
mov
nop
test
lods
mov
xor
push
loopne
lcall
xchg
aas
sub
push
pop
sbb
incl
cs
repnz
incb
or
sub
popf
and
aas
cmp
scas
jp
xchg
rcll
out
jge
lret
call
ret
aaa
sbb
into
and
stos
sbb
cmc
cmp
insl
ds
pop
dec
dec
dec
push
pop
mov
clc
add
or
lret
inc
adc
sub
call
push
pop
cmpsb
insl
and
fnstcw
jecxz
dec
jno
sbb
mov
dec
xchg
pop
push
pandn
dec
xlat
xchg
in
divb
jno
nop
mov
fs
cmp
bound
pop
daa
in
mov
add
mov
jbe
cmp
int
insl
ret
xor
rolb
popa
rol
rcrl
inc
xor
aas
fadds
xchg
xor
aad
adc
insb
cmp
push
pop
sti
ja
sahf
jno
jge
lcall
loope
mov
mov
sbb
mov
add
mov
mov
mov
fistpl
sarb
sub
shrl
das
dec
mov
add
lock
dec
xchg
mov
mov
sti
cmpsl
mov
int3
cltd
test
mov
xor
fisubl
aaa
jg
enter
lds
cmpsb
aas
lds
cs
push
mov
and
loop
inc
sti
popf
sbb
jg
pop
push
dec
sub
xor
decl
jnp
xor
rcll
pop
mov
jae
dec
pop
mov
xchg
fcmovnbe
xchg
enter
ljmp
aaa
adc
xchg
repnz
pop
inc
jo
xchg
data16
std
test
mov
and
push
nopl
mov
jle
fcoml
xor
sbb
inc
push
js
inc
push
stc
xchg
ret
add
adc
cmpsl
and
sub
jmp
es
mov
jp
test
stos
adc
sub
jp
fdivrp
out
and
rorb
clc
out
and
rolb
out
ret
or
ret
loopne
add
jle
jae
cmp
or
jmp
decb
push
xor
fstpt
mov
push
pop
lods
mov
sub
ret
jge
daa
or
xchg
jg
xchg
or
fdivrl
repnz
call
push
xchg
add
and
add
mov
shlb
pop
inc
mov
mov
gs
ljmp
dec
subl
push
push
out
jp
in
jmp
mov
sub
das
outsl
mov
lcall
mov
test
lret
lea
pop
int3
push
xchg
push
push
bswap
pop
ss
lcall
dec
adc
cmpl
sbb
dec
add
mov
xor
cld
adc
lea
loop
inc
daa
cmp
and
testl
icebp
es
adc
pop
cwtl
xchg
daa
bnd
jb
sbb
addl
xchg
scas
pop
fdivrs
dec
repz
push
adc
push
inc
pop
push
dec
call
shr
mov
std
and
or
mov
cli
mov
pop
fs
imul
shrl
ljmp
pop
sbb
sahf
add
and
hlt
push
inc
movsl
lret
pop
outsl
mov
pop
test
mov
push
insb
mov
ss
sar
adc
das
sbb
xor
lahf
jno
negb
je
or
popf
push
ret
mov
cmp
cmp
cmp
int3
add
and
das
add
cld
push
stos
call
add
jmp
outsl
out
movsl
push
aaa
fstpt
mov
jge
fiadds
movsb
inc
es
test
pushf
push
add
sbb
pop
sub
sbb
popa
xchg
jo
cmp
mov
lds
aas
rclb
fimuls
sti
jbe
jl
pop
cmp
lret
xor
dec
add
sub
pop
dec
sbb
sub
sbb
push
inc
icebp
sbbl
call
dec
je
or
aad
push
movsl
lds
mov
or
xchg
pop
lahf
loop
mov
push
cltd
mov
cld
arpl
mov
ja
fbld
es
movsb
or
mov
cltd
and
push
adc
rorb
mov
cmpsb
fildl
lea
in
and
xor
add
inc
cltd
imul
sbb
insl
push
sub
popa
cli
scas
int
mov
pop
mov
sub
data16
or
movb
lods
imul
mov
inc
das
std
jmp
push
test
outsl
xchg
enter
sbb
sarl
movsb
out
or
and
mov
push
fisubs
jmp
scas
sbb
scas
pusha
jecxz
fdivrl
jecxz
fmul
imul
add
dec
jg
aaa
or
movsb
outsb
push
xor
test
lcall
inc
sub
xlat
inc
bnd
std
ljmp
insl
jl
aas
popa
rorl
scas
push
out
icebp
ljmp
or
xor
enter
bound
notb
xor
push
in
cmp
push
fildl
lcall
dec
mov
cmp
stc
jbe
mov
incb
clc
das
mov
pop
cmpsb
cli
push
outsl
cld
lods
inc
add
shlb
imul
call
push
test
sub
pop
scas
fldcw
cmpsb
xchg
xor
fbld
xorb
dec
les
mov
out
push
in
decl
or
or
sbb
adc
push
push
subb
insb
mov
xchg
xchg
sub
mov
or
cmp
add
push
jp
cltd
dec
lret
pop
and
addb
jns
mov
icebp
in
mov
and
push
addr16
pop
inc
xchg
mov
dec
cmp
pop
inc
std
inc
pop
das
pop
sbb
fistl
jmp
xchg
mov
adcl
fcompl
dec
mov
outsb
inc
xchg
pop
mov
jg
mov
aaa
fwait
mov
pop
lds
ja
arpl
xor
dec
push
xor
or
movsl
pop
clc
decl
sub
or
xchg
add
movsl
pop
xchg
push
ja
shl
mov
and
aad
filds
pop
mov
rolb
cli
and
notb
adc
hlt
mov
or
int3
push
stos
icebp
incl
rorl
incb
jmp
fs
fs
mov
das
push
clc
pushf
cmp
cmp
add
inc
movsb
mov
pop
jns
lods
jg
push
stc
and
sbb
lock
das
dec
dec
push
lcall
in
inc
xlat
hlt
mov
lods
fiadds
jl
pusha
or
mov
loop
iret
lea
dec
lods
dec
dec
scas
aaa
popf
cld
jl
loope
stos
popf
sbbb
ret
aas
stos
lahf
movsl
mov
mull
adc
cmp
lods
sub
cmp
pushf
push
lahf
xor
les
push
or
pop
mov
dec
mov
lahf
std
cld
dec
arpl
or
adc
lret
rcrb
add
cmc
add
ret
ror
dec
outsb
enter
fstpt
cwtl
cmp
push
push
push
cmc
jle
test
or
enter
add
mov
pop
bound
dec
cmp
lcall
orb
ss
mov
bnd
jae
mov
ds
ljmp
jge
and
xchg
imulb
sti
mov
sub
insl
sub
scas
push
push
cmp
push
loop
jo
and
cltd
arpl
arpl
lock
mov
daa
pop
int3
jp
dec
sarb
and
push
pop
stos
lock
orl
inc
add
xchg
sub
das
jo
cmp
and
xor
xchg
movsl
fisttps
outsl
loop
sub
es
sarl
in
loopne
jae
cli
lods
pop
push
pop
ss
pop
pusha
icebp
les
xor
lock
incl
rolb
push
mov
inc
pop
or
or
out
jne
jg
clc
decl
pusha
popa
js
lcall
inc
fistps
call
cld
push
cli
jae
push
and
mov
lcall
ljmp
and
xchg
adc
roll
nop
xor
mov
push
stos
sbb
pop
jmp
jnp
and
cld
pop
mov
mov
outsb
mov
push
mov
std
imul
clc
stc
mov
xchg
in
out
cmpsl
or
popa
xchg
mov
xchg
aas
lret
inc
pop
dec
je
xor
daa
add
jb
push
test
adc
inc
push
sbb
or
push
outsl
add
push
cmp
and
sti
in
test
xchg
pop
push
push
mov
sbb
cmp
adc
push
shll
call
mov
mov
sub
scas
lret
jmp
gs
scas
mov
roll
aad
lret
lea
outsl
xor
lret
dec
inc
sbb
fs
mov
arpl
xchg
and
xchg
pop
mov
in
xor
dec
aas
jp
mov
xorl
adc
mov
sbb
xchg
mov
adc
and
stos
cmp
in
jge
mov
out
call
int3
push
mov
push
mov
pop
push
ret
hlt
jnp
push
adc
icebp
lds
pop
int3
jbe
jmp
mov
dec
not
sbb
and
inc
fs
dec
shll
andb
lods
dec
sub
fistpll
xor
push
test
jno
incl
mov
mov
dec
stc
pop
ljmp
pop
fistpll
rol
or
pop
movsb
mov
sub
pop
xor
cs
insb
push
jne
sbb
xchg
mov
mov
mov
fdivrs
mov
jb
loopne
decl
add
jns
mov
testb
adc
mov
roll
push
je
sub
lods
inc
aam
jg
ss
pop
in
aad
mov
xchg
push
std
or
mov
add
jl
add
sub
sub
pop
leave
push
sbb
repz
sbb
pusha
cmp
push
lret
addb
dec
fsub
cs
call
add
insb
cmp
inc
outsb
movsb
mov
pop
push
notl
fwait
dec
outsl
fstl
not
sbbl
loop
movsb
sub
mov
push
jae
cli
aaa
ret
scas
mov
push
pop
dec
push
shll
xlat
push
ljmp
mov
fnsave
push
add
push
outsl
dec
nop
es
outsl
sbb
add
mov
jbe
lcall
orb
sbb
push
pop
sbb
inc
fiadds
loopne
cmp
and
or
fs
std
loop
lock
jmp
movsb
adc
repz
subb
mov
clc
and
clc
iret
mov
das
xor
out
cltd
lds
in
cmp
sub
leave
dec
push
add
cld
push
dec
adc
dec
push
cmp
pop
mov
loop
add
daa
mov
add
aam
and
push
jmp
mov
lds
arpl
push
xor
and
sbb
dec
cmp
stos
gs
cmc
push
imul
jne
test
mulb
adc
sahf
cmp
or
push
jecxz
pop
inc
push
adc
stc
icebp
sub
push
out
add
adc
jg
pop
popa
mov
xchg
jbe
aas
fwait
push
sti
mov
sahf
push
mov
mov
mov
mov
rorl
cli
mov
hlt
sbb
loop
cmp
lea
xchg
in
inc
jns
dec
xchg
lret
shlb
cmp
idivl
mov
je
je
ret
sub
mov
cwtl
or
push
mov
stos
xchg
push
push
cmpsl
xor
mov
xlat
daa
cmp
inc
sbb
shlb
mov
xor
mov
pop
jmp
mov
push
pusha
sbbl
inc
jmp
cld
repz
mov
add
lods
out
mov
lea
sbb
in
pop
lea
xchg
loope
lahf
das
popa
mov
mov
sbb
jne
jle
and
aas
lahf
sub
jl
les
jb
leave
mov
cmp
push
mov
dec
shlb
dec
jl
sbb
test
dec
sbb
dec
pop
cld
add
jle
mov
dec
inc
lret
test
test
sbb
push
pop
jmp
cli
sub
enter
xorl
stos
sti
add
and
inc
and
pusha
sub
xor
add
sti
and
popa
push
mov
sbb
sub
mov
ds
jb
jg
outsl
and
dec
xor
mov
sub
bound
ss
clc
popf
mov
ljmp
out
int3
repz
out
es
pushf
cwtl
addl
mov
pop
scas
aad
mov
fistl
push
jo
sub
mov
lds
or
jmp
sub
addb
outsb
sbb
or
mov
ror
sub
jmp
mov
lock
push
bound
in
repz
jne
push
pushf
xlat
out
sbb
fcomi
fildll
mov
sub
sbb
jle
cmp
adc
jle
iret
addb
mov
inc
mov
test
sbbb
or
out
iret
pop
rcl
je
pop
mov
pop
call
jns
pop
pop
sub
jg
pop
insb
mov
outsb
mov
jl
lret
push
adc
pop
pusha
into
fstpt
mov
sti
inc
into
xchg
imul
call
movsl
stos
push
push
ja
and
mov
insb
rol
dec
ljmp
mov
push
popa
in
adcl
pop
mov
adcl
std
lods
pop
xchg
push
int
lods
or
mov
into
ja
add
xor
orb
shrb
jnp
sbb
mov
jmp
sbb
call
jmp
push
pop
imul
out
add
hlt
fimuls
sbb
es
inc
jbe
xlat
lahf
push
aaa
sbb
mov
lock
call
cs
lods
xchg
jg
out
fiadds
pop
loop
add
cld
lock
add
ret
pop
push
mov
mov
jp
inc
jo
outsl
adc
push
cltd
and
aad
stc
sar
mov
sbbl
or
shrl
inc
jp
inc
insb
jo
dec
inc
mov
dec
in
mov
xor
repz
pop
pop
add
mov
adc
and
inc
filds
xchg
jg
inc
je
cmp
shl
nop
insb
pop
rcll
sahf
xchg
call
aad
push
or
adc
dec
cmp
repz
iret
lds
repz
call
data16
aaa
arpl
sti
aaa
std
out
jp
xchg
sbb
les
lods
cli
lret
negb
aam
sub
and
xchg
mov
sahf
mov
notb
jno
mov
jne
jns
sbb
into
add
fistpll
and
in
shufps
in
or
lcall
les
aas
stos
loope
fsts
imul
mov
mov
mov
mov
xchg
loope
mov
fcoml
or
std
test
jmp
movsl
dec
shlb
enter
or
mov
jae
sar
dec
aad
sbb
mov
movsb
repz
and
xchg
ss
leave
cmpsb
sbb
in
ja
pop
js
hlt
sar
mov
test
inc
xor
xchg
and
jle
mov
popf
test
jo
pop
int
outsb
or
cmpsb
lods
mov
dec
adc
add
std
test
sub
push
push
add
pop
aaa
mov
daa
and
ljmp
push
outsb
inc
rcl
movsl
mov
ret
add
inc
andl
dec
dec
cmp
mov
jbe
sub
push
test
lret
dec
cmp
push
mov
push
inc
xor
inc
cld
jne
ja
push
test
lock
lret
cmc
in
inc
mov
shll
jp
sti
lods
push
push
sti
test
push
mov
inc
pop
insl
inc
sbb
push
out
jmp
xor
add
fmuls
daa
lret
nop
xor
stc
pushf
inc
mov
invd
nop
inc
rcrb
mov
es
subb
ds
sub
push
js
sbb
or
fnstsw
loopne
dec
sub
pop
dec
test
shlb
inc
adc
or
jecxz
fbstp
inc
add
daa
sub
stos
add
out
xchg
lods
pop
popa
jbe
jbe
movsl
pop
xchg
outsb
int
push
shll
out
mov
test
mov
cmpb
dec
inc
inc
pop
xor
daa
js
or
test
mov
xchg
scas
xchg
adc
addr16
push
sub
outsb
cld
jmp
mov
call
scas
loopne
mov
adc
jo
jmp
lds
outsb
pop
push
cmovae
sbb
out
outsl
lret
movb
rorl
xor
outsb
inc
pushl
lods
das
dec
mov
xchg
fisttps
jae
dec
sbb
jo
lea
mov
mov
loopne
cmp
sarl
loope
ret
lods
jbe
sub
gs
adc
inc
mov
xlat
movsb
shll
into
adc
dec
int3
outsl
mov
sub
push
pop
sbb
jno
aaa
rcrl
adc
xchg
cmc
lods
push
xor
ret
cmc
movsl
xchg
jo
mov
sub
add
fdivrs
scas
or
ss
inc
push
mov
fnsave
in
popf
and
jbe
clc
add
lret
xor
jmp
mov
arpl
xchg
xchg
push
sbb
das
sub
xor
mov
js
mov
lock
mov
jecxz
jecxz
xor
js
dec
mov
insb
add
and
and
loope
jg
push
cltd
sbb
inc
repnz
mov
in
lret
jae
jge
lea
add
int3
push
mov
bound
xchg
clc
push
loope
xchg
cwtl
clc
jecxz
shll
addb
push
or
pop
loopne
icebp
mov
sbb
ret
and
mulb
cmp
pop
clc
dec
js
scas
scas
pop
pop
mov
cmp
adc
cmp
xlat
xor
movsl
adc
rol
inc
sub
push
aas
dec
jmp
enter
loopne
cwtl
lcall
cli
fdivrl
xchg
pop
xor
ja
sbb
sbb
dec
das
rcrb
mov
test
jb
cmp
ljmp
xor
aam
sub
mov
call
adc
outsl
data16
or
movsl
test
inc
mov
pop
or
xchg
cli
iret
adc
mov
scas
fsubrp
jl
and
sub
test
push
pop
mov
add
cmp
clc
aas
pop
jg
jne
mov
rorb
icebp
repz
cmpsb
dec
repz
in
mov
or
dec
inc
and
enter
es
inc
xchg
sub
rclb
int
js
push
or
sbbb
add
insl
fscale
pop
decl
das
pop
leave
cs
cmp
lods
mov
popf
lea
push
add
test
cmpsl
push
dec
cmp
dec
mov
inc
push
and
lock
popa
in
push
cs
pop
insl
xlat
cmp
cmpsb
mov
or
das
pop
xor
xor
mov
loopne
mov
in
jbe
and
or
in
pop
sbb
mov
sbb
sbb
or
cmpb
ss
outsb
outsl
dec
insb
fldcw
cli
xor
mov
add
rclb
mov
inc
jl
les
lock
lods
rclb
xchg
andl
push
jg
movsl
pop
add
jg
ret
out
mov
xchg
call
push
fcoml
pop
fldl
push
les
xchg
pop
incb
ret
add
xchg
mov
inc
in
lds
mov
scas
xor
add
xchg
ret
xchg
orl
mov
or
movsb
sub
xor
or
jbe
filds
mov
mov
and
push
daa
scas
push
dec
lahf
stos
inc
repnz
xchg
pop
pop
pop
pop
fcomp
mov
ret
ds
push
ja
or
mov
aam
or
test
mov
cmpsl
xchg
push
lea
add
ret
dec
xchg
add
add
pop
jmp
and
sbb
call
jbe
das
jne
jb
jecxz
movsb
scas
xor
aam
mov
ds
fs
jl
add
cwtl
mov
sbb
loopne
inc
pop
ret
pop
mov
and
popa
jecxz
cld
push
push
sbb
sub
mov
jnp
or
mov
inc
push
or
das
pop
push
das
xor
lahf
xor
push
mov
fnstsw
bound
push
subb
sub
jg
mov
or
cmp
das
icebp
jg
repnz
mov
sbb
fimuls
cli
xchg
je
shlb
push
adc
xor
dec
pop
das
jle
dec
inc
ret
cmp
iret
adc
adc
fs
repz
pop
jp
aad
mov
loopne
out
and
loop
push
xor
fwait
and
inc
scas
add
adc
bound
xor
mov
inc
sbb
mulb
outsl
aam
adc
and
jg
xchg
jle
mov
and
ja
mov
add
xchg
sub
outsl
mov
mov
mov
mov
out
mov
es
cltd
test
inc
les
lds
loopne
mov
das
pop
gs
outsl
outsl
jl
test
pop
and
shll
incb
outsl
or
dec
es
jo
xchg
mov
aaa
inc
and
xchg
push
lcall
clc
es
sub
mov
loopne
das
cmp
add
jmp
mov
inc
out
stos
lods
push
mov
hlt
add
hlt
das
push
outsl
cmpsl
xchg
sub
sbb
imul
xorl
sbb
sub
aaa
pop
push
ret
push
mov
or
mov
push
xor
imul
dec
push
mov
push
int3
and
mov
xor
sti
rcrb
cmpsl
xchg
imul
xor
sbb
pop
pusha
fldenv
adc
dec
add
mov
arpl
shrb
pop
sub
scas
roll
shrl
jl
movsb
ds
mov
sub
jle
shr
jmp
fdivs
cmp
std
jle
or
in
es
dec
loop
movsb
cmpsl
xor
xchg
or
inc
add
ja
mov
std
mov
clc
cs
sub
inc
cmp
mov
push
adc
aas
xchg
mov
mov
ss
shll
pushf
push
fsubrl
stos
call
lods
mov
aaa
call
mov
out
shlb
xlat
out
popl
ja,pt
movhps
mov
sbb
push
pop
xchg
mov
or
add
inc
jge
sti
jmp
cld
outsl
icebp
cmp
inc
scas
stc
jge
cmp
cmp
sub
xchg
push
push
inc
js
sar
pop
fdivs
adc
out
ror
ljmp
es
add
sub
mov
sbb
mov
outsl
mov
pop
add
pusha
hlt
sbb
cmp
fwait
inc
movsb
jge
push
push
dec
testl
sbb
fcmovbe
test
dec
xor
setns
rorl
mov
js
loopne
mov
dec
push
out
cmp
in
call
push
jnp
test
xchg
insl
mov
jno
jge
out
cmpsl
push
jo
stc
ror
es
jnp
mov
lea
pop
and
inc
xchg
or
mov
inc
mov
jo
imul
js,pt
add
dec
mov
xor
jle
jp
jbe
and
je
fidivrl
sub
cmpl
fildll
inc
xchg
or
enter
clc
cmpl
insl
into
sti
cmp
xchg
mov
cmp
sub
out
mov
rolb
fstps
insl
cmp
adc
dec
xchg
addr16
neg
pop
popa
daa
nop
cmp
adc
testb
data16
push
lods
xchg
lock
sub
mov
cmp
jno
jb
push
jle
cmp
mov
adc
xchg
push
fistpll
mov
xor
adc
xchg
mov
idiv
sbb
jecxz
rcpps
push
loop
push
insb
xchg
mov
ud2
add
std
push
mov
jae
scas
sahf
aas
jge
call
sbb
imul
dec
ret
push
add
rolb
movb
and
jo
hlt
sbb
adc
and
pop
mov
repnz
mov
push
loopne
lea
inc
xorl
dec
stos
sti
xchg
dec
adcl
ficompl
aaa
loopne
mov
mov
stc
push
dec
mov
push
jnp
and
fwait
mov
imul
aam
ret
fisubrl
or
lods
test
test
jne
dec
sbb
xor
lds
push
rep
leave
lret
mov
fdivp
and
pusha
mov
sub
lcall
fsubs
dec
push
test
mov
cmc
in
rcrb
loopne
in
shlb
and
sbb
out
adc
sbb
jo
pop
mov
clc
filds
add
and
xor
cmc
fistpll
pop
push
cmc
xor
test
and
and
dec
insl
pop
adc
and
in
fisubs
or
sbb
adc
push
inc
ret
mov
into
inc
sti
movsb
nop
fstps
cmp
jecxz
cli
movsl
mov
aad
incl
jl
jle
movsl
jb
xor
add
fdivr
add
xor
adc
lret
scas
test
mov
psubq
cmp
fwait
pop
fcomp
mov
xchg
pop
sbb
push
mov
mov
push
xchg
out
sbb
cld
in
sbb
cmpsl
movsl
xchg
jbe
ja
not
bound
lds
and
push
pushl
cld
sbb
inc
scas
and
dec
repnz
shrl
push
pushf
lcall
mov
adc
fldl
in
test
jmp
jbe
clc
ffreep
and
jmp
pop
push
in
in
stos
or
pop
call
in
mov
or
dec
dec
inc
sbb
mov
xor
lea
das
bswap
fidivl
fistps
insb
mov
es
mov
mov
sbb
sahf
insb
mov
lods
sbb
mov
push
push
call
int
adc
popl
lods
loopne
mulb
cwtl
or
inc
movsb
pusha
ret
mov
cmp
sub
pop
sub
cmpsb
or
popa
push
movsl
and
mov
pushl
out
mov
fidivs
cmp
nop
test
dec
test
scas
lahf
dec
mov
dec
mov
mov
dec
inc
movsl
loop
test
pop
inc
test
ficoml
mov
lahf
outsb
mov
dec
dec
jno
lret
ret
mov
add
dec
je
lock
jg
insb
mov
repz
sub
mov
sbb
sub
pop
outsb
sbb
loop
nop
add
cmpl
stos
add
loop
cwtl
fists
or
push
xor
outsb
mov
pusha
xor
mov
aaa
sbb
cmc
adc
push
insl
ja
lock
xchg
add
std
dec
and
mov
movsb
lds
test
and
pop
inc
adc
jl
lahf
cli
push
stos
mov
mov
push
jmp
sarl
lock
ret
mov
lods
jb
cli
ss
sub
jo
mov
cmp
ret
mov
fistps
fidivrs
push
xchg
bound
lahf
aas
adc
inc
clc
mov
scas
ud0
jge
addr16
jnp
je
mov
jecxz
sub
or
jg
jecxz
add
mov
jb
pusha
pop
cltd
mov
or
popa
add
pop
and
scas
jp
and
das
cs
jle
ljmp
sbb
lcall
mov
dec
icebp
fcomip
sub
js
jmp
insb
lret
in
aaa
jo
jecxz
bnd
pop
cld
out
outsl
jge
test
negl
lret
mov
std
push
les
ds
mov
fucomp
inc
inc
and
push
dec
and
call
xchg
imul
test
cwtl
sub
sub
arpl
lret
cli
mov
sub
xchg
dec
stos
inc
sub
mov
aaa
mov
add
cmp
or
pusha
icebp
or
jg
aam
sbb
add
sub
daa
mov
daa
pushf
mov
pop
test
mov
ljmp
dec
add
aam
icebp
movsl
sub
cmp
popa
jne
incl
adcl
dec
push
cld
mov
std
mov
sbb
sbb
adc
adc
idiv
xor
jecxz
inc
mov
sbbb
sti
xor
popf
icebp
ljmp
mov
sbb
pop
lret
inc
rcrl
nop
jno
xchg
pop
js
add
cltd
push
idiv
daa
sbb
incl
sahf
xorb
xchg
add
les
push
sub
out
popf
pushf
movsl
jnp
adc
movsl
movsl
mov
sub
mov
dec
adc
sbb
in
fiadds
push
je
sbb
xor
cmpsb
pop
cmp
mov
jg
xor
mov
mov
std
call
add
insb
leave
scas
les
dec
movsl
faddl
lock
pop
push
lock
sub
imulb
mov
fwait
xorl
call
lcall
movsl
aam
orb
or
fwait
call
mov
mov
loope
adc
test
mov
enter
dec
ljmp
fdivrs
push
cltd
jge
xchg
add
iret
fcompl
bound
dec
pop
stos
push
mov
pushl
mov
or
adc
fnstenv
imul
jmp
stc
inc
jmp
and
sub
add
out
xchg
sbb
imul
pop
sahf
aas
mov
loopne
mov
adc
push
clc
loopne
arpl
pop
movsl
ret
pop
mov
sub
push
stos
and
popa
stos
mov
js
xchg
repnz
fnstsw
jg
jmp
mov
and
xchg
lock
sub
icebp
mov
jecxz
or
jmp
arpl
ffreep
mov
xor
cli
mov
ljmp
dec
sub
and
shll
es
xchg
xchg
mov
movsl
cli
dec
xchg
inc
cmpsb
cmp
int3
in
int3
sbb
packsswb
iret
pop
ljmp
je
fistps
sbb
cli
in
add
mov
or
jmp
stos
enter
sti
xor
pop
cli
lret
addr16
mov
push
in
orb
out
fsubrl
int3
jne
inc
cmpsl
shrl
std
pushl
push
xor
mov
shrl
cmp
fbstp
xchg
shll
jmp
pop
bound
fdivs
out
ds
incl
adc
ss
mov
lcall
mov
jp
and
sbb
cmc
pop
jbe
nop
bound
stos
add
and
or
data16
icebp
sub
out
push
mov
push
jmp
lret
jbe
fxtract
lds
decb
pop
cli
popa
mov
or
mov
mov
pop
xor
jb
mov
cmpsl
push
sarl
push
jmp
inc
pusha
mov
in
cmpsb
outsl
movsl
pushl
das
es
add
mov
lahf
popf
nop
mov
inc
call
push
add
adc
push
bound
mov
inc
mov
mov
shlb
and
in
das
cld
cmp
add
adc
jnp
xchg
add
mov
or
push
mov
les
aam
out
inc
repz
das
lock
out
std
mov
inc
or
jbe
dec
xor
das
mov
aaa
jl,pn
int
dec
pop
out
pop
and
sub
push
ljmp
fstl
andl
xchg
cltd
das
jno
lcall
imulb
mov
inc
std
gs
mov
sbb
sarb
push
and
es
sub
bound
rcrl
loopne
mov
bound
lea
xchg
sbb
cltd
outsl
adc
decl
aaa
clc
push
rcll
out
dec
mov
cmc
rorl
into
fs
incl
mov
je
je
leave
mov
scas
sub
sbb
jecxz
jl
dec
addb
insl
fdivr
add
bound
xor
das
popf
test
jmp
xchg
shlb
das
lock
pop
xchg
addr16
or
or
sbb
cmc
mov
stos
cmpsl
dec
lock
add
call
das
out
je
stos
vpmacsdd
dec
movsb
jecxz
incl
push
pusha
sti
mov
lea
insl
push
test
enter
movsb
push
mov
inc
mov
addr16
jnp
jmp
int3
test
loopne
out
push
pop
inc
loope
gs
jle
cmpl
cmp
mov
aas
fadds
jge
rclb
dec
pop
xchg
addl
cmp
sbb
jg
orl
or
push
pop
adc
lds
push
adc
adc
mov
addl
mov
inc
loop
leave
lods
int
jp
sub
mov
or
cltd
negb
push
aaa
mov
or
popf
fwait
clc
mov
inc
filds
mov
or
shlb
fistpl
or
loopne
shlb
adc
dec
inc
cli
dec
jecxz
add
addb
mov
std
je
push
jnp
nop
mov
fsubrl
enter
and
push
mov
cwtl
mov
mov
lock
clc
test
dec
subb
iret
sbb
sahf
sub
stos
cmpb
orl
lahf
inc
or
cmp
test
subl
add
pop
mov
out
ja
in
leave
inc
out
cli
dec
es
fdivr
push
jae
fstl
ljmp
adcl
loope
jmp
inc
jns
ss
inc
jecxz
enter
aaa
push
jecxz
addb
movsl
aad
sbb
xchg
loopne
sahf
andl
xchg
or
add
out
add
lret
inc
hlt
sbb
add
pop
and
jp
push
leave
repz
outsb
in
mov
cwtl
adc
fildll
jo
mov
rol
add
cmp
in
adc
lea
bound
push
std
inc
loopne
movsl
data16
cmp
jbe
cli
pop
jno
rclb
sahf
mov
out
dec
jge
and
cld
test
xchg
pop
lretw
stos
jg
xor
lret
jle
or
cli
ret
jg
movsl
xchg
inc
mov
xor
and
rclb
cli
mov
push
jno
fldenv
or
sub
shlb
iret
test
sti
or
gs
pop
add
call
fbld
outsl
jge
inc
add
xchg
cltd
sub
mov
mov
insl
lock
xchg
pop
sbb
push
sub
aas
cmp
mov
or
jmp
mov
lock
pop
outsl
shrl
inc
add
movswl
fldenv
paddq
stos
mov
mov
inc
or
sub
call
cmp
into
dec
dec
dec
fcmovb
sbb
jmp
sub
cmp
orb
rclb
call
out
shlb
cmp
mov
pop
and
jae
xlat
imul
pop
ljmp
add
out
icebp
lret
push
lahf
or
insl
dec
loope
sbb
call
rclb
loope
ds
leave
stos
dec
jno
mov
data16
int3
jle
dec
jb
inc
mov
cmp
fsubl
lahf
jae
xorb
shlb
add
jp
pop
incl
pop
or
cli
mov
jmp
dec
fists
iret
mov
jg
lock
add
inc
insl
ret
add
subl
subl
adc
test
push
movsb
adc
je
or
or
icebp
in
pop
add
cltd
test
ljmp
imul
pop
inc
dec
cmpsl
call
lcall
test
cmp
test
loop
jne
add
mul
pop
cmp
jns
sub
jbe
adc
into
loop
dec
hlt
or
inc
inc
mov
clc
inc
mov
dec
mov
inc
add
add
pop
xchg
rcl
mov
xor
push
outsb
pop
pop
cs
sbb
sbb
in
xor
mov
fisttpl
fisubrs
inc
ret
cwtl
ret
sbb
je
cmp
divb
cmp
push
pop
push
sbb
or
in
test
mov
in
jbe
push
xor
push
jne
cmp
and
mov
jmp
loopne
mov
ret
mov
add
sub
jb
cmpsb
stos
pop
or
pop
loope
orl
inc
xor
inc
inc
push
fst
rep
jb
mov
mov
je
pop
jge
pusha
push
hlt
aad
imul
inc
je
and
fucomp
rclb
daa
mov
iret
jecxz
popa
jne
push
adc
fcmovnb
hlt
jbe
ljmp
sbb
xor
cli
subl
push
mov
test
push
pop
std
scas
sub
inc
add
andb
mov
scas
xlat
inc
push
cld
cmp
push
shlb
loope
xchg
ds
js
inc
dec
xchg
xor
xchg
sbb
pop
sub
or
lcall
nop
mov
ss
jl
lods
cmp
add
add
or
mov
inc
rolb
add
inc
popa
fs
gs
je
incl
mov
dec
outsl
arpl
push
imul
je
dec
popa
fistpll
insb
outsl
bound
popa
imul
jb
jne
je
jo
gs
bound
arpl
js
imul
imul
jae
xor
fnsave
divb
jb
gs
and
insl
mov
mov
outsl
insl
insl
add
imul
mov
and
popa
popa
sbb
in
pop
jmp
inc
dec
mov
outsl
jne
dec
push
jb
jae
imul
push
popa
jo
dec
outsl
outsb
sbb
pop
xlat
mov
cmpsl
jae
pop
insb
jb
mov
sbb
es
mov
jae
push
mov
fdivr
imul
cs
xchg
mov
out
jns,pn
push
jb
gs
out
mov
push
adc
dec
popa
popa
addr16
out
negl
dec
cwtl
divb
pop
in
loopne
mov
jp
inc
cmp
test
jbe
inc
and
sub
jne
je
std
xor
leave
mov
insb
pop
popl
cmp
fs
in
pop
popa
imul
pop
pop
jmp
xchg
pop
mov
inc
jne
mov
insb
popa
and
lcall
push
push
insb
pop
xchg
pop
sub
shlb
pop
ja
ja
or
xor
addb
mov
pop
and
inc
sub
xchg
mov
dec
and
addr16
ja
and
jae
insl
sbb
mov
mov
jb
scas
bound
push
or
push
imul
push
sbb
outsl
push
dec
inc
push
xor
or
dec
dec
insl
xchg
xchg
addr16
push
inc
dec
add
add
cmp
cld
add
add
add
lret
add
or
into
cmpsb
adc
add
add
mov
cmp
mov
fdivs
or
pop
add
xor
pop
mov
mov
push
add
out
addl
loopne
enter
cmpsl
xchg
cs
leave
mov
les
lret
pop
add
pusha
jb,pn
jno
sti
add
push
jb
imul
or
push
xchg
or
movsb
lret
sahf
arpl
sub
lock
cmp
lahf
hlt
or
add
fnstcw
lret
sub
ljmp
cmp
arpl
lahf
adc
add
outsb
sub
aas
int3
bound
add
add
add
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
addb
add
inc
add
orb
add
adc
add
push
add
add
nop
add
add
and
add
add
add
mov
add
add
lock
adcb
add
add
add
or
add
popf
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
inc
add
add
sbb
add
inc
add
sub
add
push
push
add
nop
add
orb
add
mov
pop
add
loopne
add
or
add
xor
add
pop
add
andb
add
add
add
pop
add
rolb
add
clc
add
and
add
and
adcb
add
add
jo
add
cwtl
add
orb
add
rolb
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
popf
add
or
add
or
add
popf
add
adc
add
or
add
popf
add
or
add
or
add
add
add
add
adc
add
or
add
add
add
sahf
add
sldt
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
inc
sahf
add
adc
add
or
add
add
pop
sahf
add
or
add
or
add
sahf
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
int3
sahf
add
or
add
or
add
sahf
add
adc
add
or
add
sahf
add
or
add
or
add
add
add
add
adc
add
or
add
add
add
adc
add
add
add
sub
add
or
add
add
xor
add
mov
add
add
add
add
add
add
add
or
add
test
sub
hlt
add
add
push
add
or
add
xor
add
pop
pop
add
addb
xor
add
test
add
rolb
add
clc
pop
add
and
add
dec
or
cmpb
add
cwtl
or
sbb
add
rorb
adcb
add
adc
add
cmp
add
pusha
or
subb
add
mov
add
fmuls
add
add
add
sub
add
push
or
cmpb
js
add
mov
add
add
lock
sbbb
add
sbb
add
inc
or
sbb
add
push
push
add
nop
or
xorb
add
loopne
add
or
andb
add
pop
or
orb
add
test
add
rorb
subb
add
or
addb
add
or
add
push
add
cld
lods
add
or
add
or
add
pop
add
or
add
adc
add
or
add
add
and
add
sldt
add
add
add
add
add
add
cmp
add
or
add
lods
add
or
add
add
add
add
pop
add
pusha
lods
add
push
add
add
add
add
pop
add
je
add
push
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
or
add
or
add
lods
add
or
add
or
add
lods
add
adc
add
or
add
or
add
lods
add
or
add
add
add
add
or
add
lods
add
adc
add
or
add
or
add
scas
add
push
add
add
add
add
add
and
add
adc
add
or
add
add
cmp
add
adc
add
or
add
scas
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
adc
add
or
add
or
add
add
add
add
add
add
pushf
scas
add
adc
add
or
add
add
mov
add
adc
add
or
add
scas
add
adc
add
or
add
scas
add
or
add
or
add
or
add
scas
add
adc
add
or
add
or
add
scas
add
adc
add
or
add
or
add
scas
add
adc
add
or
add
add
cmp
add
or
add
scas
add
adc
add
or
add
scas
add
sldt
add
add
add
add
add
or
add
add
adc
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
mov
add
add
add
add
add
int3
scas
add
or
add
add
add
add
scas
add
adc
add
or
add
or
add
scas
add
adc
add
or
add
or
add
mov
add
add
add
add
add
or
add
adc
add
cs
add
cmp
add
or
add
add
cmp
add
pop
add
add
add
inc
or
sub
add
add
adc
add
push
add
add
add
and
and
or
add
js
add
and
adc
add
orb
and
add
add
add
or
or
pusha
and
dec
or
test
adc
jl
xor
test
nop
or
add
lods
dec
add
adc
add
nop
shlb
adc
mov
or
adc
or
add
adc
adc
and
add
int3
dec
add
mov
sub
adc
fmuls
add
jl
and
pusha
jl
add
call
rolb
adc
xor
test
pusha
mov
add
dec
add
mov
add
bound
andb
rolb
dec
add
or
jl
and
jl
inc
mov
nop
sub
add
sbb
add
test
or
adc
add
or
dec
add
dec
adc
inc
inc
add
or
adc
bound
add
mov
bound
add
nop
and
mov
rorb
adc
add
dec
dec
add
inc
or
dec
and
add
pop
dec
add
add
adc
sbb
or
or
fs
add
dec
inc
inc
or
adc
and
rclb
inc
adc
add
add
add
dec
pusha
adc
rolb
adc
pusha
mov
and
adcb
inc
and
dec
add
jl
add
dec
adc
test
nop
add
sbb
andb
and
adc
and
dec
inc
jl
mov
dec
add
xor
addb
inc
xor
and
or
add
dec
add
sub
add
movsl
add
add
add
add
add
add
add
add
add
add
sti
out
add
incb
idiv
out
out
out
sti
out
add
cli
out
add
push
add
cli
testb
sti
out
add
cli
testb
cli
incl
idiv
out
add
cli
incb
cli
incl
out
incl
incb
out
sti
out
add
out
add
cli
testl
idiv
out
sti
testl
out
incl
idiv
testl
out
out
add
jmp
add
cli
incl
out
out
add
cli
testl
cli
out
idiv
incb
out
out
add
out
sti
testb
testl
sti
out
idiv
incl
out
out
add
testb
jmp
add
sti
out
sti
testb
testl
idiv
out
add
jmp
add
incb
cli
incl
out
sti
testl
incb
out
out
idiv
incl
out
out
add
sti
out
add
push
add
sti
out
add
out
add
sti
testl
out
cli
out
out
testl
out
out
add
sti
incl
out
out
add
sti
incb
out
out
add
out
add
incl
out
incb
out
incl
out
incl
idiv
out
add
out
add
incl
out
out
cli
testb
sti
testb
testl
cli
out
idiv
out
add
cli
out
out
sti
testb
sti
out
idiv
incb
out
testl
cli
testl
out
out
out
push
add
sti
out
out
testl
idiv
testl
out
testb
cli
out
idiv
out
idiv
out
out
testl
out
cli
testl
out
cli
testb
out
add
cli
incb
out
out
add
incb
push
add
jmp
add
incb
testb
out
incl
out
testl
jmp
add
jmp
add
jmp
add
cli
incl
idiv
out
add
sti
out
out
testl
out
out
add
jmp
add
cli
out
add
out
add
push
add
push
add
sti
testb
cli
out
idiv
testl
incb
out
testl
cli
incl
out
incl
out
add
cli
testb
incb
idiv
testl
idiv
out
idiv
testb
sti
out
idiv
out
add
testl
idiv
out
cli
out
add
out
add
testl
idiv
out
jmp
add
out
add
cli
out
add
out
add
cli
out
out
sti
out
add
out
add
sti
testl
idiv
out
add
sti
out
add
cli
out
idiv
testb
sti
incl
out
testl
cli
out
out
out
add
cli
testl
idiv
out
add
sti
testb
sti
out
add
out
cli
testb
incl
incb
idiv
incb
out
testl
out
incl
out
jmp
add
jmp
add
out
add
sti
out
add
out
add
testl
out
testl
out
testl
out
out
add
cli
out
incb
idiv
testb
push
add
sti
out
add
cli
incl
out
sti
testl
out
incb
idiv
out
cli
out
idiv
out
add
testb
incl
cli
incb
cli
out
sti
incb
out
testb
push
add
cli
testb
sti
incl
cli
incb
idiv
out
idiv
out
add
push
add
out
out
out
out
testl
out
out
sti
out
idiv
out
add
cli
incb
out
out
add
cli
out
out
incl
out
out
add
cli
out
cli
out
add
incb
out
sti
out
add
sti
out
out
out
add
push
add
incb
out
out
out
testb
sti
incl
out
sti
incb
out
cli
incb
jmp
adc
fistpll
push
xchg
int3
cmpb
loopne
sub
mov
mull
and
jp
jmp
sahf
lock
test
mov
xor
rolb
jp
dec
pop
push
dec
shrb
pop
dec
pop
enter
mov
scas
add
mov
sub
pop
fyl2xp1
sub
insb
das
adc
jns
stc
jnp
add
push
lcall
mov
and
push
mov
cmc
dec
arpl
sub
pop
nop
add
add
pushf
outsl
fildll
inc
fwait
popa
push
inc
cmp
pop
or
orb
xchg
dec
subl
sub
sarb
lcall
repnz
pop
pop
adc
fwait
dec
xchg
movsl
dec
and
pop
and
loop,pt
movsb
aas
subb
mov
xchg
test
push
fidivrl
jo
daa
std
ret
jo
mov
pusha
mov
dec
push
mov
sbb
add
mov
and
push
dec
jecxz
test
sti
iret
dec
shll
xor
hlt
stc
dec
push
xor
add
mov
cltd
subb
popf
cmp
sub
mov
sub
icebp
sub
arpl
in
push
xor
icebp
sub
add
ss
cld
xchg
push
or
pop
pop
push
addr16
jge
dec
xor
out
add
movsb
mov
ds
lock
sbb
lahf
sub
in
jge
inc
call
jmp
lcall
sahf
inc
test
negl
aas
mov
add
shlb
enter
testb
jge
les
adc
dec
das
mov
xor
add
cmpsb
movsb
fwait
jmp
fs
and
adc
aaa
dec
int
jge,pt
dec
mov
je
rcrl
loopew
es
pop
sti
jns
faddp
roll
sub
test
ficoms
add
les
icebp
movsl
jmp
adc
xchg
pop
mov
dec
fucomip
and
call
ss
mov
mov
add
aad
adc
loopne
push
mov
adc
mov
mov
mov
or
fcmove
outsl
push
mov
pop
leave
bound
mov
xchg
add
cmp
stos
aaa
adc
push
xchg
cld
loopne
push
imulb
dec
xor
adc
in
adc
and
cmp
xorb
xchg
jnp
push
sub
pop
inc
and
mov
aaa
movsl
add
fsubl
dec
nop
lret
lret
ja
sbb
daa
mov
dec
sbbl
cld
gs
or
test
adc
inc
dec
iret
jl
lock
insb
mov
out
mov
sbbb
add
sbb
leave
dec
jmp
xor
mov
test
xlat
imul
mov
repz
arpl
inc
and
leave
and
arpl
mov
leave
js
out
sbb
xchg
pop
or
inc
leave
inc
inc
bound
mov
lret
jl
test
insl
pop
sbb
xor
out
cmp
mov
repz
nop
adc
sub
dec
mov
popf
jle
in
jb
mov
inc
cmp
shll
sub
fwait
mov
arpl
xor
cmpsl
xchg
or
cli
js
inc
and
jp
std
xchg
or
int
and
ret
xor
xchg
imul
jl
or
lahf
mov
dec
sub
and
scas
paddb
out
data16
movl
repz
out
sbb
sbb
mov
mov
mov
movsb
jge
ja
jnp
pop
data16
fdivs
sbb
scas
ja
mov
and
dec
test
sbb
repz
repnz
roll
fbld
loopne
adc
iret
div
inc
jle
cmc
scas
pop
inc
loop
int
hlt
xchg
dec
xchg
not
cmp
out
or
sbb
hlt
fs
sti
jle
mov
mov
jecxz
fwait
movsb
sbb
lret
inc
sbb
xchg
cmp
inc
jb
out
hlt
mov
shrb
mov
push
inc
leave
add
or
sti
mov
mov
jg
outsb
stos
or
cltd
jmp
repnz
inc
jp
sub
test
xor
or
xor
sub
xchg
push
fldenv
xchg
rcl
pop
sbb
mov
aaa
loopne
jne
sub
fisubrs
je
sub
mov
add
sub
icebp
mov
data16
in
aaa
sub
leave
sbb
les
xor
mov
adcl
mov
xchg
jo
call
fsubp
cmp
jno
add
pusha
jno
cmpsl
test
std
enter
scas
sub
jge
lds
out
nop
movsb
pop
cmp
adcb
mov
mov
gs
or
push
dec
adc
call
mov
jae
mov
push
mov
pop
outsb
add
les
add
ficoml
mov
inc
sbb
fsub
inc
add
mov
fisubl
push
mov
daa
call
push
arpl
insl
jl
xchg
jne
leave
into
and
lods
xlat
pop
enter
gs
loope
into
mov
je
loope
jl
repnz
push
lock
movsl
and
cmp
add
dec
adc
adc
and
rcr
xchg
lahf
ja
pop
xchg
and
mov
sub
dec
jno
mov
jle
cmp
xchg
pop
cmp
rcr
movsl
sbb
mov
push
int
cmp
sub
pop
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
bound
add
insb
add
outsb
add
and
inc
add
jb
jo
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsl
add
imul
push
add
outsb
add
push
add
add
jo
jns
and
inc
add
add
popa
add
and
push
add
popa
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
pop
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jne
popa
add
imul
add
add
add
add
popa
add
add
and
inc
add
jbe
add
add
add
pop
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
popa
add
and
test
add
add
add
add
outsl
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsb
add
arpl
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
and
push
add
add
and
inc
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
pop
add
inc
inc
sbb
xor
test
and
sub
adc
sbb
adc
or
or
lods
pop
add
inc
pusha
test
or
adc
add
nop
adc
add
adc
adc
inc
or
and
mov
pop
add
adc
dec
push
or
rolb
mov
add
add
pop
add
add
or
dec
test
xor
add
in
pop
add
sbb
add
nop
xor
xor
add
test
or
sub
and
mov
nop
or
add
nop
adc
and
adc
and
and
pusha
add
jl
sbb
add
and
sbb
push
mov
add
pop
add
push
adc
and
and
adc
nop
xor
add
mov
and
adc
mov
and
add
jl
mov
pop
add
dec
mov
nop
adc
add
add
add
inc
or
adc
dec
mov
pusha
xor
push
push
add
rolb
mov
add
js
add
inc
or
test
mov
and
or
or
mov
add
rorb
addb
mov
add
pushf
pop
add
sub
shlb
push
adc
pusha
add
test
add
add
and
and
mov
add
inc
push
sbb
inc
push
and
xor
shlb
adc
pop
add
bound
sub
adc
and
inc
sbb
add
fcomps
add
inc
sub
or
or
and
addb
adc
pop
add
add
nop
or
inc
adc
sub
inc
test
mov
push
pusha
add
cld
pop
add
or
add
adc
adc
or
add
adc
add
add
test
mov
adc
sbb
add
and
adc
adc
rclb
dec
addb
add
xor
add
adc
dec
and
or
sub
test
add
inc
pop
add
inc
and
andb
adc
and
sbb
pop
pop
add
add
sbb
mov
add
orb
nop
add
add
or
add
sub
add
or
sub
add
andb
jl
add
test
and
inc
sub
bound
or
add
mov
add
mov
test
adc
mov
add
adc
mov
adc
and
bound
dec
push
or
mov
add
and
or
or
and
add
les
add
addb
addb
or
add
pop
add
mov
adc
jl
dec
add
add
add
pop
add
adc
nop
dec
nop
or
adc
pusha
and
adc
adc
bound
hlt
pop
add
push
or
adc
adc
test
sub
push
or
add
pop
add
add
push
and
inc
and
inc
sbb
add
add
pop
add
and
add
sbb
and
mov
sub
sub
add
push
dec
inc
inc
and
add
inc
push
dec
and
push
add
fs
addb
and
inc
pusha
and
rorb
pusha
add
inc
dec
nop
dec
jl
or
and
add
or
pusha
adc
adc
add
sbb
mov
bound
add
and
jl
inc
inc
inc
xor
or
or
inc
add
or
and
inc
or
dec
nop
adc
or
or
and
adcb
add
inc
sub
or
test
inc
mov
adc
jl
orb
and
inc
sbb
and
nop
add
and
rolb
add
and
add
add
add
adc
mov
dec
add
add
mov
mov
adc
bound
or
push
add
add
or
or
andb
adc
nop
inc
inc
add
add
and
addb
or
and
adc
adc
or
and
adc
and
and
nop
and
push
mov
add
or
adc
adc
sbb
or
or
push
adc
adc
inc
nop
inc
mov
add
shlb
addb
test
inc
or
and
rolb
adc
add
mov
test
dec
inc
adc
pusha
xor
push
pusha
and
adc
and
mov
or
orb
adc
adc
and
or
and
dec
adc
inc
and
adc
rclb
and
or
adc
adc
inc
add
inc
and
mov
jl
add
dec
sub
sbb
nop
mov
rolb
inc
xor
xor
adc
sub
or
inc
xor
and
or
xor
and
inc
and
inc
inc
and
push
sub
sub
adc
or
or
add
add
xor
mov
orb
mov
adc
pusha
dec
or
push
and
adc
inc
add
test
or
rorb
inc
xor
test
pusha
and
mov
nop
or
dec
adc
jl
add
adc
nop
add
add
add
call
add
add
mov
add
add
sub
add
ss
add
add
add
add
add
xorb
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
fs
insb
cs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
je
inc
insb
gs
jb
insb
insb
inc
imul
popa
fs
insl
popa
addr16
