push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
shlb
pop
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
arpl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
and
add
and
add
and
add
add
lret
add
add
data16
add
and
add
and
add
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
add
add
add
out
add
stos
and
add
and
add
and
add
and
add
add
fisubl
add
jp
add
dec
and
add
add
add
add
push
and
add
and
add
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
and
add
and
add
and
add
and
add
add
lret
add
add
data16
add
and
add
and
add
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
add
add
add
out
add
stos
and
add
and
add
and
add
and
add
add
fisubl
add
jp
add
dec
and
add
add
add
add
push
and
add
and
add
and
add
add
add
add
add
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
insb
outsl
jae
dec
popa
outsb
fs
add
inc
jne
jb
outsb
je
push
add
roll
dec
gs
jo
jb
add
addl
jb
popa
je
inc
imul
jns
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
gs
outsl
jbe
inc
imul
jns
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
imul
repnz
imul
jb
je
arpl
add
call
inc
imul
bound
gs
add
push
push
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
aad
inc
imul
add
dec
outsl
arpl
inc
insb
popa
addr16
add
push
dec
inc
dec
xor
cs
insb
add
jae
push
gs
jne
jae
jb
outsl
jae
add
pop
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
inc
gs
imul
js
push
add
rolb
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
dec
gs
popa
addr16
add
jnp
push
gs
outsl
arpl
add
movl
outsl
insl
gs
mov
inc
imul
dec
gs
popa
addr16
add
sbb
ja
jo
imul
push
inc
push
xor
cs
insb
add
or
inc
gs
gs
imul
inc
gs
popa
insl
gs
jns
jns
gs
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
pop
frstor
xor
scas
ljmp
fmull
stos
jno
stos
in
int3
dec
addr16
pop
les
and
xlat
les
push
sub
js
push
cmpsb
jne
pop
bound
ficomps
push
pop
loope
jecxz
hlt
loopne
clc
stos
jb
js
in
pop
aaa
lahf
loop
cmp
jb
js
sbb
xor
jmp
cmc
cmp
in
scas
xor
cmp
mov
in
mov
sbb
adc
dec
mov
xchg
imul
xorb
cs
ret
xor
or
mov
and
inc
aaa
and
and
int3
or
adc
icebp
mov
push
repz
xchg
cmpsb
lods
ds
cmp
inc
push
push
vpunpckhbw
pop
xor
inc
notb
xor
jmp
gs
xchg
int3
xchg
aad
xlat
xchg
mov
sbb
shl
fimuls
lods
in
sbb
fidivs
cmp
cmp
mov
and
push
std
xor
lret
test
inc
jp
xlat
ret
call
add
lods
pop
ficoms
cmp
dec
out
out
imul
jae
xorl
scas
lods
jae
stos
push
ret
cs
test
sub
xchg
pop
ja
scas
lahf
pop
sbb
scas
sub
cmp
xlat
jae
js
addr16
out
inc
enter
enter
lods
lret
ljmp
sbb
repnz
lods
aaa
jo
push
or
fs
rcll
popf
mov
sub
mov
mov
rcll
cmp
int
pop
rorb
icebp
fdivl
iret
mov
lock
dec
push
mov
xor
push
aam
das
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jg
add
jnp
stos
lods
lods
add
cmpsl
test
mov
mov
mov
ret
ret
lret
lret
lret
into
rcl
in
rcl
shl
rcl
iret
hlt
int
int3
hlt
enter
enter
mov
mov
mov
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
leave
lret
rcl
cld
xlat
fdivr
xlat
xlat
xlat
fcomp
aad
rcl
sar
int3
int
aad
aad
ror
iret
inc
ret
ret
std
mov
mov
scas
iret
movsb
movsl
movsb
xchg
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
lret
leave
call
ror
aad
fcomp
xlat
call
xlat
xlat
call
aad
dec
int3
int
int3
into
int
aam
aad
int3
int
inc
sarl
mov
lods
scas
std
cmpsb
cmpsl
test
xchg
xchg
xchg
mov
pop
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
inc
enter
int
call
rcl
fcom
fdivr
fcomp
call
aad
int
into
dec
lret
int
int
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
push
imul
pop
pop
pop
fs
sbb
das
prefetchw
sub
ss
cmp
cmp
and
and
push
add
add
add
add
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
call
rcl
call
aad
call
aam
call
ror
dec
leave
leave
inc
mov
mov
scas
scas
scas
jmp
pushf
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jno
jge
jl
jg
jg
jb
jno
bound
mov
cmp
cmp
pop
pop
pop
stos
jo
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
leave
dec
lret
mov
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
lcall
lahf
aas
ds
push
push
or
add
add
add
add
add
add
add
add
add
add
add
outsl
jo
add
pop
or
jl
nop
lea
incb
jl
idivb
jmp
outsb
outsb
out
push
push
ret
jle
jp
jns
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsl
lcall
xchg
incl
test
xchg
xchg
xchg
mov
mov
cwtl
mov
js
jns
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
mov
addl
std
xchg
jle
jb
jb
jne
jne
jle
jge
addb
xchg
push
cmp
ss
es
jge
jg
lcall
shrb
lods
stos
sti
lods
lods
lods
lods
lods
stos
test
stos
std
movsl
mov
lcall
xchg
js
js
jnp
jnp
mov
cwtl
movsl
mov
scas
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
push
push
push
push
or
dec
imul
xchg
leave
cltd
fistps
lcall
mov
xchg
xchg
mov
lea
fwait
jmp
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
cmpsl
scas
call
fwait
xchg
cwtl
incl
test
decb
xchg
xchg
popf
pushf
popf
std
movsl
movsl
movsl
stc
mov
xchg
xchg
in
nop
in
xchg
push
jne
push
push
dec
add
add
or
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
std
lea
nop
call
lahf
lahf
jmp
test
pushl
cmpsl
lods
mov
xchg
test
std
les
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
lcall
mov
decl
nop
decl
xchg
xchg
popf
sahf
sahf
movsb
mov
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
bound
je
mov
lahf
addl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jle
mov
jbe
mov
movsl
mov
mov
lods
lods
mov
mov
add
mov
pop
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
xchg
lcall
mov
movsl
mov
stc
cwtl
cwtl
fwait
out
xchg
xchg
mov
xchg
aad
xchg
cltd
in
xchg
cwtl
out
lea
nop
stc
xchg
test
std
xchg
jae
lcall
jmp
inc
jnp
mov
jnp
mov
je
mov
outsl
ljmp
pcmpgtw
lods
or
ljmp
inc
jg
mov
mov
stos
pushf
movsb
mov
movsl
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
fwait
fwait
lcall
sahf
lahf
lcall
fwait
call
xchg
xchg
nop
cwtl
xchg
call
fwait
cld
cwtl
xchg
sahf
stc
mov
xchg
pushf
cld
sahf
mov
xchg
imul
xchg
dec
jp
lcall
sahf
push
push
jmp
adc
ljmp
adc
lods
adc
scas
adc
mov
push
mov
push
mov
imul
jg,pt
rcrb
imull
mov
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
sahf
pushf
lcall
mov
movsl
jmp
cwtl
xchg
decl
mov
decl
js
fwait
jno
cltd
bound
call
sub
decl
adc
nop
or
pop
call
add
lahf
push
pop
jmp
sbb
mov
outsl
pushl
pop
outsl
mov
and
mov
and
aas
cmp
xchg
lods
mov
lods
scas
mov
lahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
lcall
movsl
movsb
movsl
jmp
cmpsl
cmpsb
ljmp
cmpsb
cmpsb
lcall
jle
decl
jno
mov
imul
sub
mov
pop
incl
add
push
decl
add
popl
pop
call
add
mov
or
pushl
sub
mov
sub
shrl
inc
sub
inc
sub
jg
enter
movl
mov
mov
lret
movsl
dec
mov
mov
add
add
add
lods
mov
push
adc
test
mov
lahf
cltd
popf
jmp
test
ljmp
lods
stos
pushl
scas
scas
jmp
jo
decl
or
push
incl
add
push
incl
add
mov
push
decl
add
xchg
add
cltd
add
sahf
add
movsb
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
cltd
popf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
xchg
push
incl
add
lea
push
call
add
sahf
add
mov
add
lods
add
jo
les
test
lret
inc
mov
int3
inc
call
inc
call
dec
call
dec
xchg
fmuls
fimull
fisttpl
fsts
call
xchg
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
cltd
cwtl
lcall
jp
jl
lahf
mov
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
insl
decl
decl
adc
decl
push
decl
add
xchg
add
sahf
add
mov
add
test
push
fs
es
int
nop
call
push
cwtl
call
push
lcall
push
pushf
ficoms
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
mov
sahf
add
inc
inc
adc
jns
sahf
cltd
sahf
jmp
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jne
pop
call
and
call
sbb
or
nop
add
xchg
add
cltd
add
mov
add
stos
add
mov
gs
mov
xor
call
pop
cltd
fstps
fbld
fisubs
jmp
cmpsb
jmp
cmpsw
jmp
gs
call
push
test
dec
mov
mov
mov
sahf
sahf
add
inc
inc
adc
jb
fwait
xchg
cwtl
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jg
xchg
sub
fwait
xor
lcall
call
or
xchg
add
lcall
ljmp
add
mov
pushw
adc
roll
fsubl
jmp
outsl
lods
jmp
jo
jmp
jno
call
je
jmp
mov
out
jbe
out
jbe
out
je
jmp
mov
mov
test
lcall
mov
add
add
add
jge
cmp
insb
outsl
js
mov
pushf
pushf
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
aaa
je
sahf
xor
lcall
call
add
movsl
add
test
add
mov
data16
mov
sbb
fsts
jmp
ja
ljmp
in
jg
out
cmpl
push
xchg
push
test
jmp
mov
inc
mov
test
pushf
pushf
pushf
daa
sahf
mov
sahf
add
add
add
popa
add
cmp
pop
pusha
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
pushl
insb
mov
cltd
cmp
inc
jl
movsb
inc
jg
mov
sbb
xchg
add
pushf
add
mov
add
scas
add
mov
data16
mov
add
shlb
movsl
jmp
mov
push
pop
push
nop
ret
xchg
sar
xchg
ret
push
xchg
xchg
pop
out
nop
sar
mov
inc
ret
stos
lods
stos
mov
popf
sahf
xor
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
ret
ret
inc
mov
jge
lcall
dec
cmp
dec
test
mov
maxps
fwait
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
out
mov
out
xchg
push
lcall
hlt
fwait
push
lcall
negl
int
cli
sahf
int
cli
cwtl
lret
xchg
ret
mov
dec
mov
rcrb
xchg
add
add
add
aaa
add
sub
outsb
push
dec
dec
jecxz
pusha
decl
mov
mov
mov
sar
ret
inc
mov
mov
sar
mov
ljmp
mov
movsb
sub
lcall
jmp
pushl
add
roll
dec
add
or
inc
xchg
in
mov
push
cmpsb
int
cmc
cmpsb
into
stc
cmpsl
iret
cli
cmpsl
iret
cld
cmpsl
sar
sti
test
cld
stos
iret
std
test
sar
cmc
lahf
mov
dec
enter
mov
into
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
je
jo
mov
rol
rol
mov
ret
mov
leave
leave
inc
ret
mov
test
movsl
push
xchg
scas
push
mov
scas
dec
test
mov
add
jmp
add
mov
fs
mov
add
int
outsl
fadds
je
ficoms
jnp
out
pop
test
cmc
sahf
leave
sti
scas
aam
cli
scas
cld
mov
sti
scas
sar
cld
mov
cld
mov
mov
mov
std
mov
mov
push
movsb
mov
call
leave
int
mov
mov
sahf
mov
xchg
or
add
add
xor
add
dec
dec
outsb
outsb
outsl
mov
aad
jmp
fcomp
test
int3
int3
dec
lret
lret
dec
leave
lret
lret
leave
inc
enter
lahf
lods
jmp
push
mov
lods
cmp
jmp
add
mov
fs
mov
add
roll
outsl
call
add
add
jmp
jb
cli
lods
aad
cld
mov
fcos
mov
cld
mov
fdivr
cld
mov
fcos
mov
fcos
stc
mov
call
lret
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
call
out
loop
loope
fstp
fucom
fdiv
xlat
cli
fcomp
std
int3
ror
mov
imul
jmp
add
mov
popa
mov
add
lret
add
add
fildl
jbe
in
ja
in
xor
sti
mov
inc
loopne
inc
loopne
inc
std
std
enter
leave
inc
fdivrp
dec
dec
loope
sti
mov
lret
lret
mov
mov
xchg
adc
add
add
std
add
std
add
std
std
add
cmc
cmc
or
out
jmp
in
out
in
sub
out
out
dec
ljmp
xchg
call
call
fucomp
les
xchg
cmpsl
cmp
mov
add
ljmp
add
mov
add
int3
add
xlat
add
add
call
inc
popf
cli
mov
loop
cld
lret
jecxz
dec
out
dec
jecxz
dec
loop
std
into
loop
dec
loop
std
shl
call
in
std
shl
std
shl
cld
in
mov
xlat
inc
ret
out
test
cmpsb
mov
cwtl
xchg
add
add
add
incl
incb
div
testb
repz
repz
push
out
lock
pop
out
lock
cmp
out
out
pop
loopne
mov
xchg
sti
lahf
and
lcall
add
stos
add
mov
fs
add
leave
add
roll
jo
fildl
je
in
jns
jmp
jl
negb
cld
mov
cld
shl
dec
jecxz
std
shr
std
shr
std
shl
std
aad
call
jmp
fucomi
std
shl
push
aad
jecxz
lret
leave
lret
stos
test
xchg
xchg
xchg
and
xchg
cwtl
add
cli
add
cld
testl
hlt
div
or
aam
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
call
add
fildl
ja
out
jns
out
sbb
push
je
cld
std
fsubr
fucomi
fucomi
fsubr
fucomi
fucomp
std
loopne
std
fucomip
loopne
aam
push
ret
call
iret
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loope
add
enter
mov
xchg
repnz
and
mov
add
mov
arpl
mov
add
int3
add
aad
jae
fiadds
jne
call
sub
std
shr
jmp
out
std
fsubr
fldl2t
fucomi
call
out
std
in
cld
aam
cli
shl
sti
iret
loop
stc
iret
stc
lret
fdivr
test
lret
rcr
call
xlat
sti
mov
mov
fwait
fwait
cltd
cmp
fwait
lcall
add
add
xlat
xlat
add
mov
lahf
jmp
sub
mov
add
mov
mov
add
iret
add
xlat
add
add
jmp
xor
enter
loope
sti
lret
cld
stc
rcr
idivl
sar
repnz
into
in
mov
lret
ljmp
std
jmp
shl
call
loopne
in
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
into
push
jno
rorb
fimull
jns
loop
cmp
call
scas
lret
mov
call
scas
scas
ret
cli
fstpt
lock
int3
in
leave
into
rcl
shl
xlat
fcmovb
out
loop
in
out
test
out
lock
call
lret
leave
push
stos
stos
lods
adc
cmpsb
cmpsl
cmpsb
add
ret
roll
rolb
ret
ret
sahf
stos
aam
dec
cmp
test
imul
and
jns
mov
dec
xchg
ret
stc
lret
test
mov
sarl
rcl
ror
aam
int3
rcl
lret
mov
into
shlb
rcl
jg
fcmovu
jb
loopne
gs
in
out
call
xor
cmc
cmc
mull
lock
lock
fstp
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
imul
sbbl
mov
stos
mov
ret
mov
cmpsl
mov
mov
lret
ror
shlb
iret
iret
push
iret
rcl
dec
aad
aad
rcr
aam
aam
fldenv
xlat
fstp
sbb
loopne
adc
jecxz
push
in
out
jmp
add
cld
testl
std
add
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
mov
daa
int3
ror
and
aad
sbb
rclb
iret
aam
or
aam
rcr
add
fcmovnu
add
add
in
add
in
jmp
add
std
std
add
mov
add
rol
sub
mov
mov
push
rol
or
mov
add
int
add
aam
add
xlat
aad
rcr
aam
aam
aad
aam
add
xlat
loope
aad
add
loop
add
add
out
add
lock
std
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
shr
rcl
aad
rcl
aam
into
iret
into
cli
lret
int
stc
int3
lret
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
and
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
iret
ror
xlat
call
call
ror
dec
int
dec
int3
int3
mov
mov
cld
stos
stos
stos
icebp
cltd
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
je
data16
dec
inc
dec
cmp
sub
sub
aaa
xor
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
call
rcl
call
aam
dec
lret
mov
mov
ljmp
lahf
popf
cwtl
xchg
xchg
jmp
outsl
jo
adc
add
xor
add
add
add
add
addb
test
jp
push
imul
push
push
insl
insb
insb
push
pop
pop
cmp
cmp
pop
jno
jno
mov
scas
pop
mov
mov
mov
mov
sar
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cwtl
fcoml
addb
jl
jl
js
jns
jnp
jp
jp
jnp
je
jb
push
push
push
cmp
jae
sahf
popf
popf
mov
scas
lods
rep
scas
scas
sti
lods
lods
lods
std
test
popf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsb
movsb
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsb
outsb
pop
stos
movsl
stos
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsb
jo
mov
cltd
cwtl
lcall
mov
call
pushf
popf
ljmp
test
std
mov
scas
mov
xlat
cmpsl
mov
addl
add
add
pusha
popa
popa
or
lods
mov
cmpsb
mov
mov
lea
call
popf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jg
subb
nop
xchg
lock
mov
lcall
fwait
pushl
jo
mov
push
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
cwtl
lcall
sahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
jg
pushf
dec
jnp
mov
xor
jae
scas
push
insl
ljmp
sbb
mov
mov
mov
jle
mov
add
add
add
pusha
popa
pusha
or
mov
in
movsl
test
lcall
mov
mov
decl
addl
cld
xchg
pop
cmp
dec
jp
xchg
cmp
xchg
daa
push
call
punpcklwd
cmpsl
adc
imul
sbb
pushl
pop
jno
mov
pop
nop
mov
scas
scas
xchg
popf
lahf
popf
adc
add
add
popa
pop
popa
or
mov
stos
movsb
cmpsl
jmp
cmpsb
cmpsb
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
imul
sub
decl
adc
test
pop
decl
add
xchg
add
fwait
add
cmpsl
or
jae
mov
das
jl
les
jge
leave
das
jg
lret
xor
ret
imull
test
add
add
add
pop
pusha
pop
or
cmpsb
test
jmp
scas
mov
mov
mov
mov
mov
movsl
xchg
mov
decl
adc
xchg
push
incl
add
mov
push
call
add
movsl
add
mov
insl
inc
ss
lret
dec
inc
call
inc
nop
call
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
movsb
mov
add
add
add
pusha
or
mov
ljmp
mov
mov
mov
stos
lcall
sbb
decl
or
push
call
add
add
lods
add
jbe
rorb
fsts
fcompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
cmpsb
xor
add
add
dec
pop
jle
jnp
popf
cwtl
lcall
scas
scas
pushl
mov
mov
jmp
cs
sub
call
subps
xchg
add
popf
add
cmpsl
add
scas
add
mov
push
fsubl
jmp
insl
stos
jmp
outsb
stos
call
jo
out
jae
jmp
jns
call
test
mov
inc
jg
addb
add
dec
dec
dec
pop
insl
outsb
insb
bound
lcall
mov
mov
mov
jmp
cmp
jmp
sub
call
add
movsl
add
stos
add
mov
inc
or
call
inc
xchg
jmp
jp
jmp
mov
push
test
push
xchg
fisubl
mov
push
lcall
add
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
push
jne
fistps
in
xchg
sar
xchg
push
xchg
cltd
stc
cltd
lret
lcall
loop
inc
mov
lods
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
pushl
push
xchg
stos
dec
cmp
and
lahf
add
jmp
add
add
leave
add
fldenv
cmp
cmc
mov
sar
stc
test
sar
std
stos
iret
std
lods
sar
sti
test
call
mov
test
or
add
add
dec
dec
push
aaa
jb
je
stos
stos
test
out
into
int
lret
sti
lret
std
leave
leave
mov
popa
ljmp
adc
cmpsl
add
mov
arpl
ret
dec
add
fildl
call
xchg
mov
std
mov
fdivr
mov
fdivr
std
mov
sar
jmp
ret
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
loopne
loopne
fadd
fcmovu
aam
fsubr
shll
test
jae
movsl
or
mov
popa
mov
add
add
in
jp
icebp
dec
mov
std
dec
loopne
inc
fdivrp
std
enter
lret
std
lock
lret
divb
popf
sahf
sbb
add
add
std
add
std
add
jmp
out
sbb
jmp
xor
loop
jecxz
les
mov
mov
add
mov
fs
add
into
add
faddl
je
ljmp
cld
fdivrp
std
iret
out
std
shl
std
shl
aam
call
std
shl
push
xlat
fcmove
sar
mov
mov
add
std
add
std
incl
std
pop
aad
mov
pop
xchg
sahf
or
test
add
les
push
rolb
jno
loopne
jne
out
and
std
shl
std
fsubr
std
xlat
call
sti
xlat
out
sti
aam
push
enter
rcl
sti
mov
popf
popf
das
add
add
into
int3
into
or
fs
lahf
adc
stos
add
mov
add
add
loop
jns
out
xor
sti
int3
loopne
stc
leave
fdivrp
test
hlt
ret
aad
repz
aam
out
ret
aam
in
vpsubw
shl
ljmp
ljmp
stos
das
std
add
add
add
aad
push
mov
jb
or
insb
inc
pop
jb
lret
and
xlat
cs
fists
jecxz
mov
out
jecxz
lret
mov
loope
mov
lret
enter
into
aad
in
fcompl
out
call
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
push
mov
mov
xchg
fidivrl
jg
rol
stos
mov
mov
les
aam
int3
insl
aam
into
pop
rcl
rorl
xlat
xlat
cmp
fsubp
das
in
frstor
loop
lock
in
in
or
incl
std
incb
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
rcl
rclb
mov
rcl
or
loope
or
int3
into
add
std
std
add
incl
fwait
lcall
or
int
int3
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
enter
enter
sarl
scas
scas
insb
lods
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aad
std
rcl
sar
iret
iret
int
stc
mov
mov
test
jg
sbb
sbb
add
add
add
add
add
add
add
add
jae
jae
addr16
inc
das
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
into
call
aam
dec
int
inc
enter
mov
jmp
mov
push
add
add
add
add
jae
je
xchg
adc
popa
popa
arpl
outsl
outsl
outsl
jb
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jno
daa
and
add
add
add
jb
je
fwait
xchg
fwait
mov
xchg
mov
xchg
test
addb
push
push
dec
inc
mov
popf
into
movsb
movsb
movsb
in
lahf
mov
xchg
decb
mov
lods
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
cld
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cwtl
lcall
push
push
push
imul
jge
mov
xchg
notl
mov
mov
lcall
jo
mov
lods
scas
push
lods
lods
stos
add
add
add
mov
mov
lods
cld
xchg
xchg
xchg
call
lcall
xchg
fwait
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
bound
std
fwait
inc
jbe
cmpsl
ss
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
int
add
add
test
pop
scas
movsl
stos
test
popf
sahf
sahf
jmp
cmpsb
call
jl
mov
decb
das
imul
nop
adc
xchg
or
mov
push
insl
pushl
es
shrb
inc
inc
xchg
mov
mov
subl
jae
push
mov
movsb
test
test
cmpsb
ljmp
scas
mov
mov
sub
adc
xchg
push
incl
add
add
mov
adc
shll
lret
ds
iret
inc
mov
aad
mov
aam
xchg
dec
cwtl
mov
mov
mov
mov
add
add
imul
movsl
mov
scas
pushl
mov
movsl
call
sbb
pop
call
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
pushf
mov
test
cmpsl
test
add
add
arpl
adc
sahf
lcall
mov
mov
scas
lcall
jo
cltd
and
xchg
or
mov
add
mov
addr16
xor
out
mov
in
jp
out
jl
out
jg
fstps
mov
and
add
add
adc
imul
mov
mov
mov
ret
mov
bound
jmp
add
ljmp
add
or
dec
xchg
in
mov
push
xchg
push
cwtl
leave
push
xchg
enter
inc
mov
cmpsb
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
sarl
stos
dec
cmp
pop
jmp
pushl
imul
ljmp
clc
lods
sar
cli
lods
sar
std
lods
sar
lods
sar
jmp
lret
mov
movsl
ds
incb
xor
xor
inc
scas
mov
mov
aad
mov
aam
rcl
shr
lret
lret
mov
mov
jmp
add
les
imul
add
call
nop
mov
inc
fdivr
inc
inc
lock
shl
cmpsl
cmpsl
dec
addb
add
jmp
call
out
inc
loopne
in
fcmovu
fisubl
movsb
outsb
ljmp
add
lret
fldl
jbe
out
cmp
dec
out
std
shl
std
shl
shl
std
shl
push
leave
ror
int3
in
lods
lods
scas
popa
jg
addb
add
std
add
incl
int
shrl
mov
add
mov
add
loope
jns
hlt
push
movsl
cld
loop
std
jmp
aam
std
aad
cli
aam
push
leave
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
mov
push
jae
fistps
cmp
lock
shl
ljmp
jmp
in
rcl
jmp
fcmovu
scas
push
lcall
add
rol
mov
stos
xchg
inc
and
push
mov
shll
int3
ja
mov
fdivrs
adc
int
xlat
lret
into
pop
fst
xlat
dec
jecxz
loopne
out
out
out
in
out
sbb
rol
add
mov
cmp
movsb
scas
arpl
lods
mov
ret
les
lret
sbb
fstp
bswap
int
or
push
std
incl
addl
add
stos
incb
rol
add
incl
std
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
adc
dec
call
lret
or
lds
imul
lods
jnp
scas
mov
lret
xor
dec
sub
dec
arpl
mov
dec
pop
testb
pop
inc
pop
aaa
fdivl
aam
pushf
cmp
imul
sbb
dec
test
lods
fs
mov
xor
flds
inc
lea
fs
jecxz
jmp
pop
pusha
xchg
mov
dec
stos
leave
cmp
mov
jl
sbb
jne
and
sbb
dec
fdivrs
shll
sbb
pop
inc
mov
cmc
lods
sub
cli
inc
aad
cmp
inc
leave
dec
xor
sbb
int3
int
repnz
mov
mov
or
pop
inc
popa
sbb
movlhps
mov
push
dec
adc
lret
xchg
mov
dec
arpl
mov
out
rcrb
negb
aaa
sbb
fcomps
push
pop
xor
aad
les
rcll
xorl
das
test
mov
icebp
push
or
pop
fwait
mov
xchg
cmp
iret
adc
iret
pop
cld
leave
pop
scas
xchg
repnz
hlt
insl
loope
xchg
mov
loop
sub
jl
in
cmpsl
aas
mov
add
jo
sti
cli
pop
les
into
std
jp
mov
jo
push
mov
in
inc
sbbl
mov
inc
mov
test
rol
jp
stos
push
mov
sbb
xchg
inc
pop
rorb
mov
ret
add
scas
cmc
dec
inc
pop
add
jno
lret
push
mov
bound
bound
jns
jnp
repz
sub
sbb
repz
mov
aaa
cwtl
in
je
repz
orl
cltd
fwait
lods
dec
adc
xchg
std
aad
cmp
push
mov
xchg
add
bound
jecxz
data16
ficoms
pop
and
popf
insl
mov
sarl
or
add
shl
inc
loop
pop
adc
mov
leave
bound
inc
imul
add
sub
xor
jns
pusha
lock
xchg
pop
fistps
notb
mov
mov
sbb
lods
adcl
mov
clc
jae
add
loop
int
loope
mov
lock
jmp
push
adc
and
jb
adc
mov
xchg
sub
fbstp
imul
jl
adc
into
jp
sbb
cmc
es
in
push
dec
add
jmp
hlt
mov
adc
rcl
mov
sbbb
mov
dec
push
addr16
xchg
popa
cmpsl
arpl
out
imul
clc
push
jbe
or
mov
xchg
int3
loop
jl
lods
test
add
lock
mov
sahf
push
aas
ja
push
repz
cmp
push
mov
push
in
movsb
jne
and
pusha
inc
xor
shlb
ljmp
hlt
clc
inc
mov
popf
bound
mov
adcl
imul
xchg
mov
inc
push
lea
xlat
cmpsl
jns
fnstenv
pop
xor
or
xchg
jl
dec
aaa
ljmp
xor
inc
or
js
pop
push
inc
push
or
icebp
movsb
mov
inc
aam
out
mov
pop
jnp
mov
imul
and
xor
add
ds
mov
scas
jb
sti
sbb
mov
xor
push
or
fnstcw
pop
inc
adc
mov
rclb
cmp
pop
jl
cwtl
and
dec
sub
outsl
add
mov
loopne
sbb
rcll
sbb
test
ret
repz
add
cmpsb
cwtl
xchg
or
pop
xor
mov
pop
cmp
mov
xchg
pop
xor
pop
shrl
sub
stc
pop
mov
sahf
roll
xor
dec
mov
dec
mov
cwtl
jne
shrb
xchg
mov
test
mov
and
inc
sti
mov
adc
push
dec
mov
loopne
mov
imul
add
test
cmpsl
sbb
or
scas
add
mov
pop
scas
cld
pop
xchg
pop
or
repnz
xor
pop
xchg
inc
or
lea
jle
in
outsl
mov
stos
mov
fwait
rorl
mov
mov
ja
sarl
push
and
fmul
xor
xchg
inc
push
lcall
ja
in
push
cli
mov
fwait
inc
lcall
adc
nop
mov
outsb
aam
popf
cltd
xorb
jle
loopne
and
es
jmp
out
lcall
mov
lods
lea
push
inc
adc
push
jge
cmp
pop
push
out
test
fbld
out
sbb
out
divl
test
jp
test
pop
push
xchg
or
sbb
popa
popa
in
adcb
popf
in
fdivrs
jge
inc
out
pop
out
std
jne
push
mov
or
std
pop
cld
add
mov
dec
cmp
pop
jg
cmp
fnsave
rol
sub
fsts
clc
and
push
pushw
push
xlat
insb
jecxz
jmp
rcrl
ja
push
call
dec
pop
cmc
mov
adc
dec
xchg
sbbl
mov
push
xor
lea
and
xchg
xchg
push
dec
lcall
shlb
and
iret
xlat
jg
shrb
push
popf
push
sbb
mov
pop
repz
pop
inc
fdivl
nop
push
or
xchg
cs
cs
xchg
lds
jnp
pop
pop
je
mov
push
bound
lret
int
cmpsb
ror
push
les
pop
scas
loopne
ret
xorl
push
or
pop
adcb
aaa
cmp
in
push
in
sub
pop
jg
dec
movsl
stc
stos
push
push
sbb
mov
mov
inc
inc
out
push
popf
loopne
xchg
xchg
into
das
out
xchg
ret
repz
sub
inc
icebp
sbbl
addr16
lock
xor
ja
jmp
mov
mov
fcmovnbe
imul
mov
imul
in
outsb
cmc
mov
testb
jl
or
stc
lods
mov
into
cmpb
fcoms
fsubl
inc
mov
jmp
iretw
xchg
xchg
sub
fsubs
addr16
cli
js
int
mov
lds
fsubl
fwait
jg
into
pop
jmp
mov
faddl
mov
arpl
push
adc
xchg
inc
jae
sbb
lahf
ss
mov
iret
call
or
cmp
sahf
pop
jne
lea
xchg
sub
adc
mov
add
into
xchg
push
shlb
mov
in
out
out
test
or
cli
or
sub
mov
jge
mov
loope
dec
add
data16
data16
and
test
test
mov
shrb
inc
hlt
sarb
mov
push
in
loopne
leave
mov
lock
mov
xchg
add
adcb
mov
adc
jo
lcall
cli
mov
cmpsl
aaa
fcmovnbe
test
pusha
repz
sarb
pop
mov
mov
lock
add
add
xrelease
jns,pt
adc
aam
and
adc
push
sub
ds
ds
jne
cmp
insb
xchg
pop
xchg
sub
mov
filds
shlb
push
xor
mov
test
cmpsb
or
xlat
sti
insb
add
dec
mov
orl
aas
aam
data16
into
cmc
pop
daa
lock
and
jnp
inc
mov
cltd
int
rclb
and
sbb
ds
cmp
pop
repz
jp
pop
jecxz
iret
adc
cwtl
das
imul
pusha
movsl
mov
es
xchg
sub
ja
or
mov
xor
xchg
sub
push
into
mov
popa
outsl
sub
add
xchg
cs
and
jg
jecxz
insb
sbb
adc
out
dec
cwtl
das
cmp
push
ljmp
in
pusha
and
shll
mov
repz
ja
adc
ds
cmpsl
xchg
sbb
aaa
scas
cmp
stos
dec
jbe
ja
je
mov
fists
sbb
repz
pop
in
mov
mov
stos
mov
in
cltd
fwait
xor
mov
mov
pop
cmp
mov
sbb
inc
add
adc
xchg
sub
out
and
das
imul
cmp
sti
cltd
shrb
sbb
cmp
scas
mov
scas
inc
inc
int3
arpl
mov
sbb
cli
inc
mov
mov
pop
std
xchg
mov
pop
jecxz
mov
xor
pop
and
mov
sbb
stos
inc
and
inc
mov
cmp
cmpsb
cmp
xchg
insb
and
pusha
jle
jle
pop
loop
xor
rclb
nop
daa
xchg
test
pop
icebp
sub
xchg
dec
stc
jno
stos
inc
dec
sbb
or
push
ljmp
cmc
mov
adc
movb
popf
xor
subl
fwait
stos
pop
out
jp
testl
shl
mov
in
or
ja
add
cmpsb
cwtl
push
mov
inc
repnz
fnsave
std
xchg
dec
mov
pop
mov
push
fsubrs
iret
xor
mulb
push
xchg
addr16
ja
add
push
call
sti
hlt
das
sub
leave
pusha
clc
scas
push
movsl
and
pop
sahf
xor
mov
dec
add
pop
das
loope
jno
into
imul
lret
mov
int
shrb
aad
xchg
inc
fstpt
push
push
jmp
xor
cmp
pop
repnz
sbbb
fmull
jl
loopne
test
fcmovbe
mov
incl
pop
scas
xchg
pop
iret
data16
cmp
sbb
inc
out
test
xlat
xor
notb
testl
test
pop
push
dec
jecxz
jl
daa
outsb
sbb
cmp
fidivl
aam
dec
push
and
jle
mov
stos
daa
xchg
test
scas
cmp
inc
mov
dec
mov
pop
inc
mov
jne
push
jmp
sbb
mov
mov
xchg
mov
xchg
in
cmp
ja
dec
insl
cmp
sub
cltd
pop
xor
dec
xor
pusha
add
into
ds
call
test
pop
icebp
pop
gs
xchg
stos
xor
xchg
testl
iret
fdivl
or
and
flds
into
gs
push
bound
pop
and
lcall
inc
sub
dec
push
out
aas
fcmovb
pop
adc
mov
mov
xchg
sub
add
negl
pop
jae
dec
in
sbb
dec
stos
fwait
xor
pusha
negl
mov
mov
push
sub
das
push
mov
not
push
ud2
jae
jge
dec
loope
sahf
scas
inc
adc
mov
dec
pop
cmc
jno
cmp
mov
std
xchg
dec
aad
push
in
ss
dec
loop
mov
adc
ret
or
popa
clc
test
shrl
xor
mov
ret
and
add
pop
mov
mov
icebp
ljmp
pushl
push
orl
inc
xchg
mov
cli
xchg
imul
and
mov
cmp
ss
fadds
cltd
sbb
mov
fnsave
in
lock
mov
adc
adcb
scas
mov
dec
loope
xor
sub
sbb
mov
push
sub
mov
adc
add
xchg
jb
inc
fmul
xchg
sbb
mov
push
ljmp
test
sub
cmp
sub
int
lds
dec
dec
xchg
cmp
mov
mov
dec
mov
push
loopne
xchg
test
mov
fidivs
test
in
jo
push
in
lods
pop
les
into
push
jmp
daa
loope
push
lret
hlt
mov
out
mov
mov
imul
inc
xlat
or
mov
popf
test
mov
into
push
enter
leave
pusha
cmpsl
arpl
mov
sub
int3
aas
mov
push
or
mov
pop
out
and
push
scas
inc
push
out
inc
cmc
mov
xor
push
gs
jecxz
std
and
imul
xor
sti
sahf
jne
mov
push
aaa
into
jge
pop
sahf
pop
adc
cmp
xor
push
jmp
push
sub
packuswb
pop
shlb
out
imul
pusha
decb
cmpsl
nop
pop
cmp
nop
and
xchg
jmp
mov
adc
pop
nop
daa
dec
xchg
sbb
pop
jae
inc
mov
pop
rep
inc
pop
repz
push
out
pop
and
cmpsl
xchg
popa
clc
icebp
mov
push
es
ret
inc
ret
je
cld
popf
pop
lods
inc
dec
cs
imul
lds
sub
jo
dec
loopne
xchg
enter
push
out
and
xchg
mov
xchg
sub
scas
inc
cmp
vminss
dec
insb
mov
je
out
popa
push
dec
out
cmpb
add
and
fsubrs
mov
shrb
iret
mov
add
rcll
cltd
jecxz
mov
adc
test
cli
or
call
adc
mov
mov
mov
lods
popa
add
xchg
sub
push
lods
insl
xchg
imul
sbb
divb
sub
gs
push
loope
fcompl
inc
jo
xor
jp
inc
lahf
jno
les
inc
pop
js
lcall
and
mov
cld
call
add
or
lret
fiadds
test
imul
inc
and
cmp
fwait
xor
fidivl
jnp
repnz
clc
xchg
sub
mov
mov
mov
jge
mov
testb
inc
xchg
sub
jnp
imul
data16
mov
push
push
lcall
shll
xchg
les
shlb
jbe
test
jno
pop
mov
std
or
iret
scas
ret
int
mov
xor
xchg
push
xchg
xchg
fs
push
ret
pop
mov
fsubrs
fcomp
jb
pushl
inc
int3
adc
cmp
repnz
insl
rclb
daa
cltd
loope
sub
mov
enter
test
xchg
ret
dec
cltd
xor
mov
pusha
cs
jnp
push
fwait
xor
cmp
jne
pop
dec
xchg
fidivl
outsb
mov
xor
mov
mov
aad
filds
ds
inc
mov
imul
lock
pop
mov
addr16
jne
cmp
into
sbb
jg
cmp
and
mov
jb
cmp
fs
mov
in
sub
pushf
sti
xlat
daa
mov
pop
sub
arpl
into
std
xchg
add
or
and
sub
movsl
inc
loopne
aaa
push
sbb
mov
shrb
inc
mov
aaa
xchg
cmp
ret
inc
mov
pop
not
outsb
es
cmpsb
mov
popa
clc
inc
fstpl
mov
hlt
mov
out
ret
dec
cmp
aas
jae
and
sub
inc
dec
stc
and
dec
and
pop
xor
xor
pop
mov
pop
push
jg
faddl
mov
inc
push
jmp
ss
call
mov
add
scas
inc
jle
out
jae
mov
sub
cltd
xor
dec
mov
addb
pop
mov
mov
cmpsb
dec
int3
add
lret
and
int
sahf
es
sarl
add
mov
cmp
mov
cmp
movsl
fldenv
or
and
xchg
sbb
dec
lret
outsb
and
mov
ja
dec
imul
jnp
sub
add
pop
and
jno
mov
aas
js
jg
mov
inc
mov
mov
push
mov
push
popa
sub
or
cmpsl
test
incl
dec
lea
insl
jmp
out
cwtl
or
cmc
and
fidivrl
rclb
push
test
pop
cli
pop
lods
cli
push
and
fwait
add
pop
test
jno
subb
mov
xchg
mov
pop
add
xchg
arpl
or
aaa
lahf
dec
lods
pop
push
sbb
dec
cmpsl
pop
mov
inc
sbb
jle
cmp
and
jnp
call
cmp
icebp
ds
fwait
enter
loop
pop
mov
bnd
inc
shl
dec
aad
ret
jmp
mov
pop
mov
callw
stos
sbb
lahf
push
out
rcl
mov
mov
pushf
icebp
dec
in
mov
push
jmp
pop
int3
jo
jmp
cmpsl
dec
mov
jb
data16
add
pop
mov
inc
cld
xchg
jb
xor
fstpt
jns
push
push
fsubrs
stc
sub
pop
push
icebp
inc
int3
dec
movsb
sbb
xor
push
data16
mov
aaa
pop
mov
add
push
sub
mov
dec
xchg
adc
insb
xor
es
dec
popf
xor
loope
dec
shlb
call
mov
mov
mov
xor
lods
xor
je
into
adcb
test
xchg
mov
xchg
popa
fdivrs
call
or
nop
inc
mov
push
mov
sbb
je
inc
inc
adc
mov
pop
add
outsl
cmp
shrb
pop
mov
push
pop
xchg
jl
cmp
xchg
mov
ret
sbbb
scas
fbstp
bnd
pop
mov
fldl
popf
adc
jae
testl
sbb
adc
cmp
popf
les
stos
mov
jns
std
lret
adcl
fimull
stos
jnp
sbb
notl
stos
out
dec
fildll
call
je
mov
das
mov
int3
arpl
repz
lock
xor
enter
mov
dec
jecxz
rol
cmp
subl
ds
and
loope
out
leave
add
fiaddl
aad
dec
mov
lcall
inc
fisubs
ret
ja
cmc
popa
daa
mov
pop
and
stos
outsb
inc
xlat
pop
push
daa
mov
adcb
lahf
inc
xchg
int
std
ss
imul
adcb
repnz
jl
push
cld
pop
add
pop
jae
jge
jns
mov
mov
outsb
xchg
or
ret
mov
popf
push
scas
inc
inc
ja
jmp
scas
stc
and
cld
xchg
rorl
jg
xchg
sub
push
popf
addr16
xor
dec
mov
lds
fisubrl
mov
imul
push
jmp
add
adc
mov
mov
inc
int3
arpl
mov
cli
push
xchg
sahf
scas
mov
test
jg
cmpsl
out
test
mov
mov
cmp
imul
sahf
mov
int3
and
int3
arpl
sub
shlb
rclb
mov
popf
outsb
add
mov
adc
mov
cmp
outsl
mov
xrelease
sbb
jne
xlat
mov
sub
ja
mov
cwtl
das
mov
gs
mov
fwait
xsha1
cmpsb
or
pop
hlt
pop
adc
sub
loop
fs
arpl
fnstcw
leave
pusha
dec
adc
movl
hlt
sbb
out
xchg
sub
ret
jp
mov
xchg
hlt
dec
test
inc
fisttps
sub
pushf
ja
icebp
mulw
mov
inc
int
vandnps
insl
mov
cmp
insb
and
loop
sbb
enter
insl
jmp
fnsave
adc
sub
dec
loop
dec
add
test
or
out
xchg
push
sub
mov
jno
iret
shll
es
enter
pusha
mov
sub
adc
fwait
xor
xor
loopne
sub
jge
scas
or
or
push
in
inc
sub
lods
aas
popf
stos
inc
cs
dec
fists
mov
xbegin
sbb
int
dec
leave
pusha
insb
insb
das
push
lea
frstor
les
aad
subl
sahf
ds
jns
in
test
lcall
lods
cmp
xchg
fidivl
outsb
add
mov
les
add
xchg
pop
lock
mov
push
mov
sbb
rclb
in
test
lods
outsl
push
sti
dec
cli
xchg
pop
sbb
popf
dec
jnp
scas
inc
outsb
adcb
fs
inc
pusha
add
cmp
mov
cwtl
stos
push
jmp
or
cs
ficomps
insl
add
xorb
cmpsl
ds
mov
xchg
cli
add
test
sbb
adc
jmp
or
add
mov
mov
add
mov
xorb
inc
fcoms
cmp
or
pop
lret
bound
scas
mov
add
fsubrs
cmp
pop
repz
jnp
adc
jle
add
sub
lret
cld
cli
iret
data16
insl
add
dec
int
adcb
test
ret
pop
xlat
repz
lret
clc
sahf
xor
rcr
loope
in
icebp
cmp
add
xchg
sub
mov
popa
or
mov
lcall
outsb
add
mov
je
dec
loopne
xchg
testb
dec
xor
push
dec
pop
repz
ja
fildl
push
mov
fs
xchg
pop
push
mov
fistl
lret
adc
jg
insl
inc
xchg
xchg
pop
sahf
mov
inc
xor
cwtl
dec
lret
lcall
inc
mov
ss
xor
and
shl
lds
hlt
aad
sub
add
aam
jle
call
and
xchg
sub
or
insb
cmp
mov
and
fnstenv
jbe
push
mov
loope
aam
hlt
mov
shl
in
insb
add
add
nop
xor
dec
ret
mov
adc
xchg
pop
lock
pop
and
sarb
mov
inc
mov
stos
mov
fbstp
enter
enter
lods
fsubs
lret
jns
test
xchg
sub
jmp
cmp
ja
sub
lock
arpl
cmpb
and
arpl
mov
shrl
shrb
mov
daa
mov
cs
jp
or
xor
sub
leave
pusha
cltd
dec
addr16
cmpsl
mov
dec
jecxz
inc
lahf
ss
cmp
adc
mov
mov
mov
es
mov
sub
sub
add
stc
jne
xor
pop
mov
test
add
jge
scas
call
ds
xchg
push
call
mov
fisttps
insl
xor
jecxz
fcmovnbe
push
inc
pop
repz
ss
pushf
mov
push
jmp
rcll
sbb
push
push
xchg
sub
outsl
push
loope
hlt
mov
or
mov
jns
shrl
dec
ja
les
mov
mov
jecxz
pop
aad
inc
fmul
push
sbbb
dec
imul
push
xchg
push
icebp
add
mov
cpuid
pusha
mov
push
aam
mov
inc
std
stos
inc
loopne
test
xor
rorb
imul
popf
loop
adc
repz
mull
inc
fadd
or
mov
mov
icebp
cs
ds
in
dec
mov
or
in
mov
add
stos
xor
sbb
fnstenv
jbe
mov
mov
or
int3
cmpsl
xchg
add
cmc
mov
inc
int
or
push
enter
dec
mov
pusha
out
imul
outsb
add
pop
fisttpll
mov
add
jge
addr16
loopne
fiaddl
jbe
add
fstps
arpl
int
xor
mov
push
pop
jae
cmp
push
mov
xor
jl
xor
ds
inc
push
jb
and
cwtl
mov
jbe
mov
xchg
arpl
addr16
cwtl
adc
shlb
hlt
in
or
sbb
pushf
outsl
xor
cmp
jmp
enter
and
inc
sub
pop
jmp
daa
sbb
xchg
lret
les
loopne
rorl
test
je
push
into
push
or
push
call
es
ss
pusha
je
pop
xor
sbb
inc
push
jge
pushf
push
lods
pop
dec
sbb
lods
inc
mov
pop
call
cmp
pop
pushf
push
add
pushf
stos
enter
mov
mov
or
sar
pop
test
icebp
std
dec
mov
in
lcallw
loopne
and
fwait
movsl
xchg
jbe
and
ljmp
fdivrl
xchg
lret
stos
es
sbb
push
fsubl
jmp
mov
jo
dec
mov
mov
out
push
adc
test
stos
xchg
inc
fmuls
int3
add
mov
les
les
pusha
pushf
mov
repz
or
popa
clc
or
add
push
cmp
pop
in
xorl
ja
in
imulb
lods
adcb
mov
fisttpl
test
sub
push
mov
sti
fwait
jne
inc
jecxz,pt
jecxz
pop
rclb
inc
aad
dec
lock
add
scas
jl
adc
mov
mov
test
mov
popa
add
jno
and
ficoml
mov
cli
outsl
mov
mov
push
lds
cld
xchg
aad
cltd
xor
imull
lds
sub
push
jp
cmp
push
or
mov
mov
add
jnp
mov
cmp
push
sbb
pop
sahf
enter
mov
lcall
in
mov
and
mov
xor
outsb
add
jl
mov
sti
int3
cmp
cmovo
jle
ficoml
inc
pop
mov
mov
cmp
pop
insb
lcall
je
addb
in
xor
test
arpl
adc
sbb
pop
mov
les
sar
repnz
mov
in
jg
mov
out
outsl
fdivrs
clc
inc
fldcw
sub
mov
lret
data16
cmc
jns
ret
dec
push
pop
repnz
outsl
ss
int3
jns
jmp
test
rcrl
sti
aas
cli
xchg
sub
sub
dec
inc
fnstcw
andb
fstpl
cmp
in
mov
sub
les
aas
test
in
mov
loopne
xor
push
outsl
push
ja
sbb
bound
leave
out
xchg
pop
push
cmpsb
inc
enter
xor
pushf
mov
je
repnz
pop
mov
xchg
test
roll
push
inc
cs
cmpsl
les
push
loop
adc
sbb
cltd
dec
sub
imul
iret
inc
mov
js
mov
jp
sub
add
shrl
mov
out
outsl
mov
or
cmp
mov
mov
mov
outsl
movsl
fidivrs
arpl
sub
or
cli
fs
test
pop
out
xchg
js
mov
and
cwtl
movsl
arpl
mov
ljmp
repnz
out
xchg
mov
mov
jg
sahf
add
mov
or
sbb
or
pop
sahf
pop
xchg
daa
add
in
xchg
sbb
lret
lea
pop
cli
mov
xchg
xchg
dec
or
mov
sbb
add
jge
fsubl
mov
adc
mov
mov
jnp
repnz
shll
cmp
movsb
outsb
icebp
xor
jg
mov
js,pn
mov
jno
inc
cmp
lret
orb
fs
movsb
or
sbbb
movsl
cmp
bound
ficoml
xchg
jp
pop
mov
fxam
jnp
ljmp
call
dec
fs
test
sarl
aaa
xor
mov
clc
push
and
cld
mov
aam
lsl
rorl
add
bound
loop
subl
jns
mov
lahf
je
mov
ret
sbb
fidivrl
jns
push
mov
push
sbb
nop
xchg
sub
ret
cmp
add
icebp
sub
xchg
mov
aas
push
imul
popf
xchg
push
ja
xchg
fimuls
imul
call
leave
cmp
adcl
push
loope
inc
push
stc
mov
sub
xchg
mov
icebp
jnp
mov
cmpsl
in
add
adc
push
jmp
imul
mov
pop
rcrl
dec
fsubrs
aas
pop
mov
inc
lea
sbb
sahf
xor
xor
cs
lds
sbb
xor
out
rcr
xchg
mov
mov
sbb
mov
orl
stos
mov
hlt
xchg
mov
cmp
fsub
add
push
out
xchg
adc
mov
xchg
or
lcall
and
arpl
mov
lock
daa
mov
push
addr16
lret
mov
jg
ret
sub
data16
pop
testl
adc
mov
test
popf
ret
dec
xor
push
dec
imul
cmc
sbb
inc
cmp
dec
imul
shrb
insl
add
lea
sbb
pop
nop
xor
and
out
mov
dec
sbb
movsb
aas
lret
aaa
pop
stos
std
cmpsl
xchg
jl
arpl
bound
jl
shrb
stos
fidivrl
pusha
mov
popa
fbstp
mov
or
stc
testb
lea
lock
enter
ret
mov
mov
inc
test
cmp
push
mov
sub
pop
mov
push
cwtl
into
mov
ss
mov
pop
add
mov
jo
xor
add
es
mov
xor
push
lock
enter
fmuls
dec
inc
test
cwtl
add
cmp
dec
imul
ljmp
or
mov
stos
mov
push
or
loop
mov
test
mov
subl
mov
fisubl
movsb
jle
dec
sub
dec
jae
xchg
pop
pop
leave
pusha
nop
inc
dec
cmc
andb
fnclex
sbb
push
cli
pusha
mov
pop
ret
xlat
bound
insl
lods
jle
stc
sub
add
push
sbb
movsl
ljmp
js
jno
cmpsl
dec
loope
leave
movsb
xor
lcall
out
fdivr
xchg
or
test
lret
xchg
scas
mov
popf
mov
loopne
popf
rcl
xchg
cs
je
dec
data16
dec
aam
shll
mov
add
xchg
fildll
cmp
idivl
test
jno
jg
cmpsl
data16
fnstenv
cli
fdivs
pop
stos
push
xor
pop
shlb
mov
nop
lret
aas
push
test
cmpsl
pop
cmpsb
iret
inc
cmc
sti
movsb
mov
pop
pop
jge
push
dec
lods
sbb
push
test
popl
cmp
cltd
ja
es
pop
inc
push
loopne
test
jle
inc
or
aas
sub
aam
jo
jg
jbe
sub
push
push
mov
js
inc
aad
and
and
imul
repz
fldenv
scas
xchg
mov
enter
sbb
imul
repnz
jp
or
cmpsb
sbb
sbb
jae
andb
mov
ja
into
dec
in
lret
mov
ret
enter
pop
add
sub
mov
inc
gs
cli
movsl
cmp
cld
jne
ja
pop
jbe
decl
scas
sub
ret
cmp
push
fwait
dec
push
insb
les
ss
cwtl
xor
mov
nop
and
inc
rcrl
insl
or
jo
xchg
xchg
push
inc
imul
push
outsb
ret
cmc
push
insb
push
adc
sub
lea
test
daa
mov
stos
mov
jl
fxch
or
add
in
test
imul
movb
dec
daa
lahf
aas
mov
dec
dec
push
mov
push
mov
fildll
divl
sbb
sbb
push
sub
and
push
mov
inc
outsl
push
call
shl
cmp
pop
ljmp
pop
add
xchg
ss
cmp
iret
jo
and
xchg
xchg
jge
dec
or
xor
dec
test
mov
xor
mov
xchg
sub
test
or
addr16
push
sub
lock
fnsave
mov
push
pop
stos
inc
test
rcrb
bound
cmpsl
fsubrl
or
cmp
daa
mov
faddl
outsl
test
push
repz
xchg
hlt
mov
fidivrl
scas
jb
pop
mov
mov
aaa
jmp
jne
push
scas
cld
jne
lahf
imull
and
mov
jmp
cli
xchg
sarl
inc
movsb
notb
std
sar
inc
loop
adc
leave
call
jo
mov
fisubl
fidivrl
sarb
inc
enter
dec
mov
and
lahf
mov
sahf
fdivrl
inc
or
dec
imul
scas
out
dec
mov
int
es
cmp
pop
inc
mov
adc
mov
inc
cmp
mov
mov
mov
insb
repnz
jecxz
repz
in
repnz
xchg
shrb
adc
into
cmp
add
xor
rclb
movsb
sub
or
cmp
adcl
sub
xchg
sti
xchg
dec
testl
xchg
ds
cmp
in
in
arpl
fildll
iret
lret
jl
cmpsl
dec
cli
mov
sbb
dec
jmp
hlt
aad
mov
adc
adc
lea
xor
sbb
add
loope
pushf
lcall
scas
lcall
mov
inc
sbb
sub
out
dec
aas
stc
dec
pop
adc
cmp
jmp
sub
rclb
lods
loope
dec
outsl
xor
hlt
jecxz
inc
cmpb
sub
shll
xchg
cmp
and
outsl
negb
cmc
imul
insl
ja
xor
lock
dec
cld
stos
stc
push
rol
repz
adc
cli
mov
cwtl
pop
rcl
fstl
out
xchg
add
cwtl
movd
xchg
es
mov
jp
inc
test
jmp
mov
sbb
cltd
jg
mov
pushf
mov
cmpsl
sub
fidivs
mov
push
sti
push
stos
and
pop
lcall
and
pop
lret
stos
dec
nop
fildll
xor
xchg
cmpl
adc
lahf
adc
imull
dec
cltd
sbb
dec
mov
pop
or
add
les
xchg
push
mov
fstl
repz
adc
jbe
jge
sti
dec
testl
scas
inc
fidivl
movsl
pop
mov
fwait
xor
stos
mov
lret
push
popf
jae
call
rol
lock
clc
repnz
inc
cmp
iret
mov
fisttpll
nop
jecxz
shl
rcll
cltd
cmp
cmpsl
sbb
rorl
sbb
cmp
jnp
sbb
mov
push
lahf
push
fwait
mov
pop
mov
inc
sub
jb
sub
jne
loopne
inc
dec
out
pushf
movb
push
mov
mov
jecxz
xor
pop
add
xchg
dec
es
subb
mov
in
add
out
cmp
mov
lret
cmpsl
data16
jno
xchg
aaa
xchg
sub
adc
jns
fcomps
test
jl
mov
out
int3
dec
jno
sbb
adc
insl
shr
and
mov
ret
andb
daa
loopne
sub
xchg
xor
push
pop
popa
adc
jo
cmpsl
jnp
push
ret
jb
mov
add
dec
or
dec
xchg
dec
pop
fs
xchg
out
loope
iret
data16
in
mov
push
push
sub
int3
mov
adcb
or
out
lds
cmpsl
inc
and
jge,pt
addb
pop
mov
jb
bound
pop
push
cli
pop
inc
data16
xor
mov
pop
in
decl
jmp
je
xlat
or
call
xchg
pop
push
mov
jno
dec
push
out
lds
mov
sub
mov
fsts
xlat
int
sarl
fsubrl
sahf
pop
xor
push
jmp
push
movsb
inc
mov
fbstp
enter
out
xor
call
loopne
loope
mov
mov
xlat
test
mov
rolb
cltd
sbb
pop
mov
ja
inc
test
xorl
int
cld
push
stos
mov
adc
loop
icebp
jae
xor
or
jmp
jo
push
dec
sub
hlt
mov
pop
sbb
mov
nop
popf
call
call
lahf
mov
shll
jae
out
push
and
jo
jbe
mov
jecxz
adc
cmp
or
and
addr16
mov
mov
cmp
addr16
daa
icebp
out
mov
pop
xlat
call
pop
push
and
inc
push
xchg
fldl
pop
scas
cmp
sbb
pop
sbb
push
lods
sub
pop
int
xchg
sub
pop
pop
outsl
cmp
sub
mov
or
cmp
adc
scas
mov
enter
ret
dec
ret
repz
out
or
fisubrl
and
in
push
push
aas
xchg
xchg
sbb
pop
ss
pop
pop
xor
inc
xchg
je
sub
loop
mov
jnp
ret
lret
jge
mov
les
sub
mov
mov
push
imul
jp
int
cltd
sub
jmp
outsl
nop
push
pop
ret
enter
inc
mov
cwtl
mov
push
inc
fnsave
cmp
or
cmp
mov
add
mov
jo
jmp
rcl
xchg
mov
sbb
dec
gs
fucomp
adc
adc
push
loope
cli
and
je
dec
sahf
push
popa
insl
or
roll
dec
and
out
enter
cltd
orl
dec
insl
jbe
push
lret
push
jle
push
cmp
scas
pop
push
cmp
dec
mov
xchg
and
fsts
pop
inc
clc
sub
sub
fcomp
adc
fisttpl
and
mov
mov
lods
xor
call
mov
fwait
movl
repz
jge
pop
ret
or
xchg
sub
jmp
lahf
aas
pop
push
and
pushf
jge
xchg
arpl
pop
sahf
enter
xchg
out
xor
pop
mov
fiaddl
aas
mov
xor
dec
les
pop
mov
push
xchg
outsb
inc
dec
into
jno
ss
sub
mov
lods
xor
pop
dec
test
sub
ret
in
out
decl
outsb
mov
dec
sbb
dec
ret
out
push
out
and
lods
scas
aam
jp
aam
cmpsb
out
and
ljmp
mov
sahf
xor
push
inc
push
arpl
sub
imul
jmp
pop
clc
ret
in
lea
into
scas
ror
popa
add
daa
call
out
int3
mul
addr16
ds
mov
rcrb
xorl
add
aaa
rcr
sub
sbb
add
aas
adc
cmp
shrb
es
popf
mov
out
cwtl
movsl
push
insb
mov
std
sbb
in
adc
adc
into
sarb
inc
and
ljmp
iret
inc
add
jmp
lds
icebp
insb
cmp
negl
jp
out
xor
xchg
test
mov
push
add
pop
push
xor
test
enter
dec
adc
inc
mov
jns
orb
dec
adc
dec
pop
cmp
test
inc
cmpsb
mov
ret
sub
jl
cmp
mov
and
pop
adc
clc
sbb
sbbl
xor
popl
jno
pop
mov
jae
test
jmp
js
neg
testl
stos
push
or
rcrl
pop
cmpl
lods
mov
arpl
dec
popl
popa
lea
clc
fs
pop
sub
mov
cmpsl
sarl
lock
or
popf
rol
jecxz
sbb
sub
jge
sub
imul
cmc
pop
mov
cmc
pop
jl
jecxz
xchg
push
into
and
out
insb
mov
icebp
and
and
test
cltd
popa
ret
cmc
es
rclb
call
iret
xchg
fiadds
cmp
push
fs
out
adc
in
mov
in
and
xchg
shl
pop
push
popf
gs
out
and
fimull
ret
xchg
mov
or
jle
mov
iret
dec
jns
sub
adc
ja
and
pop
push
or
iret
push
and
push
stos
loopne
movsb
clc
inc
dec
mov
xchg
ljmp
les
mov
push
push
push
movsl
sbb
mov
in
rorl
insb
mov
enter
push
sub
sub
cld
pop
aaa
dec
pop
imul
cmp
sub
nop
add
inc
inc
fdivs
insb
add
inc
fsts
jnp
xor
dec
mov
loopne
inc
mov
fsubrl
dec
call
or
nop
data16
push
jl
decl
push
ds
ret
sbb
iret
paddd
xor
xor
or
jecxz
jae
and
dec
and
jns
push
or
rol
or
pop
jo
mov
ret
add
in
adc
imul
push
mov
popa
mov
cmpsl
ds
jg
ds
pop
pop
pusha
popf
xor
sub
jp
mov
push
in
add
je
arpl
push
xchg
clc
and
jo
loopne
pop
jge
fcoms
shll
push
es
sbb
sti
sbb
dec
scas
divl
pop
pushl
sub
and
hlt
cld
fsub
push
push
and
sub
dec
rcl
jg
insb
add
xchg
pop
dec
cwtl
dec
xlat
sbb
xchg
stos
lock
imul
jecxz
pop
das
lods
mov
insb
cltd
sub
jmp
fisubrl
mov
data16
add
addr16
sbb
movsl
pushf
cmc
das
sahf
lret
push
sub
sbbl
stos
and
test
push
faddl
push
sbb
in
cmpsb
xchg
cli
or
mov
ja
loope
cmpsl
adc
pop
jnp
cmp
pop
jecxz
pushf
ss
sti
jne
pop
xor
xchg
in
adc
popf
sub
cmp
lahf
and
sarl
pop
dec
adc
inc
or
sub
int3
pushf
ret
aas
jae
jo
in
incl
lods
test
cmpsl
rorl
das
mov
lods
cmc
push
ljmp
call
addr16
push
ja
mov
arpl
cmp
jb
in
and
imul
aad
mov
inc
adc
outsb
add
inc
adc
repnz
test
rcll
test
inc
xchg
xchg
and
jmp
push
mov
insl
sbb
in
push
mov
cmp
dec
insb
adc
testl
adc
lahf
jno
adc
fsubrp
aad
ljmp
dec
nop
stos
jle
scas
xchg
push
or
push
xchg
sub
dec
shll
sbb
dec
mov
test
aad
ficomps
dec
jle
jne
pop
mov
xchg
dec
in
bndldx
sbb
cmp
pop
aad
ds
orl
cmp
cmc
pop
aas
lret
lods
push
pop
and
push
daa
cmp
mov
cmpsb
mov
or
mov
jle
xor
inc
sbb
cmp
fcoms
dec
hlt
xchg
inc
dec
and
shrb
imul
cmp
in
sbb
cmp
outsl
xorb
in
dec
dec
cmp
jne
lcall
jne
or
fisubrl
fstl
lods
mov
cli
sub
push
mov
mov
inc
pusha
jmp
aam
sbb
lret
test
dec
sub
int3
out
sbb
add
dec
nop
pop
push
push
fldl2t
daa
out
mov
mov
jecxz
dec
mulb
and
xchg
push
adc
out
mov
mov
xlat
add
xor
adc
out
xchg
xor
sti
xor
pop
test
hlt
ret
mov
cltd
inc
mov
push
and
test
or
into
cmp
or
mov
lahf
inc
mov
and
nop
inc
fsubrp
movsl
arpl
lods
mov
out
mov
pop
and
loop
mov
sub
mov
inc
mov
add
test
sbb
into
adc
dec
xor
mov
xor
sub
dec
lcall
ljmp
cmpb
shll
add
out
dec
into
enter
mov
lahf
mov
lret
or
testl
mov
imul
std
inc
in
inc
fbstp
sbbb
fcoms
fists
in
cmp
fiadds
lods
cmpsl
aad
ljmp
movsl
adc
rclb
es
js
xor
loop
jle
adc
out
cli
rorb
int3
pop
fsubrs
and
int
lods
int
sbbl
adc
leave
jg
jle
popf
pusha
test
adc
or
pop
in
mov
call
pop
aam
inc
or
sub
and
inc
sub
cmpsl
lea
das
xchg
cmp
xchg
inc
mov
nop
loop
out
adc
adc
aam
ret
adc
mov
push
sub
sbb
in
xor
out
lods
cli
xor
bswap
scas
aaa
es
inc
sub
inc
mov
pop
jo
push
iret
shll
inc
repz
iret
pop
xor
jo
push
in
pop
dec
jnp
push
jl
inc
arpl
xchg
out
lahf
dec
inc
movsb
cmp
lea
pop
dec
daa
jns
test
xchg
cmp
idivl
jb
iret
data16
enter
in
mov
das
xor
cmp
shrl
add
inc
xor
dec
in
lahf
xchg
jno
out
andb
xchg
mov
push
sub
mov
pop
push
mov
xchg
inc
jns
and
add
mov
mov
addr16
imul
int
mov
pop
fwait
jae
adc
sub
jbe
jge
jnp
adc
jnp
inc
inc
jne
loopne
jl
into
fimull
rol
mov
cmp
sub
add
pop
cmpsb
test
or
fdiv
stos
lds
xchg
jb
mov
aad
cmp
call
mov
fnstenv
mov
dec
lods
ja
iret
popf
adc
pop
movsb
xor
loopne
lret
mov
cmp
inc
mov
add
jbe
cmc
das
mov
pop
imul
cli
fs
add
fidivs
imul
adc
jb
xor
sahf
ljmp
mov
adc
scas
inc
cltd
xsha256
cmpsb
push
into
lea
xor
test
sahf
scas
test
mov
push
repz
jmp
movsl
inc
or
stc
sbb
mov
enter
mov
mov
jg
shrb
repz
dec
mov
outsl
or
xor
mov
stc
ljmp
mov
mov
mov
push
sahf
xchg
jnp
jbe
in
inc
inc
out
mov
cmp
shl
pop
adc
cmp
pop
inc
cmp
pop
int3
xchg
loopne
shlb
sub
stos
xchg
add
scas
fnstsw
push
out
dec
xor
and
jne
pop
aaa
xor
adc
ss
sub
add
inc
add
je
inc
faddl
sub
push
pushf
mov
mov
inc
sbb
sahf
movsl
es
clc
push
imul
and
dec
arpl
inc
inc
mov
mov
and
inc
scas
inc
aas
mov
test
mov
in
cmp
rol
jge
mov
cmc
aam
cmp
rorb
in
call
aas
gs
jo
mov
adc
jp
push
mov
imul
jmp
add
or
or
rorl
push
jg
push
or
iret
inc
push
mov
inc
or
aas
jae
in
pusha
bswap
xchg
sbb
lds
jmp
push
jb
pop
sahf
les
and
cli
cwtl
sub
pop
mov
clc
jae
lea
test
push
adc
aam
add
lods
jge
cmc
mov
mov
push
xchg
dec
push
pop
sub
lock
dec
inc
das
roll
mov
inc
stos
into
mov
cld
in
scas
jae
mov
add
nop
and
xor
inc
mov
rorl
movsb
ss
or
push
or
scas
lods
icebp
jp
add
test
test
jns
mov
xchg
mov
jl
aam
adc
sbb
pop
je
mov
repz
sahf
rorb
jle
or
int3
aas
scas
pop
repnz
into
orl
push
xchg
inc
outsb
jg
mov
iret
popf
lods
popa
xor
lods
stos
jmp
ljmp
inc
mov
dec
jecxz
xor
and
scas
lock
jb
adc
mov
mov
loope
enter
shr
cmp
pop
rcl
in
stc
jl
cmpsb
mov
jg
ljmp
jecxz
cmp
jae
mov
jo
inc
pop
repnz
addl
and
je
test
push
ss
fldt
std
stc
popa
lock
leave
jo
jmp
mov
jle
push
sub
jnp
les
inc
jl
frstor
pop
push
fnsave
bound
test
insb
fbld
mov
mov
pop
xchg
sbb
mov
inc
inc
test
sub
ret
pop
push
mov
push
sbb
scas
stos
push
fsubr
aaa
or
iret
loopne
scas
sarb
mov
aaa
testb
ret
repz
adcl
addr16
xor
adc
and
test
pop
cmp
popf
popa
jecxz
or
cmp
hlt
test
xchg
dec
ret
js
pop
sbb
mov
outsb
push
jge
adc
jae
adc
jmp
fbld
mov
push
out
stos
or
sarb
and
xchg
or
daa
or
movsl
mov
in
dec
push
pop
adc
add
shr
movsl
int3
icebp
lret
jbe
stos
cmp
fmull
mov
adcl
push
lret
popa
insb
out
mov
push
cmp
push
mov
push
or
jno
lahf
fisttpl
inc
pop
push
cmpb
mov
faddl
xlat
jbe
lret
mov
fisttpll
mov
cmpsl
xor
pop
jmp
pop
dec
fists
in
push
dec
jno
adc
iret
jmp
out
lock
sub
pusha
mov
dec
or
repnz
sub
insl
pop
xlat
enter
mov
testl
push
nop
mov
icebp
mov
xor
or
mov
movsl
sub
xlat
outsb
push
dec
test
jmp
mov
loope
adc
imul
movsl
fst
cmc
push
out
clc
stos
icebp
adc
add
das
mov
push
mov
test
mov
rcr
fists
test
data16
out
fidivl
les
xchg
pop
mov
aad
iret
sbb
inc
in
add
push
dec
enter
fbld
or
lret
mov
mov
sub
mov
jg
out
push
mov
ret
fildll
push
xor
mov
daa
nop
dec
int
jle
in
sbb
add
rcll
inc
loope
jb
fcmovu
jne
pop
orl
pop
adc
ljmp
adcb
cmp
sahf
ss
xchg
fbstp
inc
popf
out
into
cld
xchg
xchg
loopne
add
ja
movsb
test
add
and
cmp
xor
aad
jnp
cltd
cmc
push
jo
paddusw
test
sti
xchg
push
or
fisttpl
inc
ja
insl
inc
add
mov
insl
arpl
mov
mov
mov
std
inc
movsl
pushf
jmp
rcrb
inc
repz
mov
ficoml
or
xor
xor
lcall
rorl
push
or
mov
sahf
bound
inc
jbe
call
jne
xchg
loope
int3
push
aaa
xchg
sub
jle
or
or
add
adc
les
pop
adc
inc
xchg
jle
xor
movsl
aas
adc
sti
cmp
xchg
mov
jg
lods
data16
inc
cld
cmpl
dec
mov
jae
sub
mov
jl
pusha
int
cmp
inc
xchg
call
incb
mov
dec
out
movsl
fidivrs
pop
js
pop
frstor
xchg
jne
or
jl
fbld
movsl
inc
push
lods
out
push
cmp
test
push
mov
pushf
add
jge
rcl
sbb
inc
add
jns
movsb
mov
sbb
add
cmp
dec
je
fwait
and
sub
inc
jbe
in
mov
inc
andl
xchg
enter
mov
out
movsl
fs
rclb
mov
jno
mov
jg
jns
call
test
fnstenv
fldenv
xorl
mov
pop
ds
cmp
add
xor
mov
gs
fidivs
adc
mov
mov
rcll
mov
fdivrs
mov
push
popf
loope
mov
sub
outsl
pop
iret
push
ss
ficoms
push
mov
add
daa
gs
test
movsb
shr
cmp
shl
dec
imul
mov
mov
lods
lahf
lcall
sub
add
pop
dec
xchg
gs
mov
ret
sub
hlt
cmp
xchg
cmp
aad
outsl
push
jae
mov
addr16
mov
jle
lahf
mov
pushf
sahf
mov
das
in
mov
in
jb
push
cmp
lahf
jp
js
ljmp
pop
rclb
insl
lret
jmp
sbb
cmp
pop
and
pop
mulb
push
jmp
je
mov
loopne
push
ljmp
cmc
test
mov
out
dec
ljmp
sbb
fwait
pop
inc
test
popf
jno
sbb
mov
arpl
repnz
fists
and
cwtl
pop
xchg
imul
mull
mov
inc
into
cmp
dec
repz
pusha
adc
dec
cmc
cmp
iret
inc
in
in
or
push
push
ljmp
jne
jge
rolb
jne
jnp
adc
sbb
in
int3
imul
pop
inc
mov
add
sbb
insl
and
jge
or
pushf
sbb
cmp
add
pop
push
sub
mov
and
push
adc
and
pop
rep
dec
mov
cmp
or
loope
push
pop
mov
push
push
mov
lods
pushf
or
adc
outsl
cmp
test
out
or
xchg
shl
int
pop
fisttpl
adc
and
jmp
or
dec
cmp
imul
inc
fsubs
adc
into
jle
lahf
out
insb
jle
int
callw
loop
int
or
mov
xchg
add
enter
xchg
sbb
cmpsl
popf
or
fistpl
scas
or
mov
inc
and
enter
and
dec
add
jp
arpl
loop
aaa
icebp
adc
repnz
lods
rcll
mov
rcll
imul
imul
jl
add
lret
and
mov
cmpsl
push
ja
int
std
cs
cs
jle
jl
jae
mov
or
fnsave
mov
push
orl
sub
out
mov
call
or
inc
testl
xor
pushf
cmp
in
sub
lds
push
dec
movsb
push
fisttpl
dec
lret
xor
xor
pop
imul
sbb
add
xchg
insl
push
mov
cmp
addr16
dec
inc
ret
mov
mov
push
jne
cmpsb
pop
insb
mov
mov
lods
mov
push
int3
int3
arpl
jno
add
xchg
mov
in
dec
push
popa
jae
imul
cmc
dec
out
loopne
fcompl
shl
mov
pop
loope
mov
iret
jne
inc
iret
lock
frstor
icebp
stos
andb
aam
push
nop
mov
imul
xchg
dec
dec
cmpsl
mov
cs
lds
push
and
inc
xor
popa
popa
in
push
jmp
addr16
std
push
inc
pop
or
cs
mov
test
mov
mov
lahf
xchg
cmp
test
dec
mov
dec
jb
pop
jecxz
mov
jge
mov
mov
in
gs
rcrl
push
xor
cltd
jecxz
pop
mov
sub
mov
inc
ret
add
loop
aad
xor
mov
add
adc
inc
mov
push
imul
scas
in
push
mov
and
stc
clc
jl
dec
cmp
sahf
adcb
xchg
jge
roll
and
mov
int3
arpl
inc
ljmp
lcall
mov
ret
dec
and
sub
fidivl
rorb
push
push
cmp
pop
fidivl
popf
ss
push
stc
or
mov
imul
in
divl
mov
cli
pushf
cwtl
orl
int3
shl
out
cmp
sti
inc
mov
popf
xchg
mov
int
test
mov
mov
pop
hlt
fsubs
xchg
fistl
or
xchg
mov
push
and
jae
lock
pop
stos
popa
fidivs
lret
push
and
jg
lret
movl
jo
mov
pop
test
das
xorb
adc
sbb
jb
sub
and
arpl
data16
jb
mov
loop
addb
and
stc
sahf
mov
pop
dec
or
movsl
daa
xor
jg
jmp
dec
aam
rorl
stos
add
into
mov
dec
pop
imul
sbb
pop
pusha
test
push
mov
and
inc
insl
in
hlt
jno
jno
adc
cwtl
pop
jno
in
xchg
mov
fistps
insl
adc
popa
mov
icebp
call
hlt
js
jno
adc
int
xchg
adc
out
test
xor
mov
cmp
mov
push
mulb
fadd
pop
or
stc
cmp
mov
fsubr
xor
mov
and
adc
es
add
mov
adc
call
xchg
sub
pusha
mov
lcall
out
fiadds
cmp
ss
arpl
mov
ljmp
fsubrp
pusha
test
push
mov
movsl
xor
lcall
aam
aam
xor
fnstenv
sbb
lahf
push
test
jbe
dec
cmp
lret
sub
rcll
mov
clc
sub
arpl
scas
inc
sub
es
dec
in
hlt
xchg
outsl
jecxz
rorb
repnz
adc
stc
dec
daa
mov
loopne
inc
push
mov
sbb
fdivl
cltd
jno
arpl
dec
repz
mov
jae
fldt
rolb
aas
out
sub
pop
lock
add
in
loop
lods
inc
int3
vprotw
xor
mov
jecxz
out
lahf
xchg
jbe
leave
xor
or
gs
sub
jb
data16
xchg
mov
loope
outsb
xchg
xchg
jl
xchg
cmpsb
mov
out
mov
aas
or
test
pop
fiaddl
cs
js
jl
sbb
sub
adc
adc
push
mov
bound
mov
xchg
repz
xor
push
std
call
push
mov
mov
aaa
mov
dec
or
loop
cld
into
lret
pop
mov
fsubl
scas
out
jmp
xor
sahf
xchg
mov
aaa
push
jmp
cmp
pop
xchg
jnp
sbb
sub
sbbl
scas
data16
imul
sbb
push
lods
jle
add
rcll
sbb
jb
adc
push
test
or
lcall
or
pop
icebp
movsb
fcmovnbe
out
jl
mov
imulb
sbb
mov
sbb
pusha
lods
imul
push
mov
popf
xor
out
loop
mov
push
xchg
mov
push
popf
iret
mov
mov
data16
push
or
push
or
outsl
xchg
bound
ret
xor
call
xchg
cmp
xchg
cld
inc
push
out
jae
and
push
outsb
aaa
es
cmp
inc
mov
fldt
fucomi
mov
jl
out
dec
or
dec
in
jl
sahf
lds
insl
mov
add
mov
cwtl
loope
pop
pushf
mov
and
inc
xor
cmc
pop
pop
push
lods
mov
test
adc
daa
xchg
cmp
call
fldenv
push
dec
mov
dec
jmp
in
das
and
aad
dec
pop
xchg
sbb
fwait
bound
rolb
fcomip
mov
and
and
and
imul
push
sahf
ss
pop
adc
das
mov
repz
jge
and
fs
push
xchg
pop
orb
cwtl
aaa
addb
lods
cmp
push
shrb
addr16
mov
mov
dec
fsubr
shl
inc
mov
sbb
test
inc
rorl
push
aam
or
shlb
xchg
jnp
adc
xchg
xor
test
push
push
sub
inc
out
sub
mov
bound
pop
std
and
add
mov
call
cmp
ja
sarb
adc
sub
add
xchg
movsb
gs
out
fdivrs
loope
out
xor
add
sub
inc
cmp
xchg
js
movsb
lea
mov
pop
aad
ja
sbb
or
mov
mov
imul
push
or
and
lds
icebp
mov
mov
mov
mov
les
or
in
mov
jb
dec
mov
xchg
inc
in
out
ret
mov
les
xchg
and
out
inc
cmp
pop
clc
xor
ret
inc
ficoml
int
and
cld
rorb
push
cld
sti
lret
push
adcl
jg
xchg
jle
repnz
lcall
pop
iret
ficompl
jbe
mov
fpatan
cmpsb
sahf
cmp
adc
gs
pop
sbb
stos
dec
imul
ds
add
test
jle
adc
addr16
daa
popa
int3
mov
js
fidivl
push
ja
imul
jmp
or
dec
imul
push
xchg
adc
dec
and
sti
ss
je
sbb
stc
push
cmp
fsubrl
push
xor
call
xor
lcall
lcall
pop
sub
repz
mov
sbb
dec
xchg
in
pop
orb
vmread
xchg
pop
jae
lods
xchg
jecxz
popf
dec
pusha
mov
or
xor
bound
jnp
mov
dec
dec
stos
xchg
mov
and
pop
cld
out
cmp
lock
loope,pt
xchg
push
mov
push
jns
in
cmp
adc
subl
sbb
and
fiaddl
mov
sub
xchg
out
icebp
xchg
mov
pop
jge
jl
xchg
fbstp
cltd
insb
jle
sbb
push
cmp
fisubl
cmp
lcall
mov
fnstenv
ret
pop
jl
push
or
imul
mov
pop
adc
push
xor
sub
cmp
adc
mov
mov
fistps
and
pushf
mov
out
std
xchg
cwtl
push
hlt
addr16
xor
ss
add
pop
mov
rcll
add
decl
rol
arpl
js
inc
or
sub
test
add
es
out
mov
shlb
push
pop
clc
loope
mov
nop
cli
leave
repz
stos
xor
jae
fucomi
test
and
mov
clc
cld
es
fdivrp
leave
push
sbb
frstor
inc
adc
dec
in
cmp
out
out
jp
icebp
mov
cltd
je
lahf
cli
push
dec
adc
in
add
inc
pop
repnz
pop
insl
mov
fadd
push
shrl
and
push
sarb
inc
push
or
rcll
lcall
inc
bound
mov
test
mov
jp
imul
jnp
dec
cmpsb
jmp
jg
outsb
xor
cmp
mov
mov
sbb
push
ret
pop
push
loope
clc
adc
fisubs
cli
xchg
xchg
rcrl
mov
xchg
sub
aam
ret
inc
test
mov
xlat
and
mov
outsb
add
pushf
aad
nop
xor
sbb
sbb
adc
xchg
pop
adc
pop
dec
int3
push
jge
cmp
sbb
or
cmp
aad
push
inc
mov
adc
mov
mov
adc
je
scas
ret
xor
xchg
movsl
cmc
inc
xchg
outsl
xchg
daa
fistpll
loope
lods
scas
mov
sbb
int3
lret
push
rol
rcll
xlat
outsb
and
je
pop
scas
push
xor
pop
int
ljmp
or
test
pop
cmp
fimuls
lret
out
and
inc
add
aam
ljmp
pop
lods
mov
sub
xor
mov
push
jns
mov
cltd
adc
mov
jb
mov
jg
int3
adc
dec
ds
fsubrl
in
xor
or
negl
shl
adc
inc
push
or
mov
mov
and
fistpl
and
lea
cmp
or
jle
jge
or
push
mov
xor
sub
mov
push
in
cwtl
mov
shrl
fwait
or
xor
imul
insl
xchg
lcall
addl
clc
dec
dec
xchg
push
push
insb
ja
inc
sti
xchg
mov
and
out
mov
sub
ficompl
orps
add
cmp
sub
insl
aam
subl
in
test
push
fstl
bswap
nopl
mov
xchg
sbb
mov
push
sahf
ret
in
out
jmp
test
inc
pop
cmc
mov
out
add
or
lock
inc
sub
movsb
fnstenv
sub
aad
sub
cmpsb
xchg
xchg
cmpsl
xchg
dec
idivb
mov
popa
pop
test
jne
call
sbb
iret
and
and
aad
leave
test
push
mov
aad
sub
enter
xor
mov
iret
mov
push
leave
and
push
jmp
sbb
sarb
addr16
mov
mov
xchg
ret
inc
dec
shl
pop
movsb
insl
mov
pop
cltd
xor
or
push
sub
jecxz
add
js
dec
outsb
add
fwait
cld
jle
aaa
scas
mov
cmp
sub
sbbb
cltd
test
sahf
sahf
dec
jmp
mov
jno
hlt
adc
xor
cs
sbb
inc
jne
ljmp
jns
test
insb
adc
fbld
sub
xor
loope
enter
mov
inc
adc
adc
scas
xor
pushf
mov
andl
cmpsl
fs
in
sbb
adc
jge
outsb
mov
sub
fwait
jge
xor
mov
movsb
xor
shlb
and
test
add
cmc
aas
gs
cwtl
lret
xor
jbe
addr16
push
lret
pop
shll
gs
repnz
nop
cwtl
daa
cmpsb
dec
ds
pop
repz
xchg
rorl
loopne
add
push
mov
sti
or
imul
push
mov
xlat
addr16
bswap
jge
mov
int
inc
loope
stos
dec
loop
sti
mov
push
leave
pop
loopne
ljmp
pusha
fs
xchg
sbb
cmc
cmp
dec
in
jne
pushf
ret
adc
xor
or
inc
and
xchg
mov
imul
cmpl
in
push
and
jecxz
cmpsl
xor
in
out
test
inc
sub
ljmp
add
in
mov
xchg
fs
lcall
and
push
test
xor
fwait
ss
int
stc
popf
mov
pop
mov
daa
jmp
sbb
lcall
rcrb
cmp
adc
mov
iret
adc
insb
push
add
stos
daa
and
call
or
adc
test
loope
mov
movsb
add
pop
out
filds
dec
pop
fldl
leave
jno
pushf
mov
into
add
arpl
enter
in
stc
inc
and
cmpsb
mov
enter
int
sbb
cs
cmp
push
call
pop
sub
out
mov
std
push
ljmp
call
aas
mov
les
and
clc
push
xor
pusha
jl
xchg
jns
pop
or
mov
inc
stos
pop
pop
loope
loope
or
inc
pop
push
movsl
mov
rorl
mov
inc
cs
pop
repz
or
mov
popa
clc
and
fisubs
dec
cli
shl
stos
inc
arpl
mov
ds
popa
cmp
pop
dec
call
into
int3
out
sbb
out
mov
mov
mov
and
into
ret
or
jnp
cmp
cmpsb
mov
mov
rcll
cld
mov
andb
push
aad
lds
sbb
nop
int3
data16
jae
adc
sahf
lds
ficoms
mov
subb
jmp
mov
jne
add
adc
mov
push
fbstp
and
jp
adc
imul
mov
jbe
sahf
aam
pop
sub
dec
daa
xor
add
jne
pop
push
jne
icebp
jp
push
adcb
test
push
jmp
imul
repnz
or
jl
adc
jo
mov
das
mov
insl
lret
movsb
nop
mov
or
and
mov
insb
ss
xchg
push
mov
jg
xor
mov
mov
sub
out
sbb
sbb
stos
pop
imul
int3
mov
pop
jne
movsb
xchg
xchg
fbld
jg
sub
inc
ja
inc
call
sbb
fbld
dec
push
xchg
sbb
scas
aas
or
ljmp
push
sub
dec
add
dec
mov
loop
push
cld
xor
fidivl
sbb
imul
fcmovnu
cmpl
ja
leave
sub
es
push
sahf
ret
test
mov
fsubrl
push
mov
jne
mov
sbb
jns
sbb
sbb
add
jnp
cmp
out
cld
sbb
das
dec
int
xor
aam
mov
dec
dec
std
and
test
popl
daa
xchg
sbb
jb
clc
test
pushf
out
xchg
bound
test
fimuls
scas
jnp
rcr
rep
xor
mov
into
sub
imul
aaa
repz
mov
test
rcrb
mov
popf
push
sbb
cmp
lds
mov
xor
cmp
pop
inc
push
fsts
ss
fnstenv
gs
in
push
sti
stos
inc
outsb
or
shrb
ds
mov
xor
pop
popa
sbb
xchg
jp
in
xor
ja
mov
jle
shrb
sbbb
std
or
push
cpuid
loope
int
mov
popf
adc
loopne
jmp
sarl
push
roll
cmp
stos
sbb
aad
inc
fmul
sub
mov
cmp
add
arpl
in
mov
cmc
mov
dec
adc
cltd
jecxz
shl
xchg
adc
fldl
mov
mov
cltd
shrb
lcall
or
jae
sbb
cmp
fldcw
and
push
mov
dec
cwtl
cmc
ret
inc
sarl
sub
mov
arpl
sbb
aam
adcb
inc
sub
rcrl
jno
ss
push
ds
outsb
les
lret
shl
adc
ljmp
rorb
mov
repnz
mov
pop
cld
push
push
pop
jbe
mov
fisubrs
in
rol
push
xchg
mov
inc
or
push
dec
rep
xchg
aas
test
xchg
loop
daa
jle
add
jecxz
sbb
cmpb
out
xor
js
adc
push
imul
std
mov
xchg
add
int3
push
push
leave
mov
ret
sub
or
mov
jge
mov
mov
rcl
add
movsl
xchg
or
mov
mov
dec
mov
cs
movsb
jb
push
les
arpl
sbb
mov
inc
in
xchg
imul
lods
xor
into
jle
ret
scas
lock
fsubs
pop
fnstcw
jno
inc
fldl2t
js
rep
nop
mov
inc
mov
stc
nop
pop
mov
lcall
inc
jecxz
xor
mov
add
and
jmp
xchg
mov
sbb
sub
iret
out
in
cmp
insb
mov
dec
iret
test
in
mov
pop
dec
lret
or
cmp
fisttps
repz
adc
push
push
or
sub
outsb
aad
aad
fists
push
out
dec
xacquire
pop
push
popf
imul
and
ffreep
daa
out
inc
cmp
push
mov
and
or
test
dec
sbbb
insl
cmp
pop
out
adc
jne
frstor
movsb
cmpb
sahf
arpl
cmp
jge
cmp
stos
daa
test
das
rcl
incl
clc
dec
cmp
lret
push
pop
mov
mov
mov
pop
jnp
into
lret
ljmp
cli
push
test
adc
xor
std
push
in
cs
outsb
addb
lret
lods
mov
and
cmpsl
adc
stc
test
mov
pop
sub
add
and
repz
or
pop
sub
repz
adc
xor
rorb
rolb
xor
xor
jmp
inc
loope
ljmp
cwtl
addr16
pusha
ror
push
dec
in
xor
sbb
hlt
cmp
mulb
lea
jle
scas
mov
mov
popf
imul
cmp
frstor
in
sbb
lcall
aas
push
xlat
cmp
test
mov
out
jge
shll
mov
jbe
aad
shlb
dec
pop
add
sub
loope
cmp
ds
les
aaa
add
fcmovne
adc
cmc
inc
ljmp
inc
xchg
mov
rcr
jb
mov
xchg
fistl
shr
jno
mov
ret
std
xlat
outsb
add
push
mov
or
jp
mov
shrb
cwtl
sbb
cmp
cmp
push
lcall
push
adc
jb
xlat
add
mov
leave
sbb
mov
mov
push
arpl
inc
jmp
pop
or
fcompl
in
sahf
js
xorl
incl
dec
cmpsl
mov
in
dec
je
jmp
in
add
or
and
dec
test
dec
aaa
fisttps
adc
mov
stc
and
rcrl
rorb
push
out
popa
inc
aam
test
iret
inc
call
mov
jp
rorb
mov
pop
or
das
loopne
add
repz
jmp
or
js
movsb
cmp
shrl
and
xor
push
add
push
pop
sti
mov
and
loope
dec
dec
xchg
je
scas
adcl
pop
addl
push
in
outsb
mov
and
mov
mov
pop
scas
dec
lods
in
rcrb
decl
incl
fimuls
sub
pushf
lea
sub
dec
repnz
xchg
mov
insb
arpl
jle
fildl
lahf
insl
shr
rcrb
jb
ja
int
cmp
leave
mov
cmpsl
push
add
lods
mov
rcll
montmul
cmpsb
inc
jge
and
mov
sbb
jae
cmp
xor
addr16
push
fsubrs
add
jl
mov
mov
cwtl
xor
xchg
pop
jo
mov
ret
pop
mov
mov
and
repz
in
inc
rcl
hlt
xchg
mov
test
movsl
lcall
and
les
xchg
push
dec
pop
mov
cmp
daa
data16
inc
push
push
sub
in
xchg
mov
aam
test
sub
pop
out
call
pop
inc
xor
dec
lret
ds
and
add
rcrl
jle
cmp
int
mov
or
clc
push
imul
add
dec
or
inc
mov
adc
xchg
test
mov
stos
adc
fisttpll
cld
not
loop
cmc
adc
jle
pop
pop
cmp
cmp
jle
jbe
or
imull
shlb
inc
lret
mov
dec
test
enter
xor
push
jmp
shl
inc
mov
sub
mov
adc
addr16
imul
add
lock
adc
test
out
adc
mov
sub
push
mov
daa
pop
sbb
dec
cmp
fstpl
inc
dec
lock
test
push
dec
inc
cwtl
scas
or
loopne
ficoml
popa
or
mov
jg
xchg
dec
lods
mov
mov
mov
movsb
pusha
fistps
dec
push
inc
outsb
dec
popa
lock
sbb
and
stc
js
fucomi
xor
push
dec
jge
incl
pop
xor
icebp
int3
lret
push
rorb
xor
mov
xchg
push
ss
xlat
jmp
inc
mov
mov
pushf
lods
push
push
sti
jle
mov
sbb
inc
lahf
mov
lods
mov
push
repnz
xchg
clc
xchg
mov
cmp
sbb
ds
call
push
or
ficompl
inc
push
mov
push
dec
in
loope
mov
mov
mov
fstpl
sbb
jge
push
cmp
aam
sbb
pop
pop
lahf
cmp
out
xor
lahf
inc
sahf
in
adc
scas
insl
and
jg
shrb
jns
or
out
icebp
dec
hlt
add
push
pop
cmp
xchg
mov
pop
fs
sbb
sub
and
fists
lods
subb
addr16
pop
push
pop
negl
adc
xchg
clc
adc
mov
push
in
and
out
je
xchg
cmp
imul
std
mov
xchg
mov
lahf
mov
mov
pusha
xor
outsb
rcrb
fildl
gs
hlt
xor
sahf
movsb
pop
sbbl
mov
imul
pop
and
mov
aas
pop
scas
pop
dec
and
scas
xchg
imul
sbb
or
movsl
cmp
pusha
pop
jbe
out
jns
add
lret
jae
mov
mov
push
xchg
dec
xchg
mov
fstpl
jae
lock
cwtl
mov
cmp
push
mov
sbb
aas
mov
outsl
mov
andl
push
icebp
mov
les
cmpsb
xor
lahf
out
scas
push
test
mov
dec
and
xor
movsb
sbb
xchg
scas
fldl
repz
jmp
cmp
les
outsl
loop
dec
dec
xlat
ret
test
inc
jne
outsl
andl
push
loop
sti
or
dec
sbb
adc
push
shr
jl
outsb
std
lea
rol
leave
scas
test
addr16
xor
xchg
int
jmp
hlt
xchg
mov
andl
mov
push
in
mov
xchg
rcrb
adc
ja
aam
and
cmp
mov
loope
dec
addb
repz
pop
ret
in
xor
loope
jne
daa
pushf
pop
add
test
and
adc
test
cmpsb
adc
mov
les
cmpsb
inc
xchg
inc
aad
insl
cmp
or
jnp
daa
ljmp
imul
cmp
loop
sbb
outsl
jnp
loopne
out
pushf
out
test
fistps
test
inc
inc
xor
pop
adc
test
repnz
and
lods
mov
fisubrl
dec
cmp
mov
cmp
imul
push
cmc
jg
mov
adcb
add
ljmp
cli
dec
in
xor
inc
sub
imul
int
or
mov
jnp
pop
add
pop
mov
rol
and
cmp
hlt
aam
pop
dec
push
dec
push
jno
pushf
sbb
into
clc
lds
push
mov
sub
call
out
stc
cmp
movsb
fsubl
insl
pop
lods
leave
pusha
pop
cs
pop
add
repz
inc
mov
add
cs
clc
push
sub
push
xor
insl
jbe
sub
xchg
or
mov
rolb
cmc
nop
add
xchg
jo
mov
jne
andb
mov
enter
xchg
mov
int
adc
je
out
popa
clc
dec
add
into
push
es
xchg
popa
xor
xchg
sbb
push
jmp
imul
in
push
out
inc
fstl
or
bound
bound
div
mov
mov
bound
inc
sti
inc
or
bound
arpl
xchg
sbb
lds
addr16
sbb
mov
cli
jne
sarl
stos
fdivrl
pusha
ljmp
add
jle
loopnew
push
jmp
shl
cmp
jae
ds
in
fdivrl
dec
mov
jmp
push
sub
jnp
scas
cmp
call
scas
sahf
ljmp
in
repz
adc
sahf
inc
inc
jle
lea
repz
mov
rorb
push
ret
repz
push
or
les
pop
xchg
cmp
ss
out
ljmp
stc
pop
push
lods
inc
daa
add
pop
and
push
push
push
mov
repnz
mov
cs
jp
inc
dec
scas
jne
out
into
pushf
stc
int
mov
mov
aaa
mov
filds
cltd
jmp
push
pusha
fistpl
mov
push
jo
jle
xor
push
in
sub
test
nop
fdivs
inc
inc
fnsave
stc
popf
inc
pop
sahf
xor
test
and
inc
test
inc
adc
sbb
arpl
mov
xlat
xor
mov
pop
sbb
or
mov
xorb
add
mov
je
notb
lahf
pusha
jns
or
add
and
clc
jae
std
fidivrs
cmp
int
and
inc
sbb
pushf
stos
mov
push
cwtl
stos
xor
loop
ja
pop
lret
mov
jmp
shl
inc
lods
shlb
sub
mov
adc
xchg
addl
lea
add
sti
cmp
jnp
or
dec
xchg
jge
fisubrs
pop
fdivrp
std
mov
insb
adc
aaa
repz
and
lret
inc
enter
or
lret
or
stos
mov
aaa
mov
inc
pop
inc
mov
ds
outsl
inc
stc
lods
mulb
hlt
outsl
mov
arpl
lcall
jl
xchg
dec
mov
sub
inc
loope
sub
jmp
push
in
fyl2xp1
jo
adc
mov
adc
cld
dec
dec
movsb
imul
ret
negl
enter
push
ljmp
fcmovnu
icebp
or
sub
fwait
mov
xchg
ds
fsubr
mov
sbb
xchg
inc
inc
ret
inc
mov
lock
pop
ds
imul
pop
push
cli
sbbl
xor
ret
or
xor
test
loope
jmp
insb
xchg
icebp
movsl
cmp
or
pop
fsub
js
cmp
xchg
add
daa
sahf
adc
das
pop
mov
add
les
test
cli
pusha
mov
mov
movsb
dec
jle
or
jp
xchg
mov
xor
pop
push
pop
pop
icebp
pushw
mov
out
and
lret
adcb
mov
ljmp
loop
in
xor
pop
pop
adc
cld
sub
cmp
adc
push
and
adc
sarb
mov
mov
roll
mov
loopne
fs
push
jg
test
adc
arpl
push
mov
in
scas
lret
imul
subb
or
sub
test
in
repz
repz
push
pusha
fs
outsl
mov
cmpsb
mov
inc
pop
cmp
aad
mov
jg
aas
mov
or
mov
mov
test
loope
push
push
or
sub
shlb
mov
push
cmp
call
cmc
sub
mov
notb
imul
test
inc
dec
stc
mov
test
ja
nop
jecxz
or
iret
or
xor
xlat
mov
jle
mov
mov
push
mov
mov
aaa
dec
ret
aad
mov
xchg
adc
mov
adc
clc
and
sbb
xor
nop
mov
bound
dec
xor
inc
ret
std
mov
mov
and
jns
fistpll
aaa
inc
xrelease
jae
mov
addr16
xor
adc
inc
iret
xor
popf
imul
pop
xor
push
inc
lahf
aaa
pusha
inc
xlat
inc
and
sahf
jb
repz
lcall
sbb
jae
mov
ret
add
fidivrs
rolb
push
push
pop
dec
in
jl
cmp
in
imul
sbb
pop
cmc
cmpsl
inc
aas
cld
fpatan
repnz
dec
adc
std
test
mov
and
sub
shl
inc
cltd
xor
pop
mov
ja
repnz
test
imul
inc
out
mov
xchg
sub
lds
push
cmpsl
out
jbe
lahf
ret
call
inc
xchg
cmp
dec
into
daa
ds
nop
daa
sbbb
sub
push
cmc
or
dec
cli
popa
rcl
shrb
and
loopne
loopne
pop
lahf
cmp
fisubrs
loopne
push
mov
jle
xor
mov
sub
fidivrs
mov
sub
ja
sub
orb
xchg
adc
sbb
les
dec
dec
aas
push
and
cmp
roll
int
scas
mov
ja
sbb
dec
hlt
es
push
addl
pushf
into
test
bound
add
xchg
adc
out
push
je
mov
mov
mov
add
fnsave
cmp
test
sbb
fbld
data16
imulb
shrb
mov
pop
lock
sub
mov
std
inc
mov
pop
bound
sbb
divl
fcompl
mov
mov
pop
fidivrl
xchg
inc
mov
rorb
adc
lock
jl
fstl
subl
mov
lods
pop
push
adc
lret
dec
push
push
pusha
xlat
icebp
xchg
jbe
jno
cmp
icebp
pop
arpl
or
pop
inc
pop
cmc
dec
fildl
sbb
xchg
stc
loop
sub
add
insb
fstps
mov
in
jo
cltd
sbb
lret
inc
mov
sub
pop
ret
cli
mov
sub
mov
adc
loop
mov
jge
stos
jnp
mov
in
fldl
gs
mov
sbb
jle
and
cld
repz
aam
mov
cmpsl
aaa
movsl
out
mov
fisubrl
cmp
inc
mov
imull
push
lods
push
cmc
fdiv
pusha
icebp
sti
out
add
bound
cmp
xchg
sub
dec
mov
repz
jle
adc
leave
push
aam
xor
xor
lret
dec
fistps
push
repnz
popa
imul
out
pop
das
les
ljmp
imul
push
in
pop
push
ret
idivb
xchg
cmp
xchg
insl
jns
sbb
mov
shrl
sbb
loope
imulb
cmp
mov
nop
push
and
inc
cmp
push
rclb
imul
and
mov
mov
lds
je
adc
and
out
xor
test
imul
cmp
add
scas
out
negb
cmp
pop
ret
inc
pop
jb,pt
cmpsb
cmp
cmc
xchg
pop
fwait
lahf
shl
shrb
add
adc
cwtl
decb
cs
mov
adc
adc
mov
leave
subb
fcomps
mov
cmpsb
nop
iret
jne
add
pusha
ja
enter
into
aad
add
mov
xchg
lret
dec
shlb
mov
push
rcr
sbbl
jae
pop
fldt
mov
dec
or
xchg
xchg
shrb
lock
add
inc
lock
cld
bound
inc
dec
xchg
jnp
popf
cld
xchg
sbb
clc
bound
daa
mov
je
xchg
inc
pop
sbb
xor
pop
hlt
pop
or
ret
xor
push
lds
scas
push
pop
and
jo
pop
out
adc
fidivs
dec
fisubs
aad
ret
xchg
stos
inc
jg
mov
pusha
fwait
inc
in
bound
lcall
cld
in
lock
outsb
jno
pushf
scas
mov
pop
leave
mov
pop
mov
inc
and
sarb
lret
icebp
push
jg
mov
cmp
orl
stos
xchg
xchg
ret
shl
pop
outsb
xchg
xchg
mov
mov
into
sbb
stos
popf
in
adc
xchg
cld
inc
fnstcw
push
in
cltd
std
xchg
sbb
scas
bound
cmp
jnp
out
sbb
mov
and
addr16
es
shl
popa
test
mov
jp
movsl
mov
pusha
lods
mov
in
into
and
push
and
lds
scas
out
fwait
dec
mov
lods
sub
mov
fisubrl
push
shrb
sbbb
mov
jo
repnz
mov
aaa
clc
sahf
stc
xor
jmp
rclb
in
cmp
pop
dec
in
xchg
pusha
sbb
sub
add
pop
lock
ja
add
mov
xor
xchg
scas
and
mov
mov
lahf
leave
ja
push
std
jae
or
scas
sub
lahf
jle
cmp
push
daa
cmp
xor
jge
xchg
into
fadd
fsubrs
adc
mov
imul
mov
push
shll
les
xor
mov
int3
push
in
imul
or
in
xor
sub
sarb
fs
repnz
popf
push
mov
push
stc
xorb
dec
cld
dec
add
loop
inc
jb
sahf
cmc
or
movsb
cmp
pop
out
fisttpl
test
jbe
mov
pop
cmpsb
jp
loope
cmp
mov
outsl
enter
ret
hlt
jae
dec
leave
cmp
shrl
push
out
mov
mov
mov
rcrl
cmp
jmp
hlt
mov
push
adc
mov
push
sbb
push
test
out
adc
jge
pop
push
add
in
lret
idivl
and
stc
nop
sbb
inc
push
mov
ror
in
adcl
push
jmp
aas
ds
aas
push
shlb
xchg
std
fadds
cwtl
or
sbb
jne
aaa
push
lds
and
push
imul
mov
push
mov
mov
mov
push
pop
cmp
inc
jae
add
sbb
sahf
popf
insl
lods
inc
popf
mov
out
mov
pop
push
adcb
adc
inc
pop
loop
scas
xor
mov
lret
loopne
in
sbb
stc
inc
hlt
dec
jb
lods
mov
fidivrs
sbb
pusha
enter
push
xor
int3
arpl
jge
push
enter
popl
mov
mov
frstor
movsb
ljmp
jo
inc
loop
lahf
pop
inc
test
mov
test
sbb
jge
pop
dec
je
pop
repnz
rcr
pop
es
jmp
lret
cmp
dec
xor
jns
inc
int3
or
mov
frstor
testb
pop
adc
fistl
and
mov
push
pop
jg
std
and
sti
jle
xchg
gs
xchg
arpl
inc
loopne
xchg
sub
mov
push
jecxz
push
lods
popf
pop
jne
fwait
das
subb
loope
jne
cltd
mov
pop
hlt
mov
pop
stos
xor
push
or
stos
mov
sbbb
ror
push
pop
lock
test
call
xchg
cmp
push
ret
stc
mov
sub
and
dec
mov
fst
cmp
and
dec
mov
cmp
cltd
shrl
jne
xor
je
pushf
scas
arpl
xor
push
sbb
shl
loope,pt
sbb
cmp
lcall
sahf
sbb
out
ljmp
clc
sahf
cmp
adc
test
push
cmc
pop
pop
rcr
fwait
jne
hlt
fucomip
aad
in
adc
mov
mov
mov
mov
mov
mov
hlt
pop
lahf
push
outsl
stos
lret
jp
xor
mov
mov
sbb
xor
gs
xchg
imul
mov
adc
mov
jb
cmp
mov
loopne
add
pusha
add
popf
addb
jnp
sbbb
mov
add
add
or
pushf
dec
and
stc
pop
dec
repnz
and
in
test
inc
pop
pop
out
iret
insb
iret
pop
xchg
inc
adc
xchg
and
sub
scas
in
and
mov
push
inc
dec
or
fistps
daa
and
push
call
and
outsl
push
and
je
mov
pop
and
test
xor
jno
mov
lret
mov
cs
xchg
mov
inc
scas
pop
dec
and
lods
cwtl
inc
scas
push
lock
sti
add
dec
and
push
js
aam
or
cs
pop
popa
push
jp
aaa
or
inc
mov
ret
add
gs
jmp
dec
in
nop
pushf
and
mov
in
popa
jmp
mov
mov
stos
jne
shrl
aad
fsubs
fidivs
jo
loope
scas
jge
ret
sub
push
or
fwait
cmc
push
mov
and
lock
icebp
cmpsl
jae
insl
ss
push
addr16
sbb
push
or
xor
into
data16
divl
mov
jns
mov
cld
jae
out
stos
inc
and
cli
or
push
inc
cli
addr16
rcll
int
pusha
jge
jb
or
test
xor
push
xor
aam
mov
in
test
dec
mov
push
lods
xorb
pop
fs
lock
jmp
out
int
or
mov
inc
mov
add
mov
pusha
loop
xchg
mov
dec
push
lods
pop
js
cmp
xor
xor
notb
inc
push
sbb
mov
insb
jmp
dec
fbstp
adc
mov
jmp
lret
cld
lret
popf
out
sahf
loop
inc
mov
pusha
cmpsl
xchg
add
sti
sbb
pop
or
dec
cmpsb
push
test
jl
aaa
xchg
dec
add
inc
sbb
sub
cs
fbstp
vpunpcklbw
push
mov
and
push
movsl
push
push
scas
movsl
mov
mov
cmp
aas
lret
and
nop
pop
sub
push
cmp
push
sbb
pop
push
into
jge
popa
icebp
repnz
int3
push
add
cmp
movsl
and
ljmp
xor
add
xchg
rcrl
idivb
xchg
cmp
out
dec
ficompl
push
out
sbbl
or
mov
jle
repnz
pop
bndldx
fidivs
jecxz
mov
pop
xchg
out
sbb
xlat
inc
push
repnz
popa
mov
adc
aad
repnz
sbb
jnp
leave
sub
jo
push
decl
sub
cmc
je
lods
aad
inc
xor
cmp
cmpsb
sbb
dec
aad
sbb
xor
scas
cmc
cltd
ficoml
in
aad
jno
testb
push
test
mov
dec
pop
gs
pop
and
arpl
mov
enter
cli
fs
test
aaa
xchg
imul
push
push
dec
je
pop
xor
add
ja
loope
xchg
adc
pop
rcl
push
mov
sbb
stos
cmp
sub
sti
aam
cwtl
ret
movsb
movb
xlat
je
adc
jp
clc
stc
or
sbb
sub
adc
pop
loop
mov
dec
mov
mov
or
mov
jae
add
rcll
xor
or
and
dec
push
xor
fwait
loop
and
sti
xor
cmp
cmp
cli
movsb
repnz
jecxz
mov
jb
outsl
inc
cmpsb
adc
sub
loop
cmpsb
fwait
scas
int
call
push
ret
fwait
inc
roll
call
and
pop
add
mov
cmpsb
aas
dec
jae
sub
sbb
repnz
sub
ret
das
bound
aaa
xor
mov
push
or
clc
sahf
jae,pn
iret
stos
push
in
cwtl
or
loopne
sbbl
mov
sbb
jle
ds
cmc
fwait
imul
mov
or
sbb
or
push
ret
pop
inc
sti
andps
je,pn
insb
push
je
pop
pop
mov
imul
roll
sbb
xor
fmull
mov
cwtl
push
sub
std
and
rclb
adc
cltd
loop
movsb
jp
and
xor
sbb
arpl
nop
cmpsb
test
mov
add
lea
mov
jecxz
mov
adc
repz
mov
aad
dec
mov
lret
dec
fcom
sub
inc
cmpsl
lock
mov
hlt
jge
ljmp
mov
lea
add
and
mov
addr16
xor
lods
mov
xor
pop
mov
sub
cmc
mov
je
xchg
pop
mov
sbbl
adc
stos
xchg
and
jb
dec
push
es
jmp
jl
sbb
out
xchg
dec
mov
xchg
cli
or
xchg
push
push
inc
clc
cmp
pop
std
mov
xor
arpl
fwait
add
and
cmp
cmp
and
push
std
outsl
shlb
inc
add
addl
push
inc
movl
daa
jb
jbe
adc
push
jbe
and
xor
mov
xor
in
mov
cli
cmp
jp
and
xchg
sbb
pop
lock
cmpsb
sbb
push
ret
sti
push
mov
stc
lods
push
cmp
add
lahf
rolb
sti
notl
outsb
sub
idivb
pop
xchg
pop
mov
lcall
sbb
sbb
jmp
aaa
mov
cli
in
invd
daa
fidivl
imul
push
jno
mov
mov
xchg
sub
fdivl
fisubl
cld
sti
push
test
inc
xor
jnp
xchg
imul
xor
hlt
add
adc
inc
pop
cs
or
ret
rclb
mov
inc
lods
jno
mov
mov
imul
idivl
xor
std
mov
add
jge
addb
xor
push
mov
loopne
fmul
add
cmp
pusha
lods
or
popf
shlb
sbb
mov
scas
stc
jl
push
mov
fnstsw
dec
hlt
ds
call
mov
or
cltd
jne
or
jl
jle
pop
cmp
mov
repnz
outsb
stc
popa
pop
xor
push
subb
scas
test
lds
or
xchg
mov
and
sub
call
pop
cmp
mov
dec
xor
imul
lods
jno
xorl
xchg
popf
out
cld
into
cmc
icebp
lret
shl
popa
mov
int3
test
pop
repz
sti
fwait
xchg
mov
jne
out
int3
pop
jg
xor
sbb
icebp
xchg
mov
notb
jne
test
and
jge
in
das
sub
pop
xor
jmp
fimuls
xchg
jg
mov
push
dec
xchg
mov
pushf
arpl
sbb
mov
xchg
add
xrelease
ds
pop
add
cwtl
inc
call
loope
js
sub
lcall
orb
or
pop
repz
sbb
push
fwait
and
push
fists
adc
sub
clc
jp
sub
mov
inc
mov
sub
and
push
sbb
stos
pop
call
lea
lods
lret
js
mov
adc
nop
inc
jmp
int3
lods
je
int
into
adc
xchg
hlt
inc
bound
fmuls
adc
dec
addb
or
cs
mov
cmp
jnp
scas
mov
push
mov
mov
clc
inc
adc
mov
sar
xor
aad
mov
lret
inc
mov
inc
lret
push
fwait
pop
pop
pop
xor
dec
mov
jnp
inc
pop
test
xchg
mov
mov
rorb
fldt
sti
adc
or
push
es
adc
mov
test
mov
and
sub
ja
addr16
pop
push
jge
je
cmp
call
test
lods
sbbb
cmp
test
cmp
adc
cmp
xlat
mov
pop
or
or
in
mov
xchg
and
lds
mov
mov
pop
add
cwtl
xor
mov
inc
xchg
mov
pop
push
rcrl
divb
sti
push
test
sahf
cmpsb
notl
mov
jb
add
mov
inc
mov
out
test
sbb
dec
stc
loope
mov
js
or
rorb
pop
repnz
std
xchg
jnp
fnsave
cmp
lock
xor
sbb
xchg
sbb
sub
xor
roll
bound
xlat
andps
les
cmc
lods
sbb
jbe
mov
popf
ss
xchg
inc
mov
aam
add
ja
mov
movq
es
cmpsb
xor
call
sbb
dec
adc
mov
push
xchg
outsb
xchg
in
fwait
and
sqrtps
mov
loopne
data16
xchg
cmp
icebp
adc
or
pop
pop
mov
or
sub
cmp
mov
jae
in
sarb
jns
jp
pop
fwait
jmp
lret
call
sbb
dec
push
mov
inc
inc
pop
pop
cld
enter
sbb
daa
addr16
insb
pushl
pushf
sti
cmp
bnd
and
loope
ret
scas
outsl
insb
insl
ret
sahf
xor
inc
mov
jb
and
data16
cmp
aaa
push
cld
aad
mov
jb
dec
pop
aaa
loopne
and
add
pop
fdivrl
pop
pop
mulb
stc
and
cmp
push
mov
sti
adc
std
lret
cld
push
test
punpckhdq
rcrb
xor
push
mov
ret
mov
stos
inc
jle
lea
icebp
adc
movsl
into
xlat
jl
inc
movsl
cmp
imul
sti
xchg
sub
nop
lods
gs
loop
loope
dec
out
int3
inc
cmpsl
dec
pusha
fldenv
mov
into
daa
data16
cmp
push
jns
rcrl
add
in
mov
jno
or
test
mov
mov
sarl
cmpsb
lahf
mov
lods
cmpl
jmp
cld
pop
fnstsw
lods
test
mov
lahf
daa
lcall
push
insl
mov
pop
push
in
add
push
or
inc
lds
aaa
into
xchg
dec
sti
out
lret
cmp
mov
xchg
and
lret
ror
mov
push
clc
fstpt
js
ret
jle
adc
shlb
pushf
xchg
fsubrs
push
in
mov
lods
gs
jbe
and
les
mov
movsl
testl
mov
push
outsl
mov
repnz
or
and
xchg
adc
mov
cmp
sub
fnstenv
out
repz
inc
mov
jp
insb
cld
push
out
in
mov
out
xlat
jmp
popf
ja
mov
lods
in
in
mov
shlb
adc
orb
stos
outsl
jbe
cmp
in
xor
pop
dec
mov
cmpsb
dec
add
loope
icebp
xor
jns
test
js
loopne
fstps
lea
lahf
stos
js
and
rcrl
fstpt
in
xor
dec
in
out
repnz
or
daa
mov
push
lock
rorb
ret
cld
inc
cmpsl
pop
dec
enter
rcrl
mov
test
incb
icebp
mov
outsl
xchg
mov
imul
fwait
xor
out
aad
push
sbb
out
out
jns
lret
lret
inc
mov
mov
pop
out
mov
mov
data16
test
cmp
aad
xchg
ret
xor
inc
mov
sahf
jl
adc
push
fdivrp
mov
xor
bound
test
cmp
xor
out
das
sbb
data16
mov
push
aas
fmuls
out
or
outsb
aad
push
mov
push
and
add
shrd
cltd
mov
pop
sbbl
scas
push
pop
push
std
pop
inc
xor
jno
std
adc
cmp
pop
imul
pop
jo
mov
pop
xchg
sub
call
jg
mov
loopne
cmp
imul
add
dec
adc
pop
repnz
jmp
enter
fistps
sbb
out
icebp
mov
mov
cwtl
adc
enter
xchg
sarb
push
push
xchg
add
jl
in
out
aas
test
dec
mov
add
movsb
incb
push
js
push
addr16
ret
fcmovnb
icebp
sub
push
xor
addr16
lods
loop
scas
xchg
repz
notl
mov
mov
addr16
int3
cmpsb
in
and
push
dec
pop
data16
pop
int3
loop
sub
scas
mov
or
lret
mov
cmpsb
imul
xchg
out
xchg
sub
cmpsb
outsb
mov
push
cwtl
enter
mov
dec
and
fwait
popf
push
psraw
xchg
or
in
sbbl
insl
out
add
loopne
ficoml
outsl
aaa
jnp
pop
repnz
out
add
pcmpeqb
jb
xor
inc
push
aam
mov
xchg
out
sahf
mov
xchg
aam
nop
repnz
jns
sarl
or
jnp
mov
or
mov
cltd
fistpll
and
in
test
xchg
adc
cmp
dec
cli
mov
bound
fistpll
inc
mov
lret
fstpl
fsubl
inc
cmp
rolb
repnz
out
push
cs
dec
and
dec
in
call
and
cmc
aaa
clc
vfrczsd
lea
mov
dec
lods
jmp
and
int
inc
push
or
cmp
xorl
in
enter
gs
inc
fstpl
sub
das
arpl
sub
adc
xchg
sar
es
xor
sub
inc
dec
daa
stos
jl
xchg
pushl
dec
in
xchg
xor
push
stos
add
fmull
fwait
cmpsl
mov
mov
enter
movsb
addr16
add
xchg
test
xchg
aam
or
fmull
mov
mov
in
fistps
push
xor
inc
test
ds
std
dec
add
or
mov
add
and
in
mov
mov
ja
cwtl
lods
jo
mov
repz
hlt
mov
add
jno
into
mov
or
insb
mov
aam
out
mov
ja
and
aaa
jbe
xchg
mov
jl
and
mov
jnp
push
mov
cmpb
cmpb
fdivrs
mov
imul
fsubrs
cmp
jne
or
shlb
leave
push
jno
fcmove
cli
cmp
adc
lock
scas
sbb
rdmsr
mov
inc
ffreep
std
jns
xor
jge
pop
scas
sub
xchg
lods
cltd
adc
or
pop
xchg
loope
cltd
repz
add
movsb
andl
enter
xchg
dec
push
jae
sbb
js
pop
in
pop
mov
rcr
sbb
addr16
jmp
and
add
inc
fcmovne
mull
jbe
fwait
dec
xor
in
add
out
and
mov
stc
xorl
and
pop
or
andl
push
push
adc
movsl
xchg
outsb
mov
push
jae
aam
jmp
jmp
fimuls
das
add
adcb
orl
and
ss
pop
adc
les
mov
adc
mov
mov
mov
lret
aad
jmp
or
cmp
dec
test
cmp
xor
dec
out
imul
cli
jae
test
cli
push
loop
xchg
add
mov
test
scas
add
int3
clc
add
test
xlat
push
add
js
push
das
iret
push
mov
test
shl
xor
mov
pop
push
test
mov
sbb
aaa
sub
add
fdivrs
lcall
inc
enter
shrb
pop
mov
sbb
mov
int
mov
inc
loop
push
sahf
cli
popf
xor
fs
aam
mov
imul
sbb
or
adc
mov
dec
xor
in
cmp
push
popf
mov
fs
loopne
push
adc
sbb
jo
lcall
mov
fnsave
add
sar
lcall
adc
add
repz
or
jp
ljmp
xchg
inc
adc
test
clc
or
and
movsl
sbb
sbb
and
dec
push
daa
insl
sub
cs
loop
test
inc
mov
fmulp
add
fsubrl
pop
fucomip
xor
mov
adc
jbe
and
mov
lods
bound
sbb
mov
and
scas
mov
adc
outsb
or
fisttpll
repz
mov
ret
insb
sarb
lret
call
out
rol
sub
icebp
mov
lret
js
add
in
jp
adc
test
mov
mov
mov
mov
dec
out
mov
jmp
jnp
mov
or
cmp
pop
mov
dec
jecxz
jnp
negb
push
and
sbb
aas
cmp
push
inc
sub
aas
sub
xor
out
mov
fs
xor
sbb
mov
mov
bound
mov
into
in
aas
cmp
mov
fmull
fwait
cmp
or
jbe
cmp
stc
dec
inc
mov
mov
andb
mov
xchg
lahf
and
fwait
jl
das
addr16
add
pop
cmp
outsl
inc
jmp
clc
repz
test
push
push
jge
xor
or
sub
test
daa
dec
push
aas
jecxz
lods
call
or
jb
mov
adc
enter
xchg
sub
inc
xchg
cmp
popf
shrb
or
addr16
ret
scas
ss
mov
jbe
loope
enter
push
adc
xor
cmp
mov
insb
inc
cmp
pusha
xor
insl
stos
movsb
ret
js
fucomip
ds
push
ljmp
jno
notb
mov
addr16
flds
lods
mov
jbe
dec
pop
jl
add
mov
aad
mov
pop
cmp
inc
sbb
js
out
sub
cmp
sbb
push
aam
mov
pop
pop
shr
push
cmc
pop
dec
daa
cmp
lcall
cmpsb
push
je
xchg
pop
or
jle
sub
out
mov
ret
jecxz
orl
mov
or
xlat
mov
inc
nop
push
xor
dec
arpl
sbb
push
mov
sarl
mov
inc
movsb
xchg
lret
mov
je
mov
aad
pop
lahf
cli
stos
xchg
pop
add
inc
insl
dec
loope
add
xor
popa
adcl
pop
inc
xor
xchg
xchg
bound
sarb
xchg
jae
pop
addr16
jnp
pop
es
adc
mov
push
xchg
outsl
sbb
test
orb
mov
rcll
bnd
adc
sbb
pop
sahf
imul
inc
or
mov
int3
push
xor
and
or
mov
dec
scas
xor
mov
xor
cmpl
cmp
int3
mov
jmp
sbbl
mov
es
mov
mov
icebp
sub
pop
pop
adc
shll
pop
dec
sub
subb
hlt
sub
fnsave
out
dec
mov
adc
or
adc
cld
lcall
in
clc
mov
mov
and
mov
aas
or
or
dec
call
out
pusha
je
dec
cltd
or
sti
xchg
fisubl
or
cmpsb
lea
push
xchg
push
mov
push
sub
insl
clc
cmp
test
mov
fldenv
mov
je
cmp
loop
cmp
loope
loopne
mov
inc
mov
xlat
shll
arpl
xchg
lock
aam
aam
shll
sub
add
fists
jo
jl
iretw
xor
adc
lods
pop
mov
xor
test
sbb
fstps
jne
dec
jmp
sbb
test
push
jmp
mov
dec
stos
pop
add
xor
leave
test
sbb
push
push
add
xchg
push
push
inc
add
loope
lret
xchg
inc
or
cs
das
mov
mov
dec
dec
dec
jl
hlt
insl
aam
jnp
or
les
xchg
cmpsl
out
xor
popa
adc
test
sbbb
cmp
mov
pop
xchg
inc
pop
in
or
push
and
pop
mov
inc
popf
and
test
mov
lds
out
daa
push
inc
xchg
add
lea
mov
pop
cld
enter
cli
mov
pop
inc
in
outsb
fcoms
int3
cmpsb
std
jp
popa
stc
andl
ret
and
fnstcw
dec
dec
dec
push
movd
aad
pop
shl
jb
and
mov
jp
pop
insl
push
adc
inc
cmp
arpl
pushf
jg
xlat
addr16
in
and
pop
xor
sub
fildl
insl
shr
and
add
adc
inc
add
stc
je
stos
fdivrl
cmp
shlb
lret
xchg
xchg
fidivrs
ds
insb
sub
dec
cwtl
mov
push
imul
push
mov
popf
mov
cmp
in
inc
lret
or
loope
insb
mov
mov
insb
add
stc
push
mov
push
xlat
fidivl
cld
sahf
subb
cmp
or
es
lret
jnp
ss
pop
leave
cs
fisubrl
lds
and
lcall
sub
cld
inc
dec
add
cwtl
xor
sti
insb
test
sarl
lret
aaa
mov
pop
mov
ja
jae
mov
pop
pop
ret
push
pop
aaa
add
pop
dec
scas
cmp
repz
dec
insl
jno
or
cmp
stc
fisubrs
rcrl
and
mov
adc
xchg
xchg
adc
push
popf
loop
xor
sti
cmc
aaa
int3
dec
pop
jne
xor
pop
mov
into
aad
imull
push
adc
cmp
inc
and
lret
push
pop
lea
adc
mov
test
xchg
call
pop
lahf
and
ret
dec
push
scas
mul
mov
in
mov
ljmp
or
ljmp
jno
pop
push
shlb
icebp
out
add
cmp
and
inc
loopne
loopne
clc
sbb
ja
jge
arpl
fnstcw
aad
pop
or
or
push
lods
out
mov
jge
les
imul
ror
sub
arpl
push
enter
in
mov
sti
xor
lcall
mov
jge
mov
push
xchg
pop
jnp
inc
lods
xorb
ljmp
cmp
pop
mov
enter
adc
ffree
or
ds
pop
xchg
out
test
lret
ja
fs
cmpsb
pop
mov
inc
imul
mov
dec
cmp
outsl
dec
inc
ret
jl
sub
sbb
into
lods
inc
xor
das
data16
mov
popf
loopne
adc
cmp
xor
mov
pusha
inc
ljmp
adcl
fs
ficomps
sbbl
cmc
out
xchg
mov
test
leave
fwait
sub
push
jae
adc
mov
jno
or
popf
dec
xlat
dec
ljmp
xor
and
jl
aam
mov
xchg
test
decb
mov
mov
jnp
and
movsb
mov
fsubl
lahf
fisubs
invlpg
jnp
xor
cld
lock
dec
add
push
and
hlt
mov
insl
fmulp
shrl
xlat
push
arpl
popf
dec
push
xchg
lock
pop
xchg
sub
dec
scas
xchg
sti
push
gs
jecxz
cmp
ret
loopne
add
stos
int3
fcomp
pop
mov
je
adc
push
xchg
loop
fidivrl
lret
js
jno
pop
and
mov
aas
cltd
inc
jl
sub
data16
rorb
mov
out
xchg
rol
and
roll
add
mov
dec
inc
mov
jge
sub
mov
mov
jbe
out
jmp
mov
push
cmp
imul
gs
jecxz
je
into
gs
popf
pushf
sti
inc
shr
fwait
pop
fisttps
aad
mov
cmpb
jle
mov
dec
in
pop
ja
xlat
sub
and
aas
stos
xchg
add
mov
ja
sahf
jge
xchg
fnstenv
add
int
dec
jecxz
imul
adc
fxch
push
pop
out
enter
andb
addr16
pop
scas
mov
mov
cmp
fsubl
fsubr
mov
inc
shr
jne
cmp
mov
int
fstpt
or
pop
pop
ljmp
inc
add
rsqrtps
cli
daa
add
jae
test
jb
and
xchg
filds
outsl
movsb
sub
mov
mov
out
movsl
add
loope
fsubrl
pop
dec
cmp
sbb
imul
pushf
lods
mov
inc
xor
dec
movsb
arpl
push
scas
jae
andb
or
scas
and
mov
shll
adc
je
idivl
push
in
test
in
mov
mov
les
xor
cwtl
xor
out
add
std
repnz
js
repz
inc
test
data16
jmp
shll
out
out
sbb
sbb
jmp
loope
sub
stos
mov
and
dec
in
and
repz
jbe
hlt
fdivl
test
adc
sbb
mov
sbb
inc
or
jge
insl
rorl
ret
cmp
in
sub
jle
divb
inc
loope
mov
frstor
sbb
andb
insb
mov
imul
in
lahf
daa
jb
adc
sub
and
out
mov
cmp
push
popf
sbb
push
popf
xchg
push
imul
xor
roll
testl
lods
jnp
cmp
data16
and
loope
xor
insb
xchg
clc
sub
mov
bound
pushf
les
arpl
stc
popf
jp
inc
push
mov
aad
sbb
loop
rorb
mov
loope
popa
cld
sub
lret
into
jg
xor
jno
pop
repz
push
jne
aas
jp
imulb
push
pop
idivl
pop
pop
ret
or
jno
fsubs
dec
xchg
stc
pushl
mov
xchg
std
jo
out
push
and
jno
iret
and
mov
xchg
inc
jb
mov
mov
fisttps
scas
test
imul
nop
sbb
xchg
pop
mov
out
fisubl
stos
aad
fsubrl
xor
inc
lret
jns
jb
xchg
out
xchg
in
pusha
dec
andl
or
sahf
sub
mov
nop
mov
xlat
insb
cs
add
gs
xchg
mov
adc
jl
pop
inc
aad
arpl
jg
in
push
dec
cmpl
sub
push
pop
pushf
lods
js
mov
push
pop
cltd
shll
lahf
mov
sti
mov
cmp
or
leave
jo
movsb
js
rcl
mov
sbb
mov
arpl
mov
jecxz
inc
fs
add
mov
in
ljmp
add
mov
inc
adc
sub
mov
and
push
sub
push
sahf
lahf
fs
mov
mov
nop
inc
or
sub
in
in
and
lcall
jno
or
fists
cmp
test
std
sahf
inc
cmp
mov
push
out
xor
inc
fcomp
push
inc
pop
cmp
mov
add
mov
pop
jmp
movsl
in
int3
test
decb
cmp
cmp
imul
in
dec
mov
xchg
stc
ds
pusha
outsl
aam
cltd
psubsb
fiadds
mov
rorl
icebp
jnp
cmpsb
mov
mov
pop
xor
out
mov
or
jbe
xchg
mov
je
pop
sahf
push
imul
in
fidivs
sarb
push
xor
dec
ja
adcl
mov
repz
shrl
lcall
icebp
jl
xor
ret
jne
subb
mov
add
dec
jno
mov
imul
inc
xchg
jecxz
stos
jmp
shrb
shl
dec
inc
pop
cmc
adc
jns
lcall
pop
aaa
push
sub
sahf
lods
pop
inc
jno
adc
add
shlb
test
sbb
jge
xchg
pop
call
or
mov
add
dec
rclb
mov
mov
hlt
scas
outsl
jle
adc
add
adc
insb
or
push
jecxz
outsb
aad
mov
mov
push
xlat
cs
andl
cli
loopew
pop
sub
add
rcrl
lcall
xchg
psrlq
fsubr
stos
push
mov
mov
pop
mov
lahf
mov
rcll
les
cltd
add
or
popa
and
cmp
addb
shll
pusha
push
push
mov
push
movsl
call
or
dec
loop
adc
imul
dec
sbb
sbb
into
aas
push
jmp
loope
stos
pop
dec
dec
in
mov
adc
or
inc
jg
xor
mov
es
pop
js
data16
sub
shrl
add
cmp
add
adcb
dec
pop
subl
js
xchg
popa
xor
scas
pop
les
push
lods
and
push
adc
rcrb
scas
xchg
sub
lock
insl
inc
pusha
rorl
sbb
add
or
addr16
mov
pop
mov
lcall
arpl
xorb
xchg
jo
js
insl
xchg
sbb
aam
mov
sbb
and
push
mov
push
sbb
out
or
in
mov
rcl
push
pop
insb
cltd
inc
fcmove
pop
lcall
and
mov
dec
fs
loop
idiv
xor
and
jo
andl
aad
int3
sub
or
fimull
iret
xor
imul
iret
das
push
jb
mov
add
movsb
inc
stos
pushf
cli
or
pop
jle
sbb
lods
ret
loop
shrb
lods
xor
fldl
out
fidivl
sarb
push
int3
clc
cmpsl
add
sbb
movsl
imul
scas
pop
xor
add
outsl
pop
fdiv
sub
es
loop
in
shlb
pop
add
cmp
movsb
pop
pushf
rcr
imul
and
jbe
repz
and
fwait
ljmp
lds
ret
test
imul
pushf
cs
or
jno
popa
mov
push
mov
test
sbb
daa
sbb
jp
je
xor
mov
inc
sub
test
dec
or
pushf
lcall
sub
or
or
mov
adc
cli
repz
pop
les
pop
mov
xchg
stos
pop
cmp
xlat
or
mov
add
inc
inc
data16
cld
jecxz
insl
hlt
jmp
cld
dec
out
dec
clc
lret
dec
filds
stos
jne
out
lcall
inc
and
push
arpl
js
outsb
adc
dec
jno
cmp
adc
cmp
adc
loope
outsb
loope
mov
dec
test
imull
jae
cmp
pop
aas
int
push
push
pushf
push
pop
ja
sti
mov
jle
adc
sbb
lret
push
and
ret
enter
sbb
pop
xlat
jecxz
sub
addr16
xor
sub
nop
adc
rorl
lods
int3
and
leave
cwtl
bound
fwait
inc
mov
fidivl
xchg
push
sahf
inc
out
fs
push
data16
lds
aas
mov
testb
shl
jae
or
outsl
and
lods
push
sbb
inc
enter
cmp
or
test
sbb
xchg
int
jge
xor
mov
pop
pusha
pop
hlt
xchg
int3
lods
and
test
test
jp
sbb
inc
call
in
xchg
mov
adc
xlat
dec
push
jg
lea
inc
stc
gs
lods
inc
ret
xor
push
sahf
lods
subl
repz
jge
es
js
add
adc
lcall
addl
daa
or
pop
mov
std
test
mov
mov
test
rolb
lahf
push
addb
xor
rcrl
mov
scas
add
stos
mov
ljmp
inc
fisttpl
arpl
out
hlt
xor
cmpb
jp
jge
pop
cmpsb
in
pop
out
xor
or
ja
daa
add
and
mov
ret
lock
xchg
push
add
and
adc
pop
cmp
int
ret
addr16
pop
mov
dec
aaa
outsl
or
fwait
mov
mov
shlb
push
adc
dec
xchg
pushf
pop
dec
lods
outsb
pusha
inc
push
add
andl
or
cmc
dec
rorb
and
inc
adc
push
pusha
jno
mov
dec
xor
push
scas
flds
dec
inc
lods
mov
gs
mov
xchg
insl
loopne
mov
in
imul
imul
dec
aad
pop
sub
adc
and
addr16
imul
das
xor
push
mull
in
out
jmp
sbbb
jae
loop
leave
mov
jno
add
std
inc
and
nop
cmp
std
jg
xor
out
and
xchg
push
jo
inc
mov
push
jmp
test
mov
stos
jb
push
out
test
push
ja
mulb
out
adc
or
xchg
sub
xchg
sub
cs
add
popf
push
popf
pop
aam
sub
into
lods
rorb
ja
out
pop
aaa
mov
fcmove
hlt
sbb
dec
fistpll
sub
fnstenv
push
mov
cmp
lcall
cli
in
xlat
push
jg
insl
pushf
xor
test
mov
sbb
dec
mov
xor
mov
pushf
cmpl
das
jg
out
or
xchg
movd
imul
fbstp
add
sbb
sub
sbb
jno
outsb
test
aad
mov
mov
out
mov
icebp
call
push
clc
popl
iret
out
js
sbb
imul
lock
cmpsl
jns
xchg
popa
add
sbb
add
mov
adc
shll
arpl
mov
push
into
dec
lock
aad
bound
push
or
scas
cmc
mov
les
std
add
mov
aam
sub
iret
fs
mov
cmpsb
jnp
push
and
aas
out
es
push
jae
cli
lcall
inc
adc
or
pop
fnstenv
int3
arpl
pop
mov
dec
lock
mov
mov
dec
js
les
fsts
addr16
lods
inc
push
out
jne
fxch
lcall
loopne
test
cmpsb
mov
enter
imulb
sub
int3
gs
or
addr16
lds
cmc
jns
xchg
and
pop
ss
inc
sbb
sbb
and
sbb
gs
or
cld
jg
jno
in
div
or
pop
mov
roll
mov
jns
into
cmp
movsb
cmp
mov
out
sbb
push
dec
out
add
fdivs
mov
sarb
xor
mov
mov
hlt
inc
jne
cmc
inc
mov
fists
test
mov
test
mov
fcmovne
fdivrl
pop
pop
outsb
call
outsb
mov
xor
stos
cmc
cmp
xchg
mov
or
xchg
cwtl
jle
nop
cmp
inc
cli
sub
sahf
xor
out
and
pop
pop
fcoms
in
pop
cmc
jecxz
mov
enter
and
mov
ret
fcomps
dec
pop
sub
cmp
stc
inc
adc
adc
enter
jb
mov
sub
mov
rcll
mov
es
jmp
arpl
lods
sbb
cmp
ss
jb
and
xor
push
add
lds
loopne
bound
adc
sbb
mov
les
mov
clc
adc
dec
fwait
nop
push
clc
sub
pusha
mov
mov
xlat
les
iret
dec
xorb
jae
sub
std
fistps
aad
jge
das
pop
arpl
lahf
xor
call
sbb
and
pop
rcrb
xor
sahf
cmp
add
lock
xchg
call
xor
and
shlb
pop
jb
ret
push
rcll
ret
sbbl
xor
daa
sahf
sbb
sbb
popa
sub
adc
fwait
pop
in
inc
and
inc
pop
sub
jp
mov
repz
or
int3
fcomi
xor
xor
jge
xor
lock
lods
sub
outsl
jnp
cltd
fisubl
mov
fdivs
lods
int
lods
cmp
mov
dec
dec
movsl
out
add
or
scas
and
and
fisubs
popf
cltd
lods
mov
leave
push
sbb
pop
mov
scas
fdivs
sbb
mov
test
xchg
out
dec
add
icebp
sarb
sub
lods
push
fbld
aaa
dec
mov
mov
push
fwait
sbb
mov
inc
mov
pop
sbb
adcl
sahf
lahf
jnp
adc
shll
xchg
inc
popa
fisubrl
out
int
mov
test
jae
and
adc
add
xor
das
add
add
popa
out
leave
pusha
and
je
mov
ret
or
add
mov
pop
sub
mov
dec
xchg
out
stc
pop
dec
jecxz
popf
push
xor
stos
inc
pop
icebp
fildl
pop
nop
pop
and
push
mov
dec
outsb
ret
cld
push
inc
sahf
inc
cmc
mov
cmp
and
rorb
sbb
add
mov
add
or
fdivl
jge
xor
loopne
rcrb
stos
mov
pop
icebp
scas
mov
ret
neg
es
pop
lcall
loopne
jno
arpl
sti
sub
scas
pop
stos
xchg
fnstenv
xor
out
cmc
int3
pushf
dec
sti
fwait
push
aam
pop
into
jecxz
addr16
add
imul
pop
jno
nop
addr16
sub
out
test
imul
mov
stos
sarl
push
outsb
insl
add
mov
mov
push
out
sbb
int
jmp
fidivs
popa
add
mov
je
addr16
mov
enter
xchg
mov
xchg
fisubrs
xor
xchg
mov
sub
mulb
stc
shlb
iret
adc
stc
hlt
sbb
adc
out
mov
and
jle
xor
aaa
adc
ret
aas
add
push
js
pop
adc
cltd
pop
add
add
jmp
mov
cmp
or
xchg
ds
dec
pop
add
push
xchg
xchg
popf
das
adc
jle
test
lret
xor
push
push
add
mov
movsl
je
mov
inc
mov
xor
movsl
hlt
mov
mov
jge
push
stos
subl
pop
ficompl
xor
ficoms
imul
sub
dec
pop
sar
test
jl
mov
cmpb
jno
cltd
lods
add
xchg
call
out
pop
stos
jne
repnz
outsl
insl
std
or
inc
cmp
lahf
cs
in
push
rorb
fs
addb
push
repnz
lock
icebp
xchg
lods
fmull
mov
sub
xlat
ja
jp
outsl
xchg
pop
dec
cli
xorb
xor
arpl
in
popf
icebp
push
push
arpl
mov
outsb
mov
pop
out
cmpsb
fidivrl
std
push
pop
mov
cmp
or
sbb
sti
inc
fcomps
jecxz
pop
icebp
roll
and
sub
and
pop
jge
lods
lods
jle
push
repz
xor
jp
xchg
push
xchg
sbb
pop
dec
add
shll
mov
jl
repnz
lds
pop
lock
push
inc
dec
jp
int3
stos
imul
loop
sub
push
or
jae
mov
jp
lahf
mov
push
mov
loopne
xor
and
dec
mov
test
and
adc
popf
hlt
stc
pusha
aaa
jne
push
stos
push
push
mov
or
test
jl
icebp
xor
jecxz
fldt
add
inc
and
dec
inc
pop
jge
hlt
jbe
jp
cmp
and
stos
adc
fstpt
xchg
push
popf
ret
mov
arpl
sbb
cmp
xchg
cmp
in
scas
loopne
imul
iret
inc
arpl
mov
sub
or
dec
sbb
std
movsl
subl
addl
gs
sbbl
dec
xchg
pushf
xor
push
inc
adc
sub
sbb
nop
push
jbe
and
test
cltd
xchg
sub
jge
orb
mov
fistl
jmp
lods
out
sbbb
or
adc
call
mov
shl
inc
fldcw
dec
fwait
mov
adc
mov
add
mov
jns
mov
aas
clc
pop
mov
enter
notl
icebp
shrb
add
fdivs
rcll
ret
dec
cs
enter
cmp
jg
sub
pop
jmp
iret
outsl
cmp
sub
pop
es
and
fidivrl
xchg
in
jecxz
push
sbbl
jmp
sub
cmp
gs
push
dec
sbbb
cmpsb
mov
push
addr16
cmp
ds
loope
xor
pop
and
stc
call
push
mov
cmpsl
mov
pop
dec
sbb
fsubs
mov
pop
dec
pop
inc
push
push
cmp
hlt
inc
leave
and
sbb
ret
stc
mull
mov
xchg
outsb
or
cmpsl
sbb
push
mov
lcall
cwtl
test
inc
outsl
dec
sbb
mov
into
popa
and
xchg
pop
xor
xor
jge
stc
push
jno
ficompl
test
cmp
cli
cmp
mov
pop
pusha
or
cmp
jle
sub
cmpsb
cs
cmp
test
pop
dec
mov
sub
insl
dec
clc
in
repnz
repnz
inc
pop
mov
sub
out
cwtl
sub
mov
or
lahf
adc
lret
mov
or
insl
xor
push
mov
ds
in
push
adc
mov
and
fs
lret
pop
and
sbbb
push
jae
repnz
push
lock
xor
mov
pop
xor
sub
fisubs
mov
imul
pop
notl
xchg
xlat
outsb
sbb
push
nop
lret
fisubs
cmpsl
mov
push
es
push
insl
jbe
mov
cmp
lahf
insl
cmp
std
call
jl
inc
xor
inc
lock
and
cmpsb
and
daa
push
jnp
sahf
movsb
in
lods
mov
jmp
cli
and
inc
imul
adc
add
or
adcl
or
cmpsb
stos
sbb
dec
push
sti
loopne
ss
cld
cmpsl
out
push
inc
icebp
inc
mov
pop
xchg
lret
rcrl
in
test
mov
jmp
inc
inc
or
pop
imul
fs
out
cmpsl
dec
mov
lods
insb
gs
call
sub
test
cmc
pop
rorl
sahf
aad
jl
dec
mov
dec
cmp
movsl
cld
mov
push
lcall
xchg
adc
pop
lock
cmp
mul
cmp
ret
outsw
sub
adc
or
add
mov
mov
repz
mov
cltd
in
fldt
push
insl
mov
and
mov
sahf
int3
fisubs
sbbb
fwait
add
popa
pop
cs
or
fimuls
xchg
sub
or
add
mov
push
pop
jp
aas
in
lret
xlat
jmp
les
and
cmc
mov
cmp
dec
fcmovnb
rorl
add
jge
pop
xchg
pushf
clc
aas
and
pop
std
loope
or
scas
sub
mov
push
fsubrs
lods
mov
adc
out
stos
rol
hlt
mov
mov
xchg
adc
sbb
sub
mov
jge,pt
aam
pop
push
insl
dec
jg
outsb
test
jbe
dec
dec
push
dec
fildll
sub
xchg
cmp
mulb
sti
outsl
in
cltd
stos
mov
xchg
push
lea
xchg
hlt
xchg
sbb
sub
cmpsb
xchg
adc
push
pop
cmp
inc
push
bnd
ds
lea
stos
sarl
jo
test
cmp
pop
mov
popa
xor
in
mov
mov
xor
add
cli
fs
inc
std
xchg
mov
push
aad
int
popa
and
sub
test
push
pop
test
xor
sub
xor
push
adc
cmc
pop
xor
repnz
popa
fnstenv
jo
cs
stos
leave
lds
lods
insl
pop
leave
test
fcompl
mov
rol
push
dec
rcrl
push
test
xchg
sub
push
cmp
stos
jbe
and
sub
cmp
stos
aas
pop
insl
mov
push
call
jl
rclb
jg
pop
rcr
mov
adc
jg
push
sub
dec
insb
xchg
push
icebp
adc
cmp
movl
mov
cmp
insl
fmull
lret
aad
hlt
inc
mov
dec
enter
mov
ret
sbb
ret
push
js
dec
fwait
shrl
les
cmp
sub
movsl
xchg
js
int
fs
jg
adc
xchg
push
test
and
xchg
add
sbb
scas
add
jno
mov
push
out
mov
fmull
cltd
add
mov
mov
stc
mov
ret
inc
sbb
cmc
mov
mov
pop
and
dec
mov
movsl
sub
xchg
pop
scas
aas
mov
fld
dec
sti
mov
into
jb
addr16
pop
lods
lds
sbb
movsl
fwait
jecxz
jns
mov
xchg
les
mov
lock
push
fwait
mov
scas
mov
mov
add
daa
shll
dec
outsb
sarl
popf
mov
jmp
pop
sbb
jae
pusha
sahf
xor
outsl
fwait
cmp
mov
xchg
inc
sub
mov
dec
loope
xchg
pop
or
fisubrs
fsts
mov
test
xor
jle
mov
inc
insl
push
or
fdivs
xchg
and
sahf
inc
fcomps
and
je
mov
js
aam
lcall
ret
pop
cli
pop
add
loop
mov
imul
sbb
adc
pop
popf
pop
pop
repz
test
divl
ret
cmpsb
inc
mov
ret
int
arpl
or
outsb
into
cmpsb
ret
repz
xchg
notl
fiaddl
and
adc
notl
adc
lcall
mov
loopne
iret
adc
in
inc
xlat
into
sub
rol
gs
pop
imul
push
jne
jne
fdivs
cld
inc
mov
ljmp
pop
pop
outsb
ds
xsha256
cmpsb
push
fisubs
cmpsl
push
jnp
loope
push
sub
sub
das
cmp
pop
lret
data16
js
jae
jbe
ja
aad
outsl
sbb
mov
push
and
cmp
add
fmull
repnz
cld
push
xchg
push
mov
push
cmp
sbb
inc
data16
add
lea
sub
mov
push
push
mov
sarl
jg
cmp
ror
xlat
jns
mov
or
imul
popf
mov
xor
mov
imul
mov
loopne
adc
fnstcw
imul
cwtl
sbb
push
repz
pop
push
lcall
call
sbb
sbb
rol
sbb
mov
xchg
pop
cli
inc
enter
and
shlb
roll
repz
decb
inc
cld
jns
js
cmp
fdivrs
in
xchg
mov
add
fldt
dec
mov
mov
mov
imul
dec
push
fidivl
andb
xlat
imul
mov
pop
out
pop
es
or
jmp
stos
or
fistpl
and
push
mov
push
push
sub
jl
inc
pop
fdivl
addr16
sub
sar
daa
cs
lahf
pop
scas
movsl
jne
sbb
je
sub
xchg
stos
in
xchg
icebp
insl
jge
xlat
pop
js
adc
adc
int3
push
dec
cmc
mov
aam
ljmp
sti
sbbl
xchg
mov
gs
js
or
jle
xchg
mov
push
jl
je
sbb
xor
lds
lret
and
rcr
mov
pop
icebp
movsl
dec
cmpsl
push
fld
js
sti
stc
push
test
jno
mov
pop
pop
cmpsl
cmp
clc
adc
sbb
ds
aas
icebp
dec
in
pop
xor
mov
test
pushf
roll
dec
lds
in
push
fimull
inc
fwait
push
adc
les
test
mov
std
add
int3
or
es
jo
movsb
pop
in
call
movsl
cmp
cld
arpl
test
and
ja
inc
inc
incb
das
lret
jb
imul
call
int3
faddl
cmp
insl
test
loop
push
sar
add
dec
pop
push
addr16
fwait
repz
and
jbe
jp
mov
inc
dec
outsl
lods
and
idivb
dec
and
push
add
andl
ja
adc
lret
mov
in
cmp
pusha
mov
addb
sbb
ja
sub
xchg
push
les
popl
pop
rcrb
mov
cmp
dec
out
jge
sbb
cmp
insl
push
mov
fsts
scas
inc
mov
loopne
xor
dec
movsl
sbb
inc
jmp
jmp
cmpsb
inc
bound
mov
mov
test
push
imul
add
xor
mov
mov
push
or
lret
xlat
push
arpl
adc
sbb
sub
pop
outsl
cmp
and
push
fsubrl
popf
out
or
popf
pop
xchg
mov
ret
mov
or
or
rcl
pop
sbb
or
rcrl
xchg
mov
sbb
into
inc
fs
xchg
mov
das
icebp
mov
andb
pop
push
fsubrs
cltd
test
cmpsl
inc
xor
pop
and
mov
jo
addr16
lahf
fildl
inc
jne
sbb
lcall
xchg
xchg
ret
je
movsl
push
sbb
mov
xchg
arpl
pop
in
aas
gs
pop
mov
pop
xor
pop
in
mov
cmpsb
and
mov
sub
pop
in
stos
cmp
pop
inc
stos
lret
aam
inc
test
inc
inc
ja
or
inc
inc
push
push
outsl
aaa
arpl
and
jno
les
iret
mov
inc
adc
fsubs
je
cmp
xchg
outsb
into
icebp
out
cmp
mov
ljmp
cmc
mov
add
jo
lds
sub
jmp
out
or
cmp
nop
imul
insl
xchg
div
mov
gs
cld
xchg
test
cmp
fwait
cld
inc
jp
icebp
mov
out
xchg
test
pop
adc
in
outsl
add
imul
fidivs
or
scas
mov
out
notl
lods
bound
xchg
scas
lret
cmp
nop
lcall
test
aad
xor
add
push
in
and
jg
cmp
les
jmp
iret
cltd
push
psrad
push
xor
and
push
rclb
dec
scas
and
shrl
cmp
adc
int
cmp
push
in
mov
jnp
cmpsl
sub
add
aad
pop
mov
xor
shll
shrl
out
test
inc
out
inc
addb
ja
xlat
dec
jno
and
fadds
jne
arpl
mov
call
cmp
outsb
push
cmp
push
lods
dec
sarb
repz
xchg
sub
les
stc
inc
xor
outsl
mov
cmp
gs
push
push
and
enter
dec
pop
xor
sub
fnstenv
mov
hlt
sub
outsl
testl
inc
aad
jmp
mov
enter
shrl
sub
jecxz
push
enter
dec
in
mov
jp
mov
jp
push
jnp
pushf
or
and
lock
lea
xchg
mov
sbbl
push
bound
cltd
cli
inc
or
dec
add
mov
sti
adc
push
cmp
ret
jle
cmpsb
inc
loopne
xor
adc
ljmp
fs
das
mov
jl
xor
add
das
ret
in
and
dec
pop
add
mov
mov
push
stos
cmp
nop
daa
orb
aad
xor
les
shll
xchg
fcmovnbe
lods
cmc
outsb
fwait
es
pop
aas
int3
int3
cmp
std
dec
inc
lret
jecxz
push
jb
cmp
mov
js
lret
add
pop
jp
mov
div
cmp
xchg
mov
gs
cli
fadd
aam
mov
jge
dec
mov
pop
dec
dec
cmpsl
rolb
insl
mov
jne
ror
mov
ficompl
mov
mov
out
cld
into
cmp
dec
popf
push
mov
or
xlat
mov
mov
mov
je
jp
sahf
adc
into
lods
subb
sbb
pusha
xor
test
enter
and
and
mov
inc
push
outsl
push
into
fisubl
xor
mov
lods
loop
xchg
enter
cmp
call
jecxz
hlt
mov
loope
dec
mov
or
sub
sbb
sahf
cmc
lret
xor
xor
enter
sub
pusha
das
loop
out
in
mov
gs
mov
mov
jmp
adc
dec
sbb
mov
adc
pop
out
cmpb
lea
sub
mov
xor
add
gs
loopne
push
add
mov
sub
cmp
outsl
sbb
cmp
int3
and
push
cmpsl
add
cwtl
adc
out
add
push
and
jmp
std
inc
sub
cmp
push
cmpsb
jns
ss
adc
or
and
sbb
adc
xor
sbb
cmp
data16
pop
dec
mov
clc
out
mov
lds
test
xchg
jecxz
push
add
es
jne
arpl
dec
orb
stos
mov
fdivrs
xchg
push
loope
ret
stos
mov
lods
icebp
insl
add
fcoml
or
pushaw
add
adc
push
rcl
repz
inc
jne
mov
cmp
mov
adc
rcrl
mov
add
sbbl
add
lock
fwait
mov
movsl
cmp
jnp
push
mov
into
loop
sbb
xor
lahf
mov
sub
pop
outsb
push
rcll
pop
out
icebp
mov
rcrb
add
nop
mov
and
mov
jb
mov
mov
cmp
and
popf
cmp
mov
sub
lret
sti
in
push
ret
mov
daa
ja
test
xlat
ret
push
pop
dec
scas
clc
cmp
jp
insb
adc
and
fcoms
cmp
fs
cmp
bound
loope
js
incl
loop
push
and
mov
stos
ficompl
xor
in
mov
test
imul
data16
iret
xchg
sub
jmp
inc
sub
jl
mov
imul
in
mov
insb
adc
bound
ljmp
fcoml
inc
mov
jbe
in
xchg
xchg
ds
push
sub
popa
push
js
out
mov
out
notb
fisttpll
in
add
dec
mulps
ret
jns
jp
leave
push
add
ljmp
mov
loopne
push
xchg
xor
and
inc
pop
push
push
jmp
add
inc
adc
loopne
out
out
and
pop
sbb
mov
insb
dec
scas
outsl
daa
pop
sbb
pop
imul
enter
jno
lcall
insb
push
roll
adc
in
mov
insl
loop
sbb
mov
push
in
out
jle
stc
inc
push
pop
inc
inc
add
xor
fsubrl
or
push
cld
dec
jp
add
mov
addr16
lock
push
pop
push
inc
mov
inc
push
jo
mov
jbe
ljmp
aaa
daa
or
add
dec
jmp
mov
lds
jbe
shrl
mov
or
pop
mov
pushl
jle
imul
loop
ret
jnp
aas
adcb
hlt
pop
jb
fcoms
jnp
fucomi
mov
dec
jno
stos
xchg
pop
xor
mov
pop
insb
loop
pop
inc
and
xor
push
imul
xchg
and
jge
negb
jmp
jge
outsb
push
mov
or
push
scas
aad
mov
dec
push
sti
xchg
inc
jne
mov
add
sub
adc
adc
mul
push
jg
inc
jo
jo
pushf
push
das
icebp
enter
or
sub
mov
jecxz
xchg
sub
push
pop
sbb
mov
in
das
dec
jmp
test
mov
in
sub
daa
lahf
pop
mov
mov
mov
fdivs
mov
cli
dec
loopne
dec
jg
cmp
scas
fcmovnb
lods
sahf
icebp
mov
push
ja
xor
mov
fcoml
imulb
mov
das
pushl
jecxz
mov
dec
mov
test
push
jge
mov
cmp
movsl
push
aas
mov
jb
or
jno
arpl
pop
sar
jae
negb
scas
or
jns
add
daa
ljmp
or
ljmp
loop
es
or
outsl
stc
pushf
fdivl
fbld
xchg
dec
sbb
mov
add
loopne
fucomip
ret
repnz
add
cmp
and
mov
ja
repz
sbb
mov
or
jne
mov
xchg
sbb
mov
aam
mov
add
stc
xor
adc
pop
enter
imul
jle
jo
adcb
mov
mov
mov
pop
xlat
rcr
push
loope
mov
in
adc
es
pusha
xchg
or
mov
inc
or
ss
dec
lea
js
jl
mov
mov
sub
icebp
inc
sub
movsl
or
mov
ds
imul
and
in
test
into
xor
int
repnz
adc
cmpsl
push
mov
mov
sub
shl
shll
repz
icebp
mov
cld
xchg
rcl
add
and
mov
sbb
movsl
adc
lret
mov
sub
stc
bound
or
shlb
mov
in
sbb
mov
idivl
stos
mov
in
and
cmpsb
cmp
mov
pop
ljmp
std
call
ds
mov
xchg
leave
aas
cmp
arpl
mov
pop
cwtl
inc
fimull
fstps
popa
mov
test
icebp
cmpsb
mov
and
sbb
arpl
cltd
add
es
cli
and
lea
pushf
jo
mov
ja
sub
push
push
ret
in
inc
jo
fnstcw
dec
sub
mov
testb
data16
mov
jl
sub
inc
dec
mov
enter
push
lcall
cwtl
stos
push
cltd
push
mov
mov
loopne
hlt
pop
mov
add
into
pop
xchg
or
add
xor
push
sub
or
gs
and
shll
mull
popa
cmp
pop
jecxz
icebp
and
inc
sub
std
dec
pushf
xor
fnstcw
mov
pop
dec
fisttps
addr16
and
hlt
aam
jge
dec
fistpll
mov
mov
mov
lahf
lea
je
cs
jle
mov
inc
lds
lods
cmpsb
push
fpatan
scas
dec
cmc
mov
jl
sub
and
adc
push
jns
mov
jge
das
scas
cmpsb
xor
cld
jbe
adc
cltd
sbb
data16
shlb
xchg
loope
sub
cmp
clc
or
das
adc
pusha
setp
aad
lods
add
call
mov
out
outsl
sbb
inc
or
cli
jp
jle
mov
pop
lea
iret
ss
scas
fbstp
inc
iret
fs
xchg
imul
outsl
rclb
sbb
mov
pop
pop
xrelease
test
xorb
jecxz
or
sarl
das
jno
pusha
dec
dec
fdivs
xchg
push
adc
ljmp
xor
inc
push
js
pop
lods
decl
mov
push
mov
push
mov
xchg
or
pop
ja
mov
orb
or
fsubrl
out
hlt
mov
push
mov
pop
int3
cmp
enter
ret
or
mov
clc
cmp
xchg
lds
mov
call
xchg
sub
or
fxch
hlt
and
aam
mov
cmp
jmp
es
adc
jbe
lahf
jle
lds
sbb
pop
mov
hlt
xchg
sbb
outsb
loope
test
out
orb
fidivl
or
shlb
into
push
outsl
add
sbb
or
jge
jmp
cmp
mov
xor
mov
sub
fildl
or
imul
ret
leave
jno
nop
popf
das
cwtl
push
mov
std
add
fnstenv
and
out
mov
loopne
or
sbb
pushl
xchg
sbb
cmc
mov
lret
ljmp
addr16
in
mov
or
pop
sbb
sbb
inc
fstpt
pop
and
mov
xchg
jmp
sbb
pusha
std
inc
pop
das
inc
mov
jbe
sub
ds
push
rcll
jo
inc
addr16
sbb
push
mov
mov
fnstenv
aaa
cmp
add
outsb
clc
scas
push
bound
mov
rcrl
rcrb
or
pop
mov
loop
jns
push
dec
adc
lds
xor
sbb
and
fnstsw
cwtl
dec
mov
testl
rcll
mov
add
das
add
mov
rorb
mov
pop
adc
jl
sbb
popf
or
mov
jp
cmp
cmc
dec
movsl
pop
call
sub
js
jnp
mov
pop
hlt
cwtl
add
xor
jp
and
in
jle
loop
and
lret
xlat
lahf
xchg
adc
jecxz
aam
mov
out
mov
sbb
cli
or
nop
ss
stc
push
dec
sbb
in
push
and
pop
aas
lods
popf
jg
fisttpl
push
mov
inc
pusha
adc
push
mov
and
add
or
mov
inc
lret
gs
popa
mov
mov
lock
daa
lret
jne
scas
lcall
in
nop
xor
inc
fsubp
inc
sbb
dec
inc
fsubr
inc
cmp
mov
loope
add
push
sub
addr16
or
pop
lahf
test
inc
push
mov
jne
mov
pop
insb
sbb
xor
xor
arpl
mov
mov
arpl
je
xchg
jne
mov
and
xor
xchg
repz
stos
pop
movsb
push
das
xchg
mov
xchg
pop
xchg
scas
inc
dec
orl
fstps
mov
add
mov
fadds
mov
push
stos
mov
jp
mov
hlt
mov
out
shrl
cmp
pop
sbb
shl
push
es
stos
pushf
cmp
scas
mov
pop
push
xor
jle
addr16
and
xchg
out
repnz
adc
xor
mov
ret
dec
rorl
leave
sbb
cmp
jae
sbb
mov
cli
clc
mov
xorb
in
je
aaa
dec
pop
imul
cwtl
inc
js
push
dec
dec
jmp
bound
pop
loope
xchg
xor
and
pop
mov
in
push
daa
jge
mov
int
or
add
movsl
mov
das
popa
cmp
mov
ret
insb
loop
fcomps
push
sbb
and
insl
lcall
fldpi
mov
test
fsubrs
cmp
push
movsb
scas
aam
out
sub
scas
sub
movsb
jae
in
sbb
and
sbb
icebp
stos
std
mov
das
fcoml
sbb
out
pop
adc
aad
dec
jns
loop
mov
scas
sbb
mov
sbb
ds
bound
lcall
aaa
hlt
push
or
push
jns
pop
addr16
xchg
inc
xchg
sub
and
jne
rolb
mov
cmp
cmp
inc
xchg
xchg
dec
testb
arpl
inc
and
xchg
xchg
stos
mov
mov
mull
outsl
push
push
inc
mov
fnsave
dec
cmpsl
dec
aas
xchg
and
mov
addr16
int
jb
outsl
rorl
xchg
ljmp
xor
mov
cltd
sahf
add
ret
in
pop
or
lret
cmp
pop
xchg
adc
push
stos
sub
clc
sbb
pop
ficomps
adc
add
or
rcll
mov
dec
jno
push
movsl
inc
xor
out
cltd
stos
push
and
lahf
lock
inc
cltd
repnz
fildll
lret
mov
xchg
cli
push
fsub
xchg
pusha
push
je
add
sub
lret
cltd
sbb
xchg
lock
dec
pop
mov
cmp
shrl
inc
fwait
bound
outsb
adc
and
push
mov
pop
in
dec
lret
mov
pop
pop
jb
jne
xor
sub
int3
jnp
and
dec
std
fs
add
mov
jmp
lods
dec
add
sub
mov
jmp
leave
fnstenv
lods
negb
in
add
dec
in
mov
jne
clc
lock
aas
and
inc
scas
pusha
pop
mov
jno
pop
mov
orl
rorl
into
data16
mov
outsl
das
sarb
stos
fldt
sub
inc
in
stos
ds
add
push
lcall
push
inc
xor
and
mov
sub
jg
xchg
es
pop
jp
cwtl
push
adc
adcl
cmp
mov
icebp
dec
pop
pop
ss
sti
iret
push
and
mov
or
leave
cmpsl
idivl
nop
sbb
leave
imul
out
xor
xlat
scas
inc
hlt
add
push
xor
fstps
dec
fxch
fmuls
jle
std
imul
sbb
mov
or
cmpsb
pop
int3
arpl
loop
lahf
out
mov
or
mov
xchg
ljmp
xchg
cwtl
ljmp
out
imul
testb
sub
adc
xchg
jecxz
push
mov
push
fdivp
xchg
int3
stc
popf
std
ficomps
jnp
push
pop
mov
loopne
push
lock
aam
int3
pop
dec
dec
insb
pop
xor
rol
repnz
lds
mov
dec
out
add
mull
push
sub
loop
test
pop
pop
jnp
and
aad
call
jge
push
push
shlb
mov
add
es
movl
int3
sti
clc
sbb
xchg
les
sub
xchg
out
jmp
roll
cmp
insl
fcoms
jecxz
mov
lods
mov
fidivl
gs
outsl
push
pop
aam
jae
mov
call
cmp
jno
lret
adc
addl
or
loope
pop
push
add
cmp
test
fsubl
dec
daa
scas
inc
test
sub
mov
xchg
mov
sbb
jno
outsl
out
and
mov
jae
ss
int3
mov
lcall
repz
out
lahf
xchg
sub
nop
je
add
ljmp
andb
push
popf
pushf
fidivrl
mov
movb
lret
repnz
push
jecxz
or
test
ret
push
inc
jb
sub
clc
mov
outsl
test
mov
xchg
mov
add
filds
fstpt
mov
cmp
ss
lcall
pop
sub
call
mov
xor
push
aas
popl
push
je
push
into
jbe
or
lock
pop
sub
movsb
cmp
jae
xchg
mov
fisubs
stos
into
das
lds
es
jecxz
xlat
or
adc
out
inc
aam
xlat
mov
dec
lods
push
outsl
stc
lds
lea
sbb
add
push
dec
and
mov
xchg
pop
xchg
in
xor
lds
push
jp
adc
into
outsl
mov
rcll
stos
xchg
mov
aas
add
pop
mov
jo
das
call
scas
jns
leave
and
xchg
clc
lock
mov
js
in
outsl
lea
fidivrs
std
faddl
jecxz
js
daa
stos
cmp
cli
cli
lea
pushf
dec
nop
push
mov
aas
ljmp
push
push
or
lods
and
push
mov
fildll
cltd
aad
loop
xor
repnz
jae
int3
dec
dec
mov
adc
test
inc
cmp
cmp
inc
fnstenv
mov
push
insb
into
sahf
fidivl
dec
stos
addr16
sub
mov
pop
add
add
cwtl
lods
xchg
adc
mov
push
jae
push
add
fwait
pop
popf
cmpsl
out
fadds
and
or
xchg
sub
push
fs
les
pop
ret
subl
ret
or
cmp
sbb
hlt
ret
pop
repz
out
jo
pop
imul
scas
fs
xor
mov
push
fldt
and
push
push
popf
cmp
adc
sahf
push
outsl
rol
fwait
cmpsl
ret
icebp
mov
aas
mov
int
pop
push
in
ror
ret
ljmp
fstpt
dec
stos
test
xchg
push
and
int3
ds
xorl
xchg
insl
dec
cmpb
add
stos
push
fwait
test
xchg
iret
es
cs
xor
sahf
stos
dec
sbb
xchg
or
arpl
repnz
dec
and
or
mov
jecxz
addr16
loope
repnz
push
lods
sti
test
in
and
aad
cld
mov
mov
push
mov
imul
jge
fidivs
aam
rcll
sbb
enter
mov
push
and
mov
lahf
add
ret
add
xchg
loope
and
adc
sub
jo
vblendpd
dec
push
mov
arpl
in
pop
movsl
imulb
loopne
adc
dec
pop
fwait
in
mov
mov
lods
pop
push
in
add
movsl
out
xlat
xchg
lds
movsb
inc
mov
in
cmp
loope
jnp
das
movsl
xor
shlb
cmpsb
ljmp
inc
cmp
sbb
pop
ja
mov
cmc
xchg
sub
shll
cwtl
cmp
scas
js
xchg
int3
xlat
xchg
cld
xchg
mov
ja
xor
test
sbb
icebp
les
in
mov
arpl
sarb
adc
mov
push
aad
mov
les
add
xchg
andb
push
imul
jmp
jl
enter
push
mov
stc
insl
es
mov
sbb
in
or
sbb
movsb
movsl
pop
mov
movsl
call
xchg
stos
ret
jns
ret
sbb
sub
push
push
mov
mov
cmp
adc
data16
mov
call
push
loopne
fidivl
sarl
insl
out
jne
cmpsl
and
mov
scas
push
xchg
sti
adc
mov
add
lret
and
push
outsb
mov
xchg
and
icebp
xor
pop
lahf
test
fsubl
lret
xchg
jns
inc
push
push
js
add
out
xor
pop
pop
xor
push
fs
repz
mov
jb
in
int
push
xchg
sub
test
ret
shrb
dec
cmpsl
cmp
dec
insl
aam
add
add
mov
setbe
aam
sarb
push
jg
test
lods
xor
test
imul
xor
test
or
jmp
andl
xchg
xchg
sbbl
sub
test
scas
sti
push
out
xchg
aad
fsubrs
int
popa
movsb
sub
out
xchg
pushf
es
cmp
call
clc
mov
arpl
xor
inc
xor
adc
insb
dec
sub
adc
xchg
test
int
test
add
ja
mov
xchg
add
xor
cmpsb
xor
scas
jbe
int3
arpl
pop
jmp
mov
jmp
mov
pop
repnz
std
xlat
cmc
mov
insl
add
adc
jb
lods
pop
in
and
ficoms
adc
dec
mov
add
cmpb
insb
outsb
ds
push
in
mov
insb
std
push
adc
pop
push
sub
inc
cmp
mov
test
mov
pop
cmp
fcoms
fstpl
jo
dec
pusha
stos
clc
mov
cmc
outsb
stc
push
fs
xchg
pop
ds
outsb
or
mov
into
test
mov
mov
stos
cmp
xor
xchg
imul
or
addb
and
jp
subl
pop
ret
pop
adc
popf
cmpsl
xchg
jg
call
sub
mov
sbb
jg
loopne
or
int
in
rcrl
jne
jge
repnz
cltd
fdivs
ret
andl
lock
fldenv
or
iret
leavew
xor
xchg
ljmp
cs
popa
mov
mov
fistpll
xchg
mov
insb
sbb
sbb
mov
inc
mov
les
xor
pop
and
push
enter
mov
lea
mov
sahf
dec
push
and
inc
and
mov
mov
add
ljmp
jno
cmc
test
imul
repnz
mov
mov
aaa
xor
inc
es
and
lds
mov
sbb
das
jo
xchg
sbb
adc
adc
xor
out
test
fwait
xchg
push
or
icebp
mov
shrb
mov
negl
stos
jmp
nop
lea
repnz
and
and
stos
cli
pusha
sub
in
or
into
outsl
testl
push
aad
iret
adc
jne
aad
jecxz
sub
jle
jle
and
enter
cli
sbb
nop
notl
add
sbb
pop
ret
sbb
sarb
sahf
sub
add
xlat
jb
pop
scas
sub
and
rolb
ret
adc
repnz
push
mov
scas
inc
repz
push
mov
add
pop
pop
mov
fistps
mov
mov
lcall
imul
lcall
les
xchg
aas
test
test
inc
and
inc
sub
xchg
popf
sub
jnp
repz
push
or
popf
imul
je
sbb
mov
cmp
adc
es
hlt
xchg
imul
call
xchg
sub
test
fdivr
aas
push
xchg
jle
lods
add
scas
inc
sbb
in
jno
jmp
es
jno
mov
inc
pusha
inc
cli
lods
pop
call
adcb
jbe
in
push
mov
xor
add
enter
fs
int
pushf
pop
mov
pop
test
xchg
and
arpl
add
mov
inc
xlat
push
js
insb
test
sahf
test
xchg
xchg
dec
or
sbb
fidivs
and
pusha
jno
call
xchg
cmp
dec
fwait
or
fs
and
xchg
jmp
fbld
sti
adc
mov
jb
sahf
ret
add
iret
xor
insl
inc
push
sbb
out
ss
add
fcoml
sbb
lods
push
in
xchg
movsb
lahf
add
mov
cwtl
out
inc
adc
popa
movsb
cld
fwait
into
call
sub
jle
pop
daa
push
mov
test
push
cmp
pop
testl
arpl
push
les
sbbl
add
cmpps
adc
dec
cmpsb
sub
mov
xor
jle
xchg
cli
jne
xor
xchg
lock
mov
push
lahf
shrl
test
loopne
es
aam
adc
pop
fnsave
push
dec
sbb
call
dec
pop
jae
jg
cs
jl
and
inc
inc
into
test
cli
in
and
sbb
ja
or
push
lea
cwtl
das
je
pop
cld
sbb
imul
inc
movsb
pop
dec
ret
adc
mov
push
gs
push
loope
into
xchg
inc
notl
imul
jmp
scas
movb
setno
sbb
rorl
push
or
pop
cmc
sti
mov
jl
sbb
cmp
inc
addl
jns
enter
jl
mov
iret
cld
cmp
and
icebp
push
jmp
push
push
out
adc
inc
pop
lret
outsb
rclb
mov
nop
jnp
fdivrs
das
cmpl
xor
pop
pop
sub
test
dec
push
cmp
movsl
add
lods
mov
test
andl
add
mov
lea
sbb
popf
shl
cli
xchg
pop
push
xlat
xor
xor
fsubrs
or
sbb
icebp
mov
push
int
notb
fistl
lahf
xchg
cli
inc
les
jecxz
push
lds
test
rcrb
dec
loope
pop
out
pop
loopne
lds
pusha
pop
xlat
shll
and
hlt
mov
aam
jnp
in
popa
mov
pop
sbb
mov
jecxz
push
les
lods
insl
jo
push
mov
fidivrl
inc
xor
cwtl
dec
push
mov
loop
in
adc
lret
cmpsl
std
add
push
dec
outsb
dec
pop
xor
xchg
sbb
cmc
sub
sub
cmpsb
enter
outsl
in
mov
or
int3
mov
sub
cld
xor
loopne
in
inc
xchg
dec
stos
das
aas
mov
adc
and
pop
adc
jge
xchg
pop
push
xchg
mov
addr16
adc
xchg
and
repz
jge
sti
int3
lods
dec
mulb
int3
mov
movsb
jns
testl
insl
cwtl
push
pop
jne
jecxz
icebp
loop
pop
dec
out
imul
cmp
pop
jg
pop
mov
mov
sti
pop
mov
pop
insb
mov
hlt
arpl
testl
mov
fcmovbe
outsl
xor
lds
imul
scas
mov
shll
rcll
mov
ds
mov
dec
mov
sbbl
inc
mov
cmp
dec
cmp
in
and
add
dec
les
mov
sahf
fistpll
mov
jnp
lock
icebp
pop
cmpsl
xorl
sub
pop
nop
xchg
test
stos
loop
or
jecxz
sbbb
test
inc
inc
imul
jmp
cmp
mov
push
aad
mov
and
je
sbb
push
jmp
mov
test
adc
xor
xchg
push
test
cli
jle
jo,pn
pusha
mov
pop
or
cmpb
adc
test
add
jg
pop
fidivs
test
fstps
xchg
jnp
pop
xor
sbb
hlt
xchg
mov
and
and
add
pop
xlat
jecxz
sub
cmp
jecxz
out
ret
shll
icebp
mov
repz
bound
adc
xor
test
lea
inc
stos
mov
xchg
xchg
push
or
das
xchg
addr16
push
stos
push
adc
jnp
dec
and
xor
aam
popa
push
push
cs
and
inc
adc
dec
mov
sbb
jmp
mov
inc
xchg
jp
loopne
cmc
adc
sahf
pusha
lahf
mov
inc
adc
imul
in
pop
pop
rorb
sti
ljmp
inc
push
or
or
rcll
xchg
cwtl
and
adc
popl
repz
repnz
sub
pop
inc
clc
pop
cltd
cmp
xor
xor
sub
mov
push
push
in
pusha
je
int
sub
pop
xor
pop
iret
add
fs
gs
sbb
mov
jno
aad
js
jnp
pop
inc
push
popf
jno
cmc
mov
lret
scas
rorb
sbb
stos
jle
bound
xchg
insl
clc
loope
scas
inc
fiadds
jecxz
aad
push
jne
push
cmpsl
roll
sahf
xchg
int3
sbb
jmp
test
mov
sub
xor
add
xor
jns
sub
in
cmp
push
push
aaa
pop
in
dec
xchg
pusha
adc
sbb
adc
scas
out
test
xchg
xor
and
lods
xlat
mov
fs
pusha
sti
movsl
xchg
cwtl
fs
gs
test
mov
adc
pop
cmp
popa
mov
sbb
fisttps
jmp
mov
or
pop
pusha
cwtl
and
push
mov
jl
cwtl
and
lods
jle
add
aam
and
adc
enter
or
ret
push
sbb
and
mov
out
xor
pop
lds
sub
cs
xchg
cmp
add
sti
inc
push
adc
lret
test
jecxz
lret
pop
add
popf
jbe
or
icebp
mov
cli
fcoms
stos
or
outsl
inc
cmp
enter
dec
pop
push
loop
pop
mov
push
jmp
subb
adc
arpl
subb
sub
cmp
nop
dec
fmull
fwait
and
ret
push
ljmp
push
cmp
xchg
push
mov
cli
fdivr
decl
and
mov
push
and
rcrl
dec
std
mov
cs
inc
repz
stos
lods
jmp
sub
fbld
scas
push
mov
cmp
adc
sbb
dec
xchg
out
adc
in
push
ds
std
mov
das
dec
cmp
jnp
fistpl
push
cmp
mov
mov
popf
push
sti
pop
mov
jnp
iret
jecxz
pop
fidivl
imul
shlb
je
movsb
fnstenv
lcall
dec
push
pop
aam
jo
stos
in
and
mov
and
mov
ljmp
negb
popf
or
xor
adc
imul
jbe
data16
pop
insb
pop
test
jnp
add
or
pop
out
leave
js
les
lods
inc
mov
and
adc
das
inc
sub
pop
movsb
push
push
and
jne
adc
push
mov
inc
mov
pop
imul
repz
stos
push
fxch
add
add
or
mov
mov
mov
pushf
sbb
cwtl
inc
fldcw
or
adc
lods
imul
nop
mov
inc
pop
out
mov
push
jmp
xor
cmp
push
xor
stc
and
popf
cmpsl
adc
push
stos
mov
mov
jns
ret
sbb
jg
aaa
stc
js
push
insb
ret
out
fdivs
cld
or
mov
out
fldenv
fwait
mov
mov
hlt
js
inc
adc
xor
cwtl
and
mov
imul
mov
lds
scas
pop
lea
lcall
xor
and
xchg
mov
mov
stos
jmp
aas
mov
jge
divb
jns
jae
mov
in
push
in
sbb
or
jmp
je
cwtl
rolb
notb
mov
cli
mov
mov
xchg
pop
xor
adc
pop
js
ljmp
jmp
and
call
sub
shl
add
clc
push
inc
xor
sbb
in
mov
push
cli
xlat
xchg
call
xchg
add
push
repnz
inc
inc
aas
hlt
out
pop
shlb
rorb
mov
adc
inc
cmp
push
gs
cld
mov
mov
xor
int
sub
data16
js
shll
out
imulb
mov
or
cli
cltd
pop
jo
pop
and
in
xchg
lods
jno
jp
xor
cmp
xchg
jne,pn
insl
xor
push
mov
lods
xchg
arpl
fsubrp
gs
adc
mov
sbb
es
xchg
jo
packssdw
mov
ss
or
mov
idiv
pop
mov
sbb
ret
insb
sbb
jnp
mov
pmaddwd
inc
cld
add
sub
mov
test
pop
fidivl
mov
cs
fistps
mov
xlat
imul
cltd
xchg
inc
fistl
aaa
mov
inc
dec
xlat
scas
stos
bound
dec
outsb
std
inc
insl
xchg
add
fdivr
lcall
adc
out
std
icebp
lods
mov
cld
fmulp
data16
cs
cmp
mov
xchg
or
frstor
ret
imul
xchg
popa
dec
repnz
jecxz
mov
mov
addr16
cltd
xor
lahf
xchg
xor
loop
in
fcomp
jmp
and
aaa
testl
popf
out
ud1
push
lock
pop
jo
add
add
iret
out
test
mov
or
mov
jb
mov
pop
imul
test
in
jne
xchg
sub
jae
sub
adc
in
and
jno
sarb
cmp
pop
into
lea
jge
xchg
xchg
aas
mov
sub
inc
leave
sub
sbb
outsl
ret
repnz
sahf
call
repz
cmp
iret
inc
mov
sub
jae
arpl
dec
xchg
dec
xchg
inc
mov
int
push
js
outsb
mov
test
js
pushf
push
jl
cmp
pop
cmpsb
sub
repz
and
jno
sarb
mov
mov
fnstsw
mov
jp
adc
aam
mov
xchg
xchg
bound
mov
in
leave
ret
pop
sti
or
mov
nop
pop
int3
cld
mov
push
mov
sbb
insb
cmp
push
leave
xchg
push
popf
fdivrs
into
aad
pop
mov
mov
jl
mov
stos
jecxz
fwait
push
cmpsl
xor
rol
push
xorb
xchg
mov
iret
leave
inc
jl
xor
dec
mov
push
dec
inc
fidivrl
push
cwtl
leave
pop
lret
push
mov
xor
push
das
cmp
xchg
mov
insb
push
in
jge
jns
add
sub
xchg
jns
push
cmc
cmpsl
mov
jl
lret
inc
stc
xchg
jle
xor
cwtl
lahf
sbb
jb
xchg
cmp
loop
inc
push
xchg
lock
adc
mov
or
xlat
aam
mov
rcrl
mov
loop
stos
push
or
inc
and
leave
aam
push
sahf
imul
scas
nop
sbbl
dec
cmp
sahf
and
mov
mov
shl
sub
outsb
sub
pop
dec
lods
mov
sub
cli
mov
leave
adc
repnz
pop
xor
repnz
ret
jns
leave
test
pop
inc
rcrl
aad
cmp
dec
pop
fstl
out
ficoml
cmp
out
gs
dec
int3
test
mov
push
out
int3
movsl
in
push
sub
add
fs
sbbl
sti
rcrb
sbb
std
dec
mov
adc
das
das
push
jno
cmp
scas
xchg
or
inc
push
data16
cmp
push
adc
and
add
or
xchg
sub
bnd
add
xor
fbstp
mov
xlat
hlt
xor
int3
out
inc
dec
icebp
repz
jns
dec
and
inc
out
xchg
dec
ror
and
xchg
popa
push
ss
dec
pop
add
and
or
pusha
mov
pop
or
std
in
push
insl
ret
lret
jne
or
jp
lock
and
call
dec
lret
div
addr16
popa
scas
and
cli
jne
push
mov
imul
add
dec
mov
testb
pop
adc
nop
xor
js
mov
lcall
dec
rorl
popa
dec
fucom
and
pusha
and
insb
mov
jne
dec
mov
push
xor
aad
cmp
and
sub
out
insl
cli
fcmovnb
sub
mov
mov
pop
shr
popf
repz
shrl
dec
cmp
mov
xchg
add
pop
adc
data16
xchg
adc
lock
and
mov
ret
mov
add
out
scas
adc
notl
add
ret
sub
mov
sbb
jns
add
sbb
data16
cmp
rolb
push
mov
inc
jnp
cmp
ljmp
pop
stc
inc
or
mov
xchg
pop
divl
xchg
and
jne
or
daa
adc
stos
mov
push
xor
mov
movsb
pushf
fs
lock
xchg
lods
fisubrs
iret
jle
in
pusha
mov
lret
cld
push
cli
cmpsl
aas
push
in
mov
and
ljmp
popf
inc
popf
sub
aaa
mov
or
rcrl
mov
push
fnsave
or
sbb
sub
out
fldenv
mov
push
cmpsl
mov
sahf
inc
inc
mov
mov
mov
fistl
loopne
sahf
lods
mov
scas
adc
movsb
addl
mov
dec
out
adc
jne
jb
cld
push
outsb
clc
inc
sbb
fists
test
pop
jb
or
pop
repnz
fs
sub
fmuls
push
adcb
outsb
std
and
dec
sbb
ds
icebp
scas
mov
cmpsl
adc
mov
add
xchg
aam
xchg
ret
int3
nop
bound
sub
xor
fidivl
mov
xor
clc
cmpsl
cmp
inc
lods
mov
add
pop
lock
cld
sub
popl
scas
jg
loope
lahf
dec
mov
daa
imul
sti
ret
cmp
adcl
and
iret
pop
jg
dec
repz
aad
jnp
std
cmc
push
cmc
or
add
jg
mov
xor
leave
push
mov
cmp
pop
mov
fisubl
inc
push
aas
insl
int
sub
sahf
pusha
jno
imull
sbb
dec
sbb
lock
cmp
inc
ljmp
call
frstor
out
ss
lcall
outsb
or
mov
shrb
push
mov
inc
sub
test
nop
arpl
bound
loopne
lods
push
sub
repnz
jno
adc
xlat
in
mov
fidivs
fmuls
mov
jno
stos
fisubl
popa
or
inc
add
cmpl
roll
pop
add
cmp
pop
cmp
pop
sti
mov
ret
cmpsb
pop
addl
jl
lods
popf
fisubs
pop
int3
sub
dec
leave
iret
sub
inc
test
sbb
stos
inc
push
cmp
or
dec
add
ds
fcomps
loopne
lds
scas
xor
inc
xchg
xchg
pop
test
mov
outsb
push
fdivp
cmp
lret
dec
and
shl
cs
xchg
mov
pop
sub
sbb
or
xlat
std
jne
push
dec
pusha
mov
fwait
jl
mov
fwait
lods
stos
into
mov
enter
mov
shll
test
aaa
xlat
sbb
mov
jl
fcompl
jmp
push
xchg
popa
fcompl
and
aam
cwtl
jno
addr16
xor
ret
xorl
shr
add
mov
in
xchg
sub
loop
xchg
mov
dec
aam
aam
popa
test
pop
adc
call
jns
sbb
lcall
pop
add
xchg
scas
fstl
loopne
pop
movsl
aam
pop
leave
lret
adcl
xchg
in
lahf
sub
inc
out
insb
sbb
shrl
xor
insl
decl
in
sarb
daa
mov
movsb
into
popa
and
aaa
cmp
xchg
add
mov
push
adc
xchg
fnstsw
repnz
jmp
ds
adc
adc
cwtl
sbb
xchg
leave
mov
popf
xor
or
pop
incl
or
test
xor
pop
in
fnstcw
mov
and
xchg
dec
sbb
repz
fmuls
stc
push
out
sub
paddb
push
sbb
imull
push
lcall
testl
jmp
jp
negb
pop
enter
movsb
dec
cltd
pop
shll
imul
fldl
cmp
dec
push
adc
push
xlat
movsl
adc
loop
cmp
add
jns
in
rep
into
mov
xchg
nop
pop
ficoms
subb
and
dec
cmp
mov
loopne
xorl
jb
jge
daa
and
bound
ja
sub
dec
flds
jo
pusha
das
ljmp
add
sub
out
lock
rcrb
pop
sbb
fcmovb
jo
cmpsb
fsubl
and
outsl
mov
mov
out
push
pop
and
cs
stc
push
xchg
ss
jno
fldenv
xchg
test
jge
pop
pop
rclb
add
pop
fsincos
stos
inc
cmc
testl
add
stos
stos
fidivs
fxtract
call
enter
and
cmp
scas
dec
sbb
mov
mov
xchg
push
in
ret
mov
add
sub
push
inc
xlat
fwait
push
ja
mov
pop
shll
add
or
test
addr16
testb
cltd
popa
push
popf
cmp
and
leave
mov
clc
sub
cmpsl
jp
jmp
fldlg2
or
jge
or
sahf
ss
xor
push
dec
xor
arpl
sbb
mov
mov
lret
scas
pop
cmp
xchg
lods
ret
int3
dec
out
hlt
or
jno
xchg
xchg
jne
push
add
es
sbb
add
mov
xchg
pop
adc
mov
test
ficoml
mov
cmp
push
push
and
mov
lret
fstpl
mov
push
pushf
fcomp
movsl
jne
out
cmpsb
aas
mov
jmp
ja
cmp
stos
shlb
cld
mov
scas
jo
mov
les
insl
sahf
push
rolb
iret
and
push
or
sahf
or
out
imul
fcomp
cmpsl
ret
psubq
popa
xlat
or
cltd
movsb
push
cmp
mov
or
fdiv
cmp
mov
and
int3
push
fdivrp
xchg
pushf
filds
test
cltd
xor
mov
sub
push
or
lock
scas
jmp
or
mov
mov
xor
leave
rorl
mov
movsl
push
sub
adc
daa
push
cwtl
es
movsl
xchg
je
mov
jmp
rcl
into
in
cmpsl
ds
inc
rcrl
push
dec
cmp
mov
inc
stos
xor
xchg
lods
mov
dec
inc
mov
fs
in
testb
test
mov
fnstenv
clc
jne
ds
addr16
rcrb
mov
push
inc
dec
sti
lock
icebp
jle
sbb
adc
xor
mov
jg
mov
push
jmp
and
sbb
or
add
mov
sbb
mov
jo
mov
in
cmc
mov
gs
jecxz
call
aaa
hlt
icebp
xchg
lods
daa
scas
leave
jge
push
mov
aas
dec
scas
and
sbb
pop
xor
shrl
orl
mov
jnp
jbe
imull
mov
pop
xor
mov
add
out
sbb
inc
pop
pushf
insb
mov
leave
lea
movsb
mov
mov
jns
jp
xor
stc
or
cli
andb
nop
loop
dec
jbe
out
xchg
and
or
aas
out
icebp
mov
and
and
iret
fistl
adc
repz
mov
cmp
xchg
jle
lea
lahf
sbb
mov
cmp
enter
jge
jno
jecxz
loop
dec
push
scas
push
sbb
mov
inc
in
inc
daa
insb
idivb
test
subb
inc
xorb
in
mov
mov
pushl
sbb
mov
add
js
inc
arpl
jne
in
adc
aad
xchg
sbb
fsubp
mov
sbb
ficoms
mov
cmp
or
out
shrb
push
lods
nop
inc
ljmp
jmp
adc
jbe
xlat
pop
testb
xlat
and
jnp
leave
nop
cmc
sub
push
pusha
lret
xlat
movsl
pop
mov
mov
and
hlt
mov
cld
dec
out
mov
imul
repz
cmp
xchg
cltd
mov
das
ja
xchg
add
movsb
std
and
mov
inc
hlt
rorl
or
xchg
js
jl
cmpsb
mov
push
gs
nop
or
cmpsl
out
std
repnz
pop
popa
adc
pop
rorl
cmpsb
sub
jl
js
sbbl
test
or
mov
movsl
mov
imul
jge
inc
xlat
bound
jmp
pop
push
jb
mov
adc
imul
cmp
pop
mov
out
mov
push
into
push
aam
inc
xchg
adc
xor
mov
mov
pushf
sbb
jmp
cmp
sbb
push
xor
jo
pop
pop
mov
jmp
add
fsubs
data16
pop
in
xchg
pop
jae
mov
inc
jmp
push
insl
mov
icebp
sbb
adc
jb
ja
fmull
cmovge
filds
and
mov
add
das
inc
bound
aam
mov
push
mov
test
xchg
mov
add
shlb
jg
xchg
cmp
pop
movsb
aaa
or
push
inc
mov
ret
fsubrs
cmp
pop
add
mov
adc
fiadds
test
ljmp
mov
xchg
dec
jmp
bound
gs
sbb
mov
sbb
ds
xorb
xchg
out
stc
push
adc
pop
push
jno
push
insl
sub
xchg
in
sbbb
dec
push
pop
inc
loop
jb
dec
sub
cmp
or
mov
jg
scas
pop
fwait
sub
testl
cmp
mov
popa
jo
mov
add
adc
call
push
es
xlat
xchg
and
mov
pop
rcrl
xor
into
enter
pop
gs
fs
pavgw
xor
int3
cmp
std
repnz
sub
cltd
pop
cli
into
fnstsw
loope
repz
xchg
mov
and
rorl
cmp
inc
xchg
popa
lock
notb
and
mov
in
js
jg
loope
and
push
in
push
loopne
sub
sti
fmuls
daa
xor
sub
xchg
mov
idiv
dec
stos
pop
out
les
adc
test
roll
lcall
push
push
int
icebp
stos
xlat
and
jmp
fcmovbe
pusha
scas
dec
add
repz
ljmp
inc
mov
mov
cmp
fsubr
xor
mov
outsl
sub
cmpsl
push
test
adc
push
fwait
push
shrl
aaa
add
xor
loope
xchg
arpl
cmp
in
mov
inc
cmpsl
sub
xchg
fs
fimull
jg
pop
and
sbb
push
inc
fidivs
and
fimuls
gs
or
xchg
pop
insb
sbb
sbb
dec
in
rcll
xlat
outsb
xchg
jnp
xchg
and
or
cwtl
push
cmp
push
test
sub
nop
shrb
bound
stos
repz
imul
arpl
jno
test
fidivl
mov
out
cmp
jae
fisttpl
push
lods
mov
inc
lock
fnstenv
pop
dec
dec
pop
and
mov
insb
pop
mov
push
push
out
nop
adc
in
andl
or
inc
mov
sub
jo
inc
popa
push
gs
cmc
movl
sarl
mov
adc
ret
lcall
adc
inc
scas
jno
int
mov
inc
push
and
into
lods
push
daa
mov
cli
inc
sti
xchg
adc
jno
lret
cmp
aam
je
sbb
js
into
push
adc
mov
jecxz
add
and
pop
cmpsl
add
jl
xor
call
sahf
sbb
out
test
mov
pop
loop
xchg
in
and
mov
enter
aam
add
push
jmp
popl
jp
or
mov
adc
out
sahf
enter
xchg
push
xor
push
pop
ror
icebp
sbb
sub
cld
mov
mov
dec
stos
cmp
pusha
pop
sahf
xchg
pop
aas
lcall
inc
adc
jg
lahf
mull
lds
xor
int
hlt
out
xchg
dec
in
xchg
or
test
add
test
jmp
cmp
jmp
inc
adc
repnz
repnz
jns
dec
mov
mov
xlat
mov
std
push
fdivs
push
mov
add
push
lahf
jo
push
shrb
loopne
xchg
es
pop
cmpsb
xchg
les
and
fcoms
mov
fsubrs
ljmp
ljmp
mov
xchg
ret
push
arpl
cmpsb
clc
out
movsl
xchg
or
xchg
jae
adc
mov
clc
test
cmp
or
in
shll
loop
xor
xchg
pop
fisttpl
mov
xor
sub
mov
movsl
cmpsl
jbe
and
inc
jmp
insb
scas
int
addr16
xor
clc
ficoms
arpl
lahf
add
insl
mov
pop
fisttpll
into
adc
decb
cmp
push
sbb
scas
cwtl
mov
xor
loope
add
test
add
add
inc
adc
pop
inc
bound
push
xchg
adc
mov
lock
cmp
mov
test
stc
xlat
push
lds
je
scas
and
mov
mov
mov
iret
jno
rcll
lcall
lea
ja
pop
call
adc
xor
mov
sahf
push
or
fs
pop
add
call
push
popf
xor
test
pop
sub
in
add
pop
jge
pop
lcall
out
dec
aas
cmp
outsb
test
adc
mov
out
pop
in
out
jmp
pop
sbb
pop
inc
ss
js
cmp
or
dec
es
and
and
test
lds
lods
outsl
pop
outsb
cwtl
int
mov
jbe
ficoml
xchg
call
testb
fcoml
movsb
sub
gs
push
out
in
mov
xor
insl
ret
int3
in
inc
fwait
xchg
jne
imul
push
aam
add
add
lcall
inc
fcoms
jle
daa
cmp
cmc
xchg
ret
loopne
loop
out
push
ret
cmp
mov
pop
cmp
fprem
aad
sub
jne
dec
sbb
addr16
cmpsb
mov
outsl
jns
jp
mov
les
cmc
inc
push
cs
and
out
mov
xchg
scas
xchg
out
mov
sbb
mov
mov
icebp
fs
cmpb
add
jno
fsubrl
dec
mov
jae
in
xor
and
repz
repnz
fldl
pushf
mov
mov
mov
pop
ja
push
inc
sbb
aad
leave
mov
dec
add
orb
shl
in
jge
push
rorl
xchg
add
fisubrs
push
loop
daa
mov
inc
inc
in
nop
sbb
aam
lcall
mov
add
out
cld
sbbl
mov
mov
mov
adc
jmp
xchg
mov
inc
adc
sbb
pop
mov
shll
dec
sub
inc
xor
xor
push
sarl
push
adc
inc
xchg
sbb
mov
jge
cmp
mov
xorl
push
add
mov
cmc
jle
addr16
scas
leave
fistpl
fbstp
dec
mov
outsl
ret
xor
es
pop
data16
popa
dec
mov
data16
bound
out
jns
xchg
std
js
mov
scas
push
jge
ret
lahf
lcall
push
iret
stos
jbe
repz
xchg
push
aas
cmpsb
test
add
pop
mov
inc
nop
insb
add
aam
cmp
and
cmc
dec
out
sti
loope
fistpll
std
movsl
mov
xchg
rcrl
bound
push
int
repz
ljmp
add
mov
mov
ss
jnp
jge
test
jge
ret
cmpsl
jae
notl
add
shrl
pop
shlb
out
insb
ss
sahf
rcpps
stc
cmp
jg
xchg
rorb
enter
packuswb
nop
mov
sahf
rcl
leave
mov
nop
mov
mov
mov
jbe
mov
and
shlb
sbb
adc
inc
jb
cmp
imul
mov
jg
std
pop
pop
rcl
imul
xor
add
inc
lret
sub
jnp
dec
pushf
icebp
mov
lods
jl
xchg
imul
cs
mov
repnz
jb
sub
lds
pushf
mov
ficomps
mov
shrl
pop
mov
cmp
cmc
or
hlt
mov
sahf
jb
dec
dec
push
lods
pushf
xlat
inc
ds
repnz
imul
jne
or
aad
pop
outsl
jl
loopne
popl
and
push
scas
jo
in
xchg
sub
cld
or
mov
insb
test
jg
jle
sbb
imul
insl
loope
in
outsb
stc
inc
push
inc
jmp
push
or
cltd
adc
and
and
mov
cltd
pop
xchg
ret
xchg
push
xchg
mov
mov
cmp
sbb
imul
sub
inc
adc
xlat
outsb
lods
xchg
jns
dec
cmc
adc
aam
stc
mov
pop
out
dec
mul
xor
mov
pcmpgtw
ret
xchg
mov
int
and
outsb
jle
xchg
fs
push
dec
lret
das
xchg
sub
or
sbbb
hlt
jae
decb
dec
cmpsb
mov
sti
xor
dec
pop
mov
fbld
cltd
adc
es
jne
fs
xchg
ljmp
push
inc
int
mov
xor
sbb
jg
popf
stc
iret
jl
dec
lcall
adcb
test
decl
xlat
mov
adc
aam
push
push
and
sub
jo
testl
mov
mov
incb
fnstcw
repnz
push
sub
mov
adc
or
inc
jp
dec
push
and
notb
mov
or
mov
jecxz
xor
fdiv
imul
jb
sub
jle
push
in
push
addb
popa
add
in
rorl
scas
rcll
inc
nop
das
dec
or
mov
lds
sub
call
shl
fnstenv
adc
add
xchg
sbb
mov
mov
mov
aas
mov
fcmovnbe
fsubr
inc
stc
xchg
mov
subb
fstpt
jge
dec
mov
cld
lcall
in
cld
pushf
setb
mov
pop
insl
in
dec
sbb
jle
jle
jl
ljmp
sub
popa
cltd
fisttpl
imul
jecxz
cmp
jne
push
adc
dec
or
or
rcll
inc
mov
leave
xor
stc
js
inc
inc
ret
loop
scas
inc
int3
mov
inc
jmp
insl
xchg
sub
pop
push
enter
add
push
cmp
adc
or
es
pop
push
sbb
xor
mov
shrb
dec
adcl
sbbb
orl
into
sub
sub
and
mov
adc
push
jne
addb
dec
mov
sub
scas
pop
mov
mov
jbe
push
sbb
out
fistps
pushf
pusha
shrl
out
cmp
push
stc
or
or
rorb
xlat
repz
lock
arpl
dec
fwait
loopne
xchg
adc
add
pop
in
addl
mov
sub
jae
cs
addr16
shll
mov
ds
test
insl
add
mov
mov
mov
loop
and
cmp
push
jge
sub
pop
sub
xor
ss
lds
das
std
and
dec
or
mov
mov
fiaddl
mov
xchg
lret
lods
daa
mov
loopne
sahf
and
and
scas
stos
fdivl
cld
push
insb
and
pushf
xor
dec
cmp
out
inc
stos
pushf
popa
sub
xor
int
ret
pusha
mov
cmp
push
xchg
or
mov
pop
mov
lea
ja
dec
insb
ret
mov
jmp
test
pop
jl
ss
notl
fs
stc
jae
add
scas
out
lret
fs
outsb
add
jmp
or
push
nop
lcall
subb
sbb
ds
cmpsb
inc
mov
cmp
dec
mov
mov
mov
stc
inc
std
cld
pop
daa
pop
mov
sub
int
sbb
lock
popf
cld
mov
testl
xor
dec
lret
insb
rorb
ss
repz
sbb
shl
jbe
fwait
mov
xchg
sub
pop
push
std
or
jbe
addl
push
jle
mov
and
xlat
les
jns
adc
in
adc
imul
pop
rcrl
sti
mov
ds
clc
adc
pop
pop
je
popf
test
iret
rcll
clc
popl
mov
fdiv
out
std
montmul
cmpsb
dec
adc
jp
sbb
xor
ret
jno
andb
flds
test
bound
lret
in
add
mov
lret
pop
adc
inc
sbb
fnsave
cmp
icebp
imul
adc
ljmp
xchg
mov
neg
lods
hlt
ror
out
test
adc
cmc
idivl
push
cmpsb
nop
ret
lahf
push
sarl
nop
subb
pop
or
lahf
cmp
mov
cld
aad
orb
repz
or
xor
xor
loope
fiadds
mov
aaa
lods
daa
lahf
in
inc
into
cli
inc
jns
jmp
scas
adc
fldl
xor
and
mov
add
xchg
push
sub
sbb
sbb
mov
ja
aad
fidivs
xor
xor
sbb
adc
mov
add
cli
shr
imul
pop
ret
enter
ret
pop
sub
aas
jecxz
cmp
movsl
or
cmp
pop
movsl
xor
pop
mov
lea
outsw
pop
ret
push
js
mov
mov
ffreep
mov
aam
mov
out
mov
loop
push
add
jp
lret
push
in
mov
cltd
negb
movsb
sub
jb
pushf
xor
xchg
mov
mov
sbb
push
data16
mov
mov
imul
and
inc
sahf
enter
imulb
int3
in
cwtl
jo
add
orb
les
hlt
mov
fdivl
into
leave
je
lods
rcrl
push
fdiv
in
aas
lods
out
je
out
leave
mov
sbb
sbb
xchg
stos
movsb
sahf
inc
arpl
jecxz
fcompl
stos
jl
insl
jmp
pop
inc
popf
je
jne
and
push
in
inc
lods
lock
xor
pushf
orl
insb
sbb
pop
daa
jmp
fisubrs
pop
loop
inc
fiaddl
pusha
in
pop
loop
xchg
ja
fisttps
cmp
inc
and
test
mov
pop
sbbb
push
dec
movsb
imul
sub
cmpsl
pop
mov
enter
jmp
jbe
xor
mov
aas
push
insb
test
ss
push
mov
push
out
es
adc
xor
shlb
jp
mov
ror
add
test
mov
addr16
cmp
fs
xchg
lods
mov
in
inc
inc
xchg
pop
mov
arpl
iret
int
jecxz
and
inc
add
testl
xchg
and
inc
out
push
xor
xchg
pop
repnz
fwait
das
subl
pop
adc
inc
xchg
lods
mov
or
push
stos
pop
jbe
cmpsb
out
pop
adc
sub
rcrb
jle
lahf
jbe
jno
pusha
mov
jbe
mov
sub
dec
dec
pop
jbe
xor
loope
cmpsb
les
push
jns
mov
add
lds
rcrb
cld
pop
mov
repz
out
inc
icebp
or
mov
and
je
adc
jbe
incl
int3
in
jmp
xchg
sbb
inc
sbb
jmp
loopne
jl
mov
jg
dec
jno
cmp
cwtl
cmp
test
dec
imul
sbb
push
hlt
les
push
test
add
lcall
aas
sub
dec
iret
data16
adc
or
inc
or
mov
push
adc
push
inc
mov
gs
fcoms
and
cltd
cmp
mov
xchg
addr16
mov
cmp
adc
sbb
dec
movsl
scas
jg
sbb
inc
sub
ss
lcall
gs
adc
jns
mov
cmpb
ret
sub
imul
fwait
les
dec
inc
loope
mov
addb
shl
mov
jp
inc
cmc
inc
cmpsb
add
jp
pop
and
push
and
inc
push
push
push
int
inc
cli
jnp
mov
pop
pop
push
cmp
lods
sbb
xor
stos
and
cwtl
xchg
mov
xlat
fldl
cmp
sbb
mov
cmpsb
addl
faddp
pop
adc
lret
push
andb
lods
inc
jecxz
sub
mov
cmc
sbbl
mov
mov
jo
ja
mov
ficoms
xchg
js
jge
or
mov
jb
jmp
cmp
ljmp
xor
pop
inc
xor
and
jecxz
pushf
add
mov
sbb
jmp
jnp
jmp
add
sub
loope
jge
pusha
ss
mov
leave
mov
jg
shlb
ss
push
add
movsl
mov
iret
or
inc
lods
aaa
xchg
push
loope
dec
pmaddwd
dec
pop
mov
daa
lcall
cmp
jecxz
popa
mov
xchg
ja
testb
loope
out
ss
lods
dec
dec
xchg
cmp
pop
mov
cli
push
mov
or
scas
rclb
add
xchg
cltd
sbb
xchg
dec
mov
iret
sbb
mov
js
and
sahf
movlhps
xchg
into
adc
fs
mov
popa
sbb
lea
jmp
pusha
cmp
lahf
stos
inc
insb
in
insb
jbe
xchg
sub
or
loopne
jecxz
loop
cmp
loop
repnz
inc
sbb
gs
mov
ficompl
sahf
sub
enter
xor
mov
pop
in
jg
movsl
jae
sub
rcrb
lods
aad
push
mov
js
lret
popf
adc
lcall
dec
pop
cmpb
mov
mov
ja
push
jne
jge
mov
lds
aam
push
or
insb
orb
mov
add
mov
push
sub
loopne
aam
mov
pop
movsb
jmp
bound
push
iret
stc
lret
outsb
adc
mov
jecxz
dec
adc
imul
lock
mov
out
in
inc
mov
sbb
out
mov
lods
push
scas
pop
xor
jmp
aas
out
sti
aad
repnz
ss
andb
jne
orb
pop
sbb
les
or
loop
pusha
add
fisubl
repz
stos
loope
shl
movsb
pop
insb
pop
adc
sub
pop
xchg
xchg
sarl
clc
dec
in
or
in
test
jnp,pt
xlat
hlt
mov
imul
jge
pop
mov
jmp
dec
xor
xchg
sysenter
add
test
lret
dec
cmpsb
fldenv
rcrb
mulb
scas
scas
mov
mov
fdivs
push
mov
and
cmpsb
inc
and
and
sub
fisubs
and
shld
das
scas
inc
std
xchg
pop
scas
jle
mov
push
lods
dec
repz
cmp
sbb
xorb
inc
and
mov
dec
xor
lret
mov
sti
sub
hlt
sbb
ja
jae
add
inc
repnz
xor
or
cld
loopne
stos
mov
push
loope
lahf
rclb
mov
and
add
imul
pop
in
test
test
addr16
xchg
dec
iret
xor
push
in
push
movsb
inc
and
ret
mov
push
jo
aad
mov
mov
pop
push
aaa
xchg
cmp
or
rclb
dec
rep
sub
fsub
xchg
push
jmp
add
sub
fs
sbb
mov
cmpsb
mov
sbb
lahf
cmc
cli
jl
add
adc
fidivrl
in
push
push
push
jae
mov
ficoml
jns
out
sbb
sahf
loopne
dec
pusha
pusha
cmp
add
xchg
jbe
les
and
les
out
daa
stc
jmp
mov
xchg
cld
fwait
pop
inc
inc
mov
mov
xor
test
xor
pop
or
in
lahf
mov
cmp
lahf
aaa
push
stc
mov
push
inc
pop
mov
push
mov
mov
lcall
cmpsb
rcl
icebp
push
cmpsl
mov
mov
inc
mov
popa
push
sub
mov
cltd
cmpsl
js
test
mov
pop
cmpsl
xchg
sbb
arpl
xchg
mov
imul
mov
mov
pop
ret
mov
lret
cltd
and
lock
lcall
scas
shr
mov
jb
in
mov
shrb
out
push
add
sti
sbb
pop
addr16
push
out
and
pop
sbbl
cmpsb
cmp
rol
sarl
insb
scas
push
jo
daa
test
test
mov
pop
adc
fildll
clc
fidivs
in
jno
pushf
sbbb
and
lahf
imul
cli
rcrb
fsts
inc
mov
mov
bound
iret
mov
xchg
addr16
in
pop
mov
inc
fs
in
int3
xor
cltd
into
push
hlt
jnp
lock
mov
lock
jo
cwtl
sub
mov
push
xchg
in
mov
xor
mov
push
je
sti
add
cld
ret
xor
inc
aas
aad
icebp
mov
int3
sahf
jp
mov
nop
adc
clc
adc
fdivr
xor
movsl
jmp
stos
jg
push
mov
test
pop
mov
scas
iretw
and
sahf
or
jmp
ljmp
clc
push
gs
jg
das
ret
xchg
ljmp
aaa
test
out
or
addr16
rcrl
inc
sbb
ret
cwtl
xor
mov
adc
test
movb
loopne
sti
jnp
fstpt
dec
test
inc
push
movsl
jae
scas
js
dec
cmp
push
call
adc
or
call
rcrb
testl
add
int
dec
arpl
scas
mov
lds
mov
cmp
sbb
or
cmp
insb
add
test
scas
int
and
movsb
test
add
mov
xchg
fistpll
sbb
jb
lock
cmp
aas
shll
pusha
pop
mov
ret
shll
out
jp
add
cmp
adc
outsl
xchg
jno
popf
mov
out
and
leave
inc
inc
push
icebp
lods
inc
jg
rcrb
roll
fcmovnu
out
add
es
jle
cli
inc
ret
dec
out
push
jae
pop
cltd
std
sub
mov
inc
gs
loope
pop
mov
aad
cltd
push
jg
pop
leave
cmpsb
fbstp
incl
push
jg
jg
arpl
pop
jns
test
xor
xchg
or
out
sbb
pop
outsb
push
mov
aaa
in
outsb
cs
cs
int3
cmpsb
sbb
int3
dec
cmp
iret
insl
icebp
shl
rcrl
pop
jl
add
jbe
xchg
test
divb
and
mov
int3
inc
popf
jb
cmp
inc
test
jne
je
pop
pop
xor
pushf
pop
out
sbb
mov
sbb
cmpsb
cwtl
lcall
mov
dec
in
push
mov
xchg
add
insb
cmc
mov
jp
outsl
lods
mov
jb
in
and
lods
cmp
jge
int
daa
adc
inc
stos
mulb
sub
into
mov
mov
fiadds
or
int3
out
rorb
sbb
or
cmp
xor
loopne
cmpsl
inc
fcmovb
test
xchg
add
popa
clc
pop
mov
movsl
or
sbb
insb
jle
pop
cmp
xchg
pop
sub
icebp
sbb
pop
mov
shl
icebp
dec
dec
adc
xchg
jae
out
cmpsl
enter
jns
mov
pop
cltd
pop
xchg
popf
and
shrb
or
push
outsb
sub
dec
pushf
aas
and
mov
cmc
lcall
cwtl
mov
pop
out
xchg
or
mov
rcrb
and
lret
adc
ret
test
leave
pop
pop
stos
mov
shll
sub
repz
test
cmp
push
dec
lods
dec
out
mov
arpl
cmpb
lea
sub
hlt
mov
repnz
pop
adc
fldt
lea
stc
int
xor
pop
mov
lods
jo
pop
loopne
xchg
ret
call
jae
push
movsl
not
andb
out
lea
jle
mov
sahf
outsb
jp
cmp
pop
xchg
aad
xchg
lea
fcmovnbe
xchg
push
aad
rcll
jmp
fcmovne
nop
and
sti
stos
pop
lret
leave
pusha
std
inc
repnz
cmc
jb,pn
add
jbe
jb
inc
mov
inc
pop
imul
mov
shll
mov
das
dec
jle
imul
in
test
movsl
mov
outsl
mov
or
leave
xchg
sub
gs
sub
xchg
or
xchg
cs
fsub
lahf
mov
lea
xchg
pop
dec
pop
nop
mov
and
mov
in
xchg
mov
adc
push
es
movsb
mov
andb
nop
lea
stos
je
pop
xchg
aam
pusha
mov
imul
pop
add
add
call
das
fnstsw
and
shll
outsb
jl
ret
xchg
ja
jl
cmpsb
cmp
cmpsb
cmp
test
ja
xchg
inc
push
insl
xchg
outsb
jl
adc
aaa
dec
clc
adc
mov
lcall
adc
adc
xchg
sbb
dec
dec
xchg
push
lcall
stc
in
lret
inc
mov
push
jo
xlat
xchg
mov
into
push
mov
out
arpl
xchg
pop
enter
sbb
mov
mull
xchg
insl
sub
rcll
xchg
cmp
sub
or
aas
xchg
add
mov
cmp
inc
ror
dec
mov
xor
into
xchg
pop
add
pop
lret
sbb
clc
scas
popl
int
push
add
fmul
and
mov
lahf
jecxz
aas
outsb
push
or
jle
sub
dec
ja
das
dec
imul
pop
push
in
in
cli
adc
cmp
pop
int
shlb
cmpsl
repz
push
outsl
xor
out
dec
xchg
mov
mov
pushf
fs
pop
sbb
ds
push
test
lret
xchg
xchg
cmc
nop
aaa
bound
lcall
int
shll
in
xor
adc
dec
pop
mov
imul
iret
notl
mov
sti
repz
mov
sarb
js
bound
addl
and
mov
dec
sub
scas
cmp
shl
gs
cmp
lcall
data16
cmp
and
xchg
loopne
adc
rcrl
and
jns
nop
mov
lods
movsl
jno
test
lea
xchg
bound
mov
mov
push
out
push
mov
adc
mov
test
outsl
dec
insl
jp
stos
pop
outsb
movsb
insl
jnp
push
adc
jg
pop
test
mov
add
jmp
cli
movhps
mov
out
dec
cmp
hlt
cmp
enter
lods
fisubrl
lret
fidivl
or
dec
xor
or
arpl
sub
popa
mov
push
jb
sahf
imul
xor
mov
pop
or
addr16
jne
push
call
ret
xchg
mov
ret
sarl
jo
pop
sbb
jns
lods
js
push
clc
ja
cmpsl
mov
mov
pop
repnz
inc
xor
jbe
push
movsl
xchg
mov
sub
divl
or
adc
jecxz
xor
jg
inc
push
ds
xchg
add
cmp
rclb
mov
inc
inc
loope
pop
les
xchg
leave
ret
not
in
daa
movsl
arpl
decb
jle
push
dec
sub
loopne
jbe
arpl
adc
cs
sub
dec
rcr
push
sbb
or
shlb
fldcw
adc
int
xchg
inc
scas
pop
or
inc
or
mov
std
lds
fcomp
or
aam
pop
xchg
scas
mov
mov
rclb
mov
cmp
sub
jns
mov
mov
sbb
cmp
adc
les
sbb
js
sbb
jp
call
add
xor
js
sbb
or
out
ja
jp
add
jge
insl
pop
inc
enter
xor
push
xor
xchg
int
jne
in
inc
mov
hlt
xor
fsubr
adc
add
mov
adc
mov
cwtl
xchg
testb
cmc
pop
ljmp
cmc
lods
repnz
jbe
dec
xchg
es
addb
pop
mov
sub
xor
subb
pop
or
pusha
scas
mov
cli
test
xchg
jl
and
sub
push
imul
fsubrl
jmp
test
scas
stos
mov
mov
add
rcrl
lret
mov
push
dec
dec
mov
jo
stos
mov
test
or
or
not
imul
int
cmpsb
int3
aad
leave
pop
xor
pop
adcb
or
mov
lods
ljmp
xchg
mov
mov
mov
xchg
adc
xchg
into
clc
and
popf
out
mov
sahf
xor
cltd
mov
mov
dec
mov
cs
mov
or
dec
mov
pop
dec
adc
xchg
pop
add
cmp
and
call
lods
add
and
pop
or
iret
arpl
or
lods
ret
call
mov
cltd
cmp
push
pop
popf
jae
flds
out
mov
rclb
sar
xchg
cmp
mov
or
mov
pop
sahf
adc
lret
mov
mov
testl
sbb
fnsave
inc
push
adc
rcr
and
cli
das
jg
gs
leave
sub
and
adc
xor
inc
and
clc
aas
push
jno
out
push
add
dec
cmp
sbb
inc
sbb
imul
pop
fstp
ja
ret
jno
outsb
mov
push
mov
andl
push
cli
fs
lods
xchg
sub
iret
xor
sbb
das
adc
push
jo
pusha
into
cmp
and
je
sti
stos
cmpsb
sbb
test
call
cmpsl
add
stos
ja
rcrl
jge
push
mov
enter
sbb
inc
sti
pop
mov
or
dec
cmp
int
cwtl
movsl
cmp
and
jp
fstl
jecxz
pop
sub
mov
lahf
jne
cmp
xchg
xchg
xchg
dec
jmp
inc
add
rorb
movsb
mov
jg
fidivs
in
sbb
je
push
pop
scas
ret
cmp
add
dec
mov
aas
test
sub
call
ljmp
cs
mov
push
or
cmp
xlat
dec
fwait
popa
dec
or
cmpb
mov
sti
mov
mov
emms
lret
xchg
add
push
test
mov
mov
adcl
jno
dec
and
sbb
pop
repnz
movups
insb
clc
sahf
call
in
jno
xor
sbb
lock
inc
add
sbb
fstpl
fistpll
jae
pop
pop
outsl
in
test
orb
inc
adc
scas
ret
popf
ficoms
mov
rol
pop
dec
mov
cld
fidivrl
mov
aad
repz
cld
mov
les
or
into
pop
sbbl
add
xchg
sub
ret
int
add
pop
jnp
mov
test
xor
jp
or
cli
fwait
movsb
xchg
pop
push
pop
pop
repz
cmp
xchg
jno
and
jne
mov
je
cmp
sti
xchg
adc
negl
pop
push
mov
mov
cmpsl
and
cmpsl
movsb
adc
adc
test
enter
or
mov
or
mov
and
xchg
push
sbb
rcll
mov
fldenv
enter
jle
iret
push
mov
pop
pop
addr16
push
xchg
pop
inc
xor
dec
cmpsb
and
lahf
or
cmp
cmc
outsl
xchg
rorl
xchg
test
lret
cmp
cwtl
aaa
pop
cmp
mov
cmpsb
or
pop
insb
and
adc
dec
popa
cmp
nop
daa
mov
adc
xor
xor
fs
insb
inc
adc
mov
fs
push
xor
mov
shrb
sbb
lret
bound
cmpl
xor
xchg
neg
in
clc
or
push
mov
adc
xchg
call
or
mov
out
cmp
pop
cmp
int
xchg
jmp
jnp
pushf
xchg
xor
jb
and
xchg
iret
data16
leave
xchg
and
in
js
arpl
xchg
sbb
ret
cmp
mov
push
test
punpckhbw
insl
add
sahf
repz
inc
adc
mov
add
push
insb
add
lret
leave
out
mov
shrl
std
push
dec
lods
cld
shrl
into
shrb
ret
pop
sub
stos
mov
dec
push
in
jge
mov
pop
inc
jb
and
dec
jp
divl
test
add
dec
test
xor
jnp
add
je
pop
pop
out
dec
loope
clc
call
in
and
adc
mov
jecxz
sbb
push
xor
andb
add
testl
mov
into
cmp
cmp
aas
sub
adc
lahf
divl
mov
adc
inc
xchg
mov
mov
add
pop
and
adc
addr16
cmpsl
cmp
aas
sbbl
push
bound
sarb
xor
and
aam
or
or
cmp
mov
arpl
xor
fdivp
mov
popa
lea
out
xchg
daa
cmpsb
aam
sub
mov
cli
call
enter
add
pop
mov
inc
jle
leave
adc
aad
push
or
mov
fsubrs
lods
xor
jg
mov
js
iret
push
shr
popf
pushl
xchg
mov
xchg
adc
mov
and
or
and
mov
imul
or
inc
popa
fimull
adc
sbb
pop
repz
mov
popf
arpl
and
mov
rol
mov
in
mov
mov
pop
movsl
data16
dec
jecxz
jae
jg
cmpb
inc
pop
fcmove
cmp
push
push
popf
push
sub
stos
xor
fcomi
sbb
mov
ret
mov
cmc
leave
cmpsl
mov
push
ss
inc
out
das
mov
pusha
out
lock
cmp
data16
pop
in
int3
xchg
inc
jl
lock
into
iret
pushf
aaa
clc
rcr
xor
xlat
mov
pop
add
call
or
stos
imul
push
jmp
repnz
mov
cmp
push
test
imull
pop
imul
pop
mov
push
push
pop
hlt
lret
or
jo
mov
sbb
cmp
sub
mov
push
or
dec
scas
nop
dec
insb
in
insb
pop
mov
or
out
mov
dec
xlat
add
loop
aaa
xchg
bound
pop
nop
daa
mov
add
cmp
mov
lahf
push
push
push
jae
cld
cmc
out
repz
ljmp
or
or
xchg
sub
dec
xchg
mov
jbe
shr
je
ds
sbb
jno
mov
mov
inc
xlat
jne
shll
outsl
jno
repz
push
jge
or
mov
sub
je
popf
lahf
stos
popf
call
popf
fisubrl
or
nop
daa
insl
imul
sub
or
into
js
cwtl
call
dec
push
negb
jae
dec
movsl
aas
pop
adc
jnp
int
push
xchg
outsb
jne
pusha
leave
dec
mov
pop
mov
mov
es
fdivs
iret
jns
mov
mov
ds
add
ret
rcll
addr16
int3
xchg
cs
push
and
xchg
jle
jne
call
jae
pop
cltd
push
fdivp
mov
ret
xchg
shll
pop
and
popa
mov
inc
and
ficoml
out
push
fwait
and
xchg
mov
add
nop
bound
pop
mov
push
test
cs
aam
loop
insb
sbb
in
jae
out
mov
lret
and
imul
fnstenv
pop
pusha
add
cmpsl
loop
and
xlat
pop
sub
xchg
mov
mov
shrl
data16
data16
in
xchg
sarl
xchg
out
aad
fld
lahf
addl
mov
and
cs
fwait
add
ss
mov
push
sbb
data16
movsl
lds
xchg
imul
lcall
addl
dec
stos
add
mov
mov
inc
cltd
mov
je
add
out
jo
push
mov
stos
push
movsb
es
insl
clc
add
xchg
pop
sbb
mov
ret
call
add
ds
jg
ret
or
xor
or
loop
divl
stos
inc
imul
shlb
stos
push
push
fsubl
into
gs
jnp
xor
lods
jbe
ja
int3
fidivrs
jmp
lea
sub
xchg
push
rclb
xchg
mov
pop
xchg
ja
pop
lret
pop
cli
sarl
pop
adc
pusha
mov
js
and
mov
sbb
shlb
mov
int3
mov
lock
push
push
cmpsb
mov
rclb
push
jmp
mov
inc
ret
cmp
call
and
fdivs
movb
push
adc
pop
out
push
mov
xor
cli
ja
sub
push
or
cld
xchg
sub
xchg
sub
enter
sbb
xchg
imul
adc
lcall
lret
dec
movsb
shll
sub
or
insb
or
pop
xor
fimull
loopne
lds
aam
push
xrelease
mov
adc
lcall
inc
stc
xchg
cwtl
gs
lahf
or
jge
mov
call
mov
jg
je
mov
and
enter
adc
imul
cs
jae
push
mov
pop
xchg
add
gs
aad
adc
jns
aam
pop
pop
push
divps
or
push
mov
movb
or
mov
rorb
xor
insb
pop
js
lods
and
repnz
imul
xor
stos
pop
cmp
scas
outsb
daa
in
popa
and
int3
leave
mov
mov
mov
push
ljmp
enter
mov
mov
sub
mov
fistpl
mov
and
lret
pop
fldl
in
pop
movsl
out
mov
mov
xchg
imul
cmp
and
mov
addb
adc
mov
and
mov
push
cmpsl
arpl
test
dec
repz
sbb
rorb
movsb
ds
xchg
jns
scas
inc
adc
lahf
test
out
sub
cmp
js
cmp
mov
mov
into
xchg
in
stos
inc
lock
jbe
int3
push
jb
insb
call
xlat
mov
push
xor
aam
fmulp
push
sbb
pushl
and
inc
das
jne
xor
push
insl
mov
test
test
dec
add
mov
pop
mov
in
adcl
pop
repnz
and
jns
dec
pop
pop
lock
ja
jmp
dec
dec
cwtl
clc
orb
cli
inc
adc
mov
popf
pop
add
data16
sti
movsb
ja
push
hlt
imul
dec
loope
adc
xchg
cli
enter
mov
test
loope
in
push
ret
xor
add
adc
pop
pop
ret
mov
jns
rcrl
loopne
jmp
pop
mov
loop
in
mov
popf
sbbl
popa
cmp
outsw
loop
jb
jb
add
test
in
inc
sbb
jnp
jmp
pop
sbbb
sub
jnp
xor
pop
or
or
lret
mov
outsb
insl
fsubrs
rcr
mov
lock
and
pushf
data16
stos
push
out
fdivrl
jne
imul
std
push
pop
xchg
sub
hlt
mov
repz
cmp
je
jmp
sub
and
jnp
rcll
movb
out
push
cwtl
jae
xor
insl
cmpsl
andb
sbb
dec
lahf
add
pusha
inc
fsubs
push
rcrl
jbe
hlt
xchg
dec
out
lcall
sbb
adc
jl
mov
js
insl
sbbl
xor
sbb
pop
push
call
test
fwait
mov
jno
and
adc
pusha
icebp
sub
outsl
push
push
movsl
push
repnz
sbb
leave
xchg
sub
ret
xchg
dec
scas
je
and
ss
test
js
inc
push
movsb
fwait
decl
xchg
std
cmp
test
mov
je
inc
ljmp
mov
leave
sbb
push
js
add
dec
sub
insl
jnp
insb
repnz
xchg
mov
xor
push
jns
mov
mov
pop
stos
add
cmp
jno
xlat
das
or
nop
jg
scas
rcrb
loopne
add
les
outsb
jno
in
or
call
ljmp
mov
mov
stos
sbb
mov
and
jnp
xchg
test
add
and
es
adc
daa
mov
xor
push
push
sub
mov
and
pop
push
or
xchg
cmpsl
ds
aaa
or
in
cmc
mov
andl
daa
fucomi
or
adc
mov
sub
mov
mov
mov
test
pop
mov
fscale
pop
pop
dec
lea
gs
push
dec
xor
add
leave
addl
cmc
sti
pop
sbb
pop
lds
push
mov
int3
mov
cmpsb
jl
fiaddl
xchg
in
test
add
mov
les
add
sbb
mov
push
shll
mov
sbb
outsb
sbb
add
push
hlt
es
jae
mov
inc
push
lods
jno
push
fwait
push
xor
cmp
and
fimuls
into
cmp
scas
mov
repz
andnps
stos
out
adc
int
test
pushw
push
mov
pop
insb
add
xor
mov
xor
xor
fwait
repnz
lock
adc
xor
jno
inc
and
out
adc
je
jmp
fsts
cmp
aaa
mov
xor
or
decl
sbb
icebp
mov
jp
or
sahf
out
push
push
and
data16
std
pusha
and
std
int3
mov
iret
mov
jmp
es
nop
std
inc
fsubr
mov
mov
push
xchg
fnsave
pop
lods
sbb
add
or
fistpl
addr16
sbb
stc
call
xchg
push
dec
pop
repz
push
inc
clc
jae
clc
jae
cmpsb
push
test
lret
push
out
stos
mov
out
add
push
or
dec
in
xor
addr16
popl
xor
push
int
fdivrl
inc
stos
cmp
sbb
sbbb
mov
cs
scas
xchg
mov
mov
popl
xor
cmc
imul
or
outsb
jae
push
sub
scas
jno
ljmp
jns
mov
dec
rcll
loope
sub
pop
out
sub
xor
shl
movsl
cmp
outsb
pop
gs
adc
insb
aam
sbbb
pop
loope
push
mov
add
in
pop
jb
ja
xor
shlb
popa
jp
pushl
adc
out
jg
xor
lea
sbbl
jge
inc
int
subb
jg
das
out
mov
add
push
mov
xchg
add
gs
adc
and
std
vpaddusb
lret
int3
mov
std
pop
cltd
js
sbb
cmp
fwait
test
xchg
scas
or
or
xchg
clc
jl
movsb
popa
xchg
cmp
shrb
pop
stc
mov
add
arpl
xchg
cwtl
cmp
ror
fwait
in
ja
push
test
pop
mov
jle
mov
test
push
mov
andb
mov
cmp
fwait
mov
aaa
lret
psubb
push
jo
sbb
dec
out
sub
ljmp
notb
ja
fwait
xor
sub
aad
aam
dec
push
loop
paddq
xchg
xchg
out
sahf
adc
std
inc
or
mov
std
stos
dec
dec
sub
enter
sub
es
flds
pop
and
int
pusha
fdivr
sbb
add
test
mov
mull
push
int3
fstpl
xor
pop
dec
mov
sbbl
loop
mov
imul
inc
imul
cltd
mov
inc
pop
data16
pusha
fcomi
rcl
inc
add
ficoms
mov
addr16
lret
cmp
xchg
dec
shll
xor
out
ret
je
mov
lahf
mov
je
lcall
inc
lods
sbb
push
das
fnstenv
test
xorb
inc
sbb
pop
sbbl
cmc
mov
cmpsb
je
push
pushf
mov
jo
push
cmpsb
dec
int
mov
sub
int3
and
orl
outsb
jmp
lret
cmp
iret
pop
add
inc
sbb
and
push
sbbb
push
sub
mov
int3
jecxz
cmp
jl
push
data16
push
scas
inc
and
sub
jns
push
scas
ss
aam
inc
mov
jmp
or
mov
jl
jnp
sti
add
xchg
in
aas
mov
pusha
xchg
fists
jbe
and
pop
mov
ja
call
outsl
add
mov
lea
pop
lods
and
pop
int
and
fimuls
outsb
cmp
adc
add
hlt
or
pop
cltd
scas
xchg
sbb
rorb
jmp
cli
dec
mov
mov
in
cs
leave
jl
out
in
rcl
cwtl
fisttpl
sbb
or
stos
or
mov
jmp
jge
and
jecxz
fstps
mov
adc
dec
in
out
call
mov
fdivl
aad
or
cld
xchg
scas
out
dec
ljmp
jns
lds
loop
cmpl
mov
xor
js
xor
cmp
shr
ficomps
xor
stos
jno
lock
or
lahf
sub
test
xor
lods
push
pusha
shlb
sbb
aaa
sahf
inc
lock
lahf
gs
or
mov
addr16
xchg
lods
xchg
mov
cmp
xchg
mov
xchg
sub
imul
in
dec
mov
jae
pop
aas
loopne
adcb
hlt
enter
mov
xchg
int3
pop
test
cltd
sub
iret
dec
out
sti
dec
sub
sahf
lock
mov
movsl
rcl
ds
inc
sub
ljmp
dec
fbstp
rolb
xchg
rcrl
inc
loop
jnp
dec
movsl
xor
adc
lods
lahf
push
pop
stos
cmp
subb
divb
jbe
or
adc
or
cmp
fisubrl
sub
xor
cli
icebp
cmp
pop
adc
xor
imul
lahf
int3
inc
aam
fbstp
adc
movsl
cmp
mov
dec
xchg
mov
shl
jmp
out
adc
jns
imul
adc
inc
sub
sbb
lcall
in
pop
insb
ljmp
out
lret
popf
push
sahf
mov
push
push
mov
jge
mov
fisubrs
arpl
fsubs
mov
and
add
out
mov
xchg
inc
dec
fnstenv
fld
push
popa
fdivs
aaa
inc
sbb
cs
jae
pusha
movsb
iret
movsb
repnz
xor
xchg
add
mov
mov
dec
mov
cmc
xchg
jge
iret
scas
mov
add
iret
les
or
adc
nop
sbb
dec
and
sti
push
fstpl
stc
xchg
lcall
add
push
add
pop
jo
jns
add
mov
fisubl
pop
or
push
nop
sbb
push
sbb
xor
cmc
add
enter
xchg
lret
push
inc
subb
add
or
mov
imul
jb
jbe
mov
pushl
lcall
subb
das
adc
movsb
push
repnz
bound
or
pop
pusha
or
int
ds
insl
mov
xchg
mov
ror
push
negb
pop
test
int
cs
jmp
push
mov
mov
icebp
lock
dec
dec
cmc
adc
scas
jl
dec
fsubs
fistps
enter
inc
filds
rcll
mov
sarl
scas
xchg
stos
cwtl
sub
lret
hlt
push
gs
adc
dec
out
sub
mov
xchg
das
cli
pop
loopne
cmp
cmp
not
xchg
cli
mov
adc
out
icebp
int
and
sbb
popf
xchg
xchg
or
cmpl
mov
push
mov
popf
add
xchg
shll
xor
out
jecxz
inc
movl
push
mov
inc
pushl
clc
adc
mov
loope
jp
les
fidivl
xchg
loop
jae
fdiv
shlb
lods
fsubrp
mov
mov
xor
push
mov
push
mov
out
sub
xor
pop
les
cmc
jnp
jecxz
cltd
and
movsb
push
xor
push
adc
jg
mov
negl
mov
decb
mov
cmc
sarl
sbb
decl
jo
add
scas
sarl
sahf
sub
sahf
lods
adc
dec
fstps
pop
jg
fs
mov
movb
pushf
dec
adc
cmp
insb
mov
pop
push
inc
mov
pop
daa
mov
mov
adc
cmp
push
push
xor
jl
daa
pop
addr16
jb
jo
in
push
jns
int3
jle
daa
mov
ds
rcrl
dec
lods
jno
xchg
in
add
or
jnp
testl
sub
ud0
lds
out
loope
int
pop
jecxz
test
mov
mov
mov
cmpsl
or
fstpt
or
xchg
imul
cmp
mov
aam
xlat
add
mov
gs
push
into
add
mov
pop
xor
mov
das
push
repz
mov
psubsb
std
xchg
fidivs
inc
inc
lcall
and
xchg
inc
insl
stc
inc
icebp
cmpsb
cmp
fisubrs
pop
fwait
js
sub
push
stos
insl
cmovbe
mov
sub
dec
mov
push
pop
in
hlt
test
or
mov
xchg
adc
jp
es
subb
or
xchg
dec
cwtl
push
idivl
mov
lods
lret
cmp
xchg
pusha
sbb
rorl
rorl
or
inc
mov
negb
xchg
loop
add
push
push
xchg
rclb
push
push
adc
leave
mov
fisubs
in
or
or
push
popf
out
mov
fbstp
jno
test
test
loope
xlat
adc
test
pop
and
ds
in
dec
das
inc
jnp
outsb
xor
xchg
or
mov
dec
lods
push
add
in
js
mov
pop
arpl
push
xor
outsl
jno
mulb
sbbb
mov
test
jnp
and
ljmp
shlb
add
out
jmp
mov
sub
or
stos
adc
repz
jp
push
loope
push
inc
cwtl
inc
jno
andb
inc
fdivp
pop
pop
negb
gs
xchg
les
lock
int
jae
inc
fnstenv
mov
les
dec
mov
std
mov
push
pusha
test
cmc
xor
cmp
jnp
xchg
mov
inc
loop
bound
leave
xor
and
push
outsl
cmp
inc
sub
lea
aaa
aaa
jge
sub
push
test
sub
add
test
shrb
in
ret
mov
sahf
or
ja
pop
jmp
imul
sbbb
cld
and
adc
jmp
push
pop
sbb
sbb
jp
mov
mov
pushf
add
pop
and
int3
cltd
mull
or
aas
lods
cmp
ja
sub
xchg
push
mov
shr
cmp
mov
mov
pop
mov
add
mov
mov
pushf
lods
test
sbb
mov
mov
stos
sbb
test
mov
iret
ljmp
pop
jnp
sub
jbe
and
lea
pop
inc
mov
arpl
or
mov
lcall
pusha
mov
push
sbb
je
jl
pop
rorb
jg,pt
gs
pop
loop
dec
and
inc
in
pushf
shr
imul
cmpsl
inc
fistpl
sub
sub
iret
pop
add
jbe
xor
outsb
mov
lcall
addl
mov
lcall
sbb
sub
lea
addr16
iret
xchg
shlb
int3
pop
dec
and
jle
cli
out
into
lret
sub
stc
cmc
mov
and
jnp
int
rorl
cmp
pop
sahf
mov
sarb
movsl
cmp
mov
sub
ret
dec
in
repz
pop
and
fwait
inc
orl
jg
cmp
cmp
jp
dec
inc
mov
ss
dec
pop
and
mov
cmp
mov
out
repz
sahf
test
pop
xchg
push
inc
xlat
es
or
push
push
les
push
inc
xor
push
pusha
cmp
movsl
xchg
sub
mov
andb
fwait
call
test
rcrl
nop
loopne
mov
sbb
or
aas
pop
and
subb
sbb
lahf
mov
mov
or
imul
cltd
dec
jmp
push
movb
insl
jae
out
sti
lcall
xchg
cmpsl
stos
and
xchg
mov
push
je
cmp
push
jp
pop
ret
xchg
stos
icebp
mov
add
das
pop
into
sbb
mov
xchg
popa
in
adc
mov
daa
mov
sub
inc
mov
stos
testl
pop
mov
shr
inc
lret
or
out
cbtw
sbb
pop
call
mov
sub
pop
adc
ret
mov
jmp
addr16
adc
inc
aad
push
push
adc
cmp
xchg
sub
fldl2e
mov
andl
inc
or
movsb
in
lret
and
cmp
mov
dec
adcb
cwtl
and
push
in
clc
fbld
push
iret
dec
xchg
shlb
in
loopne
jp
jo
xchg
lods
bound
hlt
mov
mov
sti
or
xchg
sub
jae
or
mov
and
jle
push
sar
lcall
stos
movsb
add
jp
aam
sub
push
push
add
jecxz
popf
loope
xchg
pop
out
xchg
sbb
shrl
sub
rorl
xor
out
cli
mov
pop
push
sahf
ljmpw
cmp
add
push
mov
jg
adc
inc
xchg
inc
pop
les
rcll
sub
inc
test
dec
dec
pop
or
mov
adc
cmp
fwait
fs
stos
dec
imul
jp
sub
dec
stos
lods
add
cmp
xchg
dec
sbb
mov
jns
std
outsl
fnstsw
and
lahf
aad
daa
outsl
jae
outsb
mov
mov
loopne
mov
repnz
faddl
fisttpll
data16
and
fucomp
into
and
jmp
adc
and
mov
mov
aas
jnp
sti
jbe
movsl
mov
sbb
add
fdivrl
push
stos
mov
jle
inc
mov
inc
dec
and
movsb
scas
xchg
jp
cmpsl
aas
jo
dec
out
filds
insl
andb
out
addl
xor
test
cmp
inc
lods
addr16
or
mov
lret
nop
cs
lret
xlat
iret
jge
add
jmp
xchg
add
cmp
das
loop
add
sub
adc
daa
ror
pop
pop
dec
icebp
dec
or
mov
adc
addr16
aad
or
pop
stos
sbb
xchg
push
idivb
mov
stos
and
sbbl
lret
inc
cmp
pusha
sbb
mov
push
and
lds
loope
jge
inc
or
stc
imul
out
mov
mov
fdivl
cwtl
imul
stc
pop
xor
popa
inc
fs
jbe
push
sarb
mov
mov
fst
nopl
negl
shrl
xlat
jmp
iret
pushf
das
inc
push
icebp
or
cltd
mov
in
jl
pop
jno
popf
cmp
leave
add
mov
ds
jg
out
stc
push
rol
xlat
dec
jae
push
xor
test
push
xchg
imul
inc
mov
das
repnz
dec
arpl
dec
rcrl
out
mov
nop
sbb
inc
fwait
xchg
fsubl
jmp
dec
cli
xchg
push
jl
push
mov
cmpsb
xlat
adcb
divl
sbb
mov
cmp
in
push
std
insl
cli
or
and
js
push
push
jne
inc
aas
or
dec
xchg
out
scas
sub
lea
mov
mov
add
cmpsl
repnz
pop
jns
or
dec
adc
jo
into
pop
stos
push
call
jno
pusha
ss
call
pop
stos
mov
or
lcall
add
hlt
mov
imul
repnz
es
push
sub
imul
and
incl
adc
adc
pushf
scas
pop
and
shr
lret
enter
inc
ret
jecxz
data16
outsb
dec
and
in
mov
js
mov
jp
cmc
fs
inc
mov
arpl
xchg
lods
stc
in
test
int3
bound
adc
out
inc
fcomp
in
jb
inc
push
sub
sub
sbb
jb
int3
cmp
push
imul
and
fisubl
sar
cmpsl
pusha
std
scas
inc
cs
xor
sbb
push
inc
xor
ja
push
rolb
clc
pop
jbe
cmp
in
mov
lret
movsb
js
xchg
outsl
push
mov
xchg
jb
cmpsl
xchg
mov
dec
mov
adc
mov
aad
xchg
mov
adc
je
xorb
and
push
enter
movsb
or
addb
mov
or
mov
pop
jl
push
ret
mov
hlt
iret
imul
shr
xchg
jl
adc
inc
inc
bound
xchg
orl
mov
fstps
sbb
push
data16
cmpsl
daa
jae
push
jb
push
movsb
cmp
lds
incb
mov
inc
jp
mov
jge
hlt
or
je
adc
call
dec
cmpsb
or
jb
inc
mov
pop
stos
lock
inc
repnz
int
xor
and
and
cmpsb
mov
enter
xchg
rcr
mov
scas
adc
movsl
ljmp
jbe
ret
in
outsb
xchg
jp
lds
xchg
mov
divl
fistpl
inc
mov
ret
push
in
mov
mov
add
jl
repnz
test
fnstenv
jno
cli
mov
cmp
lret
std
pop
int
lds
add
push
jge
andl
mov
gs
inc
fildl
jno
adc
scas
and
test
adcl
cmp
sbb
sbbb
or
jle
adc
inc
lods
mov
pushf
lods
add
cmp
je
das
add
mov
dec
inc
fidivrs
loop,pn
pushf
gs
in
shlb
sti
and
cmp
adc
stos
out
sbb
aam
movsb
push
lss
ret
mov
in
ds
mov
mov
xchg
lret
cmpsl
int3
ss
pop
lahf
mov
cmp
lock
es
nop
and
lcall
je
adc
out
add
inc
or
pop
push
out
rcrl
insb
add
mov
fldt
int3
jb
insl
stos
mov
cmp
mov
mov
fiadds
lock
cwtl
scas
dec
js
shlb
adc
ds
popf
pop
xchg
xlat
aas
inc
lds
fs
xor
lret
jnp
out
leave
xlat
xor
inc
inc
mov
dec
out
dec
add
mov
push
mov
in
xchg
adc
sti
sub
or
adc
jmp
rorl
test
xchg
pop
adc
aam
mov
mov
inc
ret
rcl
inc
inc
fiaddl
fisubl
inc
arpl
shrw
xchg
jecxz
or
jecxz
xor
push
lret
sbb
xor
push
mov
add
in
pop
shll
dec
movsb
into
cmp
outsl
cmpsl
and
mov
loop
dec
inc
inc
pop
out
call
das
cmp
mov
pop
dec
gs
cmp
jecxz
cmc
sbb
jge
mov
and
xchg
cld
cwtl
out
inc
loop
add
loopne
xor
dec
clc
test
testb
jne
xor
insl
mov
inc
cmp
idivb
test
push
out
test
cmpsb
push
mov
jne
push
imul
jnp
sub
addr16
jne
fldenv
and
ficompl
pop
insb
sub
dec
fldt
outsl
jns
cld
rcl
leave
mov
fidivrl
sbb
push
mov
in
add
movsl
rcr
enter
pusha
jae
shlb
pop
loop
daa
adc
hlt
scas
out
mov
jp
sub
in
dec
movsb
enter
adc
fmull
cli
push
jp
mov
adc
mov
test
ss
push
xor
sub
insl
mov
mov
stc
add
xor
jb
push
repnz
mov
stos
test
test
xlat
cmp
mov
xchg
xchg
and
in
cmp
push
outsl
mov
xchg
xor
push
std
xchg
inc
xlat
push
out
mov
pushf
lods
lock
ret
pop
sub
enter
xor
popl
fwait
push
inc
add
xchg
jg
dec
sbb
pop
dec
push
sbb
xor
rcr
or
icebp
adc
push
mov
scas
stc
xchg
lods
inc
sbb
scas
aas
repnz
push
sti
inc
xor
push
fsub
push
adc
fisubl
lahf
jne
dec
jb
and
lret
sub
ja
fs
out
sbb
iret
inc
add
loope
or
lods
pushf
dec
lcall
inc
dec
test
repnz
push
stos
cmp
cmp
jo
sub
repnz
sahf
add
adc
mov
sahf
cmp
sbb
inc
ja
mov
int
ss
adc
jb
lods
mov
cld
flds
in
dec
ret
js
sub
mov
xor
sbb
xchg
sub
lods
nop
sahf
or
sbb
les
stc
les
fldlg2
push
push
xor
and
mov
and
repz
dec
add
cmp
test
adc
mov
sbb
mov
ret
xor
and
inc
mov
pop
xor
das
mov
push
xchg
insl
stos
push
dec
pop
loopne
push
push
mov
dec
loopne
jmp
inc
inc
pop
aad
lahf
and
dec
mov
sub
and
adc
sahf
data16
sbb
mov
pop
cmc
test
aaa
lock
dec
dec
cmp
int
aam
in
ljmp
fbstp
in
and
or
pushf
popf
fwait
gs
push
inc
cmpl
and
clc
adcl
inc
fabs
jmp
fstpt
insl
add
arpl
and
loopne
lods
push
mov
adc
and
pop
jecxz
cmp
sub
repz
or
imul
push
jne
add
scas
xchg
dec
and
into
hlt
addr16
gs
pop
sarb
dec
sahf
jne
fucomi
xor
aam
fisubrl
inc
inc
cmp
sub
lods
pop
xor
sahf
sbb
inc
mov
clc
xchg
test
mov
test
lahf
cmc
add
fsubs
or
mov
in
fcomps
es
out
and
dec
xlat
imul
mov
sbb
mov
negl
mov
das
jmp
sbb
pop
lret
addb
or
nop
movaps
xchg
aam
jp
scas
pop
lahf
add
lods
adc
xor
cld
popf
scas
cli
xchg
inc
jb
jno
gs
pop
dec
xor
sarl
xchg
xchg
pop
icebp
aad
and
fcomi
js
scas
call
sub
imul
mov
mov
jb
js,pt
jne
pop
sahf
into
loope
rorb
icebp
jecxz
arpl
lcall
popa
mov
int3
xorl
and
sarl
in
sub
push
mov
mov
mov
fstl
cmp
aaa
rcrl
mov
sbb
sub
mov
inc
insb
outsl
dec
add
xchg
push
mov
adc
stc
inc
push
cs
sub
andb
lahf
insb
jg
loopne
add
leave
sub
or
mov
sub
jnp
daa
outsl
add
test
jle
es
loopne
xchg
call
subl
adc
lods
repz
loopne
jp
cld
push
pop
aaa
iret
sbb
cmp
jmp
outsl
dec
into
inc
out
jmp
aaa
push
lods
lock
and
mov
mov
shll
xchg
sbb
add
cmpsl
lods
lds
mov
xchg
sub
xchg
ret
popf
push
adc
and
in
xor
dec
test
mov
ja
std
ljmp
negb
sahf
inc
and
sub
roll
jbe
hlt
jae
xchg
movsb
sbb
add
mov
in
lcall
stos
xchg
test
push
sub
stos
jo
fdivrl
add
sub
push
inc
mov
subb
fisubl
adc
mov
pop
sbb
pop
push
and
and
imul
stos
and
fcomps
mov
out
pusha
and
pop
push
les
data16
mov
add
lock
push
dec
pop
je
add
test
mov
loopne
push
mov
jmp
push
lcall
popa
stos
out
je
repz
or
sub
mov
pushf
mov
pop
loopne
mov
repnz
loopne
aad
push
mov
pop
xlat
jl
mov
jg
lahf
hlt
sbb
jle
pop
xor
mov
lret
jmp
mov
add
fs
xor
daa
jg
in
lods
sub
hlt
mov
adc
pusha
lret
call
clc
insl
cmp
cmpsb
pop
xor
jecxz
cmp
rcll
es
lcall
cmp
aaa
movsb
adc
jmp
add
sti
rclb
insb
inc
das
mov
cmc
cld
ret
jle
cltd
push
push
xchg
mov
je
cmp
enter
movsb
push
inc
fstpt
loopne
adcb
cmp
aad
das
ficomps
sub
mov
jb
cwtl
stos
xchg
lea
cmp
icebp
or
adc
andl
dec
push
stos
ds
push
mov
mov
mov
ljmp
in
enter
push
pop
pop
mov
int
xorb
lcall
sub
push
xchg
inc
dec
cmpsb
add
pusha
mov
push
and
inc
fildll
mov
mov
jg
mov
jns
mov
mov
adc
cmp
add
mov
fidivl
js
mov
pop
xchg
xor
adc
sbb
inc
mov
mov
jno
int
rol
inc
mov
aam
lcallw
or
xor
push
xor
mov
enter
mov
gs
push
inc
fcmovb
jle
jge
jmp
push
sbb
test
pop
fisubl
dec
repnz
xchg
ss
dec
push
sub
flds
xchg
add
in
in
icebp
sti
pop
fsts
sub
fwait
sbb
aad
xchg
nop
mov
stos
add
ljmp
mov
pop
or
xor
fwait
jbe
jmp
es
push
je
xchg
xchg
negb
adc
pop
jmp
xor
xor
data16
sbbl
mov
out
aad
aad
mov
rol
pushf
mov
ss
out
les
xchg
inc
mov
add
mov
mov
bound
mov
loope
and
std
xchg
or
pop
cmp
mov
lret
out
insl
jg
mov
fpatan
mov
push
ss
mov
subb
mov
gs
nop
mov
dec
and
and
push
jmp
adc
cmp
sub
inc
nop
cmp
adc
dec
shlb
pop
pop
dec
push
pop
fnstsw
mov
lods
add
adc
shl
rcr
mov
mov
daa
outsl
in
das
jo
ss
and
enter
les
aam
rcrb
mov
mov
pop
int3
dec
pop
std
dec
mov
das
adc
fwait
fs
fldcw
lahf
pushf
and
ja
sarb
push
rol
jl
out
xor
insl
jge
es
das
lret
cmp
sti
jb
sbb
push
dec
mov
pushf
add
mov
cmp
popf
mov
test
lea
je
dec
out
stos
pushf
xor
out
xlat
shl
pop
lret
into
mov
mov
sbb
inc
shll
sub
push
aad
or
dec
push
sarl
out
ret
stos
xor
mov
icebp
iret
xchg
inc
adc
out
cmp
sbb
cld
mov
sbbl
aad
ljmp
pop
stos
xlat
in
inc
or
das
push
sub
inc
push
out
mov
hlt
pop
pop
jne
popa
stos
xchg
scas
aam
mov
and
adc
cmpb
leave
cmpsl
dec
mov
lods
sarb
sahf
cld
inc
enter
in
ret
dec
push
add
sub
jecxz
mov
repnz
mov
jnp
cvtps2pi
jne
xchg
sub
sbb
mov
aas
sbb
lock
cmp
pop
pusha
ljmp
mov
inc
jnp
imul
popl
xchg
push
jp
and
mov
xchg
mov
daa
cmp
and
push
testb
push
jns
jb
es
scas
sbb
loope
inc
rclb
pop
pop
cs
je
jecxz
mov
in
bound
adc
dec
in
test
jg
cwtl
lcall
mov
xlat
jge
lret
jp
stos
in
jmp
xor
jno
xchg
pop
xchg
int3
and
dec
lods
mov
movsb
nop
jmp
enter
lahf
imul
sbb
pop
mov
popa
ja
shl
rol
pop
sbb
cmp
inc
sub
inc
lahf
and
mov
dec
fidivl
ret
ja
dec
imul
in
mov
in
cwtl
cmp
inc
add
or
dec
sti
jg
dec
aaa
inc
adc
pop
pushf
nop
pop
int
pop
icebp
dec
out
cmpsl
out
fldcw
dec
pop
mov
sbb
mov
mov
enter
stc
cmp
cli
hlt
lret
mov
mov
js
cmp
ja,pn
and
icebp
cld
mov
loop
sbb
add
add
popf
sbb
clc
push
popa
add
shl
xchg
addr16
outsl
cltd
mov
mov
sub
mov
cmpl
loop
and
repz
into
subb
out
xor
sarl
inc
stc
xchg
xor
test
cld
push
cmp
and
xchg
sbb
test
loop
js
xchg
iret
es
cmc
push
shrb
sti
jne
mov
cmp
idiv
push
mov
scas
xorb
cli
jb
in
call
push
or
das
outsb
and
mov
ror
mov
inc
daa
xchg
std
cmp
dec
mov
cli
out
test
sbb
popf
dec
sbb
clc
or
xor
sbb
iret
cmpsl
sub
rcrb
dec
sbbb
push
hlt
mov
jb
icebp
mov
adc
loopne
xchg
aas
aam
sub
sub
sub
jno
adc
adc
jmp
shll
enter
call
leave
addl
adc
inc
sbbl
sbb
ds
xchg
in
mov
je
jecxz
lea
leave
add
add
movsb
aas
add
xchg
loope
push
lea
push
jne
adc
adc
stos
jne
sarl
scas
arpl
pop
fidivs
mov
jg
adc
test
fiaddl
nop
push
clts
pop
mov
sbb
fbld
mov
dec
repnz
arpl
jae
cmp
jl
dec
lock
loop
inc
xor
scas
out
sub
inc
stos
push
pop
mov
ss
andb
mov
popl
cmpsb
call
pop
lea
popa
jns
mov
out
addr16
test
js
xor
int3
push
jb
mov
pop
insl
movsb
sti
iret
sahf
push
mov
push
xchg
aad
bnd
cmp
enter
ds
hlt
jecxz
icebp
sti
cltd
std
xor
xchg
sti
xchg
sbb
pop
fdivr
sub
cmp
stc
or
inc
sub
mov
aam
push
dec
insb
scas
clc
adc
dec
iret
add
repz
aas
es
lods
out
lahf
xor
xchg
xor
cmc
fs
add
popa
sub
scas
roll
mov
and
enter
lret
cltd
push
cmpb
push
call
enter
and
or
xchg
loope
jmp
hlt
rolb
or
mov
and
into
std
jo
test
mov
inc
sbbb
jg
cmc
mov
push
enter
jnp
xchg
mov
rdtsc
fdivl
lods
pop
popf
int
add
mov
mov
sbb
icebp
adc
pop
mov
cmpsb
gs
in
test
idivb
das
add
sbb
mov
mov
jb
xor
xor
inc
imull
pop
mov
mov
inc
lods
push
imul
pushf
mov
sub
cmp
dec
sub
rcrb
addr16
fisttpll
scas
cmp
sbb
mov
mov
in
mov
jg
jp
sbb
adc
ret
cltd
addb
jge
arpl
push
xorb
add
es
ficomps
ds
pop
adc
out
add
popf
mov
or
sub
pop
inc
mul
jge
out
lret
ficomps
fndisi(8087
mov
scas
push
pop
sbbl
mov
dec
xchg
mov
lods
cmp
loop
dec
cmp
mov
push
jp
lahf
loopne
fstl
dec
add
add
mov
sub
push
inc
data16
xor
scas
loopne
pop
or
mov
push
ret
dec
cmp
repz
in
in
mov
inc
testb
lahf
lds
cmp
js
dec
out
dec
in
addr16
repz
mov
ds
mov
inc
pop
lods
mov
je
xorb
pop
sbb
cs
cmp
sbb
cmpsl
adc
push
push
pop
sbb
mov
pop
and
cmp
sub
mov
xchg
imulb
push
pushf
pop
sub
sub
inc
std
test
sub
js
popf
test
in
jge
dec
mov
mov
mov
pop
cmp
xlat
push
popf
leave
popl
adc
sub
add
sub
pop
dec
cmp
stc
nop
popa
insb
loop
jp
movsb
cmp
js
or
push
mov
test
lret
das
inc
sahf
loopne
fisubl
fadd
or
xchg
xor
and
outsl
imul
mov
push
lock
rorb
jg
dec
lahf
inc
jno
adcb
push
inc
jmp
inc
lret
mov
pop
dec
adc
insb
jns
imul
movl
push
sub
je
add
popf
jg
stc
nop
call
test
scas
mov
stos
inc
push
fwait
push
addr16
pusha
cmp
xchg
test
decl
inc
push
out
negb
mov
ret
cmp
or
ljmp
movb
dec
out
faddp
lcall
js
cmp
adcl
icebp
mov
mov
lcall
nop
pop
in
cmpsb
shrl
in
mov
sbb
arpl
mov
push
mov
cltd
int
jmp
mov
out
mov
mov
out
mov
push
call
fldt
movsl
scas
ret
dec
pop
rorl
dec
mov
and
cld
fs
cs
jl
dec
stc
sarl
rcl
hlt
push
loope
xor
fsub
jae
dec
sti
rorb
addr16
xchg
popa
and
pop
push
les
fidivrs
lods
mov
mov
and
fnstcw
add
daa
add
call
xchg
add
mov
fistps
sub
fsts
arpl
movsl
icebp
mov
sub
jl
in
enter
sub
repnz
fbstp
cmpsb
lret
fidivrl
and
aaa
push
or
enter
fistpl
xchg
aad
adc
sbb
shrb
pop
adc
dec
dec
mov
cwtl
stc
cmp
sbb
pop
in
or
enter
aaa
jmp
js
fbld
mov
or
mov
sbb
leave
rcrb
lret
lea
pushl
xor
fcmovnbe
jge
pop
add
and
iret
xor
filds
adc
mov
xor
je
ret
cs
outsb
xchg
sub
mov
lcall
subl
fstl
ja
iret
and
mov
arpl
jge
stos
daa
push
lods
dec
or
mov
out
arpl
inc
lods
mov
ret
mov
cwtl
dec
outsb
jl
fstl
xor
add
cld
or
dec
sub
and
dec
pusha
cmp
push
clc
imul
push
pop
inc
scas
inc
ss
push
push
int3
jmp
xor
or
fidivl
inc
ss
jmp
mov
add
sub
inc
or
jg
lcall
cmp
scas
lcall
iret
adc
insb
hlt
scas
xlat
mov
or
rclb
pop
jge
imul
imul
sub
inc
mov
clc
pop
stos
cmpsb
mov
xlat
or
cmp
in
stos
cmp
in
fisttps
out
sub
test
pop
sbb
loopne
js
cmp
or
rclb
jno
jnp
and
lock
out
push
ljmp
inc
inc
arpl
incb
mov
fsubr
xor
fldl
jle
lods
push
xchg
mov
fwait
cltd
cmp
inc
outsb
mov
mov
xchg
xchg
sti
xchg
leave
inc
fcoms
scas
cmpsb
jns
out
popa
mov
js
adc
lret
cmp
out
test
adc
jb
or
inc
mov
or
cmpsl
mov
nop
cmpsb
shlb
add
jmp
inc
jecxz
stos
adc
sub
test
push
mov
sub
and
sub
outsb
mov
int3
mov
sti
loop
lcall
mov
fdivs
cmpsb
in
jl
mov
sahf
gs
imul
mov
lea
cmp
mov
jo
add
dec
sub
xchg
pop
cmpsl
dec
mov
jns
mov
push
adc
and
lods
cwtl
stos
out
mov
sub
icebp
or
dec
sub
xchg
push
xchg
rclb
in
push
sbb
push
push
leave
sbb
xchg
popa
iret
or
or
jp
loope
popf
lock
pushf
dec
mov
insb
ret
enter
cs
test
rorb
jno
dec
movsb
cmc
std
fcoml
cmpsb
xor
push
test
xchg
xchg
loopne
dec
divb
add
scas
lods
mov
add
stos
insb
sub
test
int
je
cs
outsb
xchg
push
lods
les
in
testl
shrb
xor
scas
lret
and
je
push
jb
jno
lahf
inc
xlat
mov
arpl
pop
xchg
xchg
insl
movsb
push
repz
into
or
into
aas
adc
or
popa
or
fidivrs
stc
fistpl
or
fucomip
int3
js
mov
sub
jg
adc
stos
out
xchg
mov
int3
mov
jb
mov
push
in
add
pop
lahf
repnz
mov
mov
ret
cmpsl
out
inc
add
not
xor
pop
js
daa
mov
jl
inc
lcall
xor
rcrl
clc
popf
sahf
idivl
adc
pop
mov
test
xlat
push
and
iret
cmc
push
push
stos
js
bound
imul
or
cmp
jecxz
dec
mov
xor
rolb
roll
pop
mov
pop
insl
and
mov
sub
dec
push
popf
jp
jne
fists
and
incl
adc
mov
js
sub
cmp
push
ret
or
push
gs
pop
add
adc
int
bound
gs
xchg
add
ret
pop
cld
add
fcmovb
xchg
xchg
mov
add
mov
pop
pusha
push
sbb
testb
imul
test
xor
pop
fcoms
mov
sub
lret
into
sbb
aas
jo
pop
xchg
jbe
xchg
mov
repz
or
jl
jb
sbb
cmp
hlt
push
cld
int
aad
pop
and
daa
inc
add
hlt
mov
inc
mov
xchg
mov
loop
adc
jns
les
push
xchg
popa
sub
and
mov
movsb
inc
push
mov
mov
int
fldt
adc
adc
into
jae
xchg
int
stc
andb
add
push
inc
or
cwtl
push
loop
or
lock
andb
out
loopne
add
insl
sarb
insb
add
jo
fildl
lahf
fnstenv
mov
mov
dec
lcall
outsb
mov
push
or
outsb
or
mov
mov
insb
add
cmp
mov
adc
mov
push
jl
mov
repnz
divb
add
mov
je
loop
ret
xlat
cs
add
mov
mov
stos
rorl
jns
negb
xchg
sbb
movsl
sbb
call
dec
push
sub
cs
dec
cmpsb
cmp
push
mov
rolb
or
cmp
add
fstl
addl
sub
inc
jno
in
xor
sub
call
int3
ficompl
fstpl
fwait
lcall
test
mov
lock
cld
rcrb
cmp
inc
mov
shlb
stos
mov
cmpb
mov
repz
outsb
mov
outsl
sub
mov
scas
popa
fcoml
jb
or
adc
leave
add
fidivrl
enter
inc
lods
mov
adc
xchg
lds
inc
or
rcr
xor
loop
jo
mov
add
nop
pop
pop
mov
jb
and
push
dec
ds
repnz
push
lods
into
iret
and
fmull
cmpsb
orps
je
lods
inc
sub
pushf
clc
leave
shlb
lods
gs
stos
xchg
int
scas
and
jne
sub
call
pop
jns
mov
dec
xchg
sahf
sbb
adc
js
test
cmc
xor
in
cli
push
cmp
xchg
dec
data16
inc
dec
outsb
xchg
add
call
pop
cmpsl
inc
jl
jb
pop
fildll
inc
pop
icebp
xor
pop
dec
movsl
xor
and
push
test
int3
dec
mov
dec
leave
fs
jmp
mov
xor
cmp
int3
nop
and
and
push
xchg
fnsave
inc
insb
scas
mov
mov
adc
and
adc
push
dec
and
cmp
arpl
cli
push
xor
insl
or
mov
daa
sbb
pop
ds
pop
sahf
cmc
stc
dec
jb
sub
insl
adc
mov
mov
or
xchg
dec
add
sarl
mov
loope
xor
push
sub
data16
lea
daa
cmp
pop
jo
pop
in
jnp
jae
xor
add
push
imul
imul
jmp
sbb
stc
test
jne
cmc
popa
mov
pop
and
cltd
rolb
or
adc
arpl
xchg
adc
testl
mov
das
lds
dec
dec
push
adc
cmp
movsb
movsl
sub
mov
sbb
sub
xchg
inc
push
das
mov
push
xor
pop
sub
pop
add
pop
jae
sub
shrl
or
out
test
ds
dec
pop
call
cmp
aaa
lahf
shl
add
cwtl
jg
pop
addb
push
lea
mov
dec
push
ds
xchg
xchg
sub
pop
sbb
std
mov
mov
imul
repnz
out
ret
cmpsl
ret
adc
pop
pop
cmp
push
or
mov
pop
lret
rcrl
dec
mov
mul
insl
or
xlat
faddp
loopne
jnp
pop
add
push
xchg
add
cmp
andl
movhlps
inc
lret
adc
push
sbb
cltd
cmp
nop
cli
repz
or
movsb
repnz
inc
xchg
adc
push
mov
fisubrl
mov
jge
pushf
adc
lea
cmp
test
adc
xor
repnz
or
pop
jbe
xor
lahf
cmp
mov
push
xor
in
jo
rol
xor
push
pusha
cltd
test
insb
adc
rol
int
adc
cmp
cld
testb
and
lcall
imul
mov
push
jmp
popa
or
rcl
jecxz
mov
add
mov
sub
cmp
movsl
jmp
into
mov
cmc
cwtl
adc
mov
lahf
and
jmp
or
mov
sbb
insb
enter
push
cs
mov
push
cltd
jl
xchg
enter
mov
dec
fnsave
mov
or
jb
popa
test
rcr
nop
add
sti
xor
sub
out
pushf
mov
aad
mov
pop
pop
ret
mov
icebp
push
test
jo
xchg
push
or
mov
adc
clc
and
orb
jb
xchg
push
je
cwtl
stos
lds
mov
dec
in
dec
inc
pop
add
into
ljmp
hlt
int3
out
push
int3
sbb
adcb
movsb
call
pusha
ja
and
shl
repnz
mov
fcompl
sbb
xchg
and
dec
jmp
fs
je
scas
mov
rcrl
int3
dec
fstpt
lods
mov
fsubrl
xchg
xor
pop
arpl
or
mov
xchg
jmp
mov
mov
mov
dec
sub
mov
imul
lods
aaa
mov
cmp
in
inc
push
lea
add
and
mov
mov
inc
fdivr
push
mov
ds
pop
jmp
or
and
push
jmp
ja
mov
mov
dec
and
add
sub
push
and
push
cmp
lds
rorb
jge
pop
add
rol
movl
xchg
loope
sbb
mov
outsb
jns
lods
inc
mov
js
imulb
pushf
cli
fcmovbe
jne
mov
dec
mov
mov
xchg
jne
mov
or
movsl
push
sti
mov
dec
out
incl
add
jmp
repnz
jno
pop
movl
loop
fdivp
subb
xchg
es
push
pop
je
xor
adc
xchg
movsb
cmp
and
mov
call
or
mov
dec
or
scas
cmp
or
fsubrs
insb
fcmovnb
imul
lods
sbb
fidivrs
js
int3
cmpsb
cmp
mov
cmc
loope
mov
inc
dec
and
dec
dec
test
ds
sahf
cmp
loop
sub
push
int3
cmpsl
cmp
js
mov
int
sbbl
inc
and
jno
mov
and
xor
aam
sub
adc
mov
xchg
inc
jecxz
loop
mov
sbb
orl
out
ss
stos
cmpsl
out
mov
jmp
fwait
dec
movsb
enter
push
xchg
dec
fnsetpm(287
ljmp
jmp
jecxz
ret
in
out
xchg
fs
imul
jno
sub
dec
cmpsb
sub
sub
sub
mov
fbstp
shld
daa
inc
xorl
push
xorl
outsb
pop
enter
test
aas
decl
icebp
xchg
jg
or
or
imul
xchg
mov
mov
popa
push
iret
into
mov
aam
and
jbe
inc
push
out
jl
loop
mov
stc
jnp
push
mov
into
stc
push
pop
pop
sbb
xchg
pop
jge
inc
iret
fincstp
bound
jp
xchg
push
mov
dec
test
sub
sbb
int
outsl
sbb
jecxz
mov
add
cltd
xchg
or
mov
pop
movsl
mov
into
loope
jl
jmp
lret
and
dec
mov
dec
filds
jge
cltd
mov
mov
imul
push
dec
sti
xchg
jecxz
movsb
mov
lcall
xor
mov
jno
pop
push
fs
jecxz
test
add
mov
out
pop
cmp
insb
sub
jne
jnp
in
pop
mov
imul
push
mov
movsl
push
cmp
arpl
sbb
cmpsb
aaa
xchg
sti
outsl
rorb
push
push
shll
mov
mov
pop
into
iret
ficompl
lods
pop
sub
cmp
and
stos
sub
ja
add
mov
sbb
lods
bound
cmp
push
push
imul
imul
mov
lods
pop
mov
movb
mov
pop
add
jecxz
enter
xchg
pop
cmc
es
orl
jp
test
mov
push
movsb
pop
je
sub
les
shrl
mov
jno
sub
jb
shlb
faddl
lea
iret
sub
jge
cs
stos
pop
std
mov
in
inc
les
ret
jnp
jmp
out
dec
add
cltd
mov
mov
inc
out
and
gs
push
lds
cs
out
xchg
jecxz
fisubl
in
mov
imul
repnz
outsl
cmp
and
sbb
sti
dec
cltd
insl
add
jle
leave
rorl
cmp
test
sub
add
in
jb
lods
jnp
cmc
mov
inc
adc
and
dec
mov
in
or
subb
cmpsb
orl
cmp
push
mov
add
call
aad
sbb
int3
imul
push
dec
xor
dec
jge
cmp
push
sub
rol
jne
std
cmpsb
loop
in
mov
jo
add
fdiv
movsl
fcomip
xchg
lret
insl
sti
push
jmp
es
addr16
rclb
insl
ss
testb
sub
dec
pop
leave
dec
rclb
fnstenv
out
xchg
dec
lods
decb
inc
push
xor
sbb
jg
rclb
mov
enter
ss
ret
push
lock
adc
rcrl
cmc
mov
pop
pusha
dec
xor
nop
stos
push
ja
test
popf
andb
sub
mov
ljmp
mov
loopne
and
cmpsb
cmp
sbb
iret
mov
std
cmp
mov
xor
test
push
cmpsb
scas
xchg
les
cmp
jae
shll
and
lods
push
leave
jecxz
sti
int
std
jg
pop
in
jl
std
sub
in
pop
sti
out
xchg
jg
test
add
gs
push
cli
daa
shl
or
pop
lret
push
pop
push
and
cmp
pop
jmp
icebp
fldenv
mov
in
inc
cs
aad
loopne
hlt
sub
es
push
mov
adc
dec
clc
cmp
push
mov
or
jno
frstor
jmp
push
repz
ja
pop
mov
push
xor
enter
and
mov
cmpsl
xor
or
rolb
nop
mov
test
sahf
pop
pop
ds
lds
xor
mov
insl
add
mov
orb
cmpsl
sbb
cwtl
jno,pn
push
mov
arpl
call
or
or
imul
push
negl
cld
jno
test
jmp
adc
inc
pop
cmc
cmp
lds
mov
in
cld
stos
sbb
sbbl
lcall
dec
mov
out
inc
xchg
orb
lea
xor
scas
ss
xlat
rolb
int
js
imul
aas
mov
fimuls
dec
lcall
xor
xchg
xor
mov
out
fmuls
adc
les
popf
pop
adc
enter
adc
push
outsb
imul
ret
mov
jnp
jmp
push
sbb
push
pop
xor
sti
or
loopne
sbb
push
xor
inc
cli
xor
and
sub
sbb
mov
les
add
rcrb
dec
pop
ficompl
jl
movsb
lcall
inc
mov
inc
imul
mov
out
cmpsl
gs
mov
xor
dec
push
insl
jle
lahf
popf
inc
lds
or
je
rorb
add
aas
iret
je
enter
shl
or
mov
xchg
sub
xchg
push
dec
cmp
into
lcall
add
sysret
or
mov
xchg
movsb
mov
jns
test
test
xchg
hlt
jmp
dec
xor
jbe
movl
mov
data16
int3
aad
jae
xchg
pop
xchg
cmp
clc
pop
insl
icebp
xchg
ja
xor
add
xchg
mov
or
pusha
sbb
mov
rorl
loope
cmp
out
lcall
cmpsb
sbb
les
mov
mov
push
jecxz
in
jno
scas
cs
paddb
or
mov
mov
xchg
rolb
out
cmpb
xor
push
mov
jmp
cmpsb
fidivs
sahf
es
inc
jne
arpl
out
mov
or
mov
adc
jns
mov
je
movsb
rcrb
divb
dec
sub
int
mov
aad
dec
int
repnz
and
pushf
push
out
mov
pop
jne
pop
and
mov
cmp
insb
cmp
xor
lods
dec
dec
cmp
stc
mov
cmp
xor
add
xchg
adc
and
test
dec
and
cmp
xchg
mov
test
sub
xchg
jb
leave
inc
repz
cmp
push
inc
push
pop
push
mov
xor
int
std
mov
addr16
in
xorb
fisttpll
and
mov
int
imul
push
push
and
es
jns
pop
dec
xor
popa
outsb
outsb
add
mov
adcl
pop
xchg
je
and
mov
mov
ret
iret
dec
jecxz
inc
mov
and
addr16
test
mov
sarl
inc
inc
inc
xlat
dec
push
xchg
jbe
iret
xor
inc
and
in
shlb
int
cli
adc
int
xor
nop
cmc
int3
add
movsb
out
fstp
ss
ds
jge
add
rclb
scas
dec
mov
or
data16
mov
mov
add
pop
roll
insl
cwtl
imul
xchg
lods
jb
filds
test
mov
popa
and
movsb
pop
cli
xchg
adc
lds
jg
add
adc
push
inc
out
jbe
movsl
jmp
jg
outsl
and
pop
jb
aas
in
daa
cmp
push
popa
stc
jne
sub
fsubr
cmp
push
ljmp
cld
aaa
mov
out
dec
xor
nop
dec
pushf
push
fistl
ds
fcmovnb
mov
hlt
sti
out
adc
dec
fs
cli
jbe
sub
lock
dec
in
mov
pop
jmp
das
push
testb
and
and
push
cmp
mov
ret
fiaddl
cwtl
xchg
imul
popf
sbbl
daa
mov
dec
xchg
sub
mov
xchg
xor
lods
mov
fbstp
stos
outsl
jne
xor
imul
insl
jns
dec
fwait
add
cmp
sarb
popf
test
outsb
fstpt
test
jl
inc
or
or
add
lods
inc
iret
xor
arpl
pop
and
pop
lods
js
add
mov
fistpl
call
sbb
mov
push
sbb
dec
dec
in
fwait
int
jae
push
push
frstors
xchg
jne
inc
inc
andb
mov
inc
inc
dec
xchg
sbbl
inc
mov
and
sbb
pop
scas
jo
mov
push
aaa
pop
jge
icebp
dec
inc
shll
out
dec
adc
repz
loop
inc
dec
in
jbe
fistpll
inc
mov
jle
clc
pop
xchg
scas
nop
out
or
aad
mov
stc
lods
aad
pop
pop
cld
jp
and
movsb
lds
dec
imul
pop
xchg
popf
jo
pop
sbb
push
sbb
lock
stc
or
push
ret
arpl
mov
ja
outsl
outsb
jl
adc
lods
shrb
stos
inc
repz
out
mov
mov
mov
stos
add
scas
adc
fwait
sti
xor
or
xchg
mov
loop
xchg
pop
cmp
subb
push
dec
nop
xor
adc
mov
jp
pop
mov
or
ds
push
jae
jno
inc
subb
push
mov
lea
icebp
shlb
sub
or
inc
mov
movsl
in
add
xchg
dec
in
adc
and
rolb
aas
divb
pop
pop
lods
dec
jge
fsubrl
inc
leave
dec
lahf
mov
mov
divb
dec
and
dec
testb
es
mov
add
mov
mov
cmp
or
das
adc
popa
dec
sub
ret
push
jno
lahf
dec
push
icebp
clc
rcrb
mov
sbb
sbb
cli
pushf
das
in
mov
jmp
stc
test
mov
push
rolb
mov
push
pop
into
push
aam
cmc
xchg
jl
in
clc
lret
repnz
inc
scas
inc
ss
in
dec
xchg
int
dec
jo
stos
push
ds
push
push
call
fstpl
jge
xor
stc
dec
mov
daa
add
inc
fidivl
fwait
adc
pop
and
adc
mov
adc
push
flds
mov
aas
ds
sbb
sarb
sbb
dec
into
out
stos
cli
pushf
out
xchg
ja
mov
mov
outsl
mov
idivb
lret
xchg
xchg
adc
loopne
insb
adc
rorl
xor
imul
xlat
test
leave
jmp
mov
cmpsl
adcb
hlt
lcall
dec
inc
pop
add
in
inc
mov
repnz
hlt
add
lds
lock
push
add
bound
push
inc
mov
sbb
pop
sbb
or
lds
in
push
push
stos
fidivrl
mov
jns
ficomps
loopne
fists
adc
jle
leave
in
adc
pop
lea
fmull
pop
ljmp
call
mov
push
pop
inc
insb
mov
cmp
aaa
jge
aas
ja
inc
push
pop
imul
roll
mov
fistps
cmp
loope
movsb
mov
decl
sub
sbb
mov
cmp
div
lds
inc
sub
mov
jecxz
out
int
aam
rorl
cld
in
pop
cmp
rclb
nop
or
xor
pop
push
mov
and
dec
dec
lods
inc
imul
iret
ja
pop
push
lock
cmpsb
stos
and
jnp
fisttps
sbb
push
int
ds
jecxz
add
out
and
cmc
push
ret
dec
sbb
add
outsl
enter
daa
push
sarl
mov
pop
int3
in
mov
and
mov
push
jae
mov
jb
mov
adcl
dec
push
and
call
fstl
in
dec
movsb
xchg
mov
popa
movl
pusha
popa
jle
into
mov
mov
fwait
xor
push
xchg
addr16
add
test
movsb
stos
or
pop
dec
popl
and
xchg
mov
in
fwait
mov
add
arpl
push
jne
dec
lods
push
addr16
iret
sbb
dec
jb
cmc
pop
data16
sbb
or
aaa
pop
pop
mov
mov
fdivrl
cmp
mov
dec
inc
pop
jecxz
inc
pop
in
and
loop
ljmp
scas
enter
sub
pop
push
dec
subps
cwtl
out
or
xor
xor
fdivrs
es
or
inc
mov
jne
fwait
pop
push
jae
test
sbb
imul
inc
sbb
dec
push
add
jnp
lds
test
jl
movsl
sti
ja
sub
jmp
xor
pop
mov
inc
push
stos
arpl
xor
mov
mov
andl
or
jg
sbb
loope
adc
fdiv
sbb
mov
mov
les
cmp
or
jne
cli
fwait
xchg
sbb
sub
cmp
mov
jle
lahf
xor
in
sarl
mov
es
clc
sub
arpl
adc
cli
out
aaa
add
in
sti
sbb
sbb
xor
sahf
mov
addr16
inc
dec
rorb
inc
sbb
insl
imul
shrl
stc
mov
or
cmc
jle
mov
movsb
repnz
cmp
sbb
fists
stc
mov
jb
xor
out
push
lahf
sub
ds
std
cltd
mov
mov
nop
jnp
je
imul
dec
sub
jb
xacquire
sub
xchg
sbb
in
sbb
push
sbb
and
into
pop
bound
fucomp
in
enter
mov
jp
std
jne
iret
das
decl
mov
cmpsl
xor
inc
sbb
xor
test
lahf
mov
push
inc
or
bound
xchg
sbb
orl
scas
xor
pop
dec
cwtl
jmp
and
in
xor
xor
cmpsl
mov
out
std
pop
adc
add
push
push
shlb
jmp
loopne
out
std
jo
xchg
pop
jge
sbb
mov
lcall
dec
fists
dec
mov
pop
aaa
jg
pusha
movsl
arpl
icebp
int
pushf
inc
pop
push
pop
insl
cmp
push
mov
push
loopne
xchg
mov
adc
push
aaa
push
pushf
and
lret
in
jno
shrl
aad
push
mov
pop
push
sbb
in
dec
cmp
divl
sarl
add
out
movsb
dec
ss
sub
mov
sbb
sbb
pusha
sbb
pushf
or
popa
fwait
xor
jne
pop
addr16
stos
mov
je
jns
push
cmp
push
xchg
add
nop
outsl
and
xorl
mov
test
sub
dec
out
xchg
dec
scas
xchg
shrb
jp
ja
jns
fs
aaa
rcll
add
ja
in
aaa
mov
aam
add
or
push
mov
gs
out
xchg
mov
and
loop
hlt
mov
mov
je
dec
adc
ret
jl
push
inc
out
push
mov
xor
or
cmp
cmp
mov
aaa
pop
adc
data16
divl
outsl
mov
sbb
xchg
jle
int3
fisubs
jl
in
add
and
jge
ret
xchg
imul
fsubrl
icebp
push
cmc
pop
cmpsl
test
bound
dec
outsl
jg
imul
adc
xor
jae
test
orl
test
adc
cli
and
push
sbb
add
xor
cmp
push
roll
sbb
cmp
dec
cmc
rcrl
pop
pop
dec
cmpsl
aad
sbb
xor
ret
mov
mov
mov
jge
rcr
popf
mov
in
lods
xor
repz
rolb
in
pushl
push
movsb
loopne
mov
fildl
xchg
or
mov
dec
mov
mov
outsb
mov
cmp
and
dec
dec
cmpsb
mov
xor
gs
sub
jns
cmp
mov
push
in
mov
xchg
cltd
cmc
pop
cwtl
mov
into
pop
fs
push
lcall
xor
jae
push
std
sahf
lods
aam
mov
imul
sbb
icebp
jbe
outsb
shlb
std
loopne
xor
in
xor
fwait
pop
ljmp
push
sub
or
push
add
inc
jp
jg
out
icebp
adc
and
push
pop
xor
je
outsb
add
adc
loope
test
cmp
jo
adc
loop
movsl
dec
fmuls
add
les
sbb
mov
mov
iret
xor
stos
fnstenv
jnp
sbb
inc
imull
andl
gs
fwait
lods
sub
inc
imul
or
rcrb
subb
or
dec
lea
cmpsb
sub
cmp
ja
cmp
and
jnp
daa
out
inc
pusha
in
push
mov
xchg
out
test
push
mov
aas
lock
jmp
or
push
lock
lcall
cwtl
add
mov
cmp
pop
gs
xchg
sub
push
dec
push
test
mov
add
int
jle
dec
repz
leave
test
pop
and
lods
jae
sbbb
sub
fldenv
ffree
rcrb
push
stos
ret
adc
mov
imul
pop
das
xor
push
or
sahf
movl
test
xchg
push
das
and
mov
mov
insl
sbb
adc
sahf
xor
xor
push
mov
xchg
fstps
push
adc
sbb
inc
and
mov
mov
inc
push
repz
loop
mov
jns
mov
mov
push
pop
sahf
mov
and
inc
jp
sbb
ss
xchg
xor
pop
mov
fidivrs
or
leave
aam
shlb
jnp
cmp
jae
pop
cwtl
and
xchg
adc
push
iret
jmp
sub
or
cmpsb
outsl
add
xorb
or
xchg
dec
pop
mov
mov
fists
push
sub
pop
jge
or
pushf
mov
sub
int
mov
sub
lret
out
and
sub
xchg
orb
sub
addr16
sub
test
cmp
sbbb
sbb
and
mov
loope
out
mov
data16
adc
loopne
cli
add
ud1
movsb
aaa
adc
sub
cwtl
flds
subb
adc
dec
ds
sbb
fldenv
addr16
push
flds
mov
rcrb
shrb
clc
or
mov
jmp
lret
fdiv
xchg
push
popa
andl
jl
mov
adc
fistps
mov
lods
xor
mov
inc
add
out
add
and
xchg
in
call
xchg
sub
roll
sbb
mov
ret
dec
dec
fistl
sbb
sbb
add
inc
outsb
inc
clc
adc
fcmovne
adc
stos
jmp
cli
lahf
out
xor
adcb
pop
push
outsb
adc
mov
mov
or
mov
dec
ljmp
mov
ss
fs
call
mov
add
imul
mov
mov
jge
das
xchg
sbb
out
sbb
cld
jl
mov
out
jecxz
lcall
popa
sub
iret
mov
shrb
cld
dec
popa
and
fnstenv
xor
rcr
aas
loop
incb
mov
push
popa
stos
cmp
jae
lcall
std
mov
lret
sti
test
jnp
jnp
push
aaa
rcrl
or
cmp
lret
sub
cltd
mov
adc
mov
test
idivb
mov
fcompl
xlat
cmp
scas
or
adc
out
nop
gs
pop
jb
fidivrl
negl
mov
test
std
and
sub
lds
mov
dec
and
jl
jb
pop
outsb
leave
inc
mov
leave
adc
nop
push
sbb
je
or
dec
cmp
clc
jmp
mov
sub
jg
add
pushf
sub
leave
loope
pop
mov
cmpsl
gs
cmpsb
cltd
inc
pop
mov
mov
inc
cld
lfs
mov
mov
cmp
loopne
mov
adc
xchg
and
shlb
inc
xchg
jne
into
dec
cmp
fldpi
cmp
sub
sub
int3
or
push
mov
js
test
cltd
fiadds
inc
stc
shlb
push
sarb
stc
or
add
movsb
mov
xchg
nop
ret
jge
pop
xor
out
inc
and
mov
push
in
and
cmp
repz
stos
fnstenv
aaa
lret
ds
push
and
pavgw
iret
rclb
jb
cmp
int
xchg
scas
inc
addr16
inc
jecxz
fsubrs
sub
pop
std
das
in
dec
fs
cmp
icebp
pop
fistpl
push
fldcw
cmc
mov
lods
and
adc
hlt
pop
cltd
in
out
push
movsl
pop
jle
loope
arpl
add
and
es
mov
mov
xor
pop
imul
sahf
sti
jns
dec
pop
mov
mov
or
popf
ja
test
lret
or
cmpsl
adc
sub
jns
and
xchg
adc
jg
shrl
pop
inc
shl
out
pop
int3
testl
aaa
std
xorl
cmp
inc
pop
aas
jnp
out
pop
sbb
add
inc
mov
rcl
imul
repz
xor
cmp
and
lods
xor
fsubrp
push
cltd
mov
push
jne
loopne
push
in
leave
pop
je
push
sub
out
jae
std
xor
sub
cmp
lods
fnstsw
push
cwtl
jno
mov
cmpsb
jbe
aas
jne
push
test
mov
dec
loope
inc
add
push
js
aad
je
cmc
bswap
xchg
insb
incl
dec
cmp
loopne
mov
mov
lea
mov
push
movsb
ja
fdiv
out
test
adc
and
xorl
xchg
shr
push
ret
cmp
sub
push
cs
dec
pushf
lods
sbb
mov
or
dec
jb
mov
xchg
das
daa
add
mov
lahf
test
shll
shll
lret
shrl
cmpsl
sub
addb
aas
insl
cmp
fiadds
ret
mov
push
out
addl
test
in
jle
and
nop
fidivrs
dec
lods
mov
dec
das
cmp
mov
cmp
dec
mov
dec
dec
mov
insl
fldt
push
int
mov
jo
es
jno
scas
jbe
es
cmpsb
mov
mov
fisttpl
add
mov
mov
filds
xchg
pop
mov
les
sub
jb
xor
mov
jnp
mov
cmp
movsb
pop
mov
xchg
mov
add
sbb
cmpsb
ds
ds
mov
imul
and
xchg
dec
fs
mov
imull
jne
je
cmp
lock
cld
and
xor
mov
and
dec
xchg
rcrb
into
pop
jg
fwait
leave
stc
rorl
movsb
jg
mov
outsl
mov
push
movsl
mov
lea
adc
movsl
fldpi
ljmp
mov
shrb
cmpsl
cmp
mov
bound
lret
cmp
xor
xchg
stos
pop
lahf
sbb
nop
xor
xchg
xchg
in
push
and
or
xchg
pop
and
outsb
aam
jle
out
popa
cmc
and
mov
jecxz
mov
aas
pushf
jle
iret
lods
rol
sbbl
mov
aam
out
pushf
stos
add
pushf
mov
fisubrs
ret
cs
adc
ss
testl
stos
mov
dec
mov
xchg
into
fdivrl
add
bound
fnsave
and
int
ficoms
cmpsl
sbb
in
xor
cmp
xchg
xchg
negl
sbb
das
mov
cwtl
jns
repz
fisubs
pop
lcall
lea
call
insb
jle
or
aad
jmp
hlt
daa
sti
adc
lret
sbb
push
adc
sub
cmp
mov
mov
sarl
mov
rorb
jp
cmpsl
cmp
stos
push
and
ljmp
cltd
mov
fdivl
rcrl
mov
sahf
sahf
sbb
mov
rsm
rclb
test
fdivr
popf
cli
pop
test
dec
cltd
repnz
inc
imul
sbb
es
push
inc
mov
pushf
scas
cltd
movsl
xchg
nop
enter
or
lret
sbb
adcb
cmp
cli
inc
andl
imul
nop
dec
roll
mov
xchg
jbe
dec
and
lret
fbld
sar
inc
lahf
push
sub
pop
fwait
in
pop
dec
lss
jecxz
sub
push
mov
and
push
push
cltd
cmp
imul
leave
pusha
push
cmc
sbb
jecxz
lea
xor
stos
lods
jmp
es
sbb
stc
mov
ss
mov
sbb
mov
movsb
bnd
jno
and
movsl
xchg
pop
loopne
orl
adc
sbb
cmp
aam
and
aad
cwtl
repnz
ds
fdivrs
ja
ss
enter
mov
stos
adc
call
in
rcl
xor
adc
into
or
pop
or
aaa
sub
mov
mov
adc
adc
pop
dec
jg
rol
xchg
push
xor
add
mov
fmull
jmp
data16
cmp
js
pushf
jg
sbb
out
mov
xchg
aad
movb
iret
cmp
scas
inc
or
sbbb
dec
fcomip
test
sub
inc
jmp
fildll
push
push
cmpsb
fnstcw
sub
stos
xchg
push
pop
add
add
insb
mull
adc
inc
movl
loopne
mov
jno
adc
mov
subb
jae
inc
adc
xchg
ficoml
gs
pop
iret
outsl
xchg
pop
enter
jns
sub
xchg
into
push
scas
mov
or
jnp
ss
xchg
push
test
mov
rcr
jno
and
sub
adc
test
mov
loope
xor
and
fdivs
dec
out
mov
out
nop
rcl
test
stos
pushf
das
shrb
jns
push
clc
add
jecxz
adc
ds
pop
jo
push
in
stos
mov
sub
pop
adc
add
out
push
lds
add
outsl
fadds
or
shrb
lock
pop
cmp
out
scas
jnp
sbb
sbb
xchg
jmp
add
daa
aas
push
pop
stos
test
leave
insl
mov
popf
aas
cli
jns
aaa
xlat
push
std
or
cmp
imul
sbb
sbb
push
jo
pslld
fildll
cwtl
cmp
in
add
pop
mov
ljmp
mov
push
daa
cmpsb
jge
pusha
xchg
iret
jno
cltd
jae
or
pop
into
popf
sbb
enter
imul
inc
and
movb
xor
mov
mov
mov
mov
sti
insl
lahf
push
fistpl
pusha
aam
shr
daa
mov
hlt
in
inc
and
ds
imul
aas
jo
scas
xchg
pop
lret
pop
into
mov
and
push
fstpl
and
movsl
push
fcomps
ret
pop
jge
lret
pop
push
sub
out
test
lock
lea
cmpb
jecxz
xlat
cld
mov
js
lds
mov
test
cli
cmpsb
mov
cmpsb
inc
out
mov
iret
shll
mov
push
or
mov
addl
testl
pop
and
mov
jecxz
loopne
mov
fimuls
sahf
jnp
fisubrs
test
mov
je
loop
pop
jmp
jecxz
in
clc
pop
out
cli
or
jne
dec
sub
sbb
cli
andb
loope
xchg
add
cmp
aas
jmp
fbstp
sbb
fimuls
cmpsb
jbe
popa
cld
xchg
sub
nop
test
dec
or
mov
lods
cs
pop
into
enter
inc
stos
xchg
xchg
inc
popfw
inc
sub
scas
lods
push
subl
pop
mov
jb
mov
mov
sbb
ror
out
popf
mov
into
adc
or
dec
popa
push
add
adc
addr16
imul
and
and
cmp
or
add
jecxz
cli
test
int
sub
mov
sbb
out
test
repz
xlat
movsb
or
loop
aas
pop
lods
push
pop
js
cld
test
addb
and
daa
inc
adc
mov
aas
movsl
outsb
xchg
pop
ret
sbb
lea
imul
out
and
movsb
xchg
dec
adc
std
push
test
arpl
jns
jecxz
xchg
mov
adc
addr16
je
and
int3
roll
pop
out
cmp
stos
lods
adcl
rolb
mov
in
mov
or
add
pushl
in
adc
xor
push
lcall
fcomps
push
xchg
cltd
inc
mov
or
mov
icebp
push
add
fstl
repnz
sub
aas
pop
out
pop
popa
jae
fsubrs
mov
pop
lock
adc
xchg
sub
sbb
ret
dec
pop
clc
inc
hlt
or
mov
lods
add
test
and
inc
sbb
je
es
popf
push
push
mov
lods
je
rol
ss
js
adc
shrb
push
sub
ds
xor
inc
cltd
scas
fadd
in
ficoms
stos
cwtl
cli
mov
sarl
clc
lods
dec
sarl
add
jl
clc
jl
sarl
sbb
cmpsl
je
sub
mov
pop
ret
into
pop
shlb
fisttpll
sub
add
sub
push
cmp
mov
lahf
in
enter
push
gs
push
push
inc
bound
jbe
sub
cmp
xor
or
inc
rorb
jecxz
ds
jb
maskmovq
idivl
push
insb
lahf
xlat
sub
cwtl
cmp
cmp
pop
dec
fwait
sub
test
mov
add
cmpsb
inc
adcl
fwait
xor
shlb
pop
sub
mov
sahf
add
cmp
jbe
inc
hlt
mov
popl
adc
adc
pusha
clc
mov
bound
adc
stc
mov
pop
add
and
pop
dec
mov
les
movsb
push
ret
jge
jecxz
mov
pop
aam
inc
xchg
lret
pop
push
sub
gs
mov
shrb
lods
xchg
imul
stos
repz
mov
cwtl
jmp
lret
arpl
mov
xchg
in
cmpsl
sbb
out
js
addr16
cwtl
fiaddl
xchg
xchg
test
jae
ret
xchg
adc
es
mov
into
aam
add
jecxz
cmp
sub
jp
cld
cmpsb
dec
jbe
jg
gs
test
adc
fstps
sbb
ret
add
cld
dec
in
xor
jg
adc
inc
fbstp
in
pop
repnz
lock
mov
mov
push
pop
sub
pop
stos
mov
or
out
or
mov
jp
movsb
lods
lret
fimuls
mov
je
clc
and
adc
jp
mov
psubsw
lret
outsb
jge
mov
daa
jb
mov
scas
mov
sbb
sbb
ds
scas
mov
jmp
addl
into
loope
mov
test
mov
jmp
xor
ret
mov
ss
adc
daa
ja
jns
ljmp
call
popf
jmp
mov
dec
sarb
jnp
add
dec
pop
insb
es
and
popf
lods
push
mov
inc
loope
ja
lret
lods
fsubr
in
and
or
lods
mov
mov
mov
iret
ljmp
jle
into
scas
sbb
inc
push
jmp
mov
inc
sbb
cli
jl
fcoms
or
mov
jp
aad
daa
add
test
dec
pop
xor
mov
xchg
sub
dec
fimuls
mov
bound
loop
xchg
mov
cwtl
pushf
dec
loopne
cmp
mov
push
dec
test
add
mov
hlt
inc
push
sbb
scas
jae
into
pop
mov
cmc
xlat
loop
push
addr16
sarl
roll
xor
push
pushl
in
add
nop
jbe
mov
or
jnp
xchg
and
test
ljmp
cmp
push
insl
inc
pop
cli
xchg
dec
cmp
xchg
lock
inc
mov
dec
pop
xchg
pushf
xchg
jns
aaa
sub
push
insl
repnz
or
pop
pop
or
push
pop
aaa
pop
dec
cltd
mov
out
js
scas
call
aaa
sti
addb
xor
push
mov
xor
add
mov
out
in
aam
inc
mov
cmpsb
ds
mov
mov
outsb
insl
or
imul
jmp
add
jmp
sbb
pop
fisttps
lods
es
jnp
inc
mov
sbb
push
movsl
adc
push
sub
cmc
ja
cmp
adc
mov
into
scas
add
inc
adc
popf
lret
dec
xchg
push
inc
push
iret
aas
shl
dec
or
mov
les
sub
push
les
pushf
adc
andl
lret
into
aas
test
sar
cwtl
jae
repnz
dec
test
adc
bound
lahf
push
fdivrs
scas
cld
pop
out
mov
adc
push
sbb
mov
lds
cmp
dec
mov
int3
lods
jo
inc
imul
ljmp
or
inc
test
in
in
rclb
dec
loopne
push
sub
decb
pushf
xorb
scas
inc
clc
sbb
test
mov
adc
roll
push
movups
mov
mov
jg
or
aam
mov
add
sbb
pop
pop
and
dec
mov
outsb
add
cmc
cmp
das
testl
dec
pusha
or
in
test
or
mov
xchg
inc
pop
mov
push
jne
rcrl
pop
adc
mov
xchg
lds
dec
ljmp
push
mov
ret
push
dec
test
fmuls
icebp
mov
jecxz
cwtl
jg
stc
mov
gs
xor
shl
and
adc
ljmp
dec
pusha
mov
lret
adc
das
and
ljmp
jnp
add
jecxz
fmuls
shrb
leave
popf
sub
adc
mov
rcl
rcl
xor
push
pop
pop
jne
cmp
enter
stos
test
push
inc
aad
lods
mov
in
xchg
shll
inc
fcomi
shll
mov
arpl
rorb
and
xchg
pop
push
jns
rcrl
jo
sub
pop
jg
dec
outsl
nop
add
insl
ja
dec
leave
sub
cmp
push
mov
add
pop
ss
cmpl
pop
sti
add
mov
xchg
dec
jmp
pop
ret
fldl
mov
or
fimuls
xchg
jg
fsts
fadds
sub
hlt
and
es
cmp
dec
test
push
call
std
xchg
mov
insl
out
pusha
jle
imul
and
mov
mov
fisttpll
xchg
outsb
mov
pop
cltd
cmp
in
test
int3
pop
ret
or
adc
push
jo
xor
vmovmskpd
or
mov
mov
adc
ljmp
push
inc
jbe
push
test
pop
adc
js
subb
xchg
dec
mov
loope
pop
push
test
rcll
mov
in
inc
mov
aad
enter
or
sbb
sub
pushf
hlt
pop
dec
lods
xor
insb
push
es
jle
dec
insb
fldl2t
stc
lret
cmp
int
adc
jnp
sub
mov
push
jge
stos
es
sub
icebp
aas
lret
cmp
pop
cmp
test
iret
adc
dec
outsl
sbb
in
mov
cmp
fbstp
mov
pop
lock
ss
lret
inc
cld
or
fisubrs
push
pusha
push
shll
bound
ds
jmp
mov
icebp
jnp
outsl
sbbl
xchg
jb
das
test
stc
lds
inc
aaa
jmp
mov
ljmp
in
mov
xor
mov
cmpl
sub
imul
imul
cmp
shrl
movsl
sbb
or
xor
push
in
lcall
shll
xchg
dec
pop
lods
adc
ret
sarl
sub
xchg
pop
dec
stos
cld
hlt
ret
mov
push
lret
fadd
push
xor
sub
jne
pop
ljmp
jns
mov
dec
dec
pop
insl
push
scas
int3
lret
mov
mov
inc
adc
inc
jno
jns
jbe
jnp
out
insl
movsl
fnstcw
sbb
enter
add
insb
xor
sbb
xchg
or
ds
inc
jge
imulb
adc
mov
push
into
sbb
xor
stos
in
push
shlb
lret
add
jg
outsb
loope
push
pop
sahf
inc
addr16
scas
sbb
sub
pop
rcrb
cmp
or
clc
pop
or
int3
loop
xor
sub
icebp
lds
pop
mov
stc
popf
aad
gs
test
shlb
out
scas
shll
mov
jne
lret
mov
push
jo
adc
pop
shl
xchg
pop
adc
cmp
sub
ret
xchg
fstpl
fistl
out
jp
ss
push
inc
push
js
ljmp
scas
lcall
mov
push
outsb
mov
test
xor
pop
insb
xchg
xchg
adc
rolb
dec
outsb
mov
xlat
mov
scas
cmpl
mov
repz
sbb
cwtl
adc
test
sbb
add
and
mov
into
call
xor
or
shlb
jns
mov
mov
fwait
mov
xchg
jne
inc
dec
mov
mov
sahf
lret
adc
cmp
pop
call
lods
fdivrs
xor
out
pop
jmp
jmp
lds
adc
pushf
leave
jae
outsl
jecxz
popa
mov
adcb
sub
int3
sti
inc
test
ljmp
mov
xchg
insl
push
fisttpl
or
cld
jo
mov
mov
mov
mov
push
inc
jns
pop
adc
fimull
lret
dec
test
arpl
dec
test
aaa
cmpsb
repz
sbb
bound
mov
daa
pop
pusha
pop
repz
jl
push
bound
mov
xchg
repz
outsl
dec
mov
xor
push
movsl
mov
mov
xor
xor
push
out
push
dec
jl
in
aam
leave
cmp
aaa
js
call
mov
mov
sub
jns
shll
xchg
in
lcall
into
dec
ficomps
out
fdivr
xchg
push
pop
idivb
ja
ficoml
ss
scas
xor
mov
lods
push
std
jge
shrl
pop
cwtl
pop
loope
sub
xchg
pop
mov
mulb
aad
repnz
aaa
push
fwait
push
push
loop
jecxz
jo
pop
loop
andb
loopne
adc
xchg
dec
movsl
dec
dec
fidivl
lods
lret
mov
outsb
fstps
mov
jmp
divl
mov
and
pop
shlb
arpl
inc
scas
cmp
pop
insb
sub
popf
jge
in
in
fcoml
das
mov
mov
les
rcll
aad
and
repz
mov
mov
adc
jl
fidivrl
pop
lret
xchg
das
sub
lock
and
es
scas
dec
fs
int
fiaddl
pop
jmp
int3
sub
cmp
pusha
cmpsl
mov
repz
adc
add
call
and
aad
jae
push
inc
adc
dec
xor
pop
popa
icebp
fbld
in
lret
mov
mov
addr16
sbb
pop
jae
shl
in
ret
sbb
dec
fildll
cld
or
jno
imul
sbb
push
ds
mov
bound
mov
sti
pop
mov
iret
data16
popl
add
push
je
jb
pop
fdivrl
les
sbb
jmp
ficoms
pop
mov
dec
mov
sbb
sbb
in
test
xchg
fnsave
add
mulb
test
cmp
shrb
ds
lds
mov
frstor
add
xchg
sub
insb
xchg
lret
sub
mov
jns
dec
testb
fwait
sbb
cltd
ret
mov
fistpll
sti
fwait
fs
repnz
lret
lea
nop
inc
adc
out
pop
lea
lgs
fwait
mov
inc
clc
fsub
add
sbb
push
inc
sarl
inc
in
push
out
ljmpw
insl
cmp
inc
sbb
scas
andl
hlt
stos
xor
pop
clc
push
xchg
test
out
xor
push
in
addl
xchg
dec
js
clc
jmp
pushl
popf
push
dec
mov
in
or
pop
mov
push
call
xchg
cli
cmp
ss
int3
inc
fs
xor
hlt
fs
mov
push
jp
push
sahf
adc
adc
cmc
movsb
scas
xor
repz
pop
daa
pop
jp
add
xacquire
mov
out
inc
pusha
out
push
test
test
iret
mov
mov
scas
mov
mov
jle
jge
test
jnp
cmp
mov
fsub
mov
scas
mov
repz
pop
je
push
jo
and
push
dec
jnp
sbb
inc
ret
mov
popa
mov
dec
in
and
xor
lods
jo
cld
outsl
lods
mov
mov
ret
arpl
jecxz
xchg
cmpsb
adc
mov
pusha
mov
add
sbb
dec
cs
mull
dec
iret
fsubl
inc
inc
out
ds
adcl
sub
mov
fwait
jne
and
mov
in
xorl
into
sub
xchg
sub
idivb
cwtl
pusha
inc
jg
sbb
loope
iret
pushf
add
lea
lret
sbb
lret
mov
xor
inc
dec
jo,pn
hlt
leave
into
cmpsb
fsubrs
sbb
or
dec
pop
cli
adc
mov
cmpsl
adc
dec
ficompl
adc
fsts
mov
std
xchg
push
add
mov
pop
pop
aaa
pop
aad
dec
push
dec
jg
and
mov
in
mov
cmp
inc
imul
xor
mov
imul
and
adc
stos
mov
into
sbb
sbbl
dec
adc
sbb
rcrb
add
scas
mov
cmp
cltd
mov
mov
mov
lcall
mov
rcrl
mov
jne
mov
adc
adc
loope
aas
adc
xchg
das
pushl
xor
mov
pop
mov
jne
jbe
jg
push
insl
andb
fmuls
xchg
pop
sbb
sbb
mov
mull
add
xchg
seta
cli
test
es
sbbb
mov
fwait
xchg
cmpps
and
out
into
lcall
lcall
out
pop
pop
cmp
xchg
hlt
mov
mov
mov
mov
mov
std
mov
in
aaa
bound
popa
test
mov
sbb
mov
loopne
loop
mov
cmc
mov
or
les
clc
xchg
mov
stc
test
inc
fsubs
decb
push
cmpsl
fld
and
sub
arpl
jge
repz
imulb
sbbl
add
sti
or
mov
push
pop
inc
call
scas
int3
lods
stc
jnp
pop
mov
test
jecxz
adc
add
cwtl
je
jno
sbb
cmp
lock
mov
jmp
iret
cmc
pop
icebp
ss
sbb
scas
or
add
mov
or
xchg
cli
mov
mov
decl
pop
inc
add
add
movsl
dec
outsb
ja
enter
cmpsb
jbe
dec
fisubs
ds
cmp
fs
out
mov
or
cmp
cmp
dec
mov
fxtract
inc
or
ss
xchg
cs
push
cmp
dec
hlt
cs
add
loop
pop
push
in
lret
stc
pop
shlb
add
add
jae
scas
xor
add
or
mov
fwait
lret
cld
and
lret
rol
gs
jbe
push
dec
and
aam
mov
out
push
test
or
iret
push
or
idivb
mov
push
ret
add
pushf
pop
pop
push
arpl
and
test
sbb
mov
int3
mov
pushf
sub
or
cmp
dec
loop
jne
mov
in
nop
push
xchg
pop
stc
inc
daa
ja
loopne
adc
xchg
mov
inc
fbld
and
aad
jecxz
lds
bound
or
andb
shll
clc
leave
dec
cmp
push
outsb
inc
sahf
inc
xchg
ljmp
mov
ret
shll
imul
daa
cli
jb
aaa
cmpl
gs
inc
cwtl
pop
lock
das
or
mov
pop
in
xchg
push
outsb
sbbb
js
icebp
and
jp
jmp
sbb
jae
scas
ret
aad
out
pop
xchg
scas
push
dec
fs
aas
cmc
jge
xchg
and
push
ret
xor
data16
sarl
mov
adc
mov
sub
mov
add
add
or
xchg
jp
ljmp
fmull
mov
movsl
xlat
mov
mov
mov
add
popa
jbe
xchg
xor
pop
popl
inc
int3
mov
cmpsb
xchg
push
fbstp
iret
mov
sbb
fs
jg
dec
ja
movsb
sahf
addr16
aad
add
cmp
xchg
add
or
jmp
sub
stos
rcrb
xchg
loop
int3
sub
jnp
or
test
add
cmp
subl
mov
jb
pop
iret
es
jo
mov
int
aaa
in
xchg
repnz
pop
jecxz
lea
imul
cmp
test
adc
xchg
sbb
orl
adc
fistpll
pop
xor
xor
insl
mov
cmpb
adc
pop
movsb
andb
sub
ret
scas
pop
dec
arpl
aad
out
into
pop
add
adc
ret
hlt
cli
push
fstl
repnz
in
in
push
outsl
cli
and
cmp
fwait
lcall
mov
mov
mov
pop
outsl
mov
divl
lret
adc
push
ljmp
pop
mov
movsl
ret
pop
and
lea
xchg
xor
sti
ljmp
jno
sub
xor
outsl
cli
pushf
rcll
rcrl
mov
pop
add
fimuls
sub
pop
fadds
fidivl
push
sub
pop
scas
xor
jne
int
and
or
lret
push
pop
arpl
xlat
int3
loopne
cmp
mov
pop
jbe
xchg
cmp
int3
sbb
mov
jmp
mov
std
movsl
add
xor
xchg
add
xchg
jge
inc
push
jae
xor
pop
outsl
jp
pusha
mov
mov
ret
enter
das
cli
mov
sub
stos
into
fisubrl
sbb
and
mov
xchg
mov
xor
jo
jge
xor
orl
sbb
push
mov
cmc
xor
cmp
cmp
fisubrs
add
mov
mov
bound
add
mov
mov
test
aad
or
cli
and
loopne
mov
roll
push
ret
inc
stos
hlt
daa
mov
pop
or
and
push
arpl
leave
inc
dec
dec
mov
gs
cld
dec
lods
sbb
mov
xchg
popf
inc
sbb
test
sub
outsl
or
shll
push
or
mov
aas
mov
lods
mov
daa
data16
pushf
insl
xor
shlb
sbb
cmp
int3
adc
cmpsb
imul
lahf
add
int3
cltd
std
cmc
xor
lret
cmp
fiadds
mov
mov
call
xor
insb
in
ljmp
jns
movsl
pop
add
cmp
aas
mov
loop
sub
cmp
dec
or
sub
xchg
stos
clc
or
aas
iret
repz
out
cmp
fsubrp
adc
push
aas
loop
jno
cmp
subb
popf
mov
lock
sub
movsl
filds
pop
out
inc
fbld
sbb
or
sub
push
ljmp
dec
jbe
cld
or
test
cmp
mov
ljmp
and
aas
jg
mov
ljmp
jo
jg
out
adcl
imul
push
mov
mov
arpl
sbb
push
stos
mov
jl
stos
push
out
sub
insl
cmp
mov
sbbb
and
sbb
pop
ret
ljmp
cmp
push
mov
rcrb
test
imul
push
outsl
pmaxsw
mov
mov
mov
lret
scas
sti
xchg
loope
pop
andl
sub
aam
stos
inc
push
neg
mov
mov
fidivl
leave
pop
loopne
rcl
push
nop
repnz
cmp
out
gs
andb
cmpsb
cld
xor
mov
ja
cmp
sub
inc
add
jne
sub
cmc
jle
dec
aaa
dec
jp
and
in
ljmp
loope
icebp
cmp
dec
in
cld
in
aaa
into
sbb
imul
sub
icebp
cwtl
mov
imul
push
popf
sub
leave
pushf
cli
cli
inc
mov
xchg
jbe
insb
and
xchg
sbb
and
cmc
popfw
outsl
mov
inc
movsb
int3
rolb
imul
fwait
cmp
xor
out
sahf
clc
filds
shll
gs
adc
in
std
and
pop
ret
rcll
cmc
mov
inc
icebp
stos
sub
popa
xchg
ljmp
xchg
aam
xchg
cmc
mov
mov
lds
scas
ss
fucomp
sbb
sbb
mov
xchg
inc
and
xchg
pop
push
out
inc
std
mov
xchg
sub
gs
je
out
sbb
push
jnp
cmp
cld
scas
lahf
mov
xor
and
notl
out
lret
fnsave
icebp
mov
sahf
cmp
mov
lods
mov
and
jp
xor
shll
add
loopne
and
mov
mov
mov
in
jg
aad
lock
push
sbb
or
scas
lret
push
aad
divl
jl
sub
inc
add
xchg
or
lds
adc
lods
aaa
insl
jp
push
mov
xor
cmovb
sar
roll
mov
sar
mov
int3
adc
adc
push
dec
rcrb
jne
mov
movsb
aaa
stos
xor
popa
int3
mov
ja
dec
cmpsl
xchg
add
mov
jnp
lret
lea
cmp
pop
xchg
iret
cwtl
popa
scas
xchg
das
or
mov
xor
push
sbb
adc
sbb
mov
and
dec
or
sub
jbe
sub
jo
ja
insl
mov
inc
or
ret
imul
sub
jnp
push
and
xor
add
inc
cmc
mov
fcoms
jae
ds
xor
stc
pusha
sub
sahf
lods
push
rcrl
pop
cmp
xor
and
hlt
scas
add
pop
pop
lahf
test
mov
adc
mov
sbb
aas
fs
aaa
aaa
inc
cmp
mov
jmp
das
xchg
fnstenv
fisubl
fcmovb
ds
fwait
mov
jle
dec
daa
cmp
loope
lock
jle
stos
xchg
cmpsb
inc
stos
leave
pop
sti
inc
dec
cmp
fcomps
das
jne,pt
lds
cld
sbb
mov
push
sub
sbb
test
mov
mov
hlt
das
scas
add
mov
mov
xchg
mov
test
int
fidivrl
sub
lret
data16
ret
repnz
in
shl
mov
out
xlat
push
inc
mov
add
aam
sbb
dec
js
stos
add
icebp
inc
and
sbb
cmp
icebp
jae
out
mov
gs
adc
jge
lahf
jl
in
mov
mov
add
or
pop
pop
icebp
xor
push
js
cmp
jno
ljmp
sub
cld
outsl
mul
rorb
mov
pop
scas
lahf
leave
xor
shlb
inc
inc
imul
dec
lea
sbb
cmp
or
xlat
pop
mov
shll
sub
loope
pop
in
add
lret
mov
jne
sub
xchg
scas
mov
and
push
sahf
xor
and
cli
lds
sub
xchg
pop
jo
leave
xchg
sbb
loop
or
mov
cli
or
push
push
add
mov
or
xchg
xor
push
insl
icebp
adc
iret
dec
dec
pop
jbe
std
pop
rcll
mov
test
pop
push
cmc
add
scas
ret
xchg
daa
call
dec
fwait
mov
lahf
loopne
inc
adc
ja
push
jno
pop
push
cmp
js
fistpll
fbld
fisubl
dec
andb
cmp
cmp
outsl
mov
mov
push
adc
add
or
inc
arpl
jl
dec
inc
fmull
lea
adc
xchg
push
mov
push
arpl
nop
daa
and
push
or
sarb
stc
ret
cmp
jg
pop
stc
aaa
stos
out
repnz
push
rolb
cltd
sar
hlt
inc
stos
push
shr
mov
pop
xlat
mov
aam
mov
sub
fcoms
neg
popl
in
or
cltd
xor
jge
sarb
dec
rep
and
pop
or
js
xor
inc
or
pop
push
int
xor
cmp
insb
mov
push
and
mov
scas
inc
int3
pop
mov
sub
cld
mov
dec
out
cld
ficompl
popa
clc
out
mov
or
mov
inc
mov
fidivs
mov
mov
jnp
mov
stos
dec
add
xor
loope
sahf
stos
sbbl
int3
and
daa
pop
stos
adcl
jp
and
or
cld
jg
sub
adc
sbb
shrl
push
and
pop
mov
orl
aam
sbb
jmp
mov
test
mov
pop
mov
xor
subb
fsubrp
sbb
dec
fwait
enter
test
sbb
push
ds
or
adc
or
lds
fs
in
xchg
mov
xlat
out
or
pop
pop
out
and
das
jo
xor
xchg
fistl
xchg
filds
sbb
cmp
notl
xor
push
pop
push
or
nop
aas
stos
subb
add
aam
movb
cmc
push
ss
dec
xor
aas
cmc
movsl
or
ret
cmp
and
daa
mov
cmpsl
ljmp
out
lret
popf
mov
into
xlat
adc
fstps
into
cmp
push
jno
sub
loopne
xor
cmp
sub
enter
leave
test
inc
push
loope
arpl
mov
and
xor
dec
ljmp
out
pushf
sbb
dec
add
adc
pop
and
jecxz
test
imul
idivl
loope
pop
push
ror
jns
ret
and
pop
addr16
ds
es
push
jne
mov
jmp
sbb
xor
sbb
orb
cmp
stos
mov
sbb
pop
insb
mov
xchg
jle
sbb
xchg
mov
in
in
xor
js
xor
xchg
add
dec
add
xchg
xor
xchg
cmp
into
cmc
sub
and
sub
aad
dec
loop
add
lahf
jne
lock
jb
stc
mov
incl
cmpsl
jge
sub
jmp
ret
or
lret
mov
and
or
les
push
mov
fisttpll
fildll
scas
ret
loope
jo
mov
mov
pop
lods
mov
loop
outsl
jb
insl
sub
jns
jl
mov
stos
mov
fstpl
or
pop
int
cltd
cmp
mov
push
or
xchg
es
or
outsb
les
mov
fadds
jno
out
mov
sub
fistps
cmpsl
jno
lret
sbb
ret
and
pop
mov
cmpsb
ret
scas
mov
fnsave
mov
mov
imul
mov
mov
fs
inc
test
fldcw
movsb
outsl
lds
inc
fcompl
mov
cs
js
mov
int3
adc
nop
mov
pop
pop
and
ret
cli
test
xor
clc
cmp
stos
mov
les
add
rcll
dec
adc
dec
sbb
xor
or
movb
daa
and
inc
cmp
les
loopne
xorb
mov
push
and
enter
jmp
push
xchg
jle
imul
enter
out
lcall
add
popa
fsubrl
inc
cli
cmp
cs
sub
sub
sahf
inc
fsubrl
cli
leave
leave
hlt
sbb
dec
inc
push
cmp
dec
in
mov
cli
cmp
jbe
data16
bound
xchg
lcall
pop
out
sbb
inc
cmp
test
in
in
sub
jecxz
ret
dec
push
xchg
and
in
sub
sbbb
adc
lret
fcompl
xchg
fs
adc
xchg
daa
sbb
xchg
mov
sbb
das
lock
ss
sbb
sub
sub
mov
test
add
mov
les
shll
shrl
mov
dec
cli
sti
fldenv
or
sahf
clc
pop
xor
xor
in
and
popa
in
es
or
out
in
addr16
fcmovne
and
iret
jne
sbb
xor
frstor
sbb
or
jge
mov
mov
jbe
mov
push
fisttpl
xlat
mov
das
pop
clc
test
lret
cld
adc
sahf
outsl
shrl
pusha
pop
loope
jno
mov
clc
cmpsl
sub
mov
enter
jne
mov
jns
jp
lods
faddl
dec
in
xor
jno
call
cld
out
jnp
push
clc
jnp
jl
mov
hlt
test
jae
cld
loope
mov
das
aam
cmp
lea
les
lret
outsl
clc
jno
and
aaa
mov
add
push
dec
or
sahf
lahf
daa
movsl
outsb
jl
mov
dec
lcall
sub
addr16
ss
push
push
sti
fidivs
aas
push
int
ret
mov
add
mov
jo
cmp
mov
arpl
mov
pop
mov
xchg
stos
pop
in
scas
mov
xor
xchg
or
jae
sbb
and
cmp
inc
push
into
adcl
xor
cmp
stos
push
push
leave
pop
push
out
xorb
adc
sub
sub
das
repnz
xor
adc
push
inc
call
loop
cltd
aaa
or
cmp
jp
ficomps
mov
adc
decl
jb
stc
andb
daa
push
or
cltd
out
rcr
pushw
sti
push
sbb
or
push
jae
stc
imul
jp
push
mov
cmp
mov
jmp
movsb
arpl
mov
je
mov
inc
jle
xchg
sbb
xor
stos
and
pushf
scas
lock
xor
mov
ja
stc
jp
jl
fldenv
sti
add
pop
arpl
jns,pt
fs
outsb
fldl
cmp
sbb
and
dec
mov
push
dec
lock
xchg
stos
pop
jmp
xchg
jne
add
mov
jl
lahf
addr16
bound
cmp
mov
push
sbb
addb
cmp
cli
arpl
mov
xor
adc
dec
jmp
mov
movsb
out
sbb
shll
push
inc
mov
inc
or
int3
scas
mov
xchg
std
mov
test
or
loope
xchg
mov
jnp
mov
js
jae
lcall
jbe
sub
mov
dec
cmc
loop
es
outsb
xor
xor
mov
adc
push
mov
popf
dec
mov
fsts
mov
out
bound
cmp
ret
fsubs
out
aam
or
push
and
jns
shrl
mov
mov
ret
psubusb
or
mov
mov
dec
iret
popa
jmp
lock
sub
xlat
lcall
jle
jge
rcr
pop
imul
and
lahf
ss
pop
pushf
divb
sbb
mov
pushf
movsl
icebp
into
popf
push
mov
dec
jbe
insl
fdivs
lret
inc
out
ret
lcall
sbb
sbb
mov
xor
adcb
dec
dec
arpl
rclb
xor
push
mov
in
cmpsb
jge
mov
js
pop
and
je
fs
out
fiaddl
popf
xorb
push
cwtl
rorl
movsl
cmp
push
adc
or
lret
sti
aas
sarl
ds
outsl
cwtl
mov
adc
mov
sbb
pop
hlt
stos
mov
lea
jnp
std
cmp
mov
push
or
inc
ret
mov
mov
mov
xorl
push
in
fdivrp
pusha
cmp
push
js
cwtl
test
leave
mov
lret
bound
push
jmp
btr
add
cs
pop
fsubs
lret
adc
mov
shr
xchg
sbb
cmpsb
cmp
cmp
sbb
jmp
add
inc
and
push
lahf
push
xor
stc
cwtl
mov
sub
data16
sub
das
xor
dec
pop
loopne
popf
sub
xor
push
out
into
aam
rcrl
push
jne
ret
add
rclb
test
out
push
rcrb
pop
cmpsl
mov
dec
push
add
aad
or
cmp
rcrb
shll
sub
mov
xchg
cmp
bswap
lret
dec
lds
shll
out
add
mov
mov
in
mov
pop
mov
cmp
scas
inc
stos
dec
test
add
sbb
in
jbe
out
cmp
xor
xchg
jae
movsb
and
mov
inc
sub
ss
fwait
cld
out
add
into
cmp
stc
pop
push
test
jle
add
cld
add
es
aas
pop
adc
add
and
mov
test
mov
jmp
pop
xlat
jecxz
sbb
enter
dec
xchg
cmpsb
sub
test
aaa
jae
sub
jge
jnp
cli
lods
daa
lock
mov
lret
and
je
mov
test
fstl
and
push
add
jmp
sub
mov
push
pop
pop
or
popa
dec
cltd
test
push
jno
and
lret
xor
sub
push
sbb
cmc
or
shrb
icebp
cltd
stos
call
repz
jns
jl
mov
pop
in
mov
pop
jecxz
popf
ror
ret
xor
loope
add
ret
hlt
adc
dec
and
cli
and
imul
mov
imulb
and
xchg
push
nop
mov
xor
jne
movsb
dec
mov
jns
fistl
pop
lea
sub
and
aas
mov
in
mov
mov
loope
jb
xor
sub
test
push
cli
cmp
inc
loop
jne
jg
scas
mov
into
enter
fwait
test
fs
mov
je
mov
nop
adc
adc
into
mov
test
out
xor
popa
xchg
cmp
dec
cld
ds
pop
inc
and
int3
aad
daa
jle
repz
lret
cmp
dec
jbe
f2xm1
jno
inc
inc
adc
jecxz
call
sti
inc
mov
mov
lods
adc
lods
xor
outsl
daa
cmp
mov
imul
aas
fists
fidivrs
scas
xchg
rcll
pop
jg
adc
mov
sbb
adc
lret
sbb
add
ret
out
mov
mov
fldenv
xor
test
cmp
add
mov
into
mov
jg
sub
jp
cmp
pop
push
lock
cmp
cmc
fldcw
pop
lds
mov
adc
xchg
out
sahf
data16
mov
int3
jo
fwait
gs
or
push
out
sbb
aaa
je
and
pop
mov
add
mov
fsts
shlb
fwait
movsl
fwait
cmp
add
xor
das
push
call
shl
pop
and
push
nop
push
popf
int3
mov
mov
and
scas
mov
lahf
and
jecxz
adc
gs
addr16
out
sbb
subl
xlat
push
mov
fildll
xor
jle
into
outsb
inc
hlt
rcll
cmpsl
pop
and
out
push
jg
pop
icebp
outsl
mov
jge
stos
aam
roll
lcall
ja
push
push
mov
mov
aas
mov
adc
je
jge
cld
ret
outsb
enter
insb
call
fdivrp
xor
mov
fistl
add
popa
sbb
mov
pop
dec
cwtl
pop
outsb
cli
mov
js
aam
les
sub
cmc
ja
inc
cmp
pushf
mov
and
mov
int3
pushf
mov
push
out
movsb
cmpsl
xchg
psrlw
dec
stos
jne
nop
outsb
stos
or
jmp
stc
imul
insl
jp
test
ljmp
loop
xchg
mov
fs
in
push
andl
incb
lea
mov
pop
add
cmpsb
cmp
and
push
cld
das
cmp
push
xchg
daa
push
popa
adc
les
jmp
push
shlb
add
icebp
movsl
pusha
pop
sub
test
mov
lret
scas
mov
cmp
or
ss
es
inc
fldt
dec
push
sub
pusha
ds
push
add
subb
push
lahf
aaa
aam
ljmp
push
test
cmp
mov
xchg
inc
cmc
pop
mov
sbb
ret
jg
pushf
imul
fdivrs
mov
fwait
cmp
lahf
lods
jg
mov
aam
mov
ds
es
xchg
out
inc
push
xchg
cmpsb
outsl
push
fdivs
cli
andl
test
cwtd
daa
outsl
push
pop
mov
je
test
sub
push
mov
scas
iret
aas
ret
lock
mov
sbb
and
adc
mov
test
mov
cld
dec
int
mov
xchg
clc
cltd
lret
iret
dec
pop
dec
lock
fldenv
mov
or
leave
fs
push
inc
ljmp
mov
mov
pop
push
enter
and
fdiv
push
jnp
jp
out
mov
jp
sub
xlat
mov
aad
inc
shlb
stos
xor
mov
mov
ja,pn
lods
cmp
out
setge
push
jbe
jo
dec
jmp
mov
cmp
jp
mov
dec
jecxz
into
push
ret
push
xlat
jns
push
in
mov
and
sbb
ret
xchg
jo
in
dec
cmp
lods
lock
sub
dec
lods
pop
icebp
mov
cwtl
pop
pop
insl
xchg
mov
stos
push
push
out
call
out
push
aas
jno
xlat
sub
dec
stos
or
int
decl
out
xchg
jmp
mov
fsubl
and
lds
pop
jle
popa
or
dec
and
push
dec
adc
jno
imul
scas
mov
push
mov
daa
inc
or
xor
jle
and
mov
dec
movsl
inc
shrl
add
test
in
sbbb
lds
adc
dec
mov
divb
hlt
mov
cmp
mov
xchg
iret
fnstcw
in
not
push
subl
add
dec
in
add
rorb
jp
adc
add
push
mov
mov
cmpsl
cs
popa
xor
add
test
hlt
mov
call
xchg
xor
stos
dec
adc
sub
sbb
mov
addb
push
sbb
adc
pop
xchg
jns
out
push
insl
add
cmp
and
bswap
jmp
std
sub
loopne
cli
cmp
inc
test
test
mov
jp
and
mov
cmpsb
inc
dec
lods
xchg
xor
cmp
cmc
inc
xlat
shl
mov
sbb
imul
pop
mov
add
sbb
mov
fisubrs
dec
cmp
mov
mov
dec
popa
cmp
cmpsb
jae
fidivl
adc
cwtl
loopne
jb
mov
arpl
into
loopne
and
cld
sbb
jmp
imul
pushf
xor
popa
mov
addr16
cs
and
cwtl
xor
pop
loopne
out
mov
cmp
sbb
cld
and
repz
js
dec
leave
test
ja
lret
lcall
paddw
mov
les
out
icebp
mov
arpl
pop
mov
mov
aam
xchg
dec
stc
and
cmp
stos
jbe
push
cmp
or
mov
push
jne
cmp
mov
loop
loop
add
inc
loop
std
or
cmp
fbstp
fs
pushl
inc
lret
cmp
and
sub
pop
xor
xchg
loop
adc
mov
adc
faddl
call
repz
inc
lcall
xor
aam
mov
jbe
jg
cld
inc
es
mov
imul
mov
sbb
and
inc
cmpsl
cmp
es
jo
adc
jnp
jo
shll
xchg
jnp
xchg
out
imul
jno
and
add
mov
jmp
mov
dec
cwtl
movsl
or
dec
pop
insb
std
xor
add
es
mov
roll
enter
rolb
sub
or
pop
nop
inc
faddp
jge
push
mov
test
nopl
mov
out
test
icebp
orps
pushf
fsubrp
cli
xchg
xor
stc
int3
xchg
std
or
xchg
das
push
test
pop
ljmp
pushf
jae
pusha
inc
leave
rcll
popf
pop
jae
push
cmpsb
dec
and
in
push
das
insl
sub
jae
sbb
lea
or
sub
xchg
scas
jns
repz
mov
adc
addr16
and
bts
xchg
or
bound
sub
orb
in
into
pop
jp
adc
or
mov
out
push
xor
push
sub
dec
jbe
mov
rcrb
inc
adc
outsl
cmp
mov
mov
ret
push
in
dec
cld
sbb
sub
sub
iret
xor
add
pop
add
aas
jae
jno
pop
icebp
jo
mov
pop
loop
enter
dec
fdivrp
xchg
pusha
les
cmp
mov
inc
daa
pop
sahf
or
arpl
pop
nop
pop
into
mov
jg
repz
arpl
and
pop
test
jmp
xchg
and
ja
mov
int
pop
xorb
out
cmpsb
nop
add
or
ret
stos
mov
xchg
decb
dec
cld
lea
int
or
mov
ficompl
xchg
xchg
push
jne
cmp
xchg
sbb
gs
movsl
inc
mov
and
mov
inc
fsubr
mov
aam
push
push
lcall
dec
jbe
xchg
or
cmp
sarb
insb
in
push
sahf
loope
lret
ret
aas
test
jns
jl
cli
cmp
popa
add
repnz
sbb
mov
inc
fcmove
mov
mov
aas
add
ja
les
test
xchg
mov
pop
jbe
test
and
subl
nop
pop
lock
add
adc
mov
out
cmp
data16
sub
and
mov
ret
xchg
data16
ss
sub
mov
xchg
hlt
xor
aam
fstpt
sub
jno
int
shlb
jnp
pop
icebp
xor
mov
sbb
xchg
std
imul
fdiv
cmpsl
aaa
stc
fmuls
stc
inc
xor
paddd
inc
sub
sbb
xor
adc
dec
mov
cmpsb
aad
mov
out
mov
mov
xor
mov
sbb
xchg
shrl
sbb
mov
icebp
jecxz
pop
cs
xchg
sarb
xor
leave
or
push
sub
fsubrs
mov
mov
push
ljmp
stc
adc
clc
push
jae
inc
out
cwtl
sbb
mov
inc
scas
pop
in
imul
aas
scas
xchg
sbb
leave
and
push
icebp
mov
popf
mov
push
sbb
push
out
bound
push
sti
test
ss
mov
mov
sbb
inc
clc
movsb
mov
xor
xchg
jg
cmp
repz
and
and
mov
insl
and
decl
daa
or
inc
dec
stc
push
sub
int
jg
out
cld
dec
dec
mov
scas
push
jmp
jg
aas
fistl
leave
xlat
pushf
jg
insl
movsb
mov
mov
mov
flds
or
mov
and
inc
mov
out
xor
movsl
mov
rcll
cwtl
jl
cmp
lahf
popf
pop
ror
pop
push
mov
push
jmp
jecxz
push
pushf
xchg
fbld
push
inc
call
rcr
aas
inc
inc
js
cmp
xchg
jle
fidivs
ret
icebp
mov
push
js
sub
cmp
add
in
mov
popf
mov
scas
test
push
xchg
lahf
ss
sub
and
ds
pop
jo
mov
mov
dec
push
jp
pop
cmp
push
mov
clc
lods
or
daa
mov
fadd
pusha
lock
xor
in
subb
scas
insb
shrb
fwait
or
mov
insl
sub
popf
shrl
mov
ret
mov
mov
stc
mov
lods
push
stos
fcmovb
rclb
sub
popf
and
jecxz
hlt
cltd
mov
into
out
mov
mov
scas
stc
test
adc
mov
fildl
sbb
xor
loop
inc
sbb
push
insl
dec
call
xchg
fwait
pop
into
xchg
out
cmpsb
lock
outsb
ror
add
clc
insb
mov
jmp
repz
sbb
mov
addr16
cli
mov
mov
addb
pop
movsb
lods
cmp
jns
movsl
cmp
jo
nop
imul
divl
cmp
fisttpll
or
xor
aaa
into
push
mov
add
lods
dec
imul
xlat
idivl
or
add
add
dec
scas
jecxz
sbb
fnstcw
sti
inc
push
sahf
fists
push
je
xchg
push
jae
push
aam
xor
outsb
inc
in
cmp
inc
aaa
call
aas
mov
adc
jge
add
mov
sbb
mov
fdivrp
imul
cli
push
xor
mov
test
lea
pop
xchg
xor
testb
cmp
data16
mov
push
xor
and
lea
pop
jo
negb
pop
and
clc
decl
out
add
adc
daa
pop
mov
lcall
mov
cmp
push
xchg
inc
popf
xchg
fidivl
fneni(8087
push
add
clc
adc
popa
into
fidivl
das
jbe
push
xor
cwtl
mov
mov
nop
and
leave
pop
stos
inc
sbb
cld
xchg
je
xor
dec
mov
aas
out
push
in
in
inc
pop
in
inc
clc
iret
nop
cmp
and
adc
arpl
add
into
xor
push
mov
jo
inc
fcom
push
stos
ja
mov
jno
adc
mov
push
popf
push
dec
mov
cli
popf
imul
cmpsl
dec
gs
mov
inc
push
mov
enter
rol
sahf
gs
xchg
mov
or
mov
test
out
inc
daa
inc
xchg
push
or
lret
mov
fidivrl
stos
xchg
lock
mov
cmp
inc
jg
and
pop
cmpsb
push
js
aas
mov
mov
ja
xor
push
inc
mov
notb
adc
dec
xor
out
idivb
dec
fdivrl
icebp
stos
in
shll
cmpsb
adc
pop
cwtl
js
andb
fwait
dec
xchg
push
push
mov
inc
incb
das
xchg
filds
cmpsl
sbb
inc
push
xor
cmp
cltd
std
aaa
adc
adc
pop
cwtl
cmp
ds
jne
xchg
dec
insb
aam
imul
xchg
xor
das
cmp
mov
sbb
cmp
push
jbe
insb
cmpsl
repnz
push
movsl
out
or
jp
lds
shll
mov
dec
cwtl
xor
mov
fldcw
lods
outsl
xlat
or
mov
cltd
ss
and
fnsave
pop
and
pop
insl
stos
dec
int3
and
add
mov
sbb
jge
jp
add
int
mov
out
mov
inc
ja
mov
xchg
cwtl
enter
add
andb
lahf
jge
and
int
mov
mov
cwtl
cli
jb
mov
es
xchg
or
cs
mov
dec
xor
insl
adc
imul
sbb
sub
inc
sbb
movsl
cmp
mov
dec
fmull
sar
and
xchg
dec
mov
icebp
jne
pop
arpl
icebp
push
sub
cwtl
lds
pushf
push
fcmovnu
sbb
loope
inc
stc
aaa
jp
jns
mov
decb
fmul
xchg
cmp
xor
and
push
jp
mov
jbe
bound
xlat
aas
or
aaa
adc
mov
add
arpl
inc
js
jmp
xchg
rorb
mov
in
aas
pop
sub
sub
jle
and
xlat
jmp
imul
call
fldenv
jb
jo
xchg
aad
lds
dec
sbb
cld
fcompl
fadds
out
mov
cld
fsubrs
popf
jo
inc
xor
lea
ss
xchg
push
adc
arpl
inc
mov
dec
jp
mov
lock
mov
in
jl
mov
xor
push
mov
push
mov
arpl
iret
movsb
pop
push
push
fnstsw
jp
data16
rolb
push
pop
dec
mov
and
inc
or
cmpl
aaa
into
mov
adc
pop
sbb
mov
pop
mov
fisttpl
ds
in
addl
inc
add
sbb
mov
pop
psubb
pop
aas
or
push
jb
cmc
andb
add
mov
sahf
pop
xor
and
dec
mov
dec
cmp
mov
repnz
push
mov
out
pop
xchg
sbb
sti
into
mov
adcb
in
insb
divb
sbb
ljmp
sti
lret
inc
and
lcall
test
lret
rcrb
hlt
sub
mov
lds
pusha
arpl
cmp
xlat
dec
add
pop
add
lahf
sbb
out
loope
fs
insb
js
fwait
shll
inc
mov
push
pop
jg
outsl
outsl
idiv
cmpl
push
xor
pop
sub
lret
fisubrl
enter
je
mov
pop
fnsave
stc
scas
imul
shr
jnp
pop
repz
lods
jle
or
jp
push
push
sub
es
inc
sub
cmpsb
cmp
aad
in
ret
mov
jno
sbb
adc
iret
mov
adc
out
jb
sti
andl
pop
stc
insb
jnp
loope
lahf
pop
add
insb
jne
and
lock
mov
les
mov
mov
inc
adc
cmpsb
ret
scas
inc
loopne
lret
lds
jecxz
dec
arpl
nop
xchg
loopne
push
mov
arpl
shlb
inc
loopne
repz
in
test
leave
mov
add
ror
fidivs
mov
aaa
adc
sti
pop
xor
sbb
rorb
pop
out
fists
stos
add
mov
adc
loope
and
and
push
mov
jp
mov
stos
shl
adc
dec
dec
and
fcoml
and
push
insb
inc
jge
cmpb
push
mov
sbb
pop
les
ret
lock
jecxz
pop
or
stc
inc
dec
push
popa
lds
inc
push
adcb
fsubrs
daa
xor
mov
or
sti
push
push
cmc
out
jg
add
sbb
and
xchg
pusha
fs
cmp
es
loope
pop
ss
scas
subb
lods
xchg
mov
push
mov
xchg
mov
adc
or
jae
sub
test
jge
loope
pop
dec
adc
jmp
les
lds
lock
leave
sub
int3
leave
sbb
int
jns
shld
aaa
mov
leave
loop
pop
in
les
je
adc
jge
jnp
movsb
movsl
fmuls
sub
sub
xchg
adc
inc
and
xchg
mov
xor
not
test
dec
shrb
push
fstl
add
fbld
aas
mov
xor
test
mov
jmp
ljmp
test
ficompl
and
push
dec
inc
add
add
push
or
test
sub
jne
mov
dec
data16
cmp
test
adc
push
sbb
xchg
and
stos
fldl
pop
ret
dec
adc
imul
dec
pop
cltd
out
adc
rorl
int
or
jecxz
sub
adc
inc
xor
push
shrl
sbb
fwait
jbe
xchg
lods
xor
add
adc
xor
cmc
lcall
je
lret
das
addr16
push
movsl
cwtl
add
mov
leave
int
mov
add
movsb
aaa
sub
inc
cwtl
push
movsl
fsts
adc
nop
out
inc
fnstcw
lods
jae
or
xchg
addr16
xor
mov
add
movsb
add
call
dec
push
push
jnp
subl
pop
push
inc
mov
shl
out
cmp
clc
sub
sub
loop
int
xchg
push
into
out
jmp
or
notb
xchg
fistpl
cmp
lock
imul
pushf
push
int3
loop
cltd
or
inc
outsl
mov
mov
shl
pop
inc
arpl
dec
push
mov
push
xchg
ss
push
in
mov
fnstenv
inc
cmpsl
sbb
inc
int
mov
addr16
push
mov
mov
cmpsl
xor
scas
and
repnz
addl
subl
inc
push
adc
jecxz
testb
xchg
push
fisttps
lods
sbb
xchg
mov
movsl
stc
aaa
xchg
js
pop
test
scas
fdivl
gs
sub
std
icebp
xchg
daa
inc
xchg
inc
sti
push
mov
ret
inc
testl
jle
xor
std
je
and
test
adc
shll
xor
lret
dec
or
aam
pop
sbb
js
cld
outsl
cmpsl
adc
add
push
popf
jne
adc
pop
and
inc
jmp
or
jecxz
sub
pop
dec
dec
flds
outsl
mov
out
repz
xor
xor
ljmp
jle
test
mov
dec
fsubr
jns
pushf
xor
jle
mov
sbb
sbb
mov
jne
imul
jb
test
in
jg
jecxz
out
mov
test
inc
in
mov
or
call
xor
es
or
fnstsw
lock
inc
jb
loopne
in
lret
lds
out
jmp
pushf
je
pop
push
fisubl
and
ss
cmp
fidivrl
test
jle
cli
fwait
jge
inc
gs
mov
push
sbb
pushf
lods
ss
xor
popf
in
or
inc
push
or
sub
xor
sub
ret
cmc
leave
xchg
out
jae
out
cmpsl
arpl
gs
test
push
in
pop
sbb
inc
push
cmp
insl
aas
in
jo
aas
xchg
jne
mov
sbb
and
movsb
jnp
leave
das
cmp
push
add
mov
jge
ds
jl
mov
add
scas
sub
xchg
int3
sub
incb
daa
jge
fcoml
cmc
push
add
test
cmc
xor
cmpsb
dec
shlb
dec
add
xlat
outsb
ret
xchg
rol
shrb
dec
test
fdivl
mulb
loopne
mov
movsl
in
hlt
rcr
adc
cwtl
subb
push
jge
aaa
pop
data16
pop
cwtl
jle
push
push
fisttpll
and
jne
and
xchg
mov
mov
aad
sbb
pop
xlat
aaa
into
pop
gs
mov
jno
in
mov
jg
or
pop
ffreep
sub
hlt
jae
lret
test
jb
cli
in
xchg
popf
mov
dec
jmp
mov
jmp
ss
mov
push
gs
dec
rolb
lock
jo
stos
xchg
jle
int3
dec
dec
int3
mov
scas
sbb
sub
dec
daa
fwait
arpl
xchg
push
and
inc
fwait
cli
xchg
stc
test
push
sbb
orl
add
xchg
aaa
sbb
mov
fwait
jbe
jle
mov
sub
xchg
push
mov
dec
push
push
xor
push
std
mov
mov
mov
mov
icebp
xchg
sub
cld
inc
mov
andb
arpl
stc
outsl
aaa
int
decb
pop
cmpsl
test
jns
sub
inc
pop
cmp
ja
jno
stc
clc
adc
dec
or
pop
pop
dec
mov
clc
dec
pop
cmp
aam
leave
sahf
inc
inc
iret
and
inc
push
rorl
insb
loopne
dec
push
mov
std
out
xchg
jo
shlb
loop
shrl
scas
pushw
sub
aad
fwait
xor
and
subb
inc
adc
hlt
mov
jp
dec
and
and
mov
shlb
insl
push
mov
push
or
pop
fldl
pushf
insb
gs
retw
pushf
xchg
xor
and
or
push
cmpsl
and
add
push
or
adc
adc
imul
mov
add
or
pop
mov
nop
mov
push
add
aad
fmuls
pop
scas
mov
mov
out
xchg
dec
ret
and
mov
dec
xchg
dec
fistpll
xor
add
xlat
test
xchg
sub
xchg
push
jge
ljmp
jmp
aaa
push
inc
insl
popa
jl
movsl
xchg
ficoms
dec
mulb
scas
inc
push
xor
add
movsl
sbb
insb
and
adc
ficoml
out
stos
or
and
push
movsl
sti
push
fwait
div
mov
mov
es
stos
pop
loopne
cmc
or
ja
jae
scas
sbb
cmp
fsubrp
push
leave
xchg
js
movsl
test
jl
clc
test
fistps
mov
push
rcrl
lods
inc
jmp
adc
mov
gs
and
sbbb
add
add
insl
push
pop
jmp
fimull
jbe
jmp
dec
lock
jnp
andl
push
mov
scas
clc
into
rclb
xchg
loope
les
mov
das
cmp
mov
sub
push
push
mov
jp
sub
mov
and
int
sbb
ss
add
inc
mov
rcrb
cmp
leave
incb
push
and
inc
xlat
cmp
cld
jmp
out
arpl
flds
inc
push
pop
frstor
repnz
sub
xor
testl
dec
out
pop
sub
push
insb
clc
jae
cli
cmp
sub
mov
int
inc
fnstsw
int
frstor
dec
sub
cmp
insb
aam
inc
sti
sbb
inc
mov
add
into
bound
xchg
dec
incb
add
ret
sarl
mov
xchg
imul
push
inc
pop
dec
icebp
sbb
in
in
mov
mov
fsubrl
or
push
mov
bound
ja
and
dec
pop
mov
loope
mov
in
add
and
js
shl
pop
test
lret
leave
jns
pop
sub
sbb
mov
cmc
adc
daa
dec
cmp
movsl
pop
mov
cs
dec
movsl
movl
bndstx
jae
das
cltd
jecxz
mov
or
rclb
xchg
xor
adc
fstp
hlt
pop
pop
daa
mov
or
jbe
xor
fistpll
adc
movsl
mov
stos
fldenv
xor
outsb
pop
cmp
push
jo
xor
xor
cmovno
mov
lahf
subl
loopne
test
or
ret
pop
popa
pusha
pop
cmpsl
xor
inc
jb
jge
cli
xchg
cli
jge
incl
mov
sbb
ds
push
out
and
ss
addr16
sbbb
in
push
inc
mov
cli
repz
pop
ja
jge
sbbb
xor
sbb
push
mov
cvtdq2ps
xchg
cs
rcr
call
shrb
adc
jmp
popa
xor
or
nop
mov
fidivrs
add
push
test
inc
pop
mov
repz
xchg
jp
fists
ljmp
loop
ljmp
push
mov
mov
mov
hlt
dec
sarl
pop
sbbb
xchg
es
nop
mov
adc
add
jbe
stos
pop
clc
rcl
insl
push
fs
pop
pextrw
xor
mov
cmpsl
mov
push
and
es
cltd
repnz
fmul
sbb
aad
inc
pop
jns
sub
inc
pushf
xor
lea
dec
xlat
adc
sbb
fidivl
adc
or
out
inc
insb
sub
mov
lods
inc
mov
pop
lods
dec
fisubs
jne
ss
jnp
xlat
rcll
icebp
and
jmp
pop
movsb
ret
pop
xlat
jp
inc
mov
ds
rcrl
lods
push
jns
mov
jne
cs
hlt
xchg
add
in
aam
cwtl
orl
mov
je
ss
lcall
shlb
ja
mov
mov
in
add
aam
ss
or
arpl
mov
aaa
out
cmp
clc
cmpsb
cmp
inc
sbb
pop
daa
rcrl
jp
sub
popf
popf
enter
adcl
sbb
lahf
adc
lds
mov
xchg
clc
adc
ss
jae
jno
outsb
pop
je
xor
es
xor
dec
or
das
arpl
negl
movsb
imull
add
mov
enter
ret
xlat
pop
cmp
sarb
inc
push
mov
fmull
xor
dec
xchg
xchg
lahf
roll
add
cmp
sub
jne
inc
bound
aas
repnz
ret
add
pop
movsb
cmp
or
xchg
cmp
shrb
sub
add
ja
loope
cmp
lock
jb
xor
das
cld
pop
add
dec
out
inc
fstps
fdivs
push
xor
andl
lea
jnp
mov
enter
mul
je
loop
rcrl
sub
in
add
xor
jb
add
pop
rcll
inc
adc
pop
dec
push
jae
xlat
push
lock
pop
int3
mov
push
jge
aad
push
cmc
addr16
iret
stos
cmp
mov
test
fidivl
cmpsb
push
or
arpl
adc
xor
shl
stc
es
xor
je
js
mov
and
mov
stos
movsb
inc
dec
xlat
pop
sbb
jge
into
fldt
cmp
mov
inc
xchg
sbb
dec
push
lcall
fistl
bound
or
cli
or
add
inc
pop
andl
mov
xchg
xchg
in
repnz
nop
int3
stos
js
pop
in
cmp
jl
or
jg
cmp
ffreep
mov
hlt
ret
fistpll
out
ficomps
mov
aaa
int
loope
pop
or
xor
cmp
or
jg
pushf
xor
adc
outsl
mov
sarl
fnstsw
push
pusha
mov
xor
or
push
enter
push
pop
adc
and
pop
jl
rolb
xlat
and
mov
pop
ror
je
add
lea
ficompl
sahf
dec
lea
xchg
cwtl
rcll
mov
pop
adc
fldl
fs
in
or
hlt
xchg
push
loop
jo
lret
nop
popf
stos
ret
std
nop
pop
outsl
lcall
popa
mov
adc
jb
incb
in
jns
add
inc
dec
adcl
int
xor
mov
sbbl
add
mov
bound
mov
ds
std
outsl
mov
lcall
data16
pop
jnp
js
cmp
jecxz
loopne
add
out
cld
repnz
xchg
mov
push
ss
add
scas
cmpsb
cmp
jns
add
pop
fwait
adc
pop
mov
mov
or
aad
sub
sar
cltd
shl
xchg
and
cwtl
shll
inc
xlat
iret
cmp
ja
in
sub
mov
mov
addb
push
fisubs
sar
mov
pusha
fldt
jle
clc
mov
imul
pop
jle
subl
xchg
test
cmc
mov
adc
mov
pushf
ficoml
push
lods
or
js
and
and
jne
ljmp
cmp
cmp
das
mov
testb
push
rorl
mov
xchg
jmp
add
sbb
xchg
test
jae
scas
jo
sub
and
dec
push
test
lcall
or
jg
lods
cmp
and
xor
imul
push
mov
mov
mov
sti
sbb
pop
mov
or
dec
and
push
lcall
call
ret
popa
ret
pop
xchg
dec
test
push
fwait
mov
mov
xchg
cwtl
icebp
fidivl
test
xor
in
sti
sar
daa
insl
sbb
sub
mov
es
pushf
xchg
dec
inc
sub
sbb
jbe
add
iret
jl
add
imul
xor
mov
and
push
fdivp
aad
fmuls
jmp
mov
push
xlat
lock
aad
cmp
imul
cmp
enter
stos
push
dec
add
inc
cs
add
aas
out
push
or
mov
outsb
imul
jno
fisttps
lret
mov
mov
push
pop
ss
ret
ds
std
pop
dec
negb
dec
popf
scas
aad
shrw
pop
in
pop
scas
xor
xlat
sub
ficompl
xchg
mov
cmpsb
andb
sbb
imul
push
cmc
pop
dec
pushf
xor
clc
pop
push
sbb
in
stc
rclb
push
imull
insb
sbbl
jbe
pushf
dec
or
nop
inc
pop
shrl
loopne
adc
add
aam
dec
pop
lods
cltd
pop
out
lea
mov
xchg
ss
xlat
sub
inc
sbb
xchg
xchg
neg
xor
cltd
arpl
xor
ds
or
or
push
pop
push
fcomip
or
pop
iret
data16
or
fldl
mov
mov
cmpl
xchg
pusha
push
movsb
pop
pusha
add
mov
clc
mov
or
push
cmp
cmpsl
jo
loopne
enter
pop
icebp
fsubrl
push
aaa
popf
xchg
jg
jne
mov
insb
push
mov
pop
sbbb
jge
pop
sbb
mov
or
int3
sub
mov
sbb
inc
std
faddl
shrb
push
dec
loopne
sahf
sti
push
in
clc
repnz
or
sbb
and
inc
adc
mov
arpl
mov
cmp
popa
lcall
out
or
cmc
push
adc
fidivl
lock
js
clc
jae
lds
sbb
dec
cmp
popf
in
jne
test
inc
jl
add
ficomps
push
pop
scas
repnz
sbb
inc
add
js
cmpsl
bound
hlt
fnstenv
inc
sti
movsb
outsl
popa
mov
imul
in
xor
xchg
jle
out
lret
or
daa
mov
out
mov
ret
jmp
mov
idivb
mov
shrb
add
jo
popf
repnz
lods
and
push
dec
dec
xchg
xor
xor
addr16
fld
roll
push
adc
mov
cmp
loope
or
mov
pop
loop
mov
into
mov
sbb
and
pop
insl
loopne
aam
imul
ja
mov
push
sub
shl
lods
or
loop,pt
mov
pushf
cmpsb
push
movsb
repnz
sbb
test
outsl
testl
sti
dec
jo
pushf
arpl
pushf
arpl
mov
mov
inc
int
sbb
addr16
ficompl
das
pusha
sti
dec
and
mov
push
sub
out
pop
stos
in
sti
hlt
xor
pop
cmpsl
gs
push
mov
lcall
pop
sbb
xlat
pop
loop
mov
and
inc
cmp
fwait
into
xchg
jge
ja
aam
fsubrl
cli
jae
pop
mov
ret
fisttpl
mov
clc
push
xlat
push
jmp
push
mov
or
outsl
mov
ja
ret
cmpsb
and
and
leave
xchg
outsl
rcrl
mov
mov
fcomps
shll
xor
lock
sbb
adc
push
push
mov
add
jnp
por
inc
push
xchg
imul
cmp
xor
xor
iret
xchg
jb
subl
xor
stos
cld
xor
scas
xor
lods
cmp
in
add
loop,pn
xor
sti
pop
ds
dec
rcrb
repz
push
push
or
lods
xlat
dec
enter
stc
les
outsb
fbstp
testb
mov
push
rorl
and
xor
popf
dec
mov
xchg
imul
aad
lret
mov
cltd
in
roll
push
cmpsb
jne
in
adc
fwait
push
cmc
int3
pusha
lcall
sub
repz
sahf
xor
sub
mov
pop
in
pop
adc
or
andl
mov
push
dec
lret
outsl
cli
jl
pop
scas
sbb
xchg
js
test
pop
inc
cli
pop
inc
cmp
jae
sub
js
iret
fwait
popa
sar
xchg
add
in
push
push
mov
ds
outsb
daa
out
sub
dec
popw
lods
xor
mov
movsb
fs
cmpsb
andl
pop
jbe
push
mov
xor
push
scas
ret
je
scas
mov
mov
aam
outsl
pop
push
rcl
leave
mov
mov
icebp
jbe
jb
push
iret
mov
mov
loopne
cmp
pusha
push
repz
lods
std
imulb
or
stos
cwtl
mov
inc
insl
mov
out
shll
inc
push
loope
cmp
mov
cld
fsubrl
jge
dec
sub
icebp
js
lea
mov
lret
aad
pop
jmp
loope
fimull
pushl
dec
sub
clc
nop
lods
mov
or
push
xor
insb
shrl
cli
iret
rcr
in
int3
pusha
dec
push
add
mov
pop
lret
movsl
es
mov
xchg
mov
test
arpl
call
jge
mov
inc
in
test
fbstp
test
add
inc
sbb
sub
mov
lea
enter
movsb
jmp
fiadds
leave
je
pop
adcb
sub
pop
add
push
ljmp
fmul
mov
iret
ss
sti
push
pop
inc
add
or
mov
mov
lret
add
sub
pop
sahf
mov
mov
and
sbb
and
test
and
pop
mov
inc
push
insl
mov
pushl
push
and
mov
pop
movd
push
inc
push
scas
ss
cltd
daa
add
xchg
sbb
lcall
shlb
insb
push
je
mov
mov
and
dec
mov
sub
inc
adc
ljmp
lcall
cmp
fnstenv
js
shrb
ds
fisubrl
inc
cwtl
mov
out
push
mov
add
pop
leave
and
cli
xor
shlb
test
cmc
mov
loope
adc
pop
fs
xchg
cmp
sarl
add
sbb
data16
cmp
lret
hlt
inc
je
ret
and
sub
lea
insl
test
xor
imul
enter
xor
stos
push
ljmp
aam
pusha
std
and
bnd
sub
sbb
insl
cmpsl
ja
int
jnp
push
jecxz
pop
push
scas
mov
xor
pop
cmp
lea
mov
jns
int
xlat
insb
addl
add
ds
mov
movsb
jns
push
in
repz
pop
mov
jne
sbbl
sbb
xor
rcrl
gs
xchg
popf
cld
inc
jecxz
xchg
stc
push
jge
jb
lahf
sub
adc
cwtl
jge
or
mov
jmp
out
scas
sbb
push
cltd
pop
jb
stos
outsl
mov
dec
in
pop
or
out
call
call
mov
mov
pop
xchg
xor
test
outsl
fdiv
aas
ljmp
insb
jno
inc
ljmp
push
sub
fdivs
or
movsl
cmp
test
add
mov
pop
out
js
and
int
out
mov
fs
xor
mov
cmpw
mov
int3
pop
add
mov
adc
pusha
cli
sti
cmp
or
cltd
inc
dec
dec
pop
add
cmp
pop
idivl
or
aad
add
pop
loop
adc
popf
in
pushf
jge
pop
out
test
cli
or
mov
iret
dec
aad
icebp
loope
xchg
adc
push
insl
dec
mov
add
cmovns
inc
jne
loop
adc
fldenv
mov
jmp
dec
hlt
mov
sub
loopne
or
loope
adc
inc
cltd
xchg
je
xchg
subl
arpl
imul
pop
fucomip
mov
mov
pop
icebp
les
adcb
mov
iret
and
sbb
jns
int3
mov
pop
cmpsb
sbb
stos
jo
sub
xchg
mov
mov
mov
jae
popa
repnz
xor
lods
mov
mov
push
hlt
mov
sahf
fdivr
xchg
das
cltd
mov
fistl
aam
jae
mov
iret
jecxz
push
test
lret
mov
push
xchg
scas
mov
pop
lcall
popa
mov
stos
popf
xor
pop
cmc
int3
sahf
xchg
mov
mov
popa
test
push
pop
rol
fbld
lods
ljmp
pushf
lods
dec
xor
leave
cmp
mov
push
loope
mov
dec
and
dec
push
push
and
ljmp
pusha
repnz
xlat
test
or
imul
movsl
add
push
call
pop
push
bound
mov
dec
icebp
leave
aad
loopne
popa
cmp
aam
jl
mov
add
int
cmp
push
int3
pop
test
jg
lds
andb
xchg
sub
cli
pop
mov
or
ds
sbb
sub
aad
or
and
pop
cli
insb
sbbb
push
call
push
jne
inc
mov
jg
cmp
pop
and
cmp
call
das
mov
inc
mov
adc
dec
add
aas
and
and
addl
repnz
or
adc
pop
mov
lea
insb
add
xor
mov
fs
lret
pushf
mov
cld
lock
dec
divl
out
xor
lock
fidivl
adc
and
sbb
jp
inc
jmp
sbb
add
imul
add
cmpsb
jbe
iret
addr16
push
mov
mov
insb
cld
outsl
bound
add
rorb
cmp
and
and
pushl
fdivrp
xchg
adc
cltd
adc
movsl
cmp
push
xchg
jo
pop
mov
jge
js
pop
cmp
inc
mov
jmp
push
cmc
mov
xor
mov
pop
push
jmp
out
jmp
orb
test
sbbl
cmpsl
aas
dec
add
decb
lock
adc
int3
jae
sbb
in
orb
cmp
in
pop
mov
cmp
in
jmp
cmpsl
xor
sub
sub
stc
sub
mov
out
cld
jg
cli
insl
push
jg
xor
sub
pmaxsw
jmp
cmpsl
pop
push
loopne
into
clc
mov
or
xor
or
push
inc
jge
loop
bound
shrl
cmpl
cli
in
inc
jmp
push
dec
pop
add
cmc
mov
xchg
ret
mov
bound
sti
or
dec
out
xchg
add
int3
arpl
test
pusha
fisubs
cmpl
insb
icebp
mov
sar
inc
mov
es
data16
cltd
cmp
mov
adc
or
push
adc
movsb
add
adc
inc
enter
shrb
adc
fwait
ret
adc
adc
sbb
lret
jo
and
push
enter
cs
sub
push
ja
leave
xchg
add
ljmp
fwait
xor
mov
les
mov
lods
jmp
mov
pop
jo
daa
ljmp
loopne
mov
pop
lret
pop
fadds
mov
adc
mov
fwait
xor
int3
and
in
movsl
icebp
ud2
incb
and
pop
dec
test
div
mov
pop
cmp
push
jecxz
inc
sub
pop
push
test
outsb
test
lret
xor
out
je
repnz
dec
mov
test
test
dec
sub
add
inc
ret
and
dec
add
xlat
adc
nop
or
aad
jae
es
pop
scas
jle
insb
inc
jbe
test
sub
xchg
mov
lods
mov
roll
out
dec
cmp
into
inc
xor
cmpsl
cmpsl
out
mov
xchg
add
jecxz
dec
mov
dec
fsubl
jno
inc
aaa
scas
xchg
sub
pop
stc
shrl
in
into
sub
or
sbb
add
mov
rol
cmp
arpl
mov
add
std
xchg
jp
icebp
testl
push
xchg
xor
cli
mov
cwtl
stc
push
add
sbb
inc
test
adc
jmp
fs
hlt
mov
and
or
iret
xchg
daa
leave
or
dec
adc
scas
pop
sbb
data16
insb
sar
into
mov
mov
xor
js
mov
mov
das
data16
lret
adc
dec
sub
lds
cmp
shl
enter
lds
mov
dec
sbb
xor
push
iret
cmp
sub
pop
jmp
lods
inc
clc
fadds
pop
xor
mov
outsb
xorl
stc
adc
and
sbb
pop
inc
std
mov
jle
cltd
out
inc
sub
pop
mov
inc
jmp
inc
push
and
cmpsl
stos
xchg
push
inc
cld
mov
repnz
mov
pop
pushf
mov
sbb
cli
cmp
and
fsts
mov
rcll
sahf
test
dec
add
enter
aad
repz
adc
sti
dec
or
call
push
subb
jne
ficoms
mov
cltd
icebp
roll
stos
mov
mov
dec
push
fldt
xchg
loope
add
xchg
pop
xchg
orb
sbb
fsubrl
dec
in
out
enter
int3
fs
lods
repnz
jl
push
push
fisttps
mov
pusha
int
fidivrl
fisubrl
imul
sti
cmpsb
shll
sbb
aam
inc
mov
lahf
notl
and
xchg
pusha
ja
outsb
in
xlat
insl
repz
leave
cmpb
cmc
push
add
mov
push
in
aam
pop
nop
lods
inc
incb
inc
pop
lret
popa
jne
mov
cmp
call
fildl
sbb
lods
icebp
mov
movups
loope
jo
sub
or
sbb
fmull
insl
testb
inc
testl
inc
loop
rcll
mov
fucomip
mov
js
mov
jae
jle
adc
adcl
daa
lea
ja
xchg
jmp
xchg
insl
add
imul
push
lret
popa
sahf
outsl
movsb
xchg
shr
jno
sub
repz
sahf
lods
fisubrl
mov
mov
aad
decb
mov
enter
popl
pop
sti
mov
and
mov
and
pusha
xchg
pop
jbe
arpl
xchg
jecxz
mov
ljmp
movsl
in
adc
std
mov
pop
fcoms
in
in
push
sbb
adc
sbb
aam
into
push
jle
push
out
push
mov
cmpsb
fsubrl
shlb
inc
fiadds
daa
xchg
popf
or
repnz
dec
shl
in
xchg
aas
ret
loop
arpl
fistpll
shl
test
out
adc
insl
push
je
fdivl
iret
fistpl
adc
xchg
outsb
pop
es
add
sub
scas
xchg
sbbl
enter
mov
cmp
xlat
inc
sbb
negb
pop
in
push
push
jg
inc
ljmp
fs
or
rcll
pop
je
pushl
lods
xchg
sub
or
rcrb
stos
xor
fdivrl
stos
int
mov
sti
pusha
and
jecxz
cmc
mov
ficomps
xchg
bound
lcall
xor
cmp
jmp
out
ret
or
adc
rclb
add
test
pop
dec
lock
dec
dec
push
cmp
or
das
ja
cmp
dec
cmc
jecxz
push
cmc
jle
xorl
mov
divl
popf
add
pop
lds
js
pop
jl
lret
fnsave
aad
in
cld
xchg
inc
add
repz
mov
sahf
loop
rorl
adc
pop
ljmp
xor
jmp
jle
imul
mov
das
scas
iret
movl
and
cmp
aad
xor
loope
enter
xor
sbbb
dec
xor
loop
sbb
aad
jecxz
test
daa
arpl
sbb
sbb
add
aaa
jbe
shll
xchg
mov
and
adc
in
ret
in
or
pusha
jmp
shlb
or
ja
cmpsb
scas
call
inc
es
fisubs
dec
jns
mov
notl
jmp
adc
adc
inc
inc
cli
jmp
outsb
cmpb
cmpsl
mov
mov
jecxz
fcmove
dec
mov
pop
jecxz
testl
or
sbb
scas
out
push
enter
jle
mov
mov
push
mov
nop
sbb
push
pushf
add
mov
mov
mov
pop
bound
mov
jg
ret
pushf
das
cmp
or
hlt
es
aad
imul
cmc
mov
mov
sti
std
adc
push
add
xor
xlat
xchg
aam
mov
testb
int
outsb
jge
or
xor
inc
mov
enter
es
add
lahf
xchg
into
mov
and
ret
hlt
and
repz
aas
pop
cmc
jo
data16
mov
mov
test
xor
stos
pusha
sbb
mov
sahf
mov
fidivl
sbb
insb
call
outsl
mov
shlb
mov
sahf
xor
ja
push
inc
mov
ss
cmc
mov
xchg
mov
push
push
xchg
leave
mov
nop
xor
out
mov
inc
jne
ja
adc
iret
outsl
scas
xchg
xchg
xchg
lock
daa
pop
ret
push
lock
jno
mov
add
cltd
aaa
in
cli
repnz
daa
mov
inc
ds
jo
xor
in
pop
movsb
inc
adc
jns
push
cmc
pop
dec
cmp
and
jnp
inc
mov
icebp
dec
dec
and
test
or
push
mov
je
aam
xor
iret
push
int3
fs
call
inc
pop
xor
inc
movsb
cmp
lcall
pop
mov
sbb
sub
adc
in
push
jbe
fstl
fcompl
xor
pop
jmp
push
mov
xor
sub
add
inc
jge
mov
in
add
push
cwtl
add
inc
dec
push
pushf
xor
call
mov
addr16
and
scas
fs
xchg
xchg
push
aad
dec
cmp
xor
repnz
js
sbb
sbbl
push
and
repnz
mov
or
iret
dec
pop
mov
arpl
subb
adc
sub
sub
sbb
pop
sub
mov
fisttpl
adc
or
adc
jo
push
divb
jbe
aam
pop
ja
pusha
ss
push
lds
mov
mull
push
push
mov
fs
sub
mov
ljmp
adc
xor
outsl
sub
mov
mov
cmpsb
mov
ds
popa
fcomps
popf
or
repnz
sub
sub
pop
ds
scas
andb
add
pop
mov
inc
and
sub
and
xor
push
dec
pop
mov
xchg
mov
shlb
cmp
lods
inc
test
pop
sub
dec
sub
jns
jge
aam
lret
jbe
xor
inc
shll
lea
imulb
jge
sarl
sbbl
mov
mov
lahf
outsl
sbbb
dec
xchg
loop
mov
lods
into
sbb
ds
fwait
stos
outsb
add
rolb
inc
xchg
sbb
enter
jns
add
dec
pop
scas
adc
imul
sbb
iret
adc
repz
cltd
mov
xor
iret
and
aam
or
lret
adc
pushw
sbb
mov
fcomi
scas
mov
js
js
cmp
dec
pop
pop
sti
add
sbb
mov
ret
lds
mov
fisttps
xchg
push
sub
xor
stos
mov
aam
or
mov
ja
add
ror
pop
add
popa
outsl
add
xchg
nop
mov
int3
push
jle
xchg
ljmp
loop
mov
mov
sub
fcompl
xchg
add
popa
fwait
adc
out
cmpsb
rcrl
repnz
pop
hlt
adc
adcb
push
pop
je
mov
mov
loopne
xor
and
adc
movsl
or
mov
je
or
aad
xchg
bound
loopne
movsl
sub
bound
xor
out
ljmp
jne
loop
adc
int
and
out
xlat
mov
dec
loop
pop
adc
adc
add
mov
mov
imul
push
jmp
testl
jg
xchg
jmp
dec
in
ss
pop
das
shrb
mov
push
inc
sti
pop
mov
sbbl
xchg
iret
cmp
in
std
aam
test
or
add
subl
cmp
sub
lock
lock
inc
cltd
int3
lock
push
and
int3
icebp
shll
add
test
or
xchg
mov
sbb
xchg
data16
lahf
cmp
movsb
daa
inc
sahf
popf
stc
xchg
jge
cmc
lea
mov
test
or
cmp
movsb
mov
mov
out
scas
fiadds
or
call
mov
mov
and
sti
fidivs
xor
stos
movsl
cli
std
cmp
xor
imul
bound
cld
dec
addr16
pop
cmp
in
pusha
test
loope
push
lret
ret
ror
in
lcall
and
inc
mov
mov
dec
fisubl
or
out
insb
and
jno
aam
in
scas
inc
add
stc
inc
aad
int
aaa
addb
pop
mov
mov
fidivs
into
flds
repz
std
push
sub
repz
lods
adc
subb
mov
aam
or
sub
cmp
jb
adc
out
push
shl
in
push
ljmp
jne
sbb
adc
mov
mov
test
sarb
pop
sahf
or
adc
mov
sub
inc
scas
pop
rolb
leave
pop
imul
sub
push
inc
or
ficompl
loope
mov
sbb
lret
call
and
sbb
loope
jp
jns
int3
dec
mov
iret
add
sbb
aad
push
cmp
cld
push
stc
mov
ficomps
dec
and
enter
lea
add
jb
andl
and
adc
xchg
inc
imul
inc
scas
aaa
jae
push
inc
ljmp
adc
insb
dec
imul
mov
sbb
push
inc
push
aaa
inc
cmpsb
ds
xor
dec
imul
std
das
stos
mov
adc
pop
imul
stos
addl
jp
loope
movsl
lds
sahf
ss
mov
das
std
mov
js
push
out
fwait
in
xchg
pop
add
ja
push
test
push
cld
aad
and
mov
xchg
push
movsl
testl
jle
sbb
pop
push
xor
or
je
xchg
mov
sub
cwtl
cltd
nop
mov
arpl
jne
stos
add
xor
test
das
mov
adc
and
orl
dec
in
rorl
add
adc
adc
jno
push
mov
adc
and
adcl
rorb
push
jne
repz
fcompl
into
jg
je
mov
inc
xor
xchg
stos
in
lcall
cmp
ret
pop
cmp
lds
fstpl
mov
lcall
or
lahf
xchg
imul
push
shrl
fisubs
jb
xchg
pop
push
xor
jp
out
sub
push
jmp
shlb
cltd
add
inc
dec
pop
push
pop
addr16
xor
in
fdiv
insl
sarl
into
insl
enter
leave
and
fstl
mov
sbbb
mov
repnz
push
jg
inc
inc
jg
jge
shrb
fdivl
sahf
mov
rorl
rorl
add
push
repnz
pop
xor
leave
aad
pop
push
inc
fwait
xchg
xor
jecxz
mov
std
xchg
hlt
xor
test
and
movsl
push
mov
jecxz
lcall
out
mov
stos
xor
rol
cmc
repz
cmp
cmpsl
jmp
cltd
sub
adc
int3
fisttpl
lods
cld
cmp
sub
push
jne
add
or
push
in
insb
sub
pop
mov
and
clc
ficoms
mov
push
cmp
jae
aaa
mov
sbb
int
jnp
mov
add
fstpt
aas
repnz
adc
lcall
and
mov
lahf
filds
fidivrl
add
gs
cmp
push
icebp
stos
scas
iret
sbbb
ss
push
rorb
mov
insb
imul
in
fidivl
push
les
das
mov
xchg
add
push
sahf
cli
jmp
push
and
mov
cmpl
lahf
scas
mov
jo
xlat
outsb
shl
in
clc
loop
dec
xchg
adc
sub
in
xor
mov
xchg
lods
fcompl
pop
imul
inc
sbb
cmp
std
test
insb
lea
jl
push
hlt
dec
cmp
add
outsb
mov
pop
mov
xor
or
jne
sub
into
imul
push
scas
jae
fdivl
nop
pushf
mov
outsb
xchg
cwtl
sbb
ret
jle
dec
mov
push
pop
mov
in
mov
mov
out
adc
jne
in
std
push
pop
sub
fnsave
add
xor
xchg
stos
push
xchg
imul
divb
jge
add
and
loope
jg
mov
fcoml
popf
jbe
xchg
arpl
popf
cmc
aas
adc
int3
fnsave
or
fwait
jo
cli
mov
dec
int
sbb
sub
pop
jle
cmp
mov
mov
or
xchg
aaa
or
in
mov
fcmovnb
inc
cwtl
incb
lock
arpl
hlt
popf
in
sub
mov
in
jp
mov
push
lods
mov
xor
push
pop
xchg
insl
xchg
push
test
movsl
xor
aad
aad
mov
push
out
sub
call
cli
jge
mov
dec
xlat
and
push
jo
sbb
push
loope
and
cmp
lds
dec
adc
cmpsl
pop
jmp
adc
sbb
cmpl
sub
adcb
add
adc
fwait
mov
mov
hlt
popa
push
dec
in
ds
push
lds
popa
fs
repnz
inc
popf
xchg
jp
pop
mov
fbstp
sbb
nop
rcrl
cmp
pop
in
xchg
pop
xorb
enter
jae
orl
and
sub
rclb
xlat
sub
dec
xchg
mov
jae
jecxz
push
cmp
in
sarb
aam
sbb
fwait
fs
pushf
jnp
ja
cmp
clc
mov
fwait
jg
out
loope
add
fcomps
sub
pusha
xchg
ljmp
out
xchg
push
cmp
inc
xchg
inc
lahf
je
mov
and
inc
cmpsl
jl
aad
sub
lret
add
adc
mov
pmulhuw
cmp
insl
and
mov
adc
mov
and
inc
push
sub
ss
fwait
dec
test
add
and
inc
cmpsl
and
mov
xchg
or
dec
cld
push
fldenv
stos
test
adc
cli
int3
addl
push
sub
rcl
dec
icebp
mov
les
adc
insl
stc
inc
in
lds
mov
pop
rcll
mov
mov
pop
sub
test
out
cmp
dec
cmp
je
push
cmpsb
sub
addr16
xor
xor
jp
inc
and
jbe
inc
xor
push
js
out
and
out
je
cs
push
stc
mov
mov
jo
mov
popa
push
and
jg
pop
adc
pop
dec
pop
pop
lret
mov
or
cmpsl
sbb
scas
push
ljmp
call
rclb
lcall
xchg
or
jbe
fwait
cmpsl
mov
lret
jno
cmp
fdivl
mov
pop
dec
bound
jg
mov
out
jecxz
xor
push
scas
mov
pop
lea
ret
xor
and
sub
xchg
in
decl
add
repnz
fidivs
rorl
lcall
in
ljmp
fs
mov
mov
xchg
and
dec
std
aas
mov
sbb
mov
lcall
cld
mov
cmpsb
dec
lcall
push
add
in
movsl
ret
bound
xchg
imul
sbb
cmpsb
rclb
ss
mov
fs
jb
sbb
addr16
cmp
aaa
inc
push
adc
inc
fstps
scas
mov
mov
rcrb
aas
fists
fimull
mov
fsubrs
inc
insb
add
mov
fcoml
cltd
in
push
inc
or
cmp
int
jae
push
push
add
loope
pop
popa
adc
inc
call
rcrl
push
mov
hlt
mov
add
ret
pop
mov
pop
loope
mov
mov
cmp
cli
xchg
push
pop
dec
mov
sbb
xor
fcomp
add
and
and
insb
andb
in
ds
std
daa
inc
lock
adcb
addr16
cwtl
das
sahf
lods
pop
push
cmpsl
cmp
jne
dec
mov
ds
iret
ret
dec
add
pop
hlt
aas
pop
xchg
aas
pop
pusha
pop
add
pop
mov
jns
shrb
xchg
faddl
mov
pop
rcrb
fcoms
cs
dec
mov
cmp
pop
test
popa
mov
mov
sub
mov
add
mov
add
cwtl
mov
sbb
mov
push
sub
xchg
mov
sub
hlt
adc
stos
mov
lea
out
bound
cltd
pushf
test
int
xor
inc
aaa
loop
mov
mov
repz
pop
dec
insb
in
and
dec
add
lock
imul
pop
cmpsl
bswap
fisubl
and
or
scas
pop
aam
sbb
stos
es
fiaddl
sarb
cwtl
xchg
call
arpl
sbb
push
sahf
dec
rcl
roll
pop
xor
int3
add
test
jae
sub
adc
loopne
pop
push
cmp
xor
fbld
rorl
cmp
test
mov
add
mov
scas
lret
cltd
icebp
mov
in
xor
stc
jo
int3
mov
xchg
mov
aam
sub
icebp
cmp
arpl
xor
and
xchg
test
jo
int
jbe
cmpsl
cmp
xchg
stc
fidivrl
das
xlat
in
and
jno
sbb
inc
lret
lds
addr16
aaa
and
lcall
cmp
pop
inc
sub
ja
and
pop
sahf
mov
ret
cmp
push
je
mov
test
shll
sbb
arpl
loopne
mov
aaa
into
cltd
aam
add
inc
lods
and
out
sub
les
roll
nop
ljmp
cmp
and
pop
push
inc
pushf
cmp
loope
lods
jnp
fwait
cmpsl
push
outsb
push
jmp
add
xor
outsl
or
lret
daa
push
push
sub
adc
mov
sub
loope
push
je
mov
fcmovb
das
inc
mov
pop
stos
add
xlat
sbb
mov
xchg
je
mov
scas
push
add
clc
cmpb
mov
dec
or
fiadds
int3
mov
sub
mov
jae
xlat
outsb
pusha
jg
lock
and
xchg
out
insb
push
adc
and
jmp
and
mov
xchg
sub
addr16
or
out
and
xchg
mov
mov
and
inc
ficompl
mov
jmp
jns
arpl
outsl
and
mov
cmpsb
or
lahf
xchg
imul
xchg
adc
inc
mov
mov
outsb
imul
cmpl
sbb
cwtl
cmp
lods
jo
adc
cmpsl
out
xchg
xchg
fcmovnb
mov
mov
ret
sbb
icebp
cmpsb
adc
mov
pop
sub
cmp
push
stc
les
cld
cs
or
mov
sub
mov
outsl
fs
push
jecxz
shlb
push
jno
dec
sub
mov
jl
dec
sub
sbb
sbb
push
pop
cmc
bound
je
cmpsl
lahf
out
xchg
in
sbb
lock
cld
iret
sub
inc
mov
dec
mov
lret
not
xchg
addr16
mov
mov
fsubl
dec
and
scas
sbb
jbe
imul
xchg
outsb
dec
arpl
mov
fmul
testl
adc
pop
je
movsb
loop
fadd
nop
dec
pop
mov
shlb
dec
sbb
dec
jecxz
shl
cmp
xor
xchg
dec
add
xchg
in
add
xor
stos
xor
sarb
sbb
pop
aam
nop
out
shl
push
cmp
insb
push
xchg
int3
aaa
repz
mov
out
add
outsb
pusha
sub
lret
aam
sbb
lcall
movsl
popa
cmp
xchg
xchg
ja
xor
mov
negl
cmpsl
lods
out
fmulp
enter
mov
sti
xor
fimull
and
mov
dec
stos
jmp
es
nop
xor
pop
inc
test
add
sub
int
cli
jge
mov
sbb
ss
popf
iret
lea
js
cmp
je
data16
leave
xchg
je
mov
in
pushf
sbbb
sub
insl
data16
loopne
pop
insl
jo
cmp
mov
shl
push
pop
and
mov
push
out
xor
dec
fdivr
stos
inc
push
jge
and
jns
test
test
mov
stos
push
pop
pusha
fucomip
clc
adc
inc
xchg
add
and
pop
sbb
pop
add
push
sbb
clc
or
jae
rcrl
sbb
mov
jmp
mov
jne
or
sbb
shll
bound
loope
negb
lahf
test
and
test
inc
add
jo
inc
ss
cltd
push
or
pop
mov
aad
mov
pusha
iret
and
aam
push
jmp
push
sbb
ss
lods
push
arpl
mov
push
jle
sbb
mov
fisubrs
out
aaa
addr16
cmpl
xor
fwait
js
jno
mov
fucomp
jp
dec
pop
adc
lea
push
pusha
inc
in
or
stos
sub
popf
sbb
push
mov
jno
push
jl
mov
hlt
insl
loopne
test
mov
or
out
xor
push
inc
lods
and
mov
shlb
leave
imulb
pop
movsl
in
adc
push
jecxz
inc
std
xchg
xorb
mov
rorb
jmp
mov
loopne
add
rorl
imul
insb
mov
sbbb
mov
stc
fdivs
jg
push
mov
xor
fsubs
xlat
sub
or
in
orl
lods
jmp
jge
out
pop
daa
mov
jp
jns
fwait
cmpsb
pusha
not
outsb
pop
mov
cmp
push
outsb
push
ret
lahf
cmpsl
lds
test
pop
outsl
and
test
push
push
adc
shrb
cwtl
icebp
cmpb
fnstcw
popa
jns
mov
ja
mov
jnp
dec
ds
jg
jg
xlat
xlat
sub
jbe
fnsave
fisubl
xchg
xchg
jb
lods
fsubrs
lds
push
inc
popf
mov
xchg
cmpsb
or
pop
out
cld
adc
mov
stc
orb
or
fmull
cmpsb
les
pop
fsub
mov
xchg
adc
jmp
gs
xchg
aad
ret
sub
fistl
aaa
lock
push
scas
rcll
pop
addr16
add
jmp
pop
adc
sub
sbbl
fcmovnu
jmp
mov
or
pop
cltd
inc
call
cmp
in
daa
mov
xlat
in
lcall
incl
dec
nop
sbb
or
lahf
mov
loope
std
add
decl
bound
mov
sbb
push
push
push
scas
push
xor
mov
popf
call
xor
jge
shr
cmp
jo
inc
loopne
sti
sbb
das
ret
adc
imul
testb
in
pop
rcl
xchg
hlt
out
add
adc
repz
faddl
sbbl
addr16
mov
inc
push
mov
cmpsl
sub
cmpl
sbb
jge
mov
sub
add
out
xchg
or
ja
push
test
jg
arpl
shr
dec
adc
push
adc
mov
rclb
or
push
xor
cmc
sub
jl
repz
in
jp
iret
outsb
dec
out
in
push
and
mov
sbb
mov
xor
imul
mov
mov
push
sub
sub
iret
mov
cmp
xchg
mov
test
xlat
pop
pushf
mov
clc
lret
pop
int
inc
leave
out
pop
int
mov
ret
sub
pop
test
cmpsl
push
cmp
and
cmp
nop
dec
sbb
or
dec
aaa
jl
aam
adc
lret
ljmp
dec
xchg
inc
into
out
mov
je
aas
loope
adc
inc
mov
and
movsb
mov
int3
lret
push
fisubrl
and
pushf
push
ficoml
andl
cmp
xor
or
loopne
or
push
lods
cmp
dec
fs
fwait
aas
pop
mov
subl
js
xchg
pop
mov
pop
insl
dec
orb
push
subb
sbb
mov
pop
outsb
imul
outsl
ja
mov
lds
ljmp
int
es
adc
gs
mov
aad
push
sub
out
shrb
ds
imul
jle
xor
push
es
pushf
nop
imul
addr16
dec
jecxz
in
push
lret
push
sub
push
mov
jmp
xor
mov
jmp
inc
in
jnp
ret
data16
mov
fiaddl
adc
lods
cli
pop
outsb
sbb
repz
repnz
and
adc
enter
xor
pop
xchg
xor
repnz
jns
lahf
xchg
adc
cwtl
push
mov
insl
mov
xchg
movsl
adcb
and
add
aaa
xor
mov
test
out
mov
cld
push
jo
jae
push
popf
iret
out
pop
movsl
mov
lods
aam
test
inc
mov
mov
aad
inc
addr16
hlt
push
rep
jecxz
jl
mov
ss
and
mov
inc
and
pop
idiv
pop
imul
or
xchg
mov
shrl
adc
sub
mov
jbe
enter
fimull
push
sbb
cmp
xchg
mov
call
lock
or
fwait
xor
call
sarl
pop
cs
iret
mov
hlt
mov
push
mov
push
mov
mov
rol
test
icebp
adc
js
mov
sub
xor
dec
mov
adcb
in
gs
ss
roll
sbb
lods
and
fstpt
pop
loop
and
xchg
fldenv
push
test
cmc
sbbb
mov
mov
out
fmull
push
jg
add
insl
ds
out
cmp
jns
mov
jne
inc
arpl
scas
scas
notl
mov
xor
inc
sti
jmp
and
aam
test
sub
je
popa
cli
xchg
testb
sti
int3
clc
dec
loopne
or
adc
sti
xchg
fidivrl
xchg
adc
inc
lahf
gs
mov
xor
dec
push
pop
pusha
stos
movsl
jl
dec
cli
jbe
or
fwait
xchg
mov
jecxz
cmp
lods
insl
in
inc
and
and
pusha
ffree
call
test
mov
aam
out
or
cs
stos
pop
mov
outsl
push
gs
xchg
movl
push
mov
rorl
push
dec
sub
fs
gs
xchg
xchg
inc
cld
cmp
popf
adc
pusha
pop
jge
fcomip
mov
jmp
jg
adc
in
fsts
dec
pop
pop
scas
aad
mov
cmpsb
sbb
sub
movzwl
fsubs
and
mov
mov
add
ss
adc
es
jecxz
xchg
sbbb
outsl
jne
arpl
sbb
out
sahf
fsubrl
adc
fisubrl
push
ficoml
fisttpl
int3
push
jl
mov
jle
in
iret
mov
fistpl
ror
mov
imul
adc
fldt
sbb
cs
mov
mov
sarl
ret
xchg
cmpsl
mov
sahf
in
xor
ja
push
loope
mov
dec
lahf
mov
mov
std
adc
test
push
rcrb
stos
ret
or
mov
sarb
pop
add
cs
fstps
mov
xchg
jl
inc
jg
or
add
loop
pop
test
lods
std
ja
enter
imul
fwait
jbe
push
mov
cmpsb
fnstenv
fidivs
pop
adcl
pop
stos
mov
mov
inc
inc
lea
mov
add
mov
iret
or
dec
push
negl
xor
lret
nop
cli
cmc
addr16
inc
dec
push
cmp
aam
sbb
stos
push
sar
aam
test
lea
pop
inc
jmp
jne
les
mov
aad
cli
loope
icebp
xchg
aas
add
das
add
test
cmc
std
inc
push
aaa
sub
vunpckhps
mov
stc
rorl
xchg
xchg
pop
xor
loopne
add
adc
pop
dec
jno
dec
jle
sbb
shr
sub
mov
movsl
push
daa
mov
mov
ds
cmpsl
out
inc
mov
mov
or
out
jae
mov
jno
vpshuflw
pop
das
inc
mov
push
cmpsb
sbb
dec
test
mov
dec
mov
and
mov
call
js
pop
in
pop
push
xchg
sub
add
mov
push
fistps
push
dec
mov
clc
outsl
popa
push
movsl
xlat
or
andps
mov
mov
push
sbb
movsl
dec
nop
fwait
xor
insb
mov
pop
or
sarb
sub
cld
insb
popa
jmp
and
push
mov
scas
cmc
or
xlat
insl
sbb
insb
ret
out
jecxz
mov
xchg
jns
dec
mov
mov
lods
aaa
pop
ljmp
data16
aam
sub
adc
push
ss
inc
push
into
add
or
and
adc
pusha
lahf
cmpsl
mov
mov
fadd
aas
add
iret
das
mov
test
mov
loop
stc
mov
push
sbb
sahf
lock
xchg
fnstcw
or
fs
and
mov
sbb
sub
pusha
leave
jb
mov
loope
push
outsb
inc
ficompl
xchg
popa
push
aad
sbb
hlt
imul
adc
inc
scas
aad
mov
into
cmpsl
test
sbb
orl
and
int
les
ljmp
addb
dec
cmpsb
add
and
sub
lods
mov
pop
xor
adc
cmp
jmp
dec
jecxz
push
popa
fadd
out
push
and
popa
mov
or
call
sbb
push
inc
sub
lods
jae
jbe
add
fidivl
fcomps
mov
and
push
xor
pop
lds
lahf
mov
mov
sub
and
inc
arpl
jle
enter
subl
aaa
add
xchg
sub
mov
test
insb
add
xchg
or
leave
jno
arpl
insl
ja
insl
sahf
ss
cld
add
sarb
and
andl
or
mov
int
sub
jp
pusha
push
pushf
xchg
push
mov
cmpsb
aaa
cwtl
pop
imul
nop
lods
jmp
mov
mov
std
sub
pop
push
fwait
jbe
in
stc
pop
jno
std
xchg
sbb
mov
rcrl
adc
outsb
push
push
in
cmp
test
and
aad
sbb
push
dec
scas
pop
cli
cmc
lock
js
insb
stos
mov
outsb
jnp
mov
sub
fxam
addr16
push
mov
int3
fbstp
cltd
cltd
xor
mov
xorb
loope
test
mov
pop
fucom
mov
adc
icebp
popf
add
fldcw
push
pusha
mov
jl
nop
rcrl
mov
insl
add
jne
or
rorl
lds
rol
mov
mov
adc
xchg
inc
jl
and
or
push
xor
xchg
add
sub
idivl
sahf
stc
cltd
dec
mov
push
push
mov
mov
cmp
pop
and
jae
push
sti
popa
and
sbb
aaa
outsl
inc
fnstsw
dec
loope
mov
loope
dec
dec
int3
fcoms
jo
stc
push
jmp
leave
fwait
sbb
fs
sbb
insb
cwtl
pushf
or
mov
mov
mov
loope
xor
and
mov
mov
inc
popf
int
and
cmp
and
adc
jno
in
repnz
outsb
mov
cli
inc
scas
rol
pop
jl
xorl
cmp
dec
xchg
cmp
repnz
pop
adc
jne
data16
jg
test
icebp
jl
aam
fwait
ljmp
jl
jnp
or
jg
bnd
pop
dec
rcl
or
loopne
pop
int3
fidivrs
sahf
cli
and
inc
rol
jl
je
into
or
lret
jg
test
mov
mov
lock
mov
ret
jg
add
push
das
add
push
scas
inc
cmp
or
pop
sub
lods
arpl
aam
pop
jae
ret
jecxz
pmulhw
inc
aas
mov
addr16
xchg
out
call
es
and
aaa
jmp
add
outsl
jecxz
mov
sti
mov
scas
push
int
push
xor
mov
and
daa
into
sbb
fsts
mov
xor
mov
shlb
add
pop
sti
nop
out
inc
mov
cmp
enter
arpl
notb
pop
mov
int3
add
fnstcw
push
aam
pop
test
jns
jae
sbb
fildl
mov
lahf
subl
stos
cmc
sbb
add
insb
cmpsb
jp
shlb
scas
mov
jp
jg
stos
lahf
adc
icebp
push
cmpsl
sbb
fcoms
dec
add
sub
negb
xchg
loop
bound
pusha
mov
stos
jecxz
testl
data16
mov
mov
testb
sahf
xor
out
idivw
sahf
daa
push
adcl
in
test
mov
std
or
pop
mov
mov
mov
mov
mov
inc
in
mov
cmpl
jge
outsl
outsb
or
mov
pop
repz
mov
pop
repnz
jle
mov
mov
pop
loopne
lods
pop
cmp
mov
loope
adc
adcl
mov
jns
fcoml
sub
mov
bound
shrb
je
mov
mov
jne
inc
fsubp
mov
adcb
pop
mov
or
aam
fs
pop
adc
and
fdivrs
outsl
push
leave
pusha
cmp
adcl
or
or
mov
push
mov
cmc
mov
xor
pop
mov
sub
adc
lods
rcrb
imul
mov
pop
push
jbe
addr16
int
inc
lret
xor
aad
xchg
repnz
mov
push
mov
mov
mov
subl
cltd
hlt
dec
ror
mov
scas
scas
andl
jge
mov
ret
xchg
cmp
jecxz
jne
mov
fcompl
mov
jmp
mov
shll
imul
lds
mov
popf
push
xchg
clc
push
out
movsb
mov
pop
jno
outsl
ljmp
andl
sbb
push
cmp
pop
out
cmp
add
shll
mov
ret
mov
stos
loope
clc
cltd
int3
mov
sbb
push
in
xlat
sub
adc
pusha
fnstsw
lret
pusha
aas
loope
fstpt
clc
jg
insl
jnp
pop
cli
xchg
dec
out
testb
mov
cmpsb
sub
aad
dec
and
sub
xor
movsb
add
nop
push
dec
lret
imul
shll
daa
cwtl
or
add
sub
mov
pop
dec
rorl
add
sub
sub
test
negb
imul
lods
xchg
cli
mov
mov
test
mov
jecxz
lcall
push
inc
sbb
add
inc
mov
jmp
pop
or
nop
sub
sbb
mov
aad
scas
repz
les
cmp
jle
iret
fstpt
frstor
add
pop
push
ficoms
or
mov
fdivrl
pop
xchg
add
mov
cwtl
sub
and
js
sub
mov
cli
mov
sarb
fldcw
pop
enter
xchg
adc
das
mov
push
push
xor
outsb
outsl
jnp
and
iret
popa
movsl
mov
mov
imul
sbb
outsl
and
dec
sub
arpl
dec
mov
out
adc
sub
in
dec
mov
inc
cs
fidivrl
pushl
mov
xchg
arpl
adc
mov
sub
mov
xchg
pop
scas
mov
stos
jne
sbb
mov
sub
mov
mov
test
sbb
xchg
mov
dec
push
xchg
icebp
nop
add
push
or
imul
push
inc
sub
mov
jmp
dec
sti
pop
jle
js
into
jnp
stos
stc
out
xchg
lock
sbb
or
lds
xchg
or
repz
ljmp
mov
movsb
movl
loop
push
test
pusha
xchg
int3
fs
jns
out
jmp
das
cmp
iret
psrlw
push
fsubrl
stc
xchg
cmp
fcmovb
adc
rcrb
imul
xlat
xchg
pop
mov
mov
dec
or
sarb
add
push
je
mov
fadd
int
out
fs
sbb
push
imul
inc
or
imul
shrl
adc
or
cmp
ret
jb
cltd
or
out
lds
xchg
mov
sti
xchg
daa
or
sbb
xchg
pop
cmp
shr
and
stos
inc
dec
inc
sahf
and
jns
push
mov
mov
jle
stos
jb
mov
je
pop
out
or
adc
daa
cli
xchg
xor
adc
lcall
sub
hlt
xchg
xchg
sarl
inc
or
stc
test
mov
inc
add
pop
mov
sarl
sbb
dec
sbb
sysexit
mov
dec
jmp
hlt
dec
mov
add
add
sub
mov
popf
cld
outsb
and
mov
fwait
sti
call
repnz
jecxz
popa
out
inc
mov
leave
push
pop
lahf
cmpsb
push
sbb
and
mov
add
cmp
xorl
sarl
std
pop
ja
sbb
sbb
ljmp
or
mov
add
cs
sub
jb
arpl
xchg
cmp
ret
pop
int
pop
fs
dec
das
xchg
xchg
aaa
mov
mov
vmread
cld
jae
jge
sbb
sub
cltd
sub
xchg
mov
pop
pushf
rclb
shl
lods
lds
xchg
jb
cmp
arpl
pop
xchg
jl
xchg
test
adc
cmp
dec
push
inc
inc
add
pushl
ret
fldt
adc
mov
jbe
mov
xchg
add
cmp
sub
rorb
xchg
push
movsl
mov
aad
clc
xchg
pop
cmp
repnz
inc
push
xor
inc
cmp
adc
push
add
and
hlt
and
into
movsb
adc
push
cmp
jmp
lds
fmuls
fs
xchg
sub
mov
leave
test
dec
ss
movsl
xchg
sbb
xchg
and
ret
lahf
or
or
xor
les
adc
fs
movsl
adc
push
or
or
dec
out
jle
insl
push
xor
imul
push
xchg
xchg
sub
mov
and
xchg
inc
loope
inc
push
add
and
out
pop
je
in
sarb
int
shl
push
mov
add
push
loop
sbbl
loope
and
cmc
cltd
cmp
shlb
aad
sbb
loopne
stc
or
sub
rorl
mov
xor
test
cmpsb
fsubrp
mov
aam
inc
aaa
rep
movsl
in
repnz
fisttpll
js
mov
mov
push
les
mov
stos
stos
sbb
dec
inc
data16
bound
pop
test
jge
mov
inc
cmp
fldenv
hlt
xchg
fsubl
fsubrl
cmp
push
pusha
xlat
inc
cmpsb
push
mov
in
xchg
rcr
sbb
jb
les
lods
lods
cli
lret
push
and
leave
push
add
push
cwtl
and
fwait
mov
test
std
or
or
push
mov
pop
inc
cmpsb
rorb
cmpsb
and
cmp
ss
int
dec
sbb
mov
cmp
sti
inc
inc
imul
mov
lret
cmp
into
sarb
mov
mov
and
mov
ret
mov
out
push
xchg
lret
cmp
jmp
stos
xor
cli
daa
push
xchg
sub
push
mov
dec
add
sub
mov
int
cmp
lahf
lods
xor
mov
push
push
mov
pop
loope
bound
test
aas
jnp
jecxz
pushf
mov
js
lret
aas
mov
jg
jo
js
sub
ret
and
std
dec
mov
push
test
mov
addr16
adc
hlt
add
repnz
insb
div
mov
dec
adc
mov
mov
mov
outsl
adc
mov
mov
lahf
sbb
cld
push
icebp
dec
inc
push
outsl
cmp
call
adc
or
mov
imul
mov
jle
dec
xchg
jmp
inc
adc
jmp
or
call
or
mov
cs
push
adc
insb
test
cmp
jnp
sbb
lret
add
jp
push
or
dec
mov
lea
pop
int3
dec
loope
xlat
lds
in
jecxz
insl
ret
pop
lahf
mov
jns
cld
pop
dec
gs
xchg
dec
sbb
add
out
fsubl
test
call
sbbb
idiv
or
xchg
pop
dec
push
adc
xorb
outsb
cs
push
pushf
lret
cld
int
dec
mov
test
pop
pop
out
xchg
fnstenv
cmp
insl
enter
cmp
loope
je
in
iret
jp
jae
jle
js
js
into
jge
jle
out
xchg
mov
jmp
mov
popa
add
call
add
adc
cmc
mov
jl
rcrl
data16
or
inc
adc
pushf
fs
adc
lds
pop
cmc
dec
cltd
shrl
stc
movsb
in
mov
ret
pop
in
stos
xchg
sbb
in
mov
int
add
jbe
test
repz
xchg
cltd
mov
jne
pop
fldl
cmpl
mov
call
jmp
scas
inc
inc
and
add
popa
js
iret
mov
mov
cmp
jno
lret
addr16
mov
mov
clc
or
mov
xor
out
inc
arpl
iret
lcall
outsb
inc
push
gs
xor
add
fsubl
addr16
int
fdivr
test
xor
fidivs
addr16
push
dec
lret
inc
frstor
push
push
sbb
cmpsb
sub
cmp
jecxz
iret
push
in
je
pmullw
push
outsl
loope
int
xchg
movsb
xor
xchg
pop
iret
call
pop
fisubl
mov
aaa
iret
movd
pop
out
test
push
ret
adc
adc
xor
inc
fisubl
push
xchg
sti
jp
fwait
push
xor
cmp
fs
in
or
cwtl
cmp
insl
mov
aad
pop
xchg
mov
add
je
aas
sbb
xor
add
mov
or
add
xor
cltd
mov
sbb
fimuls
inc
scas
pop
adc
adc
popf
push
in
ljmp
and
aas
inc
or
xor
adc
movsl
adc
and
sub
pop
add
int
lcall
pusha
add
dec
lods
mov
fnstenv
filds
cmp
cld
dec
je
mov
data16
add
mov
sahf
cmc
cmp
arpl
and
sbbb
push
repz
fildl
adcb
pop
ja
lock
cmp
mov
mov
out
scas
mov
das
jo
dec
push
jg
aam
lret
nop
sbb
xchg
scas
rcrb
paddb
cmp
scas
xlat
mov
xlat
push
xor
shll
xor
fsubs
shrb
xor
cmp
out
fadds
repnz
hlt
mov
adc
rorl
cli
shl
mov
int
fstpl
add
push
fstpt
jg
mov
xor
adc
mov
and
jp
jne
add
mov
push
and
nop
sbb
lods
jmp
aas
sub
pop
js
inc
out
shlb
mov
adc
jmp
xor
mulb
in
jnp
jg
mov
pop
das
mov
pop
dec
shl
mov
sbb
push
movsb
mov
dec
das
cli
hlt
push
stos
add
fnstenvs
sbb
int
pop
cmp
andps
incl
ds
shrb
cld
mov
jp
rcrb
mov
pop
jge
inc
dec
dec
pop
mov
ds
sbb
bound
aaa
imul
sub
cmpsl
jne
dec
pop
aam
jle
test
xor
xchg
dec
or
out
shl
lret
in
stos
and
inc
lock
add
subl
dec
sub
and
jle
sbb
jmp
subl
roll
addb
divb
xchg
cmpsb
adcb
mov
nop
mov
out
in
push
lret
mov
popa
clc
add
adc
movsl
jg
add
sbb
jae
xor
push
mov
es
pop
jns
adc
aas
adc
and
insb
aas
xor
lds
out
pop
or
sti
add
xchg
mov
cmp
out
js
add
ffreep
sub
add
test
lods
ja
dec
mov
in
inc
push
adc
out
scas
sahf
lock
mov
mov
out
push
xchg
dec
insl
push
test
inc
pop
mov
pop
stos
cmc
pushf
cli
cmp
jae
or
lea
push
push
xchg
ret
out
mov
in
push
bound
mov
push
and
inc
adc
inc
stos
mov
dec
dec
bound
loope
mov
or
subl
adc
push
mov
stc
imul
stc
cmpsb
jo
jmp
cmp
sahf
pop
sarl
out
push
nop
inc
gs
push
lock
cmp
xchg
int
repz
push
pop
fbstp
mov
out
fnstenv
pop
aaa
stc
cwtl
jbe
xor
int
mov
inc
xlat
xchg
rcll
lds
orb
add
nop
adc
mov
cmp
stos
push
rcrb
aas
dec
stc
jecxz
arpl
movhlps
pop
mov
inc
pop
xchg
mov
scas
int
or
jnp
add
mov
enter
adc
ljmp
inc
gs
shll
in
lods
fs
in
inc
in
push
inc
push
test
adc
push
adc
test
stos
scas
jle
js
gs
mov
push
ds
idivl
jbe
mulb
outsl
cmp
sub
iret
push
fists
sti
mov
sbb
cmp
cmp
je
pusha
in
jp
in
notl
mov
shrb
inc
mov
les
movsb
outsb
outsl
push
stc
rcll
adc
push
xchg
insl
ja
adc
pop
push
xor
mov
jnp
popa
jnp
adc
jb
mov
cmp
mov
movsl
shlb
pop
jl
dec
je
nop
xor
clc
jo
dec
pop
cmc
push
clc
jnp
lahf
in
mov
jns
push
scas
sbbb
cld
test
imulb
fbld
fldt
fwait
cwtl
adc
sbb
mov
and
dec
mov
fisttpll
int
cmpsl
lds
lods
cmc
and
or
icebp
xorb
xchg
add
movsb
stos
sbb
cmpsl
and
inc
push
int3
rcrb
adc
pushf
mov
pop
shrl
adc
imul
loopne
outsl
cmp
push
pop
pop
sar
das
fcompl
lret
daa
xorb
dec
movd
hlt
lods
ds
push
rcrb
jbe
scas
loop
mov
negl
adc
cmp
inc
push
jle
movsb
pop
or
sub
enter
jg
or
or
das
jl
in
sub
flds
push
inc
add
mov
daa
mov
ud0
fistps
in
pusha
ret
sahf
adc
int3
arpl
xor
sub
pop
sub
dec
pop
pop
sbb
pop
add
pop
mov
mov
inc
push
je
inc
xchg
jecxz
les
adc
jecxz
rcll
cmpsb
cmp
mov
push
pop
outsb
or
or
loopne
or
sarl
jns
inc
shrb
lret
xor
leave
int3
icebp
adc
pop
stc
loope
jb
fwait
dec
nop
xlat
inc
aaa
nop
cmpsb
stc
mov
pusha
push
mov
fwait
cmp
xchg
lcall
outsl
sti
jno
push
add
fdivs
mov
fisubrl
push
inc
dec
cli
or
fnsave
cs
add
gs
js
adc
jno
call
aaa
in
subl
xchg
mov
push
aas
mov
std
pop
loope
call
popa
enter
mov
mov
out
xor
frstor
push
xchg
cmp
mov
popf
mov
mov
inc
inc
xor
adcl
popf
bound
and
loop
insb
enter
popa
sbb
sahf
fistl
mov
or
lock
xor
push
xlat
dec
test
insb
idivl
dec
cmp
fdivrp
inc
pop
and
pop
xor
cld
ror
adc
aam
sub
xlat
scas
mov
cmp
insl
fsubs
testl
push
cmc
stc
pop
sbb
lahf
fmull
xor
xchg
push
sbb
add
testl
cmp
aam
fdiv
jl
pop
pop
testb
cmp
and
xor
mov
arpl
pop
mov
stc
jne
setb
ret
rep
cmp
sub
pop
in
fimull
clc
mov
arpl
cld
xchg
mov
stos
add
mov
push
aas
adc
xor
vmread
mov
cld
test
imul
and
clc
mov
ret
xchg
mov
mov
ror
mov
mov
mov
mov
test
push
adc
jge
mov
sbb
cmp
in
fsts
xor
and
pop
inc
call
sub
or
movsb
or
jmp
mov
lock
and
shl
xchg
pop
xor
shl
pop
iret
mov
jl
cmp
lock
scas
xor
or
push
pop
out
andl
mov
sbb
mov
enter
jnp
sbb
inc
fldt
mov
mov
inc
je
outsb
cwtl
dec
push
inc
in
pop
in
lods
sbbb
mov
out
sub
aaa
cltd
xor
push
adc
xchg
hlt
xchg
pop
xchg
das
push
push
js
nop
jne
mov
push
mov
xor
fs
mov
bound
cmpsb
mov
mov
loope
imul
popf
mov
outsb
movsl
subb
pop
in
int
stc
shrb
fmul
dec
ds
int
xchg
sub
ret
lcall
sbb
push
leave
jl
sti
sbbb
mov
fwait
int
jmp
out
jo
or
pop
xchg
or
cs
jbe
aaa
dec
jecxz
je
mov
popf
adc
cmp
sbb
movsl
inc
xor
dec
int
test
adc
mov
xchg
fistpl
das
inc
xor
nop
out
inc
mov
push
mov
imulb
mov
cmp
pop
scas
mov
repz
ret
negl
jmp
lds
add
jl
adc
loop
fnsave
pusha
aaa
adc
inc
test
sbbb
jecxz
push
xor
push
mov
scas
out
inc
add
pop
cmp
inc
jbe
mov
into
daa
xor
subl
ss
mov
out
movsl
push
fnsave
je
je
xchg
xor
test
mov
mov
jg
ret
mov
mov
adc
testb
mov
filds
dec
and
test
movsb
addr16
xlat
insb
outsb
jmp
addr16
stos
mov
shrl
jp
push
inc
jle
mov
or
add
movsb
sbb
imul
lds
stc
not
pusha
pop
in
shll
repnz
add
das
xor
insl
jmp
shl
push
mov
sub
mov
sahf
inc
fildl
adc
out
xchg
adc
movsb
adc
imul
push
mov
jge
lods
dec
push
test
or
or
stc
push
pop
das
ljmp
push
lahf
cmp
das
or
inc
test
pop
frstor
xchg
sub
jle
jl
pop
divl
movsl
cli
popa
icebp
mov
lea
mov
frstor
rcl
fidivs
lret
fldcw
icebp
fmulp
mov
fwait
xor
lds
dec
xsave
dec
mov
cmp
jge
push
stos
dec
inc
jnp
pop
cmpsb
movsl
push
in
cmp
fsts
mov
push
mov
subb
outsb
int3
fadd
xchg
mov
arpl
mov
dec
dec
repnz
jb
or
pop
jge
icebp
test
xchg
testb
mov
shll
dec
mov
mov
test
addl
or
or
fsubrs
cmp
mov
loop
sub
ret
int
jp
pushl
cmpsb
les
aam
icebp
cmp
add
jge
sbb
repnz
stc
or
movsb
testl
mov
shl
xlat
fsubp
cmp
push
cmpsb
adc
and
pop
in
jle
mov
repz
push
cltd
jle
xor
mov
jg
mov
ljmp
jns
arpl
movsl
lahf
mov
cmp
inc
sti
icebp
cs
sbb
in
popf
and
gs
jo
cmp
xor
cmpsb
icebp
pop
pusha
mov
dec
jg
rol
lods
jmp
pop
in
sbbl
loope
cmpsb
fwait
push
lods
inc
aad
repnz
mov
shll
lds
adc
cltd
pop
lret
inc
cltd
xor
fdivs
ljmp
push
insl
enter
mov
faddl
out
add
push
sbb
adc
xor
mov
into
fisubrs
inc
pop
fildll
loop
int3
and
shlb
pop
int3
loop
cwtl
push
add
into
in
lret
xchg
mov
scas
and
out
stc
dec
dec
or
in
jns
data16
sbb
xor
outsl
fwait
sub
jb
inc
movsl
push
add
push
into
fcompl
xor
das
xchg
mov
adc
mov
std
jge
loopne
dec
pushf
std
mov
inc
cli
dec
fwait
mov
imul
lret
gs
push
lahf
stc
sbb
push
mov
pop
jo
jmp
outsl
adc
push
movsl
inc
je
imul
push
mov
test
inc
add
dec
lcall
xchg
lods
inc
loopne
sbb
fs
fucomp
test
mov
add
rolb
add
aam
ja
cwtl
stos
xchg
mov
stos
add
mov
out
iret
pop
sbb
mov
mov
sub
sub
inc
cmp
push
xlat
je
xchg
ss
enter
imul
cmp
xchg
rcrl
iret
mov
or
sub
out
les
mov
scas
sub
icebp
movhps
add
dec
in
iret
pop
je
insb
insb
shlb
or
adc
mov
gs
fsubl
test
add
icebp
std
xchg
mov
adc
jno
and
dec
scas
imul
sub
shrl
xchg
sbb
outsb
dec
shr
sub
mov
pusha
orb
rol
add
hlt
dec
sub
pop
mov
lahf
sub
ret
pop
jecxz
jle
inc
mov
dec
push
jmp
nop
repz
imul
dec
push
sub
in
cwtl
mov
pop
push
out
sub
cld
dec
cmp
or
scas
pop
push
push
dec
fsubr
cmp
sub
adc
rol
jg
or
stos
decb
xor
push
push
jne
scas
loope
into
scas
adc
mov
popa
lods
jo
fwait
test
mov
fidivs
jo
jb
sahf
push
dec
mov
mov
sub
pushf
dec
nop
int3
test
ja
leave
in
ja
cmp
push
add
pop
push
inc
pop
mov
pop
out
idivb
push
pop
mov
mov
cmp
lret
mov
mov
lahf
mov
loop
mov
aam
filds
repnz
sbb
lret
fstps
mov
int3
or
adc
sub
mov
xorb
mov
les
idivl
aas
shr
push
mov
mov
icebp
mov
jecxz
cmp
shrl
inc
sub
scas
xor
pusha
rorl
insb
jnp
loope
nop
pop
dec
mov
mov
jecxz
and
xor
mov
repz
cmp
push
mov
in
mov
mov
jbe
fst
dec
stos
mov
or
sub
add
xor
dec
lods
push
jo
insb
mov
inc
sar
adc
xchg
xchg
imul
es
sub
lea
pop
mov
fstps
xchg
int
imul
sub
push
jcxz
sub
push
sbb
xchg
jl
xchg
add
movsl
push
or
shrl
and
cwtl
cmp
cwtl
insb
mov
loopne
mov
lcall
shrl
push
jmp
or
mov
jno
and
jle
mov
in
xchg
and
and
fistl
mov
push
divl
cmp
and
movsl
adc
and
shrl
or
rcrb
or
outsl
enter
dec
outsb
les
pop
push
movsl
mov
negb
imul
sbb
out
xlat
sub
subb
imul
andl
dec
jg
jecxz
and
stos
or
or
popf
pusha
mov
push
mov
scas
rorb
loope
lcall
mov
and
test
lods
sub
adc
dec
push
xchg
cmc
push
loopne
fidivrl
cmpsb
ja
mov
bound
sub
lods
sbb
xchg
pop
add
push
repz
scas
out
mov
push
dec
cmp
ss
shll
mov
aad
push
add
push
jno
test
pop
mov
aam
decl
into
mov
pusha
enter
int3
add
or
jae
mov
lret
out
xorl
mov
mov
aam
lahf
stos
inc
adc
idiv
xchg
add
pop
xor
pop
mov
dec
aam
les
push
sahf
test
cs
cmp
int3
jmp
cmp
mov
pop
ja
repnz
push
pop
adc
cli
inc
mov
out
inc
mov
or
cmpsl
fcomps
pop
icebp
jg
inc
mov
insl
js
xor
arpl
out
jmp
and
test
cmpsl
notb
aad
fsubrs
jne
sub
and
fistps
daa
xchg
mov
cmpsl
add
lock
sahf
fcoml
lds
imul
fwait
mov
pop
mov
dec
lds
cmp
mov
aas
pushf
cltd
push
or
sarl
xchg
shll
loopne
jecxz
movb
out
adc
loop
sub
outsb
leave
int
lods
mov
loop
inc
pusha
push
insl
stos
jmp
pop
adc
push
out
xchg
xor
lock
jae
push
movsl
ficoms
test
mov
mov
pop
imul
aaa
cltd
repnz
repz
insl
sub
into
imul
xor
in
dec
push
iret
arpl
jle
daa
xchg
inc
ret
add
clc
pop
addb
mov
je
mov
jnp
xchg
and
adc
or
lret
sti
cmpb
xchg
inc
lods
addr16
rolb
test
js
xchg
push
shll
or
rcll
es
sbb
add
mov
adc
out
jb
jne
pop
arpl
xchg
add
sub
xlat
jbe
orb
xor
fcomip
or
jbe
adc
fwait
sbb
mov
lods
pop
and
in
xor
jmp
cmpsl
loope
fmulp
jmp
jmp
leave
cmp
mov
add
roll
and
mov
dec
sub
sub
jl
push
cltd
clc
pop
aad
cmp
push
cmp
mov
movsb
add
sbb
xorb
sbb
pop
scas
mov
movsl
push
jno
push
lret
repz
imul
ljmp
addr16
int3
dec
mov
dec
out
daa
pop
inc
arpl
jl
loope
and
andb
in
ljmp
mov
repnz
jmp
add
out
js
jg
cmp
mov
je
adc
mov
push
add
in
jecxz
cmp
imul
dec
pop
xor
mov
push
cwtl
mov
inc
mov
out
jae
mov
lahf
test
inc
or
ret
shll
pop
data16
lods
jmp
test
out
lea
js
mov
sbb
sub
xor
int
aas
cmp
jle
adc
mov
orb
emms
push
push
mov
push
xchg
dec
test
mov
negb
clc
or
add
sbb
xor
hlt
cmp
and
fdivrl
push
or
std
cmp
adc
mov
mov
loopne
xor
pop
sbb
cmp
pop
ret
push
out
push
gs
xor
mov
xor
push
sbbb
jno
test
clc
shl
adc
mov
mov
mov
aam
cmp
sub
mov
scas
pop
or
cltd
adc
or
test
adc
mov
add
jmp
pop
add
or
inc
fdivp
jnp
dec
pop
and
adc
add
shrb
lret
repz
addr16
adc
aad
insl
loopne
jp
gs
fs
ljmp
xor
cmpsl
pop
inc
fmuls
cmpsb
pop
stc
xlat
xor
mov
push
stos
or
adc
aam
or
push
add
dec
lea
test
leave
xlat
aas
inc
gs
mov
fnstenv
fildll
out
fcompl
out
ret
std
xor
inc
xchg
mov
sbb
shll
fcomps
lcall
in
pop
fdivl
movsl
mov
push
sub
cmp
test
adc
mov
mov
mov
arpl
sub
sub
cmp
mov
ret
push
xchg
mov
movsl
pop
in
in
xchg
lret
cmp
pop
jne
int
or
jle
inc
dec
mov
in
outsl
outsb
pop
mov
push
cli
cmc
aam
arpl
mov
xchg
pusha
ljmp
movq
push
pushf
jbe
jg
ss
pushf
dec
aas
imul
enter
lret
gs
sub
test
in
add
lahf
sbb
mov
shrb
push
dec
pop
mov
sub
stos
fwait
and
adc
int
pop
inc
and
sbbl
stos
dec
test
dec
outsb
pop
out
push
out
or
sub
sub
movsb
sub
or
negb
cmp
add
add
cmc
sub
pop
pop
push
mov
neg
pop
cmpsb
adc
out
outsb
and
jb
xlat
jmp
aas
push
lahf
fidivs
jne
cwtl
arpl
fsubrl
pop
ss
pop
xor
sahf
das
repnz
jo
add
inc
push
cltd
test
xor
je
out
inc
mov
xlat
push
lock
xchg
sub
in
xor
jmp
lret
mov
and
adc
aam
subl
or
lret
fcomps
fdivl
or
mov
inc
inc
mov
gs
iret
sbb
lock
ljmp
aaa
enter
imul
adc
xchg
aaa
inc
pop
mov
cmp
mov
or
pop
pop
xor
mov
in
rcll
xchg
xor
jnp
test
cmp
mov
pop
push
fstps
ljmp
pop
shrb
nop
subb
inc
cltd
inc
bound
fsubp
ja
and
rclb
jnp
cmc
xchg
fdivrl
mov
xchg
inc
add
mov
dec
call
mov
sub
or
sub
sbb
sbb
out
imul
inc
imul
mov
lret
daa
push
outsb
out
push
inc
pop
adc
push
dec
sbb
insb
or
jnp
sub
inc
inc
mov
fstpt
adc
pause
xchg
mov
out
movsb
dec
das
adc
sahf
js
xchg
imul
imul
pop
jge
mov
int3
inc
pop
xor
cmp
adc
lods
mov
cli
push
insl
sub
sub
pop
mov
pushf
movsb
ret
addr16
stos
sahf
jno
imull
call
adc
cs
pop
xor
add
push
outsl
sti
xchg
sub
xchg
fbstp
sbb
cld
and
ret
push
sahf
in
jbe
push
and
mov
fsubs
clc
inc
int
cmpl
push
mov
jl
sub
or
das
lret
movb
or
rcrl
sbb
sar
lds
aam
or
pop
mov
xchg
iret
shrl
insb
inc
cli
dec
pop
lock
sbb
and
adc
xor
add
faddl
adc
pop
sar
mov
xchg
repnz
mov
imul
add
clc
mov
sub
dec
sarl
ret
js
ret
cltd
jecxz
stc
lahf
fidivl
sahf
or
fadds
dec
loop
loopne
stos
cmc
aaa
stc
fcoml
xorb
test
in
fwait
mov
je
cmp
push
xchg
adc
sbb
bound
arpl
jno
pcmpgtb
jae
jle
js
lret
jge
sbb
cmp
jo
mov
loope
cmp
loope
mov
fbstp
adc
push
push
fcoml
hlt
mov
mov
jae
mov
pop
sbb
or
pop
and
lea
shlb
xchg
mov
pop
and
cmp
sub
pop
or
pop
fisubl
mov
xchg
insl
movsb
xor
sbb
add
inc
test
test
inc
sub
fildl
cltd
fildll
rol
xor
aas
arpl
stc
add
xchg
xchg
add
jg
pop
es
sub
jg
mov
push
pop
add
xor
pop
ja
inc
sbb
rolb
imul
outsb
fdivs
idivb
clc
adc
lods
iret
cli
daa
add
jb
or
scas
call
pusha
jl
ss
sti
mov
cli
cmp
and
icebp
sbb
repnz
stos
shlb
xchg
jb
scas
inc
cmp
jb
stos
push
xchg
add
adc
dec
dec
movsl
arpl
mov
dec
cmp
je
xchg
mov
aas
fucomip
pop
in
add
and
sub
xor
mov
add
sub
pop
pop
movsl
xchg
mov
push
add
sti
dec
inc
xlat
xor
cwtd
test
xchg
cltd
mov
aam
ret
loopne
sub
rol
mov
lods
scas
xchg
mov
daa
fcoms
ss
pusha
ss
jns
jp
push
in
hlt
in
mov
fsubs
punpckldq
jle
sub
repz
adc
mov
rolb
mov
cs
lods
pop
push
roll
mov
mov
dec
rorl
faddp
call
mov
xchg
jns
pop
lock
sbb
fsubrs
dec
pop
or
xor
xchg
lock
push
jmp
leave
push
jb
dec
pushf
ret
jb
and
test
int3
jge
or
dec
pop
xor
xor
fldcw
fidivs
and
das
jecxz
aad
stos
inc
jns
mov
push
lret
mov
int3
imul
push
out
push
jae
ret
xchg
les
cltd
push
shrb
mov
into
xchg
pusha
es
cmp
xlat
and
push
dec
push
push
sbb
pop
ret
pop
dec
and
mov
fsubrs
jne
dec
incl
into
mov
mov
lret
lret
in
xchg
mov
je
pusha
sub
sbb
pop
fstpl
mov
shlb
mulb
sub
push
and
mov
lds
pop
cmp
inc
cmp
bound
inc
in
dec
mov
jns
notb
xor
mov
jmp
stos
mov
dec
cmpsb
in
repz
out
lahf
and
arpl
into
out
cmp
scas
jb
fcomps
mov
pop
imul
ss
cmp
mov
adc
repnz
and
pop
fadds
repz
shrb
jle
pop
shlb
mov
fidivl
loopne
push
mov
stos
add
lret
adcl
rorb
rcl
inc
repnz
mov
xor
xor
fldenv
add
jns
sbb
fmul
daa
mov
jbe
imul
nop
jmp
sub
ret
inc
jno
add
lods
jge
mov
je
mov
adc
xor
negb
aam
jecxz
or
pushf
fcoms
mov
xor
lods
cmp
sub
movl
cmp
sti
aad
sbb
test
push
push
dec
push
xor
iret
cli
subb
not
lret
lret
dec
inc
sti
mov
lahf
loopne
mov
rcrb
sub
xchg
mov
mov
or
es
les
repz
xor
out
pop
add
outsl
stc
add
jbe
mov
imul
inc
xlat
cmpsl
dec
sbb
add
jle
cld
and
lret
cmp
mov
ret
pop
xchg
sub
test
stos
mov
rclb
addl
xchg
add
mov
mov
out
cs
cs
cli
lret
repnz
ljmp
test
in
ret
fs
pop
sub
xchg
mov
dec
bound
mov
es
es
or
shrb
loop
movsl
add
std
aaa
lock
dec
mov
dec
mov
shrb
mov
sub
rcl
cmp
gs
addr16
adc
inc
imul
pusha
mov
xorb
mov
adc
or
jnp
push
sbb
mov
pop
xchg
movsb
push
imul
mov
inc
adc
jb
mov
inc
xchg
mov
or
out
sbb
jo
out
mov
scas
arpl
xor
mov
repnz
mov
pop
xlat
xor
or
sub
inc
sti
and
add
sbb
out
mov
inc
ljmp
pop
arpl
push
popl
gs
insl
sbb
loope
push
shlb
fs
inc
in
sahf
mov
cmp
dec
test
int
mov
mov
cmp
mov
mov
xor
popf
fs
push
dec
shlb
mov
jecxz
not
imul
add
imul
popa
scas
aad
xchg
rorb
xchg
xlat
push
bnd
je
std
movsl
decl
jb
rcl
xchg
add
mov
or
test
pop
mov
loopne
ret
pusha
loope
gs
mov
test
and
fdivs
imul
ss
cmp
sub
ret
mov
sub
add
stos
inc
mov
fistpll
inc
movsl
mov
pop
xchg
inc
int
mov
insl
add
dec
push
pop
xchg
cmc
insb
enter
cmp
mov
icebp
cmpsb
popa
jmp
pusha
dec
test
mov
inc
je
mov
inc
mov
or
ret
push
push
orl
popf
aaa
fsubrp
push
mov
and
dec
jmp
mov
cmp
jne
push
and
je
sarb
inc
mov
lahf
testb
pop
ss
lahf
je
and
insb
cld
jae
or
pop
pop
dec
dec
or
xchg
cmpsl
mov
pop
aad
fs
icebp
mov
pop
pop
negb
jbe
cmpsl
dec
and
gs
mov
sub
in
subl
shr
ret
repz
fs
into
loope
add
jle
push
imul
xor
mov
ja
and
into
cmpsl
cmp
pmulhw
adc
movsl
lret
and
into
xor
mov
cmc
inc
pushf
scas
in
sub
dec
mov
push
test
fnstenv
pusha
inc
mov
in
mov
es
iret
imul
movsl
push
dec
loopne
mov
ret
sbb
mov
xlat
cmc
jle
sahf
xchg
dec
cmpsl
push
divb
jle
or
add
xchg
icebp
jge
aaa
push
rorb
subl
adc
sbb
add
repz
xor
xorb
mov
push
sub
push
icebp
cmp
js
clc
xchg
xor
fldenv
in
test
adc
jl
mov
sti
clc
mov
sub
fcmovb
in
scas
jb
add
repz
outsb
sbb
aam
nop
dec
shlb
aas
shll
mov
pop
cmp
mov
add
push
loope
pop
shll
cltd
push
dec
sub
inc
stos
ret
and
scas
push
or
iret
into
jge
push
stos
sub
push
fisubrl
mov
adc
sub
das
sbb
mov
subl
mov
aam
cmp
adc
out
cmp
pop
xchg
fbstp
ss
loope
cmc
cmpsb
rol
call
aam
mov
pop
fadd
xchg
mov
inc
mov
mov
ret
dec
gs
sbb
jb
push
mov
inc
das
and
sbb
andb
repz
and
sub
dec
lds
add
fs
fcoms
adc
dec
push
rcrl
fcmovne
mov
daa
xor
bnd
mov
and
and
sahf
leave
sbb
es
xlat
in
cmp
popa
cmp
add
sbb
cmc
mov
in
inc
pop
iret
inc
lret
imul
inc
lock
xchg
and
mov
lods
push
xchg
cmp
setne
cwtl
js
aas
jno
or
pop
jecxz
lcall
jmp
or
sbb
fucomi
das
or
shr
jo
lret
mov
mov
xor
les
push
out
test
out
repz
mov
sbb
jnp
cli
jl
mov
jae
ss
repnz
stc
pop
add
mov
and
cli
loopne
mov
sbb
shll
dec
adc
or
jno
test
push
lock
negl
or
daa
lcall
cmp
filds
lea
inc
adc
mov
sub
sarb
ret
lret
bound
cltd
sbb
fadds
mov
push
mov
je
pop
icebp
mov
mov
xchg
push
daa
inc
lret
and
scas
sbbb
sub
add
loopne
imul
sbb
imul
adc
jne
jns
cltd
pusha
aad
mov
and
jbe
rolb
fdivl
stos
daa
sarb
cld
fsubr
pop
in
test
dec
cld
test
xor
jb
lret
loope
pushf
das
adc
pop
or
jnp
sbb
inc
jns
jbe
cmp
jae
popf
sub
inc
out
cmp
push
loopne
mov
lock
or
mov
mov
mov
fmuls
sub
sub
or
popf
lods
jne
push
xor
jb
cmp
test
jae
mov
xchg
sti
push
mov
mov
nop
dec
xchg
scas
test
sbb
fsubrp
push
sbb
mov
xor
xlat
pop
stos
clc
rcrb
xchg
rclb
test
out
cmp
leave
inc
rclb
inc
enter
shrl
sbb
push
inc
dec
lods
imul
xchg
icebp
jge
xor
mov
dec
or
aad
sbb
push
dec
mov
cmp
addr16
cmpsb
jl
leave
shrb
push
pop
cs
stos
fdiv
dec
sbb
movl
cmp
inc
pop
popf
sbb
pop
dec
out
pushf
jae
loope
ja
cmpsl
test
daa
sbb
jbe
jae
and
mov
sahf
sarl
cmp
mov
fs
fs
cli
sarl
sbb
aas
mov
shll
cmp
fs
popf
sub
popf
imull
icebp
xchg
inc
addl
bound
xor
mov
xor
das
lret
add
sub
dec
and
dec
and
xchg
stos
inc
jb
inc
aad
leave
lahf
xchg
cli
ds
cmpsb
leave
mov
mov
mov
out
shl
xchg
daa
int
fadd
je
mov
imul
pop
jl
pop
lahf
leave
mov
cld
out
mov
pop
test
stc
adc
fcomi
fnsave
scas
mov
add
add
int
dec
ljmp
cmc
test
addl
xor
outsb
mov
inc
jl
jmp
ja
mov
pop
movsb
dec
jecxz
add
push
xor
lahf
lcall
mov
xor
cmp
in
fdivrs
int3
fldenv
push
mov
in
dec
test
cli
sub
push
outsl
jge
xchg
pop
pop
mov
jae
js
cmp
test
sbb
pop
in
jmp
inc
add
addr16
mov
in
jmp
imul
sub
pop
push
fsubrl
mov
loope
inc
subl
inc
loopne
aaa
mov
jp
pushf
movsl
mov
jge
popa
fwait
mov
jno
mov
xchg
aad
mov
subl
mov
fidivl
jp
xchg
push
jmp
stos
cld
sbb
jb
cli
jle
out
sub
addl
jge
jecxz
mov
ret
mov
out
mov
push
outsl
push
int3
xchg
sub
or
push
ret
jge
clc
or
adc
xor
pop
fld
stos
or
xor
cmpsl
mov
pop
or
push
ds
mov
jne
dec
sub
iret
fimuls
stos
inc
mov
pop
imul
push
in
sub
test
or
cli
mov
loope
jns
and
data16
fwait
xor
adc
and
push
or
dec
jne
outsb
inc
pop
aad
fldcw
fwait
mov
mov
fdivp
fcoml
sub
fwait
or
aas
mov
push
pop
cmp
repz
sarb
add
mov
xchg
movsl
xchg
stos
jae
push
jecxz
push
push
int3
xlat
pusha
dec
pop
cmpsb
push
jns
adc
ret
repz
daa
xchg
sbb
lods
and
in
jp
cli
mov
mov
push
ret
minps
lock
jle
stos
sub
mov
clc
dec
xor
sahf
std
and
imul
arpl
pop
out
mov
xchg
mov
lds
push
jp
mov
adc
and
or
push
adc
loopne
orb
stc
xor
mov
lea
rorb
sti
popa
push
sahf
add
mov
jae
outsl
mov
jle
jne
xchg
adc
rcll
add
jne
pop
dec
sub
icebp
movsl
mov
adc
int
iret
mov
movsb
incb
and
enter
scas
aad
sub
mov
repnz
stos
or
lahf
mov
fistpl
clc
jle
pop
ss
xchg
pop
negb
adc
xchg
inc
in
imul
fsts
ficompl
sub
lret
in
lods
mov
in
ss
cwtl
add
shlb
aas
xchg
insb
jle
sbbl
inc
jp
outsl
pop
xor
jno
xor
jp
and
pushf
push
fmull
push
pop
fadd
or
leave
int
add
lret
dec
adc
dec
hlt
test
ja
leave
rolb
ljmp
ds
outsb
fcoms
add
cmp
fdivl
ret
frstor
popa
out
and
push
cmp
orl
xchg
sub
inc
pop
div
cmp
dec
push
sbb
pop
adc
jne
aad
out
xchg
int3
cmpsl
xlat
jmp
ljmp
mov
lcall
mov
je
and
mov
rolb
fisttpll
or
ja
mull
jge
inc
inc
jge
xor
outsl
sbbl
popf
fwait
add
loop
in
test
sub
add
push
insb
pop
lret
xor
lock
mov
sub
cmp
into
ja
dec
cmp
add
insl
incl
icebp
adc
mov
inc
sarb
out
mov
xor
rcrb
add
add
dec
xor
mov
in
cld
or
stos
or
sahf
mov
pop
jmp
xlat
xorb
daa
js
pop
jns
sbb
add
nop
cltd
popa
out
mov
mov
scas
sbb
jmp
jmp
and
jge
xchg
add
dec
in
sahf
or
ret
mov
out
bound
inc
js
mov
out
xor
ja
jge
hlt
das
test
stos
ss
clc
push
mov
filds
lcall
mov
or
into
out
xlat
out
jno
adc
in
jge
mov
xchg
mov
gs
out
stc
mov
mov
push
rclb
add
popf
push
mov
push
or
mov
clc
sbb
inc
inc
pushf
mov
xor
aad
stos
test
adc
jnp
lock
pop
adc
pop
enter
cmpsl
jmp
cli
xchg
popa
cmp
loop
sbb
mov
pop
test
push
adc
testb
inc
cmp
cmp
movsb
inc
mov
cmp
adc
cmp
scas
cmp
test
xor
mov
or
pop
inc
push
je
sbb
push
mov
mov
imul
pop
mov
or
add
imulb
jnp
push
ret
jl
insl
aas
or
pop
add
loope
sub
xor
fists
add
mov
or
test
lret
inc
xchg
inc
hlt
cmp
or
mov
cmp
xor
in
mov
fmulp
or
out
and
push
mov
jmp
xchg
mov
xor
jl
pop
dec
pop
stos
cli
jae
aad
fcompl
addr16
pop
loopne
inc
decl
bound
sbb
mov
mov
push
imul
xchg
cli
or
cmpsl
aad
shlb
inc
mov
addr16
or
fwait
fs
pop
and
insl
fisubs
adc
fildl
sbb
cmc
sbb
add
fildl
inc
cli
mov
dec
cmp
loop
out
scas
push
leave
adc
js
add
and
pop
in
xchg
xor
sahf
mov
xchg
iret
push
jne
les
pop
fiadds
and
cmpsl
ljmp
xchg
call
mov
sub
int
adc
adc
and
lahf
sub
shlb
ret
or
jmp
clc
and
mov
fs
notl
xor
push
mov
in
and
divl
js
stos
movsb
mov
jbe
pop
push
pop
jp
sub
dec
pop
adc
lock
ljmp
popf
jmp
add
xor
leave
mov
and
push
ror
xchg
cmp
mov
inc
jne
push
mov
pop
pusha
mov
shrl
inc
or
cmp
fxch
ret
mov
push
xchg
adc
push
adc
sbb
movb
adc
sbb
or
push
popf
addr16
cmp
add
pop
cmpsl
ret
es
pop
lock
jmp
mov
cmp
jae
cmp
xor
add
in
xlat
icebp
movb
pop
cmp
push
cmp
adc
leave
insb
js
rcl
jb
je
adcb
sub
stos
xchg
add
jecxz
sbbl
call
int
sbb
mov
lock
adcb
pushf
xchg
mov
aaa
test
xor
adcb
fwait
mov
sub
pop
fcomp
jno
push
sbb
test
jae
outsb
js
jnp
addb
imul
outsw
loopne
or
push
cmpsb
or
sbb
imull
cmpsb
in
pushf
scas
mov
stos
and
out
lds
mov
out
test
in
sti
pop
mov
movsb
les
lret
sahf
cmpps
aaa
stos
sub
leave
cmp
mov
mov
in
sub
jp
xchg
sbb
dec
lea
cs
nop
push
sbb
mov
or
test
pushf
pop
xor
mov
add
mov
mov
fistl
nop
jae
dec
mov
xor
lret
div
and
sbb
in
cld
out
repnz
rol
cmp
rclb
mov
cli
daa
movsl
dec
add
into
sbbl
push
call
insl
pop
mov
xor
jl
test
and
adc
add
frstor
or
and
cmp
loopne
shrd
movsb
jbe
pop
mov
push
out
sub
lock
shr
es
js
jns
adc
push
popa
or
stos
dec
testl
xchg
cmpsl
stos
js
fdivs
loopne
lret
lds
or
inc
inc
sub
inc
out
push
fnstenv
test
or
sub
outsb
xchg
sub
mov
fidivrs
fdivp
cltd
cmp
adc
fisubrs
lea
sbbb
std
bound
mov
inc
cmpb
mov
xor
jmp
movsl
bound
mov
cs
stos
pop
sarl
push
or
and
push
fs
fdivr
or
xchg
cmp
dec
hlt
je
lods
imul
push
jbe
add
lds
add
cld
inc
mov
jmp
jne
das
nop
fdivs
stos
xchg
pop
push
sub
loope
add
and
fwait
bound
inc
cmc
xchg
inc
jo
mov
sub
rol
mov
lods
xor
mov
les
aam
sub
sahf
pop
out
fsubs
sub
stos
pop
test
mov
cld
mov
dec
dec
xchg
inc
lret
mov
push
push
lret
int
push
mov
in
lock
add
jg
dec
mov
mov
pop
xchg
jne
dec
addr16
repz
ljmp
bound
in
cmp
add
mov
mov
gs
inc
cmpsb
js
push
sbb
push
adc
xlat
push
lret
out
pop
mov
add
dec
and
ljmp
sbb
and
or
enter
idivl
sbb
sbbl
lret
bound
lock
pop
imull
lret
pop
daa
xchg
in
add
data16
insl
or
push
xchg
add
mov
pop
and
fs
jae
shl
adc
adc
pop
dec
dec
outsl
jnp
imul
cmp
jl
jp
mov
xchg
mov
jge
or
lret
xchg
dec
and
lods
or
cs
sti
shl
je
test
js
sub
repnz
adc
push
mov
cmc
mov
fdivrs
pop
out
pusha
push
jl
cmp
stos
or
mov
push
add
jge
out
fdiv
push
das
int3
pop
fdivrs
push
das
add
pop
add
out
fs
nop
dec
adc
ja
sub
repz
add
aam
jb
mov
sub
scas
jns
inc
clc
pop
adc
or
aas
shlb
clc
outsl
jnp
loopne
jp
lret
xor
aam
rcll
insb
jmp
int
imul
fisttps
mov
inc
aas
into
cmp
dec
test
fs
hlt
ja
add
in
ds
insl
push
push
pushf
inc
mov
sbb
dec
aas
inc
ds
aad
mov
inc
jb
cmp
out
mov
fdivrl
in
dec
inc
jmp
pop
adc
adc
xchg
ss
subb
dec
pop
notb
jne
xor
roll
adc
scas
sbb
add
mov
ljmp
rorb
and
adc
or
mov
mov
imul
roll
sub
out
push
cmp
xchg
sbbb
or
outsb
in
mov
loop
pusha
jp
fstl
add
push
movsl
es
imul
imul
loope
mov
push
inc
cld
jno
sub
jg
pop
data16
nop
jbe
shrb
fnstsw
and
int
scas
mov
int
cli
repnz
mov
call
xor
xor
or
cmc
xchg
aad
loope
enter
sub
rep
mov
sbbl
push
fs
fistl
jns
cmp
push
jp
cltd
aas
rcl
repz
pusha
xor
xchg
push
jno
push
jne
jne
mov
nop
jb
mull
sub
movsb
pushf
scas
push
sub
popa
test
out
data16
in
js
fs
pop
xchg
dec
jle
add
mov
mov
loopne
aam
and
mulb
fmulp
xchg
data16
arpl
jo
push
rcl
ds
sub
test
push
mov
addr16
sub
xchg
icebp
push
adc
mov
cmp
aad
jnp
movsl
xor
jns
xchg
add
sbb
es
jmp
adc
adc
fwait
test
mul
fsubrl
pop
inc
mov
cmp
adc
les
push
mov
xorl
jbe
addr16
in
mov
sub
xor
adc
lea
pop
cmpl
adc
push
push
jb
sbb
and
dec
in
cmp
cmp
xchg
in
xchg
mov
cmp
cld
pop
sub
lcall
and
adc
addr16
mov
fidivl
jo
jnp
fnstsw
dec
push
push
jmp
mov
fimull
rcll
and
mov
xchg
sub
lods
fildl
clc
insl
add
movsb
incb
push
push
sahf
int
das
aas
cld
aas
call
sbb
cmp
mov
xchg
sub
mov
inc
in
shl
fsubrs
push
icebp
mull
lret
mov
sbb
push
jno
or
imul
xchg
sub
lret
cmpsb
dec
in
mov
cmp
pop
out
test
fdivrl
aam
nop
push
or
cli
les
gs
sahf
xor
mov
jecxz
call
sarl
mov
adc
loopne
and
jmp
xor
fldenv
jmp
jno
push
in
dec
push
xor
iret
imul
sahf
sub
cmp
push
jge
mov
aas
jle
sub
shl
loopne
lods
fbstp
push
fisubl
ss
jns
inc
and
pop
mov
jp
aad
inc
outsb
sar
push
je
jecxz
sbb
addr16
in
rorb
pop
xor
adc
push
pop
jo
sbb
dec
out
push
and
subb
fsubrs
and
xor
inc
in
imul
pop
mov
add
cmp
clc
cmp
movsb
mov
loop
push
jns
cmp
repnz
inc
mov
int
in
dec
das
push
rcll
mov
loope
pop
cmp
xchg
inc
fcmovnb
jge
adc
call
arpl
test
or
nop
lods
imul
daa
fidivl
mov
clc
push
imul
clc
insl
insl
jl
lahf
mov
mov
mov
mov
mov
jle
ljmp
and
je
jne
notb
enter
xor
fmulp
sti
push
add
mov
iret
imul
cmp
jno
add
daa
add
test
and
mov
dec
in
popf
rol
jp
jno
mov
mov
dec
repnz
add
mov
mov
cs
repz
mov
hlt
lds
loop
imul
imul
mov
jno
push
mov
push
jge
dec
int
insb
mov
or
jge
sbb
xchg
ds
mov
sbb
mov
add
lods
jmp
and
das
cmp
and
mov
add
mov
adc
xchg
andb
outsl
daa
xor
inc
add
dec
xor
adc
lods
popa
adc
push
aaa
das
push
push
dec
add
xlat
test
or
or
hlt
mov
inc
call
in
mov
dec
cmpsb
sbb
xchg
pushf
mov
lods
jns
int3
and
cmp
jb
scas
mov
ja
ret
push
cli
xor
adc
xchg
xchg
jge
mov
mov
outsb
js
cmpb
sub
ret
mov
mov
loope
ret
add
mov
adc
repz
mov
or
dec
cmpxchg
push
rolb
rolb
sub
pop
sti
xchg
push
cmc
fsubs
mov
dec
dec
mov
mov
scas
lock
std
jl
mov
xor
movsl
cmc
mov
add
push
aam
lret
shlb
fs
fdivrp
jae
fcmovnu
imul
je
lds
pop
popa
inc
fstl
xor
int
fstpl
cltd
ds
and
inc
jae
fldenv
addb
mov
test
lds
mov
mov
sti
lods
inc
fs
push
data16
jge
add
std
std
dec
std
cltd
out
test
or
cltd
push
out
pop
cli
xchg
rorl
mov
inc
pop
xchg
stc
les
das
sbb
mov
in
inc
push
inc
imul
mov
and
inc
fistps
mov
push
mov
loop
and
js
push
jae
insb
or
je
mov
lret
lds
cmp
incl
mov
fcomp
fildl
cwtl
int3
ljmp
pushw
jmp
ret
scas
xlat
sub
sub
insl
xchg
pop
xchg
xlat
pop
xor
and
daa
pushf
ja
adc
in
daa
arpl
repnz
xor
sub
mov
pop
inc
popa
stos
jns
mov
mov
xchg
sahf
push
mov
cmp
and
test
cmp
and
out
cmp
mov
jge
test
ds
in
inc
mov
shl
mov
psrad
shrb
lcall
int
mov
jnp
mov
mov
dec
call
xor
out
push
in
dec
mov
push
andb
add
cmpsl
loop
fldcw
xorb
dec
pop
sub
jnp
sbb
out
mov
test
jo
pushf
cwtl
push
add
enterw
xchg
mov
mov
mov
push
imul
mov
sbb
mov
xchg
mov
jle
cmc
loope
scas
loope
and
xor
push
push
sub
pop
adc
fbld
cmp
aam
sub
fisubs
aad
xchg
test
and
mov
push
jecxz
push
leave
sub
pmuludq
out
pop
adc
cmp
pop
daa
in
dec
cmpl
mov
jns
mov
dec
xor
bound
sub
xchg
inc
ret
cmc
sti
pop
or
xchg
movsl
cmp
xlat
mov
or
mov
pop
scas
xor
sbb
sti
pop
mov
movsl
daa
xchg
enter
ds
lahf
idivl
mov
js
push
out
cmpsl
fimuls
stos
cwtl
flds
add
push
mov
mov
insl
scas
js
popf
setbe
add
push
cld
adc
pop
push
xor
fs
pusha
iret
aam
adc
loopne
movsb
mov
je
pop
in
xor
fdivs
aad
xchg
xchg
pop
roll
aaa
jmp
push
lods
adc
clc
test
adc
mov
or
data16
push
inc
fimull
push
repz
popa
mov
in
sub
dec
and
and
inc
loope
fsubrl
insl
mov
pop
hlt
adc
xchg
int3
arpl
ljmp
push
mov
cmc
cli
aaa
pop
je
ss
leave
and
cmp
cmp
lea
shlb
aas
repnz
cmp
mov
push
test
push
sbb
in
enter
mov
fstp
cmp
jmp
sub
jecxz
mov
mov
outsl
loop
and
mov
test
add
and
lret
loop
dec
jne
xorl
call
jno
movsl
fpatan
mov
lock
lds
out
loope
test
xchg
ljmp
lea
push
jnp
incb
sti
adc
xchg
lods
xchg
inc
es
push
pusha
jmp
xchg
add
das
xchg
outsb
adc
jnp
out
cmpsl
sti
push
rorl
xor
jle
les
push
mov
dec
jmp
jo
dec
or
push
enter
jns
or
stos
add
sub
fistpll
and
mov
lods
xlat
xor
jns
rol
mov
cltd
mov
mov
add
sti
lock
test
mov
xchg
inc
daa
inc
fmulp
sbb
xor
arpl
adc
sbb
sbb
and
mov
and
cli
bound
popf
ror
test
sbb
xchg
addr16
xchg
test
push
aas
or
adc
dec
inc
dec
insb
mov
add
dec
stos
daa
pop
dec
lods
mov
in
jbe
fcomps
add
xchg
xor
jne
pop
test
lock
loope
mov
jmp
lods
aas
fldl
sub
jae
and
mov
icebp
lret
dec
pop
addb
cmpsb
repnz
repnz
andl
testl
jb
jae
js
sbb
mov
sub
inc
lods
and
inc
dec
leave
loope
ljmp
in
push
xchg
cs
mov
jbe
mov
adc
call
mov
cmc
dec
lods
sub
adc
mov
out
subl
adc
int3
int
adc
and
cld
fcoml
jae
test
maxps
nop
mov
mov
mov
xchg
push
in
fbld
lods
rclb
lock
aam
stos
cltd
jnp
dec
lret
rcrb
mov
jle
js
adc
outsl
lahf
mov
sbbl
lods
sarb
popw
and
loopne
cmpsl
inc
mov
sub
out
push
inc
out
sbb
ss
add
int3
mov
sbb
inc
adc
jle
js
inc
dec
orl
jne
imul
push
movsb
inc
xor
sbb
xor
mov
outsl
sti
outsb
aad
in
ret
dec
sub
fisubrl
inc
cmpsb
fs
push
rolb
pusha
int
imul
sub
decl
bound
movsl
aaa
adc
mov
or
enter
xchg
push
mov
add
dec
xor
fs
call
push
and
stc
dec
cmpsb
sbb
mov
jp
inc
or
pop
mov
dec
mov
stos
fistps
xchg
es
and
mov
fisttpl
psrad
push
xchg
sti
lahf
dec
mov
push
rolb
push
in
jle
push
xor
mov
nop
cli
into
popl
in
lock
jle
in
movsl
pusha
ja
sub
outsl
mov
jecxz
inc
fs
sub
imul
push
pusha
js
out
pop
or
imul
cld
mov
data16
cmp
add
pop
mov
adc
and
in
adc
adc
mov
jge
mov
xchg
pushf
shll
push
pop
rcl
push
leave
or
aam
adcl
push
adc
in
mov
xchg
cmpsb
out
imul
loopne
notb
sti
and
add
cmp
test
mov
sub
cwtl
fisubrs
sbb
mov
imul
cmpsb
cmp
jmp
and
hlt
pop
xchg
std
sahf
xlat
pop
aam
sbb
push
mov
jge
mov
shll
int
js
out
ja
adc
fisttpl
in
in
mov
stos
inc
adc
movsb
xor
jns
mov
push
daa
jmp
das
cli
jo
push
jp
jecxz
mov
jnp
jmp
int3
push
mov
inc
in
or
adc
jp
cmpsb
mov
ljmp
jno
fbld
add
add
out
xchg
inc
mov
jbe
shl
pop
add
shrl
int
lahf
leave
test
adc
popf
push
lods
cwtl
shll
mov
mov
orb
outsl
subl
jle
sbb
mov
mov
ret
scas
inc
stos
pusha
push
pushf
mov
or
mov
push
test
fs
outsb
subb
pop
cmp
mov
cmpsb
stos
andb
pop
jle
cld
xchg
sub
adc
test
cli
dec
add
cmp
cwtl
das
mov
scas
mov
in
outsb
sbb
cmp
mov
mov
nop
xor
stos
lds
push
js
dec
mov
dec
addb
push
ret
mov
or
cmc
mov
xlat
imul
add
xor
inc
lods
das
mov
ss
popa
cmpl
aad
pop
nop
aad
pop
pop
jnp
out
cli
sub
decb
mov
lds
es
pop
icebp
imul
mov
clc
addr16
inc
stc
je
ljmp
pop
sub
cmpsl
inc
or
cmp
mov
pusha
out
push
dec
sub
pop
add
test
rol
adc
sbb
cmp
in
aas
mov
mov
dec
push
mov
inc
add
hlt
aas
outsl
adc
lds
mov
stc
xchg
into
enter
ja
lret
xchg
dec
jp
cltd
ret
test
sbb
test
aas
adc
mov
push
popf
push
mov
and
stos
xchg
lds
sti
xor
dec
fdivrs
iret
jg
sbb
jo
movsb
jno
jb
and
arpl
sub
mov
jbe
les
cmp
call
call
xor
push
xlat
xor
fwait
xchg
rcrl
mov
mov
pop
add
scas
aas
sbb
pop
sahf
push
jae
shll
push
pop
out
jg
and
sub
push
fiaddl
add
jae
and
lcall
in
cmp
outsl
lds
sbb
mov
cmpsl
mov
daa
and
lods
add
xchg
inc
xchg
popa
cs
xchg
test
mov
mov
je
gs
js
adc
shl
repz
into
push
sar
cmp
pop
xchg
push
cmp
sbb
out
or
cmp
xor
mov
push
popf
pop
ret
pop
movsl
inc
inc
loopne
imul
aad
mov
xlat
mul
lods
out
sbb
cmp
cmp
add
mov
dec
inc
push
in
xchg
pop
mov
and
stos
arpl
and
jg
sub
fwait
dec
dec
xchg
push
test
jmp
enter
test
gs
and
decb
mov
add
mov
xor
jl
sti
xchg
mov
mov
jp
mov
xchg
stc
data16
shll
enter
fs
mov
jmp
jp
sbb
mov
loop
int3
dec
sub
out
cmpsl
ret
xchg
push
fcompl
stos
repz
cmp
fcomps
or
pop
fildl
cltd
int3
outsb
pop
scas
xchg
lret
mov
or
jecxz
cmp
jl
lods
cmp
dec
leave
jp
jmp
scas
pop
fs
lret
fs
mov
adc
xchg
dec
mov
clc
test
push
cmpsb
js
mov
ret
je
jp
pop
mov
push
and
mov
lcall
es
insb
and
dec
push
clc
stc
shrb
bound
mov
mov
les
jecxz
fisubs
push
and
mov
cmp
scas
popl
xchg
mov
fidivs
aam
lods
rcl
or
inc
and
movsl
mov
test
ja
mov
xchg
les
stos
cwtl
movsl
es
dec
mov
arpl
sbb
addl
scas
pop
lahf
orl
loopne
mov
lahf
xor
shrb
push
popf
cmc
sbb
fcompl
push
out
dec
sbb
or
lods
stc
gs
push
inc
xchg
std
aam
push
sahf
pop
or
gs
adc
fistpll
nop
vmread
in
das
cmpsl
xchg
in
mov
lods
mov
es
ret
push
jmp
xor
sbb
arpl
lock
inc
lods
pusha
leave
push
popf
leave
lods
lods
cld
jbe
popf
fsubrs
xchg
add
das
and
fcmovbe
popa
push
mov
pop
in
cmp
pusha
add
stos
mov
dec
lahf
jle
enter
fdivl
jbe
pop
pop
fsubp
inc
leave
pop
mov
pop
mov
push
ljmp
and
mov
cmpsl
mov
jl
mov
and
lret
out
imul
adc
dec
push
sub
pxor
sub
mov
in
push
and
mov
add
out
insb
hlt
les
pop
gs
jae
mov
movsb
or
lret
clc
mov
sbbl
aas
ljmp
addr16
stos
aas
cltd
push
jns
inc
imul
sbb
push
addr16
add
push
xor
das
test
or
add
inc
cld
aaa
push
out
cmpl
sub
fmull
fldl
daa
push
xor
popf
mov
out
adcb
push
push
mov
mov
paddsw
inc
jns
adc
dec
lcall
cltd
rorb
jbe
call
push
or
mov
cmpsb
test
mov
cmp
pop
jg
in
mov
fnstenv
fmuls
popa
jno
jle
push
push
add
inc
jle
jle
xor
add
lahf
xor
pop
or
cmp
and
jmp
cmp
test
mov
leave
adc
movsl
xchg
es
dec
mov
mov
pop
mov
xchg
insb
xor
cltd
arpl
outsl
push
fwait
bound
cmp
fsubrs
in
add
jne
call
int3
pop
pop
xor
loope
cmp
push
jae
jge
testb
jnp
cmp
xchg
pop
mov
fcoms
fprem1
rorb
fdivrs
jb
lahf
lahf
jecxz
sti
jmp
mov
cmpsl
test
mov
mov
and
pushf
daa
mov
stos
fnstcw
xchg
sub
call
pop
jnp
inc
fcoml
aas
inc
into
fnsave
mov
je
add
sub
push
mov
or
push
aaa
mov
sbbb
or
pop
xchg
sub
pop
inc
loopne
inc
xchg
ret
xor
push
mov
sub
fstl
hlt
mov
pop
mov
jle
cmpsb
mov
out
xor
dec
mov
mov
or
push
aas
fimull
or
imull
sbbl
sub
add
cli
fadd
cli
movsb
sti
fwait
and
push
cmc
or
jl
and
jle
lcall
out
mov
inc
fxch
mov
push
xlat
nop
lods
lret
in
ja
sti
mov
dec
jo
or
mov
int
and
addr16
inc
fcomps
test
mov
cmp
jecxz
scas
inc
fisttpl
insl
jge
leave
int
jnp
imulb
int
movsl
mov
xlat
out
push
mov
insl
loopne
pop
mov
and
lock
clc
xchg
and
imulb
mov
ja
popf
pop
repz
sbb
repz
pop
sub
adc
cwtl
adc
repnz
pusha
adc
cmp
dec
mov
adc
push
add
xor
xor
nop
imul
adc
enter
push
mov
fbstp
cmp
call
or
xlat
push
das
shrl
mov
push
fwait
sub
test
lret
int3
mov
pop
fs
and
mov
jmp
out
and
cld
fwait
adc
jecxz
test
mov
cmc
adc
adc
outsl
push
xor
or
pop
ret
into
popl
scas
jno
sub
sub
data16
fdivs
pop
cmpsb
xor
fistpll
mov
icebp
mov
jns
adc
dec
inc
and
or
inc
bound
lahf
call
mov
mov
jge
js
dec
lods
inc
jo
or
mov
in
rorl
mov
cmp
and
xlat
test
test
add
lcall
in
mov
jge
xor
push
jbe
xchg
cmpsl
cmp
in
out
jge
jp
mov
adc
shrb
inc
mov
sbb
xor
nop
testl
das
popf
test
mov
hlt
xor
test
cli
pop
pop
std
dec
out
movsl
cmpsb
push
cwtl
repz
or
pop
loopne
pop
mov
xchg
inc
jmp
dec
mov
cwtl
out
add
dec
in
pop
scas
shrb
idivb
roll
and
roll
xor
ret
hlt
movsb
lods
frstor
fwait
je
sbb
inc
popf
pop
loop
ljmp
rol
sbb
cmc
sbb
adc
push
dec
icebp
and
arpl
pushf
add
mov
sti
pop
push
mov
and
das
lcall
inc
dec
ljmp
mov
andl
or
sti
jns
insb
sub
cmc
mov
add
sbb
mov
push
std
push
lret
or
inc
test
push
out
ror
mov
dec
repz
mov
rcrl
pop
subl
mov
stos
inc
and
cld
sub
popa
clc
ret
dec
xchg
cmp
jg
push
cmp
xchg
divb
pop
ds
xor
mov
insb
in
inc
pop
dec
pop
and
aad
sbb
push
stos
loope
loop
fucomp
mov
mov
aaa
imul
xchg
mov
mov
sub
imul
pop
add
in
pusha
adc
pop
sarl
jae
pop
sbb
mov
mov
rcrl
aam
jl
jae
arpl
jecxz
cli
pushf
sub
repz
outsl
and
push
jne
adc
shll
mov
in
jno
jno
lahf
push
fcomps
std
xchg
fistl
arpl
mov
mov
hlt
jecxz
jae
xor
jnp
mov
sbb
jo
addb
sbb
and
les
in
cld
mov
sub
xor
push
imul
mov
imul
push
aad
pop
pop
jne
mov
cmp
incl
inc
ds
into
mov
dec
sub
xchg
mov
xor
scas
jge
lock
mov
jbe
xlat
push
jecxz
sbb
movsl
stos
rcrb
scas
inc
cmpl
inc
mov
ret
push
or
or
cmp
xchg
dec
add
je
or
arpl
xorb
decb
movsb
out
dec
sub
push
sub
xchg
cwtl
xor
mov
gs
inc
fisttpl
mov
call
or
mov
jle
mov
or
subb
popf
xchg
mov
mov
mov
fsubl
int3
mov
push
out
cld
xchg
jns
pop
lcall
mov
pop
jo
push
push
mov
shlb
lock
sub
mov
cmpsl
pop
jbe
cmp
lahf
mov
lret
ljmp
and
out
xchg
dec
fs
loop
sub
cmpsb
out
mov
bound
hlt
mov
xchg
daa
rorl
aaa
xchg
pop
stc
jo
xor
mov
cmp
in
popa
scas
inc
xchg
xchg
ds
in
jb
xchg
loopne
das
lahf
jecxz
fmuls
scas
inc
loop
inc
inc
cmpsl
inc
dec
jecxz
dec
int3
pop
jnp
icebp
cs
jae
jge
sub
adc
mov
or
xor
push
lahf
fisubs
xchg
cmp
sti
and
pusha
pop
sub
test
cli
daa
push
sub
sbb
push
jg
mov
arpl
add
mov
repnz
stos
div
cmp
xchg
les
es
add
push
icebp
xor
adc
pop
dec
or
or
movsb
mov
sub
inc
cmp
notl
inc
mov
pop
iret
cmpsb
or
pop
push
negl
cmp
cmpsb
cmp
mov
in
idivl
sahf
stos
mov
movsl
insl
jge
jge
repnz
faddl
sbb
dec
es
mov
mov
loop
pop
nop
adc
roll
scas
inc
lret
rorb
sbb
repnz
lcall
or
and
cmp
lret
sub
mov
dec
dec
in
add
ds
and
lds
jmp
jp
movsl
pop
adc
popf
xchg
add
sti
push
jbe
loop
jbe
push
inc
inc
xor
mov
or
xchg
sub
mov
movsb
stos
xchg
iret
jg
mov
pop
jno
int3
mov
popf
rclb
test
adc
cmpsb
lcall
adc
addl
mov
fcompl
cmp
ret
lock
ljmp
es
iret
hlt
sub
mov
adc
cld
out
int3
lret
and
inc
lods
push
clc
xchg
mov
arpl
or
int3
add
mov
mov
in
js
adc
loop
mov
jnp
add
int3
or
jbe
mov
rcl
and
add
mull
cli
testb
movsl
adc
cmp
jle
mov
insb
mov
dec
stos
nop
adc
loopne
out
jnp
pop
dec
stos
fdivp
sub
cmp
inc
enter
stos
xchg
jmp
fistps
mov
dec
ret
pop
jp
jmp
push
nop
dec
mov
scas
mov
addb
dec
sahf
lret
sub
mov
lods
inc
test
addr16
mov
push
lret
xchg
cwtl
or
and
mov
shlb
xchg
andl
ja
lods
inc
mov
idivb
xchg
sub
dec
outsb
cmp
pop
push
xlat
mov
xor
ret
jmp
pop
cmp
mov
pop
out
insl
bnd
imul
imul
mov
aam
cmc
adc
and
es
lahf
sub
inc
flds
push
nop
jbe
lods
jmp
mov
sub
cli
mov
in
outsb
sub
ret
out
cmpsl
iret
mov
imul
scas
lret
inc
fs
push
add
loope
out
pop
rolb
sub
aam
mov
cwtl
mov
leave
popa
adc
call
cld
push
push
popf
out
mov
loopne
jmp
xor
mov
dec
popf
mov
leave
xor
fs
xchg
jo
enter
jne
das
cmpsl
out
fwait
sub
and
adc
add
lds
jl
dec
sahf
out
test
ret
or
push
ds
ja
rcr
xchg
sti
dec
lock
fidivrs
xchg
lea
into
in
and
add
lret
jbe
mov
mov
jp
sbb
pop
aaa
bnd
cmp
lcall
fsubs
bound
jb
faddl
push
pop
roll
idivb
imul
dec
fs
cmpsl
int
sbb
ficoms
aaa
fdivrl
xor
xor
loopne
mov
test
jb
and
xchg
clc
aas
roll
sarb
jge
movsb
data16
aad
pop
aaa
cmp
xchg
jl
scas
pop
mov
pop
in
jge
sub
pop
shrl
jns
fwait
insb
add
inc
outsl
push
jne
xchg
dec
jmp
or
movsl
mov
bound
cmp
lods
fistpl
popl
sarl
and
fbstp
int
icebp
cmp
add
push
dec
or
mov
mov
arpl
jnp
pop
pop
push
jne
cwtl
xor
fimuls
mov
xchg
jbe
and
daa
cld
in
xor
or
sbb
mov
inc
clc
repnz
pop
push
lcall
mov
push
lcall
std
mov
leave
pusha
cmpsl
shll
daa
add
or
pop
lock
cmp
jle
cli
scas
outsl
inc
clc
and
sbbl
sub
push
shrl
pop
add
jb
orl
repz
mov
cmp
xchg
push
xchg
daa
add
aaa
pop
lret
jns
out
scas
push
cmp
in
inc
call
inc
jecxz
lods
ja
cmp
adc
or
mov
adc
sarb
popa
shl
mov
add
popa
sub
mov
push
insb
xor
aaa
jo
rcl
xchg
mov
lods
adc
jbe
sti
mov
sbb
push
adc
jo
sbb
lret
jg
mov
inc
fldenv
fstpt
imul
inc
xlat
clc
and
and
xor
add
push
lcall
sbb
adc
mov
es
dec
arpl
jle
pop
movsb
rorb
adc
arpl
push
ja
mov
mov
icebp
or
jmp
pop
sbb
cld
cmp
cs
dec
push
dec
sahf
rcrl
cmp
aad
lret
pop
aaa
mov
ljmp
arpl
mov
lods
outsb
fnstenv
jge
jmp
mov
test
aam
mov
test
in
sbb
dec
cmc
sbb
outsb
rolb
call
test
enter
xchg
in
dec
sahf
imul
pop
mov
repz
push
jmp
sub
mov
mov
fwait
or
int3
les
adc
jecxz
mov
mov
dec
and
cltd
repnz
pop
cmp
pop
andl
push
xchg
sub
mov
mov
xchg
and
repnz
dec
push
add
jae
mov
jmp
dec
and
dec
das
cmp
lods
inc
cmp
push
lods
pop
lret
movd
fnstenv
xor
mov
adc
rcr
lret
xchg
fucomp
add
shlb
or
mov
or
lods
mov
stos
inc
call
les
aad
iret
sub
call
sbb
add
lahf
fwait
add
sub
ret
mov
add
xchg
inc
dec
adc
test
push
sub
dec
aad
push
inc
in
dec
cmp
cltd
pop
leave
xadd
and
dec
gs
add
dec
cld
out
inc
sbb
in
pop
mov
jb
hlt
clc
test
mov
sub
mov
outsb
or
mov
or
mov
add
push
out
push
ret
testl
sbbl
rcll
cmp
sti
xchg
sahf
cmc
stos
mov
add
adc
mov
pop
mov
lea
jecxz
lret
jb
repz
push
adc
or
addr16
repnz
sbb
fs
mov
adc
push
and
mov
adc
jecxz
add
mov
cmpl
repz
sbb
pop
cmp
mov
add
cmc
dec
and
push
jmp
imul
lea
mov
notl
xor
add
mov
bound
jno
subl
lock
orl
cmpsl
es
fcomip
sti
lods
cli
push
fcmove
adc
mov
mov
movsl
push
mov
nop
ds
adc
pop
inc
dec
sub
dec
clc
loope
arpl
mov
push
ljmp
loope
js
and
fs
cmp
pop
mov
jl
push
mov
out
push
inc
test
add
inc
inc
adc
popa
mov
jp
mov
sbb
push
ss
ljmp
xchg
arpl
sub
sbb
mov
negb
jge
xor
and
inc
dec
out
cs
inc
inc
mov
int
adc
std
or
xor
and
xor
test
lret
out
filds
repz
or
bound
jge
sub
pop
add
loope
stos
imul
int3
insl
mov
sbb
stos
aad
lahf
mov
ror
mov
xor
pop
pushl
fidivrl
pop
out
jo
and
mov
adc
insb
imul
rcrb
je
mov
iret
mov
xchg
inc
sbb
loopne
cmpsb
je
add
lods
call
rorl
ja
pop
jne
test
lret
mov
popf
sub
inc
jecxz
test
outsl
fwait
cld
push
fucomi
ret
leave
xchg
cld
inc
mov
shlw
fiadds
movsl
jge
sub
lret
fwait
xor
clc
cmp
in
xchg
mov
test
int3
push
xor
xchg
add
sti
aad
mov
jbe
inc
fdivrp
inc
xchg
push
xchg
loopne
mov
iret
js
jmp
fsts
inc
adc
je
das
mov
jno
das
sub
ds
stos
cld
shrb
push
push
ss
jmp
fisubrs
xchg
or
pop
mov
sub
cltd
cmp
xchg
imul
mov
or
je
lret
sbb
inc
inc
ret
js
popa
rclb
inc
add
leave
das
push
xor
jge
pop
mov
cmp
aaa
adc
outsb
push
ljmp
xchg
cwtl
inc
lods
stc
mov
xchg
xchg
pop
scas
rorl
mov
sahf
mov
cmp
dec
sbb
shlb
mov
push
sbb
decl
ror
fdivrp
mov
sub
cmpsb
dec
inc
aaa
stc
test
sub
xchg
dec
or
stos
mov
cwtl
sbb
pop
mov
imul
inc
or
or
aad
sub
cmp
loop
ss
jl
jnp
fnstsw
out
shl
push
mov
pop
mov
mov
jle
ds
xchg
scas
aas
adc
notb
pushfw
push
ficompl
mov
daa
inc
popa
clc
repz
in
mov
sbbb
xchg
js
mov
xchg
outsb
popa
or
and
dec
and
or
shl
js
shll
inc
bound
dec
out
ja
decl
sbb
lea
pushf
mov
ljmp
cmp
mov
lret
xchg
push
mov
mov
je
fst
mov
or
add
mov
iret
xor
add
jbe
push
mov
js
and
and
mov
lahf
cmpsb
call
es
inc
test
mov
mov
fistpl
sbb
jecxz
mov
shlb
aad
loope
lret
shr
stc
sbb
pop
xor
add
xchg
jno
inc
mov
cmp
dec
jmp
fistpl
cmovle
pop
fwait
mov
xor
lcall
out
xor
adc
fistps
xchg
sbb
or
lock
add
fcoms
in
cmc
test
es
ja
cmp
jbe
mov
lret
cmp
cmpsl
push
sub
loop
cmp
ljmp
lods
add
push
mov
jno
xor
rclb
repnz
add
or
xchg
jb
push
out
les
add
fnsave
shlb
sbb
mov
pop
cwtl
cmp
sub
mov
dec
dec
movsl
add
xor
mov
outsb
sub
push
jbe
mov
xchg
stos
je
dec
xor
jl
iret
scas
sub
pop
ja
fcomip
dec
mov
cmpsb
mov
sbb
sbb
ret
mov
pop
test
out
cmc
insb
stos
popf
push
jecxz
mov
dec
in
push
icebp
loop
das
adc
add
movb
push
add
ss
dec
xchg
push
bound
int
ret
pop
inc
mov
cld
hlt
movsl
gs
ja
and
push
sub
dec
es
xor
jge
flds
mov
hlt
mov
dec
cmc
fisubrs
cmp
aam
and
hlt
pop
sbb
bound
mov
movsb
inc
lock
xchg
aas
les
cmp
jno
pop
push
mov
es
pop
mov
pop
loop
jns
inc
icebp
push
xor
aas
push
bnd
out
addb
jp
push
jecxz
push
aaa
inc
mov
dec
fildll
xchg
add
aaa
push
and
in
in
mov
mov
mov
repz
outsb
inc
int
ret
xchg
dec
dec
and
mov
fimuls
add
popf
js
aad
shrb
pop
xchg
nop
xor
cmp
inc
xchg
mov
inc
jmp
xchg
stc
das
addb
lcall
jmp
aaa
push
mov
add
test
or
outsb
ds
push
pop
jb
mov
pusha
test
or
cltd
mov
dec
negl
cwtl
ss
lret
test
mov
icebp
adc
loopne
in
cs
testl
jmp
pop
push
aam
ret
pop
jmp
in
mov
cs
pop
repz
mov
ljmp
sbb
sbb
mov
push
stos
movb
mov
dec
pop
dec
mov
mov
jge
dec
movsb
iret
add
xchg
clc
push
loopne
cmp
mov
mov
loopne
fidivrs
aaa
fsubr
push
mov
repnz
cs
pop
fistpll
dec
int3
and
lret
push
je
inc
mov
mov
and
dec
inc
popf
jne
cmpb
and
in
mov
rcll
cli
je
ret
pop
or
jae
push
add
mov
fsubl
mov
mov
js
insl
jo
or
push
xchg
hlt
xchg
andb
sbb
sbb
mov
adc
sbb
sbb
push
jno
mov
jle
xchg
shlb
and
lds
frstor
add
loopew
or
jp
xchg
pop
sub
and
xchg
movsl
sbb
pop
mov
mov
insb
or
xor
push
lcall
and
incl
and
mov
sub
lret
sbb
fnstenv
lahf
enter
xchg
push
loop
push
stos
push
lods
out
lret
sahf
lret
data16
mov
sbb
xchg
les
rclb
in
cmp
sbb
pop
cmpsl
inc
movsb
movsl
fisubrl
pop
popf
push
inc
pop
rcrl
mov
inc
and
cmc
icebp
cmp
loop
sbb
mov
pop
loope
inc
testb
les
gs
sbb
add
adc
lea
cmp
and
fidivl
jb
dec
cmpsb
jp
and
out
add
fists
jae
mov
pop
cmpsb
xchg
adc
push
mov
jns
add
test
in
adc
les
jg
je
out
int
pop
iret
movl
jecxz
pop
mov
adc
add
orl
call
xor
xchg
mov
test
mov
pop
jbe
sbb
fbstp
xor
and
into
mov
xchg
and
adc
fstps
jle
inc
rcrl
sbbb
andb
sub
jl
pop
leave
pop
sub
push
push
adc
into
cmp
pop
insb
cmp
js
mov
sbb
lret
bound
mov
push
testb
movsl
mov
in
jne
cs
mov
lods
je
out
mov
int
cld
ljmp
push
cltd
sub
xlat
mov
mov
mov
mov
rcrb
mov
bnd
push
jl
mov
repnz
fwait
dec
inc
xchg
cmpsl
out
sbb
mov
mov
movsl
repnz
jge
mov
sahf
clc
ds
push
sbb
push
inc
xchg
pop
icebp
les
push
mov
lcall
stc
test
xchg
mov
sahf
adc
lcall
jmp
pop
rol
mov
jl
cli
jbe
shlb
sbb
add
lea
imul
mov
cmp
lcall
push
sub
inc
inc
cwtl
xchg
jo
lcall
rolb
jle
rcll
dec
mov
xor
aam
addl
inc
pusha
adc
gs
int
imul
cmp
fcoml
push
je
mov
insl
or
aam
jnp
add
scas
jb
mov
dec
push
sub
mov
push
dec
pop
lea
fisubrl
adcl
into
sub
adc
mov
xor
test
pushf
jmp
pop
mov
dec
aad
push
cmpsb
in
cmp
imul
or
imulb
jle
repz
cmp
sbb
outsb
sbb
or
xlat
pop
mov
pop
lods
or
inc
lods
push
lret
out
xchg
cmpb
scas
mov
xor
sub
clc
push
mov
lret
inc
and
push
or
mov
loop
xlat
jg
adc
les
pop
cmp
ret
fnstcw
push
sub
pop
out
pop
rcl
sti
outsb
jle
dec
test
outsb
shll
xlat
iret
inc
lods
hlt
mov
pop
aam
mov
pop
movsb
and
fwait
mov
rcll
std
mov
mov
sbb
pop
or
inc
cli
or
lea
mov
popa
mov
stos
aam
sahf
pop
add
mov
pusha
test
cwtl
adc
setge
loope
pushf
adc
cmc
adc
lahf
cmp
in
in
add
xor
std
pusha
fstpl
outsl
iret
filds
leave
jo
stos
adc
add
add
or
insb
pop
sub
scas
lds
lods
ret
mov
movsb
cmp
jge
sbb
sub
repnz
add
dec
js
scas
pop
outsl
cltd
xchg
stos
lret
dec
dec
incl
xor
inc
je
xchg
dec
mov
arpl
sub
mov
dec
add
out
xor
ret
inc
inc
lahf
ja
stc
cwtl
es
mov
inc
pop
in
mov
adc
jmp
or
movsl
cs
lret
ffreep
jge
add
mov
scas
jno
in
mov
sbb
aas
mov
add
ljmp
adc
jl
lds
xchg
lret
addr16
imul
loop
or
scas
xchg
ret
cmp
lock
popf
daa
mov
scas
mov
xchg
int3
cmp
fs
cli
mov
mov
mov
ds
mov
inc
inc
mov
sbb
sarl
lock
dec
pop
stos
mov
clc
scas
push
sub
adc
mov
add
xor
push
insb
push
or
cs
push
and
inc
loopne
jge
cmpsb
mov
jbe
or
fwait
xlat
rorl
in
notl
jg
adc
aas
outsb
sub
jg
xchg
push
int3
jg
fistl
addb
pop
cmpsl
xor
cmp
cmp
jg
movsb
mov
sti
jl
dec
sub
dec
aam
xor
arpl
sahf
xchg
jge
ret
imul
rcll
ljmp
fldcw
mov
jmp
testb
push
and
cmp
and
flds
mov
sub
jp
jg
ss
push
je
sbb
enter
lds
rcrl
jl
sbb
nop
pop
add
gs
pop
jbe
mov
push
rol
dec
mov
fwait
leave
loop
cli
idivl
pop
cmp
mov
pminub
jnp
push
sub
jne
or
je
sbb
dec
jno
sbb
jbe
aam
lahf
pushf
pop
iret
icebp
pop
cmp
daa
dec
sbb
rcll
repz
mov
sub
mov
xchg
mov
push
xchg
or
jbe
mov
test
test
fldcw
sub
aam
int3
movsb
cmc
jmp
daa
testl
lret
add
push
fnstcw
inc
hlt
lods
add
cmp
inc
jecxz
inc
movsb
ret
aam
adc
jecxz
cmc
xlat
push
mov
dec
out
sub
pop
inc
in
add
push
dec
xchg
movsl
mov
pop
pop
cmp
loopne
cld
sub
jbe
xchg
and
shll
xchg
adc
sbb
jmp
mov
mov
sub
sarb
adc
xor
dec
popa
stc
xchg
inc
mov
jge
in
push
sahf
pop
or
dec
xchg
sbb
sahf
repnz
mov
mov
xor
test
or
mov
test
cmc
int3
add
mov
sub
out
adc
or
cmpsb
fdivs
jno
aam
mov
xlat
mov
xor
outsl
lock
loopne
sbb
fists
push
adc
mov
adc
inc
nop
icebp
dec
mov
xchg
scas
or
xchg
nop
xchg
fsubr
fistps
pop
add
divb
mov
dec
rcl
push
jge
sub
jl
jp
or
inc
in
mov
adc
mov
xorl
sub
mov
mov
xor
aad
in
lret
sbb
mov
dec
cmp
orl
lock
rcl
stos
jbe
movsb
push
xor
push
fnstcw
lds
test
xchg
cmc
mov
push
das
jae
popa
pop
mov
inc
scas
dec
in
loop
adc
push
out
adc
movsb
addr16
hlt
jne
and
xchg
xchg
sub
icebp
pop
cmc
or
shrl
mov
jmp
cli
imul
scas
pop
movsl
mov
ret
hlt
ret
fdivrl
popa
es
stc
cmp
cmp
lock
sub
inc
cmpsl
inc
cmp
xor
scas
inc
adc
mov
cmp
lods
mov
jae
dec
mov
push
cmovg
xchg
sbb
pop
pusha
and
push
sbb
std
jo
or
xchg
xorb
mov
cs
or
rorl
inc
lods
je
fidivrs
adcb
xchg
pop
icebp
push
sarb
fcoms
mov
cmc
in
adc
sub
gs
dec
mov
loop
inc
mov
mov
xor
iret
sbb
cli
shrl
test
adc
loope
repz
testb
pushl
std
and
das
dec
orl
cmp
fxch
lret
sbb
jp
xchg
icebp
shl
sbb
cwtl
sbb
mov
clc
jae
sti
mov
out
push
in
aam
xor
mov
adc
jecxz
jo
adc
lea
scas
sub
jbe
pop
insb
and
inc
out
dec
inc
paddsb
push
xchg
scas
sbbb
stc
cmp
fcomip
xor
mov
sbb
cmp
nop
shl
adc
cmp
xor
cmp
cmpsl
test
loop
shlb
xor
in
in
stc
ds
xlat
pop
hlt
cmp
loopne
push
xchg
test
lcall
cmpsl
lds
inc
or
cmp
sub
sub
loopne
xchg
pop
movsl
dec
mov
xor
sar
adc
pop
call
outsb
test
and
stos
jmp
mov
ret
push
cmpsl
jp
les
into
mov
xchg
sub
out
fwait
shrl
pop
lods
mov
mov
lret
jl
lahf
cmp
popf
pop
mov
dec
out
arpl
ficoml
mov
pop
mov
dec
add
bound
mov
cltd
fidivs
mov
jb
jl
pop
ljmp
test
popf
imull
mov
test
mov
cmp
fidivs
mov
xor
push
fwait
sub
test
pushl
mov
leave
or
push
pop
mov
dec
or
test
fcompl
xor
jmp
push
sbbl
js
ja
push
mov
imul
lock
sbb
cmp
les
jae
or
into
gs
sbb
xchg
xchg
sub
mov
daa
lret
addr16
lock
rol
xlat
cmp
jl
lods
cmp
subb
sahf
lock
aam
outsl
push
test
lea
test
std
or
inc
iret
mov
inc
in
nop
aad
out
repz
ret
sbb
andb
inc
or
lcall
aam
mov
mov
adc
outsl
xor
fnstsw
lcall
inc
sbb
mov
nop
cmp
xchg
scas
inc
pushf
scas
mov
add
jo
and
dec
psubq
movsb
lea
push
lcall
les
cmp
outsb
or
push
scas
shll
rcrl
jbe
or
int
xchg
mov
cld
movsl
cs
pushl
outsl
dec
and
rorb
or
xchg
and
pusha
in
stos
pop
repz
ljmp
add
inc
enter
mov
mov
mov
mov
out
sbb
aas
mov
pop
imul
push
movsl
sub
loope,pn
pop
or
sbbl
inc
inc
xchg
clc
dec
cmpsl
leave
fstpl
xchg
scas
dec
mov
lahf
insb
or
push
loope
loope
push
dec
popa
fsubp
movsb
inc
sbb
movsl
cmp
rorl
mov
ret
jle
pop
fwait
push
dec
push
aad
xor
sbb
xor
pop
mov
mov
pop
or
sub
and
dec
andl
jbe
dec
testl
jle
xchg
ror
xchg
pop
shll
sarb
dec
shrb
jge
lahf
cmp
push
in
add
mov
shl
lock
fildl
in
mov
jo
flds
mov
push
roll
gs
xchg
jno
jg
mov
mov
cli
pmullw
aam
adc
in
insb
mov
frstor
xchg
cmp
add
mov
push
jmp
push
inc
pop
add
std
xchg
jecxz
lahf
es
add
jp
ss
stos
inc
outsb
or
jnp
lods
and
es
rep
outsb
mov
int
and
ja
cmpsb
cmp
mov
ficomps
jnp
or
int3
pop
movsb
or
test
cmp
push
in
push
mov
ret
hlt
inc
mov
add
inc
ret
push
and
add
adc
pop
je
and
aaa
push
cmp
mov
push
sub
ss
sbb
inc
test
push
push
and
cltd
mov
inc
ljmp
add
xor
mov
arpl
adc
and
mov
lock
or
xor
dec
pop
xchg
andb
clc
pop
aas
cmpsl
jno,pt
xor
inc
push
cmp
arpl
mov
cmp
test
enter
xor
insl
mov
jg
and
icebp
sub
scas
add
sub
mov
xorb
ror
ja
mov
mov
outsl
test
jle
pop
push
int
pop
add
repnz
scas
xchg
data16
xlat
or
sbb
bound
inc
add
push
add
xor
std
loope
sbb
lds
negl
xchg
call
push
mov
sarb
stos
inc
inc
mov
push
inc
cmpsl
mov
dec
push
fs
insl
dec
inc
mov
dec
sub
rcrb
fisubrs
xchg
mov
adc
insb
adc
sbb
or
xor
pop
lods
adc
lret
popa
cmp
scas
testb
jecxz
dec
sbb
ret
xor
and
sbb
pop
iret
mov
ret
popl
push
pop
xchg
xlat
jne
enter
lahf
mov
flds
or
jno
push
push
pushf
stos
je
dec
lods
xorb
mov
scas
inc
xchg
sarl
sub
xor
pop
lods
fdiv
inc
popa
movsl
hlt
aaa
push
es
call
and
or
scas
lcall
adc
ret
aam
cmp
inc
push
lock
mov
add
ret
xor
adc
push
cs
rorb
icebp
xchg
sub
mov
dec
inc
push
hlt
mov
inc
mov
pushf
movsl
sbb
loopne
adc
jae
sub
mov
add
iret
xor
mov
aad
sti
in
rorl
sbb
push
shlb
int
es
push
push
pushf
bound
or
fstpt
loope
shl
mov
jne
push
jnp
lods
test
divb
xchg
inc
pop
out
loopne
jbe
jns
or
mov
repz
mov
inc
imul
sub
loope
mov
and
push
pushf
lods
addl
mov
mov
push
mov
jle
push
mov
les
lods
pop
outsb
rcrb
push
and
sahf
add
adc
pop
adc
shl
jp
ss
jmp
cmp
rorl
mov
inc
xlat
movsl
sbb
jmp
fildll
mov
shlb
or
mov
xor
fnstsw
andl
stos
add
inc
out
ffree
outsl
cli
clc
aaa
push
sub
add
insb
js
leave
xlat
rolb
leave
fs
jne
mov
fcoml
push
xor
xchg
ss
fiadds
dec
add
test
lea
inc
cmpb
dec
pop
lret
lahf
pop
inc
push
adc
movsb
dec
xchg
add
adcl
push
nop
mov
out
in
ds
xorl
xchg
cmp
insb
push
dec
sub
xor
scas
dec
andb
inc
pop
dec
mov
push
sarl
lret
enter
popa
sub
xor
push
mov
fists
ja
or
push
cmp
fwait
jne
inc
jmp
inc
xor
inc
add
das
pop
test
daa
icebp
mov
push
mov
xchg
shrl
xlat
sbb
pusha
and
ret
pop
xchg
ja
sub
sub
lea
out
jnp
mov
mov
adc
add
fdivrs
test
jno
lea
outsl
movsl
adc
gs
sub
aas
icebp
pusha
int
adc
mov
push
hlt
push
and
or
ret
fisttps
push
jno
push
iret
js
mov
je
add
inc
xchg
sbb
dec
jns
mov
stos
add
rcl
iret
sub
adc
lret
and
xchg
ss
push
jb
das
adc
ss
in
push
jbe
add
lds
es
pop
fstl
mov
ret
orl
inc
shlb
out
sub
adc
sbb
les
sub
lds
mov
dec
xchg
or
cmp
test
push
inc
pop
jne
sub
push
addr16
cmp
xchg
ss
jae
pop
pop
inc
cmpsb
mov
jmp
mov
push
cmpsl
insl
loop
lcall
stos
loopne
addr16
xchg
in
or
jge
xchg
sub
adc
jne
mov
mov
fisttps
dec
xor
lahf
or
or
lahf
dec
push
into
sub
inc
orps
adc
int
cld
hlt
lods
inc
cli
pop
xchg
jle
mov
stc
pushf
mov
ret
out
and
dec
inc
inc
scas
in
xor
lds
xor
pop
scas
clc
adcb
mov
scas
imulb
sarl
inc
or
cs
jnp
cmpsl
jecxz
call
xchg
es
mov
mov
out
pop
push
fmuls
cmp
jne
dec
orl
and
mov
push
mov
imul
jnp
gs
push
lea
xor
fwait
and
loop
jbe
dec
lea
sarb
pop
insb
icebp
shll
adc
mov
push
test
cmc
lods
mov
rcll
push
sbb
int3
shl
test
push
jb
ret
and
into
fs
scas
push
sub
sub
enter
data16
pusha
and
lods
ljmp
arpl
or
xchg
mov
call
jns
and
and
jb
mov
rolb
push
scas
xlat
cmc
cli
das
mov
clc
sbb
inc
sbb
add
and
push
sub
jnp
unpcklps
ds
jmp
sbb
fidivl
mov
sti
dec
mov
mov
bswap
mov
out
adc
jne
addr16
inc
iret
stos
in
xor
jo
push
cmp
or
dec
xorl
xchg
add
pop
ljmp
push
ljmp
adc
fidivs
jne
sub
popa
cld
mov
pop
xor
sbb
das
or
pop
adc
mov
lods
jmp
dec
xchg
scas
push
call
inc
stos
and
cld
xor
mov
stc
iret
jb
shll
push
dec
ss
stc
out
idivl
mov
call
mov
xchg
lods
sub
push
sbb
jg
adc
xchg
mov
mov
add
sub
jl
stos
scas
dec
xor
lret
xor
cltd
in
sbb
test
xor
gs
pop
out
inc
mov
outsl
out
jmp
and
pop
sub
ss
pop
dec
fbstp
mov
xchg
jnp
into
gs
addr16
pop
idiv
push
jge
mov
mov
les
mov
pop
cmp
dec
dec
mov
int3
adc
adc
scas
mov
mov
or
mov
mov
pop
xor
aam
std
nop
push
inc
cmp
dec
add
bound
push
mov
stc
cmp
decl
mov
cmp
idivl
mov
shlb
sbbl
stc
mov
das
mov
cmp
loope
dec
push
cmc
ja
pop
shrl
std
ficomps
push
push
addl
xchg
into
xor
jmp
dec
sbb
dec
dec
cmpsb
icebp
mov
dec
mov
add
fcmovu
jg
adc
and
pop
adc
gs
jnp
add
out
jns
testb
xchg
cltd
movsl
icebp
mov
hlt
mov
push
adc
orb
es
cmpsl
call
mov
shl
and
call
xor
sbb
cmp
imul
pop
out
mov
dec
cmc
fisubs
jp
dec
mov
mov
imul
call
out
mull
xchg
add
outsl
sub
pusha
xor
jge
adc
cltd
dec
adcb
jmp
cmpsl
xchg
mov
inc
aas
imul
or
and
rol
and
aam
sbb
adc
outsl
jns
lahf
frstor
test
jns
mov
outsb
adc
stc
test
in
fs
pop
data16
add
iret
arpl
fimull
mov
rcll
fstpt
loopne
adc
gs
cwtl
stc
and
mov
push
jg
scas
js
mov
pop
lret
jge
out
or
mov
push
andl
insl
es
ficoml
sti
ret
xchg
mov
jne
cmp
push
iret
inc
mov
into
push
out
and
outsb
fcomi
mov
movsb
ja
loope
lds
push
push
repz
xchg
dec
cmp
les
fimull
or
xchg
addl
xor
movzbl
gs
sarb
popf
sub
mov
mov
fiadds
dec
in
sub
push
jnp
xchg
mov
inc
mov
pushf
xor
jmp
push
sbb
testl
lahf
jl
sub
mov
mov
ss
mov
insl
mov
mov
or
mov
ficoml
xlat
dec
cli
pop
jne
aad
aam
inc
cmp
stos
mov
inc
repz
bound
cmc
jmp
xchg
xchg
cs
mov
cmp
inc
sbb
push
or
xor
movsb
inc
push
sarl
jae
int
push
mov
push
adc
enter
xchg
je
rcl
jnp
mov
cmp
push
inc
mov
rol
pop
xchg
inc
clc
mov
cmp
mov
jmp
rcl
cmp
insb
nop
mov
iret
les
sub
jecxz
test
xchg
mov
cli
call
pop
in
pusha
negl
sub
mov
insl
jle
mov
decl
cmc
push
pop
sub
scas
add
aaa
jbe
and
insl
mov
out
xor
xchg
sbb
add
push
sub
pop
jae
push
pop
iret
movl
cmp
ret
ficompl
dec
out
mov
or
mov
dec
xchg
test
sub
rorl
sbb
sub
test
ret
add
push
out
xlat
cmpb
dec
scas
incb
lds
into
test
out
push
pop
xor
es
dec
sbb
jbe
shll
idivb
adc
rolb
jg
test
adc
lea
mov
inc
pushf
xor
cmp
and
fists
xchg
xchg
inc
fisttps
mov
mov
mov
mov
push
out
cmp
pop
lods
clc
xchg
and
icebp
lea
pop
add
push
jb
pushf
mov
mov
test
mov
adc
dec
repnz
jns
mov
push
cli
repz
dec
xchg
insb
add
sub
outsl
pop
in
sub
pop
ss
push
dec
push
in
ds
andb
sbb
dec
xchg
mov
cmpsb
shl
and
movsb
sbb
adc
adc
enter
sub
or
jnp
cld
xchg
xchg
adc
je
push
or
adc
add
and
jae
mov
adc
and
add
popa
stc
dec
dec
arpl
shlb
nop
sub
push
push
stos
mov
push
jns
fwait
lret
ljmp
xrelease
cmp
addr16
mov
and
lret
cmp
movsl
test
and
lea
push
aas
fistpll
inc
test
mov
ds
faddp
jg
orl
add
je
jne
ret
xchg
aam
repz
mov
imul
mov
in
jnp
clc
mov
int
push
test
cmp
icebp
xor
repnz
aas
test
shll
xor
mov
les
dec
fbstp
sbb
fs
cmpsb
aad
not
jp
and
dec
or
jo
pushf
inc
rcrl
sub
pop
mov
pop
cld
fnsave
xchg
mov
adcl
xorl
js
mov
adc
mov
mov
jge
sub
repz
adc
gs
in
sbb
leave
test
pminub
add
pop
cltd
iret
dec
clc
and
in
mov
ljmp
pop
xor
mov
cli
loop
cmp
mov
enter
xor
jnp
nop
aas
xor
test
pop
xor
mov
push
out
dec
cmp
xchg
sbb
lock
inc
lret
rol
mov
icebp
push
lods
pop
xorl
pop
lock
jl
lds
xchg
adc
iret
dec
lret
and
mov
jg
push
mov
subl
sbb
or
outsb
add
gs
lret
cld
stos
cld
push
in
test
and
push
adc
dec
pop
sub
mov
movsl
sbb
popl
inc
fwait
adc
mov
xor
mov
fucom
push
jmp
jp
mov
jno
mov
add
mov
jns
inc
lcall
aas
push
add
push
mov
add
scas
dec
cmp
mov
lods
popf
jns
mov
sbb
pusha
test
dec
dec
xchg
cmpsb
cmpsl
out
push
mov
sbb
int3
xchg
movsb
xchg
stos
mov
add
adc
ja
or
addl
mov
dec
movsb
jno
xchg
jmp
sbb
lods
popf
or
data16
popl
mulb
sbb
imul
push
jae
out
into
js
arpl
xchg
imul
jnp
mov
or
adc
sbb
lahf
enter
test
fisubs
mov
ret
shlb
xor
icebp
data16
popf
das
or
cld
cmp
in
jnp
imull
mov
aad
mov
xchg
mov
divl
mov
pop
cld
push
call
pushf
roll
cmp
lea
mov
pop
popa
jecxz
inc
sbb
jp
movsb
repnz
fwait
mov
out
outsb
lret
jne
jmp
sbb
ret
lds
test
sub
xchg
add
xor
out
or
xchg
xchg
ds
push
negb
das
inc
push
aad
dec
pop
js
test
imul
push
fnstenv
mov
sub
ja
or
push
in
rorl
iret
data16
in
insl
mov
lock
stos
cmp
dec
or
xchg
int
lds
testb
enter
inc
pop
lret
xor
xor
mov
gs
pushf
inc
aaa
add
mov
nop
dec
mull
push
jle
and
cmp
cmp
cmc
mov
jecxz
lahf
movsb
push
sub
mov
dec
fldl2t
hlt
mov
jne
jmp
sarb
fisttpll
es
jnp
nop
lds
stc
cmp
sbb
sub
test
fcoms
sbb
push
mov
test
adc
jbe
negl
or
aam
call
iret
inc
add
sbb
sarl
xchg
jmp
lret
cmp
ss
icebp
push
mov
mov
popa
xchg
cmp
out
shl
xor
push
sub
xlat
sbb
push
xchg
mov
subb
jb
out
fs
fwait
mov
jmp
push
shll
jg
push
or
cmp
push
fwait
push
aas
add
nop
adc
cmc
mov
dec
dec
xchg
mov
push
lock
inc
lods
lret
sub
popa
orl
jge
xor
jbe
sub
mov
aas
mov
or
imull
jle
popf
xchg
call
add
popa
in
inc
xchg
inc
hlt
or
pop
sub
shlb
pop
rolb
xchg
fcomip
push
jmp
mov
jmp
pop
dec
negb
mov
sub
lods
push
pop
xor
popa
sub
cltd
or
leave
fnstsw
push
jb
cmpsb
add
sub
cmp
stc
mov
int
push
js
dec
adc
clc
fisubs
add
xor
out
adc
ss
stc
and
aam
shll
sbb
mov
dec
sub
sbb
nop
minps
sbb
clc
adc
mov
and
xchg
push
dec
lods
mov
cmp
shrl
pop
mov
mov
outsl
jo
fildll
mov
inc
dec
pushl
push
or
sbb
lret
aaa
roll
icebp
push
mov
pop
lock
mov
sub
shl
out
orb
loope
inc
inc
sahf
insl
bound
insl
sbb
icebp
push
outsl
jmp
jno
shrl
push
xchg
inc
flds
dec
jg
jbe
loop
fistpl
inc
lea
std
adcb
out
xor
popf
rcrb
inc
loopne
out
outsl
ret
leave
jl
stos
dec
dec
out
adc
cmp
mov
lods
sti
push
in
push
jmp
or
negb
jae
out
jae
mov
mov
or
addb
icebp
es
xchg
popa
subb
pushf
out
jno
and
add
xchg
mov
jle
mov
mov
fcom
aas
add
insl
rcr
pop
cmc
mov
daa
jl
sahf
lds
jp
es
scas
inc
nop
add
lcall
or
popa
leave
cmp
in
cmp
push
lret
jns
pop
jg
mov
pop
loop
in
in
pushf
nop
mov
lahf
mov
fimuls
jecxz
in
mov
lods
imulb
es
testl
jle
sbb
enter
fadds
int3
inc
stos
lret
jb
adc
test
pushf
xchg
pop
cwtl
dec
mov
pop
dec
adc
insl
pushf
cmpsb
jne
push
decb
sbb
data16
and
jg
xchg
ja
out
adc
xor
incl
add
lahf
and
xchg
mov
ljmp
cmpsb
or
push
out
sub
or
cs
sbb
xchg
dec
jo
jmp
loopne
jle
xchg
mov
or
mov
add
jmp
lock
cli
or
test
mov
fwait
push
inc
fistl
shll
adc
pop
mulb
jle
adc
lock
xchg
jb
inc
or
std
lods
mov
push
mov
loop
mov
mov
aam
andb
lods
lock
xor
imul
inc
addr16
aaa
and
std
in
popf
xor
fnstenv
pmaddwd
loop
mov
fwait
sub
lds
js
and
lahf
jbe
xor
cltd
bound
cwtl
dec
or
stos
stos
movsb
rcr
jb
rolb
pusha
filds
fisubrs
enter
fdivr
repnz
daa
fidivs
aas
cmpl
inc
sarb
je
xacquire
adc
mov
mov
jne
mov
test
inc
pop
xchg
lret
cld
mov
jae
mov
sti
out
mov
ficoms
jbe
xchg
test
leave
push
movsl
sbbl
js
mov
mov
out
lret
pop
outsb
sub
lret
xor
or
out
arpl
inc
add
sub
and
jle
cmp
jne
dec
or
dec
inc
jns
in
fiaddl
pmulhw
inc
cmpsl
aaa
add
push
lods
es
loope
stos
xor
adc
mov
je
icebp
rclb
add
pop
xchg
sub
lret
sbb
gs
dec
cmpxchg8b
iret
push
sbbl
popa
add
xchg
loope
adc
cmp
mov
xchg
mov
jg
in
push
mov
pop
aaa
xchg
insl
loop
jnp
inc
aad
pusha
fnsave
pop
and
cmpsb
xchg
xchg
fdivrl
push
das
out
repnz
add
aad
lock
push
inc
call
xchg
cs
xchg
icebp
dec
ljmp
stc
pusha
and
rcrl
fs
loopne
jge
lret
sbb
cmp
std
add
aaa
jbe
and
and
cltd
scas
test
pop
mov
xchg
int
jno
fistps
sbb
out
lods
inc
lcall
movsl
iret
pop
cmpb
cmp
sub
xchg
dec
gs
cwtl
fnstenv
sub
enter
jbe
push
out
test
jne
in
out
scas
jle
jecxz
pop
sub
cmpsb
cmp
lods
das
cmp
mov
lock
mov
lcall
jnp
inc
pop
sbb
xchg
idivb
push
jb
adc
mov
hlt
roll
in
movsb
les
je
outsl
xor
push
mov
outsl
daa
inc
mov
jg
lcall
sbb
rorl
cmpsl
sbb
xor
mov
out
lcall
daa
sub
dec
add
sbb
mov
imul
mov
gs
or
mov
aaa
aaa
sbb
bound
ljmp
mov
sub
test
les
xchg
leave
int
mov
and
imul
lods
push
bound
leave
insb
sbbb
inc
rcrl
xchg
ljmp
imul
dec
xlat
stos
pop
cmp
adc
or
mov
jbe
loopne
or
mov
pmullw
add
nop
lret
in
sub
lahf
pop
icebp
mov
mov
push
imul
pop
and
rcrb
pop
or
andb
xor
enter
iret
mov
sahf
leave
pusha
shlb
cltd
xor
loop
scas
inc
aas
call
je
sbb
into
and
repz
fwait
mov
mul
hlt
push
adc
sbb
loope
jg
sarb
sbb
test
in
dec
mov
gs
cmp
cmovg
loopne
mov
andb
lock
push
mov
pop
imul
mov
jge
std
inc
adc
push
lcall
sub
jmp
jmp
cs
hlt
insl
jae
jp
aad
xchg
or
sar
add
jg
int
fsubs
pop
cmp
ret
into
orb
adc
insb
jo
xorl
pushw
jno
mov
add
inc
mov
xchg
lds
orb
xchg
outsb
outsl
xor
shll
or
add
jns
xlat
and
pop
mov
rorb
inc
inc
push
mov
cmp
scas
pop
insl
jge
aas
inc
movl
stos
pusha
fistl
test
push
inc
mov
stos
mov
je
sub
hlt
shrl
push
pop
inc
push
or
jo
sub
fwait
cmp
fs
ror
wrmsr
cmp
js
nop
sbb
cwtl
push
ds
in
aad
and
cltd
add
loop
mov
out
jp
xor
mov
jecxz
sub
test
and
ds
push
repnz
lea
int3
inc
mov
xchg
bound
jne
xorw
mov
bound
das
push
mov
mov
data16
gs
xrelease
pop
pxor
push
hlt
insb
call
cmpl
stos
arpl
loope
std
xchg
push
in
iret
mov
lahf
imul
fld
mov
aaa
jle
pusha
pop
fcoml
add
repnz
shlb
xchg
sahf
ss
cmpsb
popf
fs
hlt
jno
mov
or
xchg
popf
add
ja
test
xchg
shlb
orb
pop
mov
fadds
xchg
pop
btcl
test
push
lahf
dec
fwait
lock
int3
sbb
js
push
jb
cltd
mov
inc
cmp
outsl
andl
nop
fwait
das
xchg
sub
shlb
add
nop
jnp
aad
pop
lds
xorl
dec
cmc
jecxz
push
movsl
outsl
cmp
aaa
or
mov
popf
xor
cmp
stc
add
pop
popf
incl
jo
pop
fwait
push
jb
dec
mov
cmp
xchg
pop
out
jmp
and
adc
hlt
xchg
pop
or
adc
sub
dec
loope
sub
push
mov
repz
xchg
addr16
push
in
insl
add
rcrb
call
mov
movsb
sbbl
sub
pop
mov
stc
arpl
ds
cld
shl
lahf
sbbb
xor
in
fxtract
adc
push
out
aas
ss
in
loope
xor
mov
cmp
jp
cmp
add
lea
ds
enter
cmpsb
inc
pop
fistpl
or
xor
xchg
push
add
test
sbb
popa
and
loopne
jle
fdivs
fbld
adc
inc
in
or
pushf
ds
lcall
pop
lret
mov
pushf
rcr
pop
xchg
mov
das
jge
push
cli
insl
sub
dec
iret
mov
je
xor
push
mov
push
push
jl
add
and
xchg
ret
loopne
inc
adc
jne
and
fidivs
xor
pop
cmp
jmp
xchg
mov
push
fwait
lahf
and
xor
es
sbb
cmp
adc
mov
push
mov
push
adc
scas
jl
movsb
sbb
nop
addr16
pop
sbb
daa
ds
mov
mov
dec
iret
pop
stc
xchg
push
xor
arpl
pop
pop
test
adc
xor
dec
out
je
sub
andl
sub
notl
dec
dec
mov
jle
push
mov
mov
iret
loop
stos
frndint
test
mov
out
ret
mov
inc
inc
repz
js
inc
sahf
fcomp
adc
adc
and
push
int3
jmp
sub
lods
mov
jno
js
push
ljmp
stc
push
mov
inc
sbb
ss
icebp
movsl
in
jb
cld
inc
lods
ljmp
pushf
or
mov
jno
cmp
and
cmp
ss
sbb
jg
mov
push
outsl
stos
fstpl
push
jne
xor
cmp
jge
xchg
scas
es
adc
into
mov
pop
xor
sbb
mov
jl
popa
jo
call
sub
testb
adc
add
xchg
and
and
or
pop
xor
xchg
imul
mov
push
mov
outsl
out
orb
dec
mov
cmp
fcom
insb
adc
mov
sahf
js
imul
sbb
repz
leave
xor
arpl
cmp
add
shll
rol
fisubl
mov
push
in
scas
and
inc
xor
fistpl
push
xchg
movsl
gs
jge
sbb
sub
cmc
lds
mov
add
jecxz
mov
xor
es
push
jno
jle
es
add
loope
fwait
repz
cmp
cmp
out
fwait
imul
movsl
rclb
lds
xchg
test
fmull
jnp
mov
dec
enter
dec
jmp
cs
xchg
or
xor
push
cmp
insl
cmp
sbbl
mov
push
dec
lcall
shlb
cmp
cmp
adc
ret
inc
movsl
movsb
ret
in
pop
stc
fimuls
xor
mov
push
test
xor
push
push
iret
fcomi
adcl
in
jp
inc
lds
xchg
jbe
dec
mov
sbb
cwtl
shl
fisubrl
xor
pop
sub
in
sub
xchg
fbld
mov
cld
movsb
sbb
jge
dec
adcb
adc
je
fsubrl
inc
jl
pop
mov
cmp
cmp
pop
sub
or
add
inc
inc
xchg
cs
out
cmp
mov
sub
xchg
xchg
pop
jae
shlb
repnz
mov
mov
outsb
push
cwtl
iret
push
mov
pop
loop
xchg
pop
push
mov
lea
call
ss
fdivrl
in
repnz
mov
shrl
fistps
jl
js
ret
jge
add
and
fisttps
icebp
mov
add
test
mov
inc
push
in
bound
or
jb
or
lcall
hlt
xor
add
inc
and
call
outsb
sub
lds
jg
shr
leave
mov
mov
loop
jg
pop
aaa
add
sti
int3
fidivs
dec
cmp
notl
imul
stos
dec
pop
mov
sub
pop
mov
nop
xlat
jb
add
aad
loop
adc
pop
out
pop
jp
aas
xor
pop
pop
mov
loopne
std
and
mov
cmp
adc
inc
int3
pop
scas
aas
and
ljmp
cmp
sub
loop
dec
ret
xor
jmp
fdivs
jg
dec
lcall
aas
adc
cmp
mov
jecxz
popa
mov
adc
xchg
and
jle
jle
test
imul
imul
movb
mov
bound
mov
aaa
pop
mov
inc
push
xor
mov
ffreep
mov
pop
fisubl
pusha
jl
jno
pushf
xchg
mov
loop
ja
jne
mov
mov
sbb
cs
inc
imul
sub
and
repz
shll
mov
stos
pop
aad
mov
and
mov
daa
lcall
mov
sbb
inc
icebp
mov
sbb
inc
in
mov
dec
push
rorl
inc
sbb
mov
and
mov
fsubrs
mov
cmp
pop
mov
popa
mov
inc
mov
jb
ds
push
push
dec
lds
repnz
or
addr16
and
js
dec
icebp
dec
jne
dec
add
push
inc
pop
imul
mov
icebp
mov
mov
inc
jmp
bound
lods
lock
clc
inc
dec
dec
lock
mov
push
xlat
adc
and
dec
lahf
pusha
call
and
scas
out
scas
fimuls
rol
shlb
add
test
dec
ljmp
jmp
lahf
sbb
jo
adc
jnp
movsb
xchg
xchg
cmpsl
leave
xchg
jl
pop
push
mov
mov
sbb
mov
loop
cmpsb
dec
ss
mov
add
mov
ja
or
jae
dec
movsb
jno
add
loope
mov
fstpt
push
pslld
mov
mov
pop
mov
jg
outsb
iret
in
mov
pop
popf
sub
fisttps
iret
or
cmp
je
stos
in
clc
adc
pushf
clc
or
repz
stos
repz
dec
fnstenv
arpl
les
xchg
jl
inc
mov
test
iret
push
jne
and
dec
mov
movl
dec
mov
outsl
sub
jecxz
inc
loopne
sbbl
push
mov
pop
sub
mov
loop
icebp
push
popf
and
notb
xor
ljmp
bound
cmp
push
sub
scas
out
popf
in
mov
sarl
jno
out
std
lds
push
push
arpl
pop
add
insl
and
push
mov
aad
xor
xlat
sbb
cmpsb
push
jno
jb
xor
pop
pop
xchg
jp
and
in
sbb
pop
nop
dec
mov
in
decb
add
aad
imul
ret
mov
je
movsb
or
cmp
xor
outsb
decl
pop
iret
sbbb
cs
push
and
scas
inc
push
mov
lea
int3
pop
mov
in
adc
aad
jmp
inc
and
in
das
movsb
out
and
xchg
fisubrl
jbe
mov
xor
cmp
push
int
push
mov
pop
jne
hlt
cs
cmpsb
cmc
dec
mov
popf
out
test
cmp
fwait
sub
shrl
dec
pop
sbb
lcall
stc
mov
shll
cmp
mov
cmp
xchg
add
lods
dec
or
je
mov
insl
les
iret
pop
pop
sbb
xor
jnp
sub
lahf
pop
xchg
shrb
jb
jo
jp
jnp
mov
mov
pop
sub
xor
jbe
aaa
test
sarl
out
xchg
cli
mov
cltd
pop
jecxz
ret
shl
push
aas
imul
out
xor
pop
je
or
ja
loope
into
std
xchg
mov
je
jb
in
inc
pop
jne
mov
bnd
jp
jecxz
jne
jno
inc
mov
mov
cltd
and
pop
into
movsb
ljmp
clc
popf
add
mov
and
test
sti
popf
call
mov
or
xor
xor
cmp
push
push
leave
pop
mov
inc
insb
sub
fdivrs
inc
test
mov
icebp
outsb
sub
adc
dec
adc
push
inc
outsl
xor
sahf
test
sarb
add
in
and
or
mov
mov
psubusb
or
mov
push
out
mov
rcrb
jmp
les
sbb
andb
das
push
or
dec
js
cwtl
mov
insb
divl
mov
sbbb
adc
fsubs
pop
sub
push
test
test
aas
push
sbb
cmc
gs
add
movsb
or
adc
mull
ljmp
xchg
add
sbb
insb
jns
leave
jb
aad
loope
cmp
pop
jae
out
aaa
sbb
ja
xor
enter
shlb
mov
dec
sbb
and
push
shlb
mov
jne
ja
out
movsb
inc
adc
icebp
pop
pop
inc
fildl
dec
xor
ret
enter
cmp
push
pushf
inc
pop
xchg
lret
jnp
decl
movsl
adc
mov
in
jl
pop
aad
xchg
sub
mov
imul
aad
into
dec
in
aaa
pop
test
pop
imul
ror
jnp
xor
bound
cld
push
dec
or
filds
sbb
jmp
aaa
sbb
jl
or
xlat
sub
push
faddl
lds
daa
mov
pop
dec
xor
adcl
popa
push
sub
in
pop
push
movsb
pop
fdivrs
lock
scas
jmp
divb
sbb
mov
mov
mov
es
and
fiaddl
test
push
push
sub
test
mov
les
cmpsb
out
and
sub
push
repz
cmp
xlat
push
cltd
push
mov
sbb
adc
mov
mov
cli
jo
or
sbb
call
mov
xchg
push
fwait
jle
or
sbb
pop
sti
xor
popa
in
cmpsl
inc
lret
or
add
in
aad
adc
adcb
jo,pt
pop
movsl
pop
out
shrb
pop
ja
and
sub
sub
stos
cmp
es
jmp
iret
roll
icebp
and
rcrb
or
fsubr
inc
stos
sbb
jge
lock
push
mov
ds
loopne
loope
mov
xorb
pop
test
push
cmpsl
ds
jmp
inc
fistl
pop
scas
jg
pop
aaa
movsl
mov
stc
cld
js
out
cmpsl
or
mov
dec
and
sti
cs
arpl
xchg
pop
stos
mov
or
cmpsb
aas
mov
mov
dec
addr16
aaa
mov
push
sbbb
in
xchg
icebp
mov
bound
adc
pusha
push
mov
adcb
das
shrl
add
clc
into
popa
aaa
mov
cmc
mov
outsl
lods
ss
ficoms
cmp
cmc
adc
cltd
mov
xchg
fnstcw
data16
subb
inc
lods
add
jo
adc
std
and
insb
divl
sub
fidivrs
mov
into
loop
mov
repnz
cmp
add
sti
test
cmp
or
pop
cmp
mov
inc
stos
mov
mov
imul
xor
or
mov
sbb
push
jns
mov
sub
sbb
lods
fidivs
pop
mov
fcoml
das
stos
cmp
mov
push
or
mov
test
push
jae
das
gs
test
pop
in
adc
lea
ja
lods
dec
cmp
dec
push
xor
ljmp
push
push
cwtl
xchg
push
xchg
sub
bound
idivb
xchg
scas
bound
xor
in
dec
dec
inc
mov
in
subps
ljmp
jbe
insl
popf
mov
fsubl
bound
in
adc
inc
dec
mov
xchg
xchg
rorb
pop
adc
and
test
in
adcl
adc
or
rclb
loopne
ljmp
mov
sbb
sbb
pop
inc
rcl
pushf
dec
xor
js
push
jae
lods
data16
dec
scas
mov
andb
mov
int
inc
fs
push
adc
dec
dec
insb
inc
pop
cmp
cmpsb
cmp
cmp
js
hlt
mov
sarb
clc
push
add
movsb
xor
jmp
mov
les
pushf
mov
inc
jecxz
push
pop
cmp
jnp
out
mov
dec
mov
jb
sub
mov
hlt
mov
jge
clc
fidivl
fdivl
insl
cmpsl
sub
pushf
lahf
jp
pop
inc
xchg
clc
pop
inc
call
dec
iret
xchg
jecxz
enter
adc
mov
popf
call
shlb
jae
cmp
lret
mov
push
xor
sbb
jnp
xor
mov
insb
mov
adc
inc
fnstenv
or
fstl
push
mov
out
dec
lock
nop
pop
in
test
xchg
in
aas
push
outsb
bound
add
leave
mov
mov
mov
pop
lcall
clc
xchg
loop
adc
decl
adc
adc
into
stc
pushf
imul
sub
sub
or
mov
rcll
pop
or
rclb
and
pop
in
xor
outsl
push
loopne
or
js,pt
mov
dec
ret
aaa
add
or
into
test
cs
scas
call
je
popf
xlat
cwtl
cli
sbb
cmp
jno
daa
sbb
scas
jae
fsubrl
daa
add
inc
imul
out
and
sahf
mov
dec
or
or
mov
ss
mov
and
cmp
scas
stos
bound
loopne
jo
sbb
xor
xlat
outsb
cli
xchg
adcb
pop
and
inc
int3
dec
xchg
inc
push
mov
movsb
insb
sub
fnstsw
loop
pushf
negb
cmp
dec
mov
mov
cmp
jp
mov
xchg
mov
add
icebp
adc
lods
fildl
loope
push
sbb
mov
outsb
pop
aaa
and
shrb
mov
je
sti
sub
jl
lahf
mov
fsqrt
xchg
test
pop
outsl
rcll
loop
mov
rcrl
xor
xor
daa
les
sbb
or
rol
ja
sub
mov
loop
mov
outsl
mov
ds
mov
xchg
mov
es
cwtl
pop
popf
shlb
pop
ja
fidivl
mov
pmullw
mov
mov
stos
in
mov
shll
sub
mov
add
xchg
jo
mov
sub
ds
in
ljmp
inc
sarb
js
mov
fdivl
push
push
repnz
cld
aam
and
adc
inc
inc
pop
cltd
dec
jbe
imul
add
aaa
nop
mov
stos
ja
adc
cmpb
aas
pop
jle
cld
scas
jmp
movsb
sbb
jmp
mulb
pop
or
mov
xor
mov
sbb
int
negb
jl
adc
push
mov
sbbl
cwtl
jecxz
sbbb
adc
pop
cmpsl
xchg
adc
aam
hlt
mov
cmp
ljmp
lret
scas
xor
lea
stos
sbbb
pop
dec
mov
xchg
adc
cwtl
jbe
cltd
push
mov
cmpl
fcmove
mov
out
jno
sbb
add
testb
testl
pop
mov
mov
rol
pcmpgtb
fcomps
shlb
pop
mov
lea
fadd
int
ljmp
inc
mov
rclb
arpl
imul
nop
cmp
inc
add
cmp
jne
and
xchg
sub
jl
lock
lahf
daa
jo
stos
in
mov
dec
lcall
int
push
hlt
lret
in
jmp
xor
pushf
jnp
repz
xchg
stos
aas
xchg
int3
arpl
je
or
pop
out
dec
shrb
push
ret
xchg
sub
out
testl
pusha
push
jmp
call
rclb
mov
fwait
and
dec
cmpl
fwait
mov
lods
and
cmp
xchg
hlt
cmp
cmp
jmp
dec
xchg
loop
dec
nop
ss
pusha
imull
imul
xchg
cmpb
mov
sub
jecxz
mov
pop
call
cmpsl
in
test
pop
mov
lcall
jecxz
inc
xchg
popf
push
outsb
les
shl
pop
lret
cld
cmp
xchg
jp
mov
bound
imul
inc
roll
mov
or
pop
push
add
xchg
mov
mov
pop
outsb
add
test
xor
sahf
addr16
mov
sbb
test
or
pusha
lds
sub
mov
imul
pusha
jns
xchg
movsl
dec
dec
xchg
cmp
mov
ficoms
adc
call
and
pop
adc
lret
addr16
insl
xchg
rol
jnp
shr
scas
movsl
ja
loope
mov
adc
pop
mov
cmp
cmpsl
insb
sub
inc
testl
xchg
dec
addb
push
and
mov
je
sbb
fsubrs
or
and
outsb
std
mov
jo
push
mov
sbb
mov
add
cmp
jne
sahf
cmpsb
push
add
mov
leave
jb
adc
push
lea
xor
dec
sub
imul
sbb
pusha
xchg
mov
cmp
ja
icebp
shl
push
jbe
push
inc
jae
mov
jmp
pop
stos
mov
ds
fucomp
das
dec
in
notb
fldt
push
movsb
xor
inc
sahf
ficoml
cmp
jbe
arpl
pushf
insl
sub
hlt
sub
lods
sub
pop
push
and
test
in
cmpb
xor
pushf
sahf
mov
xor
out
pop
out
outsl
mov
jl
push
xchg
add
arpl
mov
push
xor
jb
test
nop
pop
mov
mov
mov
cmp
fdivl
hlt
mov
call
cmp
insb
lods
pop
jge
push
jle
cmp
xor
mov
insb
add
bound
push
jmp
out
ret
xor
mov
add
push
jg
xor
jne
mov
sub
xor
mov
in
jne
ret
mov
addr16
aas
bound
in
repnz
movb
movsl
arpl
adc
mov
jg
push
enter
stc
out
xchg
sub
xor
cmp
jge
in
jo
and
sub
pop
scas
out
hlt
call
lret
cmpsb
xor
je
sbb
hlt
jl
icebp
outsl
aas
mov
lret
sub
mov
loop
dec
loop
sub
mov
ljmp
dec
xor
loope
sub
pushf
and
xor
add
fistpl
ds
push
lods
jbe
gs
fsubl
mov
sbb
xlat
cmp
in
pop
clc
pusha
clc
xor
adc
pop
mov
mov
and
pop
fcmovnb
mov
imul
fsubrs
xchg
or
int3
stos
popa
sti
adc
dec
inc
icebp
dec
test
xchg
shlb
mov
dec
pop
fdivr
fsubrl
add
add
sub
xchg
xor
sbb
shlb
loop
in
sahf
in
pop
mov
imul
sub
lock
jne
mov
adc
jmp
cmp
fidivl
ficoml
das
pop
add
inc
sub
add
std
sti
sub
std
scas
jb
pop
or
pop
push
push
imul
dec
adc
jg
push
or
and
sbb
data16
sub
cmp
fidivrs
pop
nop
sbb
dec
add
sbb
lods
jge
test
push
into
bound
adc
rol
aaa
push
pop
bound
in
mov
test
pop
sbb
xchg
pop
add
inc
dec
or
out
aad
in
aad
mov
loope
xor
jle
data16
and
mov
pop
mov
xor
xor
jmp
mov
xor
ljmp
cmp
shr
xchg
jb
out
lret
ret
or
xor
repnz
dec
and
out
xchg
fisubs
stos
inc
cmp
sub
aad
inc
fcomps
xchg
push
fsubrs
stos
xchg
scas
lods
mov
inc
dec
movsb
and
xor
jnp
xchg
orl
add
mov
enter
mov
push
push
imul
adc
inc
xchg
or
xchg
lret
gs
xchg
scas
add
shr
push
and
jne
jno
rcrb
insb
dec
mov
cmp
inc
fdivs
enter
rclb
lcall
scas
ret
test
sbb
aas
pop
lcall
jmp
addr16
pop
rolb
jmp
inc
adc
jae
fcmovb
aas
stos
aaa
jb
mov
jae
sub
inc
xor
jmp
xchg
ljmp
adcl
xor
bound
lods
and
outsb
adc
fiadds
movsb
sbb
push
mov
jns
pop
testb
mov
push
mov
add
push
xchg
mov
test
xor
xchg
mov
out
clc
or
mov
ret
and
add
das
ljmp
add
lock
push
push
addr16
sbb
jbe
ljmp
cmp
pusha
stos
jp
or
adc
xor
mov
into
cmp
inc
mov
insb
dec
fimull
flds
dec
sbb
loop
jns
dec
or
inc
lret
lods
mov
pop
movsl
in
push
loopne
les
jb
pop
repz
leave
fwait
xchg
cmp
dec
fisubrs
push
imul
iret
fstps
fsts
or
addr16
sbb
and
dec
fstl
push
push
ja
jne
cmpsb
sbb
lcall
les
mov
roll
mov
add
fdiv
dec
xchg
jbe
inc
aad
and
cmp
mov
add
jno
jae
xchg
jnp
dec
cmp
pop
jle
cmp
sbb
cmp
cmc
cmp
adc
mov
inc
stos
adcb
xchg
xchg
jge
bound
fwait
jmp
mov
loop
cli
and
mov
clc
outsl
jae
lret
add
jg
pop
add
jo
imul
dec
pop
movsl
loopne
mov
imul
psllw
cwtl
add
xor
lods
cs
mov
inc
jns
fbld
addr16
pop
xchg
leave
pop
movsl
sti
mov
xor
fmuls
mov
adc
test
shll
aas
push
daa
add
pop
cmp
fildll
add
push
int
fldcw
xchg
fbstp
mov
imul
xor
int
and
sbb
dec
fisttps
aaa
jg
sub
xor
push
dec
cmp
clc
adc
and
mov
and
jae
lock
xor
lods
fldl
movsl
inc
out
pop
cmp
out
dec
pusha
subb
jae
leave
mov
mov
push
mov
pusha
pcmpgtd
push
scas
ret
cmpsl
mov
xor
mov
add
dec
daa
cmp
ret
mov
mov
leave
mov
andb
mov
push
push
pushf
scas
stos
inc
push
enter
push
mov
cli
xchg
xchg
mov
call
jge
je
jmp
mov
xor
or
sarl
mov
cmp
cmpsl
add
lea
test
pop
xor
icebp
insb
dec
popf
cltd
std
fistpll
pushl
jae
enter
push
aas
shll
pop
nop
fdiv
mov
aad
adc
rclb
insb
adc
jns
les
iret
and
bnd
sub
lea
sti
out
xor
scas
xchg
rcrl
sbb
push
sbb
stos
sub
jmp
sbb
adc
mulb
push
cmp
mov
cmp
add
xor
xorl
mov
inc
popa
mov
test
into
fisubl
sbb
add
jae
lahf
inc
jmp
rcr
orl
cmp
pop
out
outsl
ror
pop
cmp
sub
mov
rorl
fistps
lock
dec
cmp
cmp
inc
cli
add
sbb
pop
xchg
xlat
imul
es
lds
lcall
popf
pop
xchg
cmc
mov
testb
mov
pop
lahf
das
icebp
or
and
into
sub
push
scas
inc
dec
rcl
inc
mov
loop
hlt
lret
es
insl
roll
xlat
mov
and
add
mov
sbb
pop
cmp
aam
loopne
dec
mov
mov
mov
jns
in
subl
aad
mov
mov
mov
sub
mov
pop
mov
shlb
fisubs
cmp
push
cmpsb
push
ss
jnp
mov
mov
insb
dec
mov
pop
lret
cmp
cltd
mov
inc
popf
xor
ror
outsl
sub
test
int
xor
or
adc
jns
push
mov
stos
xchg
add
ljmp
call
rcl
scas
sbb
in
adc
pop
cmc
xor
aam
push
adc
jecxz
xchg
xchg
pusha
jmp
loopw
or
mov
add
rcll
xchg
sub
add
pop
cmp
cmp
pop
lock
outsl
push
aam
and
icebp
inc
bound
repnz
out
xchg
mov
inc
push
outsl
add
xchg
fwait
mov
xor
xor
stos
dec
push
cltd
fs
out
imul
int3
adc
pop
aam
ja
jl
leave
jecxz
fldl
push
cld
pop
fs
pushf
loope
jp
mov
lret
push
nop
mov
jmp
ret
mov
ret
jne
push
mov
mov
aam
lret
jg
adc
out
xchg
out
shlb
icebp
outsb
sub
out
or
mov
cltd
bound
fs
jp
dec
into
push
notl
loopne
mul
mov
push
pop
les
pop
cli
mov
cli
jno
mov
adc
adc
lahf
fcoms
add
jg
sbb
mov
pop
movb
ss
in
out
push
ja
push
cmp
mov
jno
sbbb
xor
or
mov
mov
inc
testl
int
xor
push
mov
xor
inc
pop
aas
push
out
or
sub
dec
and
xor
jle
jo
mov
into
cmpl
inc
cmpsl
dec
mov
fbstp
dec
insb
les
arpl
arpl
ret
les
jns
testb
pusha
outsb
add
mov
fcompl
out
cli
or
aaa
aaa
stos
addb
push
sahf
xor
or
mov
pop
lcall
lods
dec
rorb
pop
rcrb
shll
push
movsb
push
mov
sub
lds
pop
cmp
xchg
out
movsb
mov
shll
inc
pop
loopne
leave
lret
mov
sahf
out
dec
clc
mov
dec
mov
icebp
insb
fiaddl
aad
xor
outsb
aad
xchg
jle
mov
push
loop
jnp
scas
mov
pop
in
pop
call
mov
fiadds
rolb
inc
loop
push
mov
int3
mov
scas
in
pushf
ds
in
push
lcall
mov
mov
clc
jp
jae
call
cmp
data16
push
imull
scas
ja
aas
jl
fldenvs
dec
fcompl
fidivs
loop
lahf
sbb
sbb
jbe
cmp
lds
rolb
pop
fistps
cmp
in
outsb
or
test
fs
leave
xor
inc
incl
sbb
fadd
mov
aad
push
arpl
inc
xchg
cmp
sahf
ret
xor
add
push
pop
or
cs
fcompl
mov
cmc
shrb
sbb
add
call
nop
aaa
pop
clc
dec
add
and
sarl
adcb
sbb
fs
mov
add
into
xchg
mov
push
xchg
ss
movsl
push
or
sub
outsl
mov
int3
das
mov
mull
arpl
loop
mov
pop
mov
sub
scas
mov
lahf
xor
test
stos
pop
or
ret
inc
push
stos
lcall
add
fcmovnb
push
mov
loopne
aad
ret
pop
dec
cmc
jae
sub
mov
mov
stos
jg
popf
sub
nop
pop
test
pop
adc
xlat
and
adc
mov
push
cmp
xchg
aaa
push
repz
imul
fidivrl
cmp
xchg
sub
lcall
xchg
mov
inc
setbe
or
jp,pn
add
fdiv
pop
push
push
mov
inc
das
pop
fnstsw
xchg
jg
cmp
and
inc
ret
sub
pop
scas
add
lea
rcl
mov
mov
pop
mov
jl
mov
pop
inc
in
pusha
cwtl
cmp
xlat
mov
or
movl
dec
inc
cltd
mov
sbb
insl
xor
push
sti
in
sub
xchg
mov
xor
out
ds
and
xchg
scas
pop
js
je
cltd
jb
sti
add
js
add
shll
mov
das
xchg
add
push
stos
mov
popa
lea
or
inc
xchg
outsb
sub
repnz
es
mov
repnz
xor
sbb
xchg
mov
fwait
add
movsl
aad
fildll
cmpsb
cmp
adc
fdivrp
xor
mov
cmp
and
add
hlt
andb
add
ja
nop
std
push
clc
std
sub
movsb
sbb
out
ds
and
outsb
nop
push
fstps
mov
jecxz
jne
xchg
andl
or
in
xchg
in
lock
lret
lret
pop
out
adcl
adc
in
push
repnz
sub
cmpsl
and
daa
sbb
push
mov
les
jbe
jmp
push
dec
das
adc
inc
push
add
stos
pop
lea
inc
fdivrl
loope
ja
cmp
popf
rolb
jne
pop
arpl
xor
push
cltd
insb
adc
fcmovu
sub
and
inc
mov
popf
out
daa
cmp
mov
xchg
jle
incl
ss
fs
ret
sub
inc
mov
in
gs
ds
xor
or
pop
hlt
adc
or
hlt
xor
inc
jmp
xchg
les
test
mov
ret
scas
data16
and
push
cmp
pop
frstor
mov
or
loopne
inc
and
fstl
sbb
inc
adc
bound
js
shlb
dec
imul
rorb
pop
nop
aad
imul
lods
lock
mov
cmc
ret
dec
inc
and
bound
cs
jmp
std
xor
push
lods
pop
inc
cmp
movsl
pop
mov
nop
icebp
mov
or
sub
sbb
scas
cmpsl
mov
test
movsb
and
pop
dec
outsl
and
xor
cmp
inc
aaa
pop
inc
iret
into
and
and
xor
sbb
outsl
jecxz
lea
cmp
out
push
jmp
push
ss
int
dec
mov
adc
ljmp
add
push
ljmp
cmp
mov
adc
or
pop
loope
and
mov
scas
imull
daa
mov
push
push
pop
stos
mov
push
jne
xor
mov
sbb
rcll
mov
jecxz
or
fcoms
ljmp
ljmp
cmp
xlat
movl
js
loopne
dec
daa
cs
rcrl
mov
dec
mov
xchg
mov
gs
es
mov
mov
pop
and
testl
inc
adc
inc
cmp
out
push
mov
fsubr
jo
and
imul
mov
shll
das
mov
jmp
test
mov
jmp
fadds
repnz
neg
stos
lds
aam
add
ror
je
out
mov
jp
std
pop
fldcw
or
and
adc
popf
stc
pop
shlb
out
add
jmp
ficoml
divl
je
mov
mov
or
testl
imul
lds
mov
xorb
pop
fadd
movsl
sub
xor
mov
repnz
ljmp
je
push
cmpsb
jl
aaa
sahf
aam
xchg
mov
icebp
or
adc
mov
iret
gs
and
xor
push
and
loope
or
jge
out
lods
sbb
inc
lret
outsb
enter
mov
jge
mov
mov
jp
bound
subb
jl
push
pusha
icebp
xchg
xchg
lcall
push
addl
adc
in
int
push
idivb
pushf
fidivrs
int3
test
jp
adc
ret
lock
aam
scas
jno
out
pop
mov
lea
gs
jae
or
push
mov
add
test
cli
push
rol
push
fs
addl
pop
loop
ficoms
sti
xchg
xor
sar
ret
mov
mov
gs
xchg
test
lock
cmp
adc
movsb
pop
xchg
sub
cli
mov
and
push
jmp
inc
xchg
fadds
int
jae
push
cwtl
repz
fbld
pop
jle
adc
jbe
dec
sbb
stos
cmp
nop
in
leave
push
lods
mov
data16
out
add
and
lcall
je
mov
pop
test
dec
mov
lahf
mov
sbb
dec
int3
int
sbb
xor
pushf
das
fwait
lods
pushf
pop
dec
mov
fnstenv
std
mov
jns
dec
add
gs
ja
aaa
lcall
cmp
push
push
push
push
pop
mov
add
popf
cltd
icebp
in
daa
mov
movsb
mov
lcall
xchg
fnstcw
loope
fadds
and
sarl
idiv
in
sub
movsb
shrl
pop
xor
dec
sub
loop
mov
cmc
lret
cmp
scas
rorl
dec
pop
push
fidivrl
lds
mov
pcmpeqd
jl
mov
inc
xorl
repz
jp
adc
outsl
dec
inc
fnstsw
push
es
repz
mov
dec
incb
lods
pop
xchg
ja
ret
or
loop
pop
cmp
cmp
cmp
jno
dec
ds
cmpb
scas
fdivp
outsb
les
stc
call
std
jae
push
ror
lods
xchg
pop
stos
cmpsl
xor
inc
rorb
movsl
jecxz
pop
adc
testl
rclb
aaa
push
push
mov
add
repz
fnstenv
jp
js
testl
lea
add
cmp
lret
mov
add
repz
adc
and
inc
xor
cld
out
outsb
jp
jo
pusha
gs
in
inc
shll
pop
dec
inc
in
sub
lcall
aaa
adc
sbb
jns
jecxz
in
mov
bound
ljmp
xchg
ljmp
add
xchg
and
cmp
lret
pop
add
inc
fwait
add
pop
imul
in
push
rclb
mov
sahf
pop
sub
call
xchg
xorl
cltd
push
inc
testb
dec
stc
popf
jl
mov
lds
adc
push
ljmp
sub
lods
pop
loopne
mov
ss
xchg
daa
mov
mov
pop
mov
xor
pop
sub
xchg
stos
cs
inc
js
call
dec
xlat
std
add
loop
and
cli
mov
lock
scas
orl
cmpl
cmp
popa
adc
data16
daa
or
dec
and
lods
mov
sub
iret
pusha
sbbl
mov
cwtl
daa
lahf
addr16
xchg
lods
movsb
mov
dec
rorb
adc
fnstcw
sub
daa
test
cmp
or
jecxz
test
out
imul
and
cmp
sbb
sbb
dec
adcl
pusha
scas
int3
hlt
pop
cmc
push
inc
fiaddl
or
dec
cli
xchg
cmp
mov
push
or
int3
leave
pop
ja
ljmp
lock
mov
xchg
out
pop
loop
int3
leave
pusha
mov
movsb
scas
addl
jo
or
cmp
insl
mov
shl
fst
mov
push
cmp
insl
sti
fs
movb
xchg
push
std
push
ljmp
jno
loop
jne
sbb
dec
mov
dec
jg
sbb
test
sub
xchg
inc
fwait
or
cmpsl
sub
incl
push
mov
cmp
std
fwait
sbb
negb
sub
mov
sbbb
out
les
push
data16
ds
inc
into
cmp
dec
lcall
popa
cmpsl
pop
jbe
leave
add
scas
pop
xor
mov
xor
dec
movsl
mov
pushf
sub
inc
movw
sbb
add
lahf
xor
pusha
stos
cmp
enter
fildl
dec
mov
mov
push
inc
push
mov
xor
sub
mov
push
adc
les
jno
mov
test
mov
cli
pushf
es
mov
or
int
sub
shrl
loope
enter
insb
outsb
inc
mov
add
test
xchg
xor
cmpsb
popa
lret
push
js
bound
lods
leave
cmpsl
add
std
repnz
mov
push
mov
outsl
iret
outsl
ret
loope
xchg
dec
data16
adc
adc
pop
mov
mov
mov
rcl
adc
xchg
jns
inc
arpl
dec
arpl
lock
sbb
jecxz
push
adc
aam
test
and
sbb
pop
cmp
ljmp
xchg
mov
pop
ljmp
sub
nop
negl
add
and
pushf
fisubl
daa
or
push
xlat
jo
jle
sub
push
sub
dec
in
inc
add
xor
mov
cmp
push
hlt
push
or
dec
scas
xchg
mov
push
dec
out
jecxz
cwtl
and
in
jne
in
and
mov
push
lock
mov
rorl
adc
insl
ljmp
dec
and
inc
xchg
jle
into
or
mov
icebp
popf
lods
and
sub
fwait
sar
dec
mov
scas
and
cltd
adc
imul
xor
mov
inc
fldln2
rorl
adcb
lret
mov
insb
inc
sbb
out
sub
insb
add
loope
inc
mov
stos
and
push
xor
mov
mov
ret
jnp
add
cmp
fucomip
test
in
movsl
shll
lock
movsl
addr16
ja
cltd
sbb
sbbb
add
dec
leave
push
mov
push
repz
mov
push
cli
xchg
push
or
aaa
add
and
pop
mov
cmpsb
mov
sub
mov
ds
imul
mov
sub
les
sub
or
mov
adc
rcrb
sbb
jno
lock
xchg
fsubrp
lahf
fs
jmp
mov
test
icebp
inc
pop
mov
lea
and
cwtl
and
andl
mov
notl
lods
out
pop
push
outsl
sbb
test
cmp
mov
test
repz
aas
subb
aas
nop
mov
mov
mov
lods
xchg
loopne
xchg
mov
test
popf
imul
push
inc
icebp
ret
add
pop
xor
or
jg
sbb
mov
cmpsb
cmp
addr16
mov
nop
scas
push
cli
mov
aas
rorl
fmul
jl
sbb
sub
cmp
xchg
test
fimull
mov
ljmp
jb
adc
cltd
sbb
xchg
pusha
int
push
inc
mov
int
fisubrs
pop
pop
imul
mov
cmp
pop
and
loope
dec
fwait
xor
and
loope
daa
mov
xchg
push
mov
push
jbe
mov
cmpl
sahf
mov
xchg
movsl
leave
mov
add
jmp
xchg
ficoml
push
adc
jnp
or
mov
cmpsl
xor
test
jecxz
xchg
fwait
jne
push
push
sbb
cmp
bound
lcall
lods
call
pop
lods
sbb
aam
das
mov
pushf
repnz
sbb
mov
shrb
rclb
xchg
aad
andb
jo
xor
lahf
and
lds
jle
lds
cmp
xlat
pop
addr16
fidivl
shlb
jl
jmp
or
ss
shlb
xchg
mov
rcl
pop
add
add
inc
dec
outsb
das
sti
hlt
xor
adcb
pop
repz
cwtl
mov
inc
pushf
mov
adc
les
jge
mov
mov
jecxz
je
mov
hlt
push
mov
jne
imul
xorb
cmp
pop
add
jns
mov
fsubp
ljmp
lea
push
sub
sbb
cltd
std
insb
cltd
ja
lret
or
push
imul
adc
sbb
jae
fucomi
mov
mov
sbb
xchg
and
cmp
out
mov
add
lock
push
jmp
xchg
insb
ret
adc
dec
mov
and
cmp
ss
cld
lcall
cltd
je
lds
sbb
sti
adc
push
mov
inc
sahf
adc
adc
inc
in
adc
sbb
mov
dec
adc
mov
fsubrl
pop
inc
std
scas
int
or
xlat
mov
xchg
jb
xlat
mov
loopne
pop
dec
cmp
cmp
jne
repnz
xchg
and
jl
test
dec
mov
out
rclb
pop
rcrb
cmc
aas
or
pushf
push
lea
sarl
fxch
gs
hlt
mov
insl
mov
sub
add
rol
pop
and
shlb
adc
push
jbe
cltd
pop
xorl
adc
jmp
roll
jne
mov
add
lret
add
sti
cmp
push
ficompl
xchg
cmp
lea
int3
push
adc
add
push
ds
push
mov
test
shl
nop
pop
cmp
pcmpeqw
mov
dec
inc
mov
sub
push
leave
pop
xlat
mov
mov
fsubl
stos
rcll
fdivrs
mov
mov
icebp
sbb
data16
cld
add
and
sub
aaa
pop
in
ja
push
mov
push
mov
jmp
jne
pop
jg
push
pushf
or
adc
xchg
xchg
flds
jp
jmp
pusha
notl
push
es
and
mov
repz
add
pop
mov
fidivrl
jmp
mov
dec
loopne
les
call
and
outsl
push
mov
or
adc
aam
xchg
jns
hlt
mov
mov
sub
insb
cld
shl
jp
int
mov
mov
and
in
popf
jo
adc
into
ds
outsb
mov
add
and
push
and
adc
xor
push
pop
out
gs
pushf
xorb
dec
sbb
cmpsl
imul
dec
jae
iret
mov
jb
mov
fiaddl
das
daa
repnz
pop
add
cmp
jp
mov
lds
pusha
inc
xchg
popa
dec
rorl
xchg
test
add
dec
inc
data16
mov
mov
dec
fstps
sub
dec
out
leave
cltd
xchg
outsb
dec
dec
inc
cmp
adc
and
xor
repz
inc
and
xor
imul
jle
ja
pop
stos
pushf
sbbb
lret
sub
lea
rcrl
fsubl
shrb
mov
jno
mov
int3
cltd
les
push
dec
xchg
xor
push
inc
out
aaa
mov
cmpsl
and
dec
xchg
mov
cmp
cmp
mov
sub
mov
push
out
mov
inc
iret
loope
aam
push
xchg
mov
xchg
int3
enter
or
pop
inc
addr16
lahf
push
loope
push
or
sbb
mov
dec
popf
sbb
mov
cld
xchg
in
cmp
and
inc
les
lret
popf
sub
cltd
and
mov
xchg
add
in
add
daa
mov
cltd
xlat
dec
pushf
mov
out
xor
outsl
push
mov
cmp
push
or
adc
addr16
sbb
cli
and
cld
movsl
mov
push
idivb
cmp
xchg
add
jo
jo
lods
dec
sub
and
push
add
addr16
ret
not
pop
dec
popa
pop
inc
sbb
xchg
adc
jb
inc
mov
xchg
inc
clc
adc
into
sbb
ds
arpl
incb
pop
in
jecxz
les
clc
pop
and
cmp
add
repz
xor
bound
mov
data16
jno
push
jmp
in
mov
push
dec
lcall
popf
push
cmp
adc
adc
lods
and
xor
mov
jne
lea
pushf
cmp
xchg
notb
sbb
enter
subl
int
add
out
inc
mov
or
sbb
fidivs
insl
and
sbb
inc
mov
ja
xchg
add
mov
push
xor
std
test
and
scas
add
sub
cmc
fcomps
adc
cmp
out
mov
sbbb
xchg
pusha
mov
addr16
stos
and
pop
jnp
aaa
jne
pusha
in
insl
flds
mov
xor
mov
aaa
inc
mov
je
call
in
das
iret
mov
stos
push
scas
pop
stos
in
or
sbb
xchg
into
das
repz
pop
movsl
and
in
inc
fsubrs
or
imul
cmp
cld
sub
pop
aam
xchg
mov
mov
fs
sub
popf
pop
hlt
ret
loop
mov
inc
xlat
sbb
lock
pop
mov
mov
sti
or
jecxz
in
adc
xchg
jl
sub
fists
nop
lds
js
nop
test
rcll
mov
or
leave
sbb
lods
xor
into
mov
mov
xor
xchg
scas
test
jno
add
mov
mov
dec
cmpsb
sti
pop
mov
cmp
mov
xchg
push
push
mov
loopne
shl
add
push
sub
jle
adc
mov
ret
or
cmp
notb
sbb
fisubl
nop
or
inc
cmp
fnstcw
int
popa
jno
mov
call
and
pop
les
add
pop
aad
inc
inc
es
rep
dec
movsb
xlat
int3
pushl
gs
inc
jecxz
int
sbb
imul
fidivl
out
lods
push
cld
jns
mov
adc
or
std
pushf
dec
mov
add
imul
loop
sbbb
int
sub
sub
sub
popf
lds
and
xlat
dec
xchg
test
xchg
xchg
fsubr
int3
out
mov
sub
jle
or
dec
stos
aas
orl
popa
sbb
fwait
sub
jb
jg
stc
aaa
push
cmp
mov
pop
xor
ljmp
sbb
pop
lods
ljmp
mov
ret
subb
cmp
pop
push
notb
out
daa
fmulp
cld
cmpl
xchg
sub
inc
pop
ret
mov
sub
add
pushf
shll
in
sahf
ss
sub
mov
xchg
test
cmpsl
jns,pt
mov
mov
inc
inc
stc
mov
jge
pop
in
cs
push
js
lods
dec
rcrb
cmp
inc
sub
push
add
jle
stos
mov
sub
cmc
xchg
movsl
daa
arpl
mov
xchg
mov
jmp
scas
shl
mov
lods
adc
or
sub
push
aam
dec
loop
das
adc
movd
shll
daa
xlat
sahf
and
jno
ret
ja
push
and
mov
es
test
into
or
ljmp
mul
outsl
sub
clc
adc
mov
dec
aad
adc
test
aad
daa
lret
jae
ret
lods
int
xor
mov
add
fimull
fistps
jns
inc
lret
sbb
mov
jecxz
dec
rorl
outsb
ret
pop
repnz
fcomi
dec
pushf
mov
pop
mov
mov
cmp
inc
inc
sar
scas
ds
stc
sbb
dec
les
test
add
stc
cmpl
add
adc
inc
popf
decl
push
mov
fistl
and
xlat
adc
mov
xor
pop
jle
jl
movsl
andl
fbstp
sbb
and
pop
sahf
fstpt
jge
sub
std
add
scas
jg
push
mov
cmp
inc
push
or
test
sbb
jmp
cmp
test
repnz
cltd
ficomps
jmp
cmp
les
mov
fidivs
push
call
int3
lahf
outsl
dec
sbb
mov
cmpsb
loope
pop
lcall
fwait
xlat
imul
mov
int
je
test
psllq
xchg
aam
addl
daa
jb
fistl
jo
push
lods
inc
lcall
jmp
outsb
xor
inc
xlat
aaa
jnp
pop
cmp
inc
dec
add
xor
mov
push
xor
call
or
lcall
and
xchg
int
mov
push
jmp
ljmp
outsl
aam
pop
mov
add
mov
imul
dec
jg
jbe
leave
dec
lahf
push
pop
popa
jae
pop
icebp
in
call
xchg
mov
and
inc
popa
pop
in
cbtw
das
sahf
in
addr16
lock
rcl
lret
mov
les
xchg
sti
fwait
out
lods
js
sahf
mov
push
mov
mov
dec
mov
push
iret
mov
push
mov
incl
out
out
cli
fsts
jne
push
mov
mov
jb
call
or
scas
cmp
loope
lcall
adc
loop
dec
xchg
arpl
mov
jmp
aaa
inc
xlat
push
je
jl
cmc
mov
sbb
stc
or
aaa
and
inc
sbb
or
mov
nop
jae
dec
xorl
fwait
xor
fsubl
mov
sbb
lahf
mov
pop
sarl
inc
enter
inc
cmpsl
xchg
das
xchg
inc
xchg
fldcw
je
xor
es
mov
fwait
xor
sarl
imul
xchg
lahf
hlt
push
inc
cli
push
ds
mov
xchg
dec
loope
and
inc
jg
insl
js
xchg
sub
cltd
insb
mov
nop
add
mov
inc
xlat
and
adc
je
jl
pop
call
iret
jns
sub
mov
sbb
dec
pushf
cmp
imull
push
mov
inc
jecxz
outsb
cmp
cltd
adc
pop
icebp
movsl
pop
cmp
insb
xchg
and
push
mov
sub
push
mov
push
cld
mov
outsb
movsb
mov
stc
lods
xor
scas
out
inc
jge
dec
cwtl
cmp
lods
daa
hlt
call
cmpsb
xor
xchg
clc
loop
dec
jne
sub
test
lea
sahf
das
xor
jge
cmp
call
xchg
or
bound
lcall
mull
sbb
cmp
mov
cwtl
xorb
jl
mov
push
mov
imul
stos
xor
in
mov
cli
dec
and
mov
pusha
out
cltd
idivl
lahf
xchg
inc
fcoml
cltd
lahf
jl
mov
dec
adc
orb
daa
push
jmp
iret
ljmp
pusha
jg
sbb
mov
fidivl
mov
das
psllq
sbb
adc
mov
push
mov
jle
fnstsw
sbb
lcall
rorl
out
fmul
lea
dec
rol
jl
xchg
pop
sub
cmp
sub
inc
jmp
ja
inc
ficoml
lret
add
xchg
aas
call
dec
dec
mov
dec
dec
es
pop
jo
jns
inc
addb
fnstenv
and
mov
jge
inc
adc
sahf
jge
mov
jbe
fucom
jmp
insb
push
jae
out
daa
data16
push
lret
sbb
repz
mov
push
aas
add
in
xchg
push
or
and
mov
push
je
mov
add
int3
pop
pusha
jl
in
inc
dec
out
xor
inc
jge
pop
xchg
lods
aad
or
mov
hlt
mov
shl
aam
sub
fsubrs
cltd
std
adc
pop
jl
std
popf
xor
xor
sub
fs
jle
mov
sarl
jbe
inc
add
nop
cmp
jp,pt
inc
pop
bound
add
xor
jb
in
in
enter
mov
into
mov
aad
cltd
rol
cwtl
int
daa
into
ljmp
xor
cmp
js
pop
ret
jle
sar
and
in
xchg
bound
dec
mov
out
and
aaa
mov
test
xor
les
lods
inc
inc
and
sarl
add
or
pop
dec
or
cmp
out
dec
aas
inc
or
bound
xchg
fmull
stos
stos
in
add
les
lahf
mov
jns
push
pop
lret
jg
je
inc
xlat
jmp
mov
ffreep
push
xchg
cmpsl
test
and
and
inc
aaa
into
das
sub
push
push
jne
loope
jnp
jnp
das
xchg
cltd
xor
push
jp
xchg
cwtl
mov
push
push
xor
inc
in
test
cmp
test
ret
aad
or
jbe
daa
mov
inc
scas
leave
xor
sub
mov
hlt
mov
mov
fdivs
xor
out
adc
ss
add
sub
pop
or
jae
lcall
add
pushf
lods
and
pop
imul
leave
pop
andb
add
popa
mov
insb
cmp
pop
rolb
pop
stos
repz
mov
ret
add
inc
mov
jmp
jb
pushf
scas
pop
scas
in
cltd
sti
in
adc
rol
insb
xchg
xchg
sub
dec
pop
adc
enter
or
or
shll
js
adc
xor
sub
enter
push
test
mov
out
ds
out
cmpsb
cmp
add
in
and
pop
push
in
jne
clc
loopne
repz
push
pop
testb
adc
pop
inc
or
aaa
jno
jmp
outsl
xchg
jle
jno
cmp
testl
sti
jmp
mov
nop
mov
sub
mov
hlt
mov
pop
test
inc
roll
dec
stos
pop
and
sbb
out
jle
inc
outsb
and
scas
jl
addl
repz
mov
or
adc
add
cmpsb
pushf
popa
es
xchg
mov
xchg
mov
lcall
pop
insl
sbb
mov
imull
scas
lock
out
inc
jno
dec
ret
hlt
out
mov
iret
mov
mov
fs
xchg
add
out
loopne
bound
pop
lock
pop
jmp
xor
mov
push
shr
jmp
movsl
jge
test
or
dec
pop
mov
cmp
stos
repz
aaa
lret
scas
jno
pusha
cs
loopne
std
cltd
cwtl
sub
jmp
pop
les
repnz
pop
fcomip
popa
imul
sti
out
mov
lds
dec
dec
dec
jne
loopne
es
dec
or
dec
cmp
dec
dec
lret
pop
lods
outsb
fucomp
adc
inc
mov
jb
fstl
sbb
mov
aaa
inc
f2xm1
or
lods
nop
fsubr
mov
out
mov
adc
push
int
sbb
ja
mov
cmp
inc
push
fxam
lods
or
stos
ret
cmp
movsl
pop
into
in
repnz
xor
and
jnp
test
into
cs
push
push
mov
jecxz
mov
in
mov
pop
xor
out
test
inc
lret
popa
loop
inc
pop
mov
test
cmp
das
aas
shlw
popa
shlb
fmul
out
ret
cmpsl
mov
xchg
cmpsl
mov
and
cmp
cmp
and
loop
pop
jmp
add
mov
lods
inc
xor
and
in
inc
insb
xchg
imul
cmp
jb
in
loopne
rclb
shl
pop
mov
cmp
pop
fildll
adc
fisttpl
push
repnz
add
int
xchg
ljmp
repnz
fnstsw
push
jbe
add
rolb
add
and
popf
nop
or
cmp
dec
pusha
jae
pop
int3
jbe
out
int
movsb
outsb
in
ret
mul
in
add
push
lahf
xor
sti
xchg
aad
fbstp
negl
ss
std
xchg
pop
roll
or
out
andb
cltd
jmp
andl
mov
jbe
pop
cs
or
montmul
cmpsb
add
jno
push
adc
pop
scas
fmull
mul
add
es
mov
xchg
shrl
mov
in
int
mov
mov
dec
fbld
xchg
xchg
sub
fstps
push
rcl
testl
push
shlb
fdivrs
fisubl
lcall
cmp
push
rcrl
mov
and
jp
daa
mov
popa
test
stos
sub
fs
mov
push
inc
mov
int
sub
mov
push
xchg
push
push
and
xchg
out
mov
cmp
mov
cmpsl
pop
and
xor
pop
stos
xchg
dec
and
and
push
out
dec
mov
adc
cwtl
mov
sub
mov
cmp
fimull
dec
adc
jl
fldenv
enter
xchg
scas
lcall
fsub
insl
xor
xchg
add
fdivs
ficoml
sbb
and
loope
lahf
es
jbe
jns
lods
push
negl
cld
mov
push
in
fprem1
dec
push
adc
jae
xor
lahf
ss
push
sub
inc
nop
mov
mov
xor
rolb
and
jo
mov
sbb
dec
mov
test
push
outsb
lret
push
lret
pop
jo
out
mov
fistpll
loope
lods
repz
bndstx
cmpsb
fisubs
repz
out
fstps
inc
lret
vmaxss
push
bnd
sarb
rclb
and
cmc
cltd
mov
mov
xchg
imul
adc
jmp
int
fcomps
pop
fistpl
mov
and
adc
int
cli
sub
ja
ret
fcoms
jp
pushf
dec
fisttps
dec
xor
push
dec
fwait
jns
xchg
cmp
lds
pop
sbb
pop
jmp
jge
mov
scas
xchg
jne
sub
mov
and
mov
mov
dec
push
inc
enter
iret
cmp
fsubr
testl
add
mov
scas
pop
cld
xchg
push
jb
xor
pop
sbb
outsb
test
aam
nop
jecxz
xchg
mov
jge
fiaddl
cmp
ret
aam
inc
jo
mov
add
es
das
pop
dec
mov
je
push
sub
mov
push
and
sbb
xor
sbb
fdivs
push
jmp
sub
scas
and
stos
lds
jo
add
mov
xchg
es
movsb
repnz
cmp
bound
add
ss
cmp
jmp
sub
imul
mov
sbb
out
test
std
int
jne
pop
sahf
sarb
add
addr16
push
stos
jmp
ret
jge
pop
out
insl
inc
inc
out
fldcw
rclb
hlt
bound
addr16
xchg
gs
mov
dec
cmc
test
cmpsl
lock
xchg
sbb
xchg
and
adc
inc
mov
mov
es
mov
xchg
shl
xchg
sti
arpl
jns
add
stos
fldenv
js
test
and
push
jle
cmp
fstpl
cmpb
or
cmpsl
inc
ficompl
test
lret
stos
in
leave
sbb
fidivrs
jns
cli
adc
mov
xor
shr
aam
jae
outsl
inc
aas
dec
push
fiadds
movsb
mov
cmpsl
imul
loopne
and
nop
arpl
int3
into
gs
pushf
insl
jge
xchg
ret
push
push
ds
loop
mov
pop
ret
jne
lock
pop
gs
icebp
arpl
push
incl
inc
test
push
push
push
test
mov
mov
mov
inc
loop
pop
or
lea
fisubrs
stos
stos
mov
test
jb
adc
popa
cs
aaa
loop
test
int
les
pop
adc
fcompl
lds
cmc
dec
mov
adcl
insl
mov
xor
and
out
cmp
jge
dec
fistps
push
adc
mov
lret
inc
dec
test
into
das
mov
jno
dec
jg
push
mov
adc
push
pop
leave
int
sar
mov
repnz
ja
mov
xchg
repz
dec
mov
sub
push
add
aaa
mov
push
ret
pop
lea
xor
push
jecxz
xchg
sub
inc
fsubr
in
add
mov
sub
daa
insb
push
xchg
popf
outsb
push
fdivrl
out
ret
and
xlat
lcall
xchg
sub
hlt
idivl
mov
xor
pop
fldl
dec
cs
sbb
adc
hlt
adc
xchg
in
sahf
jne
scas
cs
mov
push
fldenv
xor
les
adcl
imul
add
mov
shll
mov
outsb
mov
ret
icebp
les
lret
lock
repz
movsb
cld
popf
xchg
inc
lds
outsl
sbb
add
mov
stos
adc
mov
loop
iret
fildl
cmp
in
subl
fistps
les
lods
fisttps
sub
popa
fidivl
sarl
push
inc
mov
push
cmp
jle
inc
mov
in
test
aam
or
mov
arpl
pop
mov
popf
into
jb
adcb
icebp
test
mov
imul
fidivs
adc
cmc
nop
imul
aad
mov
mov
ret
pop
cmp
xor
and
dec
fisubl
add
cmpsl
mov
fidivrl
pop
fdivl
ret
adc
mov
mov
aas
push
dec
jno
iret
movl
mov
cwtl
loop
sbb
push
insl
rcl
dec
adc
icebp
push
push
fisubs
inc
xchg
fucomp
int
icebp
loop
sub
push
and
dec
or
rcll
daa
mov
adc
nop
push
jbe
cmpb
std
mov
pop
aam
jns
cmp
sahf
mov
jp
cli
lret
jns
jg
cs
lods
bnd
lcall
aaa
xchg
lods
inc
adc
scas
or
dec
leave
pop
fldl2t
jge
sahf
sub
mov
jp
shr
inc
pop
push
popa
push
xchg
push
dec
loopne
aam
lods
mov
push
adc
dec
inc
bndstx
testl
mov
rcrl
fisubs
popf
mov
add
arpl
gs
stos
mov
shrb
adc
mov
dec
xor
mov
jb
daa
mov
adc
xchg
jae
mov
jne
repnz
enter
push
mov
int
es
inc
xlat
dec
aaa
and
test
je
xor
aas
daa
pushf
pop
lea
pusha
lods
jo
lcall
pop
or
test
iret
pop
dec
rcrl
aad
add
cs
add
in
lods
cs
and
inc
test
dec
push
pushf
dec
aad
movsb
mov
sahf
clc
enter
loopne
je
mov
push
mov
dec
movsl
outsb
scas
pushf
icebp
fidivrl
xor
pop
pop
cmp
cmp
fildl
shlb
jb
pop
cli
or
pop
mov
pop
loopne
stc
leave
pusha
jmp
fwait
xor
or
stos
shrb
fstpl
xor
enter
xchg
cwtl
js
pop
sti
mov
arpl
icebp
outsl
aaa
inc
dec
inc
es
aaa
xchg
outsb
rolb
sbb
icebp
mov
lret
out
jmp
stos
xchg
das
sub
mov
jb
dec
scas
fidivs
andb
xchg
test
xchg
int3
pop
add
iret
inc
push
les
dec
fmull
push
int3
inc
leave
movsb
stos
mull
sub
test
shr
ds
and
cli
idivl
arpl
scas
and
cli
fisubrs
jno
cltd
push
loope
ljmp
sar
daa
leave
push
iret
sbb
pop
and
rcrl
inc
out
add
daa
add
cli
lds
out
mov
gs
xchg
pop
dec
mov
sub
dec
clc
stos
shrl
fstpl
cmpsl
gs
jo
sub
in
push
inc
sahf
mov
adc
stos
push
outsl
sahf
pop
push
test
into
sahf
mov
in
push
jmp
loope
cli
fwait
adc
outsl
and
cltd
pop
ss
sti
push
and
sub
xchg
pop
out
xchg
lods
pop
xchg
movsl
push
sub
mov
cld
inc
inc
test
sbb
ss
or
mov
add
in
dec
icebp
xchg
mov
dec
jo
mov
xor
and
mov
add
cs
sbb
imull
push
push
in
mov
push
jl
notb
sbb
inc
pop
fdivrs
shrl
dec
adc
cmp
fmull
cmpsb
and
enter
xchg
adc
je
fcoms
xchg
push
lret
loope
jmp
mov
push
push
push
jnp
jns
lahf
jno
fcmove
lcall
loopne
insb
inc
ds
fwait
pop
js
std
fdivrs
mov
mov
jp
xchg
sbb
nop
ss
lcall
mov
insl
jg
push
mov
in
add
mov
inc
in
into
enter
in
sub
imul
shll
je
mov
adc
jb
popa
js
push
cs
mov
aam
shlb
pop
push
mov
mov
ss
rcrb
out
mov
cmp
jns
nop
fdivs
or
mov
pop
call
cmp
lahf
inc
cmp
dec
mov
sbb
xchg
push
cmc
sbb
add
sub
mov
into
inc
mov
dec
aaa
push
xor
inc
dec
sahf
into
xchg
inc
sub
push
push
xor
les
aaa
pop
pop
mov
aas
movsb
pop
xor
pop
enter
popa
xor
and
jae
and
std
mov
cwtl
negl
jp
push
je
shrd
nop
inc
cmp
cmp
lock
xor
aaa
or
arpl
xchg
jp
mov
movups
out
mov
repz
cltd
cmc
clc
int
lds
fdivl
mov
cmp
mov
das
fwait
mov
inc
lcall
dec
xor
xlat
pusha
sbb
pop
cmc
mov
repz
jno
add
sbb
push
ret
cmp
insl
jb
shlb
jmp
pop
bound
shrb
jp
inc
mov
and
stos
out
push
ja
adc
inc
xor
add
adc
ffreep
push
movsl
cmc
insb
push
daa
test
sub
out
pop
aaa
js
sbb
daa
mov
fcomip
inc
bound
aam
testb
or
test
adc
mov
lret
mov
lahf
or
stos
negb
mov
sti
mov
jle
push
mov
sub
dec
pop
imul
fnstenv
push
mov
pop
aas
add
sub
mov
into
add
add
aaa
gs
and
mov
test
push
stc
or
fs
pop
std
dec
sti
inc
addb
jnp
xchg
pop
adc
repnz
or
pop
dec
xor
fdivrl
and
inc
lods
ja
dec
mov
jae
scas
sub
fstpl
sbb
test
cltd
fidivs
inc
push
push
cmp
pop
repnz
jo
push
xchg
cli
add
mov
xor
test
cmpsl
clc
lea
in
dec
fildll
xor
mov
cmp
std
and
ds
shlb
mov
or
out
pop
cmc
and
pop
movsl
cmp
or
fisttpl
cmp
or
hlt
jne
shl
xor
jnp
xchg
std
rcr
mov
sbb
mov
out
aaa
mov
stc
jnp
and
xchg
cmp
aam
cmp
sub
test
jg
mov
insl
mov
outsb
cltd
in
cmp
xchg
inc
je
jns
pop
out
jecxz
push
add
jbe
push
jb
adc
xchg
sbb
jg
hlt
arpl
or
push
fwait
bound
jmp
in
loopne
mov
cmp
aas
cs
jecxz
mov
inc
lret
push
push
into
fisubrs
int
loope
xor
sbb
inc
mov
or
push
sub
mov
adc
push
dec
fs
mov
sub
ss
add
bound
test
test
cmp
andl
int3
lahf
push
fcmove
push
out
shrl
add
lret
out
xchg
or
das
push
sarl
call
sub
adc
or
xor
add
push
xor
cli
pushf
out
pop
adc
xchg
pop
and
mov
xchg
das
jns
pop
add
cs
mov
nop
inc
out
xchg
add
dec
popa
or
pop
dec
std
sahf
inc
push
xchg
mov
in
xchg
ljmp
jns
addr16
xchg
mov
mov
in
and
xchg
sbb
test
push
and
loopne
xor
mov
mov
sub
int3
mov
cltd
pop
sub
pop
mov
loope
insl
xchg
pop
into
push
mov
psubb
mov
and
sbb
notb
mov
dec
leave
add
fld
mov
or
repz
sbb
cmp
in
mov
or
jmp
dec
dec
push
mov
test
inc
mov
inc
fidivl
aad
jbe
insl
fsubr
outsl
sbb
xor
insb
das
mov
cwtl
inc
scas
out
insl
faddl
lock
bound
insb
sar
out
or
jns
pop
shrb
push
jle
lods
lahf
sbb
add
aam
or
loop
sub
lods
push
shl
xor
inc
add
loopne
out
movsl
shrl
add
add
negb
scas
cli
in
lods
jecxz
adc
mov
xchg
ret
push
aas
pop
pop
hlt
cmp
sub
std
sub
and
imul
pop
loope
enter
decl
insl
shlb
imul
xchg
sub
stos
add
dec
movsl
jae
movsl
js
jl
stc
pop
xor
dec
cwtl
sub
daa
divb
pop
test
mov
mov
mul
push
or
mov
or
daa
out
dec
adc
test
cmp
stos
jne
das
cmp
fdivrl
add
pop
mov
inc
pop
cmp
bound
mov
jo
mov
data16
adc
in
lret
cwtl
jecxz
cwtl
xor
sahf
dec
cmc
mov
lods
js
scas
out
ret
into
sbb
leave
mov
iret
shrl
test
jns
sub
jle
dec
jg
dec
sub
xchg
ret
adc
xor
pop
and
xchg
sti
xor
add
repz
cwtl
push
mov
jecxz
out
ljmp
jno
pushf
out
xor
cmp
push
mov
ja
je
int
xlat
jb
cmp
inc
mov
sbb
pushf
loope
mov
test
or
cmp
aam
mov
mov
rcl
leave
out
jae
rclb
adc
sahf
xorl
out
dec
push
aad
test
sbb
mov
icebp
daa
outsl
inc
or
add
lock
movsb
jbe
pop
xor
pop
iret
loope
add
add
sub
inc
hlt
mov
push
inc
push
test
sahf
incb
xor
imul
ds
xlat
xchg
push
jbe
dec
outsb
aad
loopne
cmp
sti
fucomip
sub
repz
xor
repz
scas
mov
shl
mov
lock
int3
subb
repnz
stos
mov
cmp
lahf
int
clc
or
adc
jge
jg
xchg
mov
push
in
cmp
mov
or
push
filds
inc
xor
dec
dec
mov
loopne
cmp
sbb
arpl
cmp
shrb
fcoml
fidivrl
ljmp
xchg
dec
mov
push
std
dec
in
rclb
mov
in
fwait
dec
xorb
in
repnz
jp
xchg
and
xchg
sbb
mov
jnp
into
gs
fwait
xor
in
pop
in
arpl
popa
jne
mov
xchg
scas
cmpsb
mov
out
aaa
mov
mov
inc
add
jb
cli
xchg
pop
xchg
ret
stc
mov
mov
pop
insl
aas
sahf
jge
fadd
jb
mov
fldl
loop
jo
jl
push
jge
cmpsb
cmp
lahf
adc
idivl
jp
jb
and
in
push
push
leave
out
push
mov
inc
enter
ds
pop
push
ja
and
jge
xor
out
into
sbb
pop
test
ret
popf
jecxz
xlat
adc
dec
mov
ret
jnp
push
repz
pushf
ds
push
sub
scas
leave
fmuls
icebp
sub
jnp
sbb
add
pusha
jg
sti
mov
mov
scas
roll
cwtl
imul
lret
mov
pop
out
xchg
or
and
test
imul
sbb
jno
movsl
stos
mov
push
fsubrl
mov
stos
cltd
mov
movsl
adc
cltd
mov
test
cmp
and
pop
and
xlat
cmp
jle
fdivrs
cmp
clc
push
jns
cmp
push
jecxz
movsb
fwait
ja
nop
shl
pop
es
push
mov
lods
xchg
jmp
add
sahf
mov
inc
mov
ficoms
popl
mov
cwtl
ds
pop
push
imul
or
js
inc
test
daa
and
outsb
shrl
insb
push
out
cmc
push
add
xchg
mov
arpl
aas
jmp
push
jns
aaa
cmp
adc
xchg
and
push
out
add
popl
pop
je
aam
and
aad
ljmp
and
or
jg
add
std
inc
out
mov
mov
dec
out
xchg
mov
in
mov
pop
jns
add
test
cmpb
cltd
sub
sbb
gs
mov
push
icebp
xchg
mov
dec
ret
les
xor
lahf
add
mov
inc
mov
and
mov
jne
std
pop
and
push
cli
push
mov
dec
cmc
push
les
dec
push
xchg
rcrb
aam
ss
pop
movsb
dec
xchg
lcall
outsl
inc
sti
dec
xchg
subb
inc
mov
gs
and
and
push
adc
pop
lea
test
loop
stos
and
adc
push
cli
or
xor
lods
xchg
andl
frstor
push
pop
insb
ja
cmp
sahf
push
inc
repz
add
dec
inc
sbb
dec
jnp
insl
aaa
test
stos
in
fbstp
lcall
scas
jae
loopne
push
and
dec
dec
popa
sbbl
inc
jae
lods
mov
sbb
iret
aam
sub
bound
into
adc
fldenv
mov
cmpsb
ret
xchg
mov
sub
xorl
ja
leave
mov
fwait
aam
icebp
sbb
sti
jb
inc
adc
lret
testb
xor
mov
int3
jae
and
push
inc
into
andl
sub
and
lods
das
into
cmp
jecxz
loope
and
arpl
jae
int
add
cmpl
or
jmp
jge
outsb
mov
or
int3
movsl
sarl
sbb
sbbb
mov
subl
movsl
or
pop
or
jecxz
jle
loopne
xchg
fstl
fsubr
mov
ja
mov
jnp
fdivrs
pop
gs
fldl
lcall
in
xor
in
ja
lods
stos
cmp
aad
cltd
push
rcrl
mov
mov
data16
jo
insl
sub
xchg
xor
mov
ret
insw
push
xchg
sbb
jp
inc
test
int
dec
stc
das
lods
mov
jecxz
and
push
pop
notb
add
in
or
movsb
loopne
inc
jl
pop
cmp
stos
or
xor
jmp
scas
rorl
sbb
cmpsl
sbb
xchg
cmp
pop
or
mov
movsl
rsm
call
cltd
mov
fidivrl
ret
lds
out
aam
pop
ja
xorb
xchg
aaa
push
mov
movaps
addr16
fwait
cld
daa
movsl
xchg
int3
lods
fistps
add
into
test
fldl
pop
popl
xchg
jle
push
push
push
mov
jo
lret
dec
cmp
cmpsb
test
pop
aaa
popf
pushf
cmp
xchg
mov
mov
mov
jo
xchg
in
gs
rcrb
std
std
ds
sbb
mov
mov
es
xor
adc
clc
faddl
aad
repnz
adc
cmc
jge
dec
dec
add
push
add
xchg
je
lret
push
lcall
ja
inc
mov
jo
decb
or
les
xchg
aam
outsl
jge
sbbl
sbb
and
int
push
sbb
or
pop
lcall
out
repnz
pop
ret
or
mov
or
adc
pop
imul
sbb
xchg
lcall
and
cmp
jecxz
sub
int
fwait
mov
ficoml
fstp
push
shlb
in
jns
ja
xor
sbb
mov
cmp
xchg
jo
lea
cmpsl
push
inc
in
test
mov
testl
hlt
in
lret
or
mov
aad
cmp
popf
fwait
sub
pop
xor
sub
test
xor
scas
adc
scas
sub
repz
adc
pop
repnz
mov
or
jecxz
sub
lahf
imull
add
dec
sbb
fwait
in
mov
loopne
jns
ret
shrb
pop
fxch
pop
les
dec
add
lds
test
push
js
jo
dec
inc
xchg
sub
pop
pop
jecxz
aad
scas
and
mov
mov
xor
leave
xor
test
push
xchg
int3
shrb
aam
insb
sbb
test
sarl
mov
jo
gs
sub
clts
test
adc
pop
decl
popl
lahf
testl
add
adc
ss
sbb
int3
mov
inc
mov
xor
lret
out
and
dec
jb
daa
cli
xchg
inc
repnz
mov
andb
sbbl
outsb
lcall
mov
sub
enter
in
mov
nop
add
and
loop
push
xchg
testb
mov
in
stc
xchg
add
out
nop
rsqrtps
in
pop
mov
je
gs
and
dec
mov
inc
push
or
test
aaa
xchg
push
inc
mov
xchg
subb
insl
add
sarb
dec
hlt
scas
adc
in
icebp
mov
cmpsb
mov
push
adc
xchg
ret
fistpll
data16
sti
or
mov
scas
lcall
fucomi
ds
inc
jle
mov
sbb
and
fisubrl
add
adc
clc
cmpl
mov
inc
in
fdivl
lret
fnstenv
jmp
pop
xchg
lds
pop
or
test
clc
mov
rorl
pop
mov
mov
mov
mov
fimull
shr
xor
bound
out
jg
xor
xlat
repz
pop
push
out
add
jno
add
sbbl
fcomps
mov
dec
test
cmp
das
cmp
push
mov
cld
lcall
in
stos
push
cltd
or
mov
scas
imul
fidivl
inc
cmpsl
and
js
lret
inc
scas
movmskps
pop
or
out
push
cmp
fistl
dec
add
inc
or
sub
pop
mov
pop
and
xor
into
mov
adc
push
pop
std
sub
call
in
jmp
rorb
or
cmc
aad
push
pop
insb
jle
test
mov
aaa
adc
test
jp
or
sbb
aad
cli
in
mov
ljmp
add
push
stos
cld
or
adc
pop
jae
fwait
inc
cmp
daa
push
arpl
mov
and
xchg
daa
xor
arpl
lcall
pop
les
jmp
mov
sub
dec
stos
sub
add
ja
fbld
jmp
faddl
or
jg
rorb
adc
loop
dec
lea
push
sub
int
pop
inc
mov
ss
jle
pusha
pop
rcl
mov
lret
cmp
xchg
sahf
andl
rorl
inc
xchg
mov
lret
lret
jns
arpl
mov
pop
pop
outsl
push
dec
mov
and
jnp
popa
mov
inc
data16
jae
dec
in
das
inc
lods
mov
cmc
lock
insl
sbb
add
jnp
mov
jne
inc
sub
int3
cld
cwtl
jp
sbb
cmpsl
push
mov
fbld
loope
mov
clc
mov
mov
fdivrs
pop
push
jl
out
xchg
sub
and
mov
jbe
xor
sahf
push
outsb
cli
repz
push
jmp
mov
jg
jg
popf
das
inc
les
sub
out
inc
hlt
in
sub
and
test
cld
loope
mov
push
mov
scas
addr16
adc
lret
and
es
pop
lcall
dec
adc
dec
mov
stc
push
xchg
mov
lods
inc
xor
into
gs
fucomip
push
mov
sbb
in
add
sbb
int3
mov
bound
jnp
popf
cmc
add
mov
mov
sar
dec
stos
cmp
test
jmp
ljmp
add
jne
push
and
mov
xorl
sub
xchg
in
sub
in
mov
popa
cmp
inc
ljmp
jns
xchg
pop
ja
in
dec
and
cmp
insb
ret
sub
or
jg
add
lret
cmp
jo
xchg
mov
inc
jbe
jae
xchg
sub
dec
mov
dec
sbb
ret
pushf
lds
inc
loope
in
xlat
jne
pop
call
cmp
shr
cmp
mov
out
add
sub
push
lock
push
shl
pushf
and
sub
xchg
setne
jle
divl
filds
push
or
jg
and
shr
push
pusha
stos
mov
add
mov
cmc
sbb
in
inc
out
leave
fwait
mov
ficoms
push
or
lock
pop
lcall
inc
and
test
or
popf
xorb
subps
dec
push
nop
push
sbb
ljmp
cmp
jo
jbe
pop
xchg
and
jmp
or
adc
test
sub
or
aam
int3
movsl
mov
fnstcw
sbb
cmp
fs
mov
jl
pop
cmc
cmp
xor
mov
push
push
sbb
rcrb
iret
inc
fstl
cld
mov
or
jbe
mov
xor
add
stos
push
je
add
pushf
test
aad
sbb
fisubl
fadd
mov
mov
loop
shlb
xchg
mov
stos
inc
cmp
sbb
sti
in
scas
test
adc
lcall
shl
cmp
and
gs
xlat
mov
shr
iret
inc
pop
cmc
clc
hlt
ljmp
fwait
rsm
aaa
lods
jl
cmp
inc
data16
dec
and
mov
lea
stos
lea
in
aam
in
pop
push
jns
sbb
push
shlb
sarl
adc
cmp
add
repnz
pop
cmp
mov
push
out
sub
icebp
movsb
inc
lahf
imul
lock
cli
mov
or
and
jge
and
lods
fldt
adc
movd
outsb
adc
in
or
cltd
rcrb
cmc
push
andl
fadd
fcomps
adc
cmpsb
xchg
les
dec
inc
cltd
test
fsubl
pop
cwtl
daa
mov
lahf
jnp
and
jo
leave
xor
xchg
out
lds
addr16
cli
les
clc
pop
rolb
xchg
arpl
hlt
mov
aad
mov
and
sarl
mov
fs
nop
inc
mov
fwait
dec
scas
inc
mov
jae
aas
lret
xchg
sbb
repnz
call
mov
add
addl
and
jmp
aaa
mov
xor
int3
loopne
push
and
ljmp
push
les
in
es
out
cs
cmp
jae
call
mov
jb
xor
add
inc
pop
jne
add
lea
mov
outsb
jecxz
sub
or
push
add
mov
pop
jp
xlat
xlat
mov
sbb
jns
mov
andb
test
mov
mov
cltd
iret
iret
lahf
mull
clc
lahf
ds
nop
fisubl
mov
add
sub
repnz
test
or
pop
pop
cmpsb
fdiv
fiaddl
arpl
xor
sub
xchg
loopne
mov
dec
pop
insb
jo
jb
movsl
lahf
jo
mov
xchg
pushl
pop
mov
push
push
rcrl
jo
push
in
push
ja
mov
cmp
xchg
add
add
xchg
out
ja
jb
inc
inc
inc
jae
pusha
sarl
aam
aam
mov
dec
cmpsb
fisttpll
jmp
jnp
test
out
cmp
fadds
popf
adc
push
lcall
roll
inc
cs
stc
cmc
mov
addr16
push
adcb
pop
xchg
insb
and
mov
out
insb
push
sub
ret
in
scas
add
icebp
adc
js
shlb
sub
loopne
or
cwtl
stos
or
daa
jmp
push
rorb
push
negb
fiadds
test
jge
inc
rol
in
pushf
mov
test
jnp
lret
cmp
adcl
ret
pop
imul
rcl
repnz
test
mov
push
dec
adc
jno
call
call
scas
ret
add
xor
fisubrs
mov
mov
shl
outsl
addb
cmp
or
or
ret
aam
mov
cmc
mov
xchg
ret
xlat
dec
test
sbb
sarb
sti
xchg
movsl
push
test
ret
jae
fldcw
add
xchg
jl
insb
fisttpl
xchg
push
mov
xor
push
negb
add
add
pop
enter
ret
push
jno
mov
dec
inc
xlat
sub
daa
jbe
pop
mov
out
dec
xchg
xchg
loopne
and
lret
call
mov
xor
pushf
ljmp
push
lret
xchg
adc
lcall
mov
cmp
and
jno
popf
sub
mov
xor
popf
or
out
adc
loop
push
mov
jns
cmp
sti
jns
ss
mov
sub
cltd
lds
ret
pop
mov
cmpsb
lods
repnz
pop
fwait
xor
in
add
inc
adc
jecxz
iret
jo
pop
and
push
in
rcrl
xchg
es
pop
and
imul
xchg
sub
fisttpl
mov
jne
aaa
jne
sub
aam
dec
push
xchg
int3
lcall
dec
int3
out
arpl
pop
mov
arpl
jmp
aad
jo
and
sbbl
fisubrl
sbb
mov
lods
out
push
mov
into
test
sbb
sub
add
mov
mov
rorl
mov
xor
jno
mov
insb
mov
sbb
inc
pop
dec
cmp
and
xchg
or
out
and
jo
sbb
stos
shll
jg
in
hlt
jb
mov
xor
movsb
fidivl
or
cmc
cmp
mov
jp
sbb
add
inc
shlb
xchg
jge
loope
and
xchg
int3
dec
and
sub
jle
inc
xor
dec
push
sub
xorl
fistpl
fidivs
xchg
loop
ljmp
mov
dec
mov
and
add
push
push
ficoms
add
movsb
leave
sub
mov
jbe
or
jo
and
sbb
and
jne
sbb
jmp
out
mov
push
insl
andb
adc
into
dec
jl
or
aad
push
pop
adc
add
xor
out
stos
sbb
test
ret
out
sar
jbe
cmp
lret
repz
jo
xchg
mov
sbb
pop
loope
jmp
leave
dec
mov
scas
push
fnstsw
adc
cmp
ja
int3
mov
testl
adc
iret
fstpt
adc
and
cs
addr16
pop
and
xchg
icebp
and
pop
xor
push
xchg
sub
push
rcrb
or
push
out
popf
cwtl
jecxz
out
cli
idivl
ret
mov
pusha
lods
insl
insl
or
outsl
out
bound
mov
sub
scas
fldt
cmp
nop
xchg
add
add
out
sbb
popa
sbb
bound
aaa
negl
inc
pusha
jp
add
iret
cmpsb
in
mov
stc
xor
sbb
cltd
int3
scas
dec
or
dec
test
iret
xchg
adc
sub
xchg
and
ficoml
cli
mov
lret
in
out
jne
jmp
hlt
paddsb
outsb
into
or
ljmp
in
xchg
bound
xchg
jle
mov
lea
xchg
inc
fwait
pop
imul
mov
cltd
ja
jno
test
mov
jnp
loopne
repnz
lcall
loopne
in
call
fbld
mov
xor
xchg
jnp
scas
inc
add
pop
mov
shr
jnp
call
adc
imul
mov
cld
ret
repz
ret
ret
cmp
push
xor
dec
loop
push
movsl
and
adc
enter
aad
sarl
sub
testb
dec
adc
jo
xor
addr16
jl
js
es
ret
xchg
inc
fcmovnb
out
insb
aaa
pop
jno
mov
imull
das
call
adc
fwait
adc
data16
in
movsl
push
and
sub
jae
pop
or
mov
mov
lret
cmpl
cmp
imul
adc
jl
and
out
push
ret
jp
cmc
cli
call
sub
fs
mov
inc
push
sub
mov
mov
xor
into
mov
sarl
cmpb
repnz
ja
dec
stos
stos
cmp
and
hlt
mov
xor
in
cs
sub
popa
cld
adc
or
lods
pop
xor
mov
lahf
jns
pop
adc
pop
mov
and
mov
push
rcrb
test
sbb
sub
adc
int3
arpl
iret
jno
mov
pop
imul
xchg
jae
ret
lods
pop
jmp
pop
in
jo
cltd
jb
sbb
out
jbe
int3
jae
jbe
push
fnsave
jge
adc
cmp
adc
add
pop
in
pushf
stos
mov
push
lock
daa
leave
push
dec
xchg
sub
jge
das
icebp
mov
dec
cmp
daa
jl
test
mov
mov
add
jns
aas
rol
dec
inc
or
in
xlat
sub
stos
inc
jae
call
add
xchg
push
pop
or
mov
mov
push
cwtl
orl
fdiv
sbb
mov
or
cmp
xchg
ss
aam
adc
pusha
ret
or
fisttpll
push
addr16
xlat
cmpb
push
xor
repnz
data16
and
xlat
push
cld
pop
call
mov
ffreep
lahf
lea
addr16
out
aam
mulb
cmp
out
dec
popa
add
and
sbb
mov
ja
out
sti
fwait
icebp
inc
and
repnz
pop
cmpsb
and
sub
push
fsubrs
icebp
mov
dec
js
loop
insb
sbb
mov
adcl
or
xor
bound
add
inc
fsubrl
dec
arpl
popf
pop
adc
sbb
pusha
xlat
repz
shrl
mov
or
inc
ljmp
call
sub
jg
nop
outsb
enter
xchg
pop
sbb
jp
sti
fwait
jo
jbe
jb
icebp
movsl
sub
in
add
fdivs
popl
mov
dec
int3
cmp
mov
pop
jecxz
xchg
xchg
add
addl
cli
fcomip
push
dec
pop
fidivs
and
je
xchg
arpl
rolb
ret
mov
push
fdivr
sbb
in
pushl
insl
divl
add
inc
add
ret
cmc
clc
notb
fcompp
add
ficoms
call
stos
xchg
dec
out
rcrb
cmpsb
lock
cmp
jmp
sarl
pop
cmp
ss
add
mov
mov
mov
xor
pop
jno
frstor
mov
pop
add
stos
jmp
les
fnsave
daa
addr16
mov
adc
divl
outsl
push
loopne
jle
aas
xchg
sub
pop
scas
dec
jle
popa
es
push
xchg
jg
jb
int3
mov
xlat
mov
cltd
adc
sbb
xor
cmp
cmpl
push
sbb
popf
pop
sbb
adc
clc
faddl
and
mov
jo
in
shrb
gs
mov
push
cmpsl
add
loop
cmp
aam
jg
mov
pop
push
into
or
fwait
pop
cld
push
mov
or
xchg
sub
push
data16
cmp
jno
lods
mov
into
inc
bound
mov
repnz
mov
pop
stos
push
push
jg
outsb
xor
push
out
sub
testb
xor
sahf
inc
pop
imul
or
sbb
mov
clc
sub
mov
add
sbb
jno
ss
jb
cmpsb
xchg
xor
mov
mov
add
adc
sbb
movsl
cmp
mov
add
sub
ret
jns
pop
mov
xchg
aam
test
aam
cmpb
inc
imul
movsb
cmc
cmp
mov
xor
cwtl
cld
jo
jae
jl
push
push
test
rolb
xor
imul
dec
lea
clc
push
lods
cld
xor
cltd
mov
xchg
popf
adc
fdivl
push
int3
lret
dec
out
push
fdivrs
dec
xor
adc
push
lock
pop
out
xor
sub
or
ja
xchg
daa
cmp
or
andl
pop
sahf
pusha
inc
jne
xchg
and
ret
xchg
test
pop
in
fdivp
mov
push
sub
test
in
shr
sbb
cmpsb
pop
je
add
shr
cmpsl
dec
adc
inc
fcmove
insl
push
cmc
sub
jl
ljmp
test
popf
jo
xchg
and
add
cmp
cmpsb
sub
in
dec
negl
not
arpl
lock
mov
jne
mov
adc
das
pop
lea
cmp
inc
mov
movsl
xchg
xchg
inc
in
sbb
dec
subb
lods
jnp
pop
mov
outsb
sub
mov
in
xor
and
pusha
and
loopne
mov
fstpt
jne
and
test
fisubs
arpl
jno
mov
push
lock
cld
xchg
dec
xor
dec
cmp
sub
mov
push
cltd
int
lret
xor
push
jbe
int3
add
sub
stos
lods
inc
fiadds
lret
push
mov
test
lret
nop
in
in
sbbb
mov
enter
clc
or
inc
out
jmp
out
inc
jle
add
xchg
orl
fwait
lcall
es
inc
mov
clc
shrb
add
imul
lock
insb
in
push
xchg
jo
sub
cmp
cltd
xchg
mov
add
shrl
icebp
aam
xchg
cmpl
push
movsl
push
cmpsl
inc
pushf
es
push
popf
jg
and
cmp
int3
arpl
shrb
insl
jne
pop
pop
mov
shl
cli
xchg
ss
dec
out
mov
jo,pn
addr16
mov
test
sub
mov
jle
mov
jl
mov
pop
jg
push
mov
push
into
mov
fdivrl
jae
fists
mov
es
dec
test
imul
mov
stc
mov
sbb
push
fdivr
lods
sbb
dec
push
aaa
mov
xchg
andb
jmp
pushf
and
je
int
inc
icebp
mov
push
xchg
pop
jnp
or
in
xchg
dec
movsl
or
mov
dec
mov
rcl
push
xchg
and
pop
add
xchg
xorb
out
std
inc
cs
mov
testl
fcmovnb
cmc
xchg
xor
pop
mov
int
in
pop
and
sarl
js
mov
and
das
mov
cmp
aad
rolb
cld
cli
or
dec
cltd
stos
imull
fidivrl
mov
pop
jns
enter
stc
or
stc
je
jo
daa
cmpsl
cwtl
sbbl
pop
or
cs
popa
dec
stos
lock
repz
and
xor
mov
pop
loope
aas
push
cmpsb
sbb
pushf
hlt
mov
orl
sbb
call
pop
in
stos
fcoms
mov
outsl
xchg
enter
sbb
mov
sahf
and
es
mov
or
stos
imul
imul
arpl
mov
mov
movsl
sbb
pop
mov
sub
or
into
push
xchg
sub
jle
cmp
sub
fninit
les
imul
inc
push
scas
jle
ret
xor
xor
popa
dec
test
popf
xor
adc
mov
nop
mov
insb
dec
xchg
nop
and
outsl
mov
xor
outsl
lea
imul
xor
loop
int3
xor
dec
out
aas
cmpsb
inc
in
lret
popf
jo
jae
or
mov
movlps
mov
sub
xor
lahf
mov
ja
adc
mov
pop
loope
or
sub
mov
cmp
dec
mov
pusha
mov
mov
lcall
mov
fildll
fwait
shll
sbbl
mov
push
xchg
es
stos
testb
push
cmp
sbb
nop
mov
xlat
or
jbe
fldl
inc
xchg
mov
xlat
jne
out
and
fldl2t
stos
shlb
gs
xor
daa
popa
aad
lods
lock
dec
adc
cmp
mov
lea
icebp
bound
mov
adc
in
push
adc
and
push
mulb
andb
subb
jne
and
ljmp
stc
dec
stos
cli
shl
mov
in
sbb
loope
cld
mov
dec
push
int3
fwait
mov
insl
cld
xchg
lahf
add
sbb
add
mov
cld
and
xor
jno
jnp
mov
push
cmp
pusha
and
outsb
cmp
popf
push
aas
sarl
inc
pop
pushf
xor
fs
add
mov
std
inc
xorl
repnz
notb
in
inc
xor
das
add
cs
mov
clc
adc
or
mov
dec
sbb
push
inc
dec
pop
add
sub
dec
arpl
jae
pusha
lods
enter
andl
mov
jle
mov
fstpt
sub
and
or
lock
mov
jns
xchg
pop
push
inc
aas
cmp
clc
bound
shrb
ret
repz
adc
fld
pushf
pop
push
jae
shl
mov
or
add
sub
lea
inc
icebp
sbb
push
fs
cmp
mov
add
pop
mov
out
sbb
sbb
cli
sub
jmp
sbb
notb
das
mov
mov
iret
inc
sub
xchg
std
mov
push
test
jne
xchg
xchg
push
xchg
or
xchg
dec
bound
mov
jno
mov
lods
mov
enter
sbb
pop
jle
ss
cmc
pop
das
inc
lret
mov
loop
dec
dec
mov
cmp
jb
xchg
sbb
push
pop
mov
stc
pmulhuw
and
loopne
aam
shr
mov
dec
in
sub
adc
xor
in
cmpsl
dec
fistpl
xor
loope
mov
jnp
out
shlb
inc
inc
pop
clc
ljmp
xor
jmp
jl
in
dec
add
leave
xorb
xlat
ret
xchg
xchg
mov
fdivrl
lcall
push
cmpsb
sbb
in
andl
or
fsts
sbb
mov
xor
sti
cli
addr16
and
fs
popa
sbb
imul
daa
fdiv
sbb
das
push
stc
out
xchg
fsts
decb
sahf
xor
call
xor
dec
sub
xor
sub
mov
xlat
jbe
movsl
icebp
push
jle
pop
mov
mov
or
mov
jmp
jns
call
loopne
push
aaa
test
inc
xchg
jno
mov
daa
iret
rorl
xor
das
sub
pusha
add
out
lods
inc
arpl
jnp
add
mov
fwait
ss
imul
test
pop
inc
xor
aam
push
sbb
pop
xchg
push
fbstp
and
mov
jns
hlt
add
pop
xchg
sub
push
stc
stos
jmp
jo
je
cmpsl
cwtl
cmp
enter
add
push
mov
repnz
aam
and
loopne
shl
mov
mov
ds
xchg
fdivr
mov
pop
sti
push
sarb
push
dec
adc
mov
lcall
imul
pop
fs
push
mov
cmp
mov
sahf
mov
lods
mov
push
adc
bound
fwait
in
leave
add
add
mov
sub
mov
cmp
mov
or
loopne
cmp
ret
xchg
dec
repnz
cmp
insb
sarb
negl
and
xor
pop
xor
mov
xchg
mov
adc
fiadds
or
or
insl
cmc
nop
or
in
xchg
fdivl
mov
cli
ds
xchg
mov
hlt
icebp
imul
not
out
add
fstl
aad
xchg
add
jp
cld
stos
push
test
add
repnz
fstl
lcall
or
lea
repz
xor
dec
cmp
cmp
push
and
lahf
popa
je
add
push
enter
daa
jo
sub
les
out
sub
nop
add
dec
xor
xchg
mov
jo
push
sub
jns
mov
ja
mov
pushf
jle
out
xor
jno
and
cmp
inc
fwait
rolb
cmp
std
gs
cs
es
xchg
ss
add
in
movsl
aaa
sub
jno
xor
dec
pusha
dec
out
into
mov
inc
push
jae
fst
lods
mov
mov
xchg
pop
std
out
hlt
js
add
cmp
jg
adc
jo
cmp
jmp
mov
cli
xchg
adc
int
test
sub
cmp
cmp
pop
push
movsl
sub
mov
insb
shlb
sbb
add
sbb
insb
inc
xchg
sbb
neg
rclb
mov
loopne
jp
xor
push
cmp
and
mov
xor
sbb
fisubrs
lret
adc
aam
sarb
xor
jb
xor
ljmp
xchg
int
sub
jb
mov
push
jo
sbb
shl
popa
and
jae
fidivrl
lcall
mov
data16
sub
push
jge
push
inc
xor
inc
pop
or
adc
ljmp
call
and
sub
mov
add
xor
pusha
push
rorb
inc
stos
nop
mov
test
dec
pavgb
aas
or
dec
inc
and
or
jo
sbb
stos
adc
fdivl
jnp
lret
add
into
pushf
test
call
jns
xor
fstl
cld
pushf
jae
and
and
sbb
xchg
pushf
and
mov
ja
inc
xorb
shll
adc
xchg
mov
in
mov
aad
out
adc
icebp
imul
int
addr16
mov
ds
dec
mov
mov
cmp
nop
mov
sub
repz
fistpll
mov
adc
push
sbb
xor
aad
sbb
imul
mov
in
and
mov
and
xchg
adc
add
jbe
mov
pop
xor
fcomps
dec
data16
call
xchg
pop
mov
hlt
mov
data16
std
das
mov
push
lds
popf
pop
xorl
aad
mov
int3
arpl
into
push
jb
subl
inc
pop
sbb
daa
vmovss
adc
lds
or
roll
js
int
push
sub
mov
jae
cld
stos
popf
sbb
sbb
pop
je
loop
bound
aaa
fxch
sub
aas
push
sub
sbb
es
dec
push
int3
dec
cmp
mov
sbb
insl
mov
xchg
cmp
rolb
sbb
pop
mov
shlb
adc
lea
dec
mov
bound
sbb
std
jbe
mov
or
push
mov
aad
mov
aam
xor
or
jns
sub
clc
cmpsl
or
cltd
sahf
add
repz
aam
jnp
sbb
or
fsubrl
sub
out
add
push
inc
and
aam
lods
sbb
add
sbb
into
in
add
test
loop
outsl
mov
mov
testb
mov
inc
popa
loopne
adc
push
mov
pusha
mov
mov
mov
mov
push
cwtl
leave
das
mov
int
sub
rclb
testb
and
and
cmpsb
mov
xchg
xchg
xchg
mov
fs
sub
push
inc
pop
fmull
jns
in
mov
add
leave
fsts
and
cmpsl
loop
test
sahf
imul
xorl
add
pop
ja
mov
das
stc
push
pusha
jmp
insb
jne
notl
sbb
imul
and
mov
push
jecxz
dec
gs
mov
xor
push
fldt
push
jo
or
nop
add
leave
dec
pop
push
mov
dec
push
sti
sbb
cmp
rcrb
dec
push
cmpl
pop
icebp
loopne
xchg
jns
inc
icebp
call
iret
add
leave
push
inc
mov
sbbb
xor
mov
pop
sub
shl
cmc
imul
pop
scas
scas
inc
xchg
adc
pushf
ss
cmp
insb
clc
fsubrl
or
and
mov
arpl
int
lret
dec
dec
in
sbb
jecxz
mov
ret
lahf
cmp
or
mov
imul
in
ror
adc
loope
add
lock
cmp
addr16
fsts
popf
mov
dec
push
inc
call
dec
dec
pop
subl
inc
cmc
adc
mov
dec
cmp
add
mov
ja
mov
inc
fsubrs
jmp
int
cmp
ret
mov
push
xchg
arpl
xchg
dec
push
cmp
cmp
push
jnp
mov
mov
call
sbb
jp
pop
dec
adc
push
repnz
dec
xor
in
cmp
sbb
lock
mov
cwtl
nop
inc
dec
mov
xchg
std
push
cmpb
push
cwtl
std
sbb
sbb
jecxz
icebp
or
cmpl
or
sbb
jbe
fistpll
inc
xor
std
pmovmskb
dec
xchg
test
sub
or
xor
test
popf
cmp
or
mov
jg
mov
push
jne
pop
sbb
cmp
mov
sbb
fdivs
or
js
je
dec
shll
dec
andb
int3
jnp
iret
sub
stos
in
push
sub
mov
in
stos
pop
out
out
inc
insb
mov
mov
cmpsl
daa
imul
je
iret
mov
out
loop
push
mov
nop
and
into
jl
cltd
test
test
insl
push
jno
sub
mull
add
mov
fldcw
mov
test
jb
mov
push
fcompl
fisubrl
rol
cld
xchg
das
jmp
or
rcr
push
inc
pop
sbb
mov
std
inc
fisttpll
out
pop
mov
loopne
mov
mov
pop
sbb
mov
fildll
out
divl
scas
fisttpl
inc
mov
repz
push
lods
movl
xchg
call
imul
icebp
dec
iret
mov
popf
mov
js
andl
cmp
add
loope
lcall
dec
push
lds
pop
cmp
test
rclb
jnp
lahf
fistps
repz
out
sbb
inc
adc
daa
dec
push
pop
aaa
inc
fldl
lock
daa
lock
mov
data16
mov
mov
and
xchg
mov
xchg
xorl
pop
lahf
aam
mov
mov
sub
xor
daa
add
shl
xor
adc
dec
pop
dec
xor
aam
das
fsubs
fistps
lret
insb
or
ja
loop
jbe
add
adc
frstor
jmp
test
dec
xchg
mov
int
stc
jmp
add
int3
jmp
addr16
fwait
or
sahf
mov
sti
pop
call
shrl
and
mov
shl
rcrb
add
cmp
aaa
test
lock
dec
into
fmulp
mov
pop
lods
lea
mov
mov
mov
and
loope
and
std
push
add
std
rcr
and
dec
dec
in
mov
inc
or
aas
add
jg
push
leave
call
insb
inc
add
outsl
aaa
push
and
mov
ret
xor
call
xchg
clc
fwait
or
sub
jle
stos
mov
pop
roll
je
sub
or
in
in
and
hlt
sti
imul
mov
leave
dec
inc
fadd
fstl
sbb
mov
or
lock
mov
out
and
icebp
or
jno
es
pop
xchg
add
push
js
xor
push
push
cld
inc
into
inc
insb
pop
mov
adc
enter
cmpsb
push
das
push
popf
push
or
popa
bound
loope
push
inc
pop
xor
std
es
sub
lret
cld
sbb
add
xchg
fdivl
or
enter
add
add
adc
mov
xor
jl
fidivs
daa
das
repnz
popa
xor
push
or
fdivrs
xor
nop
bound
scas
dec
mov
jmp
int3
jg
pushf
test
loop
fidivrl
and
in
rol
cmp
push
push
jbe
sbb
movsl
fdivp
sarb
mov
testl
and
mov
lcall
arpl
cs
repz
lahf
mov
popf
adcb
mov
add
push
and
push
adc
or
scas
call
dec
mov
out
inc
enter
dec
xchg
dec
iret
insl
in
test
inc
sti
fucom
adc
sub
fs
add
mov
push
cmc
lea
shll
iret
sbb
lods
adc
push
adc
repz
dec
jp
clc
jg
sub
dec
movl
push
pop
cmpsb
into
scas
les
xchg
insl
imull
mov
outsl
in
aaa
add
in
rcrl
loop
xchg
dec
push
fimull
mov
sti
cld
aad
std
mov
idiv
pusha
xchg
jb
loop
push
scas
repz
cmpb
sub
fucom
cwtl
xchg
dec
movsb
dec
pop
pushf
add
mov
test
lret
inc
movzwl
pop
out
add
mov
leave
shlb
sub
scas
loop
adc
popa
inc
arpl
xchg
push
dec
int
cmpsb
dec
pop
icebp
imul
push
call
dec
imul
cmp
sbbb
mov
in
test
cmp
test
lcall
jbe
xor
push
xchg
test
jg
imul
mulb
in
daa
mov
clc
sti
mov
scas
vaddss
repz
aaa
lahf
fdivs
lret
or
shrl
inc
fisubrs
adc
mov
sub
mov
loopne
fmul
or
jne
sub
nop
das
mov
push
pop
push
cmp
sahf
xor
cwtl
xchg
sub
divb
outsl
jge
inc
push
xlat
xchg
mov
fisubs
xor
int3
scas
adc
lods
loopne
push
ljmp
es
fcomp
notb
cli
in
mov
ljmp
cmp
sub
scas
push
and
decl
sub
test
lret
xor
in
in
pop
mov
add
pop
ret
push
adc
outsb
sub
aam
push
add
adc
inc
sub
mov
jge
jne
insl
pop
cmpsl
push
cltd
dec
sbb
jge
dec
push
xchg
ja
shlb
insl
push
sub
mov
adc
or
pop
stos
sbb
add
xchg
mov
addr16
in
xchg
scas
pop
xchg
mov
xor
daa
inc
fwait
subl
lods
xlat
jbe
shlb
fadds
mov
adc
push
mov
scas
lret
push
jecxz
mov
cmpsl
mov
insl
and
sbb
sub
xor
ret
ja
sarl
shrb
leavew
into
addr16
in
aas
add
jl
pop
push
pop
jle
jns
lcall
daa
aam
lods
aaa
cmp
jae
cmp
out
xchg
pop
push
mov
mov
add
adc
imul
pop
inc
test
jg
stc
shl
imul
scas
mov
sub
add
xchg
mov
hlt
or
aam
mov
cmp
dec
in
push
jo
or
push
sub
or
push
fldt
and
mov
cmp
pop
shrl
push
cmpsb
xor
loope
rcl
std
push
sahf
xor
adc
jle
adc
or
out
xchg
mov
lods
mov
fdivl
movsl
aam
jae
mov
pop
jge
iret
inc
xchg
cmp
mov
filds
push
les
sub
mov
pusha
leave
mov
test
clc
test
push
loope
fistpl
testl
add
imul
or
testl
push
test
adc
xchg
xor
push
mov
jne
das
pop
mov
icebp
insl
add
cmp
and
cwtl
sub
nop
loopne
dec
push
adc
pop
mov
or
scas
imul
or
test
mov
cmpsb
popf
push
push
clc
shl
cmp
ss
lret
cmc
daa
outsl
cmp
notb
push
pusha
cmpsl
roll
mov
mov
mov
push
and
movsb
bnd
cmp
enter
int
ret
inc
popa
adc
into
in
push
imul
cmpl
repnz
ret
loopne
clc
stos
clc
adc
lods
ret
fstl
pusha
ss
leave
subb
inc
push
pusha
pop
insb
add
shll
jo
jo
lods
xchg
or
sarb
mov
ret
mov
mov
pop
dec
aaa
in
insb
aad
and
xor
pop
ds
outsl
jns
or
dec
and
leave
mov
into
push
stos
cmp
mov
sbb
outsl
xor
ljmp
out
cmpsl
outsl
pop
ja
xor
mov
cmpsl
fwait
mov
nop
mov
jp
add
mov
or
pop
icebp
pop
xchg
je
xchg
add
mul
lock
push
sub
in
cmpsl
out
lea
loop
or
loop
or
jne
dec
stos
mov
clc
out
xor
sub
cmp
cmpsb
xchg
adc
je
dec
mov
lcall
xchg
push
sub
ret
pop
mov
fptan
int3
leave
aaa
insl
test
flds
mov
imul
mov
jns
js
or
das
test
sub
xchg
stc
mov
mov
imul
sbb
negl
dec
ficompl
imul
es
and
mov
push
push
lods
push
idivb
loopne
aas
leave
rcrb
aaa
or
pop
fwait
sti
aad
mov
addr16
adc
nop
insb
jmp
pop
jno
fcompl
ja
mov
cmpl
fstpl
mov
int
popa
repnz
and
pop
cmp
je
dec
pop
ja
adc
pusha
adc
mov
pusha
imull
cmp
js
fstps
pop
push
push
mov
xchg
orb
lods
insl
ret
cmp
adc
lret
popa
jns
lret
pop
mov
cmp
int3
sub
rcl
bound
cmpsl
cltd
inc
mov
arpl
cld
lcall
in
stos
out
out
push
dec
scas
out
xchg
pop
cmp
xorb
sub
enter
mov
leave
inc
rclb
fsts
into
enter
add
xor
pop
incb
jp
pop
data16
into
sbbb
aas
push
rcrb
das
loopew
mov
int3
mov
hlt
clc
test
dec
and
inc
adc
addr16
insb
mov
int3
push
sbb
ret
fistpl
pop
rol
pusha
mov
ret
fldl
ds
push
mov
leave
push
insb
aad
and
rcrl
adc
int
jno
mov
cmc
xchg
clc
outsb
jo
ret
sub
inc
test
mov
adc
xchg
mov
jno
mov
jmp
adc
clc
sbb
ds
popf
mov
mov
add
or
sub
jno
fdiv
add
daa
sub
sbb
and
sub
jnp
mov
adc
imul
and
inc
pop
fs
and
sub
xchg
push
jo
mov
cmp
ds
pushf
push
adc
je
cmpsl
push
jb
sub
jbe
push
mov
push
imul
cmc
pop
into
sub
adc
push
fnstenv
or
daa
mov
mull
xor
mov
addr16
mov
xchg
cltd
loop
arpl
sub
push
aaa
shll
mov
mov
fisttpl
and
in
pop
push
or
in
dec
push
popa
dec
out
pop
jg
xchg
mov
outsl
sahf
int
inc
mov
out
cltd
pusha
sub
xlat
sbb
stc
nop
sbb
mov
lock
cmp
xchg
xor
xor
pop
jmp
test
in
pop
dec
mov
inc
jg
push
popf
movsb
push
out
add
xchg
jle
pop
out
cmpsl
pop
xor
pop
in
addr16
push
xor
jo
mov
jnp
sub
sub
bound
jns
sub
dec
push
das
rolb
xorb
push
addr16
sbb
out
inc
add
addr16
cmpsb
xchg
pop
mov
test
lods
xchg
insl
add
mov
dec
fnstsw
add
jne
sti
inc
test
fldl
xchg
fsubr
scas
jl
out
fldcw
sarl
lcall
xor
or
inc
andb
scas
xor
lret
ds
fadds
sub
adc
shrb
arpl
pop
ljmp
add
inc
popa
pop
pushf
dec
sbb
imul
outsb
mov
fdiv
mov
mov
out
sbbl
pop
sbb
and
push
lods
insb
inc
pop
cmc
loopne
xor
mov
mov
jmp
fstpl
sub
lock
scas
imul
fwait
add
divb
xchg
cs
dec
xor
shrl
rorl
cmc
cwtl
or
mov
sbb
adc
mov
lods
inc
lret
cmc
xchg
ds
hlt
out
dec
loopne
or
pop
cmp
cmc
rcll
mov
xchg
push
fdivrs
dec
test
aas
andb
inc
sarl
and
hlt
test
pop
aaa
into
cmp
popf
xor
pop
or
lret
xchg
loope
fistpl
je
in
jl,pn
mov
leave
xor
sti
aaa
adc
mov
loopne
call
jge
pushf
subb
sahf
mov
jo
mov
cmp
arpl
rolb
sub
jne
test
and
jl
add
or
push
test
out
xchg
sub
push
adc
add
mov
sub
or
mov
dec
jp
out
or
aad
shld
movsl
add
xlat
xchg
and
stos
std
dec
movaps
adc
cmp
lcall
ja
push
in
push
mov
inc
lods
das
cmp
xlat
mov
dec
pop
sahf
jge
dec
sub
iret
clc
jno
stos
lock
fsubrl
mov
dec
mov
mov
fadd
insb
fstpt
add
insl
push
mov
test
imul
loop
mov
adc
call
arpl
push
cltd
andl
inc
into
jecxz
std
push
das
into
gs
jbe
loope
ret
mov
movzbl
ret
roll
les
xlat
push
mov
mov
incl
or
and
ljmp
mov
lds
and
aad
je
jae
pop
sub
loope
sbb
les
lock
xor
loope
adc
xor
icebp
or
adc
sahf
sti
gs
push
xchg
or
jle
mov
bound
out
je
adc
mov
sub
shrb
push
xor
stos
ljmp
mov
push
lcall
mov
lcall
aaa
push
sbb
aam
mov
shl
pop
imul
insl
ds
call
mov
ja
es
call
jae
call
frstor
cwtl
jmp
ficoml
push
inc
loope
or
pop
les
jl
movsl
add
bound
sti
lds
es
fsts
jno
movsb
inc
mov
sub
and
aad
cs
pop
and
lret
adc
lods
push
push
push
mov
mov
push
pop
cmp
or
pop
jae
pop
shr
fsubr
cltd
test
imul
lds
mov
xchg
dec
dec
or
push
mov
dec
dec
lret
aas
pop
add
jo
inc
lcall
aas
pushl
int3
inc
jae
inc
push
add
clc
inc
data16
xchg
cmc
lret
adc
cmp
dec
call
mov
loop
stc
adcb
adc
fldenv
pop
inc
mov
lock
imul
ret
and
insl
xchg
iret
aaa
decb
or
jg
int
dec
cwtl
test
test
adc
push
movsl
add
sti
iret
add
jbe
in
out
mov
cmp
mov
xchg
aad
mov
pop
jns
aam
cli
xchg
out
push
loope
sub
pop
aas
push
xor
cmp
ja
stc
jmp
push
cmp
cmpsb
imul
jnp
aam
cmp
mov
mov
cwtl
lods
mov
test
jg
mov
and
push
and
cld
push
out
test
movsl
push
push
out
inc
ljmp
jae
mov
in
push
movsb
imul
in
dec
pop
movsl
cmp
insb
iret
lcall
cmp
fcom
inc
test
iret
fcmovnbe
sub
jae
jmp
mov
xchg
stos
pusha
adc
imul
loope
jmp
es
jb
and
pop
out
rcr
jb
sbb
rcrl
push
imul
into
mov
and
pop
jmp
add
mov
sub
cmp
mov
ljmp
and
push
lahf
cli
je
jbe
pop
xor
lea
in
aas
jbe
jle
pop
sbb
outsb
testl
les
jle
pushf
scas
pop
dec
pop
jp
and
sbb
fiaddl
cltd
lea
fcoml
cmp
pushf
add
lcall
jo
stos
jp
cmp
out
aam
xchg
sub
cwtl
ds
jmp
fdivs
mov
call
or
lahf
dec
mov
sbb
xchg
jge
pop
sub
push
push
sbb
mov
jmp
mov
inc
push
jbe
mov
sub
xchg
lods
jne
mov
push
flds
dec
lods
mov
in
test
loopne
push
fsubrl
in
xor
push
stos
pusha
aam
imul
inc
popf
hlt
divl
or
shll
shlb
sbb
adc
xchg
or
dec
popa
movsl
add
mov
push
test
pop
lahf
or
stc
inc
lret
push
pop
jp
lea
sbb
fpatan
pop
jl
cmp
test
cltd
sub
fisttpl
dec
pop
hlt
inc
and
inc
mov
insb
xchg
push
fidivl
sub
jne
dec
int
mov
je
ret
mov
outsb
cmp
cmpsl
add
mov
loope
dec
push
cltd
jle
repnz
pop
sbbl
int3
push
dec
mov
pop
insb
sub
out
or
mov
popa
xchg
rolb
enter
out
or
jmp
mov
pop
dec
fnstsw
jge
in
adcb
call
outsl
pop
lods
nop
sbbl
push
sbb
mov
push
clc
lret
pop
jno
sbb
jb
xchg
pop
hlt
lret
pop
stc
inc
movsb
out
cmc
xor
in
xchg
add
int3
or
arpl
fbld
pop
push
lods
inc
mov
xlat
imul
jne
push
notl
pop
data16
xor
mov
cmp
dec
loop
mov
cs
pop
lahf
cmpsb
lret
push
pop
in
sub
inc
pop
in
inc
push
iret
shlw
cmp
jbe
bound
out
push
pxor
mov
push
in
push
leave
cmp
inc
sub
adc
ds
mov
jb
hlt
lahf
int3
sbb
test
dec
mov
jne
xchg
divl
add
mov
xchg
push
in
pop
xor
pop
dec
mov
test
jp
rcr
adc
sub
adc
les
lea
sub
mov
sbb
adc
aad
add
stos
rcll
or
cld
adcl
fadds
sbb
and
add
stos
mov
fildll
dec
in
nop
adc
add
insb
jle
addb
add
cs
sbbb
mov
xor
je
xorl
fdivrp
cmp
sub
shrl
push
popa
push
repz
ljmp
dec
cmp
cmp
std
inc
scas
jmp
sbb
cli
push
test
scas
fnsave
dec
into
pop
fbstp
cmpsl
ret
rol
ja
cmpsb
adc
and
cmp
jl
sti
mov
fdivr
push
mov
cltd
rcrb
mov
sbb
jo
mov
mov
mov
xchg
cmc
dec
stc
loopne
push
xchg
sub
xor
mov
xchg
add
pusha
ss
insl
inc
lret
adc
cmp
fldcw
dec
nop
arpl
push
jmp
cmpsb
shrb
repz
xor
adc
filds
adc
dec
out
data16
stos
dec
loopne
sti
lods
cmp
test
sarl
orl
sbb
push
jp
inc
imul
subl
rcl
popf
mov
pop
out
sub
pop
repnz
jns
imulb
dec
or
pop
sbb
push
push
sub
cltd
cmc
mov
jg
in
in
jmp
xchg
ret
ret
mov
ss
cmp
clc
nop
dec
es
lods
push
out
in
lea
pop
outsb
leave
inc
mov
leave
es
inc
mov
jae
fldcw
pop
rcrb
fisttpl
pop
gs
push
movsb
out
cmp
loopne
adc
push
addr16
cmpsl
or
fucomi
sub
xchg
cs
js
lcall
and
adc
mov
adc
scas
in
push
cltd
rcrl
mov
add
stos
push
sub
nop
inc
stos
repz
and
jmp
orl
fdiv
mov
dec
jge
mov
ds
fbstp
mov
cld
and
fsubl
dec
sarb
mov
aaa
aas
push
mov
sub
test
out
jbe
andb
lock
test
lds
push
sbb
or
jg
adc
out
aaa
lock
sub
jno
nop
pop
test
xor
pop
mov
adc
add
inc
fcmovnbe
repz
mov
sahf
dec
push
cmp
sub
inc
dec
jne
push
out
xor
or
and
jle
mov
lea
call
mov
mov
adc
mov
mov
repnz
stc
inc
icebp
lcall
iret
mov
mov
test
movsl
repnz
sbb
push
outsb
add
loop
lea
inc
movhps
and
xor
mov
out
sahf
pop
rcrl
jle
cmpsb
pop
push
cmpsl
mov
pop
rorl
cld
dec
scas
xor
adc
dec
prefetchwt1
icebp
jl
xchg
insb
aad
pop
cld
dec
jge
dec
inc
and
aas
loope
mov
popa
sysret
out
or
sub
inc
hlt
sub
das
inc
pushf
mov
inc
leave
or
divb
mov
int
ret
xlat
mov
jp
mov
adcb
adc
inc
cld
iret
cmp
jmp
jecxz
xorb
sub
adc
enter
insl
fucomip
cmp
stos
rcll
lea
mov
and
aas
jp
pop
mov
xchg
xchg
lods
aam
je
sbb
xor
push
mov
int
and
pop
push
mov
imul
xlat
testl
lds
xchg
push
mov
rorb
pop
xchg
lea
fiaddl
xor
icebp
push
jge
outsl
sub
dec
add
jae
sarl
jnp
and
sub
insb
jp
jbe
adc
cmp
or
mov
mov
lods
mov
stos
ss
repz
dec
push
das
mov
daa
mov
xchg
xor
call
ret
adc
mov
push
and
les
mov
stc
in
stc
nop
push
sbb
mov
mov
sbb
clc
push
sbb
sbb
adc
cmp
test
insl
in
sahf
popa
mov
outsl
enter
dec
fs
rcl
push
in
loope
call
test
xchg
sbb
loopne
push
fiaddl
cwtl
in
cli
inc
sub
pop
jae
jg
jle
mov
mov
sub
loopne
addr16
ljmp
jno
inc
cwtl
dec
enter
sub
or
out
nop
sub
add
lcall
in
sub
sub
xchg
mov
sbbb
jo
shlb
cltd
xor
mov
in
rolb
mov
fsts
xchg
xor
lret
or
pop
imul
ljmp
ds
mov
fcmovnbe
icebp
adc
outsb
insb
lds
and
cmp
mov
dec
or
cmc
outsb
std
inc
lds
jmp
and
fidivrl
jmp
sub
mov
popa
in
leave
lahf
mov
subl
jbe
sarb
cmp
mov
sti
rcpps
push
movsl
mov
xlat
nop
fisubl
repz
adc
pop
push
aad
mov
hlt
addr16
push
mov
insb
sub
add
cmp
pop
ljmp
cmc
adc
mov
pop
sub
pushf
les
sub
and
pop
std
xchg
nop
je
dec
xor
dec
loopne
pop
push
jb
ret
into
cmpsb
adc
pop
push
push
out
faddl
or
xor
jbe
mov
lahf
dec
mov
cwtl
mov
stos
iret
mov
and
push
cmpb
stos
repnz
push
add
or
mov
lret
fsub
movsl
jnp
out
cmc
dec
sbb
stos
test
mov
sub
stos
cmp
repnz
aam
pop
ljmp
imul
adc
adc
xlat
add
jne
test
dec
pop
push
arpl
xor
push
cmpl
jl
pop
sub
repz
push
fsubrl
or
inc
mov
js
xor
inc
fs
fldenv
jno
dec
fsubr
je
adc
pop
or
pop
inc
sub
popa
xor
lret
enter
push
cmp
jecxz
mov
mov
js
stc
idivl
mov
add
adc
lcall
sub
enter
fidivl
out
lret
pop
lds
sbb
cmp
in
sahf
xor
sbb
and
sub
andl
xchg
adc
mov
inc
fnstenv
or
or
push
notl
stos
jge
fmull
mov
sbb
popf
fwait
add
lods
sti
mov
aad
and
shl
push
jp
xchg
sub
adc
jb
adc
loopne
add
std
xor
pop
xchg
into
add
fisttps
lcall
arpl
ret
negb
xchg
mov
mov
ja
dec
or
ficoml
sbb
shll
xchg
xchg
in
fstpt
stc
jg
mov
cmpl
sub
sub
pop
test
shrb
psllw
pop
adc
jnp
mov
pop
hlt
imul
xchg
xchg
dec
add
cmp
icebp
imul
unpckhps
lds
imulb
in
fisubs
test
arpl
or
mov
xchg
pusha
movsb
mov
cmp
mov
push
iret
aas
ficoml
cld
sbb
les
sti
mov
mov
gs
mov
arpl
or
mov
pop
cmp
pop
xchg
nop
mov
pop
clc
movsl
js
push
aaa
cmp
cmp
mov
mov
dec
repz
rorb
pop
mov
mov
cltd
xor
mov
mov
adc
or
call
xchg
es
stos
arpl
out
dec
mov
cwtl
mov
and
lahf
mov
pop
cmpl
xchg
pop
call
and
sarb
jno
pop
sub
push
dec
jecxz
sbb
xlat
adcb
in
je
mov
jmp
js
mov
movsw
pushf
cmp
rcll
xchg
inc
pusha
push
jle
ss
mov
int3
jno
xor
xchg
popa
clc
mov
dec
les
mov
imul
movsb
rcrl
rorb
pushf
xor
push
push
into
mull
out
adc
jne
fcomps
lcall
jns
gs
movsb
mov
cmp
ror
cmp
mov
fidivs
mov
xchg
js
dec
jge
mov
js,pn
inc
ret
mov
lcall
jge
jbe
pop
mov
test
or
or
insl
cmp
lock
fisttpl
lds
fnstsw
clc
and
out
xor
push
dec
jmp
push
mov
mov
int3
inc
pop
and
mov
insb
imul
mov
mov
inc
mov
es
scas
mov
mov
jp
not
jns
xor
insb
out
ficoms
stc
pusha
xchg
cmpsb
cmp
imul
xchg
imul
push
cmp
sbb
lea
fwait
mov
maxps
and
fdivr
mov
stos
hlt
inc
pop
es
jle
jp
sub
gs
dec
dec
lock
in
in
and
out
push
mov
xor
cli
or
sbb
shrl
ret
test
aad
repnz
lret
pop
or
add
push
jp
fs
arpl
pop
xlat
not
aaa
outsl
or
sti
jmp
sbb
cmp
push
mov
xor
sub
xchg
sub
insb
mov
xchg
icebp
inc
push
hlt
ss
add
adc
test
std
test
cs
fildll
mov
mov
fisttps
push
sub
sbb
aad
xchg
mov
ja
push
adc
enter
call
iret
cwtl
pop
sbb
faddl
lahf
ss
ja
lods
and
inc
xlat
cmpsb
inc
xor
adc
fs
xor
or
dec
cmp
aaa
test
and
jb
xor
inc
mov
jns
popa
and
inc
and
std
icebp
xlat
adc
jl
aaa
lods
loopne
sbb
clc
ret
insb
mov
repz
enter
repz
xchg
cmc
push
push
inc
pop
push
repz
push
std
imul
mov
pop
or
icebp
and
push
jl
adcl
push
mov
and
push
in
mov
sub
mov
shll
jmp
dec
jge
add
out
sahf
iret
push
add
insl
jg
jge
xor
sarb
mov
rcl
cmp
push
out
js
xor
or
dec
or
mov
icebp
dec
or
push
lcall
out
push
aas
or
add
mov
pop
xlat
outsb
mov
mov
lods
cmc
pop
and
sub
leave
inc
stos
push
idivl
xor
out
inc
cmpsl
int3
push
insb
and
mov
stc
push
das
jbe
xor
ljmp
jbe
adc
push
mov
inc
jb
gs
jp
jge
out
repnz
icebp
sub
aad
jg
add
push
mov
in
sti
jge
mov
out
popf
aad
push
mov
pop
cmp
jecxz
mul
addr16
push
pop
sub
pop
cltd
in
ret
shl
push
xlat
dec
lods
fnstcw
mov
pop
sbb
enter
fldt
cmpsl
and
arpl
rep
test
iret
mov
dec
dec
adc
stos
inc
adc
cmp
jmp
or
sahf
dec
lret
add
and
jle
mov
sahf
jle
fs
cltd
outsb
mov
mov
inc
cmp
orl
test
inc
int
mov
das
sahf
pop
mov
mov
inc
push
jbe
xchg
outsl
rorb
aad
xor
out
cmpsl
xor
jmp
jbe
push
jp
dec
leave
add
xlat
push
inc
xchg
out
outsl
fstpl
mov
icebp
hlt
mov
xor
fldenv
outsb
add
adc
mov
fs
iret
arpl
inc
repz
lds
mov
pop
ds
imul
cli
test
jns
xor
aas
adc
dec
xor
sbb
push
cmp
mov
cmpb
pop
sub
test
jg
pop
addl
adc
mov
mov
lret
bswap
in
or
repz
arpl
mov
xchg
add
xchg
negl
dec
sub
jl
dec
mov
shlb
pusha
xchg
dec
loopne
ret
add
push
sbb
popa
movl
sbb
mov
push
imul
test
push
push
fcomi
hlt
xor
and
jnp
pop
xchg
jns
fsubrs
mov
stc
out
jg
out
or
movsl
xor
jmp
ret
adc
pop
mov
dec
mov
roll
pop
scas
add
bound
test
mov
fwait
mov
clc
sub
sub
sbb
xchg
test
pusha
jp
push
insl
jg
dec
or
fistpl
test
mov
mov
ss
pop
add
mov
lods
sbb
out
and
jns
imul
popa
lcall
gs
test
cmp
shlb
mov
aam
mov
in
xor
inc
xchg
xor
sub
into
hlt
lret
and
sti
and
dec
jge
mov
add
add
jmp
mov
cmp
movsl
ds
jae
push
xlat
cmp
xor
popf
insb
mov
lcall
mov
sbb
es
inc
imul
xchg
mov
mov
adc
lcall
insb
in
push
jmp
jbe
pop
mov
roll
mov
nop
sbb
inc
xor
gs
mov
sub
jnp
int
stos
mov
aaa
xor
xor
pop
mov
mov
shlb
bnd
xchg
popf
imul
sbb
adc
leave
data16
push
arpl
cmp
push
cltd
sub
pop
test
rcrb
adc
add
pusha
ljmp
adc
and
cmp
push
cmpsl
xchg
arpl
testl
lret
leave
jl
cld
in
xor
inc
mov
cmp
or
or
adc
pop
cmc
cmp
imul
jg
test
mov
loopne
int3
push
cmpsl
js
inc
in
sti
sbb
out
adcl
rol
gs
sub
iret
sbb
dec
mov
fsubl
sbb
sbb
and
test
out
xchg
pop
adc
jge
popf
sbb
repz
ja
dec
jp
jg
aaa
jne
mov
addr16
rolb
xor
sbb
add
scas
dec
pop
rclb
andl
adc
daa
jnp
jae
mov
jb
mov
mov
in
inc
cwtl
into
inc
mov
loopne
xor
mov
mov
adc
idivl
sti
inc
sbb
lods
inc
ljmp
out
mov
inc
mov
rcr
sahf
pop
pop
cmpl
sub
add
nop
pop
clc
jmp
fnstenv
movsl
lret
or
add
push
add
out
je
fisubl
xor
inc
push
test
jb
iret
dec
cli
bswap
pop
sub
xchg
mov
cs
movsb
xor
mov
jb
jns
jne
cwtl
cmp
pop
lods
mov
pop
faddl
push
jp
insl
in
lcall
push
and
out
mov
lcall
sbb
cltd
sti
sub
mov
sbb
nop
das
pushf
lea
push
jno
xchg
xchg
sbb
hlt
js
out
mov
xchg
adc
jns
fadd
sbb
sub
shlb
lock
rorb
mov
fldt
push
fcoml
or
fs
jns
fwait
sbbb
cmp
daa
pushf
addr16
sti
xor
or
lcall
lahf
and
xor
pop
adc
imul
xor
or
stc
and
adc
lea
xchg
hlt
sar
sub
push
jno
dec
addr16
outsl
pushf
dec
popa
mov
icebp
inc
fsubs
shr
inc
lea
or
jmp
cmp
adc
or
sahf
nop
paddd
pop
sbb
fucomp
dec
cmp
xor
sub
and
nop
push
dec
es
xorb
push
out
mov
add
out
inc
nop
push
call
sub
jb
dec
and
xchg
mov
lret
mov
shl
int
mov
jb
test
and
negb
add
subb
push
pop
mov
add
es
clc
jnp
push
in
into
sti
dec
ja
setle
and
loopne
xchg
lcall
imull
dec
jb
xorl
jge
pop
stos
mov
jl
sub
mov
mov
push
sub
mov
and
add
repnz
addb
xchg
mov
testb
out
jmp
test
lods
mov
imul
rcrb
add
or
addr16
pop
or
das
mov
cmpsb
fidivl
loop
negb
mov
ds
adc
cmp
or
xchg
decl
add
add
nop
cmp
filds
iret
scas
loop
jg
cmp
or
insb
das
inc
xlat
mov
inc
fsts
xchg
mov
mov
xchg
arpl
pop
mov
ljmp
rorb
mov
neg
popf
pop
mov
mov
push
inc
sbb
dec
aas
out
gs
fcomps
cld
fidivrl
enter
xor
shll
cwtl
xsha1
cmpsb
or
andb
add
bound
out
xor
fstpl
inc
lock
les
gs
dec
gs
inc
in
push
je
or
inc
scas
push
aaa
xchg
mov
arpl
mov
or
adc
je
icebp
imul
mov
je
les
or
or
jae
xor
mov
test
in
fs
in
punpckhbw
add
add
add
fwait
cmp
mov
mov
cmp
add
xor
lods
lds
dec
inc
out
pusha
mull
xchg
add
adc
push
pop
dec
adc
pop
fsubrl
xchg
addr16
test
lods
xchg
mov
stos
pop
cmp
inc
outsb
jl
jge
add
popf
shrl
xchg
sub
out
out
xchg
mov
adc
in
ret
mov
ret
loope
pop
shr
iret
cmc
lds
sti
out
dec
push
mov
mov
clc
ret
xor
add
mov
sbb
ficompl
outsl
imul
aam
dec
adc
shlb
mov
adc
jae
outsb
and
repz
mov
jg
mov
jle
jb
bound
pop
dec
ss
jno
sbb
call
mov
sbbl
lds
xor
and
jmp
lock
arpl
sti
push
jp
mov
pusha
dec
jp
xchg
cmpsl
jns
sbb
dec
xlat
iret
rclb
out
inc
cld
push
std
dec
aaa
xor
inc
in
jle
rcrl
xchg
inc
jecxz
ss
daa
jo
bnd
xchg
leave
cli
sar
lret
push
leave
pop
aam
mov
mov
jno
jne
mov
jecxz
jo
inc
inc
pmaxsw
mov
lods
scas
mov
loopne
push
fimuls
arpl
repnz
or
or
add
cmp
mov
lods
push
mov
add
adc
jl
fnstenv
push
push
or
rcl
mov
xchg
out
push
lods
cld
imul
or
sub
inc
sbb
std
push
popf
cs
push
push
dec
sub
jns
push
mov
or
cmp
sub
mov
mov
xchg
push
inc
notb
cmp
mov
pcmpeqb
and
sub
mov
add
pop
mov
inc
inc
fxch
cmp
addr16
daa
out
mov
sarb
pop
imul
mov
mov
loop
xchg
into
and
mov
test
mov
sbb
addr16
cwtl
cmc
lcall
mov
xchg
mov
cmp
push
jmp
stc
add
addb
push
jno
mov
or
cmpsb
add
fsub
dec
mov
in
repnz
xor
xchg
sub
pop
xchg
sub
and
ja
out
das
imul
test
mov
or
sub
rclb
sar
aam
mov
enter
jle
add
add
icebp
movsb
ret
adc
outsl
out
pop
and
fdivrl
ss
lods
stc
pop
mov
aaa
or
leave
js
or
cmp
fisubrl
push
insl
push
xor
mov
push
mov
aaa
call
faddl
push
sub
std
test
fidivs
lods
xchg
pop
test
jno
sub
or
mov
or
mov
pop
pop
je
jns
push
stos
sub
jl
push
sahf
mov
enter
sti
pop
icebp
sub
pushf
mov
push
aas
and
push
and
mov
adc
stos
fidivrs
rsqrtps
scas
xorl
push
inc
sbb
pop
inc
add
outsb
and
insb
push
nop
les
aas
push
pop
imulb
das
popa
xor
xor
push
jmp
bswap
lods
divl
fildll
mov
push
loope
iret
mov
aad
inc
hlt
sbb
fsts
das
sbb
cli
jecxz
lahf
mov
mov
fdivrs
adc
out
inc
xor
pushf
jae
data16
and
jge
pop
js
fstps
mov
adc
xor
mov
and
aas
insl
sub
addr16
push
mov
call
nop
sbb
out
mov
dec
mov
in
data16
lea
mov
daa
fs
xchg
push
cwtl
gs
out
cmpsl
xor
inc
mov
in
fildll
jp
xchg
adc
add
lods
jg
popa
movsl
stc
out
je
push
mov
mov
or
jmp
cld
xchg
pop
std
data16
sbb
lods
ds
rolb
loope
movsb
jmp
sarb
loope
sub
pop
mov
loope
pop
divl
rorb
or
cmp
xchg
stc
mov
gs
mov
adc
sub
sbb
push
dec
stos
push
inc
xchg
xor
inc
cld
movsl
add
push
xor
out
je
data16
xlat
lahf
ss
jbe
les
cmp
repz
lods
mov
sub
out
bound
sahf
clc
js
pop
loope
inc
sub
ljmp
mov
fadds
dec
mov
pop
not
xor
jg
in
mov
push
out
push
cmp
jge
leave
test
lods
push
mov
add
adc
cmpsl
out
orb
jl
scas
mov
loope
shll
add
xchg
in
rol
je
lock
dec
and
mov
sbb
dec
jecxz
movsb
sbb
in
das
cmp
repz
ljmp
lcall
push
loope
mov
mov
movsb
pop
jl
inc
push
lahf
mov
fs
jp
fcomps
xor
daa
adc
cmp
sub
inc
mov
jle
cwtl
push
inc
rcrl
mov
push
fdivr
mov
or
xchg
fiaddl
mulb
mov
dec
sti
ljmp
arpl
mov
frstor
jmp
lods
sbbl
mov
xchg
insb
mov
ret
xor
test
mov
data16
push
jge
pop
sub
sarl
mov
and
jg
xchg
mov
ja
adc
fwait
daa
ret
jae
jmp
jo
mov
lods
arpl
mov
aad
inc
cmpsb
ret
push
popa
imul
mov
pop
dec
out
aaa
rcrb
push
mov
mov
shrb
mov
les
xchg
mov
mov
jae
rcl
insb
pop
std
stc
or
lret
scas
push
cmpsl
dec
hlt
and
enter
cwtl
pop
mov
pop
in
or
cwtl
mov
jle,pn
lea
adc
mov
fisubs
jge
cli
sub
sub
add
mov
cld
inc
inc
jge
dec
ja
push
test
lods
xchg
pop
fldl
movsb
jae
mov
cmc
add
sbb
dec
push
jne
jnp
mov
inc
lds
xor
iret
data16
push
xchg
sub
out
mov
out
mov
jmp
or
enter
mov
sub
aas
xorl
mov
sbb
push
fisttps
in
or
insl
push
adc
and
test
and
loope
repnz
dec
pop
inc
sub
or
mov
cmp
scas
inc
sbb
xor
cmp
arpl
cmpsl
divl
outsl
push
jg
aaa
mov
mov
adcl
add
repz
push
and
mov
mov
add
rolb
je
xchg
dec
mov
jns
mov
imul
adc
mov
sbb
dec
enter
pop
data16
jns
in
pusha
pop
adc
mov
sbb
push
mov
jne
shlb
dec
loope
sub
faddp
mov
ror
jge
adc
push
push
sub
gs
repz
insb
sub
insl
ret
add
sbb
jp
mov
loope
mov
popa
pop
mov
into
adc
add
fmulp
outsl
mov
mov
stos
testb
and
cmpsb
push
leave
bound
push
xor
dec
and
fsubp
sbbl
inc
mov
add
push
add
xor
aad
testb
pop
call
call
leave
test
insb
iret
fstl
or
xor
gs
fcomps
pslld
in
addb
rcl
into
popf
rclb
mov
out
into
or
cmp
aad
sbb
sbb
js
mov
imul
shl
test
mov
xlat
mov
lds
push
mov
push
inc
into
mov
rorb
cmp
sbb
inc
dec
stos
stc
add
into
pop
scas
loop
sub
and
jecxz
mov
in
out
out
push
sub
idivb
loop
jb
pop
add
xor
mov
out
ret
add
out
andb
into
loope
mov
mov
push
lock
loopne
and
dec
dec
pop
pusha
or
lock
loopne
sti
icebp
out
stos
push
dec
loop
insb
int3
sbb
inc
imul
scas
and
xchg
xchg
dec
mov
mov
call
fbld
shll
out
cmpsl
decb
shr
push
mov
shrb
sbb
jle
lock
movsb
pop
arpl
fidivrs
ret
push
aas
es
mov
jmp
int3
sbb
sahf
xor
add
mov
idivl
sahf
sti
mov
add
ja
stos
leave
jecxz
cmp
test
mov
mov
or
mov
insl
adc
ret
fists
mov
mov
pop
lods
cmp
jle
pop
pusha
testl
cmp
mov
rorl
sbb
nop
cmp
sub
in
cld
bswap
mov
jle
cmp
mov
rcll
push
or
movsl
outsb
jae
push
cmpsl
je
sbb
pop
jns
cmpsb
mov
mov
mov
dec
or
pop
sub
in
es
arpl
sbb
lea
lock
and
in
jecxz
shl
call
xor
add
jo
lds
sbb
push
lret
fstps
jne
and
rcrb
and
ds
sub
inc
jg
cmp
mov
lret
popa
clc
fisubrs
aad
test
out
lods
inc
or
dec
outsl
push
aaa
jae
fnstenv
pop
and
xor
ss
jae
cmp
cmpsb
mov
xor
xor
orl
mov
out
dec
push
nop
lds
aad
ffreep
push
dec
enter
adc
jp
xchg
aaa
cltd
imul
in
stos
and
cmpsl
leave
mov
shll
dec
xor
sub
scas
push
lds
dec
gs
shrb
subl
test
or
lock
pop
mov
push
ljmp
ljmp
lods
adc
in
xchg
push
xor
cmpsb
divb
je
mov
fimull
filds
xchg
xor
test
ret
je
jge
inc
sahf
shlb
pushf
jg
mov
jb
and
faddl
mov
xchg
mov
push
dec
sub
sbb
fildll
mov
dec
mov
xchg
xchg
orb
or
stos
jbe
or
ja
xor
push
cltd
cmc
xchg
cmp
xor
xor
inc
push
popa
clc
jbe
ret
dec
pop
xchg
subl
cmpsl
aam
jns
leave
jg
addr16
andl
mov
xor
icebp
in
jnp
or
dec
es
jns
rol
sbb
sub
xchg
add
in
jnp
lock
and
cmp
dec
incl
in
into
sbb
xorl
ss
mov
pop
xlat
push
mov
fldt
lods
jmp
mov
cld
xor
imul
mov
mov
mov
xchg
out
add
xchg
mulb
out
fsubl
xchg
push
or
ss
push
sbb
jns
aam
std
lcall
sub
scas
mov
xorl
pop
leave
mov
into
iret
xor
sbb
popl
jae
adc
and
inc
jecxz
je
shrb
mov
push
sub
xchg
mov
lahf
out
dec
fdiv
jnp
sbb
cmp
mov
test
xor
scas
std
shrb
dec
pop
test
mov
sub
scas
test
jne
jns
pop
pop
mov
flds
test
jg
adc
xor
popf
adc
test
je
fnsave
inc
add
xchg
adc
dec
adc
push
scas
int3
outsl
mov
leave
jo
lods
sarb
inc
add
mov
jnp
clc
fldcw
push
dec
or
movsl
frstor
loope
mov
fistl
test
cs
dec
jecxz
sub
pop
xchg
lahf
lcall
mov
dec
lahf
add
shrb
xchg
xor
mov
mov
movsl
jg
bound
mov
push
or
and
shll
sbb
mov
sub
imul
sti
stos
lods
add
fimuls
lea
mov
xchg
in
cmp
mov
jmp
inc
ljmp
pop
mov
pop
vcvtpd2psx
rorb
inc
cltd
push
repnz
mov
sahf
dec
dec
add
in
dec
sahf
dec
lods
repz
adc
jecxz
inc
imul
adc
aas
std
or
mov
iret
jnp
jg
cmp
sbb
xchg
out
inc
sahf
sbb
fidivrl
out
jnp
into
ret
shlb
inc
xor
push
inc
stc
nop
push
pop
call
xor
sub
call
scas
push
xor
daa
sbb
xchg
repz
mov
and
inc
outsb
add
dec
rcll
push
pop
shll
repz
dec
in
jge
lar
ljmp
shl
add
icebp
sbb
mov
push
inc
lods
adc
fisubrs
sub
pop
cld
xchg
nop
pop
daa
jmp
xchg
add
mov
sub
xor
enter
loope
jle
push
outsb
daa
pop
add
mov
stos
mov
std
call
mov
out
xchg
jge
jge
push
mov
lods
inc
lock
add
inc
loopne
fwait
and
inc
popf
pop
inc
and
dec
jl
sbb
out
test
jbe
test
test
cs
popf
sub
inc
fucomp
inc
push
push
movl
lds
mov
iret
pop
sub
pop
dec
inc
scas
dec
cs
pop
imul
xor
sahf
cmp
jle
scas
pop
jnp
shl
movl
and
and
inc
xchg
cmp
test
rcr
cs
loopne
sahf
rcll
xor
mov
cltd
insl
enter
mov
aad
dec
outsl
mov
and
js
and
dec
gs
cmpb
lret
push
jp
push
mov
and
inc
adc
rcr
cld
xchg
adc
leave
sbb
jne
fsubr
mov
pop
insl
stc
test
adc
mov
sbbb
popa
xchg
outsl
pcmpgtw
rclb
iret
insb
or
jbe
or
and
cwtl
xchg
cmc
adc
pop
cltd
pop
outsl
mov
and
stos
ss
pop
js
aaa
stos
jp
bound
pop
hlt
flds
popf
bound
addb
in
sbb
and
lock
or
push
push
mov
imul
sarb
push
push
xchg
push
js
cmp
call
cmp
jmp
in
testb
imul
xor
aam
dec
mov
cmp
mov
sub
and
adcl
sub
sbb
lock
pushf
loop
dec
pop
fcomps
fcomp
xchg
jmp
add
lahf
jbe
outsl
outsb
pop
mov
sbb
jnp
loope
aam
jl
dec
js
mov
xchg
dec
cs
loop
and
call
mov
xor
inc
lea
xchg
in
xchg
iret
sbb
ret
lds
and
and
and
lea
push
sbb
out
mov
and
or
mov
mov
and
iret
lcall
fld
add
and
pop
lock
adc
adc
pop
dec
fistps
ja
xor
pop
enter
jp
sahf
negb
and
mov
ljmp
xor
loope
popa
and
in
sbb
jl
imul
cmp
push
mov
mov
cmp
clc
pop
popf
xor
rol
cmp
inc
ds
scas
repnz
sbb
xchg
sub
scas
jno
das
xor
xor
cld
jns
cs
mov
outsl
xlat
lods
inc
out
mov
cmp
push
pop
fdivs
fistpl
sub
push
jmp
jecxz
sbbb
mov
mov
int
cmp
mov
inc
rcll
aas
xor
mov
and
or
hlt
icebp
inc
or
cld
rcrb
jg
sti
and
mov
scas
lds
shl
fs
jbe
pop
xchg
aas
lcall
lcall
mov
mov
xor
or
insb
shrb
insl
add
sbb
les
rcrl
aaa
inc
push
aam
test
mov
mov
and
xor
outsb
or
fsubr
mov
lcall
cmp
push
insl
jb
sbb
adcb
cmp
mov
inc
faddl
push
and
sbbl
and
push
pop
cwtl
sbb
cmp
lock
mov
jbe
sbb
push
ret
lock
xchg
and
loope
mov
popf
cmpsb
ret
or
and
mov
shlb
addr16
mov
mov
fmuls
into
jge
pop
xor
cmp
fcoml
icebp
movsb
sub
xchg
aaa
sbb
sbb
stc
mov
fdivr
int3
jb
cmc
inc
sbb
popf
and
xor
pop
cld
mov
add
adc
xchg
jmp
cmpsl
pop
sbb
mov
jne
fisubs
xchg
aam
pusha
and
icebp
test
inc
stos
or
mov
ja
mov
call
dec
lcall
jae
inc
in
dec
mov
sub
dec
cmp
movsl
hlt
and
repz
stc
sbb
adcl
pop
andl
push
push
test
test
sub
xchg
sub
pop
pop
mov
in
das
mov
push
fcmovbe
mov
mov
popa
fs
movsl
dec
pop
out
movb
cwtl
and
or
ss
push
ss
stos
test
lods
mov
leave
xor
aaa
outsb
addr16
jbe
xchg
add
and
ret
xor
testl
or
push
cmp
xchg
mov
icebp
or
push
mov
mov
and
shl
sub
xor
sbb
out
rolb
xchg
push
jns
jb
sbb
bound
es
sub
les
std
push
mov
push
and
jle
shr
lret
push
mov
and
and
insb
jl
mov
idivb
dec
ds
dec
lret
sarb
jnp
pop
sub
or
cwtl
adc
mov
das
jnp
insb
and
imul
dec
nop
faddp
pop
cwtl
daa
fbld
and
daa
and
loopne
dec
xchg
xor
nop
in
fstpl
mov
mov
pop
out
add
inc
std
cli
out
cmp
clc
in
xor
stos
outsb
dec
sbb
cmp
and
inc
outsb
add
xchg
xchg
and
movsl
mov
inc
push
add
sub
sti
push
jo
push
stos
cmp
ret
mov
shrb
cwtl
mov
lds
cwtl
lds
lea
mov
inc
mov
icebp
call
dec
rcrb
push
lods
popa
xchg
pop
or
shll
rolb
and
push
sub
dec
xor
cmp
aas
das
pop
daa
inc
mov
fwait
pop
mov
loop
enter
jge
xchg
cmpsl
fwait
out
aas
inc
enter
call
scas
ljmp
jno
repnz
adc
je
movsl
push
jp
ret
jb
sub
stos
lret
rolb
adc
ja
mov
push
lea
adc
rcrb
nop
retw
push
mov
lods
mov
pop
lock
add
mov
inc
ficompl
outsl
inc
or
popa
add
jno
mov
dec
xchg
inc
add
xchg
dec
push
ljmp
addb
push
add
inc
cmpb
push
dec
xchg
sub
lds
data16
pop
xor
xor
lret
test
jns
imul
sbb
dec
push
jl
mov
jecxz
fidivrs
cmpsb
push
sbb
leave
ds
test
jmp
hlt
adc
xorb
adc
xchg
jbe
out
mov
ret
ljmp
cwtl
or
dec
mov
popf
imul
shlb
mov
loopne
outsb
adc
loope
les
pop
sbb
mov
sub
insb
add
fsubrs
sub
popf
scas
fs
pushf
iret
and
mov
jno
mov
icebp
mov
cmpsl
fdivs
or
adc
pop
icebp
iret
push
and
xchg
aaa
outsb
jmp
imul
loop
pop
in
dec
cmc
rorl
adc
mov
das
pop
push
lock
outsb
mov
cmp
add
mov
stc
pop
daa
inc
out
fstpl
aam
mov
pop
push
bound
scas
mov
lcall
mov
xor
scas
jecxz
jns
and
mov
sbb
pop
jecxz
ret
push
xor
dec
jnp
call
js
mov
shrl
fsubr
inc
inc
pop
jo
fs
xchg
xchg
aam
pop
mov
or
cs
and
mov
js
cmp
mov
and
in
push
sbb
cmp
jg
jb
into
pop
push
sbb
xor
and
xchg
das
mov
add
iret
outsl
dec
bound
popf
leave
int
loop
fldl2e
out
mov
xor
push
mov
loopne
push
out
xchg
push
outsb
xor
les
daa
mulb
vcvtps2dq
xchg
lods
or
stos
inc
int
sti
cmpsl
in
fcomps
cmc
dec
and
sbb
fisubl
push
aaa
outsb
mov
stc
test
out
aad
ret
jle
nop
sbb
inc
lret
mov
shrl
repnz
jno
mov
movsl
mov
and
mov
xchg
subb
movsb
adc
mov
ror
stc
adc
inc
sbb
mov
mov
push
js
filds
shlb
jbe
fisubl
shlb
leave
xbegin
leave
es
jnp
cmp
push
mov
inc
sub
in
insb
cmp
adc
les
fistps
loop
jb
mov
stos
adc
fldenv
int
cmp
ljmp
mov
mov
mov
cmp
pop
shrl
shrb
or
xor
sub
in
ljmp
cli
push
repnz
lret
xchg
jb
in
pop
clc
in
call
add
shlb
or
jbe
xor
xchg
mov
imul
push
or
sub
pop
push
int
push
out
shll
arpl
cmpsb
in
mov
mov
jg
daa
es
je
ja
add
jae
das
movb
movsb
scas
cmp
imul
std
lods
inc
lock
mov
lea
call
insl
add
mov
mov
stc
enter
bnd
dec
data16
mov
jle
mov
or
sti
xchg
loope
add
xor
insl
lods
sbb
lret
push
out
mov
sub
mov
cmc
mov
cmp
mov
inc
ret
pop
xor
push
imul
bndstx
and
inc
fldt
xlat
jg
outsl
jno
scas
cmp
shlb
vpsllq
xor
add
pop
dec
stc
cmp
stc
adc
test
cs
imul
adc
loope
data16
mov
adc
lret
inc
es
cmc
lea
call
inc
xchg
scas
cmpl
sti
popf
shlb
mov
mov
leave
fldenv
pusha
or
sbb
sbb
or
addr16
jge
inc
mov
into
sub
jnp
push
jmp
inc
es
fdivl
insl
sub
nop
jnp
iret
add
lret
add
push
dec
mov
popa
lret
xchg
pop
add
enter
xchg
call
cmpsb
push
ljmp
push
mov
sub
push
aaa
and
pushf
cli
aas
mov
rep
fnsave
nop
jge
pop
sub
subl
in
stc
xchg
lret
jae
jo
sbb
or
mov
divb
hlt
dec
out
push
clc
adc
rcrl
pop
mov
mov
movl
jge
dec
clc
aad
cmp
movsl
push
lods
in
imul
repnz
jb
mov
cmc
out
dec
and
arpl
rcl
aam
leave
icebp
and
aam
lret
pop
sahf
dec
adc
jp
pusha
cmp
xor
mov
xlat
repz
imul
push
mov
and
shrl
jbe
inc
adc
jbe
pop
or
dec
repz
lret
vpackssdw
adc
pop
mov
shrl
test
lret
pushf
push
gs
or
cltd
scas
out
pop
mov
cmp
in
sub
mov
xchg
or
lds
cmp
pop
mov
push
scas
cmpb
scas
shlb
pop
stos
out
in
movsl
lahf
ret
cmp
hlt
shl
jno
fisubl
xchg
call
outsl
ja
lods
sti
fnsave
test
xchg
push
xchg
mov
push
mov
sub
add
mov
jle
daa
lods
or
jns
push
jl
fdivrl
outsl
jns
decl
adc
rcl
sub
gs
cwtl
push
sbb
cs
movsb
fmuls
loope
mov
notb
jle
das
or
inc
xor
leave
xchg
jle
loop
ss
cli
addr16
imul
ret
ljmp
aas
out
cmp
shrb
movl
repnz
insb
push
add
xor
rclb
arpl
subl
ret
inc
ficoms
cmc
jmp
fcomps
js
lahf
imul
cmp
repz
stos
subl
lcallw
arpl
sbb
test
jp
movsb
and
das
push
inc
mov
lea
xchg
gs
stos
enter
sub
lods
je
imul
bnd
cmpsb
stos
xchg
pop
mov
mov
cs
sub
jns
push
mov
shlb
imul
test
xlat
xor
push
xchg
lahf
sbbl
das
jo
in
out
icebp
inc
pop
xor
ret
out
repz
sub
jecxz
insb
mov
mov
mov
fisttpll
xchg
push
imul
sub
lret
mov
stos
icebp
stos
or
movsl
fwait
xor
xor
je
ss
xor
mov
jl
jo
gs
xlat
pop
pusha
incl
rorl
jecxz
mov
sbb
xlat
cs
fidivl
adcb
inc
pop
roll
leave
fstps
xor
jb
dec
popa
clc
jb
mov
xor
jbe
pop
sbb
jne
cli
pushf
xor
sarl
cli
mov
stos
inc
and
xchg
sub
imul
inc
pop
in
jecxz
lret
and
mov
fldl
and
lea
sub
mov
ljmp
sbb
dec
jno
out
and
mov
pop
sbb
push
sub
scas
pop
mov
push
fcomps
mov
push
movsl
add
jnp
ss
sub
add
es
pusha
or
mov
cmp
lods
stos
xchg
add
inc
andl
inc
and
inc
popa
inc
in
adc
pusha
ds
lcall
testb
vmread
push
lcall
jecxz
dec
loope
loopne
je
mov
mov
fimuls
fwait
mov
add
sbb
and
xchg
cmp
leave
mov
xor
push
fnstsw
mov
fmul
arpl
cmp
push
dec
test
lea
cs
push
lock
fisttpll
or
jmp
mov
xor
cmpsb
pop
mov
out
loop
aam
outsl
mov
test
dec
and
fistps
popa
divb
icebp
test
lds
or
jno
sbb
repnz
push
mov
sub
lea
jo
lahf
sub
clc
or
dec
push
cmc
sub
popf
stos
cmp
mov
add
mov
or
test
test
pop
xchg
mov
push
aas
inc
sub
out
stos
mov
ds
fsubrl
ds
cmp
cmc
mov
push
pushf
pop
xor
cmpsb
cmp
rol
les
mov
pop
inc
push
cmp
sub
stc
mov
shr
or
lock
mov
adc
xchg
dec
dec
ret
into
dec
out
mov
xchg
sti
je
aaa
jb
push
int
pop
xchg
andb
mov
cli
push
dec
xor
das
movsl
lock
in
outsb
mov
jb
cmp
pop
test
insl
dec
setg
dec
out
addb
lret
ret
cmp
push
stc
add
aam
and
inc
fsubl
and
call
pop
and
lret
mov
emms
lods
call
mov
lods
pushf
fwait
xor
and
push
call
mov
fmull
push
cmp
popf
movsb
pushf
or
int
sbb
push
lods
fistpll
mov
inc
int
je
cmp
add
outsb
add
hlt
sti
clc
mov
fstl
dec
cmovb
popf
call
in
xchg
pop
cmp
pop
mov
add
mov
and
arpl
sbb
jno
pop
pop
xlat
in
mov
popf
stc
sbbb
jb
jnp
arpl
jbe
inc
repz
ds
adc
pop
mov
mov
imul
push
gs
cli
dec
jecxz
shlb
les
sbbl
jg
pushf
adc
add
mov
int
jns
and
adc
jne
shll
call
in
scas
arpl
and
sbb
lods
data16
sbb
fdivl
push
je
add
push
ljmp
dec
jnp
mov
push
fsubrp
mov
push
mov
mov
idivl
pushf
in
pusha
jae
lea
and
pushf
mov
es
mov
outsb
call
fwait
mov
inc
mov
cmpl
icebp
mov
mov
mov
mul
inc
push
xchg
sub
cli
and
push
divb
pop
insb
pop
std
and
lahf
push
adc
mov
daa
vpsubusw
sbb
nop
lahf
test
add
inc
in
xorl
and
adc
scas
ret
dec
adc
mov
stos
stos
sub
bound
dec
iret
scas
jmp
pop
push
rorb
fstpt
sub
jb
dec
lock
in
fsts
fwait
lcall
lretw
mov
int
mov
push
icebp
adc
dec
int
leave
sbb
xor
and
mov
lahf
sbb
xchg
xor
jo
sub
push
mov
adcb
sbb
mov
ds
leave
filds
adc
test
jle,pn
ljmp
jno
cmp
out
jge
push
pusha
divl
je
mov
jle
int
ret
mov
test
rol
xchg
mov
mov
push
ds
adc
test
and
loopne
sbb
ss
xchg
mov
out
out
and
lea
ret
lret
fdivrp
jb
mov
xchg
sbb
xchg
popf
add
lods
mov
stos
scas
stc
call
inc
push
push
lahf
xchg
sub
and
pop
xlat
loope
inc
pop
je
inc
cmpl
mov
dec
test
rorb
jg
retw
sbb
xor
xchg
xorb
mov
loopne
test
inc
pop
rorb
sub
leave
xor
dec
mov
and
outsb
and
mov
adc
fldt
cmp
es
popa
jne
or
push
mov
and
xchg
outsb
sti
clc
in
cmpsb
xchg
xchg
mov
movl
test
fs
fisubs
push
test
sbb
movsb
jmp
mov
add
repz
add
push
mov
cltd
xor
cmpsl
xchg
cs
rorb
sub
mov
mov
hlt
lods
adc
xchg
jo
scas
xchg
adc
sahf
or
cmpsb
divl
cmp
sub
orl
or
cmc
cmp
in
andb
dec
add
pop
dec
idivl
inc
loop
in
cmpsl
sbb
or
cs
mov
stos
inc
xlat
in
loop
lea
sub
lds
jb
and
pusha
and
mov
lret
fyl2x
or
xor
push
mov
lods
idivb
aad
lods
test
pop
outsl
pop
lret
xchg
loop
inc
scas
lods
mov
sbb
inc
jmp
pop
ret
push
or
and
mov
nop
cmp
data16
push
popa
cmp
xchg
std
repz
shlb
lock
ja
sub
add
dec
iret
and
mov
ds
adc
data16
out
jnp
or
push
mov
sub
call
std
jne
lods
cmpsb
sbb
repz
call
cli
fstps
stc
inc
pop
sub
xchg
sub
arpl
scas
push
add
pusha
imull
inc
jle
sub
outsl
test
inc
dec
popf
add
testl
test
push
xchg
pop
lock
mov
lahf
neg
pop
mov
mov
fsubs
xor
mov
cmp
fwait
inc
fwait
or
jns
int
cmp
cmp
mov
andb
pop
fbstp
sbb
lds
std
add
xlat
push
out
test
outsl
add
lods
scas
or
push
fcmovu
jbe
bound
xor
stos
inc
out
sahf
ss
mov
idivb
inc
fisubl
mov
sbb
ljmp
mov
jb
inc
inc
outsb
addb
dec
out
mov
or
mov
sarb
push
shrl
lcall
and
outsb
mov
jecxz
sbb
loope
iret
xor
data16
sti
cltd
test
or
lods
push
pop
movsl
sbb
call
test
aad
mov
scas
imul
cmp
jno
inc
mov
xor
int3
sbb
inc
lock
fidivs
sub
shrb
sub
inc
xor
bound
test
testb
jp
mov
inc
cmpsl
iret
rcrl
dec
mov
mov
and
mov
in
outsb
mov
and
mov
push
rcrb
inc
mov
stc
loop
stos
xchg
out
std
lret
outsb
ret
subb
xchg
lods
mov
push
xor
gs
arpl
daa
mov
into
add
pushf
inc
pop
xor
xchg
cmp
ss
dec
int3
push
xchg
sbb
xchg
aam
scas
inc
mov
inc
push
arpl
mov
jns
adc
mov
mov
test
xchg
and
popa
stc
in
mov
orl
lahf
imul
mov
ret
add
sub
xchg
jp
gs
mov
push
jle
xor
inc
nop
repz
cmp
mov
pop
imul
outsl
daa
cmp
mov
out
negl
pop
nop
xor
mov
ror
jl
jecxz
lret
pop
addr16
lret
bound
push
xrelease
ljmp
hlt
sbb
jae
mov
pop
xchg
and
icebp
jae
xlat
adc
repnz
mov
sbb
fdiv
push
mov
arpl
pushf
xchg
xchg
imul
adc
mov
rcr
je
shrl
sub
ret
xchg
mov
mov
jo
jp,pt
pop
mov
cwtl
and
sbbl
dec
leave
aas
push
lret
push
aad
sbbl
call
cmpsb
push
faddl
sbb
add
fwait
lock
or
mov
xchg
xor
cmpsl
jb
js
fsubl
and
adc
call
sbb
and
repz
movsb
mov
pop
jo
aas
shl
sub
stos
push
jae
inc
inc
jno
pop
jno
jecxz
sub
adc
lret
cmp
cld
jecxz
and
jecxz
ret
mov
cmc
cmp
adc
les
les
pop
pop
insl
imul
sbb
and
dec
ds
and
pop
or
fistl
adc
inc
mov
cwtl
mov
cwtl
cmc
mov
ficoms
insl
fadd
pop
jg
shll
ret
mov
and
rcr
push
ficompl
and
inc
xlat
inc
cmp
inc
int
sbbb
sti
imul
xchg
hlt
in
jnp
ds
cmp
jp
sbb
test
mov
or
mov
out
call
sbb
ljmp
test
in
ss
insl
add
scas
repnz
push
negl
mov
repz
pop
sbb
sub
and
hlt
pop
loope
mov
imul
sub
fs
dec
inc
pop
ds
out
std
popf
lret
dec
jne
cmc
jl
daa
lcall
das
jle
xchg
sub
clc
adc
jne
and
cmp
fs
xor
mov
rolb
push
sub
push
adc
int
xor
leave
cld
xchg
lret
xlat
xchg
ror
pusha
notb
adc
mov
cwtl
jo
out
imul
imul
je
movsl
fwait
cmp
out
les
sarb
or
xchg
imul
lret
repnz
add
xor
push
jae
mov
push
loope
nop
shlb
pop
movsb
sbb
pop
cmc
sub
mov
stos
out
loop
inc
sub
lcall
pop
int
sub
mov
pop
loopne
aam
xchg
dec
or
or
xchg
hlt
movsb
dec
xor
dec
add
testb
out
fwait
sub
pop
inc
push
adc
xor
outsl
mov
pop
in
iret
jnp
add
xor
shl
xchg
mov
das
mov
adc
negl
lods
add
sub
lcall
out
xchg
shll
pop
movsl
je
jp
xchg
sbb
adc
or
fidivrs
aas
xchg
dec
push
fstl
lea
cmp
leave
test
jae
push
aas
dec
fnstenv
add
fbld
mov
add
sbb
cmp
inc
push
cmp
sarl
aaa
adc
scas
sub
sub
mov
jl
ds
sti
xor
sub
lahf
inc
sub
dec
test
and
inc
fcompl
add
dec
jne
rcrl
jb
dec
pop
notw
xchg
mov
bound
and
push
in
out
adc
mov
into
or
cld
shll
lea
add
xor
xchg
add
push
orb
testb
mov
lods
push
cwtl
pop
aam
adc
ss
sub
stc
sahf
mov
xchg
jg
sub
aaa
into
repz
cmp
sbb
or
xchg
inc
fcmovu
mov
sub
insb
pop
cmp
pop
jnp
rorl
jnp
cmp
mov
jns
mov
pop
dec
mov
push
sub
mov
insl
loopne
push
sti
jae
sub
lds
testb
arpl
vxorps
dec
and
jno
fidivs
and
xchg
inc
mov
mov
shlb
and
loop
popa
dec
outsl
adc
or
jns
mov
scas
adc
mov
adc
rcrb
cwtl
lcall
jecxz
dec
lock
ss
pop
loope
push
daa
cmp
aad
je
aad
frstor
hlt
push
arpl
sbbl
add
mov
cli
mov
mov
mov
jne
ss
jp
inc
inc
mov
mov
cmp
lods
mov
cmp
xchg
das
enter
sbb
ds
popl
pop
mov
lcall
inc
and
js
fwait
dec
inc
push
in
repnz
pop
jae
test
cmp
xor
fidivrl
mov
adc
mov
sbb
movl
je
or
mov
push
sbb
add
adc
cwtl
movsb
scas
inc
in
inc
out
cmp
sahf
inc
inc
fstl
mov
add
jo
int
popa
xchg
add
ret
sub
rorb
mov
out
loop
clc
cmp
iret
sbb
push
mov
add
and
out
cmpsb
shlb
push
mov
jo
aad
fiadds
push
jae
xchg
mov
enter
xchg
cmp
push
and
sbb
jns
mov
sub
data16
stos
decl
sarl
pop
cmp
mov
mov
shrl
insl
adc
outsb
stos
push
adc
push
sbb
mov
mov
mov
stos
pushl
fcompl
or
out
jge
push
daa
fsubr
mov
inc
cmpsb
push
cmp
xor
pop
outsb
push
fadd
insl
cmp
mov
jl
add
push
sub
and
mov
xlat
in
stos
jns
adc
mov
addr16
mov
pop
mov
test
and
xchg
xchg
icebp
fcomps
mov
movsb
in
test
cmp
lahf
push
inc
inc
pop
jg
fwait
lcall
test
jmp
repnz
jo
adcl
cld
mov
lea
dec
fistps
add
lock
inc
inc
sbb
dec
rorl
jle
int
and
sub
mov
push
pop
fisttps
cmpsb
adc
xchg
sbb
aam
fldt
outsl
adc
push
pop
lcall
adc
cmpsl
addr16
mov
dec
repnz
jge
or
pop
push
out
outsb
pop
mov
ret
sub
pop
in
fistpl
add
cli
or
push
adc
lea
xchg
loope
out
cmpsl
sbb
sub
stos
pop
add
cmp
movsl
lods
hlt
pop
out
aad
cmp
push
mov
xchg
mov
lret
inc
mov
lcall
imul
add
mov
clc
lret
push
push
sbb
adc
and
nop
outsl
lret
jae
movsl
mov
mov
je
inc
out
pop
mov
add
sub
sbb
push
bound
addl
adc
xor
cld
xchg
ljmp
fidivs
xchg
mov
sub
mov
testl
mov
scas
enter
mov
lock
xchg
cmp
sub
fsub
push
xchg
xor
das
mov
loop
push
dec
dec
ds
vpcmpgtd
pop
jne
aas
fcoms
cmpsb
fisubrl
mov
rcll
mov
jl
out
sub
je
pushf
insl
cld
or
jg
cwtl
out
jle
jnp
xor
adc
insl
jne
sub
add
inc
ficoms
in
jmp
pop
test
sub
and
ds
dec
and
movsl
insl
aad
lods
lea
xlat
outsb
sahf
push
jb
lret
sub
sbb
imul
pushf
xor
repz
aam
mov
test
sahf
pushf
cli
jne
enter
jmp
cmp
insb
call
popa
not
pop
lods
popa
cmp
jle
cmpsb
dec
outsl
adc
push
inc
repz
mov
ds
add
nop
daa
push
push
xchg
cmc
sub
sub
jecxz
std
xchg
add
sbb
push
jns
out
in
mov
movsl
pop
mov
mov
add
imul
fildl
lods
outsl
sbb
mov
push
jbe
rcll
cld
pop
stos
js
icebp
movsb
sbb
add
fsts
imul
xchg
incb
scas
sub
aam
xchg
test
sbb
push
movsl
es
iret
sbbb
in
and
imul
inc
cmp
in
pop
lret
xlat
lea
js
data16
loopne
mov
xchg
cs
fsub
stc
ljmp
adc
and
data16
inc
or
add
in
test
lahf
xor
mov
push
icebp
inc
pop
jae
or
aaa
xor
mov
ret
xor
jecxz
sub
xor
cs
push
mov
decb
cmp
xor
out
cld
cmpsl
or
adc
inc
filds
mov
aam
lret
sub
out
jo
and
pop
repnz
les
add
iret
sbb
insb
sub
in
mov
pop
test
pop
loopne
fstps
or
jecxz
jb
pop
sub
xchg
hlt
inc
mov
jge
lock
sub
subb
push
xor
in
jns
xchg
mov
mov
push
push
arpl
sti
xor
xor
push
push
xor
pop
xor
pop
push
fstp
cli
adc
in
adc
movsb
pop
arpl
and
mov
cmpsl
jle
outsl
mov
popf
dec
test
int
mov
pop
jmp
ja
cli
test
jl
je
push
in
das
xchg
ss
or
mov
test
jmp
in
or
pusha
jle
bnd
adc
roll
adc
inc
dec
test
hlt
loopne
dec
adc
jns
and
mov
fimuls
insl
xchg
outsl
pop
out
stos
pop
push
rcll
js
and
iret
movsl
les
xchg
xchg
test
sbb
or
or
sbb
inc
je
xchg
hlt
sbb
and
addr16
pop
sbb
cmp
push
and
add
inc
out
push
mov
pop
test
lock
mov
mov
stos
dec
pushf
push
in
push
popa
repz
mov
cs
sbb
outsl
fs
popa
rorb
ret
cmpsl
test
int3
jno
xor
clc
lcall
mov
into
cmp
jnp
in
rcrl
pop
push
push
jle
add
sub
push
aaa
fnsave
shrb
sarb
pop
insl
and
pop
out
xchg
push
filds
ja
icebp
stos
mov
fsubrl
lea
mov
test
popf
jp
inc
sbb
iret
sub
hlt
sub
pop
or
ret
cmp
mov
imul
jae
add
dec
loope
subl
out
jae
outsb
sub
stc
nop
push
pop
pop
jne
push
push
jbe
movsl
cmp
add
in
jg
leave
jge
arpl
scas
sbb
pop
mov
cld
subl
and
gs
cmpsb
cmpsl
je
in
xorl
or
mov
mov
pop
jae
xor
mov
fstl
js
jl
mov
add
arpl
int
mov
lock
rorl
scas
cli
lock
addr16
lcall
jo
xor
or
test
clc
push
scas
mov
pop
roll
in
add
inc
mov
mov
lcall
pop
arpl
jae
lods
fdivs
push
daa
adc
sub
cmp
pop
out
and
pop
or
mov
pop
and
push
or
js
daa
cmp
cltd
mov
sbb
ret
bound
daa
inc
push
movsb
loopne
iret
mov
rcrl
and
push
xor
dec
push
lcall
push
imul
add
pop
inc
fnstsw
add
jecxz
xchg
and
enter
sahf
pop
repnz
pop
mov
jne
xor
lock
inc
sbb
ds
mov
and
cmpsl
rolb
mull
jo
cmp
mov
iret
mov
add
int3
cmpsl
push
or
dec
dec
in
stos
loope
dec
sbb
jno
dec
les
inc
jg
pop
inc
lock
mov
sahf
sbb
and
lods
xor
inc
xlat
xor
mov
lcall
daa
jle
pop
aas
jnp
data16
or
lods
jmp
xchg
test
std
add
mov
shrl
es
push
ret
outsb
hlt
cmc
push
lods
mov
xor
add
mov
jecxz
loope
int
in
icebp
mov
ja
mov
xchg
sub
sbb
add
out
push
xor
pop
pop
or
xorl
sahf
add
cmp
testl
cmpsl
cltd
mov
sbb
cmp
inc
mov
dec
cmp
xchg
jmp
adc
test
pop
mov
xlat
outsb
test
jp
cld
in
sub
mov
jns
sarl
ljmp
cltd
push
es
sub
inc
aam
fidivs
popa
adcl
xor
jbe
mov
decb
or
je
call
mov
jmp
addl
or
es
mov
lret
enter
xor
das
jo
pop
push
lods
add
mov
xorb
mov
sarb
out
or
mov
mov
lods
inc
sub
iret
int
mov
mov
or
je
mov
and
sub
dec
inc
dec
int3
ret
fcomip
rorl
push
push
movsb
cli
xchg
sub
fldt
loope
mov
fstl
test
outsb
ret
push
mov
mov
fnsave
jecxz
fistl
or
jne
cmp
sti
rcl
fcompl
subl
test
cmp
xchg
je
daa
hlt
pop
cmc
cmpsl
sbb
pop
bound
out
mov
aad
enter
or
mov
test
movl
roll
dec
mov
movb
pop
lahf
pop
cmc
xchg
jns
invlpg
mov
fwait
sbb
inc
test
in
xchg
shll
sub
mov
adc
negb
lea
cmpsb
addl
mov
insb
xchg
adc
xchg
clc
add
insl
sahf
and
xchg
ljmp
push
mov
stos
xchg
dec
lds
scas
inc
xor
and
pop
adc
xchg
pop
stc
out
test
xor
aad
outsb
iret
lahf
imull
les
mov
xchg
sub
or
outsb
add
sub
pop
int3
jo
in
mov
scas
inc
popa
pushf
lret
adc
cs
mov
insl
test
les
xchg
pop
cld
adcl
add
in
cwtl
mov
icebp
js
xor
add
int3
shlb
popa
push
icebp
xchg
push
fldt
push
push
es
imul
insl
loope
mov
jns
jmp
icebp
pop
push
ror
test
stos
fcomps
add
lods
test
popf
mov
jecxz
adc
push
rcrl
dec
jno
mov
sbbb
pop
ja
adc
add
scas
in
mov
scas
ja
in
outsl
inc
jns
jne
mov
fwait
and
sbbl
int3
xchg
out
sbb
rorb
sub
inc
xchg
sub
lods
mov
adc
outsl
mov
addr16
mov
jne
inc
pusha
ret
lahf
push
push
cmp
fildl
mov
pop
mov
pop
repnz
pop
fucom
ja
dec
outsl
jns
bound
sahf
fcomp
fs
push
loopne
or
decb
inc
cmpsb
jns,pt
pop
dec
mov
ret
mov
dec
xlat
jmp
inc
lock
loop
repnz
test
outsl
arpl
mov
sti
add
xor
push
xchg
lcall
ss
and
je
adc
dec
and
fnstsw
xor
fwait
sbb
hlt
fnstsw
clc
int3
aaa
stos
or
test
in
mov
jecxz
mov
pop
xchg
imul
je
mov
jmp
or
jmp
inc
or
or
lods
and
into
add
out
lock
hlt
mov
test
fnsave
subb
push
orl
pop
add
pop
cld
ret
xchg
sbb
in
leave
push
jae
and
and
je
mov
test
es
mov
leave
icebp
cld
data16
adc
dec
cmp
xor
jo
sub
jg
shl
mov
cmp
addb
mov
or
or
scas
ss
xor
mov
mov
mov
inc
xchg
sub
or
jae
mov
fstps
pop
cmc
push
cli
shrl
jb
adc
pushf
xor
mov
mov
dec
repnz
sahf
inc
int
jbe
xor
icebp
xchg
and
dec
jmp
xor
test
idivl
fdiv
xor
and
sti
mov
fs
xor
idivb
mov
arpl
sahf
and
sub
cmp
mov
jmp
outsl
insl
aas
sbbl
scas
sub
add
push
jbe
int3
out
xchg
fidivl
test
fiadds
out
cmp
rcll
pushf
cmp
xor
jo
sbb
dec
lds
fldt
jecxz
testl
pop
xchg
xor
or
cmp
rcrb
int
push
jmp
or
adc
out
repz
push
scas
cltd
in
fildl
fs
adc
sub
scas
sbb
pop
sbb
xchg
leave
orl
jno
pop
stos
rcrb
ja
cmp
jnp
jmp
or
iret
sti
in
jbe
pop
xorl
pop
subb
aam
in
pop
fwait
repnz
decl
jnp
in
scas
mov
or
xchg
sub
fwait
iret
fstl
mov
jns
data16
push
dec
mov
sahf
cmc
xchg
cld
xchg
in
lods
jge
xchg
cmp
mov
sbb
jnp
push
ds
pushf
adcl
pop
hlt
inc
xchg
in
pushf
addl
sub
mull
out
mov
insl
inc
test
or
arpl
movsb
xchg
add
ljmp
fistpl
adc
sub
pop
lcall
inc
or
and
mov
xchg
and
push
orl
mov
push
mov
shrl
lret
ja
dec
inc
icebp
sar
jle
inc
mov
les
cld
std
sahf
test
orl
inc
adc
pop
jbe
popa
add
call
js
sbb
les
and
ret
ja
arpl
jle
pop
sub
stos
out
jl
std
or
push
lret
pop
and
std
jb
pusha
sti
push
xlat
test
inc
fisubrl
popa
repnz
loope
or
mov
ds
jb
aad
inc
cmp
shll
and
xchg
jno
adc
arpl
loop
cmpxchg
add
jge
mov
mul
sub
adc
loop
outsb
jle
mov
ljmp
mov
ljmp
or
xor
pop
cmp
cmp
das
out
cmp
mull
mov
ljmp
cmp
sti
xchg
nop
rclb
add
mov
jmp
jns
adc
cwtl
sbb
dec
mov
jmp
mov
pushf
mov
je
pop
and
stos
cmpl
leave
or
cli
aad
dec
sub
les
push
jnp
add
sbb
in
pop
aas
sahf
fs
cmc
push
inc
sub
clc
sbb
inc
leave
test
daa
mov
mov
xchg
adc
movsb
push
pushf
sbb
decl
sti
adc
cmp
cmpsb
pop
add
push
fs
out
lods
jg
insl
cmp
aam
xchg
xor
into
daa
mov
and
or
movsb
jge
mov
fisubrs
in
inc
ljmp
pusha
fwait
fabs
movsb
pop
jae
mov
dec
ret
mov
push
mov
bound
pop
sbb
mov
cmpsl
loope
fsts
repz
mov
xchg
jl
pop
sub
push
fwait
xchg
out
dec
push
jnp
aam
jno
jns
es
outsl
filds
pop
into
jp
repz
aaa
mov
mov
adcb
or
pop
in
imul
sbb
rcl
sub
sbbb
addb
shll
shr
mov
sub
mov
xchg
sub
push
into
insb
orb
xchg
and
fisubs
sarl
outsl
dec
fsubrl
addr16
fisubrl
adc
mov
and
stos
ljmp
dec
mov
clc
jo
cmp
cmp
sbbb
xchg
pop
xchg
push
xchg
ljmp
aam
dec
sub
inc
push
adc
pop
test
cwtl
mov
dec
fnstenv
test
lahf
es
xor
or
sbb
push
or
xlat
mov
cmp
out
sub
and
ret
fimull
fcompl
sub
ss
mov
or
cmpsl
sub
dec
cld
lcall
mov
adc
cmp
add
stos
mov
pop
js
lods
sbb
mov
pop
repz
adc
ds
mull
and
add
imul
enter
mov
push
ljmp
call
and
push
fists
mov
pcmpgtd
mov
dec
call
hlt
aas
arpl
nop
push
into
std
dec
or
inc
sub
inc
out
rcl
dec
mov
jae
call
lret
jae
adc
mov
shl
inc
push
fwait
lahf
mov
jmp
rcrb
adc
loope
inc
xor
jnp
pusha
icebp
jno
sbb
add
or
inc
mov
leave
sbb
adc
pop
jnp
mov
call
inc
mov
mov
popa
scas
into
gs
sbb
insl
push
push
inc
push
dec
jno
xorl
lea
xchg
ret
push
mov
pusha
mov
mov
roll
les
loope
pop
xor
cmp
jns
jge
test
xchg
aas
shrl
xchg
jg
stc
shrb
sbb
jne
and
mov
in
out
ret
cmp
orb
push
xchg
fnstcw
mov
cmp
cmp
je
loope
lret
sbb
mov
add
cmpsb
jo
cwtl
and
shrl
into
sbb
aad
xchg
int3
jge
ja
mov
inc
stc
jne
cmpsl
and
inc
sub
clc
jmp
mov
into
bswap
dec
cmpsl
enter
mov
popl
jne
mov
xchg
pop
sti
inc
or
ds
push
fnsave
js
stc
push
or
jmp
inc
and
cmp
adc
mov
xor
in
xchg
jmp
push
movsl
inc
testb
xchg
movsl
push
and
sub
lods
add
jno
mov
push
push
and
or
push
add
repz
push
outsb
xchg
outsb
inc
hlt
and
push
jnp
or
sbb
pop
rcl
bound
xor
xor
icebp
test
aas
adc
out
xlat
adc
pop
test
xchg
xchg
rol
shlb
jmp
or
sti
cld
stos
insl
mov
data16
out
ss
aas
int
xchg
sub
sti
cmp
jg
dec
sbb
mov
sbb
and
mov
and
sub
mov
jmp
jne
mov
xchg
insb
jge
rcll
das
mov
add
mov
and
push
ljmp
jno
es
scas
jns
popa
push
insl
adc
add
xor
shrb
insl
push
inc
sbb
insl
and
add
jbe
sbb
arpl
outsl
imul
xor
cmpsl
add
jecxz
add
mov
loope
jge
adc
hlt
push
inc
cmp
jecxz
sbb
push
and
or
and
bound
jb
jge
push
push
leave
pusha
test
imul
jo
shll
in
call
or
lods
lret
scas
sbb
fucomip
jge
adc
jo
xchg
int
sti
ss
mov
jle
out
aad
cmp
mov
inc
les
stos
inc
cmc
rorl
icebp
sbb
jns,pt
repnz
iret
or
out
ja
sub
jmp
ret
enter
cmp
mov
jg
loop
xchg
leave
fcoml
imul
lahf
daa
outsl
mov
aaa
pop
mov
sbb
xor
into
addr16
lock
inc
mov
test
roll
cmp
jecxz
pop
scas
push
mov
sbb
insl
adc
xchg
add
or
and
lahf
ss
mov
mov
inc
lock
jb
xor
ret
repz
ret
and
fcomip
lea
add
push
scas
xchg
stos
push
adc
jns
add
imul
and
shl
push
test
lods
inc
dec
dec
sbb
loop
lock
insl
sbb
fs
repz
fwait
xor
adc
xor
mov
cmpsl
sbb
mov
insl
data16
in
inc
leave
or
push
sub
iret
mov
out
push
push
push
inc
lods
or
jns
or
xor
test
sbb
loope
mov
jno
sbb
sbb
aaa
stc
cs
pushf
mov
jmp
lea
sub
adc
and
push
push
lret
inc
and
into
insb
jae
sahf
out
andb
fisubs
or
lret
adc
fcmovnbe
jmp
push
jne
test
inc
sbb
cld
add
test
dec
mov
stc
popa
je
sbb
mov
mov
pop
adc
mov
icebp
sub
imul
icebp
in
rcrl
in
mov
nop
addr16
andl
jo
adc
sbb
sub
or
jns
push
xchg
fisttps
outsb
push
sub
es
fisubrl
lret
pop
inc
xor
in
cmc
pushf
pop
cmpsb
and
xchg
push
lds
push
xor
adc
adc
add
xchg
lcall
leave
lret
cmpsb
test
mov
mov
fldlg2
jnp
cld
lcall
in
stos
or
dec
push
xchg
push
nop
xor
loop
nop
pop
ds
push
dec
dec
push
or
aad
mov
scas
rcrl
mov
fwait
or
mov
pusha
push
in
pop
or
shll
add
sub
das
notl
sub
idiv
xchg
sub
dec
pop
pusha
add
mov
jae
adc
int3
mov
xor
push
popa
sbb
lahf
ljmp
pop
repnz
add
mov
jecxz
jbe
push
jne
xor
pop
stos
push
mov
enter
sar
cmp
outsl
push
mov
sub
mov
ja
cmp
stos
rcrl
xor
pushf
mov
icebp
mov
pushf
push
pop
lock
xor
or
in
push
jae
mov
xchg
xchg
fsubs
mov
dec
mov
add
xchg
xlat
sub
xchg
andb
rol
gs
mov
andl
frstor
inc
push
push
fmuls
jle
sbb
jecxz
fcmovb
jns
mov
mov
and
lahf
mov
push
arpl
shl
sti
pop
bound
mov
pop
jmp
lea
xor
lds
jns
mov
inc
rclb
leave
cmp
mov
pop
mov
jne
mov
or
adc
and
dec
pop
sahf
orb
cs
add
sbb
into
bound
lods
pop
es
cmpsl
out
arpl
rep
je
test
mov
out
lcall
movsl
push
jmp
xchg
mov
je
lock
cmp
lret
dec
fxch
movsb
adc
pusha
cmc
xor
mov
arpl
iret
ret
mov
xchg
mov
test
test
pop
insb
push
lret
invd
arpl
jnp
xchg
outsl
sub
jae
mov
mov
sbb
outsb
adc
dec
cmp
rcrl
scas
clc
mov
loop
xchg
incl
popa
cmp
cmp
addr16
shl
pop
inc
jae
mov
sarb
movsl
push
dec
lock
adc
sub
outsl
sbb
sbb
enter
pusha
cli
js
add
stos
mov
cmp
std
xchg
push
add
cmpb
fildl
and
sbbl
mov
movsb
inc
pop
ljmp
pop
mov
jbe
pusha
movb
bnd
mov
adc
cmp
stos
add
into
inc
pop
js
jl
cmpsl
outsl
sbb
jg
jbe
leave
mov
push
mov
les
pop
mov
sub
push
add
cmp
jmp
dec
add
aas
lods
pushf
jbe,pt
fcmovnb
movsb
and
dec
push
mov
push
inc
insb
xchg
cltd
imul
sub
adc
add
ja
mov
into
mov
int3
sarb
cmp
in
adc
iret
cmp
mov
mov
mov
sbb
jle
lahf
aad
jne
addr16
cmp
jg
insl
mov
nop
mov
loop
cmp
push
cmp
dec
pop
iret
rolb
call
xchg
mov
outsb
daa
mov
negb
pop
imul
clc
xchg
scas
sub
jno
xor
inc
add
xor
push
push
or
xor
pop
out
pop
mov
test
jecxz
or
enter
adc
lock
in
fs
xor
push
or
imul
mov
lods
mov
push
jns
and
mov
iret
xchg
ljmp
and
gs
push
data16
mov
add
mov
adcb
popa
mov
push
sarl
push
mov
adc
fistl
or
fwait
sub
and
push
lret
jo
inc
addr16
and
mov
in
cmpsb
aas
pop
ja
das
fucomp
popa
imul
add
xor
aam
and
subb
sub
addr16
in
and
pop
movsl
push
inc
push
fidivrl
inc
popf
aas
pop
cwtl
xchg
jecxz
mov
pop
cld
mov
jmp
lea
stos
jecxz
popa
sbb
add
sahf
rclb
ret
push
clc
outsl
pop
mov
xchg
pop
stos
inc
xor
ret
ds
movsb
xchg
push
pop
add
inc
imul
arpl
outsl
mov
jnp
ret
ret
sbb
dec
dec
in
and
cmp
rcrb
das
push
hlt
test
jecxz
scas
mov
mov
rcrb
cmp
pop
out
pop
cltd
push
jge
add
aad
adc
test
inc
inc
ficompl
jno
dec
add
stc
sub
or
sbb
stos
cmp
pusha
cmp
ljmp
mov
mov
push
aas
and
xchg
adc
xchg
jmp
sbb
stos
pop
mov
loop
aas
push
jne
lds
dec
inc
das
jne
popa
inc
mov
fidivrs
daa
test
mov
mov
pop
and
orb
push
movsl
and
mov
xchg
jae
push
mov
fwait
pop
sub
mov
push
in
jo
mov
push
jmp
inc
out
mov
ljmp
popf
in
jae
push
jg
push
pop
and
shl
mov
mov
and
icebp
sahf
dec
adc
call
int
dec
cmp
imull
inc
inc
xchg
sub
aas
xchg
mov
dec
xor
xor
inc
jecxz
cmp
rorl
fisttps
fwait
adc
popf
xor
fstpl
xchg
xor
push
push
dec
icebp
xor
outsb
inc
test
addr16
icebp
or
cmp
loopne
in
jp
adc
repnz
insb
and
xsha1
cmpsb
dec
inc
hlt
inc
add
ljmp
or
jl
aaa
rcl
pop
or
sub
loopne
dec
sbb
imul
jae
xchg
pop
push
call
fxam
xlat
repz
aas
dec
gs
icebp
enter
aam
xchg
pop
fs
outsl
inc
adc
inc
scas
mov
adc
icebp
pop
dec
jle
stos
stos
dec
das
xchg
test
sti
pop
inc
test
adc
mov
xchg
cmc
movsb
cmp
pop
hlt
and
iret
sar
ljmp
sub
das
pop
fs
jae
add
lret
xor
inc
push
push
mov
sub
fsubrp
push
lock
int3
aaa
push
xor
aam
push
push
xchg
aaa
lea
mov
sti
mov
pop
xchg
imul
clc
xchg
mov
je
stos
fstp
sub
shlb
cmp
adc
adc
je
fnsave
push
pop
xor
and
xchg
push
sub
pop
jns
into
in
fsubs
jae
aam
in
and
dec
pop
cmpsb
ror
bound
lock
push
cli
pushf
mov
and
adc
ret
gs
pop
push
mov
aad
xor
lods
jbe
mov
cmp
push
add
mov
shll
popf
insl
lea
and
das
mov
out
jno
bound
imul
inc
cmp
mov
cli
cld
add
or
pop
scas
inc
mov
mov
mov
mov
pop
in
add
pop
jbe
ret
shll
insl
std
sbb
xor
and
mov
jmp
loope
push
pop
mov
add
mov
loope
aam
pop
shrl
cld
add
data16
gs
shl
dec
mov
subb
mov
xchg
xor
mov
xchg
sbb
cwtl
push
pop
testl
repz
push
insb
push
or
mov
nop
outsl
mov
not
fsubr
addl
or
fnstcw
pop
cmpsb
in
push
and
adc
pop
push
cwtl
lock
inc
test
add
adc
in
push
xchg
dec
sbb
fnstsw
movsl
stos
xchg
sbb
and
test
xchg
xchg
mov
adc
adc
pop
mov
lds
adc
cltd
mov
and
iret
testb
stos
cmp
jbe
fnstcw
aam
int3
fs
or
sub
mov
adc
mov
mov
inc
inc
sbb
dec
es
outsl
xchg
test
int3
mov
lret
adc
test
lret
mov
stos
scas
sub
jae
bound
test
pushf
xchg
hlt
or
movsl
shrb
fs
sbb
shlb
xor
test
push
fdivs
js
mov
push
and
js
cmp
xchg
adc
pop
xor
loopne
add
dec
inc
lods
ret
je
sub
andl
pop
xchg
adc
fdivs
fldenv
xor
pop
sbb
lret
add
loope
stos
mov
movl
jl
cmp
stc
dec
movsl
sbb
stos
xchg
xchg
sub
pushf
mov
or
dec
call
mov
mov
cmpl
cmp
jno
push
addr16
sbb
lea
sub
cltd
jecxz
jl
scas
mov
inc
jg
inc
jmp
push
rcl
fistl
into
addl
sbb
fucom
sub
and
decb
and
mov
xchg
test
hlt
daa
addr16
loop
jne
mov
pop
push
ljmp
ret
add
lret
push
xor
jmp
inc
lahf
in
mov
jmp
jns
pop
imul
lret
mov
xor
lock
and
mov
outsb
cmp
jmp
sbb
xor
fcomps
cmc
nop
cltd
xor
ljmp
xor
or
testb
ss
mov
inc
and
jno
pop
push
inc
xor
aas
cmp
xchg
pop
xor
cli
imul
mov
out
sub
push
jg
fimuls
inc
push
jae
xlat
loop
xor
int
out
push
and
jo
inc
fdivl
push
sbbl
inc
loope
mov
fnsave
mov
mov
push
push
push
int3
testb
fdivl
ffreep
and
or
shll
fldl
mov
xor
addr16
out
mov
test
ja
mov
pop
aaa
sbb
and
insl
add
pop
lods
out
jbe
cmp
out
test
scas
insl
fidivs
sbb
gs
scas
repz
inc
rclb
mov
addr16
ret
or
push
adc
fsubrl
xor
stos
dec
sub
shll
outsb
add
mov
xor
enter
aas
repnz
test
pop
in
iret
or
mov
jmp
fadds
and
mov
or
mov
jle
imul
add
mov
mov
in
jnp
xchg
imul
pop
jp
adc
ja
push
or
sub
mov
sub
push
sarl
std
sti
mov
sub
xchg
pusha
enter
bound
xchg
jle
mov
div
test
movsl
mov
rclb
add
aad
xlat
xor
jge
or
mov
jg
cmpl
lret
cmp
cwtl
notb
imul
lret
pop
sahf
fwait
sti
shlb
mov
xor
adc
push
loopne
test
out
add
repnz
int3
and
cmp
es
lcall
daa
mov
or
mov
push
into
cltd
mov
test
add
cmp
sti
dec
ret
ds
div
mov
mov
aam
xor
and
lcall
adc
mov
inc
leave
rcrb
pop
xor
add
jge
sub
stos
fdivs
mov
mov
jmp
mov
outsl
push
dec
jbe
daa
ss
daa
sete
out
shll
out
bound
movsl
in
cmpsl
dec
push
mov
insb
insl
decb
loopne
inc
scas
cld
pop
addr16
sahf
jnp
xor
pushf
adc
push
push
mov
push
mov
fnstcw
jbe
inc
push
movsb
stos
jl
sbb
pop
sbb
dec
jl
cmp
push
jge
jns
dec
fucomip
lcall
stos
push
popf
xor
jmp
mov
xor
add
jb
xchg
sub
xchg
sahf
mov
cmc
and
repz
mov
repz
jp
fildll
sbb
jo
cmp
mov
mov
sub
adcb
dec
pop
in
outsl
push
cltd
xorl
inc
or
jno
xchg
add
jecxz
and
sub
sbb
push
ret
pop
mov
lret
pop
mov
adc
mov
xchg
inc
fidivrl
xchg
stos
inc
add
mov
into
or
es
mov
or
jmp
mov
xchg
imul
test
mov
mov
mov
push
out
pop
push
jne
loopne
cltd
xor
cmp
in
mov
out
test
sub
stos
in
pop
adc
adcb
popa
je
xchg
xchg
sahf
clc
fwait
lea
add
sbb
lahf
xor
repz
push
out
je
jl
and
je
cmpsb
das
xlat
je
xchg
cmpsb
clc
dec
in
push
adc
in
test
stos
push
call
sbb
cmpsb
ja
shrl
mov
out
xchg
mov
add
lcall
adc
push
dec
in
sbb
mov
fisubs
or
jge
sti
scas
xchg
or
pop
sub
aas
test
mov
testl
shlb
or
orb
pop
xlat
fcmovnb
pop
or
push
fwait
xor
cmp
jbe
pop
mov
repnz
je
adc
push
xchg
sub
fwait
xor
push
mov
xor
lock
cmpsb
nop
daa
fsubs
enter
jb
xchg
jge
test
daa
faddp
stc
clc
jmp
test
xor
or
insb
mov
jne
nop
cwtl
das
ret
pop
decl
mov
push
pushf
inc
fcmovne
jb
test
sti
xchg
popf
dec
movsb
cmp
imul
int3
sbb
or
mov
xchg
stc
std
push
lods
das
ss
daa
push
mov
push
fmul
fdivl
stc
fsubrs
pop
sti
xchg
push
dec
testb
lahf
adc
int
add
subl
pushf
mov
dec
push
movsl
jnp
mov
lods
faddl
out
jge
inc
fisubs
daa
mov
jg
insl
add
movsl
dec
jg
push
scas
dec
dec
in
jbe
je
cmpsb
pushf
xor
jle
enter
sbb
test
inc
fcmovnbe
jae
cmp
jns
push
fwait
lcall
push
cli
xchg
test
mov
imul
mov
inc
fcmovnb
imul
sbb
or
cmp
sub
mov
cmp
and
mov
pop
sub
sub
jp
dec
loope
pushf
es
addr16
mov
fbld
cltd
aam
lret
sub
push
out
mov
mov
int3
xor
subl
sbb
jmp
cmp
test
xchg
mov
push
out
cmp
xchg
push
lret
mov
xor
sarb
scas
imul
mov
shlb
cmp
lea
arpl
xchg
mov
cltd
mov
pusha
idivl
imul
lcall
iret
mov
imul
loope
push
jmp
xor
sub
fwait
mov
lds
imul
icebp
hlt
and
pushf
xor
cmc
mov
insl
mov
insl
fidivs
ror
gs
adc
sub
jl
pop
mov
xor
adc
dec
in
add
cltd
xor
add
cltd
or
mov
dec
in
fmuls
mov
push
js
ljmp
push
movsl
mov
mov
push
popf
sbb
mov
outsb
pop
icebp
sahf
clc
xchg
lds
stos
inc
sahf
int3
or
mov
outsb
nop
daa
lahf
rorl
and
jo
stc
movsb
fdivrs
iret
or
mov
cmpsb
push
sti
xchg
dec
js
pop
lods
fistpll
mov
and
jecxz
lds
rcll
test
xchg
imul
aas
popa
mov
popa
shll
leave
xorb
push
mov
nop
daa
cmpb
pop
ret
mov
push
mov
xlat
ja
lcall
dec
push
jmp
push
mov
daa
jecxz
push
add
stos
mov
mov
pushw
sub
jmp
lcall
in
push
mov
mov
xor
in
insb
add
push
in
pusha
fidivl
mov
push
in
aas
ss
adc
loope
sub
call
pop
addb
push
cmp
leave
pusha
mov
std
xchg
and
out
fisttpl
fs
pop
mov
lahf
sub
rorb
push
xor
aam
icebp
or
test
daa
cwtl
es
dec
fildll
push
incb
dec
daa
test
sub
sub
add
clc
dec
arpl
xchg
xchg
sub
cmc
cli
xchg
sub
es
in
daa
xchg
call
sub
cmp
testb
xchg
pop
mov
cld
mov
sahf
mov
adc
ret
xor
pusha
pop
notb
adc
cli
sub
jl
clc
and
shl
sbb
pop
add
das
xchg
or
test
mov
fwait
pop
scas
leave
xchg
inc
fadd
push
insl
add
in
cli
sbb
or
nop
in
adcb
mov
mov
call
daa
lea
rolb
xchg
xor
in
adc
or
or
scas
and
mov
popf
cltd
xor
paddsw
pop
or
test
lret
bound
inc
jnp
jne
inc
flds
push
lods
fucom
pop
repnz
or
outsb
push
sub
test
mov
cld
psubw
test
das
in
test
das
inc
addl
pop
cli
add
ret
lahf
mov
jnp
je
lahf
aaa
dec
ror
lret
icebp
jae
and
clc
dec
inc
mov
sub
iret
mov
in
andl
in
inc
inc
or
xchg
xchg
inc
fadd
mov
push
jmp
or
inc
xor
imul
f2xm1
or
jecxz,pn
pop
pusha
shr
xchg
addb
jecxz
and
add
push
xor
push
pop
int
mov
adc
ret
clc
add
lahf
cmp
xchg
sub
mov
lahf
in
out
clc
add
rorl
and
popf
scas
fnsave
fidivl
xor
jle
and
addr16
lods
mov
andl
cltd
es
sub
jne
push
xor
mov
xchg
sub
cwtl
xor
int3
sub
pop
push
stos
inc
cmpb
mov
jns
rcl
scas
jno
repz
outsl
out
xchg
xchg
mov
cld
jge
mov
fbstp
int
adc
rorl
pusha
cmpsl
icebp
push
std
sub
mov
pop
movsl
cmpl
and
inc
je
gs
cmp
xchg
fildl
fwait
sub
inc
aaa
gs
negl
lods
outsb
dec
and
xchg
jae
sbb
xchg
orb
or
mov
or
dec
mov
push
adc
xchg
sahf
test
sbb
repnz
mov
inc
shrl
sub
mov
fidivl
cld
aas
icebp
jmp
lods
and
cmc
pop
repnz
add
mov
add
enter
jne
and
lret
mov
dec
mov
cmc
mov
addb
xchg
pushf
add
movsb
in
movsb
rorb
test
into
les
ljmp
dec
push
cld
sbb
adc
in
and
xchg
mov
cmp
mov
inc
movsb
mov
add
mov
jle
stos
xchg
jle
lcall
dec
add
pop
call
jmp
ds
arpl
cmp
mov
jmp
stc
mov
xchg
ret
repnz
call
mov
push
ljmp
xor
sbbl
mov
xchg
movsb
fldt
jg
std
imul
mov
cs
xor
ljmp
bndstx
adc
push
leave
aam
xlat
sub
fiaddl
lock
enter
dec
loope
dec
mov
adc
sub
mov
stc
mov
aaa
mov
js
ja
inc
test
lret
aad
xchg
jae
ret
cltd
xor
cli
mov
shlb
mov
imull
lds
push
cmpsl
mov
sti
pop
and
jnp
xor
fidivl
and
mov
or
scas
cld
js
mov
in
sub
int
imul
neg
addr16
sarl
ljmp
cs
inc
mov
pop
and
popf
xor
pminsw
stos
dec
sbb
jns
push
add
cltd
clc
xor
cs
push
sti
xchg
xchg
out
push
ds
incb
insb
dec
mov
xchg
mov
xlat
mov
jmp
int3
push
inc
stos
mov
ret
jecxz
ret
inc
and
outsb
mov
add
sub
mov
dec
lds
pusha
xchg
push
mov
xorl
movsb
out
add
push
lret
in
adc
arpl
dec
popa
push
mov
jns
ja
ja
cmpsl
mov
aas
loop
das
pusha
mov
push
or
xchg
inc
cmp
push
out
hlt
mov
incl
lods
cs
call
inc
fmuls
lret
mov
sti
push
xlat
rorb
sub
mov
or
sub
jl
adc
sub
nop
jge
fwait
inc
sbb
test
incl
outsl
dec
icebp
push
jmp
imul
mov
xor
or
jo
push
das
mov
mov
popf
xor
cmpsl
outsb
adc
push
jmp
jno
xchg
push
inc
insl
aad
insb
int
dec
inc
xor
pusha
and
jno
orl
imul
sbb
and
and
xor
out
js
aas
inc
pop
sub
popa
push
repnz
imul
ds
mov
aas
add
jp
mov
dec
jb
shll
or
xor
ficoms
and
testb
xchg
fdivs
or
jns
insb
mov
jnp
dec
mov
pop
lds
mov
mov
mov
cmc
sbbl
xlat
mov
mov
mov
repz
xchg
loop
dec
ret
sbb
cmp
ret
andb
push
add
dec
les
test
shrl
fwait
inc
lea
ja
arpl
loope
cmpsl
pop
dec
mov
fsubs
dec
mov
cmp
in
aas
push
ss
mov
push
or
lcall
mov
and
or
and
ljmp
pop
shll
sbb
adc
and
dec
arpl
daa
cmp
push
jbe
cmp
and
pop
dec
fmull
push
sbb
outsb
pusha
les
cmp
and
sbb
xor
out
jp
mov
mov
pop
dec
or
dec
je
popf
mov
xchg
test
cmpb
cs
test
xchg
jge
test
sbb
xchg
mov
nop
jl
adc
aaa
ljmp
ja
dec
les
outsl
daa
rorb
push
and
popa
adc
fs
sub
dec
lds
scas
outsb
xchg
icebp
bound
out
mov
cmc
dec
push
or
inc
sub
popa
push
call
xchg
ficompl
out
mov
pop
outsb
mov
shrl
shlb
pop
jmp
scas
rclb
popf
xchg
aad
fwait
andb
or
jmp
mov
xchg
jnp
or
out
mov
ljmp
call
cmpsb
pop
adc
xchg
imul
lahf
out
test
hlt
jge
shl
mov
mov
pusha
pushf
jmp
mov
or
out
xor
sbb
jne
mov
in
xchg
mov
lahf
add
xchg
mov
and
imul
test
out
xchg
fcomi
push
aad
mov
aaa
frndint
mov
outsb
idivl
imulb
mov
sarl
mov
faddp
dec
ficomps
pop
mov
loopne
cmp
jmp
push
add
cmp
mov
adc
gs
xor
jns
xor
in
pop
test
cli
cs
insl
xor
cmp
mov
idiv
int3
mov
xlat
fmull
or
movsl
popf
xor
imulb
enter
mov
into
inc
in
push
faddl
mov
ret
cmp
cwtl
xlat
sarb
aad
loope
lret
push
loopne
out
push
add
aaa
inc
adc
outsb
xchg
dec
loope
imul
pop
dec
xor
or
add
sbb
dec
mov
lahf
inc
pop
fwait
iret
push
and
clc
lcall
testb
mov
repnz
or
xor
scas
dec
popa
inc
ret
dec
bound
dec
dec
jns
pop
dec
push
mov
add
inc
pushf
cmp
ja
sub
push
jnp
aas
ds
push
push
push
mov
pop
cmp
push
cli
jle
cmp
call
fs
adc
aaa
xor
pop
xchg
ja
icebp
inc
adc
xchg
sbb
mov
out
sub
mov
fdivl
test
xlat
push
shll
inc
iret
sbb
cmp
wbinvd
movsl
pusha
subb
mov
cli
test
sub
push
into
int
fistl
mov
scas
jno
cltd
data16
push
inc
stos
popa
xorb
and
dec
lock
xchg
mov
xlat
test
mov
sub
ret
xchg
xchg
aaa
and
jle
jnp
and
or
in
xchg
xor
sbb
add
idivl
es
cmc
sub
jne
jo
push
dec
sarl
sub
cli
lods
mov
cli
stos
add
adc
or
mov
mov
pop
imulb
push
call
call
xchg
push
sub
or
adcb
shlb
adc
out
or
inc
js
cmp
dec
jp
negb
sbb
std
inc
sbb
or
inc
insb
mov
and
mov
push
test
cwtl
or
shll
lahf
test
sarl
in
sahf
notb
cld
mov
clc
xor
push
loope
mov
sbb
dec
inc
int
adc
int
jne
pop
lds
jg
aam
iret
dec
mov
sub
inc
test
outsb
cmpb
popa
pushf
loop
xchg
sub
test
icebp
sbb
sbb
xor
shr
and
adc
gs
aam
cs
mov
pop
pop
and
lea
lods
xchg
xchg
dec
mov
push
outsl
cmpb
or
pusha
pop
adc
nop
jns
xchg
dec
push
sbb
lods
inc
push
jmp
int
pop
fiadds
out
int
jb
js
mov
lret
rorl
push
pop
cmpsb
lds
and
push
imul
aaa
sub
sub
mov
rorb
or
sub
cmp
aad
iret
push
cmp
pop
push
lret
push
xchg
jmp
adc
sub
out
pop
rcll
pop
add
and
test
xchg
mov
push
test
and
xchg
xchg
rcll
repz
into
test
push
jecxz
lea
add
push
andb
aas
rsm
jp
jnp
push
pop
pushf
jg
jg
and
les
cli
loope
hlt
cs
scas
psrad
push
int3
inc
pop
mov
mov
pop
sub
mov
inc
mov
jne
push
rcrb
mov
or
mov
inc
mov
cs
jnp
inc
addr16
lahf
xor
fistpl
jge
pop
cmp
push
adc
mov
orl
pop
mov
fimuls
pop
dec
push
mov
and
pop
mov
mov
adc
mov
in
leave
push
jns
jecxz
or
movsl
cmp
outsb
imulb
pop
mov
daa
sub
aas
jns
stc
daa
inc
loope,pn
pusha
push
lret
inc
dec
subb
jp
mov
mov
popa
sub
and
or
outsl
int3
cld
push
ljmp
cmp
fsts
xchg
jecxz
adc
xchg
mov
roll
call
cmc
ds
popa
mov
lahf
pop
or
mov
movsb
sub
test
ja
jb
out
and
push
int3
mov
repnz
les
es
sub
es
xchg
sbb
fisttps
inc
mov
imul
xchg
aas
icebp
add
fidivrs
pop
jo
adc
pop
xor
arpl
sub
inc
daa
sub
dec
mov
rcrb
mov
mov
mov
mov
stos
popa
cli
mov
hlt
cmp
shrl
sbb
add
jno
cmp
hlt
push
mov
in
ds
adc
jo
xchg
aad
adc
mov
dec
and
xchg
sub
inc
aaa
pop
lret
lock
mov
dec
stc
arpl
inc
icebp
push
mov
cwtl
xchg
insb
mov
jge
negl
lahf
mov
sahf
sub
sbb
popf
inc
lods
push
sub
cs
aaa
xor
subl
pop
sbb
out
cmpsl
cmp
pop
mov
adc
pop
xchg
lret
stos
test
adc
jl
shll
jecxz
mov
shlb
xchg
cmp
adc
cmp
pop
andl
fmull
push
mov
inc
push
pop
cmc
ss
push
adc
lahf
cld
xor
xor
mov
jb
jp
leave
daa
push
fidivl
gs
push
inc
sub
xor
imul
jbe
mov
jp
in
out
sub
push
je
mov
push
dec
and
lea
sub
cmp
xor
ja
int3
inc
jmp
cmp
jbe
rclb
inc
into
scas
das
adc
mov
aas
in
sbb
sbb
in
jae
sti
shll
stos
push
add
es
mov
out
dec
les
add
in
adc
cwtl
and
fwait
or
aaa
into
stos
adc
lret
xchg
outsb
icebp
adc
xchg
xchg
adc
jbe
movsb
addl
mov
sbb
lods
ficomps
into
jmp
sub
dec
fidivrs
loop
pop
pop
stc
pop
mov
pop
mov
lcall
ds
or
and
mov
add
ret
aas
aas
pop
std
sub
loope
xor
push
push
addr16
pop
sbb
les
xchg
popf
mov
push
mov
xor
test
push
arpl
bound
icebp
out
sub
repnz
inc
xchg
and
es
mov
push
ja
or
loop
call
push
or
xlat
push
ss
stos
pop
sub
mov
pop
pop
xchg
sub
jo
mov
xchg
lret
push
dec
iret
mov
sti
jnp
mov
das
popf
subb
xchg
js
cltd
xchg
adc
xorl
outsl
mov
lods
pop
push
pushf
pop
jmp
sbbb
aam
ljmp
dec
or
mov
jne
mov
outsb
jnp
xchg
xchg
pop
aaa
xchg
xchg
test
lods
inc
or
add
addb
gs
movsl
inc
xor
jne
dec
push
out
movsb
cld
inc
add
cmp
adc
sbb
dec
lahf
sub
mov
fcoms
fwait
ret
cmp
adc
bound
sarb
test
fisttpll
or
dec
cmpl
pop
rolb
sbb
loop
adc
scas
sbb
addb
shlb
in
adc
cmpsl
mov
sub
jbe
bound
sbb
jle
dec
xchg
jp
pop
cmp
popf
sbbl
inc
pop
jnp
xchg
xchg
mov
mov
add
sbb
rolb
fistpll
into
test
aam
imul
cmc
movsb
arpl
sti
lods
pusha
leave
cmp
dec
jecxz
dec
mov
and
dec
shl
or
mov
lock
mov
cmc
add
sub
sbb
mov
adc
mov
out
cltd
ret
enter
ret
pop
aad
fbstp
adc
cmp
fstl
adc
cmc
xchg
cmp
push
and
mov
adc
fs
sub
sub
xchg
sub
xchg
fsubrl
loop
sbb
and
les
out
xor
pop
jecxz
mov
repnz
inc
mov
fstps
sub
mov
loopne
ja
ret
push
loopne
xchg
xchg
test
sbb
sarl
pop
outsl
cmpsl
outsb
xor
shrl
test
and
mov
jp
sti
dec
jno
clc
push
xchg
and
sub
cmp
mov
int
fcmovnbe
mov
adc
pop
movsl
jge
out
clc
cs
ljmp
aad
lret
push
stos
mov
sbb
cmpsb
mov
clc
dec
mov
push
xor
xchg
inc
sub
or
dec
dec
in
pop
dec
iret
cmp
movl
jns
lea
inc
rcrb
jnp
lret
ds
sub
adc
dec
jbe
scas
jb
inc
mov
pop
sub
adc
lods
out
or
mov
add
xor
aaa
jle
in
jge
lret
bound
rorb
xchg
mov
or
push
outsb
mov
jne
mov
xchg
sbb
or
cwtl
mov
inc
sbb
mov
lods
push
pop
mov
mov
dec
loopne
aad
xor
aas
sub
mov
sbb
mov
push
in
sbb
inc
popf
jne
add
add
icebp
xlat
nop
cmc
rorb
mov
adc
aaa
xchg
pushf
dec
mov
mov
fidivrl
test
mov
loopne
or
cwtl
xchg
subb
jmp
push
jnp
fs
pusha
cwtl
ja
jns
fnsave
xchg
decb
rclb
insl
lahf
mov
les
lods
out
jge
mov
and
cltd
mov
xchg
xchg
xor
or
movsl
inc
mov
lea
sub
pop
stos
pushf
push
add
in
stc
and
xchg
rorb
loope
arpl
dec
aad
dec
ret
fldl
inc
pop
fisttpll
addr16
xor
and
or
dec
mov
inc
and
fwait
dec
jae
xchg
dec
inc
pop
pop
dec
adcl
pop
sbb
aas
dec
pop
pop
imul
cli
nop
mov
xchg
inc
mov
or
pop
pop
mov
pop
adcb
aam
sub
cmpsl
pop
push
mov
mov
pusha
adcl
push
orb
push
scas
loope
push
jbe
jecxz
mov
daa
faddl
jecxz
and
ficoms
jae
jne
fwait
inc
add
outsb
jns
jbe
push
sub
push
mov
inc
test
ss
adc
or
mov
out
pop
repz
and
inc
test
fs
testb
push
xor
mov
jne
loop
bound
jbe
xchg
test
and
dec
in
addl
push
mov
pop
daa
mov
stos
sbb
int3
sbb
lock
sti
xchg
add
sbb
xchg
add
aas
jnp
push
sbb
mov
fsubrl
icebp
sbb
iret
xor
pusha
xor
xchg
fisttpll
sarl
xor
push
xchg
mov
fimull
lock
fsubrl
popa
lret
adc
jbe
xor
outsb
xor
lds
loop
adc
mov
fsubs
in
imul
mov
lret
pop
call
loopne
cmp
sbb
hlt
adc
dec
adc
js
addr16
sahf
outsb
mov
dec
cwtl
das
xchg
inc
cmp
jno
and
clc
xor
sub
sub
jo
icebp
sbb
pusha
pop
or
xor
insb
test
xor
cmpsb
push
stc
repz
cld
es
mov
std
adc
popf
push
lods
fcomps
addl
pop
arpl
stc
lods
xchg
loopne
pop
les
loope
fnstcw
fbld
xlat
aad
cmp
mov
rorb
sahf
cmp
iret
xchg
lds
or
jns
out
int3
inc
sbb
test
mov
es
rclb
jno
dec
pusha
sub
fisttpll
push
idivl
sbb
and
mulb
hlt
and
es
jnp
sub
mov
sbbl
inc
repz
mov
cmpsb
mov
aam
cmpl
xchg
or
pop
std
movsl
pusha
mov
nop
jns
mov
mov
vfnmadd213ps
or
subb
movsb
adcb
push
adc
xchg
dec
pop
iret
imul
add
out
xchg
outsb
test
adc
dec
ljmp
xor
mov
icebp
andl
add
idivb
xchg
js
xor
seto
ret
stc
icebp
mov
scas
scas
push
sbb
rclb
sahf
stos
jbe
loop
mov
xchg
lcall
nop
imul
jmp
push
shrb
aas
add
sub
lea
sub
movsl
mov
js
add
je
les
sbb
add
xchg
xor
inc
ret
mov
stc
jecxz,pt
dec
mov
mov
inc
cmp
sbb
jge
inc
das
add
fwait
inc
push
in
ja
cmc
xor
bswap
inc
mov
mov
ss
sbb
std
push
or
leave
jmp
rcr
in
loop
fidivl
add
push
test
cli
mov
jbe
out
xchg
sub
out
push
mov
call
push
sti
fiadds
idivl
fs
sbbl
adc
daa
sub
test
daa
push
or
or
rcl
sarl
sub
nop
mov
xor
repz
inc
xchg
jns
adc
lcall
add
fstpt
mov
shrl
push
lds
and
sarb
jmp
or
push
lods
xor
mov
xchg
lods
push
add
xor
repz
xchg
je
dec
cmp
std
cmpsl
jle
jae
cmc
adc
push
jo
sbb
sbb
jb
mov
stc
inc
push
mov
icebp
pop
dec
mov
sar
add
dec
sub
aas
loope
outsb
sbb
clc
shrb
fcmovu
clc
and
lods
inc
mov
repnz
movsl
ja
pop
andb
lods
push
inc
fildll
inc
inc
jmp
insb
pop
push
pop
mov
pop
mov
in
ds
inc
mov
and
imul
adc
cmp
roll
call
inc
fdivrl
fsubl
fiadds
test
push
mov
nop
lcall
lods
mov
mov
xlat
ds
and
fisttps
aam
ret
add
ficompl
or
out
xchg
cs
jb
or
adc
repz
xchg
sub
and
js
jl
ss
xchg
iret
cmp
shl
adc
rcl
loop
cmpsl
add
cli
fisttps
adc
scas
cmc
mov
or
dec
ret
jg
xchg
jl
loopne
push
aas
aaa
sub
add
in
ds
sub
push
std
shrl
dec
sbb
jl
push
jmp
jle
es
and
and
mov
sub
dec
mov
pop
jo
dec
addr16
fwait
xchg
mov
jg
jbe
push
xor
std
popf
js
shll
sbb
or
bound
jbe
jns
mov
repnz
inc
fdivr
adc
inc
sbb
cmp
xchg
outsl
jle
mov
ret
hlt
or
cmp
xchg
sub
push
mov
loope
testl
aas
push
lock
test
movsl
fnstenv
sub
sub
dec
loope
pop
mov
lods
inc
sbb
jle
add
shlb
arpl
shrl
data16
js
xchg
lret
adc
jge
mov
shlb
mov
repz
jns
xor
dec
outsl
push
jg
cmpsb
push
mov
lods
inc
int
fnsave
lret
bound
daa
sti
xchg
pop
inc
jmp
mov
or
mov
sbb
dec
pop
jle
imul
addl
jb
pop
mulb
mov
pop
dec
inc
fdivrl
sbb
scas
cli
arpl
sub
jns
add
pop
jp
xchg
cs
pushf
fbstp
aas
mov
imul
stos
mov
dec
jno
jp
jns
sub
pop
ds
test
pusha
out
movsb
or
fcomi
pop
inc
popf
jp
aam
rcrl
dec
sub
dec
shlb
add
xor
add
dec
sbb
dec
movsl
shl
adc
mov
lods
shrb
mulb
andb
fs
dec
pop
push
jbe
push
out
fistpll
pop
mov
jg
pop
fsubr
xchg
and
enter
pop
xor
std
sub
into
xor
xlat
push
cmp
iret
test
test
mov
fdivs
int
mov
jle
sbb
xchg
lods
mov
mov
into
sub
adc
mov
cmc
sub
mov
push
loop
cmp
push
sub
lods
xchg
push
adc
xor
mov
into
sub
nop
sbb
loope
mov
or
test
sbb
cmp
imul
or
cli
aaa
das
mov
inc
mov
loopne
xchg
notb
bound
push
add
fidivrl
mov
sub
add
cmp
mov
outsl
imul
in
or
xchg
xchg
or
cmp
jno
pusha
jmp
in
and
pop
push
lock
ja
imul
inc
ss
mov
jp
iret
lret
shlb
add
or
add
mov
iret
repnz
jno
ss
sub
fcoms
xchg
add
call
out
fst
ja
mov
popf
repz
leave
pushf
ja
rclb
rcrb
mov
js
push
outsb
push
sub
lods
xchg
insl
jge
pop
push
and
xchg
push
popa
cmp
adc
jle
xor
pop
mov
test
inc
xchg
cmovle
scas
sub
jmp
je
iret
jle
pop
jne
fs
cmp
xchg
dec
sub
add
decl
adc
out
lcall
andl
pop
call
inc
cwtl
pop
stos
lock
adc
and
xor
xchg
adc
repz
or
adc
lods
js
push
ljmp
std
lods
cmp
xlat
rcll
adc
pop
fwait
ss
fldcw
xchg
mov
ficoml
jne
fisubl
int3
jne
and
insl
and
pop
cmp
pop
icebp
lock
js
xchg
or
cld
mov
xor
stos
sub
mov
lock
adcb
push
iret
dec
lock
icebp
loope
xor
fiaddl
fwait
xor
xor
push
cmovle
andb
or
ss
xor
mov
in
rcl
jb
push
int3
xchg
sub
loope
sbb
push
into
dec
fistpll
loop
pop
aam
stos
inc
push
lret
cmp
mov
fstpl
push
popf
push
in
into
aas
js
jno
js
xchg
push
test
mov
inc
fldcw
lret
or
mov
or
cmc
and
mov
aam
in
scas
or
push
in
insl
inc
adc
mov
rolb
cmpsl
das
or
push
in
in
rcll
sub
insl
jle,pn
movsl
mov
mov
lahf
leave
xchg
popa
in
sbb
lcall
push
cld
in
filds
stos
mov
leave
nop
inc
mov
addr16
stos
xor
ret
pop
pop
pop
ljmp
xchg
orb
loope
gs
pop
in
jne
subb
cs
pop
add
sarb
cltd
inc
mov
jns
insb
xchg
imul
in
mov
mov
daa
pushf
jnp
ss
inc
pop
adc
pop
outsl
jle
je
clc
mov
sub
add
filds
lea
repnz
jnp
fldcw
dec
mov
dec
mov
aas
mov
pusha
pop
aas
mov
jp
push
les
pop
pop
mov
cmp
cld
and
aaa
out
jae
repnz
add
push
dec
adc
clc
jmp
jmp
and
repnz
push
test
jg
lret
je
add
add
mov
imul
sbbb
es
stc
pop
add
sti
xchg
fs
adc
enter
jl
xor
xlat
jns
and
outsl
push
cmc
push
insb
jnp
sti
js
ljmp
jle
xor
push
inc
xchg
into
xchg
push
xchg
pop
push
cmp
lea
sub
mov
mov
popa
add
stos
mov
or
fisubl
pop
add
cli
arpl
pop
fidivrs
or
bound
lea
notb
or
enter
xchg
pop
jecxz
aad
cs
xor
and
add
int
mov
sbb
std
xor
stos
lcall
mov
ficoml
imul
mov
mov
lods
sub
xor
shlb
mov
xor
lret
push
add
fldl
xor
xor
iret
test
dec
xor
cwtl
cmp
lret
nop
pop
scas
cs
xor
pop
aad
cmp
inc
or
xor
adc
mov
inc
mov
adc
shrb
adc
jge
xor
adc
pop
mov
sub
adc
mov
adc
rclb
rcll
movsl
lea
xor
pop
inc
adc
inc
add
adc
test
das
pop
fbstp
js
fdivs
out
mov
lds
mov
xor
add
xor
add
out
imul
sub
gs
stos
jbe,pn
adcb
or
loopne
jbe
jo
xchg
insl
les
into
sbb
pop
ds
dec
bound
mov
call
mov
mov
cmpsl
in
push
arpl
push
pusha
xor
adcb
test
inc
mov
pop
js
fdivrl
sub
mov
std
pop
outsl
cmpsb
and
outsl
call
dec
sbb
cmpsl
xor
adc
test
sbb
cmp
fnstsw
insb
dec
or
mov
cmp
mov
loopne
cmp
stos
fidivrs
insb
lret
mov
cmpl
mov
pop
subb
xor
sub
jne
imul
pop
cld
xchg
nop
mov
push
lds
hlt
arpl
or
ljmp
xchg
sbb
inc
out
jge
lds
sub
sahf
add
jecxz
les
hlt
xor
stos
sub
jge
loopne
bound
mov
subb
sub
xchg
inc
sti
push
pop
divl
iret
xchg
insl
jb
mov
xor
push
jo
xchg
lods
xor
push
pop
div
rolb
mov
mov
pop
aad
divl
test
xchg
cs
or
xchg
sub
push
pop
testb
test
xchg
cmp
xor
cmp
inc
orl
add
dec
jno
sbb
and
movsb
sub
das
mov
lds
daa
scas
sbb
dec
add
shr
xchg
cmp
les
sub
lds
adc
loopne
nop
data16
std
sarb
mov
ret
add
adc
and
lods
or
inc
adcb
jg
jae
outsl
outsl
pusha
call
movsl
pop
je
cmp
nop
cmp
das
orb
xchg
mov
icebp
pop
call
sti
mov
test
mov
add
dec
xchg
xchg
mov
jno
imul
jne
sbb
xor
jg
push
adc
cs
jae
pop
push
sti
pop
cld
mov
push
int3
inc
mov
or
out
jae
test
jp
movsb
loopne
pop
add
lods
jle
shrl
push
mov
pop
jno
cmpsl
jle
pop
push
push
insb
push
popa
pop
flds
jle
fisubl
xor
xchg
fistpll
aad
or
and
adc
clc
imul
inc
stos
xor
mov
dec
adc
mov
pushf
mov
cli
xor
idiv
in
outsl
out
arpl
lock
ret
out
mov
ficomps
rorb
scas
xor
loop
sti
fwait
jl
js
inc
or
and
ja
fiaddl
or
mov
out
out
outsl
loope
adc
fnstcw
out
addps
or
mov
push
mov
iret
lret
mov
dec
pop
xchg
ds
fs
push
jns
imul
in
orb
mov
int
sbb
push
cmp
jns
and
jle
sahf
test
adc
movsl
ss
dec
xor
imul
cmp
in
dec
adcb
adc
push
adc
ss
cmp
push
fs
icebp
adc
adcb
fdivrl
mov
and
push
xchg
int3
mov
xchg
inc
push
cmp
or
fistl
cmp
daa
pop
cli
clc
xchg
adcb
movsl
xor
jg
dec
or
gs
sahf
or
jbe
or
fnstsw
push
test
cld
jecxz
mov
lods
sub
vpmacsdqh
mov
dec
lahf
mov
shlb
adc
outsl
repz
fldt
pusha
mov
add
test
ret
xchg
in
mov
xchg
out
loop
mov
in
imul
imul
pushf
dec
sbbl
jecxz
xchg
ds
xchg
or
xchg
cmp
sbb
mov
cli
popa
test
test
sbb
mov
ja
pop
and
mov
ret
mov
sbb
mov
sbb
inc
xlat
sbb
pop
mov
notl
icebp
pop
inc
and
insb
push
xchg
sub
adc
sub
push
lret
cmp
adc
add
and
stos
sbb
pop
clc
inc
xor
xchg
fdivrl
push
push
inc
flds
fcoms
or
cmp
pop
or
mov
mov
lods
ss
orl
mov
std
popa
push
jmp
cmp
lods
mov
xlat
sbb
cmp
movsb
add
cltd
xor
push
xor
std
enter
in
or
sti
jg
or
jle
xor
mov
enter
mov
sti
pop
fadds
xchg
clc
arpl
or
pop
pop
mov
es
pusha
xchg
xor
dec
les
lods
enter
sub
push
std
sarb
add
mov
sti
or
or
xchg
bound
lahf
test
dec
adc
rorb
mov
mov
dec
test
cmpsl
ss
enter
mov
int3
fstpl
and
jg
mov
aaa
xchg
addl
aad
sbb
stos
and
sub
mov
adc
movsb
pop
stc
mov
pop
cmp
jo
sbb
cld
pop
stos
inc
sub
dec
jbe
inc
in
xchg
fnstcw
clc
iret
mov
sbb
xchg
leave
sbb
dec
adc
ja
xchg
push
add
js
xchg
scas
add
leave
jo
loope
push
xor
aam
cli
pop
sub
xor
push
mulb
push
into
jmp
popf
cmp
xlat
std
pop
mov
shlb
icebp
repz
sti
bound
or
jle
fldl
jne
add
sub
addr16
add
jns
mov
les
xlat
xchg
adc
dec
push
sbb
xchg
push
and
insb
cmp
out
out
sub
xchg
out
cli
lods
xor
mov
daa
orl
iret
std
cmp
sub
popa
movsl
cmp
pop
push
mov
and
out
mov
clc
mov
movsb
add
inc
pop
adcb
jmp
mov
cmpsb
in
aad
addr16
mov
mov
jno
outsb
scas
and
push
loop
and
pop
scas
sub
imul
mov
jl
mov
or
stos
pop
push
xchg
and
cmp
jbe
jge
cli
pusha
shlb
mov
add
lahf
rorl
cmpsl
daa
mov
lods
or
pop
add
and
cld
pop
jns
sti
pop
or
pop
cli
push
dec
fidivrs
inc
repnz
movsl
jmp
lock
mov
sahf
push
rcrl
mov
test
dec
faddl
mov
cmp
and
into
cmc
divl
push
in
sbb
js
enter
mov
cmpsl
addl
gs
ret
mov
adc
out
scas
xor
cmc
dec
adc
mov
mov
lret
ret
scas
cmpsl
sbb
stos
mov
push
mov
stos
xor
enter
push
mov
les
daa
jg
inc
adc
push
mov
add
fsin
pop
dec
jmp
stc
push
xchg
or
cmp
stc
pop
nop
hlt
test
out
xchg
leave
add
mov
lcall
stos
xor
bound
flds
push
cs
mov
inc
or
aas
stc
data16
cmpsl
xchg
cmp
lret
lds
fadd
xchg
cmp
dec
jnp
jg
js
lcall
adc
jns
inc
test
jb
or
movb
lahf
inc
idiv
sbb
outsb
inc
add
rorb
fcoml
rclb
rcl
pop
movsl
std
pop
sbb
mov
call
cmc
repnz
hlt
mov
in
aam
lock
xor
cmpsb
push
dec
or
mov
inc
adc
pop
xorb
pop
xchg
inc
ja
ja
shrb
push
addb
mov
add
pop
stc
pop
sbb
popl
inc
imul
test
push
add
mov
lds
xchg
repz
out
into
xor
add
add
sti
fnstcw
lahf
and
mov
movsl
ss
ljmp
inc
pop
push
pop
imul
mov
push
lds
test
fildl
sbb
sub
sub
inc
mov
lods
inc
or
orl
lret
out
sbb
jge
cmp
leave
jns
push
movsl
adc
les
xor
cmpsl
inc
sub
mulb
lcall
gs
leave
mov
inc
adc
dec
orb
cmp
int3
cmp
into
mov
jbe
mov
jmp
cmc
xchg
inc
call
mull
iret
adc
es
xchg
in
cmp
fdivp
movsl
xor
ficoml
lds
mov
lods
jno
mov
jl
js
push
call
shrl
in
ds
or
cltd
sub
jp
iret
mov
cmp
dec
jmp
fistl
xchg
out
jecxz
mov
mov
add
es
xchg
pop
in
mov
pop
mov
ss
insl
add
daa
cmpsb
cmp
adc
inc
or
ja
cmp
xchg
sub
in
sub
push
aad
mov
or
std
cmp
das
sub
cmp
loopew
sbb
mov
iret
nop
jmp
add
or
repnz
ret
pop
dec
push
adc
dec
xcrypt-cbc
cmpsl
push
out
insl
mov
mov
test
pop
cld
sarb
repz
mov
jp
aaa
pop
shll
push
jb
cwtl
inc
sbb
inc
fs
pop
mov
push
add
mov
xchg
lahf
jp
movsb
daa
fldcw
pop
cmp
ljmp
sub
cwtl
cmp
push
jns
jmp
das
stos
subb
pusha
inc
pop
in
popf
in
repnz
add
in
cmpsb
xor
aas
and
popf
inc
mov
mov
and
data16
mov
add
sub
es
call
aad
sbb
sti
lds
mov
dec
mov
out
fistpl
scas
xor
out
movsl
sub
sub
jbe
int3
mov
lods
sbbb
sbb
adc
addr16
bound
add
push
rcrb
mov
xor
sarl
daa
cmp
xchg
pop
gs
cli
shlb
insb
js
test
test
loope
stc
xchg
inc
sub
call
jmp
es
inc
mov
cld
leave
pusha
popl
rorl
push
lds
outsl
repnz
cmp
pushf
fistpll
push
dec
mov
mov
inc
and
dec
adc
test
stc
gs
cld
test
repnz
xchg
xlat
lcall
xchg
out
aad
ret
xlat
jae
mov
push
mov
mov
mov
pushf
xchg
mov
pop
ret
xor
loope
jae
cwtl
adc
dec
lds
movsl
sbb
sbb
das
mov
dec
lods
xor
mov
xor
cmpsl
dec
adc
scas
xor
cwtl
push
sti
lds
negl
sub
or
cli
inc
xlat
js
xchg
repz
aas
mov
sbb
mov
dec
or
cli
pop
cli
outsl
enter
push
mov
fdivr
arpl
sub
sbb
mov
lods
jmp
pop
out
jno
and
test
int3
sub
push
lock
lea
xchg
xchg
stos
cs
pop
pop
mov
faddl
pop
sbb
fs
sbb
dec
sahf
inc
pop
divl
mov
mov
jno
daa
mov
addr16
lods
or
sub
sbb
pop
xlat
push
ljmp
mov
adcb
and
cmp
sub
mov
cmp
and
sahf
rclb
scas
pop
adcb
mov
es
sahf
xor
and
aas
movsb
pushf
ss
es
enter
mov
adc
shl
xchg
mov
scas
enter
js
mov
mov
aas
lcall
sahf
cmp
test
ret
loope
movsl
or
outsb
xor
loope
movsl
shll
dec
adcb
cmp
das
in
lret
xchg
cmp
xor
jnp
push
sti
les
leave
adc
pop
jo
sbb
or
mov
dec
push
xchg
adcl
lcall
mov
fidivrl
mov
int
sub
push
add
mov
mov
push
stos
sbb
pushf
mov
mov
mov
cmp
stos
or
imul
jnp
mov
xor
ja
data16
gs
xlat
fstp
cmpb
movsb
daa
mov
push
stc
out
fcmovnbe
jle
sti
lret
xchg
mov
outsl
lock
sarb
cmp
fstl
mov
leave
mov
pop
clc
xor
ljmp
jle
jns
mov
shlb
in
imul
lock
into
xchg
and
sahf
dec
xor
mov
pop
push
shlb
pop
sbbl
stc
data16
jg
fwait
imul
popa
pop
xor
aad
es
add
adc
aaa
mov
adc
xor
cld
pop
push
push
cmp
mov
fnstsw
stos
adc
andl
xchg
leave
inc
push
sub
mov
mov
outsb
cld
loopne
pop
adc
sbb
inc
sarb
add
pop
shlb
test
sbb
insb
sarl
out
je
add
adc
dec
out
jno
sbb
mov
mov
cmpsl
daa
in
gs
in
xchg
inc
scas
decb
enter
lcall
pop
not
movsb
dec
or
mov
cmc
in
dec
fistps
shrb
out
fstpt
testb
popf
inc
add
test
flds
arpl
mov
jbe
pop
fs
xlat
ja
je
adc
repz
sarb
in
cld
pop
cmpsl
mov
in
rolb
jp
sbb
sbb
imul
cmpsb
insl
sbb
call
mulb
push
xor
scas
mov
xchg
mov
nop
gs
or
popf
jnp
xor
hlt
jle
push
mov
xlat
jle
mov
js
je
popf
inc
mov
data16
jae
push
push
arpl
mov
push
xchg
cmpsb
mov
or
add
adcb
movsb
adc
mov
cmp
push
daa
lods
mov
mov
ja
aam
sti
and
aaa
push
sti
test
repz
lock
xchg
aaa
xchg
pop
insb
notb
xor
ret
xor
jge
adc
sbb
dec
cwtl
inc
test
ss
sub
jmp
mov
cmp
jo
pop
sub
or
clc
arpl
js
popa
sub
fmul
cmp
push
clc
dec
into
xchg
fldln2
inc
or
jne
lcall
push
pop
push
cmp
sub
pop
xchg
mov
mov
insb
out
cmc
push
mov
lods
das
mov
mov
jg
fistps
xabort
cli
arpl
lock
jne
xor
sub
xor
cmp
sub
clc
in
fstpt
std
enter
sti
pop
mov
mov
movsl
cmp
leave
popf
fldenv
mov
ret
xor
imul
adc
jp
popl
push
add
jmp
cmp
data16
and
cmpsl
das
mov
cmpsb
pop
hlt
aad
pusha
testl
push
push
cli
sbb
test
cmp
xchg
orl
jns
xor
cltd
add
int3
das
mov
inc
adc
add
out
cs
gs
jno
nop
daa
arpl
ret
movsl
ljmp
es
lcall
int
mov
pop
add
sti
cltd
inc
out
mov
jo
sub
lahf
aas
cmp
cmpsb
add
jae
push
into
xchg
lcall
fiaddl
or
imul
pop
mov
mov
pop
jge
pusha
fimuls
cmp
or
icebp
sub
cmp
sub
add
pop
push
sbb
dec
xchg
cmp
jb
faddl
orb
mov
int3
xor
cwtl
inc
pushf
and
mov
mov
faddl
jmp
push
push
mov
add
xor
leave
xchg
lahf
daa
sarb
leave
lahf
aas
addb
fcmovnbe
sub
call
add
aad
out
cmp
lahf
aas
xor
jne
iret
and
call
mov
mov
cmp
pop
xchg
xchg
mov
mov
mov
cmpsl
cmp
inc
fs
and
push
clc
push
ror
push
mov
xchg
mov
in
test
push
lds
fldcw
sbb
jno
xchg
inc
into
imul
cmp
sub
xchg
pop
inc
cmp
xor
sub
outsb
push
aaa
fwait
mov
scas
add
cmpsl
scas
mov
aam
adc
call
out
sarl
push
in
push
xchg
inc
add
call
sbb
push
push
lret
or
scas
sub
push
popf
cmp
cmpsl
sarl
decl
cmc
test
mov
insb
mov
mov
xor
loopne
dec
pop
in
xchg
ds
cmc
out
jmp
cmpl
mov
mov
mov
jmp
or
xor
stos
lock
out
cmp
out
rcll
mov
jne
adc
cmp
xor
mov
mov
cmp
add
orb
outsb
lds
outsl
hlt
add
aad
mov
loopne
imul
and
push
sub
mov
mov
nop
bound
divb
push
jecxz
psrlq
and
mov
loopne
mov
scas
std
pusha
and
scas
xor
fadd
mov
mov
jo
inc
std
xlat
xchg
ljmp
movsl
jge
and
stos
xor
iret
mov
add
stc
ret
sti
in
mov
stc
pop
jmp
data16
mov
pop
xor
imul
aaa
cmpsb
dec
push
mov
sbb
adcb
popa
out
dec
out
pusha
lock
xchg
jecxz
lahf
sbbl
xchg
jnp
push
add
sub
pop
clc
inc
adc
mov
pop
out
and
enter
sbb
adc
lahf
pop
sahf
shlb
test
mov
mov
sub
jb
cmp
jbe
push
clc
jbe
cmp
mov
xor
mov
mov
jns
inc
dec
push
test
and
into
dec
hlt
mov
pop
jp
and
subl
mov
and
movsl
arpl
arpl
callw
lret
or
ja
cmc
lret
mov
fwait
or
bound
sub
fsubrs
xchg
mov
js
cs
imul
lock
mov
cmpsl
xor
test
jae
mov
test
das
mov
rol
sub
mov
dec
or
fisubrl
stos
mov
xchg
inc
mov
jecxz
fsubrl
cli
xchg
lahf
std
sbb
mov
mov
cwtl
inc
imul
repz
mov
pusha
out
and
fldl
sti
rclb
ret
mov
pop
sub
dec
dec
or
mov
xchg
inc
lcall
or
xchg
sub
or
jl
ljmp
stos
pop
sub
add
push
fwait
adc
jp
fstpt
mov
idiv
jae
jge
add
sub
dec
inc
or
fs
ret
dec
pop
add
pop
rorl
insl
aam
push
sbb
mov
xorl
lods
pop
arpl
divl
push
mov
movsl
in
insl
ficompl
mov
and
movsl
xor
pop
sbb
xchg
dec
jnp
int
cwtl
mov
call
imul
outsb
xchg
add
dec
movl
test
jecxz
dec
adc
ret
mov
pop
add
cld
imul
loope
addl
pusha
je
out
pusha
in
mull
repz
flds
sti
sbb
or
xchg
inc
test
imul
mov
xchg
aas
jnp
xchg
inc
pop
data16
push
lret
inc
and
jb
inc
lods
xor
repz
xor
pusha
jmp
aam
inc
pop
rorl
popa
push
add
pop
xchg
xchg
loop
mov
sahf
call
std
orl
in
in
repnz
add
scas
xor
pop
jne
loopne
outsb
out
pop
stc
sarb
xchg
xlat
imul
mov
ja
mov
adc
lahf
inc
int
or
and
imul
xor
add
cmp
xchg
or
fldcw
repnz
mov
std
pop
add
mov
scas
mov
mov
mov
xchg
stos
cmp
mov
mov
int
int
es
adc
lcall
adc
fiadds
adc
scas
dec
iret
mov
mov
xchg
dec
push
fwait
cmp
xchg
adc
lret
push
pop
lods
sub
movsb
xor
sub
xor
xchg
mov
jmp
xchg
pushf
mov
cwtl
sub
push
std
ficoms
iret
or
insl
push
sbb
dec
dec
jp
popl
sub
pop
std
in
push
add
adc
stc
jae
sub
out
aas
or
dec
xchg
pop
dec
cmpsl
jnp
mov
xchg
dec
push
push
jle
jnp
mov
jnp
jno
cmp
inc
xchg
inc
push
xchg
adc
add
enter
fwait
loope
out
imul
lock
mov
add
mov
dec
imul
sub
cmpsb
movsb
xlat
adc
addr16
cmc
imul
out
push
push
popf
cld
dec
or
ret
xor
mov
jp
add
jle
shlb
sub
mov
xchg
rcrb
push
sbb
loopne
fsubrl
xchg
add
jle
cs
imul
outsb
int3
sbb
dec
lods
mov
fsubl
inc
or
ja
push
sahf
push
mov
int3
clc
fs
cmp
clc
in
fnstsw
and
dec
daa
iret
mov
into
mov
jb
out
daa
call
pop
pop
jnp
inc
inc
adc
test
lea
mov
nop
inc
mov
mov
roll
cmp
mov
cmpsl
mov
adc
sar
je
sbb
pusha
hlt
cmp
mov
fildl
andl
rcrl
sti
pop
stos
cmp
test
adc
or
fildl
pop
mov
pop
mov
lret
in
sbb
dec
sar
mov
paddusb
sub
es
jae
cmp
or
popa
pop
adc
or
scas
xor
test
ja
popa
jmp
sub
aas
inc
or
cmpsb
push
cld
mov
mov
inc
push
or
or
mov
xchg
mov
icebp
pop
mov
test
insl
repnz
scas
aaa
ljmp
xchg
push
add
fistps
mov
in
xchg
adc
mov
mov
mov
push
jae
pop
stc
push
insb
data16
into
mov
cmc
std
repnz
bound
out
pop
ljmp
pminub
in
flds
lcall
add
enter
jns
push
out
mov
mov
int3
dec
adc
cmp
push
jo
dec
or
push
and
scas
mov
je
or
pop
cli
popf
push
adc
pop
loop
movsb
roll
xchg
inc
adc
and
xor
aas
movsl
sbb
addb
sub
out
lcall
roll
stos
add
mov
push
xorb
pusha
xorb
xchg
jne
in
cmpsb
stc
arpl
mov
fiadds
pop
mov
jb
push
clc
dec
mov
xchg
nop
inc
xor
mov
sub
rclb
and
bound
movsl
dec
aaa
sti
stc
pushf
mov
jmp
mov
pushf
pusha
popf
cmp
int3
lcall
lret
jo
pop
ror
xchg
mov
mov
jmp
xor
inc
jmp
add
pop
jl
je
jne
xor
sub
scas
arpl
and
test
rorl
or
push
mov
mov
pop
jge
cmp
inc
inc
dec
adc
xchg
js
pusha
pusha
cs
jne
push
dec
test
sub
cmp
pop
add
jge
aad
push
and
xor
hlt
sub
cld
popa
bound
ret
mov
jbe
mov
daa
push
push
rolb
nop
aas
call
sbb
sub
xlat
andb
mov
cld
sbbb
int3
mov
imul
cmp
add
cmp
pop
int3
or
pusha
pop
mov
cmp
or
jae
mov
xchg
into
in
or
sbb
fisttpl
sub
and
lret
xor
jns
fmull
mov
adc
mov
inc
jmp
stc
cmp
jo
roll
mov
push
sti
xchg
test
push
pop
ss
jmp
aaa
add
pop
aaa
pop
inc
xlat
mov
cli
arpl
pushl
mov
mov
adcl
test
nop
adc
in
or
loopne
push
jns
notb
in
aad
jg
adcl
test
push
adc
lds
mov
cli
push
and
or
or
adcl
stos
sub
out
cmp
inc
js
mov
enter
cli
jg
into
stos
and
in
mov
jb
push
call
test
popl
jg
or
gs
adc
sub
int3
jge
mov
mov
inc
fyl2x
adc
mov
in
inc
push
adc
test
dec
mov
add
call
repz
inc
in
sbb
sub
sbb
icebp
clc
hlt
jne
sub
dec
mov
inc
cmpb
aad
or
push
or
mov
enterw
jg
mov
movsl
ds
pop
daa
pop
std
add
sbbl
jnp
mov
mov
cwtl
ret
cltd
cmp
sub
fcmovne
push
stc
ja
inc
or
addr16
pop
add
jae
enter
or
pushf
inc
and
jb
fnsave
cmp
xor
jno
cmpsb
nop
fwait
movsb
sub
pop
add
mov
cmc
fdiv
leave
xchg
or
cmc
jae
js
loope
adc
push
sti
xchg
testb
rcrl
out
mov
icebp
movsl
cmp
lret
notl
lds
lret
xchg
test
out
outsl
xor
sub
int3
loop
push
cmp
sub
flds
sbb
inc
test
ljmp
cmp
mov
fsubs
call
or
add
pop
cmpsl
filds
daa
cmpsb
sub
xor
pop
lret
xchg
fs
repnz
dec
popf
das
mov
pushf
adc
sarb
iret
inc
sar
xchg
add
sbb
jmp
aaa
into
test
lret
sti
pop
mov
xchg
sbb
or
iret
data16
xchg
sub
ret
hlt
pop
or
mov
sub
fldt
test
mov
data16
jg
sub
aas
mov
dec
fists
mov
std
in
rclb
test
cltd
fidivs
pop
mov
xchg
push
lods
rcrl
sbb
xor
std
xchg
test
push
in
adc
ss
push
mov
out
jnp
mov
setge
iret
xor
gs
lock
sub
test
xorl
or
leave
sub
mov
sbb
inc
into
fs
decl
sbbl
loope
ficoms
je
cmp
mov
sbb
fsubs
xchg
mov
rcrl
bnd
je
adc
rolb
xchg
add
out
xchg
and
mov
mov
aaa
into
cmpsl
or
stc
pop
mov
nop
sbb
mov
jcxz
xchg
sub
shlb
mov
iret
inc
test
in
test
mov
addr16
jle
sub
cmp
pop
dec
fisttps
mov
std
loop
rcrl
test
push
mov
xchg
sbb
sbb
das
xchg
cmp
ret
xchg
and
out
adc
sbb
idivb
shlb
mov
out
jns
mov
push
fwait
jne
int
iret
popaw
out
xchg
sub
sub
mov
mov
jae
or
sub
rcrb
test
jnp
fisubrs
gs
decb
test
push
filds
adc
cmp
mov
clc
addl
dec
mov
xchg
lahf
sub
mov
jl
je
adc
roll
sti
xchg
add
out
xchg
and
mov
mov
or
movsl
or
in
negl
dec
sbb
mov
push
popf
add
xchg
push
push
movsl
xchg
iret
inc
test
ret
fldenv
xchg
cli
dec
loope
mov
push
sarl
xchg
icebp
movsb
cmp
scas
data16
loopne
ret
add
ja
push
mov
xchg
sbb
rcrl
sbb
outsb
sti
fbstp
nop
cmp
rorl
and
out
adc
jbe
data16
cmp
and
inc
push
out
ja
mov
or
shlb
in
xchg
sub
sub
mov
mov
jno
or
push
xchg
iret
lds
sub
pop
out
test
jp
fildll
int3
data16
std
mov
sarb
fimuls
jb
cmp
rcrl
sbbl
sbb
ja
aam
cmp
insb
xchg
sahf
daa
mov
mov
jp
je
adc
rolb
sti
xchg
jmp
lock
and
mov
mov
push
out
cmp
mov
les
cmc
pop
mov
lea
jne
dec
scas
shrb
imul
dec
out
push
montmul
cmpsb
test
shlb
cmpsb
sub
test
or
out
imul
cmp
dec
loopne
lock
cmp
lods
addr16
fiadds
pop
jne
test
xchg
loope
leave
push
mov
xchg
sbb
rcrl
sbb
jbe
nop
cmp
rorl
loop
lock
ja
repnz
and
push
out
jne
mov
or
shrl
ljmp
mov
mov
outsl
aad
movsb
push
xchg
iret
retw
daa
sub
pop
in
test
jp
loopne
aaa
or
std
mov
sarb
inc
fimuls
movsb
cmp
ret
jg
sbb
shlb
xchg
sahf
and
sbb
je
adc
inc
lret
sti
xchg
std
arpl
xchg
push
sbb
out
cmp
mov
ret
repz
mov
lea
push
addr16
sub
mov
adc
aas
cmpsb
cs
out
test
mov
mov
jl
sub
aaa
popf
mov
iret
pop
dec
loopne
lock
cmp
faddl
pop
jne
test
xchg
loop
leave
push
mov
xchg
sbb
mov
neg
jbe
cmp
rorb
jl
pop
icebp
adc
js
gs
and
push
out
jae
mov
or
jne
sub
xchg
sub
xor
dec
insl
aam
movsl
add
es
push
loop
test
dec
loope
xor
push
sarb
inc
fimuls
jno
cmp
sub
pop
jge
sbb
shlb
xchg
pushf
and
mov
jbe
je
aam
leave
sti
xchg
sti
popa
pop
repnz
sbb
mov
mov
adc
outsb
cmp
lahf
push
cwtl
das
cmp
push
in
icebp
pop
mov
mov
jne
inc
lods
aam
fisubs
sub
mov
adc
movsb
cs
test
mov
mov
jp
sub
ss
mov
int
dec
loopne
out
cmpsb
cmp
fildl
pop
jae
test
xchg
loop
dec
mov
xchg
sbb
push
mov
neg
jbe
lea
mov
fistps
adc
js
arpl
cmp
and
push
out
jb
mov
or
imul
lock
rorb
movsl
add
sub
push
loope
test
ja
loope
xor
mov
cli
xchg
shlb
inc
fimuls
outsl
movsl
cmp
sub
pop
ret
hlt
jl
sbb
iret
mov
xchg
lcall
mov
jne
je
or
sti
xchg
cli
pop
pop
repnz
sbb
mov
mov
adc
insl
cmp
sahf
add
das
ss
mov
mov
jne
inc
stos
aam
fsubl
xchg
std
repnz
mov
adc
cmp
pop
out
test
mov
mov
js
sub
xor
push
dec
loopne
in
cmpsb
cmp
fidivrl
les
sti
test
dec
mov
xchg
pop
mov
push
mov
cmc
fbstp
mov
mov
fstpl
push
pushf
sbb
popa
out
cmp
pop
adcl
jno
mov
or
shrb
out
sub
jge
xchg
rorb
movsl
add
sub
push
loopne
test
jne
loope
xor
mov
clc
test
shlb
inc
fimuls
insl
movsl
cmp
sub
pop
rol
bnd
sbb
into
mov
xchg
cwtl
and
mov
je
je
or
xchg
stc
pop
pop
repnz
sbb
loope
cmp
popf
add
in
out
push
mov
xchg
jne
inc
test
imul
xchg
sub
mov
dec
jmp
or
addr16
cs
test
mov
mov
jbe
sub
xor
mov
leave
push
dec
loopne
ljmp
fnstcw
test
xchg
loop
ret
dec
mov
xchg
adc
ss
mov
hlt
fbstp
mov
mov
fistpl
or
sbb
pop
in
cmp
push
adcl
dec
push
xchg
jne
les
shrb
in
sub
jnp
xchg
into
push
movsl
decl
sub
test
jae
loop
xor
mov
testl
inc
fiadds
insb
cmpsb
cmp
pop
mov
sbbl
adc
jp
int3
mov
cwtl
xchg
pop
rclb
pop
mov
jb
jne
or
aad
negl
repz
sbb
fildll
rcrb
mov
mov
test
jbe
inc
cmpsb
aad
fsubs
sub
mov
dec
out
adc
cmp
out
xchg
scas
or
add
ret
xor
dec
loope
call
push
pop
insl
clc
xchg
rorl
jge
add
shll
mov
repnz
and
cmp
xchg
ja
pop
repnz
jns
pop
jmp
rcrl
xchg
cs
pop
out
outsb
shlb
or
push
jecxz
sub
ss
push
mov
addr16
fsubr
test
jno
jecxz
das
or
pusha
ret
push
cmc
subl
and
dec
filds
cmpsl
ds
and
lds
test
test
lret
cld
arpl
cltd
xchg
sbb
and
mov
ret
std
xchg
cmc
pop
pop
hlt
mov
sbb
inc
stos
jnp
rcrl
mov
mov
orl
insb
pusha
xchg
sub
div
mov
mov
dec
out
adc
cmp
xchg
push
movsl
filds
add
sub
and
push
dec
loop
out
sbb
lds
xchg
sub
movsl
cmp
loopne
cwtl
adc
pop
mov
repnz
and
cmp
xchg
ja
pop
repnz
jns
pop
jmp
rcrb
pop
lock
shlb
push
ret
push
jecxz
sub
ja
mov
lret
sti
mov
push
dec
fsubr
xchg
outsl
dec
jecxz
das
or
add
subl
and
dec
loopne
push
addr16
push
mov
test
push
in
inc
lret
cld
popa
add
dec
mov
mov
jo
ja
add
xchg
cmc
push
pop
hlt
mov
sbb
adc
push
cltd
xor
mov
mov
orl
xchg
sub
daa
mov
dec
out
adc
cmp
icebp
mov
fistpll
imul
add
lds
xchg
mov
ret
push
dec
jecxz
in
ds
movsl
push
xlat
aaa
lds
mov
sub
cmpsb
cmp
setg
pop
shll
pop
mov
repnz
and
cmp
xchg
jbe
pop
repnz
cwtl
push
mov
daa
jns
pop
ljmp
lods
cmp
icebp
insl
into
mov
add
shrl
loop
sub
cmpsl
xor
stc
mov
imul
insl
dec
jecxz
cs
movsl
pop
mov
sub
mov
mov
inc
rorb
add
ds
and
call
lds
xchg
ds
movsb
cmp
pop
add
dec
mov
mov
outsl
loope
mov
ret
hlt
push
pop
hlt
xchg
jnp
fldenv
rcrl
mov
mov
jg
jns
mov
xchg
cs
repz
inc
adc
cmp
repnz
lods
adc
outsb
ljmp
lds
nop
mov
ret
jecxz
jecxz
ds
lds
mov
sub
cmpsb
cmp
push
sahf
les
das
pop
mov
icebp
loop
and
add
add
es
pop
jmp
xchg
lods
cmp
insb
int
dec
decl
aam
push
loopne
sub
cmpsb
xor
clc
xchg
imul
insb
dec
in
sub
movsl
pop
mov
sub
scas
adc
loope
gs
xchg
and
push
mov
xchg
cmp
pop
add
dec
mov
mov
lahf
add
xor
call
test
push
mov
cmpsb
jl
fsubs
rcll
mov
mov
adc
insl
rcrl
cs
repnz
mov
mov
jecxz
adc
ss
xor
enter
mov
dec
in
stos
adc
insl
std
lds
dec
dec
jecxz
loop
aas
adc
push
aam
pop
addr16
mov
daa
mov
jnp
dec
cmpsb
cmp
or
and
and
add
add
push
mov
and
cmp
sbb
das
stos
cmp
push
mov
decb
aad
push
ficoms
mov
adc
mov
xor
dec
xlat
lock
imul
sub
movsl
pop
mov
sub
lods
adc
loope
arpl
add
pop
call
or
jge
movsl
cmp
pop
add
lea
les
scas
and
sahf
add
xor
pop
testb
jge
arpl
xor
mov
repnz
mov
adc
popf
xlat
outsb
iret
pop
cwtl
das
lock
mov
scas
mov
loope
adc
xor
xor
push
repz
test
insl
add
sti
das
sub
mov
mov
loopne
inc
adc
pop
xrelease
and
inc
cmpsl
js,pt
add
int3
sub
mov
pop
jg
mov
add
add
jnp
push
in
aam
ja
xor
lret
cld
mov
mov
fcoml
mov
les
test
mov
xor
inc
aad
mov
imul
pop
mov
sub
and
dec
loop
popa
stos
inc
xchg
push
push
push
mov
pop
out
mov
mov
les
pushf
mov
lds
and
pushf
incb
das
mov
pop
testb
jge
aam
ds
cmc
fwait
xor
mov
repz
mov
adc
fwait
xlat
outsb
int
cltd
xor
mov
loopne
adc
xor
hlt
mov
test
test
imul
mov
mov
fisubrs
add
xor
pop
arpl
mov
and
in
mov
test
ja
add
lret
sub
mov
push
jge
scas
aas
add
add
jnp
push
in
aad
jne
xor
enter
mov
mov
fistpl
mov
ret
repz
enter
mov
addr16
out
daa
adc
jmp
lds
lret
dec
jecxz
pop
stos
inc
xchg
sbb
enter
mov
mov
ret
cmpsl
ds
pop
add
pop
dec
stos
and
fwait
cld
inc
fsubrs
dec
pop
idivb
and
shlb
xchg
repz
xor
inc
mov
adc
cltd
xlat
outsb
lret
pop
lcall
lods
mov
stos
jo
xlat
outsb
xor
cmc
mov
cmpsl
adc
addr16
xor
sub
dec
out
fsubrl
add
das
pop
popa
icebp
mov
and
test
lcall
and
sbb
add
nop
and
push
loop
adc
xor
mov
adc
fstps
mov
rclb
icebp
jg
insb
mov
xor
inc
shl
mov
adc
jmp
or
in
pop
stos
inc
sbb
mov
pusha
loop
mov
mov
shrl
xchg
pop
inc
test
mov
cltd
cli
inc
fldcw
mov
pusha
idivl
and
rcrb
xlat
nop
icebp
pushf
xor
mov
cmc
jecxz
mov
adc
xchg
fsubrs
push
fwait
xor
stos
mov
stos
outsb
xlat
outsb
xor
cmc
mov
movsl
adc
divw
enter
and
fldt
add
cs
mov
and
test
fwait
push
xchg
pop
enter
pop
jmp
inc
xlat
stos
cmp
lcall
and
push
loopne
adc
xor
mov
adc
xlat
cltd
xor
insb
testb
mov
aad
scas
adc
lret
repz
fs
call
push
mov
push
call
or
in
pop
lods
inc
mov
insb
add
lret
insb
mov
sahf
add
xorb
aas
icebp
push
pop
sahf
xchg
pop
inc
cmpsl
and
jl
stc
inc
fisubrl
mov
popa
clc
jl
and
iret
pop
inc
xlat
mov
popf
xor
mov
cmc
loope
mov
adc
xchg
fnstenv
push
fwait
xor
test
adc
outsb
cs
xor
rorb
and
adc
gs
xor
xchg
out
fisubrl
add
sub
mov
pop
and
inc
jb
add
pop
and
sbb
fsubrs
lret
pop
idiv
mov
mov
dec
fidivrs
pushf
xor
les
adc
cltd
xor
imul
popf
sub
lods
out
jnp
insb
lods
adc
inc
into
repz
arpl
xchg
and
dec
cs
fwait
push
scas
or
in
out
movb
xchg
cwtl
cmp
into
dec
mov
or
adc
in
mov
jb
xchg
test
mov
repnz
sarb
lcall
mov
pop
push
sbb
pop
insl
adc
test
aaa
insb
pusha
inc
dec
aad
jge
jecxz
scas
pusha
inc
mov
int3
addb
mov
mov
sbb
loop
or
xor
and
insb
adc
sar
xlat
iret
in
out
adc
insb
sahf
dec
sbb
cmpb
int3
xchg
jle
lods
inc
mov
pop
aad
prefetcht0
jg
inc
mov
aad
jae
inc
jns
fs
cmpsb
pusha
pop
mov
push
rorl
scas
or
cmpb
dec
and
aas
cmp
mov
inc
shl
add
mov
rorb
movsb
pop
push
pop
inc
std
jecxz
into
popf
dec
ret
test
mov
jne
fisttps
push
push
jb
jp
je
lods
lds
cmp
jb
cmc
mov
mov
sub
in
shll
push
ret
call
fildl
aaa
mov
mov
jb
add
loope
lret
repz
push
ja
xor
dec
or
or
xchg
in
jmp
mov
add
movsb
cmc
scas
or
pop
out
xchg
cltd
repnz
mov
nop
cmp
sti
out
cmpsl
das
jnp
mov
imul
xchg
sub
sbb
cmp
cltd
cmc
inc
pop
rcrl
add
xor
sub
sbb
mov
in
in
outsb
xchg
aaa
and
lock
cmc
or
dec
je
cmc
mov
mov
inc
shl
jge
push
nop
add
mov
pop
or
dec
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
fstl
scas
lret
es
outsb
xchg
sbb
in
imul
shrl
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
push
out
xlat
lock
dec
jmp
or
push
mov
xor
pop
test
adc
outsb
mov
ffreep
shlb
mov
