push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
mov
dec
call
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
or
push
pop
test
je
add
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
incb
xor
add
enter
mov
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
fsubs
add
hlt
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
lods
and
add
add
mov
add
dec
and
add
and
add
and
add
add
xchg
and
add
and
add
and
add
add
add
add
sbb
add
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
dec
and
add
add
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
fsubs
add
hlt
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
lods
and
add
add
mov
add
dec
and
add
and
add
and
add
add
xchg
and
add
and
add
and
add
add
add
add
sbb
add
and
add
and
add
add
add
inc
gs
je
imul
inc
add
enter
jae
gs
popa
insb
jne
add
add
fs
imul
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
aad
inc
gs
gs
inc
imul
gs
insl
gs
push
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
outsb
je
outsl
insb
add
add
je
imul
bound
gs
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
push
add
rolb
dec
gs
jo
gs
jb
jns
jle
dec
jo
outsb
dec
jne
gs
add
roll
dec
gs
jo
jb
add
dec
add
je
jb
arpl
jae
gs
jo
add
insb
jae
jb
outsb
inc
add
repnz
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
popa
jae
outsb
imul
imul
popa
jae
imul
add
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
add
jae
gs
gs
inc
outsb
je
jns
add
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
add
gs
outsb
jne
inc
jb
jne
jae
add
add
gs
gs
gs
dec
je
insl
add
gs
outsb
jb
push
je
jb
jne
add
add
gs
jb
gs
popa
je
add
push
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jl
stos
lods
stos
add
cmpsl
push
mov
mov
mov
les
int
int3
rcl
in
rcl
shl
rcl
shl
int
int3
hlt
leave
enter
enter
mov
mov
stos
lods
stos
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
leave
lret
lret
rcl
cld
fcomp
fdivr
fcom
fcomp
xlat
aad
aam
rcl
iret
dec
into
int3
aam
rcl
iret
inc
mov
mov
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
call
ror
aad
aad
fcom
fcomp
fdivr
aam
aad
int
into
dec
int
call
aad
into
int
inc
rol
mov
mov
scas
std
test
test
xchg
xchg
xchg
mov
push
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
dec
int3
into
call
rcl
fcom
xlat
fcom
call
aad
dec
int3
into
dec
lret
int
int3
inc
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
inc
sbb
push
push
sub
sbb
cmp
ss
cmp
and
adc
pop
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarl
leave
enter
rcl
call
aam
call
aad
call
iret
sar
enter
inc
ret
mov
mov
ljmp
movsb
movsb
pushf
pushf
pushf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jg
jge
jg
jge
jb
jo
bound
mov
cmp
cmp
mov
outsb
outsl
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
dec
lret
lret
dec
enter
ret
mov
mov
ljmp
movsb
mov
call
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
ds
push
push
push
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jnp
nop
mov
incb
jnp
idivb
jp
outsl
outsl
outsb
out
data16
data16
je
jle
jle
js
jns
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
js
jns
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
xchg
jle
jg
jno
jno
je
jae
jg
jle
addb
xchg
addr16
cmp
ss
jg
cmp
mov
test
icebp
lods
lods
stos
sti
lods
lods
lods
lods
lods
stos
test
test
mov
cltd
cltd
xchg
xchg
xchg
decl
jle
jns
jp
jnp
jnp
mov
xchg
movsl
movsb
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
push
push
push
xor
inc
dec
insb
insl
insb
jl
xchg
leave
cltd
cltd
lcall
lcall
mov
mov
mov
mov
lea
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
movsb
addr16
jl
scas
cmpsb
lods
add
pop
adc
scas
call
fwait
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
pushf
popf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
in
xchg
jne
or
add
inc
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
mov
nop
call
mov
cmpsb
ljmp
cmpsl
scas
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
pushf
cwtl
lcall
mov
call
xchg
xchg
xchg
xchg
pushf
popf
pushf
mov
stos
test
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
jb
mov
jge
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
ja
mov
movsb
mov
mov
mov
lods
lods
stos
mov
movsl
add
pop
pop
adc
mov
ljmp
pushf
decl
nop
xchg
call
xchg
xchg
call
xchg
xchg
lcall
sahf
sahf
lahf
mov
movsb
mov
out
xchg
xchg
mov
xchg
aad
cltd
lcall
mov
stc
xchg
test
std
xchg
jae
fwait
push
test
movsb
push
jle
stos
inc
jl
mov
jp
mov
je
mov
insl
ljmp
adc
lods
or
stos
or
mov
jg
mov
mov
stos
pushf
movsb
mov
movsb
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
popf
lcall
sahf
sahf
lcall
xchg
xchg
decl
xchg
xchg
call
cwtl
lcall
fwait
lahf
stc
lahf
xchg
pushf
cld
sahf
mov
xchg
imul
cwtl
dec
jns
lcall
popf
and
mov
adc
ljmp
adc
adc
lods
pcmpgtw
scas
adc
mov
imul
adc
imul
ds
fwait
lods
mov
lods
lods
scas
mov
mov
movsb
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
movsb
mov
jmp
cwtl
xchg
decl
mov
decl
mov
lcall
xchg
dec
jp
xchg
cmp
imul
pop
pusha
call
or
xchg
push
pop
call
add
sahf
push
pop
jmp
sbb
mov
outsl
pushl
push
outsl
mov
and
mov
pop
jbe
roll
ret
xchg
lods
mov
scas
lods
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsb
mov
ljmp
stos
test
lcall
orb
mov
decl
arpl
mov
pusha
incl
or
addl
xchg
push
incl
add
xchg
add
xchg
add
cltd
add
sahf
add
test
pushl
es
mov
sub
mov
sub
lds
jg
leave
das
jg
enter
scas
inc
mov
mov
movsl
movsl
movsb
dec
mov
movsl
movsl
add
push
push
adc
test
mov
mov
mov
test
ljmp
mov
ljmp
mov
mov
mov
arpl
test
incl
pop
push
incl
add
test
push
incl
add
mov
push
call
add
cltd
add
mov
add
scas
adc
mov
ss
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsb
ljmp
sahf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
push
decl
adc
mov
push
incl
add
push
decl
push
call
pop
jmp
add
stos
add
pushl
cmp
dec
inc
call
inc
call
inc
fmuls
fmuls
fimull
fisttpl
fsts
call
test
std
mov
mov
movsb
movsb
movsl
arpl
mov
add
add
add
fwait
cwtl
cwtl
add
dec
adc
jnp
mov
test
lahf
ljmp
mov
pushl
mov
mov
mov
mov
scas
mov
movsb
mov
decl
call
adc
decl
push
decl
push
call
pop
jmp
add
stos
add
mov
gs
and
call
push
cwtl
call
push
fwait
ficoml
fistpl
fistps
jmp
push
popf
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
cmpsl
cmpsl
cmpsl
jne
lahf
mov
add
inc
inc
adc
ja
lahf
fwait
popf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
nop
and
and
xchg
and
xchg
pop
call
or
popl
push
call
add
mov
add
stos
add
mov
fs
mov
xor
call
pop
fwait
fbld
fbld
in
cmpsb
jmp
cmpsb
jmp
gs
call
push
mov
int
mov
test
mov
lahf
sahf
add
inc
aas
adc
jp
xchg
cltd
call
lahf
popf
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
das
jo
cltd
xor
xchg
sub
cwtl
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
adc
roll
jmp
jo
jmp
jo
jmp
jno
call
je
jmp
scas
out
jbe
in
jbe
out
je
jmp
mov
mov
test
lcall
mov
add
add
add
jle
cmp
cmp
js
mov
pushf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
outsl
lcall
aaa
jae
mov
sbb
pop
call
add
movsb
add
stos
add
mov
popa
pushl
add
sbb
ficoml
jmp
js
ljmp
jmp
mov
push
cmpb
repnz
push
test
call
mov
shl
test
cmpsl
sahf
sahf
pushf
daa
lahf
lahf
sahf
add
add
add
add
xor
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
pushl
insb
mov
fwait
cmp
inc
jl
mov
aaa
ja
cltd
pop
call
add
mov
add
scas
add
add
mov
add
call
daa
cmp
movsl
jmp
mov
push
mov
push
pop
push
nop
nop
ret
stc
xchg
stc
ret
mov
ret
clc
stos
stos
stos
mov
popf
sahf
xor
popf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
mov
jle
lcall
dec
cmp
dec
test
movsl
xor
pop
lcall
add
test
pusha
ljmp
add
add
mov
push
outsb
call
xor
mov
out
xchg
ret
push
fwait
push
cltd
push
fwait
push
fwait
leave
push
fwait
enter
lret
lahf
int3
sti
popf
int3
cld
cwtl
leave
push
xchg
ret
mov
dec
mov
mov
lahf
lahf
mov
add
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
call
mov
mov
mov
sar
ret
inc
inc
leave
enter
sar
mov
ljmp
push
xchg
mov
pop
pop
lcall
add
stos
add
mov
mov
add
leave
add
or
loopne
xchg
out
mov
push
cmpsb
into
push
movsl
int
mull
sar
cld
movsl
iret
cld
test
stos
sar
test
sar
negb
int3
dec
leave
lret
std
mov
mov
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
fwait
cltd
add
add
add
xor
daa
sub
or
inc
bound
push
xlat
jne
jno
mov
rol
rol
mov
ret
ret
ret
inc
enter
rol
mov
test
movsb
push
test
scas
push
mov
scas
dec
xchg
lahf
sbb
sahf
add
jmp
pushl
add
ret
add
int
outsb
fadds
jb
fists
jnp
out
pop
cmpsb
push
lahf
lret
cli
lods
sar
cli
scas
aad
sti
scas
aad
cli
mov
cld
mov
mov
std
mov
mov
mov
std
mov
push
cmpsb
jmp
mov
dec
lret
mov
mov
lahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsb
jo
mov
mov
aad
jmp
test
int
dec
lret
lret
lret
lret
dec
lret
mov
lods
jmp
push
mov
stos
cmp
popa
jmp
add
mov
mov
add
iret
add
fadds
je
filds
je
ljmp
sti
scas
aam
std
mov
cld
mov
fdivr
std
mov
mov
fcos
mov
fdivr
stc
mov
jmp
mov
call
lret
int3
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
add
pop
or
enter
jecxz
pop
out
out
in
out
loop
loop
fstp
fucom
fcmovu
fcomi
xlat
cli
aad
xlat
std
int
sar
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
aam
jb
fldl
jne
in
ja
out
xor
sti
mov
std
std
inc
fdivrp
dec
dec
dec
fdivrp
dec
dec
loopne
cld
mov
enter
into
mov
mov
xchg
adc
add
add
incl
incb
std
std
add
div
or
in
in
pop
in
out
out
sub
out
in
dec
call
ljmp
jecxz
out
fcmovu
fucomp
ret
stc
lods
jo
cmpsl
cmp
mov
add
stos
add
mov
mov
add
int
outsl
call
add
add
ljmp
cli
mov
loop
dec
loop
std
int
dec
jecxz
dec
loop
dec
loop
std
int
dec
in
dec
jecxz
shl
call
in
sti
in
mov
xlat
inc
ret
cmpsb
test
mov
xchg
xchg
add
add
add
incb
std
std
add
stc
testb
repz
hlt
repz
out
lock
pop
in
icebp
lock
out
in
pop
loop
mov
xchg
sti
sahf
and
lcall
add
stos
add
mov
fs
add
movl
jb
flds
jbe
in
jp
in
movd
negb
cld
mov
cld
shl
cld
shl
call
call
call
jecxz
call
call
xlat
jmp
fucomi
std
iret
loope
repz
aad
jecxz
fcos
lret
lret
lret
rep
test
xchg
and
xchg
xchg
add
cli
add
std
clc
add
sti
stc
add
div
or
aam
xor
jae
negb
add
test
pop
ljmp
add
les
imul
rolb
jo
fildl
jne
out
js
in
sbb
push
jbe
sti
cld
fldl2t
fucomi
fucomi
fldl2e
fucomi
fucomi
fucomp
std
fucomip
fucomip
std
loopne
shl
push
ret
out
iret
rcl
clc
stos
stos
stos
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loopne
add
mov
cltd
repnz
and
lahf
add
add
mov
mov
add
into
add
aam
jno
fiadds
je
jmp
sub
cld
aam
fdivp
fsubr
std
fucomi
fsubr
aam
shl
sti
iret
loop
cli
shl
clc
into
clc
int3
fdivrp
cmc
ret
out
mov
xlat
xlat
sti
mov
mov
fwait
lcall
lcall
add
fcom
add
mov
subb
imul
add
test
add
mov
add
iret
add
fadds
jae
loope
js
call
ss
sti
cwtl
enter
cld
int3
jecxz
cld
fdivrp
stc
mov
sar
repnz
sar
lock
into
call
mov
sar
ljmp
imul
fnclex
cmc
fsubp
loopne
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
xor
pop
ljmp
add
mov
add
int
jno
rorb
jne
fimull
jns
loop
cmp
dec
cwtl
jmp
mov
jmp
mov
std
loop
cld
loopne
ret
mov
neg
mov
lret
vpmulhw
enter
iret
shl
fcmovb
call
in
test
in
lock
call
leave
lret
lods
lods
adc
test
cmpsl
add
ret
roll
ret
mov
stos
aam
dec
cmp
test
imul
es
mov
jns
mov
dec
xchg
ret
push
mov
lret
arpl
hlt
rorb
mov
mov
lret
ror
lret
mov
into
shlb
xlat
aam
jg
fcmovnu
jb
loopne
gs
in
out
call
xor
cmc
cmc
mull
lock
repnz
fstp
or
mov
into
add
add
add
rol
mov
mov
les
push
lock
sbbl
mov
test
mov
pushf
lret
mov
enter
into
iret
addr16
rcll
rcl
dec
fcom
inc
rcl
xor
fcmovnbe
daa
fcompl
ficoms
fsubp
loop
loopne
jecxz
out
ljmp
cli
testl
std
incb
std
incl
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
lds
mov
daa
int3
ror
and
aam
sbb
aad
adc
rorl
rcr
aam
rcr
add
fcmovnu
add
add
in
add
jmp
add
fcom
add
incl
mov
mov
add
rol
ret
sub
ret
mov
mov
ret
leave
movb
leave
movl
lret
add
fcom
add
xlat
aad
aad
aad
xlat
aam
add
fsub
add
aam
add
loope
add
add
out
add
repnz
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
ret
mov
mov
mov
ja
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
iret
shr
aad
aam
rcl
sar
ror
iret
cli
int
lret
stc
int3
lret
mov
mov
iret
stos
stos
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
into
xlat
xlat
xlat
call
xlat
call
iret
sar
iret
iret
into
dec
lret
mov
mov
cld
stos
stos
stos
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jae
jne
data16
dec
dec
dec
cmp
sub
sub
ss
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
int3
lret
rcl
call
rcl
dec
lret
lret
inc
mov
pushl
test
sahf
lahf
popf
xchg
xchg
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
addl
test
push
imul
imul
push
pop
pop
cmp
aaa
aaa
pop
jo
jno
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
ljmp
fwait
lcall
xchg
xchg
fwait
fwait
fwait
out
addb
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
pushf
cwtl
cwtl
fcoml
addl
jmp
jns
sarb
jp
jns
jnp
je
je
push
push
push
cmp
je
pushf
sahf
sahf
mov
lods
scas
repz
lods
scas
sti
scas
scas
scas
std
test
pushf
popf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsl
movsb
cmpsb
cltd
jae
jae
adc
adc
add
add
add
add
insl
outsb
insl
pop
stos
mov
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
mov
xchg
cltd
lcall
mov
call
sahf
ljmp
mov
mov
mov
stc
mov
mov
movsl
movsb
cmpsl
pop
jg
jg
pop
pop
pop
or
lods
mov
cmpsb
sahf
mov
decl
nop
mov
xchg
cwtl
cwtl
std
lahf
popf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
insb
insl
insl
xchg
subl
nop
mov
lcall
mov
pushl
pop
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
mov
xchg
call
cwtl
lcall
cwtl
cltd
cltd
fwait
pushf
popf
sahf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
mov
popl
mov
xchg
push
cld
xchg
pop
cmp
dec
jl
movsl
inc
js
lods
xor
je
mov
outsl
ljmp
sbb
mov
lods
mov
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
mov
in
movsl
test
lcall
mov
mov
decl
orl
cld
xchg
pusha
cmp
dec
js
nop
cmp
nop
sub
xchg
sbb
cwtl
maxps
lahf
or
push
pushl
sbb
mov
and
pop
nop
mov
scas
scas
xchg
popf
sahf
sahf
adc
add
add
pusha
popa
pusha
or
lods
mov
stos
movsb
cmpsb
jmp
test
ljmp
test
lcall
cmp
mov
decl
adc
test
push
decl
add
call
add
cmpsl
or
pushl
jl,pn
shrb
inc
das
jle
enter
leave
xor
dec
pop
xchg
inc
test
divl
cmpsl
test
add
add
add
popa
or
cmpsb
stos
in
mov
cmpsb
ljmp
mov
pushl
xchg
mov
decl
push
push
incl
add
decl
add
xchg
add
sahf
add
movsl
add
mov
outsb
inc
aaa
test
int3
inc
mov
into
inc
mov
aam
call
inc
xchg
fmuls
call
arpl
stc
mov
mov
movsb
movsl
movsl
daa
incb
add
add
pop
pop
pusha
or
popf
mov
ljmp
mov
mov
mov
test
call
sbb
adc
push
decl
add
mov
add
scas
add
mov
dec
nop
fcoms
fcompl
jmp
pop
sahf
jmp
pop
mov
jmp
insl
cmpsl
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jnp
pushf
cwtl
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
lahf
data16
xchg
cs
sub
xchg
and
xchg
push
pop
call
add
cmpsb
add
scas
add
mov
xor
loope
test
ljmp
in
jb
jmp
test
mov
inc
cmpb
add
add
dec
dec
dec
pop
outsb
outsl
push
mov
xchg
ljmp
mov
mov
mov
jne
lcall
cmp
pushf
sub
xchg
or
pop
jmp
pushl
or
xchg
jmp
jp
jmp
mov
in
test
push
xchg
out
mov
mov
cmpsb
cmpsb
push
fwait
fwait
fwait
add
sub
sub
push
push
dec
pop
gs
xchg
mov
mov
mov
mov
ret
mov
xchg
ljmp
sub
fwait
push
pop
jmp
add
mov
arpl
mov
adc
jmp
pop
mov
push
xchg
push
cltd
xchg
stc
fwait
lret
lcall
loope
vcmpss
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
mov
test
ljmp
push
sahf
add
add
mov
arpl
mov
add
fldenv
cmp
hlt
movsb
lret
push
cmpsl
sar
cli
test
sti
stos
sar
sti
lods
sar
cld
lods
sar
stc
cmpsl
int3
call
mov
stos
jne
sahf
popf
or
add
add
dec
dec
dec
aaa
jb
jae
test
into
int3
out
into
int
leave
int3
lret
sti
enter
leave
enter
mov
stos
bound
jmp
add
mov
fs
add
int
outsb
flds
jmp
xchg
cld
mov
std
mov
fdivr
mov
mov
sar
jmp
leave
dec
rol
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
loopne
jecxz
fsubp
loope
fstp
ffree
fcmovu
fcmovnu
aad
xlat
out
shll
test
jae
movsl
pop
popa
ljmp
add
enter
aad
jae
in
jnp
repnz
mov
std
ret
loop
std
loope
std
enter
loopne
dec
loopne
dec
loope
std
lock
leave
divb
popf
popf
sbb
add
add
incl
std
incb
jmp
or
in
in
sbb
jmp
xor
loop
jecxz
les
mov
mov
add
mov
arpl
ret
dec
add
faddl
je
ljmp
cld
ret
cld
shl
std
shl
call
in
aam
call
out
std
out
std
aam
push
fcos
fcmove
sar
mov
mov
add
incl
std
std
add
std
pop
aam
push
mov
pop
xchg
lahf
or
ljmp
add
add
rolb
outsl
fiadds
jne
out
and
shl
std
fsubr
cld
xlat
jmp
sti
fsub
sti
shl
push
xlat
jmp
rcl
sti
mov
popf
sahf
das
add
add
into
int
or
bound
ljmp
add
enter
aad
jb
loopne
ja
out
xor
stc
int3
loopne
clc
lret
cmc
fsin
bnd
icebp
ret
aad
out
sar
out
vpsubw
aam
ljmp
ljmp
stos
das
std
incb
aam
aad
mov
je
or
mov
imul
pop
jno
lret
and
cs
loopne
pushf
clc
jecxz
mov
out
loop
leave
jmp
fdivrl
lret
sarl
in
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
movsb
les
xchg
mov
nop
fidivrl
andb
int
mov
sarl
jge
vpunpckhqdq
lret
into
pop
ror
rorl
xlat
fnstcw
fisubrs
in
frstor
in
repnz
jmp
or
incb
std
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
leave
enter
aam
rol
adc
rcl
or
loopne
or
int3
int3
add
std
std
add
std
std
add
add
add
into
int3
shufps
or
int3
int3
into
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
xchg
mov
mov
rol
mov
scas
mov
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
int
into
std
mov
stc
mov
test
jg
push
push
sbb
add
add
add
add
add
add
add
add
jae
jae
addr16
inc
dec
das
das
das
sub
and
add
add
mov
mov
cmpl
ret
int
call
rcl
dec
iret
iret
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
jae
jne
xchg
aad
outsb
outsl
ret
arpl
outsl
outsl
outsl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jno
and
add
pop
add
add
je
jae
pushf
xchg
lcall
test
clc
xchg
or
test
push
dec
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
lods
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
adcl
stos
mov
mov
lea
cld
sahf
sahf
popf
cmc
cltd
cwtl
cwtl
in
addb
imul
jge
mov
xchg
notl
mov
pushl
push
cwtl
mov
mov
test
stos
lods
add
add
add
scas
test
xchg
xchg
xchg
call
fwait
cltd
lcall
cltd
lcall
mov
loope
jne
out
nop
arpl
std
pushf
inc
ja
movsl
ss
scas
sub
pop
jo
mov
outsb
pushl
pushf
scas
lock
mov
imul
into
add
xchg
pop
scas
movsl
lods
test
lahf
popf
lahf
jmp
movsl
call
jl
mov
decb
xor
mov
call
or
mov
sbb
jne
mov
sub
lds
xchg
mov
mov
subl
jne
push
mov
movsb
test
ljmp
mov
lcall
sub
mov
pop
incl
add
mov
push
call
add
lods
adc
ret
dec
aas
mov
iret
inc
mov
aad
mov
aam
xchg
dec
lcall
movsb
movsb
movsl
push
add
add
imul
test
mov
scas
pushl
mov
ljmp
cmp
xchg
sbb
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
pusha
mov
call
lcall
test
test
add
add
arpl
adc
pushf
pushf
lcall
mov
mov
lcall
jno
lcall
lcall
add
mov
push
jmp
outsb
lods
call
jnp
out
jle
out
jge
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
rol
mov
fs
movsb
inc
jge
sahf
and
pop
ljmp
add
or
fimull
in
lea
push
xchg
cwtl
stc
xchg
enter
mov
cmpsb
sub
aas
aas
aas
adc
push
xchg
mov
mov
inc
ret
mov
xchg
ljmp
sbb
movsb
add
mov
gs
add
aad
ja
jmp
scas
clc
test
clc
lods
iret
cli
lods
sar
cld
lods
sar
cld
lods
iret
in
mov
inc
mov
movsl
ds
incl
xor
add
scas
mov
mov
aam
mov
aam
rcl
shr
lret
cli
mov
mov
jmp
add
les
push
add
call
pop
std
mov
inc
cld
ret
inc
fcos
icebp
mov
ret
test
dec
addl
stos
add
in
jmp
out
jmp
inc
loopne
jecxz
fcmovu
fldenv
mov
add
mov
add
add
out
aaa
xchg
cld
scas
aad
cld
into
in
std
iret
out
std
shl
call
in
shl
push
rol
int
scas
lods
lods
popa
jg
addl
add
add
std
add
incl
int3
int3
shrl
lahf
sbb
lods
add
mov
add
jecxz
jp
repz
cmpsb
std
loopne
std
jmp
std
aad
std
aam
cli
shl
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
arpl
mov
or
ficomps
cmp
imul
out
mov
iret
bnd
shl
out
aam
ljmp
scas
vsqrtpd
add
add
rol
mov
stos
xchg
and
shlb
lret
mov
xlat
mov
lret
adc
int
xlat
lret
iret
pop
xlat
dec
in
loope
out
out
in
in
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
sbb
fstp
bswap
into
int3
or
aam
push
std
std
incl
jg
jg
std
std
incl
lods
std
add
rol
std
incl
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
outsl
mov
lock
daa
scas
loope
pop
mov
call
lock
xor
in
scas
shrb
rcrb
mov
ljmp
mov
lds
addr16
inc
cmp
xchg
sub
cmp
pop
dec
lret
fmuls
jl
mov
add
mov
icebp
jge
aaa
lahf
sbb
xor
les
xchg
dec
daa
sub
add
call
ret
scas
sbb
in
pop
push
inc
repz
movsb
xchg
push
jnp
adc
ss
repz
xchg
aam
cmp
jp
sti
cmp
lods
insl
stos
xor
mov
incb
jl
jge
and
loopne
adc
xor
inc
cmp
push
inc
dec
xchg
pushf
int3
dec
jbe
stos
scas
fimull
mov
push
pop
call
push
loop
pop
bound
aad
mov
outsb
mov
fistps
lods
mov
ret
push
insl
int
jns
mov
testb
inc
sub
inc
rorb
push
xchg
and
outsl
push
add
mov
fisttpll
in
push
jle
inc
je
push
int
into
xchg
hlt
popa
or
push
push
pop
fcompl
push
in
aas
inc
aam
sbb
fcmovb
repnz
xor
call
and
mov
mov
frstor
roll
inc
and
and
shll
std
xchg
jb
in
inc
and
pop
sbb
fsubl
clc
fs
test
mov
aaa
cltd
xor
cltd
cmp
out
cmp
sbb
test
xor
fmuls
sub
dec
dec
inc
repnz
outsb
sahf
rorb
xchg
mov
sahf
hlt
xor
mov
aam
push
xchg
xchg
jmp
inc
mov
mov
call
lcall
dec
xor
add
jns
adc
std
or
add
xlat
cmpb
mov
je
inc
arpl
jne
bswap
subb
mov
lcall
in
out
mov
jo
jle
loopne
cmp
mov
adc
mov
push
xor
cmp
and
xlat
fimuls
dec
fwait
sub
ret
fdivrl
ffreep
mov
inc
adc
inc
jmp
xor
mov
jns
stos
sub
lcall
lret
scas
pusha
cltd
cmpsl
inc
add
test
cmp
test
cltd
adc
inc
lods
and
in
sub
std
test
out
icebp
adc
daa
scas
add
jb
or
rorb
xlat
dec
xchg
mov
add
mov
xchg
fsts
ffree
jnp
push
xor
pop
loop
imul
and
roll
push
and
mov
mov
inc
sti
mov
sub
dec
mov
popf
fidivrl
rcr
jnp
clc
fnstcw
inc
into
inc
add
mov
mov
rclb
data16
out
out
andl
push
and
cmpsb
out
imul
dec
mov
orl
sub
mov
mov
aaa
sti
pop
push
insl
mov
add
aaa
pop
shlb
xor
mov
adc
or
xor
es
add
inc
adc
mov
lcall
popa
aad
add
rorl
and
js
fcoms
xchg
xchg
inc
inc
fdivl
subl
outsl
jge
int3
call
lods
inc
inc
lcall
pushf
mov
pminsw
insl
rolb
xor
bound
ss
popf
cmp
cs
mov
push
mov
clc
push
in
fdivrs
call
jmp
in
xor
aas
push
roll
push
jns
lahf
adc
push
addb
jmp
pop
mov
pop
aam
mov
jno
inc
pop
jo
and
pop
jo
into
ljmp
scas
mov
cmp
out
mov
pop
outsl
inc
sbb
mov
mov
mov
or
scas
sarl
bound
std
movsl
stos
les
adc
mov
dec
mov
popa
into
pop
mov
sti
int
pop
test
jae
mov
pop
test
push
pushf
mov
dec
unpcklps
lret
xchg
imul
add
cs
xchg
insl
sub
jo,pt
rorl
xchg
add
int3
jmp
stc
pslld
mov
jge
lahf
xchg
pop
push
push
cmpsb
jg
ja
cwtl
insb
sbb
push
add
aam
and
fisttpll
aas
scas
repz
adc
rcr
push
idivl
xor
mov
dec
cmp
ss
imul
std
lods
and
xor
mov
xchg
lock
shlb
fwait
jge
cmp
data16
roll
fisubrl
arpl
dec
lods
jbe
sub
xchg
jae
rclb
mov
mov
lahf
and
sbb
repz
out
push
and
mov
sub
fldenv
test
aad
psubsw
mov
mov
lock
insl
pop
fnsave
xor
sbb
mov
out
or
push
mov
aaa
dec
sarl
outsb
jl,pn
lret
cs
mov
or
or
xor
shrd
xor
pop
xor
xchg
push
push
xchg
popf
xor
ja
jmp
inc
jg
xor
cmp
repz
enter
cmp
subl
dec
loopne
data16
insb
push
movsb
push
mov
ss
mov
leave
sub
xchg
neg
jb
xchg
bound
std
xchg
cs
add
push
nop
mov
and
adc
popa
les
and
jp
bound
es
lods
xor
das
sahf
sbb
shlb
into
cmpsl
icebp
sbb
and
push
in
cli
inc
cmp
mov
test
outsb
mov
add
dec
mov
adcb
cmp
lcall
shrb
pop
lock
call
pop
and
int
sbb
jmp
lea
in
jnp
add
xchg
xor
sub
cltd
pop
in
fwait
or
fstps
fmull
add
push
loop
sbb
hlt
incb
mov
in
nop
int
outsb
add
pop
jle
and
shrl
ljmp
jno
pop
js
jge
cmp
fwait
cld
mov
mov
adc
fsubs
ret
repz
sahf
mov
jle
inc
and
xor
mov
popa
clc
stos
push
fnstenv
int3
jg
popa
testl
in
mov
lret
aaa
negl
inc
fldcw
adc
push
jmp
cmp
fs
pop
negl
or
out
cmp
adc
inc
push
add
sub
iret
push
cmc
hlt
mov
jns
call
in
addr16
push
cmp
movsb
push
xchg
data16
jge
dec
mov
and
insb
aaa
pop
lds
xchg
pop
daa
outsl
push
add
and
xor
xor
jmp
lahf
inc
sahf
adc
scas
push
lea
int
fbld
mov
cli
xor
bound
jae
dec
sbbl
outsb
xchg
sub
ret
hlt
sub
gs
jnp
push
lods
push
xlat
outsb
add
mov
sub
aas
je
stos
movsl
pusha
inc
ficoms
mov
cld
jecxz
push
out
add
sbb
push
add
mov
rclb
stos
inc
inc
std
fidivs
fs
pusha
xchg
push
cld
xchg
xorb
cld
lea
ja
sahf
call
lock
mov
adc
leave
inc
lret
cmp
icebp
arpl
mov
jne
push
addr16
sbbl
mov
cwtl
push
sbb
mov
ja
and
add
xor
aaa
inc
gs
jle
adc
pop
dec
jns
or
and
sar
xchg
push
and
xchg
mov
lcall
inc
mov
jne
pop
enter
cld
xchg
push
insb
sbb
movsl
adc
lcall
xchg
mov
lds
pop
or
mov
outsb
add
cmp
shlb
pop
mov
and
popa
popf
fdivl
adcb
adcl
mov
test
insb
sbb
mov
icebp
lods
fmuls
mov
shrb
xchg
roll
into
gs
mov
lea
lahf
ss
test
lcall
cmp
lds
mov
mov
fstl
xor
mov
push
cmp
push
mov
loopne
sbb
cmp
aam
fidivs
je
lods
scas
inc
push
ljmp
leave
pusha
inc
sub
sahf
xor
sub
sub
stc
mov
fnstenv
jle
inc
popf
mov
mov
push
orps
xor
aam
pop
clc
push
mov
movsl
jge
subl
jae
nop
out
add
push
lods
push
adc
rorb
jge
out
arpl
push
dec
sahf
xor
out
jnp
dec
orl
popa
xchg
sub
lret
addb
rep
lret
bound
inc
jge
jge
insl
add
sbb
roll
push
lods
stos
call
sbbl
adc
fs
shll
mov
inc
xchg
add
inc
fstpl
mov
jmp
sub
adc
loopne
sbb
xor
outsl
push
inc
arpl
stos
fs
bound
inc
fstpt
fnstenv
pop
das
dec
mov
push
nop
ret
or
sub
jge
mov
leave
dec
addr16
in
push
sbb
nop
jge
xchg
mov
cmp
ja
add
out
add
lds
mov
sbb
mov
push
mov
xor
inc
mov
js
mov
push
addl
ret
xchg
xchg
mull
loopne
lock
ror
jno
mov
jbe
cmp
int
repnz
call
jbe
sbbl
cwtl
movsl
cmp
mov
push
loop
inc
fcomps
les
push
dec
in
push
testl
push
repnz
push
mov
mov
mov
out
scas
imul
pop
and
mov
es
pop
push
push
push
ljmp
fsubrs
mov
mov
jp
loope
xorb
std
jnp
sbb
inc
push
in
xorb
dec
inc
inc
mov
les
pop
sbb
or
mov
mov
outsl
mov
mov
push
lds
mov
xchg
and
fs
push
call
cmp
jmp
repnz
cmp
xor
outsl
inc
frstor
das
mov
dec
in
test
dec
mov
jbe
sub
cmp
test
pusha
notl
lret
mov
frstor
sub
pusha
mov
jmp
xchg
xchg
jp
push
cmp
outsl
daa
adc
je
mov
imul
dec
les
fiadds
push
pusha
sbb
push
mov
xor
jb
in
arpl
int3
arpl
pop
outsl
push
movsl
pop
jb
mov
xor
stos
rclb
cld
xchg
mov
dec
loope
rcrb
mov
icebp
add
aam
mov
add
xchg
test
ret
and
jo
int
fwait
jecxz
or
cs
mov
ret
mov
in
xor
inc
fadd
mov
sub
fadds
adc
ljmp
mov
and
lsl
mov
mov
vfmaddsub231ps
arpl
enter
mov
dec
repz
mov
outsl
push
mov
addb
les
cmp
adc
add
cmpsb
rcl
push
mov
fildl
sahf
int3
lods
in
in
clc
fisttps
or
mov
jmp
add
adc
xchg
inc
dec
loopne
mov
sbb
cmp
pop
int3
arpl
add
add
ss
and
clc
adcb
rcrl
jge
outsl
mov
push
push
dec
jo
mov
or
adc
ret
cmp
push
sbb
sahf
inc
mull
call
or
jnp
xor
clc
pushf
mov
mov
das
jno
mov
ret
mov
sub
test
inc
out
lock
cmc
jb
sub
out
jmp
and
jg
sahf
xor
adc
xchg
movb
push
sbb
leave
or
addb
fdiv
icebp
mov
lods
inc
lock
dec
filds
mov
ja
nop
ss
test
jmp
mov
fcmovnbe
addr16
push
in
stos
out
data16
fistps
es
add
jno
mov
cmp
das
xchg
lret
push
mov
mov
out
jo
inc
sbbb
dec
xor
jo
sbb
loop
gs
cmc
pop
jmp
bound
test
sbb
scas
je
imulb
pop
or
add
xor
mov
sbb
inc
pop
pop
bnd
cld
xchg
sub
mov
pop
mov
rcl
mov
dec
loope
aam
mov
jb
xsha256
cmpsb
xlat
add
movb
ljmp
xchg
jle
xlat
outsb
lcall
std
xchg
mov
lods
inc
movsb
inc
xor
add
adc
call
ds
clc
std
test
lea
adc
mov
mov
mov
lahf
cmpsl
int
push
add
mov
fsubr
fdivrl
xchg
dec
leave
pusha
cwtl
add
aad
sub
pop
repz
shlb
mov
clc
clc
or
jmp
or
ret
mov
in
xlat
ja
dec
pop
sahf
jnp
popa
pushf
fdivs
push
lods
fcompl
sub
dec
std
xor
lret
or
xor
sbb
xchg
sub
mov
mov
xor
xlat
outsb
fs
sbb
cmp
dec
in
cmp
inc
fdivs
rolb
shlb
sbbl
std
add
jp
push
les
ret
cmpsb
cmp
jecxz
fbstp
add
pop
pushf
aam
aaa
mov
mov
add
int3
arpl
and
xchg
cs
xchg
stc
pop
shl
push
cmp
push
es
sbb
daa
inc
pop
idivb
dec
mov
pop
pop
and
dec
nop
jo
sub
das
mov
clc
mov
add
mov
pop
jecxz
cmp
clc
icebp
mov
mov
cltd
push
or
pushf
xor
out
xchg
lods
inc
scas
popa
sbb
add
adcl
int3
arpl
and
add
gs
xchg
dec
or
inc
je
andb
push
sbb
pop
repz
xchg
sub
lea
mov
pop
mov
mov
pop
add
imul
inc
addl
cmp
call
xchg
fwait
cmpsb
shrl
mov
mov
js
std
xchg
cmp
sub
cli
pop
jge
sbb
shll
lds
xor
stc
enter
pop
ljmp
jae
cmp
insl
xchg
hlt
mov
mov
cmp
arpl
xchg
xchg
shrb
mov
jno
jns
aam
repz
pop
push
jns
pop
loop
push
xor
mov
pop
dec
dec
or
out
xchg
std
xchg
dec
es
mov
js
or
sub
popa
mov
add
mov
push
nop
push
inc
fistpll
ffree
imul
sbb
test
pop
and
lds
cmp
lret
mov
shl
je
loopne
mov
aad
push
sub
test
lea
ljmp
jnp
xchg
add
cmpsl
insl
jns
inc
das
mov
in
push
or
cwtl
mov
adc
nop
hlt
cmp
imul
jecxz
and
mov
add
in
stos
and
hlt
jns
incb
adc
loope
pop
scas
jnp
jg
xor
xor
sub
fs
push
gs
jmp
imul
mov
mov
push
xchg
add
nop
fwait
and
stos
sbb
dec
clc
ret
sub
inc
adc
movsb
xchg
dec
fildll
dec
inc
fsubrs
into
jge
aam
fidivl
negb
pop
sub
xchg
nop
out
ret
pop
mov
jge
sbb
xor
movsb
std
stos
inc
das
sbb
loope
stos
inc
popf
mov
stos
push
jl
and
sbb
ret
mov
repnz
ret
inc
jns
xor
sahf
xor
test
add
or
push
out
sub
adc
lds
jnp
push
lods
inc
or
rolb
into
jno
loop
mov
pop
aaa
into
out
cmpsl
xlat
push
gs
nop
push
jp
lahf
mov
mov
repnz
lods
xchg
sti
xchg
xchg
cmpsl
push
ljmp
push
movsl
andb
fnstcw
dec
loope
lahf
or
das
dec
sbb
bound
es
push
mov
sub
dec
in
cmpl
xor
ret
pop
jno
inc
in
lret
mov
in
test
sub
adc
aaa
jge
cmp
mov
mov
imul
rcl
imul
mov
push
adc
mov
shll
int
fwait
add
xlat
push
dec
jae
jp
sbbl
mov
mov
pop
or
dec
loope
mov
xchg
sub
pusha
xor
jnp
xor
mov
in
test
fistps
outsl
dec
les
mov
out
mov
pushf
nop
call
mov
lret
lea
mov
cmp
jnp
sub
mov
jl
lods
stos
inc
pop
mov
sub
mov
cwtl
das
jnp
int
out
sub
popf
jl
iret
repnz
inc
in
stos
inc
imul
push
call
and
lahf
data16
pop
dec
inc
fldl
loope
jg
out
xchg
inc
dec
fbstp
xchg
mov
push
les
notb
movsl
cmp
mov
sub
xchg
or
jl
sarl
iret
rol
add
pushf
lahf
sub
pop
imul
dec
fisttpll
imul
ljmp
jle
enter
jbe
roll
ret
repnz
in
and
and
inc
dec
push
lahf
cli
shr
add
mov
inc
sub
mov
push
or
inc
sub
jnp
mov
push
and
mov
daa
inc
enter
in
ret
aad
lcall
push
call
out
xchg
int3
sbb
daa
xor
or
dec
adc
pop
inc
sbb
mov
add
les
and
xchg
mov
cs
scas
inc
mov
add
lods
jmp
jns
jg
dec
loopne
pop
push
aas
test
adc
cmp
call
negb
lcall
xchg
sub
and
fidivs
xchg
dec
leave
nop
mov
add
lahf
sbb
iret
popa
mov
es
insb
sub
nop
cmp
fwait
adc
inc
mov
adcb
inc
pop
mov
test
test
jmp
pop
sbb
aas
scas
inc
test
call
cld
cwtl
pop
mov
push
mov
aam
jno
dec
inc
scas
inc
fdivr
gs
inc
xor
ds
push
enter
cmp
aas
ret
popa
inc
fisttpl
mov
imul
inc
sub
mov
outsl
mov
mov
ficoms
scas
out
movsb
cmp
dec
loop
js
jae
pop
sbb
dec
jg
stc
mov
ret
shll
mov
xor
push
aad
push
mov
cmpsl
pop
xor
pop
repz
in
test
xchg
pop
scas
sub
orps
pop
ja
jg
jnp
lods
cmp
lahf
ss
pop
dec
fbld
int
lods
addb
into
xchg
sub
aam
into
jmp
in
pushf
or
int3
sahf
mov
das
and
pusha
jg
xor
ret
mov
aaa
into
adc
ss
xchg
adcb
cmpsl
sub
or
mov
ret
aad
sub
adc
int
ret
shl
mov
lahf
mov
shrl
fdivs
icebp
scas
mov
test
xchg
sub
into
mov
fstps
xchg
pushf
cli
stos
inc
mov
fdivl
pushf
pusha
or
imul
lahf
ss
dec
add
jb
jns
loop
mov
push
mov
nop
ljmp
scas
mov
rorl
xchg
stos
inc
sbb
or
mov
scas
adc
xchg
and
xorb
mov
ljmp
and
inc
ss
nop
inc
ffree
cwtl
pop
repnz
pop
scas
ret
scas
popa
jecxz
fbstp
xlat
xor
ljmp
rcrb
sub
sub
pop
repz
cmp
jo
or
and
push
in
push
and
movsl
movsb
jb
ljmp
and
minps
popf
xor
xor
jle
inc
movsl
adc
aas
cwtl
pop
lock
shlb
in
sub
fnstsw
fidivs
addr16
push
push
xor
inc
lock
stc
fdivl
mov
cmpsl
or
add
sbb
out
daa
ds
call
sbb
lock
or
je
cmpsl
mov
fs
testb
xor
mov
pusha
mov
mov
es
push
dec
adc
dec
sub
je
add
cmp
add
aaa
xchg
sub
sub
dec
loopne
clc
out
sub
push
out
sub
aad
fs
jne
jge
repz
fcoms
test
xchg
add
cli
enter
jge
in
fidivl
clc
add
pop
or
mov
or
inc
shrb
mov
or
cmp
shl
shrl
addb
addr16
lock
imul
imul
lcall
mov
in
or
sbb
jmp
test
cld
or
push
andb
push
pop
ja
dec
or
sti
xchg
fwait
pop
pop
repz
lea
push
xchg
push
pop
push
jmp
dec
mov
jge
dec
pop
repz
insb
fwait
xor
pop
fidivs
les
mov
popf
loop
pop
out
inc
add
mov
push
cmp
jp
mov
adc
adc
push
inc
mov
punpckhwd
mov
xchg
fiaddl
and
push
shrb
mov
and
cmp
fadd
xchg
sub
jno
xor
loop
mov
jg
mov
testl
les
mov
adc
in
jno
int3
enter
mov
sti
dec
adc
ss
pop
cwtl
stos
xchg
sub
mov
in
test
dec
lret
sbb
push
out
popa
fidivs
imul
mov
repnz
loopne
in
jns
icebp
cmp
test
xor
push
testl
mov
jae
test
pop
mov
test
popa
push
cltd
addr16
pop
hlt
jp
mov
add
popf
stc
into
pop
mov
lods
cmp
fstpl
xchg
adc
push
test
lea
adc
lret
movsb
mov
cmp
stc
mov
ret
inc
lods
roll
stos
jbe
jbe
sub
shll
in
mov
or
repz
jo
and
cmpsb
jne
inc
dec
mov
and
leave
imul
sbb
cli
outsb
xchg
cwtl
gs
daa
adc
mov
pop
faddl
inc
dec
rcrl
je
xor
or
inc
fsubrs
jecxz
fnstcw
cmp
ret
push
lea
or
data16
out
xor
cmp
loopne
lock
daa
dec
mov
jnp
pusha
sarb
in
push
iret
push
outsb
test
sarl
fsubrs
fiaddl
arpl
ja
jle
jg
out
mov
inc
shrb
adc
xor
xor
push
cmp
jbe
ja
mov
fsubs
icebp
cwtl
push
inc
testl
lock
pop
adc
inc
stos
pop
and
pop
lock
enter
xor
xchg
pop
rcll
sbb
adc
mov
stc
das
ja
cmp
imul
jmp
mov
aam
and
push
mov
dec
loope
loopne
xor
pop
sub
sub
adc
js
jbe
daa
jo
aam
imul
scas
mov
cmp
or
and
xor
push
mov
mov
sbb
pop
repz
adc
cmpsl
jle
lock
jecxz
test
shlb
out
push
adc
clts
pshufw
mov
iret
pushf
jmp
stos
out
cli
xchg
or
xchg
dec
jnp
scas
mov
mov
aad
fs
sbb
fldcw
lcall
dec
and
popa
lret
aas
inc
stc
push
pusha
rolb
popa
cmp
insl
or
mov
cld
cmpl
jmp
pop
or
iret
jae
in
or
cmpsl
ds
into
dec
enter
outsb
jb
mov
rcl
les
lahf
sbb
sbbb
clc
dec
sub
insb
lods
pop
dec
sbb
adcb
push
mov
mov
repz
cmpsl
addl
leave
mov
mov
fsts
mov
repnz
test
or
mov
leave
adc
sub
jp
xor
pop
dec
andb
test
cwtl
mov
push
mov
loop
xchg
xchg
adc
jmp
loopnew
cmpsb
jmp
std
mov
mov
sahf
add
repz
mov
jnp
pop
hlt
pop
pushf
mov
enter
pop
push
outsl
xor
dec
mov
inc
adc
test
xor
movsl
inc
adc
int
or
cwtl
sbb
pop
mov
addr16
dec
in
pushf
fdivl
jno
andb
sahf
fs
out
stos
mov
imul
and
xor
test
lock
test
and
es
xor
mov
and
outsb
dec
int3
mov
and
bnd
xchg
stc
cltd
cmp
mov
shlb
add
mov
xor
sub
sarl
daa
mov
negl
roll
xor
sub
insl
cmp
scas
dec
ds
out
xchg
loopne
into
loopne
fimuls
lods
sub
push
dec
mov
bound
lcall
and
or
sbb
ja
and
mov
sub
xchg
popa
and
dec
dec
mov
fwait
dec
sbb
insl
scas
push
jbe
pop
std
mov
add
dec
adc
loopne
inc
jle
fs
cmc
pop
sub
iret
mov
fiaddl
adc
movsl
test
xlat
adc
lea
jecxz
fbld
sub
cli
cmpsb
dec
bound
or
xchg
in
repz
jge
fidivl
sahf
ljmp
fwait
mov
repnz
mov
stc
rcrl
push
aad
xchg
cld
fadds
jne
out
inc
hlt
jecxz
es
xchg
xchg
xchg
dec
push
dec
jae
outsb
lcall
jge
rcll
push
test
inc
lods
cmpsb
test
jecxz
jne
mov
cld
ret
push
dec
jecxz
leave
mov
popf
lea
inc
fmuls
push
mov
adc
cmpsl
sbb
ds
imul
int
push
daa
or
sub
push
fcoms
scas
or
insb
xlat
stos
and
xchg
push
or
cmp
dec
mov
das
loopne
mov
aam
mov
mov
fcmovbe
add
inc
cmp
lcall
ljmp
gs
inc
inc
push
push
mov
inc
pop
xchg
inc
faddp
jg
sbb
pop
add
cmp
jl
xchg
fdivs
movsl
stc
ror
cmp
push
cwtl
jmp
and
lods
adc
mov
sub
xor
pop
js
mov
sbb
dec
out
imul
sbb
das
leave
or
jge
xor
sbb
ss
sub
sbb
fcmove
arpl
xchg
inc
pusha
cmp
jae
bound
xchg
stc
adc
lds
or
mov
pop
mov
mov
arpl
dec
ja
icebp
mov
add
mov
sub
sub
test
pop
js
sub
pop
repz
mov
mov
push
mov
inc
fadd
aad
xor
push
pop
mov
jbe
pop
stos
ljmp
ss
je
cltd
xor
lret
fsub
pop
mov
fwait
mov
and
loop
mov
in
es
out
ds
adc
sub
push
mov
in
add
mov
xor
push
pop
into
mov
sbb
shll
xor
push
push
inc
adc
jno
out
ja
sahf
incb
cmp
mov
push
cmp
mov
add
fxch
cmpsb
add
sbb
in
push
outsl
sbb
fwait
mov
add
rorl
or
aad
das
xor
sub
sub
adc
or
sar
loope
jb
test
pop
stc
stc
in
sbb
and
sbb
fstpt
int3
jmp
pop
pop
mull
cld
lahf
in
call
sti
call
jmp
rclb
bnd
gs
fdivr
in
add
push
adc
mov
cs
in
popf
ds
add
iret
mov
sbbb
cltd
dec
xchg
stc
lds
in
and
or
sti
cltd
inc
sub
push
mov
lods
and
sbb
or
outsb
push
or
cmp
lret
pop
sub
and
stos
imul
mov
test
mov
jo
in
mov
sub
push
pop
and
pusha
pop
xor
inc
insl
ds
dec
bound
pop
jg
ret
cltd
adc
add
inc
add
mov
inc
out
stos
testb
mov
roll
pop
or
int
xor
loop
call
or
mov
rorl
inc
and
push
lods
into
or
cli
inc
xor
js
xchg
push
imul
insl
jecxz
arpl
outsl
cwtl
sub
dec
adc
mov
push
out
ret
or
cli
ja
adc
gs
outsl
mov
push
popf
xchg
das
xchg
add
push
das
orl
sbb
pop
dec
test
mov
cmp
decb
jbe
jnp
adc
test
mov
dec
jge
push
std
cwtl
sub
pop
xchg
int3
mov
mov
xchg
xlat
sbb
or
mov
lret
addr16
int3
insl
sbb
pop
dec
push
pop
test
ret
cmp
imul
cli
rorl
mov
dec
pop
fldcw
out
xor
cmp
push
and
mov
lcall
mov
test
aad
rcll
and
dec
add
pop
repnz
pop
push
enter
mov
shrl
adc
pop
sbb
inc
dec
outsb
divb
sub
pop
inc
cmpsb
pop
fucom
ds
mov
pop
adc
cmp
rcr
lods
pop
fidivl
int
adc
sub
pushf
mov
inc
call
push
mov
push
icebp
jae
test
pop
push
add
sar
mov
in
clc
cmc
mov
daa
sbb
lret
xchg
mov
push
sbb
and
dec
push
pop
xchg
rorl
pop
cmp
sbb
xchg
clc
mov
lods
inc
jl
jge
call
add
hlt
push
es
push
lods
test
sub
add
cmp
mov
sbb
movsl
cmp
mov
out
rcrl
ss
test
xchg
xchg
iret
int
sub
xor
inc
out
std
mov
xlat
and
arpl
jge
inc
cmpsl
mov
test
shll
fsubl
add
fidivs
adc
lods
gs
fldl
jne
cmpb
loopne
call
aaa
les
mov
push
fildll
mov
pusha
pop
xchg
orl
mov
fs
adc
ds
sub
ss
imul
negb
cld
xchg
push
cmp
jbe
bound
out
cmp
adc
out
mov
dec
mov
rcrl
pop
scas
or
test
nop
test
or
imul
in
icebp
xchg
mov
mov
popf
dec
push
adc
pop
ja
call
mov
in
arpl
and
int
negl
jge
sbb
rorb
fisubrl
dec
xchg
test
mov
stc
lret
xchg
negb
ret
subb
push
or
pop
xchg
mov
xchg
mov
mov
loop
out
and
lret
or
test
pop
xor
loop
ss
mov
pop
xchg
sbb
enter
ljmp
es
and
fldcw
push
jae
sbb
repz
movsb
dec
fwait
inc
xchg
add
daa
hlt
and
inc
dec
out
xchg
cmp
xchg
leave
push
adc
xchg
imul
mov
or
push
mov
jp
out
fwait
cmpl
push
pop
test
add
out
pop
dec
clc
fwait
sbb
add
hlt
in
rcrb
in
orl
mov
test
jne
mov
out
push
cmp
mov
ficoml
in
inc
sbbb
sub
xlat
mov
xor
dec
lcall
cmpsl
fstpl
andl
pop
pop
ficompl
imul
cmpsb
mov
scas
jb
sti
cltd
jns
testb
or
lret
daa
addr16
mov
jbe
xor
js
ss
xchg
std
in
cmp
adc
popf
arpl
sub
add
xchg
fisubrs
loop
mov
pop
ljmp
dec
icebp
ds
xchg
xor
inc
loope
icebp
mov
add
dec
insb
icebp
das
repnz
out
xchg
or
mov
mov
cmp
fwait
xchg
add
sbb
mov
iret
cmc
mov
dec
aad
cltd
cmp
aam
push
das
aas
jmp
loopne
imul
sub
mov
mov
pcmpgtw
dec
loop
call
push
and
bound
ror
ret
add
or
sti
int3
psadbw
lds
or
dec
loopne
push
pop
fldl
mov
daa
js
jmp
xchg
jb
imul
lock
xchg
aad
movsb
cmp
testb
or
mov
or
mov
lods
popa
sbb
mov
cmp
sahf
gs
jl
cmp
gs
movsb
cmpsb
call
inc
cltd
outsl
ljmp
sahf
int3
movsl
mov
repnz
fstp
xchg
or
lahf
jg
xchg
pop
scas
ret
fcoml
inc
and
jp
test
mov
mov
and
fwait
jp
inc
loope
push
push
xlat
addr16
call
sbb
aaa
mov
xchg
ret
test
cmp
pop
xor
imul
iret
ja
mov
das
js
add
into
enter
cmp
push
and
das
sub
dec
rol
push
xchg
outsl
push
sub
mov
scas
sub
xchg
mov
fcomp
xorb
sbb
mov
cmpsb
test
fucomp
fcomp
or
mov
repz
pusha
and
xchg
stos
popf
sub
daa
in
push
ror
insl
and
xor
push
repnz
xor
add
xor
mov
mov
fistl
or
ret
xor
hlt
cmpsl
push
push
dec
push
fsubs
pop
shrb
lods
iret
and
or
mov
xchg
sub
out
es
pop
pop
idivb
adc
insl
dec
dec
inc
adc
mov
pop
out
push
div
mov
and
or
jne
lcall
ljmp
sbb
loop
sbb
testl
jge
mov
fists
testl
xchg
bound
or
mov
mov
xchg
add
insb
mull
push
cmp
add
cltd
and
xchg
add
jns
xchg
sbb
adc
push
lea
cmp
lret
jns
push
pop
icebp
jno
es
arpl
sub
jmp
xchg
scas
cmp
insb
iret
push
aam
inc
data16
ds
and
xchg
lret
xchg
stc
sbb
xor
jnp
sbb
hlt
mov
repz
shr
repz
dec
mull
jo
and
scas
out
add
sbb
adc
jge
xchg
sub
sahf
xchg
repz
nop
and
pop
sbb
xchg
into
gs
call
xor
mov
push
lock
push
and
leave
pusha
shll
shll
xor
lds
add
adc
adc
out
pusha
push
xor
int3
das
mov
or
push
sub
inc
out
sbb
rcrl
mov
aas
scas
repnz
in
inc
sti
lods
add
adc
lea
jnp
movsb
imul
clc
xchg
jae
inc
or
sub
mov
movl
jle
fdivrs
sbb
jb
and
scas
xor
dec
scas
mov
add
jecxz
jnp
sub
jp
leave
orb
mov
mov
test
sub
data16
mov
pop
mov
mov
jnp
xor
xabort
jb
loope
push
dec
ret
and
cld
jmp
stos
ret
sarb
dec
mov
roll
nop
cltd
sbb
and
lret
notl
sub
leave
cmpsl
mov
pusha
int3
xchg
sahf
pushf
out
mov
test
jb
jle
jmp
popf
dec
inc
sbb
pop
sub
ret
sub
loop
cmp
push
add
push
xor
push
mov
adc
push
or
into
dec
jl
into
outsl
push
cwtl
inc
push
dec
ljmp
jge
arpl
iret
push
and
aad
data16
jl
scas
mov
in
loope
jo
xchg
xchg
lcall
and
cmp
iret
mov
pop
mov
xchg
inc
imul
mov
fidivrs
inc
movsl
fmul
mov
push
jmp
rorl
shlb
cmpsl
loop
lahf
add
cmp
scas
negb
jnp
and
addr16
es
push
xor
jne
or
sbb
pop
das
test
in
movsb
cmp
not
mov
inc
push
sbb
cmpsb
loop
mov
push
cli
cmc
or
push
mov
pop
pop
and
add
or
aad
push
das
sarl
arpl
or
or
aaa
test
or
sbb
sbb
addl
xchg
hlt
arpl
popf
inc
in
xchg
sub
in
mov
cmpsl
ds
sub
dec
mov
xor
int
jns
out
inc
data16
lcall
pop
mov
sub
pop
push
sti
cltd
inc
mov
jmp
les
sbb
pop
mov
xchg
data16
mov
outsb
out
jecxz
mov
sbb
xlat
outsb
and
ret
pop
sahf
push
popf
pusha
out
icebp
std
inc
push
subl
movsl
mov
inc
xor
inc
loopne
test
jno
jge
jmp
sarl
insb
cli
stos
mov
cmp
shlb
pushf
mov
sub
adc
ds
ret
popf
mov
adc
stos
inc
insl
push
scas
out
loope
popa
scas
inc
test
jo
cmp
lahf
sahf
mov
rol
adc
movsl
mov
inc
idiv
xchg
mov
cwtl
test
lret
push
rolb
aad
shlb
xchg
jne
jp
in
add
repnz
in
lods
test
fs
push
sub
xlat
xchg
xor
pop
mov
rcrl
cld
mov
in
testb
cmp
mov
imul
jns
dec
cs
jns
cmp
push
xor
cld
mov
xor
outsl
push
adc
enter
add
lods
xchg
sub
inc
int3
ja
push
xchg
sbb
fdivr
push
pop
mov
mov
ljmp
inc
fiadds
ret
jle
dec
and
mov
and
mov
cmc
out
mov
mov
lahf
leave
cmpsl
jge
push
mov
lock
mov
pop
rcr
push
loopne
daa
adc
and
cld
pop
ss
dec
jle
mov
cltd
sbb
xchg
lahf
iret
scas
jge
cmp
lea
pop
dec
add
clc
xor
sub
xor
scas
pop
imul
sbb
adc
es
mov
int
mov
dec
mov
faddp
pop
in
mov
xchg
jle
sahf
subl
dec
imul
dec
leave
aaa
cmp
jns
cmp
or
dec
mov
inc
or
out
sub
pop
cwtl
xsha1
cmpsb
or
mov
lret
mov
das
mov
cmp
push
fs
addl
sbb
push
pop
scas
mov
mov
int3
fisttpl
push
jp
push
ljmp
jno
sub
xchg
and
sbb
daa
xchg
ss
dec
lret
bound
notl
cmpsl
sub
adcb
insl
add
xchg
xchg
cld
dec
xchg
xchg
sub
xor
outsb
sub
fidivl
sub
outsb
and
lahf
pop
hlt
lret
mov
movsb
les
pop
sbb
xor
jle
les
add
inc
cwtl
push
jne
push
xor
mov
mov
mov
mov
leave
pause
je
and
or
ds
or
inc
dec
je
cmpsb
push
ret
hlt
movsb
xchg
lret
je
jp
in
mov
lcall
push
mov
pop
add
fidivl
mov
loope
jb
stos
aas
fistpl
cli
leave
jg
insl
cmp
jne
fsts
and
pop
dec
inc
pop
jmp
xchg
scas
into
shlb
jge
das
inc
fisttpl
xchg
insl
inc
inc
or
les
xor
xchg
xchg
jp
ret
out
lret
mov
ret
xlat
fisubrs
xchg
cmp
and
xchg
stc
mov
mov
xchg
xor
data16
mov
jno
lahf
xchg
fisttpl
cli
jnp
icebp
pop
rorb
jg
imul
cwtl
cmpsb
push
les
inc
aas
shlb
data16
pop
pop
out
or
mov
and
jbe
repz
aad
xor
push
xor
inc
xchg
std
inc
mov
arpl
or
hlt
mov
shll
pusha
inc
inc
stos
mov
push
imul
jbe
fbld
rolb
int
lcall
roll
sbb
add
bound
push
jmp
push
xor
scas
jb
loope
iret
jecxz
mov
pop
nop
mov
pop
mov
jmp
mov
dec
mov
orb
or
sub
mov
or
sbb
in
xorb
xchg
xor
subb
mov
pop
cmpl
pop
sbb
xor
out
frstor
or
inc
fsubrl
inc
fisttps
and
mov
mov
scas
pushf
pop
out
int
or
repnz
push
sarb
cmpsb
dec
fwait
inc
pop
int
inc
mov
out
jns
ss
mov
xchg
dec
mov
aam
in
stos
lcall
lret
test
mov
and
dec
hlt
adc
cmpsl
in
fldenv
ja
push
cmp
sub
or
pop
cmp
sub
lahf
jo
test
stc
rolb
mov
dec
pop
popf
mov
pop
sub
pop
rcll
out
sbb
les
loopne
sub
mov
testl
lcall
jo
sbbl
and
lahf
inc
add
pop
adc
push
mov
add
gs
cld
mov
adc
cmpb
insl
data16
and
mov
imul
add
pop
lods
adc
sub
pop
daa
xchg
sub
nop
das
add
scas
mov
inc
sub
push
cs
ret
adc
js
pop
pop
fldenv
leave
mov
pop
leave
mov
xchg
xor
push
movsb
fwait
popa
stos
inc
xchg
test
mov
outsl
mov
pop
jmp
jbe
xchg
call
xchg
stos
aaa
imul
jne
mov
loop
add
fs
outsb
sub
scas
lea
or
lret
gs
sub
out
adcl
jmp
shlb
xchg
sbb
cli
jne
jmp
int3
ficoms
aaa
mov
jne
xor
out
testb
loopne
cld
cmc
jmp
jbe
add
xchg
cwtl
sahf
movsl
addr16
sbb
stos
sbb
push
add
imul
lcall
enter
cwtl
xchg
or
out
scas
xchg
addb
inc
lret
movsb
jmp
movsb
loopne
loopne
mov
add
lcall
xor
pop
jno
dec
inc
rcll
lcall
cmc
adc
sub
arpl
jp
loop
xor
lods
and
jno
cmp
pop
inc
call
adc
xchg
cmpl
or
adc
inc
push
scas
xor
or
and
adc
daa
mov
dec
shl
test
xchg
repnz
stos
xchg
mov
test
lea
js
nop
aad
aad
aad
mov
pop
repz
fbstp
aaa
jno
mov
mov
pop
sarb
xor
pop
cmp
movsl
cli
lahf
or
shr
jns
lret
rcrl
movsb
rorl
ds
pop
mov
jo
jbe
adc
das
and
lret
pop
jecxz
aam
jle
add
mov
xchg
pop
test
xchg
mov
call
cmp
mov
and
pop
sub
sbb
icebp
daa
orl
jg
jg
sbb
pop
fs
mov
jnp
push
bound
arpl
inc
popa
sarb
lcall
mov
cltd
je
or
xor
cli
xlat
ror
call
jns
popf
lods
fildll
xchg
dec
add
xor
or
sarb
mov
pop
push
adc
cmp
push
aaa
mov
pop
mov
stos
sbb
loop
mov
dec
lods
scas
jl
cmp
loop
cmp
shll
lea
icebp
cmp
mov
pop
add
mov
pop
mov
in
and
cmpsl
cs
fcmovne
inc
mov
loop
out
jecxz
outsb
xchg
shrb
mov
mov
sahf
sbbl
sbb
in
xor
sub
insb
cli
cmp
rcl
sub
and
aas
aad
icebp
inc
sbb
cmpsb
push
aad
sub
dec
rclb
ds
hlt
sub
jp
sbb
arpl
frstor
repz
mov
and
xor
dec
mov
inc
xchg
jmp
mov
out
sbb
shrb
sahf
icebp
cmp
shr
lods
sub
push
orl
ror
jle
mov
sahf
cltd
sbb
push
stc
mov
adc
sbb
pop
mov
mov
hlt
mov
movsl
fsts
mov
cmp
lock
sub
cmpsl
push
fisttpl
mov
add
mov
sbb
ja
test
cmp
push
push
sbb
mov
sub
daa
lods
clc
outsl
jbe
shr
ds
inc
mov
test
popa
sub
aas
mov
mov
push
ret
ret
mov
fsubs
or
inc
fimuls
sub
cltd
sahf
fstpl
dec
ss
out
cwtl
adc
leave
leave
jmp
fucomi
insl
push
movsl
jp
xlat
xor
mov
jo
test
popa
sbbl
iret
pop
mov
stc
add
testl
das
add
pusha
leave
fisttps
stos
data16
fdivl
dec
lock
sbb
mov
mov
jo
and
xchg
pop
hlt
jp
loope
outsl
imull
je
orb
loopne
ss
xor
mov
cmp
xor
ret
mov
ds
mov
lds
dec
push
jo
jecxz
leave
fistpll
out
stos
xchg
call
or
jae
push
insb
daa
jmp
inc
add
add
es
mull
rcrl
stos
jo
lret
sub
push
scas
xorl
into
and
outsb
and
push
ficoms
jl
imul
shl
lock
sbb
jp
cmp
lods
lds
jnp
outsb
cmc
or
stc
out
add
orb
mov
scas
leave
call
mov
mov
stos
es
test
pop
push
mov
loop
cmpsb
xchg
jae
inc
lret
addr16
jl
mov
mov
add
mov
push
movsb
ss
dec
pop
jle
andl
hlt
mov
incl
mov
mov
or
aaa
lods
add
jae
lcall
push
and
addr16
inc
jecxz
jns
insb
add
lcall
sub
std
and
shrl
xchg
mov
mov
and
in
jg
mov
insl
stos
cmp
addl
xor
inc
stos
inc
jns
inc
xchg
and
aas
xchg
push
mov
cwtl
out
push
pushl
xchg
cmpsl
clc
rclb
repnz
test
jns
push
out
jmp
sub
mov
cmpsl
mov
pop
rcr
in
lock
cmp
add
arpl
stos
loop
push
cli
call
int
sub
push
lds
stos
daa
adc
bound
jae
xor
andb
dec
imul
imul
cmp
xchg
lods
into
mov
adc
cmp
je
and
cmp
or
inc
js
and
pop
lcall
dec
adc
imul
into
das
adc
fidivrl
je
int3
xor
xchg
dec
pop
push
jecxz
lret
dec
testb
cld
in
outsb
adc
xchg
adc
mov
adc
push
push
and
in
test
icebp
sbb
imul
push
imul
pop
and
dec
movsb
jg
fcoms
dec
imul
daa
xchg
xor
nop
sub
sbb
jnp
scas
dec
mov
pop
dec
mov
inc
test
mov
push
jo
mov
add
movsl
lds
stc
icebp
sub
xchg
aaa
mov
mov
clc
mov
sub
dec
dec
and
and
iret
and
add
or
pushf
lret
mov
xchg
or
push
mov
sbb
mov
flds
scas
mov
xor
xlat
pop
push
push
jno
inc
pop
hlt
jb
jne
out
jl
dec
or
cltd
xchg
aam
jae
mov
xlat
mov
sbb
ja
in
inc
fstpl
or
stc
test
mov
or
pop
push
xchg
adcb
insb
dec
sbb
imul
mov
sbb
mov
stos
in
mov
int
es
idiv
decb
jge
xchg
je
inc
mov
cmp
dec
into
xor
push
out
ljmp
test
cmpsb
cmp
aam
hlt
mov
mov
adc
or
lods
jl
nop
xchg
popa
rcr
adc
jle
das
adc
xor
insl
sbb
adc
mov
mov
pushf
xlat
inc
cmpsl
xchg
dec
flds
xchg
sub
into
sub
xchg
cli
or
dec
or
mov
lret
sbb
stc
pop
mov
call
fldt
std
xchg
loopne,pn
dec
sets
pop
cmp
into
xor
push
push
in
jae
pop
stos
sbb
jb
insl
pop
push
mov
std
cltd
aaa
ss
daa
aad
dec
jne
inc
sahf
xchg
aam
adc
jl
dec
fistpl
subb
dec
fiadds
or
mov
scas
cmp
jle
dec
mov
insl
cmp
and
push
jns
inc
xor
mov
jb
lahf
push
cmpsb
aad
xchg
mov
shl
dec
mov
mov
jmp
scas
inc
and
lea
nop
lods
repz
lret
and
push
jle
into
stos
or
out
popf
out
popf
cmpsl
xchg
sub
xorl
vcomiss
into
mov
jp
xchg
mov
fwait
add
es
or
fwait
sbb
addr16
nop
in
push
ds
cs
jns
into
ret
adc
dec
xchg
push
jo
fstps
or
xchg
pop
mov
lds
inc
test
ret
mov
jb
dec
mov
es
inc
dec
push
das
clc
repz
jmp
dec
cltd
and
stc
and
push
in
lret
cld
or
in
std
pop
movsb
inc
and
mov
hlt
jmp
shlb
pusha
mov
and
inc
cmpsl
nop
add
inc
out
jnp
arpl
pop
test
add
cmpsb
pop
imul
subl
sti
mov
jnp
xlat
test
or
and
mov
inc
dec
mov
cmp
outsb
push
mov
pop
mov
stc
sbb
xchg
or
call
jbe
int
sbb
shr
call
jmp
les
add
jae
mov
lock
lret
pop
mov
dec
inc
mov
jae
xchg
xor
and
test
and
inc
js
icebp
cmp
sti
adc
inc
lods
aas
ja
cltd
cmpsb
jbe
pop
xchg
arpl
jmp
in
pop
ret
push
add
pop
mov
push
mov
push
jl
jp
pop
sbb
xchg
jmp
dec
sbb
mov
aaa
iret
xor
adc
in
add
fsubl
push
shrb
mov
mov
call
shll
iret
or
lret
jns
rep
fimuls
negl
or
xor
fsubrl
sub
enter
mov
into
and
jno
mov
add
cmpsb
or
icebp
fnstcw
pop
mov
imul
sbb
jnp
xchg
stc
call
scas
sub
jl
mov
movsl
pushf
and
cli
mov
pop
es
pop
das
or
xchg
stc
lods
sub
mov
insl
cmp
or
dec
adc
pop
lret
pop
lret
fistpll
jo
pop
das
xchg
div
shrb
idivl
xchg
jns
cmpsl
ret
mov
sbb
lock
and
mov
lret
push
lret
insl
inc
inc
aad
out
flds
cs
test
jae
xor
notl
fadd
or
ret
testl
cmp
lahf
dec
jecxz
les
add
dec
andl
enter
ss
out
int3
scas
inc
jb
adcb
dec
pop
push
jp
push
mov
fwait
repz
add
xor
xchg
inc
aaa
nop
sbb
pop
dec
cmp
sub
add
xor
aam
pop
mov
xor
pop
adc
cmp
loope
inc
cltd
push
lret
ljmp
call
mov
inc
test
fs
mov
inc
outsl
adc
hlt
dec
and
rcrl
xor
pop
js
popf
test
mov
or
cmp
ficoms
aam
mov
mov
fxtract
mov
jbe
jg
push
jnp
push
mov
cmp
push
jmp
or
hlt
mov
test
popa
jo
inc
pop
jmpw
jg
pop
mov
ja
push
mov
dec
movsw
inc
lods
and
out
xchg
mov
fidivl
sahf
mov
lods
loope
dec
cmc
in
adc
cmp
dec
mov
cmpsb
adc
mov
shlb
sub
sbb
leave
cmp
lock
ror
jno
mov
aam
pop
adc
inc
mov
ljmp
inc
adcl
aaa
cmpsb
es
and
in
stos
shl
and
mov
jno
lea
ds
lock
stos
fcoms
les
adc
inc
inc
or
cs
push
xchg
sbb
in
pop
out
lds
xchg
jae
rolb
cli
nop
daa
sub
jo
fmull
fucomp
fistps
push
jg
gs
push
stc
rclb
xor
outsb
loop
push
sbb
xor
mov
cld
loope
ss
adc
icebp
lret
hlt
js
pop
xchg
mov
inc
xchg
inc
test
sbb
dec
lcall
sbb
in
lret
loopne
insl
shlb
imul
aaa
sbb
movsb
out
pusha
shl
pop
pop
movsb
jns
cmpsb
stos
idiv
repz
in
jae
dec
mov
adc
pushf
fdivl
push
cli
xchg
and
jb
xchg
lret
sbb
cli
das
jg
and
mov
sbb
subb
pop
fbld
es
stc
mov
sub
in
gs
jecxz
cmp
adc
xlat
stos
fwait
xor
in
sub
mov
bound
pop
fs
adc
stos
or
sbb
repnz
jmp
mov
dec
jno
repnz
aaa
dec
test
fidivs
movsl
iret
jecxz
or
imul
jno
jae
adc
mov
lcall
sbb
xor
addr16
imull
mov
lods
add
add
adc
out
test
cmp
lret
ljmp
push
jmp
jge
push
jnp
mov
rcrl
xchg
adc
ljmp
dec
outsl
fs
sahf
inc
jle
addr16
push
xor
push
fldl
lahf
sub
arpl
mov
sub
mov
into
or
jecxz
sbb
mov
out
mov
out
inc
fsubr
sub
ds
push
loope
es
aas
or
pop
add
xor
adc
or
xor
test
pop
mov
push
xchg
sbb
pop
dec
pop
cmp
scas
insb
dec
arpl
and
xchg
lahf
lcall
mov
mov
adc
call
push
cmp
sbb
dec
sahf
scas
pshufw
inc
pop
mov
and
or
dec
pop
jge
repz
or
clc
dec
ljmp
lahf
cmpsl
pop
das
inc
mov
inc
sbb
dec
test
mov
cmp
push
adc
or
shrb
sub
xchg
mov
fbstp
push
pop
xor
jle
xchg
mov
popf
fs
sbb
jecxz
add
ret
add
mov
cmpsl
and
push
shl
inc
sub
icebp
mov
jne
jg
loopne
cltd
loop
xchg
sub
clc
scas
mov
js
out
cltd
rcl
push
pop
cmp
pop
fiadds
pop
hlt
and
inc
jnp
js
setp
aas
fidivs
das
fisubs
pop
test
aad
inc
push
popf
jbe
jl
add
es
pusha
or
repz
push
in
sbb
mov
fildll
jbe
adc
fiaddl
mov
mov
pop
mov
xor
cltd
test
sbb
bound
pop
cmp
imul
sub
imul
jne
and
sbb
and
mov
clc
call
xor
data16
sub
dec
test
sti
lret
sbb
mov
or
movsl
imul
pop
pushf
out
xchg
sub
xlat
outsb
adc
push
mulb
iret
cmc
fucomp
es
arpl
call
ljmp
mov
insb
mov
pop
jecxz
xchg
xchg
cmpsb
mov
cmpb
jb
mov
jns
adc
or
lret
sbb
js
es
cltd
fisubrl
cwtl
push
or
testb
or
xlat
cmp
mov
jo
mov
test
cld
pop
mov
stos
and
jno
cmp
fistpll
ret
jle
sbb
dec
int
hlt
out
jbe
push
insb
test
repnz
shrl
out
jne
fidivs
mov
mov
sbb
jnp
mov
or
rcr
mov
iret
xor
xor
pop
mov
jl
adc
sahf
cmpsl
or
cs
push
sbb
jge
xchg
dec
into
lds
xlat
dec
mov
cs
adc
fistpl
and
stc
jge
and
jno
inc
aaa
adc
jnp
mov
punpckhdq
addl
test
into
fdivrl
insb
js
lock
daa
inc
loope
shll
decb
incb
dec
pushf
or
outsb
inc
stos
ds
pop
arpl
inc
add
xchg
mov
or
les
push
imul
xchg
pop
pushf
cli
int
dec
out
dec
fmull
xchg
repnz
mov
jne
sbb
outsb
int
test
ret
pop
test
mov
ds
mov
mov
jne
pop
mov
pop
lods
data16
sub
je
inc
cwtl
push
xchg
sahf
jae
dec
inc
decb
decb
aaa
lahf
or
and
lods
jmp
int
cld
pop
mov
cld
push
jo
cmpsl
sbb
pop
jno
lock
mov
loope
fisttpl
ret
ja
mov
dec
popa
or
sti
adc
movsb
mov
mov
ret
je
pop
fwait
dec
out
popf
push
out
stos
not
pop
push
sbb
jae
pop
loopne
cmp
stos
pop
adc
add
sbbb
sub
push
sbb
xchg
daa
movsl
xchg
xor
jp
pop
nop
and
out
push
cmp
les
loope
push
rcrb
inc
push
dec
jns
imul
gs
mov
fists
inc
int3
sub
mov
outsl
pusha
xchg
inc
and
je
movsb
inc
push
or
inc
imul
add
mov
push
lock
mov
xor
lods
hlt
pop
mov
ret
push
sub
adc
mov
add
xor
imul
xchg
aam
pop
cwtl
int
inc
js
inc
ret
fldl
adc
fidivrl
xchg
push
cmp
mov
je
std
adc
inc
int
fdivrp
or
imul
xor
pop
and
lock
insl
add
adc
lock
push
popf
fwait
pusha
adc
jle
in
xchg
jnp
outsb
jno
sub
fwait
inc
lea
mov
add
lods
stos
sbb
test
sub
repnz
les
mov
sti
xchg
mov
in
sub
inc
xchg
orb
daa
lea
insl
inc
cmpsb
or
dec
mov
mov
push
into
repz
mov
sbb
inc
jp
scas
das
gs
mov
mov
sbb
mov
or
inc
ret
data16
test
out
lods
cmc
cmp
data16
xchg
pop
fisttpl
insl
call
test
sbb
sahf
sbb
cltd
imul
stc
and
jb
lds
shlb
test
fstps
cmp
xchg
cmp
jne
fsubrs
fs
fbld
pop
js
sub
stos
and
scas
jge
or
or
mov
sub
shll
movsl
sbb
fdivl
jno
lcall
test
add
daa
push
fisubs
and
mov
scas
popf
mov
pusha
cmpl
mov
insb
jle
push
lret
aam
insl
mov
sbb
pop
popf
cmpsl
scas
sar
clc
sahf
push
enter
iret
xor
rcrb
psrlq
outsb
xor
jmp
sbb
mov
in
int
jecxz
je
testb
add
cmp
mov
push
mov
pop
sub
mov
cmp
in
push
push
or
daa
je
pushf
jb
push
imul
add
std
mov
xor
cltd
or
sub
out
xchg
sub
cmpsl
inc
js
sub
sbb
mov
test
pop
sahf
jge
imulb
inc
mov
cmp
out
sbb
mov
leave
sub
stc
aam
dec
or
test
inc
imul
aam
jno
xchg
mov
xor
das
imulb
int
lds
addr16
int
sbb
lock
lds
mov
test
jb
xor
lds
dec
sbb
pop
and
aad
negl
xchg
mov
or
addb
cwtl
and
mov
outsl
and
jae
js
std
loope
xchg
add
xchg
sbb
pop
push
leave
lcall
push
scas
sbb
nop
pop
addr16
bnd
test
incl
push
sahf
add
xchg
or
xchg
or
push
lret
sub
into
push
dec
dec
cltd
pop
loopne
sarl
repz
mov
xchg
sub
jecxz
loope
call
data16
xchg
insl
cwtl
mov
jl
sbb
movsl
adc
xchg
dec
lods
mov
jge
sbbl
mov
mov
and
dec
aad
cmp
adc
dec
lods
stos
cmp
push
scas
inc
ss
cli
test
leave
push
push
cltd
and
out
leave
push
mov
lods
mov
pop
xor
test
stos
lods
jge
sub
push
push
je
jne
mov
pop
cmc
and
pop
repz
aam
sbb
adc
xor
cwtl
mov
in
icebp
cwtl
stos
aas
mov
in
rcll
int3
ret
jg
push
imul
push
int3
pop
enter
lea
out
popa
clc
loopne
clc
adc
enter
xchg
enter
addr16
xor
or
bnd
xor
shlb
push
ret
jle
outsb
xor
vmovlpd
sarb
jmp
mov
cmc
mov
mov
mov
sbb
mov
or
inc
cmpsl
pop
dec
inc
lods
xchg
jle
lods
pushf
mov
mov
in
loop
sub
adc
push
cmp
loopne
mov
inc
stos
add
sbb
dec
adcl
aam
sub
dec
push
mov
sub
addr16
lods
mov
sarb
andl
sub
int
inc
enter
je
xchg
ja
and
mov
xor
js
loopne
in
nop
pop
cli
orl
lcall
mov
mov
push
sbb
xchg
sub
cli
fbstp
pop
inc
mov
mov
dec
adc
jg
gs
cs
in
xor
push
mov
jne
fs
push
jno
cltd
sub
mov
mov
and
popf
add
push
jecxz
fs
push
jge
adcb
rcll
cwtl
insb
add
popf
pop
pop
adc
mov
xor
std
sub
mov
jg
stos
push
in
gs
xor
dec
out
cmp
mov
insl
mov
je
jle
push
push
std
mov
push
in
adc
aam
pushf
subl
and
ljmp
sbb
shr
mov
cwtl
jp
cmp
xor
aaa
add
aaa
fldenv
xchg
aam
mov
mov
mov
popl
test
loope
fbld
jnp
lret
xor
pusha
and
fmull
cmpsl
or
and
mov
mov
dec
and
adc
fucomi
repz
stos
push
mov
dec
rolb
aas
add
loop
sahf
jo
cs
fbld
mov
mov
jae
fildl
mov
mov
shlb
in
orps
mov
decb
mov
jl
push
mov
fisubrs
push
push
ljmp
scas
inc
mov
jno
rcrl
adc
jb
outsl
or
in
pop
xchg
mov
loope
adc
shrl
xchg
int3
lock
pop
jbe
lret
push
add
push
push
dec
pop
movsb
repnz
mov
xchg
jle
aaa
into
mov
pop
lret
or
pusha
into
mov
mov
mov
mov
inc
das
jbe
iret
mov
dec
divb
fdivrs
inc
inc
xor
add
inc
and
scas
mov
cmpl
int
popf
mov
into
inc
arpl
ss
xor
mov
repz
les
dec
cs
cmp
cmp
xchg
add
jbe
je
out
xor
and
dec
or
gs
pop
jb
mov
and
scas
out
or
call
or
pop
jmp
xor
in
xor
add
inc
nop
cmp
repz
add
cmpsl
sub
mov
rcrl
repz
repnz
cmp
lods
jb
jmp
test
xor
loope
or
cmc
mov
mov
jge
fwait
xor
pop
mov
cmp
cmp
outsb
outsl
push
loopne
inc
shlb
add
jb
or
xchg
cmp
js
mov
ret
sub
shr
sub
mov
mov
fstps
loopne
and
cmp
bound
test
jmp
nop
inc
sbb
lods
in
inc
nop
into
push
outsb
add
fimuls
push
and
and
jecxz
imul
sub
stc
nop
pop
cltd
sub
xor
jecxz
test
sbb
jp
mov
popa
or
ds
push
jmp
push
and
adc
scas
mov
sbb
dec
add
movsl
lods
in
lret
bound
push
xchg
cmp
inc
sbb
inc
repz
and
stc
mov
cld
sti
xor
insb
cltd
aad
movsb
int
sub
xchg
jo
sbb
in
fists
push
ret
rorb
dec
push
rol
pop
imul
sub
in
and
cvttps2pi
xorb
cld
xchg
push
push
mov
subl
leave
inc
shr
push
faddl
sti
repz
rcrb
sbb
add
ja
xchg
rcrb
cmc
dec
bnd
sub
xchg
popf
sbb
lock
sbb
enter
shlb
xlat
into
jae
stos
and
xchg
les
jnp
sub
adc
mov
lcall
cmp
pop
sbb
sahf
mov
cmpsb
sbb
or
imul
inc
xchg
jle
ljmp
jno
mov
not
fxtract
push
mov
and
mov
mov
addr16
jne
mov
push
xor
xchg
fcomps
jle
jl
js
or
pop
repz
cli
jno
daa
in
shlb
fnstsw
inc
pop
cmp
test
sti
enter
cli
loope
out
daa
pop
cmp
sbbl
jbe
mov
loopne
js
test
add
or
loopne
jg
popf
pop
cmpsl
mov
lret
xor
out
mov
aam
pop
mov
mov
je
and
cmp
jmp
mov
es
lea
cld
or
or
jp
call
lea
xchg
in
and
xchg
pop
insl
sub
lea
jne
add
rol
xlat
scas
jb
xorl
addr16
add
cmpsl
sub
jno
xchg
fcomip
and
jb
fdivs
ja
out
mov
add
xor
in
insb
data16
sahf
add
test
outsl
cmpsl
ret
into
xchg
vdivps
dec
jecxz
mov
cmc
xor
xchg
add
push
jecxz
cmpsb
iret
test
in
jl
dec
out
loope
js
dec
aas
mov
fs
push
in
leave
addr16
fcomps
stos
add
xchg
call
aad
addr16
mov
adc
aam
xor
inc
sahf
test
push
aam
push
push
xorb
cmp
lcall
xchg
icebp
pop
movsb
mov
or
cmp
scas
aas
sahf
cmp
in
fsts
int3
cmp
mov
ret
or
jl
mov
inc
nop
pop
jae
push
leave
inc
pop
pop
cmovbe
and
or
loopne
add
aam
sbb
sub
repz
sub
shll
add
and
jge
clc
loope
stos
gs
repnz
ss
icebp
int3
addr16
filds
int3
and
stc
adc
mov
push
out
cmp
ficoms
mov
shrl
or
cld
sbb
nop
gs
into
sbb
popf
mov
mov
mov
movsl
adc
rclb
xchg
addr16
sahf
stos
loope
add
lods
out
decl
sbb
cmpsl
xchg
cmp
add
loope
mov
sahf
add
popf
jo
adc
ret
dec
mov
cltd
mov
pop
aam
push
and
adc
mov
or
aas
setno
push
loop
lcall
shlb
jns
xchg
mov
mov
test
pop
pop
mov
mov
in
xchg
clc
dec
sbb
pop
das
push
shll
ret
jecxz
lods
inc
sbb
imul
pcmpeqd
mov
xchg
jmp
jne
and
fcoms
hlt
lret
mov
iret
cmpsb
jne
shll
jb
and
push
push
mov
sub
lds
idiv
pop
insl
outsl
out
cmp
test
scas
xchg
xchg
rcrl
xlat
sub
sub
popa
jmp
out
outsl
stc
or
negb
jb
inc
push
mov
aam
pop
stos
outsb
xchg
sub
xor
mov
popf
and
popfw
or
stos
lods
mov
cs
jge
cmp
out
xor
aam
and
repz
pop
cmpsb
pop
xchg
sub
sub
les
cmpsl
xchg
jmp
pop
cmpl
add
sbb
xchg
andl
mov
cmp
jne
jge
rcrb
adc
jle
dec
push
or
ss
pop
es
dec
fwait
repz
sbb
and
data16
cmp
clc
cwtl
mov
out
mov
aad
fldl
and
pusha
shlb
std
movlps
fwait
addr16
int
rcrl
rcll
xor
sub
jle
xorb
sub
mov
xchg
sub
jno
dec
inc
push
mov
xor
or
mov
pop
jge
fwait
mov
fiadds
popf
xorl
adc
ret
add
scas
xor
sbb
and
sti
cli
pushf
sub
xor
iret
mov
and
or
fistl
sub
lcall
leave
pop
subl
inc
pusha
out
adc
insl
sub
pop
or
dec
xor
into
xchg
pop
iret
adc
mov
stc
in
sub
and
push
xor
jno
push
mov
shll
lahf
jae
scas
dec
les
es
dec
test
ss
fidivrl
lods
mov
pop
repz
jne
addb
pop
dec
fadds
lret
xchg
rolb
pusha
fistpl
lods
or
lret
bound
pop
jmp
lret
mov
movsb
jae
bound
cmp
pushf
or
lret
mov
fwait
cwtl
inc
ljmp
lock
add
jge
daa
scas
dec
stc
sbbb
pop
jg
cmp
push
stos
cld
pop
pop
testb
mov
mov
mov
sub
pop
inc
lret
pop
xorb
sub
ret
repz
mov
pop
enter
mov
lea
arpl
and
fdivl
punpcklbw
lahf
xchg
jl
jp
int
addr16
dec
mov
cld
stos
dec
scas
or
stos
cmp
xchg
push
sbb
cmp
fwait
sub
inc
adc
add
xor
cmpsb
in
mov
xorl
pusha
iret
xchg
dec
mov
or
push
push
out
aad
mov
sbb
dec
push
imul
sub
ljmp
pop
sahf
stos
aad
addb
jge
lock
pop
repnz
mov
push
xchg
mov
dec
rcl
fldenv
out
fadds
test
jl
fcmovb
pop
or
xchg
test
das
mov
into
cmpsb
aam
nop
sahf
test
movsl
ss
push
push
cmp
aaa
fcmovnbe
scas
aaa
rcr
mov
mov
cmp
test
mov
xchg
fistpll
cmp
mov
shl
pop
sahf
repnz
push
cmp
mov
xor
fistps
jl
cmp
ror
shrb
push
hlt
jbe
es
idivl
fidivrl
add
inc
jnp
or
add
sub
mov
popa
jnp
adc
cwtl
inc
popa
sbb
and
ret
insl
aas
pop
pop
outsb
and
adc
fcomp
scas
pusha
in
sbb
jle
jnp
xor
test
mov
sahf
test
pop
sbb
adc
jnp
arpl
jne
out
adc
test
in
inc
enter
xor
pop
rcrb
add
imul
jae
inc
cli
cmp
mov
xchg
mov
jae
dec
add
jbe
and
pusha
jae
pushf
mov
sar
andb
mov
ror
or
mov
push
clc
and
iret
cmp
ret
mov
pop
sub
dec
jecxz
insl
test
sbbb
pop
mov
shl
sub
ljmp
in
mov
or
movl
pop
mov
scas
cmp
sub
xor
fxch
push
cld
subb
pusha
divl
test
popa
jmp
bnd
mov
push
lock
rcrl
lods
mov
pusha
sub
lock
jb
and
ficoml
lods
sbbb
scas
xchg
jne
lret
out
xor
test
mov
mov
jo
xor
arpl
cmpsl
sub
pusha
sub
pop
xor
push
mov
call
sbb
jp
lret
xor
adc
xchg
adc
pushf
cmp
xor
push
sbb
mov
mov
andb
mov
mov
adc
stos
cmpb
scas
test
jge
dec
pop
dec
mov
cli
xchg
outsb
fsub
pop
mov
insl
into
mov
ja
lock
movsb
lods
jno
jbe
jnp
in
sub
cmp
mov
out
mov
shlb
sub
out
ret
idivl
rcr
dec
pop
lret
sti
or
push
inc
pop
jae
js
cvtdq2ps
and
std
ds
bound
mov
fnstsw
rclb
test
enter
shlb
stos
popa
mov
ja
or
sub
lods
mov
adc
push
xchg
adc
mov
pop
sub
loope
fwait
scas
cmpsb
add
outsb
lods
pusha
sbb
imul
repnz
inc
or
fcmovu
add
fsubs
int3
sub
inc
jmp
or
cld
dec
xor
mov
jb
mov
push
je
jae
dec
xchg
fdivrp
lret
ja
movsb
in
jns
into
imul
inc
jnp
push
lods
gs
jp
mov
sub
dec
stc
push
cld
mov
stos
daa
jmp
sub
pop
cwtl
adc
mov
pop
outsb
xor
jns
in
mov
daa
or
add
push
inc
shll
add
or
lds
cmpsl
outsl
inc
pop
cmp
inc
stc
push
inc
lods
gs
xchg
jne
inc
aas
inc
dec
or
adc
sub
rorl
push
js
insb
add
sbb
add
mov
add
repnz
jp
popa
adc
sbb
mov
or
dec
lock
sahf
and
pushf
cli
insb
fs
mov
clc
rcr
xchg
xor
clc
js
into
xchg
pop
fwait
das
or
and
outsb
sbb
fxch
inc
mov
arpl
fidivrl
in
lds
mov
faddl
inc
bound
jmp
pop
adc
out
fnstenv
xchg
pop
popa
cmp
testl
movsl
cmp
sarb
std
aas
shlb
mov
aam
pop
test
rcrl
mov
push
xchg
mov
dec
xlat
movsb
and
cmp
fildl
pop
adc
fstpt
clc
loope
adc
xchg
int3
mov
aaa
dec
jmp
fsubs
sahf
aad
or
scas
cmp
xor
or
jl
xchg
adc
sbb
or
rcr
das
ljmp
jp
adc
adc
jmp
add
imul
insl
inc
add
pop
jae
hlt
pop
mov
sarl
iret
fstpl
gs
sub
push
test
pop
repnz
mov
outsb
cmpb
xchg
inc
cmp
andb
ror
fiaddl
mov
adc
test
ss
dec
jecxz
push
jge
inc
cmp
lods
imul
nop
out
pop
into
test
mov
dec
in
jge
jbe
cs
sbb
fsubrl
mov
mov
push
adc
cmpb
dec
out
gs
insl
fstpt
jnp
adc
clc
sbbb
daa
int
test
loope
es
xor
mov
and
inc
repz
clc
fsubr
add
fwait
clc
push
jae
test
cmpsb
dec
repz
mov
mov
inc
cmpsl
ljmp
dec
sub
in
dec
shll
in
into
gs
fdivl
sarl
test
or
jb
and
cmp
sbb
imul
mov
jge
mulb
cwtl
out
pop
cmp
int3
arpl
pop
ljmp
test
fwait
cmp
sub
dec
pop
bound
pop
pop
cmp
adc
ss
jp
xor
add
xor
imulb
jne
scas
mov
shrb
cs
mov
aaa
mov
les
push
sub
aam
pop
inc
mov
xorl
inc
cli
jecxz
push
pop
lea
push
and
or
scas
test
or
sub
dec
mov
into
cmpsb
ds
sub
loopne
add
lock
int
inc
adc
gs
mov
int3
scas
pop
inc
push
push
jge
push
ret
outsl
jno
shlb
dec
out
dec
inc
aad
jo
jne
mov
cmp
or
cmp
rorb
pop
lret
lret
rcll
inc
cli
popf
insl
or
and
jne
mov
out
dec
cltd
mov
pavgw
rcll
lret
pop
arpl
mov
ret
mov
sbb
mov
fists
sbb
jb
sub
or
add
imul
aaa
sbb
pop
jge
add
popa
sub
outsl
or
negl
test
ja
mov
push
mov
orb
in
xor
int
out
in
pop
dec
shrl
fcomps
sub
ja
pop
xchg
mov
int
add
outsl
adc
cmp
inc
fwait
sub
or
daa
pop
adc
fidivl
mov
jne
push
loop
push
push
sti
mov
push
stos
jo
mov
leave
xchg
movsl
orl
mov
sar
xchg
imul
in
pop
dec
mov
cltd
xor
mov
mov
and
lret
mov
dec
in
fnstcw
xchg
in
add
push
push
pop
and
adc
int
icebp
js
dec
data16
mov
sarl
and
or
xchg
loope
das
xchg
pop
ja
es
dec
addr16
jmp
push
mov
jecxz
xlat
icebp
mov
inc
sbb
xlat
jae
sti
in
jge
adc
nop
sbb
jae
shll
enter
jmp
aad
in
mov
adc
push
xor
add
sub
pop
dec
and
mov
xchg
aam
popf
ret
dec
mov
mov
inc
fwait
inc
cld
test
mov
jp
jge
cmc
fwait
setle
mov
call
inc
pusha
jle
stos
sub
mov
cld
outsb
fisttps
sub
data16
jno
cmpsb
gs
inc
fildll
pop
popa
testb
cltd
adc
inc
and
or
iret
cli
pop
xor
xchg
push
lds
sti
mov
rcl
inc
mov
pop
in
sub
sahf
xor
repnz
jo
rorl
and
cmp
push
xchg
popf
xchg
insb
mov
ficoms
push
jmp
dec
gs
jo
jb
dec
dec
cmpsb
jg
fnstenv
push
xchg
jb
adc
in
lcall
sti
in
in
inc
lret
or
cmp
sbb
inc
push
jecxz
ja
ja
or
movsl
lds
leave
call
dec
arpl
stc
mov
add
xchg
mov
test
loopne
addr16
mov
xor
xlat
mov
in
sbb
cmc
add
daa
jnp
cltd
add
xchg
sub
cwtl
lock
lahf
scas
sbb
or
add
icebp
mov
jbe
dec
push
mov
pop
push
adc
frstor
lcall
fidivl
cmp
arpl
insb
push
inc
mov
push
and
xchg
xor
movsl
cmp
outsb
pop
jo
enter
cmc
adc
push
push
or
push
push
xchg
add
jnp
aam
cwtl
xchg
mov
jge
xor
inc
adcb
or
adcl
add
or
fldenv
xor
adcb
sub
adcl
pop
sub
xchg
outsl
rorl
enter
push
fdivrl
bound
int
mov
fnstcw
inc
shl
ja
lods
decb
or
in
mov
f2xm1
sbb
test
push
sub
je
dec
out
xrelease
int3
sub
pop
mov
fisubs
add
xchg
xor
push
jb,pn
sbb
nop
ljmp
mov
mov
mov
push
add
dec
and
or
sub
lahf
stos
loop
push
data16
shrl
mov
cltd
and
leave
lea
xor
and
xor
adc
or
ds
pop
jmp
mov
insl
in
daa
dec
pop
jbe
imul
jbe
pop
mov
fistpll
scas
add
fwait
loop
fmul
or
jb
adc
mov
and
sub
sahf
xor
cmp
mov
lea
mov
lcall
inc
ret
loop
lds
stos
push
add
lret
lds
adc
outsl
ljmp
icebp
mov
cmp
and
shlb
out
ja
out
sub
add
jno
lahf
sbbl
es
push
cmp
xlat
and
std
fnstcw
adc
jge
xor
mov
inc
loop
or
inc
push
test
adc
sub
cmp
jge
and
leave
addr16
push
mov
mov
rcll
sbb
cs
imul
out
dec
pop
sahf
inc
mov
dec
push
orl
pop
push
fidivrs
sarb
push
jmp
pop
cs
pop
test
into
and
xchg
cpuid
adcb
daa
shl
mov
sub
out
test
sbb
pop
subl
into
pop
inc
dec
out
imul
out
or
lods
pop
inc
sbb
ret
inc
xlat
hlt
xor
out
das
mov
mov
pop
push
in
pusha
sbb
test
push
ljmp
xor
push
xor
lds
cmp
jno
ljmp
sahf
nop
dec
add
dec
rorb
scas
cmp
popf
testb
add
sbb
jns
popa
aas
mov
sub
jmp
and
adc
test
aaa
jno
imul
dec
jg
insl
inc
push
lahf
lods
gs
or
mov
inc
adc
pop
cmp
push
repz
mov
dec
adc
rclb
and
mov
mov
push
jno
out
dec
mov
cmp
aam
dec
gs
inc
xchg
out
in
sbb
sub
dec
cwtl
aaa
xlat
lahf
lret
and
mov
jmp
mov
cli
adc
call
mov
push
fdivr
rcrb
mov
adc
push
mov
or
cmp
pop
cltd
es
push
dec
pusha
inc
sub
and
xor
imul
inc
es
pop
inc
sahf
inc
ja
nop
das
xchg
xor
ja
xor
jb
mov
add
hlt
mov
dec
dec
adc
incb
popa
sub
jno
pop
in
movsb
scas
xchg
aaa
lods
dec
loope
cmp
orb
pop
loopne
inc
ficomps
andb
ja
mov
imul
test
addr16
aam
cld
hlt
iret
roll
xchg
cwtl
and
mov
mov
xlat
repz
mov
out
mov
imul
sbb
cmp
mov
pop
push
push
adc
movups
mov
js
xor
popf
jo
lods
or
xchg
fsubs
pop
fwait
push
icebp
xor
lret
jnp
sbb
dec
jl
cmp
pusha
cmp
cmp
sub
adc
add
adc
and
lock
or
test
and
fsts
movsl
in
lcall
xor
and
dec
repnz
jns,pt
dec
or
dec
std
jmp
dec
push
xchg
into
gs
mov
adc
jbe
adc
std
xchg
in
ret
adc
leave
fildll
mov
fsubrl
mov
mov
fs
arpl
dec
repnz
int3
imul
pop
xchg
test
dec
sarl
fucomip
ds
cmp
mov
fistpll
das
xchg
into
gs
lret
jne
xor
fwait
xchg
outsl
lock
jns
fistpl
imul
shlb
mov
es
inc
adc
xchg
sub
cmpsb
cmp
add
xlat
add
sar
and
pop
leave
push
push
out
gs
fistpll
jno
and
adc
pop
andl
and
sub
data16
pop
hlt
xlat
pop
incb
mov
gs
mov
lahf
dec
adc
mov
push
aas
xchg
aaa
aad
clc
jne
inc
xor
movsl
arpl
aam
cmp
push
int
dec
and
out
xchg
push
ds
mov
fcoms
mov
aam
std
lret
adc
pop
outsb
cs
mov
fnstcw
or
nop
icebp
mov
jnp
mov
lret
mov
je
lods
mov
pop
stc
pop
scas
sub
cmp
test
into
cltd
mov
out
mov
bound
mov
cmp
xchg
mov
pop
std
mov
loope
lds
add
mov
les
mov
add
add
xchg
test
aas
imul
adc
aam
xchg
and
call
das
pop
dec
fists
test
xor
pop
mov
addl
movsb
cmp
les
mov
decl
xchg
xchg
xchg
sub
push
imulb
popf
mov
test
rcrb
leave
shr
lret
and
push
test
popf
lret
jno
outsl
int3
jg
and
ficoms
cwtl
xchg
lods
lock
imul
sub
pop
and
mov
mov
mov
adc
sti
inc
js
and
lahf
cltd
or
xchg
or
xchg
mov
push
notb
mov
add
ret
mov
movsb
sbb
test
xor
push
xor
das
rcrl
and
sub
xchg
xor
sbb
das
test
jle
xchg
iret
test
jle
lods
sub
hlt
lret
ret
pop
sahf
hlt
xor
inc
fstps
push
dec
ja
imul
leave
call
ret
cmc
fisubs
mov
shll
xchg
loop
in
jmp
and
xchg
jl
xchg
sub
sahf
sbb
mov
incb
test
daa
xchg
cltd
scas
inc
or
inc
jb
mov
xchg
and
sbb
mov
mov
jb
lret
or
and
sbb
inc
inc
push
cmpsb
cwtl
pushf
ja
jp
xchg
and
jno
inc
add
xlat
test
mov
adc
push
iret
nop
clc
mov
and
loope
and
push
jae
dec
or
lret
sub
cmp
lret
cld
pop
cmp
icebp
out
fisttpll
inc
test
mov
lods
repnz
xchg
mov
lret
insb
jp
movsl
sub
push
jmp
sbb
shlb
dec
cmp
icebp
cmp
fwait
dec
out
lock
cmp
mov
in
clc
fdivr
lcall
push
leave
add
nop
pop
jb
pop
pop
xlat
loop
mov
add
cld
push
push
mov
dec
lahf
xorb
scas
cli
ret
inc
int
add
std
sub
push
pusha
mov
rorb
mov
int
test
xchg
loop
paddw
das
stos
in
pusha
movsb
mov
jmp
ljmp
pop
test
fs
sub
orl
pop
imul
cmpsl
cmp
push
mov
dec
xchg
mov
int
daa
or
and
jmp
adc
test
lahf
mov
pop
sub
stos
mov
minps
cmp
in
cmp
xor
rcrl
jnp
inc
cmpsb
mov
in
sub
sbb
add
and
mov
imul
lret
fnsave
shll
adc
mov
xor
xor
rcll
in
aas
aaa
jbe
fisttpl
or
adc
lahf
mov
xchg
cli
mov
test
adc
sub
push
outsl
outsl
call
int3
loopne
adc
fwait
inc
iret
data16
jmp
in
jg
leave
pop
mov
fdivl
cs
xorb
sarl
data16
dec
mov
cmp
out
push
adc
jb
and
jbe
jnp
pushf
test
jl
scas
int
sub
fildl
push
std
pop
icebp
out
push
stc
or
adc
addl
dec
pop
cld
xor
test
sbb
incb
inc
das
test
mov
push
ljmp
jnp
push
jnp
lds
leave
and
std
scas
adc
or
xchg
push
icebp
fldl
dec
fs
gs
imul
inc
xchg
adc
jmp
loop
sub
or
xor
xchg
jns
adc
stos
in
scas
and
fcmovnbe
out
add
sbb
jo
loopne
xor
mov
fadds
clc
or
popf
push
ljmp
addr16
mov
cmc
push
adcl
xchg
das
imul
mov
add
in
dec
dec
inc
mov
ds
pop
or
shl
inc
daa
outsl
jb
sub
lods
inc
loop
push
adc
inc
fstpl
fisubrl
mov
mov
pop
sbb
xchg
fldenv
cwtl
mov
or
pop
cmp
insl
add
mov
enter
adcl
loopne
sub
mov
jo
sahf
movsb
cmp
cmp
jge
lea
hlt
mov
or
pop
cmp
cmp
mov
xor
xor
js
mov
mov
in
inc
jae
ret
ss
nop
je
rclb
fdivs
icebp
mov
shl
ret
pop
in
cmp
es
jo
jnp
data16
pop
add
adc
popa
mov
call
test
xchg
dec
xchg
pop
aaa
adc
outsl
dec
loop
jl
lods
add
testl
push
movsl
cmp
pop
enter
lock
lea
and
pop
xor
rclb
mov
ret
loopne
pop
xchg
inc
scas
mov
leave
jbe
lds
int3
fidivs
aas
ror
add
add
iret
jae
push
adc
mov
push
jmp
or
out
icebp
pop
test
rcrl
popa
out
and
mov
inc
mov
int
lds
cmp
mov
mov
int
mov
push
test
mov
repnz
jle
dec
xchg
lret
les
xor
dec
inc
mov
mov
cmpsb
pop
icebp
xlat
sbb
push
dec
loop
xchg
xor
in
and
hlt
push
sub
enter
fnstcw
cs
dec
or
notl
sbb
int3
cld
sbbb
pop
icebp
inc
inc
push
push
loopne
js
lcall
out
cmp
pop
xor
std
or
inc
arpl
jle
add
aam
inc
inc
adc
cmpsl
aas
pushf
jge
jecxz
or
push
fldl
and
jge
sbb
testl
insb
lds
mov
xor
cmp
out
fwait
loop
sbb
cmp
je
call
inc
loopne
arpl
sbb
mov
aaa
xchg
jmp
dec
and
adc
xlat
outsb
pop
xor
jecxz
faddl
mov
jbe
out
mov
mov
mov
jae
dec
mov
sbb
enter
add
mov
inc
divb
cwtl
add
xchg
enter
pop
or
in
sub
int
in
sahf
xor
dec
outsb
push
xor
xchg
or
cmp
orl
and
lahf
dec
inc
dec
dec
aas
jecxz
jge
push
sub
insb
in
shlb
push
mov
sbb
das
lods
fisubrl
pop
cmpsb
mov
adc
mov
dec
mov
sahf
push
outsl
shrl
push
in
sub
and
and
jae
xchg
out
mov
rcrl
jp
fcompl
push
pop
imul
popf
push
mov
jnp
inc
in
pushl
repnz
sub
pop
shrl
in
push
cmp
sti
call
fidivl
clc
push
push
in
push
fdivl
cld
sub
mov
mov
pop
cmp
push
jo
cmp
div
xchg
movups
dec
mov
mov
nop
and
scas
test
or
lret
decl
sub
pop
in
pop
xchg
mov
fldt
jns
mov
popf
mov
mov
cmpsl
fs
sbb
xchg
mov
orb
shll
xchg
and
into
stc
inc
adc
out
cmpsb
js
and
inc
sub
mov
xor
lea
mov
or
sarl
fcompl
nop
mov
rol
jg
fbstp
mov
pop
popf
das
pop
mov
and
sbb
or
mov
sahf
cmp
shrb
jns
jno
fistps
jae
add
adc
push
sbb
jne
mov
loopne
sub
stos
ljmp
notb
xchg
out
enter
in
inc
mov
mov
sub
dec
lock
lods
cmc
or
push
dec
cmp
shlb
scas
jns
sbb
mov
dec
inc
fdivrs
dec
lock
push
pusha
mov
int
ss
enter
mov
outsb
test
lods
test
ss
sbb
loopne
inc
stos
inc
sub
cmpsl
jno
mov
dec
jge
add
out
mov
adc
daa
jle
or
dec
inc
adc
xor
cmp
nop
pop
fisttps
cmpl
sti
jae
dec
gs
sub
and
hlt
push
scas
lea
orl
in
test
sub
add
inc
mov
dec
arpl
dec
pcmpgtd
mov
out
mov
and
xchg
cmpsl
in
cmpsl
nop
in
rcll
push
push
andl
push
sub
ret
or
mov
jecxz
xchg
cmp
and
lea
mov
sarb
inc
push
ss
leave
cli
divb
into
pop
jbe
lock
fwait
mov
adc
and
mov
mov
out
cmpsl
jns
nopl
clc
loopne
adc
lcall
out
addr16
scas
mov
mov
lret
int
cmp
mov
mov
add
fs
add
ds
push
jo
bound
icebp
and
aas
inc
movsb
addr16
fwait
cmpsl
adc
cltd
mov
mov
aam
int3
pop
xor
insl
sub
xchg
mov
lea
shlb
and
cmp
sub
inc
fstpl
mov
outsl
lds
sub
or
and
inc
jbe
jne
flds
test
fsubrs
leave
jl
push
inc
ret
stc
je
mov
add
cmpsl
nop
mov
icebp
pop
mov
imul
lret
mov
fstl
dec
push
inc
pop
repz
pop
push
mov
outsb
cs
xchg
sbb
mov
in
lds
jbe
rorl
in
push
adc
cmp
fsubrl
dec
and
mov
ret
jae
enter
adc
cli
lea
shll
dec
shl
in
mov
inc
loope
movmskps
mov
call
fdivl
das
xchg
scas
push
icebp
fldl2t
and
add
pop
leave
cwtl
push
mov
and
and
lahf
xor
shl
lea
sub
bound
xlat
add
mov
andl
loope
sub
popa
mov
push
sbb
js
pop
scas
pop
xchg
and
int3
xchg
int3
fmulp
in
xor
add
lret
lods
jmp
push
jg
cmpl
push
push
cmpsb
add
hlt
andl
xor
mov
add
sti
lret
or
cmp
sbb
dec
sub
pop
sbb
movsb
repnz
cs
mov
movsb
cmp
inc
scas
jecxz
sub
add
sbb
sub
jecxz
mov
pop
mov
lods
jmp
push
cmp
mov
xchg
xchg
inc
push
dec
cltd
jmp
inc
mov
sbb
pop
andl
xor
sub
clc
xchg
popf
jne
push
or
daa
push
aam
mov
mov
dec
sub
dec
lret
mov
inc
cmpsl
jbe
jmp
mov
cmp
xor
adc
flds
fst
test
push
add
push
jnp
movsl
add
sub
pop
and
mov
mov
insl
cmc
push
mov
call
daa
sahf
push
notl
fwait
lds
inc
mov
test
repz
xor
loopne
adc
clc
sbb
scas
cltd
or
push
inc
adc
sub
fldl2t
pop
mov
xchg
mov
popa
hlt
mov
dec
popa
in
mov
ret
es
imul
std
rcrb
or
add
push
sti
loopne
stos
fisubrl
je
sbb
mul
jge
adc
jo
push
stos
imul
mov
bound
and
adc
movsl
mov
push
jnp
xchg
outsl
fidivl
int
cmp
xchg
and
stos
add
add
loopne
dec
mov
frstor
xchg
sub
push
scas
ds
ficoml
incb
popa
shrb
add
lea
xchg
cli
aad
sub
scas
call
in
xchg
and
mov
test
push
xor
add
aas
xor
sbb
mov
mov
sarl
add
inc
mov
shll
fmull
inc
shlb
fidivs
inc
adc
jmp
mov
fisubl
push
icebp
and
inc
xchg
adc
add
popf
sbb
jle
push
inc
dec
popa
je
pushf
lea
sub
dec
adc
hlt
xorb
dec
mov
or
xchg
in
cld
jmp
mov
test
cmp
jge
jae
pop
adc
xchg
rcll
jp
int3
repnz
mov
mov
loope
out
pop
pop
out
mov
xchg
and
loop
cmpb
pop
sahf
cmpsb
jne
push
addl
cmpsl
popf
in
adc
push
add
xor
in
lock
jne
and
pop
iret
je,pn
cmpsl
les
stos
jle
pop
jle
mov
mov
mov
sbb
sti
xchg
adc
sub
cmp
fstpt
mov
nop
jg
jbe
xor
jmp
mov
adc
jp
add
add
repnz
push
sbb
cwtl
cmp
ljmp
int3
push
xchg
jns
sub
dec
call
jo
and
xor
out
gs
mov
je
mov
sti
shlb
andl
unpcklps
jae
leave
sbb
mov
movsl
adc
jae
int
fists
aam
mov
pop
movsb
rcrb
insb
add
orb
push
stos
movl
sti
rcrb
sar
sub
dec
test
incb
jl
inc
fstps
sub
stos
repz
xchg
arpl
jo
mov
xor
cmp
and
mov
mov
icebp
cmpsl
lds
pop
inc
movsb
sarb
and
add
nopl
inc
ds
mov
mov
into
jno
dec
cmp
andl
fstps
popf
pop
jbe
lds
xchg
jg
icebp
jl
sbb
mov
push
icebp
sub
stos
add
pop
out
add
mov
cltd
fbstp
jnp
push
test
loopne
mov
sub
out
int3
xchg
adc
sbb
rcl
xchg
pop
popa
dec
ds
sub
or
popf
push
mov
cmp
lret
out
sti
cld
mov
negl
xor
int
pop
or
das
mov
xchg
idiv
cmp
lret
add
js
or
jno
repz
orl
or
outsl
popf
or
sub
bound
sbbl
rorl
mov
dec
rcrb
add
iret
fcmovnbe
jecxz
jg
mov
pop
pop
faddl
sahf
popf
and
mov
jecxz
in
loopne
lret
push
push
push
push
mov
push
out
jl
jne
mov
cmpsl
decl
lock
push
popf
dec
sbbb
mov
and
stc
pusha
sahf
inc
dec
sbb
jle
and
and
sub
fs
in
aam
adc
add
cwtl
cltd
aam
and
negl
and
push
sub
addb
jno
mov
bndstx
idivl
xlat
loop
lods
push
jae
inc
jo
push
and
mov
test
scas
mov
mov
sti
push
add
sbbw
and
jo
ret
fcomps
ja
fwait
sbbb
mov
push
imul
xor
loope
shll
pop
aam
dec
ja
sub
and
repnz
ja
scas
push
xlat
and
push
stc
fwait
scas
sub
add
lods
ja
sub
adc
fcomps
xchg
xchg
sub
xchg
sbb
icebp
dec
and
mov
repz
pop
push
cmp
cltd
adc
mov
xor
imul
clc
adc
mov
mov
pop
pop
push
mov
ret
dec
hlt
sbb
mov
and
mov
ret
enter
or
cmpsb
cmp
push
mov
jo
fmull
jle
push
or
movl
adc
jg
lcall
dec
mov
aas
lcall
xchg
xor
repz
sahf
popf
or
or
dec
sub
push
stc
push
lahf
int3
mov
imul
insl
psadbw
or
cmp
mov
hlt
call
out
aaa
push
add
inc
xchg
dec
dec
xorb
in
sbb
xchg
xchg
std
movsl
dec
test
repz
scas
mov
pop
bnd
add
lcall
inc
push
jecxz
and
sub
dec
push
jecxz
cmp
dec
cmp
popf
into
dec
lret
or
push
mov
push
xor
fs
pop
inc
mov
je
test
movsl
leave
movsl
pop
scas
push
sub
js
jle
decl
insl
out
xchg
xchg
pop
inc
fs
test
fisttpl
sarl
shll
daa
push
rorb
cs
addr16
das
mov
adc
scas
mov
out
mov
mov
dec
and
cltd
adc
int3
rcrb
push
jne
jno
movsl
stos
jg
ret
jbe
mov
pop
aam
loop
and
inc
imul
jmp
mov
ret
sarb
xchg
arpl
xor
cli
push
cld
ljmp
cltd
jns
outsb
adc
pop
add
aam
fwait
sbbl
das
out
inc
sub
push
pop
iret
dec
sub
pop
into
aas
scas
push
adc
sub
gs
dec
fcmovne
lcall
dec
xor
xor
mov
sbb
dec
adc
ja
int
jp
imul
iret
out
or
lea
daa
int3
cmpsb
mov
adc
adc
xor
imul
ret
pop
push
sbb
push
inc
or
jne
test
push
in
xchg
sarl
mov
pop
out
into
xchg
jns
andl
cli
add
xchg
sahf
and
pop
fdivr
adcb
adc
pop
stc
cmpb
jecxz
or
jbe,pt
jo
shrb
add
psubusw
loop
push
dec
or
js
mov
cmp
out
jne
add
sbb
imul
push
lret
dec
ds
sti
inc
out
les
lcall
inc
inc
pop
mov
dec
clc
sahf
in
mov
and
psadbw
sbb
inc
leave
imul
pop
dec
ja
je
xchg
arpl
mov
sub
xor
imul
sub
mov
xor
add
pushf
jo
push
lret
xor
jmp
clc
dec
movsb
mov
addb
xlat
icebp
in
daa
or
jle
pop
mov
std
xchg
and
andl
aaa
push
cwtl
dec
pop
lret
lret
fwait
sti
fsts
iret
and
stos
mov
pusha
ljmp
stos
xor
jmp
pop
repz
fmul
mov
pop
mov
inc
mov
mov
loop
mov
fmull
add
pop
adc
in
cmpsb
sbb
jnp
ds
inc
enter
mov
sub
add
adc
push
sub
or
inc
pop
mov
cmpsl
stos
push
loopne
inc
mov
icebp
movsb
mov
scas
clc
sbb
stos
mov
add
mov
lea
adc
inc
sti
jb
add
cmp
data16
mov
dec
fistps
push
fdivrl
in
outsb
jno
xor
cmc
xchg
rclb
add
les
adcb
les
ja
jno
dec
or
dec
lea
shrb
inc
or
xor
sahf
xor
jae
inc
push
or
push
pop
dec
add
sub
push
dec
lea
jl
cld
and
rorl
das
pop
adc
push
pop
imul
mov
ljmp
jno
pop
xor
pop
fdivl
mov
out
icebp
movsl
cmc
sbbb
sub
xor
mov
push
push
mov
or
xchg
pop
hlt
lcall
push
pop
inc
jmp
dec
popa
loope
iret
xlat
inc
in
pop
pop
inc
fimuls
push
lods
les
fsubrl
rcrl
adc
xor
push
inc
jg
mov
iret
and
pop
imul
push
out
xchg
fisubs
jl
or
mov
push
iret
push
xchg
xchg
add
in
push
sub
pop
inc
inc
ret
adc
mov
arpl
jo
push
adcl
dec
int3
je
or
xchg
inc
out
ljmp
push
mov
ja
and
pop
pop
push
jno
insb
mov
insl
iret
push
fpatan
mov
pop
and
cmp
daa
push
out
jnp
push
cli
lods
pushf
xchg
sub
ffreep
mov
cmp
dec
cs
mov
sub
imul
aad
or
bnd
fwait
in
cmp
push
das
xchg
outsb
aam
out
in
inc
aad
push
xorb
mov
mov
cmpsl
in
xor
inc
and
aaa
aam
inc
sbb
sub
sti
xchg
mov
rcrl
add
jbe
mov
psrad
loop
sahf
outsb
lods
mov
mov
fistpl
in
mov
ret
add
mov
sbb
shrl
int3
pop
outsl
mov
mull
out
jbe
pop
and
jp
add
sti
add
push
xchg
test
hlt
dec
hlt
push
movsb
cmp
pop
sub
jle
adc
or
push
adc
or
je
fiaddl
cmp
loop
and
imul
pop
xor
inc
jne
fiaddl
movsb
fs
aad
dec
dec
push
jp
lods
stos
ja
insl
test
inc
addr16
shrl
or
mov
dec
jge
push
stc
pop
lock
xchg
mov
jns
mov
sub
jge
loope
mov
sbb
mov
daa
in
pop
mov
loop
imul
rclb
es
xchg
xlat
int3
fnsave
movsl
dec
push
xchg
cmp
das
enter
fimull
popa
stos
xor
mov
iret
cmp
pop
into
aaa
pop
dec
in
push
push
fsubs
pop
outsl
notl
push
movsl
fwait
cmp
insb
cld
cmp
sub
dec
pop
bnd
test
imul
cmp
adc
cmp
or
inc
arpl
sbb
mov
pop
cld
daa
cs
loope
jne
sbb
inc
pop
or
sbb
jbe
mov
sti
mov
aam
data16
in
xchg
inc
in
pop
cltd
xor
pop
gs
ljmp
cmp
sbb
ret
ljmp
adc
test
ds
andb
shrl
cltd
sbbb
addr16
popf
mov
cmp
pop
in
jp
popf
mov
and
cwtl
push
push
out
xor
pop
rcl
loopne
cs
inc
mov
add
cmp
outsl
fdivl
push
loopne
rol
addr16
lods
jg
mov
jnp
inc
pop
add
outsl
addl
dec
dec
mov
movsb
hlt
roll
mov
cld
inc
pop
pop
cmc
sbb
fsubrs
sub
stos
ds
movl
mov
rcrl
mov
mov
mov
jne
mov
pop
dec
or
nop
clc
cmpsl
jp
push
push
loopne
rcrl
jge
outsl
mov
sbb
or
push
mov
insb
or
icebp
mov
sbbl
repz
or
sbb
and
adc
in
pusha
cmp
or
or
ret
out
jbe
fdivrl
andl
not
cld
inc
cmc
hlt
insl
clc
aad
cltd
test
add
lret
repnz
jno
mov
outsb
sbb
pusha
imul
rorl
cmp
pop
mov
jge
xor
mov
int
shll
imul
in
inc
adc
cltd
pushf
sub
insl
lods
imul
sub
cmp
das
dec
dec
lahf
jbe
das
rcl
inc
into
gs
jecxz
jmp
enter
mov
shrl
aas
mov
into
movsl
stos
mov
jne
in
dec
mov
inc
lret
mov
add
mov
mov
les
add
pop
repz
clc
cmp
mov
std
outsl
test
fistps
mov
and
mov
out
lods
das
mov
test
xor
rorl
pushf
cmp
push
les
addr16
jecxz
out
dec
mov
dec
mov
sbb
gs
or
push
mov
xor
inc
loope
sub
push
inc
add
dec
lahf
outsb
fcomp
inc
dec
or
out
sub
jle
scas
cwtl
sbb
xor
mov
xor
pop
push
push
dec
mov
out
dec
xor
je
scas
das
pop
and
push
pop
inc
dec
pusha
inc
jae
popf
lods
push
cmp
adc
arpl
sbb
xchg
imul
or
andb
pusha
jp
lret
imul
aas
xchg
cmp
fs
sub
jle
shlb
ret
xor
add
jle
mov
cltd
fimuls
push
test
mov
mov
push
ret
inc
push
jno
adc
inc
pop
int
gs
pop
mov
ret
pop
xchg
sub
es
mov
test
jo
pusha
imul
insl
sub
adc
frstor
pop
pop
daa
jmp
pop
sbbl
fdivl
sarb
stos
inc
xchg
adc
xor
pop
mov
sub
add
cmp
popf
xor
pop
insl
loopne
ds
cmc
into
addr16
decl
add
imul
jo
lea
sar
lods
fisubs
push
leave
pop
enter
ret
or
andb
mov
mov
push
shrl
iret
iret
pop
je
out
sahf
in
lods
sub
dec
test
add
lods
imul
cltd
iret
jp
sti
outsl
mov
mov
test
lods
sbb
dec
xchg
and
popf
and
push
push
ss
pop
test
xchg
adc
push
out
das
xorb
adc
stos
movups
and
add
jg
mov
sub
test
push
mov
push
out
and
xchg
mov
mov
xor
sbb
popa
cwtl
mov
shll
pusha
or
jnp
mov
mov
lcall
out
mov
cmp
lret
gs
cmp
sub
cmp
push
daa
sub
xchg
pop
rcrb
mov
push
xor
xor
ret
js
or
dec
and
and
add
out
movsl
mov
or
inc
jnp
lret
popf
pop
repnz
lret
outsb
jge
hlt
pop
add
test
idivl
js
lods
sub
adc
mov
divl
and
orb
xlat
mov
sahf
stos
or
dec
insl
pushl
or
mov
mov
and
incb
xchg
pop
test
daa
cmp
mov
xchg
jbe
cli
mov
fisttpl
cmpsb
mov
in
rol
out
insb
pusha
pop
jmp
int
cmpsb
jmpw
xor
push
loop
mov
dec
mov
mov
dec
repz
in
push
inc
sub
fcomip
jo
hlt
sbb
pop
jo
imulb
sbb
lahf
add
rcrl
jo
xor
push
mov
xchg
cmp
fcoms
push
mov
mov
repz
jne
inc
adc
pop
ret
jo
xchg
test
mov
push
sub
sti
sub
add
es
sti
lahf
mov
test
inc
sbb
sti
jb
cli
jbe
push
cmp
inc
pop
or
fsubr
and
sub
scas
inc
cltd
xchg
jnp
or
mov
xchg
loop
mov
xor
pop
mov
xchg
xchg
inc
pop
out
mov
xor
test
repnz
sahf
into
dec
jecxz
lahf
or
lea
or
daa
ds
repnz
in
push
lcall
out
scas
adc
fmull
repnz
in
das
cmp
cld
xchg
xlat
dec
xchg
popa
dec
dec
dec
or
inc
mov
cmp
sub
or
ljmp
pop
push
dec
scas
or
filds
stos
jbe
punpckhbw
rol
test
dec
sub
clc
sbb
add
add
loopne
pop
or
add
arpl
inc
push
jle
imul
push
push
add
inc
inc
gs
lret
xor
inc
and
sti
or
or
lcall
pushf
pmaddwd
mov
mov
hlt
push
rcll
add
loope
jne
push
leave
flds
daa
mov
pop
imul
fsubrl
and
xlat
shll
mov
lret
xor
or
ljmp
xchg
lds
pop
xor
adcb
imul
imul
in
xchg
mov
cmp
enter
cmp
jno
shll
xchg
test
lret
addr16
sarl
rorb
xchg
mov
out
push
xor
jmp
js
dec
and
mov
cltd
sbb
mov
call
rol
xchg
int3
scas
add
xchg
mov
pop
dec
mov
adc
pop
movl
pop
inc
xchg
mov
leave
je
lret
xchg
mov
cmp
stos
insb
popf
cs
or
jmp
js
pusha
cmp
mov
cmp
dec
push
inc
imul
xchg
mov
sbb
bndstx
insb
dec
jbe
inc
mov
js
fxch
xchg
insb
shrl
or
lcall
cmp
inc
dec
mov
imul
jae
insb
cmp
outsb
jg
add
fs
cmp
scas
xor
adc
inc
jno
xchg
mov
jg
and
cmc
or
pop
mov
lods
fidivs
aad
dec
and
in
repnz
cmc
inc
roll
popa
jl
sbb
mov
stc
xor
jo
icebp
insb
dec
sbb
sbbb
in
sbb
ret
sti
xchg
dec
insl
cli
popl
das
push
lods
pusha
push
fwait
jb
stc
fwait
cmpsl
aaa
icebp
stc
aad
pop
in
dec
or
cld
out
dec
cmc
mov
rorl
jae
lods
mov
scas
jb
add
mov
sbb
push
pushf
testl
mov
shlb
cmpsb
pop
sarb
jae
adc
enter
jp
les
mov
mov
pop
loopne
fcomi
and
fstpt
mov
pop
hlt
dec
fbld
fstpt
sbb
lret
repnz
mov
into
jl
mov
inc
or
je
sub
xor
pop
call
or
add
insb
mov
lds
rcrb
sahf
cmp
test
cmp
mov
dec
jle
aad
mov
sub
fmull
mov
cmpsl
data16
js
push
xchg
inc
ffree
mov
insb
lds
mov
sub
popl
sbb
arpl
adc
les
inc
xor
xor
xor
push
sahf
movsl
push
dec
pop
in
dec
and
xor
mov
xchg
inc
xlat
pop
sbb
pop
cmpsb
imul
pop
movsb
add
push
in
dec
icebp
sub
lahf
je
shlb
sbb
in
sub
aaa
ret
inc
clc
jecxz
push
adc
sub
mov
pop
ret
imul
sub
pop
jns
pop
push
out
adc
insb
dec
out
repz
ss
int3
enter
inc
stos
xor
flds
mov
and
inc
cmp
add
jbe
shlb
fwait
mov
fldl2t
mov
cmpsl
xor
mov
mov
sbb
js
fsubrl
adc
cld
in
test
jmp
mov
mov
dec
les
cmp
xchg
mov
das
sarl
pop
inc
adc
int3
xchg
inc
ljmp
in
adc
pop
mov
shl
jle
and
aad
cmpsb
dec
jg
fwait
cmc
and
outsb
insl
sbb
xchg
adc
inc
cmc
gs
dec
lret
mov
stos
sti
popa
loope,pt
je
mov
cmp
or
xchg
adc
jge
sbb
sub
movsl
xchg
add
ret
int3
mov
pop
inc
aad
insb
fwait
pop
sbb
stc
push
xor
add
mov
fsubs
xchg
mov
jecxz
lock
dec
push
inc
cmc
cmp
das
inc
pop
insl
xor
jmp
scas
aas
sahf
lods
push
stos
lds
xchg
outsl
aam
sbb
cmovg
arpl
inc
ja
jb
jb
je
out
push
movsl
enter
ja
dec
rdpmc
std
std
imul
push
push
dec
fwait
or
sbb
fsubrl
dec
sbb
mov
int3
in
call
sub
pop
xchg
inc
sub
call
xchg
pushf
loop
in
add
inc
test
push
xchg
adc
cltd
xor
and
mov
cmpsl
insl
mov
lahf
sub
hlt
es
pushw
aas
xchg
add
popa
mov
in
cmp
bound
cmp
aad
xchg
cwtl
loop
cltd
lds
adc
and
mov
or
insl
push
sti
mov
sub
hlt
mov
enter
push
jnp
outsl
faddl
popa
pop
test
int
push
bound
lods
sub
jno
dec
push
mov
gs
int3
imul
inc
lock
adc
sub
pop
nop
inc
fcmovnb
ja
cwtl
test
xlat
pop
and
sub
cmp
out
shll
leave
add
add
addr16
jbe
cmpb
sbb
xchg
add
and
movsbl
lods
js
inc
mov
cltd
xor
outsl
cmp
mov
xor
adc
push
jl
inc
scas
js
fwait
scas
clc
dec
mov
inc
jnp
imul
jl
cs
js
jle
adc
pusha
int3
les
rolb
imull
sbb
je
mov
das
push
dec
mov
fdivrs
fsubrs
nop
dec
ret
jne
out
push
imul
enter
jl
js
ljmp
pushf
addr16
ja
dec
jne
fisubs
mov
out
test
dec
or
dec
dec
sub
xorb
add
mov
xchg
xchg
mov
insb
rcl
xor
jge
mov
call
pop
into
push
xor
arpl
gs
and
mov
cwtl
push
in
flds
mov
xchg
sub
pop
mov
into
shll
inc
push
bound
mov
cmp
dec
push
je
xchg
push
cmpsb
cmp
dec
sbb
push
mov
scas
imul
in
dec
add
adc
dec
fwait
lods
and
xchg
mov
and
mov
incb
fnstenv
cmp
jecxz
or
push
adc
insl
mov
jae
and
cmp
push
in
out
imul
fistl
leave
inc
and
xor
sahf
cmp
out
cmpsl
inc
scas
loopne
pusha
adc
inc
test
sbb
outsb
add
pop
data16
mov
dec
mov
out
xchg
or
pop
into
lods
dec
mov
fwait
mov
fidivl
jle
inc
sbb
std
xor
push
push
call
shl
fs
out
jae
cmp
jg
frstor
daa
dec
int
dec
xor
and
call
lods
repz
dec
push
mov
data16
jae
inc
lods
in
stc
pop
inc
inc
pop
jmp
shl
jmp
and
or
cwtl
mov
lods
outsl
lods
inc
out
cmpps
pop
fstl
test
mov
sahf
jno
mov
xchg
and
add
mov
imul
jp
into
fldcw
mov
push
xor
lods
fsubrs
out
bound
add
dec
int
jo
inc
sub
ret
pop
mov
out
rol
lret
repz
add
and
ret
and
push
pop
pop
in
aaa
jbe
test
js
subl
lret
mov
pop
icebp
rcll
inc
xor
js
ljmp
xchg
mov
fwait
nop
mov
xchg
data16
mov
mov
aad
je
pop
mov
stos
jg
sbb
pop
sbb
xor
nop
inc
scas
sbb
dec
pop
cmp
insl
lahf
imull
mov
push
imul
je
and
lahf
mov
adc
xor
jmp
push
mov
hlt
pop
and
mov
dec
fwait
in
inc
ret
jl
and
and
fiaddl
mov
and
push
orl
jb
xchg
sbbb
iret
adcb
nop
mov
adc
pusha
lret
popa
dec
fldenv
mov
movsl
mov
test
lods
pop
adc
dec
lods
sti
scas
jns
jno
xchg
push
or
jmp
jns
dec
and
pop
xlat
imul
adc
cmp
sub
leave
or
inc
cltd
add
in
clc
or
jbe
xor
data16
nop
popl
mov
ret
mov
fcmovu
mov
and
lret
bound
stos
mov
and
xor
mov
or
mov
cmpsb
out
popa
out
xor
js
loopne
pop
loop
les
dec
enter
add
ljmp
mov
je
out
stos
call
jmp
add
sub
mov
push
in
mov
push
je
filds
pop
lret
push
out
test
inc
adc
out
and
icebp
mov
ret
fucom
cmp
gs
and
pop
repnz
subb
add
shlb
dec
inc
pop
aad
addr16
cwtl
and
jecxz
add
push
fbld
mov
push
jae
mov
cld
imul
mov
ja
and
lahf
andb
inc
mov
adc
adcl
inc
fcoms
push
dec
cmp
add
mov
adc
jae
adc
outsl
add
mov
xchg
outsb
xchg
rcll
stos
inc
jl
cmp
fidivs
push
jmp
pop
in
mov
adc
add
aad
mov
loopne
popf
pop
jg
dec
jecxz
mov
cmp
pop
rorl
lods
rolb
adc
fidivs
push
xchg
outsb
mov
mov
jmp
inc
push
stos
mov
dec
les
jae
aas
aad
sbb
lds
pop
lahf
jecxz
xchg
xor
push
ljmp
mov
add
pop
outsl
aad
lret
cmp
je
out
jne
inc
xchg
lret
jp
sub
enter
repz
daa
jg
cmp
mov
fistps
test
mov
dec
adc
ss
orb
mov
frstor
sub
mov
lods
xchg
js
jne
gs
mov
pop
or
mov
or
shr
jge
and
push
movsl
lods
sti
es
mov
scas
inc
dec
add
ljmp
push
push
ljmp
in
icebp
lods
and
orb
pop
xchg
adc
sub
mov
insb
popf
dec
icebp
insb
in
jmp
test
mov
jne
std
lods
fcomip
pop
push
lret
ret
push
sbb
mov
inc
rcl
repnz
add
cld
mov
mov
xchg
mov
ljmp
test
rclb
and
mov
fs
dec
cmpsb
xor
sub
daa
mov
sbb
cmp
testb
or
dec
xlat
cmp
lea
addr16
and
xchg
mov
flds
outsl
inc
push
ret
fs
mov
jbe
leave
test
lods
mov
xor
xchg
out
popa
ja
js
fmuls
ljmp
xor
push
push
icebp
in
out
rcrl
fdivr
or
sbb
rcrl
ljmp
mov
sub
inc
add
call
arpl
or
in
pop
and
mov
mov
in
into
out
insb
gs
sahf
scas
xchg
push
call
or
xchg
ret
add
add
xorl
call
xor
outsl
rcrl
test
hlt
add
repnz
mov
and
fadds
inc
in
or
nop
es
sub
inc
int3
fs
popa
sbb
mov
adc
ljmp
pushf
or
frstor
jecxz
cmp
ss
push
out
fsubs
mov
adc
mov
das
jbe
pop
pop
out
movsl
test
inc
push
loopne
inc
subl
mov
loop
in
roll
xorb
or
popa
inc
push
inc
out
mov
cwtl
mov
pop
inc
pop
push
scas
adc
cld
sbb
or
mov
in
in
xchg
mov
loopne
rcll
loop
mov
or
jno
sbb
pop
daa
cli
push
sahf
ss
subb
inc
call
movsl
push
inc
call
cmp
fwait
adc
pusha
mov
fwait
jb
aam
or
push
stc
nop
inc
lods
imul
pop
test
hlt
dec
mov
mov
sti
mov
movsl
jo
fisubs
mov
dec
mov
jbe
adc
pop
lahf
aaa
inc
cs
mov
xor
sti
pop
mov
dec
movsb
out
add
add
and
adc
xchg
push
xor
mov
mov
cmp
mov
lret
iret
popf
sub
inc
push
adc
push
xor
outsl
in
test
jecxz
fst
fistpll
test
pop
jmp
dec
shll
pop
jbe
xor
mov
out
loop
lret
mov
cwtl
and
data16
ljmp
repnz
outsb
adc
inc
cmp
mov
mov
sbb
sbb
xor
int3
mov
and
out
dec
or
cmp
lods
sub
stos
fdivs
cs
sbb
ret
xor
std
out
mov
inc
sahf
pop
sub
cs
fidivl
push
in
cmp
cmp
xchg
jne
push
out
les
sbb
jp
in
push
sbb
dec
pop
cmp
fcoms
movsl
test
pop
dec
das
sqrtps
mov
ret
lods
xor
dec
sub
notb
insl
mov
int3
add
test
sarl
cmpsb
in
fldenv
jbe
sub
add
push
inc
ret
ss
lds
fldcw
jle
addr16
sub
inc
pusha
sub
je
movsl
xchg
icebp
popf
das
mov
stc
xor
fsubrl
lret
lret
cmc
pop
imul
jb
mov
fists
dec
rorl
loop
repnz
push
sub
in
mov
push
inc
test
cmp
sbb
fcmovnbe
insb
sbb
int3
jg
and
pop
adc
stos
pop
jl
aam
test
jbe
pop
pop
jns
shlb
addr16
cmp
inc
sbb
stos
cmp
fsub
cmp
ficompl
sbb
mov
nop
xchg
insl
xchg
dec
aas
sti
aad
stos
cmp
sub
les
ror
xor
ljmp
pusha
cwtl
out
push
push
je
outsb
fcoml
mov
xor
mov
sbb
sbb
nop
rcl
ret
or
pop
dec
addb
ds
into
xor
cs
mov
add
sbb
in
dec
adc
adc
scas
imul
pop
out
enter
shrl
jl
loope
xor
cli
scas
int
pop
repz
sub
jg
cwtl
ret
mov
jnp
fwait
incb
lahf
jbe
in
inc
sbb
mov
push
imul
sub
clc
rcll
insb
inc
fcos
sbbl
jle
mov
lds
pusha
ret
jl
and
movl
mov
push
test
aas
into
js
push
sbb
mov
hlt
and
jg
negb
push
hlt
push
add
sub
lods
inc
xor
and
mov
in
sti
and
out
call
pop
mov
nop
insl
cmc
jle
jae
aad
decl
int3
ret
loop
out
shlb
xor
xor
adc
mov
out
clc
fadds
push
insb
stc
jle
mov
sbb
sbb
sbb
jbe
insb
scas
mov
inc
pop
pop
sbb
mov
je
mov
fidivrs
cmp
out
ds
adc
fmulp
mov
xlat
mov
sbbb
popf
push
cmc
xchg
shrl
imul
fsubr
out
push
lods
xor
xchg
or
xchg
in
add
pop
sbb
gs
mov
lcall
stos
cmp
mov
mov
inc
js
pop
mov
mov
inc
fcoms
imul
inc
jo
xor
aaa
push
call
mov
sbb
add
inc
dec
hlt
orl
sbb
jmp
dec
popf
inc
cmp
inc
mov
mov
xlat
loope
je
pop
das
fildl
bound
sub
xchg
add
push
xlat
push
outsl
movsb
pop
movsl
pop
popf
imul
jbe
daa
inc
adc
ja
shll
out
or
xchg
jmp
shl
push
pop
adc
insl
inc
adc
lea
std
lret
adc
xor
cld
fs
movsl
aas
fsubrl
sar
ret
arpl
mov
andb
movsb
lds
cmp
cmp
inc
cmpl
push
mov
andl
or
add
daa
out
shll
cmc
imul
aad
mov
js
cmp
mov
xchg
loop
and
movsl
test
lods
add
bound
sbb
into
adc
call
sub
addr16
mov
call
js
jae
xchg
test
data16
add
jp
push
les
outsb
adc
adc
dec
mov
fwait
cmp
push
cwtl
or
and
cmp
iret
sub
or
mov
jne
add
push
icebp
adc
js
repz
dec
dec
sub
rcl
lock
stos
flds
loopne
nop
push
pusha
stos
dec
rcrb
cmp
push
mov
sti
pop
dec
cmpl
or
in
pop
add
push
cmp
lods
aaa
shr
fsubr
sub
sub
scas
mov
pushf
push
gs
cwtl
pop
jns
add
jle
cmp
pop
in
loopne
outsb
mov
push
xor
ja
cmpsb
lock
hlt
popf
sub
or
inc
loopne
add
jecxz
push
jbe
int3
stos
jne
push
xchg
sub
es
lea
xor
adc
pop
dec
sbb
jl
inc
xchg
int3
and
mov
cmp
xchg
sbb
inc
and
scas
inc
adc
push
movsb
adc
dec
insb
or
popf
fmuls
pop
cmp
mov
neg
mov
mov
iret
sbb
jge
cli
in
nop
mov
lea
mov
sarl
push
xchg
ja
pop
and
sahf
cli
mov
xchg
std
xchg
cmp
jns
out
cmpsl
pop
out
xlat
popf
cmp
call
pushf
int3
ljmp
or
fdivs
fisttpl
or
jmp
add
jecxz
fwait
xor
js
loopne
out
xchg
test
std
jne
xor
push
mov
addr16
aam
stc
push
lods
fnsave
lods
jmp
mov
pop
cmp
shrl
xchg
add
in
adc
test
fisubrs
push
pop
jbe
mov
add
sub
roll
mov
jnp
mov
push
inc
add
inc
sbb
into
outsl
fsubs
inc
add
cmp
inc
lock
inc
lods
fnstsw
add
add
push
xchg
jmp
mov
outsb
jl
mov
or
xchg
add
out
cmp
xchg
add
stos
add
sahf
std
and
and
jmp
mov
je
stc
mov
fists
sbb
fisubrs
insl
mov
cs
cmp
or
insb
xor
cmp
adc
imul
jno
shr
clc
int
sub
push
movsl
jp
sbb
push
sbb
mov
out
xor
push
push
pushf
out
cmp
adc
dec
mov
shlb
lahf
push
cmp
mov
cmp
addb
shl
jns
mov
fidivl
loop
cwtl
mov
jne
xor
mov
sub
jns
pop
jne
add
lds
shld
dec
and
iret
loope
adc
and
mov
cmp
clc
fidivs
movsl
stos
push
jmp
mov
cmp
mov
sub
ret
or
cmp
jmp
ret
adc
xor
iret
pushf
dec
push
mov
rcrb
loope
enter
add
xchg
movsb
mov
cs
dec
xor
loope
adc
jg
pop
xor
mov
fadd
mov
adc
fnsave
xor
clc
mov
mov
cmp
jp
jne
or
xsha1
cmpsb
lret
out
pop
bound
mov
dec
adc
and
loope
sti
cli
stos
dec
inc
arpl
jp
test
mov
lret
mov
out
loope
push
out
cmp
push
xor
fbld
cmpsb
ret
lock
jno
push
lods
xor
mov
call
iret
fnstcw
jge
sub
jo
loope
inc
rorb
cltd
pop
sub
cmpsl
cmp
inc
es
pop
jl
sbb
insb
imull
jl
aam
daa
add
fisttpl
and
pop
xchg
jbe
aaa
mov
xlat
imul
jecxz
test
cmpsb
lock
cmpsl
insb
notl
add
push
imul
test
mov
sar
add
inc
pop
fmuls
push
pop
scas
inc
dec
enter
lahf
negl
rorb
test
ss
aas
fs
pop
mov
jo
sbb
clc
iret
movsl
or
or
adc
push
push
ret
xchg
ja
scas
push
xchg
push
js
and
cli
pop
adc
js
mov
jecxz
mov
and
test
dec
or
in
imul
les
scas
push
arpl
xchg
xor
pop
fwait
ss
inc
fstpt
inc
fnstsw
or
bound
adc
pop
imul
xor
xlat
cmp
or
pusha
sahf
jmp
ja
cmp
into
test
cli
adc
imull
loope
pop
and
out
loop
lock
push
mov
add
fcomps
mov
loope
pushl
mov
xor
inc
dec
lods
enter
into
mov
scas
rorl
subl
repz
out
adc
in
mov
and
adc
outsl
inc
rol
sbb
adc
fidivrl
decb
adc
mov
in
repnz
ret
push
pushl
dec
sbb
das
pop
pop
push
add
xlat
repz
jle
push
cmp
mov
scas
mov
fdivl
mov
ja
push
jmp
neg
outsl
dec
cmp
lock
and
das
mov
cmc
push
repz
les
xchg
jns
sbb
sbb
mov
dec
add
ds
nop
loop
popa
orl
xchg
test
in
dec
ljmp
movsb
cmp
sub
xor
aam
inc
shll
dec
roll
inc
xchg
fisubl
xor
push
stos
fsub
mov
sbb
dec
dec
jle
mov
fists
adc
push
jbe
mov
mov
jmp
xor
jg
inc
jmp
pushl
pop
dec
add
int3
in
cwtl
xor
mov
insb
push
sub
das
and
repnz
add
mov
push
cmp
addl
imul
sbb
lea
in
xchg
inc
int3
mov
out
test
push
push
sarb
stos
fsubl
add
mov
mov
push
add
mov
mov
lret
outsb
sbb
fwait
dec
mov
pop
add
aad
mov
cmp
dec
pop
in
ss
mov
xchg
divl
pop
jae
fdivl
fiaddl
mov
dec
cmp
pop
scas
mov
rclb
and
fmull
lods
adcl
cwtl
pop
jmp
inc
out
sub
movsl
icebp
addr16
outsl
jae
mov
imul
add
dec
es
mov
mov
mov
add
pop
push
leave
subl
gs
fldcw
out
fucom
mov
xor
ficomps
fistpl
movsl
mov
mov
in
es
pop
cmp
cwtl
je
clc
dec
testb
xchg
sarl
scas
lods
aas
popl
mov
insb
shrb
mov
mov
or
xor
mov
pop
popa
pop
icebp
or
push
mov
aad
xchg
pop
xor
xchg
mov
mov
in
idiv
ljmp
add
mov
daa
aas
sbb
jg
pusha
jne
shlb
into
mov
lret
xchg
rcl
outsb
fidivs
fnclex
rcrb
dec
push
cmp
jbe
push
pop
mov
add
jae
jmp
xor
in
shll
pop
jecxz
dec
cmpsb
rorb
mov
rcl
adc
cwtl
fwait
dec
popa
aas
xor
xchg
add
add
and
cmp
loope
cmp
mov
jno
cli
xchg
lods
je
xor
sbb
rcll
adc
sub
mov
pop
push
in
ja
fildl
sbb
out
insb
cld
xlat
dec
icebp
rcrl
hlt
mov
mov
stos
and
in
inc
hlt
mov
mov
sbbl
jge
lret
push
popf
add
test
pop
lods
sub
sbb
out
inc
gs
hlt
push
add
cmp
mov
xchg
sub
push
into
ss
outsl
add
pushf
fs
push
pop
lods
add
mov
xchg
cwtl
pop
and
jnp
inc
inc
jno
mov
jb
and
testb
inc
adc
clc
js
cmp
fcoms
fidivs
faddl
std
stc
test
or
pop
hlt
ds
ficoms
cltd
pop
xor
aaa
cmp
pop
mov
js
jbe
xor
lret
xor
jbe
sbb
popa
addr16
ficoms
push
lea
xor
lods
mov
nop
mov
fsubr
mov
rclb
daa
mov
lcall
push
dec
push
sahf
xor
rorl
aaa
sbb
fnsave
dec
aad
fstpt
in
lret
mov
clc
mov
subl
push
sbb
data16
gs
sub
lock
push
adc
cmp
lds
sub
inc
popf
and
mov
sub
mov
mov
addl
out
sbb
aas
js
sbb
dec
xchg
sbb
push
call
les
lcall
pop
loope
dec
jne
mov
xchg
adc
inc
test
lret
jp
mov
mov
lcall
add
or
mov
mulb
inc
xchg
cmp
or
les
jo
out
loop
int3
cmp
inc
cmc
mov
mov
and
cltd
shlb
push
shrl
xor
roll
push
cmpsl
or
idivb
jle
lds
add
jns
in
das
cmp
arpl
or
mov
or
cmpsl
cmp
cs
pusha
pushf
out
mov
jb
and
xor
in
fwait
psubsb
into
gs
push
mov
push
xor
lods
sti
inc
nop
das
mov
adc
cmp
aaa
mov
imul
xor
ljmp
mov
pop
inc
dec
test
adc
push
cltd
cmp
inc
inc
lods
fstpl
flds
sub
sbb
ds
rcl
stos
inc
adc
aaa
int3
push
cli
jns
push
loopne
add
aad
cwtl
dec
shrl
xchg
cmpsb
dec
loopne
aaa
cmc
cwtl
mov
jle
mov
or
ja
push
test
jno
add
jecxz
xor
cmc
mov
adc
or
stos
sub
cltd
inc
push
and
shlb
pop
jne
cltd
jp
dec
mov
stos
xchg
fwait
jle
dec
lahf
sbb
decb
out
nop
dec
pop
inc
iret
iret
shl
xchg
push
rorb
lock
std
fnstsw
subl
aas
cmp
dec
fiadds
pop
jg
sbb
add
sbb
loop
adc
andl
gs
lea
imul
and
add
xor
mov
out
mov
push
xchg
pop
or
mov
dec
sub
jl
inc
scas
push
ds
aaa
dec
xchg
pop
out
mov
push
xchg
outsb
sbb
xchg
jle
scas
out
in
pop
fistpl
or
adc
mov
movsb
xor
add
arpl
and
arpl
outsl
mov
push
divb
cmp
fnstcw
fwait
push
stos
ret
insb
mov
xor
stc
idivl
dec
cmp
fmuls
pop
nop
and
leave
add
inc
mov
sti
imul
bound
mov
and
inc
int3
xor
xor
xchg
lds
pop
lret
scas
and
xorb
jo
lods
push
add
add
cmp
xor
and
adc
jno
xchg
mov
fildll
mov
inc
popf
je
fbstp
inc
test
fiadds
xchg
shll
ljmp
sub
test
sti
push
rclb
pop
in
cmpsb
or
lds
or
call
cmp
pop
xchg
mov
pop
add
pusha
or
addr16
loopne
pop
cwtl
rclb
jne,pn
adc
xchg
adc
je
xchg
pop
add
test
jne
data16
lret
xor
loopne
nop
xor
les
jl
stos
inc
cltd
int3
fs
lret
ret
sbb
mov
cld
lahf
sbb
sbb
or
ljmp
pop
ds
je
sbb
xor
or
sbb
nop
or
stc
inc
jne
xor
fiaddl
cld
adc
xchg
jmp
and
nop
push
push
cmp
jae
adcl
pop
xor
pusha
mov
out
add
in
xchg
push
dec
jmp
lahf
cmp
call
fstpt
jle
jno
or
pop
sbb
jmp
repz
inc
or
mov
stos
inc
jo
jg
cmp
xor
lcall
and
push
mov
dec
sbb
jo
test
sub
repz
push
das
notb
test
push
adc
xor
or
fsubl
inc
cwtl
mov
mov
xchg
xchg
pop
cmpsb
xchg
add
dec
pop
out
cmp
pop
inc
repnz
mov
in
in
xchg
orb
pop
xlat
insb
imul
cmp
fiadds
js
ja
jp
sahf
adcb
lds
aad
movsb
push
push
movsb
jmp
subb
or
gs
ret
add
lcall
lea
mulb
mov
or
inc
sbb
mov
lahf
jbe
mov
xchg
jmp
cmpsl
adc
in
and
or
outsl
or
test
pushf
sub
shl
xchg
popf
ljmp
and
cmp
daa
enter
push
out
xchg
loope
testl
mov
jnp
xchg
push
adc
push
test
sbb
jg
dec
es
mov
insl
or
inc
cmpsb
sub
lret
push
xchg
out
mov
xchg
test
movl
or
jo
gs
iret
mov
add
jae
add
aam
cli
xchg
sub
fcomps
sbb
cmp
cmpsb
ja
mov
loopne
sbb
mov
lock
jne
add
or
popf
lods
cmp
pop
mov
insl
in
mov
lea
sub
ss
je
push
xlat
mov
sbb
xchg
test
mov
mov
js
neg
pop
jmp
xchg
xchg
subb
sbb
xor
aas
mov
inc
nop
sbb
xchg
fisubrs
and
stos
inc
aas
lret
push
andl
ss
daa
fs
mov
sbb
es
mov
fsubl
inc
jnp
dec
and
xchg
jl
fldcw
ret
or
mov
fistpl
ljmp
jb
mov
fwait
xor
cmp
outsb
sar
popf
dec
push
sub
clc
sahf
adc
push
fdivl
inc
inc
or
cli
cli
inc
test
cmpsb
call
cs
jne
sahf
test
ss
dec
and
xchg
mov
push
inc
adc
lahf
jge
push
icebp
das
sbb
mov
popl
mov
int3
jecxz
or
incl
jne
pop
sub
test
nop
or
jae
pop
jl
hlt
pop
fwait
popf
out
lret
inc
stos
push
icebp
mov
sahf
sub
negl
sti
stos
pushf
mov
xchg
cmp
test
aad
sub
pop
das
and
fbstp
dec
sbb
outsb
adc
outsl
xchg
int
dec
loope
dec
stc
lds
dec
sbb
mov
repnz
mov
fstps
clc
push
sub
es
push
xchg
sbb
lock
fchs
test
in
push
mov
imul
scas
ret
cwtl
mov
lret
mov
jo
mov
imul
and
pop
mov
add
xor
push
mov
push
dec
xor
xor
pop
mov
inc
inc
ret
call
cmp
imul
or
movsl
cmp
jmp
adc
out
sbb
fwait
xor
inc
hlt
jns
ds
dec
jecxz
jge
out
movsb
pop
lds
jecxz
dec
adc
notb
int
addr16
outsb
inc
push
test
ret
js
lds
sub
push
xor
sbb
pop
cvtps2pi
sub
or
cmpsl
stc
push
adc
clc
inc
scas
cmpsb
inc
and
sbb
test
nop
das
stos
dec
cmp
push
add
enter
mov
xor
fnstenv
cs
push
loope
mov
dec
lahf
mov
movl
jmp
out
xor
mov
or
loop
jno
push
mov
xlat
jo
mov
mov
loopne
jp
aad
fbstp
lods
xchg
add
mov
sbb
or
pop
xchg
mov
insb
push
out
test
in
cmp
imull
inc
mov
jbe
subb
cmp
sahf
lods
xor
test
rolb
jle
or
mov
orl
arpl
in
sbb
xor
xchg
mov
jle
jae
mov
mov
xchg
mov
movsb
cmp
cmp
lea
fistl
push
testl
fstl
not
jge
jb
cmc
jmp
jbe
mov
lahf
fisttpl
rorb
es
and
or
ss
mov
jge
scas
aad
pop
and
je
mov
clc
stos
jmp
iret
mov
adc
adc
sub
pusha
lods
and
pop
dec
inc
cmp
insl
mov
fcomi
lret
mov
test
repnz
ret
adc
cwtl
lods
stos
mov
test
push
xor
mov
cmpsl
xor
incb
lods
mov
enter
jl
sarl
sub
icebp
fdivr
shll
pop
or
adc
mov
push
scas
data16
neg
and
fiadds
cltd
in
xor
test
cmpsb
inc
fst
out
pop
dec
hlt
fs
in
adc
ds
push
lods
xchg
arpl
test
xor
inc
in
cmp
scas
cmpsb
out
icebp
rcr
imul
popf
daa
pop
jbe
dec
sahf
cmpl
in
jmp
xchg
bound
jo
adc
lcall
xor
subb
aam
mov
imul
dec
mov
mov
mov
sbb
and
es
push
outsb
movsb
adc
mov
mov
mov
mov
icebp
sbb
jmp
add
xorl
sub
shrl
mov
sbb
lea
xchg
je
movsb
gs
stos
cmpsl
mov
ret
cmpsb
lea
insl
popa
jnp
adc
fistpl
inc
test
inc
jno
call
xor
out
aam
add
dec
mov
rol
sub
fldl
add
xlat
cmp
punpcklwd
mov
sti
in
es
xchg
push
jp
and
xchg
push
stos
scas
sbb
in
pushf
push
cltd
push
stc
or
ret
or
inc
push
xchg
sub
push
hlt
lret
jnp
out
rcll
sti
lea
mov
shll
adc
sbb
pop
cmp
stos
sub
test
pushf
mov
lods
ljmp
in
push
add
adc
pushf
mov
test
incb
es
daa
sub
and
mov
bound
into
repnz
mov
movsb
mov
or
enter
movsl
in
lret
pop
sub
aas
add
adc
js
mov
out
je
stos
les
jo
dec
leave
jl
leave
cmp
push
mov
shrl
dec
mov
shll
fldl
ret
test
icebp
push
enter
das
push
and
leave
dec
ja
jb
jno
pop
ror
sbb
movsl
clc
mov
push
ljmp
pusha
inc
cs
clc
or
je
and
push
cmc
clc
jmp
mull
stc
cmp
dec
imul
arpl
xchg
lret
int
cmpl
in
xor
scas
xor
sub
xchg
shrl
fnsave
xchg
test
pop
mov
jp
mov
mov
ror
mov
inc
mov
push
loopne
sbb
or
icebp
mov
out
inc
cld
push
cmp
dec
sbb
rclb
mov
sahf
neg
addr16
dec
outsl
jp
or
stos
shlb
jbe
mov
cmp
inc
mov
and
pop
jp
leave
fnstenv
xor
insb
mov
enter
xchg
add
mov
jecxz
push
cli
xchg
mov
cmp
pop
bound
movl
sbb
push
push
xchg
iret
fnstcw
roll
in
jb
cwtl
jne
mov
mov
push
xor
cmpl
hlt
xchg
scas
aam
jg
test
js
mov
cmp
fs
pop
mov
iret
movsb
xchg
test
cld
sub
add
adc
jl
cmp
jle
sbb
mov
jb
add
sbb
stos
insl
jge
and
xchg
jg
lds
int
mov
push
dec
add
jg
push
cmp
sbb
fsubrs
mov
mov
lret
shrb
repnz
sarl
testl
add
xchg
cmp
inc
push
push
rcll
mov
lret
movb
rorl
pop
xlat
fs
lret
ss
push
mov
sub
cmp
insl
hlt
cli
aad
inc
std
shl
cs
cmp
out
pop
sbb
mov
popa
jnp
aad
add
out
nop
pop
popl
imul
scas
test
jbe
aaa
add
and
sbb
ds
js
bound
int
sub
lahf
adc
pop
fisubrs
adc
sub
pop
hlt
mov
sbb
scas
lahf
addr16
jp
mov
xchg
clc
popf
aam
aad
psubq
inc
cmp
pushf
mov
ficompl
jecxz
cld
or
fldenv
je
jo
xor
push
jp
mov
iret
mov
pop
fiadds
cmc
js
fucom
pop
push
mov
outsb
repnz
mov
shl
jns
fs
ljmp
xor
jg
aas
jne
mov
stos
and
daa
sub
rcrb
clc
sub
clc
scas
xor
xor
je
repnz
rclb
mov
xorl
jb
outsl
iret
loope
sub
push
imull
movsl
lods
push
sub
mov
cld
loop
cmpsl
fcoms
jg
aas
mov
popf
stc
into
ja
add
lret
or
mov
xchg
rol
add
divb
icebp
mov
jl
mov
unpcklps
imul
sub
and
xchg
and
add
ja
push
and
pop
cli
mov
lods
in
dec
cli
or
mulb
lcall
lock
xor
sbb
fidivrs
fsubrl
jg
sahf
movsb
lds
dec
mov
or
mov
mov
imul
mov
push
rcl
popa
adc
xor
sbb
and
mov
inc
xchg
testl
into
xchg
mov
mov
rcrb
sbb
ljmp
dec
gs
arpl
cmp
nop
or
xor
movsb
in
ret
add
and
xchg
std
cmp
test
add
xor
sub
repnz
stos
sub
jp
cwtl
inc
cli
incb
out
jl
mov
pop
and
out
out
add
mov
dec
jne
pop
cmp
aad
cltd
sbb
les
rorl
imul
outsb
sbb
dec
pop
ss
test
gs
stc
into
enter
xor
es
push
gs
mov
jnp
xor
xsha256
cmpsb
push
fwait
xlat
jo
adc
lcall
sbb
jno
add
data16
xchg
xlat
adcl
bound
mov
inc
xor
or
js
cmpsl
leave
pusha
in
mov
stc
ret
adc
add
pop
and
jecxz
out
add
sahf
in
inc
and
xor
arpl
push
int3
loope
mov
popa
outsb
adcb
lret
mov
rcrl
lcall
roll
test
in
imul
pop
sub
aam
pop
in
mov
xchg
je
outsl
rcrb
mov
jns
pop
or
sub
movsb
aaa
mov
pop
mov
mov
cmp
adc
fstps
mov
sub
sar
mov
div
inc
and
inc
adc
ret
fimuls
mov
inc
dec
inc
test
shl
jnp
push
or
dec
mov
xchg
cmpsl
int3
in
mov
dec
add
rcrl
sub
leave
mov
sti
xor
mov
fbstp
jmp
loope
movsb
sub
int3
adc
mov
jae
leave
arpl
push
pop
mov
mov
push
push
into
repnz
mov
xor
call
aas
rcr
mov
jne
into
xor
leave
pusha
jo
mov
mov
out
repz
out
and
es
dec
popa
pop
sbb
pop
rcl
movsl
jbe
mov
les
inc
or
and
rol
outsl
out
leave
or
roll
movzbl
add
and
ret
nop
dec
adc
into
imul
mov
test
pop
mov
fidivrs
mull
shr
mov
push
movsl
or
sub
inc
cmp
aas
popf
jb
js
jle
and
gs
or
xchg
jp
mov
or
lock
dec
sbb
push
dec
ds
subb
rcr
dec
loop
lcall
jge
xchg
adc
fcoml
data16
outsl
popa
imull
jle
clc
bound
clc
je
or
push
xchg
stos
daa
xchg
sbb
sahf
push
mov
dec
jne
jnp
lahf
jns
sti
shrb
sub
lods
add
xchg
ficoms
mov
cmp
and
in
xor
jae
jo
xlat
sub
lds
in
adc
push
lods
in
pop
pop
out
and
dec
lds
hlt
fsubrl
movsl
lds
cs
or
das
pop
add
shrl
arpl
int3
mov
mov
je
xor
jge
xchg
push
dec
pop
insl
push
mov
test
rorl
sahf
lcall
jbe
das
int
data16
stos
out
jle
add
cltd
mov
sbb
imul
cmp
inc
rol
addb
push
call
sbb
and
iret
movl
fs
mov
loop
jecxz
add
stc
adc
pop
adc
icebp
pop
xlat
icebp
sub
lea
inc
out
sub
and
sub
pushf
adc
or
xor
out
dec
push
push
add
adc
out
loopne
sbbb
sti
inc
xlat
jo
popf
or
xchg
pop
jle
add
cmp
or
jne
jle
jns
popa
mov
sub
insb
jecxz
mov
mov
fisubrl
or
xchg
ds
stc
inc
negb
jmp
jne
jo
push
and
insl
adc
or
test
hlt
out
andl
sarl
mov
push
and
mov
cmp
xchg
enter
mov
cli
cmp
ss
std
jp
adc
mov
cmp
xlat
or
and
loope
mov
mov
or
sub
jge
jecxz
xchg
mov
add
popf
jno
je
or
mov
icebp
sbb
mov
mov
fbstp
rolb
push
add
or
loopne
adc
dec
icebp
add
add
mov
cli
pushf
cmc
or
mov
call
inc
test
std
jnp
out
fidivrs
fwait
adc
xor
scas
or
push
mov
in
sbb
cmpsl
inc
xor
or
cmp
xor
mov
test
dec
lret
fsts
imul
into
adc
lcall
bound
iret
in
xchg
xlat
insl
ss
loope
pop
in
sar
xchg
lds
movsb
pop
out
fs
dec
jb
out
dec
adc
inc
call
imul
in
pop
lret
push
leave
mulb
mov
xchg
push
ss
aaa
jmp
lds
push
pop
adc
pop
mov
add
cld
mov
dec
bound
jno
nop
fldl
lret
cld
in
jno
test
pop
out
fwait
push
inc
mov
dec
int
push
sbb
xchg
lea
jns
mov
ss
les
and
xchg
cmp
es
mov
mov
imul
and
gs
inc
mov
add
rcll
pop
stos
mov
mov
negl
aaa
adc
dec
sub
dec
inc
fs
andb
adc
push
add
inc
pop
cmp
icebp
loope
stc
loop
cs
lock
mov
xchg
enterw
mov
andl
stc
fwait
jb
loopne
adcb
sbb
lds
data16
mov
dec
push
hlt
sub
adc
mov
out
scas
xchg
sub
jnp
jmp
dec
data16
jnp
dec
sub
scas
push
sbbb
jae
lods
push
cmc
mov
outsl
shll
mov
dec
aaa
dec
cld
data16
test
xor
into
cmpsl
leave
fs
or
xchg
pop
shrb
cmpsl
mov
sbb
or
sbb
xchg
cltd
push
aam
lea
les
arpl
pop
xor
and
mov
push
leave
jae
add
es
gs
adc
adc
lock
sbb
dec
jnp
leave
pusha
cmp
jle
push
dec
popf
roll
mov
push
lods
movsb
mov
test
inc
xor
lock
pop
scas
mov
out
fs
xchg
lods
outsb
inc
popa
popa
sahf
push
daa
push
aad
inc
dec
pusha
idivl
pop
out
mov
shll
je
fadds
cmp
add
imul
ljmp
jno
addr16
movsb
notb
fdivs
jg
and
popf
std
lea
adc
push
dec
mov
outsl
pavgw
lahf
push
mov
inc
popf
jge
push
out
mov
mov
cmp
and
jecxz
ret
push
out
ljmp
ret
cmp
mov
pop
aaa
sub
inc
arpl
movl
or
and
icebp
insb
jg
data16
cmp
or
sub
nop
fsubrs
mov
dec
inc
adc
push
leave
inc
stc
adc
movsl
xor
or
cmp
cmp
cmp
push
andb
ss
rcll
nop
push
mov
push
leave
in
sbb
test
jns
andl
mov
cltd
pop
dec
xchg
jge
and
mov
or
xor
adc
mov
dec
leave
fstpt
xor
leave
and
add
push
cwtl
mov
sbb
rcl
stc
cmp
or
rcrl
sahf
or
inc
negb
lock
fs
scas
imul
and
jl
cmp
xlat
mov
pop
mov
mov
stos
test
xchg
add
or
ds
fstpt
out
mov
lea
aaa
dec
mov
negl
in
fsubrs
jmp
shll
dec
nop
xchg
dec
lret
daa
inc
pop
cltd
jmp
insb
add
sbb
mov
cli
sbb
stos
jge
fldenv
shrb
popa
pushf
cmc
add
call
in
lahf
jb
cwtl
lahf
push
push
cmc
stc
cltd
inc
pop
lret
loopne
cwtl
pushf
jae
add
mov
lret
or
add
push
mov
out
cmpsb
rol
xlat
int3
rclb
mov
sahf
or
insb
int
lods
ja
loope
mov
jp
mov
push
int
xchg
loope
ret
or
push
hlt
adc
inc
cli
lahf
loopne
inc
repz
adc
sahf
cmpl
pop
pop
mov
mov
inc
sbb
es
lds
and
scas
jecxz
mov
js
mov
xchg
mov
shll
insl
sub
loopne
repz
add
repnz
adc
jecxz
pop
adc
pop
or
dec
shl
insb
ret
mov
sub
mov
scas
insb
mov
jne
add
es
mov
jb
mov
cli
aas
mov
addr16
cwtl
mov
gs
lcall
dec
pop
xchg
stos
jp
pop
xor
movsb
inc
aam
pop
int3
repz
add
out
xchg
shlb
out
xor
push
jmp
push
mov
or
inc
push
and
fwait
jecxz
outsb
out
pusha
sbb
push
jb
test
cli
jne
lods
pop
xchg
mov
cmc
sub
outsb
pop
fnstenv
lods
shl
sti
notl
cmp
cltd
or
dec
dec
pop
add
push
push
cmp
jg
pop
cmc
ss
outsb
into
push
jl
movsb
shll
adc
inc
frstor
cld
in
dec
fs
jge
imul
in
rolb
mov
push
sbb
mov
jge
in
sbb
mov
pop
add
daa
pop
push
xchg
cmpsl
xchg
push
fdivl
gs
sub
mov
ds
incl
xor
nop
daa
std
pop
sarl
mov
dec
jecxz
cs
pop
cmc
xchg
sub
inc
inc
push
hlt
inc
sub
mov
jecxz
mov
cltd
sti
call
push
out
xchg
mov
lods
lret
outsb
test
into
mov
pusha
adc
je
dec
mov
jp
pop
fdivrs
jecxz
call
jo
ljmp
adc
fs
popa
rcrl
daa
or
push
les
out
out
mov
push
inc
add
mov
cmp
inc
and
mov
fcmovb
cmp
pushl
cs
movsb
sti
in
pop
mov
sbbb
mov
mov
adc
inc
loopne
lods
dec
sbb
aam
sahf
pop
shlb
push
fsubp
lcall
adc
jo
cmp
cmp
mov
jg
push
stos
cmp
fbstp
aam
rcrl
lea
or
mov
pop
inc
rorl
and
dec
pop
xchg
dec
imul
loopne
add
in
pop
xchg
scas
or
and
xorl
fistps
mov
add
inc
mov
jg
sbb
and
xchg
movsb
push
xchg
pop
cmp
push
out
adc
mov
adc
inc
adc
add
loope
shl
outsb
sbb
lods
or
sub
hlt
inc
std
push
cmp
andl
sbb
je
out
movsl
xor
cltd
cld
inc
popf
clc
dec
cwtl
data16
xlat
add
adc
push
scas
pop
scas
mov
dec
das
sbb
repnz
icebp
aad
movsl
cmp
mov
movsl
push
mov
adc
ljmp
jne
jb
or
ret
loopne
push
stos
adc
xchg
nop
lock
into
scas
mov
xor
scas
mov
pop
in
pop
or
movb
xor
cwtl
jp
jle
movsb
fwait
and
shl
adc
jl
fxsave
outsl
jl
mov
sub
adc
xlat
fs
inc
mov
lods
pop
sbb
lret
and
sub
stos
xacquire
mov
jp
lods
pop
aam
loope
sub
ffreep
outsb
sub
inc
mov
inc
es
pop
in
mov
cmp
mov
arpl
pop
pop
jmp
jne
jo
pop
fimuls
push
cmp
mov
insb
pop
mov
shll
push
push
sub
popf
add
sbb
adc
pop
add
loope
loop
shl
rorl
pop
lahf
loop
pop
adc
loop
in
lcall
mov
dec
cli
push
hlt
fs
lahf
push
icebp
and
add
and
call
test
jge
mov
mov
cmp
xchg
pop
inc
sti
push
out
ficoml
scas
pop
inc
xchg
jp
push
dec
cmp
pop
lods
jle
cmpsb
inc
adc
scas
cmp
aas
xor
xchg
xchg
rorl
mov
cltd
fdivrs
in
rcrb
sub
nop
fsubr
movsb
mov
decb
pop
imul
shrb
sti
sbb
lds
cmp
mov
fstp
pop
ret
call
and
outsl
mov
icebp
in
and
cwtl
add
loope
pop
xor
shrb
push
fldenv
add
cli
adc
sub
fidivrs
int
adc
fists
fsubl
int
pop
adc
mov
mulb
xchg
stc
cld
pop
jle
fsubs
pushf
jo
fsubs
fsubp
push
stos
or
jle
nop
jns
xor
ljmp
push
xchg
xlat
sub
leave
mov
xchg
mov
push
and
sub
mov
xor
leave
fs
adc
adc
imul
xchg
out
out
sub
sbb
jae
xchg
push
iret
xor
pushf
inc
fiadds
adc
jnp
sbb
cli
lea
test
pop
and
lea
imul
jle
add
or
ljmp
pop
mov
test
out
pushf
data16
sub
stos
fisubrs
movsb
jns
push
movsl
into
addb
pop
hlt
cmp
and
jle
sub
xor
popf
idivb
jp
or
orl
push
scas
movsl
xchg
xor
mov
pop
lock
xchg
inc
xsaveopt
aam
xor
cmpsb
ja
shrb
xor
pop
jae
jno
dec
imul
std
sbb
sbb
xor
xchg
xchg
cmp
pusha
sahf
outsb
aas
mov
mov
adc
mov
gs
imul
mov
push
ficompl
xchg
lret
dec
pop
jp
int
pop
fisubrl
fucomp
mov
std
aas
lcall
xchg
push
mov
inc
test
cmp
xor
jle
jl
xlat
lcall
fistpll
xor
pop
jmp
jbe
inc
adc
fwait
scas
and
je
scas
or
cmpsl
mov
jmp
iret
leave
ss
fsubr
in
jle
mov
xchg
add
xor
sarl
pop
clc
inc
xorb
rcll
sbb
xchg
shl
rol
mov
sarb
jns
and
dec
push
and
mov
orb
clc
xchg
or
outsl
cltd
sub
push
jl
mov
cmp
mov
lcall
and
lods
dec
dec
xchg
shlb
sbb
mov
ljmp
in
or
in
and
jno
jne
or
gs
in
nop
repnz
mov
inc
or
cmp
cmpsl
push
stos
inc
pop
ret
dec
and
push
dec
lahf
push
fcoml
movsl
andb
dec
lea
stos
jne
and
pushf
xor
test
xor
sbb
scas
dec
pop
jmp
jb
mov
xlat
in
adc
xchg
or
das
in
andl
mov
ret
fs
and
mov
inc
testb
fdivs
ret
jle
and
xchg
add
data16
stos
pop
lcall
adc
clc
xor
sub
pushl
clc
xor
popa
outsl
icebp
adc
inc
push
in
xorb
xor
js
xor
sbb
add
jb
push
ret
out
cmpsl
push
rcrb
outsb
adc
outsb
jge
jnp
and
sbb
daa
cmp
shl
and
and
cmpsl
dec
outsl
imul
popf
shrb
fldcw
inc
pusha
into
inc
popf
aad
int3
dec
or
or
inc
mov
cmpsb
cld
push
mov
xor
dec
sbb
mov
data16
pop
mov
push
mov
dec
cwtl
push
in
int
inc
dec
jbe
out
push
inc
lds
inc
cmpsl
fs
mov
loop
jecxz
sbb
cwtl
mov
aaa
push
lods
jl
mov
mov
popa
fwait
mov
dec
ret
cmp
cmp
push
fstl
leave
mov
aas
stos
sbb
je
xor
mov
pop
stc
movsl
inc
movsb
pop
cs
pusha
jae
inc
or
sbb
pop
les
rorl
repnz
jmp
out
and
ja
push
fistps
inc
jnp
xchg
sub
arpl
inc
pop
pop
add
fadds
jo
daa
das
clc
xchg
sub
jp
sti
stos
fidivrs
fldt
or
cmc
dec
int3
adc
xlat
into
out
cli
iret
sbb
cmp
aad
and
push
repnz
add
ret
inc
dec
push
inc
mov
mov
cmp
inc
mov
cmp
test
std
and
das
iret
repz
pop
jge
adc
ja
mov
ja
jnp
cwtl
and
into
mov
xorl
cmp
clc
jae
pop
movsb
aaa
cld
outsl
lods
dec
in
jge
sahf
sub
xor
roll
dec
inc
add
in
je
push
jbe
sar
imul
adc
icebp
mov
repz
sub
mov
pusha
lahf
add
in
cmp
mov
arpl
mov
add
rol
js
int
push
stc
rcrl
pop
imul
imul
and
or
fucompp
xchg
push
dec
pop
sahf
cmp
lods
inc
pushf
in
cmpsl
int
pop
por
cmp
push
sub
pop
sarb
iret
push
daa
loope
jecxz
or
and
dec
les
xor
sbb
scas
mov
loop
xor
jmp
xor
sub
ficomps
or
test
cmpsb
inc
in
lds
jge
adc
mov
pop
fwait
push
push
iret
loope
dec
iret
aad
jmp
sbb
push
fimull
add
push
repz
daa
call
movsl
ret
mov
in
pop
adc
sbb
cmp
cli
pushf
daa
rcrb
lret
mov
sbb
sub
push
out
pop
adc
mov
push
push
out
pusha
divb
cmp
in
push
or
ss
sub
mov
add
aas
add
iret
cmp
push
adc
movsl
jno
in
repz
cli
xchg
sbb
lods
cmp
jge
stos
dec
movsl
out
out
test
lea
sbb
js
jns
sbb
test
dec
jp
lock
sbb
fistl
jmp
jne
in
mov
loop
mov
icebp
inc
mov
mov
iret
movl
cmp
clc
mov
jb
das
in
pop
dec
insl
jge
push
mov
mov
js
jmp
pop
jno,pt
add
and
fs
inc
lods
mov
jecxz
mov
mov
cltd
sub
bound
movsb
out
fistpll
mov
push
jne
out
mov
jl
xchg
mov
jle
pop
sti
movd
and
out
aaa
push
sbb
sbb
pop
inc
sbb
add
dec
push
outsl
popf
lods
mov
dec
clc
sti
leave
push
sti
sbb
or
inc
jmp
sbb
loope
mov
xor
lods
jl
ss
cmp
fucomp
mov
loope
push
sbb
push
inc
inc
dec
adc
fiaddl
fisttps
mov
inc
hlt
sub
icebp
daa
outsl
inc
arpl
scas
sbb
imul
into
mov
pop
add
outsl
aad
mov
push
fmulp
adc
cld
aad
xor
scas
in
mov
stc
and
outsb
cmc
bound
jmp
out
add
xchg
cmp
ret
out
sbb
sub
mov
fnstenv
pop
xor
inc
dec
cltd
push
mov
mov
int
lret
jg
leave
sub
xchg
push
loop
fsub
je
mov
aam
cmp
cmp
in
lret
repnz
addr16
cmp
and
mov
mov
inc
jo
bound
inc
mov
adc
andb
shrl
pop
sahf
xchg
dec
inc
stos
mov
frstor
dec
and
icebp
mov
mov
cmp
xchg
pop
inc
mov
mov
cld
jnp
idivb
ljmp
push
xlat
ljmp
or
pop
xor
pop
inc
xchg
mov
push
mov
imul
fs
or
rolb
movsl
push
mov
sbb
or
xchg
icebp
mov
lods
nop
mov
lahf
pop
and
mov
mov
repnz
add
ja
adc
pcmpeqd
dec
sub
movsl
and
push
in
mull
sbb
pop
arpl
or
adc
jge
pop
cli
inc
fidivrl
adc
scas
pushf
cli
cmp
adc
cmc
xor
out
lock
inc
aam
xchg
push
lcall
pop
pushf
pop
cmp
ficomps
xchg
ljmp
out
in
stos
imul
stos
jp
movsb
int
test
jo
push
push
pop
push
js
jns
xchg
mov
push
fisubrl
push
fmuls
fbld
xchg
mov
mov
adc
add
and
xor
bound
pop
outsb
add
xchg
mov
pinsrw
clc
iret
flds
pop
jno
fs
test
cmc
jmp
lret
lret
dec
add
call
mov
xchg
xor
shlb
lret
jno
nop
push
jb
in
dec
cli
dec
pop
fistpll
andb
fninit
js
inc
and
jmp
pop
push
mov
pop
lds
pop
sub
mov
push
add
push
push
in
ret
jae
js
ljmp
hlt
inc
mov
cmpsl
js
lret
out
mov
xor
pushf
stc
push
repz
mov
lret
xchg
imulb
sbb
cld
outsl
and
insb
imul
lcall
and
lds
hlt
xchg
imul
jp
mov
fs
inc
xlat
pop
xchg
mov
iret
scas
mov
mov
cld
cltd
aam
int
es
repz
push
outsl
outsb
test
lret
in
mov
push
mov
pushf
enter
dec
cmp
imul
push
sub
sbb
in
pop
idivl
push
add
addr16
dec
dec
mov
shl
sahf
lea
mov
mov
popa
xor
cmpl
add
adc
inc
mov
jno
imul
lods
push
insb
or
fsubr
cld
rclb
mov
mov
das
movsl
test
movsb
sti
repnz
loope
mov
cmp
popa
cld
test
lea
add
xchg
std
sbb
jg
and
sbb
jecxz
jl
test
fidivs
std
repnz
jno
or
push
rorb
insb
sbb
jae
inc
cmp
xchg
movq
dec
add
rclb
ds
xlat
mov
xchg
mov
ret
dec
push
jecxz
cli
enter
shlb
jbe
outsb
mov
push
and
aas
pop
int3
xor
sub
push
sub
adc
ja
xchg
lods
push
mov
cmp
popf
hlt
and
push
clc
or
cmpsb
or
jecxz
xlat
adc
in
adcb
pop
cmpsb
pop
mov
pop
xlat
adc
mov
jb
lods
lret
xor
clc
push
inc
faddl
hlt
push
dec
ss
lods
hlt
in
shlb
outsb
ret
mov
push
ljmp
pop
imul
loop
xchg
dec
stos
or
push
insb
sbb
push
repnz
inc
and
psrlq
inc
dec
fdivl
lcall
cmp
sub
testl
sub
out
fbstp
gs
mov
outsl
push
push
shl
dec
out
or
inc
int3
dec
push
mov
shrl
ficompl
jmp
pop
ja
and
xchg
xchg
insl
push
push
sub
pop
movsl
hlt
mov
scas
jl
test
sbb
mov
jl
adc
ss
lods
repnz
loop
sub
stc
add
rcrl
clc
push
popa
add
out
or
flds
xchg
adc
push
ljmp
jno
and
mov
pushf
inc
xor
xchg
mov
sub
out
push
wbinvd
mov
loopne
icebp
addr16
pop
mov
outsl
add
pop
ficoml
xchg
ljmp
js
out
lds
dec
inc
gs
adc
adc
and
sbb
mov
sub
lods
insl
hlt
rcrl
xchg
lods
add
jmp
leave
mov
imul
mov
sub
lods
in
aad
sbb
mov
push
sbb
adc
dec
and
aam
cli
dec
stos
insl
insl
repz
cmp
cmp
repnz
fsubrs
push
sbb
push
lcall
and
push
out
mov
mov
ret
push
sbb
fisubrl
imul
inc
push
pushf
and
ja
cwtl
and
jmp
xchg
aas
dec
mov
and
into
lods
dec
mov
test
int
xchg
cmc
pop
xchg
xor
inc
xor
mov
je
push
inc
sub
inc
fcoms
das
imul
dec
sbb
xchg
ja
jl
dec
fists
mov
rol
pop
xor
add
dec
mov
pusha
adc
imul
mov
sbb
adc
pop
xor
or
ret
out
stos
push
cs
pop
bound
lods
xchg
in
mov
inc
lea
pop
dec
test
imul
shl
outsb
or
aaa
sti
jae
fs
imull
sbb
testb
jge
push
imull
jae
pop
push
push
mov
xchg
mov
push
lahf
mov
jl
test
invd
mov
sbb
add
dec
filds
in
sbb
mov
xchg
add
jle
je
inc
inc
divl
ja
cwtl
out
sahf
push
xor
repz
dec
mov
sub
xchg
aas
adcb
xchg
adc
pop
mov
jae
pop
lret
out
push
jge
xchg
and
add
std
xchg
jge
mov
dec
sbb
dec
fcompl
ret
xor
dec
mov
xor
aaa
into
cs
call
push
mov
clc
sub
mov
adc
out
andb
dec
loope
call
push
push
mov
fisttpll
scas
pushw
fwait
xchg
js
jbe
out
jmp
movsb
inc
fcom
fadd
mov
cmp
jb
ss
pop
stc
lea
fnstenv
adc
hlt
popa
xchg
mov
cmpb
in
inc
bnd
je
pop
push
mov
lea
inc
inc
add
xchg
sub
scas
jle
mov
jnp
out
fstl
int
or
mov
jbe
aaa
and
mov
push
and
lods
add
xor
mov
push
ds
push
mov
sarl
addr16
fnstsw
sbb
mov
dec
call
inc
dec
adc
mov
push
sahf
bound
dec
sbb
lahf
repz
cmp
insb
loop
pop
jecxz
xor
fs
jns
and
ja
fadd
sbbb
xor
loop
in
adc
and
or
clc
inc
cmp
and
sbbl
popa
mov
ficomps
xchg
mov
lock
hlt
and
fwait
inc
mov
fmulp
test
sub
pop
lcall
inc
cli
mov
int3
fists
jecxz
pop
jg
arpl
sti
out
test
aaa
sub
push
add
int3
ss
lcall
xchg
push
xchg
cmp
imul
decl
stc
int
lahf
es
adcb
fsubrl
sbb
lea
sub
aad
mov
jno
into
cmpsb
scas
rcl
push
in
sub
push
xchg
in
add
js
lods
test
stos
pop
into
xchg
push
in
jge
adc
out
call
arpl
sbb
mov
scas
jbe
sbbb
jno
xor
cmp
lods
mov
decl
mov
push
repz
insl
xchg
mov
mov
jnp
orb
jns
test
and
fldl
jbe
dec
movsb
xor
jne
pop
aas
or
mov
call
add
sbb
pop
repnz
dec
gs
xchg
outsl
jne
arpl
mov
sbb
sub
lahf
fmull
mov
mov
outsl
rol
in
insl
inc
mov
push
mov
pop
subl
jg
aas
test
cli
ret
and
std
sti
jl
aam
push
and
xchg
pop
aaa
hlt
data16
adc
sub
in
sub
inc
cmpb
leave
cli
into
push
cmp
fimuls
hlt
call
inc
ss
xlat
sub
cmc
cmp
imul
shl
mov
ds
xchg
daa
mov
cmp
lock
xchg
inc
adc
add
and
xchg
cs
gs
mull
xchg
mov
adc
fnop
rcrl
pop
mov
cmp
inc
sbb
mov
in
inc
inc
push
lock
and
cmc
dec
bound
jno,pt
out
rcrb
jg
cltd
or
mov
loop
js
lds
icebp
lahf
mov
xchg
mov
out
push
popf
xchg
push
cwtl
xchg
or
and
andb
les
cmp
bound
loope
xchg
bound
popa
pop
pop
sbb
and
cmp
dec
pop
push
aam
je
sub
jno
and
xor
mov
jg
sub
int3
loopne
xchg
call
cmpsb
sub
test
cmpsl
repnz
out
mov
pop
insl
push
cmpsb
ret
add
sbb
sti
cmp
adc
ret
aad
hlt
and
and
pop
adc
into
popa
in
mov
mov
adc
pop
ds
gs
loopne
lods
add
and
cmp
insl
push
mov
inc
stos
mov
or
adc
adc
sbb
int
or
pop
lea
outsl
jnp
hlt
rorl
out
jmp
mov
bnd
sub
inc
rorl
pop
stos
repnz
call
in
fnstenv
add
inc
popf
gs
cmpsb
push
push
aas
aad
cli
xchg
mov
bound
push
out
aam
push
mov
loopne
jp
cld
xchg
lret
icebp
outsb
sahf
jno
sbb
pop
mov
jge
mov
dec
ret
out
push
or
cmpsl
mov
fadds
les
push
fwait
mov
int3
ss
clc
sub
mov
das
mov
push
xor
adc
ljmp
pop
inc
pop
cld
xchg
shl
in
adc
fwait
jmp
mov
jno
add
xchg
es
sbb
das
sbb
mov
adc
test
jg
cld
adc
fcoml
fucomp
mov
jbe
imul
sub
pop
in
loopne
out
outsl
cmc
jnp
adc
ret
xlat
dec
divb
mov
mov
clc
imul
popf
fldenv
sarb
cmp
mov
loopne
rclb
mov
arpl
loope
adc
cs
sub
repz
pop
sbb
and
sbb
and
and
inc
or
xchg
testb
xor
pop
jno
addl
icebp
lcall
imull
scas
dec
mov
popa
sbb
fnstcw
test
lcall
mov
add
mov
ss
adc
mov
or
je
scas
push
aad
jle
mov
inc
cmpsl
das
pop
pop
and
ja
push
cmpb
add
popa
xorb
imul
cmp
pop
jne
pop
inc
outsl
push
je
cmp
sbb
mov
mov
sub
mov
addb
xor
jnp
test
xchg
mov
jp
inc
push
fwait
inc
scas
add
mov
push
fsubs
rcrl
add
sub
jl
ja
xor
mov
xor
add
adc
leave
jbe
call
subb
push
fists
sub
xchg
fsts
pop
notw
repz
or
outsl
push
aam
adc
adc
mov
add
test
and
cmpl
subl
cltd
in
xor
or
ret
insl
jb
xor
insl
mov
data16
shrl
sub
mov
fnstcw
idivl
in
jbe
and
add
ss
add
sub
or
ret
push
repz
add
lods
lods
repz
lahf
xor
les
and
idivb
cmpsb
mov
push
clc
jns
dec
or
mov
frstor
cld
pop
jmp
push
jb
popf
or
les
xchg
xor
push
sahf
scas
add
fisttpl
sub
scas
mov
dec
mov
and
or
pop
dec
ja
aas
push
je
shl
and
out
jp
repnz
bound
push
aad
mov
and
pushw
jbe
fadds
cmp
mov
cmpsb
mov
out
neg
sbb
sub
lret
ja
cld
inc
adc
adcb
pop
cld
cmp
mov
cmp
aas
cmp
or
fwait
fbld
ljmp
fnstenv
push
gs
lcall
es
sbb
add
lea
js
shlb
add
aaa
mov
jno
outsl
or
movsb
outsl
add
xor
shrb
in
movsb
repnz
jbe
mov
jmp
and
sbb
xchg
inc
xchg
mov
cmp
push
imul
mov
dec
ret
nop
xlat
and
add
xor
addl
mov
push
push
call
dec
xchg
inc
sub
rorb
jmp
mov
push
es
idivb
fsubs
xchg
movsb
shl
cli
jne
jp
cmp
enter
cmp
nop
cli
jae
dec
movsl
sbbb
push
mov
idivb
mov
jns
ffree
addr16
cld
xchg
pusha
jne
out
imul
es
rol
out
outsl
inc
push
jns
add
mov
lcall
adc
shlb
jle
sbb
stc
daa
sti
roll
incb
and
pusha
cmpsl
push
or
js
cli
test
sbb
xchg
and
push
mov
sbb
jmp
add
negb
sbb
sbb
loope
adc
int3
lock
jmpw
inc
cld
aad
movsb
in
test
cmp
push
xchg
cmp
or
in
nop
dec
mov
nop
mov
pop
fidivs
cmc
push
gs
idivl
jno
cmp
push
adc
mov
rorb
or
and
xlat
mul
jno
jg
adc
scas
add
inc
inc
icebp
std
cltd
std
mov
and
mov
mov
aad
pop
xchg
fs
mov
das
in
dec
clc
cmc
dec
ds
fcoms
jbe
mov
jne
xchg
add
std
sbb
loope
jle
jnp
je
fmulp
mov
js
fwait
bound
lahf
jp
insb
mov
mov
jbe
jnp
jae
lock
jge
nop
arpl
call
inc
into
or
lcall
mov
ljmp
jno
push
out
xor
inc
into
out
sbb
jo
jmp
mov
cwtl
adc
mov
lods
xor
rcr
loop
or
adc
bound
and
inc
mov
cwtl
ss
aaa
cs
pop
push
or
cmp
xchg
xchg
sbb
add
cltd
cltd
mov
sbb
lods
lods
xor
into
test
adc
pop
ds
cwtl
call
ljmp
test
pushf
frstor
aas
add
shrb
ljmp
jne
mov
jb
pushf
jecxz
push
stc
stc
pop
ret
rcrb
stos
jne
adc
stc
mov
inc
inc
or
je
push
jae
in
bound
push
int
xor
out
test
push
shlb
or
scas
daa
das
sbb
xor
xchg
aam
adc
xchg
loope
mov
and
imul
arpl
hlt
sbb
push
in
lret
add
mov
dec
test
ret
scas
pop
adc
hlt
sbb
push
mov
out
test
mov
pop
ja
daa
xor
shl
dec
ficomps
out
jo
mov
gs
sub
xchg
fs
jmp
fsubs
jmp
stc
xchg
fstpl
pop
cmp
in
ret
pop
hlt
and
pop
sbbl
call
out
je
addr16
cs
inc
xchg
add
rorl
pop
xchg
into
xchg
add
xor
pop
adc
jecxz
adc
mov
sbb
hlt
cmp
bound
mov
mov
je
bound
nop
mov
int
push
lds
mov
ret
js
add
inc
mov
cmp
cmp
lea
mov
sbb
clc
lods
rorl
roll
xor
movsl
sti
pop
pop
cmc
push
mov
jae
mov
jae
lock
jmp
cmp
jo
jmp
xchg
xor
sti
inc
sbb
cld
mov
xchg
test
xor
lahf
enter
lret
leave
subb
ret
aad
mov
push
stos
jg
push
and
adc
pop
ja
stc
jg
ds
jns
jno
sbbb
xchg
push
add
push
sub
adc
pop
inc
out
stos
xchg
aaa
repz
mov
ret
jp
iret
gs
push
push
jb
in
std
addl
movsl
push
mov
fisubrl
loope
adc
push
inc
mov
mov
leave
xchg
sbb
adc
aaa
mov
xor
mov
in
or
add
sub
stos
outsb
imulb
lods
mov
lret
xadd
clc
xchg
daa
fwait
ja
lahf
push
clc
sbb
nop
dec
cmp
roll
lods
cmp
pop
mov
jnp
add
idivb
stos
loopne
and
cmp
test
sbb
popf
repz
cmp
clc
dec
imulb
lret
fidivs
into
xor
pushf
add
pushf
addl
dec
push
sub
cmp
fbstp
fwait
clc
sub
dec
mov
cwtl
xlat
jnp
fsubr
clc
pop
jae
xor
ja
adc
stos
sub
jbe
movsb
cmp
push
xchg
sbb
cwtl
shl
js
arpl
pop
pop
add
jno
gs
xchg
add
mov
sbb
mov
mov
aad
cli
push
sub
and
ret
cmp
mov
lret
push
lock
fmul
and
leave
mov
xor
popa
xor
add
mov
pop
push
mov
jle
rorb
sbb
add
cwtl
addl
sbb
sub
mov
jle
xor
fs
mov
subl
pop
xchg
mov
ret
arpl
lods
stc
xor
sub
in
adc
scas
inc
mov
pop
lock
push
int
xchg
ja
cmpsl
sub
xchg
inc
or
mov
mov
daa
ljmp
push
sahf
jmp
call
mov
xor
ret
clc
stc
loopne
and
jno
lods
cmp
scas
sbb
jae
cltd
or
push
push
test
popf
daa
xor
fwait
lahf
dec
pop
sti
mov
xor
roll
pop
out
daa
sahf
sub
pop
jo
lea
push
sbb
adc
xor
clc
add
cld
push
stos
int
gs
xor
or
sub
or
clc
aaa
xlat
mov
jle
push
xchg
adcl
sbb
fisttpl
repz
pop
mov
add
in
mov
in
stos
push
es
xor
inc
pushf
inc
fisubl
aad
outsb
sub
jge
dec
es
xchg
pushl
aaa
ss
iret
cmpb
idiv
jno
pop
stos
in
sbb
loopne
fildl
dec
sub
mov
adc
aam
jle
stc
cmc
mov
push
push
rorl
adc
xor
push
dec
divb
clc
cltd
daa
test
sub
xchg
int3
cmpb
das
mov
push
jecxz
push
push
mov
inc
gs
mov
stos
jbe
xor
xor
pop
ljmp
std
xor
push
mov
sbb
push
cmc
daa
repnz
stos
es
push
or
test
xchg
mov
lret
flds
xchg
ja
xchg
test
fldl
int
outsb
jmp
or
stc
jns
and
and
test
mov
repz
adc
push
arpl
ds
push
fwait
mov
movsb
jne
in
sub
outsb
jmp
jg
xchg
or
js
clc
and
sub
mov
mov
les
sbb
mov
mov
cmp
aad
ficomps
js
inc
jno
js
jp
cmpsl
cmpl
xor
sub
cmp
sti
pusha
fwait
xchg
shll
pushf
ljmp
imulb
or
push
lcall
push
mov
rcrl
mov
loop
jle
inc
push
aaa
sub
inc
jnp
sbb
push
jmp
adc
cld
jne
fcmovnbe
add
sub
shrl
dec
mov
dec
repnz
stc
fistl
ss
sbb
stc
aad
andl
int3
mov
mov
cmc
in
pusha
jmp
shl
or
fsubrs
jb
daa
mov
scas
xor
mov
add
pop
push
inc
push
es
pop
jno
je
clc
xchg
orl
xchg
repz
in
ljmp
inc
mov
cmp
mov
jbe
test
push
jmp
cmp
movsw
popf
fnstenv
push
rorl
lcall
sub
sbb
mov
add
sar
lods
inc
jecxz
lret
xor
inc
ljmp
enter
cmp
daa
or
ss
sub
pop
add
repz
cmpsb
jge
inc
add
jbe
add
ret
jae
lods
int3
mov
aam
in
push
gs
mov
or
es
mov
xor
ds
mov
insb
add
mov
mov
or
mov
pop
je
dec
and
push
jmp
jp
insl
xchg
aaa
das
into
or
rcll
dec
xchg
stos
out
mov
dec
pop
in
cmp
sub
sub
insb
adc
pusha
jbe
adc
fsubrl
fidivs
stc
push
lret
xlat
daa
inc
and
fnstsw
ds
xor
stc
mov
push
adc
int
aad
mov
push
cmpsl
ds
mov
bound
lcall
inc
adcl
inc
rorb
and
pop
les
dec
ja
aad
or
loope
arpl
outsl
out
add
sbb
pop
movsl
xor
lcall
xchg
jbe
inc
mov
jmp
pushf
in
ret
xchg
jge
cmp
add
cmc
and
inc
push
jo
mov
scas
mov
or
adc
sub
fs
scas
sarl
pop
mov
lock
sbb
cs
jno
sarb
clc
popa
pusha
push
imul
mov
fimuls
repz
outsb
call
enter
inc
outsl
and
sbb
aas
dec
mov
lds
insb
mov
dec
lea
xchg
pop
mov
mov
je
jp
xlat
push
loop
cmp
mov
push
lock
in
dec
sub
xchg
mov
cltd
cmpsl
loope
fstps
and
jle
ret
fnsave
push
repnz
pop
push
outsb
inc
mov
add
rcrb
data16
lock
imul
sbb
fistpll
in
dec
push
inc
add
sub
pop
mov
int
pop
pop
sahf
sub
ss
fdivs
jle
dec
popf
lock
and
out
lock
push
test
jge
or
xorw
lds
xor
hlt
cmp
ss
hlt
push
in
int
jecxz
or
mov
mov
test
jmp
in
lds
divb
cmpsb
insb
pop
jb
enter
xor
nop
sbb
mov
sahf
pop
repnz
pop
xchg
insb
xchg
stc
jo
fwait
and
aas
pop
jecxz
xor
por
bound
mov
sbb
movsb
jg
add
insb
stc
loop
daa
js
pop
fadd
sarl
nop
out
xor
jge
fsts
jae
fs
orl
repnz
into
mov
xchg
or
cltd
sbb
add
flds
lock
out
jne
ljmp
and
cmp
lret
cld
push
add
roll
pop
jb
in
dec
rcl
dec
and
imul
xor
jb
lret
call
fildll
outsl
out
inc
test
clc
lahf
loope
fstpl
inc
mov
movsb
outsb
inc
into
aam
fcoms
repnz
push
inc
push
dec
clc
xor
or
nop
aas
test
stc
cmp
sti
dec
test
call
addl
dec
in
addr16
jecxz
adc
cwtl
fidivs
and
and
out
pushf
adc
mov
int3
add
push
repnz
imul
pop
sbb
cli
cmp
cmpsl
mov
outsl
xor
sbb
aaa
or
icebp
mov
inc
pushf
and
imul
xchg
and
insb
mov
xor
sbb
sbb
daa
iret
sbb
sub
mov
adc
cmpsl
cmpsl
sub
fnsave
pop
fldcw
and
mov
rcl
push
mov
inc
fsubs
ret
add
jne
or
movsb
xchg
jmp
and
and
int
push
test
fiaddl
mov
leave
sar
and
mov
out
or
mov
jge
jecxz
test
fcoms
lahf
pushf
stc
or
sub
and
loop
jl
dec
fadds
ret
dec
xchg
mov
jecxz
adc
shlb
and
in
mov
dec
stc
je
scas
imul
cs
pop
dec
dec
and
xchg
int3
inc
mov
dec
insl
or
cli
les
cli
aad
lock
in
mov
pop
mov
mov
push
scas
dec
mov
sbb
xchg
xor
xor
pop
sub
lret
mov
pop
xchg
and
cmp
mov
loopne
sbb
jmp
je
jno
aad
mov
dec
loope
jp
rol
dec
fadd
sbb
or
xchg
mov
push
bound
mov
mov
cltd
push
outsl
insl
pop
adc
ret
sbb
insl
cmp
hlt
mov
jo
pop
sub
xlat
cmp
scas
fisubs
or
adc
jecxz
mov
fildl
pop
sub
sbb
jns
popa
pop
out
les
pop
sbbb
leave
aam
push
cli
inc
int3
mov
lods
into
iret
pop
sub
fsubs
test
fs
inc
jbe
arpl
jbe
lret
cld
dec
fldcw
xchg
jae
xor
push
inc
mov
mov
mov
mov
cmc
dec
out
loop
in
mov
aad
jae
pop
xchg
cs
jnp
in
fsts
call
or
ja
or
lea
xchg
sbb
mov
push
jbe
mov
imul
call
je
xor
arpl
and
test
addb
pop
clc
lret
xchg
fsubr
push
xor
mov
jecxz
data16
in
lds
cmp
pop
repnz
add
xchg
or
jge
mov
jecxz
sub
test
mov
mov
cmp
xlat
xor
addr16
jmp
scas
mov
xor
xchg
montmul
cmpsb
pop
pop
arpl
dec
mov
inc
not
outsb
in
fnstenv
inc
jbe
mov
stc
or
shl
jnp
push
mov
add
mov
mov
ja
xor
cmpsl
call
bound
in
pushf
lcall
mov
mov
xlat
or
push
mov
fnstcw
cld
inc
dec
xchg
sub
pop
push
or
in
inc
push
and
je
stos
ficoml
push
inc
adc
and
daa
push
mov
xor
xchg
aam
push
divl
lods
mov
in
jno
or
cmc
mov
std
aaa
gs
add
scas
sub
sbb
mov
pop
ss
xor
stos
mov
subl
inc
mov
inc
fstps
lret
hlt
jnp
push
popa
push
jmp
adc
pop
xchg
push
pop
clc
push
lods
cmpsb
cmp
inc
lcall
push
xorb
xchg
xchg
mov
xor
lock
les
rcrl
mov
pop
lods
in
xor
dec
push
adc
mov
pop
sub
jmp
jb
mov
mov
mov
call
into
pop
and
in
test
call
cmp
dec
xchg
dec
sbb
popa
adc
ds
imul
aam
in
out
jl
sub
and
andl
jg
int3
pop
cs
add
jne
push
cmp
sub
or
mov
leave
and
and
mov
cmpsl
inc
in
xlat
xor
dec
cmp
push
inc
mov
stos
jo
insb
dec
jecxz
adcb
out
cs
out
ss
int3
fisubrs
stos
and
les
popf
sbb
into
dec
movsb
fucomip
mov
movsb
inc
data16
xor
test
pop
cmp
push
sahf
movsb
adc
jae
xchg
mov
inc
pop
jne
or
loope
add
out
inc
loop
repz
lcall
insb
mov
aad
jg
das
es
sbb
loop
sub
rolb
pushl
rclb
test
aaa
fidivl
add
dec
gs
dec
jae
ja
nop
dec
es
sub
mov
and
adc
jne
aad
jno
inc
fs
outsl
cmp
lods
cld
dec
mov
test
jbe
xorb
jae
mov
nop
out
rol
xor
fwait
aaa
jb
xchg
popf
stc
cmp
adcb
fisubrl
sbb
push
or
cmc
shll
das
mov
ficomps
dec
sbb
shll
imul
or
popf
pop
pusha
call
aas
dec
mov
push
xorb
lahf
mov
in
movsb
cmp
in
test
pop
iret
xor
nop
sbb
xchg
push
test
add
pop
ja
daa
rcrl
pop
lcall
adc
jg
mov
in
mov
jns
mov
inc
push
sub
shrb
icebp
cli
jge
lcall
and
pop
loop
cmp
les
testl
add
inc
pop
ljmp
xor
and
dec
cmp
inc
out
jg
add
xor
fistpll
xchg
xchg
adc
movsb
ret
jmp
cmpsl
xchg
jo
fxch
fsubrp
push
rolb
adc
and
cmp
mov
or
adc
dec
pop
adc
rcrl
push
jns
lea
rclb
adcl
rcrl
sub
xor
stos
outsl
jg
scas
ffree
outsb
out
xchg
hlt
cmc
pop
add
das
fisttpll
mov
jbe
jae
comiss
movsl
aas
call
fiadds
test
jno
aas
push
cmp
mov
shl
xor
inc
fnclex
mov
inc
xchg
loope
scas
push
mov
push
arpl
push
scas
jno
mov
jne
insl
adc
pop
fnsave
rcl
pop
das
mov
pushf
xor
into
sbbl
sbb
loop
mov
pop
shrb
and
adc
mov
push
jno
mov
dec
sbb
ss
adc
mov
mov
mov
arpl
movsb
cmp
xchg
mov
sub
movsb
ja
test
pop
arpl
daa
sahf
das
cmp
packsswb
outsb
lods
push
mov
pop
sub
sti
sbb
pop
and
xchg
sub
test
mov
gs
shl
test
cmp
push
mov
adc
les
sbb
sub
loope
add
push
push
cs
leave
scas
pop
push
insl
mov
test
sub
sub
inc
movb
mov
mov
sub
push
imul
ss
cld
push
push
popf
cmp
xchg
pop
in
rclb
push
xor
push
sbb
push
dec
xor
insl
mov
push
xchg
jge
imul
mov
dec
dec
imul
out
dec
mov
lds
adc
jbe
xlat
or
sti
rclb
push
sbb
in
or
aaa
cmp
dec
fbstp
cmpsl
xorb
or
xorl
aas
fisubs
dec
int3
out
mov
hlt
iret
test
popa
movl
xor
mov
in
int3
jno
mov
mov
push
add
mov
push
data16
scas
inc
fiadds
mov
xor
jno
movsl
sub
or
mov
cmp
sbb
cmp
mov
popf
jmp
dec
pusha
dec
loop
insl
lods
xchg
lahf
mov
inc
in
lahf
cmp
jge
cmpsl
push
out
test
std
das
cltd
mov
adc
cwtl
push
insl
call
es
adcl
jle
sahf
or
lahf
je
xchg
cmpsl
movsl
pop
and
sub
icebp
js
jo
push
pop
xor
jns
pusha
lods
std
push
lret
int3
sub
gs
pop
pop
test
imul
outsl
insl
add
jecxz
lods
mov
and
jae
mov
les
and
jns
adc
orl
pop
jb
pop
or
xor
mov
pop
repnz
std
dec
mov
adc
xchg
adc
jno
cmpsl
push
enter
push
test
sub
sahf
mov
adc
sbb
dec
dec
stc
pop
out
lret
fwait
aad
shrl
or
jns
pop
pop
dec
lea
or
and
mov
mov
enter
call
inc
inc
dec
pop
pop
je
xchg
cs
inc
xchg
mov
xor
jl
outsl
scas
mov
cmpsb
jp
jno
imul
adc
stos
inc
lods
test
inc
mov
movsl
mov
sti
pop
xor
scas
das
test
adc
addr16
insb
inc
cmp
pop
lret
or
das
nop
mov
lods
and
push
push
inc
jnp
jb
jo
adc
mov
insb
cli
lods
mov
add
push
push
jno
cmp
dec
rcll
jg
jne
testb
ja
mov
push
aam
push
jno
xor
mov
sbb
ret
cmp
stc
push
aas
cmp
aad
aam
lea
adc
icebp
xchg
call
add
pop
sbb
inc
cmp
jecxz
dec
sbb
pop
mov
pop
movaps
xor
push
cmp
stc
and
fildll
dec
mov
ret
aad
and
mov
enter
xor
push
outsb
sub
xor
xor
push
and
push
or
shrl
out
push
cmc
lret
push
in
push
push
je
imul
mov
pop
out
js
enter
out
dec
cmp
pmulhuw
or
sub
ss
sub
cmpsl
cltd
test
lea
pop
gs
pusha
imul
mov
sub
push
int3
mov
jle
sub
sbb
inc
and
cmp
mov
in
clc
popf
dec
loope
or
call
shll
sti
ja
shlb
xor
loop
mov
dec
jg
les
insl
cs
out
dec
repz
bound
loop
lea
xchg
mov
pusha
ja
shlb
push
test
lock
jbe
pop
mov
loope
cli
xlat
jae
adc
sbb
jge
xchg
sbbb
cmp
sub
inc
cli
mov
jne
pop
push
or
adc
inc
push
adc
into
fsubl
std
xor
pop
xchg
loopne
dec
adc
into
iret
jae
dec
shrl
and
jnp
cmp
or
scas
pop
testl
jle
mov
ret
sahf
cmpsl
cmc
cwtl
mov
pop
popf
lods
xor
sti
or
xorb
pushf
mov
rclb
fiaddl
loopne
and
stos
fadd
sub
stos
inc
negl
adc
and
jb
inc
shll
dec
repz
push
lcall
adcb
arpl
lea
xchg
jne
mov
lret
lret
mov
shl
jae
mov
fists
jnp
movsl
mov
jbe
or
pop
and
inc
adc
or
bound
mov
jmp
and
xor
sub
jg
lods
stos
cmp
sbb
push
test
loope
pop
xchg
test
mov
mov
pop
mov
sbb
sub
int3
sbb
inc
lds
mov
or
inc
lea
out
andps
insl
jp
pop
sub
xchg
mov
mov
lock
gs
mov
adc
sub
out
mov
adc
sbb
push
popf
mov
jp
inc
mov
cltd
std
sbb
xchg
mov
pop
adc
or
sub
call
stc
data16
add
inc
stc
bextr
pop
loope
lds
sbbl
stc
push
sbb
mov
lret
pop
jno
filds
add
cmp
inc
mov
or
sub
pop
fildl
mov
add
mov
jb
add
mov
mov
fistpll
and
mov
or
out
mov
mov
stos
cs
rcrl
shrb
mov
hlt
repnz
and
dec
loope
jp
dec
cmp
clc
aas
xor
mov
insb
or
sbb
push
xor
popf
xor
lods
mov
shr
shl
call
or
dec
cltd
dec
cmp
imull
popf
pop
je
gs
fnsave
out
push
movsb
int3
sti
xchg
mov
pusha
sbb
xchg
cmpsb
cs
stos
jae
add
mov
clc
adc
sub
mov
add
outsb
enter
imul
ljmp
mov
lock
cmp
into
out
push
jmp
or
and
xchg
in
call
xchg
bound
xchg
and
inc
std
inc
inc
pop
dec
scas
in
and
pop
mov
stc
popf
inc
fnsave
jno
sbb
sub
or
les
hlt
and
call
cld
mov
dec
cmp
ficoml
int
enter
popa
ljmp
jno
push
mov
cld
call
push
inc
aaa
inc
mov
cmp
xchg
stos
ficompl
push
push
or
cmpl
mov
in
mov
shlb
mov
mov
pusha
idivl
fsubr
mov
jle
xlat
ja
in
scas
ds
test
xchg
push
clc
adc
push
aad
jae
mov
mov
aam
daa
inc
sbb
cmp
cmpsb
fcomip
scas
and
inc
and
mov
push
scas
push
rclb
fisubs
andb
mov
mov
mov
pusha
inc
or
mov
insl
out
stc
sahf
sti
adc
ljmp
pushf
out
lcall
lock
cmp
or
add
jp
pop
and
dec
push
sub
popf
rcr
jae
or
js
cli
xchg
std
ds
mov
fisubl
les
sbb
repz
jp
sbb
add
cwtl
repz
sbb
lret
adc
dec
jne
adc
cmp
out
push
test
or
jno
push
cmp
mov
push
ljmp
mov
pop
sbb
adc
rcrb
or
dec
mov
cmp
lods
mov
push
cld
fimull
mov
loopne
cmp
jns
push
adc
xchg
xchg
popa
dec
loope
jl
sbb
mov
dec
push
push
and
push
in
jmp
jns
sbb
mov
inc
rcrb
adc
mov
iret
push
int
ficoml
shrl
jno
outsl
sub
adc
jp
mov
cmp
aam
push
push
and
aaa
fsubr
push
dec
sbb
aam
js
sub
mov
shrl
lret
bound
ja
pop
jmp
push
ds
cmp
xchg
push
push
dec
lahf
jno
or
loop
gs
xchg
add
mov
xor
ja
cmc
mov
jo
ror
cmp
pop
imul
xor
js
out
cmp
rcl
leave
jne
test
aam
add
lret
push
xchg
repnz
cmpsl
mov
dec
lret
xor
inc
jns
xor
mov
cld
inc
add
dec
sti
cmpsb
or
lods
and
insl
dec
xor
mov
adc
or
lods
gs
shlb
mov
out
jge
fwait
xchg
loopne
pop
jg
fwait
loop
inc
xchg
repz
sub
cmp
mov
pop
xchg
and
push
lock
adc
cmc
or
cmp
stos
sub
stos
scas
or
sbb
test
daa
ds
push
jmp
and
test
mov
mov
adc
mov
pusha
daa
mov
push
mov
xor
xchg
jbe
mov
lds
mov
divps
nop
mov
enter
mov
das
ja
jle
rcl
mulb
adc
enter
aaa
into
ja
xchg
sub
aam
xchg
and
aam
sbb
push
pop
sahf
pop
scas
or
xchg
and
ret
or
xor
movsl
mov
popa
cld
leave
repz
jne
jmp
sbb
xor
test
hlt
sbb
mov
push
adc
push
data16
jo
xchg
sub
xchg
push
aad
incl
and
sbb
inc
ss
clc
dec
push
sub
lea
pop
movsb
movsb
mov
pop
mov
cmp
cmpsb
push
lahf
sub
pop
sti
lret
les
mov
adc
pushf
mov
out
sub
fdivs
inc
or
mov
loope
xchg
ljmp
je
xor
mov
cwtl
rolb
sti
std
jecxz
xchg
mov
sub
push
fcomp
sbb
mov
idivl
lods
sbbl
lods
push
mov
cwtl
stos
ja
fabs
sbb
mov
mov
jo
pop
adc
mov
in
fisubrs
cltd
jo
fnstenv
cmp
scas
pop
jnp
idivb
testb
adc
pop
mov
sbb
fstps
add
mov
inc
popa
sub
outsb
or
sbb
inc
jmp
test
lahf
jl
loopne
shlb
ja
enter
adc
out
stos
cmc
mov
lods
add
jl
test
cmp
mov
imul
loop
aam
mov
aam
loopne
cmp
je
test
sub
mov
rol
cmpsl
mov
sbb
dec
psllw
jecxz
iret
adcb
xchg
add
sbb
add
std
icebp
test
xchg
pop
mov
pop
insb
lea
cwtl
rcrb
sarb
sub
cwtl
add
nop
mov
cltd
loopne
pop
outsl
jns
out
iret
cltd
xchg
test
and
mov
adc
cmpsb
std
xor
jb
mov
stc
sti
fstps
movsb
or
mov
jbe
sub
jge
push
push
sti
inc
stc
add
daa
sar
dec
lea
dec
xor
cld
inc
jp
dec
mov
pop
dec
ds
outsb
ret
pop
mov
dec
pop
or
sub
xor
ds
test
mov
add
pop
xor
adc
jl
mov
repz
sub
pop
out
popa
and
dec
ficoms
xchg
and
loope
mov
jb
jp
repz
clc
lea
sbb
mov
test
sti
stos
sbb
push
inc
inc
in
fcomps
movsl
dec
loopne
cmp
iret
dec
jnp
adc
jbe
pushf
add
jae
inc
and
int3
pop
mov
inc
test
xlat
in
test
jg
adc
int
xchg
cmp
pop
pusha
mov
pusha
sub
bound
sarb
aad
jo
andb
pop
pop
xchg
cmp
out
mov
ljmp
xor
jns
and
insl
add
lock
in
mov
aaa
inc
inc
push
arpl
pop
out
loope
push
xchg
lea
mov
inc
rclb
cmpsl
ljmp
dec
pop
jb
inc
cmpsl
ret
inc
bnd
lret
adc
mov
std
mov
pusha
xor
dec
xchg
sub
dec
jno
cwtl
iret
sub
mov
push
push
pop
out
jnp
push
mov
movsl
inc
ja
in
rcrb
ficomps
loope
jg
inc
dec
xorl
xor
mov
adc
push
sub
inc
pop
outsl
cmp
pusha
testb
add
ret
ja
sub
outsb
and
pop
imul
imul
shr
and
or
jne
sbb
decl
ds
and
push
iret
and
cltd
pop
pop
xchg
pushf
mov
mov
sub
ret
int3
push
inc
mov
sub
cld
cmp
mov
mov
mov
adc
cmp
cmpl
push
adc
jnp
pop
and
fidivs
mov
add
mov
mov
loopne
in
add
hlt
ret
bound
pushf
mov
xchg
andb
sbb
mov
iret
leave
jge
lahf
lods
push
out
test
in
mov
mov
push
mov
fists
sbb
cmp
lods
jno
pushf
loope
gs
in
es
shl
inc
jae
jns
pop
icebp
ss
mov
or
mov
adc
pop
lods
xchg
movsb
and
nop
rorb
fistpll
xchg
dec
jmp
fucompp
cwtl
mov
lret
and
into
arpl
jle
pop
scas
jno
repnz
xor
adc
scas
inc
jl
out
sti
daa
outsl
call
sbb
push
popa
push
jmp
mov
jnp
jb
daa
mov
or
lea
mov
push
repz
add
cmp
mov
pushf
ficoms
fs
or
aam
pop
xchg
pop
pop
pusha
cli
out
sbb
insb
xor
pop
imul
movb
and
test
bound
lods
loopne
test
stos
add
fsts
cmp
jp
enter
dec
outsb
push
fs
insl
sbb
pop
ss
addr16
insb
pop
enter
mov
add
rorb
clc
incl
pop
xor
daa
xchg
push
lret
jb
aam
imul
pop
cwtl
push
pushf
mov
fstps
icebp
scas
add
int3
mov
jns
jbe
cmp
jbe
cs
scas
mov
ja
mov
arpl
pusha
cmpsb
mov
data16
push
lods
insb
stos
pop
das
xchg
mov
xorb
adc
push
jmp
mov
pop
push
movsl
cmp
clc
jae
in
mov
push
sbb
test
mov
add
jbe
push
or
sbb
xchg
and
adc
rcrb
mov
repnz
mov
or
daa
dec
push
js
jg
scas
aad
mov
dec
push
xchg
fwait
jne
jne
inc
mov
cmp
or
push
push
aaa
adc
add
xor
popl
jbe
xchg
xor
out
stos
out
clc
dec
aad
inc
cmpsl
and
in
push
clc
sbb
leave
stos
das
inc
or
js
fwait
pusha
cmp
push
ret
mov
int
pop
mov
repz
mov
sbb
lahf
cld
inc
push
fucomip
pop
mov
test
aaa
scas
and
add
push
inc
inc
call
mov
fisttpl
test
xchg
daa
cwtl
das
push
std
pop
mov
mov
inc
cli
adc
stos
xchg
or
fldcw
jno
mov
sahf
mov
nop
sub
pop
xchg
int
test
repnz
outsb
sub
jg
in
shrl
stc
rcr
push
cmc
sbb
ds
roll
adc
rolb
jae
mov
sub
sbb
stos
add
cmpsl
mov
mov
add
mov
mov
call
mov
lret
inc
mov
inc
inc
daa
leave
jmp
sbb
lods
aas
pop
out
repz
cmp
mov
icebp
lea
ds
roll
mov
dec
xchg
jnp
out
mov
mov
ss
cmp
iret
imul
jnp
jns
lods
movsl
ret
add
cmc
add
lahf
filds
cwtl
pop
gs
xor
je
adc
icebp
jg
xchg
pushf
mov
ret
pop
sar
repz
jmp
mov
popf
adc
iret
imull
or
les
scas
dec
add
rol
mov
adc
lods
mov
test
add
imul
test
orb
mov
mov
cli
mov
inc
mov
pop
scas
or
xchg
inc
loop
jbe
cs
enter
push
push
mov
test
mov
push
mov
and
pop
inc
cmp
out
fmuls
div
inc
mov
in
inc
fildl
lods
fidivs
sbb
or
das
andb
leave
jo
jb
jl
or
push
movsl
ret
xor
pop
in
mov
in
adc
test
popf
xor
xchg
mov
or
jne
adc
ljmp
xor
imulb
orl
inc
cltd
pop
cld
push
ds
leave
popa
xchg
lea
add
jnp
sub
lret
fisubrs
mov
incb
cmpsb
cmc
jl
cmpsl
xchg
jne
leave
sbb
mov
fsubrs
lret
testl
mov
pusha
ljmp
and
xor
mov
dec
fnstsw
scas
pop
cmp
or
pop
mov
je
icebp
push
sbb
int3
pop
sub
aam
push
outsb
inc
jmp
jno
xor
sti
adc
or
mov
clc
dec
sub
xchg
jnp
rcl
mov
hlt
int
scas
testl
dec
clc
adc
dec
sub
add
mov
jbe
test
ljmp
cs
sbb
test
or
in
adc
sbb
es
andb
jo
cltd
call
rcrl
arpl
pop
jne
push
dec
xchg
cmpsb
lea
incl
pop
sbb
lock
cmpsl
mov
sub
mov
or
push
das
and
add
cltd
fistl
subl
enter
sbb
mov
and
movsl
inc
pop
test
imulb
adc
sbb
adc
insl
aam
push
pop
jb
shlb
sahf
sub
pop
or
imul
rorb
les
mov
pushf
test
mov
cmp
dec
ds
mov
aad
jmp
loope
or
jg
push
je
outsl
xor
cmpsl
jl
repnz
pop
repz
xchg
pop
mov
push
outsl
loop
sbbl
int3
addl
sbb
pop
and
sarl
add
push
lcall
cmpsl
adc
cli
sub
jb
mov
rolb
icebp
rorl
outsl
ret
es
adc
lea
add
out
jp
and
iret
ss
and
imul
xor
mov
stos
cmp
rcrl
xchg
xchg
and
push
jg
js
icebp
stc
inc
and
inc
test
cmp
testb
int3
jg
mov
rep
inc
or
sub
push
xchg
xchg
movsb
mov
sbb
in
lods
imul
mov
mov
dec
push
jno
gs
enter
shr
jg
sbb
insb
jl
xor
add
cmp
shr
sub
jb
push
fcoml
pop
hlt
xor
rol
pop
out
nop
stc
add
ret
jp
repz
mov
push
jge
out
outsl
jp
js
lea
jne
push
push
in
clc
adc
in
orl
mov
pop
pop
push
sahf
jge
inc
jmp
fdivl
mov
adc
xchg
shll
test
repnz
mov
lret
cld
add
mov
test
andl
shlb
pop
mov
nop
mov
popf
xchg
push
jmp
dec
clc
jo
les
mov
mov
sbb
mov
fistps
call
or
insl
sub
mov
push
pop
add
sub
pop
dec
movsb
scas
xchg
sub
shrb
pop
sub
bound
jl
adc
lcall
mov
out
jnp
rclb
inc
fidivs
in
test
mov
bound
rcrb
jnp
movsl
mov
mov
jge
sub
pop
ret
mov
mov
push
mov
pop
popf
adc
mov
or
mov
dec
jb
mov
std
fisubl
push
imul
push
mov
cmp
adc
les
aaa
shrl
and
lock
push
movsl
imul
sbb
jge
cmp
movb
pop
outsl
inc
mov
sbb
push
popa
mov
xorl
ficomps
paddb
or
in
pop
xchg
add
into
mov
dec
jecxz
xchg
sti
sub
imul
int
int
mov
insb
add
rcrb
out
js
aas
pop
jo
mov
adc
dec
sub
xor
sbb
imul
int3
lock
pop
and
xor
pop
idiv
pop
mov
xlat
add
mov
mov
sub
sub
pop
movsb
xor
mov
push
in
fwait
mov
ss
addr16
movsl
xrelease
cmp
jp
pop
cmp
ret
insl
jnp
push
cmp
xor
aaa
int
push
inc
cli
subl
loopne
out
lret
cmpsl
or
fbld
mov
stos
ret
call
pop
inc
imul
in
mov
pcmpgtd
add
iret
lret
decl
std
out
es
cli
adc
fstpt
scas
add
pop
inc
xchg
pop
loope
cld
jo
dec
sbb
test
mov
arpl
ja
and
pop
add
jne
cmc
jne
jp
or
arpl
jl
push
ss
inc
fisubl
xor
lock
fists
and
cmp
loopne
in
stos
inc
mov
fidivl
out
cli
cmp
or
dec
popf
add
fistl
or
jae
jno
outsl
jmp
sti
pop
ror
adc
rorb
mov
mov
fldt
loope
jle
cld
rorb
jo
jmp
mov
mov
cwtl
out
inc
mov
jecxz
in
inc
in
dec
inc
fidivrs
in
test
sbb
or
push
inc
pop
lret
fbstp
mov
adc
inc
in
jecxz
and
or
hlt
mov
xlat
jbe
fists
jle
scas
test
xchg
cmpsb
xor
add
leave
pop
ss
lds
pusha
stc
into
mov
into
cmp
aas
xchg
cmp
mov
ljmp
cmc
iret
xchg
fdivp
fstp
mov
leave
xchg
ja
repz
pop
ret
mov
int
sub
div
popf
addb
cmp
jp
divb
iret
pop
dec
and
lods
push
push
push
inc
jmp
or
in
xchg
out
test
cmp
jl
mov
sub
mov
imul
mov
pop
rclb
inc
out
fldcw
xchg
jne
sub
insb
fistps
add
push
rorl
pop
fisubrl
sub
or
push
jmp
push
imul
mov
xchg
lods
mov
mov
popa
lahf
sub
mov
cli
or
mov
jg
mov
and
mov
and
adc
pop
push
arpl
dec
out
or
fidivs
ja
cmpsb
jmp
addr16
pop
jle
mov
ret
jne
inc
mov
in
imul
sbb
fisubrl
push
test
xlat
xchg
mov
or
adc
inc
lahf
jbe
mull
sub
xchg
pop
inc
cmp
mov
cltd
test
stos
pop
imul
push
cmp
sti
mov
into
je
push
setp
xchg
int3
cmpsb
cmp
xor
mov
mov
shrb
lcall
or
lds
movsb
repnz
insb
add
jo
adc
inc
mov
sbb
jle
mov
xchg
lods
mov
xlat
adcb
mov
pop
mov
mov
into
cltd
jle
mov
addr16
inc
fnsave
hlt
int
fcoml
inc
sbb
fidivrs
or
cltd
aas
jmp
nop
xor
scas
xor
dec
fs
clc
fdivs
aad
loopne
push
pop
ret
adc
andb
mov
hlt
xchg
out
dec
mov
out
mov
xor
shll
std
xchg
outsl
insb
add
mov
lock
rolb
add
mov
aam
negl
jg
inc
popl
jb
inc
lahf
and
icebp
jno
mov
dec
sarb
hlt
mov
pop
lea
adc
jge
out
lret
dec
jecxz
cmovo
push
push
xchg
adc
push
decl
xchg
dec
dec
std
xchg
mov
in
repz
sbb
push
push
inc
push
inc
in
psubusb
cmp
rcl
pop
daa
mov
add
imul
sbb
jp
aas
adc
jle
dec
mov
lods
sub
ret
push
mov
jecxz
push
loope
xor
mov
and
imul
cmp
insl
jmp
ljmp
rclb
outsl
add
cmp
mov
jg
xor
push
xchg
fimuls
sub
mov
jmp
test
imul
jl
mov
sub
xchg
push
fstps
jmp
and
dec
xor
mov
adc
sahf
inc
in
call
fldl
in
xor
pop
movsb
insb
mov
out
sub
xchg
into
jo
imul
sub
jb
mov
movsl
mov
inc
mov
adc
pop
push
and
fs
sub
mov
dec
and
bnd
fstps
add
stos
jmp
push
loope
push
adc
jmp
adc
lods
ljmp
pushf
mov
pop
outsl
in
pop
or
xlat
out
pop
scas
cmpsb
daa
inc
add
jno
pop
movsl
or
int
adc
sbb
mov
lods
rcrl
jmp
xchg
pop
fidivl
pop
cmp
lea
adc
loop
jle
mov
stos
sbb
cmp
cmp
xchg
adc
pop
ret
add
data16
lahf
jns
mov
repnz
clc
xlat
mov
jecxz
test
fistpll
jno
lock
pop
sub
jge
shl
mov
or
inc
mov
fstps
pop
mov
aad
outsb
outsb
sub
loopne
mov
and
xchg
add
pop
inc
fidivrs
xchg
adc
mov
jge
mov
inc
mov
push
das
inc
je
jne
mov
fnstsw
movsl
fisubl
inc
data16
sbb
imul
inc
cmp
cmc
xor
fimull
stc
jnp
popa
mov
movsl
lea
mov
jle
inc
mov
and
sbb
lret
enter
int
imul
cmc
cmp
cmpb
mov
aam
adc
xor
jg
movsb
jo
add
cltd
dec
fs
inc
pop
imul
imul
cltd
pop
xchg
or
in
mov
lahf
add
jecxz
jmp
out
cltd
bt
dec
es
fsubrs
popf
stc
sub
mov
or
imul
push
pop
add
or
ljmp
sbb
dec
jbe
pop
cmp
push
js
in
push
lret
dec
push
mov
push
aas
mov
inc
jle
cld
fs
iret
jne
ret
jle
pop
push
mov
cmp
xlat
rcrl
and
xchg
iret
lcall
dec
fldl
add
push
in
pop
inc
lods
addr16
outsl
pop
push
mov
lret
pop
movsb
push
push
pushf
sbb
inc
cwtl
dec
shll
sub
cmp
insl
loope
mov
push
fisubrl
xchg
outsl
jnp
out
ss
sbb
shll
pop
lahf
data16
sbb
inc
sub
jbe
pop
rcrb
xchg
and
sbb
mov
mov
shr
cs
test
xchg
shll
inc
pop
inc
jns
shrb
jle
loopne
ret
mov
push
push
mov
add
sbb
mov
fsts
mov
rcr
sbb
das
inc
decb
in
outsl
call
inc
inc
sub
pop
je
les
inc
int
mov
push
mov
ds
ret
leave
loopne
pop
cltd
mov
pop
in
cmpsb
sub
aam
data16
inc
or
mov
pusha
pop
xchg
sub
rorl
pop
cmpsl
mov
push
lret
cwtl
inc
mov
cmp
cmp
mov
xor
lds
push
and
shll
inc
cwtl
cs
mov
push
pcmpgtw
jle
dec
or
stos
mov
xchg
movsb
cmp
add
pusha
in
les
mov
inc
insl
pop
mov
test
in
sbb
add
movsb
addr16
mov
push
movsb
adc
mov
movsl
test
decb
loopne
add
push
ss
je
aaa
jae
aad
push
inc
sti
clc
cmp
iret
cmpsb
cmpsl
icebp
push
dec
movsb
ss
add
arpl
into
test
push
popf
push
cmpsb
ror
pusha
cli
xrelease
and
lret
test
pop
adc
mov
push
jnp
sarb
push
and
fidivrl
lea
xor
adc
pop
adc
aas
inc
inc
pop
push
cwtl
dec
pushf
aaa
insb
xor
xchg
icebp
mov
dec
jecxz
gs
popf
mov
cld
xchg
lods
pop
neg
push
cwtl
push
test
adc
pop
xor
lret
iret
inc
adc
pop
inc
das
jno
mov
mov
shrl
pusha
inc
xor
shll
iret
xchg
mov
mov
stos
pop
outsb
mov
pop
cmc
cs
inc
sahf
movsl
jl
jbe
jb
imul
adc
clc
dec
cmpl
cs
inc
fldl
cmp
hlt
ja
mov
pop
addb
lock
repz
ss
mov
sbb
leave
test
scas
imul
mov
sbb
and
pushf
and
jae
inc
gs
mov
jmp
insl
push
mov
adc
and
push
xor
shll
inc
dec
mov
or
fsubp
sub
je
mov
inc
inc
aaa
add
push
or
push
dec
add
sarb
mov
or
pop
arpl
bound
test
inc
mov
ss
addr16
push
mov
add
scas
inc
dec
xorl
or
mov
bound
rcll
dec
filds
data16
aad
lcall
hlt
mov
pop
andl
xchg
stos
ds
xor
cli
pop
iret
loope
scas
adc
rcrl
mov
es
imul
dec
fwait
pop
or
aam
push
xchg
test
or
add
outsb
nop
ret
dec
adc
out
sub
lahf
pop
xor
rcll
push
insb
stc
aaa
inc
cltd
in
sbb
push
mov
mov
into
pusha
push
or
fdivs
mov
loop
jo
and
dec
jns
repz
loope
jb
cmp
into
cmp
fsubl
sbb
xor
out
out
sub
cmp
and
xchg
je
lcall
scas
arpl
les
push
shrl
mov
add
pop
and
aad
mov
sbb
rol
dec
mov
push
fistl
inc
loope
in
data16
xchg
cmpsl
ljmp
hlt
in
inc
mov
cli
or
call
adc
bound
fucomi
push
test
pop
lock
notl
mov
push
sbb
int3
pop
ljmp
pop
vmovupd
push
pop
jmp
xor
xor
pusha
xchg
push
out
sub
xchg
stc
aaa
jne
je
push
add
js
iret
mov
cwtl
push
fcomps
inc
and
std
call
pusha
pop
inc
sarb
or
popf
sub
lret
movsl
mov
pop
lock
imul
fldenv
or
push
sahf
out
pop
in
inc
lahf
xor
pop
xchg
jle
cmpsb
sub
mov
ret
fucomip
loop
mov
negl
into
arpl
mov
pop
add
test
lock
je
dec
lods
insl
ja
pop
into
aam
cs
fmul
jns
data16
mov
int
bound
and
scas
ds
inc
pop
jno
push
cltd
cmp
mov
xor
loopne
sbb
outsb
sbb
add
subb
cmp
scas
xor
lock
cmp
mov
inc
arpl
add
mov
test
or
lods
insl
movsb
or
sub
pusha
scas
mov
jb
ds
sbb
mov
mov
pop
divb
test
add
fsubrp
jbe
sbb
xchg
xor
adcl
mov
out
cmp
adc
inc
mov
push
addr16
or
in
mov
cmp
add
xchg
and
xor
inc
pop
in
push
mov
xchg
push
cs
lods
cli
stos
mov
or
aas
and
xor
xchg
mov
subl
jp
decl
in
cld
mov
repnz
xchg
sbb
sub
mov
push
negl
cld
cmpsl
sbb
push
ret
sub
or
dec
loop
mov
xor
inc
mov
ret
ss
fmull
jns
out
dec
sbb
fimull
xchg
pop
lea
mov
aam
lock
mov
movsl
decl
sbb
jns
push
jns
sub
mov
sub
sti
rcrl
adc
ret
dec
fbstp
xchg
je
enter
cmp
das
dec
in
sub
pushf
pop
add
and
cmpsl
jno
xchg
outsb
jl
scas
add
nop
popf
or
xor
mov
ds
push
jmp
pop
sbb
cmp
dec
imul
sub
aas
adc
mov
xor
outsl
add
cmp
icebp
imul
imul
lret
push
out
sub
push
test
lret
data16
adc
xchg
scas
mov
popf
pop
mov
int
xor
scas
dec
out
imul
fisubs
leave
leave
dec
mov
mov
ljmp
call
lods
gs
ficompl
add
mov
into
lret
cld
scas
adcb
sbb
or
push
xchg
iret
add
xor
jmp
ljmp
jl
or
rorl
dec
inc
and
push
aaa
mov
cmp
rol
jno
mov
rorl
xchg
mov
mov
jno
outsl
int3
imul
pop
push
adc
adc
push
xchg
dec
jge
fwait
add
sahf
aad
daa
mov
pop
sub
and
inc
xchg
dec
aad
call
dec
add
push
pushf
cli
mov
push
mov
jae
and
cwtl
dec
fwait
jge
sub
or
sub
jge
lret
in
lock
sub
mov
and
dec
cmp
jnp
hlt
sbb
cmp
popf
jp
je
mov
ret
hlt
mov
cmpsl
lahf
xor
enter
jne
xor
xlat
aaa
ss
mov
arpl
push
jnp
or
inc
sub
jno
pop
bound
mov
mov
jp
fucomi
push
bound
ret
xlat
dec
stos
sbb
jno
cmpsb
in
mov
xor
xchg
fucomi
test
lods
xchg
leave
mov
push
daa
pop
inc
pop
add
xor
cmc
or
jge
dec
cmp
pop
jp
jne
js
jge
daa
clc
rcrb
dec
les
and
pushw
xchg
xchg
dec
sbb
out
lock
sub
scas
inc
in
push
rol
fucomi
je
pop
ss
lods
push
movsb
mov
mov
cmp
js
pop
inc
pop
jno
rcr
xchg
mov
cmp
xchg
cmp
arpl
fwait
pop
in
icebp
in
inc
lods
cmp
lret
jecxz
jo
mov
cmp
leave
xchg
mov
lods
xchg
xor
add
sbb
div
jg
test
pop
js
rcrl
sub
add
fcmovu
pop
mov
dec
icebp
mov
sbb
pop
pop
bound
sbb
add
fwait
mov
leave
test
add
mov
outsb
add
mov
arpl
imul
or
out
bound
in
mov
add
push
cltd
pop
and
rcrl
xor
inc
jecxz
push
enter
sahf
fs
scas
sbb
movsl
hlt
nop
cmc
cmp
mov
cmp
in
sbb
xchg
sub
adc
daa
outsl
xchg
jge
pop
mov
mov
repnz
test
js
outsb
in
ja
test
lret
shll
xlat
xchg
hlt
mov
cmp
in
rclb
mov
sbb
mov
xchg
ret
mov
outsb
cmpsl
into
xchg
popf
rcl
dec
lcall
pop
mov
pop
js
push
add
inc
xchg
fists
push
sbb
mov
cmp
cli
xchg
out
jnp
bnd
dec
pop
leave
int
xchg
lcall
add
xor
mov
add
push
ja
jne
fbld
scas
into
arpl
iret
push
clc
dec
inc
xor
and
data16
inc
call
mov
lods
mov
adc
xorb
jne
dec
push
lea
cmp
cmpsl
cmp
outsl
les
cmp
jne
inc
rclb
cmp
int3
aad
bound
xchg
or
xor
add
xor
cmc
adc
dec
shrb
pop
cmc
mov
lret
sub
stc
pop
push
mov
jns
pop
ds
test
cmpsb
fstpt
fiaddl
in
jae
out
jg
inc
mov
ret
arpl
jmp
neg
xor
bound
jns
jp
cltd
sub
jecxz
cltd
cmp
xchg
or
mov
xor
or
aam
sbb
pop
jmp
cs
ljmp
push
cs
cltd
je
outsl
fsubs
imul
pop
outsl
pop
and
arpl
hlt
outsl
lret
aad
lret
sub
pop
loope
dec
push
inc
in
nop
jnp
addl
lods
mov
lret
add
lcall
add
mov
enter
and
add
push
in
incb
xchg
dec
mov
pop
inc
cmp
sbb
out
mov
pop
bound
inc
fbld
push
jae
shll
jle
or
dec
cli
cmp
test
or
pusha
cmp
jne
push
push
repz
or
mov
ret
lds
push
cmp
insl
push
aaa
jbe
in
movsb
hlt
mov
push
cmp
ja
jmp
jge
push
sbb
dec
stc
cmp
outsl
sbb
mov
jg
xor
std
dec
jecxz
push
cmpsb
push
movsl
mov
jne
inc
mov
mov
mov
cltd
mov
out
push
xor
mov
mov
filds
jmp
jp
imul
icebp
in
or
shlb
aas
push
lret
ret
sub
leave
cmp
jbe
add
je
push
bound
mov
add
out
adc
push
push
cmp
cmpsl
mov
cwtl
jp
push
lods
mov
arpl
icebp
adc
loope
les
std
cmp
ljmp
scas
inc
push
imul
fdivl
push
rcr
data16
inc
push
or
dec
call
xor
cmpsl
cmp
mov
dec
popf
stos
jle
bt
sahf
mov
sub
dec
rcl
mov
inc
dec
mov
jno
pop
fnstcw
jnp
mov
cmp
dec
pop
add
lock
ja
jne
test
xor
mov
push
shlb
aaa
adc
stos
inc
pop
add
ficomps
nop
es
sbb
cwtl
mov
adc
push
cmp
testl
push
jo
fimuls
jb
clc
pop
out
adc
cmp
repz
leave
loopne
pop
xchg
arpl
inc
push
dec
dec
inc
dec
cld
aad
ss
ret
stos
jbe
fsubl
jle
adcb
mov
or
sub
addr16
es
subl
lcall
ss
push
dec
xchg
xor
pop
bound
pop
out
pusha
jnp
jbe
cmc
and
je
dec
and
mov
clc
add
pop
cltd
std
ja
test
mov
popf
loopne
jmp
and
pop
push
stc
nop
fsqrt
xchg
imul
mov
mov
mov
and
imul
push
push
xchg
insl
mov
inc
pop
mov
movsb
jg
mov
mov
pop
sbb
pop
repz
mov
pushl
push
jb
adc
jns
jno
xchg
popa
pop
mov
xchg
jno
jb
and
adc
cmp
mov
jmp
cmpsl
add
es
shl
push
or
push
mov
or
shld
int3
addl
loope
es
mov
or
fwait
cmpsl
scas
in
cmc
cwtl
xor
sbb
xchg
pop
sub
or
and
out
bound
fnsave
mov
incb
or
pop
scas
or
adc
sbb
jle
cmp
rcl
sub
add
test
mov
pop
and
mov
push
add
loopne
xor
in
pop
push
and
xchg
mov
jns
in
ficoml
cmpb
sbb
cmp
adc
sahf
inc
sbb
es
xchg
fdivr
lods
test
pop
movsb
inc
xorl
movsb
jne
sbb
cmc
shr
ss
or
test
pop
mov
in
in
enter
call
cmp
push
add
pop
push
sub
mov
frstpm(287
repz
aam
lcall
aam
add
sbb
ss
repz
lea
nop
sub
lret
push
rorl
ret
dec
xchg
jns
cmp
lahf
adc
mov
mov
add
dec
mov
push
fisubl
inc
in
arpl
mov
xor
fiadds
test
fnstcw
or
stos
mov
das
fnstenv
fisubs
inc
out
stos
sbb
movsb
addr16
mov
xchg
sub
pop
dec
aaa
push
jno
insb
cld
push
rcrl
leave
and
outsb
jl
ret
fiaddl
test
jno
test
lods
xchg
cli
xor
mov
icebp
leave
pop
and
imul
aaa
loope
es
stos
rorb
mov
mov
xchg
jb
pop
in
dec
adc
fs
in
sub
call
in
ret
arpl
out
test
push
outsl
push
add
or
push
push
sub
imul
ffreep
leave
sub
int3
fimuls
outsb
or
cmp
test
mov
push
sbb
les
sub
push
jo
ret
rorb
and
inc
inc
inc
cld
dec
ljmp
pop
out
xchg
adc
cmpb
mov
cltd
fs
jnp
jo
or
push
adc
loopne
xchg
cmp
sahf
fstp
push
icebp
subl
pop
cmp
mov
xchg
into
pop
inc
push
sub
repnz
sbb
dec
pop
jcxz
sbb
inc
add
mov
dec
aaa
cmpsl
mov
mov
jb
mov
pop
mov
jae
inc
sub
cmp
mov
inc
sarb
insl
frstor
jge
mov
in
lods
loop
je
scas
fidivl
dec
lret
ss
int3
mov
lcall
mov
mov
mov
mov
mov
push
adc
int3
push
out
daa
sbb
lods
xchg
cmp
je
pop
cmpsb
push
icebp
cmp
pushf
push
mov
imul
adc
aad
lret
shlb
movsb
aad
and
insb
jle
xchg
das
mov
add
inc
arpl
xor
dec
mov
jg
cmp
xor
push
or
adc
or
in
or
sbb
sub
mov
test
into
enter
outsb
bnd
pop
jns
ror
mov
pop
push
mov
addb
bnd
fsubrs
dec
dec
movsb
inc
sbb
cmp
fcomps
lahf
movsb
cmp
mov
adc
insb
dec
iretw
aam
outsb
adc
and
xor
push
adc
fdivrl
cmpsl
sar
hlt
push
in
sbb
mov
push
je
enter
and
and
movsb
push
ja
or
xor
mov
fdivs
jp
dec
and
mov
jno
int3
sub
mov
loop
imul
movsb
scas
mov
adc
data16
or
jmp
subb
divb
pushf
pop
cmpsb
inc
mov
mov
mov
in
shll
nop
sbb
dec
or
mov
dec
stos
sub
adc
jmp
sub
loop
ja
outsl
icebp
sbb
jge
xchg
sub
mov
mov
addl
or
jle
into
mov
sbb
xlat
test
and
sbb
in
insb
test
adc
insb
jnp
mov
mov
and
nop
xor
or
mov
rcrb
push
sub
mov
pop
mov
pop
mov
icebp
inc
test
sub
push
adc
sub
call
int3
das
dec
pushf
inc
mov
dec
sahf
push
xor
in
xchg
push
or
lahf
or
pusha
add
mov
sub
push
aaa
ret
mov
int3
push
adc
loop
xchg
pop
dec
insl
inc
xchg
out
xchg
shll
push
inc
leave
leave
mov
add
mov
push
jb
inc
fs
mov
rorl
outsl
adcb
jl
test
xorb
out
mov
jo
and
andb
inc
cld
stos
in
xor
shll
inc
dec
cmp
pop
or
pop
shrb
in
add
mov
out
inc
les
iret
repnz
push
push
call
mov
mov
pusha
cmpsb
int3
xchg
dec
lret
push
or
cs
add
jbe
push
movsl
lds
fistl
xor
loop
in
inc
xchg
and
in
mull
lods
xlat
out
xchg
jmp
pop
or
add
dec
in
cmp
popa
in
mov
dec
push
mov
cs
je
and
xchg
lret
daa
std
popf
lods
xchg
nop
lds
add
push
push
push
pop
or
fbld
sub
in
gs
cmp
testl
sbb
test
in
inc
scas
mov
clc
xchg
iret
int3
sub
xchg
push
jp
sti
inc
cmp
mov
fimull
imul
push
out
jne
jmp
call
sub
mov
pop
imul
cmp
sub
aas
push
xor
xor
call
mov
aam
jmp
ja
out
cmpsl
insl
rcrb
sub
ds
out
ffree
lret
inc
lahf
push
int
lahf
ss
shll
xchg
and
add
in
fwait
xchg
arpl
push
js
aas
push
jo
jmp
mov
pop
in
adcl
or
aaa
fwait
aas
pop
xchg
mov
sbb
pushf
shlb
es
js
mov
ss
xor
mov
and
sbb
aas
clc
adc
fisttpl
pop
or
xor
ret
mov
insl
mov
ret
jmp
push
inc
xchg
mov
sbb
pop
mov
in
test
arpl
gs
fldt
sub
mov
add
mov
hlt
jmp
ds
movsb
jecxz
pop
adc
add
push
mov
and
push
and
or
pop
stc
unpcklps
jae
mov
inc
dec
cmp
push
xor
sbb
xchg
aas
cwtl
mov
xor
into
mov
cltd
cmp
je
movsl
and
repz
xchg
xor
idiv
es
test
cmp
cmp
xchg
in
sbb
or
xchg
mov
dec
push
dec
insl
fmull
add
xchg
scas
push
adc
sub
mov
dec
loop
pushf
dec
jecxz
add
jo
mov
pop
out
int
cmpsb
mov
mov
stc
montmul
cmpsb
out
loopne
or
push
sbb
mov
xor
nop
fs
loope
lcall
sahf
lds
sbb
mov
pop
mov
leave
pop
cmp
push
insb
hlt
lret
nop
inc
xor
test
das
sahf
cmp
cld
data16
call
stos
cmpl
sub
repnz
sub
fcmovne
movsb
int3
lods
cmpsb
mov
stos
js
mov
bound
aad
fildl
mov
fnstcw
stos
dec
fimull
sbb
loope
or
dec
xchg
push
in
hlt
aad
and
out
inc
xlat
pop
jne
xchg
pop
in
mov
mov
das
hlt
bound
adc
or
and
cmc
stos
jbe
stc
pop
or
rorl
xchg
out
pop
test
imul
sub
cltd
gs
xchg
and
shll
adc
and
popa
lahf
jmp
mov
pop
ss
das
das
mov
dec
adc
lcall
rorb
and
popa
mov
jnp
dec
lods
jge
inc
fldcw
iret
xlat
sbb
scas
cwtl
pop
in
push
shr
xchg
mov
mov
adc
aam
mov
pop
adcl
xor
mov
pop
cmp
inc
les
pushf
movsl
pop
aad
lea
adc
cmp
mov
ds
cwtl
repnz
aas
pop
lcall
mov
inc
inc
loope
xchg
pop
adc
insb
mov
jo
call
push
repnz
fcmovne
imull
addb
icebp
push
mov
retw
outsb
mov
inc
in
pop
pop
or
xor
cmp
dec
out
mov
icebp
mov
jle
stc
inc
sub
adc
cmp
test
loop
xor
into
or
aaa
loop
xchg
adc
push
in
xor
jae
pop
inc
in
int3
jb
in
xchg
and
and
jo
push
sahf
dec
xchg
xchg
cmp
mov
mov
andl
jg
inc
mov
sub
pop
mov
dec
in
mov
pop
or
bound
xor
pop
out
call
int
gs
faddl
cli
dec
popa
jnp
fldt
out
inc
fstps
sbb
mov
scas
cs
lock
mov
adcl
scas
pop
imul
add
mov
ret
or
outsb
loope
mov
test
mov
aas
mov
and
sub
lock
cmp
and
cmp
imul
rorb
fstl
mov
adc
lret
data16
mov
shl
cmpsl
mov
daa
fsubrp
je
lods
pop
push
jno
ror
in
push
jmp
or
sub
bound
loop
xchg
cmpl
mov
cmp
aad
scas
and
xchg
mov
imul
adc
pop
jmp
popa
sbb
mov
pop
shr
loopne
sbb
rcll
and
in
inc
out
ret
pop
mov
lods
add
shl
xor
movsb
mov
mov
cmp
mov
lret
movsl
icebp
into
or
dec
idiv
out
and
mov
adc
mov
cld
cmpsl
scas
jns
scas
stos
into
or
imul
imul
ss
addr16
loopne
enter
cli
cmp
mov
std
lods
movsl
mov
mov
xchg
arpl
xor
pushf
lock
or
dec
push
fnstcw
or
mov
mov
cli
scas
dec
jae
loop
jge
mov
or
loopne
mov
push
mov
shlb
scas
aaa
orb
andb
xchg
sub
add
mov
in
lcall
cli
and
addr16
sub
pop
xor
test
push
jb
lock
pushf
lods
pusha
sti
iret
ficompl
dec
filds
mov
enter
notl
xchg
imul
adcl
mov
in
imul
mov
sub
or
xchg
sub
out
sub
xchg
xchg
sti
push
push
lods
pop
imul
fsubrs
xlat
adc
jo
imul
mov
iret
jecxz
or
mov
push
mov
pop
inc
and
fldenv
sbb
xor
inc
lcall
xor
daa
data16
out
push
scas
mov
cmp
jge
jle
mov
movsl
lahf
nop
imul
jle
xchg
shrl
mov
shrl
push
xchg
or
lea
loope
or
xor
pop
pushf
lcall
test
movsb
dec
adc
arpl
imul
sbb
sbb
ljmp
cmp
aaa
popf
lds
pop
push
in
or
mov
ficoms
cmpl
pop
imul
mov
jl
mov
xchg
dec
or
xlat
mov
ficompl
flds
test
add
jmp
and
into
mov
push
iret
push
fcom
movsl
mov
or
mov
out
test
mov
push
leave
jne
push
mov
fimuls
out
cmp
pushf
jecxz
icebp
je
mov
xchg
in
shrl
jmp
inc
adc
lock
jmp
mov
cmpsl
ds
andps
adc
aaa
mov
or
cmc
pop
shl
mov
push
push
mov
shrl
int3
jg
sahf
jg
add
mov
adc
cmp
or
fwait
test
aas
xchg
push
repnz
mov
mov
push
je
andb
scas
lds
std
cld
xchg
add
fcoml
popl
scas
pusha
pop
xchg
call
ja
push
xor
fs
leave
push
aam
lret
cmc
fildl
dec
aaa
rcr
jo
xchg
mov
repnz
in
or
aaa
in
jo
jmp
aaa
std
xchg
rorb
dec
int3
sub
inc
out
jge
push
aas
pushf
mov
push
rcr
add
std
gs
mov
sbb
jnp
popa
rcrb
add
call
rcll
pop
into
xchg
inc
mov
inc
jnp
arpl
add
repnz
std
and
sbb
mov
jmp
xchg
xchg
sub
and
sti
add
push
and
pop
adc
ret
fistl
or
ss
xchg
aas
cmpsb
arpl
int
or
shlb
pop
imul
jno
sub
xchg
cmp
or
cmp
cmp
adc
les
pop
rorl
dec
cmp
jnp
je
bound
mov
fisubrs
jae
leave
mov
xchg
ss
xacquire
fdiv
sub
fnstenv
xchg
pop
sar
xchg
pusha
ret
xchg
cmp
pop
cmp
ret
mov
inc
push
into
repnz
pop
xor
lock
loop
fisubs
pop
rorl
rcl
pop
fiaddl
push
jo
and
int3
mov
mov
fwait
sti
mov
test
hlt
jmp
dec
rcr
mov
mov
dec
and
or
cmp
hlt
cmp
pop
ret
sbb
jmp
in
mov
imul
inc
aad
adc
sub
jge
jo
scas
pop
scas
inc
and
aad
loope
mov
into
stos
sbb
push
cmp
shll
mov
push
adc
inc
dec
sbb
lret
jle
mov
outsb
ja
ret
and
lea
addr16
xor
arpl
sahf
sbb
ret
mov
or
mov
pop
imul
je
or
mov
add
sub
jo
inc
jle
xor
fadds
lret
mov
rcrb
test
dec
bound
pop
sti
sbb
nop
sbb
test
andl
lods
sbb
xor
and
mov
icebp
std
int3
bound
jp
test
arpl
mov
std
fs
rcrl
mov
sbb
xchg
sbb
les
mov
pop
shll
xchg
cmp
xchg
stos
js
repnz
jl
mov
pop
out
vpsrad
push
out
sub
mov
or
push
pop
cmp
inc
repz
icebp
sbb
adc
subb
add
push
imul
enter
jp
inc
add
push
sti
iret
and
inc
push
int
sub
fstpt
xchg
adcl
roll
mov
adcl
sbb
fsubs
jg
mov
ljmp
dec
call
stc
nop
and
aam
lret
int3
pop
sub
push
jge
xchg
sub
jb
add
inc
cmp
jl
insb
daa
into
int3
fstpt
inc
pop
inc
pop
shrl
in
shl
sti
and
jno
sbb
int
push
js
out
movsl
adc
sub
add
test
out
xchg
mov
dec
mov
mov
push
push
je
xor
add
int
fcmovnu
sahf
push
xor
sbb
inc
lods
mov
push
outsb
movsl
mov
iret
jp
inc
cmpsl
faddl
insl
fidivrl
mov
cmc
xchg
repnz
mov
push
fwait
lcall
add
mov
fisubrl
inc
ret
inc
or
int3
xchg
leave
dec
inc
mov
adc
loope
adc
pop
dec
bound
cmp
mov
scas
shl
adcb
xlat
mov
jno
outsl
sbb
pop
mov
jae
pop
dec
sub
or
aam
mov
ficoml
jecxz
je
cmc
shl
cmc
rcrl
mov
pop
adcl
jp
pop
addr16
roll
out
sub
mov
add
push
scas
frstor
pop
push
sbb
or
xchg
cmpsb
testl
cmpsb
cmp
and
out
lcall
jns
divb
mov
call
hlt
jnp
idivl
mov
loopne
pop
and
cmp
jb
sub
inc
sbb
jo
sub
inc
fnstenv
pop
cli
xchg
iret
clc
jmp
pop
sbb
fidivs
out
pop
fstl
std
cmp
push
add
push
ret
out
mov
iret
out
adc
mov
mov
cli
sbb
mov
push
mov
jge
ffree
push
cli
adc
xchg
cmpsl
pop
push
ret
push
lods
inc
push
xlat
inc
loop
dec
mov
rcrb
lcall
leave
xor
cmp
inc
cld
iret
cwtl
adc
hlt
fwait
out
loope
jp
push
into
roll
add
stc
dec
bnd
dec
out
mov
jae
shr
lock
jl
adc
out
mov
jno
outsl
push
ret
cmp
pop
in
xor
push
push
mov
add
jbe
das
call
arpl
aam
faddl
jnp
xchg
rcl
jge
imul
movsb
mov
jnp
inc
adc
add
orb
mov
cmpb
or
push
movsb
inc
ja
xorl
cltd
sub
dec
add
addr16
pop
adcl
shrb
cmp
repz
es
or
cmp
lahf
test
jnp
in
or
iret
nop
mov
mov
cmp
inc
jnp
jg
dec
add
outsl
int
fdivrs
xchg
sbb
outsb
popf
icebp
dec
and
popf
into
fwait
xchg
mov
repnz
inc
and
add
xor
push
mov
xor
add
imul
mov
push
iret
mov
repnz
xchg
and
sbb
mov
lret
cmpsb
jno
outsl
inc
fbld
outsl
pop
jne
sub
orl
jp,pt
xor
pop
mov
loop
xchg
mov
add
xchg
je
mov
in
push
inc
dec
mov
ficompl
decl
pushf
cli
fbld
mov
pop
mov
cmp
jle
mov
in
or
std
sbb
sub
fisttpll
push
pop
cmpb
mov
pop
movsb
cli
repz
fsts
popf
stos
pop
mov
jle
pop
jbe
xor
inc
fisttpl
stos
ret
pop
push
mov
cmp
jmp
in
inc
jo
jmp
and
imul
push
pop
xchg
out
lods
jmp
mov
adc
adc
and
loop
inc
fnstcw
pop
je
fsubp
or
jno
inc
cmp
testl
and
mov
jns
add
cmpsb
xchg
das
fsubrs
jl
pop
xor
out
jle
jnp
in
test
xchg
ja
or
mov
cmpsb
lods
dec
mov
fidivs
in
in
jns
cmp
jle
adc
ret
in
jno
cld
mov
xor
lret
ja
jge
mov
stc
popf
or
fnstcw
jne
clc
adc
sub
outsb
test
mov
gs
scas
in
push
mov
loop
clc
fbld
jae
cmp
addr16
shlb
sub
lahf
stos
and
imul
add
stos
outsl
ss
mov
push
loope
cmp
in
sbb
out
cmp
test
fpatan
pop
pop
sbb
in
jp
sbb
jne
push
push
cmp
mov
into
xchg
out
xchg
sub
std
add
jmp
or
cmc
sub
enter
pop
test
imul
in
push
cli
test
je
in
push
lahf
sub
or
test
mov
sub
or
psrld
inc
dec
stos
rorb
int
loopne
frstor
test
in
std
pushf
das
cmpsb
les
dec
aam
or
adc
xor
inc
decb
mov
fidivrl
ror
shrb
pop
dec
dec
sub
pop
mov
popa
jbe
or
lods
shll
push
nop
xchg
test
adc
test
icebp
clc
cmpsl
or
or
sub
adc
js
lcall
jno
lahf
push
fwait
dec
movsl
lock
push
fstl
mov
cmpb
push
out
inc
push
jae
xor
lret
jb
fwait
outsb
jg
leave
jmp
icebp
sbb
xchg
mov
pop
cmp
ja
jge
test
bound
repz
push
cli
cld
dec
movsl
aas
icebp
dec
in
repz
xchg
jb
mov
adc
mov
cli
jge
and
in
mov
mov
lods
inc
rcrb
pop
cmp
daa
fisubrs
fisubs
cmpsb
rorb
mov
loop
pop
adc
mov
adc
lods
push
or
arpl
ds
imul
mov
add
daa
repnz
test
xchg
test
pushl
and
and
dec
pop
xor
mov
subb
cmp
in
into
gs
out
fidivs
cmp
or
inc
call
insl
sahf
pop
inc
adc
je
push
adc
shlb
ret
push
inc
lret
das
adc
test
pop
call
or
jo
inc
sub
ljmp
gs
or
fnsave
adc
mull
and
pop
shll
daa
int3
sub
insb
push
movsl
pop
jb
push
scas
iret
pop
or
dec
cmp
push
xchg
aas
mov
ret
push
mov
sub
xor
fwait
dec
fisubrs
sbb
movsl
xor
cmp
outsb
xor
shrb
cmp
add
aad
pop
sub
fcompl
pusha
pop
mov
shl
push
shll
sahf
push
insb
sbb
push
lcall
jle
mov
lret
in
lods
das
addr16
insb
iret
mov
mov
jge
adcl
aad
and
xchg
out
mov
pop
mov
or
lods
jmp
sub
popf
jns
dec
xchg
jmp
loopne
jo
ret
scas
sub
ss
push
mov
lcall
or
int
push
out
mov
xchg
jno
inc
sub
xchg
pop
jmp
insb
scas
mov
xchg
adc
push
loopne
test
fwait
push
lret
cmpb
inc
lret
es
xchg
mov
lds
adc
sbb
test
push
pop
jnp
sti
shl
stos
xor
mov
mov
xor
cld
add
aaa
pop
mov
shlb
gs
xchg
daa
inc
in
aas
std
or
mov
mov
cwtl
cmp
and
jnp
mov
ljmp
mulb
cmpsb
sbb
push
push
mov
mov
jmp
daa
popa
push
stos
shlb
hlt
jge
xchg
and
out
jge
inc
xchg
mov
push
fsubrl
fstl
xchg
add
icebp
movsl
push
cwtl
clc
jae
push
xor
mull
jne
dec
jnp
xchg
out
es
test
mov
jp
add
pop
movsb
fmuls
jle
push
stc
imul
loope
xchg
xchg
xchg
scas
cltd
ljmp
inc
imul
cmp
dec
xchg
iret
fwait
dec
jo
and
arpl
dec
aam
mov
jnp
inc
fidivrs
push
gs
xchg
mov
daa
aad
pop
fcomi
imul
or
and
popl
cwtl
fldt
jecxz
mov
pop
test
shr
mov
mov
aad
fsubs
aad
setge
add
mov
int
enter
mov
xchg
test
push
pop
sti
jg
ljmp
mov
mov
cmp
shl
cmp
jne
and
icebp
int
in
enter
sahf
ret
add
repnz
addl
mov
or
cld
movlps
out
bound
out
lods
repz
adc
lock
nop
cltd
mov
in
dec
sbb
std
imul
out
cli
ljmp
lds
pop
pop
xlat
cmp
cltd
gs
imul
stos
and
ret
mov
pop
cmc
aaa
push
daa
imul
scas
push
mov
or
ret
push
mul
fnstcw
or
stos
mov
lcall
cs
push
jb
frstor
mov
gs
jb
lahf
idivb
or
stos
subb
ret
inc
fidivl
out
fwait
ds
jge
shrl
test
dec
jle
dec
mov
mov
fsubrs
xchg
or
push
cld
call
fadd
sub
pop
les
inc
cltd
sbb
dec
jmp
hlt
or
pushf
jns
cs
mov
sahf
je
mov
fisubs
insb
fdivl
push
push
jl
cmp
imul
sub
mov
mov
in
push
lods
fiaddl
pop
inc
addr16
stos
mov
pushf
mov
jo
jae
mov
cmc
and
mov
stos
data16
sub
rclb
cmp
call
lds
shrl
ret
mov
pop
cwtl
mov
mov
and
mov
lea
add
jmp
in
lods
mov
gs
aas
and
xchg
dec
aas
clc
inc
jae
inc
test
ja
lds
fs
ds
shrb
add
mov
mulb
mov
jg
xor
rcrl
mov
fstpt
mov
mov
fidivrs
dec
loope
stos
pop
out
data16
stc
movsb
xchg
sbb
mov
jno
cmp
fcomip
loopne
jg
sbb
cmp
pop
popf
loop
int3
dec
test
lret
sarb
into
mov
mov
mov
jno
ds
xor
cwtl
pop
fs
push
or
jle
sub
hlt
movsb
or
or
add
hlt
mov
dec
mov
xchg
adc
push
sbb
xor
popa
cs
andl
xchg
and
in
shrb
ja
jne
pop
jge
mov
mov
les
xchg
and
sbb
fists
es
xchg
adc
daa
mov
out
imul
nop
mov
push
xchg
xor
in
arpl
out
test
adcb
adc
das
mov
cmc
jbe
pop
push
mov
data16
sub
push
arpl
pop
into
iret
jbe
je
enter
pop
cmp
aas
dec
mov
call
rcrb
mov
lahf
lea
mov
jg
push
adc
cmp
add
jmp
and
es
outsl
push
aaa
push
jo
push
sbb
ljmp
jg
shlb
pushf
xchg
dec
sub
mov
xor
sub
arpl
jmp
mov
xlat
ret
pop
shrb
and
adc
xor
xchg
mov
ds
dec
lds
dec
loope
int3
negb
lea
inc
ret
popa
fnstenv
pop
aas
dec
in
adc
add
imul
jmp
mov
cli
popa
mov
cmp
inc
test
adc
sahf
pop
movsb
cmp
test
cmp
inc
das
and
push
movsb
inc
and
xchg
bound
adc
test
jmp
cmpl
inc
sub
cwtl
and
jb
sarl
fistps
mov
inc
jmp
pushf
rorl
push
rolb
outsl
or
cmp
fs
pop
inc
lods
jne
pop
jle
lods
adcl
repz
sbb
repz
stos
add
push
dec
cmp
mov
inc
mov
xor
mov
cmc
test
mov
inc
fmull
sub
sbb
es
pop
push
add
mov
mov
mov
out
in
repz
sbb
lods
aas
mov
or
rclb
cmp
push
xchg
test
and
ja
pop
gs
mov
or
ja
popa
sub
mov
repz
cmc
add
stos
rol
lahf
icebp
stc
adc
mov
insb
sub
pop
repnz
lock
in
push
stc
mov
les
leave
mov
shll
mov
mov
fldcw
ret
stc
popl
roll
dec
mov
addr16
imul
out
ljmp
das
or
cmp
iret
mov
cli
lret
test
out
aam
and
or
xchg
jns
imul
cmpsl
lret
cld
or
gs
xchg
cmp
icebp
mov
cmc
nop
mov
les
mov
ficomps
adc
in
jns
jnp
mov
push
cltd
xor
xor
push
mov
xchg
or
and
insb
scas
mov
mov
push
out
cmp
popa
jo
ljmp
sub
lcall
enter
cmpsl
jmp
lea
lds
sarb
and
xchg
mov
push
fldcw
faddl
mov
sub
sti
mov
into
pop
clc
jae
negb
mov
negl
loopne
sub
in
sbb
cmp
aam
sub
into
sub
xchg
lds
pop
hlt
dec
push
sti
jmp
inc
cmp
push
neg
jmp
sub
into
movsl
adc
mov
fwait
jg
leave
mov
jge
mov
lds
in
js
je
sbb
movl
psubsw
cltd
test
sbb
fisttps
gs
mov
or
out
testb
push
add
mov
push
arpl
aam
addr16
pop
adcb
fsubl
pop
js
add
insb
xchg
outsb
push
jbe
push
jl
xchg
pop
test
push
scas
cmpsb
in
xor
cwtl
jns
push
pop
xor
pop
pop
mov
into
or
sbb
inc
sub
repnz
add
dec
cmp
out
mov
mov
xchg
jns
sub
push
sub
fcomps
jl
push
scas
push
loopne
mov
pushf
adc
fwait
jp
cltd
adc
jg
xorb
jnp
cld
out
cmp
and
push
xchg
pop
sahf
aam
inc
push
mov
push
cmp
dec
out
popl
ss
sbb
sub
notl
addl
mov
push
add
sbb
pop
pop
dec
sti
iret
xorb
test
dec
lods
ljmp
popf
jp
mov
std
cmp
jmp
popa
testl
jle
in
dec
loop
pop
push
inc
arpl
add
xor
out
std
rolb
outsb
jb
fs
xchg
cmc
sub
icebp
popa
fadds
iret
sub
out
cmp
fcmovnu
aas
loop
jg
pop
insl
ret
insb
push
pop
int
fldt
and
push
pop
test
jmp
mov
mov
or
push
addl
and
cs
push
pushf
mov
mov
xor
mov
sub
ljmp
or
mov
push
imul
inc
lock
repnz
xchg
jns
jecxz
pop
jg
scas
mov
xor
jne
call
cld
push
repnz
sarl
mov
xchg
aaa
cmp
push
popa
inc
test
dec
test
daa
push
outsb
aaa
rcr
divl
outsl
gs
lret
sbb
notb
add
ret
loopne
mov
shl
add
enter
add
mov
inc
movsl
xor
mov
push
inc
pop
in
aas
shrl
mov
sti
inc
filds
dec
cmp
mov
pop
dec
ror
mov
dec
cs
pop
icebp
jl
mov
enter
pop
inc
fistpl
xchg
adc
es
pop
xlat
jnp
or
and
inc
test
sub
inc
dec
or
ja
mov
incb
out
pop
into
cltd
test
stos
out
xlat
and
xor
push
push
push
mov
mov
pop
mov
sbb
xchg
dec
out
outsb
orl
enter
push
out
repz
call
decl
jb
xchg
inc
pop
inc
out
sbb
imul
add
aaa
sbb
repz
sbb
add
mov
sub
cmp
push
dec
flds
out
test
fimuls
sub
cmp
int
and
xchg
ss
mov
push
cltd
push
mov
mov
imul
mov
leave
lds
xlat
pop
hlt
add
sub
adc
cli
lret
cli
xor
pop
and
adc
pop
std
xchg
xchg
daa
imul
mov
and
push
fisttpll
xlat
sbb
es
pushf
in
dec
fnsave
das
push
in
mov
test
cltd
addr16
popa
lock
aam
push
fstpt
pop
cld
xchg
mov
arpl
fwait
lahf
arpl
jp
out
dec
outsl
daa
jge
xchg
add
or
push
mov
jge
into
cmp
add
out
movsb
dec
inc
jmp
jne
je
jecxz
inc
test
push
push
loopne
adcb
adc
pop
insl
sbb
or
add
pop
cmp
loopne
push
and
mov
cmpsl
xchg
fdivl
xlat
arpl
jl
dec
lock
mov
and
and
sahf
push
dec
loop
xchg
fsub
cld
outsl
ljmp
and
jge
xchg
scas
mov
imul
jno
jg
sahf
dec
leave
pop
or
int3
mov
subl
sub
jecxz
cmp
imul
sbb
cltd
fwait
xchg
and
ss
test
iret
stos
mov
shll
mov
sub
stos
mov
or
mov
push
dec
jecxz
mov
push
cmp
jg
pop
lock
jnp
push
and
pop
lds
pusha
arpl
xchg
subl
scas
jle
loopne
lcall
cmp
test
dec
scas
sbb
adc
mov
lea
sarl
jl
in
dec
sti
inc
lcall
xor
jae
mov
xor
adc
stos
xchg
aam
mov
jno
cs
jl,pn
cmp
pop
les
cwtl
and
jo
push
cmpl
mov
hlt
dec
gs
loop
inc
cmp
cwtl
popf
bnd
add
mov
xchg
xchg
add
fwait
cmp
push
mov
push
gs
pop
and
pmaxub
mov
dec
cli
jne
lds
inc
or
cmpb
lcall
data16
push
dec
enter
aas
push
imul
ffree
pop
sahf
clc
xorl
adc
je
inc
mov
pop
inc
ljmp
xchg
stos
adc
or
ss
arpl
inc
dec
roll
aaa
insb
sbb
movsl
int3
sarb
add
movsb
add
das
sbb
jmp
or
dec
loopne
sti
lock
jns
xor
cltd
jp
ljmp
repz
loope
jnp
lret
pop
and
bound
mov
mov
mov
pop
or
dec
lcall
jmp
pop
sub
sub
mov
or
loopne
mov
dec
or
jo
mov
push
jecxz
fsubl
in
test
aas
call
adc
shr
inc
data16
test
nop
mov
adc
in
aaa
test
lcall
icebp
push
jbe
outsl
test
je
shrl
jno
daa
rclb
sarl
mov
clc
aaa
insb
xchg
cmc
add
add
mov
cltd
adc
cmp
mov
and
ret
cmc
mov
mov
mov
adc
leave
fisubrs
push
push
mov
cmp
lea
stc
xchg
cmp
test
jns
ljmp
out
cmpsl
cmp
repz
mov
xor
pushf
pop
cli
mov
sbb
cld
hlt
test
or
adc
test
mov
add
sbb
mov
xchg
cmp
shrb
rclb
add
aas
test
xchg
inc
add
imull
and
adcb
xchg
push
fwait
push
sub
cs
xchg
add
jnp
add
fcompp
jbe
cmpsb
cwtl
sub
pop
cmc
sub
movsb
cmp
xchg
cmp
pop
out
xchg
sub
add
testb
lods
inc
inc
loop
pop
lock
jnp
rcll
popa
loop
loopne
jmp
sub
push
rolb
sub
inc
mov
cmpsl
cmp
jb
adcl
mov
xchg
xor
cwtl
ds
pop
mov
cmp
cltd
push
push
jmp
or
imul
or
ja
mov
mov
mov
or
sub
or
xor
xlat
push
jmp
push
jmp
mov
and
adcl
xchg
pop
push
dec
xchg
jg
sbb
imul
xchg
rcl
or
subb
popf
jecxz
and
mov
iret
data16
lds
fstpt
mov
fistps
mov
dec
adcb
sub
arpl
sbb
or
sub
stos
mov
iret
pushf
rcl
pop
mov
arpl
sbb
xor
mov
push
xchg
and
pop
lcall
pop
ja
jb
repz
fs
inc
jmp
push
sti
aad
ret
pop
jbe
xor
stos
daa
inc
fmull
push
lahf
test
in
xchg
sub
divl
int
pop
lahf
sbb
sarl
mov
iret
pop
xchg
add
jae
push
dec
cmp
lahf
pushf
fwait
or
inc
mov
dec
aam
js
and
ja
jmp
mov
repnz
rcrl
stos
mov
mov
sti
scas
xor
fcom
sbb
insl
insl
inc
lret
je
hlt
lret
adc
inc
inc
stos
inc
pop
jo
dec
sbbb
fwait
and
sbb
lahf
lret
xchg
scas
cmp
sub
js
sub
mov
mov
mov
and
int
and
movsb
aas
clc
mov
fdivs
andl
mov
stos
sub
sub
adc
les
popf
gs
fists
jne
adc
lret
ss
into
or
shrb
sub
mov
pop
adc
je
in
cld
leave
outsb
adc
or
into
addl
xchg
ret
mulb
rol
xchg
outsb
adc
pop
push
sbb
sbb
jns
mov
mov
ja
jecxz
fcmovb
mov
lods
pop
js
xchg
adc
push
mov
lcall
or
clc
cltd
out
popf
xchg
sub
pop
lret
push
mov
fisubs
ja
in
pop
cmpsl
aam
jb
leave
mov
int
test
xor
xor
fwait
sub
push
inc
pushf
pop
inc
cmpsb
fnstenv
scas
aas
inc
lea
test
cmp
movsl
mov
xlat
xchg
negl
add
cmpsl
mov
and
or
inc
push
pop
out
stos
dec
sub
inc
and
fnstenv
icebp
mov
out
mov
gs
out
cmpsl
int
rol
out
pop
cmp
cmp
std
popf
xchg
jmp
andb
and
pop
cli
mul
push
sub
dec
je
gs
cmp
mov
or
arpl
mov
icebp
fisttpll
adc
xchg
lock
icebp
popf
movsl
lret
repnz
push
ja
push
push
imul
or
dec
imul
loop
mov
and
stc
add
jle
cmpsb
cltd
sbb
pop
jl
pop
insb
sarb
push
add
xchg
repnz
dec
sti
insl
jg
xlat
repnz
arpl
inc
adc
sbb
pop
or
stos
cmpsb
addr16
mov
jl,pt
add
ret
shrl
xor
pop
neg
int
jp
rep
mov
sub
repz
iret
scas
sbb
jl
les
js
clc
sbb
cmp
inc
push
std
int3
inc
mov
jne
adc
call
stc
jg
push
sub
fwait
pop
daa
xor
mov
jecxz
aad
ja
call
outsb
sti
and
pop
scas
sbb
cmpb
ret
mov
dec
lcall
pop
hlt
mov
push
icebp
mov
and
cmpsb
out
xor
xchg
sub
mov
repz
add
ss
mov
push
mov
push
rolb
movsl
jae
std
mov
fildll
shrl
sbb
mov
lods
sub
daa
data16
test
fcmovu
cmp
cmp
lods
jne
scas
xchg
or
lods
ds
mov
pop
fdivs
or
inc
mov
pop
sahf
mov
into
das
mov
sub
adc
or
mov
insb
leave
stos
pop
test
iret
xchg
mov
fwait
push
sti
jns
mov
sbb
push
movsl
jl
adc
add
test
and
fsts
dec
mov
mov
mov
rcll
icebp
jmp
aas
cmpsb
pop
mov
test
xchg
das
into
mov
sbb
lods
pop
sub
dec
lea
int3
sbb
aaa
pop
dec
pusha
xchg
mov
or
adc
push
mov
cmp
cli
pop
sub
adcl
int3
cwtl
subl
xor
add
push
mov
insl
jge
xchg
push
push
loopne
jle
pop
out
sbb
or
jo
pop
xchg
push
pop
push
popf
inc
xor
sarl
jae
jmp
xchg
ljmp
mov
ljmp
sub
and
insl
lret
incb
sbb
sub
aaa
dec
xchg
xor
pop
jmp
xchg
sub
add
repz
xchg
pop
mov
jne
mov
dec
xchg
dec
in
outsl
xor
aam
cmp
les
xchg
ret
lea
xchg
je
mov
cmc
iret
push
mov
pop
and
mov
xchg
sub
or
adc
shl
pop
xor
mov
inc
mov
xchg
popa
mov
test
subw
cli
push
xor
leave
je
mov
xchg
adc
imul
cmp
stos
shrl
loope
fsubrp
push
daa
mov
pushf
stos
inc
mov
stos
nop
popa
push
sbb
sti
inc
mov
inc
inc
cmp
cmpsl
imul
mov
jne
cmp
insl
fwait
mov
gs
sub
aas
and
test
scas
push
inc
adc
ret
popf
stc
pop
sub
push
lret
sbb
push
dec
in
fwait
push
lret
fs
shll
dec
xchg
jmp
cmc
popa
push
inc
cmpsl
repnz
mov
and
lods
cwtl
push
sub
out
jp
cltd
bound
xchg
xchg
mov
icebp
hlt
sub
adcb
pop
jo
loopne
scas
sbbl
jle
add
push
and
dec
test
icebp
xchg
idivb
out
enter
add
shl
jb
adc
sbb
out
jno
sti
dec
adc
sub
dec
lss
pushf
andb
imul
insl
mov
push
in
incl
sub
xor
and
mov
cmp
cmp
out
lods
dec
and
ja
or
cmc
pop
adc
dec
jecxz
mov
fbld
or
outsb
das
xor
mov
xor
pop
cmpsl
ret
inc
stc
rorb
mov
pusha
lret
scas
scas
push
in
mov
test
dec
movsl
sbb
xchg
sbb
sahf
xchg
cs
adc
xor
jecxz
mov
cli
in
sbb
mov
or
shll
movsl
sbb
dec
scas
shlb
call
fwait
xor
pop
mov
testb
cmp
rorl
add
mov
jno
sbb
sub
mov
shll
xchg
add
push
or
or
mov
inc
ds
aad
arpl
push
sub
xlat
sbb
xor
pop
sbb
jmp
xchg
and
ret
insl
es
jmp
add
in
mov
ja
jne
inc
mov
fwait
xor
cmc
cmp
and
loope
push
push
mov
xor
out
cs
cltd
jne
dec
mov
push
fwait
cld
xchg
in
cwtl
sbb
push
push
mov
push
push
xor
sbb
popa
imul
test
adc
jle
es
lods
mov
mov
inc
inc
sahf
cld
xchg
testl
mov
pop
xchg
fiaddl
and
lea
fistl
cs
xor
jno
pop
adc
leave
jae
into
xchg
push
js
xlat
es
and
push
jp
lock
jo
mov
sahf
out
sti
jbe
mov
scas
sub
push
std
sbb
movsl
cmp
mov
and
int
xor
cmp
pop
inc
inc
sbb
add
dec
xor
bound
add
inc
sub
and
js
inc
sbb
test
aad
mov
lods
push
rorl
ja
std
out
push
in
or
test
mov
shll
jne
cmp
pop
clc
mov
pop
hlt
inc
cmp
shlb
xchg
cmc
pop
xor
adc
out
xor
aaa
adc
lods
mov
popa
or
ret
mov
enter
inc
inc
call
jns
movsb
ja
lods
test
pop
aas
fidivl
lcall
cmpsb
adc
and
aam
xor
std
ret
pop
out
cmp
je
xchg
sub
and
mov
jns
icebp
and
inc
fwait
test
xchg
movsb
test
sub
push
stos
fstl
push
int3
adc
sbb
xchg
shrl
add
cmpsb
repnz
and
mov
in
cmpsl
push
cwtl
test
and
aam
int3
inc
push
test
pop
shl
dec
jmp
leave
cmp
cmp
dec
or
adc
mov
xlat
mov
int3
lret
jnp
xchg
mov
fisubl
loopne
popa
adc
rclb
lahf
test
jne
aaa
outsb
and
das
mov
xchg
call
dec
mov
sub
addr16
bound
mov
pop
jb
pop
jo
adc
mov
sub
addr16
lock
mov
mov
adc
pop
push
add
testl
xchg
sub
mov
in
push
mov
sub
sbb
cmp
add
mov
les
mov
in
add
inc
aad
lds
jg
push
cmp
xor
movsb
inc
movsl
pusha
sbb
cmpsl
and
test
arpl
into
gs
push
fistps
cmp
jbe
mov
xor
cmpsl
in
jne
and
xchg
sub
mov
sahf
ret
inc
ss
shr
jno
jg
push
scas
and
cli
jns
mov
fs
fldcw
adc
cld
and
lods
data16
inc
inc
sub
test
lret
adcl
xchg
rcrl
jne
and
jecxz
decb
imul
xor
call
mov
push
mov
push
mov
lret
xchg
push
jno
aad
sbb
movsb
inc
mov
xor
adc
xorl
mov
das
test
mov
inc
inc
sub
jbe
inc
gs
sbb
xchg
bound
movsb
pop
jo
imul
cmp
lcall
decb
dec
mov
movsb
roll
imul
andb
cmp
jae
push
dec
cmp
xchg
shrb
mov
mov
cmp
fbld
nop
dec
test
push
inc
repz
jne
mov
push
cli
mov
pushf
push
dec
mov
xchg
scas
adc
push
enter
dec
loopne
inc
fs
dec
cmp
iret
sarb
lock
push
addr16
adc
mov
stos
mov
lret
movsb
and
mov
je
inc
or
movsb
cmpb
push
cli
xor
sub
or
out
pop
sub
aaa
popf
add
mov
mov
mov
sti
mov
lds
jb
out
xchg
sbb
jnp
adc
test
rclb
xchg
test
pop
rorb
or
and
push
iret
inc
aas
in
icebp
pushf
push
push
or
aaa
mov
fmull
jno
xchg
xchg
push
mov
dec
ret
iret
push
xchg
xor
in
cmp
shlb
sbb
and
loop
push
push
dec
ret
test
rol
cmp
test
mov
hlt
mov
adc
adc
pop
mov
adc
mov
fistps
repnz
sarl
jg
hlt
stos
jmp
das
fisubrs
popa
fdivrl
mov
push
dec
data16
pop
or
mov
jo
movb
adc
leave
punpckhbw
mov
aaa
into
ds
and
inc
stc
xor
andl
jle
jge
and
dec
or
cli
icebp
insb
test
scas
inc
and
aas
dec
dec
cltd
xor
mov
ljmp
in
adc
cmpsb
mov
adc
xchg
aas
or
xor
in
or
in
addr16
outsl
xor
movsb
lods
adc
jl
mov
ljmp
test
sub
aas
push
xor
lock
mov
icebp
xor
scas
imul
lret
dec
out
int
popa
inc
insl
jge
mov
rclb
mov
lret
inc
fidivs
std
cli
popa
aaa
repz
push
jnp
jecxz
push
nop
stc
adc
rcrb
push
test
and
sub
cwtl
test
add
stos
xlat
mov
mov
mov
gs
mov
adc
int
repz
mov
sbb
xchg
mov
mov
lods
add
fldt
sti
or
xchg
mov
rolb
iret
lahf
outsb
enter
cmp
out
sbb
push
pop
cmp
mov
sub
mov
ljmp
jp
add
divl
std
andl
aad
lock
out
cmp
cmp
jl
ss
push
cmpsl
mov
fdivs
mov
jmp
clc
cmc
ss
jb
and
xlat
int3
fcoml
ljmp
push
int3
dec
ja
dec
pop
mov
mov
mov
les
sub
pop
mov
lea
sbb
cmp
push
in
add
in
fwait
stos
insb
enter
sub
scas
test
aad
mov
in
les
xchg
movsl
dec
stos
in
add
leave
dec
sbb
dec
mov
lret
imul
sub
inc
lods
movb
jmp
mov
mov
sub
shlb
test
lock
ljmp
cmp
or
lock
or
pop
adc
loop
data16
mov
jb
or
xor
cltd
jge
push
lods
jo
clc
mov
popf
mov
aas
xchg
cmpb
mov
les
mov
stc
sahf
mov
inc
mov
pop
and
dec
xchg
push
xchg
outsl
jae
aaa
mov
dec
add
cmp
push
insl
xchg
test
jo
jnp
hlt
pop
aad
jecxz
xchg
call
outsb
stc
repnz
movsb
pop
pop
repz
arpl
sub
stos
addr16
push
int3
lret
add
push
aas
and
je
and
inc
push
push
mov
adc
mov
sub
sarb
sub
notb
cltd
adc
pusha
je
sub
push
jb
rcrl
faddl
filds
orl
inc
int3
adc
xchg
fldt
mov
jmp
cmp
int
inc
popa
div
and
jle
fcmovbe
loope
pop
inc
dec
loop
sbb
jl
or
jecxz
lods
push
shr
mov
mov
or
mov
sbb
push
in
add
mov
sbb
je
mov
stos
inc
mov
insb
leave
int
push
xor
jbe
pop
cltd
decl
push
rcrb
lds
cli
or
mov
cmp
lcall
aas
or
jnp
sbbl
ljmp
xor
shrl
xchg
push
stos
popa
out
bnd
pop
lret
enter
push
adc
xchg
push
sub
cwtl
cmc
mov
ret
pusha
nop
aam
insl
or
jb
sbb
imul
push
dec
stc
iret
aam
jle
mov
mov
movsl
leave
mov
out
xchg
lods
add
repnz
add
sub
fdivl
adcl
mov
mov
imul
pop
mov
int3
mov
cmpsb
ds
or
or
scas
cmpsb
jle
shlb
out
or
hlt
cmp
adc
pop
or
int3
jnp
mov
pop
push
lret
lret
dec
xor
inc
lods
movsb
push
ret
fmulp
mov
movsl
decb
call
sahf
ja
out
stos
int3
lock
pop
ds
jns
aaa
in
test
cli
aaa
dec
inc
xchg
sbb
test
sahf
mov
mov
ljmp
clc
cmp
outsb
mov
dec
jno
inc
stos
mov
cmp
sub
test
or
out
pop
sbb
xchg
scas
pop
jp
je
jae
enter
jge
push
jae
inc
lods
in
fbld
into
pop
sbb
sarl
imul
das
mov
and
cs
add
add
hlt
addr16
push
or
ja
mov
mov
in
dec
lret
ja
stos
push
push
dec
add
jmp
cltd
roll
pop
xor
push
shrl
adc
sbb
cmp
fcomps
sbb
cmpsl
ds
lret
outsb
dec
push
pop
push
sbb
aad
loop
int
or
mov
sbb
mov
cs
xchg
adc
mov
push
cmpsl
mov
push
pop
cltd
pop
push
insl
scas
jl
mov
imul
je
and
cmc
xor
sub
cli
scas
icebp
pop
push
out
adc
push
inc
cmpsb
stos
inc
loopne
inc
test
and
xchg
lcall
ljmp
xor
mov
jmp
sarl
stc
jnp
out
pop
sub
add
dec
loope
jp
stos
cmp
xor
pop
jmp
shl
rolb
mov
mov
lcall
add
sbb
dec
popa
add
lods
insb
popf
jg
mov
fwait
and
jnp
mov
bound
bound
nopl
mov
sub
mov
int
andl
mov
pushl
pop
test
inc
mov
outsl
shlb
or
dec
pop
sub
test
push
out
mov
mov
shlb
mov
outsl
out
cltd
jmp
aaa
mov
pop
lock
push
test
cwtl
data16
dec
jmp
cmp
sub
mov
stos
orl
orb
mov
mov
insl
dec
mov
push
push
pusha
fisttpl
sub
jbe
sub
xchg
jle
add
jecxz
push
iret
imul
push
test
incb
jp
pop
cmp
dec
jns
nop
xchg
mov
movsb
pushf
push
add
push
sub
adc
pusha
lea
xlat
mov
aaa
cmpb
dec
popa
dec
in
lahf
push
mov
mov
testb
cmpsl
mov
mov
inc
inc
insl
rcrb
pop
ljmp
push
test
notb
addr16
fisubl
fnsave
imul
adc
bnd
xlat
sub
stos
inc
pop
dec
lcall
je
lds
mov
mov
imul
fsubl
cmpsb
fbstp
pusha
push
pop
rep
xchg
popf
sbb
or
mov
jle
and
jg
sub
jp
xor
mov
les
pop
nop
pinsrw
lret
int
add
push
sub
adc
or
addr16
das
xchg
std
hlt
js
jne
adc
test
cmp
icebp
test
orl
mov
push
loope
push
out
push
cld
out
mov
cmp
jmpw
sub
out
pop
ret
mov
pop
scas
inc
xchg
es
fwait
cmp
movsb
mov
movq
aas
add
push
push
clc
popf
hlt
lods
leave
xor
lret
lret
jbe
push
push
sub
jle
fbstp
pop
lods
mov
dec
sbb
notb
dec
mov
imulb
daa
popa
push
adc
test
negl
push
mov
cwtl
mov
sti
fwait
int3
mov
lret
adc
jmp
add
jo
cmp
lret
fstpl
hlt
mov
push
ljmp
jno
adc
mov
mov
orl
mov
stos
add
pop
xchg
orb
sub
xchg
mov
dec
cmc
pop
cmp
cmp
jno
enter
push
mov
in
lret
jb
sbb
and
inc
shlb
dec
lahf
mov
and
or
push
mov
ja
iret
fcomip
movswl
jge
cmp
mov
fwait
push
push
sti
std
cs
xchg
mov
popa
int3
jo
mov
jae
int
enter
jbe
movsb
pop
mov
lock
push
push
mov
inc
xor
push
out
cs
sbb
insb
mov
xchg
adcb
mov
stc
ret
dec
and
je
add
push
xchg
test
lret
cli
addr16
gs
ficompl
test
sti
jg
cmp
icebp
pop
fldcw
adc
test
mov
ret
and
adc
or
clc
pop
stos
fs
pop
imul
scas
insb
xchg
nopl
es
mov
lcall
push
cmp
mov
push
add
test
dec
dec
insl
mov
sub
xor
xchg
stc
stos
out
fcmovnu
or
push
fwait
push
pop
dec
stc
push
mov
mov
mov
mov
sbb
add
addr16
cltd
mov
pop
out
cmp
and
pop
mov
lods
shrl
add
jmp
pop
insl
pop
push
rorb
xor
inc
pop
mov
mov
mov
xchg
xchg
in
scas
mov
pusha
jnp
jo
inc
loopne
lock
xchg
mov
dec
imul
sti
imul
scas
mov
mov
xchg
add
arpl
out
rorl
mov
mov
out
mov
add
aas
aam
enter
dec
je
dec
fcomps
shrl
or
subl
mov
mov
popa
and
mov
dec
add
push
icebp
push
dec
in
dec
xchg
pop
cmp
mov
jbe
push
call
mov
dec
arpl
popf
repnz
test
push
lods
mov
cld
xchg
les
xor
add
mov
imul
mov
push
sbb
lea
adc
xchg
stos
sub
pop
inc
loop
xor
push
repz
orl
inc
leave
ret
add
pop
aaa
xchg
dec
aaa
mov
fstpt
cmc
inc
xchg
int
cs
adc
insb
xor
sahf
sbb
push
icebp
aaa
push
movsb
lret
inc
fsincos
sar
frstor
push
in
sbb
or
je
pushf
ds
pop
jo
xchg
push
xchg
out
repnz
imul
or
mov
daa
or
mov
or
pop
in
pop
repz
push
mov
scas
inc
push
pop
adc
or
sbb
push
popa
mov
or
push
cmp
neg
mov
movsb
pushf
repz
push
shrl
enter
and
je
lods
inc
lahf
xor
int3
mov
xor
in
clc
cmpsl
mov
adc
ret
ds
es
mov
dec
push
daa
scas
bound
iret
call
mov
addb
pop
pop
push
bt
clc
fstpt
in
les
cmc
or
mov
ja
lods
cmp
or
xchg
push
push
ss
sub
lret
jge
mov
call
faddl
ss
inc
lods
out
aaa
into
and
pop
add
cmp
dec
test
adc
sarl
jmp
or
mov
pop
cmp
aam
loopne
call
gs
fs
shl
xor
inc
pop
lock
mov
xchg
out
mov
sbb
add
stos
aas
cs
xor
add
pop
test
in
cmpsb
cmp
aaa
sub
dec
ds
test
mov
std
fists
leave
insb
push
mov
cs
test
ss
movl
dec
or
or
push
dec
xchg
xor
sti
or
and
orl
mov
repnz
pop
pop
dec
ljmp
xchg
imul
dec
jecxz
stc
and
mov
sub
inc
fldenv
and
and
loop
xchg
or
adc
outsb
sbb
mov
in
std
repz
add
clc
rcll
int3
lock
cmp
rclb
sahf
inc
mov
in
inc
push
mov
rolb
shlb
call
enter
das
push
mov
dec
add
mov
xor
add
in
pop
sbb
adc
pushf
xor
gs
std
jb
inc
gs
test
xor
sub
lret
or
jno
sub
icebp
push
andl
xchg
sub
sbb
or
jbe
ret
push
mov
fwait
or
xor
jl
dec
call
rorw
insl
add
sbb
es
add
sub
xchg
inc
adc
mov
lea
orb
jbe
movsb
mov
dec
sub
fsubl
add
jo
lds
cmpsl
mov
imull
pop
jle
pop
push
leave
push
test
ja
fwait
test
sbb
popa
andb
mov
fcmovb
inc
std
mov
mov
mov
adc
arpl
out
clc
xlat
lock
imul
cmp
inc
or
push
lock
mov
xchg
andl
push
in
shll
push
pop
push
mov
xor
testl
cwtl
shl
push
mov
push
in
outsb
add
fidivs
mov
cmp
arpl
fldl
dec
outsl
loop
cmp
or
mov
inc
pop
adc
add
hlt
icebp
xchg
insl
stos
sub
mov
mov
aad
inc
jns
mov
push
in
inc
pop
fidivl
sub
jecxz
mov
sahf
ficompl
mov
pop
jp
ret
jnp
pop
loop
lods
icebp
push
insl
xor
cmc
lret
dec
std
fists
scas
dec
aas
dec
pop
lahf
mov
loopne
and
sub
scas
in
negb
add
xchg
mov
sub
xor
xorb
push
lods
push
aad
or
jg
or
stos
sbb
adc
leave
mov
jp
imul
sbb
dec
mov
ljmp
push
inc
stos
xor
scas
push
sbb
dec
cmc
js
js
xchg
dec
push
xlat
bound
dec
adc
bound
stc
lock
imul
cmpsw
inc
xor
xchg
add
or
mov
sub
stos
mov
push
fistl
inc
cmp
pop
mov
clc
add
cmp
jge
aam
icebp
adc
adc
call
xor
or
nop
push
sub
mov
sub
or
std
mov
add
js
loop
out
js
shl
jnp
pop
enter
cwtl
lods
call
add
inc
jbe
stc
jecxz
push
daa
push
or
in
insb
imul
inc
mov
lcall
mov
push
xlat
mov
and
pop
lcall
push
dec
jb
outsl
ja
cmp
jne
mov
test
dec
pusha
ret
cmp
lds
cmp
rcl
shll
pop
cmp
je
mov
cmpsb
ss
andb
adc
mov
inc
push
pop
loope
mov
xor
mov
clc
addl
fwait
mov
jae
int3
test
xor
pop
push
mov
pop
ss
inc
sti
mov
mov
mul
iret
jle
bound
das
addr16
nop
jecxz
lcall
dec
jge
lret
dec
inc
bound
dec
push
pushf
add
movsl
cmpsb
inc
pop
mov
cmp
sub
shrb
movsl
clc
sub
rcrl
and
inc
and
mov
gs
shl
xchg
jp
mov
ret
lods
jo
pop
push
mov
jnp
sub
xchg
lret
xor
inc
out
xchg
and
pushf
addr16
pop
push
ljmp
xchg
pop
inc
add
sub
lea
xor
xchg
call
imul
inc
sahf
fldenv
xor
inc
mov
xlat
jle
xchg
mov
pop
in
in
jl
push
dec
nop
sub
sbbl
jb
insl
movsl
xchg
adc
das
add
gs
int3
pop
jge
mov
cli
movsb
and
add
arpl
adc
out
lret
mov
jne
out
fstpl
or
adc
cmpsl
test
fldenv
pop
adc
imull
hlt
data16
outsb
in
inc
mov
jb
popf
xor
lahf
push
mov
or
scas
dec
adc
inc
nop
sti
inc
cmp
push
imul
mov
push
jae
into
or
lock
jb
aad
jmp
cld
mov
addl
stos
lret
ds
das
mov
inc
lds
mov
mov
cmpsb
or
test
and
int3
std
xchg
lret
mov
ljmp
stos
addr16
sub
xchg
jecxz
inc
in
mov
fucom
mov
mov
push
add
mov
roll
incl
arpl
movsl
and
fcoml
pop
fcmove
lcall
pop
out
pop
leave
pop
idivb
movsl
mov
es
and
test
sbb
iret
imul
dec
xor
mov
pop
mov
mov
stc
mov
xchg
xor
adc
arpl
cmp
std
int3
in
cmc
push
mov
push
cmpsl
icebp
iret
cmpsl
ret
lds
or
pusha
add
stc
dec
gs
jae
cld
aam
popf
stc
push
dec
js
jbe
add
adc
test
loope
addr16
pop
lret
mov
inc
inc
fmulp
mov
call
sbb
ljmp
insb
bound
lcall
or
stos
cltd
and
decb
adc
sub
int3
sub
push
adc
dec
lret
lret
das
clc
cmc
cmp
or
sahf
mov
fnstsw
ljmp
push
push
jno
fcompl
xchg
dec
gs
loopne
lock
mov
sbb
out
repz
xchg
fisttpl
pushf
mov
stc
cmp
jp
xchg
dec
add
push
shll
hlt
or
fistpll
push
or
xor
push
pop
test
insl
sbb
or
inc
cmp
and
mov
ret
and
xor
hlt
lods
cwtl
and
mov
jmp
sarb
popa
mov
rol
test
in
jl
fbstp
lcall
loope
movb
imul
mov
in
mov
sti
orb
lods
addps
rcrb
aaa
stos
shll
sarb
dec
pop
insb
hlt
scas
inc
push
pop
enter
mov
or
xchg
dec
dec
int
push
std
insl
out
pop
cmpsb
mov
pop
mov
sti
mov
fcos
pop
icebp
push
aam
push
repnz
mov
arpl
jae
sarb
loop
icebp
add
leave
jb
fldt
mov
mov
mov
inc
jo
add
xchg
ret
pop
and
sbb
je
dec
cltd
and
pushf
cmpsl
ds
adc
js
jmp
fs
cli
jmp
out
xchg
push
xchg
or
push
ja
dec
cwtl
mov
add
aas
cmp
cli
sbb
or
push
mov
inc
or
xchg
sub
mov
pop
call
or
push
jno
mov
cwtl
lahf
inc
or
cmp
mov
dec
or
mov
push
out
insb
jle
adc
lcall
es
sbb
sahf
in
push
lcall
push
cwtl
pop
mov
repz
cmp
mov
jmp
test
and
cli
push
sbbl
jl
jg
sarb
movsb
cmp
jp
mov
push
incb
std
repz
mov
scas
xor
xorl
gs
dec
das
jns
inc
xor
or
inc
lods
mov
aad
popf
movsb
mov
inc
mov
push
push
aas
fmull
inc
inc
addb
xor
add
cltd
sti
xchg
pusha
jp
dec
sub
dec
jle
and
repnz
ds
fstl
pop
negl
fucom
and
rcrl
out
mov
xchg
fildll
icebp
pop
pop
in
out
pushf
in
xchg
stc
jns
sbb
jge
jge
test
movsb
test
pushf
add
lret
push
testb
lret
adc
test
movsb
and
sub
jle
pop
test
mov
imul
das
push
xor
sbb
shlb
xchg
add
and
xchg
push
mov
or
sbb
ja
mov
xor
sbb
clc
adc
lods
mov
repnz
rorl
and
mov
popa
rclb
push
je
in
popa
stos
adc
inc
imul
lea
insl
test
lahf
out
cs
stc
lahf
xor
stos
sbb
pusha
pop
mov
hlt
jp
gs
sbb
add
leave
sub
loopne
pop
insb
jno
cmp
mov
fisttpl
cmp
es
mov
addl
cmp
hlt
push
in
mov
movsb
sarl
loopne
push
jo
sbb
ja
pop
std
xor
xor
sbb
leave
lea
test
sti
sbb
jmp
movsl
ds
mov
jo
mov
cmp
and
mov
pusha
add
addr16
pop
mov
dec
fcomps
xchg
adc
ret
lods
repz
shll
jb
push
lret
popf
les
pop
mov
frstor
jle
inc
sahf
push
jbe
popa
or
fidivl
in
je
in
pop
hlt
and
cmp
in
sbb
pop
imul
aaa
test
fbld
dec
daa
xlat
jns
mov
push
std
xchg
cmpsl
cmp
adc
out
enter
xchg
and
cmp
lods
add
fwait
iret
xchg
mov
out
pop
push
adc
fistps
in
push
dec
mov
test
cmp
aam
and
ret
repnz
dec
repnz
lods
in
jg
cmp
mov
push
pop
sbb
push
int
pop
loop
scas
mov
mov
out
scas
or
lahf
sbb
je
mov
xchg
popf
inc
pop
cmpsb
xchg
ljmp
lods
mov
and
mov
nop
push
shrb
nop
mov
ret
cmp
outsl
jl
movsl
mov
sbb
repnz
ja
adc
push
gs
inc
outsl
add
or
xchg
dec
js
sbb
divl
pop
and
sbbb
push
in
das
pop
mov
cmp
push
andb
enter
mov
mov
pop
xor
test
jecxz
test
fistpll
sub
idivb
icebp
movsl
mov
lret
jmp
xchg
ss
stos
fnstenv
cmp
xorl
sbb
popf
mov
ficompl
xor
dec
jg
pop
pop
je
mov
mov
jmp
stos
mov
daa
call
fldt
shll
mov
scas
add
mov
and
pop
mov
sbb
add
jb
push
test
inc
pop
stc
cwtl
test
fxch
push
push
lret
push
push
lret
dec
pop
lretw
mov
and
mov
movsl
mov
dec
je
out
loope
int3
dec
inc
repnz
ljmp
jbe
aad
test
jecxz
int3
scas
das
adc
into
loop
lcall
adc
xchg
sub
cltd
ss
dec
push
dec
or
mov
pop
push
imul
adc
call
loop
scas
push
mov
sub
cmpl
mulb
mov
cli
adc
jmp
sbb
jb
data16
xor
scas
imul
fidivrl
pop
sub
add
cmp
inc
xor
xchg
in
out
add
mov
or
in
adcl
adc
sbb
pop
jg
dec
movsl
or
mov
icebp
stos
push
xchg
mov
add
ss
mov
stc
aas
je
pop
adc
or
push
mov
and
push
dec
mov
clc
ss
icebp
arpl
scas
shl
mov
push
popa
mulb
insb
fs
mov
xchg
arpl
cmp
mov
cmp
push
mov
push
sub
fcmovb
push
adc
shr
xchg
cwtl
test
mov
mov
into
mov
xlat
pop
in
mov
fyl2x
sub
orb
add
add
pushf
cmpsb
mov
subb
inc
pop
sti
push
pop
lock
inc
pop
push
pop
cmp
lock
lea
sbb
push
loopne
pop
mov
int
cmpsb
leave
or
cmc
and
js
lock
mov
shll
adc
fwait
push
int
adc
push
cmc
pop
mov
inc
mov
cli
dec
pop
sub
cld
pop
cmp
das
mov
adc
or
test
push
les
or
cs
sub
and
xchg
jno
cmpsb
mov
shll
stos
sub
repz
gs
inc
pop
mov
aad
push
adcb
mov
add
sbb
push
mov
push
add
js
test
or
les
push
addl
jae
int3
jae
adc
inc
mov
inc
or
or
push
in
jp,pn
cwtl
ret
or
sub
mov
repnz
iret
popf
in
inc
test
fnstsw
popf
inc
repz
dec
mov
adc
xor
mov
push
push
adc
outsl
pusha
cli
mov
dec
sbbb
or
daa
data16
mov
mov
xor
mov
fwait
xorl
xchg
push
fs
sbb
mov
ja
and
mov
in
imul
movsb
leave
adc
leave
jae
ficomps
popf
nop
mov
sbb
ret
iret
add
inc
add
inc
jb
stos
sahf
cli
jno
aam
shll
mov
mov
outsb
pop
inc
push
cmp
lock
sti
pop
fnstcw
adc
mov
nop
xor
mov
xor
aad
outsb
push
adc
rorl
mov
push
lcall
mov
or
cltd
inc
clc
iret
clc
jnp
inc
je
inc
add
jp
push
jne
std
je
jle
outsb
mov
adc
adc
inc
sbb
loopne
jl
loop
dec
repnz
outsb
sub
mov
test
insl
xchg
js
aad
test
shl
dec
sbb
jnp
movsb
dec
icebp
pop
fwait
icebp
mov
jnp
cmpsl
mov
or
or
inc
mov
dec
shlb
sub
xchg
lcall
jp,pt
pop
cmp
push
inc
or
dec
adc
dec
aaa
push
inc
cli
bound
dec
mov
cmpl
jns
add
sbb
call
pop
notb
dec
cmp
fiadds
out
pop
xchg
cmpsb
ds
jne
push
lret
jno
sahf
movsb
clc
subl
mov
shlb
insb
mov
sbb
popf
jle
loopne
inc
lahf
loopne
sub
or
movsl
lods
dec
test
iret
cmc
sub
dec
or
inc
sarb
ds
in
xrelease
dec
movsl
cmp
fisubl
mov
repnz
gs
in
jecxz
inc
mov
arpl
sarl
mov
add
es
nop
push
notl
cli
push
jmp
cli
imul
inc
push
xor
lods
lods
jo
rcl
mov
aas
mov
lret
mov
lret
xchg
call
hlt
scas
mov
cmpsb
in
sahf
sbbl
jp
push
xor
repz
in
cmpsl
jge
jnp
orl
pusha
xchg
js
xor
clc
sahf
mov
popa
call
clc
cmp
and
cmp
cltd
out
inc
inc
mov
mov
imul
arpl
pop
insl
daa
out
lea
push
xor
mov
mov
mov
aad
popa
roll
mov
ret
insl
lods
push
pop
pop
test
xor
cmp
out
add
xor
mov
jmp
xchg
sub
ret
rorl
xchg
fs
jnp
pusha
test
xor
jp
jmp
mov
stc
shrb
mov
cwtl
sub
and
and
or
mov
jl
out
xchg
inc
test
lret
xor
lahf
xor
adc
and
imul
jnp
dec
sub
nop
je
cltd
and
orb
daa
test
lretw
data16
mov
in
test
jl
fidivrs
jnp
into
and
adc
mov
std
cmp
push
jl
insb
add
mov
mov
sbb
sbb
data16
loope
mov
aad
ljmp
pop
push
repnz
sbb
xchg
pop
mov
testl
push
out
in
sbb
insl
pop
aad
lret
cmp
pop
xor
and
scas
insb
daa
add
and
shrb
aaa
arpl
cmc
cmc
add
scas
jle
sbb
and
repnz
lods
dec
scas
cltd
frstor
ret
or
jne
ret
fildll
or
sbb
inc
mov
loopne
stc
shrb
xchg
call
stos
or
dec
push
jnp
jmp
pop
mov
xchg
scas
pop
fdivrl
add
sbb
imul
dec
pop
leave
popf
pop
jmp
popa
clc
nop
jg
mov
inc
mov
ss
lea
push
les
mov
push
cmp
in
rcll
pusha
inc
icebp
inc
sbb
shld
sub
xor
push
dec
shll
sbb
or
insb
cli
hlt
lahf
cmp
lds
hlt
shl
push
cld
add
xor
add
andb
insb
stos
test
inc
rcrl
dec
dec
sub
pop
and
xor
push
dec
loop
cld
jnp
das
mov
xchg
xor
cltd
pop
cmp
adc
sub
out
fstl
mov
lret
mov
mov
mov
pop
call
jp
push
mov
outsl
insl
les
dec
dec
push
push
rclb
into
insb
mov
out
loop
xchg
and
int
test
arpl
xchg
ss
add
push
mov
stc
sti
outsl
ret
xor
outsb
aad
or
fisttpll
out
fists
popf
cmpsb
jns
xorb
jb
mov
rcl
shrl
data16
pop
addb
sub
jo
pop
lret
ss
int
test
lcall
cmp
pop
or
sbb
and
rcl
mov
std
sbb
xchg
add
leave
and
rcr
lock
in
dec
sub
xchg
sbb
xchg
aas
fwait
or
add
out
mov
xor
shll
xchg
out
cwtl
xchg
adc
movsl
dec
pop
into
pop
dec
repnz
rcll
int3
test
pop
test
popf
push
sub
dec
rcr
and
or
data16
and
push
mov
stc
into
jne
repnz
cmp
js
popa
notl
mov
std
pop
or
rol
loope
mov
xchg
cmpl
into
or
aam
int3
popa
jge
out
popa
mov
cmp
das
mov
adc
in
mov
pop
movsb
repnz
xor
fwait
enter
fsubr
data16
push
hlt
in
push
xchg
shrl
in
in
icebp
xchg
cltd
js
xchg
adc
fwait
lret
mov
adcl
pop
mov
cmp
imulb
iret
pop
add
rcll
js
aad
dec
lock
and
icebp
aaa
call
decb
xor
adc
int
inc
xor
jns
push
lods
jge
test
aam
adc
pushl
mov
jmp
xchg
sub
sub
push
lods
xorb
push
xor
inc
push
ds
jge
pop
sbb
mov
push
mov
add
dec
cmp
imul
mov
pop
clc
aas
out
loop
push
cmp
loop
pop
adc
push
loop
jae
mov
lds
or
and
push
jbe
xchg
lret
pop
mov
add
aaa
fs
push
stc
sub
inc
fsubs
jns
sub
mov
lock
xchg
add
mov
fisttps
mov
push
sbb
scas
add
out
dec
outsb
hlt
mov
mov
and
jns
shrb
pand
mov
aaa
mov
icebp
scas
pop
add
pop
adc
mov
lret
jne
dec
daa
mov
dec
xchg
jge
mov
leave
aas
mov
xor
lret
or
fwait
or
out
aas
fs
repnz
or
stos
or
sahf
std
or
std
add
in
cmpsb
les
js
stc
or
xlat
sahf
or
iret
clc
outsl
push
lock
lcall
dec
or
jb
scas
iret
inc
mov
inc
push
je
sub
loope
ja
pop
add
inc
pushf
xchg
dec
sub
push
inc
push
dec
sti
outsb
lcall
adc
cmp
jmp
xchg
add
test
popa
or
adc
ss
call
aad
out
rorl
pop
dec
cltd
int
mov
popf
mov
mov
mov
stos
les
subl
and
jne
jae
sub
in
mov
adcl
lods
xchg
mov
or
mov
jle
insb
fimull
sbbl
inc
or
adc
sub
insb
shlb
pop
in
jo
push
pushf
mov
stos
jl
pop
cmovge
fstl
or
inc
push
add
push
dec
out
push
sahf
xor
call
int3
xor
or
dec
adc
aas
cmp
fistl
lret
cmp
enter
lea
sbb
mov
cmp
pop
decb
test
scas
add
repz
sahf
xor
or
sub
outsb
sbb
cmpb
adc
or
mov
lahf
pop
or
and
repz
popa
clc
popf
cwtl
fs
mov
js
mov
shrl
cmp
dec
mov
add
fdiv
mov
cmc
out
outsb
das
add
mov
dec
mov
ss
pop
scas
dec
pop
push
rclb
popf
xor
add
movl
pop
or
xlat
aas
fcoms
push
fists
lret
inc
sti
rcrb
rcl
lods
inc
xlat
push
jle
xchg
pusha
cmp
gs
loopne
dec
jmp
sahf
pop
orl
adc
out
aad
sbb
pop
movsb
dec
mov
mov
test
cmpsb
jp
es
jp
and
fists
clc
fildl
jle
ja
hlt
imul
pop
mov
inc
lret
pusha
mov
and
arpl
mov
push
add
dec
lea
out
dec
adc
mov
sbb
mov
mov
xchg
ja
std
mov
mov
push
inc
shlb
iret
sbb
mov
sub
xchg
pop
add
out
test
data16
xchg
sarb
out
cmpsb
adc
addl
push
or
pop
ret
xor
inc
call
in
pop
clc
clc
shlb
mov
in
lret
loop
sub
in
sar
stc
push
inc
jp
stos
jns
rolb
lahf
pop
adc
leave
mov
xchg
pop
mov
jg
in
aam
jnp
jae
or
test
sbb
mov
dec
out
movsl
call
hlt
adc
aad
std
fs
mov
je
or
cmpsl
xchg
dec
adc
mov
push
xor
std
es
and
mov
arpl
or
leave
sub
cmp
icebp
push
inc
push
pusha
testl
sti
inc
lret
fs
or
or
cmpsl
out
sbb
orl
sbb
sbb
fs
mov
mov
mov
push
mov
mov
jge
fsubrl
stos
pop
outsb
dec
or
aad
rcr
cmpsl
lds
lock
insl
dec
test
mov
cmp
or
out
and
xchg
inc
sub
cmp
pop
and
mov
sub
jne
out
mov
dec
push
enter
pop
icebp
roll
shll
jge
sti
and
data16
sti
xor
push
es
jno
popf
adc
movsb
jl
add
cwtl
stos
or
es
movl
test
mov
add
xchg
cltd
test
adc
dec
lods
arpl
jle
xor
fisttps
in
scas
push
sahf
movsl
loop
mov
dec
dec
lcall
inc
or
sub
aas
imul
rolb
and
out
pmuludq
int3
pop
push
leave
or
jno
or
adc
mov
test
mov
mov
dec
xor
mov
mov
cs
ss
pusha
jo
ret
pop
es
jge
inc
loope
push
popf
mov
lret
mov
push
jne
loop
sub
mov
inc
fisubs
and
mov
mov
cli
jp
btr
enter
jp
clc
outsl
mov
and
xor
xchg
out
mov
cmp
adc
mov
out
xchg
adc
mov
mov
dec
and
jl
rolb
out
das
scas
jne
mov
in
adc
sahf
inc
dec
in
pusha
add
and
mov
mov
loop
jno
push
mov
inc
xor
jge
jle
add
pop
lahf
pop
mov
frstor
dec
adc
into
int3
lahf
in
mov
pop
in
jo
sub
ficomps
ljmp
jmp
lds
push
mov
popa
rol
addr16
lret
cwtl
sbb
dec
dec
pop
lds
pop
adc
lret
ja
imul
rcrb
jnp
xchg
cmp
push
je
subl
test
dec
sarl
sub
insb
shrl
fldenv
pushf
mov
dec
mov
xor
add
pop
test
xchg
cmpsl
fndisi(8087
mov
add
sahf
cs
mov
cmp
sbb
dec
fnstenv
fsubs
popa
push
sub
loope
lds
sub
addl
fildl
mov
mov
jb
mov
mov
mov
sti
in
mov
dec
cmp
cmp
xor
jb
push
dec
xchg
popa
clc
call
cli
pop
mov
adc
js
cs
sarb
mov
outsl
pushf
pop
xchg
sbb
jmp
sarl
rcrl
imul
pop
mov
fisubl
or
xor
sub
std
outsb
push
mov
lods
sub
push
pop
dec
jno
into
les
hlt
scas
sub
push
fs
jno
ret
rorl
jns
dec
mov
push
and
xchg
stos
and
std
cltd
inc
lock
sub
repz
mov
inc
fs
pop
lcall
lcall
aam
je
and
xchg
push
inc
cld
xchg
xor
adc
mov
fwait
xor
mov
lret
ficoml
icebp
jae
mov
les
leave
dec
loop
repnz
jo
add
ret
jecxz
inc
push
mov
cwtl
push
cmp
fmull
push
std
xchg
jp
enter
xor
xor
or
pop
lods
and
loop
aas
dec
and
adcl
cmpsl
dec
jmp
or
xchg
add
sub
xchg
sub
xchg
pop
movl
out
imul
outsl
sub
add
push
adc
int3
adc
xchg
cmp
pop
mov
add
das
push
rorb
dec
fcmovnbe
stos
ds
push
fistpll
sbb
xor
cmpsb
lods
inc
out
adc
add
shlb
mov
lods
aam
mov
pop
jb
and
add
push
xor
inc
mov
dec
in
in
dec
repz
mov
cwtl
into
int
xor
mov
fs
cmp
xor
stos
cmpsl
pop
mov
push
test
xchg
mov
inc
lods
pop
lock
mov
js
ja
pop
es
out
xchg
stc
call
jno
mov
cmp
add
nop
enter
mov
dec
dec
loop
insb
popl
adc
and
xor
cmpb
sbb
or
and
xor
mov
scas
inc
mov
dec
int
jnp
sub
loopne
out
pop
fldt
push
call
xor
mov
stos
push
sub
or
push
jg
mov
and
fsubr
mov
xorb
fdivr
in
pop
imul
ljmp
in
mov
in
and
jne
or
int
sub
imul
adcb
mov
inc
mov
jo
add
mov
or
mov
stc
push
in
push
dec
scas
lea
pop
bound
cmp
sbb
ret
cmc
ret
negl
je
shrb
mov
icebp
mov
test
pop
pop
mov
rorl
mov
push
call
stos
test
neg
cmp
fistpll
adcb
hlt
adc
shrl
scas
inc
adc
out
xchg
arpl
sub
mov
movsb
push
sub
cs
movsb
inc
dec
xor
gs
push
fs
xor
fs
push
repnz
xor
mov
imul
je
jne
dec
xchg
push
xchg
sbb
sub
mov
adc
jo
jl
outsb
push
in
bound
push
xor
or
loope
sbb
mov
cmp
cmp
jecxz
bound
popa
scas
andl
dec
pop
jmp
out
mov
in
jp
cld
cmp
call
iret
adc
cli
imul
mov
pop
xor
adcb
movsl
bound
clc
mulb
fnsave
jne
int3
lds
call
insb
inc
sbb
ds
jl
xchg
scas
rsqrtps
inc
adc
xchg
inc
and
pop
push
outsl
in
cmp
or
inc
mov
mov
pop
add
dec
in
xchg
lods
sbb
jle
mov
ds
insl
push
cs
test
lret
mov
call
outsl
scas
adc
add
aaa
outsl
cmp
inc
jecxz
mov
sub
ja
lret
add
inc
popf
scas
mov
xchg
int
loopne
shrb
call
sub
inc
lret
adcl
add
es
jae
fcom
fiaddl
add
xchg
shrl
mov
movsb
movb
mov
int
mov
cltd
and
ret
jp
in
adc
scas
int
jmp
mov
push
jmp
rcl
mov
ret
xor
sarl
clc
xor
flds
mov
jle
mov
or
cmc
aad
xor
repz
das
mov
mov
std
pop
cmp
into
jae
sub
outsl
loopne
mov
dec
jle
jno
cmp
pop
inc
test
ret
push
xchg
scas
inc
dec
in
shll
ficomps
out
xchg
dec
das
push
out
mov
xor
popa
ret
stos
jne
les
loope
test
pop
fdivrs
imul
je
je
setbe
pop
aas
repz
pop
sbb
or
fcmovnb
out
push
out
mov
sbb
and
jg
mov
shll
sbb
pop
inc
jl
xchg
dec
out
test
sti
adc
xchg
arpl
enter
mov
les
and
mov
xor
or
pop
mov
mov
rclb
enter
das
iret
enter
xor
outsb
or
lcall
aaa
inc
xchg
sub
push
out
lret
mov
nop
cmpsb
icebp
mov
rol
push
aam
cmpsl
push
xlat
inc
add
sub
mov
push
outsl
push
sbb
cld
rorl
lods
sub
outsb
adc
xor
lock
mov
ljmp
in
sti
pop
and
fcmovu
inc
or
xor
imul
xor
dec
insb
ss
fnsetpm(287
mov
ljmp
sub
andl
xchg
test
jp
push
ss
inc
mov
cmp
jl
add
repz
jno
repnz
mov
aad
out
jp
and
fldl
pop
mov
sti
sbb
push
inc
loopne
cmp
pop
lock
ja
rcrl
mov
sub
insl
fbstp
popf
fs
sbb
mov
ret
xor
stos
fnsave
out
add
add
cmpsb
push
movsl
and
mov
repnz
repnz
lds
sbb
dec
sub
mov
xchg
add
jle
jae
cltd
mov
or
mov
mov
xor
mov
out
imul
jae
pop
push
mov
test
mov
lahf
addl
lret
mov
or
std
jecxz
fsts
inc
adc
mov
jae
mov
sub
mov
test
mov
adc
lret
je
lcall
fistpll
dec
inc
mov
cmc
jl
lcall
iret
adc
ret
les
aaa
cltd
inc
sarb
push
dec
pop
repnz
enter
push
sbb
xchg
xor
push
push
std
scas
call
lods
lret
popa
dec
or
jns
adc
out
out
xor
rcll
cmp
push
mov
fsin
adc
mov
addb
xchg
jbe
mov
xor
outsl
stos
inc
aaa
cld
cmpsb
repz
rcll
sub
repnz
or
ljmp
cmp
add
incl
inc
lea
lahf
mov
lahf
cmp
jb
std
xor
aaa
daa
cwtl
xchg
pop
lret
mov
pop
icebp
int3
push
push
pop
fsubs
ffree
adc
and
ss
test
lret
gs
mov
lret
lcall
xor
xor
xor
movd
shrl
xchg
imul
insl
mov
pusha
icebp
push
stos
cwtl
std
roll
push
xlat
ja
loope
mov
loope
sub
mov
in
clc
repnz
add
jae
in
push
cwtl
push
gs
sub
test
lods
imul
push
mov
xchg
mov
mov
xlat
fiadds
mov
loope
shll
sbb
jo
adc
jnp
sub
and
out
xchg
cmpsb
nop
pop
aad
xchg
push
jne
outsl
adc
int3
int
repnz
in
cmp
jl
enter
imul
push
div
inc
popa
mov
adc
pop
ret
js
ss
adc
xchg
add
roll
pop
sti
imul
iret
xor
mov
mov
je
mov
dec
sti
push
xchg
jmp
fldcw
mov
pop
sbb
enter
lcall
sub
testb
imulb
cmp
dec
sub
imul
jnp
jo
push
lahf
xor
and
push
in
jae
xchg
pop
ret
inc
mov
fwait
jmp
stc
mov
push
xlat
out
adc
ss
mov
pop
jno
or
cmp
add
jp
jb
ret
or
pop
mov
fwait
addr16
decb
movsb
adc
shll
cmpsb
mov
push
push
xchg
mov
pop
or
mov
jno
inc
lods
mov
cmp
std
cltd
movsb
push
outsb
daa
int
clc
or
addr16
jno
add
outsl
aas
clc
clc
aad
jo
mov
pop
insl
sbb
fisttps
sub
mov
int
cmp
rcr
sbb
add
sti
popa
ja
lahf
cmc
adc
not
loopne
or
sub
and
xchg
xor
dec
pusha
jl
dec
fwait
test
aaa
xchg
lahf
sbb
mov
add
outsl
dec
push
inc
lret
pop
stos
shrl
in
and
fidivrl
pop
push
ret
inc
lret
inc
jecxz
repnz
stc
or
imul
xorl
push
repnz
mov
outsb
jae
jns
pop
scas
sbb
mov
xchg
add
es
adcl
mov
cmc
sbb
push
jp
test
movsb
stc
fnstcw
inc
push
mov
pusha
pushf
push
stos
mov
pop
aaa
fidivrs
pop
push
mov
mov
lea
mov
jno
shl
es
inc
dec
cmp
mov
sub
xlat
popa
xorl
mov
cmc
mov
xchg
mov
push
lahf
mov
mov
int
inc
int
scas
xor
mov
int3
cltd
out
cmp
cmpsb
das
dec
pop
stos
jne
pop
fs
adc
dec
dec
dec
jle
std
jp
shll
jge
xchg
lods
addl
cltd
movsb
push
jecxz
push
out
aaa
out
jp
test
jbe
add
cld
js
jnp
cmp
and
imul
popa
mov
popf
outsl
inc
sub
stos
mov
fnsave
rolb
or
int3
call
popa
std
movsb
stc
insl
inc
cld
adc
xor
cmp
jle
inc
jo
mov
and
jb
test
inc
pop
xor
add
ja
ss
sbb
sbbb
dec
mov
icebp
adcb
and
decl
cmp
adc
sub
iret
dec
inc
adc
pop
dec
push
adc
in
sub
adc
sbb
dec
out
xor
cmp
sbb
pop
lods
dec
das
add
lahf
pop
testb
call
leave
pop
repnz
loope
pop
sub
insl
clc
push
rolb
and
loopne
xchg
daa
leave
jne
cli
mov
mov
add
mov
cli
add
rcr
sbb
push
inc
ljmp
int
fistpl
push
xlat
xlat
outsb
out
jnp
xchg
mov
add
mov
pusha
or
xchg
sub
inc
push
cmp
mov
js
push
call
movsl
lds
adc
xchg
sub
cmpsb
mov
stc
dec
pop
push
stos
daa
sbb
xchg
test
sahf
lods
out
nop
pop
jb
outsl
jnp
movsl
cmc
pop
xchg
orl
pop
mov
sbb
mov
sub
leave
test
or
jg
shl
cmp
test
movsb
cmc
pop
fistps
xor
mov
rcr
les
xor
fnstcw
push
xchg
xor
shll
in
push
test
divb
xor
and
dec
push
lahf
xchg
ljmp
sbb
out
cmc
jmp
pop
xor
mov
les
jb
push
pop
insb
mov
fcomi
mov
popf
insb
ret
inc
fadds
push
fldt
dec
das
das
jae
rol
les
jnp
roll
out
inc
shl
sahf
fistpl
loopne
out
rorx
jp
inc
and
shll
inc
imul
or
inc
fildll
mov
subb
popf
js
inc
mov
push
sahf
sti
cmpsl
mov
or
adc
inc
sbb
mov
push
xchg
adc
add
mov
mov
repnz
iret
jb
or
mov
mov
add
adc
jge
and
lcall
les
test
dec
cmc
pop
xchg
xchg
mov
addr16
lcall
adc
roll
shrl
mov
or
in
jno
adc
incl
jne
xchg
in
inc
xlat
int3
in
aam
sub
je
mov
pop
xor
popl
push
xchg
shrl
jae
lock
adc
loop
stc
add
aaa
fsubl
xchg
aaa
push
popf
and
ljmp
mov
add
pop
dec
dec
mov
addb
mov
inc
sbb
xchg
pop
push
xchg
clc
mov
jb
add
shl
test
imul
adcl
in
ja
call
daa
cmc
test
jle
sbb
jle
xchg
adc
leave
mov
jge
test
xor
or
adc
mov
adc
and
dec
in
cmpsb
push
outsl
ja
pop
mov
xchg
jge
lahf
sub
shl
mov
lods
dec
pop
mov
push
cs
pop
xor
mov
lods
dec
aam
inc
xor
xor
jne
fucomp
mov
notl
jecxz
sub
jp
shll
dec
cmp
int
pop
ss
sbbl
std
pop
js
pop
aam
jb
xchg
push
push
pop
cwtl
rcrl
cmp
test
out
rorl
imul
jbe
lahf
mov
mov
out
ret
mov
int3
push
mov
outsb
fidivs
seto
in
mov
jb
and
lods
mov
pop
mov
jmp
or
push
movsl
stc
sub
imul
out
xchg
inc
xor
dec
mov
xor
xor
inc
inc
inc
xor
and
lock
xor
push
xchg
les
stos
insb
int
mov
fidivrs
dec
mov
mov
out
xchg
jmp
jp
out
test
je
arpl
adc
lret
lea
shll
jl
mov
push
std
mov
fsubp
and
jp
pop
push
mov
test
and
mov
shrl
mov
push
cmp
test
sti
popf
sub
pop
in
sti
mov
add
fdiv
int3
push
call
mov
push
jmp
or
rcrb
push
fldcw
cmp
lock
pop
test
push
out
xor
xor
dec
mov
fsubl
js
fdivrp
or
aad
rclb
dec
and
in
into
gs
adc
or
and
shr
test
jb
mov
mov
inc
add
push
icebp
xor
sbb
xor
in
fninit
out
decb
mov
lods
xor
cltd
xor
test
cmp
and
out
mov
add
or
cmp
outsb
repz
mov
jbe
pushf
xor
lret
fstpl
adc
or
or
aam
sub
mov
dec
testb
push
sub
out
cltd
dec
sbb
xor
mov
aam
test
jbe
pop
mov
cmc
xor
fistpll
or
scas
jo
mov
in
or
mov
rolb
dec
push
ja
adc
lar
mov
adc
das
cmp
aas
lock
dec
mov
notl
cmpsl
daa
sbb
mov
cmpsl
test
sbb
and
fimull
add
lods
add
aam
dec
shlb
mov
cmpsl
mov
adc
notl
leave
negb
mov
or
adc
js
and
in
std
pop
int
clc
ja
xor
mov
mov
pop
push
ss
hlt
push
mov
or
or
mov
mov
push
sahf
fcmovne
incl
sahf
and
imul
mov
rclb
scas
scas
scas
dec
cld
fimuls
inc
pop
mov
in
mov
mov
lods
xlat
shlb
scas
out
mov
mov
addr16
fcmovne
mov
jbe
sti
xchg
fdivrl
xchg
testb
mov
inc
test
in
test
mov
push
mov
jp
jbe
jecxz
lcall
push
push
xchg
mov
lods
scas
pop
std
loop
jno
cltd
clc
outsl
imul
xchg
xor
fstps
pop
dec
push
dec
xchg
scas
jg
int3
and
push
daa
test
lahf
add
sbb
mov
xor
loop
xor
mov
andl
test
orb
cmp
stos
or
pusha
push
ja
mov
bound
fs
subb
divl
shld
sub
add
sarb
jmp
addb
clc
sub
sahf
pop
sbb
pop
jo
sahf
test
mov
push
int
inc
pop
es
inc
ljmp
push
rclb
adc
ss
imul
test
add
mov
inc
ljmp
cmp
pop
iret
and
adc
andb
inc
divb
pop
push
aam
push
std
fisubrl
fnstenv
aad
daa
lcall
cmp
push
cmp
ret
lahf
arpl
test
fs
mov
sbb
dec
mov
adc
or
lret
mov
pop
mov
or
sbb
mov
mov
cwtl
stos
push
sti
lea
insb
mov
shrb
fdivl
insb
fsubrl
in
dec
repnz
imul
inc
test
mov
insl
int
jnp
shr
pushf
movsb
repz
dec
into
test
cwtl
adc
xor
mov
jg
mov
or
dec
cmp
cmp
call
test
aad
outsb
inc
pop
jmp
push
sub
or
jle
push
mov
mov
mov
sbb
mov
fisubrs
movsl
outsb
clc
hlt
je
push
cmpsl
dec
add
out
lea
lds
stos
rol
add
inc
rorb
fistpl
popa
add
jno
sub
mov
andb
clc
inc
repz
xlat
xor
inc
sarl
clc
popl
push
negl
test
aaa
pop
pop
rorl
jge
jle
iret
scas
add
cwtl
clc
mov
mov
dec
adc
hlt
lea
sbb
testb
cmp
sub
xchg
add
insl
int3
arpl
mov
int3
mov
cmp
xchg
aad
test
cmp
js
in
in
movsl
add
enter
jge
inc
xor
ljmp
lods
cmc
fldt
cmp
fs
mov
xchg
call
je
lods
test
rorb
pop
sbb
aam
scas
sub
dec
repnz
nopl
mov
nop
rclb
daa
jge
aas
or
test
mov
xor
stos
pushf
mov
lret
or
sbb
jecxz
aas
ds
das
outsl
sbb
lock
add
js
mov
sti
fdivrp
mov
lcall
int
xlat
xor
in
insb
cmp
sahf
push
push
dec
popa
fdivl
mov
lcall
sbb
inc
jmp
jo
fcomi
ljmp
in
in
sub
push
jne
mov
into
jnp
jne
xchg
insl
add
xor
dec
or
lock
inc
or
inc
dec
pushf
test
lock
and
and
stc
into
adc
mov
pop
dec
mov
lret
sub
lds
sbb
cmp
sub
scas
sbb
fwait
test
inc
sbb
or
push
xchg
sub
pop
rcrb
mov
pop
fildl
jp
mov
enter
js
add
sbb
in
and
imul
push
mov
test
scas
mov
pop
xor
std
xchg
and
mov
xchg
jno
out
adc
mov
lret
pop
jo
dec
and
inc
adc
dec
push
test
popa
mov
jp
jnp
jno
imull
jae
fcoms
shll
outsl
loope
pushf
fiadds
lahf
xor
je
mov
cmp
test
aas
rorl
shlb
pop
jbe
inc
imul
cmpsb
inc
mov
fidivs
sub
les
mov
lock
imul
movsl
mov
mov
add
mov
mov
or
cmp
adc
scas
arpl
or
mov
jns
js
imul
xor
push
roll
sub
rcl
jmp
add
fldcw
mull
test
lods
repnz
ds
ljmp
push
aaa
imull
jmp
sub
mov
sbb
in
pop
adcl
jecxz
movsb
insl
jne
xor
int3
je
lea
fildll
adc
cltd
mov
ret
das
icebp
mov
jne
fwait
sub
cmpps
adc
std
lret
xchg
sti
xchg
leave
jecxz
xor
arpl
leave
mov
dec
xchg
stos
jp
jbe
push
lahf
stos
clc
inc
jnp
push
sub
pusha
imulb
adc
push
push
out
and
push
adc
imul
jo
and
or
sub
stos
mov
dec
adc
call
inc
sbb
andb
add
lahf
das
mov
dec
sbb
jl
in
clc
mov
addr16
xchg
sahf
xor
lods
mov
popf
xor
mov
sbb
adcl
dec
imul
dec
jp
and
pop
dec
movsl
push
mov
pop
xor
outsb
pop
rcr
and
out
aas
sbb
cmpl
or
pop
cmp
jmp
add
adc
fnsave
mov
pop
mov
or
js
sub
scas
or
mov
mov
fcomps
lods
push
mov
jge
sub
and
or
mov
xlat
or
jl
fsubr
cltd
sub
push
clc
sub
cmc
pop
mov
cmp
leave
les
cmc
ljmp
scas
dec
fidivl
cs
gs
adc
out
pop
repz
shrl
and
icebp
xor
push
das
push
ja
test
movsl
and
push
movb
mov
movsl
cwtl
fs
xchg
pop
inc
mov
sbb
or
lock
jns
xchg
mov
mov
pop
inc
push
shlb
into
enter
push
or
xchg
js
inc
pushf
testl
popa
aaa
dec
orb
cmp
adc
sti
rclb
add
cli
mov
arpl
rcr
cmp
ja
ret
and
test
nop
mov
inc
nop
movsl
icebp
xchg
dec
iret
fs
int
fwait
idiv
sub
dec
push
fildl
imul
int3
inc
dec
cmpsl
sbb
out
es
in
mov
in
xor
enter
ret
adc
or
cmp
or
adc
loope
xchg
or
in
sti
mov
sub
lcall
sbb
test
and
es
push
gs
pop
out
enter
lahf
jmp
dec
in
daa
xor
xchg
pushf
insb
mov
ss
or
imul
subl
lahf
xor
outsl
mov
push
add
inc
and
push
push
jns
pop
fxtract
add
push
test
push
mov
push
mov
jmp
jns
cmp
shrb
inc
fistl
mov
mov
mov
in
dec
cmc
mov
testl
inc
cmp
inc
cmp
scas
inc
or
mov
clc
adc
lods
loope
inc
idiv
aas
xor
xor
in
sti
xlat
mov
es
clc
add
xor
fadds
and
stc
dec
pop
pop
xor
mov
xchg
aaa
stos
pop
jle
inc
mov
jge
stos
push
push
out
mov
bound
lods
outsb
push
and
adc
lea
scas
sub
inc
stos
jmp
jecxz
pop
repz
inc
mov
fwait
dec
dec
cltd
aas
push
in
mov
lret
call
movb
cltd
mov
ret
pop
inc
iret
rorb
pshufw
push
dec
shll
outsl
xor
js
sub
push
or
mov
jnp
xor
mov
fmull
pop
mov
cltd
push
daa
mov
sub
push
das
imul
std
stc
aaa
ss
lahf
std
cmp
push
or
loopne
rolb
sbb
lret
icebp
movsl
fcmovu
test
mov
push
fisubrl
xchg
ja
pop
mov
daa
sub
in
std
cmc
pop
cwtl
xor
repnz
in
mov
ss
clc
sahf
mov
or
js
es
jmp
inc
fcmovnb
fmuls
stc
mov
mov
pop
mov
sti
sarb
sub
or
mov
std
or
outsl
in
ss
inc
mov
add
hlt
push
in
insl
pop
stc
nop
pop
push
sti
push
dec
dec
dec
jecxz
loop
pop
mov
mov
or
xchg
jle
mov
fidivrs
cli
sub
mulb
inc
mov
out
pop
pop
hlt
lret
mov
cwtl
sbb
fldenv
sbb
mov
cs
shll
test
in
pop
loopne
push
out
sub
loopne
mov
jb
dec
fneni(8087
jno
mov
lods
inc
js
hlt
cmp
push
mov
and
push
jbe
pop
hlt
into
xchg
sub
pop
lret
cs
cmp
xchg
pop
fildll
aad
add
test
cs
ficomps
and
mov
cmp
int3
push
and
mov
mov
dec
xchg
icebp
aam
dec
fimull
dec
xchg
xor
repz
fwait
pop
or
mov
adc
mov
fsub
push
or
lret
dec
in
push
or
add
aaa
push
leave
push
sbb
ja
xor
dec
jmp
mul
pop
sahf
adc
cltd
sbb
mov
fdivrs
pop
pop
fwait
xchg
mov
arpl
xor
xlat
ds
ljmp
xor
sbb
out
aam
lret
xchg
sbb
inc
mov
lods
outsl
xchg
or
mov
mov
lahf
std
xchg
sbb
push
lea
js
pop
xchg
sbb
aad
mov
pop
pushf
movsl
pop
fsubrp
push
ret
sahf
jo
loopne
icebp
pop
adc
test
pop
lcall
in
sub
fnsave
dec
pop
lods
in
lcall
and
cmp
mov
icebp
and
shl
icebp
mov
iret
and
stos
adc
jnp
stos
add
push
dec
aam
dec
ljmp
sti
iret
cmp
sbb
arpl
mov
mov
jno
pop
daa
test
enter
add
dec
test
dec
popl
fst
aad
xchg
sub
inc
stos
mov
mov
gs
movsb
andl
lds
xchg
sub
adc
pop
mov
dec
xchg
sub
cmp
movb
xchg
xchg
cltd
stos
les
test
xchg
pusha
mov
push
lea
sarb
sub
push
xor
push
fdivp
fidivrl
int
idivl
hlt
inc
sub
jnp
jge
mov
cli
pop
pop
mov
mov
pop
cwtl
das
jno
stc
je
test
dec
stos
mov
iret
cmpsb
and
pushf
pop
inc
dec
dec
bound
pop
xchg
out
and
mov
ret
jb
not
shr
pop
sub
mov
jb
out
mov
dec
data16
mov
into
mov
fmul
inc
pusha
ss
aaa
test
mov
clc
push
mov
jnp
or
addr16
lret
push
out
insb
xor
imul
or
pop
jmp
ret
jge
mov
arpl
nop
xchg
scas
dec
mov
and
push
xor
out
mov
fs
test
sub
sarl
hlt
push
add
out
in
ss
subb
inc
daa
je
scas
js
shrb
push
cmp
loope
cmp
sub
inc
adc
cltd
into
orl
inc
push
add
inc
rcrl
pop
pop
cmp
or
test
ret
sub
js
inc
lret
into
arpl
dec
shlb
popa
rcrl
shrl
xor
cld
mov
xchg
xchg
inc
enter
push
add
mov
pop
sbb
test
into
xor
xor
pop
push
lea
xchg
rclb
mov
fs
inc
rorb
ret
push
mov
adc
iret
mov
or
mov
popf
mov
cmp
jno
push
lahf
enter
xor
fdivp
fistps
bound
loope
add
fnstenv
adcb
sub
cmpsb
mov
mov
sbb
or
cmp
jmp
lret
int
cmc
xchg
adcb
cmc
je
lret
ret
test
jg
gs
int
pop
lods
popf
pop
enter
neg
mov
leave
xlat
inc
jmp
je
cmp
jp
inc
movsl
dec
xchg
cmc
pop
add
loope
sub
fmulp
inc
or
mov
sub
jne
mov
sub
xor
xchg
sub
lods
mov
and
dec
pop
sbb
push
fiadds
sahf
test
or
inc
pop
and
out
rorl
in
mov
imul
and
cli
pop
xor
nop
addr16
shll
xlat
scas
sub
sub
lret
or
mov
scas
xchg
mov
add
lock
int3
test
dec
sbb
and
subl
inc
dec
lcall
sbb
cwtl
cld
add
cmp
rclb
das
adc
adcb
cmp
ds
inc
int3
rcrb
jnp
mov
add
or
dec
ljmp
mov
seta
mov
fimuls
aam
lahf
es
mov
in
dec
push
jnp
and
lods
js
cwtl
jle
pop
lock
pop
imul
in
or
mov
in
mov
jmp
test
xor
mov
mov
decl
cmp
loopne
fs
add
dec
mov
int
lock
gs
push
clc
pop
fmull
mov
mov
sbb
stos
pop
or
mov
scas
push
push
lock
repnz
fs
mov
jo
inc
dec
fsubl
cld
push
in
stc
sbb
xchg
push
dec
adc
pop
mov
fdivrl
push
add
sbb
adc
mov
pushf
ret
rol
test
out
jmp
and
adc
jbe
mov
and
inc
ret
arpl
sbb
mov
add
dec
pop
mov
aaa
dec
lcall
mov
shl
das
push
shl
mov
imul
push
sub
xchg
or
mov
stc
loopne
mov
repnz
xor
push
and
pusha
jns
popf
stos
lahf
loop
icebp
jae
cmp
pop
xchg
sub
ret
fdivrp
dec
movsl
cmp
add
jg
pop
mov
int3
imul
inc
inc
mov
test
clc
dec
or
cmp
mov
aam
add
adc
scas
cmp
xor
pop
movb
orl
sbb
aas
lods
cs
out
fcoml
gs
sahf
lret
or
sbb
in
adc
xor
cs
dec
popa
orl
jmp
xor
sti
jbe
jo
call
negl
inc
cmpsl
sub
lret
jle
sub
sbb
mov
sub
or
out
xchg
data16
mov
fwait
movsb
pop
jnp
int3
sbb
inc
inc
or
out
cmp
inc
mov
sub
adc
dec
cmp
out
daa
xchg
push
loop
dec
mov
pop
in
jp
loop
ficoms
xor
sub
movsb
ss
sub
push
sub
mov
mov
leave
mov
add
loope
stos
xchg
not
or
sahf
scas
stc
add
cs
fstl
lock
fs
mov
mov
lds
in
in
aam
sbb
or
insb
loop
jo
scas
jg
cwtl
inc
aas
or
mov
mov
jo
repz
pop
jl
jge
adc
sub
cs
sub
xchg
lock
push
cmp
movsl
mov
test
insb
insb
fistpll
pop
imul
mov
loope
mov
fistpll
xlat
xchg
inc
cwtl
sbb
xchg
movsl
mov
mov
addr16
mov
push
decb
jl
or
jne
add
push
andl
mov
mov
je
pushf
adc
lea
lret
nop
xor
lcall
sbb
lahf
or
mov
jl
scas
push
xchg
push
pop
mov
sbb
xor
mov
jg
jl
loopne
rol
and
mov
jne
out
fcoml
in
mov
inc
inc
pop
lock
dec
xchg
and
inc
push
mov
add
xchg
fwait
cmpsl
call
in
jb
xchg
xor
cmp
jo
mov
out
mov
push
icebp
cmp
mov
fadds
jo
cwtl
movsb
cmp
outsl
mov
pusha
inc
add
cmpl
leave
int3
ja
pop
and
mov
hlt
mov
int
aas
cmpsb
xor
push
pop
sbb
dec
pushl
jecxz
push
lahf
inc
aam
mov
jns
pop
push
lods
jge
jp
jno
std
xchg
mov
inc
inc
jne
ds
jnp
xchg
cs
jbe
inc
push
and
pop
jb
subl
adc
sbb
mov
push
or
adc
push
pushf
inc
enter
stc
sbb
fdivrp
je
adc
and
rcr
ss
scas
sub
pop
lret
mov
pop
push
xchg
mov
dec
xchg
pop
imul
inc
add
lea
idivb
xorl
fs
adc
sbb
adc
mov
movsl
fistpl
jmp
mov
test
es
xchg
out
mov
jnp
adc
out
out
mov
movsb
fistpll
cmpsl
aas
cltd
dec
xchg
sub
scas
inc
pop
pop
sub
movsl
aam
popa
xchg
pop
or
xchg
in
sub
push
fsts
mov
clc
sub
push
into
jle
pop
out
icebp
adc
loopne
sub
fnstsw
adc
int
inc
loopne
out
jl
xchg
mov
jns
lock
addr16
scas
jecxz
divb
sahf
into
push
test
sbb
inc
cmp
lods
shlb
jns
pop
in
sub
movb
inc
jns
je
inc
jle
sbb
imul
shl
enter
in
call
cmc
int3
sub
cmp
outsl
imul
dec
adc
cmp
dec
pop
insl
sbb
les
test
push
int
or
mov
xacquire
sbb
ljmp
and
sub
in
jge
sti
add
test
test
faddp
adc
inc
sbb
subl
shrl
ret
add
ja
stc
hlt
mov
stc
cmpsb
mov
fidivl
push
outsl
and
out
cwtl
es
or
lcall
gs
push
cmp
pop
stos
std
sbbl
call
popa
stos
add
int
jo
addr16
pop
push
and
mov
push
ret
outsb
mov
jno
sbb
inc
enter
mov
enter
xlat
outsb
xor
cmc
adc
fidivrl
xor
in
js
push
pop
xchg
sub
jle
scas
inc
repnz
fidivrs
popl
sahf
mov
fs
movsl
fidivl
fstl
sub
sbbb
daa
stos
mov
sbb
mov
loope
cmp
adc
pop
jle
inc
xchg
add
ja
mov
es
push
in
jp
das
stc
or
lods
add
and
aas
popf
or
mov
imulb
inc
into
mov
mov
mov
push
sub
rep
jmp
push
sti
jbe
fcomps
fsts
bound
fsts
sub
stos
cmp
and
fdiv
nop
mov
push
lock
enter
mov
xchg
loope
cwtl
pop
jne
adc
or
xchg
cmpl
fs
push
or
jp
movsb
cmp
idivb
mov
fsubp
pop
int3
mov
add
inc
repnz
scas
ljmp
and
jp
mov
mov
loopne
movsb
mov
shll
sbb
push
or
pop
adc
dec
int
sti
arpl
imul
in
scas
aam
dec
es
add
bound
xlat
hlt
fnstcw
rcr
jge
or
push
xlat
xor
out
cmp
das
shlb
xlat
insl
mov
loope
pop
leave
loop
xchg
aam
mov
mov
enter
push
sbb
mov
imul
test
rcrl
cwtl
jb
test
subb
lds
cmp
jbe
push
fbstp
dec
add
mov
data16
ret
push
dec
and
outsl
sbb
out
jmp
inc
lods
cmp
mov
stos
pop
lock
ja
mov
sbb
cmpsl
adc
les
icebp
pop
cmp
leave
xchg
dec
xchg
into
xlat
les
or
dec
inc
bound
shll
mov
lea
int
xchg
inc
arpl
sub
rcrl
mov
mov
cmp
push
pushf
jae
stc
cltd
loopne
sub
push
imul
outsb
and
or
orb
push
jge
mulb
adc
cli
inc
pop
cmpsb
lods
cld
and
push
fisttpll
sub
out
mov
adcb
xor
int3
js
in
lcall
lods
xchg
mov
mov
pop
xchg
pop
or
push
imul
in
in
add
inc
aas
dec
test
clc
jg
cmpsb
sub
jge
sahf
and
sub
inc
aam
xchg
mov
push
mov
les
iret
mov
fldl
cwtl
ret
test
sbb
sub
scas
cmp
sbb
das
mov
mov
out
push
out
nop
adc
and
mov
xchg
lds
mov
in
aam
push
movb
movsb
daa
xor
jmp
daa
mov
mov
jmp
in
push
shll
cli
mov
int3
mov
pop
push
fucomip
push
mov
cmpb
xor
inc
mov
cmpsl
dec
push
sbb
les
sbbl
mov
mov
or
xchg
inc
sbb
mov
dec
jno
shr
pop
rcll
aaa
fdivl
inc
test
mov
jbe
stc
cmp
frstor
fwait
xchg
ret
mov
sahf
lods
aam
xchg
aam
sbb
push
ds
hlt
sbb
push
add
pop
outsb
sub
dec
scas
test
ret
outsl
jne
data16
fwait
cmc
arpl
enter
lock
xor
add
sub
inc
clc
pop
jne
adc
jle
pop
xor
jl
test
clc
cmpsb
shrb
jae
push
mov
sub
mov
mov
and
in
jns
sub
sbbl
xchg
orb
inc
cltd
jb
stc
or
xchg
pop
xor
mov
and
jmp
bound
shrb
pusha
mov
add
pop
mov
scas
ret
jnp
mov
pushf
je
lea
jp
clc
stos
pop
mov
lods
inc
mov
int
aas
push
fiaddl
jle
fucomip
stos
lahf
icebp
xchg
mov
inc
insb
xor
int3
stos
jns
ss
scas
pop
lcall
and
call
and
xor
test
fdivrs
notb
mov
pushf
fcmovu
dec
gs
cmp
jmp
dec
and
iret
add
fwait
dec
mov
push
loop
dec
test
das
rorb
jno
and
arpl
in
subb
cmp
ds
imul
mov
or
mov
push
jl
das
icebp
test
loop
std
jo
mov
mov
dec
cld
jecxz
outsb
cltd
and
cmp
test
in
ficoms
xchg
ds
push
rcrl
test
iret
pop
mov
leave
fsubl
push
or
jo
loop
fmul
sub
jbe
mov
shlb
mov
popl
xor
cmp
popf
jo
sbb
dec
dec
sahf
push
shrb
test
cmp
bound
mov
sub
out
add
inc
inc
pop
shlb
arpl
lret
jo
xorl
sti
xor
lock
xlat
cld
out
insb
mov
push
cmpl
fcomp
pop
add
test
push
call
adc
pop
je
sub
xor
lret
mov
mov
seto
mov
pop
mov
fisttpll
or
mov
xchg
mov
stc
push
jmp
pop
add
cmp
pop
mov
aas
cmc
push
aas
mov
mov
pop
mov
push
mov
push
in
pop
lcall
imul
jno
adc
mov
mov
adc
hlt
xor
add
in
pop
jp
sub
out
mov
push
fnstcw
fsubl
mov
pop
insl
add
mov
xchg
shlb
es
xchg
lods
mov
add
or
popf
movsb
sbb
nop
dec
fs
int3
sbbl
icebp
pop
lahf
add
xchg
cmpsb
cmpsl
int3
cmc
adcb
mov
inc
enterw
xchg
out
mov
int
fwait
lods
fcomi
pop
adc
aas
inc
jnp
mov
add
sbb
lds
jl
mov
test
lods
jmp
test
pop
push
icebp
mov
cmp
inc
cmp
jo
jo
jle
bound
push
dec
clc
push
cmc
js
subl
dec
cmp
push
and
test
scas
shll
lahf
jno
ret
lods
ja
and
in
sbb
subb
cmp
sub
push
mov
cmp
inc
js
pop
adc
adc
and
mov
jecxz
cld
lea
addr16
xchg
pop
cmpsb
cmc
mov
out
cmp
mov
pop
and
push
imul
ret
aad
sbb
sbb
push
sub
and
xlat
outsb
jge
sbb
fistps
fisttps
scas
out
push
ljmp
jno
xor
pop
lahf
cmp
jg
pop
lcall
mov
mov
imul
idivl
fbstp
dec
adc
filds
and
stos
inc
outsl
in
test
xchg
enter
adc
pushf
pop
push
mov
stos
lds
fdivrs
jmp
idiv
or
jl
sbbl
pop
inc
pop
dec
in
les
jge
nop
mov
push
push
rclb
movsl
cmp
sbb
mull
ret
jle
or
or
repnz
shrb
insl
sub
mov
push
cwtl
aam
mov
cltd
stc
pop
dec
sbb
sbb
mov
or
dec
mov
adc
dec
shl
pop
nop
std
stos
jbe
sub
lret
xchg
xchg
mov
sub
jl
xrelease
repz
sbb
nop
shlb
std
xchg
sti
cmpsb
inc
xchg
sbb
cli
cmp
sub
fists
pop
or
push
or
jecxz
ds
ds
pop
daa
and
mov
test
std
pop
idivb
into
pop
lcall
sub
jl
mov
jns
aaa
filds
dec
out
aaa
mov
aam
cli
adc
fldpi
testl
pop
aaa
mov
icebp
dec
cmp
repz
testl
push
pusha
cmpb
sub
adcb
inc
out
add
sbb
xor
push
data16
and
lock
mov
cwtl
rcl
bswap
movsl
jne
mov
dec
xor
mov
xchg
dec
adc
scas
pop
mov
lds
sub
sub
lock
addr16
dec
dec
adc
mov
cmc
dec
cmpsb
std
push
push
and
popf
shrl
xchg
aaa
stos
mov
add
xor
and
jecxz
inc
out
in
inc
push
ds
ljmp
pop
clc
or
iret
adc
cmp
push
pushl
and
mov
mov
sub
inc
xchg
out
movsl
test
pop
jge
cmp
pop
xchg
add
mov
shlb
iret
imull
sahf
out
test
xchg
mov
jecxz
xchg
sbb
loopne
cmpb
repnz
pop
push
xor
into
xchg
ror
dec
icebp
loope
xor
dec
decb
cmp
mov
mov
int3
cmp
ffreep
call
xor
mov
in
pop
jnp
test
or
pushf
imul
xchg
int
lahf
filds
xor
sbb
mov
rclb
decl
in
adcl
mov
jno
and
pop
clc
mov
imul
pop
std
lret
lea
dec
mov
pop
jb
in
mov
mov
mov
cmp
mov
fisubs
ljmp
xchg
adc
and
mov
dec
fsubs
scas
sub
sbb
jnp
fistps
add
add
push
adcb
test
inc
mov
xchg
xchg
ret
paddsb
mov
inc
mov
clc
mov
dec
loop
and
jl
int
mov
pop
sub
jge
outsl
fdivrl
in
imul
pop
or
add
adc
out
or
lahf
sub
jmp
lods
jmp
bound
pop
pop
insl
out
or
shl
jecxz
aad
fdivr
bound
sahf
push
cmp
jp
mov
stc
push
mov
clc
cmp
sub
dec
xor
cmp
sbb
int3
cmp
jg
fnop
or
lds
jo
push
lock
nop
inc
jns
rcll
lahf
push
notb
sub
call
xchg
repnz
or
xchg
cwtl
and
or
jne
jns
inc
ret
inc
or
aas
push
addb
stos
cmp
dec
sbb
push
sbb
xor
pop
rcl
stos
fs
or
cmp
shll
ret
cmp
jbe
add
sub
pop
mov
fdiv
push
cli
mov
aaa
lret
repnz
js
sbb
je
fs
test
sbb
hlt
das
mov
or
mov
stc
fs
es
pop
mov
jnp
jmp
in
add
ret
push
fimull
fs
inc
adc
mov
shr
dec
fcom
outsb
pusha
cltd
das
inc
enter
lahf
push
cld
aas
lahf
push
mov
mov
ret
icebp
out
xchg
dec
pushf
pop
dec
push
adc
bound
sbb
decb
mov
ret
les
repnz
xchg
fisubrl
cmp
in
hlt
daa
ljmp
mov
adcb
call
jae
jo
aad
shll
ret
testb
out
add
ret
and
insl
dec
les
orb
cmp
les
stos
icebp
or
or
inc
ss
scas
sbb
jnp
inc
iret
mov
test
inc
adc
popa
int
push
imul
push
push
out
rcr
lock
jne
and
xchg
hlt
jmp
ljmp
insb
inc
icebp
and
lret
sbbb
jle
or
cs
sbb
jmp
mov
mov
fst
outsb
mov
jmp
or
repz
mov
negl
add
and
cmp
stos
inc
pop
pop
aas
lea
push
pop
adc
dec
mov
inc
icebp
cmp
fwait
adc
push
and
dec
mov
fildll
insb
mov
rcrb
inc
inc
mov
ljmp
and
out
jecxz
push
push
insb
movsl
das
mov
out
sti
cltd
and
dec
or
mov
sub
arpl
jae
not
je
cmpb
cmc
fildl
sbb
fsubl
cmp
pop
mov
nop
repz
cld
xor
fs
or
jnp
insb
xchg
add
loop
or
mov
pushf
insl
in
jb
imul
dec
mov
adc
and
sub
mov
sar
mov
rcll
repz
fidivl
in
sub
mov
iret
gs
lret
in
bound
cmp
out
sti
and
or
dec
lea
cltd
mov
fisubs
cmp
aas
adc
xor
jl
test
lds
das
lcall
pop
inc
fcomps
repnz
das
add
push
adcb
cmp
adc
testl
add
stc
inc
xchg
and
popf
or
out
je
inc
enter
push
push
outsb
cmpb
xchg
wrmsr
push
inc
push
out
or
xor
add
mov
mov
cmpb
mov
and
xchg
sub
pop
fistpl
sub
pop
fwait
mov
mov
mov
sub
push
out
sbb
sbb
imul
icebp
or
stc
sbb
loope
and
lods
ja
ficomps
stos
inc
jbe
xor
push
cwtl
leave
pusha
lret
imul
and
sti
aam
inc
adcb
fdivl
stc
lods
mov
dec
sub
out
cmp
dec
iret
xor
jecxz
push
cmp
jecxz
xor
jno
call
xor
leave
mov
out
jns
jne
xchg
xor
das
mov
mov
inc
subb
pop
orl
lret
insl
movsl
jl
test
xor
repz
mov
push
arpl
insb
iret
push
in
add
out
test
and
inc
sbb
lret
inc
push
std
xor
mov
rorl
lods
cmp
mov
mov
sarl
sub
outsb
leave
pop
xor
or
cmp
je
pop
ret
mov
outsl
pop
mov
stos
inc
rcrl
js
into
in
in
andb
cmp
pop
add
bound
push
repnz
push
mov
arpl
fldt
rdtsc
mov
or
into
inc
sbb
jns
loop
adc
mov
sti
sbbb
out
cmpsl
mov
dec
fbld
lcall
sti
mov
jp
pushf
nop
daa
iret
mov
pop
outsb
push
scas
inc
adcl
inc
mov
negl
xor
mov
pop
cmc
ret
cmp
iret
cmp
sub
pop
ljmp
fwait
stc
mov
cmp
rcrl
push
or
iret
xorb
jmp
imul
fidivs
push
imul
xor
mov
and
dec
fimull
push
loop
xor
and
pusha
and
out
std
mov
xchg
vpmuludq
stos
inc
vpaddsb
stos
out
sub
inc
mov
jno
mov
sbb
cmp
or
sub
sub
pop
popl
aad
sbbb
gs
inc
out
imul
jb
xor
push
push
sbb
xor
mov
cs
add
sub
sbb
or
in
add
jns
inc
test
scas
fwait
imul
xor
orl
fisttps
xor
or
iret
gs
bound
sbb
daa
cwtl
sar
cwtl
xchg
lcall
outsl
mov
push
push
xchg
mov
mov
xor
pop
cwtl
shlb
and
and
inc
pop
das
ljmp
pop
popf
jl
jae
and
fcoms
cmp
daa
movsb
rol
pop
sbb
mov
pop
sbb
adc
fsts
pop
cmp
push
xchg
sub
lret
mov
mov
popa
clc
orb
shrb
jg
test
daa
adc
pushf
dec
scas
push
pop
repnz
xchg
add
into
cmp
sbb
enter
sub
or
aas
push
dec
mov
pop
test
mov
shrl
add
fdivrs
ret
and
cmpsb
jp
aam
mov
fdivs
stos
daa
sbb
imul
lahf
ja
ljmp
and
mov
jb
push
lods
xchg
enter
mov
mov
sbb
jae
adc
mov
mov
mov
or
xor
xor
fstpt
xchg
or
pop
jae
orb
clc
fidivs
mov
scas
loope
inc
adc
into
xor
jge
ljmp
pop
xchg
sub
daa
scas
mov
push
adc
stc
pop
xor
mov
frstor
xor
in
test
js
out
adc
cltd
xor
std
push
or
mov
push
sub
xor
xchg
push
cwtl
loop
out
mov
dec
add
push
sbb
pusha
lods
mov
inc
imul
mov
jnp
dec
jecxz
shl
ja
ds
outsl
fwait
stc
push
shl
sbbl
fs
sub
addl
mov
jg
jnp
pop
addr16
sub
or
sub
mov
pop
xor
mov
cmp
rclb
and
mov
addr16
imul
push
imul
lcall
xlat
pop
jno
psubd
sub
test
outsl
insl
cld
xchg
lahf
mov
add
cmpsb
xlat
outsb
ds
cmc
jmp
mov
sub
sub
or
inc
in
nop
sub
jno
cmc
xorl
mov
lods
push
and
jb
cmp
vpmaddwd
xchg
xchg
sti
cltd
inc
lea
xor
cmp
pushf
push
sub
mov
aad
ret
jne
pusha
cmpsl
sbb
insb
jge
cmpsb
lock
sub
cmp
mov
gs
inc
sub
insb
into
mov
dec
ret
out
xchg
pop
cmp
fld
xor
ljmp
imul
xlat
icebp
mov
addr16
in
shrl
out
mov
sub
fwait
outsl
sub
inc
stc
adc
sbb
pop
inc
popa
rcl
xchg
push
xchg
pop
mov
icebp
icebp
xchg
fmuls
negl
mov
and
and
and
hlt
shl
bound
fucomip
mov
xor
add
dec
dec
stos
dec
cld
lcall
pop
lret
fldenv
xor
ret
jb
dec
cmp
ja
xchg
push
push
pop
stos
aad
roll
xchg
mov
mov
sbb
and
and
inc
notl
xor
jmp
sub
pop
sub
or
pop
sbb
dec
xorb
mov
xor
xchg
pop
stos
ljmp
pop
enter
jl
insb
arpl
dec
pop
imul
js
fstl
sub
aaa
fnstenv
xchg
xchg
cmc
fisttpl
leave
lahf
or
inc
inc
mov
jle
bound
adc
test
xchg
xchg
lods
test
aaa
sub
in
jae
stc
xchg
int3
pop
add
dec
cmp
sbb
sub
or
in
sbbl
loop
imul
dec
or
repnz
and
xor
push
jge
adc
push
in
xchg
popa
std
add
mov
ret
fdivrl
mov
clc
or
jg
mov
xchg
adc
xlat
inc
push
pop
call
jbe,pt
or
cmp
sub
lret
xor
cmovne
push
fisubrl
std
cltd
mov
popa
div
mov
jg
movsl
icebp
mov
hlt
lods
xchg
into
xor
sbb
hlt
outsl
xchg
push
jbe
nop
jl
in
add
jmp
test
cmp
xor
test
xchg
mov
test
mov
les
inc
test
cli
mov
push
testl
push
imul
or
adc
ds
repz
xchg
test
dec
mov
movsl
sbb
jbe
shll
add
inc
or
popf
addr16
psubb
sub
jecxz
cwtl
sbb
mov
push
xchg
test
les
jl
in
mov
hlt
xchg
sahf
sub
add
xor
add
shlb
shl
and
loope
into
idivb
add
pop
push
aas
dec
or
rorb
test
xor
push
imul
das
jbe
sbb
push
jae
orl
mov
push
test
adcl
ja
test
cwtl
inc
aas
mov
popa
push
gs
xchg
mov
sbb
in
pop
jmp
das
xor
lahf
jbe
mov
stos
imul
push
mov
push
xor
mov
ds
outsl
pop
or
mov
add
lret
jbe
mov
out
and
inc
cmp
push
movsl
pop
mov
mov
data16
add
dec
xchg
popfw
pop
insl
stc
mov
stc
repz
orb
fs
pop
repnz
mov
jp
outsb
sbb
adc
cltd
fisttps
cmp
cmpsl
jmp
shlb
shll
enter
addr16
rcrb
sbb
into
test
pusha
mov
pop
cmp
adc
adc
pop
fwait
jge
das
test
pop
repnz
jns
xchg
dec
je
xchg
popa
mov
loopne
push
cmp
inc
cwtl
xchg
pop
jno
cmp
mov
xchg
xchg
stc
std
and
xchg
push
pop
loop
inc
mov
sub
pop
sbbb
mov
mov
or
call
sti
pop
sbb
cmp
xchg
mov
mov
pop
cmp
testb
dec
and
test
push
lcall
popf
mov
push
push
dec
xchg
scas
repz
inc
rclb
fistl
clc
popa
not
imul
popa
cmp
int3
jecxz
push
fs
ja
aad
in
pop
push
bound
iret
bound
xchg
mov
insl
xchg
mov
pusha
xorb
shlb
push
aad
add
cld
xor
jmp
lods
popf
call
xor
mov
push
sub
call
mov
inc
lock
jge
xor
jbe
add
stc
cltd
out
cs
dec
testb
xchg
fcmovne
bound
mov
push
jle
cwtl
cltd
cmpsl
int3
push
jp
dec
or
mov
push
inc
xor
push
inc
jo
jns
test
cmp
xchg
outsl
and
sbb
cmc
push
roll
lods
fsubrl
fldt
sub
arpl
je
dec
xor
lret
addb
sub
mov
popa
mov
fwait
imul
shlb
iret
jge
or
jmp
into
out
xchg
sbb
clc
jecxz
insl
inc
ficomps
mov
ror
and
push
jmp
aaa
pop
in
sbb
adc
cmp
daa
ret
hlt
dec
cmpl
push
out
shrb
into
es
fmuls
mov
aaa
into
in
jbe
pop
push
jnp
int3
jno
jp
in
pop
sbb
inc
push
cmp
int3
pop
mov
pop
ret
pop
push
push
pop
lahf
gs
out
outsl
fldt
lcall
inc
cltd
fdivs
mov
imul
inc
pop
shrb
cmpb
xchg
add
pop
les
pushf
stc
popf
xchg
push
clc
dec
insb
stc
popf
hlt
push
sbb
dec
das
jnp
frstor
int
bound
and
inc
dec
sub
stc
push
xchg
clc
cmp
or
jno
ficoml
or
clc
mov
or
jbe
mov
pop
dec
enter
cs
in
pop
or
pop
xor
push
add
jbe
fsubl
sbb
or
xor
ja
push
pop
inc
rorl
cwtl
pop
inc
push
filds
pop
fdivrl
enter
cmpsl
arpl
sub
adc
inc
icebp
dec
xchg
fwait
jo
and
sub
clc
push
xor
and
xor
adc
aaa
cli
mov
ret
adc
sbb
fwait
add
inc
in
shlb
mov
pop
mov
popa
sbbl
cmp
mov
xchg
cltd
jb
jno
nop
xchg
jae
push
pushf
cmc
pop
in
sbb
mov
mov
sub
adc
sti
cmp
add
outsb
ret
push
fiaddl
mov
idiv
daa
cld
adc
mov
pop
push
lods
sbb
loop
fbstp
jmp
mov
test
mov
cmc
les
jge
push
ljmp
into
in
out
sub
cmp
sbb
lahf
repnz
jge
add
push
cmp
add
sbb
mov
sub
inc
popf
sti
adc
mov
sub
ret
push
cwtl
test
mov
in
loope
es
adc
sbb
movsb
xor
fidivs
jb
mov
mov
add
inc
fildl
jb
pop
gs
in
sahf
jg
sbb
adc
sub
jo
cmp
inc
jno
mov
jle
mov
sbb
pop
jmp
outsl
pop
sarl
leave
xchg
loope
ja
sub
xchg
cmp
es
mov
mov
sbb
test
inc
pop
adc
mov
mov
push
dec
and
outsb
pop
adc
mov
xchg
xor
call
daa
xchg
insl
ss
hlt
dec
mov
aam
fstl
mov
negl
sub
adcl
pop
push
out
imul
ret
sbb
xor
je
cltd
xchg
outsb
icebp
sub
push
inc
hlt
cmc
dec
add
nop
aad
out
mov
pop
hlt
mov
add
in
mov
out
int3
and
shlb
jne
mov
inc
pushf
ret
scas
and
pop
cmpsb
xor
aam
jl
outsb
test
pop
mov
xchg
cmc
dec
in
enter
or
sub
pushf
jne
xchg
mov
aad
cld
push
mov
push
jecxz
inc
fdivl
jae
mov
pushf
pop
adc
rep
add
jnp
inc
cmp
mov
int
jmp
adc
pop
jae
xchg
fsubl
in
stos
shrb
cmpsl
xlat
mov
cmp
outsl
dec
outsl
lret
imul
fnstenv
and
imul
insl
and
mov
xchg
mov
clc
push
sbb
inc
ret
cwtl
outsb
out
das
and
xor
pop
lds
xchg
pushf
xchg
aam
mov
flds
in
cmp
push
dec
shrb
cmc
lret
dec
outsb
adc
scas
push
es
pop
aas
pop
fsubrl
mov
xchg
mov
adc
or
lcall
xchg
movb
mov
xor
fdivrs
cwtl
mov
fisubl
ret
stc
fs
push
test
scas
and
ds
adc
push
sub
sub
stos
test
inc
inc
xor
js
mov
fimull
insb
jecxz
mov
test
lds
adc
adc
lcall
push
sbbb
test
stos
mov
jno
or
fstps
adcl
inc
dec
fisubrl
add
and
notrack
or
and
lret
xor
mov
iret
loop
mov
dec
pop
sbb
testl
mov
sub
and
jle
rorl
add
addr16
cmpsl
inc
nopl
push
ss
cld
and
mov
push
jl
roll
js
xor
fs
sub
pop
xlat
jno
or
and
in
or
pop
out
scas
inc
pushf
lcall
out
inc
stc
jns
enter
clc
cmpsl
mov
imul
mov
adc
mov
push
in
mov
xchg
in
std
mov
pop
rcl
ss
leave
decb
rorl
iret
fstl
shl
xchg
and
sub
pop
adc
pop
pop
repz
movsl
dec
into
mov
add
ret
mov
xlat
into
mov
cwtl
sbb
pop
inc
dec
shrb
movb
jge
gs
jl
andl
mov
pop
pusha
ljmp
mov
loope
dec
lret
subl
sub
xorb
or
push
xor
xchg
jns
mov
ret
cltd
fstl
cwtl
dec
jmp
aad
xchg
arpl
pop
jl,pt
outsl
cmp
inc
cmp
add
idiv
stos
mov
mov
mov
call
or
jge
jp
dec
sub
push
mov
in
sahf
incl
xchg
popa
ds
push
jno
jb
mov
mov
cmp
xchg
mov
into
cwtl
test
cmp
cmp
jae
imul
loop
xorb
xor
lret
push
out
ret
jle
nop
fnsave
adc
mov
icebp
nop
fistpll
inc
jg
ss
mov
outsb
jl
movsb
mov
clc
cmp
sub
es
jmp
dec
incb
push
pop
scas
mov
arpl
stos
inc
sbb
rorb
cmpsb
sub
sbb
xor
repz
inc
ror
xor
mov
push
adc
and
addr16
into
addl
and
xchg
dec
es
inc
mov
dec
mov
add
mov
insb
jg
xor
ret
loop
cld
add
pop
xchg
dec
cmp
pop
shll
shrl
jecxz
cmpsl
xchg
pop
sub
out
ffreep
jno
jg
xchg
dec
rcrb
jo
sbb
pop
cmp
cmp
ljmp
xchg
hlt
aas
mov
repnz
jbe
mov
mov
ds
les
and
pop
stc
cmp
mov
movsb
cli
pop
adc
test
xor
adc
imul
pushf
mov
xchg
sbb
cmpsl
sbb
push
mov
int
adc
fucomi
sub
pushf
clc
lods
inc
sub
paddusw
lds
clc
cli
mov
add
mov
push
call
pop
ja
stos
and
ds
outsb
mov
cmp
cli
push
jno
cwtl
shrl
ficomps
or
dec
and
mov
out
std
fdivl
test
pop
mov
mov
push
jb
push
or
cld
cld
push
and
add
add
jecxz
push
imul
mov
mov
js
adc
jno
stos
mov
dec
xor
mov
fnsave
out
pop
xchg
loop
add
inc
cmp
mov
and
inc
pop
popa
mov
push
jecxz
sbb
cmpsl
stc
cwtl
das
insl
outsl
outsl
jo
mov
xchg
cld
push
pop
inc
sahf
fistpl
dec
fs
mov
imul
repnz
leave
fwait
push
jg
adc
mov
sub
subb
adc
adc
push
in
xor
dec
pop
push
jae
cmpsl
dec
cmp
fwait
add
data16
inc
xlat
mov
data16
mov
nop
pop
adc
in
sarb
pop
pushf
clc
or
xchg
sub
mov
pop
fstl
fnsave
xchg
data16
cmp
pushf
jg
fnstsw
aad
aam
and
mov
in
dec
xlat
repz
xor
out
sbb
jge
pop
das
je
xor
repz
imul
adc
pop
outsl
cld
pop
and
scas
jne
popa
adcl
popa
add
cmpsb
aam
shlb
push
sub
test
or
and
cs
rcll
pop
test
push
sub
mov
cmp
pusha
add
insl
es
outsb
test
fdivl
fsqrt
pop
das
add
nop
add
jmp
cltd
call
cmp
jp
cmp
rcrb
push
inc
loope
sub
fisubrs
shll
dec
ljmp
scas
mov
push
inc
ja
ja
stos
xchg
push
mov
dec
loope
bound
loope
fcomi
cmp
and
or
int
cmpsl
push
jno
jo
cs
or
inc
jmp
mov
or
shl
jae
jbe
cmp
pop
mov
clc
popf
icebp
fisubrl
or
and
xchg
inc
jbe
cmpl
js
arpl
loopne
aaa
push
clc
add
scas
shlb
dec
and
rorl
out
out
pop
sahf
aam
sarb
mov
out
dec
jg
push
mov
ds
shlb
decb
das
sub
push
out
fwait
ret
adc
xchg
outsl
clc
pop
xchg
push
adc
icebp
aas
outsl
xor
jl
add
call
mov
shlb
mov
fwait
jno
pushf
fwait
stc
pop
iret
aaa
or
jne
cmpsb
ds
sbb
xchg
sbbb
sbb
mov
jmp
inc
mov
xchg
data16
adc
testl
imul
and
sti
xchg
ds
mov
cmpsb
popa
stos
loopne
inc
frstor
inc
push
cmp
fnsave
sarb
push
and
mov
sub
cmp
fiadds
hlt
or
push
rep
mov
adc
fwait
sahf
movsl
sahf
in
test
loop
cld
mov
in
pop
push
ret
xor
out
or
push
mov
pop
pop
test
scas
std
add
das
rcr
mov
mov
xor
aas
cs
je
pop
dec
outsl
mov
sbb
and
test
call
fimuls
pusha
and
xchg
mov
lea
sbb
enter
testb
jg
jg
cltd
pop
loopne
mov
pop
shrl
inc
cli
pop
cmp
fdivl
cmp
icebp
xchg
aas
stos
sub
loope
xor
xlat
dec
jl
xchg
sub
aam
inc
bound
adc
pushl
xor
mulb
inc
jmp
push
push
sub
mov
mov
mov
scas
aad
lret
pusha
loop
inc
push
call
das
inc
outsl
pushf
jbe
fstps
in
dec
jmp
popa
or
subb
push
ljmp
pop
mov
imul
push
rorl
adc
jae
mov
outsl
leave
mov
and
int3
and
imul
and
mov
out
lock
adc
mov
xchg
test
sahf
jp
jmp
mov
pop
push
pop
and
fsts
jmp
jns
pusha
xor
dec
mov
int3
test
add
xchg
mov
ret
jle
mov
std
cltd
std
out
test
sub
xchg
leave
hlt
in
clc
xchg
leave
push
pop
push
pusha
sub
out
xor
out
mov
and
jg
add
pop
cmp
jp
dec
push
push
push
push
sub
or
xchg
jmp
sbb
es
adc
cmp
adc
xchg
dec
inc
jb
jnp
imulb
mov
adc
mov
sti
jge
or
sub
push
ds
rcrb
std
stos
dec
repz
loop
mov
cmp
or
aam
inc
jnp
popa
inc
fstpl
mov
insb
or
mov
mov
imul
popf
mov
notl
add
inc
cltd
adc
cs
cltd
js
rep
xor
jp
jle
mov
cmpl
pop
andb
iret
jae
jbe
daa
mov
adc
adc
adc
mov
and
sub
mov
repz
scas
cmp
popf
rol
xchg
pop
ds
lahf
mov
jnp
cld
fbstp
and
mov
rcll
push
adc
outsb
cs
push
ss
mov
loope
movsb
cmp
out
sbbb
icebp
inc
iret
enter
in
or
jb
sub
jnp
mov
push
dec
in
xor
xlat
pop
icebp
or
inc
out
js
fmull
int
cmp
adc
loope
inc
mov
int3
lret
fildll
faddl
icebp
arpl
and
mov
and
push
sbb
lods
xchg
jl
jae
dec
adc
sub
jge
js
gs
sub
ds
mov
and
ret
hlt
ror
jbe
cmp
loopne
in
rol
xor
mov
cld
and
fwait
or
dec
pop
jg
push
adc
pop
jo
fmull
sbb
and
daa
push
fwait
sahf
clc
test
lods
mov
sbb
add
push
nop
repz
das
pop
add
mov
pop
lock
loop
cltd
test
iret
popf
jmp
push
xchg
and
and
sub
dec
enter
bound
mov
fisubl
lret
xchg
in
add
xor
push
ds
or
repnz
fs
pusha
out
std
mov
rolb
out
pop
aam
adc
lcall
dec
loop
stc
push
repnz
dec
insl
shlb
lock
rcrl
mov
and
dec
sahf
cmp
cwtl
pop
sbbb
lods
pop
daa
outsl
cmp
jp
or
add
cwtl
imul
jge
addr16
lods
lods
xchg
sub
stc
xchg
dec
inc
cmp
ljmp
cmpsb
xlat
push
rol
movsb
sub
test
mov
fdivrs
hlt
adc
push
ret
push
jae
push
call
sub
out
rcrl
mov
xorl
push
nop
daa
push
adc
out
and
push
inc
out
adc
lock
cwtl
mov
pop
test
sub
lret
cmp
sub
mov
stos
inc
sbb
mov
aaa
push
cli
mov
popf
xor
inc
xor
mov
ret
aam
mov
mov
rorb
lret
rolb
push
rolb
aaa
dec
inc
out
repnz
dec
cmpsb
in
xorb
mov
faddl
dec
jo
inc
cltd
and
imul
mov
mov
xchg
or
sbb
inc
sub
push
sbb
popa
jmp
lods
or
sbb
inc
mov
mov
fists
iret
jmp
adc
pop
push
enter
mov
cmpl
sub
ja
gs
push
cs
sub
and
sbb
mov
mov
aas
insl
and
lods
dec
cwtl
lret
mov
pop
pusha
notl
cmp
adc
sub
inc
jp
pop
jmp
shll
loop
insb
or
int
mov
push
mov
dec
ffree
aaa
xchg
sahf
xor
ret
ss
in
icebp
rorb
ja
sub
out
std
aaa
leave
ds
lea
xorb
aam
aam
sti
jbe
jp
mov
roll
mov
movsl
adc
ss
in
cmp
gs
in
sti
xchg
sbb
lods
adc
xchg
imul
jno
add
stc
in
ret
imull
inc
jne
imul
cmp
repnz
xchg
out
std
lds
js
cmp
inc
test
inc
cltd
or
pop
ds
mov
pop
repz
in
lahf
or
cmp
push
ret
into
ret
lea
sub
mov
mov
popf
push
pop
push
or
imul
xchg
mov
add
dec
movsb
jns
lea
iret
mov
or
jb
negb
add
pushf
fldenv
js
or
out
dec
pusha
mov
pop
jns
aad
push
or
xchg
add
std
out
jo
repz
push
fdivrl
mov
notl
imul
gs
test
pop
mov
sub
mov
loope
push
lret
rcll
sarb
sbb
into
add
cmpsb
lock
jno
inc
sbb
dec
dec
mov
mov
mov
mov
xchg
cli
ret
shrl
mov
cs
fdivr
mov
aad
stos
and
sahf
push
lea
add
outsb
pop
sti
dec
pop
scas
cs
and
or
or
mov
push
mov
fucomi
and
or
cwtl
lock
int
test
jecxz
or
mov
es
pop
icebp
push
daa
inc
testb
cli
arpl
add
xlat
mov
pop
push
or
fistpl
sub
jmp
cmc
repnz
iret
or
mov
xchg
aad
cwtl
lods
pop
icebp
push
mov
add
inc
xchg
sub
jle
rorl
sbb
rclb
mov
cmp
lahf
jle
hlt
mov
push
cli
rorl
call
in
addr16
sbb
js
mov
ljmp
jecxz
pusha
xor
into
lea
aad
mov
inc
push
popa
add
popa
inc
cmp
sbb
push
and
das
fldcw
xchg
leave
lahf
cltd
iret
bound
sbb
mov
in
push
mov
add
test
je
fcmovnb
push
mov
push
ret
lods
mov
inc
cmpsb
pop
mov
ss
pop
fs
adc
inc
test
adc
xor
push
sub
jmp
rol
loopne
aaa
dec
cmc
pop
mov
pop
cltd
jl
xchg
and
xchg
push
ret
push
mov
pop
push
scas
cwtl
pop
mov
arpl
in
xchg
out
jnp
mov
cli
cmp
mov
mov
push
inc
pop
mov
mov
movsb
mov
lcall
and
pop
lahf
sbb
clc
sbb
or
cmp
test
mov
rorl
rcrb
test
loop
dec
mov
pop
aas
dec
cmp
sub
mov
inc
pop
int
hlt
cli
mov
sub
imulb
fld
in
jo
jns
int3
mov
jle
loopne
pushf
shl
ljmp
jne
rcrl
push
push
fadd
xchg
mov
mov
push
aam
cmp
sub
dec
mov
fistl
inc
stos
push
out
sub
sub
jl
push
sub
mov
mov
enter
fisubrs
jge
ds
cmp
xor
cmp
rclb
shrl
shrl
jno
repz
sbb
pop
hlt
and
testb
xchg
sub
les
inc
fisubs
mov
xor
and
jno
orl
fdiv
push
jnp
xor
xor
bound
adc
dec
ss
insb
fbld
adc
icebp
sbb
and
jae
mov
sbb
lock
dec
mov
xchg
add
mov
adc
and
call
fs
cmp
andl
ret
or
sub
sub
in
adcb
push
out
xchg
sbb
jl
cmp
or
in
add
ficoms
xor
jbe
mov
pusha
inc
dec
out
xchg
rol
xor
ret
pop
pop
ds
fwait
stos
loope
jnp
sbb
into
std
out
inc
and
push
pop
out
push
aad
cmpsb
cmp
daa
xor
pop
sbb
pop
dec
repz
icebp
aas
loopne
dec
into
add
mov
mov
or
cmp
mov
flds
and
cmc
leave
inc
stc
or
push
cmp
es
lds
sbb
jl
mov
sahf
push
rorl
xor
dec
imul
push
dec
xchg
inc
mov
jb
rorb
scas
mov
fbstp
lds
cmp
scas
divl
in
fstps
cmp
je
push
pop
jl
push
icebp
mov
repz
fbstp
sub
push
and
mov
xor
adcb
sub
and
daa
inc
and
inc
cmpsl
xor
rorl
ljmp
out
movsb
push
lods
test
push
jbe
out
inc
xor
sub
das
push
dec
pop
cmp
adc
and
jl
jbe
pop
movsl
xor
je
sub
pop
dec
xorb
sub
addr16
add
cmp
xchg
fcomp
pop
mov
sbb
loopne
mov
loopne
in
in
sbbl
imul
out
cmpsl
out
pop
mov
fcomp
es
rdpmc
arpl
add
movsl
cmpsl
add
sub
test
addr16
mov
pop
push
outsb
jmp
inc
test
cmp
xchg
in
int3
fs
cmp
enter
sti
movsl
out
mov
jo
shrl
rolb
insb
lock
and
and
daa
movsl
xchg
add
movsl
push
xor
adc
daa
das
push
mov
test
and
xlat
mov
data16
dec
or
xchg
jge
push
dec
or
inc
nop
test
ret
fmuls
push
adc
xchg
lret
jns
xchg
mov
icebp
dec
adc
imul
sub
std
inc
scas
fistl
jecxz
mov
and
push
outsl
push
jae
imul
dec
fnstenv
dec
pop
ret
mov
and
push
fsts
and
xchg
testb
hlt
jbe
cmp
dec
jae
xchg
mov
mov
lret
push
fnstsw
or
in
mov
fbstp
lea
mov
add
push
jns
fcomps
lds
xchg
addl
aam
mov
add
mov
xchg
imul
cmp
lret
and
sbb
data16
add
jb,pt
mov
test
popa
add
daa
out
and
push
xchg
stos
hlt
inc
cmp
insl
mov
inc
jge
mov
imul
mov
or
dec
and
int
mov
push
sub
mov
or
movsb
inc
data16
stos
mov
jmp
mov
cmp
push
fs
fnstsw
push
mov
test
stos
je
push
dec
mov
pxor
in
mov
push
jb
xchg
lock
int3
stos
mov
dec
lret
cmp
loopne
ret
adc
xor
test
dec
jp
je
cli
xor
adc
xchg
pop
fldcw
push
loopne
leave
mov
or
mov
js
dec
or
xchg
js
add
dec
mov
call
push
aam
loopne
mov
pop
fwait
or
insl
push
mov
dec
add
pushf
test
cmpsl
dec
dec
rol
mov
jl
pop
pop
cli
dec
mov
jbe
push
jp
cmpl
push
lds
jne
repnz
loopne
pop
jle
and
dec
add
mov
shrl
loop
outsb
add
jmp
mov
add
mull
sub
mov
jle
es
cmp
sbb
xchg
mov
movsb
push
inc
mov
and
xchg
xchg
push
icebp
sbb
mov
jl
and
jp
test
inc
ds
mov
test
daa
add
push
pushf
hlt
pushl
and
sbb
jbe
and
repz
jl
mov
fbstp
addb
out
ja
jg
lea
pop
adc
mov
cmp
push
sbb
out
xchg
aam
imul
sub
addr16
fsts
mov
clc
cs
push
fwait
mov
fcomps
mov
std
or
stc
mov
shrl
pop
out
arpl
cmpsl
lods
mov
cmp
adc
adc
push
movsb
es
jne
lds
jns
shlb
pop
push
dec
sbb
cmp
mov
popf
jne
into
loop
push
daa
mov
push
in
insl
cmpsl
test
dec
xchg
shll
or
lods
scas
imul
dec
enter
daa
ret
in
orl
add
sbb
shlb
and
dec
add
jae
shl
xchg
ja
xchg
out
mov
jmp
in
adc
xor
rcrb
or
sub
pop
pushf
jne
outsb
cs
icebp
mov
push
fyl2x
lock
movsl
orw
mov
aad
pop
pusha
xchg
daa
js
sub
insb
stos
cmp
lcall
repz
xor
cli
clc
xchg
pop
pop
mov
in
out
push
inc
xchg
in
psllq
push
inc
cmp
inc
xlat
adc
add
test
and
sahf
sub
push
add
jne
and
jge
aam
inc
and
mov
lea
ficompl
pop
pushf
jns
push
push
adc
lret
repz
fdivrl
jno
iret
and
xor
xor
xor
xchg
xchg
pop
jo
inc
push
loope
out
hlt
dec
pop
insb
cwtl
les
xor
push
repnz
mov
iret
ljmp
cltd
pop
fxch
xchg
das
dec
and
or
jge
in
jnp
adc
jge
jge
pop
movsl
sahf
xchg
pop
push
jl
sti
scas
fucom
push
mov
subb
xor
or
daa
or
pop
mov
xchg
sub
stos
pop
cmp
pop
dec
data16
dec
pop
fisttpl
sbb
inc
cld
sahf
mov
xchg
ljmp
ficomps
sbb
lods
dec
inc
adc
rol
cmp
scas
push
push
jb
inc
jne
fistps
xchg
call
mov
mov
push
adcl
enter
negb
fnstenv
lods
pop
movsl
jne
inc
nop
push
xchg
jbe
loop
jno
or
jno
xchg
fsubl
aad
cwtl
xorl
or
mov
ja
not
sub
in
jns
cli
sbb
fadd
push
mov
ret
push
mov
in
daa
or
adc
push
jle
xor
gs
addl
pop
outsl
sub
push
jg
and
jmp
lahf
xor
jl
rorb
jge
jl
popf
cmp
jle
lcall
cwtl
mov
lret
xchg
push
jmp
sub
bound
data16
nop
push
add
scas
mov
test
or
mov
es
mov
leave
push
cli
push
mov
data16
int
sub
enter
pop
mov
lds
pop
sbb
les
add
or
lods
jle
xchg
cwtl
shrb
add
andb
dec
mov
xor
and
and
bound
fcoms
jbe,pt
jo
jne
sub
lods
dec
push
dec
pop
mov
xchg
xchg
scas
inc
mov
push
icebp
les
incl
sub
dec
and
mov
inc
std
sub
mov
test
sbb
icebp
jecxz
xchg
cmp
jecxz
push
sub
out
push
sahf
sbb
bound
inc
cmc
mov
inc
xchg
pop
mov
sbb
fs
call
js
outsl
adc
push
xchg
sub
cwtl
dec
or
shl
imul
inc
cwtl
push
xor
cmp
push
inc
push
inc
test
sbb
push
repz
pop
insl
das
and
adc
xor
ficomps
call
jge
add
cmp
sti
test
in
std
xchg
ficoms
cmc
pop
pusha
mov
dec
repnz
inc
or
outsl
push
sti
inc
dec
ja
cli
mov
lret
lock
in
std
lods
nop
daa
fistps
ficompl
and
mov
push
add
xacquire
mov
xor
call
stos
cmp
into
inc
and
ret
in
das
shr
xlat
adc
mov
jne
mov
push
sarb
or
adc
inc
xchg
xor
push
pushf
in
or
jb
stc
inc
pop
dec
cmpsb
push
insl
ret
mov
pop
cwtl
xlat
nop
inc
bound
lods
xchg
xor
dec
out
sub
xchg
sub
pop
clc
inc
lods
xlat
pop
jmp
bound
inc
or
push
dec
dec
mov
mov
push
mov
or
inc
mov
mov
and
mov
xchg
or
fcom
repnz
aas
mov
mov
xchg
loop
inc
in
sbb
pop
scas
sub
test
js
adc
fsubl
xchg
mov
in
jne
std
clc
pop
stos
mov
popf
stc
inc
pusha
adc
push
inc
sub
dec
fdivrs
jo
push
mov
sahf
xor
daa
es
clc
xor
jns
stc
test
mov
xor
mov
mov
ficomps
cld
into
es
fimuls
lea
ficoml
cmp
dec
mov
nop
stos
pop
sbbb
fwait
add
andb
pusha
outsl
xchg
icebp
pop
rcrb
shr
dec
lcall
inc
insb
xor
dec
add
lock
test
insb
int
lods
lea
into
test
rcrl
sub
mov
sbb
lds
addr16
pop
mov
or
scas
andb
sahf
xchg
das
mov
pusha
das
out
bound
aaa
add
dec
push
mov
ret
inc
fnstenv
imul
xchg
stos
push
xor
movsl
fs
mov
and
sbb
mov
lret
xor
dec
mov
hlt
imul
mov
data16
shrb
int
xor
jmp
mov
push
cmp
not
addps
pop
aaa
fcmovbe
xchg
and
mov
or
pop
xchg
sbb
push
xchg
sbb
mov
ret
lcall
mov
out
add
or
jae
jg
lret
mov
pop
and
push
lea
xor
jnp
icebp
mov
ret
pop
jo
add
inc
repnz
sbb
mov
or
ds
cmpsb
add
loope
mov
xor
stos
mov
xor
int
fucom
jns
push
push
fwait
loopne
outsl
loop
pop
ljmp
pushf
jbe
xchg
xor
adc
outsl
mov
push
shlb
pop
rcrb
mov
add
inc
shlb
jo
ja
mul
inc
lods
ficoml
mov
int
push
mov
cmpsl
lret
mov
addr16
cld
lcall
jne
sub
push
lods
inc
lea
ror
dec
jg
clc
out
pop
outsb
icebp
lods
jge
mov
adc
lds
mov
push
sbb
and
push
ljmp
add
mov
push
and
cld
scas
cs
les
mov
hlt
mov
cmp
rcll
aaa
push
dec
fisubrs
hlt
es
mov
and
les
hlt
mov
jmp
adc
or
mov
js
fidivrl
xchg
lretw
repnz
push
dec
adc
sbb
rcrl
es
fstp
into
push
in
pushl
lock
and
ret
ljmp
popf
cwtl
in
inc
lock
sub
leave
xchg
sub
js
and
mov
aaa
clc
stos
and
inc
decl
into
add
mov
pop
iret
loop
xchg
sbb
lds
cmp
ret
rcrb
push
pop
or
sbbl
out
stc
jecxz
add
xor
and
std
xchg
sbb
sbb
cwtl
sbb
imul
daa
ss
sub
cwtl
mov
or
testl
xchg
popa
push
loop
stc
subb
push
lods
inc
inc
xchg
sahf
xor
imul
into
jecxz
loop
add
lahf
and
divl
push
scas
cmp
subb
leave
push
or
xor
in
popf
push
or
imul
bound
mov
push
loop
dec
in
sub
mov
test
stc
jbe
and
mov
mov
xchg
mov
jg
daa
fnstcw
jecxz
aaa
sbb
scas
out
jl
js
ss
adc
test
popf
mov
fptan
sbb
sub
jmp
sbb
mov
popf
pop
and
cmp
outsl
push
add
mov
jle
adc
pop
and
pop
xsha1
cmpsb
mov
aad
sub
arpl
out
sbb
enter
xchg
push
xor
jae
cmp
ror
movsl
jge
mov
jle
push
mov
fs
sub
add
clc
cmp
xchg
mov
sub
jo
in
dec
xchg
add
movl
in
addr16
mov
mov
add
xchg
xor
test
inc
or
ljmp
pusha
jl
add
mov
pop
jbe
gs
rcl
jecxz
mov
xor
call
out
popl
inc
sbb
jo
adc
cmp
lahf
or
cmp
mov
insb
pushf
xor
mov
and
movsb
in
push
xchg
data16
dec
push
ds
sub
outsb
pop
cwtl
cmp
leave
xor
jge
pop
loope
add
nop
pop
adc
sbb
lods
lds
sbb
pop
mov
test
sbb
and
xor
jae
add
lret
jb
adc
xor
or
xor
or
clc
jbe
int
or
mov
sbb
mov
or
insl
or
fidivs
insb
and
dec
or
lahf
pop
out
cld
push
xchg
dec
inc
sbb
fcoml
stos
ss
iret
out
dec
jne
lea
pop
in
or
push
loope
jmp
cs
popf
or
popf
je
sub
sbb
or
ljmp
or
aaa
push
xor
into
decb
dec
fnstsw
push
xchg
imul
xchg
out
icebp
xchg
int
mov
mov
jge
fstpl
ds
cmc
roll
cmp
in
jecxz
icebp
cmpsb
cs
xchg
jnp
repnz
mov
xchg
bnd
loope
cmpsb
fwait
testl
xchg
and
jno
mov
ja
icebp
mov
cmp
shrd
pop
aaa
xorl
mov
shl
int3
pop
stos
jmp
push
push
jns
fwait
outsb
dec
rcl
sub
jno
les
push
or
xlat
add
in
test
andb
sbb
decb
xchg
push
fwait
repnz
push
data16
adc
loopne
push
inc
test
std
sub
outsb
pusha
sub
jne
xor
mov
subb
in
xchg
lcall
inc
fld
add
lcall
sub
aam
in
jo
scas
mov
sahf
jmp
add
sti
xchg
stos
jmp
xor
mov
pop
add
inc
cmp
in
xor
inc
popf
idivb
bnd
adc
loope
iret
idivl
into
fstl
cmp
into
sub
xor
mov
cwtl
cmpl
adcl
loope
add
xchg
pop
js
xlat
mov
push
xchg
sbbb
jo
jb
daa
movsb
ss
push
add
push
cli
mov
out
loope
in
xor
or
lock
lret
pop
das
cmp
scas
lds
inc
outsb
push
sbb
pop
or
frstor
xchg
push
neg
add
repz
mov
gs
mov
mov
mov
xchg
fsubl
lods
dec
jmp
cs
andl
lds
sti
scas
dec
add
scas
adc
mov
cmp
pop
jbe
stos
sub
pop
adc
jns
mov
xchg
add
mov
cld
nop
inc
inc
sub
loope
fisttpll
insb
outsl
out
shr
pop
inc
outsb
sbb
mov
filds
addr16
cmp
mov
into
movsb
jp
jno
cmpsb
mov
dec
aad
inc
mov
mov
and
mov
mov
and
add
fcomip
inc
pop
shlb
gs
push
fsubl
int3
cmp
mov
jge
fcomps
mov
add
mov
adc
dec
mov
loope
fists
dec
pop
dec
std
inc
pushf
insb
mov
or
sahf
mov
mov
jmp
ja
jge
popa
repnz
ss
test
or
scas
ret
inc
popa
cmp
xchg
xor
pop
mov
shlb
pusha
clc
push
test
jno
jbe
and
aas
scas
inc
push
or
cmp
add
lahf
stos
rorl
gs
pop
repz
in
mov
enter
pop
xlat
xchg
or
push
ret
xor
in
ljmp
dec
fdivs
xchg
aas
jns
jno
jmp
cmc
fisubrs
xor
loop
mov
call
adc
pop
jo
inc
mov
dec
enter
push
repz
mov
push
inc
fnstenv
inc
lds
cmp
icebp
jmp
xor
lcall
aas
in
push
cmp
shl
pop
pop
and
fistps
adc
fidivrl
cmpsb
pop
lds
push
es
dec
xchg
fnstcw
subb
push
or
mov
stc
lea
mov
adc
sbb
faddl
jns
mov
mov
mov
dec
mov
sbb
sub
loop
xor
cmp
xor
sbb
jecxz
js
popa
ret
sti
jecxz
and
rolb
add
lods
adc
stos
xchg
cld
mov
adc
adc
outsl
addr16
arpl
cmp
pop
mov
sbb
or
and
lret
cmp
out
cwtl
jae
std
cmp
sub
fidivrs
dec
xchg
push
or
and
xchg
outsb
lea
mov
out
or
negb
jns
out
pushf
dec
fmul
mov
and
icebp
xor
shl
es
ja
xchg
sarb
jb
iret
sub
repnz
dec
cld
xchg
jl
fs
aam
fsubr
fbld
test
mov
adc
dec
popf
add
jp
jge
mov
dec
and
fdivl
lock
das
xchg
cli
jge
enter
das
sbb
in
gs
xchg
lahf
cmp
icebp
ja
sbb
mov
or
and
jmp
cmp
add
sbb
movsl
or
adc
xchg
aam
pop
insl
arpl
push
xchg
test
mov
sar
sbb
das
orl
add
push
rcr
in
nop
hlt
fidivs
mov
mov
inc
dec
and
pop
loopne
inc
push
enter
rcrb
enter
adcl
xchg
mov
rcl
test
pop
jmp
inc
cld
rolb
popa
and
in
lahf
pop
jl
pusha
jns
movsb
fcmovb
iret
and
inc
fistps
xor
jge
or
inc
xor
out
icebp
es
out
add
bnd
jg
mov
jo
leave
push
fdivrl
enter
jg
rcrl
jb
inc
lret
dec
call
aam
xchg
ds
sub
inc
cmpsl
movl
pop
xchg
jno
xchg
mov
mov
mov
clc
xor
ljmp
dec
adc
pslld
jge
xchg
mov
xchg
add
insb
ret
cmp
popf
mov
rorl
fadds
stc
jl
stos
add
inc
out
add
ljmp
out
aas
and
call
push
push
lea
dec
clc
jle
loope
xchg
mov
sbb
inc
and
mov
inc
sbb
push
fisubrs
cmp
pusha
pushf
cmc
lods
mov
sbb
mov
ret
cmp
or
fcomps
mov
and
mov
jmp
jo
loopne
imul
jmp
repnz
dec
icebp
jns
sub
ficompl
mov
subb
pop
sbb
pop
ret
inc
mov
enter
add
sbb
std
loop
adc
movsb
jecxz
mov
leave
mov
rcl
icebp
std
xor
ds
xchg
jg
pop
lods
aam
pop
mov
mov
sbb
lods
dec
mov
jp
sbb
and
gs
pop
cmpsl
cmp
gs
iret
mov
or
ficompl
subl
cwtl
xlat
or
or
dec
push
out
mov
mov
dec
cmpsl
mov
incl
mov
mov
cld
add
outsb
out
inc
sbb
ds
mov
push
cmpsb
and
adc
xchg
sub
ss
push
jl
int3
inc
arpl
imul
jne
jo
psrlw
incb
and
mov
pop
enter
inc
cmpsl
out
jno
int
xor
push
dec
cmpsl
inc
add
inc
shrl
xchg
xor
addb
dec
pop
nop
daa
std
xor
mov
dec
mov
push
loop
clc
cmp
out
insl
cmp
fimull
inc
push
jmp
in
add
or
mov
dec
xchg
push
jae
mov
fcom
push
or
dec
cwtl
fisubl
jno
xchg
dec
cmpsl
mov
cmpsb
xchg
lahf
jbe
aam
out
adc
cwtl
xor
rcl
insb
add
repz
movsl
push
shrl
rol
fwait
xchg
sbb
aam
jbe
dec
mov
add
push
pushf
mov
dec
xchg
aad
jno
push
add
das
jns
mov
adc
and
subb
loop
ret
lods
and
inc
mov
sub
push
jge
jbe
mov
jb
pop
xchg
call
loope
loope
insb
add
iret
sub
das
inc
ljmp
or
jecxz
into
enter
cmpb
cmpsb
clc
sub
adc
mov
aaa
and
and
outsb
stc
mov
push
add
shll
mov
jl
out
push
dec
pop
mov
bound
pop
lahf
lret
shll
dec
inc
out
mov
jne
cmp
xor
sti
sbb
push
scas
mov
inc
int3
sbb
repnz
push
cwtl
mov
adc
test
pop
or
sub
sub
xor
push
hlt
rcrb
mov
rcll
sti
addr16
add
push
dec
mov
leave
cmp
and
pop
xor
and
mov
jmp
xor
jo
mov
adc
movsl
cmp
fs
inc
scas
idivb
ja
pop
cld
scas
ret
sbb
insl
add
sub
lret
repnz
push
xor
cs
adc
ljmp
xchg
add
xor
out
loope
jg
ds
popf
sbb
lahf
fcomps
and
movsb
shll
cltd
addl
sbbb
jl
out
hlt
test
sbb
data16
fcompl
mov
or
addr16
or
add
xchg
sub
in
not
cwtl
pop
sbb
cmp
xchg
push
inc
repz
sbb
xchg
leave
push
out
popf
dec
outsb
add
ret
rcll
les
mov
inc
jmp
or
int
dec
ret
jge
fsubrl
jns
or
mov
sbb
xchg
xor
iret
daa
fistl
stos
sbb
cmpsb
mov
mov
jmp
repnz
mov
roll
ret
xor
adc
cld
ljmp
icebp
sbb
test
pop
divb
and
push
js
cld
cmp
shrb
stc
sbb
xlat
dec
fisubl
add
mov
int
aaa
fnsetpm(287
dec
lds
jno
cmp
fists
daa
pop
and
jnp
xorl
shrl
cmp
xlat
sub
dec
push
xor
leave
flds
mov
mov
sub
add
ss
aaa
test
inc
adc
jns
fistl
xor
bound
pop
mov
add
jmp
and
jg
add
mov
into
jg
lock
mov
or
fdivl
push
lods
push
lods
loopne
call
push
mov
pop
dec
push
ss
xchg
std
push
and
cmp
imul
push
mov
sbb
fwait
call
dec
mov
pusha
mov
xor
nop
outsl
mov
cmpsb
ret
mov
stos
les
lret
xchg
shr
into
out
out
jmp
cmc
ss
popf
push
mov
lret
fbld
es
mov
add
sbbl
and
jbe
sub
inc
in
pop
out
out
fisttps
hlt
das
fcompl
xchg
jp
test
inc
pop
fisubrs
and
enter
dec
dec
iret
sub
rorl
movsb
push
rcll
stos
cwtl
push
les
mov
cmp
sub
movsb
sahf
fdivl
in
or
out
dec
push
jns
jae
adc
stos
xor
push
mov
scas
pusha
or
rcrb
push
dec
loope
cmp
gs
int3
cli
mov
clc
xchg
shlb
jp
pop
outsl
mov
add
push
cmp
mov
cmp
add
push
jb
in
cmpsl
lcall
mov
jo
or
jno
fistps
int
out
push
dec
out
ffree
out
xchg
loop
push
pop
adc
add
mov
pop
jo
dec
cmp
sub
sti
es
repz
cmp
dec
or
repnz
mov
and
test
mov
mov
out
popa
mov
fs
jns
add
gs
jns
mov
sbb
fwait
aam
call
push
outsl
sub
or
mov
clc
inc
int3
rdmsr
setae
adc
movsl
lret
pop
outsb
add
dec
xchg
mov
push
jle
repnz
sbb
ds
std
push
shrl
loop
jg
mov
add
or
aam
sbb
or
divl
pop
cmp
pop
mov
insl
mov
loopne
cmp
sbb
gs
mov
mov
pop
lods
push
dec
test
scas
call
dec
and
cmp
xchg
out
dec
or
xchg
inc
lds
add
mov
pushf
sub
cmp
in
inc
inc
pusha
cmpsb
cmpsb
mov
pop
jp
shll
out
jae
mov
sti
pop
xlat
pop
cs
dec
dec
or
cmp
pop
jb
pop
xor
cli
xchg
fidivrs
cmp
fcmovnb
hlt
lea
mov
addl
rcll
shr
mov
mov
mov
pushf
lea
and
sti
add
adc
call
fistps
fists
lods
lds
cmpsl
push
fdivrp
mov
in
adc
and
fistpl
shlb
mov
rcl
xchg
or
leave
and
sbb
je
inc
stos
inc
xor
nop
mov
scas
cmc
mov
test
fdivrs
orb
into
sbb
imul
dec
rolb
in
push
jno
pop
mov
hlt
xor
es
ss
in
xchg
aaa
shrl
pop
testb
sub
xchg
popa
orl
inc
sub
ret
inc
in
cmp
pop
adc
mov
mov
je
add
insb
adc
insb
shll
call
mov
sbb
movsl
xor
mov
je
sub
xchg
aas
push
pop
sub
mov
xor
arpl
std
xchg
into
clc
mov
mov
repnz
sbb
adc
pop
cltd
negb
nop
loope
adc
push
ret
pop
out
fs
outsl
xchg
lock
in
xor
jl
pop
repnz
stc
mov
adc
and
mov
fwait
inc
jp
leave
mov
or
stos
popa
icebp
sbb
pop
or
inc
cmc
imul
sbb
out
adc
push
neg
pop
or
pop
lcall
sbb
imulb
das
lds
out
data16
and
sbb
or
insb
or
jge
inc
jge
xchg
pop
jbe
pop
pushf
lcall
push
add
arpl
call
clc
sarb
outsb
xchg
out
ret
stc
orl
jp
es
fimuls
mov
add
cmp
cmp
js
jbe
fdivrl
repz
and
xchg
jbe
sti
xchg
adc
xorl
call
lods
or
rorb
sub
fildll
sbb
rorb
rcrl
lea
mov
xchg
add
fcmovb
mov
mov
or
fucomip
xor
sub
dec
addl
xchg
push
arpl
jmp
dec
into
imul
dec
xor
push
add
clc
cmp
mov
fisubs
cmp
incb
or
int
in
cmp
jecxz
pop
inc
fcmovbe
push
daa
cli
outsb
sti
xor
clc
lods
cltd
sbbb
lret
ret
xor
mov
loopne
aaa
popf
xlat
xchg
push
mov
jle
idivb
lods
jns
sbb
dec
fnsave
cmpsb
lock
cmp
push
adc
stos
push
fisubrs
js
insb
cwtl
out
sbb
sub
or
jg
mov
pop
cmp
xor
push
and
fsubrl
sbb
mov
dec
pop
sti
sbb
mov
jecxz
in
jae
sahf
clc
nop
insb
xlat
rep
aad
mov
adc
sub
pop
xlat
pusha
bound
cltd
xor
xchg
dec
decl
into
push
clc
sti
xchg
outsb
hlt
les
mov
ss
xchg
pop
or
jnp
fnstcw
add
mov
or
aam
pop
fs
adc
shlb
mov
shr
inc
fiadds
inc
mov
push
mov
imul
jp
aad
cmp
xor
jnp
mov
and
dec
iret
aad
jne
fidivl
fs
pusha
clc
cmp
fldl
test
loop
pop
loop
pop
fwait
sarl
out
xchg
sub
jmp
dec
lock
add
and
iret
out
add
test
lods
push
and
sub
insb
add
add
subb
repz
sbb
add
or
mov
jne
daa
add
orl
sub
ja
scas
out
subl
dec
popf
lods
add
arpl
cld
xchg
lods
or
sub
pop
xchg
loop
popf
and
mov
push
sub
dec
mov
pushf
flds
bound
mov
adc
cwtl
shlb
xor
aaa
out
jge
sub
sti
pusha
aad
sbb
or
test
mov
enter
sbb
inc
dec
pop
cmp
into
popa
rol
fldcw
int
cmp
jecxz
mov
test
xor
rol
out
into
sahf
out
jle
sbb
pop
xor
cmc
adc
xor
push
push
cltd
fcmovbe
dec
scas
or
fwait
bound
test
outsl
mov
inc
repnz
jg
ja
mov
xchg
sahf
or
call
lea
mov
mov
data16
mov
test
scas
pop
es
mov
jg
jbe
sub
inc
inc
xchg
mov
push
ficoms
mov
dec
cmp
mov
pop
hlt
int
fadds
jmp
popf
dec
dec
in
xchg
int3
nop
push
mov
movups
cmp
lods
push
cmc
enter
rcr
dec
pop
lret
lock
mov
inc
test
xor
or
cmp
add
dec
rcrb
xchg
out
or
popa
dec
mov
mov
fcomp
test
cmc
in
jecxz
out
xchg
mov
insl
ss
mov
in
xor
mov
fwait
push
ds
stos
sub
gs
ficoml
aaa
pop
dec
ficomps
pop
testb
jmp
dec
fdivrl
sbb
mov
pop
ret
push
sub
cmp
lret
repz
arpl
xchg
pop
cmp
mov
adc
lret
addr16
outsb
pop
xchg
lret
bound
and
push
in
lcall
push
hlt
cltd
fs
xor
sbb
in
mov
jge
ljmp
stos
flds
sahf
pop
sub
cmpsl
ficompl
pop
fs
xor
rol
imul
loop
pop
adc
inc
xor
push
or
cmpsl
in
enter
repnz
in
std
or
scas
sbbl
sub
fdivs
push
xor
dec
xlat
repz
mov
lret
sbbb
ret
mov
bnd
jns
pop
roll
adcl
jmp
mov
dec
jecxz
nop
daa
sbb
ds
fidivs
lds
ret
pop
lret
mov
pop
push
jmp
cwtl
jge
imul
inc
lahf
pop
clc
xchg
cmpl
pop
or
sub
daa
lcall
or
movsb
aaa
mov
cmp
fildll
mov
push
jg
jbe
dec
xor
rorl
sbb
push
sub
inc
fnstsw
mov
pop
mov
dec
pop
mov
bnd
mov
pop
movsb
cmp
add
scas
or
cmpsb
jno
test
pop
lock
cmp
jns
test
mov
dec
aad
rclb
in
pop
out
pop
mov
clc
sub
or
ret
cmp
rorb
push
jl
dec
mov
push
repz
jl
cld
scas
or
or
test
inc
stos
movsl
cmp
push
sahf
inc
mov
js
jmp
jo
xchg
xchg
ljmp
sub
xchg
pop
addr16
xor
xchg
add
xchg
mov
mov
mov
sub
std
cltd
dec
loope
out
mov
imul
push
pop
icebp
mov
jne
jnp
aaa
push
aaa
mov
aaa
xor
inc
in
mov
lea
jp
dec
jb
lea
popa
and
je
cmpsb
and
nop
inc
pop
movl
pop
push
loope
and
fistps
pop
xor
pop
imul
std
mov
cmpsl
fldt
dec
incb
adc
popa
clc
andb
adc
movsb
sti
enter
jmp
adc
fsubr
xor
lret
sbb
int
xchg
cmp
mov
loopne
push
enter
fs
inc
mov
lea
in
xchg
xor
cmp
shrl
test
loopne
ds
rcr
add
xlat
adc
mov
jbe
xchg
lahf
add
ja
in
shlb
or
mov
add
fadds
hlt
imul
fs
shl
ret
or
cwtl
inc
sub
or
into
or
das
es
add
mov
cmp
xor
incb
incb
mov
test
cli
push
fsubrl
jmp
and
xor
jmp
adc
movups
mov
inc
std
mov
pop
imul
xchg
mull
xchg
pop
adc
or
mov
mov
mov
push
xor
decb
test
testb
dec
jl
nop
xchg
cmc
lret
pop
add
sbb
bound
gs
call
jno
mov
ret
sub
mov
aam
out
shl
jno
xlat
std
movsl
mov
sbb
ja
add
out
push
and
sbb
rorb
jecxz
cmp
into
enter
push
push
or
mov
faddl
push
call
push
xchg
stos
scas
ljmp
jl
jg
cmp
ret
lcall
inc
mov
mov
out
xchg
dec
mov
lods
loop,pt
das
dec
pusha
insb
sbb
xchg
add
mov
push
andb
clc
mov
adc
xchg
jmp
jo
or
mov
js
fdivrs
fldcw
insl
pop
cmpsb
int3
push
frstor
jge
repz
jnp
shl
data16
dec
popa
roll
jl
push
test
ss
jp
sub
xchg
inc
or
push
mov
inc
sbb
fsub
mov
mov
push
fidivl
inc
mov
xchg
cli
iret
cbtw
aaa
shrl
mov
pop
aaa
xchg
in
hlt
lcall
insb
call
xchg
inc
popa
sub
addr16
mov
mov
test
cs
push
cmp
gs
cmp
cli
mov
adc
jne
push
jno
mov
push
jmp
or
jo
cmp
and
mov
mov
push
shr
add
xor
adcb
mov
sbb
sbb
push
rol
dec
adc
pop
cmpsb
add
xor
mov
popw
flds
cmp
pop
out
or
aam
cwtl
sub
cmc
cmp
fstpl
addr16
xor
ljmp
inc
out
push
sahf
int
aam
push
into
std
pshufw
les
jle
or
jmp
insl
xchg
dec
push
and
loope
test
rsqrtps
or
addr16
xchg
mov
fucomp
insl
cmp
out
add
movsb
xchg
cld
push
jno
or
fnstenv
aas
aad
mov
test
push
in
out
sahf
pop
cmpsb
loopne
mov
dec
icebp
sub
dec
push
mov
jle
je
sub
fcomps
pushl
ret
pop
push
cltd
adc
je
adc
out
aad
in
cmp
xchg
jle
mov
sahf
dec
dec
mov
out
pop
sub
jp
jbe
loope
xchg
out
cmp
cmpb
sbb
ds
jno
dec
mov
lret
out
mov
cmpxchg
mov
out
fstl
mov
xlat
mov
jne
xchg
pop
ret
bound
push
jns
cli
fwait
dec
sbb
jmp
shlb
dec
loope
push
iret
xchg
cmp
push
sbb
sbb
xor
or
jae
negl
push
jae
mov
sbb
xchg
dec
xchg
loope
lods
movsb
movsl
mov
int
ss
cwtl
gs
jecxz
xchg
adc
push
pop
push
lock
adc
inc
sbb
push
lods
sub
cld
dec
icebp
ret
jo
mov
adc
add
lea
data16
aas
lock
imul
sbb
pop
push
xchg
lret
mov
mov
push
ss
leave
fisubs
shlb
mov
insl
fildl
jns
outsl
iret
test
jno
bound
cs
jge
jp
rcll
clc
lods
xor
or
sbb
xlat
sbb
pop
add
pop
ret
mov
outsb
outsl
cmpsb
mov
pushl
cli
popa
jecxz
lea
sahf
and
inc
ret
push
push
repz
sbb
pop
lds
adc
fisttps
mov
pop
mov
inc
rorl
add
movsl
ret
pop
pop
xor
and
clc
lret
and
test
fucom
and
sub
stos
pop
cmp
dec
aaa
std
push
dec
in
test
mov
idivb
ljmp
mov
and
xorl
push
sbb
lret
lock
aaa
adc
pop
dec
adc
push
xor
ret
dec
mov
sbb
insb
sets
fxtract
mov
xchg
xchg
mov
push
mov
pop
sub
std
test
jnp
or
and
and
mov
int3
sub
ret
adc
xchg
xchg
xchg
mov
xchg
lock
mov
decb
ret
aad
mov
test
pop
idivb
lods
push
mov
addr16
push
lret
xor
adc
std
cli
bound
xchg
repnz
xchg
push
or
jno
icebp
rolb
push
or
adc
mov
mov
sbb
js
mov
xor
mov
adc
aas
jge
inc
sub
lret
bound
inc
jmp
sarb
add
xchg
mov
pop
stos
in
xlat
movsb
dec
sub
out
dec
imul
pop
xor
xor
je
fldcw
and
jmp
subl
cld
ja
fisttpl
dec
cmp
loop
std
xor
push
mov
fcompl
fsubs
xor
dec
fdivrl
ftst
and
sti
arpl
xor
cmp
cmpsb
cmp
repz
rcrl
add
or
call
in
out
sahf
mov
and
cmpsl
push
fstps
mov
lcall
sub
lahf
push
popf
mov
js
inc
insl
ljmp
mov
mov
adc
or
xchg
shll
icebp
mov
mov
adc
pop
jbe
and
rclb
jl
fistl
fnstenv
cmp
cwtl
js
or
cltd
pop
std
xor
outsb
ja
sub
sahf
adc
xor
shrb
fsubrs
mov
aam
es
aam
mov
push
pop
insb
popf
inc
mov
dec
out
and
pop
sbb
jp
aam
xor
push
popaw
pop
insl
stos
arpl
inc
sbb
pusha
sbb
push
pop
sub
insb
mov
iret
and
inc
addb
in
notl
idivl
sub
mov
sbb
jno
imul
cmp
sbb
pop
mov
stos
lcall
leave
sbb
jl
push
shr
aaa
pop
repz
adc
rorb
shrb
cmp
fwait
push
jne
not
outsl
push
arpl
mov
jns
cld
arpl
or
mov
jmp
jne
jg
bound
ficoml
int3
iret
cmp
out
pop
repnz
test
cmp
jns
pop
inc
pop
jbe
ret
mov
or
xor
mov
jp
in
nop
push
jg
push
jns
inc
neg
and
mov
push
clc
decb
mov
sbb
loope
popa
push
mov
es
cmp
test
push
out
push
int3
roll
pop
fstpt
fs
lcall
mov
in
pop
in
test
test
les
mov
lods
movsb
jmp
test
and
adc
lds
into
jo
das
aas
stos
push
loope
add
push
lods
push
mov
pop
int
enter
cwtl
jno
pusha
sti
xchg
adc
jg
add
inc
pop
push
mov
mov
fldt
mov
xchg
xorb
mov
mov
fsubrl
mov
ljmp
mov
lahf
xlat
inc
jmp
jl
sub
push
test
jge
push
or
repnz
sub
push
jo
add
push
int
and
cltd
pop
add
and
xor
jnp
pop
fwait
test
arpl
cmp
lret
outsb
sbb
stos
and
pop
pop
rorb
in
pop
sahf
push
cmp
jo
data16
pop
cwtl
push
cmp
mov
scas
mov
rcll
inc
sub
shr
adc
cmp
mov
jp
inc
pusha
mov
mov
and
pop
movsb
jne,pt
dec
in
xor
sahf
xor
dec
xor
cmp
inc
push
jmp
data16
push
addr16
mov
cs
int3
inc
pop
js
movsl
in
adc
dec
push
push
dec
pop
jno
ja
loope
std
sbb
shll
dec
jecxz
jp
insl
loopne
cmovg
inc
push
cs
cmp
jge
aas
pusha
dec
out
or
outsl
mov
aam
nop
imul
sbb
mov
xchg
push
enter
sahf
jno
fistps
dec
dec
clc
je
jno
jg
inc
roll
ss
sub
aaa
fcomps
add
sbb
push
xchg
push
lcall
call
leave
pop
sbb
cmpsb
imul
gs
fisubrl
cmpl
sti
fstpt
xor
cmp
push
je
pop
imul
add
jno
add
mov
mov
dec
call
cmc
rol
cmp
push
pop
out
pop
repz
or
or
mov
jne
gs
popf
enter
mov
std
and
push
jmp
or
push
adc
je,pt
dec
adc
stos
cwtl
data16
adc
dec
je
jne
out
and
mov
mov
jg
and
ret
cmp
push
jecxz
imul
jno
movsl
movsb
imul
clc
mov
cmpl
push
sbb
jno
ja
adc
push
iret
loop
mov
fdivp
roll
cmp
or
xchg
cmp
dec
outsb
mov
push
xor
pop
mov
sub
push
das
dec
pushl
ret
mov
mov
in
adc
cmp
mov
into
icebp
add
xor
decb
inc
imul
inc
enter
icebp
jmp
mov
pusha
dec
and
pop
lods
mov
mov
sbb
pusha
stos
push
mov
scas
dec
jbe
roll
xor
mov
enter
pop
or
out
cwtl
std
jle
mov
push
fwait
imul
aas
sbb
or
dec
push
in
cmpsb
aam
mov
lods
xor
sub
and
je
psubsw
daa
in
and
sbb
adc
loope
out
xor
adc
pop
add
mov
les
lods
jae
out
pop
nop
sub
mov
scas
aaa
pop
shll
or
xchg
sub
mov
sub
sub
arpl
push
hlt
mov
xchg
xchg
iret
movsb
sarl
jmp
lods
lds
and
sbb
cmpsl
lea
or
or
repz
dec
and
popf
xor
mov
fwait
jl
fsubl
lret
stos
add
xor
push
sbb
pop
xchg
int
adc
push
inc
aam
add
movsl
test
or
cs
stos
cmp
mov
out
pushf
pop
sbb
add
mov
jae
dec
insl
or
sbb
test
repnz
outsb
push
dec
sti
out
xor
rorl
inc
xor
xchg
push
pmaddwd
test
mov
cmp
ljmp
lahf
fisttpl
incb
push
xchg
and
add
jne
and
ja
mov
xchg
aaa
push
lcall
lods
xor
sub
outsb
pop
push
mov
mov
arpl
dec
or
mov
cmpsl
out
bound
mov
push
jno
out
cmpsb
hlt
jne
pop
cmpsl
xchg
aam
pop
adc
aam
js
ss
out
stos
jecxz
pusha
jecxz
inc
cwtl
test
xor
lret
imul
cmp
int
gs
inc
pop
sub
aaa
push
inc
out
cltd
dec
stc
mov
pop
mov
xlat
sub
fxam
inc
xchg
jmp
popa
and
aad
stos
shlb
xorl
push
shrl
adc
mov
mov
xlat
bound
xchg
jp
jmp
add
jo
sub
mov
mov
ret
jae
imul
xor
pop
mov
call
sub
daa
lods
data16
stos
jmp
repz
rorb
pop
loopne
or
repnz
movsl
push
push
sbb
nop
jmp
mov
xlat
lock
addr16
cmp
pop
pop
addr16
inc
fs
mov
or
xchg
hlt
mov
mov
les
imul
pop
mov
add
fs
cmp
pop
sbbb
jl
jle
xor
stos
in
and
cmpsb
test
sbb
lret
xor
outsb
cmpsb
loopne
mov
iret
or
daa
add
sbb
inc
scas
jg
pop
out
mov
adc
aad
movb
dec
add
sbb
ljmp
es
shrb
mov
or
mov
cmpsl
jg
cmc
movsb
mov
mov
jns
jg
ds
jmp
mov
ret
and
push
sub
iret
loop
jge
sub
insl
sub
push
inc
mov
popf
cmpsl
xor
jo
shrl
shrl
std
pop
je
popf
icebp
jns
cmp
jns
cld
lcallw
nop
imul
orl
test
push
or
xchg
fwait
out
stos
in
pusha
ljmp
ret
push
jo
ss
mov
pop
xchg
ficoms
pop
xchg
je
movsb
mov
leave
adc
mov
mov
lds
std
xchg
test
cmp
cmpsl
sbb
out
sub
or
movsl
sbbb
int3
dec
mov
je
clc
push
jecxz
sbb
das
mov
rcll
into
cltd
mov
mov
push
movsb
or
sbb
sub
and
ret
or
xchg
pushf
xchg
scas
int
testb
cmc
pop
or
mov
les
aam
out
and
in
popf
call
jmp
dec
aas
gs
mov
inc
inc
add
pop
mov
notl
mov
cwtl
sbb
xor
bound
mov
data16
inc
cs
ds
movsb
mov
xchg
mov
mov
pop
mov
fdivrl
push
test
pop
cmc
push
mov
in
insl
or
outsb
in
pusha
sti
dec
loopne
fs
cmp
outsb
sar
out
sti
mov
pop
pop
xor
push
jae
inc
movsl
das
dec
add
sahf
pushf
popa
inc
sub
jp
jmp
push
in
adc
push
sub
loopne
aaa
dec
mov
stc
pop
ret
int3
mov
jle
insb
iret
pop
or
mov
inc
dec
ret
dec
negb
sub
adc
cs
or
call
jg
jo
xchg
mov
adc
xchg
stos
loop
xchg
aas
mov
dec
mulb
jbe
loopne
jle
sbb
outsb
arpl
pushf
ret
popf
aad
jmp
jecxz
aaa
jo
add
insl
add
push
xor
iret
pop
xchg
dec
inc
sahf
fstpl
sub
push
inc
inc
ds
xor
inc
sub
frstpm(287
sub
scas
xchg
xor
movsl
xchg
sub
mov
popf
mov
jp
aad
jnp
and
sti
push
sub
inc
addr16
and
mov
ret
scas
inc
cmpsl
fildll
xchg
xor
sbb
call
daa
mov
aam
xchg
pop
out
pop
jmp
fnstenv
inc
call
in
jo
add
icebp
adc
ljmp
popa
popa
adcl
dec
or
adc
les
cmp
pop
stos
or
loope
fimull
hlt
push
mov
pop
adc
and
aaa
jp
mov
sahf
ja
js
jmp
insb
std
mov
and
cs
pop
jnp
xor
cli
adcb
jb
in
lret
push
sbb
mov
sbb
mov
mov
fs
clc
xchg
mov
pop
cmc
jecxz
add
dec
repz
cmp
cmpsl
jp
cmp
dec
pop
push
sbb
pop
mov
sarl
cmpsl
mov
push
leave
push
pop
iret
sti
and
sbbb
add
push
dec
sub
cmp
mov
lret
pop
shl
test
adc
mov
mov
mov
fwait
add
cmp
das
ja
or
std
or
add
dec
and
loopne
div
push
lock
inc
push
jg
in
das
mov
dec
sbb
aas
dec
insb
xor
aam
xchg
clc
std
pop
xor
pop
and
fisttpl
push
imul
xor
inc
jne
pop
pop
cmp
imul
push
lea
mov
aas
adc
inc
stos
insb
push
shrb
pop
cmc
cwtl
mov
hlt
mov
jecxz
loopne
jl
jecxz
fidivrs
mov
repnz
xor
jo
out
out
xchg
ret
mov
loope
sahf
inc
test
dec
jne
cltd
ljmp
cwtl
ret
aam
int3
mov
decl
jmp
aaa
std
lods
and
pushf
dec
mov
push
out
mov
out
xchg
jge
cltd
test
punpckhdq
andb
xchg
je
nop
int3
stc
nop
cmp
cwtl
rcll
in
ficoml
mov
lea
push
mov
mov
in
clc
aad
testb
sbbb
js
jl
cs
jl
push
ss
mov
icebp
pop
movsl
lds
stc
jp
cli
outsb
icebp
popa
xchg
jmp
mov
negl
mov
jne
lret
sbb
jp
jae
cmp
lods
cwtl
call
fstpt
int
push
jmp
pop
pushf
jg
sbb
mov
mov
sbb
cmc
jnp
ss
adc
cs
add
sarb
pop
cmp
movsb
cmc
popf
cmpsb
cmp
inc
in
inc
ficoml
aas
je
mov
sbb
pop
call
into
sbb
enter
xor
push
fldl
cmc
adc
or
int3
inc
pop
imul
scas
and
mov
jo
shl
xchg
push
xchg
stos
or
push
daa
ja
mov
cmc
test
sqrtps
js
adc
andb
jb
add
adc
mov
or
jmp
fisttps
xrelease
out
pop
outsb
testb
inc
popa
repz
es
mov
mov
xorl
xchg
sub
add
add
push
cwtl
jo
sub
in
sub
ret
cmp
jno
test
inc
sbb
jo
jmp
mov
xchg
cmpsb
cmp
inc
mov
sub
mov
ss
pop
movsl
sarl
hlt
scas
fs
int
push
ficomps
xchg
dec
pop
cmp
mov
jb
pop
movsb
and
fsubrl
cmpsb
ds
andl
outsb
pop
add
jae
xor
cmpsb
mov
fxtract
lret
outsl
imul
add
fbld
shlb
lret
subb
sbb
leave
dec
aam
loopne
lea
sub
cmpsb
mov
dec
push
sub
imul
outsl
mov
push
jns
inc
mov
push
and
outsl
sbb
nop
sbb
jnp
cmp
out
push
popf
and
mov
out
out
in
stos
inc
push
insl
push
push
jbe
dec
test
ss
sub
clc
dec
push
out
ds
outsl
lods
mov
pop
es
out
ror
mov
insb
add
mov
stc
jmp
mov
dec
jle
aas
mov
dec
mov
scas
and
push
call
xchg
adc
inc
mov
mov
add
bound
ja
push
stc
push
sar
push
xor
jno
mov
mov
ret
mov
mov
test
rcll
rcl
cmp
mov
aaa
into
ret
jo
in
pushf
jmp
mov
mov
andb
clc
outsl
jp
subb
arpl
mov
sub
movb
cmp
stc
jmp
or
jg
inc
ds
cmp
xor
xor
dec
jmp
repz
jge
popf
adc
inc
add
fwait
push
mov
shl
xchg
dec
add
mov
cmpsb
and
lret
adc
jl
in
jae
pushl
mov
xlat
fprem1
push
ljmp
cmpsb
mov
sbb
jp
xor
cltd
xchg
push
fsub
idivb
push
cmp
jg
cmc
test
ds
shrl
sbb
pop
add
repz
mov
inc
fs
or
sub
add
push
mov
test
dec
pushf
das
fsubrs
insl
andl
mov
ficompl
jp
pop
and
adc
xchg
icebp
test
fisubs
movsl
and
jmp
xchg
pop
jns
push
pop
inc
adc
fwait
rcrl
push
imul
inc
leave
flds
inc
aas
gs
sbb
pop
popa
ss
jno
loop
in
fimull
imul
push
push
xchg
repnz
leave
das
sbb
into
inc
test
sub
mov
inc
mov
sbb
jge
and
xchg
jp
mov
ja
insl
test
hlt
cmp
cmp
dec
mov
mov
jg
scas
movsb
push
mov
inc
aas
inc
jo
data16
or
arpl
mov
pop
fwait
mov
sahf
in
push
jmp
mov
push
adc
popf
jnp
subb
pop
into
push
es
cli
lea
daa
mov
data16
call
mov
outsb
jo
sbb
aad
aas
cmp
cmpsl
or
adc
in
cmc
nop
dec
jmp
movb
out
out
jmp
imul
js
jecxz
cli
xchg
lret
xchg
inc
cmp
dec
push
mov
js
leave
mov
inc
sbb
ret
outsb
mov
xlat
fidivrs
jecxz
scas
lock
fstpt
mov
push
or
jmp
jge
or
stc
aam
adc
hlt
mov
aaa
or
outsl
fildl
pop
xlat
sub
std
aaa
dec
and
lcall
paddq
lock
and
jmp
pop
inc
add
test
cmpsb
mov
or
pop
inc
sub
cli
jns
and
bound
xor
das
popf
jae
push
xchg
sar
pop
jmp
out
lahf
xor
lcall
add
cld
mov
mov
dec
lret
mov
call
lods
jg
xor
loop
jno
fs
push
mov
mov
fimuls
mov
xchg
mov
loop
shl
ret
mov
nop
ljmp
mov
mov
xchg
or
pop
add
and
enter
xchg
xor
jmp
xchg
sub
rorl
jbe
inc
cld
mov
mov
stos
mov
push
sub
jp
out
test
aas
pop
add
in
xor
lds
or
jge
dec
int3
sarb
or
jo
aas
fstl
shll
mov
in
or
or
lds
arpl
cmpsb
je
pop
jnp
bound
rcll
xchg
in
push
xor
shlb
xchg
or
lods
aas
fwait
sub
dec
add
mov
stos
jbe
stos
rorb
fs
es
fdivrl
pop
inc
push
or
or
push
sbbb
mov
movsl
jns
mov
mov
jge
dec
xchg
ds
and
or
rcl
and
and
xchg
insl
loopne
add
icebp
sbbl
cli
mov
out
jnp
mov
adcb
incl
rcr
sub
sbb
ljmp
jno
sub
pop
adc
dec
ja
mov
shlb
push
iret
loope
es
ss
mov
test
mov
popa
inc
mov
clc
fimull
adc
stc
insl
imul
sub
adc
jg
inc
pop
or
or
inc
sub
jno
test
jnp
arpl
in
sti
addl
cmp
leave
cmp
mulb
jne
push
mov
popl
mov
daa
inc
pop
mov
ret
imul
mov
pop
lcall
dec
sub
inc
pop
stos
jmp
inc
jne
jg
cmp
imul
jns
mov
sbb
test
in
or
repnz
sbb
mov
pop
fsubr
nop
jmp
add
cmpsl
lods
inc
mov
add
ss
insb
xor
push
les
sbb
mov
shll
jecxz
mov
inc
cmp
movsl
insl
arpl
mov
lods
les
lcall
jns
test
dec
js
dec
stos
adc
in
loope
cmpsl
dec
mov
movsl
xchg
mov
test
mov
andl
scas
inc
xchg
adc
in
cmpsl
push
adc
inc
imul
push
pop
mov
xchg
sub
mov
cmpsb
sbb
pop
cmc
sbb
popf
pop
adc
dec
ds
dec
push
mov
jae
enter
pushf
scas
mov
xor
mov
add
popl
lcall
and
cmp
lret
stos
mov
pop
mov
adc
rcrb
dec
and
repz
push
cld
popa
enter
adc
test
mov
ficomps
mov
fdiv
cmp
sub
cmc
mov
daa
inc
adc
ss
mov
stos
fistl
sbb
sbb
dec
pop
in
lock
lds
notl
int
aaa
int
fwait
int
mov
gs
icebp
mov
xor
out
mov
pop
push
in
fdivrs
sub
lahf
xlat
cmp
cmp
outsb
je
stos
adc
into
cmpsb
shll
bound
clc
push
je
cmp
and
mov
ficompl
pop
mov
mov
mov
fsubr
fs
lret
mov
sahf
jl
inc
push
int3
mov
repnz
in
fdivp
sbb
pop
scas
push
cmp
adc
mov
sbb
adc
mov
dec
mov
pop
ds
mov
dec
fstpl
sub
mov
clc
fucomp
cmp
dec
xor
test
push
loopne
test
mov
push
add
lea
sbbl
test
push
adc
jae
iret
arpl
jo
in
sub
lds
shrl
pop
adc
rorl
sub
outsl
pop
icebp
mov
jmp
mov
and
mov
fbld
scas
jno
adc
clc
pop
mov
test
icebp
insb
push
push
out
and
jge
cmp
mov
hlt
pop
mov
jmp
sbb
jle
sbb
and
fdivs
ret
fs
inc
add
stos
jmp
fsubrs
ret
jns
inc
pop
in
stos
xchg
lahf
dec
mov
xor
pop
mov
xchg
test
adc
dec
jnp
xor
orb
pop
repz
mov
mov
jb
sub
shll
mov
ret
or
mov
aaa
cltd
xor
jge
or
jle
xchg
pusha
cmpsb
out
add
ss
faddp
js
mov
pop
lock
add
popf
mov
lods
nop
jg
shl
inc
cmp
leave
inc
inc
daa
lods
pushf
xor
rcrl
xor
jl
stos
lods
dec
mov
decb
enter
sub
push
adc
add
lret
movsl
mov
push
test
sarb
jns
lea
enter
push
jl
xor
cmp
clc
dec
pop
sub
arpl
cmp
out
sahf
nop
push
out
ljmp
leave
or
es
cwtl
icebp
in
and
or
aad
es
cltd
or
mov
cmpsb
cmp
lods
mov
inc
je
mov
popa
mov
fucomp
jmp
sahf
push
or
mov
clc
lods
cmp
mov
std
sub
xchg
mov
dec
test
ljmp
add
push
mov
dec
fs
xor
dec
inc
xchg
hlt
fdivrs
or
xchg
sbb
mov
pop
insl
repnz
mov
mov
mov
fsubrl
lahf
sub
xor
push
scas
aaa
xchg
push
jno
xchg
or
add
pop
lods
pop
push
push
cltd
jge
cmc
xchg
dec
fsubr
test
scas
inc
fisubrl
mov
stc
ss
sti
popf
xchg
cmp
pop
addr16
dec
cld
lcall
lcall
in
std
xchg
fwait
adc
push
mov
aad
lds
insl
lahf
addr16
jge
xchg
pop
movsb
loop
sarb
mov
mov
jbe
mov
cmp
hlt
push
loopne
or
imul
fwait
ret
mov
sbb
mov
iret
bound
xor
stos
rolb
or
repz
cmp
jg,pn
cmp
mov
pop
in
and
sub
mov
aas
dec
arpl
pop
pop
leave
sbb
push
stc
pop
insl
sub
jle
loope
push
icebp
pop
inc
roll
inc
sub
lcall
pushl
pop
fbstp
push
jne
mov
sarl
pushf
pop
lahf
nop
std
mov
iret
mov
add
hlt
cmp
jno
xchg
hlt
and
iret
out
add
inc
int
push
popf
stc
jns
push
in
sbb
je
jl
inc
fsub
scas
sbb
out
idivl
sub
imul
les
dec
into
popf
loope
sahf
adc
jno
and
mov
pop
es
jo
xlat
shrl
test
inc
push
sbb
add
scas
pop
cmp
mov
rorb
sahf
push
inc
in
xlat
sub
scas
xchg
sbb
jg
xor
cli
mov
adc
into
and
stos
mov
or
test
mov
pminsw
aam
notb
or
imul
mov
xchg
jp
shrb
and
jbe
xor
nop
sub
push
lds
jae
dec
sub
out
pusha
fcoml
xchg
and
out
popa
mov
adc
out
jno
mov
pop
push
xchg
push
pop
aam
or
xor
adc
mov
lcall
inc
pop
arpl
sub
test
pop
push
mov
pop
mov
sub
push
pop
sub
jbe
xchg
mov
push
adc
jae
aad
sub
dec
imul
fdivrl
sub
fists
mov
add
jp
das
and
jne
jo
mov
mov
jnp
pop
inc
fstpl
dec
jns
lcall
in
shl
jo
scas
out
incb
ret
aas
sbb
fwait
xor
outsl
loop
pop
jno
xchg
mov
lds
mull
ljmp
pushf
bswap
int3
jp
jns
ja
xor
pop
xchg
mov
iret
rcr
call
inc
in
out
ss
addr16
mov
out
inc
xchg
mov
xor
mov
filds
xchg
inc
gs
negb
gs
stos
sbb
mov
mov
mov
leave
dec
out
xor
in
shll
mov
pop
xor
push
adc
mov
aam
sbb
insb
lcall
add
pushf
mov
adc
popa
lock
aad
gs
push
int3
mov
xchg
mov
and
adc
mov
insl
je
stos
in
and
iret
push
xor
daa
aam
pop
fidivrl
shll
jns
lock
in
jecxz
xor
rorl
paddd
and
fcomps
icebp
mov
jae
dec
jmp
in
pop
mov
loopne
mov
dec
inc
fsubr
dec
sub
jbe
gs
jp
mov
loope
cmp
or
mov
fiaddl
cltd
dec
insb
mov
cmp
cmp
jno
jae
add
adc
inc
arpl
adc
inc
ret
cmp
sub
in
pop
mov
and
pushf
jns
inc
arpl
push
sbb
out
xchg
lods
sbb
cmpsl
aas
cmp
pop
out
xlat
inc
in
add
lock
jp,pt
rcrl
mov
or
js
loop
test
sbbl
stos
loop
test
in
adc
push
icebp
sarl
and
cmp
pusha
orb
pop
fbld
sbb
xchg
mov
nop
mov
icebp
dec
push
push
cmpsl
rcrl
sbb
mov
sbb
ret
jnp
xor
dec
pop
sti
pop
adc
sbb
mov
imul
or
jp
mov
sti
out
adc
shl
add
jp
lds
jo
negb
enter
sub
add
nop
ds
dec
aad
repnz
xchg
mov
testl
sub
adc
call
cmp
inc
js
jl
in
xchg
or
insl
sub
lret
pop
dec
cmp
add
ljmp
pushf
shrb
add
test
fiaddl
or
or
aad
push
pop
sbb
int
arpl
mov
adc
int
sbb
cmp
popa
or
daa
and
les
scas
outsl
imul
movsl
loope
jmp
mov
dec
or
clc
jmp
jne
adc
pop
pop
lock
hlt
lock
iret
pop
pushf
lahf
test
test
sub
jb
sub
stos
sti
ret
pop
mov
in
push
notb
arpl
outsb
int
mov
push
ljmp
insl
sbb
cli
or
mov
dec
fwait
test
and
mov
ds
add
sbb
cli
adc
or
std
cmp
and
jnp
daa
xchg
xchg
mov
xchg
and
clc
lds
mov
adc
and
outsb
popf
mov
in
and
movsl
or
add
cmp
add
shlb
sahf
adc
mov
gs
xlat
stos
lcall
add
add
std
dec
sub
iret
jecxz
lea
dec
mov
push
pop
pop
cmp
movsb
ljmp
ret
or
inc
and
mov
push
xchg
bound
inc
pop
call
adc
test
and
fidivl
inc
bound
stos
dec
push
test
stos
loop
sahf
aas
dec
shll
cmp
add
sbb
lea
test
and
lea
pop
arpl
pop
push
aas
xchg
into
sbb
pushf
lret
in
push
testl
pop
mov
jl
js
fisttpl
pusha
jg
inc
out
xlat
pop
inc
imul
movsl
lea
fnstenv
into
and
mov
pop
repnz
adc
or
addr16
or
in
es
repz
out
and
in
fadds
push
out
fwait
xor
or
pop
push
iret
and
adc
push
stos
mov
dec
push
test
mov
in
pop
enter
outsl
xchg
outsb
jns
repnz
cmc
fwait
inc
dec
adc
cmp
xchg
lds
call
adc
add
xorl
lcall
pop
cmp
fst
sarb
pop
out
pop
arpl
dec
cmpsb
push
sub
xchg
dec
mov
repnz
mov
lods
das
mov
xchg
or
inc
lds
into
bound
lahf
imul
dec
mov
lock
mov
xchg
or
push
cs
push
call
sbb
or
adc
cmpsl
push
dec
pop
ret
inc
xchg
movsl
cmp
daa
int3
bound
jns
sub
dec
jmp
inc
xor
mov
int
or
je
inc
jmp
push
push
ljmp
cmc
cmp
pop
out
pop
xchg
call
mov
sarl
xchg
popf
xchg
test
ret
and
data16
xor
stc
push
cmp
pusha
jns
xchg
movl
inc
dec
pop
daa
stc
gs
xor
jle
scas
cli
mov
fidivl
or
roll
inc
and
std
mov
dec
pop
adc
sahf
lods
das
int3
and
icebp
cmp
mov
gs
rorl
das
rorb
sub
popa
in
sbb
mov
push
xor
imul
xor
or
scas
or
aam
mov
mov
mov
cltd
test
cld
cmp
cld
xchg
sbb
gs
test
dec
sbb
inc
add
mov
sti
test
lcall
in
das
inc
add
xchg
or
mov
jmp
pop
sbb
or
and
jg
mov
ljmp
arpl
xlat
adc
push
cmpsb
subl
pop
sub
jecxz
movsb
ret
adc
push
push
mov
inc
lods
shlb
push
push
es
dec
imul
push
pop
sarb
popf
pop
mov
sarl
cmpsl
aas
or
xlat
mov
fsubl
in
popa
mov
ja
xchg
jnp
lret
xchg
jg
enter
or
cmp
int
clc
loopne
cmp
cmpsl
xchg
mov
jbe
adc
mov
push
add
add
push
popf
js
notb
pop
mov
mov
cmpb
add
popf
pusha
add
out
subl
mov
pop
sub
xorl
mov
shll
sub
push
icebp
jns
jae
xchg
sub
rolb
add
repz
daa
fcompl
in
adc
lea
out
sub
bound
jbe
dec
not
je
and
jne
sbb
aas
xchg
dec
jmp
mov
push
push
push
cli
cmp
xor
mov
mov
fsubs
lds
pop
in
pop
aas
xchg
ss
pop
lret
mov
aas
into
lret
mov
mov
adc
jbe
cmp
rorl
mov
out
and
iret
mov
add
cmpsl
mov
mov
dec
call
loopne
inc
adc
inc
fmull
loop
and
inc
sbb
add
dec
stc
ficompl
test
xchg
or
xchg
push
mov
int3
dec
sub
ljmp
repz
or
fs
push
clc
jp
iret
rep
jne
inc
sti
xlat
ja
leave
mov
filds
fwait
dec
scas
lret
lahf
int
pop
in
pop
fildll
mov
jmp
sarl
lods
jne
stc
mov
pop
sahf
or
and
pushf
inc
call
cmpsb
lret
loop
bound
mov
cmpsl
jb
lret
outsl
push
cmpsl
push
push
add
sbb
ret
push
xchg
dec
test
aad
sub
in
sbb
xor
shll
add
xchg
xor
hlt
mov
pop
pop
or
cmpl
aad
repnz
ja
push
loop
mov
jno
push
repz
xchg
inc
mov
hlt
mov
or
xchg
xchg
daa
inc
hlt
mov
xor
sub
mov
jge
dec
sub
movsb
push
idivb
ret
sub
xchg
push
imul
xor
mov
sti
in
mov
cmc
dec
clc
xchg
arpl
xor
fsubl
add
jle
icebp
jle,pn
mull
dec
lahf
lods
cmp
loop
mov
out
adcl
outsb
pushf
scas
fwait
adc
leave
outsb
pop
adc
ds
mov
inc
pop
pushf
adc
adc
lcall
cmc
loopne
sub
dec
mov
test
repz
xchg
insb
insl
jnp
mov
or
pop
cmpsl
xchg
or
das
fwait
xor
cmpb
les
stos
push
loope
insb
add
push
call
ds
into
loope
mov
imul
sub
pushf
mov
ss
leave
adc
xor
inc
and
rclb
lret
bound
fadds
jl
cwtl
lcall
in
orl
cmp
sbbb
sbb
clc
dec
cmpsb
imul
cmp
lcall
push
sub
adc
push
xchg
pmaxub
mov
test
pop
mov
ss
add
shl
scas
dec
loope
and
jbe
jne
mov
xchg
mov
sar
or
and
ror
in
push
rorb
add
aas
pop
xorl
pusha
pop
loop
cmp
test
sub
mov
mov
add
je,pn
add
test
cmpsb
sub
mov
cmp
dec
in
xor
dec
push
hlt
push
jae
out
cmp
jmp
cld
rcrl
and
popa
push
xchg
data16
xchg
in
sub
ss
es
sub
cmpsl
insb
cli
xchg
test
mov
cmc
sarl
out
add
repnz
les
mov
jnp
pop
popa
das
inc
lahf
test
mov
mov
sbb
or
sahf
pop
into
or
mov
popa
pop
mov
and
dec
dec
out
mov
nop
enter
lods
and
inc
je
dec
mov
push
loop
shrl
sbb
dec
inc
test
pop
sbb
in
stos
xchg
push
cmp
stos
hlt
jbe
adc
out
xchg
jno
inc
adc
jle
ljmp
into
enter
push
jnp
mov
sbb
add
sub
mov
cmpl
or
lcall
std
sbb
mov
adc
fwait
mov
loopne
push
push
cs
je
mov
sti
cmpsl
and
sbb
and
xor
pushf
cwtl
testb
jmp
sub
sub
lds
jno
jo
hlt
and
and
ret
adc
adc
test
cmp
mov
pop
dec
test
push
fiadds
popf
xor
dec
popa
std
shlb
enter
xchg
add
arpl
fcoml
jae
int3
popa
fdivl
add
mov
or
clc
popa
ljmp
das
jl
add
inc
jecxz
int3
add
inc
arpl
in
adc
mov
cmpsb
lock
lahf
sti
stos
or
das
add
movsl
inc
adc
adc
lods
push
rcrb
mov
stos
enter
in
shrl
test
pop
sbb
jp
xor
pop
mov
idivl
in
add
push
inc
jmp
repnz
test
xor
sub
push
test
dec
cwtl
pop
inc
inc
test
pop
xchg
xor
loop
aad
insb
inc
ja
je
and
push
jmp
sub
and
cli
stc
test
xchg
sti
xchg
lds
fyl2x
push
lods
lahf
hlt
jne
mov
mov
push
out
lahf
jl
sub
cltd
cmpsl
mov
inc
imul
gs
imul
lds
lcall
notb
mov
jne
insb
andb
pusha
sub
mov
lds
jmp
ficoml
mov
xor
ds
push
lret
push
paddb
mov
dec
and
jmp
imul
cwtl
repz
test
push
xor
inc
jmp
hlt
dec
push
test
and
sub
sahf
mov
push
push
icebp
pop
cmp
add
loope
pop
and
out
cmp
shl
mov
sub
sbb
mov
jns
or
repnz
xchg
movsl
ja
nop
jge
sbb
out
std
and
xchg
pop
dec
outsl
test
xor
shll
and
pusha
jo
ret
lahf
aad
add
mov
insl
add
xchg
pop
pop
stos
xor
sahf
loopnew
add
mov
push
lock
mov
out
and
mov
leave
scas
test
push
shl
jecxz
shr
insl
lret
shrb
inc
sbb
push
movsb
xchg
jb
add
pop
aad
xchg
imul
sbb
xlat
cltd
push
aad
inc
movsb
fldenv
in
sbb
inc
sub
movsl
mov
subb
rcrb
inc
popa
loope
cmpsb
sub
adc
cwtl
xor
xor
cmp
cmp
add
stc
fldt
jl
mov
jle
stos
jmp
xchg
jl
outsl
and
mov
aam
mov
ret
rcll
dec
bnd
ljmp
ljmp
mov
jmp
dec
in
jge
and
stos
das
sahf
idivb
ja
jbe
push
mov
imul
mov
sbb
iret
iret
xchg
adc
popf
add
mov
fsubrs
fcoms
xchg
xor
scas
cmp
add
dec
into
fdivl
stos
sub
mov
adc
xlat
js
inc
gs
fnstsw
or
mov
stos
xchg
sub
rorb
ret
dec
and
pop
xchg
outsb
lahf
in
cmpsb
mov
movsl
cmp
test
aam
mov
pop
ret
mov
bound
mov
mov
or
xor
cli
add
push
adc
imul
jecxz
jnp
inc
enter
js
scas
stc
repz
scas
js
push
cmp
enter
sti
xchg
jg
or
push
loope
outsl
dec
cmp
add
mov
test
pop
imul
bound
cs
or
lods
adc
testl
call
and
les
xor
daa
movl
aad
scas
jp
testb
cmp
xor
xchg
imul
cmpsb
cmp
sti
and
daa
ret
mov
jo
mov
jmp
scas
jnp
and
jecxz
dec
pop
adc
daa
out
cmc
mov
or
adc
addr16
mov
mov
inc
jle
sbb
mov
cmp
stos
mov
call
adc
xor
aad
lds
jb
jmp
sbbb
pushf
inc
imul
sbb
push
and
ja
and
rclb
xchg
js
push
jle
dec
imul
insb
aam
pop
ror
lods
sub
mov
fwait
loope
out
out
dec
aam
jg
jmp
xchg
scas
cmpsl
mov
out
ljmp
and
push
out
fistl
je
inc
stos
push
daa
adc
dec
popf
sub
mov
mov
fildl
fldl
cmp
andl
fwait
mov
test
pushf
jbe
in
lahf
shl
xchg
inc
cmpsb
cltd
xor
push
das
fildl
xor
cmp
aad
mov
fsubrl
stc
cli
xorb
das
dec
and
xchg
cmp
lcall
popa
in
mov
push
mov
pushf
sub
nop
push
mov
or
push
fmull
add
mov
gs
adc
popf
insl
sub
test
or
das
fstpt
int
shr
add
call
sti
sbb
or
lds
pop
dec
pop
inc
and
cmp
sub
pusha
rclb
dec
pop
out
jb
sahf
fwait
in
mov
sahf
xchg
stos
pop
frstor
pushf
aas
rcll
xor
dec
test
into
loope
add
in
xor
ret
xchg
sub
mov
mov
lahf
jecxz
ja
xor
cs
xchg
inc
mulb
sbb
push
sti
stos
stc
mov
sub
mov
or
xor
push
add
xchg
hlt
sti
test
cmp
loopne
jmp
cld
mov
sbb
mov
sahf
adc
xor
imul
fs
incl
sub
and
xor
push
in
jae
sub
outsl
shr
lcall
ja
hlt
push
mull
sbb
movsl
mov
add
adc
clc
cmp
mov
add
ja
and
int
in
nopl
mov
in
cmpsl
cmpxchg
xor
jge
mov
popf
pusha
xor
push
cmp
adcb
xchg
scas
pop
notb
cmpsl
pushf
loopne
std
enter
sti
repz
and
mov
mov
add
ficoml
lds
jo
in
aas
shl
cmp
les
imul
push
fdivrl
outsb
mov
test
mov
mov
inc
adc
test
out
bound
pop
add
aas
xchg
rcl
pusha
mov
loop
inc
sbb
lahf
push
or
inc
or
shrb
jns
cmp
sbb
test
sbb
push
adc
mov
mov
mov
in
divl
cmpb
mov
add
lea
sbb
sub
pop
aas
jbe
ja
cli
mov
in
pusha
imul
cmp
mov
sbb
pop
inc
sar
repz
imul
repnz
add
xchg
dec
lock
push
insl
xor
test
cmp
cmp
xor
mov
loope
xor
sub
mov
fld
mov
inc
jp
outsb
add
sub
xchg
call
call
and
adc
push
inc
call
mov
push
cmp
int3
and
and
ds
xor
jne
aad
hlt
adc
cmc
pop
adc
pop
out
mov
loopne
push
adc
xlat
std
pop
adc
jg
and
xchg
dec
or
and
cmp
adc
push
mov
xchg
pop
cwtl
lret
jae
mov
repz
push
cmp
push
xchg
mov
and
rol
idivb
out
test
pushf
out
icebp
mov
fdivs
pop
jl
andb
mov
test
in
xor
lret
dec
dec
fdivrs
ss
mov
sbb
pop
sahf
xor
ret
pop
xor
sub
pop
bound
push
test
ja
pop
cmp
pop
cmpsb
aaa
lret
shlb
imul
test
pop
ds
jnp
rcrl
inc
add
or
loopne
lret
es
xor
sarl
adc
pop
xchg
mov
or
sbb
push
mov
js
push
testb
lea
movb
cmp
or
dec
jle
xchg
sub
mov
push
add
sub
repz
and
and
mov
mov
inc
add
fucomi
add
and
inc
mov
imul
adc
lods
jl
and
mov
xor
add
out
in
cwtl
lods
xlat
ds
or
idivb
inc
icebp
scas
ret
mov
xchg
outsb
inc
lock
mulb
and
sbb
shlb
push
mov
cmpl
out
sahf
dec
aam
fisubl
mov
wrmsr
clc
clc
addb
cli
test
ret
pop
arpl
pusha
and
mov
out
sahf
and
xchg
das
out
repnz
mov
loope
clc
adc
jg
pop
lea
fisttpl
es
sbb
jns
je
popa
xor
cmc
mov
lret
inc
or
mov
lcall
js
fidivrs
inc
cmp
mov
mov
adc
jns
jns
shrl
loope
jnp
jnp
je
movsl
idivb
or
pop
subl
pop
sbb
add
jl
outsb
mov
mov
popf
enter
rorb
fucomp
adcb
mov
adc
or
push
mov
fildll
dec
pushf
add
inc
fnstcw
arpl
jecxz
adc
cmpsb
inc
sub
icebp
xchg
dec
int
mov
xchg
jmp
inc
or
or
rorb
rorb
cs
scas
adc
xchg
sahf
xor
rcrl
addb
lret
jo
adc
inc
sbb
push
dec
xchg
or
jmp
stos
std
jecxz
or
stos
imul
outsl
fistl
jne
mov
pop
add
xchg
pop
fiaddl
enter
pop
ret
pop
dec
lcall
mov
fst
sub
sbb
pop
mov
into
pusha
sbb
adc
out
add
xor
scas
dec
idivb
push
sahf
stc
inc
mov
xchg
out
jo
push
or
fisubl
pop
cmpsl
daa
sub
test
pop
popa
pop
ret
cmc
ja
cld
insl
add
add
inc
sub
pop
in
pusha
and
xchg
sub
inc
sti
stos
push
pop
loopne
movsl
mov
rcrl
clc
aam
jmp
lret
adc
in
fsubrp
cmp
jp
jmp
and
sub
out
adc
inc
push
xchg
mov
jae
lret
bound
and
mov
push
or
out
adc
dec
mov
xchg
mov
mov
xchg
jnp
jb
nop
decb
test
adc
push
leave
mov
fldt
je
jbe
ret
test
adc
and
xor
xor
stos
cmp
ret
repz
jge
repnz
jno
lret
adc
popa
out
xchg
std
subb
sub
lahf
push
adc
pop
out
and
sub
fs
movsb
sti
xorl
xchg
jp
inc
fsts
and
jecxz
pusha
ret
sub
lea
adc
outsb
hlt
pop
dec
jmp
lods
cmp
nop
xchg
jbe
repnz
sarb
xchg
std
dec
inc
fidivrl
sub
lods
repz
mov
push
xor
adc
hlt
mov
std
jge
xchg
aaa
sub
stc
jmp
stc
popf
lahf
pop
inc
fldenv
out
test
fcmovb
fldenv
lods
mov
adc
outsl
je
data16
scas
movsl
xchg
iret
mov
mov
iret
scas
inc
data16
fwait
mov
nopl
inc
mov
or
mov
jno
dec
out
aam
mov
push
daa
std
pop
lret
std
or
scas
int3
popf
shl
rol
cmp
loope
aas
push
xlat
ret
pop
hlt
lods
mov
lods
jno
and
adc
or
lock
loope
rolb
jae
add
lcall
ret
call
or
push
pop
mov
arpl
cmp
mov
test
insb
sub
mov
test
jno
sbb
jmp
dec
cmpsb
push
stos
daa
xor
bound
fs
mov
cmpsb
cmp
inc
xor
dec
fldl
repz
pop
xor
jp
mov
and
out
pop
cmp
add
sbb
dec
or
mov
test
ss
arpl
xchg
insb
mov
pop
mov
push
mov
ljmp
dec
std
dec
loop
sbb
imul
in
sti
xchg
es
pop
outsb
inc
pop
test
pop
loopne
dec
out
ja
icebp
gs
xchg
xchg
pop
pop
adc
loopne
cmpsl
mov
inc
fisttpl
lock
lahf
aaa
das
bound
loopne
xor
mov
lret
xlat
test
scas
xor
lods
imul
add
jno
pop
add
in
andl
cmp
xchg
adc
rorl
or
push
es
and
mov
and
inc
mov
rcll
test
add
vmovlpd
rorl
inc
rorb
loopne
iret
daa
fnstenv
test
in
shlb
clc
pop
sub
lcall
sub
adcb
inc
test
ret
test
lret
push
jb
or
imul
repnz
inc
pop
pop
stos
fisubrl
xor
jp
test
ljmp
ja
dec
loop
je
es
mov
out
inc
mov
mov
inc
lret
mov
pop
mov
lods
outsb
inc
pop
inc
jne
jb
int
movsb
sub
out
xchg
xchg
sar
je
pop
in
and
imul
lea
cltd
and
push
mov
fstpt
jnp
mov
fimull
sti
cltd
xor
movsb
rorb
push
cmp
test
cwtl
push
std
outsb
mov
mov
pop
push
sbb
and
mov
pop
jmp
out
lds
enter
inc
cltd
jmp
mov
push
cld
pop
xor
jp
adc
pop
xor
adc
int
iret
ror
pop
bswap
jp
dec
shrl
or
in
inc
scas
les
nop
mov
adc
mov
add
loop
sub
cmp
fnstenv
inc
inc
dec
fistpll
lahf
pop
mov
out
cli
scas
mov
mov
cmp
and
ja
or
mov
mov
jb
push
mov
data16
imul
scas
rclb
outsb
out
lea
popa
cmpsb
cmp
mov
jne
dec
imul
pushf
cltd
dec
int
movsl
insb
or
imul
sahf
cld
xor
repz
adc
cld
cwtl
ss
xchg
inc
data16
mov
daa
insl
arpl
push
cmp
les
xchg
popa
or
jg
je
inc
mov
push
inc
push
fsubl
xlat
xchg
cmp
add
repz
adc
pusha
dec
cltd
sbb
and
sub
into
insl
loopne
pusha
adc
pop
outsl
xchg
dec
loop
pop
or
jo
insl
xchg
sahf
sbbl
jmp
lcall
cltd
test
pusha
mov
movsl
fsubl
adc
inc
adc
dec
out
adc
arpl
sbb
jnp
push
call
jns
lret
adcl
pop
sub
outsb
cmp
int
outsl
add
xchg
cmp
cld
incl
xorl
repnz
xchg
shlb
cwtl
sub
add
mov
out
and
int3
mov
fsubs
bound
push
cmc
lds
ljmp
out
pop
lahf
sbb
jbe
or
xchg
inc
push
aam
icebp
xchg
sbb
mov
addr16
pop
xchg
sub
dec
cld
and
push
pushl
or
add
lahf
repz
xchg
sub
xchg
mov
push
cmp
jo
and
sbb
rcl
ficoml
jno
cmp
out
cmp
iret
push
aas
shl
insl
mov
jns
fstpt
and
lods
add
mov
lock
idivl
mov
dec
repz
add
icebp
fcoml
dec
and
or
mov
push
out
hlt
mov
cld
pusha
in
mov
andl
jns
loopne
aam
lds
push
inc
ljmp
cmp
push
test
or
push
insb
cmc
mov
add
jns
cmp
adcb
sub
jne
sbb
push
cltd
repnz
dec
fsubrl
nop
jbe
adc
lods
or
popf
push
push
push
add
out
mov
scas
mov
stc
add
ljmp
pushf
jmp
in
mov
mov
sbb
xchg
shr
or
inc
mov
mov
or
inc
push
shrl
dec
pop
pop
pop
call
or
add
push
sub
repnz
shrl
mov
mov
call
push
shlb
aad
pushf
xchg
push
mov
or
and
mov
jl
mov
js
mov
mov
shrb
lock
in
dec
imul
and
fstpt
lea
test
pop
fmuls
call
jg
and
mov
dec
push
cwtl
pop
out
jo
xchg
push
push
stos
cld
pand
gs
mov
int
jo
sbb
std
call
std
xchg
adc
xchg
push
icebp
movsl
inc
gs
enter
or
divb
cmp
pop
fadd
aas
ds
insb
lret
adc
adc
xchg
pop
movl
and
push
dec
icebp
arpl
cs
cmp
push
dec
out
cmp
outsb
adc
cli
movsl
aaa
ljmp
repnz
xor
add
or
mov
sub
mov
fstps
imul
cmp
in
add
fxtract
dec
and
mov
xor
jmp
and
cwtl
fisubrs
arpl
rolb
cmp
sbb
mov
subl
mov
push
mov
or
pop
jns
iret
scas
sti
rcrb
and
sub
je
or
in
mov
gs
jl
mov
insl
sub
icebp
or
dec
fucomp
aaa
test
stos
or
xchg
mov
bound
into
cltd
pusha
testl
and
mov
and
jo
rolb
sub
loopne
imul
and
lock
iret
ljmp
sbb
out
scas
vpavgb
mov
lods
movsl
xor
cmpsb
setne
cwtl
loope,pn
popf
xor
sahf
xor
jl
cs
clc
or
jne
repz
nop
ss
mov
lcall
insl
jnp
filds
xor
mov
adc
xor
mov
repz
dec
dec
movsb
repnz
aaa
loopne
or
je
mov
adc
pusha
aaa
test
cmp
in
push
adc
lahf
push
xchg
mov
rcrl
push
sub
jp
adc
inc
leave
loopne
mov
fst
push
std
test
shlb
jnp
sbb
inc
push
add
repnz
hlt
int
mov
popa
sub
enter
dec
mov
fstp
sub
inc
pop
push
jg
push
sub
inc
pusha
ret
pop
push
push
fwait
mov
jbe
mov
mov
das
and
leave
loope
test
aaa
xor
lods
jmp
es
adc
lcall
pop
jb
dec
and
xchg
inc
aad
sub
xor
mov
sbb
aad
rorb
aas
out
pushf
rcl
sub
mov
mov
or
inc
push
das
loope
test
sub
or
rorb
add
or
std
xlat
inc
pop
or
hlt
push
cld
sahf
and
pushf
dec
push
outsl
adc
sbbl
cmp
sub
push
loopne
pop
and
std
unpcklps
xchg
cmp
dec
movsl
pushf
mov
mov
out
jae
push
loope
sub
xor
test
in
hlt
mov
dec
out
sahf
jnp
push
pop
add
iret
xor
mov
mov
push
push
mov
je
icebp
inc
cltd
addr16
xchg
mov
pushf
sbb
hlt
fsts
ja
aam
sbb
out
adc
fdivp
cmp
add
pop
loopne
lret
test
inc
or
mov
jmp
sbb
imul
sbb
cmpsl
inc
les
or
jecxz
int3
enter
cmpsl
xor
sbb
hlt
xor
lea
dec
xor
pop
scas
push
or
mov
xchg
pop
leave
imul
sbb
mov
imul
lret
cmp
mov
sub
mov
stos
mov
push
outsb
jl
hlt
stos
xor
push
test
dec
dec
cmpsl
xor
das
lds
fs
les
cmp
sbbl
mov
jg
inc
or
xchg
rcrl
push
jge
ljmp
add
push
cs
and
adc
divl
xchg
push
mov
mov
xchg
ds
xor
insl
mov
pop
inc
push
lods
jno
lods
es
push
inc
pop
imul
popf
and
xchg
imul
je
cld
xchg
xor
inc
bound
push
mov
mov
test
xchg
add
pop
enter
enter
dec
xlat
sbb
cwtl
or
dec
mov
repz
int3
rorb
pop
jmp
mov
fwait
jno
fcmove
std
scas
js
add
popa
das
add
dec
pop
adc
mov
push
sbb
inc
and
mov
or
inc
leave
cmp
jl
lea
pop
jp
push
jae
fisubl
jns
inc
pusha
and
out
les
mov
test
xchg
sbb
fdivrs
sbb
pop
mov
jge
mov
aam
mov
gs
xchg
test
in
add
ret
jle
decl
addr16
cltd
mov
inc
cwtl
lea
je
and
shr
xor
mov
rolb
aaa
push
mulb
pop
fcoml
and
jmp
aas
into
std
cmpl
loop
lods
sti
lods
fstl
mov
shl
decl
aad
add
fsubp
dec
icebp
add
es
or
or
xor
outsb
pop
cmp
sub
or
xor
pop
popl
cmpsl
std
and
subb
xchg
mov
or
cmp
jmp
ds
mov
filds
mov
sbb
daa
mov
dec
testl
ja
add
and
mov
pop
cwtl
lods
and
rolb
rcll
lret
subb
xchg
jno
add
and
js
mov
in
add
or
sub
pop
in
inc
inc
xchg
xor
jno
sbb
scas
jb
and
sbb
mov
dec
test
xlat
pop
fbstp
addb
cld
cld
xchg
das
jecxz
sti
or
shr
xchg
outsl
loope
dec
add
jne
inc
xchg
sub
sahf
push
sbb
adc
xchg
repnz
lahf
filds
dec
sbb
jmp
iret
mov
ja
sub
dec
test
cmp
outsb
out
outsl
mov
mov
sbb
test
mov
pop
outsb
jge
adc
out
dec
dec
and
and
cmp
lds
xchg
and
pop
jg
subb
test
lret
rcrb
dec
ret
jnp
pop
push
mov
sbb
js
ja
shlb
dec
mov
aam
jo
in
push
ret
ja
clc
jo
and
jecxz
mov
push
call
outsb
ljmp
popa
dec
outsb
or
push
outsb
jae
xchg
push
sub
mov
cmpsl
ret
adc
mov
push
jbe
les
push
sub
outsb
inc
jecxz
ds
fstps
jg
pop
lea
pop
adc
sbb
dec
pop
mov
push
jmp
into
gs
or
es
xor
mov
aas
and
test
arpl
scas
xchg
cltd
jp
xor
push
test
fsubrp
push
xchg
pop
cmp
out
imul
jb
pop
dec
loope
or
jae
inc
nop
lods
iret
jae
inc
mov
xchg
or
movsl
jp
mov
gs
cltd
mov
es
lods
aaa
inc
clc
movsb
inc
lock
mov
sbb
into
inc
sub
xor
sbb
bnd
dec
insl
push
fistps
add
fsubrs
xchg
inc
dec
push
cmc
scas
ret
dec
inc
push
dec
push
lcall
sahf
and
xor
push
mov
aad
and
jns
mov
lea
cs
in
je
aaa
in
lods
mov
sub
jns
scas
scas
outsb
adc
ret
and
repnz
imul
and
mov
mov
rorl
or
aad
test
mov
push
adc
fwait
mov
notl
inc
psrad
rcr
jo
add
clc
nop
pop
push
gs
xchg
inc
jmp
in
stos
jl
xor
pop
add
or
std
nop
push
pop
jae
dec
outsl
or
mov
mov
add
mov
call
jg
add
cld
add
and
push
fstl
mov
popa
mov
cmpsl
gs
mov
xchg
jo
clc
or
mov
adc
outsb
loopne
pushf
add
xor
repnz
cmpsb
stos
or
scas
jge
cmp
mov
inc
mov
cmp
lods
fwait
xchg
or
push
imull
loopne
addl
xor
in
inc
fldcw
pop
popa
clc
cmp
iret
insb
dec
sbb
and
and
es
jbe
dec
inc
xlat
cmp
sbb
push
ja
mov
sbb
xchg
mov
shll
xchg
in
mov
or
cmp
mov
addr16
je
xchg
das
lret
ds
or
int
popa
imul
lea
movsl
movsb
movsl
mov
dec
xchg
enter
jb
xchg
data16
and
loope
xchg
fcmovnbe
js
lods
lock
cli
arpl
mov
stc
test
add
es
pop
or
push
cmp
xchg
jmp
fiaddl
add
add
pop
lret
pop
dec
mov
es
pop
int
jl
mov
xchg
adc
sub
mov
xor
jno
int3
scas
call
clc
sub
cli
rcrl
sub
jg
cmp
sbb
add
or
pop
in
ja
mov
fwait
sub
mov
movsb
mov
mov
or
stos
ror
loope
mov
lods
lret
pop
and
mov
movsl
adc
dec
aaa
movsl
mov
lret
inc
mov
mov
daa
nop
mov
pop
daa
inc
mov
cmpsb
xchg
mov
jl
aas
sub
mov
or
push
or
daa
dec
ret
fists
bound
sub
mov
lods
insl
mov
cmpsl
pushf
and
dec
mov
das
sahf
popa
clc
iret
mov
jle
addr16
add
popf
in
popf
outsl
inc
gs
jmp
xor
insl
outsb
push
int
cmp
enter
std
mov
filds
or
loope
call
mov
iret
outsb
sub
ret
xlat
cmp
lcall
pop
pushf
or
nop
daa
test
scas
fnstsw
ret
shll
shl
xchg
fsts
fbstp
mov
push
std
inc
adc
aaa
mov
dec
xchg
adc
andb
sbb
cmp
pop
inc
lock
and
push
pop
cmpsb
dec
pop
fmull
loopne
jbe
adc
jl
pusha
popa
loop
addr16
or
pushw
pusha
jl
add
jae
jecxz
push
or
cmp
cs
xor
es
push
xor
inc
pushf
loop
les
in
sbb
xchg
mov
iret
mov
and
push
sbb
sbb
aaa
mov
arpl
inc
sbb
or
ret
and
jg
imul
adc
jge
or
xchg
nop
push
or
jo
mov
scas
mov
adc
jnp
xchg
mov
xchg
in
mov
mov
adc
sub
rorb
push
push
xor
mov
jge
mov
aas
mov
mov
sbb
test
dec
xchg
xor
enter
scas
mov
and
enter
jge
jnp
cmpsb
sahf
sbb
std
stos
adc
adc
dec
arpl
test
clc
jp
stc
js
sbb
cltd
inc
add
pop
inc
andb
fildll
sbb
aad
mov
cmp
out
push
test
adc
dec
aad
mov
jecxz
mov
inc
cmpb
xor
push
dec
das
aaa
mov
sbbb
add
cs
cmp
in
add
and
inc
cld
xchg
pop
call
cmp
fwait
push
push
icebp
xor
in
jmp
xlat
subl
push
sbb
pop
stc
jno
mov
dec
sbbl
loopne
jne
pop
ss
mov
mov
imul
or
lods
xor
jae
adc
inc
pop
mov
pop
xor
or
cld
outsl
xchg
nop
jnp
mov
mov
jge
aas
dec
ret
mov
lea
and
jae
int
test
test
sub
inc
adc
push
cmc
push
cmp
jmp
negl
scas
or
leave
int
lahf
xlat
mov
out
push
call
xchg
fcomip
lea
mov
pop
enter
inc
mov
cmpxchg
xchg
mov
es
xor
inc
sbb
xor
cmp
add
sbb
mov
cmp
insb
xchg
lret
lea
mov
mov
xor
leave
xchg
out
inc
sahf
mov
inc
pop
movsl
xor
adc
inc
fnsave
pop
fisubrs
push
and
jae
inc
xlat
sub
dec
out
push
dec
aam
add
mov
int
push
adc
jmp
dec
in
out
jbe
pop
test
xchg
lods
loop
cmpsb
cmp
shr
sub
xchg
out
xor
cmp
add
mov
test
push
add
dec
and
pop
adc
shl
xor
clc
push
stos
in
xlat
inc
mov
xchg
adc
popa
inc
mov
call
pop
cmp
loop
out
aas
adc
in
lock
xor
sub
pusha
lahf
push
roll
nop
imul
mov
insb
ljmp
outsb
std
loop
and
xchg
cmp
or
dec
sbb
pop
lahf
xchg
xor
sub
cmp
cmpsb
pop
jb
pushf
xor
and
ret
test
jb
mov
and
test
shll
inc
ret
enter
mov
sbb
push
mov
lahf
lock
add
or
inc
addr16
arpl
std
imul
or
jg
inc
arpl
pop
mulb
add
adc
fcomp
sbb
mov
stos
cmp
xchg
loop
jecxz
mov
lock
lods
jae
push
enter
sbbl
adc
rclb
sbb
sbb
bound
inc
xor
jmp
rorl
inc
stc
push
cmp
int
sub
cmpsb
mov
push
dec
enter
adc
mov
pushf
adc
cld
and
daa
or
jle
sub
mov
scas
mov
call
inc
out
cmpsl
out
test
fildll
insb
int
inc
push
into
scas
mov
sub
aam
xchg
test
shrb
fadds
adc
or
data16
es
rcrb
pop
pusha
aaa
or
mov
xlat
xor
decb
push
cs
lods
and
pop
cli
nop
into
movsb
add
out
mov
lods
cmp
or
add
sub
mov
jbe
lcall
pop
dec
cmp
test
inc
stos
int
shlb
out
insb
adc
fildl
push
sbb
insb
xchg
xchg
jbe
sarb
mov
iret
test
ret
and
pop
int3
push
test
jb
adc
testl
je
es
stos
and
xchg
push
fistpll
push
ja
mov
repz
push
sbb
push
lods
sbb
dec
push
push
fiaddl
lahf
ss
cmpsb
sbb
mov
inc
push
je
push
push
outsl
loop
ror
loope
and
mov
xor
inc
int
in
lods
cmp
cmp
shlb
push
add
int3
xchg
cmovb
mov
xchg
jge
aam
push
lods
jmp
addl
mov
add
mov
push
dec
cltd
daa
jo
pop
inc
leave
cmc
arpl
leave
pop
lahf
dec
enter
nop
repnz
jbe
and
repnz
cmp
dec
rep
mov
inc
lret
and
dec
out
sbb
stc
pop
leave
push
inc
add
movsl
fidivrl
mov
xchg
stos
adc
xchg
pop
negb
mov
push
frstor
in
inc
xlat
mov
cmp
or
pminub
cmp
cmpsl
js
fxch
les
jecxz
call
push
in
pop
mov
insl
mov
lea
jmp
lods
imul
cwtl
mov
push
decl
adc
push
test
mov
lds
push
xor
lahf
sbb
dec
shll
pop
add
xchg
add
pop
dec
xlat
fidivrl
jo
into
movsl
cmp
fwait
mov
xor
arpl
aad
jl
xchg
or
movsb
clc
insb
pop
hlt
inc
into
pushf
adc
in
loope
fisubl
or
outsl
jp
movsl
addr16
inc
add
dec
pop
hlt
repnz
cld
cmc
out
addr16
in
or
jle
lds
xor
out
sbb
add
xchg
data16
out
in
into
ret
push
shrb
mov
es
test
sbb
add
mov
test
and
sarb
clc
jl
adc
mov
outsl
repz
xor
push
cltd
cmp
cli
test
jecxz
or
dec
ss
mov
xchg
mov
movsl
pop
insl
out
xorl
dec
push
add
iret
int3
and
mov
sub
in
js
and
test
imul
pushf
out
mov
enter
jb
imul
jae
push
and
rolb
movsl
arpl
and
leave
push
insl
scas
addr16
mov
test
popa
cs
or
test
and
fisubrs
addr16
and
sub
lods
inc
dec
pushf
lret
out
lret
push
pop
xchg
lea
mov
pop
sti
push
pop
and
sbb
adc
shlb
insb
loop
cmpsl
adc
xor
imul
mov
xor
lahf
mov
shrl
addr16
push
mov
out
out
std
pushf
xlat
xor
add
movsb
es
lahf
push
imul
popa
std
push
cmp
and
mov
movsb
sub
cmp
bound
nop
and
inc
cli
scas
adc
sbb
jp
cwtl
stos
sub
movsl
sbbb
mov
out
inc
fcomps
push
xor
mov
or
arpl
call
push
lahf
push
jb
jae
push
mov
adc
and
cmp
mov
pop
test
pop
lds
and
std
stos
cmp
xchg
gs
push
shrl
mov
xor
movsb
xchg
xchg
fnstsw
in
mov
cs
sub
cmp
xlat
xor
les
jg
xchg
xchg
out
fwait
test
and
stc
lea
cmpl
xor
ja
inc
and
mov
mov
jbe
push
and
adc
xchg
jno
out
es
xchg
sbb
mov
cmpsb
bound
or
ss
mov
dec
inc
lods
movsb
add
mov
das
ret
push
or
icebp
pop
lret
cmpsl
fs
pop
mov
pop
jle
mov
sbb
jno
fsubr
xchg
sbb
add
xchg
push
sbb
mov
ljmp
pop
cmpsb
inc
sub
ja
adc
adc
mov
cmpsl
lock
mov
sbb
or
imul
lods
inc
mov
out
mov
jb
sub
ja
or
jle
shrl
data16
fdivl
aas
mov
lods
cwtl
push
repz
and
push
int3
stc
lret
lret
inc
sub
shlb
inc
dec
sbb
sbb
cltd
in
xchg
sub
mov
mov
inc
sbb
pop
and
xor
std
or
inc
push
mov
jnp
inc
sti
and
inc
pop
adc
sbb
mov
jns
ffree
pop
dec
sbb
dec
xchg
mov
mov
fst
sbb
push
jg
mov
xor
or
sbb
enter
clc
lds
rcrl
sbb
ror
popa
lds
xchg
sub
pop
clc
add
push
ret
repz
mov
or
sbb
dec
jmp
aas
scas
mov
xchg
sbb
jecxz
lock
shl
jnp
inc
jge
fdivrs
cs
mov
fmuls
and
push
sub
lahf
clc
mov
sub
and
mov
inc
mov
mov
mov
mov
scas
das
add
stos
lods
mov
test
scas
out
add
repz
hlt
cmp
jno
mov
pop
sub
stc
nop
mov
fists
mov
mov
aas
rorl
xchg
jns
out
mov
pop
ret
shlb
inc
loopne
and
ficompl
jp
mov
test
pusha
add
aam
std
cmpsb
cmp
xlat
push
jmp
dec
jge
pop
movsl
mov
lahf
mov
imul
adc
cmpsl
cmp
cltd
mov
adc
mov
mov
mov
xor
push
sub
lods
insl
enter
mov
out
sbb
or
lods
mov
pop
addl
ss
push
lds
add
cmp
xor
movsb
data16
fcoml
hlt
mov
scas
cmp
adc
and
jle
data16
out
inc
loope
sbbl
pop
jmp
or
cmp
xchg
push
idivb
repnz
xchg
mov
sbb
lcall
in
or
or
adcb
shl
xchg
cmc
hlt
sub
lea
pop
jl
cmpsl
sbb
ja
leave
cmp
push
rcll
jb
mov
cli
xchg
push
or
daa
hlt
addr16
scas
pop
xlat
cmp
mov
out
lds
sub
insb
into
fidivrs
sarl
lret
and
out
imul
inc
adc
aas
dec
call
or
cmc
add
imul
test
int3
dec
pop
xchg
icebp
adc
les
jnp
pop
xor
push
sbb
xor
fucomp
add
cld
arpl
push
nop
ret
les
pop
insb
fbld
jp
mov
xchg
pop
push
add
and
or
mov
push
pusha
fmull
and
and
jae
cmp
popf
js
cmpsl
xor
ret
xchg
ds
push
jae
add
mov
xchg
or
jg
cmpsb
cmp
mov
cwtl
cmpsl
jp
mov
lret
mov
rclb
outsl
icebp
int3
mov
inc
adc
rcl
cmp
fwait
sub
or
insb
aam
pop
aaa
cmpsb
sbb
dec
in
adc
inc
dec
data16
push
and
outsl
add
lret
in
adcb
negb
adc
pop
xor
push
pop
imul
push
aad
mov
out
or
movsl
and
push
cmpsb
sbb
xchg
fwait
sbb
push
inc
js
push
jne
sub
nop
inc
mov
push
into
in
hlt
cmp
loopne
push
xor
mov
cmp
dec
dec
into
pop
aad
jle
out
gs
mov
sub
xchg
mov
dec
out
mov
aam
gs
sbb
pop
cs
pushl
insl
das
inc
lahf
ljmp
mov
sbb
gs
cmpsb
jns
fdivrs
test
or
inc
push
out
test
aaa
std
inc
imul
push
in
adc
jae
test
ja
aam
stos
jmp
and
jp
cwtl
jl
dec
jbe
adc
push
inc
and
cmpb
bound
dec
lret
out
cmpsl
adc
xchg
pop
jg
sub
mov
ljmp
jne
cmp
adc
shld
sub
pop
fdivrs
test
xchg
or
outsl
push
mov
clc
mov
repz
ja
sti
cmp
adc
js
in
cmpl
push
fimull
dec
mov
fildll
mov
aad
andb
idivl
inc
outsl
ds
cmp
xchg
loop
in
dec
add
xor
or
jno
test
movsb
fs
repz
stc
adc
out
adc
push
sbb
mov
leave
pusha
cmp
mov
inc
fidivs
popa
stos
inc
xchg
jno
jecxz
in
into
sub
loop
jnp
jle
in
scas
mov
call
mov
les
rcll
lret
in
aad
push
call
cmc
subb
popa
stos
push
sbb
je
cmp
bound
push
call
jnp
sub
popf
inc
mov
cmp
imul
push
enter
mov
mov
mov
aad
lods
inc
fdivr
pop
dec
scas
jbe
xchg
test
shrl
adc
xor
jmp
jbe
insb
js
dec
or
push
ds
repnz
movsb
ret
scas
ss
clc
inc
fisubrl
lret
jb
mov
aas
jae
mov
xchg
mov
popf
xor
cwtl
add
sub
mov
fisttpl
pusha
imul
cmpl
jg
sbb
aad
jnp
into
dec
out
pop
cmp
dec
test
push
sub
int
movsl
into
dec
js
int
jnp
ja
fldt
pop
xor
mov
imul
pop
adc
je
mov
out
xchg
test
cmp
push
cmp
test
aad
mov
push
test
shll
mov
push
into
rcrb
add
lds
in
jbe
push
cld
lcall
inc
dec
sbb
aas
xchg
daa
add
inc
in
insb
and
push
lods
leave
sahf
pop
mov
es
inc
out
fistl
cmpsl
aas
dec
pop
push
mov
add
or
pop
loope
mull
mov
jle
ljmp
jo
push
mov
mov
fbld
mov
iret
fs
or
sti
dec
adc
sub
dec
mov
push
xchg
xchg
sub
arpl
stos
repnz
and
bound
filds
pusha
xor
aas
adc
push
out
xor
ds
add
and
jle
jae
jle
mov
xor
push
cmp
fwait
jmp
push
and
popa
xor
js
popa
stos
dec
mov
or
push
pop
insl
mov
cmpsl
jo
sub
dec
cmp
das
pop
aaa
add
xchg
jb
out
mov
sbb
ffreep
in
dec
imul
push
scas
dec
pop
sub
pop
mov
cmpsl
cmp
jo
enter
lock
das
int
jle
push
sti
int3
jg
xchg
shrl
mov
push
lods
pop
add
jp
shrl
or
dec
fildl
pop
fisttpll
xlat
mov
jbe
xor
gs
jmp
rorb
pop
shlb
out
outsl
pusha
test
and
mov
mov
std
fs
int3
into
insb
into
or
scas
out
mov
stos
pop
ja
jo
add
aad
mov
pushf
mov
xor
aas
cld
push
mov
sbb
scas
xchg
loopne
les
xchg
mov
pop
pushf
stc
xchg
sub
add
lret
pop
cmp
or
cwtl
dec
stc
inc
ret
ret
cltd
push
lock
sbb
sti
push
pop
in
lock
xor
adc
icebp
jno
movsl
cmp
ja
sbb
adc
cli
xchg
and
out
js
ljmp
jno
in
call
icebp
mov
lret
push
jne
mov
xchg
and
cmpsb
daa
cmp
outsb
arpl
fwait
ja
adc
push
adc
loopne
inc
je
or
cmp
xor
mov
int3
and
sbb
rclb
leave
or
arpl
push
rol
push
daa
imul
add
sbb
push
push
icebp
xchg
repnz
leave
push
ja
push
jmp
test
cmpb
rcrb
dec
xlat
lret
sbb
push
es
mov
xor
popf
push
xchg
pop
sahf
dec
lret
out
ss
pop
push
aas
pop
mov
inc
add
cmp
loope
pop
adc
xchg
frstor
or
popa
sbb
or
icebp
mov
addr16
or
lret
popf
fdivrl
mov
incl
into
test
mov
pushf
pusha
and
mov
lret
cmp
rorb
rcrb
test
cmp
insl
loop
mov
and
ret
pop
leave
and
xchg
jle
and
mov
push
mov
push
out
outsb
mov
add
outsl
fmuls
or
jbe
sbb
jle
inc
add
xchg
mov
jge
arpl
imul
movsl
in
cmp
mov
dec
adcl
adc
adc
pop
mov
pop
icebp
xchg
leave
cmp
or
lcall
mov
lahf
push
sub
add
out
ja
ljmp
jno
aaa
mov
inc
mov
je
imul
push
inc
scas
push
cld
inc
ffreep
mov
or
in
out
sbb
testb
jl
mov
mov
dec
add
jmp
addb
inc
ficoms
lret
fnstsw
enter
out
pop
cmp
and
push
incb
cmp
loopne
cmp
mov
mov
xor
jl
sub
mov
je
cmp
jae
loop
sbb
pop
outsl
mov
loopne
imul
stos
inc
rep
push
mov
mov
outsl
cltd
dec
mov
pop
or
call
cmp
cmp
or
shlb
add
xchg
sub
jb
js
pushf
sub
xchg
push
jae
mov
add
stc
adc
mov
or
cmc
or
jo
lea
adc
stos
xchg
xchg
in
push
mov
insb
aam
push
outsb
movsl
xlat
repz
mov
push
adc
dec
enter
jecxz
arpl
fucomip
test
mov
jg
xchg
pop
mov
jo
push
mov
stos
and
and
mov
outsb
out
icebp
lahf
push
loopne
das
and
leave
aas
repnz
gs
cmp
xor
sub
iret
dec
shlb
jp
jns
iret
popa
or
mov
mov
sarb
outsl
fsubr
mov
push
rorl
imul
mov
ja
pop
in
rolb
lods
dec
mov
in
lds
in
test
dec
cmp
cmp
sbb
dec
and
cld
push
xor
cltd
lea
mov
add
mov
imul
aas
js
dec
insb
push
lods
insl
adc
add
xor
xchg
inc
pop
dec
mov
mov
push
inc
lahf
decb
adc
test
or
aaa
dec
add
add
and
movsb
cmpb
xor
push
push
xchg
xlat
pop
int3
fcompl
dec
inc
pop
add
and
pop
cli
aas
dec
fildll
sub
add
xchg
add
out
add
sahf
xor
loope
inc
pop
pop
repnz
clc
fcoml
or
adc
loopne
popa
lret
std
into
orb
adc
dec
adcl
cltd
clc
pop
cmp
outsl
std
jno
mov
add
push
repnz
imul
or
shrb
xor
add
movl
fs
xchg
jo
dec
int
sub
mov
dec
cwtl
imul
stc
adc
rcrb
out
pop
jl
hlt
lret
pop
sub
push
in
jnp
pop
repnz
lret
sbb
sbb
adc
adc
push
cli
mov
mov
xchg
or
roll
pusha
stos
pushf
aam
aad
cmp
push
pop
mov
sub
and
jno
int3
lret
push
add
mov
stos
orb
pop
mov
scas
bound
aam
xor
cmpsl
ss
add
or
pusha
into
or
int3
jo
iret
rorl
jnp
adc
insl
aad
sahf
add
iret
xlat
pop
hlt
push
or
nop
cmp
add
daa
add
mov
gs
int3
xchg
adc
xchg
or
movsl
nop
add
jmp
fadd
xchg
xor
andb
fsubs
push
pop
dec
aad
test
sub
jnp
xchg
lods
daa
hlt
mov
pushf
in
dec
stc
adc
jecxz
sub
dec
mov
push
dec
out
int
repz
adc
xchg
xchg
pop
dec
fcmovne
push
sbb
fisubl
inc
leave
loopne
xchg
lods
dec
data16
dec
inc
pusha
dec
clc
lods
ja
int3
mov
scas
in
movsb
les
scas
jb
fisubs
je
mov
lea
xlat
mov
sub
loopne
inc
pop
add
and
jnp
pusha
lods
cmp
repz
and
and
out
sub
pop
add
and
xlat
stc
pusha
enter
subb
jae
add
push
add
fidivs
ss
xchg
out
inc
cmp
xor
mov
xchg
adc
adc
sbb
inc
sub
pop
lods
jmp
sti
xor
mov
pop
mov
inc
ljmp
fistpll
xchg
mov
int3
mov
xchg
dec
ffree
jb
movsl
addr16
add
lods
lods
mov
pop
es
test
inc
rolb
ljmp
cmp
mulb
shl
cmp
data16
cmc
mov
pop
aad
ljmp
pop
mov
pop
xchg
mov
lock
lcall
mov
push
pmulhuw
jb
inc
sub
roll
push
lahf
inc
int3
fdivrs
pop
dec
pusha
push
sbb
out
adc
xchg
push
test
jns
fiadds
push
jne
dec
xchg
shll
sub
jb
ljmp
repnz
cmp
fwait
insb
lret
sub
xor
pusha
shlb
or
insl
cmp
subb
mov
pop
rorb
or
cmp
test
lahf
xchg
jae
xchg
mov
dec
and
test
sbb
mov
addb
sbb
jo
adc
jae
stos
mov
rcl
daa
pop
xchg
dec
jns,pt
push
aas
push
repz
push
mov
xor
outsb
xchg
int3
push
in
stc
and
dec
jbe
lret
dec
and
clc
mov
or
repz
push
jle
xchg
inc
and
push
in
jecxz
cld
nop
push
xor
mov
and
mov
add
test
popa
jecxz
jb
cltd
mov
jg
mov
aaa
out
test
popf
mov
mov
pusha
out
ljmp
and
insb
xorl
and
push
dec
fnstsw
scas
mov
into
mov
cli
and
decl
cmc
xchg
cmp
fsts
stc
movsb
repnz
daa
int3
jecxz
xchg
jp
add
inc
add
fnsave
adc
lcall
mov
cmpsb
clc
inc
jae
ljmp
jno
repnz
mov
int3
leave
xor
push
stos
push
jo
mov
ds
inc
sbb
call
rol
or
lods
cmp
lcall
mov
testl
mov
or
inc
fdivrs
mov
pop
xchg
adc
sub
sbb
xor
xchg
xor
xlat
cmp
mov
movsl
push
jp
add
jno
mov
add
lds
add
xor
push
jb
add
jl
jbe
movsb
dec
xchg
fidivs
icebp
hlt
and
les
or
or
mov
jecxz
test
imul
int3
sub
ficoms
sahf
xor
out
cmp
sbb
loop
mov
movsl
inc
subl
ret
cmp
xchg
std
cwtl
pop
lods
dec
inc
add
mov
push
push
sub
jb
imul
lock
js
arpl
lds
test
jge
test
ret
ss
stc
jnp
sub
xor
test
scas
or
shlb
int3
imul
mov
jg
imul
movsl
pop
dec
daa
xchg
sub
jbe
xor
sbb
or
shll
sarb
test
sahf
fadds
sahf
ja
or
jb
mov
push
dec
repz
negl
push
add
push
popf
lret
pop
int
ret
out
jae
pop
adc
sub
pop
rolb
add
aas
or
test
jge
shlb
lock
lret
pop
adc
fs
or
push
in
stos
popa
pop
nop
addr16
sahf
inc
loope
call
jmp
mov
js
adc
inc
testl
dec
xor
pop
push
in
mov
movsl
push
stos
inc
inc
out
xchg
xchg
ja
movsl
sub
insb
scas
xchg
cltd
sbb
cmpsl
fs
mov
bound
dec
xchg
or
mov
addr16
or
test
popa
jmp
dec
shlb
xchg
insb
sbb
pop
push
mov
sti
lea
mov
orl
cmp
pop
mov
pop
cmp
movsl
add
das
pop
add
inc
adc
sbb
push
adc
fdivp
xor
jmp
das
xor
js
lahf
sub
leave
pop
fistpll
enter
mov
mov
sbb
sub
mov
lret
mov
cmp
pop
aam
sbb
sub
mov
jns
cwtl
decl
sbb
fucomip
adc
push
adc
mov
dec
loop
add
mov
outsb
pop
mov
and
and
xor
jno
dec
pop
add
xor
xchg
add
jle
ret
jp
shll
adc
push
sti
pop
add
mov
in
int3
xchg
mov
sti
and
popf
mov
cmp
lahf
mov
xchg
repz
test
push
mov
mov
add
incl
push
jg
sbb
cmp
cmp
jno
test
and
mov
loop
xchg
push
inc
out
lock
inc
fildl
jb
mov
dec
mov
push
push
dec
jl
mov
push
xchg
fiadds
out
fstpt
push
sub
stos
xchg
lods
pop
sub
jmp
dec
mov
lahf
out
shlb
push
call
sahf
mov
in
push
aas
fwait
out
clc
or
mov
iret
or
shrl
loope
inc
xchg
call
loope
jmp
cli
out
ss
sub
mov
xor
jge
aas
adc
push
add
mov
pop
hlt
mov
xor
stos
rcll
xor
clc
fdivrs
cli
sbb
pop
dec
sbb
xorb
lret
mov
sub
test
mov
out
adc
test
mov
xchg
mov
mov
aam
lds
push
subb
pop
bnd
sbb
or
xchg
ret
fisttps
mov
xchg
pop
dec
pop
mov
sbb
pushf
stc
idivb
lea
hlt
into
scas
mov
xor
jl
xor
scas
push
push
adc
leave
data16
or
test
inc
xchg
inc
or
inc
std
and
pop
ljmp
out
test
cmpsl
lcall
or
test
inc
sub
lcall
lock
sub
clc
jle
lcall
push
jbe
rcrb
inc
inc
sahf
pop
inc
stc
cmpb
in
idivb
adc
jbe
and
lahf
mov
pop
cvtps2pi
xchg
mov
mov
out
add
xor
pushaw
stc
pop
sbb
in
pop
shrb
push
dec
mov
cmp
orl
dec
dec
fildll
push
popf
pop
int3
cmp
pop
insb
jmp
jmp
dec
dec
aaa
pop
clc
ds
call
or
insb
movsb
or
pop
clc
and
inc
sbb
sub
rolb
cltd
mov
in
lods
je
loopne
jb
roll
leave
jo
and
out
adc
xchg
sbb
xchg
adc
add
outsl
cmp
shll
imul
subb
scas
test
clc
mov
jno
scas
repnz
in
sqrtps
lret
out
xchg
sub
push
stos
hlt
mov
mov
jne
sbb
sbb
out
dec
cmc
clc
adc
mov
xchg
pop
mov
sub
pop
shrl
jl
push
icebp
and
push
pop
repz
adc
xor
sbb
sbb
pusha
mov
lea
in
inc
repz
jg
dec
fcoms
push
fldcw
or
pop
xor
test
cmp
dec
sbb
aad
cltd
or
push
mov
cmp
fdiv
dec
push
mov
insl
shrb
aaa
mov
lcall
sbbl
push
lahf
test
pop
movsb
cmp
mov
roll
lcall
in
mov
lret
sti
jns
cli
and
lds
iret
jns
clc
out
pop
lock
fbstp
mov
cli
cmc
jecxz
mov
cltd
xor
lret
loope
mov
in
scas
in
insl
add
or
xchg
inc
mov
xchg
movsl
in
push
jnp
std
movsb
lods
push
dec
add
pop
cmp
mov
lret
inc
enter
xchg
insb
sub
js
fdivl
fisttpl
orl
sub
arpl
jnp
cli
cmpsl
sti
push
sub
add
and
xor
jp
fsubrl
and
or
fs
jp
adc
stos
jmp
decb
sub
movsb
and
and
out
dec
gs
inc
dec
pop
jnp
xsha1
cmpsb
dec
fwait
jge
adc
lods
inc
or
adc
sub
mov
dec
fucom
xchg
lods
dec
jne
mov
fiadds
adc
mov
lcall
pop
cmp
and
lret
mov
sub
push
decl
es
jge
add
fs
test
dec
iret
cmp
push
mov
test
out
lcall
xchg
in
cwtl
cmp
jl
pop
das
enter
out
sub
xor
shl
xor
mov
or
ljmp
adc
clc
packssdw
bound
cmpsb
jbe
add
jne
gs
xchg
xlat
xchg
xor
push
in
xchg
out
shrb
mov
jl
ret
test
add
lods
cld
adc
push
jbe
inc
stos
outsl
push
frstor
mov
popa
std
into
sbb
aad
sub
add
or
test
ret
cwtl
pop
push
xchg
push
mov
fidivl
lret
mov
pusha
subl
scas
and
testb
push
shll
aam
pop
mov
cmp
dec
sbbl
add
mov
pcmpgtd
repz
std
push
and
adcb
stos
sbb
mov
mov
in
pop
dec
in
insb
mov
lock
testb
cmp
xchg
test
pop
jae
int3
pop
cmp
mov
adc
or
sbb
jae
jno
stc
pop
icebp
in
cmpsb
inc
ficoml
adc
aas
mov
dec
pop
nop
mov
add
insl
roll
or
cmp
inc
rcrb
push
out
jl
mov
xorb
pop
mov
mov
sub
adc
cwtl
subl
rolb
xor
xor
push
mov
aam
push
ret
mov
cmc
jp
jmp
and
rcrb
mov
popa
dec
jmp
dec
dec
sbb
xchg
inc
inc
dec
sbb
je
push
xorl
sbb
std
push
xchg
inc
out
mov
stos
mov
mov
mov
or
dec
dec
js
cmp
push
jae
cmp
out
rcrl
mov
inc
hlt
dec
popf
pop
cmc
sub
inc
incb
cwtl
jecxz
loop
lcall
xchg
shrb
ret
filds
mov
rorb
roll
push
ss
mov
push
imul
xchg
addl
dec
cwtl
rcr
addr16
cltd
jmp
call
mov
xrelease
das
subb
or
imul
jno
dec
daa
mov
imul
scas
sbb
pop
repz
jbe
ja
or
das
xor
push
push
xchg
sub
jo
leave
and
mov
ret
push
out
rcrb
adcl
and
xor
push
outsb
xor
or
scas
call
data16
jbe
in
and
mov
ret
push
pop
or
ljmp
and
sbb
das
popa
cmp
rorb
leave
inc
movl
push
cwtl
cli
daa
lret
fdivl
mov
dec
vcvtsd2ss
inc
nop
cmp
filds
sbb
xor
gs
scas
out
test
outsl
gs
pop
cmp
pop
adc
sahf
mov
in
inc
call
mov
adc
jl
sub
sbb
out
cmpsl
dec
mov
push
in
decb
ljmp
lcall
xchg
jb
fsubrl
mov
cmp
xlat
stos
add
and
push
xor
push
sbb
rclb
cmp
mov
pop
dec
stc
fisttpl
shr
sub
push
sbb
push
movsb
add
daa
mov
mov
rorb
xchg
jno
or
mov
mov
sbb
nop
std
and
stos
shlb
outsl
sbb
mov
xor
hlt
lret
and
fwait
shrl
jbe
mov
xor
xor
enter
xchg
mov
lret
jmp
rorb
hlt
xchg
and
cmpsl
data16
xor
jge
call
xchg
out
in
adc
repnz
mov
xlat
pop
lcall
mov
lea
mov
sbb
imul
addr16
jae
cli
pop
addr16
decl
sub
popf
fsubrl
mov
lret
jae
dec
aad
pop
in
add
stos
cs
xchg
jae
push
sbbb
sub
pop
inc
aas
ja
push
lods
test
stos
loope
sbb
test
sub
sar
or
push
or
popa
cmp
cli
xor
outsl
cmpsl
movsb
dec
adc
and
in
mov
out
insb
mov
adc
nop
ret
mov
insb
scas
add
gs
stos
adc
lods
xchg
stos
setle
adc
enter
vmovq
inc
repz
fisubrl
inc
fcoml
jecxz
stc
enter
mov
notb
int
pop
ds
pop
sub
adc
inc
pop
mov
push
mov
aam
stos
enter
test
and
call
mov
rcl
testb
fisttpll
loopne
add
add
mov
push
test
mov
pushf
es
icebp
call
inc
fmuls
add
loopne
jns
mov
imulb
stc
fsubl
testb
add
les
imul
iret
out
or
data16
loope
inc
xor
or
inc
and
mov
scas
data16
sub
pop
scas
add
es
push
dec
loopne
rorb
fwait
pop
inc
fnstcw
aaa
pop
cmp
sahf
testl
xor
push
out
je
or
sti
mov
and
nop
daa
pop
jp
jg
scas
cmp
pop
testl
mov
lahf
aaa
xchg
loopne
and
xchg
add
cmp
xor
xchg
insl
clc
fidivs
subb
jmp
mov
clc
add
mov
imulb
mov
inc
test
mov
rolb
pop
nop
leave
into
mov
les
lahf
outsb
and
popa
insb
outsl
subb
lret
push
scas
inc
addr16
scas
fsubs
fidivs
pop
hlt
dec
into
fbld
push
mov
je
fimuls
in
push
shlb
movsl
and
dec
or
in
jns
jno
out
xchg
xor
jae
popf
and
mov
insl
je
es
mov
pushf
cmp
out
adc
aam
in
xchg
cld
cmp
pop
push
nop
fsts
mov
cmc
mov
ds
xor
dec
and
out
inc
lods
xchg
and
adc
pushf
fistl
mov
flds
push
aam
call
adc
lcall
and
insb
mov
add
mov
adc
inc
cmpsb
aaa
out
out
js
mov
push
xchg
or
cli
cwtl
jle
ret
es
data16
testb
cmpsl
negb
cwtl
cltd
outsl
sub
jge
repz
inc
sbb
jno
sub
scas
pop
and
jmp
test
insb
inc
pop
mov
adc
gs
push
push
arpl
mov
pop
fwait
cli
ret
xchg
push
xor
push
pop
lcall
out
testl
sbb
test
cmp
aaa
ljmp
xor
cmp
imul
pop
xor
lock
sub
dec
fildll
or
push
jg
popa
xor
mov
call
xchg
orb
cli
mov
and
lods
call
sahf
mov
dec
and
ja
stos
mov
ljmp
repnz
sub
sub
xchg
pop
sub
aam
jae
mov
jbe
xlat
xchg
sbb
test
lds
mov
sahf
xchg
add
push
pop
xchg
mov
out
inc
inc
pop
cwtl
and
cltd
or
lahf
cmp
fistpl
mov
daa
aad
in
dec
mov
shll
sbb
push
test
pop
xchg
or
push
pushf
mov
andl
adc
dec
push
cmpsl
xor
fcmovnb
cmp
aam
daa
in
jbe
or
in
pop
ds
push
xchg
add
mov
fldl2e
lods
push
sub
cmpsl
mov
iret
push
sbb
mov
add
mov
jmp
fwait
pop
xor
inc
dec
xchg
xlat
xor
adc
aaa
sbb
xchg
push
das
mov
mov
into
xor
push
mov
iret
popa
rcll
movsl
mov
mov
mov
sbb
in
lods
sbb
stc
mov
in
mov
sub
pop
push
nop
add
fsts
lcall
out
dec
mov
mov
out
lods
cmp
aam
cli
fcoms
push
fwait
les
jle
pop
leave
rcrb
mov
or
or
fldcw
loope
or
xor
inc
sub
imul
call
xor
sbb
insl
or
imul
xchg
jo
add
xor
push
sub
mov
rol
movsb
cwtl
inc
dec
int3
push
push
addb
or
lds
or
mov
inc
outsl
outsl
fdivp
xchg
nop
leave
jbe
jns
dec
jno
std
dec
dec
adc
sub
xchg
das
cwtl
pop
repz
xor
and
add
pop
jbe
stos
adc
or
mov
or
pop
scas
cmpsl
xor
or
inc
fadds
insb
popf
jb
jo
xchg
int
jmp
sbb
jge
gs
sbb
fists
push
sbb
ja
cmpsb
inc
pop
fwait
and
ret
orl
inc
sbb
add
bswap
lcall
daa
cmp
xchg
scas
lock
lcall
sub
out
aas
repz
dec
cmp
int
xchg
inc
ljmp
imulb
inc
mov
adc
shll
add
pop
cmp
inc
add
sbb
sub
addr16
jns
add
cltd
cs
mov
inc
cltd
das
je
sub
xchg
mov
inc
mov
or
jnp
aas
mov
add
lcall
fsubrs
push
mov
add
sbb
pop
rorb
cld
adc
and
pop
xchg
insb
pop
sahf
out
or
test
mov
sbb
pusha
shl
testl
out
lret
aam
xlat
or
mov
rol
push
clc
icebp
cmpsl
sbb
or
push
stos
ss
js
xchg
das
je
add
nop
ror
bound
popf
sti
loop
sahf
mov
mov
aad
hlt
ficompl
mov
and
sbb
mov
or
sbb
icebp
push
je
out
sarl
loope
jae
and
loop
enter
shrb
push
in
push
popa
push
sub
insl
sbb
scas
sub
mov
xor
or
inc
add
mulb
cmpsb
inc
jg
mov
fildl
mov
arpl
adc
sub
jne
pop
lods
add
or
pop
repz
data16
and
dec
repnz
gs
mov
jecxz
xor
mov
pop
jmp
lock
inc
cmc
mov
add
xchg
sub
je
xor
cmp
pushf
in
repnz
jecxz
mov
lahf
pop
pop
addr16
push
inc
pop
cmpsl
mov
in
int3
sub
cmp
pop
add
insb
push
mov
xor
inc
pop
fcompl
add
mov
adc
cmp
daa
fldenv
jnp
push
test
adc
ret
rcrl
out
pop
jae
pop
movsl
inc
pop
outsl
xchg
xchg
add
pop
dec
add
pop
orl
jae
add
jne
pop
and
jge
xchg
popf
jno
xchg
test
ret
enter
mov
jno
fwait
and
push
cs
push
daa
orl
scas
or
mov
mov
mov
aam
xor
mov
outsl
push
add
sbb
aas
adc
mov
push
popl
test
xor
push
out
add
daa
xor
movsl
inc
inc
mov
test
lret
jmp
pop
adc
lahf
out
sbb
divb
sbb
xchg
ret
iret
inc
cltd
sbb
pop
dec
aaa
mov
jne
xchg
mov
out
push
test
stc
mov
les
mov
xchg
jb
sub
nop
xchg
pop
es
je
sub
insl
cmpb
int3
add
dec
fcoms
cmc
cmpsb
pushf
negb
cmp
scas
sti
jne
dec
and
jns,pn
mov
loope
jge
jns
pushw
lods
jae
push
movsl
and
int3
mov
out
les
mov
gs
js
inc
mov
adcb
rorl
movsb
add
pop
or
dec
pusha
inc
jns
subl
pop
cld
in
add
dec
std
sti
dec
stos
push
cmp
pcmpgtd
outsb
adc
push
or
pushf
repnz
xchg
lret
call
mov
orb
fldt
adc
jae
push
xor
cmpsl
stc
adc
leave
pop
cmp
or
dec
jnp
xor
sbbb
inc
in
pusha
inc
mov
ljmp
add
and
nop
imul
xchg
movsb
test
ficoml
jbe
sbb
and
xor
std
ds
js
negb
xchg
inc
ljmp
scas
sub
popa
subb
aaa
jle
jo
fcompl
and
inc
push
inc
ficompl
fdivl
or
sbb
and
adc
insl
cs
dec
and
inc
testb
jmp
lahf
js
inc
cli
xchg
jbe
jmp
jge
fnstenv
shlb
jo
lret
lret
xor
ja
inc
push
rcrl
sub
aad
dec
xchg
dec
adc
adc
sti
xchg
jnp
cmc
mov
fstpl
mov
and
test
scas
push
aas
and
shlb
test
movzbl
cmp
test
jne
iret
mov
mov
inc
add
inc
fsubs
xchg
ficoml
int
sbb
push
shrb
sbb
mov
mov
xor
lret
out
fisubl
cmp
leave
mov
jne
in
je
dec
or
xor
mov
andb
jbe
and
scas
adc
cmc
dec
dec
hlt
jno
arpl
in
push
inc
and
xlat
dec
mov
xchg
stos
out
push
mov
dec
sbb
in
ja
inc
pop
xchg
and
dec
in
mov
out
in
xchg
in
mov
not
jno
or
cmp
in
movsl
dec
lret
dec
push
notb
sar
jne
mov
call
out
xor
pop
jae
movsb
and
push
and
xor
stos
repz
mov
jbe
and
sbb
add
xchg
icebp
mov
xor
insl
les
das
mov
or
outsb
daa
insb
mov
jbe
mov
roll
adc
test
xchg
in
leave
sbb
negl
cwtl
fsubs
mov
or
sahf
loopne
inc
loopne
dec
out
jl
out
cmpsl
fwait
lods
cltd
sub
mov
das
add
int3
fs
mov
sarb
push
mov
mov
outsl
push
pop
jecxz
adc
scas
inc
mov
pop
pop
pop
in
adc
cmpsl
aas
stc
or
faddl
fsubs
adc
loop
jle
ljmp
dec
jp
mov
xorb
adcl
addb
loope
jle
mov
scas
inc
pop
xchg
das
je
fdiv
push
test
in
mov
adc
pop
repz
mov
test
sbb
ret
mov
cli
jecxz
jp
xchg
xor
cmp
adc
adc
rolb
and
dec
aad
pop
inc
in
aaa
pop
inc
pop
and
pop
add
pop
stos
idiv
jae
inc
clc
fmulp
notb
stc
lods
inc
mov
push
scas
into
add
std
add
adc
jp
adc
cmpsb
lahf
testl
das
fcoml
clc
inc
call
adc
dec
out
fcmove
je
loop
lods
or
repnz
stos
sub
ja
test
cwtl
dec
or
jge
mov
or
cmp
cmc
or
rolb
leave
mov
sbbb
mov
and
cmc
xchg
insb
cmp
sub
cmpsb
out
sub
insl
or
xchg
das
sbb
dec
rcrl
cmp
sub
mov
cmpb
dec
cmp
hlt
mov
daa
jnp
ljmp
pushf
repnz
fmull
sub
jns
std
ret
fldenv
xchg
inc
pop
lock
lret
add
mov
mov
pop
mov
pop
adc
dec
xor
clc
pop
mov
or
jnp
mov
jnp
mov
mov
ss
fidivl
mov
fs
jl
add
push
mov
test
mov
cmp
or
rolb
cmc
fstpl
dec
push
add
jb
testl
jmp
ds
push
and
out
fnsave
mov
sbbb
cmp
cmp
das
jno
ror
push
mov
adcb
inc
push
mov
outsb
or
lods
hlt
sbb
stos
shlb
mov
pop
fs
nop
enter
cmp
xor
sbb
push
mov
mov
mov
push
aam
xchg
cmpsl
xor
mov
fs
repnz
ret
loopne
cld
jo
or
adc
push
out
fmulp
adc
jne
mov
fldcw
adc
fidivs
in
incl
cmpsb
jns
mov
cli
stos
xlat
imul
fbld
into
cmp
pop
gs
sbb
add
jp
jno
js
adc
dec
dec
pop
adc
push
arpl
imul
cwtl
test
cmp
inc
mov
sbbl
ja
cmp
xorl
jg
push
adc
jl
and
sti
insb
add
dec
sub
lcall
hlt
mov
cs
sub
xchg
ljmp
push
jns
jle
lds
jnp
and
fsubrs
and
pop
lock
mov
cli
ja
sbb
pop
icebp
lahf
mov
ja
mov
xchg
sti
jp
jmp
sahf
xor
lods
mov
mov
hlt
das
mov
lahf
sub
fwait
lea
add
testl
adc
adc
lahf
lods
pop
cmc
and
fsubrs
adc
adc
mov
ja
jp
and
xchg
xchg
scas
cmp
push
fwait
aas
or
jae
jl
pop
hlt
xchg
out
xchg
outsb
add
mov
mov
or
sbb
add
and
filds
and
out
mov
scas
inc
mov
lret
sbb
sahf
mov
mov
add
mov
add
shll
roll
sbb
mov
bound
pop
testl
dec
and
pop
mov
adc
add
loope
aam
incl
push
aas
xchg
scas
ret
lret
sbb
rorl
mov
pushf
dec
and
leave
jbe
mov
fcoms
mov
in
mov
icebp
aaa
cmp
jo
fnstsw
adcb
inc
popa
xchg
out
imul
insb
mov
jl
mov
xchg
jp
js
lcall
sbb
mov
cmpb
or
dec
mov
jecxz
hlt
into
mov
sub
push
sti
cmp
ja
nop
sub
in
lret
jle
xchg
cmp
lahf
andb
dec
dec
cli
xchg
fst
scas
hlt
pop
or
sbb
or
mov
push
xor
lock
mov
aaa
fcmovb
jo
and
fs
dec
push
rcl
out
adc
sub
xor
pop
lret
loope
out
scas
add
mov
in
mov
add
mov
sbbl
rcrl
scas
fdivs
push
xorl
sub
test
xchg
sti
rcl
adc
push
dec
xchg
bound
xchg
popf
mov
or
add
cmpsb
push
aam
jle
xchg
sbbb
jl
and
jg
sbb
sti
pop
jo
add
mov
scas
pop
xor
push
mov
mov
loop
push
lods
cltd
inc
xchg
cs
daa
mov
fldenv
loope
xchg
inc
cli
xchg
cmp
fldenv
push
jmp
dec
hlt
cmp
inc
or
cmc
dec
test
lods
add
sub
pop
arpl
pushf
pop
hlt
adc
fidivs
in
lcall
mov
dec
sti
or
push
hlt
into
or
rcl
call
cltd
xor
imul
xor
push
andb
xchg
jmp
inc
lods
shr
ljmp
sbb
cmpsl
out
aad
pusha
iret
xchg
mov
adc
add
jno
push
rcrl
insl
jge
dec
pop
sarl
loopne
inc
fists
stos
mov
repnz
xchg
cmc
sub
xlat
xlat
dec
leave
cs
popa
scas
dec
movsb
loop
cltd
mov
xlat
das
addr16
pushf
aaa
mov
cmpsl
lods
add
cmc
sbb
push
fnstsw
stos
xchg
gs
xchg
pop
pop
rolb
cltd
test
test
lods
mov
rcll
jg
push
jecxz
mov
out
xor
sti
inc
sbb
add
in
lds
xor
lea
je
dec
roll
lcall
jmp
jb
icebp
cwtl
adcl
jns
mov
fstl
out
popf
dec
aam
dec
in
mov
push
fs
adc
and
and
inc
jp
sub
pop
ss
jl
aam
clc
cmp
mov
ljmp
add
fadds
sti
jne
cmp
add
jae
pop
jns
movsb
add
outsl
mov
jg
popa
stos
inc
ljmp
shlb
or
rcrl
mov
pop
sbb
mov
jecxz
rol
inc
addb
xorl
outsl
stos
mov
leave
add
push
cmp
add
lret
fisttps
pushf
cli
xor
insb
lcall
mov
pop
ljmp
push
fwait
scas
sub
std
dec
hlt
rcrb
daa
fs
je
xchg
aad
pop
cli
xchg
clc
loope
repz
fincstp
stc
cmpsl
mov
fstps
fbstp
jns
fldl2e
fscale
lods
inc
adcb
mov
cmp
cmpsl
add
aad
dec
mov
inc
lret
push
adc
inc
movb
fildll
or
repz
mov
sbb
or
jle
pop
subb
add
cli
push
sbb
dec
in
add
loope
and
jne
ljmp
loop
pop
enter
mov
mov
mov
add
dec
incl
ja
aad
mov
sub
mov
out
cmp
mov
lock
pusha
out
shl
scas
lea
frstor
das
sub
test
insb
shlb
insl
mov
push
jmp
and
fnstenv
xchg
insl
sbb
sub
inc
leave
hlt
xor
jo
mov
int
jne
xlat
das
test
flds
and
jo
or
fnsave
sti
pop
xor
bound
pop
sbb
jl
pop
cvtpi2ps
and
xchg
push
int
cmp
cmp
pop
add
std
inc
lcall
push
insl
out
mov
add
int
fs
jge
mov
loop
push
xchg
adc
dec
or
inc
fs
mov
xchg
mov
das
sbb
decb
stc
in
popf
lcall
jns
int
add
mov
cmp
dec
mov
pop
icebp
sbb
iret
fs
outsb
mov
push
rclb
and
ja
ds
or
pop
jg
push
or
mov
mov
lcall
inc
fdivl
shlb
adc
mov
ja
insb
js
mov
mov
sarb
lock
and
dec
jl
xor
repz
fwait
jmp
shl
in
popf
jmp
or
js
push
mov
mov
cld
imul
loopne
les
cmp
dec
xor
ret
adc
add
sub
aam
notl
mov
push
lcall
lock
jge
cmp
adcl
js
inc
add
sbb
ljmp
xor
lods
pop
xor
mov
sbbb
imul
mov
scas
and
xor
ror
outsl
popa
nop
xor
add
lret
pop
ret
cwtl
push
mov
in
mov
sbb
add
mov
pop
fxch
int3
pop
and
dec
push
jg
pusha
outsb
push
stos
push
adc
push
xor
call
ss
lods
or
fisubrs
cli
test
leave
call
jo
add
sbb
mov
enter
fldpi
daa
push
test
inc
pop
xor
mov
adc
popa
loop
lock
jne
jno
insl
jae
and
jg
and
test
clc
push
pop
aad
mov
int
test
movsl
in
rorl
int3
and
inc
bound
mov
adc
inc
dec
dec
pop
cltd
push
dec
push
mov
sub
dec
mov
push
repz
cld
xor
ret
jle
xor
leave
cld
jl
jo
jne
xor
fcompl
and
inc
or
jb
pop
mov
ljmp
call
pushf
fistpl
push
adc
jae
mov
sub
je
aam
les
xchg
out
jo
xchg
jb
int3
xchg
mov
mov
jae
cs
outsb
xchg
in
outsl
xchg
mov
mov
cmp
test
dec
adc
jmp
xor
sbb
jnp
arpl
divb
jecxz
push
sbb
aam
mov
sub
ret
adc
mov
jge
add
aaa
int
mov
push
jbe
pushf
testl
jbe
xor
ss
lret
subl
popa
cmpsb
repnz
movb
shrl
or
sub
sub
push
dec
shrl
fdivs
in
mov
bound
jnp
je
out
clc
jge
cmp
aaa
dec
xor
inc
fstpt
xlat
lods
mov
sub
mov
in
sahf
cmp
inc
or
mov
sti
sub
mov
cmp
pop
push
sub
mov
adc
jno
dec
push
ss
dec
divb
stos
jecxz
cmpsb
mov
add
sti
aaa
ds
dec
pushf
std
cmp
xor
push
add
inc
xchg
cld
pop
popf
stos
or
push
repnz
fs
push
sub
sahf
sti
data16
xor
or
fisubrl
mov
jmp
adc
shlb
lret
outsl
stc
add
push
sbb
xor
lods
gs
idivl
in
fwait
sub
ret
mov
out
in
test
cs
es
mov
stos
lods
inc
ds
addr16
jecxz
add
xor
imul
mov
sbbb
out
cld
cmp
dec
sub
stc
out
das
add
lods
lods
inc
jg
mov
jne
sub
dec
push
loopne
adc
pop
mov
jae
cs
pusha
test
bound
nop
pop
dec
roll
fsubl
add
es
push
shrb
jle
mov
aad
xchg
dec
ss
outsl
xchg
sub
add
sub
jbe
push
jl
jo
jecxz
xchg
inc
mov
inc
pop
sbb
call
jno
cmpsb
mov
adc
movl
movsb
lret
cld
lds
lea
pop
repnz
adc
pop
int
jns
pop
das
aaa
stos
test
inc
aas
sub
inc
mov
inc
adc
dec
dec
xor
inc
hlt
cmp
jns
aas
lea
aaa
add
out
adc
test
sub
mov
fsts
les
scas
loop
adc
pop
mov
and
out
jbe
push
mov
adcb
pusha
es
add
inc
pop
xchg
xor
and
fisttpl
mov
cld
aas
popf
mov
fistpl
aad
lret
xchg
push
inc
outsl
jmp
mov
enter
mov
mov
jl
sub
adcl
lods
loope
in
pusha
xchg
sub
and
mov
push
push
pushf
mov
aad
divl
sbb
xchg
mov
mov
jg
xor
loop
mov
sbb
jg
add
popf
xor
and
sbb
lret
or
push
fwait
jbe
mov
mov
fnstenv
fstps
mov
jbe
adc
into
cltd
sub
xor
xor
sub
popf
pop
adc
cmp
mov
jne
popf
xchg
nop
and
push
cmpsl
push
out
bound
push
ljmp
jno
mov
iret
shl
add
xchg
inc
add
fistpll
or
or
dec
pop
xchg
js
jnp
mov
stc
mov
cli
inc
loopne
js
gs
cmp
test
lcall
push
sub
adc
cmpsb
ficomps
ror
dec
mov
mov
int3
jg
mov
lock
inc
std
push
stc
out
inc
scas
lret
inc
sbb
pop
inc
test
shr
fistps
mov
mov
sbb
aas
sub
adc
inc
mov
cmp
insb
push
sub
dec
cmp
adc
int3
jmp
sub
jnp
push
jmp
add
or
pop
mov
xlat
inc
je
cmp
xchg
inc
adc
cmp
imul
xchg
out
dec
dec
ja
inc
jnp
shr
and
pop
aam
cmpsl
invd
out
subl
stc
gs
adc
dec
fldt
jbe
sub
shlb
mov
cmp
mov
ja
jl
push
sub
add
mov
lods
aas
popa
loopne
cmp
sub
push
xor
iret
or
mov
inc
inc
and
fdivl
out
subl
xchg
aam
jns
aas
mov
xchg
xchg
shlb
dec
xor
pop
ja
ficoms
sub
shll
lods
jmp
fists
mov
into
lock
inc
repz
pop
pop
leave
insb
inc
jg
sub
mov
mov
testl
out
lcall
pop
loop
or
les
pusha
clc
fs
cmp
cmp
out
js
dec
orb
jbe
popf
stc
subl
pop
xor
push
inc
inc
add
ja
movsb
or
pop
test
sub
dec
rclb
cltd
adc
aaa
pusha
aaa
in
sbb
sbb
ss
sub
sub
fs
dec
xchg
jl
enter
sbb
inc
movsb
mulb
pop
xchg
pop
xor
mov
out
or
xchg
outsb
out
sbb
cld
inc
mov
mov
sbb
imul
scas
ljmp
pushf
enter
mov
imul
pop
xchg
push
push
and
cmp
xor
pop
pop
notb
mov
and
adc
ljmp
mov
mov
push
fwait
and
mov
pushf
aas
stos
jmp
cmp
push
mov
mov
mov
jmp
dec
add
xchg
enter
aad
inc
and
sahf
lods
cs
jecxz
leave
arpl
adc
dec
xchg
jp
dec
pop
sahf
pushf
clc
movsb
mov
std
fsts
gs
lods
arpl
and
hlt
aaa
cli
xchg
dec
xor
fwait
outsb
mov
lret
push
in
mov
shll
sbb
mov
sarb
adc
inc
cmpsb
ljmp
stos
int3
xor
mov
rclb
test
loop
cs
xchg
and
push
movsb
pop
ljmp
enter
or
xchg
mov
jge
push
dec
jp
mov
dec
sub
aad
push
ja
in
into
jp
jmp
mov
push
xor
stc
cmp
out
jb
push
cwtl
out
mov
push
hlt
loope
out
loopne
sub
iret
inc
and
jb
bound
add
jbe
pop
test
or
xorb
push
mov
shr
int3
loopne
mov
in
mov
std
inc
test
pusha
js
dec
adc
dec
mov
jno
mov
sbb
jmp
iret
or
into
cmp
aaa
xlat
aam
inc
and
pop
stc
xor
pop
xchg
lret
pop
xchg
leave
jae
sub
cltd
mov
push
mov
out
jge
cmp
jg
pop
in
ss
imul
arpl
int
push
inc
ret
std
insb
fucomip
test
jbe
jg
in
std
cmc
ds
pop
sub
repnz
imul
aas
sub
je
jbe
mov
shrb
fsin
shlb
cmp
or
dec
loop
jmp
or
push
dec
inc
sti
es
or
je
lret
das
push
push
scas
push
inc
push
sbb
pop
rcr
xchg
into
jecxz
pop
push
cwtl
fimuls
xchg
jne
pushf
test
shrb
fildll
pop
aam
cwtl
pusha
jnp
nop
insb
aas
dec
mov
push
aad
mov
add
add
in
and
mov
xchg
jns
mov
jne
les
and
mov
imul
jg
sarl
cmc
sub
shll
mov
xor
test
scas
int
mov
cmc
push
popa
clc
inc
push
xchg
inc
movsb
test
test
mov
fisubl
sub
and
inc
sbb
add
adc
sbb
repz
out
outsb
sub
push
cmpsb
jno
enter
call
or
sub
xlat
mov
pop
xchg
cmp
movsl
sbb
pop
aaa
adc
dec
xor
push
xlat
dec
arpl
cmp
rorl
addr16
adc
xor
stc
mov
jp
xor
push
shr
filds
cmc
lret
pop
daa
loop
test
or
adc
push
negl
int
mov
pop
das
icebp
filds
cwtl
lods
jne
outsl
shll
jae
out
std
or
das
stc
jp
outsl
inc
insl
add
jo
shrl
push
mov
dec
mov
fs
cmovb
in
lock
popf
leave
test
ljmp
iret
add
add
test
sbb
cltd
test
adc
mov
pop
data16
mov
push
imul
in
in
sub
mov
inc
outsl
add
jp
insb
mov
pop
out
xor
mov
pushf
jg
sti
lea
or
mov
mov
cmp
ja
je
mov
inc
int
cmp
jge
test
mov
gs
xchg
cld
push
inc
lret
insb
sub
in
dec
inc
cmpsl
out
test
data16
jno
xlat
pop
push
dec
enter
push
mov
cwtl
cmp
adc
insb
addb
fisubs
ret
gs
xor
mov
pop
scas
mov
arpl
sbb
add
stc
add
scas
cwtl
mov
sub
aad
dec
ds
jno
xchg
aaa
adc
jbe
or
into
jae
sub
jp
mov
mov
enter
sub
adc
cmp
cmp
icebp
or
lret
push
jo
sbb
aaa
pusha
dec
mov
jle
dec
fwait
sub
clc
lahf
mov
in
gs
xchg
or
lret
pop
add
movsb
pop
test
dec
mov
sbb
or
sub
push
mov
js
lods
push
movsb
fsts
cs
mov
jb
lret
dec
pop
lds
ja
icebp
sbb
test
and
mov
int
aaa
sub
xchg
xor
rclb
fcmovu
loop
loope
shrl
mov
xchg
ficompl
mov
inc
sub
ja
cmp
shr
sbbl
or
pop
sub
in
imull
shrl
andb
call
fnstenv
mov
or
into
mov
add
jecxz
shll
cmp
shrl
cltd
sub
mov
jl
nop
xchg
aad
cmc
je
call
ljmp
stc
inc
fs
xor
testl
xor
arpl
filds
pushl
pop
push
dec
rol
out
mov
cld
xlat
shlb
sbb
push
shlb
sbb
data16
sbb
fcoms
or
adcl
popa
xor
pop
jb
in
inc
pop
and
iret
loop
fwait
or
sbb
jb
add
ret
rclb
andl
lods
jmp
insb
popf
jp
mov
xchg
jecxz
lahf
mov
add
jl
inc
mov
lret
pop
imul
sub
jo
jae
push
std
and
shll
push
pop
es
jb
sbb
sarl
aad
fs
rcl
mov
out
push
repnz
dec
jbe
mov
rcr
std
into
jl
outsb
in
jg
scas
insb
inc
into
out
push
xchg
movsb
ja
scas
or
or
insb
xlat
and
xchg
or
test
roll
ja
mov
adc
xchg
sub
inc
jl
adc
std
mov
mov
mov
push
incb
les
cli
rol
cs
lahf
aas
ds
rcr
push
es
xchg
inc
lcall
mov
lcall
jnp
jmp
rcrl
jle
imul
ficompl
dec
flds
aaa
jmp
stos
inc
call
push
inc
sbb
pop
inc
push
add
vmovlps
lret
iret
push
data16
mov
loopne
sub
fnstcw
sbb
add
or
cmp
jp
dec
fdivrs
jo
loopne
test
xchg
aaa
pushf
mov
or
repnz
stos
inc
nop
push
cmc
jl
arpl
sbb
xchg
dec
aaa
adc
cmp
mov
jmp
data16
mov
jl
enter
add
sahf
aas
cli
pushf
push
shll
idivb
ljmp
cmp
addb
cmpsl
sahf
outsl
cli
push
andl
mov
add
insb
xorb
push
and
scas
test
jb
mov
jbe
jae
pop
into
and
loope
lods
mov
scas
mov
es
addr16
js
or
popf
scas
add
and
xlat
faddl
push
fisttpl
testb
pop
cltd
lea
nop
jmp
scas
pusha
and
outsl
lret
xchg
lret
xlat
push
mov
inc
out
sbb
rclb
aaa
or
jp
push
jnp
subl
lods
pop
lret
cli
shll
or
addb
and
jmp
xchg
cs
sbb
adc
je
dec
xorb
lahf
div
sbb
adc
sbb
dec
daa
cmp
sub
xchg
mov
xor
adc
push
popa
push
fstpl
les
loop
js
cmp
ss
pop
pop
xor
addr16
xchg
sub
lcall
xchg
mov
add
cmp
cmp
mov
int3
jg
insl
add
lea
inc
aas
loope
arpl
or
inc
jmp
cmc
fists
insl
imul
out
cmp
add
inc
pushf
and
jno
xor
cmp
and
pop
jmp
push
test
add
out
leave
nop
and
or
movsb
mov
addr16
push
imul
int
jge
jo
mov
in
inc
lods
pop
fstpl
fimull
mov
sbb
stos
push
mov
jp
mov
inc
in
sub
mov
inc
jb
mov
enter
or
xchg
mov
repz
xchg
shlb
push
repnz
mov
cltd
js
ret
cld
mov
pop
rorb
dec
in
negl
push
cmpsb
jb
mov
mov
ret
icebp
ja
xchg
les
jb
das
adc
insb
and
lret
stos
jmp
cltd
sub
mov
pop
mov
int
push
repz
imul
cmp
mov
nop
mov
sbbb
test
lds
into
mov
rcrl
xchg
shrb
inc
xor
stos
xor
cmpsb
inc
xchg
imul
fstpt
pop
and
and
pop
lods
sarl
lods
push
inc
popf
jmp
repnz
xchg
push
clc
test
push
push
bnd
bound
loope
clc
movsl
mov
icebp
jg
enter
hlt
mov
cltd
dec
rclb
test
xor
popa
mov
and
jno
js
into
inc
dec
mov
shlb
aaa
or
pop
cmp
cwtl
mov
and
push
push
out
pop
xchg
xor
shll
out
inc
xor
adc
enter
xchg
insb
dec
mov
add
adc
mov
and
and
dec
test
bound
add
bound
and
xchg
stc
jb
outsl
daa
les
lea
out
fldenv
xor
cmc
sahf
adcl
add
out
xchg
rclb
push
in
mov
adc
sbb
cmc
inc
bound
cmpsb
rcll
pop
dec
mov
imull
push
addb
loopne
shll
int
mov
or
push
incb
repz
mov
ja
pop
or
push
sub
sarl
jge
loopne
xchg
cld
hlt
ds
cmp
fldt
imul
adc
jns
inc
cmp
cli
pushf
inc
xor
sti
and
or
add
xor
mov
cmp
sub
push
xchg
mov
std
mov
subb
lds
and
adc
lret
inc
fidivl
mov
je
adc
mov
in
gs
dec
popaw
mov
sub
movsl
inc
pop
adc
dec
daa
mov
adcl
jg
pop
cmp
aaa
stc
push
in
pop
aam
cmp
fistps
repnz
add
xor
mov
or
pop
mov
in
pop
dec
and
pop
mov
rol
adc
sub
ret
aad
adc
or
repnz
cmp
mov
sbb
popf
into
and
or
std
inc
mov
push
ficompl
mov
scas
mov
arpl
mov
dec
mov
or
imul
push
jmp
cmp
movups
jp
jne
inc
sbb
jle
push
and
out
xor
inc
xchg
sbb
aas
leave
mov
jge
sbb
faddl
subb
mov
clc
shll
leave
aad
outsb
add
aaa
leave
rcll
push
adc
loope
mov
add
stc
inc
push
lea
xchg
mov
adc
adc
and
cmpsb
cmp
imul
sahf
imul
inc
out
pop
cmp
xchg
dec
sbb
repz
and
xchg
movsl
and
bound
adc
test
imul
lods
pushf
outsl
mov
cmp
push
outsl
ret
push
scas
and
xor
pusha
test
cmc
mov
pushf
mov
add
mov
aam
mov
or
push
cmp
fiaddl
mov
or
push
push
stc
mov
add
std
xor
cs
mov
xlat
in
xchg
and
sub
shl
popa
sbbb
mov
aas
and
push
adc
sahf
add
aas
dec
mov
inc
cwtl
pop
shlb
pop
mov
addl
mov
aas
mov
dec
ret
adc
sbb
stos
iret
in
cmp
gs
pop
mov
xchg
loopne
shll
inc
popf
sub
cld
sub
cs
ljmp
pushf
daa
popa
add
les
rorb
push
popa
test
or
addr16
cs
cmp
jb
lcall
or
inc
cmp
xor
mov
adc
or
dec
loopne
inc
jmp
out
out
es
test
push
fs
inc
ror
push
inc
xlat
in
dec
sbb
pop
cmp
cmp
hlt
adc
aam
jg
xchg
movsl
mov
mov
xchg
sub
imul
loop
dec
adc
outsl
sbb
pop
add
dec
popa
mov
loop
fs
cwtl
xchg
add
push
jmp
mov
icebp
jns
mov
rcl
jne
cmc
mov
cli
movsl
dec
test
lret
enter
xlat
adc
ja
mov
fcmovu
and
mov
mov
cmp
add
and
insl
xor
jo
movsl
push
repnz
cmp
ror
fiaddl
call
adc
xchg
bound
adc
mov
imul
pop
movsl
mov
cmp
dec
imul
push
xor
mov
push
pop
stos
mov
fstpl
jmp
fs
push
xor
lock
adc
js
or
call
in
js
mov
push
sbb
push
add
ljmp
xchg
mov
insb
jno
in
mov
pop
clc
mov
push
cmc
mov
pop
mov
stos
pop
addr16
bound
cmp
adc
mov
mov
dec
insl
jae
insl
mov
js
pop
sahf
push
dec
cltd
adc
mov
mov
adc
jmp
push
jmp
or
stos
cmp
fs
int3
xlat
pop
imul
mov
lea
push
bound
int
and
mov
pop
push
test
test
mov
fistl
imul
jnp
into
and
xchg
sbb
scas
clc
dec
in
jmp
xor
dec
and
adc
addl
cmc
mov
add
sti
lcall
cmpsb
cmc
imul
std
jg
adc
add
sbb
dec
xchg
stos
flds
jae
roll
add
inc
fabs
repz
addr16
xlat
scas
mov
pop
cmpsb
bound
inc
pop
jae
es
sub
daa
jno
adc
stc
inc
sub
lea
xchg
daa
cli
xchg
xor
gs
mov
dec
imul
dec
or
mov
or
mov
insl
movsl
jno
xlat
dec
pop
ret
loop
lock
pop
lcall
jo
xchg
push
xor
xchg
daa
add
cmpl
test
in
add
xlat
sub
mov
jb
mov
jp
xchg
out
inc
dec
stos
lods
adc
cmovne
push
loope
fldcw
fs
data16
ror
cmp
pop
outsb
data16
loop
lods
xchg
testb
icebp
aam
and
cmpsb
decb
cmp
push
xchg
popf
push
mov
push
les
mov
mov
pop
lcall
pop
aas
negb
sub
or
jnp
add
add
fdivrl
movsl
lds
insb
xchg
pop
movsl
xchg
xchg
shrl
int3
popa
or
inc
lods
repz
insl
or
xor
mov
insb
das
pop
test
aad
cmc
mov
mov
les
cmpsl
dec
shl
xchg
loopne
test
dec
jp
lcall
stos
clc
cmpsl
sub
dec
xchg
ds
pushf
dec
pop
std
call
test
sub
lods
sub
test
fadd
xchg
sub
subb
xor
into
arpl
shll
pop
pop
sbb
aas
gs
lods
pop
mov
mov
pushf
clc
aad
inc
cmp
hlt
xor
call
dec
adc
dec
mov
sub
pop
and
mov
inc
popa
popa
negl
sub
mov
jge
ds
and
popf
test
popf
lods
mov
fdivrl
js
inc
out
pop
cmp
mov
in
stos
add
jne
pop
scas
lret
cli
xchg
es
out
add
sub
adc
cwtl
mov
mov
negb
cmp
mov
fstps
or
sub
rclb
sbb
hlt
dec
loope
xchg
add
push
das
push
rclb
popf
test
adc
leave
dec
push
or
add
int
jo
xchg
ja
dec
mov
nop
push
and
xor
imul
mov
add
add
es
mov
cmp
adc
inc
cs
mov
mov
sub
or
pop
mov
dec
add
fdiv
sti
xchg
sbb
leave
mov
frstor
add
cli
xchg
fidivrs
mov
mov
and
xlat
jne
loope
popf
sahf
jno
mov
push
dec
loope,pt
je
leave
and
ret
push
push
pop
mov
jo
jbe
xor
or
std
or
das
dec
arpl
dec
pushf
xor
lret
add
push
sbb
or
xchg
sub
pop
mov
xor
mov
push
loop
xchg
sub
add
dec
sbb
cs
cmp
out
sti
adc
xor
lret
aam
xor
fidivrs
pop
pop
sub
arpl
shrl
mov
mov
cmpsb
shrl
xchg
cs
mov
jle
inc
jno
jb
inc
mov
dec
fnsave
fs
or
or
dec
jnp
shl
mov
sub
jmp
jno
lret
aad
jle
ljmp
push
nop
scas
out
inc
ret
andl
cmp
fisttpl
jmp
std
push
xor
std
inc
mov
out
faddl
sbb
cmp
imul
out
xor
dec
and
fs
and
mov
inc
xor
mov
inc
xchg
fwait
test
ljmp
sub
pop
lcall
sub
scas
lcall
loope
dec
test
testl
cmp
and
leave
lods
std
cmp
sbb
jae
jae
fnsave
sahf
push
jle
mov
mov
lret
mov
cwtl
out
xchg
push
movsl
inc
mov
sbb
push
lcall
sub
lret
repz
subl
insl
rorb
or
inc
icebp
popa
cmpsb
xchg
fwait
push
outsl
in
or
nop
add
push
sub
aas
fbstp
mov
xor
cmpsl
push
je
add
mov
int
cwtl
and
pop
leave
dec
movsl
jne
pusha
enter
stos
ja
int
ja
orl
aaa
nop
jl
cmp
mov
pop
sub
mov
in
jmp
pop
jns
decb
bound
xor
js
sub
cmp
sub
test
add
addr16
and
rorl
mov
leave
hlt
mov
out
jecxz
pop
mov
cmp
fdivrs
out
ss
mov
cld
xchg
mov
sarb
sub
gs
pop
sub
mov
dec
dec
adc
push
sub
dec
ds
sub
test
es
pop
test
push
js
and
add
jle
dec
push
fsts
sar
or
fwait
gs
sbb
popa
mov
dec
or
movaps
test
loopne
std
push
cmpsl
aas
fdivs
lahf
push
mov
mov
sbb
frstor
loopne
testb
ficoml
push
fists
notl
push
mov
hlt
mov
xchg
es
mov
push
out
aam
test
cmpsb
ds
push
sbb
xchg
hlt
repnz
adc
int
je
aaa
fisubs
mov
inc
mov
pop
cmp
mov
rorl
push
lahf
stos
inc
inc
or
xchg
and
cltd
fidivs
cld
mov
mov
and
movsb
insl
cmp
fs
or
ret
scas
pop
and
and
or
repnz
icebp
mov
xchg
ljmp
test
dec
mov
sbb
push
testl
cmp
gs
cmovnp
add
jnp
mov
mov
out
xchg
hlt
pushf
adc
mov
fldl
lock
arpl
test
and
lea
add
test
js
subl
or
pop
gs
aaa
push
mov
call
loopne
or
arpl
sub
nop
loop
mov
and
fstpt
mov
mov
les
daa
inc
fsubr
xchg
imul
or
lahf
cmpsl
roll
push
lods
popa
xchg
cmp
decb
ja
leave
fisubl
rcll
jne
pop
hlt
stc
sahf
mov
push
in
out
aad
jmp
aaa
lret
lock
je
daa
mov
mov
enter
jae
lock
out
xchg
push
mov
mov
popf
clc
loop
add
lret
cmp
loopne
push
sub
gs
xchg
push
jno
or
loopne
bound
and
lock
cld
adc
cmp
jae
or
add
jg
outsl
es
stos
add
inc
add
xchg
dec
push
call
das
pusha
mov
lds
mov
pusha
mov
cmp
mov
jbe
push
call
test
fldenv
pusha
fcoml
add
sbb
xchg
jno
and
mov
call
in
sub
mov
sub
scas
sbb
push
lods
ljmp
jg
adc
loope
cmp
dec
xchg
icebp
mov
or
and
shrb
xchg
sub
shrb
pop
gs
cmpsl
shlb
lds
mov
lea
add
ds
inc
mov
std
sub
dec
test
outsb
cli
sub
sub
mov
xchg
dec
pop
ja
test
mov
aad
dec
out
out
outsb
in
and
or
dec
sbb
sbb
mov
lods
dec
repnz
xor
mov
adc
ss
loopne
mov
xor
dec
test
loopne
sub
sub
enter
sub
out
dec
pop
pop
lods
test
mov
push
pop
pop
lahf
bound
iret
xchg
rcrb
pop
inc
xlat
das
out
neg
and
cmc
addb
stc
gs
xchg
sbb
lret
lods
pop
loopne
fdiv
cltd
outsl
dec
movsb
push
xorb
xorl
mov
mov
fsubl
mov
inc
loop
out
and
mov
aas
test
loop
addr16
adc
pop
inc
ljmp
jbe
xor
std
dec
std
xchg
xor
xor
leave
mov
mov
sub
mov
push
xchg
push
mov
pop
insl
sub
lds
jecxz
iret
lcall
jge
ds
pop
sbb
loope
loopew
ret
jge
inc
movsb
in
scas
call
or
jno
shrb
mov
cwtl
mov
inc
cwtl
sahf
stc
scas
clc
loope
jge
mov
sbb
jge
cmp
mov
jbe
pusha
push
mov
push
add
ds
cmp
jecxz
dec
fs
jge
xchg
ds
ficompl
das
out
adc
in
and
push
movsl
cmc
decl
xor
aaa
into
or
fistl
xchg
or
aad
and
xchg
xlat
pop
insb
imul
fimuls
xchg
icebp
pop
fidivs
adc
push
bnd
mov
dec
xchg
cmpsl
adc
jo
add
jge
mov
mov
pusha
cs
icebp
jns
xchg
ffreep
inc
fsts
test
shrl
inc
fmull
cli
and
xchg
and
or
adc
jge
adc
fiaddl
insl
jns
movsb
inc
add
sbb
pop
sub
sub
scas
mov
fs
fdivs
andl
jae
adc
scas
js
lock
js
xchg
pop
or
pop
fwait
outsb
pusha
mov
xor
into
fnsave
shlb
jecxz
scas
adc
subb
cld
xor
sub
daa
dec
repz
add
fstps
dec
in
cli
or
adc
mov
ret
aaa
mov
inc
shl
inc
ljmp
insl
push
sub
addb
sbb
mov
aas
sbb
push
sub
cmp
fs
les
pop
in
aam
ret
xchg
hlt
xor
mov
iret
repnz
rcl
pop
lret
push
sarb
in
iret
repnz
ljmp
inc
fldl
jno
xchg
mov
dec
sbb
mov
jae
test
in
cld
mov
outsb
pop
mov
mov
dec
xchg
sub
sub
popa
lahf
xlat
pop
pop
xchg
ljmp
bound
cltd
nop
daa
lret
out
lcall
imul
pop
loopne
je
xor
pop
cli
or
cs
pop
in
dec
icebp
adc
mov
and
cmp
popa
cmp
pop
xchg
mov
mov
dec
aam
push
mull
sbb
arpl
pop
add
jl
mov
pop
or
xchg
and
and
push
nop
inc
sahf
dec
and
loopne
movsl
pop
cwtl
and
xchg
cmp
pop
xor
push
add
mov
aad
pop
xchg
iret
testl
pusha
adc
lds
dec
bndstx
loopne
mov
and
call
in
add
xchg
pop
add
or
cmp
cmp
jp
sarl
dec
mov
lea
icebp
mov
pusha
ljmp
cmp
sbb
jl
xchg
fbld
cmp
lods
rcr
jbe
iret
cmpsl
jbe
sbb
enter
fdivrl
push
push
sbb
dec
aas
pop
out
dec
xor
sub
adc
es
cmp
xor
sub
sbb
repz
add
loop
push
test
pushf
fidivs
jo
dec
dec
loopne
xor
push
jo
in
and
sbbl
mov
cmc
inc
jae
testb
lock
test
in
stos
push
cltd
push
or
idivl
movsl
cmpsw
jle
and
fs
decb
inc
dec
sti
nop
dec
loope
in
inc
out
or
test
sbb
mov
cli
fs
or
cwtl
cmp
pusha
mov
ficompl
mov
or
mov
add
int
sbb
cld
mov
ss
inc
ljmp
mov
mov
bound
es
lock
nop
int3
mov
js
mov
jecxz
dec
cmpsl
adc
xor
mov
mov
dec
adc
rolb
imul
dec
sbbb
out
pop
sub
lods
xor
push
cmpb
jle
in
out
adc
push
xor
or
movzbl
fdivrs
jge
cli
dec
fstpt
sbb
add
andl
testb
mov
mov
cmc
scas
mov
sub
aas
mov
pop
mov
fisttpl
dec
push
movsl
gs
aas
add
inc
mov
pop
fildl
lods
xlat
jmp
cmpsb
add
decb
sub
cmpsl
add
sbb
loopne
dec
aaa
imul
sbb
pop
pop
push
adcb
mov
xor
pop
dec
push
xor
mov
out
pusha
ss
dec
enter
xchg
pushl
add
outsl
mov
and
test
and
lds
jp
xor
dec
out
push
cmp
jo
lcall
pushf
hlt
xor
iret
clc
pop
std
cmp
lds
in
mov
mov
negb
mov
dec
sub
aas
mov
xor
fsubrs
dec
push
notl
xchg
pop
mov
lock
mov
inc
xorb
xchg
dec
psrad
dec
in
insl
mov
testl
lods
sti
mov
mov
sbb
cmp
and
shll
mov
dec
mov
inc
jnp
cmpsl
ds
sbb
rorl
or
imul
adc
ret
pop
cmp
jge
pop
dec
iret
jp
pop
mov
or
xor
call
iret
xchg
sarb
add
pop
aam
pushf
pusha
mov
mov
and
mov
cmc
subb
sub
xchg
push
adc
cmp
lods
cmp
mov
iret
jmp
sbbb
or
adc
sbb
gs
sar
test
pop
icebp
mov
xor
sbb
dec
xchg
sbb
pop
lcall
dec
mov
ja
insb
adc
addl
mov
rcll
sti
std
sub
stos
push
add
xchg
lock
xor
xor
jo
mov
xor
bound
sbb
rcrb
insb
test
push
inc
movsl
in
mov
sbb
mov
dec
jmp
test
add
push
push
jle
sbb
jle
mov
in
ret
push
pop
add
ja
cmp
adc
movsb
push
out
mov
push
dec
in
jno
stc
shlb
fidivl
outsb
stos
jge
dec
imul
fistpl
adc
mov
cmp
pop
push
pop
movsl
xor
stos
roll
xor
das
shlb
decb
or
insl
add
outsb
inc
dec
sbb
push
mov
fwait
aaa
and
in
daa
fimuls
mov
stos
or
cwtl
adc
cwtl
cmp
cmp
mov
jmp
xchg
push
adc
outsb
outsb
cmp
loopne
js
jnp,pn
lahf
and
aaa
add
sbb
xchg
sbb
lret
les
mov
inc
xor
lock
mov
cmc
push
and
jmp
and
sti
or
mov
test
stos
nop
push
sub
or
adc
xchg
mov
int
dec
loop
jl
lret
mov
sbb
loope
cmp
jbe
adc
mov
mov
insb
sbb
fimuls
ret
addr16
mov
sbbl
mov
repz
out
iret
movsl
cmp
sub
ret
std
popf
lahf
inc
hlt
sbb
cmp
jns
dec
mov
fwait
imul
lods
xchg
pop
mov
outsb
pop
mov
imul
insb
rolb
and
scas
xchg
push
fidivs
adc
sbb
loop,pt
insl
cli
push
icebp
pusha
jno
mov
gs
pop
pop
xchg
mov
mov
or
inc
push
inc
sub
incb
jmp
sub
xchg
cs
adc
ja
mov
sti
xchg
ja
dec
or
and
mov
fwait
sub
clc
mov
daa
pop
add
outsl
hlt
insb
sti
mov
pop
repz
sub
scas
cmp
icebp
aas
sti
fsubrl
dec
cmc
fmull
xchg
jo
jns
mov
lahf
add
out
xor
mov
lock
popa
xchg
mov
dec
loope
push
adc
jno
and
pushl
cmpsl
dec
insb
or
es
ljmp
sub
imul
ja
pop
mov
fldt
mov
pop
mov
dec
push
cmp
mov
pop
pop
inc
loopne
or
fsts
das
shl
pop
xor
mov
jnp
rclb
movsl
lods
lods
arpl
cs
in
test
jae
imul
fiaddl
rorb
push
js
or
jecxz
in
sbbl
inc
push
push
je
xchg
orl
xchg
addr16
repz
and
push
push
lods
jo
or
mov
push
repnz
frstor
sbbl
push
cltd
out
loope
stos
sub
int3
pusha
dec
jb
js
pop
adc
mov
jnp
jge
or
and
shl
dec
pop
adc
popf
jg
cmp
and
cwtl
lock
xchg
mov
std
shl
inc
mov
out
cld
js
pop
dec
popf
mov
dec
insb
xorl
xchg
and
mov
or
adc
repz
lret
call
mov
fadds
pop
arpl
hlt
adc
stos
cmpsb
cmp
psubsw
cmp
dec
mov
pusha
imul
negl
jbe
pop
add
sbbl
fsts
pop
out
ss
inc
xchg
cmc
jl
pop
xor
scas
cli
push
sub
sbbl
mov
out
cmpsl
shrl
sub
jl
and
insb
or
mov
push
dec
and
jae
sub
sub
pop
ficoms
add
and
and
sub
sub
xchg
cmp
add
shrb
or
lods
insb
int3
imul
mov
lret
and
xor
jmp
push
mov
dec
movsl
sbbb
and
fdivl
cmpsl
cmp
jns
lea
xchg
xor
stos
insl
clc
pop
sbb
in
lock
sub
fsubl
adc
push
stos
mov
pusha
divl
pop
push
ds
sbb
lds
dec
xor
jo
fists
push
mov
push
mov
iret
mov
sub
add
pop
cltd
addw
inc
cli
or
push
add
repz
sbb
int3
rorb
add
rcl
jns
or
in
dec
xlat
outsb
xchg
mov
jp
jmp
jae
ficomps
arpl
add
fsubl
push
fs
lods
push
pop
ljmp
popa
or
dec
ljmp
xor
repnz
cmpl
pop
jmp
test
aam
arpl
in
les
or
push
xchg
mov
pop
jmp
xchg
mov
inc
mov
jmp
mov
or
jne
push
test
push
mov
mov
pop
push
dec
pushf
je
mov
mov
shr
stos
sbb
sahf
out
inc
data16
cmpsb
xchg
pop
xchg
jp
xchg
stos
mov
add
mov
lods
sti
adc
das
dec
mov
push
cmpl
loop
pop
and
mov
pop
in
fsub
sub
test
mov
mov
stos
jle
cli
scas
ja
add
dec
xchg
jge
push
mov
dec
orl
lods
mov
fcomip
mov
cmc
mov
les
add
nop
inc
shlb
nop
inc
or
cmp
sarl
add
dec
cmpsb
dec
fsubs
xlat
scas
mov
fidivl
mov
xchg
cld
pop
and
arpl
sbb
xor
xchg
enter
jmp
mov
addl
cli
push
fsubs
and
inc
xchg
add
adcb
dec
jno
inc
mov
into
les
jno
repnz
and
jbe
es
adc
dec
and
cmp
adc
and
mov
rclb
and
sub
stos
jbe
lret
sbb
stos
jbe
mov
std
loop
add
xor
ret
outsl
mov
rcrb
add
push
int3
cltd
int
xchg
push
xchg
dec
mov
je
cmc
xorl
jle
cwtl
movsb
ja
add
cmpl
or
cmp
bound
jl
dec
adc
ljmp
sar
push
inc
jecxz
or
inc
in
mov
je
push
xchg
addr16
or
sbb
push
xchg
adc
jo
out
andb
inc
and
inc
cmp
pop
div
dec
pop
sbb
adcb
into
enter
aas
jo
and
adc
mov
ljmp
imul
jno
pop
test
or
sub
call
fucomip
adc
sub
jbe
rolb
xchg
popa
sti
jl
adc
mov
xor
dec
jp
push
les
xchg
cld
pop
aad
push
sbb
sti
push
cld
push
stos
movsb
xchg
sbb
dec
mov
add
pusha
add
cmpsb
inc
and
ljmp
jecxz
aas
push
and
fsubrl
push
push
imul
ss
fdivl
fbld
stos
ret
mov
je
sahf
dec
cmp
push
mov
push
cmpl
rcrl
mov
xlat
jge
dec
pop
movsb
xchg
sub
xchg
and
in
mov
inc
pop
push
out
scas
pop
mov
lret
out
jno
mov
lahf
adc
jg
movhps
sbb
scas
aas
sub
hlt
test
loopne
dec
push
sbb
rolb
xchg
push
mov
dec
mov
in
loop
movsl
mov
sbb
mov
test
push
scas
xlat
out
cmp
cmp
push
out
jns
or
push
mov
in
push
push
adc
jl
and
pushf
fs
push
push
mov
fisubl
and
movups
mov
imul
lahf
into
mov
bound
adc
addb
in
mov
jo
cmp
les
in
loop
inc
test
add
ljmp
aam
jne
lock
xchg
lahf
xchg
sub
adc
movl
mov
mov
addr16
test
shrl
or
jbe
or
sbb
xor
xchg
inc
jno
adcl
mov
out
inc
int
js
insl
cmc
sbb
and
js
mov
jno
dec
loopne
lahf
jne
fldt
mov
je
adc
sbb
sarb
push
or
in
sub
fidivl
dec
jmp
pushf
sub
xlat
inc
pushf
sub
popf
xor
aad
fxch
enter
movsb
xlat
lods
adc
test
xor
xchg
inc
sbb
lock
mov
cmc
repnz
add
in
out
sbb
loopne
sub
imul
addr16
mov
es
out
add
and
cld
dec
mov
mulb
sti
repnz
sbb
test
push
mov
adc
loopne
and
stos
sbb
popa
adc
or
adc
ret
mov
jmp
ljmp
stc
and
mov
test
pop
or
lock
lea
sbb
cwtl
dec
loope
in
jae
xor
and
stc
scas
out
add
daa
rol
lret
scas
dec
popa
rol
pusha
cld
lcall
in
aas
sub
add
gs
lcall
push
push
ret
repnz
popf
lahf
pop
repnz
mov
push
pop
imul
pushf
pop
in
push
mov
dec
ljmp
cmp
cmp
mov
fwait
inc
dec
pop
inc
jmp
cmp
mov
and
dec
insl
rcll
or
and
iret
jo
jbe
ja
rcll
pop
push
cli
dec
aam
sub
jb
arpl
lock
mov
fcom
jbe
dec
loop
stc
mov
cwtl
jae
mov
mov
fmuls
icebp
dec
scas
lock
js
add
ficompl
jecxz
push
mov
cld
or
sbb
addr16
sbb
addr16
jns
or
jne
daa
lahf
cmp
dec
cld
xor
add
mov
rcrl
aaa
dec
pop
out
cs
cmp
pop
sub
push
or
out
shl
out
mov
les
aad
cmp
xor
push
jecxz
ds
mov
cmp
test
add
inc
xor
cmp
int3
fsub
adc
xor
pop
out
outsb
xchg
mov
in
pushf
pop
cli
test
jns
xchg
sub
lea
fisubrl
pop
push
push
push
mov
pushf
xchg
ljmp
popf
call
inc
popa
push
bound
cmp
ss
mov
lock
or
fdivrs
imul
movsb
inc
sub
mov
lret
mov
lret
addr16
pushf
cli
push
jmp
adc
sbb
ret
pop
mov
int3
push
push
adc
lods
adc
negl
xor
pushf
scas
push
out
lahf
push
add
mov
imul
in
dec
cmp
push
or
sti
getsec
imul
or
cmp
rcrl
cmpsb
sub
in
mov
jno
in
xor
xor
push
xchg
push
mov
mov
jae
mov
addb
int3
or
ror
mov
mov
xlat
mov
popf
pop
sbb
ss
adc
fidivl
mov
xor
inc
jmp
jmp
dec
cmp
mov
pop
cmp
xchg
lock
out
shr
shrb
push
ret
negb
imul
imul
add
incl
mov
pop
mov
xchg
rcrb
xchg
mov
inc
pop
shrb
push
aaa
nop
pop
in
push
pop
and
pop
daa
cmp
jns
jne
jbe
mov
and
fcomps
subb
out
mov
out
repz
stc
xor
push
push
mov
aam
sbb
dec
insb
mov
sub
pop
cmp
push
mov
lods
cmp
iret
pop
push
push
pushf
dec
sahf
rcrl
cwtl
push
aas
cltd
fbld
cwtl
loope
jns
divl
outsl
stos
stc
mov
popf
xor
jb
outsb
aam
test
nop
bound
or
xchg
adc
push
pushf
cmp
std
jl
insl
ljmp
push
repnz
sub
imul
jle
comiss
mov
mov
xchg
sub
push
sub
mov
icebp
aad
fmull
adc
std
and
fs
adc
mov
fildl
jbe
xor
or
lcall
imul
mov
dec
push
inc
loopne
rolb
pop
loope
ficoml
xchg
pop
repz
or
mov
aad
ret
or
xchg
jecxz,pt
or
push
in
ja
ds
sub
cmp
xchg
xchg
push
clc
inc
xor
xchg
push
pushf
cmc
mov
imul
lea
rcrb
pop
loop
xlat
mov
sbb
mov
fs
cmpsl
ds
cmp
cmp
pop
or
adc
adc
xchg
cmpsb
jg
lcall
dec
pop
pop
ljmp
out
pushf
dec
mov
out
out
or
jg
vorps
and
mov
insb
add
pop
or
and
inc
xor
adc
dec
lret
pop
sub
mov
fs
mov
and
mov
js
xor
loopne
enter
dec
pop
enter
lret
or
in
xor
popf
jmp
xor
or
nop
scas
cld
cld
out
xor
pop
mov
cmpl
fxtract
adc
push
fidivrl
andb
bound
sub
dec
mov
pop
repnz
xchg
lods
jo
pop
insb
cli
scas
pushf
scas
mov
scas
fisubrs
loop
mov
jo
js
pop
jle
xor
mov
mov
mov
out
adc
xor
mov
insb
stos
out
and
jl
or
daa
je
fldt
orl
pop
rorl
push
ljmp
call
jl
sub
pop
add
call
shl
xchg
pop
cmpsb
mov
xchg
dec
cli
push
xlat
fwait
in
lods
mov
push
sub
sub
jb
scas
dec
pop
ret
mov
push
lahf
scas
ljmp
xchg
sub
xrelease
js
push
sbb
jge
daa
jae
ficoms
or
mov
sbb
test
addr16
or
dec
ss
cmp
xor
jo
xorl
and
es
adc
aam
dec
add
jle
scas
fstl
push
mov
in
cmp
dec
push
pop
lahf
cmp
jbe
sbb
ret
sub
daa
add
cld
jecxz
mov
scas
xor
push
std
push
rcrl
mov
fsubrl
into
pusha
cmp
dec
into
cmc
mov
cltd
dec
pop
and
inc
mov
push
enter
enter
push
ret
mov
insl
mov
inc
pop
lcall
sub
push
xor
jecxz
adc
cmp
stos
sub
out
das
pop
hlt
pop
xchg
mov
hlt
jne
pop
or
fidivl
pop
aaa
mov
xchg
or
add
es
xor
mov
xchg
ret
xchg
pop
xor
sarb
insl
outsl
or
jge
push
pop
jp
lods
and
dec
packsswb
mov
dec
pop
insl
dec
lods
loope
jecxz
mov
cli
cmc
jb
jg
xchg
popa
lods
cwtl
jg
addb
call
popf
mov
mov
loopne
sub
lods
adc
or
and
lea
popa
push
mov
cmp
in
adc
push
out
dec
push
mov
push
orl
inc
xor
iret
daa
mov
mov
sbb
adc
mov
data16
pop
mov
mov
cmp
es
adc
pop
cmp
clc
inc
jmp
popf
aas
push
mov
fwait
test
test
cmpsl
xchg
mov
aad
cmpsb
mov
ss
movsl
ljmp
es
outsl
push
cmpsl
stos
xchg
in
ja
dec
cs
push
xchg
repz
xchg
sbb
scas
and
pop
into
xchg
les
shll
adc
xor
fisubl
xor
mov
out
mov
ja
push
fwait
cli
or
sbbb
sbb
push
std
and
in
inc
fnstenv
in
fs
jbe
mov
into
push
sub
daa
inc
rcrb
jp
dec
xlat
shrb
sbb
add
or
imul
in
ret
clc
popf
jg
clc
dec
fnstcw
in
lods
pop
aaa
xor
sub
xor
mov
push
mov
xchg
rol
iret
aas
sarl
bnd
xchg
xchg
dec
sub
dec
mov
pop
mov
cmp
pop
jnp
cmp
xor
and
outsl
daa
adc
dec
repnz
outsb
pop
dec
pop
es
jo
cmp
clc
jno
test
test
pop
setle
pop
jg
nop
adc
jle
jae
jmp
mov
mov
cld
dec
mov
pop
jl
imul
pop
or
mov
movsb
repnz
xchg
in
xor
add
mov
sbb
loope
jbe
pop
pop
fistps
pop
jmp
fsubl
push
mov
dec
lcall
jbe
cwtl
mov
fnstenv
mov
mov
jp
xorb
mov
imul
outsb
movsb
inc
test
sbb
jo
push
mov
adcb
inc
ret
mov
xchg
inc
pop
pop
pop
adc
mov
mov
fmuls
adc
int
aad
loop
scas
sbb
dec
adc
xchg
jae
fimuls
mov
stos
xor
out
mov
pop
cmp
mov
je
xchg
mov
movsl
out
insl
mov
imulb
cmpl
pop
pop
int3
sub
xlat
xor
out
js
and
fsubl
movsb
or
cmpsb
les
rorl
fidivrs
and
aaa
xor
inc
decb
orb
push
jo
movsl
data16
nop
cwtl
bound
sub
testb
in
xchg
in
push
pop
fcmovnb
dec
dec
test
cmp
in
cmp
loope
ret
scas
push
repz
imul
sbb
imul
enter
add
jmp
sbb
fistpl
sbb
test
inc
jae
jne
fcoml
lret
leave
ror
fwait
mov
cli
jne
nop
xchg
test
xchg
fcoml
push
fildll
mov
sbb
daa
lods
test
iret
stos
dec
sarb
sbb
jle
sarl
jl
or
lcall
movsb
arpl
pop
and
xchg
lock
fidivl
cwtl
sbb
xor
xchg
adc
ss
fidivrs
cmp
cs
add
fcmovnb
xchg
xchg
add
jp
gs
xchg
test
pop
xor
sbb
cmp
mov
in
outsl
daa
pop
cmp
daa
repz
aaa
or
clc
lock
pop
pop
fs
sub
sub
mov
push
jo
pop
and
outsb
mov
arpl
push
add
fcmovbe
inc
xorl
add
mov
stos
and
gs
push
ja
nop
mov
jg
mov
adc
or
push
into
sbb
pop
mov
sbb
out
aas
lods
and
enter
nop
cmp
mov
ds
add
xchg
push
std
cmp
sub
lds
dec
xor
pop
enter
les
jae
adc
ficompl
or
arpl
and
jl
sub
mov
in
inc
push
cmpsl
stos
mov
push
scas
dec
shll
inc
popf
xor
jae
fwait
int3
cltd
mov
mov
cmp
push
mov
mov
clc
movsl
mov
cwtl
pop
inc
popa
inc
lods
lahf
mov
xchg
mov
sbb
mov
xchg
int
xchg
xchg
add
inc
xchg
jg
mov
inc
mov
aam
mov
dec
jae
or
xchg
inc
adc
pop
adc
lds
ficompl
push
iret
data16
xchg
ja
jp
mov
pushf
ficoml
pop
int
cmp
cmp
mov
in
cs
lahf
gs
gs
repz
outsl
daa
icebp
inc
sub
lods
neg
movsb
dec
andl
mov
xor
xchg
mov
sub
movb
inc
add
add
sub
cmp
inc
arpl
in
or
stos
pop
xchg
mov
add
add
mov
jno
mov
sub
fldt
mov
mov
pop
js
pushf
or
test
xchg
xor
into
mov
pop
cmp
mov
sub
dec
mov
stos
mov
mov
insb
inc
pop
or
cltd
hlt
inc
jnp
mov
sbb
fnsave
je
mov
push
imul
sub
add
lret
xchg
or
cmp
out
or
dec
lea
push
or
data16
pushf
es
adc
cli
ljmp
pushf
lea
shl
cmp
aam
hlt
pop
fdivr
push
jne
push
sub
xchg
xchg
leave
push
cld
push
ja,pn
inc
mov
sbb
mov
nop
add
mov
cmpsb
in
das
mov
lahf
xor
pop
jp
sub
sbb
pop
loopw
xchg
dec
mov
popf
xor
aam
movsl
nop
push
aam
push
mov
in
jns
inc
test
cs
fs
fisubs
mov
out
gs
les
mov
add
roll
xchg
sbb
hlt
fldcw
mov
inc
sbb
cmpsb
sbb
in
shlw
insb
sbbb
sub
push
ficoml
mov
mov
adc
aaa
bound
ja
xchg
push
jb
loop
xor
mov
push
loopne
gs
shr
pop
arpl
orb
sbb
push
mov
sub
loope
inc
push
adc
adc
cmpsl
sub
sub
mov
dec
push
fnstenv
xchg
test
lds
inc
movsb
dec
mov
stc
imull
mov
lahf
popf
sbb
or
lcall
dec
pushf
dec
aas
mov
and
fsubs
inc
es
dec
pop
inc
js
out
mov
xchg
loopne
out
cmp
sbb
aad
ret
jge
sarl
cmp
test
jecxz
add
sbb
jbe
cmpsl
mov
roll
prefetch
or
adc
dec
or
mov
fiaddl
dec
mov
xor
ja
outsb
cmp
iret
in
pop
insl
jmp
or
mov
pusha
int3
pop
pop
add
addb
mov
push
rcr
out
dec
pop
cmp
outsb
in
inc
fwait
jbe
inc
idivb
jns
adc
push
cwtl
movsl
in
aad
xchg
pop
xor
jae
clc
loop
cs
mov
ss
jle
ljmp
movsb
je
test
sbb
scas
ret
aaa
push
mov
in
mov
mov
mov
xor
lcall
push
or
adc
push
xchg
add
test
mov
jp
cmp
mov
cmp
sub
inc
cmp
loopne
jmp
mov
xor
mov
faddp
lea
fcmovbe
test
and
mov
push
dec
cwtl
xchg
mov
dec
es
imul
adc
clc
inc
out
or
jle
jnp
jns
jne
aad
shll
cmp
mov
sarb
fwait
and
cmc
and
pop
out
jl
pop
adc
inc
cld
jno
xchg
jp
xchg
aas
out
daa
in
add
cmp
pop
adc
mov
add
push
fnstsw
jns
push
jmp
jp
ret
fwait
sti
in
mov
xor
mov
loopne
mov
mov
or
lret
adc
rol
jge
xlat
or
or
bound
stos
adc
test
adc
repz
daa
mov
sbb
mov
and
fcoml
jecxz
cmp
sbb
xchg
dec
jmp
mov
mov
mov
push
std
lods
cmpl
and
xchg
add
inc
add
repnz
ds
push
stos
xchg
inc
clc
mov
lods
mov
adc
cmp
pop
cmp
popa
push
inc
loopne
mov
lcall
stc
test
sbb
pop
leave
jo
sbb
inc
xchg
iret
fcmovnu
dec
and
mov
xchg
repz
lret
cltd
pusha
sbb
add
ja
loopne
adcl
fwait
or
adc
movsb
push
aaa
xor
or
mov
fists
mov
or
mov
mov
jns
fildll
lret
push
xor
xchg
adc
xchg
rcl
jle
insb
sub
push
dec
or
add
stos
adc
cmp
and
out
cmp
pushf
add
add
jo
fs
lret
fisttpll
js
and
ja
cmp
scas
into
out
stc
xchg
stos
jo
add
sbb
sub
in
push
xchg
scas
flds
call
popf
xor
sub
cwtl
fwait
push
dec
lahf
jae
xchg
shrb
pop
mov
jb
bound
in
push
aas
in
adcb
cmc
xchg
mov
gs
stc
sbb
cwtl
lods
iret
pushf
cwtl
data16
int
dec
and
mov
mov
adc
orl
xchg
mov
int3
pcmpgtd
jle
shll
icebp
dec
jl
outsb
into
lock
dec
dec
fdivrl
lods
hlt
lods
jb
test
sbb
xchg
push
jnp
aaa
cmp
shrb
add
mov
push
mov
jp
mov
push
imul
loopne
jno
imul
mov
dec
mov
repnz
adc
cwtl
mov
bound
jg
and
pop
and
xchg
outsb
daa
sub
pop
popf
dec
push
add
cmpsl
push
fdivp
mov
jb
mov
dec
xchg
cmp
xchg
cltd
xchg
xchg
addr16
xchg
adc
ja
jnp
dec
test
repz
and
aad
out
pop
daa
mov
xor
je
jl
out
push
clc
test
cmp
jp
jo
ljmp
sbb
or
xchg
jmp
jae
lea
push
shrb
call
inc
xchg
sbb
pop
pop
mov
push
in
cmp
xchg
xlat
fnstenv
xchg
add
xchg
int
push
fwait
dec
lods
mov
mov
negl
mov
push
cwtl
flds
stc
and
mov
mov
ficoms
stos
data16
jg
push
fisubs
inc
shll
fisttps
push
inc
mov
lret
jle
fsubr
lret
mov
mov
push
jns
and
cmp
sub
shl
or
cld
cmpsl
push
push
push
sub
mov
sub
sub
imul
pop
push
pop
mov
xchg
jb
pushf
lret
xorl
pusha
jbe
pop
or
cltd
fmull
movsl
call
add
push
push
imul
push
insl
mov
or
push
push
sub
je
inc
mov
jmp
jae
push
sbb
xor
imul
jmp
nop
shll
shr
mov
rorb
cmp
jg
or
mov
push
in
inc
mov
mov
jmp
sub
dec
dec
mov
lds
pop
shll
add
push
out
out
rcl
jo
jle
gs
in
inc
bound
fs
pop
enter
cmp
scas
add
roll
add
stos
mov
add
sbb
cmp
scas
fiadds
daa
outsl
push
adc
dec
int3
jb
push
fldt
loopne
jg
bound
inc
ljmp
or
into
push
std
xchg
je
fwait
int3
scas
inc
mov
xor
mov
dec
les
xchg
js
pop
jecxz
dec
mov
stc
xor
mov
data16
cs
inc
dec
lods
inc
pop
xor
fs
and
dec
test
lods
xor
xor
fidivrs
xchg
dec
sbb
pushf
ret
insl
pop
enter
dec
popf
pop
mov
jecxz
push
aas
fisubl
mov
add
xor
or
dec
mov
jp
push
push
mov
inc
push
add
push
pop
inc
mov
and
int
frstor
out
sti
sahf
in
test
xor
jb
dec
jg
mov
or
scas
aad
sbb
mov
enterw
or
xchg
pop
cmp
out
xor
pop
add
cmp
lcall
pop
into
push
lret
mov
pop
pushf
cmp
les
stc
pop
mov
fadds
int
jge
inc
push
outsl
cs
or
xchg
xorb
dec
call
adc
dec
sbb
test
jmp
cmp
push
loopne
push
and
push
cmp
pop
stos
sub
or
out
imul
gs
lock
hlt
repnz
mov
call
add
sub
imul
es
mov
or
jns
lea
addl
jns
xor
xorl
push
and
ficompl
dec
jmp
push
xchg
jmp
pop
add
cmp
mov
jae
mov
test
test
inc
fistl
sbb
mov
sti
pop
sbb
test
pop
push
in
pop
cmpsl
insb
icebp
movsl
loopne
aaa
call
hlt
loope
loopne
sub
mov
shrl
add
ret
push
insl
aaa
stos
jp
iret
and
xchg
stos
adc
out
movsl
cmp
enter
rol
jmp
pop
leave
push
mov
sub
xor
addr16
add
addr16
cmpsb
jbe
int3
fildll
push
mov
xchg
int3
pop
mov
popf
ds
faddl
gs
fldl
push
cwtl
mov
jbe
jb
xchg
jecxz
int3
lret
xchg
cwtl
mov
jp
jmp
fstp
adc
aam
mov
dec
ret
sub
stos
jle
shlb
lcall
in
int3
lcall
pop
in
insb
add
mov
std
aad
jbe
aas
mov
mov
insl
fcoml
xlat
das
sbb
jecxz
cmp
jecxz
xchg
js
push
aaa
jle
iret
in
mov
inc
xor
jne
add
adc
and
bound
loope
nop
jp
outsl
movsb
sbb
or
push
and
test
js
fstps
mul
ret
fstl
fs
out
sbb
dec
cmpb
xchg
jmp
push
mov
icebp
fisubs
data16
dec
cmp
enter
rol
jnp
in
xor
pop
mov
push
sub
fsts
jge
pop
das
lcall
loope
imul
push
push
pop
ret
clc
addl
sbb
movsb
fwait
push
or
adc
je
or
pop
das
scas
add
lds
mov
rep
popl
mov
mov
add
cs
sub
add
outsb
out
pusha
fiaddl
lea
mov
adc
mov
push
js
sub
add
test
movsl
clc
cmp
mov
mov
fldl
cwtl
jne
mov
push
mov
jg
daa
mov
setge
arpl
or
in
pop
jo
add
dec
clc
fcomps
xorl
stc
stc
mov
fildll
mov
stos
mov
sbb
push
mov
fiaddl
loopne
popf
and
aaa
ljmp
ljmp
push
cmp
add
mov
jmp
cmp
inc
dec
int
aaa
in
sub
mov
loop
outsb
inc
test
xor
lahf
insl
jg
outsb
dec
and
cmp
fs
or
cmp
std
scas
sti
dec
fldenv
adc
into
sbb
push
fsubl
shrl
movsl
push
fisubrs
sbb
movdqu
shr
in
mov
jnp
fisttps
or
push
mov
ds
sbb
out
lds
and
sbb
fucomp
xor
jg
adc
adc
addr16
pop
in
enter
xor
insl
and
iret
sbb
lds
lret
ret
aad
inc
outsl
pushf
bound
shr
jl
js
in
push
sahf
xor
mov
mov
mov
xchg
add
std
daa
movsl
lds
lret
pop
jg
repnz
lret
pop
pop
fdiv
mov
daa
out
mov
call
xlat
mov
add
dec
js
or
dec
mov
out
pop
in
mov
or
add
jnp
and
insw
rcrb
push
insb
mov
cmp
add
sbb
mov
aas
add
sbb
stc
test
fdivrl
outsb
loope
sbb
inc
or
sti
push
daa
push
sbb
outsb
sbb
roll
xchg
adc
sbb
int3
out
jae
mov
jp
cmp
out
cwtl
fs
or
xchg
aas
mov
out
mov
jecxz
mov
xlat
icebp
fdivrp
jae
out
push
ljmp
clc
test
std
push
sarb
pop
jmp
mov
ss
out
mov
fistpl
jb,pn
cmp
aaa
adc
pop
mov
jo
or
and
xchg
nop
add
aam
mov
lods
movsb
mov
cld
jo
pusha
testl
adc
jmp
test
cmpsl
aam
fnstsw
jb
and
daa
loopne
fwait
loop
rclb
jg
add
pop
sahf
ja
xchg
mov
sbb
mov
cmp
jmp
clc
imul
inc
stos
cmp
test
mov
fucomp
inc
add
xor
insb
out
xchg
or
xchg
hlt
cmp
out
adc
out
jle
loopne
icebp
sub
xchg
cmp
andb
xchg
push
and
cli
and
daa
inc
aam
inc
add
gs
fidivrs
adc
leave
adc
int3
or
adc
subb
pop
in
mov
andb
repz
pop
or
push
jmp
push
mov
sahf
stos
icebp
adc
test
hlt
mov
mov
xor
ja
repz
mov
cmp
scas
cmp
shll
mov
or
sahf
fs
sub
popa
cmp
pop
test
cmp
out
test
rcr
xor
add
or
jle
xor
cmpsl
cmpsl
popa
push
idivl
enter
fwait
jmp
mov
push
inc
fisubrl
and
mov
es
or
xsha1
cmp
fadds
loopw
push
aad
aam
shlb
mov
es
add
into
test
std
push
inc
sbb
ret
sahf
xchg
mov
ficoms
fbld
mov
test
mov
jmp
cwtl
mov
pop
shr
fldl
sub
ja
jecxz
sbbb
mov
sub
jns
cld
ds
inc
cld
xchg
subl
scas
jmp
mov
xlat
adc
repnz
clc
dec
fucomip
clc
push
fidivrl
fisubl
cmp
sub
pop
sub
push
cs
in
pop
mov
cmp
sub
aad
push
out
jnp
js
jae
std
insl
push
ss
inc
pop
xchg
xchg
xlat
push
into
mov
popl
lods
inc
mov
rorb
cld
clc
push
cmpsl
and
mov
jnp
or
mov
mov
lahf
hlt
cmp
and
sbb
dec
mov
int3
lret
xor
cmp
dec
pop
nop
fucomi
roll
mov
jle
je
xchg
addr16
inc
add
xchg
outsl
mul
jo
push
mov
xchg
imul
cmp
insl
sbb
push
cmp
popa
repnz
adcb
fs
sahf
sub
nop
cmp
sti
push
push
or
movsb
mov
push
add
push
nop
pop
daa
dec
pop
loopne
testb
push
lea
cltd
ljmp
xchg
shll
mov
xchg
in
test
outsb
push
rclb
and
clc
xchg
fldt
add
mov
shlb
xchg
sub
mov
test
add
fs
gs
lods
addb
pop
mov
fnsave
push
cmpsb
idiv
inc
sub
cwtl
and
aam
pop
or
scas
inc
out
cmp
fmul
arpl
xchg
arpl
lret
add
insb
enter
xchg
fstpl
mov
dec
dec
inc
fs
imul
ljmp
dec
decb
xor
mov
iret
push
clc
daa
sbb
fldcw
cmpb
fldcw
sub
xchg
push
shrl
sti
nop
fcompl
orb
xlat
rcll
out
mov
pusha
mov
leave
xor
inc
cmpsl
ds
out
or
out
push
out
imull
into
cmpsb
lock
push
insb
divb
dec
mov
cmp
mov
fwait
in
out
dec
xchg
lods
cli
lcall
jmp
and
or
push
or
add
js
xchg
mov
jle
mov
add
pop
dec
ljmp
shll
cwtl
ficomps
cmpsl
insb
add
adc
dec
int
push
call
adc
sub
addr16
add
js
jecxz
pop
cmpsl
cmc
mov
cmp
js
lods
insb
mov
dec
mov
in
dec
call
std
test
ds
ss
pop
inc
loopne
mov
lret
push
sbb
test
nop
mov
or
mov
mov
dec
mov
xchg
jg
mov
inc
push
mov
xchg
scas
mov
or
mov
lahf
pop
cmp
xorb
fsubl
dec
fdivs
sbb
mov
jmp
sbb
popf
sub
or
mov
mov
sub
ss
push
sbb
fcmovu
in
aam
je
imul
in
and
mov
cmp
cltd
or
stc
rcrb
or
or
xor
pop
lea
jno
xchg
jmp
ret
ja
xor
and
xchg
bound
cltd
pop
int
push
and
sub
adc
dec
cwtl
push
sbb
in
decb
sub
jle
pusha
adc
loop
xor
add
mov
sub
dec
or
sbb
test
lods
pop
in
fwait
mov
bound
icebp
out
icebp
sbb
add
lcall
cld
mov
jmp
addl
cwtl
mov
fdivs
stc
dec
loope
sbb
hlt
or
imul
rol
fcompl
sbb
daa
dec
mov
mov
hlt
inc
stos
sub
xor
mov
xor
orl
test
or
rcl
mov
mov
fwait
sbb
fnstenv
loop
fcoms
sbb
xor
push
xor
stos
imul
popf
xchg
nop
lret
mov
aas
xchg
jo
and
lcall
aas
stos
xchg
xchg
mov
lret
jp
js
ss
sub
add
dec
xchg
and
and
punpckhdq
sbb
sub
jg
mov
jle
dec
arpl
pop
cmpsb
les
sbb
jno
xchg
xchg
push
jg
and
sub
aam
mov
mov
mov
cmp
cmp
inc
adc
inc
fdivs
pop
sub
jmp
and
sub
jl
sbb
lea
dec
mov
push
add
push
insb
inc
out
repz
arpl
jnp
xchg
andl
push
sub
seta
push
dec
xor
mov
xor
cli
rcrl
packsswb
cs
incb
mov
xchg
add
ficoms
bound
sub
adc
pop
add
lret
into
jno
ret
mov
mov
test
inc
shll
sbb
imul
arpl
fidivs
pop
movsb
cmp
jp
les
cmp
lahf
ljmp
lods
xchg
cmp
inc
push
cld
enter
cs
negl
shrl
icebp
cmpb
das
pop
fisubrs
fs
mov
or
or
push
mov
into
push
push
out
mov
mov
xlat
lcall
fimull
loopne
mov
arpl
aam
imul
jp
pop
mov
push
pop
imul
int3
in
lret
mov
test
aas
loop
cli
sbbb
jae
insb
mov
call
or
mov
testb
mov
push
jmp
sahf
cs
adc
ja
pop
test
cmp
dec
lds
out
mov
adc
cmc
mov
sarl
pop
pusha
stos
mov
ffreep
pop
cmp
fildll
imul
dec
dec
rorl
lahf
lddqu
push
jge
outsb
mov
jmp
int
imul
inc
push
lret
push
add
mov
and
lods
cltd
pusha
mov
xchg
jle
loope
aas
mov
sahf
add
jbe
xor
sub
aad
inc
lret
out
inc
sahf
icebp
icebp
dec
lahf
stos
mov
jl
xor
jne
sbb
rcrb
jmp
cmp
jbe
test
ds
dec
loop
repz
adcl
clc
outsl
movsl
mov
cmpsl
add
je
fcoml
add
hlt
lcall
loopne
pop
xchg
sbb
popf
mov
and
lcall
pop
loope
xor
adc
arpl
sub
sub
jnp
pop
dec
loop
test
imul
lahf
mov
pusha
stos
je
mov
mov
xchg
jbe
add
fcompl
dec
push
jg
jge
adcb
dec
lds
les
aam
repnz
hlt
sbb
adc
inc
xchg
movsb
addr16
push
jmp
push
jns
ja
lock
dec
and
adcb
lahf
adc
fldenv
adc
mov
xor
pop
rol
or
inc
cmp
add
out
pop
sbb
leave
adc
lcall
and
jne
and
test
shrb
rcrl
sbbb
or
pop
sub
nop
ss
xchg
sub
cmp
xor
dec
mov
xchg
std
fucom
push
outsl
mov
lret
ja
mov
lahf
sti
std
and
cmp
cmc
mov
ss
jle
inc
ret
sbb
jp
push
jb
xor
jg
inc
push
mov
idivl
xchg
and
sti
xchg
sub
dec
in
jge
sbb
and
cs
and
jmp
sub
mov
jg
arpl
fsubrl
cmp
sub
inc
repz
sbb
fsubrl
cmp
loope
mov
ljmp
jno
clc
adc
movsb
arpl
sbb
repnz
imull
inc
cli
inc
mov
inc
or
jmp
inc
or
dec
cmpsb
xchg
xor
stc
lods
push
jnp
fcoms
jp
and
xchg
movsl
xor
xchg
test
rolb
add
mov
mov
sbb
mov
mov
and
dec
fsubrl
and
rcrb
fnstenv
scas
stos
lds
jecxz
mov
popa
cmp
loop
sbb
ljmp
cld
xor
sbb
roll
cld
mov
mov
fldcw
enter
int
aam
push
ror
test
les
mov
mov
stc
ret
add
in
xchg
and
jbe
das
test
push
push
repnz
pusha
je
je
sub
daa
mov
mov
pop
outsl
roll
arpl
stc
xchg
mov
ret
dec
push
pop
push
das
adc
in
sub
in
test
pop
or
jns
into
and
xor
int
test
pop
rcrl
and
rcrb
out
in
std
xor
cmc
pushf
xchg
push
mov
aas
ficomps
jns
pop
cmp
mov
inc
inc
loope
sbb
mov
and
sbb
mov
jb
mov
and
fldl2t
outsb
aad
stos
jae
aad
in
jae
dec
xor
iret
mov
adc
cmpsl
enter
cmpsb
sbb
pop
mov
jmp
mov
dec
int
or
lret
pop
and
arpl
lods
cmp
inc
roll
inc
jno
sub
adc
sbb
daa
std
adcl
push
aad
sbb
out
cmp
fdivs
js
dec
sahf
div
mov
jne
push
mov
xor
lahf
jecxz
mov
aam
loopne
mov
adc
sub
ds
cmp
aam
out
cmp
lahf
stos
add
jne
xor
pop
xor
imul
and
es
or
mov
fbld
pop
mov
popf
sub
pop
cmp
stc
inc
lods
ss
scas
out
mov
test
lahf
mov
fisttps
xlat
notb
addl
std
add
fnsave
sbbl
or
clc
mov
or
jae
dec
and
sahf
cmp
mov
cmp
xchg
cmp
sbb
cltd
das
cmp
push
outsl
cmp
mull
aaa
mov
adc
lcall
arpl
push
in
ret
push
outsl
pop
imul
cmpsb
fiaddl
or
ss
push
add
nop
ret
add
repnz
xor
mov
pushf
lret
push
jmp
out
xchg
sbb
adcb
data16
or
sbb
nop
jmp
dec
sbb
shrl
pop
pushf
pop
clc
mov
lds
cmp
mov
jecxz
push
add
lods
stc
sti
xchg
hlt
push
add
push
mov
sahf
inc
bound
enter
inc
stos
addb
push
test
call
test
hlt
decb
inc
or
bound
inc
iret
lods
mov
push
bound
mov
xor
negl
inc
scas
inc
iret
ljmp
out
cli
out
inc
movsl
mov
sbbl
mov
adc
movzbl
pop
pushf
enter
test
inc
mov
sub
out
and
dec
es
aad
loope
jae
sub
jp
sub
lods
mov
pop
lcall
ds
push
imul
pop
jo
fidivl
or
das
ret
push
cmp
sub
sbb
push
rcll
movsb
dec
cmp
or
daa
fcomip
push
call
mov
or
and
aas
adc
jge
lahf
inc
add
out
out
test
nop
adc
test
fidivs
mov
lret
ret
pop
push
pop
fiaddl
lcall
cmpsb
les
popf
or
sbb
outsb
dec
leave
sbb
sbb
adc
adc
aaa
cwtl
lods
cld
lods
dec
push
cs
push
adc
test
push
pop
jbe
outsb
sub
mov
ja
stos
fdivr
inc
xchg
or
mov
jle
arpl
fsubrs
jl
fstps
shlb
or
int3
cmpsb
stc
out
and
decl
sub
mov
imul
jo
mov
sbb
insl
test
xlat
scas
mov
enter
popa
call
cmp
in
sub
adc
push
cltd
bound
dec
cmp
ljmp
jnp
jge
or
shl
pop
push
sub
lds
clc
cs
mov
jne
adc
fwait
gs
push
outsb
inc
push
mov
and
mov
test
lret
jmp
push
es
out
loop
int
mov
pop
mov
fistpl
out
cmc
mov
cmpsb
jae
rol
inc
test
scas
rcrl
in
stos
xchg
pop
les
xor
inc
cltd
das
js
lods
jl
sub
and
test
into
and
inc
movsl
push
outsb
jo
mov
jnp
mov
adcl
push
dec
dec
and
ja
jne
cmpsb
mov
shll
cmp
sub
and
push
push
inc
lock
push
jb
xchg
add
cmc
or
sub
repz
dec
loop
pop
add
jecxz
in
mov
push
sub
push
xor
xchg
adc
push
cwtl
jo
mov
into
jnp
fwait
stos
sub
pop
sbb
mov
push
int3
inc
lret
imul
jbe
xor
dec
adc
fnstenv
bound
jl
xor
lods
jo
fdivrs
iret
or
mov
pushf
clc
rolb
pop
clc
jg
xor
lahf
imul
mov
pusha
sti
insl
and
test
jbe
test
xor
inc
push
cmp
dec
pop
dec
pop
pop
insb
dec
pop
es
push
in
cmp
outsl
mov
imul
pop
lock
testl
in
xchg
dec
fcomps
push
stos
fwait
cmpsl
fstps
add
cmpsb
dec
test
inc
gs
in
pop
out
scas
lock
sbb
jns
jl
pop
aad
add
in
xor
jp
sub
adc
outsb
pop
cltd
mov
into
cld
je
xor
xchg
call
fstps
inc
inc
xchg
insl
push
inc
les
dec
sahf
pop
or
fwait
jmp
sbbl
cli
aad
xor
sbb
repz
testl
mov
movsl
cmc
mov
adc
in
mov
popf
testl
data16
or
sub
popa
cmpsb
or
in
push
add
jge
or
push
mov
subb
into
movsl
scas
or
fwait
inc
in
xchg
mov
mov
mov
adc
bound
adc
bound
movsl
mov
nop
cli
and
cld
divl
jae
inc
fadds
aaa
mov
call
loop
mov
imul
out
outsl
jnp
in
push
mov
adc
push
xchg
push
and
sub
andb
adcb
into
insl
aad
mov
hlt
push
pop
mov
testl
mov
jge
mov
cmp
gs
or
in
sti
xchg
sbb
sub
mov
out
ret
daa
inc
std
mov
mov
jecxz
mov
jecxz
sub
shrl
clc
movsb
test
lods
imull
xor
cmp
lods
mov
ret
inc
ja
xor
fildll
mov
mov
clc
sub
cld
out
push
xlat
add
cmp
loopne
jb
out
movsb
pushl
pop
xor
enter
adc
jge
fsubr
mov
sti
xor
and
mov
pop
std
inc
fdivs
inc
adc
dec
int3
lret
stc
xchg
xor
push
in
out
cwtl
stos
lock
into
rol
add
push
lock
movsl
shlb
push
inc
gs
xor
aam
adc
jg
jo
daa
xchg
mov
inc
testl
stos
out
in
fcmovne
cmp
xlat
cld
lds
xlat
insl
and
data16
or
jl
pushf
aad
das
cmp
mulb
mov
aaa
xchg
inc
push
sahf
inc
negb
xor
orl
rol
std
adc
fnstenv
dec
inc
fdivrl
push
or
xchg
repnz
call
cs
lahf
pop
mov
in
jno
hlt
not
jbe
mov
xchg
fistpll
adc
cmp
mov
jns
inc
test
dec
aas
adc
scas
cltd
test
inc
adc
shrb
lods
xchg
mov
cwtl
movsb
mov
sbb
add
cmp
dec
movsw
and
daa
mov
mov
repz
mov
jle
fildll
push
xor
pop
push
pushf
fsubrs
fwait
test
stc
sub
mov
into
cli
push
sti
in
mov
fscale
and
xchg
test
insl
sub
rcr
mov
fcoml
jge
mov
cld
adc
mov
xchg
cmpsl
push
inc
push
mov
iret
popa
imul
xor
and
adc
and
insl
inc
shrl
test
fcomi
mov
jmp
lds
mov
lock
cmp
fldcw
cltd
pop
inc
or
inc
fistl
mov
and
adcl
mov
cmpsl
jp
and
fmuls
insl
scas
jno
jp
cmpsb
out
sti
dec
lahf
out
aam
inc
cmp
cmp
dec
roll
mov
jne
jecxz
out
xor
addr16
or
adc
nop
sub
cmp
in
es
lods
lds
xchg
xchg
test
or
adc
mov
cmp
mov
test
cld
sub
jnp
mov
call
sub
xor
mov
int
push
mov
mov
mov
sub
pop
mov
mov
pop
cmp
dec
fwait
ret
jnp
xchg
add
aas
shl
or
fsubrp
in
test
loope
add
leave
cld
sub
ficomps
sahf
sbb
notb
jmp
push
loop
adc
test
lods
xchg
arpl
outsl
cmp
and
dec
loope
int3
fdiv
repz
mov
aam
pop
cltd
and
dec
loop
fsubl
push
push
std
add
ja
test
mov
push
cs
xor
test
daa
nop
lock
dec
testl
lcall
cld
pop
sahf
and
lea
je,pt
ja
daa
aam
pop
xor
lods
inc
adcl
int3
arpl
and
inc
pusha
ljmp
cmp
xchg
jae
sub
sub
sub
fiadds
adc
mov
pop
movsb
inc
pop
out
int
sub
mov
mov
nop
xchg
inc
mov
sub
pop
out
dec
adc
dec
sahf
xor
pop
mov
mov
scas
inc
lret
pop
pop
out
sbb
int3
loopne
cmp
fistpl
imul
mov
push
call
dec
sub
aad
dec
mov
stos
xchg
push
xor
jecxz
fists
cwtl
cmpsl
mov
sub
rcr
cs
outsb
adc
dec
pusha
xchg
into
sbb
insl
adc
pop
inc
mov
jnp
jecxz
mov
and
and
loope
xchg
push
jecxz
mov
cltd
inc
mov
sbb
fcomi
dec
cld
sub
sub
notb
push
and
fidivl
rorb
pushf
clc
into
shll
testl
call
pop
outsb
cmp
xor
out
inc
aam
mov
js
shll
repz
dec
imul
gs
out
dec
orl
lret
push
sbb
push
test
das
packsswb
dec
lea
push
out
xchg
in
andl
inc
movsb
sub
mov
push
out
xor
push
sbbl
cmpsl
fucomp
or
cltd
mov
adc
test
repnz
repz
call
outsl
jnp
jge
xchg
arpl
js
mov
add
jp
movsb
orl
sbb
push
or
cmpb
mov
test
xchg
sahf
divb
dec
adc
inc
jo
scas
mov
dec
ss
jo
lret
push
fcoms
push
popa
mov
and
imul
jo
jb
dec
cmpsb
sti
scas
popa
es
loope
int3
in
push
in
in
cmp
ja
fldcw
inc
mov
decl
mov
fcomip
jne
push
cmp
sub
and
sbb
mov
iret
arpl
popa
subl
inc
test
es
clc
push
stos
repz
sbb
call
mov
xorl
mov
test
out
or
scas
ja
add
jge
outsb
mov
sub
mov
faddl
cltd
leave
adc
repnz
mov
stos
push
js
cmpsb
mov
addr16
clc
pushf
ja
into
mov
in
mov
add
iret
sub
xlat
in
test
jbe
lds
xchg
in
jmp
pop
jecxz,pn
jno
repnz
imul
lock
jmp
pushf
andl
jae
inc
icebp
adc
jecxz,pt
fcoml
xlat
jmp
lret
and
dec
shl
negl
outsb
orb
fdivrl
outsb
add
loopne
fsubl
into
inc
dec
dec
jecxz
push
outsl
push
mov
add
dec
outsl
mov
cmc
mov
jno
in
movsl
sbb
fnsave
ja
or
mov
lcall
out
add
das
mov
sub
adc
test
and
pop
sarl
repz
jmp
repnz
cmpsb
xorl
mov
iret
sub
test
pop
cmp
pop
lock
pop
push
cld
mov
outsb
pop
jle
ret
jmp
mov
inc
mov
push
inc
test
leave
insb
sub
flds
and
dec
cmp
jmp
dec
pusha
jp
xchg
pop
jecxz
stos
inc
sti
pop
cmp
lods
inc
xor
dec
pop
push
in
xor
andb
jg
xor
push
mov
push
cmpsl
int
mov
or
adc
int
adc
fcomps
std
sub
notl
mov
add
xlat
jecxz
pop
loop
dec
aad
xchg
add
testb
lock
push
out
arpl
mov
inc
mov
jp
mov
lods
jmp
call
push
ftst
sub
pop
lret
fnstcw
xorl
arpl
xor
cltd
sub
mov
inc
gs
cmp
fidivrl
scas
lret
adc
das
mov
bound
cwtl
pop
add
lods
sahf
cli
cli
or
sbb
scas
sbb
mov
xlat
and
or
xchg
test
mov
aaa
into
push
or
jg
sti
push
fwait
xor
rcrl
fisttpl
push
hlt
dec
mov
je
pop
push
inc
push
es
lods
and
sti
data16
inc
push
ja
mov
xor
sub
ret
push
bound
jo
mov
push
mov
adc
out
clc
add
loop
fwait
sti
cltd
out
inc
in
mov
ljmp
daa
sti
insl
fstps
pop
jnp
mov
xor
cmp
ret
pop
shrl
inc
pop
lds
pop
sub
cmp
fsubrp
cli
shlb
nop
mov
ret
push
push
dec
inc
mull
int
pinsrw
adc
jl
add
sbb
andb
int3
int
mov
lret
jg
int
inc
sbb
js
aad
sub
lods
sub
sub
xor
mov
mov
ret
in
das
ret
sub
stos
subb
mov
pop
or
adc
or
adc
lock
cmpsb
inc
push
xor
push
inc
lds
push
inc
mov
cwtl
lods
out
imul
xchg
jo
lcall
dec
jle
dec
in
out
and
dec
push
outsl
in
daa
cmp
cmp
repnz
out
cmp
xchg
add
in
xchg
lcall
cmpsb
stos
aam
mov
sbb
lret
push
hlt
mov
fdivrl
adc
int3
lret
lcall
jo
cmpsb
xchg
and
mov
das
pop
aad
jmp
add
jl
les
cmpl
mov
jge
sub
mov
pop
cmpsl
mov
pop
push
insb
add
int3
sub
repz
jle
mov
xor
xor
xor
jae
ljmp
insl
out
push
inc
mov
ss
mov
pop
aam
jne
out
add
cmpsb
xchg
pop
and
mov
xor
bound
add
cli
jge
test
inc
inc
shlb
xchg
not
mov
or
mov
shr
pop
or
movsb
xor
push
sub
and
incb
mov
push
jne
ret
sub
sub
xchg
jecxz
imul
rcll
mov
notb
dec
fmull
out
loopne
rcll
xchg
cltd
jmp
xorl
push
aad
add
insb
adc
data16
aaa
enter
or
jl
and
imul
add
sub
and
data16
xor
cld
adc
mov
and
mov
adc
enter
jge
add
shrl
dec
inc
cld
xor
inc
push
lock
mov
add
repz
imul
jge
jmp
mov
xor
jb
hlt
sbb
mov
pop
xchg
push
mull
iret
movsl
push
or
mov
scas
sbb
xor
push
outsb
sbb
jp
push
mov
push
xchg
sbb
mov
aam
jne
dec
cmc
add
adc
jecxz
add
mov
out
test
test
push
icebp
mov
jae
pop
push
shufps
sbb
pusha
mov
mov
and
lods
mov
std
imul
cmp
jp
push
lods
cmpb
movsb
xchg
jmp
pop
cmpsb
lea
in
push
scas
jns
enter
add
sub
hlt
cld
dec
pop
mov
pop
push
jb
lods
inc
rep
add
adc
fs
inc
push
cmc
out
jmp
cmp
jnp
jnp
sbb
int
jmp
into
out
or
sbb
ds
push
mov
mov
loope
cmp
mov
fsubrs
pop
loop
or
mov
sub
dec
dec
cltd
mov
lret
and
sbb
inc
xchg
mov
out
dec
enter
outsl
jge
enter
xlat
jge
rclb
sbbb
insl
sbb
cmpsl
sbb
scas
dec
dec
sub
add
push
insl
lahf
xchg
sub
shrb
loop
dec
lods
lcall
mov
ljmp
jge
scas
mov
fdivr
popa
aad
xchg
pop
add
adc
mov
rclb
push
lcall
and
fisttps
mov
shr
mov
jns
stos
sub
fisttpl
dec
inc
pop
cmp
cmp
loop
jo
std
jecxz
das
xlat
mov
enter
xchg
mov
add
inc
xchg
jecxz
and
test
mov
xchg
push
xor
mov
sbb
adc
xor
and
xor
xchg
fistl
jmp
or
jb
inc
xchg
call
xchg
aam
jo
hlt
shll
decl
pop
aaa
cli
dec
out
jno
insb
dec
fs
lea
xor
push
lds
rcrb
sub
and
inc
fidivs
mov
cli
xorl
fst
cmp
mov
arpl
mov
sbb
inc
fdivl
int
imul
sub
jmp
lock
pop
add
jns
test
jae
imul
jmp
mov
xorb
xchg
push
rclb
push
in
sbb
xchg
data16
cmp
sub
dec
or
lcall
mov
fmuls
addr16
cmpsl
mov
int
mov
mov
imul
or
jl
arpl
movsb
add
pop
stos
mov
mov
gs
mov
int3
xor
fbld
cltd
xchg
jnp
mov
pusha
ss
jns
in
notb
addr16
dec
int3
xchg
xor
jnp
xor
imul
mov
das
sti
adc
push
dec
arpl
push
cltd
xor
mov
push
jae
inc
psrad
dec
add
xchg
push
dec
loope
subl
sahf
mov
add
arpl
lods
loopne
push
fwait
decb
test
or
subl
cmc
adc
cmp
mov
in
and
emms
aam
inc
repz
fdivrs
hlt
jbe
stos
mov
fisubs
or
andl
fdiv
pop
sub
fyl2x
or
add
andl
cmpsb
mov
mov
ljmp
ja
ljmp
in
add
mov
add
adc
or
push
pop
nop
xchg
std
sub
pop
mov
dec
mov
stos
clc
and
or
bound
test
pop
xchg
sarl
aas
jne
fsubr
adc
pushf
or
out
mov
xlat
sbb
inc
or
daa
popa
cli
test
fs
mov
mov
addb
mov
mov
insb
test
daa
jle
xor
mov
subl
or
pop
jle
es
insl
jnp
rcl
mov
ja
sahf
pop
sti
aad
xlat
mov
arpl
add
add
stos
and
xchg
push
sbb
adc
aam
lods
mov
sti
addr16
notb
mov
lret
jle
inc
mov
xchg
sbb
fs
mov
sub
push
pop
mov
push
bound
and
leave
jg
aam
daa
push
and
add
roll
add
push
test
mov
ljmp
xor
insb
mov
jns
popa
scas
cld
and
ja
jne
dec
cwtl
lods
aas
mov
xchg
divb
mov
add
lock
and
jp
repz
adc
mov
in
pop
cwtl
test
inc
mov
push
ljmp
mov
ret
push
cs
add
outsb
rorl
jnp
imul
sbb
mov
cmc
jno
jl
inc
fnstenv
mov
adc
loop
ret
sarb
jecxz
icebp
adc
bnd
mov
cmp
jmp
imul
or
loop
ret
xor
je
jle
xchg
in
adc
cmp
push
idivb
dec
lcall
push
mov
out
inc
sarb
mov
mov
out
movsl
lret
sahf
dec
mov
clc
cmp
or
or
add
and
aam
jae
and
or
int3
mov
mov
mov
outsb
cmp
shrb
jo
sbb
stos
xchg
push
fldcw
test
inc
adc
imul
decb
pop
fs
jns
dec
adc
adc
ss
in
lret
orb
pop
fs
or
lea
ret
sub
xor
mov
into
in
inc
jbe
adc
cmpsb
add
mov
je
into
scas
mov
lea
andl
mov
jp
pop
xor
mov
xchg
das
frstor
or
ja
sbb
jecxz
sbb
mov
push
stos
test
lret
jo
push
add
inc
pop
mov
mov
jg
inc
mov
or
jmp
faddl
into
stos
xchg
out
outsl
loop
and
leave
cmp
cli
imull
mov
sbb
std
jae
xchg
icebp
cmp
lds
inc
in
fists
fisubrs
xchg
xor
ja
imul
pusha
icebp
cmp
repz
hlt
push
push
adc
fildll
outsb
imul
dec
sub
notl
lods
sub
aam
aaa
xor
jne
cwtl
test
pop
adc
pushf
xchg
outsl
add
mov
ret
xchg
or
fldt
fisttpl
ljmp
cmp
pop
out
xchg
jne
dec
adc
cmp
aaa
cld
pop
push
jmp
dec
mov
jecxz
in
orb
pop
sbb
sbb
orb
mov
sbb
dec
fbld
mov
sub
dec
call
add
fldl
aam
cmp
int3
mov
decb
dec
lahf
je
jg
pop
push
dec
hlt
mov
cmpsl
cld
jnp
jecxz
jb
pop
mov
popa
xor
sbbb
orb
sub
jg
push
jnp
mov
xor
mov
push
loop
cwtl
dec
iret
test
fsubr
dec
fdiv
mov
mov
adc
pop
je
movl
rclb
jle
std
cs
adc
repnz
stos
pop
fidivrl
outsb
xchg
stos
jo
outsl
jge
pop
repnz
pop
add
out
shrl
jno
pushf
xchg
sahf
ret
out
mov
pop
addb
lcall
xchg
fs
gs
lret
test
bound
int
pop
fcomps
call
cmp
in
stos
mov
xchg
cmp
ret
sub
je
out
inc
sar
cmp
daa
xchg
pop
lods
cmpb
push
repz
adc
and
mov
lods
icebp
shl
sti
push
test
shll
fbstp
lahf
stos
add
imul
cmp
jl
sti
mov
push
mov
pop
push
adc
test
sbb
ja
sub
loop
mov
stc
loopne
xchg
jg
sbb
call
mov
adc
pusha
inc
jnp
inc
mov
insb
inc
pop
pop
aas
dec
popl
mov
or
outsb
xlat
clc
jmp
addr16
push
sbbl
mov
sub
push
lret
mov
mov
cmpsl
xor
cs
sahf
sub
xor
push
fmuls
xor
repz
jmp
mov
bound
add
or
leave
pop
push
scas
shr
shrl
xor
ret
out
mov
and
jbe
mov
dec
pusha
push
out
and
outsb
sbb
ret
shll
cmp
sbb
inc
or
jge
int
jno
sahf
jge
xchg
leave
push
insl
jle
push
ljmp
jno
in
call
daa
inc
dec
or
xchg
pop
sub
rorb
add
pop
bound
sbb
cmp
sbb
gs
add
out
js
inc
stos
rsm
sub
xchg
das
cmp
fwait
jb
hlt
cmp
adc
movsb
outsb
jnp
push
sbb
lea
sbb
cwtl
ret
outsl
mov
sub
adc
nop
dec
scas
repz
pop
adc
loope
cmp
dec
cmp
jecxz
inc
and
ror
shlb
fidivl
push
mov
rorl
pop
scas
leave
lds
push
rcll
leave
jecxz
rorb
sbb
mov
jo
cltd
dec
jne
sub
mov
shrl
jnp
out
and
mov
cmp
xchg
inc
pop
ret
pop
jmp
push
mov
cmp
xor
fiadds
xor
int3
xchg
aam
jne
neg
out
rol
push
shl
icebp
jecxz
fsubrl
fcmove
inc
push
bound
aaa
iret
cmp
push
inc
xor
push
lea
mov
jl
loope
mov
dec
dec
mov
popa
andl
push
pop
sbb
fdivrl
mov
add
push
pop
scas
add
mov
mov
sbb
mov
int
mov
push
jmp
or
arpl
xor
cwtl
push
jo
or
sbb
sbb
push
in
jns
movsb
sbb
add
scas
jp
push
jecxz
popf
std
or
sub
lods
les
mov
rorl
adc
out
mov
sbb
cmpsb
xchg
mov
stos
sbb
loop
sahf
mov
xor
push
insl
fldl
push
jae
push
adc
cld
jo
movsb
cmp
jo
fsubs
xchg
pop
inc
ret
inc
adc
fisttps
cmp
xor
sbbl
rcll
mov
xchg
xchg
cs
out
and
fwait
sub
call
or
cmp
hlt
mov
push
mov
mov
mull
adcl
xor
pop
hlt
sub
scas
push
mov
ss
out
pusha
sub
out
fxam
cmovg
mov
dec
and
imul
out
sti
sub
popa
clc
sti
add
push
jmp
mov
cld
pop
ret
push
mov
xor
out
mov
shr
pop
outsl
add
lea
push
testl
fsubr
pop
lahf
dec
movsl
inc
and
push
imul
out
dec
aam
pop
lahf
mov
adc
pop
or
inc
xchg
dec
ret
mov
lock
outsb
mov
inc
fcoms
sbb
jmp
aaa
into
pop
or
push
xchg
xchg
int3
lods
mov
shll
lods
mov
fidivrl
adc
aaa
test
outsl
sbb
das
int
dec
rcl
jnp
popa
clc
pushf
mov
arpl
pushf
dec
jge
aaa
jae
subl
mov
lret
or
iret
or
xchg
int3
mov
and
es
inc
cmp
das
int3
add
andl
hlt
pushf
imul
and
and
test
add
cli
jb
xchg
xchg
xor
fdivs
inc
mov
adc
mov
out
jae
fisubrl
lds
jne
pop
movsb
fwait
pop
jae
push
testl
sahf
mov
mov
into
pusha
icebp
mov
in
xchg
pop
xor
push
adc
cmp
mov
mull
dec
loope
adc
lcall
fldl
out
inc
jp
adc
jae
fcmovnbe
sbb
add
out
call
repnz
sahf
insl
fstps
test
mov
xchg
pop
mov
or
inc
insb
mov
jno
sub
pop
dec
inc
add
stos
xchg
cmp
loopne
sbb
push
adc
cmp
mov
or
mov
inc
aad
xor
dec
pop
mov
add
test
pop
inc
es
ljmp
cmpsb
fnsave
push
aas
sub
das
xchg
lods
mov
insb
add
stos
fsubr
shrb
jo
cli
jl
xor
push
xchg
xor
or
adc
mov
and
add
lahf
mov
je
idiv
or
mov
movb
jle
sub
dec
mov
shr
jnp
xchg
dec
mov
loope
aad
stos
add
movnti
int
cmpsl
stos
cmp
cmpsl
inc
je
adc
mov
pop
push
jle
mov
andl
cs
mov
dec
insl
cmp
imul
push
jle
and
in
mov
and
ds
cmp
rcrl
clc
loop
and
lret
mov
dec
sahf
mov
add
scas
test
rorl
rcrb
jne
fwait
hlt
or
in
dec
frstor
or
fwait
jne
mov
mov
add
add
inc
insb
pop
mov
inc
mov
loopne
ja
push
dec
push
or
push
pop
loope
cmp
adc
notb
push
imul
addr16
push
icebp
push
lret
cli
xchg
nop
lahf
xchg
cmpsb
iret
mov
scas
loop
cld
fwait
jne
fsubs
pop
pusha
test
cmp
fucomp
js
ja
xor
xor
pop
dec
int
sub
in
data16
and
dec
mov
subl
in
std
outsl
add
movl
dec
test
push
xchg
mov
pop
sbb
add
imul
mov
adc
pop
and
outsl
cs
xchg
outsb
int
mov
mov
cltd
jno
push
mov
jl
push
sbb
adc
fstpl
or
push
jmp
imul
ss
or
popf
cmc
mov
out
iret
push
leave
mov
imul
dec
jae
test
mov
xor
not
dec
inc
test
dec
pop
pop
pushf
inc
sub
xchg
jno
outsb
fcmove
aad
rclb
or
sti
xor
sbb
iret
dec
pop
add
jae
mov
or
pop
loopne
and
icebp
mov
xchg
pop
mov
mov
sbb
add
xchg
add
or
jle
and
pop
add
adc
push
inc
jmp
add
inc
shr
or
stc
addr16
and
or
inc
test
ds
mov
push
xor
jmp
jno
sbbl
or
adc
push
mov
jp
add
xor
push
and
mov
pushf
jo
jae
outsb
xchg
addr16
fisubrs
dec
sub
inc
dec
pop
pop
sbb
push
leave
cmp
xlat
jns
in
sub
fwait
fs
dec
test
stos
leave
cmp
or
xchg
and
out
sti
mov
dec
lahf
popf
pushl
call
or
pop
repz
cli
lock
xor
lock
stos
lret
jne
out
test
repnz
adc
or
cmp
xchg
roll
mov
mov
inc
fdivr
aam
cmpsb
or
and
fs
and
xor
xor
bound
inc
lods
je
fldenv
inc
sbbl
cmp
pop
shlb
das
push
lods
mov
test
xor
xor
cmp
mov
cltd
add
pop
jmp
push
sbb
inc
stc
sbb
enter
insl
cmpsb
cmp
xchg
jne
or
dec
cli
ds
and
shr
push
lea
xor
and
cmpsb
ljmp
cltd
leave
mov
enter
push
sub
aas
mov
shlb
leave
idivb
dec
push
jmp
or
jb
int
xchg
push
imul
cli
add
daa
imul
adc
mov
pop
test
outsb
sub
imul
dec
popa
mov
repnz
push
fadds
or
pusha
pop
fisubrl
sahf
sti
loopne
scas
adc
add
xlat
aam
cmp
shl
xchg
dec
pop
enter
inc
lahf
xchg
das
adc
out
insb
test
dec
adc
inc
inc
xor
sarl
popa
or
jb
les
ss
mov
mov
add
movsb
cmp
sbb
mov
sbb
xchg
dec
dec
mov
dec
lods
sbb
push
xor
jp
sbb
es
mov
push
iret
es
lds
stos
movsb
cmpsl
or
pop
jns
adc
sbb
pop
into
jae
or
arpl
cli
xchg
push
test
pop
enter
jl
pop
insb
xchg
add
pusha
xchg
adc
out
xchg
and
daa
ficomps
cmp
add
lcall
lahf
lcall
mov
add
pop
stos
fimull
and
popf
lahf
adc
sarl
aas
negb
out
aam
mov
or
jne
or
daa
cltd
sub
mov
mov
inc
cmc
int
ja
mov
and
xor
push
jp
mov
in
insb
adcb
in
ljmp
into
cmpsb
iret
add
mulb
sbb
lods
mov
push
stc
nop
repnz
scas
inc
sub
or
pop
cmp
inc
or
xchg
cmp
jmp
aaa
mov
pop
add
out
push
call
fsubl
sti
subl
xor
push
icebp
jae
mov
les
inc
nop
aad
add
int3
pop
ja
int3
arpl
das
popa
ss
fcomi
push
mov
push
sub
push
pop
mov
fdivs
mov
add
inc
adc
and
and
cmc
xchg
daa
pusha
mov
test
xchg
aaa
shrl
call
inc
mov
aam
xchg
pop
fcomps
test
repz
and
xchg
loope
in
xor
push
adc
jo
ja
jbe
std
andb
xor
inc
cmp
push
fwait
jno
xor
sti
dec
push
jo
sbb
in
aaa
mov
fdivp
and
mov
test
ret
xor
push
test
xor
adc
enter
pop
inc
test
push
mov
loope,pt
xor
out
push
js
mov
cli
pop
push
xchg
xchg
or
int3
xchg
int3
jae
addl
popa
hlt
dec
push
inc
ja
out
ds
call
mov
jg
cmp
mov
ficomps
pop
push
in
insb
push
out
stc
sbb
ds
sbb
in
and
push
xchg
imul
ljmp
mov
popf
bound
and
pusha
push
xchg
jb
jg
sbb
sbb
xchg
roll
aaa
pop
inc
cwtl
or
dec
cltd
movsb
jnp
pop
stos
emms
jp
sets
adc
xor
test
pop
ss
lods
jno
pushf
test
pusha
mov
rcrl
out
add
scas
popf
xor
adc
inc
or
push
sbb
push
shrb
mov
sub
cmp
cs
fwait
or
jmp
fs
test
insl
in
fidivrs
lds
leave
cmpsl
cli
mov
inc
xor
dec
loope
jnp
sbb
inc
bound
loop
in
lahf
ss
cli
loope
enter
out
insb
mov
lret
scas
or
pop
mov
divl
rcl
lods
mov
push
subb
stos
fstpt
lcall
leave
fsubp
mov
push
and
pop
lods
mov
cmc
in
mov
lea
mov
fistps
inc
aam
and
xchg
adc
arpl
cmc
jb
sbb
lahf
sbbl
add
sarb
adc
xor
push
imul
dec
outsl
ret
add
repnz
and
mov
aas
push
add
adc
push
popf
aaa
push
push
call
xchg
sahf
or
inc
jo
stc
push
icebp
ror
sbb
imul
xchg
cmpsl
scas
filds
and
xor
stos
inc
fnstenv
push
ljmp
pop
sahf
sarb
inc
mov
mov
jne
mov
mov
push
cmpsl
push
push
loope
push
xor
xchg
test
popa
cmpsl
inc
fwait
and
fsubs
into
pop
lahf
lcall
push
mov
pushf
mov
dec
punpcklbw
lock
jmp
inc
sbbb
out
xlat
outsb
xor
testb
push
lods
les
push
and
dec
xchg
xchg
xchg
scas
inc
sub
negl
sbb
mov
shrl
jp
int3
gs
sbb
cmp
pop
ret
fildl
lods
mov
shr
outsl
adc
or
xchg
sahf
mov
cmp
xor
ret
pop
in
fildl
lcall
inc
xchg
in
aam
jbe
movsl
mov
and
sub
mov
xchg
imul
cld
aas
cmp
stos
pusha
fdivrs
pop
xor
push
or
xchg
jmp
xchg
xor
ret
test
jb
cmp
add
inc
fs
insl
mov
adcb
xorb
xchg
ss
xchg
fs
cmp
push
movsl
lds
or
sub
subl
insb
ss
xor
or
push
jmp
aad
xor
xchg
stos
ret
lcall
clc
or
pop
and
pop
cmp
mov
clc
mov
add
jb
mov
lret
xchg
movsb
push
fcmovne
pop
adcl
sub
push
lahf
sti
test
arpl
test
ret
xchg
sbb
cmp
notl
sbb
dec
jae
lret
mov
push
add
cmpl
arpl
xchg
icebp
inc
lcall
and
test
mov
sbb
insb
test
push
cltd
xor
sbb
mov
fwait
pushl
xchg
lret
repz
adc
movsb
pop
lea
jo
or
jo
stc
and
xchg
mov
cmp
test
es
loopne
mov
adc
outsb
clc
push
es
dec
push
sbb
mov
test
cmp
and
pop
and
sbb
jne
cld
dec
scas
scas
jno
xchg
std
bound
into
and
scas
and
loope
mov
enter
out
fisubl
jne
test
lret
cmp
cld
xor
movsb
insb
test
ret
push
push
fdivrl
mov
mov
xchg
cmpsl
mov
lods
fs
pop
xlat
inc
xlat
adc
xchg
cmp
test
sub
mov
sub
jbe
jae
adc
dec
sti
and
xchg
hlt
adc
pop
push
loop
mulb
into
cmovnp
jnp
das
popa
add
iret
dec
cmp
insb
adc
aas
ds
cmp
mov
int3
outsl
cmpsl
sub
out
jae
out
and
cmovae
cmc
outsb
pop
int3
in
ja
cmc
sbbb
outsl
cmp
and
out
push
sbb
test
jns
lods
movl
sbb
xchg
das
or
icebp
mov
xor
pop
mov
cs
lahf
das
repnz
jae
je
mov
inc
xlat
js
push
imul
mov
mov
outsl
mov
lret
mov
test
mov
push
jnp
adcl
shlb
pop
push
dec
popa
jbe
xchg
adc
and
fcoms
fwait
je
ja
or
out
sti
sub
ljmp
and
lcall
rsqrtps
in
cmpsl
xchg
push
sbb
add
sti
cmp
dec
movsl
xor
sub
outsb
nop
sub
pop
cmovnp
xor
sub
push
adc
loope
mov
xchg
dec
dec
loop
out
mov
call
xchg
jge
pop
lds
jae
lcall
push
xor
cmpsl
dec
and
and
clc
or
and
data16
or
repz
push
cmp
mov
xchg
jo
cmpsb
arpl
mov
addr16
pop
mov
out
dec
sub
xorb
xor
jecxz
cltd
mov
rorl
sub
loop
mov
push
adc
lock
push
xor
gs
ret
xchg
and
fdivp
xlat
subl
pop
lods
sub
inc
movsb
ljmp
push
adc
mov
jnp
and
inc
cmp
cmp
icebp
adc
aad
and
pop
sbb
xor
pop
loope
nop
and
aas
repz
xchg
sub
sbb
dec
mov
mov
jg
pop
neg
mov
lret
ret
stos
inc
out
sbb
mov
imul
push
cmpsl
aaa
pop
scas
push
dec
push
outsl
jns
lods
lods
lcall
jbe
js
add
jo
lods
test
adc
xchg
ret
stc
cmc
inc
adc
jge
or
cmpsb
pop
pop
cmp
jle
shlb
scas
dec
in
add
mulb
xchg
xchg
ret
push
inc
stos
jae
adc
push
clc
sub
jmp
jb
inc
pop
cmp
lds
and
push
xchg
cmp
test
stc
es
shl
pushf
enter
mov
sub
out
test
dec
inc
outsl
jae
int
mov
scas
mov
mov
insl
jmp
push
paddd
mov
or
sar
cltd
sbb
rcr
outsb
inc
add
push
dec
sar
push
dec
outsb
add
cmp
mov
xor
sti
or
aad
mov
pop
ljmp
in
cmp
daa
xor
jno
and
adc
cmc
int
shrl
xchg
cmp
mov
lods
mov
pop
mov
loopne
hlt
adc
lds
mov
xchg
xchg
test
fisttps
fwait
mov
loope
testb
scas
mov
and
sbb
js
inc
xchg
sbb
mov
xchg
xchg
push
mov
jg
loope
adc
inc
jbe
lods
es
inc
daa
outsl
out
test
ja
rcll
nop
mov
loope
xor
nop
mov
xchg
outsl
movsl
jae
sbb
cmp
addr16
cld
daa
js
lahf
addr16
add
int3
add
cmp
pop
jo
subl
xchg
mov
mov
cs
testb
pusha
push
test
decw
loope
rclb
mov
jnp
mov
daa
adc
and
insb
push
jbe
imull
call
movsl
push
push
testl
add
push
in
fwait
sti
inc
aam
ret
arpl
lcall
sahf
and
dec
xchg
cmpsb
sbbl
test
outsb
loop
pop
and
rcrl
lock
aaa
shlb
pop
popa
jmp
daa
jl
fildll
dec
cmp
cmp
xchg
fstps
fwait
push
dec
and
sbb
test
jp
das
mov
sbb
mov
pop
insb
sub
push
test
xorl
and
cmp
ror
and
mov
icebp
sbb
pop
in
movsb
repnz
loopne
mov
fcoml
in
shrb
dec
jo
dec
push
aaa
test
push
mov
mov
xor
jno
and
sub
add
mov
arpl
int
pushf
and
in
lret
pop
lock
dec
mov
repz
cmp
outsb
lcall
arpl
mov
mov
xor
data16
inc
push
jmp
loop
sbb
mov
into
data16
pop
adc
outsl
xor
ss
es
cmp
mov
iret
fs
xchg
lock
int
inc
mul
cmpsl
jns
bound
imul
cmp
arpl
mov
popa
stc
and
adc
enter
int3
mov
enter
int
out
in
jo
xor
dec
jae
scas
vpmacsdql
pop
lret
push
jns
xor
push
call
orl
sti
inc
in
push
lcall
push
stos
push
cmove
jb
outsb
fwait
cmova
xchg
and
in
not
fxch
arpl
mov
add
lret
jge
call
popa
add
lods
enter
sub
sbb
lret
sbb
push
mov
jecxz
mov
ljmp
xor
xchg
adc
pop
xlat
popf
shl
jb
outsl
xchg
pop
inc
xchg
inc
repz
clc
das
adc
adc
mov
xchg
xor
arpl
cmpsb
lock
sahf
pop
pop
fistl
mov
fcoms
or
adc
jo
xor
decb
roll
adc
dec
fwait
adc
es
iret
fidivrl
mov
stc
enter
in
pop
lea
dec
cmp
lcall
jae
xor
mov
ret
sbb
aam
gs
cmp
mov
popaw
dec
mov
lock
lret
xchg
dec
sahf
push
je
imul
fldenv
test
in
in
imul
pushf
push
test
adc
or
push
mov
jmp
push
jg
pop
mov
cltd
std
shrb
bound
push
test
add
sbb
push
scas
and
cmp
pop
movsl
push
jbe
push
nop
stos
daa
mov
jmp
jl
es
loopne
mov
aad
popa
cmp
enter
cld
xchg
cmc
sub
daa
cmp
mov
ja
test
subl
adc
inc
bound
or
xchg
or
sbb
mov
mov
mov
sti
and
sarb
inc
push
repz
push
hlt
mov
push
jnp
push
fwait
inc
lock
dec
cmpsb
add
push
or
arpl
mov
shl
shrb
loop
js
ret
sbb
test
push
jg
rol
mov
and
out
hlt
pop
mov
push
outsb
cmp
ficoms
fwait
xchg
cmp
xor
jl
add
xchg
mov
dec
xchg
scas
jno
xchg
and
mov
jbe
pop
outsl
stos
push
fbld
rcrl
pop
jmp
sbb
add
mov
cld
test
andb
jne
dec
pushl
mov
lahf
cmp
lds
inc
jbe
adc
out
sbb
pop
push
scas
add
scas
or
dec
addr16
cltd
jbe
loopne
mov
repnz
and
jb
xor
mov
lock
rol
jnp
pop
xor
pop
pop
testb
jge
mov
mov
xchg
pop
bnd
mov
cmc
dec
jo
imul
or
jns
movsl
push
pop
mov
mov
xor
xchg
ret
popa
jecxz
sbb
mov
and
popf
int3
lods
push
ret
cltd
dec
movsl
shll
into
push
insl
pop
imul
adc
dec
scas
lcall
pop
out
pop
pop
sub
cld
pop
ss
push
cwtl
lea
jo
jmp
in
inc
aaa
dec
mov
iret
push
out
pushf
repnz
pop
pop
xchg
lret
push
adc
dec
mov
movsl
mov
pop
push
pop
stos
xor
xchg
jp
call
jmp
or
mov
or
push
stos
sbb
loope
popf
cli
test
xor
dec
data16
mov
xor
sub
lds
fwait
jnp
pop
xchg
push
inc
or
pop
movsl
dec
pusha
and
xchg
adc
je
test
lahf
and
js
jno
dec
pop
pop
sbb
loope
cmp
inc
mov
xor
std
enter
negl
sbb
inc
insl
gs
xor
call
repnz
and
inc
mov
stos
cmp
and
les
mov
aas
idivb
sarl
in
add
cmpsl
lds
psllw
lret
mov
sbb
scas
rorb
cmpsl
xchg
push
dec
pop
fimull
push
add
mov
sbbl
lock
insb
fdivrl
and
mov
jae
xor
xchg
out
push
lahf
mov
repz
adc
jecxz
or
jae
lahf
pushf
decb
mov
rorb
mov
stos
or
push
mov
cmpsl
cli
or
nop
xchg
shl
stos
jecxz
jmp
int
dec
xor
inc
or
cwtl
dec
out
mov
jmp
icebp
insl
add
adc
mov
lods
mov
push
sub
inc
data16
lret
popa
lret
pop
rcr
or
out
sbb
push
pop
std
push
sub
in
out
dec
out
imul
xchg
mov
add
xor
inc
test
jp
addr16
pop
fistps
xchg
jo
inc
mov
adc
cmp
jno
or
lcall
popf
and
pushw
shlb
jnp
xchg
cmp
mov
jmp
xor
call
cmp
mov
push
mov
jbe
cli
cmpsl
jmp
dec
cmp
stos
xor
sbb
push
popf
xchg
cmp
sti
out
in
test
push
pop
inc
out
lret
jno
or
and
fsubr
sbb
push
inc
lret
fisubs
out
fwait
sub
jns
add
lea
push
je
and
jle
sbb
nop
mov
scas
mov
cmp
clc
or
mov
push
push
adc
sub
sub
nop
hlt
sub
xlat
pop
addb
and
lret
cltd
fwait
inc
mov
iret
sub
sti
movsb
xlat
sbb
dec
insl
mov
pop
loopne
rcrb
lret
adc
je
popa
sub
sahf
stc
cwtl
ret
test
cmp
inc
pop
rorb
ja
mov
xchg
cltd
and
push
icebp
mov
cmpsl
xchg
faddl
add
ret
test
push
pop
lret
xor
mov
out
mov
dec
fsubs
popf
arpl
inc
nop
daa
jb
jae
adc
or
andl
and
ljmp
popf
repnz
popa
mov
push
mov
icebp
in
xor
ljmp
or
jge
lods
arpl
stc
in
shrl
push
push
mov
out
fldt
cs
push
lods
lds
pop
adc
je
dec
jecxz
pusha
mov
dec
push
xchg
lret
in
mov
or
push
shrl
xchg
bound
inc
push
mov
cmp
jl
call
jns
outsl
jnp
push
mov
out
cmp
or
mov
jno
mov
addr16
cmp
xchg
jne
mov
repnz
push
jmp
int
jo
call
mov
jl
sbb
gs
inc
imul
cmp
test
mov
pushf
inc
pop
dec
shlb
dec
insl
ljmp
jns
xchg
stos
sarb
fcompl
add
imul
inc
sahf
faddl
repnz
push
shrl
jne
sub
adc
popa
or
cmp
or
fisttpll
aad
cmpl
and
jge,pn
fdivp
mov
or
fcompl
mov
imul
mov
xchg
cmp
xchg
fdivrl
out
ror
scas
out
or
push
jns
out
sti
lcall
stos
add
xchg
or
leave
xor
sbb
inc
pop
vunpcklpd
into
mov
mov
aaa
push
cmp
testl
test
push
mov
jg
sub
mov
popl
lret
cmp
popa
or
dec
push
sbb
jnp
cmp
loope
mov
mov
inc
call
or
ljmp
sub
aam
inc
pushf
cmp
in
sahf
cmpl
std
sti
sub
int
orb
fidivs
pusha
mov
stos
jns
sbb
sbb
insb
lahf
aad
xor
xor
mov
mov
mov
add
cmpsb
inc
out
push
xchg
mov
loopne
das
mov
in
movsb
push
xchg
add
lret
sbb
cwtl
adc
flds
dec
pop
fsubs
notl
or
mov
sub
xor
data16
mov
inc
mov
int
and
add
jno
mov
adc
mov
loope
and
mov
mov
scas
add
cmp
frstor
xor
fsubrs
push
in
aaa
or
mov
mov
push
add
orl
testb
pop
inc
test
out
mov
popa
sub
and
jnp
rcl
mov
repnz
ficoml
ret
pop
xor
push
fbld
pop
repnz
xchg
push
pop
ds
mov
fistl
enter
pop
daa
dec
ficoms
add
gs
lret
idivb
sahf
fidivs
or
adc
decl
add
idivb
popf
shr
mov
in
adc
stc
clc
push
xor
xchg
jbe
dec
dec
mov
dec
call
fnsave
xor
pop
data16
add
cmpsb
or
hlt
mov
fisttpll
push
and
mov
cmp
loopne
orl
pop
scas
les
pop
ficoms
or
ja
neg
jmp
inc
decb
or
shrl
adc
jnp
mov
jg
xor
push
ljmp
mov
fists
add
lds
lahf
mov
out
cmp
cmp
fisubrs
pop
jecxz
and
fbld
lds
mov
inc
aam
icebp
stc
dec
sub
sbb
inc
dec
mov
dec
cld
pop
shl
test
mov
and
adc
xor
add
lahf
mov
sti
xchg
clc
adc
cwtl
sub
rcr
add
in
pop
mov
xchg
sahf
into
fs
out
aaa
dec
cmp
pop
jmp
and
push
mov
jp
js
scas
mov
push
mov
shll
les
xor
outsl
sbb
arpl
nop
pop
jmp
inc
out
add
jb
lods
out
add
arpl
xor
push
adc
push
mov
lock
mov
jle
push
popf
in
arpl
xchg
nop
and
lret
arpl
popf
stos
cmp
imul
add
sbb
sbbl
ror
push
jg
rcrb
shlb
sbb
pop
sbb
jg
insb
pushw
sti
mov
add
arpl
sbb
out
jl
and
fcom
ret
mov
outsb
rorb
movsl
icebp
push
mov
sbb
sbb
loope
sub
sbb
dec
gs
shl
hlt
insb
push
test
cmp
jp
adc
nop
add
sbb
xchg
out
mov
testl
fmul
cwtl
imul
push
jo
or
jae
mov
dec
mov
into
aaa
fisttpl
fildll
push
inc
lods
jne
fsubrl
or
aaa
cmp
push
push
out
mov
out
jns
jmp
out
push
push
xchg
je
mov
fistpl
adc
cmp
mov
cmc
push
das
mov
dec
and
jb
mov
inc
pmovmskb
inc
in
jg
pop
jne,pt
dec
jnp
fbstp
call
push
lea
and
cmp
clc
je
xor
inc
hlt
dec
shll
in
sbbb
ljmp
jb
dec
int3
enter
data16
jnp
pusha
fs
je
mov
outsl
sbb
js
mov
dec
mov
add
xchg
pop
loop
add
lcall
push
inc
and
mov
in
sub
xchg
aam
shl
xchg
adc
inc
fisubl
xchg
jl
dec
push
test
mov
add
and
mov
flds
loopne
adc
rolb
mov
dec
cltd
jne
and
movsb
mov
vmovupd
xlat
stos
or
sbb
stos
xlat
icebp
sub
aad
lahf
cmp
pop
mov
sbb
inc
and
dec
pop
pop
inc
clc
shl
or
outsb
ret
jle
in
push
sub
ja
adc
mov
pushf
cmp
adc
or
pop
add
imul
xor
jmp
cmp
aas
imul
push
je
dec
dec
and
mov
das
movb
xor
mov
add
std
or
mov
arpl
push
push
lea
iret
dec
and
lea
mov
insb
mov
cmpl
in
sub
loop
push
leave
enter
adc
ficomps
add
addb
rorb
int
push
mov
gs
sbb
sbb
ja
int
cmp
fidivrl
cmp
cmp
imul
aaa
imul
sub
adcl
or
cld
das
aas
adc
out
mov
or
in
and
fnstcw
add
mov
hlt
mov
cltd
lock
fwait
xor
loope
inc
xchg
dec
push
in
push
lahf
into
in
inc
je
cmp
add
outsl
sub
add
xchg
and
push
call
jecxz
mov
scas
jmp
out
add
cs
std
out
inc
xlat
loopne
mov
int
or
sti
in
lods
add
sbb
mov
jnp
ss
scas
movsl
mov
pop
or
adc
pusha
or
xchg
mov
stos
cmp
cmpsb
inc
movsl
inc
mov
or
or
jle
ret
pop
clc
adc
mov
int
rcrb
loope
and
lods
mov
dec
push
adc
das
jle
inc
fnsave
loop
sbb
loop
js
mov
sbb
xor
aas
inc
lahf
inc
push
and
add
fildll
or
add
xchg
aaa
push
loopne
pop
iret
imul
pop
push
xor
scas
pop
push
inc
hlt
in
es
sub
sti
adc
mov
jl
stos
mov
inc
into
inc
xlat
outsl
cmc
fwait
cmpsl
fcoms
ja
mov
aam
and
cld
xlat
outsb
ljmp
jle
sbb
jns
repz
ja
adc
mov
imul
mov
sub
out
mov
mov
negl
jg
add
and
mov
push
inc
ljmp
add
dec
pop
push
adc
insb
mov
leave
out
decb
outsl
out
test
and
mov
sti
xchg
fdiv
adc
test
push
mov
pop
xlat
push
or
adc
lret
xor
fs
jg
arpl
cmpsb
adc
adc
int
pop
stc
cmp
mov
mov
imul
sbb
xchg
add
mov
fwait
andb
clc
sti
xor
push
adc
xor
dec
xchg
rol
repz
push
lods
gs
scas
inc
incb
xchg
jo
sbb
andl
sub
xor
mov
cld
lcall
mov
cmp
popa
xor
mov
mov
mov
fadd
xor
adc
arpl
inc
pop
jno
push
addb
fldl
dec
or
fwait
or
push
test
jmp
or
jo
aad
pushf
sub
xlat
popa
and
pushf
adc
lahf
fldenv
pop
xchg
cli
es
jmp
in
cwtl
add
enter
pop
dec
pop
mov
movsl
jg
jbe
cmp
xor
and
ljmp
shlb
mov
es
les
ret
mov
std
adc
lret
and
xchg
fcoml
cmp
or
inc
dec
sub
sub
shl
push
fs
mov
aas
xchg
inc
pop
shr
inc
sub
adc
or
into
in
jno
xchg
loope,pt
jg
push
movsb
divl
aam
adc
test
mov
enter
mov
adc
mov
repz
mov
sbb
pop
inc
mov
mov
popa
add
mov
lock
test
sbb
in
lods
insb
std
push
jo
sub
mov
push
dec
xchg
or
mov
mov
mov
add
cli
aam
jne
mov
mov
inc
bound
dec
fbstp
dec
in
js
xor
jb
lods
mov
repnz
and
push
mov
xlat
das
stos
js
inc
stos
xor
movsl
adc
jnp
add
in
ja
aas
inc
or
or
cmpsb
loopne
cmc
sub
sbb
enter
ds
dec
xor
adc
lret
shll
sbb
cmp
sti
fwait
aaa
inc
sbb
cmp
pop
adcb
adc
fcomi
jae
shrb
dec
inc
shlb
popf
insb
mov
movsl
cmp
xorb
jle
in
data16
cmpsl
cmp
jle
pop
icebp
bound
pop
fdivrl
and
adc
stc
outsl
pop
movsl
inc
out
mov
mov
movsl
jg
inc
popf
fucomi
stos
sub
insb
ret
xchg
xor
in
scas
fisubl
rcrb
outsb
xor
xorl
in
dec
pop
lods
sub
add
ljmp
lret
clc
xor
jg
into
push
sbb
data16
lret
cmp
cmp
push
jnp
stc
xor
dec
inc
jecxz
xchg
lods
xchg
iret
push
xchg
ja
icebp
leave
iret
pusha
neg
mov
lahf
sbb
add
fisttpll
in
mov
pop
jmp
mov
fstl
cltd
ja
addl
push
arpl
cmpsl
jl
mov
pop
inc
mov
in
adc
jbe
mov
add
es
fsts
push
sub
cwtl
mov
mov
push
fldcw
and
jbe
jmp
aad
pop
or
aas
mov
in
int3
cmc
xchg
decb
scas
adc
roll
sbb
pop
les
mov
test
into
xor
add
inc
cltd
aaa
jecxz
dec
cmp
dec
in
dec
test
je
pushf
dec
jno
jnp
sbb
mov
filds
push
js
push
test
fs
stos
mov
popf
xchg
or
xchg
mov
sbbb
adcl
lods
jae
lods
mov
ret
loope
mov
scas
inc
movsb
pop
sbb
hlt
mull
out
mov
jb
dec
or
sti
or
insl
int3
and
sbb
iret
mov
orl
lret
xlat
push
ss
arpl
hlt
or
icebp
mov
cmp
and
sub
add
dec
divb
pop
aas
dec
std
sub
fcmovbe
sbb
mov
and
adc
mov
sti
addl
dec
cmpsl
mov
mov
mov
ret
sbb
dec
xor
add
cli
xchg
sub
sahf
xor
push
out
mov
scas
mov
mov
lds
aaa
mov
fstpt
adc
sub
push
pop
insb
push
or
mov
pop
mov
ljmp
fiadds
mov
pop
push
in
cltd
int3
mov
test
sahf
push
ss
inc
fistl
pop
test
xorb
adc
mov
nop
test
mov
add
test
cmp
mov
cmp
test
ja
in
push
lret
and
cmp
loop
fidivs
lds
adc
pop
adc
cmpsb
in
cs
lcall
dec
in
or
xlat
cmp
fistps
lea
int
loopne
pop
jg
js
shll
mov
imul
popa
sarl
ret
roll
mov
ret
lock
std
cmc
push
iret
fnstcw
xor
dec
cmp
push
sub
jl
lods
fcmovnu
sbb
pusha
insb
adc
pop
pop
jb
add
lcall
scas
inc
adc
in
and
mov
test
fnstsw
mov
pop
insl
nop
rcrl
mov
mov
in
int
push
outsl
cli
ja
xchg
cmp
cmp
adc
xchg
icebp
push
ja
cltd
xor
inc
jbe
xor
jge
pop
lretw
dec
lods
sbb
decb
stos
mov
xchg
inc
insb
sub
ljmp
repnz
mov
int
mov
inc
cld
cmp
or
cmp
sbbl
stos
adc
jnp
pavgb
cwtl
add
and
out
orl
mov
push
cmp
pop
lcall
cmc
sarb
lahf
push
std
pop
jmp
pop
sub
mov
rolb
hlt
cltd
int3
rcr
xor
js
test
mov
push
mov
pop
xor
call
push
test
jb
outsl
scas
push
lods
adc
outsb
add
mov
pop
hlt
or
add
lea
cmp
mov
daa
loope
das
js
pushf
pop
iret
test
aas
mov
pop
adc
inc
fisubs
hlt
leave
cs
test
sarb
and
xchg
pop
push
adc
out
subb
xchg
arpl
rcll
ljmp
sub
aam
push
pop
gs
dec
jmp
lahf
ss
insb
add
xchg
sub
dec
loopne
mov
push
and
ret
pop
fists
shll
jl
outsb
or
mov
jp
rorl
or
xchg
lds
mov
xchg
sub
cmp
dec
jecxz
sub
jb
shl
jl
push
xchg
sub
add
xchg
sub
jg
mov
inc
pop
divb
add
ja
rclb
and
sub
or
pop
cs
test
out
es
and
dec
adc
int3
jnp
ljmp
repz
call
sub
jnp
orb
repz
cmpsb
or
stos
add
imul
or
jecxz
cmp
js
push
into
jle
push
add
fidivrl
xchg
inc
arpl
int3
stos
xchg
shlb
inc
sbb
and
adc
push
and
loope,pn
fisubl
fcmovbe
mov
insb
sarb
ss
and
or
add
les
iret
push
and
and
rcrb
pop
inc
xor
mov
loop
stc
inc
and
lock
lcall
mov
mov
cs
icebp
popa
dec
aam
rcrb
inc
stc
sub
fstpt
ja
clc
add
fcompl
leave
pushf
jge
mov
mov
cmp
daa
movsl
add
sub
mov
aam
mov
sbb
sbb
hlt
call
push
or
sarl
out
mov
push
dec
mov
test
mov
jns
jae
jg
inc
dec
push
adc
and
ljmp
dec
sub
jns
mov
add
dec
aam
decb
mov
sahf
pusha
and
lcall
sbb
mov
loope
or
out
vpandn
les
cmp
jne
adc
jp
adc
dec
mov
js
mov
pop
jge
push
or
es
push
test
loopne
mov
xor
fs
xlat
pop
mov
dec
mov
sbb
mov
lock
jg
mov
adc
dec
loop
inc
mov
jae
imul
out
in
adc
sbb
pop
sahf
lock
or
cmp
cmc
sub
or
cli
lret
pop
loope
add
sub
ss
hlt
cli
filds
shrl
aas
cmp
int
bound
xlat
add
cmc
add
addb
cmp
cmpsl
push
andb
sbb
jg
out
xchg
cmpsl
sbb
push
popf
fcomps
cld
int3
and
fistps
and
fiaddl
adc
dec
cmpsb
inc
adc
test
cmpsb
or
push
insb
push
repnz
jnp
test
pop
dec
lahf
mov
xchg
pushl
lods
adcl
jle
test
mov
loopne
or
cmp
scas
iret
push
and
add
fdivl
xchg
aad
sbb
mov
fs
int
mov
insb
pop
sbbl
callw
insb
sbb
or
mov
push
shlb
mov
aas
push
cli
cli
and
inc
insb
pushf
mov
arpl
sbb
loop
imul
mov
test
or
ficompl
es
inc
xor
push
enter
subl
ret
cltd
mov
int3
clc
or
xor
mov
dec
out
lcall
add
aaa
in
arpl
aas
sbb
pop
and
scas
xchg
popf
mov
xchg
cwtl
mov
fnsave
arpl
cmpsb
lods
ljmp
lock
into
fstl
test
ss
cmp
inc
mov
shrl
insb
sti
adc
pop
add
push
xlat
push
xor
shrb
and
lret
mov
test
in
mov
data16
insl
xor
das
and
pop
es
cmp
push
pop
xor
and
mov
and
inc
mov
imull
insl
mov
hlt
aam
stos
sahf
leave
sub
outsl
jg
xor
test
fnstenv
sub
xchg
movsl
idivl
xlat
out
mov
aam
dec
in
push
mov
scas
subb
inc
lds
stos
dec
data16
sti
and
cltd
jno
test
les
xor
or
mov
pushf
lods
jb
fistpll
negb
loopne
inc
inc
and
bound
cld
dec
xchg
mov
lcall
inc
scas
cli
mov
sub
cmp
adc
adc
mov
mov
shrl
aas
or
imul
pushf
test
inc
push
cmp
push
jg
repz
jnp
pop
xchg
jle
into
pop
jne
hlt
pushfw
xor
push
ret
repz
clc
and
sbb
mov
mov
mov
cli
mov
mov
aad
and
push
xchg
xor
mov
push
mov
stc
imul
icebp
hlt
adc
test
and
out
lods
mov
jno
jae
inc
dec
outsb
aad
jmp
mov
xor
sub
movsb
stos
inc
mov
cli
dec
popa
push
adc
lock
xor
stos
push
loope
int3
inc
adc
jne
jecxz
aas
pop
js
mov
sbb
push
popf
je
push
ljmp
push
dec
nop
repz
sub
adc
mov
sahf
scas
scas
dec
rcrb
andb
push
or
mov
push
testl
lahf
cmc
daa
mov
sahf
sub
lea
ss
dec
jmp
orb
insl
scas
inc
lahf
push
cwtl
sub
push
jne
outsb
mov
mov
dec
dec
push
repnz
pop
loop
xchg
sbb
mov
pop
ja
rcrb
out
cmp
inc
lahf
pop
adc
aaa
mov
sbb
jb
pop
cmp
and
mov
ror
mov
pop
mov
mov
mov
cmpsb
jp
mov
in
shll
sbb
inc
mov
and
xchg
mov
roll
sub
aam
ja
fs
mov
pushf
xchg
mulb
ja
jne
imul
sbb
call
xchg
mov
sbb
fists
iret
jnp
xchg
loope
stos
adc
lahf
xor
cld
js
addr16
cwtl
dec
pusha
xchg
arpl
cltd
xchg
lret
push
sub
push
push
mov
xchg
out
mov
cmp
add
scas
xchg
inc
rcrl
loop
lea
push
hlt
int3
flds
lcall
jbe
outsl
and
ret
mov
push
mov
sbbb
xchg
xor
cmp
dec
push
jbe
xchg
cmp
push
jg
mov
notl
add
out
pop
bound
cld
lods
sti
sbb
inc
sysret
ficoms
scas
jb
jnp
pop
jb
xor
mov
add
aas
idivl
sbb
call
aaa
pop
test
mov
adc
sbb
and
das
cmp
pop
sub
jecxz
and
adc
mov
add
push
mov
xchg
cmc
cmp
jle
add
xlat
pusha
ds
nop
iret
mov
cmpb
jge
dec
xchg
sub
ret
sub
jle
ret
repz
sub
mov
pop
lcall
dec
std
aaa
repnz
mov
aad
jmp
into
cmp
fs
mov
inc
pop
xchg
popf
jnp
jne
jle
popa
mov
add
mov
testb
jnp
cmpsb
lods
mov
pop
imul
fldcw
movsb
cmp
int3
std
mov
dec
dec
lea
mov
ja
out
aad
push
flds
inc
scas
lock
xlat
jp
mov
negl
daa
mov
out
inc
fdivrs
ret
lds
xchg
scas
mov
push
dec
and
cmp
push
adc
popf
mov
mov
loopne
push
repz
jbe
xchg
fwait
inc
push
xchg
dec
dec
stos
clc
mov
jns
aad
cmpsl
push
ret
add
popa
stc
or
orb
movsb
sub
shl
loope
jmp
mov
sbb
dec
shlb
xchg
mov
pop
lods
add
lods
sbb
dec
push
sbb
xor
test
test
push
or
cmp
fadds
scas
dec
out
sub
jnp
jmp
add
inc
gs
pop
jl
and
pop
out
cld
out
sbb
pop
scas
pop
cmp
inc
cmp
shrb
lahf
mull
adc
and
push
ljmp
call
mov
and
jo
and
jge
push
inc
mov
or
push
popa
sbb
mov
cli
sub
sbb
notb
scas
mov
fdivl
cmp
ja
or
dec
fldenv
and
sub
movsl
out
test
mov
fidivrs
stc
aam
fldenv
sbb
rcll
dec
xor
sbb
pusha
xchg
sahf
xor
cmp
mov
aam
push
jae
cs
cmp
push
dec
imulb
out
in
divb
lret
idivl
ret
xchg
fidivs
add
inc
cwtl
dec
mov
pop
data16
fisubs
int3
sbb
enter
pop
dec
lods
add
loop
and
push
lret
out
andl
jl
xor
jp
stos
mov
jecxz
mov
lret
cmp
cwtl
lods
loope
fildll
movsl
cmp
adc
and
sub
jae
cli
or
loopne
daa
inc
fdivrl
ret
pop
imul
jge
xchg
push
push
scas
xor
mov
fcompl
loop
xor
push
adc
mov
ja
xchg
es
mov
xlat
repz
cmc
mov
xlat
adc
cmc
fisubs
faddl
mov
mov
push
repnz
jns
pop
stos
adc
cmpsl
js
sub
insb
mov
add
in
popa
and
add
pop
imul
mov
pusha
lcall
cmp
loop
shr
mov
js
and
and
cmp
and
xor
movsl
lock
stos
stos
dec
fwait
cmp
imul
fdivs
add
pop
roll
jnp
mov
pop
mov
push
in
jb
ja
je
adc
mov
lods
popa
cmc
or
push
outsl
mov
fstps
lock
imul
sbb
add
popl
lock
gs
cmpsb
sbb
and
cmp
mov
cmc
push
inc
pusha
fcmovu
jp
add
cwtl
lahf
sbb
cmp
pop
push
shr
jl
dec
aas
jb
mov
add
fcoms
sub
sub
dec
jg
jl
bnd
sbb
dec
inc
aaa
jge
push
sbb
cmp
fwait
and
lret
jae
stos
push
std
xchg
js
jmp
outsl
jnp
pop
mov
or
sti
xchg
dec
les
std
imul
sti
jb
aad
stos
sahf
loope
xchg
adc
sub
jge
iret
inc
mov
inc
outsw
xchg
mov
jp
je
dec
fsubs
inc
xchg
testb
loop
lods
push
fisttps
cli
adcl
stos
push
sbb
mov
nop
or
out
xchg
cwtl
xchg
ja
or
add
xor
iret
adc
push
jp
pop
std
popa
jnp
cmp
mov
cwtl
jl
mov
loopne
lea
outsl
sub
jle
stos
ror
cmp
lds
lock
int
decl
test
imul
xchg
and
and
stos
jbe
inc
inc
andb
push
hlt
jb
xchg
insb
jmp
and
inc
sub
je
mov
push
push
loopne
or
ss
mov
inc
out
pushf
imul
sub
push
mov
ljmp
mov
scas
pop
imul
test
pop
outsb
lods
or
roll
ss
jne
pop
dec
push
jmp
lcall
push
push
je
clc
shrl
add
icebp
or
fbld
mov
jb
adc
test
push
inc
rorb
xor
les
fisttps
xchg
mov
mov
push
inc
jmp
leave
es
or
or
ss
jbe
mov
xchg
mov
in
imul
mov
mov
mul
pop
and
lock
and
push
aad
and
sbb
lds
stos
mov
push
leave
jl
push
xchg
int3
or
inc
loopne
jne
or
jae
addr16
fxtract
mov
mov
adc
jmp
or
fwait
repnz
lret
jns
and
pop
mov
xor
dec
cmp
xchg
xchg
leave
das
lods
inc
pop
imul
outsb
sub
pop
cmc
sub
mov
jae
lret
in
in
ror
fdivs
int
pop
adcl
jle
add
cmpsb
bnd
popf
hlt
test
les
xlat
xchg
outsb
mov
mov
pop
test
sub
xor
fsts
dec
sbb
mov
test
fidivs
pop
jl
dec
scas
jle
lcall
lods
cmp
and
scas
mov
cltd
jb
push
xchg
inc
popa
add
popf
and
fldcw
jmp
or
jo
dec
test
cmp
or
stos
scas
inc
fsub
andnps
movsb
into
aas
mov
imul
lods
push
idivl
dec
dec
repnz
sbb
out
cs
hlt
and
es
mov
mov
sub
inc
int
mov
out
notl
int
stos
mov
rcll
std
mov
ds
fisttps
inc
sub
push
popf
addr16
andb
xchg
jne
mov
sbb
jns
sub
imul
add
lret
or
mov
mov
aam
pop
in
jecxz
mull
int3
fdivl
fbstp
lods
fnstenv
cmp
mov
loopne
movsb
lea
sub
scas
xchg
mov
loopne
vmaxpd
lahf
adc
pop
mov
movl
dec
in
add
movsl
xchg
insl
sub
mov
testb
cmp
xor
inc
outsb
adc
pop
sub
cld
or
or
push
insl
movsb
xor
push
jns
int
iret
adc
dec
push
push
jl
fdiv
dec
xchg
sti
xchg
push
sub
icebp
scas
jnp
loopne
test
push
sti
test
enter
inc
or
pop
push
in
dec
and
data16
push
loope
mov
sti
mov
pusha
pop
js
rol
gs
add
cmp
shrb
pop
pop
lcall
in
shlb
inc
cli
addr16
cli
lret
gs
inc
and
jecxz
cmp
bound
jecxz
aas
jo
pop
xor
data16
lods
testb
dec
inc
pop
inc
cltd
push
xchg
test
pop
dec
mov
dec
divl
sub
dec
nop
addr16
stos
pushf
sbb
mov
in
or
mov
mov
out
pop
pop
adcb
jo
sbb
dec
lahf
stos
jns
xchg
and
mov
pushf
aad
test
fsubrs
inc
push
fsubrs
in
jmp
inc
loope
in
jae
add
push
or
rclb
push
loopne
adc
inc
xor
xchg
inc
mov
int3
call
or
cmp
sub
fldenv
jae
push
cli
mov
cmp
pop
lods
inc
mov
mov
not
lods
movl
ss
push
push
stos
pop
cli
xchg
mov
fistl
jle
aam
push
xor
add
adc
popl
xor
movsb
jne
add
xor
popf
gs
cltd
pusha
std
xchg
pop
in
xchg
out
nop
pop
push
testb
pop
aam
jno
movsl
rcrl
cmpsb
in
push
shrb
das
fwait
inc
in
push
rolb
iret
jne
inc
pop
dec
push
test
push
shlb
mov
fs
dec
mov
xchg
mov
xorl
in
in
mov
outsl
mov
jnp
cli
add
cmpsl
jo,pt
inc
lods
out
lret
and
js
and
sahf
test
xchg
dec
pop
jnp
sbb
cmp
pop
fistps
shlb
sub
dec
pop
add
mov
push
mov
test
int
pop
push
sub
push
adc
dec
mov
test
xchg
inc
mov
mov
dec
std
xor
enter
out
mov
sti
call
hlt
xchg
mov
jle
dec
cmp
pop
addr16
loop
sarb
add
mov
adc
xchg
repnz
jbe
test
jmp
pop
sub
rcr
std
jns
xor
stc
pop
jle
adc
pop
inc
daa
jecxz
or
lea
outsl
mov
scas
in
sbb
popf
jns
iret
addr16
adc
push
mov
push
adc
orb
dec
cwtl
sbb
lods
andps
fwait
xor
sbb
fldenv
fcomps
insl
rorl
xchg
aaa
xlat
dec
jnp
sbb
cmpsl
dec
dec
shrl
movsb
push
or
cmpsl
jae
imul
and
mov
mov
aad
aam
push
sbb
mov
push
xchg
sbb
mov
test
xor
add
push
out
pusha
int3
add
popa
push
in
xchg
and
stc
ja
inc
sbb
and
call
loop
xor
jmp
mov
cmp
sbb
or
movl
jb
pushw
cltd
xchg
ds
xchg
rorl
mov
fsubs
sbb
lret
or
mov
dec
cmp
pop
sarl
fs
pop
in
xor
aas
cmp
test
cmpsl
ret
aad
pop
cmc
mov
cld
sub
lds
or
sub
in
stos
aaa
cli
pop
or
dec
mov
lods
and
test
fwait
xchg
popa
jo
mov
in
mov
and
in
call
cli
roll
repnz
xchg
lds
xlat
adc
cmp
mov
data16
rorl
mov
sti
fidivrs
test
xor
aad
testb
inc
fcoms
mov
jp
ja
loopne
pusha
add
cmp
das
cmpsb
xchg
cmc
cmp
xlat
movsl
dec
mov
pop
pop
lods
shlb
sahf
rcr
jmp
xor
sub
mov
mov
sub
loopne
andb
mov
jp
lcall
jp
sbb
or
mov
xchg
daa
enter
dec
xlat
jge
cmp
mov
ret
xchg
jb
jmp
add
adc
movsb
xor
cltd
push
or
add
cmp
dec
pop
js
sar
or
xor
or
dec
mov
daa
data16
aad
ljmp
jmp
xchg
rcl
sbb
xchg
movsl
test
movsb
imul
mov
xchg
push
aad
mov
mov
dec
and
push
outsb
add
adc
cmp
out
andb
scas
cmp
push
sti
arpl
lods
mov
mov
je
jle
sub
jnp
cwtl
out
clc
fmuls
push
jmp
bound
jno
xor
mov
add
mov
lock
bound
bound
movsl
push
stc
sbb
stos
cmpb
lcall
mov
std
sarl
xor
in
adcb
ficomps
insb
cmp
outsl
push
or
outsb
sub
daa
fs
inc
out
jle
ja
xchg
mov
jl
fdivrs
mov
push
insb
cmpsl
or
ss
push
jb
mov
sub
stos
dec
les
loop
stc
dec
mov
pop
xchg
cmp
std
fmulp
fwait
inc
pop
sub
in
push
outsb
xchg
push
cmc
mov
sbbl
xchg
xchg
cmpsb
cmp
into
outsl
cmp
les
sbbl
cmpsl
sub
xchg
dec
loope
sub
inc
jbe
push
nop
gs
mov
mov
fldcw
mov
mov
sbbl
fbstp
popa
add
pusha
test
in
pop
mov
aaa
call
testb
sahf
xchg
mov
int
pop
mov
mov
les
sub
ror
lock
mov
mov
aad
mov
int3
repz
sbb
arpl
nop
hlt
iret
lea
vpaddb
and
fstl
jp
and
jns
dec
xchg
or
xchg
outsb
inc
push
push
inc
mov
mov
fs
aam
cmp
ja
inc
fcoml
xchg
jne
sbb
loopne
btc
lret
pushf
test
mov
mov
int3
push
ss
and
jb
cli
daa
pop
arpl
mov
into
and
jnp
xchg
jle
add
ret
adc
out
call
jge
cwtl
xor
lods
pusha
ss
jnp
std
mov
dec
test
or
inc
call
or
movsl
mov
fldcw
insb
int3
ret
out
dec
push
dec
packuswb
jmp
mov
jnp
add
and
sub
sbb
add
and
adcb
pushf
mov
rcrb
scas
enter
xchg
add
xchg
imul
xor
imul
or
nop
cmp
xor
xchg
inc
fildl
std
lret
lods
vpsrlw
rcr
rcrl
iret
gs
cmp
add
mov
or
or
stos
pop
ja
mov
out
inc
xor
arpl
pop
pop
mov
add
and
in
iret
and
push
jno
int3
push
in
std
call
adc
dec
xor
call
sbb
inc
bound
or
jg
pop
xor
pop
jle
push
mov
shlb
inc
push
rcrl
imul
sbb
push
jbe
pop
push
ljmp
jno
xchg
and
or
out
nop
sub
or
mov
xlat
mov
sub
xor
arpl
lret
jnp
and
inc
push
out
gs
dec
mov
push
cmp
clc
mov
mov
sbb
lret
in
cli
pop
sub
fmuls
repz
sub
in
jmp
push
sahf
testb
adc
std
insb
sub
andb
mov
movsb
inc
or
out
jl
outsl
test
sbb
or
pop
pop
lods
lock
insl
adc
mov
fbld
pusha
dec
les
dec
into
gs
out
sbb
cwtl
outsl
jnp
push
push
fdivrl
testb
xchg
mov
scas
loopne
mov
pusha
add
xor
jb
sub
xor
or
notb
cmp
adc
jmp
mov
mov
mov
ffree
pop
addr16
lds
dec
pop
loop
cld
icebp
leave
shll
imul
dec
mov
push
insl
out
fsubl
inc
mov
pop
push
mov
jae
mov
mov
pushf
ficomps
ljmp
mov
out
cmp
lcall
in
inc
loop
push
and
fidivs
push
push
push
sbb
add
cli
test
mov
or
mov
cli
rcr
roll
out
repnz
xor
out
les
push
push
jmp
xchg
mov
and
jl
xchg
push
insb
mov
inc
adc
dec
or
mov
jp
xorl
or
sbb
nop
insl
cmp
push
dec
fsubrs
or
or
std
stos
cwtl
and
mov
test
and
adc
lret
jg
std
jle
das
stos
dec
inc
stos
push
xor
pop
sahf
push
daa
mov
mov
push
push
scas
out
je
xor
aaa
jno
ss
stc
mov
ljmp
stc
test
call
es
jmp
sbb
pusha
xchg
dec
int
jmp
jbe
add
push
mov
dec
dec
inc
pop
jae
push
and
ret
int
imul
fwait
jp
xchg
hlt
sub
push
loope
sbb
mov
jecxz
stos
xor
mov
andl
jmp
pop
mov
mov
pop
adc
aam
daa
fldcw
xor
sub
adc
ds
into
or
sahf
pop
repz
clc
test
mov
bound
pusha
aad
fldt
cltd
out
push
out
mov
inc
es
lcall
in
xor
pop
mov
dec
es
adc
pop
inc
sbb
rcrb
out
repz
and
and
in
xchg
imul
sbb
frstor
mov
pop
cmp
out
stc
push
xchg
dec
add
jae
sbb
mull
and
int3
mov
xchg
mov
imul
lahf
lods
movsl
arpl
or
lds
loope
cmpsl
push
aad
int3
mov
push
push
cli
andnps
lahf
mov
das
cli
enterw
xchg
loopne
fisubs
out
xor
xchg
sub
push
leave
jbe
ret
jp
std
nop
dec
sbb
out
mov
pop
aam
adc
sub
mov
dec
jns
xchg
mov
popa
dec
mov
sub
cmp
adc
lahf
movsl
jbe
pop
xor
pop
jnp
mov
pop
cmp
ret
mov
lds
repnz
out
push
and
and
fldt
int3
jns
or
xchg
mov
sbb
mov
lock
pusha
lahf
dec
and
xchg
mov
inc
int3
arpl
jge
pop
ljmp
rcll
lods
cmc
comiss
or
rcrb
xchg
adc
mov
and
iret
cmpsl
ret
add
inc
add
popa
xor
pushf
jno
push
ret
jbe
sbb
mov
arpl
mov
inc
loope
cmp
mov
bound
xchg
xor
sub
cmp
repz
popa
mov
adc
xchg
mov
dec
hlt
orl
xor
pop
inc
sbb
sub
mov
mov
push
xchg
ss
inc
and
in
adc
jecxz
idivl
ficoml
mov
popa
jb
mov
dec
and
aaa
inc
stos
cmp
out
jmp
pushf
negl
sub
and
stos
fsub
fnstcw
cld
pop
inc
lea
adc
aad
aad
dec
enter
mull
jle
cmp
cltd
out
push
rcrl
mov
les
jae
insl
ret
loope
imull
dec
loope
push
xchg
ja
leave
jmp
das
in
ljmp
cmp
rol
stc
popf
or
lcall
jp
adc
push
outsl
sbb
push
dec
inc
vcomisd
xchg
out
fidivrl
mov
or
lock
jno
push
sbb
push
aad
mov
andb
out
notb
pop
js
jb
add
adc
sbb
mov
cmp
sub
adc
addl
out
mov
xchg
sub
or
outsb
add
xor
pop
mov
fisttpll
inc
adc
stc
inc
test
push
lods
test
out
test
rcrl
insl
stc
mov
das
ret
pop
pop
mov
sub
cmp
add
pop
lahf
xchg
jecxz
movsl
sbb
inc
adc
mov
aas
or
add
mov
jge
push
nop
mov
fdecstp
or
pop
sbb
pop
lcall
outsb
out
inc
mov
scas
adc
ss
insl
xchg
mov
add
pop
sbb
lcall
shrw
pop
bound
mov
shl
mov
pop
bound
pop
mov
aam
mov
xchg
push
bound
xchg
mov
shl
jp
xchg
lret
mov
rorb
jbe
jae
add
push
ljmp
cmpsl
cmp
sarl
pop
xchg
bound
mov
rol
pop
pop
xchg
push
mov
push
fwait
das
inc
sbb
inc
push
and
push
inc
xchg
test
cmpsl
mov
sbbb
pop
push
sub
dec
inc
insl
lret
mov
mov
sbb
dec
adc
mov
insl
push
outsb
cwtl
push
sub
enter
pop
and
fpatan
sbb
mov
sti
shl
fs
push
stos
ss
xor
sbb
adc
into
in
mov
stc
xchg
push
in
or
mov
enter
push
fisttps
inc
jmp
xchg
pop
stos
pop
cmpsb
sub
loop
mov
ljmp
adc
jge,pn
inc
mov
dec
jle
sbb
outsb
cmpsb
fsub
insl
mov
fiaddl
lea
pop
cli
test
sti
or
mull
or
pop
jo
cmpsl
sub
pop
es
or
cmp
pop
addr16
and
insl
xchg
stos
and
jecxz
mov
dec
loopne
stos
in
sbb
xor
inc
xlat
inc
adc
push
stos
jnp
ret
mov
leavew
mov
arpl
inc
fcomps
or
pop
sti
icebp
decb
sub
mov
ja
adc
fnsave
or
and
sbbb
dec
dec
jnp
add
movsl
ds
fisubrs
inc
pop
add
xor
bound
jl
adc
cwtl
sub
xchg
popa
cmp
adc
lahf
out
fs
jg
incl
add
test
push
pusha
add
repz
lds
mov
xor
cli
or
popf
cmpsl
xchg
dec
mov
test
pop
pop
cmpsb
daa
adc
sub
mov
subb
outsl
sbb
fcomps
mov
arpl
add
jo
cmp
iret
aas
or
xor
sbb
aas
out
push
out
leave
sub
std
push
cmpsb
jle
xchg
mov
or
pusha
stos
mov
cltd
pop
cmp
dec
jno
xsha256
cmpsb
push
sbb
sub
test
dec
jecxz
jg
mov
mov
sub
add
arpl
push
std
mov
das
jbe
mov
add
mov
aad
or
iret
sub
loop
mov
std
or
iret
jmp
loop
and
mov
arpl
or
iret
sar
loop
hlt
dec
mov
arpl
shlb
jecxz
adc
or
mov
lahf
ds
ss
into
dec
mov
jle
add
xor
verr
fwait
movsl
movsl
ljmp
jl
movsl
frstor
sbb
mov
jg
leave
pop
fs
scas
pop
sbb
add
mov
lods
ja
xchg
xor
and
push
repz
aad
loopne
cld
adc
cmc
cmp
mov
and
push
xchg
jae
xor
xchg
pop
xchg
push
ficoml
jmp
push
jp
lods
pop
mov
sbb
cmp
and
fwait
adc
dec
jnp
cmp
adc
mov
lret
and
les
mov
mov
push
mov
and
in
mov
enter
orb
cmpsb
jae
and
and
dec
cmpsl
jns
test
mov
pop
dec
add
xchg
push
call
push
fwait
cld
adc
fimull
pop
aaa
jmp
pop
or
mov
add
aad
cli
adc
insl
mov
and
cmp
orb
in
adc
sub
push
jne
mov
shrl
or
insb
xchg
clc
adc
add
sti
mov
xlat
into
jb
push
fsts
dec
ljmp
incb
fsubr
sub
and
data16
mov
pop
loope
loope
decl
add
mov
in
orl
sbb
or
xchg
js
iret
scas
js
loope
out
xor
and
cld
sub
fwait
aas
test
xchg
pushf
mov
sub
test
bswap
mov
std
xor
loopne
stos
mov
daa
mov
out
scas
mov
add
fdivs
cmp
aaa
dec
ss
out
rcrb
inc
jb
out
mov
repz
fcoml
ret
adc
dec
mov
pop
jbe
inc
jge
mov
pop
addl
inc
sub
mov
sarb
xchg
lods
jge
lret
out
shrb
jo
adc
and
dec
sbb
out
insl
add
fwait
mov
mov
dec
movsb
jge
mov
retw
sbbb
ret
cmpsb
jnp
outsl
xchg
or
mov
and
addl
fidivrl
mov
es
aas
fs
jo
and
xlat
clc
xor
jecxz
subb
leave
lahf
mov
paddusb
jecxz
push
ds
pop
mov
push
les
sbb
bound
or
xor
test
ss
mov
inc
pop
cmp
pop
adc
sub
add
mov
pop
or
icebp
fcoms
adc
leave
adc
aaa
mov
movsb
inc
jmp
inc
mov
push
xchg
jns
xchg
pushl
hlt
fmull
xor
push
aam
xor
pushf
scas
sbb
ljmp
dec
cmp
fistl
lds
and
pop
inc
sub
mov
xchg
enter
cmp
ficoml
cmp
adcb
add
mov
fiadds
push
mov
cmp
sub
cmp
add
sub
mov
push
xchg
cmpsl
scas
aas
les
or
test
xchg
aaa
xor
repz
mov
stos
push
sub
mov
cmc
adc
movsl
dec
cwtl
call
sbb
cmp
inc
shll
jle
negl
in
movsb
mov
jg
sbb
addr16
jl
jg
cli
lea
mov
jg
mov
aam
cmp
scas
jecxz
insb
nop
shr
inc
rolb
ret
int
aas
pop
jae
repnz
push
das
pop
cmp
int
ss
cmp
inc
jecxz
cmp
add
mov
jg
sbb
popa
les
push
adc
daa
test
jg
test
lds
je
and
outsl
fdivs
cld
xchg
lock
mov
les
xor
inc
cld
in
icebp
movsl
adc
notb
jle
sbb
mov
and
sbb
orb
or
andb
clc
mov
mov
ds
leave
push
je
rorl
fisubrl
ret
sub
pop
xor
leave
popa
lods
fstpl
add
je
mov
sbb
test
lret
data16
sub
lret
cs
icebp
mov
dec
dec
into
scas
mov
push
push
cmp
aaa
daa
mov
icebp
test
jns
sbb
scas
nop
fs
inc
mov
aad
hlt
jp
inc
and
push
and
jp
dec
cmpsl
shrb
icebp
enter
pop
dec
rorb
ja
dec
pop
fcmovb
pop
addl
lods
jmp
adc
test
fldenv
inc
cld
mov
clc
push
push
push
push
sbb
cld
sbb
push
xchg
push
scas
mov
push
sbb
xchg
push
mov
mov
je
mov
pop
fdivl
fnstsw
xchg
push
repz
xchg
lcall
ret
int3
mov
ret
or
mov
mov
in
push
xor
andb
xchg
mov
jo
loop
testl
pop
mov
push
jmp
mov
mov
arpl
inc
cmpsb
mov
sub
repnz
inc
fsub
add
jae
jmp
sub
xchg
mov
mov
add
jae
or
xchg
jns
or
in
cmpsb
lock
mov
pop
mov
xchg
nop
rcrl
loop
pusha
add
lahf
pop
or
or
mov
stos
mov
fsubr
inc
adc
mov
insb
jmp
mov
cld
insl
lret
pop
mov
push
scas
mov
cli
pop
imul
and
js
adc
int3
shr
out
shrb
cmc
jg
jmp
or
repz
mov
mov
test
xchg
mov
pop
insb
imul
fwait
pop
repz
push
into
mov
xor
jns
and
jge
mov
hlt
int3
inc
jge
dec
lahf
ret
xchg
push
loope
push
je
lds
jge
mov
scas
fimull
cld
scas
cmp
js
xor
js
cltd
mov
loopne
pop
mov
mov
aad
pop
sub
push
mov
sub
cli
ljmp
adc
xor
je
nop
and
dec
orb
sub
stos
sti
xchg
lods
and
cld
incl
lret
cmc
push
std
xchg
add
push
in
std
and
sub
push
in
inc
lock
and
jae
dec
and
pop
push
adc
les
rolb
icebp
mov
aad
push
xchg
cmc
or
decl
xchg
cmpl
ss
push
sub
push
leave
jne
stc
xorl
les
sub
jecxz
aas
out
push
push
mov
cld
push
les
sbb
jne
test
testb
mov
in
decb
fldt
dec
gs
ret
and
push
adc
adc
mov
lods
ret
ficoms
xchg
cwtl
xchg
rolb
pop
aam
gs
mov
ds
jnp
mov
stc
out
jo
inc
inc
shr
mov
pushf
xor
cwtl
push
or
sub
movsb
repnz
sbb
rclb
rcrb
mov
pop
repnz
rorb
cltd
sbb
aas
cmp
mov
std
dec
ja
add
pop
fistpl
pop
cmp
dec
out
notl
in
or
mov
sbb
arpl
inc
jg
scas
enter
lods
data16
jecxz
jl
lods
pop
xor
rcll
jbe
cmc
inc
inc
daa
sar
jno
aad
sub
cmp
inc
add
sbb
pop
test
inc
arpl
mov
mov
push
add
jb
daa
inc
xchg
mov
xchg
bound
dec
flds
add
jl
sub
sti
imul
push
xor
test
idivl
cmp
push
cmpsb
push
adc
lods
cmp
fiaddl
shrl
test
shrb
rolb
out
jns
aad
cmp
cmp
and
out
idiv
mov
mov
aad
mov
mov
dec
sti
jbe
cmp
imul
clc
movsb
push
cs
and
jns
in
and
sub
or
push
push
jmp
lods
aad
es
xor
lods
outsl
or
add
lret
jle
cmc
es
push
cmpsb
mov
sbb
mov
icebp
test
mov
gs
fistl
mov
bound
ret
and
fadds
jbe
scas
sub
popf
inc
int3
fdivrs
push
arpl
mov
fsubl
push
decl
inc
je
lods
add
add
cmp
inc
pop
in
jmp
xor
add
fisubl
xor
pop
repz
dec
jp
lret
mov
movsb
outsb
inc
jle
ljmp
xorb
lock
cli
jns
ret
xchg
aaa
push
adcl
cwtl
jae
xchg
pop
cwtl
dec
pushf
imul
push
xchg
sbb
mov
xchg
and
mul
imul
inc
aas
push
adc
sub
aaa
andb
push
loop
sub
pop
clc
jne
movsb
jge
cmpsl
pop
pushf
into
loopne
sub
mov
fsubl
outsb
sbb
aad
jae
sti
jg
or
imul
je
jl
push
push
inc
aam
cmp
jnp
pop
and
sub
sti
or
push
mov
sub
dec
in
cltd
lods
mov
gs
sub
mov
or
stos
mov
sti
shrb
lods
mov
movsb
mov
push
xchg
mov
sbb
fcompl
mov
pushf
loope
leave
mov
aam
sbb
pop
dec
fwait
mov
dec
out
jmp
shll
push
or
loope
popa
push
pop
fimull
icebp
lock
inc
ficompl
arpl
mov
pop
shrb
testl
xchg
cmpb
outsl
scas
cmp
or
mov
xor
mov
int
test
xor
popa
xor
cmp
mov
mov
pushf
lock
outsl
cmpsb
add
add
xchg
fcomi
clc
inc
push
movsl
pop
lret
loop
repnz
mov
aad
or
pop
xchg
mov
inc
mov
outsb
fmull
cmc
cmp
sbb
mov
xchg
jns
dec
sarl
jb
xchg
bound
mov
clc
adc
loope
subl
jb
and
cli
push
mov
ja
lods
adc
mov
mov
pop
sbb
jno
dec
push
pop
push
cmp
sub
cmp
dec
cli
pop
mov
xchg
xchg
mov
int3
or
in
push
ficompl
jo
pop
je
lea
sub
or
inc
scas
dec
sbb
push
or
ss
sub
fdiv
push
push
or
pop
push
adc
inc
inc
xor
push
arpl
inc
subl
lret
mov
mov
cwtl
pop
lds
mov
mov
lea
cmp
cmc
test
mov
cli
add
test
lret
adc
cltd
shl
gs
je
mov
insb
fsubrl
bsf
shl
pushf
or
xchg
cmp
sbb
inc
inc
and
stos
rcrb
mov
jae
rcrl
scas
loopne
jge
jns
lods
fildl
lret
lret
sbb
jns
sub
pop
les
adc
cmp
loopne
sbb
mov
sbb
repz
adc
adc
xor
and
loopne
popa
push
inc
cli
js
ret
loope
add
xchg
ss
repnz
or
xor
dec
ss
push
movsb
andb
mov
aad
jp
outsb
adc
cmpsb
aam
mov
scas
inc
shlb
add
loop
mov
xchg
adcb
pop
cs
scas
nop
mov
mov
shr
push
insl
iret
mov
rorl
add
and
hlt
fwait
push
jecxz
data16
bound
jns
mov
push
cwtl
fcoml
dec
jns
and
sub
ficoml
or
mov
sbb
fiadds
pop
cmp
in
cmp
sbb
cmp
lahf
push
fcoms
cli
dec
cmp
daa
cli
dec
mov
mov
out
add
gs
jg
negl
negb
lret
test
pop
cmp
pusha
sub
sub
dec
shrb
and
sarb
xor
es
mov
mov
imul
pop
in
cld
jp
sub
stc
cmpsl
sub
arpl
clc
sti
ret
mov
std
pop
jp
push
adc
testb
fmuls
insb
scas
mov
and
jb
test
mov
or
lea
inc
and
icebp
lods
jl
test
xchg
add
xchg
pop
fnstsw
cs
das
sbb
outsl
sbb
cmc
out
mov
fistl
and
int
mov
popf
xor
push
clc
cmp
and
mov
jecxz
inc
jmp
sti
bound
adc
rol
test
lods
ss
fbstp
dec
es
sub
pop
lods
sub
mov
repnz
shrb
fwait
insb
xor
pop
ds
adc
mov
sbb
mov
fs
jae
xchg
in
jl
mov
xchg
test
movsl
xchg
loope
inc
and
sub
idiv
fsubrs
out
adc
push
pusha
mov
sub
push
mov
xchg
jg
clc
lea
lret
cmp
push
cmpsb
mov
es
and
sbb
imul
arpl
enter
mov
mov
mov
lahf
or
decb
cltd
js
xchg
xor
mov
mov
in
or
out
test
icebp
jbe
dec
mov
out
aad
inc
mov
idivb
xchg
mov
ret
sbb
std
icebp
fwait
jne
faddp
lds
scas
in
stos
sbbl
inc
arpl
inc
adc
and
xchg
sbb
jae
aaa
rorb
std
or
fwait
dec
xor
mov
dec
mov
jecxz
dec
push
jle
mov
pop
je
adc
jo
adc
lahf
out
stos
mov
adc
pop
sbb
stos
push
dec
xchg
xor
xor
push
int
xchg
sub
cs
in
mov
xor
repnz
cmp
lcall
icebp
fwait
call
xor
lock
ret
pop
stos
and
cmp
adc
push
dec
dec
pop
jae,pn
out
jge
pop
mov
mov
jns
adc
cld
push
add
xor
lods
fucomi
cmpl
scas
notl
push
mov
add
outsb
pop
aaa
jbe
out
sub
lahf
addb
incl
jbe
fsubrs
les
insl
je
xlat
jmp
loopne
pop
and
fsubr
xor
xor
dec
into
adc
int
int3
insl
aas
push
cmpsl
pusha
fistl
push
je
loope
xchg
mov
inc
push
jmp
in
pusha
sti
inc
cwtl
stos
mov
rol
fwait
cmpsl
popa
or
or
mov
test
jbe
stc
sbb
sbb
mov
nop
mov
inc
jmp
inc
mov
imul
testb
ret
hlt
dec
mov
xchg
jg
sahf
in
ss
lahf
rorl
sub
dec
loope
mov
pushl
popf
xchg
icebp
adc
inc
aas
stos
dec
adcb
jae
int3
rcrb
aam
inc
push
add
mov
fnsave
xor
stos
aas
mov
stos
inc
je
push
sbb
fmul
flds
mov
js
cmp
or
stos
mov
popf
jno
sahf
or
inc
push
and
xchg
cltd
fistps
loop
pop
cmp
add
mov
xchg
dec
inc
mov
insl
sbb
test
fs
lahf
dec
test
pusha
mov
fucomp
mov
int
adc
aas
popa
movd
jp
mov
test
call
insb
xlat
mov
outsb
or
hlt
mov
mov
leave
add
insb
push
loop
aad
movsl
mov
cmpsl
mov
mov
fbld
mov
xchg
xchg
cmp
jl
in
dec
jge
mov
nop
pop
test
pushf
or
pop
and
jle
xchg
mov
xchg
fdivrs
out
dec
pop
pop
imul
ja
fwait
iret
scas
mov
aad
sbbl
jg
mov
enter
cs
mov
xor
std
movsb
xchg
mov
in
arpl
push
inc
and
jnp
js
and
mov
sahf
addr16
push
mov
adc
xchg
push
pushf
cmp
add
lret
push
in
movl
inc
cvttps2pi
call
xor
es
ret
aaa
incl
in
sub
push
scas
inc
mov
into
rclb
jne
pop
mov
mov
mov
cmc
icebp
inc
mov
xchg
gs
xor
add
push
das
mov
xor
cmpsl
sub
pusha
or
fwait
mov
sti
movsl
push
xor
mov
scas
mov
decb
nop
inc
pop
mov
jmp
lea
cmp
nop
sbb
inc
in
popa
push
inc
sarb
inc
and
mov
push
inc
jl
dec
add
movsb
test
cli
into
fistps
cmpsl
cs
inc
ror
inc
cmp
jns
test
fnsave
pop
push
or
fidivrl
repz
popa
and
mov
push
pop
int3
stos
or
xor
cmp
cmp
cmp
pop
mov
cmp
ss
stc
aam
xchg
xchg
adc
decb
cmc
fldl2t
push
jle
jecxz
pop
inc
sub
loopne
xchg
imul
faddl
add
or
and
cld
outsl
mov
outsl
add
lahf
pop
ret
pop
lds
repnz
mov
in
aas
loope
inc
add
shlb
fnstenv
fwait
jge
aas
ret
xor
or
in
call
sub
cmpb
sub
cmc
fisttps
ljmp
mov
dec
and
std
xor
addr16
test
out
mov
movsb
fldt
pop
mov
flds
movsb
and
loop
hlt
mov
mov
iret
ds
inc
lods
gs
mov
push
adc
jne
pushf
repnz
lods
mov
ljmp
pushf
xor
push
pop
das
mov
mov
fisttps
cmpsb
cmp
shld
mov
lret
ret
add
outsl
sub
shll
cmp
pop
insb
cld
sahf
cmpsl
out
xchg
inc
jo
jae
cwtl
outsl
cmp
idivb
xlat
push
in
enter
std
loop
cmpsb
sub
ss
mov
les
xlat
or
xor
loopne
out
xchg
pop
lret
jnp
mov
push
insl
xor
push
inc
inc
mov
cmp
sub
sub
lods
into
cmp
dec
clc
or
iret
in
clc
addr16
out
dec
test
pop
shlb
push
outsb
xor
xchg
cli
jne
dec
push
movsb
loopne
in
insl
push
mov
and
xchg
rclb
adc
insb
mov
and
popf
sbb
loopne
mov
inc
cld
xchg
int
imulb
notl
sbb
cld
push
xor
pop
in
sbb
insb
rorl
dec
aaa
cmpsb
sub
lods
push
les
ficomps
sub
push
jne
sub
cmp
mov
cli
sbb
mov
push
jmp
xlat
pop
mov
mov
in
jbe
mov
stos
nop
daa
and
sub
in
je
fcomip
aad
xchg
xcrypt-cbc
cmpsl
push
jns
movsl
cmp
loope
and
ret
lock
xor
cvtps2pd
andl
sbb
lret
dec
loop
fs
mov
repz
pop
mov
adc
push
lds
shll
rclb
cmp
add
pop
jge
xchg
xor
inc
mov
push
sbb
aas
data16
inc
pop
mov
lds
std
xchg
mov
and
test
stos
mov
lods
pop
mov
inc
jo
call
stc
leave
call
jge
lods
test
int
fisubs
pop
and
aam
imul
mov
or
cmp
out
push
sub
adc
jmp
pop
aaa
mov
ret
jo
ror
outsb
inc
into
ljmp
rcl
inc
xchg
sub
lea
out
pop
dec
cli
mov
sub
cmp
sti
push
and
in
inc
repnz
xor
xor
rclb
test
stos
jmp
or
jle
mov
aam
int
dec
fnstcw
add
lret
sarb
ss
loope
xchg
push
xchg
push
inc
lods
push
movsl
ja
ja
loop
in
adc
and
fcoms
in
stos
cmpsb
fistps
test
das
daa
inc
add
jmp
jae
arpl
in
xchg
mov
hlt
sbb
pop
dec
loop
dec
jne
out
xchg
and
xchg
test
fisttpll
mov
inc
xchg
mov
fld
mov
push
leave
push
sbb
sub
bound
jmp
jb
fidivl
cmp
arpl
mov
xchg
in
enter
pop
mov
fidivrl
insb
mov
adc
lcall
test
push
xor
cmc
jmp
push
jg
daa
enter
xchg
mov
push
aaa
repz
test
fiaddl
cmpl
nop
call
inc
and
cmc
dec
out
add
jmp
test
test
imul
in
dec
mov
mov
and
inc
call
sbb
rorl
add
ds
add
inc
aas
xor
xchg
or
pop
js
js
and
loopne
xlat
hlt
sarl
sbb
mov
lahf
repnz
int
cmc
push
fwait
movhps
lcall
adc
cmp
aaa
aam
jne
pop
or
cmpsl
inc
push
mov
mov
cmpsb
cmp
mov
loope
mov
sti
leave
cmpsb
cmp
adc
data16
pop
jmp
popf
stc
mov
cmp
jne
sahf
xor
imul
inc
fs
push
jo
add
jle
sbb
pop
pop
repnz
adc
inc
push
sbb
shrl
mov
jb
int3
mov
jge
push
outsb
push
jmp
xor
pop
lret
in
in
outsb
ja
popa
jno
mov
jge
xchg
outsb
pop
pusha
testl
jle
ret
mov
jle
sub
das
scas
xchg
mov
sahf
jb
push
and
dec
mov
mov
les
inc
ja
data16
lods
cwtl
leave
int
je
and
xchg
sub
mov
jge
les
cmpl
or
sub
popf
sbb
pop
dec
mov
sub
les
mov
or
jge
addr16
jae
sbb
pop
dec
enter
shrb
ret
cmpsb
mov
movsl
cmp
aad
imul
lea
ss
sti
pop
jge
dec
cmp
ret
ljmp
mov
and
push
mov
or
push
sbb
dec
je
fisubl
jle
fsubrs
fs
xchg
sti
mov
lock
push
movsl
sbb
inc
and
dec
mov
jle
scas
test
cmpl
or
in
push
mov
es
les
divb
inc
test
xchg
sub
lret
bound
rcrl
or
jmp
dec
jecxz
sbb
dec
xchg
sub
sahf
sub
lock
imul
repz
lret
sti
repz
and
cmc
mov
test
outsl
lds
jmp
mov
fimuls
mov
ljmp
dec
dec
lods
pop
sahf
fisubrs
imul
pop
sbbl
cmp
fisttps
adc
add
lahf
sbb
add
jo
hlt
mov
outsl
outsb
add
or
mov
stc
xor
loop
scas
out
xchg
pop
imul
ss
icebp
mov
inc
sbb
jno
fwait
xor
mov
inc
sbb
pop
sbb
outsb
cmp
jl
in
add
add
adc
je
setge
test
mov
data16
xchg
xchg
push
push
lods
mov
shl
movsl
adc
sbb
or
jbe
xchg
sub
push
adc
fmuls
xchg
pop
sahf
call
xor
adc
call
mov
push
ss
jne
mov
popw
mov
sti
adc
sub
push
in
sub
rclb
mov
mov
data16
xchg
ljmp
les
jno
xor
je
push
mov
in
fiaddl
adc
das
push
push
movsl
mov
mov
jno
sahf
fbstp
add
nop
aaa
icebp
jne
daa
pop
mov
mov
shrl
lahf
jne
int
rclb
mov
sbb
hlt
mov
scas
adc
rorl
jg
lds
jb
fistps
daa
addb
xchg
xchg
sub
loopne
call
loop
lcall
icebp
pop
inc
fisttpll
cltd
cwtl
das
int3
ret
repnz
push
jmp
push
xorl
popa
mov
xchg
sub
rcrb
mov
mov
std
popa
shrb
sub
pop
addl
xchg
sub
cmp
imul
jo
mov
xchg
mov
jno
mull
ja
mov
shlb
mov
jb
repz
jns
dec
lods
push
cmpsb
cmp
stos
fisubl
jns
push
sti
xchg
dec
jp
aas
stos
fiaddl
scas
push
es
lods
fsts
sti
mov
push
out
dec
mov
xchg
fildll
push
add
mov
mov
cmp
sub
mov
xlat
outsb
cmp
jmp
push
sbb
xor
ds
pushf
xor
mov
popa
clc
aas
dec
xchg
sub
sbb
sahf
xor
aaa
pop
into
gs
out
pop
fwait
les
push
lds
push
popf
mov
iret
popw
pushf
out
test
pop
or
xor
in
cmp
aad
and
mov
dec
loopne
stos
adcb
repnz
xor
add
xchg
fs
inc
sub
jbe
xchg
lret
bound
cltd
xchg
xor
pop
cmc
in
mov
mov
mov
or
shrl
stos
hlt
mov
icebp
ret
pop
and
push
jmp
cmc
icebp
mov
mov
in
jecxz
or
das
pop
in
push
add
inc
fisttpll
mov
aas
clc
icebp
pop
hlt
and
mov
pop
movsl
shlb
adc
inc
pop
mov
imul
add
mov
js
test
and
cltd
in
out
and
popa
clc
sbb
adc
cmpsl
inc
xchg
sub
xchg
in
cmc
adc
pop
cmc
movsww
xchg
into
mov
or
or
sub
pop
add
or
scas
push
mov
xchg
jo
cltd
jg
int3
and
push
push
insl
add
je
std
test
jno
int3
jbe
and
test
mov
std
fwait
inc
fmul
and
xchg
fwait
xor
xchg
int
and
popf
push
pop
ja
mov
rclb
jno
ret
adcb
out
xchg
int
pop
add
sbbb
push
call
cmp
pop
adc
jp
shrl
add
mov
dec
dec
addr16
xlat
fdivl
mov
int
inc
xor
fs
xchg
mov
or
loopne
mov
or
push
mov
or
ret
mov
repnz
imul
das
loop
fnstenv
cmp
cld
jo
or
fmul
rcrl
lods
inc
js
imul
mov
arpl
cld
hlt
cmp
and
xor
dec
inc
jg
je
jle
sahf
xchg
popf
xor
mov
iret
popw
or
aas
xor
das
mov
gs
or
sub
push
imul
movsb
movsl
and
div
xor
sbb
dec
dec
jnp
jl
cmpsb
mov
iret
roll
lock
adc
jbe
js
f2xm1
cltd
cltd
mov
test
out
inc
fcomps
je
inc
ds
cmp
xchg
out
push
les
scas
inc
adc
leave
pusha
xor
push
and
mov
movsb
in
test
roll
sbb
daa
cmpsb
mov
js
xor
scas
cltd
sti
adc
iret
aas
push
add
cwtl
scas
push
and
jecxz
aas
sub
jne
andb
jp
cli
in
jmp
and
mov
ss
arpl
push
test
into
inc
fdivrp
fistpl
adc
xchg
push
xor
mov
mov
sbb
adc
out
inc
xor
jae
lret
icebp
mov
stos
shrb
xor
cmc
mov
push
adc
jae
jmp
cmp
push
jg
mov
js
cwtl
push
ljmp
jae
and
and
xchg
jl
xchg
scas
pop
adc
jb
popf
mov
and
sahf
test
stos
or
or
inc
pop
mov
iret
mov
fisubrs
xorb
idivb
push
ljmp
xor
es
add
mov
lock
and
and
or
js
scas
mov
orb
dec
lds
in
or
mov
les
rcrl
dec
mov
test
sti
mov
shrb
add
or
mov
test
add
jne
subb
out
push
jae
xchg
cs
ds
xor
arpl
inc
mov
mov
outsl
divl
inc
ja
mov
mov
es
xchg
dec
jae
jns
inc
jge
pop
inc
mov
roll
repz
xor
push
or
in
dec
push
repz
lret
jae
das
aaa
sub
cmp
xchg
sub
mov
loop
push
mov
imul
fwait
inc
ret
push
and
inc
jae
std
nop
sbb
test
fdivrl
or
fiaddl
imul
push
adc
push
cltd
mov
sub
mov
inc
jo
lds
aam
xor
xlat
xchg
sub
or
adcb
add
add
add
popa
adc
dec
pop
clc
xor
outsl
aam
xor
es
mov
imul
nop
lahf
push
sub
xor
daa
pop
dec
lds
in
cmp
arpl
add
ret
das
inc
fisubrs
xchg
roll
popa
int
adc
xorb
daa
test
aas
push
push
aas
jl
sbb
in
add
leave
jle
loop
movb
aam
or
push
or
sub
lahf
ss
push
pop
arpl
aaa
pop
add
add
loope
sbb
sarl
cli
aaa
mov
push
decb
outsb
push
jno,pt
xchg
cmc
push
lea
bound
jmp
xchg
mov
test
xor
iret
pop
test
dec
pop
adc
cltd
movsl
push
lods
push
shll
fnstcw
mov
out
sbb
int
ret
dec
subb
cmpsb
mov
out
loop
loope
xchg
xlat
cmc
cmp
adc
cmp
lods
aad
push
cld
fcoml
and
stos
data16
ljmp
jmp
mov
xor
xlat
sub
inc
outsb
scas
rorb
clc
out
xchg
enter
add
in
icebp
leave
push
lds
xor
xchg
fdivrs
test
int
cmp
mov
fbstp
cmpb
sti
cmp
call
mov
adc
insl
sahf
cmp
adc
mov
popl
push
popa
sbb
add
outsb
in
cmp
sub
cmp
mov
test
aam
push
hlt
stos
pop
in
imul
aaa
jb
orl
add
shrb
lock
dec
shrl
dec
pop
aad
pop
dec
gs
sbb
imul
jl
ljmp
cld
add
subl
xchg
xchg
pushw
mov
sbb
push
into
push
pop
in
mov
pop
cmpsl
outsb
clc
data16
lds
pop
testb
xchg
mov
jmp
jp
test
sub
fwait
xchg
pop
jecxz
inc
bnd
imul
xchg
test
cwtl
xor
mov
sub
daa
fildll
cli
ss
and
jl
jmp
into
sbb
dec
scas
mov
repnz
ror
imul
fiaddl
inc
add
xor
lcall
arpl
mov
les
or
fs
mov
jae
cltd
dec
xchg
ret
pop
cmp
jge
lds
fs
fisttpl
pop
stos
mov
cmc
dec
rcl
out
adc
cmp
ffreep
insb
cltd
rcrl
pop
ret
jnp
int
xchg
dec
pause
pop
mov
arpl
outsb
icebp
mov
rorb
xchg
mov
pop
sbbb
out
test
mov
push
jnp
ret
xor
sub
xor
sbb
mov
lock
jae
push
das
mov
pop
addr16
les
xchg
xor
dec
mov
adc
pop
inc
arpl
add
std
sub
and
dec
jbe
in
inc
cmp
je
push
fisttpll
or
ja
add
pop
popf
movsl
mov
add
mov
add
mov
insb
sub
mov
xchg
dec
cmp
mov
psllq
rorb
ljmp
sbb
out
popf
or
frstor
idivb
call
pop
mov
fisttpll
pop
fmull
outsb
inc
mov
jbe
cmpb
cs
test
pop
and
out
xor
mov
sub
lret
into
aaa
jp
dec
dec
fdivr
xchg
movsl
insb
mov
push
in
dec
mov
outsl
call
jg
ljmp
xchg
cmp
adc
sbb
pusha
or
inc
fdiv
sbb
inc
jmp
inc
push
sub
pusha
clc
aaa
into
inc
test
mov
push
mov
enter
fnstsw
movsbl
jl
xchg
jg
or
outsb
mov
xchg
xor
test
and
add
inc
popf
leave
mov
or
shrl
add
das
in
pushf
imull
and
adc
push
push
insl
mov
pop
mov
cmp
cmc
js
dec
ds
adc
je
xchg
inc
rolb
dec
jl
fdiv
jno
mov
loop
ljmp
push
es
cmp
std
in
shrl
cmp
jecxz
loope
sarb
mov
cmp
das
jecxz
lea
jp
scas
scas
jb
nop
mov
cs
mov
push
mov
or
mov
cmp
outsb
xchg
sub
pop
cli
sub
cmc
mov
dec
int
cmp
adc
jns
sarb
jge
fcoml
mov
stos
push
jecxz
xchg
mov
or
or
cli
aam
stos
dec
loope
mov
inc
adc
imul
jno
data16
jg
jns
in
and
fcoml
sub
push
mov
lds
movsb
pop
mov
loopne
mov
inc
scas
test
cld
inc
mov
andl
in
xorl
iret
mov
std
daa
add
xor
ja
in
test
cwtl
test
rorb
mov
xchg
mov
insl
mov
nop
xlat
cmp
orl
push
jle
cmc
inc
pusha
add
dec
mov
sub
cmp
sbb
cld
push
cmp
jp
push
add
lcall
and
gs
insb
dec
and
mov
push
xchg
inc
mov
bound
and
xchg
outsb
aad
or
repnz
mov
fimuls
adc
mov
adc
sbb
shll
loope
adc
ja
xchg
ja
outsl
push
scas
xor
sub
sbb
mov
jmp
add
jge
xchg
mov
cmp
mov
scas
je
sbb
arpl
xor
and
mov
test
add
sahf
pop
mov
mov
xorb
scas
mov
mov
stos
fsubrl
ljmp
mov
sbb
out
mov
aam
xor
jecxz
mov
out
push
sarb
cli
sub
in
jmp
inc
pushf
push
dec
mov
adc
adc
ficoms
pushf
xor
ficomps
in
cmp
outsl
push
jmp
or
xchg
inc
lock
inc
mov
mov
arpl
lcall
fistl
push
inc
fnsave
xchg
jo
repnz
sarl
pop
mov
loop
cmp
nop
daa
lahf
inc
mov
outsl
shlb
dec
dec
cltd
imul
mov
and
data16
jp
jns
mov
add
dec
xchg
outsl
push
stc
push
or
pop
jl
sbbb
push
imul
pop
xor
jns
xorl
pop
cmpsl
imulb
clc
pop
pushf
mov
mov
test
aas
repnz
scas
cmp
dec
loopne
outsb
pop
rclb
cmp
push
cmp
push
daa
cmp
fwait
jbe
std
dec
pop
maskmovq
mull
sbb
inc
ficoml
lret
pop
jbe
test
ret
sahf
and
scas
jp
pop
mov
push
add
mov
cmpsb
dec
pop
mov
in
pop
fs
jbe
mov
lock
xchg
and
cs
fstpt
add
cmpsl
mov
out
mov
call
jmp
shll
movb
or
js
push
jmp
stos
cwtl
inc
ret
and
add
xchg
mov
or
pushf
push
push
push
or
dec
xchg
cmp
and
rorl
imul
mov
and
jb
mov
mov
cmp
jbe
std
dec
cmp
out
pop
xor
add
xchg
pop
out
test
sbb
push
sub
ja
leave
cmp
lea
dec
cmp
call
pop
pop
xchg
das
dec
rcrb
jnp
insl
and
sahf
lcall
push
mov
mov
adc
lahf
mov
pop
loope
mov
adc
lret
adc
push
loop
mov
and
call
or
out
pushf
out
dec
and
cmp
je
sub
xchg
xchg
mov
mov
inc
cli
into
jbe
aam
mov
aad
mov
push
cld
movsl
sahf
jg
and
adc
cmpsl
aaa
cli
sub
cmc
iret
das
mov
in
adc
xchg
or
adc
xchg
mov
fildl
or
inc
mov
sbb
movsb
pop
loope,pt
in
add
int3
arpl
xor
cmpsl
jmp
push
int
repnz
out
test
pop
bnd
cltd
xchg
xor
or
sti
jp
aam
int
mov
sub
ljmp
or
jne
push
lods
fisubs
in
sbb
out
insl
mov
cmp
mov
adc
cpuid
stos
lds
adc
repz
dec
add
inc
into
inc
push
inc
fstpt
lret
popf
sbb
mov
mov
mov
lret
inc
mov
fcmove
xchg
mov
lods
repz
lret
mov
mov
sahf
mov
repnz
jge
int3
dec
mov
dec
sahf
mov
hlt
cmpb
xchg
sbb
xchg
pop
movsl
sbb
repz
popf
push
shll
and
cltd
or
inc
nop
mov
stos
ja
lods
arpl
jl
insb
aam
cmp
xor
xchg
cmp
push
jbe
sbb
and
adc
push
insl
rorl
stos
pop
mov
pop
aad
jno
pop
mov
pop
sub
jg
mov
imul
xchg
pop
cmp
add
pop
pop
pop
call
aas
xchg
call
sub
or
aam
loopne
and
sbb
subb
xchg
dec
fbld
addr16
stos
daa
adc
mov
mul
jle
loop
pop
push
push
fyl2x
mov
push
ret
dec
dec
sub
cmp
sbb
pop
mov
in
xchg
in
xchg
jnp
add
mov
lret
sbbl
mov
dec
xchg
es
orl
push
xchg
ljmp
jno
bound
psrlq
jle
sub
popa
das
enter
ljmp
out
inc
xlat
push
mov
or
lea
jle
and
jmp
in
loopnew
fcom
and
cmp
sarl
inc
adc
insb
gs
roll
cmpsb
jne
adc
dec
or
nop
mov
jb
popa
dec
jbe
or
xchg
pop
jl
fs
out
xor
adc
sbb
sub
sub
pop
shrl
mov
cmpsl
rolb
cmpsb
data16
cltd
xchg
mov
mov
or
je
enter
sbb
jb
mov
js
in
add
popf
adc
mov
pusha
lret
pop
lret
inc
mov
xchg
push
push
mov
rorb
int
loopne
fdivs
in
fidivs
in
stos
sbb
lods
stos
call
jno
lret
iret
and
out
jp
mov
and
repnz
mov
ret
push
pusha
lret
insb
mov
shll
or
inc
arpl
lock
dec
ret
enter
xor
imul
mov
stc
jl
mov
scas
push
loop
pop
mov
in
xchg
pop
rorl
mov
fstpt
add
test
subb
imul
imul
ja
jmp
lahf
xchg
push
inc
add
lods
mov
and
push
ror
sub
push
popf
shrl
vunpcklps
inc
mov
popf
xchg
cwtl
call
js
mov
mov
jmp
dec
mov
scas
aas
pop
mov
int3
or
leave
sahf
mov
inc
mov
ds
jle
gs
mov
adc
jnp
cmp
mov
fsubs
in
test
dec
loope
xor
sub
cmp
shll
adc
out
in
push
mov
icebp
mov
rcr
dec
fxch
pop
rcl
rcll
adc
or
add
repnz
dec
and
cmp
syscall
std
fwait
dec
out
test
add
scas
jnp
jmp
inc
pushf
cmpb
pop
shll
mov
xlat
test
lea
inc
es
addr16
rolb
nop
daa
nop
imull
xchg
and
cwtl
xchg
in
js
push
mov
dec
ret
and
inc
mov
out
cmc
dec
cmp
pusha
mov
fiadds
jae
loop
jg
rolb
adc
data16
cmp
xor
xchg
jbe
add
sub
jmp
das
xchg
xor
mov
add
loop
cmp
daa
mov
pop
scas
adc
negb
test
cmp
mov
repnz
lods
pavgw
mov
adc
adc
jg
shrl
add
rorb
cwtl
nop
sbb
lea
xchg
imul
scas
jnp
das
dec
sbb
iret
cmp
cli
pusha
mov
std
xor
and
push
cmp
scas
inc
push
mov
ret
inc
pop
icebp
mov
loope
add
movb
aad
add
dec
fdivr
dec
mov
fdivrp
pop
rol
int3
push
out
aad
icebp
mov
ljmp
mov
or
sbb
jb
lcall
scas
in
jg
jnp
fimull
in
inc
es
cmp
iret
xchg
icebp
das
add
pop
push
mov
std
jmp
and
fsubl
fstps
das
jo
repnz
xchg
lret
jno
movsb
dec
bound
cmpsl
push
push
push
fimull
inc
lahf
fwait
dec
inc
lods
pop
push
jle
xchg
inc
dec
loopne
jecxz
mov
cs
pusha
lods
std
insb
push
jmp
sub
aas
insl
add
jmp
and
cmpsb
mov
dec
push
jns
fdivl
cld
cmp
std
and
jbe
data16
decl
cld
insl
insl
adc
aas
sub
or
sbb
repz
jo
push
cmp
stc
xor
add
mov
lea
push
sub
stos
orl
lahf
push
rcr
mov
mov
mov
sbbb
xlat
dec
rol
sbb
push
sahf
lds
out
fists
stos
inc
fmull
fmuls
mov
jmp
rcll
pop
out
mov
xlat
ret
ret
stos
rcr
ds
int
mov
je
jo
iret
ss
movsl
lret
push
call
mov
addl
sub
clc
jg
dec
pusha
cmp
adc
mov
lock
mov
test
in
lcall
aam
jecxz
cmp
popf
xor
js
mov
mov
jno
dec
movb
jge
xchg
xchg
fcoms
sbb
pop
aad
push
inc
ret
sub
sahf
push
ss
xor
pop
inc
push
adc
insb
inc
xlat
outsb
jne
hlt
sub
in
lret
inc
mov
in
lods
jbe
in
dec
ret
mov
nop
mov
dec
popa
scas
pop
je
roll
dec
in
push
cmp
dec
subb
dec
es
mulb
jbe
ret
pop
pusha
in
adc
lahf
scas
push
or
addr16
xchg
mov
and
sub
mov
push
in
rorl
push
sbb
xchg
add
jmp
ss
dec
dec
sahf
outsb
mov
ja
dec
sub
inc
movq
arpl
xchg
cs
hlt
pop
mov
push
test
call
jae
jmp
arpl
movb
cwtl
addr16
push
push
and
mov
rolb
lock
arpl
ljmp
or
cwtl
push
xchg
jne
shrb
sub
ret
imul
insl
cmp
cmc
jl
xchg
lods
cmp
or
call
sub
mov
loope
pop
sub
pop
cmp
jns
sub
int3
mov
lcall
mov
push
lcall
bound
jae
cmpl
sub
xchg
test
sbbl
dec
xchg
outsb
cmp
dec
xorl
pop
andl
xor
add
xor
out
pop
rolb
mov
add
xchg
xchg
sub
sub
sbb
or
cs
outsb
mov
div
cs
pop
mov
sbb
stos
dec
ret
or
out
xchg
sub
mov
dec
mov
cltd
into
jno
into
adc
jp
add
gs
test
inc
sbb
jb
cmc
jo
inc
mov
cmc
xor
dec
aas
enter
mov
fisttpll
sbb
fisubl
movb
mov
cs
mov
testl
sbb
xor
scas
bound
ja
ss
addr16
inc
push
fidivl
ss
outsb
dec
xchg
repnz
adc
jb
xorl
pusha
test
xchg
testl
outsb
add
pop
sarb
mov
add
jae
int
sub
in
xlat
lahf
and
sbb
mov
pop
mov
movsl
xor
pop
les
sub
xor
fisubs
adc
cmp
xor
jecxz
es
mov
mov
mov
mov
jnp
repz
pop
adc
clc
xchg
pop
dec
mov
xchg
inc
pop
lock
xor
out
xchg
out
pop
pop
lods
or
and
testl
aaa
push
mov
imul
scas
push
mov
rclb
adc
dec
shl
jecxz
jns
jnp
cli
xchg
jp
push
lret
pop
ret
aas
loop
sbb
movsl
sub
hlt
sbb
jge
mov
mov
inc
testl
ds
mov
xor
sbb
daa
xchg
stos
inc
add
ljmp
inc
enter
nop
jnp
push
lods
pop
fs
mov
pop
mov
repz
or
in
sbb
iret
fbstp
mov
xchg
and
jne
ret
cmp
fists
adc
int3
fs
dec
mov
out
pop
mov
sahf
jbe
jo
jnp
lcall
jae
push
out
enter
adc
daa
stc
out
cwtl
fnstenv
mov
lds
dec
scas
daa
mov
dec
roll
insl
mov
cmpsl
icebp
sub
andb
sahf
and
int3
mov
pop
stc
rcr
imul
aad
sub
adc
call
jnp
inc
roll
int
pop
xchg
mov
mov
lahf
fsubrs
fsubp
cli
cmpsb
imul
inc
ret
jmp
lahf
xchg
cmpsb
adc
push
mov
jecxz
stos
outsl
outsb
cltd
cmp
xchg
sub
pop
jl
pop
push
push
into
outsl
mov
sub
clc
and
out
adc
fwait
jecxz
das
cmp
jp
pusha
lods
xchg
negl
dec
and
fldt
cmp
in
mov
sbb
rorl
mov
les
sarl
fs
mov
bound
xchg
mov
pushf
xor
mov
cmpsw
inc
mov
xchg
popa
dec
aam
fistpll
in
inc
mov
lret
call
cwtl
lods
jno
mov
mov
push
inc
ret
jb
insb
pushf
push
inc
sub
adc
js
movsb
cmp
push
mov
cmpsb
insl
pop
hlt
sahf
or
and
add
or
and
fsubrs
jb
xor
xchg
pop
fbstp
outsl
dec
pushf
sbbl
push
je
jle
gs
xchg
call
jmp
gs
sbb
lds
xlat
stos
sbb
sub
in
and
shrl
je
or
in
fnsave
pop
out
ss
xchg
mov
jbe
mov
sbb
aaa
into
pop
mov
xor
in
scas
push
shlb
iret
jae
add
xchg
sub
mov
test
sub
jnp
int
sti
pushf
dec
sbb
orl
std
pop
jo
mov
jb
sub
lds
fiadds
rclb
gs
pop
jnp
lds
jp
mov
mov
loopne
or
test
adc
mov
inc
in
xchg
cs
add
test
rcrb
dec
mov
and
es
push
ljmp
sub
xor
lea
repnz
dec
inc
arpl
push
jle
lock
fcoms
stos
or
lret
bound
inc
imul
ds
sti
xchg
xchg
push
sbb
jmp
aaa
into
xchg
or
arpl
mov
lods
in
jmp
dec
add
or
xchg
in
push
jmp
out
jo
fs
inc
fmul
test
mov
arpl
enter
gs
sbbl
dec
cmp
push
mov
clc
cmp
mov
pop
jg
je
xchg
sub
pop
sub
xchg
repz
and
bts
or
pop
jns
lock
stos
movb
dec
xor
push
leave
dec
add
popa
outsb
lds
arpl
xor
push
lods
je
jmp
push
in
fsubr
das
repnz
jge
bnd
bound
cmpb
dec
pop
xchg
and
sbb
cmp
int
cli
inc
repz
inc
ret
fxch
inc
test
in
js
jnp
push
popa
in
filds
fldcw
lret
call
xor
test
jo
jle
inc
clc
out
cmp
lret
pop
mov
dec
repz
test
adc
mov
xchg
mov
adc
pop
pusha
xor
mov
divb
les
fmull
mov
pop
sub
inc
mov
and
sub
ret
loope
in
je
jbe
gs
or
iret
add
sahf
addb
int
bound
pop
loope
xchg
push
lds
div
xchg
loope
fwait
jae
push
jp
mov
jmp
mov
and
in
aad
out
rcll
dec
imul
ficoms
bound
addr16
adc
mov
xchg
test
add
ja
and
lret
push
push
dec
xchg
sub
mov
imul
cmp
or
push
in
imul
ja
mov
clc
add
popf
in
push
push
fistpll
adc
mov
cld
pop
jmp
test
jno
cwtl
or
mov
adc
icebp
outsb
cmp
xor
sti
imul
mov
enter
out
mov
xor
or
mov
cmc
dec
jns
dec
push
fiaddl
sarb
mov
int3
pushf
xlat
cmpl
mov
das
lods
lods
loopne
movsb
jge
xchg
sbb
add
stos
mov
call
push
inc
test
mov
call
insb
cmc
cmp
frstor
jne
jno
cmc
dec
push
int
sbb
enter
sub
in
loopne
xchg
sub
xchg
dec
or
lcall
cld
xchg
adc
mov
cwtl
jl
out
cmp
push
pop
out
fs
bound
movsl
xchg
mov
sub
out
in
push
jne
push
data16
push
jns
aas
mov
rclb
out
subl
daa
xchg
inc
rclb
sub
test
stc
les
jae
gs
adcl
cmc
int
mov
ljmp
cmpsl
cld
add
jb
cli
xchg
unpcklps
xchg
and
push
jmp
ret
mov
push
stos
push
and
cmp
fstl
xchg
mov
out
jns
fidivs
lret
mov
call
fidivl
lds
mov
and
fneni(8087
into
gs
test
das
xor
andl
pop
xchg
xchg
mov
lret
repz
mov
jae
sub
lock
mov
mov
mov
adc
rcll
xchg
or
enter
lahf
cmp
mov
aaa
mov
mov
sahf
cmp
ret
roll
das
loopne
cmp
lahf
aaa
mov
mov
lahf
aaa
pop
mov
pop
addl
xor
shll
mov
mov
mov
jno
je
repz
sti
loopne
cmpsl
cs
repnz
mov
mov
pop
pop
out
dec
jl
cmp
shll
jae
add
cmpsl
sbb
fiaddl
pop
imul
out
hlt
in
fiaddl
xchg
cmp
icebp
mov
or
aad
jg
xor
aam
in
pop
push
mov
sbb
pmullw
int
add
arpl
adcb
mov
mov
popa
and
xchg
cltd
xor
push
jp
push
jno
pop
add
gs
cli
ss
mov
stos
clc
popa
test
adc
js
lret
insb
pop
add
mov
xor
loope
stc
popa
jp
mov
push
dec
add
jg
pushf
pop
add
adc
lock
iret
in
jo
sbb
sub
dec
sti
fwait
push
std
mov
scas
pusha
jmp
pop
xchg
sbb
lcall
test
cmp
test
xchg
dec
repz
inc
xchg
mov
jle
cmp
mov
add
jb
mov
or
aas
ficoms
and
in
aaa
push
cli
lods
xchg
sub
icebp
push
stc
mov
lods
add
bound
jae
jns
pop
testl
lods
jo
dec
pcmpeqb
xchg
int3
bound
ret
out
int
insl
repnz
sbb
test
push
clc
jmp
dec
adc
adc
mov
xor
jb
fwait
or
mov
xchg
fxch
xchg
push
je
or
mov
insl
in
sbb
daa
mov
fs
insl
inc
mulb
mov
mov
xor
xchg
lahf
ds
jbe
push
das
pop
negl
xor
xchg
and
push
push
jnp
lahf
cmp
xor
push
filds
push
into
aam
sub
pusha
push
ljmp
out
stos
xor
and
popa
daa
roll
mov
outsb
jmp
add
test
mov
adc
and
out
pop
mov
jnp
xchg
inc
ret
bound
shrl
and
fs
test
mov
jb
mov
push
xchg
inc
jl
adc
inc
jb,pt
mov
es
aam
push
add
in
and
insl
outsb
xchg
inc
in
ja
rol
and
push
daa
aad
mov
mov
xchg
inc
in
fs
popa
icebp
pop
mov
lret
or
pop
sub
mov
outsl
mov
or
roll
mov
dec
cmp
mov
cmpsl
xor
jle
mov
sti
movsb
xor
addr16
fs
add
mov
test
adc
and
jmp
cmc
and
cmp
lcall
or
out
sub
cltd
ds
add
cs
mov
ds
stc
pop
mov
cmpsl
mov
aaa
push
mov
mov
outsl
mov
das
fsubs
fidivs
stos
mov
das
popa
add
sbb
mov
das
bound
pop
ss
pop
cmp
mov
das
loop
sbb
or
das
in
jns
in
cld
jp
cmp
mov
ds
addr16
insl
cltd
jnp
mov
lret
or
cli
pop
sbb
mov
sbb
cmp
pop
jno
add
sbb
rol
loopne
mov
cmpsl
repnz
mov
movsb
repnz
nop
inc
int3
ja
or
dec
lods
js
jmp
testl
call
clc
adc
int
leave
int
xor
sbb
mov
adc
addr16
mov
inc
iret
push
xor
inc
adc
inc
push
push
out
addr16
adc
into
mov
in
pop
add
inc
call
xchg
inc
sub
js
pop
test
push
loop
decl
adc
push
sti
jle
loopne
shrb
in
cmp
cmp
sub
push
mov
mov
fdivrl
rcl
out
adc
mov
add
push
cld
jle
sarb
jo
jne
out
gs
pusha
dec
adc
mov
cmp
dec
adc
das
addl
pop
lret
insl
jg
jb
xor
pop
fstps
mov
das
mov
cmpsb
and
add
das
stc
push
pop
les
in
adc
and
cli
pop
inc
xor
aam
xchg
inc
pop
lcall
push
or
mov
pop
sti
pop
xchg
and
mov
iret
mov
in
push
aam
xchg
pop
pop
mov
xchg
and
je
fwait
xor
mov
lret
dec
cmp
push
xchg
push
pop
lret
orl
out
jb
ss
stos
into
mov
or
adc
lahf
or
lret
mov
lods
out
xor
and
adc
inc
mov
pop
xchg
cmc
pop
add
enter
inc
xchg
cmp
int3
xchg
cmp
test
pop
imulb
sbb
pop
orb
psrlw
in
jo
frstor
mov
daa
push
cli
pop
mov
test
decl
adc
fldl
mov
mov
insl
icebp
xor
sub
xor
subl
pop
push
fsubr
push
mov
mov
in
sarl
lock
or
clc
mov
mov
sti
pop
data16
cmpsl
insl
sbbb
js
ret
jge
push
add
orb
leave
mov
mov
jnp
repnz
pop
lcall
cmpl
and
and
sbb
movl
pop
xchg
aas
mov
xchg
lods
push
jbe
lcall
sahf
cmp
inc
sub
pop
jo
movsb
xchg
xchg
mov
iret
jae
int3
loope
out
sbb
lret
lods
testb
lret
mov
test
adc
call
xor
sub
pop
push
je
enter
or
pop
lods
and
pop
cld
or
dec
jns
loop
xchg
insb
out
iret
test
cld
dec
or
test
xor
repz
cmpl
adc
jp
js
mov
pushw
push
jp
bound
in
sbb
lds
dec
test
jp
pushf
sub
and
ss
aaa
sarb
mov
sbb
add
loope
mov
mov
stos
cltd
inc
mov
test
dec
adc
sbb
imul
mov
vpsrad
out
mov
inc
push
stc
mov
mov
fucomip
clc
testb
inc
xor
in
xchg
cmp
dec
adc
test
stos
sbb
dec
dec
bound
push
cld
ja
dec
in
push
pop
xchg
sbb
sahf
sti
pop
dec
sbb
aas
insl
out
jne
xor
pop
outsb
mov
movsl
sub
movsl
mov
lret
cli
jae
mov
add
negl
pop
or
push
jg
fs
sub
popf
test
xlat
xorl
sahf
insb
pop
stc
cmpsl
out
pop
loope
xchg
add
xor
outsb
mov
mov
stos
les
push
jnp
push
adc
cs
andb
sahf
movsb
icebp
pop
mov
sub
leave
movsl
mov
psrad
dec
adc
sarl
jne
lea
and
bound
js
inc
jae
cmpsl
push
xchg
sub
cmp
and
jae
ja
addr16
cmp
jbe
outsl
mov
fildl
sti
jmp
push
push
sti
pop
xchg
mov
inc
push
xor
mov
ss
sbb
mov
push
add
test
aad
enter
lods
fistpll
mov
mov
lret
sub
mov
into
xor
js
fsubrl
xor
cld
stos
call
sti
mov
mov
movsb
stos
or
ffreep
imul
add
arpl
ljmp
dec
repnz
mov
push
push
bound
leave
mov
repz
pushf
out
add
jne
sub
ja
adc
add
add
mull
ror
jmp
pop
out
popa
cmp
out
jg
xchg
cmp
jno
cwtl
pop
pop
repnz
data16
and
cmp
and
sub
xor
cmp
outsl
and
fstpt
rclb
enter
mov
sub
or
repz
sti
and
aam
icebp
adc
das
test
cli
sbb
outsb
adc
arpl
jnp
inc
test
and
inc
ret
inc
pushf
cmp
xor
xchg
mov
addr16
add
adc
xchg
cmp
outsb
rcl
test
movsl
das
test
sti
pop
xchg
mov
sub
iret
leave
mov
cmp
mov
hlt
pusha
rcl
sbb
dec
or
add
xchg
icebp
cmp
mov
jge
cmpsb
cs
insl
jb
shr
jbe
testb
and
test
inc
or
mov
stos
bound
xchg
inc
mov
mov
xchg
xchg
dec
mov
idiv
pop
out
cmp
xlat
xchg
dec
or
roll
loope
xchg
cld
pop
mov
pop
leave
test
pop
sbb
adc
aad
mov
mov
pop
icebp
aad
ret
pop
jmp
in
jae
cld
push
cli
xor
pop
dec
adc
mov
mov
xor
sbb
push
sub
out
jp
aas
mov
lods
pushf
aas
or
outsb
icebp
push
pop
or
notb
jns
cmc
inc
adc
and
flds
xchg
aaa
sbb
xchg
mov
xchg
mov
pop
sub
cmp
out
xchg
inc
leave
js
imul
mov
and
mov
mov
out
jo
insl
or
lret
mov
push
xor
test
dec
fisttps
push
out
push
mov
lahf
push
stc
push
rorb
les
test
fdivrs
xchg
das
adc
cmp
aaa
repnz
push
add
es
imul
jns
icebp
dec
int3
mov
inc
and
or
lahf
pop
std
pop
and
mov
xchg
cmp
movsb
cli
bound
daa
sub
and
xor
mov
xchg
mov
mov
lret
loope
fs
and
jle
adc
lea
dec
clc
pop
sub
cmpsl
aas
ror
mov
adc
call
push
cmc
mov
ret
icebp
arpl
fnstenv
cmpsb
pop
mov
in
enter
stc
pop
loop
call
test
in
test
jne
movsb
pushf
cmp
lret
lods
sub
jne
dec
in
push
fdivrl
leave
loope
mov
int3
mov
stos
pop
lock
push
outsl
in
ja
pop
xchg
inc
or
lods
mov
aam
enter
sbb
mov
rorb
ljmp
jle
push
xlat
jbe
adc
xor
sub
mov
in
negb
repnz
xor
xor
push
sub
iret
mov
iret
mov
cmpsl
or
jbe
fnstenv
jo
sub
rcll
sbb
jg
inc
adc
scas
sbb
push
pushf
mov
inc
rclb
jmp
mov
shlb
dec
orl
cmp
sbbb
loope
xor
adc
xor
loopne
pop
stc
repnz
popf
cmp
into
sahf
aaa
mov
mov
jg
or
push
mov
insb
das
inc
pminsw
add
pop
mov
fimuls
push
push
loopne
inc
add
add
out
pop
xor
addr16
xor
je
jmp
inc
mov
cmpsl
sub
loopne
adc
mov
mov
mov
lds
jns
jns
movsl
stc
pop
and
jnp
out
outsb
call
loopne
inc
fistl
pop
sahf
and
insl
jo
sbb
int3
popa
mov
inc
ret
push
push
cld
jecxz
pop
mov
fistpll
fimuls
inc
or
stos
or
aaa
int
sub
fdivl
leave
out
xchg
cmp
sbb
orb
or
or
pop
enter
aam
push
clc
mov
cmp
enter
test
rorl
sbb
cwtl
subb
dec
add
pop
daa
scas
cmp
int
fcom
ja
push
jmp
jnp
cs
push
add
imul
sbb
dec
mov
ret
out
mov
mov
xor
push
mov
daa
xchg
mov
fld
mov
out
push
pusha
cmc
js
hlt
mov
pop
mov
stos
shrl
movsl
ds
xor
mov
scas
push
stc
and
or
lahf
xor
push
shr
jbe
pop
pop
add
and
inc
ret
mov
adc
mov
pop
jne
dec
cmpsb
popa
mov
jns
cmpsl
push
leave
enter
push
sbb
pop
add
stos
xor
adc
orb
out
jns
lret
xchg
jg
sarb
insb
inc
or
push
push
cld
dec
add
in
cmpsb
sahf
xor
push
cmpsb
jbe
sbb
mov
mov
cmp
sub
lods
jmp
repnz
push
jns
push
popa
pusha
rorl
ljmp
sbb
jns
add
loop
into
mov
mov
push
outsb
inc
movsb
cmp
dec
push
jp
popa
ljmp
jne
or
push
cli
sub
cmp
mov
xchg
orb
mov
dec
xlat
sarb
sahf
fildl
inc
out
mov
test
cmpsl
dec
adc
sarb
lret
repnz
js
jne
mov
push
add
dec
cmp
scas
jns
and
jae
mov
in
aam
stc
pop
cmp
sub
sti
or
push
jne
cmc
cmc
mov
mov
mov
cmpsb
cwtl
fldl
and
sub
push
rol
mov
pop
test
enter
cmp
mov
xor
pop
movq
or
scas
xor
scas
mov
cmp
jo
jb
lds
mov
roll
mov
dec
ljmp
adc
vmread
pop
test
jno
push
mov
xor
leave
cmc
push
imul
faddl
mov
sbb
aaa
filds
and
inc
ds
xor
xchg
and
adc
adc
mov
das
scas
dec
mov
adc
xchg
jge
das
cmp
pop
aam
xor
enter
sti
adc
ds
cmpsl
xor
out
mov
jp
mov
jl
mov
repnz
inc
jg
popf
xchg
sbb
hlt
jbe
shlb
mov
lea
adc
subb
ja
lcall
jbe
cli
pop
sub
mov
cwtl
dec
or
inc
and
outsb
xchg
pop
cli
xor
test
push
fwait
inc
mov
data16
xchg
sub
lcall
and
xor
sub
xlat
mov
mov
sub
pop
jmp
int3
jae
jno
test
mov
push
repnz
les
jge
icebp
jbe
pop
jl
test
fnstsw
roll
lcall
sub
hlt
jae
outsb
inc
lock
notb
repnz
mov
inc
pusha
pop
cmpsl
cs
jno
push
shlb
mov
rolb
ss
or
or
hlt
popf
pop
pop
add
cmp
aam
mov
jae
pushf
icebp
pop
inc
fsubs
hlt
push
inc
or
xorb
in
jmp
outsl
out
fidivs
rorb
int
adc
dec
cmp
rorb
outsb
mov
mov
sbb
sbb
and
push
addr16
xchg
arpl
insl
ret
fistpll
sbb
ret
dec
orl
mov
aas
jns
repnz
repnz
or
inc
or
pop
push
sti
mov
lods
mov
orb
dec
push
rclb
popf
das
addr16
push
lds
or
imul
sahf
push
data16
mulb
xor
mov
cmpsb
cs
pop
add
mov
stos
inc
or
adc
push
cmp
cmp
inc
sub
loopne
mov
push
cli
push
jge
lahf
sbb
pop
cmpsb
outsl
mov
into
mov
aad
sbb
push
pop
mov
mov
test
test
inc
mov
imul
jmp
add
cmp
sti
xchg
pop
jb
shll
mov
lds
push
shll
push
stc
xchg
and
in
enter
xchg
xor
mov
stc
movb
mov
pop
cld
test
mov
lret
or
pusha
insl
mov
roll
fbstp
aam
lret
adc
shr
dec
jle
hlt
jl
pop
in
xchg
xchg
mov
shr
xchg
stos
xchg
inc
fdivr
dec
sbb
jg
sub
mov
scas
mov
pop
cltd
jbe
mov
push
cli
out
jne
sbbb
fwait
and
out
lret
xor
cmove
int3
cltd
pop
pop
add
js
lea
add
lea
cltd
ja
sbb
int3
mov
push
fs
inc
ds
mov
mov
push
arpl
dec
adc
cmpsb
pop
add
sti
stos
xor
jmp
cwtl
dec
push
ret
loopne
fldcw
sbb
loop
data16
push
sub
cwtl
test
bswap
inc
or
pop
xor
pop
adc
jb
mov
xor
orl
xchg
cmp
push
sbb
loope
in
add
fildl
add
push
btr
les
xchg
aaa
imul
fwait
inc
test
sub
pop
gs
aas
dec
pushf
inc
push
in
and
xor
pop
mov
orl
jmp
inc
popf
mov
mov
xchg
subl
ficoml
ljmp
test
lahf
test
repz
adc
cmp
cmpl
inc
daa
push
ret
rcll
enter
xlat
mov
ret
pop
add
pop
jbe
jp
adc
adc
jle
dec
xchg
add
cmpsb
das
repz
les
roll
nop
mov
lods
js
xchg
int3
clc
popa
clc
xchg
cmp
jmp
outsb
lahf
add
sub
popa
jmp
pop
scas
lret
mov
ja
outsb
adcb
iret
mov
xchg
mov
lret
cld
pushf
lcall
xchg
pop
stc
lds
add
jp
push
loopne
mov
loopne
pop
mov
scas
test
fistpl
or
add
cs
js
nop
push
cmp
adc
dec
out
je
pop
sbb
imul
pusha
icebp
icebp
pop
shlb
pop
or
stos
xor
pop
imul
lock
push
adc
mov
test
xorl
test
and
pop
or
pop
cs
mov
inc
or
clc
mov
or
sahf
inc
negl
mov
lret
inc
or
aad
das
mov
mov
lea
add
pop
fisttpll
scas
das
mov
push
mov
outsb
jl
sbb
jnp
das
add
inc
or
dec
inc
or
test
sub
nop
mov
xchg
push
xchg
inc
pop
or
movsb
cmpb
gs
jle
jnp
ljmp
sbb
sbb
xor
inc
shrb
rcll
dec
in
enter
call
repnz
cli
xor
iret
mov
sub
cli
pop
and
fidivrs
adc
mov
mov
cmpl
inc
pusha
call
inc
ljmp
pushf
js
ret
xchg
ds
das
jmpw
cwtl
inc
cmpb
push
mov
lds
fwait
out
aaa
insl
int
fiaddl
jl
or
rol
nop
mov
cmpsl
outsb
out
mov
or
add
pop
std
jo
sahf
cmp
imul
jecxz
mov
stc
push
rcll
cmp
adc
inc
incl
test
in
test
sti
ss
push
xor
aaa
dec
and
cmp
or
lret
movsb
arpl
fmul
leave
mov
ret
sbb
scas
add
inc
pop
xor
mov
and
push
decb
dec
rcrb
pop
or
aad
dec
cmp
sub
and
addr16
cmp
js
addr16
imul
or
xchg
mov
stc
cmp
dec
xchg
jge
mov
repnz
mov
stos
icebp
pop
pop
jmp
ja
dec
xchg
cmp
mov
ss
pop
das
adc
cltd
cmp
jbe
lret
cld
pop
push
add
pop
leave
xchg
dec
jo
dec
pop
cltd
pop
add
inc
xor
data16
xchg
inc
push
jno
test
inc
or
call
mov
sbb
mov
rcl
fcmovnb
mov
jge
imulb
mov
in
inc
push
out
repnz
loopne
mov
stos
inc
or
cmp
sub
sbb
mov
inc
cmc
rcr
jnp
in
push
add
stos
dec
or
fcmovnu
popf
ds
add
stos
cld
mov
mov
gs
xor
aam
enter
jb
aam
scas
sub
adc
push
push
cmc
jnp
daa
inc
cmp
jb
cltd
xor
mov
ret
mov
addb
inc
or
fnstsw
adc
pop
add
dec
push
les
or
fistps
cmpb
jno
cltd
daa
stos
test
jbe
not
sarb
loop
outsl
sbb
dec
in
dec
fwait
push
mov
ds
mov
shll
aas
and
push
cmp
push
enter
lret
adc
ja
pop
insb
cmp
shrb
xor
jae
arpl
imul
popf
cmp
aam
jge
inc
sub
fcoms
outsb
mov
mulb
dec
xchg
es
push
lods
mov
in
push
js
aaa
into
push
or
sahf
das
sub
add
and
jne
dec
adc
xchg
outsb
push
shlb
imul
mov
mov
jae
push
mov
clc
cmp
push
add
jns
jns
fimuls
push
mov
movsl
adcl
shrl
mov
icebp
mov
into
sbb
ja
mov
push
mov
and
sub
ret
jge
bound
pop
jmp
mov
ljmp
lret
xchg
add
addr16
pop
xchg
stc
arpl
les
gs
icebp
pop
xchg
das
rcll
cmp
push
mov
movsl
xchg
inc
clc
fsubl
add
mov
loopne
add
sbb
pop
clc
pop
and
aas
sub
popf
mov
lock
push
add
mov
mov
mov
push
ljmp
jns
mov
mov
fisubl
movb
sbb
jmp
mov
jb
sub
jge
mov
xchg
sub
jge
ret
rclb
jmp
jmp
popf
outsl
repz
adc
jbe
jno
sbb
dec
or
xor
hlt
xchg
lret
jmp
pop
shr
add
fstps
push
enter
in
mov
dec
out
rorb
adc
out
inc
push
andb
jne
shlb
mov
mov
call
pushl
add
pop
orb
pop
ljmp
mov
jnp
test
xor
adc
pop
outsb
rorb
or
xor
or
dec
and
add
mov
cmp
jle
pop
int3
sub
cli
pusha
pop
inc
xchg
cmp
dec
or
push
mov
scas
lock
lcall
jp
incl
repz
xor
and
cmpsl
sub
cmp
mov
jmp
xor
dec
push
imul
lret
popf
test
ret
adc
xor
cmp
and
gs
fdivrl
sub
jge
mov
fwait
cmp
das
mov
mov
xor
push
arpl
das
cmpsl
jl
negl
gs
mov
push
xchg
ja
inc
test
mov
pusha
out
lret
sub
and
xor
jo
sbb
add
push
adc
inc
and
push
jle
loopne
xchg
inc
stc
sub
scas
lcall
push
xchg
xor
push
dec
scas
daa
stos
mov
mov
lods
loopne
push
dec
mov
sarb
cmpsb
daa
jmp
out
int
mov
rcll
movsl
xor
test
mov
push
jno
xchg
inc
and
inc
notb
dec
in
sub
aaa
push
push
and
inc
push
add
mov
gs
sub
imull
inc
in
push
add
sbb
enter
fnstcw
xor
xor
sub
mov
mov
adc
sub
test
sub
and
fs
aad
and
out
mov
or
push
push
mov
sub
insb
repz
dec
adc
pop
jns
int
es
sti
sbb
xchg
cmp
push
dec
mov
xchg
jns
and
inc
stc
pop
incb
mov
iret
lahf
mov
push
mov
xor
mull
xor
sti
add
add
scas
cmpsl
out
pop
mov
jg
xchg
mov
movsl
adcb
jl
add
test
mov
mov
out
imul
dec
lods
sub
pop
cmp
leave
or
add
mov
inc
adc
fiaddl
and
mov
aas
in
xlat
jle
test
mov
fdivrs
cmpsb
mov
mov
mov
push
outsb
mov
ss
fs
fstp
pop
mov
xor
cmp
add
or
lods
push
outsl
hlt
cmc
mov
lock
pop
popf
scas
xor
test
fs
jge
adc
xor
mov
imul
xchg
xlat
sbb
les
ja
or
jns
shll
outsb
mov
cmp
cli
arpl
rolb
xor
stos
sub
mov
ds
dec
lods
mov
es
push
push
das
inc
add
stc
cmp
arpl
loop
je
or
dec
pop
cmp
push
add
gs
push
cwtl
jo
shll
repz
cmp
aad
push
push
mov
mov
cmp
ljmp
pop
lea
cmpsl
mov
scas
or
leave
aam
cli
jmp
lea
out
rorl
jne
pop
mov
push
add
push
add
push
icebp
popa
add
mov
push
std
and
cmpl
cld
test
sub
push
ja
add
mov
fs
add
pop
add
pop
fstpt
push
into
xchg
sub
imul
dec
cmp
jno
rorl
mov
test
cmpsl
sub
insl
repnz
pop
mov
mov
pop
iret
andb
adc
inc
adc
sbb
sbb
xchg
sbb
testb
push
jmp
pushl
cmpsb
adc
mov
and
ret
inc
adc
in
inc
adc
dec
mov
lock
cmp
dec
sub
push
stc
icebp
fs
mov
pop
enter
xchg
insl
inc
pop
aad
sbb
cltd
cmp
jb
lds
and
xor
data16
jmp
test
scas
xor
mov
and
pop
dec
adc
mov
sub
push
jp
test
call
push
jnp
sub
test
sbb
jmp
dec
pop
xchg
sub
mov
jmp
jno
xchg
cmp
rorb
in
out
sar
loopne
pop
or
dec
xchg
int3
xchg
cltd
cmp
inc
pusha
les
arpl
ret
push
iret
xchg
sub
jb
add
push
pop
pusha
ljmp
sti
data16
jnp
mov
sub
repz
in
pop
out
incl
rcrl
out
mov
xchg
sub
int
in
es
and
xchg
movsl
cmp
inc
mov
stc
sti
les
cmp
cmpsb
inc
fcmovnbe
jecxz
fstl
imul
lods
int3
dec
adc
mov
mov
in
popf
out
sub
nop
xchg
ds
mov
lods
sub
rorl
js
mov
mov
mov
mov
inc
jb
push
adc
das
lods
xor
push
and
mov
mov
xor
cmp
mull
adcl
lahf
or
pop
jne
mov
imul
bnd
adc
out
inc
push
cmp
push
add
cmpsb
xor
lahf
cmp
push
ljmp
push
jnp
leave
or
lea
dec
sbb
stos
into
pop
rcr
mov
xor
lret
mov
pushf
or
and
push
mov
xor
sub
stos
and
es
call
cli
insb
idivb
and
leave
das
jp
jo
push
ret
push
add
dec
and
in
or
sbb
dec
mov
ret
pop
sarl
adc
insl
fsubrs
cmc
dec
add
aas
out
mov
xchg
fcomps
iret
mov
pop
push
popf
cmp
cmpsb
jae
and
sub
sub
mov
scas
cmp
push
adc
mov
pop
scas
les
pushf
mov
xorb
and
insb
add
pop
pop
jg
out
repnz
cwtl
fs
stos
hlt
lret
sub
jns
pop
add
iret
pop
add
leave
xchg
aaa
test
and
scas
xor
or
xchg
mov
and
jbe
dec
adc
movsl
cmpsl
ss
add
mov
or
lds
add
dec
xchg
and
sbb
fnsave
lahf
ss
cwtl
aas
dec
push
and
lcall
pop
jmp
mov
lock
adc
out
push
ret
std
pop
add
mov
popa
sbb
or
xchg
pop
add
ret
xchg
push
mov
sti
push
jb
xor
mov
dec
or
jo
sub
insb
pop
leave
testl
dec
rclb
test
outsl
xor
mov
rcll
jbe
in
adc
inc
enter
data16
es
sbb
inc
jmp
test
mov
rol
repz
ljmp
mov
lahf
jecxz
add
xor
push
inc
faddl
test
cli
fstps
cmc
mov
sbbl
loop
lahf
ss
fwait
xor
push
mov
jb
stos
xlat
outsb
faddl
nop
js
cmc
mov
lcall
sub
xor
aam
push
ljmp
jno
ret
inc
insl
add
in
es
fwait
mov
int
lods
inc
imul
lret
bound
fsubrp
adcb
in
xor
sahf
call
and
mov
pop
lea
mov
fistps
adc
push
lods
xor
arpl
popf
xor
test
push
push
fdivs
jo
sub
insb
pop
enter
jle
mov
rcll
test
outsb
xor
lahf
and
push
rclb
jne
in
adc
inc
imul
gs
es
sbb
inc
ljmp
arpl
pop
ljmp
mov
lahf
loop
add
xor
and
xchg
inc
xlat
cmp
pop
cmc
stc
sbbl
loope
lahf
ss
fwait
xor
mov
push
xchg
test
stc
nop
ja
cmc
mov
cltd
pop
scas
lret
stos
sub
int3
sbb
xor
sarl
dec
out
nop
jno
ret
add
jecxz
es
lods
inc
push
mov
bound
jmp
jl
xor
sahf
popa
out
lcall
and
push
mov
mov
ficomps
jg
lods
xor
int
xor
sbbl
push
mov
or
cmpsb
sub
insb
pop
xbegin
mov
iret
adc
sahf
and
push
mov
dec
in
adc
inc
lds
mull
xchg
sbb
inc
jmp
or
fs
pop
lock
jmp
adc
jl
mov
mov
xchg
add
mov
out
inc
fldl
cmpsb
fs
xlat
pop
pop
cmc
mov
sbbb
lods
jl
fisttps
aaa
jge
fwait
xor
sahf
mov
push
test
fdivl
cmpsl
xlat
outsb
flds
jbe
cmc
mov
sbb
jle
ss
mov
push
jmp
repnz
out
jb
roll
loop
daa
adc
mov
lret
inc
addr16
inc
sbb
ds
pop
jo
ljmp
das
or
push
andb
mov
and
add
es
stc
push
fcompl
or
jnp,pn
pusha
int3
sahf
xor
mov
mov
dec
push
jae
jb
daa
aad
pop
stc
nop
clc
jp
mov
adc
pushf
pop
xor
push
mov
dec
in
or
insb
add
bound
and
scas
inc
out
test
cmp
orl
or
xchg
add
shlb
and
addl
fdivs
movsb
gs
aad
pop
testb
jge
fisttpll
cmp
fwait
xor
popf
mov
push
xor
je
movsl
xlat
outsb
xlat
inc
sti
xchg
jne
cmc
mov
xchg
sbb
jl
aaa
into
sbb
push
in
insb
lock
out
mov
rolb
je
xchg
sub
xchg
mov
enter
jmpw
sbb
pop
outsb
fucomi
orb
or
adc
daa
mov
rolw
add
aas
mov
ficompl
or
sbb
lret
lahf
ss
jg
xor
shlb
jae
and
cli
xchg
idivl
mov
lret
adc
fwait
sbb
push
in
in
outsl
dec
in
push
je
inc
shrl
xchg
sub
mov
inc
out
test
cmp
in
test
or
xchg
ljmp
shlb
and
addb
cld
aam
pop
testb
jge
fmull
cmp
fwait
xor
pushf
mov
push
sub
je
movsb
xlat
outsb
inc
sti
xchg
je
cmc
mov
xchg
sbb
jnp
aaa
into
sbb
push
in
imul
out
lea
mov
loopne
sub
xchg
mov
xor
inc
sbb
pop
insl
orb
jl
sub
add
mov
and
add
arpl
push
fstps
or
sbb
lret
cld
jle
xor
shll
jae
and
insb
push
cli
xchg
divb
mov
lret
sti
imul
dec
mov
dec
in
or
insb
add
pusha
xchg
sub
mov
inc
in
test
data16
in
test
lods
or
nop
sub
das
mov
mov
addl
cld
rcll
testb
jge
fildl
cmp
fwait
xor
fwait
mov
push
sub
xlat
outsb
aad
sti
xchg
jae
cmc
mov
xchg
sbb
jp
aaa
into
sbb
in
push
dec
out
mov
mov
fists
and
xor
inc
sbb
pop
insb
fldpi
orb
in
shrb
pop
loope
lcall
and
add
arpl
push
fcomps
or
sbb
leave
lahf
ss
jge
xor
shlb
jae
and
insb
push
ret
cli
xchg
cmc
jbe
mov
leave
adc
cltd
sbb
dec
mov
dec
in
or
or
mov
xchg
sub
mov
inc
in
test
data16
mov
in
test
stos
or
std
sub
cs
mov
addb
fdivs
gs
rclb
testb
jge
fiaddl
cmp
fwait
xor
dec
mov
je
mov
sti
xchg
jb
cmc
mov
xchg
sbb
jns
aaa
into
pop
fwait
xor
int3
cmp
imul
jae
mov
ficoms
and
xor
inc
sbb
pop
imul
orb
in
mov
loopne
lcall
and
add
arpl
push
xlat
pop
hlt
or
sbb
enter
jl
xor
iret
mov
add
jae
and
insb
push
ret
hlt
jne
mov
enter
addr16
into
cwtl
sbb
dec
mov
dec
in
or
mov
xchg
sub
mov
inc
jecxz
test
data16
pop
jmp
or
jge
stos
or
mov
sub
sub
dec
inc
fidivrs
inc
fdivs
mov
pop
testb
jge
flds
cmp
fwait
xor
mov
push
jg
fnsave
xlat
outsb
sarl
sti
xchg
jno
cmc
mov
xchg
sbb
js
aaa
into
push
lcall
push
mov
mov
fstl
and
xor
inc
pop
test
fs
pop
push
jmp
or
mov
adc
mov
iret
inc
faddl
test
mov
arpl
push
pop
hlt
pop
je
sbb
lahf
ss
jnp
xor
into
mov
add
jae
and
insb
push
sar
repz
mov
adc
xchg
sbb
dec
mov
dec
in
or
mov
xchg
sub
mov
inc
loop
test
xor
pop
call
or
jge
test
add
sti
sub
sub
and
jle
inc
fdivs
lahf
gs
rclb
testb
adc
inc
mov
xor
cwtl
mov
push
jle
fnsave
xlat
outsb
sarb
sti
xchg
jo
cmc
mov
inc
adc
adc
ss
in
addr16
out
mov
mov
fcoml
and
das
scas
inc
popa
in
inc
push
or
mov
pop
imul
in
mov
fiadds
lcall
and
incl
fs
push
aam
hlt
add
es
pop
mov
xor
int3
mov
insb
fnsave
insl
push
mov
hlt
mov
adc
xchg
pop
xor
dec
mov
in
out
dec
out
or
cmp
xchg
sub
scas
mov
loopne
stos
inc
xchg
add
xor
out
out
test
cmpsl
or
fcomps
pushf
mov
sub
sub
dec
fistpll
fdivs
sahf
data16
iret
push
pop
testb
jge
inc
mov
xor
xchg
rclb
mov
jne
sahf
xlat
outsb
sarb
cmc
mov
xchg
sbb
jne
cmp
adc
xor
enter
jmpw
sbb
insl
add
fistl
and
cs
pusha
loop
inc
adc
into
gs
pop
addr16
addl
in
mov
faddl
lcall
and
incb
gs
push
rcrb
add
sbb
mov
xor
lret
cld
imul
popf
sbb
cld
xchg
lock
mov
ret
adc
xchg
adc
push
out
out
dec
out
pop
jbe
cmp
xchg
sub
mov
fistps
inc
xchg
add
push
in
out
xchg
cmpsb
or
pushf
mov
sub
sub
dec
loopne
std
inc
fsubrs
popf
addr16
dec
pop
testb
jge
aam
mov
xor
xchg
rcrl
mov
jbe
pushf
xlat
outsb
into
cmp
xchg
outsb
out
cmc
mov
nop
sbb
jae
cmp
adc
push
out
gs
out
xchg
mov
ficoml
and
loopne
inc
adc
pop
gs
test
xchg
jl
daa
or
or
shrb
inc
fdivrp
jle
scas
push
data16
dec
rcrb
add
sbb
les
xor
enter
push
jbe
sbb
insl
dec
mov
hlt
mov
rcll
repnz
rcll
mov
out
in
dec
out
push
ja
cmp
xchg
sub
or
ficomps
inc
call
push
jecxz
out
xchg
or
pushf
mov
sub
sub
dec
loopne
cld
inc
fsubrs
dec
pop
idivb
test
mov
mov
xor
xchg
rcrl
mov
jbe
fwait
xlat
outsb
int
std
xchg
insl
out
cmc
mov
sbb
jb
cmp
adc
out
fs
out
xchg
mov
fsts
and
fildll
data16
pop
fs
test
or
or
shrb
inc
fdivrp
jge
scas
sbb
pop
hlt
add
sbb
ret
mov
xor
mov
stc
imul
insl
dec
mov
hlt
mov
rclb
icebp
popa
cmp
xchg
adc
enter
out
in
dec
out
add
insl
add
pop
xchg
sub
or
fstpl
mov
shrl
mov
pop
loop
out
xchg
movsb
or
pushf
xchg
sub
daa
test
dec
loopne
sti
inc
fsubrs
addr16
dec
pop
idivb
test
mov
mov
xor
inc
mov
jbe
lcall
insb
in
cmc
mov
mov
mov
inc
adc
adc
push
out
arpl
dec
out
test
mov
insl
add
fcoms
and
fisubrs
data16
pop
arpl
in
test
or
or
shrb
inc
fdivrp
jl
lods
sbb
std
dec
into
pop
hlt
ljmp
sbb
shll
movsl
adc
pop
inc
mov
jbe
sbb
outsb
dec
mov
cmc
mov
mov
cmp
nop
adc
leave
inc
mov
out
loop
push
out
add
xor
push
xchg
sub
or
dec
fistpl
inc
cld
shrl
scas
leave
pusha
loope
out
xchg
mov
push
popf
xchg
sub
and
inc
dec
loopne
cli
inc
fldcw
cltd
addr16
dec
pusha
idivl
test
mov
xor
rcrl
mov
jbe
cltd
fsubrs
cmp
xchg
push
testb
aas
adc
jo
cmp
setb
leave
ret
xor
popa
in
out
xorl
outsb
add
or
mov
pop
scas
xor
pop
shr
test
test
jge
and
mov
or
shlb
inc
fdivrp
jnp
xlat
lods
sbb
dec
int
cmc
insb
test
sahf
pop
jge
push
mov
fwait
xor
mov
jbe
sbb
outsl
dec
mov
testb
mov
cmp
mov
xor
inc
scas
pop
out
loopne
push
call
xor
sub
pop
mov
fstps
inc
mov
shrl
scas
lret
dec
out
xchg
jmp
movsb
rcll
test
sub
and
dec
loopne
stc
inc
fisubrl
xchg
addr16
dec
popa
clc
jl
test
sahf
jg
sarb
cmp
popf
xor
nop
rcrl
mov
jbe
cwtl
fnstenv
ss
xchg
push
mov
mov
ds
rorb
cs
out
pop
jecxz
call
mov
outsl
push
addr16
sub
mov
dec
pop
fsubrl
lods
das
leave
pusha
popa
into
in
test
and
mov
or
pop
je
shlb
inc
fdivp
jp
fsubrs
int3
pop
idiv
push
sbb
mov
xor
les
jbe
pop
fnstenv
mov
xchg
call
or
cmp
cmp
mov
xor
inc
lods
pop
out
fisubs
jmp
xor
sub
mov
xlat
pop
lods
inc
mov
shlb
scas
lret
loopne
out
test
ljmp
push
or
and
dec
fbstp
inc
fldt
xchg
data16
dec
stc
jl
test
sbb
mov
xor
rolb
loope
jne
cwtl
fidivl
xor
xchg
data16
sbb
ds
lods
outsl
fidivrl
iret
or
push
in
pop
jecxz
jmp
mov
jo
rclb
mov
inc
push
fsubrl
stos
das
lret
int3
in
cmp
call
mov
push
jb
shlb
inc
fdivp
jns
fldcw
lret
pusha
idiv
push
jg
dec
mov
popf
xor
push
rcrl
mov
jbe
push
fidivl
mov
xchg
out
clc
fwait
pop
sbb
cmp
rorl
stos
pop
out
fsubl
ljmp
jno
in
xchg
sub
mov
scas
inc
mov
shlb
lods
int3
arpl
dec
out
test
jmp
xor
mov
pop
cmpsb
daa
mov
jno
inc
fsubrl
xchg
data16
les
cli
jnp
test
pop
popf
sbbl
push
lahf
and
push
jne
fidivs
xchg
xor
xchg
fs
mov
pop
scas
outsb
fdivrs
iret
or
push
in
pop
loop
ljmp
jno
data16
es
fldt
gs
lret
cld
sub
mov
add
es
fdivp
js
fisubrl
lret
sti
data16
cwtl
sbb
pop
dec
mov
sahf
xor
ds
hlt
pop
fbstp
adc
std
xchg
in
stc
nop
lcall
scas
in
push
cmp
mov
pop
out
ficompl
jmp
sti
jbe
sub
dec
xchg
sub
mov
scas
inc
mov
shlb
lods
int
fiadds
test
jmp
xor
or
push
movsl
daa
mov
jo
inc
fsubrl
xchg
data16
ret
dec
arpl
jp
test
push
pushf
sbbl
imul
rclb
mov
jne
xchg
xor
xchg
arpl
stc
nop
sbb
pop
scas
insl
xlat
cmp
or
push
in
pop
loope
ljmp
jno
gs
xchg
sub
xchg
inc
push
fisubrl
gs
lret
pusha
cmp
sub
mov
test
es
or
mov
sub
pop
std
sbb
mov
loop
and
pop
mov
movsl
or
lods
dec
fdivs
imul
dec
pop
mov
aam
lock
push
test
in
mov
lods
jmp
es
sbb
lock
mov
mov
add
pop
icebp
push
cli
or
xor
inc
sub
dec
mov
dec
dec
inc
inc
loop
mov
lret
push
sbb
adc
leave
das
stos
and
daa
xor
fs
lcall
and
jle
sbb
mov
sbb
mov
lret
mov
dec
test
mov
in
jmp
or
jo
sbb
pop
mov
shl
pop
repz
and
mov
jne
shrb
or
push
jns
xchg
cmp
push
jge,pt
ss
mov
jp
xchg
xchg
cld
fbstp
cmpsb
out
adc
aas
sahf
in
push
pop
cmp
push
inc
mov
jp
jae
dec
ds
inc
out
insb
or
ljmp
repz
clc
js
std
add
int
xchg
dec
imul
push
out
push
into
add
rclb
cmp
sub
mov
shlb
andl
cmpsl
and
scas
aam
mov
addr16
add
cmpl
sub
mov
out
inc
in
loopne
cmp
sbb
test
pop
dec
int
lea
add
sub
scas
loop
mov
add
push
push
inc
aam
test
ja
and
jo
in
sbb
pop
outsb
push
test
cmp
fiadds
push
pop
cmpsb
mov
xor
insl
jg
test
ja
push
xchg
and
ret
sbb
cli
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
rcrl
idivb
cmp
mov
jne
int
dec
mov
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
out
aaa
sbb
xorb
jge
push
stos
lds
and
push
insb
in
int
into
outsb
pop
iret
sub
sub
jbe
add
roll
or
pop
sub
pusha
push
dec
lret
mov
dec
popf
out
test
mov
jecxz
sbb
lods
or
mov
sub
dec
imul
rol
ret
jge
je
arpl
push
popf
mov
xchg
aad
mov
dec
mov
int3
aam
lcall
sbb
inc
and
xor
test
call
into
call
ja
test
jl
sahf
stc
mov
jecxz
push
in
xchg
push
arpl
fbstp
mov
out
cmpsl
stc
xor
jne
push
nop
shlb
sub
sub
sarb
out
cltd
test
cmp
pop
je
cmp
sbb
pop
push
jne
lods
sbb
aad
push
loopne
mov
sub
push
mov
aam
mov
std
shrl
imulb
jno
inc
mov
or
push
gs
jp
adc
dec
aaa
inc
pop
cmpsl
or
cmp
fs
mov
jp
fisttpl
pop
push
ds
mov
je
or
push
mov
adc
and
mov
push
addr16
and
sub
sbb
cltd
lock
imul
stc
mov
test
mov
mov
test
sbb
test
pop
xlat
sahf
mov
lret
es
in
cmc
ror
xacquire
xor
fcmovnu
popa
sub
lahf
sti
xor
lock
pop
repnz
inc
mov
jle
imull
dec
dec
test
movsb
imul
cwtl
inc
and
jle
sbb
jge
inc
push
es
loopne
sbb
orl
frstor
sub
sbb
adc
sbb
and
rclb
subl
aam
enter
mov
