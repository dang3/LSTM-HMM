push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
push
pop
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
pop
lea
xor
jmp
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
mov
dec
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
incb
cmpsb
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
test
add
jp
add
aam
add
dec
and
add
and
add
and
add
add
add
add
add
scas
and
add
and
add
and
add
and
add
add
pop
and
add
add
fisubl
add
les
add
dec
and
add
add
add
and
add
and
add
add
sbb
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
dec
and
add
add
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
test
add
jp
add
aam
add
dec
and
add
and
add
and
add
add
add
add
add
scas
and
add
and
add
and
add
and
add
add
pop
and
add
add
fisubl
add
les
add
dec
and
add
add
add
and
add
and
add
add
sbb
add
add
add
add
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
jle
dec
jo
outsb
dec
jne
gs
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
gs
jb
jns
repnz
imul
jb
je
arpl
add
adc
push
gs
insl
gs
push
add
out
inc
gs
imul
bound
gs
add
dec
add
insb
outsb
inc
add
roll
dec
gs
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jne
jb
outsb
je
jb
arpl
jae
aam
inc
gs
jb
jbe
push
jns
gs
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
inc
gs
je
imul
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
push
add
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
add
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
add
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
jae
gs
gs
inc
outsb
je
jns
add
popa
jae
outsb
imul
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
outsb
jne
inc
outsb
je
jns
gs
imul
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
push
popa
jae
imul
inc
push
inc
push
dec
xor
cs
insb
add
add
gs
outsb
jne
inc
jb
jne
jae
add
add
gs
gs
gs
dec
je
insl
add
gs
outsb
jb
push
je
jb
jne
add
add
gs
jb
gs
popa
je
add
push
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jl
jnp
stos
lods
lods
add
test
mov
mov
mov
ret
lret
lret
int3
rcl
in
rcl
shl
ror
iret
hlt
int3
int
hlt
enter
enter
in
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
leave
leave
not
rcl
cld
fcomp
xlat
std
xlat
fdivr
fdivr
aam
rcl
iret
dec
int3
into
aad
aam
rcl
sar
ret
std
mov
mov
scas
iret
movsb
movsl
movsl
xchg
mov
das
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
sbb
mov
jnp
mov
sar
leave
leave
lret
dec
ror
aam
fcomp
fcomp
call
aad
dec
into
int3
dec
int
call
aam
into
into
int
rol
mov
mov
lods
std
test
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
int3
int3
call
rcl
fcom
fdivr
call
aad
into
into
int
lret
lret
int3
int
inc
sarb
mov
mov
cmpsl
cmpsl
cmpsl
jmp
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
push
push
das
prefetchw
sub
ss
aaa
cmp
and
adc
push
pop
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
mov
dec
enter
ror
call
aad
aad
call
ror
inc
enter
inc
mov
mov
ljmp
movsl
mov
xchg
xchg
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jl
jg
jle
jb
jb
bound
mov
cmp
inc
mov
outsb
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
leave
dec
lret
lret
dec
enter
ret
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
xchg
xchg
fwait
fwait
lcall
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
nop
lea
incb
jp
idivb
jmp
outsl
jo
addr16
data16
ret
jle
js
js
fs
inc
inc
cmp
pop
sbb
movups
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
test
pushf
pushf
pushf
decl
xchg
decl
xchg
xchg
sahf
mov
mov
mov
jp
jp
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addl
std
mov
jg
jb
jno
jae
je
jle
jle
test
jl
addr16
cmp
ss
jle
cmp
movsl
movsb
movsb
shrb
lods
stos
sti
lods
lods
lods
lods
stos
stos
test
movsl
mov
xchg
xchg
xchg
incl
jg
js
jns
jp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
lea
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
pop
push
femms
push
xor
inc
dec
insb
insl
imul
test
cltd
cltd
fistps
lcall
mov
decl
mov
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jp
lods
test
add
adc
test
mov
incl
xchg
decb
xchg
xchg
pushf
popf
pushf
std
mov
mov
xchg
in
nop
in
test
jne
prefetchw
add
inc
es
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
nop
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
cmpsl
scas
pushl
mov
stos
std
mov
xchg
lods
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
mov
call
nop
nop
xchg
xchg
xchg
sahf
sahf
pushf
movsb
mov
test
mov
xchg
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pop
pusha
arpl
jb
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsl
mov
mov
mov
lods
stos
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
xchg
cltd
cltd
cltd
fwait
popf
pushf
mov
movsl
movsb
std
movsb
mov
lcall
xchg
xchg
les
lcall
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jl
mov
jns
mov
jb
mov
insl
ljmp
adc
stos
or
or
mov
jle
mov
mov
stos
pushf
movsl
movsb
movsl
and
add
mov
pop
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
lcall
popf
sahf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
fwait
cld
xchg
cwtl
popf
stc
mov
xchg
pushf
cld
popf
xchg
xchg
push
xchg
pop
jge
xchg
dec
js
cltd
cmp
imul
pop
push
jmp
adc
test
ljmp
adc
scas
adc
mov
imul
mov
imul
aas
jg
rcrl
imull
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
sahf
call
pushf
pushf
lcall
movsb
mov
jmp
xchg
xchg
decl
mov
decl
ja
cltd
jo
cltd
bound
call
sub
pusha
decl
or
add
pop
lcall
pop
pop
jmp
sbb
mov
outsb
pushl
sbb
jae
mov
and
rcrb
inc
inc
test
les
mov
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
lcall
movsl
mov
ljmp
stos
test
lcall
orb
mov
decl
sub
mov
popa
decl
or
incl
add
mov
push
decl
push
call
add
lahf
add
test
pusha
pushl
es
mov
sub
shrl
inc
sub
lds
dec
xor
inc
mov
cld
mov
mov
mov
mov
mov
add
add
add
push
adc
test
mov
mov
mov
stos
ljmp
lods
pushl
scas
scas
jmp
jno
decl
or
incl
or
addl
incl
push
incl
add
mov
push
decl
add
cltd
add
sahf
add
movsl
add
scas
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsl
ljmp
sahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
adc
xchg
push
incl
add
decl
add
nop
add
xchg
add
pushf
add
mov
add
lods
add
mov
jb
ret
cmp
int3
inc
mov
roll
call
dec
nop
call
dec
xchg
fmuls
fisttpll
fistl
call
xchg
mov
mov
mov
sahf
lahf
or
add
add
add
add
dec
dec
adc
jl
lahf
mov
lcall
stos
test
pushl
mov
mov
mov
mov
scas
mov
movsl
mov
decl
sbb
decl
adc
pop
decl
add
xchg
add
xchg
add
pushf
add
mov
add
stos
add
mov
fs
mov
dec
nop
call
push
cwtl
call
push
cltd
ficoml
fistl
ficoms
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
mov
mov
add
add
add
inc
inc
adc
ja
lahf
cltd
popf
jmp
lahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
push
call
or
xchg
add
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
fbld
fisubs
in
cmpsl
jmp
fs
call
push
test
faddl
mov
test
mov
lahf
lahf
add
inc
inc
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
cltd
outsb
lcall
daa
push
cwtl
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
movq
roll
frstor
jmp
jo
jmp
jno
jmp
jo
jmp
jne
jmp
mov
out
jne
in
jbe
out
je
jmp
mov
mov
cmpsl
test
mov
lahf
mov
add
add
add
add
insl
outsb
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
movsl
lods
lcall
outsb
lcall
aaa
je
mov
push
call
pop
lcall
add
add
mov
popa
pushl
add
enter
ficoml
in
mov
ljmp
in
xorl
push
test
hlt
test
call
mov
shl
test
popf
daa
sahf
mov
lahf
add
add
add
add
aaa
cmp
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
mov
mov
lahf
outsb
mov
fwait
cmp
movsl
inc
jge
mov
aaa
ja
fwait
sbb
add
popf
add
mov
add
scas
add
mov
gs
mov
add
shll
mov
in
mov
push
pop
push
xchg
ret
push
xchg
ret
xchg
push
xchg
clc
xchg
out
nop
mov
inc
clc
lods
lods
stos
mov
pushf
popf
xor
pushf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
pushl
mov
mov
inc
inc
ret
mov
jl
lcall
dec
cmp
dec
cmp
xor
pop
lcall
add
test
pop
ljmp
add
add
rolb
dec
push
outsb
call
xor
out
xchg
push
fwait
push
cltd
push
lcall
negb
int3
cli
sahf
into
cli
popf
int3
cli
cwtl
lret
push
xchg
ret
jmp
mov
dec
mov
mov
sahf
sahf
sahf
aas
popl
cltd
lcall
xor
aaa
add
das
cs
cmp
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
inc
inc
leave
mov
mov
ljmp
dec
xchg
mov
pop
pop
lcall
add
stos
add
mov
popa
mov
add
leave
add
rorl
jmp
inc
xchg
out
lea
push
movsl
into
push
cmpsb
int
stc
test
sti
test
cld
cmpsb
iret
cld
cmpsl
sar
test
sar
std
test
push
sahf
mov
int
mov
mov
sahf
sahf
mov
add
cltd
lcall
xor
add
sub
or
bound
pop
xlat
jne
jo
mov
mov
mov
ret
ret
mov
pushl
push
test
scas
push
mov
scas
dec
test
sahf
sbb
pop
jmp
add
mov
arpl
mov
add
int
outsl
call
add
fists
jnp
out
pop
test
negb
sar
sti
mov
cld
mov
cli
mov
cld
mov
cld
mov
std
mov
std
mov
mov
std
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
sbb
add
dec
dec
outsl
outsl
outsl
mov
mov
aam
jmp
fcom
not
rcl
std
int3
int
dec
lret
lret
dec
lret
lret
inc
leave
enter
scas
jmp
push
mov
lods
jle,pt
sahf
or
pop
ljmp
arpl
mov
add
iret
add
fadds
jae
fiadds
je
jmp
jno
cld
scas
aad
std
mov
std
mov
cld
mov
fdivr
mov
fdivr
inc
fcos
std
mov
int
out
call
leave
int3
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
add
pop
or
enter
jecxz
pop
out
out
in
in
loope
loope
fucom
fsubp
fcmovu
fdivr
fdivr
int3
rcl
mov
push
test
test
jae
mov
add
mov
mov
add
lret
add
aad
jae
fldl
jbe
in
ja
out
xor
cld
mov
loope
inc
inc
loop
std
fdivrp
std
loopne
dec
loopne
dec
inc
loopne
dec
std
lret
sti
mov
lret
lret
sar
mov
mov
xchg
adc
add
add
incb
incb
incl
hlt
cmc
cmc
or
out
jmp
jmp
out
sub
out
out
dec
call
ljmp
in
out
fcmovnu
fucomp
les
xchg
cmpsl
cmp
mov
add
test
add
add
lds
push
into
add
add
add
ljmp
cli
mov
jecxz
dec
loop
std
int3
in
dec
jecxz
dec
loop
dec
jecxz
dec
loopne
shl
std
iret
jecxz
shl
std
shl
cli
ret
fcos
in
mov
xlat
inc
ret
out
test
test
xchg
xchg
xchg
sbb
lcall
std
add
std
std
add
div
add
hlt
lock
repnz
push
out
icebp
lock
out
repnz
out
out
pop
fsubp
loopne
mov
xchg
sti
sahf
and
pop
jmp
add
mov
fs
mov
add
roll
jb
flds
jne
in
jp
in
adc
negl
sti
mov
std
shl
cld
iret
in
call
out
call
out
shl
call
out
std
out
fsub
fucomi
fld1
std
fldl2e
shl
push
ret
aad
jecxz
lret
repz
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
cld
add
stc
add
cld
cli
add
div
or
aam
xor
mov
xchg
negb
add
add
lods
add
mov
add
leave
add
roll
jo
fldl
jbe
call
sbb
clc
jbe
cli
std
xlat
jmp
fldlg2
std
fldpi
fucomp
fucomi
fucomi
jmp
in
std
fsubrp
std
fucomip
std
aam
push
aam
call
iret
sar
lods
stos
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loopne
add
enter
mov
xchg
repnz
jmp
add
mov
add
int
insl
call
add
fiadds
jne
call
sub
shr
std
loopne
std
fsubr
fldl2e
std
fldl2e
out
cld
aad
cld
shl
cld
iret
loopne
cli
shl
stc
int
clc
int3
fdivrp
test
out
mov
jmp
rcr
call
xlat
fdivr
mov
mov
fwait
cltd
fwait
cmp
lcall
add
add
xlat
add
mov
subb
imul
add
stos
add
mov
mov
add
roll
outsl
fadds
jb
loopne
jns
jmp
aaa
xchg
cli
xchg
cld
lret
cld
lret
loop
sti
fdivrp
idivl
aam
repz
sar
lock
into
call
mov
iret
std
call
shl
call
fsubp
in
mov
mov
xchg
add
add
add
lret
add
shrb
loopne
xor
jmp
add
mov
gs
mov
add
into
push
jno
rorb
jbe
fimull
jns
loop
cmp
ljmp
call
scas
leave
std
loop
ret
cld
fildll
mov
lret
into
in
leave
rcr
fmulp
aad
loopne
fcmovb
out
loopne
in
out
test
out
lock
call
lret
leave
push
lods
lods
lods
adc
test
test
sahf
mov
rolb
ret
mov
popf
stos
aam
dec
cmp
sbb
cmpsl
sbb
scas
and
mov
jns
mov
dec
xchg
les
stc
leave
fs
mov
out
mov
rcl
mov
int
ror
int3
mov
into
shll
fcom
jg
fcmovu
jb
loopne
gs
in
call
out
jmp
lock
cmc
sub
cmc
mulb
icebp
lock
or
mov
int
xchg
add
mov
mov
roll
mov
test
lcall
jne
ljmp
mov
sarb
mov
ret
mov
cmpsl
mov
mov
enter
int
addr16
rcll
rcl
dec
aam
xlat
inc
aam
aad
aad
fsubs
xlat
sbb
loopne
adc
in
push
in
out
jmp
add
cld
testl
std
add
std
incl
mov
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
lds
leave
xor
int3
lret
daa
int
iret
and
aam
sbb
aad
adc
aam
or
aad
rcr
xlat
add
fstp
add
add
in
add
in
jmp
lret
add
incb
mov
mov
add
ret
ret
lds
mov
mov
mov
push
rol
or
mov
add
int3
lret
add
aam
add
xlat
add
add
fcom
add
aad
add
xlat
loopne
xlat
aam
add
loope
add
add
out
add
icebp
repnz
std
incb
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
ret
mov
mov
ja
test
dec
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
iret
iret
jmp
aad
cmc
rcl
aam
ror
iret
cli
lret
int
stc
int3
int3
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
aas
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
rcl
sar
call
aad
dec
ror
dec
into
int
lret
int3
lret
rol
mov
lods
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
jne
fs
dec
dec
dec
cmp
sub
sub
ss
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
dec
int3
lret
call
rcl
call
rcl
dec
lret
lret
inc
mov
pushl
stos
test
lahf
sahf
popf
cwtl
xchg
xchg
jmp
jno
xchg
pop
push
adc
xor
add
add
add
add
jg
addl
addl
aam
imul
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jno
jo
scas
scas
mov
mov
mov
mov
mov
mov
ret
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cltd
fcoml
addb
jnp
jge
js
jp
jnp
jp
jnp
jnp
jb
jae
push
push
push
cmp
jne
sahf
popf
pushf
mov
scas
lods
rep
scas
lods
sti
scas
lods
scas
std
test
pushf
pushf
call
xchg
call
mov
scas
jmp
scas
lods
leave
movsl
movsl
movsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
outsb
outsb
pop
stos
movsl
test
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
xchg
lcall
std
mov
call
sahf
sahf
ljmp
test
std
mov
scas
mov
mov
mov
movsl
movsb
cmpsl
pop
addb
add
add
add
pusha
or
scas
mov
movsl
sahf
movsl
decl
lea
xchg
cwtl
xchg
std
sahf
sahf
mov
negl
addb
push
pop
push
outsl
insl
outsl
outsl
xchg
subl
mov
std
nop
mov
ljmp
jg
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
stos
test
add
add
add
pusha
pop
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cltd
xchg
lcall
popf
popf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
imul
popf
dec
jp
mov
ss
mov
je
mov
outsb
ljmp
sbb
pop
mov
mov
scas
scas
jle
movsl
mov
add
add
add
popa
or
mov
call
sahf
sahf
jmp
mov
xchg
decl
orl
xchg
jno
cld
xchg
pop
cmp
dec
jns
nop
cmp
xchg
daa
push
call
push
ljmp
sbb
mov
outsb
pushl
push
jae
mov
pop
xchg
mov
lods
scas
xchg
sahf
lahf
popf
adc
add
add
popa
popa
popa
or
mov
test
mov
cmpsb
ljmp
cmpsl
test
decl
cmp
mov
decl
adc
xchg
push
decl
add
call
add
test
pushl
sub
jl
ret
das
jg
leave
xor
leave
xor
shrl
movsb
test
test
pop
popa
popa
or
movsl
test
jmp
scas
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
cmpsb
add
mov
insl
inc
cmp
call
inc
mov
rolb
call
inc
xchg
fimull
call
bound
stc
mov
mov
mov
std
incl
add
add
popa
popa
popa
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jge
nop
push
popa
call
pop
pop
decl
add
xchg
add
sahf
add
test
pusha
ljmp
and
iret
dec
xchg
fcoms
fistpl
fistps
loope
mov
fildll
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
add
add
dec
pop
jle
jp
pushf
cwtl
lcall
scas
mov
mov
mov
mov
mov
mov
mov
cs
lcall
and
xchg
minps
xchg
add
sahf
add
add
mov
pushl
xor
jmp
insl
test
ljmp
in
jb
jmp
js
call
test
std
mov
test
addl
dec
dec
pop
outsb
outsb
imul
test
fwait
cwtl
xchg
ljmp
mov
mov
mov
je
lcall
jne
popf
sub
cwtl
or
lcall
add
stos
add
mov
gs
or
xchg
jmp
js
ljmp
push
test
cmc
xchg
fisubrl
mov
push
fwait
cltd
fwait
add
sub
sub
push
push
dec
pop
addr16
test
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
cltd
push
pop
jmp
add
mov
fs
mov
adc
jmp
pusha
mov
push
xchg
push
xchg
push
xchg
clc
fwait
enter
lret
cwtl
lods
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
inc
pushl
pop
mov
lods
dec
cmp
and
add
pop
pushl
add
lret
fsubs
cmp
cmc
mov
into
stc
test
sar
cld
stos
sar
std
lods
sar
stc
cmpsb
int
call
rol
stos
test
pushf
or
add
add
dec
push
dec
aaa
jae
jb
stos
stos
stos
ror
int
out
int
cmc
lret
lret
int3
sti
lret
std
mov
mov
stos
pusha
ljmp
ljmp
add
rolb
dec
add
fildl
ljmp
sti
mov
cld
mov
mov
std
mov
xlat
std
mov
jmp
ret
scas
scas
lods
mov
add
add
add
add
or
aad
dec
loope
jecxz
loopne
fistps
xlat
xlat
out
shlb
cmpsl
sub
jmp
add
mov
add
aad
jb
jecxz
jp
icebp
push
mov
sti
inc
loope
inc
loope
std
dec
loopne
dec
loope
cld
lock
lret
mov
xchg
popf
sahf
pushf
sbb
add
add
incl
incl
jmp
or
in
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
fs
add
iret
add
fldl
je
ljmp
cld
ret
fdivrp
sti
shl
shl
shl
std
aam
xlat
call
aam
push
fdivr
fcmove
sar
mov
mov
add
incb
std
std
std
add
incb
aam
push
mov
pop
xchg
sahf
or
ljmp
add
ret
add
roll
jno
fiadds
jbe
out
and
cld
shl
fldl2e
fldl2t
xlat
out
fsubr
cld
cld
cld
shl
push
enter
rcl
sti
mov
lahf
popf
das
add
add
int3
int
or
arpl
ljmp
inc
add
aam
jb
loop
js
in
xor
stc
int3
loop
clc
leave
loopne
test
hlt
ret
xlat
repz
aad
out
aam
in
aad
out
ljmp
ljmp
test
incl
aam
push
mov
jae
push
addr16
mov
insl
inc
sbb
lret
and
sub
sti
ficoms
in
mov
out
in
leave
jmp
fnstsw
leave
faddp
sarb
in
ficompl
out
jmp
rorl
mov
add
lods
lods
lods
add
xchg
movsl
les
push
xchg
mov
nop
fidivrl
andb
int3
mov
ret
mov
int
aam
into
pop
aam
iret
dec
fdivrs
loopne
loopne
jecxz
frstor
loop
lock
in
in
or
std
incl
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
rcl
rclb
mov
rcl
or
loope
or
int3
int3
add
std
incl
incb
cltd
fwait
fwait
add
mov
or
int3
int
add
std
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
leave
mov
ret
mov
scas
mov
insb
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aam
aam
rcl
sar
into
iret
into
std
mov
mov
sarl
gs
push
sbb
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aad
aam
into
into
into
inc
enter
mov
lods
lcall
mov
push
add
add
add
add
jne
jne
xchg
adc
popa
arpl
addr16
outsb
jb
pusha
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
xchg
lds
jno
es
add
add
add
je
je
popf
xchg
lcall
test
clc
mov
test
test
push
push
dec
inc
mov
fwait
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
scas
cmpsl
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
movsl
cmpsl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cltd
cltd
cwtl
in
addb
imul
jg
lea
xchg
notl
mov
mov
lcall
jno
mov
lods
lods
push
stos
stos
lods
add
add
add
test
test
xchg
xchg
xchg
call
lcall
cltd
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
bound
std
lcall
ljmp
and
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
test
pop
lods
movsl
stos
test
sahf
sahf
popf
jmp
movsl
cmpsb
call
jl
mov
xchg
inc
jb
mov
imul
sbb
pop
call
or
scas
push
outsl
pushl
es
shrl
inc
inc
test
rcrb
subl
je
push
mov
movsl
cmpsl
cld
test
cmpsb
ljmp
mov
lcall
sub
decl
or
xchg
push
decl
pop
jmp
adc
shll
call
inc
mov
aam
mov
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
mov
add
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
movsl
call
pop
decl
push
pop
call
add
add
mov
push
xchg
fstpl
fistps
jmp
pop
movsb
jmp
cmpsl
call
fwait
mov
test
cmpsb
test
add
add
bound
adc
pushf
fwait
fwait
cld
mov
scas
mov
mov
mov
pushf
dec
jle
fwait
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
outsb
stos
call
jl
out
jge
out
jg
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
jge
sahf
and
popf
add
ljmp
add
ret
or
fimull
in
mov
push
xchg
push
xchg
leave
stc
xchg
jmp
cmpsl
inc
mov
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
cmp
movsl
add
mov
fs
add
aad
ja
ljmp
stc
stos
sar
cli
scas
sar
sti
scas
sar
std
scas
sar
jmp
lret
mov
cmpsb
ds
std
add
xor
inc
scas
mov
mov
mov
aam
out
lret
cli
mov
mov
jmp
add
add
add
call
nop
mov
fdivr
inc
fdivr
std
rcr
inc
lock
ret
test
addb
add
add
in
in
or
out
call
outsb
fldenv
movsl
and
pusha
mov
add
add
lock
xchg
cld
mov
std
into
in
std
shl
call
in
std
shl
shl
push
enter
into
in
scas
lods
lods
popa
addb
add
incl
std
std
incb
int3
lret
shrl
lahf
sbb
lods
add
mov
add
jecxz
jns
hlt
push
cmpsl
cld
loop
call
std
aam
std
shl
sti
aam
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
scas
push
fs
mov
or
jg
jmp
stos
cld
lock
shl
call
rcl
out
shl
out
aad
call
scas
les
cltd
lcall
add
add
rol
mov
lods
xchg
and
push
mov
shll
js
mov
xlat
mov
lret
fmul
iret
pop
fst
dec
jecxz
fistpll
call
out
in
sbb
mov
mov
cmp
mov
scas
push
mov
mov
ret
and
ret
fimuls
int
int3
or
aad
std
add
addb
incl
lods
incb
sarl
add
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
cwtl
mov
test
nop
dec
mov
bound
push
mov
sub
adc
in
dec
pop
scas
test
and
clc
mov
lret
lock
mov
movsb
pusha
imul
lcall
adc
and
std
lds
xchg
sti
mov
cmp
xchg
jge
pop
dec
xchg
add
imul
es
rcll
arpl
adc
cmc
icebp
cmp
jae
dec
fwait
gs
jno
sbb
stc
sub
xchg
push
xchg
and
xchg
cld
leave
or
cli
mov
mov
incb
add
xchg
mov
sbb
push
xchg
loopne
sti
sahf
rorl
inc
xorb
or
insl
cmp
sahf
jl
sub
dec
stos
int3
or
lret
sub
cli
mov
sbb
sbb
leave
lret
dec
into
int3
mov
cld
adc
iret
mov
jnp
push
mov
lods
inc
fistl
pop
jmp
test
mov
test
mov
inc
pop
ret
pop
shll
adc
fisttpl
and
fstpl
loope
repnz
das
push
out
scas
dec
mov
loope
loopne
jb
cltd
push
rol
notl
int3
gs
inc
loope
mov
push
xchg
aaa
sbbl
jb
cmp
sti
addr16
or
jl
faddl
lcall
or
clc
imul
out
mov
insl
hlt
in
pop
mov
lock
sbbl
pop
aam
xchg
sub
mov
mov
cli
imul
pop
inc
mov
jmp
jns
out
je
in
cmp
xor
lods
jmp
pop
fucomi
jne
jo
aam
fdivs
or
ret
rclb
sub
mov
add
das
sub
bound
out
loop
inc
adc
mov
push
call
repnz
and
jb
sbb
mov
fnstcw
mov
inc
xchg
pop
movsl
xor
int3
push
add
les
decb
ljmp
push
add
mov
std
jns
popa
inc
xchg
dec
or
shr
insb
mov
mov
push
or
aas
aaa
iret
push
mov
filds
comiss
or
cmpsb
lret
inc
adc
mov
mov
lret
insl
stos
mov
inc
inc
scas
and
push
stc
sbb
icebp
inc
insl
push
mov
outsb
outsb
popa
test
ja
or
pop
jo
mov
mov
stos
xor
sub
mov
pop
aas
mov
mov
adcb
lcall
out
jnp
add
jle
test
dec
enter
jbe
insb
sbb
inc
jmp
icebp
arpl
mov
bound
push
loop
insb
push
aad
inc
jb
out
pop
lcall
sub
push
imul
lcall
in
addr16
or
push
inc
inc
push
jecxz
stos
in
sar
sbb
dec
movsb
mov
cli
cmpsb
sbb
or
inc
cmp
out
popf
stos
sub
repnz
mov
ds
ret
xlat
mov
add
outsl
xchg
cwtl
pop
sub
or
mov
aaa
add
sub
mov
fmul
mov
add
pop
xchg
insl
dec
or
int3
mov
fnstsw
mov
stc
sub
jmp
xor
dec
ret
aas
xchg
jle
ljmp
and
sahf
push
sbb
xchg
dec
push
and
lods
add
fcmovnu
outsl
fs
test
adc
out
adc
pop
ret
fisubrs
mulb
mov
jb
and
mov
and
bound
insb
mov
fisttps
adc
in
jge
cmp
sbb
sbb
int
rorl
sbb
inc
ret
lahf
xchg
jl
push
mov
jge
cmp
mov
daa
je
inc
adc
or
inc
push
adc
dec
popa
imul
adc
sub
adc
cmp
jb
jge
stc
test
sbb
push
inc
dec
stos
xor
lea
faddl
out
mov
clc
inc
or
fadds
inc
dec
mov
in
lods
adc
cld
sbb
jg
xchg
fadds
pop
pop
cmp
dec
xchg
jl
sub
pop
mov
adc
mov
nop
inc
orb
xor
adc
and
and
idivl
sub
sbbb
popf
shlb
sub
xlat
ds
mov
addl
sub
or
call
movsl
xor
ret
xchg
dec
pop
adc
cmp
outsb
and
in
insl
and
adc
xchg
rcl
inc
bound
lea
mov
and
orl
sbb
jne
inc
addl
rcrl
mov
pusha
inc
cmp
jle
xlat
not
cmpsb
sub
mov
mov
or
out
insb
data16
test
jg
out
aad
dec
scas
inc
cmp
outsb
adc
rcrb
mov
pop
cmc
aad
cmp
mov
push
or
fdivl
jg
movsl
dec
loope
inc
adc
jno
xlat
and
dec
arpl
loop
roll
cltd
addr16
cmpb
icebp
inc
adc
repz
test
push
xchg
aaa
nop
push
ljmp
sub
sbbl
in
in
xchg
sub
push
xchg
jne
add
sub
mov
and
std
jae
push
gs
jg
jno
iret
data16
mov
xor
mov
sbb
in
and
test
insl
add
xor
out
fs
mov
jg
pop
lret
mov
shlb
mov
mov
dec
js
fdivl
repz
sbb
fcmovb
push
popf
mov
in
mov
and
or
inc
fstps
pop
mov
jge
out
ds
outsl
iret
insl
add
xchg
dec
ffreep
and
std
adc
test
sbb
pop
sti
mov
pop
xadd
jg
xor
ja
push
push
int3
xchg
or
push
hlt
icebp
das
and
sahf
xchg
cmpsb
fs
shll
ja
mov
rep
mov
or
test
lock
xchg
in
mov
sbb
lret
ja
enter
fmuls
lahf
idivb
imul
pop
mov
pushf
push
inc
pushf
mov
lret
adc
pop
inc
adc
addb
jnp
arpl
sahf
xchg
mov
cltd
out
and
mov
cmp
mov
stc
mov
pop
jnp
xor
sahf
xor
test
push
test
fidivl
clc
aad
sub
clc
sub
jle
push
lods
jge
adc
iret
icebp
das
and
push
jmp
in
popf
stc
xor
cmp
or
sub
sbb
push
js
into
insl
sub
ja
jae
call
test
out
orl
shrb
sub
mov
cld
in
test
inc
pop
fnstsw
ret
lahf
int
xchg
pop
cwtl
rorl
out
test
jg
jmp
push
mov
stos
test
mov
adc
or
es
lret
cli
outsl
daa
aaa
pop
mov
inc
mov
int3
arpl
add
xor
ljmp
push
or
xlat
mov
push
jmp
daa
dec
jo
jge
stc
jns
mov
int3
icebp
lods
inc
and
sahf
xor
ja
mov
jg
xchg
fidivl
jmp
popf
sbb
clc
sbb
and
outsl
cmp
lods
insb
nop
inc
fld
lea
mov
loopne
jmp
xor
mov
lods
dec
dec
lret
je
sbb
ficomps
icebp
fnstenv
mov
mov
ret
enter
sbb
mov
lods
and
jge
ds
data16
pushf
xor
gs
ret
inc
jecxz
cmp
and
adc
pop
or
pusha
out
adc
mov
pop
stc
nop
mov
xchg
sub
push
aad
dec
xbegin
shlb
ret
add
stc
nop
out
mov
loope
cmpb
fwait
mov
or
repz
push
and
dec
lahf
ss
fcmovnu
outsl
int
in
fsubr
push
out
fistpll
push
test
dec
mov
mov
stos
inc
dec
and
dec
loopne
mov
out
xchg
dec
or
xchg
pop
movsb
cmp
ja
bound
fisubs
push
in
aas
orb
repz
xchg
insl
add
je
mov
aaa
testb
or
nop
cmp
sub
rcr
pop
mov
repnz
add
imul
cwtl
pop
lock
pusha
xchg
sub
arpl
lcall
hlt
mov
arpl
or
push
mov
cltd
cli
inc
cmpsb
cmp
mov
xor
xor
icebp
inc
add
or
add
shlb
ja
jne
fsubrl
dec
xchg
sub
sub
cmp
nop
icebp
imul
mov
push
and
test
inc
push
jmp
fstpl
rorl
mov
xlat
pop
inc
call
outsb
adc
jbe
add
or
xchg
sbb
shlb
in
int3
and
adc
enter
pop
pop
mov
stos
lods
inc
in
outsb
push
mov
repnz
std
xchg
mov
sbb
jnp
push
call
inc
aaa
sub
test
sbb
sub
xchg
mov
fisubs
stos
jecxz
outsb
add
enter
jne
in
andl
xchg
fwait
and
mov
mov
mov
dec
dec
sbbl
es
bound
pop
out
or
shrb
xchg
sub
sti
nop
pop
repz
xchg
mov
add
sub
xor
xor
mov
sbb
in
add
lods
xchg
sub
jnp
xor
fdivl
mov
loope
and
xchg
das
loopne
pop
mov
andb
rcrl
cwtl
das
or
movsl
sbbb
insl
test
pop
jnp
or
dec
jle
jns
in
test
cmpsb
add
push
cmp
lods
cmc
mov
int3
or
mov
fmulp
shrb
lods
mov
dec
imul
add
push
jbe
fnstenv
xchg
xor
or
mov
cmp
fsubrs
out
mov
mov
inc
cmpb
push
pop
pop
repz
gs
testl
mov
and
push
lcall
mov
jg
sahf
shrl
ret
xor
aam
push
add
ds
test
jb
jl
jmp
sbbl
add
adc
aaa
shrl
push
aad
test
scas
sbb
fld1
mov
pop
test
sbb
out
or
add
adc
rcrl
add
ljmp
sbb
xlat
pusha
test
jmp
mov
add
hlt
pop
and
adc
or
pusha
stc
mov
lret
hlt
xor
movsb
cltd
fnstenv
mov
jg
jg
push
movsl
leave
adc
movsl
dec
ljmp
or
xor
out
cmpsb
xchg
addl
sbbb
xor
xor
mov
mov
xchg
int3
das
pop
hlt
pop
in
cmpsl
ds
repz
add
xchg
out
xchg
xchg
addr16
daa
or
jg
pop
imulb
adc
repz
dec
push
xor
push
lds
divl
lods
bound
pop
cmc
hlt
push
pusha
testl
cmpsb
cmp
push
cmp
lcall
mov
mov
loopne
mov
addr16
movsl
test
mov
in
push
jmp
push
nop
daa
js
pop
mov
cltd
sbbl
jecxz
push
sub
xor
mov
aad
jae
mov
inc
push
inc
fildl
fs
push
in
mov
fsubrl
xor
or
pop
icebp
mov
out
pop
dec
jecxz
mov
movsb
and
inc
fstpl
xchg
xor
cmp
daa
push
cmp
inc
leave
sub
imulb
or
inc
xlat
mov
push
out
mov
push
je
neg
jno
mov
jle
mov
mov
cmp
pop
jge
inc
xlat
dec
adc
enter
jo
cld
jae
and
rcrl
xor
xchg
jge
sbb
test
pusha
arpl
xchg
int3
out
mov
fisttps
shl
push
out
adc
inc
fsub
mov
das
jne
mov
popf
xchg
lock
das
cmp
pop
sub
jmp
mov
mov
lods
inc
pop
dec
and
fsubl
movsl
push
insl
xor
cmpsb
jae
clc
fs
mov
addb
call
mov
jae
or
test
lret
xchg
cs
into
rcrl
leave
pusha
xchg
loope
add
daa
xchg
cs
hlt
adc
sbb
lcall
lcall
mov
dec
mov
xchg
shlb
add
lds
pop
out
cmp
or
xlat
lret
push
movsl
sbb
pushf
xor
scas
mov
cli
or
lds
sbbb
sahf
xor
cmovg
and
outsb
ret
mov
mov
cli
xchg
dec
data16
stc
adcb
jmp
out
test
cld
scas
inc
out
movsb
mov
loope
pop
repnz
mov
jnp
jae
xor
cmc
pop
push
movsl
mov
int3
arpl
aaa
into
leave
adc
ret
rcrl
cltd
xor
std
repnz
nop
pop
divb
inc
xchg
sub
mov
test
inc
xor
scas
inc
cs
aad
mov
fmul
popa
into
mov
mov
test
loope
sub
test
mov
je
xor
outsl
xchg
xor
push
sbb
aas
cwtl
repz
mov
jne
add
jb
mov
in
js
push
xchg
std
xchg
iret
je
pop
data16
addb
sbb
lcall
and
ds
in
adcl
add
sub
pop
testb
and
nop
cmp
icebp
orl
pop
inc
adc
add
pop
in
shrb
dec
push
sub
inc
mov
loopne
inc
adc
aam
cwtl
xor
dec
sub
mov
sti
arpl
insl
test
cmpsl
sbb
xchg
sub
lcall
aam
je
or
es
cltd
pop
mov
cmp
mov
pop
and
cmpb
pop
mov
xchg
sbb
inc
fdivrs
clc
popf
lcall
or
loop
sub
xchg
jb
xor
add
pop
pop
scas
mov
call
sti
into
adcb
sbb
xchg
xchg
stc
nop
test
pop
jmp
jle
mov
fld1
jg
pushf
in
mov
mov
adc
dec
es
daa
stos
fwait
rol
and
dec
loopne
jns
and
int3
mov
and
fldt
andb
pop
repnz
pop
out
test
xchg
sub
decb
adc
adc
ss
movsl
and
movsb
repnz
mov
add
out
pop
loope
jl
inc
dec
lea
dec
in
aas
pop
and
loope
fs
int3
arpl
cmp
mov
xor
outsb
cwtl
sbb
pop
pop
shrb
jl
and
inc
add
push
jl
mov
sub
jecxz
pusha
insb
jmp
mov
mov
hlt
mov
aam
sub
pusha
or
ror
leave
outsl
push
int
int
and
inc
or
pop
cmc
or
sub
sbbb
jg
xor
gs
jl
outsb
std
fwait
std
test
testl
dec
and
ljmp
cld
dec
push
in
cmp
mov
jl
mov
pop
jmp
sub
nop
cltd
rcll
jg
lods
sbb
out
cmp
mov
mov
fldt
std
out
lds
dec
mov
fcmovbe
mov
cs
out
jge
inc
mov
sti
pusha
insb
fbstp
push
outsl
jb
pop
bound
or
dec
mov
sbb
fwait
mov
sbb
pop
push
sbb
pop
mov
sub
mov
cmp
lea
jns
cmp
aaa
lcall
xchg
sub
dec
cwtl
fimull
pop
lahf
das
fldt
mov
adc
add
call
movsl
in
stc
and
clc
fdivrs
mov
xchg
cmp
pop
xchg
push
popw
mov
adc
aad
dec
xor
nop
daa
je
mov
cli
xchg
nop
daa
sub
inc
dec
dec
scas
xchg
push
mov
mov
lock
jecxz
repnz
push
repnz
mov
testl
inc
mov
dec
aad
xchg
mov
shrl
xor
xor
push
adc
fsubrs
sub
lea
mov
out
pusha
dec
dec
in
sbb
hlt
jbe
jmp
mov
ja
push
lods
fsubrs
cltd
pusha
add
sbb
aam
dec
mov
icebp
mov
push
in
rorl
mov
xchg
hlt
sub
int3
mov
dec
adc
es
jb
pop
icebp
mov
mov
mov
jg
sub
lea
cmp
pop
xchg
adc
shlb
sarb
aad
push
imul
addr16
lods
inc
dec
mov
insb
in
test
pop
pusha
addr16
negb
mov
shrb
or
rep
movsl
shrl
into
jp
aad
movsl
cmp
imul
jg
dec
cwtl
das
aas
add
adc
pop
mov
outsl
aad
pusha
cmp
adc
ficoml
mov
mov
ret
daa
imul
inc
lret
cmp
stos
xlat
shrl
lret
jo
flds
arpl
out
push
ljmp
mov
mov
inc
jbe
gs
xacquire
mov
addl
rol
push
out
out
pop
sbb
scas
inc
adc
enter
lock
jl
mov
sahf
inc
fcoms
add
shlb
and
xchg
sub
pushf
xchg
dec
filds
addr16
xor
and
xchg
xchg
xchg
add
out
loope
loopne
sub
popa
dec
push
aas
lret
in
mov
cwtl
outsb
add
arpl
sub
mov
fidivrs
rorb
leave
shrb
xor
shlb
mov
fmull
cs
fistpl
rcrl
lahf
ss
and
sahf
fld
pop
or
or
sarl
mov
lods
cmp
cltd
stos
jl
mov
jno
or
sub
pop
sbb
mov
jp
sub
pop
cmpsl
sub
sti
push
cmp
xchg
hlt
das
jo
lods
insb
push
iret
inc
fxch
insb
mov
push
sbb
enter
scas
jmp
mov
mov
fidivrl
adc
out
or
rcll
icebp
call
mov
ret
mov
popa
clc
mov
inc
fildl
inc
mov
push
add
lcall
jne
ret
push
dec
fnsave
cmpsl
cmpsl
pushf
xchg
sub
add
popf
jb
cli
xchg
imul
dec
fbstp
push
in
inc
shlb
les
mov
lcall
push
mov
in
les
test
mov
mov
aam
sub
lcall
sahf
fsubs
ljmp
mov
ja
aam
lahf
cwtl
aad
sbb
xchg
sub
cmp
loope
xor
mov
push
lods
sbb
sbb
ret
cmp
nop
test
pop
jbe
jnp
add
in
test
insl
jbe
pop
ss
sub
pop
sti
xchg
pusha
xor
pop
sbbl
pop
pop
xor
addl
jb
sbb
sbb
data16
lahf
cmp
sbb
lea
xchg
test
lret
fsubl
ljmp
push
lods
ret
or
jecxz
lret
ret
mov
jecxz
fdivl
fdivrs
rorb
loop
mov
sub
aad
in
add
mov
les
fsubr
orl
xor
jnp
jbe
jae
inc
inc
xor
gs
outsl
push
push
xchg
mov
inc
cmp
scas
mov
push
cwtl
stos
ss
mov
inc
ficoms
mov
or
jae
dec
dec
sub
xchg
pop
imul
add
jo
and
outsb
mov
cmp
pop
iret
pop
mov
nop
daa
sbb
into
cmpb
jo
mov
es
icebp
mov
shrl
aad
cwtl
das
fdecstp
cmc
mov
cli
lret
bound
adc
insb
pusha
imull
mov
popa
sub
mov
dec
mov
scas
popf
dec
in
shll
repnz
ss
sub
into
or
jo
sbbl
pop
xchg
repnz
cmp
lds
mov
jecxz
add
pop
test
lret
cld
lahf
push
jmp
decb
das
repnz
jmp
addl
movsb
mov
es
xchg
mov
fldl
sub
test
sti
mov
add
sbb
jmp
xchg
int3
test
push
stc
or
subb
ja
mov
dec
mov
ret
fnstcw
dec
std
out
mov
xchg
fidivl
pop
jno
dec
out
lret
fiadds
nop
ss
in
or
cwtl
jl
std
xchg
push
or
imul
int3
jnp
rorb
pop
outsb
cmp
pop
lods
pop
mov
sti
dec
xor
push
imul
mov
inc
in
movl
xchg
fisubs
insl
add
fstpt
mov
les
xchg
push
mov
mov
push
and
cltd
outsb
bound
xchg
jns
mov
dec
lcall
mov
int3
fisubrl
aaa
dec
out
and
mov
imul
je
movsl
adc
add
jne
outsl
cmpsl
adc
sti
data16
inc
push
jl
stc
outsl
push
mov
fiaddl
or
popf
sbbl
mov
mov
fcmovnb
pop
or
fnstsw
bound
pop
push
in
dec
dec
jne
cmp
sbb
mov
pusha
dec
in
pop
push
in
dec
or
adc
pop
loop
xchg
call
push
mov
outsl
roll
jb
sahf
sahf
xor
insl
and
mov
push
popf
or
popf
sub
rcrb
inc
ret
pop
cmp
cmpsl
ds
int
push
mov
loopne
pop
mov
fcomi
mov
in
sti
mov
fdivl
leave
fcmovne
xchg
cld
daa
mov
sub
stc
pop
dec
mov
jb
mov
rclb
in
in
rcrl
aam
push
mov
add
insl
add
mov
fld1
cld
popf
xor
or
cmp
inc
sbbl
lods
mul
jp
push
xchg
sub
jmp
cmpsb
mov
inc
sbb
push
hlt
adc
sbb
xchg
sub
in
hlt
mov
idivl
adc
jl
loope
or
push
mov
stc
nop
out
shlb
icebp
fsubs
mov
rdtsc
enter
adc
xor
test
out
insb
add
jmp
insb
sbb
jae
aas
movsl
sbb
jmp
sbb
dec
mov
xor
pop
stos
rcrl
pop
outsl
and
insb
ja
test
cld
std
or
inc
mov
les
aam
aad
jne
pop
shrb
mov
or
xchg
mov
pop
xor
push
xor
adc
push
out
pop
sbb
ja
xchg
ja
ja
in
sbb
loopne
lods
test
test
test
pusha
mov
xor
inc
ja
ja
arpl
and
dec
test
and
lods
pop
push
daa
mov
mov
js
pop
dec
fldt
in
mov
jns
es
jne
adc
test
lret
loope
add
cmc
clc
xor
or
in
cld
mov
add
scas
xchg
sub
mov
sbb
mov
insl
add
orl
jle
in
push
push
dec
mov
daa
adc
and
lret
push
jmp
pop
jle
inc
ds
ret
outsl
mov
mov
add
pop
push
inc
mov
jae
test
mov
mov
lret
lods
dec
shl
inc
iret
push
rcrb
aaa
sarb
or
decl
xchg
mov
test
inc
xor
outsb
outsl
je
mov
out
xor
xchg
gs
and
insb
pop
rorl
gs
subb
pop
insb
mov
xor
push
pop
xlat
negb
and
mov
enter
add
jbe
adc
push
div
xchg
dec
add
cmp
rcl
dec
in
mov
pop
into
inc
stc
nop
xchg
out
mov
and
mov
mov
in
adc
scas
mov
and
add
addb
jp
in
xor
cmp
data16
clc
js
add
jae
pop
dec
scas
jns
repz
divl
xor
in
dec
adc
movsl
cmp
lret
push
jmp
adc
adc
imul
sbb
jae
xchg
ja
test
sbb
mov
mov
add
mov
sub
mov
inc
lock
adc
add
xchg
inc
ljmp
aad
inc
or
push
lahf
sub
pusha
jp
mov
adc
pop
and
jmp
lcall
jle
pop
sub
std
push
jle
outsl
mov
mov
mov
test
mov
jne
adc
dec
xchg
call
int
cltd
mov
sub
sub
xchg
pop
pop
or
xor
out
push
mov
div
sbb
fldenv
in
idiv
insb
mov
movsb
xchg
js
mov
push
int3
jmp
xchg
mov
mov
adc
pop
sti
and
fistpl
mov
clc
sub
sub
pusha
pop
dec
cmp
sub
mov
cmp
shll
jecxz
out
push
mov
icebp
repz
fwait
mov
or
shll
or
lcall
cltd
stc
or
out
test
push
cli
xchg
inc
cmp
sub
ret
lret
pop
icebp
in
faddl
mov
push
pop
or
push
xchg
xor
call
adc
sub
std
scas
jecxz
cmp
lock
call
jmp
js
insl
stos
pop
xor
into
jne
icebp
sub
lcall
cmc
pop
and
cwtl
fiadds
dec
xor
mov
xor
fsincos
mov
or
scas
cs
mov
aam
xchg
push
adc
int3
outsb
jo
aad
leave
xchg
add
das
cmp
add
mov
inc
movsl
pop
push
jbe
sti
xchg
xlat
lods
cmp
mov
into
inc
imul
rorl
lret
sbb
shll
adc
sbb
and
mov
jmp
out
pop
int3
dec
cmp
insl
fisubrs
popa
pop
fdivrl
dec
jo
fs
loopne
push
xchg
dec
loope
jns
jmp
and
adc
ss
cwtl
stos
mov
dec
in
rorb
sbb
dec
push
fldt
xchg
loop
daa
or
sub
les
inc
push
in
cmp
add
insb
dec
lods
mov
dec
roll
pop
fmull
je
jae
xchg
jle
mov
add
push
mov
adc
pop
loop
add
testl
or
lret
bound
cmp
jno
mov
imul
popa
vmovlpd
push
mov
fcoml
jbe
sub
mov
testb
xor
fnstenv
and
mov
mov
add
cs
pop
or
cmp
aad
cmc
mov
ror
push
test
pop
repz
std
cmpsb
dec
mov
xlat
outsb
std
movsb
and
and
dec
rorl
cmpl
sbb
idivb
push
adc
je
stos
es
push
xor
ds
int3
repz
mov
in
mov
fists
fisubrs
les
or
ss
imul
test
ret
ret
ret
enter
popa
hlt
mov
inc
sbb
stos
sub
xchg
lods
add
rclb
ret
and
inc
sub
pop
hlt
clc
jb
std
sbb
shl
jge
mov
mov
fisttpll
lods
iret
sahf
jne
jne
push
aas
adc
pusha
outsb
jne
xor
adc
inc
pop
jb
lock
dec
xchg
or
aas
loop
mov
jg
sahf
xor
sbb
or
daa
dec
and
stos
sarb
xchg
inc
andb
les
mov
jns
repnz
daa
pop
lret
jns
test
faddp
imul
fnstsw
jo
inc
mov
pop
mov
inc
xchg
fst
sahf
push
push
mov
arpl
add
add
mov
into
xlat
std
clc
dec
and
scas
push
fcoml
mov
test
dec
sub
cltd
lahf
imull
adcb
jle
sub
sbb
xlat
mov
outsl
sahf
or
insl
jnp
jge
mov
jmp
fwait
stos
dec
call
or
sti
jmp
add
loop
test
insl
fcmovbe
insb
or
iret
or
test
pop
cmp
push
shr
and
xchg
cmp
stos
pop
stos
pushf
xor
insb
adc
sub
xor
xor
push
mov
cmp
and
sbb
fdivs
xor
rcrb
dec
mov
ret
ror
data16
jbe
arpl
xchg
mov
es
cltd
jl
in
mov
daa
mov
push
call
fwait
push
loop
outsb
idivb
in
jmp
in
sbb
insl
jno
pop
add
mov
popa
fisttpl
cmpsl
notrack
lahf
and
sbb
push
mov
xor
mov
jmp
add
loop
out
cmp
cmpsb
loopne
fsubs
lods
adc
adc
sub
out
mov
divl
sbb
sub
sub
jbe
push
pusha
and
mov
adc
xor
bound
out
dec
xchg
xor
ds
flds
cmp
lcall
pop
movsb
imul
jl
outsb
push
xchg
xchg
jle
shrb
repz
sti
jmp
jecxz
dec
pop
out
andl
int3
mov
push
cmpsb
fbld
stc
mov
ds
fsubs
adc
stos
ljmp
inc
rclb
mov
ret
pop
xor
sarl
inc
mov
mov
dec
mov
icebp
pusha
mov
xchg
mov
cmp
inc
jp
lods
jmp
push
push
repnz
lock
lret
stc
popf
mov
mov
inc
xlat
test
xor
xchg
sub
aam
xchg
dec
mov
add
jno
hlt
mov
xchg
outsb
add
push
inc
push
in
jb
out
cmc
scas
pushf
or
aam
jmp
dec
inc
mov
cmp
cmp
cli
mov
xchg
lods
xchg
leave
pusha
test
aaa
ja
xchg
daa
imul
mov
in
mov
dec
mov
pushf
loopne
and
add
movsb
mov
jmp
movsb
sbb
cmp
es
pop
outsl
fisubs
fisttps
cmpsl
mov
pop
sbb
inc
fldt
in
xchg
dec
pop
sahf
xorb
aad
icebp
test
hlt
pop
fnstenv
cmp
cmp
cmp
push
push
jnp
cltd
push
mov
fsubl
test
mov
lahf
xlat
sarb
cld
in
sahf
push
push
pop
es
ljmp
lahf
mov
mov
daa
sbb
daa
out
xchg
mov
je
push
and
ret
mov
pop
in
add
inc
je
cmpsb
movsb
sub
jge
push
in
mov
xchg
inc
pop
mov
jne
mov
jno
pop
imul
sbb
xor
dec
rolb
jne
push
icebp
dec
std
add
push
push
cwtl
cmp
stos
inc
bnd
enter
dec
dec
scas
push
loopne
jl
jns
fiaddl
inc
rcll
aas
xor
rcrb
out
cmp
pop
insb
adc
mov
pushf
sbb
lahf
mov
xor
test
test
add
lcall
and
jae
fneni(8087
ja
adc
sbb
sarb
scas
loope
sub
pusha
pop
jp
sbb
dec
and
jb
inc
mov
sub
popf
pop
jle
pop
stc
or
inc
sbb
and
fidivrs
xor
aas
sub
xchg
arpl
ret
stos
mull
adc
mov
pop
or
cmpsb
or
sbb
or
cmp
sbb
inc
inc
fs
mov
push
xchg
push
div
and
add
mov
pop
enter
mov
shlb
leave
add
loop
lea
es
mov
icebp
sbb
lds
sbb
sub
jae
lret
clc
daa
popl
ja
push
fiaddl
jno
dec
pop
jno
mov
cltd
popl
cmp
sub
ljmp
push
into
arpl
inc
shlb
outsb
mov
adc
jnp
pushf
inc
push
bound
push
dec
das
cmp
pusha
outsl
fwait
or
mov
xchg
mov
mov
test
xlat
jb
popf
dec
jns
lret
pop
jg
insl
fidivl
ret
iret
test
lock
xlat
mov
imulb
in
test
mov
arpl
xor
gs
inc
xchg
dec
lds
push
jns
pop
and
jno
imul
fwait
xor
cmpsl
xchg
sub
mov
jns
dec
dec
mov
fistpl
push
cmpsl
dec
inc
jg
cmc
mov
mov
andb
clc
loope
aam
loope
jno
div
fildll
in
push
pop
pop
testb
mov
mov
adc
inc
mov
pop
add
pop
pop
sti
pop
push
mov
nop
pop
fistpll
mov
adc
loopne
mov
adc
cwtl
push
lds
xchg
adc
xchg
pop
mov
mov
data16
cmp
push
addr16
xor
jge
fsubr
cmp
shrl
pop
jbe
xchg
jg
test
aas
mov
lds
out
ss
cli
outsl
pop
xchg
sahf
xor
pop
hlt
mov
cmp
int
aaa
adc
dec
in
jge
mov
scas
jo
mov
cmpsb
test
push
push
cltd
xor
jb
icebp
pop
cs
push
pushf
mov
jnp
test
mov
out
repnz
hlt
adc
pushf
inc
add
pop
xor
aad
test
data16
mov
in
inc
gs
xchg
mov
cwtl
das
shlb
push
sbbl
xchg
cs
mov
cmovo
add
xor
inc
mov
mov
jl
lods
pushl
movl
movsl
cmp
pop
cmp
outsb
lret
pushf
and
adc
jae
inc
cld
and
std
xchg
xchg
test
jo
xchg
inc
movsl
js
idivl
out
jb
jae
loop
loop
imul
xchg
lcall
gs
loop
mov
sti
and
mov
mov
in
or
fndisi(8087
pop
outsl
add
sbb
in
andl
lods
stc
adc
scas
in
imul
xor
lcall
push
stos
rorl
lahf
inc
xor
mov
pop
sahf
orb
mov
fists
dec
and
dec
nop
out
test
insl
subb
mov
out
imul
and
insb
mul
ljmp
sbb
fs
cmp
jg
xlat
xor
push
add
enter
out
jg
in
mov
sub
or
mov
add
sbb
lahf
ss
ds
jno
cmpsl
ds
xchg
push
jecxz
pop
fcompl
fdivrl
das
aad
jne
fwait
mov
add
jns
jnp
adc
mov
cmpsb
jge
xchg
loopne
lcall
or
addr16
ss
aaa
jmp
jl
fidivs
sahf
test
bound
gs
ja
aaa
popa
clc
push
mov
lret
mov
fldl
cwtl
jle
cmpsl
and
fsubr
inc
int
push
cmp
fucom
cltd
icebp
inc
inc
cmp
std
jmp
jmp
out
data16
pop
push
mov
das
cmp
mov
lea
or
jno
shrl
mov
xlat
mov
jae
push
movsl
data16
lds
imul
xchg
sub
bnd
push
mov
mov
pop
enter
jp
loope
aad
mov
fmuls
outsb
jo
push
aas
pop
lock
dec
jle
jl
mov
adc
jne
xor
mov
pusha
ret
repz
mov
stos
lret
fidivs
shr
xlat
adc
cli
mov
add
loope
in
stos
lds
sub
pop
push
imull
xor
mov
int3
imul
lods
mov
loope
mov
add
jmp
cwtl
push
lea
jne
sbb
loopne
cmp
adc
pop
repz
sahf
enter
jmp
dec
das
mov
mov
pop
hlt
movsb
imul
lock
xchg
fs
xor
mov
and
fsubl
or
mov
cmp
mov
js
xchg
shll
fs
gs
jne
fidivrl
cmpsl
loop
mov
xchg
jae
in
or
fnsave
enter
sahf
es
add
inc
test
add
sub
jl
roll
cmpsb
cmp
mov
inc
imul
push
dec
inc
adc
xor
push
mov
sub
and
dec
jbe
inc
dec
test
gs
pop
adc
pop
push
push
push
sbb
add
jg
lods
add
addr16
jae
push
jl
mov
das
push
rcll
and
fwait
pop
jns
inc
out
xchg
jmp
arpl
mov
inc
ftst
push
mov
jbe
std
mov
and
daa
je
cmp
cmpsl
call
pop
pop
cmp
leave
or
adc
aad
pop
icebp
mov
dec
adc
mov
pop
and
jp
sbb
aam
stos
nop
fs
sub
push
jecxz
lds
roll
addr16
rorl
mov
mov
adc
int3
lret
adc
sub
mov
sub
mov
sbb
lahf
dec
nop
inc
add
xchg
sub
jle
mov
ljmp
and
mov
les
cmp
mov
cmp
movsl
pushf
cltd
add
xchg
js
scas
add
pop
roll
dec
and
sub
dec
xor
imul
and
stos
incl
mov
gs
lds
jle
repz
test
mov
in
in
iret
sbb
test
lea
sub
lret
out
mov
sub
es
popf
mov
jae
xchg
mov
dec
arpl
leave
push
ja
int3
cmpsb
mov
cmp
call
bound
not
add
iret
dec
inc
inc
stc
jnp
sub
arpl
or
jbe
xchg
inc
jne
ficoml
cmp
mov
das
adc
hlt
aas
imul
lock
outsb
and
scas
lods
add
es
lea
outsl
aam
out
dec
out
pop
repnz
aad
fdivl
shrb
mov
divb
cmova
lea
mov
aad
pop
pop
dec
in
or
sub
cli
or
je
outsb
hlt
dec
adc
outsl
and
mov
loope
xlat
repnz
jl
mov
inc
subb
mov
xchg
sub
mov
cmp
mov
nop
lahf
ss
pusha
push
or
mov
pop
push
jmp
lahf
cmp
and
adc
cmpsl
jge
mov
inc
clc
lock
push
rcl
mov
data16
rorb
pop
ds
loopne
inc
pop
cmpsl
gs
or
pop
stc
lea
popl
pop
jmp
lcall
in
ja
scas
cmpsl
pop
jb
data16
adc
sbb
push
loope
stos
cli
push
mov
push
mov
dec
ljmp
pusha
sub
repz
cmpsl
cmp
inc
or
ss
cmp
les
xor
inc
inc
jmp
jns
sub
or
jle
fmuls
data16
out
out
xlat
dec
xchg
in
int
pushf
in
and
clc
movl
mov
sub
mov
scas
add
xor
jo
in
stc
dec
push
dec
movsb
xlat
add
xor
jmp
and
mov
jg
inc
xlat
aad
xchg
outsb
sbb
aad
data16
sbb
iret
xchg
push
dec
mov
imul
adc
add
push
jmp
mov
pop
cmc
test
ret
out
push
call
push
loopne
test
jbe
push
mov
arpl
in
stos
mov
fisttpll
xchg
adc
or
test
out
cmp
pop
jg
pop
push
ds
insl
push
dec
mov
push
lea
xor
push
cmpsb
fcoml
xchg
pop
mov
mov
testl
dec
lahf
mov
cmp
and
les
inc
fidivs
adc
jp
cwtl
cld
xchg
lret
cwtl
xchg
jmp
mov
mov
cmp
outsb
or
aad
push
in
rcrb
icebp
xor
and
adc
aas
xchg
das
pushf
hlt
pushf
dec
lcall
ficomps
dec
and
into
mov
fstl
or
outsb
mov
sub
adc
shll
mov
repnz
dec
popa
dec
negl
mov
push
fwait
repz
mov
adc
mov
add
or
fisubs
and
push
icebp
mov
cmc
pop
xor
push
hlt
movsl
cs
mov
pop
pop
pop
mov
mov
jne
push
fnstcw
ret
test
mov
push
cmp
stos
fndisi(8087
sub
rol
pop
loopne
add
mov
fcoml
inc
testl
leave
and
mov
fisubrl
dec
dec
inc
add
test
push
xor
mov
dec
sbb
mov
xor
insb
or
add
lock
jo
pop
cmp
ficoms
mov
fs
fprem
lds
fcmove
cmpsb
mov
clc
xchg
mov
push
lock
pop
fdivs
add
jb
mov
std
sbb
fildl
or
mov
push
adc
jne
andl
shrl
cmc
dec
call
push
pop
mov
leave
loope
in
sbb
nop
cmc
mov
movsb
std
mov
sbb
mov
insb
enterw
outsb
sbb
in
xchg
cmp
insl
jge
sub
cmp
sbb
dec
pop
and
inc
pushf
mov
push
stc
adc
stos
jno
imul
cmpsl
adc
nop
add
mov
jae
pop
mov
sbb
sbb
dec
ret
jmp
xorl
mov
repz
sub
shl
inc
xlat
stos
add
lds
int
je
iret
sub
sbb
into
xchg
jno
repz
icebp
adc
fdiv
xchg
mulb
ss
sbb
mov
add
mov
jmp
fdivs
int3
inc
loop
push
sub
and
push
inc
incl
dec
repz
hlt
inc
jmp
or
arpl
ja
shr
mov
jle
push
lods
lds
mov
movsl
and
xchg
sub
repz
and
imul
pop
jae
mov
je
fst
cmpsb
xor
jmp
and
dec
pop
leave
mov
fwait
pop
and
lea
pop
cmpsb
or
inc
stos
mov
adc
adc
repz
and
jns
fcmovnbe
mov
jno
cwtl
sub
jns
daa
inc
xchg
jne
nop
mov
sub
jl
and
push
insb
inc
fcompl
out
arpl
inc
imul
pop
scas
sub
adc
jecxz
push
or
rorl
ja
dec
add
pop
test
push
or
dec
test
notb
sub
setle
shlb
and
test
pop
sub
xchg
inc
cmp
xchg
xchg
js
testl
ds
aad
xchg
push
data16
cwtl
sbb
into
dec
push
mov
into
and
stc
adc
cmp
jbe
imul
push
mov
push
cmc
adcl
insl
ret
jnp
fcoms
imul
pusha
mov
xchg
lods
pop
push
fcomp
pop
mov
mov
imul
shll
jecxz
fdivs
inc
ss
cmpsb
cltd
xor
and
loopne
inc
test
imulb
inc
push
test
int3
push
jl
fwait
push
dec
sbb
add
cs
outsl
adc
push
mov
mov
dec
imul
sbb
aas
ss
cs
mov
and
jmp
es
pop
das
push
sar
jns
js
pop
pop
mulb
push
dec
pusha
cmp
cwtl
aaa
mov
push
sti
lcall
inc
pop
lods
mov
ret
pushf
push
call
inc
pop
or
lea
jns
pop
aas
in
dec
insb
sub
jo
inc
xor
mov
cmpsb
inc
mov
mov
mov
sbb
sub
jns
test
sub
dec
arpl
outsb
test
mov
sbb
cld
into
fnstcw
lock
cmpl
mov
ret
in
jo
sahf
nop
mov
inc
fistl
aas
xchg
mov
je
std
and
add
and
mov
lods
cmp
adc
std
and
in
xchg
outsb
adc
jmp
jae
dec
fisubrs
clc
fcmovnu
pop
test
xchg
pop
psubd
out
movsl
add
xlat
shll
sub
std
lea
insl
fdivl
xchg
loopne
lahf
call
js
cmc
stos
cs
mov
xor
rcrl
cs
cmp
adc
add
mov
scas
push
mov
push
mov
cltd
or
das
xorb
jb
mov
out
xchg
mov
mov
push
mov
pop
pop
es
jmp
mov
adc
jae
stos
fstps
jns
out
test
or
icebp
out
cld
sub
xchg
icebp
adc
cmpsl
loop
daa
lcall
adc
fists
inc
fidivl
mov
and
push
loopne
imul
cld
fs
add
push
xor
mov
mov
cwtl
mov
addr16
and
aad
inc
fsubrl
pop
lahf
stos
les
lods
sbbl
jnp
out
xor
scas
mov
mov
inc
pusha
inc
adc
inc
add
xor
data16
xor
xchg
push
cmc
imul
rcll
lret
and
push
mov
mov
outsb
insl
das
cmp
mov
call
movsb
arpl
adc
jb
insl
cltd
call
incl
aaa
adc
jns
addr16
cmp
xchg
cli
ss
fsubr
mov
jns
mov
fs
push
mov
jnp
and
jmp
jge
cltd
cltd
jnp
bound
adc
lret
xor
xchg
popa
xor
repnz
xor
or
loopne
adc
jle
cs
dec
sbb
arpl
push
mov
rcrl
popf
leave
sub
sbb
push
sbb
cld
test
ds
arpl
shrl
test
jg
out
push
and
xor
ja
int3
xchg
sbbb
andl
inc
fwait
push
mov
imul
rorb
add
test
insl
fsts
adc
mov
imul
sub
jno
push
sub
mov
add
and
enter
fisubl
xchg
pop
add
cmp
sbbb
mov
push
loope
movsb
cs
int3
call
dec
or
jle
repz
test
scas
jno
xor
mov
daa
outsl
pop
xchg
nop
arpl
sbb
jns
inc
popf
in
insl
fidivrl
jp
jb
mov
cmp
push
jo
lcall
jne
cmp
lock
inc
testl
popf
jmp
out
jnp
out
xchg
jge
out
mov
loopne
int3
clc
mov
inc
movsl
push
ljmp
sbb
sub
mov
pusha
mov
inc
xchg
fs
pop
jae
stos
xchg
sahf
sbb
mov
mov
insb
jg
jmp
and
mov
movsb
xchg
push
push
movsl
dec
or
sub
mov
lock
xchg
int3
push
ret
adc
jb
ret
pop
push
mov
loopne
jno
sub
ret
mov
mov
pop
mov
xor
jns
jae
fsubr
inc
sbb
into
jae
int3
movsb
imul
iret
lds
cld
out
lea
push
inc
push
cmp
and
pop
jl
lahf
mov
int3
jae
lret
xor
mov
jns
inc
stos
dec
in
addr16
jo
xchg
cmp
cli
xchg
push
loopne
clc
lret
pushf
lods
in
fiadds
repz
shll
outsl
ret
test
test
aam
adc
mov
sbb
sti
fwait
push
mov
add
mov
xchg
and
cmp
add
add
mov
dec
dec
cmp
xor
add
xchg
xor
adc
or
lea
movsl
test
popa
clc
mov
mov
jns
dec
jnp
lcall
int3
in
lcall
insb
mov
pop
jo
sub
aas
lea
shrl
insb
fadds
repz
lock
js
int3
xchg
in
test
out
xchg
sar
pop
xor
sbb
int
shll
out
fsubl
rclb
cmp
sub
cmp
jp
in
add
sbb
dec
in
xor
inc
lods
mov
sarb
adc
xchg
cmp
outsb
inc
mov
outsl
jbe
cli
stos
xchg
or
into
push
sub
adc
bound
cmp
rcrl
mov
iret
sahf
es
ret
sub
jecxz
push
adc
in
leave
sub
dec
push
fists
pop
mov
hlt
fldenv
fnstenv
cmp
out
data16
test
xor
jae
daa
mov
mov
mov
mov
cmp
lods
cmp
pop
leave
jg
add
pop
mov
call
add
fnsave
or
pop
sub
push
in
inc
fisttpll
or
inc
loop
jb
arpl
ret
inc
mov
fcmovne
arpl
xchg
xlat
ss
gs
or
push
inc
or
cmpsl
sbb
mov
shrl
repnz
lea
and
add
movsl
and
add
mul
fucomi
hlt
mov
cld
outsl
andl
lods
stc
xchg
pushf
dec
pop
add
or
in
orl
push
sub
shrl
jp
lret
cmpsl
add
scas
xchg
imul
jg
sarl
jb
mov
loopne
movsl
adc
push
outsl
pop
adc
sub
mov
fwait
mov
sarl
rolb
xchg
outsl
call
in
shll
adc
push
inc
orl
dec
pop
and
add
std
aad
xor
add
test
test
add
lcall
cmpsl
mov
mov
xorb
rep
ljmp
xor
dec
pop
packuswb
sahf
xchg
mov
es
in
inc
data16
mov
sub
mov
xchg
dec
mov
clc
dec
jp
jp
rcl
jnp
add
stos
movsb
mov
mov
inc
dec
pop
inc
ja
notl
dec
out
ja
scas
test
mov
xor
push
mov
mov
sub
and
movsl
mov
test
adc
je
push
out
lcall
and
push
lods
out
fildll
testl
hlt
xchg
stos
mov
ljmp
xchg
mov
fbstp
in
add
pop
inc
test
leave
shrb
pop
push
test
stos
xchg
movsb
and
sbb
xchg
lret
popa
les
jb
or
jnp
out
sarb
push
mov
or
xor
inc
cmp
call
test
adc
das
sbbl
xchg
int3
loopne
xchg
inc
into
loopne
adc
pop
repnz
lock
mov
jae
test
ret
scas
push
insb
jecxz
sbb
xor
jmp
es
push
push
cltd
add
push
divb
pushf
pop
or
sub
or
aas
inc
loop
xchg
je
mov
mov
sbb
cmp
popf
cmp
xor
mov
popf
push
jmp
repz
mov
pop
xlat
scas
sarb
sar
cmp
js
shll
push
push
imul
jnp
lcall
and
dec
movsb
repnz
xor
cwtl
repz
cmc
dec
xchg
daa
lcall
or
mov
popf
inc
es
lods
xor
shlb
mov
jnp
adcb
aad
pop
aad
inc
mov
and
pop
cmp
dec
pushf
jge
ficomps
and
jae
popf
int
xchg
xchg
imul
mov
roll
pop
push
in
pop
add
adc
sbb
rorl
imul
fmuls
sahf
jle
push
repnz
dec
adc
sbbl
fildll
ja
loopne
in
lcall
sub
pop
icebp
jp
int
out
and
ret
inc
jne
mov
fcoms
dec
pop
jp
inc
fdivrl
pop
sub
lret
hlt
sub
mov
cmp
xchg
icebp
and
lcall
loope
push
add
arpl
or
or
icebp
shlb
sbb
ds
fsub
adc
popf
into
ljmp
movsb
int3
xor
or
lods
lcall
sbb
ret
mov
inc
mov
decl
rcrl
xor
mov
inc
dec
movsb
mov
cmp
popf
push
push
scas
ret
xor
shl
jne
rcrl
inc
dec
add
out
push
js
push
push
arpl
and
cmp
adc
imul
lret
repz
pop
imul
jge
sub
sarb
xchg
add
jno
sahf
lods
cs
sbb
out
jmp
push
mov
out
lock
inc
inc
iret
pushf
add
sbb
mov
in
mov
push
sub
add
jle
mov
sti
shlb
xchg
dec
inc
mov
data16
xchg
xchg
mov
mov
inc
mov
stc
jg
movsb
clc
jp
ss
and
adc
ljmp
sub
dec
pop
cmpsb
dec
aas
sbb
or
inc
rolb
or
inc
xchg
outsl
add
dec
cmc
cltd
das
iret
out
outsl
daa
lock
gs
jns
repnz
gs
int3
rcr
call
add
jmp
cmc
sbb
sarb
popa
mov
jo
out
mov
leave
sahf
es
sbb
movsb
and
popf
dec
int3
sub
cmp
xchg
imul
dec
xchg
jle
cmc
sahf
mov
push
cmp
jl
addr16
fidivl
adc
iret
xchg
stc
nop
enter
std
movsl
mov
pop
dec
sbb
mov
jge
jns
shrb
clflush
aaa
jg
aaa
mov
adc
jno
test
lds
dec
mov
inc
pop
mov
mov
adc
fwait
xor
or
cld
xchg
js,pn
inc
rorl
add
stos
adc
ss
sub
mov
push
xchg
pushf
adc
lds
xchg
dec
mov
clc
mov
movsl
mov
pop
jl
mov
pop
cmp
mov
cmpsl
jno
mov
xchg
mov
mov
int3
add
xchg
lcall
out
pop
mov
imulb
loop
and
sub
dec
and
popf
out
and
sbb
cmp
sti
rol
pop
cld
loope
out
dec
pushf
cld
rcrl
mov
cltd
mov
jne
push
cld
xchg
int3
aaa
mov
leave
push
enter
push
call
cmpsb
iret
ds
jle
pop
testb
test
mov
mov
int3
stos
mov
jmp
push
insb
aaa
stos
scas
or
pop
add
sbb
adc
jae
xchg
push
cmc
mov
iret
mov
bound
es
pop
xor
xchg
inc
popa
pop
inc
es
adc
fcompl
and
jbe
popa
test
aad
and
xor
out
jle
lea
xor
icebp
bound
add
or
fcompp
jmp
clc
xchg
daa
mov
test
shrl
inc
les
lea
test
notl
dec
testb
sbb
push
test
imul
mov
loopne
loope
fwait
xchg
pcmpeqb
push
xchg
push
jmp
jl
jmp
ret
in
ds
js
mov
adc
ss
in
enter
test
jle
or
out
lahf
cli
adc
sbbb
push
jg
sbb
ret
push
dec
pop
xchg
sub
jns
daa
lcall
cmp
enter
mov
les
jle
int
fcoms
mov
adc
add
test
xchg
outsb
and
inc
adc
xchg
fwait
ljmp
or
cmp
pusha
ss
xchg
push
std
ja
jp
mov
push
xrelease
fcmove
inc
pop
add
fadds
dec
fisttps
idivl
xlat
and
or
mov
and
push
inc
adc
push
fwait
xor
mov
fbld
xor
sub
mov
mov
data16
andb
into
sbb
push
cltd
mov
loop
mov
incb
jno
or
mov
mov
mov
addr16
mov
jg
push
push
cltd
imul
xchg
push
data16
popf
es
test
pop
lods
addb
mov
push
adc
xchg
push
xchg
clc
add
imul
test
out
mov
mov
add
es
loopne
cmc
out
bound
int3
xor
mov
push
mov
pop
int3
pushf
xlat
outsb
into
and
out
out
shl
jmp
lea
adc
icebp
sub
pop
pop
adc
sub
and
mov
fwait
iret
mov
push
or
aam
jne
push
push
shrl
mov
inc
jne
bound
movsb
insl
jge
out
cltd
stc
lcall
push
add
cs
add
gs
loope
adcl
das
push
dec
xor
pushf
and
fisubl
int
sub
jno
xchg
sub
mov
daa
or
pop
addr16
ja
stos
fnsave
ficoml
shrb
mov
daa
add
or
je
dec
or
cmp
add
daa
push
stos
cmp
jp
inc
xor
fsubs
jbe
or
dec
mov
fcmovbe
inc
fadds
cld
shl
or
shll
gs
push
incl
fs
push
sahf
xor
ret
cmpsl
mov
js
into
out
ja
mov
imul
add
push
orb
push
nop
mov
vpsadbw
mov
cli
out
xchg
push
xor
inc
jmp
scas
jmp
repz
cmpps
sub
into
cmpsl
dec
pushf
pop
cmp
dec
lret
and
es
push
scas
adc
inc
dec
xchg
mov
xor
inc
fisttpl
push
cmpsl
cmp
or
pop
xlat
loopne
inc
imul
dec
ret
jb
int3
mov
pop
enter
stos
mov
lods
mov
pushf
aas
mov
mov
jecxz
sbb
daa
dec
add
pop
mov
lret
pop
adc
push
push
or
pop
nop
addr16
xchg
or
inc
sub
xchg
rcrb
xchg
xor
xchg
mov
xchg
ds
dec
jmp
cmp
dec
out
mov
push
add
sub
push
jge
dec
call
push
fistpl
sbb
pop
outsb
cmp
clc
or
imul
jae
add
add
mov
push
mov
subb
sbb
or
push
lds
mov
cmp
push
sbb
inc
bound
jae
mov
fbstp
shll
xchg
or
sbbb
pop
mov
dec
dec
les
lcall
in
sarb
push
outsl
test
imul
xor
mov
xchg
notl
int
lcall
pop
mov
sbb
roll
dec
and
push
leave
xor
nop
aas
out
lods
pop
arpl
cmp
inc
mov
lods
dec
xor
stc
into
mov
sbb
xchg
lods
stc
call
pop
je
outsl
fisubrl
jg
adc
push
push
ss
movsl
dec
pop
jp
aad
jbe
xchg
xchg
lea
xor
push
ljmp
push
mov
xor
clc
lods
push
stc
aam
xchg
jp
jb
leave
push
jbe
mov
std
jo
das
fwait
in
icebp
mov
dec
iret
inc
mov
sub
mov
dec
cmpsb
adc
mov
mov
push
mov
imul
cmp
movsb
repz
push
push
flds
out
in
out
jle
loop
mov
hlt
dec
scas
add
inc
xchg
mov
xlat
leave
test
pusha
int
and
sti
jge
je
sbb
enter
je
ja
into
xor
add
andl
and
mov
sarl
sbb
push
mov
inc
sbb
mov
add
dec
into
sub
leave
mov
into
je
iret
xor
test
inc
aas
mov
frstor
mov
sub
lods
fiaddl
aad
xchg
mov
rcrb
pop
or
cmp
jmp
jne
and
sahf
fiaddl
inc
pop
add
and
mov
stos
jne
or
mov
fmuls
pop
jl
je
int3
call
ja
shl
andl
lcall
sbb
mov
adc
mov
add
xchg
scas
sub
inc
das
jp
pushf
lock
jno
in
and
xchg
icebp
mov
jge
insb
jl
lcall
jo
mov
sbb
shl
movsl
icebp
repnz
push
or
scas
inc
ret
and
int3
and
xchg
sbb
and
push
ljmp
sub
pop
aas
inc
push
pop
ja
insb
add
xor
fidivrl
nop
mov
test
arpl
xor
rcll
add
inc
outsl
add
cmp
and
scas
inc
hlt
outsl
mov
in
fadd
mov
fmul
adc
lret
bound
movsl
inc
pop
insb
jmp
sub
inc
scas
pop
mov
xor
repz
into
lahf
mov
jns
std
push
and
mov
ljmp
mov
add
fwait
insb
dec
cmc
mov
mul
pop
xor
cmc
movsl
cmp
inc
std
cltd
je
rorb
aam
xchg
mov
lds
popa
adc
jne
jne
xor
xchg
imul
xor
dec
in
add
mov
insb
jle
xchg
sub
arpl
mov
xor
shr
or
fsts
add
adcb
stos
jbe
mov
jo
adc
add
out
add
in
and
insl
mov
mov
notl
mov
mov
sbb
sbb
jg
xor
inc
adc
insl
clc
xchg
rcr
repnz
mov
jmp
jecxz
push
jmp
sub
jb
fsubrp
adc
xchg
pop
jno
stc
shrl
jbe
mov
mov
outsl
push
mov
cli
pop
fmuls
js
xchg
sub
call
stc
ds
pop
test
dec
mov
fnstsw
sbb
jbe
mov
xrelease
dec
adc
push
stos
fcompl
imul
sbbb
into
xor
fs
lcall
push
push
sub
fidivl
leave
cwtl
je
lods
clc
ja
sbb
ret
aas
movsb
les
pusha
pop
test
cli
notb
in
rorb
cld
loopne
cmpsb
jmp
push
pop
mov
mov
inc
cld
pop
addl
aad
push
pushf
arpl
cli
jne
sub
movups
hlt
cwtl
dec
mov
jns
lods
xlat
sub
inc
dec
cwtl
sbb
movsl
xlat
icebp
mov
aam
test
inc
loop
cmp
mov
stos
stos
aam
popf
dec
rcl
jg
mov
hlt
test
xchg
movsl
adc
or
add
rorb
mov
push
lods
and
iret
pop
mov
adc
leave
pop
push
popf
mov
std
and
and
xchg
add
mov
fdivs
and
push
lret
inc
mov
adc
arpl
cmpsl
out
jns
or
testl
test
cmc
arpl
xchg
mov
push
test
adc
pop
pop
lea
clc
scas
imul
jp
popa
xchg
jge
loope
cwtl
adc
pop
jnp
cmp
insb
sub
cwtl
das
cltd
sbb
sub
sub
test
mov
inc
mov
inc
in
xchg
pop
aam
jg
jmp
inc
insl
pop
int3
call
jg
push
xchg
clc
adc
movsl
push
popa
cmc
add
aad
mov
dec
lcall
mov
or
dec
shll
enter
or
mov
and
jne
loop
jle
xchg
call
inc
mov
and
nop
cmp
sub
pop
outsb
mov
mov
dec
negl
jg
push
iret
icebp
adc
mov
pusha
xchg
fmull
xor
aam
out
addr16
jns
push
push
dec
cmpsl
outsl
sbb
into
enter
xchg
pop
inc
pop
mov
pop
inc
test
iret
data16
xorl
imul
lret
dec
sub
mov
cmp
mov
testb
lahf
adc
lods
inc
add
cmp
daa
inc
stos
repnz
test
mov
dec
testl
out
hlt
cmp
cli
mov
sbb
sbb
cmp
icebp
cs
adc
lods
push
sbb
cltd
adc
pushf
push
lahf
ss
sahf
adc
and
jo
loope
or
lods
xchg
inc
fiadds
gs
xchg
push
xchg
dec
rorb
orl
cli
inc
push
icebp
mov
js
pop
xlat
pop
sahf
pop
adc
jge
inc
out
call
mov
out
popf
sbb
test
sbb
mov
push
std
and
xchg
jg
xchg
mov
cmp
shl
fbstp
pop
cmp
dec
clc
push
rorb
inc
idivl
int
mov
aaa
test
jle
jp
xchg
aad
mov
aaa
test
rorl
inc
pop
rcll
into
jge
ljmp
sbb
jl
pop
cmp
mov
lahf
xor
inc
rorl
repz
int3
dec
das
pop
leave
pusha
inc
and
repnz
shrl
je
mov
cmp
mov
add
xchg
sub
lcall
cmp
jno
cmp
sbb
dec
fs
das
aam
xchg
cmp
clc
fs
sub
loopne
test
loope
add
mov
jns
enter
cmc
insb
pusha
sahf
cmp
rolb
cmpsb
add
dec
divl
jno
jp
cmpsl
mov
fwait
mov
int
push
test
jne
mov
lods
xor
rcrb
je
push
in
popf
jl
inc
cmp
mov
push
push
mov
lret
mov
jae
outsl
xor
pop
mov
int3
dec
mov
mov
mov
fwait
cmpl
bound
iret
pop
inc
fisttpll
filds
xchg
mov
mulb
insl
sbb
sub
out
icebp
mov
inc
in
aam
xchg
pusha
mov
sub
and
xor
push
cmc
sbb
dec
jl
jge
cltd
xor
int3
mov
bound
cmpsl
test
scas
in
lds
adc
ror
mov
es
lret
xchg
add
sahf
jge
inc
sub
inc
stos
adc
sbb
popa
js
add
int3
stos
shlb
inc
mov
subb
andw
clts
mov
outsb
enter
push
js
push
xor
adc
pop
jo
ret
fsubrs
ret
enter
inc
pop
sbb
lea
imul
sahf
cmc
adc
pop
cmp
mov
ss
and
xor
and
adc
mov
jl
jmp
cmp
insb
movsb
xor
mov
sub
xchg
inc
arpl
imul
addr16
fs
jecxz
pop
sub
add
dec
mov
or
cs
sti
ljmp
push
imul
mov
cmp
in
add
sbb
leave
and
dec
mov
inc
jp
jae
imul
lahf
push
xchg
add
insb
add
ss
and
fiadds
cwtl
mov
dec
fwait
into
aam
add
and
and
push
dec
ret
insl
jecxz
adc
notb
les
popl
test
mov
fdivl
shrl
fdiv
adc
push
and
jne
icebp
sbb
adc
adc
cltd
sub
push
push
hlt
xchg
aaa
pop
dec
imul
push
leave
in
cmpsl
inc
mov
push
rcl
mov
jge
xchg
dec
cmp
adc
push
sub
orl
dec
loope
adc
popf
sub
mov
int3
repnz
stos
mov
jne
jp
lods
add
std
inc
push
ljmp
imul
sahf
jne
mov
cld
lods
cmpsb
jl
xchg
scas
mov
jmp
ja
lods
mov
movsl
movb
inc
insl
adc
jo
and
out
fs
push
push
and
pop
and
pop
or
inc
outsl
adc
ret
push
das
and
fistl
sub
cmc
mov
sub
sbb
repz
cmp
pop
adc
cmp
cltd
mov
cmp
mov
fisubrs
jg
shrl
jp
dec
inc
rcll
mov
cmp
sbb
or
mov
jae
xor
push
xchg
lods
dec
inc
ja
jbe
hlt
sti
xchg
insl
pushf
hlt
sbb
adc
pop
into
or
and
add
adc
cld
xchg
dec
out
pop
aam
mov
mov
sbb
cmp
shrb
inc
sti
inc
std
adc
aas
jg
xor
pusha
mov
rcr
loope
sub
lock
sbb
or
xor
xchg
mov
mov
mov
je
adc
movsb
or
lds
cli
outsb
add
sub
push
pop
cltd
xchg
sbb
aad
jns
and
add
bound
xlat
push
xchg
js
ja
ljmp
push
mov
push
loopne
test
in
push
repnz
jnp
movhps
sti
sub
sub
or
pop
dec
mov
outsl
cmp
mov
rcrl
push
mov
popa
pop
data16
push
push
add
jb
xor
int3
inc
test
in
xchg
cmp
lahf
fs
insb
mov
roll
xchg
mov
push
xchg
daa
cltd
out
sti
pushf
int
inc
test
lret
into
gs
xor
and
les
mov
daa
mov
jne
inc
in
pop
imul
out
pop
pop
sub
popl
add
shlb
aam
sub
iret
push
es
pushf
cwtl
jne
lret
test
xchg
and
pushf
lahf
data16
push
rcll
je
mov
mov
sbb
stc
sub
push
testl
pop
loop
or
repz
imulb
stos
and
aam
mov
jg
loop
mov
test
stc
xchg
pusha
fildl
pusha
jae
dec
movsb
dec
mov
jae
sub
sbb
jecxz
in
sub
push
and
xor
out
inc
xchg
dec
ds
cmp
sub
fdivl
dec
aam
mov
push
sbb
movsl
jns
xchg
fmull
mov
ret
xchg
sbb
inc
shrb
jns
mov
out
pop
xor
rol
es
mov
jne
pop
jmp
sbb
fistpll
out
mov
ret
sbb
dec
inc
adcb
test
cmpsl
pop
adc
lret
loopne
pop
or
cs
testl
sbb
imul
jbe
mov
mov
out
and
sbbl
arpl
lahf
bound
gs
movsb
jmp
ret
subb
mov
xchg
pop
fistpll
adc
inc
jg
cld
sub
xchg
inc
js
xchg
fisubrs
mov
xchg
addr16
jecxz
rcl
xchg
cltd
and
orl
xor
movsb
rclb
xchg
sub
xor
cmp
jecxz
rcll
xor
out
cltd
test
jo
push
scas
scas
arpl
sub
xchg
mov
loopne
rcll
stc
loop
jge
faddl
lcall
cmp
xor
fdivs
push
cli
mov
sahf
in
xlat
jbe
xchg
jbe
in
lods
adc
dec
or
xor
mov
fmuls
mov
in
stos
int3
fisubrs
sbb
popf
in
sub
pop
hlt
mov
jmp
xor
mov
mov
jae
outsb
pop
push
pop
out
jmp
jbe
mov
ja
mov
fisubrs
pop
mov
xor
and
in
dec
enter
cmp
jne
div
dec
rorl
rolb
clc
mov
sub
sub
movmskps
lea
mov
xchg
mov
dec
and
xchg
cmpsb
aad
ds
icebp
mov
jp
cmp
ljmp
aam
lds
scas
pop
xor
and
jle
popa
mov
loop
aas
pushl
es
xor
ss
mov
fcoml
fs
xlat
push
cli
pop
pop
and
jnp
lea
pop
mov
push
xor
gs
xchg
jmp
cmp
jg
ret
jno
push
cwtl
mov
dec
and
push
cwtl
push
mov
mov
daa
incb
cs
and
add
lods
jl
sub
cmc
xchg
mov
iret
jns
inc
pop
dec
imul
repnz
lahf
stos
jae
pusha
lahf
xor
iret
stos
push
xchg
cmp
mov
lret
mov
sub
std
push
inc
add
adc
push
in
add
rorb
xchg
mov
nop
sbb
jp
psubusb
popf
js
cli
repnz
int3
fcmovnbe
inc
pop
push
cld
icebp
cmpsb
es
and
push
push
movsl
cmp
and
mov
jmp
and
and
ja
xchg
push
add
ret
pusha
adc
inc
inc
pop
push
xchg
dec
push
dec
test
push
cmc
push
pop
mov
das
sbb
icebp
test
pop
adc
inc
xchg
cmp
xor
push
decb
push
in
popf
xchg
cltd
push
lea
sbb
andl
rorb
bound
sub
pop
lea
ja
icebp
data16
and
lods
add
cwtl
xor
push
hlt
les
xor
mov
fisttpll
pop
cli
arpl
add
stos
cltd
push
mov
and
dec
add
fs
mov
xor
in
in
jge
int
and
clc
pusha
jno
mov
dec
into
ffreep
jbe
test
pop
roll
pop
mov
les
loope
je
mov
mov
adc
movntps
mov
xchg
pop
test
xchg
cmpsl
mul
shrb
sub
add
divl
cmp
aad
inc
mov
mov
push
sbb
lods
xor
mov
in
test
in
pop
push
adc
out
sub
jge
es
xchg
push
fdivs
test
mov
aam
inc
in
lahf
loop
in
loop
xor
int
xor
mov
add
les
cmp
mov
out
xchg
lods
cwtl
or
adc
add
call
movsb
fwait
and
ffreep
dec
jns
xor
or
add
xor
or
or
push
mov
mov
scas
mov
xchg
pop
add
mov
xchg
cltd
les
aas
out
test
es
rclb
ljmp
xor
sahf
mov
adc
jg
aad
imul
mov
jnp
sub
xchg
mov
sahf
sub
rclb
mov
adc
inc
add
sub
lret
arpl
jmp
push
adc
push
filds
scas
fwait
notb
jge
pushf
sub
xchg
sbb
jge
out
ljmp
repz
sbbb
xchg
sub
pop
xchg
ljmp
push
add
xorl
rcrl
dec
and
jno
jnp
add
inc
test
and
pop
xchg
mov
ss
adc
jg
scas
inc
push
mov
jo
jns
mov
or
mov
or
xchg
xorb
xchg
xor
push
add
orb
mov
jb
jge
pop
arpl
int3
jg
mov
out
push
outsl
push
shrl
xor
inc
mov
repnz
mov
loopne
jo
lret
mov
sbb
nop
push
repz
jg
pop
mov
shl
dec
pop
inc
das
fs
jge
push
fstps
lahf
out
sbb
test
jle
xchg
popf
or
push
sahf
xor
push
and
xor
xchg
in
adc
or
pushf
xor
add
ss
xchg
mov
mov
adc
pop
cmp
leave
and
mov
and
cmpsl
out
pop
xor
in
push
scas
subl
xchg
mov
iret
gs
xchg
rol
jmp
add
insl
xorl
jmp
dec
dec
dec
cmp
out
pop
lods
cmp
aaa
movsl
in
int3
inc
fnstcw
adc
sub
jge
xor
jns
test
cmp
mov
lahf
sub
and
and
inc
cli
pushf
ljmp
mov
dec
inc
xchg
fdivrs
mov
xor
aad
ja
gs
fdivrs
jl
test
mov
fidivs
mov
pop
rcrb
pop
div
mov
sbbb
cmpsl
daa
mov
js
mov
arpl
shl
and
rcrl
sahf
or
and
adc
into
aad
add
es
in
fidivrs
gs
out
cli
jge
inc
pop
xor
call
jno
lods
std
lea
data16
mov
xchg
aaa
push
cmpsl
je
xchg
loope
fidivl
adc
add
fadd
imul
xor
push
mov
jnp
add
pop
pop
bnd
and
cwtl
hlt
adc
inc
dec
adc
jno
jns
dec
fidivl
push
pop
movsl
xor
fistpll
push
insl
jb
sbb
popf
cmp
orw
xchg
js
andb
clc
mov
mov
pop
push
push
movsl
or
outsb
jb
or
imul
and
addr16
sub
cmp
ret
rep
testl
add
pop
stos
ret
and
stc
hlt
xchg
stc
je
fiadds
push
stc
jle
xchg
mov
es
movsl
mov
xlat
jge
mov
mov
push
xchg
sub
dec
fisttps
scas
addl
call
mov
mov
sub
ds
stc
testb
push
jbe
push
imul
mov
test
jge
shll
lret
pop
push
iret
leave
jb
loope
fbld
mov
iret
fldenv
sub
imul
jno
xchg
stc
cmp
fdivl
mov
and
lret
sub
adc
xchg
adc
jge
cmp
hlt
xchg
dec
rcll
mov
insl
xchg
orl
push
xchg
cs
es
aad
out
jb
movsl
ds
xor
fisubrs
lds
inc
mov
aas
pop
add
lds
int3
dec
dec
fidivrs
push
gs
add
cmc
mov
adc
aad
lahf
and
dec
push
jb
sbb
add
sbb
pop
adcb
lahf
das
out
jae
cwtl
mov
mov
mov
cmpsb
lods
loopne
loope
aam
insl
addb
ss
out
orl
ficompl
or
add
mov
xor
daa
adc
arpl
xor
fmuls
notl
dec
inc
sbb
shl
pop
sahf
sbb
add
inc
add
mov
cmp
daa
jne
and
adc
and
int3
adcl
outsl
cmpsb
pop
testl
push
das
push
jmp
aaa
cltd
cmpsl
adc
outsl
push
insl
jmp
lea
jne
adc
icebp
fcomp
lret
addl
dec
dec
shl
es
sub
imul
cmp
dec
or
mov
loopne
test
rcrb
stos
mov
call
inc
mov
xor
out
mov
mov
mov
jb
dec
xlat
in
adc
jp
xor
lret
mov
mov
jmp
cmp
inc
std
sbb
push
rcrb
stos
ret
pop
sbb
jae
push
in
fcoms
add
js
imul
mov
cmpsl
cli
in
fsubr
lods
or
and
xor
cmp
push
pop
scas
das
aam
je
lcall
mov
pop
adc
stos
lods
jl
cltd
pop
cmpsl
adc
and
inc
iret
test
imul
mov
lcall
stc
loope
shrl
shlb
xchg
add
test
jp
dec
mov
lret
adc
inc
sub
filds
mov
mov
ficomps
icebp
sbb
sbb
lea
movsb
repnz
mov
mov
mov
pop
leave
xor
lock
stc
nop
sbb
add
dec
test
mov
xor
adc
cs
dec
enter
and
xor
push
push
stc
sub
add
iret
dec
insl
in
jo
mov
js
inc
bound
test
adc
test
lret
or
inc
xor
stos
inc
pop
pop
and
inc
cmp
push
je
ljmp
inc
adc
push
mov
xor
stos
inc
mov
subb
pop
scas
cwtl
insb
mov
adc
idivl
sbb
mov
lock
cli
dec
inc
sub
ja
subb
xor
stos
mov
test
jecxz
fimuls
jne
test
hlt
fwait
sub
cmc
scas
mov
es
fwait
call
jnp
cmp
add
lds
and
out
incb
and
aam
add
bound
cld
and
and
mov
es
cmp
mov
pop
aad
pop
testl
add
and
inc
xor
test
call
cmp
mov
aad
in
push
je
mov
insb
movq
aad
test
adc
rcrl
in
jns
imul
add
imul
in
pop
push
inc
sahf
xor
int
mov
fs
das
mov
mov
fldenv
sti
jecxz
in
inc
out
dec
dec
shrl
jp
or
push
test
insl
cmp
cmp
and
jecxz
jbe
movsb
mov
jo
xchg
mov
in
push
mov
mov
int3
jae
mov
cmp
mov
and
ret
jo
aam
xchg
xchg
cmp
mov
or
cmp
fs
fisubrs
dec
mov
mov
stos
add
in
xor
ljmp
cwtl
std
loop
aam
call
stos
test
sbb
push
dec
cwtl
cltd
mov
stos
inc
ljmp
xor
ds
stos
or
adc
mov
inc
xchg
dec
mov
mov
popa
jno
ret
adc
inc
scas
mov
loope
mov
inc
push
rolb
dec
dec
inc
push
div
xchg
lods
jg
xchg
push
movsl
testl
fidivrs
stc
jmp
shrd
add
fisubl
push
cld
lock
pusha
scas
sbb
or
out
leave
cs
popa
jbe
cmp
ds
dec
add
lret
add
sbb
dec
movsb
bound
dec
inc
jmp
jbe
pop
das
mov
aam
mov
or
and
pop
mov
int3
mov
insb
movsb
je
popf
add
push
test
lods
jmp
pop
stc
or
or
sub
or
cmpsl
ds
xchg
iret
xor
pop
enter
pop
jle,pt
jge
inc
mov
data16
int
xchg
mov
lahf
mov
jb
es
cmpb
pusha
lahf
pop
or
sbb
int
or
jnp
mov
movsl
dec
popf
jb
xchg
jle
fs
sbb
add
jns
lock
rorl
xor
std
dec
in
add
push
inc
aad
jbe
inc
mov
ljmp
xor
testb
xchg
sbbb
fcmovnb
xor
mov
aad
add
in
roll
mov
pop
aam
aas
sub
jge
ret
insb
stc
aam
stos
xchg
xchg
mov
add
jp
jl
sub
push
test
mov
enter
cld
xchg
mov
ficomps
mov
fists
xor
cmp
add
cmpb
sbb
pushl
ss
sti
inc
xchg
xchg
sbb
dec
mov
test
imul
in
stos
push
rol
push
test
push
test
test
mov
jo
or
push
mov
sub
pop
push
jae
cli
jo
loope
push
fwait
jo
add
ret
mov
shrb
push
popa
xor
lods
mov
out
push
outsl
add
js
mov
xchg
dec
test
sbb
inc
or
push
shrb
and
jl
arpl
add
nop
push
jmp
rcll
dec
or
sbb
xlat
sbb
dec
xor
js
insl
popf
sub
jns
and
jbe
jns
inc
xchg
jecxz
js
pusha
dec
stos
push
jge
imul
jl
pusha
scas
repnz
jge
shlb
dec
push
pop
das
jb
inc
push
push
inc
add
cld
pop
daa
xchg
mov
sbb
movsl
pop
scas
pop
ljmp
pop
dec
xchg
dec
jnp
stos
add
pushf
shrl
scas
mov
mov
cmpb
sahf
mov
or
pop
push
dec
cmp
leave
int
ja
lods
xchg
cs
add
jns
pushl
add
dec
xchg
ret
data16
jge
decl
xchg
push
lock
mov
rcrl
pusha
dec
push
cmpsl
pop
xchg
mov
iret
xor
popf
inc
fcmove
out
rcrb
in
popa
mov
inc
insl
aas
push
gs
movsl
mov
aam
popa
push
jns
fucomi
stos
lcall
jecxz
cmc
mov
add
adc
in
lcall
mov
xchg
pusha
jo
cld
and
aas
mov
pop
mov
or
sub
inc
insb
test
mov
fsub
outsb
mov
sub
or
movsl
mov
sub
inc
int
add
push
movsl
icebp
and
movsb
sbb
mov
jl
clc
inc
cmp
push
shl
mov
test
rorb
add
push
aas
repz
adc
fistps
cmp
add
push
xor
or
jnp
sub
outsb
mov
and
stos
pop
call
inc
loopne
jne
fildl
adc
mov
fldl2t
into
shlb
sub
jae
mov
stos
push
aam
adc
and
or
lahf
xor
out
xchg
clc
outsb
icebp
mov
inc
cwtl
std
mov
imul
ja
mov
fnsave
shrl
jbe
sahf
jle
fcomip
dec
xchg
jno
fldt
adc
not
aam
push
in
or
xchg
cmp
stc
or
mov
dec
popf
fdivl
sbb
ret
lea
push
push
cmp
hlt
int3
mov
out
mov
jnp
fistps
xor
shrb
adc
adc
sbb
fisubrs
movsb
add
inc
shll
dec
sbb
sbbl
mov
imul
sbb
pop
add
cld
outsl
movsl
in
jmp
pop
arpl
mov
filds
lea
jnp
xchg
push
dec
cmp
insl
insl
shll
add
inc
pcmpeqb
xchg
mov
xchg
xlat
mov
add
subb
lcall
lods
dec
xchg
xor
cld
jb
lret
push
xor
daa
mov
pop
inc
inc
push
lock
enter
cmpsl
jge
subb
xchg
popf
ret
outsb
add
imul
xchg
mov
in
testl
adc
data16
mov
data16
mov
jge
xor
xor
nop
cmp
mov
pop
rolb
jo
jno
std
and
stc
adc
cmc
mov
mov
jno
push
push
data16
stc
sbb
mov
pop
and
xor
xchg
xor
mov
xor
jmp
and
mov
pop
lock
add
lahf
lods
out
sbb
adc
jno
and
shrb
push
divb
arpl
push
xor
or
pop
xlat
stos
adc
fwait
divl
in
test
fcmovb
jp
xor
mov
dec
and
int
push
jne
in
xchg
or
ljmp
mov
sbb
sti
movsb
mov
sub
xchg
daa
and
mov
cmp
lea
mov
movb
imul
mov
in
aas
sub
jmp
cmp
int
and
test
addr16
inc
addb
icebp
mov
bound
dec
push
mov
mov
mov
cli
push
rolb
insl
add
test
dec
adc
cmc
sahf
xchg
mov
mov
pop
inc
and
and
ret
lret
mov
mov
push
pushf
cmp
scas
fstpl
xchg
adc
lret
jmp
ret
sbb
cmp
xor
pop
int
mov
test
mov
push
sub
cmc
sarl
or
mov
shlb
xor
sub
fdivl
leave
xor
sahf
mov
pushf
add
loop
andb
adc
sti
xchg
and
arpl
xchg
inc
sbb
std
adc
fmull
pop
dec
inc
std
xchg
dec
fists
mov
add
jp
jbe
lahf
adc
add
sbb
cwtl
pop
lock
cmp
pop
xor
out
fistps
dec
sbb
clc
sub
ss
movsb
jo
or
ds
mov
pop
outsl
sub
jbe
aad
popf
arpl
cmp
sbb
push
dec
fdivrs
sbbl
pop
cmc
fninit
int
sbb
in
sbb
push
mov
lods
inc
lods
xor
cmp
test
and
ror
repnz
sarl
xchg
shrl
adc
std
je
shlb
push
aad
dec
fwait
sub
lcall
and
adc
cld
outsb
jl
mov
jo
out
mov
push
out
aas
adc
mov
pop
jb
pop
and
add
mov
xor
enter
add
fcompl
sub
imul
aad
push
mov
or
inc
pushf
adc
sub
mov
jns
xchg
mov
ficompl
mov
xor
ss
dec
sbb
mov
jecxz
aas
lret
sbb
push
cmc
imul
std
rclb
jl
dec
icebp
jne
sbb
add
add
adcl
cmp
shl
pop
stos
mov
mov
idivl
and
xor
scas
mov
xchg
addr16
test
pop
pop
adc
add
leave
cmp
push
outsl
lods
xor
ds
add
lcall
in
jb
cwtl
das
movsl
xchg
insb
int
add
pop
push
cmpsb
dec
loopne
sti
iret
xchg
mov
xchg
rcrl
lcall
rolb
jb
pop
mov
rorl
xchg
cmpsl
popl
aaa
popf
add
aaa
mov
stc
jmp
mov
aas
add
mov
inc
or
lret
sub
cmp
jb
sti
mov
adc
dec
call
data16
jno
xor
out
pop
std
jl
ret
mov
pop
add
shll
xchg
sti
pop
dec
rolb
and
push
or
mov
push
mov
sbb
ljmp
fnsave
sbb
xchg
push
jle
xchg
imul
icebp
mov
repnz
not
cmp
shr
idivl
scas
or
pop
sbb
das
flds
push
sub
sub
xor
xor
cwtl
das
ret
push
or
inc
dec
ja
sbb
outsl
cmp
and
mov
bound
scas
mov
js
jnp
push
lcall
addl
pop
add
out
insb
and
push
and
ret
mov
sbb
dec
stos
sbb
mov
xchg
cmp
rorb
push
repnz
daa
fstpl
xchg
fmull
mov
outsb
loop
pop
cmp
test
and
je
mov
cmc
jb
bound
sbb
xchg
mov
mov
sub
or
sbb
and
jno
and
rorl
subb
xor
sti
push
jle
es
subb
jmp
or
insb
add
scas
mov
test
add
cmpsl
xor
cmp
xor
push
test
dec
jb
xor
push
jecxz
mov
icebp
in
jecxz
xchg
lods
popf
mov
or
fidivl
push
xor
int3
cmp
jb
pop
pop
adc
xor
pop
and
sbb
add
mov
dec
cmpsb
stc
divb
movsl
push
scas
jno
or
push
out
xor
in
xor
fdivrl
enter
push
add
dec
and
cwtl
xchg
inc
add
outsl
dec
lea
rorb
test
mov
lock
cmpsl
mov
cli
test
pop
popa
in
cmp
cmp
clc
pop
lea
rorl
arpl
lahf
nop
daa
adc
test
inc
add
xor
cmp
cli
adc
inc
sbb
and
nop
cmpsb
sbb
in
jle
enter
mov
add
mov
mov
subb
lahf
inc
and
jae
add
stos
out
xchg
add
mov
std
pop
lret
dec
pop
or
mov
push
call
cmc
dec
dec
loop
fwait
xor
xor
jg
in
cmpsb
ret
lods
daa
lret
mov
adc
scas
sub
call
dec
stos
jne
mov
mov
pop
cmp
add
fldl
insb
loopne
dec
jecxz
sbb
xor
inc
fisubs
punpckhbw
pop
mov
je
js
xchg
mov
mov
xlat
xchg
dec
inc
out
sarl
nop
stos
repnz
loop
repz
in
dec
stos
dec
mov
inc
sub
fcomp
mov
insb
loopne
sub
push
mov
aad
mulb
int
jl
cmp
or
jge
mov
add
cmp
fwait
cs
mov
insb
jns
gs
sbb
daa
add
jno
xchg
movsb
sahf
clc
aad
xor
frstor
aaa
movsl
inc
mov
push
lods
inc
cmp
mov
xchg
clc
ds
and
jbe
sbb
in
jg
lods
dec
xchg
pop
lcall
adc
shrb
das
xchg
mov
dec
iret
sub
aas
adc
testl
inc
jae
or
pop
aaa
cld
inc
scas
cld
ljmp
imul
pop
sahf
xchg
iret
inc
mov
fists
ret
iret
pushf
lds
xor
pop
jns
into
mov
mov
push
sbb
test
das
push
nop
bound
ja
and
repnz
icebp
subb
out
xor
rep
push
or
mov
movsb
lahf
addr16
sarb
sbb
repz
in
adc
jbe
dec
das
jns
stos
mov
scas
nop
sahf
pop
out
lret
jae
mov
popa
inc
inc
adc
hlt
adc
push
fildll
xor
xchg
push
cmpsb
cmp
addr16
inc
pop
pusha
pop
out
cmp
xchg
xor
sub
movsb
mov
sub
gs
mov
push
int3
jecxz
js
and
lea
stc
mov
pop
dec
cmp
add
dec
mov
jb
stos
pushf
dec
sub
fsubrp
outsb
xchg
sub
inc
andl
leave
fprem1
fs
sub
repz
cmp
aad
adc
into
inc
outsl
cli
jne
jecxz
adc
js
bound
aaa
cmp
out
repnz
xchg
xor
pop
cmp
aam
insl
jmp
xchg
sub
int3
out
in
or
inc
dec
daa
mov
sub
das
push
inc
xchg
push
cltd
pop
shrl
repnz
dec
lods
icebp
or
insl
std
pop
mov
push
outsl
repnz
sub
xor
sbb
dec
je
fwait
xchg
mov
add
push
insb
cld
sbb
xchg
stc
xchg
push
push
jo
movsl
dec
push
push
addr16
ljmp
mov
insl
sub
pop
fidivs
fildll
mov
add
clc
dec
add
cmp
mov
xor
out
cli
dec
pop
ljmp
call
test
cmp
roll
mov
mov
out
repz
mov
jae
in
xchg
xchg
imul
and
in
mov
dec
pop
loopne
sti
adc
sub
mov
les
push
dec
jmp
loope
jmp
xchg
mov
filds
mov
dec
nop
push
mov
and
mov
fstp
dec
loop
pop
mov
testl
cwtl
lahf
push
and
inc
pop
je
cmp
jnp
add
push
aaa
sarl
jmp
xlat
and
adc
lea
cmp
mov
leave
dec
lds
xlat
outsl
ljmp
dec
out
loopne
popf
and
in
pop
testl
xor
fwait
xchg
arpl
push
mov
push
mov
jmp
or
adc
pop
sub
shll
rcr
mov
mov
xor
fcmovnu
push
mov
jns
das
ret
ficoml
ljmp
stos
popf
bound
dec
mov
mov
int
aam
lret
enter
call
mov
mov
dec
fst
sar
lods
mov
subl
into
xor
lcall
daa
or
movsb
xchg
mov
pushf
scas
jnp
popf
jg
pop
fiadds
popa
loopne
inc
mov
rol
xor
push
inc
loopne
cmp
out
mov
pushf
popa
inc
sbb
inc
pop
and
cmpsb
lock
adcb
pop
or
jp
jmp
pop
leave
testl
rcl
sbb
cld
xchg
out
pop
mov
scas
dec
mov
mov
adc
mov
jmp
sub
and
out
test
adc
fmulp
xor
jmp
nop
inc
rcrl
push
testb
mov
and
aad
cmp
rcrb
and
shl
cwtl
shl
or
cltd
and
cmp
xchg
loope
xchg
inc
cld
sub
rcrl
aaa
jmp
push
lock
xchg
add
bnd
xor
repz
out
push
call
fwait
dec
mov
and
pop
sub
xchg
les
out
sbb
int
sub
iret
inc
pop
icebp
std
push
add
sbbl
pop
xor
cmpsl
idivb
adc
inc
je
andb
inc
sar
push
cmpsb
push
sub
aas
gs
xchg
mov
or
and
jno
cvttps2pi
mov
mov
jno
lds
jb
push
jne
xlat
cs
int3
push
or
mov
lret
xchg
xlat
sub
hlt
xorb
movsl
pop
jge
inc
lret
xor
daa
sti
jl
jae
popf
shl
push
cltd
stc
pop
mov
scas
pop
fmull
and
sbb
or
mov
or
enter
push
stos
jns
lcall
lock
mov
test
adc
pop
mov
mov
pop
aaa
sub
mov
and
dec
xchg
xor
jmp
push
dec
aas
mov
add
pop
cwtl
icebp
lcall
mov
fimuls
popa
sbb
ret
xchg
mov
mov
pop
inc
popf
jns
cmp
fstps
jo
cmpsl
sbb
sbb
add
cltd
xor
cli
cltd
xchg
stos
enter
int3
idivb
into
hlt
sbb
in
leave
mov
lock
pop
in
xor
xchg
jp
pop
pop
add
loope
cld
int
insb
sub
cli
out
in
addr16
pushf
imul
loopne
scas
mov
shl
pop
pop
jnp
jne
cmp
push
movsl
repz
cmp
push
enter
scas
push
pop
call
cld
sbb
dec
fldz
jecxz
sub
daa
lcall
icebp
mov
in
ror
hlt
or
lock
out
outsb
xchg
imul
je
aad
cmp
shr
xchg
mov
dec
and
stos
pop
xchg
fwait
int
dec
mov
lcall
movsb
movsb
xchg
adcl
inc
sbb
fstps
mov
cmp
fidivs
or
sbb
cmpsb
push
imul
scas
xchg
mov
jo
mov
scas
adc
out
and
cwtl
jb
mov
loop
rolb
adc
mov
adc
cmp
leave
cwtl
ds
aas
lahf
in
and
sub
imul
dec
and
hlt
sub
rorb
mov
mov
mov
jb
hlt
mov
jg
lds
mov
sarl
shlb
adc
dec
nop
das
inc
pushl
aas
data16
mov
adc
out
dec
xor
or
in
aas
dec
hlt
in
mov
mov
mov
xchg
jl
hlt
mov
sub
rcll
or
sbb
adc
add
insb
add
rolb
cmp
stos
mov
pop
ds
push
pop
add
push
jmp
movsl
and
and
xchg
pop
sub
push
push
mov
jo
loope
xchg
leave
and
cmp
mov
jb
lret
lcall
xchg
hlt
xchg
mov
push
dec
jecxz
test
stos
out
sahf
xchg
in
jne
daa
jg
aam
xchg
dec
out
cmp
xor
mov
sub
jecxz
in
and
fdivl
popf
mov
out
xchg
pop
sbb
notb
jmp
aas
add
push
les
and
mov
lea
xor
xor
and
mov
adc
push
sahf
push
xchg
xor
ss
cmp
mov
jnp
ret
cmp
and
sti
jnp
mov
mov
cmp
aad
pop
ds
sub
outsb
xchg
pop
cmp
lock
outsb
cmp
pop
in
fwait
xor
add
push
xorl
pop
add
mov
call
negl
fldcw
push
sub
dec
imul
sub
out
jp
push
mov
lahf
hlt
jl
fwait
xchg
mov
jmp
jae
or
sahf
jle
in
jecxz
cli
loop
test
add
inc
out
cld
inc
mov
sub
xchg
push
fcomip
push
mov
popf
cltd
movlps
pop
aaa
inc
jnp
jle
insb
mov
jp
mov
outsb
mov
xlat
inc
xor
push
in
ret
inc
shl
push
jg
dec
fisubrs
mov
pop
sub
test
scas
shrb
add
push
mov
pop
cmpsb
sub
lcall
push
sub
dec
pop
jne
mov
mov
push
adcl
pop
sub
sub
popf
cmpsl
fidivrs
aam
sbb
dec
movsb
pop
add
loop
in
mov
add
sbb
into
push
pusha
dec
pop
xchg
pop
push
mov
sarb
jo
sbb
fbld
arpl
or
pop
aaa
push
jbe
xorl
dec
je
adc
inc
addr16
sub
and
xchg
pushf
scas
push
dec
mov
or
test
sub
or
aam
aas
out
ljmp
repnz
dec
addb
mov
sub
pop
pusha
hlt
inc
dec
in
cmpl
adc
dec
jnp
insl
cli
push
test
jle
inc
fs
ds
sub
loope
xor
pop
repz
call
xchg
mov
adc
jno
push
cmc
adc
insl
mov
dec
rcrl
mov
adc
jnp
hlt
icebp
mov
lods
jge
adc
push
ffreep
pop
sbb
mov
out
jge
nop
daa
dec
loopne
out
push
mov
sub
jae
pop
popf
int3
inc
in
cmp
roll
sbb
cli
push
sbb
jns
cmp
insl
out
std
cmp
sub
adcb
lock
ret
add
insl
je
mov
jmp
pusha
nop
addr16
pop
mov
dec
mov
outsl
dec
xchg
push
jge
push
ss
adcb
hlt
xor
xor
mov
jbe
bound
fdivl
sub
pushl
push
mov
lock
nop
cmp
in
jmp
push
mov
push
or
lds
mov
movb
pop
lcall
mov
aad
mov
inc
cmc
test
es
mov
iret
pop
add
js
inc
push
xchg
shrb
dec
negb
mov
jo
mov
pop
push
outsb
fwait
or
out
cmpsl
and
pop
in
add
xor
movsb
in
xor
test
sub
inc
lock
rcrl
and
aas
mov
mov
mov
aad
cmp
scas
push
xor
cmp
push
push
aam
xchg
add
xor
add
inc
in
jb
fldenv
adc
jnp
negl
lods
fistl
jg
jb
fidivs
push
fsubl
test
enter
add
out
shlb
loope
sbbl
scas
decb
pop
or
pushf
ds
filds
cs
mov
out
pusha
and
ret
fucomi
jp
in
cmpsb
cltd
add
hlt
out
scas
push
push
hlt
scas
into
and
incl
mov
ss
inc
jno
ja
mov
and
repnz
mov
sub
mov
xor
in
mov
fsts
shl
popa
test
push
mov
leave
call
adc
das
lock
pop
push
or
jle
mov
pushf
adc
and
repz
bound
inc
inc
push
cmp
out
sbb
or
push
pop
inc
adc
dec
inc
xor
clc
adc
stos
test
jne
stos
loopne
out
sahf
js
mov
jp
sbbl
outsl
fldenv
cmp
xor
push
cs
sub
shl
ja
mov
test
mov
scas
fsub
insb
daa
ret
mov
fdiv
sbbb
jl
cwtl
sub
cwtl
jg
add
scas
xor
dec
add
lcall
pusha
pop
sub
xchg
sbb
mov
adc
ss
mov
sarl
mov
push
pop
imul
mov
inc
mov
or
dec
xor
mov
lea
cmpsb
outsl
and
shll
sahf
mov
lock
icebp
pop
lods
mov
cmp
rorb
icebp
data16
divl
mov
gs
push
xor
mov
adcl
sub
shr
pusha
pop
sbb
iret
data16
cmc
jle
pop
and
mov
dec
mov
adc
sbb
cmp
shl
out
mov
dec
daa
lcall
push
inc
je
add
shlb
mov
lds
or
mov
int
or
pop
and
inc
popa
mov
dec
out
jp
mov
ja
add
jle
popf
stc
mov
mov
mov
enter
sbb
cmp
in
psllq
ljmp
jg
in
xchg
out
adc
enter
daa
jns
jb
mov
pop
sbb
enter
xchg
pop
and
inc
fwait
pop
movsl
movsb
mov
fnstsw
out
jge
pop
push
push
lahf
insl
cwtl
movsl
push
xlat
fldl
cmpsl
add
gs
push
fisubl
mov
addr16
mov
repnz
nop
in
push
or
cmp
test
inc
movsb
cld
add
shl
cld
lods
mov
out
jo
pop
cmc
adc
mov
cmp
scas
test
inc
repnz
mov
cld
out
inc
outsb
or
mov
push
dec
in
arpl
rolb
lcall
mov
xor
dec
pop
mov
adc
outsl
or
mov
adc
xor
push
xor
mov
pop
test
push
shrl
orb
and
and
adc
sub
mov
cmp
fistps
rcl
mov
mov
add
mov
jmp
sti
ss
jg
cmp
inc
push
popf
aaa
out
push
sub
xor
addr16
lea
sub
scas
cmpsb
xorl
sub
pop
jnp
jmp
fldl
jl
dec
pop
mov
push
dec
mov
aas
dec
mov
or
pop
cwtl
mov
cwtl
lea
xchg
int
das
sahf
xor
shrb
ret
loope
cwtl
shl
xchg
cmp
sub
insl
scas
js
pushf
or
fsubrs
and
and
mov
xchg
add
jnp
inc
pop
sub
sbb
mov
ljmp
mov
mov
ds
dec
sub
aam
loop,pn
add
mov
gs
faddl
and
insl
inc
fdivr
int
jbe
in
mov
sti
pop
push
mov
pop
fdivrp
jo
mov
push
test
pushf
out
push
pushf
sbbb
mov
inc
movsl
hlt
leave
jp
enter
lods
sub
sub
dec
es
adc
js
mov
add
clc
cltd
lahf
test
push
and
lret
in
or
shrl
fisttpll
fs
loopne
sub
adc
mov
int
aaa
push
xchg
push
jge
fistps
mov
loopne
int3
xchg
push
inc
mov
lods
aaa
out
jmp
sbb
aaa
fnstcw
pop
stos
pop
in
sub
xchg
fstpt
sub
sbb
mov
in
stc
popf
pop
cmp
rcll
fs
daa
push
in
mov
or
aad
in
inc
xchg
ds
add
gs
jns
push
cli
xchg
inc
stos
and
and
enter
jle
popf
xchg
out
int
mov
dec
ja
dec
xchg
call
and
mov
or
pop
mov
aad
lods
xchg
sbb
test
sub
fwait
aaa
pop
and
pop
lock
mov
adc
mov
rolb
mov
les
cmp
loop
fldt
mov
insb
mov
test
sbb
aas
test
mov
sbb
jmp
movsb
cmp
popf
pushf
incl
lahf
ret
jmp
fsubr
and
lcall
js
loope
mov
sbb
mov
and
push
inc
jle
inc
rclb
mov
jl
aas
dec
incb
aas
jmp
jo
adc
pop
shrl
lods
add
fisubrl
mov
adc
es
cwtl
ret
xchg
cs
dec
mov
mov
imul
xlat
push
movq
clc
pop
scas
inc
nop
xchg
and
pop
mov
inc
push
fdivrl
dec
loopne
pop
mulb
out
pop
repz
lcall
movsl
add
xor
fistpl
mov
xor
aaa
popa
and
repnz
mov
and
dec
xor
push
pop
push
scas
inc
inc
outsb
loope
dec
cmpsb
inc
push
jo
subb
xor
popa
movsb
ret
xchg
mov
xor
sub
fistps
movsb
enter
fstps
xlat
ds
mov
adc
cmp
mov
add
adc
and
jp
insl
nopl
aam
das
push
jnp
rcrl
mov
cmp
push
sbb
and
out
outsb
adcl
add
repnz
ss
sub
dec
ss
sahf
jmp
add
data16
out
inc
sub
and
or
push
push
push
mov
test
push
aam
mov
popa
jb
testb
cmc
mov
jb
push
mov
inc
stos
push
and
cmpsl
push
mov
in
cmp
sbb
push
ljmp
jno
mov
dec
out
lcall
adc
popa
push
lcall
lahf
data16
pop
es
mov
and
leave
mov
xchg
cmp
add
aam
sbb
xlat
jns
ja
roll
jns
clc
fnsave
xchg
popf
in
or
in
jl
xor
sbb
sub
sbb
das
repz
fcompl
jo
add
or
mov
and
push
jmp
aas
dec
movsl
push
xchg
rol
lahf
icebp
sub
int
cmp
push
rol
mov
out
cmpsb
inc
push
mov
pusha
stos
lahf
push
in
inc
je
jns
push
lods
aas
fadd
lods
sub
cmpsl
out
dec
xor
fs
mov
mov
rcrl
mov
out
insb
add
lahf
js
test
pushf
xchg
jb
fxch
add
mov
mov
add
les
sub
fstpl
aam
je
lcall
sahf
or
inc
insl
inc
insl
xchg
mov
xor
and
idivl
enter
aas
xchg
jno
scas
push
push
mov
idivb
movsl
cmp
jno
cmp
mov
inc
call
or
data16
push
inc
mov
in
pusha
divps
mov
cs
lret
imul
pusha
lret
xlat
outsb
lods
gs
or
das
test
enter
sbb
sub
lret
cld
punpckhwd
pop
cltd
xor
lret
push
mov
inc
mov
inc
push
xchg
ja
aaa
mov
adc
inc
xlat
andb
mov
popa
cmp
mov
imul
mov
push
inc
xchg
adc
pop
jns
mov
push
mov
sub
jae
mov
psubsb
daa
test
lret
movsl
scas
inc
push
call
je
outsl
loop
and
push
pusha
ret
push
cmc
inc
rorb
lret
or
lods
jo
pop
xchg
popa
ss
xchg
addr16
cmpps
xor
clc
pushf
and
sbb
mov
add
mov
jl
cmpl
adc
je
mov
push
xchg
lods
inc
nop
hlt
jbe
mov
lret
push
or
test
sbbl
pushf
push
xlat
mov
fmulp
sbbl
jnp
sarb
ficomps
sub
xor
repnz
lods
push
and
or
cmc
or
cs
xchg
cmpsl
inc
push
cmp
xor
sub
push
dec
xchg
test
xor
bnd
mov
or
pop
test
and
mov
sub
loope
or
dec
cmp
cmp
call
cmp
aas
insl
test
sbb
aas
mov
cmpsb
push
mov
mov
add
sbb
mov
lea
ljmp
scas
loopne
sbb
add
mov
or
cltd
mov
cmp
bound
shrb
inc
add
mov
xchg
and
std
bound
mov
mov
aam
inc
repz
mov
pop
pushf
xchg
sub
pop
jbe
insb
xchg
insb
jg
mov
jo
bound
cmc
jno
pop
je
cmp
cmc
xor
call
push
inc
scas
adc
adc
lods
inc
xchg
outsl
push
mov
negb
outsl
int3
or
shl
pop
mov
andb
fdivs
xchg
mov
fnstenvs
cld
or
cmp
add
aaa
mov
xchg
jns
int3
sbbl
in
fstpt
popf
stc
repz
jmp
adc
add
dec
cmp
in
mov
pop
cmpsb
in
insb
cmc
jb
cmp
rcrl
lock
adc
pusha
pop
icebp
xchg
dec
mov
nop
lret
int3
jae
ret
jmp
ret
sbb
mov
cmpsb
std
push
popa
test
sti
out
out
rcll
ljmp
jne
inc
push
mov
xor
pop
xchg
jmp
movsl
sbb
aad
stos
push
scas
cmp
cmpsl
rclb
out
fsubl
les
cld
rcl
shlb
imul
movsb
stc
pusha
imul
cmpsb
push
popf
xchg
or
popf
inc
cmc
sbb
push
mov
imul
mov
mov
xor
outsb
jae
sbb
rcrb
fisubs
ljmp
lcall
loope
ficoms
subl
cs
and
cwtl
imul
out
mov
mov
fcmove
mov
pushf
xor
aam
iret
push
mov
jbe
cmp
mov
mov
imul
stos
into
fwait
jae
fsubr
cmpsb
xchg
mov
cltd
dec
mov
dec
in
push
in
xor
aaa
pop
fldl
clc
js
clc
jge
cwtl
das
out
jmp
mov
lods
mov
pop
cmpsl
xchg
shlb
bound
mov
ffree
subl
xchg
rorb
cs
adc
ljmp
jbe
inc
stos
inc
addb
cmp
leave
mov
inc
dec
mov
jo
mov
add
mov
push
mov
inc
or
in
xor
add
xlat
imul
sbb
or
mov
mov
fldt
sub
cmpxchg
in
in
std
sub
in
scas
pop
xor
cmp
xor
insb
lock
fmull
std
cmpsb
ret
mov
cmp
mov
mov
cmp
jp
cwtl
fidivl
ret
lods
push
jmp
into
arpl
shrb
sbb
or
icebp
dec
cmc
pop
pop
xor
jne
test
add
or
stc
inc
xchg
sub
das
mov
jae
mov
jne
xchg
mov
ja
push
adcb
pop
and
clc
nop
stos
cmp
repnz
add
cmc
jae
daa
repnz
sub
push
push
sarb
or
sbbb
jno
aad
dec
mov
fildl
sub
lods
pop
stos
cmp
pop
repz
enter
loop
pop
enter
fs
idivl
loopne
gs
mov
movsb
inc
push
inc
push
or
bound
dec
xrelease
fucomip
mov
data16
mov
outsl
fs
out
push
add
test
sbb
mov
xchg
or
dec
mov
and
rcll
loop,pn
mov
pop
jno
xchg
scas
call
or
cmpsb
inc
push
fiaddl
subl
add
jg
dec
pop
or
je
jle
std
and
adc
jb
mov
lahf
adc
leave
adc
push
fimuls
mov
sub
jle
push
pop
pop
sahf
pop
push
sub
mov
pop
push
out
int
fsts
repz
bnd
push
addr16
push
mov
inc
inc
mov
sub
or
xorb
mov
mov
push
cmp
rcpps
add
lods
jbe
cmpl
test
arpl
fcomps
adc
sbb
in
repz
stos
sub
lret
cmp
pop
and
shll
mov
iret
mov
and
xchg
xor
xchg
stos
cmpsl
popa
stos
cwtl
push
ja
push
xor
js
jns
add
arpl
and
mov
xor
jl
js
mov
mov
and
add
mov
mov
insb
fildll
addr16
imul
int
push
add
xchg
sarb
clc
cwtl
mov
xchg
lcall
and
dec
jle
ljmp
aaa
das
jb
push
loope
xchg
jle
mulb
js
push
adcl
lods
xchg
mov
lret
cmc
jae
mov
repz
or
dec
xor
pop
push
ds
rcrl
test
jecxz
inc
jp
mov
data16
mov
push
in
rorb
pusha
xchg
and
dec
loope
pushf
jo
dec
dec
in
pop
inc
jbe
imul
jmp
fnstsw
sub
jo
popf
cmpsb
pushl
xor
cmp
and
fwait
jecxz
pop
adc
cmp
mov
enter
iret
shr
push
push
popf
fwait
jne
nop
push
out
dec
mov
xchg
arpl
ret
dec
adc
imull
mov
sbbb
fisubl
inc
in
ret
hlt
mov
aas
in
ja
aad
cmp
fwait
xor
xchg
push
jecxz
mov
jle,pt
add
fucomi
push
or
fidivl
cld
or
aas
push
sti
jnp
cwtl
mov
sbb
aam
into
icebp
and
stos
jge
pop
dec
inc
outsl
xor
lahf
pop
adc
and
cmp
jg
hlt
rorl
xchg
cmpsl
dec
cmc
cmp
jb
cmpsb
cmp
and
inc
add
pop
scas
hlt
pop
insl
ds
loopne
xor
ljmp
loope
mov
mov
aaa
dec
imul
adc
mov
iret
push
aas
shrb
adc
sbb
pop
pop
out
mov
pop
inc
and
rorb
cmpsb
stos
subb
fwait
int3
sub
push
sub
outsb
lock
pop
shll
dec
mov
movsl
push
sub
cmp
pop
ss
push
jne
mov
adc
cmc
dec
mov
fwait
mov
dec
rcrl
jl
mov
push
out
dec
in
xchg
mov
inc
or
mov
sbb
aas
icebp
dec
repnz
pop
and
pop
punpcklbw
push
xlat
jecxz
xchg
out
fsts
test
push
out
push
xchg
icebp
mov
jb
jg
femms
out
push
xchg
mov
aam
repnz
and
stos
inc
mov
inc
dec
jle
mulb
cmc
sbbl
xor
cmp
cltd
sub
or
das
cmp
and
lcall
push
ljmp
jno
rcll
adc
pop
in
popa
ds
mov
aam
shlb
mov
pop
cmp
xchg
insl
sub
xor
sahf
loop
call
loop
sbb
icebp
sbb
dec
adc
cwtl
sub
xchg
pop
xchg
shl
mov
push
lea
cmp
push
cmpsl
adc
mov
mov
loop
mov
std
lret
rolb
stos
mov
add
jnp
mov
int
mov
jno
inc
dec
into
ds
or
int
sarb
lods
aad
mov
push
imul
xchg
mov
test
pop
sub
xchg
fnstenv
xchg
push
jl
cltd
ds
mov
fldl
aad
imul
add
insl
cltd
pusha
loopne
add
rolb
mov
sub
sahf
and
mov
push
addl
lret
aaa
into
cld
jmp
aam
fcmovne
sbbl
out
fidivrl
push
sbb
mov
vmread
cmc
mov
cmova
ret
mov
cmpsl
push
mov
je
dec
jne
in
mov
mov
and
sbb
aas
lcall
adc
or
sti
stos
aaa
dec
inc
push
in
cli
jns
shll
pop
pop
add
jmp
push
add
or
mov
xchg
outsb
loope
pop
int
push
rcrb
out
sahf
push
adc
push
adc
pop
push
fs
push
movsb
rorl
out
addr16
push
sub
adc
fnstenv
jecxz
cmc
cmp
notl
pop
dec
pop
adcl
mov
jge
sarb
test
fs
cmpsl
sub
es
jg
out
les
roll
jnp
ljmp
std
ja
or
jns
push
fldl
xchg
mov
dec
sub
xchg
mov
idivl
mov
dec
nop
pop
jecxz
les
decb
pop
repz
jmp
insl
test
outsl
lret
mov
mov
sbb
mov
scas
mov
or
mov
mov
mov
jb
adc
mov
push
and
pushf
scas
sahf
dec
imul
ljmp
xlat
shlb
dec
add
pop
insl
and
dec
cmpsl
jecxz
ret
js
xor
push
addr16
mov
inc
out
icebp
incl
lods
inc
xor
bound
cmp
sbb
jmp
push
cld
sbb
scas
shll
push
mov
call
daa
sbb
jle
cld
mov
sbb
xchg
jp
xchg
shl
mov
adc
xor
jbe
repz
mov
or
dec
dec
xchg
js
jg
mov
mov
jl
lea
lahf
iret
sub
sarb
sbb
sbb
push
cmp
mov
dec
mov
in
insl
sub
inc
xor
lock
push
ds
std
or
add
pop
push
adc
addr16
outsl
loop
or
cmp
aam
mov
addb
push
cmc
sti
dec
add
movsb
jp
sub
ret
jmp
xor
icebp
es
insb
test
loopne
xor
in
cmp
outsb
jle
rorl
cmp
dec
iret
fs
push
fdivrs
mov
icebp
or
mov
xor
inc
es
ret
jle
int
ljmp
inc
fildl
in
pop
dec
mov
jle
shlb
pop
push
or
leave
lret
cwtl
divl
imul
daa
xor
ss
out
loop
mov
jbe
xor
cmp
ss
in
push
sbb
cmpsb
cmp
into
mov
fstl
psubd
aas
aas
popf
mov
add
cs
pop
mov
add
pop
rcrl
lock
inc
movsb
fists
lret
mov
push
sub
les
xor
sub
aad
add
lret
lods
adc
add
inc
push
mov
fstpt
scas
push
dec
rorb
cmpsl
imul
flds
jle
jmp
pop
pushf
xor
inc
out
mov
mov
sbb
mov
out
adc
and
stc
pop
mov
cmpsb
sar
mov
adc
or
add
sbb
sub
and
jmp
test
inc
xchg
mov
push
in
cmp
cmp
jmp
and
push
imul
jne
pop
movsl
sbb
mov
cmp
cmc
dec
js
push
cltd
sub
outsb
or
adc
and
insb
pop
mov
inc
aas
mov
nop
jnp
into
lods
sbb
cmp
call
packsswb
das
push
call
sbb
mov
mov
push
addr16
xadd
and
in
in
xchg
lea
loope
sbb
ret
inc
xchg
je
cli
and
push
fucomi
fs
repnz
imul
dec
or
sub
pop
jno
sbb
pop
mov
dec
mov
xchg
mov
lret
xchg
jmp
stos
sbb
test
stos
xor
mov
cmpsb
mov
sbb
push
dec
cmp
daa
flds
xor
pop
fstl
dec
pusha
aaa
add
adc
lret
cltd
sti
xchg
or
cmp
loope
nop
push
and
sti
pop
imul
inc
fnsave
xchg
mov
cmpsl
pop
repz
jp
imul
mov
clc
dec
mov
or
lahf
out
xchg
pop
cmp
pop
outsb
in
push
loop
out
out
cld
dec
movb
and
sub
rclb
popa
xor
mov
outsl
iret
outsl
pop
mov
stos
inc
leave
int
stos
pop
in
xchg
sti
mov
iret
pop
add
leave
pusha
pop
sbb
out
mov
ds
aad
inc
adc
sbb
js
inc
mov
sub
sub
dec
or
test
rorb
pop
dec
out
cmp
mov
ss
mov
or
and
cmpb
and
outsl
push
adc
test
mov
mov
cmp
sbb
push
enter
cmc
xchg
pushf
adc
call
adc
outsl
inc
xchg
dec
jp
sbb
imul
lret
js
push
push
rorb
add
push
xchg
sub
adc
dec
xor
adc
fwait
mov
and
adc
push
inc
dec
cmpsb
outsl
dec
outsl
adc
std
cltd
pusha
or
ds
dec
sbb
testl
push
inc
jecxz
lea
mov
daa
fistl
lods
pushl
push
jmp
sub
int3
and
dec
xchg
ret
sub
fcomi
aaa
push
shrb
imul
inc
sarl
dec
sbb
and
lret
int3
dec
shlb
mov
scas
scas
out
iret
sbbl
push
divb
in
repnz
jle
jns
ds
movsl
adc
xchg
imul
lret
sbb
arpl
mov
fcmovnb
mov
inc
lock
fldl
dec
cmp
fs
aad
inc
cmpl
jo
cmp
out
add
enter
je
add
lods
mov
xor
inc
arpl
mov
push
loop
jecxz
dec
cmpsl
inc
notl
call
cmp
orl
xor
cmpsl
negl
fdivrl
imul
icebp
jecxz
das
inc
inc
fnsave
aaa
mov
inc
inc
cmp
jmp
push
xchg
nop
bnd
in
cmp
aam
nop
pusha
ds
icebp
cmp
pop
mov
dec
push
push
pop
ret
inc
repnz
in
js
jge
pop
mov
add
or
cli
push
xor
sbbl
ret
sub
add
fs
in
inc
outsl
addr16
lods
sbb
pop
adc
mov
movsb
adc
xchg
add
push
jg
add
fdivs
mov
idivl
xor
movsl
sbb
adc
xchg
xchg
push
std
jo
mov
cmpsl
sub
adc
inc
cld
and
cwtl
mov
inc
aas
jb
jo
jns
in
movsl
dec
loope
dec
into
xchg
sub
jo
ss
add
push
inc
mov
shl
popa
out
ja
loope
sbb
outsl
dec
xor
xchg
xlat
fimull
je
cmpsb
movsl
sub
add
push
or
lods
xchg
test
xor
mov
scas
sar
aaa
into
mov
fs
daa
popl
xchg
ficompl
int3
add
inc
outsl
push
ja
push
jge
and
pop
push
cmp
mov
jne
addr16
cld
enter
movsb
jno
sahf
in
inc
dec
adc
jle
jno
push
rorb
xchg
mov
mulb
pop
movb
sub
inc
fimull
call
fnstcw
push
push
xchg
dec
pop
clc
add
sbb
jmp
sbb
mov
aaa
rorb
lahf
data16
jae
mov
jbe
inc
jecxz
push
inc
push
test
push
adc
inc
lcall
jl
mov
mov
jp
test
sbb
sbb
mov
mov
jle
push
mov
adc
pop
fdivr
jns
sbb
push
pushf
roll
and
and
push
jg
fdivrl
jne
push
fwait
ja
ss
movl
inc
jbe
sbb
in
aad
outsl
imul
pop
out
std
inc
mov
stos
jne
mov
rcrl
pop
inc
mov
hlt
dec
out
shrl
outsb
cmp
xchg
aas
shrl
into
pop
subb
jo
push
push
pop
mov
xchg
loop
divb
stos
xchg
dec
xchg
jnp
xor
push
xor
push
cltd
test
cmp
test
pop
cmp
pcmpgtd
popf
repnz
xchg
lock
adc
xor
xchg
test
mov
mov
dec
fcmovnu
and
mov
aam
popa
clc
js
xor
pop
pop
cli
inc
rolb
mov
mov
aam
scas
imul
xor
mov
cmp
pusha
sub
test
nop
cmp
sti
das
adc
inc
insb
ret
add
cmp
sub
dec
dec
jae
in
fiadds
in
inc
push
mov
sbbb
scas
sub
imul
mov
add
sbb
add
add
outsb
pop
addr16
dec
aas
pushf
jns
or
aas
dec
sub
ss
in
cltd
add
imul
loope
addr16
cld
or
fnstcw
ds
scas
loop
push
jecxz
lock
sbb
daa
cmp
xorb
dec
lods
xor
inc
ss
mov
dec
insl
inc
int
aam
addr16
test
mov
arpl
lds
test
flds
push
inc
cmp
push
xchg
ss
pushf
dec
arpl
shrb
cmp
test
xchg
enter
jecxz
or
insb
xchg
sub
jg
imul
sub
pop
jecxz
mov
pop
call
jns
outsl
cmp
xchg
cmpsb
pop
cmp
sahf
mov
cmpsl
or
sub
outsl
ds
es
mov
adc
int
and
dec
mov
sti
mov
call
inc
xor
xchg
sub
pushf
xor
rcll
arpl
enter
push
es
sbb
mov
test
out
js
dec
call
jmp
lods
mov
inc
mov
xchg
int
sti
or
adc
lcall
push
mov
jbe
cmc
inc
jecxz
lock
mov
or
pop
dec
or
inc
add
xor
push
pop
pushf
jbe
mov
stos
inc
aam
rorl
inc
daa
outsb
test
sub
add
mov
daa
daa
inc
or
lods
mov
or
xchg
shrb
inc
mov
mov
lahf
orl
cmpsl
testb
push
ja
insb
pusha
inc
fsubp
mov
lret
inc
add
test
addr16
pop
adc
pop
daa
cmp
vpsllw
or
sbb
mov
xchg
sub
pop
mov
adcb
and
xor
cli
pop
loop
pop
icebp
inc
add
mov
and
inc
add
sub
push
pop
and
rcll
out
stc
aam
sub
sub
jmp
add
js
popa
ljmp
incl
cltd
inc
mov
push
mov
inc
xor
adc
popa
shrl
or
sub
andb
mov
xchg
mov
xchg
divl
push
lahf
push
inc
popf
jle
push
sub
popf
pushf
sbb
cwtl
jno
rcrb
pusha
mov
adc
arpl
decb
test
cmp
lret
jmp
cld
ffreep
jg
stc
inc
fcmovb
iret
push
jmp
dec
nop
push
jne
pop
add
test
adc
xor
jns
sub
push
jmp
xor
push
subb
mov
es
repz
or
cmp
negb
xor
sub
nop
inc
push
imul
lcall
mov
out
imul
add
out
repz
sub
addl
sub
dec
aas
lock
fiaddl
fldl
data16
sbb
xchg
iret
jge
sti
bound
dec
into
cmpsb
inc
fisubl
push
fnstcw
cs
adc
repnz
dec
fcmovnbe
mov
mov
mov
adc
add
mov
jns
mov
scas
jg
xlat
xorl
lret
negw
loope
into
andl
pusha
jl
xchg
mov
int
hlt
jecxz
xor
or
mov
out
mov
or
lods
dec
pop
mov
lret
in
popf
xlat
dec
lahf
or
fwait
test
dec
bound
mov
cmp
or
lods
and
stos
push
xchg
ja
dec
fs
fstps
xorb
test
clc
shll
jg
mov
loop
jg
fisubrl
int3
pop
lock
lret
cmp
out
ret
cwtl
jae
add
dec
mov
and
adc
js
lods
or
push
adc
enter
mov
cmp
mov
ror
mov
decb
cmpsl
test
sub
outsl
fdivrl
outsb
inc
aam
inc
pop
fcomip
into
dec
mov
xor
cmp
jmp
icebp
or
mov
add
or
sbb
add
push
cmp
cmp
mov
iret
fistps
xchg
lds
mov
jl
imull
leave
cmp
movsl
pop
add
push
pop
mov
test
jno
je
dec
mov
cmpsl
lds
or
xchg
das
repnz
sbb
pop
test
mov
adc
jmp
sbb
lock
mov
cmpsl
addr16
test
jbe
and
shl
loopne
sub
rcrl
pop
cltd
faddl
mov
in
adc
and
sti
cs
mov
mov
xlat
inc
fisttpll
sbb
call
sbbb
jne
adc
addr16
jmp
mov
out
jno
and
pop
cmc
mov
inc
aaa
adc
mov
into
das
cmp
adc
push
fwait
push
out
test
enter
dec
xchg
and
cmp
aad
lods
add
shrb
jbe
push
rcrb
stos
fcoms
iret
push
dec
adc
jle
mov
in
xchg
jmp
mov
push
addr16
stc
notb
in
mov
in
pop
xor
insb
sbb
xchg
pop
mov
and
pop
icebp
hlt
mov
xchg
pop
in
in
mov
jge
aas
nop
xchg
outsl
adc
mov
shr
mov
xor
add
mov
jmp
popa
sub
dec
xchg
xor
sahf
clc
outsl
jns
sbbl
repz
push
sub
sbb
add
jp
lods
mov
aas
sbb
ret
dec
imul
test
inc
fstl
add
lods
iret
test
das
fmull
push
jle
cmpsl
ja
dec
or
jmp
cld
xchg
scas
dec
pop
out
xchg
cmc
call
cld
jl
roll
loopne
les
jns
ret
push
xlat
rcl
xchg
xchg
stos
add
or
push
or
adcl
sti
xor
jle
js
divb
push
in
cs
mov
leave
lret
xchg
sbb
lcall
sub
aam
sahf
cmp
cmpsl
inc
out
lock
and
cmp
enter
jbe
adcl
mov
jbe
adc
fbstp
sbb
cs
daa
push
sub
dec
stc
and
jp
cmp
mov
cmp
aad
sti
cmp
ret
in
fdivs
int
and
lea
in
sub
mov
stc
jb
cmp
into
pop
hlt
rorb
test
jecxz
pusha
dec
dec
outsl
leave
je
jb
pop
test
push
mov
dec
mov
les
pop
lahf
or
jl
xorps
jns
inc
mov
or
insl
test
out
xor
pop
call
mov
imul
and
pop
fstl
shl
lods
test
sub
movsb
dec
pop
sub
jmp
lods
xchg
xor
out
mov
jp
pusha
nop
test
sti
mov
cmp
loope
lock
mov
inc
ficomps
mov
dec
jo
lcall
pop
cmp
xor
inc
clc
aas
stos
jo
pop
fsubs
mov
mull
sti
popl
leave
outsl
xchg
loop
fimuls
lret
mov
jno
cmp
sbb
pop
inc
out
inc
aad
mov
jno
ss
mov
stos
xchg
repnz
dec
add
lret
lock
xor
mov
lock
xchg
mov
mov
movl
sbb
hlt
jge
cmpsb
mov
fnstenv
dec
fcoml
cmpsl
push
lock
lods
xor
addr16
mov
xchg
sbb
mov
sti
aas
xor
ds
sti
and
stos
add
ja
outsb
aaa
fwait
mov
sar
mov
add
xchg
cmpsl
mov
out
in
add
sti
es
stos
sbb
fcmovbe
adc
dec
xor
mov
or
mov
mov
sub
shll
xor
aam
rclb
nop
pop
push
push
mov
lea
subb
ret
divl
test
push
cmp
xchg
shrb
pop
lock
mov
call
cld
jmp
pop
test
xchg
dec
pop
ljmp
int3
cmp
pushf
movsl
add
and
mov
out
xchg
push
lea
or
mov
sub
fwait
mov
add
inc
clc
xor
fisubs
or
adc
data16
xor
push
sbb
sub
fs
leave
ljmp
jnp
and
fadd
icebp
push
mov
cmp
sub
inc
mov
leave
outsb
add
xchg
popa
enter
lahf
aas
aam
add
cmp
mov
xchg
xchg
ljmp
mov
cmc
lods
pop
or
mov
mov
popf
push
shll
packsswb
sbb
aas
mov
cmp
mov
cmp
fwait
xlat
repz
insl
call
rorl
cmp
mov
adc
inc
mov
aas
sbb
loope
mov
daa
mov
and
ds
pop
test
mov
mov
enter
mov
fldl
cltd
adc
aad
jle
je
movsl
mov
inc
movb
dec
dec
hlt
out
sbb
xchg
inc
mov
hlt
repz
data16
sub
dec
icebp
shrl
enter
in
adc
fcmovnu
lret
jns
and
xor
fs
jge
js
stos
or
imul
pop
in
pop
adc
add
lds
int3
cli
cmp
add
pop
test
xchg
adc
xor
sahf
jbe
ret
pusha
fistpl
dec
sbb
insl
rcll
pop
cmp
pushf
mov
fldt
data16
xor
cltd
out
lods
add
test
jl
push
out
adc
fildll
xchg
xchg
inc
adc
scas
movsl
push
sbb
shlb
push
sbb
mov
xor
xchg
out
push
xchg
mov
mov
ja
fxtract
jecxz
and
jne
je
ret
jno
mov
int
cld
inc
adc
popa
popf
in
lret
mov
pusha
add
push
xor
xchg
sbb
scas
loope
pop
mov
outsb
adc
adc
mov
xchg
stos
mov
out
repnz
cmp
cmc
cmp
cmc
pop
lea
mov
jmp
les
dec
loop
insl
mov
cmp
sub
in
stos
fs
movsb
inc
mov
and
lahf
or
jg
int3
xchg
pop
jae
pop
dec
cld
inc
loopne
mov
lahf
mov
inc
repz
xor
adcb
jnp
jecxz
mov
pop
adc
pop
mov
or
cwtl
mov
mov
les
pop
mov
xchg
push
xor
mov
adc
inc
out
or
sub
jo
pop
std
pop
lock
or
stos
fdivrl
dec
cmp
cwtl
jne
test
lods
incb
xor
sti
jmp
push
jb
sbb
cmp
lea
sub
addb
pusha
pop
push
dec
sahf
dec
jne
or
insl
jno
xchg
jle
ss
lret
or
adc
test
cmp
or
mov
outsl
fiadds
fildl
hlt
lahf
shlb
or
out
pushf
dec
fidivs
ljmp
jno
jge
mov
jns
je
ret
rolb
sub
lods
pusha
jnp
dec
je
sarl
pop
xor
ror
repnz
mov
mov
sub
pop
mov
dec
sti
inc
or
filds
mov
cmp
dec
mov
imul
xor
dec
push
mov
or
xor
jae
xor
mov
push
js
push
pop
addr16
add
sbb
fidivl
fidivrs
loop
test
in
push
out
xchg
dec
add
sarl
push
ss
and
out
cmp
das
pop
pop
mov
cli
enter
cmp
sub
aam
adc
out
push
cmc
dec
in
inc
loop
jecxz
test
sub
arpl
cmp
sub
mov
jbe
sub
out
std
roll
sahf
sbb
mov
nop
lcall
fwait
xor
lcall
dec
dec
mov
insb
mov
out
adc
and
inc
sub
xchg
shll
in
cli
into
add
icebp
cmp
sub
fidivl
int3
int
arpl
jo
cmp
push
jae
loop
aaa
fnstenv
inc
xlat
addr16
outsb
adc
jbe
out
test
stos
adc
lcall
into
mov
lods
inc
fstps
xor
js
cmp
xor
add
push
lcall
jo
fs
rorl
jge
or
out
push
bound
es
jecxz
popa
int
ror
pop
add
call
popa
jp
movsl
fnstenv
or
dec
mov
push
aad
into
sbb
and
xchg
inc
cmp
ror
sbb
lsl
xor
addr16
inc
out
insl
xchg
movsb
cmp
mov
pop
mov
out
fstl
add
in
add
fistpl
repz
mov
sbb
sahf
mov
popf
xor
jmp
insb
mov
sbb
fs
aam
sbb
fsubr
cmp
jo
sub
sbb
dec
inc
mov
aam
xor
roll
std
sub
aad
jg
sbbl
ja
hlt
mov
outsb
psrlw
mov
sbb
xchg
add
push
call
push
fs
inc
jno
into
add
dec
mov
iret
in
mov
cwtl
icebp
ret
clc
adc
push
test
add
ljmp
and
adc
sub
call
adc
or
lock
dec
roll
adc
mov
jo
or
loope
lret
test
rclb
stc
int3
pop
or
fimull
in
mov
insb
data16
cmpsb
fldenv
sub
loope
add
mov
mov
pop
in
insb
clc
pop
mov
mov
jl
and
insb
rclb
lahf
loop
or
andl
or
pop
jmp
xchg
xchg
cwtl
outsl
mov
pop
cmp
adc
iret
add
imul
stos
ljmp
dec
push
inc
ficomps
stos
inc
fstpl
push
frstor
pushf
mov
roll
inc
fcompl
ficoms
mov
or
mov
and
mov
lret
sub
or
loope
pop
inc
scas
mov
xor
jmp
in
sbb
in
mov
xlat
jbe
jle
ret
adc
je
ss
sub
cmp
mov
xchg
jmp
push
cmp
mov
call
sub
dec
or
push
popf
aaa
mov
into
cmp
push
sbb
aad
inc
test
mov
sbb
and
sarb
js
imul
cltd
push
mov
rorb
push
shll
pop
out
ds
pop
mov
add
rcl
popa
mov
pop
sub
xor
popa
clc
sbb
jecxz
cmp
fnstsw
xor
aam
xor
add
clc
jge
sub
out
test
decl
xor
data16
xchg
inc
rorb
inc
dec
in
add
jle
mov
lret
andl
les
push
shrd
call
xchg
lds
outsb
mov
or
cmpl
pop
repnz
nop
leave
sbb
nop
popa
into
loope
jno
iret
mov
mov
lods
dec
dec
xorb
mov
rcrl
xchg
jns
cmp
fnstenv
xchg
push
insb
aas
enter
test
out
loopne
mov
mov
movsb
or
xchg
xchg
jnp
dec
adc
inc
lret
push
pop
sbb
xor
pop
mov
jmp
imul
mov
cmp
cmc
movsb
xchg
xor
push
push
push
xor
jg
jb
add
lcall
xlat
push
mov
mov
fstpl
xchg
psrad
cmp
imul
add
jne
insb
leave
shll
adc
fwait
jge
mov
fprem
rcl
icebp
mov
test
xchg
push
cmp
test
inc
mov
add
dec
or
push
xchg
aad
mov
in
ljmp
pushf
lret
cld
mov
jnp
nop
mov
jp
in
repz
dec
xchg
mov
lret
xchg
inc
xor
xchg
pop
or
dec
dec
mov
xchg
mov
and
mov
jne
inc
and
enter
bound
sbb
icebp
xchg
shll
ja
addl
icebp
iret
xchg
pop
fildl
push
or
fistpll
rcrl
pop
call
pop
and
cltd
xchg
mov
and
movb
xchg
aad
lcall
mov
push
sti
inc
dec
adc
mov
fstps
cmc
aas
dec
lods
aaa
hlt
push
pop
sahf
inc
or
cmp
jg
rclb
call
jmp
aaa
adc
mov
dec
jae
mov
adc
jo
rcll
leave
fnstcw
xlat
lret
mov
outsb
repz
inc
adc
mov
push
xchg
xor
jp
mov
out
mov
call
mov
in
xchg
cs
addl
je
push
enter
cmp
inc
rcrb
add
sub
jbe
ljmp
jno
add
outsb
cmpsl
lahf
mov
and
movsb
insb
repz
ss
ret
mov
das
ja
push
js
sub
jg
lds
or
add
push
add
fucomp
or
or
mov
jno
jg
sbb
adc
addr16
ret
adc
push
mov
pop
pop
or
jae
mov
test
inc
adc
adcl
adc
fwait
push
insb
int
daa
cmp
jecxz
std
adc
ret
sub
notl
loop
fsubrs
fiaddl
sti
adc
jl
push
jmp
lods
and
pop
test
mov
into
call
jns
fwait
and
sti
adc
imul
sbb
negb
out
sbb
sbb
inc
pushf
decl
scas
inc
xchg
adcl
aam
cli
sbb
jb
jns
inc
nop
and
sbb
call
addr16
dec
in
ret
cmp
insb
lock
mov
mov
sarb
lds
push
aas
fistpll
or
add
stos
inc
sub
and
xlat
loop
add
cld
pop
jmp
sbb
mov
mov
aaa
hlt
cli
mov
pop
in
pop
cli
pushf
scas
or
dec
jb
jae
xor
mov
imul
arpl
dec
mov
jno
cmpb
or
jbe
jo
jle
pop
out
test
repnz
push
adc
fisttpll
repnz
xchg
add
cmc
int3
xlat
mov
dec
sbb
andb
adc
mov
jg
pop
add
mov
lds
testl
cmpsb
sbb
lret
insl
add
test
out
je
or
loop
fwait
mov
mov
int3
out
sar
mov
add
movlps
push
mov
mov
sub
stos
scas
add
fs
pop
adc
dec
sbbb
xlat
xchg
cmp
pusha
leave
mov
fstpt
pop
repnz
out
mov
dec
mov
shrb
scas
ret
inc
ficompl
enter
cmp
mov
inc
or
dec
adc
xchg
sbbl
subb
aad
push
outsb
jmp
sub
fdivrs
or
fbstp
pop
data16
push
movsb
mov
rcl
jae
pop
push
jmp
dec
jle
lods
or
push
stos
gs
lock
push
popa
pop
shrl
or
sbb
cli
xor
dec
popa
mov
subb
jo
hlt
lahf
ss
mov
stc
aas
cmp
outsl
cld
push
pushf
fistpl
movsl
add
jle
jp
or
in
lcall
mov
sahf
fistl
jl
ds
test
dec
mov
inc
fwait
lea
mov
add
xor
cli
and
jmp
dec
or
pop
mov
loopne
ja
fsubs
mov
push
out
or
mov
add
mov
sub
sbb
out
inc
insl
popl
xchg
rolb
push
movsl
shlb
hlt
popa
std
pop
adc
or
test
cmpsb
push
xor
cmc
inc
fisubs
loope
jno
int3
gs
std
mov
jmp
gs
push
loope
test
mov
pop
pop
ret
jo
mov
xor
mov
push
popl
sub
dec
imul
testb
es
scas
xor
jne
inc
push
das
mov
and
arpl
dec
mov
add
paddq
xchg
jne
cmp
outsl
aam
dec
push
push
add
ljmp
add
rorl
push
outsl
ja
in
sub
in
pushf
fcoms
jl
cli
mov
mov
pop
inc
mov
or
add
loop
mov
xchg
movl
and
mov
repz
xchg
mov
jp
mov
cmp
ss
or
insb
popf
xor
ret
je
mov
mov
lret
int3
or
or
mov
push
jmp
mov
jo
aam
out
test
je
jmp
lea
jle
mov
lahf
in
gs
lret
call
xchg
mov
repnz
jbe
ljmp
xchg
aas
inc
stc
or
jb
xchg
into
xchg
leave
adcb
mov
fdivrp
mov
mov
fists
sub
add
arpl
call
cwtl
addb
sti
mov
outsb
add
mov
in
inc
jg
xchg
lahf
mov
fcomip
push
jb
xchg
movsb
aaa
out
test
adc
add
add
mov
or
leave
daa
repnz
push
repz
or
iret
cmp
or
test
and
dec
mov
adc
dec
xor
adc
xor
rorl
arpl
mov
xchg
ss
pop
adc
adc
mov
call
sbb
jno
loopne
insl
scas
xchg
mov
movsl
push
and
test
lods
xchg
dec
adc
jecxz
rcrl
popf
shl
cmp
and
push
mov
or
dec
stos
xchg
mov
subl
cmpsb
jns
inc
stos
ret
push
lahf
inc
or
pop
in
mov
sbb
mov
aam
pop
add
ret
mov
repnz
mov
in
rcrl
loop
jns
mov
cmpsb
call
and
into
push
loope
push
adc
or
popa
cli
mov
add
dec
or
push
sbb
pop
push
rcrl
shl
jnp
lds
mov
pusha
in
mov
flds
jl
inc
lock
inc
or
imul
rclb
outsb
rcrl
fsubrp
scas
jo
rorl
orl
xor
xchg
adc
dec
pop
scas
jns
shlb
lods
dec
gs
mov
rolb
pop
inc
jl
push
inc
faddl
lock
ja
push
mov
xor
sub
aaa
add
lcall
sbb
out
fwait
mov
ficoms
outsl
sub
std
jo
ret
add
adc
bswap
xor
inc
push
sub
sub
dec
add
xchg
movsb
jmp
jle
cmpsb
scas
lret
push
inc
pop
push
lret
popa
stos
in
out
popa
inc
call
sub
pop
addb
popa
stos
in
mov
lods
aam
jecxz
or
cmp
dec
negb
xchg
inc
insl
data16
adc
scas
fidivs
mov
loope,pn
mov
dec
lret
lods
or
cltd
dec
xchg
and
xchg
sub
imul
inc
sub
mov
pop
add
xchg
push
cmpsb
dec
sub
scas
and
push
test
aam
std
or
jg
leave
dec
out
test
repnz
xchg
pop
pop
push
mov
out
jle
sub
push
sbb
sahf
mov
xchg
loope
in
sub
jecxz
loop
int
inc
js
fisubrs
push
xlat
lods
jl
adc
pop
or
iret
mov
rcrl
xchg
jge
mov
inc
xchg
sub
xor
push
insb
nop
jb
pop
sub
out
icebp
in
popa
jnp
pushf
scas
inc
or
mov
nop
scas
std
ror
nop
mov
jl
out
xchg
sbb
into
gs
loop
sbb
jne
lods
xchg
in
outsl
stos
and
aas
mov
insb
jne
mov
mov
pop
mov
xor
repz
stc
xor
dec
imul
addr16
aaa
repz
int3
xor
pop
daa
push
decl
iret
xor
push
dec
cld
ss
xor
int
popa
adc
pushf
cmp
mov
dec
or
nop
imul
repnz
xchg
xor
cmpsb
shl
mov
xchg
mov
inc
movsb
gs
lret
jl
shl
dec
in
sete
sahf
inc
in
cmp
jecxz
sbb
and
sti
xchg
push
jne
and
or
fdivrl
aas
clc
xchg
cmp
nop
dec
aaa
shl
fs
out
pop
xorb
aad
pop
in
stos
fsubs
popa
cmp
sub
aas
push
add
shrb
outsb
adc
in
in
es
push
or
rcrl
jne
std
stc
cmp
push
ljmp
dec
dec
out
mov
imul
insl
pop
ljmp
in
cmp
pusha
xchg
rcl
loop
in
repz
mov
and
add
xchg
dec
jg
pop
jecxz
mov
stos
inc
aam
mov
mov
movsl
xor
sbb
jle
ret
fs
pop
push
adc
xchg
push
imul
mov
pop
dec
rcll
pop
push
testb
int3
jg
mov
ljmp
aad
push
pop
in
iret
xchg
and
test
xorl
jae
out
mov
dec
add
scas
ret
cmp
test
out
adc
mov
pop
popf
jb
lret
outsl
inc
aam
cmp
cmp
jne
mov
stos
and
faddl
sub
add
mov
cmp
adc
mov
adc
pop
sub
pop
adc
inc
and
xor
xchg
call
push
outsb
adc
add
shlb
sti
int
jg
ret
insl
jns
cmp
pushf
add
add
sub
lock
filds
rcll
mov
mov
lahf
push
lods
bound
loopne
sahf
out
cwtl
loop
bound
in
sbb
add
mov
pop
jbe
cmp
dec
add
sahf
cmp
mov
cmp
push
xchg
or
out
push
inc
pop
jg
cmp
lcall
pop
das
in
adc
lcall
jbe
addr16
adc
add
loopne
adc
mov
in
in
inc
push
subl
jmp
cltd
aad
push
cwtl
mov
jo
pusha
mov
or
jb
lahf
push
adc
pushl
icebp
or
je
sbb
lcall
push
mov
and
out
mov
mov
repz
cmp
sbb
in
cs
push
icebp
mov
xchg
mov
jl
and
xor
push
pushf
in
jl
mov
scas
std
xchg
nop
in
dec
push
ja
or
cmp
sub
push
dec
inc
fisttps
push
jno
pop
shrb
das
movsl
lods
mov
xchg
xor
hlt
push
add
mov
ja
jo
hlt
xchg
insl
es
popf
mov
outsb
sbb
xor
call
pop
fstps
jb
or
mov
call
insl
add
leave
xor
pop
sahf
adcb
pop
cld
dec
addr16
lea
in
or
fildl
pop
sbb
fimull
es
pop
pop
mov
add
add
jns
aad
xchg
add
jns
stos
fistpl
mov
jmp
push
mov
lea
in
dec
or
mov
mov
xchg
and
mov
push
aad
lcall
sar
push
mov
movsl
mov
jle
xor
mov
push
push
shrl
hlt
lret
dec
dec
and
cwtl
incb
daa
shrl
inc
adc
cld
out
popa
ljmp
pop
out
add
inc
push
dec
xor
mov
sti
scas
jb
sub
loopne
mov
cs
jns
jne
add
insb
push
pop
loop
lcall
cmp
imul
pop
idivl
mov
pop
mov
add
and
outsb
mov
add
cmp
fisubl
pop
adc
in
jb
out
fdivrl
into
push
dec
mov
xor
cmp
mov
scas
xor
cmpsb
xchg
and
loop
setnp
fsubrp
jl
in
mov
xor
mov
outsl
add
push
dec
and
fcomip
fcomps
cmp
mov
fnstcw
cmp
or
test
dec
repz
cltd
xchg
je
mov
enter
push
out
cli
imul
sbb
fs
leave
ss
aam
pop
inc
mov
jne
dec
ss
jge
cpuid
stc
inc
sbb
cltd
sub
lret
sti
ljmp
mov
loope
adc
mov
inc
xor
fwait
mov
or
cmp
sbb
out
test
sbb
mov
notl
std
push
dec
into
loope
jb
jmp
test
scas
or
adcb
push
push
hlt
shrl
ljmp
out
or
cli
testl
jne
repz
cld
xor
pop
push
lret
test
xchg
jmp
jo
push
xchg
jg
loopne
push
sbb
out
and
push
fnsave
cmp
cmp
sub
repz
xchg
jp
and
ret
cltd
movsl
jecxz
sub
jnp
ret
cs
adc
orl
jl
and
sti
mov
xor
int3
arpl
dec
push
push
sahf
frstor
or
and
je
xchg
cmpsb
repnz
loop
sarb
push
push
mov
jge
popf
lret
or
shrb
mov
lret
repz
icebp
movsl
fsubrl
cld
xchg
lea
daa
cmp
int3
jae
leave
pop
cmp
leave
jg
aad
rcl
push
les
div
or
pop
pslld
out
mov
call
add
test
aas
movsb
adc
les
push
jnp
cmp
fwait
adc
lds
std
xchg
xor
into
enter
ret
inc
stos
xlat
lock
inc
pusha
ss
mov
ds
popf
lods
and
jne
xor
sub
inc
jae
out
and
sbb
mov
jno
out
popa
in
cmpsl
int3
fldt
push
sub
stos
jnp
and
loope
int3
in
mov
mov
adc
and
pusha
test
or
sahf
xchg
into
cmc
rcll
test
adc
inc
lods
ja
jb
iret
xor
or
push
push
xchg
or
pushf
push
jl
and
xchg
out
nopl
ret
shl
fldt
loop
pop
mov
pusha
insl
sub
sbb
gs
pop
and
sub
ja
cmp
sbb
or
out
mov
fmuls
add
arpl
cli
cmp
imulb
mov
fsubs
lock
pop
outsb
and
push
mov
cwtl
xor
cmp
loopne
mov
sub
ret
mov
adc
sub
jmp
sub
daa
stos
testl
fists
mov
daa
test
jbe
out
mov
push
push
xchg
add
fimuls
inc
test
repnz
sbb
push
adc
shll
cwtl
ret
cli
lock
fsubrs
or
jmp
sbb
add
testb
or
sbb
sti
xchg
pop
sub
inc
push
out
js
insl
add
adc
fidivs
add
es
push
lods
xchg
mov
inc
xchg
movsb
test
out
sub
outsb
xor
mov
xor
inc
shll
jg
and
push
stc
loope
push
mov
rol
loopne
out
lea
out
sub
push
daa
rclb
clc
loop
sbb
cltd
stos
test
xchg
movsb
cmp
aaa
pop
repnz
in
ret
fucomip
push
pop
in
js
pop
loope
sub
movsl
js
insl
call
cmp
sbb
sbb
out
sbb
sarb
sahf
dec
fs
push
sub
sub
lds
mov
int3
xchg
sbb
jp
dec
iret
sbb
or
pop
mov
xchg
pop
fstpt
mov
out
sub
mov
mov
jno
mov
dec
mov
movb
dec
jno
dec
pop
test
dec
dec
cmp
jbe
mov
dec
pushf
add
cld
mov
sti
sahf
xchg
push
xchg
jle
cmp
add
dec
mov
cmp
sub
in
sub
sub
add
or
cmp
cmpsl
mov
pop
cmp
gs
mov
mov
pop
push
movsl
inc
sub
pop
fdivr
nop
mull
ljmp
test
ljmp
jno
clc
push
fbstp
ja
cli
sub
std
sbb
ret
inc
push
sub
loopne
cmp
jmp
xor
clc
cs
xchg
enter
fsubrp
xor
and
mov
mov
leave
or
mov
and
iret
movsb
mov
shr
mov
push
and
loope
lods
inc
test
mov
fidivrs
adc
loopne
dec
stos
mov
sbb
shl
sbb
cmp
jns
addr16
xor
rol
fildll
pop
lds
xor
rcrb
lock
popa
push
fdivp
and
or
xor
jmp
stos
sub
and
dec
lret
jp
fsts
and
std
into
xchg
push
imul
or
pop
pop
fstpt
mov
nop
cmpsb
adc
fdiv
mov
loopne
jno
test
cwtl
mov
cmpb
lret
jmp
xor
mov
cltd
fstpt
fdivs
and
icebp
cmpsb
inc
inc
mov
cmp
enter
mov
push
xor
test
call
push
outsl
or
mov
jnp
out
dec
add
xchg
mov
setb
fbstp
movsb
mov
and
and
mov
aas
and
sti
jg
repz
insb
testb
aaa
sbb
or
aaa
into
mov
je
xor
xchg
mov
rolb
popa
and
shlb
sahf
xchg
inc
fdivrs
mov
mov
mov
xchg
push
iret
lds
mov
add
mov
cmp
push
add
in
inc
xlat
cmpsl
xchg
pop
sub
pop
aaa
lret
dec
loop
fsubrl
jnp
out
dec
in
repnz
mov
test
jecxz
loope
pop
sahf
mov
call
mov
xchg
inc
pop
inc
movsl
add
or
inc
movsl
sub
xlat
int
add
clc
dec
pop
fimull
cmpsb
jns
add
mov
mov
outsl
xchg
cmpsb
aaa
adc
add
loope
jmp
adc
imul
mov
jns
into
movups
add
cs
or
sarb
push
adc
xchg
dec
lcall
jbe
lods
aam
ficoms
test
inc
pop
mov
jb
jmp
add
es
sbb
pop
popf
loop
inc
int3
movsb
xchg
leave
out
dec
mov
and
popa
test
sti
test
popa
ss
sbb
jp
pop
arpl
xor
mov
cwtl
imul
or
ds
xor
cmpsb
std
pop
sub
mov
sbb
das
jae
ror
popf
xor
in
pop
pop
lcall
lock
lods
inc
bound
jo
push
dec
push
jmp
cmp
and
insb
lcall
cmp
mov
jmp
push
test
mov
inc
cltd
shr
pop
out
inc
adc
es
lds
call
fdivrs
mov
repnz
movb
adc
pop
or
jp
bound
and
jge
mov
enter
lret
jo
jge
xorb
pop
addr16
cltd
jl
cmp
test
cs
push
pop
push
push
das
mov
sti
fisttps
in
cmp
test
xor
xchg
pusha
fs
mov
cmp
xchg
push
lock
xor
cwtl
adc
in
mov
mov
test
or
sbb
adc
pop
int
repz
popa
mov
loop
das
shlb
in
jns
aaa
ret
insb
mov
out
out
addr16
movsb
xchg
popa
sub
dec
push
jl
es
push
leave
shrl
lods
xor
mov
pop
xor
xor
xor
jmp
sbb
cld
rcrb
flds
subb
xor
cmp
bound
cltd
jg
xor
lret
adc
cmc
popa
ror
xchg
cmpsl
xlat
adc
dec
push
addr16
stc
xor
test
aad
hlt
xchg
inc
test
lahf
jae
jecxz
jle
aad
sbb
mov
xchg
adcl
push
repnz
xor
jge
stc
jne
movsb
cmp
inc
xlat
mov
push
cld
aaa
mov
adc
jnp
pop
mov
fldcw
out
mov
xchg
cld
jns
add
xchg
mov
adc
pop
xchg
js
sbb
sbb
inc
aaa
aam
idivb
push
test
lret
pop
xsha1
cmpsb
dec
dec
sub
dec
ds
dec
jl
jb
pushf
movsb
out
mov
xor
mov
jne
js
js
ja
or
call
lret
mov
jmp
adc
dec
std
cmpsl
test
jp
inc
mov
jge
lfs
jge
int
cmpsb
adc
push
aam
push
mov
mov
addr16
sbbl
add
xchg
xchg
sub
dec
in
lcall
and
xor
inc
xchg
mov
pop
sub
inc
push
xchg
or
push
loope
test
mov
lret
push
sub
loope
dec
out
stos
cmp
ljmp
dec
and
test
jle
xchg
lahf
jmpw
push
insl
push
in
mov
or
pop
insb
cmpsl
fwait
sti
mov
jg
dec
adcb
mov
xor
mov
jmp
inc
sbb
insb
sahf
popf
std
xchg
gs
jo
xchg
mov
loop
lods
mov
push
inc
sti
inc
fwait
pushf
xor
popf
jb
les
push
rorl
and
hlt
rorl
fidivs
pop
scas
orl
cmp
xor
push
xchg
lock
mov
mov
ljmp
adcl
pop
ds
sahf
jne
and
xchg
push
push
imul
xchg
inc
xchg
movb
lea
aas
or
addl
imul
data16
in
xor
mov
xchg
push
xchg
sub
enter
pop
or
pop
insl
cs
inc
sub
add
and
cld
shlb
lret
inc
ljmp
inc
fcmove
add
stos
mov
andl
jne
cs
iret
xor
notl
adc
pop
or
and
ror
ljmp
mov
mov
dec
mov
aas
xor
push
ret
jnp
add
inc
inc
scas
cmp
xor
in
arpl
mov
pop
arpl
mov
fisubrl
xchg
jmp
loop
cmp
movsl
imul
jl
sub
and
mov
adcl
mov
les
ss
pop
lahf
mov
mov
jmp
ror
mov
rcll
repnz
js
pop
and
xchg
in
xchg
cmp
cwtl
inc
push
xor
push
mov
sub
inc
jecxz
mov
out
jae
hlt
outsb
or
test
mov
outsl
stc
test
gs
es
adc
xchg
xchg
pop
hlt
cmc
fmul
scas
es
mov
add
or
je
and
add
ja
shlb
sahf
sbb
out
xchg
ljmp
es
dec
xor
push
jne
jecxz
cmpsb
cmp
sub
lods
xchg
pop
inc
mov
mov
add
inc
push
adc
xor
enter
loop
xchg
out
imul
insb
ljmp
popf
push
adc
xchg
jge
fildll
pop
sbb
jecxz
cli
shll
inc
mov
dec
and
fidivl
sub
cmp
fisttps
sbb
fsubrs
test
mov
push
cld
mov
and
xchg
stos
es
fmul
sbb
push
push
test
outsl
sub
mov
cs
mov
dec
fsts
inc
in
xor
jae
push
cmp
popf
cmpsb
mov
pusha
ljmp
stos
mov
rcrb
or
jbe
mov
add
and
mov
and
hlt
jg
or
inc
cmp
push
or
or
inc
push
mov
andl
jp
mov
mov
jmp
iret
lret
mov
xchg
cmc
test
cmp
sti
insl
and
mov
push
mov
pop
out
pop
mov
or
sbb
dec
int
jnp
xchg
ja
pop
ret
push
mov
adc
out
ds
xchg
adc
adc
pop
outsb
push
movsb
push
sub
data16
mov
outsb
push
sahf
push
inc
push
xor
pushf
push
clc
push
xchg
dec
pop
cltd
inc
lods
add
scas
cmp
leave
loop
out
popa
inc
inc
loope
aas
push
mov
sub
jl
pop
or
fnstsw
or
bndstx
inc
cmp
lods
pop
xor
rcrl
ror
cmp
push
mov
ret
mov
lods
sbb
test
cmp
mov
pop
mov
inc
sbb
cmp
add
pop
push
cmp
adc
adc
rclb
push
mov
add
jno
push
mov
cmp
and
push
cltd
insl
loopne
cltd
mov
fcmovnb
movl
fstps
sub
sub
jl
push
mov
pop
movlps
mov
pop
mov
lock
stos
pop
or
jg
mov
test
divl
adc
push
fistpl
mov
push
addr16
pop
popa
mulb
mov
push
and
pop
mov
outsb
mulb
lea
stos
ds
movsb
ds
frstor
push
pop
outsl
int3
lret
stc
adc
lods
add
add
dec
mov
jno
loop
cmp
std
jle
adc
push
icebp
lods
pop
out
add
push
cmc
xchg
cmp
cwtl
jecxz
roll
mov
cmc
call
cmp
push
push
sub
or
dec
test
dec
sub
cmp
cmp
andl
scas
out
mov
jb
hlt
mov
shlb
or
adc
mov
push
es
jecxz
rolb
bound
inc
repnz
clc
outsl
pop
rcrb
xor
push
loop
fstps
mov
xor
fisubl
cld
pop
sub
dec
sbb
adc
mov
icebp
insb
shlb
xor
mov
mov
sbb
pop
mov
xor
push
and
dec
ret
gs
ds
shlb
xor
or
xor
push
mov
orb
shrb
rcll
cmpsl
sbb
and
inc
push
and
stos
movsl
sahf
lods
rolb
mov
add
lds
addr16
fld
mov
push
add
push
xchg
stos
mov
outsl
stos
mov
lock
mov
test
add
mov
scas
adc
xor
daa
lock
cmp
add
pop
push
gs
xchg
push
std
dec
loop
mov
mov
push
and
dec
push
sbbl
aam
cs
pop
cwtl
insb
push
cs
xlat
lds
push
mov
imul
insb
shrb
repz
testl
push
push
lods
scas
pop
into
mov
mov
jbe
or
ds
push
lds
xor
lahf
ss
sub
sbb
cmp
mov
xlat
cmp
movsl
dec
xor
push
mov
adc
pop
leave
test
and
jo
out
jns
ds
xor
pusha
addr16
jb
sub
or
cmpl
mov
cs
or
mov
jbe
fcmovnbe
jo
mov
imul
incl
pusha
add
pop
ret
add
push
mov
add
and
mov
sub
jle
leave
imul
iret
lret
mov
sub
push
clc
stc
xchg
mov
add
pop
mov
fiadds
inc
test
fidivs
ficompl
in
mov
int
push
mov
mov
test
nop
mov
xor
sub
leave
mov
pop
mov
xchg
cmpl
mov
and
ds
inc
addr16
fsub
jb
and
and
or
test
add
add
es
adc
or
dec
mov
cmp
movsb
sbb
mov
jnp
in
hlt
cmpsb
stc
test
sub
mov
movsl
sti
xchg
out
test
pop
scas
and
or
or
push
sbb
pop
leave
jl
sbb
dec
test
xchg
jo
js
jnp
cmc
xchg
mov
xor
nop
inc
movsb
inc
gs
xor
popa
dec
pusha
xchg
jo
dec
mov
sub
mov
scas
add
cs
jle
aad
mov
es
jo
push
scas
add
jmp
xchg
in
jb
or
inc
dec
inc
inc
lods
pushf
and
fdivrl
into
subl
sub
adc
mov
hlt
sahf
fstpl
shl
stc
movsl
mov
or
xchg
in
jne
roll
push
inc
inc
ret
cltd
and
adc
push
or
jg
cmp
cmc
loopne
sub
mov
leave
and
push
je
xchg
jo
xor
pop
lock
jb
aaa
loop
addr16
mov
filds
test
jns
lock
mov
and
pop
fcoml
stos
dec
mov
sbb
jecxz
test
push
dec
fisttps
scas
data16
inc
jne
dec
incl
and
and
test
cs
jmp
sti
outsl
add
add
shlb
enter
mov
mov
mov
mov
fwait
into
adcl
bound
jg
mov
dec
ret
or
fsub
jnp
into
xchg
sub
xchg
xchg
add
cmpsb
push
fucom
xchg
fwait
jl
xchg
leave
hlt
and
lods
mov
sub
shlb
inc
jo
adc
xchg
iret
pushf
cli
add
pushf
gs
inc
adc
pop
or
pop
scas
adc
jne
bnd
or
mov
frstor
les
loope
aas
push
or
cmpsl
fwait
xchg
shlb
mov
ret
sub
mov
add
jl
std
mov
leave
das
jnp
movsb
push
icebp
mov
sub
js
xchg
mov
xchg
mov
int3
push
jge
adcb
scas
pop
cltd
sub
mov
sub
pop
inc
leave
pop
fidivrs
in
push
sub
ret
cli
or
xchg
ja
mov
dec
lock
sbb
xchg
int3
sbb
jns
cltd
or
mov
arpl
out
xchg
sub
push
sub
dec
das
cmp
lret
jnp
test
ja
adc
in
sbb
pop
sahf
jne
into
push
and
push
mov
sbb
push
mov
jecxz
jno
xchg
pop
mov
dec
nop
push
jl
scas
pop
sbb
cmpsb
addl
sub
jp
test
mov
push
push
cwtl
mov
push
sub
xchg
adc
mov
aam
leave
addr16
xor
pop
xchg
test
add
xor
cmc
cmpsl
cld
cmp
jb
andb
mov
scas
pop
mov
mov
push
mov
ds
xchg
shlb
int3
inc
mov
aaa
stc
xor
mulb
fcomps
mov
mov
ret
das
jp
aam
shrb
negb
adc
insb
pop
mov
test
loopne
test
pop
fistps
jecxz
stos
jecxz
faddl
leave
stc
js
out
fimuls
push
adc
hlt
outsl
xchg
adc
fists
pop
push
in
data16
xchg
pop
cmp
dec
add
pop
xchg
sub
add
mov
xlat
inc
mov
jp
and
repz
ss
int3
add
clc
jae
add
ficomps
popa
notl
mov
add
scas
mov
cmp
mov
cld
lret
movsl
xor
adc
pop
sbb
mov
and
test
bound
and
mov
xchg
pushf
repz
push
ds
in
dec
mov
jo
out
dec
pop
fcmovb
jns
add
cltd
xor
sbb
inc
sbb
loopne
mov
pop
jp
hlt
out
jne
sub
cltd
jbe
pop
or
push
dec
jl
faddl
push
repnz
pop
inc
sbb
or
dec
add
rcrb
pop
scas
scas
push
stc
orl
dec
pop
cs
push
into
xor
aad
movsl
jo
dec
es
jge
in
xor
push
shll
orb
and
mov
mov
lock
inc
int3
je
jmp
push
inc
sarb
je
arpl
pushf
dec
dec
cld
test
sub
repnz
in
idivl
xor
scas
inc
push
cmp
jns
rep
xchg
jne
add
ja
movsl
data16
push
jp
out
xchg
push
mov
stc
xor
push
ficompl
lock
in
lret
fsts
rcrl
add
pop
cld
js
inc
mov
jmp
movsb
adc
daa
cmpsb
dec
movsl
pop
cwtl
push
mov
sub
xor
int
out
or
mov
nop
popf
ficoml
icebp
push
lret
outsl
cltd
and
pop
adc
nop
push
mov
andl
xor
test
lahf
out
jne
inc
mov
ljmp
add
xchg
fiaddl
lods
mov
testb
sub
push
int
cmp
arpl
jbe
or
lods
mov
lock
pop
jb
xor
inc
push
push
push
orl
xlat
cmc
test
push
test
sarl
push
and
push
xchg
rcrb
mov
loope
scas
adcl
rcl
loop
shlb
repnz
sub
outsb
adc
jg
arpl
lds
rolb
xor
pop
shr
outsl
aas
mov
or
inc
mov
pop
shrb
and
in
ja
icebp
test
or
enter
rolb
sahf
dec
pop
adc
pusha
fmul
xor
pop
cmp
bound
dec
mov
and
jle
test
xchg
cmpsl
inc
test
mov
ljmp
jecxz
shll
pusha
shl
out
add
push
mov
add
adc
mov
xlat
sbb
and
pop
xchg
das
pop
outsb
pusha
std
pop
cltd
rorl
loop
movsl
imul
cmp
push
lcall
sbb
lret
hlt
pop
xor
pop
cmp
cmpsb
dec
je
data16
cmp
aad
es
adc
aam
pop
addr16
aaa
cs
push
dec
cmp
mov
out
push
xor
hlt
mov
adc
gs
icebp
mov
stos
mov
sbb
sub
popa
push
mov
fcomi
mov
push
out
xchg
jnp
pop
push
imul
jns
test
jo
push
mov
lahf
dec
out
dec
aam
push
in
inc
push
jae
mov
mov
cwtl
scas
xor
or
or
or
inc
ds
movsb
jnp
scas
xor
daa
mov
xchg
sarl
cmpl
cmp
mov
bnd
nop
out
rorl
popf
sbb
mov
pop
js
ds
ds
es
push
ror
xor
inc
mov
fiadds
inc
or
mov
out
xor
push
mov
mov
stc
jbe
and
lods
sub
and
or
ss
test
test
mov
les
mov
jmp
into
add
xchg
pop
xor
jbe
mov
push
push
lods
call
test
insb
sar
or
pop
inc
fidivrs
mov
fwait
dec
lahf
int3
out
cli
or
pop
sub
mov
and
or
xor
cwtl
sub
add
rcl
das
inc
push
call
push
xor
sub
aaa
push
scas
dec
dec
dec
cmpsb
dec
sub
cmc
lods
xor
jp
lret
sub
popl
jmp
shrl
cmp
nop
test
int3
adc
rolb
cmp
jl
test
pop
add
mov
aad
dec
mov
ss
jp
stos
loop
push
jmp
std
inc
fwait
mov
cmc
dec
test
js
cmc
push
in
inc
js
mov
mov
xchg
out
push
adc
push
fldt
add
imul
dec
ret
loopne
push
push
pop
lahf
jg
scas
push
loopne
sub
pop
mov
aad
push
enter
fistps
xor
xchg
push
loopne
dec
push
mov
dec
dec
push
mov
sbb
fwait
data16
inc
xor
pop
add
andl
loopne
mov
pop
aas
or
ds
outsl
xlat
pop
testb
mov
fwait
cltd
pop
cwtl
xchg
pop
jp
ret
lahf
ss
movsb
int
and
and
mov
rep
inc
and
in
call
sub
add
cmp
push
andb
stc
loop
pop
jns
push
jmp
pop
dec
rorl
add
test
test
mov
adc
pop
push
xor
repz
lods
lods
cld
or
push
dec
out
stc
rcrb
je
sbb
adc
lahf
pand
addl
lahf
sbb
insl
sub
cmp
cmp
shlb
roll
mov
cmpsb
adc
negb
test
leave
jmp
pop
incl
or
mov
push
inc
cli
rclb
and
dec
aas
adc
je
dec
push
icebp
mov
data16
mov
pushf
scas
cli
mov
out
xchg
jno
shrb
mov
lock
lods
and
or
aas
shl
push
cmpsl
loop
pop
ja
mov
cwtl
in
mov
ret
stos
jne
fsubl
fnstenv
push
push
dec
in
mov
jb
sub
sti
mov
popa
fiadds
ss
cmpsl
aas
sub
cmp
std
into
test
je
jo
stos
xor
fsubl
addr16
push
and
shl
pop
inc
aad
iret
test
adc
bound
mov
xchg
push
or
cmp
mov
test
pop
in
lret
mov
mov
lret
mov
sbb
and
xchg
int3
test
icebp
aad
push
and
cmp
xchg
and
push
mov
std
add
rcrl
xchg
pop
addr16
out
pop
mov
mov
cmp
push
inc
push
xor
imul
or
cmp
data16
mov
popa
mov
lret
test
sub
das
mov
mov
pop
mov
jg
rolb
or
sub
adcl
jmp
cmp
jmp
je
push
sub
cmp
xchg
loop
decb
add
inc
dec
mov
es
jle
xor
imul
push
ret
cltd
xor
mov
push
xchg
outsb
pop
jns
rcrb
repnz
xchg
sub
sub
mov
sbb
test
cmc
es
push
xchg
and
mov
xchg
inc
jo
decb
scas
inc
inc
incl
in
fs
in
in
xchg
ret
stos
fcmovnbe
sbb
movsb
adc
sbb
or
pop
jb
testl
and
scas
dec
aam
pop
xor
cmc
shrb
pusha
ret
lret
lock
ss
jo
push
push
pusha
cmp
leave
gs
jp
or
pop
add
loope
cmp
xchg
mov
lea
not
insl
add
gs
adc
adc
sbb
bnd
cmp
xchg
ret
cmpsb
cmp
stos
pop
les
leave
shll
sti
mov
in
scas
hlt
addr16
push
lret
pop
loop
out
popa
sarl
push
or
cmp
mov
add
mov
pop
loop
pop
pop
je
sbb
xlat
dec
xor
sub
jg
pop
dec
mov
or
aaa
pop
shrb
fldl
fiaddl
pop
xchg
sub
inc
sub
call
sbb
pop
mov
jbe
pop
das
xchg
xchg
push
adc
and
test
cmpsl
cld
sbb
mov
mov
insb
cwtl
iret
pop
into
clc
push
sbb
outsb
or
cmp
xor
cmp
leave
icebp
xchg
scas
jbe
sbb
or
xchg
ljmp
push
jg
mov
xchg
mov
sarl
fistpl
dec
or
add
inc
repnz
xor
mov
xchg
mov
push
push
pushf
or
pop
cmp
out
dec
add
pusha
xchg
jns
inc
pop
jmp
popf
insl
popf
stc
ret
cmpl
jg
test
mov
dec
mov
lcall
add
cmp
adc
rorl
xchg
sub
out
pop
mov
inc
ret
dec
mov
std
pop
mov
jno
dec
xchg
xchg
lret
sar
mov
sub
mov
fldt
je
jge
push
arpl
fucomp
dec
sub
mov
repz
movsb
xchg
loopne
ss
mov
xchg
into
lcall
sub
lret
xor
sub
popf
cmp
daa
jl
fwait
lods
mov
aad
jle
inc
mov
mov
xchg
push
shr
push
out
lahf
pop
inc
pop
nop
mov
and
das
js
inc
and
lea
fnstcw
xor
adc
mov
cmp
test
mov
jno
sbb
cmpl
sbb
into
add
shrl
or
sbb
rclb
dec
mov
or
cmp
imul
dec
lods
push
sub
leave
ror
fidivl
adc
pop
cs
and
push
mov
ficomps
push
and
jp
mov
pop
dec
loopne
jle
lea
push
cli
or
and
fs
push
movsb
pop
cmp
test
sub
pop
mov
dec
pop
jge
and
xchg
fisubs
test
es
fcompl
and
dec
mov
jp
stos
pop
in
ret
mov
jb
out
pusha
push
jb
cmpsb
cmp
mov
ret
adc
pop
add
and
stos
rorl
dec
inc
dec
adc
xchg
mov
ret
sbb
shr
xchg
xor
dec
jg
sub
cmp
aad
pop
aam
xor
adc
xchg
lds
mov
vsqrtpd
jp
push
dec
lret
mov
jmp
mov
inc
xchg
ljmp
out
test
enter
add
mov
push
movsb
out
push
jae
mov
sbb
shr
arpl
cwtl
scas
fdivr
daa
inc
cs
cld
jnp
pop
sbbl
push
sbb
jo
jno
adc
sti
adc
and
jb
adc
lahf
das
pop
or
add
dec
sub
cmpsl
aaa
mov
repz
push
push
mov
xlat
loop
xchg
lods
xor
dec
xchg
ret
or
cmp
adc
add
jo
xchg
fimull
mov
jl
rcrl
je
and
mov
add
les
sbb
or
sub
jp
or
fcmovbe
imul
sub
movsl
and
pop
sbb
imul
xchg
pop
sub
xchg
notl
pop
outsb
mov
bound
ljmp
cs
inc
fsubrs
stos
hlt
adcl
jb
loope
and
shrl
sub
lret
andb
xchg
scas
inc
stos
popa
sbb
outsl
mov
nop
adcb
xor
fildll
repnz
sub
and
sub
lods
and
and
jg
cmp
cmp
pop
lcall
xchg
mov
jns
mov
and
xor
mov
fistpll
loopne
fcmovbe
sub
sbb
mov
dec
cmpsb
add
mov
aas
sbb
mov
add
test
cmp
cli
mov
rcrl
xchg
dec
mov
mul
mov
xchg
xorb
movsb
dec
add
shlb
adc
lcall
push
jmp
dec
jae
mov
imul
xchg
subb
jg
das
outsb
lds
repnz
add
dec
adc
test
lcall
lahf
subb
mov
je
push
ljmp
pop
cld
or
sub
lahf
push
and
mov
cmp
mov
xchg
data16
mov
mov
sti
adc
pusha
gs
movsl
pop
test
mov
cmpsb
sbb
mov
mov
mov
loopne
in
in
dec
push
shrb
cmp
xor
xchg
add
cltd
push
sbb
and
loop
mov
mov
imull
jle
mov
dec
mov
fnstcw
pop
outsb
dec
inc
loopne
cmp
mov
movsl
mov
pop
mov
sub
dec
dec
aad
es
adc
or
in
xor
fldenv
mov
dec
rclb
add
ret
jb
jb
pop
into
insb
adc
stos
sub
jne
add
shlb
inc
aad
dec
lahf
or
scas
out
mov
jmp
xor
shll
or
sub
dec
js
out
pop
aas
dec
hlt
dec
push
in
lods
or
daa
mov
xor
fdivl
bound
mov
jb
test
movsl
decl
lret
push
fnstenv
cmc
mov
xor
xchg
or
sub
dec
bound
xchg
aaa
jbe
or
in
popf
mov
inc
dec
mov
cmpb
adc
repnz
mov
add
inc
test
and
fbstp
or
hlt
xchg
std
inc
hlt
aas
xor
dec
shlb
into
in
mov
pop
cmpsl
cmp
mov
test
adc
subb
jmp
dec
xchg
push
das
or
out
fadds
mov
stos
mov
mov
ret
xchg
rep
lods
repz
sbb
lds
pop
pushf
pop
jnp
add
xorl
scas
xchg
jle
pop
stc
fstpt
add
sub
and
test
sub
xchg
data16
jae
cltd
cmpsl
push
pop
fbstp
mov
dec
filds
int
clc
cmpsb
pusha
jecxz
sbb
push
and
mov
mov
add
mov
outsl
in
sub
in
inc
pusha
jecxz
mov
subl
sbb
repz
inc
pop
sbb
cmp
hlt
outsl
sahf
push
sarb
incl
dec
mov
outsb
adc
lods
das
cmc
pusha
pop
repnz
cmc
sub
mov
cmp
sub
popf
mov
aaa
xchg
fnstenv
test
pop
mov
outsl
jl
pop
add
mov
movsb
xchg
mov
xor
and
push
mov
mov
xor
or
dec
icebp
xchg
sbbl
mov
inc
inc
jno
loop
add
or
outsb
push
pushf
das
jge
insl
xor
mov
test
xchg
es
fstl
xor
into
pop
ret
push
in
je
or
sub
xor
add
ret
push
lret
inc
popf
jno
iret
pop
mov
xor
jbe
scas
popa
adc
int3
aas
mov
rcr
xchg
into
insl
loop
loop
jge
insl
add
mov
cmpsb
scas
sub
lds
push
in
popa
pop
out
inc
pop
inc
push
sbb
in
aam
add
mov
cmpsl
jp
lcall
jmp
pusha
testl
jle
test
sub
dec
daa
pushf
ret
dec
and
mov
dec
repnz
fisubrs
scas
inc
push
sbbl
dec
add
xor
xchg
pushf
cmpsb
xchg
add
push
mov
sbb
mov
inc
add
pusha
int
sub
pop
xor
pop
sti
xchg
cmp
inc
cmpsl
ss
jb
mov
lret
xlat
or
sbb
push
mov
jbe
mov
push
rorl
ds
pop
rol
and
shll
push
push
pop
scas
movsl
sbb
push
cmpl
pop
sub
mov
adc
idivl
divb
jo
cmp
pop
dec
les
mov
cmp
cmp
and
lods
dec
orb
pop
rorb
std
xchg
dec
jnp
jno
xor
inc
call
jl
sub
or
enter
repnz
daa
mov
xchg
outsl
test
ljmp
cmp
bound
adc
pop
mov
mov
jecxz
push
mov
pop
rol
xor
pusha
rcrl
sub
aaa
sub
out
orl
loop
lods
icebp
pop
push
mov
movsb
dec
mov
xor
adc
adc
mov
pop
or
test
xor
jbe
xor
in
or
fucomi
lock
js
lahf
ss
test
sbb
push
mov
mov
sub
dec
pop
sbb
jle
mov
or
imul
or
mov
mov
jns
subl
outsb
jl
sbb
shrl
in
xchg
fsubs
pop
mov
push
ret
jle
pop
sti
xchg
sub
shll
ja
lods
xchg
sub
add
jns
sbb
out
pusha
scas
xchg
jns
or
mov
mov
or
mov
mov
std
cmpsl
clc
cmp
inc
in
pop
insb
sbb
repnz
push
jns
pushf
mov
adc
dec
push
ds
in
insb
inc
aas
or
mov
adcl
std
stc
jmp
loope
cltd
lcall
sbb
fucomp
cs
mov
sbb
lods
xchg
add
into
jne
sub
sbb
ss
xchg
clc
lcall
test
mov
add
add
xchg
js
adc
mov
hlt
cmp
inc
clc
fdiv
test
jge
mov
out
lret
cmpsb
nop
pop
mov
pushf
inc
or
addb
pushf
hlt
fstpt
mov
lret
push
sarl
push
roll
inc
outsb
test
sbb
popl
idivl
jbe
adc
mov
push
cmp
aaa
ret
lret
xor
jno
mov
stc
cmp
insl
daa
pop
mov
mov
je
popf
push
iret
mov
mov
scas
mov
aam
cmpsl
sub
leave
push
stos
shl
stos
dec
dec
ja
ja
gs
pusha
sbb
pop
pushf
mov
mov
es
das
mov
mov
fimuls
pop
inc
cmp
cli
jns
inc
xchg
insb
sti
pop
jp
jns
iret
fisttpl
cmpsl
xchg
add
jae
and
or
test
mov
leave
sub
adc
push
dec
dec
in
in
cwtl
xchg
xchg
xchg
push
mov
mov
dec
imul
cltd
mov
paddusb
subb
pop
add
ret
loope
push
mov
mov
test
push
popl
pop
repz
pop
les
sub
inc
int
mov
mov
pop
jp
fsubrl
rclb
push
mov
scas
and
mov
jae
ljmp
adc
mov
stos
cmp
fiaddl
arpl
aas
fistpl
or
int
jmp
pop
xchg
push
xorl
push
daa
adc
adc
mov
xchg
mov
inc
push
pusha
outsb
mov
mov
push
or
mov
push
popf
repnz
cmpsl
jb
jle
aaa
push
std
mov
flds
in
addr16
enter
cld
xchg
cmp
xchg
cltd
jne
test
inc
jae
daa
cmp
ljmp
pop
out
or
imul
xchg
dec
data16
mov
pop
outsb
cmpsl
xchg
loope
fprem1
add
xchg
xor
daa
lcall
cwtl
push
cmp
in
rcl
les
mov
nop
sti
mov
aam
or
jbe
lods
in
shlb
movsb
sbb
xchg
nop
push
lods
mov
outsl
icebp
insb
sbb
add
out
test
xchg
sbb
lods
cmp
xchg
notb
or
cmc
sahf
decl
mov
cmp
mov
jg
push
mov
aas
lcall
out
push
fdivrl
jbe
cmp
adc
and
cmp
mov
popf
fidivrs
in
dec
addr16
push
mov
outsl
call
out
lahf
daa
add
in
stos
fsub
and
daa
out
mov
dec
mov
push
cmpsl
int3
out
cltd
stos
call
mov
mov
and
scas
in
in
fsubrp
mov
mov
inc
push
dec
cmp
jbe
sub
rcl
pushf
jmp
dec
adc
ds
fidivl
cs
lea
mov
int3
sbb
gs
push
add
inc
js
ja
fdivrs
sbb
enter
jmp
dec
scas
jmp
in
mov
mov
rcl
push
ret
pop
add
jle
popa
or
inc
push
xchg
push
mov
lock
addr16
pop
lret
mov
push
sbb
ss
data16
out
cs
aas
stos
mov
fsubl
fnstsw
idiv
test
sbb
movsb
lret
and
xchg
stos
add
mov
add
movsl
lds
fdivs
and
mov
out
xor
pop
adc
movsl
cmpsl
push
addb
out
sti
jae
mov
adc
jns
sbb
adc
cmp
push
scas
repz
push
stc
and
pop
dec
stos
lret
xor
mov
mov
and
xor
mov
test
out
aam
jo
lods
add
mov
mov
adc
mov
pop
andb
pop
adc
rclb
ds
test
lods
cld
xor
js
cld
adc
out
dec
sub
pop
adc
ret
ja
pop
out
dec
mov
xlat
adc
inc
test
popf
add
and
loop
xchg
add
pop
je
insb
mov
sbb
aaa
or
pop
add
cmp
mov
daa
cmp
pop
push
test
in
xchg
insb
idiv
xchg
sub
xchg
repz
dec
push
out
jmp
shr
aas
iret
data16
dec
pop
pop
cmp
mov
aad
jae
pop
adc
lds
data16
pushf
fs
imul
bound
sub
cmp
in
icebp
xchg
cmp
inc
mov
pop
inc
bound
or
or
sarb
loopne
push
mov
xchg
inc
pushl
aas
dec
inc
stos
into
mov
cmp
cltd
mov
into
add
inc
in
fbstp
das
mov
mov
mov
insb
les
mov
ret
pop
mov
jo
das
rcl
xor
add
in
sub
icebp
repnz
inc
out
bound
mov
inc
lret
pop
fnstsw
add
cli
pop
or
sub
push
cmpsb
xor
inc
adc
push
fdiv
mov
adc
jne
push
insl
fst
jl
mov
mov
pop
imul
mov
pushl
gs
sub
in
arpl
adc
and
cmc
mov
aam
mov
test
ret
adc
pushl
fs
add
mov
jmp
add
mov
aad
inc
fs
jns,pn
pusha
adc
and
out
out
inc
mov
jmp
outsb
pop
lret
shlb
dec
xor
sarl
mov
push
leave
loope
mov
push
jnp
dec
adc
stos
dec
pop
mov
cltd
das
divl
push
das
ret
shlb
xchg
into
pop
pop
pop
aad
xchg
in
test
test
xchg
xchg
pop
lock
or
jne
add
pop
add
push
sub
pop
jno
cmp
xor
mov
lods
frstor
mov
pop
leave
push
test
sbb
stos
jbe
lods
mov
push
cmp
xchg
inc
sub
dec
mov
adcl
hlt
xchg
clc
mov
stos
mov
scas
push
scas
push
add
push
or
ljmp
mov
sbb
mov
shrb
pop
sahf
mov
mov
daa
mov
sbb
out
xchg
jle
inc
popf
insb
lods
popf
fdivs
movsl
mov
sub
xlat
sahf
and
add
xchg
iret
cmpsb
cmp
les
mov
dec
jne
clc
and
daa
mov
lods
sub
call
call
mov
xor
push
dec
xor
aam
fisubl
daa
in
mov
arpl
loopne
repz
test
push
nop
and
mov
fisubrs
loopne
fnstenv
pop
imul
enter
shr
and
sarl
scas
decb
sub
out
insb
adc
and
sbb
repnz
lods
aas
imul
je
mov
lret
shrl
sbbb
test
cmpsl
mov
jg
mov
xor
hlt
imul
push
pop
mov
mov
pop
fcompl
mov
pop
jl
lret
push
mov
adc
stos
sbb
aam
cmp
cwtl
inc
inc
and
insb
add
addr16
mov
xchg
fidivl
enter
outsl
insl
sub
ds
jb
inc
pop
mov
out
adc
mov
add
ja
mov
xchg
lret
hlt
cmp
out
stos
in
ljmp
adc
or
in
ljmp
dec
mov
mov
popf
sarb
fdivl
lret
mov
insl
add
in
inc
xor
mov
inc
lret
jns
dec
mov
rclb
adc
icebp
movsl
jl
inc
lea
mov
lock
mov
jae
ret
push
fwait
lods
ds
inc
out
inc
test
mov
xchg
xor
jnp
push
rorl
push
int
fs
jge
pop
add
in
sbb
fcmovnu
popa
add
insb
lret
test
pop
mov
jl
mov
addr16
mov
cltd
test
lods
ret
adc
pop
js
bound
movsl
mov
push
pop
mov
stos
fisubrs
or
clc
insb
or
adc
pop
mov
and
dec
cwtl
das
inc
adc
jp
mov
std
dec
mov
outsl
movsl
sti
in
xor
mov
mov
bound
push
or
icebp
cwtl
xor
jl
loopne
mov
cltd
not
jns
mov
sbb
push
xor
faddl
jo
push
stos
xorl
or
push
push
faddl
shr
sub
xor
jg
std
mov
stos
rorl
xor
xor
push
inc
data16
sarb
in
sub
pop
xchg
cmp
test
push
xchg
clc
or
std
cld
and
xlat
inc
lods
or
arpl
sbb
adc
ja
scas
sub
adc
fcomps
dec
icebp
dec
in
outsl
push
fidivrs
cmp
or
out
jbe
fsubl
cmp
nop
or
fbstp
stos
push
jmp
jne
pop
insb
lods
loopne
jecxz
or
xor
cmp
cmp
insb
ds
xchg
sete
out
ds
ja
ss
repz
aaa
test
sbb
js
fcomps
push
ljmp
jno
dec
xor
pop
dec
daa
or
aam
aad
sub
mov
test
mov
mov
jg
sub
pop
cmpsb
xchg
jge
insl
cwtl
adc
fisttps
push
je
lods
orl
int3
jae
mov
add
dec
fstpt
sub
mov
sub
push
imul
ret
es
out
lds
rolb
sbb
and
psubsw
mov
fcomi
int
and
push
lods
out
das
addr16
fnstenv
aad
stc
or
xorb
mov
imul
iret
mov
or
out
mov
test
lea
neg
push
mov
push
inc
inc
mov
loopnew
inc
fdivrl
scas
inc
ja
stos
or
iret
mov
and
aad
xchg
or
movsb
xchg
lret
jp
add
out
inc
pop
add
out
notl
into
mov
fs
add
push
mov
stc
test
pop
push
hlt
adc
pop
and
sti
ret
aam
add
mov
cmpsb
cmpsb
into
and
lds
jb
sbbl
int
or
mov
int
sub
pop
cmc
pusha
fsubrl
stos
dec
jp
inc
insb
mov
out
inc
and
inc
xlat
xor
mov
xor
mov
xchg
or
dec
adc
in
lea
jns
cmp
jne
test
stos
imul
shlb
push
fnstenv
xlat
xor
dec
pop
sarl
stc
mov
xchg
dec
pusha
lea
mov
or
imul
int
mov
fldcw
add
data16
xchg
adc
in
hlt
js
mov
dec
mov
cltd
in
mov
scas
loop
loopne
adc
clc
adc
imul
add
dec
inc
xor
in
in
mov
xor
ret
sahf
cwtl
out
add
add
scas
add
addr16
lods
orl
or
jmp
cmpsb
out
mov
test
sarb
enter
sub
adc
mov
dec
pop
sub
cltd
push
mov
adc
xchg
xchg
outsb
ljmp
in
inc
test
pusha
aaa
das
aad
leave
ds
lret
sbb
in
test
imul
dec
push
add
add
jno
pop
sub
add
fistpl
dec
das
lock
lods
push
xchg
sbb
aaa
mov
inc
and
mov
cmpsb
jnp
mov
sarl
stos
cltd
cmp
adc
pop
scas
cmc
pop
jb
vmovsldup
movsb
repnz
sti
out
add
outsb
jle
pop
adc
add
push
push
in
cli
add
cmp
xchg
out
sbb
loop
push
jmp
call
enter
mov
adc
mov
push
inc
push
sti
mov
es
adc
int
lods
dec
sti
stos
aas
push
lcall
arpl
adc
shr
ss
push
push
loop
mov
sti
cmp
cmp
xlat
dec
mov
hlt
and
xchg
push
cmp
mov
or
mov
cmp
adc
dec
sub
cltd
mov
and
xor
ficomps
in
push
dec
filds
cmp
fmuls
push
fidivl
shufps
sbb
jle
loopne
in
sbb
or
inc
stos
mov
sbb
mov
lret
and
mov
push
lcall
mov
imul
push
xor
and
adc
in
int3
xor
add
xchg
mov
daa
fisubrs
into
cmpsl
xchg
ret
jmp
xchg
mov
clc
xchg
adc
repnz
shrb
mull
inc
shll
dec
popf
sbb
les
jl
mov
adc
and
test
cld
xchg
dec
sbb
jl
jno
mov
adc
push
mov
cmp
je
xchg
dec
lock
aad
jae
popa
sub
enter
xor
sarb
test
jo
lds
jecxz
mov
xor
push
enter
sbb
insl
fiadds
bound
mov
ja
fbld
scas
cmpsb
cld
push
sahf
push
out
shlb
jne
jo
dec
add
push
jl
orb
out
lds
add
xor
mov
push
sti
stc
pop
jno
subl
js
test
inc
loope
add
mov
insb
stos
adc
arpl
adc
shrl
je
sarl
movsw
in
test
outsl
inc
frstor
pop
jnp
lods
das
xor
and
inc
xchg
cmpsb
push
sahf
adc
inc
sbb
push
jne
mov
inc
lods
pop
std
rcrl
fimuls
div
ljmp
xor
mov
pop
mov
xlat
outsb
pushf
lea
testl
int
sub
pop
testl
jle
test
test
sti
sbb
aas
iret
cmc
out
push
add
jb
inc
popf
xchg
xor
sti
xor
int3
push
stc
bound
mov
sub
stos
mov
mov
push
xchg
push
mov
js
mov
jmp
inc
fistpll
rclb
push
mov
mov
aad
dec
fwait
lea
fdivrs
cli
adc
pop
jno
shr
xor
dec
std
out
mov
in
ljmp
jmp
out
push
jno
jae
lock
jmp
or
insl
xor
fs
iret
scas
xor
mov
add
inc
jmp
xchg
into
daa
pop
repnz
roll
xchg
add
jae
shl
xchg
dec
mov
leave
mov
data16
ja
popa
dec
out
sub
jae
into
and
fidivl
inc
mov
jne
cmp
addb
in
es
nop
push
pop
jo
shlb
push
ret
lods
and
xor
lahf
ja
repz
pusha
pop
ret
xchg
pop
and
pop
repnz
ficoms
jns
adc
inc
inc
ljmp
aad
aas
dec
or
daa
pop
fwait
or
jg
dec
in
dec
pop
xor
lret
and
in
jo
test
lods
je
test
jle
dec
mov
pop
push
outsl
cmpsl
arpl
mov
les
cmpsl
inc
testl
xor
pop
ficompl
cld
push
and
push
sub
ss
test
mov
mov
std
ret
or
push
push
push
cwtl
and
add
cmp
outsl
lock
sub
and
and
fbstp
mov
out
pop
jns
xlat
inc
sahf
mov
icebp
jnp
es
test
rclb
sbb
jo
cld
negb
dec
daa
out
or
add
test
push
push
arpl
int
xor
mov
ret
push
push
or
mov
adc
xor
aad
cld
inc
pop
mov
push
mov
dec
pop
sub
fidivrl
repnz
and
pop
mov
sub
ds
out
push
push
inc
mov
outsb
mov
adc
outsb
repz
sub
lret
sbb
mov
mov
popa
clc
aad
push
aas
fcompl
jno
std
or
lea
mov
mov
aam
pop
jo
mov
jp
sbb
xchg
cmp
push
or
or
cmc
cmc
jnp
lret
lods
adc
aas
int
dec
mov
outsl
enter
pop
test
push
push
mov
aas
jb
cmp
xchg
pop
les
or
xchg
mov
daa
pusha
mov
das
ret
xor
cli
xor
and
jl
cmp
sub
push
stos
stc
or
jge
xchg
out
dec
mov
popa
xchg
jb
ss
rcll
xor
scas
inc
icebp
adc
inc
push
data16
test
or
cmp
loopne
jbe
jg
lea
sbbl
mov
mov
lahf
popa
jbe
gs
gs
dec
repnz
adcl
mov
inc
push
mov
arpl
out
mov
jns
pop
mov
push
int3
decl
shrl
inc
xor
add
leave
pop
in
add
in
fwait
addr16
mov
xor
imul
dec
loopne
dec
in
adc
mov
jne
dec
xor
dec
fisttps
aad
out
sub
ficoms
mov
aam
fnsave
dec
push
rep
stc
cli
test
inc
decl
out
pop
test
addps
cmp
and
cmc
ds
push
enter
in
xor
fimuls
mov
push
aaa
aaa
pop
xchg
ret
pop
xor
cmp
pop
cmpsb
mov
cmp
inc
in
je
mov
test
push
jns
xchg
push
jne
push
fs
inc
mov
lea
push
add
scas
mov
xor
sahf
mov
dec
adc
shl
sti
stos
or
iret
add
and
push
mov
push
jg
out
sti
push
mov
mov
xor
cli
ret
lret
mov
pop
loopne
adc
imul
stos
xor
adc
cmp
pop
orl
aad
loope
testb
push
push
lods
dec
std
dec
lcall
test
push
or
jae
scas
in
dec
das
inc
es
popa
lds
add
notl
lcall
and
aad
nop
push
aas
mov
inc
mov
outsl
ret
and
icebp
add
ret
jmp
and
mov
mov
ficoml
clc
lahf
or
movsb
imul
push
dec
or
adc
push
inc
adc
aam
lock
mov
dec
pop
dec
xor
fistps
std
dec
lcall
inc
lods
aaa
popf
mov
adc
nop
adcl
testl
xor
imul
adc
pop
fwait
xchg
das
movsb
mov
pop
cs
test
push
ljmp
mov
call
aaa
into
ret
adc
and
pop
scas
jno
jne
out
movsl
test
add
mov
push
cmp
ja
push
jbe
pop
cmc
cltd
mov
dec
mov
pop
call
cmp
sbb
stos
aam
push
push
mov
das
gs
adc
stos
outsl
loop
aaa
loopne
arpl
fs
jge
cmp
shrl
andl
mov
sbb
dec
fwait
cmpsl
je
popa
mov
arpl
sub
cmp
mov
mov
rcrl
adc
dec
cmp
scas
fldenv
repz
mov
aam
cmp
push
daa
jmp
jb
or
push
cmp
std
jmp
scas
mov
mov
subb
icebp
sbb
pop
xor
cmp
enter
inc
mov
out
xchg
outsl
cli
inc
std
or
pusha
ficompl
mov
test
mov
sub
sbb
pop
lcall
in
add
fidivs
orb
rcll
jle
test
test
adc
push
imul
adc
out
shl
mov
das
fidivl
or
shll
inc
mov
or
and
inc
pop
and
push
and
inc
inc
cld
cmpsl
out
sub
lret
cmp
gs
scas
xchg
inc
fwait
xchg
pop
lods
and
sub
in
dec
dec
inc
popf
mov
add
fsub
and
push
add
mov
jno
sub
mov
orb
rcrl
fidivrl
repz
push
pop
movsb
rorb
adc
subl
inc
cmpsl
xor
scas
fnstsw
loopne
sub
inc
stos
inc
jae
mov
inc
or
adc
mov
sbb
add
sbb
jne
pop
imul
push
xchg
fstpt
aaa
xor
jno
sahf
addb
inc
divl
sbb
mov
ret
clc
stc
mov
push
add
mov
jnp
xchg
es
cmc
ret
cs
jne
lds
subb
mov
or
pop
movsb
cmp
lods
addb
pushf
cmp
int
jbe
and
inc
push
clc
or
mov
pop
adc
and
loopne
adc
lret
sub
fucomp
lret
jns
mov
shlb
sbb
sahf
dec
mov
out
push
in
das
les
xor
jb
inc
idivb
ja
leave
pop
pop
ret
sbb
arpl
out
mov
mov
mov
lret
out
mov
or
cwtl
rcr
mov
and
push
lea
push
test
iret
stos
jbe
jmp
inc
add
add
xchg
pop
mov
dec
cmp
mov
push
cmp
mov
and
mov
shl
push
movsb
fistps
and
cmpsl
ds
inc
roll
lock
jns
leave
sarb
and
xor
inc
in
lock
inc
rcr
lret
jne
call
mov
gs
arpl
and
ds
xor
sbb
loopne
jge
test
add
push
repz
test
cmp
xchg
xchg
pop
push
outsl
mov
sbb
jb
pop
mov
dec
fbstp
mov
shl
jmp
push
jmp
icebp
cmpsl
jno
fdivrs
iret
cmp
xor
mov
xchg
aaa
sbb
xchg
mov
push
lods
stos
jmp
cmc
loope
sub
inc
push
sbb
or
fnstsw
cmp
or
xlat
imul
mov
inc
inc
push
in
dec
jne
out
leave
loopne
inc
sub
lods
mov
and
add
sti
shll
idivb
nop
dec
fstp
mov
aaa
sbb
or
loope
sub
push
cwtl
andl
push
inc
jns
add
push
lret
cld
scas
add
pop
mov
mov
in
sbb
jo
dec
pop
push
dec
adc
push
pop
rol
dec
outsb
repz
stos
out
mov
push
cld
outsl
sbb
std
sub
lcall
scas
scas
punpckldq
xor
adc
pop
xchg
aad
neg
jle
sbb
in
sbb
int3
inc
lahf
idivb
mov
or
into
mov
sbb
insl
sbb
sub
in
out
sbb
push
sub
out
dec
int
xor
ds
daa
cmp
jo
cmp
jge
or
push
adc
mov
into
sub
lret
movsb
cs
call
and
mov
ss
addr16
les
and
fsubrp
scas
jmp
xor
inc
pusha
cmp
stos
loope
lret
xchg
roll
pop
cmp
push
out
xor
and
add
mov
push
sub
pop
popf
jo
iret
cmp
jmp
add
dec
adc
movsl
ret
inc
push
std
test
sbb
push
push
lods
adc
mov
es
cmp
out
je
loope
adc
xchg
andl
dec
xlat
cld
mov
enter
or
cs
clc
lock
and
xchg
call
outsb
cmp
mov
push
rcrb
inc
xor
and
jbe
push
cwtl
lret
fsts
sub
out
push
cltd
in
inc
lcall
lds
stos
test
arpl
mov
stos
and
fwait
sbb
push
add
subl
es
mov
stc
movsw
adc
mov
pusha
idivl
data16
fwait
out
mov
int
dec
adc
or
jp
test
sbb
mov
push
into
fcomps
in
mov
pop
insb
iret
and
or
xchg
push
xchg
stos
arpl
out
mov
jle
int3
repnz
scas
pop
xlat
sti
pop
mov
jb
sub
mov
sbb
in
pop
pop
repz
sti
mov
cld
stos
pop
fucomp
test
or
cmpsl
mov
sbb
jnp
aad
fisubl
jmp
xchg
insl
or
fbstp
or
test
sbbb
or
aad
sbb
xchg
xor
inc
mov
aas
and
fildl
add
push
mov
mov
lods
cwtl
add
push
jp
js
ja
nop
test
dec
fisubl
jnp
daa
inc
mov
adc
and
popa
adc
or
mov
adc
stos
movsb
int3
mov
push
sarb
and
adc
enter
jne
daa
gs
or
std
test
loopne
xor
decb
add
pop
scas
movsl
pusha
iret
sub
lock
loope
sub
loopne
hlt
mov
iret
and
sbbl
bound
and
stc
xlat
outsb
insb
mov
push
or
pop
and
adc
fistpl
iret
nop
aam
pop
mov
push
in
loop
pusha
dec
mov
enter
ja
sub
inc
add
imul
pushf
fwait
mov
scas
out
in
iret
xchg
push
movsl
inc
popa
xlat
jns
clc
sahf
adc
loope
push
in
subl
sub
cmc
repnz
mov
ffree
pop
jp
push
test
int
das
mov
xchg
dec
idivl
mov
gs
pop
xchg
outsl
bound
cmp
and
jns
aas
lret
mov
cmpsl
or
pop
testb
push
stc
arpl
jns
pusha
iret
lcall
imul
test
cwtl
das
cmp
ret
jle
fdivs
lahf
andb
mov
inc
jo
out
push
lahf
xchg
enter
bound
fldlg2
add
add
inc
lahf
inc
fmulp
fnsave
insb
xchg
movsl
dec
adc
cltd
hlt
mov
lret
adc
bound
xor
inc
sbb
test
lds
xchg
mov
js
insb
repnz
and
mov
lret
sbb
sti
lods
pusha
pop
fistpl
pop
repz
lock
in
fidivl
cmp
adc
jno
pop
in
push
push
ficoml
mov
sahf
and
cmp
repz
mov
dec
in
enter
ret
fwait
cmp
pop
inc
mov
mov
sbb
test
leave
push
mov
setne
mov
cmp
jae
mov
cltd
inc
stos
add
cmp
pop
and
int3
mov
scas
pop
dec
cmpsl
inc
imul
xorb
cmpsb
mov
ja
aad
sbb
movsb
mov
inc
cld
mov
or
mov
sbb
popa
add
xlat
xor
lcall
in
dec
loopne
cmp
popa
adcl
cld
push
jno
dec
mov
mov
mov
test
jno
adc
out
inc
mov
xchg
mov
mov
add
std
add
daa
je
dec
into
xchg
adc
mov
pop
in
xchg
nop
es
xchg
pop
mov
enter
es
mov
jg
xchg
jmp
dec
xchg
push
movsb
ja
cs
out
fidivl
ret
test
dec
lds
and
jge
stc
sti
test
sub
dec
sbbb
mov
and
mov
mov
std
xor
fcoms
daa
jg
insl
sub
mov
mov
dec
add
mov
pminub
sahf
and
cmpsb
shlb
sti
aad
out
xchg
in
loop
inc
jle
loope
push
lods
cmp
push
fstpl
cmp
pop
hlt
pop
push
lahf
stos
dec
xchg
add
mov
movb
push
sub
jecxz
pop
movsl
fsubrl
sbb
mov
imul
test
push
sbb
mov
pop
mov
jl
jnp
push
pop
pushf
jmp
out
push
pop
popf
nop
inc
fld
mov
xlat
xchg
in
mov
fwait
xor
inc
jmp
lret
inc
add
xor
xchg
ret
or
sbb
shll
iret
xor
pop
cmp
jno
pop
gs
sbb
imul
dec
sub
repz
mov
shll
loopne
jmp
mov
cmp
popl
jno
push
in
adc
jecxz
rorl
pop
das
jp
icebp
cmpsl
sub
arpl
push
mov
cmp
popf
jno
sub
cmp
sub
test
sbb
scas
inc
jecxz
fstl
xor
xchg
imul
jl
arpl
imul
mov
pushf
push
lahf
adc
cmc
push
clc
fdivl
sub
push
mov
xor
rcll
nop
loope
in
or
imul
xor
push
pop
inc
or
cmp
into
pushf
inc
jmp
sbb
lret
decb
jg
fisubs
mov
pop
mov
jae
inc
nop
mov
cwtl
adc
sti
push
aaa
sub
cmpsb
pop
push
sarl
les
call
mov
fstl
mov
mov
mov
popf
std
pop
popf
sar
aam
mov
mov
sub
in
inc
dec
or
daa
cli
shrb
gs
data16
push
andb
ja
test
idivl
cmp
aad
push
fucom
int
or
gs
cs
xchg
icebp
adc
lds
mov
push
xor
das
pusha
lods
and
into
jnp
push
mov
and
mov
outsl
adc
std
add
adc
icebp
pushf
ja
jecxz
mov
popa
es
or
aaa
fistpll
mov
stos
jmp
stc
lahf
adc
xor
mov
xchg
loop
inc
adc
sbb
adc
nop
sub
add
mov
in
sub
mov
pop
mov
push
call
loop
outsl
or
pop
mov
loopne
push
push
lea
loop
jmp
cmp
scas
sbb
aas
push
mov
pop
mov
shr
aam
adc
xchg
sarl
mov
fidivl
and
sbb
mov
pop
arpl
iret
sahf
lods
add
sub
and
sti
xchg
mov
jae
inc
insl
stc
or
aaa
mov
xchg
mov
or
nop
jp
fwait
mov
and
dec
mov
imul
mov
cmpsb
cmp
lcall
dec
dec
sbb
fmulp
jo
les
push
sbb
ret
test
lods
cmpb
call
jg
je
inc
fnstcw
inc
or
push
mov
and
pop
pushf
ja
call
pop
test
aad
stos
sbb
dec
loopne
xchg
loopne
or
inc
sub
in
bound
fbld
xor
sti
dec
fadd
call
stos
cmp
cwtl
or
sahf
int
adc
pushl
fcmovne
pop
cli
inc
or
stos
lods
jo
rorl
cmp
sbb
pop
popf
je
dec
xor
lret
pushf
adc
cmc
mov
sbb
or
insl
out
test
jg
addr16
ja,pn
ja
add
lret
and
push
test
cmp
in
loope
lahf
push
add
inc
or
cmp
out
mov
mov
xchg
aas
test
loopne
jbe
mov
lock
iret
inc
inc
out
in
es
cmpsl
ds
and
arpl
ljmp
insl
fisttpl
and
pop
xor
sbb
cmpsl
movsb
shl
mov
outsb
xor
or
cli
daa
ds
adc
leave
lret
bound
jnp
pop
jmp
orb
unpcklps
test
in
ficoms
and
sti
imul
xchg
jg
mov
mov
test
xor
cs
dec
pop
clc
adc
or
push
dec
dec
or
pop
pusha
lods
sub
or
outsl
sub
hlt
fnstcw
mov
cwtl
movsl
cmp
or
cmp
jno
lcall
sbb
insl
outsb
negb
cmp
adc
inc
dec
xor
jl
adc
out
stc
push
out
cli
pushf
lock
add
ss
je
ja
sub
mov
popf
jecxz
cmc
cltd
mov
pop
adc
xchg
ja
std
pop
popf
xchg
lods
leave
fldcw
sahf
andl
jno
adc
xchg
mov
push
cmp
lods
lods
push
xor
js
add
xchg
jecxz
inc
mov
outsl
lret
jns
andb
mov
mov
cmpb
dec
call
adc
jg
mov
sbb
test
subb
lret
subb
in
cmc
sub
mov
inc
test
pop
pop
or
or
adcl
cmp
inc
mov
xor
mov
xlat
jb
mov
sbb
inc
sbb
cmpl
xor
sub
dec
mov
xchg
fimuls
or
orb
pop
gs
pop
sub
ret
hlt
pop
sbb
pushf
das
js
pop
cs
lcall
cmc
in
pop
pop
pop
movsl
cmp
mov
ret
pop
jbe
pop
jae
xlat
loope
add
jbe
xchg
push
mov
push
aad
xor
ljmp
int3
add
push
mov
pop
adc
adc
mov
dec
stos
test
in
rcr
jbe
ljmp
push
and
mov
test
jmp
xchg
mov
cmp
testb
xor
lea
push
je
outsl
cli
pop
mov
cmpsl
lret
inc
mov
scas
out
fsubrs
mov
out
inc
push
fdivs
mov
movsl
cmp
out
cmpsb
adc
ret
bound
and
cld
unpcklps
inc
test
adc
out
insl
lret
xchg
mov
adc
inc
ret
inc
lret
jno
sub
or
or
jns
push
pop
lods
cmp
mov
fcompl
mov
gs
push
mov
xor
inc
stc
push
je
lods
xor
mov
xchg
add
je
int
jle
jecxz
xchg
adc
stos
add
mov
rclb
int
sub
xchg
cmp
mov
xchg
pop
xor
pusha
or
mov
xchg
mov
mov
imul
jle
xchg
nop
mov
out
jno
inc
mov
dec
lret
mov
mov
sti
mov
nop
fnsave
xchg
dec
outsw
sti
push
adc
mov
mov
into
gs
push
daa
mov
mov
inc
pop
mov
stc
leave
aam
sti
andl
std
in
push
sub
lds
jo
dec
mov
mov
mov
push
inc
fldl
adc
pop
pop
fisubrl
shlb
add
add
and
jo
inc
mov
inc
int3
arpl
and
dec
ljmp
mulb
movsb
imul
popf
pop
fcmovne
xor
mov
mov
inc
and
xchg
sub
add
test
scas
xchg
sub
inc
dec
push
dec
cli
mov
scas
test
iret
cmp
bound
add
icebp
adc
lods
inc
aad
js
cmp
mov
sub
xorl
mov
popa
gs
dec
lods
out
divb
sub
lock
out
leave
cmc
mov
adc
cwtl
sbbb
dec
sub
sub
movsb
push
cmc
std
xor
or
lds
cmc
xchg
inc
push
pushf
push
mov
dec
fnstenv
jne
es
push
xchg
cld
lcall
jbe
lods
push
std
pop
xchg
mov
js
or
lds
nop
out
and
or
dec
xor
push
pop
push
xchg
pop
jge
daa
mov
cmp
rcll
pop
stos
rcrl
or
jb
mov
lock
ret
mov
dec
adc
mov
sarl
cmp
cmp
lock
fsub
mov
stos
test
das
pop
pushf
sbb
sub
jge
pop
in
pop
dec
ja
lcall
cltd
test
inc
xor
sahf
jmp
mov
in
subl
js
xor
int
mov
mov
ror
sub
int3
pop
mov
lahf
arpl
es
notl
fdivs
xchg
pop
inc
mov
mov
cmpb
add
pop
dec
mov
je
out
lahf
push
mov
adc
push
test
in
jne
cmc
xor
ja
out
negl
jmp
ds
mov
push
or
sbb
loopne
sub
inc
inc
sbbb
jno
iret
addb
sbb
pop
dec
out
test
fsubl
scas
lret
push
je
hlt
adc
cmp
push
movsb
inc
pop
dec
rclb
and
add
xchg
xor
sbb
or
sbb
call
in
imul
pop
jne
and
and
insl
out
adc
or
imulb
cmpsl
sub
movsb
iret
loop
or
popa
push
xsave
mov
repz
dec
sbb
js
adc
test
mov
mov
adc
orl
loopne
mov
out
insl
adc
push
or
ret
sti
jle
xor
dec
mov
push
push
das
popa
je
inc
push
cli
pushf
adc
sbb
cmp
rclb
push
andl
push
and
cli
outsb
in
sbb
jne
mov
jmp
fdiv
js
cmc
mov
sub
movsl
mov
push
fs
sub
cmpl
mov
sahf
pop
mov
das
ds
add
imull
lea
pop
inc
fcoms
outsl
adc
lds
adc
decl
movsb
xchg
gs
test
arpl
jne
xchg
sub
mov
aaa
adc
push
jmp
lock
mov
cmc
mov
dec
cmc
in
mov
out
pop
js
xor
cmpsl
popa
jmp
imul
add
sub
das
mov
jns
int
mov
add
or
xor
jge
inc
xchg
testl
mov
outsb
inc
shll
rcrb
xor
loop
dec
sbb
aaa
inc
pop
or
xchg
or
ja
inc
movsb
inc
fidivs
or
push
xchg
mov
mov
push
mov
push
mov
scas
cmp
xchg
jbe
repz
xor
adc
push
hlt
xchg
call
clc
xchg
sub
les
sbb
not
add
jmp
jl
adc
lock
iret
out
imul
mov
push
cmp
fsubs
xchg
push
arpl
roll
push
hlt
imul
aaa
fisubrl
cmc
and
or
outsb
push
sub
pop
mov
cwtl
lea
jp
aad
adc
inc
pop
mov
leave
ds
aas
adc
mov
jno
push
in
ret
neg
imulb
into
xchg
add
push
andb
add
inc
pop
hlt
stos
xchg
js
or
lahf
mov
mov
ret
sahf
negb
testb
xchg
arpl
js
dec
sub
pop
xor
xchg
push
sub
mov
lea
inc
push
out
insl
sahf
fdivrl
call
iret
sub
bound
dec
mov
fiadds
lret
jle
push
push
leave
shll
add
fstl
bound
push
testb
inc
adc
xchg
popa
push
pushf
ljmp
adc
test
and
dec
popa
xchg
hlt
adc
cmp
sahf
data16
cmp
inc
push
push
out
lods
scas
or
lea
std
pop
cmp
test
dec
and
mov
xchg
popf
ds
mov
mov
popa
adc
bound
push
flds
rcl
loopne
mov
xchg
repz
aas
mov
out
aaa
push
xchg
inc
dec
mov
loop
sbb
out
sub
pop
mov
jne
jns
cmp
jns
imul
sub
ret
arpl
icebp
lods
outsl
push
push
imul
push
fbld
cmp
mov
movsl
mov
pop
imul
jno
mov
in
add
ja
pop
idivb
cmp
xchg
lods
idivb
push
jle
popf
sub
lcall
xchg
and
sahf
mov
in
sbbb
shrl
addb
and
adc
sub
cld
fs
jo
shlb
ret
mov
mov
inc
dec
jno
jbe
mulb
sub
test
loop
add
or
sbb
push
mov
push
xchg
dec
insb
xor
jb
daa
in
testl
cmc
addr16
in
mov
sarb
inc
test
loopne
add
xor
adc
cmc
jnp
aam
pushf
ja
jne
outsl
cs
lret
fcomps
ljmp
mov
ror
cmpsl
jb
dec
mov
push
lock
decb
out
in
lret
hlt
push
std
stc
adc
cli
rol
std
icebp
pop
addr16
sti
cmp
jp
push
hlt
mov
adc
mov
adc
icebp
push
cmp
push
adc
push
jecxz
jae
sub
cli
xchg
ffree
add
jl
sbb
in
mov
push
and
inc
loope
dec
sbb
push
adcb
outsl
cmp
or
lea
popa
sbb
jbe
ss
test
daa
mov
mov
gs
cmp
sub
pop
lahf
out
ds
shrb
fiaddl
xor
stos
dec
pop
cmp
jne
cmp
jne
pusha
fcmovnbe
aam
add
call
test
leave
xor
outsl
jns
je
pop
out
dec
cmc
lahf
push
int3
in
add
mov
cmpsl
insl
dec
pop
sarl
ss
push
jbe
cmp
jae
out
pop
xchg
sub
lods
mov
push
jecxz
fstpl
vmovmskpd
dec
addr16
xlat
cwtl
addr16
push
or
loope
cmpsb
mov
add
add
push
mov
push
lea
cld
stos
loopne
inc
push
roll
pop
std
test
and
inc
inc
dec
jns
add
es
jae
aas
scas
mov
pop
pop
rcr
je
pop
mov
sbb
dec
adc
je
pop
shll
dec
inc
vmwrite
pusha
mov
push
dec
mov
repnz
xchg
in
adc
fsubs
and
sbb
dec
in
es
scas
repz
clc
push
idiv
bound
pop
decl
push
rclb
setae
out
in
lock
sbb
sbb
pop
dec
dec
and
and
add
push
iret
bound
xor
fs
stc
adc
cmp
dec
lea
loop
pop
dec
xor
test
mov
test
fnstsw
pusha
mov
cmc
into
push
lret
repz
leave
fnstenv
mov
lods
adc
jne
adc
int3
mov
sbb
nop
imul
aaa
lods
mov
push
or
imul
mov
into
mov
xchg
in
fidivrs
mov
push
outsl
mov
cmpsb
stos
inc
flds
sbb
lods
xchg
ss
out
sub
pop
mov
mov
les
scas
pop
mov
loope
jb
int
jns
aad
rol
test
pusha
fcomps
out
cmp
jmp
mov
mov
fwait
jnp
cmp
lcall
sub
pop
cwtl
ret
inc
jo
push
aaa
mov
mov
dec
sahf
add
xchg
loop
test
je
jno
cmp
xor
out
lea
jmp
mov
nop
push
pop
push
or
jae
lahf
xor
mov
fdiv
mov
fadds
into
cltd
lcall
inc
and
adc
inc
fldt
jb
outsl
mov
xor
call
jae
sbb
mov
lea
pushf
mov
inc
adc
and
jge
fiadds
xchg
add
xor
idivb
mov
mov
inc
insb
rcll
loopne
mov
ds
xor
add
adc
push
push
add
loope
sub
mul
inc
mov
mov
add
subb
xchg
pop
lods
cwtl
rcrl
mov
add
push
sbbb
push
push
mov
and
mov
imul
pop
fwait
pop
xor
adcl
clc
mov
sbb
mov
jmp
cld
xchg
sbb
dec
std
fwait
sub
dec
in
ss
inc
mov
out
mov
sub
testb
adc
ljmp
in
fsubl
std
lds
mov
jl
call
and
mov
pop
rolb
jne
fwait
loope
mov
fwait
call
jmp
adc
xor
or
cmpsl
cmp
cs
in
bswap
loopne
mov
xchg
mov
out
pop
jno
xor
inc
fdivl
test
cmp
nop
sub
mov
mov
inc
push
fstps
sarb
push
jg
push
hlt
shl
push
pop
out
cmp
sub
mov
cmp
inc
outsb
cmc
mov
shufps
or
fcmove
fnstsw
loopne
out
push
jg
pop
xchg
std
je
daa
out
pop
push
in
out
pop
leave
pop
xor
jo
push
sub
inc
jge
hlt
cmp
aaa
jmp
jp
mov
dec
sub
jl
cli
cmp
adc
loope
bound
mov
and
cmp
pop
bound
push
pop
mov
and
pushf
jl
add
ss
fcompl
insb
jae
movsl
sbb
mov
clc
outsl
aas
movlhps
sub
gs
movsb
or
nop
daa
pop
and
xchg
and
and
adc
and
push
popl
cs
sahf
leave
imul
mov
test
jge
les
stos
in
jns
rorl
pushf
and
push
sbb
mov
ret
enter
notl
test
cmp
xchg
and
fcompp
and
repz
adc
and
mov
ret
mov
adc
in
repnz
das
xchg
mov
or
mov
test
mov
lds
inc
gs
stos
iret
mov
repz
mov
mov
lods
jne
and
lret
or
fmuls
cmc
or
sar
jne
dec
sbb
enter
imul
pop
xchg
call
fidivrs
cmp
mov
popa
dec
and
mov
mov
add
jp
lods
xlat
outsb
fistpll
jb
imul
cwtl
mov
ret
inc
push
or
cmpsb
cmp
xchg
fldt
arpl
mov
addr16
scas
cmp
shrl
jae
push
movsl
xchg
jb
out
cmp
push
incl
dec
cmpsl
inc
dec
fdivl
icebp
mov
repnz
popl
sub
out
xor
call
popa
xchg
jg
cmpb
aad
pop
sbbb
pop
mov
dec
fildl
push
enter
outsb
inc
inc
dec
incb
into
xor
in
aaa
enter
cmp
aad
ljmp
es
cwtl
je
notl
into
fisubrs
je
push
sub
cmc
mov
movsl
in
loop
in
or
cmc
xor
roll
das
push
add
xor
xor
lret
mov
cli
xchg
dec
add
pusha
nop
imul
push
aam
lock
add
mov
scas
icebp
or
add
stos
xlat
mov
push
mov
xchg
shll
outsl
ficomps
cmp
push
sti
imul
imul
sahf
fimuls
je
inc
cmp
mov
and
jp
lret
cmpsb
lds
add
movsl
ficoml
mov
push
orb
cmp
adc
loopne
cwtl
adc
jns
push
xor
sbb
or
sbb
add
add
lcall
lea
insb
add
stos
aaa
fiaddl
xor
imul
mov
fisubl
or
mov
cmp
jg
or
jbe
jg
adc
adc
jnp
mov
fstl
outsl
push
dec
and
xor
or
decb
into
xor
ss
push
rcr
cmp
lods
lods
pop
push
fiadds
jno
out
xor
addr16
test
and
data16
les
test
inc
jne
into
push
sub
push
imul
lods
mov
rclb
enter
cmp
or
adc
inc
into
js
mov
test
xor
add
push
mov
cld
mov
rcll
jo
xchg
es
mov
add
inc
pusha
cmpb
out
lods
xor
or
ret
clc
add
stos
jmp
outsb
add
aas
mov
mov
mov
es
push
push
rcll
dec
out
xor
mov
xchg
mov
cmpsb
jmp
and
mov
sbb
out
js
mov
ret
in
xor
jmp
and
idiv
ret
lods
lods
mov
test
mov
sub
cmpsl
sarl
inc
mov
jecxz
andb
or
pusha
mov
les
pop
dec
test
add
adc
lahf
sbb
frstor
aaa
sbb
pop
mov
fimull
adc
ds
outsl
negb
inc
inc
lret
cld
lret
lcall
rolb
lahf
or
jns
pop
in
push
dec
adc
es
sbb
sbb
in
add
add
pop
aas
xchg
scas
insl
sbb
jnp
lcall
insb
mov
stos
mov
push
jns
mov
push
cmpl
xchg
pop
das
xor
aaa
dec
loop
jns
inc
test
nop
xlat
push
lds
rcrl
sbb
xchg
mov
clc
mov
mov
js
mov
negl
sub
cmp
add
fdiv
jno
leave
jecxz
xchg
cmp
push
popa
sub
aaa
cwtl
mov
push
mov
addl
sbb
dec
arpl
test
daa
bound
and
test
js
xor
xchg
pusha
ss
leave
outsb
push
jmp
mov
stos
call
imul
cwtl
pop
sti
jae
and
jnp
sub
sbb
push
mov
test
testl
test
int
add
data16
pop
push
cwtl
out
xchg
or
xor
lret
xor
aad
cwtl
mov
int3
mov
shrb
inc
push
fs
nop
inc
jnp
fisubl
pop
pusha
dec
adc
inc
das
pop
dec
pop
push
in
xor
push
test
outsl
scas
mov
sbb
mov
add
enter
mov
jo
and
adc
enter
negl
jns
mov
xchg
mov
sarb
mov
imul
mov
jge
mov
cwtl
xchg
jl
mov
add
test
or
mov
xchg
mov
sahf
and
cltd
cli
adc
and
ja
cmpsl
mov
vphaddbw
outsl
mov
stos
stos
hlt
push
sub
inc
add
lret
push
xor
sub
jae
ja
xor
sbb
fs
push
rcrb
pop
jo
repnz
shlb
inc
fldl
push
xlat
mov
cmpb
inc
inc
stos
mov
dec
jnp
sbb
cmp
test
in
aaa
ror
inc
add
push
mov
lods
or
pop
fs
cmp
add
push
jmp
test
fsubrl
adc
xchg
mov
ds
inc
mov
fcmove
int
mov
xchg
mov
stc
scas
stos
mov
add
iret
cld
sbb
xchg
dec
inc
add
js
cwtl
add
popa
push
jnp
dec
xor
sub
iret
jnp
mov
add
add
ret
xchg
push
dec
inc
fcmovnbe
mov
jmp
dec
stos
ret
mov
cmp
push
cli
loope
adc
dec
out
and
mov
xlat
mov
std
or
xchg
add
imul
nop
dec
dec
ds
insl
jns
cmp
mov
imul
push
or
add
push
xchg
or
fsubl
jb
stos
mov
dec
xor
cmpsl
pop
mul
inc
mov
mov
js
inc
push
stc
pop
orl
rorb
repnz
xchg
push
call
inc
mov
jl
push
inc
xlat
scas
adc
inc
rcrb
data16
test
adc
testl
pop
jmp
xchg
movsb
subb
xchg
mov
ljmp
or
adc
les
dec
imul
data16
pop
int
enter
jecxz
sub
subl
mov
leave
push
in
mov
push
je
mov
push
push
shl
mov
add
stos
mov
fistpll
leave
stc
mov
gs
out
loope
maskmovq
divl
add
cmp
inc
lea
adc
xor
aad
cld
cwtl
pop
or
mov
mov
push
mov
jle
xor
dec
jno
push
movsl
ds
and
stos
pusha
pushf
arpl
adc
movsl
sbb
orb
and
dec
je
dec
sub
iret
xor
arpl
sub
mov
push
and
mov
hlt
xchg
js
or
jb
jle
outsb
in
xchg
push
arpl
add
pop
jnp
aaa
and
adc
jbe
and
sbb
push
sub
inc
inc
popa
dec
loopne
in
out
mov
fdivl
aad
adc
mov
cld
xor
bt
and
mov
lds
jp
xor
pop
lahf
inc
hlt
pcmpgtd
mov
dec
iret
loope
test
dec
lods
dec
and
in
cmp
mov
lret
out
and
mov
rcr
iret
and
or
jmp
mov
cmp
xor
imul
mov
cld
mov
jae
dec
imul
ss
add
cmp
mov
and
outsb
ja
cmp
int3
lret
xchg
imul
jns
adc
fcmove
ss
andl
lock
lods
and
cmc
xor
inc
std
jle
sub
orl
andb
push
jmp
movb
xchg
xchg
test
icebp
sbb
push
jecxz
pop
mov
rorl
sbb
and
mov
dec
inc
cmp
js
mov
icebp
adc
jp
jnp
and
sbb
sbb
lret
gs
xlat
push
cmpsb
fwait
inc
jg
repnz
sbb
inc
icebp
popf
cmp
notl
push
xor
or
xchg
xchg
sahf
push
adcb
or
mov
mov
ret
or
jecxz
inc
adc
mov
add
lret
leave
mov
xchg
popa
arpl
ret
adc
or
mov
mov
mov
repnz
jg
or
ret
xlat
arpl
outsb
gs
push
mov
fistps
movl
jg
sub
cmpsl
rcrb
mov
lods
loop
test
pop
cld
and
cmpsb
cwtl
ret
test
lcall
in
cltd
rcl
lods
xor
mov
and
addb
mov
aam
inc
nop
daa
jne
iret
sub
pushf
scas
mov
push
mov
inc
push
xchg
jp
icebp
jle
pop
ja
nop
add
cltd
fld
sub
xchg
push
sahf
icebp
mov
test
rorb
aas
and
iret
xchg
or
imul
fmuls
sbb
push
rclb
test
fnstcw
aam
jne
inc
pop
dec
dec
xlat
enter
jge
inc
xchg
aas
pop
cli
pusha
rorb
sar
mov
adc
add
divb
xor
pop
fiaddl
mov
ds
mov
aas
divl
pop
and
and
pop
mov
jns
and
xchg
pop
popa
xorl
pop
outsb
test
bound
jbe
pop
hlt
mov
jnp
pop
mov
lcall
in
dec
out
adc
fsubr
inc
adc
das
call
lret
iret
lods
pop
shll
popa
movsl
fsub
jnp
cltd
fdivs
lock
dec
dec
das
xor
push
push
jl
movsb
pusha
or
jp
or
pop
aas
test
out
and
pop
dec
xchg
mov
divb
cwtl
das
sar
mov
push
call
addl
sahf
pop
dec
insb
sub
das
std
movups
andb
push
outsb
aad
push
mov
sub
stos
mov
push
xchg
std
xchg
pop
jne
push
pusha
daa
push
push
ficoms
js
push
pop
int
icebp
cmp
inc
jo
jmp
push
out
pop
insb
js
jne
push
mov
adc
dec
icebp
lcall
xor
ss
scas
inc
mov
fwait
divl
sub
adc
pop
adcl
mov
enter
push
rsqrtps
jecxz
xor
mov
xlat
pop
mov
mov
jge
stos
sub
iret
adc
or
jp
push
test
js
push
mov
int
push
jle
adc
scas
mov
repz
gs
adc
shrb
shl
add
add
jne
ret
scas
leave
test
push
push
bound
stos
sub
sub
pop
test
jge
cld
mov
daa
push
cmp
ljmp
mov
xor
ret
xor
test
ljmp
cmp
addb
adc
cmpsl
out
fstpt
in
mov
int3
and
mov
sbb
sub
xchg
mov
cmc
notw
cmp
scas
enter
popf
inc
lods
icebp
cmc
fidivl
mov
jae
ror
mov
pop
adc
push
jl
add
mov
aam
out
jg
add
adc
jae
pop
mov
mov
adc
push
mov
lds
inc
pop
push
call
fcomps
orl
mov
cltd
push
enter
jnp
bound
xchg
sub
jb
aas
test
fnstcw
scas
and
out
mov
sbb
repnz
jl
sub
test
cmp
jg
mov
xor
aas
add
push
rolb
loop
push
dec
jp
dec
ljmp
lods
cld
jl
sub
fsub
push
sbb
push
and
mov
les
dec
add
jp
repz
xor
jg
mov
xchg
xchg
jb
xchg
cmp
aas
fs
inc
push
dec
and
in
pop
into
outsb
insl
pop
sbb
imul
inc
mov
push
je
bound
sbb
xchg
sub
rcl
xlat
aam
nop
out
jle
cmp
push
mov
jns
loope
fwait
ret
and
sbb
mov
fs
jbe
xor
mov
hlt
rcrl
repz
sub
sbb
data16
sar
xchg
cmp
les
fisubs
or
sub
ljmp
add
xchg
and
mov
xor
inc
lds
out
jecxz
cmp
jae
xor
test
push
cld
push
cmp
loopne
mov
ds
popa
es
call
stos
xchg
inc
lret
and
add
into
xor
jno
mov
cltd
cmc
sbb
mov
and
loopne
daa
lahf
sub
mov
push
orb
ja
xor
outsl
int
jge
imul
pusha
xchg
sbb
rcr
inc
inc
movsb
xchg
dec
adc
cwtl
test
vmaxps
repnz
and
mov
mov
fucomp
pusha
out
xchg
cmp
out
imul
inc
cli
jbe
scas
and
pushf
mov
dec
jmp
or
stos
mov
sbb
movsb
inc
mov
loopne
call
jo
mov
popa
movsl
dec
clc
aad
fstpl
adc
xchg
enter
incl
jp
and
fbld
add
movl
fs
jecxz
sbb
cmp
nop
jnp
jns
insb
imul
pop
aad
jo
repz
aas
popa
fbstp
fistpll
data16
cltd
xor
mull
addr16
shll
pop
movsb
cmp
out
pop
inc
xchg
xlat
pop
test
sub
xor
or
ficomps
scas
mov
mov
add
xor
lea
add
xchg
pop
mov
adc
outsb
stc
mov
pop
cmp
in
fisubrl
lret
rcll
sti
push
push
insb
and
pop
xchg
pusha
repnz
hlt
xchg
mov
dec
jge
push
out
add
jne
ficomps
lea
and
xchg
fsubrl
popf
dec
je
and
repnz
or
test
push
popa
rolb
call
rcrb
lods
inc
push
scas
fcmovnb
insl
lret
rcrb
inc
leave
jmp
xchg
inc
cmpsb
mov
jp
or
leave
and
addr16
or
enter
mov
shr
subps
inc
jge
lahf
pop
sub
mov
add
push
jbe
fsubp
lds
jp
cmpb
nop
pop
add
inc
ret
je
rcll
mov
loop
stos
rcl
div
ret
sub
add
fnsave
data16
iret
fildl
in
out
fwait
xor
push
int3
arpl
data16
xchg
cmp
jg
sbbb
push
jl
cmp
xlat
mov
or
jg
mov
dec
mov
cmp
push
popa
and
nop
aas
dec
fldenv
push
popf
xchg
in
or
js
sub
lret
mov
fidivl
pop
mov
jb
out
xor
push
and
push
movsb
movb
xchg
push
aaa
shl
xchg
jmp
cmp
fidivl
or
or
jge
test
sbb
insb
sub
mov
fiaddl
or
pop
push
shrb
ficompl
cmp
mov
mov
pusha
sbb
push
test
insl
jl
std
gs
sbb
mov
mov
dec
xchg
xchg
scas
inc
adc
in
add
stos
xchg
es
or
add
and
daa
adcl
test
push
ljmp
popf
add
mov
jmp
inc
cltd
or
je
add
jb
adc
rcrb
xchg
or
out
es
mov
in
icebp
insb
jle
cmp
inc
ss
outsb
out
mov
arpl
xor
or
ljmp
out
test
lcall
ss
divb
js
jmp
test
cld
mov
fistps
pop
idivl
clc
dec
in
mov
out
pushf
xchg
jp
mov
sahf
inc
mov
sahf
repz
mov
adc
shll
pop
xor
int
rol
jo
leave
test
inc
mov
inc
or
mov
push
outsb
adc
pop
add
outsl
add
mov
leave
pop
adc
lock
add
aas
inc
lcall
add
cs
ja
pop
push
repnz
test
mov
aam
or
cmpsl
jle
loopne
cmpsb
ret
xorl
push
or
aas
inc
mov
and
clc
push
addr16
mov
cmp
mov
bnd
pop
pop
adc
jmp
mov
faddp
and
std
sub
out
push
and
xor
sahf
sub
or
adc
int3
sub
push
sbb
cmp
aas
mov
mov
xchg
cli
rcr
ljmp
js
and
pop
sub
test
sbb
pusha
ret
xor
pop
rcll
and
adc
cmp
mov
cmpb
or
aas
sub
popa
xchg
loopne
testl
roll
ja
xchg
imul
out
movsl
jp
or
cmpb
cwtl
mov
xchg
imul
testb
out
or
rclb
mov
imul
insl
xchg
adc
pop
add
aas
jmp
sahf
testl
mov
ficoml
mov
aam
aas
ret
add
stc
pop
jecxz
aam
inc
fnstcw
jmp
dec
lcall
pop
jecxz
jne
xchg
std
cmp
getsec
xchg
adc
mov
fisttpl
lahf
ss
rcrl
add
movsl
adc
jbe
add
mov
fdivl
outsl
jb
mov
add
xchg
dec
sub
out
adc
fldenv
fdivl
dec
mov
mov
or
inc
fucom
das
insl
mov
sub
push
push
xor
enter
sbbl
pop
outsb
in
xor
push
arpl
loope
jle
aaa
stos
cltd
ficoml
hlt
fists
mov
inc
shrb
push
mov
push
loope
sbb
stos
cltd
xor
lds
mov
add
nop
jae
or
dec
add
mov
mov
or
sbb
rorl
cmp
arpl
xchg
icebp
mov
test
push
add
or
or
mov
mov
mov
mov
ss
in
push
test
rorb
mov
jbe
pop
loop
jo
test
and
insl
rclb
stos
inc
lods
add
dec
mov
dec
hlt
sub
fisttps
lcall
dec
jno
adc
add
mov
mov
cmp
adc
out
pop
into
gs
push
jmp
in
arpl
ss
jg
sub
inc
pushf
push
xchg
test
es
add
inc
pop
mov
fldt
rcl
pop
cmp
mov
xchg
insb
push
sbb
mov
xchg
xchg
pop
addr16
lcall
in
jbe
xor
pop
adc
dec
imul
adc
mov
pop
lock
mov
insb
aad
lahf
mov
mov
jo
pop
lcall
sahf
fs
mov
and
int3
xchg
cltd
mov
je
and
inc
jne
inc
imul
cmp
pop
adc
es
mull
les
add
push
mov
jle
repz
push
into
das
lret
int
insl
arpl
pop
mov
and
arpl
adc
sbb
mov
cmpsl
jle
jno
sbb
ja
cmpsb
cmpsl
gs
adc
lods
dec
cld
or
sarb
enter
and
dec
popf
sbb
ljmp
lret
aaa
push
aad
cli
rcrl
lcall
xchg
inc
int
loopew
and
into
and
loope
push
fisttps
sbb
inc
mov
and
jno
mov
daa
movsb
inc
and
inc
fbstp
rclb
inc
xchg
and
cltd
test
xlat
fidivrl
lret
arpl
mov
rolb
call
lret
enter
lock
mov
and
cli
jne
clc
push
mov
movsb
fisttps
mov
sub
sub
mov
test
lahf
aad
or
or
push
test
pop
repnz
fs
mov
pcmpeqb
xor
es
push
jle
push
loop
or
sub
mov
dec
shl
mov
std
int3
add
jne
mul
loop
fs
popf
mov
stos
mov
sbb
dec
dec
outsb
sti
mov
xchg
cmp
dec
sahf
sar
mov
add
cld
or
and
and
cs
stos
pusha
adc
leave
test
jmp
cmp
call
in
push
pop
sbb
sub
xchg
sub
xor
add
mov
shrl
dec
loop
mov
sar
stos
in
xor
int
xchg
fwait
xor
repz
and
jp
cs
ret
repnz
or
push
out
out
jbe
xchg
cmp
mov
sub
add
xor
xchg
in
mov
sbb
and
fidivl
bound
jns
lods
fcoms
lea
icebp
mov
adc
movsl
popa
jg
mov
fisubrl
jo
nop
lods
mov
int
add
push
faddl
push
sti
push
loope
sub
pusha
divps
sub
pushf
mov
cwtl
mov
paddusw
movsb
mov
adc
mov
shrl
xchg
negb
add
or
sub
mov
mov
lret
divl
fldcw
jmp
push
mov
arpl
lea
sahf
stc
xchg
cmpsl
adc
fildl
in
jbe
cmc
xchg
test
inc
cmc
ss
das
ficomps
xor
adc
gs
xor
cli
add
mov
mov
mov
push
cmc
dec
mov
and
lcall
cmp
cmp
cmp
lea
outsb
loope
jl
xor
and
and
push
mov
mov
dec
pop
cltd
lcall
push
or
sbb
dec
in
fucomp
out
cmp
mov
xor
rcl
ljmp
ja
aad
iret
and
adc
scas
jno
xchg
adc
add
jne
aam
cli
lds
sarl
adc
das
ror
sub
sbb
pop
ds
add
out
imul
cmpb
mov
dec
aad
mov
adc
push
cmp
push
mov
test
shll
pusha
aad
add
mov
jecxz
jge
add
in
inc
int3
adc
cmp
imul
in
sbb
loopne
add
mov
jne
jae
clc
sarb
sbb
idivl
testb
pop
dec
in
pop
pop
mov
mov
mov
mov
inc
sbb
jne
xor
addr16
inc
jo
fsubs
add
jae
fnstenv
mov
ret
pop
scas
call
out
mov
pop
jge
inc
xchg
sub
jo
shr
sbb
mov
mov
sbb
lcall
sub
cltd
add
jp
pop
xor
xor
loop
lods
out
cmpb
mov
cli
push
fisubl
lock
sbb
nop
stos
fistpll
push
sbb
lahf
repz
cmp
or
scas
lahf
push
pop
inc
aad
int
fisttpll
out
mov
push
inc
leave
out
fistpll
inc
stos
das
xor
cld
idiv
sbb
and
mov
inc
dec
aaa
push
pop
mov
add
jmp
sbb
mov
insl
movsl
push
xlat
mov
xchg
jle
movsb
inc
mov
lahf
std
cs
adc
pop
xchg
out
inc
fwait
enter
mov
and
add
mov
aas
insb
daa
jl
lret
push
clc
push
clc
pop
and
ror
push
in
xor
int3
ret
test
je
push
jmp
push
int3
sbb
gs
xchg
stos
mov
sub
or
add
inc
pop
aad
mov
mov
aaa
in
mov
pop
mov
fcmovne
test
repz
inc
fstl
outsl
jp
incb
ljmp
fcomi
fidivl
push
je
xlat
sub
cmp
mov
iret
xchg
and
and
push
js
fwait
test
les
jb
and
imul
mov
cmp
mov
jmp
sbb
mov
lock
cmc
jo
into
mov
mov
andl
cwtl
imul
push
int
push
xor
pushf
retw
insl
add
and
ds
mov
les
shl
dec
sbbl
mov
cmpb
nop
push
dec
out
jae
push
sbb
negl
cmp
leave
ss
jmp
push
lahf
int3
arpl
lock
adc
loop
unpcklps
mov
push
mov
in
and
fimuls
dec
adcb
test
jmp
ljmp
sbb
js
and
mov
or
outsb
mov
iret
mov
jp
cmp
adc
jecxz
sub
arpl
xor
xor
jb
das
and
xor
fcompl
mov
mov
sarl
lahf
sbb
stos
inc
das
ds
ficoms
clc
dec
sti
add
fsubs
ret
cmp
enter
sbb
mov
mov
mov
mov
scas
xchg
or
xchg
pop
outsb
clc
shl
mov
aaa
into
dec
add
jecxz
scas
shrl
pusha
enter
lds
mov
ret
inc
mov
cmpsl
stos
mov
lcall
pop
hlt
xor
push
ret
clc
push
into
or
cmpsb
xchg
sti
incb
mov
cwtl
ret
orb
mov
sbb
sub
jnp
lods
fwait
xor
inc
je
fistl
std
fnstcw
data16
test
adc
sub
jae
lret
sub
adc
jne
in
test
lcall
roll
push
add
jb
es
into
adc
inc
popa
aad
call
pop
adc
sub
cmp
sbb
daa
popa
leave
pop
outsl
mov
xchg
mov
mov
aam
cld
mov
xorb
pop
lcall
inc
mov
arpl
das
sbb
sbb
out
xchg
gs
orl
popa
push
add
mov
mov
imul
mov
mov
jnp
sahf
pop
adc
push
pop
adc
dec
sub
xor
fwait
sahf
outsl
loopne
cmpsb
adc
imul
jnp
sti
or
push
pop
push
adc
sbb
mov
bound
rcrl
popf
mov
fdivp
and
movsb
fmulp
mov
xchg
add
mov
jb
jo
lock
lods
mov
and
and
dec
add
push
repnz
jmp
inc
imul
xchg
lods
test
push
sbb
iret
notl
enter
mov
push
or
fdiv
in
dec
push
add
or
bound
mov
ljmp
sbb
lcall
jne
jl
push
hlt
jo
xchg
out
dec
sti
in
mov
clc
popa
or
in
ss
sbbb
scas
insl
adc
adc
or
xor
xchg
pop
fistpll
sahf
cmp
sbb
cmp
mov
add
lret
out
and
ret
xor
rorl
scas
fwait
sbb
aad
enter
popa
fmull
out
bound
jae
rcrl
add
jo
and
add
pop
mov
mov
sbb
ret
mov
icebp
jecxz
cltd
test
mov
sarl
fs
jo
push
pop
cmp
andl
pop
sahf
xor
movaps
es
jle,pt
mov
loop
shr
enter
orb
push
out
sub
lea
inc
mov
cmpsb
into
scas
mov
daa
icebp
push
jae
and
mov
in
imul
adc
ja
mov
rcr
cmpsl
mov
sti
jp
in
stos
sbb
clc
imul
xchg
das
cmp
outsl
mov
divb
insl
sub
pop
lret
push
in
push
xchg
jge
push
sub
rorl
mov
push
ss
cmp
xchg
mov
sbb
shlb
mov
dec
in
mov
sbb
jnp
leave
lods
sbb
in
sbb
testb
mov
adc
add
or
sbb
add
sub
outsl
push
nop
daa
test
sbb
xchg
sub
jae
cmpsb
daa
shrb
jp
push
lods
inc
add
scas
test
push
mov
popa
inc
sub
incl
mov
dec
es
mov
adc
mov
stc
pop
push
out
jle
ds
mov
jl
pop
mov
shll
out
push
dec
pop
aaa
fnstenv
jnp
add
lahf
or
int3
jge
rcll
inc
in
dec
stc
or
or
mov
enter
jns
xchg
out
aam
jns
stos
cmc
outsl
add
testl
fidivrl
testl
call
in
sub
fdivrl
sub
sbb
cmp
fsubr
pop
pop
mov
sbb
and
xor
fstps
push
jae
adc
lcall
push
or
push
mov
mov
cld
pop
out
stc
dec
sbb
ret
and
sti
push
pop
sbb
dec
xchg
inc
fs
mov
push
pop
inc
stc
rcrl
lea
or
sbb
push
pop
jns
jno
cmp
xor
loop
push
push
adc
push
mov
xor
mov
push
enter
dec
pop
xchg
xchg
mov
xor
cmc
inc
xchg
popa
pushf
scas
xchg
mov
jno
xor
shlb
xor
loope
rcr
jo
xor
mov
insl
aas
rorb
xchg
and
or
inc
sbb
sub
scas
jnp
cli
rorb
cmp
pop
add
cmp
lock
cwtl
mov
test
push
lcall
and
and
test
imul
mov
mov
xchg
fcoms
adc
scas
bnd
cmp
cmp
popa
cld
aam
test
pop
xor
mov
jge
daa
dec
aam
fwait
add
int
push
lods
int
xchg
pop
addl
test
mov
mov
add
in
jecxz
cwtl
mov
mov
shr
adc
iret
int3
xor
loope
xchg
adc
dec
loopne
adc
daa
mov
xchg
test
push
or
push
mov
iret
jnp
dec
xchg
fsubl
loop
sub
lds
jl
or
aas
jnp
insb
inc
rcl
aaa
dec
or
mov
out
push
jne
xor
jmp
pop
add
dec
stos
inc
inc
xchg
out
add
sub
or
sbb
xchg
pop
jne
and
push
push
push
sti
mov
out
cmp
arpl
out
add
and
and
mov
scas
sti
outsl
daa
scas
lahf
cmpl
mov
lock
add
jns
and
and
pop
gs
add
sub
cmp
cmp
mov
inc
sbb
incb
cmp
push
ret
outsb
jp
seta
mov
lds
inc
stos
pop
jb
jbe
sbb
and
loope
adc
or
add
xor
push
ljmp
lret
lock
mov
sahf
xchg
jbe
das
gs
inc
fnstsw
out
xor
dec
cmp
aam
test
xorb
xor
mov
dec
sub
xor
and
dec
push
out
mov
dec
adc
not
dec
add
jg
cwtl
jne
aaa
xor
aaa
stos
movsl
fisttpl
mov
inc
lods
iret
mov
hlt
dec
sahf
push
sub
inc
cwtl
adc
imul
jbe
mov
lea
pusha
or
sbb
jno
mov
xlat
adc
mov
and
cmpb
mov
or
inc
xchg
add
popa
ljmp
push
hlt
jns
xor
lea
adc
loope
cmp
shlb
inc
mov
popa
inc
lods
mov
dec
dec
and
or
cmp
and
aas
push
dec
repz
fs
das
cmp
xchg
inc
add
ds
mov
inc
pop
mov
and
inc
push
jns
shll
cltd
cmc
sbb
mov
lahf
push
mov
aad
xchg
cmp
sub
mov
cmc
shlb
imul
xlat
mov
daa
adc
rol
inc
inc
call
test
rolb
pop
cwtl
lods
iret
mov
add
iret
push
mov
pop
out
lods
imul
xor
mov
or
fwait
xor
cld
mov
je
lret
jae
mov
dec
ds
mov
cmp
and
aas
ret
and
or
jbe
out
xor
and
sbb
jb
fs
jo
ret
stos
in
dec
lcall
mov
xor
fistps
out
mov
or
std
xchg
inc
test
inc
push
jecxz
and
sbb
dec
dec
mov
mov
jo
xchg
push
aam
cs
loopne
pop
or
data16
outsb
mov
xchg
jecxz
inc
cmovo
sub
cli
xchg
mov
adc
cmp
lock
mov
loopne
lock
arpl
sbb
mov
loope
leave
cmovge
stos
out
jbe
lret
xlat
outsb
jge
movsl
sub
dec
cmc
jnp
in
pop
roll
mov
movd
xchg
bound
sub
ss
fsubrl
dec
arpl
loop
jnp
mov
fwait
jl
fmul
pop
fsubrp
sti
fwait
pop
lret
or
push
fimull
jbe
imull
or
jo
dec
outsb
sub
filds
clc
hlt
rcl
sbb
jle
mov
rcrb
inc
add
xor
out
sahf
lea
push
sbb
popf
inc
mov
icebp
xor
ljmp
mov
das
dec
stos
icebp
int3
pop
aad
aas
pop
cli
pop
lods
mov
push
sub
loope
ret
iret
cmc
xchg
and
leave
pop
iret
xchg
xchg
and
daa
cld
push
mov
sbb
gs
or
push
icebp
popf
ret
imul
pusha
mov
mov
jle
sahf
cmp
push
xor
dec
mov
and
pop
ret
pop
or
cmp
add
mov
pop
cmc
arpl
lods
sbb
fnstcw
and
bound
adc
cli
test
sbb
mov
outsb
sub
addr16
mov
test
rcrb
sub
in
or
gs
cmpsb
dec
mov
mov
mov
fsubl
xlat
jbe
dec
arpl
clc
inc
sbb
mov
shr
fcom
xchg
or
pop
mov
cmpsl
decb
jo
jmp
sti
addb
jecxz
in
push
gs
mov
xlat
sarl
or
dec
jb,pt
gs
aam
scas
dec
ret
sbb
shl
or
sub
pop
jo
enter
xchg
or
pop
nop
mov
cmpsl
lret
cmp
int
pop
js
inc
xchg
fptan
jle
mov
in
daa
imul
movb
lahf
mov
adc
xchg
enter
adc
in
movsl
cwtl
xchg
nop
inc
dec
fbld
pushf
pop
jmp
aaa
popf
jmp
jge
les
jle
mov
imul
out
inc
leave
into
js
adc
dec
pop
xchg
xor
dec
call
or
out
test
scas
inc
clc
cmpsl
pop
cmp
divb
mov
push
andl
rcrl
fcmove
jecxz
push
sti
movsb
jle
stos
aas
loop
cmpsl
rcrl
addb
add
daa
mov
mov
cld
pop
xor
mov
lahf
adc
mov
sbb
adc
xchg
ljmp
leave
shll
sub
loop
addr16
inc
shrb
jmp
mov
inc
jmp
fcmovnb
or
js
xor
sbb
mov
into
pop
cmp
test
popa
sbbl
shrl
xchg
aad
and
int3
xor
out
cmp
push
sti
lds
mov
es
mov
ror
sub
in
xor
cwtl
jne
enter
cli
jecxz
sbb
lds
outsl
scas
mov
or
out
sub
pop
fcoms
das
and
cmp
gs
lcall
jno
fcomps
xor
fs
fisubs
cld
and
je
fnstenv
push
mov
int3
aam
repnz
or
rcl
vunpcklpd
mov
pop
das
je
shlb
aad
fstl
inc
aam
push
daa
jmp
cmp
lods
or
mov
rorl
jecxz
lock
push
test
ja
or
adc
loop
xor
stos
jmp
mov
cmp
clc
int3
test
call
jbe
lods
dec
pop
loopne
add
push
jp
pushf
ss
inc
fdiv
jne
jge
sbb
pop
push
call
xchg
mov
int
daa
mov
jmp
or
hlt
cmp
pop
jbe
lahf
lret
loop
ja
jbe
popl
xchg
jae
out
leave
mov
mov
imull
jecxz
lahf
iret
sti
xchg
sbb
aas
sbb
mov
fidivrs
sub
inc
stc
ss
test
je
mov
aam
and
mov
scas
push
pop
lock
pop
jbe
add
push
popf
sbbl
cmpsb
aaa
inc
aad
lods
pop
or
je
mov
or
fdivl
mov
test
cmp
test
cmp
pusha
xor
fstl
cmpsl
or
lock
iret
test
mov
jl
cmp
lret
pop
fwait
aaa
jno
inc
or
sub
mov
xchg
dec
lahf
inc
lods
push
mov
pop
fistps
ret
fistps
xchg
xchg
mov
xchg
stos
inc
jecxz
les
faddl
bound
popf
mov
call
loope
int
aam
push
lods
adc
and
and
aaa
int
xchg
and
enter
addr16
push
call
aad
rep
je
fsubl
pop
mov
addr16
mov
ret
adcl
out
sub
cltd
jae
hlt
gs
nop
xchg
sbb
insb
inc
jne
stos
xchg
shlb
mov
leave
loop
mov
aad
mov
xchg
arpl
cmp
lcall
arpl
or
movsb
popf
mov
sub
push
testb
or
or
dec
pusha
mov
loopne
sub
inc
loope
mov
fldenv
mov
or
cmp
push
dec
daa
mov
pop
sbb
les
bound
scas
ljmp
cmp
sarl
out
xor
xlat
push
adc
imul
jl
in
cmp
repz
aam
mov
movsb
dec
scas
stc
mov
gs
dec
aam
add
adcb
mov
stc
test
mov
and
xchg
lret
jae
mov
enter
fidivrl
shr
xor
mov
mov
add
xchg
xor
push
push
push
sbb
data16
xlat
xchg
jle
and
scas
mov
into
sub
lods
call
mov
aas
shll
and
or
add
add
jne
xor
es
pop
mov
mov
pop
or
mov
mov
jns
fwait
add
lcall
adc
mov
mov
push
rcrb
xchg
jno
in
cwtl
pop
inc
rorb
jle
ret
jp
xchg
fsubr
jge
mov
ret
icebp
enter
or
jg
and
test
idivb
push
shll
fs
idivb
lods
inc
out
aam
lods
xlat
lret
dec
mov
imul
jmp
xchg
lret
mov
jecxz
cs
mov
test
outsb
in
or
mov
xchg
or
movsl
adc
xchg
jns
cmp
lods
addl
sbb
lods
inc
int
pusha
lods
sbb
mov
mov
cmp
mov
inc
rol
hlt
test
ret
das
push
std
pop
in
cmp
sarl
out
and
ss
loopne
add
out
push
xor
rcr
pop
mov
in
into
in
cmp
sbb
arpl
or
xchg
or
gs
cmp
mov
mov
sub
fsubr
xor
dec
pop
cmp
das
mov
pop
ja
mov
cmp
and
roll
sar
icebp
xchg
mov
dec
pop
xchg
cltd
sahf
xor
mov
mov
fstpl
imul
pusha
mov
in
push
aam
mov
std
cltd
mov
rol
push
pop
sarl
cmp
jbe
jp
add
adc
add
sti
jp
inc
loope
adc
xor
in
popa
or
sbb
add
rorl
shlb
loop
dec
dec
xchg
jge
sahf
in
into
data16
mov
adc
scas
or
cmp
outsb
sbb
lds
cmpsl
mov
push
stos
fstpt
push
fldt
xor
xor
popf
enter
in
add
inc
or
jae
inc
mov
pop
inc
lock
fbstp
stos
xor
fwait
mov
xchg
test
sub
rcrb
insb
mov
into
mov
jbe
xchg
popf
stos
test
pop
push
xchg
sahf
ss
cmp
sarb
sbb
fisubrl
dec
inc
cmpsl
push
ds
mov
fs
mov
inc
test
mov
ds
add
clc
sbb
dec
cmp
subb
gs
sub
pop
adcb
mov
jle
lods
scas
scas
pop
mov
out
test
adc
sub
add
pop
xor
mov
out
sub
lock
setnp
adc
je
mov
push
xchg
and
pop
gs
jle
sbb
dec
andb
repz
jnp
jb
and
fwait
pop
repnz
push
out
ljmp
mov
test
outsl
sahf
and
imul
sbb
sbb
mov
loop
push
push
js
nop
xchg
add
and
loop
call
push
lcall
push
lcall
push
out
daa
mov
shll
jp
in
jecxz
jno
lea
fcoms
gs
sbb
fwait
pop
xchg
add
rol
sbb
in
loopne
jo
inc
mov
cli
lods
mov
mov
inc
rcrb
jae
and
or
mov
jnp
mov
pop
sub
out
mov
push
hlt
int
push
or
leave
xlat
lds
xor
pop
push
dec
lods
ljmp
addr16
jns
mov
pop
cli
aad
scas
or
lea
and
adc
stos
mov
fnstsw
mov
or
fwait
xchg
sub
push
xchg
loopne
das
mov
adc
dec
mov
mov
and
lret
mov
push
cltd
lock
mov
test
mov
fidivs
or
cs
adc
push
repz
jecxz
mov
add
cmp
cmpsl
sub
js
and
xchg
test
push
pushf
loop
pop
out
mov
push
jbe
mov
or
xchg
cli
push
mov
xlat
xchg
fsubrs
or
dec
lods
mov
pop
cmp
pop
mov
js
push
out
and
pop
fistpl
fnsave
cltd
lret
lahf
testl
jecxz
push
mov
cmpsl
push
mov
movsb
add
push
stc
push
fisttpll
push
push
xchg
mov
jle
adc
daa
inc
xchg
scas
add
and
inc
stc
mov
or
and
fdivr
jns
xor
repnz
inc
sbb
stc
adc
pusha
mov
mov
daa
and
ds
jmp
mov
lock
fisubs
loopne
mov
leave
repz
jl
or
add
xchg
mov
and
in
inc
jl
dec
mov
mov
fwait
pop
xlat
dec
sahf
dec
mov
insl
sbb
pop
cwtl
push
mov
std
ja
pop
outsb
mov
pusha
negl
call
mov
dec
inc
out
stc
test
sub
mov
out
xor
enter
push
loope,pt
clc
mov
inc
cmp
jbe
adc
test
lock
aam
rcll
xchg
out
aad
dec
test
sub
push
leave
insl
lea
sub
shrl
pop
jo
mov
sarb
std
rolb
stos
shrb
int
jg
or
movsb
jl
push
xchg
add
aad
add
xchg
sub
mov
clc
or
mov
aas
je
push
mov
lret
bound
cmpsb
insl
add
mov
pop
loopne
or
les
and
jne
aas
leave
fsts
lock
dec
lods
pop
dec
pop
push
aam
xor
movsb
push
shll
sbb
add
popf
scas
and
add
std
mov
in
pusha
mov
mov
mov
dec
arpl
push
shll
ja
push
lds
mov
and
push
fidivs
mov
and
mov
or
or
fstpt
add
sbb
lods
cmp
jle
in
add
pop
jae
xchg
popa
dec
sbb
lea
adcb
rcrl
addr16
outsb
dec
add
add
ds
fs
xlat
outsb
orb
loop
mov
mov
pop
cwtl
mov
jmp
add
xchg
add
iret
push
std
xchg
xchg
jg
icebp
dec
in
ljmp
out
lods
push
jecxz
add
roll
mov
mov
stos
cmp
xchg
pop
inc
push
xchg
add
pop
test
in
inc
stos
mov
test
push
jnp
or
sbb
inc
cmp
js
and
lret
ja
data16
pop
adc
je
jne
fidivs
mov
orps
xchg
xchg
or
sbb
xchg
lods
inc
or
pop
inc
push
movsb
faddl
xchg
lock
dec
inc
dec
dec
jle
jle
fistl
es
rcl
push
repz
add
push
mov
fnstenv
and
inc
aam
aas
sub
pop
mov
or
rcrb
xlat
dec
push
adc
scas
inc
out
dec
out
xchg
fwait
mov
movsl
icebp
mov
mov
mov
xchg
xor
popa
into
push
cmpsb
ror
cmp
out
push
out
ds
dec
sub
adcl
addl
fwait
jb
jns
inc
push
jmp
jg
gs
xor
pop
cmp
test
jne
out
push
mov
push
out
cmp
mov
dec
mov
jns
aas
js
cmpsl
xor
sbb
sub
adc
flds
fdivr
mov
adc
push
popf
mov
xchg
or
sarl
lods
adc
or
std
lods
inc
fwait
inc
fbstp
std
mov
popf
andb
sub
sub
test
popf
test
sti
pusha
sub
xchg
test
dec
daa
into
dec
ds
stos
cmpsb
xchg
dec
adc
fdivr
inc
sbb
test
adc
out
lds
adc
sub
dec
leave
fdivrs
ja
popf
pusha
out
jmp
xchg
dec
mulb
add
push
fwait
pop
in
mov
push
out
inc
movsb
sub
push
push
cs
push
xor
xorb
xlat
xlat
cltd
pop
mov
into
dec
mov
jmp
andb
popf
int
xchg
pop
out
or
fstl
pop
cmp
shrb
fs
cmp
jp
push
movsl
mov
sbb
adc
add
insl
jge
or
test
psubq
rcll
push
cli
or
fstpt
xchg
jl
xlat
outsb
out
imul
rolb
pop
icebp
dec
clc
adc
in
call
jb
mov
fucom
add
mov
loopw
imull
cmp
and
jno
cmpsb
lock
popa
mov
and
adc
sub
cmp
jmp
jmp
lahf
and
sub
or
mov
loopne
and
adc
jp
pushf
lods
setl
outsl
push
mov
xor
xchg
test
cmp
inc
movsb
movsl
push
leave
add
int
push
insl
mov
pop
sbb
fbld
lds
dec
sti
xchg
dec
rcl
or
pop
call
jo
sub
cmp
out
movsb
dec
dec
movsb
push
add
mov
gs
jmp
add
leave
dec
jmp
in
cmpl
xor
sub
sub
push
xor
test
cmp
decl
mov
inc
mov
xor
jbe
shlb
and
pusha
inc
sub
ficompl
lahf
mov
xchg
repnz
adcb
jnp
mov
mov
mov
sbb
mov
stos
fisubrl
ss
cmc
sbb
mov
mov
jle
cmp
mov
shlb
pop
dec
pop
fsubrs
into
jmp
fisubs
jg
daa
cmp
push
dec
loope
ret
idiv
pop
pop
dec
mov
inc
cmp
push
xchg
ds
mov
movsb
sbb
fdivrs
add
add
daa
mov
in
stc
jb
lods
ss
ljmp
test
mov
push
mov
mov
scas
loop
iret
jmp
shlb
sub
leave
enter
add
aas
rcrl
pop
push
pushf
out
lahf
stos
lcall
pop
aaa
lret
into
adc
sbb
dec
hlt
pop
fmuls
mov
push
fistpll
jg
aaa
loop
sbb
imulb
dec
sbb
mov
mov
into
cmp
adc
and
lret
shrb
aad
mov
jns
lcall
test
push
ds
mov
dec
dec
cwtl
scas
popf
or
ffree
push
rsqrtps
lock
loop
stos
mov
testb
jp
mov
call
shld
fcomip
dec
lock
jns
addr16
dec
jle
inc
daa
outsb
adc
sbb
xor
xor
dec
pop
out
std
xchg
sbb
pop
adc
inc
fisubrl
sub
mov
cld
rclb
test
jnp
sahf
xor
ja
mov
arpl
imul
jbe
aad
push
cmp
cltd
push
ljmp
iret
or
cltd
jb,pn
rcrl
sbb
xor
bnd
jp
cmp
in
int3
sbb
rcr
daa
nop
fimuls
out
cltd
mov
aaa
jmp
shl
cmpsb
mov
xor
in
pop
adc
cmp
jbe
xor
jnp
cmp
mov
ss
gs
les
outsb
mov
mov
mov
pusha
sbb
cmpsb
mov
lcall
fidivs
pop
mov
gs
inc
mov
cmp
stc
dec
out
leave
stc
jmp
jns
sbb
or
imul
mov
jle
mov
xchg
pop
aam
xchg
lock
repz
mov
pop
mov
aam
jnp
inc
andb
jo
mov
sub
jle
fs
icebp
pop
xchg
roll
dec
pinsrw
sbb
push
mov
sbb
mov
iret
jecxz
fmulp
xchg
mov
jo
test
jae
test
test
ret
cmp
cmc
hlt
lret
jb
pop
ds
xchg
mov
add
jmp
out
sbb
adc
dec
movb
and
sub
es
stos
or
clc
xchg
jecxz
dec
sbb
arpl
sub
push
xchg
pop
out
pop
lret
xchg
cmp
aam
fnstsw
cmpsb
out
fstpt
aad
mov
pop
cltd
mov
repz
int3
adc
cmp
vprotb
jl
mov
sub
jecxz
call
pop
fucom
push
nop
sarl
testb
cmp
cld
dec
inc
sub
out
xor
cmpb
jns
sbb
jne
dec
sar
out
dec
aad
rol
aad
cs
cmp
cmp
in
jmp
jmp
push
or
stc
mov
push
mov
pop
les
dec
mov
vxorps
pushf
jo
daa
sbb
dec
incl
repnz
or
and
inc
lock
sbb
or
jo
out
xorl
in
push
jbe
mov
dec
add
pop
sbbl
subl
cltd
movsb
mov
add
out
test
inc
aad
test
mov
pop
test
js
jns
mov
ljmp
gs
inc
arpl
mov
fnstcw
call
jbe
ljmp
lcall
xor
mov
repnz
mov
addl
jne
adc
icebp
dec
mov
jo
sub
addr16
rcrb
xchg
hlt
movl
push
or
insl
mov
lods
out
cmc
gs
nop
push
das
cwtl
xor
sbb
inc
xor
xchg
ficompl
and
imul
inc
clc
addr16
movd
mov
scas
inc
push
pop
hlt
or
mov
mov
lea
icebp
mov
mov
add
movl
ljmp
std
mov
or
in
add
mov
iret
pop
popf
inc
push
lock
and
ja
dec
mov
fldl
mov
cmp
jp
push
lods
imul
bt
xor
lods
dec
lock
or
xchg
push
scas
repz
loopne
or
jg
adc
inc
lcall
cmpb
cmp
in
mov
mov
push
ds
pop
mov
push
add
rcrl
mov
mov
inc
es
sbb
push
jp
repz
cmp
cmp
stc
add
and
cltd
and
fcmovne
shlw
stc
jns
jge
daa
mov
xor
shlb
daa
je
scas
adc
mov
mov
je
mov
scas
xor
das
add
rcll
dec
add
pop
loop
mov
aam
inc
mov
dec
jne
pusha
icebp
aam
stos
nop
dec
repnz
mov
sub
add
sub
gs
pop
adc
inc
sub
es
push
pop
ficomps
jnp
or
cmc
xchg
call
or
rcll
ljmp
nop
cld
inc
dec
aas
push
push
and
inc
push
dec
adc
jnp
mov
notl
or
jbe
jle
stc
mov
ss
pop
stc
roll
mov
sub
mov
popl
push
xlat
aaa
out
nop
in
fisttps
fbld
aaa
jbe
inc
push
imul
loop
cld
pushf
gs
insl
adc
jmp
mov
dec
mov
xor
stos
xorl
and
in
adc
fimuls
push
lds
scas
push
sub
xchg
sbb
int
scas
aad
les
cmc
cld
mov
push
push
pop
repnz
mov
pop
call
xchg
hlt
mov
shrb
add
push
outsb
or
xor
inc
dec
pop
notb
ret
or
inc
xor
inc
arpl
fidivl
fs
icebp
int3
gs
loop
pop
imul
push
stos
vmovhps
sahf
inc
scas
xor
mov
fidivrl
rep
push
sub
out
add
ds
lcall
add
loopne
addr16
sbbb
push
in
push
mov
daa
mov
imul
xor
stos
add
ret
xchg
mov
je
sbb
jae
loop
mov
leave
mov
rolb
mov
ficoms
mov
inc
lock
xchg
inc
daa
ja
aam
adc
daa
jmp
jmp
cwtl
jmp
mov
insl
mov
jecxz
aad
or
dec
pop
leave
flds
jecxz
or
or
mov
sbb
sbb
xchg
adc
ja
loope
sub
mov
add
inc
cmpsl
ret
mov
int3
sbb
inc
jecxz
jnp
inc
test
inc
insb
mov
inc
mov
lea
dec
jecxz
dec
clc
mov
cli
mov
mov
rcrb
sub
das
lea
sub
xchg
fadds
add
je
scas
movsl
fldt
sbb
lret
sub
inc
shlb
es
mov
int
sub
addr16
repnz
xlat
sub
mov
fiadds
in
push
mov
adc
pop
jae
xor
mov
push
into
leave
hlt
shrb
rdpmc
mov
icebp
mov
jmp
fwait
sbb
mov
rcll
add
inc
movsl
fincstp
sarb
add
arpl
sub
dec
dec
and
rorb
ficoml
jo
dec
sti
popf
stc
and
and
aam
outsb
pop
add
pop
cmpsl
mov
popa
mov
dec
cmp
mov
shll
cli
adc
ljmp
loope
add
shll
sbb
adc
cmp
imul
sub
lock
push
push
sub
test
scas
hlt
loopne
fistl
jne
adc
ret
mov
push
lods
popa
sub
popa
cld
out
popf
inc
cwtl
mov
push
jnp
ffree
clc
xor
pop
mov
test
subb
scas
insl
pop
rcll
mov
test
rolb
add
xor
mov
lods
xchg
mov
shrl
dec
inc
mov
int3
push
jbe
adc
lret
add
and
ficoms
mov
lds
xchg
test
push
push
sbb
out
and
dec
fbld
mov
mov
cs
notl
xchg
push
xor
repz
cwtl
gs
xor
inc
adc
cmpsb
jbe
fstpt
inc
js
pushf
xor
xchg
or
add
icebp
mov
imul
jmp
sbb
mov
lea
aaa
mov
in
shlb
ud2
mov
ret
nop
pop
jo
fs
push
cmp
fs
fimuls
test
pop
mov
pop
sbb
adcb
xor
adc
xchg
cmp
cmc
xchg
push
inc
int3
arpl
psubq
out
aaa
sbb
mov
js
mov
xor
mov
dec
ret
and
call
mov
int3
ret
dec
jns
add
pop
in
test
jne
mov
cli
xchg
pushl
scas
dec
pop
push
or
pop
xchg
inc
iret
cmp
in
clc
pop
dec
push
insl
cld
or
imul
insl
jl
jecxz
dec
lcall
and
test
cwtl
shlb
add
shrb
dec
gs
inc
enter
scas
or
aam
aam
stos
xchg
call
sub
shll
fsubrl
pop
jg
xlat
jecxz
or
cli
fadd
inc
out
or
inc
ffree
jl
lock
mov
scas
cmp
jg
in
outsb
ds
shlb
pop
adc
cli
push
daa
outsl
cmp
add
mov
mul
xchg
scas
ffree
jb
sbb
adc
mov
test
stc
and
or
xor
jmp
xchg
repnz
subb
fcmovbe
insl
cmpl
into
gs
aas
jo
add
xor
push
fs
mov
inc
loop
mov
lds
aam
push
loopne
outsb
mov
jne
in
fistl
int
cli
out
and
cmp
sbb
scas
nop
std
je
inc
nop
mov
sub
or
ds
pushf
arpl
push
ss
jno
clc
lahf
arpl
sahf
pop
pop
push
outsl
mov
test
mov
add
in
pop
outsb
sbb
arpl
mov
daa
fisubrl
bound
arpl
dec
pop
in
jecxz
mov
mov
std
fsts
push
dec
fwait
test
mov
xor
iret
xchg
rcrb
ljmp
call
jnp
sbb
addr16
push
pusha
subb
jno
sar
pushf
or
jno
test
ja
add
movsl
bound
sbb
adc
hlt
cli
cld
data16
jg
add
addr16
mov
inc
or
insb
cmp
add
roll
mov
jle
jl
nop
jl
sbb
fwait
into
adc
enter
xor
mov
and
jmp
push
or
inc
xlat
movl
pop
outsl
mov
popa
clc
das
push
sti
es
jg
fldcw
and
lret
out
and
mov
sub
test
pop
repz
pop
mov
cmp
xchg
test
cmp
sbbb
xchg
sub
fstpl
xlat
repz
push
mov
int3
stos
pop
lock
add
cmpsl
sub
xchg
jns
or
jmp
cmpb
push
jae
arpl
in
mov
dec
aaa
adc
lods
popa
push
push
push
les
sub
sub
loopne
test
in
lock
cmp
fidivrl
in
aad
pushf
cld
mov
lds
jb
push
movsb
repz
mov
outsl
push
inc
mov
pop
lods
mov
test
les
mov
push
xor
stos
repz
shll
jecxz
xchg
ficoml
push
js
in
ja
das
push
hlt
inc
cmp
fbld
mov
mov
ficoml
outsb
jns
insl
xchg
xor
inc
push
movsl
jno
subb
mov
sub
hlt
and
sahf
fdivs
dec
imul
stc
idivl
popf
mov
ret
popf
dec
jno
test
rcr
lcall
sub
in
add
je
pop
in
sahf
sbb
and
xchg
mov
lahf
popf
lods
les
addr16
call
pop
lds
cmp
je
jmp
push
inc
popf
lahf
jg
aad
es
xchg
into
mov
sbb
ss
aas
movsl
jnp
fsubl
lcall
mov
pop
outsb
fsubl
mov
popa
xor
clc
call
test
aaa
leave
pop
adc
rcrb
sti
sub
shl
insl
xor
fldl
popa
js
ficoml
repz
scas
cmp
sub
mov
mov
addr16
inc
mov
dec
dec
adc
mov
test
pop
cmp
ss
aaa
push
icebp
sti
mov
sbb
loope
mov
fisubrl
mov
pop
lods
cmp
dec
add
imulb
ss
scas
push
scas
cmp
divl
adc
int3
inc
mov
es
outsb
sbb
sbb
loope
fxch
xchg
or
repnz
sub
xlat
ret
add
cli
or
dec
arpl
inc
aas
mov
lock
js
sarb
xchg
adc
or
test
adc
cmp
shlb
cs
cmp
into
dec
and
out
aad
sub
movsb
lods
add
sbb
push
sub
jnp
xor
xchg
out
inc
test
dec
ret
and
imul
and
xor
xor
loopne
clc
nop
lahf
int3
lods
mov
rcrb
dec
pop
mov
aam
dec
test
hlt
cmp
loop
cs
mov
out
repnz
mov
sbb
rcl
pop
lahf
mov
push
sub
dec
stc
aaa
adcb
subl
pop
mov
lcall
fadds
and
mov
rolb
lock
dec
sbb
pop
repnz
or
push
mov
xor
stos
mov
test
cmp
outsb
cld
shl
fimuls
push
dec
inc
sar
gs
cmp
gs
lahf
adc
es
xchg
ret
out
mov
sbb
je
ror
aas
flds
cmp
xor
jbe
cmp
lahf
adc
or
nop
cmp
fsts
inc
scas
cmp
maxps
pop
lods
fdivr
pop
push
iret
sahf
add
mov
inc
xchg
lods
mov
rcrl
jg
hlt
pop
mov
and
mov
lret
iret
jmp
mov
aaa
shl
jnp
add
inc
lret
clc
pop
dec
sub
pop
dec
cmc
adc
push
stc
dec
pop
loope
in
xor
add
scas
pop
test
loope
lahf
pop
shll
lods
pop
xchg
aaa
jecxz
imul
add
pop
cltd
test
xor
jnp
fimuls
iret
scas
xor
pop
add
cmp
loop
fcompl
jnp
out
mov
leave
jmp
mov
pop
xor
cs
int
movsl
mov
fmull
out
fidivrl
push
loope
rcr
fdivrs
sbb
test
out
inc
or
sahf
push
jl
cltd
je
dec
cld
lcall
shl
xor
xchg
pop
fidivl
cmp
cmp
rcll
add
jne
arpl
in
shr
ds
cmp
insb
push
cld
rorl
lret
sbb
and
call
mov
iret
mov
cmp
insl
and
inc
xchg
xor
xchg
cmp
xor
jo
sub
jbe
cmp
or
push
rcrl
pop
imul
loop
inc
push
jl
stc
idivl
insl
test
lret
hlt
xchg
pop
iret
adc
add
sub
or
pushf
in
test
popa
mov
sbb
push
mov
jbe
or
outsl
mov
or
leave
pusha
sbb
out
cmpsl
mov
cmpb
divl
scas
pop
inc
fcoms
lea
push
push
xor
mov
fstpt
pop
xor
push
jae
inc
js
jne
aas
sbb
insb
add
movsb
gs
sub
popa
and
xchg
int3
lret
mov
xor
inc
pushf
pop
in
js
pop
dec
and
jge
inc
out
jle
xor
ret
fsubrp
hlt
ljmp
and
ficoms
test
lret
sub
adc
fsub
jo
fbld
ret
push
ret
int
push
insl
add
shlb
lds
jns
push
jg
adc
jb
xor
fidivrs
pop
ss
mov
push
or
add
xor
mov
add
aas
push
adc
mov
ljmp
test
addl
add
xor
shr
ja
adc
jmp
roll
pop
leave
pop
adc
pusha
iret
imul
daa
mov
xchg
jno
xor
int3
lods
and
stc
mov
scas
ds
popf
mov
pop
mov
push
jmp
inc
pop
imul
xchg
mov
cld
mov
notl
push
loopne
pop
std
nop
xchg
sti
int
test
sub
cmpsl
jno
fstps
sub
nop
mov
jnp
ds
cmp
sarb
js
rcrb
xchg
push
std
addb
addr16
sub
int3
jg
push
fbld
popf
xor
mov
movsl
pop
sbb
int3
add
adc
scas
adc
aad
out
icebp
sbb
xor
ret
sbb
add
inc
daa
bound
call
inc
inc
pop
les
movsb
and
xor
popf
mov
mov
xchg
gs
xchg
iret
sub
pop
pop
stos
cmpsb
adcl
sub
jns
rcl
jnp
gs
divl
stos
jb
jnp
and
outsl
loop
iret
and
pop
insb
jmp
mov
push
icebp
mov
and
int
movsb
fimuls
pop
mov
daa
xchg
mov
aas
jb
xchg
pop
fcmove
clc
out
inc
mov
cwtl
jnp
cmp
das
fbstp
addr16
gs
pop
mov
jg
pop
shl
cmpl
jl
repnz
insl
add
cmp
pusha
out
cmp
cs
mov
jl
push
out
cmp
pop
testl
call
xor
clc
pop
scas
cmpl
xor
lods
push
mov
add
lods
and
icebp
lret
bound
imul
dec
sbb
fcomps
mov
jp
cli
mov
xor
mov
inc
pop
out
insl
ja
in
loope
mov
in
adc
adc
js
inc
sbb
lret
fwait
imul
cli
cmp
cmp
xor
inc
ret
mov
mov
fsubl
adc
cmovns
jns
mov
dec
lret
mov
push
insl
push
add
in
fcmovnb
sub
jg
add
fisttps
add
ffreep
out
push
lods
inc
push
mov
lret
popa
test
push
out
cmp
call
pop
call
lds
out
mov
in
mov
mov
jb
int3
roll
adc
inc
fyl2x
push
iret
inc
inc
cmp
lock
push
or
lret
es
rcll
add
xor
and
je
movsl
ljmp
popf
xchg
and
mov
iret
loop
shll
nop
jno
aaa
stos
push
sbb
dec
dec
or
pop
scas
sub
pop
mov
frstor
add
fwait
push
hlt
mov
loopne
mov
int
movsb
pop
push
scas
pop
pushf
xor
daa
xorl
add
shlb
jle
mov
adc
xor
cmpsl
lcall
adc
push
mov
out
xor
stos
inc
mov
adc
test
jecxz
pop
popf
xor
fistl
out
outsb
mov
add
dec
push
xor
jno
sbb
or
mov
cmp
loope
cmp
ret
test
das
popa
clc
cmp
out
sbbl
into
rol
pop
sti
or
jns
fsubs
pushf
int
add
sti
and
out
ret
outsb
fistps
testl
sti
xchg
mov
xchg
sub
rcrl
add
cld
adc
sub
adc
gs
cmp
mov
in
clc
mov
movb
mov
int3
icebp
mov
insl
rorl
mov
and
jnp
sbb
call
lods
insl
repz
aaa
rcl
push
loope
leave
arpl
mov
push
out
pop
dec
out
jnp
mov
mov
add
mov
fadds
rcr
je
lods
sbbl
xor
xchg
jbe
outsb
test
inc
fs
xor
out
sbbb
push
js
add
andb
sbbl
out
xor
push
jae
fidivrs
cmp
outsb
test
lods
rcrb
add
dec
mov
rorl
sub
ret
cmp
scas
and
adc
or
fcoms
jae
and
scas
mov
xchg
testl
test
cmp
mov
pop
or
icebp
rorb
scas
xchg
insb
pop
cli
dec
or
cmp
orl
inc
ss
mov
test
int
jnp
or
mov
push
aad
orb
in
scas
adc
mov
lock
hlt
or
add
jns
outsl
push
out
dec
push
je
imul
cs
mov
adc
inc
cmp
mov
cld
mov
inc
inc
pop
adc
adc
int3
xchg
add
xchg
xchg
xchg
xchg
out
bound
sbb
imul
push
ss
mov
mov
iret
or
aaa
add
arpl
cli
pop
orb
dec
div
adc
cmpl
aas
out
xor
sbbb
push
sub
or
shlb
sub
outsl
pop
push
dec
cmpsl
cmp
mov
orl
int3
xlat
or
push
jmp
lods
jp
sbb
jb
push
adc
int3
lret
jp
je
mov
leave
xchg
aam
pop
decb
in
mov
sub
push
cs
das
pop
loope
mov
inc
lret
inc
out
js
and
icebp
cmp
push
push
repnz
inc
aas
adc
les
dec
mov
imul
imul
out
dec
mov
or
addl
pop
mov
loope
jnp
scas
sbb
sbb
repz
mov
fiadds
inc
mov
pusha
xchg
add
cmp
fbld
push
imul
mov
andl
addl
cwtl
es
outsl
out
push
loop
sbb
add
int3
push
out
xchg
mov
daa
outsb
add
mov
test
dec
in
test
scas
rcrb
mov
iret
cpuid
sbb
mov
movsl
mov
fdivrl
ret
aad
nop
out
testl
mov
jg
dec
es
hlt
mov
outsl
rol
enter
inc
loope
mov
ds
scas
leave
out
inc
or
int
cs
aas
aad
fsubrp
adcb
ret
cmp
inc
pop
clc
ja
cmp
lock
scas
push
add
push
xorl
ljmp
iret
ljmp
inc
and
ficompl
push
or
popa
push
jmp
mov
push
lret
jb
lret
mov
into
jp
mov
xor
in
inc
cltd
jnp
sub
adc
cmp
push
lret
rcrb
push
jo
sbb
mov
cmc
outsl
mov
adc
and
mov
std
outsl
jecxz
dec
sbb
jnp
cli
fists
push
es
pusha
push
fiaddl
jecxz
outsb
cmp
ret
scas
scas
and
push
lods
outsl
mov
cld
iret
cltd
mov
insl
loopne
rcrb
push
pop
add
aas
and
pop
adc
sbb
xchg
inc
sti
pop
outsl
ss
jp
pop
push
mov
sbbb
scas
xchg
aaa
addr16
mov
bound
imul
in
add
nop
rdmsr
mov
insb
jecxz
cmpsb
push
cmp
pushl
or
ret
in
push
stos
popa
xor
xor
out
mov
sbb
rol
jmp
cmp
cwtl
add
pcmpeqb
gs
xchg
xchg
pop
fwait
repnz
dec
negl
adc
loope
or
out
lahf
ret
mov
movsl
add
sti
adc
jns
dec
rdtsc
jno
sub
xchg
mov
add
or
test
or
sub
push
cmp
jecxz
xchg
lock
js
nop
push
or
xchg
mov
mov
ret
xor
lahf
lods
in
sahf
or
adc
cmp
shrb
lea
inc
dec
pop
jl
sarb
scas
ficoml
or
sub
fdivrs
mov
insb
dec
pop
dec
subl
enter
cmpsl
sub
cmpsl
mov
xchg
cmp
mov
out
sbb
xor
jmp
mov
mov
lds
call
les
xchg
int3
fildll
cs
xchg
pop
in
test
sbb
xor
in
add
je
dec
mov
xor
mov
lcall
mov
or
inc
lea
ds
jle
loope
jle
out
add
rorl
cld
or
loope
push
stc
jle
incl
cmp
pop
cmpsb
test
test
fimuls
aad
mov
das
popf
pushf
xchg
rorb
sub
xchg
fs
aam
or
pop
in
loopne
or
into
das
fwait
add
inc
push
adc
push
mov
xlat
jno
aad
mov
clc
mov
cmp
xchg
je
xchg
xchg
mov
lahf
mov
sbb
ja
inc
outsb
cmp
dec
adc
fldl2t
add
ret
fisttps
lock
xchg
push
sbb
movsl
icebp
cli
pop
mov
test
pop
pop
push
int
xor
andl
add
sbb
clc
dec
cmpsb
sub
js
fisubs
and
loope
dec
ss
and
xor
cmp
mov
mov
out
aas
jge
push
mov
aas
dec
repz
xchg
stos
cmp
pop
icebp
jne
adc
cmpsb
sub
fs
insb
call
gs
jg
ljmp
lcall
or
pop
daa
jns
fnstsw
pop
les
jo
adc
lahf
pop
or
sub
in
cmc
inc
aaa
fucom
sbb
pushl
sbb
pusha
add
test
pop
xchg
jge
inc
dec
lds
push
inc
aad
jp
movsb
jg
fnstenv
std
fstps
test
add
pop
test
divl
sub
dec
popa
fimull
and
xchg
xchg
sbb
mov
pop
and
dec
pop
mov
lret
ja
mov
pusha
js
lcall
in
shll
dec
roll
inc
fwait
lahf
lret
pop
sub
shlb
xchg
dec
push
rcll
xchg
lret
dec
cli
lods
mov
loopne
add
mov
pop
sbb
lret
push
mov
call
std
cltd
dec
stos
je
sub
or
jecxz
add
xchg
movsl
mov
mov
outsb
cwtl
sbb
add
xor
aaa
std
push
push
stos
cli
lea
les
aam
imul
test
loop
cmp
sub
cltd
or
push
bound
sub
out
inc
dec
fucomi
test
sub
mov
pop
xchg
insl
mov
shl
dec
out
mov
mov
aad
pop
mov
mov
add
adc
sub
xchg
scas
mov
lock
mov
les
xchg
jno
bound
shll
and
xchg
add
dec
sbb
in
mov
loop
sbb
dec
and
lahf
or
fstpt
pop
fcoml
inc
lods
insb
add
fsubs
mov
ljmp
xor
cmp
clc
inc
mov
pop
cmpsl
mov
pop
in
mov
xchg
test
fs
jne
pop
fsubp
popf
gs
sbb
je
dec
data16
fwait
adc
sbb
jp
pop
movsl
push
jb
pop
popf
xchg
mov
jl
sbb
jo
jbe
xor
adc
push
gs
push
add
jp
mov
mov
jo
popf
mov
dec
cmp
adc
xchg
xor
lahf
divl
add
les
rcl
jo
mov
enter
jmp
fsubs
jae
cmp
subl
shl
stos
test
movsl
gs
add
lds
adc
cmp
pop
clc
xchg
insb
inc
out
pop
je
addl
loopne
adc
dec
inc
push
in
xor
je
or
lods
cmp
dec
out
scas
mov
jns
addl
popa
cmpsb
xor
xor
sub
sub
add
xor
rolb
and
sbb
outsl
inc
fs
cmpsl
mov
adc
inc
into
xchg
xor
cmp
jge
insl
mov
dec
add
sub
or
xchg
fdivrs
sbb
pop
gs
or
cmp
pusha
dec
jmp
ds
movsb
js
jmp
lds
inc
inc
add
bound
push
les
ss
sub
phaddd
aaa
push
bound
test
adcl
push
mov
or
sbb
jnp
pop
lea
in
aad
das
cmp
les
push
sub
lcall
cwtl
cs
cmp
fisttpll
pop
out
pop
pop
sbb
add
and
rorl
test
cmpsb
ja
xlat
decl
dec
push
dec
outsl
iret
dec
and
rcr
lret
bound
lret
hlt
inc
movsb
cmp
jg
pop
pop
ret
pop
push
or
loope
xorb
mov
sub
movl
jnp
in
xor
pop
mov
js
lods
add
inc
data16
sub
bound
mov
movsl
xor
andl
xor
cmp
out
les
outsb
daa
mov
scas
add
mov
js
mov
cli
mov
push
push
dec
mov
sbb
sub
notl
sbb
jnp
xor
fdivrl
or
incb
pop
lahf
lcall
cmp
rclb
xabort
ret
iret
rcll
inc
daa
leave
mov
cld
pop
pop
mov
in
cltd
outsb
add
lock
icebp
add
mov
adc
pop
notl
outsl
adc
ss
insb
sbb
repz
inc
decb
test
xchg
jmp
loop
cwtl
or
adc
sub
jo
cmc
push
xchg
xchg
jmp
scas
stos
sti
push
fst
jle
cld
lret
mov
or
sbb
jge
pop
sub
outsb
push
fsts
or
fidivs
movsl
cli
lods
pop
das
clc
adc
mov
or
fwait
and
xchg
pop
stc
and
jmp
push
mov
rcl
ret
xchg
pop
scas
enter
sub
ret
adc
enterw
mov
popf
adc
dec
ljmp
daa
frstor
mov
test
addl
jmp
mov
pop
lds
ret
mov
mov
out
dec
inc
gs
mov
and
sbb
mov
lds
push
movsl
sahf
cs
orl
call
sub
movsl
cmp
repnz
in
daa
xchg
jnp
mov
xor
leave
aad
jecxz
push
push
lcall
mov
cmp
dec
std
pop
mov
pop
push
xchg
mov
xor
pop
or
insb
jle
adc
lahf
pusha
fisttpll
or
clc
adc
dec
notb
or
pop
cld
or
pop
mov
out
in
dec
fcmove
mov
xchg
and
hlt
push
mov
mov
mov
mov
stc
shlb
aad
scas
mov
fdiv
xchg
sub
push
out
dec
lods
movb
lds
fadds
or
push
fs
jb
xor
sub
mov
out
push
add
inc
xor
adc
orb
sub
mov
hlt
push
daa
scas
ficomps
bound
lahf
in
int
sbb
movsb
outsb
iret
mov
pop
js
test
fisubrs
ret
xor
fsts
dec
or
rcrl
mov
xor
leave
sub
mov
pushf
fwait
xor
insb
bound
adc
ss
cmc
pusha
cmp
mov
nop
pop
jae
jns
sub
mov
cltd
arpl
cmp
dec
dec
mov
jmp
jg
xchg
fadds
sbbl
mov
sub
push
aam
bound
popf
mov
xchg
and
ret
cwtl
adc
xchg
stc
in
cltd
pop
xor
into
imul
test
push
mov
idivl
xor
subb
nop
ljmp
pusha
iret
push
jnp
mov
notl
scas
sub
mov
add
mov
mov
jmp
jmp
testl
pop
and
jecxz
aaa
js
insl
ret
pop
xor
fdivrl
inc
xlat
xor
sbb
push
orb
or
in
mov
les
in
dec
gs
cmp
repz
cmpsl
cmc
dec
in
loopne
jl
icebp
adc
cwtl
shrb
pop
mov
pop
xor
aad
movsb
sti
ja
rclb
ss
ja
rcll
incb
adc
inc
lret
jne
data16
mov
cmp
out
stos
xchg
bound
shlb
inc
mov
push
sbb
decl
in
orl
mov
dec
push
mov
daa
loope
adc
pop
lret
pusha
ficoms
mov
fisttps
scas
xlat
adc
add
fldcw
notb
sti
out
imul
mov
orl
div
jge
xchg
out
loope
push
add
add
hlt
jmp
jmp
jno
jle
loopne
ljmp
fildll
lret
fisttps
push
pop
inc
in
std
jno
fsubl
xchg
adc
fists
push
mov
cmp
inc
movsb
dec
aam
scas
stos
add
ja
xchg
mov
xchg
cmpsb
sub
pop
fwait
inc
fisubl
adc
pop
adc
pop
jl
je
lcall
inc
push
cmp
lret
jl
je
cs
and
out
sahf
rcl
hlt
cmp
or
mov
cs
mov
pop
mov
mov
sarl
inc
and
mov
jl
stc
lods
hlt
bound
addr16
les
lahf
aad
fcomps
out
lcall
inc
add
mov
xchg
inc
popf
jo
rclw
outsb
ret
push
lret
out
sub
mov
shlb
pop
lds
cwtl
xlat
repz
dec
sub
add
pop
dec
test
lahf
inc
lret
mov
cld
pop
dec
mov
out
sub
fbstp
mov
jge
sub
ficompl
sti
loopne
or
int3
js
shrb
dec
stos
movsl
icebp
push
movsb
pop
jg
inc
xchg
or
out
lret
mov
call
jp
cmp
fs
or
push
xor
popf
xor
mov
xchg
sbb
mov
pushl
daa
data16
adc
xchg
bound
nop
push
sbb
das
xchg
xchg
and
sub
aad
pusha
inc
mov
pop
mov
enter
xor
mov
pop
lock
sbbb
scas
out
imul
adc
sub
mov
add
pop
jo
cs
leave
add
imul
sbb
mov
mov
cli
rcrl
pop
push
scas
pop
sub
sub
sub
das
push
push
enter
push
scas
rcrb
andl
notb
push
or
pop
std
mov
mov
pop
dec
in
or
xchg
test
iret
enter
sahf
mov
jecxz
in
jb
xchg
pushf
cltd
or
cltd
test
scas
pop
push
out
cmp
push
in
sbbl
push
loopne
or
adc
or
adc
mov
push
sbb
loop
jne
pop
iret
xchg
push
or
push
aas
adc
inc
fsubrs
dec
popa
clc
imul
sub
repz
testl
dec
decb
mov
xchg
lahf
jle
icebp
movsb
sti
cmpsb
popl
fisubrl
fisttpl
in
outsl
pop
scas
pop
ds
popa
shrb
dec
dec
and
ja
test
scas
mov
pop
mov
repz
gs
cmp
test
aas
out
inc
in
push
mov
aad
pop
inc
iret
shll
xorl
lods
jmp
mov
pop
mov
jno
lahf
push
push
sbb
adc
lahf
js
inc
je
and
lods
inc
sbb
ds
inc
and
lcall
jge
test
jns
and
mov
mov
popa
clc
xchg
push
mov
xchg
movsb
add
or
bound
jbe
loopne
lock
cli
push
test
add
stos
mov
fwait
jmp
cmpsb
ja
scas
or
cmp
std
or
mov
iret
shrl
mov
push
adc
add
xor
je
jo
sub
mov
mov
lret
add
jns
hlt
cmp
add
pop
lock
pop
cmp
jnp
js
rorl
ja
mov
ret
pop
mov
repnz
les
sub
mov
jns
aaa
sti
lret
lds
test
leave
fcmove
ds
sarb
out
imul
sbb
mov
das
add
sub
push
mov
fdivl
xchg
mov
cld
les
movsb
mov
or
aas
popa
xchg
mov
mov
cli
xchg
sbb
mov
and
dec
adc
xchg
ss
ja
int3
mov
mov
sahf
cld
dec
inc
xor
int
arpl
mov
adc
xor
pop
push
ret
jnp
je
and
movq2dq
jbe
aas
push
pop
dec
pop
or
and
test
mov
mov
mov
ret
mov
push
or
dec
fdivl
mov
dec
aam
das
mov
add
incb
push
loope
out
jne
mov
jnp
or
test
in
insl
push
sub
cmc
cmp
lods
aam
decl
sti
leave
call
cmp
shrl
lret
adcb
xchg
insl
or
scas
lds
pushf
xor
inc
dec
rolb
fldl
fwait
movsb
xchg
pop
leave
imul
mov
js
icebp
push
push
outsb
sbb
xchg
dec
gs
mov
aaa
cmpsl
dec
lret
mov
jmp
mov
es
sbb
xchg
sub
roll
ret
dec
push
rcr
jns
fs
lock
jns,pt
mov
aaa
push
fisubl
lahf
nop
inc
sbb
nop
push
mov
or
int
jno
loopne
mov
into
xor
out
push
daa
lahf
lods
pop
rolb
imul
dec
ss
andl
gs
mov
leave
leave
cwtl
mov
arpl
cmp
xchg
rcl
sbb
sub
pushf
jns
inc
lcall
jecxz
inc
test
add
mov
and
leave
es
lcall
lcall
or
push
mov
inc
popf
mulb
jnp
out
adc
pop
mov
ja
fcomps
std
frstor
ljmp
inc
lea
push
out
rclb
mov
inc
and
ss
push
push
lds
dec
aas
dec
mov
dec
pop
js
sbb
push
in
xchg
fiaddl
movsb
lods
mov
lea
mov
jmp
orl
inc
jae
jae
xchg
aam
lods
mov
push
jb
add
adcl
xchg
dec
ret
fists
add
mov
in
adcl
or
jge
subl
notb
xlat
daa
repz
int3
xchg
or
arpl
lock
lea
push
mov
aad
das
adc
xlat
cmp
mov
fwait
cmp
mov
or
sar
sbb
xchg
lcall
xor
jecxz
mov
ret
sbb
sbb
push
jl
push
add
add
enter
dec
mov
filds
xor
pop
fimull
lods
add
dec
mov
jp
sub
loop
es
push
dec
xchg
dec
cmp
shrl
xlat
outsb
dec
dec
jb
push
lods
jl
aas
cs
test
popl
add
popa
sahf
aam
dec
hlt
fldt
xor
pop
jo
fdivl
shrb
xor
repz
mov
xor
imull
sub
mov
cmpl
iret
jl
inc
cltd
loope
sub
incb
addl
popa
bnd
add
inc
mulb
jns
cmp
sbb
ds
leave
dec
xor
in
push
test
les
mov
out
and
jmp
sbb
into
lcall
cmp
push
mov
mov
inc
test
in
pushf
cmp
int3
dec
push
sub
ret
xchg
mov
or
xor
jns
xchg
pusha
inc
pop
xchg
sbb
push
sahf
jnp
dec
sahf
xchg
insb
inc
jb
subl
dec
push
lods
pushf
push
mov
dec
cld
lods
mov
mov
xorl
cmpl
lods
stc
adc
les
fnsave
push
adc
add
dec
repnz
lahf
out
mov
stc
popf
or
test
movsl
test
fs
dec
cmpsb
in
ror
jo
and
and
ror
test
pop
xchg
je
pushf
push
jp
lret
push
or
inc
adc
mov
and
fdivrs
mov
xor
shlb
sbb
test
xor
daa
fbstp
sbb
popa
lret
fwait
mov
dec
loop
pop
cmp
stc
rcl
pop
sbb
adc
jp
fcmovnbe
cltd
sbbl
shl
xor
out
clc
inc
mov
cmp
pop
add
js
and
lret
push
jl
outsl
negl
pop
mov
mov
jo
test
jmp
push
out
add
negb
mov
cmpsl
jg
mov
sbb
mov
xor
pop
jbe
cld
pusha
adcl
gs
adc
outsl
sbb
push
test
sub
negb
pushf
mov
rorl
cmpl
add
into
inc
cltd
ds
sti
bound
push
push
add
xor
out
xchg
and
mov
lret
mov
pop
adc
jmp
out
shrl
loopne
dec
dec
mov
push
mov
cmp
push
dec
ret
imul
std
mov
stos
pusha
jg
pop
fcomip
bound
pop
mov
call
scas
dec
sbb
inc
mov
dec
add
es
mov
push
insb
addb
add
loopne
push
out
lret
test
loop
in
xchg
les
dec
pop
push
lcall
mov
xchg
es
stos
pop
xchg
sbb
mov
pop
mov
mov
push
add
test
rorb
shrl
dec
pop
adc
mov
push
and
fiadds
and
dec
cltd
lock
push
std
mov
jb
dec
mov
lcall
call
xchg
dec
fildl
xor
add
xchg
or
pop
test
xchg
jmp
rcrb
jmp
es
lcall
push
adc
xchg
movsb
mov
inc
sub
xor
add
jp
sbb
idivl
leave
push
enter
cmp
es
lret
shrl
xchg
and
int
dec
insl
mov
cmp
cmpsl
or
dec
les
inc
and
xchg
lods
enter
bound
or
push
nop
add
in
shrl
fdivl
jb
imulb
lods
cmp
xor
push
fnsave
cli
scas
jb
sbb
fstl
mov
xor
and
add
and
icebp
xchg
hlt
xchg
insb
adc
or
bnd
int
mul
shlb
cmp
sbb
les
mov
rol
pop
pop
hlt
cmp
jnp
lods
and
lret
sbb
jmp
in
add
fs
sub
mov
mov
repz
adc
pop
mov
mov
adc
shrb
pop
bnd
in
mov
mov
aad
ficoms
enter
pop
sbb
mov
imul
inc
popf
inc
pop
in
aas
dec
and
cmp
out
iret
pop
cwtl
xor
and
lret
pop
popa
adc
std
outsl
cmp
inc
test
cmp
push
call
cmp
insb
enter
cmp
adc
ret
xlat
mov
rol
imul
inc
mov
sbb
jecxz
test
mov
or
into
pop
xchg
add
mov
fsub
cmp
xchg
or
stos
pop
lods
mov
add
mov
pop
pushf
xor
adc
pop
dec
push
bound
rolb
dec
add
in
adc
push
cmp
loopne
mov
push
test
lret
sti
mov
std
pop
sbbb
cmp
shrb
push
pop
jae
push
jno
jle
cmp
jle
sahf
stos
pop
lahf
pop
inc
stc
cltd
insl
add
adc
sahf
pop
insl
outsl
cmpsb
jp
pushf
inc
test
mov
lods
or
push
pop
pusha
inc
adc
xchg
inc
adc
xchg
repnz
push
gs
sbb
pusha
fildl
cmp
push
mov
nop
aam
test
adc
outsl
xchg
add
clc
test
ja
mov
dec
ljmp
adc
mov
mov
ja
sub
jno
mov
inc
adc
xor
inc
decb
push
jecxz
loop
mov
movsl
je
loop
dec
xor
iret
jnp
dec
jo
negb
adc
insb
jle
pop
mov
adc
in
mov
ret
imul
add
or
push
inc
sti
and
stc
pop
decb
shrl
jo
ret
sub
xchg
push
mov
mov
inc
push
dec
enter
dec
repz
aam
jge
iret
push
popa
xor
adc
or
inc
jmp
or
into
xchg
sbb
pop
fwait
sbb
add
stos
xchg
rorl
mov
jmp
lock
jmp
stc
xchg
std
mov
mov
fistpll
cmp
xchg
xchg
dec
mov
push
pusha
pop
insb
xor
popf
dec
mov
sbb
bound
into
sbb
pop
mov
ljmp
xchg
and
les
or
mov
into
gs
rcl
sub
xor
inc
gs
push
xlat
sbb
in
subl
ret
add
ja
ret
aas
icebp
pusha
dec
mov
mov
cltd
jb
inc
cli
jns
out
jmp
aaa
ffree
add
pop
cltd
stos
mov
leave
push
stos
mov
jnp
data16
cld
add
lahf
xchg
cwtl
mov
mov
mov
sub
inc
int
fmulp
test
mov
outsb
push
jl
rcr
fiaddl
js
test
push
dec
sahf
push
sub
dec
cmc
addr16
popa
lret
pop
jne
lods
add
push
or
add
adc
xchg
fidivrl
iret
add
sub
and
hlt
dec
in
xor
in
xchg
sbb
cld
jne
or
and
sub
inc
movsl
cmp
orl
push
adc
inc
ss
sbb
in
mov
fdivl
out
cs
mov
sub
add
aam
pop
lret
jbe
out
imul
dec
jecxz
lea
shl
cmp
pop
inc
pop
stos
inc
dec
jae
test
pop
or
sbb
shlb
sub
mov
pop
xor
je
mov
imul
jb
xor
in
mov
jle
cmp
dec
cmp
cmp
mov
scas
rcrb
std
nop
xor
test
mov
sti
push
repnz
movsl
stos
pop
sahf
stos
fldl
dec
sti
data16
nop
js
inc
outsl
movsl
inc
repz
sahf
xor
repz
repnz
and
inc
test
mov
push
cmpsb
test
add
pop
mov
add
mov
or
gs
push
mov
sbb
jnp
sbb
int
aaa
mov
adc
mov
das
inc
rorl
pop
adc
mov
dec
loopne
adc
push
repz
jge
shrl
hlt
ljmp
rcr
pop
divb
sub
imul
jg
and
lea
stos
push
xor
push
sbb
xchg
fwait
xor
cmp
imul
mov
pushf
pop
push
sbb
orb
sbb
dec
mov
add
loope
push
push
movsl
inc
sbb
shll
pop
and
iret
xchg
or
add
shrb
int
xorb
sbb
into
dec
sti
addr16
push
adc
test
aas
push
in
test
add
or
fistl
imul
mov
mov
inc
mov
ljmp
mov
xchg
mov
sbbl
cmc
sarb
jns
fdivs
out
shlb
stos
mov
adc
jno
sbb
or
push
jns
mov
lret
loop
mov
jae
jnp,pn
xchg
and
sub
loop
adc
mov
sbb
xchg
ret
rorl
hlt
mov
enter
popf
lods
sbbl
xor
mov
mov
pop
aas
xorl
xor
dec
lret
cld
xor
out
in
nop
inc
adc
push
push
inc
inc
xor
in
nop
lds
lret
adc
jno
sbb
fiaddl
xchg
mov
test
adc
jb
js
push
mov
cmp
jnp
fistpl
lods
mov
cmovs
mov
sahf
add
xrelease
jp
les
pushf
fwait
pop
mov
mov
push
sub
add
imul
pop
arpl
bnd
xor
pop
pushf
or
int
aaa
adc
pop
into
cmp
ds
fstpl
test
js
mov
dec
inc
fsubp
xchg
adc
inc
add
in
insb
movsb
cmp
insb
push
daa
adc
sbbb
adc
sbb
jbe
js
rcrl
repz
push
sar
rolb
and
add
cli
jge
sub
xlat
pop
testl
mov
and
data16
pop
int3
das
dec
jp
jp
mov
push
mov
inc
hlt
add
in
and
push
fs
js
clc
lods
xchg
in
pop
sub
int
jae
notb
les
imulb
add
loopne
xor
xor
lods
adcl
fistpl
decb
push
data16
or
dec
sub
fcomi
gs
andl
gs
dec
jnp
iret
cmpsb
mov
mov
ljmp
movsl
lods
push
and
sub
and
xchg
jmp
cmp
adc
or
in
test
into
cmp
jg
sbb
add
movsl
lods
adc
or
sahf
scas
mov
jmp
das
cmp
push
sub
mov
xor
in
xchg
dec
mov
add
shll
int3
aad
jae
pop
imulb
cmc
ficoms
ret
lcall
sbb
fnstsw
js
jmp
mov
and
cmp
js
adc
and
adc
push
mov
popa
adc
iret
icebp
int3
movsb
sub
jmp
sbb
xchg
je
and
outsb
xor
out
or
enter
push
aad
inc
fwait
mov
ss
out
mov
jp
adc
popa
addr16
gs
stc
inc
aas
in
pushf
insb
push
lea
adcl
int3
rolb
push
aad
fdivl
mov
out
jno
out
or
cmp
mov
add
sahf
mov
mov
cmp
adc
sbb
sbb
mov
ror
data16
out
cmp
outsb
dec
lods
hlt
mov
popa
cs
hlt
pop
push
mov
mov
sub
int3
andb
les
xchg
inc
mov
ds
movsl
push
aad
push
mov
stc
ret
dec
jmp
outsb
mov
or
xor
fnstsw
js
lcall
xchg
inc
sub
mov
mov
insb
xchg
or
sahf
aam
cmp
push
jo
pop
push
and
fs
dec
fimull
or
ret
fildll
je
jo
mov
xor
add
mov
sub
or
mov
and
and
clc
cmpsl
sahf
sub
pop
stos
jg
cmp
sub
add
pop
mov
cld
test
mov
push
aas
rol
int3
jl
mov
xchg
cmpb
cmp
mov
sbb
aad
pop
icebp
js
mov
mov
xchg
leave
xor
test
cmc
mov
ds
test
mov
out
out
pop
aam
in
pop
fsubrl
das
imul
mov
cmpsb
je
mov
ret
enter
movsl
or
dec
mov
loopne
ljmp
lret
cli
aam
fs
xchg
daa
add
xor
mov
dec
and
mov
outsb
jns
push
aam
xor
and
pop
mov
mov
adc
sbb
lds
cmpsb
sbb
pop
mov
imul
xor
jns
clc
aas
mov
xchg
push
out
pop
cwtl
cwtl
call
xor
jecxz
mov
call
adc
push
ficoml
or
int3
out
fcmove
pop
out
cmpsb
in
mov
stc
in
mov
xchg
aas
sub
enter
ret
cmp
xchg
shrl
dec
jecxz
mov
pusha
pop
repz
gs
cmp
adc
xor
jns
loop
xchg
popa
out
mov
add
pop
mov
loop
stos
shlb
fisttpl
and
cmpsl
push
and
push
sub
repz
or
bound
or
jae
in
cmp
mov
pop
in
cmpsb
pop
mov
mov
cmc
jp
lods
popa
and
les
rcrl
or
mov
popf
leave
sub
mov
sbb
ja
inc
test
hlt
jl
inc
in
sbb
mov
push
cmc
xchg
in
mov
test
in
mov
shll
jle
adc
sbb
incl
stc
xchg
lods
pop
andb
mov
inc
test
rol
inc
shrb
loopne
or
or
ficomps
loop
jne
fwait
lods
jmp
dec
fimuls
jmp
xor
jne
addl
fldt
and
sbb
jecxz
jecxz
pop
xchg
add
iret
xchg
sbb
adc
and
xor
mov
ret
test
cld
lcall
in
mov
aam
out
pusha
das
pop
xchg
int3
xorl
xchg
roll
mov
daa
mov
loopne
les
adc
in
mov
aad
push
inc
mov
leave
mov
je
into
push
inc
hlt
cmp
fcomps
rcrb
cmp
pusha
int
in
jle
and
jo
mov
test
gs
push
pop
popf
jl
testb
jg
icebp
push
mov
addr16
loope
xlat
xchg
std
aam
mov
insl
adc
iret
aas
pop
mov
andl
enter
ret
mov
xor
mov
mov
mov
ljmp
sub
cmc
pop
out
das
addr16
adc
icebp
pop
xor
shlb
mov
out
push
icebp
push
loopne
xor
xchg
pop
sub
fisubs
pop
pop
out
int
cwtl
daa
lret
xchg
or
add
cmpsb
lods
mov
pop
es
imul
sahf
jnp
idivl
nop
xchg
mov
xlat
stos
sub
or
adcl
sahf
sbb
je
inc
call
in
sbb
and
inc
xor
pop
pop
sahf
xor
jp
add
sub
jne
aam
push
shrl
cwtl
pop
mov
shl
dec
pop
push
aad
hlt
sti
addr16
stos
mov
jge
lcall
cmpsb
push
xchg
jb
call
dec
nop
sahf
xor
out
in
aas
mov
sub
pop
fildl
jle
pop
inc
xchg
jle
movsb
add
dec
sub
lret
mov
ret
in
sbb
and
enter
jp
cwtl
out
mov
data16
fidivrl
pushf
iret
mov
outsb
push
shrb
pushf
and
test
pop
push
lcall
xchg
cmp
push
lock
push
and
fildl
lret
inc
out
fadds
decl
xchg
fldcw
jbe
cwtl
stos
jo
imul
mov
inc
sbb
shr
pop
into
fdivrl
cmovnp
dec
hlt
mov
xor
imul
icebp
sub
movb
mov
data16
xchg
mov
out
repz
mov
jbe
gs
and
xchg
mov
popa
sbb
mov
lods
inc
pusha
sub
mov
sahf
clc
xchg
rcrl
add
xchg
sub
mov
adc
or
popf
lahf
dec
movsl
shr
fstpl
sub
xchg
fwait
bound
fwait
cld
aad
mov
sti
adc
gs
data16
lock
mov
mov
loope
sbbl
push
cmpsb
mov
int
or
loopne
sub
in
mov
cmp
imul
jae
jae
andl
or
cmp
add
add
scas
add
mov
jo
leave
sbb
aad
ljmp
out
xor
mov
pop
mov
fwait
lods
cmp
ret
cmp
push
jb
jno
scas
jno
xchg
ljmp
sbb
mov
cmp
cmp
sub
pop
xorb
fldt
lea
mov
roll
lea
mull
pop
out
push
pushf
push
push
jmp
lcall
sahf
popa
test
pmullw
inc
and
cld
mov
js
and
rcll
xchg
ret
repz
pop
icebp
sub
mov
sub
mov
nop
movsl
mov
cmpl
dec
jno
or
ffreep
int3
xchg
rolb
bound
les
bound
imul
push
mov
mov
aaa
mov
js
xorl
or
pcmpgtb
pop
xor
mov
aad
mov
push
aaa
into
insb
mov
ret
sub
mov
add
push
lret
sbb
decb
leave
mov
arpl
xchg
mov
or
pop
mov
sbb
mov
push
mov
enter
sbb
mov
out
pop
jae
adc
roll
out
push
ret
cmp
mov
xor
lahf
push
nop
adc
into
rcll
js
lods
cmp
xlat
or
pushf
push
lcall
push
mov
mov
mov
xchg
jl
lret
outsb
insl
fdivrs
and
dec
into
lahf
or
addr16
popf
or
aam
mov
jns
adc
loope
jle
xchg
sarl
or
ret
pop
xor
lds
adc
je
rcrl
push
adc
popa
push
insl
fbld
lahf
imul
sbb
clc
or
push
inc
into
movsb
andb
inc
shr
add
fnsave
pop
mov
rclb
fdivl
lret
hlt
adc
xorl
repnz
adc
xchg
xchg
aam
cmpsl
mov
scas
cltd
rcrl
and
xchg
aas
mov
mov
cmp
ss
popa
pop
mov
inc
cld
jae
sti
jmp
aas
insb
leave
cmp
jg
inc
test
adc
es
or
popa
mov
push
pop
loop
dec
sti
mov
xor
aam
shrl
inc
or
mov
jmp
or
test
rorl
cmp
sub
stos
push
popf
sub
jae
jecxz
jmp
xchg
xor
push
jmp
nop
mov
mov
out
jae
pop
push
mov
idivb
outsb
cmc
mov
xchg
sbbb
adc
push
ss
mov
mov
insl
jb
sbb
dec
mov
cltd
lret
xchg
or
sbb
or
dec
dec
imul
fwait
and
loopne
popa
adc
jno
mov
pop
cmpb
enter
aaa
mov
xchg
add
add
inc
or
jg
ja
pop
xchg
pop
mov
out
std
pop
xchg
xchg
add
lahf
cmp
mov
pop
xchg
dec
dec
sarl
in
jmp
fldl2e
cmp
sti
push
mov
pop
test
aas
pop
xchg
out
cmc
icebp
repz
js
lea
and
fdivr
gs
mov
adc
je
pop
sub
or
jge
adc
add
push
mov
int
in
out
cmp
cmc
fsubr
bound
enter
add
adc
mov
es
ret
sbb
jle
cmp
dec
cmc
or
add
push
out
mov
in
popf
jg
cmp
mov
insb
dec
add
fisttpl
ret
imul
nop
jb
mov
rcl
mov
push
popf
ljmp
rorl
mov
hlt
mov
shlb
ret
xchg
hlt
cld
loope
loopne
movsl
mov
in
imul
adc
push
sbb
sub
fsubrp
xchg
imul
je
pop
test
adc
jmp
lock
in
call
lret
xchg
loop
pop
xor
cwtl
pop
shll
shrl
adc
clc
or
movsl
rcll
movsl
cmpsb
ljmp
stos
pop
push
lock
enter
or
into
push
mov
daa
or
imul
sbb
jns
inc
pop
ss
inc
lcall
std
mov
mov
ret
jmp
cmpsl
dec
aam
adc
xor
pushf
test
decl
or
insl
mov
adc
pop
insb
sub
aad
loopne
sub
outsl
cli
dec
xchg
dec
lret
push
mov
lods
xchg
dec
iret
les
dec
insl
jo
out
xor
xchg
jmp
leave
movsl
cli
mov
ror
push
loope
dec
sbb
fstpl
mov
arpl
add
inc
adc
jno
push
mov
and
insb
add
pop
roll
pop
mov
sbb
insb
mov
pop
mov
jecxz
xor
in
into
push
or
lods
fsub
sti
mov
sti
xor
sbb
pop
loopne
fistps
flds
repnz
out
movsl
sbb
fstps
loope
cmp
dec
inc
sub
push
jnp
mov
push
inc
add
add
les
fsubp
dec
or
lret
cmp
xchg
fistps
mov
xor
scas
rorl
and
leave
pop
fadds
mov
out
inc
xor
dec
rcl
int3
jae
mov
add
ja
adcl
pop
out
add
jns
sbb
popf
jle
je
or
repz
sbb
jns
add
mov
sarb
pusha
icebp
xchg
mov
mov
sub
insl
hlt
jecxz
xchg
sub
inc
fs
push
mov
fistpll
mov
andb
sbb
in
inc
cmpsb
subb
sbb
xchg
mov
popl
xchg
out
or
pop
mov
outsl
nop
data16
cmp
lods
jbe
mov
lods
jns
sbb
repz
cmp
in
popf
pop
dec
sbb
sub
cmp
movntps
shlb
lock
mov
ljmp
fimull
stc
mov
mov
je
int
cmc
sbb
sub
rclb
bound
jne
jge
jo
mov
shrb
bound
gs
fwait
xchg
jg
or
faddl
push
lcall
mov
fwait
call
out
add
stos
mov
jno
pop
addr16
sbbl
out
mov
dec
dec
shlb
lods
or
xchg
aas
and
jno
loop
adc
jp
push
inc
inc
push
pop
add
sub
sarb
cmpsl
aas
insl
mov
aaa
test
sbb
aad
mov
and
ds
rorl
in
pop
jmp
daa
xchg
insb
xor
lods
inc
and
mov
pop
add
in
insb
xor
pop
push
andl
pop
das
mov
adc
dec
rep
sti
lcall
jno
je
xchg
xchg
lahf
ror
push
or
push
test
push
nop
mov
lret
neg
push
mov
xor
pusha
mov
dec
jecxz
mov
test
addl
das
xor
popa
out
aas
fcompl
out
out
pop
cmc
jg
loop
xchg
push
add
xor
dec
cld
push
repz
mov
push
subps
lods
call
adc
add
push
pop
inc
repnz
inc
xchg
cwtl
pop
push
std
jl
mov
mov
cmp
inc
and
jbe
inc
sbb
and
and
lret
mov
pop
test
test
push
outsb
add
ret
jae
and
push
stos
mov
ljmp
imul
push
cmc
mov
inc
add
sti
inc
cmp
jae
xchg
nop
xchg
sbb
dec
cld
cmp
jnp
insb
cli
xor
push
clc
and
ret
jae
adc
mov
out
mov
or
pop
lock
mov
jno
inc
xlat
cmp
sub
pop
dec
or
sti
repnz
xor
daa
jle
xchg
negl
inc
icebp
mov
lods
popa
loop
pop
jne
cmpsl
daa
mov
xor
jne
push
icebp
xchg
dec
icebp
mov
fs
out
nop
mov
sbb
ss
push
psrlq
jecxz
int
dec
jge
push
adc
cmc
fbld
add
jbe
dec
daa
sarb
cmp
imul
cld
sbbb
sub
pop
xor
je
jge
mov
inc
dec
push
jae
ret
rclb
xchg
mov
xor
sbb
cwtl
inc
mov
pop
dec
pop
push
negb
add
xchg
cmp
xor
push
sub
adc
aaa
xchg
dec
jne
imull
pop
out
insb
sbb
leave
fisttpl
pop
stos
inc
jl,pn
inc
adcb
push
andl
jp
loopne
and
cmp
pop
mull
sti
shlb
cmpsb
cs
fistl
cltd
adc
lods
cmp
pop
insl
sub
fnsave
clc
ficompl
test
dec
sbb
scas
dec
fbstp
fsub
ss
or
nop
and
leave
test
jp
dec
push
je
mov
add
sub
sbb
mov
sub
lods
jb
mov
lcall
fldenv
add
and
and
xchg
sub
mov
imul
inc
je
mov
mov
in
loopne
ret
into
mov
or
lods
xor
inc
xorb
mov
mov
fs
pop
movsl
testb
in
push
inc
pushf
sarl
cli
ds
mov
mov
push
negl
fwait
xlat
repz
cmp
imul
pop
jno
xor
test
dec
fstpt
inc
pop
cmpsl
mov
stos
add
pop
or
aaa
push
or
movaps
push
addb
sbb
scas
ds
mov
lds
das
mov
mov
push
inc
psubusw
shlb
hlt
push
cwtl
add
aaa
cli
inc
inc
int3
sbb
lds
push
jl
sub
mov
or
sti
dec
movsl
pop
push
inc
subl
pop
jg
mov
jne
mov
sarb
rorl
pusha
mov
sub
pop
stos
jmp
xchg
mov
mov
ja
jmp
aad
data16
dec
and
iret
cmp
cmpsb
and
cwtl
int
in
xchg
test
fsubrp
or
xchg
repnz
out
mov
push
loope
dec
push
jle
ljmp
outsb
and
pop
or
cld
xor
mov
jmp
xchg
mov
mov
jnp
aam
add
repnz
sbb
fcompl
incb
shl
bnd
stos
adc
ss
les
push
jmp
or
lods
in
pop
cmpsl
or
pop
jnp
mov
in
xor
jns
dec
in
xchg
xchg
sbb
or
ss
cmpsb
mov
lret
xor
les
inc
shld
incb
and
ret
mov
inc
jae
aad
pop
xchg
in
xor
outsb
sbb
and
mov
or
xchg
rolb
jo
scas
adc
lock
adc
adc
sbb
add
mov
addl
stc
sarl
add
out
jo
and
fdivs
xlat
pop
out
mov
add
outsb
fdivs
push
shld
addl
mov
xchg
adcl
jnp
cmp
adc
jns
lcall
cld
orl
sbb
cmp
cmpsl
out
enter
and
xchg
ret
sub
movsl
icebp
sub
xor
test
imul
jae
mov
fldt
cli
push
xor
fmul
inc
je
pop
cmpsb
pop
shl
add
addr16
adc
mov
xchg
jns
inc
or
gs
data16
push
pusha
testl
fsubs
negl
je
sbb
mov
jae
pop
ljmp
es
pop
in
jmp
scas
ss
sub
ret
jge
scas
push
jae
rol
cmp
cmp
inc
jmp
gs
adc
cmpsb
adc
test
and
ljmp
loope
nop
test
testl
jne
fisttps
xchg
cmpsb
add
xor
mov
mov
test
sub
fidivrs
adc
ds
adc
pop
subl
dec
fistpll
dec
in
sbb
shlb
imul
outsb
ljmp
subl
fidivs
ss
xchg
sub
lds
aaa
mov
out
adc
mov
push
sub
mov
pop
cmc
ss
sub
pop
push
out
dec
mov
mov
inc
xchg
adc
jb
jg
in
sub
dec
add
jb
shlb
js
dec
fnsave
ret
loope
mov
and
mov
dec
push
sub
imul
arpl
mov
cmp
xchg
push
mov
cmpsb
shld
mov
pop
dec
js
sbb
mov
jbe
inc
les
jnp
in
jne
lret
int3
pop
mov
in
js
fnstcw
or
sti
push
fisubrl
jmp
pusha
xorl
mov
mov
mov
push
pushf
cmc
lods
inc
cmp
jbe
inc
test
adc
inc
leave
xlat
jbe
cwtl
das
sub
xor
dec
jg
repz
adc
pop
inc
insl
add
sbbl
stos
mov
fsubrl
test
mov
jb
sub
xchg
mull
lods
jne
jnp
stos
sbb
sbb
add
fwait
pop
int
jp
add
cltd
cld
and
push
push
dec
dec
dec
and
je
mov
rorb
out
sbb
xchg
pusha
enter
das
sbb
jnp
out
aam
fldl
movsb
dec
push
not
lock
cld
data16
adcb
test
lret
pop
pushf
ds
mov
repz
mov
push
das
movb
roll
pop
dec
pop
in
cmpb
out
loop
sbb
ss
call
fnstsw
push
test
icebp
insb
jbe
push
in
sub
stos
in
fmulp
imul
jge
outsl
daa
frstor
dec
iret
push
xchg
sbb
dec
sahf
gs
push
sarl
xchg
mov
repnz
outsb
mov
pop
add
inc
mov
aad
stos
inc
inc
xlat
dec
scas
cld
filds
incb
adc
jo
push
add
xor
jne
dec
fsubp
test
pop
push
gs
ficomps
stos
icebp
xor
sbb
out
ret
cs
mov
mov
int
imul
fnstcw
jl
in
inc
inc
push
out
sub
xchg
dec
push
inc
dec
out
sub
mov
cmp
mov
pop
scas
inc
lods
fistpll
lock
adc
mov
xchg
clc
cmp
scas
ret
sub
push
mov
and
in
movsb
lods
inc
gs
ror
lret
fwait
or
lret
sbb
push
xlat
sbb
jle
cmpsb
das
mov
outsb
cmpsb
mov
gs
jno
adc
or
cmp
and
scas
scas
dec
aas
mov
iret
xor
cli
pop
into
jnp
sbb
lea
inc
cmp
ficoms
mov
ja
sbbl
ret
push
xchg
ficoml
daa
adc
shrl
jae
lods
cmp
aam
lock
mov
iret
scas
out
or
mov
sbb
loope
jne
inc
nop
add
jns
in
leave
or
sub
jle
xor
or
popa
fsubl
xor
or
jmp
xchg
mov
add
insl
add
dec
push
mov
cwtl
out
push
mov
leave
test
add
ljmp
mov
or
inc
xchg
xor
mov
shlb
adc
dec
rcrl
jo
mov
testl
scas
cmc
dec
dec
sbb
std
iret
xchg
lcall
pusha
mov
cmpsl
jecxz
push
movsb
dec
jnp
pop
or
xchg
loope
jbe
mov
inc
outsb
inc
stc
imul
lret
lods
repz
pop
mov
cmp
mov
sbb
loopne
loop
mov
jno
xor
xchg
inc
dec
testl
or
lcall
cmc
cmp
insb
xchg
push
fs
out
jp
or
cmc
dec
adc
int3
popw
mov
movsl
aaa
stos
adc
sbb
imul
mov
inc
sti
xchg
push
mov
add
fcmovu
mov
adc
int
ficoml
clc
filds
push
push
push
add
add
aaa
pop
and
sbb
mov
in
jnp
pop
cmc
xchg
fwait
xchg
and
sub
icebp
jno
jle
data16
cwtl
test
or
out
mov
mov
add
mov
fdivrl
mov
ja
rcrl
or
sti
pop
movsl
addr16
xor
sbb
xchg
mov
imul
push
test
int
xchg
fscale
pop
or
mov
jno
adc
add
daa
ss
lods
or
jb
fidivrl
jmp
enter
jae
mov
nop
pushf
fwait
xchg
push
add
lock
add
mov
push
mov
mov
xor
mov
dec
pop
addr16
movsb
orb
pop
fwait
mov
xchg
sub
in
mov
les
add
ret
pop
cmpsb
in
xchg
xor
add
orb
inc
int3
sub
leave
add
mov
inc
jmp
js
cs
movsl
xor
fcom
je
nop
jb
mov
jbe
fdivl
inc
in
cmp
cli
pop
push
dec
cmp
xchg
or
fisubs
je
jg
pusha
mov
push
jg
cmp
lock
out
pop
push
or
inc
pusha
xor
iret
jp
das
ljmp
outsl
adc
pop
cmp
sahf
gs
dec
inc
cwtl
insl
mov
fidivrs
ret
js
das
scas
cmpsb
or
movsb
insb
mov
sbb
add
push
pop
sbb
daa
clc
mov
mov
inc
jbe
aas
dec
jmp
lret
sbb
pop
faddl
xchg
in
hlt
and
xlat
addl
inc
push
repz
arpl
jno
sub
pop
pop
inc
clc
adc
xchg
cmpsb
cmp
mull
test
jl
imul
dec
xchg
cltd
adc
lcall
aam
ret
adcb
vcmpps
addl
loop
aam
add
push
orb
mov
aaa
std
jnp
jns
sbb
lret
idiv
imul
stc
push
push
pop
mov
mov
inc
pusha
cmp
sbb
fdivrs
outsl
push
mov
cmp
fimuls
dec
daa
rcrl
add
sub
mov
pusha
cmp
mov
mov
add
sbb
sbb
out
push
stos
jle
ficomps
push
mov
insb
clc
arpl
aam
or
out
out
fidivrs
loope
ret
out
addl
hlt
mov
add
stc
nop
pop
cmp
out
stc
or
mov
lods
mov
stc
push
jns
dec
and
or
lock
nop
out
sbb
mov
mov
popf
push
mov
out
fcomps
incl
adc
loop
jns
adc
outsl
movsb
cmpsl
pop
shlb
xchg
loopne
call
or
xor
ljmp
push
xchg
bound
cmpsl
xor
enter
mov
inc
fmuls
fldt
fldenv
jge
cmpsb
mov
mov
rcrl
cmpl
pop
pop
sbb
push
cmc
inc
dec
daa
sub
test
mov
les
mov
and
xor
xchg
imul
xor
hlt
sbb
lods
cmp
arpl
rol
loope
sbb
sbb
daa
mov
xor
repnz
adc
jb
xor
add
rolb
add
in
scas
ret
mov
into
mov
cli
ljmp
adc
fstps
xor
pop
cwtl
subb
mov
sub
pop
sub
mov
adc
xchg
and
push
jo
rclb
les
jo
mov
mov
jo
pop
inc
pusha
sbb
scas
jp
fiadds
jl
pop
dec
in
sub
insb
aaa
lea
mov
iret
lcall
andb
mov
fs
scas
push
push
xchg
sbb
and
mov
shl
xchg
lock
popf
sbb
xchg
jle
inc
mov
out
test
into
dec
mov
fs
aaa
dec
stos
test
mov
lods
call
mov
lods
xchg
sbb
jecxz
aad
add
leave
sub
arpl
stos
aaa
cltd
std
xchg
lret
push
sub
ret
adc
in
inc
pop
pop
jmp
sub
imul
leave
pusha
ficoms
jle
call
or
fildl
lods
bound
fildll
mov
xchg
test
pop
pop
mov
sub
cmc
js
jae
xchg
push
adc
xor
mov
mov
inc
xchg
jmp
fimull
jnp
adc
pop
sub
or
adc
mov
stc
sub
pop
add
sub
lods
cmp
push
jno
pop
lret
fwait
dec
popa
jl
mov
dec
out
push
xchg
add
and
dec
out
and
jo
inc
mov
mov
daa
outsl
cmpl
nop
dec
int
out
fs
ror
mov
je
jge
push
jb
adc
popf
je
movsl
dec
jecxz
js
loopne
inc
mov
lea
add
xor
dec
mov
addb
orb
sub
ret
stos
pop
and
xor
xor
lods
popf
js
cwtl
movsb
test
sub
iret
fildl
jp
cmp
rorl
shlb
fs
pushf
scas
out
inc
lock
popa
sti
out
push
aam
cmp
dec
das
sets
jae
ss
push
stos
in
sbbl
testl
sub
cmp
shll
pop
mov
outsl
mov
out
mov
cmp
xchg
cltd
inc
cld
scas
ret
jmp
leave
and
or
sub
and
fsubs
iret
pushl
cwtl
fsub
leave
jns
fidivrl
sub
xchg
and
int
test
xchg
ret
arpl
jns
getsec
jp
lret
cmpsb
fwait
ret
bound
jae
jle
cltd
mov
mov
dec
aad
nop
insb
xchg
pop
paddusb
cmpsb
jns
dec
stc
sar
je
addb
mov
in
push
mov
repz
adc
xchg
cmp
das
inc
fisubrl
cwtl
cmp
pop
mov
insl
xchg
test
inc
inc
lock
loopne
ret
and
lcall
xor
popa
push
push
mov
mov
repz
sbb
xor
repz
pop
arpl
cli
scas
mov
sub
adc
clc
push
sub
push
bound
xchg
jmp
fs
cmp
in
in
lea
les
pop
jp
fldcw
or
lods
push
mov
vpcmpeqb
lahf
mov
scas
nop
aaa
movsb
sti
jecxz
fsubs
mov
mov
mov
push
daa
lcallw
mov
fs
pop
jle
cmc
mov
jb
insl
adc
xorb
aam
sbb
popa
pop
mov
sahf
clc
ret
push
in
push
icebp
nop
call
int
cmp
xchg
mov
fidivrl
sub
and
xchg
cmp
add
jbe
sahf
adc
out
mov
mov
mov
push
fisttpll
and
rcll
das
cmpsl
sbb
stc
push
cmc
jmp
negl
or
push
test
mov
test
fs
sub
ds
xchg
stos
add
mov
dec
or
add
fimuls
stos
sub
in
popf
loop
xchg
sbb
xchg
dec
idivb
shlb
dec
dec
dec
push
sub
xor
in
cwtl
addl
js
ss
ljmp
jno
xor
xchg
inc
stc
iret
pop
movsb
gs
call
lret
xchg
sbb
loope
cmp
pop
pop
pushf
fidivl
iret
sti
and
ss
and
imul
and
inc
aaa
idiv
aad
push
xchg
adc
inc
inc
xlat
pop
jbe
cmp
cltd
adc
outsl
mov
inc
inc
test
mov
sbb
or
jg
lcall
aaa
jg
or
out
and
idivl
stc
iret
repnz
xchg
adc
cmp
mov
sbb
mov
clc
rolb
and
xchg
cmp
pop
sub
mov
push
popa
sub
adc
cltd
cs
add
xor
int
cmp
test
pop
div
rcl
adc
mov
sbb
or
add
xor
and
repz
cli
or
popf
out
js
dec
in
test
sub
dec
icebp
iret
lods
inc
out
mov
notb
xchg
sub
shlb
fnstcw
insl
mov
into
mov
shrb
mov
sub
inc
dec
popa
incl
ret
inc
mov
movsl
js
pop
lock
rclb
push
shl
sbb
and
mov
enter
push
or
adcl
test
dec
jns
repnz
in
push
sbb
add
fnstcw
sbb
mov
insb
cwtl
pop
jg
cmpsl
lea
xchg
loope
mov
xor
bound
cmp
jmp
arpl
xor
xor
mov
aad
push
pop
xlat
outsb
imul
cmc
mov
test
dec
pop
push
sub
aad
into
mull
lcall
inc
faddl
out
je
lahf
out
in
popa
xchg
or
mov
pop
push
add
pushf
pop
push
lretw
pop
cmpsb
lock
lods
pop
inc
adcb
into
sti
dec
mov
insb
dec
mov
lds
ficompl
xor
fdivl
test
ss
sbb
popf
lods
arpl
or
imull
repz
fstpl
add
sub
sbb
pop
mov
pop
outsb
cmpsl
js
mov
dec
xor
mov
sub
test
out
xchg
mov
loope
xor
push
cli
cmpsb
mov
inc
std
arpl
lods
inc
addl
dec
xchg
jno
test
scas
cmpsb
xchg
pop
cwtl
adc
lret
test
subb
testl
sub
push
mov
je
xchg
fnstenv
cmpsb
xlat
mov
mov
cmp
xor
pop
inc
out
xchg
add
or
sub
ret
push
mov
mov
in
dec
in
jecxz
add
daa
imul
fs
pop
das
icebp
ret
mov
pop
xchg
add
cltd
lcall
adc
sahf
and
clc
xor
sub
mov
add
push
sub
aas
jae
in
mov
flds
jae
das
xchg
loop
or
pop
jbe
sub
roll
cmp
imul
dec
ds
jb
sti
push
iret
lcall
pop
data16
cmpsb
lock
or
jle
xchg
mov
lahf
cmp
ret
and
mov
dec
movsl
add
ss
jge
rolb
pusha
cli
lds
push
shl
sahf
mov
cmp
movl
mov
loopne
mov
xorl
repz
les
fnstenv
shl
ja
jno
and
sbb
sub
jns
xor
jecxz
sbb
call
adc
or
insb
push
fs
sub
lods
shlb
out
cltd
je
mov
sub
pushf
xor
into
int
cmp
lock
mov
xchg
or
mov
jecxz
push
jno
dec
fdivp
lods
mov
xor
jne
lock
mov
pop
clc
into
or
sbb
xor
pop
push
stos
addl
jo
pop
aaa
dec
inc
and
jb
jne
push
xorl
cmp
mov
sub
sub
scas
test
adc
lea
mov
mov
push
fucom
or
bound
sub
rorl
adc
test
pop
lock
sbb
cmpsb
add
xor
push
jmp
or
xchg
ds
mov
jae
loopne
call
or
xchg
jb
cmpsl
inc
stos
les
xor
pop
sbbl
and
fimuls
jl
scas
scas
je
int3
mov
add
out
push
in
add
scas
inc
push
xorb
data16
arpl
xchg
test
sarb
add
cmpsb
clc
jo
popl
pop
adcl
adc
test
mov
aas
in
testb
adc
dec
sbb
mov
call
ds
cmpsb
pop
push
je
xchg
pusha
lds
and
add
xor
lods
pusha
cmpsb
sbb
mov
sbb
pop
pop
fs
jl
inc
outsb
xor
mov
jmp
pop
or
sub
pop
lock
das
in
push
mov
scas
fsubrp
fsubr
adc
sbb
xchg
pop
adc
mov
sbb
pop
inc
fsubl
add
outsl
mov
test
dec
mov
arpl
pop
int
xchg
add
cmp
sub
pop
pushf
xor
mov
dec
jge,pn
pop
scas
dec
iret
subb
fsubrs
jle
cmp
outsb
mov
mov
dec
xchg
mov
int
pop
mov
push
jno
ljmp
arpl
jmp
shll
sbb
fs
dec
insb
xor
mov
jecxz
out
mov
xor
rcrb
out
and
sarl
pop
icebp
stos
push
push
shll
int
push
fs
and
xchg
addl
inc
push
lahf
in
sti
adc
inc
gs
or
in
ret
aas
pushf
hlt
inc
inc
pop
stos
mov
mov
inc
mov
jge
lret
jb
xlat
pop
jmp
push
add
xchg
mov
sbb
fsubl
ret
mov
adc
add
pop
mulb
stos
dec
aaa
or
fidivl
popf
data16
lds
test
pop
xor
pop
xor
sti
inc
std
loopne
repnz
dec
adc
addl
rclb
jae
out
addb
lds
or
icebp
incl
adc
and
test
rol
ret
push
enter
lods
inc
cwtl
mov
inc
pop
das
xchg
cmp
in
aad
sti
lea
mov
xchg
inc
pop
cmc
jp
or
ss
xor
popa
push
outsb
lcall
addr16
adc
pop
dec
push
or
lods
jne
out
xchg
into
sbb
ds
jno
mov
jecxz
sub
fsubrl
add
sahf
cmpl
fdivrl
push
imul
ds
xor
sub
dec
aad
mov
sbb
and
push
dec
jb
fisttpl
ret
lcall
bound
repz
cld
psubd
cmp
mov
test
or
jl
cmp
pop
mov
xor
inc
pop
xor
or
fiaddl
xchg
in
dec
stos
mov
or
jp
adc
jecxz
jg
lds
movsb
pop
jp
jecxz
in
mov
xchg
test
outsb
repnz
or
std
xchg
xchg
aam
pop
test
jns
sub
or
sarb
pop
je
inc
inc
fidivrs
insl
add
stc
push
scas
mov
hlt
cmc
mov
add
fisubrs
gs
pop
or
subl
fucomi
testl
pusha
popl
les
sbbl
jg
inc
mov
add
movsb
es
xchg
pop
mov
and
cmpsb
aam
and
clc
add
xchg
add
decl
pusha
rcl
nop
lea
mov
gs
iret
cltd
std
popa
and
push
pop
clc
jns
and
pop
jmp
rorl
cli
add
sbb
dec
xchg
pop
sahf
mov
aad
enter
add
arpl
xor
inc
filds
arpl
inc
repz
scas
enter
ret
outsl
mov
insl
js
cmp
push
inc
sar
mov
jg
jecxz
jl
mov
popf
mov
and
hlt
pusha
into
int3
fs
rclb
fs
call
xchg
fsubr
push
mov
pop
cwtl
lds
xor
gs
push
in
mov
imul
xlat
cld
xchg
and
imul
add
loopne
xor
or
andl
xorb
push
mov
dec
lcall
mov
popf
fisttpll
pop
jp
fs
imul
in
push
cwtl
insl
sbb
sahf
dec
fcomps
shrl
rol
jmp
ret
and
inc
js
cmp
mov
sub
test
jmp
stos
mov
mov
iret
xchg
pop
test
jmp
ja
and
and
xchg
psubq
mov
dec
or
ds
dec
fists
aaa
mov
movsb
push
adcb
ss
icebp
mov
mov
adc
sbb
orl
leave
test
aam
pop
ret
add
rclb
jecxz
imul
pop
ret
pushf
arpl
mov
out
fcompl
loope
adc
aas
das
cmp
cmpsb
ret
mov
add
mov
fidivrl
in
lock
push
jb
cmpl
xor
mov
sti
leave
mov
sub
cmpsl
test
pusha
sub
xchg
ss
inc
shr
bnd
negb
and
jmp
jbe
jae
pop
fwait
pusha
std
pop
push
xchg
or
and
push
jb
loope
cltd
ja
sub
inc
call
and
jmp
sub
jnp
dec
mov
rcll
xchg
xchg
mov
cmc
leave
je
xchg
stos
xchg
sub
shlb
push
outsl
int3
xlat
mov
adc
repz
xchg
insl
pop
sbbl
push
stos
pop
push
mov
call
mov
mov
add
mov
jg
or
and
daa
mov
mov
jle
xchg
icebp
mov
mov
nop
loop
mov
enter
arpl
push
mov
fucom
decl
stos
sub
push
inc
push
jge
ret
loope
fsubrp
inc
sbb
mov
mov
cmp
bound
push
mov
out
jbe
inc
inc
fs
adc
loope
pop
test
jbe
push
sarb
ret
sbb
repz
sub
test
movl
xchg
decb
lea
cld
or
mov
pop
in
mov
mov
cmpsl
fidivl
stos
dec
dec
or
dec
adc
je
fstpt
loopne
cmp
or
daa
das
cmp
inc
add
insb
xor
xor
ror
out
movsl
cmp
and
sbb
cli
sub
mov
mov
shrb
hlt
pusha
sbb
add
rolb
push
repz
xchg
inc
jno
imull
sbb
pop
xchg
jmp
fldt
mov
mov
enter
xchg
das
xchg
mov
xor
adc
roll
lcall
scas
rolb
bound
outsb
and
inc
call
frstor
insb
test
js
rcr
out
aas
mov
adc
popa
loopne
call
aaa
dec
ss
insl
cmp
add
jno
sub
shll
jno
push
or
imul
dec
fimull
lret
pusha
sti
loopne
ret
aad
xchg
not
mov
and
jb
pop
sbb
jle
ret
lcall
cmpsl
ret
pop
inc
push
es
mov
jno
mov
adc
das
jge
jl
mov
push
pop
stos
or
jecxz
sti
pop
mov
mov
popa
nop
imul
fdivr
fmuls
pop
daa
lods
pop
push
fdivrl
decl
sub
adc
or
xor
in
outsb
gs
clc
leave
cmp
clc
in
and
loopne
add
std
ss
negl
aad
rol
pop
nop
inc
push
mov
rorl
xchg
mov
adc
jae
mov
bound
mov
les
add
subl
icebp
and
jae
in
es
mov
stc
lahf
xor
xlat
or
dec
and
mov
les
fnstsw
js
test
decb
out
lret
push
in
inc
aas
shll
xlat
mov
ficompl
inc
push
dec
es
jno
cmp
sbb
pop
jb
shlb
jmp
or
sbb
insb
sub
mov
mov
aam
dec
gs
push
in
mov
inc
cmp
and
aam
or
cmpsl
xchg
xchg
push
icebp
in
call
mov
stos
mov
lods
xchg
fisttps
mov
emms
sub
mov
fisttpl
vpunpcklqdq
pop
inc
lea
mov
cmp
cwtl
jbe
mov
jmp
mov
insl
sub
sahf
xor
sub
xchg
sahf
mov
push
out
push
or
cmp
jne
mov
sbb
jle
jmp
jo
clc
jle
sub
clc
and
and
stos
roll
js
icebp
jle
out
rorb
gs
imul
sbb
inc
cld
je
lret
bound
xchg
daa
outsl
repz
jg
clc
bound
mov
icebp
xor
fs
imul
out
xchg
jle
test
not
mov
gs
shll
dec
mov
dec
nop
cmc
out
jle
jb
aam
scas
cld
xchg
adc
mull
mov
cmp
lods
ret
lock
negb
and
add
in
adc
pop
outsb
cltd
dec
push
sub
pop
add
sub
cmpsl
xchg
add
or
push
or
movsb
mov
loopne
adc
xorb
adc
repnz
adc
shrl
or
xchg
add
dec
add
faddp
push
add
cmp
dec
lahf
das
mov
mov
aam
add
pop
xor
loop
in
nop
push
lods
iret
push
mov
jg
cmpsl
les
push
ret
jg
out
inc
sbb
in
test
inc
mov
dec
mov
push
xorb
dec
fdivs
sub
pop
jno
adc
mov
les
insb
js
jo
dec
inc
popa
call
in
insb
adcb
mov
cmp
call
fwait
loope
mov
imul
clc
xchg
ja
push
test
pushf
jae
xlat
pop
in
js
adc
jle
cmp
popf
fbstp
adcl
insl
cld
push
jnp
shrb
adcb
mov
icebp
cmp
dec
add
lret
cmc
mov
pop
in
rorl
and
xchg
adc
stos
je
adc
mov
add
and
push
and
in
sub
cmc
or
inc
dec
les
pop
lods
xor
jecxz
pop
dec
shrb
sti
pop
mov
cs
rcr
jo
outsl
call
mov
or
push
std
lds
mov
lret
sahf
mov
sbb
mov
inc
sub
in
hlt
insl
enter
mov
pop
popf
mov
mov
dec
pop
xor
ss
loope
push
push
cwtl
xchg
stc
sub
jle
push
in
mov
mov
test
push
or
cmpsl
add
adc
xor
xor
out
and
les
add
mov
xchg
popa
xorl
int3
daa
das
cli
xlat
add
xlat
jno
fldenv
sub
sub
push
cwtl
inc
movsb
jnp
and
add
aad
popf
sub
jb
hlt
lret
xor
push
lods
mov
push
sub
cmp
jmp
clc
add
ror
inc
xchg
pop
mov
sub
movsl
je
leave
and
loope
inc
sbb
xchg
out
icebp
loope
push
in
out
mov
push
mov
dec
hlt
jl
repz
adc
jnp
clc
call
jp
das
rol
add
iret
dec
mov
call
rorb
cmpsb
movsl
cmp
mov
pop
lret
add
mov
cmp
inc
cmp
test
fsts
add
or
inc
cld
push
out
in
xchg
jnp
pcmpeqd
outsl
pop
and
sbb
fcompl
mov
lret
nop
mov
pusha
test
addr16
pop
fs
and
loope
mov
out
addr16
rclb
mov
mov
ds
dec
fsubs
jo
mov
insl
in
mov
dec
adc
sbb
cmp
dec
in
je
xchg
cmp
and
and
shll
sub
je
mov
adc
jne
jo
cwtl
jb
dec
xchg
fnstsw
mov
adc
and
sub
xchg
add
lret
inc
iret
sub
dec
pop
lock
popa
ficomps
jmp
scas
loopne
xchg
outsb
fstl
test
push
mov
mov
mov
out
aad
dec
cmp
bound
sahf
cmp
jb
mov
dec
dec
or
push
loopne
and
mov
js
jo
push
xchg
jnp
dec
cmpsl
fldt
pop
cltd
shlb
addr16
mov
in
and
icebp
enter
mov
xchg
dec
dec
push
mov
out
sti
and
push
es
fcoml
mov
pop
sub
rcrb
sub
jmp
xchg
xchg
dec
mov
jle
push
mov
sbb
pop
jo
in
dec
sub
sub
dec
xchg
popa
fwait
push
addr16
imul
cmc
shufps
pop
popa
loope
mov
inc
int3
pop
es
fnstenv
add
lds
push
ljmp
jno
jmp
mov
jbe
add
mov
xchg
add
rcll
aas
pop
popf
dec
inc
int3
lret
and
mov
add
mov
sub
int3
jo
loopne
ficoml
adc
push
add
lods
jns
push
rcll
fs
negb
ds
add
ja
cmp
repz
inc
sti
jae
mov
pop
and
xor
stos
xchg
mov
mov
sahf
mov
rorl
xchg
xchg
outsb
sbb
mov
cmpsb
push
ja
inc
cmp
jb
fisubl
jo
jecxz
lcall
out
in
je
cwtl
rcrl
out
arpl
in
mov
test
xlat
fsubp
rclb
jbe
je
pop
cmc
mov
lea
mov
mov
clc
incl
push
pop
dec
push
in
push
aam
or
fdivrl
pop
dec
sti
cmp
stos
cmpsl
icebp
repz
fdivl
les
xlat
movsl
test
cmpsb
pop
xlat
int
add
inc
jecxz
mov
scas
push
insb
inc
add
loopne
jne
inc
ret
and
xchg
adc
rol
loop
pop
sbb
push
push
idivb
add
in
ret
push
insb
test
add
add
mov
push
mov
inc
aas
repnz
mull
scas
xor
and
jle
ret
push
je
pushf
aam
pushf
loope
into
mov
push
cmc
rorb
nop/reserved
mov
imul
aam
gs
ja
in
mov
fstpt
push
mov
stc
mov
idivb
mov
ret
cli
xchg
cmc
and
sbb
cmp
hlt
xchg
mov
pop
adc
lahf
es
sub
mov
dec
mov
push
pop
sbbb
dec
in
pop
repnz
lods
inc
imul
jne
jp
pop
jg
imul
mov
loope
aas
push
and
call
mov
loopne
xchg
or
movzbl
and
cmp
sbb
lcall
int3
jecxz
fs
test
and
enter
and
mov
ret
fidivs
lock
pop
scas
sbb
mov
jno
and
mov
cmp
loopne
jle
shll
test
mov
mov
mov
aas
aad
jl
arpl
mov
or
mov
push
mov
pshufw
inc
sub
imul
adc
sbb
lock
add
loop
cld
adc
mov
ja
addr16
lahf
aas
and
jle
inc
dec
sbb
and
cmp
arpl
mov
lock
ljmp
and
in
xor
outsb
push
je
cmpsb
or
mov
push
frndint
jb
subb
lea
xor
fwait
xor
mov
js
push
adc
jns
jmp
mov
andl
fcmove
enter
out
dec
sbb
std
fwait
jl
fsubrl
mov
jg
jmp
ret
repz
aam
or
or
test
jl
in
or
lret
repz
repnz
push
inc
dec
pop
fimull
call
or
xor
addr16
repz
loop
les
movsb
iret
imul
clc
xchg
xchg
sbb
stc
pop
rcll
insb
fs
fcomps
mov
inc
and
dec
dec
xor
fisubrl
dec
shll
popa
and
loop
jae
inc
enter
adc
out
lea
jbe
fadds
das
dec
or
sub
dec
push
jge
cltd
pop
in
mov
sbb
in
pop
pusha
or
popa
pop
daa
inc
and
push
test
cmpsb
cmpsl
out
mov
dec
dec
lcall
cwtl
jnp
rcrl
js
mov
lahf
lods
roll
pusha
xor
jns
insb
out
and
mov
jg
in
sahf
mov
and
outsl
cld
scas
clc
mov
sbb
leave
pop
daa
push
push
in
dec
out
sahf
sbb
mov
sahf
cmc
xchg
mov
xlat
xor
sub
jnp
clc
sahf
mov
shld
mov
pushf
jg
sub
adc
dec
dec
out
ljmp
pop
adcb
cmp
sbb
lods
jae
fisubs
xchg
pop
int3
ret
sbb
mov
insb
ljmp
xchg
or
mov
mov
sub
add
daa
dec
loop
ja
add
sub
sub
jae
es
pop
cmp
lret
repnz
test
xchg
lds
pop
inc
std
orl
popf
pop
imul
xchg
mov
mov
testl
std
imul
fstl
mov
push
fs
jle
sub
mov
inc
cmpsl
ljmp
int
rolb
or
test
xorb
adc
outsl
ffreep
inc
mov
xchg
jae
xor
pmaxub
icebp
aad
insl
xor
hlt
aas
mov
ret
lds
push
popf
insb
repnz
xchg
movsl
fnsave
cmc
inc
mov
fbld
jnp
sub
add
lds
ja
rep
jle
xlat
adc
dec
inc
mov
test
mov
inc
lret
inc
xlat
cld
arpl
pop
pop
icebp
aaa
arpl
mov
js
inc
push
pop
aam
hlt
pop
enter
je
int
mov
jp
and
and
xor
scas
cmp
fdivrl
push
mov
sub
jne
xor
subl
or
adcb
es
inc
lods
stos
sub
int
pop
sti
xchg
repz
sahf
mov
rclb
dec
mov
push
xchg
in
arpl
ss
insl
ret
and
push
push
inc
push
xorb
pop
lds
cld
jle
add
adc
push
roll
xor
fsub
test
mov
adc
cmp
fdivl
jns
xchg
jle
inc
aas
or
cmp
lods
mulb
xor
or
sets
insl
dec
rol
in
xrelease
jne
call
loope
mov
and
xchg
imul
seto
les
pop
xchg
cmpsl
out
mov
lret
mov
push
pop
insl
and
adc
ja
js
mov
xchg
test
sub
add
scas
jns
add
jns
sbb
daa
dec
lods
rorb
mov
push
and
inc
and
jecxz
pop
dec
dec
stos
and
loopne
stc
cmc
in
insb
sbb
mov
cmpsb
mov
fisubrl
or
cmpsl
mov
cmp
nop
test
lods
std
lea
mov
pop
push
int3
daa
movsl
movsb
sbbl
lods
xor
pop
jecxz
popa
inc
mov
mov
iret
in
mov
push
mov
dec
jp
out
std
ret
xchg
sub
aam
sbb
outsl
add
test
and
sbb
xchg
push
cmpsl
stc
insb
xlat
push
jmp
enter
or
aaa
cmc
mov
adc
inc
adc
fnsave
daa
aaa
addr16
shlb
mov
adc
pop
jae
mov
sahf
lods
push
int
inc
cld
call
sbb
xchg
lahf
or
xor
push
stos
mov
les
and
mov
dec
mov
push
dec
push
mov
dec
mov
push
cmpsl
repnz
call
and
push
stc
adc
push
or
out
lods
push
movsb
repnz
cltd
cmpsl
outsb
sub
ja
cmpsl
sub
orb
mov
sbb
mov
pop
mov
cs
xor
icebp
pop
dec
push
adc
mov
arpl
sbb
and
lcall
aam
add
sub
pop
mov
pop
mov
andl
xchg
push
stos
xchg
out
inc
mov
jl
and
lea
imul
lock
jl
pop
mov
fcmovnbe
sub
test
adc
push
mov
jb
cwtl
jno
mov
jmp
rcr
leave
clc
fdivs
lods
sub
test
pop
pop
xor
cmp
xchg
push
sub
arpl
icebp
dec
repz
pop
mov
cmp
sub
cmp
cltd
jb
mov
mov
clc
push
hlt
fnstenv
imull
fdivs
imul
xchg
lock
or
sbb
rdpmc
xchg
push
pop
js
andb
mov
sub
pop
cmp
adcl
jno
nop
adc
int
stc
push
dec
mov
fnstenv
dec
stos
push
stos
fistpll
or
add
out
popa
xor
lret
push
ljmp
jl
shrl
sub
mov
subb
ljmp
jno
jno
ret
xchg
push
jmp
repz
loop
adc
dec
ljmp
mov
jl
add
pop
dec
ljmp
mov
jbe
ja
mov
fistl
aaa
cmp
stos
xchg
in
movsl
repnz
and
mov
test
popf
loop
in
jb
cmc
das
lods
std
out
mov
jecxz
jmp
cmp
and
sub
add
leave
and
aad
jecxz
add
mov
lods
mov
bound
filds
jle
std
arpl
scas
fldt
dec
subl
daa
aad
xchg
addr16
loopne
cmp
out
inc
adc
fbld
cmpsb
mov
cmpsl
jl
stc
inc
xchg
push
xor
fadds
push
repz
xchg
pop
mov
pop
jp
test
cmp
icebp
or
pop
jno
insb
xchg
repz
mov
mov
and
aad
dec
sub
stos
andb
pop
faddl
mov
adc
mov
aas
adc
aas
jo
inc
test
push
test
sti
cltd
xor
call
js
inc
xor
pop
fldenv
jmp
sub
push
pop
push
add
test
adcb
jae
or
ret
inc
in
std
inc
jg
pop
arpl
mov
lods
pop
cltd
push
and
xor
lds
adc
int
mov
inc
add
or
and
xor
lds
sar
pushf
dec
ffreep
out
je
xchg
outsl
data16
mov
pop
dec
aad
ljmp
push
clc
pop
add
xor
mov
pop
pop
add
shrl
dec
pop
inc
mov
add
xor
sbb
call
or
insb
mov
or
inc
sbb
push
push
aaa
mov
test
leave
test
into
pop
push
shll
cmp
insl
mov
int3
fdivp
mov
mov
aad
out
fbstp
movsl
arpl
mov
test
xchg
xor
and
pop
mov
pop
out
ret
repnz
inc
inc
dec
insb
shrb
int
mov
bound
addb
mov
and
rcrl
imul
pushf
aam
dec
andl
jns
cld
or
lcall
pushf
jno
iret
cld
lea
mov
jns
lods
lods
mov
pop
push
and
je
add
and
cmpl
popf
stc
inc
inc
push
shr
mov
cmpsl
xor
pop
jl
cmp
jle
in
or
push
inc
jb
xor
call
lods
mov
and
push
cmp
sub
cmp
push
cs
jae
jmp
pop
dec
call
sub
xor
push
jns
clc
xchg
fst
mov
lods
mov
sahf
fstps
dec
fiadds
lret
push
cmp
das
jmp
or
lret
test
movb
sub
jge
mov
cld
in
loopne
sbb
push
or
xor
cmp
dec
and
mov
icebp
repnz
mov
stc
ss
inc
add
cmp
push
in
mov
ja
cmp
cwtl
sub
imul
daa
mov
jmp
loop
rcll
dec
jb
jle
xchg
xchg
pop
xor
jge
mov
loope
dec
adc
xchg
inc
insl
aad
loope
popl
incl
push
in
sti
das
adc
pusha
int3
je
ljmp
icebp
sub
test
push
xor
shrl
std
pop
testb
test
cmc
and
sub
dec
pop
mov
orb
bnd
sbb
mov
add
push
insl
inc
or
push
pop
dec
adc
lahf
mov
ret
call
in
nop
dec
fildl
call
jmp
and
fwait
rorl
and
sub
mov
inc
mov
adc
push
lock
cmp
push
sti
add
jg
cmpsb
ss
add
dec
xor
lahf
testb
sti
stos
jle
adc
fdivl
stos
inc
js
in
in
mov
xchg
jmp
adc
cmpsl
push
ss
mov
mov
xlat
jno
mov
fcompl
leave
cmp
into
into
mov
add
cld
outsl
scas
movsb
aad
iret
sub
xor
testl
xor
xchg
xor
mov
or
sub
xchg
ja
negb
jno
push
lret
lret
leave
pusha
mov
out
mov
lods
aam
shll
mov
rcll
aad
jae
pop
xor
jne
inc
pop
lahf
fcoml
dec
cmpsb
mov
inc
sti
push
cmp
leave
push
or
add
into
sub
push
insl
sbb
mov
ds
call
int
leave
sbb
outsb
adc
sbb
and
movsb
bound
lahf
rcll
mov
jg
dec
mov
mov
mov
mov
mov
adc
sbb
mov
test
gs
fadd
cwtl
das
repz
subb
cmp
lret
jne
aad
rcrb
pop
shlb
jle
incb
pop
repnz
mov
sub
decb
sub
jne
ret
fists
xor
loopne
mov
je
mov
fwait
xchg
add
ficoml
mov
or
and
fucomi
cld
cmp
cli
pop
sbb
mov
fdivs
mov
mov
xchg
pusha
push
jo
rcrl
mov
pop
push
lret
adc
or
adc
push
push
xchg
fwait
push
fwait
mov
dec
push
enter
enter
out
rcl
xchg
or
hlt
jne
aad
out
jbe
push
dec
sbb
push
push
sbb
mov
lahf
mov
push
call
xchg
push
out
dec
nop
insl
jb
push
adc
or
xchg
cmp
pushf
sbb
xor
gs
bound
mov
inc
adc
adc
xor
jmp
or
call
push
pop
mov
pop
adc
ficoml
fldl
push
and
adc
add
stos
jmp
testb
sbb
fisttpll
cmp
jmp
or
cmp
mov
loope
pop
cmp
xchg
sbb
xchg
mov
jp
ss
xlat
cmp
push
xchg
aas
dec
dec
aam
pop
pop
dec
in
pop
jmp
test
cmp
fldl
call
int3
shl
outsl
sbb
jbe
les
add
aaa
cmpsl
mov
xchg
ja
flds
jno
pop
add
ss
push
mov
cmpl
cmpsb
add
pop
push
dec
jno
gs
inc
pop
mov
fistl
xor
les
test
dec
push
mov
dec
stc
ljmp
cltd
call
push
cmp
data16
lret
sbb
xor
fistl
jb
inc
jmp
sbb
sbb
mov
outsb
mov
mov
fs
xchg
sub
idivl
and
fsubr
lret
inc
jmp
repnz
gs
xchg
xchg
pop
adc
inc
xor
cltd
cmp
aad
cs
xchg
jp
jecxz
push
push
mov
mov
mov
push
dec
sub
cwtl
add
das
movsl
out
in
mov
addr16
inc
outsb
lea
jmp
pop
pushf
fisubrl
push
ss
out
aam
xor
cmp
pop
incb
xor
ret
lods
xorw
xor
ja
fnstenv
in
cmp
clc
and
push
orl
or
fiaddl
mov
in
and
aad
jmp
stc
sbb
in
cli
push
adc
xor
and
dec
clc
mov
sub
sub
fs
hlt
sarl
sub
jo
fwait
testb
xor
in
testl
push
movsl
or
inc
ds
fsts
add
ds
inc
xor
push
out
mov
adcb
cltd
sub
mov
adc
xchg
cmp
push
pop
hlt
fimull
pop
sbb
imul
inc
daa
out
xor
arpl
push
push
xor
adc
pop
pusha
ss
test
dec
or
es
cwtl
jb
jae
or
mov
je
push
jg
stos
lods
sti
nopl
lret
xlat
push
dec
insb
lret
mov
or
or
rcr
fs
test
loop
xlat
push
inc
das
inc
cwtl
hlt
jecxz
es
je
fld
jmp
cld
scas
jb
pop
xchg
test
enter
push
imul
rcrl
add
stc
fucomip
int3
xor
push
or
push
xchg
mov
adc
aad
lea
mov
imul
ljmp
call
loopne
aad
cmp
cmp
movb
cwtl
stos
mov
ja
mov
mov
sub
mov
adc
sub
jo
adc
fstpl
mov
cli
cltd
pusha
mov
repz
mov
icebp
ss
push
ljmp
dec
pop
push
lds
xlat
xchg
push
cmc
dec
clc
popf
mov
push
das
aas
rclb
xor
pop
into
and
mov
or
inc
outsl
mov
loop
outsl
jnp
mov
jne
es
inc
adc
jnp
push
jge
popf
and
inc
inc
ss
jle
add
cmpsl
adc
and
jns
pop
cmpsl
cmpsl
xor
in
sub
sbb
xchg
cmp
ss
lea
cmpsb
out
lret
ficompl
adc
or
sarl
int3
in
pop
xlat
bound
inc
push
add
fstl
xchg
push
cmp
jecxz
inc
adc
push
inc
jno
mov
out
dec
loopne
popa
cmp
in
push
sub
int3
aam
jmp
mov
and
pusha
cmc
adc
jle
and
add
add
xchg
inc
fsubrs
xchg
mov
sbb
test
enter
or
cmp
and
scas
add
push
sahf
imul
inc
out
out
les
lock
sbb
push
pop
test
jcxz
push
or
inc
dec
insl
std
mov
inc
stos
imul
rolb
sbb
into
fucom
mov
testb
sti
das
xchg
pop
and
xchg
insl
xchg
icebp
push
stos
test
ficoms
addr16
int
push
mov
sub
xorl
lret
xlat
aas
cld
push
fldenv
aam
pop
mov
jb
popf
xchg
sbb
pusha
shrl
fwait
je
xor
jg
dec
inc
ficoml
xchg
aam
xchg
mov
xchg
xchg
pushf
andl
mov
jle
pushw
shlb
adc
outsl
stos
hlt
ljmp
sbb
pop
repz
pop
fildll
sub
sub
stc
pop
jns
mov
xor
js
xchg
es
inc
and
scas
fsubrp
sbb
push
fdivr
add
or
mov
cmpsl
sbb
cmpsb
jp
dec
int3
gs
add
pusha
int3
inc
fincstp
or
inc
outsl
mov
jnp
fisubrs
lcall
mov
pop
or
add
mov
popa
xor
lcall
adc
pushf
jb
out
mov
inc
mov
xlat
cwtl
ljmp
cmp
mov
and
mov
in
jmp
cld
sub
xor
out
fbstp
inc
call
sbb
push
jb
stc
adc
stos
shlb
adc
jg
xchg
xchg
fisubl
mov
push
in
insb
testl
push
mov
lahf
sbb
addr16
loopne
test
mov
test
in
hlt
mov
and
int
leave
stos
mov
test
andb
mov
mov
mov
mov
add
cmpsb
test
sbb
pop
cmp
xchg
cs
jns
xor
push
test
je
lods
pop
push
push
fldenv
std
clc
sahf
fisubs
push
pop
adc
or
icebp
lret
pop
ljmp
push
ljmp
mov
sbb
decl
push
test
lock
rcrl
fcmovnb
xchg
cld
outsb
stos
add
cmp
sbb
data16
xor
rcrl
mov
movsl
cmp
inc
nop
daa
jnp
jp
and
cli
inc
jne
sti
cltd
mov
lds
cmp
ljmp
xchg
insb
push
mov
or
in
jl
push
xchg
lea
cli
jbe
imul
inc
push
hlt
pop
sub
ljmp
nop
xchg
jns
fwait
mov
push
adc
nop
cmc
push
inc
out
lahf
pop
scas
push
push
xchg
mov
adc
rol
sbb
mov
or
nop
das
sub
mov
inc
cmp
or
and
int
dec
out
test
pop
mov
mov
xor
jecxz
enter
and
mov
jl
aad
sub
mov
cmp
push
ljmp
inc
sub
icebp
lahf
adc
or
and
inc
cmpl
push
int3
jg
xor
pushf
add
insl
mov
paddb
add
stos
stc
mov
and
dec
adc
pop
fcom
inc
lea
mov
rorl
es
xchg
add
sbbl
imul
mov
mov
inc
inc
stc
repz
adc
es
mov
push
in
sub
jmp
mov
bound
lret
addl
fnstcw
testl
push
mov
fcmovnb
in
xor
scas
push
mov
sub
or
daa
xchg
sbb
bound
je
mov
lret
inc
inc
aas
mov
mov
push
or
mov
insl
lods
imul
mov
lea
std
enter
sahf
push
add
stos
inc
repz
mov
fmuls
sub
ret
mov
mov
mov
js
test
test
shl
lods
mov
push
daa
xchg
push
jmp
test
fwait
sti
or
jne
cs
xor
aam
xor
call
lds
mov
inc
daa
inc
js
cmp
push
xchg
lea
jo
xchg
jno
cs
clc
push
cltd
push
dec
xchg
and
add
fnsave
push
mov
mov
jnp
sbbb
sbb
and
in
cmp
xchg
loopne
mov
lahf
adc
xchg
mov
push
dec
mov
mov
ficoms
push
jle
ja
mov
mov
js
rcl
in
jge
cli
mov
pop
xchg
ja
sub
cmp
mov
mov
idivl
subl
loope
rol
fwait
mov
jge
xor
aaa
sbb
or
inc
hlt
xchg
xchg
and
and
test
lret
adc
popl
push
cli
jne
aas
fstl
or
js
pop
pop
std
pusha
jecxz
or
std
getsec
cltd
mull
arpl
dec
push
pop
dec
rorb
and
fnstcw
mov
leave
dec
loope
jge
xchg
iret
clc
jae
mov
push
loopne
push
flds
and
sbb
add
lcall
and
std
mov
lret
and
jbe
cmp
mov
stos
std
repnz
or
xchg
outsb
add
outsb
ja
mov
dec
pop
and
sub
dec
ds
cmp
add
and
sti
mov
mov
inc
xlat
sbb
and
addl
ja
lcall
sbb
xchg
add
inc
xor
adc
je
or
pusha
in
adc
inc
adc
add
dec
stos
rcr
sub
fdivrp
movsl
stos
sub
jae
adc
push
add
xchg
ds
jmp
test
cwtl
lods
push
in
les
lds
jle
mov
dec
ss
enter
xor
dec
fwait
and
out
mov
xor
out
int3
sbb
dec
bndstx
fs
xchg
cmp
xor
jecxz
xor
jle
iret
fstpt
jnp
xlat
cmp
inc
adc
stos
aas
dec
icebp
mov
int
add
add
xor
sbb
xlat
insl
loop
lea
int
add
dec
mov
out
in
pop
gs
repz
rorb
fwait
roll
push
inc
jge
jmp
push
jo,pn
pop
testl
cmp
shlb
enter
subb
sub
sbb
shl
mov
mov
ret
push
iret
mov
cmp
dec
nop
sbb
ds
inc
fstpl
mov
lods
imul
ret
and
int3
lret
cmp
sbb
or
ret
ret
outsb
xorb
cwtl
sahf
cmc
stc
mov
sub
sbb
sub
scas
ja
jb
sub
popa
xchg
adc
mov
insl
pop
push
insl
lret
hlt
or
out
es
addr16
push
mov
mov
mov
or
aas
lcall
inc
xlat
pop
ds
sub
loopne
cmp
mov
mov
mov
mov
push
test
jl
push
ret
aaa
sbb
cli
add
fistpll
flds
dec
sahf
dec
and
pop
aam
rcrl
mov
pop
and
pop
cmpsb
xor
ja
fcomps
xlat
xchg
or
sub
mov
aas
dec
dec
out
int3
and
mov
and
loop
xor
push
cmp
jo
cmp
or
add
mov
sub
into
gs
in
test
mov
xchg
scas
or
adc
sahf
sbb
das
insl
sub
loop
pop
adc
inc
or
adc
dec
push
rcl
pop
cltd
test
sbb
icebp
pop
mov
fists
adc
xchg
xor
xor
cmp
rclb
test
inc
in
sbb
arpl
xchg
push
inc
stos
out
imul
dec
andl
mov
cld
push
pushf
loope
movsl
and
add
icebp
sub
xor
sahf
jns
into
xor
scas
clc
out
xchg
in
std
pop
cmp
push
xchg
inc
fcmovnb
xor
lret
and
sti
inc
cmp
dec
xchg
fwait
mov
call
lret
push
aas
mov
mov
call
add
xchg
and
sub
nop
pop
cwtl
add
fucomp
data16
mov
inc
fsubs
stos
mov
test
adc
test
fsubrs
data16
xchg
rolb
call
sarb
mov
test
sti
jae
cmp
jb
in
sub
out
xor
cmp
das
pop
mov
cmp
add
push
sbb
sub
mov
jns
leave
jl
test
push
fiaddl
lods
jmp
sar
popf
xor
push
cmp
in
testl
sub
mov
nop
and
mov
push
adc
sti
mov
sub
repz
hlt
cmpsb
ret
sub
ds
gs
sbb
mov
xchg
adc
daa
aad
outsl
rorl
mov
sarl
mov
push
js
aad
adc
push
inc
int
orb
stc
sub
mov
mull
mov
mov
xlat
pop
xor
push
addr16
sub
rorb
or
inc
mov
je
mov
jbe
mov
sahf
mov
adcl
lret
outsb
cmpsl
sub
in
outsb
sbb
loop
insl
pop
and
push
jg
out
adc
mov
mov
fdivl
mov
push
stos
shl
adcb
out
push
ss
mov
xchg
inc
or
test
lock
fiaddl
adc
jns
outsb
push
or
adc
mov
icebp
popf
mov
or
cmpsl
dec
outsl
hlt
sbb
addr16
adc
jbe
enter
dec
jecxz
gs
or
ljmp
imul
xlat
ja
aaa
push
mov
pop
xor
adc
adc
in
add
sbb
pop
adc
in
xor
cmp
dec
bound
cmpsb
insb
ret
mov
in
add
xchg
adc
xchg
sbb
sbb
pop
sbb
lods
inc
or
das
cmp
and
add
repz
jae
mov
mov
ret
mov
sbb
sub
dec
es
xor
or
xchg
xor
xor
cmp
push
data16
push
xchg
mov
or
xchg
mov
jne
daa
outsl
fs
dec
pushf
popa
mov
adc
cmp
jnp
out
dec
test
push
mov
cltd
dec
pop
les
cmpb
es
xorb
in
or
addr16
inc
mov
and
orb
std
sub
nop
inc
stos
dec
adc
or
insb
jle
inc
leave
flds
ret
and
sbb
dec
cmp
sub
sbb
shrb
mov
aam
aam
notb
jmp
xchg
in
ljmp
push
mov
inc
loopne
out
lds
push
adc
popf
lods
push
mov
dec
iret
pop
jo
lock
jae
out
les
lret
in
testb
stos
cmc
xchg
fdivp
push
std
aas
mov
mov
mov
in
mov
push
in
mov
mov
loope
loopne
dec
les
sti
imul
lods
add
xchg
jne
in
cmpsb
inc
fadds
and
out
adc
mov
in
xor
sub
xlat
shlb
shlb
mov
test
icebp
push
insb
sti
pop
cmpsb
cmp
inc
add
dec
push
loop
fwait
aad
fisubrs
mov
imul
jecxz
loopne
pop
sub
sbb
jg
aad
daa
testb
fistl
push
jp
mov
aad
lahf
lcall
sub
ljmp
push
mov
sub
repnz
popf
lret
dec
iret
decb
inc
push
pop
inc
pushf
shrb
dec
pop
jbe
lret
roll
push
fstpt
jmp
xchg
dec
lods
dec
push
sub
sub
out
add
jmp
xlat
arpl
xchg
test
scas
imul
lock
mov
roll
or
fildl
out
rcpps
jmp
lea
aas
lret
adc
ret
out
push
call
jb
or
insl
mov
xchg
jmp
repz
xlat
xchg
xchg
mov
sub
xor
mov
mov
test
into
outsb
push
test
or
xchg
cs
iret
adc
dec
xchg
jns
in
ds
add
mov
and
inc
cwtl
push
imul
jae
jmp
shrl
push
andl
imul
in
jl
aad
mov
inc
aam
jmp
rolb
jae
popa
in
dec
cmp
in
ja
add
sbbl
lret
imul
cmp
lret
adc
inc
in
jbe
add
dec
cmp
call
loope
sub
sbb
mov
in
xlat
mov
mov
loop
sub
sbb
ds
imul
mov
sub
pushf
xor
sub
nop
and
ljmp
imul
mov
shlb
cmp
cmp
mov
xchg
jl
adc
mov
int
lds
cmp
imul
jae
imul
pushf
jae
lret
inc
xchg
cli
and
mov
mov
pop
cmpsl
adc
cmp
inc
jl
clc
sahf
outsl
fcmove
and
cltd
adc
loopne
lds
mov
ret
stc
jl
aad
nop
sbb
js
subl
imulb
cli
jle
loopne
hlt
xor
shrl
lds
hlt
mov
jne
stc
pop
xchg
out
adc
stc
or
jbe
push
cld
or
sarl
test
rol
jne
cmp
mov
rcll
test
xchg
aas
ret
das
cmp
jl
jl
jne
sahf
std
mov
mov
jle
xor
jmp
mov
jge
or
fdivrs
int
jbe
loopne
push
dec
inc
popa
es
popf
mov
data16
xchg
jl
sbb
fists
dec
in
cmpsl
negb
pop
xchg
insb
movsl
push
sti
xchg
cwtl
mov
mov
daa
cmpsb
dec
scas
addr16
cltd
test
jb
pop
dec
daa
xchg
ds
dec
add
xorb
mov
into
in
xor
xchg
push
jle
stos
roll
xchg
lret
popf
ljmp
mov
jno
cmc
inc
pop
sbbb
test
jl
mov
shll
dec
jns
enter
rclb
mov
enter
push
shll
movsb
arpl
jle
pop
push
sub
rorl
inc
stos
in
add
xchg
jnp
test
mov
ja
inc
cltd
add
inc
inc
fs
jp
mov
adcl
pop
iret
mov
in
push
adc
xchg
out
fxam
xchg
fidivrs
cltd
sbb
mov
mov
push
mov
pop
dec
imul
subl
xchg
sub
sbb
mov
enter
in
popl
add
xorl
das
pop
aas
sbb
sbb
scas
ljmp
xchg
pop
jo
fldl2t
pushf
mov
add
flds
push
push
mov
xlat
jbe
out
sbb
mov
js
push
and
std
xchg
ret
and
or
inc
jle
sub
enter
or
and
xor
enter
insb
lock
adc
jbe
iret
jp
and
jl
test
dec
dec
pop
mov
js
das
shlb
lods
push
mov
adc
jl
sbb
lock
fldl
jp
dec
jae
sarb
ja
sub
and
cmp
loopne
jnp
push
test
int3
jnp
popf
pop
jo
mov
in
daa
ret
sbb
mov
movb
mov
mov
insl
add
rorb
and
scas
shrl
stos
test
mov
or
push
das
outsl
sub
ret
jp
pop
cld
xchg
cmp
xchg
sub
dec
mov
inc
cmp
adc
js
dec
bound
in
and
aam
pop
xchg
outsl
push
or
pop
test
mov
adc
add
in
in
inc
imul
push
mov
xchg
in
les
add
addr16
xchg
sbb
outsb
adc
push
shl
sub
repnz
and
adc
inc
xchg
das
decl
mov
loop
push
rcll
jecxz
cmc
dec
insb
out
xchg
je
cmpsl
mov
out
test
test
xlat
js
adc
ficomps
lods
enter
das
mov
popa
jg
xlat
fsubr
add
ret
shll
sbb
xchg
xchg
or
in
addl
mov
popl
jno
pop
xchg
push
fldt
add
fists
fisubl
int3
push
jb
gs
sbb
or
in
lods
insb
hlt
lret
sbb
scas
js
jnp
clc
push
or
cs
pop
dec
data16
daa
lods
cmp
and
test
lret
cld
pop
cmc
sub
inc
outsl
xor
dec
addr16
mov
in
add
dec
mov
lods
pop
push
loop
stos
adc
out
mov
ljmp
aam
repz
and
sub
sbb
fwait
push
jecxz
jge
jb
jne
or
outsl
hlt
jg
divl
dec
jno
daa
xchg
inc
xchg
fdiv
subl
push
je
pop
mov
add
fs
sub
push
xor
sahf
cmpsl
xchg
ds
mov
enter
xchg
test
rcl
out
mov
mov
dec
in
dec
push
cmp
lcall
cwtl
rcll
repnz
pop
sar
into
xchg
into
iret
loope
sahf
push
or
sbb
push
lcall
aas
out
mov
mov
data16
int3
jecxz
xchg
cmp
xlat
addl
pusha
xchg
inc
push
lahf
rorb
inc
jo
fimuls
dec
movsb
pop
mov
and
cld
xor
scas
out
inc
fwait
lock
lahf
pusha
adc
jnp
pusha
mov
pop
mov
cmp
insb
aaa
xor
xlat
adc
or
sbb
xchg
jnp
xchg
push
enter
scas
out
or
inc
bound
push
xor
xchg
push
pusha
clc
jecxz
and
add
in
iret
inc
insb
add
mov
cmp
xor
cmc
xor
xchg
pop
xchg
inc
dec
popf
cli
pop
add
sub
inc
rcrl
inc
cli
das
push
lcall
les
arpl
mov
scas
enter
adc
lahf
jb
hlt
shl
aad
lods
adc
inc
or
gs
movsb
fidivl
rorb
in
clc
mov
xor
cmp
push
jg
mov
cld
subb
sbb
adc
fs
mov
jp
lock
jle
add
push
fisubl
mov
lret
cld
jecxz
fsubrl
imul
lods
inc
xchg
lret
sub
mov
addr16
cltd
cli
leave
pusha
shl
sub
shl
inc
dec
inc
idivl
out
push
rcrl
push
int3
outsb
jecxz
shrb
and
cli
jnp
mov
pop
pop
jp
jecxz
add
jbe
test
stos
xchg
movsl
mov
dec
call
inc
cli
push
mov
jns
mov
out
loopne
shll
dec
push
xchg
hlt
imul
xor
divb
cmpsb
rcrb
stos
dec
mov
push
push
jnp
cwtl
les
xor
in
loope
movsb
aaa
stc
and
sbb
lahf
xchg
mov
push
subb
jp
pop
dec
or
mov
out
jmp
jo
mov
push
push
mov
int
mov
mov
sub
jg
xchg
jno
lcall
push
loope
dec
inc
out
dec
imul
movaps
es
es
add
insl
sbb
inc
pushf
xchg
cmp
pop
xchg
mov
adc
addb
xchg
xchg
leave
pusha
mov
ret
out
shll
pusha
jmp
and
mov
cmpsb
or
insb
mov
les
xchg
mov
rclb
jno
cld
dec
cmp
push
stos
xchg
mov
fsubrl
sub
xor
inc
and
jo
jge
cld
dec
push
fisubrs
pop
sahf
test
fnstcw
sub
push
cmpsl
fs
mov
addb
cmpsb
fidivs
jecxz
cmp
cld
xchg
cmpsb
jle
jno
xchg
inc
cmp
push
push
sbb
dec
aaa
fnstenv
pop
xor
pop
jne
std
jmp
xor
sbb
call
imul
and
and
imul
xor
jge
fadds
and
and
jbe
sub
inc
push
in
ret
lahf
aaa
int
mov
mov
sahf
pop
jmp
and
int
stc
pop
cmp
out
jmp
pop
cmp
mov
add
sbb
jge
sub
test
es
pop
insb
outsl
xchg
popf
insb
mov
ret
data16
je
sbb
mov
lods
lds
cmpsl
mov
call
iret
pop
mov
cmp
outsb
add
xor
clc
in
xor
xor
add
repnz
outsb
das
mov
mov
or
gs
xor
pop
jo
cmp
aam
aam
pusha
add
movsl
cmp
aaa
out
mov
mov
xor
testl
mov
dec
jno
lock
mov
xor
jmp
mul
dec
pop
gs
cmpsb
pusha
cli
pop
lret
cwtl
sbb
mov
sub
leave
pop
test
leave
mov
mov
or
sbb
dec
mov
lods
ljmp
xchg
adc
enter
sub
jno
or
loopne
popa
adc
ret
fisubrs
push
xlat
jbe
loope
cmp
lcall
sbb
jne
hlt
mov
sahf
loop
adc
xor
jmp
in
adc
aas
mov
data16
sub
cmp
loopne
push
inc
movsb
dec
xchg
sub
jl
outsb
scas
or
inc
nop
sti
cmp
xor
jmp
mov
mov
xchg
push
mov
in
ret
xchg
pop
mov
cwtl
pushw
in
mov
dec
xor
jg
jle
repz
aas
adcl
sbb
and
ja
bound
mov
pop
sahf
push
and
adc
mov
xchg
push
es
pop
add
add
lods
and
pop
mov
in
jne
mov
dec
cltd
sub
inc
outsl
daa
inc
mov
jecxz
je
jg
outsl
dec
in
adc
mov
add
jl
dec
pop
pop
sbb
sarb
sbb
xor
sbb
scas
cmp
mov
jle
dec
cmp
or
es
pop
inc
cli
cld
push
ss
fs
xor
mov
mov
in
fisubs
les
and
and
mov
xchg
cld
out
cmp
inc
mov
jns
xchg
fidivl
or
dec
shrb
dec
stc
insb
cmpsb
xchg
sub
cmp
dec
cmpsl
aad
lret
into
jmp
ret
xor
clc
fwait
shr
out
xor
xchg
jno,pn
dec
iret
loop
mov
mov
jle
loope
mov
nop
bound
or
into
pop
mov
inc
cmc
mov
inc
gs
fmull
jp
xchg
xor
adc
dec
loopne
fsubl
and
les
lahf
inc
cmc
andl
aam
jae
leave
lods
aas
cmp
mov
lds
jb
shrl
sub
mov
cmp
inc
fsts
subl
xor
xor
ds
repnz
jmp
add
sbb
movsl
or
inc
inc
push
jp
icebp
mov
dec
mov
loopne
inc
iret
pop
imul
pusha
dec
add
push
mov
fidivrs
dec
sarb
ds
cmp
inc
xchg
jbe
leave
sbbl
test
jb
cmp
mov
add
inc
mov
mov
push
movsl
inc
inc
sahf
mov
in
sub
cmp
push
jge
or
mov
ret
lods
push
dec
arpl
notl
in
push
mov
stc
ljmp
rcr
jp
subl
movsb
fs
ret
dec
adc
jnp
rclb
imul
ja
mov
fcomps
or
sbb
add
cs
cmpsb
push
pop
push
fnsave
addr16
lret
sub
jo
sub
mov
xlat
sar
test
les
je,pn
pop
xchg
popf
cs
jb
aad
sti
clc
stos
mov
xchg
push
out
xor
cmc
mov
pop
jle
enter
jae
mov
mov
xchg
subl
or
movsb
add
rol
jns
div
test
dec
ret
sub
lcall
and
jo
test
xor
dec
sti
or
add
mov
add
add
cmp
dec
stos
mov
aad
in
mov
mov
xchg
pop
push
insl
sub
int3
add
jb
into
sub
test
add
and
and
bnd
mov
mov
dec
mov
inc
ret
sub
push
jb
jnp
push
imul
ja
imul
shrb
or
xor
dec
mov
icebp
jl
and
mov
mov
ret
pop
insl
repz
imul
and
into
xchg
cwtl
cli
and
ss
test
js
add
dec
mov
int3
mov
mov
loopne
lret
sbb
or
std
adc
push
pop
push
jp
lds
sbb
in
push
jecxz
xor
es
mov
shrl
subb
ror
and
stc
out
das
addb
cmp
mov
addr16
fsts
push
inc
out
pop
enter
pop
in
stos
sub
gs
lret
int
sub
or
es
add
jmp
push
inc
outsl
xchg
inc
inc
lea
jbe
xor
out
lret
add
setns
mov
les
rcrl
roll
jne
and
mov
jecxz
jmp
rcll
mov
or
je
negl
jecxz
or
jge
mov
aaa
jb
add
xchg
dec
and
mov
jae
push
mov
pop
cmc
cmp
pop
and
sarl
clc
mov
and
add
inc
push
and
mov
test
lret
lock
mov
shll
sti
clc
stos
negl
mov
and
sbb
mov
movsl
mov
outsl
mov
roll
jle
loop
cli
out
cmpsb
fwait
mov
bound
aad
push
cmp
pushf
lods
inc
and
sahf
daa
push
loopne
pop
ret
dec
or
jae
push
movsl
pop
arpl
or
scas
xchg
les
mov
repnz
mov
dec
dec
scas
jge
inc
xlat
in
int
push
sbbl
repz
movsl
cmp
test
push
dec
dec
iret
aad
in
adc
push
hlt
fisubrl
int3
xchg
cmp
inc
cli
ds
repnz
fdivrs
lahf
in
rorl
and
push
andl
and
pop
jmp
jge
andb
pushf
pusha
cmp
js
xchg
popf
sub
mov
jge
jecxz
movsl
dec
inc
xchg
lods
js
sub
movsb
jge
mov
insb
sub
dec
push
cmc
mov
jl
or
shrb
xchg
pop
popf
aas
mov
xor
int3
mov
mov
js
ss
mov
add
cmp
sbb
cmp
out
mov
subb
fcomps
int3
pusha
movl
xor
push
mov
fbstp
ds
int3
push
pop
adc
in
xor
test
lret
sti
rcrl
shll
mov
loop
mov
add
hlt
cmp
incb
jmp
xor
mov
mov
mov
lret
cld
leave
jge
push
mov
in
dec
push
repz
sbbb
mov
popa
scas
repnz
inc
icebp
movsl
jbe
push
icebp
icebp
pop
jnp
mov
stc
es
mov
mov
fcoml
xchg
popl
lock
int
lods
xchg
mov
xor
jno
jp
fisubs
inc
aas
inc
iret
xor
sbbl
sub
sbb
dec
fcom
lcall
cmpsb
cmp
cmc
mov
push
aas
pop
sbb
pop
push
cli
jo
sub
data16
push
jns
mov
mov
push
xchg
push
cmpsb
cltd
imul
mov
jecxz
ret
pushf
mov
imul
cld
popl
enter
xorb
cmpsb
aad
mov
into
movsb
mov
rolb
faddp
mov
lea
gs
adc
stc
ds
adcb
bound
cmpsb
adc
sub
sbb
inc
inc
push
add
lahf
xorl
subb
mov
mov
aam
xor
xchg
andb
fsubrs
and
jmp
inc
negb
outsb
xor
pop
sbb
mov
and
xchg
sbb
testl
pop
xchg
dec
stos
adc
dec
sarl
pop
ret
scas
push
xchg
mov
sbb
bound
mov
and
sbb
aaa
aas
mov
mov
mov
outsb
xchg
movsl
sub
test
imul
addr16
fidivrl
inc
push
push
bound
add
cmc
mov
std
inc
push
arpl
mov
ret
pop
shlb
mov
out
std
pop
inc
inc
fsubrs
or
repz
fbstp
pop
and
mov
jge
xchg
in
or
test
mov
subl
stc
loopne
ficompl
inc
scas
pop
jae
xchg
xor
xchg
arpl
popf
fisubrs
xchg
mov
repz
nop
lea
or
push
pushl
sub
out
pop
xchg
and
negb
or
or
in
popf
xchg
pop
nop
push
es
in
mov
push
lock
and
arpl
loopne
cmp
mov
pop
pop
push
push
jge
jno
cli
sti
xchg
in
enter
inc
mov
test
es
add
popf
subb
inc
and
xlat
and
add
pop
int
pusha
js
inc
jmp
mov
inc
inc
dec
insb
mov
repnz
xchg
shrl
adc
mov
mov
sub
and
sub
dec
fiadds
cli
test
mov
es
mov
pop
jle
sbb
xor
lret
cmp
mov
mov
pop
divl
dec
repz
push
push
add
lcall
outsb
jp
jp
lods
rolb
roll
mov
adc
sub
mov
sub
out
stos
insb
jle
ljmp
pop
push
shll
repnz
push
aas
mov
or
xchg
mov
outsb
jp
ret
push
sbb
or
pop
mov
cmp
int
mov
mov
cmp
xchg
outsb
push
rorb
add
sbb
push
outsl
adc
adc
fwait
sbb
xorl
add
jo
and
push
cs
fstl
enter
rcrl
xor
subb
inc
push
or
mov
divl
push
xor
adc
lret
jmp
mov
icebp
gs
cwtl
out
loop
jne
ljmp
in
jb
or
fs
xor
xchg
imul
stos
cld
xchg
jb
inc
dec
repnz
or
loop
js
mov
jmp
fisubrs
fnsave
inc
mov
add
adc
popf
fimull
mov
mov
aaa
dec
cmp
pop
testb
aad
clc
xchg
aam
inc
mov
sub
mov
push
pop
xor
out
lcall
pop
mov
push
cs
and
popa
lcall
xchg
vpunpckldq
jb
pop
subl
ljmp
mov
fbstp
sub
ret
cwtl
outsl
add
lods
sbb
testb
push
movsl
xor
sub
adc
xor
adc
les
inc
sbb
cltd
xchg
lea
fildl
adc
adc
or
xchg
pusha
popa
mov
loopne
xchg
push
jnp
cmpsb
insb
arpl
add
aam
jno
mov
lods
data16
pop
add
adc
mov
mov
int
shrl
sbb
ret
pop
mov
rclb
sbb
clc
adc
sub
in
notb
jbe
scas
cmc
movsb
mull
pusha
popf
add
jne
push
lahf
movsl
sub
xor
inc
or
dec
imul
ret
sti
pop
pushf
aad
repz
cmp
mov
push
push
rcll
ja
daa
pop
adc
dec
mov
xchg
sbb
and
in
test
aad
add
push
add
push
lret
cmp
js
inc
mov
push
loop
jne
or
insl
in
bound
sub
sub
lcall
mov
aad
push
sbb
popa
jmp
shl
xor
mov
mov
push
outsl
sti
xlat
das
scas
adc
mov
sbb
in
sub
cmp
les
inc
and
nop
pop
movsl
ret
testb
mov
mov
insl
mov
adc
mov
pop
movsl
sahf
clc
and
mov
je
mov
inc
push
mov
fcomps
sbb
xor
mov
js
adc
push
fwait
imul
pop
lods
xchg
movsb
aaa
xor
inc
lcall
mov
inc
repz
inc
xchg
nop
pop
dec
flds
cmp
sub
xor
add
imul
les
and
mov
add
mov
idivl
call
lods
addb
mov
gs
in
mov
inc
dec
inc
push
cmp
sub
and
bound
lcall
sub
cmp
movsb
or
pop
out
or
test
aas
cmp
xor
jmp
stc
insl
sub
fwait
ret
pop
inc
push
mov
movsl
iret
xchg
lret
lock
andb
xchg
in
push
pop
test
sahf
xor
int3
mov
loopne
xchg
repnz
mov
xor
popf
pop
es
test
shll
add
lock
ret
push
js
sbb
les
sub
call
je
xor
cmp
subl
sub
mov
outsb
adc
dec
in
mov
in
pop
insl
or
pop
fwait
ret
movsb
lcall
out
jno
push
call
mov
mov
call
add
mov
adc
movsb
cmp
int
arpl
hlt
mov
nop
decb
mov
push
inc
adc
shrb
rep
mov
fstps
mov
sbb
sub
jae
lret
lods
subl
ds
jnp
pop
insl
mov
xchg
cwtl
outsl
mov
sbb
out
idiv
mov
rcl
mov
enter
mov
scas
arpl
fbld
and
xlat
pushf
jge
pop
std
pop
push
pop
or
nop
daa
and
jg
push
in
insl
fsubs
jbe
loop
and
ret
out
mov
imul
stos
xlat
push
inc
xchg
movsl
mulb
jl
out
push
out
xor
out
cmp
test
dec
xabort
and
lret
push
adcl
mov
je
push
aas
aas
jno
mov
adc
xor
jecxz
push
out
inc
cmp
loopne
cmp
arpl
adc
rep
or
or
imul
sbbl
loopne
into
adc
jb
push
lcall
shll
pop
sarl
add
sbb
mov
icebp
lcall
inc
clc
xchg
data16
cwtl
jns
xor
das
insb
and
pop
loop
adc
jg
xchg
mov
jo
jne
adc
xor
aas
mov
sub
das
insb
std
inc
mov
cmpsb
in
bound
cli
shlb
mov
stos
mov
andl
sahf
out
notb
xchg
mov
lea
mov
stos
push
sub
in
stos
cmp
std
nop
sbbl
stc
aas
aas
test
mov
loop
cmp
cltd
shl
mov
test
xchg
and
mov
lods
inc
scas
cwtl
jae
jmp
fbstp
sub
addb
nop
xchg
aas
data16
lahf
mov
mov
inc
xor
in
jp
test
repz
adc
aam
dec
enter
cmp
push
rcll
mov
or
ret
movl
sub
sbb
jbe
push
mov
fnstsw
imul
sbb
mov
add
fdivs
jae
mov
inc
loopne
cmpsb
mov
mov
add
enter
dec
into
enter
jmp
ret
fwait
sbb
fidivl
xchg
sub
mov
std
incb
lds
dec
or
jo
int
mov
daa
cmpsb
fs
sarl
stos
pop
mov
add
xchg
data16
sahf
data16
sub
nop
push
mov
test
xor
push
adc
lret
mov
mov
shlb
cmpsl
rcr
or
xchg
push
xlat
pushf
xor
sbb
mov
aad
push
lds
ret
xchg
pop
and
shr
daa
jnp
xor
mov
in
shlb
jo
mov
aad
decl
cmp
in
div
mov
xor
les
cmpsl
sarl
mov
icebp
js
cwtl
outsl
mov
outsb
jns
dec
mov
mov
mov
shrb
iret
mov
push
fwait
push
xchg
leave
pop
adc
push
in
sar
pop
lret
es
lcall
aas
and
out
int3
in
int
js
fsts
dec
cmp
pusha
sub
inc
mov
arpl
int3
pop
cld
mov
sub
sti
dec
pusha
adc
sbb
js
mov
dec
lods
or
add
sti
jge
inc
add
and
push
imul
das
popf
mov
fimuls
cltd
fisubl
cmp
jl
scas
mov
dec
das
push
inc
xor
in
and
inc
movsb
lea
fsubs
inc
arpl
jle
jp
testl
and
xor
mov
in
shrl
shrl
jl
add
xchg
push
xchg
xchg
mov
push
fisttpll
test
xlat
push
add
push
inc
or
mov
into
and
xchg
mov
enter
mov
xlat
inc
push
outsb
in
stos
stos
pop
cmpsb
fcmovnbe
or
cmc
cmpsl
mov
push
lcall
xor
inc
sbb
sti
cli
lock
fbstp
lahf
xor
or
cli
cmpsb
imul
add
stos
push
repnz
mov
xor
test
addr16
inc
sbb
and
fucomip
xchg
mov
xor
addl
jae
push
mov
push
jg
push
cltd
test
bound
sahf
pusha
jnp
cmp
mov
dec
sar
int3
pop
sub
jno
test
mov
xchg
add
jmp
into
rorl
push
and
je
mov
push
ret
or
decl
faddl
fcomps
and
xchg
xor
pop
gs
mov
lock
cld
xor
lea
xor
arpl
fildll
xchg
xchg
sbb
insb
mov
lahf
push
repz
pop
cmpsl
push
cld
cmpsb
cmp
xchg
clc
jp
fbstp
ret
mov
leave
add
push
push
lds
mov
pop
jp
fsubs
xor
sahf
ret
dec
mov
adc
pop
cmp
lret
jecxz
addr16
stos
stos
sub
stos
dec
adc
xchg
push
mov
out
loope
popf
dec
xor
movsl
mov
pop
xchg
jmp
iret
sbb
lods
jae
sub
xchg
lahf
xchg
mov
stos
jb
mov
rcll
add
sub
push
lods
adc
fisubl
sti
shrb
bound
and
mov
scas
aaa
shrl
fadd
pop
adc
cs
ds
jo
sub
add
sub
sar
xchg
outsl
loop
test
sbb
ret
data16
push
push
in
jle
pushf
jnp
and
mov
mov
mov
call
stc
sbb
push
mov
cmp
sub
outsb
mov
dec
pop
adc
das
adcb
xchg
pop
int3
sahf
jb
add
fs
sub
mov
shrl
jp
mov
mov
push
inc
jne
mov
popa
insb
jle
mov
mov
icebp
movsl
jo
dec
in
mov
inc
mov
pusha
icebp
mov
aaa
mov
mov
lcall
loope
push
jno
ror
adc
or
cltd
xor
loop
and
call
mov
inc
repnz
push
jmp
cmpsl
inc
or
lret
sub
or
icebp
hlt
jle
adc
into
mov
inc
push
jmp
pop
divb
cmpsb
lods
lds
pusha
movl
bound
jmp
rcr
stc
inc
or
mov
sub
repz
insb
and
and
lds
pop
lahf
sub
rcrl
dec
cmp
cmp
imulb
mov
dec
shrb
arpl
jns
add
mov
daa
push
jne
pop
popa
call
out
repz
cltd
jo
cltd
pop
cltd
or
xchg
xor
shll
add
mov
loop
test
sahf
mov
pop
and
hlt
hlt
cmp
icebp
aaa
pop
scas
dec
xchg
fs
mov
xchg
fwait
repz
cmpsl
push
outsb
out
and
xchg
add
test
cmp
out
sbb
push
leave
push
in
call
test
cltd
mov
nop
sub
xchg
xor
aaa
and
es
jp
dec
into
loop
mulb
push
add
pop
mov
mov
and
xchg
imul
push
fucom
loop
or
aas
fs
mov
out
out
push
data16
jne
pusha
push
in
stos
mov
sbb
push
les
sbb
add
scas
jb
sbb
xchg
mov
nop
push
out
sar
mov
mov
jle
pop
popf
mov
ret
aad
cmp
insb
leave
or
in
sub
test
mov
push
shlb
cmp
sub
sbb
ficompl
push
sti
insl
loopne
mov
sbbl
lock
dec
shl
cli
jne
jno
jo
jmp
add
ret
test
test
dec
mov
movsb
hlt
cltd
push
fwait
pop
fadds
je
mov
fistpll
lahf
xchg
repz
out
adc
inc
push
out
fstps
movsl
test
lret
notl
or
adc
hlt
dec
orl
movsb
push
stc
add
or
aad
fisubrs
hlt
xor
std
adc
popf
sub
jnp
daa
mov
fbld
hlt
fisttpl
in
stos
lahf
bound
jbe
inc
or
mov
inc
cmp
cmp
jno
fidivl
pop
repnz
movsb
addb
fmulp
ret
pop
sbb
out
lret
bnd
and
loop
push
or
repnz
xchg
xlat
mov
pop
push
mov
test
jbe
int3
cmpsl
pop
mov
jns
jmp
pop
ss
adc
mov
adc
data16
cs
popf
dec
in
cmp
das
jp
movsl
sbb
mov
scas
mov
insb
fwait
adc
xor
dec
jp
testb
dec
wbinvd
dec
mov
push
mov
fwait
xor
sarb
pop
aam
stc
push
addr16
push
jmp
mov
sbb
cmp
inc
jp
sub
cmp
imul
cmp
in
mov
clc
mov
int
inc
iret
scas
xor
lcall
mov
out
rcrb
movntq
out
push
inc
fiadds
frstor
add
leave
sbb
out
int3
es
outsl
dec
int3
jg
add
fidivrs
jp
ds
adc
mov
mov
xorb
pop
mov
push
pop
inc
aam
imul
aam
fwait
mov
dec
pop
aad
cld
cs
lds
scas
sub
test
ret
and
int
adcb
jg
pop
out
or
icebp
mov
call
inc
dec
sub
aaa
jbe
or
pop
and
loopne
inc
add
jl
mov
sub
ss
mov
mov
sub
pop
xchg
adc
mov
inc
sbb
cmc
out
mov
jae
icebp
push
ljmp
inc
mov
and
gs
jae
popa
scas
icebp
ljmp
mov
pop
xchg
loopne
add
mov
popa
test
rcrl
sub
rcrl
sub
sarb
shll
out
aad
jmp
dec
sub
mov
sub
jl
mov
daa
xchg
adc
loop
fwait
and
enter
add
push
pushf
push
pop
sub
js
xor
jge
aaa
movl
movsl
sbb
mov
ret
pop
sub
rol
ret
shl
mov
inc
fcomp
and
je
int
dec
cltd
jae
leave
sbb
stos
pusha
xchg
cld
push
int
out
ja
push
shll
add
stos
cmp
cld
movsb
sub
inc
xor
mov
sti
fcmovne
cmp
dec
add
clc
inc
fsubr
jo
jo
pop
scas
xchg
ret
mov
dec
je
push
data16
adcb
stos
inc
xor
adc
and
pushf
test
fs
aam
leave
and
pushf
decb
ds
inc
icebp
aaa
mov
test
pushf
add
nop
das
xchg
out
dec
es
and
mov
push
pop
sbb
fsts
sbb
pusha
mull
push
jle
loope
xchg
scas
jb
sbb
rclb
lret
bound
call
enter
mov
popa
lret
push
roll
das
xchg
in
mov
insl
mov
pop
stos
pop
jnp
andb
arpl
and
add
fildll
jb
setnp
adc
inc
ja
imul
adc
mov
add
jne
push
mov
push
cmc
fwait
out
insb
add
mov
lcall
dec
shll
jmp
add
fwait
jnp
adc
xchg
filds
sahf
adc
pop
outsb
adc
mov
aad
mov
and
lret
pop
fisttps
add
std
repnz
loopne
xchg
insb
jle
push
rcrl
inc
jl
pop
cmc
rclb
ljmp
jne
fstps
inc
push
jg
add
cmpsb
out
ja
int
adc
pop
jle
push
ficomps
cmp
pop
testl
pop
vandnpd
mov
in
loopne
xchg
hlt
push
inc
lcall
fdivrl
jne
or
mov
or
inc
push
push
push
mov
lahf
ss
aaa
stc
jnp
repz
and
dec
xor
mov
lea
mov
aad
push
jg
xchg
add
movsl
cmp
xchg
mov
jecxz
in
lods
popf
test
cmp
dec
push
inc
jmp
inc
push
mov
mov
mov
inc
xchg
fnstenv
test
movsl
out
ret
pop
or
mov
cmpsl
mov
in
push
imul
mov
scas
sub
ret
mov
rcl
pop
cltd
mov
push
mov
push
mov
cmp
add
nop
pop
pop
out
out
add
or
ds
sub
fs
xchg
mov
loopne
xchg
inc
shl
lea
dec
movsb
push
cmc
repnz
or
cmp
dec
push
push
cltd
sahf
in
pop
out
cmpl
dec
mov
fwait
jbe
inc
and
xchg
cmpsl
out
fdivrs
and
rcrb
push
cmp
sarl
dec
xorb
lds
sbb
push
jg
or
stc
fs
sub
mov
cmp
lock
cli
sub
inc
and
repz
filds
dec
rclb
cmp
hlt
call
sub
aad
lods
push
in
sbb
lea
loop
pop
and
lods
pop
mull
call
xchg
mov
out
testb
jge
pusha
push
adc
inc
lods
fwait
lods
in
in
push
shl
jo
clc
andb
sbb
mov
popf
sbb
cld
or
xchg
loopne
mov
das
pop
push
xchg
mov
bound
and
ret
test
lret
and
add
pop
inc
mov
je
or
pop
lods
sub
cmp
or
je
and
adc
lahf
stos
lret
push
xor
pop
pusha
mov
repz
jbe
xchg
mov
fwait
lcall
adc
or
cmpsl
lods
ljmp
pushf
scas
ljmp
cmc
xor
mov
je
shl
outsl
sub
mov
add
push
mov
adcl
popa
fs
xchg
sete
mov
shrb
loope
mov
mov
popf
jle
shlb
out
in
imul
sub
cs
dec
push
subl
jle
arpl
dec
outsl
fadds
fdivrp
data16
add
clc
adc
je
jg
rolb
jbe
pop
cmp
shll
addl
out
sub
sbb
fisttps
int
fidivl
pop
ret
inc
lea
addr16
jo
inc
jae
jb
out
adc
test
je
mov
pop
dec
negb
ds
cs
add
imul
or
lea
pop
and
repz
aaa
and
pop
call
popf
in
adcb
push
std
jl
inc
bound
xor
mov
xor
in
icebp
shr
and
and
fdivrl
cmp
outsb
sub
add
and
xchg
pop
aaa
or
out
imul
xchg
mov
push
imul
or
cwtl
xchg
xchg
adc
pushf
pop
pop
add
mov
cltd
cmp
movsb
pop
std
inc
push
ret
xorl
xchg
imul
mov
mov
pop
stos
push
es
mov
sub
add
xor
push
icebp
aad
nop
rcr
ror
mov
mov
mov
push
clc
data16
xor
stc
adc
jb
ret
testl
bound
dec
mov
cmp
mov
sub
imul
adc
aas
gs
pop
jae
fcmovne
std
xchg
in
fwait
adc
lods
and
mov
subb
dec
in
clc
jmp
mov
ret
xchg
insb
jle
add
sti
push
adc
test
xchg
xor
xchg
inc
and
sub
push
dec
or
lcall
add
push
cltd
std
divb
std
mov
popa
stos
std
int3
nop
jle
out
adc
adc
ja
test
and
jbe
out
sub
add
dec
pop
scas
xor
cmc
gs
inc
adc
xchg
pop
dec
or
ret
hlt
aad
mov
ljmp
mov
push
jo
movsl
mov
push
call
push
dec
fcoml
inc
push
inc
cmp
das
in
stc
loope
popf
add
nop
xor
cwtl
fs
mov
jbe
lds
fsubl
insb
mov
xor
in
repnz
mov
lds
dec
dec
jmp
iret
fcoml
dec
aaa
or
mov
and
ret
mov
in
inc
lret
sub
dec
lds
add
testb
inc
nop
daa
js
lods
shr
scas
ret
mov
daa
xor
adc
dec
mov
or
dec
mov
pop
shrl
mov
ret
icebp
insb
sahf
add
add
loopne
jle
popa
mov
fsubs
in
lcall
aam
dec
popa
mov
int
mov
ljmp
xor
inc
ljmp
add
sbb
loopne
mov
inc
xlat
les
js
in
mov
pop
enter
sbb
pop
mov
sub
sti
cld
mov
and
mov
xchg
fildl
sbb
and
sbb
fildll
mov
or
and
sbb
lds
data16
push
mov
dec
jg
fisttpl
fucomip
pop
aas
sti
mov
push
cmp
ss
dec
cmp
xchg
roll
push
in
imul
xor
imul
outsb
pop
scas
faddl
and
scas
out
cmp
test
nop
aad
data16
sbb
bound
das
lds
aad
jo
dec
in
push
sub
cwtl
mov
and
inc
mov
rcrl
adc
lahf
or
mov
sub
mov
inc
arpl
popf
dec
sub
cmp
rcrl
mov
insb
jle
xchg
pop
jmp
movsl
xor
mov
mov
sub
pop
pop
and
sub
push
movsl
jnp
push
cltd
ds
sub
ljmp
ja
xor
jne
dec
test
fsts
or
mov
test
mov
cmc
int
leave
cld
cs
sbb
or
icebp
cmp
mov
pusha
jo
sub
lea
leave
gs
cmpsl
pushf
outsb
je
jnp
sbb
std
fwait
gs
fisubl
das
fbld
mov
data16
mov
xchg
mov
lahf
pop
imul
sbb
jge
mov
and
mov
dec
es
jg
pop
mov
dec
and
push
or
int3
or
mov
aas
dec
xor
jle
and
mov
stos
aaa
cli
push
outsb
mov
pop
imul
pop
das
xchg
or
mov
das
push
sar
daa
arpl
mov
push
cs
gs
lock
movsb
sbb
pop
dec
icebp
ret
imul
xchg
sbb
xor
mov
xor
inc
aaa
out
push
fsubl
mull
push
stos
dec
mov
scas
sbb
imul
aaa
pop
scas
popa
or
inc
movsb
add
int
jp
inc
fdivs
imul
out
inc
inc
push
nop
inc
addr16
stos
adc
sbb
loop
dec
scas
andb
dec
adc
and
outsl
pop
add
or
and
cli
inc
test
nop
cld
ja
mov
mov
inc
mov
sub
push
loope
pop
and
repz
lods
mov
pop
jbe
scas
and
inc
xor
fwait
adc
lret
fdivs
xchg
and
push
push
mov
fimuls
sub
lods
push
sbb
and
inc
stos
daa
es
push
rcrb
imul
cmp
or
outsl
pop
adc
imul
out
push
xchg
mov
fcoms
pop
insb
pushf
xor
pusha
mov
lret
and
aad
push
xchg
pop
sti
jae
sub
loopne
in
dec
push
xchg
aam
cmpsb
mov
pushf
insb
aaa
mov
out
std
out
aaa
test
dec
pop
jmp
and
xchg
test
sbb
jns
ds
imul
fbstp
sbb
and
lret
jae
sahf
sub
adc
pushf
ret
push
in
jo
pavgb
cmpsb
inc
test
pop
les
jp
ret
cld
in
fcoms
mov
jecxz
xchg
movsb
pop
in
out
jo
or
ja
mov
es
les
insb
sub
sub
insb
filds
adc
lret
inc
lds
cmpsb
xor
adc
adc
push
in
js
dec
xor
dec
loopne
or
sbb
repz
dec
shrl
dec
or
cmp
inc
push
mov
cltd
xor
mov
push
pop
sbb
arpl
rcrl
xchg
dec
and
jg
dec
pusha
fsubp
lds
xor
jno
jmp
in
jg
rolb
or
jl
in
in
lret
or
ljmp
call
add
leave
rcll
cmp
cwtl
outsl
mov
pop
lds
jns
dec
fs
pusha
sti
bound
stc
xchg
rolb
daa
test
addr16
lahf
fnstcw
or
or
and
adc
add
jmp
inc
or
in
jl
inc
movsl
mov
dec
in
or
and
aad
pop
dec
push
or
out
lods
mov
shll
sbb
hlt
pop
mov
into
sub
push
test
sub
fwait
ror
sahf
mov
push
lahf
pop
xor
popf
jecxz
jbe
jmp
cmp
lods
and
je
shr
lods
xchg
pusha
pop
adc
sub
pushf
daa
mov
add
addl
or
lea
test
stos
xchg
unpckhps
sbb
ret
shlb
aad
cmpsl
xorb
jno
mov
inc
adc
hlt
in
sub
clc
add
inc
cmp
rcll
pushf
dec
leave
stc
jp
mov
jbe
xchg
push
push
or
test
lahf
add
in
movsb
jae
mov
cmp
js
mov
cmpsb
jns
sbb
jnp
in
sub
shrb
add
mov
lock
mov
aad
insl
ret
and
lret
popa
sub
add
push
mov
rol
and
adc
stc
in
jne
fwait
add
iret
jecxz
fs
rclb
push
pop
add
sub
pop
imul
adc
in
popa
add
je
add
ret
fldcw
xchg
xchg
lods
mov
push
xorb
pop
add
repz
xor
xchg
ss
les
mov
push
lcall
stc
aas
andb
mov
mov
jbe
dec
dec
sub
rcll
insb
outsl
push
insb
popa
inc
ljmp
call
xor
and
rclb
aas
dec
add
bound
test
popa
mov
outsb
add
pop
sub
lods
fcomip
fidivs
data16
imul
stos
es
scas
cs
rorl
xor
xchg
inc
pop
xor
jle
lods
stos
mov
cmp
aaa
stos
xor
xlat
lock
mov
or
cmp
fwait
or
push
inc
sti
js
jp
scas
stos
adc
repz
adc
cmp
lret
inc
inc
in
popf
dec
test
test
and
bound
pop
push
in
sahf
pop
inc
xchg
mov
xchg
aaa
add
int
je
mov
mov
jno
out
pop
out
mov
fsubrp
mov
jbe
push
mov
push
mov
into
jge
sbb
test
les
dec
mov
cli
jg
cmp
sbb
sti
and
xchg
lcall
mov
aaa
jmp
ljmp
stc
xor
sbb
daa
pop
cs
stc
mov
je
xor
in
notl
insb
lret
enter
sbb
addr16
mov
mov
push
mov
sbb
sti
adc
inc
mov
stos
call
xor
push
lret
mov
sbb
loope
sbb
sub
icebp
insb
outsl
or
out
pop
mov
lods
adc
aam
pop
out
lret
js
jge
inc
inc
sbb
stos
or
xchg
mov
adc
or
rcrl
adc
jne
mov
cld
jb
inc
movsb
xchg
xchg
and
or
mov
push
push
push
popa
outsl
push
xchg
mov
loopne
lahf
push
mov
test
add
add
or
inc
push
pop
push
sbb
and
addr16
xchg
add
iret
xor
data16
sbb
xor
jecxz
pop
sbb
fwait
div
gs
add
loope
mov
shlb
shll
cmc
into
into
cmpsb
mov
xchg
rep
add
imul
call
ss
and
pop
out
pop
push
xchg
andl
outsb
cmp
enter
arpl
out
push
and
fisubl
push
out
aas
jno
gs
negl
shl
push
pushf
inc
adc
add
imul
loope
out
fs
push
out
dec
repz
andb
js
lock
push
mov
pushf
das
movsb
or
xlat
cmp
mov
outsl
mov
pop
mov
inc
cmc
xor
pop
test
aas
mov
fnstsw
push
mov
test
pop
js
in
loope
mov
cmpsl
mov
mov
add
pushf
pop
sub
sbb
xor
and
sbb
pop
addr16
jbe
push
jge
ret
or
popf
lods
dec
sahf
mov
fisttpl
cmp
push
cmpl
ds
dec
mov
inc
ret
and
or
mov
lods
jmp
xor
int
imul
arpl
clc
jae
lock
aad
das
mov
adc
into
sbb
dec
add
adc
adc
out
mov
jne
push
insb
cmp
in
jge
stos
movb
xor
lea
jb
in
scas
aad
test
add
jnp
xor
movsl
addl
dec
lods
in
out
int
sarb
mov
sub
loop
push
inc
stos
insb
xchg
sub
stc
les
jnp
out
mov
mov
or
loope
or
icebp
mov
pop
sahf
or
mov
adc
jmp
mov
pop
mov
fstps
movsl
dec
ds
pushf
or
gs
push
addr16
ss
popl
adc
stc
cmpsl
clc
xor
outsl
dec
inc
or
jb
es
mov
jmp
dec
pop
jno
push
and
pop
dec
stc
ret
pop
dec
pop
loop
lret
push
ja
inc
pusha
divl
sahf
aas
pop
ds
ljmp
fidivrl
and
es
loopne
jecxz
add
jecxz
and
jb
mov
xor
lods
jg
bound
jns
push
add
push
outsl
push
and
in
lods
bound
ja
jo
jo
aas
sub
lcall
xchg
or
ret
icebp
adc
jmp
mov
ffreep
inc
sti
adc
negl
lret
fwait
and
inc
adc
int3
jle
sub
testb
inc
dec
aam
inc
insl
loopne
pop
pop
imul
dec
push
mov
jecxz
jg
lods
and
mov
pusha
pop
mov
stos
lcall
sbbl
mov
in
pop
pop
sub
fbstp
dec
outsb
dec
loop
je
pop
mov
leave
stos
xchg
negl
dec
add
subb
loop
mov
jecxz
lret
fmulp
jl
jmp
jle
shll
pop
outsb
cltd
call
insb
sub
sbb
and
xchg
ss
mov
rorb
sbb
in
dec
dec
pop
cmc
jge
jecxz
sti
push
add
les
fs
pop
popf
ret
xor
sub
fcmovbe
lock
cli
or
lret
xchg
in
and
stos
mov
subb
cmp
ss
push
inc
fs
jno
cmp
sbb
cmpsb
mov
and
scas
in
in
cmpsl
and
or
jbe
aaa
stos
inc
push
cmp
outsl
pop
repnz
jmp
add
and
mov
lods
jl
cmp
or
loope
js
inc
lods
lret
pushf
mov
iret
jo
lahf
popa
sti
mov
loop
mov
mov
lods
adc
js
mov
imul
and
pushf
in
ja
pop
cmp
jge
pop
repz
bnd
out
in
gs
add
xor
mov
in
andl
enter
int3
arpl
std
cmp
push
int
andl
sti
xchg
data16
add
outsb
mov
fdivp
insb
pop
ret
js
push
or
adc
jl
jno
jle
fwait
sti
stos
test
or
sbb
stc
pop
mov
mov
fmull
mov
push
xchg
ret
repnz
stc
inc
sub
fstpl
push
cltd
xchg
in
shlb
pop
mov
push
inc
sbb
xlat
cs
and
push
cmp
push
xor
rolb
dec
clc
dec
loope
pop
loopne
cli
push
lods
mov
inc
mov
out
cmpsl
mov
je
fs
sahf
icebp
xchg
mov
rolb
inc
bound
mov
shll
jns
cmp
mov
pop
inc
and
fisttpll
push
or
or
jbe
imul
jns
stc
pop
data16
movsb
ds
roll
ja
jbe
xchg
stos
cli
dec
push
adc
adc
sub
add
jno
ret
add
jl
fsubrl
pop
scas
mov
xor
lss
push
ret
fists
movsb
aaa
sar
loope
fiadds
sub
xchg
adc
fsubs
mov
mov
outsl
mov
jg
push
sbb
sbb
mov
fisubl
loopne
add
jbe
xchg
xor
fdivrs
mov
int
mov
jbe
lret
out
jae
sub
shrb
icebp
cmp
pop
adc
jl
mov
scas
cmp
cmp
add
pop
cwtl
xlat
xor
push
ja
xchg
push
mov
mov
xchg
into
enter
cmpsl
pop
lods
mov
aam
and
mov
shld
mov
divps
dec
inc
pop
adc
jo
adc
push
mov
mov
in
hlt
arpl
jp
mov
cmc
inc
push
or
fidivs
sub
dec
fwait
sbb
push
xchg
pop
pusha
lret
jae
sub
cltd
daa
push
lds
dec
dec
mov
and
xchg
lahf
or
ljmp
mov
mov
jmp
fwait
call
test
mov
imul
lret
pop
xor
cltd
push
iret
mov
and
jl
cld
sub
sbb
stos
shrb
shlb
mov
insl
lcall
cmp
imul
daa
out
popa
test
repz
mov
push
inc
sub
xchg
scas
sub
sbb
mov
jmp
dec
aad
fadd
jge
jne
repnz
push
jle
cmp
sub
inc
or
pop
xchg
bound
fstpt
fdivl
jns
pop
jmp
mov
push
inc
cmpb
aas
mov
sahf
imul
nop
fs
lahf
lods
xor
xor
jecxz
push
dec
ret
inc
std
call
cmp
add
mov
lret
in
std
xchg
in
xor
mov
fstl
sub
fdiv
popa
xchg
repz
mov
mov
out
sub
and
gs
cwtl
or
nop
std
repnz
nop
stos
leave
pop
les
ljmp
adc
test
or
inc
pop
icebp
js
adc
shll
js
idiv
psraw
rcr
xchg
out
cmpsl
cmpsl
cli
pop
ds
cwtl
out
test
xor
in
imul
ljmp
cwtl
stc
mov
insl
mov
push
mov
leave
inc
cltd
jne
test
divl
pusha
inc
arpl
ds
xchg
cmp
addl
or
push
aaa
or
xchg
xchg
jno
movsl
arpl
int
fsubr
loopne
add
leave
xor
adc
lret
es
push
mov
sub
cmpsl
shl
addr16
pop
xor
lret
addr16
hlt
xchg
popf
mov
cwtl
push
adc
mov
sbb
repz
lds
aad
xchg
lret
mov
movsb
repnz
push
outsl
neg
push
stc
popf
mov
cmp
inc
int
pusha
decl
mov
mov
push
and
shr
pop
lahf
les
cmpsl
and
in
shrb
sub
push
push
dec
pushl
popl
hlt
xlat
loope
ret
jae
popa
and
adc
sub
movsb
std
stc
aam
and
loopne
lea
aaa
adc
popf
mov
jne
icebp
das
stos
aad
fsubrp
pop
lods
xchg
pushl
xor
adc
aam
rorl
dec
inc
insl
dec
dec
mov
sub
and
leave
pop
adc
jnp
cmp
cmp
inc
adc
rol
mov
add
sahf
hlt
iret
lcall
push
fdivr
cmpsl
mov
sbb
pop
data16
mov
sub
mov
scas
xchg
push
inc
dec
movsb
cmp
mov
inc
xlat
or
pop
cmc
pop
jns
out
mov
cmpsl
and
cmpsl
adc
xor
cmpl
xchg
sub
ljmp
cmp
lods
ljmp
jl
add
lea
lret
aas
incl
mov
mov
dec
loope
mov
dec
push
sub
in
lds
inc
sbb
inc
sahf
sbbb
mov
repnz
sbb
pusha
mov
testb
es
ret
hlt
in
loope
in
fwait
or
dec
xlat
add
xor
adc
push
shlb
cwtl
push
test
pop
jl
popa
scas
sbbl
push
sub
dec
jb
inc
jge
dec
pop
mov
jmp
mov
mov
mov
mov
fwait
adc
push
pop
cmp
pop
mov
push
in
es
pop
mov
jns
hlt
pop
dec
mov
and
and
mov
test
dec
fdiv
lahf
movsb
mov
jp
mov
fs
pop
shlb
ds
add
std
mov
cli
sar
enter
cmp
and
rclb
lret
fildll
in
xor
in
inc
mov
mov
mov
add
mov
cmp
push
sbbl
pop
mov
mov
test
scas
movsl
pop
cmp
stos
fbstp
imul
mov
mov
push
out
mov
mov
pop
adc
mov
sub
mov
enter
cld
mov
in
adcb
add
imul
or
dec
xor
add
xchg
mov
fs
lock
xor
shll
or
js
in
cld
push
fcoms
cmpsl
dec
and
cmpsb
pop
jp
in
sub
mov
adc
pop
mov
cwtl
pop
sub
enter
inc
fdivrs
fbld
xlat
cltd
pop
scas
out
mov
lods
sub
pusha
mov
shll
add
lods
enter
dec
lret
xchg
xchg
nop
loop
aas
and
xchg
repnz
sbb
imul
bnd
mov
jle
icebp
push
mov
dec
dec
sub
add
fs
cmp
arpl
ret
jnp
pop
cmp
push
add
mov
fucomip
add
in
dec
mov
jmp
test
out
cmpsb
mov
xor
cmpsb
in
aam
daa
add
mov
mov
loop
popf
jge
fdiv
cmp
mov
pop
jmp
filds
or
sub
ss
imul
cltd
push
sbb
in
sub
aaa
shlb
rcl
jns
cmpsb
cmp
inc
cmp
mov
xchg
xor
sub
cmp
inc
outsl
add
jae
shrb
add
in
pop
adc
mov
repz
lret
adc
mov
lds
loop
and
insl
inc
hlt
dec
and
addr16
xchg
xchg
xchg
xchg
std
xchg
enter
or
fildl
sub
mov
mov
xchg
dec
fdivl
cmpb
mov
inc
mov
cmp
xchg
sub
mov
xor
aas
out
add
sbb
sub
dec
mov
test
int3
shll
sub
dec
lret
out
dec
lds
jo
sub
push
adc
adc
adc
test
pusha
es
and
jno
inc
fidivrs
in
xchg
aam
fmull
pop
mov
cli
jg
aaa
or
clc
sbb
xor
pushf
daa
fxch
pusha
fcomip
push
loope
mov
xchg
fucom
pop
js
and
imul
push
outsl
inc
push
sbb
pop
xor
inc
test
push
cmp
adc
js
and
mov
mov
jmp
pop
clc
push
pop
xor
lea
inc
jp
jbe
ror
inc
lret
cmp
xor
push
in
push
pop
mov
testl
mov
push
testl
lock
ret
sub
imul
jbe
es
imul
roll
aad
fwait
inc
mov
jge
lock
data16
or
cmp
pop
test
dec
scas
mov
sbbb
ds
orl
je
mov
and
push
aaa
fldt
pop
push
push
pop
aaa
adc
bound
inc
popa
mov
push
lods
jge
in
test
pop
pop
in
popf
cwtl
pop
push
lods
sub
fbstp
add
pop
jg
cmp
push
sbbl
add
js
jns
stos
rcrb
sbbb
ret
add
sbb
mov
dec
test
popf
mov
int
pushf
stc
incl
test
sbb
rcrl
push
jle
in
jge
rclb
pop
and
or
fdivrs
sbb
fs
jmp
jle
dec
push
dec
or
dec
sub
nop
lea
sub
mov
mov
mov
cmp
push
xchg
cli
or
mov
and
xchg
sahf
outsl
dec
rcr
inc
add
loope
xor
ret
dec
cwtl
rolb
pusha
jecxz,pt
jae
dec
pop
xor
lcall
jl
add
lock
out
shlb
enter
notl
fwait
xlat
push
loope
push
xlat
pop
jecxz
les
mov
pop
sti
das
addr16
pop
loop
pop
imul
lock
out
cmp
jge
shll
sbb
jne
xchg
mov
mov
out
cmp
sahf
xchg
xrstors
lock
cmp
clc
sbb
jnp
pushf
mov
adc
data16
ret
xchg
stos
push
add
and
jl
and
push
jb
fnstenv
bound
ret
lock
imul
mov
shlb
imul
mov
push
mov
jne
addr16
jmp
or
and
mulb
mov
divl
xchg
mov
mov
loop
stos
add
cmp
popa
mov
fmul
mov
mov
ret
test
jmp
leave
pop
or
insl
cmpb
mov
leave
adc
jne
out
inc
inc
inc
addr16
adc
in
xor
inc
movsl
jmp
mov
lcall
fisubrl
mov
jb
sbb
imul
jbe
subl
mov
outsb
add
sub
repz
test
arpl
in
xchg
mov
sub
inc
cmp
test
popf
hlt
sbb
scas
add
das
dec
dec
sub
adc
les
pop
mov
imul
andl
sub
icebp
cmc
jb
mov
xchg
mov
pusha
test
test
mov
aad
aas
xchg
cmp
daa
adc
cmp
pop
mov
and
sbb
lret
xlat
mov
cmc
or
lcall
sbb
jne
cmp
insl
sbb
dec
ja
dec
mov
or
lods
fmuls
test
in
in
cmpsl
xchg
in
lds
xor
into
or
test
addr16
aam
cmpsb
add
divb
ror
outsl
repnz
jnp
jo
cmpsb
add
jnp
test
loop
adc
int
cli
dec
mov
popa
leave
mov
bound
dec
data16
push
sub
sbb
push
shlb
dec
pop
arpl
popf
aam
pushf
mov
cmc
insb
lret
push
mov
in
repnz
pop
aad
dec
cmp
pop
shl
shl
sbb
fiadds
add
cmp
movsb
stos
mov
mov
hlt
lods
xchg
es
adc
stos
xchg
and
pusha
popa
inc
mov
mov
loopne
cmp
shlb
add
int3
imul
icebp
mov
call
aas
push
test
xchg
adc
or
outsl
sbb
cmp
icebp
xchg
sbb
lea
inc
fwait
in
mov
stc
outsb
mov
jbe
push
add
jmp
push
cmpsb
inc
sbb
add
idivl
push
cmp
xor
mov
lods
mov
ljmp
pop
fucom
nop
jne
adc
xor
dec
ret
cwtl
xor
jge
xlat
repz
sub
loop
loop
mov
fdivl
dec
popa
fwait
jne
leave
data16
pop
repnz
jle
xchg
pop
add
inc
add
push
pop
lds
fsubr
pop
mov
sbb
cmp
mov
negl
imul
sbb
dec
and
cmpsb
outsl
shlb
ret
hlt
repnz
sub
lahf
mov
jbe
inc
repnz
repnz
int3
sbb
add
in
mov
push
idivl
in
dec
xor
push
adc
xchg
pusha
add
ljmp
lods
ds
out
cmpb
cltd
jnp
xchg
mov
push
fwait
xor
mov
push
push
lds
rcll
jno
inc
dec
movsl
add
sub
addr16
mov
jae
mov
es
test
lcall
leave
leave
loopne
jb
cli
mov
aas
inc
push
aam
pop
cwtl
jae
outsb
js,pn
fimuls
das
mov
arpl
insb
mov
fs
and
fsubrl
dec
pop
leave
fs
dec
sub
adc
sti
in
in
xor
cmp
imul
mov
call
cmc
movsb
pop
shll
stos
mov
jns
xchg
fwait
push
jp
sarb
sbb
daa
mov
jbe
inc
outsb
call
xor
sbb
mov
xchg
push
lahf
incl
shll
mov
jne
pop
testb
jns
adc
imul
mov
rclb
pop
dec
pusha
adc
and
das
out
testb
cmpsb
pop
fildl
push
fnstsw
clc
pushf
dec
sahf
push
scas
ss
out
xchg
bound
popf
shlb
dec
sarl
push
adc
repz
mov
int3
mov
ljmp
and
fistps
sahf
std
dec
and
mov
sar
xchg
test
or
adc
inc
jl
inc
daa
out
out
and
fnstenv
decb
sub
jg
inc
lret
push
inc
bound
jnp
inc
cmp
mov
push
sbbl
jno
lods
push
pusha
test
push
push
mov
cmp
in
jg
sub
push
leave
and
std
mov
testl
outsl
mov
push
aaa
jb
lcall
int3
jbe
mov
aaa
mov
mov
ret
fs
adc
test
aaa
xchg
cs
stos
fwait
mov
int3
lret
loop
sub
pop
repnz
pop
js
jns
rcrl
cmpsb
cmp
cmpsb
inc
stos
mov
dec
fld
and
add
or
mov
cmp
jbe
pushf
inc
xchg
clc
jp
cmp
scas
mov
adc
and
outsb
adc
add
add
inc
dec
jecxz
fdecstp
pop
adc
pop
ret
cmp
jecxz
mov
sahf
pop
add
xor
pop
leave
add
aas
xchg
pop
jecxz
sbbl
mov
fnstsw
sub
insb
mov
xchg
jbe
into
je
into
test
popa
jg
and
nop
or
xor
xor
mov
add
fsubrp
mov
mov
push
fldcw
or
stc
mov
daa
dec
outsb
jnp
and
jmp
fbld
cld
outsl
insb
dec
adcb
dec
add
lcall
cli
loope
add
lcall
adc
iret
pusha
mov
insl
call
pop
mov
imul
jno
aad
mov
jnp
push
jmp
pop
incb
or
imul
es
ljmp
clc
inc
outsb
int3
shl
pop
popf
out
pop
pop
jg
test
pop
inc
stos
cmp
jo
divb
int
out
out
cs
ja
insb
dec
cmc
jo
addb
push
mov
cmp
xchg
sbb
pop
je
and
je
adc
sub
xchg
jb
mov
cltd
loopne
push
dec
dec
shl
jo
cwtl
das
push
xchg
push
test
into
mov
add
xchg
lea
leave
push
cltd
sti
icebp
mov
repnz
dec
and
test
arpl
cmp
mov
leave
push
and
or
lds
dec
jo
lods
push
sub
iret
push
fucom
lcall
rorl
dec
sti
cli
sbb
stos
and
mov
cmp
push
cwtl
icebp
lds
dec
lds
dec
mov
inc
inc
push
in
mov
push
jbe
jp
jnp
dec
scas
adc
or
cmpsl
es
fiadds
cli
xchg
mov
mov
mov
mov
addl
lock
add
loop
push
std
lcall
mov
enter
inc
and
sbb
add
mov
push
cmp
stos
shl
fsubs
push
rcrb
mov
push
xor
fistpl
push
test
xchg
in
mov
shlb
gs
popf
xor
mov
pop
outsl
jl
call
add
aas
shl
ljmp
or
add
and
aaa
or
jae
mov
jo
push
and
xor
or
call
jecxz
outsl
lea
cmpsb
or
push
cmp
test
dec
xlat
fidivl
add
pop
mov
pushf
jno
pop
xchg
jle
mov
mov
lret
xchg
clc
xchg
stc
xchg
sbb
jmp
mov
rorb
ret
mov
stos
out
cmpsl
nop
lret
dec
and
movsl
xchg
or
dec
mov
dec
enter
lds
cmp
sub
fnstenv
sbb
rorl
test
or
cld
inc
arpl
push
inc
jmp
mov
cmp
mov
pop
push
hlt
sub
jle
mov
push
xchg
andb
enter
test
xor
adc
push
mov
mov
shl
daa
addl
inc
sub
clc
mov
sub
cmpsl
imul
call
dec
hlt
dec
iret
and
sti
push
or
mov
dec
cmp
lock
mov
lock
jno
shrl
sahf
sub
sbb
jle
pushf
adc
adc
movsb
dec
and
sub
xchg
or
in
cld
or
or
xor
sub
stc
xlat
ss
inc
leave
sub
or
je
mov
lds
sbb
scas
push
push
aas
cmp
and
lea
jg
test
test
ds
mov
int
and
fmulp
fwait
test
lcall
cltd
pusha
daa
nop
cwtl
test
dec
adc
stc
mov
pop
out
icebp
push
nop
daa
test
scas
cmp
sahf
cmc
aaa
rcrb
pop
inc
pop
inc
push
rcrl
pop
cmp
clc
adcb
xchg
xor
add
mov
stc
pushf
jno
popf
sub
scas
push
inc
fstl
mov
pop
fstpl
mov
and
lds
lods
cmp
jmp
pop
ja
int3
rcrl
shlb
dec
add
popa
int
dec
daa
cmc
shr
int
inc
dec
nop
xchg
movsb
push
cmpsl
out
push
sub
push
stos
sbb
jo
xchg
cmp
sub
push
jmp
pop
xchg
or
xchg
dec
out
jo
stos
rcr
sti
pusha
xor
orb
psllw
scas
xchg
aas
push
pop
jp
dec
arpl
adc
and
adc
push
inc
push
hlt
lods
adc
dec
je
inc
lret
sti
sbbl
ljmp
adc
pusha
sbbb
add
jg
subb
dec
ss
loope
sub
pop
xchg
adc
orl
xlat
and
jecxz
fsub
dec
add
inc
push
ds
inc
dec
pusha
iret
jns
mov
iret
pop
inc
dec
rcll
xor
xor
push
sub
icebp
fidivl
mov
mov
gs
pop
inc
repz
mov
leave
fwait
mov
jg
mov
cmc
inc
xor
in
enter
xor
ja
outsl
xor
loop
int3
mov
adc
cld
or
rcrb
insl
dec
call
lock
and
mulb
aaa
out
mov
loope
dec
xchg
sbb
sbb
js
xchg
mov
xor
sub
push
inc
pop
je
cmp
dec
push
xchg
aaa
pop
pushf
sbb
dec
scas
mov
rorl
push
xchg
ljmp
mov
dec
sbb
ror
inc
xchg
add
push
rcrl
sub
mov
mov
push
xor
and
mov
and
xchg
jg
int
rclb
xor
std
or
jbe
sti
mov
js
cmp
add
je
add
add
xor
outsb
push
jno
mov
sub
pop
lds
cld
dec
repz
adc
in
adc
outsl
loope
leave
dec
lods
mov
das
xor
movsl
gs
push
lods
test
sub
push
xor
cltd
and
enter
pop
icebp
incb
imul
mov
mov
data16
cwtl
test
inc
out
xor
cmp
sti
cmp
test
fildll
inc
daa
int
or
inc
sar
mov
test
adc
enter
adc
rcrl
xor
inc
imul
cld
lret
sub
stos
lock
icebp
sahf
movsl
inc
xchg
ret
into
gs
imull
xchg
fnsave
add
xor
clc
sahf
xor
popf
stc
outsb
cmp
clc
mov
cmpsb
cld
or
in
push
js
jle
jno
mov
mov
repz
test
push
sbb
hlt
cmp
mov
test
adcl
jnp
or
add
and
dec
mov
aaa
fisubl
or
mov
pop
movsb
sbb
mov
push
add
push
pop
aad
jp
sbb
and
out
push
mov
popa
divl
mov
cld
clc
arpl
cmp
iret
mov
jae
push
aad
sub
push
or
dec
dec
or
iret
xchg
pop
sub
and
fmul
nop
out
iret
inc
mov
push
es
or
popf
test
je
andl
add
lret
data16
and
lock
jns
adc
stos
lods
lcall
call
mov
lahf
jge
in
stos
jne
rcll
xor
mov
cmp
mov
mov
addb
and
push
xchg
add
jmp
repnz
or
pop
mov
out
jecxz
aam
mov
cmpl
sbb
xchg
lods
mov
repz
adc
lods
pop
hlt
or
adc
outsl
push
cmp
call
pop
mov
fwait
and
xchg
xchg
call
cmp
bound
sahf
push
jmp
add
sbb
cwtl
xchg
into
sbb
jg,pt
mov
push
cmp
pop
addr16
push
nop
or
inc
push
and
int
test
cmpsl
xchg
or
popf
or
and
jno
fcomps
lods
loopne
pop
push
dec
mov
cmp
push
clc
push
dec
cmpsl
imul
mov
or
pop
jno
mov
ds
cwtl
xchg
popf
xchg
sbb
jno
jl
shrb
sbb
push
subb
bound
xchg
mov
cmpsl
xor
dec
insl
hlt
je
dec
mov
sbb
sub
out
jl
out
sahf
mov
lods
nop
fdiv
dec
xorl
cmp
dec
cmc
fwait
call
cwtl
add
repnz
notl
lds
pop
ljmp
call
into
mov
inc
inc
into
cltd
aam
cltd
outsb
in
add
mov
cltd
mov
ret
repz
aas
jecxz
pop
and
test
lret
ret
fwait
push
inc
push
push
cs
sahf
out
pop
lahf
loop
imul
pushf
loope
add
add
and
add
lret
xor
mov
int
leave
shll
sbb
push
mov
adc
mov
pusha
rorb
les
mov
and
cmp
mov
mov
cmp
jmp
cli
and
mov
mov
adcb
aam
and
and
inc
push
movsb
rcrl
cmc
or
out
mov
sbb
call
mov
or
jp
stos
ljmp
mov
push
daa
int
movsb
fistpl
shl
stos
aas
or
jno
inc
push
push
adc
push
jbe
dec
das
inc
pop
repnz
pop
jae
cmp
pop
adc
popa
into
xor
mov
stos
dec
shld
pop
dec
test
cmp
stos
sahf
jne
cmp
int
mov
mov
inc
movsl
mov
fisubl
sub
and
insb
and
insb
pushf
push
out
and
outsl
mov
dec
out
popf
mov
inc
fchs
add
xor
test
add
bound
push
int3
dec
mov
fisubs
cmp
in
push
test
xchg
add
mov
mov
jne
pop
adc
dec
iret
ss
arpl
xchg
push
loop
shll
cli
fwait
aad
mov
insb
es
fiadds
push
imul
xchg
mov
mov
jecxz
daa
add
int
fimull
or
data16
add
stos
mov
sbb
push
aam
or
stos
inc
lahf
divb
sub
dec
movsb
test
push
xchg
dec
mov
pop
cmp
xchg
push
ljmp
dec
test
aaa
cmc
sub
or
stos
in
inc
lock
xor
fiaddl
fstl
and
pop
pop
cmp
cltd
in
cmp
notl
jmp
sbb
cmp
scas
mov
lcall
cmp
insb
popf
cltd
adc
or
mov
add
push
aaa
pop
pop
fidivrs
leave
pop
sbb
enter
cmp
test
or
and
cmpl
and
hlt
test
cmp
dec
mov
jbe
push
out
push
jge
dec
or
daa
push
sub
mov
inc
xor
jns
std
or
shrl
xchg
sub
xor
dec
ja
stc
test
mov
sub
mov
sub
jnp
outsb
ret
pop
cmp
loope
push
cmp
mov
inc
and
dec
sub
pop
scas
js
shrb
repnz
cs
call
mov
sub
mov
rcr
dec
push
imul
testb
adc
push
in
cli
cmpb
xchg
inc
ds
pop
cld
inc
adc
dec
inc
test
xor
lret
mov
add
xchg
popa
je
inc
dec
or
popa
sub
sti
or
xchg
bswap
flds
cmc
mov
data16
cld
xchg
ds
mov
mov
mov
fcomps
sub
xor
pop
rclb
jmp
pop
mov
and
mov
or
pop
mov
push
in
push
sub
or
xchg
lods
mov
mov
dec
adc
data16
pop
inc
jle
lret
fidivl
pop
xchg
dec
test
fxtract
push
orl
pop
sbb
mov
shr
aas
inc
pop
xor
test
cmpsb
test
add
and
and
stos
mov
cmp
sbb
lods
popl
aas
and
rclb
pusha
mov
pop
jge
cltd
push
mov
stc
adc
push
adc
adc
add
xchg
fwait
es
test
fstps
in
cmpb
or
inc
stos
jmp
adc
stos
ds
mov
adc
loopne
sahf
sub
stos
mov
mov
test
and
mov
enter
jo
cmc
inc
cmp
incl
fiaddl
sahf
push
cmc
mov
pop
aam
hlt
mov
adc
fistpl
repnz
outsb
pop
testl
sahf
xchg
jno
leave
pushl
divps
and
aam
aaa
jb
mov
js
stc
leave
adc
cli
ficoms
mov
or
push
mov
es
jne
fidivrl
fstp
pusha
sub
cmp
mov
or
fwait
bound
adc
adc
testb
push
roll
mov
icebp
insb
jnp
mov
xlat
in
jns
hlt
xorb
dec
addr16
lods
loopne
xchg
xchg
cmp
scas
fisttpll
sbb
mov
ljmp
adc
stos
inc
push
sar
test
jne
loope
inc
inc
mov
outsb
jle
sbb
lods
dec
imul
mov
push
fnclex
push
loop
fistps
ss
jle
lret
cwtl
daa
outsb
inc
aaa
cwtl
xor
mov
arpl
xchg
popa
sbb
jmp
cmpsw
push
mov
in
insb
das
aad
xchg
pop
cli
pushf
sti
mov
imul
aam
xor
sbb
mov
mov
mov
mov
fsubs
fsubrs
adcl
add
jle
stc
fs
push
xor
jl
aas
test
or
pop
lock
cmp
adc
ljmp
jae
jnp
fucomip
cmp
test
mov
fbld
test
mov
lahf
les
test
in
mov
in
inc
fsubr
sub
cmp
dec
adc
and
jb
pop
dec
int
mov
fucomi
stos
push
test
mov
insl
xor
cwtl
fdivs
mov
mov
push
push
stos
cwtl
into
enter
sbb
and
adc
add
jp
cmp
adc
callw
sbb
xchg
sbb
cli
xchg
fisubrs
lock
aas
fwait
out
xor
insl
shlb
inc
lcall
and
pop
or
jbe
inc
mov
addr16
sub
jg
dec
mov
push
adc
mov
mov
sub
xchg
mov
stos
xor
mov
lds
lret
data16
and
fwait
stos
fidivl
mov
fdivs
push
push
push
push
shl
jnp
xchg
pop
dec
ret
jae
xchg
mov
add
mov
clc
push
sarl
add
sbb
jno
fstpl
jnp
jo
fwait
cwtl
mov
jae
setns
mov
sbb
push
inc
jg
iret
xor
inc
stc
push
sub
sub
sbb
icebp
lret
pusha
mov
loop
lret
fisubrl
dec
int
fisubl
cmpsb
xchg
cmp
imul
fisttpll
add
jle
inc
and
pop
scas
in
pop
repz
mov
inc
jge
adc
inc
int
js
popf
popa
pop
insl
mov
push
cmp
mov
cltd
pusha
or
ja
sbb
rol
fnsave
ljmp
sub
loope
imul
call
push
ljmp
fs
add
ret
call
mov
xor
xchg
inc
xchg
and
nop
pop
cld
xor
pop
or
test
data16
loopne
mov
pop
int3
aam
sbb
lock
out
sub
clc
xchg
sbb
jae
cmp
mov
aas
dec
xor
imul
lret
push
xchg
ficoms
xchg
inc
push
sti
sti
xchg
sub
sahf
cmpsl
or
mov
mov
sub
cwtl
aad
into
add
push
mov
push
mov
rolb
out
andb
lret
lea
std
aad
pop
sub
add
adc
add
insl
inc
jbe
jle
es
cmp
into
xchg
stos
jmp
hlt
pop
push
stos
icebp
adc
jle
std
scas
mov
pushf
pop
mov
adc
sti
int3
jnp
cmp
scas
dec
xchg
movsb
cli
jo
scas
mov
test
mov
testl
in
in
or
movsl
xor
es
mov
ljmp
scas
sbb
call
inc
rcrb
roll
push
xchg
cmp
pop
test
in
add
addb
fmulp
cmc
int3
arpl
mov
cwtl
in
loop
les
jne
shll
jecxz
cmpsl
fiadds
in
je
imul
ret
andl
popl
jo
mov
mov
negl
fcomps
ljmp
jno
add
or
icebp
es
cmp
std
test
dec
mov
ja
or
insb
xchg
mov
jl
daa
jns
lcall
sbb
test
fadds
dec
daa
or
or
push
lcall
mov
adc
cwtl
xor
iret
xchg
clc
out
sub
add
xchg
or
stos
ja
cli
and
push
mov
fcompl
mov
enter
cmp
pop
lcall
stc
and
jnp
pop
in
cmp
ja
les
sbb
push
cwtl
mov
or
aas
xlat
push
dec
mov
inc
jb
pop
jae
push
sarl
adc
xor
pop
fsubrs
and
scas
fmull
pop
mov
outsl
cmpsl
je
aam
sahf
pop
dec
dec
movsl
dec
pop
xlat
outsb
aad
xchg
adc
mov
loopne
pop
push
sti
push
sub
aas
int3
push
repz
dec
xlat
shrb
jmp
cmp
lock
add
jno
mov
inc
or
push
push
dec
mov
fucomip
sub
pop
xor
mov
fldt
lock
xchg
and
sbb
in
aam
sarb
push
mov
lcall
fucomi
lods
mov
pextrw
push
add
xor
mov
sbb
call
pop
or
xchg
mov
add
repz
push
inc
ficomps
cmp
pop
pop
pop
xor
mov
sti
repnz
loope
mov
scas
stos
push
dec
mov
dec
fdiv
ja
cmp
jne
adc
push
aas
movsb
cmp
pop
fldcw
xchg
mov
fsubrl
mov
xchg
insl
xor
dec
scas
sub
and
add
fwait
dec
dec
cwtl
jo
jo
adc
bswap
int
mov
push
ja
push
xor
cli
test
pop
ljmp
dec
aaa
sub
jo
pusha
sahf
adc
mov
nop
cmpb
aam
sub
js
out
push
stos
mov
in
lahf
cwtl
jmp
les
or
cmc
sti
fimuls
pop
jle
mov
mov
mov
inc
sub
push
jg
xchg
aam
mov
or
call
sub
mov
inc
push
add
push
scas
xor
jecxz
ret
and
xchg
ja
test
call
stos
fldcw
or
out
sub
inc
arpl
into
scas
mov
mov
adc
bound
push
psrad
repnz
add
mov
lahf
les
stc
push
dec
xorb
cmp
fimull
call
cmp
ja
xor
xchg
out
xchg
jo
add
loope
scas
adc
movsb
sub
shr
or
cmp
mov
lcall
enter
lret
dec
scas
or
cs
rcr
mov
lods
out
lds
ja
push
jmp
pop
pop
adc
push
xor
xchg
mov
add
mov
xor
shll
test
push
mov
stos
les
pop
aaa
aaa
pop
sbbb
test
js
push
inc
cld
xchg
out
lcall
int
imul
shlb
inc
fstp
xchg
cmp
sbb
jne
adc
mov
std
fdivl
xor
repz
cld
and
cmp
cmp
pop
lea
adc
and
aas
push
in
or
pusha
add
out
fbld
fcoml
push
mov
outsb
sbb
push
xchg
xchg
outsb
xchg
aas
dec
fisubrl
rol
pop
ds
je
rcr
xchg
int3
lret
inc
inc
add
sbb
jl
xchg
pop
pop
out
negb
or
loopne
bound
xchg
stos
js
test
fstps
mov
test
daa
stos
jle
xchg
mov
data16
in
cmp
lods
aam
adc
cld
xchg
adc
xchg
lods
and
and
xor
inc
ret
ljmp
jle
and
lock
popa
mov
jne
push
js
pop
fldenv
outsb
or
pop
orb
xchg
mov
or
movsl
das
test
inc
lds
sub
insl
jbe
mov
fwait
stos
sbb
mov
ret
nop
mov
xchg
xorb
pop
add
xchg
call
or
imul
adc
cmp
in
aas
test
push
out
xor
pop
cmp
xchg
mov
rclb
push
bound
jns
subb
xor
popl
out
push
shlb
or
pusha
mov
rcl
jp
fdivs
and
dec
mov
mov
push
pop
movsb
loopne
adc
sahf
es
mov
test
cli
or
mov
in
outsl
pop
out
cmc
mov
or
lret
cmp
cld
xchg
or
test
in
leave
cmp
pop
push
lea
divb
and
insl
add
push
xorl
into
adc
cli
idivl
cwtl
ss
dec
mov
outsb
ljmp
cmp
insl
mov
sub
and
clc
pop
mov
mov
test
lret
inc
push
adc
test
push
out
popa
stos
pop
mov
fmull
xlat
call
mov
into
stc
cwtl
in
js
xchg
pop
imul
js
inc
std
pushf
push
sbb
sti
jnp
jno
pop
dec
xor
in
and
insb
or
xchg
jmp
pop
popf
jno
push
jns
daa
pop
and
xor
shrl
mov
adc
dec
lods
pop
cli
adc
nop
jae
hlt
fcmovnb
loope
mov
mov
mul
jns
les
movsb
push
pusha
push
in
push
in
mov
mov
lds
movsb
je
add
cmp
ret
mov
cmpsl
ds
sahf
sub
xchg
push
pop
outsl
push
scas
imul
xchg
cmp
jne
mov
and
ljmp
out
imul
pop
jo
push
adc
fcomip
push
mov
and
sbb
xchg
mov
xor
or
push
push
outsb
jnp
jge
call
ds
cmp
stos
sub
rcrb
and
jmp
inc
mov
test
push
outsb
sbb
mov
sahf
and
inc
sub
fsubl
pop
lock
subl
push
sub
pop
lock
adc
jge
cmp
inc
mov
mov
mov
mov
mov
mov
addr16
mov
inc
daa
fsubrl
imul
jno
or
dec
lock
dec
xor
adc
or
bound
jne
loop
enter
aas
imul
sub
pop
sub
sub
repz
cwtl
rcl
push
clc
cmpsb
mov
xchg
mov
or
repnz
nop
ja
ret
jmp
cmp
dec
testb
inc
enter
pushf
test
movsb
jb
and
leave
xor
das
into
and
je
lods
call
jb
jne
imul
shlb
insl
aad
dec
aad
lea
jge
dec
pop
fs
push
test
pusha
jecxz
fs
push
cltd
pop
adc
int
cmp
scas
loop
jmp
sbb
mov
ja
ret
loop
hlt
pop
cmc
push
sbb
sbb
cltd
imul
mov
test
dec
dec
adc
sbb
aaa
fstpl
mulps
orl
cld
xlat
mov
xlat
push
jmp
imul
notb
lea
roll
nop
xchg
fildll
test
ja
jmp
jno
or
out
push
mov
ret
rcrl
jno
aad
add
clc
push
jae
test
imul
fcompl
loop
pop
push
data16
push
int3
adc
push
xor
xchg
cld
mov
out
mov
xor
test
jle
pop
mov
jbe
divb
sbb
mov
or
out
mov
aaa
stos
fsub
add
sbb
insl
repz
push
cs
pop
jb
sub
mov
push
mov
mov
clc
dec
sub
jge
aam
pop
jo
out
xor
inc
add
imul
cmp
test
inc
mov
ud1
cmp
push
mov
push
adc
jbe
mov
xchg
inc
or
cwtl
xor
push
push
jl
sti
mov
jmp
bswap
jo
inc
jno
inc
sub
xchg
test
loope
adc
mov
lods
rorb
nop
rol
sbb
ret
xchg
imul
cltd
adc
inc
stos
xchg
push
adc
addr16
mov
cmp
pop
push
ret
jae
mov
in
mov
mov
test
fidivrl
xchg
lret
cltd
leave
stc
addr16
sub
loop
test
dec
cmp
pusha
push
pop
mov
or
dec
icebp
mov
pusha
and
xor
clc
xchg
scas
and
aas
adc
and
jp
aam
xchg
add
std
push
xor
pop
movsl
cli
enter
loope
cli
stos
xchg
clc
pop
cltd
pusha
ss
arpl
sub
mov
aam
std
or
aam
jle
push
jae
cmp
pop
fstpt
icebp
movsl
jge
cmp
mov
pop
xchg
push
sarb
shr
je
hlt
cmp
inc
add
in
xchg
push
cmpsl
xchg
mov
sbb
add
jnp
bound
dec
test
jecxz
fdiv
out
int
push
mov
gs
inc
dec
mov
andb
jmp
add
ds
lcall
push
cmpb
insb
pop
jmp
and
xorl
cmp
mov
daa
pop
insb
mov
jge
outsl
cmp
jo
mov
mov
rcrb
xchg
inc
xchg
pop
hlt
or
aas
adc
lcall
cmpsb
cmp
lret
or
fistps
cmc
mov
ret
in
mov
add
add
hlt
mov
mov
ret
sahf
inc
xor
jle
push
lret
mov
fcoml
push
jo
stc
jp
cli
xor
adc
pop
push
xchg
mov
int3
pop
out
cmp
mov
imul
repnz
ret
jns
ja
xchg
pop
sbb
nop
nop/reserved
mov
lcall
lret
jb
shlb
sbb
mov
out
adc
lret
sbb
scas
mov
jl
inc
inc
and
aad
mov
or
bound
push
jae
pop
lods
test
pop
mov
cmp
cwtl
xchg
cmpsb
cmp
lds
fists
mov
cmp
les
push
idivl
mov
sbb
arpl
cmp
push
fisttpll
rcrl
or
fisubl
leave
ja
push
sub
xlat
sub
js
xchg
sub
pop
xlat
fiadds
stc
jecxz
out
jecxz
icebp
rorl
or
sub
push
cmc
icebp
cmp
loopne
mov
mov
dec
loope
inc
sbb
dec
inc
cmpsb
pop
fisttps
sbb
xor
cmp
montmul
cmpsb
inc
push
mov
jmp
mov
loope
out
icebp
lret
push
cmp
mov
mov
cmp
dec
gs
and
pushf
pextrw
mov
pop
movsl
push
push
pop
ret
mov
enter
mull
push
fwait
or
adc
inc
or
imul
ret
test
cmp
repz
int
addb
jecxz
lods
testb
mov
mov
pop
out
cli
aam
pop
dec
xchg
inc
push
lahf
repz
xor
iret
xor
insb
pop
and
pop
jae
inc
cmp
push
popf
shrb
cs
pop
jmp
ds
icebp
cmp
lods
test
arpl
sub
sbb
cs
mov
or
testl
shlw
inc
lea
gs
iret
nop
das
mov
inc
aad
mov
sub
mov
outsl
out
xchg
mov
mov
push
lea
stc
adc
lds
imul
dec
icebp
daa
inc
fisubs
pushf
lcall
push
and
mov
sbb
leave
cmp
sub
xor
out
ret
filds
xchg
adc
xor
xchg
lcall
mov
mov
mov
mov
movsb
movsl
ss
scas
outsl
loop
xchg
cld
jae
xor
jmp
sub
test
outsb
sub
dec
cmc
mov
test
and
test
test
stos
inc
mov
mov
cmp
xor
loopne
lds
add
dec
push
inc
sub
shlb
daa
jnp
adc
mov
scas
in
scas
dec
xlat
xchg
aad
in
pushl
faddp
sub
xchg
add
push
mov
jne
dec
popf
nop
daa
iret
jo
jne
loop
stc
dec
out
cmpsl
sahf
push
imul
fmuls
mov
test
sub
dec
in
icebp
inc
xchg
sub
mov
out
mov
sub
push
dec
and
mov
xchg
jle
fstl
mov
jl
sarb
push
cwtl
jecxz
and
jne
xor
push
inc
les
jge
lods
push
ljmp
shll
out
ret
xor
inc
call
mov
jmp
xchg
sub
out
sub
popf
aad
stos
mov
sub
pop
inc
daa
cmp
scas
in
jne
loopne
in
mov
mov
in
mov
scas
jmp
cmpb
mov
rep
inc
cs
sub
inc
lret
xor
sub
sbb
cmp
aad
icebp
and
mov
cmp
lods
adc
sbb
dec
push
jge
inc
scas
sub
jns
jno
jne
dec
aaa
pop
sub
xchg
popf
fidivs
dec
xor
mov
jbe
aas
push
mov
fists
xchg
pop
lock
rorb
adc
sbb
add
addr16
push
mov
lea
sub
lcall
pop
cmp
lahf
xchg
popf
pop
movsb
adc
mov
jns
scas
fs
in
out
fcomps
fildl
jg
stc
sahf
pop
sub
jns
mov
pop
notb
addb
pop
imul
add
cmpsb
in
int3
rorl
insl
add
inc
mov
loope
iret
cmpsl
ret
or
xor
mov
arpl
nop
adc
shll
jbe
repz
xchg
das
inc
cmp
push
out
xor
mov
push
dec
fbld
and
cmc
push
int3
pop
sbb
add
dec
mov
test
imul
je
cmpsl
repz
fimull
lret
test
jns
add
inc
je
sub
popf
dec
ljmp
jg
ds
add
jmp
push
pop
jg
leave
push
negb
dec
lret
inc
push
sbb
sahf
cmp
rclb
clc
push
in
add
test
dec
push
mov
sbb
cmp
out
add
pop
ret
ret
adc
lahf
dec
clc
mov
and
cld
mov
jge
lea
lret
jae
push
dec
xchg
and
sbb
jno
mov
ss
test
cmpsl
push
insb
in
dec
jmp
fucomip
add
jnp
dec
fisttps
add
xor
and
ljmp
arpl
inc
mov
dec
movsb
insl
int3
xchg
fwait
cld
cmp
xchg
fdiv
cmc
pop
mov
push
rclb
push
push
repnz
arpl
aas
repnz
jo
mov
cli
movsl
cmp
dec
popf
scas
gs
filds
mov
add
pop
scas
lods
mov
out
movsb
shlb
ret
test
sti
mov
out
aas
push
pop
call
jp
and
add
cld
cltd
push
jae
jle
out
pushf
add
out
ret
jo
lock
inc
inc
mov
inc
leave
jbe
cmp
mov
insb
imul
ds
pop
or
dec
cmp
les
int3
popf
push
jle
ja
lods
lahf
xchg
jp
mov
push
fistpl
sbb
mov
out
cmpl
mov
xchg
mov
push
idivb
push
mov
dec
mov
mov
and
pop
insl
lock
enter
or
cwtl
mov
out
aas
ror
jge
adcb
movb
or
pop
jnp
jo
jne
in
adc
and
jns
test
jl
jp
pop
and
int
ficompl
dec
aas
lods
fcoms
lret
test
scas
out
mov
fucom
sbb
push
ret
cld
shl
and
insb
jnp
pop
ret
jbe
cmp
push
mov
loope
dec
imull
mov
fisttpll
mov
in
cmp
repz
rcl
hlt
dec
sarl
fsubrs
shrb
inc
fildll
cli
pop
ret
xchg
fwait
sti
frstor
pop
out
gs
jbe
or
jbe
xor
inc
leave
push
hlt
mov
pop
jo
shl
aam
inc
fmull
js
inc
lcall
and
mov
inc
jno
jle
enter
xor
test
clc
dec
or
test
sbb
jle
aaa
pop
xlat
orl
test
ror
imul
mov
ljmp
pop
fidivrs
std
lea
adc
arpl
mov
inc
pusha
dec
cmp
popf
icebp
jno
adc
xor
call
pop
stos
xchg
lods
loop
adc
cmp
push
push
xchg
xor
int3
lret
inc
add
push
add
xor
sti
inc
mov
fcmovne
lret
xchg
sub
sbb
push
mov
popf
xor
test
int3
mov
aas
and
mov
cltd
loop
inc
push
push
ds
lock
out
pop
popa
add
idivl
sub
popf
mov
sub
dec
data16
add
je
push
pop
sub
and
mov
inc
xchg
adc
xchg
loop
dec
popf
in
imul
sbb
aaa
cmp
pop
lcall
jns
push
inc
pusha
dec
add
repnz
push
dec
mov
lcall
cmpsl
hlt
jge
sarb
pop
adc
xchg
aad
add
mov
pop
fwait
dec
or
pop
test
xchg
sbb
pop
out
lds
les
xor
mov
fidivrl
dec
int
es
sahf
lds
fwait
mov
movsb
jecxz
mov
fidivs
pop
pusha
ds
stos
pushf
or
outsb
add
test
lret
push
outsb
jae
cwtl
ja
push
xor
or
das
repz
idivb
popf
jo
pop
jge
int
push
or
out
fwait
stos
inc
and
xchg
pop
in
shlb
jge
push
add
test
adc
hlt
lcall
xor
or
and
iret
pop
cmp
lret
or
jle
daa
sub
sub
jb
and
dec
adc
add
pop
xchg
lret
pop
in
and
clc
std
pushf
sub
nop
push
std
jle
pop
xlat
lcall
inc
rcr
hlt
les
jle
jp
aam
xor
xlat
ret
sbbb
ss
jl
shl
xchg
adc
shrl
imul
push
mov
push
loope
inc
adc
dec
mov
clc
mov
movd
popl
es
dec
fidivrl
push
adc
mov
aas
insl
div
add
cmp
or
leave
shr
popa
jbe
add
add
push
pop
jle
repnz
in
jmp
adc
dec
psubd
jg
lea
jmp
lods
inc
xor
mov
add
in
sbb
sbb
mov
mov
jno
adc
push
nop
in
adc
repz
ss
clc
addr16
cmp
xor
xchg
flds
dec
mov
push
inc
or
cld
xchg
xchg
add
jno
and
xor
ret
jle
cmp
mov
xor
aam
and
adc
imul
sub
mov
sub
cmpsl
jle
xlat
aas
lods
pop
xor
xor
cs
add
mov
push
mov
les
ljmp
subl
icebp
ss
jae
sub
into
cltd
sbb
cmp
jno
or
stos
pusha
fistpl
dec
int3
inc
jp
and
pushf
out
into
dec
fistl
fmuls
and
stc
test
movq
mov
jmp
sahf
pop
dec
mov
mov
push
fsubs
mov
push
adcb
push
call
mov
jge
idiv
xchg
xor
push
sbb
push
repnz
fs
ret
popa
inc
dec
push
addr16
into
popa
sbb
outsb
mov
jmp
dec
mov
jl
test
mov
fistpl
popa
repz
pop
test
adcl
lock
in
push
inc
jo
clc
mov
pop
lcall
add
xchg
sub
ret
inc
sub
jl
fiaddl
outsb
aam
je
push
popf
testl
jp
loopne
mov
repnz
inc
sti
cmp
jmp
mov
insb
add
out
sub
inc
aam
pop
push
mov
jbe
sub
cmpsl
jp
mov
test
in
rcr
rep
into
jns
stos
sub
lahf
mov
dec
push
mov
pop
rcll
lret
jns
push
test
lahf
adcb
mov
mov
pop
arpl
mov
mov
movsb
ss
dec
test
and
icebp
cmp
push
mov
inc
lcall
pop
test
pushf
inc
out
mov
test
fadd
cltd
mov
and
arpl
push
pushf
pop
dec
cs
sahf
or
ret
insl
in
sub
repz
fnsave
out
les
mov
or
sub
mov
cmp
cltd
fisubs
scas
jp
subl
mov
lea
addb
mov
out
dec
add
pop
inc
aad
test
add
dec
mov
inc
cmp
fists
mov
popf
mov
mov
mov
mov
or
loop
xor
mov
sub
inc
mov
ret
test
mov
mov
hlt
mov
push
mov
stos
and
xor
fcoml
fwait
or
sahf
imul
pop
inc
arpl
push
sbb
mov
addb
jmp
lods
inc
dec
xchg
fs
or
lret
stos
pop
lds
or
leave
fstps
cmp
lret
mov
fistps
sbb
push
add
sbb
and
cli
push
pop
jmp
or
jmp
movsb
xor
fiadds
and
das
fistl
mov
adc
mul
mov
pop
xchg
sub
jmp
call
jno
push
movsl
xchg
int3
pop
loop
adc
popa
bound
inc
lahf
mov
or
and
mov
jae
lret
aad
repnz
mov
pop
lret
outsb
add
cmp
and
les
sub
jo
test
addr16
repz
in
sbb
xor
and
dec
testb
push
and
shlb
dec
inc
pusha
jns
cli
push
cwtl
xchg
ljmp
xchg
jne
mov
cmp
pop
imul
pop
cmp
mov
fnstenv
ss
cli
bound
xor
push
jo
xchg
sub
adc
mov
dec
test
lret
adc
cmp
xchg
sub
push
sbb
pop
fadds
cmpsb
inc
mov
lock
jne
mov
sti
mov
sbb
add
mov
pop
dec
sbb
sub
divl
in
xchg
outsb
ds
xor
mov
dec
inc
mov
add
adc
sbb
push
mov
adc
inc
insb
fistpll
push
jb
nop
inc
pop
push
subl
jns
lret
jl
or
lea
in
scas
push
and
push
mov
inc
xor
jo
dec
push
dec
dec
jb
pop
mov
js
xchg
xor
data16
ja
rol
jne
scas
jp
fwait
shrl
in
mov
das
push
and
push
sub
mov
rclb
insb
ds
repz
add
or
in
sbb
rcr
jle
inc
or
ja
cmp
loop
xor
sbb
lds
mov
lods
add
adc
imul
mov
lea
rcr
mov
scas
jno
shlb
lahf
fdivs
inc
mov
sti
bound
fisttpll
les
jecxz
stc
lahf
imul
fnstsw
mov
and
mov
ret
sarl
pop
add
adc
mov
mov
out
call
ljmp
iret
mov
dec
or
mov
push
imul
in
js
push
inc
in
in
pop
add
enter
xchg
fisubs
pop
cmp
inc
pop
cmpsl
sti
out
addr16
out
fcmove
dec
pop
dec
dec
xor
mov
cmpsb
mov
bound
xchg
xor
dec
rcrl
cmp
mov
popa
push
scas
mov
or
cmpsl
push
sbb
adc
fildl
negl
into
jns
xchg
leave
or
gs
scas
mov
shr
pop
fdivs
cmp
je
sub
fistl
iret
jne
lods
in
xchg
js
push
sub
aaa
and
test
dec
fisubrl
cli
shl
xorl
insb
roll
xchg
jnp
fucom
xlat
outsb
adc
repz
push
or
add
mov
dec
dec
jbe
clc
mov
shll
mov
jnp
inc
in
lret
sub
cld
adc
pop
test
pop
shl
mov
pop
or
mov
cwtl
jbe
icebp
addr16
movl
push
or
out
and
jg
mov
adc
js
push
imulb
fcompl
sbb
xchg
dec
pushl
xor
mov
shlb
mov
or
sub
sbb
cmc
xor
jb
cmp
and
sub
pop
and
dec
out
cli
xlat
mov
test
mov
add
mov
jge
mov
in
dec
fistps
test
cmpsl
ds
sti
jbe
fcoms
sgdtl
fstpt
mov
popa
loopne
sbb
jb
cmpsb
adc
repnz
inc
leave
mov
rolb
in
inc
mov
popa
aam
xchg
sub
and
xorl
fucomp
xor
scas
and
inc
pushf
stc
jns
pop
ss
jle
sbb
xchg
add
sbb
cmp
jmp
push
inc
stos
lea
mov
std
mov
mov
pop
mov
cmpsb
xchg
ljmp
dec
sub
icebp
jo
cltd
push
ficoml
sbb
cwtl
popf
pop
out
xchg
loope
cmp
imull
out
ss
fbstp
frstor
or
mov
les
insl
cmp
ja
dec
call
lret
rcrl
rcrl
mov
dec
dec
add
inc
rorb
ds
js
cmp
push
fidivs
insb
ja
into
xor
inc
dec
stos
loopne
mov
aas
and
push
add
ror
dec
mov
cs
dec
mov
cli
pushf
dec
lock
ucomiss
xchg
daa
jl
cwtl
xor
ljmp
pop
and
jl
mov
ret
pop
sub
pop
mov
scas
xor
mov
xchg
adc
loope
jmp
sub
shrl
add
pop
lods
je
mov
out
jle
xchg
mov
pusha
cmp
jl
xor
out
mov
rol
mov
orl
fdivrl
pushl
xchg
test
enter
mov
push
sahf
xor
insb
add
stos
push
cli
test
pop
add
xchg
jne
rcrl
sahf
jns
shll
cmpsl
dec
pushf
std
xchg
into
lock
push
push
or
mov
add
cltd
inc
and
mov
mov
push
movsl
imul
sbb
sti
xchg
cmp
and
inc
push
add
add
adc
push
xor
jbe
inc
push
outsl
in
leave
fchs
nop
fmul
mov
cmp
xor
outsl
enter
xor
loope
gs
push
pop
or
jne
aas
lods
pop
lods
jbe
xchg
xor
test
or
sub
sbb
in
lret
cld
stos
ljmp
jecxz
xor
pop
sbbl
repnz
cmp
outsb
clc
aad
push
push
mov
je
pop
ljmp
mov
aad
in
js
xchg
adc
sbb
jmp
inc
jae
je
mov
sub
or
sbb
and
jns
aas
es
inc
inc
adc
insl
or
insb
add
aas
mov
or
push
push
movsl
test
cmp
pop
xor
pop
and
and
ja
pop
adc
xchg
lods
add
test
adc
adc
and
or
das
test
stc
jmp
pop
sbb
leave
sbb
cli
adc
adc
loop
ror
lock
rcrb
mov
ret
and
cmpsb
addr16
fldcw
inc
or
lahf
outsb
shr
push
mov
and
xor
inc
pop
leave
in
js
cmp
jl
rcrl
out
dec
pop
cmpl
cmp
xchg
adc
mov
fldt
mov
subb
rcrb
iret
iret
jns
jnp
and
sahf
jne
or
xorl
jl
loopne,pn
aad
add
xorb
mov
inc
or
pusha
cli
dec
loop
sub
push
imul
dec
adc
cltd
repnz
imull
dec
fcomi
pop
xchg
mov
lahf
inc
sbb
xor
inc
leave
mov
jnp
inc
js
pop
call
lcall
and
jge
loopne
add
sbbb
scas
xchg
mov
pop
jb
mov
pcmpgtd
fisttpll
out
xchg
adc
and
jecxz
inc
les
aas
inc
roll
adc
lds
test
mov
test
adc
std
ret
xor
dec
data16
xor
xchg
xchg
xor
cmpb
push
popf
pop
sbb
popa
clc
aas
aaa
mov
leave
rorl
outsl
std
adc
cmp
and
mov
andb
int3
pop
jbe
lods
inc
adcb
fimuls
xchg
pop
xor
fnstenv
mov
pop
aad
mov
push
inc
push
xchg
iret
in
je
dec
adc
daa
jmp
sub
jl
pop
mov
in
aad
fidivrs
aad
push
xor
dec
inc
scas
jle
js
or
fsubrl
xchg
subl
push
add
shrl
inc
cli
push
inc
push
icebp
mov
mov
int
xchg
negl
adc
push
mull
stos
test
fcmovu
mov
cmp
fsubs
pop
jbe
int3
aas
mov
xchg
xor
inc
pop
sbb
test
mov
sarb
sub
and
je
leave
inc
lods
dec
xchg
fidivs
stos
xor
dec
xchg
lret
nop
adc
es
add
add
gs
lea
push
xchg
sub
add
mov
jp
mov
pop
mov
inc
push
inc
ret
xchg
push
mov
xor
and
xchg
inc
pop
xor
mov
bound
cmpsl
push
jns
adcl
sbb
mov
adc
add
sahf
je
mov
mov
ret
add
insl
loope
sbbb
add
push
adc
jnp
or
out
xchg
xor
adc
or
arpl
push
std
sbb
or
iret
test
nop
stos
dec
adc
add
jne
loope
je
inc
mov
insb
add
mov
mov
cwtl
and
mov
stos
xchg
test
and
sahf
repz
ja
sbb
repnz
jae
inc
sub
push
ljmp
xlat
pop
xchg
or
divb
mov
fsubrl
aaa
mov
addr16
push
sbb
lock
insl
cli
or
push
xchg
jmp
and
pushl
mov
cmp
loope
push
leave
pop
and
push
sub
pop
cmp
and
sbb
es
jo
sub
push
xlat
push
enter
xor
sahf
dec
mov
mov
mov
and
int
dec
sbb
jne
into
xor
sub
sbb
addr16
sub
fisttpl
xchg
into
int
pop
jb
xchg
xchg
jmp
pop
rcr
repz
pop
enter
mov
pop
push
stos
sub
fmul
cmp
mov
inc
sahf
xor
arpl
jae
cmp
add
fwait
and
sub
inc
test
cwtl
pop
sti
push
cmc
mov
pop
sub
stos
std
je
stos
jne
push
push
or
inc
nop
jno
shr
into
enter
outsb
mov
addr16
xlat
jae
andb
or
idivb
fiaddl
jge
push
inc
push
fistl
pushw
ss
cmpsb
pop
push
lahf
lea
fcoml
cmp
imul
cmpsb
nop
loope
outsl
inc
push
fistl
shlb
push
mov
sti
ret
negl
mov
stc
xchg
stos
jne
or
das
inc
xor
fists
push
push
outsl
rcrl
jl
scas
push
fs
xchg
jl
mov
pop
aaa
sbb
fwait
pop
pop
lret
lcall
mov
adc
sbb
sbb
sti
cmp
lds
mov
invd
sahf
cmpsl
lock
add
sub
jp
cmp
sbb
pop
adcb
and
pop
ret
cltd
hlt
rorl
and
sti
mov
inc
lds
inc
cmp
mov
dec
mov
test
repz
inc
popf
test
out
mov
int
dec
inc
movsb
inc
cmpsl
mov
jge
jne
orl
imul
mov
sbb
sbb
xor
cmp
into
cmp
ret
and
mov
outsb
cmp
retw
mov
mov
pushf
ja
into
jecxz
sbb
push
mov
mov
ja
cld
inc
iret
cwtl
test
mov
mov
xlat
fsubr
das
pushaw
sahf
lods
sarb
jecxz
mov
xor
push
aas
mov
mov
lret
rcrb
adc
sbb
data16
jbe
mov
xchg
jl
dec
cmp
aad
js
cli
lcall
movb
jne
or
pushf
rcrb
ljmp
and
popf
xor
jmp
je
lds
sub
fwait
sub
imul
stc
outsb
or
popa
cmp
aad
xor
mov
dec
inc
repz
and
dec
cmp
jp
insl
xchg
sbb
aam
mov
mov
shlb
fxch
mov
xchg
movsl
cmp
ljmp
add
mov
xor
mov
shr
pop
fiadds
test
cmp
adc
mov
test
stos
or
cmp
hlt
fisttps
and
xor
xor
push
pop
ljmp
pop
xchg
insl
push
add
pop
insb
addl
sahf
push
pop
rolb
dec
scas
test
fsubl
stos
mov
fildl
add
sub
ret
pop
pop
cmpsl
gs
cli
pop
jp
fwait
cmpsb
or
sahf
cmp
pop
jno
xchg
pushf
mov
lahf
xsha256
jmp
mov
enter
movsb
cli
rcr
mov
loope
icebp
lea
xor
loopne
jns
lcall
mov
mov
pop
shl
jge
push
inc
pop
call
lahf
mov
into
dec
cmpsb
hlt
fidivs
push
fnop
or
cmpb
lret
push
dec
aas
adc
or
fs
in
jnp
clc
lahf
ss
cld
push
int3
lahf
mov
fwait
push
jle
mov
cmp
mov
rolb
xchg
in
inc
jecxz
sub
ficoml
pop
ljmp
pop
les
loope
fildll
lret
jo
lods
mov
sbb
push
mov
outsb
imul
inc
inc
pop
rcll
xor
ds
mov
cmp
adc
add
mov
cwtl
lock
sahf
loope
out
jbe
add
jb
cmpsl
push
push
scas
inc
pop
loopne
lret
sbb
inc
dec
xorl
pop
mov
rcl
lock
or
jnp
push
jp
imul
loope
mov
dec
or
sbb
and
and
xchg
mov
cli
mov
mov
sbb
add
shl
and
and
dec
in
add
fidivl
mov
add
mov
idivl
cmpsb
lret
xor
mov
pop
cmp
aas
sahf
mov
sbb
fimuls
dec
dec
mov
pop
dec
gs
cmp
bound
add
pop
popf
addr16
pop
fwait
test
inc
dec
sbb
add
jae
push
pop
jecxz
popa
jle
xchg
es
adc
addl
push
sti
lahf
stos
sub
adc
sbb
icebp
inc
push
inc
xor
or
rclb
in
inc
mov
push
imul
outsb
ret
mov
testl
int
std
movsb
es
pusha
xchg
inc
mov
add
rclb
cmp
cmp
xor
dec
inc
cld
stos
mov
ret
pushl
stos
mov
iret
test
jge
and
mov
mov
cmp
mov
and
shrl
rol
lret
jecxz
jp
mov
cwtl
jnp
xchg
fmuls
mov
add
lds
sub
inc
shlb
xorb
cmpl
mov
gs
fldt
hlt
inc
mov
jmp
mov
xchg
and
pop
adc
push
ret
jecxz
leave
enter
or
jge
push
test
add
lahf
xchg
insb
or
mov
mov
xor
fisubrs
dec
js
xlat
dec
cmc
dec
pushf
je
mov
ss
push
mul
push
push
push
popl
fdivrp
adcb
sbbb
outsb
loop
pop
sarb
sub
pop
pop
pop
add
dec
and
push
xchg
dec
cmc
and
repnz
daa
ds
jo
call
jno
pushf
scas
movsb
ror
and
shll
push
xor
popf
pusha
pushf
cmpsb
mov
push
in
das
pop
popa
dec
and
in
push
inc
cmc
fidivs
pop
xchg
ljmp
rcrl
loopne
dec
jb
jbe
imul
mov
sbb
aad
out
rorl
mov
push
ss
and
mov
rcrb
mov
out
add
mov
xchg
loopne
lret
xchg
pop
mov
frstor
adc
pop
xor
jno
jo
cmp
add
in
mov
mov
push
jg
stos
jae
popa
dec
mov
daa
out
pop
or
fs
sbb
mov
in
shrl
mov
aam
insl
inc
loopne
sub
fbld
inc
mov
sbb
dec
dec
ret
sahf
inc
ja
push
pop
jle
lret
into
fisttpll
fsubl
fdiv
jp
fdivrs
xor
arpl
in
xchg
xchg
ljmp
or
sub
cmp
jg
sub
mov
sbb
inc
or
data16
test
lods
jo
pop
push
sub
push
aas
shl
cmpsb
push
push
adc
in
xor
imul
and
jl
idivb
loope
lea
loope
aas
xchg
jmp
insl
mov
mov
sub
gs
test
in
push
ds
push
imul
in
movsl
ds
xlat
mov
cmp
sub
sub
das
cmp
popf
repz
jmp
mov
push
pop
sbb
lods
lcall
mov
jno
dec
add
shrl
mov
or
xchg
add
int3
adc
stos
mov
lret
sub
jne
jmp
adc
shrl
dec
popa
repz
ss
adc
inc
jnp
mov
sbbb
add
mov
cmp
shrl
test
push
push
popf
or
cmpsb
push
js
repnz
pop
sbb
flds
icebp
mov
dec
sti
jae
mov
dec
cwtl
std
pop
lret
inc
push
addr16
adcl
and
xor
nop
or
push
jecxz
push
ror
lods
fidivl
push
jle
or
clc
gs
aas
test
pop
fs
sarb
mov
pop
mov
cmp
insb
mov
pusha
iret
movl
mov
lock
jo
addr16
jne
out
sub
pop
push
cmp
xchg
ss
insb
notl
aaa
xchg
test
bound
mov
cwtl
or
cltd
bound
adc
cmp
stos
in
js
int3
cmp
clts
sub
and
sbb
ret
aas
xchg
imul
or
adcb
addr16
movsb
jbe
dec
leave
push
push
sti
jo
inc
rcll
or
xchg
and
mov
fiaddl
mov
lock
adc
sbb
push
pop
or
nop
sbbb
xor
add
stos
insb
insb
movsb
clc
xchg
je
jl
pop
and
aam
push
cmp
push
call
mov
inc
and
jns
rcrl
jecxz
xor
mov
mov
xor
arpl
or
insb
jle
pop
cmp
aam
or
or
jns
mov
fistl
fisttpl
mov
mov
popf
and
pusha
cld
and
xor
mov
in
jae
sbb
xchg
pop
jle
movsl
mov
pop
push
push
aaa
jbe
fs
lock
fistl
into
fbstp
push
enter
sbb
leave
das
xchg
xorl
cmp
ret
pop
insl
jmp
mov
sbb
scas
xchg
mov
or
jns
and
mov
sbb
in
inc
loop
popa
push
sub
jp
jb
sub
ret
rcll
mov
aam
ljmp
mov
mov
mov
jle
fdivr
es
mov
mov
push
popa
test
call
pushl
ds
inc
subl
xchg
test
dec
pop
cmp
mov
icebp
fisubrs
scas
pop
push
sbb
jo
cs
mov
mov
sbb
aas
push
pop
pop
sbb
jle
jnp
jno
es
test
rorl
mov
adc
js
xor
jge
mov
sbb
ret
cmp
pop
leave
add
les
sbb
push
pop
ljmp
insl
pop
cltd
fldt
cmc
sbb
jb
sub
adc
or
fsubrp
icebp
mov
das
inc
inc
sti
stos
lds
pusha
or
loopne
rcr
in
data16
and
out
lods
shrb
add
sarb
xchg
add
mov
dec
loope
cmpsl
cmp
adc
adc
stos
pop
jmp
inc
add
scas
out
mov
lahf
not
aad
jl
pusha
popl
stos
cs
xchg
fcomi
mov
jmp
enter
outsl
movsl
add
daa
pusha
add
xchg
aas
shrl
test
xor
push
lcall
fcompl
push
ror
data16
jo
scas
stos
lods
jo
jb
fists
mov
ret
lret
xchg
lcall
adc
push
push
dec
andl
bound
mov
sarb
pop
mov
insb
add
mov
les
add
mov
jno
push
sbb
dec
xor
ljmp
sbb
out
insl
push
inc
test
xor
arpl
sbb
xor
shr
lret
je
mov
lds
xchg
fmull
jg
mov
lods
ret
adc
mov
movsb
das
jnp
mov
int
fbstp
imul
xor
in
nop
push
fwait
test
sti
add
pop
fdivrs
fmuls
repz
xor
mov
xchg
sub
xchg
jecxz
in
sub
cltd
rcll
inc
stos
jecxz
gs
pop
in
and
sbb
scas
ljmp
ja
gs
sbb
fisubrs
ja
sti
daa
dec
mov
jp
sbb
mov
dec
push
lods
ja
xchg
sbb
inc
and
mov
out
out
mov
pushf
stc
test
pop
cmp
mov
jo
adc
mov
inc
add
cmpsl
dec
sub
push
xlat
jnp
dec
dec
out
push
cwtl
nop
cmp
lret
dec
std
lcall
fmul
jecxz
jecxz
mov
test
cmpsb
nop
ret
jl
xchg
push
cs
jle
mov
lods
xchg
faddl
add
mov
inc
mov
inc
and
jecxz
and
push
fsts
std
mov
adc
pop
push
jne
cmpsl
dec
loope
mov
inc
stos
in
or
xchg
enter
cmp
and
sub
mov
mov
ret
clc
xor
aaa
movsl
pop
andb
lret
xchg
mov
repz
push
mov
jno
dec
cwtl
lret
dec
ljmp
call
pop
mov
icebp
mov
jns
sbb
pop
or
mov
rolb
xor
and
mov
cmp
add
adc
jno
or
add
jbe
popf
and
iret
ud0
xor
dec
fists
or
and
outsl
int
sbb
scas
out
cmp
pop
mov
dec
dec
ja
mov
mov
imul
mov
mov
add
xlat
pushf
ret
or
pop
sahf
xor
decb
jo
xor
mov
loop
sub
pop
icebp
xchg
test
xchg
hlt
scas
xchg
adc
mov
push
call
test
test
jge
push
sbb
or
cmpsl
push
out
dec
loopne
xchg
inc
out
push
nop
push
movsl
cmc
pop
ret
sarl
out
lret
mov
inc
fisttpl
push
mov
and
sahf
cld
out
mov
sub
and
or
nop
add
pop
mov
popf
lahf
push
mov
scas
mov
mov
mov
ss
mov
mov
imul
mov
pop
xor
lods
outsl
pop
jmp
in
add
mov
pop
cs
out
push
dec
cmp
cmpsl
add
sarl
decb
inc
leave
lahf
fmuls
cld
xchg
out
dec
cs
ds
push
xor
xchg
push
push
in
inc
mov
xchg
jnp
mov
outsl
xor
mov
xchg
imul
mov
aam
call
dec
fs
iret
fs
xlat
ret
pop
mov
shrl
mov
fsts
mov
in
movsl
int3
in
inc
jbe
jae
adc
imull
push
jle
js
add
cmpsb
push
ss
sahf
xor
sbb
dec
inc
rcrl
stos
arpl
mov
movsl
aam
mov
and
push
xchg
leave
int
dec
enter
mov
sbb
add
jno
aas
fidivrs
ret
jmp
into
shlb
pop
push
out
jp
jle
lret
pop
mov
jle
mov
test
in
test
maxps
aad
adc
int3
add
xchg
jl
dec
cmp
sub
sub
sbb
lahf
mov
pop
lret
push
add
ret
mov
test
gs
sbb
xchg
int
fidivrs
and
mov
lcall
inc
daa
jno
out
push
lea
arpl
cmpsb
ljmp
cmp
lea
pop
mov
lcall
add
daa
scas
lods
or
pop
ficompl
lods
jge
pop
scas
fnsave
rolb
jbe
xchg
movsb
pop
pushf
pop
nop
add
aam
jnp
push
sub
cmp
into
leave
xchg
loop
enter
mov
vmovntps
push
or
in
mov
mov
rorl
dec
sbb
ret
ret
in
dec
dec
pop
push
bound
jp
inc
sub
inc
nop
pop
inc
xchg
inc
jbe
sbb
sahf
cmp
test
subl
lret
fbstp
inc
lods
inc
imul
mov
push
jne
fsubrp
adcl
nop
ss
or
and
cmp
push
mov
dec
repz
mov
mov
cmp
push
mov
in
pop
mov
movsl
aam
adc
jge
mov
xchg
cmp
fsubl
jne
jo
out
or
popf
mov
aam
lds
jle
out
and
in
mov
adc
xchg
cltd
mov
cld
jo
cs
mov
mov
in
add
lcall
sbb
jmp
cmpsl
out
mov
out
movsl
push
roll
add
ja
stos
call
test
adc
int
ficoms
add
xlat
nop
ja
adcl
ljmp
out
dec
in
insl
movsb
inc
push
lds
mov
push
enter
mov
int
scas
lock
sbb
add
sub
negl
shlb
add
rcrb
repnz
mov
lahf
adcb
cmpsl
sbb
pop
xor
pushf
lods
imulb
roll
fcos
xor
nop
insl
or
sbb
mov
mov
icebp
jp
pop
mov
ljmp
mov
cmp
adc
fnsave
cli
sub
aaa
shrb
dec
pop
jae
psubb
bndldx
and
adc
dec
pop
pop
cmp
dec
mov
mov
pushf
pop
rorl
std
mov
mov
ljmp
mov
pop
jns
jb
xlat
jecxz
push
ficoml
fs
mov
test
les
loop
insl
push
stos
sbb
sahf
cmp
push
pusha
xor
sarb
gs
adc
js
mov
xor
sub
push
popa
sahf
gs
idivb
fcmovnb
jnp
dec
and
adc
movsl
mov
insl
mov
sbb
outsl
mov
xor
lock
jne
nop
cld
addr16
test
fwait
inc
xchg
inc
rcrb
xchg
cmpsl
repnz
jne
cmp
fsubrs
fnsave
dec
sbb
repnz
push
imul
jle
nop
xchg
pop
jae
inc
sub
ficomps
fistl
stos
jne
ljmp
sbb
inc
add
mov
push
fdivrs
les
jl,pn
stos
xchg
xchg
xchg
scas
out
clc
or
out
out
mov
jne
into
pop
push
mov
das
dec
icebp
out
daa
sbb
pusha
add
lds
subb
loop
sub
or
out
inc
out
jmp
jmp
xchg
jl
xor
sbbb
mov
das
and
mov
jne
mov
adc
jge
mov
lods
add
cmpsl
shrl
sti
jno
ss
std
adc
fwait
xor
jns
cmp
cs
xchg
clc
cmp
jae
sub
mov
adc
popf
ss
into
pop
cmpb
in
and
sub
mov
mov
jl
mov
inc
jge
dec
stos
inc
pop
push
mov
xchg
xlat
pop
dec
inc
addr16
jp
mov
ret
ror
jo
mov
fs
mov
push
roll
add
jne
addr16
fists
sbb
jp
cmp
cmp
test
and
push
xchg
push
fdivl
mov
xor
loope
or
hlt
push
mov
gs
mov
and
pop
or
cmp
mov
insb
adc
outsb
adc
aaa
scas
aas
add
pop
mov
loop
rcrb
add
ljmp
adc
andl
push
out
sub
add
inc
sub
push
mov
aaa
cmp
add
mov
mov
repnz
mov
cmpsl
mov
cmp
fdivr
mov
es
dec
and
pop
xchg
lock
lods
js
loopne
fidivrl
mov
push
lret
mov
xor
mov
mov
pop
inc
movsb
lret
mov
insl
add
push
into
xor
mov
aas
pushf
lods
sub
push
out
pop
cs
scas
lahf
nop
pop
out
sarl
mov
sub
add
pushl
test
jno
repnz
insl
xchg
notw
and
shll
mov
cmc
cld
mov
sub
movsb
cld
mov
outsb
inc
movsb
cmp
pop
cmp
adc
and
lock
adc
jg
add
mov
mov
inc
mov
jecxz
sbb
sbb
cmpsl
ret
xor
insl
ret
sub
nop
mov
adc
inc
into
int
into
pop
jae
push
dec
lahf
add
fnsave
or
mov
mov
sub
xor
inc
cmpsb
hlt
icebp
inc
lahf
pop
repz
xchg
push
cmp
lcall
xchg
xor
add
into
leave
andnps
cli
mov
cmc
and
inc
inc
push
inc
cmp
mov
cli
outsb
xor
test
adcl
outsl
jb
sbb
ss
mov
pop
jnp
xchg
mov
jmp
loopne
pop
pop
xor
ljmp
push
cli
or
lahf
ret
jge
mov
mov
cmp
iret
mov
lods
outsb
insl
sub
ja
pusha
adc
mov
nop
lods
sbb
dec
ds
mov
ljmp
out
pop
or
loopne
push
fwait
mov
loopne
inc
xchg
inc
push
mov
adc
scas
ja
adc
mov
nop
out
out
xchg
shlb
mov
sbb
or
insb
and
mov
jns
or
cltd
xor
cwtl
pushf
dec
test
loope
sbb
dec
xchg
jb
lret
out
loope
push
loope
pop
movsb
aad
mov
mov
xor
jne
cmp
pop
add
mov
xor
std
lea
adc
and
pop
cmp
movsl
xchg
dec
dec
in
inc
scas
jg
xor
jl
daa
dec
cmpsb
fstpt
or
in
cli
mov
sti
ja
sub
cmp
mov
add
aas
lock
push
pop
push
inc
aad
or
sub
push
sbb
pop
add
xchg
shll
xor
out
pop
std
adc
out
mov
and
mov
aas
fwait
insl
sub
xor
jmp
sub
and
jb
shrl
dec
ficomps
jbe
inc
mov
push
inc
loopne
cmp
jmp
into
xchg
fdivl
insl
ds
leave
fbld
lds
imul
inc
movsb
xlat
sbb
test
shr
fs
andl
scas
cmp
repz
in
loop
iret
push
repnz
lret
xchg
xor
mov
xor
push
push
mov
and
fs
jbe
add
xlat
inc
imul
lea
sub
pop
mov
sahf
mov
sbb
andb
pop
mov
idivl
ret
std
sub
and
shrb
push
xchg
popf
mov
int
std
mov
sbb
mov
adc
fnstenv
push
pop
cmpsl
ja
xor
xchg
pop
bound
mov
loopne
adc
hlt
jns
idivl
xchg
sbb
mov
xor
cmpsl
imul
popf
stos
jecxz
jmp
xor
stos
add
cmpsl
dec
sub
outsb
push
or
scas
repz
jbe
fsubrs
insb
fdivs
stc
lock
mov
inc
sub
xchg
lock
sbb
jno
mov
mov
xchg
in
cmp
sbb
test
push
cmp
cltd
mov
or
add
push
pop
or
lret
cld
lea
push
inc
sbb
xchg
stos
nop
leave
push
pop
push
cmc
xchg
inc
jb
scas
mov
inc
ss
dec
std
movsb
test
call
or
mov
fucomi
inc
dec
jp
jl
jl
out
lods
out
sbb
add
cmp
inc
xor
das
push
dec
push
push
xchg
xor
dec
rcl
ror
outsl
jbe
ficomps
or
lahf
mov
shll
add
xor
xchg
sti
xchg
add
pop
mov
fwait
sti
push
lods
out
pop
adc
add
xor
mov
jmp
stos
call
or
adc
int
fisttpll
imul
data16
mov
inc
in
push
mov
add
pop
push
mov
mov
or
fxch
mov
into
popa
out
pusha
cmp
mov
and
inc
movb
jg
repz
push
out
movsl
xchg
pop
xchg
scas
pop
addr16
test
shlb
aam
sbb
sbb
dec
xchg
add
pop
cltd
sbbl
jp
xchg
dec
xchg
shrl
outsl
push
mov
push
jno
fidivl
fistpll
in
and
aaa
mov
mov
ds
inc
mov
popf
call
adc
test
mov
movsb
enter
addr16
pop
test
stos
dec
xor
faddl
add
pop
push
xchg
mov
in
mov
cmp
dec
jb
cmp
scas
inc
dec
fstps
add
push
dec
fnstsw
test
add
inc
mov
push
leave
dec
dec
jo
out
test
ds
sahf
and
mov
cmp
js
xor
out
lods
push
lcall
inc
add
xchg
fsubs
insl
mov
mov
sub
cltd
cmp
mov
fidivrs
mov
jecxz
outsb
xlat
cmp
mov
pop
aam
adc
iret
cmp
add
push
outsb
jmp
stos
out
movsl
pop
int3
popf
mov
xor
jecxz
stc
int3
inc
adc
inc
xor
cmpsl
or
sbb
sbb
jne
notb
stos
sub
sbbb
popa
push
mov
divb
jbe
xchg
push
aas
aad
jbe
inc
in
cmpl
insb
addr16
or
cwtl
cmp
fdivl
jge
call
mov
lret
cmc
ja
les
and
lret
cli
xchg
pop
scas
pop
mov
mov
and
mov
jg
into
pop
jb
mov
or
fistl
sbb
lcall
aaa
xchg
push
add
pop
mov
fstps
sbb
es
cmp
scas
sbb
std
mov
dec
jns
jg
loope
jmp
push
into
into
inc
push
data16
pop
lds
adc
in
pop
ds
sub
clc
pop
daa
mov
pop
stos
negb
fiaddl
or
push
aad
mov
inc
fisubrs
add
mov
sub
loop
les
mov
into
jmp
adc
mov
out
fnstenv
pop
adc
gs
movsb
out
adc
sub
mov
mov
sbb
xchg
stc
movsl
mov
in
mov
pop
pop
outsl
mov
mov
mov
mov
xchg
add
daa
and
xchg
add
shll
aad
cmp
insb
xchg
dec
inc
mov
mov
add
jae
jmp
mov
sub
dec
add
stc
pop
lcall
divb
xor
jge
xchg
es
aam
test
mov
fwait
sbb
shrl
pop
sahf
jae
ret
dec
cmp
cs
sbb
dec
jp
pop
adc
xchg
loopne
lcall
adc
mov
xor
push
and
pop
fcmove
int3
sarl
scas
cli
mov
outsb
pop
mov
das
int3
aas
scas
inc
push
or
mov
scas
mov
mov
push
ds
xlat
test
pop
jbe
pushf
scas
orb
sbb
mov
mov
xlat
fdivs
gs
mov
pop
jno
aad
loopne
lea
inc
iret
fstl
jo
mov
ja
sub
in
scas
add
test
cmpl
lret
pop
out
fsubrs
dec
or
cmp
mov
iret
mov
xorb
mov
jmp
test
pusha
xchg
mov
sub
jae
shlb
lods
insb
cli
cmpsb
leave
mov
outsb
sbb
mov
clc
sub
add
pusha
xchg
lock
jg
adc
add
or
inc
add
outsb
ret
movsb
mov
xor
push
fildll
jnp
and
icebp
dec
or
mov
into
xor
add
push
lret
mov
fidivrs
out
in
push
mov
test
fimull
and
pop
jb
inc
dec
dec
xchg
mov
sarl
mov
pop
sbb
cmc
lds
out
out
sahf
mov
xchg
mov
les
jnp
repnz
dec
or
sub
cld
cltd
cmp
jb
cmp
fcomps
cmp
push
sbb
mov
mov
hlt
pushfw
cld
mov
xchg
fisubrs
mov
dec
cmpsb
in
dec
dec
inc
je
aam
ficoms
leave
mov
sub
jo
xor
push
shlb
add
xor
test
out
imul
aas
sbb
sahf
xorb
cmc
jns
out
xchg
push
adc
sbb
daa
jp
push
mov
add
push
add
inc
push
mov
fcomps
or
xor
inc
fdiv
jge
mov
pop
filds
sub
add
lods
add
mov
testb
adcb
imul
xchg
cmpsl
pop
sbb
xor
mov
bound
sti
sbb
sbb
mov
aas
clc
call
mov
dec
cmp
push
mov
and
cmp
push
mov
in
and
mov
cltd
sbb
fs
lea
jle
jmp
ss
out
push
aam
mov
push
mov
push
add
mov
pop
bound
adcl
cmp
movsb
cmp
mov
cmp
mov
ljmp
mov
movsb
rcl
insb
inc
sti
push
mov
lea
test
push
jg
cmp
insb
arpl
pop
imul
ret
dec
shrb
push
mov
pop
cld
cmp
insb
jns
faddp
jle
lods
mov
mov
push
fsubrl
stos
sub
data16
push
pop
sub
imul
dec
out
in
jo
adc
ds
outsl
imul
jp
enter
cltd
xor
addr16
add
mov
mov
jb
sbb
adc
aaa
cmp
jg
inc
push
push
ljmp
call
dec
in
ret
rorl
inc
ficomps
adc
je
call
dec
pop
mov
pop
xor
aas
aaa
push
ljmp
mov
in
inc
adc
into
mov
pop
movsl
pusha
shlb
mov
out
lret
sbb
inc
sbb
cmp
aad
scas
ja
shrb
ds
test
call
mov
or
mov
push
mov
adc
jnp
gs
shl
pop
daa
out
ds
lahf
call
shll
mov
adc
xchg
outsb
jb
mov
and
fdivp
mov
push
or
xchg
pop
icebp
leave
loopne
or
cmp
push
mov
push
dec
test
rcrl
int3
jp
dec
shrl
cwtl
and
jle
push
fcomi
adc
xlat
push
call
xchg
inc
jmp
adc
mov
jb
into
lret
fisttps
or
decb
push
notb
divl
pop
addl
lock
andl
mov
xor
xchg
addl
mov
push
and
sti
lods
jb
subl
sub
sbb
clc
adc
jge
sub
cltd
xchg
das
addr16
add
sti
je
and
push
pop
insl
fsubrp
push
xor
xor
sarl
pop
mov
lret
mov
cmp
enter
lods
xchg
pop
inc
cmp
aaa
xlat
inc
fcmovnb
pushl
lret
xchg
cs
repz
es
ljmp
add
sbbl
sub
adc
and
gs
scas
cmc
push
jmp
outsl
cmp
stos
mov
pop
imul
mov
sub
scas
inc
cltd
add
jae
push
out
cli
mov
add
jbe
xchg
sub
cmpsb
aam
push
sub
lcall
adc
test
fstpl
sub
or
cbtw
mov
or
push
lods
daa
sbb
cmpsl
mov
insl
call
cmp
lcall
lcall
daa
adc
sbbl
add
inc
je
lahf
addr16
sub
mov
in
xchg
fldenv
jnp
dec
push
sub
jge
les
test
rcrl
lea
loopne
mov
lods
test
adc
clc
mov
mov
cmp
sbb
sbb
test
jg
int3
sahf
cmpsb
pop
es
mov
fstl
xor
or
out
shlb
popf
jo
rorl
movsl
inc
scas
adc
inc
mov
icebp
lock
pop
loope,pn
add
in
mov
mov
in
jecxz
lock
shll
cmp
push
enter
push
jb
pop
or
sbb
iret
lea
sub
iret
ds
repnz
imul
shrb
dec
pop
hlt
push
pop
mov
add
mov
test
test
aas
in
xor
lcall
jbe
je
push
loop
jbe
and
jae
pop
mov
mov
push
mov
pop
test
ja
sti
aam
lods
mov
mov
mov
data16
mov
in
ja
lret
sub
mov
fstpt
mull
lods
inc
fdiv
inc
or
push
or
fwait
add
and
cli
xchg
jno
fdiv
iret
cs
imul
xchg
sbb
ret
jne
ret
jp
in
push
cmp
mov
lock
popa
mull
xor
adc
xor
pop
rorb
in
shr
cmpsl
inc
popa
jo
sbb
pop
int3
inc
xchg
mov
mov
es
or
test
ljmp
cwtl
xacquire
dec
fistps
lcall
xchg
aas
add
xor
call
or
mov
std
lock
in
push
xchg
mov
dec
inc
xchg
jge,pn
sti
inc
xlat
ja
jnp
jmp
cmp
insb
or
inc
arpl
ret
mov
movsl
add
xchg
insb
daa
test
or
jmp
cltd
mov
or
cmp
pop
divb
pop
stos
xchg
pop
cmp
xor
sbb
aas
adc
aaa
add
cmp
xchg
and
inc
pop
idivl
fisubrl
dec
outsl
sub
iret
jecxz
xchg
mov
xor
bound
out
and
mov
addb
mov
jl
aam
lret
inc
or
jns
dec
mov
jae
movl
in
test
mov
decl
mov
and
or
mov
stos
imul
mov
cmp
ss
xchg
pop
inc
mov
fwait
xchg
dec
fldl
leave
cmc
shl
fucomp
mov
sbb
xor
out
inc
aas
sbb
out
in
int3
and
dec
mov
loopne
sbb
ds
pop
test
pop
jo
mov
xchg
popf
push
xor
test
shr
inc
hlt
adc
es
dec
push
pop
sarl
jno
sbb
roll
std
repnz
es
mov
sub
fs
inc
xorb
push
and
dec
lret
nop
adc
inc
cmp
je
sahf
cmp
pop
sti
and
lock
test
outsb
push
dec
pop
mov
enter
loope
jg
sbb
in
arpl
insb
popa
xchg
xchg
lret
lret
pushl
popa
ja
cltd
pop
jmp
test
mov
mov
ja
add
cmp
or
popf
rorl
popa
push
movsl
cmp
inc
xchg
test
or
mov
flds
mov
push
xor
fstpl
popa
or
xchg
xor
xchg
lea
mov
stos
inc
add
cmp
pop
loop
and
lcall
data16
xor
filds
mov
mov
insl
cmp
int3
pushf
and
out
fldl
test
cld
aas
repnz
mov
loope
xor
int
shrl
inc
dec
pop
dec
pop
mov
inc
in
xlat
insb
jecxz
dec
mov
add
dec
shll
out
aad
xchg
mov
repz
in
jne
cltd
mov
xor
sub
or
dec
push
mov
mov
push
or
mov
mov
das
jo
popa
das
lcall
in
mov
sbb
sbbb
inc
test
sbbb
sbb
push
lds
dec
cltd
test
sub
scas
test
in
sbb
mov
movsb
repz
mov
or
js
dec
lods
fisubrs
mov
unpcklps
scas
jne
testl
cli
aad
cs
les
ficomps
cmp
neg
adc
mov
xchg
pop
jnp
push
and
dec
fucomip
dec
fstp
jno
in
mov
and
out
cmpsl
jp
pop
lea
cmp
in
pop
pusha
add
push
mov
and
xor
cli
push
mov
mov
dec
iret
rcrl
jns
mov
mov
push
add
lods
rol
xor
rcll
cli
mov
out
stos
sbb
add
mov
xor
imul
jne
add
xchg
or
mov
cmp
repz
imul
iret
or
sub
aas
daa
lcall
cld
outsb
and
shrl
leave
fnstcw
pop
mov
adc
xor
mov
dec
mov
and
pop
lds
cmpl
add
push
mov
mov
mov
ret
jae
dec
pop
arpl
pop
and
ret
or
xchg
add
fs
addr16
mov
jae
cmpsb
xchg
fldl
sub
mov
ficompl
int3
jo
ret
sbb
aam
or
xchg
sub
cld
incl
cmp
jecxz
xchg
jp
dec
lret
cld
insb
pop
xor
xor
fldt
xchg
mov
iret
push
push
fisttpl
in
mov
jmp
in
popf
or
mov
dec
out
xchg
pop
xor
adc
gs
push
or
arpl
and
xor
leave
add
cmp
cmp
enter
mov
xchg
jno
dec
andb
inc
jmp
jg
imul
jg
sub
int3
jl
mov
cli
orb
adcb
mov
jmp
dec
mov
sbb
arpl
sub
jle
mov
out
xor
nop
rol
shlb
push
push
cmp
daa
add
cmpsb
xor
adc
stos
mov
sub
jp
xor
or
leave
add
sbb
data16
ret
repz
inc
pop
les
inc
ss
fs
loopne
sub
fidivs
insb
outsl
icebp
sbb
cld
sub
ret
in
mov
outsb
dec
push
or
push
mov
push
cmc
fdivr
mov
pop
xchg
loope
mov
je
push
imul
or
aaa
xchg
and
cld
ficompl
adc
stc
out
mov
pusha
hlt
int
aam
dec
mov
mov
stos
pop
lret
clc
adc
mov
xchg
loopne
je
push
add
lcall
out
inc
jge
enter
pop
in
pshufw
addb
inc
test
loop
pop
pop
dec
sub
insl
in
test
add
adc
shlb
mov
test
cmp
xchg
flds
mov
jp
xlat
adc
and
js
stos
push
mov
in
sbb
xchg
xchg
inc
loop
pop
lds
in
xor
lret
dec
xchg
sbb
cmpsl
loop
lds
icebp
mov
sbb
nop
mov
je
daa
pop
sbbl
mov
mov
scas
adc
incl
out
fs
dec
adc
mov
adc
and
mov
test
imul
ss
lods
addr16
mov
out
repz
in
push
adc
fdivl
mov
imul
add
inc
das
lods
shrb
inc
sbb
xchg
cmp
and
gs
pop
cli
stos
lock
mov
pop
adc
add
adcl
ss
aaa
lret
bound
mov
mov
aad
push
sbb
lea
imul
fcoms
out
xor
mov
jmp
in
mul
xchg
add
movsl
inc
mov
mov
insb
xchg
roll
arpl
test
pop
scas
std
sbb
test
pop
or
aas
add
jo
or
je
mov
jne
std
inc
jge
aaa
dec
call
mov
nop
cmp
subl
in
add
mov
push
jl
data16
sub
sbb
lcall
cmp
and
push
cltd
pop
sahf
xor
leave
jnp
loope
push
jb
andl
push
sub
cmpsb
push
and
xor
test
jle
popa
hlt
rcrl
leave
jl
pop
std
and
pop
movsb
jp
lret
mov
mov
pop
cwtl
stos
cmp
call
neg
and
add
aas
fwait
inc
xchg
insl
popf
inc
push
imul
inc
out
xchg
push
push
pop
sbb
mov
or
xchg
push
mov
add
jnp
popf
or
push
inc
fildl
cli
fldcw
js
add
lods
xchg
dec
mov
jae
insl
sub
shlb
rcrl
mov
push
adc
rcrl
in
sub
and
lock
test
imul
mulb
dec
sbbl
daa
shrl
jle
jo
mov
push
sbb
xlat
add
jecxz
push
push
xor
jg
and
mov
ljmp
fstpt
addb
xchg
fistps
pop
lret
stc
pop
inc
sbb
push
lods
dec
or
add
int3
pop
rcll
pop
inc
fldenv
push
loope
jnp
hlt
jl
mov
add
pop
arpl
in
fs
mov
scas
pop
cli
and
dec
mov
inc
in
in
testl
pop
imul
sahf
push
xchg
addr16
or
jne
insb
sbbb
sub
lods
mov
push
out
test
int
xor
outsb
or
outsb
cmp
xchg
pop
cmc
xchg
lret
pop
iret
data16
lods
arpl
in
adc
jno
mov
sub
cltd
or
mov
aad
mov
sbb
jle
xchg
sub
enter
mov
mov
jl
testl
or
in
mov
imul
arpl
in
imul
movsl
and
jbe
fisttps
sarl
jp
push
scas
inc
ljmp
call
jmp
dec
dec
cwtl
push
adc
jae
cmp
inc
sarb
jmp
mov
icebp
jg
dec
mov
dec
dec
movsb
add
cmpb
pop
jae
xchg
ret
inc
mov
cmp
jle
in
add
jnp
mov
pop
xchg
dec
cmp
test
clc
mov
psadbw
inc
lock
mov
mov
sub
dec
js
aam
out
mov
clc
arpl
add
das
or
daa
cmc
in
in
testb
incb
jle
aam
jg
loope
mov
pop
add
add
push
nop
out
sub
repnz
or
adc
sub
push
lret
sbb
imul
or
in
add
pop
xlat
pop
xchg
rcll
inc
mov
lret
xlat
js
mov
das
xchg
daa
mov
fs
jl
or
mov
scas
jmp
push
idiv
adc
ljmp
mov
lods
fcomi
push
pop
sahf
insb
sub
cmp
mov
mov
xor
lea
inc
push
push
subl
bound
loopne
shlb
sbb
mov
mov
push
sahf
neg
mov
or
sub
dec
mov
cmc
mov
xor
xchg
dec
and
nop
shrb
dec
pop
ja
repnz
notb
adc
cmpsb
sub
cmc
fnstcw
call
lods
jmp
pop
jo
dec
popa
and
adc
push
push
ja
popf
bound
inc
pushf
mov
cmpb
ds
cmp
icebp
pop
sbb
imull
stos
mov
inc
or
xchg
imul
or
cmc
cld
inc
xor
jno
pop
mov
dec
mov
addr16
jge
hlt
jge
mov
rcr
pop
into
pushl
rcl
mov
push
into
iret
shl
jle
outsl
jns
out
adc
mov
insl
adc
ret
jnp
fcomi
push
mov
xchg
jp,pn
pop
loopne
dec
mov
inc
push
mov
push
test
adc
push
jbe
mov
add
mov
mov
push
test
jp
mov
cld
inc
or
inc
xchg
movsl
add
fwait
cmp
test
dec
aaa
xchg
sbb
xchg
fcmovnbe
lock
orl
add
mov
jno
fs
pop
lret
and
iret
std
inc
in
jb
mov
mov
xor
dec
mov
outsb
addr16
lods
arpl
cmpsl
jb
daa
xchg
xchg
and
enter
shlb
xchg
sub
movsl
sti
jbe
or
mov
jns
pop
xor
cmpsl
fadds
push
fdivrp
jb
push
adc
sub
xchg
push
cmp
bound
leave
aam
or
nop
dec
jnp
shr
jl
hlt
ljmp
adc
fidivrl
sbb
dec
imul
sub
int
daa
int3
add
ret
cltd
mov
cli
xchg
lods
inc
cmpsl
mov
js
and
das
mov
lret
adc
shr
jns
cmpsl
xchg
frstor
lods
outsl
out
push
mov
repnz
sub
fstpt
add
push
test
bound
pushf
popa
aad
cmpl
and
mov
fs
stos
xchg
jl
rol
mov
mov
cli
pop
int3
fstl
inc
push
sti
ja
cmpsb
xchg
mov
loop
cmp
mov
pop
sub
lea
xor
cmc
clc
ljmp
cmpsl
inc
lods
je
das
mov
adc
or
lret
pop
inc
jnp
add
xor
xchg
adc
jmp
loop
mov
cmp
sub
lret
ficoms
push
ficoml
mov
dec
add
lock
in
mov
lret
pop
cmp
add
mov
adc
addr16
push
mov
dec
leave
outsl
loope
outsb
mov
dec
dec
imul
dec
ljmp
push
jne
sbb
add
fdivs
bound
es
test
test
gs
jbe
mov
push
mov
clc
mov
xor
push
pop
lock
xor
js
js
out
das
mov
cmp
std
push
sub
inc
les
test
lcall
daa
mov
sbb
jl
pop
mov
and
inc
mov
out
mov
test
ret
outsb
mov
sti
and
pop
push
stos
sub
xor
sub
xchg
pop
adcb
stc
test
lahf
mov
iret
sbb
or
mov
hlt
push
xor
popf
cmpsl
ret
cmc
push
mov
xchg
pop
imul
stc
lret
pop
xchg
add
pop
insl
jns
stos
enter
or
and
push
out
and
fxtract
inc
add
xor
insl
ja
addr16
addr16
fistl
add
mov
inc
je
jns
push
sub
fisttpl
repnz
xor
ror
dec
dec
jns
leave
test
mov
sbb
sahf
lret
xor
push
in
push
dec
aad
mov
rclb
mov
push
push
addr16
sub
mov
iret
and
jl
mov
icebp
popf
ja
dec
lds
and
test
sbb
mov
pop
pop
addr16
movsb
pushf
lret
icebp
xchg
pop
sbb
ds
aam
fidivrs
cmpsb
pushf
push
stos
mov
popa
xor
out
loop
dec
cmp
jo
out
dec
aad
xchg
mov
aaa
fwait
imul
jnp
ret
jae
mov
in
xchg
jp
pushf
repnz
pop
andl
hlt
push
fs
outsl
inc
lock
das
xchg
fldenv
bnd
inc
bound
into
insl
fidivrs
std
js
mov
leave
fnsetpm(287
les
fisttpl
fwait
push
dec
mov
je
es
jne
fsubrp
add
add
mov
pop
lretw
ds
push
and
loop
jg
popa
jno
shr
pop
scas
mov
leave
or
adc
popf
mov
pop
jmp
das
adc
push
push
das
aaa
pop
pushf
dec
xchg
fisttpll
mov
mov
dec
sub
xor
mov
jns
ss
sub
xchg
loop
mov
add
outsb
pop
aam
int3
andl
mov
inc
dec
out
cwtl
imul
push
bound
pop
testb
mov
adc
sahf
inc
stc
aaa
push
loopne
push
divb
cmp
add
cli
add
fnsave
gs
xchg
test
fcoml
fld1
mov
xchg
pusha
in
cmp
push
add
or
stos
insl
rorl
jle
rorb
test
fnsave
push
mov
adc
push
xchg
adc
add
add
fildll
xor
mov
mov
push
fs
aad
inc
out
scas
cmpsb
aam
sbb
xchg
adc
lock
jp
ja
pop
test
dec
adc
dec
aam
sub
jge
shll
repnz
or
jns
lea
pop
and
jno
les
stos
jmp
mov
dec
rorb
adc
xchg
test
add
scas
stos
jns
push
jge
in
std
adc
push
mov
jecxz
aas
push
aad
mov
push
movsb
das
adc
add
data16
inc
scas
mov
cmp
frstor
jnp
mov
add
outsl
xor
pop
outsb
mov
gs
xchg
jnp
in
jno
sbb
push
dec
mov
push
pop
ret
add
aad
pop
fnstsw
cmp
loopne
xchg
xor
nop
ret
in
push
inc
mov
lret
inc
fadds
or
sbb
cmpsl
fsubrl
push
imul
and
test
cld
shrl
fidivs
inc
mov
or
dec
fdiv
repz
fldt
into
and
and
js
add
push
cwtl
dec
popa
aas
in
or
pushf
and
jl
or
xchg
lret
adc
fistps
out
add
cld
xchg
gs
mov
rorb
leave
int
dec
stc
aad
jne
bound
jmp
int
xchg
hlt
adc
rcrl
movsb
mov
adc
std
inc
xchg
add
in
insb
scas
and
int3
or
rcl
sub
out
mov
cs
insl
add
ret
pop
push
adc
mov
popf
pop
pop
mov
outsb
dec
in
les
shll
rorl
int
mov
je
mov
cmpsb
cmp
xor
xchg
push
lret
into
aad
je
mov
mov
inc
out
lds
cmp
inc
xchg
int
les
cltd
jo
inc
arpl
mov
negl
loop
into
das
into
ds
lock
arpl
repz
push
dec
loope
ja
push
std
adc
test
jle
incb
lds
fldl
mov
xor
imul
and
xchg
sub
test
or
cmp
dec
mov
push
push
dec
aas
add
xlat
jmp
xchg
mov
pop
negb
popa
xor
ret
js
inc
in
xchg
popa
clc
enter
popf
or
out
adc
mov
shrb
popa
pop
pop
mov
xchg
jle
clc
mov
mov
lds
test
mov
inc
sbb
jb
imul
pop
jle
dec
cmp
adc
mov
cmp
xchg
add
and
cmp
loopne
dec
mov
push
cmp
xchg
inc
push
repz
in
inc
jp
int3
push
cli
sbb
sub
xchg
fwait
icebp
out
stc
inc
adc
dec
pop
aas
rcrb
push
add
mov
fidivrs
push
insl
xchg
sbb
mov
in
or
inc
mov
ja
arpl
scas
scas
sub
cwtl
sbb
mov
xchg
sbb
rclb
mov
mov
pop
add
test
inc
add
imul
jle
mov
incl
push
pushf
adc
mov
pop
ss
lret
rclw
add
pop
sahf
jo
mov
ds
push
or
movb
inc
sahf
test
leave
jl
inc
and
xor
pusha
push
in
push
cmc
pop
sbb
clc
jae
sub
pop
loope
lea
out
jmp
jne
stc
test
xchg
xchg
dec
fidivrs
js
outsb
cmpsl
xchg
or
push
fwait
or
int3
fisubrs
shll
je
je
xchg
push
ret
outsl
and
bnd
sbb
scas
aas
popa
sti
xchg
push
dec
dec
loop
cwtl
or
icebp
aad
out
mov
pushf
pop
in
lea
or
subl
inc
sub
ja
ljmp
pusha
push
repnz
fisubl
jl
mov
les
ja
mov
pop
shrb
out
cs
inc
js
sub
push
jbe
clc
ja
jp
mov
pop
addl
jne
lret
push
loopne
jle
cmpb
inc
push
pop
in
cmpsb
sbb
loopne
cmc
xchg
test
movsb
cmp
sbb
rclb
jl
jge
mov
in
sahf
hlt
pop
xchg
sbb
mov
xchg
pop
mov
call
sbb
fnstcw
popf
jae
movl
xlat
mov
xchg
imul
repz
pushf
mov
cltd
scas
cmp
test
jno
insb
addl
mov
icebp
fbld
push
ljmp
jno
bound
pop
in
xchg
jmp
inc
sub
stos
jbe
lret
cmp
popf
xchg
repnz
les
and
jns
xchg
jge
pop
xchg
shrb
push
sub
lret
dec
cli
fwait
mov
sbb
adc
movl
mov
daa
testb
mov
decl
xor
mov
mov
ficoml
xchg
aaa
jle
inc
lods
add
ja
xchg
push
xchg
clc
repnz
movsl
out
jmp
cltd
mov
movsl
mov
mov
icebp
adc
push
push
lahf
jecxz
cmp
mov
pop
out
sub
repnz
mov
inc
xor
xchg
test
imul
add
in
mov
rcrl
sub
mov
shll
push
in
vpmaxsw
adc
push
pop
sub
inc
mov
je
and
lods
sbb
jno
fwait
bound
push
inc
mov
scas
jmp
sbb
mov
scas
jp
dec
xor
in
jnp
pop
push
or
pop
fisttpl
mov
push
dec
stos
dec
xor
sbb
mov
jns
das
mov
out
push
push
jecxz
adc
and
adc
pop
push
fcomps
cmp
int3
add
sbb
lods
xor
flds
or
jno
in
popa
xor
cs
push
inc
inc
int3
lret
xor
jl
mov
lahf
mov
into
in
mov
outsl
lcall
sub
daa
imul
pop
pop
mov
fisubrl
adc
and
pop
jecxz
lahf
or
fiadds
pop
jle
outsl
out
mov
cli
adc
inc
sbb
sarl
gs
mov
js
ja
adc
in
jns
sbb
jp
in
dec
sbb
sub
fs
dec
push
mov
out
inc
loopne
test
or
and
lods
lods
xchg
mov
test
out
mov
jmp
xor
dec
repnz
clc
mov
int3
xlat
pop
jp
fstpt
mov
sbb
mov
stos
ror
stos
push
lret
dec
sub
mov
push
adc
stc
adcb
push
jbe
mov
inc
mov
jae
sbbb
xchg
shrb
stc
dec
movsl
mov
das
jnp
ds
loop
icebp
enter
dec
or
movsl
repz
push
and
ss
stos
dec
pop
and
mov
and
inc
jb
jecxz
push
xor
fidivrs
mov
jp
lods
inc
mov
lahf
add
jo
mov
decb
pop
sub
push
shrl
jb
outsl
mov
push
cmp
inc
fildll
addr16
xchg
inc
insl
jge
mov
stc
dec
outsb
mov
ds
pop
loop
mov
and
push
adc
mov
cwtl
jb
and
jne
or
push
jmp
leave
and
mov
lods
mov
pusha
dec
sub
mov
push
mov
mov
fdivl
push
jmp
inc
mov
enter
scas
dec
std
or
or
int
fnstcw
int
jnp
pusha
testl
push
and
jbe
mov
sarl
arpl
pop
stc
cmc
in
das
push
pop
jp
cmp
sbb
and
imul
jb
jmp
adc
xchg
push
lods
dec
fnstsw
push
lods
mov
xchg
insl
mov
or
mov
cld
dec
dec
ficoms
scas
adc
and
shlb
cwtl
sub
sti
push
shrl
sbb
adc
icebp
push
push
ds
add
jo
cli
push
insb
mov
sbb
mov
es
je
and
push
loop
inc
imul
and
cld
cmpsb
fcompl
test
popa
leave
stc
cld
mov
xor
inc
stc
mov
hlt
adc
rcrb
dec
mov
push
mov
aas
sub
loope
mov
mov
pop
daa
and
push
outsb
push
mov
sbb
lock
dec
out
es
fs
movsb
mov
push
ljmp
jno
xchg
scas
cmp
daa
ret
out
addr16
or
mov
frstor
or
xchg
sub
lahf
jp
ja
stos
push
fmul
jnp
lcall
dec
or
mov
or
mov
push
nop
jmp
pop
stos
inc
push
call
inc
fwait
mov
fldl
sub
ret
test
fisttpl
mov
adcw
decb
cmpsb
jle
in
jmp
pop
inc
sbb
cmpsl
push
outsb
orl
mov
insb
add
xchg
adc
xlat
inc
mov
xor
xor
sahf
movsb
mov
mov
movsb
dec
push
rorl
jl
xchg
in
js
por
inc
cmp
mov
cmp
pop
cmp
push
lock
aas
push
adc
cmpsb
jbe
add
mov
push
dec
enter
cs
aaa
into
sub
mov
scas
iret
enter
mov
xor
notl
ss
cli
add
xchg
arpl
xor
xorl
push
xchg
xchg
lahf
xchg
add
jno
call
out
push
mov
in
mov
ss
cwtl
pop
pushf
rol
xchg
loopne
jmp
imul
mov
insb
and
sbb
mov
pop
in
fadds
jle
sbb
pop
push
and
test
ja
jg
test
sbbl
stos
aam
xchg
das
dec
mov
mov
fiadds
call
xor
push
sbb
mov
cli
movsl
jge
cmp
ds
xor
sub
mov
pop
and
sub
mov
sub
cmp
mov
pop
xchg
pop
pop
aas
dec
dec
out
ficomps
cmp
mov
sbb
imul
jmp
popa
mov
fwait
add
movsb
and
sub
movsl
mov
pusha
aas
out
xchg
cld
xchg
in
stos
and
dec
lds
hlt
sti
jl
das
sahf
add
into
sbb
mov
pop
repz
cs
jnp
add
add
adc
insb
imul
lret
inc
stos
sti
lock
popf
push
cmpsb
stos
pop
mov
in
std
dec
mov
xchg
mov
fs
pop
xchg
sbb
les
dec
mov
mov
dec
mov
dec
cmp
mov
add
mov
sub
loop
dec
shrb
lock
jae
sub
stc
rcll
cmp
pop
dec
sbb
push
mov
mov
shrb
testl
lock
sbb
aad
lods
or
movb
cmp
arpl
jns
pop
inc
out
subb
mov
mov
fldcw
sbb
daa
xchg
repnz
testb
push
mov
mov
mov
fidivl
xchg
int3
out
ficoml
insb
js
jbe
push
test
data16
sub
daa
je
fucomp
lcall
mov
cmpsb
dec
hlt
cmp
mov
hlt
out
aaa
push
and
clc
sbb
jecxz
shll
mov
std
inc
jne
jnp
pop
mov
test
push
adc
mov
sti
imul
inc
cmp
adc
insb
shll
iret
loope
push
subb
movsl
dec
fsin
push
cmc
xor
push
clc
lahf
inc
cmpsl
ss
push
sti
fists
jmp
scas
push
sbbl
adc
xlat
lock
arpl
stc
sub
mov
sbb
pop
in
dec
and
addb
pusha
loop
aas
dec
pop
loope
cmp
sub
ret
mov
das
adcl
pop
dec
adc
adc
sub
jo
pop
sbb
addl
push
adc
sbbl
mov
test
imul
adc
cmpsl
push
and
test
cs
pushf
shrl
pop
add
fcompl
daa
adc
jmp
test
fimull
mov
push
sub
testl
xchg
das
popa
test
push
push
les
mov
dec
rolb
cmc
clts
in
stos
popa
xor
dec
and
xchg
jp
cmp
arpl
stc
sub
lock
inc
andl
push
mov
dec
fsubrs
jle
jb
in
sahf
pop
dec
stc
xor
mov
inc
pop
les
shll
lret
ss
xchg
lret
pusha
pop
call
sub
or
cs
push
jmp
fldt
cmpsl
jb
pop
jnp
pushf
test
dec
adc
xorb
push
out
sbb
mov
cmp
xchg
jmp
aam
jno
inc
cmc
rclb
scas
leave
out
jae
jae
mov
or
sbb
add
dec
xor
imul
js
pop
cmpsl
test
mov
popf
movb
sti
fisubl
aaa
add
scas
adc
mov
pop
dec
fmull
fidivrl
or
mov
mov
sub
ja
push
stc
fidivs
scas
sub
out
mov
outsb
jecxz
int
adc
arpl
xor
stos
lahf
stos
das
repz
mov
into
fmul
sub
popa
lods
mov
movsb
inc
jne
jns
test
inc
or
jmp
sub
adc
xchg
adc
cmp
dec
into
test
clc
jnp
fsubp
xchg
loopne
pushf
mov
mov
jae
out
xchg
dec
push
jne
scas
mov
xor
cltd
mov
ds
sbbb
sbb
pop
sub
mov
mov
xchg
idivb
mov
bound
mov
mov
scas
mov
xor
addl
popa
leave
inc
jecxz
lret
or
adc
inc
int3
in
test
imul
rcr
retw
mov
std
aad
xchg
rcl
dec
xchg
lds
stc
cmp
notl
sbb
insb
jo
jbe
adc
adc
pop
cmp
push
jle
push
negb
cs
dec
pop
mov
pushf
dec
xor
insb
mov
leave
push
adc
in
int
xor
adc
push
test
ss
out
cmp
aad
or
sbb
aaa
lcall
jne
cld
push
jne
and
cld
idiv
outsl
int
fsts
add
jl
dec
pop
ret
inc
or
add
sar
roll
popf
int
add
dec
sbb
addr16
pop
adc
arpl
les
std
bound
or
mov
dec
cmpsl
cmp
lret
sbb
cmpsl
mov
or
jg
std
sub
test
lcall
data16
icebp
adc
pop
out
popf
lea
cltd
xor
stos
mov
fwait
inc
fsubl
arpl
or
dec
in
adc
imul
test
jo
adc
inc
cltd
std
ljmp
lods
out
shl
push
lock
das
das
cmp
stos
inc
push
pop
adc
hlt
mov
sbbl
xchg
pusha
jle
add
add
repz
mov
test
xchg
out
js
cmpsb
mov
jb
and
or
fisubl
pop
fsubrs
dec
add
sub
insl
inc
imul
fwait
loopne
mov
pop
or
fsubr
ljmp
lret
aam
inc
mov
ret
enter
sub
daa
sbb
jg
dec
stos
stos
mov
ret
stos
jno
jb
sub
sbb
test
addl
scas
xchg
mov
dec
xor
data16
in
jmp
xor
sub
or
inc
rclb
lds
es
mov
and
adc
pop
repnz
sub
arpl
dec
scas
out
std
adc
sub
push
and
fwait
sub
aaa
cltd
xchg
and
mov
notb
sbb
ret
ret
iret
cmp
or
dec
cli
jecxz
sbb
pusha
loop
dec
mov
aam
cli
push
add
xchg
cmp
cwtl
neg
ret
pop
mov
sbb
inc
test
lahf
jb
ljmp
cltd
adc
faddl
adc
jb
fildl
jle
scas
inc
lret
xchg
out
int
sti
fadds
pop
mov
push
and
push
pop
scas
push
pop
mov
arpl
sub
jo
jne
lret
dec
cmp
add
cmp
popa
fbstp
mov
lock
fcompl
sub
add
loope
lds
scas
imul
adc
mov
int
push
out
sarb
and
repz
fildll
cltd
popa
stos
add
mov
lea
adc
cld
xchg
mov
out
xchg
adcb
in
or
mov
sub
adc
imul
mov
cs
dec
pop
inc
push
or
jl
mov
dec
push
xchg
outsl
jp
negl
sarb
shrl
sbb
mov
mov
push
call
scas
jg
loope
iret
sub
and
inc
push
ljmp
fistps
or
aad
pop
enter
mov
ret
fnsave
mov
and
ds
fwait
mov
cltd
push
aaa
pop
push
xor
mov
ret
mov
dec
ret
add
xor
push
lcall
int3
mov
push
les
insl
lret
ret
cmp
ret
sub
xchg
jo
pop
push
cmpsl
ja
in
mov
out
loop
movsb
dec
aaa
jno
cmpsl
mov
aad
mov
jbe
data16
pop
in
mov
icebp
pop
adc
mov
or
pusha
aaa
pop
and
and
mov
and
adcb
leave
pop
mov
add
pop
scas
arpl
scas
or
add
jle
mov
les
movsl
enter
cmp
fsubr
jnp
mov
arpl
pop
xchg
cs
and
int3
mov
mov
dec
add
mov
mov
cld
test
cmp
or
mov
test
das
or
jb
lods
mov
lahf
push
and
jge
lods
pop
push
mov
ret
lret
sub
sub
pop
test
je
dec
cld
cmp
cltd
repz
pusha
cld
mov
je
pusha
and
fcoml
inc
mov
movsl
scas
jns
loope
out
jbe
andb
or
dec
sbb
fs
jecxz
pushf
adc
sbbl
xor
bound
aad
scas
cmp
push
mov
adc
in
subl
mov
cmp
inc
loope
jae
push
fs
ss
pop
cmp
add
jecxz
xor
das
mov
fimull
cmp
ja
rcll
xchg
jbe
and
and
cmp
cmpsl
in
adc
ds
inc
add
xchg
inc
and
cmp
push
jno
cltd
dec
pusha
mov
call
pop
je
push
cmp
mov
mov
inc
fcoms
or
nop
sub
dec
pop
scas
add
cmc
add
xor
lahf
fldl
gs
xor
fiaddl
xchg
orl
cltd
movsb
mov
sub
aad
add
mov
aaa
adc
in
loop
scas
dec
aam
adc
sub
push
cmp
loopne
adc
or
ret
cmp
jecxz
xor
rep
mov
add
dec
mov
pop
shl
xor
add
inc
loopne
out
scas
adc
icebp
mov
test
sbb
shl
repz
popa
mov
addl
dec
mov
jmp
dec
dec
bnd
cmp
shll
aam
imul
lock
out
mov
jge
mov
mov
push
cltd
or
imul
dec
ljmp
mov
lods
mov
loop
and
xor
and
sub
xchg
sub
adc
shrb
imul
adc
shr
insl
fs
xchg
mov
sarb
outsb
insb
loop
fwait
popf
push
notb
cmp
pop
add
in
jmp
cmp
pop
mov
xchg
dec
daa
mov
cli
es
fcoml
dec
and
adc
push
movsl
js
loope
cmp
sub
jge
icebp
aam
add
mov
xchg
scas
test
pop
jne
scas
xchg
mov
js
push
sub
ja
lret
insb
sub
xor
push
sub
dec
scas
insb
lock
xor
lret
mov
std
outsb
mov
mov
dec
loopne
test
cmp
int
or
mov
and
jno
enter
repz
inc
shrb
lret
rcrl
jo
inc
push
inc
test
test
sarl
loop
mov
and
inc
xor
push
test
jle
fsubrl
push
add
xor
and
shrb
sub
movb
idivb
xor
dec
and
push
mov
out
std
fistl
into
pop
iret
shll
xchg
pop
adc
xchg
pusha
adcb
push
outsl
dec
mov
mov
mov
or
mov
je
cltd
adc
add
lcall
mov
adc
add
xorl
ret
notl
out
popf
pop
xor
aam
outsl
mov
xchg
dec
addl
jecxz
aas
dec
mov
sbb
add
xor
cli
rol
sub
aam
jnp
cmp
jne
ret
fstpt
xlat
mov
xor
jecxz
push
loop
gs
cltd
orb
icebp
add
out
add
mov
sbb
pop
mov
scas
ret
mov
mov
icebp
out
pop
sbb
pop
leave
mov
loope
xchg
imul
subb
std
xchg
lock
cmp
and
loopne
ljmp
jno
scas
add
iret
outsl
xor
push
movsl
xor
int3
dec
call
negb
cltd
add
data16
fsub
push
mov
cmp
dec
cmc
add
and
adc
aad
test
adc
jae
fsts
sbb
mov
out
js
adc
aaa
pop
loopne
push
cmpxchg
and
xor
adc
and
bndstx
std
pop
inc
mov
xor
xor
stos
rorb
xor
add
lcall
mov
jbe
je
decl
xchg
sub
mov
daa
dec
xor
rcrb
ret
xchg
xorb
mov
or
fsubs
sub
test
in
xor
mov
popa
or
je
scas
inc
mov
sbb
aas
sub
movl
cmp
or
mov
sbb
scas
or
pusha
pop
fwait
scas
aas
mov
out
sti
fsubrs
lahf
imul
sbb
dec
je
ret
and
mov
pop
std
xchg
in
xchg
push
cld
out
shrl
int
xchg
fldcw
roll
dec
popf
or
enter
and
loope
xor
add
cmpb
mov
and
cmp
xchg
fisubl
push
mul
leave
cmp
jecxz
in
movsb
sub
or
xchg
pop
enter
inc
in
ds
sub
shl
jmp
add
jecxz
pop
into
dec
fwait
jbe
dec
adc
sub
add
cmc
ja
loopne
in
fstps
xlat
testl
divb
into
jb,pn
sub
scas
lcall
mov
dec
push
inc
or
outsl
rclb
out
xchg
call
sbb
loope
xor
or
lods
mov
pop
fwait
xchg
sbb
loop
mov
gs
lret
cmp
xor
lret
mov
push
stos
fbstp
addr16
call
in
jne
cmpsl
xor
into
inc
loop
pusha
popf
dec
adc
movsb
sbb
xchg
movsb
addr16
xchg
xor
test
xchg
cmpl
sub
jge
or
jae
and
inc
data16
pop
fdivl
mov
rcrl
jnp
shll
fwait
xor
loope
mov
xchg
add
imul
imul
aaa
jne
rcrl
or
clc
mov
or
cmp
mov
jle
pop
sbb
mov
ret
sti
js
loop
xlat
decl
mov
mov
inc
aad
xor
push
test
fcoml
or
xchg
sbb
push
mov
hlt
and
xchg
push
fwait
cmc
push
mov
dec
pop
jne
or
bound
jmp
mov
lea
outsl
jle
inc
push
sbb
movsl
xor
xor
scas
fisubrs
adc
mov
pop
sub
nop
repnz
dec
es
mov
pop
fcmovu
nop
xor
push
mov
adc
jae
xlat
lods
mov
fs
fcmovbe
lretw
inc
loope
fs
push
xchg
pop
jae
xor
add
adc
notl
arpl
add
into
sarb
lret
xor
je
mov
lock
xor
jns
add
ja
mov
jle
jl
xor
push
in
movsb
add
loope
adc
call
mov
mov
pusha
add
sahf
rclb
std
pusha
cmp
and
push
jne
iret
adc
lock
jl
mov
mov
xchg
sbb
test
lahf
fs
stos
xor
cmc
pop
hlt
es
pop
cs
inc
cmpsb
ret
mov
mov
pop
xchg
sti
lret
outsl
jns
adc
cs
lahf
notl
fwait
jnp
jp
jbe
lret
data16
push
fildl
jbe
jmp
test
fmull
mov
out
outsl
mov
movsl
jge
test
lahf
push
stc
push
sbb
push
or
sbb
jl
mov
lock
and
pop
popf
cld
nop
mov
lds
scas
loopne
fmuls
jno
and
or
xchg
jp
les
cltd
sub
in
add
inc
fiadds
dec
in
out
test
cmp
push
iret
lret
adc
data16
data16
pop
xor
leave
mov
loope
adc
jb
and
lret
add
mov
fwait
jne
jne
sbb
push
add
test
pop
cmc
bsr
push
mov
leave
fldenv
dec
popa
cmpl
push
lcall
idiv
out
loope
inc
xchg
popl
mov
mov
adc
nop
lcall
outsl
arpl
pop
jg
stos
xor
add
daa
in
push
test
xchg
add
nop
rol
and
pop
repz
sub
les
sub
sbb
fdivrs
xchg
push
push
jo
mov
pop
outsb
lahf
shrb
inc
mov
subb
insb
icebp
push
mov
sbb
push
das
fs
gs
lods
lret
jbe
or
out
jmp
xor
in
imul
inc
xchg
push
mov
sub
xchg
ds
pop
cmc
inc
shl
insb
mov
dec
fldenv
mov
insb
popf
cmp
add
orb
xor
addl
sub
pop
push
dec
pop
scas
jl
sbb
int
dec
stc
or
je
out
sub
push
hlt
les
or
cmpsl
imul
scas
inc
mov
std
cmc
dec
xchg
add
int
gs
push
mov
loop
xor
leave
cld
fmull
pop
jmp
nop
das
sahf
and
imul
out
daa
outsl
mov
rorb
xor
push
fbstp
lea
insl
adc
push
fimuls
jbe
xlat
jo
jno
push
inc
clc
push
mov
int3
or
test
cld
xchg
mov
je
roll
test
bound
movsb
stos
nop
dec
sbb
mov
adc
mov
dec
mov
movsl
xor
and
fcomip
cmp
movsb
push
jno
cmp
cmp
jae
sbb
nop
cmc
jae
pop
lods
movsl
movsb
and
loope
push
fdivp
dec
test
ljmp
mov
pop
jno
test
hlt
aas
adc
pop
push
sarb
ljmp
mov
into
fsubrs
ja
pop
insl
loopne
xchg
stos
shl
outsl
and
fdivl
jns
push
pop
sub
loope
nop
popa
or
mov
lods
in
clc
test
pushl
scas
push
out
xchg
jo
lock
inc
xlat
loope
xchg
test
dec
and
std
mov
xchg
push
mov
imul
pop
cwtl
jns
cltd
dec
mov
js
fs
fsubs
out
outsl
movsb
and
mov
jmp
nop
sub
cli
push
mov
andb
cs
push
mov
aam
in
cmp
gs
rclb
or
xlat
test
std
and
xor
inc
fnstcw
mov
mov
sbb
lret
addr16
cmp
mov
shll
lret
ja
jnp
xor
add
in
in
cmc
cmp
jns
add
xlat
dec
ret
fld1
hlt
jo
mov
out
ss
lock
ja
xchg
in
rclb
pusha
out
mov
lcall
shrl
dec
push
stos
out
dec
adc
enter
mov
lods
adc
test
cmp
fxam
rcrl
mov
add
sub
test
xor
shll
mov
xchg
adc
cwtl
xor
fiaddl
and
aas
jecxz
lods
fidivs
xchg
in
add
loope
lcall
pop
push
add
inc
ss
xchg
dec
mov
in
mov
bound
push
jno
js
sub
sub
scas
inc
fisubrs
xchg
sbb
push
dec
inc
fldenv
bound
adc
in
test
pop
ja
out
push
scas
xchg
xchg
mov
int3
sbb
jge
mov
hlt
xchg
mov
cld
add
xor
cmp
sub
push
dec
ret
mov
test
dec
add
mov
and
and
cmp
aad
xchg
pop
sbb
aaa
sub
decb
scas
int3
dec
mov
adc
gs
cmc
add
loop
cwtl
mov
into
and
lret
sbbl
jne
mov
iret
jle
fdivs
xchg
and
mov
xchg
adc
lods
lods
or
sub
jnp
xor
repz
shl
jecxz
mov
mov
push
xchg
rcrl
icebp
jecxz
and
sub
mov
jne
shll
mov
push
mov
ds
mov
push
push
push
inc
out
fwait
fwait
xor
sbbb
aad
hlt
push
nop
and
scas
mov
das
icebp
insl
scas
imul
lahf
shlb
out
outsl
jns
mov
pop
mov
out
lret
scas
inc
test
fldt
mov
mov
add
into
push
dec
into
sbb
adc
push
stos
lcall
sub
lock
jnp
add
ret
xor
jo
xchg
mov
or
mov
or
pop
dec
inc
cmpsl
mov
fwait
mov
mov
push
repnz
sbb
scas
fstpt
lea
jl
int3
test
pop
fisttpl
push
and
dec
in
mov
mov
mov
inc
clc
or
xchg
xor
dec
in
mov
xchg
mov
int3
jle
cs
cmc
push
or
xchg
cmpsb
aam
adc
hlt
cmp
xor
fimull
cmpxchg
scas
shrl
push
cmp
stos
rcll
add
adc
aam
mov
in
jecxz
and
jae
jbe
out
ljmp
outsb
and
push
out
or
jl
jecxz
test
pop
loopne
mov
in
repz
jne
inc
mov
pop
pop
out
add
jl
jne
adcb
inc
sarl
or
lods
shrb
sti
popa
clc
pushf
fnstenv
or
fisubrs
sub
sahf
fidivs
bswap
jo
daa
adc
fiadds
dec
js
inc
fnstcw
adc
bound
and
outsb
jo
ljmp
aad
xchg
ret
push
or
cmp
mov
jne
mov
pop
dec
xchg
push
dec
sub
les
scas
inc
jecxz
cwtl
ret
xlat
out
into
mov
out
add
adcb
mov
hlt
movsl
cmp
sarl
pushf
repnz
jo
jmp
cmp
xchg
jge
in
mov
push
mov
nop
pop
add
iret
xchg
out
dec
mov
mov
fucomi
fstpl
push
aas
inc
das
cmp
cltd
std
jmp
push
adc
pop
xor
aam
or
sub
repz
lods
lret
jge
es
inc
push
sub
inc
stos
inc
sub
xchg
and
push
sahf
addb
cmpsb
xchg
cltd
adc
in
arpl
mov
jns
mov
imul
cmpsb
xchg
jg,pn
fisttps
mov
jb
mov
scas
and
push
fldenv
cmp
mov
hlt
jmp
xchg
cmpsl
enter
cli
ljmp
mov
scas
mov
movsl
cltd
shll
inc
shrl
int
xchg
rolb
push
aas
mov
mov
bound
cmp
cmp
pushf
enter
rclb
lods
jg
cmp
jns
mov
xor
add
mov
cmp
scas
push
ret
pop
jle
mov
lret
xchg
bound
movsl
or
aaa
pop
adc
cmp
push
push
int
pop
push
or
and
inc
cld
push
xor
lds
inc
stc
lods
dec
iret
jne
push
in
and
outsl
jp
mov
jle
lock
stc
sbb
call
out
cs
push
adc
mov
insb
xor
rcrb
and
ficoms
shl
loop
adc
dec
sti
cmp
inc
pop
test
in
stos
jne
lds
push
or
sbb
push
addb
lods
ljmp
and
jg
xchg
arpl
mov
inc
push
push
push
clc
test
in
inc
lret
jae
in
mov
fwait
jbe
fyl2x
dec
das
inc
adc
leave
icebp
mov
pop
push
mov
pushf
fs
or
filds
jl
mov
inc
mov
fs
mov
dec
and
mov
fbld
adc
xchg
jmp
xor
xor
sub
push
cmp
cltd
push
ret
lea
push
sbb
sbb
loope
cmp
cmp
xor
adc
jp
lret
and
out
cmp
jecxz
aaa
or
adc
xchg
xchg
jl
pop
test
sbb
inc
dec
pop
stos
jecxz
add
sub
scas
inc
mov
xchg
inc
jle
shl
idivl
adc
scas
stos
jbe
add
loop
inc
clc
ljmp
jae
movsl
cmp
mov
pop
loopne
lret
mov
pop
mov
and
mov
loop
inc
test
mov
movsb
addl
push
cmp
jp
and
inc
ja
dec
cmp
popf
ret
jnp
and
sub
jnp
int
and
xor
loop
or
push
jge
sub
sub
add
das
push
mov
add
push
xor
jecxz
add
sbbl
mov
mov
fists
dec
loopne
xlat
add
dec
xor
es
mov
stos
movsl
sub
xchg
push
mov
mov
rol
hlt
clts
mov
cmp
push
and
push
fs
jge
mov
mov
movsl
or
xor
nop
jge
mov
inc
fmul
mov
xchg
loop
push
cmp
fiadds
mov
sub
push
mov
xor
cwtl
scas
push
jmp
cmc
aas
inc
lcall
cs
loopne
sbb
xchg
add
push
pop
xchg
add
add
mov
jg
adc
div
scas
stos
lcall
mov
rcl
subl
icebp
inc
bound
inc
or
rclb
jne
jae
nop
movsb
xchg
mov
ficoml
push
nop
pop
sub
and
leave
insl
leave
mov
insl
jno
sub
outsl
adcb
inc
sbb
test
xchg
lods
jecxz
inc
fnsave
pop
cs
cmp
dec
and
js
cmpsb
and
rcl
gs
fstpt
in
stos
aad
xchg
mov
in
cld
dec
xchg
xor
xor
repnz
pop
insl
mov
cmpsl
insl
fadds
mov
sbb
iret
sbb
mov
out
cmp
in
jg
sub
push
fistpll
mov
adc
adc
mov
fnstenv
xchg
sub
mov
sub
push
leave
push
ficomps
out
ficompl
in
and
outsl
push
call
cmp
pop
cmpl
dec
lea
mov
sahf
leave
loopne
and
shrl
and
add
xchg
mov
mov
jecxz
jo
mov
mov
pop
into
sbb
adc
add
orb
xor
arpl
cli
and
out
clc
into
xchg
icebp
lahf
testl
xchg
dec
add
mov
test
add
jbe
fmuls
sahf
lret
push
mov
pop
sub
es
or
sbb
dec
jle
inc
aad
and
fists
adc
inc
mov
lock
out
in
popf
test
mov
adc
xchg
shr
mov
jbe
jecxz
pop
ljmp
push
popa
sbb
jge
aam
cmp
jge
adc
push
stos
inc
xor
std
out
fildl
sbb
push
lret
cmp
mov
inc
ret
mov
das
sbb
dec
divb
test
sub
or
in
movb
mov
incl
inc
es
mov
pop
push
dec
mov
jnp
imul
lds
mov
enter
data16
cwtl
clc
inc
jb
jns
lcall
xor
push
in
fnstenv
push
test
stc
or
push
jns
mulb
cmpsl
cmp
pop
lods
rclb
outsb
fcmovnu
inc
movl
inc
ja
sbb
iret
fistl
push
push
cmc
cmp
enter
jl
jns
cld
movsb
jno
add
xor
enter
cltd
sbb
movsb
xchg
inc
fwait
dec
shll
mov
cmpsl
test
rorl
in
push
cmp
scas
sub
repz
adc
mov
inc
sbb
sar
dec
add
fnstenv
movsl
out
inc
jl
les
push
push
add
and
rorl
or
mov
jae
and
cltd
push
mov
cltd
shll
scas
cwtl
pop
dec
dec
adc
and
dec
test
push
push
sbb
jmp
ja
jns
pop
inc
add
mov
cmpsb
xor
push
push
sub
push
lock
push
movsb
cmp
enter
jecxz
pushf
adc
aaa
fs
push
jo
jnp
jno
aam
cwtl
inc
or
cmp
push
loop
dec
loop
sbb
out
fwait
test
movsb
mov
xor
xor
mov
push
add
jmp
subl
popa
jns
cld
outsl
mov
inc
mov
xor
ficomps
add
or
loope
add
cld
sub
cmp
cwtl
lea
xchg
jbe
nop
mov
data16
mov
jp
loope
and
sub
iret
xchg
push
or
add
test
add
pop
push
inc
xchg
cmpsl
cltd
repz
lock
mov
pop
jl
adc
rcr
jge
int3
push
push
mov
je
pop
xlat
icebp
dec
add
adc
push
push
sub
xor
js
sub
hlt
daa
aad
add
cli
xchg
mov
adc
jnp
bound
mov
outsb
scas
cmp
pop
mov
pop
push
lock
mov
pop
add
popf
sbb
or
mov
out
call
lods
filds
mov
sub
arpl
mov
xor
rolb
lea
mov
test
stc
jo
std
pop
adc
push
push
int
xorb
lods
sub
push
fcompl
xor
cld
and
in
xor
in
fisubl
and
xlat
lahf
ss
data16
adc
mov
cs
lret
stc
xchg
cmp
dec
aam
sub
mov
fdivl
lahf
pop
add
fwait
cmpsl
ja
iret
mov
fisubrs
sti
inc
js
mov
out
loope
faddl
ret
inc
mov
sbb
jns
adc
xor
lods
in
mov
sbb
xor
out
pop
push
popa
stos
add
xor
and
push
jge
pusha
push
sti
dec
mov
dec
aam
hlt
mov
fsubl
stos
mov
stos
xchg
sbb
cmc
enter
scas
pushf
add
cmp
filds
fstpt
pusha
inc
mov
ljmp
add
sbb
jp
or
inc
insl
test
sub
push
xor
add
adc
mov
addr16
adc
xchg
fldt
adc
push
pusha
bound
test
ds
push
cmc
data16
popa
test
adc
rcrl
mov
bound
push
inc
ret
insl
test
push
les
in
aad
xchg
sub
mov
frstor
insl
adc
inc
aad
adcb
lcall
sub
or
aaa
nop
popf
repnz
pop
test
pushf
ds
push
pusha
or
mov
aas
aaa
lods
dec
repz
mov
xor
jp
and
es
jne
xchg
xchg
xor
cmp
jg
adcl
outsb
add
xchg
cmp
fucomip
push
fisubrs
das
or
push
jno
inc
push
pop
pop
inc
int
sti
lds
jmp
dec
inc
mov
and
or
push
imulb
in
jp
inc
add
loope
repnz
pop
xor
loop
jle
pop
jl,pt
rcrb
dec
hlt
mov
addl
inc
push
jecxz
push
and
xchg
cli
lds
fucomip
outsl
push
xor
daa
inc
out
xor
mov
adc
repz
xor
les
inc
std
fsts
faddl
push
or
jle
jl
outsb
clc
pop
cmpsb
int3
arpl
sbb
mov
add
add
sbb
subb
fsubs
sbb
dec
and
pop
nop
mov
mov
les
sbb
mov
xor
fisubrl
imul
jb
aam
xor
sahf
mov
movsl
sbb
mov
cmp
fsubrs
mov
sbb
dec
sbb
sbb
pop
lret
xor
fisubl
push
lds
push
cld
xchg
and
xchg
cmp
or
out
lret
mov
stc
les
push
rcrl
leave
jge
lss
sti
jae
push
stc
nop
mov
test
stc
sbb
mov
xor
aad
in
and
push
fstps
js
sti
and
xchg
pop
decb
mov
xlat
shl
out
das
test
jb
das
inc
decb
push
xor
and
fiadds
lds
test
push
shll
fmuls
and
push
js
or
dec
adc
add
sub
add
jne
lds
mov
fists
mov
imul
fidivs
clc
dec
jns
dec
or
mov
mov
push
jp
lea
je
jbe
mov
fistps
dec
sbb
mov
mov
mov
cmp
adc
push
or
xchg
add
sbb
push
lcall
push
cmp
xorb
and
icebp
divl
xor
mov
inc
loop
cmpsl
pop
sbbl
jl
ret
push
mov
popf
popa
pop
push
jbe
cwtl
sub
sbb
lock
inc
fdivl
ss
dec
mov
xor
push
mov
or
imulb
sub
jecxz
push
jl
testl
sub
iret
js
sbb
movsb
cmc
pop
mov
mov
mov
pop
aad
mov
aaa
sbb
mov
inc
xchg
pop
ds
cmp
imul
pop
dec
dec
fwait
dec
stc
nop
jl
xchg
pop
sbb
jl
push
dec
out
sbb
fisttpll
int
pop
jae
popa
clc
sub
jg
in
loope
mov
into
xor
dec
gs
and
pop
or
lcall
shl
dec
mov
push
loope
dec
xchg
aad
in
push
inc
adc
jmp
in
inc
and
cs
andl
xorb
inc
imul
xchg
dec
pop
fcomps
lret
popl
pop
fsubl
jne
and
jb
enter
rorb
stos
inc
fcoms
neg
sbb
rol
push
pop
adc
push
inc
lret
and
ret
dec
subb
icebp
test
add
movsb
insl
in
mov
faddl
cli
repnz
push
fs
shl
mov
decb
push
mov
cmp
leave
jle
push
daa
jmp
aaa
xchg
push
test
jno
subb
scas
sub
dec
push
push
movsb
dec
pop
fwait
cld
pop
sub
xchg
or
adc
insl
cmp
fistpll
lcall
sti
sti
scas
mov
add
jl
sub
dec
shll
push
mulb
xor
lahf
outsl
sub
jmp
mov
rorl
and
xor
das
lahf
push
cld
xor
add
cmp
add
lret
mov
cmpb
add
das
repnz
in
pop
shlb
cmp
rorb
in
sbb
sbb
rorb
sub
dec
sti
movsb
scas
mov
or
sbb
ret
pop
scas
clc
in
stos
mov
cmp
cmc
jmp
sub
lret
enter
push
jle
xchg
std
cltd
and
cmp
xor
mov
inc
popa
data16
pusha
sbbb
lods
outsl
int
add
xor
jne
push
lods
outsl
cmp
cmpsb
imul
aam
adcb
lret
sub
aad
push
and
outsl
jae
addr16
mov
mulb
mov
in
inc
xchg
pop
test
ljmp
or
inc
stos
rcrb
fcompl
adc
andb
bound
insb
iret
mov
outsb
enter
lods
sub
lret
sarl
add
sbb
ret
faddl
push
push
inc
push
mov
xchg
lods
push
fnstsw
pop
adc
arpl
mov
dec
into
inc
negl
sub
adc
jp
mov
mov
subl
nop
sti
xchg
movsl
pop
pop
adc
mov
js
push
xchg
lahf
jp
ljmp
add
xor
faddp
sbb
jle
dec
jae
pop
push
call
pop
cli
ljmp
insb
in
pop
or
jle
rorb
mov
mov
or
aam
mulb
fsubs
sti
jnp
or
pop
lcall
push
lahf
pop
push
dec
pop
add
xor
pushf
test
sbb
pop
arpl
js
ja
popa
fldl
cmp
ss
mov
inc
fmul
adc
gs
negb
push
stos
jne
cmp
pushf
cld
in
pop
mov
or
sti
sub
or
scas
mov
mov
shl
mov
mov
scas
pop
sbb
mov
outsb
xor
cmp
lret
add
movsb
ja
addr16
addr16
add
or
mov
cli
jne
sbb
mov
fwait
add
pop
jecxz
in
sbb
dec
cmp
in
fbstp
adc
push
add
sbb
shl
pop
push
mov
jnp
cmp
js
pop
add
adc
xor
andb
cmp
cltd
imulb
add
lds
adc
rep
lret
mov
loope
out
lret
xor
add
clc
mov
mov
ljmp
add
lods
insl
mov
daa
jl
xlat
cmp
mov
dec
fnsave
mov
outsl
inc
in
scas
repnz
pop
fisttpll
mov
stc
jae
outsb
mov
in
insb
mov
cmp
mov
sbb
mov
aad
pop
add
pop
xor
jmp
outsb
push
iret
cmpsb
xchg
lahf
cltd
and
pop
loope
push
mov
pop
xchg
insl
pop
lret
bound
clc
inc
insb
pusha
and
into
jecxz
and
adc
repz
sub
jg
enter
fsubl
adc
cmpb
lods
or
ficoms
aaa
mov
int
in
leave
add
mov
rcrb
cwtl
mov
jl
xorb
ja
cmp
and
addr16
sub
stos
xlat
push
loope
frstor
into
mov
and
jecxz
sub
pop
fidivrs
add
pop
or
push
inc
dec
inc
leave
jnp
addr16
pusha
xor
es
lcall
insb
add
mov
out
es
loope
cli
ja
mov
pop
sbb
jl
aad
push
jae
pop
sub
lods
mov
int3
not
out
cmp
adc
mov
and
in
and
pop
sarl
sub
es
icebp
adc
movd
int
mov
lret
fnstenv
int
pusha
gs
mov
rorb
iret
lret
cld
mov
cld
sub
ljmp
cmp
xchg
je
hlt
rcrl
enter
sbb
add
fadds
frstor
fldenv
cmp
andl
aam
dec
mov
mov
sub
clc
mulb
dec
outsl
out
mov
sub
inc
cmpb
mov
push
jae
or
cld
sub
jge
imulb
imul
mov
dec
jae
pop
scas
lods
fwait
sti
xorl
xor
sbb
cmp
mov
out
lahf
jo
push
seta
shlb
je
xchg
push
xchg
mov
pop
adcb
aas
addr16
adc
push
add
in
popf
lock
lahf
fidivrl
insb
cwtl
das
jbe
add
jp,pn
mov
aas
jge
add
int3
ret
ret
jne
pop
ret
sarl
movsl
or
adc
xchg
cmp
fsubs
mov
jne
js
loopne
mov
mov
cmpsb
inc
popf
or
es
dec
pop
dec
outsl
pusha
pop
push
test
adc
lret
scas
adc
shl
movsl
jno
in
cmp
scas
loope
jne
cmp
pop
cltd
sub
lods
leave
jo
addr16
and
in
js
sub
mov
ss
push
repz
imul
push
movb
mov
mov
mov
cs
jmp
roll
cs
and
std
and
or
les
cmp
mov
rdtsc
je
stc
jg
add
dec
inc
mov
xchg
lcall
int3
aaa
js
xor
xor
xor
out
orb
movsb
cltd
lock
imul
insl
push
jl
jb
fdivl
fwait
jne
and
int
adc
out
inc
test
popa
lret
jg
xchg
sub
sbb
mov
in
cli
or
scas
add
mov
xchg
dec
push
jns
out
imul
xor
jne
ljmp
mov
sub
hlt
testl
sar
jno
mov
sub
icebp
mov
movsl
xor
out
xor
or
divb
sub
into
loop
sub
shl
and
mov
iret
push
push
and
and
sar
jns
in
sub
dec
xor
rorl
adc
jns
xlat
test
repnz
push
mov
push
mov
sbbl
popa
cmp
mov
sbb
es
sti
dec
cmpsb
xchg
push
lods
test
mov
xchg
inc
pop
push
xor
pop
lock
or
leave
shr
imul
xor
loop
imul
xchg
sub
test
mov
push
adc
adc
inc
jmp
push
mov
popf
ret
sub
adc
xchg
ja
or
and
or
lahf
lods
dec
outsb
mov
fdivrs
or
test
or
push
dec
inc
or
out
xor
dec
imul
pop
xor
mov
js
inc
lods
std
dec
fildl
and
ret
inc
insl
push
cmp
cmp
hlt
mov
adc
xor
loop
loop
out
xor
cltd
or
cmpsb
cmp
fildll
filds
xchg
pop
inc
push
aaa
xor
rol
addr16
mov
fs
sbb
push
dec
bound
xchg
imul
jo
sub
outsl
inc
pop
icebp
jl
push
pop
scas
clc
pusha
js
sbb
outsb
jbe
dec
in
and
das
jno
cmp
mov
shlb
fmuls
pop
loop
iret
xor
ret
or
xor
loope
adc
mov
cmp
push
xchg
add
cmp
dec
jp
or
out
fimuls
or
xor
jge
jmp
imul
mov
mov
insl
adc
lods
mov
inc
scas
js
xchg
pop
shll
xchg
sub
dec
add
mov
out
insb
insl
add
adc
or
xor
loopne
jne
fstpt
sysexit
jp
scas
jmp
ja
leave
xchg
xor
leave
mov
and
xlat
cmpsb
out
xor
icebp
sbb
sti
push
cmpsb
sub
jg
aad
adc
addr16
inc
scas
jb
scas
push
ljmp
lcall
enter
adc
mov
sbbb
jno
pop
int3
jmp
push
jae
roll
cmpsb
sbb
mov
sbb
lret
mov
adc
adc
cmp
xor
lret
dec
xchg
sbb
inc
mov
int
loope
mov
out
sub
cmpsl
dec
and
adc
push
sub
push
jo
cmc
sbb
or
jge
out
sbb
cli
inc
mov
addl
xchg
movsb
out
lcall
lea
clc
xchg
aam
dec
shr
lea
rolb
push
mov
cwtl
pop
icebp
cmp
jb
ret
stos
cmc
jg
mov
lahf
test
std
fbstp
push
mov
mov
subb
out
and
push
inc
andb
not
in
add
popa
mov
popa
mov
rcr
cwtl
bnd
and
lcall
xor
out
clc
hlt
mov
and
pop
gs
xor
clc
xor
cltd
xor
outsl
mov
outsl
lret
jae
stos
sbb
push
mov
and
adc
xchg
movsb
insl
cwtl
out
sahf
lds
test
lret
cmp
cld
mov
pop
out
lret
test
js
ja
cmp
mov
dec
popf
mul
sub
mov
mov
xchg
cmp
incb
mov
rcr
mov
aaa
icebp
int3
pop
out
std
sbb
je
add
inc
cmp
ss
cmp
mov
sahf
movl
mov
mov
imul
sub
mov
mov
js
adc
sub
pop
stos
jbe
push
in
xor
mov
stos
mov
divl
shll
in
xor
cmpsb
xor
in
add
popa
mov
fdiv
popl
je
stos
mov
sub
xchg
loope
adc
out
xchg
jae
lods
mov
pop
adc
orb
test
movsb
add
lea
add
cwtl
pop
outsl
mov
and
call
cmp
jg
movsb
aaa
or
mov
addr16
push
inc
mov
mov
shl
sahf
scas
jno
ret
jnp
js
fsubl
xchg
xlat
outsb
add
inc
inc
fldenv
outsb
loope
jae
aaa
in
jo
push
mov
jl
mov
xor
das
cmp
pop
lcall
adc
sbbl
lcall
jne
outsl
pop
nop
in
std
mov
dec
andb
adc
add
lods
inc
les
dec
iret
or
push
cmc
add
adc
and
pop
dec
mov
sbbb
mov
in
xchg
stos
jg
and
or
aas
push
popa
popf
add
cmc
sub
push
adc
fsubrs
mov
push
sub
xchg
sub
out
sti
addr16
out
lret
out
aaa
into
scas
rclb
lret
in
mov
cwtl
add
cmp
cmp
je
pop
bnd
pop
ja
or
mov
xor
jnp
adc
imul
imulb
fsubl
pop
icebp
jmp
or
aam
push
jp
cmpb
mov
cmp
push
and
fsubrs
or
fs
add
mov
xor
push
sub
cmp
test
stos
negb
stos
and
add
mov
or
in
inc
test
lcall
and
fiaddl
jae
cmp
popa
lahf
and
sbb
sub
aaa
inc
push
nop
in
lock
add
hlt
xchg
stos
xchg
js
sbb
jmp
aam
adc
int
xchg
cmp
pushf
pop
rcrl
or
mov
push
dec
in
mov
loop
loope
push
loop
or
scas
add
popa
xor
roll
sub
stc
pop
outsb
xor
jae
nop
mov
dec
pop
fsubp
xchg
and
mov
aas
out
jnp
lret
dec
inc
push
loop
stc
pop
sarl
dec
repz
dec
adc
gs
sub
andl
push
xor
xor
adcl
xchg
aam
and
outsl
push
mov
xchg
ss
leave
call
stos
fs
or
pop
pop
cmp
lcall
xor
cwtl
movsb
push
xchg
xor
and
xchg
jnp
ficoms
cltd
adc
mov
add
mov
mov
in
cltd
stc
dec
aam
cmp
sub
adc
add
in
xlat
call
in
jp
mov
shll
data16
pop
sbb
outsl
fstpl
add
popf
lret
xor
enter
into
jmp
adc
leave
dec
mov
inc
enter
fwait
sbb
repz
xor
push
subb
mov
jge
inc
sahf
ja
adc
xchg
cld
ds
mov
pop
inc
or
leave
fisubl
cmp
push
push
pusha
icebp
xor
lods
push
icebp
cmp
popa
dec
dec
push
add
sub
imul
mov
sub
jne
dec
pusha
decl
in
je
adc
cs
dec
add
cmpsl
cmp
pop
pushf
jo
sub
xor
mov
jb
ja
leave
fldt
je
mov
iret
pop
push
push
dec
lods
inc
hlt
adcl
insb
and
fimull
push
ljmp
adc
sub
mov
rorl
sub
cmpsb
xor
cmp
shrl
pop
mov
dec
loopne
nop
das
cs
push
mov
loopne
stc
xor
inc
fiadds
arpl
xor
addr16
and
push
lods
ds
sub
out
pop
out
mov
das
roll
jbe
jp
adc
xor
bndstx
adc
lret
sahf
add
xor
cmpb
mov
mov
mov
sub
popa
add
add
maxps
mov
inc
rcrb
int3
adcl
mov
xchg
test
jb
out
loopne
daa
cmp
xchg
cmpsl
and
push
xchg
push
out
jae
aad
add
jmp
or
xchg
sahf
es
jo
fildl
mov
push
dec
lret
jno
test
rcll
or
add
mov
add
fsubrs
fstps
mov
cmp
push
clc
jecxz
stos
dec
lock
fisubrs
and
ds
fnstsw
dec
popa
sbb
and
mov
fldenv
sbbl
aaa
push
repnz
scas
jno
fcoml
mov
repnz
sub
or
push
adc
mov
cmpl
push
jns
out
mov
adc
cs
push
cmp
xor
xlat
mov
lock
mov
loopne
or
jae
dec
movsl
add
pop
inc
jnp
mov
and
xchg
push
cli
clc
xor
push
push
leave
push
cwtl
stos
dec
mov
dec
pop
and
out
adc
stc
std
push
movsb
sahf
cltd
std
xchg
loope,pt
jmp
adc
into
inc
jecxz
imul
ljmp
xchg
or
push
dec
test
popa
mov
pop
fidivl
clc
out
movsl
imul
sbb
ds
outsl
xlat
aam
mov
and
pusha
mov
out
mov
aad
repz
rcrl
fcompl
add
movsb
dec
out
test
or
outsl
push
lret
repz
dec
loopne
aas
ljmp
or
mov
jo
aam
fucom
dec
mov
mov
out
lret
js
cld
int
sahf
mov
jge
adc
inc
stos
shll
insb
add
dec
inc
sarl
lods
mul
loopne
jecxz
adcl
mov
xorb
das
sahf
or
xor
or
fcmovnbe
pop
loopne
leave
loope
pop
out
mull
cmp
lahf
cs
pop
cmc
and
test
mov
xor
inc
cltd
fimuls
out
and
mov
xor
jbe
negl
pusha
test
ljmp
add
out
mov
imul
enter
rorl
or
push
popf
mov
fimull
popa
int3
push
aad
inc
mov
xchg
sti
pop
lahf
jae
loopne
mov
out
jle
ja
mov
sbb
into
add
push
roll
xor
int3
xchg
sub
mov
das
out
ss
xchg
adc
dec
mov
test
lods
sbb
loop
rclb
and
jl
and
cmpsl
out
lret
addr16
cld
iret
or
xor
xor
dec
ljmp
in
push
leave
flds
repnz
out
scas
int3
lret
xchg
jns
inc
mov
cmpsl
or
push
in
popf
adc
mov
sbb
mov
xchg
or
cmp
pop
scas
fstl
pusha
jl
pop
lahf
adcl
insb
jns
not
dec
xchg
mov
in
mov
mov
iret
imul
shll
mov
adc
add
movsl
sbb
add
mov
jl
fildll
sahf
jb
andl
je
jp
movsb
jmp
adc
cmp
in
and
test
and
arpl
andb
dec
cmp
inc
das
lock
out
int
nop
jae
mov
push
out
push
inc
test
pushf
sti
adc
sahf
jmp
inc
loopne
loopne
insb
mov
adcl
mov
sub
or
data16
stos
push
fiaddl
mov
ret
pop
push
into
popa
into
cmp
in
int3
addr16
ljmp
fmull
mov
lret
jns
jge
mov
jecxz
inc
das
mov
imul
add
cmp
es
test
dec
jo
clc
jns
daa
scas
in
inc
push
dec
test
insl
jns
sbb
adc
add
pop
jne
xchg
addr16
and
into
push
clc
jp
sub
int
ds
xor
sbb
push
jae
outsl
fs
pop
push
enter
cmp
mov
adc
outsb
xor
pop
out
popa
sbb
xchg
mov
mov
jl
jno
xor
inc
sub
lods
cltd
jae
xchg
cmp
dec
dec
and
mov
sub
dec
sbb
add
adc
les
push
dec
insb
aaa
mov
jns,pn
mov
cmp
inc
ss
push
pop
das
push
scas
jbe
mov
push
stos
paddusw
lods
dec
cmp
mov
imul
pop
push
inc
popa
xchg
xor
add
cltd
imul
inc
fdivrl
and
icebp
enter
push
jb
lret
sbb
stos
mov
jae
movsl
stos
or
vpunpckhdq
loope
add
dec
dec
push
mov
jg
sbb
xchg
mov
movsb
inc
push
pop
in
xchg
add
scas
push
cmc
sub
aaa
les
mov
insl
rcrl
inc
and
inc
sub
fildll
lret
leave
jns
lret
bswap
gs
pop
xchg
imul
ds
push
mov
ljmp
iret
xor
add
test
mov
stc
pushf
out
cmp
mov
rorb
lcall
gs
add
mov
adc
cltd
cld
push
jg
xchg
pop
cld
sub
sub
dec
setle
or
mov
or
push
jg
inc
lds
das
cmp
test
ja
add
add
sbb
in
dec
aad
and
test
mov
test
pop
cmp
out
shlb
scas
add
cmp
mov
popa
or
outsl
sub
js
clc
aas
push
call
add
scas
pop
jmp
or
aam
aaa
adc
out
cld
pop
bound
sub
bndstx
push
inc
arpl
pop
das
cmpsb
lea
or
mov
mov
lahf
sbb
fwait
push
xchg
or
decl
mov
gs
adc
incb
inc
dec
jmp
or
pushf
jmp
inc
pop
sbb
or
arpl
adc
mov
repz
lods
cld
mov
mov
lea
mov
dec
cltd
xchg
test
decb
jbe
ja
mov
and
aas
adc
xor
addl
lret
f2xm1
sbb
in
adc
inc
in
lret
cmpsl
ds
popa
pop
lds
cmpsb
les
jecxz
push
dec
mov
mov
inc
and
jne
jg
push
push
adc
or
or
jle
out
lods
into
test
lret
push
adc
ljmp
cltd
or
loope
jge
sarb
je
push
out
insb
and
popl
icebp
stos
shrb
xchg
inc
xchg
div
mov
das
push
or
mov
adc
fidivrs
fnstsw
and
jbe
inc
inc
mov
imul
frstor
push
sar
scas
dec
loop
pop
lods
jne
lock
dec
inc
out
xchg
pushf
mov
lcall
mov
enter
test
popf
pop
iret
ljmp
icebp
mov
sub
mov
testl
cmpsb
fisttpll
arpl
adc
jle
sbb
rcl
pop
aad
ja
inc
mov
xor
adc
lds
ret
dec
lcall
sbb
xchg
add
inc
jne
mov
mov
sbb
xor
cld
xchg
mov
add
les
lods
into
sbb
int3
xchg
xor
js
push
scas
xchg
and
insl
pushl
jbe
cmp
pop
adc
dec
mov
scas
push
jbe
jbe
mov
iret
xor
xchg
push
xlat
push
sbb
jbe
stos
xor
or
outsl
mov
or
lea
or
stc
mov
pmaxsw
push
pop
xchg
call
xchg
cmp
testb
cmc
adc
and
sarb
jge
sbb
jne
imul
les
into
mov
jns
dec
inc
jno
aaa
jbe
es
in
push
xchg
jecxz
mov
inc
icebp
shrl
ficompl
jnp
movsl
addr16
sub
sub
bound
popa
mov
cld
xchg
mov
aad
ss
insl
add
rorl
push
movsl
inc
lcall
stc
out
adcb
jge
adc
sahf
xor
fisttpll
adc
test
push
push
sbb
push
lods
pop
mov
fsubl
jp
push
imul
inc
fidivrs
andb
fsubrs
rcr
jnp
lods
repz
popa
lret
lret
fwait
lahf
push
or
mov
adc
dec
jbe
mov
push
icebp
lock
sbb
rol
scas
adc
addl
jle
xchg
ret
dec
loopne
popf
arpl
jle
out
icebp
pop
pop
mov
jle
stc
or
insb
jecxz
jo
jmp
scas
push
ljmp
shll
test
pusha
les
shrb
cmp
adc
jl
xchg
mov
jle
sub
insl
mov
dec
sbb
mov
js
adc
xor
arpl
scas
adc
push
sbb
add
fsubrs
xchg
xor
dec
mov
jecxz
pop
push
and
or
xchg
pop
add
fstl
xchg
pop
fbld
jno
cs
or
loop,pt
adc
jno
fbstp
int
arpl
outsb
mov
std
test
and
insb
sbb
mov
jp
out
jae
inc
arpl
lods
ss
cs
sbb
fcomip
clc
rolb
pop
sbb
fidivrl
mov
jmp
call
xor
repz
add
test
lahf
call
iret
adc
mov
dec
lea
lret
jno
mov
test
xchg
pusha
push
or
iret
das
and
add
repnz
inc
shr
imul
les
or
cld
lock
outsb
push
nop
push
sbb
mov
xor
dec
mov
inc
rorl
test
inc
ret
sub
inc
or
outsb
or
add
xor
fimuls
push
repz
mov
cmp
and
push
sbb
mov
jecxz
outsl
jae
add
mov
out
sub
fnstsw
inc
dec
in
fidivrs
inc
divb
adc
mov
insb
xor
mov
adc
lds
push
movsb
add
cmp
arpl
popf
fisttpll
inc
jb
mov
mov
imul
psrlq
dec
mov
jbe
shll
js
cmc
outsl
mov
sub
jge
mov
or
fsts
outsb
daa
jp
xor
and
cmc
mov
ja
shrl
pop
dec
jp
mov
lock
sbb
push
icebp
pop
xlat
leave
push
mov
sbb
and
or
ja
mov
mov
test
cmp
imul
jns
mov
sbbb
jecxz
xor
xor
adc
xchg
add
mov
pop
or
mov
mov
cmpsl
adc
inc
lret
xor
std
lods
xlat
mul
scas
cmp
mov
pop
mov
dec
adc
dec
lret
rorl
xchg
and
je
sub
repnz
mov
pusha
sub
andb
add
sbb
adc
mov
xchg
jo
cmpsb
sbb
adc
je
int
sub
mov
xchg
jg
push
icebp
xor
sub
fldpi
cltd
lcall
imul
dec
push
jae
mov
leave
dec
ret
insb
inc
js
xchg
negb
popf
mov
pop
cmp
das
test
data16
rclb
xor
scas
fwait
idivb
pop
sbb
add
js
jns
mov
push
je
aam
add
adc
mov
mov
push
sbb
aas
stc
pusha
stos
push
cltd
pop
les
jne
and
outsl
add
and
nop
rcl
dec
adc
jecxz
pop
jne
dec
aaa
dec
jecxz
or
or
jae
pusha
fwait
push
push
adc
dec
cmpsl
mov
and
lods
fnstsw
push
lea
aaa
stos
loopne
add
xchg
cmp
les
pop
test
and
pop
fdivl
cmp
sub
pop
orb
jae
fs
out
adc
cmp
push
andb
mov
mov
cmp
pop
dec
leave
insl
lret
jmp
push
popf
xor
add
xor
jb
pop
xchg
push
in
aas
dec
hlt
ret
mov
insb
ret
test
rcll
cmp
sub
popf
xchg
pop
jno
or
xor
jg
cwtl
stos
pop
pop
das
adc
sub
rcrb
es
or
mov
jmp
clc
jnp
mov
mov
adc
jo
in
mov
mov
call
xchg
xor
shrb
dec
sti
dec
inc
xor
test
in
or
mov
loope
aad
loope
push
loop
dec
push
cmc
rcl
aam
cmpsb
pop
lahf
mov
sar
in
push
out
add
and
loopne
insb
cmp
sarb
push
negb
arpl
insl
push
mov
std
push
orl
popl
inc
data16
inc
inc
adc
pop
pop
loope
mov
mov
pop
jo
xchg
push
xor
in
dec
adc
scas
mov
es
cs
mov
sbb
cmp
jmp
mov
sbb
dec
icebp
mov
iret
imul
jle
into
xlat
ror
mov
test
pop
and
jecxz
sbb
outsb
mov
jns
sub
fcoms
mov
add
cltd
std
pushf
add
je
data16
add
sbb
mov
int3
ljmp
bound
sbb
inc
jmp
mov
xchg
or
sbb
pop
testb
ficoms
fistpl
mov
popf
sub
inc
jne
ja
pop
inc
lea
sbbl
insl
ss
mov
sbbb
or
jae
inc
dec
bnd
in
sub
fwait
jg
xchg
sub
dec
cmp
notb
xor
ffreep
in
pop
hlt
dec
add
cmp
jbe
and
mov
jb
arpl
sbb
sub
mov
bound
popa
js
xor
rcl
lock
sbb
inc
scas
or
aam
bound
jnp
pop
insb
hlt
adc
mov
dec
inc
loop
mov
xchg
nop
mov
dec
das
stc
clc
stos
jle
das
xchg
pusha
lar
xor
xor
adc
arpl
loop
leave
pop
stos
mov
mov
inc
and
cmp
ror
add
inc
jmp
mov
jp
sub
scas
add
loope
cmp
insb
ja
sbb
add
xchg
xchg
popa
leave
clc
sbb
test
push
fisubl
lea
out
cli
sahf
mov
lea
fnstenv
jb
jmp
pop
and
mov
fdivrp
cmp
cltd
lock
pop
jbe
cmpsb
je
loopne
pop
icebp
sub
xchg
jbe
mov
mulb
sbb
jb
mov
fidivrs
jmp
xor
sbb
test
mov
je
sub
cwtl
push
mov
aaa
cltd
sub
test
addb
mov
jge
xor
xor
cmpsl
mov
mov
imul
inc
mov
mov
push
arpl
inc
xchg
fs
icebp
mov
lods
jo
das
inc
jno
mov
mov
lock
mov
test
sub
out
dec
and
xor
dec
push
inc
out
mov
xchg
xchg
mov
xrelease
lds
pop
dec
shl
out
in
decb
nop
mov
rorl
add
add
adc
add
cs
jae
and
mov
adc
cmc
loopne
gs
mov
push
jmp
scas
mov
icebp
aad
ret
jge
mov
jne
addl
jmp
aas
pop
mov
or
repnz
xchg
in
loop
sarl
mov
mov
test
dec
loop
andb
in
xlat
scas
cltd
add
call
into
pushf
in
xor
and
adc
and
ss
inc
out
xlat
jmp
gs
popf
xor
or
cmpb
adc
scas
out
pop
and
add
dec
inc
fsubrl
adcl
pop
jmp
adcl
inc
sub
repnz
fdivl
push
add
js
jle
sub
sbb
push
movsb
mov
psubw
lods
sub
and
aaa
stos
aam
je
xor
int
or
int
jl
es
fimuls
inc
js
movsl
outsb
fadd
pop
outsb
lret
cmpsb
push
enter
mov
shlb
scas
or
inc
lret
sub
mov
push
loop
xlat
outsb
lea
cmc
pop
flds
sbb
xchg
mov
int
dec
out
xor
aas
push
adc
sbb
lahf
cmp
cmp
repz
lea
scas
lea
repnz
scas
xchg
cmpsl
mov
mov
inc
add
jge
pop
outsl
daa
fldln2
imul
xor
sbb
in
divb
inc
jecxz
fwait
xor
in
cld
cmp
pushf
inc
xor
popa
and
add
mov
fbstp
push
shl
shrb
cmpsl
mov
and
jbe
insb
mov
fnstenv
and
mov
movsl
or
aad
outsb
nop
pop
out
jle
cmp
mov
bound
push
jo
lea
lret
and
sbb
push
jo
dec
rcrb
lret
jae
pop
adc
mov
mov
pop
out
int
jae
dec
mov
jl
divb
cmpsb
ror
fwait
or
xchg
push
mov
cmp
out
hlt
pop
mov
xchg
add
es
addr16
xor
adc
mov
sub
aaa
rorb
add
adc
fnstenv
mov
adc
testl
je
test
js
xor
xchg
adc
fcmovbe
jb
or
pusha
inc
mov
aam
dec
sarl
mov
add
push
aad
int
inc
fldt
bound
inc
stos
inc
jae
insb
jle
push
push
sub
mov
xor
mov
push
sub
lods
loope
test
test
sub
add
dec
adc
jg
imul
xor
in
and
pop
push
push
into
xor
and
out
push
jo
stos
inc
aaa
mov
enter
jmp
insl
ror
xchg
sub
repz
testl
xchg
or
bnd
out
sub
xchg
xor
movsb
in
add
cld
cmp
jge
dec
push
or
pop
test
das
outsb
mov
aam
or
dec
ds
xlat
mov
insb
adc
pop
testl
pop
test
je
push
test
aas
dec
push
into
mov
sbb
daa
insl
in
fnstcw
pop
or
adc
dec
int
inc
ficoms
add
mov
stc
pop
xchg
mov
or
loopne
addr16
xchg
into
cmp
lods
push
loopne
arpl
pop
mov
jb
mov
stc
push
mov
testl
rcr
aas
pop
dec
jge
data16
mov
movsb
cmp
ja
das
pop
fcoml
je
jbe
inc
popa
xorl
add
adc
sbb
decl
lea
inc
adc
orb
nop
test
cmp
lcall
mov
pop
ljmp
pop
popa
adc
jp
pop
in
je
sub
mov
mov
loopne
ret
mov
std
mov
fmuls
xchg
xor
xor
adc
push
adc
icebp
adc
pop
mov
pop
subl
pop
aam
sti
imul
xor
mov
rcrb
leave
mov
das
leave
fistl
adc
repz
fidivs
cmpsb
movsl
cmp
mov
adcb
xchg
inc
mov
outsb
add
xchg
shl
sbb
leave
insb
lret
jne
cmc
ds
in
adc
push
jnp
mov
js
pop
fst
icebp
add
and
aad
pop
sbb
mov
mov
dec
mov
mov
mov
pusha
jns
xchg
ss
fwait
mov
in
pop
loop
sbb
mov
xchg
jge
mov
add
call
repz
dec
sbb
lret
adc
aam
sbb
dec
inc
or
jmp
push
dec
dec
ficoms
sub
repz
mov
cmp
rcl
stc
xchg
out
ret
or
cmp
cs
mov
mov
rolb
frstor
sub
shrb
cmp
and
in
inc
pop
xor
in
ret
pop
jge
sbb
loopne
adc
shr
and
psubb
xchg
xchg
ja
pushf
or
and
lahf
xor
xchg
sbb
cli
out
mov
andb
js
push
dec
jae
clc
into
push
scas
cld
fisttpll
dec
mov
in
incb
add
xchg
push
pop
dec
fisttpll
daa
mov
outsl
or
pop
sub
fidivl
pop
mov
test
ja
pop
fbstp
pop
sub
sahf
hlt
jno
mov
mov
xchg
adc
jle
pop
das
and
int3
jecxz
cmp
mov
mov
pushf
insb
das
inc
jbe
and
ja
or
repnz
insb
stos
cmp
jp
jne
xor
sarl
push
inc
or
mov
insb
inc
call
or
fidivrs
ljmp
fidivrl
in
or
mov
xchg
push
popf
sub
sahf
dec
xor
inc
jge
sbb
sbb
xor
xchg
mov
mov
inc
adcl
js
shl
cmpsb
dec
repz
dec
repnz
loope
ffree
int3
loop
mov
jo
or
cmp
icebp
imul
test
cmp
cmpsb
or
ja
dec
push
sahf
loop
js
cld
push
cwtl
loopne
jo
jmp
lcall
add
ret
push
dec
mov
decb
sbb
lods
imul
je
mov
mov
and
or
in
in
add
xchg
fisubrs
cmp
cmp
fistpll
daa
inc
lods
shl
mov
test
sarl
insb
jo
iret
shrb
out
lret
sbb
ja
mov
jae
mov
jmp
test
jns
adc
cmp
popa
fmull
or
sub
stos
mov
cmp
testb
inc
xchg
jle
inc
mov
and
or
in
stos
in
int3
jno,pn
sbb
scas
lods
push
addb
test
sarb
sti
aas
mov
ret
cmp
sub
push
mov
cmp
rclb
out
push
fildl
or
lds
push
aas
jmp
cmp
in
test
inc
mov
xchg
jmp
mov
pop
gs
sub
push
addl
and
mov
xor
dec
adc
addr16
notl
test
scas
lds
jne
mov
fdivrs
mov
imul
je
insb
sub
es
lock
das
movsl
roll
in
out
xchg
arpl
xchg
into
sub
add
mov
addr16
js
jmp
gs
and
adc
inc
xchg
adc
pop
sbb
mov
adc
xchg
xor
lret
loopne
lahf
lock
xor
xchg
fldl2t
orb
push
into
mov
cmpb
loop
mov
ret
pop
push
mov
jge
mov
arpl
jp
mov
fmuls
xchg
xchg
push
popa
add
fistpl
push
jae
rolb
xor
jmp
ss
adc
pop
test
sub
mov
ds
pop
and
cmpsl
fldl
push
ficoms
test
jecxz
int3
cwtl
pushf
jo
push
lret
pop
inc
jmp
xchg
pop
ret
cmp
popa
jbe
adc
and
jle
fwait
daa
movb
push
popf
push
loopne
arpl
xchg
lods
je
adc
lock
push
sbb
pop
ds
test
nop
lods
movd
push
imull
jo
pusha
adc
mov
mov
aaa
sbb
mov
add
fisubl
scas
dec
in
lret
jb
jns
in
stos
inc
fcmovb
mov
inc
dec
and
sbb
clc
in
push
sub
inc
mov
push
add
push
test
lock
push
subb
mov
pop
gs
inc
lds
inc
push
mov
pop
stos
in
repz
jae
aad
lcall
cmp
mov
popa
mov
add
mov
popa
sbb
enter
mov
xor
aam
sbb
mov
iret
cmpsb
and
jle
xlat
mov
int
mov
gs
fnstenv
je
jecxz
cltd
xchg
fwait
arpl
adc
mov
mov
test
sbb
ja
or
dec
dec
icebp
dec
fsub
add
lods
stc
cmp
lods
mov
cmp
insb
add
pop
adc
out
push
ljmp
lock
adc
loope
imul
jb
pushf
call
push
push
pop
out
loopne
movsb
cmp
jno
mov
fisttpll
sahf
mov
mull
int3
mov
mov
sbb
xchg
xor
test
insl
xchg
jnp
lods
mov
pop
mov
jnp
cltd
outsb
jle
cltd
jns
inc
xchg
mov
cwtl
test
xchg
push
mov
mov
je
inc
fdivr
loope
call
icebp
fidivl
mov
clc
or
in
imul
sbb
fiadds
sahf
je
rorb
or
int
daa
xchg
les
fnstsw
xorps
das
fisubl
into
sbb
sti
mov
pushf
jb
stc
mov
add
leave
xor
out
sbbl
in
adc
dec
pop
hlt
jns
cmpsl
adc
mov
mov
vpsllq
insb
repz
pop
loopne
jbe
mov
std
xchg
popa
push
mov
cmp
addb
mov
mov
sbb
mov
enter
mov
sahf
subl
shrl
cmp
mov
loope
sbb
in
arpl
add
popf
insb
scas
cltd
adcb
iret
jmp
popa
mov
cmpsb
orl
sub
pop
lods
testl
sbbl
mov
lods
outsl
daa
fidivs
pusha
sub
cmp
sbb
mov
out
stos
cld
add
stos
nop
popf
or
in
lret
jae
insb
add
fmull
jp
outsb
stos
add
mov
sbb
ret
jmp
or
ljmp
and
sbb
je
jne
xor
add
sub
mov
jecxz
nop
or
mov
cmc
mov
shlb
stos
jge
shll
out
mov
pusha
or
test
ljmp
cmp
pop
inc
or
ljmp
shlb
aam
fpatan
mov
popa
mov
cvtps2pd
adc
fstpl
fs
jmp
mov
push
lock
adc
jl
scas
jmp
sub
popa
subl
dec
mov
fstpl
fisubl
stos
sarl
mov
pop
leave
int
jae
leave
int
and
or
repz
dec
sbb
pusha
call
cmpsb
pushl
adc
stos
jbe
ljmp
sbb
mov
xor
incb
movsb
sub
fstpt
pop
jle
stos
mov
imul
mov
jb
sbb
or
push
xor
sub
mov
push
leave
and
lahf
sarl
stos
data16
xor
movb
pop
inc
xor
sbbl
mov
pop
test
aas
leave
sbb
popf
nop
ss
stos
arpl
fwait
cmpsl
fcmovb
jne
xor
sbb
or
jmp
movsb
mov
and
mov
sub
test
mov
xchg
add
inc
add
cld
or
lea
push
push
aad
xchg
test
push
xchg
aad
dec
mov
mov
dec
hlt
lret
add
out
xchg
sbb
xchg
jp
mov
repnz
shlb
jne
inc
cmp
jmp
fistpl
js
pushf
movsl
or
jno
pop
out
js
insb
out
sbb
icebp
movsl
ss
fbstp
cmpsl
sbbl
lock
in
push
push
andl
repnz
arpl
sub
icebp
push
jne
fcmovb
pop
mov
jbe
inc
outsl
fs
lods
ficompl
or
shll
movsl
add
and
jle
ret
adc
int3
popf
imul
hlt
mov
inc
jp
jmp
sub
mov
outsb
fwait
jle
js
mov
or
mov
adc
clc
and
jnp
pop
sub
xlat
shrb
rol
add
and
iret
or
cmp
decb
sbb
jge
jecxz
aaa
adc
ds
push
sub
loope
jg
cmp
ljmp
push
mov
movb
cmp
adc
shlb
cmp
shll
or
inc
divl
lock
shl
ret
clc
and
or
sarl
push
lret
and
sub
je
es
mov
mov
xchg
rolb
shrb
jbe
xlat
mov
ret
mov
cmp
xor
mov
lret
lret
cmp
rorl
sub
mov
adc
jbe
jnp
mov
les
lock
aad
imul
dec
lods
pop
in
dec
pop
jp
shll
addl
pop
test
sub
xor
test
dec
mov
cmp
pop
sahf
sub
and
stos
std
stc
cld
test
popa
push
mov
pushf
adc
hlt
push
mov
leave
in
jg
lea
aam
std
aam
test
daa
ret
arpl
mov
cmp
insl
data16
jecxz
xchg
movsl
dec
adc
out
jle
push
out
mov
mov
hlt
inc
xchg
sahf
jmp
in
lods
xchg
es
mov
and
fsubr
sbb
xlat
mull
pop
imul
dec
dec
cltd
adc
arpl
sarl
testl
inc
xlat
xor
push
pop
cmp
shr
rolb
pop
ja
pcmpgtd
rcrb
lea
jmp
add
xchg
push
fiaddl
xor
jle
inc
add
leave
int3
mov
jns
pop
mov
adc
jp
xor
mov
in
jb
nop
push
fidivrl
fst
out
and
sbb
ret
jns
ret
xor
mov
jne
fbld
repnz
xlat
out
xor
mov
lea
in
sub
std
cmp
aam
sub
mov
xor
mov
mov
lret
fisttps
jg
stc
out
aas
lcall
xchg
pop
int
push
push
pushf
into
and
jbe
mov
mov
nop
dec
adc
call
movl
fstps
imul
push
inc
inc
mov
out
pop
ffreep
push
and
or
inc
lock
or
fcomps
ja
cmpsl
mov
jo
push
or
or
pop
scas
add
scas
xlat
icebp
sbb
popa
lret
sub
pop
and
jg
fwait
xor
xlat
inc
popa
xchg
aas
mov
idiv
jnp
xchg
lods
fwait
add
pop
ret
sbb
mov
out
sbb
ds
push
and
fdivrp
bound
add
xchg
jae
add
popa
and
xchg
fs
dec
in
xchg
sahf
inc
cmp
xor
push
fidivrs
fisubs
shrl
shlb
xchg
sbb
movsb
test
inc
jle
push
inc
mov
jbe
mov
test
adc
add
outsb
xorl
fldenv
int3
sub
cli
call
or
gs
cld
iret
mov
shll
dec
jno
cld
inc
push
out
mov
pop
or
ljmp
push
pop
mov
fcomp
xchg
mov
cld
inc
push
add
into
jl
sub
or
inc
data16
sahf
out
add
jle
inc
mov
add
scas
lret
and
adc
jg
push
out
mov
stos
sbb
outsl
mov
mov
cmpsl
jae
imul
jne
xor
inc
sbb
pop
fwait
js
dec
popf
clc
jb
or
add
out
mov
hlt
dec
dec
mov
stc
cmp
mov
and
das
cmpsb
roll
fisttpll
push
sbb
enter
cld
icebp
and
mov
mov
andb
loop
outsl
fbld
icebp
push
cmp
mov
xor
xchg
sub
insl
fiadds
mov
sbb
iret
push
push
les
jne
sub
lds
lcall
ret
fincstp
xor
loope
jae
inc
nop
loopne
sub
jne
daa
call
xchg
scas
mov
sbb
inc
repnz
das
mov
mov
mov
sbb
fcmovnb
jp
xor
xchg
jmp
pop
jle
mov
sbb
mov
rclb
arpl
fimuls
pop
dec
decb
out
cmc
test
fimull
or
rcr
adc
lahf
js
mov
xor
lahf
jmp
inc
loopne
sub
fndisi(8087
xchg
inc
in
scas
inc
xlat
repz
lock
xchg
pusha
pop
popf
pop
xchg
ret
cmp
aad
dec
lea
jge
pop
and
pop
fsubr
pop
fdivs
cli
or
das
dec
mov
xor
inc
aas
add
std
pop
fdivr
mov
add
pop
insl
lret
stos
xchg
push
and
xor
shlb
jo
insb
push
scas
jb
loop
int3
xchg
xor
cmp
mov
dec
xchg
xlat
xchg
movsl
sub
movsb
inc
loop
push
fwait
arpl
aas
xor
dec
ljmp
fisubrl
scas
shrl
dec
mov
addr16
push
cmp
push
mov
cmpl
leave
int
sti
pop
sti
jp
scas
jle
and
jg
mov
cmp
fmuls
lea
or
stc
loope
sub
jl
imul
add
sbb
xchg
dec
shll
or
pop
test
push
push
mov
mov
adcl
dec
daa
insl
fstpl
push
lcall
stc
sub
cmp
xchg
ljmp
mov
pop
decb
mov
xchg
sub
push
jno
aas
sti
mov
fdivr
aam
push
ljmp
shrb
fdivrs
xor
adc
outsl
cwtl
sub
mov
call
jp
out
xchg
mov
outsl
in
stc
sbb
inc
mov
sbb
sahf
outsl
ss
sbb
mov
shl
dec
mov
repnz
es
aam
ds
cmpsb
xchg
mov
pop
dec
movsl
dec
jg
push
lods
out
add
aad
push
lock
out
cld
test
std
out
je
xor
sti
pop
adc
iret
xor
lcall
mov
rol
out
pop
mov
sbb
rolb
pop
mov
fadd
pop
push
pushf
mov
cmpsl
lds
mov
lahf
push
inc
rorb
xor
ret
pop
and
das
push
in
pusha
repz
rolb
and
mov
dec
add
out
sub
outsl
in
into
insl
ja
push
repz
mov
push
push
mov
fwait
ljmp
and
sbb
cmp
ja
mov
sub
dec
xchg
xchg
fwait
stos
inc
das
aad
pusha
fs
mov
mov
jg
pusha
sub
xchg
xchg
sti
mov
mov
es
lahf
ss
dec
js
inc
stos
insb
aam
dec
cltd
cmpsl
xor
push
mov
cs
push
mov
les
mov
sub
sbb
ficoml
cwtl
push
mov
lahf
add
jnp
shrl
repz
pop
dec
or
int3
mov
popf
lods
in
cld
jle
xor
cmp
rcr
pop
icebp
in
mov
pusha
call
or
sbb
and
dec
arpl
dec
mov
cs
fimuls
lods
jle
idivl
or
dec
into
add
mov
jns
push
and
cmp
out
jbe
jecxz
test
test
bound
sahf
push
insb
aam
adc
mov
cmpsl
mov
jp
mov
repz
lahf
push
rcll
cmpsl
out
loope
nop
add
xchg
fadds
mov
jmp
cmp
inc
f2xm1
cmp
mov
pop
in
adc
shll
in
mov
push
insb
cmp
hlt
xchg
dec
dec
pushf
cli
loope
sahf
inc
mov
mov
or
add
cmc
mov
movsb
data16
dec
inc
adcl
fwait
jno
mov
jmp
hlt
lahf
sbb
push
ret
mov
lds
sbb
adc
lret
jmp
lcall
add
sub
lret
adc
and
sbbb
popf
or
arpl
ficoms
imul
push
adc
shrb
mov
mov
xor
loop
ret
cmp
jge
dec
mov
or
dec
pop
xchg
push
jl
aas
in
pop
push
adc
test
shrl
cmp
xlat
shrl
mov
pop
popf
pop
sahf
int
test
mov
loop
and
lds
iret
lds
push
push
gs
adc
mov
xor
sti
pop
clc
push
mov
push
movsb
imul
jmp
xbegin
js
mov
loop
lods
bsr
jne
jl
ljmp
fucomi
sub
ficoms
loop
push
shrb
int
lcall
inc
jmp
imul
pusha
jl
mov
jmp
pop
lret
out
cld
mov
divl
inc
pop
test
mov
xor
sub
jo
es
mov
std
aam
adc
mov
xor
sahf
mov
mov
inc
arpl
sbb
push
mov
jmp
std
scas
repnz
out
sbb
mov
lret
cmp
cs
push
into
gs
sub
test
stos
inc
ja
iret
pop
pop
xor
fisubrs
jo
sbb
mov
mov
xchg
lahf
xchg
arpl
sub
jl
icebp
xor
and
mov
push
shl
inc
lahf
ja
xor
rol
repz
push
jmp
pusha
insl
jo
xchg
aad
insb
mov
mov
jae
in
fst
mov
orb
xchg
inc
mov
pop
loopne
jl
in
in
fwait
out
dec
sbb
cmp
jb
mov
cmp
mov
jns
cld
mov
mov
sub
jp
sbb
int3
pop
adc
adc
jae
lock
notl
fisubrs
out
add
sub
or
pop
pop
xchg
push
sar
aaa
jb
jno
xlat
cmpsl
lcall
mov
mov
daa
mov
mov
inc
gs
and
inc
cmpl
out
hlt
mov
push
pusha
mov
xchg
dec
adc
inc
inc
pop
enter
fwait
repz
push
xchg
adc
inc
sahf
icebp
inc
xchg
fidivl
dec
shll
lock
mov
adc
mov
loope
gs
mov
mov
addb
cmpb
inc
imul
popf
jne
xchg
mov
pop
hlt
fnsave
xchg
fnsave
aad
flds
ret
xchg
lcall
and
fsubr
aas
sub
jns
sub
loope
mov
mov
mov
call
in
sti
dec
lahf
jb
shrl
fists
leave
es
jg
fucom
add
popa
in
out
cwtl
ss
adc
fwait
insb
and
lahf
mull
pop
enter
mov
ja
mov
ss
fiadds
pop
mov
scas
in
push
jnp
sbb
mov
xchg
lahf
ficomps
aaa
pop
mov
mov
lcall
and
aaa
adc
in
shrl
add
add
dec
bswap
insl
jge
push
push
pop
leave
push
outsb
sbb
les
fldl2t
and
scas
daa
int
cs
sub
hlt
or
jno
push
cmp
push
mov
test
insb
push
int3
xor
fisttpl
arpl
rcll
cmpsl
imul
jle
ret
sbb
fcomp
xor
dec
psubb
iret
test
clc
or
cmpsb
aas
je
cmp
inc
push
jns
mov
mov
xor
cs
xchg
lock
add
add
cmpsb
jecxz
pop
cs
push
icebp
cmp
add
lcall
and
imul
dec
mov
add
pop
fld
dec
sub
pop
pop
jbe
mov
jp
jg
inc
inc
sub
push
push
sbb
cmpsl
insb
inc
jge
adc
mov
mov
fwait
xlat
or
mov
pop
cmpsl
mov
sahf
andb
aaa
push
paddsb
jno
adc
mov
popf
iret
sahf
sub
or
cmp
popa
insl
inc
adc
sahf
xor
popa
sahf
dec
mov
fcompl
sbb
dec
cmp
pop
sahf
sub
out
movsb
ret
jle
leave
push
xchg
xor
mov
dec
sbb
dec
gs
mulb
mov
or
cmc
xor
inc
rcll
xor
mov
data16
sti
push
mov
in
sti
mov
pop
test
cmp
nop
push
fisubrl
and
sbb
mov
adc
int
and
sub
test
adc
fstpl
xor
jmp
pop
xchg
sub
gs
mov
aad
lods
pop
mov
es
pop
xchg
cmp
loope
notl
mov
mov
dec
imul
xor
or
rolb
mov
fisubs
bt
push
dec
xchg
cmc
or
inc
mov
push
mov
mov
dec
loop
dec
loop
call
cmc
sbb
sub
aaa
push
repz
repnz
jno
mov
jecxz
sbb
sub
loopne
inc
cmpsb
push
xchg
stc
stc
mov
sti
pop
aad
sub
dec
loope
xor
out
arpl
scas
mov
xchg
and
fdivl
jae
repnz
pusha
mov
dec
sbb
clc
stos
pop
sbb
xchg
and
dec
clc
data16
sub
push
and
addr16
int3
mov
ret
movsl
mov
adc
pushf
jp
test
mov
das
inc
ret
out
fmull
adc
jle
xor
fisttpll
jns
fstps
imulb
pusha
jp
push
and
rolb
mov
jp
adc
or
stc
idivl
lds
add
xchg
fdiv
xlat
lods
sub
in
dec
int
pop
push
idivb
mov
lds
add
rdpmc
into
jecxz
ja
shl
rcl
outsb
outsb
mov
and
inc
adc
mov
xor
mov
pop
dec
add
pop
lahf
jmp
mov
push
aas
sub
mov
jp
jmp
adc
pop
xchg
ficoml
ss
pushw
cltd
sbb
mov
ret
adc
cs
sti
outsl
sbb
clc
nop
je
mov
push
xchg
ret
jae
push
rorl
movsb
xchg
sub
lds
cmpl
lods
movsb
cwtl
sbbl
and
xchg
mov
xor
stos
pop
adc
out
loop
xchg
adc
into
das
inc
mov
cmpsl
xchg
jecxz
pop
fistpll
daa
mov
lock
outsb
fidivrl
pop
pavgb
addb
lock
adc
push
add
fidivs
rolb
and
mov
or
xchg
in
and
pop
mov
mov
mov
jg
stos
lea
and
cli
adc
sub
pushf
mov
les
les
push
popf
sbb
test
arpl
push
jmp
inc
dec
or
or
addr16
lea
cld
out
ret
rcrb
dec
mov
push
clc
xchg
pusha
out
push
adc
jl,pn
sbb
jg
jbe
mov
repz
lock
data16
and
outsb
in
sub
and
popa
inc
ret
shl
mov
xrelease
inc
addl
xchg
andb
cltd
arpl
mov
xor
push
jne
pushf
lret
push
pop
cmp
and
push
sbb
mov
push
scas
je
xor
jbe
in
cwtl
ret
sar
add
cmp
in
inc
sbb
pop
cmpsl
xor
gs
adc
lret
ret
xor
lahf
outsl
xlat
push
hlt
or
clc
xchg
xchg
pop
test
sub
movsb
mov
movsb
fs
cmpsb
cld
fdivs
insl
shll
in
movsl
aaa
mov
mov
lods
xor
jns
lods
orb
mov
fbstp
mov
cld
adc
push
cmp
xorb
cmpsb
xchg
fcoml
push
cmp
movl
xor
test
push
jo
pop
add
push
sbb
jns
cmc
lret
fwait
xor
cmp
xchg
cmpsb
sub
push
ret
or
mov
test
mov
outsl
mov
or
leave
ds
lods
cmp
add
push
ss
sbb
inc
xlat
jbe
nop
xchg
sub
or
pushf
sub
es
arpl
or
or
test
and
nop
push
rolb
lock
pop
adc
jge
mov
mov
push
test
mov
aas
dec
daa
icebp
sahf
xor
mov
add
mull
fwait
xchg
sbb
je
loope
mov
sbb
das
push
jle
or
insb
syscall
add
and
stos
loope
push
notb
push
jno
and
jecxz
aam
lods
lds
clc
and
movsl
sub
fucomi
lret
nop
insb
jb
pusha
incl
incl
or
int
nop
sub
loop
jl
idiv
inc
jb
out
and
mov
loopne
push
add
dec
sub
sub
bound
clc
mov
testl
mov
dec
in
jl
loop
inc
imul
in
lds
adc
sahf
lret
inc
shr
and
lods
jb
dec
in
cltd
into
fmul
sub
aad
adc
ret
jp
jno
stos
adc
xorb
lock
arpl
imul
testl
push
add
ja
cwtl
insl
sahf
test
xor
decl
push
mov
mov
xchg
or
sysexit
repz
mov
out
inc
std
pop
inc
rcrl
test
push
es
fbstp
cmpsl
jp
leave
outsl
test
add
mov
es
stos
cld
inc
fldt
aaa
sti
add
cmc
adc
or
inc
insb
loopne
aad
iret
pop
xchg
pop
out
cmpsl
pusha
dec
adc
aaa
stos
test
jae
mov
test
dec
jecxz
rolb
bound
mov
test
mov
insb
pushf
dec
sbb
jp
lcall
lods
mov
outsb
lock
push
int
test
push
push
inc
movb
mov
in
xlat
sbb
add
push
movsl
stc
sbb
mov
jne
es
xchg
call
rcrb
lahf
jo
je
dec
dec
add
jp
sub
xchg
outsl
ret
xlat
movsb
call
xor
pushf
inc
xchg
pop
mov
push
out
adc
lods
mov
das
xchg
and
mov
daa
inc
icebp
jo
sub
andl
mov
xchg
mov
dec
aad
daa
or
in
adc
adc
pop
mov
jns
xorb
iret
daa
mov
sub
int3
dec
jp
cmp
push
sub
jno
enter
lock
lods
push
cli
rolb
out
loopne
sti
lock
mov
jl
adc
aas
pusha
test
movsl
mov
fisubrl
les
dec
data16
or
push
cmp
cmp
dec
ret
ljmp
rol
xor
icebp
and
aad
cmpss
cltd
insb
jmp
mov
pop
push
jo
push
sbb
sarl
in
pushf
adc
ror
mov
imul
or
or
stos
mov
adc
jg
dec
mov
js
mov
and
xchg
or
mov
idivl
out
pop
lahf
or
xchg
add
fldenv
jmp
pushf
xor
in
insl
jg
cwtl
inc
pop
les
and
testl
fiaddl
mov
and
data16
repz
push
add
scas
mull
mov
dec
inc
dec
shlb
pusha
dec
pop
in
js
and
cwtl
ret
jnp
adc
push
nop
sbb
sub
sub
bound
jo
adc
aas
enter
mov
mov
sbb
repnz
das
adc
mov
xlat
repz
pop
xor
cmp
std
arpl
xor
testl
gs
fidivl
bound
xchg
cmpl
out
movsl
sbb
in
lret
mov
sub
jge
ds
lock
sbb
inc
pop
ljmp
pusha
inc
out
jb
adc
fcompl
mov
or
mov
sub
int3
call
dec
loope
xor
sub
pop
and
out
out
xor
popl
mov
sbb
movsl
and
mov
test
push
imul
dec
sbb
fsubr
stos
mov
or
out
mov
hlt
int3
lods
fnstsw
enter
insl
cmpsb
aad
sub
sbb
and
push
cwtl
and
imul
push
int
xchg
cltd
cmp
mov
sub
scas
popf
lcall
das
aad
mov
add
mov
out
notl
pop
data16
mov
add
pop
or
aam
mov
mov
mov
daa
andl
jmp
dec
xchg
daa
cmp
setl
movsl
push
adc
mov
movsl
add
je
inc
cmp
daa
mov
mov
cmp
aas
std
cltd
lcall
cmp
mov
pop
clc
leave
pusha
sub
lcall
sub
add
ljmp
jno
and
sete
push
mov
cmpsb
cmp
fs
inc
xlat
fimull
mov
rorl
addr16
add
out
jns
pop
jmp
out
push
clc
ds
imul
std
xor
inc
test
pop
pop
enter
arpl
cli
rcrl
adc
pop
xor
cs
xchg
inc
pop
jbe
lock
test
xchg
data16
xchg
das
sahf
add
jmp
int
push
mov
shlb
rcr
inc
push
inc
in
inc
cmp
int3
dec
pop
stc
adc
faddl
xchg
mov
cmpsb
pop
inc
fs
mov
dec
sub
outsb
cmp
mov
mov
mull
add
insb
adc
xchg
rep
mov
mov
int
lods
xrelease
hlt
xor
andb
fldenv
add
xor
dec
aaa
sub
out
arpl
outsl
pop
xchg
outsl
xchg
cmc
out
inc
mov
mov
jno
push
dec
xchg
mov
xchg
dec
fistpl
sbb
mov
fiaddl
push
jb
sub
push
ret
sti
xchg
imul
mov
sub
pop
es
ficomps
push
and
addl
shrl
sbb
dec
mov
cmp
fbstp
fldenv
add
inc
inc
push
inc
ljmp
repnz
outsb
movl
shrl
xor
xchg
mov
stos
xor
stos
add
cmc
cmpsl
add
jne
add
adcl
adc
mov
push
push
dec
fidivl
js
dec
test
leave
cmp
popa
mov
mov
ljmp
mov
xchg
adc
mov
sbb
lea
stos
cmp
mov
xlat
insl
jge
xchg
addr16
loopne
cmpsl
cmpl
mov
mov
les
shlb
andl
and
pop
xchg
inc
mov
test
and
movsl
and
fldt
and
cmp
pop
inc
adc
mov
jne
jae
sbbb
push
or
cmp
lods
push
mov
mov
call
or
adc
xchg
mov
xchg
dec
scas
fucomip
adc
iret
xor
and
mov
ficoml
cmc
or
adc
xchg
or
cmp
pop
mov
fadds
jmp
imul
push
xor
incb
gs
pushf
sbb
mov
mov
or
mov
rorb
cmp
jecxz
ds
sub
int
and
scas
dec
lods
lret
mov
fiaddl
push
push
insl
inc
xor
adc
inc
jecxz
dec
xchg
lock
jge
mov
mov
cmp
push
xchg
cmpsl
xorl
ljmp
mov
cs
or
push
mov
mov
jb
push
sbb
push
js
dec
pop
mov
inc
out
jecxz
mulb
scas
xchg
push
dec
sbb
dec
jns
cmp
out
sub
push
rclb
sub
inc
mov
or
adc
out
add
shlb
loopne
cmp
movsl
inc
les
dec
jnp
data16
adc
mov
ret
add
ja
pop
push
or
icebp
sbb
mov
mov
cvtps2pd
in
or
insl
or
insb
push
int3
dec
iret
js
dec
imul
inc
into
cli
or
add
rolb
fnstenv
fidivrl
ret
adc
inc
jno
scas
xor
sub
adc
pop
push
into
mov
aam
aad
aad
imul
inc
movsl
lahf
pop
or
jae
xor
xchg
pop
sahf
lds
or
call
es
push
adc
repnz
jp
add
scas
lahf
in
in
scas
shrl
hlt
mov
mov
data16
fnsave
shll
cmp
or
subb
loop
sub
leave
lods
sbb
push
lcall
jle
in
push
sbb
out
subl
je
pushf
out
subl
xchg
add
in
sub
push
cmp
ja
lods
ljmp
cmp
inc
cmp
insb
mov
or
mov
fldcw
pop
mov
in
pop
inc
loope
xchg
cmpsb
adc
and
pop
popf
insl
imul
cmpsl
fisttps
inc
mov
jle
mov
sub
daa
xor
pop
inc
dec
cmc
outsb
add
aas
stos
cmp
push
data16
inc
xor
orb
loopne
push
cmp
and
cltd
ljmp
adcb
cmp
add
sub
iret
jbe
push
lods
jle
sbb
or
xchg
adcl
hlt
xor
jp
or
fdivrs
push
ja
fldl
stc
cmpb
fsubrl
inc
scas
adc
stos
stos
and
sahf
clc
idiv
xlat
pop
jno
sub
fsubp
mov
lcall
fidivrs
push
test
push
inc
pop
clc
das
sub
sahf
jecxz
lea
mov
sub
in
das
mov
push
mov
cmpsb
aas
fs
jo
push
mov
mov
xchg
loop
pop
xor
dec
lahf
out
jle
and
add
add
out
shll
dec
loop
and
pop
push
or
jg
inc
arpl
pop
lcall
mov
dec
xchg
push
push
xchg
mov
inc
popa
loope
dec
insb
sbb
mov
push
dec
push
lods
testl
pop
sahf
cli
push
xor
adc
and
xor
fnsave
addl
mov
mov
push
fisubrs
pushf
aas
imul
popa
jp
nop
dec
mov
and
test
inc
inc
xchg
sbb
pop
dec
mov
pop
aas
pop
mov
xor
pop
out
out
std
cld
rcl
xrelease
mov
dec
and
nop
daa
sbb
scas
je
sub
bound
cld
mov
xor
jl
cmp
mov
jne
pop
xor
inc
dec
lock
push
inc
dec
ja
loop
iret
data16
jae
mov
vpand
cmp
xchg
cmc
mov
nop
out
cmp
or
xor
imul
repz
and
insb
mov
dec
test
sbb
push
sbb
mov
push
stos
mov
inc
mov
clc
out
adc
xchg
adc
cmc
mov
xor
cwtl
jecxz
lea
mov
push
out
jmp
or
mov
or
pop
mov
clc
jmp
sbb
sbb
mov
cmc
shlb
shlb
fistps
int
mulb
push
mov
sub
shrl
enter
stos
call
into
insl
cmp
add
lock
adc
imul
maxps
mov
dec
sbbb
fisubl
roll
xor
std
pop
pop
call
adc
mov
icebp
fstps
inc
out
jne
in
jge
fdivp
repz
out
enter
inc
fldl
xchg
add
popa
fdivl
inc
pop
test
and
jp
or
push
insl
sub
inc
xor
add
xor
sbb
ds
out
sub
icebp
cmpsb
adc
sbb
inc
push
xchg
mov
sbb
mov
in
or
inc
hlt
pop
cmp
dec
movsl
arpl
int
dec
in
subb
cmc
and
shr
xchg
mov
rol
mov
sbb
mov
imul
mov
jecxz
push
xor
adc
rorb
and
mov
fs
cmpsb
outsb
mov
fbstp
das
movsb
add
shlb
cmpsl
jp
push
pushf
or
pop
mov
lea
xor
loope
sub
repz
and
ss
or
mov
test
in
lret
pop
in
mov
popa
lret
fwait
and
jmp
stos
dec
sahf
jp,pt
aas
data16
in
push
add
cmp
xchg
sbb
or
cmc
jmp
test
dec
cmp
sbb
mov
add
in
push
in
xchg
in
adc
jo
mov
or
mov
cli
or
test
cs
jne
pop
addr16
push
cli
inc
or
mov
enter
out
test
cmpsl
fwait
daa
into
xor
mov
push
jl,pt
xchg
test
js
jno
push
shll
mov
xor
mov
add
adc
js
iret
enter
rclb
pop
cmpsb
xchg
sbb
dec
ror
pusha
pusha
into
jbe
js
out
add
pop
out
mov
dec
shlb
iret
mov
mov
push
mov
pop
hlt
adc
cmp
fldt
hlt
rcll
call
cmpsl
dec
cli
push
adc
int
gs
fbstp
rclb
xchg
xchg
int3
outsl
in
lds
push
jmp
mov
out
into
int
outsb
mov
push
aam
inc
div
or
cmp
lahf
jp
push
in
int
push
xor
dec
jl
stc
scas
dec
lds
repnz
movsb
push
jb
mov
sbb
dec
push
jnp
xchg
data16
inc
adc
mov
pop
repz
xchg
out
scas
lds
outsl
subb
popf
xor
dec
pushf
scas
cmp
loop
mov
xor
jne
ds
mov
in
add
add
push
mov
push
xor
popa
sbb
sbb
aam
shl
lds
or
inc
pop
sub
scas
mov
jae
inc
aam
aad
negl
pop
aam
pop
out
mov
lods
arpl
roll
push
jae
repz
xchg
mov
xor
or
mov
fwait
cli
cmp
cli
push
call
or
mov
mov
bound
jo
adc
es
dec
xchg
js
mov
fimull
aad
inc
sti
cmc
mov
iret
adc
sbb
or
int3
lea
fildll
mov
pushf
test
add
hlt
data16
dec
dec
and
out
loop
hlt
cmp
push
or
xor
or
jle
xchg
mov
mov
dec
xchg
xchg
int
dec
mov
push
and
pop
and
lret
jp
jae
std
mov
push
sub
mov
and
mov
mov
add
in
maxps
push
lods
loope
cmpsb
js
add
dec
jo
push
cmp
pop
ret
ja
pop
stos
in
jnp
int3
es
aas
push
cmp
jbe
mov
repnz
xchg
scas
add
add
mov
push
and
push
lret
mov
mov
das
xchg
dec
pop
out
cmc
xchg
icebp
dec
add
xchg
jns
aad
add
lods
out
pop
mov
xor
lret
sahf
lret
lret
jno
rcr
enter
insb
jle
xchg
inc
dec
mov
cmp
xor
inc
lcall
loop
mov
pop
xchg
pop
iret
loope
repz
dec
test
andb
push
push
mov
jecxz
pop
mov
fsub
jp
xchg
mov
adc
lods
ja
das
stos
into
cmp
mov
pushf
pop
in
mov
lret
jmp
xor
lds
mov
iret
stos
popa
cmpsl
add
add
inc
fwait
scas
jl
insl
mov
sti
mov
lods
jmp
or
pop
repz
jge
scas
adc
mov
inc
push
jbe
push
ret
loopne
push
adc
fidivs
inc
inc
cli
out
mov
adc
adc
negl
dec
mov
jno
iret
test
push
pushf
bnd
pop
or
mov
shlb
aaa
mov
fs
nop
dec
cmpsb
inc
fcmovbe
aam
icebp
nop
aaa
pusha
femms
jae
pop
sub
xchg
cmp
int
es
nop
daa
mov
jp
stos
scas
rcl
xchg
inc
incb
popf
lds
and
out
mov
jecxz
outsb
pushf
xor
movsb
ss
sar
adc
mov
jmp
sahf
mov
xchg
mov
sbbb
pop
pushf
das
push
frstor
dec
xlat
lcall
js
xor
lcall
arpl
sub
xchg
mov
into
gs
jmp
jge
sti
icebp
fisubs
cld
arpl
popa
in
mov
pop
add
jp
sub
mov
shrb
jns
stc
dec
and
sub
and
sub
push
les
adc
inc
fisubrs
fwait
xor
mov
dec
dec
hlt
insl
inc
mov
rol
lret
rcll
shrl
pop
shl
lock
jae
jns
xchg
sub
xchg
xchg
jmp
inc
clc
jne
dec
in
and
lods
addb
les
lcall
push
mov
lds
inc
cmp
fcmovnb
jnp
jb
ret
mov
jne
loopne
pop
in
stos
lahf
or
xchg
jg
incl
cwtl
fdiv
jno
inc
xor
sub
inc
push
outsl
sbb
lock
nop
ss
jle
icebp
xchg
jns
push
mov
ds
pop
cli
mov
lods
adc
movsl
xor
push
arpl
rcrl
inc
pushf
sub
iret
xor
sub
fwait
sub
cld
cmp
mov
fbld
xor
insb
xor
scas
or
stos
jle
jcxz
mov
pop
outsb
outsb
push
pop
nop
xor
push
jno
or
ljmp
push
push
add
mov
push
loope
test
mov
rcl
outsl
es
fildll
xchg
jg
pop
outsb
not
push
jl,pn
sub
xchg
roll
ret
cltd
xchg
lods
aas
lods
jns
popa
sub
cmp
cltd
rolb
sub
loopne
jge
dec
in
test
push
cmc
jl
sti
push
push
mov
mov
clc
push
inc
std
inc
inc
pushf
mov
inc
fstl
add
mov
xchg
xor
push
adc
mov
push
mov
sub
mov
repnz
andb
scas
adc
jp
jle
mov
std
lcall
and
push
mov
ret
pushl
adc
and
add
xor
add
adc
cltd
and
mov
rcl
sbb
icebp
inc
inc
add
imull
stos
lret
fmul
icebp
xchg
aam
jo
sub
test
test
imul
outsb
popf
push
sbb
jbe
or
add
mov
pop
loop
pop
movsl
loope,pt
notb
out
cs
fdivl
cmpsb
jo
std
daa
cli
inc
mov
fisubs
rcr
test
inc
or
xor
out
push
adc
out
andb
mov
and
addl
lds
mul
inc
nop
out
cld
xchg
or
sbb
mov
enter
sub
into
je
dec
into
xor
and
inc
shll
mov
clc
pop
int
outsl
lret
pushf
adc
push
xlat
test
cs
inc
sub
daa
mov
repz
movsb
jge
fsubrp
mov
dec
sub
push
out
psubusw
int
or
push
xchg
push
imul
adc
push
lret
mov
cmpsb
call
bound
jne
iret
fstpt
fwait
cli
fisubs
orb
js
or
mov
mov
lcall
mov
and
pop
xor
push
and
cltd
cmpsl
mov
sbb
sbb
inc
dec
inc
cmc
and
sub
push
out
dec
or
addl
ljmp
push
jge
or
je
add
mov
or
mov
inc
adc
outsb
mov
mov
or
or
jmp
dec
nop
add
call
adc
repz
xor
jp
icebp
mov
cmpsl
xor
ds
sbb
xchg
push
add
xor
rol
es
adc
xchg
xchg
and
dec
fcmovnu
stc
or
ret
push
pusha
adc
mov
aas
into
jl
jp
jbe
push
inc
ret
sbb
dec
arpl
or
xor
dec
sub
fcoms
add
pusha
out
test
xlat
or
push
loopne
sub
div
lea
rclb
lahf
sub
sub
mov
mov
fadds
lock
adc
pop
fadd
xchg
mov
mov
add
lret
call
data16
outsl
inc
pusha
cmpsl
xor
and
repz
adcl
inc
cmpsl
jmp
dec
sahf
xchg
jge
cwtl
sub
stos
mov
xchg
jmp
mov
jno
mov
adc
push
rclb
mov
pop
and
mov
cs
repnz
bound
jmp
sub
dec
loop
cwtl
mov
adc
mov
or
jmp
inc
cmp
mov
push
mov
in
fcoms
pop
xchg
pop
cmpsl
arpl
cmp
and
inc
icebp
inc
pop
bnd
fdivs
sub
sbb
outsl
mov
int3
rep
js
in
cmp
inc
pop
xor
cltd
add
sbb
xchg
into
and
int3
xchg
int3
jge
sbb
notl
jmp
sbb
sahf
dec
xor
in
repnz
fidivs
loop
cmp
xor
mov
shlb
int3
lahf
call
or
sub
push
mov
insl
in
add
cmp
jbe
call
std
or
dec
das
dec
pop
fldcw
les
daa
push
xor
cmc
mov
icebp
test
fadd
or
lcall
sbb
push
int
cmp
pop
mov
pop
sub
stos
cld
jo
pop
outsb
aam
and
mov
test
imull
xchg
inc
mov
imul
pop
mov
inc
repnz
ljmp
das
pushl
cmp
cmp
sub
push
das
cmp
push
pop
inc
nop
jae
xchg
jo
stos
adc
jne
sub
fstpt
std
movsb
je
sahf
xchg
pop
hlt
dec
repz
lods
jbe
add
pop
rcl
scas
add
sbb
popf
sbb
stos
dec
mov
mov
test
mov
xchg
cmp
sub
push
pop
mov
xlat
lret
mov
jecxz
in
das
push
inc
sub
mov
imul
pop
hlt
sub
scas
das
mov
adcl
fildl
adc
lret
xchg
sahf
cmp
clc
imul
mov
xor
adc
sub
jecxz
in
nop
adc
dec
pushf
jae
faddl
push
ds
imul
pop
popf
int3
nop
data16
movsl
add
push
inc
scas
rclb
inc
mov
jg
cmp
jnp
xor
pusha
push
sbbl
push
push
in
cmp
je
mov
inc
ret
test
cmp
sub
daa
pop
shrl
jnp
arpl
icebp
test
ljmp
pusha
lods
cmp
jg
nop
mov
movsb
iret
pop
popa
testb
sub
out
pop
dec
push
aam
leave
cmp
test
dec
dec
in
mov
cmc
mov
adc
cltd
jo
out
loop
lret
adc
outsb
inc
push
mov
sub
push
jne
ret
arpl
xor
test
push
pop
mov
fstpt
insl
into
jae
xor
cwtl
adc
sarb
xor
jp
loop
dec
arpl
dec
out
adc
jno
lock
cmp
xor
mov
jle
roll
and
lods
sub
je
push
sbb
clc
xchg
push
outsl
adc
cmp
xor
je
mov
inc
pop
rcll
push
adc
rorl
test
dec
jnp
sub
faddp
out
shll
pop
pop
ja
pop
mov
ret
push
xchg
mov
enter
fldenv
lret
ja
xor
roll
pop
mov
mov
mov
aaa
pop
call
push
loope
cmp
arpl
arpl
fwait
hlt
mov
xchg
jmp
push
popa
loope
sbb
cwtl
stos
inc
in
adc
mov
mov
repz
mov
dec
cs
jo
cli
lret
pusha
out
jmp
push
popl
xor
xchg
call
pop
xlat
xor
icebp
jl
mov
adc
add
jg
jo
test
dec
adc
xor
popa
xchg
xor
mov
jne
out
iret
xchg
or
dec
shrb
pop
mov
mov
cmp
lcall
inc
ret
mov
add
sub
out
jb
push
add
mov
fdivs
imul
fsubrl
pusha
adc
out
bound
leave
nop
xchg
or
mov
and
inc
cmpsl
and
fcomp
jmp
xor
dec
push
sub
xchg
and
sub
mov
push
stc
js
push
aad
xor
sbb
add
lret
or
stc
jnp
cltd
jae
sarb
data16
mov
movsb
stos
stos
je
loopne
in
scas
in
mov
sub
fbld
test
int
mov
adc
xchg
dec
in
mov
in
arpl
dec
sbb
sub
jns
mov
nop
and
lock
rorl
cmpsb
add
xor
mov
mov
loopne
inc
movsw
add
dec
mov
push
xchg
mov
testb
xchg
adcl
mov
xor
or
xchg
push
sub
xchg
or
scas
es
daa
sub
cmp
mov
and
xor
insb
std
xchg
dec
xor
or
into
jp
sbb
mov
bound
lds
pop
in
cmp
data16
or
push
and
sub
sbb
outsl
xchg
and
push
ljmp
pusha
sahf
outsl
adc
pop
ss
or
jns
dec
sahf
inc
fmulp
xlat
jp
dec
and
test
ljmp
jno
mov
fwait
loope
shl
cld
push
sub
lods
addl
sub
and
test
nop
das
repnz
lret
dec
pop
mov
mov
pop
adc
push
pop
mov
jle
into
gs
lahf
adc
mov
dec
arpl
xchg
bound
in
push
sbb
in
aas
loop
sub
jl
lret
add
inc
sbb
lock
xor
pop
insl
rol
jo
rorb
mov
fnsetpm(287
cmp
mov
dec
movsl
lds
idivl
test
jl
cld
mov
dec
or
frstor
in
insl
dec
pop
outsb
push
push
mov
pushf
sub
into
int3
push
lods
aaa
dec
loopne
and
mov
scas
out
andb
inc
jo
jmp
test
and
sub
cld
cmp
aaa
mov
xchg
inc
jmp
lods
pop
and
jb
out
rclb
mov
out
in
out
cmp
mov
jno
lret
cwtl
das
std
sbb
mov
insb
test
inc
arpl
xchg
aad
dec
push
popf
xor
jle
xchg
cmp
imul
xor
cltd
dec
pop
lret
jmp
jle
cmp
and
sub
cmp
cmp
sub
xchg
mov
xchg
lods
push
fsubr
dec
add
add
je
int
fsubr
test
popa
mov
jmp
adc
iret
inc
push
adc
arpl
inc
stos
jae
aam
mov
push
cmc
xchg
loop
jno
xchg
cltd
mov
call
push
sbb
popf
cmp
add
pop
jle
jno
sti
push
repz
decb
jecxz
push
cwtl
addr16
icebp
loope,pt
xchg
das
rcl
mov
xor
dec
test
or
in
cmp
lahf
notl
jmp
es
movsb
pusha
negl
push
pop
dec
mov
movsb
cmp
scas
jae
pop
lcall
push
mov
shll
lods
mov
and
cltd
xor
fst
outsb
shrb
xchg
pop
outsb
mov
test
shll
lock
jo
pop
sbb
ret
scas
inc
xchg
push
sti
xchg
inc
pop
adcb
pop
in
jbe
les
icebp
test
in
jmp
outsl
mov
cld
sbbl
inc
lea
idivb
inc
ret
pop
cmp
shrb
sbb
ss
mov
sbb
rorb
lahf
add
movsb
movsb
push
and
bnd
xor
inc
lahf
out
int
flds
push
mov
inc
aam
nop
aaa
fbstp
test
mov
push
fwait
cmp
mov
push
stc
in
test
jbe
std
out
or
jmp
mov
jb
ds
and
mov
push
jae
xchg
cmpsb
loope
pop
mov
mov
into
in
int3
call
pop
mov
arpl
sbb
dec
xor
mov
mov
shll
cmp
dec
lahf
mov
repz
inc
xor
movsl
xchg
jmp
jne
add
outsb
mov
or
or
cmp
xchg
pop
jl
shr
xchg
push
clc
pop
sub
adc
sub
xor
ret
std
cltd
ret
ror
shlb
adc
push
popa
sub
inc
es
add
xchg
jno
fsts
movsl
sub
std
cltd
cmp
daa
mov
nop
stos
cmp
cmc
xchg
test
shlb
fsubl
sub
fisubrl
mov
pop
enter
das
addr16
or
mov
xchg
xchg
sub
arpl
pushf
dec
je
and
rcrb
inc
lcall
push
add
test
cmpsl
sbb
mov
adc
sarl
mov
and
or
jle
jne
jne
enter
sub
pop
cs
pop
push
test
cltd
std
push
cwtl
and
add
test
pop
daa
xor
xor
mov
arpl
push
and
insl
push
lahf
scas
test
fmul
mov
mov
xchg
sbb
dec
mov
fstpt
aam
adc
jns
leave
repz
inc
cmp
bound
sarl
dec
dec
lods
lods
push
pop
jo
sub
aad
dec
aaa
dec
cmp
inc
dec
outsb
xchg
inc
scas
push
in
clc
jb
add
sub
or
shlb
sbbb
xchg
leave
jecxz
int3
mov
mov
test
cwtl
xchg
inc
or
mov
in
das
insl
push
stc
cmpsb
in
sub
pop
test
push
cltd
repz
das
mov
jmp
inc
or
int
cmp
shl
je
andl
pop
mov
shll
jl
and
mov
leave
mov
stos
das
pop
test
ret
pop
xlat
jnp
xchg
imull
or
lahf
pop
test
or
xchg
push
cwtl
sub
lret
push
pop
insb
test
or
ficoml
xchg
sub
mov
lret
dec
nop
adc
xor
push
push
jmp
out
jo
sti
push
dec
fs
mov
adc
bound
dec
negb
daa
inc
sbb
stos
xor
dec
xchg
push
xor
rolb
loope
pop
xchg
dec
sub
jl
dec
dec
xchg
cmp
mov
jl
sbb
rorl
pop
shlb
push
lret
pop
sbb
fistl
daa
add
sbb
sarl
lds
and
jbe
stos
inc
int3
js
push
mov
ficoml
ljmp
popf
xchg
js
std
fists
sahf
imulb
inc
jns
stc
clc
sub
push
mov
aaa
xor
imul
fidivrl
mov
or
gs
jl
pop
mov
std
pusha
divl
jo
xchg
je
jle
stos
cmc
cltd
xor
dec
pop
sarb
incl
dec
mov
xchg
add
lods
push
mov
xchg
sahf
jne
push
adc
dec
jns
cmp
fsubl
mov
lahf
sub
dec
mov
sahf
lods
jmp
std
outsl
insl
add
ret
sub
sbb
mov
pop
xchg
jno
cmpsb
xchg
xchg
sub
pop
xchg
scas
push
mov
inc
xor
nop
mov
cmp
js
sbb
pop
movsl
roll
xor
sbb
scas
push
enter
stos
inc
es
clc
xchg
arpl
loope
repz
popa
clc
push
add
lods
xor
pop
inc
popf
fcomi
adc
sbb
jae
pop
movsl
xchg
fidivs
es
pop
paddw
hlt
cld
and
iret
rcrb
push
outsb
adc
out
and
lret
jnp
pushf
popa
add
cmp
xchg
cwtl
jmp
int
je
int3
movsl
ss
mov
iret
jmp
fucomp
adcl
mov
imul
xchg
ja
pusha
mov
lods
outsb
orl
stc
mov
mov
xchg
sub
inc
aam
push
mov
cld
inc
idivb
adc
add
sti
outsb
testb
jmp
rclb
cld
or
jge
repz
sbb
shll
insb
fldcw
clc
sub
fsts
gs
stos
sar
jge
shll
pop
inc
gs
mov
ret
ffreep
xor
imul
pop
testl
sbb
jmp
fnstsw
fwait
sbb
pop
xor
andb
lcall
push
lcall
sbb
sbb
sbb
rolb
sub
mov
inc
icebp
pop
push
popa
fidivl
ret
mov
outsl
or
dec
fdivl
insl
jl
xchg
arpl
lds
dec
push
outsb
cli
or
jne
insl
cmpsl
xor
arpl
mov
lahf
nop
in
repnz
enter
cmp
shlb
pop
mov
mov
in
pop
cltd
in
inc
sub
cmp
mov
mov
mov
lahf
dec
or
in
repz
cmp
sub
cmpsb
push
mov
mov
hlt
dec
stc
and
mov
push
lret
fs
add
addb
mov
repz
inc
test
push
aam
or
add
mov
jle
add
pop
inc
and
pop
in
icebp
shrb
std
or
daa
or
and
cmp
and
xor
mov
lret
notb
mulb
out
add
inc
cmp
imul
dec
clc
repnz
insl
adc
push
mul
outsl
icebp
or
test
mov
stos
jne
lods
rep
cmp
cmc
push
nop
inc
mov
mov
mov
nop
mov
fsqrt
pop
lods
pop
scas
fiadds
lea
push
out
in
out
mov
pusha
stc
in
repz
mov
jge
cli
in
mov
cwtl
add
int
and
pop
in
xchg
mov
aaa
jns
outsl
mov
jle
dec
push
stos
insb
cmp
push
lret
call
gs
icebp
sub
dec
add
enter
and
fnstenv
and
cld
arpl
ja
mov
or
and
add
in
adc
aam
outsb
fcomp
stos
inc
ret
ljmp
in
outsl
shl
mov
mov
into
shrl
mov
jg
cmc
ds
xor
fwait
xor
fdivrp
mov
arpl
in
xor
das
jecxz
mov
push
inc
loop
push
jne
rorb
out
scas
mov
dec
ret
sub
cli
pushf
push
test
push
adc
push
and
fwait
push
pop
cli
daa
add
xor
adc
push
cwtl
das
push
jmp
dec
les
dec
ret
pop
mov
mov
mov
adcb
rcrb
sbb
mov
aad
adc
jmp
loopne
add
mov
mov
outsb
fdivrl
rorb
push
ret
xor
adc
stos
es
into
adc
movsl
aad
lea
in
push
xorl
sbb
imul
sbb
rclb
mov
add
xlat
insb
adc
sub
inc
bound
jae
xor
sub
jno
mov
jns
movsb
fisttpl
inc
repnz
pop
cmp
cmp
adc
xchg
cmp
mov
rol
sbb
mov
lock
pusha
or
lock
mov
push
sti
and
push
push
pop
into
fsubr
cmpsl
mov
mov
insb
arpl
mov
adc
cmp
xchg
push
bound
mov
arpl
subb
push
addb
sbb
mov
mov
inc
insb
mov
add
inc
js
inc
push
jae
std
inc
add
cltd
popa
test
push
mov
pop
lret
mov
sub
cmpsb
adc
pop
aaa
jo
mov
pop
loop
sub
add
inc
scas
cmp
leave
dec
aaa
push
pop
aas
dec
pop
lret
bound
xchg
rolb
dec
mov
pushf
sub
xor
inc
xor
cmp
cwtl
daa
call
iret
xor
jecxz
leave
inc
nop
jnp
jg
cmp
pushf
inc
push
loopne
pop
sahf
movsl
add
das
cli
xor
insl
dec
clc
mov
mov
hlt
fsubl
adc
or
push
mov
add
aam
sbb
jo,pt
mov
in
addl
scas
pusha
cmpsl
or
jb
insl
adc
scas
lods
je
ja
daa
xchg
inc
popa
push
add
xor
enter
cmc
in
mov
push
xorl
jae
mull
push
xchg
imul
adc
mov
call
into
bound
test
jg
jp
xchg
sarl
imul
hlt
ja
popa
fucomp
cmpsb
inc
subl
or
shrb
mov
jmp
sbb
outsl
mov
or
mov
decb
addl
iret
mov
mov
pop
and
jp
inc
movsl
decl
xor
andb
add
fwait
sbb
pop
nop
lahf
loopne
cmc
pminub
movsb
xor
inc
or
push
in
mov
fwait
mov
inc
loopne
or
pop
mov
aam
test
repnz
daa
mov
mov
xor
ja
imul
rorb
lcall
ja
jnp
aad
mov
mov
mov
ds
xchg
out
sbb
xchg
add
fwait
push
fdivr
fwait
sub
inc
roll
enter
mov
fcomip
push
testl
stos
out
cld
cltd
mov
pop
mov
cli
xchg
xchg
jnp
mov
mov
hlt
cmp
aas
lcall
rolb
xor
ss
aas
pop
lods
icebp
adc
loopne
push
scas
jecxz
pop
enter
cmp
in
add
test
xchg
leave
iret
fidivs
lret
bound
jmp
pop
int
test
jge
and
and
cmp
jb
jnp
gs
ret
push
cs
rcl
jo
xchg
repnz
pop
adc
scas
aaa
and
movsb
inc
adc
test
iret
data16
jecxz
sub
je
js
popf
xor
dec
out
and
inc
sub
and
dec
notb
fs
jb
adc
jle
pop
mov
loopne
aad
les
in
inc
sbb
idivb
fisubrs
and
jmp
adc
aaa
popa
ret
jmp
shlb
pop
push
push
cmp
out
cld
inc
or
inc
cwtl
cmc
testl
rorb
inc
mov
int3
mov
pop
add
es
out
pop
push
cmp
dec
test
sbb
dec
aam
xchg
mov
repnz
mov
int
jle
movsb
je
cmpsb
and
es
mov
push
subb
adc
xlat
cmp
enter
pop
testb
pop
cwtl
clc
or
sub
fcoms
hlt
xchg
push
int
fcomps
mov
lahf
xchg
loope
add
cmp
xor
cltd
jae
mov
push
sub
and
fwait
ds
imul
addl
sbb
cmpsb
mov
cld
int
fcoms
out
jno
xchg
fs
push
test
out
nop
nop
push
sti
sarl
pop
pop
insl
mov
mov
fptan
testl
mov
sarb
test
mov
or
pushf
repnz
stc
nop
daa
sub
insb
decl
jnp
insl
xchg
push
xchg
mov
mov
jecxz
xchg
push
ret
fsubl
test
jns
push
loop
loope
int3
mov
sti
xchg
push
adc
mov
fwait
cmpsl
les
and
ret
decb
or
shrl
push
icebp
jle
pop
je
shll
popf
and
test
cmp
sti
add
cmp
inc
adc
and
into
popa
cmc
ficoml
insb
gs
push
lret
cli
or
push
leave
jno
mov
xor
pushf
sahf
pop
push
cmp
pushf
lock
mov
fwait
and
dec
cs
repnz
and
xor
pop
push
lea
popa
pushl
sub
lods
dec
ret
insb
daa
dec
mov
testb
dec
sbb
pushf
movsl
hlt
sahf
sub
in
sub
sub
test
test
mov
sbb
xchg
sbb
and
fwait
cli
sbb
test
and
inc
mov
stc
adc
dec
inc
sbb
sub
xchg
std
sub
sub
ret
jnp
xchg
adc
or
xlat
das
inc
sbb
ja
cld
jmp
dec
pop
dec
xchg
arpl
addr16
pusha
sub
xchg
mov
cmpsb
in
cmpsl
sbb
test
pop
add
xor
push
test
in
lahf
add
shlb
fsubr
fists
test
lods
and
push
pop
fisubs
cwtl
outsb
mov
pop
cmpsl
sbb
fidivs
pop
scas
cwtl
sarb
xchg
gs
fnstenv
push
cmpl
nop
sbb
jno
movsl
cmp
ljmp
and
add
pop
sbb
jg
pop
out
adc
hlt
stc
stos
jg
je
popf
sub
dec
mov
sbbl
jle
sub
xor
or
push
lret
push
stc
push
xchg
je
lods
mov
push
shll
xchg
mov
jle
mov
push
or
mov
jmp
inc
xlat
test
jecxz
push
ret
xor
dec
xchg
adc
inc
sub
pop
mov
rcrl
sub
cwtl
pushf
adc
inc
and
aam
pushf
je
pop
cmp
mov
mov
mov
sub
mov
test
ja
insl
leave
cmpsl
ds
sub
xor
je
rcll
mov
and
imul
addl
lds
cmp
jne
les
push
push
pushf
sbb
mov
mov
inc
xchg
scas
cmpsb
mov
cmp
in
or
jne
icebp
cmpsb
push
outsb
insl
add
test
ficompl
sub
adc
ja
adc
sub
subw
xchg
fsubs
mov
dec
shlb
pop
adc
mov
pop
dec
mov
daa
fldcw
fs
ret
adc
xor
cmc
jp
aad
cmpsb
pop
sbb
stos
fdivs
xor
mov
shrb
iret
in
mov
mov
push
pop
dec
hlt
push
adc
inc
aaa
jnp
das
fwait
mov
push
in
in
jae
or
push
push
mov
or
ss
adcl
xor
sub
pop
inc
jmp
xor
movsl
and
and
xchg
pop
sub
and
push
mov
das
or
xchg
cli
and
into
sub
incl
outsb
sub
dec
popa
dec
cmc
int
movsl
inc
inc
dec
adc
xchg
daa
repz
jmp
ja
add
icebp
nop
call
inc
xor
add
insl
pop
sub
mov
xor
cmp
test
ss
jb
mov
out
dec
mov
add
xchg
mov
xlat
popa
pop
std
je
sbb
mov
in
sbb
in
icebp
mov
adc
lcall
pop
cmc
popa
jg
mov
or
xchg
and
jecxz
and
or
inc
nop
lcall
sbb
rolb
push
pop
aas
push
sub
cmp
push
out
add
cmpsl
subl
jmp
lds
stos
mov
jp
cld
pop
mov
sti
xchg
ret
push
push
test
fwait
test
xor
mov
xor
mov
mov
rorl
and
xor
arpl
push
inc
cmp
push
push
mov
push
add
out
inc
mov
sbb
sbb
xchg
pop
mov
fstpl
adcb
push
test
mov
sbb
out
aas
or
push
divb
mov
bound
insb
jo
or
mov
push
data16
iret
fwait
jl
out
or
lods
in
hlt
jnp
push
xor
mov
icebp
sub
and
int3
pop
cmpsl
sub
inc
addb
push
mov
jle
mov
lahf
daa
ja
frstor
adc
loopne
jmp
xchg
fcoms
incl
je
mov
lea
cwtl
lret
xchg
lock
sbb
in
jno
or
pop
or
add
ds
lcall
sub
popf
icebp
in
lret
outsb
pushf
rolb
outsl
sbbl
add
xor
testl
sbb
pop
aam
ficoms
ljmp
push
fs
xor
sarl
dec
nop
mov
mov
and
lret
fisubrs
in
lcall
jmp
mov
xor
add
jbe
cmp
inc
call
cmp
sub
int
xor
pop
repnz
fnstenv
out
mov
or
or
inc
outsb
pop
out
shll
and
jb
xchg
out
xchg
pop
jnp
pop
jmp
inc
sbb
repnz
mov
lods
adc
pop
xorl
mov
jmp
xor
mov
pop
sbb
bound
adc
cmc
push
stc
xchg
je
mov
mov
leave
push
xor
push
das
adc
rcrb
mov
fistpl
xor
mov
jae
je
xchg
ljmp
rcr
sbb
add
push
outsb
sub
adc
add
jl
mov
inc
jno
mov
push
data16
inc
std
popa
gs
or
add
cmc
adc
loopne
int3
je
mov
je
pop
adc
and
adc
sarb
dec
mov
jp
imul
andb
stc
jne
add
ja
stc
clc
std
test
mov
lret
xchg
movsb
leave
outsl
lds
add
inc
xchg
cmp
out
adc
pop
leave
push
imul
ja
icebp
daa
enter
xchg
mov
dec
add
in
xchg
mov
xchg
jns
dec
add
adc
inc
arpl
jbe
fcoms
rcrl
cmp
sub
dec
out
mov
ja
or
pop
lret
les
aad
popa
mov
add
jne
pop
cmpsl
cmp
lods
or
cmp
ds
mov
jne
xlat
inc
sbb
repnz
arpl
sbb
sub
fs
clc
cmp
data16
mov
rcll
imul
mov
test
and
stos
adc
lret
dec
shll
sub
push
dec
int3
and
arpl
sahf
pop
fistpll
or
jecxz
sbb
or
fcoml
shrl
push
pusha
cmp
push
inc
cltd
pop
dec
cmpsb
add
mov
jle
dec
loopne
lahf
jmp
dec
jl
or
pushf
dec
pushf
cs
aaa
movsl
add
mov
adc
jne
jo
sub
jbe
mov
adc
fcoml
mov
fdivl
jae
sub
aas
mov
jno
jne
lret
rcll
gs
cld
or
lcall
xchg
fisttpl
push
insb
sti
lock
mov
add
push
inc
mov
aam
cmc
sub
inc
rcrb
out
aam
repz
cs
daa
inc
dec
pushf
lods
mov
add
leave
adc
cld
xchg
fcmovbe
dec
ret
dec
sbb
adc
ja
aam
xchg
mov
cmpsl
inc
aad
notb
cmpsl
push
inc
mov
cmp
iret
xlat
pushf
jecxz
into
clc
push
addr16
add
mov
mov
loop
pop
aaa
pop
mov
xchg
aad
cmp
ljmp
jns
stos
xchg
cmp
mov
xchg
xchg
fbld
mov
or
adc
loope
xchg
adc
sbb
mov
jnp
test
lods
inc
in
and
fld
loop
sub
js
jl
adc
pop
les
rsqrtps
xor
fiadds
xor
movsl
mov
or
push
xlat
mov
sub
push
fcomps
mov
add
mov
push
push
shrb
lahf
lea
mov
xor
scas
call
outsl
or
in
cmp
jb
and
mov
push
mov
mov
xor
aam
aad
sub
in
xor
enter
adc
xor
pusha
mov
cwtl
lods
xchg
imul
mov
push
pop
push
pop
sbb
push
lret
sti
gs
jg
xchg
shl
test
popf
shrb
inc
adc
jnp
dec
popa
dec
pop
pop
out
xor
mov
fdivrs
shll
iret
jb
xchg
add
nop
sbb
lods
inc
and
add
mov
test
mov
ret
or
les
icebp
mov
jg
adc
mov
out
cmp
xor
mov
push
cs
mov
dec
adc
push
js
mov
push
movsl
mov
adc
add
mov
push
es
jg
cmp
gs
pop
jae
mov
subb
adc
push
jb
cmc
inc
mov
sti
dec
inc
dec
sbb
mov
shrl
mov
icebp
mov
cltd
in
pop
or
xor
gs
xorl
or
jle
mov
add
xchg
push
shll
jb
mov
lahf
test
dec
sti
inc
mov
sub
push
jecxz
fildll
lods
scas
test
pop
add
push
push
mov
outsb
mov
adc
repz
xchg
cmpsb
adc
mov
and
gs
loop
je
push
xor
imul
xchg
cs
mov
ficoml
movl
mov
pop
or
xchg
xchg
fs
add
push
mov
leave
xor
pop
mov
push
xor
push
sub
xlat
vprotb
das
and
pop
aas
xchg
int
es
icebp
stos
iret
popa
xchg
mov
sub
push
push
arpl
jae
push
push
mov
gs
aaa
rcrl
pusha
in
pop
xchg
xchg
mov
sub
int3
sub
xchg
mov
jbe
xor
loopne
daa
imul
imul
andl
pop
or
imul
idivl
lahf
xor
out
stc
xchg
pusha
leave
and
cmpsb
or
pop
add
sbb
gs
rcl
scas
pop
jb
sub
mov
std
enter
push
cmc
testb
call
add
mov
aam
sub
fcom
xor
scas
arpl
jmp
sbb
or
daa
je
std
fcom
ret
dec
xlat
adcl
fcomp
cmp
dec
jmp
and
les
out
out
inc
icebp
xchg
sub
push
incl
in
stc
nop
xchg
mov
mov
hlt
pusha
inc
and
add
and
jae
mov
outsb
add
sarl
sbb
daa
add
loopne
fs
bound
es
fmull
clc
shrl
mov
xchg
loope
pop
xchg
mov
lock
arpl
ror
xor
pop
jmp
andl
jns
jecxz
aam
mov
test
gs
repnz
mov
mov
push
jne
mov
xchg
pushf
xchg
add
ss
cmp
push
in
pop
push
fs
lea
mov
ret
mov
jno
and
popf
rorb
and
cmp
adc
pusha
mov
xchg
xor
scas
or
addb
pop
repnz
fisubl
mov
mov
push
jg
sbb
xor
xor
fldcw
das
mov
pushl
pop
push
popf
mov
add
aas
lods
lock
push
stos
sbb
in
fists
push
mov
aam
mov
mov
scas
call
xor
sub
sbb
lahf
outsl
mov
add
into
sub
fcoms
xor
mov
xlat
std
adc
or
and
xor
and
mov
call
or
pop
test
push
sbb
das
ret
int3
dec
in
cmp
mov
jl
dec
fisubrs
adc
fdivrs
xor
xor
sbb
mov
sub
test
adc
shrb
lret
mov
loop
mov
dec
dec
push
shrl
xchg
bound
enter
inc
popf
mov
fsubs
mov
aad
fcoml
js
pop
and
sbb
rcl
or
mov
push
mov
sub
mov
mov
mov
pusha
ss
sub
push
push
inc
data16
inc
fidivl
outsl
inc
js
popa
xor
or
test
cld
push
pop
outsl
jnp
js
int
rorl
rcrb
test
repnz
stos
push
loopne
je
mov
and
stc
popf
and
faddl
pop
pop
stc
sbb
leave
ret
lahf
push
mov
imulb
or
mov
mov
inc
cmpsb
push
andl
cmc
inc
sbbl
out
cmpsl
cmp
cmovns
call
or
mov
fcmovbe
insl
int3
and
sti
int3
inc
push
nop
icebp
pusha
andb
xchg
std
cltd
dec
jae,pt
out
je
mov
pop
gs
outsl
popa
js
mov
fmuls
sarl
push
mov
xchg
cmp
icebp
adc
sbb
pop
fcomi
rcr
jno
push
movsl
orl
jmp
sub
xor
mov
xor
loopne
loop
mov
push
add
bound
ficompl
pop
loopne
mov
sbb
adc
dec
lcall
pop
jg
es
jl
inc
fcmovne
scas
addr16
xchg
bound
mov
addr16
jle
arpl
data16
inc
push
mov
jae
mov
dec
xor
jns
mov
shrl
rol
inc
lods
dec
push
sub
and
dec
xchg
inc
adc
gs
sahf
xchg
sbb
das
aaa
out
addb
or
dec
push
out
insb
js
or
dec
shrb
dec
mov
decb
lahf
cmp
cmp
jbe
cwtl
mov
std
inc
xlat
xor
pop
movsb
ds
shrl
cld
jnp
aaa
xchg
lods
xchg
push
pop
dec
out
js
or
add
lds
lahf
in
out
ljmp
insl
rolb
inc
fsubr
data16
xor
and
popf
ret
inc
test
dec
or
jle
mov
jmp
or
mov
add
xor
and
push
pop
jbe
fcmovb
jg
or
stc
lods
and
testb
fcoml
fbstp
fcoml
push
xor
ds
mov
lcall
xlat
imul
xchg
cmp
ret
sbb
and
and
imul
int3
inc
pop
cmpsb
sub
inc
fisttpl
sub
sub
cwtl
xor
push
pushf
popa
sbb
jg
dec
cmp
push
mov
loopne
dec
mov
mov
dec
lods
into
das
dec
bound
mov
clc
in
orl
or
popa
shrb
add
mov
jmp
clc
xchg
stos
or
outsb
adc
or
mov
sbb
out
jecxz
cmpsb
push
cmp
push
cmc
in
inc
in
add
push
sbb
leave
mov
or
and
repnz
aas
les
cld
div
mov
and
fwait
mov
or
mov
mov
cmp
daa
lea
mov
add
and
or
dec
xchg
mov
jg
insb
inc
data16
mov
jno
mov
xchg
or
push
adc
mov
sbb
mov
in
dec
push
cmp
dec
mov
adc
lods
test
rep
outsl
fldt
push
stc
lcall
addb
adc
pop
insb
sti
pop
mov
dec
data16
imul
add
out
loopne
and
shr
outsb
hlt
dec
lahf
scas
mov
fimull
cmp
mov
dec
imul
sub
movsl
sbb
or
xchg
push
sahf
sarl
cwtl
mov
pop
out
inc
push
in
movsb
icebp
popa
push
in
pop
popf
inc
mov
mov
xor
lods
or
sbb
dec
jecxz
imul
call
dec
mov
inc
push
mov
mov
add
jno
jno
push
movsl
hlt
sbb
add
pushl
fcoml
or
push
cmp
dec
adc
aam
ret
stos
or
adc
rcl
add
sbbl
mov
icebp
xchg
mov
imulb
xor
ret
dec
pop
sub
sub
pop
fldt
lret
hlt
ja
cmp
cmpsb
mov
gs
push
pop
and
lret
xchg
bound
les
mov
lds
add
cwtl
insb
mov
rclb
or
or
lods
sub
ficompl
out
jbe
push
loopne
pop
sub
fistpl
outsb
jbe
fbstp
popf
ljmp
mov
mov
inc
fiaddl
cmp
imull
stc
pop
mov
sarb
stos
loope
cmp
int
and
xor
and
out
push
xchg
je
mov
push
out
mulb
fs
push
or
mov
mov
popa
fs
xchg
mov
mov
mov
data16
stos
test
mov
cmp
cld
dec
and
mov
pop
adc
jg
bound
add
into
cs
movsb
jp
mov
dec
and
pop
push
in
mov
cmc
mov
loopne
aad
out
push
loope
xlat
js
lea
push
mov
std
adc
and
stc
out
test
sub
push
rolb
push
stc
mov
mov
mov
mov
sbb
or
cmc
push
sub
js
add
in
loopne
pop
gs
xor
jl
xor
push
dec
movsl
push
sub
add
pop
stc
xor
lcall
push
dec
push
push
fiaddl
add
push
daa
sub
into
pop
jbe
nop
das
pop
lds
push
adc
into
mov
popf
loopne
into
lahf
cmc
sbb
xchg
dec
push
and
push
jl
jp
jb
pop
jecxz
cmp
and
mov
jbe
and
xor
push
mov
shll
adc
xlat
insb
add
dec
fwait
aas
dec
and
mov
out
hlt
xor
jmp
je
mov
mov
out
std
faddl
es
shlw
mov
ja
aad
iret
push
imul
stos
mov
je
add
insl
sbb
inc
xchg
mov
shlb
imul
sbb
add
ss
ljmp
push
jne
cmp
inc
call
push
cmc
adcl
pushf
sbb
leave
jo
xchg
push
int
or
cmp
adcl
dec
pop
and
mov
push
inc
xchg
jmp
aaa
sbb
sbb
orl
push
adc
sbb
lret
popa
xor
les
test
lea
xor
dec
and
cld
xor
js
sahf
cmpsb
in
jecxz
int
mov
nop
leave
aad
pusha
nop
cmp
js
jmp
push
call
inc
jle
pop
jge
lahf
enter
cli
pop
inc
adc
jb
jne
mov
insl
and
mov
mov
test
aad
test
jno
enter
or
sbb
mov
sbb
pushf
xor
out
push
cs
fs
enter
ljmp
sub
les
out
xor
sbb
mov
pop
outsl
daa
aam
orl
dec
xor
not
bound
mov
push
push
movsb
cmp
pop
cmpsb
fxch
gs
fidivl
sub
dec
clc
sarl
addr16
mov
loope
std
aad
sbbb
pop
cmp
test
mov
xchg
push
lahf
or
inc
push
jbe
stos
in
mov
js
sbb
add
lret
gs
pop
xchg
xor
mov
push
sub
inc
les
sarb
sbb
movsl
xor
ja
jnp
scas
movsl
mov
push
and
loope
jo
dec
idiv
xchg
out
sti
cmc
lea
lret
inc
add
mov
das
popa
add
loop
mov
movsb
pop
cmp
js
nop
mov
loopne
aad
jnp
push
pcmpgtd
lcall
xchg
ss
je
mov
xchg
addr16
scas
pop
xor
les
xchg
and
in
xor
nop
sub
aad
gs
and
mov
xor
fstpt
cmp
sub
cmp
shrb
push
in
shl
in
dec
sbb
xor
cmp
inc
cmp
cmpsb
ficoms
adc
lret
jnp
push
je
or
mov
faddp
imul
inc
jmp
jbe
leave
pusha
dec
xchg
cmp
leave
push
dec
out
push
pusha
inc
aam
cltd
ret
js
ja
call
or
pop
pop
leave
popa
ja
pop
jnp
dec
push
jno
and
push
lahf
sbb
jnp
dec
stc
ret
arpl
iret
scas
xor
mov
aad
pop
push
imul
fwait
loope
dec
rcrl
mov
cltd
lods
insl
addl
cmp
xor
call
in
insl
pop
mov
ret
loop
mov
addl
sahf
stos
ficompl
rcrl
arpl
xchg
enter
mov
inc
cmp
mov
jno
or
inc
int3
dec
adc
into
mov
cmc
insl
add
jns
in
adc
xor
arpl
jno
and
add
daa
jle
xor
jbe
andb
mov
inc
ljmp
movsl
fidivl
sub
dec
push
icebp
sbb
xor
insl
add
push
and
pop
fsubrs
mov
sbb
in
jns
sub
mov
mov
lods
jp
mov
movsl
js
or
jecxz
xor
pop
shrl
leave
test
jl
repnz
aad
insb
ficomps
movb
and
or
and
movsb
push
add
pop
or
mov
popa
xchg
imul
pusha
dec
in
xor
fsubl
pop
lds
pop
insl
mov
cmpsl
mov
dec
pop
loopne
js
lret
es
push
aam
mov
and
movsl
lods
mulb
dec
fld
mov
xlat
scas
pop
in
pop
xor
adcb
js
jae
mov
loopne
mov
stos
xchg
push
or
imul
addb
pusha
xor
push
add
and
scas
lods
je
jmp
adc
repz
fsubrl
int
sbb
lock
ret
out
sti
mov
or
xor
lock
mov
enter
stos
xor
pop
test
pop
lret
or
pop
ds
and
ficoml
bound
js
push
add
xor
lahf
xor
or
mov
movsb
push
or
mov
insl
adc
xchg
push
fisttps
push
inc
sbb
fwait
in
loope
sti
call
cmp
bound
sbb
shll
or
mov
aam
adc
mov
movsb
cmpb
mov
xchg
jp
mov
pushl
xor
jns
int
aam
add
jle
bound
push
lods
scas
lods
sarl
cmc
movsl
stos
add
push
outsl
cli
pop
fcompl
scas
push
xor
gs
xchg
stos
inc
aaa
jne
enter
ret
repz
pusha
xchg
mov
pop
mov
mov
icebp
sub
data16
inc
pushf
mov
stc
mov
mull
or
mov
fildl
mov
mov
mov
cmpl
or
iret
mov
fnsave
int
dec
jmp
mov
incb
pop
movsb
cmp
lret
ret
add
clc
xor
xchg
test
frstor
and
das
jl
push
sub
shll
xor
adc
inc
scas
mov
fnstcw
pop
adc
stos
ret
cltd
test
je
cwtl
pop
rclb
jnp
mov
inc
fnstenv
aam
mull
or
cmp
jle
inc
fsubrs
or
sbb
mov
jo
sub
pusha
dec
inc
out
pop
push
or
bound
dec
fst
jae
outsl
jo
icebp
cs
imul
repnz
mov
out
sub
cmpsl
sar
in
inc
xor
adc
rclb
add
xor
push
sbb
push
icebp
pop
cmc
inc
inc
sub
setbe
cs
jecxz
xchg
in
cmc
adc
mov
ja
sbb
mov
ror
sbb
push
scas
loope
mov
mov
rcrl
dec
mov
or
jns
sbb
addr16
jecxz
pusha
dec
jmp
iret
xchg
mov
mov
out
pop
sar
mov
call
jb
cltd
xor
add
icebp
pop
lea
rcll
fisubrl
data16
xor
jbe
out
fildl
ret
icebp
xchg
xchg
jge
call
dec
inc
in
xchg
mov
push
mov
xor
and
adcb
dec
arpl
add
adc
mov
cmp
xchg
push
nop
in
aam
dec
lds
dec
sub
sbb
shll
test
lret
jo
call
jp
mov
cmp
mov
call
add
and
and
sbb
cmp
div
jl
sub
pop
icebp
ljmp
clc
repnz
in
sbb
test
fwait
dec
arpl
idivl
mov
xor
clc
mov
sub
push
aas
lret
data16
jno
mov
pop
jle
out
xchg
jge
outsl
mov
pop
sti
aas
or
cmp
jg
out
jno
loop
movsl
pushf
mov
in
call
push
sub
and
ret
shr
push
add
adc
mov
inc
sbb
movsl
dec
popa
add
mov
std
pop
or
mov
jne
inc
aam
adc
dec
or
ss
mov
xchg
out
push
sahf
lods
inc
xrelease
int3
adc
dec
push
adc
aam
jne
cmpsb
repz
mov
insl
cmp
arpl
jo
lea
adc
mov
fsubl
inc
shll
or
or
mov
jge
dec
lds
aam
sub
enter
loope
insl
inc
aam
inc
popl
inc
dec
and
or
outsb
pop
inc
in
mov
out
cli
xchg
xchg
and
fnstenv
aam
or
outsl
insb
in
push
xor
mov
mov
test
jbe
ficoms
pop
dec
leave
push
mov
cld
sub
aas
sbbl
cmp
sbb
cmp
negl
jmp
aaa
adc
mov
mov
xchg
in
mov
out
ret
fldcw
dec
fcmovnu
mov
ror
enter
loop
pop
mov
lods
std
jns
xlat
mov
fdiv
fcmovnbe
sbb
inc
mov
pop
mulb
fwait
xchg
sbb
iret
inc
and
push
push
and
xchg
loop
cmpsl
push
sti
ds
outsl
fmul
pushf
and
sti
pop
aad
dec
ds
push
jmp
sub
jo
je
clc
lret
fsts
inc
sub
daa
sbb
ljmp
xchg
adc
push
icebp
sbb
pop
push
add
mov
into
imul
dec
xchg
int
push
sub
mov
push
xor
inc
ret
test
inc
cmp
mov
adc
lret
jmp
push
push
xchg
mov
mov
ds
and
lds
notb
adcb
movsl
insl
add
ja
jae
mov
lods
aaa
push
pop
push
out
mov
jecxz
gs
hlt
jbe
jmp
andb
inc
fdiv
lea
adc
push
jle
or
inc
in
orl
push
cmp
jecxz
gs
pop
mov
pop
and
add
adc
push
adc
dec
enter
into
pop
dec
loopne
jo
cmp
and
push
pop
arpl
idivl
sbbb
push
or
and
xchg
in
fstpl
cmp
in
jae
arpl
bound
es
add
add
xor
adc
and
paddb
insb
cmpb
subl
push
test
mov
cltd
cmpsb
out
pop
jecxz
xor
add
xchg
pop
xor
dec
push
push
push
sub
enter
ljmp
add
mov
jg
pop
loopne
push
push
hlt
jno
aaa
lea
jne
sti
int
pop
imul
lds
call
pop
divl
push
and
and
inc
jo
pop
in
js
inc
cmp
jg
daa
sbb
or
mov
push
lods
jnp
add
pop
addr16
jb
jnp
ljmp
pop
sub
add
test
roll
add
adc
into
out
xor
imul
cmc
std
xchg
mov
test
or
and
push
mov
mov
xchg
je
push
fwait
pop
aad
outsb
lods
nop
mov
cmp
popf
adc
js
or
loopnew
add
or
rorl
mov
cmp
jge
xchg
in
int3
sbb
into
xchg
lock
loopne
ret
mov
imul
adc
cmp
mov
pop
es
inc
outsb
and
in
in
push
inc
notl
dec
xchg
pop
inc
lds
cwtl
sbb
addl
inc
test
dec
sbbb
jecxz
lock
jbe
sahf
and
rolb
mov
pop
add
pop
lcall
xchg
int3
xlat
scas
jp
jecxz
imul
inc
dec
or
add
xchg
repz
add
test
int
stos
jge
lods
je
test
adc
inc
cs
jnp
xor
fsubrp
sub
cmp
xor
aaa
push
sbb
jge
mov
ret
fs
jg
cmp
ja
lret
adc
js
pop
outsl
stos
ret
loope
test
sub
push
sub
dec
mov
call
and
aas
mov
int
cmpb
nop
push
mov
hlt
cmp
pop
subb
cmp
adc
add
mov
fsubrs
or
std
decl
icebp
mov
mov
movsl
repz
dec
test
loope
insl
shlb
inc
mov
pop
dec
push
xor
sub
enter
or
xchg
and
fildll
cmp
jnp
mov
jge
sub
fucom
cli
aam
arpl
xchg
mov
dec
pop
shll
xor
dec
movsl
jl
lret
das
xor
lret
dec
add
ret
and
std
jnp
add
add
xor
xchg
push
rorl
inc
jp
dec
test
xchg
cli
cmpsl
out
loope
adc
test
xchg
add
xchg
sarb
add
icebp
inc
xchg
test
mov
cwtl
xor
leave
xchg
mov
jge
jecxz
xor
stc
cmp
mov
nop
pop
ss
pusha
mov
dec
push
repnz
xchg
rcl
leave
hlt
imul
jno
mov
cltd
scas
fs
xor
fcomip
push
nop
xor
pop
insb
cwtl
cmp
lock
ret
addr16
xchg
lds
mov
test
mov
pop
xor
xchg
xchg
fdivrs
inc
jecxz
push
jecxz
mov
gs
stc
or
pop
dec
pop
mov
pusha
and
js
cmp
mov
bound
lcall
in
adc
mov
jb
in
cmp
add
fadd
jle
movsl
sbb
jp
imul
arpl
or
pop
mov
data16
push
and
sub
imul
pop
into
and
mov
dec
pop
jl
push
pop
mov
and
jne
and
inc
inc
out
adc
xchg
sub
add
enter
fcomps
mov
popf
mov
or
adc
popf
cmp
mov
addl
lret
aaa
pmuludq
xchg
icebp
jb
shrb
mov
icebp
inc
ret
je
shrb
iret
xor
andb
and
mov
sbb
mov
mov
dec
in
ljmp
push
aad
lock
pusha
test
movsb
add
stos
xchg
mov
pop
push
insb
cmp
outsb
inc
mov
js
in
sbb
mov
jg
push
in
into
enter
call
pop
lds
or
pop
fdivrs
test
push
jmp
push
out
push
jmp
ja
inc
push
add
ds
xchg
and
sub
es
mov
cmpb
sub
aas
scas
xor
enter
ret
orb
scas
js
xorl
pop
std
mov
ret
mov
and
fisubrl
aaa
add
mov
repnz
leave
mull
xor
sub
repz
pop
mov
cmpsl
jl
into
enter
jne
mov
dec
lods
leave
rclb
add
cmc
shlb
test
push
int
mov
pop
imul
xchg
ds
pop
pop
jmp
pop
icebp
or
leave
outsl
mov
pushf
fsubrp
fnstsw
or
pushf
inc
xor
prefetcht1
sahf
xor
sbb
out
test
shlb
ss
sahf
js
add
outsl
xor
inc
mov
sbb
sahf
xchg
cld
dec
mov
sbbl
adc
mov
int3
call
dec
pop
lock
mov
nop
cmp
ljmp
pushf
jbe
fwait
mov
xchg
cmp
ljmp
xchg
mov
out
out
mov
into
arpl
sub
or
jmp
adcl
stos
push
mov
in
mov
xor
sbbb
aad
imul
fcom
pop
sti
sub
jl
adc
mov
rclb
gs
inc
fnstenv
or
inc
nop
arpl
lret
dec
inc
call
add
mov
sub
pop
mov
and
cmp
out
xchg
push
pop
jge
add
adcl
shrl
xchg
push
test
pusha
stos
scas
int
sbb
inc
daa
ret
cmpsb
inc
add
mov
sahf
sarb
sbb
lea
xor
jae
sbb
adc
sahf
jg
xchg
sti
jno
lea
mov
stos
push
shll
xchg
out
cli
dec
mov
or
xor
adc
dec
xorl
push
dec
mov
jmp
hlt
jo
fsubs
sbb
push
loopne
mov
ficompl
mov
push
cli
ds
sti
jle
insb
add
adc
push
jge
sbb
dec
adc
push
mov
push
ljmp
cmpsb
in
scas
data16
inc
pusha
mov
bswap
and
sub
sub
jo
sub
fisubs
add
mull
mov
popf
dec
pop
mov
jo
jp
sbb
shll
adc
inc
mov
or
mov
cmp
inc
orb
call
pop
ss
lea
add
jecxz
fcmovnu
mov
adc
add
mov
fcoml
mov
ljmp
hlt
or
out
ja
call
xchg
int
push
or
xchg
sub
push
jno
out
dec
insb
cmovp
nop
imul
loopne
in
repnz
test
inc
aam
mov
scas
andl
and
cmp
les
and
lret
sti
xor
in
pop
sbb
in
jb
pop
test
push
fwait
sarl
add
arpl
sbb
mov
nopw
gs
ja
push
cmp
jae
jmp
sbb
sti
add
xor
jmp
mov
daa
mov
pop
sub
mov
in
imulb
nop
and
mov
mov
mov
sahf
pushf
lcall
pop
jo
stos
inc
int
fnstenv
out
inc
std
mov
loopne
xchg
pop
adc
aaa
xor
ljmp
ret
ret
sti
jo
inc
pop
xor
jmp
xchg
xor
ret
frstpm(287
jge
xor
mov
ret
imul
popf
inc
push
pushf
mov
aas
into
shrb
sbb
pop
sub
pop
imul
mov
xchg
pop
cli
test
xchg
shrl
shl
inc
and
cmp
gs
lds
jl
movsb
loope
shll
and
or
dec
outsb
add
stos
inc
mov
test
icebp
inc
lea
cltd
sbb
jo
and
cmp
inc
jbe
mov
pop
bound
je
nop
ljmp
inc
movsl
or
bound
push
stos
ljmp
or
dec
jns
daa
je,pn
inc
xor
imul
jo
leave
xlat
imul
addb
hlt
adc
push
enter
sbbl
pop
jle
mov
mov
fidivl
out
insb
mov
cmp
es
dec
pusha
fistpll
push
loopne
jg
adc
gs
in
pop
xchg
adc
inc
push
inc
hlt
push
js
or
sub
adc
scas
push
xchg
xor
nop
mov
push
fnstsw
call
dec
pop
jae
xchg
aad
in
jg
jbe
xchg
fists
mov
inc
in
lods
js
shll
enter
test
cmc
jae
sub
mov
lea
rcr
sti
and
and
xchg
inc
lock
ret
push
fldenv
outsl
addr16
jge
push
sti
push
pop
dec
sahf
gs
add
mov
fistl
fsts
leave
push
arpl
dec
ljmp
sbb
adc
sbb
sbb
push
loop
adc
lods
sbb
lock
add
movhps
push
stos
pop
xchg
imul
xchg
inc
pop
adc
xchg
xchg
lcall
push
mov
push
push
leave
xchg
lcall
dec
rcrl
and
outsl
fimuls
and
pop
fildl
ds
push
mov
pop
mov
stos
adc
sbb
addr16
movsb
movsl
lds
mov
cmpsb
mov
add
test
insl
iret
lcall
fnsave
out
mov
addr16
arpl
sbb
lret
sub
shrl
fildll
mov
and
mov
lods
xchg
clc
ss
call
inc
ss
cmp
sbb
outsb
xor
popf
dec
in
ljmp
lahf
in
sub
mov
int3
inc
fistps
xchg
and
cs
out
repnz
loope
mov
xchg
inc
inc
pop
sbb
ret
adcb
iret
cmc
push
fisubrs
pop
subl
pop
lods
inc
cmpsb
ret
gs
fisubrl
popa
fldcw
gs
lret
mov
ss
inc
dec
pop
idivb
out
lret
es
int3
arpl
sbb
dec
pop
ljmp
cmpsb
out
sbb
add
or
out
sbb
inc
and
ljmp
and
pop
jb
in
test
and
mov
jle
sub
in
mov
push
and
xchg
jb
xchg
add
scas
icebp
mov
mov
pop
cld
dec
out
sbb
mov
ljmp
jno
call
sahf
test
adc
push
mov
xor
imul
adc
nopl
gs
adc
aaa
adcl
push
xsha1
cmpsb
mov
mov
imul
arpl
sub
mov
or
dec
cmc
adc
push
jmp
imul
and
sub
sbb
lock
push
mov
mov
imul
aas
sub
rcrl
dec
dec
out
push
das
movb
gs
lahf
pop
std
cltd
roll
es
jl
inc
push
insl
movsb
cmp
sbb
inc
jmp
or
push
dec
loop
mov
sbb
mov
xchg
cmp
enter
and
rcrl
repnz
dec
fbstp
inc
adc
fmuls
xchg
movsl
or
xchg
call
jmp
loopne
inc
pop
sahf
ja
loope
in
dec
in
xor
lret
imul
adcl
push
mov
dec
ret
daa
mov
notb
inc
fldl
pop
mov
fisttpll
movsl
push
js
cwtl
lods
add
push
push
out
xchg
mov
add
fidivrl
or
mov
cmp
or
mov
shll
fiaddl
unpckhps
cwtl
inc
cmp
int
rolb
add
popa
clc
push
loop
adcl
jle
sbb
outsb
dec
mov
cmc
mov
scas
push
ljmp
jno
xor
aas
dec
push
inc
fadds
out
xchg
xchg
or
or
or
pop
sahf
pusha
xlat
jmp
or
or
or
pop
movsb
push
add
negl
mov
adc
xor
ljmp
ret
dec
out
pop
rcrl
jge
mov
fbstp
rcrb
xchg
xor
sbb
or
mov
push
push
lds
lahf
es
push
push
push
mov
int
pop
add
push
push
push
sbbb
lret
push
popf
stc
cltd
clc
int3
and
pop
push
out
lret
pop
icebp
stc
cwtl
xchg
push
pop
je
leave
push
jmp
cwtl
dec
in
and
jno
push
int3
arpl
popf
push
xchg
push
push
and
cli
popf
sbbb
and
dec
mov
movsb
fs
fsubrs
dec
fistps
push
jae
ljmp
sbb
pop
push
loope
daa
pop
je
pop
mov
roll
testb
mov
or
movsl
daa
rclb
lods
inc
hlt
jbe
dec
movsb
adc
mov
xrelease
xchg
adc
xchg
mov
movsb
cwtl
add
pop
xor
sub
jmp
sbbb
cmp
cwtl
imul
ja
sbb
inc
inc
lret
xor
stc
rcll
mov
inc
mov
dec
jmp
cmp
push
jno
cmp
inc
mov
mov
and
fbstp
scas
mov
dec
call
inc
xchg
push
ljmp
sbb
call
leave
fcomp
jbe
pop
jns
mov
sub
dec
fwait
sbbl
adc
popf
xor
add
and
out
outsb
push
push
xchg
sub
mov
mov
jo
mov
aas
jb
cwtl
mov
jns
jle
adc
inc
jnp
jbe
shrl
jle
pop
scas
adc
mov
sub
jg
hlt
lods
sbb
aad
jl
fs
cwtl
das
punpckhwd
hlt
dec
lea
out
push
push
push
fwait
sbb
leave
dec
lret
rcr
mov
pop
mov
push
in
dec
pushf
daa
mov
push
dec
fwait
xor
aas
dec
lods
jnp
loope
jb
adc
addr16
insb
or
cli
out
lahf
sbb
fidivl
int3
arpl
mov
ret
inc
mov
pushf
cmp
in
in
test
inc
inc
fidivl
fnsave
in
test
repz
loop
dec
stos
inc
jge
repz
ret
pop
fcomip
jg
daa
push
mov
fs
cltd
xor
hlt
arpl
sub
xor
sahf
mov
sbb
popa
or
hlt
adc
fsubrs
imul
or
lea
mov
jo
stos
movsb
jecxz
call
cmpsb
add
ja
aam
sahf
xor
mov
jo
lods
movsb
sbb
mov
out
jo
aam
sbb
mov
mov
jno
movsb
mov
insl
adc
notb
pop
mov
dec
mov
sbb
outsl
push
jecxz
stos
inc
xchg
adc
mov
in
xor
dec
in
test
data16
mov
sahf
pop
ret
sbb
hlt
sub
push
inc
jnp
fsubrl
pop
repz
mov
mov
push
ss
lretw
ds
xchg
pop
push
insb
addr16
mov
shll
and
push
sub
jecxz
lds
mov
daa
aas
push
test
test
nop
add
lds
aas
repnz
sti
xor
fs
push
movsl
push
mov
fs
sti
aaa
insl
data16
sub
shl
hlt
sub
xor
pop
mov
pop
cmc
stc
push
jae
aas
daa
dec
loope
loope
xor
je
add
xchg
sub
cwtl
das
sbb
push
shrl
sbb
je
xlat
add
cmp
ret
in
popf
pop
lret
sti
mov
cmp
out
popw
int3
outsb
add
inc
sbb
lds
aam
cmp
sbb
pop
pusha
jo
mov
ret
cmp
lods
add
lret
and
pop
insl
xchg
sub
mov
sbbl
cmp
mov
pop
nop
jl
add
leave
cmp
decb
mov
cmp
pop
out
jb
xchg
cmpsl
mov
enter
add
xor
test
push
xchg
fs
test
dec
fidivrs
in
sub
dec
sbbl
push
xchg
lahf
fwait
shr
int3
rorb
cmc
out
xor
movb
js
gs
xchg
lcall
loop
fnstenv
add
sbb
inc
inc
pop
jns
mov
test
inc
pop
xlat
in
jae
sbb
js
sub
sbb
adc
jle
xchg
test
shl
das
inc
adc
xor
xor
iret
data16
pop
repz
xchg
or
sub
sbb
mov
jcxz,pt
insb
test
test
mov
fsubl
or
pop
jge
add
bound
scas
sahf
add
add
fstpt
in
test
int3
arpl
int
push
inc
jo
jns
lcall
lret
jb
cli
dec
sbb
dec
mov
mov
push
repnz
jle
std
mov
mov
cmp
cmp
jge
jae
mov
cmp
shll
xor
xlat
insl
sbb
dec
jg
stos
jp
das
mov
jb
fwait
mov
xor
gs
jns
mov
push
xchg
jge
outsb
dec
cli
xor
mov
loop
dec
call
mov
aam
sub
mov
cmp
push
push
in
aad
lcall
addb
fnsave
leave
lea
xor
bound
inc
stos
dec
mov
js
pop
rorb
nop
mov
mov
adc
roll
sub
and
mov
push
mov
dec
push
sbb
inc
pop
sarb
push
sbb
and
popa
repz
sarl
popa
leave
outsl
add
popa
daa
in
xchg
call
add
xor
push
jns
testl
sub
push
or
dec
lods
pusha
push
cmc
xor
cmp
int
mov
je
sarl
aam
xchg
test
aas
jecxz
push
inc
les
push
movsl
fwait
sub
jmp
mov
es
push
jp
mov
push
js
pop
stos
push
or
inc
int3
icebp
sbb
push
out
push
mov
xor
pop
pop
shlb
jecxz
popa
daa
inc
fisubl
test
out
movb
movsl
cmp
xor
mov
xchg
pop
push
shlb
cmp
push
dec
sub
fmull
out
inc
mov
cmc
mov
mov
jg
cs
jns
pop
lret
adc
insb
cmc
and
mov
dec
mov
hlt
adc
out
adc
imul
ja
lock
roll
cmpsb
push
aam
mov
int3
fists
adc
add
xor
out
loop
xchg
iret
filds
mov
adc
imulb
ss
aas
push
mov
clc
sti
xor
ds
cmpsl
sbbb
xchg
testl
jmp
jb
stc
aaa
mov
pop
cli
dec
mov
popf
fs
sbbl
inc
mov
fsubp
js
les
xor
out
push
sbb
imul
repnz
loope
pop
js
dec
inc
dec
push
cs
lea
es
mov
mov
cld
inc
xchg
daa
jne
jns
mov
mov
stos
insb
lcall
orb
outsb
adc
dec
addl
push
sbb
in
orb
aas
add
arpl
xor
xchg
repnz
clc
push
mov
repnz
lret
cmp
adc
or
mov
std
sub
xchg
xchg
jne
iret
push
test
jle
pop
hlt
mov
aad
sub
push
mov
pop
repnz
cmp
push
mov
or
and
fwait
mov
andl
sbb
dec
sub
jle
add
push
mov
repz
adc
inc
jmp
lods
lcall
lcall
sub
out
xor
popa
js
sub
fcoms
fldl
sahf
movsb
pop
and
lea
pop
inc
xchg
xchg
imul
xchg
fbstp
xor
mov
sbb
pop
mov
xor
push
mov
gs
ljmp
jmp
mov
out
xchg
cmp
sti
mov
enter
pop
repz
lea
in
dec
cmpsb
pusha
dec
nop
cs
lods
pop
push
push
out
ds
mov
test
popf
xchg
inc
jb
arpl
jb
or
fs
cltd
sub
and
jae
sarl
pop
insl
xlat
arpl
adc
dec
mov
sti
bound
cmp
lcall
jmp
mov
add
adc
out
add
cld
push
sub
test
cld
std
sub
mov
sbb
int3
rorb
lock
or
daa
lods
cmpsb
dec
cwtl
add
aad
mov
test
sub
mov
inc
inc
fisttpl
push
xchg
add
sub
dec
ret
pop
and
testb
addr16
pop
mov
sub
mov
aad
add
sub
pusha
or
mov
jmp
lods
frstor
sbb
or
and
and
out
outsb
pop
adc
add
add
pop
sub
fbstp
adc
jns
inc
mov
imul
and
push
pop
cmp
movsl
cwtl
lidtl
in
push
popf
push
mov
add
stc
xor
dec
mov
add
mov
cmp
imul
jbe
xchg
lret
xor
in
pop
rcl
cs
leave
push
adc
xor
andb
jo
xchg
into
add
and
je
into
bound
in
xchg
mov
stc
test
jp
inc
into
data16
sbb
sub
lea
testb
pop
sub
pop
out
push
mov
push
add
push
add
aam
shlb
testl
dec
push
pop
add
outsl
xor
add
andl
fdivs
ret
mov
dec
lahf
mov
bnd
lds
js
xlat
movsb
mov
pop
rcrl
call
inc
fsubr
in
xor
mov
clc
daa
std
mov
and
mov
test
or
mov
in
test
aam
add
or
fs
fidivl
lock
lds
cmc
out
ja
flds
jge
jbe
leave
aas
loopne
pop
ret
loop
scas
orl
call
daa
fstpt
jo
sub
dec
mov
or
clc
cmc
cmp
cmp
push
ret
mov
mov
popa
imul
jbe
pop
push
inc
xor
ss
jp
xchg
pop
cld
sub
cmpsb
cmp
adc
cmp
add
and
cs
push
mov
lcall
mov
pop
adc
inc
xlat
in
or
iret
pusha
imul
nop
mov
cs
mov
mov
add
mov
xor
inc
add
popa
cltd
fiadds
dec
jg
push
ja
pop
pop
jne
inc
inc
pop
mov
sbbl
jbe
inc
cmp
add
or
xor
pop
out
cwtl
xor
adc
jp
mov
add
sarb
hlt
dec
mov
pop
divb
ret
xchg
push
adc
sarl
mov
daa
mov
call
fadd
sbb
sbb
in
add
loope
loop
sbb
push
push
sbb
pusha
pop
rclb
push
in
xor
mov
xchg
pop
mov
in
mov
jmp
sti
xchg
loope
mov
std
pushf
test
cmp
in
adc
ljmp
int
out
mov
out
push
outsb
or
loop
lret
sub
mov
lret
push
mov
adc
ds
mov
mov
sbb
xor
sub
jns
insb
dec
ljmp
fldl
daa
pop
or
test
pop
ja
mov
enter
push
iret
xchg
cwtl
call
jno
jg
pop
int3
and
les
jge
cmpsb
cmp
sahf
dec
mov
stos
std
das
adc
sbb
lret
fsubrl
lds
mov
mov
or
stos
xchg
cmpsb
fs
pop
outsb
add
mov
and
or
cmp
sahf
enter
fdivs
sarl
cltd
stos
outsl
sub
jmp
scas
retw
sti
aam
rclb
pop
dec
hlt
push
jecxz
pop
add
jo
and
jecxz
or
push
roll
jb
or
push
adc
cmpsb
jl
cs
cmc
and
dec
inc
lods
jo
inc
lods
fs
xor
insb
sbb
mov
sti
mov
iret
xchg
dec
xchg
adc
out
sbb
sahf
jge
and
mov
outsb
insb
sub
dec
sub
stos
addb
inc
adc
stc
xchg
rolb
inc
lret
fwait
push
inc
mov
jno
pop
iret
mov
sbb
fimull
or
lock
test
sub
clc
scas
xchg
ficomps
in
adc
aad
je
jge
cli
ss
in
fimuls
mov
js
aad
pop
out
mov
xor
push
xchg
jp
push
incb
ret
push
popf
popa
test
js
out
adc
pop
mov
flds
lds
popf
inc
inc
fsubp
mov
adc
sbb
push
sub
mov
shlb
add
jecxz
ror
dec
enter
xor
aad
iret
js
ret
dec
lret
inc
xor
xor
mov
loop
mov
push
add
hlt
xor
pop
std
xchg
inc
into
fists
fs
mov
mov
repnz
xchg
iret
jo
stos
imul
dec
out
or
aaa
jmp
out
add
enter
lret
into
sbb
lret
movsl
in
mov
aad
push
movl
xor
or
fstl
and
adc
push
repz
pop
int3
daa
out
jo
stc
and
and
arpl
mov
arpl
loope
pop
mov
repnz
imul
xchg
pop
pmaxub
mov
lret
sub
rorl
add
aaa
jmp
jg
repz
pop
adc
outsl
imul
rcll
inc
movsl
jae
mov
clc
test
in
fstpl
popa
mov
xor
aaa
notb
rolb
shl
out
shll
jbe
push
mov
mov
cmpl
inc
int
and
inc
faddl
stos
stc
push
adc
les
sbb
cmc
dec
pushf
cli
nop
fnstenv
test
fimuls
test
add
popa
cli
arpl
xor
jne
jns
xchg
xor
scas
test
dec
mov
stc
adc
jg
sbb
fisttpll
mov
repnz
pop
lds
jo
or
aaa
mov
add
pop
mov
ljmp
or
pop
xchg
push
jmp
or
bound
adc
xor
dec
aad
push
lods
rolb
rorl
bound
dec
mov
dec
loope
xchg
leave
inc
push
popf
das
xlat
das
jno
outsl
push
xchg
jp
xchg
js
push
out
cwtl
cltd
xchg
lea
sbb
lock
adcb
adc
or
jl
mov
or
pop
ret
mov
inc
ret
sbb
xchg
cmp
or
cmpsb
xchg
jne
rcll
in
xchg
mov
push
out
aam
adc
mov
xor
fstps
and
jl
push
push
fisubrs
aaa
cmc
stos
jle
push
sbb
jle
cmpsb
pop
pop
sti
inc
insl
sbb
push
mov
mov
xchg
test
mov
pop
movsb
fbld
adc
popa
lret
push
jmp
je
lock
mov
push
and
stos
jbe
outsb
mov
das
hlt
pop
xchg
imul
sub
orb
nop
mov
nop
mov
out
add
sub
stos
add
and
not
push
add
or
in
hlt
sub
movsl
mov
call
into
and
cmpsb
int3
arpl
fucom
daa
lret
call
inc
or
mov
ljmp
xchg
pop
loope
movsl
pop
pop
icebp
jno
loopne
aam
stos
sbbl
xlat
dec
mov
adc
ret
add
in
inc
xchg
inc
lret
or
arpl
xchg
das
adc
jmp
mov
adc
es
add
add
fistl
aas
cmc
mov
gs
mov
or
jg
mov
mov
jnp
int
jne
dec
inc
xchg
jo
xchg
xchg
and
xchg
aam
test
cmp
lods
pop
sub
pop
shl
push
aad
dec
cmpsl
sub
repz
pop
iret
adc
jmp
fisubs
add
aad
jmp
into
notb
repnz
shrb
jmp
mov
movsl
out
mov
inc
roll
loopne
xor
iret
push
insl
inc
jnp
pop
sub
pop
lret
in
aam
inc
ret
imul
pop
jmp
or
call
mov
in
mov
mov
xor
mov
bound
out
jg
in
push
mov
leave
jns,pt
stos
pusha
lods
dec
loopne
push
lcall
mov
insb
iret
fiadds
mov
ljmp
sbb
out
je
lods
stos
cld
xchg
std
into
inc
test
std
test
pop
stc
xchg
push
aam
stos
ss
sti
insb
sub
repnz
cli
sbb
rcrl
repnz
repz
add
pop
cmpsl
mov
std
xchg
mov
in
ja
popa
fwait
mov
out
mov
mov
cmpsb
cmp
sbb
das
push
loope
jo
rcll
cmp
inc
mov
lea
cli
bnd
mov
fnsave
inc
into
xlat
or
sbb
adc
inc
fdivr
ror
xor
mov
filds
jg
std
fidivs
cmpsl
dec
ret
mov
mov
dec
repz
int
les
fists
lea
aas
out
andl
cmp
add
xor
jecxz
xchg
jb
xor
in
das
divl
loope
mov
cld
xor
mov
xchg
clc
fidivs
ret
fstpl
pop
lods
in
sbb
pushf
pop
out
inc
adc
rcrb
test
adc
scas
sub
stos
xchg
rorb
aad
cmpb
cmpl
mov
lock
fimull
in
test
jle
bound
pushf
nop
jle
popf
xchg
xor
lods
add
std
in
dec
mov
scas
outsl
push
scas
pop
push
das
test
push
lcall
and
push
sub
xor
inc
mov
aaa
jmp
xorl
stos
test
addr16
lahf
mov
pop
push
js
mov
or
xor
dec
jg
ss
dec
cwtl
andb
arpl
jno
push
xchg
mov
test
lcall
pop
test
dec
pop
popl
inc
cli
and
push
or
cwtl
sbb
repz
inc
dec
fiadds
push
lock
pushf
jg
adc
cmp
testb
fisubrs
test
lcall
loop
test
cmp
test
cli
sub
arpl
in
fcmovne
pop
mov
filds
and
sbb
push
ljmp
inc
mov
pop
xchg
push
lcall
and
jl
icebp
dec
jmp
mov
ss
and
inc
orb
jg
in
or
ljmp
xchg
pop
mov
pop
sub
push
inc
or
sbbl
sub
cwtl
test
push
push
cs
addr16
xor
mov
jp
outsl
push
push
icebp
sub
inc
faddl
imul
xchg
arpl
dec
mov
je
xchg
repz
test
outsl
mov
mov
ljmp
jns
test
xchg
outsl
and
stos
inc
nop
xlat
mov
sbb
or
idivb
outsl
lahf
ss
mov
xor
leave
mov
xlat
dec
mov
in
test
adc
orl
mov
pop
lret
cmp
fildll
fidivrl
sbb
lahf
daa
pushf
inc
xchg
pop
adc
ret
ret
into
fsubs
sub
sti
lea
in
nop
xor
sti
push
jecxz
pop
mov
add
xor
sarb
xlat
cmp
jl
xor
jns
add
lock
out
push
xlat
ds
test
or
mov
dec
jecxz
cwtl
popf
mov
test
sbb
cmp
fs
inc
xchg
and
mov
lea
fcoml
icebp
pop
cmc
lcall
loope
or
or
adc
inc
mov
ret
scas
gs
test
ret
popf
jecxz
mov
repz
xchg
aad
push
add
loope
xor
cld
stos
pusha
jmp
dec
fcmovnb
xchg
jp
xlat
mov
test
ret
aad
outsb
mov
or
insl
lahf
mov
sti
jp
ret
sub
xlat
pop
rol
pop
mov
pop
ret
fstps
inc
into
gs
mov
add
mov
stc
xor
stos
mov
incb
int3
inc
es
lahf
xchg
arpl
xchg
inc
pop
int3
xor
loopne
or
das
mov
dec
inc
loop
popa
inc
fiadds
xorb
push
lods
pop
insb
xchg
mov
flds
dec
lea
test
push
mov
jecxz
adc
stos
rorl
adc
sub
add
xlat
fdivrp
xchg
adc
jmp
mov
and
add
add
sbb
stos
test
cli
repnz
mov
scas
adc
addr16
xor
xor
mov
std
and
movsl
xchg
addr16
pop
jecxz
adc
test
sub
dec
mov
push
enter
jp
addl
mov
jo
outsl
mov
ss
cmp
cmp
pop
mov
out
ja
dec
mov
adc
mov
pop
les
les
push
push
cmpsb
test
aaa
mov
sbb
push
mov
loopne
sbb
jmp
std
and
xchg
xor
adc
test
dec
data16
roll
out
test
bound
dec
lods
dec
aam
cmp
jg
sub
lret
pop
insb
push
adc
jno
insb
ss
je
dec
rorl
adc
cmpsb
sbb
ljmp
and
fmul
cmpsl
xchg
ficompl
add
das
fsub
inc
out
jle
dec
sahf
adc
push
xchg
sbb
jle
sbb
cmp
xchg
push
mov
xchg
lea
sbb
bound
out
dec
cmc
roll
repz
mov
or
xor
dec
aam
imul
adc
dec
xchg
aam
adc
sub
rorb
push
in
mov
imul
sub
dec
mov
or
mov
xchg
xor
test
fwait
sub
and
faddl
loope
cmpsb
rcll
sbb
adc
sahf
movsl
mov
xlat
sub
in
out
sub
outsl
mov
sbb
sbb
lods
repnz
jmp
jp
ffree
cmp
ficompl
lock
and
sar
lods
jae
and
shr
test
mov
pop
xchg
xchg
nop
or
push
xchg
les
mov
jp
cmp
or
je
dec
or
popf
xor
push
ljmp
push
xchg
js
sbb
sbb
cld
jae
lcall
iret
cmp
bound
bound
dec
movsl
push
mov
sub
aaa
pop
lods
jo
jp
add
ljmp
jg
jmp
mov
nop
ret
lock
sarl
xlat
sahf
test
movsl
loop
repz
fisubl
push
mov
cmpsb
fimull
lock
daa
fimull
pop
mov
fstl
sbb
mov
sbb
and
xor
adc
add
hlt
aaa
les
mov
dec
fldl
iret
dec
mov
js
das
inc
ret
mov
lahf
sbb
jbe
and
jns
sti
mov
cmp
mov
jmp
fcomi
or
imul
adc
cmp
popf
jae
jg
ljmp
push
or
cltd
and
add
filds
in
push
lods
sbb
ds
mov
cmp
shll
lret
sbb
sti
add
mov
sbb
nop
or
and
ret
in
jmp
fdivp
daa
fnstcw
fistl
inc
add
inc
fisttpll
adc
mov
xchg
data16
adc
inc
cmp
outsl
fwait
push
insl
cmp
or
xlat
imul
icebp
xchg
and
jg
mov
in
pop
icebp
mov
sarb
jmp
or
in
stos
fdivrl
mov
sbb
clc
and
xchg
outsb
lahf
sbb
iret
arpl
in
pop
pop
adc
add
testb
xchg
adcb
popf
add
cld
test
sbb
mov
ljmp
scas
in
das
mov
clc
or
jg
in
dec
and
leave
insb
je
dec
fnstsw
mov
call
lret
iret
nop
psubb
les
jg
fmull
inc
xlat
punpcklbw
out
sub
inc
ja
push
loop
xor
addl
sub
shlb
mov
test
push
jb
mov
std
cs
mov
stc
ds
icebp
xchg
sbb
add
sbb
pop
popf
sbb
jbe
mov
std
xchg
sahf
adc
xchg
inc
mov
push
mov
adc
roll
cmp
out
pop
out
xchg
pop
pop
repnz
jns
mov
xchg
sub
lods
xchg
ficomps
dec
pushl
push
test
lock
push
movsl
xchg
sub
sub
loope
popf
dec
loop
dec
push
xor
sahf
out
sarb
mov
andl
js
imull
xchg
lcall
test
imul
jle
daa
mov
rclb
lret
xor
add
movsl
push
jmp
xor
dec
add
add
inc
xlat
int
scas
inc
push
out
pop
cmc
pop
jns
fs
cmp
sbb
js
subl
cld
imul
arpl
adcb
xchg
add
push
jmp
leave
pusha
cmpsl
cmp
insb
enter
in
jl
pop
push
pop
push
inc
lcall
cwtl
clc
fidivl
push
popa
clc
xchg
aas
insl
add
mov
sbb
cltd
dec
sarl
rolb
and
stos
adc
inc
lret
jle
std
fs
jae
xchg
jno
fldcw
jmp
adc
gs
jb
and
inc
push
loop
mov
clc
mov
dec
mov
pusha
mov
push
xadd
data16
cmp
out
adcb
jp
pop
sbb
out
mov
sub
int
or
jge
adc
inc
cmc
lret
mov
iret
std
add
xchg
out
mov
xchg
sub
and
add
inc
inc
push
mov
ret
push
xchg
push
imul
push
lods
add
dec
pop
dec
aas
arpl
shrl
clc
popa
inc
sbb
mov
xchg
pop
dec
insl
ret
ret
sbb
scas
fisubrs
sbb
test
cmp
fs
xlat
int
and
es
shlb
push
cli
idivb
insb
xchg
repz
add
popf
test
fldt
xor
and
dec
dec
mov
orb
or
sbb
mov
popa
mov
popa
add
mov
sbb
cmp
xor
xchg
fdivrl
test
out
popa
pop
int
fcmovbe
loopne
and
loopne
loope
inc
adc
lods
pop
add
movsl
int
sbb
push
test
sub
cld
cmp
fidivrs
inc
adc
movsb
or
xor
jmp
adc
push
mov
adcl
push
in
mov
and
jg
fdivrs
or
ret
mov
sbbb
xchg
push
jp
jo
or
jo
outsl
mov
ds
xchg
or
xchg
cmp
fdivs
lcall
in
mov
jge
andl
iret
in
add
xchg
or
push
cmc
fwait
mov
jne
jns
iret
and
push
stos
jne
jge
daa
test
pushf
or
sbb
test
mov
fcomps
jge
out
or
lcall
stos
ljmp
pop
and
sbb
popf
pop
lret
and
xor
mov
in
and
mov
push
cmpsl
mov
lock
mov
sbb
stos
sbb
fmull
int3
mull
sbb
xor
or
test
sbb
aas
popa
mov
shrl
into
cmp
mov
pusha
jecxz
push
sub
mov
rep
add
cmp
testl
and
loope
mov
stos
jnp
sbb
mov
jp
imul
sbb
int
arpl
out
sahf
cmc
lahf
ss
data16
xor
mov
cli
fs
lods
repnz
in
xchg
xor
add
popa
jb
mov
jb
sub
mov
adc
mul
inc
adc
les
mov
cmp
es
pop
icebp
in
and
jne
aas
pop
jns
mov
lods
daa
pop
imul
inc
xor
aas
push
sbb
scas
nop
jo
sub
xor
mov
hlt
divl
xor
fidivrs
xor
les
in
sbb
xor
es
add
push
aad
sub
sbb
ficoml
cltd
inc
mov
hlt
pop
add
pop
add
push
xchg
sub
movsb
adc
mov
inc
negl
adc
andb
xor
pop
aas
or
inc
jle
in
insl
repz
sub
push
jp
movaps
stos
mov
jne
pop
cmpsb
cs
pop
addl
hlt
cmp
pop
cmp
mov
mov
call
cld
pop
int3
rcrl
popa
add
cltd
test
mov
repnz
ret
mov
push
jg
int
pop
stos
xor
pop
mov
sub
inc
movsl
sub
inc
ficoms
daa
or
int
pop
cli
pusha
push
jge
aas
and
sub
iret
pop
adc
add
add
stc
in
mov
sbb
xchg
aaa
es
movsb
daa
test
stos
xor
and
cwtl
inc
fwait
ljmp
fisubrs
cmp
or
roll
adc
insb
push
loope
loopne
movsb
sub
mov
lret
subb
dec
adc
roll
fs
cmpsb
sub
stos
inc
pop
cmp
aam
mov
cmp
mov
stc
arpl
cmpsb
jo
mov
pop
shlb
pop
add
and
aas
jecxz
xor
sub
pop
inc
rcl
jl
xchg
ret
mov
cli
push
test
push
or
dec
adc
pop
jnp
adc
daa
test
inc
cmpsl
sub
and
int3
decl
push
stc
and
xor
dec
pop
dec
xchg
cmp
mov
fs
into
xchg
in
cs
xchg
inc
xchg
lods
leave
mov
les
pop
rcll
in
ja
orb
cmpsl
ss
xchg
sbb
dec
iret
int3
mov
push
pop
lds
int3
adcb
and
xchg
sbb
iret
int3
mov
lret
in
or
xchg
out
outsb
insb
leave
sti
pop
dec
jbe
cmpsl
ret
xchg
or
xchg
sbb
adcb
and
lea
rcr
mov
in
shlb
mov
or
push
add
clc
add
ret
pop
cld
mov
mulb
rol
xchg
cmp
mov
add
mull
orl
aam
push
outsl
jmp
fisubrl
mov
movsl
ds
add
inc
adc
pop
repz
daa
mov
in
adcl
xor
ficompl
aas
pop
xchg
scas
sub
stc
aas
lcall
sbb
xor
xchg
sbb
dec
pusha
jns
xor
sub
mov
or
push
popf
cmp
rclb
movb
into
ret
inc
stos
pop
lcall
inc
dec
or
icebp
sub
push
xlat
xchg
inc
adc
dec
add
dec
cwtl
or
sub
xor
mov
push
inc
adc
sti
les
mov
ret
xchg
cmp
cld
pop
xor
loopne
cmc
das
or
or
pop
mov
jns
cmp
lret
mov
mov
mov
jmp
enter
sbb
xchg
push
or
adc
cmpsl
xor
clc
pop
mov
adcl
int
mov
xchg
loope
mov
mov
ljmp
inc
push
clc
pop
ss
adcb
dec
xchg
xor
pop
loop
mov
mov
rorl
int
aad
aaa
inc
enter
popf
adcb
int
mov
out
mov
hlt
fcomps
push
inc
or
inc
xchg
cltd
inc
icebp
xchg
adcb
sti
push
jo
or
insb
insb
cmp
cmpsb
push
and
xor
adc
cmp
and
lret
scas
rcll
mov
stos
out
daa
lods
mov
movb
and
mov
mov
popf
mov
dec
mov
xchg
inc
mov
test
inc
xor
and
xor
xor
mov
xchg
inc
cmp
adc
std
scas
or
mov
mov
adc
xchg
mov
iret
pop
stos
jmp
jmp
testl
dec
adc
jo
cmpsb
dec
div
pop
mov
scas
popa
call
push
sarl
jnp
fs
cli
aaa
sahf
inc
jp
divb
cmpsl
jns
in
sbb
xchg
data16
mov
out
cmp
jne
in
dec
out
mov
and
imul
stc
jg
mov
jmp
filds
mov
clc
popa
leave
movsl
or
ljmp
out
jno
subb
mov
jle
push
inc
stc
pop
push
mov
stc
bound
or
imul
data16
xor
subb
sub
add
xchg
test
cld
data16
jl
cld
dec
flds
push
jb
pop
add
and
jl
leave
xchg
gs
sbb
orb
sub
jmp
sti
adc
sarb
jg
push
ss
or
sub
mull
pop
push
pop
je
aad
mov
aam
ds
negl
adc
test
pop
insl
lock
sarl
testb
sarb
enter
ja
imul
test
pop
test
pop
push
std
push
je
lea
test
int3
dec
inc
mov
jno
dec
pop
shll
pushf
inc
jnp
lret
xchg
mov
mov
mov
shlb
xchg
and
xor
out
das
scas
fistps
jae
mov
in
fstpl
es
inc
adc
test
aas
incb
dec
inc
call
mov
sub
inc
cmpsb
pop
sub
add
mov
dec
jo
dec
outsb
xchg
movsl
ss
jne
xor
cmc
lds
outsb
jmp
and
int3
sbb
je
sbb
js
push
aaa
movsb
mov
cmp
subb
aam
push
pop
enter
mov
in
dec
stos
sahf
cmp
xchg
in
insl
adc
sti
push
ljmp
inc
enter
daa
adc
xor
mov
mov
lock
test
cmp
shll
mov
jae
scas
sub
popa
hlt
xchg
lahf
mov
ror
fimull
pop
xchg
inc
jno
dec
or
jmp
sarb
xchg
cltd
ds
fnstsw
nop
cmp
mov
mov
xlat
int
cltd
lods
imul
mov
xor
cli
and
cmp
adc
lods
call
pop
mov
jno
push
jae
popf
jbe
jbe
ret
scas
inc
cmc
xchg
std
xchg
ret
push
xchg
cmp
adc
stos
xor
cmp
cli
cwtl
and
rcrb
fnstsw
add
xchg
sub
aad
in
add
push
leave
movsb
or
repz
mov
jecxz
push
jmp
cmc
xor
push
adc
mov
mov
in
orb
roll
dec
or
cltd
aaa
jb
pop
mov
mov
movsl
sbb
inc
mov
stc
pop
cmp
cwtl
das
fstpt
cli
popa
or
lock
xor
and
push
sti
addr16
mov
ja
mov
pop
pop
mov
mov
stos
mov
push
cld
loop
mov
adcb
sbb
pop
out
movsb
adc
cmp
sub
loop
xor
pop
lods
bound
inc
mov
fxam
adc
or
jno
xchg
addl
lea
iret
fldt
adc
mov
adc
pop
or
mov
sub
lret
fadds
mov
lods
sarl
or
push
or
pop
add
pop
add
mov
lea
mov
pop
push
mov
adc
fisttps
shll
and
mov
jne,pt
mov
xor
cmpsb
daa
addl
pusha
jo
negl
addr16
xchg
xor
add
inc
or
aad
cmp
dec
inc
enter
addr16
in
push
cmc
arpl
idiv
pop
insl
or
stos
and
or
fwait
aas
inc
rdmsr
ret
ret
sub
addb
stos
daa
pop
repz
xchg
dec
cli
cmp
outsl
push
adc
cli
ja
imul
js
push
sub
leave
push
lea
inc
repnz
lahf
fnsave
push
es
adc
dec
dec
or
ret
imul
jne
sub
dec
or
jge
imul
das
cmpsl
sub
xor
sbb
das
ds
dec
push
inc
xchg
xchg
cmp
pop
repz
push
jns
and
push
push
push
cld
sub
or
cmp
lcall
cmp
mov
lods
xor
icebp
sub
pop
inc
call
xchg
cmp
push
stc
xor
xchg
cmp
sub
jg
add
mov
push
leave
xchg
adc
call
cltd
xor
mov
sub
and
shrb
inc
pushl
push
sbb
inc
add
sahf
xor
pop
shll
sbb
into
xor
push
test
mov
add
xchg
jnp
sbb
jbe
pop
decb
fcomip
loopne
push
in
popa
pop
shll
xchg
sub
paddq
aas
lcall
adc
bswap
hlt
ja
mov
mulb
fisttpll
jmp
cmpsb
mov
ss
cmpsb
xchg
inc
sbb
clc
pop
push
jae
xchg
aaa
jnp
jl
das
pushf
ds
push
divb
xlat
andl
aas
es
or
mov
jae
cs
xchg
sbb
inc
enter
jne
rcll
and
inc
cmp
inc
or
push
inc
pop
adc
insb
neg
inc
sbb
iret
push
stos
xor
mov
sub
rcl
jle
push
shlb
test
shrb
cltd
dec
pop
xor
in
xor
outsl
jp
mov
mov
and
movsb
fs
insb
mov
mov
sbb
sbb
data16
push
add
fsubrs
lods
icebp
push
outsb
add
and
fildl
cltd
mov
inc
or
mov
sar
add
shl
fadds
sti
mov
sub
in
mov
adc
pushl
cltd
cmp
lds
int
push
in
addr16
cmpb
xor
movsl
gs
xchg
movb
jmp
xchg
cmp
cli
pusha
cmp
lret
xchg
shrl
jb
int
inc
imul
mov
or
sbb
lcall
decb
xchg
in
mov
movsb
jecxz
lock
xor
shll
scas
sbb
push
or
mov
mov
mov
cmp
repnz
xchg
in
dec
or
test
aam
mov
jno
jne
mov
sahf
gs
mov
sti
cltd
ret
xchg
fsubp
cltd
cmp
addb
pop
nop
fiadds
push
add
lahf
ss
and
cld
test
shl
out
je
mov
mov
add
pop
sbb
sbb
stos
lea
ss
fistpll
lds
stos
imul
roll
push
cld
cmp
or
imull
repz
dec
loop
cmc
pop
lcall
jo
and
xor
loopne
sub
xchg
or
push
cmc
data16
mov
pop
imul
inc
add
popa
mov
sbb
inc
or
rcll
test
sbb
loop
imul
xchg
jno
outsb
push
lret
out
insb
loopne
mov
dec
popf
sub
mov
pop
clc
sub
aaa
mov
les
rcll
xor
jns
cmpsl
push
and
cmpsb
pop
cld
stc
adc
clc
pop
jae
jae
test
mov
and
push
jb
inc
or
xchg
pop
xchg
movsl
sub
mov
mov
jmp
aas
mov
scas
adc
mov
mov
add
dec
adc
push
faddl
sar
push
mov
push
notl
bound
cwtl
daa
mov
mov
and
outsb
ljmp
fnstsw
insl
mov
dec
xchg
jne
cmp
mov
adc
dec
adc
jle
mov
out
jae
mov
add
rcrl
push
clc
inc
out
call
and
mov
fwait
sti
sbb
das
mov
mov
cmpsl
stos
test
mov
jns
nop
jns
push
iret
add
sarb
mov
xchg
lret
xor
pop
lahf
adc
cmpsl
jb
dec
push
xchg
insb
mov
loop
int
fmul
sbb
pop
neg
outsb
orb
loopne
jns
and
outsl
pop
inc
or
jle
mov
inc
cs
repz
jnp
xchg
sbb
push
lds
inc
add
test
scas
or
rcr
mov
mov
xchg
and
enter
mov
cmpsl
aaa
mov
leave
dec
mov
jmp
cli
sbb
hlt
popf
push
clc
icebp
out
les
sbb
pop
jle
fs
sub
mov
push
int3
test
mov
or
repnz
push
out
cld
or
cld
outsl
lcall
mov
sbb
lock
clc
arpl
mov
jecxz
icebp
pop
fcomip
mov
cmp
aam
ret
leave
loope
lock
mov
lods
clc
sbbl
mov
out
jg
mov
mov
and
arpl
rclb
push
xchg
and
ss
mov
cmpsl
mov
mov
ds
xor
fidivl
push
cmpsb
sub
lcall
adc
add
lds
adc
pusha
in
ret
inc
adc
inc
adc
insb
in
xchg
repz
movsb
cld
dec
adc
pop
cmp
mov
dec
cmpsl
ss
inc
jmp
xchg
xorl
rcll
ret
adc
inc
mov
fidivrs
clc
add
mov
je
fmuls
jp
push
mov
movsb
sbb
sarb
loop
repz
sub
xchg
xchg
pop
xchg
ret
in
sub
xor
mov
scas
in
jne
std
cmp
js
leave
xchg
pop
outsb
xchg
mov
sub
stos
and
pop
add
fmuls
ret
pushf
loope
add
insb
int3
inc
pop
mov
je
leave
pusha
ds
push
call
adc
iret
xchg
xor
sbb
mov
scas
jecxz
adc
out
cmp
fdivs
fiadds
and
jmp
cmp
push
jg
cld
xchg
xchg
sub
cmp
or
insb
or
mov
mov
mov
outsl
dec
es
test
mov
iret
or
push
mov
mov
sub
cs
inc
movnti
xchg
inc
mov
stos
daa
dec
scas
push
leave
add
repz
cmp
and
and
push
cmp
incb
sbb
fs
jbe
jb
push
hlt
aad
out
jecxz
mov
xor
lret
adc
jg
call
icebp
clc
pop
int3
aam
insl
jne
push
add
adc
xchg
cs
add
iret
nop
inc
idivb
add
dec
fstps
test
add
es
jbe
lea
push
cmc
stc
popa
out
push
jns
adc
loopne
pop
dec
scas
das
mov
arpl
lcall
jne
aaa
rcl
mov
fwait
xor
inc
cmovne
adcb
xchg
inc
mov
movsb
jo
jge
pop
clc
mov
dec
or
test
gs
loop
scas
sub
cli
xor
repz
mov
mov
mov
sub
insb
pop
xlat
push
das
xchg
or
or
loop
cwtl
pop
mov
add
orb
lea
xchg
aaa
outsb
xchg
jnp
xchg
mov
rorl
push
mov
test
ljmp
repz
mov
call
pushf
out
push
outsl
lret
in
iret
jp
push
leave
sbb
and
cmc
gs
mov
lds
push
pop
sbb
push
xchg
mov
mov
stos
popa
clc
mov
push
mov
mov
jle
push
enter
fidivrs
mov
mov
sub
mov
adc
push
roll
lahf
add
xchg
cmp
pop
xchg
cmp
adc
mov
xchg
andl
jns
xor
adc
jg
mov
mov
in
insl
pop
cmp
gs
pop
clc
or
push
xchg
sub
gs
aam
cli
sbb
and
dec
lahf
sub
in
dec
jae
lods
ficomps
inc
or
das
test
inc
in
orl
mov
mov
and
inc
mov
dec
or
push
push
rcrb
push
mov
fwait
movsl
cmp
pushf
testb
and
mov
lods
jns
xchg
xor
shll
test
shl
ss
gs
and
pop
mov
mov
out
or
fwait
cmp
push
sbb
mov
push
xor
jge
inc
cmp
xchg
pushf
bswap
jge
mulb
push
lcall
subl
mov
loope
fstl
iret
loope
add
mov
xchg
inc
push
mov
dec
xchg
push
aad
cltd
sbb
cmp
fnstcw
sub
or
push
std
inc
push
rorb
jmp
test
in
sahf
stc
enter
mov
mov
fmul
addb
hlt
push
insl
idivb
scas
cmc
pop
scas
aad
inc
jno
inc
or
jne
popf
inc
mulb
fwait
pop
out
int
mov
sbb
dec
or
and
loop
lods
cmp
pop
pop
inc
sub
jmp
cmp
dec
or
scas
cmpsl
push
negl
mov
inc
or
cmp
sbb
push
cld
mov
xor
pop
cmp
addr16
nop
cmp
out
les
sbb
jg
jb
dec
adc
jns
test
nop
cmp
mov
sahf
inc
clc
pop
ret
out
add
lock
dec
adc
xchg
inc
repz
in
lds
or
jno
pop
inc
pop
insl
cltd
mov
dec
jl
arpl
lahf
push
mov
movsb
jae
js
mov
xchg
pop
scas
stos
daa
fisttps
mov
icebp
daa
inc
adc
in
jne
add
xchg
cs
ret
imul
rcll
mov
aam
repnz
mov
mov
cmpsl
cli
dec
adc
mov
cltd
cmp
dec
cmp
dec
pop
popf
cmp
repz
pop
dec
adc
jg
fwait
jmp
in
andl
push
sti
or
gs
insb
shlb
pop
adc
add
insl
mulb
mov
inc
rcl
adc
imulb
aas
popf
shll
pop
cmp
loope
jle
pop
add
ret
sbb
fcmovnbe
out
cmp
and
or
push
pop
aas
cmpsb
popa
sbbl
jb
dec
sahf
out
cltd
xor
ret
jmp
dec
adc
cwtl
shlb
roll
fsubrs
mov
in
pop
add
cmc
jmp
lock
in
fidivl
popf
lods
cld
mov
outsl
mov
out
mov
icebp
fwait
or
sbb
dec
dec
adc
js
cmpsl
sti
outsb
lock
jl
pop
cld
mov
loopne
inc
mov
adc
mov
xor
lahf
aas
test
std
popa
pop
sar
lret
mov
mov
mov
imul
loop
mov
fxch
mov
loop
roll
stos
or
mov
inc
lea
nop
sub
jmp
jp
adc
inc
rorb
mov
xor
test
fnstcw
cli
and
xchg
les
mov
cmovs
fdiv
imul
jmp
repnz
pushf
pop
jbe
push
loope
sarb
cli
bswap
inc
shll
popa
popf
stos
sub
iret
pop
stc
divl
jnp
daa
push
pop
sti
or
loop
push
add
test
add
in
ja
imul
data16
int3
shll
inc
or
ret
mov
dec
and
mov
insb
lock
movsl
mov
mov
aad
pop
push
sti
mov
pushf
cmp
xchg
inc
rorb
pop
ja
adc
hlt
outsl
mov
out
mov
push
mov
push
mov
mov
mov
leave
pop
je
jb
pusha
repz
adcb
jmp
in
jg
inc
cli
adc
into
lcall
lock
imul
sti
pusha
cmp
sarl
sub
mov
ss
jo
sarl
data16
mov
data16
scas
repnz
incl
pop
add
hlt
outsb
in
jg
mov
mov
xchg
test
adc
into
xchg
sub
test
fisubl
mov
fs
jp
ja
jns
iret
jp
cmp
adc
mov
faddl
push
jo
mov
xchg
xchg
insb
adc
sti
xchg
and
out
jae
adc
xchg
cld
and
sarb
jmp
dec
cs
gs
cmp
subl
push
add
out
pop
out
jno
push
call
fmull
fisubs
add
push
insb
lock
lcall
mov
loopne
sbb
sbb
cs
test
pop
test
jns
in
bound
inc
daa
jl
push
lds
scas
negl
stos
sub
pop
aad
orl
sub
std
pop
jmp
hlt
insl
out
pop
ret
repz
shrb
mov
lret
stc
cmp
push
sub
imul
jp
fnsave
sub
or
loopne
out
jecxz
sub
pushf
inc
mov
lods
jge
les
out
inc
sbb
mov
lods
jne
push
xchg
shlb
ret
inc
idiv
bound
xchg
repz
jbe
fs
in
call
add
enter
jmp
add
enter
enter
and
sbb
jl
icebp
arpl
mov
lcall
es
sub
xor
fmuls
aad
test
rcrl
add
mov
adc
pop
ljmp
icebp
jg
jne
test
adc
movsl
pop
xor
pop
add
roll
push
aas
leave
pusha
outsl
out
cmpsb
pop
xchg
xchg
filds
or
push
sti
rcrb
jecxz
or
aam
pop
in
jb
movsb
cmp
or
pop
push
xchg
pop
cmp
add
pop
mov
mov
cmpsl
sub
ret
cmp
loop
push
add
aad
test
xor
or
into
fidivl
les
es
repnz
or
cmp
xor
lods
icebp
or
push
mov
scas
lods
xor
adc
je
inc
pop
add
inc
or
or
and
enter
xor
cmp
pop
imul
stos
adc
in
insb
imul
divl
jb
les
lahf
add
cmc
inc
pop
fnstsw
mov
lods
mov
mov
int
and
cmp
mov
xchg
jmp
dec
xor
add
and
cmp
mov
or
xor
push
fnop
or
or
fiadds
push
fcmovnbe
jle
mov
xchg
add
int3
pop
outsl
icebp
aad
mov
test
mov
lcall
mov
enter
xchg
adc
nop
cld
lret
sahf
call
mov
nop
pop
daa
pop
cld
xchg
mov
sub
xor
mov
inc
inc
xor
je
mov
fwait
push
flds
cmp
sub
mov
sub
lods
jne
mov
mov
out
xchg
mov
xor
and
push
mov
aad
hlt
or
stos
sub
dec
or
push
dec
xchg
insl
in
repz
xor
shr
gs
push
and
jecxz
sahf
xchg
pop
rclb
movsl
mov
xchg
lods
mov
ss
sub
mov
adc
loopne
mov
imull
stos
mov
scas
cmc
fs
jmp
pop
addl
xchg
adc
pop
fisttps
sbb
push
roll
loopne
loopne
jb
pop
xchg
fdivl
mulb
outsb
sbb
push
les
call
divb
cli
xchg
jns
ljmp
cmp
mov
movsl
loope
loope
jp
test
lock
jmp
jns
xor
adc
dec
dec
push
mov
aas
gs
sub
cld
cld
cmc
push
cld
jle
jmp
aaa
cmp
mov
jne
into
lea
lret
js
orb
pop
cli
dec
pop
pop
cli
sub
sbbl
jnp
sub
push
mov
lcall
or
in
popa
inc
sub
cmp
and
adc
filds
cmp
into
add
xchg
in
or
out
clc
stos
daa
jbe
iret
mov
in
roll
les
insl
pop
std
pop
jecxz
repnz
mov
xor
ss
pop
mov
pop
add
popf
inc
test
lcall
inc
adc
or
daa
adcl
imul
sbb
xchg
ja
aam
mov
jnp
xor
xor
lea
movsl
sub
jge
or
aaa
sbb
pop
scas
inc
fcmovnu
jl
popf
les
dec
adc
xlat
and
dec
je
push
test
adc
push
cmpsl
and
fldl
and
lea
xor
loope
dec
or
cld
mov
rcrb
mov
or
loopne
xchg
push
adc
inc
lret
icebp
pushf
lods
dec
jmp
mov
movl
push
add
movsb
sbb
sarl
sbb
xchg
mov
mov
int3
mov
cmp
sti
lds
mov
sbb
popa
cmc
push
xchg
stos
sub
fdivrs
xchg
pushf
push
or
mov
gs
shll
push
push
cmc
sbb
test
mov
cmp
inc
or
xchg
pop
add
fstpl
pop
in
inc
sbb
xchg
aaa
cld
dec
add
dec
out
add
mov
lret
mov
mov
pop
jmp
cld
push
testl
aaa
dec
unpckhps
outsb
icebp
or
ret
mov
mov
mov
and
jp
pop
jnp
pop
fcomps
or
push
cwtl
pop
jle
pop
rol
sbb
add
out
mov
dec
lods
push
add
imulb
sub
out
push
xor
or
dec
sub
je
xchg
push
mov
movsl
cld
jbe
and
mov
inc
lods
outsl
adc
sub
movsb
dec
or
mov
mov
call
fwait
cs
jno
sbb
inc
dec
or
rcll
and
fwait
aaa
fs
mov
push
cmp
sub
sarl
cmp
add
pop
stos
sub
push
cmp
dec
adc
inc
or
rorb
sub
push
add
lea
jns,pn
rcll
dec
adc
mov
sahf
or
sbb
dec
adc
cmpsl
and
sub
cmp
lds
aas
mov
sbb
jbe
jo
mov
push
sub
pop
das
sbb
mov
cmp
jb
jl
sbb
dec
dec
cmp
jle
call
jle
test
in
test
mov
xchg
sbb
and
ret
cltd
pop
cmpsb
xor
ret
mov
sbb
pop
movsb
das
fs
roll
int3
cmpsb
xor
pop
daa
mov
pop
mov
sub
int3
jnp
sbb
inc
jecxz
cmp
inc
xlat
jge
pop
pop
mov
adc
test
inc
mov
cli
addr16
or
movsb
sbb
out
mov
jbe
pop
mov
aaa
mov
xorb
les
xlat
js
test
les
addr16
js
fidivrs
jo
mov
out
in
jb
icebp
xor
int
fnstcw
pop
pop
mov
xchg
fnstsw
frstor
mov
cmp
stc
jo
cmp
inc
xchg
jl
push
fwait
and
shr
fcomps
into
push
clc
jb
scas
xor
call
lock
scas
mov
push
ja
jle
cmpsb
decb
out
jmp
cltd
inc
cmp
add
jle
rorb
shrb
inc
fiadds
shlb
int3
sub
adc
jl
negb
outsb
cmp
push
out
xor
cs
mov
add
mov
mov
xlat
imul
pop
mov
sbb
into
xor
add
adc
or
sahf
adc
jecxz
xchg
cmpsb
cmp
clc
scas
es
subb
lret
mov
shl
jo
je
cltd
push
jns
mov
insl
inc
cmpsl
xor
jb
int3
int3
and
popa
adc
insb
jge
dec
gs
xchg
inc
jns
cmp
pushf
sahf
cmp
stos
sub
rol
cmp
pop
pop
sbb
or
add
pop
pop
stc
sub
mov
imul
jnp
cld
in
test
test
imul
out
arpl
pop
pop
jmp
stos
sbb
in
cmpl
mov
inc
pop
push
in
or
pop
icebp
mov
lea
je
mov
sti
xchg
ficoms
cltd
aas
xchg
adc
mov
dec
je
lret
addr16
mov
arpl
jb
jp
adc
dec
dec
inc
adc
xchg
mov
sbb
push
lahf
ss
pop
stc
pusha
jno
mov
addr16
filds
sub
ret
cltd
arpl
popa
add
sbb
jno
push
push
clc
sub
inc
xor
xchg
lds
push
shll
daa
lods
outsl
jbe
repz
jle
push
push
lea
pop
daa
fldt
xchg
test
mov
lcall
insl
notb
jle
pop
pusha
mov
jnp
dec
into
std
sub
mov
cli
pop
add
inc
fldt
pop
in
push
adc
dec
xlat
ja
sub
int3
jge
jecxz
stos
mov
mov
mov
fcomp
jmp
and
or
testl
shr
add
mov
cli
sub
stos
mov
mov
bound
mov
pop
inc
test
mov
repnz
scas
aad
cltd
arpl
mov
dec
cwtl
add
push
sahf
mov
aas
in
sub
incl
pop
cmp
dec
loop
pop
in
mov
add
xchg
idiv
and
dec
push
aas
subl
sarl
jnp
adc
cwtl
inc
inc
cltd
xor
pop
mov
lcall
call
or
inc
repz
jp
mov
cwtl
das
loope
das
push
add
in
push
aad
mov
repz
fmull
test
xor
movb
dec
in
jecxz
or
imul
sub
cwtl
pop
inc
mov
jns
pop
mov
lcall
in
lds
pop
repz
inc
jecxz
jb
jp
movsl
xchg
add
clc
in
mov
sbb
aam
insl
aad
lahf
mov
mov
fstpt
or
cs
cs
data16
xchg
xorl
push
or
cmp
pop
mov
nop
jp
cmpsb
stos
mov
inc
jecxz
sub
pop
ss
dec
jecxz
push
out
mov
add
ret
mov
cmc
cld
and
dec
dec
inc
xlat
jg
lds
pop
cmc
sarl
jl
and
add
ja
and
lret
aad
jmp
insl
sbb
ds
mov
jnp
mov
cltd
xor
jecxz
adc
mov
in
push
insl
xchg
hlt
mov
fimull
test
pusha
dec
xor
jle
pop
mov
dec
in
aam
jnp
repnz
add
add
ja
and
lret
aad
jmp
pop
sbb
ds
jo
jnp
mov
les
mov
sbb
aad
imul
popf
xchg
mov
jp
or
adc
pop
fs
xchg
jg
dec
mov
dec
out
rcl
imul
add
push
pop
mov
mov
cmpsl
test
lret
sti
add
pusha
xor
dec
in
push
out
xchg
add
rorl
sub
inc
fdivrs
pop
lcall
jnp
lock
and
add
jne
and
enter
in
xlat
outsb
sbb
pop
cmc
aaa
cmp
mov
jl
mov
lcall
mov
out
push
insl
test
hlt
mov
test
pop
dec
xor
jl
pop
mov
dec
in
shl
jl
lock
add
daa
add
jne
and
enter
cld
jmp
pop
cmc
dec
cmp
jnp
jo
adc
ret
lcall
pop
mov
aad
push
outsb
pushf
test
mov
jp
or
adc
inc
sub
leave
xchg
jge
dec
scas
mov
out
rcl
imul
outsl
push
cmp
repnz
lea
scas
stos
inc
loopne
cs
lret
sbb
dec
push
call
add
mov
and
sub
test
inc
dec
inc
fnstcw
pop
cwtl
popf
pusha
test
out
jle
and
pushf
xor
mov
mov
loop
fsubrs
add
cmc
xor
push
jl
mov
lcall
std
mov
out
push
insl
addb
mov
fmuls
sub
inc
pop
dec
xor
jp
enter
dec
in
shl
jge
out
insb
add
es
push
inc
mov
jae
and
lret
sti
out
pop
sbb
in
insb
outsl
jge
mov
ret
hlt
fbld
mov
push
mov
aad
imul
repz
testb
adc
das
pop
bound
lret
mov
lods
mov
call
add
jo
cmp
repnz
mov
movsl
lods
lods
inc
ffreep
cs
lret
bound
sbb
dec
push
jmp
add
mov
out
clc
and
aas
inc
dec
inc
fidivrl
pop
xchg
pushf
popa
clc
int
in
jmp
or
lcall
and
scas
aas
loopne
fnstenv
add
xor
testl
mov
fbstp
lret
mov
call
addb
rcl
lea
cmc
adc
pop
inc
xor
js
leave
pusha
mov
dec
in
shl
jle
in
insb
add
and
mov
jno
and
leave
inc
fdivr
in
pop
pop
sbb
testl
jle
mov
rcrl
adc
ds
push
pop
repz
testl
inc
es
das
pop
popa
xor
xchg
jns
dec
stos
mov
jmp
incb
repz
mov
test
stos
lods
inc
ffree
das
cmc
dec
bound
pop
dec
in
push
jmp
add
mov
and
inc
inc
dec
inc
fidivrl
pop
xchg
lcall
call
or
cmp
popf
xor
pop
and
les
fnstenv
add
xor
testl
mov
fnsave
lret
mov
call
jg
outsl
push
mov
cmc
mov
aad
and
hlt
adc
pop
inc
xor
ja
leave
pusha
scas
cwtl
dec
out
iret
out
add
insl
add
and
and
and
ret
movl
push
sbb
dec
aaa
in
imul
mov
fsubl
mov
inc
cs
pop
fnstenvs
sbbb
mov
jnp
add
push
lods
ds
xor
nop
js
dec
stos
mov
jmp
std
add
xor
push
mov
test
fcmovnb
xor
hlt
cld
lret
bound
push
dec
out
dec
jmp
add
mov
mov
in
hlt
and
inc
inc
inc
inc
fidivl
enter
popa
clc
leave
mov
jge
ljmp
cmp
and
ret
fcomp
jecxz
jo
add
xor
testl
mov
lret
mov
call
jle
outsl
push
mov
testb
repz
and
stos
inc
pop
inc
xor
jbe
leave
pusha
lods
xchg
push
out
int
jle
jmp
push
popf
push
cmp
and
and
movsb
lds
mul
enter
popa
clc
dec
xor
jg
pushf
mov
mov
fisubl
mov
inc
sub
xlat
pop
fidivl
jle
cmc
scas
mov
adc
or
scas
cmp
lcall
jbe
dec
test
push
ljmp
jb
xor
daa
xchg
stos
mov
shll
repnz
int3
arpl
push
out
dec
ljmp
mov
mov
jmp
es
aas
inc
inc
leave
pusha
xchg
xchg
stc
mov
jle
call
push
popf
cmp
sahf
xor
mov
inc
loope
jno
pusha
imull
xor
jle
orb
xor
fidivl
or
mov
jmp
jl
jo
mov
testb
icebp
adc
and
lods
inc
pop
inc
xor
je
lret
xchg
push
out
int3
call
add
push
cmp
mov
les
cmc
loopne
pop
adc
stc
dec
xor
jge
imul
xor
or
mov
xlat
pop
arpl
jb
jl
cmc
lods
mov
nop
call
or
scas
cmp
lcall
je
dec
cmpsb
scas
push
jmp
insl
stc
add
xor
cmc
mov
sub
cmpsb
scas
inc
fdivrs
int
sub
push
out
dec
jmp
jle
outsb
add
shlb
daa
mov
cmp
pop
leave
pusha
nop
xchg
arpl
mov
jle
out
sbb
add
lahf
ss
push
and
mov
inc
loopne
jb
cld
pusha
imull
dec
jle
addb
xor
fnstenv
push
daa
sub
ljmp
jno
mov
testb
out
adc
and
xor
jb
lret
bound
lret
jmp
add
push
cmp
mov
ret
inc
fcomi
fmulp
pop
adc
arpl
inc
xor
jge
push
add
mov
lahf
ss
and
inc
sub
pop
fdivl
jp
cmc
stos
mov
xchg
out
jl
decb
sbb
push
pop
aaa
into
mov
push
movsb
lods
push
in
ffree
xlat
outsb
idiv
jae
xor
testb
insb
adc
popf
movsb
scas
inc
mov
int
sub
push
call
jl
outsl
push
xchg
popf
or
call
or
jb
lret
xchg
arpl
les
sbbl
xor
push
and
push
mov
jb
sti
popa
clc
sub
stc
nop
fs
jg
jg
pop
scas
mov
popf
xor
xlat
xor
push
sub
pop
inc
fnstenv
jl
or
iret
es
adc
inc
push
inc
xor
jno
lret
bound
leave
jmp
push
push
sbb
lea
outsl
es
mov
pusha
unpcklps
inc
xor
jle
sbbw
add
ss
and
aas
daa
inc
fcomps
fdivl
jns
imulb
lret
jge
std
push
sbb
push
pop
aaa
into
mov
push
mov
fsubrs
cld
jae
cs
mov
xchg
sub
mov
xor
out
cmc
int
daa
adc
inc
dec
jmp
jp
jo
xchg
fwait
or
out
daa
mov
cmp
inc
fdivl
lret
bound
scas
jmp
sbb
ss
ss
mov
fcmovnu
jb
cli
stc
sub
stc
nop
bound
jle
pop
scas
mov
sahf
xor
push
repz
ljmp
jno
lods
cltd
clc
lret
int
es
in
push
lods
sbb
ds
outsl
je
arpl
ljmp
sbb
mov
insl
daa
mov
mov
fcmovne
popa
or
cs
sbb
mov
aaa
jmp
or
fsts
fnsave
pusha
imull
leave
jle
sti
add
mov
sbb
xor
push
cmp
xchg
push
mov
ret
hlt
cli
je
sub
clc
sub
push
lods
lcall
lret
in
repz
gs
inc
in
cmpl
or
mov
es
sub
cmp
int3
arpl
ljmp
add
mov
push
daa
mov
mov
fcmovu
jae
clc
arpl
sub
cli
xchg
pusha
dec
sbbl
mov
lahf
ss
shll
int
icebp
mov
jmp
inc
js
or
lret
nop
daa
std
ljmp
push
cmp
int3
insl
jb
movsb
mov
mov
loopne
or
sbb
mov
imul
pushf
xchg
fucomp
fxch
bound
adc
inc
sub
sbbb
sbb
mov
mov
cmp
inc
ficoml
jne
jne
clc
cmpsb
scas
cld
xchg
loope
jg
stc
add
mov
sbb
rolb
cmpsb
push
out
xlat
rcr
repnz
jne
sub
nop
inc
dec
xchg
sub
pop
scas
cwtl
sahf
mov
sarb
iret
and
jmp
inc
in
test
jb
nop
xchg
or
jecxz
sub
sbb
inc
fisubrs
mov
jmp
fstp
sbbl
decl
mov
gs
daa
mov
mov
je
mulb
daa
sub
sbbl
mov
lahf
ss
aaa
into
add
mov
in
push
inc
ja
or
lret
cld
call
mov
push
cmp
mov
in
xor
jno
adc
or
arpl
rcrb
inc
fsubrp
xlat
lret
bound
pcmpgtd
inc
sub
sbbb
xchg
jge
sahf
scas
mov
cmp
iret
and
pop
cmp
inc
ficoml
fbstp
jae
clc
movsb
scas
std
xchg
loopne
jg
testl
sahf
xor
test
push
popf
movsl
pop
out
mov
jbe
sub
stc
nop
inc
dec
xchg
sub
scas
xchg
popf
mov
iret
mov
int3
call
or
inc
out
test
jb
mov
nop
daa
loope
sub
sbb
scas
inc
xor
push
int
mov
sbb
test
adc
or
fs
daa
mov
mov
inc
fcomp
jne
hlt
arpl
and
inc
sbbl
mov
lahf
ss
sarl
iret
add
mov
in
push
inc
jbe
or
leave
xchg
sub
out
scas
pop
sbb
xor
data16
ret
in
test
fdivl
push
pop
or
dec
das
es
imul
inc
mov
dec
fucomip
aad
bound
push
addr16
aas
sub
sbbb
sbb
jnp
sahf
lods
mov
cmp
int
mov
cmp
inc
fistl
loopne
mov
stc
mov
ret
adcb
lcall
xor
lahf
ss
push
cmp
subb
pushf
mov
cmc
jbe
daa
adc
xchg
inc
dec
xchg
sub
sbb
int
ss
out
shlb
or
cmp
test
jae
lea
sub
out
rcll
mov
xor
dec
fildll
into
xchg
in
sbb
test
push
cld
or
bound
mov
mov
inc
fst
fidivs
repz
and
cld
xchg
pop
inc
sbbb
jge
mov
cwtl
mov
iret
add
mov
in
push
aas
fdivl
je
or
xchg
sub
in
scas
push
sbb
int
outsb
iret
data16
shr
repz
or
cs
daa
pusha
addr16
cwtl
subl
arpl
or
cmp
pop
test
jp
lahf
stos
mov
cmp
int3
es
ss
inc
fmull
loopne
mov
cli
mov
ret
hlt
std
sbb
cs
mov
roll
mov
fdivl
repz
and
inc
xchg
sub
sbb
lret
mov
into
out
shlb
or
cmp
out
test
je
mov
xchg
sub
in
rcll
dec
fbld
iret
data16
in
test
fiaddl
sub
mov
sarb
push
mov
inc
aam
jne
repnz
and
cld
xchg
pop
inc
sbbl
jnp
mov
xchg
mov
iret
ljmp
push
cmp
jne
movsb
nop
sti
xchg
ret
sub
jecxz
mov
sbb
into
data16
shlb
xchg
mov
fnstenv
or
or
sub
sub
xchg
jg
inc
mov
dec
loopne
ror
fs
push
adcb
sbb
test
lret
sti
add
pop
xor
inc
fisttpll
loope
xchg
sti
lahf
test
xchg
fcmovb
sbbb
sti
sbb
cmp
cmp
jle
mov
lock
ja
and
cld
xchg
inc
inc
xchg
sub
popa
sbb
leave
mov
iret
in
shrl
push
push
out
aaa
cmp
jne
mov
xchg
sub
loop
ret
mov
xor
iret
data16
in
test
flds
mov
pop
dec
sub
jl
rcrl
inc
fmulp
rcr
jbe
lock
and
std
xchg
pop
inc
sbbl
jp
mov
xchg
mov
sar
call
pop
out
push
cmp
je
jno
or
rol
sub
loope
mov
sbb
into
fs
popf
test
mov
out
xchg
xlat
jae
or
push
movsl
inc
sub
ret
xchg
jge
inc
scas
mov
loope
ror
add
imul
push
pop
xchg
mov
mov
loope
daa
mov
xor
inc
fisttpll
loop
xchg
popf
test
xchg
fnstcw
push
mov
adc
sarl
mov
icebp
iret
mov
js
and
xchg
ds
xchg
sub
nop
xchg
mov
enter
loop
shrb
add
out
xor
push
jne
mov
xchg
sub
loope
ret
adc
mov
das
xor
loope
push
iret
data16
test
fadds
mov
pop
dec
sub
jp
ret
fwait
inc
fmulp
shl
ja
out
gs
pop
es
xchg
pop
inc
sbbl
jns
mov
xchg
mov
sar
out
push
sbb
pop
lock
cmp
je
jo
push
mov
ret
xchg
sub
fistps
mov
pop
mov
dec
xor
into
bound
imul
jae
pop
adc
cmpsb
inc
sub
les
dec
loop
into
int
add
push
cmp
jmp
push
pop
mov
lea
movsl
scas
cmpsb
cmp
testl
inc
je
mov
cld
push
jmp
ret
int
std
clc
sub
mov
int3
fnsave
push
dec
or
mov
test
pop
ljmp
stos
push
mov
sahf
dec
in
pop
lcall
mov
cmp
sub
and
jl
lahf
notb
mov
and
push
iret
je
xchg
fnstcw
out
ljmp
mov
xlat
pop
int
iret
inc
addr16
adc
and
adc
stc
push
add
ljmp
mov
lcall
lock
mov
int3
push
push
fs
out
aas
popa
lret
lods
dec
test
add
gs
sbb
out
mov
adc
fcomi
aad
jo
fistl
cmc
xor
jbe
push
xchg
clc
dec
add
adc
js
jo
push
pushf
mov
gs
sbb
fs
js
push
aam
fsts
js
call
mov
mov
dec
mov
adc
mov
int3
sarl
mov
sahf
lds
mov
cmc
xlat
jl
shll
push
data16
jecxz
jl
sbb
jne
jmp
shrb
imul
lds
fbld
or
xchg
mov
into
or
mov
adc
cmc
xchg
jg
mov
mov
and
clc
test
push
dec
push
cs
inc
mov
mov
push
imul
or
jl
std
mov
mov
mov
mov
fwait
roll
js
push
mov
push
adc
xorl
add
rol
in
jo
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
sbb
push
adcb
inc
pop
mov
sub
mov
outsb
icebp
out
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
out
aaa
sbb
xorb
jge
and
out
js
je
inc
push
out
xor
in
cmpsb
popa
xor
inc
or
push
out
pop
ss
loop
movsb
shrb
loop
add
pop
jnp
mov
jo
inc
lcall
into
push
ficoms
or
mov
mov
test
xor
in
jne
and
sub
sbb
nop
pop
fs
insb
pop
stos
mov
mov
sbb
iret
stc
out
loope
pop
lahf
push
adc
xor
push
push
sahf
and
pop
pusha
data16
pop
dec
cltd
cmp
lods
clc
cmpsb
movswl
or
aas
out
push
inc
dec
push
mov
push
ret
push
test
lret
orb
icebp
cld
clc
nop
in
jle
xchg
mov
mov
stc
pop
sbb
ja
push
sub
pop
or
and
xchg
xor
sub
pop
xor
nop
pop
xlat
mov
jo
and
mov
lahf
and
dec
cmc
xchg
into
jo
or
rorb
push
dec
mov
test
leave
mov
pop
outsb
mov
arpl
xor
pushf
cmpl
add
movsl
shrb
out
sub
popf
pop
xchg
aam
or
or
not
les
les
lret
dec
mov
pop
lea
int
shrl
lahf
xlat
dec
in
or
xor
pop
shr
mov
mov
in
xchg
ret
dec
cmp
pop
movd
int3
or
xchg
jno
jbe
push
jno
sub
and
shlb
xor
and
in
sbb
lods
arpl
sbb
xlat
xchg
jns
mov
loop
sarl
inc
aam
dec
test
mov
adc
xchg
fs
and
lret
sbb
push
xor
adc
add
cmp
xor
ljmp
mov
pop
push
sub
