lcall
adcb
pop
mov
imul
pop
mov
bound
pop
ret
pop
add
pop
outsb
mov
add
ret
add
or
jnp
and
pop
ret
inc
cmovb
mov
sti
sti
sub
adc
addb
jg
out
adc
sub
push
add
in
outsl
pop
or
add
adc
add
and
push
imul
adc
outsl
inc
or
mov
lods
xor
inc
or
jbe
inc
or
inc
and
sub
into
inc
adcb
or
or
insb
sub
adc
inc
jno
inc
sub
and
and
iret
fiadds
or
and
cmp
mov
mov
mov
lcall
rclb
jle
jb
adc
jae
addr16
add
cmp
and
inc
inc
adc
je
iret
sub
adc
rcrl
mov
or
popa
jae
mov
or
inc
mov
mov
pop
rorl
popa
push
or
adc
sbb
pop
imul
shll
and
pop
and
add
fcmovnb
pop
sbb
enter
in
mov
adc
addb
fcmovnu
adc
mov
add
mov
rcl
movl
sti
mov
xor
mov
imul
hlt
and
rorb
jne
mov
add
mov
adc
add
or
neg
mov
cs
std
lds
add
lahf
int
add
mov
roll
jmp
add
ja
sbb
in
neg
dec
mov
jbe
sub
sbb
cmp
divl
sub
sbb
jg
sti
jbe
or
jne
out
aaa
imull
out
or
inc
mov
dec
sub
lcall
and
fsubrs
cmpsl
aam
mov
and
xchg
in
and
jne
adc
sahf
hlt
and
out
add
or
dec
popa
fcomi
sti
fcmovnbe
dec
rclb
add
xor
jne
dec
lcall
rorb
stos
or
or
cmp
out
push
out
std
lea
cli
mov
jle
sub
not
sub
or
jnp
jbe
fcoms
jmp
out
and
xor
rolb
add
mov
pusha
adcl
outsl
adc
in
out
test
push
push
daa
or
dec
jge
fldt
loop
loop
push
and
outsb
mov
shlb
leave
xor
cmovb
aas
sbb
xchg
pop
ror
bound
iret
xchg
xor
add
jae
push
jle
and
jl
sti
arpl
in
lock
jne
mov
arpl
mov
data16
shl
rolb
rcrb
cltd
enter
sub
icebp
addr16
jo
mov
imul
fwait
in
les
jge
mov
ret
adc
adc
sbb
or
repnz
pop
mov
jecxz
imul
adc
nop
dec
add
or
enter
mov
xchg
mov
in
fildl
sbb
inc
fisubrl
imul
xchg
add
test
pop
clc
or
sbb
in
sbb
xchg
or
outsl
pop
add
imulb
sarb
lock
jmp
fcmovbe
ficompl
xor
cld
sbb
clc
popf
mov
testb
jnp
clc
out
inc
mov
add
out
lods
aam
lods
fldt
in
fwait
push
lea
sub
pop
mov
or
fnstenv
cmp
arpl
out
je
adc
cmp
jmp
sbb
es
aaa
scas
or
imul
sbb
or
loope
or
test
ja
and
add
aaa
sub
rclb
jo
in
jp
xor
test
call
sbb
inc
pop
dec
mov
xor
neg
add
ret
hlt
xchg
xor
hlt
mov
repz
sub
pop
sti
sbb
nop
add
push
pushf
jae
jmp
adc
popa
push
filds
jne
movsl
mov
jp
add
add
jb
mov
add
add
adc
add
add
aas
or
dec
jg
dec
add
div
mov
dec
add
and
push
jl
xchg
add
lds
or
adc
add
or
mov
call
stc
mov
test
inc
fcmovbe
popf
add
leave
jle
bound
mov
idiv
jae
mov
add
mov
xor
out
call
sbb
pop
push
xchg
jg
add
stc
lret
inc
lret
push
test
adc
movsb
cs
add
add
fcmovne
add
movb
add
adc
inc
in
xor
add
insb
inc
call
push
add
sti
mul
lret
adc
repnz
sub
andl
lds
and
push
fcompl
dec
es
mov
mov
ja
insl
test
add
or
jno
inc
js
mov
add
pop
dec
add
imul
jg
pop
adc
add
jge
add
add
bound
pop
mov
std
test
fidivl
push
jle
adc
fs
mov
add
cmpsb
jg
fcmovnu
pop
sbb
insb
mov
testb
mov
xor
mov
movl
or
jbe
and
outsl
in
in
movsl
fcoml
mov
mov
popl
sarl
xor
fstp
jg
pop
sarl
pop
xchg
sbb
add
sub
ds
fcomi
outsb
push
out
pshufw
or
dec
pusha
sbb
add
add
fisttps
fstpt
in
cmp
fsubr
shlb
scas
inc
push
xor
sbb
sub
pop
clc
mulb
push
inc
shr
fadds
aad
insl
stc
jg
add
ja
addb
jnp
push
call
loope
fildl
in
add
sti
rolb
inc
push
mov
fmull
lods
rcr
and
cltd
mov
xchg
loope
cmp
inc
cwtl
mov
popf
sti
cmpl
adc
clc
out
and
mov
into
dec
xlat
or
jecxz
pop
movsl
or
out
add
add
out
dec
and
mov
xor
or
mov
jne
cld
in
xchg
sub
or
les
shrl
mov
sub
int
and
xor
sbb
iret
lcall
and
xor
jne
test
push
js
stos
loop
punpcklwd
ffree
adc
jge
pop
movl
inc
jmp
cld
push
push
xchg
int
xor
xor
insl
adc
sub
adc
adc
mov
or
aam
fildl
add
out
jne
fmuls
cmc
inc
in
push
fwait
cltd
sbb
ljmp
dec
cmp
push
and
mov
ret
in
and
xor
sbb
mov
rorl
mov
dec
inc
add
jp
push
sbb
sub
mov
lret
shll
cld
lods
imulb
ret
es
and
mov
dec
fnstenv
lahf
push
and
or
add
pop
sub
push
ss
scas
imul
pop
lcall
fsub
sub
jbe
mov
fcoml
daa
pop
out
fsubrs
and
push
sub
lret
mov
out
mov
insb
inc
aam
adc
push
rclb
rcr
or
sbb
orl
repz
outsb
mov
and
mov
into
not
inc
mov
int3
aam
int3
mov
adc
loopne
daa
adc
adc
es
jge
je
push
call
int3
push
adc
iret
loopne
mov
fdivrs
add
movsl
stos
cld
pop
xor
int3
imul
xor
xor
sbb
push
mov
add
fwait
outsb
fisttps
arpl
mov
gs
fwait
mov
adc
dec
sbb
and
test
cltd
das
aaa
xor
pop
out
xchg
aam
ret
add
jge
cmp
push
int
punpckhbw
or
dec
lock
fstp
js
inc
pop
sbb
roll
int
popa
or
nop
and
mov
out
mov
or
fildl
inc
add
xor
dec
outsb
loope
loope
jge
test
mov
lahf
fisubrl
loope
add
xor
inc
sub
int3
mov
or
xor
mov
adc
insl
ret
mov
addr16
je
adc
insl
hlt
mov
add
dec
out
mov
int3
cmp
sbb
imul
or
popf
push
sub
cmp
push
pop
rorb
fsubs
mov
mov
xlat
jae
or
mov
mov
xor
rcrl
and
sbb
loope
mov
pop
sub
adc
or
jp
sahf
es
fidivrs
sbb
adc
dec
push
fcomps
mov
shll
jge
jo
pop
ljmp
add
in
xchg
mov
add
lock
mov
fsubl
lods
jecxz
pop
and
into
inc
inc
jg
inc
inc
faddl
push
pop
ret
inc
das
inc
lods
push
sbb
mov
jb
xchg
scas
lock
sub
mov
aam
xor
sarb
or
leave
jo
xchg
lods
adc
test
sahf
lock
or
imul
mov
adc
test
and
push
xorl
pop
fcoms
push
or
loopne
mov
add
sub
sbb
push
dec
or
xor
mov
jo
lock
jne
push
pop
imul
mov
fsubrl
jp
mov
and
adc
addr16
cli
and
cld
add
ret
mov
xorb
push
in
inc
jne
push
sub
jnp
stos
sbb
pop
lret
out
loopne
lret
xor
and
mov
dec
mov
ljmp
jecxz
je
push
mov
add
push
jns
mov
xchg
mov
jne
pusha
push
sbbb
dec
xor
loop
or
fucomi
pop
cld
std
xor
aaa
push
mov
or
call
jne
clc
fs
cmp
addr16
mov
dec
adc
mov
xchg
incb
outsb
imul
sub
inc
pop
xor
in
repnz
fmull
popf
mov
add
mov
cld
inc
ss
add
sub
add
cmp
xorb
lds
and
cltd
fs
and
mov
pop
fldt
test
mov
ljmp
fidivs
inc
popf
push
cwtl
fnstenv
pop
mov
insb
test
bound
popa
mov
xor
inc
fisttps
fwait
ret
sbb
jl
call
pop
mov
adc
add
pop
cmp
xor
sbb
cwtl
add
mov
add
add
jb
mov
loopne
ljmp
sarl
addb
test
and
outsl
pop
faddl
pop
cmpsl
pop
add
mov
subl
pop
sbb
enter
gs
stc
add
sub
rolb
mov
push
leave
xor
dec
add
mov
inc
push
lahf
lret
dec
shr
pop
push
arpl
sub
test
dec
insl
ficoms
out
add
icebp
sbb
sbb
dec
and
aaa
mov
xor
add
sti
outsl
xchg
push
dec
fstl
xor
add
rclb
push
loope
ret
fildl
fmull
jmp
adc
push
mov
dec
sbb
mov
test
lcall
clc
pushf
fisttpll
loop
add
outsl
das
test
int
nop
les
push
adc
sti
jbe
mov
popa
roll
or
outsl
je
mov
mov
test
jl
bound
or
sub
push
lea
adc
loopne
orl
cmovs
add
pop
jb
mov
fbstp
sub
aaa
cli
test
jp
test
cltd
sbb
fistl
imul
sbb
xor
subl
push
push
jge
and
popf
stc
inc
out
add
jo
push
outsl
fisttpl
push
repnz
sahf
scas
fstl
mov
push
std
fidivrl
mov
push
jns
ficoml
sbb
sti
insl
divl
in
aaa
mov
push
hlt
jmp
push
ja
or
lock
jne
xor
or
xchg
xor
es
movsl
decb
lret
or
mov
push
xchg
or
sti
ret
lea
sbb
mov
in
push
xchg
loope
outsb
aaa
orl
pop
dec
lea
out
imul
adc
push
fidivl
push
sbb
ja
xor
dec
mov
ljmp
insl
sbb
aaa
push
je
test
and
xor
stos
sbb
rcrl
fldcw
loope
das
add
xchg
jno
mov
xchg
mov
mov
addr16
scas
jo
push
and
push
inc
aad
pop
dec
outsl
cmc
test
mov
push
popa
jle
adc
xchg
xchg
dec
mov
add
mov
pop
add
push
fiaddl
mov
push
and
scas
xchg
add
mov
jge
and
pusha
repz
bound
in
fimull
add
fimuls
mov
mov
clc
mov
cli
mov
jge
jge
data16
mov
push
pop
or
and
rcrb
arpl
fwait
push
les
aam
adc
push
imull
ret
fsubl
mov
jae
xchg
shl
sbb
rolb
sub
out
jb
and
sbb
sbb
out
gs
and
jno
jae
call
shlb
lcall
cmp
leave
rcll
and
push
aas
in
imul
lea
mov
cmp
add
outsb
dec
loopne
jae
sbb
add
xor
push
push
sub
aam
pop
lock
icebp
jge
cld
pop
add
mov
sub
clc
and
sbb
or
rorb
add
inc
scas
pushf
inc
sub
mov
and
xor
add
push
add
das
sub
ret
in
ja
aas
mov
movsl
aam
clc
mov
pushl
jo
sbb
shlb
dec
xchg
sahf
rorb
sbb
mov
adc
scas
inc
xchg
and
push
pop
add
adc
clc
add
and
xchg
lcall
inc
aad
mov
push
push
mov
cmp
out
or
fsubrs
loopne
dec
call
adc
dec
xchg
xor
dec
cmpsb
xchg
fcoms
inc
or
mov
mov
inc
dec
ljmp
sub
pop
mov
dec
cs
xlat
sbb
push
testl
or
movlps
jle
hlt
jb
ljmp
push
add
rcr
insb
ret
lret
int
sub
roll
fiaddl
adc
out
js
push
mov
or
scas
daa
icebp
lret
imul
xchg
icebp
push
dec
shl
loop
adc
mov
inc
js
clc
pop
xchg
insl
or
pusha
cltd
add
adc
xchg
scas
addb
sahf
jno
mov
sarb
repz
nop
and
cmp
xchg
jecxz
cmpsl
ret
sbb
or
fisubrl
or
faddl
jge
ror
pop
out
loope
push
andb
stc
scas
cmp
mov
or
testl
xchg
xor
pop
jne
subb
push
adc
pop
cld
leave
rcrl
dec
jp
jae
out
fbld
or
clc
inc
pop
popf
insb
cmp
mov
xchg
dec
push
push
roll
ret
push
push
xchg
dec
mov
add
jb
aam
rcll
outsl
bound
push
and
ja
mov
xor
pop
divps
push
sbb
adc
cmp
movsb
ds
fldenv
or
popf
fstps
imul
inc
ret
pop
xchg
call
psrld
fs
xchg
and
es
adc
lret
out
ret
int
cs
push
wbinvd
mov
push
inc
sbb
pop
adc
fst
aaa
fcoml
add
imul
and
ja
add
not
sub
jmp
lea
in
idivb
mov
out
mov
xor
sub
add
cmp
daa
arpl
sbb
ljmp
adc
inc
cmp
xchg
jge
xor
add
mov
adc
or
dec
push
adcb
inc
dec
cltd
popa
adc
add
or
gs
xor
or
insb
dec
test
adc
repnz
iret
mov
mov
xor
lcall
in
add
adc
les
test
call
hlt
adc
scas
push
hlt
scas
mov
adc
adc
inc
mov
xor
sub
aaa
pop
shlb
dec
mov
pop
clc
dec
mov
adc
aam
and
rolb
jp
xor
js
fmull
cmp
jno
pop
push
je
ficompl
mov
mov
cwtl
inc
adc
jge
lret
dec
shl
pop
sub
dec
pop
xchg
mov
popa
add
stc
adc
push
int
add
adc
push
in
sbb
and
pop
xor
inc
and
pop
inc
cmc
rorl
pop
sub
rolb
ffreep
jne
inc
adcl
mov
imul
insb
xor
and
divl
loop
inc
adc
or
rcrl
add
push
stos
sub
hlt
xchg
cwtl
xor
jnp
outsl
shlb
rcrl
dec
jecxz
mov
jmp
int3
or
add
add
mov
mov
sub
loopne
fbld
into
mov
and
icebp
sbb
dec
outsb
fcom
insb
push
lcall
hlt
cmp
insl
mov
lock
push
out
jo
js
std
sbbl
clc
inc
fidivs
nop
sbb
imul
sbb
or
frstor
cltd
imul
cmp
rorl
movb
shlb
shrw
shr
mov
cmp
mov
adc
shrb
adc
roll
mov
push
call
out
mov
mov
icebp
push
sub
movsl
jo
shrl
js
fldenv
icebp
andl
mov
repnz
iret
or
fnstsw
jns
inc
xchg
iret
lea
mov
mov
inc
xchg
adcb
ds
js
clc
adcb
mov
pop
pop
dec
cli
cmc
outsl
das
jne
push
xor
icebp
xor
rorl
inc
decl
insl
sbb
xchg
out
mov
push
repnz
imul
std
sub
and
jne
ds
scas
push
xor
inc
inc
movsl
lods
mov
and
in
shr
pop
mov
loope
cmpsl
mov
or
out
sbb
jp
aam
sbb
sub
fs
test
jne
out
adc
push
andl
sub
sub
mov
xor
in
lods
sti
or
adc
gs
test
hlt
pop
and
adc
or
dec
adc
push
ljmp
and
sar
ds
les
pop
ret
or
aaa
xor
push
aas
cli
lock
sar
sti
pop
stos
repnz
ljmp
out
lds
xchg
add
or
aad
jne
add
cmp
cmp
mov
mov
fbstp
cmp
sbb
popl
shl
rolb
frstor
inc
outsl
outsl
mov
je
push
je
pop
dec
push
sti
mov
scas
sub
dec
and
es
inc
push
pop
rorb
mov
push
mov
ljmp
pop
jno
adc
fdivs
and
imul
cmpsl
mov
add
adc
rcr
ret
stc
test
enter
add
and
js
mov
outsb
mov
outsl
jo
push
ret
add
add
sbb
outsl
or
push
in
mov
pop
add
pop
adc
insb
rorl
mov
add
repz
cld
sbb
sarl
cvtps2pi
pop
fwait
andl
sub
or
shll
jle
xor
ja
push
push
movsb
movsl
lea
lods
lret
add
and
or
loop
jnp
inc
movsb
pop
push
or
scas
cmpsl
scas
xorb
std
fisubs
cmp
pop
inc
adc
adc
adc
sub
fstps
jnp
sbb
jg
adc
sbb
into
adc
insl
dec
mov
cmpsl
push
aas
insb
xor
jb
cmp
inc
inc
ret
sub
cmp
add
insb
mov
adc
sbb
insb
lods
inc
and
adc
out
addl
pop
or
mov
cs
xor
mov
cmp
adc
pop
or
pop
pop
pop
inc
insl
dec
xchg
sbb
lods
loope
lret
sbb
outsl
insb
int3
add
std
in
mov
xchg
data16
adc
or
or
dec
and
adc
and
ss
stos
cmp
mov
mov
mov
pusha
add
cmp
sbb
pop
push
int3
jge
arpl
and
or
sub
mov
add
push
popa
inc
pop
scas
movsb
test
inc
mov
adc
pop
aaa
sbb
dec
popl
divb
testb
and
sbb
mov
icebp
dec
jl
mov
adc
mov
mov
pop
scas
std
push
mov
adc
shrl
pop
sbb
or
inc
cmp
pushf
cmp
lock
dec
repz
repnz
les
ds
add
push
dec
js
fdivs
xchg
mov
adc
jle
cmp
jbe
inc
cmp
js
add
testb
and
mov
js
bnd
inc
mov
xor
adc
inc
and
cmpsl
aam
jg
xor
aad
lret
sbb
lods
jge
lods
add
sbb
add
sub
test
test
das
andb
std
and
lods
stc
cmp
mov
push
sub
pop
and
fcompl
cs
arpl
adc
popa
and
fs
xor
and
ret
adc
adc
mov
dec
mov
das
add
cltd
sub
push
bound
rcrl
jne
lods
pop
jl
out
jnp
mov
mov
mov
push
dec
mov
xchg
and
mov
lods
pop
jmp
mov
loopne
fsubs
lock
inc
fcomp
sbb
xchg
divb
sbb
pop
and
add
jge
mov
push
icebp
dec
inc
pusha
or
int3
sbb
nop
push
mov
push
xchg
add
inc
adc
test
fwait
sub
pop
imul
xchg
js
pop
add
mov
mov
sti
or
sub
push
xchg
cmc
jno
mov
ss
sub
mov
adcl
mov
js
mov
fnstcw
insl
add
sbb
loopne
push
loop
fstps
dec
std
cmp
xchg
dec
fsubr
mov
ja
in
flds
lds
dec
mov
push
ret
sbb
jmp
movsl
and
mov
push
je
cmp
jecxz
sbb
inc
add
mov
ret
dec
add
lea
xchg
outsb
les
adc
rcr
outsl
mov
pop
cld
cmp
xor
push
xchg
xchg
pop
add
xor
pop
inc
loope
and
scas
sub
mov
fs
pop
insb
icebp
lcall
xchg
xor
sub
das
jo
adc
aam
mov
mov
add
or
mov
and
sub
push
push
pop
push
push
push
ss
xchg
clc
dec
add
mov
cwtl
mov
dec
pop
xor
mov
in
or
sbb
pop
loop
test
test
add
sbbb
fimull
mov
or
loope
ret
icebp
dec
ja
jae
sbb
pop
je
pusha
sub
mov
xchg
mov
xor
fistl
adc
jp
and
js
std
sub
lods
fcoms
cmp
pop
out
xchg
inc
faddp
dec
ds
push
les
mov
jb
or
nop
pushf
sub
pop
pop
sbb
ret
addr16
fucomi
mov
fcoms
cwtl
idivb
mov
rcr
nop
lret
ret
fidivrl
sbb
jg
hlt
lea
mov
adc
fadds
or
aad
pop
js
and
mov
pop
push
cmp
movsb
scas
sub
push
aas
mov
insb
addr16
cmp
add
jo
rolb
sub
addr16
add
lods
std
pop
imul
cltd
add
pop
arpl
outsb
lcall
inc
jge
push
loope
push
mov
xchg
popf
subb
add
fiadds
sub
or
xchg
add
sarl
push
adc
es
sbb
mov
lods
leave
add
push
insl
or
nop
outsl
pop
imul
sti
test
sbb
pop
jle
rep
adc
mov
xor
pop
shll
insb
jl
mov
ret
mov
jae
xchg
sbb
pop
pop
inc
add
lock
pop
stc
jbe
sbb
pop
and
xor
es
rcl
loop
nop
sahf
aaa
aaa
sub
jae
in
sbbl
mov
mov
and
stos
push
xchg
dec
sbb
call
cmp
pop
pop
jecxz
sbb
mov
lcall
iret
int3
inc
aas
mov
mov
cmp
mov
scas
fldl
xor
mov
xchg
inc
pop
jle
not
add
outsb
sbb
arpl
loope
mov
add
xchg
mov
push
mov
mov
lcall
test
or
popa
or
int3
push
lods
cmp
pop
cmp
aaa
addr16
xchg
leave
xchg
and
cmp
jmp
and
lret
xchg
inc
add
dec
rcrl
les
repnz
mov
pusha
jb
clc
das
sbb
adc
mov
enter
sahf
cli
cmp
push
scas
addl
outsl
popf
fldl
fwait
jne
mov
jns
call
cmp
test
loope
rolb
jae,pn
rclb
add
dec
js
dec
inc
or
add
sti
jecxz
xlat
sub
cmp
rcll
jecxz
daa
push
fldl
xchg
addb
imull
push
xchg
mov
int3
dec
js
sahf
lds
mov
xchg
fisubs
push
insb
cmpsb
lock
push
or
pop
pushf
sub
xchg
dec
rolb
mov
mov
jno
es
lods
mov
inc
pop
or
mov
mov
pushf
pusha
cmp
mov
lret
add
jo
mov
stc
pop
ret
pop
lock
xchg
lret
xchg
add
test
insb
pushl
call
aad
cwtl
xor
and
jg
mov
pushf
mov
rcll
xchg
cwtl
push
jae
imul
aaa
in
jecxz
dec
mov
lock
je
xchg
mov
pop
test
clc
incl
pushf
mov
outsl
mov
push
out
xor
ret
xor
pop
lea
pop
ret
lea
cmp
movsl
mov
sarb
push
in
movsl
mov
and
xor
dec
xchg
dec
mov
lret
and
enter
ret
sbb
das
cli
clc
adc
inc
out
mov
xchg
ss
rorb
sbbb
clc
jg
and
lcall
and
ret
mov
pop
jecxz
test
dec
lods
cmpsl
push
dec
sub
add
or
mov
test
mov
testl
lret
pop
js
push
xorl
push
pop
in
adc
pop
lret
add
inc
pop
in
dec
sbb
mov
add
sub
clc
outsl
mov
mov
jle,pt
fdivl
add
jae
dec
jg
xchg
pop
add
pop
push
iret
xlat
das
push
adc
mov
push
je
test
mov
dec
lock
imul
insb
insl
call
dec
and
xor
cwtl
aam
pop
es
ljmp
add
inc
int
jae
sub
lock
pop
pop
lcall
xor
push
cli
push
sbb
inc
inc
mov
jo
test
insb
sub
pushf
int3
rorl
arpl
dec
push
push
xor
and
jp
popa
xchg
outsb
sbb
lahf
arpl
rcr
shll
adc
out
add
sar
lea
dec
shrb
outsl
add
nop
mov
clc
inc
adc
popf
jl
push
lock
jnp
or
push
stc
out
add
and
adc
sbb
xchg
ror
pusha
adc
nop
sub
imul
pop
pop
and
and
pop
jl
aam
push
sub
sub
mov
cmp
xor
sub
movsb
movl
lea
mov
test
cmp
nop
loop
sti
push
and
pop
popf
add
sti
dec
clc
out
or
jg
xchg
daa
mov
pop
add
nop
jecxz
jo
shll
or
mov
xchg
std
out
jmp
clc
pusha
xchg
shll
outsb
outsl
pop
shrl
fidivs
xor
sub
mov
notl
lret
push
xor
sarb
fs
mov
fcomps
mov
imul
jecxz
repnz
fistl
daa
out
aam
cmp
mov
fists
cwtl
jmp
lods
daa
pop
jo
out
pusha
mov
fdivl
mov
insb
cli
pushf
dec
sbb
add
xor
dec
xor
sbb
mov
or
and
or
lock
insl
test
inc
xor
xor
sub
inc
fdiv
in
insl
in
jge
cmp
adc
jbe
mov
nop
sbb
js
inc
fnstsw
mov
push
mov
pop
loopne
xchg
xchg
adc
loopne
or
imul
jg
repz
cltd
in
shlb
aam
xchg
test
push
icebp
dec
cmp
jns
push
sub
sti
add
pop
cmc
mov
sbb
mov
je
cmp
insl
popf
xor
push
pop
ja
movsl
push
add
stc
mov
or
cld
cltd
mov
insl
test
push
pop
and
mov
inc
mov
ss
mov
scas
inc
sub
stos
aad
cli
adc
adc
dec
mov
outsb
out
hlt
sub
push
or
je
jns
inc
rclb
pop
insb
outsl
popa
addr16
or
icebp
or
dec
pop
xchg
jbe
inc
xor
mov
cmpsb
adc
fdivrl
push
mov
mov
in
ja
xchg
out
dec
xor
jl
int3
push
movsl
mov
hlt
push
pop
pop
in
cltd
int3
arpl
fcomps
stos
aaa
pop
int3
data16
lods
sub
shr
sbb
jle
lret
test
stc
shlb
mov
pop
mov
rcr
aad
and
mov
aaa
sbb
push
aad
pop
mov
scas
mov
pop
ds
daa
movsb
jg
imul
in
roll
or
add
addr16
jmp
pop
inc
jmp
push
sahf
lds
filds
mov
fidivrl
iret
and
out
es
fldenv
imul
mov
add
in
das
aam
fdivr
in
push
mov
pop
fadd
sbb
divl
mov
mov
lock
inc
xchg
ret
loope
pop
lods
jnp
int
icebp
nop
xchg
push
dec
movsl
pop
rolb
andl
fistl
mov
inc
fidivl
cmp
xchg
adc
mov
in
les
pop
fldl
mov
dec
or
jae
loop
test
pop
sub
test
repz
aam
lods
or
outsl
and
jne
in
or
sbb
mov
inc
pop
call
scas
push
iret
xchg
xchg
sub
sub
inc
mov
mov
or
dec
inc
jnp
addr16
mov
sub
lcall
sbb
add
jecxz
dec
sbb
dec
nop
xor
pop
mov
orl
xor
cmpl
ljmp
or
call
sbbb
pop
fsubrl
cmc
adc
add
dec
call
dec
adc
add
or
loope
or
add
sbb
sbb
pop
dec
neg
inc
and
and
dec
rcrb
lea
or
andps
inc
xchg
inc
hlt
shlb
xor
and
cmpsl
add
and
ficoms
or
pusha
or
les
mov
pop
dec
and
mov
sub
push
jns
cld
adcl
out
std
scas
loope
mov
push
push
aam
shr
mov
add
sar
pop
cmp
or
enter
stc
xlat
sbb
inc
imul
stos
cltd
dec
dec
int
inc
lock
out
stc
shlb
mov
add
cmp
dec
aad
icebp
movsl
das
push
xor
xor
cltd
adc
push
fcompl
loopne
fcmovu
lods
sbb
dec
mov
fstl
and
aam
dec
adc
jl
adc
testl
dec
xor
jmp
adc
popa
mov
cmc
jae
or
ljmp
mov
lret
or
mov
pushf
cmp
inc
xor
arpl
dec
and
mov
or
pop
pop
push
mov
jb
pop
xor
cmp
in
lret
adc
sub
pop
mov
scas
sarl
mov
push
mov
pop
add
fsubrs
sub
repz
mov
dec
sbb
cld
mov
or
and
mov
cltd
ljmp
out
add
call
lods
loopne
movsb
push
xchg
xlat
cmp
cmp
mov
lret
mov
outsb
mov
loope
cwtl
mov
sbb
cwtl
mov
lods
lahf
add
subl
test
je
stc
xchg
jbe
sahf
pop
sub
xchg
fistl
xchg
enter
or
push
dec
sub
outsb
mov
lock
in
sbb
stc
lea
push
rol
test
jp
cmpsb
jp
test
mov
arpl
dec
push
in
jmp
sbb
or
ret
rcr
out
testb
hlt
push
or
fwait
out
lock
cmc
jle
lahf
lods
push
fisttpl
jne
push
in
adc
out
add
jne
pusha
lcall
and
push
stos
dec
pop
xchg
mov
dec
cmp
les
xchg
stos
pop
and
mov
cltd
mov
out
out
jno
mul
int
and
fcmovbe
lock
out
orl
push
sub
mov
adc
jmp
sarl
inc
shlb
fwait
xor
xchg
ja
xor
push
pop
sti
imul
mov
xchg
sbb
lcall
pop
sbb
incl
and
lods
mov
rcrl
scas
imul
repz
insb
aaa
inc
xchg
xor
mov
insb
mov
cmp
sub
icebp
mov
dec
ret
add
mov
sbbl
or
dec
flds
push
ficompl
in
mov
push
call
adc
mov
mov
fst
xchg
jmp
jo
mov
adc
pop
orb
fiaddl
mov
mov
scas
ja
cmpsb
outsb
jo
and
inc
and
loopne
xor
push
pop
xchg
pop
jp
adc
iret
dec
es
pop
mov
add
js
ret
and
mov
data16
push
or
pop
lods
mov
mov
test
mov
dec
lds
out
aam
jae
fnsave
or
int
repnz
cmp
xchg
call
jg
aad
jl
shl
mov
push
xchg
inc
sub
test
scas
mov
add
das
fidivrs
rcr
dec
sub
mov
fisubl
mov
pop
add
mov
arpl
loopnew
je
lock
outsb
push
int3
lods
mov
mov
in
insl
test
or
in
je
insl
cmp
and
aaa
loopne
sbb
jp
pop
xor
pop
insb
xor
xchg
divb
fildl
mov
mov
xor
jecxz
xor
jle
sbb
or
mov
push
mov
jne
or
pop
andl
sub
or
adc
or
mov
jmp
jno
movsb
or
pop
in
and
aad
jge
jp,pt
sub
loopne
mov
aad
aam
dec
pop
nop
es
adc
lods
or
and
push
sbb
lret
sbb
mov
popf
dec
stos
dec
cmpb
test
push
push
mov
mov
push
vmptrst
or
inc
outsl
lea
push
cmp
aaa
mov
fadds
pop
lods
je
test
mov
int3
stos
inc
sub
jp
mov
lods
adc
or
sar
cltd
mov
mov
dec
shrl
lcall
popf
cmp
inc
and
lret
xchg
add
fucom
aaa
adc
mov
xchg
je
shrb
dec
lret
ds
insl
std
test
pushf
mov
js
mov
add
push
std
mov
clc
adc
mov
xchg
xorl
jge
mov
add
inc
cmp
and
bound
push
ljmp
lea
push
lahf
lds
lcall
cmp
mov
mov
cmp
adc
incb
sub
or
or
adcb
mov
and
mov
pop
push
push
dec
xor
pop
jbe
mov
cmp
dec
sub
loope
outsl
aad
mov
push
jb
jb
and
shr
rorb
bound
insl
jle
push
inc
test
mov
loop
add
in
sbb
push
in
outsl
jb
inc
popf
in
fstpt
cmp
inc
rcll
loope
mov
jge
mov
jge
icebp
in
fwait
mov
ret
and
adcb
xor
sbb
loope
mov
and
pop
inc
insb
dec
mov
xor
xor
outsl
out
inc
stos
push
int3
lret
jle
jae
mov
sbb
hlt
dec
dec
rolb
sarl
lock
aaa
cmp
push
sbb
inc
mov
mov
sub
js
mov
and
push
or
pop
insb
push
outsl
pop
jge
les
jb
pop
shlb
fmuls
sbb
adc
incl
sbb
sub
pop
push
jecxz
push
mov
sbb
rol
push
mov
cmova
sub
les
in
and
pop
lret
sbbb
roll
jne
pop
sub
dec
insl
inc
xor
xchg
into
push
ret
call
sbb
mov
call
or
and
lret
iret
pop
push
ds
pop
inc
mov
subb
aaa
hlt
pop
and
cmp
sub
movsb
cmp
mov
fs
test
scas
xchg
mov
add
and
pop
je
test
test
push
test
imul
outsb
das
cld
cltd
add
dec
or
lahf
jmp
or
adc
dec
inc
add
pop
lods
pushf
jmp
xor
bound
fbld
sbb
mov
insl
add
js
int3
jecxz
mov
xchg
pop
mov
aas
repz
sub
outsl
mov
mov
cltd
jge
sbb
pop
dec
cmc
or
icebp
lods
mov
inc
insl
loope
mov
out
jae
xor
xor
fdivl
sub
lret
sbb
sbb
mov
loopne
insl
adc
add
arpl
loope
cmc
inc
mov
movsb
pop
cmp
imulb
fstpl
push
imul
gs
jl
aaa
push
lock
jmp
add
insb
mov
add
add
out
gs
mov
add
shlb
mov
pop
jbe
pop
push
lds
jb
pop
cmpsb
loopne
in
jmp
push
imul
vpslld
mov
mov
xchg
outsl
sahf
inc
lds
adc
pop
test
lcall
dec
test
push
leave
std
adc
movsl
in
cwtl
jmp
aam
push
or
dec
xor
push
popf
mov
int
mov
lea
incl
cs
inc
mov
shll
cwtl
lahf
xchg
mov
outsl
mov
mov
fcoml
pop
dec
mov
imul
xor
inc
das
xor
lds
adc
dec
pop
mov
loope
mov
test
sbb
je
fiaddl
dec
jae
push
outsb
pop
out
repz
pop
sti
xchg
and
fnsave
mov
cmpsl
push
mov
xor
jo
in
fbld
sar
jne,pn
add
popa
fs
jnp
xchg
mov
mov
sbb
inc
test
decl
fldt
sub
sti
mov
iret
xor
pop
test
insb
aaa
jg
fnstsw
pop
mov
nop
xor
add
mov
sub
lods
sbb
fdivs
shrl
rcll
repnz
mov
xor
jnp
in
inc
repnz
mov
incb
ret
or
sub
ret
cs
mov
fs
ss
xor
std
ja
inc
arpl
in
clc
stos
stos
sbb
or
cs
das
cmp
jne
sbb
imull
cmpsb
bound
jle
xor
push
mov
lcall
xchg
int3
lods
cmp
xor
mov
push
scas
xchg
mov
insb
mov
xor
and
and
imul
sbb
cld
add
mov
push
mov
sbb
adc
std
idivb
push
mov
mov
std
ljmp
mov
push
sbb
xchg
nop
inc
sar
adc
fisttpll
popf
mov
lahf
adc
or
loopne
xorl
adc
mov
push
lahf
stc
icebp
shl
scas
adc
popf
dec
inc
lret
and
mov
mov
push
in
mov
dec
sbb
cmovb
xchg
push
mov
inc
or
ljmp
push
mov
adc
pop
xchg
ret
in
outsb
push
sbb
iret
out
icebp
pop
fidivs
movsl
incb
fiadds
jle
loop
pop
xor
mov
es
mov
cmp
mov
es
loopne
lcall
cld
int3
sahf
jae
mov
mov
jnp
pminub
or
mov
lcall
mov
mov
and
insl
nop
push
xlat
ljmp
test
jmp
cmp
sbb
cmp
inc
sub
adc
call
fisubrs
aam
lret
adc
rcrb
repnz
ret
mov
aam
lea
outsl
mov
repz
and
adcl
outsb
pop
and
scas
push
pop
pop
clc
mov
lcall
fs
pop
ljmp
sub
xlat
ret
push
lock
mov
nop
jle
out
xchg
loop
aaa
clc
or
repz
aad
orl
mov
sbb
adc
insl
outsl
mov
lods
xchg
popf
fiadds
and
sub
mov
jno
mov
xor
mov
push
clc
mov
xor
in
mov
xor
hlt
enter
mov
decl
repnz
aam
adc
inc
out
jne
pusha
cltd
push
xchg
pop
jo,pn
sbb
add
push
pop
inc
movsl
sbb
mov
push
ret
nop
fsubrs
push
clc
xchg
es
pusha
call
jle
adc
hlt
push
or
adc
ljmp
sub
pop
xchg
or
fdivrl
call
push
andb
dec
bound
je
jp
add
in
cli
ficompl
out
push
je
fsubr
adc
sbb
mov
dec
adc
mov
arpl
andb
mov
adc
or
fcmovu
inc
push
cltd
inc
fdivrl
mov
jmp
adc
mov
adc
push
sub
mov
inc
or
mov
test
aad
xchg
hlt
inc
sbb
fxch
rolb
mov
test
pop
in
sbb
icebp
mov
test
push
sar
sub
add
jecxz
outsl
or
pushf
push
aaa
xchg
jmp
inc
insl
fdiv
or
and
mov
push
jnp
inc
add
inc
cmp
xchg
popf
lods
adc
mov
jae
imul
idivl
sub
adc
add
nop
aad
push
mov
js
jb
inc
pop
test
and
lock
inc
inc
lcall
out
inc
cld
lret
push
and
pushl
cmp
jmp
shr
sbb
add
jmp
jae
shr
inc
mov
mov
push
xchg
std
and
or
add
jmp
jmp
cmpsl
xor
add
add
pop
imul
push
je
inc
jno
aam
rorl
or
ficoms
jg
inc
and
push
adc
ret
and
xchg
add
sub
push
int3
xchg
test
shr
push
sub
in
loop
xor
sbb
fldlg2
and
ss
mov
mov
jge
jb
icebp
or
aas
or
pop
jns
mov
inc
int
aas
aam
enter
push
jb
xor
and
in
ret
fsubs
in
push
cmp
js
pop
add
xchg
mov
or
mov
leave
pop
jns
lds
mov
nop/reserved
sub
sarl
in
sbb
or
push
add
clc
in
sub
jg
les
add
scas
mov
add
adc
dec
sahf
adc
cmc
mov
jae
pop
or
fisttpl
jns
les
imull
fdivs
xchg
adc
adc
movsb
and
and
sub
dec
movsl
jo
sti
les
mov
popf
adc
psrlq
and
testb
and
and
inc
out
mov
jns
jl
cwtl
inc
sbb
rclb
data16
insb
inc
mov
inc
mov
xor
out
orl
je
lahf
xlat
imul
or
adc
push
daa
int3
lret
fldenv
iret
loopne
gs
push
push
inc
cld
cld
mov
jns
push
lea
push
jno
cs
and
or
or
xor
or
inc
jno
inc
lock
inc
roll
jge
stc
jbe
xor
xchg
dec
add
into
roll
aad
add
int3
mov
out
aad
enter
lea
hlt
cmc
repz
jecxz
stc
outsl
sub
push
and
sbb
adc
xchg
push
shll
sub
ss
out
clc
or
xor
out
loopne
pop
jmp
aas
cmp
cmpb
nop
xor
std
aaa
clc
or
notb
adc
popl
mov
out
add
mov
les
lds
mov
xchg
xor
out
or
xor
jne
and
insb
in
xchg
or
or
jg
inc
and
lret
add
icebp
fs
add
loope
aam
push
ret
xchg
pop
jg
in
inc
mov
rcll
in
push
jns
xchg
jl
mov
pop
sti
inc
sbb
push
mov
iret
push
movsb
out
in
clc
ljmp
add
dec
repz
sbb
and
mov
pop
cltd
imul
cmp
cmp
push
lahf
es
push
mov
pop
test
sahf
imul
test
sti
push
mov
push
dec
call
lock
pusha
pop
sti
lods
ja
pop
dec
call
mov
incl
adc
mov
cli
ljmp
and
mov
mov
rclb
fistpll
les
les
aam
jle
inc
cmpl
adc
scas
push
daa
lds
xchg
call
adc
xchg
pop
add
jo,pt
dec
dec
push
scas
iret
sub
mov
imul
dec
test
and
mov
jno
or
rcrb
mov
rclb
cld
jle
pop
js
mov
insl
pop
fstpt
cmc
jg
mov
cmp
outsl
loopne
subl
adc
xchg
roll
js
nop
lods
fs
enter
adc
or
call
lcall
push
pushf
mov
pop
xor
or
push
cmp
inc
lea
outsb
pushf
xchg
inc
fisttpll
ds
lock
xchg
call
lcall
fs
mov
sbb
or
rorl
or
mov
aam
add
in
inc
xor
dec
inc
sub
adc
test
dec
sbb
push
outsb
fiadds
lcall
inc
int
xchg
add
fldenv
fdiv
dec
xchg
xor
in
xor
xchg
insb
icebp
or
inc
inc
test
adc
test
sbb
inc
clc
and
aad
scas
dec
push
and
mov
out
imul
jo
lcall
test
dec
and
clc
rcll
gs
or
incl
mov
cld
xor
jno
loop
jecxz
aam
and
add
push
dec
dec
inc
pop
mov
flds
jge,pn
push
mov
subl
sti
popf
and
dec
bound
or
jmp
fcomi
or
xchg
addr16
mov
ss
xchg
out
push
mov
rol
mull
daa
cwtl
shlb
jle
xchg
jbe
fmull
sub
notb
ja
testl
pop
or
jp
ljmp
icebp
and
movsb
xchg
aam
jo
and
and
mov
popa
inc
sti
mov
daa
addr16
inc
pop
mov
test
adc
mov
jbe
mov
mov
ljmp
add
sub
push
push
xor
mov
add
gs
outsb
clc
sbb
insb
xor
jno
call
and
sub
out
xor
in
push
cmp
pushl
sbb
adc
js
scas
pop
jmp
js
pop
inc
mov
fwait
sti
sbb
cmp
push
or
frstor
loope
bound
loop
cltd
mov
lods
lret
dec
cs
mov
pop
mov
ret
mov
push
xor
jecxz
fucomip
cmpsb
or
cwtl
add
test
or
jg
bound
xchg
insl
or
lods
xor
pop
pop
and
mov
cmpsb
mov
jns
sub
rolb
cli
dec
out
jns
outsb
lahf
nop
mov
cmpsb
xchg
test
and
pop
dec
in
call
inc
inc
sub
shlb
lea
sub
jo
cmp
outsl
cld
aaa
dec
ficoml
cmp
test
test
adc
call
mov
push
shr
fmuls
imulb
mov
mov
mov
adc
stos
dec
jo
xchg
lret
adc
xchg
sub
xchg
in
push
rcrb
fisttpl
mov
fnstcw
add
cmp
push
lock
jg
and
fsubrl
sbb
loope
aaa
or
repnz
cltd
inc
stc
cmp
dec
leave
stos
out
fistps
cmc
add
pop
inc
mov
and
lea
add
imul
lcall
fadds
dec
out
hlt
or
inc
outsb
aaa
sbbb
xchg
scas
pop
lcall
pop
cs
test
cltd
es
sub
std
fisttps
push
rol
push
xor
bound
cmpl
call
adc
mov
out
mov
cmp
mov
cwtl
roll
mov
test
inc
inc
decl
push
and
or
and
sbb
push
stc
cmp
xchg
daa
and
xor
add
xor
sbbb
push
fsubrs
icebp
push
sbb
xchg
ljmp
outsb
cmc
xchg
lret
mov
cmp
loop
sbb
mov
cmpb
pop
mov
sub
or
xor
stos
insl
xor
inc
cmp
mov
negb
push
add
and
mov
add
rcll
inc
mov
adcl
mov
mul
fidivs
ss
in
pop
push
mov
mov
stos
das
jne
je
mov
leave
and
adc
outsl
sub
mov
add
popa
outsl
sub
das
sarb
cmp
dec
fwait
sbb
clc
add
pop
cmpsl
push
in
in
push
daa
adc
lods
js
subl
movsl
incl
jno
push
xchg
mov
xchg
out
fwait
mov
ljmp
or
jbe,pn
sub
sub
xorl
ja
je
ds
jl
cmp
movsb
dec
popf
lret
imul
bound
adc
pop
add
xchg
and
mov
stos
pusha
mov
stos
push
divl
lods
pop
sub
je
nop
loopne
push
adc
andb
mov
mov
movsl
leave
inc
sti
or
addr16
stc
fcompl
fwait
dec
mov
je
mov
popf
dec
outsl
xor
mov
ficoml
aaa
inc
jnp
jg
dec
push
jne
dec
pop
mov
xor
fdivrs
mov
int3
rcr
lds
and
jbe
push
outsl
cmp
jmp
insl
insb
rolb
or
imul
or
mov
loopne
jmp
cmp
stos
sub
sub
sbb
add
aas
shlb
roll
and
mov
add
cmpsl
cmp
dec
mov
stos
cltd
mov
push
mov
lods
pop
or
jl
cmp
add
inc
ja
xchg
mov
loope
frstor
mov
jle
negb
xlat
mov
dec
mov
insb
fidivl
push
les
movsl
outsb
jecxz
cmp
adc
inc
aad
scas
rcll
nop
pop
dec
outsb
pop
aaa
ror
mov
mov
icebp
mov
adc
inc
fcomps
jbe
dec
jne
lods
insl
fwait
sahf
inc
fwait
loop
cmc
xor
call
dec
dec
into
or
push
aas
xchg
mov
and
cltd
pop
add
mov
shr
ja
pop
lods
add
aad
fsubp
movsl
jg
xchg
sbb
cmp
inc
enter
in
orl
sub
pop
pop
jmp
bound
jbe
ljmp
inc
fdivs
add
pop
rclb
mov
xorb
out
push
in
divb
decl
mov
stos
sbb
ljmp
jmp
aam
sbb
adc
mov
mov
jl
nop
ja
push
imul
filds
insl
rcrl
inc
and
das
adc
mov
sbb
xor
sub
pop
test
push
out
xor
jb
stc
adc
subl
pop
push
mov
cld
pop
lock
inc
push
cld
iret
push
subb
jb
test
ffreep
jg
nop
mov
jecxz
call
cs
inc
dec
repnz
jl
mov
jl
loopne
xor
loope
mov
mov
xchg
addr16
xchg
or
adc
jl
pop
pushf
call
outsl
clc
jb
push
stc
jns
push
mov
aam
movsb
jbe
ja
adc
dec
pop
push
sbb
push
push
cwtl
shlb
push
adcb
xor
insl
jne
out
push
mov
cmpb
inc
cmp
lods
fimuls
jg
xor
dec
pop
shrl
enter
pop
cltd
xor
pop
sub
test
xchg
dec
lds
cmpsb
sbb
les
push
fiaddl
fwait
mov
imul
jmp
addr16
jl
sub
inc
jecxz
outsb
pop
jb
xchg
lods
push
popa
inc
scas
mov
aam
lods
hlt
add
in
dec
xor
cmc
sbb
fbstp
out
pop
fcmovbe
inc
sub
or
jbe
xchg
cmpsl
mov
dec
sub
cmp
movsl
xchg
mov
push
mov
ret
jne
call
xchg
or
jecxz
clc
fisttpl
bound
inc
add
adc
jbe
jnp
movntps
push
jae
test
lea
sbb
test
mov
jno
cmp
xorl
fldl
ss
adc
pushf
xchg
sti
ret
jnp
repnz
or
subb
jbe
sbb
mov
mov
sbb
insb
iret
cmp
and
lea
jmp
scas
inc
and
aaa
mov
add
jno
outsb
loop
add
dec
inc
neg
dec
ret
sub
outsb
lcall
fsubl
ljmp
in
or
arpl
scas
decl
nop
push
pop
or
sbb
or
rolb
adc
mov
pushl
sub
xor
cmp
fwait
stc
insb
mov
jl
std
ljmp
mov
jbe
xor
jmp
mov
mov
minps
and
add
fs
les
ss
call
mov
add
cmp
push
sbb
aam
push
jns
mov
dec
sub
loopne
jle
mov
and
adc
sbb
xchg
jp
lods
inc
ret
jle
popf
cmp
sub
dec
lcall
and
popf
sbbl
les
inc
xor
add
fsubl
jge,pt
xchg
or
xchg
subl
inc
dec
and
sarb
add
jp
mov
adc
jecxz
mov
mov
sub
and
pop
loop
xchg
call
jle
and
dec
pusha
fimull
mov
lahf
in
sbb
mov
pop
mov
call
add
mov
sbb
cmc
shrd
scas
incl
pop
or
xchg
push
into
mov
mov
sarl
push
insb
aad
test
ds
fsubrl
ret
scas
push
cs
popa
shrb
movsl
fmull
pop
cmc
adc
and
or
push
or
imul
ja
jbe
lea
int3
aad
xchg
mov
es
push
andl
mov
ljmp
lret
and
lahf
fbld
hlt
shrb
mov
out
mov
pusha
inc
or
or
jg
mov
aad
addb
mov
dec
mov
jbe
jmp
das
push
out
fnstenv
scas
lods
adc
xor
jmp
fcoml
xor
xchg
mov
mov
mov
addb
push
pop
mov
and
inc
add
sub
pop
stos
leave
mov
ja
loop
xchg
cmp
adc
aad
xchg
call
push
popa
xchg
adc
sbb
aas
xchg
sbb
leave
mov
cmp
scas
push
vmovntpd
inc
xor
pop
roll
xchg
mov
imul
inc
or
ret
xchg
fdiv
jle
inc
sbb
xchg
mov
pop
shlb
dec
dec
sub
cmp
repz
hlt
mov
test
mull
xlat
add
push
data16
push
ss
cmp
mov
lea
inc
aas
push
sub
mov
popa
push
dec
iret
add
iret
add
or
js
js
call
inc
rcr
roll
mov
in
jp
addr16
dec
mov
cmp
or
cmp
jno
push
mov
rcll
js
and
push
pop
push
fisttps
jle
ret
xchg
int
aam
fsubrl
lds
addb
adc
mov
mov
pop
cmp
inc
jle
int
adc
shr
filds
pop
lahf
adc
fidivs
call
stos
or
loop
out
adc
or
sbb
repnz
sub
das
adcb
push
and
xor
mov
lahf
sub
xor
cmp
dec
mov
adc
popa
fyl2xp1
mov
or
or
fstpt
sub
inc
lahf
std
ja
mov
xlat
shl
and
in
hlt
imul
pop
cmc
or
aad
inc
jb
outsb
adc
push
mov
mov
push
sbb
sub
fld
lods
cwtl
adc
sub
push
fildl
mov
inc
dec
and
adc
and
lods
js
cmp
sub
adcb
cwtl
orl
inc
addl
add
dec
xchg
cmc
add
add
or
aas
add
xor
out
lods
sub
jecxz
out
pop
mov
stc
rep
in
mov
push
fcoms
mov
pop
test
or
dec
div
add
jecxz
outsl
call
add
xlat
mov
imul
mov
or
insl
ficomps
or
xorl
and
shrb
sub
divb
push
jnp
lds
mov
shlb
jb
sbb
pusha
adc
shrb
fcompl
push
repz
faddl
outsl
fildll
xor
or
in
fcomp
nop
fmul
call
and
adc
xchg
int
add
fs
push
dec
add
out
adc
or
addr16
popf
push
les
test
pop
pop
jnp
sbb
mov
pop
adc
xchg
dec
inc
pushf
add
sbb
mov
xrelease
push
jg
shll
aas
pop
scas
jl
adc
cmp
mov
push
xchg
pop
call
loope
xchg
pop
push
inc
mov
lock
push
lock
mov
mov
cs
adc
test
pusha
adc
adc
xchg
rol
out
add
in
mov
mov
add
pop
mov
sub
cli
ret
jns
js
xchg
inc
mov
icebp
outsb
sub
inc
mov
lea
fwait
cmpsb
call
movsl
pop
pop
inc
jae
add
or
pop
adcl
test
jae
inc
xchg
sub
clc
push
fsub
xlat
das
not
jmp
movb
mov
fucom
cwtl
imul
fwait
cwtl
mov
jb
setbe
inc
je
sbb
jecxz
aas
inc
sub
mov
lea
adc
dec
rolb
popa
add
jb
xor
or
pop
jecxz
insb
jne
dec
or
xorl
loope
mov
pop
and
sbb
ss
movsl
mov
je
sbb
push
lea
lea
pop
cmp
cmp
push
call
adc
add
std
jno
xchg
mov
mov
push
test
jg
xchg
int
mov
mov
pusha
inc
mov
and
xchg
push
push
in
in
hlt
pop
ljmp
inc
les
fwait
cmp
or
and
int3
xorb
movsl
sbb
and
int3
dec
xor
sbbl
js
jo
into
movsl
sbb
xor
aas
shrb
bound
and
and
cld
loope
mov
fsubrl
mov
xor
pop
or
cmp
xor
add
and
adc
adc
push
push
andb
or
in
call
rcr
jnp
scas
cli
pop
fdiv
repz
mov
hlt
push
out
or
dec
sbb
push
test
xchg
in
xchg
mov
add
fsubs
sub
lock
lods
sbb
and
ja
mov
cmovne
mov
xchg
pop
sub
js
push
cmpsl
int
sub
pushf
ljmp
test
pop
adc
lahf
jge
test
xchg
bound
push
ljmp
inc
fcmovne
fiadds
sub
sahf
push
mov
call
in
icebp
fcoml
out
and
insl
hlt
lea
orb
xor
aas
inc
dec
jp
sub
mov
lahf
popa
add
jmp
ljmp
test
lcall
jg
fistl
mov
insl
jo
xor
aas
test
das
add
lcall
nop
jmp
pop
sub
movsb
add
jb
scas
jle
sbb
out
cli
stos
adc
fisttpl
mov
pop
icebp
cltd
add
cld
shr
out
shrl
cs
and
cmpsb
jno
add
dec
call
mov
jl
les
scas
icebp
xchg
push
insl
les
pop
jno
pop
sub
cltd
pop
xlat
inc
icebp
inc
aaa
cmp
cmpsb
add
imul
enter
adc
mov
in
pop
mov
mov
andb
pop
lods
push
and
mov
inc
pop
pop
mov
test
jne
add
push
adc
mov
mov
xchg
repz
mov
cli
das
cmc
out
and
jmp
add
inc
sub
lret
or
call
dec
adc
clc
jg
lds
and
dec
cmp
in
push
loope
push
mov
in
mov
or
sbb
mov
pop
pop
cmp
stos
push
call
cmc
ret
lods
pop
in
dec
aad
in
xchg
sub
imul
mov
cmc
mov
cmp
or
mov
enter
add
adc
push
sbb
inc
pop
mov
sbb
mov
add
inc
cs
jmp
aad
and
sar
shlb
scas
ret
xchg
mov
test
jbe
mov
mov
fdivrs
jae
and
push
or
out
add
movsl
push
add
xlat
call
sarb
cltd
pushf
sub
arpl
add
aaa
pop
clc
shlb
repz
stos
das
inc
loop
dec
shlb
test
out
mov
ds
scas
stos
test
lods
ret
loopne
push
xchg
je
dec
pop
push
mov
cmp
adc
test
outsl
mov
adc
dec
jmp
push
sbb
mov
stc
mov
jbe
pusha
lcall
dec
adc
jg
pop
sbb
shll
mov
push
dec
jge
add
sti
push
fistl
mov
jg
out
push
xchg
mov
ds
and
outsl
mov
icebp
inc
push
xchg
dec
shll
xchg
cmp
in
sub
jg
cwtl
gs
push
mov
movsl
cli
or
mov
sub
mov
adc
cmpl
fisttpl
push
push
dec
rcr
pop
inc
inc
call
sbb
lret
popa
sbb
outsl
mov
or
dec
xchg
lcall
stos
push
inc
subl
adc
in
into
jp
mov
out
test
fistpl
data16
or
inc
jno
push
arpl
mov
sar
adc
sbb
xchg
cmpsl
cmp
clc
aaa
bnd
int3
out
add
ret
xor
mov
push
push
jbe
mov
adc
shlb
ds
xchg
jae
lret
in
mov
jg
jmp
and
dec
test
dec
fs
addr16
mov
xchg
shrb
mov
jg
movl
push
xchg
sub
mov
lock
lcall
push
ret
dec
sbbl
aaa
mov
xchg
test
clc
inc
push
and
test
mov
dec
mov
int3
mov
fildl
pushf
pop
ljmp
cwtl
movsl
jle
incb
inc
mov
stc
fdivrs
xchg
cld
test
jg
nop
pusha
add
das
jg
push
add
jecxz
jo
sbb
outsb
rorb
push
aas
pop
inc
mov
add
into
pushf
jne
lods
cld
cmp
pop
lahf
or
cld
div
add
push
xor
lret
popa
sub
mov
jo
pop
mov
pop
mov
and
xor
lods
pusha
mov
xorl
das
std
sub
xor
mov
scas
out
cmp
loope
loopne
xor
in
addr16
push
lcall
push
mov
jp
mov
xchg
mov
test
cmp
sbb
lret
sbb
mov
outsl
sbb
cli
dec
adc
push
fildl
adcl
aaa
sub
pop
mov
dec
pushf
movsb
cmpsl
ret
push
imul
imul
shl
inc
loopne
jg
in
lock
in
push
pop
mov
dec
sub
shrl
push
dec
pop
dec
jg
in
movl
sbb
clc
cli
dec
cwtl
inc
subl
popa
cmp
loop
incb
notl
stos
addr16
and
test
fsubrp
inc
loopne
mov
sar
xchg
bound
pop
cmpsl
leave
bound
fsubrp
sub
or
dec
sbb
jle
and
jo
xchg
mov
lock
aaa
scas
aam
adc
and
test
push
rcll
clc
cmp
or
enter
imul
or
jno
xorb
add
out
nop
dec
mov
clc
das
sbb
add
lret
xchg
xchg
jg
mov
das
cwtl
in
dec
sbb
cwtl
lods
adc
and
lods
fs
dec
add
push
inc
inc
mov
loope
mov
pop
inc
sub
pop
js
fildll
bound
or
pop
fldenv
xor
cmpb
mov
dec
cmp
add
or
pushl
push
out
push
loopne
into
adc
call
nop
test
outsl
cmp
mov
inc
cmc
aaa
adc
mov
repz
lds
dec
lcall
ljmp
stos
js
add
fisubl
and
jnp
push
cmpsl
push
mov
or
pop
aad
xor
test
or
jnp
mov
cmp
cvtdq2ps
and
aam
add
dec
enter
ljmp
outsl
jo
and
adc
and
adcb
mov
push
aam
aam
mov
loop
inc
fnstenv
sbb
outsb
test
std
mov
pop
mov
and
pop
loopne
cmp
push
stos
mov
cmpsl
inc
xorb
lock
pop
sbb
insb
fstpt
popf
inc
inc
fs
sub
mov
outsb
addr16
sbb
lahf
dec
mov
mov
mov
lods
dec
or
cli
mov
or
cmpsl
dec
mov
mov
mov
adc
mov
jae
lret
sbb
out
fdivrl
jp
lret
push
cmp
shll
add
xorb
loop
inc
out
or
mov
in
movsb
lds
cli
inc
cld
scas
sbb
aad
mov
jmp
or
adc
cmp
sbb
js
adc
mov
enter
or
cltd
cld
daa
adc
jle
scas
inc
mov
pusha
hlt
fnstsw
dec
xlat
clc
sbb
push
lret
or
pop
cmpsb
push
xchg
add
jge
jg
aam
stc
sbb
insb
mov
rcrl
inc
mov
dec
aaa
mov
or
xor
out
test
xchg
cmp
ret
pop
ljmp
js
out
cwtl
and
mov
pusha
ret
cmp
data16
cmp
in
sahf
movups
inc
dec
hlt
aaa
jnp
cwtl
xor
in
xor
push
xchg
push
dec
sarb
pop
cmp
xchg
sbb
lret
push
divl
xor
aam
xor
sbb
and
fstpt
pop
insl
adc
xchg
test
mov
fwait
cmp
push
add
and
cltd
inc
add
jp
and
lahf
dec
push
inc
addr16
out
xchg
mov
jge
xor
ret
add
test
dec
cmpsl
pop
test
or
ret
dec
xor
fcoms
xor
jne
les
jns
in
add
fadds
mov
mov
add
inc
repz
shll
es
mov
std
adc
aaa
arpl
mov
cmp
movsl
enter
rcr
xor
test
cld
mov
cmp
and
jne
mov
xchg
xor
xor
inc
jecxz
scas
sti
test
icebp
hlt
stc
adc
stc
movsl
dec
inc
int
addb
ja
mov
test
jb
rorl
pop
jae
adc
fistps
pop
sti
add
js
cmp
mov
jecxz
ljmp
mov
ja
int
popf
inc
pushf
add
sub
rclb
fstpt
and
ja
je
sub
add
mov
shlb
add
jp
fidivrs
enter
mov
jg
ret
icebp
pop
mov
add
insb
push
mov
aaa
jmp
dec
hlt
inc
xor
sbb
xlat
mov
dec
filds
and
pop
adc
addr16
sbb
cmc
sbb
je
fmuls
fimuls
cmp
insb
adc
dec
data16
fdivr
dec
movsl
xchg
adc
or
xor
test
sbb
lods
pop
out
in
sbb
sbb
leave
cld
subl
in
add
pop
enter
jg
mov
sbb
mov
cmp
aaa
data16
xchg
mov
call
mov
int3
repnz
lcall
popf
mov
addr16
popa
in
arpl
fildl
add
and
or
mov
and
adc
clc
insl
xlat
mov
cmpsb
add
or
scas
or
aad
stos
push
rcl
jbe
or
mov
lock
sub
outsl
repz
fildll
adc
call
sbb
and
adc
icebp
cmpb
or
adc
pop
xchg
or
fcoms
dec
sarl
push
bound
pusha
fwait
xor
shlb
int3
rcrl
pop
lea
in
xor
hlt
or
movsb
dec
mov
test
jbe
fcmovnbe
push
js
divb
shrb
sbb
and
fcoml
shl
mov
mov
out
push
lcall
mov
push
fsubrs
pop
repz
and
mov
jo
xor
xchg
sbb
es
cld
push
les
push
fsubrs
cmp
lcall
jecxz
pop
and
rcrb
and
ja
cmp
outsl
and
addr16
adc
mov
jae
push
shll
jbe
xor
imul
sarb
add
mov
push
mov
stos
xlat
jg
pusha
or
sbb
xor
mov
pushf
js
mov
dec
and
mov
mov
pop
push
mov
sbbl
cwtl
cmp
movsb
daa
in
add
pusha
and
jne
test
push
fadds
inc
shll
sub
pusha
out
mov
mov
loop
push
aas
inc
pop
dec
or
pop
nop
push
push
xor
test
sbb
incb
inc
lods
dec
sbb
pop
push
dec
adc
ret
ret
adc
cmp
sbb
cmp
jne
imul
scas
sbb
aam
push
inc
enter
shlw
out
test
mov
test
mov
icebp
inc
pop
lcall
shrl
stos
and
jo
xorb
jge
jbe
xchg
jno
imul
stos
pop
cmp
je
stos
loopne
mov
jle
sbb
ret
or
cwtl
cwtl
sbb
inc
lds
gs
push
push
jle
pop
mov
sub
xor
xor
lds
ret
sbb
bound
mov
xor
xlat
jne
js
aas
mov
hlt
sbb
sbb
mov
stos
fsubrs
pop
cltd
lods
rcrb
adc
cmp
and
add
insb
fcomi
add
aam
fsubp
inc
andl
pop
and
cmpsb
jecxz
push
xchg
or
xlat
arpl
outsl
add
mov
test
ret
imul
test
or
inc
cmp
outsb
pop
sub
clc
mov
adc
xlat
call
lods
clc
adc
ret
cmpsl
dec
inc
jmp
decl
jno
mov
xlat
push
cmp
insl
mov
jge
and
mov
ss
xchg
es
decl
mov
sbb
int3
dec
pop
rolb
pop
in
push
ss
pusha
xor
push
arpl
sub
cmp
pop
pop
mov
xchg
cwtl
ja
dec
cmp
or
mov
mov
dec
mov
ficoms
mov
add
inc
movsl
out
scas
stos
stos
cmpsb
or
shlb
adc
and
stos
ljmp
cmpxchg
mov
mov
lods
inc
cmp
dec
sbb
push
clc
mov
int
inc
sub
add
lds
in
or
jae
or
add
mov
xor
add
fidivrl
jmp
inc
loop
or
dec
je
test
jbe
fmul
add
cld
in
xor
ret
clc
jmp
imul
mov
sub
jp
dec
stc
loop
in
test
ret
xchg
popf
pop
in
inc
jge
xor
bound
ds
and
jno
addr16
clc
xchg
mov
fisttps
test
jmp
int
inc
push
les
mov
dec
cwtl
imulb
mov
push
pusha
cs
cmpl
xor
push
xchg
sub
cmpsl
pop
aam
cmp
imul
cmovne
iret
ja
test
ja
negl
fisubs
cmp
cmp
lret
mov
and
dec
or
sbb
push
in
or
inc
sbb
jp
mov
inc
sbb
outsb
inc
add
add
sarb
insl
scas
push
xchg
repz
int
inc
sbb
pusha
add
mov
mov
pop
ret
mov
js
data16
push
and
or
or
dec
das
hlt
jae
add
mov
pusha
pop
clc
xor
inc
loopne
ror
mov
push
or
test
and
xor
in
mov
or
movsl
mov
mov
dec
mov
cmp
xor
das
inc
mov
jae
rolw
xchg
pusha
loopne
or
jb
js
pop
into
add
das
arpl
in
in
pop
cld
add
bound
scas
adc
adc
sub
push
dec
loop
fildll
inc
fs
inc
stos
pop
loop
pop
cmc
and
pop
or
orb
idivb
or
loop
mov
xchg
add
adc
out
jns
mov
ljmp
push
inc
inc
and
sbbb
dec
inc
jne
ret
jmp
cmp
notl
cs
cmc
add
adc
cwtl
notl
mov
inc
aam
gs
in
data16
bound
test
push
inc
fstps
inc
push
bound
mov
call
sbb
out
dec
sbb
jl
dec
push
sub
inc
add
test
pop
or
ret
hlt
add
and
hlt
cwtl
cli
fildl
pop
sub
pop
mov
adc
sbb
jnp
cmp
and
mov
inc
repnz
pop
push
icebp
mov
fcmovnbe
mov
add
lret
aam
or
adc
stos
lock
adc
je
es
inc
daa
sbb
and
adc
fstpl
je
mov
push
jg
fdivl
sub
imul
out
ljmp
clc
fisttpll
jbe
sbb
add
xchg
out
xchg
imul
push
adc
sbb
mov
cmpsl
pop
rorb
icebp
mov
stc
or
mov
sbb
xor
fucomi
leave
fistpl
push
inc
pop
push
loopne
mov
lock
xor
sub
jns
and
add
aam
jmp
lea
pop
movsb
pop
xor
pusha
push
rolb
nop
jae
mov
mov
idivl
inc
jp
rorb
ret
ss
aas
cmp
xchg
add
inc
in
xor
inc
push
test
inc
xor
adc
dec
xlat
mov
cltd
ss
hlt
push
sbbl
in
test
nop
jp
inc
sbb
and
fbld
clc
ret
inc
xchg
jae
add
sbb
out
adc
or
fidivs
mov
out
inc
dec
sub
aaa
mov
bound
out
add
shrl
push
fistpl
out
int3
ret
dec
into
icebp
adc
push
jae
rorl
leave
sbb
adc
pop
pop
mov
xor
jb
ja
xlat
push
inc
xor
jp
in
sbb
or
outsl
and
aam
in
cmp
loopne
push
jne
rorb
mov
rcr
inc
jns
clc
pop
xor
lds
hlt
cmpsb
dec
clc
enter
pop
es
inc
rolb
cmp
xor
sbb
pop
gs
mov
and
ja
xchg
xrelease
test
cmp
orb
push
dec
inc
int
rorb
mov
push
hlt
out
mov
push
jno,pn
add
out
sub
xor
ljmp
xchg
aad
dec
sbb
and
fyl2xp1
sbb
add
andb
and
fildl
fbstp
xchg
idivb
rcl
mov
fdivrs
push
out
or
jb
jb
in
stos
adc
jne
xor
cld
ss
adc
xor
dec
ret
addl
ds
xor
dec
xor
adc
xor
cmp
add
jp
hlt
clc
dec
xor
or
inc
aas
push
mov
or
mov
sub
ret
push
orb
xchg
push
cmp
push
push
inc
sub
xor
push
adc
jb
js
inc
mov
sbb
mov
cmp
dec
push
mov
push
jo
xchg
insb
inc
jle
outsl
add
push
out
or
or
jmp
adc
lret
dec
xchg
js
xorl
inc
jo
xor
iret
subl
inc
fisttps
xor
cmpsl
or
xchg
inc
adc
adc
or
sti
test
shr
pop
outsl
testb
fcomip
mov
in
cmp
add
add
add
arpl
loopne
mov
and
outsb
rorl
push
mov
inc
repnz
sub
pop
cmp
jo
cwtl
in
aas
out
inc
mov
and
and
jo
push
loope
and
repz
sbb
pop
mov
mov
lods
orb
aas
adc
fldt
imul
push
add
insb
cmpsb
xorb
cld
or
or
mov
pusha
in
mov
ja
jmp
add
add
jb
stc
adcb
mov
dec
aam
lcall
fcompl
sub
pop
aas
pop
pop
push
addb
pop
bound
loop
add
mov
or
or
sbb
lods
aam
arpl
idivl
inc
stos
xor
ret
sub
hlt
adc
aam
test
shr
jge
sub
cmp
dec
mov
nop
lcall
cmp
or
inc
sbb
std
push
jbe
add
leave
adc
rclb
dec
push
adc
fs
mov
and
sbb
pop
mov
das
leave
subb
cmp
int
cmp
jle
push
ds
mov
arpl
sbb
jmp
icebp
adc
sub
add
lcall
mov
mov
hlt
repz
or
in
sub
jmp
jno
dec
pushf
xchg
cltd
jne
lds
orb
jnp
mov
sub
or
dec
pop
pop
jp
cmp
into
hlt
xchg
sub
out
push
shll
pop
mov
test
imul
es
ja
cmp
addr16
cmp
icebp
test
jmp
jle
data16
jmp
xchg
push
popf
push
xchg
loopne
xor
jae
cmp
call
xor
fadd
aas
push
shlb
sub
pop
mov
sub
cmc
pop
add
adc
pop
jmp
mov
xchg
sahf
sahf
fwait
xchg
push
pop
pop
clc
bswap
adc
mov
mov
cmpsb
call
jecxz
decb
orb
fstp
jno
add
aam
xor
mov
mov
jno
add
or
or
lret
push
fistps
sbb
add
add
cmp
xchg
push
push
adc
inc
push
inc
cmp
xor
fsubr
outsl
and
add
rolb
popf
pop
test
xchg
or
scas
mov
jo
inc
xor
fwait
jl
pop
lahf
mov
inc
shlb
daa
push
and
pop
jb
xchg
jmp
icebp
inc
sbb
mov
push
fs
mov
movsb
outsl
ret
stos
adc
leave
inc
and
xchg
cmp
mov
popa
cmc
sbb
les
popf
mov
rolb
cmc
mov
mov
orl
insl
and
mov
cmpsb
dec
pushf
jmp
cli
fsubs
cmp
dec
pop
mull
pop
sbb
pop
fistpl
xor
jmp
jp
enter
test
xor
cmp
aas
fldl
cmp
idivb
xor
xor
repz
adc
mov
pop
sbb
outsb
fstps
addb
enter
cmpsb
mov
dec
cwtl
sarl
shll
add
push
incl
mov
add
test
int3
in
or
sbb
jle
adc
loopne
xor
inc
sbb
shlb
mov
inc
mov
cmc
push
mov
jo
aaa
stos
add
aam
dec
repnz
imul
xor
xor
cmp
push
mov
cmp
push
movsl
inc
dec
sub
mov
push
add
cwtl
cltd
imul
dec
mov
popf
xor
add
add
pop
lds
loopne
inc
icebp
jnp
faddl
sub
mov
test
clc
inc
scas
sarb
fiadds
cs
pop
add
jbe
add
jne
jbe
xchg
inc
sub
fst
xchg
into
ljmp
cmp
cli
xor
jo
add
jb
test
adc
lock
loopne
test
das
incl
fidivl
and
popa
inc
test
loop
lret
cmp
push
mov
xor
pop
fs
pop
and
int
ret
adc
inc
andl
or
orb
jb
mov
into
adc
mov
push
fcompl
cmp
dec
aaa
sbb
mov
nop
or
js
sub
mov
test
and
std
or
je
cmp
jae
aas
mov
jge
add
sub
inc
mov
stc
adc
cld
paddb
mov
loope
addl
sbb
push
outsl
adc
push
sbb
std
loope
or
addl
xor
cmp
adc
cmp
pop
xchg
pushl
sub
shll
popa
or
or
mov
aam
dec
mov
pop
push
jmp
imul
mov
out
adc
add
loope
push
push
pop
add
pushf
les
cmp
add
lret
pop
jno
mul
and
subb
add
mov
subl
sub
out
out
adc
loope
adc
test
jne
jge
movsb
aaa
fisubs
sti
xor
testb
sbb
or
lcall
xor
inc
mov
cwtl
std
xor
or
cwtl
pop
stos
test
sbb
out
pop
inc
inc
hlt
cwtl
int
mov
in
or
in
and
sti
adc
pusha
test
jne
cmp
mov
loopne
bound
cmp
in
inc
fcmovnu
mov
add
add
cmp
fidivs
mov
repnz
cltd
add
int3
and
add
in
neg
cmpsb
fstpt
les
shr
dec
xor
repz
cmp
das
fistpll
pop
ss
or
cpuid
add
cmpsl
out
add
iret
and
mov
dec
push
dec
jns
imul
mov
xor
inc
push
hlt
sub
and
sbb
or
nop
add
jno
sbb
bound
call
cld
xor
and
xor
aas
fcomi
inc
xor
sbb
inc
jae
jae
cmc
aam
ret
add
adc
lds
or
aam
leave
jne
pop
aam
icebp
cmp
fiaddl
lret
or
push
out
jbe
roll
jnp
xchg
add
jne
jl
js
loop
and
test
rcl
fcmovu
sub
mov
mov
adc
mov
popf
inc
shlb
and
scas
pop
sarb
and
mov
jne
push
xor
adc
jno
dec
add
jle
std
ja
pop
lds
add
in
out
enter
add
dec
mov
imul
dec
xor
lock
sub
xor
push
ret
xor
mov
ror
and
mov
test
fstpl
in
or
arpl
lock
pop
enter
hlt
incl
adc
ret
nop
addb
incl
rorb
mov
into
test
xchg
add
jae
outsb
ret
add
add
sub
loop
cwtl
paddsw
adc
xor
lock
xlat
push
cld
inc
cmc
adc
call
cwtl
jge
lock
pop
adc
add
jp
and
jg
sub
pop
add
fists
shr
ds
add
test
sub
imul
sbb
sbb
push
fldl
xor
mov
fidivl
das
or
clc
sahf
add
push
mov
and
fsubr
sub
push
ficoml
call
jge
add
mov
pop
jne
cmp
repnz
mov
adc
push
add
and
fisubrs
arpl
adc
xorps
scas
inc
frstor
and
push
scas
lds
stos
fiaddl
pop
clc
add
ret
outsl
pop
pop
inc
sbb
stc
xchg
cs
push
mov
add
inc
gs
imul
inc
in
mov
jo
imul
mov
dec
ja
pop
adc
wbinvd
add
push
repnz
xor
add
outsb
mov
push
orl
repnz
mov
add
mov
rolb
adc
insl
add
out
out
mov
xor
incl
mov
sbb
add
paddq
in
mov
jns
push
add
jmp
mov
xlat
cld
xchg
add
aad
mov
and
dec
add
pop
call
adc
stos
add
or
fcompl
sub
insb
mov
xor
push
sbb
les
sbb
je
dec
adcl
movsl
lcall
xor
stos
mov
test
mov
jecxz
fimuls
push
mov
sbb
and
loopne
fimuls
orl
filds
adc
clc
push
jne
xor
inc
jmp
add
fisttpll
lods
inc
sub
shll
and
shll
shlb
cmp
push
push
jp
lcall
cmc
ss
aad
cmp
pop
dec
push
pushf
mov
inc
call
mov
push
sbb
mov
jns
fsub
mov
ja
sub
adc
sub
call
inc
sub
outsl
and
xchg
neg
push
aaa
inc
or
addr16
push
lock
dec
sub
adc
outsb
sbb
cld
out
pop
add
insb
xchg
imul
mov
adc
adc
fs
test
imul
xor
or
dec
sbb
mov
or
adc
fcomps
or
hlt
addb
out
test
aad
test
adc
add
jbe
dec
adc
cmpsl
movsb
pop
pop
ljmp
lcall
ficomps
fcoms
push
and
adc
mov
loopne
fidivs
push
sbb
dec
gs
clc
movsl
stos
inc
arpl
mov
xchg
push
inc
jge
push
push
pop
add
cli
int
adc
fcomps
push
mov
rorb
xchg
fidivrs
and
rolb
in
mov
cmpsb
fisttpll
xchg
mov
outsb
mov
movsb
std
add
or
in
subb
loop
xor
imul
testb
push
pop
jbe
push
mov
imul
and
xor
jle
mov
jmp
push
or
xchg
or
subb
icebp
xor
mov
xlat
dec
jne
fildll
add
fbstp
xchg
jmp
incb
add
adc
jns
adcl
lock
int
inc
inc
push
movsb
adc
jno
fidivl
cli
sub
add
jno
loop
sub
fwait
mov
push
push
lret
inc
sub
jns
pushf
aaa
ljmp
aas
cld
fistpll
imul
mov
fiaddl
fsubrs
lret
mov
jecxz
fstpt
mov
xchg
jbe
fcoml
popa
sbb
xchg
jmp
inc
loop
out
mov
mov
xchg
adc
movsb
test
or
jg
movsl
in
sbb
jo
add
add
movsl
jbe
stos
out
loopne
mov
pop
mov
jmp
jge
lock
cs
adc
mov
lahf
cmp
add
xchg
stc
jmp
insl
sub
inc
test
sub
push
sbb
push
mov
fildll
test
inc
div
jne
jnp
xlat
wbinvd
in
mov
or
shll
gs
loop
xchg
aam
sub
inc
icebp
mov
flds
in
pop
or
mov
cmp
shlb
fstl
cs
or
mov
mov
mov
cmp
jmp
mov
inc
fbld
push
jne
fldt
pusha
cmp
js
pop
adc
sub
jge
aas
and
mov
and
gs
adc
fucom
jae
in
aam
push
call
mov
scas
mov
ret
int3
jb
add
pop
nop
jb
sahf
stos
mov
pop
loope
or
or
lods
jno
out
adc
out
daa
shrb
and
xor
adc
aam
mov
pushl
cmc
xchg
insl
lret
xor
ds
add
mov
repnz
adc
sub
xchg
jmp
mov
call
jmp
dec
loope
mov
lcall
xor
and
shll
pop
fistl
cmp
dec
xchg
xchg
decb
and
mov
fisttps
lock
repnz
and
sbb
push
or
scas
nop
addr16
shr
clc
ljmp
mov
and
frstor
mov
jbe
clc
xchg
add
lods
rol
popa
mov
pop
xchg
push
adc
test
dec
mov
pop
dec
pop
stos
pop
mov
push
insl
jmp
test
lock
negl
xchg
fdivs
xlat
jbe
cmpb
stc
pop
jle
mov
cs
adc
jmp
cmc
mov
and
or
test
nop
jle
xor
add
or
jmp
push
fwait
in
sbb
das
or
imul
inc
std
das
jge
test
rdpmc
inc
jmp
fadds
sub
sahf
daa
out
pop
add
das
cmpsl
enter
cmpl
stos
enter
xchg
das
jl
adc
aas
or
add
mov
mov
push
stc
lock
pop
mov
fs
testb
dec
mov
sbb
pop
movsb
repnz
jne
in
push
fldt
lahf
adc
add
mov
loop
or
clc
adc
fimull
in
mov
sbb
addl
dec
jo
or
and
mov
push
xor
shlb
jle
cmp
and
dec
aaa
ret
lea
push
push
ja
in
rcl
les
mov
movb
inc
insl
divb
add
cmp
or
pop
mov
push
movsl
fwait
loop
and
xor
ja
js
jecxz
cwtl
mov
jmp
in
sub
push
cmp
ror
pop
das
inc
decl
sub
jl
cmpsb
shr
adc
mov
shlb
ret
repz
and
or
fistpll
jmp
adc
in
stos
js
dec
jg
xor
daa
jno
js
pusha
adc
test
test
incl
shrb
add
mull
fs
push
cmc
jae
notl
add
clc
sbb
adc
repz
sub
cmp
incl
pop
adc
gs
push
cwtl
xchg
cmp
pop
ffree
mov
out
pusha
pop
movsb
das
pop
lea
and
cs
inc
jl
test
pop
add
jbe
mov
pop
or
adc
call
cmp
adc
mov
mov
mov
in
jmp
cmp
lahf
jge
pusha
cltd
popa
push
lods
test
addb
mov
test
lods
fisttps
xor
dec
or
cli
mov
add
dec
icebp
leave
inc
mov
iret
cmp
inc
insl
pop
aaa
jbe
and
aam
mov
daa
lea
mov
jo
lret
or
add
fisttps
fincstp
test
outsl
adc
mov
mov
pop
stc
into
mov
lods
jne
xor
popa
rolb
test
cmp
dec
mov
cmpsb
call
push
adc
mov
shrl
es
dec
inc
cli
lea
mov
push
inc
and
sbb
inc
fnsave
scas
sub
aaa
pop
clc
fiadds
sub
call
es
cmp
loope
sbb
xor
repz
ljmp
shlb
in
sub
int3
gs
push
inc
jno
fwait
stos
std
or
pop
xor
cmc
mov
sub
jg
cmpsl
cmpsl
adc
rcll
xchg
je
subb
aad
stc
xor
sahf
js
divb
dec
dec
mov
push
xchg
pop
pop
je
fisttpll
fdivs
push
and
loope
insl
hlt
mov
jb
pop
xchg
sbbl
std
outsl
jecxz
mov
fs
mov
mov
cltd
mov
ret
add
movsl
jae
inc
add
test
gs
push
movsl
loope
hlt
push
push
jmp
std
lcall
daa
insl
xor
and
xchg
inc
lret
or
std
xchg
lods
inc
popa
jmp
xchg
nop
sub
ret
ja
lret
pop
jo
sbb
cmp
sub
test
js
cmp
xchg
cli
ret
pop
sahf
push
insb
imul
xor
mov
sbb
pop
push
outsl
xor
inc
lods
fwait
test
les
dec
sti
and
cmp
in
sbb
mov
sbb
mov
and
pop
sbb
aas
sub
fiaddl
cmp
clc
inc
sti
mov
adc
movsb
adc
pop
push
push
call
mov
push
test
shrl
ret
loopne
push
idivl
xchg
data16
push
inc
lea
pop
jo
sub
addb
lds
pop
adc
mov
jno
mov
loopne
aam
mov
jg
imul
xor
rorl
jp
lock
xlat
push
outsl
in
pop
pop
fs
dec
pop
mov
and
inc
aad
pop
or
cli
push
cmpsl
sub
push
add
inc
mov
push
cltd
and
daa
lods
jbe
hlt
lcall
dec
sahf
and
sbb
or
push
or
fisubrl
aaa
aaa
clc
add
add
mulb
pop
xchg
loopne
test
dec
bound
push
mov
or
inc
pop
and
lea
or
inc
shll
dec
dec
mov
add
mov
das
mov
inc
lret
in
jb
push
dec
mov
imul
mov
add
mov
sbb
sub
into
sub
aad
cmp
aad
xchg
lret
hlt
in
adc
sarb
jp
sbb
mov
fs
cmpsl
mov
lock
inc
add
mov
test
test
mov
mov
ss
inc
shrb
lods
stos
ja
add
xchg
adc
adcb
test
push
aad
rorb
pusha
adc
jo
insl
mov
imul
cmp
in
out
dec
icebp
orb
bound
data16
add
outsl
aas
inc
shlb
iret
mov
xchg
rolb
int
shrb
cmp
in
outsl
jg
scas
adc
cmpsl
daa
bound
sbb
dec
xor
sub
sbb
mov
mov
movsl
xor
mov
or
push
jb
jmp
adc
or
sub
mov
addb
sti
push
leave
stos
jp
xor
inc
lret
bound
push
cmp
aam
insb
and
jecxz
adc
push
adc
insb
lods
insl
dec
cmp
sub
or
xchg
and
sub
add
inc
dec
pop
rorb
sub
inc
xor
adc
stos
and
call
enter
xchg
inc
pop
sbb
in
inc
xlat
xchg
pusha
cld
sbb
adc
inc
shlb
out
pmaxsw
fcmovu
fdivrl
inc
jo
push
mov
adc
imul
push
icebp
xor
and
cmp
and
xchg
test
add
adc
jmp
adc
add
add
inc
loopne
rclb
adc
cwtl
loope
das
jno
bound
sub
pop
rcll
fbstp
loope
leave
sbb
loop
add
loope
and
pop
mov
cmp
bound
into
aas
adc
or
add
aaa
pop
add
xor
adc
cld
inc
push
add
cmc
push
sbbl
in
insl
testl
pop
mov
xor
or
outsb
fisttpll
es
mov
movb
xchg
add
cmp
jae
lret
std
outsl
cmc
mov
xor
cltd
push
test
mov
jno
jg
aas
push
dec
in
mov
in
dec
mov
stos
jbe
iret
repz
cmpl
xchg
fsubr
mov
int3
jg
aam
mov
cmpsl
sub
sub
inc
lods
imul
dec
std
adc
addr16
dec
lds
in
hlt
insl
loopne
outsl
loop
push
lret
jnp
rolb
cmp
nop
insl
push
sub
lea
arpl
call
or
cmp
pusha
mov
mov
jmp
out
sub
je
sti
dec
dec
shl
clc
add
jecxz
fisubs
xchg
push
or
rcrl
xchg
dec
sbb
mov
xchg
iret
push
insb
xchg
loope
or
in
divb
mov
mov
fwait
add
inc
daa
aaa
out
dec
mov
sbb
push
mov
test
mov
sti
add
clc
jg
mov
inc
into
adc
pop
mov
inc
cmpb
add
test
xor
insl
and
mov
andl
sahf
add
popf
ljmp
cmp
cmp
inc
dec
xchg
ret
jns
push
xchg
loopne
mov
test
or
enter
add
pushf
mov
mov
pop
push
xchg
fdivp
mov
pop
jb
dec
ret
in
call
mov
sbb
sbb
jae
pop
push
mov
xor
subl
mov
movsb
ja
cld
aaa
out
arpl
push
mov
subb
push
jbe
mov
pop
xchg
ljmp
dec
in
adc
fucomi
lods
movsb
cltd
fcoml
leave
dec
or
sub
div
mov
dec
inc
inc
jp
jmp
pop
push
dec
fdivr
nop
lock
push
lahf
shr
mov
lds
pop
adc
in
and
jle
pop
mov
loopne
addb
adc
out
push
push
in
leave
push
mov
dec
jo
mov
stc
jg
sbb
push
test
popf
test
rcrb
or
int3
test
cli
ret
mov
pop
jae
add
stc
pop
xor
mov
rolb
test
inc
add
jl
call
lock
ret
sbb
cld
inc
mov
lods
fcom
cmpsl
popa
mov
cwtl
std
push
lock
call
sub
ljmp
cmpsb
adc
nop
sub
push
jne
sub
sbb
enter
mov
push
cmpsb
mov
mov
push
jnp
and
out
mov
out
fnstsw
aam
negl
push
enter
add
adc
or
sbb
jo
fwait
mov
sbb
sbb
loopne
aad
inc
cmpsb
imul
bound
pop
sub
in
fcompl
addr16
in
or
cmc
xchg
add
shl
dec
ret
int
loope
adc
loope
add
add
mov
push
imul
sub
or
inc
add
xor
scas
mov
into
pop
adc
pop
imul
dec
mov
mov
stos
daa
mov
adc
add
inc
iret
ret
xchg
movsb
sub
add
mov
sbb
jnp
mov
jbe
jl
add
into
aam
out
sbbb
jecxz
cli
cmp
push
and
add
movsl
mov
cwtl
push
xor
icebp
inc
es
je
jp
sbb
sbb
mov
sub
mov
repz
dec
inc
push
inc
sbb
sbb
bnd
daa
dec
push
call
sbb
enter
xor
push
add
ja
xchg
es
adc
add
rcrl
scas
add
int3
rolb
xorl
sub
and
mov
inc
orl
addb
scas
loop
stos
popf
or
sahf
repz
and
cmp
cmp
fiaddl
pop
adc
fisttpll
hlt
jle
in
sbb
nop
stos
mov
xor
push
push
jp
cltd
loope
adcb
push
mov
sbb
cwtl
inc
xchg
or
adc
or
xchg
dec
push
pop
push
add
mov
inc
pop
and
mov
lret
ret
and
dec
pop
and
clc
push
or
jae
inc
jbe
imul
xor
addr16
fs
sarl
movb
and
int3
mov
sub
cs
xor
xor
cmpsb
lcall
cmp
and
loope
clc
dec
andb
xor
jnp
jl
pop
mov
add
shlb
dec
mov
sbb
sub
push
sbb
fstpt
repz
xor
pop
add
jp
dec
loope
rorb
adc
adc
repz
xor
jmp
mov
in
xchg
cmp
adc
or
lds
leave
repnz
ss
jge
daa
and
decb
das
fadds
mov
add
sub
rcll
pop
roll
cltd
sub
test
fadd
cmp
hlt
sub
scas
imulb
das
xchg
add
fcoml
add
adc
fiadds
loopne
call
jge
cmp
lea
mov
hlt
sub
sti
aam
rcpps
in
fiadds
and
out
cmp
clc
orb
mov
and
or
adc
sbb
dec
add
stc
mov
push
adc
xchg
je
fldl
shlb
or
or
inc
popa
xor
or
and
das
and
push
push
push
or
aas
rclb
xorl
or
pop
pop
fdivrp
push
adcb
movsb
imul
std
adc
push
adc
push
es
or
imul
sub
cmpsl
add
jle
mov
adc
xchg
and
cs
cmc
lcall
add
mov
dec
cs
test
insb
icebp
pop
adc
adc
cli
scas
stos
lret
and
fisttpll
std
pop
mov
dec
jge
pop
cmp
add
sub
insl
xchg
cmpsb
ss
dec
and
pop
cmp
push
lret
incl
push
xor
inc
push
scas
js
add
add
scas
add
adc
jbe
add
lds
mov
mov
loopne
mov
mov
cmpsb
pop
sbb
sub
push
pop
fcompl
cmp
loop
xor
jns
mov
xor
sub
add
add
add
aas
jnp
outsb
or
imul
daa
add
or
fsubl
push
jo
loopne
mov
call
call
fiaddl
mov
push
push
adc
out
mov
test
sub
in
xchg
cmpsb
add
mov
mov
mov
sar
ja
pusha
xchg
mov
jle
aam
outsl
mov
fidivs
ljmp
and
mov
popa
mov
std
decl
pop
test
add
arpl
lret
ret
and
js
out
or
js
outsb
push
ljmp
mov
ret
fcompl
mov
and
call
xchg
lea
mov
rcll
idiv
incl
inc
sub
add
out
add
lcall
ret
lcall
outsl
or
sbb
mov
hlt
out
jg
sub
mov
hlt
add
xor
pushf
hlt
inc
jg
fwait
lock
jmp
in
and
insb
imul
mov
push
decl
stc
int3
xchg
xor
hlt
xchg
pushf
mov
push
inc
push
pop
and
and
xor
mov
loope
lahf
jae
lock
stos
das
cmp
push
xchg
ss
decl
mov
and
sbb
sbbb
fidivl
rorb
rcrb
add
adc
add
or
push
jge
or
or
lock
jp
ja
repnz
mov
inc
pushf
adc
je
pushf
mov
je
add
xchg
mov
pusha
sub
dec
fwait
int3
push
je
add
sub
mov
fistpll
push
jl
shr
mov
negl
inc
insl
sbb
add
mov
mov
push
mov
loopne
jno
sbb
add
test
clc
mov
cmp
sub
mov
pop
int3
loopne
adc
add
inc
imul
or
je
lods
jmp
mov
inc
outsb
sbb
fadds
jmp
cmp
int3
aaa
xchg
clc
and
sub
fdivrs
inc
popf
adc
mov
sbb
or
into
mov
call
mov
jae
and
out
adcl
mov
push
dec
mov
cmp
or
iret
xchg
aas
dec
mov
mov
pop
or
cs
sbb
lock
out
pop
inc
adc
adc
imul
inc
enter
lcall
loopne
cmp
add
adc
mov
hlt
jg
clc
dec
cwtl
addr16
xchg
adc
addl
xor
icebp
lock
lret
jg
adc
je
movsb
jno
cmp
push
aas
lea
add
mov
dec
cltd
sub
repz
pop
cli
pop
std
jg
inc
mov
push
pushf
das
dec
or
pop
and
add
mov
cld
adc
rorb
cs
fistpll
mov
and
or
cwtl
imul
popa
inc
pop
push
jae
notl
rcrl
lcall
das
leave
data16
and
sbb
jge
cmp
out
add
cltd
scas
std
xor
call
add
fimuls
jecxz
push
lret
lea
adc
loop
pop
and
addr16
cmp
pop
add
aad
mov
lock
sub
cld
or
push
repz
pop
inc
push
lcall
inc
dec
push
inc
xorl
sub
or
test
mov
test
xchg
add
xor
test
clc
rclb
push
cmp
xchg
jge
sar
push
lods
mov
mov
and
cmp
add
pop
lea
clc
jg
push
mov
fildl
jbe
dec
xchg
push
nop
dec
insb
andb
popa
std
in
fbstp
and
pop
and
pop
mov
insl
shrl
fmull
mov
lcall
iret
std
push
inc
xchg
mov
adc
cmc
xchg
mov
xchg
clc
dec
pop
sub
and
lcall
clc
stos
mov
cmpsl
fwait
inc
adc
jmp
cmp
push
pusha
xchg
and
popf
lea
add
inc
sub
adc
repnz
subb
push
fdivrs
nop
push
fcomp
sbb
sti
mov
js
add
push
je
loope
and
jmp
outsl
add
aaa
add
sbb
jne
lret
mov
pop
scas
pop
dec
mov
repz
pop
mov
xor
xchg
mov
pop
adc
jae
loop
xor
in
ret
int3
femms
adc
incl
jg
ljmp
pusha
add
mov
adc
push
test
insb
mov
fsubr
jmp
loop
imul
push
jne
adc
sarb
add
std
inc
movsl
dec
cmc
adc
ds
push
push
inc
inc
jne
add
loopne
add
hlt
addr16
pop
push
aad
mov
cmp
sub
pop
mov
out
sbb
daa
nop
imul
jo
test
sbb
mov
cli
rolb
jg
inc
test
sbb
sbb
xorb
push
loop
mov
mov
and
pop
icebp
add
es
in
out
hlt
stc
xor
mov
loopne
push
mov
pop
xchg
jmp
jl
push
jnp
aaa
faddp
lahf
inc
fwait
mov
incl
mov
movsb
sbb
mov
inc
icebp
xchg
rolb
sub
adc
add
jp
adc
sarl
inc
fmuls
inc
in
lret
add
fimuls
movsb
push
push
pop
cs
test
pop
mov
xchg
push
test
xchg
mov
add
add
push
outsl
lock
and
inc
fsubrl
add
mov
pop
pop
lret
cmp
xchg
mov
jmp
mov
call
or
aaa
mov
push
and
or
pop
insb
adc
add
xchg
sub
mov
pushf
jae
fsubs
jnp
cli
cld
lahf
adcl
fs
test
test
pop
mov
sbb
movsl
nop
pop
fistpll
mov
out
add
mov
in
inc
addr16
gs
inc
ss
jne
fdivrp
in
lret
adc
out
jbe
inc
sti
jmp
dec
sbb
add
pop
repz
sub
in
data16
mov
lea
add
cli
das
mov
call
rcrl
cli
lods
or
inc
adc
fbld
or
push
mov
or
arpl
shll
cmp
cmpsb
xor
push
mov
add
dec
sub
dec
jge
adc
adcb
mov
inc
add
or
clc
push
jl
movsl
inc
orb
loopnew
cld
xchg
pusha
dec
push
or
loope
loopne
data16
xchg
push
int3
inc
test
insl
fbld
shll
sub
cs
adc
push
pop
pop
xor
pop
jbe
sbb
mov
mov
xchg
ret
jmp
mov
and
orl
cwtl
cld
int
xor
clc
add
lock
aad
js
fnstsw
fcompl
or
jbe
xchg
and
dec
jge
xlat
mov
sbb
xor
cmpsb
inc
nop
jne
scas
jecxz
mov
jno
jo,pn
jns
pushf
add
lret
add
iret
mov
insl
or
testb
fistps
aaa
stos
hlt
lcall
daa
lahf
iret
push
jle
mov
dec
dec
jnp
jne
ret
mov
xorb
cmpsb
loopne
add
outsl
xor
mov
fisttpll
call
lcall
aaa
incb
add
fmul
adc
mov
mov
jle
push
scas
sub
shlb
ja,pt
ljmp
sbb
dec
les
push
addr16
and
sbbb
adc
leave
scas
pop
inc
addr16
and
jo
cmp
insl
sahf
in
push
mov
or
ds
fistps
xcrypt-ctr
cmpsl
pop
jge
inc
mov
xchg
test
jb
shlb
lods
dec
clc
sub
mov
popa
lea
mov
or
add
fistpl
in
popf
pop
dec
adc
dec
or
bound
sbb
fsubs
xchg
movsb
push
ja
setno
daa
pushf
in
loope
cld
outsb
push
std
push
shlb
push
movsb
inc
jecxz
leave
xor
call
mov
imul
cltd
pop
adc
cmp
or
mov
jle
aaa
pop
mov
xchg
frstor
add
lock
std
dec
push
shrb
sarl
xor
mov
adc
lds
sub
inc
decb
jmp
sbb
gs
cmp
sub
mov
in
les
insb
lahf
pop
sub
divb
push
lods
loopne
out
sub
xchg
ret
add
xor
xchg
mov
xchg
loope
ss
inc
in
jmp
ds
push
adcl
inc
cmp
mov
adc
mov
stos
icebp
add
das
addb
in
add
lea
mov
xor
imul
loope
sbb
jb
pop
sbb
cmp
lods
popa
clc
jg
jns
mov
addr16
mov
sbb
sbbl
lods
sahf
jb
fs
icebp
ja
call
mov
outsl
mov
mov
pushf
clc
ss
xor
scas
bound
pop
sub
outsl
pop
mov
cmp
mov
inc
stos
cld
cli
and
push
sub
push
cltd
out
or
aas
lea
ss
ds
pop
nop
cs
pop
clc
push
jp
mov
and
or
cmpsl
adc
mov
mov
or
cmpsb
cmpsb
out
mov
xor
push
sbb
loope
pop
inc
mov
mov
mov
mov
or
in
jae
lds
mov
mov
push
sub
dec
jb
mov
out
xor
pop
sbb
mov
inc
test
mov
mov
pop
rclb
add
imul
xor
lahf
add
add
fbstp
add
jne
pop
adc
pop
mov
jbe
enter
mov
daa
cmp
gs
mov
incb
ja
leave
xor
out
and
cmpb
adc
shl
and
xchg
xor
pop
lret
in
mov
jmp
movsl
mov
inc
mov
mov
sbbl
lret
mov
in
or
add
dec
adc
in
mov
jle
jle
iret
mov
out
gs
mov
pop
aad
xlat
push
rcll
ljmp
test
aaa
inc
or
ss
test
into
xchg
test
int
in
ljmp
icebp
rolb
and
mov
fwait
xor
rorb
sub
es
inc
inc
push
adc
rcll
pop
xlat
stos
mov
sbb
leave
lret
into
pop
push
clc
pop
jge
jp
and
mov
call
shlb
cmc
dec
outsb
dec
mov
loopne
imul
test
stc
lock
lock
es
inc
rorl
add
call
xchg
sub
mov
loopne
jg
or
int3
jmp
mov
cld
inc
sti
cmpsl
outsl
jo
pushl
xor
xchg
filds
std
or
add
add
cwtl
dec
adc
and
ja
inc
fmull
xlat
mov
icebp
fs
mov
and
cmpsl
add
push
pop
xchg
int3
push
lods
or
daa
stos
cmc
dec
mov
addl
xchg
jbe
push
and
fstpl
movsl
pop
andb
aas
cmc
incl
add
push
cmp
loope
push
aas
add
xchg
addb
pop
mov
inc
jmp
push
and
push
mov
ss
pop
push
jne
call
sub
je
cwtl
mov
mov
les
adc
mov
sbb
outsl
aad
test
in
push
pop
clc
rorb
repnz
adcl
add
add
test
iret
and
or
adc
lcall
pusha
sub
pop
cld
jg
jo
cltd
cs
adc
jmp
jne
sar
xchg
outsl
mov
out
jns
shr
mov
orb
jl
jo
lods
mov
adc
icebp
in
mov
add
mov
inc
fidivrl
mov
outsl
adc
movlps
out
ljmp
daa
and
in
hlt
adc
mov
and
xor
out
addl
sti
jecxz
data16
mov
std
push
std
add
lock
xchg
and
or
dec
adc
push
jns
enter
cmpsl
pop
fistpll
dec
pop
sbb
test
inc
loop
ljmp
cwtl
pushf
mov
arpl
mov
fidivl
insb
fildl
scas
push
and
dec
addl
mov
rcrl
js
je
jns
pop
inc
sbb
inc
in
add
add
adc
jbe
xchg
aam
push
lock
add
jb
sti
ror
cmp
inc
pop
pop
movsl
shll
add
jl
minps
je
cmp
cmpsl
cli
test
mov
adc
roll
lds
or
repnz
orl
fcoml
test
xchg
out
adc
push
mov
push
testb
in
sti
mov
loopne
adc
or
fisttpl
xor
mov
sub
roll
sbb
in
or
jl
add
sbb
decb
xor
ljmp
lcall
sub
test
jle
pop
int3
add
int3
add
add
jnp
push
cmp
jno
or
pop
lds
insl
and
adc
aam
stc
je
mov
mov
icebp
daa
add
xor
out
das
fldt
pop
xor
outsl
les
add
and
inc
int3
sarl
fists
nop
mov
daa
fistpl
sahf
or
fdiv
les
les
sub
or
mov
mov
fsubr
add
xlat
int3
fs
icebp
cmpsl
cwtl
test
or
sub
inc
and
xor
add
xchg
sub
or
inc
int3
and
popf
or
into
call
fwait
mov
lock
cs
or
data16
jae
dec
pusha
outsb
bound
lret
stos
pusha
mov
and
gs
adc
int3
iret
add
fldcw
int3
rcrb
jge
not
orl
add
sbb
add
repz
scas
aam
xor
xor
enter
in
xorb
les
push
or
or
lock
cmp
add
jno
data16
mov
fisubs
ret
roll
test
jno
pusha
lods
jns
std
mov
push
je
inc
inc
inc
shrb
ret
sbb
ljmp
push
shlb
or
dec
mov
call
stos
scas
xchg
xchg
push
ret
sbb
mov
inc
sub
add
or
fstpt
js
sbb
jg
add
xor
adc
adc
jg
pop
inc
mov
add
stc
sub
fistl
xchg
nop
or
rcrl
sbbl
inc
call
adc
mov
adc
adc
xor
test
mov
adc
push
pop
sbb
ljmp
pop
lahf
mov
cmpb
lock
inc
xchg
jmp
pop
or
loope
pop
fadds
xor
mov
bound
jae
cltd
fisubl
scas
mov
xchg
scas
test
adc
sbb
insl
xchg
sub
xchg
dec
rcll
jg
xchg
or
lcall
lea
rclb
clc
inc
push
push
inc
push
dec
push
jl
ja
push
js
pop
adc
xlat
or
and
add
push
or
std
insl
fists
lods
xchg
sub
sub
pop
enter
orl
mov
inc
lcall
jp,pt
or
insb
add
jmp
int3
into
jg
jo
push
sbb
push
sub
aaa
inc
jp
push
dec
cmp
cmp
stos
dec
pop
in
mov
or
sbbb
push
sub
pop
mov
lods
cmp
shl
inc
rolb
or
clc
jg
or
adc
jns
inc
jbe
lock
or
aam
pop
push
sub
lock
orl
xchg
push
jno
sbb
add
jne
add
xor
fisubrs
arpl
inc
loope
xchg
jl
mov
adc
jp
and
or
dec
or
call
incl
in
icebp
popa
mov
and
adc
lahf
mov
movsb
pushf
pop
ret
dec
lea
push
testl
adc
adc
insl
mov
aad
mov
incl
push
xchg
cmpsb
mov
inc
inc
dec
cld
jno
jp
les
fbstp
mov
orl
loop
addb
fadds
xor
lret
lods
enter
add
mov
sub
rorl
jg
push
and
push
stc
repz
pop
mov
add
jg
faddl
xor
push
nop
in
cld
out
in
stc
clc
dec
mov
push
fistl
test
jg
lock
mov
rol
adc
mov
xlat
lods
pop
rcl
pusha
loop
xor
sbb
jno
xor
movl
les
fbld
mov
xchg
fcomi
or
das
fsub
movsb
ret
or
sbb
push
pop
int3
mov
ljmp
int
insl
rcr
pop
and
data16
shr
test
mov
in
daa
xchg
ja
cld
jmp
iret
pop
lock
add
push
xor
stc
jecxz
push
sbb
pop
adc
shlb
cmp
mov
in
mov
dec
es
fabs
aad
jmp
and
mov
mov
pushf
pop
and
insl
cld
pop
mov
add
mov
gs
movsl
movsl
push
pop
addr16
cmp
xchg
out
push
mov
sub
repnz
jbe
fsubrp
loop
xor
cmp
pop
outsb
es
pop
adc
mov
sub
fnstenv
enter
pop
pop
lock
std
sub
adc
stos
lahf
push
mov
mov
sub
mov
call
repnz
mov
push
pop
shrb
jae
out
es
pushl
mov
xlat
xchg
jmp
outsb
mov
mov
rcl
xor
in
push
cld
pop
fisttps
inc
rcrb
sbbb
or
js
pop
loop
mov
mov
pop
xchg
inc
ror
std
cmpsl
add
push
xor
add
sub
ja
js
outsb
adc
dec
mov
sbb
push
pop
js
cmp
in
movsb
push
ret
mov
pop
js
jbe
xlat
add
addb
mov
dec
insl
mov
cltd
pop
inc
scas
fisttps
xchg
in
addb
nop
pop
mov
mov
outsl
xor
add
fnstenv
add
sbb
pushf
js
inc
mov
jne
std
jge
mov
push
les
sub
xor
sbb
inc
pop
outsl
jge
mov
insl
test
mov
dec
pop
dec
andl
insl
notl
test
inc
add
sbb
call
rcrb
cmp
decl
pop
lret
aam
mov
decl
push
push
mov
or
adc
mov
mov
orl
inc
nop
push
xorl
outsl
js
dec
ljmp
adc
fcmovb
stos
loope
aaa
lods
xchg
or
sub
clgi
call
arpl
lret
inc
jecxz
dec
mov
push
xor
mov
daa
fbstp
push
cs
rol
and
cwtl
rolb
xor
lahf
and
bsf
insb
mulps
das
andb
fstpl
pop
xchg
cltd
lret
bound
inc
cwtl
adc
lock
jb
jae
movsb
and
inc
inc
mov
cmp
push
xchg
inc
mov
jnp
cwtl
sbb
push
cli
ret
dec
outsl
insb
mov
cwtl
push
mov
cmp
out
loope
cwtl
and
xor
test
cs
fcomi
dec
hlt
cld
movsb
fcomp
push
jne
mov
cli
sub
dec
stc
fsubrl
sub
orl
xchg
mov
adc
mov
push
outsl
mov
mov
or
lret
jmp
into
dec
push
push
inc
xchg
jo
pop
sti
mov
popf
pop
push
shl
xchg
loopne
pop
out
andl
dec
movsb
dec
je
and
je
inc
sbb
mov
pop
fstpl
cmpsl
mov
in
test
es
mov
or
pop
and
sub
jl
lea
sahf
rcr
bound
ret
imul
and
inc
xor
inc
pop
int
adc
add
or
addr16
rcl
enter
out
into
call
push
adc
fistps
js
dec
std
add
pop
push
ret
sbb
cld
test
gs
mov
add
or
mov
mov
mov
ljmp
mov
jecxz
flds
leave
sbb
add
outsl
adcb
and
arpl
clc
or
enter
cltd
cmpb
enter
sub
inc
rolb
pusha
fimuls
mov
mov
sub
out
dec
andb
movsb
neg
or
lds
and
push
mov
push
jmp
xor
dec
insb
cmpb
orb
sbb
inc
ss
in
imul
ret
vxorps
jp
sbb
addr16
in
or
lahf
xor
sbb
jbe
fdiv
and
sbb
inc
lods
lcall
dec
push
add
adc
hlt
pop
and
sbbb
movsl
hlt
push
scas
add
or
pop
push
loopne
xor
aam
push
inc
out
insl
lds
or
int3
and
inc
int
ret
xor
enter
inc
call
sub
mov
xor
cmp
mov
adc
mov
sti
cmpl
je
jg
mov
push
xchg
cmp
or
cmp
cli
push
or
movsl
insb
mov
aaa
rcrl
pop
jnp
xchg
jo
mov
mov
das
shlb
in
repnz
inc
add
outsl
enter
pop
pop
ror
xor
and
jmp
inc
ret
addb
fiadds
adc
stos
inc
idivb
ljmp
leave
or
out
mov
subl
jecxz
popa
dec
push
and
mov
imul
mov
jnp
push
into
mov
cs
out
dec
dec
inc
xchg
ljmp
mov
sbb
mov
mov
sub
jge
jg
in
outsl
cmp
mov
push
cmp
jbe
ss
call
loopne
push
add
mov
dec
rcrl
jae
daa
inc
into
dec
jmp
test
data16
lods
sbbl
jno
cmp
pusha
fs
inc
or
dec
inc
sub
dec
dec
pop
mov
sub
imul
hlt
xchg
mov
pushf
stos
scas
pop
stc
and
sub
orl
sbb
into
mov
mov
mov
dec
and
lret
mov
jg
std
inc
jge
push
jg
cmp
dec
fisubrs
sarb
push
or
loopne
stos
lods
xlat
stos
mov
fs
inc
push
push
pop
test
sub
xchg
mov
or
mov
push
dec
lock
je
or
loope
add
das
lock
xor
or
ret
sbbl
outsl
mov
lock
addl
sub
popa
ss
insl
mov
inc
mov
rcr
mov
das
insb
test
mov
iret
sti
repnz
jno
lds
stos
test
push
add
rcrb
hlt
cmp
lret
filds
xchg
sahf
cmp
push
test
cmp
fidivrl
dec
inc
inc
enter
push
jnp
int
popf
cwtl
jne
jg
rcrb
aas
dec
push
pop
and
in
xchg
shll
pusha
adc
mov
in
or
out
xchg
subb
jo
lcall
push
cmp
inc
sbb
add
xchg
test
mov
gs
fldt
sbb
pop
fdivrl
stc
cmp
test
and
ss
xchg
cli
jmp
mov
mov
enter
dec
mov
push
push
into
imul
and
push
push
lods
jae
fnstenv
sbbb
push
dec
imul
xor
jns
shlb
icebp
shl
loopne
mov
das
xchg
or
jecxz
fwait
jnp
adc
xchg
jle
mov
adc
pushf
jno
jg
mov
es
out
xor
mov
sbb
push
or
sub
xor
add
adc
pusha
sbb
clc
add
jle
fstpl
add
pop
pop
fcomi
sbb
lahf
mul
roll
inc
jmp
loop
js
jae
test
add
mov
daa
cmp
cmpsb
mov
sti
and
addb
jae
cmpsl
test
sbb
pusha
loopne
mov
mov
push
es
loop
ret
adc
enter
outsl
outsl
hlt
mov
popf
lods
add
mov
sbb
imul
add
cmpb
daa
mov
int
mov
fwait
pop
xor
js
hlt
out
dec
and
outsb
pop
rcll
ss
jp
rorl
lea
test
add
sub
adc
push
cmp
adc
jb
fbstp
add
test
lahf
cmp
sub
ret
lret
ss
jecxz
hlt
aas
cwtl
push
sub
xchg
sub
lcall
js
add
lock
adc
inc
ja
repnz
sub
pop
pop
pop
pushf
mov
add
clc
shlb
mov
adc
or
mov
sbb
or
fcom
push
sub
push
pop
pop
scas
mov
rol
test
mov
mov
test
lret
movsb
inc
pop
push
std
dec
insl
mov
xchg
out
negb
ljmp
and
mov
lds
inc
addr16
loope
fistpll
dec
mov
mov
lock
pop
xor
mov
mov
rolb
and
jne
pusha
shl
inc
mov
mov
inc
fisttpl
mov
pop
mov
les
cmpsb
pusha
add
and
add
push
push
sbb
adc
inc
sbb
sbb
jae
icebp
push
xor
addr16
mov
mov
mov
lret
and
add
cmp
pop
lret
sbb
mov
or
xor
std
scas
mov
push
scas
out
inc
dec
xchg
scas
add
shl
xchg
push
xlat
mov
mov
push
adc
xor
js
mov
push
mov
push
jbe
jne
jp
fstp
outsb
mov
shlb
popf
popf
enter
or
cwtl
adc
xchg
popa
jecxz
jo
lahf
xchg
fdivs
sbb
mov
push
pop
xor
fimuls
stos
sub
lea
pop
je
pop
jae
call
dec
adc
inc
fnstcw
inc
sub
notb
aaa
pusha
mov
xor
or
and
inc
sub
notb
mov
lock
ljmp
adc
loopne
pusha
mov
ljmp
xchg
stos
inc
ja
pop
add
push
js
jecxz
mov
or
pop
dec
pop
fwait
mov
dec
push
jne
xor
repz
inc
adc
xchg
fsubrs
pop
mov
ret
pop
jb
jge
lods
jae
xchg
cltd
xchg
out
jnp
dec
popa
or
or
lret
jge
repnz
push
movb
xchg
jae
bswap
sbb
sbb
ljmp
push
sub
add
mov
and
jo
fucomp
stc
pop
sahf
call
int3
lcall
pop
divl
out
leave
cld
arpl
lret
notb
jp
cwtl
pushf
cmp
add
ds
mov
mov
dec
jb,pn
and
add
mov
notb
adc
pop
mov
shll
ds
rclb
push
mov
mov
adc
mov
in
mov
sub
cmp
out
sbb
jmp
mov
data16
jl
mov
in
xchg
cmp
fbstp
filds
xor
add
jge
popa
clc
sub
insl
aaa
scas
repz
adc
fisttps
sbb
orb
mov
not
mov
pop
cs
mov
add
push
or
roll
sub
jp
das
jle
or
push
inc
ret
in
xchg
xor
ret
add
sub
mov
jne
bnd
pop
out
out
mov
push
pop
inc
ret
fistpl
es
push
sbb
pop
pop
mov
inc
out
movsb
pop
sub
bound
push
cli
in
cmpsb
movsl
cmpsl
inc
aad
jge
xchg
jecxz
dec
lea
lret
and
imul
dec
jae
sbb
adc
sbb
xchg
or
lds
dec
pop
and
insl
adc
sbb
mov
pop
adc
jecxz
aam
push
mov
in
imul
xor
stos
cmp
fdivrp
jg
sub
sbb
or
push
imul
scas
popf
pop
outsb
mov
xchg
dec
lahf
xor
add
dec
mov
lds
dec
cld
jne
es
rcll
pop
pop
sbb
cmp
test
aaa
pop
mov
lods
inc
test
lret
sub
jmp
lahf
jp
ror
outsb
add
les
pop
pop
loope
inc
cmp
out
or
and
hlt
addl
cld
inc
lds
not
or
cmp
test
mov
icebp
jo
jp
xor
mov
push
or
jecxz
push
push
aam
enter
imul
add
ljmp
xchg
and
pusha
inc
imul
pusha
push
cld
fiaddl
dec
clc
xchg
movsl
mov
mov
mov
jl
adc
loop
mov
pop
jle
dec
addl
jne
mov
inc
fs
les
push
adc
sbb
inc
movl
jl
imul
decl
cmp
sub
into
js
dec
cmpsb
jecxz
sub
out
addr16
pop
mov
imul
push
cmp
cmp
dec
push
jae
imul
push
dec
imul
and
outsb
jge
jmp
xchg
push
or
sbb
imul
daa
outsl
mov
or
cmp
clc
decl
push
adc
gs
mov
lds
dec
push
int3
cmp
jg
jno
jge
testb
add
push
adc
add
xorl
movb
sub
les
xor
fs
inc
sub
mov
mov
loopne
fiaddl
pop
sub
push
cmpsb
or
jnp
cltd
rcll
or
or
jmp
sbb
add
fstpt
mov
mov
or
cmp
gs
das
mov
addr16
mov
adc
xchg
test
push
aad
imul
movsb
or
sahf
xchg
shrl
cmp
mov
mov
and
aas
mov
movsl
and
cmp
dec
pop
pop
jg
sbb
jb
push
jl
push
idiv
out
push
subl
les
cli
arpl
jecxz
mov
or
jmp
sti
aam
sbb
pop
cli
inc
and
push
push
add
mov
pop
xor
cmp
sub
pop
add
inc
sbb
mov
cmp
popl
subl
pop
mov
jb
stos
cli
aaa
or
cmpsb
mov
loop
push
sbb
xorl
cmp
cwtl
stc
sub
mov
jecxz
das
lcall
mov
rolb
test
add
sub
add
adcb
mov
test
and
add
mov
adc
mov
aaa
mov
inc
xchg
sub
mov
fimuls
and
dec
pushf
xchg
out
call
jg
aam
shll
in
fidivl
add
push
cmpsb
push
add
or
push
pop
or
jbe
inc
js
xor
dec
aam
les
mov
jno
shll
mov
push
pcmpgtb
pop
ret
dec
jne
rorl
add
add
data16
mov
xor
sbb
pop
xor
pop
pop
xor
pushl
loope
test
inc
xor
sbb
adc
and
jb
outsl
ss
push
leave
mov
fcoml
fisubrs
cmp
enter
inc
pop
je
fwait
jbe
xchg
mov
gs
jle
lcall
fiadds
and
push
push
enter
mov
int3
out
inc
xchg
mov
daa
jns
cs
xchg
dec
xchg
enter
fstpt
fidivl
sbb
lret
inc
loope
lock
decl
outsb
cmp
repz
dec
xor
mov
data16
xorl
pmuludq
lret
mov
xchg
and
in
cmp
pop
adc
mov
xchg
add
call
ja
jge
std
in
mov
jbe
mov
mov
pop
inc
enter
repz
scas
sub
dec
scas
mov
and
push
dec
xchg
and
mov
or
fidivrs
dec
or
push
lret
je
fcoms
roll
pop
and
mov
std
xchg
or
and
orl
jmp
mov
pop
pop
mov
lret
test
cs
jno
sub
in
repz
pop
and
aam
xchg
es
mov
std
mov
sub
inc
or
cmp
xor
loopne
pop
sbb
inc
adc
cmpsb
xchg
pop
cmp
clc
jmp
or
inc
jmp
loop
test
mov
push
push
inc
xlat
or
and
in
ja
sbb
stos
insl
gs
push
lret
lcall
jecxz
jbe
cmc
lds
gs
insb
dec
sarb
push
mov
jge
or
dec
loopne
loope
pop
jl
orb
ja
sbb
xor
add
repnz
lods
stc
mov
sub
or
aaa
mov
jo
push
and
ss
sub
inc
out
mov
dec
mov
mov
lahf
cli
ljmp
imul
out
aaa
mov
adc
test
lds
cmc
call
mov
add
je
pop
xor
test
add
pushl
inc
fbld
ficoml
ret
popf
add
pushl
cmp
dec
xchg
mov
movsb
push
and
inc
push
js
mov
test
mov
mov
mov
sub
lock
jb
clc
sbb
xor
mov
imul
jecxz
mov
lods
sbb
rcl
mov
call
ja
dec
cmc
push
pusha
cmp
adc
add
fildl
ja,pt
mov
xchg
inc
pop
loop
or
sti
push
cmovns
sti
movsl
repnz
or
out
or
lock
mov
pop
pop
mov
xor
orl
iret
cmp
push
push
cmp
push
fistl
mov
hlt
or
out
hlt
or
add
pop
movsb
test
pop
sub
xchg
cmp
jp
mov
imulb
es
jne
pop
push
dec
sbb
lds
shrl
ljmp
inc
loope
dec
dec
sbb
dec
push
add
ljmp
dec
daa
int
clc
or
sub
adc
insl
mov
fdivrs
test
bound
xchg
popa
cwtl
xchg
mov
outsb
test
les
mov
mov
shrl
repnz
push
mov
dec
jmp
addb
mov
mov
mov
mov
fcomps
inc
and
xchg
out
dec
cmp
incl
dec
push
arpl
dec
mov
dec
loopne
xchg
push
out
cld
mov
cld
call
mov
jns
push
pop
sub
mov
std
inc
std
or
jbe
fs
popa
call
int
inc
hlt
dec
push
xor
add
fst
or
popa
lret
jne
mov
push
sub
dec
and
ljmp
cmpsl
push
pop
lods
jmp
pusha
jno
aam
mov
push
out
aad
or
jg
mov
stos
daa
rcrb
and
mov
inc
sbb
adc
lret
in
test
push
test
inc
sbb
inc
aaa
mov
clc
or
lods
sahf
add
not
pop
sub
repnz
mov
enter
inc
std
jmp
mov
ret
jns
mov
addb
adc
clts
lret
in
jno
push
or
sub
lods
and
or
adc
xor
add
scas
push
pusha
mov
push
add
fdivrl
mov
ja
or
int3
push
mov
xchg
es
add
orl
add
add
sbb
mov
jo
pop
and
pop
or
jge
mov
push
outsb
addl
dec
cwtl
cmp
mov
adc
cmp
test
sub
jle
add
adc
add
lods
push
or
sar
ljmp
jno
aaa
addl
push
xlat
or
push
mov
popf
or
fcom
jg
sub
test
lods
arpl
mov
cmp
inc
nop
sub
roll
mov
dec
popf
lods
mov
mov
mov
push
subl
fldenv
xchg
cwtl
mov
fbld
sbb
rol
pop
sbb
adc
mov
cmp
clc
push
inc
test
loop
jle
mov
je
jbe
cwtl
sub
sbb
jle
pop
mov
mov
push
icebp
sti
mov
xor
add
fdivl
push
and
fsts
fsubs
add
pop
rorb
push
push
inc
or
dec
or
popa
cwtl
mov
ja
inc
mov
jno
inc
roll
cmp
or
lods
inc
stos
lods
push
push
adc
daa
push
adcb
shll
mov
or
or
enter
mov
inc
les
mov
test
andl
sub
bound
test
xchg
lret
adc
imulb
fisubrs
or
cmpsl
sub
mov
je
fs
jle
sub
aad
mov
adc
add
fisttps
inc
mov
lock
push
adc
sbb
call
lock
fiaddl
inc
inc
jge
fcompl
repnz
iret
iret
pop
pop
test
fcomps
in
cwtl
call
pop
test
inc
in
adc
push
add
or
das
nop
inc
add
mov
cmp
loopne
adc
inc
xor
sub
cmc
and
dec
or
sbb
inc
test
inc
fbstp
add
push
ret
or
fsubrl
cmp
clc
fidivrs
aaa
cli
out
mulb
stos
or
add
das
sbb
xor
mov
xchg
lock
mov
or
pop
rcll
outsb
jmp
mov
out
sbb
sub
add
dec
and
mov
pop
lds
fwait
xor
pop
cmpsl
in
lock
push
add
push
movsl
dec
and
xor
push
and
inc
pop
mov
addr16
ja
or
pop
and
insl
loope
mov
jns
inc
sub
inc
sub
sbb
js
sbb
add
outsl
push
push
push
jle
xchg
mov
fldt
push
inc
clc
bound
clc
popa
jl
pushf
jmp
dec
lods
sub
repnz
or
sbb
mov
sbb
andb
or
cmp
subb
push
or
fisubs
xchg
push
es
mov
jge
sahf
add
adc
outsb
xor
xor
mov
rol
sbb
mov
icebp
add
xor
push
sub
out
jae
loopne
pop
cld
in
enter
mov
cmp
dec
sahf
sbb
inc
das
lds
sti
xchg
out
loope
stc
stos
dec
loope
fldl
inc
mov
cmpsb
cmpsl
and
or
add
xor
loopne
loope
stos
sti
test
adc
ljmp
jmp
movsb
add
adc
mov
jl
inc
sbb
add
idivl
repnz
les
jg
jb
xchg
or
arpl
jns
add
shll
cld
adc
and
and
and
mov
adc
and
pop
cs
xchg
add
out
mov
mov
nop
loopne
mov
bound
mov
shrl
cmp
mov
insb
jmp
sub
inc
movsb
shlb
and
rclb
insl
inc
inc
xor
add
inc
jae
aaa
shl
push
sti
mov
add
bound
push
xchg
dec
insl
or
push
dec
ret
sub
and
inc
mov
xchg
push
add
or
fmull
fidivl
dec
jo
clc
pop
push
or
dec
loope
adc
adc
in
sub
adc
xchg
or
lock
or
loope
inc
dec
insl
jecxz
mov
sub
lods
and
repnz
scas
jbe
push
cmp
in
cmp
jmp
ljmp
pop
push
inc
arpl
adc
testl
add
xor
outsb
adc
and
fisubl
test
sbb
xchg
loopne
inc
dec
movsb
ret
or
shl
jg
push
sub
stc
int3
inc
shl
xchg
js
mov
fiaddl
iret
mov
ds
clc
outsb
clc
jmp
sbb
and
push
push
fisubl
mov
imul
loopne
jge
testb
subb
dec
inc
mov
sub
scas
sub
inc
lcall
push
es
and
outsl
lcall
outsb
pop
popa
jl
push
rcll
insl
xor
jmp
dec
mov
pop
scas
int3
cmp
inc
jge
in
insl
xchg
jne
lret
jne
sbb
notb
outsl
mov
les
sbb
mov
aam
ss
pop
pop
push
jno
mov
cmp
mov
sub
xchg
leave
or
enter
pop
cmp
imul
and
sbb
aaa
mov
loop
cmp
cmp
inc
jbe
mov
push
lret
imul
add
mov
pop
adc
pop
mov
jae
or
call
xlat
ret
pop
loopne
push
stos
aam
lods
cmpl
mov
popa
js
imul
sbb
dec
add
lret
in
jle
xor
jae
dec
sbb
jne
inc
das
std
push
ret
dec
adc
lods
arpl
fildll
test
xchg
mov
xchg
push
cltd
data16
loope
test
lock
xchg
repz
jae
fcom
mov
push
lahf
sbb
inc
or
out
inc
dec
call
push
lea
add
shlb
or
ret
push
pop
int
dec
out
lods
push
insl
js
movsb
dec
mov
or
in
push
in
leave
push
adc
cltd
repnz
cld
sbb
jl
and
push
and
push
push
punpckhdq
cmp
mov
xlat
test
xchg
dec
jecxz
xchg
mov
xchg
mov
pop
rolb
and
cmp
or
ss
cmp
sub
mov
jb
inc
xor
inc
imul
add
in
dec
push
xor
or
mov
adc
inc
ret
shlb
fildl
lret
pop
lahf
sub
xchg
mov
sub
lods
sbb
sbbb
adc
mov
push
xor
inc
aaa
jns
cs
or
xor
add
es
cli
pusha
add
fstpl
pop
inc
rcrb
push
add
mov
lods
inc
outsb
clc
fsubrp
mov
add
add
fimuls
clc
xchg
mov
or
mov
adc
inc
inc
pushf
cmp
pop
test
add
mov
and
jmp
lock
loope
push
ljmp
xor
mov
lock
adc
cmp
lods
fsubp
pop
cld
push
add
jle
add
cwtl
test
ret
and
or
xchg
push
sub
push
mov
add
lret
andb
in
sbb
pop
pop
fwait
test
push
scas
sbb
sub
clc
pop
xor
testb
mov
fwait
roll
call
cwtl
int
sub
bound
push
adc
je
and
mov
pop
sbb
int
aam
jo
push
pushf
jne
add
xorb
lds
push
push
das
ss
mov
and
mov
sbb
lods
cmp
scas
call
mov
fwait
add
loope
mov
sub
sti
test
fadds
lock
add
or
xorl
add
cli
pop
int3
push
cmc
lods
and
xor
iret
std
test
jbe
ss
test
dec
jge
xor
es
push
outsb
mov
cmp
ja
lods
pop
inc
aad
or
push
add
xchg
lahf
shlb
mov
sub
notb
insl
add
pop
test
ret
adc
lret
testb
scas
jmp
test
je
xor
or
lods
ja
mov
in
cmp
push
sbb
insl
out
push
cmc
jge
sub
je
orl
pop
lock
jb
clc
adc
std
inc
shl
push
pop
push
adc
mov
mov
icebp
bound
mov
or
xor
sub
mov
lock
into
mov
lock
in
dec
inc
add
cmpsl
sbb
add
inc
arpl
mov
or
and
dec
outsb
or
jle
sbb
dec
xor
pusha
dec
fcmove
hlt
dec
int3
add
or
push
pop
es
int3
pop
enter
push
cmc
int3
add
int3
test
cmp
arpl
enter
xorl
das
or
loop
hlt
jo
jb
enter
pop
fsubp
jge
mov
fsubrs
mov
adc
add
and
push
xor
inc
or
jae
cmp
pop
jne
adcb
xor
iret
or
adc
iret
inc
outsb
mov
ficomps
xchg
addb
stos
sbb
dec
rolb
insb
jne
sbb
cwtl
add
rorb
addl
jecxz
mov
pop
add
jae
fcomp
loopne
mov
jp
loopne
push
xchg
call
mov
add
mov
nop
jge
rolb
je
enter
xchg
cmp
or
xor
enter
sub
cmp
adc
repz
cmp
sbb
dec
movq
clc
sahf
test
cli
out
std
or
sbb
inc
cltd
jp
dec
inc
jg
in
or
popa
mov
mov
daa
cld
enter
data16
outsl
cmp
out
ret
retw
icebp
push
les
sbb
mov
out
mov
lret
addb
dec
xchg
sub
out
addr16
or
mov
add
mov
in
pop
les
adc
xor
ret
mov
shrl
cld
cmpsl
mov
xchg
mov
scas
and
ss
nop
ret
addr16
add
repnz
inc
mov
adc
pop
cmp
mov
jns
cmp
mov
adc
in
test
fwait
add
test
push
inc
add
lret
and
jno
sbb
inc
adc
insb
push
pop
mov
cld
ret
mov
mov
ljmp
pusha
mov
push
in
jl
sbb
mov
ja
scas
push
adc
push
xor
lcall
int3
adc
xor
or
sub
mov
add
pop
int3
jno
leave
pop
pop
rolb
push
inc
pop
and
jmp
repz
mov
push
enter
icebp
mov
ficoml
cmp
movsl
push
mov
pop
xor
int
lods
or
sub
add
or
icebp
dec
fbld
filds
inc
jo
ret
fnstsw
mov
dec
push
cmp
addr16
aad
out
inc
fidivrl
jmp
push
jae
fcmovu
mov
enter
inc
mov
mov
add
mov
add
shll
mov
jp
or
inc
push
aam
sbbb
addr16
sub
jecxz
icebp
xchg
xor
or
cmpsb
add
pop
or
outsb
ret
add
sub
mov
mov
sti
aaa
pop
cmp
cli
and
rol
ret
adc
sbb
inc
call
imul
outsl
fimull
sbb
or
std
or
clc
cmp
push
ss
sbb
mov
xor
inc
mov
push
cmp
add
sub
sub
fstpl
lods
dec
and
mov
mov
mov
add
fdivrs
dec
cwtl
jge
sahf
scas
mov
pushf
jg
stos
test
add
ret
mov
mov
xchg
mov
fbld
dec
jb
call
mov
or
in
lea
std
add
fiaddl
mov
lret
push
pop
or
sub
inc
ret
push
dec
mov
lea
cld
out
adc
sbb
cs
cs
lsl
pop
xor
xchg
clc
cmp
cmp
push
fcomps
inc
fisubrl
bound
sub
aas
rcll
jne
fldl
test
pusha
xor
and
mul
nop
sbb
pop
xchg
pop
sbbb
or
adc
adc
fldl
push
out
int
loope
fiadds
dec
inc
push
sub
cwtl
adc
ljmp
mov
jecxz
sbb
sub
loop
das
adc
sbb
mov
icebp
test
das
insb
mov
add
xor
adc
aas
lcall
aad
sub
adc
xchg
sub
jle
rcll
outsl
dec
mov
lea
pushf
or
test
imul
loopne
movsl
pusha
loope
mov
push
mov
out
add
dec
and
pop
jmp
shl
push
push
dec
mov
mov
or
repnz
and
push
mov
or
jp
push
insl
push
mov
and
cmc
mov
incl
or
and
push
inc
aas
rcrb
mov
add
add
push
fstl
lds
sbb
mov
mov
or
test
adc
dec
mov
mov
shr
mov
push
xor
pusha
test
pop
push
mov
roll
pushf
sbb
sbb
and
add
loope
fsubrl
jmp
outsl
mov
orb
test
lcall
inc
jl
sub
jmp
inc
insb
or
cmp
into
cmp
mov
xor
bound
mov
ret
push
inc
push
hlt
sub
adc
outsb
inc
stos
push
sub
jnp
imul
jp
dec
inc
lcall
xor
ret
pop
fimuls
dec
adc
push
rolb
sub
dec
js
jge
ljmp
data16
les
xchg
loope
jb
xor
mov
leave
leave
mov
add
and
sub
adc
sbb
jecxz
shrl
fsubrs
adc
gs
lods
mov
lods
cmc
mov
aas
lcall
shrl
insb
js
fdivrs
insb
mov
orb
inc
aam
and
push
adc
mov
lds
cmp
rorl
push
dec
test
and
mov
mov
lds
push
leave
jl,pt
aam
insl
cmp
fimull
shll
das
dec
xchg
cmpsb
sbb
ret
cmp
push
incb
cmc
ja
stc
cwtl
add
add
lods
aam
pop
aam
inc
loope
push
adc
sub
and
movsl
roll
xchg
outsl
loopne
mov
inc
in
sbb
push
push
sub
sub
rorb
rorl
insb
mov
adc
call
or
sbb
mov
pop
lock
sub
push
and
pop
popa
jecxz
cltd
mov
outsb
loopne
aam
mov
adc
inc
sub
adc
movsb
add
pop
aad
xor
dec
jp
mov
es
je
outsb
outsl
add
shlb
pop
inc
sub
inc
dec
iret
mov
or
jno
dec
xor
pop
jle
xor
fs
lret
xchg
pushf
cwtl
rcr
out
add
into
pushf
in
push
and
es
pop
cwtl
cmp
sarb
ficompl
aam
fs
ds
lcall
lock
ljmp
push
inc
mov
push
loopne
test
mov
push
lcall
leave
inc
loope
mov
lahf
mov
outsl
add
stos
hlt
call
push
sbb
and
dec
aas
jmp
mov
f2xm1
mov
and
push
add
stos
leave
cmp
data16
lods
jbe
pop
inc
mov
jge
setge
xorb
lret
sbb
push
rolb
xor
sub
clc
xor
loope
loop
mov
outsb
pop
flds
test
loop
mov
lock
add
push
xchg
test
pop
cmp
js
je
mov
cmp
dec
inc
cmpsl
fimull
adc
mov
enter
mov
mov
sub
cmp
roll
fwait
psllw
cmp
ljmp
popa
jbe
scas
cmp
add
xor
cmp
mov
and
or
xlat
and
faddl
ja
ret
mov
push
test
add
xchg
movsb
test
sbbb
jecxz
mov
pop
cli
adc
sbb
cmp
shrb
jp
insl
inc
push
mov
jmp
jb
dec
push
jo
inc
push
stc
or
data16
xor
push
add
dec
mov
fwait
cld
adc
orl
sbb
cmp
cmp
mov
mov
pop
and
or
xor
xchg
and
push
jbe
adc
xchg
roll
icebp
inc
lods
cld
dec
jge
and
ja
jge
and
jle
xor
stos
push
dec
loope
inc
out
ss
dec
dec
mov
dec
adc
sarb
push
adc
lock
sbb
mov
xor
lock
popf
and
or
mov
cmc
sub
cmc
sbb
pop
lret
or
fdiv
mov
add
icebp
pop
pushf
push
cmp
push
stos
fimuls
fnstenv
pop
in
inc
adc
lds
incb
mov
imul
cmp
pop
inc
cmp
push
negb
and
or
pop
test
adc
cmp
and
cmp
outsb
stc
fmuls
or
mov
pop
addb
cmpsb
or
out
lahf
adc
sar
inc
popa
dec
inc
jecxz
add
cli
xlat
addr16
or
or
rcll
pop
sub
inc
fildll
jg
lret
inc
daa
fbld
lea
adc
cld
and
sub
int3
test
insb
xorl
adc
sti
lahf
jae
xchg
sub
mov
pop
or
stc
jae
sarl
xlat
imul
jo
outsl
lock
sbb
cmp
out
vmovss
in
loopne
push
mov
dec
push
lret
dec
pop
inc
call
inc
test
popa
cmp
push
into
rol
push
mov
sub
and
fbld
jb
fldl
mov
mov
xor
bound
stos
adc
and
mov
mov
ret
inc
movsb
xor
das
adc
data16
fistl
test
lea
pushf
and
fistps
ret
les
inc
xchg
repz
out
mov
inc
jecxz
rcl
ret
sub
pop
icebp
inc
mov
pop
inc
sub
mov
pop
fldl
in
xchg
cmp
ret
mov
xorb
into
adc
inc
outsl
dec
push
into
dec
or
enter
outsl
xor
cwtl
sub
popa
into
loop
cmp
mov
or
sbb
insl
ret
jns
push
ret
nop
fadds
xchg
or
dec
nop
mov
fisubs
sub
nop
inc
leave
sbb
cmp
mov
mov
ds
test
mov
dec
sbb
cmp
ret
mov
adc
out
addb
xchg
push
outsb
mov
dec
fcoms
add
shll
xor
jbe
jmp
or
ljmp
fidivl
xlat
test
cmp
and
mov
pop
pop
sbbb
sub
push
add
cmp
or
jmp
or
je
dec
inc
fcoms
cmp
ss
and
pop
jno
cmp
inc
or
test
test
push
xor
stos
dec
or
xor
or
inc
mov
js
and
bound
and
or
lret
add
adc
mov
jb
fcomp
add
xor
pop
stos
int
mov
xchg
je
push
mov
outsl
test
loopne
inc
mov
and
add
or
mov
xchg
lret
xchg
pop
cmpb
add
or
aam
shl
inc
push
and
mov
inc
ret
aam
mov
int3
adc
cmp
add
or
jne
push
in
add
cli
idivb
sub
repnz
push
add
xor
pop
fcoms
leave
pop
add
mov
inc
dec
clc
sub
push
ret
dec
mov
add
pop
rorl
sub
les
push
inc
in
fchs
cld
or
and
adc
shrb
and
into
orb
stc
loop
and
jno
bound
out
lea
jecxz
add
testb
gs
mov
sbbb
jnp
insb
sbbb
mov
insb
sub
out
ret
in
add
push
mov
mov
subb
cwtl
inc
add
inc
inc
and
or
sub
in
adc
push
lea
stos
loop
ret
pop
ret
xor
xor
loop
jnp
dec
mov
add
leave
or
lods
add
or
pop
add
push
sarb
and
scas
xor
jo
jns
inc
fnstsw
incl
sbb
add
out
sahf
lds
arpl
fs
outsl
loopne
inc
mov
test
push
sar
jno
out
lods
popa
aaa
or
fadd
or
test
sarb
sbb
and
cmp
loopne
hlt
pop
incl
inc
or
lcall
add
mov
gs
or
int
add
sub
push
xchg
mov
insl
cmc
mov
push
and
mov
aaa
movsb
push
cltd
mov
dec
hlt
add
icebp
movsl
inc
icebp
mov
jmp
sbb
mov
aam
leave
pop
clc
xchg
sub
push
cmpsb
outsb
lods
add
scas
into
movsb
add
xor
stos
fistl
fcoms
lret
cwtl
ret
outsl
xor
push
outsb
mov
cmpb
insb
xchg
dec
push
xchg
jno
mov
adc
scas
daa
sbb
fisttpll
xchg
lods
mov
imul
add
call
cmp
mov
push
and
inc
les
jp
fists
mov
pop
xchg
das
add
xchg
xor
bound
push
sub
pop
mov
cltd
sbb
xchg
push
xchg
adc
aaa
ja
lock
out
adc
loop
mov
fbld
aad
lock
jecxz
xor
cmpsl
les
outsb
cmc
adc
mov
rcll
xchg
rol
mov
int3
in
bound
and
xlat
shll
mov
jg
sbb
popf
add
mov
mov
inc
add
pusha
pop
lock
shlb
sub
pushl
adc
jne
je
inc
test
dec
pop
xchg
cltd
fnstcw
sbb
xor
push
push
in
xor
fidivs
jns
or
add
jmp
jo
mov
or
jmp
or
dec
mov
les
aam
nop
inc
push
das
cld
pop
mov
mov
outsl
aam
add
dec
xor
cltd
in
imul
ljmp
xchg
mov
test
insl
test
leave
adc
or
js
lods
sub
insb
mov
repnz
add
and
lahf
mov
xor
fcomps
repnz
xchg
loope
mov
in
ss
mov
in
mov
fadd
gs
mov
es
mov
xchg
in
adc
add
push
pop
and
fisubrl
aaa
sbb
and
hlt
xchg
std
adc
xor
call
push
cmp
xor
cmp
adc
mov
out
and
and
mov
ret
pop
dec
jl
and
and
insb
push
mov
adc
insl
leave
lds
popa
add
mov
push
push
cmp
clc
push
insb
dec
cmc
lret
and
mov
and
push
ds
bound
test
pop
mov
mov
push
jl
add
jle
es
fwait
or
adc
cld
mov
and
add
cmp
mov
pop
ja
sbb
ret
mov
shll
xchg
in
ljmp
fists
mov
in
mov
fsubl
push
test
mov
adc
mov
idivb
jnp
sbb
and
das
push
cmpl
ficompl
mov
cmpsb
sbb
outsb
insb
sbb
push
sub
loopne
test
lock
pop
push
pop
ret
xor
jne
mov
shl
mov
pop
cmpsb
test
adc
add
or
or
push
add
xchg
jbe
pusha
mov
adcl
outsb
mov
jbe
mov
jae
jp
popf
insb
add
inc
test
push
pop
push
movd
mov
jno
cmc
mov
insb
dec
hlt
sbb
or
clc
notb
mov
add
loope
outsl
sbb
nop
movsl
fistps
mov
sbbl
add
repnz
scas
xor
add
lcall
out
cltd
jecxz
pop
cmpsb
jl
decl
xor
mov
lcall
loop
ljmp
cmpsl
fadd
jne
add
outsb
subb
jg
and
leave
xor
or
insb
dec
cmp
add
cs
test
test
mov
outsb
test
shll
add
cmp
adc
inc
cld
pop
dec
call
pop
pop
loopne
jle
mov
addb
xor
push
adc
sbb
sub
and
xor
add
iret
mov
mov
cs
mov
dec
testb
mov
jmp
add
jbe,pt
mov
sub
arpl
cmp
and
lds
aad
sti
bound
in
in
imul
cmp
mov
daa
enter
test
mov
inc
cmp
pop
cmp
push
xchg
push
rcll
and
addb
cmp
adc
test
repz
shr
out
xlat
idivl
scas
imul
push
push
lret
in
mov
inc
pmaxsw
clc
or
mov
repnz
out
jae
in
popa
push
sbb
cmp
push
decl
pop
inc
mov
pop
lcall
xlat
test
out
repnz
lods
dec
dec
pushf
jg
push
icebp
xlat
outsl
pushf
xchg
add
jno
mov
imul
js
subl
and
stc
shl
cld
jo
decl
pop
fisubrs
test
insl
icebp
add
insl
shrb
lea
mov
cld
xchg
test
frstor
lret
mov
fldt
mov
push
xorl
cmp
sti
test
sbb
xor
adc
nop
mov
ret
mov
hlt
stc
icebp
push
andb
or
cmp
mov
sarl
aam
push
adc
xchg
ljmp
int
repnz
and
and
cltd
sahf
into
inc
lods
insl
xchg
xchg
adc
test
push
roll
and
xor
test
mov
arpl
jecxz
clc
lock
cmc
pop
add
in
dec
shlb
addb
inc
mov
and
xchg
ja
jb
mov
pop
aas
lods
aad
addr16
inc
inc
bound
add
add
mov
mov
notb
subl
addr16
js
pop
add
ljmp
and
push
les
jb
dec
mov
adc
mov
clc
in
or
xchg
repnz
inc
push
xchg
mov
loopne
inc
loop
js
and
pushf
test
or
add
jp
stos
data16
add
add
pop
add
pop
loopne
sbb
out
push
mov
testb
addb
imul
mov
push
and
xor
outsb
mov
loopne
xlat
leave
loopne
or
inc
rol
or
sbb
adc
pushf
add
insl
add
and
andb
jnp
inc
push
in
adc
faddl
mov
mov
push
pop
mov
out
dec
or
add
push
rcl
push
call
imul
sub
lcall
and
adc
stos
xor
adc
inc
mov
pop
mov
das
inc
or
xor
fisubs
mov
add
lods
dec
shlb
fldenv
or
dec
incb
ja
fmuls
nop
inc
inc
scas
pop
aas
pop
adc
fistpl
loopne
sub
cmp
push
add
stos
not
dec
push
lds
popf
and
push
arpl
and
ja
shll
rorb
push
sbb
out
andb
pop
or
cmp
loop
jne
cs
test
shlb
cmp
and
adc
jp
scas
lcall
pop
movsb
fimull
push
test
lds
inc
xor
outsb
mov
push
and
in
dec
fwait
or
and
cmp
jge
xchg
inc
mov
int3
jmp
dec
jne
negb
mov
lock
push
call
iret
cmp
xor
push
pushf
adc
stos
add
cmpl
cmp
or
pop
push
fdivrl
push
hlt
or
add
or
sbb
add
sub
lahf
mov
addr16
mov
in
inc
les
dec
xchg
in
mov
jg
push
lock
imul
nop
and
pop
shl
ss
xchg
inc
into
or
xchg
sbb
push
dec
or
mov
fcoms
sbb
aad
pminub
or
adc
mov
add
filds
in
push
addl
and
cld
sub
mov
stos
rol
rorl
and
or
stos
jo
cld
sub
xor
insb
inc
pop
mov
push
add
inc
dec
cli
call
cltd
fists
cmp
dec
dec
or
mov
add
pop
mov
ss
sbb
mov
addb
and
dec
cmp
jb
mov
mov
mov
mov
jne
lcall
xor
dec
push
add
and
and
pushl
add
jnp
push
les
fistpl
xor
sbb
adcb
inc
outsb
lock
add
addr16
shlb
test
frstor
jb
icebp
sbb
add
adc
and
adc
sub
adcb
pop
inc
outsl
sbb
cmp
jb
in
test
xlat
ljmp
xor
cmpsl
dec
adcb
pushl
setp
aam
mov
mov
pop
shl
rolb
sbb
dec
es
mov
shlb
shlb
push
inc
push
fimuls
movsl
or
xor
or
sub
dec
xorb
jge
mov
pop
mulb
lock
jns
out
and
xor
lds
mov
cmp
xorb
xlat
inc
push
test
xchg
sahf
fcoml
mov
push
rclb
insl
pop
loopne
jo
es
and
add
adc
pop
dec
and
bound
xchg
pop
imul
lods
loopne
testb
loop
das
lock
cmp
adcb
sub
push
rcll
jge
xchg
jmp
push
xchg
xchg
rolb
dec
shll
call
loop
ret
into
fildll
push
jo
aad
aas
scas
xor
xchg
or
ds
adc
dec
loope
mov
jnp
cld
add
lods
ret
loop
push
inc
test
or
dec
sub
add
mov
jno
mov
xor
mov
addb
mov
adc
and
jge
arpl
mov
cltd
xlat
jmp
enter
lock
jp
push
cmp
xchg
and
leave
adc
push
sub
push
rcrl
xchg
arpl
adc
push
adc
mov
push
call
int
call
lret
inc
mov
shr
enter
push
fmuls
and
pop
push
ljmp
pop
aaa
jno
es
cs
mov
xchg
sub
pusha
outsb
or
jl
push
lods
xchg
lods
inc
roll
add
sub
loop
rorl
xchg
icebp
adc
cmpsl
leave
movsl
or
shll
mov
push
push
loope
cmpsb
push
xor
pop
rcll
xchg
inc
xor
std
aas
push
pusha
jge
dec
and
jg
mov
sahf
rolb
test
mov
clc
jg
lahf
lock
xor
sub
cmp
cs
daa
add
arpl
add
adc
nop
jae
fbstp
mov
cld
xchg
movl
je
push
mov
xchg
movsl
cs
nop
iret
fldt
test
add
repnz
push
movsb
int
add
mov
insl
add
cmpsb
andb
xchg
xor
mov
jae
jmp
and
push
sub
mov
add
dec
rolb
test
mov
sub
jecxz
mov
fistpll
adc
cmp
jl
fildll
cmp
jne
push
xchg
sub
mov
push
mov
lods
push
imull
add
adc
fcmove
add
push
sbb
pop
inc
xorb
pop
sub
into
xchg
pop
mov
rcrb
pop
mov
cmp
mov
xchg
and
test
js
jb
jecxz
sub
outsb
mov
cmc
cmp
adc
scas
mov
inc
inc
lcall
sub
jecxz
cmp
fisubl
pop
lock
lock
xchg
loope
push
incl
das
dec
fs
mov
mov
imul
push
cmp
ret
adc
add
cmc
inc
cmp
push
mov
daa
daa
mov
or
inc
out
or
mov
mov
es
andb
dec
and
add
lods
addb
icebp
ja
fwait
negb
outsl
dec
addr16
sbb
sahf
adc
mov
xchg
dec
repnz
loopne
movsb
fisttpl
rcr
js
push
push
sub
pop
rcll
sub
fildll
popf
and
lods
or
icebp
ljmp
rol
pop
in
cmpsl
aaa
cli
dec
adc
jae
pushf
stos
jo
sub
cmp
cld
pop
xor
les
lods
call
mov
adc
fbstp
add
int3
pop
and
sbb
call
cmp
hlt
iret
ja
insb
push
add
add
lcall
push
dec
mov
cmc
add
add
test
inc
pushf
mov
movsb
orb
adcb
in
cmp
jl
shlb
push
inc
sbb
adc
mov
ret
subb
inc
cmpsb
mov
mov
sub
out
and
add
mov
cltd
fisubl
scas
arpl
add
insl
sub
mov
cmp
ja
adc
jmp
mov
mov
int
jo
push
pop
cmp
inc
xchg
pushf
add
push
mov
mov
movsb
and
push
insb
xchg
and
inc
bound
iret
mov
lret
pop
mov
scas
inc
pop
mov
xchg
and
sbb
or
inc
mov
or
sbb
test
mov
clc
insb
pop
les
fcompl
popw
inc
adc
push
inc
sbb
inc
clc
mov
cmpsb
cvttps2pi
xchg
add
insl
sbb
mov
push
ret
sbbb
loopne
inc
adc
mov
pop
xchg
push
stos
cli
fcompl
shl
mov
xor
jnp
rorl
mov
and
insb
daa
lock
or
add
xchg
mov
inc
adc
inc
sub
cmp
or
mov
imul
and
xor
dec
pop
insl
pusha
dec
aas
mov
rcrb
xchg
test
orb
enter
mov
shrb
push
pop
sbb
pusha
dec
out
xor
popf
shll
adc
in
push
xchg
mov
repz
outsl
mov
loop
inc
jmp
mov
jbe
push
cmpsl
data16
pop
call
lock
pop
arpl
push
pop
mov
mov
sbb
add
mov
cmp
cmp
add
inc
add
dec
add
outsl
xlat
add
mov
popa
data16
sub
jns
cltd
jns
sahf
mov
mov
adc
or
in
xor
lcall
stos
bound
push
mov
ficompl
fcoms
in
cmp
push
adc
inc
sbb
jg
outsb
cmp
cwtl
mov
testl
fstps
push
out
test
out
pop
cmp
jge
jg
lods
outsl
inc
cmpxchg
mov
sub
mov
mov
es
loope
nop
fldt
int3
fdivrs
mov
mov
ret
outsb
and
dec
int3
bound
and
mov
and
daa
cltd
adc
mov
sub
add
add
andb
lret
sbb
lds
aas
arpl
push
fmull
icebp
mov
fs
pop
pushf
jnp
fsubl
pop
mov
add
mov
and
lds
outsl
add
in
push
mov
test
cmp
or
mov
flds
mov
in
stos
sub
push
scas
sub
idivb
sbb
mov
push
mov
addl
adc
inc
fldl
push
aaa
cld
clc
movsl
push
scas
sub
mov
divb
sahf
or
ss
push
testb
xchg
fs
shlb
push
stos
movsw
adc
test
inc
sbb
adc
jne
cmp
repz
mov
mov
sub
jg
in
dec
xor
inc
frstor
jmp
dec
nop
addb
mov
shlb
add
dec
xchg
mov
dec
je
mov
rcll
outsb
jg
mov
pop
push
push
and
jle
bound
jnp
test
rolb
or
sub
push
ja
pop
imul
pop
addl
push
dec
lock
cmp
mov
pop
lahf
pop
dec
mov
add
xor
andl
adc
and
adc
sbb
std
mov
dec
mov
sub
mov
test
pop
adc
shlb
outsl
mov
push
mov
inc
je
incl
adc
mov
add
inc
fwait
sub
xchg
out
mov
ficoms
lds
jl
sbb
lcall
xchg
pop
cmpsb
mov
xor
xchg
pop
xor
xor
pop
xchg
jmp
aad
lods
jbe
push
hlt
in
sub
xchg
inc
or
in
shl
mov
jno
lods
daa
add
dec
dec
push
outsl
outsl
cld
testb
subb
lret
mov
sarb
and
outsl
cld
jge
add
add
xor
hlt
ja
das
pop
int3
lods
pop
icebp
sti
pop
pop
fimull
push
sahf
sub
and
push
sarb
movsl
xchg
cmp
add
mov
inc
stos
test
and
mov
arpl
les
xor
jle
inc
mov
jo
cmc
test
test
movsb
scas
test
and
xbegin
inc
push
jge
into
mov
push
xchg
mov
aas
cli
test
mov
loopne
testb
lock
lcall
inc
incl
dec
push
iret
mov
dec
cwtl
mov
imul
cmp
jle
cmp
scas
pop
icebp
in
add
rorb
add
mov
xchg
add
dec
ljmp
sub
xchg
xchg
jl
push
sub
adc
rorb
sub
fistpl
add
popa
andb
sub
mov
and
jg
push
jge
xchg
subb
les
mov
ds
lds
movsb
cmpsb
popl
inc
xor
shr
cmpb
and
mov
daa
mov
dec
or
jle
push
xchg
cs
stc
gs
fsubrl
and
sub
in
ja
cmp
sub
out
xor
jmp
ljmp
sub
xor
out
nop
add
lods
mov
xor
sub
pop
enter
lds
mov
nop
xor
aad
cmp
out
jecxz
dec
pop
jp
inc
jb
div
sub
xchg
pop
mov
mov
popl
insl
mov
xor
mov
rcrb
sub
sahf
add
cmp
icebp
popa
popf
cwtl
les
push
stc
into
out
popa
icebp
aas
sbb
and
inc
sbb
adc
subl
repz
fidivrl
push
xor
fisubrs
add
pusha
mov
xchg
lahf
or
push
adc
xchg
adc
or
lds
repnz
imul
mov
and
jmp
cmpsb
outsl
push
or
loop
push
add
jo
cltd
dec
mov
and
add
cwtl
fildl
fldt
addb
sub
lret
xchg
cmp
inc
push
addr16
fnstcw
in
pusha
shl
pushf
sti
lds
call
aaa
jns
int
nop
jnp
and
and
aam
cld
push
in
xchg
mov
les
inc
add
dec
pop
sbb
add
push
sbb
inc
adc
inc
insl
mov
push
dec
mov
dec
dec
sub
das
push
aaa
or
jne
xor
ret
comiss
adc
mov
push
xor
or
cld
push
sbb
int
jae
dec
cmpsb
cmpsb
sub
sti
test
add
mov
sbb
push
fsubl
xor
ret
adc
xchg
faddl
xchg
mov
icebp
cmp
jne,pn
lds
mov
jnp
icebp
arpl
outsl
mov
test
dec
fcomp
xchg
pop
orb
repz
ss
xor
fwait
add
icebp
adc
adc
xor
cld
scas
dec
and
test
out
pop
dec
int3
rolb
xchg
addb
adc
inc
sbb
pop
xor
push
filds
dec
notl
pop
stc
inc
mov
insl
movsb
flds
sub
outsl
aam
jns
cmpsb
ds
cmp
leave
lcall
imul
jno
adc
pop
sub
test
je
push
js
fidivrs
or
ret
sub
fidivs
inc
pop
in
ja
arpl
push
jne
loopne
call
mov
jge
ret
push
or
rolb
stc
cmp
mov
mov
jb
mov
and
sbb
sbb
or
imul
cmpl
adc
insb
xchg
rolb
nop
adc
call
sti
push
imul
inc
stos
xchg
add
push
scas
inc
fcmovnbe
fcmovu
add
jns
test
iret
ds
insl
stos
inc
push
and
push
push
push
xchg
lahf
pop
push
dec
sbb
mov
loope
rclb
sahf
stc
in
jo
push
dec
fdivrs
dec
xchg
xor
pop
pop
add
mov
fcom
sbb
fsubrp
add
scas
orl
pop
cld
in
adc
dec
loope
ret
dec
movsb
push
std
sub
or
stos
pop
adc
sub
inc
pop
push
out
stos
ficoml
pop
mov
lods
fcomi
cs
adc
stos
push
pop
fwait
jnp
inc
and
sub
xor
xor
pop
clc
call
test
or
mov
fbstp
mov
and
cmpsb
mov
xchg
mov
jl
andl
cwtl
repz
adc
filds
mov
mov
aaa
mov
adc
cmp
jmp
mov
daa
dec
in
mov
andb
lcall
jge
dec
mov
aas
fiaddl
mov
inc
into
mov
pop
cs
add
jle
xor
cmpsl
hlt
pop
mov
mov
mov
push
inc
popa
popa
sbb
sbb
adcb
dec
jge
jg
in
or
jmp
out
xchg
sbb
les
ja
or
femms
or
push
mov
inc
imul
mov
dec
out
xchg
fcom
push
sub
imul
add
outsb
loop
add
lret
sub
outsl
lock
das
inc
sbb
mov
sti
outsb
mov
mov
imul
and
push
jo
pop
mov
jnp
inc
hlt
or
pop
pop
xchg
data16
cmc
pusha
fildl
outsl
mov
outsb
ja
in
nop
aam
jle
insl
xchg
or
pop
pop
js
jmp
or
lock
int3
mov
mov
push
xchg
jno
mov
mov
fmul
mov
or
jb
loopne
and
scas
repz
stc
hlt
mov
cltd
mov
mov
and
cmpl
insl
ret
sbb
mov
out
inc
xchg
cmp
repnz
push
xchg
outsl
in
cwtl
hlt
cwtl
fsubs
add
shll
xor
shlb
rorb
or
test
repnz
mov
sti
push
loop
or
andb
movsl
inc
fistpl
dec
sub
sub
fmuls
aad
stos
jmp
xchg
jno
lds
cli
shrl
not
inc
push
push
jbe
mov
mov
das
push
pop
dec
mov
shlb
in
dec
gs
dec
lahf
jg
push
sub
push
cs
test
mov
mov
addb
mov
push
das
inc
shr
mov
xchg
add
and
hlt
insl
mov
ljmp
jp
sbb
adc
dec
xchg
fwait
insl
and
adc
and
jl
adc
call
and
and
jo
sub
or
sbb
sbb
fwait
rorb
bound
sarl
or
inc
and
enter
cld
iret
mov
xor
add
rorl
pop
andb
mov
aam
nop
mov
out
lcall
enter
lret
fstps
xor
or
push
mov
adc
shlb
fwait
xchg
push
sbb
fstl
add
push
cltd
divl
pusha
mov
outsl
push
inc
shll
add
adc
into
xor
mov
cmovbe
or
shlb
ret
test
and
fidivl
jns
cmovp
clc
inc
add
add
gs
pop
cli
adc
mov
add
aad
mov
adc
aaa
pop
add
lock
or
ljmp
dec
dec
out
fisubrs
pusha
or
sbb
nop
cmp
fisttps
pop
ljmp
nop
dec
inc
cwtl
cwtl
inc
xor
in
rorl
pop
sbb
movsb
popa
mov
js
inc
mov
pop
fsubl
or
cli
push
xorb
stos
sub
adc
xor
mov
es
imul
sbb
ss
add
push
push
ss
jmp
in
insb
lea
bnd
daa
cli
inc
inc
jbe
add
cwtl
inc
gs
xor
xchg
cmpsb
pop
inc
fsubl
adc
repz
dec
dec
loope
pop
adc
aad
push
mov
out
lret
iret
add
.byte
adc
lcall
adcb
pop
mov
imul
pop
mov
bound
pop
ret
pop
add
pop
outsb
mov
add
ret
add
or
jnp
and
pop
ret
inc
cmovb
mov
sti
sti
sub
adc
addb
jg
out
adc
sub
push
add
in
outsl
pop
or
add
adc
add
and
push
imul
adc
outsl
inc
or
mov
lods
xor
inc
or
jbe
inc
or
inc
and
sub
into
inc
adcb
or
or
insb
sub
adc
inc
jno
inc
sub
and
and
iret
fiadds
or
and
cmp
mov
mov
mov
lcall
rclb
jle
jb
adc
jae
addr16
add
cmp
and
inc
inc
adc
je
iret
sub
adc
rcrl
mov
or
popa
jae
mov
or
inc
mov
mov
pop
rorl
popa
push
or
adc
sbb
pop
imul
shll
and
pop
and
add
fcmovnb
pop
sbb
enter
in
mov
adc
addb
fcmovnu
adc
mov
add
mov
rcl
movl
sti
mov
xor
mov
imul
hlt
and
rorb
jne
mov
add
mov
adc
add
or
neg
mov
cs
std
lds
add
lahf
int
add
mov
roll
jmp
add
ja
sbb
in
neg
dec
mov
jbe
sub
sbb
cmp
divl
sub
sbb
jg
sti
jbe
or
jne
out
aaa
imull
out
or
inc
mov
dec
sub
lcall
and
fsubrs
cmpsl
aam
mov
and
xchg
in
and
jne
adc
sahf
hlt
and
out
add
or
dec
popa
fcomi
sti
fcmovnbe
dec
rclb
add
xor
jne
dec
lcall
rorb
stos
or
or
cmp
out
push
out
std
lea
cli
mov
jle
sub
not
sub
or
jnp
jbe
fcoms
jmp
out
and
xor
rolb
add
mov
pusha
adcl
outsl
adc
in
out
test
push
push
daa
or
dec
jge
fldt
loop
loop
push
and
outsb
mov
shlb
leave
xor
cmovb
aas
sbb
xchg
pop
ror
bound
iret
xchg
xor
add
jae
push
jle
and
jl
sti
arpl
in
lock
jne
mov
arpl
mov
data16
shl
rolb
rcrb
cltd
enter
sub
icebp
addr16
jo
mov
imul
fwait
in
les
jge
mov
ret
adc
adc
sbb
or
repnz
pop
mov
jecxz
imul
adc
nop
dec
add
or
enter
mov
xchg
mov
in
fildl
sbb
inc
fisubrl
imul
xchg
add
test
pop
clc
or
sbb
in
sbb
xchg
or
outsl
pop
add
imulb
sarb
lock
jmp
fcmovbe
ficompl
xor
cld
sbb
clc
popf
mov
testb
jnp
clc
out
inc
mov
add
out
lods
aam
lods
fldt
in
fwait
push
lea
sub
pop
mov
or
fnstenv
cmp
arpl
out
je
adc
cmp
jmp
sbb
es
aaa
scas
or
imul
sbb
or
loope
or
test
ja
and
add
aaa
sub
rclb
jo
in
jp
xor
test
call
sbb
inc
pop
dec
mov
xor
neg
add
ret
hlt
xchg
xor
hlt
mov
repz
sub
pop
sti
sbb
nop
add
push
pushf
jae
jmp
adc
popa
push
filds
jne
movsl
mov
jp
add
add
jb
mov
add
add
adc
add
add
aas
or
dec
jg
dec
add
div
mov
dec
add
and
push
jl
xchg
add
lds
or
adc
add
or
mov
call
stc
mov
test
inc
fcmovbe
popf
add
leave
jle
bound
mov
idiv
jae
mov
add
mov
xor
out
call
sbb
pop
push
xchg
jg
add
stc
lret
inc
lret
push
test
adc
movsb
cs
add
add
fcmovne
add
movb
add
adc
inc
in
xor
add
insb
inc
call
push
add
sti
mul
lret
adc
repnz
sub
andl
lds
and
push
fcompl
dec
es
mov
mov
ja
insl
test
add
or
jno
inc
js
mov
add
pop
dec
add
imul
jg
pop
adc
add
jge
add
add
bound
pop
mov
std
test
fidivl
push
jle
adc
fs
mov
add
cmpsb
jg
fcmovnu
pop
sbb
insb
mov
testb
mov
xor
mov
movl
or
jbe
and
outsl
in
in
movsl
fcoml
mov
mov
popl
sarl
xor
fstp
jg
pop
sarl
pop
xchg
sbb
add
sub
ds
fcomi
outsb
push
out
pshufw
or
dec
pusha
sbb
add
add
fisttps
fstpt
in
cmp
fsubr
shlb
scas
inc
push
xor
sbb
sub
pop
clc
mulb
push
inc
shr
fadds
aad
insl
stc
jg
add
ja
addb
jnp
push
call
loope
fildl
in
add
sti
rolb
inc
push
mov
fmull
lods
rcr
and
cltd
mov
xchg
loope
cmp
inc
cwtl
mov
popf
sti
cmpl
adc
clc
out
and
mov
into
dec
xlat
or
jecxz
pop
movsl
or
out
add
add
out
dec
and
mov
xor
or
mov
jne
cld
in
xchg
sub
or
les
shrl
mov
sub
int
and
xor
sbb
iret
lcall
and
xor
jne
test
push
js
stos
loop
punpcklwd
ffree
adc
jge
pop
movl
inc
jmp
cld
push
push
xchg
int
xor
xor
insl
adc
sub
adc
adc
mov
or
aam
fildl
add
out
jne
fmuls
cmc
inc
in
push
fwait
cltd
sbb
ljmp
dec
cmp
push
and
mov
ret
in
and
xor
sbb
mov
rorl
mov
dec
inc
add
jp
push
sbb
sub
mov
lret
shll
cld
lods
imulb
ret
es
and
mov
dec
fnstenv
lahf
push
and
or
add
pop
sub
push
ss
scas
imul
pop
lcall
fsub
sub
jbe
mov
fcoml
daa
pop
out
fsubrs
and
push
sub
lret
mov
out
mov
insb
inc
aam
adc
push
rclb
rcr
or
sbb
orl
repz
outsb
mov
and
mov
into
not
inc
mov
int3
aam
int3
mov
adc
loopne
daa
adc
adc
es
jge
je
push
call
int3
push
adc
iret
loopne
mov
fdivrs
add
movsl
stos
cld
pop
xor
int3
imul
xor
xor
sbb
push
mov
add
fwait
outsb
fisttps
arpl
mov
gs
fwait
mov
adc
dec
sbb
and
test
cltd
das
aaa
xor
pop
out
xchg
aam
ret
add
jge
cmp
push
int
punpckhbw
or
dec
lock
fstp
js
inc
pop
sbb
roll
int
popa
or
nop
and
mov
out
mov
or
fildl
inc
add
xor
dec
outsb
loope
loope
jge
test
mov
lahf
fisubrl
loope
add
xor
inc
sub
int3
mov
or
xor
mov
adc
insl
ret
mov
addr16
je
adc
insl
hlt
mov
add
dec
out
mov
int3
cmp
sbb
imul
or
popf
push
sub
cmp
push
pop
rorb
fsubs
mov
mov
xlat
jae
or
mov
mov
xor
rcrl
and
sbb
loope
mov
pop
sub
adc
or
jp
sahf
es
fidivrs
sbb
adc
dec
push
fcomps
mov
shll
jge
jo
pop
ljmp
add
in
xchg
mov
add
lock
mov
fsubl
lods
jecxz
pop
and
into
inc
inc
jg
inc
inc
faddl
push
pop
ret
inc
das
inc
lods
push
sbb
mov
jb
xchg
scas
lock
sub
mov
aam
xor
sarb
or
leave
jo
xchg
lods
adc
test
sahf
lock
or
imul
mov
adc
test
and
push
xorl
pop
fcoms
push
or
loopne
mov
add
sub
sbb
push
dec
or
xor
mov
jo
lock
jne
push
pop
imul
mov
fsubrl
jp
mov
and
adc
addr16
cli
and
cld
add
ret
mov
xorb
push
in
inc
jne
push
sub
jnp
stos
sbb
pop
lret
out
loopne
lret
xor
and
mov
dec
mov
ljmp
jecxz
je
push
mov
add
push
jns
mov
xchg
mov
jne
pusha
push
sbbb
dec
xor
loop
or
fucomi
pop
cld
std
xor
aaa
push
mov
or
call
jne
clc
fs
cmp
addr16
mov
dec
adc
mov
xchg
incb
outsb
imul
sub
inc
pop
xor
in
repnz
fmull
popf
mov
add
mov
cld
inc
ss
add
sub
add
cmp
xorb
lds
and
cltd
fs
and
mov
pop
fldt
test
mov
ljmp
fidivs
inc
popf
push
cwtl
fnstenv
pop
mov
insb
test
bound
popa
mov
xor
inc
fisttps
fwait
ret
sbb
jl
call
pop
mov
adc
add
pop
cmp
xor
sbb
cwtl
add
mov
add
add
jb
mov
loopne
ljmp
sarl
addb
test
and
outsl
pop
faddl
pop
cmpsl
pop
add
mov
subl
pop
sbb
enter
gs
stc
add
sub
rolb
mov
push
leave
xor
dec
add
mov
inc
push
lahf
lret
dec
shr
pop
push
arpl
sub
test
dec
insl
ficoms
out
add
icebp
sbb
sbb
dec
and
aaa
mov
xor
add
sti
outsl
xchg
push
dec
fstl
xor
add
rclb
push
loope
ret
fildl
fmull
jmp
adc
push
mov
dec
sbb
mov
test
lcall
clc
pushf
fisttpll
loop
add
outsl
das
test
int
nop
les
push
adc
sti
jbe
mov
popa
roll
or
outsl
je
mov
mov
test
jl
bound
or
sub
push
lea
adc
loopne
orl
cmovs
add
pop
jb
mov
fbstp
sub
aaa
cli
test
jp
test
cltd
sbb
fistl
imul
sbb
xor
subl
push
push
jge
and
popf
stc
inc
out
add
jo
push
outsl
fisttpl
push
repnz
sahf
scas
fstl
mov
push
std
fidivrl
mov
push
jns
ficoml
sbb
sti
insl
divl
in
aaa
mov
push
hlt
jmp
push
ja
or
lock
jne
xor
or
xchg
xor
es
movsl
decb
lret
or
mov
push
xchg
or
sti
ret
lea
sbb
mov
in
push
xchg
loope
outsb
aaa
orl
pop
dec
lea
out
imul
adc
push
fidivl
push
sbb
ja
xor
dec
mov
ljmp
insl
sbb
aaa
push
je
test
and
xor
stos
sbb
rcrl
fldcw
loope
das
add
xchg
jno
mov
xchg
mov
mov
addr16
scas
jo
push
and
push
inc
aad
pop
dec
outsl
cmc
test
mov
push
popa
jle
adc
xchg
xchg
dec
mov
add
mov
pop
add
push
fiaddl
mov
push
and
scas
xchg
add
mov
jge
and
pusha
repz
bound
in
fimull
add
fimuls
mov
mov
clc
mov
cli
mov
jge
jge
data16
mov
push
pop
or
and
rcrb
arpl
fwait
push
les
aam
adc
push
imull
ret
fsubl
mov
jae
xchg
shl
sbb
rolb
sub
out
jb
and
sbb
sbb
out
gs
and
jno
jae
call
shlb
lcall
cmp
leave
rcll
and
push
aas
in
imul
lea
mov
cmp
add
outsb
dec
loopne
jae
sbb
add
xor
push
push
sub
aam
pop
lock
icebp
jge
cld
pop
add
mov
sub
clc
and
sbb
or
rorb
add
inc
scas
pushf
inc
sub
mov
and
xor
add
push
add
das
sub
ret
in
ja
aas
mov
movsl
aam
clc
mov
pushl
jo
sbb
shlb
dec
xchg
sahf
rorb
sbb
mov
adc
scas
inc
xchg
and
push
pop
add
adc
clc
add
and
xchg
lcall
inc
aad
mov
push
push
mov
cmp
out
or
fsubrs
loopne
dec
call
adc
dec
xchg
xor
dec
cmpsb
xchg
fcoms
inc
or
mov
mov
inc
dec
ljmp
sub
pop
mov
dec
cs
xlat
sbb
push
testl
or
movlps
jle
hlt
jb
ljmp
push
add
rcr
insb
ret
lret
int
sub
roll
fiaddl
adc
out
js
push
mov
or
scas
daa
icebp
lret
imul
xchg
icebp
push
dec
shl
loop
adc
mov
inc
js
clc
pop
xchg
insl
or
pusha
cltd
add
adc
xchg
scas
addb
sahf
jno
mov
sarb
repz
nop
and
cmp
xchg
jecxz
cmpsl
ret
sbb
or
fisubrl
or
faddl
jge
ror
pop
out
loope
push
andb
stc
scas
cmp
mov
or
testl
xchg
xor
pop
jne
subb
push
adc
pop
cld
leave
rcrl
dec
jp
jae
out
fbld
or
clc
inc
pop
popf
insb
cmp
mov
xchg
dec
push
push
roll
ret
push
push
xchg
dec
mov
add
jb
aam
rcll
outsl
bound
push
and
ja
mov
xor
pop
divps
push
sbb
adc
cmp
movsb
ds
fldenv
or
popf
fstps
imul
inc
ret
pop
xchg
call
psrld
fs
xchg
and
es
adc
lret
out
ret
int
cs
push
wbinvd
mov
push
inc
sbb
pop
adc
fst
aaa
fcoml
add
imul
and
ja
add
not
sub
jmp
lea
in
idivb
mov
out
mov
xor
sub
add
cmp
daa
arpl
sbb
ljmp
adc
inc
cmp
xchg
jge
xor
add
mov
adc
or
dec
push
adcb
inc
dec
cltd
popa
adc
add
or
gs
xor
or
insb
dec
test
adc
repnz
iret
mov
mov
xor
lcall
in
add
adc
les
test
call
hlt
adc
scas
push
hlt
scas
mov
adc
adc
inc
mov
xor
sub
aaa
pop
shlb
dec
mov
pop
clc
dec
mov
adc
aam
and
rolb
jp
xor
js
fmull
cmp
jno
pop
push
je
ficompl
mov
mov
cwtl
inc
adc
jge
lret
dec
shl
pop
sub
dec
pop
xchg
mov
popa
add
stc
adc
push
int
add
adc
push
in
sbb
and
pop
xor
inc
and
pop
inc
cmc
rorl
pop
sub
rolb
ffreep
jne
inc
adcl
mov
imul
insb
xor
and
divl
loop
inc
adc
or
rcrl
add
push
stos
sub
hlt
xchg
cwtl
xor
jnp
outsl
shlb
rcrl
dec
jecxz
mov
jmp
int3
or
add
add
mov
mov
sub
loopne
fbld
into
mov
and
icebp
sbb
dec
outsb
fcom
insb
push
lcall
hlt
cmp
insl
mov
lock
push
out
jo
js
std
sbbl
clc
inc
fidivs
nop
sbb
imul
sbb
or
frstor
cltd
imul
cmp
rorl
movb
shlb
shrw
shr
mov
cmp
mov
adc
shrb
adc
roll
mov
push
call
out
mov
mov
icebp
push
sub
movsl
jo
shrl
js
fldenv
icebp
andl
mov
repnz
iret
or
fnstsw
jns
inc
xchg
iret
lea
mov
mov
inc
xchg
adcb
ds
js
clc
adcb
mov
pop
pop
dec
cli
cmc
outsl
das
jne
push
xor
icebp
xor
rorl
inc
decl
insl
sbb
xchg
out
mov
push
repnz
imul
std
sub
and
jne
ds
scas
push
xor
inc
inc
movsl
lods
mov
and
in
shr
pop
mov
loope
cmpsl
mov
or
out
sbb
jp
aam
sbb
sub
fs
test
jne
out
adc
push
andl
sub
sub
mov
xor
in
lods
sti
or
adc
gs
test
hlt
pop
and
adc
or
dec
adc
push
ljmp
and
sar
ds
les
pop
ret
or
aaa
xor
push
aas
cli
lock
sar
sti
pop
stos
repnz
ljmp
out
lds
xchg
add
or
aad
jne
add
cmp
cmp
mov
mov
fbstp
cmp
sbb
popl
shl
rolb
frstor
inc
outsl
outsl
mov
je
push
je
pop
dec
push
sti
mov
scas
sub
dec
and
es
inc
push
pop
rorb
mov
push
mov
ljmp
pop
jno
adc
fdivs
and
imul
cmpsl
mov
add
adc
rcr
ret
stc
test
enter
add
and
js
mov
outsb
mov
outsl
jo
push
ret
add
add
sbb
outsl
or
push
in
mov
pop
add
pop
adc
insb
rorl
mov
add
repz
cld
sbb
sarl
cvtps2pi
pop
fwait
andl
sub
or
shll
jle
xor
ja
push
push
movsb
movsl
lea
lods
lret
add
and
or
loop
jnp
inc
movsb
pop
push
or
scas
cmpsl
scas
xorb
std
fisubs
cmp
pop
inc
adc
adc
adc
sub
fstps
jnp
sbb
jg
adc
sbb
into
adc
insl
dec
mov
cmpsl
push
aas
insb
xor
jb
cmp
inc
inc
ret
sub
cmp
add
insb
mov
adc
sbb
insb
lods
inc
and
adc
out
addl
pop
or
mov
cs
xor
mov
cmp
adc
pop
or
pop
pop
pop
inc
insl
dec
xchg
sbb
lods
loope
lret
sbb
outsl
insb
int3
add
std
in
mov
xchg
data16
adc
or
or
dec
and
adc
and
ss
stos
cmp
mov
mov
mov
pusha
add
cmp
sbb
pop
push
int3
jge
arpl
and
or
sub
mov
add
push
popa
inc
pop
scas
movsb
test
inc
mov
adc
pop
aaa
sbb
dec
popl
divb
testb
and
sbb
mov
icebp
dec
jl
mov
adc
mov
mov
pop
scas
std
push
mov
adc
shrl
pop
sbb
or
inc
cmp
pushf
cmp
lock
dec
repz
repnz
les
ds
add
push
dec
js
fdivs
xchg
mov
adc
jle
cmp
jbe
inc
cmp
js
add
testb
and
mov
js
bnd
inc
mov
xor
adc
inc
and
cmpsl
aam
jg
xor
aad
lret
sbb
lods
jge
lods
add
sbb
add
sub
test
test
das
andb
std
and
lods
stc
cmp
mov
push
sub
pop
and
fcompl
cs
arpl
adc
popa
and
fs
xor
and
ret
adc
adc
mov
dec
mov
das
add
cltd
sub
push
bound
rcrl
jne
lods
pop
jl
out
jnp
mov
mov
mov
push
dec
mov
xchg
and
mov
lods
pop
jmp
mov
loopne
fsubs
lock
inc
fcomp
sbb
xchg
divb
sbb
pop
and
add
jge
mov
push
icebp
dec
inc
pusha
or
int3
sbb
nop
push
mov
push
xchg
add
inc
adc
test
fwait
sub
pop
imul
xchg
js
pop
add
mov
mov
sti
or
sub
push
xchg
cmc
jno
mov
ss
sub
mov
adcl
mov
js
mov
fnstcw
insl
add
sbb
loopne
push
loop
fstps
dec
std
cmp
xchg
dec
fsubr
mov
ja
in
flds
lds
dec
mov
push
ret
sbb
jmp
movsl
and
mov
push
je
cmp
jecxz
sbb
inc
add
mov
ret
dec
add
lea
xchg
outsb
les
adc
rcr
outsl
mov
pop
cld
cmp
xor
push
xchg
xchg
pop
add
xor
pop
inc
loope
and
scas
sub
mov
fs
pop
insb
icebp
lcall
xchg
xor
sub
das
jo
adc
aam
mov
mov
add
or
mov
and
sub
push
push
pop
push
push
push
ss
xchg
clc
dec
add
mov
cwtl
mov
dec
pop
xor
mov
in
or
sbb
pop
loop
test
test
add
sbbb
fimull
mov
or
loope
ret
icebp
dec
ja
jae
sbb
pop
je
pusha
sub
mov
xchg
mov
xor
fistl
adc
jp
and
js
std
sub
lods
fcoms
cmp
pop
out
xchg
inc
faddp
dec
ds
push
les
mov
jb
or
nop
pushf
sub
pop
pop
sbb
ret
addr16
fucomi
mov
fcoms
cwtl
idivb
mov
rcr
nop
lret
ret
fidivrl
sbb
jg
hlt
lea
mov
adc
fadds
or
aad
pop
js
and
mov
pop
push
cmp
movsb
scas
sub
push
aas
mov
insb
addr16
cmp
add
jo
rolb
sub
addr16
add
lods
std
pop
imul
cltd
add
pop
arpl
outsb
lcall
inc
jge
push
loope
push
mov
xchg
popf
subb
add
fiadds
sub
or
xchg
add
sarl
push
adc
es
sbb
mov
lods
leave
add
push
insl
or
nop
outsl
pop
imul
sti
test
sbb
pop
jle
rep
adc
mov
xor
pop
shll
insb
jl
mov
ret
mov
jae
xchg
sbb
pop
pop
inc
add
lock
pop
stc
jbe
sbb
pop
and
xor
es
rcl
loop
nop
sahf
aaa
aaa
sub
jae
in
sbbl
mov
mov
and
stos
push
xchg
dec
sbb
call
cmp
pop
pop
jecxz
sbb
mov
lcall
iret
int3
inc
aas
mov
mov
cmp
mov
scas
fldl
xor
mov
xchg
inc
pop
jle
not
add
outsb
sbb
arpl
loope
mov
add
xchg
mov
push
mov
mov
lcall
test
or
popa
or
int3
push
lods
cmp
pop
cmp
aaa
addr16
xchg
leave
xchg
and
cmp
jmp
and
lret
xchg
inc
add
dec
rcrl
les
repnz
mov
pusha
jb
clc
das
sbb
adc
mov
enter
sahf
cli
cmp
push
scas
addl
outsl
popf
fldl
fwait
jne
mov
jns
call
cmp
test
loope
rolb
jae,pn
rclb
add
dec
js
dec
inc
or
add
sti
jecxz
xlat
sub
cmp
rcll
jecxz
daa
push
fldl
xchg
addb
imull
push
xchg
mov
int3
dec
js
sahf
lds
mov
xchg
fisubs
push
insb
cmpsb
lock
push
or
pop
pushf
sub
xchg
dec
rolb
mov
mov
jno
es
lods
mov
inc
pop
or
mov
mov
pushf
pusha
cmp
mov
lret
add
jo
mov
stc
pop
ret
pop
lock
xchg
lret
xchg
add
test
insb
pushl
call
aad
cwtl
xor
and
jg
mov
pushf
mov
rcll
xchg
cwtl
push
jae
imul
aaa
in
jecxz
dec
mov
lock
je
xchg
mov
pop
test
clc
incl
pushf
mov
outsl
mov
push
out
xor
ret
xor
pop
lea
pop
ret
lea
cmp
movsl
mov
sarb
push
in
movsl
mov
and
xor
dec
xchg
dec
mov
lret
and
enter
ret
sbb
das
cli
clc
adc
inc
out
mov
xchg
ss
rorb
sbbb
clc
jg
and
lcall
and
ret
mov
pop
jecxz
test
dec
lods
cmpsl
push
dec
sub
add
or
mov
test
mov
testl
lret
pop
js
push
xorl
push
pop
in
adc
pop
lret
add
inc
pop
in
dec
sbb
mov
add
sub
clc
outsl
mov
mov
jle,pt
fdivl
add
jae
dec
jg
xchg
pop
add
pop
push
iret
xlat
das
push
adc
mov
push
je
test
mov
dec
lock
imul
insb
insl
call
dec
and
xor
cwtl
aam
pop
es
ljmp
add
inc
int
jae
sub
lock
pop
pop
lcall
xor
push
cli
push
sbb
inc
inc
mov
jo
test
insb
sub
pushf
int3
rorl
arpl
dec
push
push
xor
and
jp
popa
xchg
outsb
sbb
lahf
arpl
rcr
shll
adc
out
add
sar
lea
dec
shrb
outsl
add
nop
mov
clc
inc
adc
popf
jl
push
lock
jnp
or
push
stc
out
add
and
adc
sbb
xchg
ror
pusha
adc
nop
sub
imul
pop
pop
and
and
pop
jl
aam
push
sub
sub
mov
cmp
xor
sub
movsb
movl
lea
mov
test
cmp
nop
loop
sti
push
and
pop
popf
add
sti
dec
clc
out
or
jg
xchg
daa
mov
pop
add
nop
jecxz
jo
shll
or
mov
xchg
std
out
jmp
clc
pusha
xchg
shll
outsb
outsl
pop
shrl
fidivs
xor
sub
mov
notl
lret
push
xor
sarb
fs
mov
fcomps
mov
imul
jecxz
repnz
fistl
daa
out
aam
cmp
mov
fists
cwtl
jmp
lods
daa
pop
jo
out
pusha
mov
fdivl
mov
insb
cli
pushf
dec
sbb
add
xor
dec
xor
sbb
mov
or
and
or
lock
insl
test
inc
xor
xor
sub
inc
fdiv
in
insl
in
jge
cmp
adc
jbe
mov
nop
sbb
js
inc
fnstsw
mov
push
mov
pop
loopne
xchg
xchg
adc
loopne
or
imul
jg
repz
cltd
in
shlb
aam
xchg
test
push
icebp
dec
cmp
jns
push
sub
sti
add
pop
cmc
mov
sbb
mov
je
cmp
insl
popf
xor
push
pop
ja
movsl
push
add
stc
mov
or
cld
cltd
mov
insl
test
push
pop
and
mov
inc
mov
ss
mov
scas
inc
sub
stos
aad
cli
adc
adc
dec
mov
outsb
out
hlt
sub
push
or
je
jns
inc
rclb
pop
insb
outsl
popa
addr16
or
icebp
or
dec
pop
xchg
jbe
inc
xor
mov
cmpsb
adc
fdivrl
push
mov
mov
in
ja
xchg
out
dec
xor
jl
int3
push
movsl
mov
hlt
push
pop
pop
in
cltd
int3
arpl
fcomps
stos
aaa
pop
int3
data16
lods
sub
shr
sbb
jle
lret
test
stc
shlb
mov
pop
mov
rcr
aad
and
mov
aaa
sbb
push
aad
pop
mov
scas
mov
pop
ds
daa
movsb
jg
imul
in
roll
or
add
addr16
jmp
pop
inc
jmp
push
sahf
lds
filds
mov
fidivrl
iret
and
out
es
fldenv
imul
mov
add
in
das
aam
fdivr
in
push
mov
pop
fadd
sbb
divl
mov
mov
lock
inc
xchg
ret
loope
pop
lods
jnp
int
icebp
nop
xchg
push
dec
movsl
pop
rolb
andl
fistl
mov
inc
fidivl
cmp
xchg
adc
mov
in
les
pop
fldl
mov
dec
or
jae
loop
test
pop
sub
test
repz
aam
lods
or
outsl
and
jne
in
or
sbb
mov
inc
pop
call
scas
push
iret
xchg
xchg
sub
sub
inc
mov
mov
or
dec
inc
jnp
addr16
mov
sub
lcall
sbb
add
jecxz
dec
sbb
dec
nop
xor
pop
mov
orl
xor
cmpl
ljmp
or
call
sbbb
pop
fsubrl
cmc
adc
add
dec
call
dec
adc
add
or
loope
or
add
sbb
sbb
pop
dec
neg
inc
and
and
dec
rcrb
lea
or
andps
inc
xchg
inc
hlt
shlb
xor
and
cmpsl
add
and
ficoms
or
pusha
or
les
mov
pop
dec
and
mov
sub
push
jns
cld
adcl
out
std
scas
loope
mov
push
push
aam
shr
mov
add
sar
pop
cmp
or
enter
stc
xlat
sbb
inc
imul
stos
cltd
dec
dec
int
inc
lock
out
stc
shlb
mov
add
cmp
dec
aad
icebp
movsl
das
push
xor
xor
cltd
adc
push
fcompl
loopne
fcmovu
lods
sbb
dec
mov
fstl
and
aam
dec
adc
jl
adc
testl
dec
xor
jmp
adc
popa
mov
cmc
jae
or
ljmp
mov
lret
or
mov
pushf
cmp
inc
xor
arpl
dec
and
mov
or
pop
pop
push
mov
jb
pop
xor
cmp
in
lret
adc
sub
pop
mov
scas
sarl
mov
push
mov
pop
add
fsubrs
sub
repz
mov
dec
sbb
cld
mov
or
and
mov
cltd
ljmp
out
add
call
lods
loopne
movsb
push
xchg
xlat
cmp
cmp
mov
lret
mov
outsb
mov
loope
cwtl
mov
sbb
cwtl
mov
lods
lahf
add
subl
test
je
stc
xchg
jbe
sahf
pop
sub
xchg
fistl
xchg
enter
or
push
dec
sub
outsb
mov
lock
in
sbb
stc
lea
push
rol
test
jp
cmpsb
jp
test
mov
arpl
dec
push
in
jmp
sbb
or
ret
rcr
out
testb
hlt
push
or
fwait
out
lock
cmc
jle
lahf
lods
push
fisttpl
jne
push
in
adc
out
add
jne
pusha
lcall
and
push
stos
dec
pop
xchg
mov
dec
cmp
les
xchg
stos
pop
and
mov
cltd
mov
out
out
jno
mul
int
and
fcmovbe
lock
out
orl
push
sub
mov
adc
jmp
sarl
inc
shlb
fwait
xor
xchg
ja
xor
push
pop
sti
imul
mov
xchg
sbb
lcall
pop
sbb
incl
and
lods
mov
rcrl
scas
imul
repz
insb
aaa
inc
xchg
xor
mov
insb
mov
cmp
sub
icebp
mov
dec
ret
add
mov
sbbl
or
dec
flds
push
ficompl
in
mov
push
call
adc
mov
mov
fst
xchg
jmp
jo
mov
adc
pop
orb
fiaddl
mov
mov
scas
ja
cmpsb
outsb
jo
and
inc
and
loopne
xor
push
pop
xchg
pop
jp
adc
iret
dec
es
pop
mov
add
js
ret
and
mov
data16
push
or
pop
lods
mov
mov
test
mov
dec
lds
out
aam
jae
fnsave
or
int
repnz
cmp
xchg
call
jg
aad
jl
shl
mov
push
xchg
inc
sub
test
scas
mov
add
das
fidivrs
rcr
dec
sub
mov
fisubl
mov
pop
add
mov
arpl
loopnew
je
lock
outsb
push
int3
lods
mov
mov
in
insl
test
or
in
je
insl
cmp
and
aaa
loopne
sbb
jp
pop
xor
pop
insb
xor
xchg
divb
fildl
mov
mov
xor
jecxz
xor
jle
sbb
or
mov
push
mov
jne
or
pop
andl
sub
or
adc
or
mov
jmp
jno
movsb
or
pop
in
and
aad
jge
jp,pt
sub
loopne
mov
aad
aam
dec
pop
nop
es
adc
lods
or
and
push
sbb
lret
sbb
mov
popf
dec
stos
dec
cmpb
test
push
push
mov
mov
push
vmptrst
or
inc
outsl
lea
push
cmp
aaa
mov
fadds
pop
lods
je
test
mov
int3
stos
inc
sub
jp
mov
lods
adc
or
sar
cltd
mov
mov
dec
shrl
lcall
popf
cmp
inc
and
lret
xchg
add
fucom
aaa
adc
mov
xchg
je
shrb
dec
lret
ds
insl
std
test
pushf
mov
js
mov
add
push
std
mov
clc
adc
mov
xchg
xorl
jge
mov
add
inc
cmp
and
bound
push
ljmp
lea
push
lahf
lds
lcall
cmp
mov
mov
cmp
adc
incb
sub
or
or
adcb
mov
and
mov
pop
push
push
dec
xor
pop
jbe
mov
cmp
dec
sub
loope
outsl
aad
mov
push
jb
jb
and
shr
rorb
bound
insl
jle
push
inc
test
mov
loop
add
in
sbb
push
in
outsl
jb
inc
popf
in
fstpt
cmp
inc
rcll
loope
mov
jge
mov
jge
icebp
in
fwait
mov
ret
and
adcb
xor
sbb
loope
mov
and
pop
inc
insb
dec
mov
xor
xor
outsl
out
inc
stos
push
int3
lret
jle
jae
mov
sbb
hlt
dec
dec
rolb
sarl
lock
aaa
cmp
push
sbb
inc
mov
mov
sub
js
mov
and
push
or
pop
insb
push
outsl
pop
jge
les
jb
pop
shlb
fmuls
sbb
adc
incl
sbb
sub
pop
push
jecxz
push
mov
sbb
rol
push
mov
cmova
sub
les
in
and
pop
lret
sbbb
roll
jne
pop
sub
dec
insl
inc
xor
xchg
into
push
ret
call
sbb
mov
call
or
and
lret
iret
pop
push
ds
pop
inc
mov
subb
aaa
hlt
pop
and
cmp
sub
movsb
cmp
mov
fs
test
scas
xchg
mov
add
and
pop
je
test
test
push
test
imul
outsb
das
cld
cltd
add
dec
or
lahf
jmp
or
adc
dec
inc
add
pop
lods
pushf
jmp
xor
bound
fbld
sbb
mov
insl
add
js
int3
jecxz
mov
xchg
pop
mov
aas
repz
sub
outsl
mov
mov
cltd
jge
sbb
pop
dec
cmc
or
icebp
lods
mov
inc
insl
loope
mov
out
jae
xor
xor
fdivl
sub
lret
sbb
sbb
mov
loopne
insl
adc
add
arpl
loope
cmc
inc
mov
movsb
pop
cmp
imulb
fstpl
push
imul
gs
jl
aaa
push
lock
jmp
add
insb
mov
add
add
out
gs
mov
add
shlb
mov
pop
jbe
pop
push
lds
jb
pop
cmpsb
loopne
in
jmp
push
imul
vpslld
mov
mov
xchg
outsl
sahf
inc
lds
adc
pop
test
lcall
dec
test
push
leave
std
adc
movsl
in
cwtl
jmp
aam
push
or
dec
xor
push
popf
mov
int
mov
lea
incl
cs
inc
mov
shll
cwtl
lahf
xchg
mov
outsl
mov
mov
fcoml
pop
dec
mov
imul
xor
inc
das
xor
lds
adc
dec
pop
mov
loope
mov
test
sbb
je
fiaddl
dec
jae
push
outsb
pop
out
repz
pop
sti
xchg
and
fnsave
mov
cmpsl
push
mov
xor
jo
in
fbld
sar
jne,pn
add
popa
fs
jnp
xchg
mov
mov
sbb
inc
test
decl
fldt
sub
sti
mov
iret
xor
pop
test
insb
aaa
jg
fnstsw
pop
mov
nop
xor
add
mov
sub
lods
sbb
fdivs
shrl
rcll
repnz
mov
xor
jnp
in
inc
repnz
mov
incb
ret
or
sub
ret
cs
mov
fs
ss
xor
std
ja
inc
arpl
in
clc
stos
stos
sbb
or
cs
das
cmp
jne
sbb
imull
cmpsb
bound
jle
xor
push
mov
lcall
xchg
int3
lods
cmp
xor
mov
push
scas
xchg
mov
insb
mov
xor
and
and
imul
sbb
cld
add
mov
push
mov
sbb
adc
std
idivb
push
mov
mov
std
ljmp
mov
push
sbb
xchg
nop
inc
sar
adc
fisttpll
popf
mov
lahf
adc
or
loopne
xorl
adc
mov
push
lahf
stc
icebp
shl
scas
adc
popf
dec
inc
lret
and
mov
mov
push
in
mov
dec
sbb
cmovb
xchg
push
mov
inc
or
ljmp
push
mov
adc
pop
xchg
ret
in
outsb
push
sbb
iret
out
icebp
pop
fidivs
movsl
incb
fiadds
jle
loop
pop
xor
mov
es
mov
cmp
mov
es
loopne
lcall
cld
int3
sahf
jae
mov
mov
jnp
pminub
or
mov
lcall
mov
mov
and
insl
nop
push
xlat
ljmp
test
jmp
cmp
sbb
cmp
inc
sub
adc
call
fisubrs
aam
lret
adc
rcrb
repnz
ret
mov
aam
lea
outsl
mov
repz
and
adcl
outsb
pop
and
scas
push
pop
pop
clc
mov
lcall
fs
pop
ljmp
sub
xlat
ret
push
lock
mov
nop
jle
out
xchg
loop
aaa
clc
or
repz
aad
orl
mov
sbb
adc
insl
outsl
mov
lods
xchg
popf
fiadds
and
sub
mov
jno
mov
xor
mov
push
clc
mov
xor
in
mov
xor
hlt
enter
mov
decl
repnz
aam
adc
inc
out
jne
pusha
cltd
push
xchg
pop
jo,pn
sbb
add
push
pop
inc
movsl
sbb
mov
push
ret
nop
fsubrs
push
clc
xchg
es
pusha
call
jle
adc
hlt
push
or
adc
ljmp
sub
pop
xchg
or
fdivrl
call
push
andb
dec
bound
je
jp
add
in
cli
ficompl
out
push
je
fsubr
adc
sbb
mov
dec
adc
mov
arpl
andb
mov
adc
or
fcmovu
inc
push
cltd
inc
fdivrl
mov
jmp
adc
mov
adc
push
sub
mov
inc
or
mov
test
aad
xchg
hlt
inc
sbb
fxch
rolb
mov
test
pop
in
sbb
icebp
mov
test
push
sar
sub
add
jecxz
outsl
or
pushf
push
aaa
xchg
jmp
inc
insl
fdiv
or
and
mov
push
jnp
inc
add
inc
cmp
xchg
popf
lods
adc
mov
jae
imul
idivl
sub
adc
add
nop
aad
push
mov
js
jb
inc
pop
test
and
lock
inc
inc
lcall
out
inc
cld
lret
push
and
pushl
cmp
jmp
shr
sbb
add
jmp
jae
shr
inc
mov
mov
push
xchg
std
and
or
add
jmp
jmp
cmpsl
xor
add
add
pop
imul
push
je
inc
jno
aam
rorl
or
ficoms
jg
inc
and
push
adc
ret
and
xchg
add
sub
push
int3
xchg
test
shr
push
sub
in
loop
xor
sbb
fldlg2
and
ss
mov
mov
jge
jb
icebp
or
aas
or
pop
jns
mov
inc
int
aas
aam
enter
push
jb
xor
and
in
ret
fsubs
in
push
cmp
js
pop
add
xchg
mov
or
mov
leave
pop
jns
lds
mov
nop/reserved
sub
sarl
in
sbb
or
push
add
clc
in
sub
jg
les
add
scas
mov
add
adc
dec
sahf
adc
cmc
mov
jae
pop
or
fisttpl
jns
les
imull
fdivs
xchg
adc
adc
movsb
and
and
sub
dec
movsl
jo
sti
les
mov
popf
adc
psrlq
and
testb
and
and
inc
out
mov
jns
jl
cwtl
inc
sbb
rclb
data16
insb
inc
mov
inc
mov
xor
out
orl
je
lahf
xlat
imul
or
adc
push
daa
int3
lret
fldenv
iret
loopne
gs
push
push
inc
cld
cld
mov
jns
push
lea
push
jno
cs
and
or
or
xor
or
inc
jno
inc
lock
inc
roll
jge
stc
jbe
xor
xchg
dec
add
into
roll
aad
add
int3
mov
out
aad
enter
lea
hlt
cmc
repz
jecxz
stc
outsl
sub
push
and
sbb
adc
xchg
push
shll
sub
ss
out
clc
or
xor
out
loopne
pop
jmp
aas
cmp
cmpb
nop
xor
std
aaa
clc
or
notb
adc
popl
mov
out
add
mov
les
lds
mov
xchg
xor
out
or
xor
jne
and
insb
in
xchg
or
or
jg
inc
and
lret
add
icebp
fs
add
loope
aam
push
ret
xchg
pop
jg
in
inc
mov
rcll
in
push
jns
xchg
jl
mov
pop
sti
inc
sbb
push
mov
iret
push
movsb
out
in
clc
ljmp
add
dec
repz
sbb
and
mov
pop
cltd
imul
cmp
cmp
push
lahf
es
push
mov
pop
test
sahf
imul
test
sti
push
mov
push
dec
call
lock
pusha
pop
sti
lods
ja
pop
dec
call
mov
incl
adc
mov
cli
ljmp
and
mov
mov
rclb
fistpll
les
les
aam
jle
inc
cmpl
adc
scas
push
daa
lds
xchg
call
adc
xchg
pop
add
jo,pt
dec
dec
push
scas
iret
sub
mov
imul
dec
test
and
mov
jno
or
rcrb
mov
rclb
cld
jle
pop
js
mov
insl
pop
fstpt
cmc
jg
mov
cmp
outsl
loopne
subl
adc
xchg
roll
js
nop
lods
fs
enter
adc
or
call
lcall
push
pushf
mov
pop
xor
or
push
cmp
inc
lea
outsb
pushf
xchg
inc
fisttpll
ds
lock
xchg
call
lcall
fs
mov
sbb
or
rorl
or
mov
aam
add
in
inc
xor
dec
inc
sub
adc
test
dec
sbb
push
outsb
fiadds
lcall
inc
int
xchg
add
fldenv
fdiv
dec
xchg
xor
in
xor
xchg
insb
icebp
or
inc
inc
test
adc
test
sbb
inc
clc
and
aad
scas
dec
push
and
mov
out
imul
jo
lcall
test
dec
and
clc
rcll
gs
or
incl
mov
cld
xor
jno
loop
jecxz
aam
and
add
push
dec
dec
inc
pop
mov
flds
jge,pn
push
mov
subl
sti
popf
and
dec
bound
or
jmp
fcomi
or
xchg
addr16
mov
ss
xchg
out
push
mov
rol
mull
daa
cwtl
shlb
jle
xchg
jbe
fmull
sub
notb
ja
testl
pop
or
jp
ljmp
icebp
and
movsb
xchg
aam
jo
and
and
mov
popa
inc
sti
mov
daa
addr16
inc
pop
mov
test
adc
mov
jbe
mov
mov
ljmp
add
sub
push
push
xor
mov
add
gs
outsb
clc
sbb
insb
xor
jno
call
and
sub
out
xor
in
push
cmp
pushl
sbb
adc
js
scas
pop
jmp
js
pop
inc
mov
fwait
sti
sbb
cmp
push
or
frstor
loope
bound
loop
cltd
mov
lods
lret
dec
cs
mov
pop
mov
ret
mov
push
xor
jecxz
fucomip
cmpsb
or
cwtl
add
test
or
jg
bound
xchg
insl
or
lods
xor
pop
pop
and
mov
cmpsb
mov
jns
sub
rolb
cli
dec
out
jns
outsb
lahf
nop
mov
cmpsb
xchg
test
and
pop
dec
in
call
inc
inc
sub
shlb
lea
sub
jo
cmp
outsl
cld
aaa
dec
ficoml
cmp
test
test
adc
call
mov
push
shr
fmuls
imulb
mov
mov
mov
adc
stos
dec
jo
xchg
lret
adc
xchg
sub
xchg
in
push
rcrb
fisttpl
mov
fnstcw
add
cmp
push
lock
jg
and
fsubrl
sbb
loope
aaa
or
repnz
cltd
inc
stc
cmp
dec
leave
stos
out
fistps
cmc
add
pop
inc
mov
and
lea
add
imul
lcall
fadds
dec
out
hlt
or
inc
outsb
aaa
sbbb
xchg
scas
pop
lcall
pop
cs
test
cltd
es
sub
std
fisttps
push
rol
push
xor
bound
cmpl
call
adc
mov
out
mov
cmp
mov
cwtl
roll
mov
test
inc
inc
decl
push
and
or
and
sbb
push
stc
cmp
xchg
daa
and
xor
add
xor
sbbb
push
fsubrs
icebp
push
sbb
xchg
ljmp
outsb
cmc
xchg
lret
mov
cmp
loop
sbb
mov
cmpb
pop
mov
sub
or
xor
stos
insl
xor
inc
cmp
mov
negb
push
add
and
mov
add
rcll
inc
mov
adcl
mov
mul
fidivs
ss
in
pop
push
mov
mov
stos
das
jne
je
mov
leave
and
adc
outsl
sub
mov
add
popa
outsl
sub
das
sarb
cmp
dec
fwait
sbb
clc
add
pop
cmpsl
push
in
in
push
daa
adc
lods
js
subl
movsl
incl
jno
push
xchg
mov
xchg
out
fwait
mov
ljmp
or
jbe,pn
sub
sub
xorl
ja
je
ds
jl
cmp
movsb
dec
popf
lret
imul
bound
adc
pop
add
xchg
and
mov
stos
pusha
mov
stos
push
divl
lods
pop
sub
je
nop
loopne
push
adc
andb
mov
mov
movsl
leave
inc
sti
or
addr16
stc
fcompl
fwait
dec
mov
je
mov
popf
dec
outsl
xor
mov
ficoml
aaa
inc
jnp
jg
dec
push
jne
dec
pop
mov
xor
fdivrs
mov
int3
rcr
lds
and
jbe
push
outsl
cmp
jmp
insl
insb
rolb
or
imul
or
mov
loopne
jmp
cmp
stos
sub
sub
sbb
add
aas
shlb
roll
and
mov
add
cmpsl
cmp
dec
mov
stos
cltd
mov
push
mov
lods
pop
or
jl
cmp
add
inc
ja
xchg
mov
loope
frstor
mov
jle
negb
xlat
mov
dec
mov
insb
fidivl
push
les
movsl
outsb
jecxz
cmp
adc
inc
aad
scas
rcll
nop
pop
dec
outsb
pop
aaa
ror
mov
mov
icebp
mov
adc
inc
fcomps
jbe
dec
jne
lods
insl
fwait
sahf
inc
fwait
loop
cmc
xor
call
dec
dec
into
or
push
aas
xchg
mov
and
cltd
pop
add
mov
shr
ja
pop
lods
add
aad
fsubp
movsl
jg
xchg
sbb
cmp
inc
enter
in
orl
sub
pop
pop
jmp
bound
jbe
ljmp
inc
fdivs
add
pop
rclb
mov
xorb
out
push
in
divb
decl
mov
stos
sbb
ljmp
jmp
aam
sbb
adc
mov
mov
jl
nop
ja
push
imul
filds
insl
rcrl
inc
and
das
adc
mov
sbb
xor
sub
pop
test
push
out
xor
jb
stc
adc
subl
pop
push
mov
cld
pop
lock
inc
push
cld
iret
push
subb
jb
test
ffreep
jg
nop
mov
jecxz
call
cs
inc
dec
repnz
jl
mov
jl
loopne
xor
loope
mov
mov
xchg
addr16
xchg
or
adc
jl
pop
pushf
call
outsl
clc
jb
push
stc
jns
push
mov
aam
movsb
jbe
ja
adc
dec
pop
push
sbb
push
push
cwtl
shlb
push
adcb
xor
insl
jne
out
push
mov
cmpb
inc
cmp
lods
fimuls
jg
xor
dec
pop
shrl
enter
pop
cltd
xor
pop
sub
test
xchg
dec
lds
cmpsb
sbb
les
push
fiaddl
fwait
mov
imul
jmp
addr16
jl
sub
inc
jecxz
outsb
pop
jb
xchg
lods
push
popa
inc
scas
mov
aam
lods
hlt
add
in
dec
xor
cmc
sbb
fbstp
out
pop
fcmovbe
inc
sub
or
jbe
xchg
cmpsl
mov
dec
sub
cmp
movsl
xchg
mov
push
mov
ret
jne
call
xchg
or
jecxz
clc
fisttpl
bound
inc
add
adc
jbe
jnp
movntps
push
jae
test
lea
sbb
test
mov
jno
cmp
xorl
fldl
ss
adc
pushf
xchg
sti
ret
jnp
repnz
or
subb
jbe
sbb
mov
mov
sbb
insb
iret
cmp
and
lea
jmp
scas
inc
and
aaa
mov
add
jno
outsb
loop
add
dec
inc
neg
dec
ret
sub
outsb
lcall
fsubl
ljmp
in
or
arpl
scas
decl
nop
push
pop
or
sbb
or
rolb
adc
mov
pushl
sub
xor
cmp
fwait
stc
insb
mov
jl
std
ljmp
mov
jbe
xor
jmp
mov
mov
minps
and
add
fs
les
ss
call
mov
add
cmp
push
sbb
aam
push
jns
mov
dec
sub
loopne
jle
mov
and
adc
sbb
xchg
jp
lods
inc
ret
jle
popf
cmp
sub
dec
lcall
and
popf
sbbl
les
inc
xor
add
fsubl
jge,pt
xchg
or
xchg
subl
inc
dec
and
sarb
add
jp
mov
adc
jecxz
mov
mov
sub
and
pop
loop
xchg
call
jle
and
dec
pusha
fimull
mov
lahf
in
sbb
mov
pop
mov
call
add
mov
sbb
cmc
shrd
scas
incl
pop
or
xchg
push
into
mov
mov
sarl
push
insb
aad
test
ds
fsubrl
ret
scas
push
cs
popa
shrb
movsl
fmull
pop
cmc
adc
and
or
push
or
imul
ja
jbe
lea
int3
aad
xchg
mov
es
push
andl
mov
ljmp
lret
and
lahf
fbld
hlt
shrb
mov
out
mov
pusha
inc
or
or
jg
mov
aad
addb
mov
dec
mov
jbe
jmp
das
push
out
fnstenv
scas
lods
adc
xor
jmp
fcoml
xor
xchg
mov
mov
mov
addb
push
pop
mov
and
inc
add
sub
pop
stos
leave
mov
ja
loop
xchg
cmp
adc
aad
xchg
call
push
popa
xchg
adc
sbb
aas
xchg
sbb
leave
mov
cmp
scas
push
vmovntpd
inc
xor
pop
roll
xchg
mov
imul
inc
or
ret
xchg
fdiv
jle
inc
sbb
xchg
mov
pop
shlb
dec
dec
sub
cmp
repz
hlt
mov
test
mull
xlat
add
push
data16
push
ss
cmp
mov
lea
inc
aas
push
sub
mov
popa
push
dec
iret
add
iret
add
or
js
js
call
inc
rcr
roll
mov
in
jp
addr16
dec
mov
cmp
or
cmp
jno
push
mov
rcll
js
and
push
pop
push
fisttps
jle
ret
xchg
int
aam
fsubrl
lds
addb
adc
mov
mov
pop
cmp
inc
jle
int
adc
shr
filds
pop
lahf
adc
fidivs
call
stos
or
loop
out
adc
or
sbb
repnz
sub
das
adcb
push
and
xor
mov
lahf
sub
xor
cmp
dec
mov
adc
popa
fyl2xp1
mov
or
or
fstpt
sub
inc
lahf
std
ja
mov
xlat
shl
and
in
hlt
imul
pop
cmc
or
aad
inc
jb
outsb
adc
push
mov
mov
push
sbb
sub
fld
lods
cwtl
adc
sub
push
fildl
mov
inc
dec
and
adc
and
lods
js
cmp
sub
adcb
cwtl
orl
inc
addl
add
dec
xchg
cmc
add
add
or
aas
add
xor
out
lods
sub
jecxz
out
pop
mov
stc
rep
in
mov
push
fcoms
mov
pop
test
or
dec
div
add
jecxz
outsl
call
add
xlat
mov
imul
mov
or
insl
ficomps
or
xorl
and
shrb
sub
divb
push
jnp
lds
mov
shlb
jb
sbb
pusha
adc
shrb
fcompl
push
repz
faddl
outsl
fildll
xor
or
in
fcomp
nop
fmul
call
and
adc
xchg
int
add
fs
push
dec
add
out
adc
or
addr16
popf
push
les
test
pop
pop
jnp
sbb
mov
pop
adc
xchg
dec
inc
pushf
add
sbb
mov
xrelease
push
jg
shll
aas
pop
scas
jl
adc
cmp
mov
push
xchg
pop
call
loope
xchg
pop
push
inc
mov
lock
push
lock
mov
mov
cs
adc
test
pusha
adc
adc
xchg
rol
out
add
in
mov
mov
add
pop
mov
sub
cli
ret
jns
js
xchg
inc
mov
icebp
outsb
sub
inc
mov
lea
fwait
cmpsb
call
movsl
pop
pop
inc
jae
add
or
pop
adcl
test
jae
inc
xchg
sub
clc
push
fsub
xlat
das
not
jmp
movb
mov
fucom
cwtl
imul
fwait
cwtl
mov
jb
setbe
inc
je
sbb
jecxz
aas
inc
sub
mov
lea
adc
dec
rolb
popa
add
jb
xor
or
pop
jecxz
insb
jne
dec
or
xorl
loope
mov
pop
and
sbb
ss
movsl
mov
je
sbb
push
lea
lea
pop
cmp
cmp
push
call
adc
add
std
jno
xchg
mov
mov
push
test
jg
xchg
int
mov
mov
pusha
inc
mov
and
xchg
push
push
in
in
hlt
pop
ljmp
inc
les
fwait
cmp
or
and
int3
xorb
movsl
sbb
and
int3
dec
xor
sbbl
js
jo
into
movsl
sbb
xor
aas
shrb
bound
and
and
cld
loope
mov
fsubrl
mov
xor
pop
or
cmp
xor
add
and
adc
adc
push
push
andb
or
in
call
rcr
jnp
scas
cli
pop
fdiv
repz
mov
hlt
push
out
or
dec
sbb
push
test
xchg
in
xchg
mov
add
fsubs
sub
lock
lods
sbb
and
ja
mov
cmovne
mov
xchg
pop
sub
js
push
cmpsl
int
sub
pushf
ljmp
test
pop
adc
lahf
jge
test
xchg
bound
push
ljmp
inc
fcmovne
fiadds
sub
sahf
push
mov
call
in
icebp
fcoml
out
and
insl
hlt
lea
orb
xor
aas
inc
dec
jp
sub
mov
lahf
popa
add
jmp
ljmp
test
lcall
jg
fistl
mov
insl
jo
xor
aas
test
das
add
lcall
nop
jmp
pop
sub
movsb
add
jb
scas
jle
sbb
out
cli
stos
adc
fisttpl
mov
pop
icebp
cltd
add
cld
shr
out
shrl
cs
and
cmpsb
jno
add
dec
call
mov
jl
les
scas
icebp
xchg
push
insl
les
pop
jno
pop
sub
cltd
pop
xlat
inc
icebp
inc
aaa
cmp
cmpsb
add
imul
enter
adc
mov
in
pop
mov
mov
andb
pop
lods
push
and
mov
inc
pop
pop
mov
test
jne
add
push
adc
mov
mov
xchg
repz
mov
cli
das
cmc
out
and
jmp
add
inc
sub
lret
or
call
dec
adc
clc
jg
lds
and
dec
cmp
in
push
loope
push
mov
in
mov
or
sbb
mov
pop
pop
cmp
stos
push
call
cmc
ret
lods
pop
in
dec
aad
in
xchg
sub
imul
mov
cmc
mov
cmp
or
mov
enter
add
adc
push
sbb
inc
pop
mov
sbb
mov
add
inc
cs
jmp
aad
and
sar
shlb
scas
ret
xchg
mov
test
jbe
mov
mov
fdivrs
jae
and
push
or
out
add
movsl
push
add
xlat
call
sarb
cltd
pushf
sub
arpl
add
aaa
pop
clc
shlb
repz
stos
das
inc
loop
dec
shlb
test
out
mov
ds
scas
stos
test
lods
ret
loopne
push
xchg
je
dec
pop
push
mov
cmp
adc
test
outsl
mov
adc
dec
jmp
push
sbb
mov
stc
mov
jbe
pusha
lcall
dec
adc
jg
pop
sbb
shll
mov
push
dec
jge
add
sti
push
fistl
mov
jg
out
push
xchg
mov
ds
and
outsl
mov
icebp
inc
push
xchg
dec
shll
xchg
cmp
in
sub
jg
cwtl
gs
push
mov
movsl
cli
or
mov
sub
mov
adc
cmpl
fisttpl
push
push
dec
rcr
pop
inc
inc
call
sbb
lret
popa
sbb
outsl
mov
or
dec
xchg
lcall
stos
push
inc
subl
adc
in
into
jp
mov
out
test
fistpl
data16
or
inc
jno
push
arpl
mov
sar
adc
sbb
xchg
cmpsl
cmp
clc
aaa
bnd
int3
out
add
ret
xor
mov
push
push
jbe
mov
adc
shlb
ds
xchg
jae
lret
in
mov
jg
jmp
and
dec
test
dec
fs
addr16
mov
xchg
shrb
mov
jg
movl
push
xchg
sub
mov
lock
lcall
push
ret
dec
sbbl
aaa
mov
xchg
test
clc
inc
push
and
test
mov
dec
mov
int3
mov
fildl
pushf
pop
ljmp
cwtl
movsl
jle
incb
inc
mov
stc
fdivrs
xchg
cld
test
jg
nop
pusha
add
das
jg
push
add
jecxz
jo
sbb
outsb
rorb
push
aas
pop
inc
mov
add
into
pushf
jne
lods
cld
cmp
pop
lahf
or
cld
div
add
push
xor
lret
popa
sub
mov
jo
pop
mov
pop
mov
and
xor
lods
pusha
mov
xorl
das
std
sub
xor
mov
scas
out
cmp
loope
loopne
xor
in
addr16
push
lcall
push
mov
jp
mov
xchg
mov
test
cmp
sbb
lret
sbb
mov
outsl
sbb
cli
dec
adc
push
fildl
adcl
aaa
sub
pop
mov
dec
pushf
movsb
cmpsl
ret
push
imul
imul
shl
inc
loopne
jg
in
lock
in
push
pop
mov
dec
sub
shrl
push
dec
pop
dec
jg
in
movl
sbb
clc
cli
dec
cwtl
inc
subl
popa
cmp
loop
incb
notl
stos
addr16
and
test
fsubrp
inc
loopne
mov
sar
xchg
bound
pop
cmpsl
leave
bound
fsubrp
sub
or
dec
sbb
jle
and
jo
xchg
mov
lock
aaa
scas
aam
adc
and
test
push
rcll
clc
cmp
or
enter
imul
or
jno
xorb
add
out
nop
dec
mov
clc
das
sbb
add
lret
xchg
xchg
jg
mov
das
cwtl
in
dec
sbb
cwtl
lods
adc
and
lods
fs
dec
add
push
inc
inc
mov
loope
mov
pop
inc
sub
pop
js
fildll
bound
or
pop
fldenv
xor
cmpb
mov
dec
cmp
add
or
pushl
push
out
push
loopne
into
adc
call
nop
test
outsl
cmp
mov
inc
cmc
aaa
adc
mov
repz
lds
dec
lcall
ljmp
stos
js
add
fisubl
and
jnp
push
cmpsl
push
mov
or
pop
aad
xor
test
or
jnp
mov
cmp
cvtdq2ps
and
aam
add
dec
enter
ljmp
outsl
jo
and
adc
and
adcb
mov
push
aam
aam
mov
loop
inc
fnstenv
sbb
outsb
test
std
mov
pop
mov
and
pop
loopne
cmp
push
stos
mov
cmpsl
inc
xorb
lock
pop
sbb
insb
fstpt
popf
inc
inc
fs
sub
mov
outsb
addr16
sbb
lahf
dec
mov
mov
mov
lods
dec
or
cli
mov
or
cmpsl
dec
mov
mov
mov
adc
mov
jae
lret
sbb
out
fdivrl
jp
lret
push
cmp
shll
add
xorb
loop
inc
out
or
mov
in
movsb
lds
cli
inc
cld
scas
sbb
aad
mov
jmp
or
adc
cmp
sbb
js
adc
mov
enter
or
cltd
cld
daa
adc
jle
scas
inc
mov
pusha
hlt
fnstsw
dec
xlat
clc
sbb
push
lret
or
pop
cmpsb
push
xchg
add
jge
jg
aam
stc
sbb
insb
mov
rcrl
inc
mov
dec
aaa
mov
or
xor
out
test
xchg
cmp
ret
pop
ljmp
js
out
cwtl
and
mov
pusha
ret
cmp
data16
cmp
in
sahf
movups
inc
dec
hlt
aaa
jnp
cwtl
xor
in
xor
push
xchg
push
dec
sarb
pop
cmp
xchg
sbb
lret
push
divl
xor
aam
xor
sbb
and
fstpt
pop
insl
adc
xchg
test
mov
fwait
cmp
push
add
and
cltd
inc
add
jp
and
lahf
dec
push
inc
addr16
out
xchg
mov
jge
xor
ret
add
test
dec
cmpsl
pop
test
or
ret
dec
xor
fcoms
xor
jne
les
jns
in
add
fadds
mov
mov
add
inc
repz
shll
es
mov
std
adc
aaa
arpl
mov
cmp
movsl
enter
rcr
xor
test
cld
mov
cmp
and
jne
mov
xchg
xor
xor
inc
jecxz
scas
sti
test
icebp
hlt
stc
adc
stc
movsl
dec
inc
int
addb
ja
mov
test
jb
rorl
pop
jae
adc
fistps
pop
sti
add
js
cmp
mov
jecxz
ljmp
mov
ja
int
popf
inc
pushf
add
sub
rclb
fstpt
and
ja
je
sub
add
mov
shlb
add
jp
fidivrs
enter
mov
jg
ret
icebp
pop
mov
add
insb
push
mov
aaa
jmp
dec
hlt
inc
xor
sbb
xlat
mov
dec
filds
and
pop
adc
addr16
sbb
cmc
sbb
je
fmuls
fimuls
cmp
insb
adc
dec
data16
fdivr
dec
movsl
xchg
adc
or
xor
test
sbb
lods
pop
out
in
sbb
sbb
leave
cld
subl
in
add
pop
enter
jg
mov
sbb
mov
cmp
aaa
data16
xchg
mov
call
mov
int3
repnz
lcall
popf
mov
addr16
popa
in
arpl
fildl
add
and
or
mov
and
adc
clc
insl
xlat
mov
cmpsb
add
or
scas
or
aad
stos
push
rcl
jbe
or
mov
lock
sub
outsl
repz
fildll
adc
call
sbb
and
adc
icebp
cmpb
or
adc
pop
xchg
or
fcoms
dec
sarl
push
bound
pusha
fwait
xor
shlb
int3
rcrl
pop
lea
in
xor
hlt
or
movsb
dec
mov
test
jbe
fcmovnbe
push
js
divb
shrb
sbb
and
fcoml
shl
mov
mov
out
push
lcall
mov
push
fsubrs
pop
repz
and
mov
jo
xor
xchg
sbb
es
cld
push
les
push
fsubrs
cmp
lcall
jecxz
pop
and
rcrb
and
ja
cmp
outsl
and
addr16
adc
mov
jae
push
shll
jbe
xor
imul
sarb
add
mov
push
mov
stos
xlat
jg
pusha
or
sbb
xor
mov
pushf
js
mov
dec
and
mov
mov
pop
push
mov
sbbl
cwtl
cmp
movsb
daa
in
add
pusha
and
jne
test
push
fadds
inc
shll
sub
pusha
out
mov
mov
loop
push
aas
inc
pop
dec
or
pop
nop
push
push
xor
test
sbb
incb
inc
lods
dec
sbb
pop
push
dec
adc
ret
ret
adc
cmp
sbb
cmp
jne
imul
scas
sbb
aam
push
inc
enter
shlw
out
test
mov
test
mov
icebp
inc
pop
lcall
shrl
stos
and
jo
xorb
jge
jbe
xchg
jno
imul
stos
pop
cmp
je
stos
loopne
mov
jle
sbb
ret
or
cwtl
cwtl
sbb
inc
lds
gs
push
push
jle
pop
mov
sub
xor
xor
lds
ret
sbb
bound
mov
xor
xlat
jne
js
aas
mov
hlt
sbb
sbb
mov
stos
fsubrs
pop
cltd
lods
rcrb
adc
cmp
and
add
insb
fcomi
add
aam
fsubp
inc
andl
pop
and
cmpsb
jecxz
push
xchg
or
xlat
arpl
outsl
add
mov
test
ret
imul
test
or
inc
cmp
outsb
pop
sub
clc
mov
adc
xlat
call
lods
clc
adc
ret
cmpsl
dec
inc
jmp
decl
jno
mov
xlat
push
cmp
insl
mov
jge
and
mov
ss
xchg
es
decl
mov
sbb
int3
dec
pop
rolb
pop
in
push
ss
pusha
xor
push
arpl
sub
cmp
pop
pop
mov
xchg
cwtl
ja
dec
cmp
or
mov
mov
dec
mov
ficoms
mov
add
inc
movsl
out
scas
stos
stos
cmpsb
or
shlb
adc
and
stos
ljmp
cmpxchg
mov
mov
lods
inc
cmp
dec
sbb
push
clc
mov
int
inc
sub
add
lds
in
or
jae
or
add
mov
xor
add
fidivrl
jmp
inc
loop
or
dec
je
test
jbe
fmul
add
cld
in
xor
ret
clc
jmp
imul
mov
sub
jp
dec
stc
loop
in
test
ret
xchg
popf
pop
in
inc
jge
xor
bound
ds
and
jno
addr16
clc
xchg
mov
fisttps
test
jmp
int
inc
push
les
mov
dec
cwtl
imulb
mov
push
pusha
cs
cmpl
xor
push
xchg
sub
cmpsl
pop
aam
cmp
imul
cmovne
iret
ja
test
ja
negl
fisubs
cmp
cmp
lret
mov
and
dec
or
sbb
push
in
or
inc
sbb
jp
mov
inc
sbb
outsb
inc
add
add
sarb
insl
scas
push
xchg
repz
int
inc
sbb
pusha
add
mov
mov
pop
ret
mov
js
data16
push
and
or
or
dec
das
hlt
jae
add
mov
pusha
pop
clc
xor
inc
loopne
ror
mov
push
or
test
and
xor
in
mov
or
movsl
mov
mov
dec
mov
cmp
xor
das
inc
mov
jae
rolw
xchg
pusha
loopne
or
jb
js
pop
into
add
das
arpl
in
in
pop
cld
add
bound
scas
adc
adc
sub
push
dec
loop
fildll
inc
fs
inc
stos
pop
loop
pop
cmc
and
pop
or
orb
idivb
or
loop
mov
xchg
add
adc
out
jns
mov
ljmp
push
inc
inc
and
sbbb
dec
inc
jne
ret
jmp
cmp
notl
cs
cmc
add
adc
cwtl
notl
mov
inc
aam
gs
in
data16
bound
test
push
inc
fstps
inc
push
bound
mov
call
sbb
out
dec
sbb
jl
dec
push
sub
inc
add
test
pop
or
ret
hlt
add
and
hlt
cwtl
cli
fildl
pop
sub
pop
mov
adc
sbb
jnp
cmp
and
mov
inc
repnz
pop
push
icebp
mov
fcmovnbe
mov
add
lret
aam
or
adc
stos
lock
adc
je
es
inc
daa
sbb
and
adc
fstpl
je
mov
push
jg
fdivl
sub
imul
out
ljmp
clc
fisttpll
jbe
sbb
add
xchg
out
xchg
imul
push
adc
sbb
mov
cmpsl
pop
rorb
icebp
mov
stc
or
mov
sbb
xor
fucomi
leave
fistpl
push
inc
pop
push
loopne
mov
lock
xor
sub
jns
and
add
aam
jmp
lea
pop
movsb
pop
xor
pusha
push
rolb
nop
jae
mov
mov
idivl
inc
jp
rorb
ret
ss
aas
cmp
xchg
add
inc
in
xor
inc
push
test
inc
xor
adc
dec
xlat
mov
cltd
ss
hlt
push
sbbl
in
test
nop
jp
inc
sbb
and
fbld
clc
ret
inc
xchg
jae
add
sbb
out
adc
or
fidivs
mov
out
inc
dec
sub
aaa
mov
bound
out
add
shrl
push
fistpl
out
int3
ret
dec
into
icebp
adc
push
jae
rorl
leave
sbb
adc
pop
pop
mov
xor
jb
ja
xlat
push
inc
xor
jp
in
sbb
or
outsl
and
aam
in
cmp
loopne
push
jne
rorb
mov
rcr
inc
jns
clc
pop
xor
lds
hlt
cmpsb
dec
clc
enter
pop
es
inc
rolb
cmp
xor
sbb
pop
gs
mov
and
ja
xchg
xrelease
test
cmp
orb
push
dec
inc
int
rorb
mov
push
hlt
out
mov
push
jno,pn
add
out
sub
xor
ljmp
xchg
aad
dec
sbb
and
fyl2xp1
sbb
add
andb
and
fildl
fbstp
xchg
idivb
rcl
mov
fdivrs
push
out
or
jb
jb
in
stos
adc
jne
xor
cld
ss
adc
xor
dec
ret
addl
ds
xor
dec
xor
adc
xor
cmp
add
jp
hlt
clc
dec
xor
or
inc
aas
push
mov
or
mov
sub
ret
push
orb
xchg
push
cmp
push
push
inc
sub
xor
push
adc
jb
js
inc
mov
sbb
mov
cmp
dec
push
mov
push
jo
xchg
insb
inc
jle
outsl
add
push
out
or
or
jmp
adc
lret
dec
xchg
js
xorl
inc
jo
xor
iret
subl
inc
fisttps
xor
cmpsl
or
xchg
inc
adc
adc
or
sti
test
shr
pop
outsl
testb
fcomip
mov
in
cmp
add
add
add
arpl
loopne
mov
and
outsb
rorl
push
mov
inc
repnz
sub
pop
cmp
jo
cwtl
in
aas
out
inc
mov
and
and
jo
push
loope
and
repz
sbb
pop
mov
mov
lods
orb
aas
adc
fldt
imul
push
add
insb
cmpsb
xorb
cld
or
or
mov
pusha
in
mov
ja
jmp
add
add
jb
stc
adcb
mov
dec
aam
lcall
fcompl
sub
pop
aas
pop
pop
push
addb
pop
bound
loop
add
mov
or
or
sbb
lods
aam
arpl
idivl
inc
stos
xor
ret
sub
hlt
adc
aam
test
shr
jge
sub
cmp
dec
mov
nop
lcall
cmp
or
inc
sbb
std
push
jbe
add
leave
adc
rclb
dec
push
adc
fs
mov
and
sbb
pop
mov
das
leave
subb
cmp
int
cmp
jle
push
ds
mov
arpl
sbb
jmp
icebp
adc
sub
add
lcall
mov
mov
hlt
repz
or
in
sub
jmp
jno
dec
pushf
xchg
cltd
jne
lds
orb
jnp
mov
sub
or
dec
pop
pop
jp
cmp
into
hlt
xchg
sub
out
push
shll
pop
mov
test
imul
es
ja
cmp
addr16
cmp
icebp
test
jmp
jle
data16
jmp
xchg
push
popf
push
xchg
loopne
xor
jae
cmp
call
xor
fadd
aas
push
shlb
sub
pop
mov
sub
cmc
pop
add
adc
pop
jmp
mov
xchg
sahf
sahf
fwait
xchg
push
pop
pop
clc
bswap
adc
mov
mov
cmpsb
call
jecxz
decb
orb
fstp
jno
add
aam
xor
mov
mov
jno
add
or
or
lret
push
fistps
sbb
add
add
cmp
xchg
push
push
adc
inc
push
inc
cmp
xor
fsubr
outsl
and
add
rolb
popf
pop
test
xchg
or
scas
mov
jo
inc
xor
fwait
jl
pop
lahf
mov
inc
shlb
daa
push
and
pop
jb
xchg
jmp
icebp
inc
sbb
mov
push
fs
mov
movsb
outsl
ret
stos
adc
leave
inc
and
xchg
cmp
mov
popa
cmc
sbb
les
popf
mov
rolb
cmc
mov
mov
orl
insl
and
mov
cmpsb
dec
pushf
jmp
cli
fsubs
cmp
dec
pop
mull
pop
sbb
pop
fistpl
xor
jmp
jp
enter
test
xor
cmp
aas
fldl
cmp
idivb
xor
xor
repz
adc
mov
pop
sbb
outsb
fstps
addb
enter
cmpsb
mov
dec
cwtl
sarl
shll
add
push
incl
mov
add
test
int3
in
or
sbb
jle
adc
loopne
xor
inc
sbb
shlb
mov
inc
mov
cmc
push
mov
jo
aaa
stos
add
aam
dec
repnz
imul
xor
xor
cmp
push
mov
cmp
push
movsl
inc
dec
sub
mov
push
add
cwtl
cltd
imul
dec
mov
popf
xor
add
add
pop
lds
loopne
inc
icebp
jnp
faddl
sub
mov
test
clc
inc
scas
sarb
fiadds
cs
pop
add
jbe
add
jne
jbe
xchg
inc
sub
fst
xchg
into
ljmp
cmp
cli
xor
jo
add
jb
test
adc
lock
loopne
test
das
incl
fidivl
and
popa
inc
test
loop
lret
cmp
push
mov
xor
pop
fs
pop
and
int
ret
adc
inc
andl
or
orb
jb
mov
into
adc
mov
push
fcompl
cmp
dec
aaa
sbb
mov
nop
or
js
sub
mov
test
and
std
or
je
cmp
jae
aas
mov
jge
add
sub
inc
mov
stc
adc
cld
paddb
mov
loope
addl
sbb
push
outsl
adc
push
sbb
std
loope
or
addl
xor
cmp
adc
cmp
pop
xchg
pushl
sub
shll
popa
or
or
mov
aam
dec
mov
pop
push
jmp
imul
mov
out
adc
add
loope
push
push
pop
add
pushf
les
cmp
add
lret
pop
jno
mul
and
subb
add
mov
subl
sub
out
out
adc
loope
adc
test
jne
jge
movsb
aaa
fisubs
sti
xor
testb
sbb
or
lcall
xor
inc
mov
cwtl
std
xor
or
cwtl
pop
stos
test
sbb
out
pop
inc
inc
hlt
cwtl
int
mov
in
or
in
and
sti
adc
pusha
test
jne
cmp
mov
loopne
bound
cmp
in
inc
fcmovnu
mov
add
add
cmp
fidivs
mov
repnz
cltd
add
int3
and
add
in
neg
cmpsb
fstpt
les
shr
dec
xor
repz
cmp
das
fistpll
pop
ss
or
cpuid
add
cmpsl
out
add
iret
and
mov
dec
push
dec
jns
imul
mov
xor
inc
push
hlt
sub
and
sbb
or
nop
add
jno
sbb
bound
call
cld
xor
and
xor
aas
fcomi
inc
xor
sbb
inc
jae
jae
cmc
aam
ret
add
adc
lds
or
aam
leave
jne
pop
aam
icebp
cmp
fiaddl
lret
or
push
out
jbe
roll
jnp
xchg
add
jne
jl
js
loop
and
test
rcl
fcmovu
sub
mov
mov
adc
mov
popf
inc
shlb
and
scas
pop
sarb
and
mov
jne
push
xor
adc
jno
dec
add
jle
std
ja
pop
lds
add
in
out
enter
add
dec
mov
imul
dec
xor
lock
sub
xor
push
ret
xor
mov
ror
and
mov
test
fstpl
in
or
arpl
lock
pop
enter
hlt
incl
adc
ret
nop
addb
incl
rorb
mov
into
test
xchg
add
jae
outsb
ret
add
add
sub
loop
cwtl
paddsw
adc
xor
lock
xlat
push
cld
inc
cmc
adc
call
cwtl
jge
lock
pop
adc
add
jp
and
jg
sub
pop
add
fists
shr
ds
add
test
sub
imul
sbb
sbb
push
fldl
xor
mov
fidivl
das
or
clc
sahf
add
push
mov
and
fsubr
sub
push
ficoml
call
jge
add
mov
pop
jne
cmp
repnz
mov
adc
push
add
and
fisubrs
arpl
adc
xorps
scas
inc
frstor
and
push
scas
lds
stos
fiaddl
pop
clc
add
ret
outsl
pop
pop
inc
sbb
stc
xchg
cs
push
mov
add
inc
gs
imul
inc
in
mov
jo
imul
mov
dec
ja
pop
adc
wbinvd
add
push
repnz
xor
add
outsb
mov
push
orl
repnz
mov
add
mov
rolb
adc
insl
add
out
out
mov
xor
incl
mov
sbb
add
paddq
in
mov
jns
push
add
jmp
mov
xlat
cld
xchg
add
aad
mov
and
dec
add
pop
call
adc
stos
add
or
fcompl
sub
insb
mov
xor
push
sbb
les
sbb
je
dec
adcl
movsl
lcall
xor
stos
mov
test
mov
jecxz
fimuls
push
mov
sbb
and
loopne
fimuls
orl
filds
adc
clc
push
jne
xor
inc
jmp
add
fisttpll
lods
inc
sub
shll
and
shll
shlb
cmp
push
push
jp
lcall
cmc
ss
aad
cmp
pop
dec
push
pushf
mov
inc
call
mov
push
sbb
mov
jns
fsub
mov
ja
sub
adc
sub
call
inc
sub
outsl
and
xchg
neg
push
aaa
inc
or
addr16
push
lock
dec
sub
adc
outsb
sbb
cld
out
pop
add
insb
xchg
imul
mov
adc
adc
fs
test
imul
xor
or
dec
sbb
mov
or
adc
fcomps
or
hlt
addb
out
test
aad
test
adc
add
jbe
dec
adc
cmpsl
movsb
pop
pop
ljmp
lcall
ficomps
fcoms
push
and
adc
mov
loopne
fidivs
push
sbb
dec
gs
clc
movsl
stos
inc
arpl
mov
xchg
push
inc
jge
push
push
pop
add
cli
int
adc
fcomps
push
mov
rorb
xchg
fidivrs
and
rolb
in
mov
cmpsb
fisttpll
xchg
mov
outsb
mov
movsb
std
add
or
in
subb
loop
xor
imul
testb
push
pop
jbe
push
mov
imul
and
xor
jle
mov
jmp
push
or
xchg
or
subb
icebp
xor
mov
xlat
dec
jne
fildll
add
fbstp
xchg
jmp
incb
add
adc
jns
adcl
lock
int
inc
inc
push
movsb
adc
jno
fidivl
cli
sub
add
jno
loop
sub
fwait
mov
push
push
lret
inc
sub
jns
pushf
aaa
ljmp
aas
cld
fistpll
imul
mov
fiaddl
fsubrs
lret
mov
jecxz
fstpt
mov
xchg
jbe
fcoml
popa
sbb
xchg
jmp
inc
loop
out
mov
mov
xchg
adc
movsb
test
or
jg
movsl
in
sbb
jo
add
add
movsl
jbe
stos
out
loopne
mov
pop
mov
jmp
jge
lock
cs
adc
mov
lahf
cmp
add
xchg
stc
jmp
insl
sub
inc
test
sub
push
sbb
push
mov
fildll
test
inc
div
jne
jnp
xlat
wbinvd
in
mov
or
shll
gs
loop
xchg
aam
sub
inc
icebp
mov
flds
in
pop
or
mov
cmp
shlb
fstl
cs
or
mov
mov
mov
cmp
jmp
mov
inc
fbld
push
jne
fldt
pusha
cmp
js
pop
adc
sub
jge
aas
and
mov
and
gs
adc
fucom
jae
in
aam
push
call
mov
scas
mov
ret
int3
jb
add
pop
nop
jb
sahf
stos
mov
pop
loope
or
or
lods
jno
out
adc
out
daa
shrb
and
xor
adc
aam
mov
pushl
cmc
xchg
insl
lret
xor
ds
add
mov
repnz
adc
sub
xchg
jmp
mov
call
jmp
dec
loope
mov
lcall
xor
and
shll
pop
fistl
cmp
dec
xchg
xchg
decb
and
mov
fisttps
lock
repnz
and
sbb
push
or
scas
nop
addr16
shr
clc
ljmp
mov
and
frstor
mov
jbe
clc
xchg
add
lods
rol
popa
mov
pop
xchg
push
adc
test
dec
mov
pop
dec
pop
stos
pop
mov
push
insl
jmp
test
lock
negl
xchg
fdivs
xlat
jbe
cmpb
stc
pop
jle
mov
cs
adc
jmp
cmc
mov
and
or
test
nop
jle
xor
add
or
jmp
push
fwait
in
sbb
das
or
imul
inc
std
das
jge
test
rdpmc
inc
jmp
fadds
sub
sahf
daa
out
pop
add
das
cmpsl
enter
cmpl
stos
enter
xchg
das
jl
adc
aas
or
add
mov
mov
push
stc
lock
pop
mov
fs
testb
dec
mov
sbb
pop
movsb
repnz
jne
in
push
fldt
lahf
adc
add
mov
loop
or
clc
adc
fimull
in
mov
sbb
addl
dec
jo
or
and
mov
push
xor
shlb
jle
cmp
and
dec
aaa
ret
lea
push
push
ja
in
rcl
les
mov
movb
inc
insl
divb
add
cmp
or
pop
mov
push
movsl
fwait
loop
and
xor
ja
js
jecxz
cwtl
mov
jmp
in
sub
push
cmp
ror
pop
das
inc
decl
sub
jl
cmpsb
shr
adc
mov
shlb
ret
repz
and
or
fistpll
jmp
adc
in
stos
js
dec
jg
xor
daa
jno
js
pusha
adc
test
test
incl
shrb
add
mull
fs
push
cmc
jae
notl
add
clc
sbb
adc
repz
sub
cmp
incl
pop
adc
gs
push
cwtl
xchg
cmp
pop
ffree
mov
out
pusha
pop
movsb
das
pop
lea
and
cs
inc
jl
test
pop
add
jbe
mov
pop
or
adc
call
cmp
adc
mov
mov
mov
in
jmp
cmp
lahf
jge
pusha
cltd
popa
push
lods
test
addb
mov
test
lods
fisttps
xor
dec
or
cli
mov
add
dec
icebp
leave
inc
mov
iret
cmp
inc
insl
pop
aaa
jbe
and
aam
mov
daa
lea
mov
jo
lret
or
add
fisttps
fincstp
test
outsl
adc
mov
mov
pop
stc
into
mov
lods
jne
xor
popa
rolb
test
cmp
dec
mov
cmpsb
call
push
adc
mov
shrl
es
dec
inc
cli
lea
mov
push
inc
and
sbb
inc
fnsave
scas
sub
aaa
pop
clc
fiadds
sub
call
es
cmp
loope
sbb
xor
repz
ljmp
shlb
in
sub
int3
gs
push
inc
jno
fwait
stos
std
or
pop
xor
cmc
mov
sub
jg
cmpsl
cmpsl
adc
rcll
xchg
je
subb
aad
stc
xor
sahf
js
divb
dec
dec
mov
push
xchg
pop
pop
je
fisttpll
fdivs
push
and
loope
insl
hlt
mov
jb
pop
xchg
sbbl
std
outsl
jecxz
mov
fs
mov
mov
cltd
mov
ret
add
movsl
jae
inc
add
test
gs
push
movsl
loope
hlt
push
push
jmp
std
lcall
daa
insl
xor
and
xchg
inc
lret
or
std
xchg
lods
inc
popa
jmp
xchg
nop
sub
ret
ja
lret
pop
jo
sbb
cmp
sub
test
js
cmp
xchg
cli
ret
pop
sahf
push
insb
imul
xor
mov
sbb
pop
push
outsl
xor
inc
lods
fwait
test
les
dec
sti
and
cmp
in
sbb
mov
sbb
mov
and
pop
sbb
aas
sub
fiaddl
cmp
clc
inc
sti
mov
adc
movsb
adc
pop
push
push
call
mov
push
test
shrl
ret
loopne
push
idivl
xchg
data16
push
inc
lea
pop
jo
sub
addb
lds
pop
adc
mov
jno
mov
loopne
aam
mov
jg
imul
xor
rorl
jp
lock
xlat
push
outsl
in
pop
pop
fs
dec
pop
mov
and
inc
aad
pop
or
cli
push
cmpsl
sub
push
add
inc
mov
push
cltd
and
daa
lods
jbe
hlt
lcall
dec
sahf
and
sbb
or
push
or
fisubrl
aaa
aaa
clc
add
add
mulb
pop
xchg
loopne
test
dec
bound
push
mov
or
inc
pop
and
lea
or
inc
shll
dec
dec
mov
add
mov
das
mov
inc
lret
in
jb
push
dec
mov
imul
mov
add
mov
sbb
sub
into
sub
aad
cmp
aad
xchg
lret
hlt
in
adc
sarb
jp
sbb
mov
fs
cmpsl
mov
lock
inc
add
mov
test
test
mov
mov
ss
inc
shrb
lods
stos
ja
add
xchg
adc
adcb
test
push
aad
rorb
pusha
adc
jo
insl
mov
imul
cmp
in
out
dec
icebp
orb
bound
data16
add
outsl
aas
inc
shlb
iret
mov
xchg
rolb
int
shrb
cmp
in
outsl
jg
scas
adc
cmpsl
daa
bound
sbb
dec
xor
sub
sbb
mov
mov
movsl
xor
mov
or
push
jb
jmp
adc
or
sub
mov
addb
sti
push
leave
stos
jp
xor
inc
lret
bound
push
cmp
aam
insb
and
jecxz
adc
push
adc
insb
lods
insl
dec
cmp
sub
or
xchg
and
sub
add
inc
dec
pop
rorb
sub
inc
xor
adc
stos
and
call
enter
xchg
inc
pop
sbb
in
inc
xlat
xchg
pusha
cld
sbb
adc
inc
shlb
out
pmaxsw
fcmovu
fdivrl
inc
jo
push
mov
adc
imul
push
icebp
xor
and
cmp
and
xchg
test
add
adc
jmp
adc
add
add
inc
loopne
rclb
adc
cwtl
loope
das
jno
bound
sub
pop
rcll
fbstp
loope
leave
sbb
loop
add
loope
and
pop
mov
cmp
bound
into
aas
adc
or
add
aaa
pop
add
xor
adc
cld
inc
push
add
cmc
push
sbbl
in
insl
testl
pop
mov
xor
or
outsb
fisttpll
es
mov
movb
xchg
add
cmp
jae
lret
std
outsl
cmc
mov
xor
cltd
push
test
mov
jno
jg
aas
push
dec
in
mov
in
dec
mov
stos
jbe
iret
repz
cmpl
xchg
fsubr
mov
int3
jg
aam
mov
cmpsl
sub
sub
inc
lods
imul
dec
std
adc
addr16
dec
lds
in
hlt
insl
loopne
outsl
loop
push
lret
jnp
rolb
cmp
nop
insl
push
sub
lea
arpl
call
or
cmp
pusha
mov
mov
jmp
out
sub
je
sti
dec
dec
shl
clc
add
jecxz
fisubs
xchg
push
or
rcrl
xchg
dec
sbb
mov
xchg
iret
push
insb
xchg
loope
or
in
divb
mov
mov
fwait
add
inc
daa
aaa
out
dec
mov
sbb
push
mov
test
mov
sti
add
clc
jg
mov
inc
into
adc
pop
mov
inc
cmpb
add
test
xor
insl
and
mov
andl
sahf
add
popf
ljmp
cmp
cmp
inc
dec
xchg
ret
jns
push
xchg
loopne
mov
test
or
enter
add
pushf
mov
mov
pop
push
xchg
fdivp
mov
pop
jb
dec
ret
in
call
mov
sbb
sbb
jae
pop
push
mov
xor
subl
mov
movsb
ja
cld
aaa
out
arpl
push
mov
subb
push
jbe
mov
pop
xchg
ljmp
dec
in
adc
fucomi
lods
movsb
cltd
fcoml
leave
dec
or
sub
div
mov
dec
inc
inc
jp
jmp
pop
push
dec
fdivr
nop
lock
push
lahf
shr
mov
lds
pop
adc
in
and
jle
pop
mov
loopne
addb
adc
out
push
push
in
leave
push
mov
dec
jo
mov
stc
jg
sbb
push
test
popf
test
rcrb
or
int3
test
cli
ret
mov
pop
jae
add
stc
pop
xor
mov
rolb
test
inc
add
jl
call
lock
ret
sbb
cld
inc
mov
lods
fcom
cmpsl
popa
mov
cwtl
std
push
lock
call
sub
ljmp
cmpsb
adc
nop
sub
push
jne
sub
sbb
enter
mov
push
cmpsb
mov
mov
push
jnp
and
out
mov
out
fnstsw
aam
negl
push
enter
add
adc
or
sbb
jo
fwait
mov
sbb
sbb
loopne
aad
inc
cmpsb
imul
bound
pop
sub
in
fcompl
addr16
in
or
cmc
xchg
add
shl
dec
ret
int
loope
adc
loope
add
add
mov
push
imul
sub
or
inc
add
xor
scas
mov
into
pop
adc
pop
imul
dec
mov
mov
stos
daa
mov
adc
add
inc
iret
ret
xchg
movsb
sub
add
mov
sbb
jnp
mov
jbe
jl
add
into
aam
out
sbbb
jecxz
cli
cmp
push
and
add
movsl
mov
cwtl
push
xor
icebp
inc
es
je
jp
sbb
sbb
mov
sub
mov
repz
dec
inc
push
inc
sbb
sbb
bnd
daa
dec
push
call
sbb
enter
xor
push
add
ja
xchg
es
adc
add
rcrl
scas
add
int3
rolb
xorl
sub
and
mov
inc
orl
addb
scas
loop
stos
popf
or
sahf
repz
and
cmp
cmp
fiaddl
pop
adc
fisttpll
hlt
jle
in
sbb
nop
stos
mov
xor
push
push
jp
cltd
loope
adcb
push
mov
sbb
cwtl
inc
xchg
or
adc
or
xchg
dec
push
pop
push
add
mov
inc
pop
and
mov
lret
ret
and
dec
pop
and
clc
push
or
jae
inc
jbe
imul
xor
addr16
fs
sarl
movb
and
int3
mov
sub
cs
xor
xor
cmpsb
lcall
cmp
and
loope
clc
dec
andb
xor
jnp
jl
pop
mov
add
shlb
dec
mov
sbb
sub
push
sbb
fstpt
repz
xor
pop
add
jp
dec
loope
rorb
adc
adc
repz
xor
jmp
mov
in
xchg
cmp
adc
or
lds
leave
repnz
ss
jge
daa
and
decb
das
fadds
mov
add
sub
rcll
pop
roll
cltd
sub
test
fadd
cmp
hlt
sub
scas
imulb
das
xchg
add
fcoml
add
adc
fiadds
loopne
call
jge
cmp
lea
mov
hlt
sub
sti
aam
rcpps
in
fiadds
and
out
cmp
clc
orb
mov
and
or
adc
sbb
dec
add
stc
mov
push
adc
xchg
je
fldl
shlb
or
or
inc
popa
xor
or
and
das
and
push
push
push
or
aas
rclb
xorl
or
pop
pop
fdivrp
push
adcb
movsb
imul
std
adc
push
adc
push
es
or
imul
sub
cmpsl
add
jle
mov
adc
xchg
and
cs
cmc
lcall
add
mov
dec
cs
test
insb
icebp
pop
adc
adc
cli
scas
stos
lret
and
fisttpll
std
pop
mov
dec
jge
pop
cmp
add
sub
insl
xchg
cmpsb
ss
dec
and
pop
cmp
push
lret
incl
push
xor
inc
push
scas
js
add
add
scas
add
adc
jbe
add
lds
mov
mov
loopne
mov
mov
cmpsb
pop
sbb
sub
push
pop
fcompl
cmp
loop
xor
jns
mov
xor
sub
add
add
add
aas
jnp
outsb
or
imul
daa
add
or
fsubl
push
jo
loopne
mov
call
call
fiaddl
mov
push
push
adc
out
mov
test
sub
in
xchg
cmpsb
add
mov
mov
mov
sar
ja
pusha
xchg
mov
jle
aam
outsl
mov
fidivs
ljmp
and
mov
popa
mov
std
decl
pop
test
add
arpl
lret
ret
and
js
out
or
js
outsb
push
ljmp
mov
ret
fcompl
mov
and
call
xchg
lea
mov
rcll
idiv
incl
inc
sub
add
out
add
lcall
ret
lcall
outsl
or
sbb
mov
hlt
out
jg
sub
mov
hlt
add
xor
pushf
hlt
inc
jg
fwait
lock
jmp
in
and
insb
imul
mov
push
decl
stc
int3
xchg
xor
hlt
xchg
pushf
mov
push
inc
push
pop
and
and
xor
mov
loope
lahf
jae
lock
stos
das
cmp
push
xchg
ss
decl
mov
and
sbb
sbbb
fidivl
rorb
rcrb
add
adc
add
or
push
jge
or
or
lock
jp
ja
repnz
mov
inc
pushf
adc
je
pushf
mov
je
add
xchg
mov
pusha
sub
dec
fwait
int3
push
je
add
sub
mov
fistpll
push
jl
shr
mov
negl
inc
insl
sbb
add
mov
mov
push
mov
loopne
jno
sbb
add
test
clc
mov
cmp
sub
mov
pop
int3
loopne
adc
add
inc
imul
or
je
lods
jmp
mov
inc
outsb
sbb
fadds
jmp
cmp
int3
aaa
xchg
clc
and
sub
fdivrs
inc
popf
adc
mov
sbb
or
into
mov
call
mov
jae
and
out
adcl
mov
push
dec
mov
cmp
or
iret
xchg
aas
dec
mov
mov
pop
or
cs
sbb
lock
out
pop
inc
adc
adc
imul
inc
enter
lcall
loopne
cmp
add
adc
mov
hlt
jg
clc
dec
cwtl
addr16
xchg
adc
addl
xor
icebp
lock
lret
jg
adc
je
movsb
jno
cmp
push
aas
lea
add
mov
dec
cltd
sub
repz
pop
cli
pop
std
jg
inc
mov
push
pushf
das
dec
or
pop
and
add
mov
cld
adc
rorb
cs
fistpll
mov
and
or
cwtl
imul
popa
inc
pop
push
jae
notl
rcrl
lcall
das
leave
data16
and
sbb
jge
cmp
out
add
cltd
scas
std
xor
call
add
fimuls
jecxz
push
lret
lea
adc
loop
pop
and
addr16
cmp
pop
add
aad
mov
lock
sub
cld
or
push
repz
pop
inc
push
lcall
inc
dec
push
inc
xorl
sub
or
test
mov
test
xchg
add
xor
test
clc
rclb
push
cmp
xchg
jge
sar
push
lods
mov
mov
and
cmp
add
pop
lea
clc
jg
push
mov
fildl
jbe
dec
xchg
push
nop
dec
insb
andb
popa
std
in
fbstp
and
pop
and
pop
mov
insl
shrl
fmull
mov
lcall
iret
std
push
inc
xchg
mov
adc
cmc
xchg
mov
xchg
clc
dec
pop
sub
and
lcall
clc
stos
mov
cmpsl
fwait
inc
adc
jmp
cmp
push
pusha
xchg
and
popf
lea
add
inc
sub
adc
repnz
subb
push
fdivrs
nop
push
fcomp
sbb
sti
mov
js
add
push
je
loope
and
jmp
outsl
add
aaa
add
sbb
jne
lret
mov
pop
scas
pop
dec
mov
repz
pop
mov
xor
xchg
mov
pop
adc
jae
loop
xor
in
ret
int3
femms
adc
incl
jg
ljmp
pusha
add
mov
adc
push
test
insb
mov
fsubr
jmp
loop
imul
push
jne
adc
sarb
add
std
inc
movsl
dec
cmc
adc
ds
push
push
inc
inc
jne
add
loopne
add
hlt
addr16
pop
push
aad
mov
cmp
sub
pop
mov
out
sbb
daa
nop
imul
jo
test
sbb
mov
cli
rolb
jg
inc
test
sbb
sbb
xorb
push
loop
mov
mov
and
pop
icebp
add
es
in
out
hlt
stc
xor
mov
loopne
push
mov
pop
xchg
jmp
jl
push
jnp
aaa
faddp
lahf
inc
fwait
mov
incl
mov
movsb
sbb
mov
inc
icebp
xchg
rolb
sub
adc
add
jp
adc
sarl
inc
fmuls
inc
in
lret
add
fimuls
movsb
push
push
pop
cs
test
pop
mov
xchg
push
test
xchg
mov
add
add
push
outsl
lock
and
inc
fsubrl
add
mov
pop
pop
lret
cmp
xchg
mov
jmp
mov
call
or
aaa
mov
push
and
or
pop
insb
adc
add
xchg
sub
mov
pushf
jae
fsubs
jnp
cli
cld
lahf
adcl
fs
test
test
pop
mov
sbb
movsl
nop
pop
fistpll
mov
out
add
mov
in
inc
addr16
gs
inc
ss
jne
fdivrp
in
lret
adc
out
jbe
inc
sti
jmp
dec
sbb
add
pop
repz
sub
in
data16
mov
lea
add
cli
das
mov
call
rcrl
cli
lods
or
inc
adc
fbld
or
push
mov
or
arpl
shll
cmp
cmpsb
xor
push
mov
add
dec
sub
dec
jge
adc
adcb
mov
inc
add
or
clc
push
jl
movsl
inc
orb
loopnew
cld
xchg
pusha
dec
push
or
loope
loopne
data16
xchg
push
int3
inc
test
insl
fbld
shll
sub
cs
adc
push
pop
pop
xor
pop
jbe
sbb
mov
mov
xchg
ret
jmp
mov
and
orl
cwtl
cld
int
xor
clc
add
lock
aad
js
fnstsw
fcompl
or
jbe
xchg
and
dec
jge
xlat
mov
sbb
xor
cmpsb
inc
nop
jne
scas
jecxz
mov
jno
jo,pn
jns
pushf
add
lret
add
iret
mov
insl
or
testb
fistps
aaa
stos
hlt
lcall
daa
lahf
iret
push
jle
mov
dec
dec
jnp
jne
ret
mov
xorb
cmpsb
loopne
add
outsl
xor
mov
fisttpll
call
lcall
aaa
incb
add
fmul
adc
mov
mov
jle
push
scas
sub
shlb
ja,pt
ljmp
sbb
dec
les
push
addr16
and
sbbb
adc
leave
scas
pop
inc
addr16
and
jo
cmp
insl
sahf
in
push
mov
or
ds
fistps
xcrypt-ctr
cmpsl
pop
jge
inc
mov
xchg
test
jb
shlb
lods
dec
clc
sub
mov
popa
lea
mov
or
add
fistpl
in
popf
pop
dec
adc
dec
or
bound
sbb
fsubs
xchg
movsb
push
ja
setno
daa
pushf
in
loope
cld
outsb
push
std
push
shlb
push
movsb
inc
jecxz
leave
xor
call
mov
imul
cltd
pop
adc
cmp
or
mov
jle
aaa
pop
mov
xchg
frstor
add
lock
std
dec
push
shrb
sarl
xor
mov
adc
lds
sub
inc
decb
jmp
sbb
gs
cmp
sub
mov
in
les
insb
lahf
pop
sub
divb
push
lods
loopne
out
sub
xchg
ret
add
xor
xchg
mov
xchg
loope
ss
inc
in
jmp
ds
push
adcl
inc
cmp
mov
adc
mov
stos
icebp
add
das
addb
in
add
lea
mov
xor
imul
loope
sbb
jb
pop
sbb
cmp
lods
popa
clc
jg
jns
mov
addr16
mov
sbb
sbbl
lods
sahf
jb
fs
icebp
ja
call
mov
outsl
mov
mov
pushf
clc
ss
xor
scas
bound
pop
sub
outsl
pop
mov
cmp
mov
inc
stos
cld
cli
and
push
sub
push
cltd
out
or
aas
lea
ss
ds
pop
nop
cs
pop
clc
push
jp
mov
and
or
cmpsl
adc
mov
mov
or
cmpsb
cmpsb
out
mov
xor
push
sbb
loope
pop
inc
mov
mov
mov
mov
or
in
jae
lds
mov
mov
push
sub
dec
jb
mov
out
xor
pop
sbb
mov
inc
test
mov
mov
pop
rclb
add
imul
xor
lahf
add
add
fbstp
add
jne
pop
adc
pop
mov
jbe
enter
mov
daa
cmp
gs
mov
incb
ja
leave
xor
out
and
cmpb
adc
shl
and
xchg
xor
pop
lret
in
mov
jmp
movsl
mov
inc
mov
mov
sbbl
lret
mov
in
or
add
dec
adc
in
mov
jle
jle
iret
mov
out
gs
mov
pop
aad
xlat
push
rcll
ljmp
test
aaa
inc
or
ss
test
into
xchg
test
int
in
ljmp
icebp
rolb
and
mov
fwait
xor
rorb
sub
es
inc
inc
push
adc
rcll
pop
xlat
stos
mov
sbb
leave
lret
into
pop
push
clc
pop
jge
jp
and
mov
call
shlb
cmc
dec
outsb
dec
mov
loopne
imul
test
stc
lock
lock
es
inc
rorl
add
call
xchg
sub
mov
loopne
jg
or
int3
jmp
mov
cld
inc
sti
cmpsl
outsl
jo
pushl
xor
xchg
filds
std
or
add
add
cwtl
dec
adc
and
ja
inc
fmull
xlat
mov
icebp
fs
mov
and
cmpsl
add
push
pop
xchg
int3
push
lods
or
daa
stos
cmc
dec
mov
addl
xchg
jbe
push
and
fstpl
movsl
pop
andb
aas
cmc
incl
add
push
cmp
loope
push
aas
add
xchg
addb
pop
mov
inc
jmp
push
and
push
mov
ss
pop
push
jne
call
sub
je
cwtl
mov
mov
les
adc
mov
sbb
outsl
aad
test
in
push
pop
clc
rorb
repnz
adcl
add
add
test
iret
and
or
adc
lcall
pusha
sub
pop
cld
jg
jo
cltd
cs
adc
jmp
jne
sar
xchg
outsl
mov
out
jns
shr
mov
orb
jl
jo
lods
mov
adc
icebp
in
mov
add
mov
inc
fidivrl
mov
outsl
adc
movlps
out
ljmp
daa
and
in
hlt
adc
mov
and
xor
out
addl
sti
jecxz
data16
mov
std
push
std
add
lock
xchg
and
or
dec
adc
push
jns
enter
cmpsl
pop
fistpll
dec
pop
sbb
test
inc
loop
ljmp
cwtl
pushf
mov
arpl
mov
fidivl
insb
fildl
scas
push
and
dec
addl
mov
rcrl
js
je
jns
pop
inc
sbb
inc
in
add
add
adc
jbe
xchg
aam
push
lock
add
jb
sti
ror
cmp
inc
pop
pop
movsl
shll
add
jl
minps
je
cmp
cmpsl
cli
test
mov
adc
roll
lds
or
repnz
orl
fcoml
test
xchg
out
adc
push
mov
push
testb
in
sti
mov
loopne
adc
or
fisttpl
xor
mov
sub
roll
sbb
in
or
jl
add
sbb
decb
xor
ljmp
lcall
sub
test
jle
pop
int3
add
int3
add
add
jnp
push
cmp
jno
or
pop
lds
insl
and
adc
aam
stc
je
mov
mov
icebp
daa
add
xor
out
das
fldt
pop
xor
outsl
les
add
and
inc
int3
sarl
fists
nop
mov
daa
fistpl
sahf
or
fdiv
les
les
sub
or
mov
mov
fsubr
add
xlat
int3
fs
icebp
cmpsl
cwtl
test
or
sub
inc
and
xor
add
xchg
sub
or
inc
int3
and
popf
or
into
call
fwait
mov
lock
cs
or
data16
jae
dec
pusha
outsb
bound
lret
stos
pusha
mov
and
gs
adc
int3
iret
add
fldcw
int3
rcrb
jge
not
orl
add
sbb
add
repz
scas
aam
xor
xor
enter
in
xorb
les
push
or
or
lock
cmp
add
jno
data16
mov
fisubs
ret
roll
test
jno
pusha
lods
jns
std
mov
push
je
inc
inc
inc
shrb
ret
sbb
ljmp
push
shlb
or
dec
mov
call
stos
scas
xchg
xchg
push
ret
sbb
mov
inc
sub
add
or
fstpt
js
sbb
jg
add
xor
adc
adc
jg
pop
inc
mov
add
stc
sub
fistl
xchg
nop
or
rcrl
sbbl
inc
call
adc
mov
adc
adc
xor
test
mov
adc
push
pop
sbb
ljmp
pop
lahf
mov
cmpb
lock
inc
xchg
jmp
pop
or
loope
pop
fadds
xor
mov
bound
jae
cltd
fisubl
scas
mov
xchg
scas
test
adc
sbb
insl
xchg
sub
xchg
dec
rcll
jg
xchg
or
lcall
lea
rclb
clc
inc
push
push
inc
push
dec
push
jl
ja
push
js
pop
adc
xlat
or
and
add
push
or
std
insl
fists
lods
xchg
sub
sub
pop
enter
orl
mov
inc
lcall
jp,pt
or
insb
add
jmp
int3
into
jg
jo
push
sbb
push
sub
aaa
inc
jp
push
dec
cmp
cmp
stos
dec
pop
in
mov
or
sbbb
push
sub
pop
mov
lods
cmp
shl
inc
rolb
or
clc
jg
or
adc
jns
inc
jbe
lock
or
aam
pop
push
sub
lock
orl
xchg
push
jno
sbb
add
jne
add
xor
fisubrs
arpl
inc
loope
xchg
jl
mov
adc
jp
and
or
dec
or
call
incl
in
icebp
popa
mov
and
adc
lahf
mov
movsb
pushf
pop
ret
dec
lea
push
testl
adc
adc
insl
mov
aad
mov
incl
push
xchg
cmpsb
mov
inc
inc
dec
cld
jno
jp
les
fbstp
mov
orl
loop
addb
fadds
xor
lret
lods
enter
add
mov
sub
rorl
jg
push
and
push
stc
repz
pop
mov
add
jg
faddl
xor
push
nop
in
cld
out
in
stc
clc
dec
mov
push
fistl
test
jg
lock
mov
rol
adc
mov
xlat
lods
pop
rcl
pusha
loop
xor
sbb
jno
xor
movl
les
fbld
mov
xchg
fcomi
or
das
fsub
movsb
ret
or
sbb
push
pop
int3
mov
ljmp
int
insl
rcr
pop
and
data16
shr
test
mov
in
daa
xchg
ja
cld
jmp
iret
pop
lock
add
push
xor
stc
jecxz
push
sbb
pop
adc
shlb
cmp
mov
in
mov
dec
es
fabs
aad
jmp
and
mov
mov
pushf
pop
and
insl
cld
pop
mov
add
mov
gs
movsl
movsl
push
pop
addr16
cmp
xchg
out
push
mov
sub
repnz
jbe
fsubrp
loop
xor
cmp
pop
outsb
es
pop
adc
mov
sub
fnstenv
enter
pop
pop
lock
std
sub
adc
stos
lahf
push
mov
mov
sub
mov
call
repnz
mov
push
pop
shrb
jae
out
es
pushl
mov
xlat
xchg
jmp
outsb
mov
mov
rcl
xor
in
push
cld
pop
fisttps
inc
rcrb
sbbb
or
js
pop
loop
mov
mov
pop
xchg
inc
ror
std
cmpsl
add
push
xor
add
sub
ja
js
outsb
adc
dec
mov
sbb
push
pop
js
cmp
in
movsb
push
ret
mov
pop
js
jbe
xlat
add
addb
mov
dec
insl
mov
cltd
pop
inc
scas
fisttps
xchg
in
addb
nop
pop
mov
mov
outsl
xor
add
fnstenv
add
sbb
pushf
js
inc
mov
jne
std
jge
mov
push
les
sub
xor
sbb
inc
pop
outsl
jge
mov
insl
test
mov
dec
pop
dec
andl
insl
notl
test
inc
add
sbb
call
rcrb
cmp
decl
pop
lret
aam
mov
decl
push
push
mov
or
adc
mov
mov
orl
inc
nop
push
xorl
outsl
js
dec
ljmp
adc
fcmovb
stos
loope
aaa
lods
xchg
or
sub
clgi
call
arpl
lret
inc
jecxz
dec
mov
push
xor
mov
daa
fbstp
push
cs
rol
and
cwtl
rolb
xor
lahf
and
bsf
insb
mulps
das
andb
fstpl
pop
xchg
cltd
lret
bound
inc
cwtl
adc
lock
jb
jae
movsb
and
inc
inc
mov
cmp
push
xchg
inc
mov
jnp
cwtl
sbb
push
cli
ret
dec
outsl
insb
mov
cwtl
push
mov
cmp
out
loope
cwtl
and
xor
test
cs
fcomi
dec
hlt
cld
movsb
fcomp
push
jne
mov
cli
sub
dec
stc
fsubrl
sub
orl
xchg
mov
adc
mov
push
outsl
mov
mov
or
lret
jmp
into
dec
push
push
inc
xchg
jo
pop
sti
mov
popf
pop
push
shl
xchg
loopne
pop
out
andl
dec
movsb
dec
je
and
je
inc
sbb
mov
pop
fstpl
cmpsl
mov
in
test
es
mov
or
pop
and
sub
jl
lea
sahf
rcr
bound
ret
imul
and
inc
xor
inc
pop
int
adc
add
or
addr16
rcl
enter
out
into
call
push
adc
fistps
js
dec
std
add
pop
push
ret
sbb
cld
test
gs
mov
add
or
mov
mov
mov
ljmp
mov
jecxz
flds
leave
sbb
add
outsl
adcb
and
arpl
clc
or
enter
cltd
cmpb
enter
sub
inc
rolb
pusha
fimuls
mov
mov
sub
out
dec
andb
movsb
neg
or
lds
and
push
mov
push
jmp
xor
dec
insb
cmpb
orb
sbb
inc
ss
in
imul
ret
vxorps
jp
sbb
addr16
in
or
lahf
xor
sbb
jbe
fdiv
and
sbb
inc
lods
lcall
dec
push
add
adc
hlt
pop
and
sbbb
movsl
hlt
push
scas
add
or
pop
push
loopne
xor
aam
push
inc
out
insl
lds
or
int3
and
inc
int
ret
xor
enter
inc
call
sub
mov
xor
cmp
mov
adc
mov
sti
cmpl
je
jg
mov
push
xchg
cmp
or
cmp
cli
push
or
movsl
insb
mov
aaa
rcrl
pop
jnp
xchg
jo
mov
mov
das
shlb
in
repnz
inc
add
outsl
enter
pop
pop
ror
xor
and
jmp
inc
ret
addb
fiadds
adc
stos
inc
idivb
ljmp
leave
or
out
mov
subl
jecxz
popa
dec
push
and
mov
imul
mov
jnp
push
into
mov
cs
out
dec
dec
inc
xchg
ljmp
mov
sbb
mov
mov
sub
jge
jg
in
outsl
cmp
mov
push
cmp
jbe
ss
call
loopne
push
add
mov
dec
rcrl
jae
daa
inc
into
dec
jmp
test
data16
lods
sbbl
jno
cmp
pusha
fs
inc
or
dec
inc
sub
dec
dec
pop
mov
sub
imul
hlt
xchg
mov
pushf
stos
scas
pop
stc
and
sub
orl
sbb
into
mov
mov
mov
dec
and
lret
mov
jg
std
inc
jge
push
jg
cmp
dec
fisubrs
sarb
push
or
loopne
stos
lods
xlat
stos
mov
fs
inc
push
push
pop
test
sub
xchg
mov
or
mov
push
dec
lock
je
or
loope
add
das
lock
xor
or
ret
sbbl
outsl
mov
lock
addl
sub
popa
ss
insl
mov
inc
mov
rcr
mov
das
insb
test
mov
iret
sti
repnz
jno
lds
stos
test
push
add
rcrb
hlt
cmp
lret
filds
xchg
sahf
cmp
push
test
cmp
fidivrl
dec
inc
inc
enter
push
jnp
int
popf
cwtl
jne
jg
rcrb
aas
dec
push
pop
and
in
xchg
shll
pusha
adc
mov
in
or
out
xchg
subb
jo
lcall
push
cmp
inc
sbb
add
xchg
test
mov
gs
fldt
sbb
pop
fdivrl
stc
cmp
test
and
ss
xchg
cli
jmp
mov
mov
enter
dec
mov
push
push
into
imul
and
push
push
lods
jae
fnstenv
sbbb
push
dec
imul
xor
jns
shlb
icebp
shl
loopne
mov
das
xchg
or
jecxz
fwait
jnp
adc
xchg
jle
mov
adc
pushf
jno
jg
mov
es
out
xor
mov
sbb
push
or
sub
xor
add
adc
pusha
sbb
clc
add
jle
fstpl
add
pop
pop
fcomi
sbb
lahf
mul
roll
inc
jmp
loop
js
jae
test
add
mov
daa
cmp
cmpsb
mov
sti
and
addb
jae
cmpsl
test
sbb
pusha
loopne
mov
mov
push
es
loop
ret
adc
enter
outsl
outsl
hlt
mov
popf
lods
add
mov
sbb
imul
add
cmpb
daa
mov
int
mov
fwait
pop
xor
js
hlt
out
dec
and
outsb
pop
rcll
ss
jp
rorl
lea
test
add
sub
adc
push
cmp
adc
jb
fbstp
add
test
lahf
cmp
sub
ret
lret
ss
jecxz
hlt
aas
cwtl
push
sub
xchg
sub
lcall
js
add
lock
adc
inc
ja
repnz
sub
pop
pop
pop
pushf
mov
add
clc
shlb
mov
adc
or
mov
sbb
or
fcom
push
sub
push
pop
pop
scas
mov
rol
test
mov
mov
test
lret
movsb
inc
pop
push
std
dec
insl
mov
xchg
out
negb
ljmp
and
mov
lds
inc
addr16
loope
fistpll
dec
mov
mov
lock
pop
xor
mov
mov
rolb
and
jne
pusha
shl
inc
mov
mov
inc
fisttpl
mov
pop
mov
les
cmpsb
pusha
add
and
add
push
push
sbb
adc
inc
sbb
sbb
jae
icebp
push
xor
addr16
mov
mov
mov
lret
and
add
cmp
pop
lret
sbb
mov
or
xor
std
scas
mov
push
scas
out
inc
dec
xchg
scas
add
shl
xchg
push
xlat
mov
mov
push
adc
xor
js
mov
push
mov
push
jbe
jne
jp
fstp
outsb
mov
shlb
popf
popf
enter
or
cwtl
adc
xchg
popa
jecxz
jo
lahf
xchg
fdivs
sbb
mov
push
pop
xor
fimuls
stos
sub
lea
pop
je
pop
jae
call
dec
adc
inc
fnstcw
inc
sub
notb
aaa
pusha
mov
xor
or
and
inc
sub
notb
mov
lock
ljmp
adc
loopne
pusha
mov
ljmp
xchg
stos
inc
ja
pop
add
push
js
jecxz
mov
or
pop
dec
pop
fwait
mov
dec
push
jne
xor
repz
inc
adc
xchg
fsubrs
pop
mov
ret
pop
jb
jge
lods
jae
xchg
cltd
xchg
out
jnp
dec
popa
or
or
lret
jge
repnz
push
movb
xchg
jae
bswap
sbb
sbb
ljmp
push
sub
add
mov
and
jo
fucomp
stc
pop
sahf
call
int3
lcall
pop
divl
out
leave
cld
arpl
lret
notb
jp
cwtl
pushf
cmp
add
ds
mov
mov
dec
jb,pn
and
add
mov
notb
adc
pop
mov
shll
ds
rclb
push
mov
mov
adc
mov
in
mov
sub
cmp
out
sbb
jmp
mov
data16
jl
mov
in
xchg
cmp
fbstp
filds
xor
add
jge
popa
clc
sub
insl
aaa
scas
repz
adc
fisttps
sbb
orb
mov
not
mov
pop
cs
mov
add
push
or
roll
sub
jp
das
jle
or
push
inc
ret
in
xchg
xor
ret
add
sub
mov
jne
bnd
pop
out
out
mov
push
pop
inc
ret
fistpl
es
push
sbb
pop
pop
mov
inc
out
movsb
pop
sub
bound
push
cli
in
cmpsb
movsl
cmpsl
inc
aad
jge
xchg
jecxz
dec
lea
lret
and
imul
dec
jae
sbb
adc
sbb
xchg
or
lds
dec
pop
and
insl
adc
sbb
mov
pop
adc
jecxz
aam
push
mov
in
imul
xor
stos
cmp
fdivrp
jg
sub
sbb
or
push
imul
scas
popf
pop
outsb
mov
xchg
dec
lahf
xor
add
dec
mov
lds
dec
cld
jne
es
rcll
pop
pop
sbb
cmp
test
aaa
pop
mov
lods
inc
test
lret
sub
jmp
lahf
jp
ror
outsb
add
les
pop
pop
loope
inc
cmp
out
or
and
hlt
addl
cld
inc
lds
not
or
cmp
test
mov
icebp
jo
jp
xor
mov
push
or
jecxz
push
push
aam
enter
imul
add
ljmp
xchg
and
pusha
inc
imul
pusha
push
cld
fiaddl
dec
clc
xchg
movsl
mov
mov
mov
jl
adc
loop
mov
pop
jle
dec
addl
jne
mov
inc
fs
les
push
adc
sbb
inc
movl
jl
imul
decl
cmp
sub
into
js
dec
cmpsb
jecxz
sub
out
addr16
pop
mov
imul
push
cmp
cmp
dec
push
jae
imul
push
dec
imul
and
outsb
jge
jmp
xchg
push
or
sbb
imul
daa
outsl
mov
or
cmp
clc
decl
push
adc
gs
mov
lds
dec
push
int3
cmp
jg
jno
jge
testb
add
push
adc
add
xorl
movb
sub
les
xor
fs
inc
sub
mov
mov
loopne
fiaddl
pop
sub
push
cmpsb
or
jnp
cltd
rcll
or
or
jmp
sbb
add
fstpt
mov
mov
or
cmp
gs
das
mov
addr16
mov
adc
xchg
test
push
aad
imul
movsb
or
sahf
xchg
shrl
cmp
mov
mov
and
aas
mov
movsl
and
cmp
dec
pop
pop
jg
sbb
jb
push
jl
push
idiv
out
push
subl
les
cli
arpl
jecxz
mov
or
jmp
sti
aam
sbb
pop
cli
inc
and
push
push
add
mov
pop
xor
cmp
sub
pop
add
inc
sbb
mov
cmp
popl
subl
pop
mov
jb
stos
cli
aaa
or
cmpsb
mov
loop
push
sbb
xorl
cmp
cwtl
stc
sub
mov
jecxz
das
lcall
mov
rolb
test
add
sub
add
adcb
mov
test
and
add
mov
adc
mov
aaa
mov
inc
xchg
sub
mov
fimuls
and
dec
pushf
xchg
out
call
jg
aam
shll
in
fidivl
add
push
cmpsb
push
add
or
push
pop
or
jbe
inc
js
xor
dec
aam
les
mov
jno
shll
mov
push
pcmpgtb
pop
ret
dec
jne
rorl
add
add
data16
mov
xor
sbb
pop
xor
pop
pop
xor
pushl
loope
test
inc
xor
sbb
adc
and
jb
outsl
ss
push
leave
mov
fcoml
fisubrs
cmp
enter
inc
pop
je
fwait
jbe
xchg
mov
gs
jle
lcall
fiadds
and
push
push
enter
mov
int3
out
inc
xchg
mov
daa
jns
cs
xchg
dec
xchg
enter
fstpt
fidivl
sbb
lret
inc
loope
lock
decl
outsb
cmp
repz
dec
xor
mov
data16
xorl
pmuludq
lret
mov
xchg
and
in
cmp
pop
adc
mov
xchg
add
call
ja
jge
std
in
mov
jbe
mov
mov
pop
inc
enter
repz
scas
sub
dec
scas
mov
and
push
dec
xchg
and
mov
or
fidivrs
dec
or
push
lret
je
fcoms
roll
pop
and
mov
std
xchg
or
and
orl
jmp
mov
pop
pop
mov
lret
test
cs
jno
sub
in
repz
pop
and
aam
xchg
es
mov
std
mov
sub
inc
or
cmp
xor
loopne
pop
sbb
inc
adc
cmpsb
xchg
pop
cmp
clc
jmp
or
inc
jmp
loop
test
mov
push
push
inc
xlat
or
and
in
ja
sbb
stos
insl
gs
push
lret
lcall
jecxz
jbe
cmc
lds
gs
insb
dec
sarb
push
mov
jge
or
dec
loopne
loope
pop
jl
orb
ja
sbb
xor
add
repnz
lods
stc
mov
sub
or
aaa
mov
jo
push
and
ss
sub
inc
out
mov
dec
mov
mov
lahf
cli
ljmp
imul
out
aaa
mov
adc
test
lds
cmc
call
mov
add
je
pop
xor
test
add
pushl
inc
fbld
ficoml
ret
popf
add
pushl
cmp
dec
xchg
mov
movsb
push
and
inc
push
js
mov
test
mov
mov
mov
sub
lock
jb
clc
sbb
xor
mov
imul
jecxz
mov
lods
sbb
rcl
mov
call
ja
dec
cmc
push
pusha
cmp
adc
add
fildl
ja,pt
mov
xchg
inc
pop
loop
or
sti
push
cmovns
sti
movsl
repnz
or
out
or
lock
mov
pop
pop
mov
xor
orl
iret
cmp
push
push
cmp
push
fistl
mov
hlt
or
out
hlt
or
add
pop
movsb
test
pop
sub
xchg
cmp
jp
mov
imulb
es
jne
pop
push
dec
sbb
lds
shrl
ljmp
inc
loope
dec
dec
sbb
dec
push
add
ljmp
dec
daa
int
clc
or
sub
adc
insl
mov
fdivrs
test
bound
xchg
popa
cwtl
xchg
mov
outsb
test
les
mov
mov
shrl
repnz
push
mov
dec
jmp
addb
mov
mov
mov
mov
fcomps
inc
and
xchg
out
dec
cmp
incl
dec
push
arpl
dec
mov
dec
loopne
xchg
push
out
cld
mov
cld
call
mov
jns
push
pop
sub
mov
std
inc
std
or
jbe
fs
popa
call
int
inc
hlt
dec
push
xor
add
fst
or
popa
lret
jne
mov
push
sub
dec
and
ljmp
cmpsl
push
pop
lods
jmp
pusha
jno
aam
mov
push
out
aad
or
jg
mov
stos
daa
rcrb
and
mov
inc
sbb
adc
lret
in
test
push
test
inc
sbb
inc
aaa
mov
clc
or
lods
sahf
add
not
pop
sub
repnz
mov
enter
inc
std
jmp
mov
ret
jns
mov
addb
adc
clts
lret
in
jno
push
or
sub
lods
and
or
adc
xor
add
scas
push
pusha
mov
push
add
fdivrl
mov
ja
or
int3
push
mov
xchg
es
add
orl
add
add
sbb
mov
jo
pop
and
pop
or
jge
mov
push
outsb
addl
dec
cwtl
cmp
mov
adc
cmp
test
sub
jle
add
adc
add
lods
push
or
sar
ljmp
jno
aaa
addl
push
xlat
or
push
mov
popf
or
fcom
jg
sub
test
lods
arpl
mov
cmp
inc
nop
sub
roll
mov
dec
popf
lods
mov
mov
mov
push
subl
fldenv
xchg
cwtl
mov
fbld
sbb
rol
pop
sbb
adc
mov
cmp
clc
push
inc
test
loop
jle
mov
je
jbe
cwtl
sub
sbb
jle
pop
mov
mov
push
icebp
sti
mov
xor
add
fdivl
push
and
fsts
fsubs
add
pop
rorb
push
push
inc
or
dec
or
popa
cwtl
mov
ja
inc
mov
jno
inc
roll
cmp
or
lods
inc
stos
lods
push
push
adc
daa
push
adcb
shll
mov
or
or
enter
mov
inc
les
mov
test
andl
sub
bound
test
xchg
lret
adc
imulb
fisubrs
or
cmpsl
sub
mov
je
fs
jle
sub
aad
mov
adc
add
fisttps
inc
mov
lock
push
adc
sbb
call
lock
fiaddl
inc
inc
jge
fcompl
repnz
iret
iret
pop
pop
test
fcomps
in
cwtl
call
pop
test
inc
in
adc
push
add
or
das
nop
inc
add
mov
cmp
loopne
adc
inc
xor
sub
cmc
and
dec
or
sbb
inc
test
inc
fbstp
add
push
ret
or
fsubrl
cmp
clc
fidivrs
aaa
cli
out
mulb
stos
or
add
das
sbb
xor
mov
xchg
lock
mov
or
pop
rcll
outsb
jmp
mov
out
sbb
sub
add
dec
and
mov
pop
lds
fwait
xor
pop
cmpsl
in
lock
push
add
push
movsl
dec
and
xor
push
and
inc
pop
mov
addr16
ja
or
pop
and
insl
loope
mov
jns
inc
sub
inc
sub
sbb
js
sbb
add
outsl
push
push
push
jle
xchg
mov
fldt
push
inc
clc
bound
clc
popa
jl
pushf
jmp
dec
lods
sub
repnz
or
sbb
mov
sbb
andb
or
cmp
subb
push
or
fisubs
xchg
push
es
mov
jge
sahf
add
adc
outsb
xor
xor
mov
rol
sbb
mov
icebp
add
xor
push
sub
out
jae
loopne
pop
cld
in
enter
mov
cmp
dec
sahf
sbb
inc
das
lds
sti
xchg
out
loope
stc
stos
dec
loope
fldl
inc
mov
cmpsb
cmpsl
and
or
add
xor
loopne
loope
stos
sti
test
adc
ljmp
jmp
movsb
add
adc
mov
jl
inc
sbb
add
idivl
repnz
les
jg
jb
xchg
or
arpl
jns
add
shll
cld
adc
and
and
and
mov
adc
and
pop
cs
xchg
add
out
mov
mov
nop
loopne
mov
bound
mov
shrl
cmp
mov
insb
jmp
sub
inc
movsb
shlb
and
rclb
insl
inc
inc
xor
add
inc
jae
aaa
shl
push
sti
mov
add
bound
push
xchg
dec
insl
or
push
dec
ret
sub
and
inc
mov
xchg
push
add
or
fmull
fidivl
dec
jo
clc
pop
push
or
dec
loope
adc
adc
in
sub
adc
xchg
or
lock
or
loope
inc
dec
insl
jecxz
mov
sub
lods
and
repnz
scas
jbe
push
cmp
in
cmp
jmp
ljmp
pop
push
inc
arpl
adc
testl
add
xor
outsb
adc
and
fisubl
test
sbb
xchg
loopne
inc
dec
movsb
ret
or
shl
jg
push
sub
stc
int3
inc
shl
xchg
js
mov
fiaddl
iret
mov
ds
clc
outsb
clc
jmp
sbb
and
push
push
fisubl
mov
imul
loopne
jge
testb
subb
dec
inc
mov
sub
scas
sub
inc
lcall
push
es
and
outsl
lcall
outsb
pop
popa
jl
push
rcll
insl
xor
jmp
dec
mov
pop
scas
int3
cmp
inc
jge
in
insl
xchg
jne
lret
jne
sbb
notb
outsl
mov
les
sbb
mov
aam
ss
pop
pop
push
jno
mov
cmp
mov
sub
xchg
leave
or
enter
pop
cmp
imul
and
sbb
aaa
mov
loop
cmp
cmp
inc
jbe
mov
push
lret
imul
add
mov
pop
adc
pop
mov
jae
or
call
xlat
ret
pop
loopne
push
stos
aam
lods
cmpl
mov
popa
js
imul
sbb
dec
add
lret
in
jle
xor
jae
dec
sbb
jne
inc
das
std
push
ret
dec
adc
lods
arpl
fildll
test
xchg
mov
xchg
push
cltd
data16
loope
test
lock
xchg
repz
jae
fcom
mov
push
lahf
sbb
inc
or
out
inc
dec
call
push
lea
add
shlb
or
ret
push
pop
int
dec
out
lods
push
insl
js
movsb
dec
mov
or
in
push
in
leave
push
adc
cltd
repnz
cld
sbb
jl
and
push
and
push
push
punpckhdq
cmp
mov
xlat
test
xchg
dec
jecxz
xchg
mov
xchg
mov
pop
rolb
and
cmp
or
ss
cmp
sub
mov
jb
inc
xor
inc
imul
add
in
dec
push
xor
or
mov
adc
inc
ret
shlb
fildl
lret
pop
lahf
sub
xchg
mov
sub
lods
sbb
sbbb
adc
mov
push
xor
inc
aaa
jns
cs
or
xor
add
es
cli
pusha
add
fstpl
pop
inc
rcrb
push
add
mov
lods
inc
outsb
clc
fsubrp
mov
add
add
fimuls
clc
xchg
mov
or
mov
adc
inc
inc
pushf
cmp
pop
test
add
mov
and
jmp
lock
loope
push
ljmp
xor
mov
lock
adc
cmp
lods
fsubp
pop
cld
push
add
jle
add
cwtl
test
ret
and
or
xchg
push
sub
push
mov
add
lret
andb
in
sbb
pop
pop
fwait
test
push
scas
sbb
sub
clc
pop
xor
testb
mov
fwait
roll
call
cwtl
int
sub
bound
push
adc
je
and
mov
pop
sbb
int
aam
jo
push
pushf
jne
add
xorb
lds
push
push
das
ss
mov
and
mov
sbb
lods
cmp
scas
call
mov
fwait
add
loope
mov
sub
sti
test
fadds
lock
add
or
xorl
add
cli
pop
int3
push
cmc
lods
and
xor
iret
std
test
jbe
ss
test
dec
jge
xor
es
push
outsb
mov
cmp
ja
lods
pop
inc
aad
or
push
add
xchg
lahf
shlb
mov
sub
notb
insl
add
pop
test
ret
adc
lret
testb
scas
jmp
test
je
xor
or
lods
ja
mov
in
cmp
push
sbb
insl
out
push
cmc
jge
sub
je
orl
pop
lock
jb
clc
adc
std
inc
shl
push
pop
push
adc
mov
mov
icebp
bound
mov
or
xor
sub
mov
lock
into
mov
lock
in
dec
inc
add
cmpsl
sbb
add
inc
arpl
mov
or
and
dec
outsb
or
jle
sbb
dec
xor
pusha
dec
fcmove
hlt
dec
int3
add
or
push
pop
es
int3
pop
enter
push
cmc
int3
add
int3
test
cmp
arpl
enter
xorl
das
or
loop
hlt
jo
jb
enter
pop
fsubp
jge
mov
fsubrs
mov
adc
add
and
push
xor
inc
or
jae
cmp
pop
jne
adcb
xor
iret
or
adc
iret
inc
outsb
mov
ficomps
xchg
addb
stos
sbb
dec
rolb
insb
jne
sbb
cwtl
add
rorb
addl
jecxz
mov
pop
add
jae
fcomp
loopne
mov
jp
loopne
push
xchg
call
mov
add
mov
nop
jge
rolb
je
enter
xchg
cmp
or
xor
enter
sub
cmp
adc
repz
cmp
sbb
dec
movq
clc
sahf
test
cli
out
std
or
sbb
inc
cltd
jp
dec
inc
jg
in
or
popa
mov
mov
daa
cld
enter
data16
outsl
cmp
out
ret
retw
icebp
push
les
sbb
mov
out
mov
lret
addb
dec
xchg
sub
out
addr16
or
mov
add
mov
in
pop
les
adc
xor
ret
mov
shrl
cld
cmpsl
mov
xchg
mov
scas
and
ss
nop
ret
addr16
add
repnz
inc
mov
adc
pop
cmp
mov
jns
cmp
mov
adc
in
test
fwait
add
test
push
inc
add
lret
and
jno
sbb
inc
adc
insb
push
pop
mov
cld
ret
mov
mov
ljmp
pusha
mov
push
in
jl
sbb
mov
ja
scas
push
adc
push
xor
lcall
int3
adc
xor
or
sub
mov
add
pop
int3
jno
leave
pop
pop
rolb
push
inc
pop
and
jmp
repz
mov
push
enter
icebp
mov
ficoml
cmp
movsl
push
mov
pop
xor
int
lods
or
sub
add
or
icebp
dec
fbld
filds
inc
jo
ret
fnstsw
mov
dec
push
cmp
addr16
aad
out
inc
fidivrl
jmp
push
jae
fcmovu
mov
enter
inc
mov
mov
add
mov
add
shll
mov
jp
or
inc
push
aam
sbbb
addr16
sub
jecxz
icebp
xchg
xor
or
cmpsb
add
pop
or
outsb
ret
add
sub
mov
mov
sti
aaa
pop
cmp
cli
and
rol
ret
adc
sbb
inc
call
imul
outsl
fimull
sbb
or
std
or
clc
cmp
push
ss
sbb
mov
xor
inc
mov
push
cmp
add
sub
sub
fstpl
lods
dec
and
mov
mov
mov
add
fdivrs
dec
cwtl
jge
sahf
scas
mov
pushf
jg
stos
test
add
ret
mov
mov
xchg
mov
fbld
dec
jb
call
mov
or
in
lea
std
add
fiaddl
mov
lret
push
pop
or
sub
inc
ret
push
dec
mov
lea
cld
out
adc
sbb
cs
cs
lsl
pop
xor
xchg
clc
cmp
cmp
push
fcomps
inc
fisubrl
bound
sub
aas
rcll
jne
fldl
test
pusha
xor
and
mul
nop
sbb
pop
xchg
pop
sbbb
or
adc
adc
fldl
push
out
int
loope
fiadds
dec
inc
push
sub
cwtl
adc
ljmp
mov
jecxz
sbb
sub
loop
das
adc
sbb
mov
icebp
test
das
insb
mov
add
xor
adc
aas
lcall
aad
sub
adc
xchg
sub
jle
rcll
outsl
dec
mov
lea
pushf
or
test
imul
loopne
movsl
pusha
loope
mov
push
mov
out
add
dec
and
pop
jmp
shl
push
push
dec
mov
mov
or
repnz
and
push
mov
or
jp
push
insl
push
mov
and
cmc
mov
incl
or
and
push
inc
aas
rcrb
mov
add
add
push
fstl
lds
sbb
mov
mov
or
test
adc
dec
mov
mov
shr
mov
push
xor
pusha
test
pop
push
mov
roll
pushf
sbb
sbb
and
add
loope
fsubrl
jmp
outsl
mov
orb
test
lcall
inc
jl
sub
jmp
inc
insb
or
cmp
into
cmp
mov
xor
bound
mov
ret
push
inc
push
hlt
sub
adc
outsb
inc
stos
push
sub
jnp
imul
jp
dec
inc
lcall
xor
ret
pop
fimuls
dec
adc
push
rolb
sub
dec
js
jge
ljmp
data16
les
xchg
loope
jb
xor
mov
leave
leave
mov
add
and
sub
adc
sbb
jecxz
shrl
fsubrs
adc
gs
lods
mov
lods
cmc
mov
aas
lcall
shrl
insb
js
fdivrs
insb
mov
orb
inc
aam
and
push
adc
mov
lds
cmp
rorl
push
dec
test
and
mov
mov
lds
push
leave
jl,pt
aam
insl
cmp
fimull
shll
das
dec
xchg
cmpsb
sbb
ret
cmp
push
incb
cmc
ja
stc
cwtl
add
add
lods
aam
pop
aam
inc
loope
push
adc
sub
and
movsl
roll
xchg
outsl
loopne
mov
inc
in
sbb
push
push
sub
sub
rorb
rorl
insb
mov
adc
call
or
sbb
mov
pop
lock
sub
push
and
pop
popa
jecxz
cltd
mov
outsb
loopne
aam
mov
adc
inc
sub
adc
movsb
add
pop
aad
xor
dec
jp
mov
es
je
outsb
outsl
add
shlb
pop
inc
sub
inc
dec
iret
mov
or
jno
dec
xor
pop
jle
xor
fs
lret
xchg
pushf
cwtl
rcr
out
add
into
pushf
in
push
and
es
pop
cwtl
cmp
sarb
ficompl
aam
fs
ds
lcall
lock
ljmp
push
inc
mov
push
loopne
test
mov
push
lcall
leave
inc
loope
mov
lahf
mov
outsl
add
stos
hlt
call
push
sbb
and
dec
aas
jmp
mov
f2xm1
mov
and
push
add
stos
leave
cmp
data16
lods
jbe
pop
inc
mov
jge
setge
xorb
lret
sbb
push
rolb
xor
sub
clc
xor
loope
loop
mov
outsb
pop
flds
test
loop
mov
lock
add
push
xchg
test
pop
cmp
js
je
mov
cmp
dec
inc
cmpsl
fimull
adc
mov
enter
mov
mov
sub
cmp
roll
fwait
psllw
cmp
ljmp
popa
jbe
scas
cmp
add
xor
cmp
mov
and
or
xlat
and
faddl
ja
ret
mov
push
test
add
xchg
movsb
test
sbbb
jecxz
mov
pop
cli
adc
sbb
cmp
shrb
jp
insl
inc
push
mov
jmp
jb
dec
push
jo
inc
push
stc
or
data16
xor
push
add
dec
mov
fwait
cld
adc
orl
sbb
cmp
cmp
mov
mov
pop
and
or
xor
xchg
and
push
jbe
adc
xchg
roll
icebp
inc
lods
cld
dec
jge
and
ja
jge
and
jle
xor
stos
push
dec
loope
inc
out
ss
dec
dec
mov
dec
adc
sarb
push
adc
lock
sbb
mov
xor
lock
popf
and
or
mov
cmc
sub
cmc
sbb
pop
lret
or
fdiv
mov
add
icebp
pop
pushf
push
cmp
push
stos
fimuls
fnstenv
pop
in
inc
adc
lds
incb
mov
imul
cmp
pop
inc
cmp
push
negb
and
or
pop
test
adc
cmp
and
cmp
outsb
stc
fmuls
or
mov
pop
addb
cmpsb
or
out
lahf
adc
sar
inc
popa
dec
inc
jecxz
add
cli
xlat
addr16
or
or
rcll
pop
sub
inc
fildll
jg
lret
inc
daa
fbld
lea
adc
cld
and
sub
int3
test
insb
xorl
adc
sti
lahf
jae
xchg
sub
mov
pop
or
stc
jae
sarl
xlat
imul
jo
outsl
lock
sbb
cmp
out
vmovss
in
loopne
push
mov
dec
push
lret
dec
pop
inc
call
inc
test
popa
cmp
push
into
rol
push
mov
sub
and
fbld
jb
fldl
mov
mov
xor
bound
stos
adc
and
mov
mov
ret
inc
movsb
xor
das
adc
data16
fistl
test
lea
pushf
and
fistps
ret
les
inc
xchg
repz
out
mov
inc
jecxz
rcl
ret
sub
pop
icebp
inc
mov
pop
inc
sub
mov
pop
fldl
in
xchg
cmp
ret
mov
xorb
into
adc
inc
outsl
dec
push
into
dec
or
enter
outsl
xor
cwtl
sub
popa
into
loop
cmp
mov
or
sbb
insl
ret
jns
push
ret
nop
fadds
xchg
or
dec
nop
mov
fisubs
sub
nop
inc
leave
sbb
cmp
mov
mov
ds
test
mov
dec
sbb
cmp
ret
mov
adc
out
addb
xchg
push
outsb
mov
dec
fcoms
add
shll
xor
jbe
jmp
or
ljmp
fidivl
xlat
test
cmp
and
mov
pop
pop
sbbb
sub
push
add
cmp
or
jmp
or
je
dec
inc
fcoms
cmp
ss
and
pop
jno
cmp
inc
or
test
test
push
xor
stos
dec
or
xor
or
inc
mov
js
and
bound
and
or
lret
add
adc
mov
jb
fcomp
add
xor
pop
stos
int
mov
xchg
je
push
mov
outsl
test
loopne
inc
mov
and
add
or
mov
xchg
lret
xchg
pop
cmpb
add
or
aam
shl
inc
push
and
mov
inc
ret
aam
mov
int3
adc
cmp
add
or
jne
push
in
add
cli
idivb
sub
repnz
push
add
xor
pop
fcoms
leave
pop
add
mov
inc
dec
clc
sub
push
ret
dec
mov
add
pop
rorl
sub
les
push
inc
in
fchs
cld
or
and
adc
shrb
and
into
orb
stc
loop
and
jno
bound
out
lea
jecxz
add
testb
gs
mov
sbbb
jnp
insb
sbbb
mov
insb
sub
out
ret
in
add
push
mov
mov
subb
cwtl
inc
add
inc
inc
and
or
sub
in
adc
push
lea
stos
loop
ret
pop
ret
xor
xor
loop
jnp
dec
mov
add
leave
or
lods
add
or
pop
add
push
sarb
and
scas
xor
jo
jns
inc
fnstsw
incl
sbb
add
out
sahf
lds
arpl
fs
outsl
loopne
inc
mov
test
push
sar
jno
out
lods
popa
aaa
or
fadd
or
test
sarb
sbb
and
cmp
loopne
hlt
pop
incl
inc
or
lcall
add
mov
gs
or
int
add
sub
push
xchg
mov
insl
cmc
mov
push
and
mov
aaa
movsb
push
cltd
mov
dec
hlt
add
icebp
movsl
inc
icebp
mov
jmp
sbb
mov
aam
leave
pop
clc
xchg
sub
push
cmpsb
outsb
lods
add
scas
into
movsb
add
xor
stos
fistl
fcoms
lret
cwtl
ret
outsl
xor
push
outsb
mov
cmpb
insb
xchg
dec
push
xchg
jno
mov
adc
scas
daa
sbb
fisttpll
xchg
lods
mov
imul
add
call
cmp
mov
push
and
inc
les
jp
fists
mov
pop
xchg
das
add
xchg
xor
bound
push
sub
pop
mov
cltd
sbb
xchg
push
xchg
adc
aaa
ja
lock
out
adc
loop
mov
fbld
aad
lock
jecxz
xor
cmpsl
les
outsb
cmc
adc
mov
rcll
xchg
rol
mov
int3
in
bound
and
xlat
shll
mov
jg
sbb
popf
add
mov
mov
inc
add
pusha
pop
lock
shlb
sub
pushl
adc
jne
je
inc
test
dec
pop
xchg
cltd
fnstcw
sbb
xor
push
push
in
xor
fidivs
jns
or
add
jmp
jo
mov
or
jmp
or
dec
mov
les
aam
nop
inc
push
das
cld
pop
mov
mov
outsl
aam
add
dec
xor
cltd
in
imul
ljmp
xchg
mov
test
insl
test
leave
adc
or
js
lods
sub
insb
mov
repnz
add
and
lahf
mov
xor
fcomps
repnz
xchg
loope
mov
in
ss
mov
in
mov
fadd
gs
mov
es
mov
xchg
in
adc
add
push
pop
and
fisubrl
aaa
sbb
and
hlt
xchg
std
adc
xor
call
push
cmp
xor
cmp
adc
mov
out
and
and
mov
ret
pop
dec
jl
and
and
insb
push
mov
adc
insl
leave
lds
popa
add
mov
push
push
cmp
clc
push
insb
dec
cmc
lret
and
mov
and
push
ds
bound
test
pop
mov
mov
push
jl
add
jle
es
fwait
or
adc
cld
mov
and
add
cmp
mov
pop
ja
sbb
ret
mov
shll
xchg
in
ljmp
fists
mov
in
mov
fsubl
push
test
mov
adc
mov
idivb
jnp
sbb
and
das
push
cmpl
ficompl
mov
cmpsb
sbb
outsb
insb
sbb
push
sub
loopne
test
lock
pop
push
pop
ret
xor
jne
mov
shl
mov
pop
cmpsb
test
adc
add
or
or
push
add
xchg
jbe
pusha
mov
adcl
outsb
mov
jbe
mov
jae
jp
popf
insb
add
inc
test
push
pop
push
movd
mov
jno
cmc
mov
insb
dec
hlt
sbb
or
clc
notb
mov
add
loope
outsl
sbb
nop
movsl
fistps
mov
sbbl
add
repnz
scas
xor
add
lcall
out
cltd
jecxz
pop
cmpsb
jl
decl
xor
mov
lcall
loop
ljmp
cmpsl
fadd
jne
add
outsb
subb
jg
and
leave
xor
or
insb
dec
cmp
add
cs
test
test
mov
outsb
test
shll
add
cmp
adc
inc
cld
pop
dec
call
pop
pop
loopne
jle
mov
addb
xor
push
adc
sbb
sub
and
xor
add
iret
mov
mov
cs
mov
dec
testb
mov
jmp
add
jbe,pt
mov
sub
arpl
cmp
and
lds
aad
sti
bound
in
in
imul
cmp
mov
daa
enter
test
mov
inc
cmp
pop
cmp
push
xchg
push
rcll
and
addb
cmp
adc
test
repz
shr
out
xlat
idivl
scas
imul
push
push
lret
in
mov
inc
pmaxsw
clc
or
mov
repnz
out
jae
in
popa
push
sbb
cmp
push
decl
pop
inc
mov
pop
lcall
xlat
test
out
repnz
lods
dec
dec
pushf
jg
push
icebp
xlat
outsl
pushf
xchg
add
jno
mov
imul
js
subl
and
stc
shl
cld
jo
decl
pop
fisubrs
test
insl
icebp
add
insl
shrb
lea
mov
cld
xchg
test
frstor
lret
mov
fldt
mov
push
xorl
cmp
sti
test
sbb
xor
adc
nop
mov
ret
mov
hlt
stc
icebp
push
andb
or
cmp
mov
sarl
aam
push
adc
xchg
ljmp
int
repnz
and
and
cltd
sahf
into
inc
lods
insl
xchg
xchg
adc
test
push
roll
and
xor
test
mov
arpl
jecxz
clc
lock
cmc
pop
add
in
dec
shlb
addb
inc
mov
and
xchg
ja
jb
mov
pop
aas
lods
aad
addr16
inc
inc
bound
add
add
mov
mov
notb
subl
addr16
js
pop
add
ljmp
and
push
les
jb
dec
mov
adc
mov
clc
in
or
xchg
repnz
inc
push
xchg
mov
loopne
inc
loop
js
and
pushf
test
or
add
jp
stos
data16
add
add
pop
add
pop
loopne
sbb
out
push
mov
testb
addb
imul
mov
push
and
xor
outsb
mov
loopne
xlat
leave
loopne
or
inc
rol
or
sbb
adc
pushf
add
insl
add
and
andb
jnp
inc
push
in
adc
faddl
mov
mov
push
pop
mov
out
dec
or
add
push
rcl
push
call
imul
sub
lcall
and
adc
stos
xor
adc
inc
mov
pop
mov
das
inc
or
xor
fisubs
mov
add
lods
dec
shlb
fldenv
or
dec
incb
ja
fmuls
nop
inc
inc
scas
pop
aas
pop
adc
fistpl
loopne
sub
cmp
push
add
stos
not
dec
push
lds
popf
and
push
arpl
and
ja
shll
rorb
push
sbb
out
andb
pop
or
cmp
loop
jne
cs
test
shlb
cmp
and
adc
jp
scas
lcall
pop
movsb
fimull
push
test
lds
inc
xor
outsb
mov
push
and
in
dec
fwait
or
and
cmp
jge
xchg
inc
mov
int3
jmp
dec
jne
negb
mov
lock
push
call
iret
cmp
xor
push
pushf
adc
stos
add
cmpl
cmp
or
pop
push
fdivrl
push
hlt
or
add
or
sbb
add
sub
lahf
mov
addr16
mov
in
inc
les
dec
xchg
in
mov
jg
push
lock
imul
nop
and
pop
shl
ss
xchg
inc
into
or
xchg
sbb
push
dec
or
mov
fcoms
sbb
aad
pminub
or
adc
mov
add
filds
in
push
addl
and
cld
sub
mov
stos
rol
rorl
and
or
stos
jo
cld
sub
xor
insb
inc
pop
mov
push
add
inc
dec
cli
call
cltd
fists
cmp
dec
dec
or
mov
add
pop
mov
ss
sbb
mov
addb
and
dec
cmp
jb
mov
mov
mov
mov
jne
lcall
xor
dec
push
add
and
and
pushl
add
jnp
push
les
fistpl
xor
sbb
adcb
inc
outsb
lock
add
addr16
shlb
test
frstor
jb
icebp
sbb
add
adc
and
adc
sub
adcb
pop
inc
outsl
sbb
cmp
jb
in
test
xlat
ljmp
xor
cmpsl
dec
adcb
pushl
setp
aam
mov
mov
pop
shl
rolb
sbb
dec
es
mov
shlb
shlb
push
inc
push
fimuls
movsl
or
xor
or
sub
dec
xorb
jge
mov
pop
mulb
lock
jns
out
and
xor
lds
mov
cmp
xorb
xlat
inc
push
test
xchg
sahf
fcoml
mov
push
rclb
insl
pop
loopne
jo
es
and
add
adc
pop
dec
and
bound
xchg
pop
imul
lods
loopne
testb
loop
das
lock
cmp
adcb
sub
push
rcll
jge
xchg
jmp
push
xchg
xchg
rolb
dec
shll
call
loop
ret
into
fildll
push
jo
aad
aas
scas
xor
xchg
or
ds
adc
dec
loope
mov
jnp
cld
add
lods
ret
loop
push
inc
test
or
dec
sub
add
mov
jno
mov
xor
mov
addb
mov
adc
and
jge
arpl
mov
cltd
xlat
jmp
enter
lock
jp
push
cmp
xchg
and
leave
adc
push
sub
push
rcrl
xchg
arpl
adc
push
adc
mov
push
call
int
call
lret
inc
mov
shr
enter
push
fmuls
and
pop
push
ljmp
pop
aaa
jno
es
cs
mov
xchg
sub
pusha
outsb
or
jl
push
lods
xchg
lods
inc
roll
add
sub
loop
rorl
xchg
icebp
adc
cmpsl
leave
movsl
or
shll
mov
push
push
loope
cmpsb
push
xor
pop
rcll
xchg
inc
xor
std
aas
push
pusha
jge
dec
and
jg
mov
sahf
rolb
test
mov
clc
jg
lahf
lock
xor
sub
cmp
cs
daa
add
arpl
add
adc
nop
jae
fbstp
mov
cld
xchg
movl
je
push
mov
xchg
movsl
cs
nop
iret
fldt
test
add
repnz
push
movsb
int
add
mov
insl
add
cmpsb
andb
xchg
xor
mov
jae
jmp
and
push
sub
mov
add
dec
rolb
test
mov
sub
jecxz
mov
fistpll
adc
cmp
jl
fildll
cmp
jne
push
xchg
sub
mov
push
mov
lods
push
imull
add
adc
fcmove
add
push
sbb
pop
inc
xorb
pop
sub
into
xchg
pop
mov
rcrb
pop
mov
cmp
mov
xchg
and
test
js
jb
jecxz
sub
outsb
mov
cmc
cmp
adc
scas
mov
inc
inc
lcall
sub
jecxz
cmp
fisubl
pop
lock
lock
xchg
loope
push
incl
das
dec
fs
mov
mov
imul
push
cmp
ret
adc
add
cmc
inc
cmp
push
mov
daa
daa
mov
or
inc
out
or
mov
mov
es
andb
dec
and
add
lods
addb
icebp
ja
fwait
negb
outsl
dec
addr16
sbb
sahf
adc
mov
xchg
dec
repnz
loopne
movsb
fisttpl
rcr
js
push
push
sub
pop
rcll
sub
fildll
popf
and
lods
or
icebp
ljmp
rol
pop
in
cmpsl
aaa
cli
dec
adc
jae
pushf
stos
jo
sub
cmp
cld
pop
xor
les
lods
call
mov
adc
fbstp
add
int3
pop
and
sbb
call
cmp
hlt
iret
ja
insb
push
add
add
lcall
push
dec
mov
cmc
add
add
test
inc
pushf
mov
movsb
orb
adcb
in
cmp
jl
shlb
push
inc
sbb
adc
mov
ret
subb
inc
cmpsb
mov
mov
sub
out
and
add
mov
cltd
fisubl
scas
arpl
add
insl
sub
mov
cmp
ja
adc
jmp
mov
mov
int
jo
push
pop
cmp
inc
xchg
pushf
add
push
mov
mov
movsb
and
push
insb
xchg
and
inc
bound
iret
mov
lret
pop
mov
scas
inc
pop
mov
xchg
and
sbb
or
inc
mov
or
sbb
test
mov
clc
insb
pop
les
fcompl
popw
inc
adc
push
inc
sbb
inc
clc
mov
cmpsb
cvttps2pi
xchg
add
insl
sbb
mov
push
ret
sbbb
loopne
inc
adc
mov
pop
xchg
push
stos
cli
fcompl
shl
mov
xor
jnp
rorl
mov
and
insb
daa
lock
or
add
xchg
mov
inc
adc
inc
sub
cmp
or
mov
imul
and
xor
dec
pop
insl
pusha
dec
aas
mov
rcrb
xchg
test
orb
enter
mov
shrb
push
pop
sbb
pusha
dec
out
xor
popf
shll
adc
in
push
xchg
mov
repz
outsl
mov
loop
inc
jmp
mov
jbe
push
cmpsl
data16
pop
call
lock
pop
arpl
push
pop
mov
mov
sbb
add
mov
cmp
cmp
add
inc
add
dec
add
outsl
xlat
add
mov
popa
data16
sub
jns
cltd
jns
sahf
mov
mov
adc
or
in
xor
lcall
stos
bound
push
mov
ficompl
fcoms
in
cmp
push
adc
inc
sbb
jg
outsb
cmp
cwtl
mov
testl
fstps
push
out
test
out
pop
cmp
jge
jg
lods
outsl
inc
cmpxchg
mov
sub
mov
mov
es
loope
nop
fldt
int3
fdivrs
mov
mov
ret
outsb
and
dec
int3
bound
and
mov
and
daa
cltd
adc
mov
sub
add
add
andb
lret
sbb
lds
aas
arpl
push
fmull
icebp
mov
fs
pop
pushf
jnp
fsubl
pop
mov
add
mov
and
lds
outsl
add
in
push
mov
test
cmp
or
mov
flds
mov
in
stos
sub
push
scas
sub
idivb
sbb
mov
push
mov
addl
adc
inc
fldl
push
aaa
cld
clc
movsl
push
scas
sub
mov
divb
sahf
or
ss
push
testb
xchg
fs
shlb
push
stos
movsw
adc
test
inc
sbb
adc
jne
cmp
repz
mov
mov
sub
jg
in
dec
xor
inc
frstor
jmp
dec
nop
addb
mov
shlb
add
dec
xchg
mov
dec
je
mov
rcll
outsb
jg
mov
pop
push
push
and
jle
bound
jnp
test
rolb
or
sub
push
ja
pop
imul
pop
addl
push
dec
lock
cmp
mov
pop
lahf
pop
dec
mov
add
xor
andl
adc
and
adc
sbb
std
mov
dec
mov
sub
mov
test
pop
adc
shlb
outsl
mov
push
mov
inc
je
incl
adc
mov
add
inc
fwait
sub
xchg
out
mov
ficoms
lds
jl
sbb
lcall
xchg
pop
cmpsb
mov
xor
xchg
pop
xor
xor
pop
xchg
jmp
aad
lods
jbe
push
hlt
in
sub
xchg
inc
or
in
shl
mov
jno
lods
daa
add
dec
dec
push
outsl
outsl
cld
testb
subb
lret
mov
sarb
and
outsl
cld
jge
add
add
xor
hlt
ja
das
pop
int3
lods
pop
icebp
sti
pop
pop
fimull
push
sahf
sub
and
push
sarb
movsl
xchg
cmp
add
mov
inc
stos
test
and
mov
arpl
les
xor
jle
inc
mov
jo
cmc
test
test
movsb
scas
test
and
xbegin
inc
push
jge
into
mov
push
xchg
mov
aas
cli
test
mov
loopne
testb
lock
lcall
inc
incl
dec
push
iret
mov
dec
cwtl
mov
imul
cmp
jle
cmp
scas
pop
icebp
in
add
rorb
add
mov
xchg
add
dec
ljmp
sub
xchg
xchg
jl
push
sub
adc
rorb
sub
fistpl
add
popa
andb
sub
mov
and
jg
push
jge
xchg
subb
les
mov
ds
lds
movsb
cmpsb
popl
inc
xor
shr
cmpb
and
mov
daa
mov
dec
or
jle
push
xchg
cs
stc
gs
fsubrl
and
sub
in
ja
cmp
sub
out
xor
jmp
ljmp
sub
xor
out
nop
add
lods
mov
xor
sub
pop
enter
lds
mov
nop
xor
aad
cmp
out
jecxz
dec
pop
jp
inc
jb
div
sub
xchg
pop
mov
mov
popl
insl
mov
xor
mov
rcrb
sub
sahf
add
cmp
icebp
popa
popf
cwtl
les
push
stc
into
out
popa
icebp
aas
sbb
and
inc
sbb
adc
subl
repz
fidivrl
push
xor
fisubrs
add
pusha
mov
xchg
lahf
or
push
adc
xchg
adc
or
lds
repnz
imul
mov
and
jmp
cmpsb
outsl
push
or
loop
push
add
jo
cltd
dec
mov
and
add
cwtl
fildl
fldt
addb
sub
lret
xchg
cmp
inc
push
addr16
fnstcw
in
pusha
shl
pushf
sti
lds
call
aaa
jns
int
nop
jnp
and
and
aam
cld
push
in
xchg
mov
les
inc
add
dec
pop
sbb
add
push
sbb
inc
adc
inc
insl
mov
push
dec
mov
dec
dec
sub
das
push
aaa
or
jne
xor
ret
comiss
adc
mov
push
xor
or
cld
push
sbb
int
jae
dec
cmpsb
cmpsb
sub
sti
test
add
mov
sbb
push
fsubl
xor
ret
adc
xchg
faddl
xchg
mov
icebp
cmp
jne,pn
lds
mov
jnp
icebp
arpl
outsl
mov
test
dec
fcomp
xchg
pop
orb
repz
ss
xor
fwait
add
icebp
adc
adc
xor
cld
scas
dec
and
test
out
pop
dec
int3
rolb
xchg
addb
adc
inc
sbb
pop
xor
push
filds
dec
notl
pop
stc
inc
mov
insl
movsb
flds
sub
outsl
aam
jns
cmpsb
ds
cmp
leave
lcall
imul
jno
adc
pop
sub
test
je
push
js
fidivrs
or
ret
sub
fidivs
inc
pop
in
ja
arpl
push
jne
loopne
call
mov
jge
ret
push
or
rolb
stc
cmp
mov
mov
jb
mov
and
sbb
sbb
or
imul
cmpl
adc
insb
xchg
rolb
nop
adc
call
sti
push
imul
inc
stos
xchg
add
push
scas
inc
fcmovnbe
fcmovu
add
jns
test
iret
ds
insl
stos
inc
push
and
push
push
push
xchg
lahf
pop
push
dec
sbb
mov
loope
rclb
sahf
stc
in
jo
push
dec
fdivrs
dec
xchg
xor
pop
pop
add
mov
fcom
sbb
fsubrp
add
scas
orl
pop
cld
in
adc
dec
loope
ret
dec
movsb
push
std
sub
or
stos
pop
adc
sub
inc
pop
push
out
stos
ficoml
pop
mov
lods
fcomi
cs
adc
stos
push
pop
fwait
jnp
inc
and
sub
xor
xor
pop
clc
call
test
or
mov
fbstp
mov
and
cmpsb
mov
xchg
mov
jl
andl
cwtl
repz
adc
filds
mov
mov
aaa
mov
adc
cmp
jmp
mov
daa
dec
in
mov
andb
lcall
jge
dec
mov
aas
fiaddl
mov
inc
into
mov
pop
cs
add
jle
xor
cmpsl
hlt
pop
mov
mov
mov
push
inc
popa
popa
sbb
sbb
adcb
dec
jge
jg
in
or
jmp
out
xchg
sbb
les
ja
or
femms
or
push
mov
inc
imul
mov
dec
out
xchg
fcom
push
sub
imul
add
outsb
loop
add
lret
sub
outsl
lock
das
inc
sbb
mov
sti
outsb
mov
mov
imul
and
push
jo
pop
mov
jnp
inc
hlt
or
pop
pop
xchg
data16
cmc
pusha
fildl
outsl
mov
outsb
ja
in
nop
aam
jle
insl
xchg
or
pop
pop
js
jmp
or
lock
int3
mov
mov
push
xchg
jno
mov
mov
fmul
mov
or
jb
loopne
and
scas
repz
stc
hlt
mov
cltd
mov
mov
and
cmpl
insl
ret
sbb
mov
out
inc
xchg
cmp
repnz
push
xchg
outsl
in
cwtl
hlt
cwtl
fsubs
add
shll
xor
shlb
rorb
or
test
repnz
mov
sti
push
loop
or
andb
movsl
inc
fistpl
dec
sub
sub
fmuls
aad
stos
jmp
xchg
jno
lds
cli
shrl
not
inc
push
push
jbe
mov
mov
das
push
pop
dec
mov
shlb
in
dec
gs
dec
lahf
jg
push
sub
push
cs
test
mov
mov
addb
mov
push
das
inc
shr
mov
xchg
add
and
hlt
insl
mov
ljmp
jp
sbb
adc
dec
xchg
fwait
insl
and
adc
and
jl
adc
call
and
and
jo
sub
or
sbb
sbb
fwait
rorb
bound
sarl
or
inc
and
enter
cld
iret
mov
xor
add
rorl
pop
andb
mov
aam
nop
mov
out
lcall
enter
lret
fstps
xor
or
push
mov
adc
shlb
fwait
xchg
push
sbb
fstl
add
push
cltd
divl
pusha
mov
outsl
push
inc
shll
add
adc
into
xor
mov
cmovbe
or
shlb
ret
test
and
fidivl
jns
cmovp
clc
inc
add
add
gs
pop
cli
adc
mov
add
aad
mov
adc
aaa
pop
add
lock
or
ljmp
dec
dec
out
fisubrs
pusha
or
sbb
nop
cmp
fisttps
pop
ljmp
nop
dec
inc
cwtl
cwtl
inc
xor
in
rorl
pop
sbb
movsb
popa
mov
js
inc
mov
pop
fsubl
or
cli
push
xorb
stos
sub
adc
xor
mov
es
imul
sbb
ss
add
push
push
ss
jmp
in
insb
lea
bnd
daa
cli
inc
inc
jbe
add
cwtl
inc
gs
xor
xchg
cmpsb
pop
inc
fsubl
adc
repz
dec
dec
loope
pop
adc
aad
push
mov
out
lret
iret
add
les
inc
jl
call
hlt
pop
mov
fwait
int
test
rcl
adc
sub
lods
push
add
repnz
inc
fcompl
inc
push
mov
rorl
test
icebp
inc
sarb
xchg
pop
pusha
into
adc
jl
je
adc
sbb
push
push
mov
mov
fbld
xor
sub
and
xchg
push
and
dec
add
adc
ret
rolb
or
ja
add
roll
mov
dec
xor
xchg
jge
sub
insl
je
rolb
adc
sub
sbb
inc
adc
pop
pop
add
mov
fldenv
xor
in
pop
pop
mov
mov
and
arpl
push
test
addr16
pusha
or
and
ficoml
ror
lods
aam
jae
es
sbb
aaa
sub
adc
fsubl
jns
and
adc
testb
nop
movsb
sbb
mov
into
inc
stc
lea
icebp
clc
add
push
incl
and
jno
pop
shlb
outsl
lock
rep
mov
loop
mov
dec
icebp
lods
test
insb
xchg
jge
iret
and
aam
push
lds
xor
or
in
mov
fdivl
cs
cli
jle
lods
inc
xor
es
decl
or
mov
inc
pop
icebp
decl
jb
xor
lret
test
push
or
sbb
mov
inc
sub
jp
add
out
in
mov
pop
xlat
cli
mov
and
or
inc
and
repz
jp,pt
jne
pop
test
lds
dec
test
addb
jl
rcll
or
clc
sbb
push
loope
sti
in
sub
sbb
mov
clc
adc
jecxz
pop
out
xchg
les
jo
adc
clc
movb
aas
adc
dec
aas
xor
lock
dec
mov
stos
lcall
fucomi
leave
cltd
push
icebp
mov
data16
movsb
push
repnz
out
push
faddl
decl
xlat
hlt
mov
and
bound
pop
lret
xchg
mov
nop
daa
test
cmpsb
js
inc
pop
fs
in
adc
jg
int
loopne
ja
jecxz
daa
outsb
mov
mulb
mov
hlt
and
mov
nop
push
pop
movsl
sbb
ljmp
hlt
dec
fstp
sbb
fwait
inc
popa
mov
push
cld
es
add
pop
jmp
stc
mov
push
enter
push
cmc
loope
cld
loop
sub
mov
or
push
aad
xchg
xor
jg
fwait
mov
aam
fisubl
iret
es
leave
dec
and
sub
xchg
mov
dec
icebp
xchg
fcoml
add
pop
test
cli
jg
js
jle
cmp
add
push
cmp
pushf
xchg
popa
imul
mov
pushf
cmpsl
xchg
push
adc
repnz
mov
pop
test
mov
imul
add
xchg
dec
cwtl
mov
ljmp
xchg
jg
aad
aam
add
mov
adc
pop
cli
aas
adc
icebp
jg
cmc
xchg
xor
ret
xchg
and
xor
es
jo
fisubrl
hlt
jae
ja
insb
push
jne
cmp
adc
fsub
pop
jmp
cmc
pop
dec
pusha
mov
push
or
push
std
sub
cmp
push
and
fwait
rorl
add
imul
call
cmp
mov
or
push
inc
loope
lock
psrlw
mov
or
jne
sub
sub
stos
lds
addr16
and
inc
mov
pop
fbld
data16
xchg
and
add
fldenv
push
pop
mov
and
add
adc
fisttps
sub
ljmp
adc
inc
add
sbb
adc
loopne
sbb
xorb
cwtl
sbbb
mov
imull
adc
leave
add
mov
sti
out
mov
call
es
xchg
sbb
adc
and
and
out
adc
nop
or
and
and
pop
cld
fnstcw
outsb
scas
dec
jb
cmp
ret
and
shrb
sahf
lret
xor
push
dec
jmp
xor
fcomps
mov
dec
push
add
mov
hlt
mov
mov
or
shll
fs
sti
mov
ss
pop
scas
sbb
or
enter
or
dec
mov
mov
loopne
shrl
sbb
xchg
bound
stos
arpl
xor
inc
imul
xchg
pop
fbld
hlt
or
sbbl
mov
mov
imull
push
lds
sbb
or
jge
ret
push
loop
scas
inc
ja
xor
mov
aas
ss
cmp
lret
aaa
inc
lret
ss
loop
arpl
and
adc
ret
mov
negl
sahf
fsubs
or
jg,pn
bound
es
test
jp
aad
fisubrs
mov
les
mov
into
mov
pusha
pop
mov
ss
jo
mov
or
mov
inc
add
popf
int3
xor
jle
add
and
jne
adcl
inc
rolb
mov
and
shll
mov
movsl
repnz
popf
mov
mov
lods
inc
in
inc
mov
xchg
sbb
mov
inc
pushf
cmp
cld
xlat
adcb
sub
inc
rorl
jge
lods
adc
cmp
add
pop
test
sarb
and
negl
xchg
mov
imull
inc
ljmp
rolb
mov
add
movsb
push
nop
push
movsb
and
mov
pop
add
add
dec
adc
aas
testb
xchg
repnz
hlt
addb
adc
pop
imul
mov
enter
and
and
shll
dec
ss
mov
bound
jnp
aam
add
loope,pt
jo
les
add
nop
add
inc
lds
xlat
shlb
cmp
int3
and
cwtl
mov
aad
dec
mov
loope
jmp
insl
xchg
ficoms
sub
addr16
mov
inc
cld
insb
sbb
and
dec
test
adc
add
sub
mov
push
lret
jo
and
jg
sub
push
lock
sbb
mov
cltd
sub
mov
pop
jo
cld
aas
in
jge
out
lds
lcall
sbb
mov
lods
lcall
add
lcall
mov
or
call
punpckhqdq
int
or
int
jb
adc
push
cmpsb
pop
adc
inc
test
add
rcrb
ds
sub
cmpsl
xor
xchg
add
sbb
inc
orl
mov
mov
shll
popf
loopne
ljmp
movsl
cltd
shlb
add
xchg
loopne
mov
adc
mov
xchg
sbb
mov
jo
sub
xor
in
in
pushw
outsb
and
dec
daa
pop
jge
cld
or
push
call
pusha
enter
and
adc
inc
icebp
sbb
and
call
hlt
sub
jb
movb
add
ljmp
inc
fisubrs
shlb
das
loopne
adc
adc
push
data16
pop
push
loop
inc
lret
je
shrb
test
adc
adc
les
andb
fcoms
scas
rcrb
repnz
xor
data16
iret
pop
xor
sub
dec
mov
mov
fwait
enter
adc
xchg
mov
and
xchg
push
mov
add
cmpb
cmp
lcall
and
xchg
add
mov
lret
or
aas
pusha
mov
gs
add
jo
int3
es
adc
cmpb
inc
push
sbb
sbb
jnp
or
loopne
push
pusha
idivb
push
dec
xor
leave
pop
mov
setno
mov
sub
stos
enter
test
dec
fnsave
inc
and
cmp
les
jno
aas
add
pop
sbb
pop
xor
lret
fidivrl
add
andl
dec
les
lods
jl
sub
inc
or
dec
or
into
js
or
popf
pop
sub
push
xchg
gs
and
int
mov
bound
int
dec
fcoms
cmc
adc
and
les
pop
hlt
add
mov
add
pusha
mov
pop
add
or
sarb
or
xchg
pop
inc
js
pop
outsl
data16
aas
inc
lods
adc
dec
enter
xor
xchg
or
sbb
out
sub
les
mov
jb
shlb
mov
lds
sbb
add
stos
pop
adc
sbb
adc
xlat
push
mov
xor
cmp
adc
pop
psubusw
mov
push
orl
xor
inc
sbb
xchg
add
push
mov
xchg
push
test
push
lret
inc
add
out
sbb
adc
lods
pop
in
jmp
lret
adc
fstpt
and
outsl
les
out
ret
mov
pop
rolb
jne
jae
ss
jne
and
jne
inc
aaa
scas
mov
mov
hlt
push
sbb
inc
popf
cwtl
ljmp
test
loop
xor
adc
cmp
adc
jecxz
xchg
cltd
outsl
ja
inc
inc
stos
call
cwtl
test
mov
xchg
fdivl
push
pop
cmc
pop
or
test
adc
movsb
add
repz
mov
mov
pushf
mov
mov
ja
cmp
xchg
mov
rcrl
ss
inc
jnp
sbb
mov
inc
add
test
adc
fldl2e
mov
push
pop
enter
fstpt
cld
xchg
cmp
jl
and
mov
repnz
arpl
xchg
xor
shll
adc
mov
push
mov
shlb
xor
mov
add
adc
aaa
dec
cmp
dec
xchg
xchg
rcll
sub
daa
hlt
jl
xor
incl
mov
mov
mov
mov
jno
dec
cld
sahf
xlat
hlt
jl
sub
out
jns
insl
fisttpl
add
add
inc
add
dec
mov
lea
inc
cmc
adc
int3
jo
dec
in
aam
adc
cmp
fadds
lea
orl
mov
subl
cmp
jne
sbb
mov
dec
dec
ljmp
fcoml
push
or
pop
cs
pop
or
mov
mov
fimull
rcr
dec
add
pop
loopne
fmulp
cli
cmp
test
jae
pusha
inc
sbb
and
sarb
dec
push
arpl
ljmp
or
mov
sbb
mov
shlb
jo
call
mov
bound
test
jb
shl
pop
daa
enter
add
xor
dec
sub
push
add
pop
inc
xchg
cld
loopne
mov
adc
mov
dec
into
sbb
test
mov
sub
cmp
dec
dec
rolb
inc
inc
adc
xchg
mov
icebp
test
popa
popa
std
fsts
push
mov
mov
les
jge
or
dec
mov
and
cltd
add
lock
push
push
icebp
and
lds
jecxz
js
fsubs
shrl
sub
add
pop
add
add
or
and
dec
out
jo
cmp
mov
sub
sbb
dec
orl
roll
pop
xchg
clc
add
out
dec
fwait
int
mov
rcl
xchg
gs
cmp
cmc
pop
add
dec
mov
cld
cmp
xchg
jo
pop
clc
out
xchg
inc
fnstcw
pop
add
dec
pop
mov
psllw
mov
and
out
nop
add
test
dec
xor
pop
adc
push
test
imul
outsl
dec
mov
xor
cltd
mov
dec
pop
pop
lock
loopne
std
loopne
inc
mov
xchg
or
xor
loopne
shlb
scas
pop
adc
pop
sbb
add
mov
ds
or
mov
sbbl
shl
movb
cmp
out
mov
clc
mov
cld
fnstcw
lret
xchg
jge
stos
ljmp
add
add
fcmovbe
ret
les
adc
mov
mov
int3
insl
mov
cmpb
ffree
inc
hlt
loope
mov
shr
pop
daa
mov
mov
adc
aas
adc
add
cmp
pop
movsl
or
aaa
js
daa
add
hlt
xchg
sub
cli
and
and
cmpsl
mov
push
js
add
and
rcr
jns
js
mov
ret
dec
out
xor
stos
hlt
faddl
add
movsb
and
loope
aad
aad
sub
and
testb
imulb
pop
cmp
and
xor
push
mov
and
mov
xchg
or
int
xor
adc
hlt
lret
lcall
add
sub
nop
mov
sbb
fmulp
inc
mov
or
rclb
or
inc
cmpsl
into
repz
les
cmpsl
pop
sub
cmp
rcrb
cld
repnz
pusha
and
inc
sbb
mov
mov
mov
pop
jecxz
mov
jo
or
fnstsw
xchg
jmp
adc
test
and
inc
ficompl
fistpll
or
xchg
lds
sub
adc
jnp
fildll
and
and
std
add
dec
jmp
dec
or
pop
add
js
and
cmp
and
jnp
notl
lods
cmp
popa
popa
clc
dec
xlat
jmp
or
push
inc
push
xor
repz
movsb
pusha
lods
sub
xchg
sbbl
rorb
add
mov
add
inc
sbb
fsts
push
add
inc
adc
subb
push
inc
gs
add
fisubs
aam
ret
mov
mov
dec
add
sbb
jp
imul
add
or
test
add
inc
mov
stos
adcl
xorb
mov
decl
or
sub
sbb
dec
push
jno
dec
or
xor
test
push
outsb
imul
xchg
push
sub
sub
mov
das
mov
jmp
loop
arpl
roll
mov
cmp
arpl
adc
pop
and
push
adc
fsubs
sarl
iret
push
sbbb
push
push
add
cmp
stos
loop
inc
push
pop
xchg
xchg
push
fidivrs
flds
daa
shll
test
adc
inc
jnp
xor
add
add
mov
pusha
mov
adc
push
sbb
xchg
mov
add
adc
in
sub
cmp
pop
add
cld
sbb
mov
aas
and
ret
and
push
in
out
add
faddp
xchg
pop
shlb
dec
std
xor
lock
mov
daa
adc
sbb
pusha
xorb
daa
sub
shrl
adc
lea
outsb
adc
adc
pushf
iret
clc
push
into
mov
fcom
or
mov
jbe
mov
rorl
outsl
dec
jmp
pop
inc
cmp
xchg
and
movsl
test
xor
not
ss
rolb
push
dec
stos
inc
sbb
imulb
or
adc
mov
push
pop
or
sbb
add
jle
testb
aad
mov
inc
mov
cmp
neg
adc
add
pop
mov
pop
jno
xchg
arpl
fidivrl
pusha
mov
xchg
fmuls
push
scas
push
mov
test
clc
xor
sbb
jne
inc
sbb
fldt
dec
or
xchg
int3
and
mov
dec
rolb
inc
xor
and
jg
es
adc
pop
sbb
adc
sbb
daa
xchg
cltd
test
push
mov
cli
pushl
add
lret
loop
jns
cwtl
jns
sahf
xor
out
push
push
lock
pop
outsb
sub
loopne
dec
inc
mov
movsl
mov
shlb
outsl
add
mov
mov
inc
cld
pushl
push
cmp
mov
add
add
loop
mov
pop
add
mov
pop
jle
push
lea
pop
add
jg
push
fcoms
add
movsl
mov
add
add
mov
idiv
decl
xchg
push
loopne
sbb
inc
insl
xchg
mov
subb
sub
pop
notb
mov
or
sub
in
add
inc
mov
sbb
cwtl
lods
test
jb
jg
mov
jge
popf
mov
and
mov
and
cmp
adc
add
xor
fists
addl
jae
xchg
add
clc
addr16
cli
fistps
int3
nop
xor
and
wrmsr
mov
pop
sbb
adc
adc
out
popf
or
add
push
adc
mov
inc
cmc
and
bound
inc
mov
outsl
aad
sti
jns
pop
xor
xchg
scas
dec
out
add
call
andl
dec
adc
xchg
outsb
fistpll
and
pop
cmp
insb
jae
aaa
push
sub
dec
inc
popa
icebp
and
jg
add
je
add
ja
xorl
push
std
push
clc
inc
and
add
loope
or
or
mov
aaa
pop
jmp
outsl
test
inc
lcall
popl
push
dec
adc
ja
push
pop
and
push
in
inc
sarb
clc
cmp
out
push
jge
or
xor
push
pop
sub
sbb
push
outsl
push
cld
push
out
inc
lock
adc
incl
xor
jg
fstps
and
jae
inc
in
inc
and
movsb
dec
mov
dec
iret
mov
mov
daa
jmp
lock
jmp
inc
aad
shll
std
mov
in
push
jmp
adc
les
addr16
std
pop
and
insb
lock
outsb
test
adc
push
outsl
pop
call
inc
dec
jmp
xchg
xor
testb
andb
inc
add
pop
inc
fadds
mov
daa
sbb
mov
cmp
stos
mov
shll
shr
and
aas
inc
dec
push
and
add
std
addr16
or
sub
push
mov
dec
clc
enter
mov
nop
sub
xor
scas
mov
subb
add
in
and
mov
push
nop
or
enter
xchg
inc
xor
mov
dec
inc
inc
mov
fstpt
imul
cmp
in
fisubl
pop
sarb
mov
outsb
call
push
popw
add
mov
loop
adc
inc
sub
jp
test
dec
inc
or
adc
mov
test
int
subl
adc
inc
jecxz
jns
icebp
adc
pusha
and
add
insb
inc
ja
icebp
test
jle
or
add
xchg
and
pop
adc
or
and
test
push
in
push
push
add
inc
cmp
xchg
aam
or
adc
ljmp
test
test
int3
inc
inc
adc
shl
pop
mov
jg
push
adc
add
pop
pop
popa
test
bound
mov
inc
xor
fnsave
xor
adc
sub
cmp
dec
xor
jmp
lds
mov
or
out
inc
sub
jg
mov
inc
nop
int
sbb
fldl
pop
xor
and
test
xchg
dec
pop
push
insl
jmp
test
inc
aam
mov
outsw
sbb
shll
xorb
add
lds
and
sbb
les
adc
fistpl
inc
jmp
cmp
xor
pop
cmp
gs
shrl
cwtl
data16
xchg
in
or
cmc
lods
jp
sub
repz
adc
mov
xchg
or
scas
mov
inc
sub
dec
sub
aam
mov
add
int
les
mov
xor
stc
es
enter
pop
mov
call
test
scas
ljmp
push
mov
cmp
add
lret
cmp
xchg
xchg
enter
int3
lret
out
ret
js
pusha
or
xchg
sub
test
add
mov
test
not
je
adc
pop
shlb
mov
fs
fwait
mov
and
xchg
addb
ret
popf
addr16
data16
adc
add
mov
mov
daa
stos
push
cmp
xchg
jne
enter
jbe
inc
popa
dec
dec
addr16
and
leave
test
pop
mov
pop
or
insl
pop
rcr
inc
and
mov
and
jno
int3
and
dec
push
nop
test
sbb
jno
adc
lahf
jl
cmpsb
mov
jne
test
push
dec
add
push
sub
inc
inc
movsb
add
cmpsb
sbbb
sbb
int3
in
adc
xor
nop
arpl
add
xor
add
scas
inc
loope
les
push
mov
or
bnd
adc
loopne
and
inc
mov
popa
push
mov
mov
aam
icebp
push
loopne
sbb
cmp
adc
jmp
rcr
in
sub
repnz
mov
aam
pop
push
mov
cltd
fidivl
pop
inc
cwtl
loop
adc
aam
push
push
xor
into
or
adc
fildll
add
or
fimuls
sub
add
add
icebp
mov
arpl
iret
sub
ja
notb
icebp
jmp
sbb
and
ljmp
stos
orl
and
movsl
incb
push
xor
lock
mov
add
push
cli
inc
add
inc
mov
add
ja
outsl
xchg
dec
cmpsl
xor
mov
or
mov
pop
mov
call
sbb
arpl
bound
sub
outsl
je
sub
sub
movb
xorps
mov
mov
push
jno
popf
arpl
outsl
fistpl
out
test
sahf
or
mov
xor
add
push
mov
bswap
xchg
sbb
sbb
jb
fsubrl
fwait
aad
pushf
pushf
add
sbb
inc
outsl
xchg
add
cmp
pop
inc
fldl
push
rcrb
add
imul
adc
mov
and
test
test
sbb
shr
pop
push
xchg
fwait
aam
push
add
pushl
in
iret
ds
addl
inc
xchg
jg
mov
aad
add
mov
call
insl
fildl
mov
pusha
loopne
dec
incb
mov
sbb
mov
xor
andb
loopne
aaa
fists
mov
lock
int3
sbb
and
add
std
mov
cmpsb
or
or
pop
test
loop
dec
push
jle
sarl
mov
sub
sbb
inc
pop
mov
or
push
mov
pop
push
movsb
jp
ss
mov
shr
mov
ficomps
or
adc
dec
xchg
mov
and
push
mov
outsl
nop
mov
fs
fcmovu
mov
ljmp
and
fwait
mov
jl
mov
inc
out
and
popf
mov
jo
outsb
dec
jge
add
xchg
add
mov
inc
pushf
add
ja
pop
fwait
popa
xor
fsubs
aad
cli
xor
xor
std
adc
or
jne
ret
sti
outsl
add
std
pop
xchg
into
jo
mov
iret
jo
push
sub
shll
jo
sbb
cmp
ret
out
adc
push
test
repnz
cwtl
cmp
cmp
or
jle
loope
add
jo
sbb
sarl
sub
outsb
sbb
movsl
adc
mov
push
stos
fisubrs
push
pop
xchg
cmpsl
imul
into
cmp
or
clc
jmp
adc
pop
shr
lods
and
sbb
add
sub
pop
xor
mov
xor
xchg
outsb
inc
mov
pop
mov
push
sbb
test
stos
test
add
pop
xchg
or
or
into
or
cli
sahf
or
mov
mov
mov
xlat
push
add
mov
in
sub
add
int3
icebp
je
aad
sbb
mov
shl
ret
imul
sbb
mov
dec
xor
push
frstor
andb
xchg
jp
push
rol
mov
repnz
lretw
sub
mov
mov
mov
subb
mov
xor
in
mov
pop
test
scas
in
pop
push
outsb
mov
fistpl
outsb
testl
test
repz
shrb
mov
pushf
mov
pushf
gs
jl
or
mov
outsb
scas
mov
out
loope
cmp
adc
mov
sub
mov
loopne
call
popa
push
mov
ds
rcll
fildl
lock
push
mov
pusha
out
xor
hlt
pop
mov
es
jo
in
inc
or
insl
loop
push
popf
std
mov
add
sub
xchg
ss
adc
push
cmpsb
push
lock
adcl
mov
or
sti
xor
add
fmuls
mov
out
scas
fsubl
out
fmull
cmp
mov
orb
dec
ljmp
ds
adcb
jp
cs
sbb
add
inc
ret
mov
jg
aas
leave
ret
dec
pop
push
rolb
out
cmp
neg
aaa
sbb
sub
call
xchg
nop
popf
push
add
xchg
loope
jmp
aam
outsl
xor
mov
or
aam
loope
inc
call
mov
adc
addr16
rorb
sarb
sti
ljmp
imulb
inc
mov
bound
cmpsb
pop
sbb
xchg
clc
jg
les
xor
jnp
jbe
movsb
mov
dec
aam
cmc
ret
and
xchg
mov
pop
dec
aaa
mov
inc
mov
lock
ret
and
rcrb
cmp
clc
sti
ds
cli
shrl
aas
fwait
sub
jmp
popa
subl
add
jge
hlt
mov
cld
les
es
push
test
jo
mov
inc
cmp
pop
ja
inc
sub
stos
xor
aaa
addb
xor
mov
inc
std
lock
pop
add
pop
loop
add
push
in
shufps
pop
xchg
pop
out
fisubrl
ja
test
adc
mov
push
mov
inc
xchg
bound
xchg
movsl
fwait
lea
xor
mov
imul
sti
ret
pop
adc
cmp
pop
inc
lods
fcmovnbe
push
sarb
popa
or
lret
or
inc
daa
sbb
xchg
mov
mov
and
add
movsl
inc
ja
shll
push
push
cli
repnz
nop
push
ja
movsl
aaa
out
adc
dec
test
push
sub
out
mov
mov
add
lcall
sub
push
inc
mov
fdivl
add
ss
daa
mov
fisttps
jecxz
movsb
sti
ljmp
cmpsl
pop
adc
mov
ret
cld
arpl
stos
mov
mov
mov
enter
add
mov
mov
pop
jl
decl
fdivl
dec
insb
loop
sub
popf
loope
xor
push
sbb
xor
add
sahf
pusha
pop
stos
inc
mov
pop
add
inc
xor
in
mov
push
inc
gs
and
mov
mov
into
lds
or
fisubrs
pusha
adc
in
insl
mov
pop
scas
in
test
in
push
iret
pop
test
mov
push
call
pop
gs
je
inc
xlat
fistl
mov
push
pop
cmp
scas
lods
cmpl
into
cmp
in
push
or
cmp
loopne
fistps
sarl
lcall
adc
lock
clc
pop
adc
and
cmp
dec
xchg
push
js
jne
divb
mov
add
test
inc
inc
mov
pop
mov
lods
arpl
mov
push
icebp
push
mov
testl
push
ljmp
and
jns
mov
jae
mov
loopne
sub
cmp
test
push
add
jg,pn
push
bsr
ret
push
pop
adc
loop
mov
in
inc
push
lahf
imul
jle
mov
add
add
mov
imul
xchg
aad
mov
mov
sub
inc
iret
sbb
mov
in
adc
adc
test
fimuls
or
fldt
orb
rorl
pop
mov
push
mov
jecxz
loop
mov
lods
or
fbld
xor
push
sub
mov
into
test
rclb
mov
inc
mov
cld
shrl
adcb
outsl
sbb
adc
test
fcmovnbe
test
lea
mov
cli
les
mov
xor
bound
call
add
jg
cmp
sbb
lock
xchg
xchg
jmp
and
sbb
adc
les
mov
nop
mov
add
shll
mov
cmc
fnstenv
lea
mov
ret
inc
jl
inc
dec
std
push
cmp
or
or
jp
or
mov
test
fldenv
nop
push
test
and
dec
mov
mov
std
mov
sbb
das
push
inc
insl
jne
popl
sti
das
add
ds
mov
and
lret
aaa
fisttpl
dec
jbe
out
shr
movsb
mov
fmuls
mov
xchg
pop
inc
push
cmp
jg
jno
lods
iret
xor
movzbl
add
fsubrs
adc
test
or
decl
adc
fldlg2
std
mov
aaa
push
adc
jecxz
fdivrp
scas
sbbl
or
hlt
push
ja
adc
sti
cmp
andl
or
jmp
mov
pushf
or
rcrl
sub
and
add
push
aas
addr16
push
fdivr
out
test
dec
and
fs
dec
nop
mov
in
js
mov
mov
xchg
rorl
cmpsb
jmp
push
jnp
movsl
or
mov
orl
ds
jmp
xor
push
loopne
notl
outsl
incl
or
mov
mov
daa
nop
pop
mov
adc
inc
shrl
add
dec
sub
shl
ds
mov
xchg
adc
mov
cltd
sub
dec
dec
push
mov
adc
push
jb
outsb
push
xor
frstor
fists
pop
cmpsb
cmpsb
push
fidivs
pusha
jne
into
inc
xchg
dec
inc
in
mov
addb
fistpl
pop
jl
push
frstor
stc
clc
dec
mov
fildl
xor
jbe
ret
add
frstpm(287
push
jbe
xchg
lods
ficompl
sti
adc
fldt
or
mov
mov
shrl
pushf
in
out
fimuls
inc
insb
cltd
clc
pop
push
and
lods
adc
addl
rorb
or
lret
cmc
lods
jle
ja
sub
or
ret
xchg
sbb
test
pop
std
out
bound
arpl
addl
jge
cmc
fwait
xchg
popf
ljmp
push
shll
test
shl
popa
sbb
pop
jae
or
jmp
cltd
rorb
push
inc
sti
dec
sbb
movsb
imul
jg
mov
data16
loop
fcmovnu
jg
daa
popa
and
stos
scas
test
lcall
jmp
pop
rcrb
or
pop
std
mov
imulb
mov
aas
adc
cld
enter
pop
adc
or
jno
aam
es
mov
mov
jae
out
movb
or
arpl
xor
mov
xchg
sbb
sbb
in
mov
movsl
pop
xchg
dec
sbb
xlat
hlt
push
pop
mov
adc
xor
aam
mov
in
les
xchg
ret
add
sbb
mov
cwtl
xor
lahf
xor
jecxz
sbb
aam
inc
or
and
lret
mov
std
loopne
jmp
jb
mov
imul
or
pop
outsl
cmp
outsl
into
and
and
cltd
jmp
jae
fisttps
mov
pushl
add
mov
fs
xor
dec
ret
test
mov
push
cmp
popa
inc
or
push
call
push
outsl
in
xchg
out
jg
jns
mov
ss
sbb
fs
movsb
dec
into
dec
mov
dec
cld
pop
pop
mov
lods
mov
pop
std
pop
or
inc
or
lret
rorb
adc
fldenv
das
je
inc
addr16
movsb
scas
ss
mov
sbb
push
ror
mov
and
or
xor
test
mov
cmp
and
je
push
dec
add
std
incl
dec
popf
shrb
pop
cmp
jg
fidivrs
adc
dec
lret
mov
lea
pop
jae
dec
adc
lret
and
out
sub
repz
and
add
pop
call
ret
and
hlt
repnz
fdivrs
xor
neg
add
push
fbstp
jle
and
cmp
cmp
xor
and
inc
inc
loope
and
cmp
mov
outsl
filds
push
mov
jl
int
bound
mov
mov
ja
pop
ss
inc
inc
mov
xor
jg
icebp
mov
push
out
sub
sub
or
mov
sti
adc
xchg
out
inc
movsb
fsubl
insb
pop
sbb
nop
jp
loope
mov
xchg
icebp
ja
xchg
xchg
test
rcrl
fcoml
xlat
mov
imul
subl
daa
xchg
dec
cld
daa
inc
pop
sbb
repz
mov
and
pop
xchg
lock
imul
pop
inc
in
push
nop
add
test
cmpsl
add
push
cli
dec
popf
sbb
jmp
jle
icebp
pop
inc
sub
cmp
xor
inc
inc
outsl
pop
push
pushf
sahf
push
lea
dec
or
inc
and
mov
sub
mov
rorb
ret
mov
in
outsb
add
xor
adcb
ret
cld
in
ja
movsl
xor
cmp
das
mov
pop
imul
xor
sbb
pop
dec
push
fistpl
inc
xor
push
call
inc
xor
inc
push
shll
sbb
outsl
hlt
mov
mov
dec
cld
insb
es
sbb
pop
lods
push
sar
jg
gs
jmp
mov
inc
jb
or
sbb
pop
xor
fst
pusha
inc
nop
pop
mov
cltd
add
rcl
sbb
sub
mov
push
push
jge
xor
rorl
outsl
aad
hlt
das
outsl
xchg
xchg
xorl
xor
outsl
insl
xchg
clc
loope
dec
adc
inc
pop
in
and
test
and
inc
push
sbb
or
mov
mov
popa
or
nop
into
ret
ficoml
jb
lahf
je
xchg
and
jns
aam
bound
test
cmpb
iret
aad
mov
mov
adcl
sub
dec
les
arpl
add
aad
ret
sub
dec
pop
dec
or
xlat
and
hlt
in
mov
cmpb
arpl
sub
std
or
pop
icebp
orl
ret
fadd
orb
out
iret
fisubl
cmp
fcoms
fcomps
pusha
enter
sbb
xchg
push
bound
lods
sub
notl
push
pushf
xchg
mov
mov
mov
jmp
ret
lock
fwait
imul
dec
in
div
xchg
ret
subb
cli
test
lret
data16
cmp
mov
loop
iret
inc
add
out
xchg
add
scas
test
mov
inc
ds
test
adc
sub
add
xchg
sarb
xlat
xor
jp
pop
pop
or
aad
mov
test
sub
dec
cmp
mov
adc
push
mov
ud2
aaa
fwait
clc
mov
sti
dec
aaa
test
aam
mov
int
fildl
test
jl
mov
outsb
sbb
pop
pop
xor
xor
xchg
movsl
jge
and
js
movsb
int3
xor
adc
sub
xchg
mov
push
fistl
push
push
sub
mov
cmp
dec
and
js
rcl
inc
insb
aam
pop
add
ffree
outsb
sti
cmpsw
les
push
mov
add
sub
test
push
push
popf
and
shll
push
loop
adc
cmp
shlb
inc
shlb
and
cmp
test
lret
jbe
aam
cli
adc
insl
or
mov
sub
or
jp
cmp
fs
cmp
pop
and
je
push
mov
push
mov
push
jmp
xchg
fdiv
sub
dec
cmp
je
hlt
adc
fisttps
lock
pop
js
sti
or
aad
lret
mov
jecxz
xchg
add
inc
outsb
xor
shl
and
sbb
inc
das
enter
xchg
dec
inc
xor
call
hlt
add
mov
int
scas
das
mov
dec
inc
and
inc
xchg
mov
jecxz
aam
and
xchg
lock
js
pop
and
xchg
cmp
sub
shr
add
test
shl
inc
push
mov
jmp
or
jb
clc
test
add
sbb
dec
pop
mov
mov
adc
jno
ja
fstl
pop
add
adc
xor
xor
dec
and
pop
add
pop
add
daa
or
pop
or
add
inc
loop
icebp
xchg
pop
and
or
push
inc
mov
push
lock
shrl
idivb
add
sub
or
sbb
inc
sbb
or
jl
mov
inc
pop
ljmp
mov
icebp
inc
or
mov
inc
fwait
add
out
gs
add
icebp
add
push
push
cltd
mov
or
and
and
xchg
add
and
and
xor
jl
xor
xchg
jge
fs
xor
je
out
adc
inc
dec
shlb
sbb
adc
push
xorb
outsl
jbe
xor
imul
mov
xor
subb
push
add
mov
adc
ret
sub
sub
dec
adc
int
rcrl
add
int3
inc
xor
or
sbb
addb
mov
fldt
pop
adc
xor
loopne
or
popa
pop
pop
les
push
jg
mov
sub
movsl
xchg
lock
mov
add
xor
mov
add
aam
out
repnz
push
je
daa
xchg
sub
and
pop
or
jnp
sbb
push
cs
lcall
test
fs
sub
add
adc
mov
push
jnp
lret
and
add
mov
mov
test
pop
mov
loop
pop
cmc
out
dec
aam
pop
cmp
cltd
test
subl
mov
mov
sub
in
or
arpl
or
cmp
out
lds
lds
imul
loopne,pn
pop
sub
and
jns
shrb
loope
lret
pusha
mov
or
adc
test
lahf
inc
cmc
mov
mov
scas
inc
mov
repnz
lret
xor
mov
jo
loop
mov
scas
cli
pop
movsb
push
jp
lahf
sub
xchg
sahf
push
jne
enter
cmp
push
rcl
rolb
rcr
mov
stc
mov
lods
xor
outsl
lock
mov
shrb
into
pushf
dec
lret
in
mov
sub
cmp
add
adc
loop
and
icebp
shlb
shl
inc
push
insb
je
addr16
add
cmp
xchg
sbb
stos
inc
pop
pusha
add
push
pop
ja
es
test
out
ret
inc
dec
data16
inc
ds
mov
fwait
popa
sub
and
jo
sub
sbb
sbb
ret
mov
push
dec
frstor
test
addl
mov
imul
mov
icebp
mov
flds
mov
pusha
sub
add
inc
sbb
dec
das
xchg
pop
stc
je
call
mov
leave
mov
ja
lret
jns
clc
cmc
xor
sahf
loope
ds
pop
sub
mov
xchg
mov
cmp
mov
adc
ffreep
or
hlt
ljmp
mov
std
repnz
lds
insb
xlat
adc
mov
std
dec
xchg
leave
leave
fidivl
fucomp
imul
lods
in
shl
jle
mov
scas
fcomip
mov
mov
jb
and
mov
mov
add
out
rolb
pop
stc
orb
xchg
or
leave
rcl
push
mov
push
outsb
sub
stc
or
sbb
in
lds
test
outsl
jnp
movsl
adc
and
pop
cmp
dec
dec
dec
outsl
inc
jl
adc
subb
pop
iret
in
filds
cmc
loopne
xor
std
enter
decl
mov
pop
cltd
movsb
add
sbb
lcall
jnp
or
mov
mov
das
mov
ja
lds
bound
push
cmpsb
mov
or
popf
xchg
fsub
mov
pop
mov
int
mov
test
mov
add
jg
push
add
mov
or
insb
and
push
fbstp
xchg
not
addr16
test
push
mov
mov
adc
dec
pop
sti
xchg
loopne
sarb
mov
imul
icebp
inc
mov
nop
icebp
out
and
xchg
insb
jge
outsl
jp
add
xchg
inc
and
popf
lds
pop
lea
ljmp
push
jecxz
cmp
or
mov
cltd
imul
push
jp
and
arpl
cmpsb
mov
push
call
aam
pop
add
adc
mov
jb
mov
pop
push
stc
push
pop
idivl
dec
movsl
or
rorb
out
mov
bound
sbb
clc
mov
lds
mov
adc
stos
ret
mov
int
add
jg
sbb
lds
pop
outsl
push
cmpsb
adc
mov
add
lods
call
jmp
mov
mov
pop
in
mov
or
jo
mov
cmp
pop
in
loop
data16
dec
xchg
enter
mov
mov
push
pop
xor
fistpll
jb
and
shll
fstpt
jne
push
push
xchg
add
jno
das
sarb
ret
mov
vpaddsw
add
fistpl
and
subl
jno
sub
and
xor
nop
lods
push
inc
ret
dec
fimuls
pop
jb
mov
incb
outsb
add
test
mov
pop
lcall
sbbl
or
stos
ret
xor
cmp
mov
lea
test
addr16
pop
sbb
inc
mov
sub
sbb
mov
int3
mov
lods
xor
mov
mov
fsubl
mov
adc
jle
sbb
test
cmp
push
sarb
push
mov
and
mov
jbe
mov
in
xor
mov
sbb
push
cmp
in
mulb
mov
test
mov
lds
in
test
jae
pop
data16
cwtl
ss
add
inc
push
aaa
cmp
pop
ljmp
push
int
sti
insb
mov
mov
fbstp
sarb
andl
subb
add
pusha
notb
jmp
mov
mov
inc
cmp
sarl
scas
lds
and
jl
mov
cs
lods
cmp
xor
and
arpl
jp
ljmp
or
aas
push
out
lfs
mov
rorb
mov
cmp
hlt
mov
or
stc
jns
scas
mov
nop
inc
jge
sti
mov
leave
adc
stos
loope
inc
pop
call
call
js
aad
ret
jns
outsl
mov
sbb
fst
negb
cmp
test
add
pop
mov
stos
or
je
out
out
or
cmp
or
outsl
dec
cwtl
adc
outsb
inc
mov
aad
or
in
out
fwait
push
test
xchg
sub
mov
sbb
xchg
xchg
dec
or
psubd
rolb
ret
and
fistpl
jle
mov
dec
icebp
and
xor
dec
aam
cli
mov
xchg
cmp
mov
fisubrs
push
add
dec
mov
cmc
jecxz
mov
xor
mov
pop
js
fsubp
jmp
dec
cli
and
call
jo
sbb
add
pop
jp
or
test
sbb
stos
insb
inc
mov
lea
push
add
dec
shll
push
jno
mov
mov
sub
adc
push
sub
lret
das
bound
movsb
cmpsl
xchg
sub
pop
andb
xchg
mov
sbb
jge
sub
and
and
loope
mov
cs
mov
mov
mov
pop
lods
sub
cmpl
jmp
mov
mov
inc
lods
pop
dec
jecxz
lock
out
jb
and
and
or
sub
sub
fldenv
dec
inc
xchg
add
cltd
fisubs
outsb
sti
cmc
push
fldcw
orl
cmp
js
pop
loopne
pop
pop
dec
out
inc
shlb
add
loopne
pop
cli
pop
mov
jae
inc
andb
dec
into
jecxz
mov
and
pop
repz
aam
pop
aam
shl
cld
insl
mov
mov
push
add
cmc
pop
mov
and
push
test
mov
sbb
sub
fldl
mov
inc
adc
inc
or
sbb
xchg
sbb
rcrl
push
cmc
test
mov
jo
cmp
mov
xorw
cmp
mov
imul
mov
pop
xchg
or
ja
or
jge
xor
rcll
push
ret
push
mov
ljmp
notl
les
mov
shlb
cmp
jo
or
add
fwait
pop
jl
shl
sub
ljmp
faddl
or
cmc
cmc
inc
cwtl
mov
jnp
gs
push
stos
out
adc
negl
movsl
loop
loop
add
scas
fistpl
mov
mov
jmp
movb
mov
mov
add
pop
pop
and
cmpsl
mov
mov
lea
xor
pop
push
mov
movsl
cwtl
rol
sbb
mov
mov
outsl
push
mov
test
insb
add
mov
sbb
mov
fdivrp
and
lret
xor
fidivl
fnstcw
int
mov
rol
jnp
dec
in
jns
dec
xorl
pop
daa
jno
mov
test
mov
leave
mov
sub
test
sbb
push
or
pop
in
xor
ja
aaa
mov
movsb
inc
les
test
and
shll
mov
mov
cmp
imul
adc
cmp
pusha
xor
sbb
cmp
ds
push
xchg
mov
test
and
cs
xchg
imul
lahf
cld
or
orl
or
andl
mov
pop
es
add
mov
add
cmpsl
jne
pop
ret
je,pn
icebp
mov
negl
loop
inc
adc
push
outsb
sbb
add
outsl
fdivrs
aam
mov
fcmove
jmp
fldl
mov
in
out
aaa
add
push
adc
sahf
push
mov
notb
or
push
mov
mov
inc
daa
bound
lock
andb
add
mov
jnp
xlat
inc
test
aaa
pop
add
mov
cmpsl
daa
dec
shll
add
sub
addl
aaa
mov
rolb
sbb
inc
adc
outsl
xorb
test
out
adc
add
cmp
lds
wbinvd
and
add
test
cmpb
inc
adc
sub
sbb
push
fs
mov
sbbb
add
pop
call
cmpsl
loop
adc
loop
sub
push
cmp
sub
dec
adc
xchg
lret
xchg
andb
dec
add
es
sub
rorl
test
jae
imul
in
hlt
dec
push
std
mov
add
inc
adc
inc
outsb
adc
fisttps
and
addl
inc
andb
cmp
aad
aad
pop
inc
test
add
and
andl
jp
add
loope
xchg
inc
fcoms
add
in
jp
xchg
lahf
mov
dec
sbb
xchg
mov
adc
mov
pop
sub
add
dec
adc
pop
add
mov
sbb
stos
fwait
push
pop
push
cmp
sub
mov
xchg
imul
inc
stos
cmp
sbb
pusha
inc
subb
lea
and
and
movsl
add
hlt
outsb
sbb
inc
xchg
stos
mov
or
lea
icebp
xor
add
xlat
mov
xchg
pop
test
addl
inc
or
and
mov
or
dec
sub
or
pop
push
xchg
adc
pop
add
xchg
sbb
sub
sbb
dec
xor
shll
and
or
addl
xor
jo
in
out
idivb
dec
push
sti
jbe
add
adc
stos
movsl
roll
mov
ds
add
add
or
add
or
dec
mov
push
jno
in
lods
movl
out
sbb
add
je
mov
imul
push
lock
pop
ja
mov
dec
hlt
shl
pop
add
sub
mov
loop
inc
lock
dec
dec
push
dec
mov
sub
xor
sub
inc
rclb
rcll
adcb
adc
mov
cmp
inc
outsl
inc
int3
push
das
hlt
inc
test
lcall
test
stc
lds
mov
outsl
outsl
lock
mov
dec
lds
push
stc
xor
nop
cmp
fsubrp
xchg
aaa
fwait
ss
fistps
dec
mov
in
in
addb
add
mov
arpl
lds
and
push
movsl
mov
cltd
scas
aas
inc
andb
pushl
and
dec
xor
xchg
and
and
add
jo
adc
mov
inc
xchg
xchg
mov
push
fadds
sbb
icebp
xchg
es
sub
push
add
pop
repz
incl
movb
push
inc
pop
std
xchg
jg
imul
pop
ljmp
test
outsl
pop
add
sub
pop
fists
and
sub
ljmp
movsl
fisttpl
mov
ror
pushf
mov
popl
test
dec
lock
xor
jbe
lods
add
mov
jecxz
test
jg
loop
inc
andl
cmp
ds
pushf
sub
rol
pop
inc
aaa
add
insl
outsl
sbb
mov
jl
mov
and
mov
fildll
cmpsl
aaa
clc
ret
ljmp
sbb
or
test
mov
mov
inc
fnstsw
dec
jae
mov
cwtl
lds
sarb
mov
mov
js
nop
sbb
dec
in
push
xor
mov
dec
fucom
testb
sub
push
cmp
mov
or
jle
lahf
inc
dec
gs
sahf
data16
and
mov
or
sub
test
ret
mov
xchg
adc
sub
lea
pop
js
sbb
pop
inc
or
dec
shl
in
push
outsb
pop
mov
sbb
push
incl
push
dec
or
cmp
fisttpll
inc
pop
or
cmp
adc
cmp
nop
cmp
or
pop
into
popa
incl
adc
leave
pop
and
sbb
sub
sbb
cmp
in
lds
scas
and
in
insl
arpl
mov
pop
pushf
out
pop
lock
xor
mov
nop
sbb
andl
mov
cmp
pmulhuw
jl
popl
arpl
rcr
int3
sub
daa
jmp
or
call
in
sbb
mov
data16
test
pop
in
sub
mov
hlt
xchg
mov
cmp
mov
subl
sti
test
sub
addb
jecxz
mov
inc
xor
shlb
ljmp
xor
clc
in
lcall
dec
xchg
fstps
mov
fsubs
rorb
lcall
or
mov
inc
test
xchg
add
icebp
fsubl
add
push
fs
push
xor
outsl
push
and
pop
add
in
es
int
lods
mov
lea
pop
scas
lret
dec
in
mov
pusha
cli
xchg
xlat
or
cli
dec
or
sbbb
ror
hlt
xor
pusha
inc
xor
pop
and
add
stos
daa
iret
mulb
sub
dec
andps
add
mov
push
adc
fbld
inc
inc
fwait
push
sbb
ja
gs
mov
jnp
inc
shl
push
mov
push
xor
fisttps
popa
mov
xchg
les
cmpb
or
sbb
test
sub
push
jo
daa
push
fcomps
adc
sub
jbe
mov
add
leave
ret
xchg
jnp
dec
xchg
sub
sub
clc
push
mov
jb
lret
jmp
pop
and
xlat
out
add
imul
rcrb
aaa
addl
dec
sbb
cmc
call
mov
es
inc
lock
lods
inc
xor
jecxz
mov
dec
lea
test
jbe
push
stc
push
loop
mov
add
test
and
jle
repz
in
cmc
repz
sti
jg
sbb
clc
enter
pop
or
jp
ret
nop
inc
sub
cld
fadd
pop
outsl
inc
lahf
jg
dec
insl
lret
loope
ret
fidivrl
mov
cli
inc
lret
mov
xor
idiv
fldenv
inc
xlat
cltd
push
xchg
ljmp
icebp
rdtsc
insb
push
outsb
ffree
clc
xchg
xstore-rng
cmpsl
add
rolb
cld
popa
adc
sbb
sti
fsubrs
cmc
adc
loop
xor
daa
repnz
sbb
inc
mov
pop
hlt
mov
adc
lahf
shl
add
add
mov
dec
stos
xor
cli
incl
push
pop
push
push
mov
inc
sahf
xchg
cwtl
outsb
lret
pop
jg
call
adc
push
xchg
popa
pop
or
movsl
inc
stos
jnp
pop
or
jo
adc
inc
and
adc
dec
nop
loopne
decl
dec
es
ficoms
or
or
mov
cmp
ret
jecxz
xchg
neg
mov
inc
or
cmpl
dec
and
fstp
into
xor
sbb
mov
stos
fists
lcall
adc
js
aaa
aas
push
inc
hlt
pop
mov
leave
add
xor
fucomip
lods
inc
dec
ror
push
in
leave
ja
lea
dec
push
or
loop
sbb
jg
and
mov
outsl
or
shll
xor
shrb
mov
fimuls
jge
mov
fisubs
mov
aaa
clc
call
xchg
jg
adc
mov
lds
sub
xchg
or
dec
cwtl
es
or
and
mov
mov
mov
test
inc
mov
icebp
icebp
inc
gs
in
cmc
add
insl
or
and
bound
adc
out
lret
or
cs
and
cli
inc
pop
or
sub
js
sbb
sub
jb
adc
and
inc
das
jbe
cmp
mov
cmp
jmp
cmp
mov
jl
mov
fistl
mov
adc
sbb
adc
in
add
imul
rcll
lock
in
faddl
addr16
pop
push
xor
inc
pop
subl
sbb
testb
push
push
xor
adc
jnp
insl
dec
adc
mov
int3
popl
or
and
ret
xor
inc
ret
stos
sub
or
add
in
adc
aam
xor
inc
mov
jmp
or
ja
popa
loope
mov
xchg
adc
xor
xor
andb
xor
sub
rorb
or
xchg
mov
les
add
fsubr
decb
lcall
lcall
js
fwait
lcall
daa
add
addr16
mov
loop
stos
rorb
add
pop
mov
sbb
jmp
adc
int
mov
jns
and
add
pusha
sbb
or
les
sbb
fmuls
int3
or
add
push
sub
lods
outsb
les
jmp
js
aad
xchg
mov
rcll
adcl
rorl
jmp
mov
shlb
sbb
inc
add
and
cmp
dec
cld
dec
in
add
jle
lret
inc
add
sub
inc
shll
inc
add
cmp
pop
and
push
sbb
dec
lahf
popf
cli
add
sub
adc
sub
push
loopne
mov
mov
add
dec
mov
push
push
mov
add
pop
fs
xor
or
push
filds
and
add
cmp
jbe
and
lret
push
les
test
movsl
jle
mov
pushf
in
adc
push
and
data16
lahf
adc
arpl
or
add
lock
icebp
mov
ficoml
ja
push
sbb
call
sub
bound
sbb
dec
adc
lcall
lret
adc
data16
popa
mov
js
cmpsl
das
bswap
cld
sbb
scas
ror
adc
lods
or
dec
inc
les
ljmp
adc
jle
pusha
or
aam
and
nop
xchg
sbb
fwait
mov
fldl
dec
inc
mov
movsb
cmpsb
pop
xor
dec
sub
pop
inc
or
or
jl
pop
xchg
pop
les
or
dec
mov
out
xor
call
mov
aam
xchg
aam
call
addr16
sbb
xchg
out
mov
sti
xchg
std
adc
test
push
std
sbbb
mov
jno
mov
ficoms
mov
cmp
add
sub
push
popa
inc
dec
in
in
jecxz
push
stos
push
test
inc
nop
loopne
and
fisttpll
and
xchg
xor
in
push
inc
lods
mov
push
fwait
into
fdiv
xchg
pop
or
push
and
clc
adc
push
pop
fdivrp
les
andl
pop
mov
adc
aad
pop
aad
add
jno
sahf
push
fninit
inc
cmp
xor
mov
and
in
push
fidivrl
lahf
mov
cs
loopne
add
xchg
cmc
fsubr
dec
pop
add
add
jmp
and
inc
sub
mov
sub
enter
mov
test
or
dec
clc
pop
mov
jae
jecxz
in
insb
dec
add
cwtl
imul
pop
xor
dec
inc
loop,pt
rcrl
lret
outsl
pop
and
stos
cli
sbb
fidivs
xchg
stc
adc
lret
mov
icebp
or
rcll
xlat
xor
mov
cmp
lea
sbb
adc
cmp
mov
sbb
rcr
xor
hlt
xor
add
shrl
lcall
jle
push
pop
daa
or
and
push
loope
or
inc
test
push
sub
jb
mov
adc
subl
ja
scas
addr16
or
pop
rcrb
shlb
cmc
in
testb
sbb
das
or
out
mov
bound
adc
inc
mov
adc
loopne
jae
inc
jg
mov
cld
dec
hlt
mov
pop
call
in
roll
ds
fcmove
mov
mov
aaa
cli
lods
jno
xchg
add
jg
pop
cmpsb
inc
inc
add
sti
pushf
repnz
popf
clc
add
cmpb
sub
out
dec
std
scas
mov
lret
mov
arpl
xor
sub
cltd
mov
sar
or
movl
js
mov
mov
sub
pop
pusha
mov
add
fsub
movsl
shl
fildll
mov
jp
push
movsb
aad
shlb
xchg
sbb
mov
jbe
sbb
adc
xchg
outsb
lock
jg
add
add
push
jmp
add
outsb
cmpsl
int3
and
pop
mov
cmp
or
mov
mov
xchg
and
and
gs
adc
pusha
sbb
and
and
sub
test
sbb
mov
data16
jo
mov
pop
mov
aam
testb
add
push
adc
pop
mov
std
outsl
cmc
sbb
test
xchg
das
mov
push
mov
outsb
xchg
jmp
fistpll
call
or
jo
pusha
popa
incl
push
mov
cmp
cmc
mov
rcr
cld
add
add
ja
and
es
std
aaa
cld
pop
into
and
jg
sbb
sub
aam
dec
sbbl
outsb
call
aas
out
mov
movb
dec
scas
mov
jge
int3
dec
shlb
xchg
cld
sub
idiv
push
cmp
xchg
and
pushf
ffree
push
adc
int
add
cmp
fidivrl
jl
and
cli
hlt
add
ljmp
inc
test
ret
inc
jne
or
lahf
dec
and
pushf
arpl
cld
and
call
xor
add
add
arpl
cmp
add
inc
lds
filds
and
outsl
xor
faddl
xlat
or
sbb
test
mov
clc
add
mov
and
or
inc
insl
push
sbb
inc
filds
rorl
pop
inc
inc
cli
or
pop
add
lds
cmc
push
es
ss
sub
push
mov
rclb
and
and
add
adc
subb
sub
xor
in
add
sub
add
mov
cmp
cmp
pop
fistps
outsb
xor
xor
movb
sub
in
out
mov
sub
dec
and
jne
aad
fwait
xor
nop
mov
mov
xchg
roll
inc
add
dec
and
cmp
shll
push
mov
dec
push
push
adc
and
std
lds
inc
push
sbb
cltd
adc
pop
add
add
inc
or
out
jnp
ljmp
shrb
xchg
mov
push
mov
dec
pop
movsl
pop
sub
adc
xlat
movl
outsb
mov
fwait
jns
mov
orb
orl
xchg
adc
add
fadds
lret
xor
call
loopne
hlt
xor
stos
push
aas
mov
cld
sub
xchg
cmc
jae
cmp
xchg
mov
lret
xchg
jns
mov
push
jbe
inc
icebp
push
jne
or
jnp
lock
mov
and
xor
mov
call
and
adcl
or
push
mov
popf
adc
jbe
cmp
stos
pop
repnz
or
jno
ret
xor
or
hlt
inc
or
test
cmp
lock
dec
and
push
mov
aas
sbbb
mov
mov
mov
mov
or
das
sub
mov
loop
shl
mov
or
mov
out
inc
ljmp
scas
adc
add
test
adc
mov
xor
mov
inc
add
clc
dec
cmp
clc
push
push
xchg
jmp
adc
xchg
addr16
adc
scas
dec
xchg
dec
inc
lods
push
mov
or
cli
das
xchg
testl
add
fnstsw
mov
shlb
sbb
insb
or
inc
mov
mov
ja
loopne
mov
xor
pop
xchg
jo
dec
les
jne
and
fstl
outsl
ja
mov
ret
push
insb
mov
je
movsl
pusha
cmpl
or
and
cmp
into
loope
mov
inc
add
es
xchg
loopne
cmpsb
test
psrad
insb
dec
nop
jno
xor
pop
and
and
push
sbb
and
lret
cli
dec
xor
icebp
out
xchg
clc
mov
movsb
fisubrl
add
aaa
mov
cmpl
fildl
loopne
scas
mov
orl
hlt
add
mov
call
aam
sub
add
or
xor
adc
cmp
sbb
or
adc
cmp
lock
movb
push
iret
leave
mov
or
cli
mov
adc
sub
xorb
and
decl
arpl
or
gs
cltd
mov
push
pop
mov
sub
and
xchg
cmp
mov
leave
add
sub
testl
add
push
sbb
cmp
orl
lock
enter
out
clc
pop
pushw
or
int
les
push
add
push
ret
pop
jno
mov
lods
sbb
jne
and
movzbl
adc
addl
mov
sbb
sahf
and
ja
shrl
push
std
push
inc
adc
sub
nop
sbb
mov
xor
loope
sbb
stc
inc
or
cmpsl
ficoml
jbe
mov
push
jp
push
lea
out
test
cmpb
mov
adc
mov
fdivl
sarl
leave
and
sub
test
dec
lcall
xor
fistps
inc
xor
clc
pop
jmp
mov
mov
add
push
fcoml
aam
bound
jle
icebp
in
iret
lcall
add
cmp
xor
and
fdivp
and
add
int3
add
sub
stos
repz
dec
jle
sbb
daa
xor
push
lds
nop
or
test
stc
and
fs
repz
mov
lods
loopne
andb
les
add
adc
xor
jge
mov
mov
inc
les
pushf
xor
inc
testl
xlat
jmp
mov
int3
mov
negb
or
inc
fiadds
pop
and
dec
xlat
jle
add
mov
cwtl
sbb
shrb
adc
xor
pop
push
jo
add
add
and
icebp
push
shrb
adc
aam
js
mov
insb
fisubs
adc
adc
dec
loope
xchg
fistl
cmp
push
inc
xchg
add
int3
cltd
push
xchg
and
mov
adc
xor
cwtl
lock
adc
fdiv
jecxz
ret
insb
or
push
loopne
pop
cs
adc
cmovl
add
mov
adc
int3
or
cld
sub
inc
les
dec
dec
popa
inc
inc
mov
or
pop
add
or
mov
sti
cmpb
jmp
testl
fsubs
xor
xchg
inc
xchg
and
cmp
ret
xorl
pop
mov
je
cmp
stos
and
stos
cs
loopne
adcl
inc
pop
xor
xor
std
in
aam
pop
scas
pop
subb
add
sbb
push
shl
push
jge
js
in
pop
pop
movsb
loopne
pop
insb
jae
or
lods
dec
and
mov
lcall
mov
xor
push
sbb
mov
jecxz
jae
ljmp
xchg
dec
cli
fimull
and
push
std
rcl
test
sbb
mov
xchg
pop
in
ror
out
stos
jmp
pop
adc
add
push
and
dec
and
xchg
pop
mov
sbb
fs
push
dec
add
int
fcmovb
incl
xchg
call
sbb
bound
xor
ljmp
cld
add
bound
loopne
add
sbb
sahf
in
sbb
xor
or
add
xchg
cmpsb
add
xor
mov
mov
add
and
mov
mov
andl
sub
push
xchg
sarl
cltd
jecxz
push
xchg
jge
test
adc
mov
ret
test
cmp
fst
sbb
incl
loope
in
stos
add
insb
sbb
mov
xor
fstpt
lahf
or
negb
call
fistl
mov
jmp
iret
addr16
add
mov
mov
lret
cld
sub
repz
lret
pop
mov
xor
es
and
and
enter
pop
js
leave
push
or
out
stos
les
mov
xor
mov
pop
adc
insl
out
bts
xchg
mov
add
pop
inc
lcall
xchg
stos
cld
hlt
sbb
nop
mov
test
adc
push
push
cmpsl
lea
hlt
jmp
fld
adc
pusha
mov
ret
mov
lcall
sub
mov
dec
xchg
mov
subl
arpl
shll
lret
cmc
and
mov
xor
xchg
mov
les
jo
lahf
ret
xchg
clc
mov
iret
dec
stc
or
adc
mov
dec
xor
bound
dec
ja
mov
imul
cld
shll
adc
push
adc
add
dec
sub
mov
ret
mov
inc
icebp
pop
add
adc
inc
cmp
lea
das
inc
aaa
out
mov
sub
jae
repz
inc
add
into
dec
or
mov
and
fs
je
jle
or
cwtl
rolb
and
sub
mov
inc
xor
inc
add
cmp
in
lods
mov
adcb
xchg
jmp
shrb
xchg
mov
hlt
pop
or
add
inc
sub
adcl
xor
in
adc
push
push
dec
xchg
fwait
iret
inc
mov
cmp
loopne
sti
and
push
add
cld
inc
adc
adc
popa
inc
cmc
sbb
and
xor
and
dec
inc
aam
inc
ret
and
or
dec
scas
pop
inc
or
or
add
mov
ja
mov
adc
iret
jge
mov
adc
cld
xor
xlat
xor
stos
sarb
adc
in
cli
push
mov
mov
hlt
xor
dec
xor
xor
daa
and
in
push
mov
sub
add
lds
mov
mov
dec
xor
in
arpl
push
popa
add
sbb
and
icebp
loope
or
roll
xor
mov
jg
jo
rcrl
fisttpll
jg
push
aam
sbb
adc
shll
pop
arpl
cld
loopne
movb
push
and
jnp
addl
loope
xor
or
mov
add
and
push
add
aaa
jmp
sbb
push
dec
inc
lods
mov
pop
stos
xor
cwtl
add
dec
movsb
dec
pusha
and
inc
lcall
xor
sub
mov
out
mov
adc
bound
lds
nop
js
cli
push
rcrb
push
mov
mov
push
inc
cs
stos
add
jnp
shrl
aam
call
jecxz
push
test
enter
sub
and
cmp
jae
push
jl
mov
lds
xor
addl
rolb
lock
or
lcall
sub
cli
cmp
xchg
cs
loope
add
dec
js
jno
push
stos
outsl
adc
je
add
pop
mov
cmp
and
xchg
jne
jae
mov
leave
movsl
jmp
fmuls
adc
jne
addr16
xchg
inc
push
iret
fimuls
outsb
int3
and
pushf
xor
sbb
sbb
call
dec
mov
rol
mov
js
add
in
lahf
mov
mov
jmp
test
jmp
sbb
les
xorb
sub
jnp
push
push
cmp
lret
enter
in
lds
xchg
or
pop
push
xchg
mov
jge
mov
xor
out
shlb
popa
pushf
es
add
lds
adc
in
std
mov
hlt
jl
pop
test
mov
mov
je
mov
out
push
xor
add
jmp
xorb
sarl
test
ja
cmp
out
add
or
rorb
mov
dec
add
into
stos
mov
inc
and
inc
cmc
adc
decl
mov
pop
sahf
inc
xlat
jb
loopne
outsl
pushw
xchg
psllq
mov
iret
push
sbb
push
sub
roll
out
mov
xor
and
mov
test
sub
add
inc
scas
jmp
loop
popa
mov
xor
jge
test
outsl
add
or
inc
pop
jno
sarb
incb
sub
xchg
mov
xchg
bound
ljmp
cwtl
aaa
jl
or
sti
add
dec
xor
decb
mov
mov
mov
dec
adc
pop
mov
lods
ja
xchg
js
movl
lahf
aaa
adc
loopne
push
mov
sbb
mov
in
dec
cmp
adc
inc
or
repz
mov
inc
pop
call
push
fidivrl
pop
popa
data16
lcall
push
mov
nop
push
and
mov
jno
mov
dec
or
sar
jg
in
flds
test
or
push
cmc
add
dec
dec
adc
cmp
cwtl
xchg
nop
cmpsb
cmpsb
outsb
dec
or
mov
adc
ret
cmpsb
ficoml
inc
sbb
std
test
shlb
xor
adc
insl
mov
adc
das
hlt
fists
icebp
test
jecxz
and
dec
inc
jg
and
scas
insb
or
sub
mov
movb
test
imul
aaa
or
add
add
in
sub
clc
loop
jae
popl
pop
adc
adc
fcompl
mov
out
jg
lret
push
test
hlt
xor
mov
sbb
sbb
adc
sbb
orb
loopne
cmp
xor
je
fucomi
and
mov
in
jl
jbe
add
inc
jae
or
jno
fisttps
sbbl
cmpsl
loopne
test
or
cwtl
dec
jnp
je
adc
push
loopne
loope
jl
inc
sub
movsb
testb
fbld
inc
xor
push
sbb
add
push
pop
add
and
mov
call
mov
mov
aam
ror
aad
push
push
push
lds
mov
mov
sub
inc
subb
out
mov
mov
mov
and
pop
cmp
xchg
lret
fldcw
add
push
hlt
or
sbb
push
inc
sbb
sub
movsb
fmull
lahf
mov
inc
hlt
movb
or
pop
and
and
loope
outsl
fdivrl
call
icebp
pop
sub
outsl
cmc
fidivl
call
es
xor
lds
xchg
mov
add
insl
pop
and
pop
mov
fisubrs
ret
adc
test
fistps
or
sbb
inc
hlt
iret
ljmp
bound
ret
scas
lods
dec
and
imul
mov
mov
pushf
push
cmp
insb
pushf
int
mov
incb
or
rcrl
movsl
pusha
or
fs
in
or
pop
loop
push
mov
adc
mov
movsl
or
adc
add
iret
mov
push
orb
jg
loop
das
sub
xchg
lock
jo
stos
shrb
hlt
cmpsb
fwait
and
js
loop
dec
jge
jmp
pop
in
inc
push
shlb
push
mov
mov
cmpsl
and
jno
and
xor
sbb
sbb
ja
pushl
loop
add
cltd
mov
dec
jl
pop
pusha
cmp
cmpsb
dec
ret
mov
fwait
arpl
add
and
mov
and
nop
shrd
add
lea
outsb
or
negb
adc
mov
cmp
jg
incl
test
or
mov
push
jge
lods
decl
adc
sub
cmp
addl
cmpsl
lahf
mov
lahf
jge
sub
or
std
ljmp
cmp
sti
ret
fimuls
test
mov
mov
jmp
je
ret
ljmp
loop
cmpl
pop
cld
adc
mov
insb
mov
push
out
jo
mov
and
sub
push
sbb
or
pop
cmp
mov
mov
insl
jbe
addb
pop
adc
loop
inc
and
sti
xor
adc
xor
int
js
out
jns
cmp
and
inc
test
testl
ret
jno
mov
push
clc
inc
push
aad
push
add
fistpll
mov
es
outsl
dec
stos
or
mov
mov
adc
je
push
push
inc
add
cmp
js
cs
mov
mov
stos
std
cmp
adcb
cs
push
loope
ljmp
mov
pop
jb
push
arpl
aaa
rclb
arpl
dec
jne
cmp
mov
ss
dec
mov
xchg
stos
inc
ss
cmpsb
mov
pop
jbe
add
add
das
inc
pop
mov
lods
xor
test
ljmp
fbld
ss
inc
xor
xchg
inc
pop
pusha
sar
scas
and
cld
inc
push
mov
call
add
out
cmpsb
stos
lahf
push
or
sub
mov
stos
mov
inc
jns
mov
pop
xchg
fidivl
cmpb
add
or
push
in
pop
mov
xchg
jp
aam
pop
mov
sbb
sbb
mov
lock
push
jne
xlat
mov
pop
stos
stos
pusha
push
jne
push
or
mov
xchg
pop
aad
fld1
je
mov
mov
outsl
fldl
rol
inc
and
pop
in
cmp
arpl
filds
jns
out
mov
mov
movsl
outsl
into
push
test
add
lret
inc
fbld
and
mov
push
mov
or
mov
xchg
dec
aaa
xchg
cmpsb
add
fists
in
lock
mov
dec
push
enter
ja
ja
inc
push
loopne
sub
dec
ja
cmp
push
sub
and
test
sbb
xchg
pop
data16
cmp
nop
enter
adc
jecxz
jnp
push
or
mov
xchg
pushl
rclb
imul
inc
inc
adc
lea
dec
das
mov
and
mov
test
jmp
pop
mov
repz
js
mov
lea
imul
in
rcrb
loope
orl
icebp
mov
add
sbb
cmp
push
mov
fstp
icebp
insb
dec
xchg
js
pop
push
dec
adc
sbb
jne
pop
push
push
jmp
je
or
mov
push
int3
divl
jb
inc
insb
scas
ficompl
inc
xor
and
mov
jbe
jo
outsb
add
pop
add
push
cmp
test
mov
push
mov
int3
inc
dec
push
jle
popa
stc
xchg
add
ja
pop
mov
push
adc
jns
loope
fwait
sbb
cs
lea
inc
lea
mov
dec
jnp
hlt
inc
mov
push
xor
pop
jne
dec
xchg
idiv
pop
push
adc
xor
mov
test
cmp
clc
outsl
push
xlat
mov
fisubrl
cmp
cmp
push
adc
imul
sbb
inc
in
out
stos
pop
or
pop
aad
or
rclb
fisttpl
scas
sbb
xor
insb
frstor
cmp
mov
invd
mov
andl
mov
cld
jp
cld
lahf
pop
mov
mov
and
negb
mov
sub
xchg
cmc
push
jmp
inc
jno
xchg
push
pop
or
xor
and
push
data16
xchg
mov
and
sbb
es
inc
add
xor
dec
or
fsubrp
gs
dec
add
pusha
loopne
lock
jmp
mov
popa
pop
mov
out
shl
cli
das
xor
xchg
mov
pop
sbb
inc
enter
loopne
xchg
test
inc
outsl
xchg
inc
hlt
scas
mov
adc
or
in
add
adc
out
xor
or
push
or
ret
dec
hlt
sub
rolb
das
out
add
sbb
call
dec
push
hlt
cli
addr16
and
shll
or
add
add
addr16
add
add
cmp
in
inc
sbb
and
xchg
cmp
adc
pop
adc
mov
idivl
into
popa
lock
adc
stos
add
stc
lock
fmulp
inc
dec
mov
xchg
dec
or
cmc
stos
flds
in
rol
push
outsl
notb
or
stos
push
hlt
push
leave
iret
andl
dec
leave
xor
and
sbbl
sbb
dec
mov
and
sub
popf
addb
adc
movsb
cs
aas
pop
fwait
adc
inc
cmp
xchg
add
push
xor
out
or
movsl
daa
inc
inc
aam
mov
sbb
push
jno
inc
cmpsb
loopne
pop
imulb
adc
xchg
add
pop
ds
lock
leave
test
sbb
mov
inc
adc
add
aam
mov
lds
popf
mov
in
mov
sbb
arpl
inc
pop
int
in
sub
push
inc
adc
xchg
scas
inc
pop
pop
mov
dec
mov
loop
sub
add
and
out
nop
stos
call
popf
mov
sbb
faddl
or
test
pop
test
ljmp
xor
test
aam
outsb
pop
push
adc
test
cmp
add
imul
inc
cmp
test
sub
add
pop
adc
daa
xor
sbbb
loopne
adc
inc
mov
xorb
inc
lock
dec
mov
js
mov
push
insb
dec
inc
mov
and
xchg
loop
lods
jmp
pop
inc
test
inc
xor
and
adc
pop
dec
call
cmp
fiaddl
outsb
addb
sub
lahf
dec
cwtl
add
popf
popf
sub
xchg
das
sub
lock
cwtl
mov
sub
out
cmpb
add
sub
add
jge
add
divl
cmpsb
push
inc
and
mov
sbb
ret
inc
fadds
add
xchg
cli
and
push
cmpsl
cwtl
xor
adc
cmc
push
xor
or
push
sbb
rolb
stc
lods
jns
lcall
mov
js
push
adc
jl
or
sub
dec
aam
xor
pop
cmp
fcomp
and
loopne
xor
js
push
mov
push
popf
mov
and
aaa
cs
fisubrl
adc
jne
pop
fisubs
popa
mov
test
cltd
popf
lahf
popf
test
aas
stos
cltd
fsubs
pop
push
adc
xchg
shll
or
add
loop
shl
in
lods
cmc
out
addb
ja
lods
cmp
sbb
rcl
xor
leave
loop
push
or
addl
inc
or
and
orl
ja
ljmp
ret
and
push
cmp
fldt
rcll
mov
mov
inc
push
mov
fistl
or
in
pop
rorb
inc
icebp
es
mov
xchg
sub
adc
push
mov
in
sub
mov
repnz
ljmp
xchg
fcompl
xchg
test
mov
repz
popa
dec
icebp
sbb
pop
pop
aam
sub
pusha
cli
or
jb
icebp
mov
pusha
in
sub
adc
push
push
xchg
fxch
add
xchg
jmp
push
sbb
xor
cmp
insb
sub
cli
inc
add
mov
cmp
and
lock
and
dec
lds
mov
mov
inc
sub
xchg
or
sbb
add
xor
call
push
or
or
add
popa
adc
lcall
ss
insl
pop
inc
push
inc
sbb
insl
jbe
inc
fdivl
loopne
into
pop
movsb
es
lock
add
repnz
push
fldl
cmpsl
lea
xlat
inc
fdivl
mov
mov
jg
add
call
jp
sti
addr16
jge
cmc
push
decl
xor
push
bound
cli
fists
mov
push
mov
fdivr
dec
jo
mov
inc
sbb
sub
sbb
inc
test
push
idivl
mov
sbbb
pop
cmp
insl
call
imul
push
rolb
rcrb
xchg
movsb
mov
jne
fdiv
xchg
xchg
insl
insl
aaa
sbb
rcl
push
cmpsb
stc
lcall
or
ret
stos
xor
into
imul
dec
pop
adc
xchg
and
sbb
xchg
adc
out
add
mov
pop
shlb
or
inc
das
mov
insb
cmp
xchg
cmpsb
sub
cmp
add
data16
je
sub
dec
mov
mov
clc
test
xchg
or
pop
xchg
mov
xchg
push
cli
add
jb
mov
jne
fdivs
cli
les
arpl
inc
inc
add
stc
popf
adc
push
jle
gs
shr
and
insb
xchg
push
enter
insl
test
repnz
xchg
enter
push
pop
pusha
cli
sbb
mov
jo
mov
cli
aam
jecxz
cld
inc
inc
jnp
xchg
sbb
xchg
xchg
les
stc
outsl
mov
and
mov
mov
nop
mov
ljmp
dec
jbe
mov
push
addr16
cli
scas
push
lcall
popf
dec
pmaxsw
push
push
xor
xor
pop
std
insl
add
movsb
add
clc
adc
dec
in
mov
pop
inc
jp
invlpg
pop
shl
cwtl
cli
lret
ljmp
sbb
sbb
adc
mov
mov
popa
add
and
mov
xor
fistpl
xor
insb
subb
pop
pusha
hlt
divb
and
sbb
push
sub
incl
jne
lock
nop
jne
mov
fcmove
repz
add
inc
fsubrs
dec
sub
mov
je
sbb
mov
outsl
sub
dec
mov
pop
mov
pop
scas
jae
negb
es
add
outsb
mov
pop
mov
push
add
rolb
ljmp
inc
mov
pop
jo,pt
and
aaa
or
xor
loop
jl
cltd
lret
test
int3
xchg
xor
jbe
pop
mov
movsl
jle
mov
lods
cmp
test
insl
loope
jle
dec
daa
push
xchg
mov
repnz
shl
pop
mov
sub
dec
mov
pop
push
fldt
nop
scas
sbb
pop
cmp
jecxz
loop
pop
stos
in
int
jmp
lock
cmpsb
subl
insb
mov
cli
adcl
add
cmpsl
aam
add
fistl
ljmp
push
pop
orb
xor
mov
adc
dec
jno
fwait
jno
xchg
xor
dec
mov
sbb
sub
add
idivl
test
lahf
push
add
in
push
xchg
in
test
cmc
outsb
sbb
mov
je
push
ja
dec
call
insl
inc
add
push
call
jo
push
sub
fidivrl
mov
jno
or
fwait
sub
sarb
scas
pop
mov
mov
sub
aaa
cmp
mov
push
jmp
das
xor
mov
push
mov
fmull
xchg
sub
aam
outsl
push
mov
dec
cmp
xor
jecxz
jbe
cmp
enter
cmpsl
insb
cmp
fbstp
imul
push
repnz
aam
cmc
stos
stos
jg
std
push
enter
add
scas
mov
inc
push
jmp
fstpt
aas
imul
fwait
leave
dec
test
addb
outsl
mov
pop
dec
pusha
pop
pop
cs
cltd
lret
popaw
sub
jmp
fs
mov
lds
jl
in
test
adc
xchg
adc
mov
aaa
mov
push
sub
decl
les
add
movsb
dec
push
pop
xchg
jo
mov
xorb
mov
aad
cmp
mov
mov
push
xchg
in
fbstp
mov
test
and
mov
push
subl
sub
jmp
inc
loop
fcomps
lock
mov
fdivs
arpl
push
jae
loop
pop
loope
aas
ret
lret
lds
jmp
inc
xchg
add
call
mov
mov
mov
push
pop
add
xlat
add
pop
inc
or
into
add
mov
addb
icebp
adc
pop
imul
xor
aaa
or
test
loop
sub
pop
mov
in
cmpsl
aas
or
popa
add
and
inc
or
fidivrl
xchg
lods
faddl
or
mov
int3
outsb
cmp
dec
add
ret
aam
inc
fcompl
popf
inc
dec
xor
pop
out
dec
or
fbstp
dec
je
cmc
jns
dec
xor
mov
into
mov
mov
call
cwtl
mov
jp
and
bound
out
fs
in
jb
mov
jb
mov
or
mov
and
add
fildl
pop
les
aaa
test
xchg
dec
adc
mov
sti
push
jmp
inc
and
mov
sbb
cli
movb
inc
or
fwait
push
dec
std
sub
jle
ret
stos
das
cmp
aam
rcrb
mov
ljmp
pop
mov
rolb
mov
or
jmp
enter
xchg
cltd
aam
icebp
pusha
adc
ret
fcmovnu
out
add
cmp
das
ss
push
pop
inc
mov
insb
fcomps
and
push
flds
adc
mov
std
jmp
mov
in
xor
xlat
jo
fildl
ret
pop
pop
rorl
orb
mov
mov
js
cmp
xor
sub
repnz
rorl
xor
mov
xchg
ljmp
aaa
push
adc
icebp
sbb
ds
xor
loopne
das
add
add
push
add
lds
test
add
aad
adc
iret
in
fisubrs
inc
fsub
ret
stos
pusha
enter
and
outsl
add
decl
rorl
pop
sbb
mov
js
cmpb
cmp
js
data16
jecxz
mov
stos
and
aam
cmpsb
inc
mov
and
subl
pusha
rclb
int
add
inc
aas
cmp
mov
aad
or
in
xlat
stc
lds
inc
cld
ljmp
or
shll
mov
fadds
mov
inc
sbb
and
gs
mov
sub
std
jg
mov
lret
pop
add
in
and
or
fsubs
add
sub
sub
fbld
fldl
add
mov
cli
or
mov
cs
movsl
sub
in
pop
mov
stc
sbb
cmp
jnp
adcl
in
mov
cld
jg
xor
nop
mov
loope
mov
sub
jecxz
jge
mov
je
test
ffreep
fwait
mov
lods
call
ficompl
pushf
xor
inc
jae
pop
sbb
ret
popa
mov
mov
xor
pusha
jecxz
push
lcall
aaa
mov
fisubl
fwait
push
in
cmpsl
sbb
rcr
jle
je
sahf
in
and
push
mov
rcll
pop
insl
push
sbb
fsubrl
jg
jmp
iret
or
mov
adc
mov
cmp
mov
jle
inc
cs
dec
push
xor
fstpt
mov
or
pop
push
ret
mov
aaa
jle
bound
cmp
popf
xor
sbb
stos
and
loopne
inc
push
in
repnz
jmp
sbb
xor
pop
jge
push
inc
cld
ret
imul
pusha
loop
negl
mov
pop
jo
stos
jbe
pop
add
repnz
imul
cmp
mov
mov
xor
mov
adc
je
cs
mov
dec
es
decl
adc
icebp
xchg
mov
add
filds
mov
jle
add
mov
in
mov
adc
lret
aam
and
inc
int3
mov
dec
add
push
je
inc
lods
add
dec
mov
xchg
jge
sbb
inc
lret
cld
fcoms
add
xlat
or
add
jnp
and
mov
lock
xchg
dec
sub
inc
aad
push
add
push
cld
push
loopne
into
mov
adc
or
inc
xor
xchg
jo
mov
in
std
les
cmp
xor
sbb
fdivs
jp
xchg
pop
ds
pop
inc
add
leave
sub
pop
push
inc
sub
test
fwait
jp
mov
add
adc
dec
jb
and
mov
adc
and
into
adc
sub
bound
adc
pop
sub
push
cmp
out
add
sbb
lret
lret
cld
add
cld
xor
cmp
loop
adc
jp
subb
pop
inc
mov
out
sbbb
in
add
pop
mov
push
cmp
pop
jge
or
sahf
test
les
insb
jecxz
inc
add
loop
fcmovne
cmp
add
mov
shll
dec
insl
sub
fsubs
add
sub
pop
mov
push
jae
in
mov
das
push
xchg
sub
mov
loopne
or
adc
mul
push
or
pop
add
add
shrb
sbb
and
sbb
je
fucomi
imul
sbb
outsl
idivb
sub
jne
mov
testb
andb
lcall
push
inc
mov
mov
sbb
xchg
adc
and
xchg
add
cwtl
mov
and
dec
sbb
cmc
push
push
push
aad
inc
scas
mov
adcb
add
loope
pusha
cmp
fmul
xor
jb
add
jp
js
or
adc
lock
cmpl
es
movsl
add
mov
mov
push
sub
daa
iret
or
arpl
int
fisubs
pusha
push
add
ret
sub
es
rcl
addl
pop
xchg
xchg
mov
pop
adc
xor
loopne
inc
cwtl
insl
dec
aam
and
cmp
bound
testb
and
outsb
icebp
adc
call
fisubrs
jo
jmp
fcoml
sti
inc
movsb
push
xor
aaa
xor
lods
sub
repnz
mov
dec
sbb
jb
dec
sub
dec
jbe
cwtl
stos
sbb
lea
call
stc
inc
pop
call
sbbb
sub
hlt
and
stos
inc
in
mov
push
cmp
es
insl
adc
inc
lds
rol
or
adc
xchg
loope
les
rcll
sbb
inc
jnp
mov
add
xor
ljmp
fcmove
ja
add
scas
cmp
add
orl
or
mov
dec
xchg
add
mov
test
sbb
xchg
jne
push
fiaddl
fists
xchg
mov
xor
mov
push
outsb
sub
stos
sbb
dec
aam
adc
dec
add
stc
xchg
mov
fisttps
add
or
jge
sbb
out
ss
sbbb
lret
cld
scas
mov
push
adc
dec
rorl
ret
lock
sub
loope
xchg
fisttpll
std
or
add
je
nop
or
inc
bound
les
xchg
rorb
fsubrl
scas
in
inc
or
adc
ret
push
lods
scas
loope
imul
int3
push
adc
and
into
xchg
or
dec
arpl
inc
add
add
mov
aas
push
and
out
out
add
test
ret
jns
push
ret
inc
out
js
movsb
sbb
test
sbb
and
push
push
sbb
add
add
outsl
cmpsl
mov
call
outsb
jno
push
push
xor
jbe
dec
add
add
mov
loopne
ja
xor
aam
fs
mov
pop
aam
subl
inc
or
sbb
inc
mov
andb
lods
pop
mov
mov
pop
pusha
and
pop
inc
push
sbb
pushl
push
mov
sub
divb
and
adc
test
adc
add
movsb
add
stos
repz
inc
mov
push
std
inc
es
mov
xor
mov
and
pop
pop
bound
adc
aas
mov
pop
in
pop
jmp
or
shrl
cmc
jl
shlb
xor
xchg
sub
fucomip
cmp
lds
adc
add
push
popf
push
lcall
fstpl
mov
int3
xchg
js
mov
mov
inc
sar
test
ss
adcl
cmp
scas
or
lock
add
xor
dec
mov
testl
icebp
sub
out
and
sub
xor
out
loope
sbb
clc
rorb
loop
sub
outsl
enter
out
pop
cmc
outsl
adc
stos
imul
sahf
adc
je
fists
in
pop
fimull
shlb
mov
cmp
sub
add
subb
inc
jns
sbb
cli
stos
imul
in
mov
push
mov
jecxz
add
ret
icebp
mov
cmp
pusha
add
push
mov
out
jl
subb
fucomi
test
lock
int3
scas
sub
push
in
inc
mov
push
xchg
clc
aad
sbb
andb
push
test
adc
cmp
outsl
mov
xor
xchg
add
add
ret
dec
jmp
xchg
mov
dec
pop
mov
jg
fsubrl
pop
or
insl
fisubrs
std
data16
sbb
iret
sub
daa
adc
lea
aad
cs
lea
mov
cmp
out
inc
mov
mov
out
sub
enter
push
loopne
and
fnsave
pop
loop
pusha
sarl
lods
sub
mov
pop
and
inc
push
add
shr
mov
ljmp
fistl
leave
hlt
adc
loope
cs
outsl
mov
pushf
adc
insb
out
adc
mov
scas
mov
or
popa
hlt
add
xor
inc
sbb
pushf
adc
fnstcw
jle
in
stos
popa
xor
outsb
inc
sub
and
adc
sub
adc
filds
test
rcrl
add
icebp
adc
inc
or
add
pop
sti
cmp
test
mov
scas
pop
push
enter
enter
dec
adc
addb
stos
xor
jne
hlt
and
pop
das
adc
hlt
pop
mov
cmp
xchg
push
pop
fadds
add
scas
push
mov
inc
sbb
lock
fnstsw
mov
das
inc
or
add
jp
inc
inc
test
mov
pop
adc
xor
and
or
test
push
adc
add
cmpsl
negl
inc
cs
or
repnz
push
sahf
ljmp
and
adc
pushf
mov
xor
inc
push
mov
xor
inc
mov
int3
aaa
dec
jg
in
lea
inc
push
sub
imul
push
and
xor
test
xor
mov
xchg
sbb
cwtl
jg
add
adc
out
dec
xchg
cmovl
adc
sbb
in
xor
stos
sbb
dec
int
xchg
mov
adc
sub
or
shrl
addr16
jle
sub
jg
add
hlt
jecxz
cmp
das
out
xchg
into
call
xor
push
fdivrs
and
push
push
call
cmp
andl
mov
mov
xchg
fcomps
aaa
stos
mov
pop
mov
push
lock
push
jge
ja
out
mov
in
mov
enter
cmp
pop
mov
mov
jl
dec
inc
sbb
and
adc
movsb
lods
push
not
mov
aam
roll
ret
sub
jecxz
cld
xchg
add
push
and
jge
in
pop
dec
inc
aad
test
ret
xchg
inc
xor
fwait
sub
xorb
scas
adc
add
call
add
xchg
or
add
test
loope
sahf
sub
subb
hlt
jl
dec
rclb
pushf
pushl
sub
push
cld
lcall
sub
adc
sbb
sub
add
insb
mov
dec
xor
mulw
stc
mov
mov
lock
cmp
inc
xchg
add
sbb
adc
jg
sbb
int3
mov
lcall
mov
mov
cmp
in
mov
cmp
push
or
xor
sbb
mov
mov
filds
dec
cmpl
stos
fcompl
push
add
jp
mov
sub
mov
lods
inc
mov
roll
sbb
adc
jns
sarb
jle
pop
dec
or
jno
fadds
inc
push
xor
bound
xchg
cmp
inc
adc
cld
call
pusha
loop
fs
push
pop
imul
subl
dec
stc
movsb
adc
add
xor
mov
dec
fwait
jns
pushf
sub
sbb
inc
cmp
mov
sub
add
pushf
add
sbb
roll
push
sbb
cmp
icebp
gs
xchg
scas
pusha
addb
cli
mov
or
xor
add
sub
inc
xor
xor
test
call
bound
mov
adc
mov
adc
addr16
adc
leave
inc
stos
dec
int3
sbb
inc
test
push
add
push
je
push
les
sub
aad
pop
sbb
enter
ljmp
push
mov
add
das
dec
mov
std
insl
subl
das
mov
mov
jne
add
aad
clc
mov
sti
ljmp
dec
mov
jae
stos
add
imull
pop
push
hlt
loopne
mov
jo
pop
push
mov
and
and
scas
scas
mov
sbb
test
add
stc
adc
movsl
sbb
adc
cltd
cltd
and
rcr
fimuls
or
mov
stos
es
hlt
into
in
cmp
or
mov
aaa
adc
movaps
adcb
cmpb
mov
jae
mov
jmp
mov
mov
jle
mov
leave
stos
xor
or
lea
mov
adc
push
sub
call
ficoml
pop
and
testb
jae
lahf
mov
mov
inc
popa
mov
sbb
or
and
decl
adc
lock
and
hlt
lahf
rorl
dec
insb
loop
scas
aam
test
icebp
sub
sbb
js
cs
mov
outsb
add
repz
inc
cmp
mov
inc
cli
scas
push
setae
lcall
popa
stos
ljmp
sbb
push
sbb
ffree
loopne
scas
inc
repnz
das
cli
dec
test
and
ret
sahf
lcall
mov
insl
insb
movb
or
fcoms
and
jbe
aad
cli
jo
inc
xor
adc
pop
sub
cld
mov
xchg
movsl
enter
scas
or
mov
lods
and
dec
xor
fcmovb
jg
dec
and
andb
ret
stos
loopne
rcrl
xchg
push
xchg
inc
jmp
xor
jge
or
pushf
pop
movb
fdiv
xchg
adc
es
lea
lods
dec
xor
outsl
pop
jge
inc
sbb
dec
inc
dec
mov
jmp
stos
in
sub
sbb
adc
push
mov
cmp
dec
adc
push
or
cmp
scas
mov
mov
mov
and
mov
mov
jae
push
cmp
mov
mov
sbb
add
adc
cmpsl
jp
aas
or
in
jae
ljmp
stos
mov
cmpsb
out
rclb
cld
fwait
std
popa
fwait
cmp
dec
push
jmp
mov
dec
stc
or
gs
inc
sbb
jo
dec
xchg
subl
shl
add
cmp
sub
mov
add
stos
arpl
data16
icebp
and
inc
add
xchg
push
add
inc
loop
jo
pop
mov
test
mov
cli
mov
mov
aad
lea
sbb
xchg
or
out
outsb
aam
xchg
xor
pop
or
int3
or
fsubrs
adc
adc
flds
in
mov
xor
ror
xor
loop
mov
andl
and
in
or
decb
inc
xor
adc
xor
lret
add
inc
mov
push
adc
in
add
xor
adc
and
mov
inc
mov
es
je
push
cmp
das
hlt
add
add
shrb
or
inc
hlt
daa
inc
fbld
add
lea
adc
inc
sbb
loopne
add
scas
ret
aaa
xchg
mov
loopne
adc
rclb
mov
pop
test
in
int
sti
dec
adc
push
push
or
or
fadds
stos
inc
mov
jns
mov
inc
or
cmp
ss
adc
pop
sbb
popa
mov
mov
push
pop
push
shrb
and
ret
sub
push
inc
lock
and
repnz
mov
pop
adc
loop
out
mov
push
mov
sahf
divb
mov
outsb
xchg
bound
pushf
pop
fdiv
pop
inc
sub
or
mov
add
sub
cmpb
inc
or
dec
push
adc
mov
ret
bound
clc
loopne
adc
inc
and
or
inc
mov
fdivs
test
mov
adc
mov
into
cmp
xor
xorb
pop
shlb
int
mov
mov
mov
and
and
test
adc
add
adc
sub
mov
mov
or
out
in
add
daa
ja
push
icebp
sub
inc
fs
loop
mov
rol
fists
cmp
inc
jno
dec
ljmp
adc
in
pop
push
adc
adc
adc
jbe
add
mov
inc
xlat
xchg
xor
in
pop
mov
mov
add
and
sbb
dec
lret
add
test
xor
in
movb
xor
ljmp
inc
adc
outsb
sahf
fisttpl
push
sbb
aaa
lock
in
ds
ja
mov
jge
test
xorl
leave
or
arpl
je
mov
inc
fisttpl
mov
ljmp
push
lock
lods
cmp
negb
fisubl
mov
out
fidivrl
enter
adc
les
mov
adc
in
or
sbb
fildll
mov
mov
mov
or
adc
sbb
aas
icebp
out
add
inc
ss
loope
icebp
pop
mov
je
adc
push
inc
inc
or
arpl
pusha
mov
jmp
push
out
mov
clc
sbb
test
ja
dec
inc
mov
leave
mov
add
add
mov
sti
fistps
lret
outsl
mov
shlb
test
addr16
mov
jno
inc
sbb
or
mov
inc
test
mov
hlt
stos
es
orb
fcmovnb
mov
inc
inc
xor
gs
test
in
fnstcw
sub
es
pop
sub
adcb
test
imul
mov
add
mov
fucom
xchg
xor
pop
fisubs
cwtl
mov
mov
cmpsb
adc
mov
add
or
aad
aas
popa
mov
jg
add
imul
subl
scas
insl
out
cmp
jge
rolb
imul
push
adc
jo
repnz
scas
addb
lcall
lret
mov
rol
sbb
fldt
lret
adc
sbb
repnz
mov
out
push
xchg
mov
pushl
inc
jmp
inc
popf
or
lods
or
push
add
andl
mov
mov
and
fstpl
aas
stc
mov
sbb
test
sub
xchg
and
add
ljmp
aad
push
mov
lock
adc
inc
xchg
adc
scas
cmp
add
lcall
sbb
flds
insb
mov
fsubl
andl
mov
ret
hlt
mov
fistl
inc
xor
loop
inc
mov
lods
inc
pushf
pop
fisttpl
test
ds
cmp
movsl
es
aaa
fadds
outsl
sbbb
add
cmp
iret
hlt
jle
mov
out
test
add
shrl
je
or
adc
fidivs
ret
addr16
inc
cmp
cmp
rclb
push
mov
add
test
jmp
sub
rclb
jp
add
mov
fbld
sub
jne
add
pop
loopne
in
push
fmull
addb
lcall
fdivrl
push
cld
ret
rorb
jne
jns
xor
pop
add
ja
stos
adc
or
adc
sbb
xor
cmp
daa
mov
pop
pop
hlt
rol
rolb
icebp
add
and
addr16
test
add
sub
xor
bound
adc
lods
orb
add
sahf
cmp
in
jns
insb
xchg
adc
rcll
into
cmp
fdivl
mov
sub
pop
sti
inc
dec
adc
out
adc
and
sbb
or
and
add
push
test
pop
adc
cmp
int3
mov
adc
loopw
add
sarb
adc
je
adc
mov
shll
adc
xchg
cmp
call
ficompl
addl
and
dec
and
and
sub
in
sbb
cmp
add
inc
adc
jge
and
jp
test
mov
inc
jmp
add
in
cmp
mov
in
mov
sub
lods
mov
adc
sbbl
sbb
cmc
mov
add
and
aam
adc
dec
jnp
mov
push
cmp
xchg
test
icebp
lret
push
incl
cwtl
sarl
push
pop
cmc
jo
sbb
adc
xchg
mov
test
inc
shl
sub
sarl
call
xchg
pop
push
faddl
mov
icebp
test
or
sbb
or
push
roll
jge
js
add
incl
movsl
fsubp
push
shl
sub
mov
push
sub
das
cmp
imul
rorb
movhps
sbb
sbb
lcall
mov
insb
out
pop
and
adc
hlt
ljmp
sub
push
lcall
stc
stos
les
hlt
push
popa
xchg
nop
and
mov
sub
cmpsl
inc
xchg
test
outsl
lock
js
into
bound
std
out
and
test
and
sbb
xchg
pop
add
jae
es
jno
sub
xchg
test
shrb
int
enter
addl
xchg
pop
mov
aaa
cmpb
xchg
mov
out
xor
xchg
and
push
ljmp
cs
xchg
add
pop
sub
jae
or
stos
outsb
out
jg
ret
or
call
cmp
inc
add
jmp
pop
insb
jp
mov
maxps
subb
jg
orb
outsb
sti
xor
cld
stos
mov
jmp
inc
push
xchg
jg
hlt
das
js
adc
ret
mulb
imul
aas
pop
out
pop
pusha
cmp
leave
pop
add
cmpsb
lds
pop
movsb
ja
jb
xchg
mov
or
in
push
aad
or
mov
mov
loop
inc
shl
dec
jbe
sbb
nop
lods
popa
sub
push
pop
arpl
outsl
outsl
lock
cmp
les
mov
andl
xlat
push
cmp
xor
dec
test
push
loopne
pusha
and
sbb
arpl
sbb
dec
fdivrl
call
sbb
mov
pop
mov
test
fistpl
int3
dec
test
dec
mov
mov
jns
loope
dec
xorb
adc
cli
xchg
mov
sub
adc
sbbl
or
add
mov
sbb
cltd
push
movsb
xor
subb
mov
rcrl
aaa
dec
adc
dec
pop
sbb
mov
mov
inc
insb
orb
stos
fst
cmp
xor
and
add
aaa
addb
nop
movsb
das
add
or
add
adc
cmpl
fstl
add
mov
rcrb
dec
pop
adc
dec
adc
ror
mov
push
in
int3
inc
shrb
ja
inc
push
stos
add
mov
push
shlb
rcr
or
push
les
cmp
pop
inc
jl
shlb
dec
lock
jno
adc
nop
add
rorb
and
mov
xchg
add
jnp
xor
push
sub
fistpll
andl
or
mov
lret
xchg
xorb
add
repz
clc
xor
or
subb
outsb
sub
add
cltd
jmp
adc
into
mov
mov
lods
push
and
inc
add
out
sub
cmp
rcll
inc
xor
or
fcoml
rol
sub
cmp
arpl
add
sub
push
loope
shlb
inc
add
and
mov
test
dec
hlt
xchg
sbb
or
mov
lahf
arpl
daa
inc
roll
push
daa
pop
push
dec
movsb
out
clc
clc
inc
xchg
inc
push
xchg
pop
adc
inc
sub
aas
insb
fcoms
mov
clc
xor
push
cmp
jle
loopne
inc
or
add
push
das
dec
daa
ret
or
sbb
jg
inc
les
pop
cs
adc
pop
and
adc
ja
cmp
lock
add
add
and
fsubs
sbb
stos
xor
outsl
push
sbb
inc
ss
cli
xor
lahf
dec
mov
push
call
add
ret
out
xchg
enter
inc
push
inc
jo
add
aam
cs
sbb
insl
and
into
sub
add
sti
enter
push
sub
or
mov
lock
aad
mov
shl
push
pop
inc
rcrb
paddq
dec
enter
fimuls
test
daa
fadd
test
loop
inc
xchg
iret
xchg
add
and
or
je
in
int3
outsb
das
pop
js
std
and
nop
mov
rorb
mov
add
xchg
sub
aam
pushf
enter
je
xchg
pop
hlt
sbb
inc
stos
ljmp
pusha
add
cmp
inc
and
jo
push
push
or
mov
mov
int
add
enter
dec
pop
ds
mov
pop
sub
push
jecxz
xchg
cmp
sub
aam
aaa
lea
int
pop
out
or
mov
xchg
icebp
sub
push
cmp
adc
mov
jbe
or
or
cmp
or
lea
insl
mov
xor
jmp
xchg
xor
sub
inc
int3
nop
test
dec
xor
add
cmc
pop
mov
and
and
pop
add
aas
mov
dec
inc
sbb
push
mov
push
mov
insl
addr16
lods
cs
add
mov
inc
jle
aad
sub
mov
fadds
xchg
inc
sahf
mov
mov
aam
inc
iret
mov
out
or
adc
mov
cmp
adc
ljmp
jp
mov
ja
xchg
pop
test
stos
jbe
out
xchg
inc
mov
xchg
mov
push
loopne
ret
push
hlt
push
adc
mov
outsb
outsl
aam
insl
loop
jo
clc
inc
pop
lds
cmp
je
push
sub
lcall
call
dec
in
repz
inc
in
pusha
mov
clc
add
outsl
or
sti
dec
int
mov
out
add
dec
fldl
dec
popf
mov
lock
call
inc
mov
adc
stos
imul
je
aad
push
push
call
or
add
mov
adc
pop
popf
cmc
shll
mov
pop
fisubrl
cmpsl
jae
push
inc
aad
dec
test
mov
subb
call
pop
fidivrl
rcrl
mov
xor
out
subb
dec
xor
adc
add
mov
mov
adc
mov
aaa
data16
std
push
sub
or
sbb
jnp
pushf
test
loope
lret
adc
cmpsl
test
jno
leave
insb
add
mov
push
dec
mov
and
sub
inc
add
fimull
and
dec
push
push
ss
insl
push
inc
insb
es
js
aad
scas
xchg
das
outsl
pop
pop
xchg
orl
adc
mov
in
dec
add
push
jno
popf
lods
insl
and
cli
jo
inc
push
xor
mov
pop
hlt
mul
sub
sahf
ret
pop
mov
jnp
or
cmp
fsts
dec
adc
addr16
notb
cmp
imul
adcb
or
call
mov
and
fstpl
ret
mov
mov
jl
rcr
fnstsw
mov
pop
cmp
repnz
cmp
cld
pop
add
pop
icebp
push
je
lcall
packsswb
movb
jo
or
aaa
mov
sarb
les
pop
xchg
movl
daa
add
adc
test
outsb
add
mov
lock
jp
popa
dec
xchg
fadd
pop
xchg
mov
and
fbstp
sbb
and
jmp
mov
xchg
adc
mov
dec
push
aas
sub
stos
mov
int
sarl
or
jo
sub
bound
inc
jnp
add
jl
xchg
adc
xor
push
xor
mov
ljmp
outsb
mov
or
pop
daa
loop
push
dec
rcl
js
push
insl
mov
andb
out
add
add
dec
jl
mov
mov
adc
jg
loopne
dec
andl
imul
pop
jmp
xor
or
adc
fistl
fnstsw
rcrb
lea
push
add
ja
fldcw
push
jecxz
decl
sbb
pop
mov
xor
jae
adc
in
movsl
jl
outsb
lds
adc
mov
xchg
jns
jmp
add
fdivl
shlb
push
xchg
push
cmp
sbb
fsubl
mov
xor
lcall
call
stos
into
add
push
mov
jmp
insb
sbb
fnsave
mov
mov
add
jne
mov
push
dec
iret
adc
and
shll
xor
fimull
imul
xchg
fwait
and
in
clc
mov
sbb
cli
in
cs
fildll
or
imul
jmp
ds
add
aas
popa
rol
mov
adc
test
sub
or
rclb
mov
call
mov
rcll
sub
sub
mov
gs
mov
icebp
pop
test
or
and
or
pop
cwtl
push
mov
inc
and
jne
std
sub
loope
xchg
aad
inc
das
pop
pop
int3
jo
ljmp
in
inc
stos
push
ret
adc
and
notl
leave
loopne
xchg
arpl
or
adc
imul
or
push
mov
xchg
repnz
daa
mov
dec
pop
push
fidivrl
and
addr16
call
dec
add
jmp
cwtl
movsl
hlt
or
dec
jmp
pop
inc
mov
cld
repnz
or
das
scas
jne
aas
jl
ljmp
stos
loopne
push
ret
popf
pop
sbb
inc
pop
test
jb
xchg
inc
mov
fcomi
mov
shll
fwait
adc
xchg
mov
add
arpl
call
in
push
cmpsl
into
or
sti
mov
imulb
mov
mov
std
fiadds
jne
repnz
adc
test
sbb
and
pusha
or
rclb
pop
mov
push
push
inc
pop
and
outsb
add
add
xchg
sbb
mov
test
add
popa
mov
mov
adc
push
and
imul
add
fwait
push
and
gs
inc
sbb
je
adc
iret
or
andb
loopne
mov
shll
adc
sbbb
xchg
int
sub
xchg
loop
jl
rolb
out
cmp
or
mov
pushf
fadds
aad
or
adc
das
push
ja
and
aad
popa
mov
pop
aam
ret
fcompl
or
add
xor
sub
lahf
push
pop
sarb
cmp
ja
push
sub
mov
dec
xor
mov
sbb
mov
sbbl
shl
sub
add
jo
sbb
outsl
pop
adc
adc
pop
jp
add
sti
inc
mov
inc
imul
mov
push
movsl
inc
xchg
ficompl
dec
fmull
push
xor
clc
mov
push
push
xor
in
iret
or
and
inc
mov
xchg
mov
mov
jne
adc
cld
ljmp
mov
jmp
imul
cmc
out
out
push
inc
fsubp
pop
outsb
aaa
icebp
push
test
push
jb
inc
out
cmc
push
ss
adc
push
lock
sbb
call
push
or
shlb
sbb
mov
sbb
sub
cmc
cmp
jl
sub
dec
sub
add
fs
cmp
mov
rcrb
dec
scas
out
mov
jg
inc
add
out
bound
js
prefetchw
cwtl
push
popa
sbb
push
and
and
jnp
nop
xchg
icebp
pusha
mov
xor
lock
inc
xchg
lds
adc
dec
fbstp
mov
xchg
test
push
mov
les
outsl
ja
mov
ret
jnp
and
push
shlb
mov
add
lds
jg
mov
mov
sbb
pushf
dec
xorb
or
push
in
pushf
imul
mov
inc
icebp
sub
rorl
shll
mov
cli
pop
pop
inc
hlt
cwtl
cmpsl
jl
push
imul
add
cmp
pop
mov
or
mov
mov
fisubl
sub
jecxz
add
add
dec
jnp
mov
sub
faddl
pop
fwait
mov
and
aas
mov
js
sarl
arpl
loopne
jns
sbb
jl
sbb
insl
inc
sub
lea
cmp
cmp
xchg
clc
lcall
pusha
mov
push
mov
add
push
inc
lods
and
jl
pop
pushl
fiaddl
lcall
call
cld
mov
pop
or
and
fcmovbe
ret
push
sahf
cwtl
fwait
mov
push
outsl
hlt
in
dec
adc
data16
pop
mov
xchg
inc
push
out
outsl
xor
andb
pop
adc
mov
jg
sub
cmp
incl
rol
push
mov
push
push
pop
mov
movsb
lcall
pop
js
ret
jp
je
adc
add
sbb
cmpsl
or
mov
popf
cmp
adc
imul
xchg
lock
mov
and
clc
ja
test
call
mov
fistps
inc
mov
dec
adc
add
aaa
or
jle
xchg
mov
pop
dec
ja
sub
cs
rcr
cmp
inc
adc
and
add
scas
test
fdivr
ja
jbe
jecxz
int3
cmp
mov
xchg
bound
jmp
jnp
sub
scas
sub
popf
add
adc
stos
xor
mov
push
cmp
dec
mov
xlat
adc
test
notb
aas
aas
push
fnstenv
gs
adc
sub
jno
xor
dec
fbld
pop
or
idivb
sub
pop
xor
hlt
repnz
mov
dec
mov
push
call
mov
jnp
mov
stos
mov
xor
sbb
mov
xchg
cld
fcomip
dec
cld
pop
adc
jp
cs
out
shrl
daa
pop
call
push
mov
std
das
xor
lds
out
ljmp
adc
out
outsl
stos
pop
sbb
adc
out
pop
xlat
push
mov
hlt
pop
mov
fldt
mov
arpl
outsl
test
pop
outsb
and
add
jge
jecxz
cmpsl
ds
scas
sbb
dec
subb
cmp
mov
lods
inc
decl
outsl
jp
mov
jle
push
push
enter
mov
push
nop
pushw
adc
dec
xor
adc
sub
outsl
fbstp
ret
add
cld
sub
shlb
pop
cmpsl
ljmp
jbe
add
fisttpl
dec
pop
push
lods
aas
push
lock
jg
cmpsl
xchg
movsl
outsb
das
push
aas
jne
jp
aaa
sahf
aas
jl
cltd
mov
ret
sbb
cmp
cmpsl
xchg
adc
fbstp
pop
pushf
add
sub
or
ror
fmuls
outsb
sbbb
cmp
and
jle
loope
adc
mov
lods
jbe
aad
scas
aad
fbld
adcl
adc
clc
lahf
arpl
add
push
push
clc
in
lock
or
cmp
jecxz
mov
pop
cmp
cmp
dec
mov
or
std
pop
ljmp
mov
push
rorl
jp
sbbl
incb
repz
imul
add
mov
xor
test
fdivs
adc
pop
or
faddl
pop
sbb
pusha
aaa
add
pop
jmp
mov
rcr
mov
xchg
ret
outsl
and
iret
push
and
add
xchg
incb
movsb
xor
xor
mov
lock
loop
scas
sub
int
xchg
decb
mov
test
test
jl
cld
outsl
ljmp
xchg
hlt
mov
inc
xchg
dec
push
dec
add
jb
std
ljmp
jg
xor
push
loopne
and
push
xchg
inc
jp
jg
mov
insb
test
pop
jns
pop
cmpsl
xor
jge
adc
lods
cmp
in
adc
aad
bound
es
jo
ret
push
lock
cmpsl
fstpl
test
jg
cmp
or
ds
jno
shlb
stos
in
pop
jne
stos
dec
daa
and
or
clc
dec
xchg
and
lret
sub
sti
fstpt
mov
test
dec
insl
push
jbe
test
mov
mov
or
fsubrs
leave
aam
aad
pop
xchg
mov
rcll
clc
mov
dec
fs
arpl
lret
mov
cmp
lcall
cmp
sahf
or
push
jg
mov
call
les
cmp
jae
ljmp
gs
mov
adc
pop
notb
je
scas
fisubrl
adc
dec
and
xchg
sub
mov
ret
mov
cmp
jb
push
xchg
cs
sub
mov
sti
pop
add
lock
stos
sbb
lock
sbb
pop
or
call
inc
inc
xchg
ja
frstor
cmp
push
stos
add
pop
int
fimuls
lret
pop
loopne
adc
push
jecxz
dec
rorb
mov
mov
push
xor
clc
jo
mov
test
sbb
jno
test
out
inc
pushf
cltd
js
sarb
and
inc
mulb
push
xsha256
cmpsb
nop
mov
jo
cmc
pop
sbb
or
lret
pop
fadds
add
mov
and
fists
out
mov
std
hlt
pop
push
imul
data16
add
bound
xchg
les
bound
xor
jne
and
aam
xchg
or
xor
mov
jle
mov
sbb
sbbb
popa
sbb
fstpt
mov
and
out
inc
stos
mov
scas
jno
mov
out
push
mov
adc
push
fdivrp
add
and
bound
std
orb
push
sahf
pop
loop
sbbb
jmp
cmpl
movsl
add
xlat
test
stos
int3
pop
loopne
xor
inc
add
adc
test
loope
int
scas
push
fistl
lcall
repnz
pop
test
adc
sub
mov
add
xorb
push
popa
jbe
bound
scas
lods
push
movl
add
and
out
add
inc
inc
pop
xchg
cmpsl
rorl
push
andnps
dec
cmp
adc
push
jo
mov
or
idivb
mov
cmp
push
shr
insl
int
push
shlb
cmc
adc
pop
dec
adc
and
pop
push
ljmp
sub
dec
lcall
push
add
das
daa
xor
adc
mov
pusha
test
pop
cmp
mov
andb
xchg
pushf
mov
sbb
lods
sbb
push
push
sbb
and
outsl
lods
add
jp
add
sti
and
hlt
cmp
mov
dec
js
inc
adc
aas
add
rcrb
or
decl
test
cld
mov
cmc
addr16
fsubr
sub
xor
or
pop
loop
into
shll
clc
mov
loop
adc
hlt
push
movsl
xchg
insl
sub
dec
pop
cs
out
aas
fucom
mov
call
dec
mov
add
dec
xor
mov
les
push
inc
ljmp
adc
ja
mov
fidivrl
inc
rol
cs
cltd
loope
cmc
xchg
xor
jmp
xor
outsl
arpl
sbb
fdivs
aaa
lret
movsb
jo
data16
sub
loop
ss
push
sbb
inc
test
pop
in
scas
mov
sub
test
push
inc
mov
idivb
jle
push
sbb
xchg
dec
xchg
push
out
sbb
inc
loop
test
imul
andl
xchg
stos
and
mov
int
xor
out
cld
mov
mov
mov
or
pop
pusha
sub
lds
or
rcl
scas
pop
push
push
mov
hlt
dec
mov
cs
hlt
ret
dec
cmp
xor
mov
adc
mov
and
mov
or
push
sub
mov
add
xchg
mov
mov
cmp
repz
pop
jno
pop
and
movb
and
out
mov
ds
lock
pop
sub
popf
push
popa
data16
push
and
mov
sbb
das
inc
pop
fucomip
in
ja
xchg
stc
xor
aam
incl
mov
lret
xchg
and
ljmp
in
pop
adc
mov
lea
ror
mov
test
les
jmpw
ret
push
jmp
dec
icebp
scas
test
arpl
leave
jecxz
cs
jb
jecxz
or
mov
adc
repz
loope
cli
mov
sub
inc
xchg
xchg
and
push
sub
fdivrp
pop
bound
mov
inc
pop
sbb
call
call
bnd
adc
add
arpl
adc
pop
in
sub
add
fsubs
shll
std
outsl
cmc
repnz
rorb
mov
je
stos
dec
fwait
cmp
xor
pushf
pop
inc
xchg
jecxz
test
push
add
xor
push
mov
mov
push
fxch
mov
sbb
popa
outsl
dec
test
dec
sub
stos
fisubrs
jae
sub
inc
orl
push
aam
lidtl
mov
pop
inc
pop
adc
sub
jg
add
dec
jg
and
or
fimull
or
push
xchg
insl
pop
or
adc
inc
jnp
jb
shlb
daa
sub
imul
jl
loopne
int
jno
cmp
xchg
and
and
js
sbb
mov
lods
es
jb
fstpt
or
and
repz
mov
data16
adc
aam
and
xor
mov
xor
and
adc
or
insl
and
push
mov
stos
dec
inc
push
sbb
mov
push
daa
push
aad
pop
sub
push
xor
add
fdivl
addr16
cmc
jg
xchg
and
add
sbb
add
ds
mov
pusha
sub
cmpsb
xlat
shll
mov
insl
jns
inc
push
cmp
sub
sbb
fsubrs
mov
negb
shlb
push
pop
jne
ret
mov
into
pop
push
cld
pop
or
jo
adc
push
sti
pop
lea
shll
adc
into
test
sbb
cmp
sbb
sbb
mov
test
ret
movsb
clc
inc
bound
fimuls
sbb
lret
test
cwtl
mov
aam
outsb
nop
sub
sbb
outsl
pushf
sbb
jbe
fwait
in
cmp
sub
adc
das
inc
mov
pusha
pop
inc
mov
adc
subb
sub
cmp
cld
pop
dec
adcl
incl
cmpsb
fsubrs
lock
stos
cltd
pop
cmp
sarb
push
push
add
jno
mov
add
ljmp
mov
rcll
fcom
lret
add
sahf
cmpb
cmp
cwtl
push
add
xor
bound
aaa
xchg
loop
rolb
bound
mov
push
mov
shrb
mov
xor
push
std
std
xor
or
add
cmp
aas
pusha
push
jo
addl
and
lds
fildll
dec
test
addr16
cli
push
and
std
jbe
rclb
rcrb
xchg
int
addr16
or
cmp
in
pop
lcall
fs
xorb
mov
xchg
sbb
shlb
and
push
pop
add
xorl
pushf
in
dec
inc
mov
movsl
cmp
dec
outsb
ret
xchg
in
inc
adc
push
or
or
call
insl
sbb
adc
push
pusha
inc
das
adc
outsl
cld
icebp
icebp
add
pop
outsb
sbb
mov
mov
cmp
std
cli
cmpsb
stos
mov
sbb
dec
push
decl
int
xchg
stos
and
shrb
stos
lret
sbb
loope
insb
scas
sahf
in
fs
mov
adc
jle
xor
call
rcll
imul
mov
aaa
push
mov
inc
pop
mov
inc
inc
mov
mov
pop
test
jo
adc
aam
insl
shl
les
xor
add
fcoms
or
in
clc
sbb
adc
mov
xchg
pop
int
mov
xchg
inc
push
mov
sbb
push
scas
mov
push
mov
or
out
inc
fldl
mov
pop
xor
rolb
outsl
pop
call
rorl
mov
fistps
test
in
xchg
adc
and
inc
inc
xchg
or
popa
adc
sub
iret
pop
icebp
add
adc
sar
mov
sbb
js
stos
mov
mov
mov
icebp
xchg
jle
andb
test
shrl
sbb
addl
mov
mov
add
xor
loop
in
jmp
cmp
and
fdivrp
hlt
fldcw
cmp
stos
jle
movsl
outsl
addb
jne
lahf
loop
insl
stc
or
popl
pop
add
mov
fildl
icebp
ljmp
adc
je
cmp
mov
add
je
and
aad
loop
pushl
flds
int3
push
scas
or
loopne
std
push
loopne
movsl
test
and
movsl
xchg
add
leave
filds
icebp
ret
jne
sbb
dec
popa
or
mov
movl
jbe
test
cs
loope
std
popf
and
test
in
pop
push
insl
pop
push
lods
lock
nop
stos
das
add
mov
or
jno
adc
inc
cmc
rol
loopne
or
or
and
movsl
sbb
jmp
sub
cmp
call
sub
mov
jno
add
test
sbb
aam
psubusw
mov
fs
ljmp
sub
repz
add
sub
xchg
inc
inc
pop
adc
add
dec
mov
insb
cmpsl
aam
add
stos
sbb
fbld
or
xor
xor
inc
rolb
xor
inc
push
pop
mov
jge
std
idivb
add
add
test
cwtl
fstpt
test
and
xlat
xlat
cld
mov
fcmovnb
insb
imul
cmp
outsl
lods
mov
jecxz
and
jnp
xchg
sbb
adc
ret
fisubrl
fildll
inc
jl
inc
in
dec
call
adc
adc
aas
push
adc
outsb
xor
jno
mov
adc
xchg
sbb
movsl
xchg
pop
icebp
decl
test
nop
jmp
add
inc
adc
xor
adc
test
jp
lock
jl
mov
adc
mov
sbb
shlb
jl
sbb
mov
or
mov
mov
or
fbstp
jnp
loop
inc
gs
repnz
ret
shlb
and
cltd
cltd
sub
or
lds
inc
cli
mov
dec
mov
xchg
mov
js
pop
cmpb
inc
or
jge
inc
xchg
ficomps
out
lods
enter
push
cwtl
push
pop
add
ret
cmp
test
mov
leave
in
dec
add
scas
test
push
inc
ljmp
in
sub
frstor
mov
dec
jge
inc
mov
sbb
subb
cmp
mov
or
pusha
lods
mov
mov
sub
adc
sbb
das
imul
std
out
push
js
mov
push
cmp
das
insb
sub
jns
in
or
add
icebp
aas
test
or
stc
lock
into
std
loope
dec
or
inc
push
push
call
cmp
push
rol
sub
add
push
orb
push
mov
clc
test
adc
jp
xor
jno
sub
mov
inc
xor
in
inc
pop
push
mov
std
incl
mov
ja
hlt
pop
mov
inc
mov
jg
sub
dec
push
xchg
fwait
add
xorl
fildll
cltd
out
or
sbb
pop
add
es
push
mov
aad
sub
jp
repnz
adc
and
fimuls
cmp
clc
pusha
add
mov
test
sbb
xchg
mov
neg
rcll
psraw
jno
add
cmpsb
dec
jp
ljmp
jmp
cmp
mov
mov
sbb
in
clc
fld
out
stos
call
mov
nop
xor
pusha
jae
pop
or
lcall
sarl
add
fistpll
sbb
repz
dec
addr16
fucomip
mov
subl
cmp
mov
cmpsb
jb
sub
pop
mov
insl
dec
cmp
xor
and
cmp
add
mov
in
dec
or
fcmovnb
decl
sbb
inc
mov
push
lahf
aas
cli
pop
add
cli
jg
mov
inc
adc
mov
add
sti
cmp
dec
ficomps
inc
dec
cmp
test
mov
ret
xor
and
in
or
sbb
pop
clc
decl
and
adc
push
sub
lea
mov
cmpsl
loopne
mov
push
mov
cmp
rclb
lea
sar
mov
jnp
push
mov
lods
test
int
js
enter
mov
pop
je
and
dec
movb
dec
movsl
bnd
add
jecxz
add
adc
fistpl
repnz
in
jb
and
or
andb
shl
fildl
pop
adc
hlt
cli
pop
push
and
jns
pop
jno
sbb
mov
xchg
cmp
cli
testl
xor
cld
orl
push
or
fwait
orl
std
shll
inc
lds
outsl
pop
add
jb
inc
push
or
pop
sub
cmp
sub
fisttps
loope
lcall
mov
notl
adc
xchg
push
mov
subb
orl
mov
imul
dec
mov
movsl
inc
inc
xchg
sahf
and
jg
pop
fidivrs
mov
inc
mov
je
mov
sub
mov
push
ror
sti
or
cmp
pop
xchg
leave
sti
mov
cmp
adc
cmpsl
arpl
insb
rolb
mov
cmc
movsl
call
or
inc
bound
shll
mov
pop
out
mov
jbe
cltd
popa
je
push
add
mov
mov
push
cld
incl
inc
into
inc
mov
inc
scas
inc
dec
sub
rcrb
lds
or
mov
jno
xor
sti
movsl
adc
jmp
jnp
push
lret
xchg
pop
push
jecxz
push
mov
jno
push
sbb
mov
mov
iret
cmp
adc
in
xor
mov
movsb
sbb
neg
mov
pushf
or
shrl
and
dec
data16
ljmp
aam
add
pushf
sarl
out
or
xor
addl
insl
cmovne
jg
loopne
sbb
stc
movsb
fdivl
fists
lahf
lahf
and
inc
jnp
push
mov
and
out
push
sbb
das
adc
dec
push
cmp
mov
xchg
and
mov
ja
sub
nop
insb
in
pop
jmp
add
pop
adc
cli
scas
outsl
or
test
jg
sub
jo
jno
sbb
test
add
call
sbb
fdivrs
jmp
jo
jl
shr
scas
jno
test
mov
js
inc
idiv
rcl
in
pop
clc
popl
adc
dec
adc
jbe
les
sbb
ds
outsb
repz
int
daa
ss
xchg
jle
add
roll
aas
sub
push
inc
mov
jb
addl
push
inc
fistpll
loope
dec
inc
mov
imul
pop
add
inc
dec
mov
adc
bnd
lods
pop
insb
je
aas
push
leave
addr16
sub
or
mov
mov
cmp
lret
mov
and
call
mov
pop
repz
shlb
int
adc
jo
xchg
divb
out
loop
imul
push
cmp
cli
mulb
push
in
push
adc
xchg
pop
add
dec
mov
lahf
notl
call
and
inc
mov
jmp
popa
es
in
loope
push
lods
int
sub
aaa
sarl
push
aad
in
push
or
cld
out
jne
and
sub
cld
sbb
insl
dec
outsl
mov
dec
and
mov
in
orb
jge
add
incl
cmp
pusha
aaa
xorb
push
icebp
push
inc
xlat
mov
mov
fsubrp
lds
cs
mov
sbb
gs
iret
inc
xchg
push
inc
push
jle
pop
fildll
sbb
arpl
call
je
pop
lods
push
inc
mul
repz
add
inc
in
push
add
push
std
mov
mov
hlt
and
jl
mov
inc
call
sbb
inc
andl
loopne
or
popf
jae
shl
push
jo
icebp
add
cld
jg
mov
rorl
jbe
cltd
xor
iret
sub
stos
fmuls
push
inc
in
cmpb
sbb
xor
xchg
fnstcw
pop
call
xchg
or
mov
mov
das
icebp
and
bound
adc
outsl
adc
lock
inc
pop
test
pushf
inc
fldt
mov
add
dec
push
pop
inc
adc
test
or
cmp
sbbl
outsl
cmp
imul
stos
pop
add
outsl
pop
fidivrl
std
jle
mulb
stos
pop
ret
pop
xchg
mov
add
mov
add
jb
cwtl
cmpsb
fstl
jmp
jmp
sub
aaa
adc
clc
inc
in
cltd
in
xlat
and
xor
enter
sbb
pop
insb
mov
nopl
andb
cli
mov
dec
inc
inc
pop
lcall
cli
add
push
ret
pop
inc
mov
outsl
fistpll
and
dec
popa
nop
ret
adc
push
and
add
cmc
sbb
xor
and
or
mov
out
faddp
add
xor
ds
push
sbb
jl
or
dec
aad
js
pop
add
sbb
mov
jge
pop
mov
pushf
xor
xchg
pop
fsubr
adc
inc
inc
sarl
cltd
hlt
or
mov
mov
std
cli
sub
leave
icebp
jle
xchg
mov
adc
dec
in
mov
pop
cmpsl
xchg
pop
inc
scas
adc
xchg
aas
and
cld
inc
or
cmp
sarl
push
jb
movl
adc
dec
out
push
outsl
ret
ret
push
lea
clc
lea
and
ret
or
shl
mov
mov
nop
inc
out
inc
aad
mov
mov
xchg
pop
jg
dec
xchg
sahf
repnz
hlt
push
cld
loopne
jecxz
push
into
sub
sbb
aaa
push
decl
loope
sbb
and
es
xor
sbb
mov
dec
fcmovnbe
add
pop
mov
or
xchg
adc
push
dec
test
ffreep
push
sub
push
adc
fisttpl
dec
test
cmp
jae
lahf
outsl
nop
push
ffreep
sub
mov
clc
mov
and
jne
stc
loope
push
es
jge
test
cmp
xchg
out
add
pop
inc
inc
sub
out
inc
inc
or
in
dec
lret
xchg
shrb
and
mov
and
outsl
outsl
jno
and
cmp
mov
stos
inc
fistpl
dec
inc
pop
sub
dec
mov
in
ficoms
testb
xor
xor
cmp
mov
cltd
test
mov
je
shl
sti
test
inc
adc
incl
mov
ret
clc
dec
ss
outsl
pop
clc
lods
imul
jo
sub
inc
push
mov
xchg
or
fidivl
add
out
lods
lea
mov
jg
cmp
inc
outsb
sub
inc
mov
push
or
outsl
pop
xchg
stc
push
jp
andb
shll
clc
inc
cmp
loop
fadd
popa
ret
jb
sahf
loopne
push
icebp
addr16
xchg
shrl
icebp
fucomi
sahf
fadds
xor
adc
pop
cltd
and
nop
dec
andl
pop
clc
movsl
int
cmpsb
sbb
pushf
je
js
and
stos
sbb
test
and
test
lea
movzwl
mov
mov
out
pop
xor
mov
and
clc
jns
mov
xor
pop
pop
adc
js
ljmp
mov
scas
cmpsb
loop
test
mov
lret
rolb
or
imul
mov
shlb
push
inc
dec
dec
add
or
add
insb
and
dec
lret
shll
and
mov
das
shlb
out
xchg
fstps
sbb
dec
push
mov
cmpsb
mov
cli
inc
mov
inc
test
mov
pop
jl
pop
fisubrl
std
iret
xchg
adc
mov
mov
push
imul
mov
das
inc
aam
outsb
dec
bound
inc
std
lods
or
inc
cmpsb
rorb
pop
and
and
xor
or
mov
or
push
inc
add
aad
mov
outsl
in
jle
and
cmp
pusha
movsl
fcmovne
aam
lods
stos
cmp
dec
stc
adc
mov
add
jge
mov
jbe
inc
cmp
mov
out
ss
dec
data16
mov
icebp
fistl
fimull
loope
scas
jle
cmp
sbb
xorb
fst
scas
outsb
dec
ljmp
ret
in
fldt
mov
in
add
in
mov
mov
pop
inc
cs
cltd
vpsubq
sbb
outsb
testl
in
ljmp
ret
lret
xor
jp
psubusb
push
pop
inc
pop
in
or
lret
lret
nop
lahf
test
pop
or
or
push
cltd
mov
mov
insl
pop
ja
movsb
arpl
inc
les
bnd
hlt
std
fisttps
add
out
stos
inc
loop
adc
sbb
fcmovne
mov
sub
and
ret
in
adc
xor
jo
fcoml
movq
sbb
cli
int
inc
je
push
or
jg
push
or
aaa
jle
imul
dec
pop
cmp
hlt
sbb
push
sbb
outsb
jbe
inc
imulb
jne
popf
xlat
xchg
iret
data16
mov
push
fsts
sbb
and
cli
testb
cmc
and
push
das
std
testb
jmp
and
inc
int
repnz
mov
mov
outsb
cld
mov
inc
mov
aaa
xchg
jge
lock
jg
inc
pop
or
xchg
or
out
mov
inc
idivl
xor
mov
sbb
jns
xchg
and
xor
cs
dec
inc
insl
mov
mov
mov
les
arpl
jbe
dec
xchg
loopne
cmc
scas
inc
sbbl
jp
mov
popf
mov
push
mov
inc
test
mov
cltd
xorl
fstl
test
push
jle
push
shr
push
xor
mov
das
cld
mov
or
in
mov
add
cwtl
xor
push
cmp
stos
outsl
cmp
add
std
aaa
inc
dec
or
and
js,pt
frstor
scas
inc
inc
jns
mov
adc
or
es
nop
pop
xchg
pop
mov
int3
push
ljmp
sti
lods
movsl
in
inc
push
fs
or
pop
sub
sahf
mov
lods
mov
neg
or
pop
xor
mov
adc
pop
xchg
inc
inc
mov
adc
pop
lods
cli
lret
int
test
adc
fwait
aad
int
stc
nop
mov
pop
lcall
inc
sub
shrl
mov
dec
sbb
and
call
fildll
das
lahf
adc
ficoml
sbb
fildll
bound
jns
dec
push
leave
ret
aas
or
aad
ljmp
xor
fstps
pop
mov
stc
add
push
ljmp
das
mov
adc
push
movsl
fxtract
das
inc
mov
inc
test
mov
pop
call
repz
cli
dec
push
mov
cli
ja
sub
cmp
pop
mov
dec
scas
adc
arpl
pusha
push
pop
cmp
mov
xor
ret
pop
cwtl
jp
cmc
cmpsb
scas
or
test
adc
mov
xchg
std
inc
jmp
inc
pop
lret
or
dec
shl
adc
fiaddl
pop
js
test
mov
js
or
sbb
cmp
pop
sti
adc
gs
insl
lcall
fistps
in
add
enter
dec
test
test
stc
int3
push
mov
lret
cs
xchg
add
fdivr
outsl
in
and
cltd
jbe
icebp
sub
cmp
push
dec
test
push
ret
jl
inc
aaa
jo
jmp
adc
mov
les
mov
or
xchg
inc
jle
in
dec
sbb
sti
testb
test
stc
sub
sar
outsl
mov
fists
ds
sub
sub
in
scas
add
fldl
push
mov
mov
push
sub
and
add
and
sub
jecxz
dec
lock
cwtl
mull
pop
dec
loopne
cmp
popf
or
imul
test
jno
lds
decb
xchg
xchg
mov
js
stos
or
add
inc
aam
call
and
hlt
fistpl
or
adcb
shlb
jae
cmpl
mov
das
sub
addr16
cmp
jg
stc
cmp
mov
fistpl
in
sub
add
mov
sub
pop
add
xchg
stos
xchg
xchg
mov
mov
adc
fdivr
mov
and
call
inc
mov
jae
mov
fstl
sarl
imul
out
xor
inc
rcrb
std
push
outsb
jae
push
jnp
insb
ja
dec
mov
jmp
xchg
mov
adc
xor
icebp
adc
or
decl
test
sbb
cli
adc
imul
jp
aam
mov
mov
fisubrs
mov
push
jae
mov
xchg
ds
mov
lods
push
jne
test
lds
jmp
jmp
out
dec
xchg
ret
std
sti
xor
fsubrs
pop
loop
pusha
mov
aaa
push
jnp
fstp
outsb
push
andl
orb
jmp
cltd
pop
jmp
sub
lea
and
mov
jp
mov
fwait
js
xchg
mov
insl
cmc
jl
pop
mov
stos
sub
dec
test
pop
inc
ss
xor
adc
cmp
nop
jg
jmp
test
jl
sbb
dec
sub
rclb
pusha
xor
mov
or
clc
mov
push
pop
fcompp
outsb
js
dec
or
mov
icebp
test
adc
mov
mov
aas
ret
fs
cmpsb
pushf
lret
xchg
mov
or
sarb
mov
jg
and
cmp
clc
mov
xchg
mov
sti
or
inc
or
inc
loopne
pop
and
fcomps
lods
rorb
loope
dec
das
aad
js
rcr
clc
add
dec
or
sub
test
push
mul
pop
mov
imul
hlt
addl
mov
pop
int3
or
rcl
test
xchg
cs
les
inc
mov
mov
ret
sbb
out
outsl
push
pop
sub
addb
mov
adc
adc
clc
rorb
mov
ds
outsl
fst
mov
dec
call
mov
pop
lcall
inc
fimuls
ret
push
cmp
sbb
icebp
sti
pop
stos
stos
push
fdivr
subb
cmpsb
sahf
adc
fcoml
fildl
adc
jbe
mov
leave
rorl
mov
lods
ret
sub
sbb
scas
lods
fisubl
mov
push
loop
mov
push
shll
stc
push
fcos
mov
mov
jbe
cmp
aas
xchg
call
xor
outsb
xchg
fdivr
cmp
adc
add
outsl
dec
jnp
jge
adcb
inc
out
xchg
add
inc
cmpsb
aam
stos
pop
fsubrs
or
cmpsl
lods
cmp
lahf
out
mov
icebp
xchg
xchg
cli
sahf
rcl
subb
cltd
jg
mov
ljmp
stos
cmp
pusha
add
popf
imul
cmc
and
clc
or
inc
xlat
adc
inc
imul
add
arpl
mov
inc
subl
sbb
hlt
lods
cmc
in
jnp
ljmp
or
add
mov
xchg
nop
cwtl
gs
cmpsl
clc
pop
pop
sub
pop
ds
inc
sub
ret
fmull
dec
lock
or
pusha
inc
dec
outsb
cwtl
xchg
adc
and
fidivs
adcb
push
jo
loopne
add
xlat
call
jbe
or
adc
adc
jg
dec
inc
out
xor
push
push
xchg
sahf
inc
jo
ljmp
or
cs
iret
mov
imul
pop
mulb
mov
mov
das
cld
mov
mov
and
inc
adc
adc
outsb
or
daa
aas
imul
inc
adc
idivb
bound
data16
lret
cmc
push
sbb
pop
call
nop
repnz
std
jno
icebp
sub
out
pop
mov
rorl
mov
aas
loopne
push
mov
sti
scas
neg
fnstsw
inc
outsb
push
jl
imul
and
push
cmp
cmp
and
xor
notb
jb
in
in
jg
and
addr16
test
jae
adc
or
pop
imul
shlb
push
lcall
xrelease
jge
adcl
cmp
and
dec
in
cmp
sbb
adc
jecxz
pushl
shrb
dec
jne
pop
adc
in
mov
cwtl
mov
xor
xchg
pop
mov
add
add
pushl
mov
adcl
or
and
sbb
pop
jle
jno
loope
cmp
or
jl
adc
add
mov
push
cmp
rcl
aam
fisubl
dec
pop
adc
rcr
pop
xor
insl
and
and
jp
sbb
outsb
inc
fcompl
mov
mov
mov
repnz
fdivl
adc
dec
mov
sub
push
adc
pop
mov
jns
faddl
mov
push
cmp
mov
xor
pop
xchg
mov
jp
xchg
inc
nop
mov
mov
pop
pop
test
fidivl
ficoml
dec
je
out
fcmovnb
popf
shl
sub
test
test
shll
fs
or
jnp
jecxz
sub
in
fnstenv
pusha
or
add
mov
cltd
mov
mov
lea
repz
cmp
inc
call
fsubrs
or
outsl
inc
sub
jbe
in
fmull
das
lods
mov
add
in
in
adc
inc
and
and
xchg
fiadds
test
popf
sbb
insb
inc
pop
in
cs
pop
adc
loopne
push
cwtl
jb
andl
pop
lods
and
mov
fcmovnbe
orb
insb
or
mov
lcall
aas
enter
xchg
sbb
adcb
out
inc
push
or
jmp
scas
jp
jge
push
fldl
jb
jg
scas
and
push
add
jbe
push
lock
sbb
inc
mov
xchg
xchg
incl
sar
push
aam
scas
mov
jmp
mov
mov
and
jb
inc
ljmp
popa
loop
lret
lret
xchg
cltd
in
sub
or
stc
imul
adc
call
pop
push
shr
lds
mov
call
xchg
adc
roll
and
es
shr
hlt
or
pop
and
pop
or
sbb
sub
xlat
imul
or
push
pop
pop
fstl
cmp
add
cmp
cmc
mov
pusha
cwtl
mov
fsubrl
pop
mov
jo
sbb
pop
or
ss
mov
mov
out
push
or
das
or
scas
arpl
push
fnsave
and
cmp
rcl
xchg
scas
sub
xor
adc
shl
mov
fbstp
incb
cmp
pusha
sarb
or
scas
mov
jecxz
pop
and
and
inc
movsl
add
and
push
aad
aaa
pop
sub
stos
lret
test
shll
or
icebp
call
rcrl
or
into
sbb
inc
mov
jns
pop
scas
cmp
test
lahf
pop
push
sbb
xor
scas
dec
jb
inc
shr
mov
pop
ret
push
outsb
cmp
ljmp
test
mov
xor
inc
and
add
es
inc
jnp
cli
scas
jne
lods
xchg
add
xchg
mov
imul
dec
dec
call
and
push
pop
cld
out
pop
pop
data16
fildl
or
cltd
jp
push
cmpb
insl
pop
outsl
lock
sub
sub
std
fisubrs
and
cmovs
std
sbb
cmp
pop
daa
add
fbld
inc
jp
or
sub
out
mov
fisubrl
inc
dec
sar
test
mov
lret
adc
pop
mov
outsl
lea
jno
jb
mov
xchg
push
addr16
dec
stos
adc
jae
mov
icebp
movsb
out
faddl
dec
mov
das
hlt
incl
and
sbb
gs
hlt
sbb
leave
movsl
cld
incl
adc
and
or
into
sub
insl
fidivs
dec
cmc
aaa
outsl
hlt
mov
scas
adc
jnp
jb
int
sbb
mov
sub
out
adc
in
push
andl
popa
repz
bound
pop
or
mov
shlb
jne
add
inc
stos
cltd
fildl
pop
fistl
mov
mov
cli
mov
sbb
push
mov
sub
decl
test
rcl
lcall
jns
sbb
movsl
das
les
mov
dec
xchg
mov
jecxz
mov
push
insl
jle
pop
in
add
add
mov
mov
jl
test
aam
mov
sub
leave
dec
into
xor
int3
mov
mov
inc
addr16
mov
and
pusha
jmp
or
cmp
add
sbb
lret
sbb
sbb
ret
fists
xchg
xor
or
jl
xor
loope
dec
repnz
inc
pop
jmp
jo
mov
testb
cmpsb
adc
xchg
pusha
lahf
and
add
push
push
adc
cmp
xor
mov
jmp
push
or
insb
cmpsl
pop
cwtl
ret
dec
add
pop
inc
bound
jle
insl
inc
scas
cmp
dec
andb
outsl
lcall
dec
xchg
xchg
cmp
stos
inc
sub
jb
pop
ds
stc
call
mov
hlt
shrb
jmp
inc
mov
leave
jg
xchg
outsl
jo
scas
push
roll
cs
push
xchg
jl
mov
es
in
das
out
inc
inc
test
mov
inc
enterw
push
dec
mov
aaa
ror
movl
fs
sti
aad
popa
mov
call
mov
out
lret
pop
shr
insl
or
pop
mov
pop
push
and
push
dec
push
sub
inc
decl
data16
pusha
pop
xor
pop
test
fists
insl
pushl
int3
jg
cs
nop
cmpsb
sub
decl
xchg
push
or
mov
jg
cmc
mov
jno
mov
inc
add
adc
sub
int3
xor
decb
jbe
scas
push
ja
jge
shlb
andb
faddp
lods
mov
out
or
sti
test
add
sbb
movsb
clc
aad
pop
fdivrp
cmc
js
addl
push
push
jp
cli
stos
mov
enter
xchg
and
push
rol
pusha
sub
es
testl
xor
pop
push
inc
jl
aad
int3
repnz
cmc
outsl
ja
stc
push
lret
fsub
test
cmp
aad
and
and
in
test
cmpsb
push
loopne
xchg
cmp
hlt
pop
insb
xchg
jecxz
inc
add
pop
adc
inc
fisubrl
adc
into
lods
arpl
adc
and
arpl
call
int
mov
add
scas
cmp
and
out
or
test
and
dec
push
mov
inc
jno
sub
dec
and
or
push
adc
and
insl
sub
aaa
roll
leave
ljmp
sbb
testl
xor
or
into
xor
andl
mov
mov
loopne
xor
sbb
mov
push
rcr
push
sub
lret
or
movzbl
or
or
mov
adc
ficoml
es
fwait
add
mov
cli
push
test
inc
pop
or
out
xchg
ss
pop
loopne
xchg
fwait
sbb
push
leave
mov
push
or
mov
fwait
mulb
adc
or
aaa
fidivrs
jbe
jle
pop
xchg
sbb
cmp
bound
shr
ds
lcall
xchg
or
xchg
sub
rorl
cmp
cmp
jle
add
push
pop
xor
or
sbb
int
in
in
inc
sti
inc
movl
loope
cmp
cltd
iret
rcr
jg
adc
in
sub
push
shlb
or
sbbb
mov
out
mov
or
sbb
stc
stos
inc
adc
ret
rcl
ret
mov
inc
or
ficomps
lock
out
iret
adc
sbb
and
jmp
in
mov
pop
add
xchg
sarl
fcmovne
lock
aad
pop
pop
mov
pop
push
mov
pop
mov
adc
sti
mov
mov
push
cwtl
fistps
mov
inc
xchg
jb
sbb
scas
dec
jb
and
lock
gs
fadd
mov
sarb
fildl
js
mov
sub
neg
mov
mov
les
adc
jl
daa
inc
sarb
pop
cs
add
cwtl
and
enter
add
cli
sbb
push
in
xchg
sub
push
popf
xchg
push
xchg
in
push
inc
xchg
cmp
adc
aad
cmp
aam
jp
inc
xchg
push
or
adc
or
dec
mov
xorw
adc
jecxz
adc
and
or
dec
ret
fldt
hlt
insl
pop
jp
push
or
mov
xorb
insb
fdivl
mov
es
cltd
xor
and
and
xor
xchg
idivl
loopne
and
ja
adc
mov
aad
mov
jno
mov
add
pushf
push
es
fmuls
fimull
ss
icebp
jmp
ljmp
testb
mov
or
jo
adc
pop
mov
pushl
hlt
sub
arpl
pop
gs
inc
jbe
adc
fistpll
out
or
mov
repz
lret
push
lcall
cmpsl
xor
out
and
and
ficoms
das
adc
fdiv
dec
dec
add
imul
inc
jae
js
jg
negb
dec
adc
dec
pop
push
lret
adc
test
add
repnz
push
jbe
sub
jg
jmp
sub
sbb
dec
lret
bound
mov
lods
js
sub
push
pushf
fidivrs
push
cmpsb
icebp
or
pop
sbb
fistpll
pop
scas
das
pop
lods
test
in
adc
scas
jbe
xor
aas
xor
jmp
mov
adc
mov
mov
arpl
adc
subl
push
les
fildl
xorb
inc
or
data16
jg
jbe
ljmp
mov
push
adc
mov
mov
rcrb
mov
mov
enter
inc
pop
in
outsb
jl
insb
adc
add
dec
dec
int
or
in
add
imul
std
push
pop
ljmp
lahf
push
mov
adc
pop
stc
cmp
mov
sub
inc
mov
and
rorb
or
push
fwait
fisttpl
and
fnstcw
mov
add
arpl
adc
mov
and
add
mov
jno
push
mov
fbld
popa
cmp
enter
xchg
mov
or
ret
repz
push
xor
xor
dec
mov
loope
out
jl
andl
ja
pop
cmp
scas
mov
aas
insb
push
shrb
jmp
cmp
sbb
adc
sub
adc
dec
popa
loop
jmp
dec
xlat
addl
lods
dec
sbbb
pop
dec
ss
jo
mov
pushf
inc
pop
push
mov
push
inc
sti
pop
pushf
xchg
aas
loop
sbb
mov
iret
adc
push
int
icebp
dec
mov
xchg
mov
mov
repz
in
mov
cmpsl
or
and
je
mov
sti
out
xor
or
mov
xorb
lahf
mov
movsl
dec
int3
sub
loope
pop
out
ljmp
ja
test
add
js
inc
in
movsl
add
cld
mov
pop
lods
cmp
icebp
push
dec
mov
cli
rorl
xchg
and
addr16
inc
dec
icebp
aam
outsb
cmc
and
sbb
jbe
shll
jmp
loopne
pop
insl
fwait
pop
adcl
scas
jge
mov
fwait
push
mov
loopne
je
es
hlt
popa
mov
in
mov
sub
sbb
ss
mov
sub
add
repz
test
cltd
sbb
push
push
nop
ret
lods
xor
pop
xlat
add
adc
lods
movsl
jns
jp
ror
in
test
xchg
push
pop
loope
sbb
jb
pop
jbe
enter
push
orl
inc
ja
mov
jb
inc
pop
dec
dec
int
out
mov
nop
sbb
lods
jae
outsb
loop
fbstp
insl
lret
cmp
pop
aas
inc
adc
iret
orl
nop
xchg
cmp
inc
xlat
pop
ja
ss
sti
mov
test
icebp
mov
mov
xor
cmp
lock
mov
add
or
pop
cs
jbe
or
imul
movsl
scas
mov
pop
mov
pop
clc
lods
sbb
xor
adc
or
in
and
push
cmpsb
lret
xor
mov
sbb
repz
je
ss
pop
pop
jp
add
call
add
cmp
outsl
jnp
jo
jle
movsb
adcl
xchg
fsubrl
fsubrp
mov
and
repnz
xor
test
cltd
adc
int
ret
popa
mov
pop
pop
imul
and
push
mov
push
push
in
ss
inc
push
add
dec
sti
shll
push
pusha
add
jecxz
adc
xor
negl
movsb
repnz
idiv
imul
sbb
push
cmc
xor
sbb
aaa
aaa
mov
cli
jnp
mov
lods
jnp
push
jns
and
enter
lcall
insl
mov
add
jo
mov
mov
mov
repz
aam
mov
jp
ret
mov
cwtl
xchg
xchg
cmp
jbe
mov
xor
dec
cwtl
and
push
lahf
subb
les
aad
xor
mov
jl
ds
testb
clc
fmuls
sub
push
pop
and
loopne
pop
call
xor
push
sbb
or
cmp
popf
push
mov
shr
mov
add
cld
incl
mov
jmp
movsb
adc
shll
sbb
add
pop
pop
inc
push
popa
pop
pop
test
adc
dec
mov
fadd
outsl
dec
or
pop
add
test
cli
jb
jg
out
mov
lock
ljmp
ret
arpl
sarb
frstor
mov
mov
in
and
xchg
xlat
adc
stos
mov
std
loope
xor
and
jp
fidivrs
push
sub
jp
adc
aad
outsb
xchg
pop
sbb
enter
and
or
scas
mov
jecxz
inc
mov
add
sub
rcl
jg
rol
xchg
fsubrs
lds
mov
dec
mov
cli
mov
and
push
sbb
mov
lods
dec
jecxz
movsb
jae
sbb
outsl
sub
or
pop
incb
dec
xchg
enterw
xor
lods
cltd
xlat
lcall
addl
fsts
inc
adc
inc
test
std
enter
test
cmpsb
fimuls
sbb
popa
inc
add
clc
test
add
xlat
pop
cli
mov
add
aaa
lcall
call
lock
fucomi
sub
jmp
sub
pop
sarb
adc
rcll
outsl
and
push
lock
fcmovnbe
call
cmp
stc
add
inc
mov
add
aas
inc
cmpsb
jno
ror
aaa
pushl
push
xor
adc
mov
sub
inc
cld
fistpl
rorb
fmull
or
push
sub
adc
and
jge
lcall
xchg
pusha
lods
xchg
ficomps
aaa
std
push
test
sahf
xlat
mov
rorb
mov
inc
xor
jns
push
or
in
jb
inc
incl
clc
inc
inc
pushf
shlb
js
push
out
adc
jg
push
cmpsb
rclb
mov
and
xlat
jg
stc
int3
dec
xor
pop
add
dec
repnz
les
ds
inc
push
xchg
aam
or
cmp
or
push
lcall
xchg
cmpsb
mov
nop
dec
pop
sets
pop
mov
mov
repz
out
pop
mov
pop
cmp
mov
adc
lods
sbb
data16
outsb
stos
or
mov
mov
movsl
dec
sub
shrl
rorl
push
adc
add
mov
add
add
iret
cmp
repz
mov
aas
in
pop
pop
je
ds
out
jecxz
insl
or
lods
loop
pop
decl
mov
sbb
and
out
jmp
xlat
jae
and
push
mov
add
lea
adc
incl
rorl
icebp
lret
or
xor
adc
sbb
dec
aad
imul
mov
adcb
loopne
std
outsl
pop
scas
sub
cli
int3
pop
xchg
ror
xor
push
enter
and
pop
out
add
mov
inc
xchg
add
test
push
cs
imul
mov
mov
jg
mov
push
dec
repz
clc
test
inc
cmp
in
mov
pop
pushl
cmp
fsubl
add
sub
sub
cmp
vrcpss
inc
movsb
in
mov
push
mov
pop
mov
nop
sbbl
out
cli
mov
or
xchg
or
xchg
pxor
xor
movsl
orb
fwait
repnz
pusha
or
dec
mov
pusha
or
imul
add
ja
mov
push
stos
cmp
mov
mov
jnp
mov
loopne
xor
setno
insl
lcall
adc
lcall
ret
inc
cwtl
into
daa
xor
mov
ret
mov
pushf
repnz
addb
adcb
inc
pop
sbb
loopne
add
out
test
sub
mov
jge
pop
movsb
push
or
xchg
cli
or
incb
sub
nop
push
cld
incl
jo
mov
jmp
adc
mov
mov
adc
push
sub
cld
or
push
inc
mov
imull
imul
enter
std
pop
mov
fiadds
out
call
jle
fistpl
jecxz
push
ret
fs
hlt
mov
mov
out
adc
lea
adc
nopl
std
nop
jbe
test
jmp
in
es
inc
hlt
mov
iret
movsl
xchg
push
adc
jg
pushl
pop
es
jecxz
pop
ss
jb
dec
aas
out
and
xor
xor
outsl
fndisi(8087
and
or
inc
stos
icebp
decl
testl
xchg
test
jecxz
jl
jg
adc
pop
adc
push
adc
mov
fnsave
cs
sub
push
pushf
mov
loope
iret
fnstsw
adc
loope
jp
test
sub
dec
xor
xor
enter
mov
or
test
pop
sub
ret
jg
sbb
push
loop
sar
xchg
arpl
and
je
adc
test
decl
mov
jl
bound
push
xchg
add
fldt
mov
pushf
sub
mov
js
jne
out
mov
sahf
xchg
out
je
push
dec
sbb
inc
jp
fidivl
stos
jle
pop
dec
xchg
mov
ljmp
test
cld
nop
jg
cvttps2pi
push
arpl
cli
adc
jmp
pusha
nop
dec
cltd
cmp
push
push
rolb
loopne
cmp
or
mov
test
jg
shll
subl
fsubrs
sti
push
out
push
movsl
int
mov
aaa
cmc
xchg
sbb
es
jmp
std
sub
xor
pop
push
negl
xlat
mov
lcall
dec
lods
bound
push
mov
inc
fiaddl
fisubrs
andl
lea
aad
or
jbe
pop
inc
lea
aas
adc
rol
fwait
jbe
xchg
test
fsts
mov
les
loop
lods
sub
mov
jne
inc
sysexit
jmp
lea
ljmp
xor
mov
cmpl
mov
ss
cli
fdivrs
mov
daa
sub
and
out
loopne
imul
shr
aam
addb
test
dec
ljmp
xchg
jecxz
jnp
sti
mov
aas
iret
ss
roll
orb
or
sbb
sub
add
pop
adc
cmc
mov
sub
rolb
mov
mov
loopne
sbb
insl
and
mov
addl
mov
inc
inc
xlat
mov
sub
les
inc
je
das
and
pop
fmull
out
cmp
cmp
cmpsl
sahf
xchg
stos
mov
fisubl
xor
popa
sub
add
test
ret
sbb
jne
inc
sbb
fnstcw
nop
scas
out
mov
push
and
mov
sbb
mov
mov
jns
mov
jle
push
dec
jge
mov
xchg
sbb
pop
dec
ds
mov
jo
das
insb
ljmp
or
repnz
ja
mov
sub
and
mov
pop
js
insl
lcall
sbb
pandn
pop
iret
outsl
cli
outsb
pop
fnsave
push
sbb
pop
pusha
and
insb
mov
adc
pusha
sbb
push
das
in
or
xchg
ljmp
cmpsl
lock
push
push
jecxz
out
mov
mov
les
movsl
mov
movl
lods
mov
or
fnsave
inc
and
std
or
sub
jbe
dec
sub
pop
xchg
fs
xchg
dec
lds
in
jae
addr16
rorl
push
daa
std
xchg
sbb
and
leave
xchg
push
scas
pop
cmp
mov
cmp
dec
les
sti
out
inc
lahf
cltd
mov
push
scas
test
cli
mov
stos
mov
inc
fidivrs
or
fiaddl
rolb
cli
negb
push
or
movsl
call
and
mov
or
pop
aad
add
sar
mov
ret
sbb
mov
popa
into
cmc
mov
dec
fbld
arpl
or
loope
inc
icebp
fildll
xor
or
es
mov
sbb
mov
outsl
cld
mov
loopne
jne
xor
jne
aad
loope
out
mov
cwtl
aam
sarl
nop
mov
push
inc
imul
pop
in
popf
pop
js
push
and
test
int3
aad
mov
pop
adc
orb
adc
and
in
in
push
jns
and
call
or
call
cs
sbb
std
ret
jl
adc
hlt
cltd
jmp
cmp
mov
ret
mov
mov
add
js
icebp
push
push
outsl
add
inc
mov
nop
sbb
mov
insb
adc
mov
push
or
cld
push
fs
lea
nop
mov
bound
push
lcall
jecxz
and
lods
mov
xchg
outsb
jns
pop
and
push
mov
mov
sbb
arpl
mov
pop
push
push
add
dec
out
call
inc
test
mov
push
mov
faddl
mov
or
xor
jbe
add
das
adc
sbb
xor
outsb
fcomps
dec
sbb
sub
mov
inc
aam
sub
push
std
imul
jle
outsl
cli
mov
rorl
testb
mov
pop
dec
pop
lods
mov
mov
push
mov
inc
mov
pop
dec
xchg
lods
mov
sbb
xchg
fisubrs
jecxz
outsb
pop
or
pop
scas
mov
scas
jne
lahf
mov
jp
or
int3
shl
pop
icebp
shlb
and
pushl
push
fldl
xchg
insl
or
and
add
aas
xlat
jns
inc
xchg
insl
cmp
inc
in
mov
lods
xchg
jne
out
push
inc
fwait
sub
mov
cmp
jmp
icebp
add
nop
adc
jne
stos
or
cmp
rorl
push
loopne
jbe
dec
sub
xchg
push
out
jp
mov
out
fwait
and
shld
mov
adc
fidivrs
jnp
mull
enter
mov
mov
inc
sub
imul
jno
push
popa
sub
shll
inc
inc
cmp
out
mov
xchg
jo
lds
cltd
cmp
sbb
or
roll
mov
cmc
clc
adc
sbb
mov
pop
rclb
add
cwtl
push
sbb
cmpl
sub
rclb
repz
push
push
sbb
mov
push
std
pop
rclb
stos
sahf
aam
incl
push
pop
mov
adc
mov
cmpsb
pop
mov
out
insb
jg
shlb
jg
aad
imul
enter
andl
aaa
insb
cld
and
dec
sbb
pop
fs
icebp
clc
dec
mov
mov
cmpl
pushl
loop
cli
je
mov
loopne
sub
aam
and
fistps
repz
and
cmp
nop
mov
push
jbe
xor
mov
sub
int
inc
adc
popa
push
adc
pop
pop
fldcw
lods
ret
jmp
decl
push
or
adc
mov
imul
data16
int
sub
rep
cld
and
data16
jb
cs
je
dec
push
pop
cmc
xchg
jne
xor
jmp
mov
xchg
sbb
mov
dec
loop
push
mov
push
pop
lret
in
jbe
cmc
outsl
mov
push
int3
neg
inc
dec
es
loopne
rclb
xor
into
test
faddp
sbb
push
inc
shrl
pop
xchg
not
xchg
pop
cli
das
xchg
xlat
adc
cmp
pop
adc
fildll
sbb
mov
xlat
dec
dec
fwait
xor
sbb
stos
jl
rcll
or
cld
jg
and
bound
rcll
dec
das
shrb
xchg
rcrb
test
lea
lds
jnp
jmp
jge
loopne
mov
mov
xor
cli
insl
xlat
sbb
adcl
rorb
outsb
aaa
call
adc
sahf
int
int3
clc
xchg
jmp
int
fidivrs
adc
sbb
or
cmp
sbb
aaa
xchg
ljmp
mov
inc
lds
mov
movsl
or
adc
fwait
popa
lea
or
dec
jl
xchg
mov
jbe
mov
jg
mov
cmpsl
ret
rolb
sbb
lods
fidivs
mov
or
shll
lea
dec
es
aam
add
or
mov
mov
push
xchg
scas
jmp
mov
jmp
push
inc
lock
call
xor
jge
cli
adc
mov
mov
dec
push
add
push
mov
rolb
mov
ljmp
js
mov
mov
adc
jg
and
std
lret
cmp
stos
mov
pop
fdivrp
movsl
sub
inc
push
clc
shll
or
inc
ret
push
jo
inc
and
testl
jbe
cli
add
aaa
xchg
jge
loopne
mov
scas
mov
xorb
pusha
jno
dec
stos
fcmovbe
outsl
rcl
fadds
mov
sar
inc
jge
xor
adc
scas
test
mov
test
add
out
lcall
and
mov
inc
test
ljmp
and
lock
sub
sarl
push
pop
outsl
cld
es
cmp
mov
sbb
xchg
inc
mov
insb
repnz
addl
push
pop
loope,pn
sar
sahf
mov
pop
dec
add
sbb
adc
or
test
sub
out
push
inc
xchg
sbb
cmp
sbb
fwait
ret
sbb
push
shrb
scas
testb
into
cmpb
push
es
test
mov
cmpsl
pushl
pop
out
inc
jne
sbb
cmp
lods
movsb
pop
push
popa
loope
xchg
push
push
mov
adc
pop
std
or
add
inc
push
or
ljmp
mov
arpl
icebp
pop
jp
mov
gs
sti
gs
mov
sti
push
shrl
mov
pusha
test
out
mov
pusha
bound
inc
pop
lds
dec
sub
sub
fmuls
and
pop
ret
aad
pop
push
mov
decl
jle
aas
xchg
fildll
pop
push
fldl
out
cmp
test
push
imul
loope
inc
add
insl
sub
jnp
adc
rcl
or
cld
pop
stc
mov
sbbb
mov
fisubrl
lea
daa
movsl
loop
movsl
pop
dec
xlat
adc
inc
cmp
mov
insb
dec
inc
mov
ds
sbbl
xchg
pop
cmp
enter
arpl
xor
lret
andl
lock
push
call
clc
loope
sub
adc
daa
xchg
or
pop
hlt
sub
shlb
mov
pop
xor
nopl
adc
add
mov
xchg
jbe
jg
pop
adc
mov
adc
fiaddl
mov
pop
pop
idiv
inc
xor
add
jne
or
cmp
push
nop
cld
lea
pop
cwtl
adcb
mov
and
pop
sbb
aaa
add
in
out
mov
daa
push
inc
inc
mov
push
xor
inc
xor
lret
sti
fucomip
mov
push
shlb
test
loopne
adc
into
sub
lock
les
rol
cmc
mov
xor
dec
inc
mov
xchg
jmp
dec
xchg
lahf
ret
rolb
xor
cmp
dec
in
mov
jae
imul
jo
bound
xchg
scas
movl
cwtl
mov
pusha
xchg
cmp
js
dec
in
stc
add
push
loopne
jg
dec
pop
xchg
sub
in
dec
std
ret
pushf
push
mov
mov
mov
mov
bound
dec
std
push
cltd
add
cltd
jb
mov
nop
xchg
mov
adc
xor
or
jno
lahf
pop
call
dec
test
test
js
loope
in
decl
sub
inc
sub
pop
push
jns
or
fcmovbe
pop
push
push
mov
hlt
and
dec
fsubrl
lods
mov
jmp
mov
lahf
stc
xchg
clc
filds
push
or
xchg
inc
cs
add
les
sub
jmp
jo
loop
mov
mov
pop
sarl
orb
inc
xor
and
adc
es
xchg
jl
jle
fdivr
and
inc
push
cli
and
loopne
outsl
mov
enter
mov
dec
jnp
add
jae
hlt
sbb
cltd
push
adc
xor
orl
jl
dec
shl
sub
cmpsl
adc
dec
sub
mov
test
gs
out
jp
lods
mov
xchg
mov
push
mov
inc
insl
call
mov
mov
pop
loopne
sbb
pop
dec
push
loop,pn
call
adc
add
sbbl
paddsw
push
test
cmp
xchg
jmp
addr16
cmpsl
lret
mov
push
sbb
adc
lahf
scas
mov
push
add
and
pusha
mov
fsubrl
rcrl
and
jnp
out
push
jl
fcompl
push
fcompl
lock
xor
clc
leave
add
fs
daa
sbb
les
pop
ficompl
and
dec
xchg
and
add
rclb
scas
scas
movsl
in
push
orb
into
repz
test
sub
in
cmp
xor
fsub
sub
jmp
push
push
jb
clc
fisttpll
icebp
jae
movsb
add
sbb
mov
hlt
xchg
or
add
adc
orl
mov
sub
cmp
jo
pushf
mov
xor
push
sti
pop
sbb
into
xor
or
rcl
jg
cwtl
inc
sti
dec
and
fcomp
out
and
jne
stc
inc
popa
jge
push
sbb
and
inc
js
inc
fucomi
test
adc
pop
xor
fcomps
mov
in
rorb
ja
push
jl
cs
cli
fwait
sti
mov
dec
cmp
pop
xor
test
andl
into
add
loope
das
std
jae
mov
cld
aas
cmp
rolb
sub
stos
xchg
xchg
adc
inc
or
inc
sub
adc
jnp
dec
mov
and
pop
mov
add
pop
cld
push
jmp
dec
out
add
fwait
jl
imul
addl
aas
icebp
mov
nop
mov
lods
stos
icebp
fs
bound
imul
pushl
xor
jecxz
inc
aad
xchg
int3
fiaddl
cwtl
out
fcmovbe
ljmp
cld
dec
loopne
les
repz
push
loope
jecxz
cmp
or
call
clc
test
in
bnd
push
dec
pushf
stos
and
sbb
out
std
in
mov
fbld
or
pop
stos
dec
mov
daa
xor
aaa
clc
decl
xor
imul
mov
xor
enter
incl
inc
xor
jl
xchg
cmp
push
push
loop
incb
sbb
lock
pop
ljmp
pop
enter
leave
push
mov
decb
mov
inc
and
incl
outsb
mov
lods
leave
push
xor
sti
xchg
inc
add
stc
mov
cltd
mov
add
pushl
fiaddl
dec
jbe
push
dec
or
mov
scas
sbb
xchg
data16
call
je
movsl
es
and
dec
xor
cmpsl
push
call
pop
pop
add
std
ja
movl
lock
adc
adc
sub
nop
cli
cwtl
xchg
push
jp
fldenv
pop
loope
and
lahf
popa
adc
inc
hlt
jnp
out
arpl
jg
into
dec
and
add
mov
dec
and
mov
out
pop
outsl
or
and
int
pop
cmp
push
in
lods
pop
imul
int3
nop
lsl
adc
jb
sub
lahf
rcr
inc
mov
mov
mov
jl
or
out
into
dec
stos
sbb
decl
jae
addr16
js
cmp
pushfw
daa
sub
jmp
mov
sub
adc
ja
inc
mov
push
sbb
xchg
cmp
jg
and
pop
sarb
testl
push
popf
and
push
or
fisubrs
mov
mov
js
arpl
es
adc
loope
popl
sahf
cmp
jle
and
arpl
jecxz
jle
cmc
jmp
sub
pop
call
das
pop
pop
insl
and
mov
jl
jmp
fwait
and
jns
mov
inc
mov
push
cmp
add
lcall
xlat
loop
or
mov
xchg
dec
jge
aas
cmp
sbb
jns
call
imul
push
mov
js
inc
xchg
in
jb
sub
aad
xchg
mov
dec
dec
lcall
addr16
and
push
mov
test
jl
loop
clc
pushl
jae
cmpsl
fwait
inc
mov
in
scas
ss
xor
fdivl
pop
pushf
sub
stc
or
adc
in
or
pusha
aaa
out
pop
cs
in
sti
pop
insb
fwait
lods
ljmp
cld
cmpsb
aas
fwait
pop
repnz
sbb
jnp
or
loopne
popa
icebp
inc
push
aam
xchg
in
addl
inc
rorb
shr
jle
std
inc
das
aam
adc
mov
mov
xchg
jl
hlt
sub
int3
jno
out
std
stc
mov
inc
dec
sbb
sbb
addr16
cli
cmp
js
aad
jge
vpavgb
jg
sbb
cmp
insl
cmc
mov
xlat
push
loop
mov
mov
decl
test
andnps
dec
mov
jle
cltd
hlt
inc
jle
push
incl
cmp
in
dec
lret
jbe
dec
aas
and
sub
imull
pop
pop
sub
push
lretw
pop
dec
cmpsl
lret
mov
pop
cli
mov
pop
inc
in
xor
push
push
out
mov
daa
jbe
outsb
inc
push
call
mov
sbb
imul
sub
insb
int
jmp
xlat
sar
jmp
push
inc
or
xor
loope
cmp
xchg
cmc
icebp
dec
dec
lahf
js
mov
pop
jg
jmp
cmp
out
mov
nop
xor
shll
push
lock
lcall
push
adc
dec
inc
pushl
dec
and
add
mov
lds
arpl
xlat
jne
lods
and
popf
cmp
fmull
insb
and
pop
cli
aas
loop
sbb
gs
icebp
cmp
inc
cmpsb
fnstenv
dec
call
xor
add
or
lea
in
xchg
push
test
cmp
test
fisttps
pop
push
cwtl
dec
mov
inc
jle
imul
cmpsb
mov
inc
icebp
pop
sarb
mov
cmpb
dec
mov
cmc
xchg
ja
mov
mov
das
jo
shlb
mov
push
push
mov
in
lret
xor
jecxz
pushl
or
mov
xchg
pop
push
lods
mov
jae
pop
repz
mov
test
push
jg
or
jo
movsb
dec
insl
scas
mov
sbb
pushf
xlat
jecxz
push
and
mov
je
dec
adc
mov
cmp
mov
xchg
ljmp
xor
mov
mov
mov
pop
mov
push
shlb
push
jbe
mov
push
or
mov
mov
and
stc
mov
or
dec
push
pop
mov
aad
stos
test
insb
sub
and
loope
and
xor
scas
in
pop
and
sti
test
mov
lret
sub
out
arpl
lret
mov
insl
pop
imull
das
lods
cli
test
cmp
es
mov
fbld
test
push
mov
je
outsb
adc
pop
inc
add
cmp
mov
cld
adc
negb
jnp
loopne
sbb
scas
mov
ljmp
imul
shlb
imul
popf
and
inc
sub
lahf
mov
mov
fsts
in
aad
pop
nop
add
dec
pop
pop
das
lock
ljmp
jns
int3
dec
scas
das
sarb
dec
adc
mov
outsl
cmp
adc
jge
aam
dec
jl
inc
mov
mov
adc
mov
mov
inc
jns
sub
lods
int
lcall
into
cmp
popa
shrb
cltd
cmp
lcall
adc
decl
mov
sbb
mov
adc
xchg
pop
mov
ret
xorl
mov
popf
push
adc
xor
leave
mov
inc
into
push
loop
sbb
dec
or
push
xlat
daa
ficomps
cmp
adc
cmpsl
enter
jg
repz
addl
push
repz
leave
mov
stc
incl
incl
sbb
inc
mov
push
dec
cmp
ljmp
test
mov
pushf
cmc
bound
cwtl
aam
fiaddl
std
std
and
jmp
leave
in
shll
ret
or
inc
imull
push
mov
mov
in
cld
or
sarb
pop
add
incl
jno
sbb
mov
inc
push
out
xchg
xor
in
leave
mov
mov
jg
pop
insb
cltd
xchg
ljmp
dec
mov
mov
fcoms
pop
cli
xchg
xchg
mov
lret
fidivrl
pop
xchg
cli
jmp
pushf
in
stos
or
push
cltd
xchg
cld
fstl
in
and
jl
aaa
jno
or
ret
aam
or
add
hlt
in
int3
jg
in
fildl
aaa
jnp
cmp
mov
pop
inc
test
lcall
pop
test
ret
cld
inc
mov
xchg
or
or
push
xchg
sbb
pushl
test
jmp
add
movsb
pop
stc
adc
pushf
das
cld
dec
ret
pushl
and
mov
rcrb
pop
mov
or
decl
jbe
lcall
inc
adc
pop
jbe
cli
incl
mov
movsl
pop
scas
and
jg
in
cmp
shll
aas
sbb
adc
int
dec
sbb
mov
pop
out
lcall
test
sbb
cwtl
sbb
dec
std
xlat
mov
xor
fnstenv
add
jmp
lahf
loope
jo
iret
in
or
pop
mov
pop
xchg
mov
roll
pushf
mov
dec
dec
into
fbstp
jnp
or
cmp
insl
add
rcl
cli
cmpsb
stos
add
outsb
sbb
movsb
fdivl
xchg
inc
jge
or
popf
pop
mov
jge
idivb
inc
test
sbb
jns
lahf
mov
add
dec
loop
gs
repz
and
xor
mov
and
sbb
fincstp
mov
pop
clc
mov
nop
adc
mov
jno
mov
and
mov
and
andl
insb
je
dec
arpl
scas
movsb
lcall
inc
in
cmp
enter
xor
and
dec
sub
sub
push
jg
mov
cltd
fcmove
jae
push
jns
and
mov
lcall
outsb
add
cmp
mov
jno,pn
sub
stos
rol
movsb
mov
clc
or
fstp
push
fsub
mov
lret
subl
outsb
testb
and
cmp
inc
das
lock
pop
adc
sub
push
jmp
jnp
sbb
jp
xchg
mov
shrb
repnz
mov
push
adc
clc
sti
mov
leave
notl
cs
dec
pop
push
fnstsw
jg
ja
jmp
cli
push
in
xchg
rclb
repz
stos
mov
lahf
lcall
add
mov
shlb
xchg
jns
adcb
nop
movsl
call
dec
cld
les
sub
popa
in
movsl
push
inc
ja
cmp
mov
in
push
bound
movsb
mov
jno
sbb
loop
loopne
enter
test
aaa
sahf
test
dec
out
or
sub
ret
and
ljmp
orb
mov
sbb
mov
sahf
test
mov
sar
jmp
hlt
aad
ss
arpl
pop
lods
aad
push
data16
sahf
lret
push
test
add
sbb
call
lock
arpl
or
and
dec
push
jmp
enter
fisubrl
xchg
int3
outsl
movsl
sub
cmp
jno
ficoml
or
xchg
or
out
std
dec
js
and
dec
xor
xchg
adc
in
or
and
aad
test
lcall
fcom
pusha
jbe
add
xor
mov
enter
xchg
loop
incb
mov
js
jp
xchg
cmpsl
mov
ja
out
mov
sti
cli
cltd
sub
iret
lret
add
decl
mov
ret
ss
sahf
and
rcll
cwtl
idivb
daa
jmp
mov
cltd
and
sub
mov
inc
fsubs
cmpsl
pop
mov
hlt
dec
or
ret
mov
and
in
xor
jecxz
sub
jno
pusha
popa
out
lret
les
mov
xchg
add
into
dec
in
daa
fdivl
cmp
add
mov
das
cmc
jo
cmpb
cmc
js
out
stos
shll
cmp
scas
mov
add
movsl
ljmp
fnstsw
test
cmp
push
push
inc
sbb
decl
sub
ljmp
inc
or
stos
jno
jbe
adc
sbb
adc
jns
repnz
jmp
and
jge
pop
icebp
pop
push
dec
xlat
pushf
fnstcw
loopne
outsl
lock
xchg
repnz
xchg
cld
jp
iret
clc
adc
mov
fbstp
jbe
fcmovu
mov
in
pop
bound
mov
jg
xor
adc
nop
stos
test
int3
or
dec
incl
stos
lods
jo
sbb
lcall
std
into
repnz
jo
xchg
mov
inc
pop
cltd
sub
int3
movsl
in
leave
adc
ljmp
cmpsb
sbb
and
test
nop
lea
xor
and
jne
insb
push
insb
shrb
daa
xchg
add
sbb
ljmp
and
cmp
popf
repz
sarb
das
mov
pop
outsb
mov
bound
data16
ljmp
jle
lcall
movsb
outsl
test
std
sbb
mov
leave
mov
mov
ret
add
test
mov
fsubp
je
push
fchs
mov
jmp
push
push
popf
sbb
int3
mov
cld
sti
not
xchg
clc
xchg
jecxz
inc
fisttps
lods
fiadds
dec
aas
or
cmpl
in
ljmp
jmp
add
sub
pushf
add
push
xor
lea
das
std
call
fsubrs
adc
adc
imul
pushl
cli
adc
adc
inc
addr16
mov
cmp
and
rorl
incl
push
sbb
fldcw
les
insb
bound
and
fisubs
cmp
insb
dec
movsl
std
rorb
adcb
fnstsw
inc
dec
mov
fiaddl
das
xlat
mov
add
xor
js
adc
add
inc
cld
repz
xchg
lods
jmp
int
xor
push
cmp
jmp
pop
ds
mov
fnsave
xchg
rcrb
imul
decl
or
push
mov
xchg
std
shll
jg
jg
pop
jg
ret
xchg
jmp
jns
test
int3
sti
xchg
icebp
fnstcw
int
mov
out
mov
pop
sti
outsl
fistpl
pop
sbb
incl
inc
sbb
xor
sbb
call
das
icebp
ds
pop
mov
call
jecxz
inc
aas
ret
mov
test
jecxz
lcall
out
fisubrs
pop
repz
aaa
pop
inc
aad
dec
sarl
pushl
adc
mov
jmp
jg
adc
aad
mov
cld
js
sub
outsl
mov
xchg
or
push
inc
outsl
mov
call
mov
mov
rep
pop
scas
orb
mov
lcall
dec
push
in
xchg
out
pop
mov
loopne
xchg
dec
lock
jb
lret
push
push
dec
sahf
stc
jo
inc
or
ljmp
pop
pop
jle
test
ret
das
mov
test
lcall
mov
out
insl
lahf
mov
or
lea
int
cs
cld
inc
or
and
fistpll
mov
je
ret
add
dec
bnd
dec
stos
jmp
pop
cmpsb
cmp
in
jg
or
lret
sbb
iret
sub
jns
call
aaa
out
push
cld
jg
fadds
jae
lea
hlt
mov
iret
pop
mov
xor
cmp
mov
sbb
loope
add
inc
stc
or
add
ljmp
mov
push
mov
cmp
inc
inc
sti
jp
xor
pop
nop
loop
jmp
call
adc
fistpll
mov
xor
xor
and
jmp
mov
mov
mov
jo
scas
sahf
or
outsl
lds
xor
fucomi
pop
scas
add
scas
pop
dec
in
push
jb
or
pop
out
jmp
adc
cld
and
and
loop
subb
sbb
iret
mov
pushl
in
bound
stos
push
add
push
movsl
movsl
mov
stc
adc
add
call
nop
std
das
iret
xchg
and
jmp
stos
mov
pushl
sub
hlt
mov
jne
rclb
push
fldl
inc
call
inc
ret
jl
aas
mov
pop
inc
xchg
mov
jl
push
push
inc
call
xor
test
shll
aam
sub
sahf
jmp
mov
jmp
add
mov
ds
stc
test
sarl
jns
xor
jg
xor
ds
filds
sbb
lret
mov
ljmp
jne
idivb
mov
xlat
std
cli
pusha
test
sub
lock
aas
ret
pushl
andb
icebp
cmpsb
out
das
cmp
and
sti
dec
cltd
fcoms
mov
test
cmp
scas
xlat
and
mov
mov
pop
mov
icebp
call
jns
sbb
outsb
cmc
xchg
leave
cmpsb
push
mov
shufps
filds
mov
adc
ret
or
clc
mov
and
mov
adc
hlt
pushl
add
dec
push
lods
mov
pop
stos
mov
sar
sbb
ljmp
ffree
adc
pop
fsubs
out
add
gs
cmp
sbb
outsl
std
call
dec
pop
clc
iret
fiadds
dec
popa
call
mov
pushl
test
and
xchg
stc
dec
bound
inc
cli
or
push
mov
lcall
jne
enter
mov
rcr
out
in
inc
or
incl
js
pop
mov
pop
add
xchg
je
xor
in
sub
aaa
stos
outsl
inc
push
jno
mov
sarb
ficomps
ljmp
icebp
push
in
sbb
mov
iret
and
sbb
pushl
cmp
jns
push
outsl
hlt
push
mov
int3
aaa
loope
xchg
pop
js
fdivrp
ljmp
push
aaa
dec
mov
stc
addr16
aas
pop
jbe
cwtl
jl
and
ljmp
stos
push
out
xchg
mov
pushl
xchg
fidivrl
add
sub
push
cmp
mov
cmpsb
jns
lcall
and
rclb
mov
lcall
push
add
aad
out
jnp
pop
aad
add
das
loop
loopne
lock
ljmp
call
aas
sub
ljmp
pop
sbb
push
push
jo
push
fidivs
jae
cwtl
inc
dec
call
mov
mov
scas
pop
hlt
sbb
mov
hlt
mov
jecxz
mov
fnstsw
adc
fistpl
xchg
ss
movsb
pop
in
cmp
cmp
inc
cld
jmp
je
fs
cmp
mov
data16
jge
adcl
in
call
pop
add
xor
shll
lret
popf
incl
mov
pop
scas
sub
jne
repz
lods
cld
pop
fwait
fdivs
cmpsl
pop
xchg
outsl
lock
loope
adc
stos
daa
mov
push
pop
in
jg
jge
add
ljmp
and
cli
sbb
jle
mov
packssdw
fcompl
lds
push
mov
clc
pop
fcomip
sti
xchg
push
xchg
ds
jo
push
cmc
cmovbe
call
push
add
push
jno,pt
sbb
loopne
jb
and
xor
mov
loope
pop
pop
nop
mov
mov
pop
loop
sbb
mov
vpmacssdd
mov
mov
adc
sub
out
mov
push
fbld
dec
lret
adc
call
gs
outsl
hlt
decl
sub
cmp
shll
addr16
aas
scas
add
decl
mov
dec
pop
rclb
cmp
jg
mov
repnz
and
std
lret
or
mov
add
dec
ret
enter
dec
adc
std
jne
ud0
fnstsw
shrb
call
pop
sub
cmp
push
cli
stos
movsl
adc
stos
xchg
lcall
arpl
push
xchg
mov
orb
pop
int3
je
dec
enter
shl
out
inc
fadds
sbb
das
pop
mov
in
inc
xchg
inc
adc
stos
push
add
shlb
outsl
cmc
es
aaa
pop
scas
icebp
ret
fs
mov
notl
push
mov
xor
jmp
jecxz
shl
cmp
push
jno
mov
push
ljmp
in
push
adc
pop
popa
inc
test
pop
int
cmc
aaa
cli
pop
sbb
out
mov
and
xor
mulb
roll
idiv
ljmp
add
jae
jbe
push
adc
adc
mov
filds
lcall
adc
mov
sahf
jp
jp
pusha
ja
add
adc
dec
in
fiadds
inc
xor
jg
and
lock
dec
sti
jo
or
or
decb
and
mov
jne
cmpsb
popa
jne
pop
jecxz
mov
cmp
ljmp
pop
jg
and
push
nop
ret
ljmp
pop
add
jle
mov
ljmp
fmul
sub
int
and
xor
lock
mov
dec
xchg
lods
loopne
ljmp
cld
inc
dec
xlat
pop
popf
fwait
mov
xchg
and
cmp
loop
bnd
jg
inc
jb
sub
lret
rcrb
jg
add
daa
push
bound
aaa
pusha
fildll
pop
push
push
ja
sahf
adc
dec
in
icebp
maskmovq
imull
lret
inc
arpl
mov
loopne
sbb
ja
cmpb
imul
lcall
incl
mov
icebp
jecxz
mov
loope
in
mov
mov
and
and
dec
test
mov
scas
xchg
arpl
mov
loope
jne
adcl
mov
inc
jg
and
cltd
cli
pop
std
scas
jle
popa
lcall
sti
mov
test
cmpsl
and
adc
mov
mov
mov
push
dec
std
jg
imul
cld
lods
cmc
into
cmp
sahf
nop
cmp
lcall
push
mov
in
mov
xchg
stos
and
imul
pop
fidivl
dec
loopne
das
lock
jae
mov
arpl
cmp
cmpsl
test
xor
popa
add
cmpsb
imul
inc
inc
rorl
int3
mov
jp
adc
ljmp
out
xchg
or
jo
dec
cwtl
cli
ljmp
mov
addl
jb
in
inc
nop
adc
fucomip
push
mov
hlt
and
push
movsl
addr16
cmpsb
jno
adc
sbb
add
xchg
stc
addl
xchg
xor
sarb
ficomps
jmp
movsb
das
push
sbb
pop
or
adc
mov
adc
in
xchg
inc
add
push
bound
lods
hlt
adc
rcll
into
divb
dec
into
lahf
inc
xor
jge
les
pop
xchg
jb
int3
mov
das
cmp
mov
jle
aam
cwtl
xchg
or
call
arpl
shrl
int
xchg
pushf
ret
xacquire
insl
call
pushl
mov
aam
andb
mov
in
and
mov
ljmp
aaa
mov
inc
outsb
roll
add
js
mov
jg
inc
xchg
pop
aaa
cli
jg
xchg
push
enter
add
add
out
into
push
jmp
push
sub
outsl
ret
add
clc
rclb
int3
sub
sub
sub
mov
jge
jg
pushl
out
and
shl
sbb
inc
xchg
flds
inc
nop
mov
and
pop
push
into
xchg
cmp
incb
cs
fmull
push
das
pop
pop
test
dec
arpl
cmp
jl
push
and
addps
dec
jb
outsl
fidivrs
mov
xor
cmpsl
stos
mov
bound
xor
in
push
jg
jg
inc
je
cmp
ss
ja
jne
jmp
jns
pop
clc
mov
icebp
pop
jns
or
cli
or
push
dec
xorb
add
push
sub
cmp
arpl
outsb
ljmp
ljmp
movsl
jne
sbb
dec
fnstcw
xor
ljmp
call
lods
scas
rcll
fs
subl
pop
pop
adc
pusha
in
imul
call
xor
sbb
into
fidivs
enter
mov
repz
and
decb
sarb
pop
cmp
sbb
fimuls
pop
dec
int3
dec
orl
popf
mov
ss
dec
lahf
lret
inc
cmp
or
mov
js
cmp
dec
bound
pop
xor
bound
clc
decl
adcl
call
jbe
push
sub
ret
lcall
jnp
jmp
fsubl
aad
sti
sbb
add
sbb
mov
lea
cli
sbb
and
fildll
std
jg
add
leave
jge
test
stos
fists
movsl
rclb
jbe
cmp
mov
into
subl
xchg
cwtl
inc
adc
les
icebp
push
mov
inc
lea
add
rcrb
lcall
add
xor
xchg
push
cmp
ja
xor
mov
jg
mov
pslld
js
push
lret
leave
dec
mov
xchg
jp
stos
ss
lcall
subl
jae
cmpb
andl
mov
int
sbb
jo
and
incl
scas
or
rcr
decl
jnp
out
roll
sub
cmp
jb
push
dec
fimull
lcall
int
mov
aad
lods
and
push
insl
lods
shr
pop
push
pop
inc
shrb
test
xchg
jg
pushl
cmp
jg
jl
jnp
or
shll
pop
das
sarb
ljmp
pop
pop
mov
cld
sbb
mov
ret
daa
std
outsl
cld
pushl
aas
mov
inc
pop
clc
cmp
out
sbb
loopne
sub
mov
push
pop
pop
loope
cmpsl
leave
in
xchg
sahf
sahf
sbb
pushf
pop
loopne
mov
popa
stos
movsb
out
mov
aas
sub
pop
mov
ljmp
xor
divb
push
push
lret
shlb
add
xlat
xor
stos
xor
mov
lret
pop
sbb
mov
adc
divl
jmp
in
push
cmp
insl
jne
push
shl
xor
jg
or
out
pop
adc
pop
hlt
adc
jns
inc
mov
movsl
mov
lret
enter
out
inc
subb
ljmp
cmp
test
fdivs
xchg
sbb
xor
sub
incl
jnp
jle
sub
pop
std
cmp
dec
push
xor
mov
mov
int3
jnp
lea
imul
mov
adc
mov
incl
dec
idivl
add
nop
ds
mov
mov
jae
fsubr
loopne
mov
loopne
decl
mov
adc
js
pop
movsl
add
adc
jno
cmc
or
inc
cli
jg
call
ret
sub
enter
xor
outsl
mov
mov
je
adc
movsl
into
pusha
mov
fwait
mov
jmp
faddl
mov
enter
lcall
ror
add
cwtl
addr16
or
mov
je
push
cmp
enter
dec
and
mov
bound
andl
loope
jnp
jl
mov
mov
fldt
push
lea
or
stos
push
lret
loop
das
adc
or
mov
jae
out
call
pop
std
push
fwait
push
cmp
fisubl
mov
popf
sub
jg
or
add
mov
xor
pop
addr16
cmpsb
push
mov
mov
mov
xor
sbb
cmc
ret
ljmp
incl
scas
icebp
repz
cld
fwait
scas
xchg
arpl
and
ret
mov
sbb
ljmp
mov
jo
in
jmp
xchg
bound
inc
dec
lret
hlt
xor
cmp
push
mov
inc
pop
dec
mov
in
lret
jmp
mov
fnstenv
mov
cli
imul
dec
cs
push
xor
sub
lock
pushl
fidivl
nop
pop
xchg
dec
stos
jnp
jle
call
mov
es
fdivrs
arpl
ja
or
outsb
and
loop
jg
mov
into
or
arpl
mov
mov
test
jb
mov
ljmp
push
and
sbb
sbb
and
fs
xor
lods
sbb
jmp
cmp
in
negl
cld
push
test
fnsave
lcall
test
sub
popf
mov
sahf
mov
adc
pop
out
fcom
ljmp
ret
rorl
pusha
and
scas
icebp
mov
cli
jg
frstor
int
gs
mov
stos
jb
stos
pushf
mov
add
inc
aaa
fildl
in
pop
pop
ss
push
pop
mov
mov
jno
decb
add
or
cmp
stc
aaa
xor
push
push
pushl
testb
mov
pop
mov
xchg
dec
push
push
pushl
mov
loope
or
jp
call
pushf
push
or
lahf
rcr
ljmp
nop
sahf
in
xchg
clc
int3
fnstcw
dec
repz
push
movsl
mov
sbb
enter
cmp
and
in
push
add
mov
or
call
jmp
cltd
add
decb
mov
out
and
cltd
or
inc
dec
test
xorl
fimuls
gs
ljmp
jecxz
scas
dec
xchg
les
cltd
xor
dec
inc
ret
mov
cld
mov
popa
fidivrs
je
jmp
int3
es
xchg
jg
pushl
add
jbe
movsb
or
movsl
cwtl
cmp
push
neg
xor
rclb
lcall
sub
sub
ss
fs
fcoml
push
inc
mov
mov
mov
add
ror
std
decl
mov
cld
test
fmulp
mov
imul
call
mov
jge
mov
iret
push
mov
daa
xor
out
clc
loopne
or
call
stos
pusha
int3
fadd
add
in
dec
int
decl
scas
aam
aaa
xor
cmp
ficoml
push
xchg
xchg
lds
add
int
cmp
xlat
sub
mov
mov
push
mov
mov
pop
fidivl
adc
rclb
jp
mov
sub
out
or
int3
mov
lock
call
out
test
dec
lods
push
dec
clc
jns
mov
jne
outsl
or
or
clc
mov
icebp
sbb
inc
insl
mov
scas
cmpb
pushl
gs
dec
rol
lcall
push
imul
sub
cmc
lock
jge
and
dec
xchg
dec
push
cltd
negb
repnz
xlat
ret
arpl
dec
std
dec
lods
add
jb
and
dec
sub
add
or
sti
stos
push
inc
mov
jae
dec
imul
pop
pop
cmc
push
or
sub
dec
btc
rcll
jge
xor
popf
das
inc
in
fnstcw
mov
push
es
adc
ljmp
daa
ljmp
hlt
out
test
push
in
fisubrs
in
push
out
xor
pxor
sti
addr16
arpl
push
call
stos
ss
gs
addb
pop
and
aam
ljmp
shlb
mov
in
inc
adc
into
mov
imull
fisttpl
xor
cltd
inc
jne
mov
jmp
pop
clc
decl
cmc
mov
repz
jnp
iret
mov
push
mov
push
inc
sub
mov
fsubrs
push
push
es
pop
outsb
lahf
daa
scas
mov
lods
lods
mov
adc
incl
mov
xchg
jnp
add
movsb
sub
mov
in
mov
mov
std
lcall
pushf
sub
or
clc
or
mov
stc
es
sbb
mov
call
ja
adc
add
cmpsb
cmc
adc
mov
ja
orb
aas
faddl
mov
jmp
jmp
jns
pop
inc
adc
ret
rolb
mov
adc
mov
pop
sarb
loope
add
inc
stc
fisubrs
or
sbb
ja
jo
xorl
outsl
add
or
pusha
adcl
lcall
xor
cmc
leave
js
jle
addr16
sub
xor
arpl
aam
pop
xchg
mov
lock
stos
adc
and
cmpsb
adcl
sbb
fcmovbe
add
or
bound
ljmp
sbb
mov
bnd
xor
adc
adc
imul
smsw
adc
call
fwait
pop
call
push
int
mov
clc
jne
cmp
jmp
bound
xchg
push
xchg
jae
push
and
and
ret
sub
jb
jg
addr16
stc
mov
aas
cs
and
add
int3
loopne
sub
sahf
pusha
aad
push
ja
dec
jmp
mov
popf
rorl
inc
sub
cmpsl
scas
or
popf
lock
addl
pop
mov
callw
stc
aad
popa
push
jae
repnz
mov
sbb
mov
dec
pextrw
pop
dec
ljmp
add
push
mov
and
test
mov
adcb
stc
pop
sub
xor
ja
fisttpll
stos
cmp
filds
pop
or
cmp
jecxz
popf
pop
mov
mov
mov
pusha
movsl
pop
xchg
ret
xchg
sbb
call
xor
loope
call
mov
mov
dec
das
jae
pop
ret
cmp
decl
mov
pop
sub
xor
sub
stos
cmp
in
imul
fistl
push
test
ljmp
fiaddl
pop
inc
aaa
and
decl
sub
sahf
mov
mov
adc
xchg
and
adc
and
decl
mov
test
adc
fcmovnbe
mov
dec
lret
or
ror
mov
jns
lcall
les
pop
aas
lret
es
cmp
pop
dec
ds
pushf
or
xchg
pop
mov
ficompl
in
inc
pushl
sub
dec
fdivs
bound
stos
cmpsl
inc
iret
insl
jmp
pop
xchg
pushf
out
rcr
or
iret
sbb
inc
lods
dec
jmp
in
sbb
cmp
mov
mov
test
pop
push
cmp
mov
jns
xor
ljmp
xor
addr16
pop
jl
outsb
popa
sub
pop
jg
outsl
jne
sub
das
mov
stos
cmovno
or
jge
fistl
adc
mov
flds
inc
inc
stos
sbb
ljmp
fs
sub
push
repnz
outsl
mov
aas
or
in
inc
stc
pushl
cmp
stos
je
daa
cmp
xchg
xchg
lds
cmp
scas
jg
xchg
jmp
pop
lock
subl
push
ret
js
jmp
fbld
mov
scas
call
pop
repnz
mov
and
sbb
xchg
fnstcw
or
outsb
lret
scas
mov
cvtpi2ps
lock
jg
jge
sbb
jmp
adc
shll
jecxz
cmp
or
and
mov
sbbb
movsl
pop
in
lock
xchg
test
decl
ds
dec
scas
sbb
inc
xchg
shlb
push
adc
jae
rcr
cmc
jno
dec
std
pop
clc
arpl
test
repz
les
ljmp
pop
push
xchg
xor
mov
mov
jmp
push
pop
mov
fcom
dec
mov
jne
call
cmp
popa
push
outsl
daa
inc
or
xchg
std
mov
mov
jl
dec
pop
imul
std
lcall
mov
sahf
dec
mov
daa
loope
jle
cmpsb
sub
mov
mov
gs
insl
das
pop
clc
dec
std
pusha
sbb
imul
sub
frstor
out
stos
push
call
and
or
inc
test
jge
xlat
mov
adc
cmp
ljmp
popa
lcall
mov
mov
push
jmp
dec
xchg
daa
push
lret
push
pop
xor
cmpsb
mov
popf
sbb
ret
test
xchg
push
pop
stos
movsb
pop
addr16
jg
das
int3
notb
les
test
sub
inc
push
push
push
pushl
scas
cld
cltd
loop
sbb
sub
push
dec
mov
stos
push
cmpsl
mov
addr16
jmp
cld
and
in
dec
mov
fmull
jecxz
lret
loopne
mov
push
and
lret
ljmp
or
pause
test
mov
add
inc
xor
sub
xchg
mov
mov
test
add
mov
mov
lods
push
push
ljmp
lcall
pop
mov
jecxz
pop
push
inc
xor
fnstsw
vpcmpgtw
mov
adc
xor
in
cmc
cmp
hlt
and
cltd
sahf
adc
loop
ja
mov
repz
xlat
loope
shl
xchg
mov
xor
decl
push
pop
push
inc
add
fistl
sub
mov
cmp
gs
add
std
sub
pop
loopne
dec
sub
mov
out
mov
popa
icebp
fucomp
mov
or
stos
jg
call
jp
push
test
xchg
mov
pop
test
decb
adc
inc
fbstp
ret
ret
mov
jmp
push
dec
dec
pop
sbb
xor
leave
popf
push
dec
push
popa
pop
inc
dec
jg
ss
lcall
jmp
adc
pop
jne
ds
data16
imul
insb
stos
adc
movsl
jg
mov
push
mov
lret
adc
scas
sbb
push
xor
dec
lds
sbb
fucomi
push
or
repnz
jg
cli
mov
call
sahf
lea
cmp
cmp
incl
int3
sbb
xchg
test
xor
fdivr
incb
pushl
sbb
add
repz
add
ret
adc
lods
xor
adc
call
jmp
mov
fsubrp
mov
pop
inc
vmovddup
outsl
adc
out
mov
dec
out
int
mov
jmp
sbb
in
xor
push
xlat
xchg
bound
sbb
mov
mov
aad
dec
cmp
jbe
adc
xchg
movsl
add
xchg
rcll
jg
inc
cmpsb
cmpsb
popa
mov
shl
push
dec
push
iret
sbb
pop
loopne
xor
sbb
push
push
lds
cli
dec
insb
lods
lret
add
mov
jns
icebp
mov
fs
int3
hlt
ud0
ljmp
inc
sbb
adc
fs
xor
xchg
xlat
fadd
repz
bound
mov
jns
sbb
add
xchg
imul
inc
inc
incl
mov
out
dec
pushf
outsb
cmp
add
dec
ja
push
mov
ljmp
gs
dec
cwtl
popw
sub
scas
jb
icebp
mov
cld
add
jmp
jle
sub
pop
bound
push
or
sahf
shlb
xchg
sti
sbb
loopne
les
in
test
fmuls
ljmp
and
insl
inc
addr16
and
mov
iret
in
jge
leave
jae
orb
inc
xchg
ljmp
daa
mov
and
enter
iret
sub
mov
jle
arpl
sbb
ljmp
hlt
shll
leave
sub
movsl
add
bound
test
adc
and
adc
shlb
pusha
jb
mov
push
xor
inc
lcall
std
fisttps
inc
test
loop
test
shl
xchg
jns
sub
inc
push
mov
fbstp
jo
mov
ss
add
jne
nop
jecxz
je
push
sarl
mov
dec
fdivr
incl
dec
dec
inc
lods
mov
stos
or
lods
ja
fiaddl
or
push
test
outsl
dec
pop
add
ds
pop
insb
cmp
test
ss
push
cmpl
lods
pushl
lret
add
fld1
or
jg
inc
test
hlt
das
ljmp
inc
pop
mov
test
push
cmp
mov
pop
data16
or
push
loop
fisubrl
push
pmulhuw
pop
inc
push
fucomi
and
pop
sbb
loopne
push
or
aam
call
adc
les
or
mov
into
and
inc
xor
lahf
jp
push
jg
incl
cmp
imul
mov
xchg
and
leave
jg
mulb
lea
xchg
and
sub
stos
mov
jns
sahf
pop
cwtl
stos
sti
jne
mov
inc
mov
stc
cmp
outsb
xchg
js
inc
push
and
movsl
pop
mov
movsb
shlb
jg
dec
lods
mov
sbbb
fildl
nop
adc
jl
pushl
jl
cmp
xor
pop
push
imull
aaa
cmc
jg
jle
enter
repz
dec
cmp
sub
out
out
pop
sbbl
cmpsb
dec
shll
dec
int3
sbb
pop
repz
or
cmpsb
or
cmp
dec
mov
data16
lcall
jmp
adc
gs
ficomps
xor
push
xlat
in
sbb
call
jg
and
add
fbld
xchg
clc
add
shll
mov
sbb
cmp
push
inc
into
pop
pop
jg
fmuls
fstpl
xchg
in
scas
in
mov
es
movsl
dec
and
ljmp
and
cmpb
or
mov
dec
out
rorb
lahf
push
aaa
sarb
loopne
dec
inc
sbb
lahf
cmpsl
notb
pop
cli
mul
comiss
fwait
aam
cmp
cwtl
jle
faddp
sar
sar
call
pop
addr16
add
cmpsb
add
stos
data16
ss
lcall
mov
fadd
xor
push
inc
mov
jg
mov
inc
int
leave
lds
push
lds
xchg
nop
cmp
jg
fs
mov
xor
cli
pop
stc
mov
jno
mov
mov
in
and
test
mov
iret
sbb
mov
mov
jmp
pop
push
sub
sub
pop
ret
adc
cmp
fs
lea
rclb
out
iret
ljmp
test
jbe
jbe
dec
jne
ljmp
cmc
mov
adc
hlt
fcoms
mov
int
dec
mov
xchg
lcall
cmc
mov
jbe
push
repnz
lock
push
xchg
inc
incl
in
inc
imul
sub
xchg
scas
aad
adc
mov
add
daa
popf
fmull
orl
std
rcll
mov
pushf
out
daa
mov
lods
out
mov
int
adc
push
fdivr
fsubrs
pop
pop
mov
add
cmc
add
cmp
xlat
sahf
cmp
sbb
lods
test
push
dec
sub
and
inc
aad
test
ljmp
icebp
push
js
in
mov
dec
popf
lods
loopne
int
sarb
mov
leave
loopne
ljmp
mov
mov
lahf
dec
lahf
stos
nop
and
dec
rep
and
inc
pop
cli
or
sbb
repnz
ror
cmp
push
cwtl
adc
adc
push
repnz
mov
fisubrs
cmpsl
stos
pop
ljmp
out
add
leave
push
sbb
scas
dec
push
lcall
xchg
or
inc
cli
inc
dec
stos
icebp
int3
cli
xchg
sbb
aad
jmp
stos
es
mov
sti
sub
scas
scas
pop
int3
inc
fs
outsb
roll
mov
mov
loopne
lods
lea
stos
pop
repnz
dec
mov
dec
add
xchg
jbe
push
mov
sbb
sub
stos
pop
cmpsl
out
shr
lcall
incl
mov
sahf
push
mov
into
mov
fisubs
clc
pop
or
inc
ret
mov
fmuls
and
adc
mov
cmpsl
mov
popf
dec
mov
add
in
and
lods
dec
sub
push
push
lcall
jp
push
rcrb
shll
push
out
imul
jmp
das
cmc
lock
pushf
xlat
mov
lods
sbb
cmpsb
lea
into
addr16
adc
add
push
and
mov
repz
call
jp
out
js
fbld
inc
es
stc
iret
movsl
clc
nop
stos
in
daa
pushl
ljmp
sub
sbb
nop
subb
xchg
cli
mov
xchg
movsl
jmp
test
cmpsb
incl
pop
ja
sti
decl
push
cltd
jge
or
lret
fists
loope
mov
and
inc
aad
lcall
pop
lret
dec
loope
les
call
mov
stos
ljmp
pop
int3
cmp
mov
aas
test
xor
jg
mov
dec
mov
pop
xor
ret
repnz
sti
movsl
decb
and
add
jbe
mov
sti
push
movsl
mov
jnp
aas
mov
popf
add
xchg
insl
and
bound
xchg
xchg
xchg
inc
add
sbb
lock
scas
pushl
jecxz
sub
mov
mov
xor
clc
insl
movsl
fidivrl
add
or
call
cmp
aas
mov
aaa
cmp
inc
ja
xchg
push
mov
bound
adc
fidivs
repz
mov
cli
jg
call
pop
and
out
hlt
push
add
xchg
hlt
push
cmp
das
cmc
call
dec
push
sub
xor
mov
mov
dec
std
fucomip
call
int3
aam
shl
fdivp
lods
dec
add
test
push
cltd
jle
fnsave
mov
push
ljmp
movsl
dec
push
nop
jmp
std
lcall
in
repz
fsubl
and
inc
cmpsl
jl
mov
lret
pop
stos
push
mov
loopne
call
lcall
pop
push
and
clc
sbb
sub
mov
pop
in
test
pushl
push
sub
xchg
out
and
xchg
jbe
outsb
xchg
test
push
icebp
out
adc
pop
inc
pop
mov
xchg
xor
xorb
in
xor
sub
jg
loopne
scas
jno
pop
cmp
mov
cwtl
mov
cmpb
ljmp
cmp
rclb
push
outsl
test
sub
mov
sahf
xor
lcall
sub
inc
scas
lea
aaa
lds
mov
decl
call
or
or
xchg
int
pop
pushl
insl
aam
stos
les
push
popf
adc
mov
inc
pop
xor
in
pop
mov
bound
mov
or
jl
inc
sbbb
mov
call
dec
ret
addl
mov
or
or
lea
pop
xchg
mov
nop
popf
jno
mov
cmp
call
mov
scas
cltd
cmp
ss
imul
pop
mov
xor
sub
decl
dec
sub
mov
sub
inc
lods
dec
fistps
pushl
iretw
xor
movsb
daa
mov
cmp
xchg
lahf
sub
test
pushl
in
flds
nop
nop
movsl
js
push
xor
lret
xor
xor
xchg
scas
add
pop
mov
call
inc
sub
push
cltd
mov
pop
mov
scas
add
stc
xchg
pop
loopne
lcall
flds
push
mov
gs
fwait
xor
add
sbb
jecxz
ljmp
xchg
sbb
xchg
jecxz
test
pop
mov
ret
fadd
jge
pushl
les
mov
in
test
mov
xchg
cmp
xchg
pop
push
push
incl
mov
jae
ficompl
jg
sbb
push
rolb
imul
mov
leave
add
outsl
mov
nop
fucomip
lcall
shlb
fsubs
mov
shrl
fs
inc
and
sub
push
pop
jno
mov
pop
fcmovnbe
mov
insb
jnp
lea
inc
cmc
call
outsb
xchg
cld
push
mov
iret
leave
inc
mov
lcall
loope
es
insl
shl
xor
andl
xor
in
clc
gs
jg
pop
cmp
aad
pop
pusha
orl
in
xor
test
sti
inc
sub
mov
cmp
mov
rcrb
insl
xor
stos
loop
mov
decl
add
cld
std
test
mov
pop
pop
in
sar
subl
mov
aaa
fdivr
ljmp
xchg
pushf
mov
dec
stos
sub
cmp
jg
ljmp
sbb
pop
fs
adc
sub
rcrl
in
jl
ja
aas
incl
jo
xor
pop
xchg
mov
sbb
sbbb
inc
test
out
mov
jge
xor
pop
in
ss
lcall
fwait
adc
scas
hlt
xor
sub
stos
cmc
stc
cli
loope
push
xchg
add
jbe
ljmp
cmc
mov
inc
push
pop
inc
lea
out
pop
lods
test
and
inc
push
jmp
mov
pop
sub
mov
sub
sub
ffreep
fistps
jge
in
test
ficompl
subb
in
movsl
std
pop
jmp
sub
int
lcall
js
ds
inc
push
xor
incl
negb
inc
add
xor
cmp
inc
lock
mov
das
std
lcall
fst
mov
sbb
out
cmpl
add
inc
incl
sub
mov
les
jno
inc
inc
pop
aad
push
jp
dec
mov
inc
mov
int
mov
lods
xchg
cmp
call
add
mov
pushf
div
add
clc
lcall
out
out
adc
push
lds
lds
push
call
sbb
xchg
pop
push
lret
pop
popa
nop
cmp
inc
jge
popf
jb
push
jbe
cmpsl
loope
test
stos
sub
filds
mov
xchg
mov
movsl
cmpsl
add
outsl
inc
rolb
push
loopne
cmp
cld
aaa
add
dec
xor
jns
adc
in
shl
push
jg
inc
dec
adc
cmp
jg
mov
outsb
add
es
and
xor
and
je
loope
stos
mov
hlt
xchg
push
adc
or
stos
shrb
adc
push
or
sub
lea
int
jl
pop
call
pop
add
repnz
fadd
cmp
mov
sbb
int
adc
sub
andb
cli
incl
ret
adc
lret
jg
or
mov
or
push
fdivs
push
mov
nop
xchg
int
cmc
in
xchg
loopne
lret
mov
add
add
push
jns
sub
jg
lea
add
add
cmp
adc
aad
rolb
insl
sti
fistpll
rorb
hlt
mov
push
das
jo
dec
pop
cmpsl
sahf
push
js
mov
sbb
add
sbb
add
and
inc
dec
mov
cli
fstpt
push
xchg
mov
sbb
xor
mov
mov
add
mov
out
scas
ljmp
and
jne
or
mov
add
pop
pop
fsubrl
jo
adc
push
mov
add
xor
inc
push
les
xchg
adc
push
bound
inc
out
in
data16
dec
push
sbb
es
imul
mov
aad
lea
add
push
test
addl
fisttpll
call
and
rolb
sbb
mov
mov
dec
xchg
out
ss
or
inc
popl
or
aam
ret
pop
add
jmp
out
pop
mov
out
xchg
jno
sbb
cmp
stos
fimull
ja
xchg
mov
push
or
cld
adc
inc
inc
inc
or
call
adc
cmp
out
jbe
lock
add
mov
lcall
jne
ret
les
add
lea
sub
add
and
fwait
adc
inc
das
mov
clc
gs
push
push
imul
push
or
jbe
fistl
add
inc
xchg
int
notl
cmp
add
adc
xorb
and
mov
cmp
jns
or
jle
fwait
mov
popa
ret
cltd
cmc
or
sub
pop
xchg
dec
push
adc
jp
push
pop
mov
add
pop
adc
inc
adc
outsb
arpl
push
jne
outsl
push
push
scas
mov
jo
lea
jnp
leave
call
pop
movl
push
xchg
jnp
jnp
fsubrl
pop
xlat
push
push
enter
lods
call
in
jl
inc
fldl
dec
xchg
push
xchg
dec
inc
mov
iret
dec
add
push
sub
fidivs
mov
inc
repnz
jle
or
adc
dec
enter
mov
inc
subl
push
lea
stos
cmpb
mov
sub
fwait
fsubl
daa
inc
fmul
fisubrs
jecxz
std
xchg
xor
inc
xor
or
mov
cmp
inc
aad
call
mov
adc
stc
inc
inc
shlb
mov
jnp
pop
ljmp
icebp
aam
mov
xlat
sar
outsb
mov
push
jl
xor
out
inc
mov
xchg
nop
adc
div
fadds
mov
out
pop
jle
cmpl
inc
mov
cmp
outsb
outsl
pushf
adc
and
movsl
mov
int
mov
mov
push
lcall
enter
loopne
stos
and
rcr
cs
dec
movsb
mov
pop
lds
ss
cmpsb
inc
add
loop
jp
arpl
jl
push
fcoms
shrb
mov
push
in
scas
sbb
push
xor
movsl
rcrl
imul
jl
out
sbb
adc
push
int3
xchg
test
popa
pop
outsb
jg
mov
lods
in
cmp
mov
mov
xchg
dec
mov
inc
lret
sbb
or
call
add
add
lods
add
adc
cli
and
mov
mov
mov
jb
pushf
mov
loop
inc
in
add
inc
jne
outsl
in
lret
dec
and
roll
movsl
mov
or
lods
flds
ss
push
into
xchg
loopne
test
mov
sub
adc
pop
add
js
sub
mov
mov
mov
emms
fildll
sbb
and
cmp
movb
sub
or
clc
lea
fstpl
xlat
lds
cld
outsl
mov
or
cmp
and
pop
lea
fldt
in
cmpsl
mov
push
pop
enter
jp
lods
adc
mov
add
mov
mov
mov
stos
loopne
lods
or
mov
ds
push
push
push
outsb
mov
push
pop
jl
add
roll
add
push
mov
rol
inc
test
xor
lahf
mov
insb
loopne
mov
and
hlt
push
adc
dec
fiadds
push
clc
xlat
mov
test
push
popa
rcr
or
sbb
push
cs
cmp
dec
sbb
xchg
stos
lock
mov
push
pop
jp
xchg
roll
sbb
fwait
aas
aad
mov
nop
das
jnp
add
or
call
xchg
lahf
ds
sbbl
pushl
add
xor
popa
mov
sbb
mov
pop
movsl
mov
jmp
jnp
stos
roll
mov
mov
stos
mov
jl
insl
jmp
fcompl
or
clc
incl
jae
rcll
aad
sarl
leave
and
test
pop
push
jo
aam
shrl
pop
scas
inc
rcrb
mov
imul
andl
push
push
hlt
inc
push
fnstenv
ficoml
test
push
jl
sub
fildll
jp
sahf
testl
outsl
pop
pop
popf
popf
mov
fildl
sbb
sub
packsswb
out
ret
lods
dec
mov
int
lcall
push
or
xchg
xor
jns
aam
test
inc
test
or
adc
and
jb
mov
mov
mov
sub
mull
mov
push
jae
lret
fnstcw
xor
jg
testb
or
sbb
shlb
aas
ds
cld
jle
or
sbb
hlt
lcall
ret
cmp
cmp
jae
jmp
mov
dec
adc
call
pop
adc
add
pop
mov
jne
jo
inc
adc
aad
mov
mov
outsl
in
mov
loope
clc
fistpll
sbb
ja
stc
and
andl
cli
xlat
jmp
aaa
sbb
jecxz
adc
in
sbb
jge
add
sbb
adc
gs
fdiv
dec
dec
imul
cmc
das
dec
es
mov
icebp
fisttpl
jl
inc
popf
jns
in
push
lahf
scas
or
sar
fcmovne
jl
and
adcb
cmp
jp
pop
lds
push
mov
ds
dec
and
lock
sub
lret
adc
lds
and
shrl
mov
repz
jnp
mov
and
push
decl
inc
insb
dec
lds
jo
add
clc
test
mov
xchg
cld
inc
push
hlt
jg
and
loope
inc
loopne
xlat
out
lea
ja
ffree
mov
iret
fs
ror
pop
or
rdmsr
jns
repnz
addr16
test
into
lret
adc
outsb
sbb
outsl
xor
lret
ss
push
push
ja
pop
push
sarb
cmpsb
jns
test
lret
movsl
lods
add
lcall
sbb
lcall
push
fcomps
xor
sub
push
pushf
xorb
inc
pop
inc
mov
add
sbb
pop
pushf
xor
int
pop
imul
push
imul
test
xor
and
jo
sub
je
xadd
cmp
sub
pop
test
or
testl
outsb
shll
ret
daa
lahf
mov
loope
mov
shrb
pop
mov
ja
xor
mov
lods
divl
mov
cs
fsubl
leave
mov
dec
fnsave
cmpsb
xchg
mov
mov
push
loope
lock
dec
aaa
icebp
push
loop
call
add
push
jnp
adc
pop
cmp
push
mov
ds
mov
sahf
add
xor
sub
sbb
aas
inc
and
fwait
adc
mov
movsb
lret
sub
dec
int
popl
in
xchg
jne
lock
dec
loop
ss
outsl
dec
mov
mov
out
mov
in
notb
xchg
inc
fiaddl
les
mov
push
data16
add
jp
rorl
jbe
sbb
adc
adc
fidivl
push
out
bound
pop
jmp
push
cli
mov
les
mov
mov
daa
das
call
into
push
ja
jle
sahf
clc
in
mov
fcomps
sti
outsb
push
test
outsl
mov
xor
insb
sub
bound
sbb
sbb
pop
and
jbe
adc
sub
in
ljmp
rclb
and
das
nop
pusha
dec
lret
xchg
ret
jg
jne
fisubrs
add
ret
pop
popa
jge
mov
jne
adc
cwtl
orl
and
pop
movsb
insl
mov
movl
jmp
retw
mov
xchg
outsl
fdiv
jle
lcall
mov
mov
jecxz
in
lahf
xor
add
in
insl
gs
dec
or
pushl
in
scas
mov
fisttpll
xor
call
ds
xor
in
mov
in
pop
fdivr
cmpl
adc
mov
sub
push
ds
jmp
and
das
xor
std
aam
pop
push
js
aaa
inc
popa
cmc
outsl
mov
clc
jmp
add
jne
push
loop
pop
jnp
jo
cmp
std
xor
test
jmp
ja
lcall
insl
cmpsl
dec
inc
fwait
js
mov
xor
xchg
or
imulb
test
inc
mov
test
rorl
mov
add
lods
jb
mov
scas
or
cld
pop
lahf
pop
cld
jp
pop
lds
es
clc
ret
clc
lds
push
adc
imul
jnp
jmp
lods
add
add
shlb
inc
jbe
lahf
nop
sbb
popa
push
fmul
inc
pusha
cld
mov
sbb
mov
inc
cmc
mov
cmp
dec
mov
inc
inc
inc
and
cmp
jne
popa
icebp
sbb
clc
push
cmp
jp
out
lret
fdivl
inc
pop
fcoml
mov
mov
dec
or
mov
mov
idiv
and
dec
xor
and
mulb
jno
call
js
negl
mov
stos
fstpl
aad
in
jmp
mov
test
jns
cmp
adc
sub
ret
fnsave
lock
movsl
imul
leave
into
sahf
fistpll
xlat
push
dec
mov
push
out
dec
adc
jg
or
jecxz
xchg
sub
or
nop
sbb
ret
out
add
cs
cmp
insl
or
in
ss
cs
sti
outsl
jno
test
push
push
cmpsl
cmc
push
push
push
inc
sub
lock
jno
enter
sbb
fildll
mov
mov
mov
subb
andb
cli
adc
cli
das
mov
shlb
loopne
push
rclb
jno
call
lods
xor
cmp
pop
pushf
pushf
aas
inc
pop
mov
lods
cmp
xlat
cmp
cmp
shll
jl
icebp
leave
mov
adc
aam
leave
shlb
xor
ror
insb
add
mov
cmp
sub
sbb
jp
lods
gs
loop,pn
inc
ret
clc
xchg
inc
mov
adc
add
mov
fimuls
stc
and
mov
clc
mov
mov
movsl
hlt
mov
adc
mov
decl
clc
repz
jle
and
outsb
shl
mov
aaa
lret
mov
inc
push
push
adc
cwtl
subl
movsb
push
loope
and
cmc
adcb
jle
repz
adc
insb
jno
jbe
mov
ret
cltd
stos
fildll
adc
gs
sub
add
out
push
cmp
xchg
mov
outsb
lahf
loop
mov
push
jg
adc
fdivrs
add
cmp
jmp
add
cmp
jae
mov
mov
pop
sbb
test
movsl
jg
xor
xchg
jp
in
mov
adc
jne
mov
jmp
cwtl
mov
mov
mov
push
mov
lret
bound
adcb
rcrb
icebp
js
xchg
mov
mov
dec
stos
int3
add
jns
or
fwait
fs
mov
mov
dec
movsb
pop
xor
jp
cmc
mov
out
mov
mov
mov
in
inc
jge
push
jp
cmp
and
bound
fnsave
mov
movb
sbb
shlb
testl
push
test
pusha
mov
fistl
mov
jg
rcll
pop
sbb
pop
clc
testb
sbb
mov
cs
int3
add
fidivs
add
imul
cmp
cmpsl
adc
aaa
addl
aad
cmp
inc
push
jl
push
cli
bound
mov
test
lock
test
sahf
sub
or
fwait
andl
pushf
xor
loopne
inc
add
in
test
icebp
pusha
pop
sbb
ret
lcall
popa
dec
fcmove
fsubr
adc
aam
shrl
loop
shll
inc
sub
inc
loop
sub
cmp
mov
xor
mov
movsl
and
dec
loopne
pop
out
mov
es
dec
mov
sbb
mov
jns
push
rcrb
das
mov
rol
mov
pop
in
sbb
rcrl
popa
fwait
add
rclb
jmp
xchg
test
xor
cs
shlb
imul
es
loop
shlb
cwtl
pushf
scas
cltd
call
mov
dec
mov
adc
and
xor
adc
jl
mov
and
daa
ret
cmp
xchg
cmp
popa
inc
es
jbe
movsb
inc
sub
shll
push
sarl
sbb
std
data16
push
dec
lret
mov
xchg
cmpb
push
xor
cmp
aam
or
mov
xchg
mov
mov
jmp
leave
cltd
sbb
sahf
xor
add
jl
fwait
popa
push
xor
or
sbb
fidivrs
outsl
pop
inc
mov
mov
mov
add
sbbl
jbe
mov
dec
fcoml
cmp
xchg
test
sbb
mov
loope
mov
jae
in
cmp
cmp
push
cmp
inc
lds
cmp
push
dec
xchg
aam
int
and
sub
fidivs
nop
sbbl
push
popf
and
mov
mov
xor
adc
jne
rcr
inc
cmpsb
ljmp
pusha
sub
and
jecxz
sti
or
pop
mov
rorl
cmpsl
add
pop
pop
sbb
movb
pop
mov
rcrl
bound
xor
add
and
or
fnstcw
adc
out
ds
insb
std
hlt
sub
popl
push
lea
add
popl
ss
in
loop
nop
sahf
out
es
fldcw
aad
jle
push
in
mov
or
mov
stos
xchg
jns
ljmp
js
or
or
and
or
fstpl
fwait
clc
fdivs
dec
lret
sbb
sub
dec
incl
orl
mov
test
insl
insb
xchg
push
jl
xchg
sbb
rorl
into
arpl
cwtl
cmpsb
adc
push
cmpsb
mov
jns
and
ret
outsb
xchg
adc
stos
add
pop
adc
out
test
movsl
movsb
data16
outsb
dec
mov
or
movl
push
cmp
dec
cltd
mov
lcall
fmuls
in
lock
mov
inc
outsl
lret
jl
out
mov
jbe
push
inc
icebp
jne
mov
jo,pn
into
jns
mov
xchg
into
xor
sarl
loopne
mov
xor
jae
mov
jge
mov
into
fs
fadd
arpl
rol
xor
lods
jecxz
mov
lods
jmp
dec
jae
rsm
movsl
fbld
xor
or
mov
rcl
shlb
out
mov
std
push
jmp
setl
insb
pop
pop
adc
out
jge
inc
adc
loopne
push
bound
mov
out
fsts
jl
mov
cmpsb
inc
mov
add
mov
push
cs
and
fnstsw
mov
xchg
xchg
loop
jecxz
cmp
or
add
mov
popf
in
or
lods
push
adc
add
js
ds
scas
rcll
ret
cmc
cmc
sbb
ret
nop
sub
add
outsb
gs
xor
sarb
dec
push
jge
push
iret
add
add
inc
mov
int3
sbb
push
in
jge
push
fwait
dec
pop
fdivrp
mov
nop
gs
inc
icebp
popf
aaa
mov
aam
pop
push
jae
ss
sbb
add
add
jl
cmovns
sub
push
mov
lret
or
jg
dec
mov
aam
lret
add
icebp
nop
outsb
les
mov
lock
adc
das
cmp
rcrb
add
mov
cmpsl
jb
cmpsl
jle
fistl
add
and
imul
cwtl
movsb
and
xchg
push
neg
mov
aaa
data16
sbb
mov
pop
fildl
cmpsb
cmp
lcall
divl
push
inc
inc
ljmp
mov
js
movsl
addr16
in
call
or
xor
xor
sub
incl
and
rorl
xchg
push
add
add
mov
or
ret
mov
add
pop
in
jl
cmp
jp
cmp
call
das
lock
rcrl
or
sub
and
frstor
inc
or
rclb
mov
push
fdivr
pop
xchg
in
fmuls
jecxz
repz
xchg
push
inc
xor
mov
or
mov
xor
icebp
sbb
mov
repnz
xor
pop
shlb
mov
jecxz
dec
dec
adc
inc
dec
and
mov
iret
sub
fbstp
je
cmp
es
je
das
jg
cld
xchg
mov
inc
sti
pop
mov
mov
add
adc
fsub
ss
mov
popa
ret
dec
outsl
jnp
and
and
and
push
dec
jnp
jecxz
imul
mov
xchg
pop
mov
xlat
repz
add
cld
cmp
daa
sbb
jno
xchg
clc
mov
sbb
sar
call
mov
shll
je
push
decl
add
shr
dec
aaa
add
cmpsl
lods
and
mov
jge
mov
test
push
inc
mov
pop
or
lret
xlat
stc
cmp
cmc
insb
xchg
lret
popf
js
mov
jnp
fildl
ja
clc
xchg
jg
adc
or
ljmp
sub
popa
xor
mov
dec
fistps
es
call
sarl
out
mov
outsl
outsl
mov
adc
jecxz
cmpsb
dec
ljmp
mov
cmp
les
hlt
lcall
aam
icebp
and
xchg
es
adc
xchg
mov
or
pop
popa
mov
fucomip
mov
movl
lock
add
rorl
jnp
mov
or
mov
dec
pop
repnz
sub
outsl
sub
pop
loop
mov
or
xchg
pop
inc
pushf
xor
xlat
test
xor
cmpsb
xor
inc
loope
pop
std
add
inc
loope
loopne
push
in
add
dec
andb
cmpsb
pusha
inc
lds
inc
daa
lods
psubusb
mov
idivb
stc
cmp
into
push
insb
out
loopne
cmp
je
mov
mov
cli
ja
or
and
aam
imul
out
and
scas
mov
dec
cmpb
scas
and
mov
cmp
mov
cmp
addl
int
clc
push
mov
pop
das
test
add
xor
das
mov
out
adc
mov
test
fldl
inc
mov
lahf
mov
and
sub
rcll
ljmp
or
mov
outsl
cld
push
pop
push
or
xlat
adc
pop
pushf
es
iret
sub
ret
mov
mov
shr
xor
idivb
inc
loope
out
and
pusha
call
mov
xchg
or
or
fcomp
cmc
ljmp
mov
jno
pusha
adc
movsb
jl
jb
push
push
shl
jg
sub
dec
xchg
sub
add
dec
cmp
dec
addl
loop
dec
das
push
lahf
push
mov
mov
idivl
cld
xchg
mov
decl
xor
mov
and
inc
sub
pop
add
add
add
mov
cwtl
rorb
iret
fisttpll
mov
mov
test
push
sbb
jle
adc
dec
mov
add
repz
cmp
pop
in
mov
stc
xor
jecxz
fcomps
inc
ffreep
xchg
mov
insb
xchg
mov
sub
addb
xchg
aam
into
clc
dec
fcomip
pop
cmpsl
lds
into
mov
aam
out
fcompl
insl
inc
test
ret
in
pop
sub
or
xor
add
xor
leave
call
add
add
push
xchg
inc
jno
mov
enter
xchg
insb
pusha
test
out
outsl
adc
mov
pop
jg
mov
int
sub
inc
xorb
and
das
and
adc
lret
push
popa
and
lahf
stos
andl
cld
fildl
xor
xchg
int3
into
push
push
pusha
ss
sahf
mov
pop
lock
insl
inc
lea
xchg
repz
dec
mov
jge
das
sub
dec
jae
data16
jbe
mov
js
movsb
aad
adc
cmp
outsl
insl
adc
fs
push
mov
push
sub
test
and
push
fdivrs
cld
outsl
cli
mov
rorl
mov
lret
xchg
pop
pop
mov
lret
stos
sub
cli
pop
inc
push
rol
adc
fnstsw
add
clc
ds
inc
sub
mov
cmp
vminps
xchg
cltd
addr16
mov
in
xor
rolb
mov
or
lds
popf
add
std
add
sbb
mov
mov
adc
mov
dec
enter
jmp
pop
mov
pusha
mov
sahf
popf
adc
in
in
jns
sbb
or
dec
dec
mov
mov
ds
pop
dec
push
push
jmp
scas
and
arpl
out
inc
callw
sbb
fstpt
loop
outsb
ja
lahf
or
movsl
sbb
sbb
sbb
sar
cmc
jge
pop
lcall
mov
ljmp
outsb
jns
adc
sub
mov
jno
clc
push
mov
mov
ss
popa
jae
les
fbstp
push
push
mov
xchg
and
jne
pop
inc
pop
push
sub
dec
repz
sbb
xchg
lods
pop
fdivrs
jns
or
cmp
add
push
subl
cmpsb
xor
lahf
jo
shrl
enter
loopne
cltd
and
fisubs
ja
sbb
notl
sti
and
jg
cmp
cwtl
leave
xchg
fadd
xchg
rcrb
pop
shlb
sbb
dec
push
add
pop
and
addl
push
pushw
jge
iret
rcrb
sub
sbbb
into
or
push
rcll
fbstp
mov
outsb
rcl
shlb
inc
push
sbb
dec
cmc
push
sbb
cwtl
movsl
je
mov
dec
mov
xchg
sti
movsb
les
add
gs
popf
mov
cmp
outsl
insl
mov
mov
cmpsb
dec
pop
arpl
dec
add
mov
nop
rolb
jecxz
inc
inc
sbb
aas
or
mov
call
pop
sbb
pop
movsl
mov
cmp
mov
fldl
test
xlat
daa
lret
loop
dec
push
mov
or
int3
sbb
outsb
and
arpl
xchg
jbe
jnp
lret
xchg
scas
mov
pop
bsr
push
and
int3
cwtl
xlat
cmp
lret
cli
jmp
repz
push
pop
inc
aam
and
sub
cld
mov
mov
cmpsl
dec
mov
movsl
xchg
enter
rorb
dec
xchg
mov
fcomp
adc
lcall
int
jbe
pop
pop
faddp
scas
aas
mov
mov
mov
cwtl
jae
arpl
push
cs
pushf
mov
jbe
add
negb
out
std
pop
mov
xchg
xchg
ds
fcmovnu
sbb
push
xchg
ficoms
add
cmp
xor
xor
adc
sub
jmp
jge
imul
inc
icebp
popa
addb
test
mov
in
test
jo
mov
shll
imul
add
dec
dec
ja
pop
gs
xor
sahf
cmpsb
dec
icebp
mov
scas
pushf
xor
mov
xchg
fdivrs
sbb
adc
int3
adc
into
inc
add
or
xor
push
cmp
shl
dec
fstpt
sbb
cmpb
push
pop
adc
mov
cs
aam
aam
cmpsl
data16
adc
add
jne
jae
lret
adc
pop
insb
inc
or
loopne
xchg
mov
push
cmc
lret
sub
adc
movsl
mov
xchg
inc
rcll
or
xchg
mov
test
pop
dec
push
inc
sarl
sub
loopne
add
jp
mov
test
out
sbb
fsubrp
dec
lea
bound
cmp
cmc
ljmp
dec
jge
pusha
push
je
xor
sub
sub
clc
sti
repz
or
mov
loopne
add
in
push
lods
adc
jae
iret
pop
pop
mov
loopne
movsb
stos
adc
in
icebp
push
mov
mov
push
mov
sub
fstps
sub
push
in
xor
push
fstpt
ss
cmp
xor
in
aaa
push
pop
addl
mov
mov
scas
sub
shl
adc
add
in
clc
cmpsl
ljmp
stos
imul
sub
jge
mov
dec
sub
nop
addr16
push
inc
aaa
sbb
out
mov
jbe
jecxz
mov
pop
cmp
cmpsb
xorb
jmp
mov
mov
push
mov
mov
inc
test
add
int
cld
mov
hlt
addr16
sbb
loop
mov
jae
mov
push
sub
jmp
pop
push
mov
jbe
lcall
mov
subb
pop
add
push
or
movsb
xlat
lds
inc
cld
out
mov
push
xor
push
test
pushf
push
sar
decl
mov
xchg
dec
test
test
xchg
inc
pop
test
outsb
roll
jge
clc
fbstp
jecxz
pop
orb
mov
xor
dec
pop
or
loopne
movsb
gs
arpl
decb
test
pop
popf
sub
enter
sub
mov
rcrb
cmp
fildl
stos
movsl
sarb
clc
mov
leave
cli
adc
xchg
cs
js
cmc
es
xchg
shll
xchg
push
loop
pusha
jns
into
sbb
xor
mov
cmp
cli
lret
sub
pop
mov
mov
test
cmp
ret
fists
mov
mov
iret
icebp
mov
jne
push
int
add
sbb
cs
and
or
jge
sbb
inc
es
popl
outsl
test
inc
fimuls
mov
mov
dec
std
mov
dec
mov
enter
pop
hlt
aaa
cmp
mov
lods
ficomps
xor
mov
xor
inc
test
jecxz
inc
out
gs
jb
nop
mov
icebp
fistpll
push
fsubrl
pop
cwtl
inc
inc
subb
add
insb
cli
rcr
push
nop
jbe
pop
dec
in
cmp
ret
lea
mov
and
pop
inc
pop
jbe
imulb
stos
xchg
sar
xor
pusha
xlat
xor
push
imul
jne
cli
stos
in
inc
add
adc
push
shrl
pop
ds
repz
jg
cli
lret
hlt
test
and
movsb
jbe
bound
loop
cmp
pop
mov
movl
cltd
mov
cld
subl
clc
andl
jg
sbb
lea
cmc
xchg
push
push
aas
test
in
dec
test
and
jmp
in
mov
decl
mov
int
mov
call
xchg
ret
xor
mov
cmc
sti
mov
sahf
test
std
sub
sbb
adc
cmp
fs
lods
pop
outsb
sarl
movsb
dec
andb
push
inc
push
les
push
pop
mov
mov
pop
push
je
jge
xchg
ss
mov
sub
cmpsb
ds
adc
je
jbe
inc
shl
mov
jmp
jecxz
test
dec
xor
push
and
add
mov
xchg
insb
stos
or
hlt
lods
mov
popf
test
adc
dec
fimuls
je
inc
push
mov
mov
lds
movsl
fistpl
mov
cmp
inc
test
fisttpl
loop
xor
repz
ja
pop
lock
cmp
sub
incb
or
xor
xchg
imul
mov
cwtl
iret
mov
repnz
gs
loope
lock
lcall
int3
dec
cmpsl
dec
add
mov
je
cmovno
or
adc
fbld
into
inc
inc
repz
xor
pop
push
pop
outsl
std
in
or
and
push
mov
cli
lcall
das
mov
jg
inc
mov
test
leave
add
xor
add
add
sub
test
mov
mov
scas
test
bound
ret
sti
mov
cmp
mov
dec
xor
dec
cs
aam
xor
fs
insl
mov
xlat
scas
xor
lds
sti
test
xor
cmp
push
sbb
add
xlat
push
mov
pop
enter
jo
pop
fwait
add
cmp
add
dec
or
mov
test
mov
cmp
mov
push
pop
enter
bound
sbb
or
add
incb
lahf
jno
mov
popa
jmp
jbe
mov
out
dec
dec
xchg
mov
lods
sbb
cltd
jns
in
mov
aaa
outsb
incl
jmp
xchg
testl
das
jl
or
movsl
push
inc
mov
enter
ret
sub
addl
rcrl
repz
rcr
aas
shll
add
loopne
loopne
add
fcomps
add
ljmp
and
inc
push
mov
dec
jge
cmp
jno
pop
ja
daa
in
ljmp
xchg
mov
or
add
cmp
stos
sbb
inc
fisttps
in
lods
push
rclb
mov
das
fdiv
sbb
scas
xchg
ljmp
or
repnz
mov
xchg
ljmp
subl
insl
sub
push
mov
ret
add
test
scas
sbbl
pop
jbe
and
jne
mov
sbb
cli
stos
add
out
jbe
movsb
jbe
mov
in
adc
xor
cmp
or
cltd
into
sub
mov
sbb
in
sbb
lock
mov
jnp
aas
out
xchg
mov
mov
mov
sub
mov
jo
mov
cmc
lret
cs
ja
mov
ffreep
imul
and
fcomps
cmpsb
cmp
pop
mov
out
out
inc
dec
inc
inc
out
jmp
mov
sub
sbb
lea
sub
shrb
inc
dec
testl
outsl
xor
stos
add
jne
push
sub
out
mov
movb
push
fs
aam
pusha
sbb
add
lret
xor
insl
es
ficomps
es
mov
mov
stos
aas
pop
loopne
sub
pop
sbb
sub
les
jo
ret
mov
push
ja
xlat
xor
dec
call
cmp
fcom
je
in
mov
mov
mov
addb
rclb
jp
pushl
out
mov
mov
mov
dec
ja
xchg
in
mov
or
test
inc
cwtl
mov
sbb
xchg
adc
into
and
inc
hlt
xor
mov
push
adc
xchg
insb
xchg
inc
stos
popa
movsb
inc
pop
pop
es
fisttps
call
add
in
popa
ja
or
jecxz
lods
mov
ret
mov
insl
fcoms
filds
fstpl
mov
outsb
loop
pop
fstp
popa
movsl
inc
jg
jl
add
sub
stos
push
outsl
mov
sti
gs
loopne
or
lcall
fs
xor
jg
and
xchg
mov
add
add
xchg
mov
popa
cmp
mov
push
push
xchg
fisubrl
adc
ficomps
outsl
bound
rclb
add
mov
ja
jp
cmp
bound
inc
mov
shll
fistpll
mov
inc
inc
test
xchg
push
or
mov
lret
inc
call
sbb
iret
xchg
mov
xchg
dec
mov
inc
test
and
cld
outsl
jge
jle
ss
sbb
and
inc
jbe
or
lea
mov
in
mov
sub
xchg
cmpsl
xchg
mov
cmpsb
dec
xchg
push
mov
divb
mov
stos
push
pushfw
out
mov
stos
mov
fimuls
cmc
mov
push
outsl
shl
lds
add
xlat
push
pop
icebp
fildl
mov
int3
sbb
inc
pop
pusha
inc
int
mov
mov
add
rcrb
and
pop
cli
xchg
push
lret
shll
adc
xor
lret
inc
scas
mov
xchg
mov
xchg
pop
jbe
jp
push
lods
mov
roll
mov
adc
jg
mov
cmc
fcmovu
inc
ja
test
aas
std
push
rclb
scas
inc
inc
cltd
loope
cmp
in
cmp
dec
insl
stos
or
or
test
sbb
leave
popa
imul
mov
addl
lcall
stc
mov
mov
les
rclb
inc
gs
call
out
cmpsl
lea
inc
es
sbb
cltd
nop
mov
aas
ret
dec
fmuls
clc
push
push
or
scas
or
lods
mov
push
inc
sub
or
loopne
mov
push
lret
sbb
test
mov
and
test
fcomp
test
add
mov
call
out
clc
dec
data16
add
and
outsb
fcoml
shrl
xchg
clc
pushl
push
pop
or
aaa
in
mov
xchg
dec
fldt
lcall
mov
in
cltd
jns
mov
outsb
icebp
inc
mov
in
sub
cmp
jecxz
outsb
aad
cmc
inc
adc
clc
decl
leave
add
xchg
outsl
repz
test
mov
inc
std
jg
mov
ds
stos
jns
adc
clc
das
flds
or
sarb
mov
mov
cmpsl
pop
and
xchg
xor
mov
mov
push
mov
mov
xchg
push
dec
mov
push
push
pop
shll
cmpsl
fistl
aam
jne
addl
mov
push
test
call
push
outsb
shl
pop
bound
inc
sbb
in
inc
pop
ret
push
leave
nopl
xchg
scas
add
push
lret
jmp
nop
nop
xorl
mov
cmp
adc
insb
femms
mov
jno
adc
pop
mov
and
xchg
xchg
jnp
fidivs
aaa
fidivrs
sti
repnz
or
sbb
and
cmc
inc
jg
or
shlb
xchg
adc
jo
hlt
repnz
aaa
adc
mov
ficoms
jns
push
lods
cmpl
outsl
cmp
subl
and
sub
clc
repz
push
xor
mov
not
cmp
addr16
add
jnp
jle
mov
pop
sub
fcomp
std
adc
xor
mov
out
subb
ljmp
hlt
setg
les
jnp
fcom
lds
push
push
scas
in
push
in
ljmp
xorl
sbb
mov
ljmp
mov
stos
sbb
add
cmpsb
dec
rcll
movzwl
sbb
mov
jno
sarb
add
xor
mov
add
insl
sbb
stos
popa
frstor
lahf
pop
mov
or
cwtl
sbb
add
mov
lret
cmp
jnp
xchg
jecxz
in
xchg
inc
mov
out
imul
mov
jge
movsl
sbb
icebp
jbe
outsb
test
test
push
adc
popf
add
xor
pop
dec
repz
mov
xchg
mull
or
pop
dec
rcl
xor
call
in
push
fwait
orl
arpl
cmp
daa
cmp
inc
push
std
scas
fisubrl
rcrb
push
push
inc
adc
mov
cmp
add
ljmp
inc
cld
aad
and
test
lahf
jnp
lcall
inc
jo
push
scas
and
lcall
cmp
daa
push
lahf
je
mov
sbb
aaa
dec
es
fildl
sbb
cmpsl
sub
dec
aad
sahf
cmp
fcomip
jne
adc
setnp
sub
cmp
test
icebp
lea
and
mov
or
jne
dec
cli
rcll
stos
sarl
xor
cmp
sbb
pop
push
mov
xchg
decl
test
cmp
or
mov
push
and
push
adc
sub
popf
stos
ljmp
mov
push
pop
push
add
dec
pop
inc
push
xchg
cs
lret
inc
ds
push
fs
pop
lods
jns
xchg
jae
mov
pop
cmp
pop
mov
add
rolb
das
jb
xor
and
mov
push
ss
adc
push
jle
pushl
mov
inc
into
pop
lds
mov
mov
out
mov
pop
or
sbb
pop
mov
jmp
mov
mov
call
es
mov
pop
test
sahf
or
je
and
outsl
lahf
or
sub
pop
sbb
adc
je
in
testb
jmp
dec
daa
lret
loope
mov
jb
mov
xchg
xchg
dec
jg
jne
outsl
ret
or
ret
inc
hlt
xorb
or
inc
cmp
jecxz
inc
sub
icebp
andnps
aad
aas
cmp
and
data16
mov
inc
loop
push
inc
pop
notb
sub
orb
rcrl
sub
inc
mov
xchg
test
in
ret
pop
inc
push
sub
mov
ljmp
outsb
dec
loope
cli
cmpsb
call
popa
xor
lret
mov
xchg
mov
clc
jmp
inc
and
jns
push
jns
sub
sti
in
dec
ds
lret
ljmp
cmp
orl
clc
pop
dec
cltd
jle
out
sbb
or
xor
or
add
jle
outsl
mov
dec
aad
xor
icebp
roll
leave
mov
lret
push
push
or
and
mov
fsubrs
mov
mov
jbe
and
mov
cli
sbb
int3
imul
add
inc
mov
fidivrs
scas
jg
jg
dec
lret
cmp
aas
lret
std
lds
mov
jae
jg
push
mov
sub
jg
lea
nop
in
mov
adc
adcb
cs
sbb
push
cwtl
jne
ljmp
mov
mov
icebp
or
push
ficoms
mov
ret
shll
cmpsb
iret
outsb
je
cs
cmp
test
ror
insb
push
pop
mov
popa
aas
push
ret
cmp
push
push
sub
outsb
fucomi
mov
das
popf
in
sbb
jle
mov
pop
add
adc
arpl
pop
enter
pop
test
loope
adc
xor
dec
mov
jg
cli
enter
stc
push
mov
add
add
mov
mov
jle
xchg
mov
or
push
add
mov
or
test
outsl
or
add
ds
sub
and
adc
mov
add
or
stos
daa
adc
insb
xlat
dec
pop
xchg
mov
pop
mov
test
fbstp
push
dec
lret
call
aas
pop
scas
clc
sahf
loop
adc
ljmp
lock
push
clc
cmc
jmp
ja
adc
aaa
cmp
movb
fs
nop
or
xchg
mov
inc
daa
cmp
mov
adc
push
addl
push
mov
andl
jle
scas
sbb
in
jnp
cmp
idiv
and
and
mov
and
xor
icebp
xchg
push
lret
adc
mov
cmp
xor
xor
and
inc
sbb
and
mov
inc
sub
aad
xchg
xchg
in
movsl
ljmp
sub
mov
sub
push
add
into
lods
aad
mul
outsb
mov
mov
sar
js
cmpsl
push
call
stos
and
jle
fbstp
adc
je
inc
ja
rcr
faddl
or
outsl
mov
add
push
dec
cld
jg
xor
pop
das
pop
imul
pop
xorl
fldt
dec
repz
cwtl
jg
jge
mov
data16
mov
jb
mov
pusha
jo
fstl
mov
arpl
fstps
pop
xor
sbb
dec
cmp
icebp
fdivrp
mov
stos
cmpsl
pop
and
mov
js
push
jmp
jle
and
inc
js
sub
dec
subl
pop
movsb
xchg
xchg
movsb
push
jb
cmp
xorl
pop
fidivrl
pop
int
xchg
cmp
mov
push
test
fbstp
outsb
cmp
call
sahf
ja
jo
outsl
orb
cmpsb
jp
push
jbe
out
jmp
loop
or
and
pop
test
pop
pusha
xor
jns
fucomip
cmpsb
push
push
jmp
pop
mov
lock
cmp
sbb
fdivrp
lcall
int3
push
mov
cli
dec
cli
inc
lods
or
and
dec
shr
decl
pop
xor
add
mov
and
scas
bound
mov
loopne
fists
stc
inc
rcll
xor
xchg
xor
push
aad
sbb
xchg
stc
lret
sbb
stos
out
mov
jecxz
mov
push
adc
jmp
sbb
outsl
and
popa
mov
add
pop
sub
loopne
mov
stc
adc
sbb
ret
fisttps
pop
sqrtps
lods
and
jg
lcall
nop
xor
testb
push
jl
ss
cli
sbb
cmp
clc
xor
mov
pop
or
lea
pusha
nop
mov
adc
add
outsl
imul
loope
and
int
stos
stos
push
mov
lds
aaa
jle
outsl
cld
jle
lods
and
cmp
cmp
xor
adc
sbb
lcall
outsl
cld
idiv
rcr
jg
sub
adc
pop
push
cmc
nop
dec
add
or
xchg
cs
incl
loope
inc
and
push
enter
ds
inc
decl
add
jmp
and
add
fsts
push
lcall
loope
scas
push
aam
sbb
rclb
jp
jmp
push
test
test
fwait
inc
insl
fstp
push
xchg
std
ds
cmp
bound
sub
gs
push
out
jne
sub
pop
and
pop
cmp
loope
sarb
popa
mov
xchg
in
scas
loopne
addb
mov
enter
inc
adc
sub
pop
out
subb
fildll
jle
sbb
dec
fcmovbe
xchg
or
stos
cmp
lret
mov
psrad
in
icebp
bound
lock
das
movsb
jne
xchg
add
rorb
imul
fildl
stc
lcall
cmovs
cmp
cmpsb
push
push
adc
mov
aaa
jg
daa
sbb
mov
jne
ret
pop
lcall
clc
mov
call
jne
ds
fists
aam
mov
pop
dec
jnp
repz
ret
adc
or
nop
mov
xor
loop
sub
pop
sahf
xchg
push
or
lds
and
xlat
jno
ss
mov
popf
sbb
scas
sub
dec
rcrb
mov
sbb
cmp
arpl
jg
fstps
push
inc
fsub
mov
jo
sti
pusha
je
mov
test
push
shll
int3
add
inc
xchg
xor
lock
clc
in
pop
add
xchg
stos
pop
push
mov
jmp
sub
int3
imul
mov
inc
gs
fcmovnb
lret
and
aaa
push
mov
iret
fnstcw
data16
insl
cmp
test
sbb
pusha
dec
jns
lods
lock
sar
imul
and
cmpsl
and
insl
imul
jne
out
jecxz
jno
lahf
sub
das
add
pop
insl
stos
mov
enter
in
add
cmpsl
or
aam
jecxz
inc
add
aas
pop
push
sub
push
inc
int
inc
sbb
outsl
jno
std
push
mov
push
stos
aad
cltd
xchg
dec
sbb
out
or
in
in
aad
jno
xor
xchg
cld
lcall
aam
movsl
pop
add
out
jl
push
add
push
mov
lods
outsl
insb
dec
or
and
mov
sbb
and
pop
mov
or
jg
clc
push
inc
sar
ljmp
push
faddl
in
mov
cmp
ficoms
sbb
bound
push
aaa
es
xchg
sti
filds
mov
xor
inc
inc
push
movsb
movl
lea
pusha
jecxz
outsl
or
enter
mov
dec
shlb
and
pop
cs
lods
lock
sub
dec
or
loop
out
push
in
js
push
je
dec
sbb
sub
iret
test
incl
les
mov
subb
frstor
nop
push
hlt
sbb
xor
add
test
mov
jb
jno
imul
hlt
lods
scas
mov
mov
add
and
mov
sub
scas
sbbb
loop
decb
fisttpl
and
adc
add
decw
hlt
sbb
outsl
loopne
jp
jo
sub
aaa
adc
fdivs
mov
icebp
lcall
mov
sbb
insl
insb
sub
clc
outsl
das
faddl
fistpl
cmpsb
cmpsb
enter
inc
inc
divb
dec
fldt
mov
mov
cmp
clc
hlt
push
stc
dec
sahf
pop
shrl
test
pop
ret
push
and
xchg
cmp
pop
pusha
stc
test
fiaddl
jbe
jo
xchg
jne
adc
imul
fdivl
xorl
mov
rclb
xor
movsl
idiv
cmpsb
pop
mov
fnstsw
xor
arpl
pop
inc
cmc
cmp
fdivrl
mov
adcw
add
lods
clc
pop
insb
out
fdiv
mov
lret
pop
je
in
mov
cmc
movb
pop
mov
pop
push
std
jg
pop
insl
pop
adc
mov
fwait
push
out
or
push
mov
into
inc
adc
mov
sar
out
xor
mov
ret
fcomps
jg
test
lock
jge
push
push
movsl
mov
mov
jo
clc
add
pop
call
mov
leave
and
ss
aaa
pop
insl
test
jbe
mov
call
aam
adc
mov
push
mov
lcall
or
lods
in
addl
cmc
mov
clc
xor
mov
fisttps
jg
xor
jns
sbb
dec
add
lahf
dec
xchg
inc
adc
ljmp
add
dec
mov
dec
std
mov
fstl
inc
fisttpll
test
mov
test
pop
ss
call
into
xchg
pop
mov
sub
or
jnp
xchg
decb
rcrb
inc
pop
dec
or
pop
stc
sti
inc
mov
scas
outsb
xor
ror
inc
inc
lods
lock
mov
mov
fwait
push
das
mov
sbb
adc
aad
mov
and
mov
js
rorl
pop
enter
and
jmp
sub
jl
push
sbb
add
adc
xor
adcl
push
leave
pushf
out
pop
xor
xor
mov
cmp
inc
xchg
sub
mov
arpl
idiv
push
rcll
ja
test
mov
xchg
das
sbb
adc
lods
movsl
fistps
or
adc
jle
mov
dec
insb
push
push
mov
xlat
lea
push
test
test
bound
dec
loope
aas
sbb
das
fsubl
pop
movb
gs
out
mov
mov
repnz
inc
inc
insl
jl
jg
mov
inc
xchg
sbb
xchg
icebp
xchg
test
subl
les
and
and
jno
out
fimull
pop
loope
cmc
mov
jmp
pop
jle
cs
mulb
lret
cmc
in
cs
inc
sbb
inc
xlat
call
insb
dec
xchg
mov
out
loopne
rorl
stos
sub
inc
push
cmp
cmp
ret
push
mov
inc
arpl
xor
mov
sbb
pop
xlat
adc
sub
js
fdivr
mov
addb
daa
inc
call
loop
jo
lahf
jno
or
mov
repz
rorb
rcll
or
jae
mov
add
cmp
insl
jmp
sarb
movsb
shl
or
xchg
xchg
sti
loop
dec
movsl
call
aam
or
dec
and
pop
mov
jecxz
push
addb
push
lret
cmpsl
xor
flds
pop
dec
popa
jge
aaa
movsl
jg
aas
push
dec
test
arpl
and
mov
mov
xchg
mov
mov
fs
cwtl
faddl
and
ljmp
sbb
outsb
jecxz
mov
mov
mov
jbe
or
repnz
in
push
out
cmp
lret
orl
loope
dec
and
sti
outsl
scas
hlt
mov
in
cmpb
icebp
pop
pushf
sub
jg
hlt
fists
fdivs
pop
mov
in
pop
rolb
cmp
mov
and
in
fcmovnu
xchg
add
push
arpl
push
aad
push
clc
mov
dec
mov
mov
pop
aad
cld
jnp
pushf
jmp
jg
jle
es
popa
test
enter
lea
dec
jmp
jle
mov
shlb
pop
mov
jecxz
mov
mov
pop
es
xchg
mov
or
outsb
xor
mov
out
aaa
nop
cmp
bound
ret
jo
lret
push
mov
mov
jg
sti
and
gs
dec
pop
mov
inc
notb
adc
outsl
hlt
movsl
pop
lahf
cmpsl
iret
sub
sub
arpl
gs
mov
add
test
dec
mov
jmp
inc
mov
movsb
mov
jl
outsl
clc
jb
dec
adc
push
pop
cmp
sbb
and
mov
fstpt
mov
shlb
jmp
xchg
fidivrl
insb
mov
test
dec
pop
sahf
xor
ret
dec
rclb
xchg
bound
mov
fldenv
sub
mov
inc
mov
pop
dec
adc
mov
fimuls
jae
pop
outsl
inc
sub
andl
mov
inc
loopne
pushf
orb
sbb
test
and
add
orb
mov
adc
and
mov
sub
les
pop
mov
fmuls
mov
xchg
test
mov
jmp
xchg
add
or
outsl
add
rolb
add
xchg
insb
push
inc
jg
gs
push
jne
push
cmp
push
je
inc
outsl
fmuls
adc
jp
push
mov
inc
push
pop
imul
or
mulb
jo
je
add
imul
ja
roll
sbb
je
add
ret
dec
xchg
adc
pushf
dec
cmp
pop
ret
or
or
int3
stos
pop
mov
loopne
xchg
loope
push
pop
cmp
jbe
ret
icebp
dec
and
adc
sbb
inc
scas
pop
loopne
cs
mov
and
mov
or
sbb
sbb
sbb
hlt
mov
movsl
dec
sbb
lods
insb
sbbb
jmp
fs
scas
or
pushf
cmp
ss
or
cmp
clc
ss
jmp
rorb
cmp
icebp
and
insl
insb
outsb
inc
out
sub
dec
lret
push
aaa
sub
xchg
stos
cli
mov
or
push
lea
jp
xchg
setb
loopne
pop
loopne
or
imul
xor
fmuls
adc
sbb
push
cmpsl
push
jg
pop
fisubrs
pop
test
cmp
pop
test
testl
fstl
fwait
loope
aad
cmpsb
pop
push
mov
and
decl
jo
and
mov
xor
add
sbb
ljmp
cltd
and
mov
adc
adc
mov
in
cmp
mov
sub
imul
test
mov
lods
test
leave
mov
inc
outsb
daa
stos
sbb
push
cld
or
mov
imull
andl
enter
xchg
repnz
lret
lea
mov
dec
movsl
test
push
into
xchg
mov
xor
ds
sti
or
ficoms
mov
scas
jmp
dec
sub
mov
prefetch
pop
nop
jge
xor
ret
cmp
scas
cwtl
cpuid
mov
nop
aaa
arpl
in
loope
mov
testl
in
sbb
call
das
inc
inc
cli
mov
pop
jbe
mov
icebp
loope
stc
adc
out
stos
sti
es
fwait
arpl
rcr
dec
mov
lods
lcall
or
xchg
cmp
mov
popf
lea
fcomip
jl
jle
or
notl
lcall
clc
cmpsl
cltd
lds
rcrb
js
das
mulb
push
pop
das
mov
in
jo,pt
cmp
sarl
lods
jmp
cmp
add
mov
out
out
mov
mov
sbb
test
mov
add
sahf
ljmp
jns
jb
mov
fisubrs
push
adc
xor
or
push
gs
movsl
dec
imul
pop
or
push
jl
fimull
sub
push
sub
sub
imulb
mov
pushf
adc
subb
xchg
repz
mov
call
cmpl
mov
ficoms
rclb
mov
aas
jp
inc
xor
jge
inc
jno
call
inc
add
sbb
push
icebp
xchg
in
in
out
out
push
fst
scas
pop
xchg
roll
jecxz
or
mov
lret
push
jl
ret
inc
jge
mov
cmpsl
lret
sbb
lea
adc
insb
cld
dec
cli
mov
fisubrs
jne
lcall
gs
sbb
test
pop
cmp
cli
movl
jns
add
push
or
dec
adc
leave
pop
adc
or
daa
or
mov
fldz
fiaddl
sahf
lds
cmp
cmp
leave
nop
sahf
jg
and
pop
andb
mov
ret
sbb
xchg
outsl
sbb
push
lods
adc
pop
pop
sbb
adc
xor
icebp
fisubrs
adc
cli
jmp
mov
imul
or
adc
mov
scas
xchg
dec
hlt
filds
aas
clc
add
add
mov
movsl
ja
addr16
lods
shl
movsl
fcomip
mov
xchg
pop
xor
jo
jo
imul
push
insb
popf
and
mov
cmc
lret
cmp
pushl
mov
in
lret
sub
in
sets
in
or
incl
push
aaa
adc
push
fninit
mov
test
rclb
loop
adc
lcall
pop
push
std
or
sub
pop
xor
push
inc
add
mov
inc
or
pop
sub
mov
jl
sbb
jg
addr16
cmp
mov
cs
out
inc
out
fistpll
rcr
xchg
sub
stc
mov
data16
lea
mov
mov
lcall
loopne
xchg
sti
sbb
cmc
push
adc
test
jmp
call
imul
icebp
pushl
jo
orb
stos
cmp
fcoms
sbb
jae
sub
or
ds
or
icebp
cwtl
sub
popa
sub
movsl
in
test
pop
mov
dec
jo
inc
loope
xchg
insl
sbb
cmp
arpl
jl
cmp
mov
or
cli
dec
inc
pop
popf
or
pop
jl
dec
sub
adc
mov
lock
out
xor
insb
rcll
js
pop
fmuls
pop
cli
mov
imul
sub
inc
movsl
and
fisttps
test
iret
in
add
adc
push
dec
add
fdivl
loopne
rcll
stos
inc
ror
dec
test
and
inc
mov
add
mov
scas
inc
lret
add
scas
inc
jo
in
or
cmp
aad
std
mov
fidivs
jg
rcll
cmc
inc
pop
js
push
mov
adc
ret
dec
es
out
loopne
cmpsb
mov
cmpsb
imul
adc
xor
and
cmp
lds
xchg
clc
arpl
lds
or
sbb
sysenter
cmc
mov
aam
lods
mov
fs
and
loopne
mov
lods
mull
ss
jmp
push
lods
mov
dec
test
js
fiaddl
cli
inc
and
xchg
jmp
test
lret
or
push
fsubrs
gs
mov
fdiv
shl
push
mov
pop
fidivrl
cmp
mov
cmp
and
add
inc
or
ffree
adc
and
dec
in
shlb
inc
xor
test
fiaddl
loopne
mov
test
fists
inc
jecxz
fisttpll
mov
fwait
dec
mov
fwait
push
xor
dec
sbbl
pop
add
jbe
adc
cs
mov
sarl
pop
xor
push
les
jle
iret
lahf
pop
aaa
mov
lcall
data16
rorb
push
incl
add
ja
sbb
shl
push
xchg
mov
push
loopne
push
js
ss
shll
ja
test
lods
push
test
mov
cmpsb
adc
or
shrl
sub
mov
fmuls
push
push
jl
ljmp
adc
or
cwtl
imul
ja
hlt
bound
push
cmp
cli
mov
movsb
les
push
pop
xlat
mov
pop
jg
xchg
adc
bound
jmp
movsl
rcll
js
push
pusha
popf
dec
xor
fnstsw
daa
rcll
adc
test
fdivrl
mov
aam
fisubrl
iret
jnp
movsl
push
movsb
cmpsl
test
lret
ja
push
loop
xchg
ret
mov
xchg
ficomps
or
cs
xor
push
pop
add
test
or
bound
insb
wrmsr
mov
mov
and
fs
adc
xchg
movb
push
insl
adc
jg
inc
test
fistl
rcll
mov
or
loope
outsb
scas
fcmovnb
mov
lea
jmp
outsl
ja
cmp
xor
or
test
insl
fadd
mov
jl
mov
ret
jecxz
mov
mov
push
in
xor
inc
inc
jge
xor
sub
dec
mov
add
sub
scas
pop
fisubs
pop
jmp
pop
hlt
add
adc
jmp
cld
mov
lea
imul
je
mov
cli
loopne
outsl
cli
jo
std
adc
mov
daa
xor
cltd
adc
jbe
inc
fists
rolb
cld
xchg
xor
xchg
orl
imul
out
and
imul
shrl
adc
xor
inc
mov
in
push
push
pop
push
mov
adc
idiv
aaa
pop
clc
es
inc
push
adc
inc
movsb
jg
adc
sub
pop
clc
cs
jl
repz
clc
popf
cmp
sub
mov
sbb
mov
adc
mov
jecxz
xlat
lods
push
xchg
outsb
stos
aas
dec
jns
jns
pop
clc
or
scas
cmpsb
dec
or
push
mov
or
fdivr
lret
aaa
jnp
push
inc
push
lret
lods
shrl
xor
ret
adc
insb
nop
inc
jl
cld
inc
xor
stos
cli
lods
inc
in
sub
ds
outsl
mov
clc
mov
ss
ret
aaa
cmp
and
xchg
and
stos
lret
sbb
not
jb
xchg
jg
push
inc
test
fs
lret
sbb
mov
xor
ret
negl
mov
insb
mov
jne
xchg
nop
mov
dec
sarb
mov
mov
add
pushl
pusha
push
push
mov
dec
out
mov
bound
pop
js
ret
pushl
and
inc
sub
mov
adc
addl
sub
test
sbb
fldl
dec
mov
mov
fdivrs
xor
push
jg
mov
test
cwtl
sbb
inc
mov
lods
sahf
pop
inc
push
jl
sub
and
jo
fidivrs
scas
pop
push
ret
sub
andb
lods
aaa
fdivrp
pop
push
adcb
pop
push
dec
fcomps
aam
sub
mov
call
or
inc
mov
add
les
je
in
enter
cli
inc
push
push
push
mov
adc
fucomip
dec
jg
xor
push
push
icebp
or
imul
loopne
icebp
faddl
sub
xlat
popf
ss
xchg
mov
mov
shll
mov
and
add
fcmovne
aam
mov
push
fsubl
and
test
mov
jmp
or
pop
sbb
lods
push
jmp
mov
pop
sbb
repnz
and
movsl
jbe
mov
ds
pop
pop
add
repz
divb
loop
cmp
outsl
outsl
dec
cmpl
jo
cmp
mov
repnz
bound
pop
orl
jbe
jmp
dec
addb
mov
shrb
inc
psubw
mov
cli
mov
pop
into
test
cli
adc
int
adc
adc
mov
mov
cld
je
add
lcall
inc
xorl
sub
daa
add
sbb
jle
adc
clc
mov
into
bound
in
add
push
fisubl
pop
adc
jmp
dec
mov
xchg
mov
inc
mov
mov
or
sbb
jmp
pop
add
scas
xor
in
mov
inc
es
push
mov
and
or
icebp
and
mov
ss
inc
dec
arpl
test
mov
cmp
in
push
pop
cld
xchg
sbb
call
sbb
and
mov
aaa
divl
jb
decb
inc
lock
pop
sahf
mov
dec
pop
sbb
pop
fcmovb
sub
js
cmp
sti
or
push
lock
push
pop
es
fs
jno
push
mov
push
lcall
lahf
jmp
addb
add
mov
in
ljmp
cwtl
lods
inc
icebp
enter
lahf
bound
inc
outsl
push
push
inc
mov
hlt
mov
cmp
push
outsb
shl
xor
outsb
stc
sbb
mov
inc
adc
xchg
lds
mov
jae
dec
icebp
enter
das
mov
in
xchg
push
pop
mov
mov
xchg
xchg
test
enter
nop
xchg
dec
sbb
mov
xchg
xchg
mov
call
jmp
dec
lret
add
jnp
xor
push
js
sbb
icebp
mov
addr16
stc
pop
and
cld
mov
cmp
add
test
lcall
frstor
fwait
les
xor
pop
in
test
fwait
mov
bound
inc
push
lock
and
jb
mov
aad
outsl
mov
pop
arpl
outsl
pushf
jbe
icebp
mov
fisubrl
pusha
sub
jmp
rorb
or
and
test
jne
cmpl
je
mov
mov
cs
push
sub
xchg
ljmp
lret
adc
jae
pop
inc
push
or
hlt
dec
rcll
xor
out
inc
push
lret
jmp
pop
test
mov
jno
arpl
dec
jge
std
stos
push
push
xor
mov
mov
call
shrb
je
pop
push
fsub
mov
rcll
addl
mov
sbb
das
cwtl
mov
mov
icebp
sub
mov
imul
inc
hlt
jmp
ret
bound
sub
mov
push
cmp
inc
leave
and
mov
ja
dec
mov
mov
sub
cmpsb
mov
ljmp
mov
clc
popl
sarl
fst
xchg
sub
fs
pop
adc
push
adc
repz
orb
dec
adc
dec
sbb
mov
mov
test
aas
add
mov
sbb
inc
or
sub
add
ret
xor
add
pop
daa
pop
outsl
js
dec
or
shl
inc
jo
notl
pushf
fisubs
or
aam
pushl
insb
hlt
in
in
and
mov
inc
mov
pop
and
xlat
in
loopne
les
in
jl
mov
insl
dec
insb
adc
ret
inc
in
pop
xor
adc
mov
daa
cmp
sub
je
dec
jnp
mov
pop
jae
jb
jmp
pop
cmp
sti
add
jb
shlb
aam
lds
sub
test
pop
add
outsl
test
inc
pop
aam
cmc
fnsave
add
pusha
lds
negb
dec
sbb
mov
lret
cmp
ljmp
cltd
lahf
int
aam
nop
adc
add
mov
iret
movsl
mov
sub
add
frstor
pop
loop
das
mov
lahf
inc
mov
push
xlat
lcall
fadd
testl
adc
test
xchg
roll
cli
mov
add
xchg
hlt
inc
pushl
xchg
inc
inc
es
adcb
inc
imul
popl
ljmp
xchg
mov
or
ljmp
idivb
xor
jecxz
sub
fs
cmp
adc
call
jge
lea
mov
mov
rorl
bswap
cmp
loope
les
adc
inc
aam
mov
mov
gs
pusha
ds
sti
stos
and
leave
fists
mov
or
inc
jg
jb
ljmp
mov
push
pusha
rclb
outsl
enter
jmp
cmp
scas
sub
push
sbb
pop
in
fistl
jl
push
mov
cmpsl
mov
ret
or
jl
fcompl
cli
out
scas
pop
xorb
sbb
lret
mov
mov
pop
xchg
jns
divb
fidivrs
ds
jae
iret
lret
or
stos
xchg
jo
add
push
sti
or
nop
aam
push
and
adc
testl
pop
push
out
push
repz
jge
or
or
into
test
rorl
mov
pusha
dec
out
sbb
jle
adc
mov
test
dec
addr16
or
jg
mov
push
stc
adc
mov
add
and
inc
or
sti
int3
add
xor
outsb
test
adc
adc
data16
or
add
clc
call
mov
lcall
je
adc
or
popa
jo
add
mov
mov
add
das
add
in
cmpsb
jbe
roll
inc
sub
adc
push
adc
ficoms
aam
cs
ror
adc
dec
xor
mov
paddd
aad
jo
fst
mov
incb
test
fwait
sahf
js
mov
nop
das
xchg
mov
jg
and
mov
push
outsl
xor
or
inc
push
fwait
inc
mov
int3
and
mov
xchg
scas
fcomi
sub
inc
pop
add
xchg
ret
adc
test
mov
pop
seta
pop
inc
fistpll
cmp
sub
loopne
mov
sub
frstor
or
out
subl
icebp
or
xchg
and
mov
je
mov
push
pop
outsb
mov
jl
inc
xor
or
notl
push
sti
mov
adc
sub
lret
inc
push
hlt
jae
pop
push
js
mov
mov
pop
sarl
mov
aaa
sahf
mov
ret
dec
add
jne
pop
clc
pusha
insl
aam
push
add
loop
fadds
mov
jnp
lea
inc
into
or
mov
insl
ljmp
notb
movsb
fwait
adc
fldz
mov
fdiv
add
sbb
jecxz
pop
pop
hlt
pop
fldt
or
jo
inc
inc
jp
roll
sub
fidivl
leave
stos
xor
test
jg
mov
loope
shll
cmp
enter
jmp
shlb
shrl
jg
insb
aaa
nop
adc
xor
clc
pop
insb
js
std
test
decb
adc
adc
mov
incl
xor
ja
pop
cmp
push
sub
cmp
pushl
mov
push
ret
xlat
adc
and
adc
in
fs
leave
roll
inc
aam
addb
lock
cmc
sub
je
sub
aaa
xor
add
fsts
sub
insl
pop
lods
pop
out
gs
clc
fldt
mov
mov
cmp
mov
pop
mov
movsl
xor
dec
orb
stc
mov
les
xor
inc
jbe
mov
enter
mov
mov
out
push
xchg
pop
mov
xchg
and
adc
in
imul
cld
sti
sbb
dec
orl
cld
mov
pop
std
cmp
jge
xor
xchg
sbb
jo
sbb
notl
xchg
adc
push
int3
sbb
mov
daa
sahf
mov
test
stos
sbb
inc
mov
dec
sbb
call
jb
dec
in
mov
clc
data16
xchg
adc
mov
clc
sbb
mov
adc
clc
cmp
rcrl
cld
in
outsl
fldl
jno
sbb
push
ljmp
das
mov
in
fsubrs
idivb
dec
ss
mov
loopne
jge
imul
inc
adc
in
mov
and
enter
fdivrs
lds
or
inc
sti
pop
test
fwait
ljmp
pop
orb
pop
xchg
ss
ljmp
nop
dec
orl
mov
outsl
mov
cli
sub
push
bound
dec
dec
pop
sbbb
dec
stos
ljmp
dec
and
xor
xlat
ficoml
cmp
or
lret
hlt
clc
out
push
scas
outsb
aad
jp
inc
jmp
lcall
ljmp
push
push
es
lock
pop
mov
jae
jno
je
clc
push
out
movsb
pop
push
subb
and
xchg
incb
xor
and
fcomip
inc
sbb
outsl
mov
push
or
loope
les
push
and
jl
fs
xchg
cmpsb
cmp
inc
and
cmp
std
push
mov
push
dec
icebp
out
jp
lret
orl
mov
loopne
insl
or
mov
mov
sti
mov
mov
aaa
mov
mov
mov
sub
cltd
adc
dec
cltd
push
mov
inc
out
mov
outsl
ja
in
push
mov
rolb
orb
sbb
lods
aas
xor
push
push
inc
jns
jo
aas
ljmp
sar
les
inc
shll
or
dec
sbb
aaa
or
jge
cld
mov
or
lret
sub
stos
loopne
test
mov
dec
fs
adc
dec
lea
jmp
mov
pop
subl
bound
inc
mov
out
xchg
fimull
clc
das
icebp
fwait
cmp
xchg
fs
shr
icebp
lcall
mov
cwtl
jae
adc
jecxz
adc
push
icebp
push
xlat
in
push
mov
rclb
fs
cli
inc
pop
lret
xor
xlat
cmc
lods
jmp
loop
inc
je
ret
rcr
aaa
add
sbb
cltd
push
in
data16
jp
mov
pop
stos
or
jl
out
sub
push
xor
fyl2xp1
ficoms
lods
pushl
cld
les
push
gs
cs
pop
and
sbb
fwait
xadd
out
or
inc
add
fldl
ret
aas
xor
fdiv
movsb
fnstenv
mov
aam
or
inc
xchg
js
or
cmp
jmp
mov
test
jbe
out
into
iret
sbbl
fstl
xchg
scas
cld
mov
push
pusha
setns
imul
std
inc
lea
lahf
and
in
xor
outsl
icebp
mov
jbe
imul
push
jb
fwait
cmc
pop
stos
icebp
push
mov
xchg
ret
test
and
or
cwtl
push
ljmp
test
enter
or
mov
mov
xchg
jg
push
sub
mov
adc
push
mov
inc
sub
cmpsb
cs
push
addr16
lds
divb
push
pop
stos
mov
fadd
jo
fadds
cltd
lds
mov
and
cmp
mov
in
mov
cmp
push
daa
loope
cmp
xchg
add
fimuls
push
das
lcall
mov
jb
call
and
inc
incl
aaa
jg
popa
mul
jge
sbb
jb
lcall
fprem
inc
lea
insl
mov
or
xchg
cmp
sub
ss
cmp
cmpsl
mov
aad
loop
nop
fucomi
aaa
stos
add
stos
in
movsl
push
xchg
sbb
roll
js
fisttpll
insl
aaa
pop
jg
sub
icebp
jg
movsb
mov
aam
imul
sub
pop
add
jnp
cli
cmpsb
dec
dec
or
inc
cmc
fisttps
les
push
mov
and
mov
subl
mov
add
push
push
push
mov
movsl
xchg
sahf
dec
and
pop
add
rcl
pop
outsl
in
jbe
cld
cwtl
jecxz
out
ds
mov
roll
js
orl
or
sbb
ljmp
mov
arpl
aad
outsl
or
or
mov
lods
jge
insb
or
add
lret
sar
stc
adc
ret
inc
popa
jecxz
adc
push
stc
push
inc
mov
pop
pop
insl
mov
jae
aam
pop
testb
adc
pop
or
shr
repnz
xchg
cwtl
jp
in
stc
dec
outsb
add
cmpsl
adc
mov
and
insb
pop
pop
les
nop
xor
cld
jmp
dec
test
fdivr
decl
daa
sbb
and
xor
push
dec
hlt
xchg
popf
ds
loope
inc
adc
loop
in
es
jp
loopne
or
jp
pop
add
dec
cli
stc
xor
mov
dec
mov
movsl
or
ret
pusha
std
or
imul
xlat
mov
and
xchg
cli
mov
or
xor
add
lea
push
rcrb
mov
loope
mov
testb
fsubrs
sub
adc
adc
jo
and
movb
and
fnstenv
xchg
pop
pop
clc
sbb
test
mov
xor
xchg
shll
das
in
repnz
jmp
adc
add
movsb
mov
adc
insb
cs
ljmp
into
lea
lods
pusha
imul
subl
xchg
dec
loopne
enter
xor
jnp
movsl
sbb
jp
pop
icebp
push
loopne
mov
jge
fistpll
test
fs
pop
add
jg
add
inc
inc
daa
fxch
and
daa
mov
lcall
and
or
cmpsb
aaa
divb
sbb
jno
sti
mov
adcl
adc
xchg
enter
push
sbb
add
cmp
mov
movsl
jg
cmp
jb
sbb
sbb
or
lea
mov
adc
dec
in
mov
push
pop
ret
cmpsb
push
cmp
jge
push
fwait
out
andb
jg
outsl
or
repz
jmp
push
popa
inc
mov
mov
xchg
push
cld
sub
sub
scas
cmpsl
sbb
dec
push
dec
pusha
pusha
or
movsl
es
pushf
adc
inc
jge
in
dec
push
cld
mov
mov
jmp
dec
sti
xor
jbe
mov
call
clc
sub
out
lds
inc
pop
lahf
lret
fists
pop
das
push
adc
andb
add
in
push
rcrb
cmp
jne
outsb
adc
je
or
insb
push
lods
xchg
mov
imul
out
xchg
mov
mov
mov
in
int
mov
push
loope
lcall
adc
push
shll
out
shll
add
cmc
jl
pop
popa
add
aad
mov
mov
stos
cmp
or
out
in
jb
sar
imul
jg
lds
leave
pop
or
jl
or
push
aas
pop
jl
jge
mov
imul
data16
dec
insl
test
adc
fiaddl
xor
add
adc
shll
mov
mov
jbe
cmp
sti
dec
xor
mov
push
call
sbb
jbe
adc
imul
mov
enter
fistl
arpl
adc
and
mov
mov
stc
iret
mov
cs
gs
add
pop
jg
mov
test
or
mov
ret
inc
pop
rolb
sar
xchg
dec
pop
push
std
xchg
addb
pop
adc
test
cmp
jae
insl
popf
xor
insl
and
jbe
sub
mov
test
xchg
in
dec
outsb
mov
out
loope
sbb
pop
mov
lahf
push
sub
add
rcll
add
mov
or
push
lea
push
ror
jns
fstp
cmpsl
add
mov
or
int3
sub
xchg
dec
pop
js
adc
ret
inc
add
es
pop
fnsave
jl
xchg
jecxz,pn
xchg
adc
cmc
data16
adc
movsb
adc
cwtl
mov
sub
int3
cltd
jne
dec
push
test
xchg
out
sti
dec
std
aas
mov
movsb
cmc
mov
test
pop
mov
xchg
loop
fbstp
lea
mov
jmp
fwait
outsb
xchg
shll
and
shl
mov
dec
xor
jg
movsl
outsb
sub
mov
xor
jb
movsb
or
or
ljmp
in
pop
bound
cmp
cmpb
rcll
cmc
cmp
lods
ja
pop
outsl
int
movsb
mov
cwtl
adc
cmp
das
aam
sub
jl
dec
pop
ds
inc
push
mov
or
mov
or
fcmovnu
test
rorl
mov
inc
or
fmuls
adc
sub
adc
filds
sbb
adc
insl
rol
in
std
push
sti
pusha
out
push
bound
in
inc
cmpb
in
popa
fwait
mov
sbb
and
push
ss
mov
jg
sbb
xorb
test
shll
adc
push
testb
xchg
dec
push
mov
xorl
shlb
shrb
sub
add
faddl
idiv
or
mov
enter
mov
sar
pushf
add
mul
jecxz
in
and
jmp
scas
imul
push
in
xlat
cmp
mov
shrl
decl
mov
adc
add
scas
inc
adcb
mov
adc
mov
ljmp
jge
test
cmp
popf
adc
adcb
in
inc
mov
mov
movsl
test
add
mov
adc
addb
cli
das
scas
dec
xchg
into
insl
cmp
jmp
bound
jno
int
cmp
int3
fwait
popl
test
arpl
add
adc
filds
test
pop
lods
inc
test
sbb
aad
add
adcb
idiv
pop
pusha
fwait
xchg
mov
add
cmpsb
xchg
incb
sbb
dec
jecxz
lock
jg
mov
out
sti
cli
mov
adc
stc
dec
mov
ret
sbb
out
mov
pop
imul
sbb
pushl
and
mov
inc
rcl
cmp
mov
mov
cwtl
or
lock
and
scas
sbb
lods
and
add
popa
add
pop
xor
out
data16
jge
jo
es
fstl
fidivs
cli
adc
sbb
mov
repnz
call
xchg
lods
jno
loope
and
mov
pop
sbbb
push
or
or
pop
mov
out
pop
mov
clc
dec
shlb
sub
mov
mov
pop
clc
jg
loope
and
mov
mov
mov
outsb
std
divb
xor
outsb
xor
ja
test
mov
or
ret
aaa
roll
call
or
xchg
js
inc
mov
add
and
fsqrt
push
int
js
arpl
jae
add
inc
clc
jg
mov
nop
dec
in
mov
xchg
lret
test
ffree
push
xor
ja
adcb
mov
mov
xchg
frstor
imul
es
pop
mov
roll
cmp
mov
lods
mov
xchg
dec
iret
loop
ljmp
and
xor
gs
or
sbb
cli
sub
xchg
fisubrs
sbb
sub
imul
faddl
pop
dec
xor
test
jge
pxor
ret
sahf
mov
and
inc
fistpl
push
call
cli
ret
int3
daa
sub
mov
flds
sbb
ret
nop
push
ja
mov
fnstenv
sbb
jae
lods
mov
pop
call
dec
mov
scas
jb
loop
fildl
push
mov
les
outsl
and
sbb
push
rclb
dec
mov
mov
sbb
push
jg
sub
repz
push
or
cmp
fistps
in
fs
xor
inc
lret
dec
in
or
loop
mov
fisttpl
push
clc
scas
std
repz
les
mov
popa
xor
dec
pop
cwtl
fcoms
jae
pop
cmp
xchg
idiv
push
daa
and
add
ret
push
js
xchg
inc
in
imul
outsl
js
lock
sub
subb
imul
data16
push
rcll
and
jae
dec
lcall
sub
or
add
and
cwtl
jae
or
cmc
lock
mov
rorb
jbe
xchg
sub
sbb
pop
xchg
arpl
loop
jmp
lret
roll
aad
push
adc
dec
int3
out
jg
jle
adc
and
mov
das
out
jmp
stos
adc
clc
shll
xchg
lea
mov
mov
xchg
ret
add
mov
and
push
and
rol
cmp
addl
js
sbb
lcall
or
push
jmp
ds
push
add
jb
xchg
mov
inc
pop
mov
mov
aad
in
rorb
and
insl
mov
or
mov
hlt
das
mov
pop
js
xchg
sarl
cld
fs
jno
outsl
out
jbe
out
inc
pop
fsubl
pop
js
fsubs
jbe
test
push
in
fcmovnb
push
mov
loop
test
jno
les
push
xchg
xor
cwtl
cmp
inc
sbb
sbb
xchg
push
loope
push
std
mov
mov
jl
imulb
jge
shll
iret
das
jmp
xchg
mov
clc
jg
addl
cmc
xchg
sub
mov
or
dec
or
xchg
nop
inc
insb
das
mov
clc
and
adc
push
in
sbb
sti
sahf
dec
xchg
and
cwtl
aad
dec
iret
daa
adc
cmp
mov
mov
out
xor
mov
mov
and
add
add
inc
pushl
in
daa
bnd
call
cmp
mov
fisttpl
mov
nop
and
adc
mov
sbb
icebp
jg
repz
ds
mov
sub
sbb
mov
mov
loopne
jmp
ds
jmp
cmp
jbe
jg
jne
sar
xor
fwait
icebp
adc
jg
je
fwait
and
test
jnp
pop
xchg
icebp
lods
orb
ror
sub
in
cs
mov
jmp
insl
mov
cmp
mov
stc
data16
sbb
test
test
ss
jecxz
dec
add
pop
xor
je
jl
mov
mov
aam
or
outsb
mov
fsubs
xchg
add
rcrb
adc
add
sbb
call
loop
outsl
sub
arpl
aad
mov
sub
pop
pop
outsb
mov
loope
dec
cmpsl
dec
cs
test
inc
ja
in
sbb
fistps
cltd
mov
cmp
fwait
es
pop
sbb
daa
aas
push
stos
ret
and
sbbb
pop
cli
aam
loopne
sbb
lock
adcl
roll
clc
iret
scas
xor
pop
test
jl
mov
fcomip
fbstp
add
dec
or
outsb
sarl
pushf
xor
mov
cmp
add
xchg
out
sub
loopne
or
nop
outsb
add
fcmovnbe
push
push
test
outsb
xor
xchg
push
sub
dec
push
adc
mov
aas
inc
mov
dec
xor
sahf
and
clc
cmp
xor
cld
push
xchg
aam
jnp
push
repz
inc
and
lcall
jp
xor
test
push
or
mov
mov
int3
jo
loop
push
js
add
inc
cltd
inc
inc
cld
mov
jmp
cmp
mov
lcall
lahf
xchg
fs
lods
ljmp
shld
ljmp
cld
fwait
push
in
rcrb
popf
lea
pop
andl
jo
ljmp
movsl
clc
sub
jno
loope
inc
or
das
cmp
jg
and
adc
movsb
mov
or
mov
jp
rcrb
adc
popf
fisubs
sbb
pop
mov
mov
das
push
sbb
adc
dec
push
pop
in
and
fdivrs
mov
fs
xor
movsb
test
xor
cmp
outsl
xchg
outsl
cmc
ljmp
sub
sbb
pusha
addr16
xchg
daa
rcrl
xor
rcr
pop
or
or
aaa
jno
mov
pop
jecxz
andb
xor
mov
das
test
dec
sub
std
ljmp
fwait
loopne
or
cs
loope
xor
sub
jl
test
or
cmp
ljmp
testb
pop
fwait
clc
nop
lret
icebp
dec
mov
clc
push
jle
iret
cmp
stc
shr
mov
mov
sub
add
data16
dec
int3
cwtl
mov
test
mov
mov
push
push
out
mov
lea
mov
sbb
sub
add
xor
enter
pop
lret
or
mov
and
mov
jo
pop
xor
xchg
xor
adc
cmp
and
fildll
orb
add
call
and
inc
dec
cmp
outsb
addr16
aad
cld
push
jne
js
sbb
movsl
outsl
push
clc
scas
stos
lahf
cmp
push
js
push
sbb
lcall
hlt
jle
je
and
dec
and
xorb
fucomp
push
test
mov
fs
fcmovb
aas
jo
add
out
jno
cmp
outsl
sub
idivl
add
push
lret
cmp
push
imulb
inc
subl
dec
dec
push
orb
mov
push
ds
aaa
mov
add
mov
fbld
jo
lret
adc
xchg
inc
roll
rorb
nop
mov
arpl
inc
add
jbe
cmp
ja
movsl
xor
pop
fdivp
clc
jo
test
and
repz
or
sub
and
repnz
stos
dec
cld
jecxz
cmc
inc
inc
out
adc
mov
or
clc
cmp
fsubr
inc
push
jl
adc
outsl
stos
push
lods
inc
in
sub
jmp
adc
sub
cmp
rcrl
cmp
push
xorb
jnp
lahf
das
dec
jecxz
cmp
scas
fmul
pop
rol
sbb
outsb
in
xorb
sub
pop
stos
mov
dec
adc
inc
sub
sub
sub
cmp
in
loopne
or
leave
cmpl
xor
inc
daa
popa
mov
xor
mov
lods
out
clc
insl
mov
imul
jle
ret
adc
movsb
push
mov
xchg
sub
and
jno
outsb
jo
inc
fcmovbe
ljmp
pop
adc
and
lds
push
mov
cli
mov
loop
icebp
ret
loope
sbb
dec
add
cmpsb
xorb
mov
xchg
cmp
or
cmp
jo
aas
sub
icebp
inc
arpl
mull
cmp
fwait
ljmp
jg
shll
cmpsb
jbe
pop
popf
pop
dec
sbb
adc
sbb
outsl
cmp
jge
stos
bound
sub
fimuls
mov
pop
xchg
mov
push
sbb
push
pushf
xchg
aam
push
mov
sbb
mov
jbe
push
push
fildl
rol
dec
adc
add
pop
dec
in
ret
inc
adc
mov
dec
iret
inc
arpl
mov
xchg
data16
pop
mov
cmp
add
std
add
mov
incl
scas
dec
mov
pop
sbb
test
or
addr16
iret
jl
add
out
repnz
bound
pop
arpl
jne
xchg
cmp
push
adc
lcall
lods
cmpsl
rcrb
sbb
loopne
add
push
add
sbb
push
aaa
test
pop
imul
mov
sbb
or
xchg
jp
inc
in
popa
fistps
mov
loopne
add
cmpb
adc
sub
data16
lahf
and
int3
mov
and
xor
jno
cmp
push
jle
push
pop
inc
test
sbb
add
popf
in
dec
std
in
push
mov
push
and
cmpsl
mov
sub
loopne
daa
xchg
or
jp
xchg
fmul
lds
fsubrs
and
xlat
in
xchg
stc
outsl
dec
movl
mov
xor
mov
mov
xor
into
xchg
pop
sbb
fistpll
lock
xchg
push
cmp
jo
pop
cmc
mov
gs
xor
or
sbb
lods
cmp
pusha
xlat
test
sbb
in
xor
pop
sbb
decl
and
bound
je
jmp
cmc
rcrb
xchg
cmc
imul
or
mov
sbb
sub
pop
in
sub
mov
fcmovnu
pop
rcrl
dec
inc
test
mov
pop
and
xchg
popa
cmp
mov
pop
sub
push
lcall
ss
into
dec
cmp
pop
dec
push
xchg
mov
mov
loopne
xchg
mov
mov
mov
dec
out
jb
xor
rorl
jle
mov
jle
int
add
and
jne
fisubrs
lret
pop
arpl
xor
sbb
dec
fldt
sbb
scas
pop
push
cli
push
outsl
inc
jl
add
and
nop
loopne
mov
pop
pop
jbe
adc
fwait
out
pop
loop
hlt
cltd
mov
or
ljmp
into
mov
icebp
push
out
jg
sub
mov
cwtl
cs
fldt
cltd
push
in
aas
add
adc
pop
ljmp
enter
sub
adc
adc
rolb
fdivl
fiaddl
pop
mov
or
xchg
in
out
dec
sbb
clc
pop
jl
fimull
mov
test
mov
inc
cmp
push
loopne
sub
in
cld
aam
shl
add
aaa
in
fisttps
mov
dec
mov
dec
or
mov
jbe
jmp
fwait
pop
pop
add
add
or
fcmovbe
and
mov
and
inc
in
mov
cld
cmp
xchg
sub
adc
mov
adc
enter
inc
insb
xchg
addr16
dec
mov
xchg
clc
mov
xchg
pushw
fs
cmp
mov
std
jmp
popf
arpl
cmpb
aaa
dec
or
and
mov
or
adc
lcall
mov
sbb
aad
fisubrl
cmpsl
pop
adc
test
lods
call
adc
sub
dec
imul
outsl
cmc
push
push
add
push
push
add
stos
test
push
les
add
enter
aam
test
insl
mov
push
mov
xor
decb
in
std
xchg
ds
sbb
das
push
sbb
mov
arpl
mov
ds
inc
mov
lret
or
insb
and
cmp
and
pop
std
out
mov
sahf
push
sbb
lods
push
imul
and
inc
adc
pusha
and
aad
rcrb
xchg
andl
inc
dec
or
sbb
sbb
addl
scas
dec
or
out
xchg
adc
fwait
pop
js
adc
sbb
push
mov
push
les
loope
fisttpl
lock
mov
xor
pop
sub
out
dec
jmp
outsl
cltd
xchg
dec
insl
mov
jne
outsl
sub
inc
push
pop
sub
lret
ret
pop
push
movsb
loopne
cmpsl
lds
inc
mov
dec
fwait
popa
popa
mov
gs
xor
add
mov
shr
pop
mov
orb
pop
lock
lock
dec
mov
fs
dec
scas
dec
pop
lods
lock
scas
into
cmpsb
pop
or
rorl
icebp
fldcw
adc
pop
in
sub
shlb
cmp
aad
je
mov
inc
mov
and
data16
sub
movsl
xor
shl
into
jmp
inc
inc
pop
test
xor
mov
jne
stos
jge
movsl
mov
lds
xchg
add
push
aam
popa
mov
inc
add
jbe
aas
pop
ret
lea
mov
sub
pop
jl
lcall
add
mov
jo
mov
pop
adc
lret
arpl
fnstsw
lret
call
push
ret
faddl
call
dec
sub
leave
mov
out
loop
or
test
outsb
nop
adc
daa
loop
stos
mov
or
and
jno
in
or
mov
movsl
pusha
out
jg
sti
notb
adc
clc
lcall
push
sbb
lcall
and
scas
push
fldcw
push
shr
sbb
int
cmc
mov
xchg
shl
outsb
lahf
scas
outsb
pop
and
lods
scas
pop
xorb
inc
outsl
inc
in
fucomi
mov
push
adc
lahf
jecxz
jl
fisttps
into
and
jb
and
xchg
mov
fisttps
adcl
adc
ss
jae
out
movsb
pop
pop
pop
cli
clc
dec
cmpsb
sar
js
lret
out
hlt
test
add
les
dec
or
in
movsl
push
test
inc
adc
and
inc
lds
imul
inc
icebp
jg
or
test
or
test
repz
cmpsb
mov
notb
push
xchg
ror
sub
push
sub
xchg
incb
and
adc
movsb
pushf
popa
fimuls
mov
imul
mov
out
jbe
ds
addl
mov
jg
std
dec
and
std
jno,pn
jno
int
jbe
cmp
inc
ret
sbb
cmp
shlb
out
xchg
mov
stos
inc
push
jnp
test
adc
lock
and
aam
mov
mov
into
push
and
popf
mov
bnd
xchg
push
pushf
jmp
mov
mov
and
push
scas
and
sbb
cwtl
inc
mov
fwait
sti
jp
imull
ljmp
test
adc
adc
push
das
mov
xorb
test
inc
mov
sub
dec
jle
xchg
fistpl
pop
cmp
push
test
mov
clc
lahf
adc
fimuls
repnz
scas
call
pop
mov
xlat
jl
popa
mov
popf
xor
or
mov
jmp
jo
mov
inc
imul
lcall
jp
mov
ret
mov
jne
cltd
mov
fimuls
add
outsl
fsubs
sub
lahf
xor
cmpsl
in
lahf
push
dec
outsl
or
imul
xchg
lret
mov
or
ds
mov
or
lock
xchg
mov
in
xchg
pop
lret
mov
pop
test
lea
dec
int
sbbl
inc
sbb
or
jae
xchg
sub
mov
insl
adc
pop
icebp
push
sti
cwtl
xor
out
sbb
adc
ja
lds
push
in
or
das
jl
cmc
add
xchg
cmc
xor
ljmp
incl
sti
mov
sahf
cmp
inc
sbb
xor
clc
and
sahf
push
jnp
sti
mov
or
fneni(8087
dec
pop
stos
inc
push
mov
jg
imul
and
mov
mov
adc
pop
or
rclb
test
mov
xchg
add
add
clc
movsl
xor
mov
imul
mov
sbb
sbb
fistpll
dec
pusha
imul
or
arpl
mov
xor
pop
sbb
jp
sbb
add
stc
das
mov
xor
outsb
cmpb
cmp
add
test
aaa
fistpll
cmc
ret
icebp
inc
test
inc
mov
or
jp
push
pusha
xor
jb
jbe
insl
sub
je
lods
pop
mov
dec
int
fidivrl
push
adc
mov
adcl
in
idiv
cmc
cmp
sub
lcall
xchg
xchg
int
enter
movsl
stos
xor
enter
jo
xchg
mov
popa
lahf
shll
pushf
andl
inc
xchg
leave
sbb
or
cli
outsl
das
xchg
scas
pop
and
ffree
mov
mov
scas
mov
jecxz
dec
incl
leave
jns
cli
or
jge
decl
push
jae
test
mov
mov
jmp
repz
push
imul
xlat
gs
hlt
scas
xor
dec
out
and
das
ljmp
popl
xchg
in
ljmp
mov
icebp
and
push
imul
mov
out
shll
clc
dec
mov
xor
sub
pop
and
add
mov
lahf
pop
loopne
outsb
je
add
and
jl
divb
nop
gs
mov
negb
mov
cmp
inc
int3
inc
or
mov
pop
loopne
add
lods
dec
inc
mov
lahf
insl
pop
std
add
movsl
outsb
jbe
sbb
jg
dec
int
sbb
pop
push
xchg
adc
push
fmull
or
jmp
jb
int3
fistl
shlb
mov
lahf
test
inc
mov
rcrl
test
incl
loop
inc
push
sub
or
sbb
notb
jg
ljmp
adc
mov
push
cmc
cltd
adc
push
push
lcall
push
mov
cld
iret
test
sub
pop
dec
cmp
add
loope
lods
jle
add
mov
add
add
push
cmp
dec
push
call
jge
cs
pop
loopne
mov
jge
sbb
xchg
lea
push
out
movsl
ss
enter
pop
lea
dec
mov
shr
inc
push
mov
cmp
mov
mov
cmp
mov
add
clc
and
clc
and
inc
fs
imul
xlat
and
in
mov
push
sbb
fwait
pop
push
mov
xchg
test
clc
das
std
popf
cmpsb
cmp
inc
cmp
fisubrs
inc
outsl
jne
sub
push
cmp
test
sub
jbe
aas
xor
mov
xor
fnstsw
stos
or
rcl
pop
push
shll
fdivl
mov
pop
addb
pop
cli
and
pop
cmp
pop
cmpl
jg
mulb
es
ss
push
cmpsb
and
aam
pop
or
outsl
outsl
jo
and
and
mov
inc
les
fbstp
cmpl
pop
data16
xchg
sbb
repz
ljmp
call
test
into
pushl
pop
notb
dec
rcrb
dec
mov
sbb
lods
xor
loop
outsl
mov
std
push
pop
jp
sub
jle
int3
call
outsl
pop
in
sbb
sbb
jl
jo
xchg
jbe
inc
test
mov
loopne
scas
add
mov
pop
xor
jl
stos
js
cs
mov
jge
jle
mov
pop
jp
negl
imulb
jae
jp
inc
rorl
mov
xchg
mov
lret
call
aas
push
sbb
mov
iret
mov
mov
mov
push
int
rcrl
std
inc
ss
pop
fsubs
call
and
mov
jmp
sbb
jle
lcall
sbb
sub
dec
inc
adc
arpl
lret
lret
icebp
xchg
mov
stos
cwtl
or
mov
mov
sarb
fiaddl
xchg
pop
int
loope
out
pop
push
or
fs
fisttpl
and
adc
imul
inc
mov
std
insl
xchg
dec
clc
mov
jl
inc
ret
dec
mov
jl
dec
jno
mov
scas
and
shll
push
xor
mov
sti
pop
sub
inc
and
mov
xor
sbb
das
push
pusha
das
test
sbb
jge
sar
dec
sbb
push
mov
loopne
xchg
adc
jmp
sub
jmp
cs
aaa
cld
cli
mov
out
mov
mov
loopne
les
ret
mov
dec
inc
cmpsb
pop
aas
andl
pop
adc
out
jp
lcall
adc
mov
xchg
add
lret
enter
subb
enter
jbe
cmc
mov
fcoml
mov
stos
stos
pop
rcl
sti
jg
out
ljmp
hlt
scas
xor
dec
ds
fwait
sub
cmc
jnp
mov
fdiv
into
daa
push
mov
aaa
das
xor
bnd
adc
insb
arpl
pop
test
xlat
scas
mov
xor
cld
fsubs
daa
add
push
push
jb
clc
decl
inc
ficoml
sub
outsb
pop
push
mov
rcrb
adc
jnp
aam
mov
pusha
jle,pn
mov
xchg
inc
sub
or
test
adc
jmp
push
jge
cmp
lret
jnp
adc
mov
inc
aaa
add
adc
pushf
ficoml
mov
scas
mov
dec
push
cmp
xchg
sbb
fucomip
ret
cmpb
jle
iret
add
popf
pop
cmp
jmp
xor
cmp
or
pop
lcall
fcoms
and
les
popa
mov
sub
mov
adc
dec
xchg
ds
sub
pop
lret
fcmovnu
jo
js
or
fcompl
jno
inc
popf
push
cmpb
or
cmp
clc
mov
fldenv
fs
or
and
or
or
js
sbb
mov
rolb
dec
mov
pop
imul
dec
sub
and
cmpb
inc
test
xchg
lea
pop
cmp
pusha
insl
insb
inc
nop
shlb
pop
push
fldt
push
jmp
inc
popf
in
movsl
pop
or
xchg
stc
lods
ficompl
scas
mov
cmp
cmp
mov
jnp
lahf
mov
xchg
xchg
leave
xchg
test
xchg
fadd
and
fists
xlat
stos
stos
cmc
movsl
add
mov
clc
mov
fiaddl
sub
mov
pop
pop
xchg
inc
xchg
data16
je
idiv
lea
adc
xchg
testb
mov
add
jb,pt
ds
movsl
pop
xor
out
xchg
pop
enter
mov
pop
aad
nop
in
iret
push
mov
mov
stos
xor
nop
addr16
out
insb
pusha
popa
stos
testb
add
fsubp
or
pop
sahf
lods
jns
testb
fidivl
inc
pop
addb
and
sar
sbb
adc
mov
pop
mov
cmp
fsubl
dec
cmpsb
pop
mov
xchg
fidivrs
repz
add
and
dec
and
dec
rolb
mov
int3
add
js
scas
fidivrs
inc
pop
insb
flds
into
cwtl
in
incl
sbb
jbe
mov
jne
data16
ja
mov
out
shll
ret
dec
roll
jo
mov
das
fdivl
pop
sarl
out
jp
and
lret
adc
sub
rorb
sbb
in
or
loopne
inc
cmp
mov
add
call
xlat
inc
mov
loope
sbb
xor
shrl
lahf
iret
cld
out
cmp
rcrb
imul
inc
sbb
dec
out
lret
loope
xchg
push
jno
aaa
mov
stos
mov
js
push
mov
dec
nop
lea
mov
cmpsb
in
mov
mov
test
test
loopne
mov
cmp
sbb
shr
add
inc
jg
fwait
stos
mov
jae
pop
fisubrl
inc
enter
filds
insl
out
test
and
inc
mov
fldt
cmpsb
add
or
or
sub
and
outsl
shlb
jns
andl
fcomps
loope
negb
jnp
fnstsw
xchg
out
ss
movsl
mov
mov
shr
and
xchg
imul
mov
shrb
scas
rol
cmpsl
ja
sub
pop
pushf
or
cmp
inc
mov
jecxz
xor
mov
mov
cmp
bound
in
stos
lods
pop
ds
mov
loopne
mov
out
popa
fisttpl
push
mov
lret
in
jecxz
in
fsubr
insl
jecxz
cmp
ljmp
lcall
outsb
inc
xlat
mov
mov
adc
rol
fxch
insl
xchg
gs
adc
out
ret
or
xchg
in
xor
cmp
lock
cmpl
sahf
mov
or
mov
daa
jae
popf
cmp
call
sbb
or
stos
adc
sbbl
dec
xor
sub
mov
fucomi
js
dec
hlt
ret
sti
andb
mov
loope
jnp
adc
fistpll
push
out
inc
or
inc
xchg
test
xchg
inc
cmp
clc
fsubrs
adc
jne
xor
jecxz
sbbb
and
fdivp
sbb
jo
mov
mov
inc
aas
cmp
fsubr
jmp
fldt
sar
push
pop
push
jmp
pop
push
sub
xchg
int3
adc
pop
inc
pop
loopne
push
test
movsl
cli
pop
int3
mov
push
aad
dec
pop
dec
ret
pop
clc
pop
add
movsl
jmp
sub
imulb
rcl
mov
mov
jecxz
mov
mov
push
mull
xchg
cld
movsb
or
clc
push
cld
push
add
sbb
test
das
insb
inc
sub
popf
sti
lea
push
inc
icebp
mov
pop
add
jl
sbb
and
dec
xlat
xchg
and
dec
sbb
push
dec
push
inc
fnstsw
adcb
std
dec
xchg
push
movsl
cmp
xchg
jnp
add
mov
imul
pop
mov
jno
stos
movsl
pop
jbe
je
sbb
hlt
push
pushf
push
mov
lcall
cwtl
jmp
jb
push
push
adc
cwtl
imul
mov
loope
mov
in
push
xor
xchg
in
pop
sbb
jge
jle
roll
dec
cld
arpl
pop
fisttps
insl
adc
adc
lock
jg
flds
inc
push
imul
jmp
xchg
and
fildl
inc
adc
cmpsl
add
xchg
or
in
jl
test
jmp
lock
stc
shll
mov
pop
sub
fwait
lahf
int3
pop
xor
outsb
inc
jl
mov
sbb
outsb
test
sti
adc
pop
stos
sbb
push
dec
or
ja
roll
clc
mov
ficompl
movsw
imul
rolb
xor
dec
les
hlt
mov
xor
fstpl
insb
mov
lods
popf
mov
mov
sbb
add
pop
sub
adc
and
fistpll
clc
les
push
adc
imul
xchg
adc
add
lret
or
sti
xor
inc
pop
jl
add
in
xor
je
pushw
out
or
adc
xor
sbb
jecxz
incl
das
lock
pop
push
ficoms
arpl
add
pop
adcb
test
jl
cmp
shr
and
xchg
or
pop
jge
inc
mov
dec
mov
add
adc
js
push
mov
aaa
pop
sub
adc
shl
das
pop
imul
mov
mov
push
mov
and
push
and
jl
jge
pusha
bound
inc
mov
stos
addb
push
test
leave
pop
jl
jno
testl
test
xchg
ret
fimull
push
sti
cli
push
insl
push
jle
call
pop
xor
jle
popf
add
adc
adc
stos
fnstcw
mov
xlat
mov
stc
adc
jg
bsr
pop
pop
cmc
mov
and
jp
mov
jecxz
or
xchg
stos
aam
cmp
shl
mov
cmc
xchg
dec
ret
push
dec
xor
push
sbb
add
jp
mov
pop
add
jns
mov
out
icebp
imul
fwait
jp
ss
xchg
sahf
xor
push
nop
sbb
xchg
pusha
cmp
pusha
roll
imul
mov
mov
inc
scas
push
mov
push
arpl
js
push
jb
xchg
sbb
sti
jmp
mov
mov
adc
inc
inc
aad
push
sub
in
mov
leave
fsts
loope
push
cltd
inc
test
adcl
sbb
or
mov
rolb
fmuls
pop
mov
lock
xor
cli
and
aam
repz
aad
mov
shll
cmp
gs
sub
mov
iret
push
sub
subb
sbb
xchg
xor
or
sbb
aam
les
cld
sub
out
fwait
or
xor
jnp
pop
outsl
std
inc
jo
call
gs
outsb
pusha
adc
push
fistps
mov
dec
sbb
and
dec
sub
mov
xchg
das
cltd
push
and
fsubl
scas
insl
mov
or
clc
mov
outsb
sbb
or
adc
inc
xor
inc
idivl
mov
mov
fdivrp
dec
jecxz
pop
es
loop
in
les
test
sbb
jo
fstl
sbb
mov
std
ret
addr16
jp
mov
lock
inc
ss
sub
jns
push
cli
mov
sbb
ja
adc
enter
mov
or
push
adc
in
cli
mov
lret
bound
sub
sbb
add
pusha
jecxz
cmp
sub
lcall
repz
xor
andl
mov
and
push
fsubrl
fmuls
mov
adc
pop
xor
unpckhps
sbb
add
movsb
or
jecxz
and
pop
cli
jnp
push
lock
sub
adcb
xchg
xor
sar
rcll
jmp
xlat
outsl
mov
inc
inc
xor
pop
pushf
xchg
imul
inc
in
mov
push
call
aaa
imul
jnp
lret
int
loopne
push
outsl
mov
mov
fnsave
icebp
push
push
lock
mov
pusha
cmpsb
jnp
out
jle
das
insl
mov
dec
or
mov
std
lds
fs
add
pop
push
and
sub
inc
mov
pushl
push
mov
xchg
push
rcrl
push
repnz
add
out
lock
pop
clc
ret
loope
push
shl
sub
enter
mov
jp
sbb
stos
es
shlb
sbbb
add
repnz
jp
aam
sahf
inc
push
pop
sbb
les
in
sar
mov
xchg
jne
jno
jle
sti
mov
pop
jb
pop
or
cmp
mov
pusha
xchg
or
adc
shrl
pop
test
inc
and
and
je
call
lea
sbb
or
sub
ss
jb
mov
insl
cmpsl
sbb
adc
adc
inc
jg
jae
xchg
lock
mov
and
mov
xor
sbb
pop
loope
fstp
mov
test
pushf
sti
iret
inc
cmp
xor
cmp
call
mov
icebp
lds
mov
shrl
xchg
adc
adc
inc
mov
jg
pop
shll
lahf
pushf
cmp
ficoms
push
push
or
dec
dec
aaa
aaa
jne
out
std
push
xor
xor
test
clc
mov
jo
ss
sub
ss
subl
mov
or
mov
push
push
pusha
rclb
loopne
xor
sar
or
sub
adc
hlt
mov
sbb
push
and
fsubrl
pop
push
pop
adc
jg
cmpsb
push
jecxz
jbe
pusha
dec
fsubp
and
pushl
add
faddl
hlt
add
jnp
loopne
mov
pop
test
fmuls
jge
dec
sbb
inc
xchg
add
repnz
leave
jecxz
dec
loop
mov
or
mov
push
jno
mov
push
dec
sub
pop
fwait
ss
lcall
lods
xchg
fistpll
sbb
cld
jle
jecxz
jecxz
inc
add
aad
push
inc
jecxz
test
inc
jns
insb
clc
sbb
fisttpl
dec
rclb
negl
int
pop
dec
ja
fs
add
je
dec
in
push
pop
mov
jge
inc
sub
xor
aad
and
push
test
movsl
push
dec
repnz
xor
in
adc
cmp
loope
mov
fstps
enter
xchg
xor
in
xor
pusha
enter
sub
cmp
pop
sub
fidivs
pop
stc
adc
ljmp
mov
mov
sbb
sub
jp
das
adc
sbb
mov
int3
cli
mov
add
push
push
cwtl
adc
xchg
fmulp
in
inc
and
imul
jmp
jns
or
outsl
sbb
test
insl
loopne
jp
pop
bound
testl
and
xor
scas
ljmp
popf
and
adc
add
pop
xor
loope
ljmp
mov
cmpsl
dec
andl
daa
std
or
sbb
mov
or
scas
movsl
out
icebp
mov
das
jl
movsb
popf
push
iret
adc
mov
jne
jmp
popf
mov
lods
andb
in
ss
das
inc
lds
xchg
xchg
sar
aaa
push
ljmp
hlt
mov
out
inc
adc
ds
movsl
mov
das
inc
xor
cmpsl
loope
ret
loopne
adc
pushl
leave
jne
movsb
addr16
xchg
cs
ljmp
sbb
inc
dec
jmp
jns
or
test
leave
popa
adc
subb
and
xchg
add
adc
aas
or
fwait
mov
add
jg
fs
sbb
add
ja
cmp
idivb
xor
xor
cli
mov
clc
jg
or
mov
sbbl
and
inc
ljmp
stc
data16
cmp
lea
cwtl
cli
adc
js
dec
dec
mov
icebp
incl
ljmp
xor
push
scas
fwait
push
ja
xor
mov
mov
stc
jmp
or
shlb
cmp
jo
pop
lock
adc
cmp
mov
shlb
and
insl
mov
sub
clc
fisttps
lock
mov
cmpb
mov
inc
std
adc
outsl
nop
inc
rcrb
mov
sub
shlb
xchg
mov
sbb
ja
fsubrl
adc
std
popa
ret
cmp
push
push
push
xor
jle
imul
cmp
ljmp
dec
mov
arpl
xchg
cld
ret
pop
sub
push
orl
jp
mov
movsb
stos
arpl
sub
mov
stc
add
push
xchg
arpl
aad
clc
dec
jnp
iretw
or
pop
pusha
mov
gs
push
inc
std
add
cli
fadds
pop
jge
popa
xlat
mov
mov
push
xor
movsl
dec
push
lcall
jl
jae
add
clc
mov
inc
fchs
push
cmp
aam
xchg
or
push
out
cmpsb
stos
jg
inc
arpl
popa
ret
jle
pop
cld
dec
mov
xor
and
or
rcrl
pop
stos
pop
cmp
das
movntq
mov
shlb
or
ljmp
inc
and
mov
mov
adc
movsl
sub
psrad
adc
mov
and
or
lock
cwtl
adc
add
pop
mov
stos
push
jbe
xor
out
sbb
outsl
das
mov
mov
cltd
imull
std
int3
pop
mov
adc
sbb
mov
cltd
dec
sar
lods
imul
push
rorb
sbb
mov
dec
xchg
jle
adc
and
sub
xor
inc
cld
scas
pop
and
push
adc
cli
ljmp
ss
das
xchg
outsl
jne
mov
shlb
ja
nop
inc
sar
and
or
cmp
jg
scas
scas
push
xor
dec
cmc
sbb
xor
repnz
cld
add
rorl
or
pushf
sub
loope
push
push
daa
pop
dec
pop
inc
mov
dec
pusha
outsl
call
rolb
daa
adc
add
cld
push
sub
xor
cmpsl
nop
repz
cli
sbb
jg
stc
or
mov
dec
lcall
inc
add
stc
jp
test
or
sbb
repnz
in
clc
shlb
xchg
cwtl
pop
sar
aas
ljmp
sbb
cmp
or
aam
jp
in
inc
subb
cmp
push
xor
mov
mov
sbb
add
or
sub
sub
xchg
pop
stos
push
jp
sbb
and
or
aam
or
cwtl
and
xor
sub
cmp
loopne
arpl
js
jg
fmull
jmp
int
push
dec
pop
mov
sub
inc
lock
inc
sar
js
lods
jl
ljmp
cmpsl
xchg
fcomps
jmp
bound
gs
jo
pop
loopne
and
mov
out
mov
pop
pop
pop
sbbb
shlb
dec
fcomi
adc
aam
push
ret
or
jne
adc
rcrb
adc
cwtl
shrl
mov
sbb
mov
ret
insl
lcall
xchg
icebp
ds
xor
in
mov
mov
push
mov
sub
dec
sbb
loopne
mov
mov
mov
outsb
fisttps
xorl
cmp
dec
jno
lods
cmp
decl
cmc
ljmp
loop
push
adc
cmpsb
xor
aad
cmp
and
sub
sahf
lahf
inc
mov
ss
sub
fisttps
adc
dec
or
push
aad
xor
mov
js
bound
add
xchg
nop
adc
imul
dec
cmp
jmp
sbb
mov
push
out
cmp
dec
rcrl
sbb
cmp
adc
cmpsl
mov
decl
insl
andl
cmp
mov
add
lods
inc
and
jmp
je
xchg
lcall
mov
lea
pop
jmp
dec
pop
inc
xchg
cld
push
mov
std
leave
xchg
pop
xor
enter
icebp
jg
sti
inc
inc
fcomps
cmp
and
rolb
fildll
mov
jns
scas
pop
adc
adc
fisttpll
push
dec
fs
add
mov
and
int
sub
adc
xchg
xchg
xchg
in
fildl
or
inc
or
sbb
fcmove
xor
pop
mov
rorl
push
movsb
push
popa
repz
in
xor
cmp
loop
push
fstpl
jge
ss
cmp
stc
inc
imul
rolb
loopne
lock
push
fists
and
inc
and
das
insl
and
xchg
adc
xor
sbb
inc
mov
subb
xchg
shrb
sub
pop
out
xor
je
clc
push
outsb
lods
cli
sbbl
leave
sbb
push
std
xor
xchg
dec
jo
ljmp
ljmp
pop
ss
das
leave
data16
xchg
cmc
nop
xchg
mov
pop
jbe
hlt
pop
jmp
in
and
and
mov
add
mov
xchg
push
outsl
mov
jg
and
decl
aad
pusha
call
mov
fisubrs
sub
mov
popa
popa
insb
pop
pop
xchg
outsb
js
cs
sbb
orb
jecxz
push
mov
xchg
loope
push
jge
addr16
push
jecxz
ljmp
stos
sbb
je
pop
pop
mov
into
pop
jae
pop
inc
push
inc
jl
and
cli
arpl
lock
out
iret
push
push
mov
cltd
or
lock
ds
add
inc
mov
int
push
subb
push
dec
arpl
inc
cmp
jmp
lret
inc
test
lea
or
mov
pop
xor
in
lods
ljmp
jmp
lods
cmp
mov
out
pop
push
out
incl
inc
dec
or
dec
test
sbb
mov
hlt
popa
xchg
mov
cmp
mov
subl
movsb
inc
or
sub
mov
mov
and
or
or
xor
fcompl
negb
popa
sub
fwait
jnp
lock
push
jp
sbb
cli
ss
sbb
or
cld
out
ljmp
loope
out
and
clc
pause
sub
daa
and
je
xchg
sarl
and
inc
mov
cmp
mov
sub
int3
shrl
sbbb
dec
mov
js
mov
outsl
mov
ret
mov
in
call
sub
test
jge
loop
mov
sti
jae
fisubrl
cmp
dec
mov
add
insb
push
pop
mov
xorl
shll
clc
pop
int3
and
bound
add
cmp
xlat
add
repnz
jecxz
push
push
ljmp
dec
in
jne
inc
aaa
push
sbb
push
cld
or
ljmp
inc
sbb
cmp
lea
inc
repnz
xchg
imul
cmpb
test
xor
jmp
arpl
inc
hlt
adc
es
sahf
data16
mov
arpl
jecxz
jbe
mov
fs
jo
popa
xchg
mov
call
add
ss
jae
jbe
addb
out
mov
cmp
xchg
test
cmp
cmc
rolb
mov
imul
repnz
or
pop
out
cmp
and
rclb
mov
roll
in
aaa
ret
test
sub
dec
push
movsl
xchg
inc
insl
dec
cli
incl
and
sub
adc
inc
stc
push
pop
cmp
adc
mov
mov
les
aad
jg
fildll
xchg
pushf
in
jecxz
stc
enter
mov
dec
pop
mov
nopl
and
and
and
sub
test
inc
push
arpl
fidivrs
in
jo
or
push
sbb
out
mov
loope
jmp
mov
les
repz
inc
fisttps
cmp
fcmovu
push
jl
out
jbe
pop
ja
dec
add
xchg
mov
and
stos
jbe
xchg
sbb
cmp
dec
pop
sarb
in
leave
std
and
repz
push
out
adc
mov
stos
push
mov
and
push
ficoms
sub
daa
shlb
add
loop
dec
xchg
sbb
lcall
out
pop
cmpsl
pop
out
and
xor
pop
sbb
push
mov
xor
les
js
imulb
dec
fwait
lds
jbe
adc
add
add
mov
lea
adc
mov
adc
sbb
out
xchg
hlt
pop
cli
ja
sbb
xor
push
sbb
stos
mov
lds
sbb
ljmp
cmp
andl
insl
add
ss
mov
clc
and
or
lock
adc
inc
ret
out
mov
daa
das
fldcw
adc
cmp
fiaddl
inc
fdivrp
lock
popa
sti
xor
cmpsb
jg
sti
outsb
mov
sub
fsubrp
cwtl
push
xchg
pop
inc
cltd
aas
inc
push
testl
rorb
push
js
hlt
xchg
xor
aaa
cmp
roll
lret
test
ret
jge
fs
adc
das
fs
loopne
outsl
xchg
loope
inc
pop
int3
js
sub
test
mov
divpd
cmc
cmp
lahf
mov
or
mov
aaa
push
dec
and
push
bound
lea
push
xchg
push
rcll
adc
insb
pop
add
std
loop
jne
je
xchg
and
les
inc
adc
movsl
push
mov
and
scas
mov
stos
mov
mov
dec
mov
and
jecxz
push
outsb
xchg
cmp
jnp
ja
roll
adc
aaa
mov
inc
pop
je
loopne
sub
sub
xchg
xor
mov
jnp,pn
lret
cs
ret
mov
mov
stos
scas
push
je
test
xchg
jl
dec
hlt
cmp
pop
imul
xor
fstp
push
push
bound
jae
test
mov
sti
mov
cs
jo
sarb
mov
push
push
pop
call
xchg
and
jns
sub
jno
out
or
xchg
and
xlat
inc
popa
mov
scas
lea
pusha
stos
xchg
in
mov
loopne
inc
add
sti
clc
and
xchg
outsl
mov
lahf
dec
dec
pop
xchg
push
ss
dec
inc
adc
rolb
fxch
or
enter
inc
popa
jno
cmp
mov
inc
lcall
out
stos
xor
jp
pop
add
jg
sbb
jmp
cmc
jno
sti
mov
sbb
sub
cmpsl
imul
jl
insl
pop
bound
jg
jp
add
popa
mov
mov
notl
push
out
fnsave
push
cmp
jl
nop
int
ret
subw
and
fsubrs
jne
aas
mov
cmpsb
loope
dec
aas
jle
test
add
mov
pop
mov
in
popa
test
fwait
mov
cmpsb
fcoms
pop
ljmp
mov
dec
fs
pusha
xchg
and
pop
bnd
lock
xchg
lret
pushf
sbb
inc
int
mov
inc
ret
data16
xchg
mov
xor
mov
sbb
inc
js
adc
mov
in
jmp
cmp
add
movsl
adcb
fdivs
jl
lahf
ja
fnstsw
mov
hlt
call
and
xor
ret
divl
cmp
xchg
cmpb
pop
out
pop
rclb
cmp
hlt
ljmp
inc
or
shl
call
fidivl
mov
and
loope
fdivl
xchg
mov
cwtl
xor
andl
xor
push
outsb
std
inc
jo
imul
lahf
js
or
dec
cwtl
add
mov
fcomip
mov
popf
addb
lods
and
or
cmp
gs
mov
mov
add
push
or
add
std
pop
push
dec
lret
mov
xchg
cmc
loopne
movsl
lahf
pop
cmc
pop
stos
mov
mov
int3
loope
and
outsl
in
inc
and
shll
or
sub
fs
inc
mov
clc
cld
mov
add
clc
pop
mov
shll
in
lods
dec
lret
popa
inc
outsl
das
inc
jmp
mov
lret
xchg
sbb
jecxz
fisttpll
clc
call
popf
movsb
lock
jno
mov
sub
out
push
fisubrs
test
pop
shlb
shll
sub
jl
mov
je
decl
pop
pushf
fisubs
xor
repnz
je
lcall
add
rorb
lcall
leave
les
sarb
xchg
jnp
or
rol
into
jns
movsb
and
xchg
lret
cld
or
mov
inc
jle
dec
cmp
aaa
insl
aaa
ss
pop
iret
jbe
add
cmpsl
call
outsl
std
sbb
sbb
dec
js
pop
lock
ljmp
pop
or
into
clc
clc
or
or
mov
xchg
mov
xchg
stos
aam
adc
mov
and
fnstsw
enter
add
repz
cmpsb
out
dec
imulb
shr
mov
xchg
jnp
push
add
adc
mov
bound
ret
push
xchg
call
in
dec
enter
rol
jmp
push
xchg
pop
mov
hlt
or
mov
fsts
mov
icebp
decl
xchg
out
add
sub
cmc
xor
and
mov
in
cmp
sub
xchg
mov
sbb
loop
ja
xor
imul
xchg
inc
xlat
pop
cli
shlb
and
and
ds
pop
movl
inc
or
push
push
mov
nop
xor
inc
lods
fiaddl
popa
push
mov
pop
movl
or
pop
sub
jae
cli
jo
test
pusha
or
in
xor
mov
clc
cmp
and
add
xor
fnstcw
shlb
fwait
sub
fisubl
movsb
incl
jl
pop
fcompl
xchg
in
loopne
bound
shrb
call
ficompl
adc
les
cmp
js
adc
pop
mov
ret
adcb
xchg
pop
test
icebp
fildll
jmp
push
mov
mov
mov
fldt
mov
pop
test
sub
call
mov
and
mov
es
adc
jb
scas
xchg
or
mov
inc
mov
adc
adc
inc
xchg
stos
mov
test
add
cmpsb
inc
test
out
test
lea
cmp
pop
mov
jl
sub
push
mov
pop
push
sahf
fs
sub
and
cmp
stos
cs
daa
jbe
xor
fdivr
pushl
adc
add
mov
rcrb
or
mov
mov
push
cmp
cmpsl
dec
sbb
dec
inc
mov
call
inc
fwait
out
adc
xorb
sub
inc
pop
orb
and
jb
adc
mov
pusha
test
pop
push
aam
pop
cld
push
sahf
adc
cli
sbb
lds
int3
es
and
sbb
dec
push
std
js
es
push
adc
sbb
pop
xor
and
int3
dec
mov
or
cmp
sbb
and
sub
pop
jmp
mov
and
movsl
xchg
xor
std
mov
cli
pop
lret
add
leave
nop
cs
bound
inc
inc
dec
cmp
xor
or
xchg
test
mov
enter
inc
mov
mov
fisttps
jne
jg
sbb
pushf
pop
gs
aas
orl
lock
xlat
mov
cltd
nop
xchg
jp
or
aaa
sti
decl
movsb
rep
pop
inc
cmp
orb
dec
divl
jg
sbb
das
dec
push
shll
xlat
sub
or
adc
mov
sbb
stos
jno
leave
dec
stos
push
adc
jl
stc
dec
movsbl
cmp
icebp
jne
mov
mov
movsl
mov
hlt
ja
add
sub
add
popf
lret
fdivrp
int
outsb
scas
int
mov
fistps
push
jg
rcr
popf
xchg
insb
mov
stos
fistpl
shrb
enter
loope
jge
jne
mov
mov
jl
push
push
gs
mov
inc
mov
push
add
in
ret
stc
outsb
cld
out
testb
ss
push
call
aas
mov
push
xor
or
sbb
xor
xchg
rcrl
rorb
call
out
sbb
or
test
pop
cmp
fsub
mov
leave
or
pop
in
subb
fldln2
mov
mov
je
int3
add
pop
sub
fistps
loopne
mov
icebp
adc
inc
iret
rolb
mov
insl
push
insl
call
add
pop
mov
aas
data16
xor
cmpsb
xchg
lods
jmp
in
out
movsb
mov
dec
lret
stos
aaa
cltd
jne
push
pop
imul
aam
xor
or
int3
sub
push
cs
cmp
ret
mov
aad
out
sub
popa
dec
cmpsl
icebp
out
fcoms
mov
mov
pop
mov
add
out
rorb
sti
mov
xchg
adc
and
or
lret
bound
dec
imul
leave
sbbl
jno
cmp
ss
sub
jg
sbb
cwtl
stos
je
xchg
jbe
hlt
test
arpl
scas
and
shlb
dec
outsb
add
subl
loope
ret
cmp
pop
jns
fisubrl
sbb
subl
push
loope
jne
inc
add
inc
cmpl
jl
imul
insb
insl
mov
xchg
gs
mov
mov
movsl
jg
or
xchg
in
stc
mov
fisubs
imul
push
and
enter
pop
and
xchg
into
adc
pop
mov
fiadds
mov
outsb
gs
lret
mov
ret
fs
call
dec
popf
sbb
mov
in
test
mov
jno
inc
push
je
and
and
out
mov
mov
jno
cwtl
rol
pop
xlat
sub
aaa
mov
lods
and
loope
outsl
add
fiaddl
xchg
cmp
sbb
pop
mov
pop
xor
cltd
lods
jecxz
xchg
mov
imul
mov
and
outsl
test
das
adc
mov
aas
cmp
mov
outsl
imul
mov
incb
test
clc
sti
rep
mov
cltd
fsubrs
pop
in
aas
cmpsb
loope
inc
outsl
scas
imul
movsl
aad
jecxz
jp
xor
pop
add
cld
mov
js
jg
cltd
mov
pop
and
pop
xchg
and
push
and
pop
jge
xor
inc
add
insl
enter
dec
popf
or
mov
xor
xorl
out
xrelease
and
cld
pushl
mov
push
and
leave
lcall
and
in
outsl
sbb
test
add
mov
xor
test
sbb
push
ss
stc
ret
or
mov
and
clc
mov
into
lds
mov
push
das
dec
add
push
inc
push
and
lcall
jmp
mov
std
push
adc
int
xlat
push
or
jl
outsl
test
xchg
ds
cmp
fsubrl
mov
and
or
xchg
js
addr16
or
or
aaa
aas
bound
test
nop
dec
cmpsb
sbb
sbb
xchg
pushf
and
cmc
mov
mov
ljmp
decl
mov
adc
ja
mov
imul
jo
sub
push
loop
rcrb
je
inc
bswap
pop
mov
xor
mov
push
aaa
push
inc
add
testb
in
jne
jns
add
cmp
pop
std
ret
mov
nop
mov
sub
push
clc
jg
jecxz
xor
les
push
or
dec
mov
pop
pop
add
cmp
push
aaa
or
fs
addr16
pop
jmp
xor
dec
mov
xchg
mov
xchg
mov
and
es
cmp
movsl
sbb
loopne
sbb
sbb
or
ja
pop
pop
popf
std
jle
out
out
imul
hlt
outsb
cmp
lods
and
and
je
loopne
sbb
xchg
sub
ja
js
cmp
sbb
lock
mov
pusha
jecxz
dec
pop
and
pop
and
xor
shl
push
das
jge
lods
subb
gs
pop
add
xchg
outsl
jbe
rcll
lods
sar
add
scas
dec
push
aaa
das
imul
dec
test
daa
dec
xchg
jmp
mov
push
iret
mov
fidivs
sub
xor
push
sbb
popa
lds
outsl
lods
fstpl
cmc
imul
mov
cli
in
outsl
sub
push
jg
mov
iret
jnp
or
lods
cmp
xor
arpl
mov
push
imul
ljmp
mov
add
sti
dec
outsl
lock
aas
inc
xchg
and
sahf
pop
mov
jle
inc
and
je
xor
or
clc
aad
popa
loope
in
das
xor
in
mov
jmp
jb
dec
dec
sub
addl
xchg
inc
mov
or
cld
sbb
lcall
dec
out
rol
fdivrp
xchg
push
sbb
outsb
add
rol
pop
pop
out
sub
sub
xor
sub
cmp
mov
aam
sbb
push
addr16
xchg
movsl
xchg
mov
out
enter
inc
ret
popa
cmpsb
jecxz
sbb
lret
lods
stc
xchg
inc
inc
fcomi
fcmovnu
cmpsb
sarl
fwait
mov
out
mov
mov
push
outsl
mov
ss
in
jl
inc
or
jae
or
or
add
sbb
insl
cwtl
ficoms
sub
orb
sub
or
mov
loop
out
mov
ficoms
jmp
and
add
or
dec
je
pop
push
jle
pop
jmp
hlt
sbb
xor
mov
std
xchg
and
ss
jge
mov
pop
fcoms
and
pop
cmpsb
orl
ret
pusha
inc
test
adc
pop
jns
mov
cld
ret
sbb
test
xor
or
mov
stos
jg
aas
xchg
jge
push
mov
sub
rclb
sahf
adc
cmp
mov
addr16
cmc
add
cltd
jne
std
adc
mov
aas
push
sub
mov
mov
xchg
mov
cmp
pop
fidivrs
xchg
mov
push
lea
push
jne
andl
xor
pop
mov
scas
mov
lcall
add
in
repnz
shlb
mov
push
test
and
and
jl
or
sbb
inc
rorb
or
adc
inc
test
les
xchg
mov
movsl
mov
cli
mov
add
rorb
std
pusha
and
jge
movsl
sub
bound
and
mov
mov
mov
dec
or
sbb
mov
outsb
test
sbb
mov
sbb
repnz
mov
adc
lods
or
pop
shr
cmpsb
push
push
dec
pextrw
dec
sbb
rorb
loope
test
pop
mov
mov
cltd
lret
push
stc
repnz
nop
jae
popa
loopne
xor
dec
inc
sub
and
loop
loopne
out
loopne
lods
loop
insb
mov
push
add
push
xchg
mov
push
xchg
pop
sbb
fstpl
xchg
push
outsl
das
inc
das
mov
cmp
cli
mov
aam
into
pop
sahf
aam
test
sbb
jmp
cmc
or
xchg
pop
mov
fisubrs
rcll
jmp
adc
aaa
sub
mov
roll
sub
rclb
xchg
pop
inc
ror
mov
push
mov
insb
push
adc
jne
add
push
outsb
cmp
mov
pop
cli
add
inc
ljmp
imul
cmp
out
mov
pop
mov
jno
out
jecxz
cmp
je
mov
cmpsl
push
js
inc
sub
scas
push
daa
sub
movsl
xchg
call
push
inc
scas
pop
mov
negb
dec
sbb
mov
or
mov
jo
xor
add
inc
loopne
mov
add
xchg
and
shrl
sub
out
dec
ss
outsl
test
enter
out
das
inc
inc
fistps
sub
jg
inc
out
jp
or
and
jecxz
pushf
mulb
incl
fcomps
cmp
adc
jb
jg
cld
sbb
fldcw
xor
xor
leave
sti
jno
insb
cld
xchg
pop
xchg
fwait
pushf
lahf
int
movsl
movsl
cmpsl
dec
pop
mov
lods
imul
sar
incl
out
jb
inc
stc
or
outsl
pop
adc
sub
add
sub
pop
push
push
jmp
out
push
addb
jle
mov
daa
jp
lret
cmp
and
lds
xchg
jne
in
and
inc
add
sbb
test
js
or
xchg
mov
sub
movsb
fstps
loope
mov
call
push
into
inc
rcll
arpl
mov
cwtl
nop
dec
inc
and
int3
rolb
fwait
clc
lcall
repz
bound
adc
stos
lock
jl
jb
test
and
ljmp
imul
pop
lea
rcl
mov
pop
mov
cli
inc
dec
push
push
lock
or
repz
adc
pop
push
bnd
outsb
push
xchg
rorb
lcall
test
sub
fdivrl
arpl
mov
or
imul
roll
pop
popa
xor
mov
pop
cld
adc
push
xlat
daa
cld
nop
add
into
inc
scas
clc
add
lcall
in
clc
popf
push
jle
add
pop
pop
lea
sbb
and
data16
adc
pop
loopne
shrl
nop
mov
test
adc
test
dec
test
decl
sbb
inc
dec
or
xor
or
pop
popa
xchg
icebp
jbe
or
lea
lahf
mov
push
cs
add
ljmp
shlb
inc
xor
decl
add
xchg
xor
mov
jg
imul
sbb
inc
push
out
scas
icebp
sub
mov
scas
addr16
jmp
sahf
ret
or
xchg
mov
lock
inc
xor
or
aad
sbb
sbb
mov
dec
out
imul
aad
mov
into
lods
mov
cmc
jl
outsl
insb
mov
pop
fildll
fs
cmp
jecxz
or
add
xlat
lret
lea
push
sub
xchg
jp
inc
sbb
lcall
or
mov
subl
lea
xor
and
jge
mov
mov
outsl
shrb
shll
inc
sub
lea
in
adcl
imul
fs
outsb
and
shll
push
mov
fistpl
fcoml
popf
das
rcrl
or
mov
mov
sbb
scas
js
dec
pusha
stc
dec
and
mov
aad
lods
xchg
mov
aas
ljmp
jle
pop
sub
dec
outsl
xor
and
mov
xchg
divb
leave
add
out
sub
aad
pusha
sub
mov
rolb
dec
mov
outsl
lods
push
and
inc
es
adc
stos
int
xor
hlt
popf
xchg
xchg
mov
add
das
inc
jp
xchg
add
ret
dec
cmp
pop
cs
nop
sub
cmp
jecxz
inc
cmc
push
push
js
jg
test
cwtl
subl
ret
push
mov
or
pusha
jge
or
mov
test
xor
sub
mov
mov
and
add
cmc
cmpsl
mov
mov
inc
inc
push
adc
test
push
jg
shll
jg
or
scas
popf
jns
xchg
adc
repz
cs
mov
loope
loop
xorl
push
bound
jbe
lcall
shrl
pop
ja
jl
aaa
mov
cli
and
std
fisttpl
iret
movsb
sub
or
dec
test
pushf
xchg
mov
cs
scas
fstpt
orb
jmp
or
dec
dec
add
cli
stos
add
decl
jp
ret
and
inc
adc
out
cmpsl
cli
jne
cmc
cli
aaa
mov
ljmp
cmp
inc
push
adc
sub
add
inc
movsb
in
movl
pop
jge
in
cwtl
jo
xchg
int3
mov
mulb
rcrl
mov
sub
in
fwait
sbb
jns
out
pop
xor
mov
xchg
add
outsl
fsubl
testb
mov
xchg
enter
xlat
xor
pop
fsubp
test
sbb
xchg
ret
sub
shlb
fisttpll
xchg
data16
mov
adc
decb
lret
mov
mov
popf
imul
add
add
pop
pusha
test
inc
std
pushf
clc
and
xor
cmp
mov
jp
fstp
clc
popl
and
or
and
pop
mov
adc
push
or
mov
adc
pop
rol
std
aaa
clc
pop
and
fcoms
pop
call
push
daa
mov
xchg
mov
mov
add
mov
jg
lds
jg
cmc
sbb
add
inc
fimuls
jae
and
filds
rcrl
push
push
mov
lods
movsl
sub
xor
jne
add
sub
out
addb
lcall
pusha
xorl
mov
mov
movsl
or
mov
call
call
jl
xor
inc
mov
pop
fldenv
pop
adc
xor
bound
mov
js
mov
out
scas
xchg
push
and
std
pop
push
int3
ss
dec
push
pop
stos
sbb
rcrb
add
in
ds
outsl
push
adc
jmp
cmc
sar
dec
imul
mov
mov
or
push
inc
in
ret
ret
inc
xor
mov
rolb
sbb
push
adc
shll
mov
mov
sub
push
rol
or
loope
cli
push
jg
xlat
dec
outsl
js
xchg
adc
int
out
fs
inc
inc
hlt
pop
and
add
iret
ljmp
xor
pop
inc
mov
mul
dec
push
paddb
jg
lds
pop
mov
jno
push
push
ret
jge
pop
jbe
cmpsb
pop
mov
and
add
hlt
xchg
mov
mov
xchg
andb
xchg
mov
or
rcrl
ja
mov
into
fsubr
in
and
mov
test
xchg
add
or
jg
and
add
xor
test
mov
pop
notb
shlb
mov
test
cmpsl
xor
dec
or
rcrb
test
outsl
roll
fwait
push
fistps
aam
test
sbb
bound
push
nop
add
sub
sub
pop
insl
mov
xchg
add
inc
mov
cmc
pop
or
inc
aas
dec
imul
xchg
pop
cli
adc
add
cmpsl
lock
mov
adc
add
xchg
pop
out
inc
mov
fsts
out
add
testl
das
aad
dec
flds
into
add
adc
ljmp
fdivl
inc
push
pop
mov
push
sbb
jns
in
loopne
pop
xchg
roll
sub
test
out
inc
loope
hlt
jp
xchg
xor
xchg
adc
fisttpl
sub
inc
clc
int
fidivrs
and
lcall
fucomip
push
or
adc
in
add
sub
std
fildll
dec
mov
and
cmp
push
inc
imul
and
mov
sbb
lock
jle
inc
movsl
nop
inc
push
mov
jb
cmp
xor
outsb
jno
addr16
mov
pop
mov
lahf
sbb
inc
sbb
hlt
add
xchg
mov
xchg
loope
dec
das
in
pusha
cmpsl
cmpsl
cmp
daa
add
ljmp
mov
pushf
jb
pushl
popa
inc
test
ljmp
mov
mov
addr16
inc
jg
loope
fisttps
insl
or
sub
inc
std
xchg
decb
xor
push
or
sub
push
pop
xchg
filds
cld
mov
jne
jp
adc
jl
pop
aas
jb
xor
outsb
icebp
jno
in
xchg
fnstcw
outsl
addb
mov
cmp
shrb
and
into
xchg
pop
cld
ljmp
adc
mov
dec
addr16
int
cld
mov
shll
adc
ret
mov
shl
and
fldt
lcall
and
leave
push
adc
clc
outsl
cld
pop
popa
outsb
inc
add
test
and
in
mov
sub
lcall
les
into
int
jecxz
mov
insb
lcall
xchg
imul
ror
add
in
and
incb
and
or
arpl
int
sbb
push
cmp
sbb
xchg
pop
adcl
stos
repz
and
mov
jbe
dec
dec
inc
cld
push
cmc
pop
and
hlt
mov
jle
mov
pop
mov
fadds
jmp
pushf
adc
jge
rcl
lea
mov
and
cltd
cmc
sti
cmp
es
mov
clc
ret
pop
push
insb
aad
push
mov
adc
adc
and
pusha
push
inc
rolb
stc
mov
or
push
scas
push
bound
add
push
mov
test
lock
mov
sti
xchg
adc
jb
inc
fisttps
push
or
sar
pop
mov
sbbb
pop
mov
jae
push
inc
adc
mov
inc
popa
imul
or
out
loop
out
jns
push
adc
notl
push
nop
fwait
out
cwtl
adc
dec
rcll
fcmovbe
lea
in
push
push
test
xor
mov
movsl
jl
sti
ljmp
insb
jmp
pop
pop
push
fsubs
and
popf
test
jg
fwait
js
cmc
inc
mov
mov
sbb
adc
pop
dec
sti
scas
icebp
lret
call
es
cmp
pop
push
cmp
mov
jmp
dec
xor
push
mov
leave
mov
or
inc
lret
pop
jl
push
cwtl
cltd
add
int
andb
mov
mov
hlt
and
scas
xchg
out
sub
int3
divb
add
add
mov
movsl
pop
sbb
push
movsl
fcmovnbe
insl
inc
or
insb
vaddss
ret
fisttps
rep
icebp
fisubrs
ret
and
fisttps
into
push
fcomi
jo
mov
cmp
out
or
mov
jecxz
xchg
stc
sbb
jne
pop
enter
or
out
stos
add
cs
mov
jg
xor
sub
mov
dec
cltd
push
inc
stos
test
paddusb
mov
pop
mov
fucomp
push
mov
cmp
pop
pop
in
pop
adc
push
xor
xchg
push
daa
jne
inc
add
dec
std
adc
fwait
cmp
mov
in
scas
add
test
imul
sbb
out
xchg
imul
test
mov
stos
ja
jbe
mov
cmp
es
repnz
mov
in
add
fcmovnb
mov
out
push
pop
jp
and
decl
shlb
rorb
push
xchg
jo
inc
add
movsl
dec
xlat
shrb
inc
cmp
adc
dec
andl
xor
or
int
mov
push
cli
mov
inc
or
in
pusha
mov
and
pop
roll
mov
imul
xlat
xor
xchg
daa
sbb
popa
idivl
sti
sbb
les
sub
shlb
xchg
imull
inc
leave
or
jecxz
adc
mov
pop
dec
sbb
shrb
insl
pop
cmp
test
cmp
sbb
sti
sbb
mov
or
imulb
jle
sbb
sbb
mov
adc
dec
outsb
fildl
ljmp
xchg
test
adc
outsl
push
adc
inc
dec
shlb
xchg
push
mov
jg
and
lret
ja
cmp
les
push
out
outsl
xor
fistpll
pop
ret
bound
cmp
adc
sub
fwait
cli
xor
rcr
mov
pop
dec
faddl
sbb
mov
jp
jmp
cmpsb
cmc
cwtl
int3
lahf
rcrb
rcrl
insl
sub
out
les
imul
add
pop
mov
mov
out
inc
jbe
les
pop
outsl
xor
sti
ljmp
sbbl
ficoms
xor
jl
inc
cltd
jmp
mov
add
or
mov
xchg
fbstp
inc
ds
jp
sub
daa
xor
xchg
xchg
dec
cmp
pop
push
sbb
cmpsl
je
dec
loopne
movsl
das
adc
clc
aas
or
push
call
pop
mov
push
lahf
mov
pop
outsb
sar
in
std
clc
sbb
dec
leave
or
jg
incl
imul
sub
inc
jns
jne
movsb
loop
push
jmp
pop
ds
imul
lret
push
jp
sbb
sbb
inc
jl
and
movsl
jp
mov
out
adc
sub
xchg
int3
movsl
push
push
inc
lret
cmp
jmp
dec
xchg
add
and
and
jge
or
mov
sub
sbbl
mov
jmp
inc
aam
or
sbbb
pop
stc
jg
ss
or
aaa
ret
sbb
pop
clc
lcall
lock
sbb
add
mov
or
arpl
fisubl
dec
adc
xorl
stos
loopne
addr16
add
cs
sbb
in
js
fmulp
and
xlat
pushl
shlb
in
or
jne
lea
lods
das
jl
clc
cmpsl
loopne
xor
mov
popf
dec
inc
fidivl
sbb
movsb
mov
inc
aas
movsl
cmp
les
xchg
aas
pusha
mov
lcall
xchg
xchg
pop
js
data16
push
mov
push
add
lea
mov
add
jbe
or
inc
adc
nop
push
fistpll
aas
ljmp
idiv
testb
shrb
fisttpll
lahf
stc
sub
xor
or
pop
es
xchg
jb
mov
aaa
xchg
mov
jns
and
xchg
add
pop
fcmovu
dec
mov
movsl
cmc
dec
mov
and
sbb
incb
faddl
cmp
out
mov
jge
sbb
inc
insl
popa
mov
cmp
inc
loopne
push
pusha
pop
push
loop
inc
cmpl
push
push
add
in
xchg
mov
pop
pop
xchg
leave
les
iret
popf
add
and
int3
ret
icebp
dec
mov
fidivl
cld
sbb
aam
dec
sub
insl
aam
lods
lea
or
sub
shrb
ret
mov
jbe
repnz
js
leave
mov
popl
pop
jb
icebp
in
or
jp
or
std
inc
jl
pop
stos
adc
push
adc
sub
xchg
xor
add
je
es
aaa
enter
ljmp
jecxz
fisubs
jge
cmp
push
aaa
xor
xchg
popa
popf
jg
jmp
xlat
lret
mov
mov
insl
sbb
les
inc
fwait
sbb
mov
das
sbb
and
pop
jle
mov
inc
ret
pop
jl
xchg
add
mov
roll
or
inc
aas
lock
mov
and
sbb
mov
push
mov
cmp
cmp
jle
mov
and
movsb
and
sbb
mov
icebp
ret
mov
inc
fs
jo
inc
filds
mov
sti
mov
or
hlt
in
xchg
adc
jne
xor
sub
retw
xor
fcmovnu
das
cmpsl
inc
jge
and
sub
add
mov
movsl
outsl
inc
hlt
aas
fldcw
jg
mov
loope
dec
mov
mov
sbb
mov
int3
dec
sub
out
imulb
or
or
inc
mov
sbb
pop
mov
repz
test
cwtl
sub
cs
or
jl
xor
addb
call
cmp
stos
xchg
inc
xchg
cli
aaa
outsb
push
test
jg
sarl
out
repnz
adc
imul
subb
cmp
and
pop
fdivrl
ljmp
inc
cmp
das
xchg
dec
pop
sbb
mov
push
add
icebp
das
mov
fcomi
mov
cs
roll
pop
mov
mov
add
movsl
outsl
adc
inc
or
and
push
insb
mov
std
shr
mov
inc
adcb
shl
dec
push
adc
xor
jo
cltd
inc
pushf
out
sahf
mov
bound
setl
push
xchg
push
js
mov
mov
out
xor
cli
cmp
and
xchg
aam
test
mov
aad
or
call
lods
stos
xor
pop
into
dec
cmp
xchg
lds
jno
pop
xor
cmp
adc
into
in
mov
push
out
into
mov
xchg
xchg
pusha
xor
xchg
inc
stc
scas
push
rcr
jle
sub
mov
call
dec
mov
popa
sbbl
lcall
mov
js
insl
cmp
data16
test
roll
sbb
in
adc
jmp
mov
xor
dec
push
cmc
outsl
pop
inc
andb
ficompl
mov
jge
or
mov
testl
dec
sub
add
mov
lahf
dec
fsubs
testb
sub
out
loop
ret
cltd
inc
or
xchg
imul
sbb
xor
pop
dec
cs
fisttpll
lods
pop
clc
xorl
fistpll
jge
cmpb
mov
mov
mov
mov
jb
xchg
outsl
mov
and
aaa
push
pop
sbb
lock
mul
sub
or
jae
rcl
sbb
add
cmp
mov
and
mov
in
adc
scas
call
icebp
movb
xor
pop
dec
xchg
outsb
das
sub
sbb
sub
xor
cmp
mov
jmp
jle
lock
adc
iret
fwait
jo
jb
mov
nop
pop
cli
pop
mov
mov
and
xor
or
imul
insl
addl
outsl
add
stos
addl
dec
cld
add
fidivs
add
sbb
int
imul
and
push
inc
out
mov
xor
push
ds
test
mov
pushf
or
push
dec
mov
into
loope
pushf
jmp
cmpsb
int3
adc
xor
clc
cltd
pop
push
jns
fmuls
rcr
andb
out
cmc
mov
dec
stos
rcrl
call
pop
jno
xor
lahf
cmpsl
dec
arpl
push
dec
pop
shlb
add
int
and
xchg
jp
mov
pop
sti
shlb
fwait
rorl
pushf
push
call
mov
ja
repnz
and
popf
pop
aaa
lock
rcrl
xchg
xchg
insb
mov
outsb
dec
lahf
ljmp
cmc
xchg
ss
movsl
inc
xlat
loope
rorl
adc
sarl
pushw
ja
inc
mov
add
xor
clc
inc
testb
les
call
xor
sub
add
pop
inc
mov
hlt
aam
bound
mov
xchg
outsl
cmc
mov
aam
mov
mov
push
xchg
mov
aam
xor
stos
lret
mov
and
push
arpl
nop
bound
lcall
cld
test
out
lods
pop
call
sbb
mov
sbb
fcoms
cmp
inc
and
leave
mov
cmp
mov
ss
push
aad
dec
cmpsb
pop
mov
loopne
das
mov
repz
jmp
ja
cmpsb
dec
andl
jp
jp
pop
gs
call
gs
filds
add
test
out
rcr
xor
ljmp
inc
in
pushf
xor
fsts
into
mov
test
imul
pop
pop
cmp
outsl
jg
push
ret
je
sbb
mov
test
sbb
fimull
fs
push
and
loope
es
std
dec
test
rcrl
int3
ja
inc
enter
pop
push
sbb
leave
mov
dec
sbb
outsl
push
xlat
je
pop
push
pop
out
enter
mov
cli
loopne
cmova
xor
sub
repz
loopne
mov
add
cmp
test
sub
push
push
adc
mov
push
lea
jp
cltd
dec
jb
push
daa
das
push
sub
insl
int
xor
test
out
outsb
fcoml
pop
and
push
lock
movsl
repz
fistps
lahf
pop
mov
out
xor
mov
xor
fnstenv
add
mov
cs
pushf
adc
adc
push
xchg
or
cmp
call
mov
xor
aaa
pop
bound
pop
xchg
loopne
pop
add
fs
mov
ds
mov
mov
aad
mov
xchg
push
lods
mov
and
dec
movsl
fmull
fnstsw
test
push
push
test
rorb
lret
xchg
ret
in
movl
mov
call
in
mov
aam
pop
iret
jno
mov
pop
adc
mov
insb
pop
ljmp
pop
mov
and
ret
mov
push
adc
add
cmp
or
jns
pop
xor
icebp
mov
pop
mov
dec
mov
xor
cs
pop
test
push
imul
mov
dec
in
mov
xorl
push
lret
lea
push
ljmp
mov
and
sub
subb
and
flds
decl
pop
sbb
mov
and
out
in
les
jbe
lds
loopne
add
push
daa
inc
aad
dec
loop
push
or
jp
xchg
cmc
nop
fdivrs
icebp
test
inc
adc
cmpsb
in
xchg
clc
or
das
ja
mov
repz
pop
jae
push
test
jle
mov
xor
xor
push
pop
out
leave
je
xchg
mov
test
push
test
icebp
pop
jo
lods
addr16
inc
add
cmc
movb
cmp
cld
adc
scas
popf
push
bound
add
push
lods
adc
cli
aaa
outsb
icebp
push
sbbb
inc
pop
lods
or
stos
mov
movsb
cmp
clc
scas
mov
jb
push
add
mov
mov
push
std
sbb
mov
and
ja
dec
add
repz
push
bound
mov
xor
repnz
test
mov
adc
push
aas
adc
or
sbb
das
incl
or
adc
or
add
or
xchg
and
push
adc
adc
and
adc
inc
and
and
outsl
out
in
or
dec
or
or
mov
adc
mov
inc
fucomi
jmp
mov
and
and
adc
and
inc
add
mov
insl
mov
cmp
or
inc
inc
push
or
add
and
jne
lods
add
push
nop
add
inc
push
pop
adc
fldt
dec
and
sbb
sbb
in
lods
imul
nop
test
adc
scas
insl
lods
aam
and
xchg
lahf
pop
imul
mov
jae
mov
adc
jno
adc
aad
cmp
or
push
int
shlb
ficomps
mov
addb
mov
in
add
insb
insl
imul
imul
pop
imul
add
mov
mov
fldt
push
dec
scas
and
or
xor
pop
nop
xchg
push
nop
pop
imul
inc
mov
pop
jae
imul
or
shrb
sub
stos
and
inc
inc
lods
mov
mov
inc
inc
and
sub
or
mov
adc
inc
inc
es
xchg
pop
mov
add
adc
pop
mov
es
or
rcrl
or
mov
aaa
pop
lret
sbb
xlat
fisubrl
or
iret
mov
pop
inc
add
add
adc
rorb
sbb
push
pop
inc
imul
mov
bound
jg
or
sbb
xchg
imul
fistl
scas
dec
add
sbb
push
nop
add
lods
fstpl
mov
push
push
or
stc
xor
pop
pop
push
or
or
test
sbb
sub
and
mov
call
cmp
inc
pop
imul
xchg
pop
rorb
push
xchg
mov
popf
or
push
lcall
xor
cwtl
int
or
subb
push
mov
stos
fsubrs
jne
adc
sbb
or
push
xlat
jo
popl
lret
mov
jb
push
mov
cmc
out
push
dec
icebp
xor
pop
jae
xor
pop
jl
pop
jecxz
sub
das
ja
lods
jns
inc
imul
pushf
ss
and
andb
popa
dec
sbb
test
aaa
or
mov
js
and
dec
dec
inc
mov
test
add
mov
rorl
adc
lods
aam
mov
gs
inc
jae
push
push
and
int
sbb
pushf
mov
mov
inc
imul
add
cmp
push
add
arpl
movsl
cmp
add
aam
fistpl
in
aam
pop
shll
lods
xchg
test
lds
mov
and
jno
cltd
sbb
sub
inc
jp
dec
cltd
sbb
int
cli
xchg
bound
lds
pop
xchg
or
andb
inc
in
movsb
and
push
or
xchg
add
or
inc
add
jo
sarl
and
lcall
rcrb
data16
jl
mov
push
sub
roll
push
sub
or
lods
mov
or
pop
sub
sub
or
or
adc
inc
adc
mov
and
addl
or
or
call
shlb
push
add
and
inc
sbb
outsl
push
mov
add
dec
inc
jp
push
inc
or
mov
outsb
inc
adc
fidivl
sbb
push
and
or
sub
sbb
rcl
add
lret
insb
bound
push
add
and
adcb
stos
adc
add
lods
sub
out
pop
push
and
dec
and
mov
mov
rorl
test
lods
push
in
or
mov
push
adc
add
mov
sbb
push
mov
xorb
push
or
add
xchg
sti
lods
mov
fildl
and
testb
pop
nop
or
adc
mov
jo
sub
dec
adc
leave
mov
add
push
lock
xlat
and
pop
addb
pop
push
je
lods
add
out
rcl
loope
add
add
or
pop
mov
test
ss
int
or
sbbb
dec
mov
outsl
sub
and
adc
dec
insb
int3
rcr
subb
sbb
shlb
mov
xlat
cmp
inc
je
and
and
rorl
jae
push
call
iret
mov
pop
fistpl
adc
pusha
imul
adc
adc
mov
insb
add
xlat
or
xchg
add
jge,pn
inc
imul
or
or
and
test
rcrb
mov
outsl
or
add
pop
jne
add
mov
sti
das
add
sub
add
cmp
out
inc
or
out
xchg
and
pop
xchg
pop
add
pop
subb
call
mov
add
lods
mov
pop
jnp
test
imul
inc
mov
cmp
add
ja
addl
shrb
xchg
mov
or
push
fistpl
xor
mov
push
inc
fistpl
inc
jle
cmp
dec
pop
mov
imul
rcrb
sub
sub
add
sub
mov
rcrl
and
les
cmp
pop
shrl
xor
xor
adc
scas
pusha
push
fstps
xchg
or
rorl
add
cmp
mov
push
pop
inc
adc
push
push
lods
cmp
and
inc
imul
sub
jae
setbe
adc
add
inc
lods
mov
aaa
insl
mov
or
pop
imul
mov
inc
adc
pop
imul
shll
leave
or
push
sti
inc
icebp
pop
fcmovbe
pop
jmp
sbbb
inc
or
aam
lods
adc
scas
pusha
ficompl
mov
or
inc
cmp
test
js
imul
fisubl
jo
dec
inc
xor
push
xchg
mov
sbb
sbb
sub
add
lods
cltd
negl
in
push
xchg
ss
xor
jno
out
mov
loop
xchg
lcall
orb
cs
mov
sbbb
and
stos
xchg
push
adc
cmp
and
xor
imul
ja
add
or
xchg
ret
cmp
scas
adc
movl
push
sahf
rcl
pop
imul
sub
and
ljmp
mov
jp
jo
sbb
or
je
push
lods
loope
jb
ds
inc
cli
inc
pop
pushf
ds
shll
mov
xchg
and
cmp
lcall
out
cs
jnp
inc
pop
js
mov
mov
mov
jno
mov
pop
jmp
jne
sbb
adc
or
fdivl
lcall
add
xchg
fstpt
dec
jae
loopne
pop
test
pop
addr16
ds
mov
mov
aas
xor
add
inc
outsl
insl
jo
jb
push
je
imul
incl
je
outsl
fs
gs
popa
outsb
fs
outsl
jb
outsl
push
popa
je
dec
popa
insl
gs
jne
xor
arpl
push
jnp
gs
dec
fs
outsb
push
adc
imul
inc
imul
div
jnp
push
push
push
imul
jae
or
jg
fmuls
dec
outsb
outsw
adc
fnsave
xchg
push
insb
insl
lds
std
in
insb
pusha
push
push
pop
outsl
ja
inc
imul
push
sbb
pop
insl
cmp
dec
mov
fiadds
aaa
xor
popa
addr16
in
in
or
nop
sbb
jae
out
xchg
xchg
fstl
push
outsl
and
inc
insb
addr16
dec
cld
jbe
sub
push
outsl
popa
jae
inc
inc
ret
lock
in
inc
dec
add
add
mov
loopne
psubusb
mov
inc
pop
jge
add
push
mov
adc
adc
add
or
outsb
adc
push
add
add
xchg
add
sub
push
add
mov
pop
dec
cmp
addb
movsb
push
imulb
add
leave
out
ret
or
je
aam
pop
into
xchg
mov
pusha
jb,pn
jge
insl
or
popa
or
jbe
mov
cs
sbb
leave
mov
and
dec
add
shrb
cmp
arpl
inc
jo
test
add
mov
nop
daa
inc
inc
ja
sub
adc
mov
sbb
xchg
or
sti
nop
dec
data16
add
adc
xchg
add
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sub
add
push
add
add
add
add
add
add
add
add
add
or
add
add
in
rolb
sub
add
popa
pop
add
addb
addb
add
or
add
les
add
add
add
add
rolb
addb
add
or
add
add
add
pop
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
or
add
add
add
aas
add
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
arpl
popa
add
add
add
push
add
and
dec
add
jb
add
and
dec
add
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
and
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
add
add
jne
imul
dec
add
jb
and
push
add
imul
and
dec
add
add
add
and
inc
add
add
jns
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jae
je
jns
and
inc
add
insl
add
jns
and
push
add
imul
dec
add
outsb
add
and
xor
cmp
cmp
cmp
sub
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jb
jb
jns
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
jae
and
push
add
imul
and
inc
add
add
jae
and
push
add
outsb
add
add
add
imul
popa
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
test
add
inc
inc
and
add
inc
push
dec
and
push
add
fs
dec
andb
mov
addb
push
nop
inc
add
or
inc
and
and
adc
inc
orb
inc
adc
adc
and
add
or
inc
inc
add
xor
adc
and
orb
les
adc
adc
dec
inc
sub
sub
add
or
inc
sub
and
xor
or
inc
inc
addb
inc
adc
xor
xor
sub
add
and
inc
test
or
or
dec
inc
nop
les
and
adc
andb
adc
les
and
mov
and
mov
and
push
xor
inc
inc
adc
mov
and
les
or
and
add
les
and
adc
or
inc
adc
test
adc
inc
or
or
mov
or
dec
add
inc
inc
add
pusha
adc
mov
and
adc
and
dec
and
adc
adc
or
test
inc
and
adc
nop
adc
push
inc
mov
pusha
addb
adc
andb
sub
adc
adc
xorb
mov
adc
nop
and
or
and
and
sub
or
add
and
dec
add
dec
pusha
inc
mov
adc
inc
mov
adc
dec
and
nop
adc
add
adcb
test
pusha
inc
and
sub
les
addb
dec
and
xor
nop
or
and
push
and
and
add
adc
add
or
pusha
or
adc
or
add
test
adc
mov
adc
inc
xor
adc
dec
adc
mov
inc
inc
and
or
les
adc
test
and
or
and
nop
subb
and
mov
or
inc
orb
sub
inc
or
or
dec
and
adc
add
adc
and
add
adc
add
test
nop
and
or
and
adcb
test
inc
dec
adc
addb
adc
andb
add
pusha
dec
mov
test
orb
inc
les
les
add
dec
add
adc
mov
and
add
xor
or
and
or
dec
dec
inc
test
and
inc
les
inc
push
addb
pusha
addb
inc
dec
xor
adc
and
adc
and
inc
addb
mov
pusha
xor
adc
dec
pusha
push
mov
adc
nop
and
push
dec
add
test
test
test
adc
andb
or
and
inc
inc
adc
and
les
and
nop
pusha
and
les
inc
adc
nop
inc
or
inc
dec
add
or
or
inc
inc
and
add
add
adc
inc
or
inc
add
addb
and
adc
test
adc
les
adc
or
add
test
add
cwtl
add
add
add
add
add
add
add
add
incl
lret
std
out
add
scas
add
incb
jmp
out
add
jne
add
incl
imul
add
incl
sti
stc
scas
add
scas
add
scas
add
scas
add
icebp
incb
jg
mov
add
mov
add
out
add
out
add
repz
add
jns
add
jg
add
jne
add
mov
add
ja
add
scas
add
idiv
add
jae
add
ja
add
incl
lret
jnp
add
stc
scas
add
jne
add
scas
add
sti
incb
imul
dec
jnp
add
out
add
incl
jnp
incl
dec
jae
add
jno
add
std
incl
jg
out
add
jne
add
sti
mov
add
jno
add
jae
add
jnp
add
cmc
out
add
incb
outsl
icebp
incl
dec
jg
add
ja
add
out
add
scas
add
stc
mov
add
out
add
std
incb
pop
jne
add
out
add
scas
add
scas
add
repz
add
idivl
add
repz
add
scas
add
cmc
mov
add
jge
add
jns
add
incl
jg
mov
add
out
add
jno
add
out
add
incb
sti
jns
add
jno
add
ljmp
add
scas
add
imul
add
jno
add
jne
add
mov
add
mov
add
incb
out
add
scas
add
incl
out
mov
add
incl
lret
imull
add
mov
add
incb
dec
jno
add
repz
add
mov
add
incl
fstpt
add
out
add
out
add
jns
add
jns
add
cmc
scas
add
jg
add
stc
out
add
out
add
std
scas
add
jg
add
ja
add
incl
out
jae
add
mov
add
stc
mov
add
jg
add
repz
add
scas
add
icebp
mov
add
out
add
out
add
incl
outsl
jae
add
jno
add
scas
add
std
mov
add
mov
add
incl
pop
stc
scas
add
std
mov
add
jne
add
jg
add
scas
add
mov
add
std
out
add
sti
mov
add
stc
mov
add
sti
mov
add
jne
add
imull
add
idiv
add
incl
mov
add
idivl
add
jg
add
jns
add
stc
mov
add
out
add
jge
add
ljmp
add
scas
add
incb
imul
std
incl
jmp
incb
sti
ja
add
icebp
out
add
imul
add
out
add
incb
jmp
incb
fbstp
add
mov
add
scas
add
incl
jmp
scas
add
mov
add
scas
add
mov
add
jg
add
std
incl
sti
idivl
add
ja
add
scas
add
scas
add
incb
pushl
add
out
add
mov
add
jno
add
ja
add
jno
add
scas
add
imul
add
cmc
mov
add
jne
add
incb
out
cmc
mov
add
scas
add
out
add
out
add
incb
stc
mov
add
stc
incb
pop
cmc
incb
iret
std
mov
add
jns
add
cmc
out
add
icebp
incl
jmp
incb
outsl
std
incb
pop
jnp
add
out
add
sti
incb
outsl
jne
add
out
add
cmc
scas
add
mov
add
mov
add
incl
lret
mov
add
jge
add
scas
add
jne
add
out
add
test
or
cmp
testb
add
in
loop
or
and
fnstcw
leave
push
push
or
test
and
adc
push
fucom
js
dec
sbb
arpl
not
sub
add
dec
pop
xorb
xchg
shll
inc
lods
loopne
xor
push
sbb
into
gs
cltd
sbb
jo
cmp
ffree
jge
shrl
sahf
jp
pop
fsts
or
loope
and
cltd
and
dec
fnsave
jg
mov
fimull
mov
std
flds
daa
outsl
icebp
push
in
adc
lds
sbb
fsub
cltd
iret
mov
imul
inc
jg
ret
add
call
sub
push
jb
shl
scas
imul
and
fs
ja
sbb
xchg
xchg
lcall
lea
xchg
test
inc
scas
sbb
cltd
inc
daa
fcomps
xor
xor
nop
cmpsb
xor
sub
jl
fsubp
movsl
les
scas
sbb
mov
das
jo
orb
mov
push
pop
jp,pn
xor
jp
adc
push
push
jmp
push
call
shll
mov
inc
mov
mov
add
add
jecxz
inc
inc
je
mov
stos
mov
pop
push
xor
jp
dec
movsl
dec
insl
sub
jp
mov
and
cmpsl
sarl
mov
call
inc
push
call
mov
ja
jnp
inc
jo
push
mov
int
push
shrl
adc
xor
dec
sbb
sub
int3
in
outsl
rorb
femms
xlat
in
ss
or
pop
repnz
xchg
cwtl
in
fwait
mov
sub
lret
pop
jmp
movsb
xchg
mov
sub
cmpsl
outsb
scas
and
dec
mov
sbb
movswl
jno
mov
ret
fs
push
adc
sub
cli
push
or
les
push
dec
insb
sbb
mov
outsl
cmp
push
or
dec
shll
cmp
lds
ret
jns
test
mov
fmull
cld
jno
rcrb
add
repz
jecxz
lret
scas
jo
mov
sbb
push
cmp
adc
pop
data16
dec
sbb
outsl
xor
or
jae
mov
xchg
imul
fldcw
shlb
pop
push
jb
sub
addr16
add
or
int3
or
fsubp
mov
fildl
enter
add
jns
inc
xchg
aad
pop
fstps
cwtl
js
and
add
frstor
mov
add
adc
add
in
into
add
sbb
iret
add
sub
add
ss
add
inc
iret
add
push
iret
add
fs
add
jb
add
add
add
or
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
jae
inc
inc
