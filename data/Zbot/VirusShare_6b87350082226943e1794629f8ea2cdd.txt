sti
mov
and
mov
inc
xchg
adc
mov
in
xorb
inc
dec
jb
enter
ret
push
lods
jle
in
fwait
mov
dec
je
push
and
lcall
xlat
out
xor
and
mov
iret
push
jecxz
adc
iret
and
ljmp
adc
pop
and
cmc
mov
jbe
inc
sbb
jg
sub
jae
imul
adc
es
inc
fsubrl
cs
mov
xor
lcall
loope
roll
ljmp
inc
iret
repz
and
xor
sub
push
outsl
into
fstl
outsb
sti
pushl
pop
insl
mov
aam
sbb
adc
hlt
bound
xor
nop
into
xchg
mov
mov
ljmp
mov
jl
pushf
mov
mov
xor
out
cmp
in
pop
cmp
adc
stos
mov
add
loopne
nop
add
add
call
jl
jl
cmp
jge
cmp
imul
jo
or
aas
push
cmpsb
xchg
decl
fcmovne
test
pop
in
ljmp
push
sti
insl
xor
ss
lcall
cmp
inc
in
sti
push
push
mov
mov
add
lret
or
xor
js
stc
sti
stc
mov
loopne
es
inc
add
mov
mov
mov
dec
mov
sbb
cs
jmp
sbb
pop
jmp
sub
xor
fldt
ret
mov
mov
stos
and
decl
xorl
fisttpll
clc
imul
push
and
dec
mov
mov
pop
mov
dec
or
iret
cmc
add
mov
adc
xchg
or
dec
ljmp
sbbb
inc
adc
mov
sbb
decb
sbb
in
outsl
or
mov
mov
test
int
jno
scas
out
push
push
mov
fcmovnu
fldenv
paddusw
xor
dec
ret
xor
jge
dec
inc
and
sub
aas
lods
sub
cmp
jne
jne
xor
mov
loope
test
push
test
std
pop
das
out
mov
add
cmp
mov
negl
jmp
popa
sbb
push
push
add
add
mov
inc
ret
call
push
cmp
mov
xlat
mov
in
in
add
pop
xor
stos
add
imul
jmp
addl
jmp
rorb
std
jne
dec
jl
nop
es
out
in
test
jb
test
xor
loope
sbb
hlt
stos
out
leave
ret
sub
lcall
out
dec
bound
push
mov
addb
xor
sahf
int3
push
cwtl
or
ljmp
stos
lret
pop
imull
ljmp
in
aam
test
ljmp
dec
das
scas
dec
idivl
aaa
push
xor
jae
sub
mov
and
mov
cmp
and
push
mov
bound
test
pusha
pop
int
dec
pop
mov
dec
in
bound
stos
outsl
cli
ljmp
subl
sbb
mov
jl
xor
push
test
add
rcll
inc
mov
shrl
mov
scas
mov
shlb
rcll
movsb
ljmp
sub
push
mov
cmpsl
dec
dec
push
test
fistps
sub
ljmp
and
xchg
push
mov
mov
mov
imul
incl
std
in
in
pop
int
lea
sti
xchg
shrb
and
xchg
lock
imul
das
push
sub
sbb
adc
test
jp
mov
adc
jae
xchg
movsb
movsl
jg
popa
mov
jmp
das
out
popa
stos
sahf
shll
sarb
and
and
mov
jb
leave
push
pop
ds
shlb
clc
sbb
aaa
adc
adc
leave
mov
mov
decl
jae
inc
shlb
aas
aaa
arpl
lret
jl
dec
xor
or
mov
and
push
rorl
add
add
nop
adc
add
subl
inc
add
fs
add
nop
jmp
test
mov
call
pop
jmp
mov
popf
push
xchg
push
mov
lcall
dec
nop
xchg
add
mov
lret
popa
pusha
in
mov
aaa
mov
cmp
pop
mov
jmp
add
jg
leave
mov
fwait
mov
mov
test
imul
jo
add
sti
js
jnp
andl
cmpsl
xor
out
cli
mov
and
push
push
mov
lock
inc
ljmp
jns
daa
xchg
stos
mov
aam
jne,pt
stc
lahf
shlb
pop
daa
bound
cmp
or
imul
mov
xchg
jge
inc
cmp
pushl
ret
inc
add
mov
sub
jp
jmp
stc
hlt
fs
push
pushf
inc
shl
cltd
in
int3
cmp
mov
xchg
dec
lock
sti
leave
negl
out
jns
add
stos
pop
adc
lcall
cmpsl
ret
decl
push
cmp
mov
pop
aam
xchg
dec
jge
mov
sbb
in
imul
xchg
sbb
enter
jns
xchg
add
lret
aaa
xchg
mov
mov
outsl
jmp
sub
and
negl
push
je
subl
insb
push
push
mov
lock
negl
pushl
cld
mov
les
sysenter
incb
pop
lahf
inc
xlat
jne
imul
sbb
pushl
xchg
and
inc
iret
shll
lods
push
scas
mov
sbb
inc
negl
push
adc
lcall
rcrl
xchg
cmc
cmp
lahf
sbb
call
jae
enter
cltd
dec
clc
addb
ror
in
xor
xor
or
aad
out
mov
popa
in
sub
xchg
or
pop
pop
sti
scas
scas
mov
sub
loopne
sti
jg
mov
cwtl
sbb
push
shrb
cmp
lock
jge
jnp
mov
push
inc
inc
nop
cld
decl
cmp
fwait
jns
add
out
inc
sub
mov
mov
loopne
pop
int3
pushf
call
xchg
xchg
and
hlt
mov
cmp
cmp
sbb
sbb
xor
stos
incl
cmc
jne
sbb
lahf
stos
jmp
cmp
sahf
mov
mov
shll
mov
lcall
loope
pop
pop
aad
test
mov
in
jns
push
dec
stc
mov
mov
pop
cmpsl
push
mov
pop
mov
inc
inc
lret
dec
jne
jge
lds
mov
test
xchg
loopne
jno
lds
call
out
jl
jg
decl
nop
mov
or
orl
enter
out
loop
adc
mov
int
sti
mov
cmc
inc
mov
push
or
push
and
xorb
or
fcmovnb
mov
and
or
fdivrl
ret
pop
cmpsb
mov
sbb
mov
dec
nop
adc
add
cli
aam
daa
hlt
mov
dec
cmp
mov
pushl
adcb
popa
icebp
mov
adc
data16
scas
sub
mov
dec
incl
adc
jecxz
hlt
mov
adc
stos
cmp
sub
fistps
inc
cmc
icebp
cli
mov
pop
popa
in
adc
in
jnp
out
sub
aad
sbb
jl
push
xor
fstpl
jge
ds
nop
mov
jnp
sbb
adc
out
sub
push
and
leave
lahf
sub
clc
fbstp
jmp
stc
adc
stc
aad
pop
sub
orb
xchg
jae
xor
insl
rcl
cs
ds
repz
push
icebp
leave
xchg
nop
pop
push
sbb
insb
cwtl
push
out
adc
mov
les
sbb
or
imul
cmc
std
mov
int3
mov
outsl
clc
std
push
insb
jecxz
sbb
out
pop
in
cmp
jbe
int
mov
clc
pop
insb
push
cld
cmp
nop
dec
outsb
testl
neg
push
ljmp
loop
sbb
jbe
or
sub
test
mov
pop
dec
jns
mov
notb
sub
add
outsl
mov
pop
sbb
push
push
movsb
mov
push
cld
sbb
mov
add
xchg
mov
pop
outsl
cmp
jmp
jg
into
outsb
mov
pop
cmp
jp
add
or
outsl
xor
iret
fldt
sub
xchg
outsl
loopne
into
or
sar
mov
clc
or
jnp
add
cmc
adc
popa
insl
les
sbbl
jno
cmp
pop
sbb
xchg
pop
inc
nop
xor
and
cmp
les
jge
lods
pop
clc
aaa
xor
out
xchg
push
cmp
nop
dec
adc
mov
sub
popa
sti
subl
adc
inc
cmc
mov
mov
adc
mov
cmpsl
inc
clc
push
out
das
jge
mov
fwait
cmpb
adc
outsl
aad
push
sarb
push
mov
ret
scas
add
sub
add
jnp
fmulp
andl
jl
nop
xor
jns
int3
scas
jle
fildll
dec
pop
cmpsb
shlb
cmpl
sarb
jge
std
cmp
push
inc
jle
lds
cmp
mov
and
and
leave
jne
faddl
add
and
pop
mov
jns
sahf
xchg
or
bnd
scas
sbb
add
and
jge
cltd
dec
mov
lret
jne
inc
shrl
jle
mov
outsb
jmp
outsb
cmpsb
idivb
jg
jnp
push
arpl
scas
insb
test
pop
sbb
mov
or
loop
fstp
sbb
cmpb
idiv
mov
sbb
cmc
push
adc
js
push
pop
dec
xchg
xchg
add
mov
jg
mov
pop
sbb
inc
lods
ja
pop
arpl
or
cli
iret
push
lcall
mov
je
shl
divb
adc
leave
pop
ficoms
movsb
outsl
mov
outsl
pop
jg
or
xor
sbb
jp
arpl
inc
in
lock
shrb
in
lock
fs
pushl
lret
aam
xchg
xor
mov
es
xchg
popa
mov
icebp
inc
or
sti
xchg
pushl
out
int3
push
ret
enter
jl
mov
cmp
push
jge
repnz
mov
outsl
mov
fsubs
jns
xchg
and
fs
cs
sbb
dec
jle
dec
clc
je
into
push
or
test
rol
lock
pushf
inc
mov
pop
and
imul
mov
fcomp
js
mov
cmp
sbbb
test
xor
jnp
inc
cmp
mov
mov
sbb
adc
iret
cmp
sbb
imul
sar
aas
ss
mov
lock
xorb
stc
sarb
sbb
pop
add
ss
scas
repnz
sbb
mov
jge
pop
mov
jg
sti
jge
sub
xchg
cmpsb
mov
hlt
sahf
test
mov
call
and
leave
xchg
dec
mov
push
mov
nop
hlt
adc
cmp
lock
adc
repnz
je
or
pop
outsl
ret
mov
mov
xchg
push
sbb
jbe
sbb
mov
in
or
mov
jg
and
aas
shll
imul
xchg
lock
lret
jnp
mov
mov
mov
into
test
jne
jmp
insl
outsl
jns
pop
jp
andl
sarb
jns
jle
in
subb
adc
hlt
mov
decl
add
mov
loop
hlt
incb
ljmp
mov
pop
push
mov
sbb
push
add
pop
outsl
popl
xchg
insl
ds
sbb
push
iret
aaa
mov
pushf
imul
or
push
nop
call
iret
pusha
scas
data16
aad
jnp
lcall
out
xlat
push
mov
mov
loop
mov
pop
or
push
inc
cmp
jmp
and
lods
cli
in
imul
dec
int3
mov
add
dec
push
lret
and
test
cld
sti
icebp
mov
fsubrs
decl
scas
or
sub
mov
imul
jo
fs
into
jg
decl
pushf
xorl
outsb
popa
jo
add
adc
je
jg
pushl
imul
je
push
jae
jb
popa
je
add
inc
bound
dec
fcomip
decl
dec
push
gs
js
inc
arpl
push
outsl
popa
data16
pop
bound
xor
cmc
incl
xor
inc
inc
inc
dec
insl
arpl
pop
push
push
jno
jns
outsb
aaa
dec
pop
push
cld
scas
pop
data16
pop
inc
push
pop
adc
cmp
jns
ss
jg
and
dec
imul
inc
inc
dec
cmp
jg
outsb
outsb
dec
cmp
jae
inc
push
dec
jne
insb
inc
dec
inc
dec
inc
pop
dec
jb
pushl
xor
ss
arpl
imul
pop
bound
push
imul
push
stos
push
jbe
imul
push
xor
inc
jb
jns
jns
lock
mov
outsl
jp
add
cmp
outsb
pop
xor
xor
insb
lcall
xor
imul
dec
data16
push
push
push
jb
js
dec
cld
ja
in
pop
je
inc
inc
push
cmp
push
gs
dec
jp
outsl
pop
push
xor
mov
outsl
xorb
push
pop
inc
jns
jb
dec
pop
dec
dec
jmp
dec
bound
dec
jae
push
ss
dec
popa
pop
inc
push
aaa
push
push
inc
push
cmp
dec
push
inc
ja
mov
inc
jbe
cmp
aaa
imul
push
xor
pop
push
pop
data16
ss
dec
outsl
imul
pop
lock
push
aaa
xchg
popa
push
jno
dec
je
xor
mov
dec
inc
inc
jae
push
imul
adc
test
adc
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insb
adc
incl
dec
mov
add
call
incb
add
mov
in
jg
decl
mov
mov
mov
orl
or
add
sar
dec
stos
addb
addl
mov
adcb
mov
mov
adcb
jle
add
sbb
push
addb
sbb
add
fistpl
sub
add
push
pop
or
xorb
mov
ret
repnz
push
orl
inc
or
in
fs
inc
sahf
add
sarl
cmp
or
add
xchg
add
in
fwait
std
int
fsubs
shrb
pop
into
or
stc
sbb
add
add
adc
hlt
in
add
push
push
sub
mov
add
add
arpl
pusha
ds
sarl
adc
add
imul
push
pusha
jbe
cs
xchg
in
jnp
rcrl
shll
xchg
ja
pop
decb
mov
mov
mull
adcl
fbstp
add
sub
pusha
add
cmc
mov
pop
inc
jecxz
pop
fs
and
inc
gs
aas
mov
xchg
add
insl
lock
cltd
push
loopne
jae
pop
add
or
jne
stos
cmpsb
imul
insl
lcall
mov
mov
in
adc
dec
imul
ret
pop
pop
out
jge
add
dec
ret
test
fisubs
sub
cld
pusha
or
add
orb
mov
push
lock
xchg
ds
cmp
adc
add
imul
dec
xchg
jmp
out
pusha
fdivrs
lods
stc
test
nop
mov
pop
dec
pop
mov
xchg
lods
out
push
shll
hlt
in
mov
mov
pop
sub
cmp
sti
jnp
testl
or
push
adc
cld
scas
cmp
test
loopne
inc
jo
cs
sahf
jae
pop
adc
shll
stc
mov
mov
cs
jne
int
adc
add
sbb
imul
mov
jb
sub
add
insb
pushl
adc
inc
in
and
jne
add
cld
or
inc
rcrb
dec
cmp
inc
data16
fldt
pop
stos
cmp
psubq
jecxz
and
imul
xchg
cmpsl
push
dec
loopne
pop
sbb
pop
pop
pop
xor
adc
popa
outsl
fldt
or
mov
popf
add
pop
push
inc
outsb
loopne
mul
lds
mov
push
arpl
mov
imul
out
rcrl
movsl
scas
sub
loope
mov
not
xor
mov
jnp
rcr
fwait
push
push
popl
jecxz
ror
add
fidivl
dec
aas
and
or
add
arpl
sbb
dec
pop
jge
cmpxchg
mov
sbb
loope
adc
add
popa
push
dec
test
mov
imul
sub
mov
out
test
dec
repz
lods
mov
arpl
dec
mov
cmp
adcl
shll
adc
jo
in
sbb
push
cmp
fld
xor
into
push
jge
paddd
jno
mov
mov
pop
cmp
sbb
push
repz
iret
loopne
incb
dec
stos
pop
or
add
inc
stos
cmp
inc
in
sti
push
jmp
mov
insl
mov
pop
pop
or
jg
pusha
cmpl
adc
push
add
fisttpl
sbb
mov
inc
jo
lods
cmp
scas
std
aaa
xor
sub
cmp
add
xor
test
mov
sub
cmp
pop
push
lods
push
jno
shll
loope
xchg
sbb
jmp
lock
jns
outsl
mov
xor
das
fistps
cmp
add
mov
shrb
add
and
add
add
stos
xor
jmp
movsb
pop
lcall
icebp
cld
xor
fcomip
mov
add
or
pushfw
lretw
push
xchg
push
std
add
adcb
mov
add
stc
cmp
data16
sbb
cld
daa
negb
loopne
cli
imul
cs
dec
xor
dec
jg
mov
sbb
mov
decl
push
mov
add
int
mov
dec
stc
push
testl
das
addl
outsl
repnz
fcmovbe
add
fistps
adc
fmulp
fmulp
nop
add
enter
iret
aam
clc
fwait
leave
and
iret
rcl
ficoms
xor
ficomps
aam
xchg
loopne
je
dec
stc
in
ljmp
sbb
je
or
cmp
add
inc
stos
mov
jbe
cmp
mov
add
bound
ljmp
pushf
sub
inc
inc
std
ljmp
and
jmp
jmp
jo
fwait
xchg
cmp
mov
fcmovnu
shll
mov
mov
add
adc
add
shlb
add
adcb
add
lahf
mov
cmp
add
rolb
push
add
push
fadds
shlb
jg
scas
call
jmp
sahf
rolb
sub
rolb
faddl
cli
add
lcall
clc
xchg
fs
adc
lock
add
add
mov
add
mov
jno
pop
shll
cmp
sub
cs
add
fnstenv
je
imul
lods
push
imul
pop
outsl
add
jl
lcall
cs
insb
mov
imul
or
fdivl
pop
jb
sti
repz
jns
shlw
mov
out
ret
dec
daa
rclb
adc
mov
cli
xor
push
adc
sub
into
jno
jp
pop
jl
add
and
push
mov
pop
mov
mov
mov
add
mov
mov
and
aam
add
lock
fnstsw
add
lcall
ljmp
mov
xchg
xchg
mov
mov
mov
lcall
call
rcl
aad
aam
lret
iret
into
int
int3
ret
ret
decl
fninit
incl
testb
mov
add
cmp
idiv
int3
add
sbb
inc
nopl
sbb
fdivrs
or
mov
push
mov
mov
mov
sbb
lods
add
add
or
cmp
add
add
pop
shl
das
push
add
add
add
push
mov
mov
fsubs
sub
or
pop
movsb
mov
testb
data16
rolb
aas
cmp
pop
lcall
inc
xchg
movsl
decl
imul
shrl
inc
mov
iret
cmp
sub
dec
add
shlb
pop
sbb
adc
push
pop
ret
mov
lcall
call
repz
add
jbe
out
cmc
test
cwtl
in
inc
in
in
push
pop
divb
adcb
sbb
loop
mov
in
push
into
dec
call
mov
xchg
lea
adc
add
sbb
andb
stos
out
pop
in
push
adc
cmpsl
mov
mov
imul
mov
pop
add
add
xor
lret
sub
mov
imull
jmp
mov
cmpsb
mov
fsub
notb
decl
push
add
inc
sub
js
roll
incl
mov
sbb
xchg
in
jae
inc
cli
add
daa
aaa
cmp
inc
or
pop
cli
stos
outsl
ficoml
jg
pop
fldl
or
mov
ja
mov
pop
mov
add
add
mov
dec
push
dec
add
dec
push
sbbl
imulb
mov
mov
rolb
mov
add
stos
les
repz
or
add
jg
add
add
xchg
add
push
mov
xchg
mov
jb
jbe
int3
inc
push
or
push
inc
call
cmp
xor
scas
pop
adc
jae
pop
andl
or
or
dec
mov
femms
mov
test
sbb
rcrl
or
dec
push
cmp
mov
add
sbb
rorb
enter
adc
or
add
xchg
sub
lret
roll
loopne
dec
mov
push
test
inc
push
ss
mov
cwtl
rorb
push
dec
push
imul
mov
lret
sub
rcrl
cmp
mov
inc
test
test
and
rcrl
dec
ljmp
sub
in
test
cld
movsb
std
shrb
mov
inc
and
out
pop
sub
pusha
mov
cmp
pop
iret
test
shll
push
jo
push
scas
inc
inc
mov
insb
lcall
xor
testb
fucomip
sbb
dec
inc
jmp
orb
into
inc
xchg
sbbl
adc
dec
shrb
pop
pop
sbb
loopne
adc
loopne
scas
std
mov
hlt
sti
fadds
adc
sti
out
addr16
das
add
addb
add
push
push
test
or
outsl
or
xor
push
shl
xchg
inc
loopne
imul
repz
jmp
sub
dec
idiv
add
pop
imul
or
loopne
arpl
popf
add
cs
lods
mov
sub
or
push
sbb
cmp
lcall
loopne
iret
mov
xlat
adc
jnp
loopne
out
lods
movsl
add
or
stos
in
mov
or
or
xor
loopne
addr16
adc
jmp
inc
xchg
add
mov
cmp
lcall
fildl
xor
lahf
add
mov
lcall
cmpsl
add
sbb
stc
repz
inc
jl
inc
lock
loopne
push
xchg
loopne
arpl
clc
mov
iret
add
or
fs
insl
xor
adc
or
filds
add
mov
aam
daa
pop
xchg
or
adc
jge
or
add
add
push
mov
loope
sbb
icebp
int3
pop
sub
mov
cmp
loopne
or
iret
pop
pop
pop
scas
loopne
sbb
inc
xor
loopne
stc
push
loopne
aas
adc
or
iret
add
jg
cld
xor
inc
jecxz
loopne
mull
add
push
loopne
pop
xor
push
lock
aas
mov
jge
push
or
loopne
push
sub
dec
push
pusha
add
repnz
or
loope
lcall
jp
add
jae
int
mov
shll
and
cmpsb
loopne
aaa
sub
sbb
dec
jnp
mov
loopne
lret
push
pop
fistpll
or
sbb
dec
out
icebp
loopne
jmp
xchg
xchg
add
mov
mov
push
insl
sbb
pop
sahf
scas
loop
push
outsl
push
sbb
inc
movsb
or
sti
imul
nop
cmp
sbb
jg
cld
popa
loopne
outsl
cmp
adc
loopne
adc
inc
push
mov
dec
adc
lods
subl
adc
lds
push
jo
mov
idiv
ficoml
dec
cld
sti
cld
frstor
imul
ja
ja
mov
jnp
add
mov
add
fwait
loopne
cmpsl
imul
stos
xor
lret
out
lcall
add
jns
ds
and
and
pop
lcall
mov
ds
push
icebp
or
add
or
sar
cli
in
in
stos
jno
sbb
lock
or
jo
mov
push
insl
sarl
ret
xor
jo
lret
test
mov
loope
pop
repz
jo
pop
lock
testb
or
cmp
or
ret
lock
add
stos
imul
mov
or
jo
add
push
lock
sahf
insl
iret
mov
stos
stos
aas
es
xor
std
test
sub
jo
mov
das
mov
daa
stos
cmpsl
xchg
mov
mov
cmpsb
mov
lock
xchg
in
iret
fwait
mov
cmp
xchg
lock
xor
cmp
jecxz
fildl
cwtl
sub
pusha
ljmp
adc
xchg
jo
dec
clc
test
lock
mov
xchg
ja
sbb
jo
pop
mov
fsubrp
inc
xchg
push
orps
nop
mov
adc
mov
xchg
cmp
cmpsl
inc
cltd
outsl
add
xchg
dec
in
mov
stc
loopne
lcall
xor
or
ja
sbb
sbb
add
add
in
mov
mov
sbb
push
filds
lock
outsl
les
or
push
xchg
dec
sub
loope
clc
cmpsb
scas
in
lock
push
cli
int3
cmp
pop
ret
mov
fisubrl
jno
or
jno
fs
mov
push
xor
xor
mov
mov
and
lea
add
jno
mov
loop
mov
adc
mov
add
imul
jp
and
jns
push
mov
jg
mov
cli
adc
mov
loope
adc
in
cld
int
adc
ret
mov
mov
out
mov
mov
test
mov
mov
add
mov
push
mov
lds
int
cld
mov
out
js
mov
jge
mov
int
jno
mov
je
mov
imul
imul
cld
outsb
mov
jecxz
mov
lret
gs
int
cld
mov
out
pop
mov
sbbl
mov
cld
int
push
mov
mov
dec
mov
mov
int
repz
mov
loop
mov
lret
add
fdivrs
mov
mov
add
mov
push
cld
sbbl
mov
mov
mov
mov
mov
push
or
adc
addr16
mov
mov
mov
cmpsb
mov
inc
mov
mov
in
mov
fwait
fwait
xchg
sbb
mov
jl
fmull
mov
mov
shl
fnstcw
mov
mov
inc
jnp
push
jl
xchg
inc
ja
lods
mov
or
or
mov
leave
mov
gs
int
rcrl
mov
push
mov
nop
mov
std
mov
mov
mov
sarb
ljmp
mov
mov
mov
sbb
mov
mov
aaa
sbb
mov
mov
mov
repz
jg
mov
mov
mov
mov
mov
js
repz
jg
mov
sbb
mov
sbb
push
mov
aaa
or
mov
mov
mov
repz
jg
mov
or
push
mov
mov
push
jg
aaa
jg
mov
jp
mov
jge
mov
jno
jg
aaa
jge
jo
jl
ja
mov
jne
mov
repz
imul
arpl
pusha
mov
jg
aaa
jg
mov
pop
imul
mov
pop
int
cld
add
mov
arpl
push
popa
cld
int
cld
mov
push
addr16
dec
gs
daa
sbb
mov
mov
lcall
int
cld
int
cwtl
jg
lahf
mov
mov
pushf
jae
int
cld
mov
xchg
jno
xchg
mov
mov
xchg
int
jne
xchg
mov
mov
mov
mov
int
mov
mov
mov
mov
int
cld
mov
andb
mov
mov
stc
int
pop
mov
lcall
mov
mov
int
repz
mov
icebp
push
mov
notl
int
cld
mov
cmc
push
mov
jmp
mov
jmp
sbb
add
adc
mov
and
in
mov
mov
loope
mov
out
lcall
mov
mov
lods
add
or
aad
cwtl
mov
push
mov
mov
cld
mov
mov
mov
mov
mov
mov
cld
int
push
mov
mov
mov
cmc
jp
mov
int
mov
std
mov
mov
jl
ja
cld
mov
jb
orl
addb
cmpl
add
je
test
jg
aaa
push
hlt
mov
mov
stc
outsb
mov
repz
mov
mull
lock
sbb
repz
mov
add
icebp
mov
mov
popf
mov
int
scas
pop
mov
loop
mov
cmpb
mov
mov
mov
push
mov
cmpsb
push
mov
movsb
mov
mov
fwait
dec
mov
cltd
dec
mov
outsl
data16
mov
mov
lods
jmp
outsl
incb
xchg
mov
mov
pushf
inc
mov
cmp
mov
sbb
push
mov
aaa
mov
jmp
outsl
adc
adc
mov
mov
push
scas
pushl
aas
or
mov
or
mov
incl
mov
jo
add
mov
jns
sub
jg
das
mov
jle
cs
jl
sub
jae
and
jno
and
ja
daa
mov
jbe
es
je
and
imul
imul
outsb
mov
insb
mov
jmp
adc
pop
mov
or
mov
sub
pop
mov
pop
mov
add
push
mov
hlt
push
mov
clc
add
push
mov
clc
dec
lcall
mov
mov
dec
mov
jg
dec
mov
mov
jl
inc
mov
jb
sbb
mov
sbb
sahf
lcall
mov
cwtl
push
mov
cwtl
sbb
mov
cwtl
adc
pop
cwtl
adc
and
pop
mov
cwtl
push
mov
cwtl
adc
mov
cwtl
or
fistps
add
incl
nop
cltd
jnp
cltd
jp
cmpsb
cltd
jns
movsl
cltd
jle
mov
cltd
jb
clc
cltd
jbe
outsl
lcall
imul
popa
mov
cltd
pusha
mov
cltd
addr16
cltd
data16
cltd
gs
cltd
jg
fs
cltd
push
negb
inc
mov
lcall
lcall
jmp
lahf
pop
mov
sahf
pop
mov
sahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lahf
pop
mov
lahf
push
sbb
jg
push
mov
lahf
push
mov
sahf
push
mov
sahf
push
ss
push
mov
sahf
push
mov
sahf
push
mov
cwtl
pop
cld
dec
mov
cwtl
dec
mov
dec
mov
cwtl
dec
mov
cwtl
dec
mov
sahf
dec
data16
dec
incl
dec
mov
sahf
inc
mov
sbb
mov
fwait
pop
mov
fwait
pushl
cld
push
mov
fwait
sbb
mov
adc
scas
fwait
adc
cwtl
lcall
lcall
adc
sahf
fwait
or
lcall
in
lcall
in
lcall
loop
or
loope
add
fwait
pop
mov
cwtl
push
mov
pushl
cmp
mov
lcall
out
jge
in
jb
cltd
lcall
popf
ja
jp
jbe
or
jne
jo
je
adc
imul
fwait
imul
cmpsb
fwait
outsl
mov
lcall
mov
mov
sahf
addr16
sahf
data16
mov
gs
sahf
fs
sahf
pop
mov
ds
mov
sahf
pop
mov
fildll
push
sahf
pop
mov
pop
fwait
pop
mov
sahf
push
mov
sahf
push
mov
sahf
cmp
mov
cmpsb
popf
push
sahf
popf
push
mov
popf
push
mov
popf
push
mov
popf
dec
lcall
fistpl
lcall
lods
pushf
dec
mov
popf
dec
mov
popf
scas
mov
decl
popf
inc
mov
popf
inc
mov
popf
inc
mov
cwtl
inc
ss
fwait
inc
adc
mov
mov
add
mov
adc
decl
adc
jns
push
cltd
js
mov
mov
lock
mov
add
mov
cwtl
jne
pop
cltd
je
push
cmpsb
jecxz
mov
arpl
mov
cltd
inc
mov
cmp
mov
fwait
pop
mov
mov
pop
mov
mov
pop
mov
mov
mov
pop
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
push
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
inc
mov
mov
sbb
mov
loopne
pushl
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
mov
or
stos
mov
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pushf
mov
mov
mov
mov
mov
mov
mov
mov
pushl
jno
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
imul
mov
mov
mov
mov
mov
mov
mov
mov
pushl
popa
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
pushl
pop
mov
mov
mov
mov
sahf
push
mov
mov
mov
mov
call
icebp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
out
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jp
ljmp
js
call
mov
out
mov
in
mov
mov
jecxz
jb
loop
jno
loope
pushl
loopne
ja
out
jbe
out
jne
in
je
in
imul
mov
push
add
insb
ss
int
stos
arpl
pusha
stos
addr16
insb
stos
data16
gs
fs
pop
insb
ss
int
pop
stos
pop
stos
pop
stos
pop
stos
pop
int
mov
stos
pop
stos
pop
stos
push
stos
push
stos
fldcw
push
stos
push
stos
push
stos
push
stos
push
mov
mov
lret
mov
mov
les
dec
mov
mov
cmp
adc
dec
mov
mov
stos
inc
adc
andb
cs
test
mov
jmp
incl
test
mov
sbb
sahf
out
sahf
pop
push
sbb
lahf
out
adc
pop
mov
out
pop
pop
xchg
add
sahf
out
sahf
mov
test
mov
jns
xchg
mov
cmp
repz
jmp
repz
out
xchg
out
lcall
in
cwtl
fistpl
idivl
xchg
fsts
sbb
iret
repz
xchg
sarb
sahf
ja
xor
cs
push
lret
sahf
out
fisubrs
push
lret
das
enter
jns
lahf
sub
sahf
out
and
sahf
daa
cwtl
and
lcall
es
cmp
repz
rcll
rclb
repz
repz
push
adc
iret
adc
mov
fidivrl
repz
fmuls
repz
repz
fimuls
iret
or
add
add
daa
daa
pop
cmp
out
add
jp
out
daa
jns
iret
js
jg
sahf
out
int
int3
jge
out
sahf
out
ret
jb
out
sahf
shlb
ja
sahf
out
lds
jne
out
sahf
out
cmp
push
out
sahf
cmp
push
out
cmp
out
sahf
out
sbb
pop
iret
repz
sbb
push
ds
idivl
push
push
out
push
out
call
in
mov
dec
pop
sbb
cmc
shrl
sbb
push
jg
jmp
adcb
fs
xchg
mov
mov
xor
mov
ljmp
pop
lds
cmpsb
mov
rcr
mov
mov
ss
sub
ja
fstps
out
test
int3
iret
insb
popw
je
jmp
shlb
mov
inc
jle
cli
cmp
jno
push
loop
gs
sbb
cs
cmp
xor
jmp
scas
mov
cmp
addb
push
jecxz
leave
and
or
or
cmpsb
xchg
or
jmp
in
mov
jne
mov
and
mov
ret
sbb
daa
scas
ds
cwtl
ljmp
adcl
jne
cmp
mov
repz
inc
sti
jecxz
ret
fisubl
fadd
sar
into
sbb
scas
mov
imul
sub
fstpl
sub
cmp
jns
lcall
insl
aad
rorl
int3
sub
or
xor
sub
aaa
mov
mov
pop
pop
jno
pop
cmp
int
sub
xorl
mov
mov
mov
mov
mov
jmp
mov
cmp
xor
mov
sti
imulb
lret
cmpsl
enter
inc
and
jno
pusha
sysret
in
faddp
ds
insl
sub
repz
sub
push
les
int3
fcomp
es
cmp
stc
into
decl
aaa
mov
mov
xlat
mov
mov
mov
mov
pushl
mov
mov
mov
mov
arpl
push
insb
xchg
lods
mov
cld
div
adcl
fnstenv
sbb
pop
fcmovbe
fstpt
shrb
xchg
cmpsl
lahf
xchg
popl
xchg
out
out
pushl
jne
mov
test
int
je
lret
out
pop
push
or
xchg
call
decl
pop
push
dec
popl
mov
and
adc
fcompl
out
jb
popf
jge
dec
jb
scas
mov
popf
mov
das
mov
mov
mov
mov
mov
mov
cmp
push
pusha
aaa
sub
sbb
ja
aad
fldt
int
lea
cmc
decl
fisttps
jnp
cli
repz
sub
aad
sahf
shl
push
int
int
aas
inc
fistps
icebp
pop
xor
scas
inc
mov
decl
dec
sub
and
mov
push
call
cmpsb
jg
xchg
data16
and
incl
pop
addb
xchg
xchg
dec
add
inc
xchg
mov
jmp
cmpsl
adc
pop
pushf
xchg
test
test
test
inc
lret
jg
adc
sub
rclb
insb
pop
test
xlat
jmp
out
fdivl
enter
jg
mov
orb
dec
mov
add
insb
cmp
lcall
lcall
xor
mov
in
mov
mov
mov
mov
mov
mov
mov
xor
xor
dec
xchg
lahf
xor
mov
push
jo
cltd
xchg
or
sub
jecxz
add
inc
sub
mov
lea
lea
sbb
out
dec
lret
aam
jg
mov
adc
sub
jge
push
mov
mov
mov
mov
decl
subl
sub
test
xchg
jbe
cltd
rorb
cmpsl
push
push
xchg
mov
pusha
bound
xchg
arpl
jae
inc
adcb
push
andl
mov
mov
pop
notl
add
sti
lcall
and
mov
pushl
xchg
xchg
lahf
add
xor
fs
xlat
nop
add
pop
fcomps
and
adc
arpl
dec
test
test
test
test
test
pusha
test
test
mov
jp
xlat
mov
cmp
inc
and
cwtl
adc
cltd
mov
mov
lods
lcall
lcall
push
push
popl
test
scas
iret
scas
pop
cmpsl
les
imul
push
nop
push
mov
adcb
cmpb
icebp
std
sbb
out
or
gs
daa
sahf
pop
in
mov
daa
jb
xor
lcall
fistpl
xchg
xchg
xchg
jbe
pop
xchg
mov
movsl
repz
jmp
mov
adc
aas
icebp
sub
stos
test
jno
jmp
inc
cmp
mov
faddl
mov
rorb
movsb
int
pop
pop
aas
lods
cli
pushl
pop
fbld
mov
mov
dec
mov
add
call
call
adc
inc
inc
ds
pushl
test
scas
lods
lods
mov
cmpsb
movsl
movsb
fwait
dec
inc
js
aas
xchg
xchg
xchg
nop
xchg
inc
ret
mov
xchg
or
test
or
loopne
out
aas
mov
sbb
cmp
cmp
aas
ds
pushl
aaa
ss
sub
cs
and
es
sbb
push
sbb
call
pop
push
adc
or
push
or
mov
jnp
jns
jg
jge
jae
jno
pushl
jbe
je
push
push
arpl
pusha
addr16
pop
pop
pop
pop
pop
pop
pop
push
push
push
and
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
push
pushl
add
add
add
add
add
adc
stc
clc
std
pop
cld
add
repnz
lock
cmc
hlt
add
ljmp
add
loop
adc
or
xor
add
ret
xor
sbb
sbb
ret
xor
sbb
add
xor
add
ret
xor
sub
sub
ret
xor
sub
inc
hlt
inc
add
inc
pushf
mov
add
sub
pop
and
js
mov
sbbb
xchg
and
xchg
xor
lcall
xchg
pop
addb
inc
addb
ret
lea
sbbl
cli
out
add
addb
pop
ret
or
sub
cmpsl
push
add
or
adc
in
lcall
stos
fildl
mov
aas
add
adc
rolb
mov
fld
psubusb
rcl
fmulp
xchg
fisttps
repnz
leave
ficomps
fcmove
faddp
add
fistps
std
sar
call
sub
adc
xlat
into
sbb
sar
ret
or
or
fmulp
adc
leave
aam
rclb
fildll
push
loopne
cmp
sub
push
adcb
inc
jne
inc
inc
add
hlt
repz
pop
out
out
jmp
xchg
mov
hlt
call
inc
inc
cmp
add
ds
push
popl
cmp
testb
mov
ret
mov
inc
sahf
inc
jns
add
fwait
add
sbb
and
orl
inc
sbb
inc
add
add
adc
rclb
cld
mov
iret
rolb
add
push
loop
add
iret
lcall
inc
add
sahf
orl
mov
push
xchg
sub
je
je
std
std
inc
cli
inc
mov
push
mov
or
push
rorb
mov
mov
lret
mov
rcr
sbb
pusha
add
mov
and
dec
clc
add
and
mov
fisubs
in
push
leave
dec
shlb
not
loopne
jmp
inc
loope
shlb
fdiv
mov
or
stos
add
imulb
repnz
pusha
rol
adc
or
ja
iret
iret
lret
adcl
fcom
or
xchg
ret
out
push
pop
aam
add
fisubs
add
fcompp
ror
push
clc
call
jno
sti
sti
push
call
loopne
flds
and
out
int
and
popa
or
outsl
and
add
lcall
out
stc
mov
fstpt
loope
jo
cli
mov
or
jno
les
aad
jg
sub
add
das
sub
adc
ss
xor
xor
cmp
xor
xor
add
cmp
sub
pushf
cmpsl
mov
scas
enter
std
pop
jecxz
out
in
lcall
clc
add
jecxz
pop
xchg
xchg
xchg
test
movsb
movsl
mov
jns
jg
ljmp
pop
inc
add
push
inc
jno
push
inc
push
push
push
push
dec
insl
loopne
push
add
push
dec
pop
or
add
dec
inc
inc
rolb
adc
and
sbb
sbb
add
add
outsb
or
adcl
mov
orb
lods
mov
or
pop
mov
inc
add
inc
push
gs
pop
add
dec
push
inc
push
adcb
pop
push
out
js
dec
dec
xchg
push
pop
inc
or
inc
adc
xchg
pop
stos
popa
or
add
cmp
sbb
push
es
jle
push
pop
dec
add
inc
add
dec
inc
dec
jo
or
or
scas
mov
cwtl
stos
in
test
xor
addr16
pop
arpl
incl
sub
xor
or
cmp
sbb
xor
or
loopne
push
dec
dec
pop
jle
jle
ret
fildl
rol
rol
xlat
rcl
or
ja
std
jmp
call
shr
out
out
cli
lcall
fst
enter
fcoms
out
ror
add
shlb
insb
jo
bound
gs
pop
add
fildl
nop
pop
pop
inc
sbb
pop
inc
pop
add
dec
inc
add
add
push
fdiv
dec
iret
int
ret
ror
add
sub
cmp
and
mov
daa
cmp
faddp
adc
jp
pop
je
cwtl
xor
add
xor
add
or
mov
aas
sub
sbb
sub
cmp
sub
clc
pop
mov
and
or
adc
loop
cmp
lahf
cltd
add
icebp
mov
lret
cwtl
lret
mov
and
add
movsl
test
stos
add
ja
fistpl
xchg
ror
fmulp
int
pop
cltd
into
pushf
lahf
into
int3
mov
sub
ror
into
add
fstp
lock
cmc
mov
lods
mov
mov
add
pop
add
sbb
mov
clc
inc
xchg
lock
jecxz
mov
mov
out
clc
sub
out
mov
mov
cwtl
nop
in
stc
bnd
mov
mov
scas
mov
mov
adc
mov
loop
mov
mov
incb
pop
pop
aas
add
mov
scas
movsl
stos
mov
jne
ds
mov
mov
cmc
movsb
lods
add
adc
jg
pop
notb
adc
sbb
push
push
mov
or
add
dec
add
add
je
and
mov
cmpsb
mov
in
mov
fdiv
mov
mov
movsb
out
lods
mov
add
mov
cmpsl
dec
pop
clc
dec
pop
hlt
jg
pop
dec
push
add
sbb
inc
mov
mov
dec
pop
pop
dec
add
add
or
jae
fs
insb
ja
fs
arpl
fs
mov
push
mov
into
idiv
repz
hlt
rclb
cld
movd
clc
loope
call
mul
add
dec
mov
inc
mov
mov
dec
push
dec
cmpsb
dec
inc
mov
add
out
jle
outsl
cli
incl
lock
push
repz
testb
fadd
test
mov
sub
add
mov
scas
lock
stos
cmpsb
mov
std
incl
inc
xor
cs
adc
add
inc
sub
sub
cmp
xor
cmp
clc
aaa
lock
out
out
cld
sarb
icebp
aaa
cld
adc
sbb
add
cmp
add
incl
jnp
imul
jb
pop
bound
notb
adc
push
mov
clc
cmp
pop
or
xor
or
sbb
cli
lcall
neg
loopne
out
in
jmp
in
std
mov
inc
inc
dec
outsb
jo
fcomi
push
dec
push
pop
rorb
test
fisubs
roll
int3
mov
clc
into
popa
push
xchg
sbb
sub
incl
adc
add
or
and
xor
xor
aas
add
rorl
sub
mov
xor
and
mov
mov
lods
mov
mov
add
mov
cmp
imul
sbb
out
jnp
push
aaa
jmp
jo
jp
add
fs
sar
push
ret
stos
add
rol
add
nop
inc
sub
add
aaa
data16
dec
dec
cmp
ljmp
mov
aaa
sub
xor
push
aad
pusha
inc
pop
add
inc
pop
push
dec
enter
lcall
add
xchg
xchg
nop
xchg
push
dec
pop
dec
dec
dec
aaa
std
scas
jo
nop
out
hlt
repz
cmpsl
lock
shrb
incl
mov
movsl
in
mov
test
mov
loope
fbld
xchg
adcb
and
xor
fs
or
or
adc
loopne
adc
aaa
cmp
addb
sub
loop
and
and
sbb
loop
sub
push
sbb
sbb
push
add
lcall
dec
or
add
xor
and
sub
xor
cs
sub
mov
xchg
mov
stos
decb
jmp
loope
mul
movsb
icebp
filds
ret
fdivl
cld
push
mov
fcmovu
aad
popf
mov
aad
std
fmulp
icebp
in
add
dec
fsub
xor
sub
in
in
jmp
test
mov
xchg
jmp
cmc
fimull
adc
sbb
call
stos
add
or
mov
or
inc
leave
ret
pushl
jmp
adc
enter
jl
lds
lret
out
lret
cmp
fcomp
or
jo
push
sbb
xor
leave
xlat
xor
cld
jecxz
in
jmp
jno
data16
ja
pop
dec
dec
dec
pop
xchg
pop
jns
dec
push
inc
inc
orb
jno
rorb
cld
out
call
push
sar
adc
fst
aam
lahf
std
out
sub
cld
cmc
add
pop
pop
shl
in
sbb
mov
mov
inc
inc
icebp
lods
push
es
addb
into
jno
call
add
xchg
nop
lea
xchg
pushf
add
sti
in
fistpl
mov
stos
icebp
add
clc
in
adc
loopne
loope
add
sub
xchg
sbb
xor
and
cmp
hlt
mov
add
add
xor
es
cmp
cmp
cmp
add
adc
cld
inc
pop
or
or
adc
nop
adc
pop
jo
fdiv
ljmp
adc
das
cmp
and
and
xor
leave
iret
fbstp
incb
mov
loopne
idiv
push
inc
inc
call
pop
mov
push
add
jbe
fs
or
popa
xor
loop
sti
std
add
mov
mov
xor
and
xor
xchg
xor
or
pop
loop
add
sbb
add
and
or
sub
sbb
dec
sbbb
daa
xor
jl
jno
cmp
add
adc
or
sbb
lahf
push
push
pop
bound
add
push
enter
clc
sub
mov
or
pop
push
pop
fistpl
mov
insb
dec
pop
dec
and
sar
out
movaps
ss
push
add
decl
mov
push
inc
push
or
add
lock
ret
fcmovne
in
mov
xchg
jl,pt
fs
jo
push
cmp
pop
mov
dec
inc
push
push
add
inc
push
arpl
mov
jns
jnp
outsl
cli
decl
arpl
jo
xor
movsb
mov
roll
cltd
adc
fdivr
ja
inc
shll
je
and
jp
dec
mov
cmp
adc
cmp
daa
pop
jmp
and
dec
inc
or
dec
dec
inc
clc
outsl
outsl
stos
dec
push
lods
mov
int3
int3
je
addb
ffree
cld
pushl
test
iret
add
nop
lret
aad
xor
rolb
push
sbb
pop
incl
add
pop
pop
push
push
dec
icebp
outsl
lcall
xor
sub
and
xchg
jl
xchg
xchg
mov
mov
mov
scas
in
movsb
cmpsl
movsb
test
mov
shrb
fidivrl
pop
xor
add
adc
xor
push
dec
data16
sub
add
or
stos
das
pop
mov
xor
cmp
and
aaa
aaa
pop
mov
mov
ljmp
add
and
inc
imul
jg
xchg
lock
add
arpl
addl
decl
loopne
into
iret
fxch
fdivr
icebp
in
ror
fildl
mov
icebp
add
out
or
or
sbb
inc
sti
sti
sbb
clc
in
mov
hlt
icebp
out
in
push
sbb
stc
rolb
fmul
flds
scas
incl
ret
mov
enter
adc
mov
mov
mov
stos
fucomip
jg
push
ss
push
sbb
or
jne
or
or
stos
mov
insb
out
out
mov
pop
loopne
inc
mov
inc
push
push
sbb
or
or
lcall
push
repz
outsb
or
imul
push
xor
add
ds
decl
jnp
pop
push
fs
inc
insl
imul
adc
je
jmp
or
bound
add
mov
mov
mov
mov
mov
mov
jmp
mov
jg
pop
pop
dec
mov
sbb
add
xor
dec
inc
andl
adc
or
pop
add
pop
and
pop
mov
out
pop
je
dec
inc
sarb
outsb
pop
push
dec
js
push
jae
xor
ja
aaa
pusha
push
add
mov
mov
sbb
sub
lods
xlat
cltd
divb
add
push
imul
mov
jo
mov
dec
pop
dec
add
loopne
repz
jecxz
loopne
aam
cmc
cld
add
loopne
decl
mov
mov
mov
add
xor
icebp
push
sarb
imul
push
loop
and
ljmp
pop
sbb
pop
add
jo
mov
incl
push
add
ja
jae
arpl
push
push
jg
sub
arpl
lock
mov
dec
inc
dec
add
or
pop
dec
push
adc
jle
mov
fists
lcall
add
lahf
mov
fwait
add
mov
mov
jg
sbbl
addl
incl
aaa
sysenter
ss
sub
pusha
addr16
ds
mov
jecxz
incl
cld
jmp
call
fisttps
shl
push
in
stc
mov
mov
cltd
sahf
int3
scas
adc
xchg
mov
inc
jbe
sbb
xor
cmp
aaa
cld
add
mov
or
push
loop
sub
pop
cmc
das
rorb
add
push
ja
or
das
aas
sub
add
push
lds
insb
in
leave
mov
mov
fistpll
outsb
lods
xchg
xchg
xchg
mov
fnsave
xchg
add
xchg
cmp
clc
xor
and
jecxz
add
loopne
loopne
xlat
fmul
add
loopne
push
loope
out
loope
into
fsubr
jmp
ret
cli
icebp
std
add
jecxz
clc
out
incl
push
out
out
push
and
add
ljmp
incl
cmp
or
ljmp
jecxz
lds
add
in
loop
stc
out
out
xor
add
pop
xor
add
cmpb
adc
notb
fimull
xor
ds
pop
cmp
xor
adcb
stos
nop
or
add
fs
or
ja
jle
pop
or
fcoms
cmc
scas
pushf
mov
das
push
inc
xchg
dec
pop
and
adc
cmp
push
cmp
and
ss
aad
das
test
adc
cs
ljmp
inc
cmp
das
cmpsb
mov
sbb
adc
adc
sbb
inc
xor
add
sbb
xor
add
jmp
xor
adc
clc
repnz
call
cld
std
div
cli
add
aam
das
xor
xor
inc
push
sub
outsb
or
cmp
sbb
adc
or
ret
adc
sub
es
add
leave
ror
jg
push
inc
rorl
out
out
movb
ljmp
jmp
hlt
hlt
int3
fdivr
jecxz
out
cli
in
mov
int
aaa
cld
mov
test
leave
jmp
dec
push
jge
fidivrl
pop
pop
idivb
inc
jo
cli
or
popa
ja
xorb
ja
decl
pop
dec
outsl
je
jo
imul
loopne
pop
push
inc
adcb
jge
pop
push
rcrb
repnz
add
stos
in
mov
faddl
mov
jecxz
imull
idiv
in
js
jg
les
add
mov
shr
rcr
das
push
rcrl
enter
jl
mov
mov
mov
fcomip
ljmp
dec
mov
loope
and
sti
ljmp
cmp
add
sub
mov
jle
ja
ss
cmp
and
add
sub
sub
cmp
adc
or
add
dec
jl
sarl
push
xor
sbb
adc
pop
add
sub
jg
ja
js
pop
js
jl
data16
scas
mov
fs
jne
sub
fs
insb
dec
pop
hlt
add
and
pop
xor
je
incl
pop
and
or
pop
inc
pop
pop
or
push
inc
push
dec
jle
mov
mov
mov
add
mov
mov
icebp
les
or
ret
add
scas
fisttps
pop
cmc
mov
test
nop
mov
dec
mov
xchg
mov
hlt
hlt
cli
std
mov
mov
std
dec
push
repnz
loop
cmpsb
mov
jle
stc
in
cli
popa
and
fcmovu
enter
xchg
rolb
into
rclb
rol
ret
repz
fidivrl
rcl
rcrl
cmp
popa
push
push
and
jmp
or
and
xor
sub
xor
xor
test
add
or
daa
push
sbb
adc
decb
add
je
push
push
add
inc
dec
ljmp
or
jnp
daa
push
add
test
inc
clc
sub
in
iret
stc
mull
icebp
loope
mov
sub
sub
addr16
in
sbb
jg
adc
and
imul
sub
loope
pusha
sbb
fwait
mov
add
ljmp
pop
jmp
fcomi
mov
movsb
popa
add
dec
dec
dec
xor
cmp
ss
daa
jo
inc
inc
xchg
add
add
loop
mov
mov
sbb
xor
inc
push
mov
sbb
aas
aam
sbb
sbb
push
sub
cmp
dec
out
fcmovu
pop
hlt
loopne
fmul
sahf
enter
lcall
and
clc
fbld
add
push
pusha
or
loope
out
es
das
mov
std
inc
add
adc
imul
les
sbb
adc
adc
or
decl
prefetch
loopne
hlt
ror
lret
loope
lods
add
popf
lds
loope
mov
cli
decl
xlat
mov
test
sub
sub
leave
lret
adc
jmp
pop
mov
mov
push
sti
std
jmp
add
inc
aas
or
idiv
xor
cmp
jbe,pt
xor
cmp
pusha
mov
mov
mov
test
mov
mov
repnz
addr16
lcall
jle
shrb
and
sub
cmp
loope
push
ja
jae
fs
incl
push
jae
jo
jo
jl
mov
add
mov
jg
mov
popf
pusha
lods
xchg
mov
sti
add
incl
dec
pop
pop
dec
inc
dec
push
dec
rclb
push
push
push
adc
pop
push
pop
pop
push
push
std
mov
adc
adc
pop
inc
jmp
add
xchg
rcl
ret
iret
push
cmp
fadd
int
into
and
add
ror
cmp
fiaddl
lods
xchg
aad
push
test
sti
inc
in
mov
test
mov
sbb
push
fistps
sbb
cmp
das
sub
xor
mov
jg
cmp
sub
add
xor
or
fs
mov
fsub
adc
xor
and
lcall
jae
add
cmp
jp
xor
cmp
xor
push
loope
cs
sub
add
add
mov
in
decl
outsb
xor
push
pop
pop
add
pop
xor
stc
add
sbbb
add
ja
or
mov
lods
and
xchg
inc
outsb
mov
mov
aam
scas
mov
mov
cmpsb
out
repnz
mov
add
xchg
add
pusha
jo
mov
jg
or
in
clc
ja
mov
cmp
xor
pop
mov
aaa
or
in
std
ljmp
addr16
test
mov
push
push
pop
add
mov
aam
lods
out
mov
fsubl
cmpsl
sub
dec
and
sbb
mov
dec
dec
test
ret
scas
jp
icebp
cmp
loopne
pushl
adc
jg
sar
jnp
push
or
cmp
xor
xor
or
xchg
add
loope
neg
ret
xchg
fildl
rolb
pop
cld
out
in
or
out
dec
aaa
xor
loope
lcall
fsubs
out
add
in
test
add
jg
ja
cld
repnz
mul
flds
cwtl
fcmovb
in
int3
clc
aaa
jge
orb
jo
add
sbb
push
inc
inc
ret
mov
mov
adc
or
push
add
ss
adc
push
and
sub
repnz
mov
add
sub
and
cmpsb
mov
xor
stos
outsl
mov
and
fcomi
add
add
mov
scas
add
adc
or
addl
add
lahf
add
push
add
incb
call
mov
push
add
add
xor
pop
mov
add
push
ret
fbld
testl
push
fimuls
andb
idiv
xchg
repnz
cmp
push
add
adc
xor
clc
mov
pop
xor
fcmovu
sub
add
xor
adc
std
lock
pop
jg
lcall
add
add
add
push
add
mov
add
adc
sbb
add
jo
pop
mov
or
incl
nop
push
andb
add
test
xchg
mulb
mov
repnz
outsb
xor
repnz
jp
hlt
mov
mov
push
mov
sahf
iret
nop
or
jg
adc
ljmp
cli
fists
fmulp
pusha
add
not
not
fxch
fcmove
ret
inc
add
fisubs
out
pusha
fbstp
enter
std
fmulp
addl
into
adc
repnz
add
leave
fimull
xchg
add
xlat
mov
call
divl
xlat
xor
mov
lcall
jle
or
sbb
or
xchg
adc
pop
iret
xchg
testb
jns
ret
scas
sbb
sbbl
stc
call
stc
mov
or
hlt
mov
std
subb
xchg
call
clc
nop
pusha
push
or
cld
idiv
jmp
repz
clc
adc
hlt
out
out
icebp
or
lock
inc
clc
dec
in
repnz
mov
jmp
jmp
jmp
clc
lock
mov
hlt
xor
jmp
out
ret
std
repnz
nop
movsb
jo
hlt
in
fcomps
decb
mov
lock
hlt
testl
jmp
and
in
lcall
jmp
add
lcall
fcomi
cmc
cmc
lret
and
fdivr
xor
mov
idiv
out
inc
add
loop
aad
fdivs
sub
nop
aam
xchg
sbb
xchg
sbb
sbbl
xchg
xlat
or
iret
lock
cwtl
aad
int
cmp
or
rcl
mov
into
lret
fdivl
into
aad
icebp
sar
push
fmulp
inc
xchg
fcmovbe
ror
fdivp
add
and
enter
daa
push
clc
mov
nop
and
and
stc
or
xor
xor
xor
xor
xor
rcr
ljmp
inc
pop
pop
xchg
xchg
xchg
inc
clc
mov
sbbl
mov
xchg
mov
scas
xchg
fbstp
sbb
and
sub
pop
icebp
aaa
popa
push
cli
fcoml
mov
inc
leave
jae
xchg
in
call
out
insb
repnz
int3
pop
push
mov
bnd
jmp
xor
mov
insb
rclb
lea
mov
push
mov
rorl
add
subb
enter
xchg
and
into
jmp
fmul
ror
mov
aad
fxch
lret
adcb
outsl
out
dec
or
fcomps
add
faddl
add
cld
sbb
mov
adc
sub
adc
aam
into
iret
int3
aad
add
outsl
das
stc
ror
test
std
sbb
repz
cmpsb
not
incb
rcrb
xor
mov
sub
mov
popa
sbb
movswl
mov
inc
adc
call
or
out
aam
adc
inc
jg
cmp
push
pop
loopne
icebp
inc
xchg
cwtl
daa
data16
ljmp
lret
pushl
cld
adc
jmp
aam
clc
adc
sbb
in
fs
xor
mov
cmp
in
aam
inc
sbb
jbe
adc
push
mov
mov
call
into
mov
xor
lock
int3
push
inc
jno
shlb
and
pop
push
push
sbb
push
mov
imul
test
stos
add
add
cmp
std
inc
aas
pushl
int
push
call
xchg
ds
cmp
outsl
inc
cmp
mov
jecxz
adc
adc
mov
stos
lcall
push
test
lock
ljmp
rclb
fidivs
ja
decl
rcll
jno
xlat
mov
repnz
int3
lea
incb
sahf
xor
cltd
mov
in
into
jo
shrl
jg
jb
xor
incb
nop
sub
ljmp
push
iret
mov
scas
or
add
fwait
cltd
sahf
enter
rcr
fwait
adc
ret
mov
mov
int
mov
mov
adc
pop
sti
movsb
rcl
and
fstp
pop
push
pop
outsl
fcomip
jmp
xchg
std
mov
xor
fwait
nop
or
cs
jo
cltd
scas
test
shrl
sbb
out
sarl
push
dec
dec
push
idivl
into
mov
arpl
push
adc
push
lcall
adc
cmp
scas
and
dec
mov
add
mov
xlat
mov
add
pusha
cmp
mov
cmp
jl
loopne
cmpl
push
mov
out
mov
jns
outsl
and
ja
xor
push
adc
cmp
add
mov
inc
add
cmp
incb
jnp
into
mov
or
and
sti
ss
cwtl
mov
inc
push
es
ss
loope
inc
adc
icebp
sbb
jle
push
mov
mov
aas
ds
dec
push
jmp
fiadds
sbb
inc
aaa
fneni(8087
and
push
pop
mov
add
xor
fcoms
into
sub
loopne
add
es
add
or
lret
scas
mov
add
push
jg
pop
je
mov
outsb
ss
cmp
test
add
dec
lea
inc
daa
rclb
fs
xor
cmp
shlb
pop
les
in
enter
negl
xchg
rcr
loopne
push
xor
mov
dec
shl
testb
xor
dec
pop
add
aas
inc
into
ficomps
or
mov
add
js
and
cld
fistpl
test
andb
sbb
add
bound
mov
xor
push
add
adc
jmp
xor
clc
cmpb
not
dec
orb
ss
andb
adc
or
test
movb
stos
sti
and
stos
add
loop
pop
cld
and
push
xchg
mov
add
inc
mov
sub
dec
jb
or
add
ljmp
das
adc
fdivrs
mov
orb
aaa
xor
push
loopne
mov
sbb
mov
fcomip
stos
sbb
popa
xor
mov
es
lcall
mov
dec
js
into
fdivrl
adc
add
test
pusha
mov
mov
clc
fwait
add
sub
fdivl
add
sti
andb
inc
sti
mov
mov
lahf
in
or
lods
shrb
dec
cmpsb
mov
pop
mov
jo
in
in
xchg
aaa
lcall
das
rcrb
sbb
inc
shrb
adc
inc
pop
cs
sbb
sarl
inc
inc
push
push
push
mov
ret
mov
mov
mov
rolb
adc
cmp
das
mov
das
jl
inc
inc
inc
movb
rclb
jmp
lcall
mov
sbb
inc
add
jl
in
stos
inc
and
mov
call
mov
call
add
jmp
cltd
hlt
or
shlb
inc
mov
add
mov
rolb
lahf
jb
inc
push
jne
sub
rcll
loopne
and
adc
push
mov
xor
mov
xorl
lcall
inc
and
out
inc
sbb
adcb
mov
xor
mov
adcl
movsb
add
lds
dec
rolb
inc
sbb
add
xor
dec
xor
mov
lock
dec
data16
mov
add
or
jmp
iret
lahf
mov
pop
cld
or
pusha
inc
push
js
add
les
std
mov
sub
xor
sub
add
aas
cwtl
pop
mov
xor
shll
lods
or
mov
sbbb
int3
dec
loopne
inc
loopne
fistpll
nop
andb
dec
rorb
bound
into
mov
and
fcomip
loopne
cmp
movb
mov
lds
sbb
inc
jg
adc
rorl
sub
push
repz
mov
fs
push
shll
jmp
inc
in
mov
sub
cmovbe
shrl
scas
cmpsl
inc
adc
xor
inc
push
fildl
stos
add
inc
xadd
xor
push
popa
xor
xor
and
push
inc
ror
pusha
cs
iret
xchg
cli
pop
je
and
sbbb
ljmp
out
fwait
jg
push
bound
in
push
push
sbb
pop
inc
cmc
xchg
mov
daa
jg
sbb
lahf
push
iret
test
and
add
add
ret
pop
pushf
sbb
in
xor
cmp
push
push
cli
scas
mov
inc
add
roll
push
mov
push
cmp
jns
fucomip
ljmp
cmpb
xchg
iret
lcall
rcrb
addb
xor
mov
aaa
sub
push
mov
jecxz
scas
sub
test
mov
mov
jns
clc
xlat
jg
pushf
and
or
mov
popa
or
add
das
int3
pavgb
xor
mov
scas
shll
subb
loop
shlb
cmp
pusha
add
jmp
add
sbb
loopne
push
lods
test
jmp
js
xor
mov
cmp
jge
and
xchg
push
mov
adc
mov
jmp
add
incb
xchg
mov
jl
inc
adc
push
mov
add
xlat
and
add
xor
add
in
dec
loopne
mov
push
adc
mov
adcb
and
xor
cmp
dec
inc
push
sarb
dec
loopne
addl
and
cmpsb
inc
lods
or
jo
repnz
xor
icebp
mov
fsub
and
loope
not
push
mov
adc
ss
jmp
lock
mov
sbb
ja
add
loope
push
mov
add
and
jb
and
cmp
das
call
lahf
lcall
jle
adc
test
inc
pusha
lret
mov
add
loope
fstpt
sbb
adc
mov
inc
mov
mov
pushl
fidivrl
add
inc
int
push
in
add
shll
lahf
push
rorl
rorb
fwait
push
jg
or
test
inc
js
inc
mov
or
ja
imul
or
add
pusha
movsl
mov
call
loop
add
pop
add
lcall
iret
stos
inc
dec
repz
xchg
push
sbb
jp
mov
adc
and
jmp
adc
push
ljmp
jmp
repz
add
add
adcl
sahf
bound
pusha
adc
adc
stos
or
mov
jecxz
in
and
mov
rcrl
decl
sbb
std
adc
or
and
das
clc
das
bnd
jmp
add
int3
adc
jmp
adc
decb
lock
or
cld
mov
cli
xchg
aam
bound
jnp
xchg
pusha
pop
lock
shrb
push
into
mov
call
jg
call
scas
loopne
fdivs
cs
cwtl
jg
inc
int3
add
daa
aad
or
adc
loopne
sbb
sbb
sbb
arpl
inc
idivb
fiaddl
imulb
test
add
mov
mov
dec
mov
xor
adc
mov
lcall
jg
xor
js
mov
jae
add
ds
shlb
shll
jp
add
sbb
mov
jl
aas
mov
jo
pop
xor
mov
rcrl
call
mov
add
je
clc
mov
add
adc
sti
or
adc
sbb
stos
test
adc
iret
xchg
test
add
cltd
inc
xchg
jle
or
jb
mov
es
mov
pop
add
jno
loopne
stos
lock
aam
inc
add
xchg
pop
lock
mov
in
inc
fidivs
add
jnp
pushl
mov
outsb
aas
jnp
les
pop
jno
shr
mov
pop
lock
sub
inc
inc
push
xor
cmpb
or
ret
aas
idivb
push
les
sbb
sarl
push
mov
or
add
inc
nop
sub
js
loopne
les
cmc
scas
pushl
xor
mov
jb
shll
mov
and
ljmp
mov
inc
and
mov
mov
push
test
insl
adc
or
xchg
mov
insl
fildll
fldcw
add
xchg
cmp
outsl
dec
adc
xor
xor
mov
das
push
pop
dec
mov
movsb
mov
push
push
rcrb
mov
lret
sbb
in
pusha
and
push
inc
rolb
mov
add
or
mov
push
insl
xor
dec
bound
mov
aaa
and
shlb
pop
sbbb
ss
push
lods
sub
dec
mov
cld
sti
xor
pop
inc
and
adc
or
jnp
inc
mov
xchg
inc
push
mov
sub
mov
push
lock
shlb
in
mov
xor
or
jb
pop
js,pn
adc
in
scas
loope
dec
fwait
rcll
clc
stos
test
cmp
sub
ljmp
pop
rcl
pop
fs
xor
ss
xchg
ss
inc
jmp
add
clc
sahf
add
xor
xor
push
test
dec
lock
js
loopne
in
jo
and
call
adc
icebp
adc
orb
decb
jge
jg
into
dec
push
push
roll
int
fnstsw
cld
insl
fmuls
inc
out
iret
mov
mov
mov
push
add
loopne
mov
push
add
jo
andb
jge
mov
mov
inc
mov
push
shrb
stos
icebp
sbb
mov
inc
and
dec
test
xor
rcl
in
lods
jo
mov
adc
and
add
jp
mov
iret
mov
push
mov
push
mov
push
xor
cli
add
inc
xchg
je
bound
js
test
sar
std
lcall
cs
mov
mov
inc
mov
mov
mov
pop
xor
repz
enter
cmp
cld
in
jg
cmp
fwait
inc
das
insb
mov
in
add
addb
aas
shrb
andb
xor
sahf
mov
cli
aaa
std
inc
out
jge
loope
rcrl
dec
rcrb
inc
push
cli
ljmp
push
cmpsb
jo
mov
sub
arpl
scas
mov
mov
and
out
lock
jmp
enter
ss
pusha
andb
addb
jl
inc
push
mov
call
fildl
mov
scas
inc
loope
adcl
mov
js
cmpsl
xor
add
scas
mov
cmpsb
sti
adc
arpl
push
pushl
pop
dec
mov
out
add
movsb
inc
sbb
imul
jno
jg
jp
cld
add
cs
divb
mov
repnz
xor
in
jg
fwait
cs
inc
repnz
iret
incl
push
out
icebp
jb
scas
or
xor
stos
call
insl
in
sti
pushf
or
inc
nop
push
ret
ljmp
xchg
rolb
mov
mov
iret
stos
mov
fbstp
mov
xor
jl
mov
lcall
mov
sub
aaa
movsb
enter
pop
shrl
mov
jg
rol
jg
out
cli
mov
pop
movsb
xchg
push
and
mov
movsl
xor
aad
sbb
test
sar
pushl
and
mov
cmp
orb
leave
dec
jo
js
out
xor
xlat
lahf
mov
push
sbb
push
cmpsb
push
mov
outsl
incl
je
sbb
xorb
addb
dec
addb
mov
jge
add
pop
jl
add
mov
nop
cli
shlb
and
stos
push
imull
xchg
inc
pop
out
push
incl
outsl
xor
addl
iret
xchg
pusha
lods
call
and
adc
cmp
mov
inc
push
xchg
in
in
in
or
add
das
push
scas
in
out
loopne
mov
add
mov
xchg
mov
out
loopne
add
fcomip
add
movsl
inc
fadds
xor
pushl
inc
cld
sub
xor
inc
add
adc
imull
arpl
loop
mov
into
adc
inc
iret
pushf
ds
into
mov
jmp
inc
push
mov
mov
adc
jg
incb
test
add
in
js
or
ljmp
inc
hlt
sbb
jbe
xchg
outsb
outsb
mov
push
in
in
push
push
push
mov
mov
std
iret
mov
add
iret
xchg
or
or
pop
out
mov
sbb
push
jmp
sbb
cwtl
or
add
fdivrl
je
mov
es
cwtl
stos
push
add
adc
dec
inc
lret
aas
push
push
push
popa
adc
pusha
adc
mov
je
mov
jnp
add
inc
iret
and
lock
and
js
jl
push
or
aas
pusha
loopne
or
stos
clc
pushf
pop
and
mov
data16
mov
lcall
fs
data16
mov
push
push
mov
not
ja
andb
jge
lcall
sbb
out
out
sarl
in
pop
subb
orl
inc
or
outsl
mov
or
int
jne
divb
add
add
xor
add
cmc
or
mov
les
mov
pop
mov
sub
js
or
aaa
push
fisttpl
jo
cmpsl
cmp
push
or
inc
ljmp
xor
inc
addb
mov
or
orb
mov
nop
loopne
adcb
and
in
jge
add
sub
inc
mov
jl
xlat
sub
clc
mov
js
ljmp
bound
mov
nop
movsl
in
bound
mov
add
sbb
pop
jb
aas
orl
loopne
inc
ja
call
mov
and
shlb
or
push
add
call
dec
lcall
jle
dec
ds
push
adc
adc
movsb
ret
or
add
stos
rolb
ljmp
out
movl
pop
jl
jg
xor
push
push
cmp
sbb
roll
shll
add
xor
lahf
ret
lcall
lahf
stos
shll
mov
negb
add
out
clc
add
mov
cmp
pusha
iret
mov
xor
fisubrl
mov
lea
arpl
nop
sub
adc
ss
or
jo
jmp
push
jmp
lods
roll
mov
add
adc
jecxz
push
inc
test
push
cli
js
or
push
push
js
jne
pop
out
push
rcrl
xlat
ss
into
roll
mov
movsl
call
sbb
dec
in
es
inc
push
xchg
add
lods
pop
mov
xor
jmp
add
add
rolb
idivb
aam
mov
aas
and
pop
clc
mul
mov
xor
scas
push
push
rorb
outsl
jmp
xchg
iret
push
sub
cwtl
ljmp
inc
movsb
fildl
scas
pop
test
test
add
fcmovne
aam
add
add
xor
lret
push
dec
rolb
lcall
pop
pop
scas
rorw
adc
adc
std
adc
subb
ss
or
jle
mov
or
ss
pushw
les
pop
mov
loop
nop
lds
push
ss
jmp
xor
jmp
mov
ret
adc
mov
adc
and
jl
pop
sbb
cmc
into
jb
and
mov
into
sbb
loopne
jge
hlt
movsl
add
pusha
pop
pop
movsb
add
pop
push
push
cli
adc
gs
cmp
push
cli
orb
xor
adc
ret
mov
dec
les
into
xor
add
and
mov
mov
imul
decl
imul
cmpsb
inc
stos
inc
cmp
outsl
in
fldt
repz
inc
push
inc
add
mov
orb
arpl
inc
add
mov
sub
ret
sahf
ja
inc
and
cmp
pusha
movsb
add
xor
in
ljmp
loope
test
add
and
xor
nop
xor
add
jmp
call
push
mov
bound
inc
adc
call
ss
sbb
dec
inc
inc
jne
ljmp
push
mov
sub
jbe
jae
call
mov
iret
hlt
xor
and
out
push
arpl
push
scas
add
push
nop
inc
push
fadds
add
add
push
sub
incb
lea
pusha
sarl
dec
xor
add
cmc
fwait
outsb
cli
adc
add
stos
jp
inc
xor
loope
add
add
test
insl
mov
mov
xor
cmpsl
mov
pusha
call
or
leave
add
subl
dec
mov
inc
add
dec
xchg
jns
les
inc
in
sub
addb
adc
int3
mov
mov
ret
xor
call
xchg
rorb
jg
push
jg
add
mov
or
jbe
insb
rcrl
mov
cmp
add
jle
and
ss
lahf
xchg
adc
ds
cmpb
inc
and
lahf
stos
and
push
movsl
and
inc
lcall
movl
test
lods
sub
shl
sub
lahf
data16
or
in
fwait
jmp
pop
lret
push
outsb
ljmp
push
xchg
mov
mov
lahf
xchg
cmp
mov
add
mov
adc
test
into
mov
cmpsb
in
mov
stos
rclb
pop
out
mov
sub
sub
adc
adc
mov
in
push
adc
repnz
out
sar
aas
push
sahf
sbb
mov
dec
icebp
ss
dec
dec
enter
lret
pusha
xchg
mov
ljmp
push
and
mov
sbbb
sbb
cld
pop
sub
dec
dec
sarl
sub
inc
mov
mov
stos
add
xchg
add
and
jb
mov
pusha
xor
xchg
in
dec
add
jmp
lcall
shll
adc
pop
add
scas
add
stos
testb
pop
jmp
data16
inc
rcll
pop
pop
sti
out
push
scas
inc
xorb
mov
ss
pusha
pop
sub
dec
out
shrb
sub
jns
mov
pop
es
aad
scas
push
inc
mov
push
sti
lret
clc
decl
and
or
or
pop
loopne
add
fwait
hlt
push
enter
and
add
adc
sub
inc
sbb
push
cld
push
push
jns
inc
adc
cmp
pushf
cmp
mov
rcll
mov
dec
xor
sub
fwait
das
jl
xor
inc
loopne
inc
add
add
xor
mov
add
scas
mov
xor
fisttps
cld
push
mov
pop
cmpb
sbb
inc
cmpsl
frstors
cli
std
mov
in
jge
mov
in
lock
push
ud0
and
ja
lahf
inc
pusha
and
inc
fmulp
shrb
in
adc
movsb
lods
xchg
or
les
decl
sub
ret
nop
add
adc
test
sub
outsl
sub
and
add
daa
xchg
outsl
pop
jge
ljmp
mov
and
add
orb
and
mov
mov
jnp
sbb
insb
pushf
jno
sbb
adc
call
cs
mov
out
orb
mov
mov
and
xor
in
push
inc
or
in
or
int
sbb
push
sub
cltd
roll
mov
pop
pop
cmpsl
push
mov
xorl
lcall
icebp
add
adc
inc
add
out
push
iret
mov
add
stos
mov
jmp
dec
xor
mov
add
int3
imul
enter
xor
mov
pop
mov
mov
dec
test
std
fwait
enter
xor
adc
test
decl
pop
loop
mov
mov
stc
movb
cld
in
mul
add
test
mov
jno
push
jle
add
lock
push
add
jns
popa
sbb
and
cmp
ljmp
cmp
mov
divb
mov
add
or
xchg
mov
cli
jmp
xor
push
push
push
ds
call
icebp
cmpsb
out
push
adc
jl
rcrb
js
push
push
sahf
je,pt
add
movsb
test
das
dec
mov
test
add
adc
in
das
inc
xchg
add
loopne
lcall
sbb
xchg
aaa
mov
cmc
mov
sbb
mov
pushl
push
jb
dec
adc
ss
adc
jmp
fs
clc
xor
push
fcomip
add
push
int3
mov
and
inc
push
rcll
mov
inc
nop
or
and
jbe
scas
cmp
int
ja
divb
sarb
mov
mov
lods
push
test
jno
cld
add
std
jg
jmp
pop
stos
ss
cmp
out
mov
int3
mov
dec
add
mov
pop
push
std
sub
mov
mov
into
jnp
jle
cmpsb
push
add
xchg
cmp
xchg
push
mov
push
adc
popa
or
mov
add
fistpl
or
lods
xchg
mov
or
push
lret
or
stos
bound
push
popa
lds
incl
push
sti
push
pop
push
push
add
xor
scas
cmp
dec
mulb
sbb
pop
jge
mov
nop
jo
inc
loopne
divl
mov
ss
mov
stos
lcall
cmp
mov
jg
cltd
xchg
cmpsl
add
sub
adc
mov
mov
push
push
ljmp
jbe
fdivl
mov
into
icebp
mov
ret
cmp
das
sti
shll
push
push
xchg
mov
imul
rcl
shll
scas
arpl
or
and
pop
pop
dec
negb
inc
and
stos
rclb
xor
mov
fisttps
cmp
mov
push
jo
or
cmpsb
xchg
jecxz
sarb
jmp
sbb
popa
nop
push
sbb
xor
shrb
jecxz
lds
mov
std
lcall
cltd
mov
fstps
add
add
leave
into
lock
mov
inc
cmp
fidivs
push
xor
aam
orb
inc
js
in
push
out
xchg
orb
sahf
and
outsb
mov
xor
mov
add
and
icebp
ret
sbbb
ret
push
or
mov
ret
adc
idivl
ljmp
lahf
push
fwait
jo
ret
adc
aas
lahf
cmp
pop
lods
fwait
mov
mov
mov
adc
scas
clc
stos
call
add
dec
and
inc
jae
sarl
in
xor
or
shrb
jmp
push
ds
sar
jg
call
add
fidivs
pushl
pop
jno
bound
inc
and
stos
mov
stos
fidivrl
sub
dec
or
iret
movsb
loopne
mov
bound
xor
lock
sub
xor
push
mov
adc
cmpb
sbb
inc
shlb
nop
in
dec
mov
fistl
out
push
add
sti
push
push
mov
add
pop
rolb
testb
mull
rorb
ds
icebp
ljmp
rcll
or
into
mov
mov
jo
inc
push
mov
sub
sub
lock
and
cmp
dec
jmp
adcb
mov
mov
mov
es
add
add
sbb
incl
rcl
or
push
cmpsl
inc
add
mov
nop
cmp
xchg
icebp
mov
mov
in
scas
popf
andl
scas
sbb
inc
jmp
mov
push
aad
sbb
dec
mov
mov
into
add
rclb
int3
mov
push
sub
adc
scas
int
das
add
add
push
xor
ds
add
add
jmp
xor
movsl
add
pop
rcl
mov
xor
jge
sbb
and
adc
cmpsl
add
outsl
push
inc
mov
mov
sbb
scas
jb
hlt
xor
adc
push
in
push
in
add
call
inc
add
push
iret
mov
lods
adc
aaa
add
mov
dec
loopne
mov
add
xchg
dec
mov
mov
add
xchg
cs
adc
test
push
cld
fldl
es
push
icebp
dec
add
dec
mov
add
sbbl
dec
pusha
rcll
xchg
push
add
and
ds
xor
imulb
fiadds
and
ljmp
pop
bound
jp
add
in
test
push
and
xor
dec
sar
add
add
add
mov
xchg
ja
xchg
mov
add
roll
mov
mov
mov
or
mov
mov
lods
mov
cmp
lahf
insl
stos
lcall
dec
xchg
push
push
mov
shlb
shlb
stos
ja
push
sahf
jecxz
pusha
leave
add
fiadds
sub
mov
lods
xchg
scas
mov
addl
and
push
sub
adc
je
mov
stos
dec
jl
testl
xchg
adc
xchg
in
incl
loop
sbb
inc
ds
cmp
push
je
and
mov
add
js
sbb
push
or
lea
inc
or
push
and
outsb
jbe
cmp
ljmp
decl
icebp
stos
xorb
ja
mov
pop
add
lret
add
or
clc
pop
jmp
cmpb
pop
add
clc
out
and
push
test
adc
mov
pop
ret
int3
push
jae
adc
dec
mov
lods
add
or
imul
std
pop
mov
in
out
data16
js
in
ljmp
scas
xor
inc
push
mov
loopne
pop
ljmp
scas
shrl
dec
repz
add
addl
shrl
adcb
xor
pop
sbbb
mov
dec
in
mov
push
mov
mov
jp
adc
or
sbb
add
adcb
int
decb
add
dec
nop
dec
xor
jno
shll
mov
sti
and
leave
push
dec
shlb
mov
jp
mov
push
cmp
or
data16
mov
shl
aaa
enter
int3
orb
clc
lods
iret
stos
nop
jp
loope
add
in
and
outsb
sub
incb
jb
addb
and
push
pop
inc
cmp
mov
fadds
or
out
and
mov
or
xor
dec
push
push
sbb
iret
jecxz
push
jg
ss
and
jmp
arpl
add
and
lcall
add
loopne
mov
in
pushf
cli
dec
orb
and
aad
mov
and
inc
test
sarl
lods
outsl
mov
mov
and
inc
adc
push
insl
aam
mov
sete
and
jo
jne
insb
jb
or
dec
call
clc
pop
jbe
scas
loopne
movb
sbb
loopne
push
cmp
mov
daa
pop
inc
pop
and
aam
mov
and
add
cmp
mov
shl
sub
call
test
mov
bound
mov
inc
jmp
inc
jb
push
insl
cli
cmp
mov
mov
xor
movsb
pushl
dec
jl
lods
mov
inc
sarb
mov
fstpt
rclb
mov
xor
pop
mov
add
add
add
adcl
in
mov
out
sub
and
lock
fdivrp
jmp
sub
out
mov
cmpsb
pusha
sub
and
and
jge
add
jg
xor
jge
jbe
dec
mulb
xor
add
incl
loope
in
xor
jge
and
push
dec
inc
jg
fistps
loop
and
mov
and
lcall
and
repz
push
mov
cltd
shlb
sbbb
push
sub
fdivr
push
loop
and
inc
add
or
mov
lea
sub
test
or
pop
mov
jo
or
inc
push
mov
cmp
mov
aad
inc
int3
ror
adc
or
add
mov
lods
out
or
lods
rolb
roll
push
jmp
sub
push
test
aam
sub
out
mov
mov
into
and
add
inc
push
cmc
fisttpl
je
cld
lret
dec
xlat
mov
xchg
ficomps
and
sub
decb
mov
mov
enter
ljmp
pop
lock
xor
inc
sbb
into
mov
and
push
ret
push
ds
dec
orb
add
add
cli
incl
jmp
push
xchg
in
dec
push
lods
call
sub
add
sub
adcb
inc
shlb
lret
mov
mov
adcb
mov
xor
test
rolb
pusha
test
push
out
or
mov
fdiv
ljmp
fwait
xor
or
arpl
sbbb
loopne
scas
adc
fldl
shrl
adc
call
mov
mov
lcall
pop
mov
add
jp
add
divb
cmpsl
xor
iret
dec
cmpsl
test
out
pop
add
fwait
outsb
fisttps
sub
jo
in
xor
out
loopne
fistl
mov
in
es
or
in
loopne
loopne
xor
sub
ljmp
mov
xor
adc
jb
out
test
xor
loopne
enter
inc
jmp
inc
lods
or
xor
jo
jg
stos
jb
ja
inc
push
stos
in
mov
and
int3
vhaddpd
pop
or
xchg
adc
dec
cld
orb
add
rclb
vcvttsd2si
adc
push
ret
cmp
inc
pop
ljmp
jg
out
shll
add
repnz
or
dec
imul
sub
jmp
mov
xor
push
loopne
lods
nop
pop
scas
pusha
xor
push
mov
pusha
sbb
adc
decl
mov
inc
stos
je
cmpsl
dec
clc
insl
and
cmpsl
xorb
mov
adc
xor
jbe
nop
jnp
je
mov
pop
js
fldt
xor
inc
sbb
mov
mov
jnp
fnsave
cld
scas
adc
or
shll
push
push
inc
sbb
pop
mov
push
mov
mov
jmp
mov
cmpsl
lock
jg
xor
add
or
xor
dec
xchg
ret
ljmp
dec
lods
jmp
jno
xchg
cmp
mov
pop
mov
push
jl
jg
pusha
mov
or
pop
push
fdivl
es
scas
pop
mov
subb
call
add
add
add
jl
mov
mov
xchg
mov
call
dec
mov
lcall
iret
mov
adc
clc
jg
int
loopne
add
adcb
andb
ret
mov
call
std
jg
repnz
inc
add
xor
pusha
sahf
xchg
jmp
dec
pusha
clc
fistps
mov
mov
xchg
push
push
xchg
popa
test
cmpsl
dec
jge
add
shll
pop
cmc
fists
lcall
scas
andb
jle
xchg
cmpb
jmp
add
mov
dec
and
insl
into
cli
rolb
pop
out
add
orb
push
insb
std
enter
lea
fiadds
les
or
into
push
jno
mov
inc
mov
push
push
adc
call
loope
mov
scas
ret
icebp
dec
test
fs
or
and
cmp
mov
mov
pop
add
or
dec
into
or
clc
aaa
mov
arpl
and
lds
adc
mov
xchg
mov
mov
mov
test
xor
mov
pusha
add
jo
pop
fnsave
adc
pop
out
dec
ljmp
rcr
pop
mov
push
sub
outsb
pop
divb
push
fwait
nop
cs
xlat
aaa
mov
mov
adc
and
inc
jl
scas
lock
push
adc
sbb
andb
mov
push
sarb
into
pop
shll
mov
jns
mov
dec
add
jecxz
jmp
mov
cmpsb
push
jbe
mov
mov
fcoml
adc
jb
jo
dec
add
mov
xor
jne
sub
call
add
push
cmp
mov
pop
inc
loope
fiaddl
mov
mov
sarl
jae
push
push
add
xor
out
shlb
mov
or
sub
jae
sub
inc
adc
mov
out
ds
rep
and
imul
push
xor
ja
inc
push
int
xor
mov
sub
lock
mov
nop
add
inc
shl
mov
jge
cmp
leave
gs
sbb
andb
xchg
lods
loope
rolb
jo
mov
cmp
adc
insb
into
shlb
jp
inc
xchg
movsl
mov
add
push
pop
addr16
mov
js
ss
call
decl
lret
shlb
shrb
xor
daa
add
and
loopne
mov
xor
xchg
jne
add
ljmp
push
cmp
add
mov
inc
xor
pusha
rclb
xor
rolb
xor
add
sti
adcb
stos
jae
pop
dec
xor
xchg
pop
lock
js
and
cmpsl
add
pusha
and
jmp
decl
mov
dec
xor
inc
roll
push
pop
push
incb
add
cmovae
add
dec
mov
outsl
ljmp
cli
mov
and
lret
aam
loope
cmp
inc
cld
decl
jnp
dec
xchg
ds
scas
xorb
cmpsb
scas
jb
inc
pusha
push
popl
lds
decb
loopne
sbb
xor
inc
push
add
push
repnz
pop
sub
add
out
or
je
inc
ret
dec
out
mov
sbb
jb,pt
mov
inc
adc
pop
push
mov
scas
fidivl
ss
cmp
scas
cmp
xchg
adc
pusha
and
in
decl
adc
jnp
test
push
push
dec
cs
add
mov
push
cwtl
in
arpl
push
cmp
imul
mov
add
adc
rorb
jmp
sbb
add
sar
inc
pop
cli
add
int
clc
sub
xor
decb
into
add
decl
jle
mov
xor
mov
aas
fbld
push
jge
andl
in
lods
mov
add
pushl
cltd
jo
arpl
mov
out
rorb
scas
jecxz
dec
cld
mov
fdivrs
and
daa
xchg
cmp
data16
ljmp
ljmp
push
pushf
in
mov
push
roll
mov
cmp
cmp
jnp
mov
sub
add
add
add
imul
bound
scas
clc
lds
inc
and
mov
pusha
clc
in
ljmp
push
add
mov
xor
add
pop
and
sbb
movsl
mov
clc
mov
cmp
std
add
adc
test
add
or
xor
decl
scas
add
lea
adc
sub
mov
lock
mov
insb
lods
push
jmp
mov
gs
roll
push
mov
dec
dec
loop
mov
mov
push
into
mov
push
inc
inc
or
inc
notl
cmp
xlat
outsl
push
fsubrp
addl
inc
js
add
add
subb
aaa
add
mov
mov
jle
pop
add
out
roll
lea
dec
push
push
sub
add
mov
sahf
or
fwait
pop
shlb
cmpsl
xchg
cmp
xchg
in
rolb
jecxz
sub
add
scas
js
jl
call
or
adc
pop
xor
add
lcall
add
ret
rorb
aas
ficompl
push
adc
scas
mov
int3
mov
add
xchg
pusha
stos
jno
scas
and
mov
mov
and
loopne
mov
mov
push
subb
add
das
add
js
aaa
and
xor
add
push
add
mov
push
incb
lock
in
jae
addr16
jl
addr16
xchg
in
mov
push
cmc
adc
out
jns
int
aaa
mov
add
mov
cmpsb
mov
push
mov
mov
into
movsb
push
es
mov
sbb
adc
shlb
or
inc
jle
leave
push
je
add
mov
inc
mov
add
outsb
inc
mov
dec
add
mov
cmp
cs
mov
dec
mov
inc
aas
push
ficoml
mov
outsb
scas
xchg
xorb
and
dec
jp
pop
add
mov
iret
adc
or
mov
mov
xor
or
xor
sbb
sub
add
into
lds
add
iret
xor
stos
add
add
xor
lahf
aaa
fwait
mov
xchg
adc
inc
lcall
add
test
outsb
adc
mov
lock
cld
shrb
push
sub
add
add
cld
or
add
iret
sahf
xchg
scas
int
push
jns
sub
into
sahf
mov
call
add
jmp
std
xorb
out
inc
pop
mov
or
fbld
ret
mov
std
or
dec
mov
mov
dec
jle
mov
mov
inc
add
add
dec
test
dec
or
mov
ret
mov
push
add
push
xor
push
call
and
sti
mov
push
aad
adcb
sbbl
rorl
add
shrb
hlt
test
or
mov
or
std
inc
xorb
rolb
add
cmp
test
outsl
adc
js
xor
push
mov
aad
ret
xor
fs
pop
pop
push
fadds
andb
pop
and
xor
decl
push
push
mov
add
inc
add
lcall
sbb
or
add
sbb
jbe
int3
mov
push
inc
aaa
mov
cli
fsub
mov
pop
or
inc
xor
inc
mov
push
cmp
in
add
mov
addb
stc
roll
pop
sbb
fwait
or
cltd
or
cmp
mov
mov
mov
xor
or
xchg
inc
mov
dec
adcl
add
mov
and
cmpsl
mov
ss
cmp
hlt
mov
push
add
dec
loop
int3
inc
ljmp
imul
nop
pop
jge
int3
mov
sub
adc
ret
sub
sbb
jnp
fistpll
out
xorl
mov
pop
cmp
mov
push
cmp
mov
push
cmp
addr16
sti
cmpsb
ffree
sarl
pop
ljmp
jg
or
add
push
cmp
pop
ljmp
pop
add
outsl
mov
popa
inc
ss
adc
incl
inc
into
loopne
mov
adc
add
mov
push
pusha
js
cmpsb
cmp
into
test
add
push
movsb
push
cmp
loop
lock
xorb
pop
inc
and
rclb
dec
arpl
cld
inc
dec
adc
sarb
or
mov
sti
sbb
outsl
stos
mov
rcrb
add
jb
popl
mov
and
xor
fcomip
add
int3
mov
mov
cmp
inc
mov
lcall
mov
ss
mov
inc
mov
jb
testb
jbe
js
jp
rcpps
pusha
inc
xor
add
mov
movsl
or
jg
pop
pop
cmp
mov
es
mov
divb
jge
out
adc
ljmp
mov
pop
mov
repnz
mov
push
insl
push
shrl
cmpb
mov
xchg
ss
cwtl
clc
jmp
or
pop
or
push
mov
adc
out
cmpb
cmpb
repz
or
ss
decb
int3
in
sbb
addb
cld
fildll
rolb
cmp
movsl
orl
mov
and
and
inc
les
sbb
pusha
push
mov
push
jg
adc
cmpsb
aaa
xor
push
dec
mov
push
loopne
call
enter
aas
repnz
xchg
add
test
outsb
mov
frstor
sahf
fstl
andb
cwtl
cmp
mov
jne
jae
xor
outsl
les
push
and
mov
insb
mov
loopne
dec
lds
addl
cmp
lcall
loopne
add
pop
popa
inc
ret
cmp
and
lret
add
push
jmp
mov
mov
mov
pushf
push
dec
sarb
outsb
adc
inc
mov
loopne
subb
nop
mov
mov
dec
cwtl
add
mov
mov
test
add
arpl
jns
push
loope
push
loope
inc
popf
bound
inc
lahf
and
sub
adc
push
pop
insb
or
xor
fs
add
addb
bound
mov
add
sub
pop
add
out
cmp
shll
mov
adc
push
xor
push
push
mov
adc
andb
aas
mov
cs
pop
mov
ja
dec
inc
mov
xchg
rcrb
add
aas
rorb
add
test
outsl
mov
mov
cmp
xchg
dec
adcl
call
cmp
andl
mov
cmp
mov
push
xor
rolb
or
inc
push
hlt
dec
int
or
decb
mov
add
sbb
dec
add
mov
insl
inc
xchg
or
addr16
addb
push
imul
inc
dec
jge
mov
inc
or
or
add
add
ret
cli
dec
mov
adc
adc
testl
and
adc
outsb
clc
mov
cmp
mov
bound
sbb
jbe
xor
add
divb
or
lahf
xor
mov
inc
push
cld
cmpsb
loop
xor
arpl
das
sub
push
add
mov
adc
and
xor
icebp
or
in
push
out
cs
jnp
cmp
jle
xor
add
es
push
clc
add
dec
add
inc
push
cli
sbb
pop
fdiv
scas
xor
pop
push
push
nop
insb
ds
mov
pop
xor
into
std
iret
or
mov
roll
enter
ret
es
or
cmc
mov
fprem
stos
out
push
push
jo
push
enter
push
add
clc
mov
pushw
fldt
add
push
cs
nop
inc
out
push
sbb
add
xor
and
out
push
and
jnp
ljmp
mov
loope
mov
add
sbb
cmp
repnz
mov
aad
push
mov
push
push
inc
pop
adc
mov
jnp
clc
stos
jg
movsb
jae
in
push
fidivs
divl
dec
adcb
add
pop
lret
mov
sub
inc
jo
add
sbbb
int3
data16
push
add
loope
or
inc
loop
shlb
jmp
jae
movsb
mov
adc
cs
stos
mov
mov
xchg
addb
adc
es
mov
inc
mov
aaa
sbb
jl
cld
xor
inc
cld
lcall
int
mov
int
in
mov
or
dec
loop
xchg
mov
ss
lock
mov
loopne
xchg
push
add
rep
xor
cmp
inc
mov
aam
sub
cmp
into
mov
adc
mov
daa
inc
ds
add
inc
arpl
pop
push
ret
movsb
mov
call
lods
xor
mov
loopne
dec
nop
jb
and
incl
pop
rcrb
ss
pop
jecxz
mov
inc
jg
push
add
add
push
adc
add
mov
xchg
sbbb
adc
stos
test
xchg
nop
nop
and
ja
idivb
adc
or
subb
dec
xchg
mov
add
push
sub
mov
pusha
mov
shlb
or
xor
or
cmc
inc
pop
jo
jg
push
sub
add
shll
mov
lods
jl
sbb
sbb
pop
jo
lock
cmpsb
push
adc
int
das
mov
or
adc
mov
jo
inc
add
push
cmp
adc
mov
cmp
add
in
decl
mov
add
jo
add
cli
adc
pop
lock
mov
in
shll
adc
in
pop
mov
jb
loopne
fimuls
inc
or
pop
inc
or
scas
or
ss
mov
popa
mov
imul
cmp
mov
sbb
or
lods
mov
mov
cmp
mov
push
sub
add
add
mov
pop
fwait
nop
cmpsb
xchg
fbld
icebp
adc
sbb
adc
sbb
add
test
dec
imul
inc
jl
sarl
push
rcrl
pop
add
lahf
mov
xor
clc
incl
jg
rclb
and
lret
scas
mov
mov
add
popf
into
mov
mov
mov
adc
fwait
sti
addb
push
inc
cwtl
mov
and
shl
in
or
subb
add
pusha
xor
xor
dec
adcb
add
inc
add
aad
in
mov
sbb
popf
cli
xor
add
or
jnp
outsl
add
add
push
or
and
mov
nop
bound
mov
jmp
fwait
loope
xor
cli
xorb
push
icebp
ret
and
daa
inc
sub
mov
sub
adcb
pop
in
out
xor
xchg
pop
adc
pop
jb
push
mov
inc
push
pop
into
lret
shrl
test
ja
ss
add
add
out
xor
inc
or
stos
ds
add
or
decl
add
imul
sbb
je
adc
sub
push
dec
in
jmp
ret
mov
cmp
fistl
sub
push
or
movsb
mov
add
mov
in
xorb
mov
in
push
shlb
add
icebp
add
jo
nop
pop
mov
sbb
lcall
mov
add
push
or
inc
cmp
stos
clc
call
pop
mov
iret
pusha
xchg
loopne
mov
addl
inc
ja
or
mov
push
popf
mov
sarl
push
lods
xor
call
mov
mov
add
pop
or
mov
cmp
pop
mov
cmp
in
add
inc
mov
or
imulb
xorb
push
mov
pusha
ss
inc
push
mov
fsubs
jg
repz
dec
dec
js
xor
mov
call
and
xor
mov
out
inc
jge
incb
push
icebp
pop
cmc
pop
push
loopne
adc
cmp
mov
add
into
imulb
imul
testb
mov
jb
pop
jno
inc
and
popa
sub
aas
call
dec
shll
test
ss
mov
aam
ret
jne
lea
insb
inc
push
dec
xor
pop
shrb
ret
jge
add
adc
xor
mov
add
addb
sbb
inc
in
ljmp
ret
add
int
mov
xor
scas
pop
inc
or
add
rclb
in
int3
push
insb
xchg
les
outsl
push
fwait
testb
xor
movsl
out
movl
xchg
insl
inc
aas
or
int
dec
icebp
add
fdiv
add
xchg
in
add
outsb
xor
mov
shll
orb
cld
mov
mov
into
dec
int3
dec
fnsave
stos
fnstsw
test
stos
xchg
and
addb
dec
enter
mov
test
add
jle
add
test
in
inc
sub
test
add
or
mov
jbe
inc
iret
mov
jae
xchg
adc
test
cmpsb
add
addr16
cmp
xchg
test
mov
icebp
in
push
in
mov
dec
mov
mov
mov
roll
sahf
push
jecxz
inc
inc
into
add
push
xor
add
sub
xchg
mov
xchg
scas
nop
int3
add
ljmp
adc
fbld
loopne
pop
add
adc
add
jmp
adc
mov
xchg
lock
add
wrmsr
hlt
mov
test
sbbl
xor
mov
dec
jmp
add
xchg
add
push
ret
clc
add
subb
inc
decb
popa
pushf
xor
lds
mov
into
adcb
lods
add
push
inc
sub
mov
add
dec
inc
xor
pop
insb
scas
addb
or
je
mov
jo
and
mov
mov
addb
dec
push
add
jo
add
inc
and
mov
shr
xchg
mov
andb
cmpsl
mov
inc
sbbb
push
mov
inc
push
cld
pusha
inc
int3
mov
in
mov
in
ss
je
or
shrb
adc
stos
faddl
xor
int3
lock
scas
lcall
sbb
stos
mov
or
in
add
cmp
sbbb
jp
mov
das
repnz
mov
or
sbb
cmp
adc
arpl
mov
add
add
clc
mov
lret
lods
mov
loopne
mov
popa
adc
mov
aam
fwait
ss
xor
inc
adc
inc
cmpb
push
add
in
fadds
clc
mov
cmp
ret
movb
and
pop
jbe
adc
adc
push
scas
ss
fisubs
push
into
add
stos
pop
pop
add
inc
adc
sbb
mov
cwtl
mov
xchg
mov
push
ja
addl
sub
adcb
mov
add
inc
push
inc
call
push
cld
inc
xor
ja
dec
loop
ret
and
les
mov
adc
rolb
int
inc
add
ret
mov
fidivs
in
mov
leave
in
js
loope
dec
and
icebp
scas
sarb
fwait
iret
inc
add
test
ret
xor
fwait
jo
filds
push
int3
andb
cli
loop
mov
into
add
mov
cmpsb
mov
jg
mov
mov
nop
arpl
mov
and
aaa
add
and
xchg
adc
fiaddl
pop
cld
adc
jge
mov
int
ss
in
jnp
dec
add
ret
or
mov
xchg
mov
int
sbb
sbb
add
outsb
or
push
fmuls
sbb
inc
sti
fdivl
inc
add
add
cmp
cld
add
in
xor
adc
push
stos
push
xchg
dec
adc
pushf
hlt
lods
cwtl
add
or
sahf
clc
cmp
ja
push
mov
hlt
into
pusha
dec
in
push
mov
add
push
pop
add
add
rclb
clc
jno
lret
adc
cmp
dec
rcr
or
dec
jp
pusha
fnstsw
mov
push
cs
or
cs
pop
and
and
fadd
inc
fsubrs
mov
or
rolb
mov
fisubrs
cmpb
add
ret
movsb
ss
outsl
pop
sti
pusha
add
inc
shll
jg
data16
add
iret
mov
lahf
and
call
repnz
mov
add
mov
mov
mov
mov
addl
and
scas
and
ret
pop
or
jecxz
pop
push
add
mov
mov
mov
loope
fwait
inc
insl
adc
lods
and
and
cmpsb
clc
cmpsb
mov
mov
xchg
inc
cmpsl
pop
sub
jmp
xchg
in
pusha
jmp
loop
xor
mov
xchg
xchg
pop
mov
lock
jle
and
pusha
push
push
call
aam
add
and
repz
lds
js
clc
mov
aam
scas
rcll
cmp
adc
jl
mov
lret
scas
dec
test
mov
cmpb
mov
loopne
mull
dec
into
or
mov
loope
rorl
jmp
test
fwait
in
pusha
xor
mov
je
xor
dec
in
inc
mov
mov
incl
jae
add
sbb
mov
and
out
and
and
inc
mov
mov
push
inc
mov
push
inc
push
addr16
inc
popa
aas
push
jbe
popf
les
dec
mov
adc
addb
test
imul
test
imul
push
inc
in
jmp
rcll
adc
jmp
push
mov
fists
in
cmpb
push
sbb
push
pusha
add
outsl
sbb
or
js
xchg
add
mov
mov
scas
inc
mov
rolw
sbb
add
mov
and
ret
adc
aam
or
or
inc
mov
sub
andb
inc
into
cmp
jmp
push
in
mov
in
fbstp
lds
inc
push
cmc
xor
std
lcall
in
in
stos
shll
inc
jl
adc
or
inc
sub
pop
push
in
addr16
in
add
mov
loop
in
mov
adc
sti
mov
jmp
mov
cmp
mov
enter
ljmp
add
subb
subl
shll
shll
sbb
aam
inc
mov
imul
mov
push
int
inc
add
and
lahf
subl
into
mov
mov
adc
jnp
mov
add
stos
jmp
adc
xor
push
loope
stos
mov
push
pop
loopne
subb
jae
ss
aas
or
sarb
inc
inc
aaa
loopne
xor
sbbb
fucomi
call
inc
repnz
rorl
mov
dec
add
nop
mov
mov
adc
dec
out
call
mov
add
sbb
pushf
inc
mov
add
outsl
mov
mov
loope
xchg
aas
scas
pushl
pop
cmc
call
adc
shrb
mov
insb
jle
repz
inc
mov
cmpsb
xchg
add
fildll
inc
in
or
shlb
add
xor
and
mov
lock
ss
ds
nop
pop
jl
add
xchg
loopne
aaa
add
mov
xor
inc
pop
add
decl
jo
cmp
mov
mov
nop
addr16
mov
xchg
int
xor
mov
incl
mov
sti
leave
push
loopne
add
rclb
hlt
outsl
mov
sub
pusha
add
inc
push
xor
jg
pop
add
adc
mov
mov
lock
inc
lock
lods
pop
mov
inc
push
pop
addb
pop
call
fbld
mov
or
out
xor
mov
popa
ljmp
cli
xor
inc
ss
add
fisttpl
frstor
xor
push
pop
push
cwtl
sbb
push
movsb
ret
mov
mov
push
mov
call
jle
adc
add
push
cmpb
int3
mov
add
aaa
into
dec
adc
std
push
mov
psrld
test
pop
dec
mov
push
ljmp
fdivrl
add
jo
dec
pushl
into
add
aam
mov
push
cwtl
movsb
shll
add
inc
addr16
add
add
sbb
roll
adc
mov
insb
out
inc
pop
lock
xchg
scas
test
adc
adc
mov
cmpsl
iret
data16
into
dec
iret
test
test
lcall
xor
lea
ss
add
mov
jb
xchg
cmpsb
iret
push
lods
xor
or
iret
mov
jp
jecxz
mov
btr
push
test
test
in
mov
jmp
pop
jo
mov
adcl
add
lcall
push
adc
add
es
mov
pop
dec
push
xor
imul
cmp
or
push
stos
loop
mov
mov
push
dec
icebp
push
add
scas
adc
mov
or
neg
jp
mov
push
mov
mov
jmp
jmp
xor
add
push
pusha
pop
sub
add
cmpb
and
jg
shrb
adc
mov
mov
in
icebp
ljmp
add
stos
inc
shrl
xor
add
mov
or
dec
mov
iret
pusha
mov
adc
add
dec
jmp
mov
sbb
ficoms
adc
adc
out
mov
push
mov
out
aaa
das
orb
mov
push
and
mov
mov
mov
mov
add
and
adc
add
adc
fdivr
jg
xchg
or
nop
cmpsb
push
and
push
xor
outsb
dec
inc
lahf
xchg
loopne
sub
cmp
incl
lahf
xchg
sahf
jmp
repnz
pop
adc
sub
push
xchg
adc
jl
jb
ss
lahf
mov
and
mov
sbb
in
push
add
jp
test
and
jg
inc
in
push
insl
xchg
add
jmp
add
add
push
xor
sahf
push
and
xor
into
movl
mov
push
mov
shll
in
in
mov
push
imul
orb
daa
lock
je
nop
popa
xchg
pop
mov
adc
xor
add
push
cmpsb
test
iret
popf
fs
push
push
std
xor
mov
nop
lods
dec
push
cmpsl
mov
icebp
inc
push
inc
add
clc
outsl
sub
mov
mov
mov
add
les
adc
inc
setg
fimuls
call
clc
mov
lock
mov
sbb
cli
and
mov
mov
dec
repz
jb
imul
adc
or
or
icebp
loopne
movsb
or
mov
cmp
pop
mov
push
shl
sub
stos
lea
lret
inc
aaa
dec
je
pop
lock
into
mov
mov
or
in
shll
push
or
push
add
sub
pop
sbb
call
mov
inc
add
xchg
fldl
clc
icebp
push
fsts
inc
and
jg
mov
dec
sbb
add
adc
call
push
clc
rorb
adc
cltd
add
pop
adc
cmp
andl
mov
js
pop
hlt
jg
call
pop
mov
dec
xchg
xchg
adc
outsl
add
lahf
mov
mov
jp
sub
test
or
jl
pop
enter
lds
mov
cmpl
push
pop
fs
and
sub
mov
std
add
stos
mov
ds
jl
rorl
mov
push
mov
int
pop
adc
cmpsl
fnstsw
jo
mov
outsl
es
lods
in
xor
adc
xchg
pusha
aas
incb
adc
ret
clc
in
lods
pop
mov
repz
in
loopne
adc
lods
adc
mov
es
rclb
out
lock
mov
mov
dec
add
test
inc
add
es
dec
xchg
mov
sub
sbb
push
xor
sbb
mov
iret
movsb
pop
jbe
and
pop
adc
mov
test
add
pop
or
cmp
enter
or
adc
inc
dec
testb
dec
pop
xchg
fwait
pop
mov
xorb
ss
ja
insb
adc
jmp
out
pop
cmp
iret
cmpsb
pop
or
mov
mov
call
test
movsb
lds
nop
rclb
cld
insb
or
icebp
inc
add
inc
dec
mov
push
mov
loopne
cmp
test
pop
sub
fwait
loopne
xchg
imul
stos
inc
cmp
and
add
hlt
push
call
rcll
mov
fnstenv
addl
cmpb
jg
xor
mov
jg
pop
mov
lock
sbb
iret
rcl
test
pop
jo
lods
cmpsb
ss
xor
iret
out
inc
mov
cmpsb
mov
dec
clc
fildll
mov
cmp
adc
es
push
mov
cld
and
cld
jmp
sahf
cmp
mov
mov
push
icebp
adc
xor
push
or
mov
pusha
mov
add
imul
test
xchg
popf
mov
push
xlat
call
push
mov
jo
inc
sar
pop
gs
add
lock
xchg
xor
inc
add
jle
add
add
into
add
repz
pushf
dec
pop
xchg
test
out
lahf
mov
jecxz
or
jno
add
mov
clc
stc
jno
mov
pop
fwait
jp
push
xchg
pop
xor
cmpsl
shlb
aam
sub
adc
fdivs
rorl
mov
into
add
in
lahf
or
xor
inc
mov
mov
mov
jns
lods
ss
sbb
mov
mov
add
and
add
fsts
push
mov
mov
cmpsb
mov
loope
mov
std
push
jl
xchg
aas
andb
xchg
dec
push
fwait
sbb
gs
cwtl
loope
mov
jle
xor
xchg
shlb
push
jb
dec
mov
add
test
push
or
xchg
mov
scas
mov
add
mov
and
iret
cld
add
and
mov
into
xorb
dec
mov
dec
rolb
sbbb
std
in
stos
je
add
into
pop
add
cmp
hlt
into
adc
add
ja
mov
sbb
mov
add
mov
lea
hlt
sub
xchg
sbbb
push
and
mov
data16
out
addr16
incl
cs
or
out
inc
outsl
xor
sbb
and
icebp
push
pop
ss
push
std
or
push
arpl
movsl
push
jl
cs
sar
push
sub
enter
mov
int3
mov
js
jp
test
cmpsl
or
cmp
mov
jnp
xchg
jne
loope
xor
aaa
xlat
add
into
test
mov
adc
decb
mov
fnsave
cld
push
dec
iret
idiv
popaw
test
leave
push
dec
addl
mov
and
lods
pop
inc
mov
test
cmpb
imul
bound
imul
jg
xor
addl
out
inc
push
lret
pushf
stos
mov
mov
pusha
push
fadds
add
decl
mov
lods
aas
add
in
mov
inc
or
into
lods
push
ds
adc
sbb
xchg
loope
jecxz
push
cmpb
call
sbb
pop
push
mov
add
mov
lea
mov
inc
dec
mov
mov
mov
and
add
in
mov
pop
sub
mov
imul
js
add
adc
add
add
adc
xor
push
cmc
or
inc
xchg
into
mov
mov
jbe
mov
outsl
mov
cmp
hlt
mov
adc
and
adc
and
pop
jbe
and
adcl
iret
mov
inc
adc
or
and
jecxz
cmp
fwait
leave
mov
xchg
cmp
push
push
aam
loopne
in
jne
inc
insl
jl
add
push
and
bound
inc
fsubs
add
and
jns
inc
movsb
scas
pop
jae
fs
cmpsb
stos
jle
enter
lret
jle
loopne
enter
cld
jbe
gs
in
js
mov
in
jns
call
and
or
test
std
jnp
add
cli
jg
aad
jae
xchg
mov
call
jecxz
add
add
adc
loope
fnsave
je
xor
mov
inc
mov
call
scas
sti
add
jp
pop
add
in
outsb
dec
subb
iret
xchg
or
cmp
cwtl
mov
ds
jle
mov
or
ret
or
push
sbb
mov
mov
lock
adc
mov
test
and
inc
rcrb
add
ja
inc
insb
in
jmp
inc
inc
or
dec
xchg
inc
test
sub
add
mov
adc
hlt
pop
fs
cli
mov
mov
rol
addr16
jp
mov
incl
and
xor
sar
in
or
mov
sti
cmp
xor
sbb
lcall
push
dec
cmp
jae
js
add
out
in
cmp
jo
das
rcrb
in
add
add
xor
cmp
mov
sti
mov
inc
push
mov
rorb
add
decl
or
into
mov
shlb
addl
pop
ja
hlt
int
and
stc
xor
mov
jg
sub
add
inc
popf
in
in
push
mov
jne
mov
fdivrl
add
lods
push
add
ljmp
out
js
pusha
jle
pushl
inc
mov
cmpsb
xor
mov
insl
dec
mov
cmpb
dec
mov
mov
jnp
mov
and
inc
mov
mov
inc
rolb
dec
push
add
adc
mov
decl
cld
mov
ret
lret
sbb
xor
mov
xor
xchg
aam
rcll
loop
jge
sub
std
aaa
jle
inc
or
jp
dec
xor
dec
test
add
in
mov
push
nop
inc
int
inc
movsl
orl
and
xchg
pop
test
pusha
jge
int
push
popf
push
ss
ljmp
and
mov
cs
push
rolb
xchg
call
int3
jecxz
xchg
push
test
and
int3
lret
push
pop
loope
and
xor
pop
or
pusha
and
and
aad
add
cmp
cmp
pop
cld
mov
stos
leave
rolb
or
add
sbb
cs
adcb
mov
jecxz
ss
dec
loopne
stos
ret
andb
mov
push
and
hlt
test
insb
xchg
dec
xorb
pusha
pop
lcall
dec
cmp
sbb
ffree
ljmp
xchg
or
loopne
push
pop
test
adc
mov
test
inc
or
push
je
jae
ds
decl
cmp
lods
jmp
and
mov
mov
hlt
pusha
pop
call
jge
mov
es
add
aad
jb
repnz
lock
adc
add
inc
xor
dec
incb
stos
rcrl
dec
rclb
test
add
jbe
lock
push
mov
cmpsl
fisttpll
adc
insb
aad
clc
sbb
loopne
in
add
pop
addr16
cmp
leave
add
xor
aaa
push
nop/reserved
sub
rolb
cmp
or
cmp
sub
mov
incl
add
mov
inc
adc
dec
xchg
push
loopne
jle
lock
add
orb
jmp
out
inc
fisttpll
adcl
sahf
mov
jg
into
push
cmp
rcl
push
jmp
add
adc
fs
shl
ss
push
mov
inc
jp
out
mov
mov
inc
ds
stos
add
cmp
in
mov
xlat
and
mov
mov
dec
push
adc
adc
inc
arpl
inc
aas
mov
mov
mov
cmpsb
mov
push
pop
cmpsl
sti
loop
add
or
jp
pushl
push
xor
roll
mov
jecxz
push
lcall
dec
push
jg
mov
mov
adc
bound
loope
jo
in
jg
movsb
push
mov
xchg
and
cwtl
push
mov
or
add
call
add
adc
into
addl
mov
lods
pop
inc
pop
or
pusha
jno
cmp
pusha
add
bound
mov
in
aam
xor
push
ror
cmp
jg
inc
shl
mov
daa
pusha
or
push
orl
push
aas
add
fldl
and
outsb
loop
mov
dec
test
mov
decl
inc
xor
pop
lods
andb
in
mov
rorb
jge
aaa
scas
clc
mov
arpl
and
inc
xchg
cld
xchg
and
jg
mov
in
and
ret
orb
jg
fiaddl
xchg
mov
mov
push
pop
and
rclb
insb
mov
test
pop
lock
sub
seto
cmp
cmpsb
push
ds
push
scas
subb
or
push
sub
data16
adc
mov
pop
jb
stos
sbb
adc
fildll
scas
sbb
mov
sbb
out
push
and
scas
and
pop
adc
jo
jo
push
inc
cmp
movsb
adc
lods
sbb
adc
ljmp
scas
inc
xchg
add
add
in
lods
add
das
clc
stos
add
arpl
andb
or
out
nop
lods
add
jge
frstor
add
mov
scas
or
or
mov
call
adc
nop
repnz
add
mov
xchg
adc
dec
outsb
push
dec
dec
pop
inc
stos
sbb
pop
jmp
sub
sbb
addr16
sbb
mov
ss
hlt
cmp
jns
cwtl
fidivrs
add
lcall
dec
shlb
xor
outsl
rcrl
add
sbb
ret
pop
inc
mov
push
ss
push
loop
cmpsb
insl
outsl
adc
add
or
cmp
imul
xor
arpl
and
dec
sbb
in
pop
mov
ds
lcall
fimuls
fcomip
fists
inc
dec
scas
lock
sub
push
leave
add
dec
dec
loopne
clc
sub
or
mov
mov
je
or
ss
pop
jbe
adc
roll
push
std
test
dec
and
icebp
pop
inc
adcb
pop
cmp
mov
mov
add
les
js
lock
out
jb
sarl
sub
movsb
and
or
inc
add
sbb
inc
aaa
ljmp
adc
add
and
shll
ret
mov
jge
cmpsl
into
mov
add
in
in
pop
mov
push
xor
mov
xchg
cmp
push
loopne
and
adc
into
add
filds
add
inc
nop
pop
push
mov
inc
mov
ljmp
daa
add
add
cmp
adcb
cld
incl
stos
xchg
inc
inc
add
mov
ljmp
sbbl
add
out
xchg
clc
pop
lock
jo
fs
adc
and
push
scas
jbe
adc
lret
scas
xor
adc
mov
adc
jle
sarb
icebp
or
ja
add
cs
inc
push
push
out
clc
mov
int3
lods
xchg
fcomps
add
std
xchg
cmp
dec
inc
add
pushf
pop
dec
lds
push
jmp
push
inc
or
push
sbb
mov
mov
add
jae
xor
lahf
jg
cmc
pushl
clc
xchg
rcll
into
add
cwtl
dec
orb
xchg
jno
and
cltd
ss
mov
test
xchg
and
inc
orb
lock
ljmp
int3
and
xchg
js
mov
jecxz
dec
clc
sti
mov
mov
mov
sbbb
xor
lahf
lcall
js
mov
js
dec
xor
rcrl
in
loope
loop
lcall
adcb
rol
ror
add
mov
xor
adc
stos
shrb
lods
push
sti
and
repnz
nop
out
mov
adc
orl
mov
push
ret
adc
mov
loopne
nop
popa
or
inc
call
out
test
or
jno
loopne
push
mov
shll
out
mov
xor
fists
push
jo
jno
jmp
sub
add
mov
nop
add
inc
aas
inc
stos
inc
or
push
fdivrs
daa
adcb
jl
loop
pusha
add
sti
addb
cmp
aaa
iret
je
imul
inc
outsb
xor
in
xor
mov
loop
inc
push
xchg
cmp
xchg
xor
push
cmp
jnp
in
add
pop
mov
dec
mov
xor
add
add
das
adc
adc
mov
and
add
jecxz
push
loop
adcb
add
mov
add
push
add
add
in
add
lods
shlb
xchg
pop
pop
loopne
fdivs
add
add
iret
nop
ret
push
clc
call
es
lret
mov
inc
add
mov
add
add
mov
or
loope
cmpb
push
mov
add
sbb
sbbl
movsl
call
mov
add
fcomip
mov
push
test
ljmp
mov
js
or
addr16
movl
stos
movsl
cmc
je
inc
xor
aad
test
mov
push
push
js
cld
adc
push
movsb
das
fdivrl
std
mov
jmp
clc
sub
sbb
orl
in
dec
aaa
push
inc
loopne
mov
icebp
pop
insb
movsb
add
inc
ss
jmp
mov
add
add
push
xchg
aad
das
ret
out
xchg
add
fwait
push
add
inc
sti
cmp
lahf
mov
or
jg
ja
mov
push
fs
adc
or
jl
xchg
push
mov
mov
lods
xor
pop
sbb
mov
adc
sbbb
xchg
rcl
popf
add
outsb
sarb
xchg
and
push
mov
jg
inc
enter
add
jmp
xor
jae
mov
iret
jnp
sbb
cmp
icebp
cmp
add
scas
pop
sbb
lock
popl
sbb
roll
rcll
xchg
in
je
mov
push
lods
and
lds
fcoml
sbb
or
add
adc
call
pop
xchg
mull
cmpl
iret
hlt
dec
jo
push
dec
mov
add
rorl
les
add
mov
or
push
xor
inc
cmp
xchg
push
stos
in
incl
sarb
xor
cld
xchg
push
sahf
addb
jbe
arpl
call
add
jg
adcl
mov
dec
mov
loop
lds
sub
int
clc
mov
add
inc
mov
mov
inc
sarb
mulb
mov
push
jae
jo
incl
inc
mov
outsb
shrb
add
pop
outsl
mov
xor
js
imul
fisubl
jmp
adc
fidivrl
pop
xor
jmp
out
add
push
push
test
inc
pop
cli
inc
xor
sbbb
pop
cs
es
pop
jle
cmc
incl
push
adc
pop
inc
dec
sub
ljmp
inc
and
mov
addl
inc
add
ret
add
lahf
rcll
or
inc
or
adc
jb
lock
jg
decl
xorb
jae
sbb
loopne
shll
pop
inc
push
pusha
nop
arpl
or
scas
pusha
dec
and
mov
add
adc
nop
popf
fdiv
cmpb
and
xor
sub
hlt
mov
add
enter
add
xorb
xor
inc
mov
out
loopne
hlt
loopne
mov
mov
in
dec
jl
dec
rcll
loopne
push
in
push
push
or
jno
test
cld
loopne
fnstsw
pusha
sub
add
add
in
lock
ljmp
and
pop
jo
sub
and
ficompl
fistl
fisubrl
lret
rcrb
sti
pop
out
add
mov
jl
cmp
js
add
xchg
mov
shlb
or
push
or
lds
xchg
push
lds
sbb
mov
in
xor
inc
and
adc
jb
push
cmp
scas
andb
jg
rorl
pusha
xor
test
adc
stos
inc
js
ja
mov
sbb
subb
rolb
ljmp
or
scas
push
xchg
loop
cmpsl
into
mov
xor
adc
or
inc
pop
add
and
push
or
imul
push
xor
pop
mov
cmpsl
mov
fisubl
push
add
xchg
scas
shl
adc
xor
mov
loopne
cld
jg
or
cmp
into
mov
or
push
in
sbb
adc
mov
jecxz
or
out
xchg
lcall
sub
js
ja
jo
xor
fadd
mov
psubsb
mov
or
push
and
lds
or
lods
and
scas
sbb
roll
in
mov
mov
mov
mov
lock
cmp
mov
adc
call
cmp
inc
mov
add
ss
stos
adc
ficompl
mov
orl
aas
mov
call
jno
jecxz
test
loop
and
inc
push
mov
mov
dec
iret
add
inc
push
js
mov
bound
and
out
or
loope
mov
inc
sub
dec
ss
xor
jmp
and
repnz
inc
mov
push
or
stos
and
clc
inc
ret
movups
xor
aas
insb
in
add
out
mov
out
clc
or
loope
and
cmpsl
pop
insl
cld
or
xchg
mov
popa
outsb
bound
add
fcomp
push
fdivrs
push
jo
stos
push
cld
out
mov
pop
xor
add
test
and
dec
imul
pop
imul
rorl
mov
jmp
adc
xor
sub
push
orb
cmpsb
cli
xchg
inc
add
mov
das
cli
mov
and
mov
and
jne
or
sbb
bound
cli
xor
mov
loopne
push
lret
adcl
adc
add
js
inc
fstl
or
dec
int
add
sarl
test
sub
inc
andb
iret
loopne
or
xor
pushl
rolb
ret
adc
lds
xorb
jg
in
incl
ss
mov
push
stos
adc
inc
mov
je
pop
mov
mov
test
dec
adcl
jl
sbb
mov
orb
lds
ret
and
ja
adc
shrb
add
dec
movsb
lcall
push
mov
cmp
ret
cmp
ret
testb
mov
xor
outsb
aam
rcll
sti
xchg
scas
add
cltd
outsb
lock
lret
push
cli
outsb
xchg
mov
loop
out
add
xor
jo
add
inc
fimull
cmc
or
cli
xor
jl
push
call
adc
mov
fdivs
push
add
mov
sbb
xchg
or
adc
dec
add
sti
shll
scas
pusha
cmp
jo
enter
lock
fwait
mov
mov
add
shrl
cmp
nop
dec
jo
incl
add
loopne
jbe
xchg
or
mov
ret
pop
push
xlat
loope
rcrb
mov
fisttps
push
sub
shrl
mov
mov
and
jo
rcll
or
jecxz
xor
ret
out
shll
out
mov
adcl
loop
sbb
mov
test
fwait
into
test
pop
mov
inc
or
and
mov
cmp
push
inc
xor
fbstp
jle
sub
pop
lock
add
and
fildl
mov
or
test
ss
xchg
dec
add
dec
cmp
xlat
pop
iret
lcall
jg
int3
mov
push
cmpb
add
or
shl
movsb
and
incl
int
mov
add
lock
hlt
or
push
jmp
or
or
pop
jecxz
rorl
mov
add
aaa
mov
lcall
adc
mov
mov
inc
push
bound
dec
add
mov
sub
mov
xor
mov
hlt
pop
mov
and
add
pop
fbld
cltd
faddp
es
nop
mov
rorb
adc
cmp
cmp
in
int
mov
inc
add
add
outsb
mov
outsl
and
pusha
aaa
jge
xor
ja
loop
add
data16
shll
fdivrp
inc
add
push
call
add
fwait
adc
xchg
stos
push
lods
xchg
loopne
inc
xchg
xchg
mov
clc
insb
stos
scas
push
enter
fiaddl
add
xchg
rorb
mov
jmp
push
sbb
stos
jp
xchg
push
inc
inc
jmp
sbb
daa
push
adcl
or
adc
aas
push
adc
jmp
mov
js
push
and
scas
mov
cmp
aaa
jl
push
negl
imul
pop
cltd
adc
adc
xor
inc
lahf
movsb
push
or
push
add
int
test
cmp
mov
add
roll
cmp
mov
popa
nop
dec
lock
pop
orl
mov
adc
and
push
and
add
adc
xor
jmp
mov
adc
sti
xlat
jb
mov
pop
popa
adc
in
out
clc
pushl
add
xchg
addb
push
and
mov
sti
add
mov
insb
cmp
or
das
push
mov
ss
lahf
mov
ret
clc
and
or
xchg
jecxz
adc
sbbl
add
cmpsl
push
arpl
push
or
arpl
mov
inc
push
add
call
cwtl
sub
in
aad
in
add
fsts
lock
and
rorb
dec
mov
add
mov
mov
aad
out
cmpsl
push
push
inc
cmp
cmpsl
subb
idiv
adc
add
pop
fisttps
out
cli
push
mov
inc
div
push
xor
add
inc
xor
cld
ja
and
mov
loopne
push
pop
cmovo
push
xchg
and
inc
ret
fildl
cli
add
add
aam
jmp
jle
xor
fists
icebp
loopne
xor
mov
xor
push
clc
aaa
jl
xchg
dec
lock
pop
stc
jo
fdivl
mov
add
or
mov
mov
incb
imul
push
aam
xchg
js
or
shlb
dec
incl
call
add
inc
push
sub
ds
push
xchg
sbb
loop
ja
dec
lea
mov
inc
rol
mov
cld
cmpb
adc
decl
add
adc
ds
or
push
js
test
mov
fnsave
mov
mov
add
mov
aas
pop
mov
inc
addb
test
daa
pusha
add
inc
mov
push
adc
mov
jp
sbb
push
pop
cwtl
mov
js
add
js
sbb
push
orb
jl
sbbb
sbb
jge
and
in
pop
add
sub
add
lcall
add
fsubs
push
inc
mulb
adc
data16
mov
inc
popa
add
mov
pop
push
and
addl
test
in
rolb
or
sbb
into
ret
or
loope
mov
push
or
loopne
jg
xor
mov
mov
sahf
sbb
inc
aas
pusha
pusha
mov
add
xchg
xchg
js
daa
call
lret
mov
adc
scas
mov
sub
mov
cmp
ss
pusha
arpl
aas
add
imul
push
push
fldl
push
add
ljmp
out
cmp
fists
jb
push
adc
inc
inc
xor
pop
dec
jmp
and
mov
cld
in
add
lods
or
stos
sub
or
or
dec
inc
negl
xor
into
xor
push
stos
or
cmpsl
fidivrs
xorb
orb
cli
add
add
mov
outsl
push
xor
stos
xor
inc
inc
icebp
mov
xchg
sbb
addb
mov
cmpsb
andb
add
and
or
ja
sub
lret
jp
add
aas
mov
shlb
jp
stos
add
orb
dec
dec
in
cli
add
das
jp
pop
inc
insl
dec
fildl
loop
inc
push
int
xor
cs
lods
add
and
inc
jle
fldt
imul
js
das
inc
push
push
call
clc
add
movsb
test
repz
mov
cmpb
fidivs
dec
jne
push
add
inc
inc
add
enter
dec
cmp
push
pop
add
push
sbb
pop
mov
into
stos
or
jg
shrb
test
mov
call
and
xor
dec
push
pop
ljmp
push
inc
ret
or
cmp
jg
mov
ds
loopne
pop
and
add
xorb
or
pop
shl
ja
pushf
mov
add
add
add
repz
sbb
mov
test
and
add
or
ds
fadds
push
sub
push
movb
jmp
rcrl
orb
arpl
sbb
sbbb
lods
loop
or
sar
or
inc
inc
add
dec
cmp
fdivrp
outsl
clc
les
mov
inc
or
add
inc
push
lods
test
pop
movswl
clc
dec
push
xor
mov
jmp
adc
or
out
push
inc
cmpsb
mov
and
dec
mov
mov
jae
push
mov
jno
divl
add
stos
mov
cmpsb
xor
sbb
jns
inc
mov
inc
cld
mov
adc
cmovg
mov
inc
lret
add
add
inc
inc
xor
add
sbb
subl
popa
push
or
ret
ds
pop
pop
cmp
shrl
sahf
inc
mov
xchg
mov
rcl
jno
inc
jg
add
sbb
jnp
adc
stos
inc
xchg
mov
fists
arpl
addb
lock
test
mov
jo
xor
dec
cmp
cmp
jnp
sbb
mov
test
insb
xor
es
inc
push
mov
add
shll
ds
incb
fnstsw
xor
dec
arpl
cmp
and
scas
inc
push
mov
insl
fisttpl
add
push
add
lods
mov
and
pop
mov
add
in
xchg
popa
add
push
clc
sar
inc
mov
push
sarl
scas
popa
inc
shlb
xchg
adc
mov
roll
add
into
pop
subb
push
or
inc
fbld
cmp
add
inc
add
out
call
push
addr16
pop
jl
scas
loopne
rcll
and
fdivs
push
push
cmp
sarb
cmc
ljmp
pop
bound
and
mov
data16
stos
add
icebp
ja
dec
and
jbe
and
dec
andl
outsb
adc
push
cwtl
add
sbb
and
pop
and
push
dec
push
jp
outsl
mov
add
xor
and
or
jo
xorl
sub
inc
and
sahf
cmp
push
loop
outsb
sub
and
mov
loop
add
mov
es
jb
mov
xor
das
pushf
adc
cmp
ljmp
enter
push
scas
add
and
pop
into
mov
ss
or
loopne
das
inc
loope
int
pop
sub
xor
add
pop
orb
add
mov
mov
mov
call
test
mov
dec
rcrb
roll
inc
imul
rclb
mov
lods
jecxz
loopne
pusha
adc
lcall
jmp
and
and
push
mov
push
pop
pusha
mov
xor
dec
pushl
mov
push
mov
data16
ss
mov
xchg
ljmp
pop
dec
adcl
jecxz
add
ja
lock
cltd
mov
and
adc
jb
shld
xchg
pusha
pop
mov
imul
push
test
jb
xor
push
loopne
push
cmp
xchg
jno
rcr
inc
or
push
add
ja
loopne
shrl
ja
add
pusha
mov
das
cli
aaa
add
rclb
mov
sbb
sbb
stos
out
bound
loopne
movsb
cmp
icebp
pop
icebp
mov
inc
pop
out
in
scas
cltd
add
jno
lds
loopne
add
xorb
mov
push
shll
mov
jmp
or
lods
push
sahf
cmp
mov
mov
imul
lds
nop
push
lock
add
cmp
pop
into
add
jecxz
ja
nop
and
movsb
inc
in
mov
adc
mov
inc
adc
push
pop
add
pop
fbld
imul
adc
push
xor
mov
ljmp
les
push
xor
inc
call
xorb
mov
std
clc
jp
jb
pop
mov
or
into
mov
mov
and
lock
add
pop
jo
add
adc
hlt
mov
adc
sbb
mov
push
je
fisttpl
mov
add
mov
cmp
cmp
lret
inc
cli
mov
cmp
xor
inc
add
test
repz
cld
push
icebp
cmp
and
call
pusha
xchg
sub
jbe
ficoml
push
xor
mov
xor
pop
dec
std
outsl
dec
push
lock
push
or
movsb
push
enter
push
cld
scas
ss
inc
adc
pop
sbb
inc
dec
cmp
mov
inc
xchg
std
jle
jo
mov
xor
mov
ja
sub
je
dec
dec
add
dec
dec
and
add
pop
inc
cmp
cmp
rolb
cmp
push
xchg
stos
xchg
push
inc
add
test
add
cs
cld
inc
add
lea
pop
cmp
push
inc
push
or
add
dec
outsl
push
push
sub
jno
adc
jmp
call
loopne
inc
rolb
outsb
and
and
pushf
scas
xor
divb
or
mov
inc
mov
and
es
add
sti
push
into
mov
add
inc
stc
add
mov
test
push
mov
ljmp
inc
xchg
add
out
hlt
pusha
dec
cmp
sbb
or
roll
mov
fcoms
push
push
sub
ja
cs
add
cmp
sbbl
lcall
lahf
xorl
xchg
mov
lahf
push
test
pop
or
jo
pop
push
mov
pop
sbb
xor
inc
dec
sar
push
sub
mov
xchg
sub
push
xorl
inc
or
xchg
mov
dec
in
sarl
or
inc
cmp
add
outsb
or
inc
add
mov
je
call
push
mov
loop
adc
mov
xor
add
mov
cmpsb
popa
mov
mov
jns
outsl
data16
enter
and
mov
and
cmp
pop
mov
jns
adc
loope
xchg
inc
add
mov
popa
pop
xchg
clc
aaa
mov
or
xor
aas
mov
sub
mov
std
cmp
dec
lds
roll
pop
push
arpl
adc
test
repnz
dec
or
jno
loopne
add
cmp
lds
int
aam
into
dec
push
std
scas
clc
sbb
or
pop
mov
sbb
add
addb
dec
hlt
xlat
mov
jo
loope
jle
mov
cmp
sub
sbb
inc
push
inc
jb
push
sub
mov
loopne
jg
mov
and
or
shrl
push
and
pop
jnp
lcall
shl
in
call
or
mov
sub
rol
hlt
jg
push
jno
sub
sahf
xor
sub
mov
sbb
in
jg
insl
jbe
pop
or
fisttpll
inc
add
stos
sbb
cmp
and
push
icebp
bound
add
lcall
or
pusha
or
lock
add
jb
dec
xor
outsb
jecxz
push
xchg
xor
ret
xorl
inc
inc
mov
or
push
push
xchg
cs
ja
js
cltd
adc
mov
xor
push
addb
push
jo
mov
daa
and
mov
cld
push
bound
or
aas
adc
xchg
add
lock
xor
xor
mov
mov
sbb
add
dec
loop
xorb
and
in
push
xor
dec
jp
jecxz
mov
nop
jnp
hlt
sub
loope
pop
jecxz
adc
add
mov
xchg
jno
xchg
je
out
clc
xor
xor
bound
add
jp
sub
sub
stos
cmp
repnz
mov
mov
mov
stc
mov
push
mov
xor
cmpsb
jmp
out
inc
dec
jo
add
add
inc
sub
xchg
push
inc
xor
pop
push
fucomip
js
mov
sarl
dec
dec
cmp
add
adc
mov
nop
leave
les
mov
repnz
mov
inc
rorl
push
add
add
jno
rcl
fst
inc
and
dec
add
leave
add
ss
inc
or
or
mov
cmpsb
jmp
mov
data16
xor
add
adc
scas
test
es
cmp
add
ja
test
cmp
mov
enter
and
adc
lahf
test
cmp
inc
add
loopne
mov
test
loop
add
add
rolb
inc
js
add
stos
test
lock
test
nop
je
sub
je
dec
dec
push
push
dec
jmp
push
fisubrs
inc
mov
adc
aaa
add
push
rclb
call
jle
mov
mov
adc
adc
inc
loopne
in
leave
sbb
jb
pop
pop
xor
push
push
in
xor
mov
sub
sbb
xor
mov
scas
or
lret
rol
mov
jg
jmp
nop
push
inc
lds
std
or
call
and
dec
loopne
mov
addb
push
scas
mov
cmpsl
mov
cmpsl
mov
jg
push
pop
les
loopne
add
and
xor
and
or
std
cmpl
mov
add
jo
mov
xor
lock
xchg
movsb
leave
lahf
mov
sub
dec
sbbb
mov
jmp
add
jae
enter
xor
mov
adc
push
and
int
mov
mov
adc
xchg
and
les
cs
fimull
mov
cmpsb
hlt
mov
imulb
mov
or
xor
cmp
in
outsl
cli
clc
loopne
aas
mov
pusha
pushf
mov
daa
std
mov
dec
ljmp
nop
jae
add
pushl
adc
xor
add
add
and
dec
popa
pop
or
jo
push
lcall
ficompl
jg
insl
inc
lods
dec
and
ret
out
cmp
mov
add
mulb
jl
and
dec
inc
sbbb
sbb
add
cmpsb
add
dec
xor
adc
push
mov
mov
cmp
push
add
faddl
sarl
add
loopne
add
scas
adc
inc
jle,pt
add
inc
push
add
add
jle
pop
sbb
add
mov
sbb
nop
sub
inc
cld
cmp
mov
cmpsl
int3
je
movsl
inc
and
inc
rorb
push
sbb
mov
adcl
or
or
jbe
jns
jnp
outsl
outsl
fcom
mov
in
mov
xchg
mov
add
ds
mov
subb
add
push
lds
fiadds
mov
stos
mov
sub
dec
lss
icebp
outsl
push
add
add
add
adc
sub
nop
std
testb
loopne
xorb
jmp
or
add
popl
cmpsl
aam
into
xchg
es
mov
dec
mov
in
int3
jle
out
incb
xorl
inc
xorb
xchg
cld
in
jg
sbb
xor
sbbb
cmc
cmpb
cmpl
cmp
andl
or
loopne
das
clc
es
mov
test
out
test
mov
rol
fcomp
sub
ret
sarb
data16
jae
sbb
dec
add
popf
and
xchg
xchg
sbb
aas
lcall
arpl
pop
add
inc
stos
mov
lods
shlb
cmp
mov
and
jbe
mov
cwtl
lret
xor
add
fs
arpl
arpl
fwait
mov
subb
outsl
es
scas
addb
arpl
or
sbb
pushf
orb
jle
fisttpl
inc
push
push
ret
sub
lock
jg
sti
xor
decb
mov
leave
popa
js
jo
xor
test
jbe
bound
inc
jl
adcb
xor
pop
pop
aam
lcall
lods
adc
inc
or
jo
rolb
rorb
test
in
mov
scas
not
ljmp
dec
add
jecxz
in
scas
mov
std
adc
inc
jp
push
pop
popa
dec
fsubr
mov
stos
nop
imul
add
inc
incl
mov
add
mov
mov
xor
stos
mov
mov
cmp
das
stos
push
into
add
and
add
nop
pop
aas
pop
cmpsb
fists
mov
clc
add
adc
xchg
push
mov
cwtl
xor
add
lea
es
xchg
outsb
dec
ss
mov
jno
data16
lods
mov
add
mov
incl
pusha
subb
js
cmpb
xchg
xchg
fdiv
ja
adc
jns
inc
inc
and
or
push
mov
enter
sahf
out
mov
dec
andb
inc
adc
jnp
dec
and
add
inc
push
mov
dec
xor
sub
or
adc
mov
lcall
jg
inc
add
xchg
or
imul
cli
outsl
outsl
cmp
push
ja
rclb
inc
inc
and
out
cmpsb
pop
loopne
pop
in
in
mov
mov
ret
enter
ret
push
insl
out
cmc
mov
cmp
and
and
xlat
clc
in
cwtl
gs
mov
ret
sti
data16
lods
je
mov
inc
ds
or
movl
subb
lods
pop
cmp
inc
mov
lcall
mov
pushf
and
pop
mov
add
in
rol
cli
decl
jl
mov
movsb
adc
mov
xor
inc
test
xor
mov
push
inc
sub
in
mov
aas
jmp
sub
inc
or
adc
hlt
or
gs
out
test
lock
mov
loopne
mov
and
iret
and
lods
dec
pop
scas
and
addb
add
cld
mov
clc
push
dec
or
pop
cmp
inc
inc
ffree
or
fs
push
std
mov
cwtl
mov
fwait
add
inc
pushf
add
scas
pusha
push
test
sar
push
pusha
int
and
push
xchg
push
jg
hlt
xchg
inc
fadds
stos
fdivs
rorl
test
and
add
lcall
cld
xor
or
and
add
loop
and
fcompl
pop
hlt
call
ss
jmp
int
lret
lret
ljmp
cmp
or
aaa
loopne
ja
or
mov
jae
nop
rolb
stos
push
sti
outsl
cmpsl
and
ljmp
bound
xor
cmp
cwtl
jae
pop
cmp
inc
insb
pop
sti
mov
adc
add
mov
aas
or
adc
fisubs
popa
dec
mov
mov
fstps
add
repz
or
xor
dec
adc
add
cmp
adc
jno
xchg
dec
sub
sub
scas
add
jno
js
rcrl
jmp
push
ss
les
iret
addb
xor
dec
adc
es
dec
jo
push
xchg
xchg
sbb
and
aad
cmp
dec
sbb
cmp
cmpsb
cmp
pop
inc
mov
jo
and
or
nop
scas
adc
imul
xor
mov
sbb
pusha
fwait
cmp
push
push
and
lds
cmpl
xor
mov
lods
mov
sub
sbb
dec
jge
sbb
std
cs
fwait
or
loope
aas
mov
cmpsl
pusha
xchg
sarl
mov
xchg
xor
cmpsl
pop
inc
add
dec
loopne
add
jae
stos
sub
push
sarb
add
mov
fists
sbb
push
and
push
push
xor
insl
test
and
push
pop
sub
lret
sbb
inc
fmul
adc
mov
loop
mov
push
xor
addl
xor
add
mov
sbb
addb
xchg
jno
sbb
dec
push
mov
rorb
lret
add
dec
fiaddl
iret
cmp
movsb
cltd
rorb
cmp
mov
movb
push
push
pop
in
jbe
xchg
inc
push
sahf
loopne
push
push
mov
add
mov
push
stos
sar
jle
mov
add
cmp
mov
pop
sub
mov
push
mov
sahf
and
test
add
mov
into
xchg
adc
clc
mov
jo
push
hlt
xchg
movsl
loopne
outsb
rorl
xor
pop
add
jno
cmc
das
orb
ret
push
ret
or
mov
clc
mov
push
cmpsl
hlt
pop
int3
mov
or
shrl
into
popl
mov
jp
aam
pop
mov
leave
movsl
rolb
sbb
mov
mov
xor
das
or
xor
out
jns
add
or
stos
jne
cmp
and
mov
adc
push
cld
mov
into
call
std
sbb
inc
jp
das
jns
mov
xor
inc
aas
pop
dec
inc
mov
mov
or
mov
xchg
or
ds
dec
movsb
push
sarb
int3
cmpsl
repz
lock
cmpb
push
roll
fmuls
clc
sbb
test
or
sbb
add
out
xor
sbb
dec
jecxz
mov
mov
xchg
orb
clc
dec
mov
pop
inc
push
xchg
std
add
push
push
cmp
inc
icebp
add
out
mov
add
aaa
mov
add
push
add
mov
cmp
mov
push
shrb
adc
add
clc
cmp
out
out
dec
cmp
fistl
or
rclb
and
lods
xchg
dec
clc
add
xchg
mov
in
fldt
test
inc
aas
bound
mov
pop
mov
clc
push
sahf
jle
or
div
add
jp
xchg
rorb
lods
cmp
push
xchg
adc
stos
lock
sub
pop
add
cmp
ror
mov
shll
mov
push
aas
aam
in
call
js
mov
sub
add
mov
mov
adc
shr
aam
push
cmpsb
mov
xor
xchg
divl
cs
add
and
push
pop
fildll
jbe
mov
bound
sbb
xchg
jns
add
adcl
loope
adc
push
clc
cmpsb
push
dec
push
fisttpl
loope
inc
add
mov
ss
or
sbb
clc
repnz
ljmp
repnz
dec
xorb
and
movb
nop
push
mov
sub
into
or
mov
and
shrb
xor
push
cmp
sbb
xchg
int
xchg
mov
xor
sbb
les
fsubl
add
pop
sbb
imul
pop
call
adc
jo
les
push
std
dec
push
out
add
jl
lock
leave
clc
sub
nop
in
push
add
pushl
repnz
cmp
pusha
add
and
nop
fldl
jno
xchg
dec
add
inc
mov
aaa
lret
incb
inc
jp
hlt
xor
ja
pushl
rcll
aas
and
jo
mov
lods
lds
fildll
mov
add
add
or
jb
mov
leave
mov
jmp
mov
cmp
lods
and
adc
adc
sarb
pop
sbb
std
leave
shll
jo
adc
adc
add
fmuls
cld
mov
rol
add
add
lret
dec
or
or
jb
stos
cmp
enter
inc
add
and
jmp
movsb
test
xor
xchg
nop
rorb
mov
dec
adc
add
mov
fistpl
in
mov
jae
mov
hlt
add
mov
aas
imul
inc
lods
sarl
add
add
lds
jbe
sub
and
cwtl
push
xchg
into
rolb
loop
mov
scas
jne
lahf
or
add
ljmp
inc
and
addl
sub
ret
adc
mov
dec
push
int
sub
es
mulb
lods
add
cld
adc
add
divb
scas
mov
adc
mov
add
lds
mov
fimuls
adc
mov
das
js
pusha
add
add
xorl
mov
orl
cmpl
mov
sub
dec
push
add
and
inc
pop
mov
lret
ret
pushf
xchg
das
xorl
jge
hlt
cmc
add
stos
lcall
sub
push
mov
test
adc
mov
sti
jg
dec
shrb
mov
sub
lcall
mov
lret
out
adc
xchg
inc
push
rclb
mov
jmp
orb
clc
fadds
clc
movl
and
clc
pop
clc
add
jne
pop
xor
rclb
xor
mov
adcb
xchg
mov
inc
inc
pop
ret
bound
stos
roll
jo
nop
inc
pop
jl
jns
pop
sbb
es
imul
push
mov
in
or
rorl
fbstp
lcall
les
add
shlb
cld
inc
test
jge
adc
test
xor
push
push
adc
decl
or
push
adc
int
rclb
add
insb
dec
and
mov
or
and
mov
inc
cs
sub
inc
andl
mov
mov
mov
xorl
lret
xchg
mov
xchg
jp
xchg
cltd
hlt
or
lahf
mov
popa
fsubrl
decl
lahf
out
cmp
push
inc
or
mov
in
mov
outsl
push
ffreep
push
dec
xlat
fisttps
and
stos
inc
addr16
ret
push
and
dec
into
push
inc
push
shll
cmp
clc
in
test
fcmove
inc
hlt
subb
adc
or
fucomip
sub
or
and
rolb
push
push
mov
adc
push
mov
or
addb
into
dec
in
push
iret
push
pop
cmp
mulb
push
mov
sbb
add
std
imul
add
leave
mov
mov
push
popa
popf
lcall
pusha
xor
push
popa
insl
jecxz
push
sub
lahf
in
add
out
ss
dec
loopne
subb
pusha
cltd
dec
mov
andb
push
shlb
out
mov
mov
and
cmpsb
inc
aaa
dec
outsl
aaa
push
add
or
movsl
dec
jno
push
push
rcll
jl
in
mov
pop
and
dec
add
xor
push
decb
push
lock
mov
rcrb
push
les
cld
inc
mov
mov
inc
stos
je
dec
cmp
cs
mov
outsb
lahf
jns
sbb
repnz
mov
mov
subb
lds
cmpsl
pusha
nop
int
ss
adc
or
and
inc
add
dec
push
xor
nop
jno
sti
inc
fcompl
add
scas
sbb
stc
incl
inc
and
testb
push
gs
fsubrs
popa
cld
add
inc
jecxz
xor
arpl
andl
xchg
jle
mov
and
loopne
mov
push
popf
mov
cmp
popa
adc
lds
iret
cwtl
and
inc
clc
int
adc
push
shrb
out
dec
subb
orl
push
pushf
mov
push
push
clc
das
sbbb
push
pop
sub
and
cltd
and
inc
or
mov
popa
cmp
xchg
or
fwait
xor
or
add
ja
push
add
jbe
arpl
push
or
pop
and
jmp
stc
add
lock
mov
push
adc
cwtl
and
jo
and
aas
xor
xor
aaa
add
push
daa
cmp
aaa
xor
jp
mov
jo
arpl
mov
xor
mov
xor
and
es
sarb
mov
jmp
rorb
pop
adc
mov
push
mov
add
mov
mov
mov
call
jle
and
pop
or
jnp
rolb
xchg
dec
sub
and
push
roll
fiaddl
pop
rorb
mov
outsl
add
fwait
dec
add
inc
add
pop
push
add
push
mov
mov
subb
adc
faddl
aaa
xor
ret
push
imul
mov
inc
ret
mov
andb
dec
cmp
mov
add
jno
roll
aaa
into
in
jno
cmpsb
shll
jecxz
icebp
mov
cmp
scas
xor
mov
ss
xchg
clc
inc
test
iret
adc
testb
jae
push
fildll
mov
fsubrl
inc
roll
jns
mov
jo
pop
pop
int3
xchg
rolb
dec
xor
mov
xchg
push
cmp
aam
or
or
jg
outsl
add
shlb
lock
sub
clc
mov
lahf
push
adc
mov
fdivl
cmp
aas
cmp
add
aad
mov
or
adc
xchg
xor
stos
mov
add
lock
aam
inc
mov
push
pop
js
cmp
push
sbb
inc
add
fdivrl
mov
ret
inc
sbb
cld
inc
sbb
inc
jbe
sbb
mov
pop
mov
test
or
mov
mov
fisttpl
jne
xchg
cmp
bound
or
mov
pop
das
ljmp
mov
dec
roll
mov
push
xor
add
fdivrl
add
jne
cmp
adc
add
mov
mov
stos
push
aaa
out
adc
cmc
push
mov
sub
add
add
xor
add
sub
sub
push
inc
mov
xor
insl
and
inc
xor
jge
jbe
fs
push
loopne
jge
insl
add
sub
xor
das
pop
cmp
mov
pushl
out
rolb
cld
mov
rol
ss
mov
and
inc
ja
pushl
out
xor
push
push
sub
sub
mov
mov
mov
jb
stos
aaa
xchg
cmp
fcmovu
sub
jno
push
lcall
add
das
jmp
into
fwait
mov
mov
add
mov
mov
inc
mov
mov
mov
pop
test
mov
cli
jmp
adc
ds
mov
dec
xor
or
inc
or
cmp
inc
ljmp
fwait
subb
test
mov
xor
out
scas
sarl
inc
pop
and
inc
ds
mov
jb
stos
das
xchg
add
nop
add
ljmp
rclb
jo
add
add
and
lock
add
inc
push
ret
or
fnsave
push
rorb
add
and
mov
add
ss
mov
lcall
sbb
jmp
xlat
or
mov
xlat
inc
and
inc
jg
cmp
push
into
adc
scas
cmpsl
lods
adc
push
ljmp
fildl
je
push
divb
rcrb
test
push
xor
or
push
push
inc
pop
xchg
stos
lahf
adc
mov
lret
jg
lock
push
pushf
and
ret
iret
add
add
xor
inc
jg
mov
pop
add
add
lahf
ret
add
push
xor
pop
jg
dec
and
and
mov
add
cmp
xchg
cmp
incl
push
aad
add
and
and
mov
and
in
ds
fsts
xchg
sub
add
mov
in
fs
push
inc
loopne
test
sti
and
fbstp
push
and
and
mov
mov
rclb
mov
push
mov
ret
mov
cmpsb
add
or
insb
add
add
add
rclb
add
sub
or
inc
fwait
adc
aaa
pop
add
std
mov
pop
add
mov
ret
push
js
nop
outsb
loopne
add
dec
add
or
inc
jg
push
cli
aas
mov
fnstenv
xorb
out
js
add
inc
pop
mov
arpl
lock
mov
xorb
fs
mov
andl
add
mov
mov
xchg
add
add
push
and
or
xchg
andb
xor
add
dec
adc
stos
addl
push
and
add
in
incl
daa
add
dec
jnp
cmp
xor
scas
call
add
push
dec
scas
xor
popa
sahf
inc
pop
in
out
into
adc
xor
test
xor
add
push
or
cwtl
stos
or
mov
dec
add
lret
sbb
mov
arpl
fisubl
or
push
xchg
lock
adcb
push
addb
jbe
andl
add
mov
jp
mov
adc
orb
rolb
ds
fsubrs
popf
addb
xor
xor
addb
push
stos
cmp
cwtl
jmp
shlb
movsl
les
jmp
clc
adc
push
adc
xor
jno
mov
dec
stc
pop
addr16
into
mov
cltd
add
fists
dec
jge
addl
ds
push
cmp
add
fwait
xor
cmp
xor
inc
fisubrl
cmp
cmpsb
cli
inc
mov
xorl
ret
pop
out
fwait
in
shlb
lahf
add
std
and
push
subl
ljmp
jmp
sub
mov
fadds
mov
and
shll
jne
mov
test
inc
inc
cmc
testb
inc
inc
fsubrs
adc
ljmp
push
dec
aas
call
pop
sarb
mov
jg
push
addb
or
push
iret
mov
scas
push
aaa
mov
iret
pextrw
or
pop
in
icebp
fs
sysenter
xor
push
inc
cmp
jg
fdivr
add
mov
cmp
jne
and
adc
scas
outsb
push
mov
loopne
mov
dec
add
dec
std
xorl
punpcklwd
mov
aaa
cld
data16
adc
cs
push
bound
fisttps
out
outsb
mov
cmc
add
add
pop
fadds
or
cwtl
inc
addr16
inc
adc
les
and
test
int
mov
sbb
fsubrs
mov
pusha
dec
dec
pop
adc
fistpl
cmp
adc
add
fldl
pop
jmp
enter
pop
inc
and
mov
push
inc
add
add
lock
adc
movsl
mov
ret
and
push
mov
lret
or
lret
std
stc
xorb
cmp
imul
xchg
mov
jmp
shlb
pusha
adc
xchg
xchg
or
iret
xchg
clc
add
movsb
and
or
add
jb
cli
mov
sub
and
push
and
adcb
shlb
insb
lock
push
mov
xchg
mov
clc
cmpsb
pusha
addl
dec
add
adc
je
add
pop
jg
cmpb
lds
push
xchg
in
sub
add
push
add
and
add
sbb
mov
mov
int
jl
pop
bound
and
adc
scas
les
jmp
pop
nop
std
push
push
xchg
test
lea
clc
adc
or
mov
or
push
out
mov
or
pop
pop
shlb
dec
push
aas
js
dec
lcall
inc
insb
inc
push
fs
mov
loop
inc
cmp
xor
outsb
imul
jo
adc
mov
lcall
jmp
movsl
and
inc
add
or
lods
pop
add
ret
loopne
mov
into
clc
lahf
push
inc
fsubr
and
or
fistl
mov
out
popa
std
dec
pop
dec
push
sahf
cmp
sbb
pop
sub
lahf
cmc
pop
sbb
xor
iret
aas
jb
add
std
inc
pop
pop
jb
adc
mov
cmp
mov
enter
lahf
push
inc
push
or
int3
inc
aas
insb
and
inc
adc
pop
sbb
add
rorb
xchg
mov
xchg
mov
in
push
pop
push
scas
dec
inc
mov
into
mov
adcl
adc
mov
fs
mulb
pusha
xchg
sub
int
iret
lret
pop
inc
mov
and
fbstp
push
ficompl
lcall
cmp
cli
push
or
cmc
dec
inc
lods
mov
xor
or
enter
push
sbb
lods
pop
jo
daa
outsl
mov
popl
mov
negb
mov
adc
xchg
cmc
sub
push
push
add
mov
nop
push
push
or
push
loopne
lret
xor
add
push
xor
cmp
out
add
out
scas
stc
or
push
mov
push
out
xor
jb
pop
insb
sti
mov
rolb
jle
and
push
ljmp
rorl
clc
xchg
push
jecxz
adc
out
lock
sbb
add
jnp
bound
or
dec
pop
aad
sti
add
and
mov
subb
repz
fsubl
mov
ret
and
inc
lcall
outsb
int
addb
fbstp
or
fiadds
jecxz
insb
outsl
outsb
iret
xchg
jle
rclb
pusha
sti
add
sbb
push
sbb
push
pop
add
push
inc
adc
jle
lcall
mov
sbb
add
dec
loop
mov
mov
dec
add
repnz
adc
stos
repnz
and
pop
inc
push
add
inc
pop
mov
and
adc
andb
xchg
or
and
dec
add
xchg
insb
mov
lock
xchg
mov
fwait
lods
shll
repz
dec
out
mov
outsb
sbb
pop
or
lcall
xor
pop
rcr
or
lock
dec
dec
xor
iret
mov
scas
mov
add
and
adc
imulb
outsb
sub
cmc
add
and
int3
mov
pop
cmpsl
orb
jns
inc
pop
mov
movsb
ja
insb
push
lcall
repz
add
notb
lods
or
mulb
dec
inc
or
jae
scas
in
mov
test
loopne
nop
jge
jb
jns
add
pusha
xchg
add
test
rolb
repnz
rorb
lock
js
loope
pop
iret
mov
pusha
fwait
or
pop
add
aas
jl
add
jge
ja
testb
into
mov
cmpsl
add
rolb
cmpsl
mov
sbb
test
and
push
sub
sbb
xchg
fsubl
sti
stc
and
jle
dec
lock
mov
mov
fwait
add
rcrb
sarb
test
jmp
fmulp
add
xor
pop
mov
mov
sbb
test
xor
test
out
pop
sub
lock
mov
mov
jle
icebp
out
jp
or
cwtl
add
cwtl
jno
mov
adc
mov
xor
pop
popa
sub
repnz
adc
or
push
insb
inc
aas
adc
xor
lods
dec
mov
or
and
adc
push
repnz
mov
jno
pop
mov
cld
pop
push
filds
add
aad
mov
js
rcrl
and
or
shll
cmpsl
adc
popf
adc
iret
mov
dec
push
pop
rorb
insb
mov
rolb
mov
clc
push
fdivrl
out
add
cwtl
jp
push
scas
adcb
xor
ss
bswap
mov
xchg
add
rcll
push
mov
in
in
out
cmp
add
or
jp
mov
lods
adcl
pop
add
add
lret
add
into
mov
js
pop
imul
adc
or
adc
lods
ljmp
lock
scas
clc
outsl
lcall
and
jo
push
testl
mov
add
xchg
lock
adcb
xchg
mov
negl
idivb
subl
nop
push
and
xorb
mov
or
add
inc
sub
jg
daa
iret
mov
std
mov
add
sbb
fcomi
stos
push
sbb
pop
mov
ret
test
and
mov
sbb
sbb
nop
push
xor
jl
and
dec
inc
xorb
incl
xchg
ss
inc
enter
xchg
mov
call
pop
rorb
sub
outsl
xchg
pop
xorb
and
mov
add
mov
pop
addb
mov
mov
xchg
xor
adc
rolb
jmp
push
cmp
mov
adc
push
adc
in
filds
lods
xor
mov
add
nop
imul
xchg
mov
data16
orb
enter
into
and
mov
rolb
jae
pop
add
scas
cmp
pop
and
or
push
adc
fisttpll
xchg
aam
popf
cld
mov
mov
rcrl
aas
mov
clc
add
jae
push
mov
cmp
sbb
mov
xchg
ds
mov
or
inc
or
mov
in
enter
repnz
scas
xor
cli
loop
adc
add
imul
sub
xor
aaa
enter
push
or
sbb
pop
xor
inc
push
loope
dec
sbb
ss
out
add
adc
pop
cld
mov
sub
pop
loopne
add
or
xor
call
scas
insb
dec
jbe
xor
mov
or
jp
addb
xor
sbb
adc
lret
inc
ror
movsbl
or
clc
addb
mov
add
xor
jmp
adc
mov
aas
xor
cli
in
sarl
jle
pop
push
jl
fadds
xor
pop
sbb
push
adc
cmp
add
add
or
mov
cmovo
roll
jbe
jle
faddl
and
pushf
xorb
divb
pop
shlb
shlb
mov
ss
ja
push
jl
push
add
adc
xchg
or
aaa
shrl
andb
leave
lcall
jl
stos
into
stos
cmp
in
pop
roll
and
insb
sub
adc
addb
into
fwait
add
push
test
add
cmp
mov
mov
xorb
inc
push
add
in
mov
push
into
rcll
out
daa
into
add
or
in
je
shlb
xchg
movb
add
pop
mov
sbb
ja
incl
jg
cmpsl
subl
sbb
ficoms
mov
stos
sbb
clc
pop
cld
fbstp
leave
push
push
mov
mov
mov
and
pop
out
inc
fdivrs
sub
add
mov
add
adc
in
xor
and
fimull
push
fbstp
add
xor
iret
mov
test
outsb
pop
sub
cmp
sar
loope
xchg
adcb
jl
gs
mov
mov
mov
xor
incl
movsl
addb
stos
rcrb
sub
mov
mov
add
imul
sub
pop
outsb
js
xor
sti
andb
lock
popa
jo
incl
xor
adcl
cltd
ret
mov
xchg
add
xor
add
sbb
push
loop
mov
cld
cmp
add
enter
fs
inc
xor
rcrb
gs
test
sub
and
stos
in
mov
ficoms
pop
add
inc
xor
mov
add
add
stos
add
xor
sahf
iret
in
adc
mov
mov
xchg
addb
jmp
and
rorl
clc
mov
mov
or
sub
sub
mov
shlb
cmpsl
mov
nop
idivb
out
pop
and
fcoms
xor
mov
inc
jecxz
inc
add
pop
adc
xor
cmpsl
cmp
stc
cmp
or
incl
cltd
mov
rcrl
sbb
mov
popa
inc
add
add
sbb
mov
xchg
jecxz
inc
insb
push
jl
ja
or
mov
sub
sbb
fwait
sbb
add
in
sub
xor
stos
xor
outsl
out
das
add
mov
in
pushf
nop
inc
push
inc
jo
std
imul
sbb
mov
fisubrl
mov
pop
sbbb
cltd
mov
cwtl
add
stc
add
sub
pop
add
pop
add
pushf
mov
mov
and
add
push
aaa
inc
in
ljmp
pusha
cmp
pop
mov
add
push
addl
nop
pop
or
add
pushf
jbe
test
push
test
inc
jl
mov
inc
call
scas
adc
add
or
pop
mov
adc
jo
mov
add
sbb
pop
add
push
mov
push
push
dec
adc
add
and
and
ljmp
jp
jmp
push
pop
imul
outsl
loopne
and
add
or
addl
add
mov
mov
ret
push
or
or
sub
bound
and
cmp
mov
mov
inc
icebp
roll
or
sub
data16
and
push
sub
dec
inc
in
and
adc
mov
pop
out
sbb
shll
lcall
or
xor
incl
push
mov
rcrl
popa
sub
sub
pusha
inc
call
ss
sbb
and
sbb
rorb
je
shlb
out
lds
out
outsl
xor
inc
mov
in
sbb
ljmp
mov
loopne
xorb
pop
ret
fstpt
and
into
mov
mov
xorb
aaa
popa
xchg
or
test
add
or
pop
cld
ss
adc
iret
int3
add
in
sarl
mov
cmp
sub
mov
pop
inc
insl
in
lret
mov
loop
loop
push
push
ja
sub
in
xor
or
and
lods
cli
aas
loop
int3
mov
mov
es
ret
mov
xor
add
movsb
das
cli
outsb
ret
je
pop
imul
push
mov
pop
add
call
jno
push
inc
data16
xor
jg
mov
int3
loopne
mov
popf
mov
jle
aas
out
add
lret
sahf
mov
loopne
jg
cmp
cltd
or
aaa
fistpll
gs
or
inc
mov
call
push
cmpsb
xchg
add
nop
popa
add
in
pushw
adc
mov
call
les
andb
jno
das
adc
xchg
mov
loop
outsl
call
les
xchg
add
cmp
or
cwtl
lcall
mov
jae
test
imulb
or
xchg
add
mov
loop
cmc
inc
in
add
mov
data16
in
dec
cs
pushl
frstor
xchg
enter
and
mulb
pushl
mov
pop
movsb
leave
jb
jb
push
mov
push
adc
fcmovnb
loopne
mov
ret
add
ret
inc
adc
add
or
js
mov
xchg
push
xchg
dec
out
push
xchg
add
and
cltd
mov
mov
das
push
inc
call
and
mov
pop
gs
ret
push
popa
in
and
ss
je
addb
inc
mov
mov
sbb
sarl
ds
and
test
jo
or
mov
xchg
push
inc
test
mov
subl
dec
and
into
mov
call
in
shrl
roll
loopne
lcall
sar
loopne
push
add
fdivl
jg
and
sti
mov
mov
sti
call
xor
jp
xchg
and
mov
adc
dec
mov
xchg
or
cmpb
xor
mov
mov
fsubrs
stos
jge
ljmp
adc
js
jo
cs
cmpsl
rolb
scas
sbb
add
push
or
outsb
int3
adc
add
pop
outsl
stos
and
push
adc
add
incb
insl
push
add
mov
ja
xor
xchg
add
push
add
xchg
loopne
sahf
mov
dec
sti
inc
adc
outsb
add
push
leave
mov
xchg
addl
xor
inc
add
push
rclb
popa
es
cmc
call
aam
shll
test
mov
and
mov
cmp
xor
mov
sbb
iret
add
cli
or
rcrl
adc
mov
addl
inc
push
test
loopne
sub
xchg
es
arpl
jmp
cmp
aad
mov
in
add
and
sbb
jb
dec
adc
loop
jb
ljmp
push
jo
jl
pushf
jo
cmp
inc
and
xchg
movsb
inc
mov
ljmp
cmc
scas
xor
mov
ss
mov
jo
mov
dec
mov
jmp
out
inc
jmp
push
add
xor
ljmp
stos
leave
mov
rorb
adc
xor
inc
out
mov
jo
cmp
sarl
push
jle
jg
mov
mov
push
ss
mov
or
mov
xor
mov
ss
jo
lods
lret
or
jmp
mov
ss
sub
call
add
push
push
arpl
pop
mov
cmp
nop
adc
lods
outsb
faddl
push
mov
subb
ja
loop
or
sbb
adcl
adc
hlt
data16
fcmovne
test
icebp
mov
fwait
sub
jecxz
cs
dec
mov
loop
fnstsw
jg
mov
fwait
sub
loop
add
push
adc
push
mov
push
and
mov
or
das
jmp
jle
loopne
and
add
jo
mov
mov
ljmp
in
and
cmpsb
and
add
das
adc
pop
mov
xor
je
cli
cs
xor
inc
xorb
add
or
call
loop
mov
adc
xchg
es
les
and
jo
jnp
mov
add
and
adc
pusha
rcll
daa
call
add
bound
inc
aas
nop
cld
je
mov
inc
mov
test
mov
jmp
xor
fists
add
mov
add
or
cmpsl
add
sbb
cmp
mov
push
add
add
inc
add
cmp
fwait
icebp
add
xchg
inc
and
icebp
outsl
push
mov
push
add
add
jge
push
daa
xorb
outsb
and
rclb
sub
push
outsb
iret
sbb
adc
xchg
mov
std
fists
add
jle
add
shll
jle
adc
pusha
or
pusha
xor
call
add
sub
xchg
push
add
ljmp
jno
xor
outsb
test
stos
xor
test
xchg
loop
mov
push
mov
xor
jl
pop
and
inc
or
dec
mov
mov
decl
mov
mov
or
nop
orb
lock
lcall
mov
xor
xor
inc
xlat
lahf
das
fistpl
lock
mov
or
hlt
mov
rol
adc
push
dec
inc
lock
cmp
pusha
add
push
mov
push
cmp
pop
lods
inc
jae
and
jl
movsb
pop
jae
insl
sar
and
adc
ret
adc
rclb
add
ss
insl
rcr
jb
xor
inc
sub
sub
jg
lret
hlt
inc
add
push
adc
enter
add
jnp
pop
cwtl
push
stc
flds
lds
adc
mov
mov
into
and
mov
mov
orb
adc
fldl
adc
jnp
or
ret
dec
adc
and
icebp
fidivrs
and
adc
mov
ss
xor
mov
push
clc
push
adc
into
fbstp
add
sbbl
adc
shlb
in
mov
jb
inc
mov
pop
rorl
decb
pop
in
nop
dec
nop
ja
fidivrl
push
mov
scas
mov
mov
mov
push
clc
mov
pop
loopne
xchg
mov
test
mov
rolb
pop
shlb
in
add
orb
bound
mov
inc
shlb
mov
add
repz
cmc
add
push
nop
in
mov
sbb
lock
in
das
xchg
add
xor
xor
xchg
mov
push
cmp
xor
jb
outsl
pop
push
mov
push
mov
rcrb
push
pop
imul
push
add
rcll
xchg
sbb
andb
cmp
cmp
mov
in
inc
sub
or
push
jp
in
js
aam
call
mov
mov
mov
pop
inc
nop
cmpsb
adcb
push
pop
loope
mov
jae
xlat
xor
mov
jo
pop
or
jle
add
shlb
js
rcll
add
rolb
inc
imul
or
outsl
xchg
les
iret
lods
hlt
push
ja
clc
pusha
cmp
sub
lret
mov
lock
cmp
iret
mov
mov
ret
xor
add
sbb
decl
lret
push
mov
dec
arpl
mov
adc
mov
and
sub
and
sbb
mov
les
push
stos
sti
jo
lods
add
subb
into
dec
out
xor
sub
incb
mov
and
stos
mov
sti
int3
stc
in
jl
int3
jmp
lock
add
xor
pushl
js
lods
dec
push
mov
iret
mov
xor
add
pop
and
mov
or
mov
or
xchg
jo
push
sbb
shlb
add
and
xchg
mov
adc
lock
mov
mov
pusha
add
dec
cmp
mov
sbb
dec
xor
scas
push
add
ret
pusha
jns
fs
add
nop
in
push
jmp
fmul
sbb
sub
push
test
mov
mov
xor
mov
cmp
ljmp
adc
add
inc
xor
or
sub
cmp
and
cmp
pop
enter
cmp
andb
je
pop
push
stos
push
in
dec
cld
mov
jmp
dec
andb
xchg
add
push
fmull
addb
add
rcrl
or
sti
and
mov
sub
dec
or
push
fsubp
adc
dec
iret
xchg
xorl
jnp
iret
adc
add
mov
decl
inc
or
jo
test
jae
or
and
jmp
loopne
subl
lea
mov
jg
mov
push
add
mov
xchg
shlb
sub
shlb
dec
pop
incl
std
cmp
leave
adc
and
and
jge
loope
js
adcb
shlb
inc
sbb
mov
adc
ss
adc
out
cmp
jle
nop
xor
rcrl
mov
cmp
clc
jle
cmpl
cmp
push
add
movsb
add
push
ret
mov
add
or
inc
xchg
mov
inc
jecxz
jle
clc
sbbb
add
push
push
adcl
push
fsubl
outsl
add
nop
jge
cmp
rolb
jp
nop
push
pop
push
mov
sbb
add
dec
jge
jge
lret
mov
mov
sarl
sub
mov
xor
cmp
lods
stos
mov
push
call
aaa
push
push
xor
es
or
roll
iret
in
or
mov
mov
in
mov
hlt
inc
inc
mov
push
loop
test
lock
cmp
pusha
push
mov
inc
cmpl
stos
cmp
mov
sub
call
inc
sub
add
mov
pop
pop
cwtl
xlat
lahf
shlb
rolb
cltd
mov
xor
or
out
mov
xchg
iret
mov
push
sbb
inc
ficompl
clc
rclb
inc
add
aam
and
fldl
sbb
or
loopne
sbb
or
or
out
sub
push
jecxz
inc
mov
dec
mov
bound
cmp
lcall
push
and
and
xor
push
adc
add
and
and
xchg
push
inc
loope
and
add
addl
or
or
sub
xor
push
mov
pop
fimull
rolb
mov
xor
add
add
addr16
js
inc
loop
in
xchg
fldt
loopne
sarb
add
filds
in
rorb
mov
ret
out
lahf
mov
cmpsb
loopne
sub
push
xchg
sarl
rol
hlt
fildl
imul
and
dec
xor
push
push
test
iret
scas
rorb
shlb
xchg
ds
push
add
or
push
push
and
aas
adc
inc
mov
jo
mov
test
pop
loope
sbb
into
jmp
add
int
or
int3
repnz
or
roll
jecxz
mov
pop
leave
pop
add
push
push
and
scas
repnz
add
stos
pusha
sub
dec
pop
inc
rorb
mov
rorb
mov
mov
iret
inc
sbb
or
mov
push
xchg
xchg
pop
mov
add
push
xor
std
aas
lea
lret
pusha
sbb
pop
lcall
mov
inc
inc
sub
or
mov
dec
shlb
inc
sub
mov
mov
inc
xchg
scas
and
jns
popa
lods
adc
mov
or
adc
fwait
sbbb
push
inc
and
ljmp
dec
shlb
notb
and
add
pop
ret
incl
lret
add
add
filds
test
test
pushf
mov
addb
mov
insb
add
out
cmpsb
mov
mov
inc
adc
xchg
stos
or
jp
add
je
xchg
mov
pop
lcall
mov
cmp
pusha
iret
mov
out
call
add
mov
adc
popa
outsb
xorb
test
push
cmpsl
mov
xor
jp
push
ss
sub
add
aam
adc
push
mov
sbb
cmpb
and
sbb
pusha
mov
loopne
or
icebp
push
std
push
dec
mov
and
fwait
orb
add
jo
das
adc
ss
add
or
push
fdivr
pop
rclb
fiaddl
add
add
lock
mov
mov
movsb
test
push
int
into
mov
movsl
clc
test
mov
or
or
imul
mov
pop
fadds
cmp
jb
pop
sti
xor
loopne
push
jge
nop
sbb
lock
jl
push
mov
cmp
jo
mov
pusha
push
push
push
xor
xor
add
sahf
xor
int3
addb
inc
xor
outsl
xor
cld
mov
mov
insb
insb
add
cwtl
xchg
add
xchg
jl
test
test
mov
mov
and
add
lcall
dec
repz
iret
shr
in
adc
ret
xchg
nop
inc
gs
push
and
scas
rolb
call
pop
cs
sub
adc
push
jle
pop
gs
shlb
xchg
mov
aas
add
sub
add
and
xchg
aaa
jb
rcll
faddp
addr16
xchg
ljmp
jno
mov
jecxz
and
push
in
shlb
fwait
cli
mov
test
pop
xor
dec
mov
sti
lcall
test
mov
loope
leave
push
dec
and
or
add
mov
and
dec
in
shrb
add
add
lock
mov
add
ficomps
test
dec
cmp
xor
jns
xchg
daa
add
subb
lcall
push
stos
lcall
or
inc
xchg
add
pop
jno
rorb
and
aas
mov
mov
sbb
lea
xor
aam
jae
add
add
cmp
popa
add
into
pop
push
lcall
add
add
add
sbb
xor
outsl
xor
in
and
inc
cmovne
aas
adcb
push
mov
adc
js
xchg
jbe
xchg
sbb
js
shrl
push
jno
rcrb
mov
add
jg
cmc
aas
sbb
add
mov
mov
add
or
xor
push
mov
ret
je
out
mov
push
xor
mov
add
rcrb
or
mov
push
or
mov
subb
jp
add
mov
jmp
push
push
add
xchg
loopne
pop
mov
sub
jmp
stos
cmp
cmp
pop
rcrl
sub
sub
ja
lods
add
pop
mov
push
das
lods
cli
or
mov
jo
loopne
loopne
in
sti
mov
mov
add
mov
or
popa
add
mov
add
mov
jg
inc
add
enter
ret
lahf
mov
mov
cmpsb
loopne
mov
mov
push
pop
inc
pushl
pop
insb
movsb
jno
test
and
cmp
icebp
push
mov
in
mov
sar
add
mov
rorb
js
push
pusha
fwait
or
nop
and
xchg
xor
aad
sub
push
push
mov
push
in
fiadds
sub
sti
loope
mov
adc
fnsave
xchg
jno
lds
mov
pop
hlt
popf
testb
xor
lods
or
shrb
mov
or
push
insl
outsl
test
pop
es
adc
push
decb
sbb
out
loopne
andb
xor
pop
adc
xchg
xchg
lahf
xor
nop
mov
mov
iret
fs
or
nop
and
jg
hlt
into
insb
loopne
mov
mov
or
mov
ret
sahf
push
outsl
mov
push
lret
mov
add
nop
or
dec
adc
ljmp
loope
adcb
adc
in
stc
push
xchg
add
data16
cmc
xchg
or
rcrl
dec
lock
inc
mov
push
cwtl
cmp
inc
mov
ljmp
fmul
stos
call
sbb
xor
push
mov
and
insl
stos
loopne
in
andl
loope
xor
add
and
adc
and
movsl
jge
lods
push
jl
inc
lcall
xor
sub
push
sbb
add
fisttpll
adc
and
jbe
mov
cmp
push
mov
jns
or
mov
add
push
imul
ja
mov
add
xchg
xchg
ret
pop
jnp
xchg
mov
mov
push
add
fwait
outsb
decl
test
or
in
or
and
xchg
roll
rcll
sti
jg
jl
outsb
shrb
mov
outsl
js
jmp
ror
mov
push
push
movsl
adc
or
or
nop
sub
ret
push
push
dec
add
into
mov
frstor
and
dec
add
incl
cwtl
pop
decb
popf
or
call
mov
call
push
rcrb
enter
scas
ret
iret
fiaddl
loope
pop
stos
stos
rorl
and
sarb
adc
or
add
imul
int3
ficoms
ljmp
aam
mov
sub
push
pusha
clc
mov
mov
mov
xor
sub
test
icebp
das
adc
bnd
inc
outsb
xchg
and
or
stos
pop
jo
sub
add
test
outsb
sub
hlt
stos
lock
les
call
add
push
push
fdivl
scas
jno
in
xor
adcb
rclb
push
das
add
add
jge
sub
adc
mov
out
cli
ljmp
or
stos
jle
pop
shr
mov
push
add
inc
in
fs
push
pushf
adc
stos
sbb
arpl
add
lock
xchg
fstpt
inc
movsl
jmp
xchg
xor
mov
or
enter
mov
movl
idiv
iret
enter
sti
data16
jb
mov
test
cmp
and
pop
pushf
or
les
add
add
pusha
xchg
aaa
xchg
adc
dec
dec
pop
and
ss
or
cli
mov
adc
cmpl
adcb
bound
pop
push
cmp
cmpsb
leave
push
jo
ljmp
scas
imul
out
andb
push
sbb
aas
dec
add
mov
adc
insl
xor
pop
filds
cld
mov
sarb
pop
add
mov
lret
sub
sbb
mov
adc
add
fwait
loop
jecxz
cld
adc
add
idiv
outsl
js
inc
in
or
pop
inc
lret
add
leave
pop
pop
fwait
mov
dec
loopne
repz
jb
repz
aaa
cld
sti
insl
cmp
mov
pop
jecxz
inc
data16
fs
xor
mov
ljmp
clc
mov
add
aam
jno
dec
inc
add
outsl
mov
adc
jne
mov
les
inc
notb
hlt
or
adc
in
mov
repz
in
fwait
in
cli
aam
add
clc
dec
mov
xor
loop
orb
pop
fidivrl
jecxz
xor
cmp
ljmp
inc
in
das
lock
fs
addl
push
std
mov
add
sbb
mov
pop
jecxz
dec
adc
aad
add
pop
adcl
adc
jg
mov
cmpl
in
bt
or
icebp
jmp
or
cmp
xchg
cwtl
call
in
sets
loopne
addb
rcrl
sub
ss
push
mov
pop
lock
mov
mov
and
add
pushl
iret
mov
stc
ss
xchg
add
push
push
cld
or
adc
inc
loop
adc
add
ljmp
add
roll
sahf
lahf
pop
dec
popa
pop
movsb
ds
fisubrl
fwait
push
adc
aaa
sub
and
sahf
ret
inc
rclb
subl
pusha
push
or
ficoml
or
mov
imul
add
rcll
clc
mov
jb
lods
jno
add
and
sahf
cmp
push
cld
ud0
add
add
adc
in
mov
call
mov
aam
insb
lahf
dec
loopne
pop
and
add
mov
add
mov
or
cli
in
xchg
cmpb
in
push
push
jecxz
and
int3
mov
push
mov
test
adc
js
push
dec
roll
mov
cmpsb
hlt
xor
imul
sbb
push
rorl
rcrl
mov
cmp
lret
xorb
bound
add
in
psrld
xor
sbb
add
sti
push
cld
incl
outsb
test
add
mov
inc
mov
jno
sbb
add
sub
pop
mov
inc
mov
montmul
cmpsb
push
fsubl
and
mov
je
push
mov
inc
shl
jbe
ret
mov
jb
push
push
push
mov
or
aam
lret
gs
mov
add
ss
xor
inc
adc
mov
jl
mov
fsubs
sarl
mov
std
or
add
pop
jmp
sub
adc
push
pushf
add
aam
add
aas
bound
xchg
inc
adc
push
and
push
cmp
inc
adc
inc
pusha
jns
js
out
inc
adc
adc
inc
sbb
hlt
stos
scas
ljmp
mov
xchg
add
out
je
mov
jbe
rcr
xor
sbb
mov
xchg
mov
adc
ds
mov
xor
adc
loop
jo
inc
ljmp
orl
mov
mov
sub
popl
and
add
or
inc
lret
stos
push
fmuls
outsb
pop
cs
call
sbb
sbb
adc
push
push
test
cmc
xor
xchg
decb
jg
push
bound
stc
sarl
shlb
rcll
mov
jbe
pop
xchg
dec
lock
pusha
lcall
incl
aas
bound
lods
sbb
inc
and
inc
adc
and
inc
adc
pusha
or
lcall
sbb
xchg
inc
add
push
and
push
shrb
ja
add
sub
inc
sarl
xor
call
and
dec
clc
ret
push
call
add
cmovns
popf
jno
loopne
mov
mov
mov
imul
push
aam
jnp
or
mov
adc
or
ret
insl
push
sub
dec
push
sbb
mov
add
mov
push
lcall
mov
cmp
pusha
inc
sbb
and
mov
loope
fidivs
push
inc
add
xchg
rol
mov
push
push
inc
push
insb
mov
cwtl
jae
and
and
mov
and
rol
inc
cmp
add
push
mov
lods
xor
or
sub
push
mov
dec
push
inc
mov
xchg
and
loope
std
lcall
push
push
mov
add
loop
addb
push
mov
loopne
add
adc
push
les
sti
sbbb
mov
sar
inc
mov
add
adc
adcb
test
and
xor
popf
stos
and
adc
loope
mov
xchg
or
push
pop
lods
addl
icebp
jno
dec
xor
mov
mov
frstor
insb
mov
add
add
lahf
and
or
rcrb
mov
out
push
jmp
scas
mov
push
add
mov
push
outsl
xchg
adc
sbb
add
push
repnz
sbb
and
cmpsl
call
or
add
push
incb
psubsb
pop
sub
or
inc
or
and
inc
mov
xchg
or
imul
shlb
and
aad
jle
sub
nop
add
jg
or
js
push
or
or
sub
sub
add
inc
xor
mov
les
add
or
mov
mov
iret
mov
xor
fs
popf
add
add
mov
test
cmp
xor
or
shlb
xor
out
add
into
cmc
rorl
or
sti
iret
mov
aas
push
dec
inc
sub
jmp
stos
push
stos
aam
add
sarb
nop
push
shll
xor
clc
cmp
add
enter
scas
push
cld
pop
outsl
mov
xor
lock
push
jecxz
ret
mov
imul
and
dec
pusha
test
push
pop
lock
hlt
inc
adc
add
mov
mov
lods
jge
sub
xchg
sub
adc
add
push
or
mov
or
xchg
cs
or
jecxz
sub
push
clc
call
sub
cmp
or
xor
icebp
mov
into
inc
shlb
mov
jae
xchg
aam
aaa
pop
mov
adc
ja
adc
push
fsubrs
mov
push
cmp
popa
or
add
inc
mov
adc
mov
leave
fsub
loopne
sti
scas
pop
hlt
mov
pop
ljmp
cmp
jo
iret
stos
push
scas
xchg
cmpb
add
out
push
rcr
loop
adc
add
arpl
mov
adc
mov
lea
jp
bnd
jbe
sbb
rolb
mov
addb
ja
inc
lea
add
adc
xor
add
out
xchg
xor
mov
mov
mov
jmp
clc
or
and
mov
jge
push
sub
int3
push
xchg
mov
push
add
scas
rorb
push
push
ss
dec
push
test
and
inc
inc
nop
jle
out
inc
mov
xor
push
in
mov
mov
add
lock
add
jle
push
mov
jg
jg
mov
inc
cmp
mov
incl
inc
xchg
aaa
cld
or
jno
adcb
push
jp
into
fists
in
add
push
add
insb
or
cmp
and
add
push
dec
mov
fcmovu
cmpsb
call
ret
mov
inc
xor
push
sahf
std
sub
inc
jb
or
inc
push
push
mov
push
cmpsb
add
dec
push
or
add
shll
test
insb
inc
es
bound
adc
cs
sbb
pushl
mov
push
sub
adc
test
outsb
test
into
jne
add
aam
or
jbe
jl
dec
push
bound
mov
rorb
daa
mov
and
paddd
push
cmp
mov
repnz
int
lds
or
bound
push
pusha
xchg
jp
cmp
dec
call
adc
push
test
push
nop
sub
aaa
sub
in
push
or
movsb
lock
push
or
mov
jnp
lods
in
mov
and
mov
or
scas
and
xor
fstl
cli
scas
xor
add
adcb
shl
add
out
loopne
in
mov
sbb
fldl
xchg
add
lcall
sub
mov
out
pusha
lock
lds
xchg
sarl
inc
add
pop
push
cltd
xor
popa
dec
jmp
mov
jbe
mov
push
adc
stos
mov
cmp
or
push
fs
adc
lock
add
andb
outsb
js
pusha
das
cwtl
movsb
dec
imul
dec
js
sarb
mov
inc
add
or
mov
jo
cmp
push
mov
sti
mov
mov
or
dec
push
mov
stos
mov
jo
inc
or
xchg
inc
shl
ss
inc
push
xchg
pop
pop
loop
scas
inc
stos
inc
cmc
xchg
aas
xchg
jnp
push
pusha
jl
aaa
test
xor
popl
jo
addr16
lahf
test
pop
cwtl
push
subb
jle
cwtl
pop
mov
push
dec
jo
mov
bound
in
and
aad
test
push
adc
addb
scas
sub
addl
sub
stos
movsl
and
fs
and
out
push
jg
add
xor
mov
jo
mov
insb
push
lock
and
dec
mov
iret
rorb
mov
inc
push
lods
cmp
cwtl
pop
xor
jbe
rclb
ljmp
or
inc
jmp
xchg
adc
cmpsb
jg
jae
xor
xchg
incb
jp
in
lock
mov
pop
sub
jecxz
or
adc
jo
push
sbbb
dec
mov
pop
jp
pop
adc
sub
mov
add
dec
push
pop
lcall
dec
rol
cmp
loope
push
test
xor
xchg
cmp
mov
aad
pop
inc
icebp
out
pop
push
andl
decl
add
xchg
jl
bound
sti
cmpsb
iret
popa
add
shll
mov
fstp
and
push
or
dec
dec
cmp
cld
add
pop
add
mov
mov
mov
add
in
je
dec
dec
xchg
sub
ljmp
or
dec
cmp
imulb
dec
loop
or
shll
jp
inc
push
cld
lcall
dec
mov
or
mov
fistl
clc
push
sub
popa
and
call
cwtl
xor
push
js
sahf
aas
push
pop
adc
adc
xchg
xor
push
lahf
mov
xor
cwtl
xchg
sahf
adc
xor
mov
add
repz
add
add
add
push
aam
inc
pop
inc
mov
sar
shlb
add
push
ljmp
pop
nop
xchg
mov
xor
cld
stos
dec
outsl
mov
dec
and
jbe
jno
icebp
mov
add
iret
push
stos
and
inc
add
xchg
xchg
xchg
clc
popf
pop
andb
in
in
incb
stos
inc
loopne
dec
int
les
fwait
stos
ss
ss
xchg
adc
pop
in
scas
insb
or
int3
stos
clc
jnp
iret
cli
push
add
inc
add
and
cmp
xor
call
adc
push
in
scas
js
mov
call
scas
xchg
rolb
push
stc
and
push
popf
xor
or
xchg
lods
pop
ds
inc
iret
fwait
cmp
adc
mov
jnp
call
and
rolb
arpl
js
adc
imul
sub
addb
xor
xchg
inc
test
rolb
pop
cmc
and
add
add
scas
test
mov
mov
iret
hlt
push
loop
pop
pop
pusha
cmpb
rorb
andb
out
add
mov
in
adc
test
cmp
addl
add
push
xor
dec
mov
mov
adc
fistps
subb
icebp
test
lcall
add
adc
rcl
sbb
jp
mov
rol
fistpll
stc
xchg
adc
idivl
fstpl
mov
cwtl
cmp
fstl
aaa
mov
shrb
lret
push
xchg
pushf
and
jge
pop
mov
inc
jo
adc
pusha
stos
cmp
adc
adc
jecxz
sbb
mov
adcb
movb
jecxz
ljmp
adc
push
aad
and
call
stos
xchg
jg
aaa
add
out
mov
add
pop
jnp
mov
mov
outsl
lea
cmp
push
roll
pop
xchg
rorb
jl
xor
cmp
leave
cld
roll
push
cmp
xor
fcomps
add
insb
out
call
cmp
pop
add
mov
add
lods
shrb
sti
aaa
sti
mov
push
mov
mov
jle
inc
add
outsl
push
jle
loopne
push
pop
or
xor
mov
inc
mov
inc
xor
add
push
pop
mov
jp
cmp
mov
xor
pop
sar
jg
inc
adc
in
call
popf
adc
mov
loopne
cli
cs
mov
push
loopne
mov
add
lcall
loopne
or
fisubl
cmp
rolb
orb
adc
pop
rolb
into
shrb
pop
rclb
pushf
incl
clc
or
test
pop
dec
pusha
adc
or
pop
jle
rcr
shl
subl
mov
pop
cld
sahf
jl
push
cmp
mov
mov
or
int
mov
mov
push
ljmp
or
adc
adc
fs
fwait
add
xor
mov
mov
pusha
clc
ljmp
or
pop
out
add
cltd
mov
loopne
mov
pop
addl
add
jg
sbb
xchg
sub
adc
shrb
jmp
sub
xor
sub
jmp
aaa
dec
adc
int
std
ss
mov
adc
mov
shrb
xorl
and
addr16
inc
and
repz
add
adc
add
jl
jg
fdivrs
gs
push
loopne
add
adc
decb
pop
push
aaa
and
sbb
clc
test
out
inc
in
inc
jne
pushf
pushl
mov
ljmp
lds
mov
rolb
inc
mov
or
cmp
fstpl
sub
push
jmp
scas
add
sbb
shll
and
inc
cmpsb
mov
or
inc
adc
push
or
mov
sarb
cwtl
adc
jle
jl
loopne
lock
jae
or
ss
nop
sub
test
lock
add
cmp
pop
sar
out
popa
mov
push
pop
adc
fnsave
xchg
popa
push
push
mov
std
mov
xchg
inc
sahf
xor
add
sar
movl
adc
popa
and
cld
int
xchg
leave
sbb
and
mov
adc
ljmp
and
mov
and
mov
mov
mov
test
pusha
es
cmpb
push
lea
mov
popa
movsl
lods
mov
pop
sub
subb
xchg
stos
enter
test
and
loope
add
pushf
ss
and
frstor
dec
fnstsw
lret
push
jo
jo
sub
in
test
enter
pop
push
ljmp
dec
mov
add
cmc
push
push
mov
mov
loop
sbb
inc
adc
push
inc
inc
inc
inc
addl
mov
or
outsb
in
jmp
shll
xor
mov
inc
or
add
loop
nop
push
or
fsubrp
inc
mov
aad
lods
mov
push
lret
sarl
les
lea
push
imul
xor
dec
inc
mov
out
test
lock
mov
jmp
in
loope
jmp
add
test
das
cmp
add
xchg
mov
add
xchg
cli
sbbb
inc
sahf
lods
nop
ffree
int3
add
outsl
jl
idiv
stos
rorb
in
rolb
ja
and
push
mov
shll
mov
loopne
stos
faddp
inc
sub
lock
jl
shll
das
add
mov
mov
xchg
add
fs
add
into
adc
call
pusha
mov
arpl
add
jp
filds
cmpsb
and
mov
call
addb
xchg
sbb
paddb
dec
mov
pop
sbb
iret
xchg
dec
and
and
xchg
fdiv
push
jae
push
dec
or
and
mov
mov
nop
add
nop
push
loopne
or
xor
dec
int
push
fists
jg
popl
add
or
test
push
and
and
into
out
sbb
mov
andb
inc
or
mov
ds
xor
and
dec
dec
jnp,pt
add
push
test
lahf
jg
pop
cwtl
xor
lods
mov
xor
xchg
leave
jle
xor
jno
test
mov
jo
nop
out
mov
mov
dec
std
mov
and
lods
mov
and
sbb
sub
pushl
jp
pop
scas
jmp
push
xor
xor
xor
inc
add
xchg
ficoms
rolb
loop
xor
loop
nop
jge
sti
leave
sbb
sti
jecxz
insb
xchg
cmpsb
or
andb
pop
add
adc
or
dec
leave
insb
js,pn
js
push
mov
xor
cli
cmp
or
or
mov
insl
mov
and
cltd
add
mov
pop
cli
stos
outsb
cli
incl
jp
test
rorb
pop
mov
ljmp
fiadds
mov
adc
add
into
stos
sbb
dec
sub
mov
mov
dec
sbb
fisubrl
fnsave
mov
pusha
cmp
mov
xchg
inc
test
incb
mov
and
jo
push
mov
bound
int
xor
push
sbb
sub
aaa
inc
test
mov
mov
mov
popa
xlat
push
imul
mov
sahf
xchg
test
ret
ffreep
aaa
pusha
push
mov
andb
call
xchg
xchg
scas
adc
ljmp
rorb
jo
mov
aam
dec
nop
adc
gs
sahf
nop
imul
es
push
add
pop
sub
sbb
xor
mov
addr16
push
adc
cld
fldt
out
and
lcall
or
jle
negb
mov
mulb
mov
aas
mov
sbb
dec
cmp
ret
ret
sbb
xor
dec
add
push
sub
inc
cmpl
andb
scas
es
mov
add
xchg
or
aas
cld
stos
dec
add
ds
add
jo
mov
data16
pop
mov
cmc
fadds
addb
push
jo
movb
aad
mov
adc
pop
dec
nop
or
nop
imul
ret
inc
loopne
nop
sub
pop
and
or
jp
dec
andb
adc
nop
add
negb
mov
sbb
sbb
adc
arpl
hlt
add
loop
mov
dec
in
or
xor
sbbb
or
repnz
cld
fstpt
xor
inc
xor
mov
cld
push
inc
jnp
or
mov
fwait
inc
inc
inc
je
call
adc
testl
dec
mov
imul
test
push
test
loopne
fcoms
lock
inc
inc
shrb
popf
adc
mov
mov
out
int3
xor
insl
jg
outsl
movl
dec
mov
and
and
imul
add
mov
adc
ss
or
push
sti
nop
adc
aaa
lds
pusha
push
ljmp
mov
lods
add
or
jno
dec
inc
sbb
out
jg
fidivrs
cmpsl
in
in
fsubl
sbb
mov
sbb
pop
mov
pushf
add
inc
xchg
inc
pop
mov
and
test
sbb
ja
adcl
ret
push
imul
lock
out
les
cld
imul
loop
adc
rcll
leave
or
add
test
les
adc
jp
xchg
push
mov
nop
rcrb
mov
push
dec
push
mov
mov
jge
inc
add
add
pop
or
dec
inc
or
adc
lods
loopne
mov
mov
mov
add
imul
out
inc
fidivrl
inc
into
mov
pop
or
orl
jmp
cmp
sub
arpl
cmp
arpl
rolb
les
or
cmpb
mov
mov
insb
mov
lods
push
inc
stos
lcall
iret
mov
cmp
xor
cli
adc
cmp
lock
rcrb
xchg
subb
xor
iret
pusha
movsb
adc
pushf
add
mov
mov
scas
adc
inc
out
inc
std
or
adc
push
mov
mov
sub
lock
mov
and
rorb
xor
or
lods
bound
lods
std
xorb
adc
mov
fiadds
inc
addl
incb
cli
loopne
dec
mov
mov
xor
sub
dec
cwtl
imul
adc
sub
mov
sbb
ja
add
or
dec
sbb
pop
xchg
jmp
sarl
and
jge
cmp
sbb
and
cmp
sbb
bound
inc
inc
xor
insb
push
inc
mov
mov
and
test
shrb
ret
das
jo
je
fiaddl
inc
or
cmp
andb
xor
aaa
std
stos
dec
mov
cs
ret
cmp
mov
out
int
mov
sarl
or
ret
or
inc
loop
adc
adc
inc
push
inc
jecxz
outsl
lcall
inc
push
in
inc
neg
or
arpl
and
cmp
sub
add
ss
mov
cmp
imul
push
mov
and
inc
cmp
xlat
adc
jg
push
cmp
pop
outsl
cmp
push
mov
outsl
adc
pusha
int
push
xor
dec
mov
lock
js
and
lods
rolb
fnsave
xor
mov
mov
xor
mov
mov
sub
and
push
adc
leave
mov
aaa
aas
inc
jle
mov
ret
dec
insb
or
sti
les
sti
xor
mov
inc
pop
mov
or
sub
jmp
dec
add
push
push
sahf
jae
add
mov
adc
add
inc
je
jp
test
andb
lret
out
sub
fdivl
add
test
dec
push
sub
or
xchg
add
push
fsubrl
inc
lods
sbbl
pop
dec
scas
push
cmp
cmp
xor
shlb
mov
pop
adc
mov
and
fmulp
fisubl
imul
loop
push
add
out
sbb
pop
sahf
jg
inc
loopne
cmp
lods
and
inc
push
test
dec
pop
sub
js
jae
jne
mov
addr16
push
mov
sub
mov
or
orb
lods
inc
push
ss
or
jo
lahf
cmp
mov
mov
and
cmp
mov
inc
incb
jg
mov
add
and
push
addr16
and
add
and
add
dec
xor
or
jp
xor
mov
subl
xchg
mov
lcall
out
jmp
add
mov
or
mov
mov
in
or
subl
add
xchg
inc
mov
ljmp
stos
add
cld
push
sti
or
xchg
jmp
xchg
faddl
sbb
mov
add
add
push
add
mov
stos
or
jb
sub
pop
arpl
movsl
add
dec
mov
int
test
call
aad
scas
dec
ljmp
xchg
ds
sti
and
add
es
or
insl
xchg
adc
adc
orb
xchg
lea
mov
sub
xchg
push
rorb
xor
jle
xchg
mov
mov
inc
test
addb
outsb
fdivrs
addb
push
in
rolb
adc
shrb
scas
jle
jp
xchg
mov
lock
add
outsb
sub
mov
inc
stc
add
movsb
adc
inc
xchg
insb
jg
dec
in
adc
out
jp
add
add
push
push
dec
adc
adc
pop
mov
sbb
mov
and
call
mulb
pop
adc
test
xchg
add
popa
sarb
ja
xor
mov
test
push
aad
ret
mov
inc
fmuls
bound
loope
mov
and
mov
pop
push
xchg
jmp
add
adc
or
sub
push
fdivl
subl
arpl
adcb
mov
mov
mov
pop
and
or
jmp
scas
arpl
pop
rcrb
and
or
push
fmuls
jbe
and
adc
mov
loopne
inc
and
cmp
cli
mov
or
mov
cmpl
and
shlb
pop
mov
mov
orl
imul
loopne
mov
pop
push
and
dec
into
loope
push
pop
dec
inc
loopne
lock
arpl
dec
rcl
ja
inc
xchg
xadd
ds
lahf
stos
dec
xor
pop
mov
push
xor
subb
daa
mov
in
call
test
jge
addl
push
les
test
cmp
or
pop
or
leave
mov
push
sti
fwait
adc
push
add
iret
mov
jle
dec
dec
cs
push
mov
add
stos
leave
fdivp
pop
clc
jp
push
mov
movsl
mov
idiv
cmpsb
fdivrl
sbb
bound
iret
popl
xor
addr16
mov
sbb
jp
jg
jo
adc
jp
mov
testl
jg
mov
jg
add
scas
andl
aaa
in
or
sub
cld
and
ss
ljmp
xchg
loope
out
popa
adcl
sbbb
mov
sbbw
pop
inc
xor
inc
mov
add
shll
pop
ss
scas
mov
pop
sub
shrb
fdivrl
push
pop
loopne
das
inc
xor
adc
mov
add
xor
jl
insb
scas
xor
cli
mov
dec
mov
les
dec
enter
shlb
or
dec
mov
pushf
movsb
mov
inc
test
mov
into
mov
add
test
enter
mov
stos
cmc
loopne
sbb
and
rclb
aaa
and
mov
xor
test
and
adc
dec
stos
mov
add
and
imul
jae
aad
das
inc
ljmp
lcall
and
pushf
jo
jge
into
rcr
in
enter
add
or
add
push
sub
cmp
push
icebp
xchg
add
cmp
pop
dec
and
hlt
int
enter
push
scas
cli
mov
iret
stos
push
nop
jge
or
and
dec
popa
adc
jle
adc
pop
push
pop
add
shll
pop
ss
in
out
and
adcb
and
data16
mov
add
pushl
push
cmpsb
imul
shrb
xor
pop
add
outsb
push
sbb
hlt
mov
mov
js
aaa
daa
push
std
add
sarb
sbbl
pusha
jnp
jp
decl
scas
nop
jae
jne
scas
sarb
dec
sbb
lock
sbb
mov
inc
fstpl
adc
imul
andb
jae
xor
pop
out
cmpb
add
cmpsb
jo
jp
rcll
mov
add
adc
sbbl
cmp
push
push
xorb
test
jg
aad
add
icebp
add
xchg
add
xchg
add
test
add
lcall
sbb
bound
or
dec
lock
adc
mov
aaa
test
idivl
sbb
push
mov
ljmp
mov
mov
mov
into
addr16
cmp
xchg
incl
and
jns
adc
and
pop
fnstsw
push
pop
sbb
stos
movsl
mov
fwait
mov
dec
hlt
dec
ret
or
mov
adc
mov
push
ss
adc
xorb
adc
push
jmp
addl
push
repz
and
lods
pop
xchg
and
cmp
fwait
lods
push
sub
add
dec
jo
lock
mov
cmp
shlb
push
shrb
push
mov
mov
fs
adc
inc
pusha
cmp
push
add
xor
ss
in
addb
xor
adc
mov
data16
js
push
out
push
and
mov
cmp
cmp
push
inc
fs
mov
cmpb
inc
test
inc
add
fwait
sub
sub
mov
jp
shlb
mov
mov
push
aaa
fisubs
pusha
mov
icebp
inc
ret
mov
xorl
rcrb
xchg
sub
push
jge
dec
mov
mov
xchg
mov
adc
cli
sub
loopne
inc
cs
fsubrs
pop
enter
mov
xor
mov
outsl
pop
popa
and
mov
xchg
shlb
or
mov
fwait
adcb
and
cmp
stos
shll
add
jo
cmc
stos
cltd
and
push
outsb
xor
into
dec
push
ljmp
adc
std
mov
mov
jo
add
xor
cld
mov
in
xor
mov
jge
cltd
add
aam
hlt
or
xor
cwtl
add
shlb
inc
bound
pop
cld
insl
andl
mov
mov
push
mov
sub
scas
mov
daa
inc
test
orb
rolb
fwait
lret
ficoms
fldt
mov
lock
mov
bnd
xchg
push
dec
push
ud2
filds
or
stos
pop
cmp
cmp
mov
push
cli
out
sub
notb
or
push
insb
ret
sahf
or
dec
jecxz
test
lods
inc
int
stos
loop
push
adc
dec
mov
ret
lock
sbb
add
adc
scas
push
testb
push
fwait
cmp
aaa
hlt
adc
sbb
mov
push
inc
popf
nop
push
int
dec
jb
sub
mov
jl
pop
adc
js
sahf
ljmp
mov
sahf
add
loopne
negb
add
pop
jno
xor
pop
sbb
mov
push
insb
fildll
lock
popa
es
add
push
mov
cmp
jb
es
xor
pop
pop
cmp
movsb
xor
test
sbb
movl
push
sbb
insb
jno
add
lret
mov
adc
in
push
mov
mov
sub
xor
decb
add
mov
add
aaa
subb
add
scas
imul
add
incb
je
push
adc
push
js
inc
loopne
mov
add
xchg
pop
or
inc
cwtl
and
das
jo
cmp
push
mov
das
test
pushf
jo
int
aaa
sub
loope
mov
cli
fbstp
shr
rcrb
mov
loop
and
pop
lock
xor
rorb
imul
pop
or
imul
pop
mov
mov
jle
ss
mov
lock
pop
jmp
adc
into
mov
xchg
pop
and
scas
add
ret
pop
lock
orb
inc
repnz
jno
aam
or
mov
jns,pn
mov
dec
dec
mov
lods
inc
and
inc
inc
push
sub
ret
fisubs
adc
sub
or
aam
dec
sub
es
add
cmp
lock
inc
add
ljmp
clc
lock
pusha
inc
mov
loopne
mov
mov
adc
and
je
adcb
shll
insb
pop
imul
add
mov
sbb
or
inc
jo
pop
or
and
add
sbb
or
and
add
stos
in
push
xchg
inc
cwtl
add
loopne
fidivs
xchg
sub
loope
push
pop
adc
pop
push
pusha
ss
xor
cmp
fsubr
lods
arpl
inc
mulb
int3
mov
jb
pop
add
jmp
and
mov
and
push
or
cmp
bound
lock
inc
adc
sub
push
inc
pop
cs
pusha
ror
xor
mov
xor
push
loopne
push
adcb
xchg
inc
and
scas
dec
adc
add
xor
test
mov
push
jmp
or
icebp
pop
rolb
and
idiv
mov
mov
jbe
rolb
cld
cmpb
and
jo
popa
push
aas
mov
roll
add
sbb
inc
testb
add
push
divb
mov
leave
sub
adc
bound
xor
pop
sub
xor
bound
lahf
jg
outsb
push
notb
cmpsb
scas
push
xor
xor
lods
lcall
mov
and
cmpsl
pop
repz
pop
lock
mov
or
push
dec
mov
push
sbb
add
inc
and
ss
fisubl
and
push
std
data16
ret
push
pop
mov
add
fildl
pop
pop
or
cltd
xchg
rolb
mov
shrb
push
and
or
push
arpl
pop
sti
jl
inc
je
aam
adc
inc
push
xor
mov
movsb
jg
lret
push
jmpw
add
sub
xor
movsb
mov
jmp
sub
lods
push
and
test
pop
mov
add
fwait
repnz
repnz
mov
jbe
decb
rorb
sbb
mov
sub
xorl
or
bound
push
jl
enter
mov
or
ret
or
lds
testb
pop
mov
jno
inc
sbb
popf
loopne
add
add
xor
pushf
repnz
mov
loopne
inc
mov
mov
insl
add
sbb
inc
sbb
and
sbb
xor
clc
in
stos
add
addb
lahf
mov
jg
add
test
pop
pop
cmp
mov
shrl
dec
dec
cmp
jne
ja
push
mov
push
xor
rcrl
dec
ret
cmpb
sbb
dec
in
add
push
or
dec
jmp
xchg
dec
inc
mov
cmpl
add
xchg
mov
mov
and
mov
lcall
jnp
sbb
mov
nop
pop
mov
scas
cli
fst
add
insb
jp
dec
js
insl
jae
adc
adc
movb
push
add
push
mov
ja
fwait
mov
push
out
push
push
sbbb
pop
pop
add
push
push
sahf
ja
sbb
test
ja
fcmove
add
ret
xor
into
mov
jecxz
xchg
int3
cmp
add
loop
imulb
jb
sub
sbb
mov
inc
jbe
mov
or
ret
push
sbb
push
xchg
add
adc
inc
cmpb
imul
int
mov
test
push
add
pop
jl
or
pop
cmp
testl
xor
mov
jp
lcall
sbb
sahf
inc
inc
adc
enter
out
cmpsb
jbe
sbb
inc
sbb
std
fistps
pop
push
jl
ret
ds
add
inc
inc
sub
jo
jbe
jmp
add
add
push
adc
pop
stos
jbe
js
push
lods
ret
test
fstpl
rol
add
add
into
push
sarl
adcb
mov
stos
frstor
mov
or
mov
testl
add
dec
fucomip
adc
adc
imul
jmp
mov
pop
clc
inc
dec
xchg
mov
or
rcl
pop
pusha
jl
pop
and
clc
cmpsl
cmpb
fdiv
outsl
les
push
adc
cmp
cmpsl
and
aaa
decl
data16
push
bound
sub
sbb
cli
fwait
or
loopne
and
stos
movupd
inc
pop
iret
sarl
lods
or
mov
jle
mov
jecxz
or
nop
clc
push
dec
jmp
sub
inc
pop
mov
mov
push
orb
or
mov
fs
and
xchg
or
push
movsl
loopne
loopne
std
pop
xchg
clc
or
push
loop
setne
sbbl
or
rcll
pop
fmuls
in
inc
xchg
or
xchg
cmp
ds
push
mov
mov
adc
lea
add
loope
iret
ljmp
xchg
fildll
loope
mov
mov
inc
clc
outsl
push
inc
mov
lods
call
js
pushl
or
mov
add
push
loopne
sub
ja
mov
arpl
jns
jnp
sbb
inc
sbb
in
outsb
jecxz
pop
and
bound
mov
and
cmp
iret
cmpsl
cmp
jge
and
rorl
xor
xor
mov
mov
mov
sti
push
xchg
lea
lds
push
and
je
inc
ds
sub
adc
or
xchg
loopne
scas
mov
add
cltd
clc
ja
ret
xchg
fidivs
push
pusha
in
lods
std
add
loope
scas
push
push
call
inc
out
fisubrl
and
lds
mov
mov
test
cmpsl
add
mov
fwait
and
mov
jg
cmp
lahf
mov
rcrb
mov
sbb
cmpsl
aam
inc
pop
ljmp
mov
add
mov
cld
data16
fistpll
push
pop
sbb
push
shrb
daa
push
lock
rcrb
icebp
xor
incb
add
cmp
push
je
ja
xchg
rorb
insb
push
test
push
jp
jae
scas
popa
stos
insl
inc
adc
jge
lods
or
sub
and
xor
mov
incl
push
xor
mov
add
clc
ja
iret
stc
popa
jnp
shrl
cmp
inc
or
pop
roll
cmpsb
cwtl
fs
rcrb
daa
scas
sarl
pushf
add
mov
dec
sub
mov
jo
dec
xchg
loopne
lret
pop
lcall
add
les
test
mov
add
add
pop
push
xor
jno
push
push
or
mov
push
scas
lods
data16
pop
test
inc
jmp
sbb
add
in
mov
outsl
jb
pop
ss
xor
ljmp
pop
jmp
inc
push
addr16
ror
sbb
or
push
mov
push
pushw
dec
mov
outsb
push
pushf
rcr
repz
test
mov
and
nop
sbb
mov
mov
into
adc
push
mov
cmc
fnstsw
and
ds
inc
adc
add
adc
bound
add
fcmovnbe
xchg
in
push
and
ljmp
sbb
ss
loopne
dec
punpcklbw
push
mov
out
out
enter
sbb
xor
push
adc
dec
mov
loop
mov
add
or
add
pusha
or
pop
xor
adc
mov
add
jg
fiadds
xchg
adcb
repz
sub
shll
add
adc
lea
jecxz
xor
sbb
mov
shll
add
dec
sbb
adc
cld
jmp
or
inc
jne
mov
iret
jne
sub
adc
stos
andb
mov
pushl
xchg
stos
bound
mov
push
outsl
outsl
lock
inc
ljmp
cmp
dec
jge
adc
add
xor
cmp
sub
mov
test
add
mov
pop
mov
sti
mov
inc
jle
into
pop
mov
mov
jo
xchg
inc
sbb
adc
es
and
rolb
or
andb
cmp
aas
andb
inc
push
std
jecxz
pop
inc
iret
adc
or
test
adc
call
push
or
sub
pop
cmpl
jmp
test
adc
fldl
loope
into
addb
xchg
adc
add
jmp
jo
xor
inc
add
and
mov
or
rolb
les
jo,pt
and
adc
push
push
mov
mov
mov
sbb
jo
fcomip
out
push
mov
and
fsubrl
lock
pop
mov
into
mov
sub
cltd
sar
js
mov
orb
stos
jmp
sub
shlb
neg
add
add
fistl
loop
xor
sub
iret
call
cmpsb
push
notb
iret
repnz
jl
push
and
mov
addb
orb
mov
or
push
pop
jg
icebp
and
dec
or
xchg
xor
aas
inc
mov
xchg
pusha
mov
inc
std
addb
or
jle
into
mov
mov
pop
into
inc
mov
mov
mov
ljmp
mov
sbb
stos
xorb
adc
inc
add
xchg
inc
add
aaa
inc
outsl
data16
lret
shlb
lods
loopne
repnz
decl
add
cmc
mov
xor
roll
cmpsb
lods
cmp
mov
inc
sbbb
push
cmpsl
adcb
mov
cli
aaa
repnz
and
and
repz
cmc
scas
mov
in
stos
mov
pop
call
mov
xor
add
push
loopne
inc
jae
ss
xorl
popa
clc
lcall
pop
mov
jo
sub
jb
cmpsl
sub
in
jg
mov
adc
lock
clc
sbb
dec
clc
lcall
and
mov
enter
mov
lods
cwtl
dec
sub
dec
adc
std
inc
loopne
outsl
cmpsb
mov
or
and
clc
call
add
inc
inc
cmp
iret
mov
or
add
leave
daa
push
mov
filds
mov
and
xchg
xlat
incl
add
mov
inc
push
mov
xor
adcb
out
or
mov
movmskps
int3
push
movsb
push
xchg
xor
in
lock
loopne
dec
or
popf
add
cs
imul
int3
jmp
inc
shr
loop
sub
adc
or
in
loopne
add
xor
jb
push
add
add
in
mov
cmp
push
mov
jo
hlt
call
xor
inc
insb
roll
pushf
scas
and
pop
cmpsl
jno
xchg
pop
ficompl
mov
call
adc
lock
and
or
mov
or
push
cmp
fwait
add
loopne
shlb
push
decl
inc
ljmp
mov
mov
add
in
add
cmpsb
jb
enter
icebp
pop
ss
out
pushl
subb
push
test
js
test
pusha
nop
sbb
mov
cld
cmp
jo
inc
inc
add
pop
and
orb
push
inc
insl
xor
sub
mov
rcrb
mov
mov
sbb
fwait
mov
int3
ss
mov
push
mov
fimull
out
rolb
hlt
incl
pop
and
add
cmp
repz
cmp
out
inc
insb
add
jg
int3
stc
inc
sbb
shlb
dec
mov
hlt
mov
cli
add
ja
jg
push
push
inc
scas
mov
lock
add
mov
mov
out
xor
cld
adc
sub
in
add
and
add
push
adc
cld
decl
adc
inc
cwtl
inc
inc
dec
nop
jns
sub
push
pusha
mov
or
int
mov
loopne
arpl
js
insb
fbld
iret
fwait
xor
stos
dec
jp
and
in
push
jmp
adc
inc
sub
sbb
or
push
mov
push
dec
jo
rorl
or
dec
std
roll
add
xchg
leave
inc
cmp
adc
mov
into
inc
pop
inc
or
in
lock
push
and
in
popf
mov
xchg
cmp
push
xor
inc
mov
dec
cmp
out
and
adc
stos
push
mov
inc
inc
ljmp
lock
mov
rorb
loopne
add
sti
and
pop
add
mov
mov
fs
shlb
jg
cmp
jo
xor
incb
adc
and
aas
dec
fdiv
push
xor
xchg
call
mov
inc
ljmp
mov
inc
ss
call
jp
or
jg
loop
add
xchg
jnp
mov
sbb
arpl
jp
pop
int3
imul
leave
jle
add
int3
add
add
shlb
inc
filds
outsb
sbb
mov
incb
push
xor
cmp
test
and
jae
es
cld
incl
cmpl
pop
iret
movsb
rcll
jmp
pop
shl
scas
add
mov
pop
and
dec
shrb
mov
push
sahf
loopne
dec
sbb
and
loopne
xor
jle
lret
fadd
mov
cltd
stos
icebp
inc
xchg
ljmp
push
test
jl
lar
mov
in
and
push
inc
inc
sub
mov
adc
mov
xor
aas
pop
pushf
and
ret
mov
mov
mov
and
mov
pop
cs
push
aam
cld
dec
clc
fs
xor
ret
push
inc
lods
call
or
add
add
sub
jo
sub
or
adc
test
pop
mov
es
pop
push
sahf
rcrl
aam
add
jp
cld
add
stos
add
dec
jl
mov
addl
std
adc
mov
test
or
pop
adc
mov
repz
fucomip
jmp
inc
lock
inc
aas
sahf
decb
mov
xor
jo
or
pop
xor
lcall
mov
cld
clc
or
test
ret
add
cmp
xor
outsl
dec
mov
es
xor
add
orb
iret
sub
icebp
loopne
and
inc
nop
xorl
mov
lock
add
dec
add
dec
icebp
cmpsb
xor
inc
add
aam
xchg
xchg
mov
test
scas
andl
outsb
add
fstpt
sbb
xchg
push
testl
push
fisttpl
rolb
xchg
mov
ljmp
sbb
les
mov
mov
enter
add
addb
es
push
test
inc
dec
jp
mov
aaa
xchg
jno
in
cmovl
add
push
pop
shll
cmc
and
call
jns
inc
or
jno
adc
xor
vmread
test
js
loop
rolb
push
bound
push
dec
mov
in
lcall
lahf
nop
lahf
pop
dec
mov
pop
and
inc
dec
and
testb
test
lea
mov
cltd
std
sbb
lret
sbb
outsl
fildll
or
jb
pop
jmp
adc
pop
xchg
add
add
push
xor
push
sbb
pop
rcl
rolb
push
mov
test
fmuls
lds
rorb
jo
mov
mov
add
cmpsl
inc
adc
inc
mov
push
sub
iret
mov
loope
add
adc
mov
mov
sub
leave
stos
in
jg
jmp
sbb
jle
idivl
fwait
test
cli
xorb
cmp
outsl
or
cld
data16
xorb
mov
test
add
aam
sbb
or
cmp
cmpb
stos
inc
je
xor
leave
pop
push
xchg
in
mov
pop
inc
or
cmp
mov
or
pop
les
add
mov
add
lea
dec
mov
out
mov
xor
adc
and
sti
mov
inc
push
rorb
scas
jb
xor
xbegin
inc
xchg
mov
cmp
loop
lods
enter
cs
adc
fldcw
mov
fisubrl
push
and
rcl
push
addb
inc
movsb
call
push
scas
popa
push
xorb
pop
incb
std
pop
test
push
xchg
sub
mov
sbb
mov
push
and
into
das
and
lcall
jecxz
mov
lea
inc
movsb
cmp
adc
pusha
sub
inc
inc
mov
dec
imul
pop
sarb
or
inc
sbb
lds
lret
inc
push
add
movsb
add
outsl
mov
loopne
roll
pusha
mov
mov
mov
and
sub
pusha
loopne
cmp
mov
push
loop
jne
cmpl
cld
jg
je
pop
push
hlt
pusha
sbb
adc
dec
out
popa
push
dec
adc
push
mov
out
in
in
incl
andb
loop
ss
bound
adc
aad
push
mov
in
mov
shrl
inc
movsl
into
mov
pop
loopne
subb
push
fwait
shlb
or
arpl
outsb
ljmp
dec
add
inc
or
xor
and
cltd
jp
gs
mov
shr
push
fcoml
lcall
inc
loop
inc
jmp
shrl
inc
fdivrl
into
mov
hlt
push
loopne
add
jns
scas
addb
adc
hlt
notb
push
mov
cmpsb
fstl
bound
pop
je
mov
jecxz
mov
rcrb
sbb
dec
mov
or
sbb
push
aam
call
loop
movsl
add
rcrb
adc
shl
outsb
fidivs
or
or
sbb
in
cmpsb
cmp
adc
pop
push
popa
push
xor
or
adc
daa
add
ljmp
and
lds
pusha
xor
mov
dec
and
xor
adc
ret
popa
add
and
loopne
out
out
mov
xchg
in
inc
or
repz
clc
dec
lds
push
stos
xchg
jo
xchg
cmp
lods
fwait
mov
xchg
adc
pop
xchg
adc
aaa
cmpsb
pushw
into
push
ljmp
dec
add
and
pop
mov
fidivl
pusha
add
mov
sahf
or
push
fists
ljmp
cs
aam
orl
call
test
jbe
jae
sub
bnd
sahf
add
pop
test
dec
mov
dec
add
xlat
mov
shlb
in
loop
inc
add
mov
mov
or
popa
test
jg
mov
or
sub
jge
or
in
subb
loope
add
imul
decb
fldl
add
mov
mov
cltd
and
add
pop
inc
shl
imul
imul
cli
scas
clc
mov
int3
mov
adc
outsl
nop
repnz
dec
add
and
inc
cwtl
add
mov
or
imul
jo
lds
std
and
mov
shlb
and
sbb
cmp
push
repnz
clc
inc
jo
xor
adc
inc
std
and
call
inc
aam
ds
pop
sub
iret
sti
xor
xlat
stos
cmp
sbb
push
push
rcll
jbe
mov
xchg
sbb
popa
xlat
xor
jecxz
jmp
cmp
or
aad
mov
std
decl
xorb
mov
jno
mov
add
or
outsb
andb
jp
icebp
add
jl
sbb
add
mov
les
jecxz
in
cld
add
mov
rorb
cmpb
sbb
mov
push
nop
jp
scas
cmc
ss
repz
mov
add
add
add
mov
ret
orb
int
add
andb
pop
mov
mov
or
fimuls
or
ss
pop
and
mov
mov
int
push
outsb
mov
jb
es
mov
and
les
je
cmpsw
mov
mov
pop
out
jnp
xorb
frstor
fsubrs
icebp
outsl
repnz
loopne
andb
inc
xorb
in
adc
fwait
push
mov
insb
cmp
lock
pop
shlb
add
mov
hlt
jae
mov
or
popa
mov
mov
stos
sub
outsb
sti
shlb
cmp
add
clc
mov
push
adc
cli
or
mov
lock
stos
dec
nop
aaa
push
push
mov
add
mov
jnp
jne
inc
or
jne
mov
mov
mov
ljmp
lcall
cmp
fildll
iret
in
mov
adc
jmp
pop
jbe
lods
xor
cmp
mov
adc
adc
stc
cld
cld
sbb
pop
js
push
nop
jns
xchg
ret
scas
xor
sbbl
icebp
ret
addb
push
add
mov
dec
pop
and
add
incb
and
xorb
jae
push
loopne
mov
es
out
and
inc
push
addr16
push
add
adc
add
dec
jbe
mov
push
lods
add
dec
jns
and
shrb
mov
mov
pop
rolb
pop
lock
mov
mov
xorb
mov
fildl
add
xchg
cmp
pushf
filds
jge
inc
inc
cltd
into
add
and
add
aad
add
fs
mov
leave
push
xor
aam
andl
mov
repz
es
out
inc
sub
iret
adc
pop
push
or
inc
add
mov
or
push
fbstp
xor
roll
xchg
sti
scas
fcoms
pop
loop
pop
adc
mov
inc
enter
popa
pop
pusha
cld
pusha
or
mov
or
test
jo
in
js
sar
and
mov
hlt
inc
outsb
nop
sbb
jle
out
enter
sbb
and
mov
pop
adc
js
leave
pop
xor
or
add
shlb
inc
stos
cmpsl
je
pop
test
inc
add
add
ret
fwait
dec
cmp
inc
adc
adc
data16
into
lods
inc
adc
cmpb
adc
dec
jno
je
nop
cli
das
mov
inc
sbb
cmp
inc
mov
mov
mov
adc
leave
adc
rcll
mov
cwtl
movsb
xorb
adc
add
adc
or
or
fsubrs
cmp
sbb
mov
adc
mov
lret
push
add
push
or
and
leave
shlb
int
js
mov
push
loop
ret
stos
in
inc
sub
xorl
jno
cld
fwait
xchg
mov
push
add
mov
adc
bound
loopne
mov
xchg
sub
fcomip
sar
loope
rcrl
mov
testb
inc
mov
push
incb
add
mov
jg
push
out
rorl
mov
xlat
xchg
ss
decl
bound
push
rorb
jo
popa
xchg
jo
cld
cmp
add
mov
ja
sub
scas
inc
add
sbb
mov
and
xchg
mov
mov
and
rclb
mov
add
inc
nop
dec
into
in
nop
je
nop
ljmp
rorb
push
push
pushf
cli
ljmp
mov
rolb
call
xor
cmp
inc
movsb
or
scas
mov
movsb
add
jl
push
jns
push
cwtl
fidivrl
mov
mov
iret
loopne
adc
cwtl
clc
fldl
incb
xchg
mov
or
aad
sub
insl
xor
and
repnz
xchg
rorb
add
xchg
mov
dec
into
out
adc
iret
out
sub
inc
and
sbb
push
dec
or
mov
or
push
cmpsb
mov
or
or
inc
and
add
sub
lods
xorl
jg
mov
adc
add
xchg
js
push
mov
subb
inc
ss
fldl
dec
jo
sbb
and
mov
ljmp
jl
mov
and
jp
adc
je
push
push
add
pop
add
inc
pop
scas
fldt
mov
hlt
pop
adc
bound
dec
inc
sbbb
sub
les
lods
push
mov
mov
xchg
leave
push
adc
jmp
outsb
pop
fdivr
test
add
fs
push
andb
add
adc
mov
add
or
ret
cltd
ds
lret
add
or
repnz
lods
add
adc
mov
mov
add
mov
testl
mov
and
cmp
inc
inc
adc
mov
imul
mov
fcoms
add
push
push
push
sub
mov
mov
inc
and
stos
loopne
adc
xchg
push
jg
dec
add
xchg
shrl
push
add
sbb
or
jns
or
mov
loopne
dec
lock
sub
mov
inc
add
scas
fwait
add
xchg
mov
stos
jmp
lds
sub
mov
or
dec
xor
in
push
xchg
mov
rcrb
stos
fcmove
mov
push
jmp
add
jle
add
add
lahf
push
sbb
mov
dec
ret
or
dec
mov
cmpsb
push
insb
cld
xchg
mov
mov
cmp
mulb
dec
xor
cli
adc
scas
ss
insl
enter
mov
cmp
in
jb
xor
test
mov
lods
dec
std
cmpsl
inc
stos
in
mov
xchg
imul
or
movsb
xorb
push
add
push
loopne
cmpsb
in
int
cltd
mov
or
push
jl
bound
fisubrl
add
push
add
pop
test
cld
sub
xor
jle
xchg
inc
mov
sbbl
xlat
or
mov
add
push
outsb
pop
movsb
pop
xchg
std
scas
outsb
pusha
cmp
push
adc
push
fs
mov
xor
xor
incb
inc
adc
lds
sbb
and
mov
rolb
ja
in
lds
mov
scas
mov
cmpsl
pop
inc
dec
jp
add
stc
add
mov
cmpsb
lock
sbb
cmp
add
icebp
addb
cmp
push
add
cmp
daa
pop
dec
enter
arpl
inc
mov
xor
andl
iret
xor
adc
ret
cmp
xor
testb
xchg
into
xorb
sbb
out
adc
shll
insl
mov
sbb
push
loop
add
jmp
add
inc
mov
roll
push
mov
in
mov
sti
mov
jb
add
fiadds
inc
decb
addl
ljmp
cmp
mov
in
xor
mov
jp
push
js
mov
add
dec
adc
mov
pop
and
clc
mov
pop
ljmp
push
mov
sbb
push
xchg
adc
xchg
push
push
jae
xor
pop
clc
mov
adc
push
ss
ljmp
mov
lds
and
test
popa
shll
and
mov
movsb
test
mov
jne
mov
mov
xchg
outsl
jg
mov
add
inc
jmp
fdivp
cltd
mov
jbe
nop
std
add
push
jns
xor
scas
jmp
and
and
mov
movsb
jbe
xchg
test
mov
push
scas
add
fistpll
push
jae
mov
or
or
mov
orb
pushf
add
iret
popf
and
pop
lock
test
ljmp
push
adc
pop
mov
or
ret
dec
lods
add
call
test
xchg
or
out
or
out
xchg
in
in
sarb
cmp
stos
inc
or
orb
push
and
sbb
sbb
xorb
fimuls
add
xchg
sub
mov
arpl
mov
xchg
std
mov
push
push
dec
lahf
loopne
and
aam
loopne
and
or
cmp
xchg
inc
push
subb
inc
push
sbb
mov
std
mov
adc
stos
clc
add
mov
add
xchg
pop
cmpsb
mov
push
daa
icebp
mov
out
and
lds
xchg
loope
xor
push
scas
addb
jge
pop
jl
add
inc
push
push
or
mov
push
inc
ljmp
mov
ret
and
add
pop
push
xor
pop
mov
or
sar
rol
sub
pop
pusha
adc
ret
sub
push
andl
inc
jp
fwait
pusha
or
add
lret
push
lahf
jmp
sahf
es
or
inc
shrl
push
adc
out
push
pop
xchg
cmc
cwtl
rcrb
divl
iret
cld
stos
fwait
cmpb
iret
cli
add
ret
mov
add
pop
into
sahf
rcll
enter
popl
push
ja
sub
cld
add
dec
mov
push
aaa
add
add
adc
inc
loop
sarb
ss
in
sub
push
or
pusha
loopne
mov
mov
mov
pop
mov
cli
outsl
jp
std
xor
xor
push
in
sti
mov
js
push
sub
add
ret
mov
repnz
jno
mov
add
inc
add
decl
inc
mov
cwtl
inc
stc
and
xor
leave
bound
or
add
xor
inc
test
insb
mov
testb
aaa
add
inc
adc
aam
je
movsb
rorb
loopne
xor
inc
adc
mov
and
add
inc
inc
lock
cmpsl
mov
fwait
sub
mov
mov
add
clc
in
pop
and
ss
mov
std
or
adc
and
aaa
std
mov
inc
xor
jb
mov
stc
sub
mov
push
cmp
mov
adc
nop
jno
adc
pusha
aam
shll
and
inc
int
rclb
subl
xor
cli
cmc
add
pop
xchg
xor
inc
pop
add
data16
mov
cmp
xor
pop
mov
lock
fidivs
xor
and
xchg
nop
scas
dec
int
js
subl
outsb
jp
push
mov
add
mov
mov
rcrb
inc
inc
adc
xor
arpl
or
or
dec
outsl
jg
loopne
adc
push
push
mov
push
dec
xor
es
mov
xor
add
xor
repz
std
aas
mov
addl
push
clc
mov
pop
push
ja
cmp
dec
hlt
pusha
pusha
wrmsr
bound
aaa
or
sbbb
xor
jg
cli
enter
aas
jb
add
adc
xor
mov
mov
mov
int3
mov
jp
push
push
pusha
push
xor
add
xor
mov
enter
jae
leave
scas
mov
ret
in
mov
scas
inc
push
add
sbb
adc
xor
jo
inc
pop
test
jnp
mov
jno
mov
and
inc
xor
fsubrs
mov
inc
jnp
mov
add
inc
sbb
inc
ss
sbb
xor
scas
inc
std
pop
or
pushl
xor
xchg
jbe
push
js
cmp
and
mov
xor
add
add
xor
dec
cmp
jg
adc
icebp
inc
and
repnz
adc
outsl
mov
js
inc
out
lahf
mov
and
push
cmp
mov
xor
stos
inc
mov
lds
dec
pusha
and
adc
repz
xchg
adc
xor
jecxz
ljmp
loopne
fisubrs
loop
and
dec
add
mov
mov
std
fcmove
mov
cld
lcall
aaa
scas
inc
jo
les
add
div
sub
and
ret
fidivl
std
hlt
into
add
lods
add
add
xor
push
adc
mov
jp
xor
rorb
or
inc
arpl
in
pop
and
dec
into
mov
push
fdivr
testb
icebp
iret
scas
add
mov
into
push
out
add
jl
dec
inc
imul
lcall
fwait
and
add
js
add
cmp
sub
ret
mov
cli
dec
push
jo
iret
test
ss
mov
jp
fucompp
test
push
mov
lcall
adcl
inc
or
hlt
mov
adc
mov
jb
inc
dec
inc
mov
sti
jmp
or
cmc
or
cmpsb
xor
xchg
loop
push
rcrb
or
mov
or
or
or
sub
test
pop
decl
std
inc
add
sbb
lock
push
add
das
js,pt
inc
inc
cmpsb
jge
mov
xor
mov
push
ljmp
mov
mov
push
or
push
or
add
or
pushl
or
or
push
xor
ljmp
gs
or
fisttps
nop
push
mov
cmp
pop
insb
in
lret
or
push
int3
lods
dec
mov
add
cli
loopne
sbbb
push
mov
int3
fwait
xor
mov
out
dec
mov
ljmp
pop
stos
adcb
mov
push
adc
add
mov
mov
sti
aad
lea
dec
push
mov
sarb
sbbb
xchg
add
push
mov
test
js
push
xor
or
push
fs
push
xchg
push
pop
jno
cli
lahf
mov
ss
mov
xchg
add
adc
add
es
mov
adc
add
or
popa
xchg
mov
mov
inc
add
mov
pusha
mov
and
mov
es
clc
jg
add
sahf
inc
inc
push
cmp
iret
dec
sbb
and
mov
adc
jl
add
icebp
cvttps2pi
lock
add
xor
dec
int3
push
filds
jmp
jl
cs
out
inc
subl
jmp
xchg
mov
mov
sahf
xor
and
std
sbb
inc
testb
testl
decl
mov
cli
adc
add
test
shlb
iret
push
add
clc
xchg
inc
add
cs
inc
sbb
loopne
pop
push
push
push
push
mov
mov
enter
std
popf
adc
inc
mov
pop
mov
clc
inc
and
fistps
rolb
nop
xchg
add
sbb
call
or
enter
inc
out
inc
int3
cmpsl
mov
push
push
loopne
jnp
adc
rcr
or
push
mov
fldl
sub
lret
and
sbb
or
mov
inc
pop
inc
or
pop
sbb
daa
rcl
or
push
call
and
push
inc
shll
fbld
add
mov
pop
and
movb
ss
pop
dec
sahf
lock
rolb
dec
addb
into
mov
rorb
inc
mov
cwtl
inc
into
sbb
arpl
push
and
dec
sar
call
mov
ds
sbb
adcl
es
inc
insb
inc
add
into
stos
mov
shrl
std
or
mov
cmp
mov
mov
rcll
mov
mov
mov
or
pop
iret
rorb
add
pop
popa
add
pop
push
stos
or
sbb
pop
or
push
and
push
shll
mov
test
mov
add
pop
loopne
mov
loope
lahf
add
icebp
out
clc
add
mov
or
mov
roll
jbe
adc
arpl
sbb
dec
push
xor
cli
mul
mov
or
adc
subb
das
or
mov
add
ret
clc
fbstp
or
push
in
inc
sarb
adc
xorb
divl
dec
aam
orb
popf
loope
or
add
arpl
pushf
or
imul
sahf
daa
dec
lea
xor
push
xchg
mov
outsb
xchg
sbb
push
adc
push
xchg
cmp
push
dec
push
mov
jle
xchg
cmc
push
jg
cmpsl
decb
push
sub
xlat
nop
int3
insb
js
stos
mov
add
xchg
sar
lock
fcomp
add
sub
cmpsb
xor
cmpsl
jnp
jo
xchg
xlat
cmp
adc
mov
sub
subb
or
inc
mov
cwtl
push
loope
imul
aam
pushf
addb
test
xor
cmp
add
jae
inc
in
ljmp
fwait
sub
mov
add
xchg
stos
stos
fcmovb
push
push
mov
js
outsl
mov
mov
jl
xchg
jg
mov
cmp
dec
out
mov
add
push
add
cmpsb
or
mov
dec
call
inc
mov
xchg
mov
orb
sti
fisttpl
and
imul
loop
cli
add
adc
inc
inc
pop
or
ljmp
in
iret
aam
and
ljmp
xor
push
inc
out
inc
jo
hlt
jmp
push
dec
or
mov
adc
test
rorb
orb
fwait
sbb
pusha
inc
shrl
inc
sbb
lock
sti
xor
inc
imul
jg
add
pop
pop
add
inc
add
andl
rorb
faddl
sbb
mov
mov
or
add
xor
or
or
adc
and
leave
or
push
lcall
shll
inc
fwait
scas
popa
sub
cwtl
sub
mov
stos
mov
adc
rclb
daa
mov
mov
add
imulb
pop
insb
jge
push
fildl
shlb
cmp
clc
xlat
mov
or
and
mov
orl
cmp
adc
dec
push
enter
rolb
mov
inc
or
or
and
sbb
mov
jns
lcall
inc
inc
pop
cmpsb
inc
fisttps
mov
mov
mov
lea
push
inc
les
imul
push
push
push
mov
loop
or
loopne
xchg
test
adc
inc
push
jae
icebp
xchg
shrb
push
lret
lock
sub
xchg
icebp
cmp
mov
and
jp
das
sbb
pop
or
mov
and
push
mov
call
adc
jg
jecxz
add
mov
roll
ljmp
lock
jmp
test
inc
cmp
cmp
xor
jb
push
xchg
add
andl
jp
adc
mov
adc
adc
adc
shrb
xchg
mov
mov
inc
les
dec
dec
and
or
and
div
rolb
adc
pop
xchg
loopne
cmp
xchg
enter
cli
mov
or
jmp
clc
divl
mov
mov
shlb
add
ret
mov
cmp
rcll
xchg
lods
xchg
fildl
jg
sub
and
pusha
mov
and
lret
ret
jp
mov
add
add
mov
xchg
or
xlat
and
test
sub
ljmp
adc
pusha
mov
stos
or
or
and
mov
rolb
inc
dec
aaa
std
pushl
lock
andl
orl
into
stos
loopne
cmp
lock
into
mov
inc
dec
data16
xchg
mov
das
inc
ret
xchg
in
ss
add
cld
xorl
mov
add
mov
adc
imul
add
imul
scas
loopne
sbb
in
jl
or
insb
mov
lret
cli
aaa
adc
and
repz
mov
pop
scas
mov
xor
add
les
call
pop
cmp
jle
dec
jnp
push
ljmp
roll
clc
popf
and
jmp
jg
scas
dec
push
add
iret
lea
rclb
jne
push
sub
andb
sbb
inc
push
xchg
push
add
xchg
lcall
add
loopne
dec
push
inc
inc
push
ja
clc
shll
shlb
mov
xor
orb
inc
popa
scas
inc
or
or
push
xchg
jno
lock
push
pop
rolb
inc
add
and
repz
fsubl
mov
inc
rorb
dec
mov
ds
mov
mov
sub
cmp
xor
cmpb
adc
ljmp
lods
stos
and
xor
push
mov
push
xor
test
mov
dec
mov
dec
insb
inc
and
cmp
test
test
add
sbb
mov
ljmp
bound
mov
and
xchg
ret
mov
add
jnp
imul
xor
ljmp
mov
jle
mov
scas
lods
inc
lock
jle
nop
xor
add
pop
mov
pop
or
add
xor
xor
dec
mov
sbbb
jg
mov
nop
sbb
testb
mov
shll
jmp
enter
fwait
sar
cmpb
inc
inc
fimull
xchg
jmp
ret
sbb
jmp
decl
fwait
pusha
sub
cmp
lods
std
jo
sar
testb
bound
cmpsl
add
popa
push
enter
sbb
testb
mov
add
add
mov
add
mov
pop
pop
inc
lock
shlb
xchg
push
cmp
daa
add
push
ret
push
sub
mov
and
xchg
sbb
add
push
add
fbstp
inc
push
and
jo
push
iret
adc
mov
cmp
lret
in
pusha
ficomps
lock
mov
ss
jno,pt
add
icebp
into
mov
loope
adc
test
and
test
xor
adc
sbb
add
xchg
decb
lret
pop
pusha
sbb
iret
repnz
enter
or
xor
xchg
cmp
iret
pusha
mov
add
cmpsb
mov
test
out
add
mov
push
mov
jecxz
mov
orl
jno
pusha
inc
lock
mov
fst
cmpsb
xor
adc
push
pop
xchg
outsb
insb
pop
mov
mov
les
xchg
stos
mov
nop
xchg
add
cmp
or
cmp
cwtl
jbe
mov
adc
sbb
cld
das
sar
icebp
mov
in
add
cmpsb
mov
cmp
inc
cmp
cltd
sti
lcall
incl
mov
cmp
jae
dec
popa
cmp
repnz
cmpsb
adc
or
xchg
shlb
inc
jo
dec
cltd
popa
jg
mov
loopne
sbb
loopne
sbb
test
xchg
int3
hlt
aas
sub
cs
mov
pushf
into
mov
push
jno
mov
ret
xor
test
sbb
pusha
fwait
testb
mov
sbb
jnp
or
iret
add
adc
adc
ljmp
fwait
stos
mov
mov
cmpb
not
mov
push
scas
xor
sbb
inc
ljmp
xor
or
xor
adc
dec
dec
cmc
into
inc
jmp
lcall
cmpb
or
add
cltd
push
inc
push
mov
incl
lcall
addb
mov
pusha
nop
jne
dec
inc
mov
pop
inc
pusha
push
or
js
or
nop
xorl
mov
mov
mov
das
adc
add
cmp
ret
or
push
jecxz
jp
test
into
es
cs
jmp
ss
push
pushf
pop
not
ficompl
jg
inc
or
or
popf
mov
add
xchg
lret
loopne
pop
popa
add
inc
fsubrl
xor
movsb
pop
shrb
xor
push
ss
adc
mov
mov
sti
xchg
cmc
les
xor
mov
add
add
xor
mov
mov
and
dec
xorb
je
mov
inc
inc
cli
enter
push
xchg
jo
xchg
lcall
adc
mov
out
add
inc
push
xor
inc
nop
or
pusha
stos
mov
mov
lcall
cmpsb
push
jnp
stos
sbb
adc
push
addb
and
pop
fstpl
andb
addr16
or
sub
and
xor
mov
push
arpl
mov
inc
push
sbb
adc
or
movsb
ss
nop
add
cmp
pop
add
push
xchg
add
and
outsb
adc
into
stos
mov
fstpt
sbb
rorl
xchg
jno
mov
xor
jl
sub
mov
pop
sarb
xor
lahf
cld
leave
mov
inc
testb
aad
call
shrl
jecxz
mov
dec
adc
call
call
adc
mov
xchg
test
jo
cmpsl
adc
push
inc
jg
addb
inc
cltd
adc
lahf
adc
filds
lahf
nop
jge
push
das
adcb
outsl
jg
inc
mov
lcall
lcall
in
mov
jg
adc
sbb
inc
aad
xchg
push
jl
sub
movsb
sub
mov
cmpsl
into
lcall
popa
mov
mov
mov
aam
push
cmpsl
clc
fistl
adc
mov
xchg
add
mov
jnp
shll
jecxz
movlps
push
cli
jl
lock
mov
mov
fldenv
movsb
imulb
xor
sub
icebp
stos
nop
jmp
aam
in
insb
jns
push
lea
test
incl
add
fstpl
dec
mov
ja
push
and
push
cld
xchg
fwait
push
and
or
or
xor
sbb
sub
addb
sti
cmp
sbb
xchg
lret
pop
mov
inc
add
mov
and
xor
mov
test
sub
dec
mov
sbb
sahf
lds
jecxz
fnstcw
aam
and
adc
mov
nop
stos
int3
xor
dec
add
dec
decl
mov
mov
push
inc
jle
add
or
adc
add
outsl
lcall
push
push
les
add
and
mov
xchg
mov
and
or
notb
cli
pusha
add
and
outsl
sbb
add
push
mov
lret
daa
cli
xchg
es
add
imul
push
xchg
and
sahf
das
inc
mov
outsl
stos
andl
xchg
mov
push
or
inc
cld
into
mov
jmp
mov
add
push
adc
lcall
mov
push
mov
jnp
adc
push
or
inc
dec
xchg
inc
es
adc
mov
mov
andb
mov
push
pop
andl
outsl
cwtl
andl
push
inc
xchg
xchg
dec
adc
push
adc
or
add
scas
imul
jmp
ror
test
pusha
add
pop
sub
arpl
cmc
fwait
inc
andb
xor
add
inc
dec
or
add
mov
xor
add
pop
stos
andl
or
subl
call
ss
rolb
dec
jp
inc
je
imul
orb
outsb
add
jecxz
inc
push
mov
push
push
shrl
rclb
sbb
xor
push
sti
inc
adc
sbb
scas
jb
js
ja
test
or
push
inc
pop
mov
test
push
fildll
add
inc
adc
sbb
sbb
jg
loopne
add
push
dec
ljmp
sbbb
sahf
decl
clc
sub
xor
adc
fnsave
sub
stos
call
pop
test
inc
pusha
add
push
aad
mov
mov
ljmp
test
jg
mov
mov
loopne
mov
add
sar
inc
iret
add
dec
pop
add
ss
fwait
iret
lods
nop
add
iret
sub
jae
jg
push
push
bound
leave
add
mov
add
mov
sub
fcoms
addl
xor
jl
add
push
shl
adc
lret
lock
adc
addb
mov
test
pusha
inc
stos
mov
pusha
or
sbb
or
mov
add
scas
jmp
mov
mov
add
rcrl
in
jl
hlt
cs
add
out
outsb
ljmp
in
inc
fbstp
dec
cmpl
push
jmp
mov
add
pop
xchg
fcmovb
mov
mov
inc
adc
and
pop
outsl
jp
shll
stc
sub
aam
push
mov
pop
lock
mov
sarb
mov
mov
inc
aaa
mov
add
mov
ror
out
push
nop
rcr
je
lock
push
inc
cmp
push
push
fadds
lods
adc
mov
mov
push
fisttpll
push
call
decl
rorl
pusha
adc
or
rcrb
or
mov
scas
mov
adc
or
out
rorb
in
and
fcom
cmpsl
loopne
mov
add
nop
insl
rcr
jg
mov
add
or
or
cmpsl
xchg
or
mov
and
sbb
insb
hlt
orl
adc
add
fwait
call
es
mov
mov
mov
adc
sbb
pop
mov
mov
pop
and
loope
push
jle
mov
cld
add
loopne
add
scas
test
push
call
add
movsl
mov
and
dec
int3
das
and
add
adc
mov
out
sbb
daa
and
add
sub
add
das
pop
mov
out
and
jno
xchg
dec
mov
add
mov
ret
inc
sbb
or
cld
scas
mulb
pusha
pop
sbbb
fadds
pushf
sub
clc
stos
ljmp
inc
jo
fcoms
aam
add
add
add
push
aaa
jl
xchg
inc
add
loope
and
sbb
adc
invd
jae
out
rclb
shll
add
dec
mov
in
movsb
add
movsb
fdivp
insb
add
jecxz
add
push
loop
push
in
mov
scas
cmp
add
orl
bound
mull
outsb
mov
mov
mov
loope
adc
aaa
loopne
cmp
mov
es
xor
lock
jmp
add
shll
lea
mov
adc
xor
mov
and
lret
arpl
nop
fs
pop
mov
pushl
add
push
mov
jb
mov
das
test
mov
mov
mov
xor
inc
jle
jmp
jnp
cmp
and
adcb
pop
mov
mov
cli
cmp
sbb
mov
xchg
inc
ljmp
enter
push
xor
sub
orb
loopne
sub
fwait
mov
add
mov
add
and
insb
sub
mov
dec
nop
adc
push
mov
add
mov
sti
sbb
lcall
pop
push
xchg
cpuid
add
fcoms
std
pop
enter
cli
push
push
dec
addb
mov
mov
clc
rol
lock
or
push
or
inc
es
fnsave
pop
or
rcr
fs
push
or
inc
adc
js
lock
or
sub
and
stos
clc
movl
add
mov
and
pop
into
pop
roll
push
or
arpl
add
and
fldenv
push
pop
popa
addl
lahf
jb
rcrb
cwtl
arpl
rcrl
or
adc
pop
push
add
xor
jo
xchg
dec
ficoms
inc
scas
roll
mov
inc
inc
jo
es
pop
pop
jmp
xor
xchg
mov
push
xor
in
addb
cld
shrl
and
pop
mov
xor
lds
aaa
pushf
xor
cwtl
mov
dec
lods
push
loope
and
sbb
divl
call
and
cmpsb
or
scas
icebp
sbb
in
or
cmpsb
cmp
mov
or
scas
adc
mov
mov
aaa
jmp
into
inc
in
sbb
jecxz
pop
cli
or
sbb
insl
sbb
fwait
in
sbb
xor
sbb
and
fisttps
push
mov
inc
xor
cwtl
call
cmpsb
pop
or
and
rolb
ja
or
xorb
out
push
pusha
push
std
in
in
repnz
subl
js
push
inc
push
push
mov
inc
fcmovnb
ds
mov
popa
push
push
sar
sub
add
jecxz
dec
dec
xor
add
pop
and
sbb
cmp
les
ss
inc
lahf
jne
into
sarl
add
iret
xor
push
inc
add
cmpsb
or
das
insb
icebp
push
xor
push
adc
call
add
fs
inc
stc
nop
sbb
stos
inc
clc
xchg
push
xchg
lock
call
rcr
jo
mov
out
jno
out
mov
fs
and
xor
incb
cmp
adcl
roll
cwtl
jle
push
mov
add
outsb
xchg
adc
fwait
sub
test
les
mov
loopne
inc
sub
and
inc
adc
aaa
test
xlat
rorb
xor
jo
lods
ficoms
xchg
or
sub
xchg
xchg
sar
mov
inc
andl
filds
ss
mov
inc
mov
inc
sbbb
outsb
sar
dec
add
jp
rcrb
xor
or
sbb
pop
fstpt
lock
pop
in
ffree
popf
xlat
inc
mov
push
adc
mov
mov
xchg
sbb
mov
dec
jo
xor
pop
inc
push
xchg
mov
or
or
or
push
dec
cmpb
adc
push
pop
icebp
sbb
xor
imul
xchg
loop
push
add
dec
cwtl
adc
push
ds
je
jnp
jbe
loope
sbb
jno
push
cwtl
scas
nop
inc
scas
mov
jb
sbb
call
sbb
jl
mov
lods
add
into
loopne
xor
and
add
xor
testb
pop
cmp
out
adc
xorb
mov
mov
mov
or
call
add
call
pushl
clc
xchg
xchg
test
insl
mov
pop
xchg
add
and
inc
loop
xlat
lahf
aaa
add
shlb
out
fucomip
outsb
faddl
jg
fists
and
nop
into
push
add
test
nop
test
call
sub
adc
decb
daa
in
or
insl
rorb
inc
adc
es
popa
enter
shrb
mov
add
fwait
std
fbstp
aas
mov
add
add
ss
sti
add
nop
push
and
icebp
jge
or
jmp
mov
jl
inc
mov
cmp
cmp
add
or
subb
push
and
mov
xchg
xlat
xor
lret
xor
sarl
test
add
jmp
je
stc
jo
sub
cmpsb
dec
adc
rolb
add
or
shrl
xlat
rol
jae
mov
push
push
add
push
incb
or
adc
adc
jmp
xor
push
sbbb
shl
add
xlat
and
sbb
loop
xlat
loopne
out
lret
ljmp
and
inc
sub
int3
inc
shrb
or
pop
fnstsw
subl
inc
add
jg
cmp
iret
and
in
add
roll
nop
mov
lock
inc
mov
pop
cld
ljmp
add
mov
sbb
dec
bound
outsl
and
jmp
jo
push
inc
leave
xor
lock
lret
mov
popa
popa
dec
push
mov
pushl
jg
inc
data16
mov
cs
addl
fcmovbe
pop
push
push
dec
dec
shrb
mov
xchg
mov
sbb
sarb
add
iret
cmpb
adc
push
movsb
push
add
push
ss
jmp
add
mov
push
push
add
mov
adc
or
enter
push
mov
scas
testb
mov
in
push
jp
jo
fidivrs
xchg
cld
pop
lds
push
inc
in
jg
add
or
lock
push
xchg
mov
es
push
cwtl
in
jg
nop
push
aaa
loopne
aas
hlt
mov
xor
imul
add
inc
shlb
push
cwtl
push
dec
rorl
loop
test
dec
mov
fwait
es
test
pop
test
add
lea
incl
mov
add
push
push
bound
jo
jmp
xchg
cmp
push
or
pusha
das
or
cwtl
lcall
test
lahf
cmpsl
sbb
push
cli
insb
add
orb
pop
nop
mov
stos
jp
jae
pusha
in
cmpl
enter
push
jecxz
and
mov
inc
or
ret
cmpsl
add
ja
ljmp
cmp
inc
movsb
or
adc
push
mov
clc
xor
mov
add
and
mov
add
es
leave
inc
jmp
mul
push
insb
test
or
add
nop
cwtl
sub
fadds
dec
fistps
pusha
inc
int
nop
inc
jg
je
fs
les
movsl
outsl
lea
bound
and
sbbl
fimuls
test
xor
and
push
mov
xor
stos
cld
add
add
or
xor
es
incb
xor
sbbb
call
in
cmp
add
fwait
mov
adc
cmpl
clc
or
ret
adc
sbb
add
nop
shll
and
incb
aas
imul
push
and
cmpb
ret
push
into
mov
mov
push
mov
movb
xchg
testb
or
mov
pop
xchg
adc
xor
push
imul
push
out
inc
cmp
sbb
inc
or
adc
cld
inc
inc
cltd
dec
orl
shrb
xorb
dec
adc
outsb
cld
pop
mov
and
inc
addl
or
fsubrl
ret
stos
incb
out
in
ret
sbb
xchg
stos
adc
push
repnz
sbb
scas
outsl
fwait
pop
push
out
mov
shrl
and
daa
mov
clc
aaa
cmp
scas
sar
dec
mov
pop
jmp
push
addb
xor
popf
inc
sarl
pop
dec
inc
subb
sub
addl
gs
bound
aaa
xor
and
pop
jne
inc
popa
inc
lods
in
add
add
xchg
xchg
fsubrs
xchg
idivl
out
inc
xchg
push
loop
sbb
add
push
add
out
mov
in
or
pushf
lea
mov
incl
inc
add
or
repnz
mov
inc
push
add
and
leave
mov
mov
jg
je
lahf
sub
imul
mov
xor
and
sbb
aam
pop
nop
cmpb
xorb
push
add
mov
push
add
orb
stos
and
fisttpl
sub
push
hlt
add
or
cmp
outsl
or
int
cli
ds
rorb
fsubl
rorl
ret
fisttpl
mov
js
mov
dec
test
mov
jb
mov
sbb
dec
jle
mov
dec
inc
in
lods
inc
inc
xor
add
or
into
mov
push
sar
fbld
sbb
loopne
imul
adc
in
and
pop
in
adc
sbbb
decl
mov
ss
inc
test
dec
cli
inc
cmp
dec
inc
fs
fdiv
decl
cmp
cmp
adc
lds
mov
mov
pusha
adc
je
das
and
in
shl
popa
enter
inc
and
mov
icebp
push
sti
loopne
xor
stos
mov
into
rol
xor
nop
nop
push
add
and
sbb
fisttps
loopne
into
xor
xor
or
in
push
sbb
rcrb
fs
pop
push
decl
add
jmp
mov
mov
sub
lea
pop
icebp
outsl
mov
push
iret
jns
roll
aad
in
roll
or
xorb
aad
push
iret
je
and
sbb
pop
mov
xor
dec
inc
adc
sub
inc
lret
adc
lret
mov
inc
or
test
inc
mov
sbb
add
nop
add
add
cld
ljmp
ss
add
push
data16
xor
add
inc
or
jmp
les
fmuls
ror
sarb
sbbb
out
dec
and
inc
repz
mov
setne
or
or
jne
clc
xor
rorl
add
mov
and
dec
and
fmulp
sbb
push
cmp
inc
and
inc
das
out
sbb
inc
adc
decl
pusha
or
add
pop
ss
xor
inc
inc
lcall
lock
and
mov
mov
arpl
mov
aam
in
sub
inc
xchg
sbb
push
adc
push
movl
or
adc
sub
mov
adc
addl
aaa
push
mov
adc
and
adc
cmp
or
in
out
insb
frstor
mov
and
push
int3
and
pushf
mov
xchg
cmp
mov
or
pop
pop
loopne
cmpb
ret
imul
in
enter
ret
and
add
cmpsl
addb
loope
clc
int
push
call
cmc
xor
add
mov
xchg
into
addb
push
or
sahf
or
mov
inc
push
dec
loopne
push
fwait
stos
out
jg
adcl
loop
imul
mov
out
shlb
stos
sbb
and
decl
inc
or
pusha
sbb
dec
js
and
mov
fisttps
pop
and
add
xor
xchg
mov
or
push
pop
mov
adc
mov
mov
negb
push
jnp
push
adc
js
cmp
ficomps
fcmove
scas
inc
mov
hlt
outsb
add
loope
jo
and
pop
data16
or
and
dec
pop
sbb
or
repnz
incl
and
push
inc
inc
or
popa
lmsw
jmp
add
add
idivb
fwait
in
mov
jp
xor
cmpsl
mov
out
add
mov
test
test
push
popa
xor
push
push
cld
push
xchg
mov
lahf
je
cld
inc
les
sub
shll
adc
aad
mov
cmp
adc
adc
inc
mov
mov
and
pop
orb
rcrb
mov
mov
call
pop
cltd
push
lods
es
jmp
incb
rorb
scas
xor
incb
dec
in
xor
repz
add
rcrl
or
jg
sub
pop
ss
dec
add
and
popa
addb
in
mov
pop
xor
sbb
xchg
and
aad
lahf
shlb
sbb
xchg
add
jbe
push
or
ret
nop
inc
rorb
pop
xor
movsb
incb
and
add
adc
jbe
and
loopne
mov
mov
jg
pop
cmpsb
add
add
xor
xor
roll
adc
das
loope
les
inc
push
cmp
cmp
pavgb
sbb
into
js
iret
lods
clc
pop
sub
rcll
pushf
add
dec
push
push
dec
cmc
inc
adc
push
jno
mov
das
push
popa
xchg
mov
xchg
cs
cwtl
jo
dec
cld
out
xchg
aas
mov
nop
or
jo
shlb
add
or
repnz
pushf
mov
outsl
inc
sbb
xor
xor
lock
cmpps
call
in
add
mov
in
push
ret
mov
cmpb
and
mov
lret
je
pop
xor
rclb
mov
and
cld
call
adc
mov
and
je
xchg
repnz
scas
rolb
mov
lret
movsb
ja
gs
mov
sbb
jo
inc
scas
xchg
sbb
add
cmp
int3
insl
inc
inc
adc
ret
mov
xchg
scas
mov
mov
jnp
add
es
es
and
sbb
ret
jnp
dec
add
jle
les
imul
lea
sarb
test
push
add
sub
lret
or
add
add
sbb
fwait
fwait
les
mov
popl
ja
xor
js
mov
ss
mov
ss
mov
or
loope
add
xchg
loop
test
into
out
jg
movsl
and
sub
into
repnz
cs
insb
jo
shrb
test
aam
mov
lock
jle
xchg
inc
add
std
pop
aam
pusha
leave
cwtl
jne,pn
es
jp
lods
leave
mov
stos
mov
mov
inc
sbb
in
cmpsb
scas
dec
dec
mov
dec
or
mov
cmc
cmp
inc
stos
int3
pop
or
jbe
pop
add
es
into
or
jae
push
jb
cmp
push
cli
mov
fidivs
rclb
pop
leave
js
pusha
cmp
int
pop
ss
xor
in
jge
mov
movsb
sbb
mov
cli
jg
mov
xor
xor
pop
mov
adc
push
test
push
cltd
cwtl
and
xchg
pop
les
push
and
jg
fists
inc
or
popa
imul
jae
inc
mov
je
out
addb
xchg
push
mov
jmp
mov
jle
andl
aaa
jge
push
sahf
lahf
aas
jo
dec
cmp
pop
nop
pop
mov
push
jp
incl
rorl
add
cmpsl
mov
xchg
add
je
mov
fs
decl
lods
push
es
adc
inc
mov
xor
inc
xchg
jmp
cld
sbb
push
add
mov
cmp
jbe
loop
xor
lock
inc
add
and
inc
mov
rol
dec
notb
push
or
mov
push
mov
cmpsb
xchg
rorb
stos
add
add
mov
in
int3
add
pop
addb
push
in
test
push
cmp
or
or
dec
or
mov
xor
cmpsl
pop
add
incb
mov
or
fs
xor
mov
jb
or
jl
adc
push
pusha
jb
xchg
or
scas
rcl
shrb
cmpsb
push
pop
lds
xor
and
adc
sub
and
and
mov
and
inc
out
push
add
inc
testb
pop
popa
inc
xchg
cmp
clc
cld
or
imul
movb
xor
push
and
mov
shrl
mov
jbe
push
rclb
mov
and
andb
test
mov
jo
pop
ret
inc
jge
adc
adc
rolb
mov
or
jg
aaa
shlb
sbb
in
js
sub
adc
movsb
xchg
ljmp
add
xor
adc
push
and
mov
js
in
and
jl
and
sub
call
aad
inc
push
lock
lods
xor
lcall
xor
bnd
cmp
mov
aad
imulb
out
mov
push
xlat
aad
push
mov
and
sbbb
mov
pusha
pushf
adc
dec
aaa
daa
xchg
or
mov
mov
outsb
pusha
in
ss
push
cmp
shlb
add
add
xchg
sbb
pop
adc
addb
adc
jl
fwait
loop
mov
sahf
jnp
pop
push
mov
add
xorl
mov
push
loopne
xor
shl
ljmp
jno
nop
test
lahf
jmp
push
sbb
in
and
mov
dec
jmp
fcmovb
adc
xor
cld
inc
mov
cld
add
add
cmp
movl
cli
and
sub
js
test
out
jbe
inc
sti
js
add
insl
inc
lret
insb
outsl
jecxz
mov
test
jg
hlt
push
dec
shlb
pop
fs
adc
mov
ret
xor
outsl
push
add
push
add
ret
add
cmpsb
mov
mov
xchg
cmp
arpl
cld
add
ss
ljmp
test
jb
dec
stos
mov
pop
jg
cmc
mov
hlt
mov
jp
es
adc
ljmp
call
aas
or
in
vpsubusb
call
xor
mov
clc
xorb
and
xor
cmc
mov
cmpb
nop
cmp
lea
adcb
addr16
into
add
mov
and
subl
push
ss
cli
es
or
dec
arpl
addb
aad
cmp
adc
jle
add
orl
xchg
push
movb
stos
adc
xchg
push
cmpsb
cli
adc
and
gs
xor
jb
and
ja
inc
mov
aam
addb
push
sbb
adc
andl
les
mov
mov
cmp
fldcw
adc
adc
mov
sarb
scas
sub
out
inc
add
test
mov
or
iret
scas
rorb
std
jg
cmpb
in
in
xchg
adc
pop
ljmp
outsb
les
mov
jle
test
inc
int3
cmpsl
dec
cmpsl
in
or
inc
add
jle
add
scas
add
inc
push
jl
mov
push
into
test
or
jp
jo
jl
push
inc
dec
rclb
pushf
cmpb
outsb
mov
pop
call
mov
in
ja
lods
sbb
sahf
lahf
pushf
lahf
adc
xchg
cmp
xchg
or
sbb
or
mov
out
out
inc
stos
test
shlb
xor
adc
cmp
decl
ss
sub
and
pop
mov
lds
sbb
pusha
andl
inc
inc
xor
call
push
or
pushf
sub
clc
lds
add
std
scas
push
xor
mov
cmp
test
je
in
lcall
inc
in
and
mov
dec
shlb
add
push
movsb
fcomip
inc
dec
push
lods
lahf
scas
xchg
stos
test
dec
push
push
sti
orb
inc
cltd
inc
dec
enter
fisubrl
pushf
fisttpll
add
inc
add
in
push
dec
sub
ret
clc
scas
add
iret
dec
add
add
inc
or
aad
push
nop
jae
in
cli
cmp
stos
xor
scas
mov
and
dec
and
and
loopne
or
icebp
popa
push
movsb
pop
cmpl
adc
mov
mov
xchg
leave
add
insb
sbb
dec
movsl
cli
add
dec
in
adc
add
fdiv
add
daa
pop
add
jo
rolb
test
add
add
or
pop
mov
mov
sbb
mov
shrb
add
inc
je
fdivl
push
pop
cld
adc
loop
add
repz
push
call
mov
in
add
and
mov
push
popf
andb
mov
aam
adc
loope
mov
lods
mov
shlb
pusha
js
push
push
push
hlt
mov
mov
inc
andl
adcl
sub
mov
push
rcrl
aad
push
add
aam
iret
aaa
mov
mov
push
sub
push
mov
mov
push
mov
push
push
and
fwait
add
mov
cmpsb
mov
mov
rcrb
bnd
push
push
xor
movsl
pop
and
inc
fwait
lods
add
push
push
out
add
or
rclb
pusha
roll
jge
lcall
and
push
jbe
add
jbe
adc
std
scas
out
outsb
push
mov
mov
and
fwait
adc
dec
outsb
sarl
lods
and
test
mov
add
mov
dec
ljmp
push
loopne
nop
inc
paddsw
lods
stos
dec
call
push
std
stos
add
add
and
fisubrl
mov
repz
add
cmp
cwtl
sub
cwtl
jl
clc
mov
cmp
into
std
and
pop
add
push
std
mov
push
xor
fnsave
pop
std
push
cltd
rolb
sub
jo
fwait
loop
fwait
cmc
xor
jno
shlb
and
add
ret
mov
jp
jg
xor
adc
cmpsl
xor
int3
mov
dec
je
sub
xchg
xchg
fs
xorb
xchg
cmp
mov
sahf
jo
adc
iret
add
or
add
jns
enter
sub
pusha
call
andb
fs
mov
adcl
nop
add
pop
lock
jle
movsb
cld
stos
loope
addb
icebp
call
test
wbinvd
orb
xchg
xor
add
mov
add
inc
dec
int3
ss
mov
ret
pop
cmp
shrb
hlt
insl
jecxz
mov
fdivr
sbb
fsubrl
imul
xchg
out
push
repnz
pop
mov
loop
repnz
daa
call
cli
add
aas
and
test
mov
jmp
add
aaa
orl
into
mov
inc
div
fwait
out
ss
push
mov
lahf
inc
xor
je
sub
pop
out
ds
lahf
inc
mov
xchg
push
push
fstl
jl
sbb
popf
inc
sub
inc
cltd
add
lods
xchg
adc
push
jle
cmp
push
inc
pop
pusha
mov
pop
cmc
xor
popa
or
add
dec
and
mov
in
pushl
add
push
sbb
push
push
add
mov
mov
roll
mov
lds
add
into
rclb
mov
xlat
add
inc
clc
je
mov
out
test
push
adc
sub
fmuls
icebp
add
jg
adc
xchg
adc
andl
add
xchg
incb
fisttpll
sarb
mov
mov
fstp
test
nop
dec
mov
mov
mov
lock
lods
push
mov
push
mov
add
fwait
mov
mov
mov
stos
add
inc
mov
mov
lret
cmp
add
sbbb
fs
xor
jge
adc
dec
scas
filds
cli
jo
nop
sbb
add
scas
add
shlb
sbb
mov
add
push
or
notb
xchg
adc
js
pop
rcrl
movsb
mov
xchg
xchg
addl
pop
push
aaa
ret
adc
mov
fwait
std
add
cltd
pop
adc
mov
push
nop
loope
mov
xor
pop
inc
and
sbb
and
mov
in
negb
clc
iret
test
adc
fadd
fwait
mov
mov
push
jo
mov
ss
push
and
loop
push
and
mov
xor
pop
inc
fstpt
add
or
mulb
adc
hlt
iret
mov
outsb
call
repz
test
add
push
repnz
addl
push
mov
mov
xchg
and
hlt
fcoml
push
sahf
mov
movsl
cwtl
pop
add
add
idiv
inc
push
es
mov
push
dec
stc
inc
xor
add
fwait
or
cmp
test
adc
cmpsl
push
ret
xlat
aaa
xchg
mov
leave
popa
jp
cmp
add
into
dec
pop
aaa
or
add
stos
add
inc
fisubrl
adc
xchg
shlb
fcompl
push
cld
jmp
push
xor
push
add
std
fwait
push
scas
into
or
jno
mov
xchg
xor
xorb
mov
push
mov
rorb
or
lods
std
fists
add
push
and
adc
add
das
mov
fidivl
cli
adc
ss
jle
inc
jae
outsl
push
icebp
add
xchg
psubsw
mov
jmp
repnz
dec
rclb
fdivrp
jg
dec
xor
mov
into
movsl
push
add
and
call
pusha
jo
add
mov
mov
mov
pusha
xchg
ret
pop
fsubs
xor
clc
fwait
icebp
dec
mov
cli
das
fimull
xorb
aas
das
es
or
fwait
loop
push
adc
push
fwait
cmp
cmp
mov
insb
fcomps
sub
fst
add
js
fwait
mov
mov
shll
sbb
inc
push
hlt
adc
mov
clc
pop
sti
in
and
outsb
lods
rolb
inc
mov
add
lea
dec
xchg
adc
mov
push
jg
push
dec
rolb
mov
cmp
mov
adcb
add
xchg
mov
lock
jl
inc
add
or
add
movsl
sar
mov
add
ret
add
and
iret
pop
add
rcll
addl
xor
ret
mov
cmp
mov
mov
xor
mov
or
adc
sbb
cwtl
iret
lods
and
aam
mov
pop
cmpsl
sahf
mov
adc
mov
jecxz
fdivr
outsl
push
bound
mov
iret
mov
mov
nop
pop
lock
js
test
mov
add
addl
mov
test
test
adc
pop
inc
add
in
call
pop
shll
addb
mov
and
idiv
decl
or
inc
adc
stos
jae
push
lret
lea
sbb
lcall
push
call
rolb
and
addb
or
dec
adc
sbb
scas
push
pusha
mov
fidivs
inc
mov
push
test
mov
ss
dec
add
ss
push
fs
outsb
loope
xchg
scas
add
pop
mov
inc
mov
or
add
inc
fwait
divb
add
int3
mov
sub
lret
adc
cmp
rorb
xchg
bound
mov
hlt
add
jbe
inc
adc
cmp
mov
push
xchg
es
sub
add
aam
xor
lcall
lahf
mov
cmp
cmp
xchg
add
sub
xor
jl
shlb
loop
add
stos
mov
cmpsb
adc
or
push
imull
jo
add
into
mov
push
mov
sub
out
inc
mov
xchg
mov
gs
fs
add
out
insl
nop
cmp
cmp
fmull
mov
pushl
add
push
les
and
push
mov
cmp
or
cmp
iret
jp,pt
mov
lods
ljmp
add
xor
lahf
orb
std
cs
push
mov
sub
cwtl
fbstp
in
push
into
cmp
mov
push
je
mov
inc
xorb
or
add
mov
and
jb
mov
fldenv
push
mov
inc
andl
andb
mov
cmp
inc
mov
adc
sbbl
mov
mov
movl
inc
mov
insb
ds
addl
add
in
inc
mov
push
fiaddl
add
subl
fidivrs
mov
pusha
or
add
imul
pop
sbbl
mov
aam
or
push
fptan
adc
ret
lahf
jbe
ljmp
pop
rolb
adc
sbbb
testb
adc
add
add
fdivr
adc
add
and
into
mov
adc
sahf
ret
sbb
divl
jno
push
and
mov
push
dec
sarb
pop
scas
sbbl
mov
or
inc
add
xor
or
cli
cmc
mov
mov
sub
inc
shlb
sub
pop
lock
test
nop
inc
sbb
cmpsb
fwait
loopne
adc
insl
adc
filds
iret
stos
ljmp
orb
or
mov
xor
or
in
stos
and
cwtl
rorl
scas
push
fldl
cmp
mov
mov
into
iret
pushf
add
icebp
jle
shlb
adc
adc
add
push
adcb
adc
add
clc
imul
inc
test
mov
and
push
cs
mov
push
mov
test
into
mov
mov
lahf
add
fmuls
or
push
std
lcall
jo
jb
popa
sbb
adcb
inc
sub
loop
mov
imul
mov
pop
and
push
pop
push
es
push
xor
jne
adcb
cmp
inc
mov
xchg
sbb
ds
jbe
push
repnz
lds
stos
int3
incb
add
iret
and
and
out
xchg
mov
add
and
sbb
jmp
jp
mov
imul
mov
and
lds
rorb
inc
sub
outsl
jg
ret
loopne
lods
or
dec
add
stos
loopne
add
push
popa
or
iret
lret
aaa
adc
cmp
test
dec
lock
sub
js
push
xchg
add
popa
subl
outsl
sub
sbb
push
mov
sub
inc
mov
mov
clc
decl
mov
add
jae
inc
and
jb
in
mov
pop
arpl
or
add
sbbb
push
ficomps
pop
adc
stos
or
jl
dec
pusha
mov
xor
mov
inc
or
mov
shlb
mov
mov
push
dec
loop
push
push
or
push
xchg
jbe
push
dec
cmc
pop
dec
cltd
mov
jns
push
mov
push
xor
jg
mov
pusha
pusha
insb
and
popa
inc
add
loopne
das
xchg
and
mov
jns
xor
pusha
mov
add
xor
or
cld
xor
add
into
mov
aaa
enter
mov
std
lods
mov
shrb
mov
test
fwait
into
sub
mov
test
lret
or
xor
bound
aaa
inc
mov
les
mov
in
push
loop
add
aas
loope
add
adc
pop
adcl
movsb
loope
loop
mov
or
movsl
int
and
in
pop
cmpl
lcall
add
push
movsl
mov
fdivl
pop
add
adc
adc
out
xchg
adc
shrb
call
jbe
fs
xorb
sub
and
mov
pushf
sbb
lds
out
fdiv
lcall
push
cmpb
shrl
jge
add
stos
in
in
and
inc
pop
mov
and
mov
or
imul
lods
insl
pop
add
cli
push
add
popa
sti
mov
and
sbb
add
push
adc
jnp
and
cld
add
push
or
shll
aam
dec
mov
xchg
jno
jmp
push
add
mov
jno
jp
cmpb
push
int3
xor
and
sub
incb
adc
xchg
mov
cmp
push
and
and
xcrypt-ctr
cmpsl
sbb
cmp
or
outsl
stos
jle
rolb
push
xor
lock
pop
jmp
fdivp
mov
iret
movsl
iret
adc
pusha
cld
leave
adc
push
and
or
inc
pusha
test
push
mov
add
xor
xchg
push
push
add
ret
inc
aam
xchg
popl
insb
jl
stos
shlb
xchg
clc
xchg
and
aaa
or
push
sbb
inc
lcall
xor
inc
dec
xor
xchg
and
or
mov
add
dec
add
lods
sbb
lock
lods
add
jl
adc
lcall
sub
add
lahf
pop
push
mov
xorb
mov
pop
js
add
mov
mov
xor
add
rcll
in
cmp
add
cli
push
add
mov
push
xor
fstl
movl
mov
inc
xchg
fidivl
es
mov
jae
sbb
push
jb
imul
xor
add
dec
mov
jo
lcall
loopne
xor
lret
push
popa
mov
push
jo
repz
je
mov
fisttps
push
push
add
add
outsl
or
imulb
jnp
insl
xchg
imul
fdivp
sbb
js
dec
aad
add
xlat
subb
insb
inc
movsb
jbe
sbb
adc
add
mov
mov
mov
test
subl
add
inc
fsts
mov
push
mov
sahf
mov
pop
jg
sbb
adc
mov
mov
rolb
stos
loope
aaa
dec
pop
test
jns
add
test
inc
inc
mov
loop
addl
mov
aad
inc
xor
in
ficompl
xchg
scas
iret
fsubrp
push
hlt
inc
push
mov
or
add
in
out
lock
or
rcrb
lods
mulb
adc
lock
rol
adc
rolb
mov
scas
dec
sub
push
shlb
push
fsubs
iret
movsb
pushf
loopne
les
xchg
scas
lret
mov
xchg
mov
xor
push
out
and
sbb
out
push
mov
and
loope
stos
mov
push
xor
and
inc
add
and
iret
aam
popf
dec
std
sub
int
dec
mov
jnp
les
in
mov
xor
in
push
test
mov
jle
shll
in
dec
enter
rcl
cmpsb
xchg
dec
dec
pop
adc
pop
add
push
cmpsl
hlt
out
insb
push
and
loop
and
sub
or
inc
jno
add
scas
mov
push
push
mov
push
sbbb
or
push
pushl
dec
fmuls
addb
push
ud2
rolb
loopne
aad
cmc
dec
mov
add
dec
in
or
adc
dec
lods
push
push
fsubs
inc
jle
mov
aam
loopne
sbb
mov
and
imul
or
lcall
movb
sub
aam
sti
orl
adc
sarb
adc
jne
aam
sub
or
sbb
test
xorb
mov
bswap
adc
adc
inc
jl
mov
lret
loopne
test
shll
push
cmp
or
cli
mov
insl
push
mov
cmp
ja
sub
mov
insb
ss
inc
jl
sub
add
pop
test
add
push
add
mov
and
je
and
adc
js
and
mov
insb
in
add
add
xor
adc
sbb
movsb
push
jbe
pminsw
push
lahf
jmp
arpl
add
nop
add
shll
std
ja
mov
add
add
ljmp
test
add
fbstp
jl
in
push
mov
jns
jge
xchg
ror
sub
into
fisttps
add
icebp
adc
push
std
addr16
lock
xchg
push
adc
test
das
and
adc
jle
jp
loopne
add
out
dec
mov
xor
mov
loop
or
and
sub
mov
dec
fldl
test
pop
je
push
adc
pop
out
mov
jp
mov
and
sbb
push
notb
test
push
or
push
adc
xor
jl
mov
cltd
xchg
shlb
and
inc
repz
lahf
into
incl
and
add
push
in
and
sub
jg
icebp
xchg
in
adc
or
add
push
in
push
xchg
xor
decb
sarb
sbb
out
push
and
cwtl
push
inc
jo
xor
sbb
and
rclb
xchg
in
dec
mov
pop
mov
jl
popa
xor
mov
add
mov
push
pop
push
mov
add
pop
lahf
mov
add
xor
dec
dec
mov
repz
mov
sub
lcall
fwait
outsb
or
insb
mul
fwait
mov
aam
dec
popa
clc
lds
adc
and
add
inc
call
dec
stos
xor
fs
mov
add
mov
shrl
push
or
pop
scas
jae
inc
mov
mov
sbb
mov
inc
xchg
clc
into
push
or
mov
arpl
add
push
xor
mov
mov
fiadds
sbb
adc
mov
mov
stos
clc
mov
pop
xor
add
xchg
xchg
mov
jge
xchg
or
jp
lahf
cmpb
lcall
push
mov
out
cli
push
inc
ficompl
xor
dec
pop
cmpb
push
decl
test
add
xor
jg
jl
dec
cmp
pop
push
jns
inc
aam
mov
mov
cld
stos
mov
inc
add
push
cli
hlt
cmpb
add
or
in
insb
fimull
dec
cli
add
mov
inc
and
outsl
or
pop
sbb
add
jp
jo
mov
push
add
mov
sbb
and
pusha
mov
sub
sbb
mov
stos
dec
jp
mov
sahf
adcb
xorl
aaa
fs
mov
or
test
push
jno
ljmp
or
loop
push
mov
xchg
push
mov
imul
adc
adc
js
push
out
add
adc
or
add
xorb
add
daa
mov
mov
addb
into
xchg
rclb
or
test
into
mov
cmp
and
stos
jl
xchg
add
int
fprem
add
sbbl
xor
inc
adc
push
push
jl
js
mov
sub
ds
sar
cmp
dec
dec
dec
xor
insl
pop
orb
mov
sub
adc
int
jle
loopne
fbld
cmpb
lret
fdivp
dec
mov
js
stos
leave
pop
mov
ret
pop
in
inc
inc
lahf
inc
jo
cs
mov
hlt
orb
xchg
adcb
aaa
add
pop
in
lock
jo
pushf
dec
push
pushf
sbb
push
push
inc
addl
push
dec
hlt
adc
cmp
or
dec
sbb
sbb
stos
cld
rorb
pop
shlb
xchg
call
fisubrs
js
mov
dec
cwtl
cmp
inc
mov
inc
push
cwtl
jae
test
outsb
rcrl
jecxz
pop
loop
push
daa
add
mov
dec
dec
jp
add
dec
in
lcall
cmpsl
mov
dec
loopne
mov
mov
or
add
adc
nop
clc
outsb
push
push
mov
mov
iret
ds
loopne
xchg
pop
mov
or
cmp
add
roll
repz
insl
jo
pop
sub
inc
add
mov
ret
add
dec
fstps
nop
jecxz
or
test
leave
push
mov
les
add
pop
rcrb
mov
add
cmp
adc
sti
sbb
iret
and
test
jle
and
mov
or
decb
mov
cs
mov
std
addb
add
inc
ror
ret
data16
xor
jmp
inc
add
xchg
dec
add
and
and
push
add
hlt
cs
and
rorb
or
es
cld
mov
sbb
out
insb
test
cmp
jmp
pop
dec
leave
mov
pop
adc
push
inc
xor
add
arpl
pop
adc
mov
mov
inc
scas
push
mov
or
loopne
call
dec
adc
arpl
insb
adc
sbb
add
shlb
add
xchg
mov
rorl
arpl
jl
sahf
decl
js
cmp
add
inc
add
stos
dec
add
inc
add
sbb
cmp
xchg
popa
push
xor
add
call
in
and
cmp
cmp
push
aaa
cld
pop
or
add
call
mov
mov
fcmovnbe
xchg
push
adc
xor
daa
and
js
mov
aam
mov
mov
addl
and
add
fsubl
mov
outsb
mov
cmp
into
inc
and
mov
pop
inc
data16
lret
shll
add
je
clc
pop
mov
sub
and
jp
pop
lock
and
xor
inc
mov
mov
inc
cmp
cmp
stos
sar
pop
sarb
mov
inc
inc
or
fstpl
cmp
mov
sbb
adc
repnz
push
mov
lds
mov
add
inc
or
push
mov
mov
inc
mov
cmp
lods
dec
and
popa
sbb
and
pop
clc
outsl
mov
add
inc
and
sbb
es
inc
movsl
rorl
push
cld
das
mov
out
test
or
add
mov
mov
pop
inc
test
push
sti
mov
lahf
mov
cmpb
push
cmc
pop
adc
cmpsl
mov
pop
arpl
out
push
rclb
lahf
add
cli
jmp
sbb
or
mov
pop
push
sbb
subb
sbb
cld
xchg
aam
inc
xchg
cmp
cmp
fcomip
jmp
inc
outsl
mov
clc
in
jecxz
add
popa
inc
mov
fcomip
ja
cmpb
cltd
ret
mov
adc
add
loopne
loope
mov
xor
mov
cmp
addr16
sub
fcmovnbe
push
mov
cmp
cmp
and
cmpb
mov
and
jl
cmpsl
in
call
incl
fs
lahf
rcrb
ds
dec
ret
jno
fdivr
mov
sar
mov
cmpl
rcrl
dec
mov
push
sarb
sub
roll
push
xor
xchg
jo
jb
movsb
xchg
dec
push
lods
add
scas
pop
pop
rcll
dec
and
or
lods
or
stos
lea
inc
jl
sbbl
sbb
add
cmc
push
scas
out
and
cmp
test
mov
dec
pusha
gs
fmuls
adc
xor
push
jl
jmp
pop
shrb
push
pop
and
clc
pop
cwtl
jl
mov
cmp
into
lods
icebp
mov
mov
scas
push
and
rolb
shlb
sbb
or
dec
sti
js
subl
xchg
int3
ret
jbe
push
push
repnz
outsl
nop
bound
push
mov
xor
cmp
add
adc
mov
push
jo
lods
in
in
jmp
jns
lcall
scas
scas
push
mov
xor
ss
cmp
push
pop
adc
adc
rcll
mov
add
add
movsl
sarl
les
add
push
mov
call
cmpsb
fsubrl
sub
add
das
mov
mov
push
add
loopne
mov
dec
sarl
ret
push
cli
dec
ljmp
sub
stos
xor
sbb
or
xor
inc
insb
mov
pushl
xorb
in
out
pusha
push
cmp
inc
jg
jo
nop
xor
push
js
and
xchg
dec
roll
xchg
sbb
cmpb
adc
jno
cwtl
insb
push
inc
xchg
movsl
mov
mov
ss
pop
mov
add
push
stos
test
fwait
fs
add
insb
test
inc
inc
aam
jo
add
sahf
push
sbb
cmp
fisttps
and
mov
mov
add
sbb
es
out
push
lock
cmp
ljmp
call
in
adcb
leave
shr
inc
popa
jo
mov
or
jle
fisttpll
adc
test
lcall
cmp
out
lret
inc
cmp
test
cli
in
dec
xchg
and
xor
mov
test
mov
jecxz
adc
add
add
fldl
or
jmp
push
adc
inc
cmp
xchg
popa
mov
sub
mov
clc
scas
cmc
test
add
fldl
rol
lock
inc
push
mov
push
sub
jl
pop
mov
jo
jns
or
dec
lock
inc
stos
or
mov
xchg
jecxz
jl
push
or
mov
mov
jg
push
jne
mov
push
push
add
orb
or
cmp
int
scas
push
pop
in
in
cmp
leave
aaa
imul
js
in
mov
jmp
xor
test
in
pusha
cmp
mov
add
sub
mov
add
cmp
inc
loop
movsl
mov
xor
jge
jno
lock
dec
and
shrb
mov
and
or
sbb
push
jle
xchg
jle
xchg
loopne
enter
movsl
sbb
testb
inc
sub
movsb
incl
cmpsb
xor
push
adc
xor
sti
mov
loopne
xchg
jmp
sbb
lods
xchg
fwait
lods
adc
nop
out
add
cli
or
scas
stos
mov
inc
cmp
lods
ret
sbb
mov
inc
leave
fs
into
inc
sbb
test
inc
mov
pop
ror
nop
inc
push
inc
or
push
rcrb
ja
xor
scas
mov
cmp
nop
clc
sbb
add
ljmp
push
test
inc
push
imul
mov
cli
mov
mov
sahf
push
add
cwtl
sar
or
push
int
les
aad
test
fists
mov
jp
loopne
add
loop
mov
into
inc
xor
cmp
decl
inc
mov
mov
and
and
ss
sar
lea
xchg
mov
xor
ss
jo
andb
subl
mov
inc
push
mov
lods
xor
inc
xor
jb
js
fnsave
xchg
roll
xor
cmp
imul
mov
lods
xor
pusha
add
and
rcr
fistpll
add
call
mov
mov
call
xchg
mov
sub
push
or
cs
icebp
test
pop
mov
popa
leave
inc
adc
mov
sub
fbld
adc
imulb
xchg
shlb
add
add
add
and
add
js
into
mov
push
mov
push
popa
loopne
hlt
verw
adc
fistl
add
repz
shlb
or
mov
push
js
pop
lock
insl
popf
push
cli
jno
fnsave
xlat
pop
jl
imul
push
dec
stos
mov
iret
and
jno
aas
adc
je
adc
call
mov
mov
orl
inc
lret
clc
decl
nop
or
inc
int
inc
xorl
lret
mov
shl
lock
mov
cmp
ja
subb
jmp
add
stos
loope
mov
push
push
adc
jg
add
test
mov
inc
jne
into
cmpsl
xorl
shll
scas
testl
out
xor
mov
or
pusha
sbb
pusha
or
call
mov
lret
andb
outsb
xchg
mov
shll
mov
add
push
push
sub
mov
das
push
lods
xor
mov
jle
inc
test
stos
sub
mov
ljmp
mov
mov
pusha
push
lcall
roll
mov
repnz
inc
jmp
cmpsb
mov
ss
mov
rolb
rcr
icebp
xor
pusha
mov
push
sbb
push
call
mov
dec
sbb
push
sub
push
aaa
inc
or
inc
push
pusha
push
test
cmp
sub
jo
stos
sub
fbstp
es
mov
scas
adc
add
rcl
mov
pop
nop
or
inc
mov
adc
xor
es
or
icebp
or
in
add
stos
push
add
inc
mov
into
xor
stos
xor
orb
push
mov
out
cmp
aad
add
lock
and
jl
cmpsl
adc
mov
pop
add
xchg
mov
xchg
add
int3
xchg
call
xchg
mov
inc
test
idiv
addl
sbb
add
inc
jbe
out
fldt
dec
push
push
push
sub
and
add
inc
inc
or
add
sbb
bound
push
xor
sbb
sub
loopne
cmpb
mov
shlb
inc
mov
pop
and
dec
mov
push
sar
cmpsl
jecxz
add
dec
inc
mov
sub
fldcw
test
inc
adc
jg
nop
pushf
inc
add
into
and
sbb
js
mov
mov
leave
loopne
ficoml
les
fwait
or
pushf
inc
mov
add
filds
push
inc
mov
addl
lea
cwtl
cli
adcb
sbb
mov
or
xor
inc
adc
scas
pop
lods
add
sar
dec
mov
sarl
mov
or
jmp
add
xchg
ss
pop
cmovns
and
mov
clc
jge
notb
or
es
in
cmp
outsb
jbe
adc
test
test
shll
mov
rol
cltd
sbbl
iret
int3
mov
lods
clc
jp
cwtl
mov
sub
movsl
andb
cmpl
test
and
es
mov
sub
xor
lods
push
cli
call
sub
xchg
pop
sbb
popa
inc
sbb
inc
sbb
addl
hlt
add
pushf
push
adc
outsl
das
test
sbb
xlat
push
lds
sbb
js
sbb
xorb
les
rolb
shl
incl
sbb
inc
adcb
in
push
lods
in
jg
mov
inc
cmpl
xor
fistps
std
push
xchg
inc
in
addr16
cmp
mov
imul
or
adc
adc
and
popa
aas
ret
mov
pop
push
ss
stos
mov
pop
xor
inc
les
shlb
scas
cmp
cmpsl
adc
xor
repz
je
rcll
mov
push
dec
pusha
push
sub
dec
and
scas
adc
lcall
nop
inc
in
sbb
out
xchg
arpl
add
add
js
jno
lods
xlat
cmp
or
inc
push
adc
inc
popa
inc
or
mov
rorb
cmp
cmp
and
mov
and
sti
xor
pop
sbbl
js
es
fistl
or
idiv
rorb
push
cli
push
push
shll
rol
imul
pop
inc
test
lods
sbb
les
hlt
hlt
lcall
sub
shll
nop
into
pop
inc
jns
int
rclb
pop
or
inc
shl
push
inc
or
push
adc
lcall
dec
rol
mov
dec
loopne
popa
and
movsl
jge
mov
adc
fsubl
add
cwtl
push
pop
fildll
xchg
sub
dec
xor
movsl
and
sub
add
add
mov
fs
jl
push
mov
cmp
sub
inc
xor
inc
push
xor
push
into
mov
adc
inc
pushf
fs
cs
sbb
inc
xorb
enter
aaa
push
mov
lcall
into
jge
loopne
add
lds
xor
mov
inc
outsl
shrl
dec
push
pop
ljmp
loop
daa
loopne
adc
dec
iret
mov
rolb
push
cmp
adc
push
cld
outsb
mov
cmpsb
dec
jecxz
arpl
adc
xorb
loop
in
sbb
cmpsb
mov
xor
std
mov
sub
mulb
push
or
ss
shrb
adcb
push
std
dec
add
xor
add
iret
ficoms
mov
fdivrl
rol
jl
ret
dec
mov
jnp
cmp
adc
and
shlb
pusha
sbb
outsb
les
call
push
and
lahf
ret
or
mov
jns
loopne
jmp
push
fwait
mov
rolb
pop
and
cli
add
subl
loope
ljmp
out
add
int
or
and
mov
jmp
sub
mov
xchg
add
or
inc
test
cmpsl
cmp
test
sti
data16
leave
mov
clc
push
insl
push
cmp
mov
inc
lock
sub
and
scas
cmp
mov
dec
adc
ds
push
inc
mov
mov
pop
add
cmp
mov
mov
loopne
test
mov
lds
and
and
mov
sbb
or
pushl
xor
and
punpcklbw
lret
roll
leave
in
push
loop
sbb
push
pusha
pop
loopne
pop
shrl
jne
push
and
inc
xchg
aam
mov
pop
pop
cwtl
jns
adc
sub
or
xchg
mov
sub
mov
dec
push
out
cmp
addb
inc
push
je
add
mov
decb
inc
pop
loope
sub
mov
adc
call
ss
in
bound
cwtl
or
pushf
sarb
call
xchg
add
cmp
mov
mov
into
mov
inc
js
push
xchg
or
push
in
xchg
push
lods
fnstenv
or
mov
popa
in
add
add
call
and
movsl
rolb
inc
ss
cmp
mov
pop
pop
mov
sbb
shlb
dec
and
out
mov
inc
mov
and
aaa
sub
into
or
or
sbbb
scas
decl
mov
es
lahf
mov
jno
into
dec
movsl
mov
mov
fadds
call
jg
push
dec
das
hlt
and
jo
loop
nop
mov
loopne
pop
cmp
cmp
adc
jo
push
in
add
fdiv
push
push
inc
cmpsl
ljmp
sub
add
and
cmpsl
fcompl
outsb
decl
repnz
loopne
inc
or
movsl
xlat
add
shrb
cmp
mov
call
jg
leave
add
pop
pushf
add
mov
iret
lock
cmp
xor
add
fcoml
pop
adc
add
push
mov
jne
pop
cld
mov
add
roll
add
shll
adc
inc
dec
mov
pop
imul
inc
into
fcomps
lds
sarl
adc
or
jl
mull
mov
jmp
add
jl
mov
and
xor
scas
aam
adc
mov
arpl
xor
mov
nop
pop
push
repnz
jb
inc
jecxz
lea
inc
mov
inc
mov
cmp
pusha
pop
or
or
xor
lahf
enter
outsb
lock
mov
test
test
mov
push
inc
mov
jb
push
aaa
push
inc
dec
jge
adc
jo
in
mov
clc
and
and
test
ds
ds
testb
lret
rorl
cld
xchg
aam
jle
push
and
cmp
and
cmp
lahf
dec
rolb
cmp
scas
repz
mov
movsl
call
rorb
push
mov
clc
aas
push
cli
add
and
cmp
mov
das
rclb
movsb
add
adc
test
orb
xchg
pop
or
rcl
aaa
inc
stos
into
pop
sub
clc
inc
inc
xlat
sahf
inc
in
inc
cmp
sub
cmpl
iret
leave
cmp
and
or
rclb
adc
into
scas
inc
add
jecxz
ljmp
lret
std
aaa
add
push
test
stos
cmp
fmull
mov
adc
clc
loop
movsl
sbb
shr
jae
push
mov
scas
mov
loope
push
cmp
inc
dec
push
mov
mov
in
sbb
clc
outsl
xor
cmp
movb
mov
test
orb
rcll
jbe
dec
loop
int3
rclb
cmc
or
xor
mov
mov
push
adc
inc
mov
push
in
jmp
shrl
push
pop
mov
mov
outsb
lods
sbb
sbb
adc
push
out
cmc
pop
or
fs
test
clc
pop
add
inc
add
das
xorb
mov
test
add
xchg
js
lods
and
jnp
mov
mov
or
lcall
jo
mov
inc
pop
call
insl
jecxz
pop
mov
ds
sub
aam
mov
xor
roll
mov
or
jg
pusha
jo
adc
xor
mov
fildll
add
loopne
xor
xchg
add
call
ret
sarb
jb
mov
mov
adc
cwtl
adc
clc
idiv
dec
mov
mov
add
orb
iret
pop
lock
dec
pusha
lods
andl
add
pop
add
push
mov
lcall
or
xor
inc
clc
das
mov
or
xchg
adc
add
dec
dec
sarl
rcrl
roll
cmp
cld
das
shlb
cmp
mov
cs
xchg
add
call
shll
cmp
mov
jo
mov
add
mov
xchg
mov
popf
lock
mov
insb
std
movsb
jae
xorb
and
pop
or
imul
shlb
inc
mov
imul
mov
xor
adc
xchg
inc
add
cmp
pushf
lock
sub
add
cwtl
mov
clc
push
mov
mov
cmp
addl
push
addb
push
inc
ret
outsl
call
cmp
test
testb
popa
add
mov
adc
rcrb
into
cmc
cs
stos
cs
jo
mov
pop
rorl
and
out
incl
insb
cli
mov
jbe
orb
inc
clc
mov
loopne
mov
and
mov
or
outsl
fbstp
cld
mov
xor
into
nop
push
and
pop
pusha
dec
mov
xor
mov
data16
insb
add
xchg
fsubrp
push
in
mov
and
pop
jb
or
push
add
cld
movsl
popa
and
push
and
iret
add
xor
xchg
mov
adc
stos
cli
add
xor
push
cmpsb
inc
fisttpll
mov
outsl
fistpl
and
push
push
fwait
adc
call
orl
scas
and
fcmovnu
mov
push
pop
test
xchg
adc
and
insb
mov
xchg
sbb
shl
movsl
call
dec
sti
int
out
shrl
mov
xchg
cmp
fisttpll
aaa
orl
mov
das
clc
jmp
mov
rcll
movsb
xor
sub
inc
adc
cmp
push
rcrb
push
mov
and
mov
jmp
cmc
adc
pusha
cmpsb
addl
fbstp
imul
pop
lock
mov
nop
push
cmpsl
mov
nop
cld
lock
mov
cli
fwait
inc
or
jl
pop
add
sbb
rorb
push
cwtl
bound
fmul
aas
lahf
repz
inc
inc
or
test
sti
incl
inc
inc
inc
cli
add
addb
icebp
cs
sbb
adc
out
mov
cmpsb
mov
jmp
outsb
add
adcb
add
adc
scas
repz
add
jmp
cmpb
add
add
das
xor
push
scas
sub
test
push
or
add
pop
mov
incl
and
pop
out
add
cwtl
pop
mov
adc
mov
add
sti
push
xlat
push
push
push
loop
lds
add
je
insl
rorb
push
jno
mov
sti
cwtl
jp
jo
inc
aam
sub
addb
das
add
sub
ds
jmp
and
and
push
sbb
clc
xorb
movsb
andb
js
xchg
xor
stos
inc
je
insb
bound
mov
sarl
adc
dec
dec
xchg
dec
jns
movsb
fcompl
pop
cli
pop
movsb
lret
subb
xor
push
orb
mov
xor
inc
or
jg
addb
mov
orl
add
inc
or
mov
cmp
dec
adc
lock
xchg
xor
adcb
jb
sub
push
adc
test
inc
push
inc
cmpb
mov
pop
sahf
xchg
add
ret
ja
mov
movl
in
push
jl
in
adc
lret
lcall
clc
pop
xchg
cmp
aaa
mov
mov
cmc
jg
and
sbb
add
xor
add
inc
mov
add
push
cmp
adc
push
xchg
lock
lods
stos
insb
push
inc
inc
movsl
inc
or
stos
mov
xchg
inc
les
aad
or
mov
push
xor
push
je
push
shll
outsb
push
jne
adc
add
push
add
xorb
mov
inc
add
cmc
add
dec
stos
or
mov
inc
or
push
add
mov
aaa
mov
xor
pop
hlt
dec
jmp
ljmp
pusha
inc
test
loopne
sti
add
sahf
lock
rolb
js,pn
adc
std
mov
mov
lods
add
pop
popa
cmp
push
lock
sbbb
in
mov
xchg
sbb
mov
inc
push
fsubp
mov
add
mov
or
cmc
fiaddl
mov
push
inc
xorb
mov
pusha
xor
add
jge
aas
inc
sbb
adc
or
addb
cmpsb
xor
add
rolb
push
adc
push
mov
pop
push
push
shll
xchg
mov
push
xchg
adc
pop
push
jg
pop
push
fisubs
dec
lds
enter
sbb
es
fs
insl
leave
rcl
stos
inc
in
mov
jne
push
mov
outsb
inc
mov
sbb
add
cli
rclb
pop
add
push
push
jge
mov
sub
ror
inc
mov
add
stos
call
ror
subb
inc
faddl
and
mov
out
cli
mov
mov
imul
pusha
bound
cmp
push
sbbb
loope,pn
loopne
dec
mov
popa
push
add
pop
or
push
add
dec
ret
addb
mov
add
add
inc
ret
stos
dec
pusha
or
loopne
loope
sub
add
incl
mov
push
mov
loop
xor
mov
inc
cmp
add
imul
loopne
mov
fcmovb
jl
mov
mov
pop
bound
movb
rclb
inc
add
push
mov
pop
mov
mov
or
dec
xor
mov
int3
xor
dec
loopne
mov
jb
adc
hlt
sbb
cs
cli
sub
lret
pusha
push
dec
jo
dec
pop
lock
dec
mov
inc
and
push
and
or
inc
xchg
hlt
inc
or
push
dec
cli
loopne
and
cmp
ret
in
sub
adc
test
mov
ds
and
xchg
stos
mov
sbb
lods
jl
clc
or
pop
in
or
or
sarb
cmpsb
icebp
jg
sbbb
xor
mov
aaa
adc
scas
mov
adc
or
push
clc
pop
lods
sub
add
loop
ljmp
adc
mov
aad
push
bound
add
nop
clc
dec
popa
adcb
popa
cmp
scas
add
push
push
out
ljmp
adc
shr
mov
ficomps
or
add
jbe
pusha
data16
xchg
shrl
ficomps
add
imul
mov
sbb
sbb
inc
inc
fadds
clc
andb
ss
test
cli
mov
push
xor
sub
lahf
push
arpl
adc
push
pop
ja
mov
pop
rorb
mov
dec
adc
rorl
sbb
lahf
lods
jmp
xchg
pop
pusha
scas
leave
scas
add
push
push
aam
cmp
push
nop
push
xchg
pop
pusha
mov
je
mov
les
hlt
loopne
jo
dec
xor
or
and
scas
add
jle
test
cwtl
mov
xor
int3
adc
dec
icebp
dec
pop
mov
addb
scas
cmp
pop
popl
in
mov
addb
movsb
lret
dec
mov
jl
inc
cli
mov
xor
arpl
clc
test
or
dec
add
or
cli
cmp
bound
xor
andb
or
xor
or
sahf
in
frstors
and
pushf
push
mov
mov
call
add
shlb
das
addl
lcall
add
inc
push
sub
popa
nop
sub
pop
negb
add
dec
pusha
daa
push
leave
push
xor
cmp
mov
inc
cwtl
mov
xor
loopne
shr
jecxz
add
jecxz
jl
and
aam
add
mov
es
mov
pop
test
out
jo
inc
pusha
jne
iret
notb
adc
add
mov
and
lods
addb
addl
pop
adc
xor
stc
dec
orb
or
repz
or
loop
pop
or
mov
push
loop
loopne
jg
push
sbb
dec
mov
and
mov
push
xchg
pop
pop
jne
clc
add
sti
sbbb
jae
stos
sub
cs
sub
lock
dec
adc
rorb
add
and
insl
mov
stc
ret
sti
add
mov
add
mov
inc
rcrl
xor
mov
pusha
xor
std
mov
pop
sti
mov
or
and
or
add
into
lea
push
movsb
sbb
fimull
cmp
incb
or
push
loopne
or
and
enter
mov
iret
and
pop
hlt
pop
dec
scas
daa
nop
or
pop
and
xchg
clc
or
pop
cmp
in
test
cmp
jae
lahf
mov
jae
push
into
rcrb
repnz
iret
lret
mov
or
gs
aam
and
js
aaa
lock
add
pushf
cmp
mov
xor
sbb
loope
mov
stos
cli
roll
inc
sub
push
pop
and
push
or
and
pop
jbe
sub
push
sub
dec
sub
jnp
add
adc
rcl
pusha
or
jne
icebp
sub
add
and
xor
insl
push
fidivrs
push
inc
int
ljmp
push
pusha
push
and
shl
sub
jnp
add
loope
mov
incl
push
add
addb
cmc
add
adc
adc
sub
arpl
data16
das
test
fimuls
jno
orl
lock
mov
mov
movsl
xor
out
mov
add
stos
push
dec
nop
adc
test
out
sbb
xchg
fs
jb
mov
pop
and
in
push
jmp
ret
rclb
lahf
ficomps
call
or
nop
loop
les
outsb
or
mov
add
sahf
clc
dec
shrl
add
and
jb
dec
rcrl
mov
xor
pusha
pusha
sub
das
add
xchg
js
addb
jecxz
mov
sbb
divb
cli
dec
push
pop
cmpsl
xchg
pop
loop
popa
push
or
iret
test
xchg
xor
push
arpl
les
test
cmp
sbb
sti
outsl
outsl
shrb
xchg
loopne
add
scas
dec
push
stos
clc
mov
iret
test
pop
push
nop
mov
loopne
dec
or
inc
jnp
lds
add
ljmp
les
loopne
icebp
icebp
decl
cli
mov
push
or
adc
out
test
scas
icebp
or
push
aad
jmp
push
or
xor
and
cmpsl
lcall
add
xchg
or
call
stos
and
sbb
dec
js
cmc
mov
subb
inc
cmpsb
mov
cli
pushl
push
push
iret
mov
roll
xor
xor
push
fiadds
ja
stos
pusha
pop
fstl
fnstsw
dec
hlt
ljmp
nop
add
add
cmpsl
and
xor
sti
decl
js
adc
lcall
int
pushf
or
push
jmp
pop
subb
or
leave
push
or
ja
and
add
inc
adc
cmp
jo
or
jbe
inc
inc
xchg
jno
mov
nop
or
call
rorb
xor
jo
push
into
push
inc
xchg
les
mov
xor
dec
and
push
jb
repz
pop
rcll
adc
mov
cs
cmp
mov
xor
loope
add
fildl
arpl
jge
stos
adc
in
adc
adc
sbb
loopne
add
js
and
popa
push
stc
stos
clc
outsl
xchg
add
push
lds
sub
das
fcoml
inc
and
adc
push
ja
add
xchg
adc
sbb
inc
incl
cmpsl
ds
adc
add
mov
sbb
idiv
call
incb
movsl
and
push
nop
push
dec
pop
shlb
adc
xchg
pop
xchg
push
xor
pop
mov
mov
pop
into
mov
adc
incl
dec
shll
push
and
push
pop
orl
mov
and
xchg
scas
clc
push
adc
bound
jns
and
shll
rorb
insl
lods
js
mov
mov
sub
int
ret
pop
sub
and
xor
insb
jo
loope
mov
jl
test
inc
insb
xchg
jp
jmp
push
loop
or
pop
into
pushf
and
sub
mov
jp
xor
push
scas
mov
jp
popa
cs
or
mov
mov
jno
mov
rcrb
iret
mov
cmp
or
mov
push
arpl
mov
or
nop
add
dec
cmc
or
leave
shl
test
sub
andb
rclb
test
bound
dec
and
shll
into
scas
aad
les
jmp
adc
inc
lods
jg
add
mov
ret
je
into
mov
add
jg
and
mov
inc
lret
add
aas
pusha
mov
xor
mov
cmp
addr16
outsb
scas
pop
mov
pusha
xchg
or
lcall
push
in
sbb
inc
inc
push
cmp
lods
dec
or
out
sub
sbb
xor
add
adc
xor
xchg
lcall
jecxz
rcrb
mov
add
stos
pop
mov
add
pop
mov
scas
hlt
add
rcll
ret
mov
out
in
call
test
mov
lock
jmp
das
mov
add
push
movsl
decl
xchg
lea
sbb
push
arpl
loop
mov
lcall
into
insl
sbb
fcomp
xorb
inc
sbb
sbb
xchg
push
push
add
scas
xorl
jmp
add
dec
out
sahf
rcl
jl
add
scas
clc
add
push
add
scas
and
lcall
push
and
push
xchg
into
adc
in
add
test
add
in
out
xchg
pop
inc
add
mov
nop
arpl
and
mov
dec
mov
sahf
test
into
lods
pop
fisubs
fnsave
lahf
mov
cmp
pop
dec
ss
popf
add
cld
mov
das
add
and
or
cld
push
incl
rcrb
movsb
xchg
inc
jb,pn
pop
add
and
add
mov
call
mov
jae
lds
cmp
adc
xchg
adc
add
inc
push
mov
mov
or
or
add
or
xlat
or
xor
cmpl
scas
xchg
ret
loop
inc
outsb
loopne
xorb
mov
lcall
ljmp
in
and
adcb
sbbb
out
xor
inc
jne
mov
call
push
and
test
ljmp
adc
roll
shrl
add
pop
add
xchg
outsb
add
lcall
hlt
dec
mov
ds
aad
shll
cli
imul
into
sahf
ret
sub
fisttpll
iret
and
push
xchg
ret
rolb
mov
shrb
xchg
sub
subl
push
pop
call
or
arpl
decb
push
xor
mov
ljmp
cmp
push
add
xchg
addb
mov
ljmp
bound
adc
cmpsb
subb
inc
add
adc
mov
loopne
xorb
xor
jae
es
es
outsb
cmp
ds
int3
add
push
pusha
xor
inc
cmp
mov
loop
scas
and
call
mov
add
data16
push
pusha
sub
xchg
pop
mov
test
cmp
dec
or
xchg
inc
add
orb
mov
mov
daa
lahf
mov
mov
adc
jb
add
loope
cwtl
xchg
inc
jmp
sub
inc
shlb
jl
call
adc
mov
and
stos
cmc
inc
adc
add
iret
mov
or
cmp
pop
js
inc
and
and
sub
cmp
xchg
popl
add
test
adc
cld
enter
xchg
scas
loope
aam
testb
and
dec
xchg
xchg
mov
mov
and
pushl
in
cmp
mov
cmp
loopne
aas
inc
ret
push
ret
das
cwtl
push
push
loopne
nop
mov
mov
ds
inc
pop
xchg
mov
dec
clc
pop
mov
loopne
sub
add
test
out
and
mov
sbb
cmpsb
inc
inc
ffree
cwtl
adc
scas
clc
adc
dec
mov
and
pop
push
add
push
sub
into
mov
pop
cmpl
mov
popa
aaa
stc
adcb
push
inc
cmp
push
shll
xor
enter
inc
or
and
push
xchg
inc
cmp
decl
cmpsb
pop
repz
pop
mov
subl
xor
inc
and
adc
enter
andb
js
inc
mov
aas
bound
xchg
test
push
adc
or
je
fwait
das
adc
jp
push
mov
cmpsb
inc
inc
inc
daa
push
icebp
adc
inc
xor
cmpsl
adc
add
sbb
cmp
ljmp
dec
inc
push
test
das
cmp
cmp
push
add
mov
ljmp
hlt
inc
les
inc
inc
shll
push
cmp
rolb
cmpsb
jle
pushf
inc
or
cmp
xchg
test
shll
dec
shll
mov
push
and
cmc
and
and
bound
jbe
int
jecxz,pt
in
adc
push
mov
mov
rolb
inc
mov
xchg
add
roll
xchg
jno
sub
in
or
xchg
lods
add
jo
dec
or
push
push
push
pusha
pop
adc
mov
pop
adc
xor
dec
sbbl
fdiv
ljmp
add
mov
cmp
add
add
cltd
sub
pushf
sbbl
ficoms
add
adc
incl
mov
popf
jo
loop
adc
sub
add
push
int3
icebp
mov
ret
in
pop
push
xor
daa
inc
or
lret
sub
sub
dec
jg
xchg
cmp
and
loopne
add
mov
xor
lcall
sbb
inc
cmp
add
fdivrs
and
pop
jmp
and
and
cwtl
xor
mov
and
add
jno
or
pop
jo
inc
inc
xor
push
mov
ljmp
in
clc
in
xor
enter
push
adc
jno
and
jb
adc
pop
adcb
scas
add
pop
cmpsb
mov
xor
jg
jbe
shlb
pop
push
icebp
lret
mov
adc
mov
mov
dec
mov
cmp
xlat
fstpt
repnz
nop
mov
sbb
aaa
std
rclb
sbb
fbstp
fnsave
jbe
fnstenv
and
or
xor
adc
adc
dec
cmp
add
adc
loopne
sbb
nop
cmpsl
pop
adc
mov
add
adc
add
sahf
sbb
cmp
dec
add
adc
insw
adc
cs
pop
cld
pop
fwait
xchg
in
adc
add
outsl
in
in
fidivrs
or
dec
loope
xor
mov
mov
mov
mov
iret
in
mov
addl
and
push
sub
or
test
lret
mov
mov
mov
bound
gs
rcll
push
out
fmull
sub
sub
hlt
push
add
or
and
cmp
add
mov
bound
pop
repz
jl
rorl
jecxz
adc
xchg
inc
fistps
cmp
aas
mov
inc
pusha
push
adc
scas
lock
bound
cwtl
adc
cli
lock
hlt
arpl
mov
push
mov
rorb
mov
mov
push
mov
inc
mov
aam
ljmp
and
xchg
cwtl
push
les
mov
cwtl
xor
or
cmpsl
xor
test
test
mov
push
ror
push
dec
pusha
les
jecxz
lcall
rclb
aas
mov
rolb
lock
outsb
xchg
ss
push
push
mov
and
cmp
jg
stos
orb
xor
cltd
pop
fcmove
call
and
into
mov
push
dec
fwait
push
mull
pusha
cmp
dec
xchg
or
popa
loopne
lock
add
sub
xor
add
xchg
inc
adc
pop
mov
push
cmp
cmpsl
xor
pushf
mov
dec
xchg
cmp
imul
cmp
or
mov
xlat
inc
adc
inc
ljmp
test
cmpl
cmp
cli
xchg
xor
out
mov
sub
and
and
push
xor
mov
inc
and
nop
lock
cld
orb
ret
push
cmpsb
xchg
lock
cmp
dec
sub
inc
inc
rorl
mov
aam
xor
cmp
out
push
or
pop
inc
or
dec
push
mov
pop
cmp
mov
lock
adc
lods
xor
mov
jbe
shll
icebp
and
mov
adc
adc
scas
adc
das
jp
pushl
test
ret
scas
mov
push
ja
dec
in
clc
sbb
jle
lock
lock
xchg
mov
add
add
pop
push
dec
mov
push
arpl
pop
sbb
push
mov
push
add
leave
cli
shlb
loopne
xor
insb
or
add
mov
fbld
xchg
ret
adc
sub
or
loopne
xor
add
mov
xor
arpl
xchg
jno
aas
loopne
adc
lcall
jmp
loopne
cmpsl
adc
adc
add
pop
std
decl
xor
int
lock
cs
clc
mov
push
and
add
jg
pusha
inc
pop
lods
je
lret
mov
inc
and
adc
xor
ljmp
dec
sub
push
push
dec
sub
cld
push
fsubr
insl
sarb
add
sub
ja
inc
ljmp
pop
js
add
mov
es
and
into
xor
pop
mov
jns
js
adc
push
push
xor
xchg
int3
adc
mov
clc
push
xchg
mov
sti
cs
fists
push
sbb
inc
add
inc
jle
incl
push
push
aas
pop
mov
add
add
sub
cli
add
outsl
sub
mov
stc
add
cmp
jo
add
jle
test
pop
ret
test
add
lds
mov
add
push
cmp
dec
add
mov
out
mov
add
adc
or
sub
add
cmp
clc
push
jo
and
add
cmpsl
test
movsb
xor
je
mov
orl
pop
adc
mov
insb
into
test
jbe
sbbl
mov
outsb
dec
xchg
in
inc
mov
mov
movsb
jbe
or
ljmp
dec
mov
jge
cmc
mov
shrl
push
rolb
xor
sbb
push
push
jl
lods
shll
dec
push
mov
mov
xchg
movsb
mov
orb
aad
test
cmp
add
adc
test
testb
inc
pop
loop
adc
int3
xorb
or
push
inc
xor
inc
add
push
scas
add
jae
adc
frstor
roll
dec
call
add
leave
mov
icebp
or
out
mov
popl
add
cmpsb
mov
sbb
and
push
and
fiadds
pushf
mov
jmp
add
cli
xor
push
mov
movsl
pop
sub
sti
push
push
fiadds
or
test
pop
mov
xor
xchg
inc
push
pop
add
les
or
scas
test
cwtl
ss
xchg
loopne
mov
mov
add
mov
inc
ss
mov
dec
notl
mov
pop
lock
add
jg
mov
movsb
lock
test
les
in
inc
or
pop
jno
test
in
inc
cld
lret
outsl
jecxz
dec
inc
addb
add
add
jno
movsl
inc
xchg
or
fs
mov
and
pop
repz
stos
sbb
rorb
sub
popa
jg
ret
sbb
in
outsl
push
out
adcb
mov
mov
es
add
and
cli
vunpcklps
sbb
mov
mov
loopne
push
mov
xabort
inc
adc
mov
pusha
clc
rclb
adc
int3
add
add
mov
ja
aam
jecxz
xchg
jnp
inc
xlat
cmpsl
fcom
ficoms
xor
push
cld
add
push
addb
xor
jmp
aas
or
neg
ret
mov
addl
loope
sbb
sbb
jmp
push
mov
stos
addl
inc
popl
dec
orb
mov
add
in
push
roll
pusha
sbb
fwait
test
scas
mov
push
jo
adc
push
pop
rcr
inc
lcall
push
push
stc
lock
fisttps
mov
test
leave
inc
pop
aam
dec
pop
inc
push
les
or
pop
push
lock
xchg
test
jae
pop
lock
js
and
loopne
addb
adcb
pop
dec
sub
and
cmp
incb
pushl
jbe
and
add
out
adc
incb
out
push
and
pop
push
hlt
add
adc
sub
xor
and
lret
inc
sbb
nop
adc
pop
icebp
or
push
shrl
inc
mov
popf
fdivrs
cld
add
push
cmp
sub
int
pusha
xor
push
pushl
dec
and
mov
daa
xor
mov
orb
out
into
mov
fistpl
sar
mov
add
sbb
loopne
inc
jmp
mov
cli
cmp
movsb
jb
push
cmp
jp
and
adc
movsb
into
mov
xor
lahf
ret
rclb
fcomip
push
push
pop
cmp
add
push
inc
and
inc
lock
inc
pushf
inc
xor
push
test
shlb
sbb
mov
cs
das
and
xor
pop
aad
ja
es
repnz
pop
stos
mov
pop
loopne
stos
adc
shll
nop
fbstp
into
xor
fcomps
push
lds
push
add
adc
out
push
pusha
inc
shr
sub
movsb
leave
pop
push
and
xor
add
xchg
cmp
pushl
leave
xor
adc
jbe
addb
and
and
push
adcl
xor
and
sub
mov
outsl
mov
stos
inc
popf
pop
or
push
test
xor
faddl
bound
push
sub
pop
ror
jnp
mov
add
ja
imul
push
push
add
ljmp
inc
imul
call
lret
push
mov
cmp
mov
pop
adc
ror
and
jnp
add
leave
xchg
and
adc
sar
lods
pop
mov
aad
in
add
les
mov
loope
jne
fwait
movsb
or
rclb
adc
push
pusha
mov
lods
mov
or
adc
rorb
sarb
mov
movsb
decb
push
sarb
jo
or
push
push
jo
roll
mov
pop
jg,pn
or
fwait
add
call
mov
call
jge
inc
add
adcb
out
divb
and
imul
fldt
and
add
incb
or
jmp
ljmp
adc
popa
pop
insb
outsl
adc
dec
or
movsl
mov
xor
sarb
add
push
rolb
add
ss
orb
push
add
decl
outsl
iret
enter
rcll
outsl
adcl
das
adc
inc
cmp
mov
add
jp
add
loopne
mov
jp
inc
mov
jo
mov
or
or
or
lock
nop
and
es
fisubs
incl
dec
mov
in
inc
rcll
lds
adc
sahf
in
sub
inc
push
push
push
adc
shrb
ss
inc
cmp
iret
nop
jno
sbb
icebp
jecxz
dec
mov
in
test
adcb
and
jbe
ljmp
pop
cmp
in
mov
loop
xor
adcb
push
jo
and
rorb
or
push
lcall
outsl
push
xchg
repz
rclb
pop
pop
add
pop
and
mov
pop
lock
add
cmp
call
push
and
lods
mov
and
out
add
sbb
add
ret
push
mov
sub
and
je
ds
cmp
insb
cmp
mov
add
out
inc
pop
movsb
scas
mov
push
lret
inc
xchg
test
shlb
outsl
scas
rolb
push
iret
ret
inc
lds
fwait
mov
test
sbb
jnp
or
mov
or
adc
lock
xchg
cmp
push
mov
std
mov
and
or
aaa
sub
imulb
xchg
push
cmpsl
into
loopne
bound
dec
pop
mov
xor
ljmp
xor
add
rorb
or
js
stc
adcl
jne
sti
into
push
cmp
les
push
into
insl
outsl
push
add
add
mov
test
pop
mov
cli
popf
adc
ss
mov
push
dec
loope
push
repz
loopne
jnp
add
add
loopne
add
add
int
push
and
mov
jl
xchg
in
decl
fcoml
je
call
xchg
rcrb
jo
xor
lcall
nop
fs
je
or
xor
shll
adc
push
sub
pop
stos
jecxz
jno
mov
testl
mov
les
mov
into
mov
notb
int3
push
push
or
decl
sbb
adc
mov
out
mov
rcrb
xchg
jne
add
dec
inc
jbe
sti
sarb
stos
lcall
add
add
push
mov
xchg
xor
add
sti
xor
imul
test
add
lods
cmp
in
ljmp
jge
std
jbe
pop
mov
rorb
mov
push
add
in
add
mov
das
xorb
ret
orb
mov
pop
or
sti
aas
jb
inc
repz
inc
sti
mov
cwtl
adc
and
xor
pop
sarb
lock
ret
xchg
shll
rcll
jo
repz
clc
mul
cmp
cmp
sahf
xchg
mov
repnz
inc
cmp
and
adc
dec
push
pop
cmpsb
dec
push
push
popa
mov
adcl
add
mov
push
cmp
nop
xor
jle
lcall
inc
add
or
mov
xchg
leave
mov
scas
adc
test
adc
lds
stos
add
mov
push
testb
fdiv
inc
andb
cmp
push
and
jb
xor
imul
adc
adc
mov
add
imul
push
clc
scas
movsb
push
push
ret
sbb
pop
dec
inc
push
pop
adc
add
push
push
xchg
push
ret
hlt
push
popa
call
ljmp
mov
in
mov
adcl
push
andb
popa
std
mov
lods
dec
push
add
adc
iret
lods
mov
fstpt
sbb
add
pusha
add
sbb
decb
sbb
mov
add
sbb
fisubrl
outsl
movb
mov
xor
adc
icebp
rorb
into
repz
das
fsubs
iret
sti
test
adc
and
inc
nop
jl
mov
roll
mov
or
popa
rolb
xchg
push
mov
add
orl
insb
mov
sbb
jl
pop
xor
pop
sarl
rolb
and
mov
mov
out
jnp
lods
fdiv
mov
jo
push
add
call
or
mov
mov
sbb
mov
and
mov
xchg
shlb
fwait
dec
rolb
and
cli
enter
imul
push
cmp
mov
into
lock
sti
out
sub
add
xorb
jnp
mov
mov
and
pushl
mov
mov
pushl
pop
and
pusha
add
xor
mov
mov
pop
push
mov
xchg
lods
mov
outsb
scas
add
add
pusha
xor
clc
mov
add
pusha
pop
mov
add
in
iret
cmpsl
push
std
call
sub
test
in
or
data16
sbb
subb
into
inc
sarb
jg
inc
int3
or
mov
loopne
sub
mov
aam
cmp
lcall
clc
mov
sbb
or
or
push
out
sbb
incb
addb
adc
cld
add
pop
or
xor
cli
je
int
add
dec
ljmp
sub
cmp
xor
gs
or
add
xchg
push
stos
dec
inc
loop
nop
out
pop
mov
xor
enter
cli
ret
pop
cmp
insb
lods
mov
fiaddl
mov
mov
add
mov
std
orb
filds
std
leave
pop
add
leave
or
iret
and
add
out
push
add
push
mov
dec
in
shrb
add
js
cli
mov
movsb
cmpsb
out
mov
dec
pop
inc
scas
mov
sbb
test
jo
add
les
fstl
lea
leave
sahf
push
inc
add
or
and
cmp
push
dec
es
roll
or
mov
inc
push
outsl
jmp
mov
mov
sub
mov
cmpb
jns
cmp
xchg
or
mov
popf
movsb
jbe
mov
jmp
mov
add
xchg
addb
add
in
mov
add
loopne
popa
orb
divb
in
dec
add
dec
add
movsl
mov
cmp
ficoms
adc
mov
fcomps
push
or
xchg
mov
sub
dec
js
aad
or
jo
push
dec
mov
ss
or
jl
mov
inc
mov
loopne
int
sub
mov
inc
jp
scas
jbe
pusha
mov
dec
jne
pop
in
addb
test
in
int
cmp
movsb
and
cld
shrb
aaa
lcall
add
pop
dec
nop
and
sbb
dec
mov
dec
inc
pusha
pop
insb
in
fsubrs
ret
in
cmpl
das
push
mov
incl
pop
xorl
xor
adc
inc
cmp
inc
adc
or
idiv
inc
nop
add
xchg
insl
push
or
cmpl
jmp
sub
dec
popf
out
xchg
nop
in
ret
dec
sub
add
inc
test
adcb
or
fcomps
fildll
xor
aad
and
std
ja
jae,pt
jl
add
mov
and
bound
jecxz
jle
push
mov
into
mov
jg
and
and
dec
inc
into
into
call
ss
mov
cli
add
sub
push
jp
xor
dec
mov
movsb
jl
int3
adc
int3
jecxz
lea
lcall
inc
sub
push
inc
movsl
test
test
lds
icebp
enter
adc
clc
rolb
sbb
jp
das
push
add
adc
sbb
decb
inc
inc
sub
scas
sarl
push
rorl
out
dec
or
das
and
push
hlt
mov
adc
movsl
add
mov
shll
xchg
stos
nop
movsb
or
adc
mov
in
jp
das
mov
or
push
jb
push
inc
pop
or
cmc
pop
shrl
sbb
insb
insb
and
cmp
outsl
push
fsubrl
dec
push
mov
inc
jp
lret
push
mov
sbb
andb
pop
dec
add
push
push
push
insb
mov
ljmp
jae
push
in
push
and
jl
inc
das
adc
lock
and
test
out
test
sbb
push
pusha
pop
mov
add
sbb
add
mov
xchg
inc
je
lret
mov
add
neg
popa
scas
mov
mov
sub
cmpsl
or
push
mov
add
add
push
mov
jne
pop
inc
les
add
add
pop
push
clc
or
mov
lods
subb
dec
jge
xchg
add
pop
and
pop
mov
rclb
pushf
jge
jns
add
and
dec
inc
push
pusha
pusha
pop
or
rolb
mov
pusha
pop
ret
out
test
cmp
mov
push
loopne
mov
mov
xchg
add
adc
and
scas
aaa
xchg
inc
sahf
scas
pop
fadds
loope
clc
pop
adc
icebp
and
adc
test
mov
sbb
mov
mov
jnp
cmove
inc
adc
testb
arpl
notb
inc
or
hlt
cmp
decl
das
mov
and
mov
xor
pusha
dec
add
jne
inc
sti
add
pop
lods
into
iret
xor
push
inc
inc
cmpsb
mov
xor
pop
lcall
out
or
jecxz
dec
push
jmp
std
mov
jae
leave
sarl
and
add
mov
call
adc
jp
adc
lcall
lea
xor
scas
push
fs
add
mov
xor
outsb
ljmp
cmpb
clc
popf
sarl
loopne
shl
repz
push
mov
inc
clc
mov
add
push
mov
and
imul
insb
or
sub
es
add
out
cmp
dec
out
or
mov
jp
mov
orl
and
push
add
cmpsb
scas
cmp
fsubr
and
mov
in
js
mov
insb
es
or
mov
lods
and
lods
mov
sbb
jl
inc
inc
sti
add
in
and
in
lahf
repnz
add
decb
loope
mov
iret
roll
loop
dec
mov
arpl
hlt
arpl
sub
jg
outsl
hlt
and
dec
xchg
add
lahf
add
jp
cmp
pusha
push
scas
add
inc
and
push
dec
sbb
add
and
and
movsb
mov
testl
orl
inc
mov
or
pop
movsl
loope
insl
fs
or
filds
inc
iret
inc
inc
insl
pop
enter
fidivrs
dec
or
xchg
adc
jp
mov
jmp
or
jo
xor
inc
jno
mov
sti
dec
add
pop
pop
icebp
in
pop
add
icebp
loopne
arpl
add
hlt
inc
mov
dec
andb
dec
lock
inc
push
add
rorb
aam
jg
stos
popa
test
mov
std
fdivp
add
fwait
js
ss
rorb
inc
mov
pop
dec
ja
add
add
sub
mov
int3
adc
push
xor
sub
lcall
and
xor
jnp
int
roll
iret
lret
adc
es
xorb
xor
push
pop
add
add
jl
mov
imul
mov
jbe
es
mov
cmpsb
add
mov
xor
out
pop
loopne
iret
xorb
or
adc
pop
sub
cmp
imul
cli
aaa
nop
inc
sub
push
popl
sbb
ljmp
je
push
ror
mov
repz
and
or
jb
push
adc
movsb
clc
aaa
push
jg
bound
bound
out
or
push
bound
ret
icebp
and
out
inc
out
adc
ja
sub
mov
call
add
test
fcoml
out
sub
push
adc
repnz
inc
and
cmp
sbb
cmp
test
jmp
inc
or
or
lcall
shll
aaa
or
ljmp
cmp
pop
push
sbb
dec
cmp
push
add
mov
push
hlt
out
xchg
dec
inc
push
cld
mov
sbb
sub
push
mov
into
fs
repz
sub
and
adc
movsl
hlt
mov
pop
pusha
mov
fcoml
mov
out
fstpt
adc
jne
xor
int
mov
jp
test
mov
mov
sbb
cmp
xor
xchg
add
mov
rolb
and
add
mov
add
xchg
cmp
aad
imul
dec
add
cwtl
mov
bound
cs
xchg
ror
mov
mov
push
rclb
mov
or
ljmp
xor
cmp
iret
mov
mov
popa
dec
shlb
ljmp
inc
loope
stos
sahf
mov
sbb
jbe
sbb
dec
filds
xchg
or
in
cmpsb
xor
push
mov
mov
inc
cmp
add
jbe
loopne
adc
loop
fs
push
ds
adc
dec
cmc
add
add
fwait
cmp
jecxz
mov
and
sti
rcrl
mov
nop
pop
push
mov
dec
iret
sub
add
mov
mov
lock
push
pop
add
stc
inc
adc
push
sbb
pusha
jl
mov
add
xor
mov
mov
push
shl
pop
call
jg
lock
out
inc
mov
out
and
push
lock
push
inc
add
adc
mov
stos
mov
int3
cmp
add
add
adc
sbbb
test
jbe
cmp
add
inc
add
inc
loop
pop
insb
push
shlb
pusha
clc
in
and
add
inc
test
sarb
xor
and
fisubs
icebp
xlat
leave
mov
jp
mov
inc
jg
xchg
and
imul
add
nop
xor
rclb
push
xchg
sbb
pop
aaa
sbb
or
push
mov
xchg
ret
mov
call
mov
nop
dec
jo
cld
jmp
and
iret
xchg
sbbb
add
mov
pushl
push
enter
add
jb
addl
inc
adc
inc
sbb
enter
ss
or
add
pop
test
stos
cmp
das
das
mov
mov
pop
jo
loopne
ds
dec
xor
into
mov
adc
movsb
pop
jle
jo
jecxz
mov
jbe
jb
out
stos
push
ja
mov
fdivr
and
dec
xchg
push
jmp
push
jmp
fcoml
cmp
cmpb
fadd
sub
push
fdivp
jg
das
addb
sbb
in
add
ljmp
add
nop
inc
decl
inc
and
je
and
cld
stos
xor
mov
bound
andb
mov
add
ljmp
sbb
mov
mov
push
mov
js
ljmp
jo
mov
mov
mov
leave
stos
cli
dec
mov
and
in
clc
adcb
andb
clc
popf
jg
inc
adc
addr16
adc
add
shrl
add
ja
outsl
scas
pusha
xchg
push
push
add
leave
mov
mov
push
push
pop
js
stos
cmc
ja
clc
cli
jae
jno
add
xorb
push
cld
das
cmpsb
mov
orb
xor
push
fnstsw
lahf
mov
dec
dec
cs
nop
push
lret
sbbb
stos
or
mov
sub
arpl
insl
popa
inc
and
xchg
test
inc
inc
push
adc
jo
lods
xchg
inc
stos
lock
adc
pop
dec
ss
stos
iret
scas
dec
loopne
add
adc
in
push
fcoms
shrb
stos
adc
push
cmpsb
push
pop
mov
adc
into
add
dec
sub
decl
and
loop
and
lahf
adc
mov
mov
sbbb
scas
and
int
push
enter
clc
mov
nop
lea
lock
mov
bound
and
dec
adc
mov
fildl
les
insl
inc
jo
sub
mov
mov
nop
fyl2x
rcl
xorl
adc
lret
aas
pop
ljmp
js
inc
xor
int3
cmpsl
mov
pushl
cwtl
add
fs
cs
sbb
push
stos
das
rcl
adc
adc
incl
add
dec
jp
inc
xor
mov
xor
pusha
push
add
xchg
je
lock
aam
mov
rolb
mov
push
mov
in
adc
mov
or
repz
sbb
je
fdivp
xchg
add
push
fwait
test
jae
mov
jno
ds
push
fdivr
push
and
dec
incl
add
enter
push
hlt
mov
mov
mov
inc
push
pop
rep
repz
jmp
js
ljmp
xchg
push
clc
mov
add
pop
jg
imul
clc
scas
cmc
std
test
xchg
int3
shr
imul
cmp
jl
mov
in
push
xchg
repnz
jmp
outsb
scas
rolb
mov
jp
into
mov
clc
lea
dec
mov
stos
add
ret
or
pop
and
sbb
xchg
fmul
add
bound
sub
jge
inc
cli
inc
push
stos
andb
mov
and
xchg
cmp
mov
add
aam
pop
test
adc
or
aam
push
jae
sbb
aam
adc
pushf
and
rcrl
push
mov
jo
cld
cmpl
mov
fs
int3
popa
data16
push
dec
add
xor
clc
inc
ja
or
or
add
nop
les
bound
xor
adcb
addl
inc
cmp
cld
add
cmpb
add
adc
sub
add
shlb
ret
sarb
jnp
ss
xchg
lods
jg
stos
push
add
inc
dec
and
loopne
xchg
mov
xor
push
ret
xor
push
cld
incl
in
ds
iret
iret
xor
push
xor
or
xor
mov
cwtl
enter
pop
cmpsl
or
jmp
adc
xchg
cmp
mov
and
push
or
loopne
pushl
stos
adc
repz
push
mov
mov
decl
add
mov
rclb
dec
daa
cmp
lods
bswap
cmp
out
and
andb
mov
orb
sahf
ss
push
xchg
and
adc
add
dec
add
int3
lcall
sub
push
out
mov
cwtl
movsl
leave
cld
in
dec
sub
push
dec
in
fldl
adc
rorb
mov
cmp
test
add
cli
cmpsb
lock
orl
or
into
scas
adc
int3
testb
jp
mov
notb
test
or
mov
cmpsb
inc
adcb
and
sub
je
or
add
add
cmp
in
mov
mov
add
leave
pop
mov
mov
jecxz
iret
xor
inc
or
mov
push
mov
sarb
in
sar
movsb
rcrb
xchg
jmp
inc
sub
mov
inc
rorb
xor
dec
in
jo
icebp
inc
shl
test
lods
push
push
push
or
xor
xchg
inc
xor
dec
stos
int3
je
xchg
aam
leave
insl
fcmovbe
mov
adc
mov
push
adc
clc
sbb
std
in
scas
mov
jl
scas
dec
stc
pusha
jb
jl
hlt
fstpt
sbb
addl
sbb
in
add
imul
adc
add
push
and
cmp
out
lcall
add
shrl
sbb
imul
jecxz
shll
fistps
adc
add
add
jle
stos
dec
sti
std
mov
fwait
rclb
and
imul
test
add
cmp
daa
in
fnstcw
scas
stos
fadds
jo
xor
dec
es
pop
out
pop
stos
fadds
add
sti
sbb
dec
loopne
adc
aam
push
xlat
loopne
addr16
jae
stos
push
rcrl
idiv
cld
fst
mov
xor
pop
pop
popa
add
imul
imul
ja
sarb
dec
xor
dec
rolb
stc
repnz
shrb
loop
stc
repnz
scas
pop
mov
add
incl
dec
roll
cmp
inc
adc
dec
mov
pop
dec
stos
rorl
push
insl
fildl
mov
into
sbb
add
pop
orb
fiaddl
or
pop
and
push
or
add
je
iret
push
ljmp
add
mov
sarl
add
xchg
inc
js
call
in
pushf
xchg
pop
jo
js
inc
sti
xchg
xor
or
leave
add
je
mov
inc
add
andb
push
mov
aam
or
into
sahf
add
mov
jo
add
outsl
adc
mov
out
adcb
jl
or
adc
or
push
sahf
int
or
insb
mov
mov
js
insb
inc
stos
jb
mov
daa
xor
and
js
loop
mov
outsl
jp
add
jae
lret
call
push
repnz
push
lea
mov
loop
adc
push
cs
or
dec
dec
jp
std
sub
addr16
cmp
mov
jno
fldl
in
nop
add
mov
lock
add
add
xchg
push
lahf
push
movsb
roll
push
adc
lea
loope
fdivs
gs
out
je
int
nop
xor
adc
sbb
shrb
add
jecxz
add
adc
scas
adc
xorb
or
sarb
aam
repz
dec
stos
push
shll
mov
idivl
add
xor
dec
pop
sub
add
shrb
cld
jg
sub
add
inc
add
inc
or
inc
pop
fnsave
jmp
subb
xchg
nop
mov
push
cld
mov
cmpl
stos
jmp
jmp
add
es
mov
sbb
pop
data16
pusha
or
hlt
cli
add
cwtl
add
mov
push
lahf
xchg
inc
nop
stos
nop
dec
push
subb
or
popa
jl
decl
mov
lahf
mov
inc
adcb
push
test
jo
test
mov
cmpsl
push
jl
adc
loop
jg
cmp
cltd
sub
push
xor
or
jl
push
mov
sbb
in
daa
xor
mov
xor
inc
cmpb
cli
jg
push
or
add
mov
push
inc
inc
loopne
push
jmp
fbstp
loopne
ljmp
adc
add
mov
mov
and
stos
and
push
add
mov
sbb
jp
xor
dec
push
testb
test
mov
push
outsb
in
add
inc
jns
xor
add
outsb
adc
adcl
jmp
loopne
xor
insb
add
lahf
add
push
loop
inc
shlb
xor
aam
mov
mov
out
push
mov
adcl
jns
jns
loope
add
xchg
pushl
push
inc
push
add
cmp
js
stos
movsb
stos
add
mov
add
mov
decl
jae
in
push
fsubl
add
push
push
sub
roll
inc
or
or
and
and
mov
jp
insb
mov
pop
push
pop
pop
orb
sbb
mov
push
inc
dec
fiaddl
aam
mov
or
add
in
inc
mov
aaa
ljmp
setnp
mov
and
sub
stos
cli
lods
call
sub
loopne
mov
ror
es
mov
push
pop
sub
and
out
nop
jnp
cmc
lea
sbb
sbb
sbbb
push
test
and
gs
cld
add
subb
pusha
mov
in
add
or
and
xor
mov
or
outsl
xor
inc
outsb
andl
std
mov
add
out
in
dec
push
pop
push
cmc
inc
inc
les
stc
pop
mov
pop
loop,pt
inc
pop
adc
movsl
mov
adcb
jle
push
or
xchg
push
dec
mov
cli
push
pop
and
mov
sub
data16
mov
rolb
outsl
or
adc
mov
or
lods
orb
loopne
inc
cld
and
sar
push
jge
outsl
pop
mov
mov
add
and
outsl
push
adc
and
add
push
std
mov
push
push
icebp
add
sbb
mov
inc
lock
inc
inc
das
loopne
pop
or
lock
add
jbe
es
or
dec
dec
sbb
mov
inc
cltd
push
mov
rclb
push
add
pop
xorb
add
andb
js
das
clc
outsl
aaa
fcoml
push
fiadds
xchg
shll
lcall
sbb
add
mov
roll
cmp
push
inc
push
dec
out
xor
jmp
sub
add
add
ljmp
and
and
cli
xorl
add
enter
mov
sub
push
cmpsb
or
add
pop
inc
shlb
loopne
and
enter
inc
mov
or
lock
into
mov
loopne
or
cmp
mov
mov
imul
nop
adc
out
push
test
adc
add
loope
push
and
or
jecxz,pn
popa
xchg
in
call
or
add
cs
jo
clc
jb
std
rcrb
sbb
inc
and
xchg
shrb
mov
loopne
mov
ss
arpl
imul
sbb
jae
lods
movsb
out
icebp
rcrl
mov
lret
mov
sub
shrl
inc
mov
xor
xor
ret
insb
cmp
pop
fwait
add
mov
sarl
or
and
mov
add
and
push
ja
adc
add
lods
bound
or
andb
add
add
push
adc
and
daa
imul
add
dec
outsl
inc
ret
push
and
push
addb
insb
push
aam
jl
push
pushl
ss
xchg
push
sub
sub
popf
pop
mov
jg
push
outsb
sub
test
adcl
in
sbb
cs
pop
stos
adc
and
or
mov
push
inc
cld
addb
out
mov
cmpb
jg
sbbb
pop
into
sahf
in
sub
push
cli
push
and
shll
bound
bnd
lahf
xchg
int3
mov
push
xchg
test
cmp
mov
int
add
enter
jg
out
lret
dec
inc
rorb
mov
in
popa
fbld
fistpl
cld
dec
lahf
nop
dec
push
adc
lcall
cmp
mov
sbb
or
into
cmc
mov
xchg
dec
sub
hlt
pop
lock
inc
icebp
pop
mov
into
mov
nop
lcall
es
xor
add
xchg
les
stos
fs
dec
inc
into
mov
or
mov
fcomip
loop
mov
mov
es
lahf
sub
inc
and
loop
fs
add
xor
mov
inc
insb
mov
ds
les
push
clc
add
xchg
dec
pusha
push
add
loopne
mov
or
cmpb
or
iret
test
cmp
arpl
fsubrs
inc
and
inc
mov
out
pop
add
mov
out
and
adc
cmp
nop
push
or
jecxz
sub
inc
insl
xorb
and
ret
roll
fldt
add
push
add
arpl
lcall
push
and
bound
add
inc
adc
cmpsb
sbb
call
fldt
stos
pop
mov
xchg
and
or
sbb
xor
fnstsw
add
loopne
das
jnp
es
test
lock
inc
mov
xchg
cmc
outsl
add
addb
addb
xor
mov
mov
orb
insl
mov
ljmp
add
add
arpl
dec
xor
jle
push
andb
cmp
or
fsubrs
cmp
inc
mov
dec
test
mov
add
xor
stos
nop
movb
mov
mov
int
sub
push
xorl
das
adc
jp
lcall
add
test
fs
mov
cmc
sbbb
adc
mov
xor
jl
test
enter
movlps
adc
adc
outsb
cmp
cmp
add
pushf
add
adc
cmp
xlat
add
adc
into
mov
lock
inc
push
lahf
mov
insb
jmp
pushf
adc
inc
and
sbb
and
mov
imul
orb
xchg
rolb
test
push
subl
sbb
popf
ljmp
or
or
sbb
imul
aaa
mov
fs
inc
frstor
stos
mov
inc
decb
out
sub
cli
or
orb
cld
je
das
mov
outsb
mov
add
scas
inc
push
cli
stos
push
test
fdivs
lds
sub
add
pushf
gs
push
push
mov
cmp
push
into
movsb
or
mov
pop
pop
add
repz
jb
inc
aas
lret
or
inc
rorl
xchg
push
add
mov
sbb
test
jo
clc
dec
push
rorl
dec
divl
cltd
ds
in
rorl
jl
cmp
or
jo
inc
xor
push
add
mov
movl
and
and
fdivl
sarb
cli
inc
add
aaa
mov
mov
xor
mov
push
pop
fisttpl
xchg
push
rolb
mov
test
mov
cmp
adc
cli
push
inc
adc
rcll
sub
mov
add
jg
sarb
shll
shlb
loope
pusha
or
pop
inc
inc
mov
inc
pop
out
repz
pop
int
lcall
mov
mov
fdivs
pusha
add
insb
push
push
xor
fnsave
cmpsl
jg
sti
xor
incl
cwtl
repnz
add
or
sti
addl
or
xchg
inc
daa
cmp
jl
pop
push
push
and
jmp
into
mov
mov
adc
push
pop
lea
or
shl
add
add
sbb
fsubrs
pusha
pop
xchg
or
cld
pop
push
mov
push
inc
aad
mov
into
mov
inc
xor
inc
je
cmpsl
aad
ret
xor
add
sar
dec
cli
cmp
push
jbe
and
push
cmp
std
and
lcall
cmp
stos
mov
push
or
and
mov
pop
push
add
lock
sub
scas
dec
js
into
test
cltd
pusha
das
test
add
ja
out
xchg
scas
stos
push
xor
fisttps
pusha
fldt
mov
jo
push
out
sub
add
sbb
add
testb
sub
cmp
insl
xchg
in
push
mov
pushl
pop
cwtl
cmp
push
js
into
popf
loop
or
mov
push
mov
mul
and
add
or
or
scas
add
stos
push
inc
mov
into
test
icebp
loop
push
dec
popa
or
insb
jmp
and
pop
push
popa
add
add
movsb
shll
loopne
dec
mov
add
imul
test
jp
mov
add
mov
jecxz
movsb
mov
loopne
mov
inc
push
sarb
push
popf
mov
adcb
pusha
shrl
add
scas
hlt
ljmp
mov
jge
cmc
loopne
ret
jno
dec
jmp
inc
jbe
and
pusha
mov
mov
cmp
movsb
add
aam
mov
sbb
fisttps
fwait
sbb
and
add
sbb
adc
jle
adc
add
add
rorl
push
or
pusha
in
ret
int3
or
jmp
dec
and
jmp
aam
jb
mov
ror
loopne
cld
outsb
and
pop
xchg
addl
mov
xchg
jmp
into
cwtl
sub
icebp
or
and
pop
xor
mov
mov
adc
lock
sti
and
xchg
sbb
mov
movsb
adc
stos
mov
movsb
pop
inc
push
scas
and
ja
scas
in
and
ret
lcall
rcr
pusha
insl
inc
and
push
or
push
fistps
pop
xor
cmp
sbb
or
loope
and
mov
sbb
jl
add
add
adc
fbld
pop
mov
push
aas
mov
outsl
nop
lock
jecxz
pusha
and
mov
loopne
in
inc
xor
vcmpss
dec
or
fdivr
hlt
pop
adc
aaa
push
cmp
push
cmpsb
or
scas
pusha
mov
or
fstps
or
mov
pusha
adc
insb
clc
push
dec
push
xor
mov
push
mov
loopne
push
stos
rep
and
sub
jmp
or
scas
sti
mov
les
adc
dec
addl
pavgb
insl
movsl
or
jae
loopne
sbb
jno
sub
rcrl
xor
or
sub
js
lcall
jl
out
and
jmp
addl
lock
mov
pusha
xchg
mov
ljmp
pop
ret
xor
add
adc
pop
mov
sbb
mov
and
push
mov
mov
fadds
aas
mov
adc
and
bsr
sbb
sub
mov
shll
add
int
test
and
cli
mov
test
add
inc
mov
mov
fdivp
cmpsl
movsb
pop
sub
adc
add
push
xor
loope
inc
push
rorl
iret
mov
sub
push
fldl
dec
sbb
fdivrs
xchg
aam
leave
mov
push
push
add
scas
pop
fwait
or
into
add
data16
sbb
adc
ljmp
jge
jae
pop
dec
ja
loopne
push
jbe
xor
push
ljmp
pusha
push
inc
popa
nop
adc
jno
incl
shrb
dec
jg
adc
mov
call
xchg
orb
les
stos
test
incl
add
pop
lcall
add
add
sbb
dec
mov
loopne
loopne
cmp
pop
pushf
xor
nop
mov
test
jle
mov
push
sub
jg
call
push
push
ljmp
incl
add
cmpsl
fadds
jo
dec
jmp
popa
std
and
add
inc
push
decl
into
movl
cmp
dec
mov
rcrl
mov
adc
mov
data16
inc
cmp
mov
inc
adc
js
aad
push
jp
scas
adc
sbbl
jmp
sbb
jo
add
pop
bound
das
js
rcr
mov
adc
imul
leave
or
dec
jb
ret
inc
mov
jae
aaa
or
mov
or
adc
aas
push
jmp
push
xor
add
inc
adc
pushf
rolb
pushf
outsb
outsb
ljmp
into
inc
sbb
jl
mov
lcall
nop
inc
mov
xchg
or
or
ljmp
test
es
jno
rorb
jl
orb
and
filds
jle
scas
in
jge
xchg
jno
jb
jg
cli
adc
divb
xlat
lods
nop
scas
nop
dec
xchg
scas
movsb
add
in
mov
xchg
dec
hlt
xchg
scas
test
push
ljmp
ss
xor
icebp
mov
adc
sbb
push
repz
push
xor
jnp
icebp
add
or
jle
lock
and
dec
xor
jmp
lahf
and
push
rcpps
xchg
jo
add
xchg
push
push
iret
xor
out
cs
push
mov
push
sbb
aas
rolb
sti
pushl
cmp
inc
inc
addr16
mov
sub
add
mov
mov
cs
rcr
ret
mov
shll
inc
push
ret
add
adc
imul
cmp
push
rorb
push
pop
and
or
loopne
movsb
push
sahf
push
mov
xor
mov
pop
cld
mov
xor
pushf
nop
or
test
int
fildll
dec
ror
xchg
shl
ret
mov
mov
ss
sbb
add
sbb
push
xchg
push
pop
pop
jle
adc
lds
inc
insb
data16
pop
push
int3
in
adc
push
cmp
js
jecxz
mov
inc
cli
into
fisubl
nop
add
into
mov
dec
sub
sahf
inc
jl
adc
sar
nop
mov
negb
mov
mov
test
jns
mov
mov
add
ja
dec
mov
rorb
pop
cld
mov
jle
outsl
push
adc
rolb
xchg
or
jg
div
inc
nop
add
mov
subb
mov
ret
test
das
cmp
pop
loopne
adc
add
shrl
xor
lea
mov
push
inc
rorl
push
arpl
pop
and
mov
insb
lock
loope
add
or
jb
addr16
icebp
dec
dec
stc
jo
stos
lea
add
sub
sbb
and
stc
and
dec
push
xor
js
bound
jl
xchg
add
mov
push
cli
jmp
cmp
call
inc
lock
add
jl
das
rorb
mov
jb
and
pop
inc
add
inc
cmpsl
jle
mov
push
xor
dec
loopne
xchg
and
mov
subb
shll
mov
lcall
out
push
mov
sub
mov
roll
dec
lock
jo
rcr
dec
pushf
addb
add
test
mov
jg
or
pop
pop
jo
add
push
mov
dec
sub
jecxz
aas
push
add
mov
add
sub
adc
dec
adc
mov
aaa
out
rcr
mov
pop
aaa
mov
subb
adc
imul
add
inc
in
push
or
inc
sbb
mov
in
mov
jg
xor
jg
adcl
push
insb
jo
fwait
or
jo
add
cmp
inc
rcrb
inc
add
mov
roll
push
cli
push
clc
in
push
aas
adc
adc
insl
bound
roll
and
inc
popf
add
or
aas
test
xor
inc
add
pusha
or
faddl
adcb
les
pusha
popl
xchg
mov
mov
push
push
push
jb
cmpsb
in
sub
add
add
xor
mov
and
orl
mov
loopne
add
sub
insb
roll
inc
imul
cwtl
movb
sub
or
and
mov
shrl
fcomps
icebp
adc
inc
add
add
dec
lea
inc
add
or
add
add
cmpsb
out
nop
gs
int3
mov
daa
test
mov
nop
js
mov
jo
imul
daa
inc
xchg
pop
mov
add
add
shl
mov
je
int
jae
inc
add
cwtl
or
inc
mov
mov
leave
loope
mov
mov
xchg
bound
mov
js
data16
push
ja
adc
add
je
fistl
mov
aaa
addb
ljmp
sub
jns
je
add
sub
jnp
es
shlb
cmp
xchg
mov
loope
orl
pop
xchg
inc
adc
dec
orl
shr
push
jecxz
push
push
lahf
xchg
push
sbb
imul
pop
push
push
sbb
pshufw
add
add
ljmp
add
adc
cld
or
ja
jmp
shlb
ffreep
push
ret
outsl
adc
add
stos
ss
clc
mov
push
arpl
ja
jne
inc
mov
stos
mov
mov
or
adc
push
jg
fs
fwait
add
or
push
jae
jmp
pop
lahf
inc
push
inc
shl
inc
push
and
adc
add
push
addr16
mov
cmp
pop
mov
sub
and
add
outsb
stos
cmp
mov
xor
cmp
mov
cli
mov
lahf
repnz
mov
sti
loope
push
and
sbb
pop
je
push
scas
fcomps
push
mov
or
sti
shlb
ret
pop
sbbb
sbb
mov
xchg
stos
or
sub
fimuls
movsb
and
les
lcall
sarb
sti
add
leave
call
mov
cli
and
inc
movsb
cld
cmp
add
cmp
rcrb
xchg
fimuls
mov
mov
mov
xor
shrb
cmp
shr
fdivs
jo
add
xchg
gs
inc
dec
rolb
inc
xchg
rcl
pushl
add
test
shll
shlb
js
jg
pop
adcb
clc
cmp
stos
rcrl
inc
addb
xor
repnz
add
shr
adc
orb
out
push
and
hlt
daa
adc
lcall
and
ljmp
mov
ficoms
dec
or
adcb
sbb
xchg
pop
jnp
pop
hlt
mov
clc
call
xorb
test
push
jmp
shl
bound
push
pop
clc
loope
dec
js
push
subb
add
jno
add
mov
mov
fisubl
fmuls
add
mov
xor
add
sub
fbld
loope
mov
cmp
mov
push
and
scas
pop
icebp
xor
pushf
and
rclb
mov
cmp
push
aas
inc
sub
and
test
add
and
iret
test
mov
mov
push
push
mov
cmp
addb
arpl
add
xchg
pop
push
inc
mov
adc
pusha
cmp
lret
je
inc
sbb
lcall
ss
out
nop
cmp
arpl
cmp
mov
les
lods
and
stos
les
andl
aaa
cld
sbb
add
mov
adc
push
add
js
stc
aaa
or
xor
jg
mov
push
push
nop
mov
into
dec
pusha
add
ljmp
and
popa
fistps
loop
mov
loopne
cmpb
jp
mov
and
sbb
adc
loopne
ficoms
sbb
scas
adcb
enter
dec
jecxz
ret
mov
loopne
push
mov
mov
add
inc
loope
call
icebp
ss
sub
aas
enter
dec
pop
mov
rolb
bound
add
mov
add
shlb
or
pushl
enter
jae
jns
hlt
incl
cli
out
sub
imul
incb
pushl
push
imul
and
iret
or
fwait
pusha
sbb
mov
add
lods
int
test
rolb
enter
fs
movsb
jb
jb
mov
clc
add
inc
shll
inc
lods
mov
lods
add
and
test
nop
movsb
in
mov
das
add
xor
ss
xchg
dec
cmp
sub
test
andb
mov
add
sbb
and
adc
jne
lods
das
xchg
push
shll
pusha
data16
dec
jo
mov
pop
int3
inc
mov
add
sbb
add
test
orl
insb
bound
mov
push
mov
lcall
add
push
loope
mov
sbb
xor
fwait
mov
sub
aam
scas
mov
mov
and
pop
xchg
adc
aam
xchg
sahf
stos
lods
int3
mov
fwait
cwtl
xor
or
outsl
adc
test
ret
hlt
adc
jg
fiaddl
adc
clc
or
data16
aas
ret
add
xchg
xchg
and
cmpsb
jg
cwtl
call
and
or
scas
ss
add
fildll
test
mov
xchg
add
pop
add
in
lcall
add
leave
lds
adc
fcmovnu
add
xor
adc
stos
jo
loop
lods
mov
add
orb
rorb
movsl
shl
movsl
push
fwait
inc
inc
fwait
rorb
mov
clc
call
fdivr
or
inc
enter
add
test
inc
sbb
add
jmp
mov
inc
lahf
push
jp
push
addb
inc
jmp
sbb
and
add
mov
ret
aam
or
mov
test
fsubrl
or
aas
stos
mov
es
mov
loop
add
addr16
xchg
sub
cmp
or
mov
push
mov
in
fisttpl
test
or
xor
mov
cmc
cmpsb
sahf
ss
in
test
cmp
jmp
pop
adc
adc
rolb
jb
into
fst
mov
and
add
and
jge
adcb
xor
adc
dec
ljmp
cmc
pushl
push
call
call
bound
test
inc
das
mov
ss
ret
xchg
pusha
loopne
jle
mov
int
push
adc
or
cmp
dec
inc
push
outsb
cli
out
test
push
negb
roll
popa
in
in
sar
lcall
aas
dec
push
cmp
pop
add
in
xchg
mov
xor
adc
outsl
cli
xor
cmp
push
dec
add
sti
cmpb
scas
add
add
insl
shlb
fisttpll
jg
or
add
aas
int3
sbb
decl
aas
fwait
in
rorl
les
sub
add
pop
pusha
cli
nop
cmp
sbb
loopne
cmp
inc
rcr
shll
and
sar
ret
add
cmp
rorb
add
cmp
cmp
push
sbb
out
pop
fwait
or
add
movb
push
pop
movsl
sarl
xchg
ljmp
mov
cmp
or
adc
mov
inc
dec
push
inc
mov
xor
sbbl
cmp
add
add
adc
mov
or
sub
add
adc
daa
add
and
test
test
mov
orl
rclb
push
mov
cmpb
lahf
lods
dec
xor
jg
add
adc
or
cmp
outsl
add
sbb
shll
jne
or
fsubs
daa
mov
cs
push
aas
iret
test
add
sti
ror
inc
mov
pop
rolb
rorb
pop
jge
jne
sub
mov
pop
push
push
push
pop
sbbb
imul
add
xorb
loope
shlb
inc
push
and
sar
jb
push
cmp
les
push
daa
push
int3
xor
add
mov
mov
pop
mov
or
test
scas
fs
and
cmp
decb
decl
xor
mov
add
cmp
fwait
push
movsl
movsl
cmp
jle
add
ds
inc
mov
push
test
add
aaa
mov
mov
xorl
push
push
cmp
push
cmp
xor
push
std
cmp
call
cmp
inc
dec
adc
adc
aas
adcb
loopne
add
mov
lahf
inc
jo
andl
jmp
or
push
xlat
pusha
adc
xor
pop
sbb
push
xorl
mov
adc
push
adc
lds
outsl
fwait
enter
test
or
xchg
inc
xor
sarl
ss
ds
push
push
jo
jo
mov
xchg
push
incb
pop
icebp
inc
mov
cmp
and
loope
add
jl
cmc
call
inc
jno
sarl
cltd
orb
imul
inc
inc
cld
mov
sbb
dec
ror
jmp
and
loop
scas
mov
std
dec
lock
or
adc
xor
add
lcall
dec
push
pushf
cmp
adc
adc
xchg
nop
push
xchg
or
clc
jg
test
xor
add
dec
cmp
cmpsl
dec
cmp
cmpsl
sub
add
jp
fists
or
xchg
inc
shrl
mov
or
push
das
js
and
add
jbe
xor
push
jns
dec
push
imulb
jg
inc
jmp
push
cmp
nop
sbb
xorb
mov
add
push
xchg
jmp
sub
adcb
inc
shll
mov
jg
jns
roll
xchg
adc
loopne
rclb
jmp
xor
add
outsl
cmpsb
xor
add
popl
sub
add
ss
ss
inc
scas
addl
lret
inc
out
sbb
or
movsb
in
negb
mov
movsb
mov
ds
lcall
add
add
add
or
dec
push
shrb
mov
ret
adc
sub
dec
add
mov
iret
imul
rorb
push
inc
push
or
cmp
jae
mov
lret
xchg
xchg
shrb
nop
xchg
lods
fwait
adc
pop
add
cmpsb
add
or
mov
scas
push
or
mov
pop
mov
push
adc
add
and
ret
mov
add
push
mov
pop
mov
push
mov
addb
jb
and
fs
pop
inc
insb
inc
mov
and
sub
aaa
test
loope
aaa
add
push
scas
xor
nop
les
sub
sub
in
dec
inc
in
mov
or
in
and
pop
push
or
or
mov
jns
add
sub
push
add
sbb
fs
jl
pop
and
test
ljmp
and
inc
shll
into
jnp
das
subl
addl
cwtl
add
subb
xorl
scas
subb
fcmovne
movsl
rolb
add
xchg
add
and
push
mov
sub
adc
lcall
add
xor
dec
inc
shll
adc
add
cmp
rcrb
add
dec
stos
dec
incl
rolb
push
pop
mov
test
das
lahf
adc
or
dec
add
pushf
cmovne
aam
pop
push
sbb
jg
adcl
sub
andb
data16
rorb
call
mov
push
fwait
rcrl
aaa
add
jg
or
or
mov
orb
mov
push
lcall
add
push
loopne,pt
call
push
roll
or
or
adc
push
mov
mov
xchg
pushf
loopne
sub
sbb
push
xchg
push
rcrb
or
inc
sbb
mov
ljmp
sub
mov
mov
inc
seto
or
incl
or
or
add
mov
test
xchg
or
mov
hlt
and
cmp
mov
push
sti
pop
lock
and
push
mov
add
lea
pop
mov
subb
cmpsl
addb
aam
or
mov
lahf
inc
inc
ret
out
clc
mov
mov
sbb
arpl
mov
das
adc
and
or
loop
inc
add
das
cwtl
ds
dec
and
clc
insb
mov
xor
mov
mov
sahf
cmp
and
rcll
mov
decl
add
mov
sbb
mov
lcall
mov
les
xor
frstor
mov
fisubs
or
test
sub
fstpt
mov
jo
sub
loopne
or
lcall
and
mov
outsl
inc
adc
mov
cmp
fildl
loopne
inc
call
movsl
outsl
or
pop
cmpb
pusha
xor
mov
add
xor
popl
addb
test
lea
inc
push
fcompl
sub
daa
inc
push
jbe
and
test
adc
incl
mov
addr16
mov
jnp
lret
xorb
xchg
loopne
call
in
xchg
in
loopne
sbb
and
imul
push
outsl
adc
inc
js
imul
add
adc
in
adc
mov
rolb
mov
xchg
and
xor
mov
mov
test
cs
xor
jmp
subl
add
faddl
mov
fldl
sti
std
add
divl
xorl
mov
sahf
bound
mov
xor
arpl
ss
xchg
pop
shlb
add
or
add
add
xor
and
add
sbb
in
ds
xorb
sub
push
mov
and
sbb
add
add
addl
adc
sbb
sar
int3
fwait
adc
sub
andb
pusha
mov
jmp
inc
mov
add
nop
js
lods
jg
add
ds
into
sbbb
pop
int3
add
pop
jne
lods
loopne
pusha
pop
inc
lret
sub
xor
cli
push
outsl
out
test
add
adc
and
bound
mov
adcb
mov
dec
lock
fwait
add
push
pop
dec
push
mov
mov
add
jmp
mov
test
imul
sbb
push
add
data16
push
ljmp
pusha
into
jb
push
out
call
push
mov
iret
cmc
inc
shll
jbe
sbb
test
lret
or
dec
and
sbb
daa
hlt
and
sub
inc
inc
xor
jp
mov
add
add
stos
sbb
out
jo
push
lret
add
xor
jp
jp
pop
popa
loopne
inc
rcrb
aas
jbe
cmp
dec
and
mov
hlt
nop
mov
add
test
mov
mov
incl
addr16
inc
sub
adc
pop
lock
addr16
push
push
cmp
mov
popa
push
sub
es
jg
lcall
inc
mov
sarl
pushf
and
add
push
loopne
push
or
lahf
clc
jg
loop
lds
cs
push
dec
mov
mov
mov
icebp
sub
mov
mov
cmpsb
ss
cmpsb
hlt
push
jmp
orl
insl
int3
mov
mov
mov
xchg
cmp
loope
cmpb
dec
sub
mov
mov
imul
cmp
sahf
mov
in
inc
push
dec
shll
add
decl
insb
jns
jge
pop
xor
rcrl
imulb
je
loopne
xor
add
pop
test
add
or
xchg
dec
adc
add
xor
sbb
fwait
mov
or
xor
cmp
dec
nop
xor
sbbb
daa
sar
iret
loopne
add
add
ret
adc
fwait
out
cli
call
outsl
push
add
popf
xchg
add
sbb
xor
sub
loope
pushl
std
add
iret
fdivl
nop
push
cmc
addr16
push
jbe
mov
add
dec
pushl
repnz
sub
push
outsl
jb
push
je
push
shrl
out
aas
add
jo
sbb
add
mov
and
outsl
scas
fildll
arpl
mulb
ss
nop
sub
sub
mov
imul
dec
insl
loopne
mov
jle
push
inc
jg
jo
add
cmp
ljmp
scas
in
lahf
push
testl
mov
pushf
addr16
and
dec
xchg
cmp
pop
mov
and
mov
out
andb
push
mov
bound
xor
lods
xlat
mov
inc
adc
lock
test
inc
mov
mov
and
xchg
mov
cld
or
les
pop
pop
add
repz
jge
add
xchg
das
adcb
pop
test
xchg
shll
and
jg
xchg
dec
sti
add
popa
push
iret
mov
xchg
pusha
test
out
push
rorb
popa
add
ljmp
loopne
inc
xchg
out
jo
adc
lahf
popa
sbb
mov
mov
xchg
add
xor
xor
pop
add
mov
shlb
push
push
or
call
fwait
inc
sbb
rcrl
pop
lahf
movsb
decl
jecxz
pop
addl
sub
xor
fdivl
adc
filds
adc
sub
clc
aas
rolb
orl
xor
rolb
add
neg
or
cmp
jl
inc
or
lret
and
push
xchg
stos
mov
and
pop
scas
push
test
adc
data16
loope
filds
pop
shlb
xor
scas
dec
test
insb
cmpsl
xor
test
or
inc
jo
jmp
fidivrl
pop
mov
inc
shlb
mov
bound
xchg
push
mov
mov
cmpsl
stos
sub
cmp
andb
nop
xchg
pop
dec
xchg
xchg
cli
xor
mov
jecxz
mov
or
push
out
cli
push
push
stos
rclb
dec
add
movsb
dec
test
add
xor
outsl
mov
stos
push
popa
or
subl
inc
xchg
adc
xlat
xor
mov
mov
rclb
jecxz
pushl
jg
iret
jmp
mov
mov
dec
and
ror
lock
cld
or
out
mov
xor
pusha
scas
scas
dec
xchg
pusha
sbb
cld
les
xchg
scas
xor
push
iret
and
mov
loop
add
add
xor
je
shlb
add
mov
pushf
lcall
and
iret
sbb
pop
pop
roll
add
add
sti
decl
add
jb
and
xchg
nop
add
or
sub
jnp
jnp
movsl
jl
movsb
testb
ds
push
add
adc
fbld
inc
mov
push
repz
rorl
fs
jg
or
cli
fbld
mov
andb
pop
xchg
pop
mov
xor
mov
mov
lock
xchg
add
cmp
fdivrp
mulb
call
push
pop
add
xchg
add
outsl
add
xor
sbb
add
sub
add
adc
mov
call
xchg
jbe
mov
or
push
jae
xchg
fnstsw
pop
daa
dec
aam
pop
pop
xlat
mov
lock
xor
inc
mov
ror
add
insb
mov
cli
in
add
push
popf
push
inc
ss
add
int
leave
aad
gs
sub
or
cmpsb
mov
test
in
repz
rcl
lret
ss
xor
mov
sub
xor
aam
or
jle
add
decb
rolb
mov
mov
inc
inc
and
mov
push
jecxz
jl
data16
add
mov
stos
jbe
or
and
aas
pop
inc
add
push
jbe
xor
mulb
mov
sbb
roll
push
and
push
add
xchg
jo
negb
stc
lock
push
add
dec
in
add
jg
movsl
outsb
aas
pop
dec
add
or
add
dec
dec
and
add
add
add
ljmp
idiv
int
pop
sub
das
and
pop
das
add
orb
ds
repz
mov
and
xor
and
out
mov
xor
sbb
jo
pop
add
lcall
cmp
orb
add
adc
in
mov
mov
adc
add
es
stc
lret
add
test
push
adc
add
push
and
add
mov
jns
inc
xor
insl
add
jnp
sti
jecxz
or
cmp
jns
es
mov
fildll
or
jns
addb
mov
add
push
or
ja
or
mov
in
imul
mov
mov
outsl
add
outsl
and
outsl
fisubrs
jb
arpl
test
popa
jmp
xor
mov
sbb
mov
insb
aam
imul
pop
add
pop
add
or
std
jns
lods
sub
add
push
add
ss
inc
fldcw
add
add
insb
lcall
push
pushf
inc
add
lret
outsl
jg
add
cmc
inc
pusha
add
in
iret
fwait
dec
mov
push
dec
mov
mov
outsb
push
mov
push
mov
add
mov
not
or
jg
aaa
add
inc
add
add
xchg
inc
cmpsb
mov
dec
aaa
jl
mov
cmpsl
add
jle
add
jae
aaa
repz
negb
add
negb
inc
push
fiaddl
sti
aaa
adc
push
adc
xchg
fs
dec
ss
xchg
add
xchg
fimuls
inc
pop
lock
add
incb
add
test
incl
mov
jb
arpl
or
popl
sub
cli
jnp
adc
stc
add
ret
add
call
int3
inc
jecxz
shlb
add
or
add
push
lods
adc
in
jg
add
cmp
add
jge
jmp
sbb
mov
and
or
lahf
inc
and
movsb
addb
xchg
push
inc
arpl
xchg
lds
decb
mov
or
lods
adc
inc
cmp
roll
orl
mov
aad
and
lret
adc
push
es
pop
and
rcrb
unpcklps
outsl
sub
sub
mov
mov
lock
fidivrl
mov
ss
inc
pusha
and
sbb
mov
mov
nop
dec
lds
add
mov
fnsave
adc
fisttpll
sbb
lods
adcb
bound
loopne
mov
mov
cmp
ret
rclb
sbb
or
add
mov
bound
testl
jge
test
push
jmp
push
cmp
add
call
arpl
stos
mov
addb
pop
push
xchg
or
pusha
cmp
rolb
ss
inc
mov
ja
sbb
mov
jb
mov
cld
mov
js
add
push
cmp
push
mov
jb
inc
add
clc
insb
loop
push
arpl
or
or
aas
push
inc
push
cld
mov
rorb
rclb
sub
jne,pt
add
adc
or
add
add
inc
mov
jbe
jbe
sub
mov
or
pusha
add
shll
or
das
add
inc
jle
adc
mov
adc
add
ds
dec
ss
jbe
mov
addr16
mov
push
xchg
bound
push
popa
push
inc
push
push
idivb
dec
add
loope
mov
xor
push
mov
pop
push
or
cmpsl
add
cmp
pusha
xor
mov
push
and
insl
adc
adc
or
addr16
jae
push
and
or
pop
xorb
rolb
cmp
add
sub
rcrl
ret
mov
add
int3
adc
inc
xor
rol
xchg
mov
pop
out
shlb
adc
ljmp
incl
jmp
jecxz
xor
push
ljmp
ljmp
inc
push
mov
add
lods
loopne
scas
xchg
push
inc
push
pusha
sub
bound
mov
and
and
adc
cs
jo
sbb
rorb
rol
jb
adc
inc
sbb
sbb
and
add
enter
sbb
or
and
lock
pop
clc
jo
clc
pop
push
arpl
add
pop
xchg
or
insl
inc
pop
inc
sbb
pop
scas
push
aaa
jno
jnp
bound
nop
pop
add
roll
pop
jp
cmp
scas
sbb
push
gs
cs
pop
xor
cs
or
adc
pop
xor
mov
lock
imul
jae
cmp
pop
add
cmp
fisttpll
inc
and
call
incl
mov
or
adc
add
push
add
and
aad
add
repnz
orl
jns
or
jo
and
xor
mov
jae
add
mov
mov
sbb
xchg
aad
dec
dec
push
push
cmp
xchg
push
inc
add
into
dec
push
inc
adc
xor
fcoml
sarl
aam
stos
and
repz
repz
mov
add
sahf
in
adc
mov
sbb
sub
mov
dec
out
stos
into
insl
repz
clc
aaa
mov
xchg
icebp
or
cmpsl
insb
sbb
xchg
adc
mov
add
adc
jbe
icebp
popf
fisttpll
lods
outsb
out
cmp
into
add
or
add
push
rcrb
push
rolb
ret
addb
pop
add
add
sbb
sahf
jo
mov
or
fstl
lcall
sbb
mov
stc
mov
into
xchg
add
sub
mov
adc
in
or
sbb
adc
xchg
cli
subb
std
popf
jne
test
add
inc
cmp
stos
lods
adc
xchg
loopne
cmp
stc
flds
int3
scas
or
xorb
mov
add
enter
or
mov
mov
and
xor
mov
cmp
enter
or
inc
add
adc
push
jbe
test
add
call
add
inc
mov
pusha
stos
mov
jb
add
push
pusha
ljmp
stos
push
mov
call
adc
push
jg
add
adc
mov
sahf
fwait
icebp
or
adc
add
fdivr
scas
fiaddl
loop
push
mov
mov
mov
lcall
mov
add
nop
adc
jne
cld
pop
pop
fs
add
cmp
adc
xor
cmpsb
cmp
cld
xor
add
xchg
or
pusha
loopne
or
aad
cwtl
test
or
jbe
add
enter
xorb
rcrb
or
nop
xor
and
out
mov
or
into
divb
add
fwait
bound
xor
movsb
lahf
cmpsl
rolb
or
add
mov
movsb
incb
pop
xor
nop
pop
xor
lods
sbb
xchg
add
roll
cmp
or
sahf
or
add
add
and
mov
pushl
or
push
rolb
add
inc
mov
sbb
or
pop
xor
push
mov
inc
add
rolb
mov
inc
pop
mov
stos
mov
jp
mov
jg
mov
call
outsb
pop
inc
aaa
in
hlt
adc
cmpsl
push
sbb
in
add
hlt
jmp
scas
addl
orb
sbbb
mov
into
jl
lock
adc
movsb
push
scas
popa
push
and
mov
adc
mov
shrb
sbb
mov
mov
rcrl
adc
or
gs
jl
or
add
cltd
or
mov
pusha
sub
out
xlat
inc
and
and
cmp
iret
lcall
cli
addl
xor
add
es
cmc
push
mov
ljmp
in
jmp
inc
stos
xor
inc
xchg
adc
adc
push
adc
push
insb
jo
leave
inc
adc
push
mov
add
sbb
jmp
fcmovbe
add
inc
or
dec
push
in
add
push
fadds
push
or
add
repz
xchg
and
add
arpl
lods
test
mov
mov
idivb
mov
addb
orl
dec
rcr
loope
sti
mov
push
lret
rorb
or
sarl
adc
add
or
mov
xlat
loopne
testb
or
and
push
jecxz
or
and
andb
push
mov
pusha
jl
jmp
sub
dec
and
test
rcrb
inc
push
jl
pop
subb
cmp
jo
stos
roll
add
mov
add
sbb
jb
inc
cld
push
mov
insl
rol
das
add
aaa
sbb
sbb
and
cwtl
rorb
and
test
scas
clc
mov
icebp
or
dec
and
mov
sub
push
add
add
mov
mov
shr
add
add
call
loop
adc
mov
adc
pusha
sub
bound
rcll
or
sub
pusha
or
inc
jge
orb
roll
sahf
add
aam
inc
adc
outsl
xor
nop
imul
rol
fdivs
cld
in
orl
imul
push
test
cmp
std
test
jnp
and
adc
into
and
sbb
dec
sbb
adc
outsb
addr16
jle
lock
inc
push
sub
mov
and
dec
sub
pop
add
add
lock
push
ljmp
sbbb
sub
jg
pop
adc
adc
xchg
adc
jo
push
es
cmp
lea
mov
lods
mov
cli
inc
mov
test
or
xor
push
mov
lock
adc
pop
cmp
mov
mov
fldcw
jle
inc
pop
add
adc
jmp
data16
mov
mov
cmp
hlt
mov
inc
je
addl
xchg
dec
xor
mov
push
loope
xlat
sub
fwait
push
sub
push
add
shll
ljmp
mov
mov
aas
cli
push
mov
xchg
add
mov
mov
cmovbe
shll
dec
cli
movsl
jo
sub
call
jg
xor
les
or
push
test
pop
add
push
jmp
lret
scas
add
cmp
int3
sub
insb
add
mov
fistpll
adcl
xor
dec
jnp
mov
xchg
mov
sbbb
mov
loopne
mov
mov
push
das
inc
or
push
cmp
dec
cli
inc
fst
mov
cmp
push
push
pop
shl
out
int3
cld
jp
or
pop
in
and
lcall
pop
scas
stos
push
push
imul
stos
add
insb
jl
ja
xor
push
mov
jbe
addb
outsb
inc
notl
add
pusha
daa
sub
in
xor
xor
imul
xor
push
shlb
dec
cmp
clc
mov
in
mov
adc
insb
pusha
cli
das
sbb
xchg
xchg
decb
dec
insb
dec
dec
shrb
roll
cwtl
xchg
leave
add
into
add
outsb
mov
shrb
cmpsb
and
inc
jae
loopne
sub
push
aad
pop
cwtl
stos
mov
scas
add
add
in
and
mov
xor
add
mov
xchg
notb
push
ds
les
add
loope
cmpb
push
dec
inc
and
in
push
mov
push
or
and
jmp
mov
mov
into
enter
mov
scas
stos
adc
or
popf
nop
adc
popf
addb
out
adc
jp
adc
xor
addl
clc
mov
iret
pushf
add
cmp
aaa
xchg
in
fiadds
sub
mov
add
push
pusha
push
dec
loopne
movb
shr
jno
add
mov
push
or
in
sar
lea
stos
add
pop
andl
orl
add
xchg
adc
xor
rol
xchg
in
adc
insb
xor
lock
and
adc
inc
add
xor
and
in
adcb
dec
test
rcrb
xchg
adc
add
andl
dec
stos
test
into
mov
in
push
outsb
mov
dec
adc
push
rolb
push
hlt
push
sub
jle
incl
aas
push
aas
clc
adc
ja
sbb
mov
out
xchg
pop
rcrb
addb
mov
mov
xor
push
sbb
dec
fnsave
and
sbb
cmpl
out
push
fimuls
lret
or
dec
inc
sti
or
and
xor
shll
js
aad
std
mov
sahf
push
out
in
mov
mov
sub
add
loope
shrl
xlat
outsl
and
out
in
pusha
pop
out
inc
outsl
xlat
inc
inc
mov
pop
lock
or
xchg
and
leave
sbb
rol
xor
xlat
jl
les
lock
loope
rolb
fbld
mov
popa
add
xor
test
jbe
es
xor
sbb
inc
mov
das
pop
lock
sti
enter
push
dec
mov
mov
xchg
lcall
xchg
test
mov
sarb
push
inc
jge
aaa
add
adc
sbb
add
andb
or
ljmp
fs
shll
pushf
bound
mov
pushf
scas
shl
pushf
into
xchg
loop
xchg
loopne
js
mov
inc
dec
rorb
sub
pusha
xchg
scas
mov
mov
mov
shll
or
or
push
outsl
loopne
sbb
pop
or
push
xchg
inc
push
pop
scas
mov
mov
cs
pop
or
inc
xor
xchg
call
sub
std
data16
mov
pop
scas
loop
sub
scas
clc
dec
sahf
in
test
bound
pusha
xchg
rolb
bound
sbb
fisubs
cmp
jmpw
lods
add
cli
push
adc
imul
rcr
mov
push
add
cmp
add
aas
push
adc
test
jb
dec
push
sbb
cmpb
adc
shlb
xchg
clc
pop
add
jb
add
xorl
adc
mulb
and
or
jmp
pop
lret
adc
jecxz
push
pusha
add
js
inc
pusha
mov
rol
xorb
js
loope
addl
inc
lods
cltd
sbb
rcrb
or
imul
and
jl
pop
rolb
xchg
inc
jo
in
mov
test
fwait
idivb
add
jbe
sbb
adcl
das
and
jnp
shlb
adc
push
or
adcl
mov
push
sti
xor
mov
xchg
rorl
cmp
or
mov
je
stos
orl
xor
adc
sbb
or
call
call
in
ret
sahf
scas
xor
push
repz
pop
xor
pushf
lcall
mov
movsb
into
dec
inc
mov
or
loopne
ret
mov
or
mov
popf
or
mov
js
loopne
pop
mov
mov
mov
mov
and
dec
lods
ss
mov
inc
jne
add
add
loopne
cmp
sbbl
insb
dec
pop
push
decl
add
fadds
inc
imul
fisttpll
push
add
mov
js
xchg
movsb
inc
cwtl
js
dec
cmc
sub
push
ljmp
je
dec
xchg
inc
cli
jmp
and
bound
xor
pop
sub
dec
mov
sbb
loopne
subb
gs
cmp
lock
cmp
decb
mov
pop
nop
sub
sti
mov
and
outsb
adc
nop
or
add
push
in
lcall
add
leave
xor
jle
sbbl
mov
dec
je
mov
add
jo
mov
dec
bound
jmp
pop
dec
jecxz
cwtl
jo
dec
mov
iret
pmaxsw
adcl
inc
or
pusha
jns
pop
inc
ror
mov
push
mov
jae
add
leave
mov
pop
ds
jo
or
pop
xor
popa
insb
clc
or
cmp
mov
lea
xor
jecxz
testb
out
shrl
ss
mov
xor
adc
sbb
clc
lcall
fwait
cli
in
rorb
jae
jb
mov
sbb
xchg
dec
data16
out
inc
test
inc
test
or
sbbl
xchg
das
pop
ljmp
jmp
adc
push
pop
sahf
rorb
pop
mov
xchg
mov
inc
cmp
push
xor
icebp
cmp
lock
fcoml
insl
mov
mov
rcll
push
cmp
mov
mov
sarb
mov
clc
data16
loopne
sbb
bound
cmp
pop
mov
into
mov
push
or
loope
cwtl
adc
mov
outsl
adc
jbe
inc
xchg
in
int3
sbb
adc
pop
push
orb
push
sar
loop
rclb
es
xor
push
push
jnp
mov
xor
push
dec
inc
jno
lock
pop
aam
push
cmc
jbe
jo
jbe
and
pusha
add
scas
pop
lds
xorl
mov
rcll
mov
mov
test
adc
xchg
pop
push
inc
mov
pushf
pusha
push
inc
inc
sbb
and
int3
adc
insl
xchg
mov
and
dec
and
jnp
cmp
inc
es
mov
adc
rolb
sbb
xor
out
push
sarb
add
mov
mov
mov
dec
jl
sub
mov
fsubl
sub
dec
mov
xchg
ljmp
push
inc
push
cltd
mov
cld
shrl
push
push
inc
adc
sbb
xchg
out
xor
lret
shrl
cli
stos
mov
push
das
mull
dec
inc
mov
mov
mov
mov
cmp
loopne
sub
sbb
test
or
addr16
int
push
in
loope
hlt
imul
add
lds
push
add
sbb
addr16
add
arpl
out
push
outsl
dec
push
add
imul
sub
sub
cs
icebp
inc
sbb
aaa
es
or
cld
or
push
adc
push
mov
xor
xorl
push
mov
mov
mov
mulb
add
das
push
fstpt
sti
mov
dec
nop
push
sbb
lock
cli
mov
push
rclb
dec
jbe
adc
add
ljmp
test
loope
jbe
push
stos
mov
sbb
xor
add
xorb
cmc
xor
jb
loopne
js
xchg
add
push
imul
add
bound
aad
sub
call
loopne
in
push
outsb
repnz
jg
test
and
int3
popf
ss
lahf
xor
mov
js
inc
out
push
stos
add
in
loopne
mov
add
mov
xchg
pop
pop
mov
dec
into
fs
movsb
mov
in
stos
int3
nop
je
xor
mov
nop
mov
dec
arpl
or
ja
inc
add
int3
pop
in
inc
and
or
mov
and
dec
push
or
xchg
adc
dec
enter
jno
xor
lock
js
or
or
xor
mov
push
loopne
add
cmpsl
jg
jmp
mov
pop
add
call
add
push
adc
in
add
leave
add
mov
inc
mov
dec
xor
mov
es
aas
and
dec
cmp
xor
int3
mov
pop
cs
ljmp
add
push
and
mov
push
jl
test
jl
jmp
je
repz
cmp
jg
lock
add
add
mov
mulb
inc
mov
loopne
add
and
inc
adc
add
mov
enter
jmp
adc
cmpsb
mov
scas
jmp
jg
call
nop
movb
int
jp
in
pusha
sbb
add
dec
fs
andb
icebp
push
adc
out
mov
stos
add
xor
sub
movsb
pop
cmp
jecxz
into
int3
sarl
push
lret
lds
enter
adcl
pop
cmc
in
fs
xchg
dec
leave
xchg
int
sub
add
pop
xchg
pop
push
insb
adc
dec
nop
and
sbb
jl
scas
out
or
cmp
push
push
xor
ss
xchg
ss
movsl
test
enter
andb
sbb
stos
shlb
adc
add
add
cmpsl
add
add
mov
push
test
add
ret
mov
xor
mov
add
and
inc
imul
dec
mov
jp
xchg
and
add
add
test
mov
mov
cld
ljmp
inc
mov
lahf
sahf
mov
in
fbstp
sahf
add
mov
test
xor
subb
fs
mov
inc
inc
lcall
cmp
or
out
xchg
orb
ss
int
or
xor
jno
sub
jl
mov
stos
addb
mov
add
sub
or
or
xor
add
push
jg
pusha
add
js
add
dec
cli
sbb
or
daa
daa
jle
popf
mov
jae
inc
mov
and
mov
testb
scas
push
test
mov
fxch
xor
add
cmp
pusha
insb
inc
ret
lret
mov
push
xchg
sub
jg
mov
movsb
jo
or
inc
push
dec
push
loope
mov
mov
insb
in
andb
push
jb
sysenter
adc
xchg
aaa
sbb
enter
ljmp
mov
xorb
lahf
ret
and
inc
cli
punpckldq
inc
movsb
subb
jle
push
bound
subl
xchg
hlt
add
enter
cwtl
lea
shrb
sbb
push
je
mov
out
mov
inc
sti
pop
and
in
mov
push
addl
ss
jbe
fnsave
add
ljmp
adc
js
outsb
adc
enter
inc
iret
fucomi
and
mov
sbb
scas
pop
sub
cmpsb
inc
dec
mov
mov
jg
dec
mov
xchg
clc
sub
dec
add
into
jne
loope
lea
and
cs
or
add
push
jbe
xchg
hlt
incl
lods
cmp
into
adcb
inc
adc
adc
rol
add
lods
mov
mov
inc
add
roll
mov
push
dec
repnz
and
mov
sub
push
add
jge
mov
add
pop
sub
inc
sub
pop
pop
add
aam
stos
ljmp
aad
inc
xor
rorb
xchg
or
inc
arpl
xor
xorb
test
mov
inc
add
aas
inc
add
dec
fnsave
scas
fcmove
mov
adc
or
sahf
adc
or
push
daa
mov
sbb
sub
aas
stos
sbb
ret
mov
sbb
pop
roll
pop
inc
and
test
mov
sbb
pop
sbb
inc
add
adc
mov
out
jg
inc
add
roll
orb
adc
addb
add
pusha
rcrl
mov
and
scas
addl
subb
jb
sub
scas
mov
inc
call
sub
xor
hlt
mov
mov
xor
dec
fists
insb
jg
mov
xor
and
fstps
in
add
loopne
push
add
test
jb
dec
dec
dec
adc
add
and
pop
xchg
adc
sbbb
mov
loopne
and
mov
mov
dec
mov
andb
mov
cmc
mov
or
out
and
in
mov
popa
dec
inc
arpl
popa
add
xor
out
bound
and
aam
inc
ljmp
mov
mov
clc
adc
sub
sbb
rolb
ljmp
push
mov
data16
add
add
cli
xor
xor
jne
xchg
sub
rorb
sahf
inc
into
push
cwtl
add
cli
jg
mov
out
or
pop
mov
xor
loopne
push
in
out
or
lret
xor
or
sub
xchg
push
adc
aad
insb
add
bound
or
mov
jnp
cs
xchg
je
leave
push
or
xor
add
loopne
inc
push
adc
sbb
fisubrl
pusha
pop
xchg
mov
mov
and
nop
xchg
lahf
jp
movsb
dec
imul
fisubs
push
inc
fwait
test
xor
or
jb
xchg
lods
jp
add
add
add
js
loopne
or
and
push
into
pop
adc
call
decl
xor
add
pop
mov
or
sbb
loopne
stos
cli
push
push
int3
fs
ss
pop
adcb
adc
mov
sahf
rcrb
sahf
out
inc
fs
pusha
andl
fistps
dec
adc
test
pop
mov
loop
in
jge
push
daa
sbb
adc
jecxz
pop
adc
or
mov
or
fsub
or
pop
pop
ljmp
add
and
adc
popa
or
out
dec
mov
and
sub
mov
pmulhw
je
ljmp
xchg
loopne
popa
shll
or
loopne
scas
mov
adc
push
ja
out
xlat
add
mov
adc
sub
test
push
push
pop
stos
bound
push
mov
mov
lcall
xor
pop
arpl
cmpsb
shl
es
rcrl
or
shll
inc
ds
mov
adc
pop
sti
out
cmp
roll
add
and
repz
in
mov
notl
shll
adc
pop
das
sbb
add
out
stc
dec
jno
jne
pop
test
hlt
outsl
lcall
in
popa
add
faddl
xor
push
movsl
movsb
nop
jb
fildl
pop
mov
jbe
add
inc
mov
fsubr
inc
mov
push
push
xchg
mulb
lahf
gs
push
fadds
add
cwtl
insl
and
repz
or
push
sbb
mov
pop
lock
pop
xor
addr16
xchg
dec
sti
outsl
pop
pop
push
sbb
fisubl
push
push
jg,pn
push
fwait
push
cmp
lock
jnp
imul
push
stos
xchg
ret
inc
sub
mov
iret
lods
sub
stos
les
or
scas
mov
or
je
xor
pop
mov
stos
pop
insl
mov
or
mov
sbb
adc
push
mov
add
inc
mov
or
dec
dec
out
imul
mov
pop
outsl
mov
les
add
cmp
in
in
mov
mov
ja
stos
xchg
jo
jnp
sbbl
jbe
jmp
mov
stos
das
cmp
jo
mov
cmp
mov
pusha
push
pop
icebp
add
jmp
push
pop
dec
shl
repz
fmuls
xor
add
orb
rcrl
jo
jno
sarl
jmp
stos
lods
fs
popa
add
icebp
nop
loopne
mov
jg
push
and
push
jg
mov
outsl
in
fistpl
std
add
je
ja
add
push
jo
mov
cmp
es
adc
orb
fidivrl
sub
call
jo
in
mov
scas
pushf
nop
jo
pushf
jle
mov
xor
call
xchg
mov
sbb
lock
dec
sbb
or
push
push
pop
into
arpl
pop
add
jae
jnp
arpl
lds
pop
fimuls
imul
daa
push
push
insl
mov
adc
push
aaa
push
mov
pop
pop
mov
jle
pop
scas
inc
inc
repz
push
jo
out
xor
rcl
jmp
or
and
xchg
subl
push
adc
and
fwait
rcll
inc
mov
push
push
jne
aaa
mov
xchg
lock
push
or
push
out
jbe
out
cmpsl
inc
je
push
out
std
push
lods
frstor
xor
push
in
pusha
add
pop
rcrl
push
sbb
popa
add
imul
imul
out
jmp
push
mov
push
stc
divl
pusha
test
subl
mov
push
cmpl
sti
insl
sbb
mov
jg
nop/reserved
mov
pop
aad
lock
stos
sub
sti
inc
dec
mov
push
stos
out
pop
mov
pop
sbb
rcl
jecxz
mov
rorl
fbstp
jo
inc
sub
mov
lock
rcll
push
aas
out
ret
mov
fwait
push
cmpl
jnp
inc
jo
sbb
mov
aad
pop
inc
call
shl
add
mov
aaa
orb
cwtl
icebp
and
pop
push
or
stos
popa
push
popa
mov
push
jo
jo
bound
push
iret
jb
lds
sbb
or
or
push
stos
mov
adc
pushf
xchg
and
jg
xchg
stos
outsl
shl
add
jno
stos
outsb
xchg
mov
daa
jo
leave
dec
imul
das
push
aas
push
iret
sbb
fwait
push
add
bound
xor
mov
addl
push
and
sub
add
lcall
sbb
cmp
add
add
stos
int
push
cmpsb
add
aad
add
rcrl
or
push
flds
lods
sbb
mov
add
mov
stos
dec
adc
push
push
bound
mov
insb
mov
bound
jl
push
add
add
stos
mov
lcall
adc
test
or
and
add
cmpsb
insl
lcall
cmp
fisubrs
jns
into
or
jns
add
dec
or
sahf
cmpsb
mov
push
adc
sbb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
lods
test
xor
lahf
mov
dec
dec
push
addb
imul
imul
push
add
xor
rcrl
sbb
xor
shrl
dec
shll
cmp
ror
aad
dec
shll
fstp
in
shll
shr
jmp
shll
stc
test
dec
shll
popf
cltd
movsl
mov
lods
test
lcall
inc
dec
dec
push
rolb
xor
shll
shll
jge
mov
lahf
mov
inc
dec
nop
mov
push
and
mov
stos
mov
push
andl
stos
mov
dec
jecxz
or
shrb
lcall
push
in
loopne
sbb
outsl
lcall
xor
mov
sarl
xchg
aad
frstors
in
in
jmp
mov
sbb
or
xor
mov
xchg
xchg
popf
cltd
movsl
imul
add
mov
imul
add
dec
xor
jns
dec
push
push
pop
add
gs
insb
pop
fldt
popa
push
insl
add
xor
mov
push
cmp
rorl
andb
pusha
sbb
dec
sarl
sub
cmp
pushf
cmpsb
imul
sbb
stos
movsl
mov
in
loopne
mov
add
mov
mov
dec
lea
loopne
cmpsl
lods
sbb
fsubs
movsl
mov
stos
movsl
mov
xor
jno
jns
pusha
jo
subl
adc
mov
mov
mov
imul
push
leave
shll
jo
sub
dec
aas
subb
mov
loop
outsb
sub
fwait
clc
fadds
cmp
dec
dec
rcrl
cld
push
push
push
sbb
data16
xor
outsb
imul
jp
push
add
or
or
push
in
add
and
xor
cwtl
jge
cltd
or
inc
popa
ss
aad
and
lods
add
into
mov
ljmp
push
mov
or
imul
pushl
xchg
in
loop
mov
out
pop
jo
mov
add
mov
shlb
add
roll
shlb
mov
pushf
mov
adc
hlt
addb
cmc
jp
mov
xchg
fbstp
add
cmp
lcall
js
mov
mov
adc
cs
mov
loopne
or
rolb
mov
push
or
hlt
mov
stos
push
js,pt
fsts
and
adc
and
rclb
pop
mov
jb
inc
cs
add
mov
jno
mov
fwait
inc
pop
xchg
inc
add
mov
mov
cli
mov
add
mov
mov
fwait
mov
add
loop
inc
push
jg
adc
jb
sbb
insb
clc
mov
mov
inc
je
cltd
mov
and
sbb
and
aaa
cld
call
cmp
roll
mov
add
jg
push
push
or
decl
sub
js
push
push
xchg
jo
cli
pop
notb
popa
fs
sub
mov
lock
push
or
add
mov
ret
or
mov
ss
mov
stos
adcb
add
adc
push
mov
fstl
add
bound
jg
loopne
or
xchg
hlt
sbb
add
test
lock
loop
add
mov
loopne
insl
jg
iret
ret
push
mov
and
jg
fwait
call
push
pop
lods
add
or
add
push
xchg
arpl
and
mov
mov
or
les
and
add
adc
adc
test
mov
push
mov
mov
shl
mov
mov
add
loope
pop
mov
sub
cli
aaa
cld
in
adc
add
sub
adc
jno
jno
outsb
inc
ljmp
dec
or
mov
rcl
jl
loopne
jle
incl
and
add
sbbl
lds
ljmp
ss
add
mov
ret
inc
sbb
push
pop
test
add
push
push
rclb
add
cmp
inc
mov
mov
sahf
push
pushl
nop
push
push
sbb
sti
pop
xchg
pusha
push
mov
add
add
hlt
pusha
into
sub
repz
push
add
push
add
loope
loope
add
sbb
call
lods
mov
inc
push
push
mov
xchg
hlt
add
push
mov
clc
sub
add
add
push
std
fbstp
push
mov
push
inc
lock
push
or
shlb
mov
mov
mov
jbe
stos
lods
icebp
es
rolb
xor
mov
aad
ss
or
adc
push
mov
flds
add
mov
xlat
je
test
fldt
and
push
mulb
add
mov
jmp
inc
fiaddl
add
popf
and
shlb
and
sar
pop
es
xor
push
xchg
mov
pop
mov
pusha
inc
or
loope
aaa
subl
mov
xchg
sub
mov
or
insb
push
and
add
mov
popa
leave
fistl
and
clc
fistl
sbb
or
and
jl
addb
shll
fs
into
and
ret
lods
add
iret
in
test
sbb
mov
filds
cmp
or
inc
adc
xchg
push
data16
push
or
lods
inc
adc
jg
add
jnp
into
mov
cwtl
jle
inc
xor
ds
mov
push
inc
inc
mov
fsubrs
push
loop
cmpsb
cld
lods
push
xor
push
pushl
push
add
add
mov
sti
fiaddl
xor
rcrl
loop
pop
inc
std
push
into
call
cli
stc
add
mov
or
and
or
mov
add
mov
mov
insl
jne
mov
dec
cs
test
or
mov
adc
mov
imul
push
jne
es
sti
fildll
mov
pushf
mov
add
push
aaa
mov
and
adc
xor
addl
pop
mov
das
sub
add
dec
clc
imul
adc
or
outsl
aaa
adcb
add
sbb
adc
mov
dec
and
cmpsb
mov
cmpsl
fidivrs
and
sbb
or
xchg
xchg
lock
adc
jge
filds
or
or
mov
div
inc
dec
inc
sbb
sub
test
lods
addl
adcb
pushl
popf
xchg
iret
cltd
push
xchg
iret
movsl
dec
mov
mov
sbbb
aam
xchg
nop
mov
xchg
jmp
lock
xor
dec
es
inc
jp
lock
cmp
inc
adc
pop
inc
add
inc
sti
mov
and
xorb
pop
add
sub
mov
arpl
jb
or
xchg
lcall
fadds
push
xchg
lock
xor
push
add
cmp
rcrb
inc
mov
outsl
mov
es
iret
stc
jp
add
push
mov
mov
ret
mov
addl
or
stos
loop
mov
mov
push
mov
inc
loopne
fildl
es
push
push
dec
shrb
and
push
cld
imul
xchg
mov
sbb
mov
loop
push
movsb
push
pusha
mov
xchg
or
mov
cmp
jecxz
jmp
add
or
mov
lods
push
out
pop
inc
add
mov
inc
jg
mov
mov
fisttps
mov
ret
punpcklbw
cltd
push
mov
push
add
ja
sar
adc
daa
dec
sarb
pop
mov
mov
or
inc
sbb
and
dec
daa
mov
daa
pusha
subb
mov
das
add
daa
xor
or
and
lds
mov
and
mov
or
sahf
stos
fcmovnu
or
lds
out
inc
sarb
ds
or
mov
mulb
and
outsb
inc
add
stos
sbb
and
jnp
and
arpl
or
aaa
add
add
dec
dec
sub
pop
inc
add
imul
stos
pushf
push
jge
add
bound
xor
jbe
inc
daa
jb
js
in
adcb
call
loope
mov
push
dec
fmuls
sub
imulb
sub
aas
jb
sub
lods
mov
test
cld
test
out
stc
pop
imul
add
xor
pop
xor
pushf
testb
adc
xchg
fucomip
push
xchg
push
jb
xor
push
out
lcall
xor
scas
mov
and
add
pusha
and
cmp
push
incl
or
mov
cmp
popa
test
push
pop
fmuls
lods
test
das
inc
adc
and
stos
das
pop
clc
cmp
cmc
jg
ret
loopne
popa
add
jo
mov
jb
jo
dec
fs
imul
pop
roll
ljmp
jae
es
lods
mov
jae
mov
andb
andb
shll
cmc
loope
sbb
pop
pop
add
repz
pop
imul
dec
test
orb
push
sub
loope
add
xor
inc
xchg
ds
jmp
lahf
mov
mov
jne
inc
inc
xchg
add
mov
call
mov
test
stc
pop
test
popf
xor
pop
sub
add
andl
ljmp
es
iret
sbb
mov
mov
imull
ss
cmp
adc
sbb
cli
loope
ret
dec
shl
test
xor
fmuls
faddl
cli
clc
jae
adc
mov
cmc
stc
mov
mov
cs
jne
xlat
push
add
pop
sbb
mov
adc
in
imul
mov
imul
es
jns
or
and
mov
sbb
mov
or
sarb
push
mov
push
lods
sti
call
stos
mov
inc
lods
lock
pop
aaa
jne
jns
cli
icebp
mov
xchg
jecxz
clc
add
lea
cs
xor
pop
pop
imul
adc
push
xor
gs
xchg
je
imull
inc
push
popf
mov
lods
add
pop
jno
negl
adc
sub
pop
addr16
icebp
movsl
inc
adc
xchg
sti
pop
jge
out
loope
adc
jb
sub
bound
hlt
mov
mov
inc
movsb
arpl
mov
or
pusha
loope
dec
mov
mov
push
out
or
mov
rolb
fs
rcrl
cmc
outsl
lock
jge
pop
fiadds
out
cmc
or
mov
lods
sbb
mov
lock
mov
inc
repz
pop
js
or
repz
sarl
mov
into
and
ds
sub
ficompl
lock
push
enter
sbb
imul
or
ds
stos
cmc
pop
sbb
clc
sahf
jne
inc
cmp
ret
repz
cmpsb
loopne
push
cmc
idivb
mov
mov
rol
cmc
shlb
sub
jg
pop
cmp
cmp
fwait
and
add
mov
add
pop
cmc
loop
gs
loope
or
lret
mov
cmp
imul
cs
divl
push
notl
cmc
stos
div
out
icebp
loope
add
ljmp
fcmovbe
iret
std
aam
call
xlat
fdivp
add
fmul
ljmp
fdivrp
clc
into
leave
leave
sbb
rorl
mov
or
adc
mov
xor
mov
push
mov
or
fimull
jmp
rorb
jmp
lret
fidivl
icebp
divb
outsl
mov
add
pop
rolb
jo
neg
enter
aas
mov
mov
not
fcomp
xlat
std
add
sahf
cwtl
mov
std
rolb
scas
out
rcl
push
aam
jg
xchg
out
iret
ret
sub
lret
loope
cmc
or
xor
pop
testl
sub
test
inc
lret
adc
xlat
xlat
xor
add
in
adc
fidivs
cmp
sti
incb
test
fisubs
mov
clc
orb
jmp
inc
loop
add
cwtl
push
fistpl
dec
or
ds
jmp
roll
add
cli
mov
sbbb
popa
xchg
rcll
xlat
cld
push
or
fdivp
add
xlat
cmp
and
add
adc
inc
push
pop
jns
and
aam
cmp
add
mov
xor
xor
dec
mov
jle
add
add
fcmovbe
rcr
xor
or
jmp
rolb
or
ret
decl
test
outsb
add
enter
cmp
push
add
xlat
jg
in
add
in
xor
mov
iret
xchg
push
je,pt
loop
adc
pop
nop
pop
mov
inc
inc
pushf
mov
inc
sbbl
lret
imul
add
pop
sbb
icebp
adc
jb
sbb
sbb
fidivs
or
into
leave
xchg
fsubr
aaa
dec
cmpb
testb
add
stc
into
fnsave
adc
icebp
jmp
xchg
add
cmc
faddp
add
cmpsb
int3
inc
pop
xor
sar
add
into
xor
inc
test
nop
repnz
call
push
xor
fidivs
loopne
push
js
add
adc
xor
aam
adc
loopne
hlt
lret
mov
add
call
cmpl
into
cli
clc
and
dec
mov
sbb
mov
inc
mov
add
aam
pusha
adc
xlat
ror
jbe
call
or
orb
insb
jmp
inc
cld
repz
orl
add
xor
and
andb
das
clc
adcb
fsts
iret
sahf
or
ret
loopne
adc
int3
orl
dec
xchg
xchg
inc
lret
ret
std
jg
cmp
and
mov
add
notl
pop
fdivrs
or
hlt
mov
loope
decl
test
cmpb
test
add
sbbb
adcl
into
lret
xlat
xorb
jge
xchg
call
shlb
neg
push
ret
fwait
outsb
divb
inc
aam
dec
sbbb
les
lcall
dec
mov
lret
sbb
decl
cmp
pop
shrl
or
sbbl
fisttps
adc
or
adc
mov
in
aam
inc
pop
lret
loopne
cmpsb
clc
rcll
adc
cmp
pop
sbb
lcall
test
aaa
pop
xor
xor
sahf
mov
mov
mov
xor
sub
out
adc
adc
insb
lcall
sub
call
pslld
repz
inc
lret
inc
cmp
jle
aas
xlat
inc
sub
inc
iret
inc
lods
inc
or
jmp
cmp
sub
or
insb
scas
pop
insl
push
mov
stc
movsb
jmp
scas
push
mov
cmc
ds
push
xchg
or
aam
jo
test
push
push
add
and
lahf
mov
out
aad
shr
inc
add
mov
into
xlat
in
incl
or
shl
jne
out
jbe
mov
loop
push
jle
rcr
fsubrl
cs
adc
orb
dec
fs
sbb
xchg
mov
xchg
cs
mov
sub
cwtl
ficomps
cld
push
sub
cs
ja
cmp
es
mov
std
hlt
sub
xor
inc
and
or
add
jl
or
cli
and
in
ss
mov
jae
xchg
andl
jg
icebp
or
outsb
and
ret
dec
loope
add
jle
push
dec
in
jge
cmp
jecxz
paddd
cld
inc
mov
add
test
xor
xor
call
loopne
cmc
hlt
push
mov
and
sbb
add
test
cmp
xorb
add
pop
mov
inc
mov
out
pop
push
aas
sbb
or
inc
pop
sbb
loopne
out
cli
pop
and
pop
xchg
adc
in
or
outsb
loope
int
mov
aaa
addl
popf
and
and
or
jg
out
aam
sub
fadd
loopne
shlb
and
dec
call
ds
icebp
loope
push
aad
dec
movsl
add
js
pop
pusha
add
dec
dec
insb
or
call
lea
pop
mov
js
fstp
add
dec
out
repnz
mov
fcmovu
loopne
inc
popa
push
jecxz
stos
inc
cli
imul
jp
aaa
add
mov
outsl
xor
cmpsl
add
andb
fidivl
flds
pop
cli
ljmp
mov
jg
out
inc
loopne
jmp
adc
fst
hlt
scas
xlat
mov
scas
into
add
adcb
mov
loop
mov
jae
add
push
jl
mov
int3
add
add
hlt
cmpb
adc
add
xchg
add
loopne
repnz
hlt
dec
scas
clc
lret
adc
inc
adc
jne
loopne
les
mov
add
cmpsb
adc
and
daa
adc
mov
hlt
imulb
mov
push
mov
clc
shrb
rorb
into
mov
loopne
mov
andl
and
loop
mov
fs
push
cld
jg
mov
add
pop
cli
rolb
cwtl
stos
sub
or
insb
xor
call
loopne
pop
lock
stos
mov
enter
icebp
add
add
hlt
ljmp
dec
insb
push
xchg
add
or
daa
roll
jle
sahf
rcll
dec
mov
mov
rcr
add
xlat
ror
flds
cld
insl
adc
leave
fistpll
add
or
data16
pop
inc
push
push
push
xchg
sub
or
pop
push
ljmp
lds
add
jbe
adc
jmp
push
rclb
daa
nop
fnsave
xchg
sbb
add
mov
adc
mov
adc
sahf
mov
jg
jg
or
pop
xchg
fidivs
xchg
cltd
icebp
push
or
cld
das
addb
andb
add
or
out
lret
push
fists
jb
mov
adc
les
lcall
std
mov
xor
int3
dec
add
inc
addl
add
or
roll
movsb
xor
inc
mov
add
das
xchg
test
jp
push
mov
jecxz
mov
lock
rol
cmc
lcall
test
clc
popa
sbb
cvttps2pi
paddw
leave
pusha
dec
and
movsl
sahf
or
hlt
mov
add
clc
push
les
cmpsb
mov
jo
arpl
fs
cmp
cmc
mov
push
mov
iret
faddp
cli
pop
xchg
movsb
add
mov
and
pop
idiv
shl
mov
cmpsb
sub
loope
adc
push
icebp
lcall
dec
call
fsub
add
adc
add
out
int3
fwait
push
sub
fcom
jl
rcrb
lret
clc
pop
add
pop
loopne
mov
and
in
je
xchg
add
and
jg
adc
pop
mov
add
rclb
loopne
enter
push
js
and
ljmp
jb
sub
in
into
lret
orl
add
or
sbb
neg
push
mov
mov
lcall
push
add
mov
and
add
xchg
cs
cld
pushl
adc
xchg
repnz
aad
jo
test
sbb
inc
cs
icebp
add
out
xor
fidivl
mov
jmp
repnz
loope
cmc
fstpt
ja
inc
sub
push
fcoms
divl
loop
sub
add
or
adc
jle
sbb
das
cli
inc
ja
cmpsl
mov
xchg
das
or
lahf
roll
sbb
mov
lock
add
or
filds
jbe
push
or
xor
pop
cli
add
lret
adc
pop
add
ljmp
sub
cmc
jecxz
add
xchg
adc
jg
and
and
adc
insb
or
pop
or
jg
add
xlat
and
push
mov
push
addr16
stos
pop
push
rcrb
and
hlt
sbb
sbb
push
pop
ret
int3
sarb
jns
lea
and
popf
xor
mov
push
xor
in
or
add
adc
rcr
adcb
xchg
data16
nop
dec
aad
inc
mov
nop
in
ror
das
sub
push
call
or
decb
fcomp
and
outsb
mov
repz
cmp
fwait
int
iret
jae
filds
cli
aaa
fistl
add
lahf
add
stos
pop
add
mov
mov
ret
jo
jne
sbb
cmp
ret
shlb
fwait
add
xor
jo
jbe
ret
aaa
push
ret
or
xor
inc
add
mov
pop
mov
cmpsb
mov
push
pop
or
icebp
or
in
cli
incl
shr
shl
mov
data16
or
inc
test
push
mov
cmp
pop
pop
loopne
jge
bound
adc
insl
jae
addl
and
push
xorl
sbb
mov
lret
lcall
lods
or
xchg
or
inc
pop
or
repz
call
ffreep
jg
aaa
std
push
popa
and
jno
push
into
data16
addb
dec
mov
out
shrb
loopne
ds
and
cli
and
nop
or
lcall
aam
and
jne
add
jecxz
sbb
fiaddl
rcrl
je
lahf
jmp
add
cli
enter
adc
gs
sub
test
dec
jl
xchg
xor
int
in
add
mov
cmp
into
fs
xor
mov
aad
cmp
push
mov
in
cli
jmp
cmp
cmp
aad
outsb
pop
je
ljmp
mov
sub
jb
repz
push
push
adc
fdivrp
lahf
clc
add
xor
jb
fcmovbe
add
mov
add
add
loop
push
cltd
mov
cmc
inc
lods
sbb
pop
add
inc
mov
rorb
sub
pop
call
rcrb
jmp
add
out
aad
add
jg
loopne
or
mov
or
sub
lcall
dec
scas
xchg
mov
leave
js
fstpl
lods
jo
lock
push
cli
loop
sbbb
aad
movl
adcb
push
stc
movsb
incl
xlat
sub
orb
or
or
or
mov
dec
ret
into
mov
mov
fucomp
leave
xlat
fsubrl
jbe
inc
push
ret
adc
cli
subb
clc
or
jmp
sub
repnz
incb
xor
imull
add
mov
inc
sarl
cmp
xor
adc
orb
adc
out
mov
jl
leave
faddl
int
push
sarl
and
jbe
and
fidivl
or
div
add
add
rclb
test
scas
in
outsl
stos
inc
or
inc
pop
add
std
or
inc
and
push
ret
add
addl
enter
and
inc
cwtl
aam
inc
or
dec
int
adcb
jp
push
loop
or
ret
xchg
repnz
xor
ss
add
hlt
aad
ficoml
loope
inc
xor
jp
pop
int3
add
fcoml
repnz
jge
pop
imul
sbb
sbb
loop
fmuls
int
add
mov
adc
lcall
xlat
inc
add
jmp
aam
mov
sarb
shll
pop
inc
push
cld
fucomi
outsl
mov
add
int3
cli
mov
sub
and
mov
and
clc
push
sub
jno
add
inc
or
stos
lcall
mov
test
or
xlat
ja
cld
add
add
adc
fcmovu
filds
fst
pop
and
sub
xor
cld
xchg
inc
cli
call
inc
add
xor
pop
ret
mov
insb
or
pop
enter
xchg
xchg
jmp
add
arpl
dec
pushf
and
jle
or
push
add
rclb
cli
fwait
data16
mov
jl
fisubs
out
mov
test
loopne
sbb
and
jp
xchg
arpl
mov
add
pop
sub
ret
inc
xor
dec
test
inc
add
shll
aaa
pop
cmc
mov
mov
xchg
loop
incb
call
mov
push
mov
dec
add
das
mov
lcall
or
shl
stos
dec
aaa
pusha
loopne
mov
rorl
movsb
sahf
mov
aas
add
iret
mov
loop
out
test
out
adc
mov
es
adcb
jmp
loop
add
add
rorb
mov
sbb
add
int3
outsl
inc
sbbl
mov
rcl
fnstcw
inc
jmp
and
and
orl
ljmp
and
pop
and
and
loope
inc
scas
mov
je
add
pop
ret
mov
adc
adc
bound
clc
adcb
xchg
lcall
movaps
pop
pusha
call
call
inc
and
dec
or
in
and
mov
pavgb
add
es
add
shlb
mov
ja
cs
add
cmpsl
add
xor
or
addr16
cmp
leave
pusha
sub
or
loopne
sub
test
and
out
clc
jg
mov
jne
shlb
push
sbb
inc
repnz
add
out
bound
mov
out
test
sbb
jecxz
jp
sbb
jmp
cmp
and
rorb
push
pop
pop
sbb
mov
or
sbb
jle
test
in
mov
pusha
ja
mov
fmul
mov
add
enter
push
fisttps
and
ret
push
inc
xor
inc
dec
push
mov
rcll
add
and
inc
lock
cmp
mov
and
add
fdiv
enter
pop
sbbb
sarb
js
je
into
faddl
mov
lods
mov
iret
shlb
or
jnp
dec
push
cmpsb
je
adc
rcl
roll
sub
xchg
and
push
mov
adc
out
add
add
push
push
adc
in
add
cld
mov
mov
fmuls
and
call
mov
jmp
mov
pop
add
mov
xchg
and
or
push
or
cmp
mov
mov
add
mov
sub
jae
fiadds
jle
in
mov
mov
daa
mov
jmp
mov
lahf
dec
test
xor
and
or
add
popa
inc
xchg
insb
and
mov
ja
xchg
mov
sti
fwait
add
push
lret
nop
adc
jle
sar
imul
sahf
pop
add
cmp
lret
insb
cs
mov
pop
adc
sti
inc
lock
std
in
add
ljmp
test
sti
and
outsb
sbb
ljmp
or
sti
aam
pop
aaa
push
shlb
add
adc
pop
add
shr
pushf
clc
fstpt
mov
stc
pop
xor
mov
push
lds
ljmp
jle
pop
ja
xchg
xchg
aas
mov
adc
adc
inc
add
push
add
dec
dec
push
pop
icebp
sar
fidivs
sub
fcomip
pop
cld
adc
std
nop
fisubrs
pop
jb
mul
stc
loope
mov
sbb
call
xchg
sub
mov
adc
sbb
out
push
aaa
mov
push
xor
xor
add
sahf
out
inc
pusha
fcoml
cs
dec
sti
fcmovnu
sbb
jae
cmp
testl
jg
into
rcll
add
inc
test
xchg
fcomip
incl
inc
test
filds
sub
test
js
xchg
fcomps
lods
add
notb
cld
push
test
cwtl
jle
mov
push
xor
sbb
mov
add
pop
sub
mov
add
pop
xor
inc
inc
jne
aas
stos
in
adc
xchg
mul
pop
lock
add
jg
das
cs
jb
sub
or
jbe
add
faddl
cld
fucomi
ss
push
movsl
or
lahf
cwtl
jge
pop
add
and
out
loop
add
repz
fistps
test
push
xchg
ss
scas
inc
incl
outsl
jle
pushf
push
les
xchg
pop
sbb
ffreep
std
add
fcmovu
shlb
add
sub
xchg
sub
mov
add
inc
lcall
sub
inc
insb
int3
xor
jge
test
add
sub
js
or
xchg
addl
add
mov
sub
sbbb
push
cmp
lcall
pop
rorl
stos
sbb
and
add
or
xchg
sahf
repnz
xchg
add
jne
xchg
jle
add
mov
mov
push
jge
and
sub
mov
push
fcompp
inc
cmp
add
gs
jne
jae
sbb
ret
icebp
adc
sub
dec
add
or
sub
test
sti
add
or
add
add
add
or
sub
insl
imul
lahf
push
xchg
add
pushf
xchg
sti
or
inc
add
xchg
sub
scas
imul
and
add
repz
pop
xor
daa
sti
add
pop
movsl
cld
add
xlat
jle
andb
push
mov
pop
loope
lods
imull
aaa
lcall
add
insb
scas
xor
cmp
inc
filds
mov
mov
cli
add
xor
test
jl
or
cmp
or
xchg
jo
cmp
or
lcall
inc
mov
or
mov
decl
mov
or
bnd
xchg
cmpb
or
adc
and
out
in
aam
test
cs
movl
push
add
add
fwait
sub
addb
mov
cmpsb
adc
add
lods
imul
shrl
bndldx
daa
add
or
cmp
mov
addb
sub
add
aas
mov
pop
repz
movl
dec
aam
sbb
or
push
stos
pop
mov
lahf
mov
xor
jg
lahf
adcl
incl
sbb
xlat
or
repz
jg
cmpl
aaa
subl
sbbl
pop
orl
cmpl
in
outsl
cmp
xchg
test
test
cld
int
cld
test
test
test
filds
aas
test
test
test
int
pop
test
test
test
jg
ja
outsl
test
test
dec
fisttpl
mov
test
popl
mov
out
test
test
fisttps
test
test
test
test
test
aam
test
inc
add
cs
lahf
add
add
dec
mov
mov
mov
adc
mov
repz
jg
mov
mov
fisttps
aas
mov
mov
mov
jg
aaa
jg
mov
mov
mov
jg
ja
outsl
mov
mov
dec
mov
cld
in
aaa
mov
mov
mov
testl
mov
mov
mov
das
mov
pop
mov
mov
mov
outsl
mov
dec
mov
cld
int
mov
mov
mov
mov
int
mov
iret
mov
das
mov
pop
mov
mov
mov
outsl
mov
dec
mov
cld
int
mov
mov
mov
mov
insb
or
out
mov
mov
mov
iret
mov
mov
ja
outsl
mov
dec
fwait
cmp
mov
scas
fldt
ret
add
adc
aaa
jg
xlat
iret
pop
aas
aaa
das
daa
pop
pop
jg
ss
int
fwait
ret
iret
add
int
rorl
xchg
mov
testl
mov
mov
mov
push
mov
jg
out
divb
outsl
mov
mov
mov
int
pusha
decb
in
aaa
fwait
ret
or
sbb
mov
js
jmp
add
cmp
shlb
mov
mov
jmp
cs
jmp
out
dec
add
dec
imul
xorb
sub
mov
js
filds
jno
popa
push
xchg
xchg
xchg
xchg
inc
test
test
addr16
call
dec
mov
fdivr
inc
test
inc
popa
inc
sti
pusha
inc
mov
mov
test
mov
mov
adc
mov
or
ss
mov
nop
addb
ret
mov
and
clc
fbld
mov
icebp
mov
addr16
loop
and
aaa
in
jmp
and
mov
sbb
or
mov
pop
push
mov
mov
cld
mov
mov
test
push
and
lea
imul
lea
push
xor
dec
lea
pushf
mov
sbb
insb
or
add
push
mov
or
push
adc
cmp
add
and
flds
aaa
cmp
addb
adc
add
add
rolb
xorb
mov
xchg
xchg
push
push
lods
dec
loope
or
outsl
jg
es
xchg
xchg
xchg
and
xchg
xchg
jns
test
js
xchg
int
adc
push
pusha
ja
sub
jo
xor
mov
mov
xchg
scas
dec
loope
mov
adc
dec
add
mov
pop
lea
lea
mov
subl
clc
in
mov
pop
lcall
jbe
subb
sbb
mov
test
sbb
xorl
sbbb
mov
nop
add
add
imul
add
mov
fwait
test
cld
add
test
outsb
test
dec
test
push
sub
sub
mov
mov
ret
pop
in
jmp
mov
mov
mov
pushf
mov
mov
pop
fwait
xor
push
mov
xor
incb
sbb
adc
sbb
lret
cmp
mov
xchg
xchg
stos
xchg
mov
gs
pusha
or
mov
mov
mov
mov
pop
dec
sbb
mov
mov
int
icebp
decl
mov
mov
push
push
addl
popf
inc
add
adc
daa
andb
sbb
pop
pusha
sub
mov
cld
fisttpl
out
fsubs
je
imulb
and
or
mov
mov
arpl
mov
decl
mov
mov
adc
aaa
jge
pop
mov
mov
cmpsb
loopne
test
sub
jg
in
bound
mov
mov
dec
mov
lods
adc
cli
add
mov
movb
sbbb
and
imul
push
std
sub
push
adcb
xorb
iret
xchg
imul
mov
xor
not
xor
mov
fcomip
mov
and
add
or
cmpsl
mov
fcomip
mov
adc
add
sbb
add
mov
jg
lea
lea
mov
mov
int
adc
mov
ljmp
cmp
sub
mov
mov
add
jl
or
jo
adcb
xchg
addb
jmp
xchg
xchg
int
aaa
adc
push
mov
xchg
incb
sar
xor
mov
mov
mov
mov
xchg
mov
mov
mov
add
sub
jns
mov
mov
mov
nop
dec
jns
je
push
mov
js
mov
lea
lea
lea
mov
lea
add
sti
cli
mov
mov
adc
mov
sub
test
dec
icebp
nop
adc
or
sbb
imulb
cmpl
lods
sbbb
sub
test
lret
out
adc
push
repz
ss
cld
stos
aad
sbb
int3
lock
mov
mov
mov
pushl
mov
testb
mov
adc
mov
fmuls
int
cmp
mov
fidivs
xor
mov
cld
ljmp
in
test
outsl
fwait
pop
cmpsl
xor
mov
pop
mov
xor
xchg
sub
xchg
xchg
inc
jo
add
mov
ljmp
mov
xchg
xorl
adc
inc
sbb
scas
rorb
rolb
pop
pop
arpl
mov
mov
pusha
nop
mov
cmp
stos
in
nop
dec
in
fadds
shl
dec
enter
aad
int3
dec
rorb
xor
sub
mov
mov
adc
adc
insl
sti
add
add
js
jl
jle
push
idiv
fbld
mov
pop
mov
and
mov
inc
es
lea
dec
or
lea
lea
mov
and
cld
lock
call
jo
aaa
jg
fmuls
enter
rorb
sbb
push
mov
mov
adc
cwtl
pushf
mov
mov
cld
insl
xchg
mov
clc
adc
mov
mov
mov
in
mov
mov
insb
mov
fmull
inc
int3
in
pop
loopne
jp
mov
adc
sub
mov
mov
sbb
or
mov
and
pop
test
stos
mov
fisttpll
cltd
mov
mov
rcll
jg
or
bound
and
add
adc
jnp
mov
mov
pop
lock
mov
mov
mov
in
xor
fidivs
mov
or
pop
dec
mov
lea
sub
pop
stos
jb
or
add
shl
xchg
data16
pop
leave
orb
stos
and
xorb
adcl
subb
jge
add
mov
xchg
xchg
or
push
dec
xchg
mov
aam
cmp
aaa
push
test
xchg
cs
nop
inc
mov
test
sbb
ja
mov
adc
mov
mov
mov
inc
call
jne
mov
or
mov
mov
aaa
std
jg
jmp
lock
sub
pop
lock
in
jle
mov
icebp
mov
mov
lock
mov
bound
lea
push
fidivs
mov
pop
lock
outsl
jg
das
sahf
add
and
fiadds
roll
outsl
xor
pop
push
orb
addb
subl
movsl
orl
nop
sub
xorb
or
push
inc
cmp
sub
sub
inc
add
jg
incl
mov
addb
mov
inc
test
adc
adc
ljmp
cld
jae
mov
jecxz
cmp
xor
mov
js
clc
decl
rclb
mov
or
xchg
cmp
mov
sbb
pop
inc
pop
mov
ret
add
jo
mov
outsl
testb
lea
pop
ljmp
lret
addb
mov
std
notb
fiadds
test
jge
ja
data16
stos
mov
xchg
out
fmuls
lock
dec
mov
push
inc
inc
shlb
clc
sbb
ja
pop
lock
sti
xchg
xchg
ljmp
or
pop
xchg
rolb
loopne
sub
add
push
mov
mov
mov
cld
fwait
lahf
mov
in
inc
mov
mov
mov
lret
mov
cld
pop
mov
dec
mov
mov
je
mov
add
mov
mov
adc
mov
mov
mov
mov
sub
mov
pushf
sub
popf
rolb
rcrb
push
jg
mov
call
dec
adc
xchg
jne
insb
cld
decl
test
sti
orl
sbbl
sbbl
or
andb
cmp
rcrb
xchg
rcll
and
xor
call
std
inc
mov
mov
dec
sub
lock
pushl
fnsave
fildl
add
xchg
nop
xchg
cmpb
pushf
cmpb
pop
and
sbb
outsl
push
mov
add
sahf
test
cmpsb
add
call
inc
add
sub
lret
adc
stos
inc
cld
push
iret
mov
outsl
bound
call
add
mov
mov
sub
adc
lock
pusha
lea
add
xor
dec
add
call
xchg
xchg
xchg
nop
xchg
mov
push
cmp
pushl
fdivr
cmp
mov
jno
mov
mov
pop
adc
mov
lcall
xchg
mov
mov
mov
add
mov
mov
inc
sar
mov
mov
scas
mov
sbb
xchg
fisubrs
addb
mov
std
sbbl
mov
or
andl
sub
sbbb
adc
mov
fcoms
sbb
mov
cmc
adc
push
movd
ja
mov
notb
xchg
xchg
xchg
mov
add
xchg
clc
mov
mov
mov
faddl
mov
sub
xor
inc
adc
in
cld
push
outsl
xchg
js
jl
outsb
test
mov
pop
insb
cli
pop
fsubrl
mov
mov
nop
insb
fimull
aam
paddsb
pop
fidivl
mov
sahf
nop
test
mov
insl
jp
mov
mov
hlt
xchg
mov
fimull
ja
push
mov
mov
mov
mov
xor
mov
jo
xor
cmp
xlat
dec
decl
sbb
imul
fwait
jg
push
pop
addl
andb
add
sbb
xor
loop
mov
scas
addl
sbbb
in
lcall
adc
cmpl
stos
mov
xor
fadds
fistpll
adc
bound
std
call
mov
adc
xchg
enter
shrl
push
xchg
xchg
rolb
xchg
xchg
xchg
adc
jae
test
test
mov
int3
dec
adc
test
test
test
push
cmp
mov
roll
mov
pop
mov
sbb
add
mov
aaa
push
lret
cmp
jnp
mov
mov
push
add
pop
jl
je
dec
xchg
dec
mov
mov
mov
mov
mov
rorl
leave
mov
mov
das
mov
mov
mov
jge
insb
mov
dec
notb
mov
mov
mov
mov
mov
mov
adc
xchg
cmp
imul
fisttpl
int3
out
adc
rorl
and
cmp
mov
stos
mov
xchg
rcll
int
pop
test
xchg
add
jl
pop
outsb
dec
adc
hlt
sub
mov
add
clc
test
fcoml
decl
and
data16
pop
lea
pop
lea
bound
icebp
adc
mov
call
mov
push
andb
fisttps
jno
shrb
andl
or
push
orl
lds
push
lds
leave
movsb
add
push
faddl
arpl
outsb
andb
sahf
xchg
xchg
xchg
xchg
xchg
xchg
aaa
jg
xchg
mov
lods
test
sub
push
je
test
ret
loopne
stos
test
lahf
mov
mov
mov
test
aaa
sbb
mov
pop
adc
dec
fisubl
fcmovnu
hlt
rorb
push
bound
popf
lods
scas
shrb
jo
mov
mov
mov
mov
mov
rorl
adc
jg
mov
push
cmp
mov
popl
or
mov
fs
inc
mov
jl
mov
std
lcall
xchg
test
out
and
and
mov
and
add
mov
add
mov
add
inc
mov
out
mov
inc
jg
mov
xchg
inc
jbe
mov
and
add
fadds
sbb
fcomip
adc
sub
roll
adc
mov
xchg
imul
insb
test
mov
mov
mov
jp
and
loop
mov
out
fists
inc
mov
clc
mov
mov
push
mov
mov
mov
push
stc
fwait
mov
jb
jbe
push
outsb
mov
mov
pop
mov
call
test
inc
mov
inc
shlb
js
sarb
and
stos
cmpsb
jb
jp
hlt
xchg
lea
and
adc
repnz
out
ljmp
loop
or
faddp
jg
lret
ret
lea
adc
pushl
jg
lea
lea
lea
lea
lea
lea
lea
push
shl
push
or
es
test
rclb
push
xor
add
dec
xorb
sub
loopne
pop
or
xor
pusha
popa
jl
bound
dec
or
fists
inc
subb
or
scas
xchg
aaa
push
adc
decb
std
incl
jp
add
inc
mov
xchg
fwait
mov
xchg
xchg
xchg
roll
mov
test
test
test
adc
test
test
and
fwait
or
mov
xor
mov
mov
call
mov
loopne
push
mov
dec
mov
push
pop
mov
sub
mov
xchg
mov
mov
aaa
xchg
or
pop
loopne
and
mov
cmp
rcrb
mov
subb
add
test
mov
loopne
js
or
loopne
xorb
sbbb
clc
sbbl
xor
ljmp
sbb
inc
addb
xchg
pusha
sbb
xchg
scas
pusha
sbb
xchg
xchg
mov
xchg
inc
test
test
mov
into
test
test
xchg
cli
fsubrl
sbb
ficoml
mov
test
and
push
mov
std
int
cmp
push
cwtl
ret
mov
lcall
in
add
aaa
je
fdivrs
incl
mov
sub
xchg
loopne
mov
and
xor
stc
test
add
aaa
or
test
test
pusha
cltd
inc
repnz
in
and
push
loopne
insb
lock
mov
mov
pop
ljmp
or
jge
mov
jbe
outsb
repnz
mov
xor
sahf
enter
data16
out
orb
pusha
movsb
mov
add
add
mov
inc
sub
fadds
addb
add
jg
insl
subb
cmpl
add
cmp
xlat
add
imul
push
mov
test
xchg
test
cli
out
adc
mov
xchg
adc
xchg
mov
sbb
dec
xchg
xchg
aad
mov
cld
xchg
insb
xchg
pop
adc
dec
xchg
mov
adc
mov
test
test
test
adc
pop
test
shrb
mov
xor
mov
pusha
sub
mov
pusha
lods
jns
push
mov
jmp
mov
mov
inc
jp
xchg
mov
lret
add
mov
pop
pop
lea
sbbl
insb
stos
add
mov
mov
mov
into
sbb
and
xchg
test
testl
inc
loope
fiaddl
dec
repnz
les
push
xchg
add
mov
in
pop
mov
icebp
mov
mov
add
or
mov
mov
mov
rorb
adc
mov
cli
aad
adc
mov
mov
xchg
sbbl
ds
add
test
inc
loope
rorb
jge
jbe
dec
xchg
xchg
sbb
adc
mov
pop
adc
stos
xchg
or
sahf
cmp
ljmp
pop
adc
adcb
sub
xchg
xchg
pop
test
rol
hlt
das
cli
pop
push
mov
and
cmp
pusha
test
mov
insl
or
fbstp
lods
mov
mov
int
popa
cmpsb
lret
mov
push
ljmp
cmpsb
shr
xor
daa
inc
mov
adcl
test
cmp
push
outsl
pop
icebp
adcl
jle
inc
xchg
pushf
test
add
sahf
add
test
rolb
adc
xchg
inc
orl
cmpsl
repnz
mov
ret
loopne
call
fmull
mov
and
mov
adc
je
mov
adc
push
adc
mov
fs
pop
mov
push
jo
mov
nop
pop
adc
push
jp
mov
inc
xor
cmp
stos
add
fwait
mov
adc
adc
mov
inc
mov
push
push
fdivrp
mov
mov
push
frstor
mov
mov
jg
rclb
les
xor
mov
mov
mov
jg
out
add
or
sbb
jp
enter
mov
fs
jmp
sbb
push
push
sbb
jnp
mov
mov
jnp
mov
out
add
xchg
mov
pop
xchg
testl
loopne
mov
mov
jo
aam
cmp
inc
adc
mov
adc
mov
push
shl
mov
mov
out
push
pop
mov
push
jge
push
adc
test
adc
mov
je
fildll
lea
test
shl
fists
sub
add
adcl
mov
cmpsb
andb
mov
cld
call
icebp
xchg
inc
jo
xor
es
pop
mov
push
mov
mov
jl
or
xchg
inc
mov
testb
aam
jp
dec
sub
adcl
push
lea
decl
subb
xor
sbbb
push
call
xchg
jne
ja
mov
add
and
movsl
mov
mov
xchg
mov
decb
aad
mov
mov
lock
jg
pop
xchg
adc
push
lea
pop
add
movb
pop
stos
add
fimuls
cmc
push
sbb
add
cld
pop
pusha
cmp
inc
andb
lock
xchg
jp
outsl
jb
sahf
outsb
xchg
ret
and
sub
loopne
mov
mov
aaa
fldcw
push
cltd
mov
pop
and
mov
add
adc
sbb
mov
mov
mov
scas
sbbl
nop
test
push
sarb
mov
test
mov
pusha
add
cli
mov
lock
pop
xor
jg
mov
pop
adc
push
into
subl
pushf
orl
add
incl
adc
adcb
orb
jl
dec
xchg
mov
jg
cmp
adcl
sbbl
sub
movsl
imul
in
subb
cld
cmpsb
pushl
xchg
xchg
push
movsb
call
test
mov
addl
sub
or
sub
ja
push
pushf
xchg
and
mov
mov
nop
aaa
imul
outsb
mov
mov
adc
in
cmpsb
fmull
mov
incl
orb
mov
test
dec
loopne
mov
add
mov
in
aaa
sub
stc
test
test
adc
pop
and
test
test
test
rcl
xor
and
push
test
add
add
inc
jno
and
es
or
add
pushf
mov
lock
xchg
or
rorb
fidivl
lea
fwait
mov
sti
jmp
out
imul
mov
call
xor
sbb
pop
cmp
and
ja
mov
addb
inc
mov
ds
out
add
fists
xchg
aas
test
inc
jo
jg
loopne
add
dec
pop
mov
stos
scas
push
add
out
loopne
addl
nop
pshufd
inc
and
pop
inc
sbb
adc
adc
out
xor
sarb
pop
std
jg
fidivrl
outsl
inc
mov
inc
mov
cwtl
mov
out
adc
pop
add
lea
lea
jnp
mov
lea
es
sbb
lea
inc
and
mov
mov
adc
mov
cs
mov
mov
add
out
mov
mov
mov
push
and
cwtl
lret
sub
decl
mov
mov
ljmp
add
mov
add
jl
add
cld
test
cld
add
movsb
into
sub
cmp
ljmp
push
test
test
andl
sbb
dec
negl
sub
sub
push
ret
push
mov
fsubrs
add
insb
mov
andb
mov
pop
incb
jle
xor
fsts
repnz
leave
pop
sub
and
negb
cmp
push
mov
loope
or
lock
mov
aad
in
or
call
lock
adc
sbb
fidivl
dec
add
ds
jmp
lret
add
inc
test
lods
mov
jge
jmp
or
shl
jnp
ljmp
dec
ss
loopne
cld
mov
inc
or
push
inc
push
js
in
lds
mov
and
sub
and
incb
sbb
vshufps
int
mov
inc
pusha
mov
mov
ljmp
mov
add
lret
out
lods
scas
call
loop
ret
mov
shll
dec
mov
jge
sbb
mov
jecxz
jbe
push
xchg
push
adc
lock
fidivl
and
push
sar
mov
clc
in
stos
push
jp
jecxz
add
mov
jge
lods
push
adc
mov
ss
mov
cmp
fs
ret
jmp
xor
push
cmp
bound
pop
sbb
cmpsb
mov
jbe
xor
add
smsw
xchg
cld
lcall
mov
movsb
sbb
mov
mov
jg
data16
push
mov
mov
icebp
rol
addr16
push
xchg
addl
roll
add
popa
imul
push
dec
pop
rclb
scas
pushf
pop
je
jmp
mov
add
icebp
lock
adc
call
int3
dec
inc
push
add
mov
jno
stc
add
fbstp
cld
and
mov
movsl
jp
imul
jl
fwait
xor
add
push
mov
xchg
adc
mov
mov
xor
mov
mov
cmpsb
and
cmp
jle
mov
out
mov
insb
rolb
and
pushl
mov
repz
jns
ja
call
shll
or
pop
add
inc
jg
cmc
mov
sbb
popa
fs
jb
arpl
jae
gs
outsl
dec
sti
std
and
arpl
popa
je
push
inc
je
inc
dec
jo
pop
fucomi
inc
insb
insb
inc
adc
outsb
sub
adc
push
push
sti
data16
push
dec
imul
das
jg
jae
dec
jne
sbb
je
outsl
arpl
push
imul
shr
jb
jl
push
es
imul
int3
push
push
pusha
test
jl
inc
gs
jne
shlb
inc
mov
je
je
daa
mov
push
inc
push
jns
push
inc
jae
imul
mov
jbe
push
dec
je
andb
outsw
inc
and
add
inc
jb
push
jne
jns
outsb
js
push
push
dec
jb
popa
outsb
inc
inc
outsl
jne
inc
mov
mov
fwait
mov
imul
adc
and
outsb
sub
popa
inc
and
fldl
cmpsl
dec
jae
insb
mov
addr16
shrb
or
int3
arpl
jo,pn
xor
push
popa
insb
inc
es
dec
mov
push
sub
pop
pop
push
inc
insb
mov
or
push
insl
jle
cld
mov
sahf
sub
sbb
leave
inc
pop
aas
and
mov
insb
push
pop
jl
fsubrs
jp
push
insb
jae
push
cwtl
push
cmp
jae
cmp
xchg
rcll
imul
outsl
jl
icebp
roll
sti
out
lds
shll
and
cs
push
jo
stos
roll
fcmovbe
rolb
add
inc
push
push
jb
gs
xchg
xchg
ja
mov
hlt
push
inc
sub
cwtl
gs
arpl
cmpsb
xchg
outsl
jo
in
push
pop
mov
push
sbb
shrl
mov
xor
fs
jb
mov
xor
fs
pop
push
cmp
orl
repz
es
and
mov
adc
iret
sub
jecxz
in
push
jns
gs
jl
jo
push
or
fs
sbb
rcll
pop
sbb
add
jbe
inc
fs
mov
adc
jecxz
mov
mov
push
imul
outsl
dec
cmp
inc
jns
cmp
push
sbb
test
mov
imul
inc
sti
inc
cld
push
sbb
mov
add
jp
adc
inc
jb
stos
mov
movsb
push
lods
push
cmp
inc
icebp
mov
jae
dec
pop
dec
sarl
sbb
and
sahf
or
test
inc
sbb
cmp
daa
mov
push
mov
xchg
das
imul
mov
add
adc
and
ja
test
inc
inc
push
pop
mov
stos
push
and
add
inc
mov
lea
cs
mov
jo
jae
pusha
jne
into
sti
inc
dec
or
push
ret
shll
sub
sbb
iret
stos
nop
mov
and
nop
in
dec
xor
fidivl
adc
jne
pop
add
jb
mov
fdivrl
push
imul
pushf
or
scas
add
xor
add
jl
jae
sbb
lea
add
xor
dec
push
daa
data16
das
cmp
mov
lods
lcall
arpl
jb
mov
sbb
mov
aad
jnp
push
outsb
fs
inc
xor
mov
push
popa
jb
gs
mov
imul
add
jmp
pop
std
xor
movsb
and
or
mov
pop
jne
push
mov
bound
pop
addr16
stos
xor
lcall
stos
push
or
mov
cmpsl
sub
cmpsl
mul
mov
adc
fdivs
sub
push
rorb
gs
push
dec
mov
dec
mov
xchg
xlat
ljmp
adc
sbb
add
imul
pop
xor
jb
mov
and
sbb
cmp
cmp
imul
adc
sub
push
ret
outsl
loope
fisubl
xor
sbb
adc
outsl
add
and
jb
popa
je
push
inc
mulb
out
jl
movsb
add
outsb
dec
and
out
lock
in
and
dec
add
xor
dec
sub
jl
ds
jb
jb
sbb
subps
cld
insl
sub
adc
mov
add
add
add
add
std
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
jo
add
add
in
add
add
add
add
add
add
add
addb
add
xchg
add
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
jo
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
sbb
add
outsb
icebp
xor
cltd
add
sub
ja
or
repz
out
adc
dec
fbld
jns
or
adc
mov
or
cltd
out
push
push
mov
sti
mov
add
and
in
out
xchg
jnp
add
add
rorb
dec
pop
pop
inc
inc
sti
xor
push
sub
dec
in
mov
clc
and
into
push
movsb
movsl
jp
in
imul
add
sti
mov
xchg
pop
scas
popa
out
cmpsl
sbb
sub
xchg
ss
mov
cmp
xchg
adc
sahf
in
inc
enter
mov
dec
popf
inc
addr16
or
stos
test
jb
push
sti
faddl
sub
aaa
xchg
das
push
mov
push
dec
add
and
pop
sbb
movsb
fnstsw
inc
push
loopne
hlt
mov
cmp
xor
jmp
cmc
pop
rcrl
and
scas
mov
mov
into
inc
sbb
les
out
shll
mov
out
lods
fnstenv
dec
rcr
xor
pop
scas
mov
test
aad
cmpsb
jmp
lock
subps
or
cmp
or
sahf
xchg
mov
fnstenv
testb
jb
out
xor
mov
dec
inc
mov
jne
roll
and
fs
sub
fldcw
repz
push
mov
push
mov
sarb
adc
enter
shlb
jbe
lods
daa
cwtl
mov
inc
inc
leave
mov
sahf
inc
or
ror
sbb
adc
fwait
jge
jns
inc
mov
push
xchg
lcall
dec
and
adc
ficoms
das
inc
ror
mov
push
mov
or
jecxz
inc
inc
sbb
cmp
mov
hlt
leave
inc
enter
jge
repnz
push
adc
or
fnsave
push
mov
mov
cmc
jmp
push
mov
adc
sbb
enter
shlb
lcall
pop
out
sbb
movsl
add
sub
call
scas
or
loop
adc
cmp
push
cltd
dec
aam
ja
dec
jl
push
pop
mov
je
mov
notl
add
outsb
push
ss
mov
push
bound
dec
fisttpl
shrb
int3
xor
nop
jge
cmp
fistps
out
adc
cmp
mov
and
mov
aam
cltd
adc
pusha
int3
daa
mov
jne
pop
or
insb
cwtl
xchg
mov
sbb
cmp
repnz
fcoms
in
stos
aam
in
repz
push
test
lock
imul
in
add
aas
adc
sbb
xchg
xchg
sbb
dec
loop
xchg
mov
fdivrp
mov
and
mov
fidivl
arpl
push
sbbl
fimuls
aas
mov
jmp
divb
xchg
inc
cwtl
mov
mov
pop
xchg
pop
shll
outsb
jmp
xchg
mov
jae
pop
negl
mov
sar
pop
scas
and
dec
popa
repnz
pop
jo
mov
pop
push
incb
movsl
jnp
rcr
adc
lea
pusha
cld
mov
mov
jmp
pop
or
sbb
jns
pop
pop
cwtl
adcl
jle
jge
pop
into
cld
jbe
or
and
call
adc
stos
into
and
rorl
jo
ficoms
adc
pop
ret
and
push
aas
addr16
jmp
adc
cmpsl
int3
or
int
es
sub
divl
push
mov
sbbl
movl
pop
cmp
sub
test
in
lea
push
cwtl
xchg
xchg
push
movsb
xor
aaa
sbb
sbb
mov
mov
pop
cmp
xor
in
in
mov
fidivrl
add
decb
jp
ja
sub
sbb
jp
clc
dec
fcmovbe
repnz
cmp
out
idivb
push
add
lahf
or
push
add
pusha
cli
dec
push
movsb
test
xor
idiv
lods
pop
mov
ret
lret
jge
sub
fnstcw
inc
cwtl
sahf
sti
inc
and
outsb
xchg
push
shl
jge
ja
mov
and
rcll
test
pop
xor
fxch
mov
rorl
in
fsubs
sbb
aad
aas
sahf
test
shlb
out
test
leave
mov
push
xchg
jnp
jne
push
push
push
stos
aas
pop
adc
xor
sbb
xchg
out
outsb
xor
dec
inc
mov
dec
in
push
xor
jnp
pop
lea
inc
or
sbb
bound
jmp
stos
or
pushf
sbb
bound
out
out
push
repz
pop
aas
into
add
nop
add
and
lahf
mov
movsl
jae
adc
sub
pop
add
loope
mov
inc
cwtl
loope
pop
into
jo
mov
xorl
jge
mov
inc
divb
mov
sub
lret
orl
jns
loope
mov
mov
xchg
mov
xor
aam
push
push
jae
add
xor
pop
mov
idiv
or
and
inc
std
repz
icebp
dec
lret
mov
sub
mov
pop
sbb
ret
xchg
out
repz
cmp
je
enter
pop
xor
pop
popa
outsb
aaa
es
mov
push
lods
push
push
aad
dec
adc
adc
lea
add
std
loope
gs
ret
and
test
inc
mov
jl
loop
push
lods
adc
adc
lea
adc
jb
lock
adc
gs
push
pop
mov
jg
in
cmc
loope
add
shrb
inc
out
sub
add
mov
addr16
jo
lahf
cmp
cltd
jbe
ret
xchg
jbe
xchg
arpl
outsl
push
and
aas
int3
mov
mov
mov
pop
fdivs
mul
aad
ss
jns
daa
jmp
mov
push
mov
cli
sub
fcmovnbe
cmp
jb
mov
inc
fmuls
je
jp
mov
sbb
fnstenv
test
mov
out
or
cwtl
cmp
dec
lret
or
xchg
mov
cmpl
sub
loop
cltd
mov
fisttpll
inc
adc
push
lret
loop
cmpsb
enter
cmp
pop
ret
pop
inc
hlt
pop
mov
xchg
sub
mov
fwait
call
adc
mov
or
mov
icebp
or
nop
inc
mov
dec
mov
mov
adc
mov
int
sarl
push
repnz
stos
jl
fidivs
enter
ret
mov
loope
or
mov
fisubrl
js
or
fcoms
inc
outsl
ljmp
xor
cmp
adc
inc
aam
in
daa
mov
in
int3
aaa
or
addr16
push
ret
xor
mov
lar
sub
pop
jp
ret
sbb
mov
daa
mov
je
enter
movsb
cmp
adc
pop
cs
xchg
scas
loop
xchg
shr
mov
push
jge
cwtl
mov
lahf
xor
or
mov
sbb
and
sbb
mov
adc
fldcw
push
ja
push
jnp
mov
jmp
xor
pushf
popa
je
cmp
jbe
cmp
jne
lret
jg
mov
mov
in
mov
bnd
cmc
and
mov
ficoml
push
push
scas
xlat
ljmp
inc
mov
or
adc
std
adc
pop
jp
inc
sub
sub
dec
adc
das
movsl
lret
xchg
sbb
push
pop
arpl
mov
inc
into
movsb
jbe
push
inc
xor
pop
cmc
push
lods
movsl
xchg
sub
out
test
add
jo
mov
sub
sub
jnp
mov
dec
or
pusha
lret
rolb
xchg
movsl
repnz
insb
shlb
mov
out
or
fildll
push
and
bound
adc
inc
mov
aaa
or
xor
test
fidivs
or
je
fs
mov
cmpsl
in
in
add
loope
mov
in
iret
jmp
or
mov
sbb
clc
jmp
or
cmp
pop
lcall
cmp
repz
xor
adc
cld
pusha
pop
push
fldcw
arpl
outsl
sbb
arpl
lret
imul
mov
fwait
pop
mov
jle
js
insl
add
sarb
sti
mov
mov
inc
xchg
inc
rclb
jbe
pop
mov
xor
stc
inc
cmp
daa
sahf
int
cmp
cmp
mov
ss
in
xor
in
and
xor
icebp
stos
das
insl
cld
iret
inc
sub
dec
int
mov
popf
arpl
push
and
inc
addr16
dec
or
lcall
push
or
mov
pop
and
cmpsl
out
cmp
and
pop
add
in
pop
test
bound
out
xor
add
scas
sbb
loop
or
clc
inc
enter
and
lods
and
fsubrs
push
mov
mov
sbb
lret
sbb
mov
icebp
stc
out
fadds
push
mov
sahf
sub
fistps
cmc
adc
addl
ja
push
xchg
sbb
fcomps
scas
inc
cmpsl
cmp
xorb
jne
loop
rcl
xchg
mov
cmp
lock
jle
lea
fnstenv
fucomp
ret
jge,pt
pushf
or
repz
movsb
mov
mov
mov
push
sub
ficoml
pop
scas
sahf
daa
xchg
jne
lods
mov
insb
orl
divl
pop
add
mov
xchg
sbb
xlat
xor
ja
push
data16
andl
fwait
pop
jbe
add
mov
and
jnp
mov
xchg
or
lea
shlb
data16
ja
adc
stos
adc
imul
pop
pop
aam
xlat
fsubl
sbb
sbb
jl
fwait
dec
gs
jae
pushf
or
out
in
jg
sub
jg
ret
scas
lea
mov
xchg
jmp
push
fidivs
jecxz
rcrb
push
pop
ret
mov
iret
leave
shll
test
je
and
cli
pop
fidivrs
lret
test
cmc
icebp
stc
jmp
pop
cmp
mov
bound
popf
les
dec
jp
lcall
push
gs
aaa
pop
test
cmp
ja
bound
dec
popf
popf
jb
pop
cmpb
fstl
jp
cmpsl
call
mov
fdivrs
lahf
std
ret
mov
rcrb
dec
inc
jecxz
mov
lods
xor
outsl
cwtl
mul
cld
add
dec
daa
imul
inc
cmp
andl
sahf
and
popf
add
pusha
int3
leave
ljmp
fadd
pop
std
sbb
iret
in
dec
fcompl
dec
xor
mov
and
bnd
adcb
inc
mov
lret
jl
test
sub
pop
lods
inc
nop
xchg
mov
enter
jo
sar
add
jns
jo
sub
loope
in
loopne
and
dec
pop
aad
lahf
in
es
sub
push
outsb
pop
mov
pandn
jp
inc
or
xor
popf
jnp
rolb
out
mov
negb
inc
mov
xchg
xchg
add
or
and
repnz
xor
lahf
ficompl
mov
pop
push
dec
pop
jne
stc
xlat
aam
and
lock
sahf
das
scas
mov
mov
push
test
fstpl
push
lcall
mov
mov
mov
cmpsb
aaa
aas
gs
and
test
jmp
and
outsb
jns
xor
cmp
jp
frstor
ret
sarb
pop
mull
sbb
mov
fcmovne
aas
push
add
push
push
jl
sub
xchg
test
in
insb
sti
xor
out
pop
das
shl
xlat
in
mov
ljmp
fiadds
nop
sub
push
movsl
jg
and
and
popf
int3
pop
loop
nop
cli
addl
fcoms
clc
repz
inc
imul
push
lods
lret
out
aas
lock
cmp
clc
cmpsb
jnp
aas
ret
aad
loop
jae
ret
dec
jge
xlat
ljmp
mov
sti
std
xor
fcomp
cmp
mov
addb
sub
push
adc
daa
xchg
outsb
push
xlat
sahf
add
jmp
pop
insl
inc
or
cli
push
jo
lcall
fsubs
mov
inc
mov
fldenv
lock
mov
pop
jo
jg
dec
xor
dec
mov
jbe
inc
or
inc
pop
cmp
fdiv
les
add
or
dec
imul
fs
call
or
loope
pushf
fwait
adcb
fdivl
pop
xchg
push
inc
mov
ds
adc
mov
ds
mov
xchg
or
dec
in
pusha
push
aas
fsubl
jp
cwtl
pop
lret
or
in
nop
xorb
ds
icebp
je
cld
pop
cpuid
xlat
movsb
int3
cmp
sbb
xorl
daa
arpl
jle
test
push
jns
add
stos
and
mov
pop
das
test
frstor
cmp
pop
pop
mov
sbb
or
scas
scas
enter
xor
in
sarb
mov
shrl
and
adc
movsl
std
push
sbb
jns
popf
jl
cmp
test
sbb
pop
scas
inc
and
pop
inc
xor
sub
xor
jne
adc
cmp
pop
clc
jle
xor
xchg
daa
test
out
adc
mulb
add
loopne
jecxz
pop
sar
ss
adc
mov
dec
and
iret
jle
dec
mov
xchg
cmp
cmp
xchg
sahf
jnp
and
or
arpl
add
imul
push
cmpsl
roll
cld
lock
mov
addb
cmc
addr16
pushf
test
add
adc
jno
fldcw
or
cmp
mov
lret
mov
lods
mov
repnz
mov
mov
call
dec
iret
fs
loope
dec
sub
call
scas
or
inc
cmp
imul
pop
jns
popa
loope
call
or
and
sub
and
fwait
sahf
pop
out
aam
pop
pushw
push
dec
call
cmp
loopne
push
xor
popa
orl
xor
ret
idiv
lock
pop
jp
dec
xchg
rol
xchg
outsl
xchg
mov
das
or
pop
adc
push
xor
and
adc
test
jae
stc
dec
add
cmpsb
and
pop
icebp
cmpsl
adc
test
jo
mov
outsb
test
fwait
test
stos
mov
mov
popa
js
jg
xor
mov
xchg
scas
ss
sbb
in
fiaddl
xorl
mov
inc
faddl
push
mov
enter
push
xor
dec
xor
sub
push
outsl
jp
imul
cld
and
shlb
popf
movsl
push
jle
sbb
daa
xor
xlat
and
sahf
and
test
pusha
outsl
mov
out
ret
add
loope
outsb
inc
rorl
or
ljmp
push
jo
popf
aas
cmpsb
mov
xor
stos
jno
dec
push
push
xor
or
dec
add
call
adc
add
call
fists
mov
stos
add
dec
sti
repz
shlb
das
inc
mov
test
mov
sbb
ret
or
jecxz
mov
cs
mov
lahf
mov
aad
pop
pop
aaa
xchg
int
ss
test
mov
adc
movsb
out
xchg
js
js
adc
push
xor
addr16
cmp
jmp
into
out
gs
ss
inc
test
or
pop
jecxz
test
sbb
in
dec
stc
pop
outsb
inc
clc
dec
lcall
jp
or
push
mov
sarl
jbe
sbb
inc
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
sbb
add
outsb
icebp
xor
cltd
add
sub
ja
or
repz
out
adc
dec
fbld
jns
or
adc
mov
or
cltd
out
push
push
mov
sti
mov
add
and
in
out
xchg
jnp
add
add
rorb
dec
pop
pop
inc
inc
sti
xor
push
sub
dec
in
mov
clc
and
into
push
movsb
movsl
jp
in
imul
add
sti
mov
xchg
pop
scas
popa
out
cmpsl
sbb
sub
xchg
ss
mov
cmp
xchg
adc
sahf
in
inc
enter
mov
dec
popf
inc
addr16
or
stos
test
jb
push
sti
faddl
sub
aaa
xchg
das
push
mov
push
dec
add
and
pop
sbb
movsb
fnstsw
inc
push
loopne
hlt
mov
cmp
xor
jmp
cmc
pop
rcrl
and
scas
mov
mov
into
inc
sbb
les
out
shll
mov
out
lods
fnstenv
dec
rcr
xor
pop
scas
mov
test
aad
cmpsb
jmp
lock
subps
or
cmp
or
sahf
xchg
mov
fnstenv
testb
jb
out
xor
mov
dec
inc
mov
jne
roll
and
fs
sub
fldcw
repz
push
mov
push
mov
sarb
adc
enter
shlb
jbe
lods
daa
cwtl
mov
inc
inc
leave
mov
sahf
inc
or
ror
sbb
adc
fwait
jge
jns
inc
mov
push
xchg
lcall
dec
and
adc
ficoms
das
inc
ror
mov
push
mov
or
jecxz
inc
inc
sbb
cmp
mov
hlt
leave
inc
enter
jge
repnz
push
adc
or
fnsave
push
mov
mov
cmc
jmp
push
mov
adc
sbb
enter
shlb
lcall
pop
out
sbb
movsl
add
sub
call
scas
or
loop
adc
cmp
push
cltd
dec
aam
ja
dec
jl
push
pop
mov
je
mov
notl
add
outsb
push
ss
mov
push
bound
dec
fisttpl
shrb
int3
xor
nop
jge
cmp
fistps
out
adc
cmp
mov
and
mov
aam
cltd
adc
pusha
int3
daa
mov
jne
pop
or
insb
cwtl
xchg
mov
sbb
cmp
repnz
fcoms
in
stos
aam
in
repz
push
test
lock
imul
in
add
aas
adc
sbb
xchg
xchg
sbb
dec
loop
xchg
mov
fdivrp
mov
and
mov
fidivl
arpl
push
sbbl
fimuls
aas
mov
jmp
divb
xchg
inc
cwtl
mov
mov
pop
xchg
pop
shll
outsb
jmp
xchg
mov
jae
pop
negl
mov
sar
pop
scas
and
dec
popa
repnz
pop
jo
mov
pop
push
incb
movsl
jnp
rcr
adc
lea
pusha
cld
mov
mov
jmp
pop
or
sbb
jns
pop
pop
cwtl
adcl
jle
jge
pop
into
cld
jbe
or
and
call
adc
stos
into
and
rorl
jo
ficoms
adc
pop
ret
and
push
aas
addr16
jmp
adc
cmpsl
int3
or
int
es
sub
divl
push
mov
sbbl
movl
pop
cmp
sub
test
in
lea
push
cwtl
xchg
xchg
push
movsb
xor
aaa
sbb
sbb
mov
mov
pop
cmp
xor
in
in
mov
fidivrl
add
decb
jp
ja
sub
sbb
jp
clc
dec
fcmovbe
repnz
cmp
out
idivb
push
add
lahf
or
push
add
pusha
cli
dec
push
movsb
test
xor
idiv
lods
pop
mov
ret
lret
jge
sub
fnstcw
inc
cwtl
sahf
sti
inc
and
outsb
xchg
push
shl
jge
ja
mov
and
rcll
test
pop
xor
fxch
mov
rorl
in
fsubs
sbb
aad
aas
sahf
test
shlb
out
test
leave
mov
push
xchg
jnp
jne
push
push
push
stos
aas
pop
adc
xor
sbb
xchg
out
outsb
xor
dec
inc
mov
dec
in
push
xor
jnp
pop
lea
inc
or
sbb
bound
jmp
stos
or
pushf
sbb
bound
out
out
push
repz
pop
aas
into
add
nop
add
and
lahf
mov
movsl
jae
adc
sub
pop
add
loope
mov
inc
cwtl
loope
pop
into
jo
mov
xorl
jge
mov
inc
divb
mov
sub
lret
orl
jns
loope
mov
mov
xchg
mov
xor
aam
push
push
jae
add
xor
pop
mov
idiv
or
and
inc
std
repz
icebp
dec
lret
mov
sub
mov
pop
sbb
ret
xchg
out
repz
cmp
je
enter
pop
xor
pop
popa
outsb
aaa
es
mov
push
lods
push
push
aad
dec
adc
adc
lea
add
std
loope
gs
ret
and
test
inc
mov
jl
loop
push
lods
adc
adc
lea
adc
jb
lock
adc
gs
push
pop
mov
jg
in
cmc
loope
add
shrb
inc
out
sub
add
mov
addr16
jo
lahf
cmp
cltd
jbe
ret
xchg
jbe
xchg
arpl
outsl
push
and
aas
int3
mov
mov
mov
pop
fdivs
mul
aad
ss
jns
daa
jmp
mov
push
mov
cli
sub
fcmovnbe
cmp
jb
mov
inc
fmuls
je
jp
mov
sbb
fnstenv
test
mov
out
or
cwtl
cmp
dec
lret
or
xchg
mov
cmpl
sub
loop
cltd
mov
fisttpll
inc
adc
push
lret
loop
cmpsb
enter
cmp
pop
ret
pop
inc
hlt
pop
mov
xchg
sub
mov
fwait
call
adc
mov
or
mov
icebp
or
nop
inc
mov
dec
mov
mov
adc
mov
int
sarl
push
repnz
stos
jl
fidivs
enter
ret
mov
loope
or
mov
fisubrl
js
or
fcoms
inc
outsl
ljmp
xor
cmp
adc
inc
aam
in
daa
mov
in
int3
aaa
or
addr16
push
ret
xor
mov
lar
sub
pop
jp
ret
sbb
mov
daa
mov
je
enter
movsb
cmp
adc
pop
cs
xchg
scas
loop
xchg
shr
mov
push
jge
cwtl
mov
lahf
xor
or
mov
sbb
and
sbb
mov
adc
fldcw
push
ja
push
jnp
mov
jmp
xor
pushf
popa
je
cmp
jbe
cmp
jne
lret
jg
mov
mov
in
mov
bnd
cmc
and
mov
ficoml
push
push
scas
xlat
ljmp
inc
mov
or
adc
std
adc
pop
jp
inc
sub
sub
dec
adc
das
movsl
lret
xchg
sbb
push
pop
arpl
mov
inc
into
movsb
jbe
push
inc
xor
pop
cmc
push
lods
movsl
xchg
sub
out
test
add
jo
mov
sub
sub
jnp
mov
dec
or
pusha
lret
rolb
xchg
movsl
repnz
insb
shlb
mov
out
or
fildll
push
and
bound
adc
inc
mov
aaa
or
xor
test
fidivs
or
je
fs
mov
cmpsl
in
in
add
loope
mov
in
iret
jmp
or
mov
sbb
clc
jmp
or
cmp
pop
lcall
cmp
repz
xor
adc
cld
pusha
pop
push
fldcw
arpl
outsl
sbb
arpl
lret
imul
mov
fwait
pop
mov
jle
js
insl
add
sarb
sti
mov
mov
inc
xchg
inc
rclb
jbe
pop
mov
xor
stc
inc
cmp
daa
sahf
int
cmp
cmp
mov
ss
in
xor
in
and
xor
icebp
stos
das
insl
cld
iret
inc
sub
dec
int
mov
popf
arpl
push
and
inc
addr16
dec
or
lcall
push
or
mov
pop
and
cmpsl
out
cmp
and
pop
add
in
pop
test
bound
out
xor
add
scas
sbb
loop
or
clc
inc
enter
and
lods
and
fsubrs
push
mov
mov
sbb
lret
sbb
mov
icebp
stc
out
fadds
push
mov
sahf
sub
fistps
cmc
adc
addl
ja
push
xchg
sbb
fcomps
scas
inc
cmpsl
cmp
xorb
jne
loop
rcl
xchg
mov
cmp
lock
jle
lea
fnstenv
fucomp
ret
jge,pt
pushf
or
repz
movsb
mov
mov
mov
push
sub
ficoml
pop
scas
sahf
daa
xchg
jne
lods
mov
insb
orl
divl
pop
add
mov
xchg
sbb
xlat
xor
ja
push
data16
andl
fwait
pop
jbe
add
mov
and
jnp
mov
xchg
or
lea
shlb
data16
ja
adc
stos
adc
imul
pop
pop
aam
xlat
fsubl
sbb
sbb
jl
fwait
dec
gs
jae
pushf
or
out
in
jg
sub
jg
ret
scas
lea
mov
xchg
jmp
push
fidivs
jecxz
rcrb
push
pop
ret
mov
iret
leave
shll
test
je
and
cli
pop
fidivrs
lret
test
cmc
icebp
stc
jmp
pop
cmp
mov
bound
popf
les
dec
jp
lcall
push
gs
aaa
pop
test
cmp
ja
bound
dec
popf
popf
jb
pop
cmpb
fstl
jp
cmpsl
call
mov
fdivrs
lahf
std
ret
mov
rcrb
dec
inc
jecxz
mov
lods
xor
outsl
cwtl
mul
cld
add
dec
daa
imul
inc
cmp
andl
sahf
and
popf
add
pusha
int3
leave
ljmp
fadd
pop
std
sbb
iret
in
dec
fcompl
dec
xor
mov
and
bnd
adcb
inc
mov
lret
jl
test
sub
pop
lods
inc
nop
xchg
mov
enter
jo
sar
add
jns
jo
sub
loope
in
loopne
and
dec
pop
aad
lahf
in
es
sub
push
outsb
pop
mov
pandn
jp
inc
or
xor
popf
jnp
rolb
out
mov
negb
inc
mov
xchg
xchg
add
or
and
repnz
xor
lahf
ficompl
mov
pop
push
dec
pop
jne
stc
xlat
aam
and
lock
sahf
das
scas
mov
mov
push
test
fstpl
push
lcall
mov
mov
mov
cmpsb
aaa
aas
gs
and
test
jmp
and
outsb
jns
xor
cmp
jp
frstor
ret
sarb
pop
mull
sbb
mov
fcmovne
aas
push
add
push
push
jl
sub
xchg
test
in
insb
sti
xor
out
pop
das
shl
xlat
in
mov
ljmp
fiadds
nop
sub
push
movsl
jg
and
and
popf
int3
pop
loop
nop
cli
addl
fcoms
clc
repz
inc
imul
push
lods
lret
out
aas
lock
cmp
clc
cmpsb
jnp
aas
ret
aad
loop
jae
ret
dec
jge
xlat
ljmp
mov
sti
std
xor
fcomp
cmp
mov
addb
sub
push
adc
daa
xchg
outsb
push
xlat
sahf
add
jmp
pop
insl
inc
or
cli
push
jo
lcall
fsubs
mov
inc
mov
fldenv
lock
mov
pop
jo
jg
dec
xor
dec
mov
jbe
inc
or
inc
pop
cmp
fdiv
les
add
or
dec
imul
fs
call
or
loope
pushf
fwait
adcb
fdivl
pop
xchg
push
inc
mov
ds
adc
mov
ds
mov
xchg
or
dec
in
pusha
push
aas
fsubl
jp
cwtl
pop
lret
or
in
nop
xorb
ds
icebp
je
cld
pop
cpuid
xlat
movsb
int3
cmp
sbb
xorl
daa
arpl
jle
test
push
jns
add
stos
and
mov
pop
das
test
frstor
cmp
pop
pop
mov
sbb
or
scas
scas
enter
xor
in
sarb
mov
shrl
and
adc
movsl
std
push
sbb
jns
popf
jl
cmp
test
sbb
pop
scas
inc
and
pop
inc
xor
sub
xor
jne
adc
cmp
pop
clc
jle
xor
xchg
daa
test
out
adc
mulb
add
loopne
jecxz
pop
sar
ss
adc
mov
dec
and
iret
jle
dec
mov
xchg
cmp
cmp
xchg
sahf
jnp
and
or
arpl
add
imul
push
cmpsl
roll
cld
lock
mov
addb
cmc
addr16
pushf
test
add
adc
jno
fldcw
or
cmp
mov
lret
mov
lods
mov
repnz
mov
mov
call
dec
iret
fs
loope
dec
sub
call
scas
or
inc
cmp
imul
pop
jns
popa
loope
call
or
and
sub
and
fwait
sahf
pop
out
aam
pop
pushw
push
dec
call
cmp
loopne
push
xor
popa
orl
xor
ret
idiv
lock
pop
jp
dec
xchg
rol
xchg
outsl
xchg
mov
das
or
pop
adc
push
xor
and
adc
test
jae
stc
dec
add
cmpsb
and
pop
icebp
cmpsl
adc
test
jo
mov
outsb
test
fwait
test
stos
mov
mov
popa
js
jg
xor
mov
xchg
scas
ss
sbb
in
fiaddl
xorl
mov
inc
faddl
push
mov
enter
push
xor
dec
xor
sub
push
outsl
jp
imul
cld
and
shlb
popf
movsl
push
jle
sbb
daa
xor
xlat
and
sahf
and
test
pusha
outsl
mov
out
ret
add
loope
outsb
inc
rorl
or
ljmp
push
jo
popf
aas
cmpsb
mov
xor
stos
jno
dec
push
push
xor
or
dec
add
call
adc
add
call
fists
mov
stos
add
dec
sti
repz
shlb
das
inc
mov
test
mov
sbb
ret
or
jecxz
mov
cs
mov
lahf
mov
aad
pop
pop
aaa
xchg
int
ss
test
mov
adc
movsb
out
xchg
js
js
adc
push
xor
addr16
cmp
jmp
into
out
gs
ss
inc
test
or
pop
jecxz
test
sbb
in
dec
stc
pop
outsb
inc
clc
dec
lcall
jp
or
push
mov
sarl
jbe
sbb
inc
dec
sahf
cmp
adc
add
pop
sahf
cmp
sub
cmp
data16
cmp
xor
cmp
jb
cmp
cmp
cmp
jnp
cmp
inc
sahf
cmp
xchg
cmp
movsb
sahf
cmp
mov
cmp
ret
add
sahf
cmp
add
add
ficomps
add
out
sahf
cmp
add
add
push
lahf
cmp
add
add
adc
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
cs
insb
add
jne
popa
jo
cs
insb
add
insl
jo
fs
insb
add
gs
insb
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
add
arpl
pop
jb
jo
add
push
je
push
je
push
